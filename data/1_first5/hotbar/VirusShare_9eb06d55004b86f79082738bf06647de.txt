divl
in
mov
mov
test
inc
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
push
dec
add
xor
aam
xorl
idivb
punpckhwd
add
mov
mov
in
or
push
push
outsb
iret
negl
inc
cld
add
mov
incl
sti
inc
add
add
call
jle
add
mov
mov
mov
mov
lock
add
sti
adc
pushl
sbb
pop
dec
push
fs
jae
and
subb
cs
loop
inc
adc
popa
mov
mul
or
dec
sbb
int3
or
lods
std
push
push
mov
cwtl
in
push
lock
xchg
and
add
mov
fildl
repz
cmp
push
mov
lock
std
outsb
push
push
push
lods
nopl
add
fdiv
fistpl
fstpt
inc
add
test
je
fisubs
sbb
add
pop
mov
push
out
sub
and
loopne
push
rolb
add
or
les
add
sysenter
mov
add
push
dec
in
rclb
cld
jne
les
xchg
dec
add
and
stc
sub
in
push
lock
pop
sub
sahf
or
negb
sbb
adc
call
and
push
push
mov
mov
jmp
mov
pop
lahf
mov
xor
cmp
jge
mov
jmp
out
outsl
push
pop
and
push
inc
inc
dec
push
xchg
jo
push
and
mov
sub
sahf
cmp
adc
xor
test
and
aaa
fstps
das
jb
mov
xchg
add
jnp
xor
and
inc
cmp
jae
mov
cmp
pop
stc
push
mov
out
push
xor
add
and
xor
jae
sub
or
adc
insl
xor
test
adc
add
out
push
jb
sbb
jle
push
decb
lcall
or
adc
mov
test
mov
dec
lock
add
call
cli
and
xor
jmp
fwait
loopne
and
popf
sbb
pop
xchg
gs
xor
fdivl
push
push
pop
fnsave
adc
sub
ret
or
inc
sbb
jo
push
push
out
in
pop
rolb
push
stc
stc
fcmovbe
mov
dec
mov
and
xor
outsb
sbb
add
pushf
adc
addl
in
jl
push
or
enter
or
and
mov
je
mov
fwait
je
sub
add
punpckhdq
mov
cmc
insl
adcl
fs
int3
push
xchg
mov
iret
in
add
stos
inc
jmp
push
cmp
fsub
jnp
aad
lret
sbb
pavgb
push
scas
sbb
push
xchg
loop
loopne
adc
fistps
shlb
adc
jns
mov
sub
sbb
outsb
push
shrb
mov
adc
or
xor
sub
rcll
cmp
movsl
roll
test
in
xchg
jbe
push
repz
jmp
in
movsb
adc
cmp
jo
push
and
cmp
or
or
test
sbbb
inc
lock
pop
jb
xor
repnz
push
pop
ss
adc
cmp
adc
ljmp
add
cmp
sub
sbb
mov
or
mov
add
jmp
adc
fistpll
sbb
roll
jmp
cld
push
aad
repz
push
mov
scas
inc
pop
mov
pop
cs
pop
pushf
addl
test
sbb
clc
jo
out
lahf
lds
push
or
or
sub
sub
out
lea
or
xor
push
pop
push
push
adc
lock
add
mov
add
insb
out
and
notl
mov
pop
test
add
xor
notl
cmp
sub
cmpsl
cltd
lcall
adc
mov
ds
jle
movsl
cltd
mov
out
ficoml
jl
or
sbb
daa
lret
inc
cmp
pop
insl
xchg
rclb
mov
jl
stos
pop
or
adc
mov
int3
cmp
je
adc
mov
lea
mov
mov
aaa
je
and
sub
cmp
cli
mov
jmp
pop
jno
or
inc
insb
sub
add
cmpsb
xlat
icebp
arpl
add
cmpsl
mov
inc
or
mov
hlt
cmp
arpl
inc
icebp
or
xchg
xor
jae
or
add
bound
add
dec
or
jne
mov
out
xchg
sbb
push
cmc
push
stc
or
mov
inc
ljmp
cmpsb
testb
dec
in
xor
jecxz
hlt
jmp
pop
leave
ret
push
mov
fcomps
inc
pushf
ficompl
pop
in
insl
icebp
sbb
aaa
inc
cmpsb
or
cmpb
lock
cmp
jne
pop
mov
sub
fs
cmpb
je
sub
dec
pushl
pop
in
sub
and
rclb
adc
pop
jecxz
inc
adc
mov
arpl
je
mov
lds
xchg
push
push
push
mov
sbbb
cld
loop
sub
loopne
mov
push
fisttps
sub
call
mov
test
jne
fs
inc
cmp
mov
aam
ds
adc
pop
push
insl
popa
sbb
pop
jmp
cmp
fsubrs
jl
adc
mov
ret
mov
or
mov
push
dec
add
pop
push
sahf
pop
pop
bound
and
mov
mov
les
sub
jmp
push
cld
std
jns
add
add
push
dec
push
andl
lds
xor
add
roll
jl
push
mov
cmp
pusha
adc
push
push
push
and
sbbb
pop
pop
ret
push
sbb
shr
cmp
jmp
into
outsb
ja
and
push
dec
mov
mov
stc
test
jne
pop
ja
cld
pop
push
sub
sbb
dec
inc
not
mov
pop
or
jne
js
sub
pop
cmp
mov
jge
push
pop
hlt
daa
jecxz
out
cwtl
cmp
je
jecxz
jl
test
add
sub
aaa
clc
fwait
mov
lea
push
mov
imul
cld
std
ja
add
jmp
mov
addr16
into
sub
mov
push
inc
leave
ret
imul
dec
icebp
cmp
cmp
push
add
cs
mov
or
std
or
adc
inc
xor
jmp
inc
pop
adcb
mov
or
stc
jne
jns
sbb
mov
jmp
xchg
in
add
dec
xor
lcall
inc
repz
cld
loop
lcall
ja
lea
decb
pushl
cmp
mov
xchg
pop
popaw
fsub
shl
gs
pop
pop
arpl
adc
inc
out
push
pop
xor
out
loopne
xchg
add
fcoml
sub
cmp
pop
cwtl
rcl
mov
mov
push
movsb
das
sahf
push
xchg
jle
je
pusha
fisubrl
dec
mov
cmpsl
cmp
pop
mov
pusha
lret
ss
inc
out
jo
push
push
popl
adc
sbb
pop
pop
xchg
mov
loopne
je
arpl
mov
sbb
add
inc
sub
ret
jle
inc
add
xlat
sbb
push
sub
popa
mov
push
mov
cmp
pop
lock
rorb
adc
into
je
cmpl
pop
mov
cmp
or
sti
push
jne
push
push
imul
fcmovnb
jl
pop
jmp
fmuls
xor
cmp
loop
pop
cmp
leave
push
inc
sub
inc
or
pop
xchg
call
jge
xlat
adc
fidivrl
inc
clc
jg
pushf
loope
mov
add
xor
shrl
stos
fwait
in
int3
mov
and
push
mov
or
inc
or
shlb
adc
ret
outsl
faddl
sbb
faddl
mov
mov
cmpsb
je
inc
pop
and
adc
sbb
and
inc
divb
mov
adc
test
or
popf
pop
pop
fisttps
add
adc
adc
mov
push
lds
shrl
sbb
loop
pushf
mov
push
fdivrp
mov
mov
test
push
shlb
adc
mov
adc
lods
in
mov
jge
inc
or
push
or
sub
loop
add
aad
cmp
cmp
sbb
pop
xchg
cmp
pushl
push
cmpl
jle
push
cmp
jmp
mov
mov
add
ret
rol
mov
push
out
cmp
inc
mov
lea
cmp
push
and
mov
shll
imul
add
or
test
das
push
adc
adc
daa
in
test
ljmp
pusha
fimuls
jge
jo
jnp
bound
hlt
mov
pop
push
or
push
lock
cmp
mov
cmp
ret
lret
or
adc
jge
iret
iret
repz
sarb
cmp
xlat
push
adc
adc
xor
cs
add
dec
or
lea
lock
add
push
mov
sbb
inc
fcmovnbe
jp
mov
dec
pushf
dec
sbb
jo
xor
and
cmp
dec
add
adc
mov
es
not
pop
pop
jmp
mov
or
xor
jecxz
push
movl
sbbb
dec
dec
adc
sbb
test
add
and
pop
in
lock
pop
stc
test
je
lds
std
jno
cmc
in
pusha
pop
andb
pop
loopne
movsl
push
xor
inc
mov
push
sbb
pop
and
sbb
pop
dec
add
adc
iret
xchg
nop
cmp
add
push
pop
sbb
inc
and
cli
add
or
sbb
das
or
adc
cmc
add
in
push
movsb
les
push
push
sarb
cs
inc
adc
dec
imul
sbb
or
push
and
frstpm(287
fadds
sbb
or
sbb
pop
add
add
das
loop
sub
data16
mov
adc
pop
jb
mov
ret
push
dec
ficoml
repnz
and
pushf
or
adc
pop
sub
cwtl
lods
dec
or
enter
out
addr16
xor
cmp
ja
or
lahf
out
outsl
pop
sbb
and
stc
adc
cmp
popf
cmpl
inc
pop
sbb
push
cmp
mov
outsl
hlt
mov
push
cltd
pop
testl
add
push
sbb
lock
je
pop
mov
xorb
xchg
mov
sub
add
cmp
les
jbe
call
std
jge
mov
cmp
and
jmp
fisubrs
mov
push
pop
dec
je
inc
adc
in
jge
adc
imul
test
jmp
cld
inc
inc
mov
jo
mov
adc
sti
jae
or
iret
ret
jmp
jp
mov
nop
jecxz
pop
jne
mov
and
loopne
outsl
sub
add
stc
or
insb
xor
add
inc
add
aad
push
add
mov
scas
adc
ficoml
mov
mov
xchg
adc
push
mov
pmaxsw
cld
sbb
mov
mov
in
std
mov
pop
and
push
or
add
sub
jo
jno
aad
js
pop
cld
push
in
in
repnz
jg
ficompl
jmp
mov
adc
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
notl
push
leave
adc
adc
xor
dec
fsubrl
out
fstpl
imul
je
into
jle
shrb
jmp
and
mov
or
sbb
pop
bound
aam
push
cmp
cmp
pop
js
ror
ds
repz
cltd
movsb
scas
push
push
jge
mov
lret
aad
cmc
jp
xor
xor
cmp
lock
adc
push
push
pusha
aaa
cmp
adc
and
cmp
or
clc
movb
sbbl
adc
cs
xchg
adc
hlt
test
push
das
fisubs
dec
mov
pop
push
lea
push
adcl
xor
xchg
fdivrp
cmp
mov
in
aam
les
addr16
or
xchg
dec
push
inc
in
popfw
jge
mov
cld
adc
movl
push
xchg
ret
in
imul
ja
push
sbb
xchg
dec
xor
mov
jo
and
dec
dec
ficompl
add
rclb
add
stos
mov
push
ja
mov
sub
jo
dec
shrl
pushf
lret
test
testl
repnz
sbb
jmp
or
and
pop
nop
or
mov
inc
out
nop
sub
mov
adc
and
sahf
mov
arpl
in
jl
mov
mov
imul
je
jmp
pop
test
cmp
cmp
mov
rclb
mov
and
add
dec
mov
mov
dec
push
mov
mov
jnp
adc
in
push
push
cmp
loope
add
nop
jnp
push
push
push
mov
mov
aas
iret
cmp
das
push
push
push
xchg
push
loop
add
lods
push
sub
sahf
dec
jp
or
add
mov
mov
lea
je
in
mov
test
mov
lea
jle
fwait
in
and
cmpl
add
mov
sbb
cs
sbb
lds
cli
hlt
dec
pusha
imul
xchg
push
ljmp
adc
clc
push
in
decl
popf
xor
mov
pushl
mov
adc
sub
mov
dec
adc
mov
ss
dec
std
dec
daa
push
negl
pop
cld
je
in
mov
dec
call
cltd
sub
sar
add
bound
mov
dec
in
cmp
push
mov
xor
mov
add
mov
inc
adc
dec
cmp
mov
pop
leave
test
sbb
xor
cmpsl
inc
insl
and
pushf
inc
pop
sub
mov
push
repz
mov
mov
sbb
icebp
pop
or
and
sub
and
mov
mov
mov
jno
mov
inc
js
sub
rorl
mov
neg
sbb
and
and
dec
incb
lock
in
rclb
inc
int
jbe
mov
dec
inc
cmp
dec
or
jno
lahf
push
insb
mov
sbb
aas
ret
push
cs
lea
cmpsb
inc
mov
sbb
and
test
aas
mov
sbb
adc
loop
fld
mov
call
cmp
pusha
ljmp
dec
pop
jo
inc
add
jbe
sbb
push
clc
sbb
punpckhdq
mov
inc
push
loope
jge
jmp
pushl
and
repnz
adc
push
cmp
push
sbb
jbe
jg
test
daa
sbb
inc
mov
mov
cmp
pop
das
jmp
cmpl
je
cmpl
fidivl
adc
dec
je
in
sbb
mov
cmp
cwtl
pop
push
add
jp
pop
das
add
jmp
mov
add
xchg
andl
sub
leave
or
fnstenv
push
lods
bound
sti
stc
test
push
sahf
mov
js
push
push
sbb
jnp
jecxz
sub
cmp
hlt
movb
pushf
or
lock
inc
cmc
mov
fldz
enter
dec
sbb
scas
in
pop
dec
and
mov
ret
dec
inc
mov
mov
push
xor
aad
mov
je
loopne
xchg
pop
fs
jmp
test
cmp
push
test
inc
pop
loopne
mov
mov
mov
push
mov
mov
sbb
dec
inc
test
jns
xchg
jle
or
cmp
lea
mov
push
outsb
pop
jbe
adc
jo
pop
pusha
cmp
mov
mov
sub
shlb
push
and
fmuls
add
hlt
jns
push
jp
push
enter
adc
loope
push
pop
insb
xor
rolb
fs
or
xor
cmp
or
mov
push
adc
pop
xor
cmp
or
scas
jo
cmpsb
dec
lock
pop
push
addr16
sbb
sub
test
xlat
call
xor
addb
adc
cmpl
mulb
and
inc
mov
or
lock
sbb
mov
ret
aaa
faddl
sub
inc
imul
inc
dec
fldl
fmull
fidivrl
push
cs
mov
and
pop
push
jae
adc
mov
leave
lock
jo
sub
movsl
pusha
add
mov
orl
into
rcrl
shlb
push
inc
mov
or
js
sahf
jecxz
push
pushf
and
and
mov
cmp
arpl
or
arpl
dec
push
add
push
sbbl
test
scas
add
lods
cmp
xlat
sbb
stos
fcoms
jle
xchg
or
arpl
mov
roll
inc
adc
cmpl
cmp
in
imul
mov
and
sbb
add
or
imul
test
push
adc
pop
sub
cld
cli
cmp
push
je
cmpb
dec
je
jo
cmp
cwtl
pop
sarl
and
jmp
stc
inc
pop
xor
mov
jmp
push
push
cmp
cmp
add
cmp
ret
adcl
push
test
inc
test
pusha
rcrl
shlb
mov
scas
mov
loopne
push
add
add
in
adc
lcall
sbb
lcall
and
sbb
popa
dec
push
mov
fs
into
mov
sub
out
jo
pusha
popa
ds
jecxz
and
outsb
cltd
cmp
and
and
popl
push
cwtl
adc
mov
imul
and
fistpll
mov
add
sar
push
cmp
dec
or
adc
jl
dec
lret
sbb
mov
or
lock
fistps
mov
adc
mov
fidivrl
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
aaa
xor
mov
add
jne
fstp
and
push
jbe
adc
jmp
mov
dec
insb
cmpsl
int
das
loop
jmp
mov
xor
and
sbbl
xlat
aaa
les
lea
insl
rorl
out
and
ja
push
or
pop
pusha
push
ljmp
movsb
sti
sub
clc
je
test
push
cli
or
cltd
idivl
mov
xchg
test
ljmp
rcr
mov
jl
icebp
pop
imull
fs
or
xchg
arpl
mov
idiv
sub
test
or
jbe
lahf
xor
stc
repnz
sub
sbb
mov
add
inc
jle
add
std
out
xor
xchg
imul
cmp
aas
mov
sub
jge
jmp
mov
mov
hlt
fildl
pusha
or
add
lock
fdivl
xor
mov
fdivrp
mov
dec
sub
mov
mov
cmpsb
fists
inc
fsubp
or
xchg
movsl
push
xorl
out
add
inc
mov
mov
cmpb
or
clc
fidivl
push
mov
jmp
outsb
mov
mov
sahf
lods
jmp
loopne
jnp
jne
pop
add
jl
dec
lcall
addr16
mov
aad
inc
mov
adc
test
sbb
or
je
sbb
push
adc
jo
sbb
mov
adc
je
mov
pop
push
mull
sbb
lret
je
jbe
imul
pop
and
jne
jo
sbb
shrl
repz
jle
add
push
push
push
pop
sti
cmp
cmp
adc
pop
push
fwait
xor
mov
push
ret
mov
add
out
clc
test
call
ficomps
in
sbbb
add
pop
mov
pop
xor
xchg
dec
push
jne
loopne
xchg
cmpxchg
xchg
mov
adc
mov
pushf
loopne
movb
scas
jmp
leave
push
rorb
clc
leave
xchg
pop
push
cmp
out
push
inc
pop
push
pop
add
dec
or
push
mov
loope
inc
add
mov
push
iret
mov
test
pop
mov
push
jns
cmp
dec
mov
sub
pop
sbb
add
push
cmp
or
lea
loop
loope
mov
in
pop
adc
add
xor
push
jg
jg
mov
push
popa
push
enter
sbb
ret
dec
mov
xor
adc
push
xchg
lock
insb
adc
fs
xchg
jmp
loopne
pop
repnz
rcrl
add
mov
jl
sbb
movnti
sbb
dec
push
mov
or
sbb
xchg
ds
rol
push
or
xchg
jl
xchg
and
or
lock
jno
andl
mov
jno
xor
lea
sahf
lods
je
mov
pop
cmp
pop
add
push
xchg
clc
jbe
cmp
xchg
decl
xchg
roll
cmp
sbb
mov
sbb
dec
adc
pop
add
test
loopne
adc
mov
sub
pop
test
jmp
decb
adc
dec
nop
lock
hlt
mov
sub
adc
add
call
pushf
lods
push
mov
sbb
int
int3
add
adc
das
repz
jb
jge
dec
mov
push
addr16
imull
mov
or
inc
push
push
lcall
lret
mov
mov
push
push
push
icebp
negb
sbb
fdivrs
lods
adc
imul
xor
lret
sub
test
push
pop
pop
mov
je
ror
cli
sub
clc
or
and
push
je
pop
or
aaa
and
je
lahf
push
push
cmp
out
mov
or
adc
sahf
pop
fucomip
ret
xlat
sbbl
roll
lahf
add
and
std
xor
or
movl
sub
fisubl
movl
loop
push
mov
xchg
mov
jmp
sbb
cli
popa
pop
add
ja
outsl
xlat
gs
arpl
and
lods
push
rclb
out
add
sbb
or
shll
outsb
loope
add
pop
push
in
jg
lods
and
xchg
ret
out
mov
rorb
test
add
xchg
lock
pop
mov
push
ret
jne
mov
outsb
les
jbe
sbb
sub
mov
jmp
dec
mov
arpl
jp
or
mov
outsb
xchg
sbb
mov
gs
and
mov
fiadds
push
xor
cmp
jnp
and
lahf
aaa
mov
xchg
clc
jae
push
nop
or
add
int3
fadds
jecxz
sbb
inc
or
repnz
ror
inc
push
add
jb
sbb
jl
sub
leave
adc
lods
movsb
sub
xor
sbb
clc
mov
ds
mov
pop
pushf
mov
insl
lcall
mov
mov
lret
xor
mov
mov
call
mov
ds
push
pop
mov
sbb
dec
adc
cmp
jecxz
or
push
movsl
jno
test
pop
push
inc
fadd
push
push
xor
pushl
les
inc
repz
fimuls
or
sbb
insl
lock
je
cmpb
cltd
adc
repz
adc
mov
leave
xchg
arpl
fsubrs
push
cmp
dec
pop
mov
sbb
cltd
pop
or
stos
or
repnz
inc
and
add
cmp
dec
and
inc
or
ficoml
push
sub
and
jne
std
sub
or
orl
in
mov
icebp
sub
ja
add
push
jnp
sbb
shll
popf
inc
pusha
mov
push
pop
jne
mov
call
cmpb
dec
outsb
addr16
jnp
sbb
stc
sub
push
sub
andb
sbb
mov
fadd
ret
or
pop
sahf
pop
call
add
enter
jo
cltd
test
in
sub
jp
out
fdivrs
lahf
pop
sbb
mov
mov
lds
cltd
or
fmuls
and
shl
daa
add
sub
psubd
fdivl
and
sbb
inc
adc
pop
cmpl
cmp
pop
aam
roll
fsubrs
rcll
aam
in
mov
aaa
jl
pop
mov
and
mov
test
into
lock
jmp
push
push
imul
cmp
sub
adc
xor
int
fdivrl
inc
xchg
adc
bound
inc
inc
test
and
pushf
jmp
loopne
jo
pop
and
add
add
call
sub
fsubl
push
mov
hlt
sbb
add
enter
aam
add
roll
add
push
into
shll
sbb
ljmp
in
push
pop
pop
xor
neg
sbb
bnd
xor
inc
and
insl
mov
jo
dec
push
sbb
inc
sub
aam
push
icebp
pop
dec
inc
sub
jle
lahf
rolb
and
pop
mov
add
jb
iret
lds
push
sub
add
stos
std
sub
cmpsl
das
frstor
mov
mov
sbb
mov
pop
adc
sub
mov
add
into
out
jo
dec
push
lahf
hlt
and
pop
push
mov
jle
adc
bound
orl
out
mov
mov
jecxz
lods
jo
jmp
loope
ja
rcl
add
lds
push
lret
shr
adc
pushf
sbbb
sbb
push
push
xor
lcall
loope
incl
sbb
movsb
inc
adc
fs
or
pop
dec
sub
imulb
add
mov
pop
xor
sbb
push
lcall
push
loope
mov
xor
mov
inc
fildl
dec
lret
mov
push
imul
pop
push
sub
mov
push
mov
ds
lea
push
rcrb
movsb
adc
add
inc
adc
sub
sub
add
mov
and
or
jo
inc
sbb
pop
cwtl
push
stos
sub
mov
pusha
rolb
adc
dec
and
dec
push
xchg
lds
adc
push
inc
jecxz
xor
lods
cmpsb
and
jp
scas
orb
inc
adc
push
push
mov
xor
shrl
xlat
or
ja
or
ljmp
push
stos
loope
or
daa
and
adc
add
sti
xlat
cmpl
add
rclb
add
pop
daa
sub
pop
inc
push
add
add
decl
stc
loope
push
daa
sldt
sbb
pop
cltd
in
pop
push
xor
and
sub
lahf
or
mov
shrl
dec
dec
mov
sbb
xchg
sahf
xchg
pop
repnz
sbb
cmp
xor
mov
dec
test
and
sub
jo
mov
mov
inc
add
js
scas
jno
add
ljmp
sub
lods
in
adc
pop
lods
shlb
sub
outsl
mov
push
or
jbe
stos
xor
push
arpl
inc
or
pop
ss
aas
ds
adc
or
push
addl
std
je
mov
jmp
xor
js
pop
pop
mov
pushf
cli
sbb
fistpl
lahf
push
adc
or
imul
xor
jg
adc
in
insb
push
mov
sbb
in
dec
mov
cld
adc
push
outsl
adc
js
jo
sti
and
filds
xor
cwtl
hlt
adc
pop
lcall
cmp
pop
jl
jo
test
lret
dec
or
add
rorl
inc
push
fnstsw
or
ret
mov
dec
nop
mov
inc
and
idivb
jo
jle
decl
add
clc
pop
mov
sahf
cmp
je
jg
mov
mov
rorb
add
arpl
jbe
mov
lret
sub
sub
adc
into
lahf
lea
or
push
or
jae
pusha
shlb
adc
push
fnsave
orl
and
ret
shll
outsl
int
jnp
outsl
testb
mov
testb
movsb
and
mov
inc
dec
out
mov
pop
jae
test
enter
xor
or
jecxz
inc
sahf
dec
or
or
xchg
out
mov
add
leave
xor
sbb
inc
in
inc
cli
inc
xor
cli
add
in
pop
adc
in
cmpsl
cmp
or
in
or
or
jns
pop
jae
add
dec
xchg
arpl
sti
mov
int3
std
pop
jl
dec
sub
bnd
or
push
repnz
pop
cli
ja
pop
lds
in
int3
rorl
notl
push
inc
rorb
inc
sahf
lret
out
test
dec
dec
push
in
ret
sub
or
and
mov
ffreep
inc
push
lret
sarl
xchg
inc
adc
js
ficoml
xchg
dec
sbb
add
jo
cld
push
outsb
xor
ljmp
push
mov
les
cmpsb
int3
add
adc
fcoms
addl
xorb
jg
in
pop
jmp
adc
sahf
out
inc
adc
push
cmp
push
pop
or
fildl
inc
xchg
jl
call
repnz
sbb
inc
add
movsb
xor
xor
add
cmp
adc
adc
call
mov
mov
pop
notl
lret
jae
mov
jp
lahf
pop
pop
adc
adc
add
jo
pop
pop
out
test
fsubl
sbb
push
cmp
adc
shll
pop
bound
leave
dec
push
in
push
test
inc
dec
pop
rcrl
mov
stc
fsubl
aad
sbb
daa
adc
adc
iret
mov
lods
sbb
popf
inc
jp
push
jnp
icebp
pop
data16
push
inc
insl
sub
ret
jnp
mull
pop
add
lea
andl
push
mov
xor
xor
xor
addr16
aaa
shl
movups
jae
icebp
adc
lea
pop
je
movsb
fstl
test
in
mov
fs
rcll
out
mov
or
or
xchg
sub
adcl
adc
push
cld
xchg
insl
inc
fsub
int
push
jbe
cmp
das
pushl
push
and
sbb
sbb
in
and
mov
inc
sti
test
nop
movsb
dec
jb
and
sbb
dec
cmp
fbld
cmp
jne
push
adc
ret
push
ret
leave
int3
cmp
test
jge
push
pop
inc
or
add
jl
movl
mov
subb
push
and
out
push
push
orb
pusha
sub
mov
test
sbbb
xor
inc
add
inc
pusha
dec
adc
push
lock
rcr
inc
cli
jl
add
test
aad
je
push
and
rorl
pop
xchg
imul
adc
fs
dec
gs
pop
fisubl
jo
dec
ljmp
cmp
and
out
jecxz
mov
xor
rcll
cmp
movsb
or
loop
add
outsl
jmp
ret
push
fimull
cmp
inc
push
lock
sbb
movb
inc
add
pop
xchg
xor
push
mov
lahf
sarl
fs
add
nop
jns
into
mov
movsb
xchg
in
hlt
test
pop
out
add
ljmp
lods
cmp
cmpsb
xor
outsb
mov
sbb
add
push
mov
dec
daa
mov
pop
cltd
aad
js
add
or
adc
sub
sar
inc
mov
out
sbb
push
and
ja
mov
cmp
cmpb
adc
mov
and
ret
xchg
inc
dec
add
push
pop
orps
or
inc
dec
lock
pop
adc
cs
testb
cld
fildl
mov
push
cwtl
fisubrl
or
jge
xor
push
pop
mov
add
sub
or
dec
sub
push
xchg
popf
push
outsl
xor
mov
jb
pushf
add
and
jb
or
and
sub
fmuls
popa
xor
or
leave
repz
push
push
jp
cmp
adc
mov
adc
data16
test
push
and
or
jp
loopne
popl
cmp
or
dec
inc
rcrb
push
push
add
push
dec
in
inc
xchg
dec
ljmp
mov
clc
cmp
setne
pop
repz
sti
scas
out
aas
aas
push
push
push
sub
dec
or
cmp
jne
push
push
push
xor
loopne
jno
inc
jmp
inc
jno
pop
add
shlb
js
inc
pop
rclb
and
mov
test
pop
stos
lods
mov
lea
xor
push
sbb
sub
divl
pop
sbb
pop
xor
dec
mov
jecxz
dec
aaa
add
sete
jne
push
fisubrs
daa
push
or
adc
push
sbb
add
popl
push
insb
sub
mov
and
pop
jnp
adc
movsl
test
push
mov
movsl
fwait
rcrb
or
insl
inc
subl
add
lods
adc
xchg
stos
sbb
orb
cmp
mov
push
je
xor
or
dec
or
sbb
and
inc
in
push
or
imul
testb
arpl
push
sub
lret
sbb
fimull
outsl
and
lret
push
or
xchg
jp
lret
add
inc
cmp
inc
cmpsb
xchg
xchg
adc
ja
xchg
adc
outsl
jmp
xor
push
or
shll
and
popa
lock
mov
mov
ret
mov
daa
sub
in
insb
repnz
loop
jne
into
scas
xchg
xor
fcmove
mov
aad
aam
xchg
xchg
nop
jle
in
inc
out
mov
imull
iret
mov
in
stos
mov
push
push
mov
lret
xor
mov
xor
pop
push
je
cmp
or
rclb
movzwl
lahf
mov
mov
pop
push
in
push
scas
add
stos
push
sti
out
push
cmpsl
test
adc
push
pop
jmp
inc
adc
roll
imul
push
cli
add
cmc
push
cmp
leave
jb
mov
ret
cmc
adc
add
insb
and
add
sbb
and
push
clc
fadds
ret
scas
icebp
sbb
inc
push
mov
cwtl
add
sbb
adc
mov
push
pop
lods
ja
sarb
jb
xrelease
pop
add
push
cmp
add
or
cmc
sub
dec
dec
popf
sub
xor
mov
push
push
pop
es
fmuls
push
sti
adc
xchg
clc
xchg
aas
mov
cmp
inc
add
adc
mov
ret
jno
cmpb
rol
inc
out
test
xchg
xchg
mov
stos
push
into
dec
sahf
sub
and
into
cld
icebp
xchg
in
shlb
xchg
xchg
add
lret
mov
jmp
and
popa
add
aam
pop
sbb
lds
inc
lret
dec
test
stc
mov
popf
sti
daa
ja
mov
xchg
test
or
cmp
into
lock
mov
push
adc
shll
sbb
or
fbstp
lea
add
cmp
jae
push
sub
cmp
fcomps
es
push
cmp
fmull
add
out
push
sub
add
cmp
clc
jnp
cmp
dec
hlt
jge
mov
test
mov
aam
lock
test
jle
fldl
jmp
cmp
push
ljmp
pusha
pop
incl
popa
pop
test
jecxz
and
push
test
dec
hlt
jg
loope
shl
or
cmc
or
jmp
call
popw
mov
hlt
mov
loop
lahf
and
xor
adc
imul
push
pop
movsl
and
je
pop
or
loopne,pn
decl
add
pop
or
lock
sub
push
nop
mov
outsb
loope
cmp
lock
pusha
dec
enter
ljmp
roll
xorb
and
test
mov
lcall
fdivrs
cmpsb
mov
push
movl
into
clc
dec
sub
jl
lock
and
push
cmpsb
cmp
or
pushf
jge
or
push
or
pop
mov
sbb
mov
and
add
sub
fimuls
and
mov
jo
dec
adc
inc
pop
pop
pcmpgtd
sahf
push
sti
jecxz
loopne
lret
ret
jbe
add
aam
fistpll
testl
xor
push
test
pop
mov
xchg
add
mov
pop
push
push
sbbl
cwtl
push
outsl
pop
sbb
pop
add
and
ficomps
push
cli
or
sahf
test
sub
andl
or
aam
insb
add
movsb
jb
lea
jl
popf
int
cli
stos
mov
push
xchg
mov
lock
mov
ljmp
int
cmp
pop
es
push
cmc
pop
xor
sbb
jne
rol
xchg
xor
clc
pusha
insb
push
ret
add
repnz
aam
jle
sub
mov
push
dec
scas
push
cmp
outsb
push
mov
mov
outsb
or
sub
or
xor
repnz
jbe
inc
pop
adc
inc
push
push
jmp
jbe
push
xchg
fs
xchg
ljmp
ds
adc
test
dec
or
fadd
mov
lret
inc
cmp
mov
lods
addb
pop
jg
test
jecxz
daa
pop
je
fistpl
push
jp
mov
pushl
jle
lods
push
dec
dec
rol
popf
add
cmpsb
jb
lret
mov
cmp
mov
add
in
push
push
popf
cmp
cmp
test
imul
add
cld
xchg
stc
sub
adc
jbe
sbb
mov
adc
decb
push
push
dec
cmc
xchg
push
fsubrp
or
int3
sbb
push
scas
add
fcom
mov
cmpsb
and
and
push
jecxz
adc
jne
mov
mov
adc
lret
push
sti
sbb
push
jmp
in
adc
mov
push
dec
mov
rcrl
pop
adc
xchg
mov
mov
xchg
fdivs
adc
movsl
mov
mov
add
push
and
or
pop
leave
das
movsb
or
sbb
dec
inc
and
cmp
lret
loopne
hlt
push
adc
ret
adc
shr
push
cmpb
add
add
jbe
icebp
and
imul
adc
sbb
insl
ja
insl
push
int
call
cmp
dec
add
mov
push
jne
and
jno
sti
mov
mov
pop
inc
in
jno
aad
jne
sbb
push
jmp
gs
insl
out
or
sbb
gs
nop
adc
adc
cmp
rcll
sbb
es
mov
jo
lahf
sub
sbb
sbb
inc
les
pop
lods
push
xor
lods
or
in
loope
mov
test
add
cmc
jmp
movl
jl
popa
jmp
push
iret
fimuls
push
push
fs
in
dec
or
lods
loopne
or
pop
sbb
add
sbb
cmc
add
pop
mov
push
nop
push
and
jmp
insb
mov
shll
dec
or
pop
jns
ja
ja
sub
push
push
sbb
or
add
pop
sub
rclb
mov
push
loopne
cwtl
push
loopne
or
mov
or
add
adc
mov
test
add
stos
cltd
mov
add
jle
cld
add
outsl
ds
call
js
shlb
add
push
xor
xor
jnp
xchg
aam
pop
mov
add
arpl
jns
sbb
lods
arpl
loope
icebp
inc
add
jmp
push
push
push
inc
daa
fdivl
scas
mov
nop
push
bound
add
shlb
push
cmp
sub
pop
and
inc
cli
push
or
or
loopne
add
or
popa
or
push
andl
push
add
pop
pop
push
in
xchg
jl
xor
stos
xor
aad
pushf
xchg
or
jmp
jp
pop
cmp
rcl
stos
cmp
xlat
test
cltd
aas
insb
cmc
add
xor
fsubrs
andl
push
mov
imul
or
repz
rorl
pop
jp
ffreep
pop
lea
pop
daa
js
lret
frstor
aaa
mov
adc
add
sub
mov
xorb
mov
push
popf
cmpl
and
sub
pop
stc
add
push
push
mov
dec
sbbb
push
loop
xchg
adc
lods
lcall
addb
nop
mov
leave
loopne
jno
pop
out
lea
add
xorl
or
je
pop
mov
ret
push
mov
jge
or
pop
and
xor
inc
das
cmp
call
adc
push
in
inc
dec
push
add
push
outsl
xor
imul
aam
dec
pop
ja
adc
test
gs
btl
sub
je
xor
and
add
jne
xor
push
xchg
inc
sub
push
cld
cld
call
jge
push
lock
pop
or
test
add
ds
clc
mov
push
mov
push
jl
push
xchg
jle
and
lea
push
lock
aas
mov
pop
cld
sub
mov
imul
push
push
stos
jo
fimuls
ficompl
lock
call
es
cmp
loop
or
hlt
shr
adc
or
add
imull
icebp
add
iret
push
push
add
push
fcoml
xlat
mov
fstps
dec
jp
mov
add
add
or
push
mov
cmpsl
xlat
test
pusha
rorb
cmp
jb
push
call
pop
pop
dec
shlb
or
arpl
jae
push
fistpl
sbb
sub
push
push
pop
lret
jge
add
mov
push
test
rcll
fdiv
cmc
test
adc
adc
loope
imul
sahf
xchg
add
jne
cmpb
add
push
or
imul
negb
mov
cmp
je
jl
call
leave
mov
and
pusha
movzwl
jmp
cmp
xchg
push
cmp
pop
and
mov
sub
jle
sub
sub
push
sub
test
pop
pop
inc
pop
sub
dec
outsl
jmp
pop
shrb
sarb
push
ret
adc
push
out
into
popa
sub
jecxz
cmpsb
xor
scas
push
test
push
add
push
sub
add
in
inc
or
ljmp
mov
cmp
je
push
lea
push
fnstcw
dec
push
inc
arpl
cmp
inc
adc
push
sbb
cmpb
sbb
xor
sub
sarb
gs
mov
loop
xlat
push
aas
push
adc
cmp
inc
cmpsl
test
inc
sbb
stos
and
je
pushf
bound
push
clc
add
hlt
push
in
inc
lods
mov
sub
push
mov
neg
push
xorl
lea
and
pop
in
push
mov
sbb
xchg
mov
lock
lods
mull
test
ja
test
jbe
dec
sar
movsl
push
push
xor
push
push
cmp
je
fcmovbe
push
push
xchg
pusha
or
aam
push
xor
push
mov
adc
xchg
fdivrs
fnsave
push
aas
and
sub
int3
sub
test
mov
jmp
dec
push
push
xor
cs
fdiv
mov
imul
sbb
sbb
and
dec
into
push
push
xor
push
test
loopne
in
test
lret
push
out
cli
js
pop
loop
ss
sahf
into
gs
movsb
mov
sbb
xchg
push
and
mov
loopne
imul
cmp
xor
je
mov
ficoms
xor
add
pop
insb
pop
or
and
and
js
adc
or
push
mov
add
jb
pop
test
cmp
inc
sbb
xor
mov
jmp
jns
movsl
push
and
cmp
cmpb
mov
jb
lock
cmp
push
lea
in
cmp
je
cmp
je
cmp
jne
rorb
cld
add
cmpsb
mov
stos
add
je
into
call
outsb
or
cmc
enter
jl
mov
mov
cmp
xor
adc
movsl
ret
adc
mov
pop
clc
jp
loopne
jo
mov
cwtl
sahf
mov
mov
das
or
lea
cmp
jne
xchg
adc
add
and
stos
ret
mov
push
mov
mov
or
jp
pop
jnp
sub
aad
cmp
subb
sub
sub
add
mov
pop
pop
rorb
fs
leave
ret
out
mov
add
add
inc
aaa
xor
xorb
or
ja
xchg
sub
sbb
daa
dec
jae
inc
aaa
popa
push
inc
test
push
call
in
dec
je
add
push
sbb
ljmp
push
pop
push
inc
pop
lret
sarb
fldl
add
leave
je
bnd
jmp
jge
cmpsb
in
xor
xchg
mov
mov
cmp
add
jg
jne
mov
cmp
gs
je
cmp
jne
mov
sbb
add
jne
inc
ficoml
inc
lock
mov
pop
dec
sub
in
jns
or
movsb
jne
jmp
testb
lcall
adc
sbb
ljmp
jbe
xchg
lea
shl
push
mov
cmp
fs
dec
inc
jmp
inc
and
or
loopne
pop
xor
pop
mov
mov
adc
dec
fwait
int
sub
lahf
ficoms
sub
pop
lea
inc
imul
gs
in
inc
xor
fstpt
insb
inc
cmpl
ss
imul
insl
notb
cmp
push
stos
mov
clc
je
sub
movb
cmp
or
ja
sarb
enter
xchg
cmp
sub
add
push
cmp
push
pop
adc
mov
pop
lahf
or
outsl
int
inc
sub
popa
loop
jne
sahf
gs
mov
add
fs
inc
insl
aad
mov
pushw
mov
add
and
jb
cmp
imul
add
jmp
cwtl
aas
jmp
iret
int
mov
inc
orl
push
fsubrs
in
jns
test
jne
xor
imul
sub
lods
rclb
dec
or
add
pop
jae
mov
sti
cmp
dec
shlb
cld
jbe
xchg
fsubs
lea
cld
daa
add
inc
ljmp
outsb
xor
push
sti
shl
pop
pop
ror
cmp
jg
or
jge
out
testb
sub
jle
mov
jle
sub
and
pop
cmp
jl
pop
jle
pusha
mov
pop
imul
pop
jp
jb
jbe
mov
test
iret
out
add
fwait
and
or
je,pn
test
jne
loopne
iret
lds
and
xchg
jae
adc
sub
dec
cli
inc
jg
jae
movb
inc
mov
push
sub
push
sbb
jne
cmp
aas
xchg
inc
sub
mov
ficomps
inc
and
je
adc
fsubrs
inc
outsl
push
mov
push
mov
mov
jp
inc
es
and
aam
push
or
insb
add
push
cmp
les
sub
jg
adc
mov
or
xor
push
add
xor
mov
push
inc
and
data16
xor
xor
lret
add
dec
fcmovbe
mov
shl
js
jae
out
add
mov
cmpsl
sub
xchg
fisubs
insl
mov
push
sub
cmp
jmp
add
movb
push
inc
lea
sub
xor
mov
add
push
mov
in
pop
stos
pop
cmp
subb
mov
div
in
loopne
inc
das
mov
or
xchg
lods
popf
pop
pop
inc
cmp
pop
cwtl
xor
lock
inc
mov
dec
pop
jle
incl
pusha
cmp
insl
xchg
iret
outsb
push
push
inc
and
dec
rol
jae
mov
out
xchg
sbb
cmp
je
test
adc
adc
mov
fsts
sti
mov
sbb
ret
or
clc
jbe
pop
mov
dec
mov
xchg
adc
cmp
push
and
dec
pop
add
call
or
movb
aam
xor
pop
adc
or
test
adc
inc
or
add
inc
inc
cli
sbb
cmp
cmp
add
adc
data16
add
mov
scas
push
or
add
sahf
push
cmp
and
lock
popa
push
pop
add
mov
hlt
inc
xchg
xchg
push
cwtl
and
loop
shll
add
cmc
jne
or
xchg
mov
or
add
sub
lcall
mov
lock
inc
lds
cwtl
and
jmp
cmp
dec
adc
mov
xchg
xchg
or
sbb
push
jp
xor
sbb
shrb
cltd
add
shrb
or
into
push
mov
adcb
in
sub
cmp
aaa
adc
mov
xchg
jne
lahf
push
jb
jb
cwtl
addl
xchg
xchg
pop
sbb
xor
jbe
xor
or
or
popa
xchg
jne
iret
push
leave
mov
cmp
or
xchg
cmp
and
inc
and
dec
sbb
jle
and
aas
add
xor
jle
setne
or
add
inc
and
imul
mov
add
aam
rorl
push
push
aam
xchg
test
in
mov
xor
loop
lods
xchg
add
push
in
cmpsb
add
andl
jne
push
shlb
sub
add
jne
adc
push
push
fdivl
jne
sbb
cmp
add
movl
add
nop
push
enter
add
imul
adc
mov
add
fiaddl
xchg
push
push
mov
pop
xchg
cmpsb
mov
inc
psubsw
lods
jmp
cmp
je
mov
cld
mov
jge
inc
inc
inc
xchg
and
in
loope
jge
pop
and
aaa
sbb
das
mov
inc
jne
cwtl
xchg
lock
dec
mov
rorl
adc
push
aam
into
outsb
add
jmp
jle
test
jo
push
push
andl
dec
movsl
inc
fsubp
inc
push
cwtl
mov
jbe
jmp
insb
jne
jl
sub
ret
jp
sbb
call
pushl
jmp
lock
cmp
je
lea
cmpb
cmp
jne
cmp
je
or
jne
push
loopne
pop
adc
pop
mov
mov
inc
incl
fsts
call
data16
iret
cmp
lock
jne
movsb
push
adc
out
cs
xchg
sub
lock
jge
cmp
cmpl
movsb
clc
je
jmp
add
lds
fidivrl
push
and
and
or
mov
cmpb
sahf
or
jbe
das
ret
or
sub
sbb
cmp
push
push
ret
dec
sbb
dec
ret
dec
test
insb
cmp
orl
and
dec
loope
or
movsl
jne
fsubl
dec
iret
test
mov
fildl
cmp
xor
test
jb
dec
mov
sub
xor
ds
lret
cmp
inc
mov
mov
mov
add
xor
mov
lret
adc
push
sbb
lock
pusha
inc
push
push
mov
add
das
mov
mov
push
cmp
and
xor
push
loopne
mov
jbe
cmp
sub
and
movsl
loopne
mov
xchg
push
sub
xor
xchg
lret
in
xor
cmp
add
pop
cmp
fildll
cmp
sbb
pop
ret
sti
aaa
dec
or
jnp
je
movsb
push
ss
aam
in
add
in
add
sub
imul
out
add
out
xor
adc
ds
and
rclb
aam
cmp
js
push
jnp
jb
jnp
enter
sub
in
pop
and
cmc
jmp
push
push
std
cmpsl
in
push
push
cmpsb
sub
push
push
add
js
jo
xchg
sahf
insl
pusha
int3
mov
pop
mov
lds
sub
xchg
nop
cmpsb
or
sub
in
dec
addl
sub
or
pop
inc
dec
movl
pop
cmp
js
or
jo
mov
xchg
inc
inc
inc
xchg
insb
roll
inc
cs
test
mov
in
sbb
or
or
or
popa
pop
lcall
sbb
pop
jg
xor
or
dec
xor
lock
ds
push
push
loopne
in
jne
pushf
add
xor
mov
cmc
or
fadds
fbstp
add
push
lcall
hlt
cmp
add
stos
ja
call
push
cmpl
mov
call
jl
popl
xor
jmp
pushl
add
mov
xchg
mov
lea
mov
faddl
xchg
xor
shll
or
cmp
outsb
bound
lea
imul
lock
cmp
mov
dec
inc
or
sbb
push
cmp
in
xchg
rclb
push
inc
xorl
inc
fsub
in
in
or
adc
jo
mov
pushf
loope
mov
sbb
out
xchg
iret
ret
mov
orb
outsb
lock
aam
add
lret
pop
imul
popf
mov
mov
sbb
push
adc
rcr
ret
data16
idiv
lods
adc
push
adc
pop
iret
xchg
or
daa
shlb
pop
fcmovb
sub
or
pop
mov
push
loop
or
fsubrl
fstl
or
mov
nop
sbb
lahf
icebp
mov
test
add
cmp
dec
ret
xchg
sub
add
push
cmpsb
sub
push
lcall
cmp
add
xchg
push
jns
loopne
jns
xchg
loopne
cs
pop
sub
repnz
push
jl
cld
rol
arpl
or
adc
cltd
inc
mov
popa
push
dec
in
adc
pop
or
scas
mov
cld
mov
out
loopne
sub
ja
arpl
and
sbb
adc
or
loop
aaa
cmpsl
add
js
sub
and
push
pop
mov
mov
movl
lods
aaa
adc
add
push
xor
imul
dec
sbb
push
xor
ret
dec
cmp
nop
les
pushf
or
cmpsl
incb
xchg
jl
popf
add
ljmp
sub
add
daa
aam
sbb
or
mov
push
sti
xlat
jb
js
pusha
mov
dec
adc
cmp
shlb
jmp
add
add
icebp
iret
pushf
push
mov
shll
sahf
xchg
push
mov
xchg
pushl
ficoml
push
movl
or
cli
add
sub
popf
mov
lods
push
test
add
and
sub
lock
movsl
add
pop
add
arpl
shrb
inc
mov
loope
sub
pop
or
ficomps
adc
and
sahf
cmp
sbb
jecxz
dec
cmp
jecxz
sbb
pop
dec
add
push
mov
fisttps
into
mov
ret
aaa
push
addl
or
or
ret
or
mull
loope
pushf
mov
mov
inc
add
and
and
cmp
add
rcrb
jl
pop
pop
add
stc
mov
insl
subl
mov
andl
lea
sbb
dec
pop
cs
push
cmp
ljmp
pop
fisubrs
loopne
pop
pop
orl
lods
xchg
mov
je
push
leave
sbb
inc
xchg
push
dec
out
clc
xchg
sbb
lret
pop
icebp
cmpsl
sub
push
lret
dec
mov
add
or
push
push
sbb
cmp
sub
inc
adc
xchg
cmp
and
jb
mov
test
dec
mov
xor
adc
add
loopne
add
push
and
movsb
sti
jle
sbb
inc
push
insl
inc
dec
icebp
push
jb
inc
push
or
rcr
cmpsl
clc
cmp
xchg
jbe
push
xor
jecxz
data16
push
pop
cmp
push
mov
xchg
push
mov
pop
pop
mov
jge
iret
enter
shrb
test
mov
push
mov
popl
nop
es
das
enter
push
call
stos
sbb
and
adc
call
lahf
xchg
data16
int3
loopne
xchg
out
and
stc
iret
filds
adc
mov
push
inc
cwtl
mov
pop
sbb
imul
push
test
es
push
bound
pop
inc
fbstp
adc
les
mov
pop
neg
pop
or
or
out
push
lods
rolb
test
sub
mov
cmp
das
mov
or
or
pop
ret
sub
push
dec
popf
push
mov
xchg
add
sbb
mov
repz
jmp
or
in
push
xchg
sahf
push
sub
or
sub
cmovle
cmpsb
clc
repnz
fdivs
enter
add
xchg
mov
push
scas
ss
shlb
pop
pop
inc
xor
adc
loopne
dec
loop
pop
pushl
lock
adc
pop
jo
xorl
jle
pop
push
popf
fdivp
pusha
nop
push
rsm
xchg
sarb
aaa
pop
adc
sub
adc
add
push
test
mov
push
push
hlt
cmp
aam
mov
icebp
mov
scas
jbe
insb
mov
cmc
and
add
mov
pop
movsl
adc
ds
add
xchg
adc
rclb
mov
lahf
or
icebp
cmp
jne
fistl
or
pusha
adc
inc
jne
sub
pop
dec
or
and
adc
jnp
and
pop
int
rcll
jge
pop
or
sbb
push
add
and
jge
jbe
mov
sbb
inc
inc
dec
stos
insb
and
jl
rclb
mov
fwait
mov
mov
jge
add
and
pop
sub
sbb
jns
frstor
push
pop
dec
cmp
call
rorb
insl
rorl
sub
sub
push
or
sub
and
fwait
out
jge
test
sub
js
orb
add
pop
cmp
test
sbb
movb
dec
push
or
sbb
pop
push
mov
sbb
ss
and
push
jne
xchg
movsb
sbbb
push
shll
shlb
testb
pop
mov
int
push
cmp
pop
add
push
sbb
dec
enter
fcoml
sbb
sbb
xor
add
and
repnz
dec
ret
push
addr16
in
call
or
call
cmp
mov
lea
push
cmpb
or
pop
mov
pop
xor
xor
pop
xor
and
jo
ss
adc
iret
xor
sbb
ret
mov
and
rorb
mov
dec
stos
push
inc
add
loopne
add
inc
movsl
pop
test
xor
cmp
sub
int
cmp
adc
cmp
mov
jno
cltd
imul
clc
xchg
aam
push
mov
xchg
call
mov
adc
arpl
pop
xlat
add
daa
jne
sub
pop
xor
adc
sbb
mov
xlat
or
sbb
ss
movsb
add
sub
pop
xor
and
xor
sub
adc
push
dec
pop
mov
sub
pop
and
dec
dec
push
mov
inc
enter
add
aas
sub
and
xor
and
pop
adc
xchg
nop
or
ds
inc
mov
cmpsl
inc
xor
mov
aas
add
cmp
add
jnp
shll
incl
and
pop
push
hlt
xchg
add
sub
je
shrl
add
fcmovu
ljmp
cli
push
add
push
jns
push
out
push
xor
fmull
aas
fsubs
test
sbb
dec
pop
call
xor
movsb
lcall
xor
inc
mov
in
dec
xlat
mov
andl
sbb
or
xor
xchg
subl
xor
repnz
adc
add
mov
jmp
loop
pusha
inc
mov
lods
lock
andl
imull
sub
xor
jb
ss
add
push
adc
enter
mov
xchg
inc
push
shlb
push
jmp
ret
xchg
scas
dec
xor
xor
jno
sbb
sub
cmp
mov
sbb
push
mov
pop
or
mov
push
push
push
cmp
insb
jecxz
xor
mov
shl
test
push
fisttpl
cmp
jne
push
inc
clc
and
std
add
or
scas
jl
sbb
jb
fs
add
mov
push
push
popf
in
push
jno
cmp
dec
mov
xchg
pushf
jl
pop
inc
sahf
jp
pop
push
adc
cmp
mov
lods
popf
fdivs
inc
dec
cmp
and
daa
icebp
inc
xor
pusha
xor
movl
xor
xlat
mov
and
adcb
pop
mov
cwtl
mov
mov
and
in
aad
jp
jge
pushf
add
lret
or
and
mov
outsl
das
pop
push
pop
jae
sub
sahf
pop
repnz
jecxz
or
outsl
scas
aam
imul
inc
fildl
and
adc
inc
aam
ror
inc
aam
or
popa
nop
dec
in
loopne
jge
inc
jg
repz
call
repnz
push
mov
stos
repz
in
xchg
mov
out
fsubl
inc
out
pop
push
pop
outsl
ret
xchg
repnz
lret
or
lcall
les
fadds
aaa
rorb
enter
movsb
int
popl
sbb
xchg
inc
enter
stos
mov
pop
jo
rorl
mov
rorl
or
xchg
das
mov
inc
mov
xlat
decl
orl
or
and
jmp
cmp
clc
aaa
sub
push
push
or
cld
dec
add
cmp
adc
dec
fmuls
sbb
insl
popa
mov
enter
sahf
shlb
sub
add
mov
lahf
xor
or
cmp
push
mov
jecxz
and
or
inc
daa
push
aad
pop
cmp
or
ja
fs
cmpb
int3
loopne
sbb
xor
push
addl
inc
sbb
dec
movsl
pop
jge
sub
aaa
sbb
xchg
pop
rorb
inc
mov
out
xchg
xchg
add
pusha
cmpsb
jo
cmp
jae
test
add
inc
mov
and
push
lods
loopne
out
adc
pop
lock
pusha
pop
loopne
sub
jge
jno
pop
call
loopne
scas
add
jecxz
insl
pop
rcl
ret
or
mov
je
push
push
and
inc
sub
lods
in
in
nop
or
mov
jle
sbb
movsl
mov
test
push
daa
std
insl
cmp
cmp
aaa
cwtl
pop
and
mov
fwait
push
sub
push
jge
xor
mov
and
icebp
push
dec
cmc
cmp
adc
addb
xchg
call
pop
or
push
jle
fistpll
movsl
cmp
les
sub
jbe
mov
aas
mov
jmp
and
xor
push
aaa
fsubp
sar
cmpsb
push
jmp
insb
test
loop
aad
test
pop
add
mov
ret
mov
nop
inc
adc
lea
push
addb
and
push
es
test
inc
lret
inc
sbb
add
adc
pop
cmpsb
pop
add
mov
or
push
pop
shr
fsubrs
test
mov
mov
test
or
movsl
and
xchg
mov
sbb
js
rcrl
sub
add
mov
mov
mov
xor
in
cli
cld
test
sarl
arpl
mov
push
lcall
cmp
jns
and
jno
jmp
insb
push
movb
jne
cld
into
shr
ret
xchg
movzbl
push
xor
add
push
imul
fs
je
xor
mov
xchg
push
pushf
ficoms
xor
test
jne
popf
movsb
mov
xor
pop
leave
pushf
mov
in
dec
push
jmp
push
and
mov
xor
push
inc
sub
mov
movsb
icebp
jne
mov
sub
lea
push
lea
push
inc
push
mov
mov
adc
or
ret
sbb
enter
fnsave
sbb
arpl
or
jecxz
outsb
loopne
mov
fiadds
jg
cs
outsb
sbb
and
pop
cmp
loope
inc
lods
mov
or
add
or
add
mov
push
push
mov
insl
aad
out
dec
mov
push
jge
aas
fwait
adc
jb
cmp
aad
inc
aam
in
jge
cmp
jne
push
test
ret
int
push
test
insb
xchg
cmpsb
aam
popf
out
sbb
or
adc
jle
push
fidivrl
int3
adc
jle
decb
loope
sbb
ss
cmp
je
mov
inc
cmp
cmp
xchg
push
push
push
and
pusha
mov
into
mov
push
push
enter
adc
push
test
adc
cli
loop
sbb
ficompl
jo
in
mov
out
cmpsb
add
mov
mov
imull
mov
or
adc
jo
add
xchg
fs
decb
or
in
je
cwtl
jbe
mov
pop
jnp
mov
mov
lret
inc
dec
mov
pop
pop
je
mov
roll
pop
cli
cmp
cmp
jbe
cmp
jbe
mov
sbb
mov
mov
lock
cs
mov
ds
sub
push
sbb
fisttpl
mov
adc
mov
daa
jno
or
add
adc
and
lock
mov
enter
adc
cmpsb
lea
popl
lea
gs
add
cld
push
jl
mov
cwtl
ret
mov
xlat
adc
mov
loopne
add
sub
cs
fadds
inc
jmp
lea
ss
bound
sub
pop
pop
in
inc
in
mov
pop
push
xlat
movsb
mov
dec
fistpl
lock
insl
xor
stc
fdivrs
cmp
mov
add
lea
daa
mov
push
arpl
adc
jl
sbb
sbb
and
and
ja
and
sbb
test
cmp
jb
mov
mov
ret
cwtl
sbb
and
push
cmp
sbb
stos
or
ds
aas
jl
or
cmpsl
jmp
mov
sub
in
je
les
lcall
mov
inc
cmp
jb
pushl
sub
loop
push
dec
pusha
lea
cmc
jg
flds
mov
mov
push
daa
fstps
and
mov
rcr
dec
sbb
sbb
xor
push
aad
mov
rcrb
sbb
and
sub
or
inc
cld
or
lret
into
insb
jnp
popf
jg
fwait
mov
cmp
outsb
movsb
xchg
lea
daa
sbb
add
or
jge
xchg
dec
shrl
fadds
mov
call
push
insb
and
mov
lock
cmp
mov
das
sub
mov
aas
aad
adc
inc
lea
lea
shrb
decl
sub
adc
dec
mov
xor
cmp
inc
inc
inc
shrl
andb
inc
es
cmc
and
stc
xor
aaa
jb
fsts
fdivrl
mov
push
pusha
mov
les
ffreep
das
mov
jl
inc
jecxz
push
or
aam
aaa
mov
sar
cmp
push
fadd
hlt
cmpb
inc
out
insl
xor
sbbl
push
sbb
xor
mov
cmp
mov
mov
int
movsl
dec
inc
jbe
cmp
stos
push
ret
ret
out
sti
jo
push
dec
cmp
repnz
adc
xor
sbb
pop
cmp
jne
pop
imul
fnstcw
jl
adc
mov
cld
test
into
push
and
in
sub
cmp
jb
adc
fs
dec
mov
popa
xchg
dec
jp
movsb
xor
mov
dec
stos
outsl
loope
adc
addb
inc
xor
inc
or
sarb
inc
ss
xor
or
cmp
jne
mov
imul
jmp
ljmp
rolb
push
nop
loopne
add
aam
addb
mov
adc
sbb
adc
ret
ds
into
jo
stc
jmp
or
inc
mov
add
sbb
xor
mull
or
jecxz
and
int
outsl
imul
fbstp
sarb
jmp
mov
jo
lcall
mov
xchg
jg
cmp
jle
jge
cmp
into
or
pop
add
and
add
testb
pop
icebp
outsl
nop
stos
cli
jmp
pop
sbb
ja
push
push
je
or
or
das
add
add
adc
and
fistps
add
out
pop
fistpll
or
add
cmp
jle
aas
lds
sti
sub
or
mov
ret
xchg
cld
jmp
pop
lock
call
mov
dec
lea
and
stos
cmc
outsb
sarb
jge
ret
mov
mov
movq
test
pop
push
int3
sahf
add
rcl
or
dec
adc
filds
mov
movzwl
cs
or
test
subb
arpl
xchg
cmp
or
adc
pop
push
pop
mov
mov
pop
push
push
or
and
clc
dec
mov
inc
xchg
push
idiv
mov
jg
ds
push
push
aas
les
mov
pop
push
pop
ja
insb
jmp
rcrb
les
push
pusha
pop
cmpb
mov
jecxz
or
pop
push
mov
push
xchg
fs
mov
add
rclb
pop
inc
outsb
ljmp
sbb
das
lods
push
movsl
xchg
adc
mov
xor
loope
mov
pop
pop
popf
sti
sub
and
popf
testb
fcoms
pop
pop
dec
jecxz
shlb
stos
push
scas
rolb
mov
xchg
add
incl
enter
xchg
shlb
or
adc
dec
mov
pop
pop
sbb
cmp
adc
xor
nop
jnp
pop
bound
adc
out
sub
dec
pop
xchg
ror
movsb
mov
mov
pop
lcall
jle
dec
or
pop
ffreep
ja
je
jle
adc
mov
mov
int
push
sub
jne
cmp
cs
js
jb
pop
push
mov
cmp
push
fs
rclb
lods
mov
mov
mov
hlt
push
mov
xchg
pop
pop
push
xlat
loopne
mov
shll
push
pushf
jle
rolb
mov
sbb
fdivrs
aaa
icebp
and
lock
fidivl
adc
sub
mov
mov
sbb
mov
inc
or
in
mov
ret
push
jno
jo
lods
or
and
xor
push
dec
push
enter
insl
xor
bound
loopne
fdivr
std
mov
int3
aad
test
dec
jno
xchg
inc
adc
notl
add
ret
fsubrl
xor
mov
sbb
mov
or
lret
pop
jbe
ret
scas
cs
scas
es
add
fidivrs
test
test
push
int3
nop
adc
je
or
lea
pusha
push
inc
ja
mov
push
jp
loop
push
test
xor
inc
xchg
test
push
dec
xlat
adc
in
je
cld
xor
ficoms
pusha
bound
xor
sub
push
cmp
aam
pop
cld
lret
mov
ret
xlat
mov
adc
outsl
push
sbb
and
jb
push
push
fsubp
repz
mov
mov
mov
mov
sub
pusha
add
loope
xchg
mov
or
clc
inc
xlat
mov
lea
or
and
fsubrs
mov
lods
jge
inc
mov
or
push
data16
cmp
ja
xor
inc
mov
pushl
push
sbb
xlat
jmp
and
aam
out
pushf
lret
cmp
imul
scas
testb
rorb
or
out
sarl
mov
idiv
js
int
pop
dec
inc
cmp
mov
or
jp
sub
cmp
jge,pn
mov
imul
imul
in
adc
mov
or
push
mov
xchg
ss
xor
add
xchg
int3
cmpsl
mov
cwtl
lods
repz
push
std
jle
test
imul
push
add
inc
dec
jo
inc
xor
dec
sbb
popa
cmp
sbb
inc
je
xor
pop
or
aaa
pop
cld
pop
cmp
je
mov
notb
mov
and
cs
inc
dec
cmp
jnp
adc
jo
fstpt
or
jl
jmp
jmp
mov
sbb
mov
std
addl
push
mov
fildl
out
xor
add
rcrb
jb
push
in
add
jbe
inc
cmp
sub
dec
sahf
ja
or
cmp
popa
cwtl
movsl
and
pop
in
pop
jecxz
xor
ljmp
cmpsb
imul
mov
rcrb
cmp
or
ja
outsl
mov
inc
scas
pop
or
sahf
jmp
mov
lea
orl
jns
xor
sarb
dec
daa
decl
add
enter
sarb
jae
fucomip
call
lea
jmp
cmpl
inc
cmp
jbe
mov
in
jb
xor
xor
test
lahf
sub
lods
cld
mov
push
jmp
sub
in
and
sub
mov
lock
mov
sub
add
rorb
sbb
xchg
scas
push
adc
cmpb
ss
mov
insb
dec
cs
call
es
add
add
movsl
mov
les
lahf
addb
mov
pop
loope
and
mov
sbb
push
sbb
lahf
inc
push
add
cmp
push
mov
sub
mov
mov
mov
pop
add
sub
cltd
shl
in
xchg
mov
pop
cmp
movsl
or
ficomps
fcomps
into
movsl
les
push
add
cltd
popf
jno
and
mov
repnz
mov
movsb
inc
fcompl
xor
add
mov
sbb
xchg
lock
xchg
les
mov
mov
pop
inc
hlt
mov
sbb
dec
outsl
mov
test
sbb
or
lods
idiv
sahf
xor
cltd
sbb
test
sub
add
enter
je
mov
lea
mov
inc
and
sbb
enter
aad
pop
loopne
jae
push
lea
mov
jbe
jbe
test
addb
sbb
jmp
push
or
add
test
fwait
andb
enter
fwait
fwait
or
xor
mov
insb
xlat
mov
into
in
cld
orl
cld
or
cmp
shlb
std
outsb
xor
es
mov
xchg
sub
enter
pop
sub
lock
and
xor
or
cmpb
add
cmp
and
jne
xchg
out
daa
dec
cmp
pop
or
iret
js
test
sub
jmp
dec
cmp
insb
in
andl
adc
sar
cmp
test
aam
jns
sbb
xor
pop
rorb
arpl
pusha
mov
push
and
cmp
es
xchg
lahf
add
lret
or
sub
pop
or
jnp
cmp
or
cmp
test
cmp
jbe
outsl
mov
sbb
dec
inc
jns
dec
dec
clc
jne
sti
int
imul
aaa
js
mov
sub
lea
out
cmp
stos
es
sub
dec
xor
lahf
rorb
sbb
xchg
cmp
hlt
negb
scas
jns
or
push
xchg
or
pop
inc
add
dec
pusha
push
cwtl
lea
add
mov
fxtract
jne
mov
js
fistl
inc
or
cld
loopne
fnstenv
mov
shrl
es
adc
in
add
nop
data16
jb
fcmovbe
cld
clc
pushl
cmp
mov
inc
loope
lods
fwait
pop
xchg
loopne
dec
adc
out
data16
mov
out
xor
cmpsl
sti
sbb
pop
add
cmp
mov
mov
pop
lods
xor
iret
je
mov
xchg
inc
cmpsl
or
lds
les
fs
xchg
cmp
in
lods
and
inc
mov
or
mov
lods
ret
adcl
punpcklwd
jge
test
inc
fnstcw
bound
or
pop
fildll
daa
pushf
inc
jne
dec
or
stc
mov
xor
xor
add
pusha
sub
mov
cmpl
jne
cmp
push
clc
imul
mov
lock
jbe
push
add
ret
sbb
dec
mov
mov
rorb
frstor
xorl
cmp
or
jmp
in
ret
xchg
cmpsl
mov
jne
push
push
mov
lock
sub
jnp
fcmovnu
ffree
aas
mov
lea
insl
in
adc
xlat
mov
mov
lods
push
cmpsl
shlb
push
sbbb
xchg
inc
and
in
xchg
shll
je
adc
dec
and
loope
cmp
mov
inc
adc
jne
aam
in
movzbl
push
mov
or
push
xchg
es
and
ret
add
xchg
dec
push
inc
push
xchg
jge
mov
cmp
mov
jb
loope
push
pop
push
or
mov
pop
push
pop
mul
seto
push
sub
enter
lods
adc
pop
xor
adc
mov
xor
lret
rol
scas
mov
mov
or
cld
push
std
fimuls
loop
xor
mov
or
hlt
push
fwait
movsb
xchg
add
mov
mov
pop
cli
movsb
nop
iret
mov
stos
incl
lret
add
lret
jge
ret
push
mov
orl
jo
and
mov
mov
cmpsl
orb
inc
test
adcb
mov
mov
imul
push
lods
mov
mov
and
test
sarl
cmpb
mov
jg
push
addb
jl
jmp
and
and
ret
adc
mov
mov
negb
push
jmp
cmpsl
and
or
xchg
sub
push
je
xchg
nop
pop
mov
inc
lock
dec
pusha
sbb
sub
movsb
inc
jl
xor
add
repz
out
into
jmp
ret
push
dec
imul
xchg
fiadds
xchg
push
xchg
test
in
insb
negl
jne
inc
cmp
jae
cmp
je
cmp
xor
sub
cmp
dec
add
sti
mov
xlat
clc
and
jle,pn
mov
insl
or
jb
push
pop
add
les
cmp
and
pop
mov
andl
icebp
inc
cmp
out
je
cld
and
pop
test
inc
jmp
push
push
mov
push
je,pt
add
pop
and
inc
xchg
and
aaa
push
hlt
iret
and
push
adc
std
jle
lea
sahf
mov
inc
mov
testb
cmp
pop
enter
jo
add
mov
outsl
dec
add
adc
roll
push
testb
scas
jne
dec
mov
push
and
inc
sbb
add
gs
sub
ret
jae
jmp
xchg
adc
gs
push
cld
mov
arpl
pop
add
dec
fists
enter
popf
sbb
pop
mov
cmc
mov
aad
mov
lds
cmp
and
add
movb
sbb
hlt
je
and
mov
cmp
adc
fpatan
insb
jne
in
in
jl
cmp
nop
cwtl
ficoms
out
mov
mov
imul
aas
je
mov
inc
jl
and
jns
cmpsb
test
out
out
jle
jae
popl
or
jge
jmp
sub
out
clc
jno
repnz
mov
pop
mov
or
decb
push
sbb
icebp
or
repz
xchg
inc
fidivs
sbb
or
sbb
sub
push
or
sub
sbb
or
jns
or
sti
pusha
loop
push
xor
lea
or
repz
rol
test
jmp
outsl
loopne
and
in
xchg
jb
pcmpeqw
fdivrl
push
pushl
push
xchg
and
lahf
cli
jnp
cltd
cmpsb
push
cltd
lcall
pop
or
jb
test
pop
push
and
jns
dec
cli
rorl
sub
sarl
sbb
push
out
xchg
mulb
adc
xor
movsl
jnp
jmp
mov
aam
popf
xor
test
fsts
add
lds
inc
stos
cmc
fadds
add
mov
cmp
jb
jnp
movsl
sbbl
mov
roll
int
fcomps
rorb
jbe
mov
mov
inc
jmp
cmp
mov
pop
cmp
fadds
dec
andl
icebp
fdivs
imulb
mov
out
lods
ds
je
dec
adc
push
loopne
into
jo
outsb
pop
lea
js
fld
cwtl
push
lea
push
ret
fidivl
addr16
add
icebp
mov
pop
ret
add
popa
xor
inc
cmp
pxor
push
lcall
js
in
rclb
addr16
cmovg
jmp
movb
scas
add
int3
cmp
sub
loopne
inc
gs
adc
or
lahf
int
mov
ljmp
push
enter
push
cmc
xchg
shlb
sbb
push
inc
jmp
sbb
das
adc
test
mov
dec
dec
das
incb
mov
or
insl
pop
sbb
mov
mov
or
sti
fdivrs
pop
or
jae
daa
pusha
xorl
enter
cmp
lea
shll
sub
clc
cltd
fistpll
movsl
in
insb
int3
add
mov
push
insl
call
add
cld
jb,pn
push
mov
sbb
jo
call
enter
enter
fildl
cmp
add
lods
and
add
fcompl
mov
dec
test
sbb
lea
ljmp
or
sarb
mov
je
jecxz
sbb
inc
mov
insl
push
mov
cmpsb
jge
addr16
cmpl
adc
mov
imul
xor
xchg
or
data16
jnp
or
or
stos
sub
cmp
pop
push
call
cwtl
les
adc
dec
sub
imul
mov
jbe
stos
ret
mov
test
mov
or
pushl
jmp
mov
lods
sub
fsubl
adcb
push
push
inc
adc
push
cld
mov
mov
sysret
fcoml
mov
test
push
icebp
sti
add
push
out
push
push
mov
aas
bnd
mov
pop
adc
mov
jne
cmpb
ret
push
jae
lea
push
add
inc
mov
cmp
add
ja
inc
pushf
sub
xor
or
dec
pop
ret
outsl
dec
enter
or
or
mov
call
inc
adc
insl
sbb
or
mov
in
test
push
shlb
cmp
push
fstpl
cmp
jae
inc
jmp
push
or
mov
mov
and
ret
movb
add
add
dec
pop
dec
fcom
sub
mov
adc
cmpsl
shlb
push
add
add
cmp
mov
lahf
divb
dec
not
jb
add
loopne
icebp
test
adc
jp
pop
push
push
dec
mov
mov
or
mov
test
les
pusha
in
or
pusha
lods
xchg
cmp
es
adc
and
aaa
sub
xchg
xchg
pop
mov
addb
in
push
mov
mov
imul
pop
pop
lea
clc
enter
adc
or
add
push
enter
and
add
mov
fwait
mov
leave
dec
push
and
or
inc
dec
lret
push
mov
jb
movsb
pop
jbe
pushl
push
insl
xor
je
mov
or
sbb
adc
jg
cmp
ja
cmpb
push
push
or
add
xor
sbb
pop
add
inc
mov
inc
mov
lret
inc
mov
ds
loopne
roll
fadds
cli
inc
mov
inc
xlat
cmp
pop
push
inc
or
add
mov
jbe
testb
dec
in
fistps
add
movb
aaa
jmp
mov
adc
shlb
lea
cli
ja
cmpb
out
push
test
ret
push
xor
push
add
push
inc
pop
sbb
xchg
mov
and
or
xor
xchg
and
mov
fadds
arpl
push
addr16
cmpsb
imul
or
enter
push
cmpsl
popl
pop
in
mov
push
pop
xor
rorl
add
sbb
jge
jns
fs
cmp
pop
pop
pop
repz
dec
add
les
rcrb
xchg
sbb
pop
sbb
int3
add
or
add
xor
out
push
add
pop
adc
sbb
sbb
fcoml
mov
cld
push
mov
ja
jnp
pop
mov
out
or
les
inc
sbb
lea
ljmp
inc
mov
aaa
inc
rolb
jne
jp
daa
loope
and
xorb
aam
xorb
in
or
insl
mov
jge
ret
pushf
pusha
jl
inc
lock
dec
outsb
add
sub
and
mov
test
add
lahf
out
cmp
outsl
test
daa
mov
xor
lea
imul
dec
mov
fsubr
cmpsl
mov
jge,pn
xor
push
sar
outsb
push
jg
or
rolb
dec
xor
pop
rcll
and
hlt
jne
inc
and
es
mov
add
or
and
push
inc
js
sub
dec
cmpsb
andb
add
push
mov
adcb
sbb
out
and
cmpsl
and
adc
sbb
or
jo
and
xchg
mov
sbb
test
in
sbb
dec
xor
fadd
adc
sbb
in
jmp
mov
and
orl
pop
dec
repnz
int3
inc
add
push
pushf
fstpt
add
in
add
push
enter
movsb
add
mov
ja
cltd
sbb
stos
jecxz
rolb
adc
mov
fwait
into
call
scas
cmp
mov
inc
adc
cmp
nop
push
sbb
lock
and
int3
insb
xchg
or
dec
mov
lcall
sbbb
je
push
repz
enter
inc
push
add
and
enter
xor
push
pusha
lods
lea
pop
mov
and
scas
out
sarl
push
pusha
push
pop
movsb
in
rolb
lret
lods
cmc
stc
je
mov
xchg
xchg
movsb
mov
sbb
sbb
xor
mov
adc
pop
xchg
pushf
and
adc
xor
xchg
lock
sti
ret
push
push
dec
stc
xor
aaa
mov
dec
addr16
sbb
shll
ret
mov
je
jle
add
lret
jg
mov
pop
pop
xor
dec
outsl
mov
inc
aad
mov
les
bound
sbb
lcall
in
dec
xor
adc
mov
jmp
xor
jns
sbb
out
pushl
push
fwait
sub
in
pop
jmp
or
dec
sbb
fmuls
mov
jns
out
daa
xlat
sbb
push
inc
adc
ret
adc
sub
fisubl
pushf
std
inc
mov
hlt
push
pop
add
imul
and
cltd
shlb
pushf
jg
pusha
ret
lods
pop
call
call
mov
add
dec
and
sbbb
ret
dec
xchg
push
push
fdivr
pop
add
shl
push
test
aad
lret
dec
pusha
xchg
test
sbb
sub
les
in
lock
and
addl
sbb
mov
jp
add
inc
pop
imul
mov
push
test
int3
loop
push
add
sbb
cltd
cmp
int3
rolb
bnd
sub
jae
rclb
add
pop
fs
mov
fs
xchg
and
ljmp
lds
fstpl
test
sbb
or
cmp
pop
add
mov
xor
cld
push
cmpl
movsb
add
subb
jp
jl
xor
or
movsl
cmp
cld
sub
xor
dec
push
dec
fists
movsb
in
add
sbb
and
xor
adc
aad
filds
push
repz
lock
or
flds
inc
jmp
clc
xlat
push
add
test
sub
mov
test
mov
or
outsb
jns
cmpsl
xor
in
subb
sarl
mov
daa
sub
test
roll
sbb
dec
mov
popa
push
outsl
or
add
icebp
gs
cmpsl
movsb
pop
fcmovb
sbb
push
add
mov
jae
mov
jne
lret
enter
inc
ret
dec
fdivrs
push
std
dec
pop
inc
out
pop
push
test
add
adc
sbb
repnz
pop
cmp
inc
add
mov
les
adc
jbe
fldl
in
aaa
xor
jb
imul
movsb
jo
xor
js
jb
loop
push
jns
mov
push
push
adc
loopne
fmuls
call
inc
imul
push
sbb
sub
add
arpl
jae
je
adc
sub
or
pop
enter
or
cld
adc
jecxz
push
cmp
sub
andb
sub
or
dec
mov
repz
add
jecxz
xchg
add
sbb
xor
and
into
jp
push
add
jae
cmp
mov
adc
out
add
xor
add
lock
stos
mov
or
fldcw
pop
ret
push
push
int
add
lock
adc
mov
fistpl
add
dec
push
cs
mov
into
test
xor
jle
and
call
mov
add
mov
or
xorb
pop
movsb
push
and
dec
orb
pop
mov
popa
and
pop
lods
and
imul
es
ret
xor
notb
aaa
xchg
clc
dec
into
sbb
pop
call
cmp
push
mov
or
xlat
popf
test
dec
shlb
push
adc
jo
dec
call
jb
add
xlat
mov
faddl
add
jo
loope
stos
mov
loopne
pop
outsl
xchg
mov
pop
fdivl
xor
in
lods
inc
notb
add
sub
push
sbb
in
add
pop
rorb
ret
das
inc
inc
push
xchg
pop
xchg
adc
cmpl
cli
add
mov
lret
add
cmp
mov
loopne
or
inc
iret
movb
push
xchg
sub
icebp
mov
mov
inc
or
add
cmp
imul
testb
mov
cli
add
cmp
gs
jne
dec
dec
pushf
add
fmul
pop
ret
mov
xchg
pop
clc
imul
das
add
sbbb
mov
aam
sub
enter
dec
and
mov
adc
dec
fsub
add
xlat
adc
sub
sbb
fisttpll
add
add
test
test
ror
inc
mov
loopne
mov
xchg
dec
jb
lock
jge
push
cs
in
jmp
or
xor
je
nop
cmpsl
jge
xchg
insl
mov
push
and
dec
jo
and
jne
leave
fwait
add
pop
push
cs
mov
dec
sbb
fdivr
xor
das
aad
mov
out
and
cmp
movsb
push
pop
rolb
in
push
cmpsl
add
imul
repz
mov
jecxz
inc
add
cmp
mov
cmp
push
cmp
jb
mov
decl
cli
ljmp
and
add
sub
mov
jmp
add
ja
call
or
je
into
arpl
add
rolb
push
hlt
and
mov
lea
xchg
test
pop
test
or
inc
mov
jcxz
push
push
cmp
je
hlt
es
cli
outsb
add
sbb
dec
add
fnstcw
ret
add
jmp
xor
add
pop
sub
inc
pop
outsb
mov
lods
mov
and
fcomps
les
add
imul
icebp
adc
ja
mov
mov
push
fiadds
add
and
fldenv
in
cmpsl
outsl
lret
lods
add
adc
hlt
adcb
mov
leave
in
fwait
add
mov
in
push
stc
aaa
or
add
jge
mov
out
test
pop
push
repz
xor
ret
dec
shll
fcoml
divl
jecxz
dec
mov
add
and
fwait
mov
pop
add
aaa
dec
inc
andb
popa
mull
test
jo
mov
push
push
addr16
xchg
pop
mov
in
mov
clc
xchg
out
push
adc
jae
jp
outsb
inc
lcall
addb
lret
mov
sbb
test
add
in
rorb
test
mov
aaa
and
mov
or
sbb
cs
cmp
and
clc
sti
push
add
dec
sub
mov
aam
xor
inc
cmp
jecxz
mov
imul
jmp
add
xchg
mov
int3
cld
add
sbb
mov
sub
mov
xchg
loopne
adc
xchg
imul
lds
outsb
mov
inc
shlb
adc
ds
pop
xchg
setge
push
xchg
test
cmp
ret
pop
subb
aas
xchg
sbb
icebp
movsb
sbb
outsl
testb
outsl
adc
es
cld
mov
jg
data16
rcrl
sti
insb
ds
mov
pop
jb
ja
xchg
push
sbb
loopne
nop
and
clc
xchg
cmp
mull
xor
outsb
inc
adc
sub
sub
insb
mov
fcompl
les
dec
sub
lds
mov
sub
cmp
in
imul
inc
mov
jb
cltd
mov
scas
and
mov
pop
aam
xchg
cltd
xor
xor
xor
cmp
mov
or
rcrl
adc
adc
sbb
dec
sub
and
test
or
movsb
jb
or
or
xchg
xchg
lret
inc
or
pushf
push
dec
sub
push
cmp
insb
push
frstor
adc
imul
adc
test
dec
nop
dec
cs
pop
int3
rcr
fidivrs
pusha
mov
mov
or
sahf
fsubr
and
dec
aam
push
movl
enter
add
pop
mov
adc
xor
or
add
add
and
ficompl
mov
adc
clc
in
mov
add
dec
push
fs
enter
jle
push
pop
push
enter
inc
loopne
adc
insl
sti
jnp
xorb
mov
jg
fs
enter
inc
jb
and
and
and
adc
sbb
enter
or
aad
clc
add
cmpsb
roll
xlat
mov
lea
dec
into
loope
incb
push
cmpsl
push
sbb
fldl
ret
jl
cmp
dec
push
or
lock
pop
out
push
je
pop
or
dec
movsl
jo
ljmp
add
cmp
xor
outsb
add
add
inc
pop
or
jo
mov
cmp
jo
nop
mov
mov
add
xor
add
rolb
dec
and
pop
pop
cmpsl
test
push
push
or
loopne
add
daa
mov
cmp
inc
loopne
ja
or
jno
dec
scas
insl
sbb
pop
sbb
jg
jbe
add
inc
adc
pushl
mov
pushl
mov
js
add
std
sbb
in
push
push
loope
pop
stos
inc
mov
ljmp
sar
push
jmp
dec
and
inc
or
jmp
lea
jl
xchg
out
adc
pop
jo
mov
and
mov
add
cld
popf
mov
shll
inc
add
inc
xchg
repnz
mov
mov
lret
adc
pop
add
pop
xor
in
pop
or
inc
test
leave
add
mov
xor
push
push
inc
jg
inc
mov
in
push
lock
negb
pop
or
mov
sbb
mov
add
shrb
add
das
inc
push
xchg
ret
or
xchg
fs
add
fwait
and
push
or
lret
mov
rorb
xchg
xchg
pop
dec
out
lret
or
js
add
add
nop
out
add
or
fcmovb
ss
push
cmp
inc
add
pop
adc
sbb
sub
out
int3
sub
fwait
mov
clc
xchg
push
pop
and
mov
les
adc
fst
xchg
je
xchg
aad
mov
pushf
inc
cld
cltd
sub
pop
nop
add
push
and
int3
sub
inc
mov
pop
sbb
subl
mov
pusha
dec
aam
sbb
and
in
and
cwtl
sti
je
sub
and
daa
or
adc
push
push
int
bound
loop
cmp
lea
subl
or
xchg
outsl
sbb
sub
leave
xchg
stc
cli
sbb
sub
adc
loop
loopne
stc
mull
shrb
xchg
popf
mov
jmp
daa
mov
outsb
int3
jne
daa
test
lea
ljmp
sub
orl
add
movsl
call
loope
mov
testb
nop
adc
addr16
je
mov
push
cmp
jae
push
imul
jmp
mov
cmp
das
les
jns
icebp
inc
stos
push
add
mov
jbe
lock
pop
add
sub
movsb
adc
pop
xor
lret
jle
js
sbb
lock
fcmovnu
sbb
push
adc
push
insb
add
loope
and
sbb
fstl
xchg
idiv
push
mov
xchg
pop
andl
or
inc
je
adc
and
test
inc
jnp
orl
scas
jnp
lahf
or
jmp
addl
test
rcrb
inc
pop
and
stos
or
or
xor
imul
fimull
lods
xorl
pop
out
dec
lea
sub
dec
inc
sbb
and
push
pop
shrb
out
out
ret
mov
pusha
push
stc
pop
xchg
cmp
mov
adc
ja
ja
repz
add
aaa
lds
adc
xor
js
gs
xor
out
dec
pop
mov
cmp
mov
xor
inc
sub
adc
lcall
dec
js
cmc
adc
adc
mov
es
roll
sbb
cmpsl
cmp
and
outsl
stos
shrl
jp
addl
hlt
xchg
jbe
add
or
add
rcrb
or
test
test
sbb
orl
push
pop
push
mov
mov
loop
inc
faddl
sarb
xor
or
cmp
inc
movsl
dec
int
pop
xchg
arpl
mov
or
inc
ss
cmc
fwait
pop
push
add
loopne
mov
testl
jnp
add
ret
sbb
push
xor
push
dec
cli
stos
jne
push
xchg
dec
add
mov
jle
or
xchg
add
jmp
push
add
push
pop
jmp
cmp
test
lods
sbb
ja
loop
dec
in
adc
das
mov
sub
push
mov
movsb
sti
loop
add
xchg
adc
inc
dec
push
mov
mov
popa
loope
loopne
push
or
pusha
push
pop
testl
imul
inc
mov
movsb
xor
add
bound
jo
sbb
ds
cmpsb
fwait
aaa
fmuls
mov
xchg
enter
inc
in
cld
push
ret
inc
push
jnp
push
popf
jno
orl
loope
and
inc
cmp
js
push
jp
inc
in
loopne
mov
nop
nop
and
jmp
push
jae
cmc
inc
xor
lds
dec
xchg
jno
or
scas
mov
and
mov
testb
in
inc
inc
mov
mov
ss
leave
pop
scas
cmpsl
lods
cmpl
cmc
add
scas
sbb
cmp
push
jno
push
and
inc
sub
mov
nop
mov
or
fisubrs
xor
push
push
inc
in
pop
sbb
pop
sub
cmp
decb
mov
cld
dec
jge
out
not
call
stos
lock
adc
lock
xchg
pop
xor
dec
xor
loope
loope
cmp
add
ds
repnz
enter
scas
cld
inc
cmp
push
fwait
flds
call
inc
xor
push
mov
popa
cmpsl
xor
insb
inc
push
in
jge
push
inc
sbb
or
sti
or
inc
mov
jns
loopne
andl
xchg
inc
adc
xchg
hlt
std
add
xor
loopne
mov
es
add
loope
mov
xor
or
call
or
pusha
push
push
mov
gs
jl
lock
xor
lock
mov
inc
hlt
test
and
rcrl
add
in
mov
insl
push
test
adc
jbe
xorb
and
xor
mov
daa
lock
adc
adc
push
push
push
int
addl
imul
ja
or
enter
mov
inc
push
xchg
xor
sbb
pop
enter
pop
repnz
pop
jl
shrl
add
inc
push
jae
daa
fsubr
out
mov
sbb
sti
push
inc
out
cmp
repz
repnz
nop
mov
push
icebp
xor
fs
leave
adc
and
mov
and
cmpsb
inc
mov
sub
or
and
push
popa
add
inc
or
xchg
dec
imul
insb
push
movsl
test
add
mov
testb
je
jp
cli
addr16
push
push
xchg
mov
shr
call
testl
leave
les
and
sub
add
pop
test
cmp
sbb
xor
pusha
in
inc
insb
dec
push
fcmovnb
lea
test
sbb
into
or
in
aad
add
sbb
mov
sti
nop
mov
int3
rcll
jmp
sarb
sub
pop
or
push
lock
call
mov
adc
jo
rolb
pop
inc
cmp
lds
loopne
and
sub
inc
xor
add
mov
std
mov
std
or
push
add
jns
sbb
in
or
add
push
mov
mov
xchg
cltd
push
pop
nop
sub
in
loope
adc
mov
stos
mov
adc
and
add
sbbb
jo
dec
push
movb
jg
pop
sbb
or
in
adc
mov
push
aas
mov
mov
inc
aas
outsl
xor
incl
push
jmp
mov
ret
fistpl
jmp
dec
push
je
mov
lock
dec
jne
roll
sbb
adc
lods
xchg
lcall
sub
pop
sbb
mov
inc
and
shl
loopne
sbbb
push
jmp
cmp
pop
scas
add
xor
int
adc
or
icebp
inc
inc
dec
ja
xchg
lret
std
dec
jns
jp
xchg
pop
lds
or
aaa
mov
pop
pop
pop
push
lods
iret
lahf
push
add
jg
push
daa
clc
sbb
inc
inc
and
sub
sub
ficompl
add
dec
movsl
sbb
repnz
mov
xchg
or
ja
push
cmpsb
fisttpll
and
sub
ljmp
inc
push
or
inc
or
inc
mov
js
cmp
jbe
scas
xchg
mov
add
and
adc
inc
or
push
push
cmp
loopne
mov
pusha
push
sub
or
cld
sub
mov
pop
out
cli
out
adc
cs
xchg
push
xor
pop
into
aaa
inc
cmpsb
push
ret
mov
mov
cli
jbe
mov
data16
cmp
jbe
mov
add
and
ret
dec
cwtl
or
imul
test
sbb
call
push
adc
repz
xchg
push
shlb
mov
fiadds
aam
aaa
mov
clc
pushl
and
or
ss
sbb
pop
cmpsb
pop
adc
adc
or
inc
stos
inc
int3
dec
and
shlb
je
mov
mov
inc
aad
or
in
or
iret
mov
call
inc
pop
jle
sub
add
nop
or
cld
out
fwait
mov
out
xchg
jg
xchg
es
fadds
and
xor
sub
xor
xor
pop
add
cmp
push
push
pop
pop
in
lret
pusha
push
andl
inc
pop
xor
adc
aaa
dec
push
jl
push
pop
xchg
or
test
aas
fs
and
mov
and
sub
sub
sub
add
movb
mov
nop
xchg
xor
and
mov
mov
and
in
call
and
mov
jmp
cmp
sidtl
loop
sub
add
and
addr16
sahf
dec
testl
add
lret
arpl
mov
into
popa
leave
mov
sti
sbb
pop
adc
or
push
ss
cltd
jle
xchg
xor
inc
dec
mov
sbb
rcrb
push
pop
pop
and
insb
sbbl
or
adc
xor
movl
js
lret
sbb
mov
aaa
lret
inc
nop
pop
mov
loop
es
dec
in
push
or
pop
mov
cmpsl
mov
mov
mov
cmc
dec
test
mov
test
xchg
and
ds
mov
outsl
pop
out
inc
inc
mov
or
jge
pushf
xor
jge
xchg
xchg
mov
pop
mov
sbb
shrl
jne
mov
xor
inc
inc
cmp
mov
push
sub
mov
div
adc
testl
mov
mov
inc
xor
dec
inc
movsl
pop
cmp
loopne
xor
xor
sub
je
lea
cmp
lods
and
test
jne
cwtl
add
je
xor
pop
or
jnp
adc
add
mov
and
inc
stc
clc
cmpb
aad
lcall
jmp
data16
or
adcl
or
inc
mov
call
cmpb
loopne
pop
mov
scas
jge
out
add
or
push
add
push
mov
das
push
dec
jmp
lods
icebp
daa
mov
jmp
test
insb
je
mov
adc
lea
push
cwtl
mov
dec
enter
xor
inc
dec
add
pop
jge
fildl
leave
decl
xchg
xchg
enter
adc
or
ret
fidivl
out
jns
pop
inc
sbb
push
or
int
mov
lds
jl
add
push
sub
icebp
adc
out
add
add
pop
push
sarl
jne
cmpl
bound
mov
inc
mov
lods
test
nop
push
and
mov
push
mov
jl
pushf
sbb
sub
cs
xchg
mov
sbb
mov
pop
dec
or
adc
fcoms
and
pop
or
add
popa
adc
mov
inc
inc
movsb
push
push
test
adc
sbb
ret
bound
inc
or
call
inc
lahf
stos
aam
pop
cwtl
std
pushl
repnz
in
cwtl
push
jmp
test
xchg
cwtl
repnz
pop
mov
loop
and
cmp
lds
cmp
mov
add
pushf
cmp
movsb
mov
arpl
or
pop
data16
aaa
fldt
jb
sub
xor
push
movsl
push
in
xor
cmp
mov
xchg
sysret
inc
sbb
mov
or
adc
pop
pop
or
popa
and
in
aas
out
test
jno
or
arpl
push
adc
nop
sbb
adc
sub
ret
fsubr
push
sahf
addr16
inc
out
sbb
push
push
xchg
add
in
bound
inc
sub
and
xchg
mov
mov
inc
jb
insl
lods
push
js
and
loope
xor
fisttpll
push
mov
mov
pop
sub
push
sub
fwait
add
and
inc
push
xchg
pop
test
mov
scas
or
mov
jae
inc
stc
jnp
sbb
add
insl
or
outsl
icebp
pop
push
ret
sub
add
mov
sub
sub
lea
pop
stc
mov
or
mov
ss
lods
and
cmpsl
fcoml
or
lock
push
in
jnp
mov
adc
sbb
les
sbb
sub
inc
mov
inc
cli
daa
lods
lods
cmp
icebp
inc
in
outsb
sub
dec
push
add
xchg
mov
jae
mov
ja
jg
inc
adc
cmpb
les
sbb
sbb
ds
push
mov
cmp
or
push
ja
leave
and
addr16
or
pusha
sbb
adc
rolb
add
leave
jecxz
lock
jno
mov
outsb
inc
add
mov
lock
xor
or
xchg
or
xor
scas
pop
jo
popa
push
mov
xchg
ret
push
sahf
movl
loopne
mov
inc
sti
push
jo
popa
mov
dec
jg
cmp
push
jle
dec
dec
sub
dec
fisubrs
and
and
push
xchg
sbb
push
and
daa
add
cmp
add
in
lret
or
push
sbb
cs
lret
or
cs
push
es
pop
push
in
dec
sbb
icebp
inc
sub
aam
mov
push
adc
fidivs
push
jp
arpl
dec
xchg
fcoms
push
cmpl
sbb
imul
sbb
pop
inc
pusha
xchg
ror
inc
sbb
jne
sbb
adc
sbb
cmp
push
movsl
mov
cmp
stos
pusha
dec
cmp
pop
mov
rcrb
xchg
pushf
cmp
mov
and
push
inc
arpl
scas
loopne
cmpsb
dec
xlat
and
pop
fsubl
xchg
adc
repnz
and
jmp
sub
push
mov
mov
daa
jo
and
add
cmp
roll
push
mov
and
add
inc
les
rolb
mov
push
xchg
loopne
and
inc
adc
add
add
or
add
mov
push
cld
dec
jl
dec
dec
lods
jecxz
and
scas
add
jmp
cmpl
and
cmp
or
add
loope
add
fwait
xchg
aam
or
stc
int3
sub
test
andb
in
add
int3
adc
test
cwtl
ret
mov
inc
dec
loope
ficomps
std
push
in
lcall
scas
pop
pop
inc
cmp
cmp
out
dec
cmp
mov
pop
test
bound
pmaxsw
test
lods
jns,pt
and
je
jmp
mov
in
jae
pop
js
lret
stos
push
cmpsl
enter
sbb
add
add
cltd
push
cli
lods
push
push
movsl
sbb
inc
ss
fildll
cltd
dec
pop
push
sub
aas
push
dec
and
jmp
popf
dec
or
inc
mov
fidivl
dec
or
ror
inc
mov
or
dec
or
rorb
or
repnz
adc
dec
dec
and
sbb
test
and
inc
rorb
mov
pop
mov
xchg
lret
enter
xchg
cmp
outsl
jmp
fcomps
sub
cltd
insl
loopne
sahf
and
call
xchg
shlb
adc
movsb
fwait
roll
gs
adc
iret
rclb
insl
enter
xchg
inc
mov
mov
push
cltd
sbb
push
into
mov
sbb
mov
sbb
mov
repz
sbb
movsl
or
xchg
jo
lret
sbb
out
pushl
or
lods
and
stc
jle
jbe
pop
cwtl
adc
subb
sbb
lock
add
adc
lea
popf
pushf
sub
test
xchg
imul
lods
jl
or
test
imul
mov
pop
mov
subb
ret
sbb
aad
pop
jb
inc
test
dec
pop
test
add
sub
scas
sbb
xor
movsl
pop
add
or
xorb
inc
daa
and
and
xor
stos
sbb
or
sbb
data16
pusha
pop
aas
outsl
pop
pusha
mov
or
in
xchg
lock
inc
sbb
push
lock
inc
add
xchg
xchg
cmp
inc
cmpl
xor
mov
sarb
sbb
ret
push
test
popa
and
push
pop
sbb
adc
cs
mov
es
xor
or
or
jne
daa
mov
cmp
or
orl
mov
les
inc
or
mov
lea
xlat
adc
movsb
and
enter
push
xchg
pusha
add
sti
sbb
lods
bound
out
dec
pop
cmp
gs
inc
out
shll
jns
mov
or
sub
xor
xchg
shll
sub
push
or
pop
sub
push
pusha
cmp
jo
sub
subl
and
jno
aas
push
jge
ss
sub
pop
push
pushf
mov
dec
mov
mov
mov
sub
ret
andl
and
xchg
out
cltd
pop
xor
aaa
or
stc
cs
ljmp
das
pop
cmp
sbb
pop
imul
in
sbb
repz
pop
adc
sub
add
xor
push
adc
dec
mov
sbbb
jno
sahf
push
jne
out
xor
inc
dec
xor
lock
dec
leave
and
pop
adc
mov
movsl
stos
push
mov
push
shll
rcrl
sbb
mov
adc
dec
cs
xor
jns
pop
shlb
xor
jmp
enter
ss
daa
or
sti
popf
pusha
sbb
pop
sub
jb
sbb
scas
lret
push
sub
orb
outsl
pextrw
dec
lahf
adc
cmp
enter
das
test
cmp
cltd
stos
or
cmp
mov
in
iret
das
loop
test
in
or
add
and
fs
xchg
xor
xor
inc
inc
call
add
dec
cmp
mov
add
lds
popf
sarl
lock
sahf
pop
cwtl
add
xchg
mov
lods
clc
dec
add
lea
shlb
inc
fdiv
loope
or
pushf
add
xchg
sbb
push
mov
loop
add
adc
push
mov
pop
aas
lods
adcl
mov
popa
xor
lods
dec
jns
mov
and
sub
cli
xchg
pushf
inc
shll
push
inc
sbb
xchg
mov
imul
loope
sub
call
sub
push
add
and
rcrb
addr16
xchg
subl
sub
pusha
jecxz
aad
jge
sub
push
lock
push
or
inc
sub
jns
and
jb
mov
or
in
popf
push
push
xor
ss
push
sbb
and
xchg
fadd
dec
xor
adc
mov
add
nop
add
ljmp
notl
sbb
cmp
mov
add
mov
mov
gs
or
fldenv
push
setae
jecxz
mov
or
or
js
mov
xor
lods
lods
xor
ljmp
scas
inc
lods
push
out
incb
roll
mov
test
jne
and
adc
xor
jae
aaa
pusha
in
lock
cmp
add
lahf
jl
in
push
add
pushl
inc
push
xchg
add
in
xor
popf
ja
out
cmc
nop
dec
mov
leave
push
mov
push
jmp
xor
in
sbb
in
leave
dec
mov
aam
cmp
mov
shlb
xlat
hlt
adc
push
add
lret
inc
test
adc
inc
push
cwtl
and
cli
out
and
outsb
cmp
adc
pop
lods
add
addr16
adc
add
or
pop
sub
sbb
xor
or
out
popa
in
dec
lret
dec
dec
or
popf
xchg
ret
mov
jnp
jno
nop
push
mov
or
ud0
cmp
pop
pushl
push
pushl
loopne
movsb
sbb
in
add
adc
sbb
xor
adc
add
dec
not
jns
xchg
fs
sbb
sbb
loope
adc
ljmp
cmp
and
dec
sbb
inc
sbb
push
mov
rorb
vmovntpd
pop
inc
mov
cmp
dec
pop
or
xor
in
loopne
sbb
jns
es
sbbb
dec
push
sbb
sbb
xchg
mov
stc
sbbb
pop
cmp
sub
push
mov
and
mov
bound
xor
push
mov
js
cmp
mov
icebp
push
pop
jb
sbb
lods
xchg
sarl
add
mov
call
sbb
int
movsl
movsl
mov
test
stc
imul
jne
push
pop
xor
and
xor
inc
xchg
sub
sti
adc
or
mov
dec
lret
xor
arpl
cmp
jbe
movsl
ja
lcall
pop
jp
cmpsl
repnz
add
cmp
std
mov
adc
outsl
pop
cmp
push
jecxz
push
aam
inc
and
sbb
push
xor
sub
inc
scas
pop
xor
inc
and
dec
xor
sub
push
das
cmp
repz
jns
inc
add
js
xor
movsb
pop
sub
pop
sub
cmp
sbb
aaa
mov
fwait
cmpsb
std
cmp
mov
pop
call
sbb
push
sub
dec
vcvtps2dq
fdivrs
push
pushf
adc
jmp
loopne
and
push
and
ret
dec
and
jnp
enter
jmp
sbb
sbb
sbbl
aad
xor
mov
inc
cmpl
inc
and
jns
dec
stos
push
icebp
andl
mov
js
jae
fwait
imulb
in
pop
mov
fiaddl
mov
mov
fmuls
divb
and
movsb
pop
ja
xor
cmp
pop
jnp
dec
xor
and
dec
sub
sbb
mov
cmp
lods
test
mov
int3
sarl
jb
in
xchg
jl
les
inc
inc
rcll
mov
cmp
imul
inc
xchg
lret
je
sbb
sub
sub
rcll
mov
imul
push
movsl
and
inc
scas
xor
xor
fistps
into
inc
mov
or
int3
roll
jbe
mov
mov
cmp
sub
mov
inc
dec
andl
jb
cmp
clc
mov
or
pop
xorl
or
adc
pop
pop
or
dec
lods
frstor
inc
xor
test
xor
rcrl
cmp
loop
roll
or
xor
test
dec
jne
jns
cmp
ljmp
loopne
daa
adc
stos
pop
jg
call
dec
test
leave
dec
mov
pop
shll
adc
sarl
or
mov
mov
scas
cmovb
push
dec
and
je
mov
movsl
mov
jbe
int3
jecxz
jne
cld
mov
hlt
jle
add
mov
ljmp
lea
push
push
sbb
mov
adc
push
sbbl
push
outsb
rorl
bt
push
enter
adc
sub
arpl
dec
and
add
pop
nop
inc
dec
jmp
push
dec
or
push
xchg
ret
icebp
push
ret
adc
insb
lea
stc
aad
bound
sbb
in
in
test
or
push
mov
in
data16
int3
lahf
movsb
cmp
xor
movsb
pop
mov
out
dec
test
xchg
add
mov
xor
push
adc
sbb
or
push
lods
mov
in
repnz
and
aam
sub
sub
mov
ss
pushf
push
cmp
jae
in
loope
push
mov
cmpb
jg
mov
xchg
jmp
test
jl
inc
lahf
or
cmp
and
pop
add
mov
pop
dec
js
cmpsb
dec
inc
out
loope
lods
int
fwait
aas
in
sub
adc
push
and
push
out
mov
jg
in
ficomps
pop
sbb
jae
ret
cmpl
adc
mov
outsb
movsb
mov
jmp
add
add
or
lock
pop
sbb
push
push
mov
jg
jmp
adc
xchg
leave
inc
je
mov
or
jl
pop
cmc
inc
mov
jo
pop
jle
pusha
and
dec
movsl
lea
push
enter
push
loopne
xor
add
jp
adc
inc
xor
pmaxub
fiadds
call
ficompl
lds
or
pop
mov
adc
and
mov
and
imul
inc
addl
add
sbb
mov
mov
mov
cmp
or
inc
sbb
inc
ss
push
xor
aad
pop
faddp
fsubrs
loope
and
mov
shl
push
shrb
push
daa
jecxz
sbb
flds
nop
push
pop
jne
jns
lock
inc
mov
inc
xor
mov
test
fldl
cmp
add
push
inc
insl
cmp
push
je
sbb
jle
and
adc
mov
jge
inc
pusha
shlb
inc
aas
dec
pop
mov
orl
pop
insl
call
mov
adc
xchg
dec
sti
mov
cmp
fwait
in
pusha
jne
mov
fwait
cmp
and
lods
add
aam
xor
xor
add
and
jle
jg
jecxz
push
cmp
jae
add
pop
loopne
xor
jp
cmp
dec
inc
mov
mov
add
pusha
call
clc
sbbb
test
pusha
add
jo
pop
enter
testl
mov
pop
imul
add
and
and
cwtl
mov
outsl
sub
lock
sub
pop
push
ljmp
enter
es
or
popf
inc
std
xor
popa
sub
push
jo
and
sbb
inc
mov
xchg
and
cmp
faddl
jo
add
jnp
cmpl
add
or
in
loopne
xor
inc
push
mov
imul
push
push
das
inc
popf
mov
xor
insb
sti
nop
cmpsb
sti
sub
push
sbb
lea
out
add
add
add
mov
cwtl
lods
test
add
dec
lea
xor
jle
fwait
imul
cmp
or
mov
rcr
mov
andl
out
ficompl
sbb
xchg
sbb
and
ud2
or
mov
pushf
push
xor
ljmp
push
and
xchg
daa
mov
fldenv
fdivl
stos
inc
push
mov
xor
je
add
les
xor
cmovnp
repnz
repnz
sbbl
addr16
mov
test
icebp
mov
add
push
sbb
push
xor
mov
pop
push
xor
rorb
push
dec
cmpsb
cmp
inc
and
add
add
add
dec
or
leave
adc
call
loopne
xor
or
fcmovnb
mov
inc
lods
push
roll
lds
repz
call
push
push
pusha
sub
fisttpl
mov
divb
mov
xor
scas
add
cmp
popa
dec
cld
mov
jl
cmp
jne
mov
jecxz
mov
cmp
out
or
je
cmp
int3
cmp
je
cmp
je
push
inc
sbb
enter
aas
test
nop
imul
jns
inc
hlt
movsl
and
in
jne
push
fidivrs
jp
movsb
js
jnp
pop
nop
rolb
hlt
mov
daa
cmp
push
mov
ret
ja
fsubs
aaa
mov
xchg
mov
push
cmp
add
pop
xchg
adc
das
mov
add
xchg
test
add
enter
call
pop
inc
push
sbb
hlt
adc
xchg
pusha
loopne
pop
xor
repnz
xchg
les
mov
xchg
xchg
push
sub
fadds
sbb
scas
jecxz
icebp
pop
fldpi
gs
mov
mov
ret
jp
jb
xchg
mov
pushf
int3
cmp
jns
add
jne
and
dec
pop
dec
sub
test
jecxz
mov
add
sub
push
xor
aam
mov
push
aaa
stos
and
hlt
sub
pop
xchg
incb
je
cmp
clc
push
xchg
add
dec
xor
es
xor
mov
cmp
nop
and
rcrb
sub
mov
push
outsb
ror
imul
rolb
cmp
dec
xchg
ds
pause
clc
fucom
nop
inc
and
sub
and
dec
add
mov
fcmovnu
dec
adcb
leave
fidivrs
add
fcoms
pop
push
imul
lret
pusha
iret
sar
mov
daa
add
add
cwtl
push
pop
pop
mov
pushl
stos
xchg
dec
push
out
xchg
loope
mov
je
mov
rolb
rclb
int3
adc
loop
or
aas
es
jp
dec
and
and
sub
sub
xor
dec
push
xchg
sub
and
add
hlt
push
push
sub
aaa
mov
ds
flds
test
jo
lea
add
mov
and
jl
test
ret
lea
pusha
test
pop
dec
jno
pop
dec
daa
xor
jne
adc
jp
imul
cmp
sbb
in
inc
inc
sub
xchg
sub
pushf
inc
inc
jge
les
dec
aaa
push
jnp
adc
push
testl
or
cmc
mov
lds
jp
adc
mov
sub
mov
xor
inc
push
or
xchg
enter
fwait
push
lea
ljmp
stos
mov
xor
sbb
jecxz
sub
rcll
fldl
aam
push
mov
inc
data16
push
or
notb
jle
add
inc
add
jl
jo
subb
pusha
adc
jbe
add
je
cmp
insb
mov
push
es
push
push
lahf
xor
push
mov
test
adc
jge
jo
mov
jbe
and
adc
inc
mov
les
push
inc
adc
cwtl
sub
jne
or
lods
or
sarb
call
imul
in
call
add
pop
rcrl
and
mov
cwtl
ljmp
sbb
or
roll
mov
pop
repnz
fisubl
push
xor
in
adc
cld
lea
movsl
inc
scas
cltd
addb
movsl
out
mov
adc
push
sub
loop
or
dec
push
push
add
negb
cmp
clc
mov
sub
sub
addb
mov
mov
stc
stos
js
dec
cmc
clc
push
add
jo
and
jbe
shlb
jmp
sbb
bound
mov
jb
and
mov
jne
movsl
jg
jne
cmp
jne
icebp
mov
clc
str
test
jne
mov
adc
mov
out
lcall
ret
inc
inc
mov
test
shrl
mov
mov
stc
or
in
mov
jle
adcl
cld
cli
or
pushl
aam
movsl
adc
mov
or
or
fimuls
sub
js
mov
jns
pushl
dec
mov
jmp
fcomps
and
and
sbb
test
movb
dec
cmp
or
mov
mov
push
or
lea
pusha
sub
movl
add
pushl
and
iret
and
decl
mov
mov
cmp
rclb
cmp
cmp
add
fists
jne
pop
sbb
or
jle
rorl
jnp
je
pushf
jecxz
mov
push
xchg
lahf
inc
jmp
sub
jecxz
subb
fisubrs
inc
cmp
cmpb
cmpl
xchg
mov
mov
jo
sub
imul
mov
push
out
out
lea
mov
push
push
scas
rorl
xlat
or
adc
mov
jmp
mov
lea
adc
xor
jp
cmp
es
push
ret
push
or
dec
lods
sbb
les
push
popf
mov
cmpsb
pop
test
inc
mov
sbb
push
xor
dec
fs
inc
stos
add
in
std
ss
mov
dec
jbe
cs
cmp
mov
pop
mov
mov
pusha
jl
gs
sbb
push
imul
push
add
ret
push
incl
iret
jnp
fisubl
cmp
xor
mov
mov
push
add
cmp
mov
and
leave
pop
sub
sti
outsb
add
popa
mov
dec
hlt
dec
cmp
mov
mov
pop
xor
mov
or
inc
dec
clc
dec
mov
cmpsb
inc
ljmp
ret
add
cwtl
or
pop
jp
repnz
lcall
mov
or
gs
mov
mov
lods
inc
imul
jnp
loope
mov
jo
sub
test
test
in
pusha
xchg
in
lods
movb
add
test
call
jno
push
bound
lahf
bound
loop
sbb
es
xchg
test
xchg
filds
sets
mulb
lods
cmp
push
mov
xchg
add
or
lock
push
jns
pop
fsubs
mov
sbb
lcall
xorb
aas
sub
je
push
or
inc
jg
lods
pop
xchg
pusha
add
rorl
adc
push
movsl
jg
pop
enter
pop
adc
add
test
movsl
xor
cmp
mov
pop
popa
loop
fmull
push
pop
jne
cmp
stos
ss
pushf
and
inc
jnp
add
add
fs
xchg
push
les
mov
pop
mov
jo
xor
or
or
mov
cmp
sub
mov
push
adc
push
or
push
loope
jne
ret
pushf
out
cmp
lods
xor
loop
dec
rcll
and
jns
and
sub
in
inc
lock
pop
adc
dec
jbe
push
mov
mov
ret
repz
loopne
inc
pushf
rolb
jbe
mov
jo
or
ret
int
add
push
inc
cmpb
insb
sub
xor
xor
aad
jmp
loope
sbb
cltd
fmuls
sbb
push
nop
add
lock
push
ds
adc
loopne
push
int
push
push
and
add
xor
das
or
aas
pusha
rorl
or
push
ficoms
es
mov
pusha
cmp
and
rorb
iret
mov
or
ss
mov
xor
into
mov
add
jo
adc
or
cmp
out
icebp
popa
push
or
repnz
sarb
and
sbb
pop
adc
sub
xor
rclb
sbb
stos
and
divl
enter
adc
stc
bound
push
adc
push
adc
xor
add
push
xchg
xchg
jecxz
push
jmp
push
pop
jmp
bound
andl
adc
jle
adc
dec
pop
je
cmpsb
push
mov
scas
adc
push
sbb
lods
push
hlt
adc
call
dec
js
add
mov
pop
test
xor
cmpsb
sqrtps
sub
insb
in
lock
bound
pop
into
mov
enter
mov
stos
shlb
shll
and
pop
adc
shlb
sahf
iret
rorl
cmpsb
sub
scas
cld
je
je
shlb
push
adc
adc
and
push
mov
scas
xor
loop
cld
sbb
xor
shlb
push
sbb
xor
mov
faddp
push
in
inc
adc
mov
pop
in
test
ret
xchg
inc
movlps
fsqrt
call
pop
sbb
cli
and
xchg
jp
mov
push
aam
mov
shlb
and
mov
sub
jns
rorb
adc
cmpsb
or
dec
push
nop
call
sbb
je
fcmovb
and
sub
les
sbb
dec
dec
or
lock
jmp
dec
sub
fisubrl
stos
idiv
cld
mov
xlat
fidivs
xor
pusha
and
lcall
mov
nop
xor
fiaddl
or
inc
mov
inc
cs
orb
inc
mov
push
xor
and
add
test
shlb
add
push
pop
loope
les
push
cmp
loopne
mov
enter
pop
cmp
adc
sbb
push
sub
sbb
iret
inc
xor
push
in
lock
mov
sahf
dec
mull
or
fwait
dec
push
jns
imul
and
pop
fdivrp
es
sub
pusha
sub
push
pop
sbb
addr16
sahf
xor
sub
jno
push
fadd
mov
mov
inc
dec
dec
ja
xor
aad
sub
dec
jle
pop
jo
and
adc
test
dec
or
adc
rorl
inc
fs
push
lods
xchg
daa
push
in
mov
add
test
pop
aam
jne
pop
bound
xor
push
movb
jl
lea
pop
or
and
push
dec
gs
fmull
sub
mov
add
xor
stos
lods
mov
pop
push
cmpl
xchg
xchg
cwtl
movb
pusha
mov
dec
pop
mov
xchg
fdivrs
and
ja
jno
mov
mov
push
jo
fsubr
cmp
xchg
fsub
int
hlt
pushf
and
push
add
cmp
pop
jo
add
cmpb
aaa
lea
in
jne
and
pop
mov
jne
dec
jg
jo
sub
dec
sbb
pop
xlat
push
mov
and
pop
push
and
add
mov
xchg
xor
inc
cmc
push
popa
cli
add
cmpb
inc
push
cmc
mov
push
cs
filds
dec
add
clc
movb
push
lret
or
clc
sub
cmp
pop
jl
pop
je
sub
push
or
fiaddl
outsb
xchg
mov
xor
mov
adc
mov
or
pop
cmpl
lcall
push
push
or
test
popa
shlb
lea
insb
fwait
ret
pop
jae
sub
add
jae
push
push
stos
push
sti
jo
cpuid
or
adc
dec
pop
mov
test
outsl
or
stc
mov
and
enter
push
shll
nop
jmp
dec
adc
movsl
sti
pop
sar
and
inc
jg
fsubrl
or
mov
xor
test
mov
inc
jae
stc
xor
in
and
rol
cwtl
test
je
sbb
jnp
mov
test
sbb
es
cmp
jb
pop
pop
mov
dec
mov
xor
mulps
push
inc
lcall
pop
je
nop
xor
and
jmp
cmp
push
lods
fisttpl
lock
lret
out
stos
and
mov
push
mov
sahf
fwait
jp
inc
or
mov
inc
pop
inc
xchg
xor
je
cltd
inc
les
fs
sub
inc
outsl
fwait
add
loope
mov
test
push
push
jmp
or
or
push
push
sbb
test
mov
test
push
adc
and
mov
jo
repnz
push
add
push
pop
push
push
inc
int3
or
lret
je
testl
pop
shlb
mov
mov
xchg
or
lret
hlt
inc
and
cmp
cmpl
pop
inc
pop
sbb
push
and
ja
lea
cmp
push
sbb
mov
shl
int
std
add
inc
add
jmp
push
sub
into
inc
sub
adc
cmp
icebp
mov
stos
notb
inc
orb
into
rol
push
and
inc
inc
clc
cs
or
repnz
mov
incl
adc
sbbb
xor
sub
inc
sbb
sub
adcb
sub
jmp
push
pop
cmpsl
sbb
cmpsl
das
adc
adc
mov
pop
fsubs
add
mov
dec
mov
and
outsl
inc
lock
push
data16
mov
stos
push
adc
mov
adc
scas
cs
push
sub
roll
mov
lds
fstp
repnz
in
adc
sbb
push
adcb
push
sbb
jne
dec
dec
fsubs
or
roll
addb
pop
cmp
or
or
and
add
sbb
mov
icebp
fdivrl
adc
push
fmull
int3
test
hlt
pop
fcomp
in
add
sub
pop
mov
jmp
fstl
cwtl
insl
push
inc
sbb
push
lea
sbb
push
ret
lods
sub
and
or
pop
dec
adc
repnz
push
adc
add
les
popa
cmpsb
insb
sub
test
mov
jb
pop
push
dec
push
inc
scas
xor
test
xchg
mov
push
sahf
xor
fisubrs
sbb
ljmp
hlt
sub
and
add
jno
inc
mov
mov
in
jl
adc
in
shll
cwtl
into
pop
push
dec
cmp
jo
ds
push
paddusb
or
loop
mov
test
xlat
xor
mov
ja
cmp
push
xchg
dec
jae
je
dec
sbb
adc
inc
mov
arpl
insl
movsb
cmp
aaa
pop
js
subw
test
je
test
mov
push
mov
lret
or
enter
out
dec
shrb
pop
push
mov
xchg
aam
xchg
sti
movsb
scas
pop
add
jne
sbbl
call
inc
shll
cmp
fdivs
int
add
mov
es
mov
fcompl
mov
fmull
or
inc
int3
test
fidivl
popa
mov
sbb
subb
subb
adc
jl
sbb
pop
add
or
jl
pop
dec
lret
adc
jl
mov
fsts
sbb
sbb
push
jmp
and
push
lret
push
jb
jecxz
sbb
mov
call
xor
jp
js
jb
rcl
inc
inc
pop
xor
dec
or
add
sbb
jle
mov
xor
push
sub
lahf
popf
imul
pop
pop
xchg
bound
aas
pop
cmp
je
jmp
adc
out
xlat
sub
popa
outsb
out
inc
mov
test
pop
jle
mov
mov
sub
and
out
jnp
dec
and
mov
popa
sbb
inc
popf
dec
adc
push
in
and
mov
sub
ds
jb
mov
lods
push
nop
ret
adc
or
call
or
and
sbb
es
mov
ret
call
nop
xchg
add
hlt
and
mov
in
loopne
sbb
test
shr
movsl
lods
popf
int3
or
nop
data16
das
add
pop
jle
inc
push
in
and
jbe
xlat
es
push
sub
lock
xchg
xor
shlb
push
xor
xor
or
mov
nop
mov
inc
in
push
push
inc
pop
lret
mov
inc
cmp
ljmp
add
stos
pop
addr16
mov
mov
mov
or
imul
sbb
adc
sub
test
and
dec
inc
mov
pop
call
insl
lock
es
add
pop
sbb
jle,pn
daa
push
push
dec
push
cwtl
call
fdivl
jne
xor
add
cmp
in
sbb
lock
orl
hlt
sbb
jnp
push
or
in
inc
cmp
jg
sahf
and
lea
jge
stc
mov
gs
sub
push
cmp
ret
or
dec
add
inc
or
mov
rol
jns
cwtl
xchg
cmpsb
pushf
lock
popa
xchg
scas
cwtl
cwtl
add
xchg
jmp
xchg
ss
lods
fs
push
ja
sub
and
aad
pop
cwtl
adc
inc
stos
mov
push
push
adc
mov
add
rcll
aam
pop
les
push
adc
sub
sarb
pop
ret
sarl
ret
int3
fst
inc
loop
out
or
push
rorl
lock
dec
shr
mov
xor
pop
cmp
push
mov
lods
dec
push
fdivs
arpl
das
push
push
xor
add
clc
jge
and
stos
xor
testl
out
and
xor
insb
aam
or
add
pop
and
jbe
jae
cmp
xchg
out
push
idivb
add
shlb
cmpsb
aas
sub
imul
sub
mov
jmp
jmp
cmp
movsl
pop
rol
and
daa
aad
push
pusha
mov
enter
mov
ljmp
idiv
arpl
mul
xor
lea
test
add
setb
js
jne
int3
test
sbb
adc
jmp
sbb
jo
mov
je
add
pop
inc
push
rorl
out
jmp
mov
out
jno
out
mov
fsubrl
or
mov
dec
or
mov
xor
adc
popa
jbe
scas
faddl
adc
popa
or
sahf
popf
dec
xor
add
movsb
pop
int
xchg
adc
xlat
fidivl
inc
push
xor
push
test
lods
mov
ret
rorl
xor
mov
pop
mov
or
dec
add
push
sbb
push
cmp
sbb
push
je
outsb
mov
adc
cmpsl
or
rcrl
jp
out
inc
adc
sbb
orps
lea
aaa
dec
imul
mov
pop
inc
adc
inc
mov
rolb
imul
xor
push
imul
sbb
xchg
mov
xorl
pop
sbb
ljmp
loopne
lock
aaa
js
loopne
test
xor
lods
jo
test
pop
in
mov
fistpl
mov
mov
mov
cli
cmp
jb
push
adc
jae
test
arpl
push
test
cmp
loop
imul
cmp
inc
sbb
das
inc
cld
aam
clc
inc
push
mov
int
mov
lock
cmp
jg
mov
lods
ja
sub
push
or
dec
inc
faddl
cmp
out
jg
push
cmp
je
nop
or
jmp
mov
outsl
push
or
mov
push
shr
sbbl
jmp
adc
sahf
add
popa
or
popf
xor
mov
sbb
push
icebp
aad
popa
mov
js
arpl
inc
pop
daa
call
stos
push
in
or
push
push
add
cmpsl
cmp
sub
popf
jle
movsb
xorb
aaa
in
push
insb
lock
push
sub
xchg
add
mov
clc
call
xchg
push
jmp
add
mov
mov
xorl
jl
sub
pusha
push
mov
lret
dec
insl
and
std
xchg
movsb
movsl
mov
inc
mov
sub
mov
por
cmp
add
push
lock
cs
add
fst
addr16
popf
popa
push
in
push
nop
sbb
fimull
aam
loopne
hlt
mov
push
or
pop
xrelease
setp
add
dec
jo
sbb
enter
inc
or
jns
ret
mov
jne
sahf
out
repz
push
repz
cmp
or
push
or
in
lret
dec
insb
jne
or
cmp
push
push
repnz
lea
inc
mov
cmp
push
scas
loopne
cmp
mov
sbb
or
sub
add
adc
pop
adc
pop
mov
mov
or
or
out
push
or
jo
sub
nop
cwtl
fstpt
xchg
movsw
cmp
loop
xchg
sub
xchg
pop
fadd
add
in
popf
xchg
jmp
push
push
xchg
dec
sbb
add
jnp
testl
jb
shlb
mov
adc
dec
arpl
outsl
cltd
add
push
ficoml
cmp
pop
and
sbb
sbbl
lock
sub
mov
xor
ja
xor
xor
and
push
test
xor
push
jae
jne
rol
call
js
jb
inc
xor
push
pop
stc
pop
and
jne
shr
ja
mov
out
mov
shrb
jbe
mov
outsb
cmpsl
enter
mov
push
xchg
aaa
rcrb
sub
dec
mov
mov
mov
fs
xchg
cmp
nop
adcl
dec
fstl
pop
or
sub
cmpb
data16
pop
orb
mov
lcall
cmp
pusha
imul
cmp
jl
mov
pushf
lahf
lahf
call
cmpsb
cwtl
sahf
add
enter
int
movsb
roll
test
inc
mov
xor
addr16
scas
sub
fidivrl
inc
and
pop
lods
cmp
sbb
loope
adc
int
adc
and
add
sbb
cltd
popa
mov
pushl
popf
nop
xchg
push
add
fadds
add
nop
sbbl
sbb
nop
add
fs
push
cmpsb
mov
jbe
xor
xchg
push
pop
ret
lea
sbb
shlb
add
jmp
prefetchw
sarb
adcb
push
mov
jne
xchg
cmp
jne
and
test
xor
ds
divb
shrl
dec
pcmpeqw
rorb
scas
or
adc
mov
mov
pop
imul
mov
das
cltd
lods
add
dec
adc
fbstp
dec
data16
lret
sbb
and
leave
jo
jne
sbb
lcall
or
or
xchg
xchg
add
ja
sbb
popl
clc
jne
adc
loope
mov
jb
mov
andb
dec
mov
push
mov
dec
out
arpl
inc
or
pusha
and
addr16
mov
pop
jp
mov
push
test
in
push
push
clc
insb
sbb
xchg
add
pop
fcoml
jo
rol
ljmp
add
xchg
add
cmp
mov
push
pop
jne
fcmovnb
loope
mov
add
clc
cmp
popf
add
imul
notb
fstl
rolb
jg
sbbb
ss
adc
push
jo
and
add
in
mov
je
mov
pop
repnz
out
add
xchg
pushf
fcmove
cmp
adcl
pop
push
mov
mov
inc
xchg
out
or
pop
sub
rolb
ret
roll
mov
xchg
jbe
mov
adc
pop
mov
pop
dec
jne
stc
lock
cs
clc
push
stc
je
mov
adc
jne
xor
jb
inc
xchg
ja
fwait
gs
in
inc
inc
lahf
sub
aaa
mov
sub
cwtl
dec
cmc
adc
add
push
and
sbb
and
iret
outsb
adcb
testb
mov
ffree
adc
shrb
nop
jl
pop
popf
inc
mov
test
xchg
mov
clc
mov
mov
movsl
cmp
or
icebp
push
ljmp
addr16
xor
outsb
lods
cwtl
dec
xchg
add
or
sbb
pop
jnp
shrb
cmc
arpl
lock
adc
push
push
mov
add
dec
add
or
or
adc
inc
movsl
jae
inc
sub
pop
xor
sub
sbb
jp
sahf
jecxz
mov
adc
addb
inc
mov
xchg
or
cmpsb
shrb
sub
sbb
jnp
push
mov
enter
push
jl
jp
and
and
in
and
mov
adc
push
mov
xor
dec
mov
inc
sarl
sbb
and
sbb
jnp
push
inc
lods
outsl
mov
nop
pop
sub
je
pop
sbb
fs
pusha
insb
insb
and
push
jmp
les
popa
fs
lds
mov
ret
fcomps
pop
testl
je
cmp
je
mulb
mov
push
cmp
insb
and
iret
je
xor
adc
push
js
ss
xchg
inc
pop
sbb
shlb
pop
fsubrl
push
xor
dec
leave
xor
or
add
andps
mov
dec
lock
adc
and
enter
lock
and
push
cmpsl
addb
jmp
adc
adc
repz
cmp
sub
ja
or
dec
ss
mov
jo
mov
loopne
sbb
ret
cmpl
insl
orl
inc
push
cs
pusha
das
mov
popl
lods
xchg
lock
leave
inc
out
cltd
test
shlb
mov
cwtl
jl
testb
bound
inc
sub
add
xchg
cmp
xor
lock
xlat
test
je
test
in
add
sbb
jp
dec
ret
jbe
mov
and
enter
inc
ret
push
sbb
jns
lds
ds
jge
cmp
mov
xchg
or
inc
lods
insl
jne
mov
xor
adc
mov
ret
push
addr16
fsqrt
lods
out
push
aas
jne
ja
das
fdivl
fsubs
cltd
fidivl
stos
or
push
mov
fstl
fidivrs
or
sub
push
test
sub
pop
loopne
add
add
pop
or
outsl
add
pusha
xchg
push
fcmovb
sti
jns
cwtl
dec
push
lea
xor
push
adc
add
push
push
mov
dec
imul
sbb
lods
xor
test
or
fcoms
lock
inc
sbb
xor
in
push
cmp
mov
or
push
add
pushf
mov
inc
aam
lods
cmp
pop
arpl
mov
das
push
lcall
pop
xor
push
push
fsubs
into
inc
std
inc
sbb
cli
mov
mov
add
sbb
pop
cmp
adc
add
pop
xor
sbbb
xchg
xor
sbb
pop
loopne
add
sti
mov
cli
pop
ficompl
negl
jge
mov
mov
loopne
sbb
cmpb
dec
xor
push
add
add
test
xchg
add
inc
ljmp
push
mov
adc
and
or
fcompl
rorl
and
pusha
or
pop
fistl
ret
xchg
pop
into
jecxz
lock
and
adc
mov
cmp
ds
mov
xchg
fnstsw
push
xchg
ret
bound
push
lret
inc
sbb
push
loope
add
inc
ret
sub
pusha
cli
aam
inc
adc
fisttpl
jecxz
loope
sub
test
xor
sbb
pop
sarb
and
test
pop
xor
pminsw
add
aaa
ret
mov
sub
mov
aam
mov
fcompl
add
test
pop
mov
cltd
sarl
xor
pop
or
mov
sub
mov
mov
mov
sbb
cmp
ret
pop
es
out
jo
push
cli
ss
mov
xchg
sahf
cmp
dec
inc
xor
push
xchg
popa
cwtl
bound
jbe
lock
movsb
insl
cmc
or
orl
das
and
or
push
mov
ljmp
ret
pop
aas
mov
jge
mov
adc
imul
and
in
add
push
mov
or
das
mov
inc
xchg
adc
cmp
push
push
dec
incl
lea
push
push
jno
rolb
mov
pop
jl
mov
es
add
push
lods
rorb
scas
clc
mov
mov
xor
test
orl
iret
in
adc
adc
sbb
dec
repz
sub
sbb
outsb
inc
imul
add
and
aam
cmp
inc
mov
popa
add
jnp
aam
and
cmp
in
jge
orb
pusha
and
mov
lods
xor
pop
stos
sarl
push
sbb
ljmp
loopne
test
hlt
shlb
inc
ret
in
push
pop
sub
pop
icebp
and
push
loope
test
xor
call
mov
imul
inc
mov
sbb
rdmsr
outsb
mov
sarb
stos
push
sbb
ret
inc
sbb
xchg
dec
xor
call
add
lods
pop
inc
xor
adc
push
jns
mov
jne
popa
or
mov
adc
mov
jbe
or
lea
push
push
push
and
adc
inc
sub
fimuls
adc
jb
roll
lret
mov
sub
int
push
and
int3
ficomps
cwtl
fbld
out
in
inc
or
ret
ss
add
ficompl
rclb
cmp
ret
or
pop
xor
and
loope
mov
xchg
movsb
outsb
add
cmpl
outsl
inc
mov
xor
push
xor
add
sub
packssdw
fwait
daa
pop
adcl
add
lcall
insb
xor
sahf
pop
inc
xchg
xor
lock
daa
inc
jne
lock
int
cmp
fimull
popa
jmp
add
fidivrl
pop
std
in
add
loop
lea
and
out
ss
push
test
test
das
rcr
mov
adc
fisttpl
or
ret
mov
pop
pop
pop
jge
inc
imulb
xor
xchg
jb
xor
jge
adc
add
mov
jl
andl
mov
insl
cmp
dec
pop
sbb
and
or
cltd
add
lock
or
lret
mov
cmp
lds
dec
xor
pop
sahf
push
xchg
icebp
dec
cwtl
sbb
adc
sub
cwtl
push
xor
es
dec
adc
push
adc
xor
jge
movb
cmp
test
cmp
mov
mov
adc
push
test
xchg
repnz
cmp
das
shll
jl
dec
cmp
sbb
sbb
push
xor
or
mov
add
popf
mov
in
js
add
add
cmp
insb
dec
dec
adc
mov
push
inc
adc
inc
push
add
mov
call
jp
jmp
out
jmp
pop
cwtl
hlt
push
fbstp
mul
push
nop
or
mov
bound
leave
rorl
rcl
bound
push
pop
xlat
fcmovne
decl
mov
cmp
cmp
cmp
mov
xor
add
sbb
push
cmp
testb
or
mov
add
loop
jle
mov
jo
sti
lahf
mov
dec
jl
loope
xor
xchg
cmp
or
inc
xor
xor
mov
cmpl
std
ss
mov
arpl
adc
dec
xor
cmp
lret
mov
repnz
mov
stos
pusha
xor
sbb
out
dec
movswl
add
and
cmp
add
xor
popf
and
aaa
add
add
nop
add
data16
sbb
sbb
mov
test
mov
fldl
mov
rcr
jbe
stos
ret
filds
mov
lods
cmp
jne
cli
cmp
pop
test
dec
stos
mov
or
imul
cmp
loop
xor
ret
push
push
mov
subl
cmpl
and
or
add
inc
lea
fmul
lods
fcoms
dec
sub
nop
cwtl
shlb
pushf
data16
out
insl
xchg
inc
xlat
adc
aad
aaa
pusha
sahf
movsb
adc
in
stos
cmpb
mov
add
rolb
xlat
aad
jb
mov
pop
sbb
subl
or
xchg
loopne
imull
pop
andb
pushl
dec
add
repnz
adc
and
inc
sbb
jmp
nop
push
push
lea
ss
das
sbb
orb
pop
mov
shlb
jmp
push
insl
data16
loop
je
mov
cmpsb
xchg
cmp
xchg
mov
test
pop
add
shlb
jb
or
imull
mov
pop
xor
fisttps
push
add
cmp
enter
xor
adc
sub
out
and
lods
enter
push
addl
inc
push
pop
imul
js
xor
imul
push
push
jns
movsb
adc
inc
xlat
lock
jnp
inc
cmpsb
daa
add
or
inc
cmp
or
mov
leave
or
lea
push
inc
add
xchg
xor
cld
and
jecxz
mov
sti
mov
test
inc
js
mov
lahf
lret
les
loop
out
cvtps2pd
mov
cmp
inc
into
sub
xchg
sar
add
push
mov
push
loop
nop
push
mov
in
inc
inc
xchg
sbb
adc
cmpsb
push
inc
jbe
jg
xor
cmp
push
sub
sbb
frstor
mov
push
jp
xor
movsl
rcll
pop
jae
mov
sub
pop
xor
fmuls
popf
clc
push
jg
orl
jbe
mov
push
lods
cmp
dec
fidivs
mov
shlb
dec
insb
add
cwtl
lock
movsb
xor
add
mov
sbb
mov
or
jge
mov
add
divl
sub
cmp
inc
rorb
pop
outsl
jmp
scas
sub
cltd
mov
jle
dec
repz
jb
pushf
test
mov
adc
enter
add
dec
rcll
add
imul
pop
and
aas
lock
das
or
movsb
jae
insl
aad
and
add
rol
push
loopne
in
aas
call
movl
shr
inc
in
mov
clc
test
or
dec
adc
cmp
inc
sbb
scas
push
sbb
clc
mov
sbb
sbb
mov
mov
inc
sti
hlt
or
mul
xlat
fs
js
jb
mov
lock
arpl
push
push
xchg
dec
pop
add
cmpsl
hlt
sbb
insb
aas
xor
push
lock
popf
repnz
pop
adc
xor
hlt
mov
sbb
sbb
mov
jecxz
add
mov
cmp
jge
lock
mov
push
mov
lcall
in
cmp
adc
int
adc
push
rolb
pusha
adcb
xor
adc
bound
adc
xlat
jbe
inc
xor
icebp
or
out
adcl
adc
jbe
in
pop
jmp
sbb
sbb
movsl
adc
sub
aas
inc
sbb
mov
test
ja
lret
inc
mov
jg
inc
add
add
inc
jne
dec
popa
push
sub
je
add
inc
mov
push
pop
pop
dec
sub
orb
push
adc
sub
add
cmp
imul
mov
pop
adc
loope
add
push
lea
in
jecxz
mov
mov
jle
push
xor
or
or
pop
ss
sbb
sbb
incl
cmp
jbe
jmp
cmp
jg
mov
and
dec
in
outsl
sbb
aas
daa
xorl
in
add
mov
loope
adc
jl
pop
push
pushf
iret
shrb
into
inc
aas
mov
add
adc
aad
and
push
mov
mov
mov
cmpsl
test
jne
sub
inc
sbb
xchg
mov
sbb
inc
jnp
cmp
in
lea
push
adc
call
adc
push
in
aaa
adc
push
push
pop
ja
call
and
sub
push
leave
pusha
or
push
lcall
pop
dec
sub
sarl
mov
or
in
push
mov
pusha
pop
cmp
inc
test
mov
mov
or
jnp
inc
int3
sub
pusha
sbb
pop
mov
js
dec
insb
popl
test
pop
testl
cmp
roll
sbb
mov
call
inc
mov
pop
or
dec
or
mov
lods
inc
lcall
cs
mov
cs
add
enter
cmp
and
cwtl
xor
mov
inc
xchg
fidivrl
into
addb
cld
sub
cmp
or
mov
cmp
je
add
shl
inc
mov
addl
push
mov
jle
xor
or
sub
mov
sbb
xchg
ja
lret
fadds
and
or
loope
xchg
setnp
or
push
mov
and
rsqrtps
push
push
rcll
es
push
cmp
jl
movl
mov
cltd
push
cld
or
add
insb
dec
sub
int3
xor
lock
xchg
add
jne
sub
pop
xchg
push
lods
rcl
shlb
aas
inc
push
lods
dec
add
jb
testl
aaa
add
fwait
daa
push
jae
adc
push
test
rolb
dec
test
ja
add
mov
add
inc
and
dec
pop
pop
mov
lods
push
pop
mov
out
xor
lret
mov
inc
sbb
sub
sbb
aaa
adc
fisubl
jnp
add
mov
sti
sub
push
xchg
or
xor
cmp
push
push
mov
or
test
icebp
mov
lea
fbld
or
mov
ds
cmpsl
sub
or
gs
xor
xchg
mov
sub
push
into
xor
in
pop
dec
out
sbb
fsubl
push
push
xorl
dec
pop
add
or
in
shl
add
testb
and
cmp
fadds
or
inc
sbb
sbb
xchg
sbb
jecxz
stos
aam
pop
andl
inc
inc
push
mov
in
cmp
ja
je
outsl
outsb
mov
or
je
or
sub
xchg
lods
adc
adc
movsl
cmp
push
or
ds
sahf
test
xchg
test
sbb
inc
or
xor
outsb
ret
cs
sti
cld
je
movsl
stc
mov
push
adc
adc
imul
mov
inc
sbb
lcall
loope
push
dec
pushf
jmp
push
call
jp
inc
sbb
push
in
mov
mov
and
in
cmpb
test
cmp
or
push
dec
sti
adc
je
shlb
call
push
rorl
adc
stos
and
xchg
nop
popf
xor
pop
loope
test
cltd
and
add
adc
mov
jmp
lods
popa
xor
xor
aaa
push
inc
add
test
dec
je
sub
je
sub
add
outsb
jo
xor
add
nop
adc
in
sub
fmuls
or
lds
or
push
adc
inc
xchg
mov
pop
add
adc
rclb
test
dec
push
test
jmp
inc
or
lea
clc
cmpsl
dec
sbb
add
int3
sub
push
daa
ficoms
or
stos
or
xchg
push
push
sbb
jnp
pop
sbb
sbb
rcl
push
push
add
imul
push
mov
das
jge
xor
adc
fdivrl
notl
add
movsl
mov
jnp
divb
mov
fsubrs
sbb
push
sub
push
add
mov
inc
push
inc
push
push
push
movsl
sbb
push
shlb
call
int3
mov
adcb
loopne
popf
push
inc
cmp
and
repnz
negb
push
ret
addr16
orl
adc
xchg
idivb
out
push
push
jmp
inc
cmp
jne
aaa
push
cmp
or
mov
ldmxcsr
mov
test
jmp
movsb
flds
xchg
nop
arpl
sub
adc
lds
fwait
out
les
repz
sub
adc
leave
test
leave
jecxz
iret
mov
adc
test
xchg
out
cltd
xchg
ret
ret
rorb
lcall
jb
pop
fdivrs
repz
sbb
inc
lcall
inc
test
lcall
sub
jns
and
rcrb
mov
fwait
movsl
stos
test
mov
lds
xor
push
mov
cmpsb
jmp
cmp
in
cltd
cmp
xchg
fs
aam
xchg
cmp
mov
ret
test
ljmp
stos
call
inc
or
test
pop
shr
push
pop
push
ret
fs
imul
cmp
je
sar
inc
shrb
ret
ret
or
jno
loopne
pop
dec
sub
xor
jl
adc
sbb
and
pop
hlt
fstpt
sbb
dec
repnz
xchg
mov
pop
mov
mov
sbb
aam
loop
sbb
mov
xor
push
cwtl
pushf
adc
les
or
push
mov
adc
stc
mov
and
jo
sbb
or
adc
xor
movb
push
and
hlt
lret
aad
dec
push
add
pop
adc
mov
xor
add
les
xor
push
mov
les
add
push
out
mov
xlat
lea
movl
mov
cmp
or
int
jb
ret
push
lahf
dec
in
push
xchg
popf
push
sub
inc
push
cltd
dec
imul
call
xlat
sbb
or
xchg
fcoms
insb
nop
push
dec
sub
sub
cmp
and
inc
jb
movsb
je
and
jmp
ret
xchg
sub
subl
stc
pop
mov
insb
inc
add
or
test
pop
adc
adc
cmpsl
mov
and
add
adc
test
add
scas
xor
push
push
cmp
or
mov
add
in
push
push
cmp
cmp
loopne
pusha
test
call
or
push
arpl
call
xchg
pop
cld
dec
adc
and
inc
fcmovnbe
call
pop
incl
push
fdivr
and
fwait
imul
dec
and
pop
pushf
sub
inc
inc
inc
mov
push
test
inc
mov
xchg
dec
push
jecxz
movsl
and
sbb
into
pop
cmp
mov
xor
cmp
ret
push
popa
mov
push
orb
sbb
mov
ja
neg
sbb
mov
or
or
and
out
add
dec
sbbb
push
cmp
sbb
cmpb
test
xlat
xchg
sarl
fmull
shr
daa
icebp
push
mov
push
push
mov
push
push
push
pop
pop
jb
sub
or
dec
rcrb
aam
in
fnsave
in
cwtl
movsb
pause
pusha
pop
mov
xor
repnz
adc
add
cld
or
or
dec
pushf
push
or
iret
testl
xchg
mov
mov
out
or
pop
jg
adc
pop
sar
je
inc
or
push
arpl
and
hlt
movsl
dec
insl
cmpl
dec
insl
add
inc
push
sbb
and
lock
dec
insl
adc
sub
dec
sbb
inc
adc
call
ss
cld
jp
adc
bound
jl
adc
shlb
call
js
adc
mov
and
push
push
inc
pop
js
je
mov
ret
lock
movsb
rol
mov
out
cmp
jl
sbb
xchg
cmp
mov
xchg
and
push
inc
enter
mov
cmp
mov
movsb
mov
and
mov
js
sbb
mov
or
inc
inc
and
mov
dec
test
mov
pop
insl
cmp
cmp
mov
enter
xor
nop
jecxz
push
push
clc
and
mov
and
xchg
push
outsb
jle
push
rolb
adc
inc
jne
adc
mov
cmp
test
lods
dec
fistl
ss
idivl
sbb
push
movsb
jecxz
mov
mov
inc
lea
psrad
loopne
test
add
add
lock
adc
cmp
testl
les
mov
shll
or
icebp
xor
rorl
jnp
cltd
xchg
outsb
in
aaa
stos
sbb
mov
xchg
add
or
scas
mov
es
dec
les
mov
je
pusha
gs
andl
add
popf
ljmp
adcb
and
add
jnp
insb
jp
lock
lret
cmp
push
lods
push
fisttps
adc
push
adc
push
jbe
jmp
in
dec
dec
mov
mov
cmc
fwait
add
mov
sti
and
add
fiaddl
enter
inc
dec
dec
dec
hlt
add
pop
je
or
push
cmp
cmp
jle
or
aaa
xchg
and
inc
cmp
adc
push
push
mov
cld
subl
adc
lcall
lcall
rorl
rcrb
inc
mov
cmp
cmp
aad
mov
lret
cmp
push
jo
and
int3
ds
pop
lret
lcall
jge
fisubrs
add
hlt
adc
and
cltd
icebp
mov
adc
lea
mov
jl
add
or
in
out
add
xchg
cltd
popa
ror
in
mov
mov
push
sbb
mov
add
or
fisubl
jno
les
and
add
push
clc
cmp
xor
add
add
in
test
sahf
je
dec
into
and
ja
imul
adc
sub
xor
push
dec
popa
add
xchg
sub
push
and
cmc
sbbb
push
push
jns
cltd
or
push
add
leave
out
fs
push
sub
mov
sbb
and
or
xchg
add
test
outsb
push
jmp
pop
mov
inc
push
push
sub
and
mov
loopne
dec
xor
ror
xor
xchg
sbb
xchg
cmp
repnz
mov
fnstcw
jae
and
push
push
pop
mov
sbb
fmuls
push
add
and
inc
xchg
mov
jns
in
push
push
cs
inc
add
pushf
mov
inc
hlt
push
popa
add
in
sub
nop
jl
adc
add
cli
push
dec
jmp
push
sbb
sarb
and
push
mov
inc
sub
lods
gs
mov
and
nop
ret
or
mov
xor
xchg
out
xor
pushf
out
mov
enter
inc
sub
jns
mov
decb
call
test
shll
add
push
out
mov
adc
mov
rcl
or
or
dec
ds
add
or
add
pop
ret
mov
push
shll
loope
inc
loopne
arpl
inc
and
movsl
inc
mov
push
mov
cwtl
lods
jb
sarb
int
lods
add
mov
push
shlb
imul
cmp
fbstp
push
mov
pop
sub
stc
jne
add
inc
int3
jle
leave
dec
xor
or
dec
push
add
sarb
jge
adc
mov
incb
add
inc
and
sub
sub
push
inc
daa
fisubrl
cmp
jb
aam
dec
cwtl
mov
and
fiaddl
ss
lods
les
add
cmp
jae
ret
lcall
or
imull
shl
pop
cmp
jne
jg
scas
add
test
dec
data16
cmp
mov
lods
mov
jp
mov
jle
cli
push
les
cmpl
jmp
push
sub
adc
mov
add
sti
pop
push
adc
pop
sbb
sbbl
pop
ss
jl
sub
sahf
shrl
mov
movsb
or
sub
enter
sahf
or
jge
movsl
add
sbb
adc
jecxz
inc
shr
xchg
lfs
insl
inc
popf
jno
jnp
and
into
into
clc
xchg
test
xor
sbb
jle
mov
push
push
add
imul
mov
fs
add
outsl
xor
ja
push
sub
cmp
lret
cmpsb
mov
inc
xor
outsb
jbe
movsl
lods
push
fsubl
nop
and
aam
sbb
aaa
unpcklps
add
call
add
push
mov
addr16
insl
dec
ja
jmp
nop
pop
mov
xor
xor
aad
gs
mov
push
insb
call
imul
or
or
or
xchg
in
cmp
jns
add
rclb
mov
adc
xor
rclb
scas
mov
cmpl
or
popa
mov
push
push
cli
add
shll
pushf
pop
xor
leave
push
xor
lret
push
adc
add
push
push
xor
mov
add
imul
mov
popa
jo
adc
push
lock
lock
rorb
inc
jb
enter
jns
and
xchg
push
daa
inc
mov
push
and
cmp
or
push
stc
add
sbb
push
dec
stc
add
test
push
sbb
stc
lea
add
mov
cmp
mov
cli
or
lock
push
and
push
jg
addr16
fs
leave
inc
and
shlb
mov
je
xchg
out
outsb
xor
push
lea
in
add
enter
out
dec
test
xor
pop
scas
sbb
and
sub
or
or
mov
push
jg
pop
xor
or
adc
adcl
push
push
inc
fmul
inc
add
cmp
dec
inc
dec
adc
incl
aas
ja
push
dec
sub
add
call
std
add
or
daa
mov
loopne
mov
add
jmp
or
stc
mov
adc
sub
jle
mov
inc
adc
adc
aas
push
jmp
sbb
cmpsb
test
xorb
mov
or
cld
xchg
cmc
xchg
add
fdivs
push
loop
inc
and
loope
ljmp
sbb
sbb
iret
or
jl
ret
movsl
cmp
out
or
lahf
or
or
mov
sbb
divl
sahf
dec
push
jnp
jo
popa
pop
cmp
dec
leave
mov
sub
rclb
adc
movsb
out
or
and
stos
or
jecxz
pusha
mov
rcr
mov
xor
add
ds
jno
les
sub
push
add
or
lahf
fisttps
adc
dec
sub
add
adc
fs
pop
or
sysret
adc
push
imul
scas
push
push
rolb
lods
test
sub
sbb
sbb
add
mov
and
imul
push
and
and
sub
dec
add
pop
push
popf
sub
push
loope
push
scas
cli
fisubrs
movsl
rcrb
push
pop
or
fcoml
in
dec
jp
pop
pop
push
push
aam
and
cmp
jecxz
add
movsb
or
and
adc
mov
dec
fmull
add
pop
jecxz
js
jb
pop
fildl
and
rclb
adc
outsb
cwtl
pop
adc
bound
or
mov
pusha
sub
pop
mov
mov
jbe
pop
mov
or
sub
test
and
xor
or
or
lods
pop
cmpl
mov
sub
dec
xchg
adc
rorb
xor
jl
or
rcrb
add
and
lods
xor
push
outsb
jo
inc
dec
mov
jl
xor
mov
inc
out
in
shl
dec
pop
cld
pop
lret
lret
sub
xchg
add
xor
arpl
jo
lret
lahf
sbb
pusha
sbb
andps
pop
arpl
sbb
mov
dec
pop
push
test
pop
add
nop/reserved
fs
enter
stos
mov
dec
sub
int
push
push
divl
imul
cmp
clc
imul
ljmp
cld
sbbb
call
xchg
lea
mov
pop
add
inc
xchg
repz
cmpb
clc
lea
ret
push
insl
aas
xchg
loopne
jo
inc
inc
cmp
jb
jg
sbb
mov
push
enter
sahf
mov
movsl
mov
jnp
xor
push
or
xchg
push
and
notb
inc
clc
pop
pusha
aad
adcl
adc
in
mov
notb
xchg
xchg
dec
mov
add
in
push
cli
inc
pop
jp
inc
out
sahf
inc
call
jp
fildl
push
push
add
or
cmp
sub
xchg
xorl
mov
inc
inc
mov
or
and
mov
inc
push
pop
stos
fsubrs
sti
jl
test
add
jg
movsb
add
pop
or
mov
sub
mov
sbb
cmp
sbb
mov
push
aaa
movnti
mov
shr
not
rcll
sub
inc
or
sbb
out
add
lret
popa
jbe
push
shll
push
mov
add
addr16
sbbb
aaa
loope
or
dec
add
push
xchg
xchg
fistps
xor
lret
lret
lret
lret
xor
cmp
adc
in
or
dec
pop
cli
dec
popf
jmp
push
and
movl
add
sbb
add
shlb
adc
push
movsl
sub
lds
inc
add
cmp
cmp
dec
and
arpl
aaa
sub
adc
ficoms
and
mov
or
add
pop
inc
sub
cwtl
shr
sbb
jb
jnp
or
push
icebp
jbe
out
pop
or
sbb
out
es
sbb
aas
xor
add
scas
inc
imul
xchg
add
roll
and
sbb
movb
aas
add
jns
mov
sbb
rcl
jecxz
int3
mov
sbb
or
jp
jge
inc
call
pushf
adc
lea
push
imull
je
ret
add
stos
ja
cmp
add
xchg
push
xor
js
cmp
add
add
or
or
push
cmpsb
sahf
or
jmpw
push
xor
inc
fldcw
push
popf
jne
pop
cmp
sub
jmp
cmp
shlb
xchg
pop
lea
sti
rep
cmpsb
inc
xor
or
adc
xor
or
sbb
cmp
jae
adc
add
sub
inc
sbb
inc
mov
mov
add
sub
jne
in
imul
mov
cltd
cmpsb
xlat
push
and
push
mov
pop
mov
ret
loopne
adc
push
pop
data16
data16
or
inc
sub
inc
sbb
xchg
rclb
movl
push
inc
inc
mov
xchg
testb
add
inc
ret
ret
xchg
pop
mov
cmp
or
cmp
jne
mov
mulb
scas
sub
rolb
cli
xor
subl
out
mov
push
add
hlt
add
js
mov
xchg
hlt
sub
push
pop
add
add
cmp
mov
jmp
mov
or
aad
jl
add
test
call
and
push
lock
cld
sub
or
xor
lods
es
in
xor
push
out
xchg
rolb
push
fadds
mov
or
fcmovnbe
icebp
add
push
lret
lret
xchg
loop
mov
mov
push
push
push
cmp
adc
dec
mov
jge
aam
or
mov
add
call
lea
rol
filds
aam
orb
mov
dec
nop
lods
das
mov
adc
xchg
sbb
aas
jl
adc
jno
incl
ficoml
pop
jae
rclb
jbe
or
push
xlat
mov
adc
int3
sub
arpl
and
add
lret
adc
data16
inc
js
stos
cltd
orl
sbb
fcoms
lock
sarb
dec
jne
adc
decb
push
lods
movsb
bound
rolb
inc
sbb
cmp
or
int3
fs
sbb
pop
mov
xor
and
je
mov
xor
xor
testl
outsb
rcrb
jp
loope
out
mov
test
adc
dec
aad
sub
icebp
jl
sbb
sub
fisubrl
loope
movsl
and
inc
cmp
imul
lock
mov
sub
jo
dec
mov
xchg
adc
les
leave
adc
pop
mov
lea
or
inc
sbb
les
int3
adc
movb
xlat
add
jge
shlb
pop
nop
and
xor
lock
push
lcall
std
add
inc
adc
je
dec
aad
out
add
cmp
movb
movsb
lret
insb
loope
aam
pusha
scas
insl
push
adc
rol
fsubrs
push
or
cmp
adc
dec
push
cmp
sbb
sub
aam
or
push
push
outsb
cmp
je
rcl
and
out
adc
pushl
lcall
clc
add
clc
jbe
jmp
jb
mov
jmp
adc
scas
inc
or
pusha
in
inc
ret
pop
lock
jecxz
jae
addl
adc
in
mov
mov
pusha
test
jecxz
lea
inc
xchg
orb
or
and
ja
addb
lea
mov
fdivp
cmp
and
adcb
push
inc
cmp
sbb
pop
ss
jo
js,pt
in
mov
jmp
mov
mov
in
dec
call
orb
dec
sub
or
push
xchg
add
sbb
cmp
xchg
cmp
cmpsb
mov
sbb
mull
jae
mov
sbb
imul
mov
lods
addl
addb
or
xor
adc
adc
adc
push
push
sub
ss
ljmp
dec
add
jne
sub
mov
lahf
cwtl
outsb
sar
cli
jp
mov
pop
jbe
mov
mov
aas
add
jb
pushl
pop
test
popf
mov
pop
or
loope
loopne
es
jae
inc
sub
movsl
adc
jmp
and
rolb
das
mov
adc
mov
icebp
ljmp
mov
push
push
xor
cmp
inc
mul
xchg
and
sbb
bound
xchg
dec
fidivrs
lods
add
aam
cltd
adc
sbb
inc
and
sbbl
lahf
popl
mov
push
fistpll
dec
mov
xlat
cmp
movsl
add
inc
jb
cmp
jp
pop
leave
sbb
insb
and
ljmp
adc
daa
or
mov
and
mov
jecxz
and
and
push
mov
push
ja
adc
arpl
dec
or
mov
nop
and
addr16
enter
fldt
ret
enter
cmp
mov
jbe
pop
xlat
and
mov
aas
add
add
cmp
std
icebp
cmp
addb
or
or
fadd
stc
adc
js
jne
testl
pushf
and
push
pusha
add
or
test
pop
daa
movsl
sbb
subl
lcall
adcb
sub
mov
inc
shrl
pusha
mov
ret
mov
pop
pop
mov
fdiv
ficomps
shlb
mov
add
inc
aas
push
nop
inc
xchg
pop
and
nop
inc
jo
nop
inc
push
nop
mov
push
nop
inc
push
and
nop
inc
fsubrl
enter
add
daa
xor
enter
pusha
sub
pop
enter
std
mov
das
jmp
push
cmpb
pop
push
lret
push
jle
in
sbb
xor
or
xor
sub
cmp
movsb
movsl
xchg
xchg
lea
movsb
je
sbb
sarb
cld
or
dec
dec
lret
out
pusha
push
push
add
ret
sti
cmpsb
or
push
inc
sbb
xchg
adc
adc
sbb
adc
hlt
ljmp
push
fwait
roll
or
adc
xor
adc
inc
adc
sub
xchg
add
pop
dec
inc
inc
rclb
or
jb
push
push
lea
add
sub
or
adc
icebp
or
cmp
scas
jge
dec
push
lock
mov
pop
pop
pop
inc
adc
sarb
and
mov
leave
push
lret
add
or
popa
adc
pop
sbb
push
mov
mov
cmpb
loop
scas
out
cltd
jge
jb
dec
pop
pusha
lret
out
mov
add
adc
movsl
xchg
fdivr
mov
push
adc
add
cwtl
adc
andb
andl
push
fimull
in
ss
ds
pop
xor
pop
xchg
mov
fisttpll
xchg
shlb
fsubrl
cmp
and
pop
leave
mov
lock
aad
test
addl
or
add
add
nop
and
lods
inc
xor
jne
push
aam
adc
xchg
outsl
je
or
push
add
add
stos
sbb
mov
inc
cmp
mov
xchg
mov
hlt
pop
sbb
stos
lods
add
inc
mov
or
or
cmpsl
pop
js
lea
jne
and
xchg
stos
loopne
add
je
daa
add
inc
pusha
xor
sbb
sbb
mov
sub
shll
xor
sbbl
sbb
sub
cmp
sbb
mov
mull
sbb
mov
jg
pop
sbb
adc
cmpsl
dec
movsl
pop
dec
mov
mov
sub
mov
cmp
mov
cmc
jae
mov
and
lock
pop
test
sbb
add
or
sbb
push
pushf
test
dec
cmp
jg
dec
neg
jp
mov
sbb
and
bound
es
fdivrs
or
xchg
push
add
mov
add
and
call
sti
xor
lret
adc
sbb
inc
or
fnstcw
repz
insb
pusha
daa
mov
inc
jmp
pop
inc
fmulp
lahf
testb
add
out
rcrl
repz
jp
jmp
add
addl
clc
int3
mov
or
call
push
push
wbinvd
andb
in
outsl
xchg
fsubrl
or
pop
xor
mov
inc
mov
or
jmp
push
adc
pop
dec
mov
add
adc
and
jno
push
clc
cmpsb
push
mov
mov
and
pop
or
jb
lret
add
sbb
mov
mov
xor
inc
mov
cmp
inc
and
mov
inc
cmpsb
repnz
or
or
jge
xchg
fstpt
out
add
push
mov
std
and
jae
imul
or
push
inc
xor
add
and
xor
jge
adc
push
fimuls
xlat
imul
sbb
nop
popa
lock
movsb
mov
andl
inc
lock
add
js
dec
inc
and
pop
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
mov
or
out
cmp
mov
pop
sbb
inc
cmpsb
cmp
xor
jge
mov
pop
and
stc
iret
sti
sbb
xor
je
cmp
je
sub
jge
jne
push
sub
lcall
iret
and
inc
and
fcmovne
pop
jecxz
slwpcb
fsubrs
mull
loopne
test
into
orb
out
sbb
fistpl
push
cli
push
adc
mov
mov
cmp
jl
dec
pop
inc
les
sbb
mov
jl
inc
xor
ds
add
sbb
jge
pushl
es
rorb
adc
mov
mov
adc
add
and
dec
sub
add
aas
js
jbe
mov
imul
sbb
dec
sbb
cmp
insb
fs
adc
jo
scas
and
xor
dec
xchg
or
cmp
lea
xor
sub
or
jp
mov
je
test
aam
sbb
push
in
clc
sbb
jmp
push
xchg
add
xchg
mov
push
pop
dec
punpcklwd
pop
jb
adc
cs
into
aaa
push
sub
mov
test
je
cs
mov
pop
xor
por
cmp
push
or
scas
xchg
mov
lea
add
lcall
mov
cli
cmp
aas
push
pop
adc
in
mov
xchg
cmc
pop
push
jo
lds
adc
jns
or
sub
push
test
or
pushf
inc
leave
loope
sar
inc
and
dec
stos
xor
das
sbb
fstpt
test
add
pop
adc
repz
pop
pusha
fbld
add
push
and
cmp
in
mov
mov
lods
mov
sub
and
bound
dec
sub
add
rcll
add
push
inc
inc
inc
nop
push
insb
adc
fldcw
js
xor
push
adc
push
dec
xlat
je
movl
fsub
je
rolb
and
cmp
xchg
xor
loopne
add
sar
xlat
jno
shrl
pop
mov
addb
mov
adc
sar
fidivrl
nop
pop
rclb
ret
sbbb
fs
sub
jle
and
dec
inc
aam
fs
jno
inc
loopne
rclb
outsl
jmp
jne
jecxz
jno
les
mov
mov
shll
or
xor
dec
das
add
cmp
popf
jbe
pop
repnz
jmp
outsl
por
inc
lret
test
and
add
xor
or
add
add
fwait
adc
sbb
xor
mov
jmp
inc
clc
clc
fsub
jl
fucomi
mov
shlb
xor
lods
or
lea
lods
sbb
test
scas
inc
inc
popa
or
and
or
cltd
daa
testb
adc
out
mov
inc
sub
push
adc
sbb
adc
or
sub
les
mov
icebp
lahf
test
add
push
dec
push
xor
xchg
xchg
ret
aam
adc
mov
test
or
sub
push
pop
sbb
leave
or
mov
clc
and
daa
lods
add
cmp
and
push
pop
push
add
or
sub
push
clc
inc
ds
mov
adc
push
mov
and
shr
bound
je
fbstp
pop
dec
add
and
sbb
jo
mov
rorb
leave
in
dec
insb
mov
jne
pop
mov
pop
jmp
and
xor
push
cmp
push
lcall
loopne
insb
addr16
fstps
mov
jnp
add
icebp
sub
mov
push
or
daa
and
fcmovbe
rorl
rorb
push
das
pop
or
aaa
xchg
les
cmp
and
ret
in
dec
addl
pushf
test
shrb
cmpb
cmp
fsubr
add
mov
rcrb
push
mov
mov
sub
jle
into
push
mov
pop
pop
push
add
push
jo
pop
js
rcl
sbb
leave
mov
sub
push
mov
add
dec
or
cmp
or
clc
push
pop
adc
sarb
notl
pop
inc
push
hlt
jg
mov
sub
pop
inc
inc
out
and
pop
adc
inc
pusha
pop
or
mov
adc
inc
loope
cmc
orps
sub
loop
loope
xor
and
lret
sub
sub
or
sub
lea
outsb
add
ret
adc
ficomps
jg
das
jne
push
push
push
add
out
or
inc
popa
push
outsl
pop
jno
or
adc
shrl
or
add
add
fistl
mov
inc
adc
repnz
mov
rclb
or
js
dec
inc
jge
mov
jbe
cmc
add
mov
test
dec
ljmp
dec
xchg
dec
sahf
call
lret
pop
mov
mov
fnstsw
imul
popa
or
mov
jno
xchg
and
movsb
and
ja
fs
pop
or
jmp
add
jle
into
mov
jmp
jbe
add
mov
call
adc
pop
add
and
mov
and
mov
mov
dec
xchg
dec
call
test
lea
xchg
and
or
int
and
or
mov
mov
push
adc
fst
out
jmp
in
mov
sbb
cld
jg
dec
cmp
cmpsl
and
pushl
jae
mov
xchg
out
cmp
sbb
push
inc
xchg
test
sbb
mov
div
je
popa
pushf
cmp
daa
sub
add
xchg
lock
es
inc
xchg
inc
inc
mov
mov
dec
out
pop
movl
mov
pop
mull
xor
adc
or
shll
jne
test
xor
dec
push
sub
mov
push
icebp
je
fldl
mov
dec
in
jo
jmp
push
cmp
cmp
insl
jne
adc
adc
jne
push
divb
iret
iret
repz
jne
or
jne
or
add
cmp
movl
fldz
lret
andl
or
inc
in
cmp
adc
ret
xchg
push
and
rol
inc
inc
test
loopne
out
mov
outsb
loope
mov
aam
arpl
inc
adc
pop
test
lea
fstl
jecxz
rolb
sbb
jp
mov
mov
add
and
xlat
mov
add
inc
cmp
sub
sbb
cmp
pop
dec
lcall
mov
cwtl
or
loop
sbb
cmc
sbb
adc
mov
lods
add
aam
cmc
shl
push
rcrb
mov
inc
push
sub
outsl
mul
mov
movsl
pmaxub
in
shr
lcall
lods
sbb
add
inc
sbb
sub
inc
adc
loope
inc
mov
push
fmull
push
push
add
mov
and
pushf
sbb
fnstenv
and
xchg
push
cs
loopne
dec
inc
or
push
xor
mov
sbb
or
lock
jne
in
imul
imul
test
mov
push
mov
movsl
cmp
repnz
mov
xor
jg
shl
push
out
pop
push
popa
fdiv
lret
sarl
push
add
push
outsb
mov
adc
subb
cs
insl
inc
jmp
push
pop
mov
sub
dec
push
bound
pop
movsl
mov
inc
pop
and
lds
pop
dec
pop
or
das
pop
push
and
lret
pop
ja
and
adc
fildl
xor
int3
test
or
dec
sbb
dec
sbb
add
xor
inc
repz
sbb
lea
push
or
jno
sbb
and
insb
inc
xchg
fnstsw
enter
add
push
imul
enter
jge
test
or
in
jns
or
jp
xchg
xchg
rorb
push
enter
cmp
lret
dec
fmuls
aaa
xor
or
xor
cltd
loopne
es
mov
imul
gs
inc
adc
adc
test
arpl
xor
rclb
popf
push
rclb
mov
sub
je
add
pusha
and
mov
adc
ss
in
roll
cmp
xor
add
in
clc
cmp
push
mov
xchg
and
inc
or
ficoml
aas
mov
push
and
ret
mov
mov
decb
push
mov
push
int
cmc
test
rcrb
push
jmp
hlt
mov
add
insl
cltd
inc
mov
push
ret
das
cmp
jmp
cmp
add
adc
pusha
add
add
dec
or
add
xor
je
clts
shl
loopne
out
ss
rorb
inc
jo
cmc
sbb
push
inc
xor
add
lods
sub
push
sbb
jb
add
or
xchg
and
lods
adc
add
test
push
push
push
add
mov
shl
lds
int3
add
pushf
mov
cltd
mov
pop
sbbl
in
add
popf
mov
mov
push
adc
inc
adc
ret
cmp
test
or
add
push
mov
mov
shll
iret
nop
mov
ljmp
imul
fs
adc
mov
in
nop
push
xor
mov
xor
test
aaa
movsb
cvtdq2ps
xor
or
sbb
out
mov
test
push
out
mov
pusha
and
mov
mov
pop
loope
push
test
ss
ss
mov
pop
inc
dec
sar
inc
add
and
push
push
sbbl
sarb
xchg
xchg
adc
pop
add
push
aam
leave
pop
mov
jle
andb
sbb
dec
cmp
clc
aad
les
or
push
cmp
jg
in
filds
pushf
lcall
sub
add
pop
ret
gs
clc
inc
push
sub
pusha
xor
mov
in
mov
test
mov
inc
pusha
inc
dec
cmc
jecxz
orl
loop
in
sub
pop
add
cmp
cltd
mov
add
out
jl
ret
cltd
cli
mov
and
adc
add
jae
adc
mov
add
push
bound
xchg
pop
jo
daa
adcl
cmc
dec
test
mov
xor
ret
push
jp
subb
into
pop
lea
push
pop
xor
or
xor
push
sub
sbb
pusha
jnp
aad
fwait
dec
mov
adcb
rcl
dec
stc
or
or
in
cmpsl
ret
fs
fnstenv
pushf
lds
imul
fcoms
mov
adc
push
push
sbb
cmp
sub
jge
mov
addl
push
sub
add
lds
add
mov
xor
push
mov
xchg
jne
add
fmull
push
gs
repnz
and
cmp
stos
leave
test
jmp
popf
xchg
ljmp
xchg
and
ret
inc
mov
inc
or
inc
rclb
mov
movsl
mov
jne
movsl
pop
adc
popf
inc
fcoml
inc
mov
inc
and
ret
add
insl
lods
adc
and
push
adc
movsb
bound
shrb
jge
push
cwtl
xor
push
cmp
jg
popf
inc
xor
outsb
mov
sbb
dec
add
add
add
inc
mov
cmp
aam
xchg
push
cmpsl
mov
sbb
push
sub
cmp
lock
mov
adc
inc
lea
and
adc
insl
sub
inc
scas
fcom
nopl
inc
ret
mov
push
mov
aas
aam
sbb
add
xchg
and
adc
dec
ret
inc
cmp
jle
lcall
push
xchg
add
into
sbb
or
sbb
sub
lods
xchg
adc
dec
jl
shlb
mov
add
add
mov
sub
mov
aam
mov
xor
in
fs
xor
push
push
xor
dec
adc
pop
sbb
mov
adcb
push
push
xbegin
icebp
cmp
aaa
cmpsl
nop
loopne
popf
sub
push
subb
sbb
add
sub
add
lods
jecxz
xchg
mov
pop
loop
call
clc
ret
lods
out
pop
sub
repz
mov
pop
insl
sub
adc
jb
mov
dec
clc
xor
mov
mov
mov
rorb
ret
dec
dec
or
add
add
dec
enter
adc
xor
adc
je
pop
jns
fistpll
cmp
adc
dec
sbb
adc
dec
jl
loope
loopne
adc
lret
sub
mov
test
sub
sub
push
ss
add
nop
popa
add
das
popa
xchg
xor
sub
xor
scas
addr16
pop
push
mov
sbb
or
fistl
inc
mov
sub
add
mov
xchg
cmc
inc
mov
or
ljmp
add
xor
ficompl
das
mov
cld
xchg
and
mov
repz
or
xchg
sahf
cmc
stc
inc
pop
nop
sbb
cmp
cmp
cld
adc
and
and
ret
pop
mov
jne
pop
mov
mov
jle
inc
ret
xor
popa
pop
or
pop
scas
push
xor
cmp
mov
scas
inc
stos
pop
add
mov
add
mov
daa
inc
fadds
pop
and
add
xor
aas
mov
stc
aas
or
aas
inc
push
xchg
push
ds
aas
and
push
push
push
cwtl
jmp
in
andl
shr
sbb
mov
jg
cld
and
xchg
mov
lock
mov
push
or
mov
ud0
or
xchg
add
stos
cltd
repnz
addb
or
sbb
sbb
xchg
mov
movsb
or
dec
mov
test
mov
mov
or
xchg
add
push
push
repz
add
fwait
sarb
sub
cmpsl
lods
dec
xchg
push
test
js
data16
out
pusha
inc
push
or
test
dec
or
rcll
adc
xor
and
dec
nop
push
out
dec
cwtl
xchg
push
pushf
movsb
mov
xor
pusha
push
daa
mov
jb
mov
inc
or
movsb
pop
enter
and
inc
mov
xchg
arpl
dec
inc
iret
movsb
or
cmpsb
loope
cmpsl
xorb
movsb
flds
ds
push
inc
sub
inc
sub
lods
inc
push
imul
sub
es
jp
xchg
out
push
je
movsl
cmpsb
xor
lret
rcrb
adc
inc
sbb
and
popa
add
mov
cmc
sbb
mov
or
mov
mov
add
sbbl
int
cmpsl
hlt
clc
and
add
xchg
ret
data16
and
icebp
and
and
xor
add
mov
jmp
scas
rorb
je
arpl
aaa
xchg
lcall
adc
inc
push
xchg
cmpl
imul
and
daa
iret
dec
insb
test
and
fiaddl
xchg
xchg
and
sub
sbb
orl
xor
xchg
loopne
and
push
add
sub
sub
mov
mov
sub
shll
fsubrs
push
sbb
or
and
mov
or
lods
sbbb
push
adc
fiaddl
es
cmp
jp
sbb
mov
sub
mov
pop
cwtl
fisubl
jl
pop
or
sahf
dec
mov
fldcw
or
popf
pop
xor
inc
mov
adc
imul
mov
frstor
sbb
movsb
jnp
pop
shlb
sbb
xchg
mov
imul
mov
add
lock
roll
movsl
out
sahf
xchg
add
add
sub
sti
adc
loopne
add
sbb
pusha
and
leave
xchg
mov
adc
mov
xchg
movsb
cs
fdivr
sbb
arpl
jns
add
sbb
add
mov
std
and
jmp
out
xlat
sub
test
cmc
xor
fadds
push
fldenv
sub
in
int3
jne
jb
mov
mov
pop
popa
dec
lea
sbb
and
or
fisttpll
dec
rcrb
dec
inc
fnstcw
lock
inc
dec
add
je
add
bound
adc
and
sub
cmp
inc
sbb
sbb
mov
ss
fimull
or
inc
pop
push
mov
xor
ret
mov
pop
mov
pop
inc
sahf
nop
push
aaa
sti
std
push
push
or
or
sbb
jecxz
xchg
xchg
xor
xchg
out
call
movsl
add
jne
ret
shrl
divb
rclb
ds
sbb
call
cmp
shll
mov
add
or
xor
or
cli
in
ret
pop
jne
lods
js
pop
aam
xchg
repz
cmp
jae
fs
inc
pusha
insl
mov
inc
dec
cmp
call
xchg
fstl
adc
sbb
ljmp
add
cwtl
mov
adc
icebp
jne
push
push
popf
jbe
mov
mov
cmp
mov
shrl
sbb
cmp
inc
imulb
nop
sbb
insl
xor
test
lea
pop
xchg
or
push
bswap
adc
adc
pop
xchg
jmp
imul
rolb
ret
pop
scas
lods
cs
push
cmpsb
pop
test
xchg
jno
mov
mov
jg
and
xor
or
xchg
into
jo
addl
push
insl
stc
loopne
pop
mov
mov
and
mov
sub
cmpb
sub
cmp
leave
cmp
outsb
clc
std
dec
cmp
or
das
jl,pt
jp
xor
xor
testl
cmp
or
loop
outsl
sub
adc
and
movb
push
push
sub
add
insb
inc
adc
sub
fadd
sbb
pop
sbb
in
flds
fsubr
call
adc
add
jp
xor
cwtl
mov
or
or
ffree
popa
test
sti
mov
add
fnstsw
test
je
and
sub
lock
cmpsb
inc
outsl
pop
in
or
mov
push
pop
adcb
movsl
cmp
adc
and
loop
jg
sbb
fsubrl
push
cmp
rolb
fldcw
or
out
out
cmp
add
push
pop
hlt
mov
fsub
pop
fsubrp
mov
leave
mov
bound
inc
loopne
mov
lock
add
fldlg2
icebp
and
xor
push
rolb
dec
xchg
insl
and
add
push
adc
sub
dec
je
add
insl
xor
aaa
es
jb
repz
push
out
inc
push
ss
cld
mov
pop
push
sub
and
dec
rcrl
cmp
adc
lods
rorb
or
repz
pop
pop
push
or
sub
push
dec
sub
inc
lcall
adc
lret
and
movsl
push
jl
out
sub
xchg
push
mov
or
ja
adc
in
daa
xor
cmp
negb
and
cmp
loopne
jg
push
es
push
or
jb
ja
cmp
xor
mov
xor
xor
ret
jle
and
and
enter
or
and
mov
push
push
sub
or
or
lret
sbb
xchg
xor
xor
xor
sub
push
push
sub
adc
test
push
jne
xor
xchg
arpl
jbe
pop
push
jecxz
add
lods
pop
dec
test
pop
ja
ret
int
jns
mov
inc
sti
push
rorl
mov
pop
jl
mov
ret
pop
xchg
and
or
and
and
push
cmp
enter
inc
test
lret
pop
and
xchg
mov
mov
ret
xchg
adc
pop
shll
test
xchg
sbb
mov
push
in
loopne
push
push
xchg
inc
cld
mov
adc
pop
cmp
sbb
pushf
lret
and
std
cmp
in
popa
inc
sub
push
xchg
inc
pop
sbb
pusha
and
xor
xor
aaa
in
jo
jne
push
daa
xchg
aaa
pop
xor
sbb
aaa
mov
jo
mov
cltd
mov
push
pop
or
add
cmp
cld
sbb
or
inc
iret
repz
push
bound
xchg
cmpsb
lcall
adc
jns
out
xor
ja
jns
out
cltd
stos
mov
sahf
fucomp
call
sbb
repz
push
gs
repnz
repz
test
inc
loopne
fadd
adc
test
add
xchg
das
pusha
push
aad
cmp
fistpll
mov
lock
clts
or
inc
mov
mov
inc
addr16
es
mov
push
xchg
jno
sub
aad
push
and
sti
mov
dec
gs
int
adc
push
and
fldl
and
aad
adc
pop
test
mov
mov
sbb
fwait
rdpmc
fldt
fs
lods
lods
or
arpl
adc
adc
cmp
js
xchg
push
xor
cmp
dec
and
aaa
int
add
push
mov
inc
push
push
or
lock
aas
das
jmp
mov
sbb
add
adc
nop
adc
scas
dec
and
or
inc
das
bound
sbb
pusha
sub
pop
lods
push
pop
xchg
lds
iret
dec
or
popa
adc
adc
imul
add
add
aam
in
sub
filds
dec
scas
add
pop
fwait
insb
sbb
and
jns
push
ret
jns
push
add
fcompl
mov
mov
cltd
cltd
dec
xor
cmp
inc
pop
push
aam
add
mov
xor
jnp
sbb
add
or
arpl
in
call
loopne
cs
add
call
pop
sbbb
leave
fwait
add
inc
or
add
xchg
repnz
in
in
enter
cmp
and
loope
sbb
adcl
int
add
fadd
out
lock
push
xchg
dec
rcll
sbb
jne
pop
xor
and
pop
mov
xchg
add
adcl
movsl
push
sub
and
or
cltd
push
pop
enter
sbbl
dec
or
dec
cmp
cwtl
jmp
popa
xchg
fs
or
or
adc
out
pusha
add
fstl
push
movsl
mov
sbb
cmp
and
lock
dec
add
xchg
in
and
sub
enter
mov
xor
pop
adc
stos
in
push
mov
cld
test
cmp
pop
adc
or
push
shrb
mov
sbb
sbb
lods
mov
shrb
fnstenv
scas
sahf
jecxz
jl
pop
test
add
adc
adc
push
add
xlat
ret
push
sub
test
mov
iret
and
dec
and
mov
cltd
adc
and
adc
dec
or
adc
fistps
daa
test
add
arpl
inc
adc
adc
test
ret
pop
cmp
leave
and
adc
add
or
inc
les
pusha
push
test
je
or
je
push
pop
cmp
jne
cmp
or
aad
xlat
jno
sbb
fldt
or
jl
or
push
enter
add
dec
mov
push
ret
lods
xlat
adc
lods
or
dec
or
orl
sbb
stos
mov
adc
fnstcw
pop
pop
pop
add
mov
add
add
stc
and
and
pop
ret
push
xor
jmp
adc
add
xchg
sbb
add
xchg
sbb
push
dec
dec
push
ljmp
or
or
jbe
mov
mov
adc
inc
dec
sbb
aam
or
add
test
push
jle
ret
rolb
in
shl
test
js
ret
add
add
jb
cmp
divb
cs
sbb
push
nop
xchg
add
add
mov
add
sbb
pop
nop
orl
and
and
sbb
pop
mov
mov
adc
lea
mov
adc
repnz
cmp
mov
add
subl
stos
ret
movsb
sub
dec
es
add
inc
inc
in
xchg
sqrtps
in
mov
shlb
add
and
push
subb
scas
sub
lea
inc
xor
ja
dec
add
push
sbb
inc
or
mov
mov
mov
add
cmpsl
inc
mov
pop
mov
mov
filds
adc
shlb
inc
jb
or
push
das
add
or
add
xchg
adc
popa
adc
aaa
outsl
cwtl
inc
popa
aaa
mov
sub
sbb
test
and
lahf
das
push
add
sub
cmp
jb
push
mov
sbb
add
fwait
inc
int
xor
push
jno
mov
insl
cmp
sub
and
shll
xchg
mov
adc
sub
addb
or
pop
ja
jge
les
mov
loope
sbb
push
shr
cmp
sub
inc
inc
xchg
out
or
nop
jecxz
dec
dec
cltd
inc
push
adc
ret
shlb
roll
mov
movsl
sbb
sbbl
jo
pusha
aaa
mov
ret
inc
aam
xchg
sbb
les
std
pop
fdivrs
jae
bound
push
imul
cwtl
int3
aad
push
scas
pop
push
or
mov
sub
test
inc
add
mov
shll
cmpb
jl
cmp
les
pop
jmp
dec
sub
test
add
mov
jmp
push
inc
inc
fcoml
adc
insb
cli
ja
xor
pop
and
push
sbb
dec
shl
push
mov
or
and
or
add
fstpl
scas
inc
pusha
sub
add
call
dec
jl
push
lods
psubw
sbb
cmp
push
push
lret
sub
decl
das
pop
lds
adc
jne
lods
mov
push
mov
std
pop
sbb
pop
in
in
gs
inc
call
or
je
popl
jb
in
std
dec
add
and
sbb
xor
mov
add
mov
mov
mov
dec
add
in
hlt
lea
xor
cmpsb
cs
add
adc
pop
sub
aam
mov
push
sbbb
es
loopne
scas
inc
mov
loopne
fistl
mov
popa
push
or
loopne
xchg
dec
addl
movsb
push
shrb
xor
push
inc
pop
pop
iret
bound
dec
popa
sub
leave
sbbb
pop
inc
pop
pop
push
shlb
or
scas
loopne
test
cmpsb
sbb
or
xchg
mov
inc
push
test
push
mov
sub
mov
jle
loopne
aaa
inc
rorb
or
adc
jl
xor
jae
jmp
cmp
jl
or
sbb
popa
jp
adc
out
decl
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
enter
cltd
idiv
cmpb
scas
mov
out
cmp
pop
xchg
dec
xor
in
aas
and
lods
jne
mov
xlat
popa
add
dec
or
ret
cmpsl
mov
push
xlat
lahf
movsl
stos
add
aam
mov
fstl
or
push
jmp
xchg
testb
inc
pop
lds
dec
call
inc
xchg
jl
xchg
push
in
in
in
incb
xchg
call
int
popf
and
iret
in
stc
cmp
mov
dec
pop
push
sub
cmp
fisubrl
and
push
xchg
and
mov
stos
jne
sti
sbb
adc
movsl
jmp
mov
fmulp
inc
sub
in
rep
pop
push
les
push
pop
dec
ljmp
push
sub
mov
xchg
jl
cmpsl
pop
ljmp
dec
or
or
push
repnz
lcall
clc
sbb
addr16
or
or
pop
sbb
cmp
or
sub
sbb
push
jb
cmpsb
sub
and
test
pxor
xchg
imul
lock
pushf
dec
push
stc
push
adc
lds
push
inc
sbb
aas
sbb
sub
cmp
and
dec
gs
fst
imul
lods
addr16
lret
cmp
xchg
xchg
jno
jb
ret
pop
xor
xor
pop
popf
divb
mov
js
fistps
repz
pop
push
xor
ss
push
push
cltd
cmp
stc
sbb
divps
jae
jbe
sbb
mov
sbb
jae
leave
test
pop
pop
out
sbb
sub
in
nop
push
fsubrs
dec
mov
ja
fmuls
lcall
cmp
push
pushf
xor
and
sbb
sbb
mov
shrb
lcall
and
pop
inc
nop
inc
jbe
data16
and
pop
xchg
movsb
xor
jno
or
push
mov
pop
pop
xchg
es
xchg
and
xchg
dec
and
and
test
popa
enter
adc
xchg
jge
enter
xor
inc
jb
xchg
sbb
pusha
cwtl
xor
orl
pop
mov
leave
xor
mov
pop
sbb
js
cmp
in
mov
movsb
leave
and
dec
pushf
xchg
mov
out
je
dec
dec
cmp
mov
test
test
call
jo
sub
lea
xor
and
xchg
sub
dec
lret
imul
ret
pop
mov
add
xor
mov
aaa
pop
jmp
or
dec
inc
fldt
test
xchg
jno
iret
das
xor
xor
nop
imul
sub
push
push
mov
dec
cmp
sbb
jecxz
inc
cmp
mov
fmull
and
mov
hlt
or
dec
popf
mov
mov
sbb
and
ret
push
sbb
add
mov
push
rclb
popa
in
add
add
add
jb
sbb
sbb
push
or
pushf
leave
adcl
int3
filds
sbb
dec
inc
mov
jle
sbb
push
xor
das
and
push
aaa
add
fildll
push
mov
jo
and
mov
or
lret
or
jno
push
imul
adc
push
pop
popa
rol
popf
enter
xor
xor
decl
cli
ret
mov
push
pop
push
arpl
sti
mov
adc
movsb
jmp
ror
sub
in
dec
push
sbb
out
inc
adc
mov
cmp
sub
imul
fs
rcr
js
arpl
and
sbb
cmpsb
jne
orb
out
pusha
sub
jg
xchg
xchg
ret
fstl
adc
mov
sahf
inc
sub
xor
neg
sub
ds
add
ss
adc
sub
fs
loope
inc
fldenv
popa
dec
mov
mov
or
or
cmp
test
or
cmp
mov
mov
push
scas
push
push
repz
ret
and
jmp
push
or
push
pop
mov
dec
imul
or
push
int
ret
push
xchg
dec
outsl
dec
xor
inc
pop
ja
pop
xchg
and
adc
mov
and
and
jb
sbb
in
and
ficoms
fimull
loopne
mov
subl
and
adc
aaa
sub
pop
adc
jbe
push
pop
pop
sub
cmp
adc
gs
cmp
push
mov
movsb
pop
cmpsb
jge
xchg
xchg
fsubrs
cmp
es
bound
mov
and
add
icebp
jge
mov
popf
in
movsbl
and
cmp
pop
add
imul
inc
inc
hlt
push
push
adc
aam
add
repz
mov
sub
ret
int3
pop
clc
and
jecxz
add
push
mov
shlb
add
or
cld
rolb
adc
pushf
inc
xchg
lock
inc
push
in
out
or
subb
test
aam
mov
shr
sbb
aaa
jmp
je
rep
add
and
xor
adc
inc
imul
cmp
shlb
rcr
mov
cmpb
cmp
orl
xchg
idivb
sub
loopne
push
sbb
push
lcall
xor
cmp
xor
or
sub
mov
cli
xchg
lcall
xchg
jbe
sbb
inc
add
jne
rolb
xchg
cli
daa
add
mov
testb
cmp
int3
pop
jecxz
iret
lock
js
fxch
inc
jecxz
or
stos
mov
pop
xchg
cmpsl
sbb
fmull
mov
pop
mov
inc
or
fwait
dec
orb
fmull
andb
push
int3
sbb
arpl
cmc
add
cmp
fdivs
mov
mov
cs
adc
lret
aam
add
mov
je
fsubs
lods
add
mov
add
jo
jecxz
mov
cltd
lods
and
not
sub
gs
and
adc
and
rol
mov
shrb
std
add
mov
xor
mov
add
rcrl
mov
sbb
aas
lea
stos
cmp
sahf
add
and
js
mov
adc
sbb
xchg
movsb
xorb
push
lcall
mov
ss
cmp
xor
xlat
add
lea
push
mov
and
adc
pop
shr
add
in
adc
push
mov
stos
add
cld
call
pop
push
xor
popa
aam
xor
add
lret
push
inc
sub
inc
aaa
xchg
imul
inc
push
inc
or
in
jne
ja
fwait
test
les
jmp
daa
fwait
xchg
out
mov
cmp
cmp
mov
shrb
jae
jb
lret
insb
cmp
pop
cmp
mov
cmp
inc
cmp
sub
cmp
sub
mov
pop
cmp
adc
sub
or
popa
push
into
js
pop
cmp
add
adc
sbb
jne
or
dec
pushl
subb
mov
dec
scas
fildl
addb
pop
sub
in
and
enter
ret
jns
orb
cmp
jecxz
movb
into
mov
inc
stos
pusha
mov
dec
insl
add
add
es
scas
mov
in
cmp
jne
add
add
mov
inc
ja
cmp
push
xlat
pop
loope
rorb
das
sbb
xor
or
mov
adc
mov
stos
inc
and
adc
test
adc
adc
mov
dec
cwtl
nop
imul
add
adc
inc
stos
in
loope
add
jbe
add
jo
xor
add
bound
push
daa
in
mov
or
sub
loope
shlb
sbb
popa
mov
or
jnp
pop
loope
add
in
pop
inc
push
xchg
sbb
cmpsl
call
dec
and
ret
call
stos
fsts
movsb
call
inc
and
pop
add
or
cwtl
cmp
lds
cwtl
inc
xchg
in
xchg
sbb
dec
pop
outsb
xor
mov
pop
movsl
sarl
rolb
test
cmp
aaa
sub
movsb
adc
xchg
aam
and
adcl
or
mov
mov
call
mov
xchg
xchg
push
mov
jne
pop
gs
push
lret
out
push
jp
loopne
cmp
sbb
xchg
xor
mov
mov
and
in
cmp
lea
aam
ret
iret
adc
mov
inc
adc
mov
lods
push
imul
pop
aam
cmp
movsl
test
add
and
adc
push
jp
mov
movsl
in
jns
add
and
xchg
xchg
sbb
push
sbb
test
lods
xchg
out
adc
adc
es
enter
inc
cmp
fs
inc
mov
ds
pop
push
or
loop
add
inc
push
movsl
fisttps
xor
jne
or
adc
inc
push
orl
movsl
stc
mov
jl
lock
int3
xor
mov
xor
mov
pop
push
arpl
pop
xor
push
jb
cmpsl
sbb
mov
lods
movsb
repnz
push
xchg
nop
mov
sbb
dec
or
push
push
test
pop
xorb
add
iret
push
outsb
add
pusha
js
ret
arpl
outsl
sub
divl
out
mov
mov
and
add
rep
push
test
subb
xchg
push
mov
ss
inc
adc
lret
das
outsb
int
mov
loope
mov
cmp
add
pop
mov
cltd
jb
or
arpl
add
pop
out
ret
fcmovnb
sti
outsl
add
fistpll
add
mov
pop
sarb
or
addl
cmpb
sbb
dec
lock
inc
popa
push
mov
push
sub
xor
mov
testb
jae
mov
jo
call
cmc
aaa
call
push
mov
jmp
subl
dec
stos
std
dec
mov
inc
inc
stos
out
notl
clc
frstor
cli
mov
inc
and
pop
insl
push
mov
test
or
jecxz
test
ljmp
cs
in
jno
fimull
push
mov
xchg
xchg
mov
out
mov
mov
rol
cmp
aad
sbb
shrb
mov
jo
sbb
add
in
popa
cmp
add
xor
xchg
daa
and
add
jnp
sti
push
or
clc
xchg
dec
pop
leave
add
push
sub
pusha
sbb
add
add
addb
adc
fs
and
push
push
sub
out
inc
movsl
dec
sub
out
cmp
add
in
cmpsl
sub
and
inc
and
mov
jo
adc
rclb
xchg
adc
sub
push
xor
fstl
nop
xchg
push
out
add
or
add
and
jo
push
in
popf
or
add
popa
andb
xor
pop
into
and
ds
and
call
xlat
add
pusha
or
add
xorb
pop
call
cld
icebp
adc
sub
je
pop
or
test
ret
gs
sub
or
jne
sbb
rol
inc
pusha
or
mov
sbb
push
pop
mov
mov
push
or
and
addb
in
mov
fimull
mov
cmpsb
push
cmp
xchg
andb
push
lds
add
mov
push
in
cmp
dec
sbb
jl
rorb
loopne
adc
insl
pusha
pop
add
popf
mov
mov
jge
insb
pusha
adc
lods
fdivl
lods
imull
cmpsl
sub
rcll
pusha
and
bound
movsb
jge
sub
sub
cmpb
ja
jo
lea
mov
and
add
pop
outsb
mov
xchg
cmp
int3
sbb
les
outsb
inc
sbb
push
jae
adc
dec
push
push
fadd
shr
sub
add
mov
dec
pop
inc
or
sbbl
push
dec
jl
push
iret
in
and
into
inc
jo
subl
adc
or
adcb
inc
stos
pop
rorb
and
insl
and
scas
mov
mov
pop
sub
push
insb
xchg
sub
mov
xchg
and
add
or
pushf
pop
pusha
imul
adc
lods
imul
aad
xchg
xchg
mov
sub
inc
icebp
cmp
sarl
lea
enter
cwtl
pop
xor
cmp
outsl
loop
push
cmp
shll
inc
sbb
int3
rorl
mov
add
and
nop
cmp
ret
imul
aad
test
outsb
or
push
cmp
xor
sbb
sub
adc
sbb
lds
lods
popa
mov
pop
cmp
adc
push
leave
inc
push
call
push
repz
dec
std
sbb
dec
cmp
dec
ja
sub
fimuls
js
and
push
iret
lret
orb
sub
sbb
cmpb
inc
sbb
fisubs
sub
loopne
adc
fildl
push
and
and
cmp
jbe
adc
pusha
sub
xor
sbb
xor
adc
push
int3
adc
or
xchg
push
mov
and
pop
lret
je
push
xor
pop
imul
aad
mov
addl
cmpsb
mov
in
popa
imul
push
insl
jmp
out
mov
aaa
jmp
sub
push
jmp
fcompl
push
xor
sub
push
or
inc
fs
dec
sar
pop
push
in
mov
and
and
fsubrp
cli
mov
mov
clc
sbbl
mov
or
and
xor
and
mov
std
and
jb
inc
push
push
je
xchg
ja
pop
and
ljmp
popf
scas
sub
and
and
les
push
and
ffree
sub
rorb
push
fisttpl
daa
adc
aaa
xchg
test
sub
push
in
cli
popf
sub
sbb
andb
les
and
mov
loope
or
out
or
mov
push
inc
pop
and
cs
lret
in
sub
andb
lret
inc
je
add
popa
adc
fwait
jne
scas
sbb
data16
sbb
add
popf
pop
lods
minps
sbb
and
or
sbb
push
sub
add
pop
fs
bound
dec
mov
sub
push
mov
sub
mov
push
adc
mov
adc
pop
add
mov
inc
je
jge
jo
addb
jp
cs
adc
andb
in
std
adc
mov
jmp
sbb
push
jg
pop
filds
movsb
mov
add
ja
mov
pop
cmp
cmp
push
loopne
or
movsb
xorb
add
push
pop
add
sbb
dec
lahf
fistl
push
lods
mov
push
lock
cmp
mov
xchg
xchg
and
dec
rcll
mov
or
fidivl
cs
je
or
iret
mov
mov
push
pop
add
mov
lods
cld
or
ljmp
cmovno
and
or
rcrb
cli
add
push
and
insb
push
xchg
pop
leave
push
xchg
mov
jne
ja
mov
incl
and
cmp
jle
and
sahf
push
fcomip
adc
hlt
test
inc
fsubl
cmp
pop
sbb
nopl
mov
out
popa
add
push
push
or
andl
test
gs
rclb
ds
call
dec
push
pop
pop
ss
out
mov
out
in
jmp
cmpb
mov
or
cmp
in
cmp
mov
es
lea
into
into
mov
mov
push
mov
pusha
repz
sub
shl
mov
jnp
or
ja
pop
xchg
and
bnd
jmp
mov
rolb
dec
pop
push
out
gs
int3
loope
sbb
push
cmp
loopne
test
daa
push
xchg
pop
jle
notb
add
jb
jb
int
cmpsl
xchg
cmp
pop
repz
sbb
inc
in
movsl
pusha
and
dec
mov
inc
push
sbb
fsubl
or
cmp
in
test
mov
add
xor
xchg
mov
aam
dec
push
repz
cs
mov
clc
or
inc
pop
mov
lea
add
je
adc
jl
or
pop
vcomiss
shl
xchg
push
das
dec
test
inc
sahf
xchg
js
es
sub
dec
xor
andl
cmp
loope
inc
mov
adc
jo
pop
sti
jl
mov
adc
insb
mov
sbb
pop
sbb
popa
xchg
xchg
into
pushf
adc
aad
or
and
loopne
dec
std
cs
insb
test
or
push
cmp
ljmp
or
fdivl
mov
inc
test
xor
mov
xor
pop
sarb
or
xor
push
mov
fstpl
ret
push
cmp
ja
push
pop
movb
icebp
or
mov
cmp
add
xor
xor
lahf
xlat
or
cmpsl
mov
std
insb
mov
imul
jne
cmp
inc
mov
std
add
push
fucom
xchg
repnz
loopne
xchg
mov
std
mov
jo
lahf
or
shlb
faddl
lea
dec
sbb
clc
push
lock
movsl
jnp
pop
adc
add
pop
rclb
loope
mov
cld
lret
test
mov
cmp
lea
jecxz
inc
xlat
xor
mov
in
bound
rcrl
or
xchg
push
les
subl
movsl
aas
jo
sbb
mov
scas
cmpl
pushl
popl
frstor
inc
sub
or
xor
popf
inc
loop
and
adc
jl
call
jl
pop
sbb
dec
mov
jno
js
aad
xchg
pop
fildl
and
xchg
daa
mov
add
mov
les
aam
lar
js
add
push
dec
dec
add
arpl
faddl
add
shrb
and
dec
pop
shlb
add
faddl
mov
inc
jl
jl
or
insl
and
ss
or
mov
cmp
and
inc
popa
imulb
sarl
xchg
jl
adc
cmp
test
and
lahf
daa
scas
in
cmp
mov
imul
cmp
sbb
imul
imul
imul
push
inc
orb
test
push
jge
lods
cmp
push
aam
imul
aad
popa
andl
call
adc
pop
add
jne
jne
sub
sub
push
dec
xor
cmp
cmp
or
sbb
adc
js
sbb
adc
cmpsb
dec
repz
inc
arpl
adc
push
adc
add
jge
push
cmp
and
jb
sbb
mov
and
jns
pop
mov
push
sbb
es
and
adc
scas
shr
sbbl
jbe
std
addr16
jl
pushl
shlb
and
mov
push
jmp
push
sbb
dec
cmp
cmp
lcall
and
push
out
push
push
inc
or
or
pop
jbe
popf
das
mov
imul
sbb
or
dec
add
xor
push
aam
out
decl
cmpsb
mov
push
sbb
les
pop
mov
rorb
subl
pusha
adc
and
jbe
cwtl
lret
clc
and
sbb
fcoml
jns
lcall
or
jmp
mov
lahf
jge
stos
movsl
outsb
mov
push
push
dec
movzbl
out
push
test
jmp
ret
movsl
jmp
in
rorl
rcrl
and
sbb
inc
xchg
add
adc
pop
in
les
ds
mov
ret
in
push
add
dec
and
mov
mov
adc
dec
or
mov
out
mov
dec
or
inc
add
int3
sbb
sbb
sub
enter
sub
sub
rcrb
xor
push
daa
lock
into
lea
add
mov
mov
jbe
js
add
or
adc
cmp
fstpl
add
add
faddl
mov
add
mov
inc
sbb
and
jo
test
lods
in
cmpsl
xchg
test
or
inc
addr16
and
adc
jno
and
adc
fcomip
jne
inc
mov
mov
int
add
or
inc
rcll
adc
fistpll
inc
push
mov
addl
bound
or
add
pusha
inc
or
shlb
loopne
rol
adc
add
sbb
adc
sbb
xchg
dec
adc
inc
mov
and
mov
sar
mov
jge
mov
cmp
enter
enter
xchg
into
xchg
fcoml
lahf
and
or
add
dec
aam
jo
add
push
push
pop
inc
fistps
insl
sbb
ret
hlt
pop
xor
cmp
sbb
popa
mov
mov
cmp
scas
xor
add
fsubr
les
mov
add
pop
and
push
add
and
dec
xor
testl
push
or
outsb
mov
ds
call
aaa
mov
aaa
in
add
out
push
negb
mov
push
pop
fs
sub
adc
push
in
mov
jecxz
movsl
popa
std
ss
and
inc
nop
lret
and
int3
xor
fdivrs
int
pushf
mov
mov
mov
mov
jnp
adc
mov
test
mov
shlb
push
ret
cmp
add
xchg
aam
inc
fidivl
pop
aam
lret
mov
bound
add
cli
jne,pt
cmp
jge
xor
add
jno
notb
add
push
loopne
add
je
pop
pop
push
mov
jns
push
shlb
hlt
sti
ficoms
adc
jnp
dec
shll
sub
mov
or
sbb
in
adcl
xor
lcall
add
sub
jnp
dec
cmp
push
ja
inc
push
mov
mov
add
fsubr
dec
dec
add
neg
pop
mov
mov
cs
out
mov
sub
jmp
xorb
daa
add
mov
leave
hlt
add
pop
sbb
or
sbb
pushf
adc
add
or
or
push
sbb
fldenv
xor
dec
cmp
pop
inc
pushf
daa
push
aam
leave
dec
adc
dec
arpl
push
neg
pop
sbb
sar
rcr
cmpsl
and
stos
and
popf
sub
notl
in
andl
add
and
popa
jmp
pop
or
mov
imul
xchg
in
ljmp
sbb
out
lret
cld
sub
sarb
out
sbb
jg
pop
in
adc
add
fmuls
and
ss
jno
mov
les
jne
enter
pop
sub
sub
and
inc
adc
sahf
test
hlt
js
mov
push
sbb
adc
sarl
mov
mov
jp
xor
es
or
shlb
rcrb
cmp
scas
sub
loop
aas
test
and
add
jmp
mov
jge
ljmp
dec
add
sub
xchg
xor
and
in
add
scas
cld
and
in
mov
pop
sbb
dec
add
and
arpl
cli
or
faddl
fadds
push
out
pop
arpl
xorb
ret
jns
xor
hlt
push
pop
lock
push
dec
push
xor
icebp
push
dec
push
add
fidivrs
mov
push
push
call
cmp
inc
push
loopne
testl
pop
divb
and
or
or
add
jmp
mov
xor
add
mov
or
add
mulb
seta
pop
imul
pop
or
aam
push
shrl
mov
add
mov
js
push
lahf
mov
les
mov
movsl
adc
jle
lcall
push
mov
dec
cs
sbb
push
cmp
lods
jne
loope
add
mov
scas
shlb
or
fucom
lock
lock
add
mov
and
cwtl
movsl
dec
jb
or
push
xor
push
mov
call
repnz
or
xchg
int3
mov
pop
rcr
shr
push
push
and
and
imul
mov
ror
or
push
js
jecxz
gs
xchg
enter
inc
xchg
push
bound
push
or
insl
xlat
out
popa
inc
loope
push
aad
fmul
pop
pop
pop
jp
dec
mov
push
xor
cli
mov
pop
push
movzwl
inc
mov
inc
out
stc
lock
push
jl
cmp
mov
adc
lcall
or
push
notb
cmc
lea
cmp
xor
dec
xchg
pop
fstpl
lret
sub
or
mov
fidivrl
pusha
xchg
pop
xor
cld
les
sbb
loop
cli
cmp
cmpsl
repnz
in
add
add
sub
jmp
xchg
mov
push
scas
adc
or
rorb
loope
fcmovb
test
push
loop
hlt
or
subl
clc
aas
xor
outsb
mov
mov
jl
mov
imul
sbb
test
ljmp
rcrb
cld
mov
pop
lock
nop
xor
add
push
push
push
pop
mov
fistpll
cld
sti
rep
movsw
push
jno
sbb
cld
movsb
mov
jmp
mov
adc
ljmp
or
mov
inc
inc
cmp
jle
movb
cmpb
dec
inc
loopne
mov
fnstsw
jg
push
test
mov
push
pop
jl
lret
add
movsbl
xor
int3
mov
push
push
cmp
jb
and
push
sahf
mov
adc
or
adc
inc
dec
dec
imul
mulb
bound
imul
push
fs
outsl
jns
jle
mov
sbb
cmp
mov
sub
pushf
subl
or
fs
adc
dec
cmp
jl
adc
sbb
add
loopne
movsl
lahf
xor
sub
jbe
inc
xor
inc
mov
cmc
ss
or
cmp
push
adcb
adc
or
insb
lock
test
fidivs
mov
sahf
dec
ja
and
mov
sub
or
shl
add
pop
jle
sbbl
subb
add
jb
jb
push
pop
or
or
jnp
or
jbe
jmp
mov
jmp
push
jmp
por
jmp
mov
jmp
adc
push
adc
dec
adc
dec
mov
jmp
push
jmp
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
jmp
push
jmp
pop
jmp
and
or
and
or
jmp
and
ucomiss
movsl
push
test
jno
test
push
mulb
outsl
cld
movsl
xchg
push
sahf
out
sahf
lods
mov
vpmullw
out
fucom
in
repnz
cmp
out
add
repz
adc
cs
repz
cmp
iret
repz
push
push
pop
pusha
in
cmp
gs
mov
push
pop
or
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
ftst
adc
aas
or
mov
sbb
mov
adc
sbb
cmp
fbld
idivl
mov
cmp
jmp
jmp
addr16
pop
lea
push
pop
ret
mov
jae
int3
push
push
mov
sbb
pop
movsb
xchg
jmp
or
into
sbb
enter
sub
sub
mov
mov
cmp
jbe
sub
push
cmp
push
enter
push
lcall
sbb
fwait
mov
push
jmp
inc
push
push
cmc
pop
pop
cmp
inc
or
xchg
pop
ja
clc
and
push
and
xchg
add
add
scas
push
je,pn
adc
popf
and
mov
sbb
sub
push
in
clc
add
or
out
sub
push
add
pop
adc
test
add
dec
pusha
or
adc
insb
inc
scas
cmp
mov
cmp
push
push
push
sub
sbb
test
mov
lds
fnsave
sbb
add
add
add
or
jmp
adc
mov
push
inc
cli
add
xchg
cmp
pusha
cmp
adc
push
dec
rcll
dec
ficoms
insb
lahf
xor
sbb
movsb
lock
fnsave
js
test
mov
dec
jae
mov
call
xor
push
pushl
sub
and
sbb
lcall
jno
xor
jmp
pop
test
jecxz
and
xlat
andl
jne
inc
add
test
jns
jne
mov
pop
loopne
or
cmpsl
lods
js
cmc
or
lock
or
pusha
pushf
cli
jmp
mov
and
jne
and
cmp
adc
jno
aas
jo
es
and
ret
movl
in
test
sbb
shr
push
mov
pop
test
jno
loopne
dec
jmp
adc
testl
je
dec
ja
lahf
enter
cld
push
clc
lock
sbb
xchg
clc
sbb
sbbl
xor
mov
or
adc
or
popf
cmp
cmp
pop
sub
clc
inc
xor
int3
add
sahf
add
out
xchg
adc
mov
loop
adc
and
into
cmpsb
add
ret
rorl
pop
pop
dec
mov
lods
pop
push
push
adc
sbb
jge
js
mov
test
testb
inc
adc
andl
popl
sbb
mov
shl
pusha
sbb
pop
sbb
xchg
add
or
pusha
xchg
cltd
or
je
inc
sbb
test
and
and
mov
mov
pop
or
loop
leave
adc
pop
push
or
inc
addl
shr
inc
lret
mov
and
adc
in
cmp
data16
lret
cmp
push
mov
cwtl
inc
xchg
push
lock
in
jp,pt
mov
cwtl
or
imul
inc
jge
ja
xor
mov
dec
nop
add
mov
pusha
clc
add
ljmp
mov
push
nop
push
cli
and
adc
push
out
addr16
fmuls
ret
in
cmpb
fisttps
movsb
mov
push
xor
scas
rclb
sub
pop
mov
stos
push
push
push
xorb
sub
add
sub
movsb
or
fs
shr
lret
xor
mov
mov
fadd
and
fdivr
addl
and
loopne
or
mov
mov
push
jno
add
cmp
mov
shlb
mov
xor
scas
inc
add
addb
test
std
sub
je
call
jb
adc
sbb
xor
int
pushf
sub
xor
andl
faddl
xlat
xchg
cwtl
sbb
repz
push
jns
or
dec
xor
ret
add
mov
cmpsl
xor
add
adc
xchg
popa
xchg
adc
pop
ret
inc
add
loopne
add
or
sub
mov
loopne
mov
pop
fucomi
out
and
adc
add
lods
test
insl
aas
fs
inc
xchg
jp
cmp
lock
sbb
add
jnp
call
push
or
adc
fnsave
mov
rclb
test
push
mov
pusha
sub
fcoml
or
mov
clc
inc
test
adc
ss
jno
sub
pop
sahf
dec
inc
add
jl
inc
inc
adcl
xor
das
add
ss
xchg
sub
mov
roll
push
mov
dec
xor
pop
push
addr16
inc
leave
pop
test
adc
mov
shl
inc
add
enter
inc
sahf
movsb
inc
ja
push
enter
inc
push
aaa
dec
mov
aas
enter
mov
push
rol
int3
mulps
jbe
pop
rclb
mov
inc
fs
dec
ja
lahf
loopne
pop
and
rorb
cmp
push
in
pop
lock
dec
rorb
pop
clc
cld
add
sahf
xchg
or
mov
nop
xor
mov
push
insb
loope
sub
jge
scas
pusha
cmp
into
inc
incl
cwtl
add
rorb
xchg
cmc
pop
add
mov
cs
mov
cmp
in
or
jbe
or
push
mov
leave
mov
jl
sub
lea
cmp
mov
add
jno
adcl
push
sbb
cmp
or
sbbl
and
mov
rcpps
jmp
cmpsb
call
and
add
sti
adc
sbb
int3
jmp
out
xor
jo
xchg
xchg
cmp
mov
insl
sahf
mov
lock
mov
pop
sti
cmp
je
lcall
jge
inc
std
stc
mov
jmp
rcrl
shll
js
mov
mov
xchg
add
xor
das
sub
daa
insb
je
js
shlb
outsb
sbb
lret
push
fwait
repnz
sub
or
pop
pop
xor
rclb
scas
pop
js
cmp
fdivrl
andb
add
sti
jge
sub
push
hlt
cmp
jl
cmp
jle
push
inc
inc
stos
ret
movsl
add
xor
inc
stos
mov
cmp
pop
sbb
lea
add
mov
outsb
ja
test
sti
pop
add
push
sub
aam
add
ds
sub
pop
or
pop
pop
pop
adc
adc
loope
dec
inc
js
add
pop
pop
cmp
mov
inc
cmpsb
push
jbe
rorl
ds
bound
sarb
cmp
movsb
lock
cmc
leave
loop
lret
repnz
sahf
adc
jno
sub
pop
nop
loopne
dec
add
inc
cmovns
pop
dec
fcomp
cwtl
fisttps
mov
inc
inc
sbb
daa
lret
arpl
cmp
movb
cmp
call
mov
push
jmp
mov
sub
xor
jmp
ss
xor
and
and
xchg
pop
xchg
cli
cmp
mov
sub
jns
loope
shlb
movsl
push
jbe
jne
stos
pop
xchg
in
repnz
pop
out
sub
daa
in
push
lahf
pop
push
ret
jb
adc
loopne
cmp
je
xor
jne
push
cs
cmp
pop
inc
clc
jne
dec
lock
add
mov
fwait
xchg
shlb
push
mov
js
popf
lods
inc
xchg
inc
cmpsb
mov
adc
mov
mov
pusha
mov
int
rcll
push
fwait
call
jno
push
loop
or
inc
shlb
xchg
mov
adc
movsl
cmc
lock
cmp
xor
test
cmp
or
jmp
sbb
gs
jne
pop
push
jnp
xlat
jmp
inc
xor
test
rorb
inc
mov
sub
sub
lcall
in
clc
popa
xor
das
mov
pushf
pop
sbb
add
adc
and
scas
adc
or
add
aaa
dec
loope
scas
int
dec
outsb
cltd
or
test
mov
and
jge
and
inc
scas
fistl
add
sarl
push
sbb
jae
out
lea
popl
outsl
xchg
popa
cmp
out
jg
mov
inc
jmp
sbb
mov
add
inc
inc
pushl
push
insb
sarb
add
inc
aaa
or
xor
sub
mov
push
inc
push
sbb
inc
inc
sbb
test
add
push
push
adc
aaa
or
fdivs
sbb
add
push
std
decl
mov
in
lret
in
insb
mov
imul
sbb
add
lock
sub
cli
mov
mov
add
xor
ja
xchg
xchg
and
push
jg
sbb
lret
mov
fadds
into
cmp
addb
jmp
jbe
or
sub
inc
sti
pop
jne
adc
je
pop
std
pop
shl
sbb
jne
pushf
adc
cmp
cli
xorb
unpcklps
pop
stc
dec
ljmp
mov
pop
pop
cld
popf
or
pop
jns
add
and
mov
test
push
xor
rol
leave
push
add
pop
dec
bndstx
push
jg
dec
or
leave
push
sub
sub
mov
scas
test
enter
push
pop
mov
repnz
rolb
mov
pusha
xor
mov
xorl
jle
lock
movsl
fiaddl
in
arpl
mov
pop
daa
sbb
sbb
inc
jno
xlat
xor
add
in
ret
and
orb
mov
jp
mov
push
xor
out
jne
enter
inc
loope
adc
adcl
sbb
xchg
push
push
xor
mov
pusha
subl
inc
fidivs
push
and
mov
jle
movsb
adc
fcmovb
aam
sub
mov
cmp
push
inc
mov
pop
pop
inc
enter
lea
mov
push
fiadds
push
push
test
sbb
pop
adc
test
add
mov
sbb
add
dec
ficoms
push
push
cmp
aas
push
xor
push
sub
inc
movsb
and
imul
les
lcall
cmp
sbb
fstl
fldz
fcomp
fnstsw
std
or
jmp
in
fsubr
pop
faddp
pop
and
fstpl
add
enter
adc
dec
sbb
mov
je
or
dec
imul
xchg
jg
fadds
mov
pop
hlt
xlat
rcrb
repnz
pop
hlt
jl
cmp
fists
push
popa
fucom
in
jne
jge
jmp
loop
push
jno
fbstp
sub
and
call
insl
jb
mov
push
icebp
das
mov
fdivl
sti
adc
pop
movl
cmp
mov
out
ret
jg
jnp
rcr
sub
cmp
in
push
sahf
and
mov
gs
adc
mov
push
or
insb
test
push
clc
push
inc
and
cmpl
pop
adc
inc
or
ja
push
aaa
mov
push
popa
data16
sarb
push
mov
mov
scas
sub
repz
in
loop
push
rorb
dec
push
enter
sub
fcmovbe
push
int3
loopne
shr
dec
mov
inc
lea
mov
out
inc
addr16
clc
push
inc
pop
std
pushl
inc
lods
mov
push
cmp
in
cmp
dec
jo
add
dec
pop
rclb
lret
inc
cmc
xor
add
add
push
add
data16
xlat
inc
pop
test
outsl
mov
xor
enter
dec
in
hlt
push
aam
add
sub
movsb
cmp
fucomp
and
insb
pushf
and
jne
xchg
dec
lahf
inc
push
loope
jb
pop
jbe
mov
nop
or
sbb
movsb
fs
push
xchg
push
loope
push
or
jo
mov
cmpl
je
ret
xchg
sbb
push
mov
mov
mov
mov
jge
dec
movsb
in
sbb
imulb
sub
sub
add
xor
mov
mov
xor
jl
add
jb
or
lock
jbe
add
popa
push
mov
jge
pop
stos
pop
inc
mov
test
add
push
movsl
stc
fidivl
and
pop
jb
gs
jns
adc
or
or
div
and
mov
mov
lods
adc
dec
inc
cmpsl
mulb
dec
arpl
push
loope
xchg
cmp
pusha
ljmp
push
inc
arpl
jle
mov
loope
pop
push
jb
testl
rcrl
cs
popf
jne
lcall
jne
mov
pop
adc
pop
adc
xlat
sub
mov
call
imul
push
and
aad
xor
push
xchg
pusha
or
clc
add
or
or
mov
add
pop
push
pop
data16
pop
jge
and
ret
sbb
out
xor
int3
adc
mov
test
pop
or
fsubs
iret
dec
imul
sub
cmp
xchg
ds
cmp
adcb
inc
js
push
pop
ret
jg
cmp
je
xor
push
jmp
mov
xchg
mov
or
add
or
push
xchg
or
rcrl
pushf
xchg
adc
dec
pusha
lret
add
vmovsldup
fcoms
mov
jae
movsl
jp
add
sub
loopne
mov
xlat
scas
sub
mov
or
leave
push
xchg
push
xor
push
cli
cmp
jb
jg
jae
scas
mov
bound
cmp
mov
jbe
push
xor
test
xchg
push
push
test
sub
mov
ds
add
cmpsb
mov
dec
xchg
mov
adc
pop
jne
jl
mov
notb
push
dec
or
inc
btc
pop
ret
or
test
mov
int
je
flds
add
dec
aaa
in
lods
xchg
mov
movaps
mov
inc
loopne
mov
xchg
and
pop
inc
out
add
push
add
xchg
sbb
inc
loop
pop
push
sbb
ja
pop
xorl
or
lret
xlat
jg
jle
xchg
xchg
sbb
cmpsb
ret
adc
add
pop
push
push
xchg
aas
push
or
inc
ja
push
outsl
xor
mov
loope
and
dec
cmpps
lods
in
shlb
jl
cmc
mov
mov
mov
mov
push
in
ljmp
mov
lods
add
mov
push
call
add
cs
or
lock
adc
sbbb
or
stos
xchg
push
ss
mov
test
pusha
stc
xchg
or
mov
gs
add
xchg
mov
adc
xchg
push
jecxz
ljmp
xor
dec
bswap
sub
imul
test
push
enter
push
xchg
test
mov
xchg
je
popa
adcl
stos
gs
adc
loopne
test
int3
sbb
dec
int
int3
lea
sbb
dec
sub
lds
xlat
and
mov
fstl
test
loope
sub
loopne
add
add
loope
push
xor
aam
mov
faddl
outsb
adc
push
in
repz
repnz
mov
hlt
pop
gs
dec
or
pop
pop
or
mov
lret
call
clc
fs
add
pop
xchg
dec
inc
cmp
mov
es
xor
push
rcrb
or
push
cmp
das
dec
mov
aam
bound
inc
jbe
lds
sbb
sbb
mov
inc
mov
push
push
mov
mov
movsb
cmp
mov
pusha
push
push
jg
dec
adc
lock
jge
push
addr16
mov
and
or
and
ds
sbb
jo
insl
xchg
mov
rorb
outsl
add
fbld
fidivl
lahf
mov
push
add
inc
test
inc
pop
lods
push
pushf
xchg
je
push
cmpb
fucomi
or
dec
out
or
subb
push
nop
cs
lods
rorb
pop
xor
or
lods
movsl
cmp
cmp
daa
inc
sbb
push
or
xor
push
push
jae
and
mov
cmpsl
test
fildl
push
and
repnz
fidivrl
xchg
test
mov
or
xchg
xchg
push
sub
inc
add
lock
insb
hlt
push
movsb
push
ret
mov
xor
xchg
test
in
xchg
ja
ret
in
jb
imul
shll
and
push
les
mov
mov
mov
mov
js
es
insb
xchg
xadd
faddl
je
orl
inc
pushf
cld
lods
aas
adc
in
cli
mov
pushf
dec
outsb
sbb
mov
lods
test
arpl
add
lods
shll
sbb
cmp
mov
scas
pop
mov
push
aam
jns
add
jae
adc
nop
add
cmp
dec
pop
xchg
jae
in
xlat
and
es
loopne
adc
incl
in
push
jo
and
je
sub
loopne
cmp
and
filds
pop
xor
mov
pop
clc
incb
movsl
add
lret
in
or
sub
hlt
push
mov
inc
pop
pop
imul
testl
fsubrs
dec
fdiv
scas
xor
fadds
or
xor
int3
push
or
xchg
lea
out
sbb
lahf
or
xchg
sub
push
in
loopne
dec
insb
push
sbb
add
sahf
pop
rorl
js
push
mov
sub
movsb
and
inc
iret
sub
xlat
sub
and
inc
pop
rclb
sbbb
inc
or
fisubrs
mov
adc
add
lret
adc
sub
pop
jbe
add
inc
or
imul
popa
or
adc
les
repz
add
sbb
jne
shll
sub
mov
rorb
push
cmp
and
mov
add
cmpsl
mov
mov
xchg
arpl
or
push
lret
inc
and
imul
fildl
test
insb
popa
xrelease
cmpsl
xchg
adc
or
je
sub
or
xor
es
add
cmc
xchg
pusha
inc
xchg
jo
add
inc
adc
inc
repz
mov
and
sub
add
cmp
fmul
push
inc
int3
addb
xchg
pop
icebp
movsb
adc
mov
imul
pop
push
inc
dec
jo
daa
fdivrl
pusha
dec
or
pop
mov
es
aad
or
icebp
js
loopne
mov
cmpsl
dec
cmp
loopne
xor
sub
loop
fisubrs
dec
outsl
adc
mov
xchg
negb
icebp
jmp
cmp
sub
mov
mov
jo
sub
aad
fsubs
test
pusha
outsb
test
insb
pop
pop
mov
in
ljmp
xchg
lds
out
mov
push
into
shrl
out
adc
mov
lods
xor
movsb
test
daa
clc
dec
mov
fmuls
pop
mov
enter
mov
lret
dec
std
lret
adc
push
bound
and
popa
jg
fsubrs
xor
insl
inc
jge
movsb
push
imul
sbb
stos
sti
fldl
inc
adc
mov
mov
push
jp
addr16
xchg
or
add
in
and
xchg
cmp
test
add
dec
dec
dec
shl
xor
add
lcall
loopne
fs
addb
lods
fidivrs
xor
push
je
push
movsl
push
ljmp
cmc
sub
cli
shl
xchg
mov
into
es
call
daa
mov
push
dec
loopne
les
clc
ret
jg
adc
jge
mov
je
popf
mov
mov
sbb
jmp
mov
leave
mov
and
sub
insb
jle
ret
xlat
test
push
inc
nop
xchg
xchg
jmp
mov
test
ret
dec
dec
and
inc
lret
hlt
push
add
test
mov
mov
je
ds
movzbl
cmp
adc
nop
push
add
cmp
jge
jl
sub
and
ret
jns
subb
pop
test
sub
fwait
or
or
lret
orl
sbb
jnp
mov
sub
xor
mov
or
les
xchg
add
insb
push
mov
dec
add
jns
es
adc
or
and
adc
jno
or
jl
or
mov
dec
and
sbb
lahf
add
xchg
or
dec
dec
mov
add
pop
adcb
inc
jl
push
adc
dec
rorl
hlt
or
push
xchg
iret
cmpsb
lods
bound
hlt
hlt
dec
outsl
sub
lods
std
aaa
incb
test
mov
mov
or
je
idiv
xchg
and
jne
mov
leave
push
faddp
rcr
popa
adc
jo
cmpsb
ss
mov
pop
or
inc
lea
ret
push
add
dec
test
pushf
data16
sbb
fidivrl
mov
stos
movsb
or
pop
sarl
shll
jl
and
das
add
fwait
sti
mov
repz
mov
pop
sbb
cltd
pop
js
mov
mov
aaa
mov
test
lds
inc
les
sub
daa
aam
outsl
sbb
mov
inc
pushf
nop
push
add
inc
cmp
rcrl
daa
mov
pusha
lods
lcall
arpl
pop
mov
fdivp
xor
mov
mov
lea
addr16
mov
xchg
add
sbb
mov
inc
lcall
aaa
insl
dec
cmpsl
cmp
popf
adc
mov
or
adc
adc
mov
incl
sub
pushl
xor
pop
cmpb
lods
xchg
sbb
hlt
xchg
sub
adc
jo
enter
mov
xor
insl
int3
in
mov
loop
ss
movsl
push
ret
cwtl
std
testl
test
lahf
or
enter
inc
call
xor
inc
jbe
int
nop
mov
stos
in
adc
push
push
cmp
add
insl
or
xchg
or
adc
add
enter
xchg
cwtl
xchg
clc
lock
or
loope
dec
mov
or
sub
push
cld
cld
pop
movsb
ja
clc
or
cmp
std
push
sbb
cmp
xchg
loop
xor
jne
adc
or
das
xchg
push
rolb
roll
or
or
push
add
or
push
fsubrs
lea
pop
and
push
pop
jnp
adc
enter
and
mov
mov
push
mov
lea
cltd
bound
mov
pop
push
push
and
pushl
mov
pop
cmp
rorb
sbbl
add
pop
sbb
lods
mov
orl
sbb
adc
adc
mov
add
xchg
xor
jbe
out
pop
adc
pop
and
push
rorl
insb
inc
xor
lock
mov
jnp
jmp
dec
and
add
test
dec
add
test
mov
push
and
sub
dec
or
pop
lea
jne
cwtl
pop
jb
mov
test
add
in
lret
xor
mov
pop
add
jle
lods
jno
ret
and
sbb
sub
in
andb
stos
xor
flds
xor
fdivl
lock
or
sub
cld
gs
inc
sbb
and
and
mov
ljmp
inc
in
mov
dec
in
hlt
push
xor
cmp
jbe
push
mov
enter
dec
push
jne
mov
in
add
inc
mov
shl
cwtl
cmp
push
cmpsl
cmpsb
push
fadds
xor
in
adc
push
lods
leave
inc
das
push
jo
ror
ret
add
sbb
ret
pop
xor
jne
cli
shl
fwait
xchg
or
shl
jne
push
add
push
or
add
push
lods
dec
mov
test
aad
gs
into
cmp
add
adc
je
call
jecxz
mov
pop
mov
sbb
cmp
das
xor
dec
imul
push
pop
mov
les
pop
xor
inc
jo
pop
out
arpl
mov
cmp
add
fscale
push
push
lret
ret
push
add
push
repnz
imul
pop
push
stos
mov
rcrb
movsb
dec
pop
mov
movzbl
sub
mov
lods
sbb
es
sub
adc
ficoms
or
jg
popf
adc
cmpsl
cmp
rcrl
scas
xchg
dec
clts
inc
out
sub
into
mov
and
dec
xchg
sbb
xor
mov
or
enter
push
or
adc
add
mov
pop
jb
xor
add
arpl
mov
adc
mov
adc
in
or
bound
adc
rorb
sub
cwtl
clc
shlb
daa
loope
sub
popf
mov
les
out
sub
cmp
sub
or
je
iret
outsb
cmp
adc
test
hlt
out
add
aad
ret
jg
mov
push
cmp
or
push
add
dec
ja
outsb
sahf
lea
jecxz
repz
cmpsl
mov
add
outsl
call
icebp
cs
scas
movsb
jge
test
xchg
jg
adc
shrb
adc
mov
push
pushf
xor
sti
imul
lods
data16
bound
shll
inc
inc
jmp
inc
fs
xchg
jb,pn
sub
pop
inc
cmp
and
icebp
add
mov
adc
or
jmp
test
dec
orb
push
xchg
pop
imul
scas
popf
clc
mov
fiaddl
arpl
dec
mov
stos
add
jno
repz
or
push
dec
je
xor
ljmp
or
adc
adc
ss
sahf
in
rclb
mov
xchg
dec
cmp
dec
in
and
xchg
scas
aam
dec
dec
loope
pop
in
mov
lcall
pop
and
dec
cmp
xor
ror
popf
scas
mov
mov
xchg
sub
dec
ljmp
or
mov
push
mov
jne
xchg
dec
pop
shr
lods
mov
xor
or
shlb
imul
faddl
sub
stc
fidivl
add
les
sbb
sub
push
enter
or
and
adc
dec
or
insb
and
imul
dec
pop
lds
mov
addb
es
dec
clc
or
call
je
ret
int
xchg
dec
lds
sub
sub
inc
sub
fisubrs
sbbb
pop
dec
ret
sub
dec
sbb
or
mov
lcall
ss
mov
fwait
out
add
pop
push
sbb
into
sbb
adc
push
push
push
adc
mov
dec
sarb
bound
mov
mov
push
orl
inc
adc
fwait
dec
or
add
add
xchg
adc
cmp
sub
lret
cmp
clc
lahf
je
push
roll
je
rorb
inc
sti
jne
repnz
movsb
inc
inc
xor
test
sti
arpl
xchg
add
pop
inc
dec
push
repnz
sub
pop
gs
pop
adc
xor
je
push
xchg
test
xlat
xor
dec
jnp
mov
sub
addr16
addl
dec
sub
sub
pop
push
push
push
mov
outsb
mov
in
dec
mov
sub
push
mov
ret
jne
jbe
inc
cmpsb
hlt
mov
push
insb
inc
jle
jmp
les
jae
mov
fcoml
std
inc
or
sub
mov
xchg
xor
arpl
call
mov
rorl
mov
lret
jl
mov
movhps
out
inc
or
rorb
add
adc
push
leave
xor
shr
xor
adc
fbld
adc
add
test
movsl
mov
add
inc
mov
mov
shr
cmp
jbe
add
xchg
push
ja
add
mov
or
out
and
jp
xor
enter
jg
add
inc
mov
stc
les
push
arpl
or
push
je
or
xor
jb
pusha
dec
adc
inc
mov
mov
add
adc
inc
scas
js
or
push
or
and
mov
push
inc
push
xor
orb
jl
sub
add
iret
clc
sarl
or
lea
xchg
popf
cmp
adc
and
jno
aad
or
jb
push
mov
rolb
fisubl
jl
cmp
adc
mov
in
mov
adc
fs
push
popa
insl
enter
xchg
or
and
inc
gs
push
dec
push
sub
ljmp
add
decb
or
pop
pop
pop
call
test
inc
add
xchg
pop
inc
sahf
lcall
or
mov
sub
arpl
and
lods
daa
jp
dec
and
aas
xor
xor
dec
cmp
xor
mov
movsb
mov
xor
or
mov
insb
outsl
and
out
rcr
shlb
lds
and
xchg
pop
push
in
sub
sbb
pusha
and
dec
scas
mov
fisubs
in
or
pop
pop
add
pop
pop
cmpsl
gs
pop
dec
mov
aam
push
add
lret
and
ret
rorb
fstps
stc
lock
jmp
and
adc
cmp
sub
popa
test
jg
enter
xchg
iret
push
dec
pop
push
inc
or
test
inc
fdivrs
cmp
push
andb
push
mov
cmp
dec
ret
xchg
cmp
mov
mov
push
or
dec
frstor
push
xor
aas
mov
mov
sbb
inc
fimuls
or
mov
movb
or
cmp
mov
sub
push
xchg
or
pusha
in
mov
adc
inc
xchg
sbb
ljmp
test
dec
fmuls
mov
xor
cmp
mov
imull
stc
cmp
jl
mov
or
adc
xor
or
ds
dec
mov
lret
add
dec
out
fsubp
nop
das
mov
dec
cmp
mov
fmuls
mov
mov
push
cmp
cmp
and
lret
add
xchg
cmp
popa
dec
fisttps
sub
push
cmp
cmpsb
insl
add
push
fiaddl
inc
sub
cmp
js
sbb
push
add
lret
lds
lods
xor
stc
pop
cmp
daa
bound
rcrl
adc
repnz
dec
sahf
add
pop
and
xorl
pop
enter
fsubs
ret
cmc
daa
xchg
ret
or
xlat
pusha
call
xor
andb
mov
dec
cwtl
adc
test
inc
mov
inc
jne
cltd
jne
sbb
nop
daa
mov
xchg
xor
push
cwtl
sub
lret
pushf
dec
dec
mov
or
dec
in
sub
inc
dec
movsb
test
push
inc
or
fsubs
xchg
out
enter
daa
mov
sbb
sbb
ljmp
sbb
dec
daa
pusha
add
test
or
push
or
adc
sbb
push
test
call
xor
sbb
rolb
imul
ljmp
loope,pn
loope
inc
inc
sahf
or
adc
or
popa
adc
repnz
imul
cld
push
and
xchg
cmp
adc
inc
and
lods
cwtl
call
adc
aad
and
nop
add
out
ss
fisubs
sub
ss
test
lods
sbb
xor
mov
leave
mov
push
mov
cmp
ds
inc
xor
add
add
xor
loopne
ja
lods
and
sbb
cmp
add
insl
xchg
scas
sti
push
popf
cmpsb
mov
jp
lahf
ss
call
mov
and
push
and
jb
mov
loope
xor
mov
push
stos
or
jo
and
cli
out
sub
mov
cmp
dec
mov
sarb
mov
fwait
fwait
loop
in
movsl
pop
xchg
fistpl
push
inc
mov
pop
dec
insb
outsl
mov
xchg
sub
dec
cmp
jl
popa
mov
mov
imul
loop
xchg
jno
and
lea
fidivrs
sti
add
add
and
pushl
push
ret
adc
andb
pop
outsb
bound
les
push
pop
xlat
mov
fs
xchg
add
mov
xchg
js
shlb
xchg
mov
stos
fnstenv
mov
imul
sub
push
push
sbb
or
les
fstpt
dec
add
adc
movsl
adc
movsl
inc
add
je
jp
movsl
or
or
inc
dec
sub
adc
je
jbe
inc
mov
jge
arpl
je
sbb
jne
push
bound
imul
mov
cmc
loopne
jb
test
cmp
add
shrb
nop
pop
mov
add
nop
cmpsl
jno
movsl
push
in
push
stc
stos
fdivrs
fldl
mov
xor
jae
test
mov
xchg
adc
nop
in
add
movsb
adc
pop
push
fsubr
and
pop
fidivrl
fstpl
add
or
mov
call
inc
aaa
aaa
pop
cmp
inc
call
or
xorl
sub
adc
or
mov
sbb
jb
dec
push
or
xchg
dec
add
fsubl
loop
sbb
ret
push
mov
mov
adc
push
inc
add
xchg
insl
inc
cli
add
and
and
and
or
clc
jbe
inc
push
fidivl
js
push
push
in
push
xorl
mov
fildll
andb
pop
xchg
rorl
inc
xchg
push
mov
xchg
es
mov
xchg
cmp
lock
adc
clc
xor
hlt
pushf
sub
push
faddl
das
aam
lret
inc
inc
jge
sub
push
push
add
push
pop
les
stos
sub
push
pushl
mov
out
push
sbb
mov
and
cmpsl
inc
movsb
push
loope
inc
push
xchg
jmp
or
add
jo
stc
sub
mov
adc
xchg
sbb
and
out
jae
mov
xchg
sub
push
and
in
pop
inc
inc
fsubl
push
and
test
cmpl
mov
sub
jle
and
mov
mov
lret
decl
inc
adc
int
dec
popa
fdivs
rol
xor
push
dec
enter
je
pop
outsb
push
sbb
dec
arpl
xor
clc
and
xorl
jle
ror
sub
mov
inc
mov
jp
test
movsb
mov
push
mov
inc
add
test
add
inc
test
push
fnsave
loopne
and
popa
sbb
popf
mov
lock
in
imul
xor
inc
mov
cwtl
push
xchg
sub
js
iret
cmp
cmpsb
subl
pop
push
add
mov
or
or
shrb
ret
mov
mov
dec
jnp
das
sbb
cs
roll
ret
xor
xor
cmp
roll
or
push
and
pushf
dec
add
dec
data16
sbb
pop
xchg
repnz
pop
adc
xchg
xor
add
push
add
sub
out
add
movb
sub
cmp
lods
mov
jge
or
popa
xor
imul
jg
sti
cmp
iret
sub
xchg
lock
cli
mov
pop
cmp
add
addr16
jp
push
hlt
xchg
jl
mov
int3
shlb
mov
push
inc
add
cmp
aad
add
mov
divb
mov
loop
lods
inc
gs
int
icebp
push
dec
dec
repnz
stos
or
jecxz
fstpl
loope
push
add
ficompl
pop
xchg
pop
jmp
outsl
push
push
outsb
dec
dec
or
adc
aas
popf
stos
add
cmp
ja
test
adc
bound
push
sbb
push
ja
orb
andl
aaa
stos
fadds
pop
sbb
inc
inc
popf
and
xor
vhaddpd
push
in
sbbl
push
test
mov
xchg
mov
and
xchg
inc
xchg
movlps
adcl
or
mov
inc
imul
jbe
sbb
in
adc
xor
sbb
inc
clc
adc
insl
mov
jo
jno
dec
cmp
inc
and
xor
add
cmpsb
mov
cmp
add
lahf
cmp
xchg
mov
push
xor
loopne
xlat
in
add
je
push
js
push
stc
pusha
or
dec
pop
inc
or
andb
roll
adc
mov
xor
jae
push
loopne
les
cwtl
or
dec
push
cmp
psubsb
sub
or
or
xor
dec
xchg
push
adc
in
fmul
dec
xor
popa
int3
call
push
adc
xor
pop
test
or
enter
sbb
jmp
mov
pop
cli
xchg
aaa
sbb
sub
subb
mov
push
jb
mov
jge
push
inc
js
adc
push
pop
inc
inc
iret
sbb
adc
iret
arpl
add
loope
mov
popa
cli
jmp
imul
ds
lds
imul
adc
push
add
dec
or
shlb
orb
cmp
loopne
loopne
sub
push
enter
dec
xor
or
ss
inc
int
in
pop
mov
rclb
insb
adc
lods
shufps
add
mov
fisubs
repnz
rolb
dec
xlat
fsubrs
ret
imul
int
daa
lods
push
mov
shlb
rol
adcl
adc
mov
mov
imull
shlb
xchg
dec
aam
jp
jp
gs
cmp
add
cmp
or
mov
adc
cmp
mov
ja
push
sbb
in
mov
or
and
jle
adc
jo
pop
lea
or
or
test
or
mov
icebp
jg
pusha
mov
rol
mov
ror
xor
shr
xor
es
mov
adc
inc
ret
or
or
icebp
add
add
add
mov
sarb
xchg
add
fs
or
icebp
pushl
jae
or
and
xor
add
add
popa
jnp
pop
aam
sub
jbe
sti
push
xchg
ror
mov
push
xor
add
xor
and
and
xchg
add
or
push
aam
xor
and
push
fs
sub
sub
fmull
push
push
or
xlat
ret
sbb
sub
rolb
testl
hlt
add
xor
fsubr
orl
in
or
push
xor
sub
jae
stc
ljmpw
ret
shr
xor
jae
add
push
xor
xchg
xchg
cmpsb
jb
loopne
inc
xor
dec
shll
in
call
in
shl
in
add
cmp
bound
push
bound
add
adc
aaa
sbb
add
ret
test
call
loopne
push
nop
cmpsb
shl
call
mov
loopne
xor
pop
cmp
aam
cmp
push
xor
dec
es
or
int3
fildl
sbb
add
in
push
xor
and
and
lahf
neg
jne
out
iret
or
xor
lcall
push
test
adc
js
adc
inc
jo
mov
push
jo
ficoms
sub
mov
lahf
test
xor
inc
adc
push
cld
rol
xor
jne
mov
filds
cltd
dec
pop
xchg
mov
inc
fadds
pop
jbe
call
or
ret
lret
push
clc
jp
cld
jo
xor
xlat
add
gs
fdivrs
lcall
call
in
rclb
icebp
ret
cld
lret
inc
mov
lods
push
or
xchg
clc
jo
cli
movsb
inc
jo
stos
adcb
sbb
aaa
cmp
test
call
in
push
inc
shr
shlb
sbb
push
roll
xor
shlb
add
inc
lcall
in
add
lahf
jo
add
imul
inc
and
pop
imul
add
adcb
in
push
xor
es
lcall
adc
fs
add
jae
push
pop
and
int
pop
push
pop
mov
sub
add
rol
movsb
sbb
push
or
or
or
add
xchg
and
sub
xchg
movsl
fcoms
stc
enter
andl
add
fs
adc
insb
cmpsb
jb
add
push
imul
xor
mov
adc
icebp
inc
mov
orb
jne
aad
dec
xchg
fmuls
adc
imul
fidivs
push
sbb
sub
lock
jno
sub
filds
push
aas
pop
add
sub
mov
lret
ss
add
inc
and
loopne
pop
pop
lea
rolb
aas
cmp
pop
cld
sub
mov
insl
add
imulb
pop
sub
jmp
add
push
adc
push
sarb
xchg
or
rol
and
mov
adc
mov
sbb
in
add
jbe
jae
mov
sub
or
test
aas
lea
mov
add
sub
sub
pop
out
out
sarb
mov
ret
dec
or
mov
outsb
add
pop
adc
add
sub
mov
xchg
jl
sub
mov
out
or
cmp
jbe
or
fs
adc
loopne
or
jae
push
pop
fadds
rep
or
std
dec
sub
scas
or
mov
insl
mov
inc
fs
pop
loopne
ror
mov
jbe
push
hlt
notl
dec
faddl
mov
or
adc
mov
loop
and
enter
aam
sbb
movsl
or
and
dec
add
dec
lea
aaa
out
cld
int
mov
add
jns
mov
add
push
and
mov
xor
add
cmc
adc
or
and
pop
ret
jo
jae
fnstsw
bound
adc
jl
pop
push
lock
cmpsl
xchg
loope
push
add
stos
adc
ret
stos
or
adc
jl
rcrl
pop
xchg
xor
pop
adc
or
and
add
push
ljmp
cmp
add
dec
add
add
dec
xor
outsl
call
mov
cmp
inc
addb
push
add
push
inc
shll
or
aas
outsl
dec
pop
or
pusha
ljmp
shrl
add
sub
and
inc
cltd
add
lahf
mov
sahf
push
mov
ret
sub
or
sahf
notl
and
and
sub
or
mov
pop
out
and
push
xchg
or
adc
adc
and
arpl
pusha
push
mov
or
jl
adc
adc
cmpsb
pop
xchg
push
pop
cmp
inc
mov
fdivl
pop
ss
sbb
inc
sysret
stos
insb
pop
xor
and
add
cmp
sub
xchg
loopne
add
jae
mov
inc
es
adc
add
pop
insb
mov
jecxz
adc
enter
adc
scas
inc
xchg
and
mov
pop
sub
in
filds
xor
cmpl
hlt
cmp
popa
nop
mov
addb
jns
dec
jg
push
ljmp
jl
jns
mov
popa
jmp
gs
xor
and
mov
popa
lahf
adc
add
cmp
shrl
sbb
cmpsl
es
pop
or
push
inc
stos
in
cmp
and
aam
jge
imul
and
pop
cmp
jge
jnp
addb
add
int3
and
or
pushf
cmp
add
or
sbb
jge
call
pop
cwtl
pushf
loopne
lock
xchg
jb
or
or
add
inc
mov
pop
stos
dec
lods
movsl
mov
and
insb
loopne
or
cmpl
inc
mov
adc
jb
adc
inc
jmp
xchg
clc
add
mov
push
dec
outsb
sub
pushl
rolb
xlat
dec
add
pop
add
lret
lret
mov
mov
and
mov
cmp
scas
add
lret
cs
flds
dec
repnz
adc
push
xchg
xor
jo
js,pt
fbld
add
mov
ret
push
daa
lcall
fmuls
adc
iret
xchg
scas
or
cmp
xor
pop
cmp
mov
dec
or
test
xorl
shrb
xchg
ret
orl
in
in
and
xor
and
arpl
in
dec
push
scas
sub
dec
dec
out
jge
xchg
jbe
xorl
or
imul
jl
mov
cs
push
xor
ljmp
movsb
fists
filds
or
cmovnp
push
push
sbb
mov
dec
mov
dec
mov
or
pop
mov
jnp
cmp
cmp
mov
and
inc
cs
jne
outsl
shlb
or
inc
add
popa
cmp
adc
ud2
push
mov
insw
fadds
xor
addl
inc
dec
sub
jp
push
inc
add
arpl
jmp
sbb
rorb
fsts
cli
daa
test
pusha
and
push
push
rorb
pop
inc
pushw
jae
push
pop
fists
sar
rcl
cmp
jmp
fdivl
push
push
add
mov
jne
adc
stos
sbb
sub
cmp
cmp
mov
fisubl
arpl
xor
leave
mov
sbb
insb
adcl
iret
adc
and
adc
fs
ljmp
cmpsb
cmpsl
inc
fcoms
popa
push
sar
sub
gs
ret
gs
mov
add
or
xchg
insb
pop
lock
sub
jne
xor
fisubs
xchg
pop
xor
adc
add
and
xor
dec
jne
push
adc
js
mov
xchg
jb
mov
bound
sarl
xor
insb
test
jbe
sub
add
mov
movsb
push
sub
pop
push
pop
cli
push
mov
fld
push
call
adc
js
or
push
lock
fnsave
shl
sbb
or
add
int
inc
push
cmc
dec
repz
inc
sbb
xchg
push
sub
mov
mov
mov
push
push
scas
xchg
jmp
mov
daa
pushf
cmp
adcb
movsb
xor
or
lret
data16
test
mov
sbb
sub
clc
push
xor
and
and
insl
add
fidivl
add
cmp
adc
es
cli
jnp
inc
xchg
mov
inc
or
bound
inc
add
dec
scas
jo
xchg
push
add
dec
and
mov
dec
xor
dec
pop
cmp
mov
adc
adc
popf
ret
andl
inc
mov
inc
dec
push
mov
push
dec
insl
pop
jb
inc
sbb
dec
jp
add
fwait
pop
scas
bound
dec
pop
xchg
jb
rorl
inc
jl
inc
and
pop
inc
aaa
inc
mov
mov
inc
pop
bound
stc
ja
add
jne
push
cmp
jb
mov
push
mov
push
sub
clc
mov
jp
or
inc
popa
adc
sbbl
push
adcb
mov
pop
push
jmp
mov
mov
add
inc
lahf
xchg
and
das
dec
ficoml
cmp
add
lods
sub
ret
dec
imul
dec
xor
mov
xlat
mov
cmp
jae
xchg
or
cmp
movsl
or
and
lods
outsl
cmp
shlb
dec
jnp
push
or
add
add
and
add
loopne
cld
and
xor
shrb
stc
adc
mov
mov
inc
cmp
sbb
cmp
mov
outsl
jmp
mov
sub
mov
bound
adc
nop
in
xchg
movzbl
pop
cwtl
xor
mov
jne
aaa
xchg
adc
add
jmp
or
rorl
enter
xchg
or
iret
adc
shl
pop
push
dec
add
aaa
imul
add
imul
sbb
mov
cmp
je
mov
rcrl
jle
push
fidivrl
add
pushl
push
inc
cmp
jl
adc
inc
sub
ja
cmovp
push
sarb
shlb
push
xor
mov
and
jns
sbb
adc
pop
push
ss
js
xor
sbb
jle
or
enter
aas
add
mov
jbe
xor
pop
ret
loop
inc
mov
pop
xor
fwait
push
push
jl
xchg
adc
jo
jns
dec
and
test
jb
and
sbb
pop
pop
adc
les
dec
and
fiaddl
cmp
sbb
loope
jnp
cmp
dec
sub
xor
sub
mov
comiss
loop
inc
outsb
pop
jmp
inc
xor
mov
outsb
xchg
int3
insb
hlt
push
add
or
pop
mov
push
in
filds
and
loope
and
add
mov
enter
push
clc
add
loopne
add
xadd
add
lret
add
dec
icebp
or
movsw
pop
adc
fbld
nop
psubd
aam
jp
jge
mov
pop
or
iret
push
fidivrs
pop
add
lods
and
imul
add
sub
sub
gs
daa
jecxz
dec
rolb
nop
or
fs
call
sub
cmpb
lea
gs
inc
sbb
fs
test
pusha
lock
mov
inc
pop
inc
pop
add
add
cmc
lret
orl
cmp
lock
dec
rcr
nop
jo
or
mov
push
mov
cmp
sti
jl
mov
jno
inc
rcrl
add
mov
xchg
sarb
or
adc
jle
push
ret
inc
sub
cmp
stos
inc
mov
xchg
std
sbb
xor
inc
movb
sbb
xchg
out
js
mov
adc
adc
and
xchg
movsb
jge
or
add
bound
push
insl
push
out
xchg
rclb
and
add
lds
add
xchg
mov
xor
xor
or
pop
xchg
or
pushf
dec
cs
cmp
mov
test
sbb
pop
xor
adcb
dec
push
mov
pop
cmp
inc
xchg
rcll
sub
sbb
sbb
and
mov
adc
in
cmpsb
sub
add
add
xor
mov
dec
scas
int
outsb
inc
jnp
add
add
xor
cltd
lock
lock
push
mov
subb
pop
push
pop
jbe
pop
fsubr
add
jmp
push
js
add
movsb
in
xor
call
dec
fidivrl
ss
sbb
cmp
outsl
add
icebp
cmpsl
adc
or
out
lret
test
dec
stos
shrb
cmp
aam
mov
pusha
mov
lock
push
ret
adc
call
jbe
loopne
fsubl
in
inc
inc
adc
subb
xchg
and
mov
ficompl
push
jmp
filds
sbb
jae
loope
dec
pop
int3
lcall
add
adc
add
ror
fisubs
xchg
xor
push
test
sti
sarl
adc
sbb
mov
popa
mov
mull
cltd
pop
bound
pop
pop
ret
sub
pop
jo
popa
sbb
pop
jmp
rorb
icebp
inc
sbb
lea
fs
cmp
mov
sub
imul
test
stc
repz
test
xor
fsubrl
in
push
pop
and
inc
add
ret
dec
mov
and
sbb
lahf
push
pop
adc
or
jns
or
or
push
aaa
mov
xchg
sti
sub
sub
push
xor
push
enter
fnstcw
mov
adc
jns
or
lock
or
aad
xor
push
and
mov
mov
sbb
aaa
push
outsl
pop
imul
gs
adc
inc
inc
mov
add
addr16
pop
cmp
and
push
les
fsubrl
dec
fdivl
jae
mov
push
add
mov
mov
cmp
mov
mov
test
dec
adc
inc
xor
push
bound
or
rol
inc
lcall
push
xchg
lret
xchg
icebp
mov
dec
in
sub
mov
mov
pop
icebp
orl
or
xchg
adc
add
pop
push
jmp
or
mov
mov
push
cltd
push
push
push
adc
enter
mov
and
mov
add
pop
cmpsl
fsts
mov
add
and
adc
in
add
rolb
or
clc
push
rorl
adc
pop
and
sbb
cmpsl
xchg
stos
add
pop
inc
shll
and
and
and
out
rol
sbb
aas
xor
out
orb
cmp
jle
pop
and
mov
movzwl
jne
pop
test
in
sub
sbb
fiaddl
jae
pop
mov
push
push
add
or
push
loopne
inc
xor
push
das
scas
imul
inc
pop
push
pop
outsb
stos
loope
dec
add
cmp
xchg
jne
repz
imul
or
in
push
arpl
push
imul
mov
or
repnz
loope
lahf
mov
mov
jo
add
jne
adc
call
pop
cmp
ds
stc
lahf
add
sub
inc
jo
jne
addl
scas
add
nop
or
or
add
test
xor
fucom
pusha
cmp
mov
adc
std
subl
and
les
mov
push
xor
add
cmp
in
jo
sub
jle
cli
pop
push
sarl
sbb
sbb
mov
in
jg
adc
testb
je
cmp
mov
push
add
push
add
xor
push
cmp
xchg
jmp
fidivrl
gs
cmp
jne
push
adc
add
imull
add
mov
sub
xlat
add
dec
popa
mov
push
andb
lret
jecxz
imul
les
aad
push
incl
pop
popl
sbb
xor
es
add
sub
cmp
loopne
jae
dec
and
dec
loopne
xor
xlat
out
jge
or
cld
cmp
adcl
in
push
mov
jne
jg
dec
or
push
add
dec
xchg
rcl
hlt
addl
sbb
sub
mov
mov
push
jo
jo
and
push
add
repz
test
je
sub
push
push
mov
jb
test
sbb
or
add
lcall
mov
cmpb
dec
jno
mov
push
or
add
push
push
xor
xchg
sub
jp
pop
cmpb
push
adc
mov
jbe
scas
rcrl
std
add
mov
int
mov
rorl
sbb
pusha
idivl
sbb
or
sbb
lahf
mov
add
cmp
mov
pop
jb
jmp
lea
push
sbb
insl
ljmp
cmpsl
and
inc
sqrtps
cld
xchg
leave
lret
into
jne
data16
jno
popa
sbbb
or
and
stc
jmp
sub
xor
sbb
jmp
push
dec
jb
cli
dec
pop
pop
xor
sub
call
stc
xchg
inc
mov
ficompl
pusha
or
jb
sub
cmp
out
movb
inc
push
xchg
cmp
adc
insb
inc
mov
push
sbb
pop
add
xchg
add
xlat
ret
les
jae
pop
add
xchg
fs
xor
jl
jne
push
dec
dec
sbb
addl
lock
test
adc
ja
loop
in
sbb
rcrb
std
sti
jecxz
cli
mov
ja
or
jl
sub
mov
push
mov
mov
xchg
inc
mov
imul
mov
mov
mov
push
mov
cmpl
fstpl
add
add
and
xlat
add
cs
add
pop
mov
add
and
adc
insb
insl
scas
xor
xchg
test
std
adc
or
int3
add
decl
je
mov
add
mov
and
add
and
add
cld
jle
rolb
add
pusha
add
push
test
mov
xor
scas
or
or
je
jmp
cltd
push
pushf
subl
nop
inc
lcall
adc
ret
push
push
fiaddl
inc
cmc
cmp
adc
pop
int3
jne
popf
jmp
cs
bound
mov
cmp
add
or
or
mov
push
push
add
and
lock
ficoml
and
outsb
and
ss
or
or
mov
ss
pusha
dec
adc
rclb
add
xor
sarb
mov
es
fildl
loopne
cmp
insl
loopne
ljmp
or
and
push
mov
xlat
adc
cld
push
adc
enter
mov
adc
sbb
or
dec
aad
adc
add
xchg
mov
adc
cmp
add
or
mov
pop
scas
sahf
adc
push
mov
and
repz
inc
or
rcr
inc
inc
test
xchg
add
loopne
jbe
dec
loop
aam
jmp
mov
arpl
push
mov
push
stos
lods
push
stos
sub
push
lret
xor
or
dec
popa
jmp
xchg
addb
lret
aas
pop
add
cmp
fsubs
loop
in
dec
mov
nop
dec
dec
pop
rcrl
dec
and
cltd
sbbl
or
pop
fisubl
fs
inc
xchg
test
push
dec
add
push
xor
pop
loopne
in
out
jmp
ljmp
mov
clc
incb
and
push
pop
lods
mov
insb
imull
aaa
adc
inc
cmp
dec
cli
and
xor
adc
push
xchg
icebp
inc
arpl
stos
pop
mov
add
mov
pop
push
out
fisubrs
fistpll
out
add
in
insb
cmpsl
ja
adc
jae
rol
or
push
fiaddl
xor
fwait
clc
jp
and
lock
push
sub
xor
sti
jo
sub
repz
pop
mov
ja
sbb
sbb
popf
xor
push
insb
repnz
scas
lds
sbbl
daa
inc
sub
dec
pop
add
xor
clc
inc
addl
mov
mov
xlat
lea
enter
mov
adc
jbe
dec
jnp
sbb
lea
lret
adc
inc
cmp
shlb
rclb
sahf
inc
push
out
jb
add
cmpsl
inc
mov
dec
xchg
push
mov
shll
push
mov
inc
sbb
test
add
or
xor
pop
out
jbe
rolb
or
aad
enter
fildl
aas
mov
mov
mov
movsb
jbe
push
cmp
add
and
adc
mov
cmp
in
pop
clc
dec
or
adc
daa
shll
mov
push
jb
popa
cmp
and
call
je
or
sarl
pusha
and
pop
lods
imul
cld
cmp
push
dec
fstpl
bound
push
push
mov
ljmp
push
je
inc
test
fisubrs
daa
dec
and
imul
push
mov
loopne
jmp
push
fwait
pusha
addb
mov
dec
adc
popa
insb
sbb
mov
movsl
or
daa
push
movsb
sbb
je
jecxz
sbb
jmp
or
push
dec
sub
dec
xchg
out
jns
sub
or
add
cmp
sbbb
add
cmp
cli
jg
jmp
add
fcomps
push
push
ljmp
xor
mov
jnp
and
inc
out
cmp
mov
and
mov
push
aaa
and
pushf
es
push
mov
aaa
sbb
pop
pop
and
pop
lcall
push
cmp
mov
repnz
test
xchg
jae
adc
or
sbb
inc
loope
add
clc
sahf
mov
in
xchg
add
in
and
and
shrb
icebp
inc
jne
dec
push
add
push
jnp
mov
or
fcom
and
fdivr
ss
jb
stos
dec
xchg
loopne
pop
in
clc
lret
lahf
pushf
push
lahf
jl
pop
pop
adc
jnp
or
mov
push
and
das
lods
jmp
cmpsl
and
cltd
adc
xor
add
pop
mov
dec
pop
test
adc
fwait
cmp
inc
xor
push
push
add
test
cmp
xchg
sub
xchg
sub
mov
shll
test
push
pop
ja
subl
fmuls
push
cmp
jne
imul
int
fildl
nop
adc
data16
fwait
jle
cmpsl
ficoms
nop
shlb
add
add
inc
imul
mov
xorb
loope
mov
inc
js,pt
xor
and
shrb
xchg
pop
out
xorl
inc
cmpsl
arpl
push
push
stos
pop
scas
push
mov
xlat
addb
and
mov
or
fnstcw
mov
and
clc
imull
clc
jg
fs
test
jmp
movq
movaps
aaa
xchg
enter
shlb
jle
xor
loope
in
add
lret
je
jge
add
jge
repz
or
sbb
adc
or
mov
fcmovnb
adc
jnp
mov
mov
mov
add
adc
push
add
adc
add
pop
add
ffree
roll
add
scas
std
imul
enter
mov
mov
adc
dec
sbb
mov
fistpl
test
dec
rorb
clc
ja
stos
adc
xchg
cmp
or
lds
or
test
push
and
mov
adcl
xor
aam
xor
xchg
sbbb
push
xchg
rcrl
ret
jge
mov
jge
cmpsl
adc
jge
pop
sub
push
pop
sbb
dec
push
sub
lock
or
adcl
pop
add
cld
pop
ret
int
out
cmp
jb
neg
jl
pop
popa
mov
mov
adcl
aas
fisttpll
or
loopne
add
or
cltd
mov
push
rep
mov
dec
ljmp
and
lret
or
push
movsb
movsl
pop
adc
aaa
outsb
or
cmp
lcall
add
test
mov
cmp
jo
adcb
add
roll
divps
cmpb
clc
jb
subb
repz
push
pop
and
test
push
cmovs
mov
test
jecxz
enter
or
repz
and
mov
ficoms
lea
push
cld
jb
stos
add
xor
xor
les
dec
fsubs
mov
adc
push
and
cmp
int
fisttpll
mov
or
scas
adc
mov
dec
gs
add
inc
add
add
stos
or
push
push
mov
js
push
mov
out
sahf
out
call
out
sahf
lock
hlt
clc
clc
cld
sti
xchg
jno
lea
lock
fnstcw
jmp
int
loop
and
push
nop
inc
pop
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
inc
lret
dec
adc
add
daa
stc
sub
popf
divl
nop
fs
mov
mov
add
mov
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
sbb
pop
add
ljmp
mov
or
push
adc
repz
sbb
sub
inc
xor
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
pusha
or
js
xor
ficoms
add
push
add
sub
daa
ja
daa
push
mov
xchg
add
and
cmp
and
mov
add
je
and
push
repz
bound
and
push
sbb
cmc
ret
cmp
xchg
add
cltd
rclb
pop
mov
or
fistpll
mov
jmp
jp
je
mov
dec
jmp
rorl
sahf
mov
stos
xchg
inc
jmp
ja
leave
xor
inc
loop
sbb
rcl
and
pop
fidivrl
iret
stos
add
sbb
sbb
loope
je,pn
cmpsl
into
cmp
rclb
xor
int
arpl
hlt
or
popf
ror
mov
xor
mov
cs
add
sub
sbb
lock
mov
das
outsl
and
sub
mov
xchg
bound
pop
adcb
adc
push
xor
aas
mov
scas
xor
fsts
incl
mov
test
decl
inc
cmp
jne
inc
cmp
xor
pop
or
int3
lcall
dec
adc
cld
inc
inc
pop
cwtl
sub
pop
push
push
adc
pusha
pop
mov
pop
and
add
das
and
mov
rorl
dec
lea
mov
les
inc
inc
cmp
cmp
insb
cmp
pop
add
or
sub
cmp
and
jns
sbb
fimuls
adc
cmp
xchg
dec
aam
sub
pop
or
sahf
add
sub
inc
pop
push
insl
and
rorl
mov
cs
daa
pusha
and
into
or
pop
inc
hlt
cmp
pushf
inc
movsl
or
push
add
sub
sarl
sub
add
ret
mov
adc
loope
shlb
dec
leave
sbb
jb
mov
or
or
inc
pop
cmp
mov
mov
push
inc
push
rol
inc
jno
std
inc
inc
cmp
aam
lret
jne
sbb
fistpll
daa
xchg
es
push
xor
or
sbbb
add
lods
pop
insb
aaa
push
mov
outsl
int
xchg
aaa
fsubr
and
and
xchg
rclb
test
dec
inc
inc
inc
or
or
out
testb
inc
add
orl
cld
mov
stc
adc
insb
mov
daa
fldt
jae
push
aad
xchg
mov
adc
inc
xchg
inc
and
pop
push
pusha
mov
sbb
shlb
lds
inc
outsl
out
shll
inc
push
insb
ja
inc
outsb
cs
sbb
mov
cmp
dec
mov
xor
pop
jecxz
jmp
jg
cmc
inc
std
incb
dec
into
rorb
clc
int
icebp
push
sub
fmuls
lret
ljmp
ret
add
xor
adc
ds
jbe
popa
sub
fbld
fiaddl
pushl
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
mov
daa
lret
ret
adc
mov
inc
jne
jb
or
add
std
test
ss
enter
push
cmp
mov
arpl
mov
inc
in
xchg
icebp
ljmp
sub
cmp
jb
lea
cld
xor
mov
and
cld
jne
mov
push
cmp
rcr
cmp
jne
es
jne
decl
fmul
adc
or
cmpb
jmp
adc
push
dec
jmp
adc
sahf
lahf
jmp
std
std
jmp
cld
loope
cltd
jecxz
ret
pmaxub
es
adc
scas
jb
hlt
in
cmc
cmp
push
movb
shr
add
inc
stc
hlt
or
insl
dec
mov
adc
adc
clc
jb
dec
adc
hlt
mov
orb
adc
jo
loope
rcl
adc
sub
jns
inc
push
add
sub
in
sub
adcl
sub
sbb
dec
inc
add
orl
adc
in
mov
xchg
jmp
cmp
push
dec
mov
cs
iret
adc
movb
rorb
into
and
or
dec
or
mov
jg
add
mov
mov
dec
cs
add
ret
adc
popa
mov
push
jo
and
movsl
inc
sub
inc
repz
jae
mov
jno
pop
jle
push
push
pop
div
adc
cmp
jb
cli
loope
and
jae
movb
pop
clc
je
loopne
mov
lods
mov
loopne
pop
sub
pop
adc
push
fdiv
cwtl
pop
mov
or
shrb
add
sub
and
adc
gs
popa
adc
and
adc
push
sub
int
mov
inc
pop
cs
mov
sbb
gs
outsl
cmpb
adc
aam
sbb
xchg
out
sahf
ret
cmc
add
add
push
sub
adc
loopne
cmp
mov
xor
fisttps
or
jl
or
lods
push
mov
aaa
es
or
xlat
pop
pop
or
mov
nop
popf
xor
sbb
xor
or
cmp
inc
rorb
cmp
ja
xchg
jmp
adc
jne
sub
cltd
adcb
dec
adc
push
add
in
jmp
and
cmp
push
insl
mov
fmull
mov
and
pop
and
lods
repnz
or
adc
dec
add
popa
rcr
jne
inc
lds
dec
roll
adc
lret
or
test
es
adc
mov
jmp
ss
std
jg
je
mov
sub
cmp
ja,pn
xor
cld
push
leave
cmp
jae
push
insb
fdivs
movsb
and
sbb
cli
mov
or
dec
pusha
addr16
je
lock
cwtl
aam
ss
cld
insb
and
test
mov
nop
test
jne
test
jne
push
add
scas
inc
xorl
in
lds
jne
jbe
inc
mulb
hlt
dec
je
jmp
and
push
mov
add
add
into
mov
cmp
testl
jbe
sbb
mov
pop
jecxz
dec
sbb
jbe
stos
ret
cmp
xchg
cld
clc
loop
add
cs
popa
push
sub
adc
mov
pushf
inc
or
xor
xor
pop
cmp
loop
imul
lea
xchg
leave
popa
cld
stos
mov
shr
shlb
dec
or
adc
ljmp
jbe
inc
and
push
inc
push
stos
pop
dec
and
fsubs
mov
sub
imulb
test
sbb
adc
adc
xor
push
adc
adc
les
shlb
jo
hlt
iret
or
mov
inc
inc
data16
aaa
outsb
inc
testb
test
inc
aaa
cmpsb
je
hlt
cmp
rorl
loop
or
testb
inc
mov
mov
jo
push
mov
lret
or
dec
jmp
jb
movsb
add
out
sbb
dec
push
bound
xlat
call
push
jmp
xor
cmp
ljmp
int
jno
jns
pop
stos
lock
insb
js
and
movsb
ret
push
inc
lea
int3
decb
sahf
push
cmp
ret
bound
mov
and
add
mov
fldl
cmp
xor
popl
mov
andl
sbb
jecxz
rcll
adc
fmuls
mov
mov
and
decl
jae
sub
add
push
movsb
add
push
xchg
and
sbb
incl
pop
inc
add
loopne
je
inc
cmp
jb
lea
push
adc
in
dec
ss
imul
add
jbe
cmp
cwtl
mov
inc
pop
lahf
and
js
mov
mov
and
xchg
adc
dec
xor
push
mov
nop
pop
clc
adc
cmp
add
pop
add
xor
insb
sbb
push
mov
adc
test
scas
pop
jmp
pop
fmuls
dec
and
pop
pusha
pop
jecxz
adc
xchg
add
es
push
pusha
mov
push
inc
mov
inc
pop
movsl
mov
ret
dec
or
dec
sbb
mov
jae
add
adc
in
dec
call
xorl
push
popa
psllw
mov
test
ljmp
ss
xor
or
or
dec
mov
mov
inc
sbb
shl
mov
cwtl
add
incb
sub
leave
sub
fisttpll
std
add
xchg
push
clc
push
push
push
sbb
push
es
and
movl
pop
jne
lret
je
inc
stc
cld
aam
inc
xlat
rorl
shll
dec
adc
cmp
sbb
loopne
xor
or
rcll
sub
iret
dec
ja
ficomps
rcrb
xor
xor
mov
xor
shrb
xor
xor
push
adc
push
aad
fbstp
aaa
ds
decl
int3
push
adc
jl
pop
ds
pusha
pusha
xor
push
push
jnp
cli
push
or
pusha
dec
loop
je
lock
add
comiss
loop
cmpsb
inc
rorl
shll
mov
mov
out
ficompl
imul
and
sarb
or
aaa
mov
push
or
mov
mov
xchg
loop
push
pop
je
push
adc
and
mov
push
adc
and
pusha
test
mov
and
rorb
mov
mov
mov
pusha
pop
xchg
fstpl
dec
pop
cld
fmuls
inc
xchg
xor
faddl
mov
and
out
add
lcall
mov
in
std
sbb
ss
jp
and
xlat
test
sub
aas
push
add
push
cmpsb
fdivrl
mov
jmp
push
xor
call
push
xchg
xor
jo
sub
lds
inc
rcll
add
xlat
sbb
adc
fildll
imul
je
sub
sbb
test
sbb
rolb
sub
jnp
and
cld
xor
mov
push
iret
push
inc
pop
out
and
fistpl
int3
pop
es
add
mov
test
cmp
jne
or
inc
adc
mov
adc
sbb
xor
sub
add
add
xor
sub
or
sbb
rcrl
add
xchg
mov
out
fidivl
adc
push
mov
dec
ja
mov
dec
push
cmp
jmp
mov
dec
inc
jmp
push
out
pop
aas
sub
enter
inc
das
or
cmp
pop
add
add
inc
dec
pop
hlt
jle
jl
add
cmp
sub
push
push
daa
mov
sbb
push
jmp
mov
adc
push
or
mov
adc
and
icebp
sub
or
mov
sub
mov
sarl
mov
jp
and
fstps
pop
in
xor
pop
adc
and
sub
jecxz
mov
mov
jo
and
mov
or
aaa
aam
jo
pop
and
push
inc
cltd
test
jb
enter
adc
in
push
clc
or
fstpt
addb
xlat
cmp
inc
loopne
xor
or
fistpl
jno
bound
bound
sub
shl
daa
push
or
std
sub
out
dec
xor
add
cmp
notb
in
dec
dec
or
mov
dec
mov
std
push
push
pop
jle
pop
mov
cmp
je
movzbl
add
sub
je
rcll
xor
mov
add
jo
pop
repz
imul
in
cmp
dec
add
jns
xchg
add
add
adc
add
out
sbb
jecxz
cmp
je
lcall
flds
add
nop
add
pusha
in
xchg
pop
push
pop
pop
lcall
or
enter
dec
or
repnz
sub
or
iret
enter
or
rclb
add
or
or
pop
push
and
inc
sahf
xchg
add
sbb
ja
push
sub
in
adc
pop
adc
fwait
pusha
iret
enter
adc
jns
cmp
adc
adc
add
adc
add
adc
lcall
adc
ror
push
push
push
push
jb
cmp
pop
pop
xor
jns
out
sbb
lcall
sbb
call
pop
sbb
xchg
inc
enter
sbb
jns
sbb
jb
sbb
inc
sahf
push
and
push
nop
out
pusha
push
push
inc
incl
jns
push
pop
pop
jne
add
add
xor
sub
cmp
or
push
test
cmp
xchg
aam
in
cld
and
imul
fidivrl
in
push
in
jno
repnz
sub
sarb
push
adc
aad
cmp
and
xor
leave
repz
out
cmpsb
rolb
call
call
adc
fidivrs
cwtl
jmp
add
sbb
ljmp
sbb
out
in
jns
push
imul
inc
push
nop
ja
inc
in
sahf
out
pusha
in
jns
jge
xor
and
sbb
pop
lock
xor
icebp
iret
enter
pslld
repnz
push
and
std
repz
dec
in
leave
std
hlt
hlt
rorl
hlt
fwait
mov
div
inc
jg
idivb
cmp
idivl
nop
cmpsb
repnz
std
clc
clc
jns
pop
insb
clc
cltd
adc
inc
stc
nop
out
add
cld
cli
cli
inc
push
inc
push
iret
sti
sbb
sbb
cld
cld
je
cld
push
mov
leave
pavgb
out
xchg
testl
adc
ret
adcb
sub
pusha
jecxz
les
dec
lahf
lret
insb
sbb
push
in
stos
or
cmpsb
push
popa
es
out
repnz
std
sti
in
in
mov
fdiv
or
xchg
stos
inc
mov
xchg
inc
xchg
sti
out
out
inc
push
fsub
cltd
outsb
call
dec
sti
sub
imul
jmp
jne
rolb
cltd
in
repnz
add
sbb
pop
sbb
add
movsb
out
out
cltd
push
mov
adc
lock
cli
jb
pusha
leave
push
cli
sbb
nop
cmpsb
repz
sarl
push
stc
les
scas
dec
push
cmp
div
negl
jno
sbb
fwait
xor
add
stc
out
clc
imul
clc
sti
sti
aaa
jb
push
sti
cltd
mov
push
nop
cld
orl
jo
mov
and
jo
les
or
sub
mov
cs
mul
pop
dec
pop
and
shl
scas
testl
out
push
fsubs
out
out
and
mov
notl
sti
imul
xchg
shl
dec
push
jno
pop
mov
xchg
xchg
mov
loop
rcrb
jno
les
and
and
and
negb
repnz
les
cmc
pop
mov
inc
repnz
cmc
jae
dec
push
cmp
pop
dec
cmc
div
jmp
xor
and
in
mov
clc
xor
push
jecxz
stc
popa
cmp
mov
mov
loop
xchg
hlt
pop
pop
repnz
hlt
push
hlt
mov
sbb
sbb
data16
mov
hlt
idivl
jo
mov
sti
lahf
pusha
shl
lret
movsl
adc
ds
clc
test
es
dec
loope
loope
repz
push
jno
loop
scas
xrelease
xchg
mov
repz
imul
loop
push
inc
repz
adc
xchg
push
sbb
jmp
loop
mov
xchg
repnz
repnz
dec
in
in
cmp
repnz
or
icebp
sbb
mov
dec
push
and
divb
icebp
dec
pop
je
jb
test
xor
inc
or
sub
cmc
cmc
and
mov
test
lock
andb
lock
xchg
cmpsb
stc
stc
cmc
inc
xlat
mov
jne
push
lock
mov
xor
sbb
pop
jmp
and
test
test
or
ss
jl
add
add
sub
out
inc
sbb
in
nopl
pusha
pop
inc
ds
add
add
stos
add
push
and
adc
push
jnp
add
rcll
jne
or
dec
add
xor
ds
add
sahf
and
ljmp
mov
or
and
idivb
push
fisttpll
push
inc
add
pop
push
or
fnstcw
popa
jp
insl
jns
lcall
push
fstl
pop
or
fwait
iret
repz
pop
jnp
fists
push
sahf
cmpsl
fldcw
in
pop
push
xor
pop
repz
rcll
lods
pop
into
les
idivl
push
adc
orb
sbb
push
jp
or
sbb
mov
push
add
out
loope
sbb
sub
mov
add
push
lock
cs
cmp
sarb
mov
or
jl
sbb
aas
imul
enterw
cmp
or
lds
cli
and
mov
fildll
xchg
mov
cmp
cmp
mov
test
add
insb
sub
nop
outsl
pusha
and
xchg
out
in
rcrl
add
add
inc
jl
mov
mov
movsl
xchg
shlb
push
sbb
push
les
sahf
jge
jp
orb
inc
xchg
jo
inc
leave
pop
fistpl
shrb
andps
adc
and
cltd
jns
es
pop
test
inc
test
or
add
xchg
movsb
inc
adc
or
test
movsl
inc
jb
pop
and
and
test
jle
pop
inc
inc
inc
inc
sbbb
ret
cmp
loopne
test
jmp
jb
cs
rcll
ja
pop
inc
push
inc
and
gs
ret
js
in
popa
lock
lret
push
cmp
dec
outsl
cmpsb
or
and
inc
test
das
adc
je
pop
shrl
mov
sub
inc
inc
pop
cmp
lds
lods
enter
add
xor
orps
xchg
in
push
push
cmp
adc
andb
cmp
xchg
hlt
and
pop
loop
or
leave
add
nop
icebp
or
clc
repz
sbb
fimull
fs
xchg
mov
jo
sub
adc
xchg
in
cmc
or
mov
adc
xchg
or
inc
fwait
jo
int
stc
aad
clc
mov
lret
roll
pushl
jne
mov
mov
inc
inc
cmp
pop
push
jmp
sbb
sbb
out
jns
mov
dec
mov
std
clc
pop
xor
push
mov
pop
pop
push
popa
xor
pop
sbbl
popa
mov
inc
sub
clc
mov
mov
icebp
cmp
inc
add
dec
pop
jmp
xor
xchg
or
clc
lods
add
sahf
loope
dec
sub
stos
add
testb
shll
push
sahf
aaa
adc
inc
lret
mov
inc
aaa
cmp
add
mov
push
dec
sub
adc
and
jl
test
cmp
sbb
mov
adc
push
mov
or
fcoml
repnz
test
mov
mov
inc
xchg
sti
incl
inc
decl
jne,pn
loop
cmpsb
sbb
repnz
mov
pop
ljmp
push
xor
aaa
jbe
push
cltd
pop
idiv
rclb
add
mov
addb
ja
addb
std
aaa
dec
mov
mov
xor
adc
xchg
sbb
jmp
cmp
jae
dec
inc
sbb
mov
jbe
mov
loop
les
dec
call
and
add
sub
adc
cmc
push
push
leave
scas
push
jg
leave
movsl
test
sbb
fildl
call
dec
gs
je
or
dec
push
sub
in
dec
je
push
push
addb
adc
in
jecxz
into
jno
movb
repz
mov
sbb
pop
decb
push
out
cltd
cmp
pop
test
sbb
push
das
sbb
ret
push
and
rolb
xchg
mov
subl
cltd
lock
adc
xor
orb
popa
mov
pop
int3
loop
test
jl
es
adc
pop
xchg
sbb
sub
mov
dec
repz
inc
aam
push
mov
test
pop
cmp
inc
enter
ja
insl
or
pop
jo
jl
jge
push
push
cltd
pop
not
sub
cmp
cmc
jge
int
push
xchg
inc
out
cmp
pop
aaa
mov
jmp
or
sub
into
mov
popf
pop
xor
fs
or
imul
sub
insl
les
insl
mov
shll
adc
fisubrs
or
je
insb
sub
and
sbb
sbb
adc
mov
add
sbb
or
outsl
dec
inc
mov
inc
aam
pop
jg
cmp
incl
pop
push
adc
das
mov
sub
sub
loopne
inc
dec
scas
adc
hlt
inc
xor
js
mov
in
movsb
loop
pushf
push
mov
sub
int3
xchg
push
cmp
out
icebp
mov
jg
insl
cmp
clc
jno
jl
fs
insl
test
mov
adc
outsl
ja
sub
dec
jo
xchg
inc
in
pop
je
dec
inc
adc
jne
mov
jmp
jmp
push
add
inc
lretw
test
pop
pop
or
adc
insb
lahf
shl
loope
pop
popl
or
xor
lods
sbb
pop
push
cmpb
imull
or
enter
subl
inc
push
xor
or
stc
pop
push
mov
jle
adc
lcall
push
push
pushf
add
xorb
jp
and
adc
aad
jb
ret
push
lods
push
shll
mov
xchg
mov
and
push
adc
inc
cli
and
dec
pop
mov
or
mov
push
hlt
mov
xor
add
out
movsl
aad
push
loopne
adc
adc
pusha
iret
repz
call
xor
fwait
push
jae
mov
dec
cmpsl
pushl
push
int3
dec
ljmp
fcmovb
xchg
rorb
ja
shl
jg
push
pop
pop
or
xchg
fcom
push
sub
or
mov
ret
andb
sbb
jne
jbe
adc
adc
mov
mov
add
jecxz
outsb
decl
inc
jg
cmp
je
gs
xor
dec
stos
dec
pop
mov
cld
pop
mov
mov
inc
inc
cmp
je
xchg
mov
jmp
orb
adc
lcall
jle
call
je
popa
xor
ficoms
sbb
or
jle
je
mov
incl
call
outsb
xchg
fdivr
hlt
push
mov
push
inc
sbb
mov
inc
adc
push
xor
mov
pop
sbb
fisubs
or
bound
adc
add
or
xchg
dec
push
add
cltd
fcomps
fsts
fcmovnb
add
sub
jecxz
xchg
xchg
nop
hlt
mov
addr16
test
pop
pop
es
test
xor
rorl
cmp
mov
or
mov
and
mov
nop
inc
or
add
or
inc
int
sbb
nop
popa
fs
add
xor
add
movsl
add
frstor
push
fidivs
sbb
dec
movsb
jb
jns
add
hlt
inc
cmp
lret
mov
push
adc
adc
xchg
dec
mov
mov
repnz
add
shlb
icebp
pop
xor
mov
shlb
jne
jmp
dec
or
in
inc
sub
push
jmp
das
dec
mov
push
dec
sbb
ror
xor
pop
rorl
test
and
pop
daa
push
cmpsb
push
stos
and
aam
repz
ret
pop
add
test
bound
les
js
bound
cmpsb
in
out
xchg
test
adc
adc
movsb
scas
inc
xchg
ret
push
push
jns
and
addl
ljmp
push
add
call
add
cmp
or
mov
or
fs
add
in
jnp
push
jmp
cmp
jmp
inc
or
inc
inc
sbbl
mov
add
ja
or
mov
sub
cltd
pop
jne
sbb
add
push
mov
leave
jge
cmpsb
xor
clc
and
sarl
ja
inc
jmp
pushf
mov
fisubl
jne
test
test
mov
add
jmp
jne
add
xor
sbb
and
dec
sahf
jmp
ds
dec
jnp
add
push
data16
dec
test
inc
psubusb
sub
adc
jmp
sbb
movsl
iret
pop
test
lcall
adc
test
or
add
arpl
clc
xchg
pop
sbb
loopne
sbb
jl
dec
iret
fsubrl
outsb
mov
add
or
arpl
jmp
pop
arpl
lret
pop
pop
xchg
push
jno
adc
push
fs
jp
shll
inc
add
loop
shrb
iret
push
std
push
mov
fwait
rol
inc
add
lds
fs
push
add
ja
movsb
cld
adc
pop
sbb
shrl
cmp
pusha
into
ds
pop
sbb
iret
add
les
filds
js
adc
cmc
mov
or
mov
das
cwtl
pop
shrb
out
addl
sub
add
js
xor
rcrl
mov
sbb
or
enter
sbb
and
mov
bound
add
insl
clc
push
nop
icebp
push
pop
mov
popf
sahf
enter
inc
lret
inc
int3
or
shlb
push
adcb
cmpsb
mov
aam
pushf
enter
inc
push
pop
sub
enter
jmp
mov
pusha
lcall
rcrb
inc
lcall
mov
adc
dec
mov
pop
xchg
jmp
sbb
adc
adc
imul
cwtl
sbb
fs
push
add
push
sbb
int3
push
cmp
arpl
imul
cmpsb
pusha
or
lock
loop
sub
subb
rclb
add
lock
cmp
out
xchg
hlt
inc
or
pop
xchg
dec
sbb
jge
mov
mov
sbb
ja
pop
add
hlt
jbe
addl
jo
xchg
fistl
dec
sbb
imul
inc
cmpsb
cmp
test
repnz
inc
xchg
fidivrs
or
out
ja
jg
adc
lock
mov
push
xchg
sub
xchg
cmp
test
mov
inc
jmp
icebp
cmp
push
pop
xor
rolb
pop
or
shll
clc
or
fcomp
shl
inc
sarl
mov
jecxz
ss
dec
cmpsl
push
clc
xchg
jbe
iret
mov
cli
int3
adc
ljmp
push
jmp
and
inc
sub
fs
lret
sub
mov
sub
inc
and
je
pushl
add
lock
leave
inc
in
sarb
clc
xor
add
in
sbb
mov
jecxz
mov
push
lea
loopne
out
into
add
adc
push
in
test
call
inc
and
add
add
push
test
inc
stos
xchg
jnp
shrb
pop
add
xor
push
dec
or
push
mov
mov
sarl
jge
sub
js
push
jl
mov
mov
mov
dec
lea
dec
xchg
insb
push
int3
xchg
pop
es
sub
clc
cwtl
xlat
mov
or
cld
xor
inc
jg
pop
xchg
mov
jg
adc
and
add
push
dec
hlt
in
add
mov
cmp
jne
push
repz
je
out
and
fidivrl
movd
loopne
cwtl
and
sbb
shll
lock
or
xor
lcall
add
adc
dec
or
lock
and
lods
lret
test
fsubrl
pop
sub
xchg
frstor
adc
xchg
xchg
sub
sub
push
or
xchg
inc
sbb
sbb
adc
popl
paddsw
out
mov
pop
test
fstpl
sbb
push
movl
fstl
xor
sarb
and
repnz
loope
aaa
iret
adc
adcb
pop
jo
sub
push
dec
jno
loopne
call
ret
push
loopne
push
outsb
stc
pop
cld
sub
icebp
je
pusha
pop
or
stc
and
jno
or
xor
xchg
ja
or
push
push
std
xchg
js
or
jb
rol
add
add
shl
or
add
mov
out
add
rorb
sub
mov
inc
dec
repz
cmc
jne
lea
or
xor
sub
fs
call
sahf
stc
mov
loopne
sar
mov
imul
mov
sti
push
movb
loopne
cmp
out
or
loope
xchg
xchg
ja
sub
mov
mov
aas
push
push
popf
ret
and
xchg
out
rol
into
cmp
out
popf
cld
ficoml
push
push
fiadds
push
loopne
imul
push
enter
cld
cmp
xor
pop
dec
and
int
jg
sbbb
mov
xchg
fcmovne
movsb
lods
jmp
and
je
and
sti
push
notb
or
test
add
mov
mov
lahf
test
pop
mov
mov
add
lea
sub
ja
lret
lds
and
jae
ljmp
jmp
add
xor
ret
repz
and
inc
cwtl
jl
push
mov
jo
jg
xchg
ja
pop
pushf
or
sbb
shrb
jno
loopne
loopne
xchg
xor
orb
lahf
add
jno
push
push
ret
mov
dec
push
hlt
add
dec
mov
lcall
add
sahf
cmp
cmpsb
add
push
sub
mov
cmpsb
sbb
dec
lret
push
sub
aam
enter
inc
cmp
std
jne
fsubrs
mov
sub
stos
enter
imul
adc
xchg
rclb
orl
or
mov
jbe
insb
insl
cmp
adc
push
adc
shlb
lock
out
into
std
orb
fidivl
push
jmp
mov
loope
xchg
jbe
push
add
fdivl
push
xchg
add
inc
push
pop
inc
js
inc
lods
jnp
jae
cmp
call
add
shrl
push
test
push
cmp
rcll
leave
inc
add
inc
das
imul
push
mov
test
js
jmp
loopne
rorb
sub
cld
jmp
loopne
andb
cmp
inc
cmp
ljmp
inc
inc
jne
jge
shrb
incl
loopne
xchg
push
cld
xorb
xor
inc
aaa
decl
jmp
push
call
insb
inc
idiv
jg
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
sarl
dec
cltd
mov
add
add
divb
cld
xchg
lahf
inc
push
mov
inc
dec
jne
call
test
and
or
fdivp
gs
add
jmp
cmp
ret
not
xchg
addb
inc
insb
cli
adc
call
lds
mov
ficomps
out
mov
mov
or
push
sbbb
push
orl
pop
sbb
sbb
mov
outsl
test
shlb
loopne
cld
aas
ret
lret
push
adc
push
sbb
cmp
sar
cli
jo
insb
ljmp
cmpsl
or
std
repz
pop
and
fs
or
insb
add
ret
andl
lret
pop
sub
jg
out
inc
jmp
xor
dec
sbb
mov
xor
add
ret
add
sub
jmp
faddl
jne
xchg
jno
mov
xlat
fwait
jb
jmp
xchg
mov
inc
and
and
push
sbb
arpl
or
mov
mov
and
pop
add
inc
lret
cltd
mov
mov
negb
or
and
in
or
push
popf
mov
pop
pop
sbb
or
pop
lcall
dec
inc
mov
cltd
mov
jno
mov
dec
rolb
lret
mov
and
mov
sub
and
or
mov
testl
cwtl
mov
mov
paddb
aaa
out
jle
sahf
jg
dec
or
push
cmpl
or
or
cmp
popf
add
fcmovnbe
inc
add
sar
jo
sub
dec
or
sbb
xor
push
stos
push
push
xor
add
sbb
or
pop
sub
aaa
ret
inc
inc
jp
jnp
or
jo
jns
jo
or
or
sbb
out
xorl
adc
clc
xor
or
dec
xor
mov
push
push
je
push
mov
push
call
push
adc
mov
or
pop
jbe
or
jbe
xor
sub
jle
loope
or
sbb
jo
loope
and
add
jne
mov
jbe
jmp
push
sub
jno
and
scas
jbe
pop
mov
sbb
xchg
mov
push
push
pop
loopne
cmp
rcl
sbb
mov
fsubr
daa
mov
jns
movsb
jg
adc
sbb
xorb
ljmp
rclb
mov
jb
cs
outsl
dec
xchg
call
inc
sbb
cwtl
sub
adc
inc
mov
lea
push
push
push
mov
fucomp
xor
mov
test
addl
or
es
pop
adcb
jl
sbb
cmp
inc
test
and
loope
cmp
pop
jmp
sti
lret
insb
push
cld
pop
sub
push
jo
mov
testb
mov
xor
xorl
loope
js
imul
cmpsb
insb
in
scas
and
bound
mov
or
cmp
cmp
outsl
xorb
adc
inc
fildl
pop
ret
push
xorl
ret
dec
push
movsb
sub
inc
fstpt
push
push
movsb
pushf
jne
pop
sub
pop
jns
adc
mov
add
cmp
add
xor
shlb
sub
dec
fsubl
add
lcall
push
in
pop
sbb
cmp
push
in
inc
inc
arpl
pmulhuw
cmp
orl
sbb
cmp
xor
jmp
push
dec
jp
sti
pop
std
cmc
jns
insb
and
pop
cmp
je
addr16
clc
gs
or
mov
inc
jle
jae
dec
insl
loop
loope
jg
jge
sub
inc
addl
inc
jne
fcomps
jg
ljmp
pop
and
cmpl
jbe
mov
xor
es
adc
jge
and
daa
test
xor
jno
xchg
dec
dec
insb
lcall
aad
in
orl
imul
mov
xchg
lret
inc
inc
mov
and
mov
pop
pop
sarb
mov
mov
jo
jb
xchg
mov
or
push
xor
and
das
jo
push
adc
shll
leave
fwait
inc
sub
andl
push
mov
das
mov
test
movsl
popf
sub
loopne
fcoml
gs
aam
sarb
clc
or
in
popf
enter
shlb
out
mov
adc
mov
xchg
add
sarl
in
cs
aaa
dec
cld
adc
sub
jno
aam
aam
xchg
adc
in
fadds
lea
mov
xchg
or
sbb
das
pop
and
movsb
add
loopne
and
mov
add
arpl
add
icebp
les
xchg
bts
jmp
mov
es
mov
adc
js
dec
adc
add
pushf
inc
sbb
mov
or
mov
add
add
iret
jnp
adc
push
loopne
or
cmp
enter
test
xchg
pop
add
sbb
sub
push
repnz
cmp
outsl
cmpsl
sbb
movsb
pop
nop
mov
fmuls
adc
mov
out
fs
je
shl
jl
xchg
nop
jnp
sub
lahf
inc
mov
mov
iret
enter
popa
or
pop
adc
sub
cmpsb
xchg
pop
outsb
cmp
imulb
shll
out
or
stos
jno
inc
pusha
mov
sub
cmp
aam
bound
jle
adc
dec
movb
jne
xor
out
arpl
dec
cmp
jge
inc
mov
or
cs
out
movsb
stos
test
test
pop
inc
and
pop
or
aam
push
dec
jl
and
adc
icebp
andl
pop
adc
jge
and
cmc
pop
pop
pop
and
jno
mov
and
aas
dec
mov
inc
hlt
xlat
insb
popf
fdiv
mov
cmp
dec
sub
call
and
push
push
inc
orb
mov
lret
or
inc
or
je
jmp
or
dec
dec
dec
adc
popa
add
cmpsl
mov
add
sbbl
dec
lcall
sbb
push
push
jge
cmpsl
movsl
add
jmp
sbbl
inc
pop
testb
xchg
data16
or
ucomiss
jmp
adc
and
int3
jo
and
or
jnp
jbe
push
rclb
js
test
cmp
or
mov
ret
pop
or
sub
outsb
cmp
adc
xchg
stc
ja
mov
push
mov
sub
aam
addb
sub
testl
mov
je
movl
sub
clc
mov
push
mov
adc
sbb
push
mov
loopne
leave
sub
sub
inc
and
test
lock
fdivl
push
adc
add
ljmp
daa
xchg
xor
adc
les
mov
fbld
mov
imul
rcll
insl
andl
test
or
mov
inc
push
stc
fcmovne
nop
sbb
lea
inc
cmp
cmp
js
pop
or
xchg
out
imul
inc
loopne
cmp
xor
jecxz
jmp
ret
insb
sub
jo
movsb
lea
push
add
jb
inc
shlb
pop
lea
add
dec
add
dec
shrb
xor
popa
adc
sbb
es
out
or
and
pop
test
adc
cld
dec
loopne
push
dec
or
and
sub
loopne
and
test
xor
adc
and
mov
push
mov
adc
jbe
push
inc
ret
and
test
ret
xlat
imul
or
inc
ja
mov
adc
sbb
adc
pop
divl
in
or
xchg
adc
dec
inc
push
icebp
inc
ds
mov
lcall
push
push
cmp
test
push
add
and
jb
mov
or
xchg
test
adcb
pop
xor
add
add
add
add
and
and
xchg
xor
subb
out
add
push
sub
push
push
push
lock
mov
jmp
pop
adc
pop
and
insl
mov
jo
ret
gs
add
dec
dec
mov
fmull
push
pop
rorl
push
xchg
dec
xchg
mov
or
jg
sbb
mov
add
mov
xor
enter
add
jmp
test
popf
je
inc
jns
in
push
sbbl
aas
xor
shlb
shl
push
ret
xor
sahf
sbb
cmp
xor
rorb
popf
in
mov
clc
aam
fsubr
jle
xchg
fsubs
mov
inc
pusha
sbb
jae
out
mov
push
lods
mov
mov
sub
cmp
leave
jl
push
and
in
or
call
push
aam
or
push
dec
ss
negl
mov
lea
jle
push
clc
in
pop
ja
mov
movsbl
mov
rcrl
pop
sar
pop
mov
jno
xchg
add
xlat
adc
bnd
inc
adc
pop
cli
mov
fdivrl
fsubs
lret
fdivrl
mov
or
jne
inc
call
pop
or
jb
in
push
pop
add
xor
sbb
adcb
cli
xchg
sub
pop
shrb
mov
adc
loopne
jge
aas
mov
mov
ja
clc
push
imul
lret
or
ja
lods
shrl
in
xchg
daa
adc
out
sbb
hlt
hlt
stc
cmpl
or
inc
insb
je
lock
push
mov
test
adc
ds
loopne
sub
xchg
and
fidivrs
ss
or
xor
mov
repnz
jb
dec
xor
movl
out
jns
or
adc
pop
outsl
imul
js
sub
je
mov
add
and
push
dec
dec
sub
lret
pop
scas
pop
sbb
rorb
sbb
sbb
jle
inc
je
pop
jge
xchg
jns
or
and
movsb
nop
mov
cmp
mov
fdivr
xchg
dec
pop
sub
loop
and
sub
je
push
jae
rorb
lret
xor
xchg
outsb
cmpsl
popf
xchg
pop
das
mov
mov
add
pop
loopne
icebp
dec
and
in
or
test
mov
mov
dec
andl
sub
pop
es
pop
push
mov
inc
scas
mov
add
push
insl
cmp
jbe
or
or
int3
negl
fsts
cmpsl
hlt
dec
lret
sbb
or
ss
iret
sub
and
pushf
je
in
xchg
inc
mov
push
mov
or
inc
pushl
cmp
xchg
cmpsl
add
xchg
mov
jge
lcall
push
dec
nop
inc
mov
inc
pop
fwait
pop
leave
cmp
push
and
jecxz
mov
lea
iret
sbb
push
sbb
xchg
mov
lret
sub
loop
stos
mov
into
add
addr16
outsb
in
cmp
push
outsb
je
test
sbb
je
enter
movsb
xor
bound
test
add
or
stos
shlb
adc
movsb
jb
xchg
call
inc
mov
push
mov
les
sti
movsb
std
cmc
nop
cmp
adc
hlt
jmp
cmp
icebp
jmp
insl
cmpl
incl
int3
push
andl
sub
mov
jbe
out
jl
call
cld
adc
sti
push
mov
ret
dec
sub
inc
push
add
mov
mov
test
and
fcmove
mov
lcall
imul
sbb
lds
enter
cmpb
jne
and
add
push
push
bound
jne
sub
outsb
mov
add
jae
addr16
movsl
rolb
cmpsl
decb
mov
adc
lock
es
push
pop
data16
test
dec
lahf
push
sub
lret
mov
jne
push
cmp
je
adc
xor
cmpsb
jmp
or
jmp
aaa
int3
je
cltd
dec
js
mov
dec
sub
rolb
pop
jl
jae
call
rolb
jecxz
test
pop
fimull
pop
sbb
ds
aas
jno
mov
or
jne
pop
ja
push
and
lea
adc
lret
push
aas
mov
push
mov
roll
cmp
jg
adc
clc
sahf
add
mov
dec
faddl
clc
xchg
sub
inc
cmp
pop
stos
aas
je
mov
adcb
je
cmp
xor
ss
test
loope
or
ss
adc
mov
cmp
push
data16
xchg
je
gs
fcmovb
jg
lea
jg
push
jmp
adc
push
sub
push
test
dec
and
mov
cltd
sub
sub
sub
sub
pop
ror
or
jae
push
jp
xchg
popf
data16
fdivrl
lea
add
adc
pop
stos
mov
xor
push
pop
xchg
test
jne
jno
lds
xchg
inc
call
sbb
push
rorl
pop
push
xchg
nop
popa
jle
sbb
mov
dec
add
dec
clc
add
cmpsb
inc
lea
push
xor
dec
enter
mov
pop
icebp
jl
testl
push
xchg
fbld
rcrl
adc
clc
mov
sahf
pusha
shrb
in
sub
movsb
cmp
nop
loope,pn
ds
adcl
lret
sub
lock
push
cmp
push
dec
test
add
mov
or
push
rclb
xchg
push
xor
addb
sub
fsub
mov
daa
mov
mov
aas
mov
push
push
lea
push
hlt
cmp
push
adc
lret
inc
cmpsb
fsubrp
out
dec
or
lods
xor
rolb
and
lcall
mov
xchg
push
mov
cmp
add
push
sti
fs
rcll
or
scas
addl
xor
push
aas
out
push
fmull
arpl
xor
pop
dec
mov
inc
push
js
dec
jge
mov
les
ds
cmp
jp
mov
outsb
push
xor
and
jg
loopne
push
fstl
sbb
sub
sbb
imul
xchg
test
mov
cmp
add
xor
or
sub
rorl
pop
mov
pop
pop
cwtl
adc
inc
and
mov
inc
mov
enter
sub
sub
fdivl
rclb
sbb
adc
and
sub
cld
jmp
cmp
out
jnp
mov
inc
rcrl
xchg
and
or
cltd
sub
sbb
xor
ret
mov
mov
or
rorb
ret
ljmp
xorb
dec
cmp
jbe
push
pop
mov
dec
or
rolb
sub
jae
mov
shr
lea
not
and
decb
jne
jbe
dec
cwtl
and
adc
mov
add
push
pop
add
adc
jg
add
loop
lods
rcrb
push
or
data16
mov
push
sub
jmp
clc
and
notl
add
shlb
and
fstl
in
sar
xor
dec
pop
cmp
pop
stos
inc
inc
fimuls
mov
lods
pop
mov
jno
jno
mov
xchg
shr
not
and
ret
les
jne
sub
xchg
out
loopne
jmp
lea
das
mov
xor
iret
jle
pop
dec
add
mov
push
or
jmp
cmp
mov
aaa
and
ficoms
mov
int3
xor
or
dec
or
mov
dec
pusha
mov
mov
inc
mov
inc
cmp
jne
and
push
pop
lret
call
fisttps
ds
jmp
dec
adc
push
mov
ja
add
or
or
adc
dec
inc
pop
push
repz
jp
mov
or
mov
loope
shl
add
scas
mov
push
push
call
aas
gs
push
or
adc
icebp
sbb
mov
mov
jne
add
decb
adc
fiadds
scas
jne
pusha
add
and
pushl
push
push
mov
push
and
ror
mov
add
mov
in
and
js
mov
adc
out
aaa
ret
mov
cmp
xchg
insl
or
mov
fmuls
inc
cmp
sbb
push
imul
adc
dec
sub
cwtl
outsl
push
mov
lock
cmp
pop
js
add
imul
stc
negb
lock
push
push
jae
pop
inc
adc
adc
inc
mov
or
push
push
cmp
int3
movsb
adc
fadds
adcb
fwait
orl
mov
lds
mov
xor
scas
push
popa
pop
xorb
add
rolb
mov
ret
imul
mov
incb
pop
inc
add
push
mov
jne
or
add
iret
aas
lret
sbb
popa
lcall
xchg
sahf
ja
fiaddl
iret
roll
push
mov
lret
inc
lods
movsb
dec
clc
sub
frstor
adc
adc
mov
cld
lock
call
jmp
add
je
clc
add
dec
decb
mov
adc
dec
popa
push
sub
fs
mov
sahf
scas
mov
inc
inc
mov
lock
testb
mov
or
lds
not
and
xorps
or
popa
or
fwait
mov
sbb
sub
sarb
mov
fsubl
cld
mov
cmp
scas
inc
sti
or
mov
and
pushf
jle
clc
cmp
ret
int3
inc
cmp
add
adc
jmp
add
mov
int3
push
push
subb
pop
out
pop
mov
dec
inc
stc
sbb
clc
sti
dec
in
rolb
es
add
cmp
add
or
mov
add
push
jns
add
xchg
in
sub
add
xchg
fidivrl
adc
pushf
sar
dec
mov
push
cs
fstpl
fcompl
loopne
sbb
jbe
jg
rcl
int3
adc
jle
mov
pop
sub
xor
push
pop
adc
and
adc
cmc
subl
and
jne
pop
sarb
test
xor
adc
inc
insb
xor
add
jae
out
dec
shrl
and
mov
sub
mov
cli
jl
inc
inc
or
loop
fimuls
fildll
mov
inc
dec
insb
pop
xor
push
pusha
push
cld
push
sar
dec
jp
movsb
and
sahf
or
mov
cmp
xor
sbb
jl
cmp
dec
cmp
or
je
fisttps
mov
push
push
fbstp
adc
fnstenv
dec
fimuls
inc
jecxz
add
loope
xchg
ja
lea
mov
inc
dec
test
mov
ret
adc
push
lods
pop
sub
out
cmp
ret
mov
test
lods
push
lret
inc
sub
sbb
and
add
push
add
ret
lods
pop
and
inc
cmp
add
mov
jge
or
syscall
add
inc
in
sub
push
stos
dec
add
out
fldcw
push
nop
cmp
add
or
stos
ret
adc
pusha
test
adc
jae
fcompl
push
jne
mov
xlat
outsb
cli
fnstenv
jmp
jnp
add
xor
aaa
arpl
mov
sti
adc
fsubs
fstpl
jle
push
mov
pop
lcall
fcmovnb
scas
pop
cmp
je
mov
in
pusha
ret
movzwl
and
mov
dec
int3
pusha
inc
fcompl
iret
jne
inc
jno
inc
aam
xor
cmp
xlat
scas
sub
out
xchg
std
add
out
mov
dec
mov
and
jne
cltd
aaa
loopne
mov
push
pop
outsb
leave
inc
test
sbb
push
pushf
mov
sub
icebp
sbb
fdivrl
aam
xor
jle
xchg
dec
add
loopne
cmc
call
iret
push
xor
cmp
hlt
or
cld
jge
pop
mov
decb
jne
mov
repnz
jmp
jp
mov
pop
pusha
dec
bound
dec
push
xlat
int
and
test
xor
jp
dec
jp
movsl
call
mov
mov
or
pop
xor
nop
fsubrs
sub
jge
hlt
roll
inc
or
push
or
out
add
or
inc
or
inc
or
push
mov
cs
mov
pop
adc
or
adc
cmc
lods
jbe
add
scas
and
lods
jo
pop
mov
sbb
dec
jne
cmp
loop
push
ds
jg
fsubl
inc
add
outsl
or
mov
jno
sbb
je
cld
sbbb
in
jb
or
xorl
mov
adc
pop
test
imul
inc
mov
or
cld
testl
push
lock
add
add
push
sbb
cltd
ja
jnp
sub
rolb
add
out
xchg
adc
shlb
cmp
push
dec
mov
xchg
inc
inc
cmp
cmp
add
pop
lock
cmp
push
mov
and
inc
add
add
aaa
repnz
mov
and
push
incl
xchg
inc
orl
push
dec
push
test
or
test
jmp
push
dec
sub
sti
fidivl
popa
xor
lahf
mov
adcl
js
push
divl
inc
push
lahf
pop
pop
jne
push
lods
rcll
pop
mov
std
arpl
push
mov
adc
test
mov
enter
loopne
push
inc
shl
js
sbb
ss
push
or
pop
push
mov
mov
cmpsl
pop
jl
or
adc
jle
xchg
bound
nop
loopne
and
jo
loope
insb
int3
push
mov
dec
imul
dec
or
iret
sub
movb
add
test
popf
call
lods
aam
hlt
and
xchg
dec
mov
mov
jne
pop
xor
or
sarb
outsb
dec
adc
sbb
cli
fnstcw
jmp
movzwl
sub
shl
or
int3
test
lea
jnp
xchg
in
je
cmp
mov
decl
rorl
sbbb
xchg
imul
test
mov
popf
cmpl
sub
mov
pop
pop
ja
push
sbb
jns
out
scas
or
and
sub
push
inc
cmpsl
and
add
xchg
or
rcll
add
add
sbb
sbb
xchg
arpl
ja
push
pop
adc
lea
xchg
pushf
xchg
ss
or
add
scas
and
hlt
ficomps
mov
and
icebp
or
in
sbb
pushf
xor
mov
aas
insb
jne
jp
mov
adc
and
sbb
sbb
jg
add
lret
enter
xor
cmp
mov
add
daa
pop
or
push
jae
or
jmp
int3
les
add
std
jae
xchg
clc
xor
dec
ret
test
shll
lea
cs
cmpsl
stos
dec
and
sbb
adc
sub
sub
dec
sbb
mov
jb
or
mov
leave
mov
mov
push
enter
call
cmpb
lods
push
addr16
movsb
fmulp
call
xchg
and
dec
outsl
xchg
or
add
call
inc
pusha
repz
loop
leave
mov
dec
add
mov
mov
stos
ss
jo
mov
cltd
mov
repz
in
jb
shr
xchg
or
mov
mov
scas
jbe
test
push
hlt
xchg
repz
cmpsb
in
xchg
push
lods
rclb
push
inc
call
inc
in
repnz
push
and
rol
and
shlb
loopne
inc
loop
in
in
bound
les
les
test
jb
test
popa
mov
inc
int3
test
loope
lahf
mov
mov
add
sysret
movsb
cmc
or
sbb
mov
sbb
xor
fidivs
pop
mov
ret
mov
aaa
test
daa
cmp
scas
movb
pop
ror
fcom
lea
cmp
btr
lret
lods
add
mov
dec
ror
pop
clc
xchg
ret
mov
mov
mov
or
fwait
jns
inc
jb
adc
dec
aaa
mov
add
and
add
and
or
dec
adc
mov
push
cld
sbb
xor
mov
loop
push
or
sahf
add
sub
es
adc
xor
jnp
or
cmp
repz
xchg
add
or
or
push
fsubs
push
adc
mov
in
and
xorb
mov
shrl
hlt
stc
mov
aaa
inc
cld
inc
sbb
cs
or
nop
cmp
cmp
adc
ret
pop
test
mov
int3
mull
lret
sbb
push
or
shll
enter
mov
pop
cmp
rol
popa
add
xor
dec
mov
push
clc
shll
sti
cld
std
xchg
cmp
inc
and
ja
pop
shlb
add
fcoml
cmpsb
dec
imul
xor
jg
pop
push
mov
sbb
add
push
pop
sub
insl
push
lea
add
add
and
xchg
je
push
or
pop
inc
fmul
add
mov
aam
ljmp
pop
loopne
fldl
or
fldl
or
mov
push
mov
push
loopne
and
mov
push
leave
pop
jmp
mov
outsb
jns
sub
rorl
mov
xor
sub
das
sub
xchg
dec
cmp
dec
dec
je
add
mov
fsubrs
adc
push
sti
fldenv
lea
sbb
sub
shlb
jbe
cmp
pop
pop
outsl
push
pop
ret
sub
sbb
fstps
stc
fwait
add
inc
fists
mov
mov
lock
scas
repnz
hlt
test
xchg
mov
inc
adc
fsubl
in
pop
push
fdiv
fsubrl
fstl
and
aas
movsb
push
shl
push
xchg
mov
or
and
or
xchg
pusha
inc
lock
mov
push
lods
mov
push
iret
repz
sarl
fucomip
icebp
jle
fnstsw
mov
adc
mov
adc
sbb
mov
xchg
mov
or
push
xchg
leave
jbe
and
jg
push
pop
and
fldl2t
fdivs
ds
xor
call
sub
idivl
push
inc
jle
test
clc
add
movsb
jp
push
push
or
fs
faddl
pop
add
frstor
popa
push
jmp
push
lods
sub
push
sbb
cli
clc
push
fmull
jae
or
inc
jp
cmp
test
jne
int3
call
adcl
sub
inc
repz
add
and
js
mov
push
sbbb
or
xor
jecxz
sbb
push
push
add
adc
sbb
mov
add
mov
enter
add
dec
inc
arpl
adc
sub
mov
in
mov
rolb
jmp
cmp
xchg
std
lods
std
rorl
cmp
jg
scas
pop
mov
xor
push
clc
lcall
sar
xchg
ja
add
pop
lahf
dec
mull
jne
dec
sbb
pop
sar
lock
push
lea
testb
orb
fnstcw
cmp
cli
adc
mov
mov
or
mov
rolb
lret
inc
mov
inc
inc
pop
push
insb
sahf
aad
in
push
or
add
and
xchg
push
sbb
ret
mov
movsb
pop
mov
rorl
mov
or
int3
sarb
mov
jb
cwtl
and
iret
push
inc
pop
enter
dec
push
pop
xchg
dec
scas
or
add
adcl
xchg
jp
and
iret
in
mov
cld
cmp
hlt
es
or
add
sbb
jp
xor
int
es
lret
gs
mov
and
push
sub
cli
cmp
lahf
call
dec
cmp
inc
sub
adc
aad
pop
cs
in
mov
mov
jne
inc
jne
xchg
lret
testl
xor
inc
add
rclb
fidivrs
push
int
lds
mov
cmp
cmpsl
lods
cmp
lds
iret
dec
mov
push
leave
cmp
test
fisttpll
sbb
mov
mov
sub
push
xchg
in
push
lret
dec
sahf
iret
sbb
add
ret
pop
cmpsb
adc
push
or
js
mov
cmp
cmc
loop
mov
push
inc
cmp
xchg
gs
in
outsl
sub
mov
mov
scas
testl
rorb
mov
xor
xchg
xchg
mov
int3
push
adc
test
mov
push
lock
or
imul
fidivl
jns
daa
mov
sahf
mov
mov
incb
dec
jns
cmpl
hlt
std
add
leave
sub
rcrb
inc
pop
enter
mov
and
imul
mov
mov
pop
adc
inc
lods
divl
test
pop
insb
lds
inc
or
lret
in
mov
xchg
sti
jecxz
xor
xchg
loopne
sbb
jns
lret
lock
aaa
addr16
push
cmpsb
pop
xlat
das
lock
fdivr
scas
or
xor
cmp
jecxz
add
mov
add
cmc
test
fadds
jbe
push
add
jno
adc
int3
gs
jl
jmp
mov
call
bound
fadd
push
jb
sbb
mov
std
push
sub
push
push
lret
loop
jge
mulb
fmull
imul
fidivs
sub
lea
fnstsw
dec
xchg
out
imul
mov
xor
mov
push
aam
xor
daa
jle
roll
imul
std
mov
mov
scas
xor
mov
pop
repz
stos
out
imul
inc
xor
ljmp
icebp
ret
xor
dec
xor
roll
cmp
xor
mov
mov
mov
and
lods
xor
sub
enter
call
std
pop
popa
lods
arpl
cmp
mov
jecxz
popf
loopne
arpl
std
inc
repz
daa
push
mov
popa
out
lret
mov
push
fdivrp
or
fstpl
ds
cs
stos
mov
sub
test
test
jmp
popa
dec
jmp
dec
pop
movsb
mov
cmc
ror
dec
gs
sar
lock
mov
adc
xor
push
sub
pop
mov
sbb
jmp
adc
and
fstpt
popf
loopne
sub
shlb
enter
mov
repnz
aam
cmp
push
mov
pushf
inc
sub
js
fbstp
add
insl
mov
mov
adc
mov
fldl
inc
xor
sub
sub
sbb
mov
jp
jne
fdivr
push
loop
sbb
push
dec
pop
jno
and
xor
je
sbb
push
popa
xchg
std
std
std
int3
add
xchg
adc
mov
das
mov
adc
adcb
lcall
inc
ljmp
mov
xchg
xor
sub
lock
mov
mov
roll
mov
sub
lods
es
aas
xor
xchg
and
leave
mov
and
leave
and
test
and
pop
mov
nop
pop
and
cmp
and
dec
jb
push
loopne
aad
xchg
jno
push
pop
push
jmp
push
adc
sub
cmp
ja
add
and
stc
dec
push
or
push
icebp
or
dec
jo
lock
pop
repz
ds
ds
sub
xchg
lock
inc
ret
dec
dec
push
fisubrl
push
lock
repz
push
lea
repz
sub
out
test
leave
nop
inc
sahf
das
scas
movsl
call
cmp
sub
push
jb
sbb
int3
leave
bound
jns
int3
leave
xlat
aad
scas
or
cmp
xchg
inc
int3
leave
int3
leave
aam
mov
cmp
and
out
xor
enter
push
add
push
cltd
mov
daa
xchg
ljmp
xchg
pop
xchg
xchg
test
pushf
inc
jb
jns
enter
mov
lods
test
fs
lret
aad
lcall
inc
movsl
dec
dec
enter
sbb
ds
pop
xchg
lret
std
lret
ds
loope
and
daa
mov
insl
and
cmp
test
xchg
rep
es
lods
cmpsl
add
mov
mov
adc
leave
gs
pop
dec
pop
push
enter
aaa
and
or
nop
lret
push
divl
push
pushf
and
and
clc
mov
loopne
test
dec
stc
push
in
lods
xchg
aaa
ds
mov
mov
dec
sub
dec
xchg
xchg
inc
pop
inc
xor
nop
dec
es
movsb
inc
xchg
nop
bound
dec
inc
or
adc
test
scas
nop
incl
dec
adc
pop
add
xor
nop
nop
pushf
enter
lods
lods
test
or
rol
rolb
push
pop
mov
das
dec
pop
je
jmp
mov
in
push
arpl
aad
add
roll
pop
mov
sahf
cmpsl
stc
add
or
xor
imul
shrl
xchg
and
ret
cmp
sub
out
and
nop
sbb
jg
adc
and
pop
test
pusha
jo
inc
sbbb
dec
jp
iret
sub
xchg
pop
lods
adc
subb
xor
sub
gs
push
je
and
ljmp
sbb
add
int
js
and
inc
add
lret
cmp
or
jbe
dec
dec
repz
jnp
mov
neg
pop
mov
sub
xchg
lock
push
lods
into
inc
dec
and
inc
xchg
test
push
lcall
xchg
pop
mov
popa
pushf
adc
fwait
int
repz
xchg
push
dec
adc
push
and
out
cmpsl
push
mov
outsl
inc
or
push
ds
push
jbe
jle
sbb
or
push
test
xor
jo
mov
hlt
inc
or
inc
clc
add
pusha
loope
enter
inc
ss
or
pop
dec
adc
inc
pusha
jae
test
and
call
mov
sub
cmc
into
inc
lret
fnstenv
ja
aam
sub
mov
sub
mov
add
sub
push
pop
rcr
adc
in
lock
rep
jge
les
ss
mov
rcll
in
in
cmp
cmp
or
sbb
push
push
ret
jmp
and
add
pop
add
test
vcvtps2pd
imul
mov
loopne
push
movb
adc
pop
sbb
cltd
inc
push
or
push
pop
xchg
rol
pop
aam
loop,pn
add
divl
xchg
and
sub
cli
xor
mov
lea
xor
add
mov
gs
mov
shlb
adc
push
xor
push
mov
mov
add
jnp
fsubrs
dec
repz
sbb
stos
adc
iretw
out
sarb
into
jg,pt
mov
insl
inc
xchg
xchg
or
mov
lahf
cld
push
mov
je
incb
outsl
mov
test
je
idivl
sar
xor
loop
ret
aaa
mov
push
push
mov
sbb
or
add
cltd
ljmp
and
push
and
add
les
mov
push
mov
add
jmp
bound
adc
and
fdivs
sub
insl
mov
pop
inc
cs
add
sbb
sub
das
jge
sub
push
mov
cmpsb
repnz
clc
push
jo
mov
mov
mov
inc
push
in
inc
dec
pop
cmp
pushl
rorl
cmpsb
push
inc
in
inc
loope
or
xor
mov
or
xchg
xchg
filds
cmp
jnp
orl
hlt
daa
clc
inc
push
xor
scas
or
sbb
jae
testl
es
ss
repz
add
jno
les
jmp
jne
jo
adc
nop
add
mov
lds
rorb
mov
adc
or
sub
adc
push
daa
xchg
mull
psllq
sub
push
jnp
cmp
jmp
rcr
or
jne
div
pop
dec
adc
mov
mul
pop
jb
cmp
or
cmp
or
fwait
xchg
mov
mov
or
and
neg
fcmovu
fmul
and
fxch
mov
inc
in
sub
add
movntps
dec
je
pop
inc
and
pop
jmp
pop
clc
mov
inc
inc
repz
movb
inc
clc
movb
dec
adc
and
dec
lds
push
lahf
lret
lods
lds
mov
adc
cmp
and
sub
cmp
rcrl
or
clc
out
sub
nop
xor
pop
pusha
loopne
adc
xchg
mov
and
dec
leave
mov
jne
mov
pop
mov
add
sbb
sahf
inc
sbb
adc
push
dec
inc
inc
mov
xor
cmpsb
xchg
test
stos
sbb
xchg
mov
fwait
inc
pop
dec
sbb
sbb
mov
inc
cmp
add
les
lea
push
jno
arpl
jb
imul
aas
pop
add
push
lret
pop
aad
loop
sub
test
ret
popa
add
popf
cmc
jne
cmp
mov
jl
incb
xchg
mov
adc
adc
xor
sbb
xchg
js
addb
inc
pushf
sbb
cmp
push
adc
cmpsb
sbb
shll
sub
xchg
jl
mov
mov
add
outsl
iret
mov
cld
sbb
subb
mov
fld
leave
mov
pop
push
add
test
shlb
inc
sbb
je
add
push
and
outsl
lret
jo
xor
and
flds
sar
add
rorb
add
pop
dec
in
movsb
sbb
adc
mov
add
push
push
or
scas
push
xchg
test
dec
js
push
jge
in
and
xchg
aas
sar
xchg
mov
add
mov
xchg
add
adc
pop
cmpsb
xor
xchg
ret
dec
xchg
cmpsl
pusha
or
and
push
stos
lods
cmp
push
mov
cltd
mov
mov
mov
mov
sub
jle
pop
loopne
repz
gs
aam
mov
adc
add
xchg
add
pop
sub
or
mov
cmpsl
push
addb
daa
adc
test
pcmpeqb
mov
fdivrp
iret
lea
sub
or
mov
ret
in
jecxz
push
adc
pop
add
loopne
xor
ret
icebp
call
mov
xor
jo
and
mov
and
add
jne
jno
cmp
int3
pop
inc
lock
mov
out
cmp
je
roll
mov
adc
faddl
aam
xchg
pop
addr16
and
and
outsb
or
cld
pop
inc
clc
and
leave
and
test
test
das
add
push
std
sbb
sbb
fs
cltd
dec
mov
inc
jno
push
push
add
or
setl
jmp
icebp
sub
lret
dec
dec
dec
pop
hlt
xchg
add
mov
or
xchg
mov
jbe
cmp
call
inc
fistps
mov
fmull
outsl
or
add
cmpl
ret
les
sub
pop
jne
adc
mov
push
bound
inc
xorb
push
push
dec
pop
cmpb
sbb
jmp
dec
or
or
hlt
sub
jb
inc
sub
or
ds
icebp
pushf
lahf
push
push
mov
sbb
cmp
jmp
mov
sbb
jecxz
cs
push
jo
push
cs
daa
push
xor
lock
push
sub
xchg
push
adc
mov
pop
adc
pusha
dec
xchg
inc
adc
cmp
inc
mov
jbe
adc
arpl
mov
mov
movsb
or
lret
inc
mov
fcmovnu
test
out
add
and
inc
gs
mov
xor
add
inc
pop
inc
sbb
scas
xor
push
dec
sub
add
xchg
insb
or
add
dec
pusha
out
add
sbb
in
js
shrb
nop
test
mov
lock
sub
mov
and
jl
shlb
xor
orl
loop
imul
fs
sti
jns
sbbl
pop
orl
inc
test
cmp
push
mov
push
cmp
lret
cmp
ljmp
inc
lock
lods
shr
leave
push
sbb
mov
pusha
sbb
jmp
dec
mov
lods
cltd
pop
push
xor
movsb
lock
or
push
cmp
icebp
imul
pusha
jo
mov
ret
cmp
mov
pop
add
cmp
or
into
aad
test
popf
shrb
jne
cli
test
sub
jg
out
addr16
mov
push
or
fdivrs
jne
fnstcw
sbb
pop
jne
faddp
mov
inc
mov
add
fimuls
movb
pop
xchg
shrb
sub
sbb
out
inc
aam
jmp
mov
cmpsl
pop
jmp
or
xor
rcl
pop
test
fidivrl
outsb
ret
dec
cmp
in
inc
xchg
add
in
adc
pop
xorb
inc
push
or
je
idiv
arpl
aam
inc
pusha
jne,pn
sbb
call
movl
fwait
outsb
ja
lods
sub
adc
cmp
jge
mov
mov
rclb
nop
cmp
call
fimuls
push
insb
sbb
push
push
dec
jmp
test
loope
insb
rorb
pop
in
cmp
aaa
xor
adcb
mov
imul
sbb
add
sub
lret
adc
das
orb
sub
data16
mov
sub
add
mov
cli
add
jecxz
jmp
push
mov
cmp
bound
in
cmp
and
cmp
jbe
dec
hlt
aam
and
rol
mov
cmp
test
aaa
dec
jae
sub
xchg
xchg
xchg
shll
ja
lcall
xchg
movsl
test
or
adc
jno
or
mov
rcll
push
push
push
pop
cmc
sbb
add
sub
sbb
mov
or
and
or
push
jmp
lds
mov
jmp
ja
lret
mov
or
xor
push
inc
and
mov
popa
sub
repz
imul
in
daa
adc
sub
mov
gs
divb
add
jp
and
sbbb
xor
out
mov
movl
repnz
mov
add
adc
fsubrs
mov
jo
out
mov
inc
and
or
cli
jmp
incl
dec
or
xchg
pop
mov
push
pop
inc
mov
adc
sub
mov
or
inc
mov
daa
and
lret
cmpb
test
les
movb
xor
jge
adc
loop
ja
cmp
das
loope
scas
ss
jmp
xor
push
add
pop
inc
inc
adc
add
sbb
inc
inc
pop
je
ficompl
sahf
jb
je
dec
test
fwait
and
add
cmp
or
std
inc
dec
shr
outsb
adc
add
add
pop
cld
pop
push
pusha
ret
inc
or
test
fsts
clc
cmp
cmp
leave
inc
adc
addb
fstpl
xor
inc
jmp
lcall
add
adc
mov
ljmp
cwtl
or
addl
xchg
push
insb
xor
lea
xchg
imul
sbb
jmp
lock
sbb
or
add
loopne
inc
stos
sbb
hlt
aas
jae
mov
mov
add
pop
pop
lods
push
ss
insl
lds
dec
stos
addb
sub
orl
or
push
add
mov
movsl
cmp
push
pop
loope
mov
mov
cs
and
and
inc
or
or
sbb
jo
and
push
and
pop
jb
mov
fdivl
pop
mov
cmp
dec
inc
inc
or
jne
repnz
cmp
push
sar
add
nop
dec
xchg
mov
shrl
movsl
test
cmp
mov
jb
cld
xchg
ljmp
inc
pop
mov
jmp
sbb
dec
test
add
inc
es
jp
sbb
or
sbb
sti
or
xor
lock
or
push
ss
sub
mov
mov
xchg
pop
adc
sbb
and
dec
icebp
and
add
inc
fsubrs
dec
lea
fbstp
add
or
or
or
push
xor
or
cmp
sbb
fsubr
inc
mov
in
js
jo
gs
dec
xchg
enter
pop
mov
inc
mov
add
hlt
stos
out
mov
add
pop
sbb
push
movsb
loopne
aas
xor
sbb
and
repnz
dec
andb
add
shll
adc
ret
imul
cmp
push
sahf
sbb
cmp
loope
jle
pop
mov
push
push
mov
dec
stos
adc
add
push
push
call
cld
mov
add
insl
sbb
shl
add
mov
add
inc
add
xchg
inc
push
int
mov
push
imul
or
inc
adcl
shlb
push
xchg
xor
push
mov
or
cmpb
jb
xchg
andl
testb
push
addl
inc
jns
and
aas
push
aaa
xor
ds
push
stos
mov
add
testb
adc
sub
xor
popf
mov
movl
test
mov
jmp
test
cmpsl
shrl
test
sub
lret
aaa
xor
dec
xor
out
mov
mov
not
mov
push
out
push
xlat
cs
aas
fwait
adc
xor
sahf
cmpsb
cmp
push
xchg
movsb
loope
lock
or
imul
sbb
std
ret
push
mov
test
adc
loopne
or
push
jo
adc
not
push
rorl
sbb
mov
sub
aaa
cmp
lea
mov
and
jb
rcrl
push
and
sub
or
cmpl
dec
roll
aaa
das
sbb
lock
mov
rorl
add
jle
mov
fnsave
mov
popa
push
mov
rorb
clc
jae
test
adc
scas
or
mov
mov
add
add
ret
pushl
fmull
mov
push
add
push
push
jae
jmp
stc
push
lods
loopne
jne
ja
mov
dec
add
mov
je
lret
repz
jae
inc
adc
jl
mov
leave
inc
pop
test
cmpsl
repnz
mov
in
nop
inc
xchg
sbb
add
aam
repz
cmp
mov
sbb
add
loop
xchg
movb
hlt
mov
push
jne
add
data16
mov
ficomps
or
fsubl
add
js
in
nop
mov
lods
jmp
cwtl
pop
mov
jbe
push
adc
add
jb
mov
loopne
pop
inc
push
mov
imul
jmp
dec
fisttpl
xor
call
add
call
mov
int3
mov
add
cmp
push
inc
jb
cmp
andl
ds
inc
push
loopne
and
cmp
add
or
xor
jbe
movsb
movsb
or
icebp
lret
push
pop
mov
into
cmp
jg
mov
or
dec
jmp
jo
sbb
adc
lods
xor
dec
out
xor
dec
mov
mov
subl
pushf
sbb
mov
xor
add
sub
xor
sbb
sub
dec
icebp
fsubr
push
and
push
and
jecxz,pt
push
mov
xlat
fnstenv
pop
call
or
sub
adc
ljmp
fdivs
jne
fbld
or
imul
in
dec
sbb
xchg
push
fdivl
gs
imul
xor
in
push
mov
pop
mov
push
push
mov
aaa
leave
enter
adc
ret
loope
jl
mov
push
cmp
and
imul
outsb
fs
jmp
adc
inc
jmp
scas
jbe
call
jbe
jne
imul
add
add
sbb
jge
aas
sbb
xchg
and
test
in
rcr
data16
fsubs
popa
into
fadds
jb
pop
adc
mov
and
mov
fcmovbe
pop
dec
movsl
adc
pop
imul
idivb
xor
push
out
mulb
and
add
or
push
mov
test
enter
sbb
enter
mov
shll
cmp
or
movl
xchg
pop
or
fldenv
or
pop
sub
bnd
mov
lea
pop
sub
pop
adc
push
cmp
lock
add
je
testb
je
mov
adc
jno
sbb
in
sub
or
out
sub
jg
jo
dec
dec
inc
loopne
cmpsb
cmp
jl
sub
pop
and
and
jle
sbb
cmp
jbe
mov
jg
sub
dec
lahf
jg
add
push
or
sbbb
pop
sub
cmp
jl
and
dec
mov
je
enter
loopne
add
mov
call
pushl
cli
int3
xchg
mov
in
mov
in
and
xchg
call
out
int
add
mov
push
in
push
xchg
ret
sub
mov
cmp
sti
xor
and
and
inc
sbb
pop
mov
jmp
mov
leave
pusha
xchg
sbb
dec
subl
outsl
dec
dec
dec
and
push
adc
add
sbb
add
xor
shlb
adcb
adcl
cmp
nop
lret
push
sbb
xchg
gs
lock
add
add
push
jl
pop
add
hlt
push
and
xchg
push
dec
loopne
lret
mov
cmp
or
jg
aas
add
and
aaa
imul
sbb
pushf
sbb
add
test
add
sbb
pop
bound
push
push
adc
clc
nop
movb
out
pop
dec
or
mov
jg
xchg
sub
jne,pt
add
pop
jl
mov
sub
xor
lods
gs
xchg
mov
fstl
test
jno
adc
fneni(8087
cs
dec
test
mov
xchg
mov
sbb
pop
inc
loop
push
gs
add
xchg
jbe
in
ret
sahf
addr16
mov
mov
mov
aaa
mov
loope
fdivs
aaa
imul
push
clc
mov
test
aas
adc
push
jp
outsl
mov
ret
out
call
lret
mov
cmp
dec
adc
mov
ja
inc
or
sbb
mov
push
add
push
pop
fidivrl
pushf
jg
push
pop
stos
xlat
fs
shlb
or
pop
cwtl
popa
cmp
adc
pop
pop
addr16
orl
cmpsl
and
cs
adc
test
pop
mov
lods
and
rcl
cmpl
flds
jle
mov
pop
int
popf
lret
cmpl
push
scas
out
sarb
or
ret
sbb
lock
ror
or
mov
mov
in
mov
and
push
or
dec
or
andb
lock
les
inc
stos
cld
or
cld
sbb
dec
adc
xchg
inc
sahf
ret
loop
sbb
cmc
repnz
je
inc
shll
loope
add
fcoms
fadds
insb
xrelease
xor
or
mov
popf
and
nop
jle
mov
adc
push
sub
and
cli
dec
test
pushf
cmp
or
je
or
ja
xchg
je
mov
sbb
xor
mov
mov
sbb
pop
bound
shl
add
push
shrb
mov
adc
mov
sbb
inc
add
pusha
sbb
mov
mov
call
xchg
mov
adc
pushf
cmp
repz
jne
mov
mov
jno
inc
mov
push
or
sbb
arpl
loopne
cmp
cmpsl
cmpsb
push
fadd
mov
hlt
mov
sub
fnsave
xchg
pushl
adc
icebp
enter
cli
inc
cs
repz
andb
mov
outsl
sub
rorb
xor
jns
popa
clc
push
xor
test
mov
out
jb
orb
js
xchg
lea
data16
sub
push
add
jmp
rorb
js
test
out
push
ss
sub
fcomps
push
mov
lds
inc
cmp
jae
push
add
mov
cmp
jl
mov
inc
add
adc
pop
jb
pop
jns
jle
pop
lock
rcrb
clc
push
mov
mov
cmc
sbb
ljmp
jb
mov
dec
sbb
movsb
sub
addb
inc
add
xorb
adc
dec
dec
inc
dec
or
xor
enter
icebp
cmp
int
xchg
pop
scas
mov
sbb
sub
cltd
add
ret
lret
pop
or
dec
incl
sbb
adc
or
mov
pop
jo
mov
add
movsl
and
fidivl
mov
xchg
xlat
jns
jne
mov
and
in
shrl
sbb
mov
arpl
pop
and
adc
add
lock
cmp
sarb
xchg
pop
jle
xchg
and
mov
xor
inc
sub
jecxz
fildll
push
or
punpckhbw
xchg
add
repnz
mov
cmp
and
push
dec
cmpsb
or
arpl
add
clc
dec
scas
sub
movl
je
sbb
mov
add
dec
js
or
lods
adc
repnz
adc
in
pusha
jbe
add
loopne
sbb
dec
in
fnstenv
dec
jg
adc
orl
call
lret
pop
hlt
xor
aad
fdivl
cmp
or
push
push
sbb
rolb
rcrl
or
sbb
pop
and
negb
std
jb
sbb
pop
test
addb
and
imull
repnz
inc
ds
mov
out
adc
lock
enter
inc
jp
add
clc
push
jne
jmp
mov
ljmp
xor
push
dec
xor
mov
ss
mov
mov
loopne
je
adc
xlat
je
cmp
adc
adc
and
cmp
jb
testb
xlat
add
mov
sbb
jo
adc
pop
add
divl
jmp
inc
movb
and
xchg
clc
mov
divb
cmp
pop
rorb
or
or
xor
popf
shrb
lret
push
call
and
imul
adc
mov
cmp
pusha
jecxz
push
out
mov
inc
mov
mov
cld
pop
pop
test
ds
rcrb
fucomp
inc
inc
mov
mov
xchg
push
inc
pop
pop
dec
adc
inc
cltd
pusha
mov
imul
stos
movsb
in
cli
inc
imul
pop
pop
mull
mov
jecxz
adc
sub
sbb
fisttpl
or
cmp
or
mov
lea
lea
or
adc
out
int3
mov
mov
sbb
jle
popl
cmpsl
and
in
cs
push
cld
push
dec
je
inc
xlat
xchg
inc
pushl
daa
lea
sbb
dec
sbb
mov
jle
into
sti
sbb
mov
mov
push
inc
dec
and
or
sbb
cli
add
pop
loop
mov
mov
shlb
jne
xlat
mov
rcrl
ljmp
jbe
cmp
xor
loope
enter
shrb
inc
pop
sarb
mov
xor
adc
or
sbb
push
in
test
and
push
or
fldt
in
sbb
sbb
xchg
xchg
and
sub
test
cmp
xchg
and
inc
and
inc
cmovs
daa
daa
daa
dec
push
push
pop
leave
leave
leave
add
leave
leave
leave
leave
push
arpl
leave
js
mov
cltd
movsb
cmp
mov
xchg
cwtl
fs
dec
es
mov
cltd
test
sub
test
cmpsl
sub
add
mov
or
and
sub
hlt
imul
jl
push
mov
or
movsb
dec
dec
clc
adc
cld
adc
int
insb
add
dec
xor
and
or
dec
enter
adc
ror
mov
pop
sbb
adc
add
dec
dec
inc
ret
add
cmpsb
cmp
shlb
xorl
imul
nop
inc
adc
or
fistpl
in
mov
and
sub
jp
clc
sti
cli
xor
and
fcoml
mov
dec
dec
fnstenv
and
dec
sbb
push
push
mov
push
syscall
loopne
jecxz
dec
int3
pop
inc
dec
pop
dec
aam
or
adc
repnz
add
out
ret
or
sbb
pushf
insb
insl
fiaddl
jne
lret
xchg
xor
dec
inc
movsb
jecxz
inc
in
call
push
jle
or
mov
cmp
pop
xor
or
adc
push
push
je
cmp
push
ja
rol
inc
jl
testb
mov
mov
mov
add
fmuls
in
or
popf
pop
mov
int3
sbb
dec
mov
cwtl
xorb
pusha
into
movsb
out
negb
add
fmuls
dec
pop
je
push
pushf
idivb
sbb
lea
inc
push
dec
mov
inc
xchg
and
loopne
inc
adc
or
adc
add
adc
gs
aaa
push
test
or
xchg
cmp
push
xor
xchg
pop
mov
add
add
add
adcl
push
xor
push
test
fwait
mov
dec
int3
pop
push
movsl
sbbl
push
or
adc
testb
dec
xor
inc
xor
int
push
test
mov
pusha
loopne
dec
xor
xor
adc
mov
sub
loopne
ret
iret
int
add
stos
dec
cmp
addb
fcoms
add
inc
ja
call
les
or
xlat
loopne
pop
cmp
pop
mov
adc
fistps
ret
jl
cmp
sbb
outsl
jmp
ss
add
sbb
dec
and
std
xor
mov
cmpxchg
push
clc
add
loope
subl
push
rcl
cmp
xchg
mov
and
jmp
ret
mov
mov
push
fsubrp
sbb
shrb
dec
sbb
xchg
inc
mov
add
gs
inc
sahf
and
add
in
add
bound
xor
or
cmp
xor
mov
std
or
inc
test
ja
xor
push
push
test
ret
xor
adc
and
out
divb
inc
lcall
sti
mov
pop
or
add
dec
or
and
inc
insb
mov
push
jp
call
and
insb
or
or
inc
ret
push
cmp
popf
add
mov
inc
imul
inc
insb
and
cmp
push
dec
ljmp
stos
cs
inc
pushl
mov
xor
out
je
pusha
dec
sub
xchg
lock
cmp
pop
addl
pop
outsb
xchg
push
xor
ss
mov
adc
inc
adc
mov
sbb
mov
pop
cmp
in
lods
mov
lock
mov
mov
mov
lock
jmp
mov
in
push
add
cmp
ja
sub
add
cmp
fsubs
mov
mov
xchg
adc
mov
scas
inc
decl
jmp
push
dec
inc
pushf
rolb
push
es
lea
mov
pop
pusha
xor
xchg
dec
pop
pusha
fcoms
popa
inc
fmull
push
jl
dec
sub
lahf
xor
jns
xor
sarl
cmp
sarb
adc
add
add
xorl
mov
add
adc
add
ljmp
sub
mov
jne
movzwl
or
cmp
cmp
rcrl
out
inc
call
push
push
jmp
inc
lds
dec
pusha
push
iret
test
stos
cmp
mov
fcomps
and
sbb
paddd
stc
std
sub
sub
sysenter
sbb
inc
inc
push
orb
sbbb
cs
sub
adc
sbb
mov
jl
jmp
xchg
mov
andl
add
aaa
les
xlat
mov
xchg
cmp
jne
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fcoms
fsubrs
sub
and
icebp
dec
sbb
inc
add
mov
cmp
jmp
sub
shll
xor
and
cmp
dec
movsl
dec
add
cmp
rcrb
xchg
rclb
inc
imul
push
or
inc
inc
sbb
cmpsl
shlb
xchg
push
and
nop
or
aas
mov
out
inc
mov
imul
pop
xchg
cmp
js
jnp
add
push
xchg
and
xor
jae
addb
test
add
sahf
push
mov
sub
or
mov
shl
fs
shrb
cmp
std
jno
cmp
xorb
lret
cmc
mov
sub
test
addb
jo
lret
jmp
push
lock
repz
movsb
bts
fistpl
push
xorb
cmp
sbb
cltd
sub
mov
xchg
pop
mov
cmp
loopne
ljmp
test
xor
mov
pop
push
jnp
xor
fucomip
inc
in
fprem
cmpb
mov
jg
or
or
cmp
aas
icebp
pop
xor
pop
pop
mov
popa
pusha
ja
flds
orb
and
or
je
js
cmp
push
ljmp
sub
loope
and
mov
incl
or
clc
mov
scas
inc
clc
or
in
cmp
sbb
sbb
into
inc
ret
dec
movsb
test
add
jmp
popa
add
jp
xor
aaa
and
stos
lahf
or
sbb
pop
push
add
dec
adc
inc
add
inc
dec
jg
xlat
xor
push
pop
and
push
sub
jno
jge
mov
stos
lock
in
aas
sbb
push
and
mov
adc
pop
adc
scas
repnz
add
shlw
ret
paddsb
iret
jnp
push
pop
inc
inc
push
mov
out
adc
cli
sbb
inc
mov
lods
add
cmp
or
add
pop
aam
mov
cmp
xorps
pushl
shrl
push
sub
cmp
into
sub
mov
add
or
orl
pusha
mov
idivl
jge
jns
ds
xchg
mov
out
push
xchg
cmp
gs
loopne
icebp
mov
pop
cmp
lods
jg
xchg
int3
out
insl
rclb
fmull
notb
call
addr16
push
inc
mov
pop
inc
rorb
sub
loop
cs
imul
adc
test
pop
sub
or
mov
and
pop
ja
inc
adcb
push
pop
lods
sub
shrd
pop
mov
or
mov
and
cmp
movsl
jns
xor
mov
add
clc
je
xor
add
sbb
lcall
adc
xor
insl
stos
out
js
mov
mov
ret
sub
cld
rorb
imul
push
jmp
je
inc
cmp
shlb
testb
test
add
js
pop
sbb
add
xor
into
push
popa
add
mov
and
add
add
mov
inc
push
cmp
cmpb
je
cmp
jmp
dec
nop
test
lret
test
lret
jae
dec
add
cmpsl
movsb
mov
sub
xor
movsb
arpl
jecxz
int3
mov
dec
mov
jle
mov
imul
mov
add
cmp
sub
jb
cmp
out
sbbb
adc
push
push
sbb
pop
adc
sbb
rclb
sbb
loope
call
cmp
mov
inc
shrl
loope
lea
cmpl
or
jno
add
and
psubw
sub
add
inc
cwtl
mov
das
mov
dec
enter
inc
dec
addr16
mov
sbb
sub
mov
testl
in
aad
shrl
pop
clc
mov
mov
mov
xor
and
push
mov
or
andb
imulb
and
in
dec
mov
inc
sbb
mov
test
sub
push
dec
data16
cmp
dec
cmp
dec
jnp
aas
repnz
das
adc
dec
outsl
or
inc
lret
inc
cli
jb
rorl
jl
mov
jle
loopne
mov
adc
sub
dec
and
mov
pop
adc
inc
xchg
cmp
movsl
pop
mov
push
loopne
jne
or
rolb
inc
les
cli
adc
jmp
pop
in
adc
dec
popa
hlt
or
fisttpl
mov
inc
outsl
and
in
xor
jne
and
dec
or
stc
mov
dec
inc
out
icebp
or
ror
xorb
mov
mov
push
push
call
sub
add
add
and
add
mov
push
mov
rolb
test
pushf
pop
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
or
pop
inc
mov
data16
pop
testl
add
pop
movsb
loope
xchg
add
dec
inc
dec
push
push
or
add
fstpt
dec
mov
jns
push
or
or
shl
jle
insb
push
or
bnd
pop
lock
cs
repz
xchg
test
and
sahf
popa
xchg
xchg
add
or
adcl
nop
std
in
divb
shl
not
xor
loope
xor
and
pop
mov
add
cltd
in
shr
and
and
add
sahf
lock
xchg
mov
test
adc
cmpsb
pop
jns
test
add
test
adc
mov
push
lret
sbb
or
mov
sub
inc
jmp
pop
clc
incb
jmp
sbb
std
or
jmp
inc
and
mov
and
mov
jecxz
jge
xchg
imul
jmp
jg
mov
adc
or
push
push
mov
cmp
inc
pop
je
jge
je
sbb
loope
sub
mov
flds
and
mov
loope
pop
sub
cmpsb
adc
mov
adc
cmp
push
fnstsw
pusha
pusha
cmpsl
push
cmpsb
sbb
sbb
testb
jns
mov
adc
sti
jg
sahf
lret
add
test
fisttps
adc
cwtl
and
push
ljmp
scas
orb
or
sub
push
mov
sti
xor
push
popa
mov
out
and
sbbb
pop
sbb
xorb
sbb
jmp
mov
push
and
inc
add
adc
fwait
dec
movb
push
fld
mov
or
pop
push
subb
adc
shlb
cmp
out
bound
inc
cwtl
mov
test
push
mov
or
sub
ficomps
addl
add
cmp
lret
sti
lret
jae
and
inc
xchg
loope
rcl
pop
xchg
push
dec
add
fdecstp
es
js
fcompl
inc
add
jbe
std
les
sub
sub
jmp
sub
daa
pop
jp
push
or
outsb
dec
mov
inc
adc
dec
repz
int3
adc
pop
not
div
add
pop
mov
ss
jnp
mov
clc
mov
bound
fstpl
xor
clc
loop
add
cmp
fnsave
ljmp
push
mov
inc
mov
lods
shrl
div
icebp
das
pop
cmp
enter
add
fs
movsl
mov
push
jle
enter
shrl
insl
inc
cld
lcall
sbb
cmpl
shl
jle
jp
js
addr16
push
sahf
jmp
pop
movsb
add
pop
and
inc
std
adc
and
pusha
sub
push
and
add
sbbb
mov
add
sbb
js
int
sbb
pop
inc
js
xchg
test
push
jmp
or
pop
pop
pop
inc
out
xor
gs
mov
xchg
mov
cmp
mov
movzbl
add
fwait
test
xchg
mov
test
cmp
je
je
jl
adcb
or
adc
scas
sbbb
push
rorl
push
pusha
add
push
cmp
cmp
mov
xor
pop
mov
sbb
idivb
add
mov
gs
dec
inc
and
inc
cmp
sbbl
xor
inc
and
lea
dec
sbb
ss
scas
adc
add
xor
mov
push
movsl
lods
in
add
sub
mov
popa
add
or
and
jnp
dec
lea
push
or
mov
shl
mov
and
sub
mov
aas
sbb
mov
pop
sahf
popa
xchg
sbb
jae
out
pusha
fidivs
fnstsw
adc
adc
js
push
jns
fadds
jg
xchg
push
sbb
lret
xchg
lret
sbb
int3
pop
cld
or
sub
sub
icebp
cli
inc
adc
add
cmp
and
sahf
push
jecxz
add
aam
lock
or
xchg
pop
gs
ljmp
xchg
mov
and
ljmp
adc
xor
out
push
pop
push
mov
cld
fadds
into
mov
es
pop
cwtl
sbb
push
push
xor
test
push
push
stc
jne
dec
pop
or
mov
aad
icebp
sbb
mov
aam
gs
or
cld
dec
pop
xchg
dec
inc
add
or
push
adc
mov
inc
mov
je
jo
fdivs
xor
push
add
sbb
jl
sbb
sub
ror
fdivl
ljmp
loopne
popa
in
aad
push
fsave
cmp
sub
rcl
mov
inc
flds
adc
xchg
xor
or
insl
or
clc
adc
inc
adc
fldt
pop
mov
enter
fwait
dec
mov
dec
fwait
sbb
js
and
jle
call
or
jb
mov
sbbb
dec
mov
cmc
adc
je
mov
loopne
or
ldmxcsr
jle
ja
xchg
and
inc
fsubrs
loope
test
dec
adc
mov
icebp
sbb
ret
repz
out
add
push
mov
cmp
std
add
mov
sbb
jmp
mov
push
test
andb
call
add
lods
ret
shlb
push
pusha
pop
and
dec
js
insl
push
mov
inc
lds
push
outsb
nop
inc
das
ja
mov
jnp
lahf
stc
mov
add
xor
mov
cmpsb
cmp
adc
rolb
imul
nop
cwtl
jp
adc
movsl
filds
mov
xchg
mov
cmpsl
xor
psubq
xchg
ljmp
dec
outsl
adc
jnp
cmpb
or
xchg
add
loope
pop
mulb
add
insl
leave
push
jbe
add
adc
pop
xor
sub
dec
cli
lahf
xor
popf
jle
mov
dec
cmpw
push
mov
adc
mov
add
dec
cmp
cmpsl
movsb
and
add
and
fchs
dec
pop
or
push
dec
push
or
loopne
outsl
add
out
sub
pop
sbb
adc
mov
loopne
add
push
daa
mov
pop
in
mov
test
jne
or
jl
mov
addb
stos
pop
pop
sub
roll
bound
aam
xor
cmp
cltd
and
add
xor
roll
pop
dec
jns
dec
xchg
clc
imul
push
subb
inc
shl
movsl
xchg
mov
mov
pop
pop
rcr
incb
not
test
add
cmovl
repz
push
cltd
insb
pop
and
jge
mov
scas
mov
inc
insb
outsl
fwait
rol
sub
dec
jbe
dec
mov
add
sub
jae
test
jb
out
mov
sub
loop
sar
adc
jb
incb
jae
fldt
push
mov
call
jns
mov
jo
and
imul
add
js
push
add
hlt
ljmp
sti
cmp
dec
dec
stos
inc
inc
fsubs
and
pushf
vmread
pusha
jp
test
aam
xor
push
sbb
cmp
mov
movsl
mov
rorl
push
mov
lods
mov
add
lods
jg
push
cld
not
in
popf
je
mov
push
sub
iret
pop
outsl
dec
loop
ds
push
or
jne
shl
in
adc
adc
mov
jl
scas
xor
test
out
xchg
outsb
sub
jl
mov
jbe
push
fs
aam
inc
jge
xchg
sub
in
cltd
sbb
mov
hlt
test
push
adc
add
push
data16
or
lcall
lea
dec
add
cli
xor
shll
icebp
sub
pop
xor
cld
inc
or
add
xor
cmp
mov
add
adc
inc
mov
aam
inc
mov
mov
cmp
mov
loope
addl
add
xchg
mov
or
jl
lock
pop
andl
dec
xor
xchg
lea
rcrb
sub
adc
add
nop
data16
nop
jle
adc
pop
scas
shl
add
add
dec
roll
or
mov
or
push
add
rcrb
xchg
in
and
and
mov
lock
xchg
xchg
xchg
mov
adc
xchg
in
or
adc
sub
and
and
adc
enter
sub
sbb
or
adc
das
jns
sub
dec
adc
sbb
push
sbb
dec
jge
inc
xchg
mov
pop
mov
loop
leave
push
adc
cmpsb
imul
test
mov
mov
mov
add
ljmp
popa
nop
xor
fldl
lods
mov
lcall
jg
in
jne
inc
jmp
mov
sub
or
xchg
add
loope
mov
sub
cmp
ja
push
dec
jmp
fs
fldt
mov
cmp
push
fstpt
rolb
call
addb
add
jmp
pushf
and
mov
in
ds
pop
sbb
mov
jmp
cmpsl
scas
adc
push
mov
adc
push
sub
inc
call
mov
push
js
std
cmp
jle
cmp
push
xor
pop
dec
push
jmp
dec
push
mov
xchg
push
jbe
push
lods
jo
dec
and
pushf
push
cmp
jmp
sub
mov
dec
jecxz
jge,pt
sbb
mov
ret
fsubrs
dec
sbb
sarl
jbe
pop
jge
pop
cmp
out
jne
mov
nop
add
jne
mov
dec
jae
imul
sbb
mov
pop
mov
mov
or
daa
mov
jle
dec
decb
mov
or
loopne
fnstsw
gs
orl
fidivl
push
and
mov
sub
cmp
mov
das
push
jmp
and
sbb
imull
pushl
mov
shll
test
inc
add
fldenv
sbb
js
or
loope
loopne
add
testl
jp
sbb
fdivp
pop
xor
and
dec
addl
jmp
cld
push
sbb
jge
test
and
sub
stc
push
adc
dec
push
or
jmp
mov
or
push
cwtl
pop
mov
or
mov
dec
ss
mov
hlt
mov
mov
xor
dec
pushf
xor
aam
jg
or
jge
neg
add
mov
orb
movsb
sub
cmp
loop
and
cmp
adc
mov
sbb
ret
inc
add
mov
sahf
and
adc
push
popf
pop
lea
out
dec
test
lods
sarl
push
cmp
and
flds
rorl
push
mov
rolb
cmpb
pop
scas
dec
or
mov
mov
sbb
into
scas
sti
aas
loop
icebp
mov
ret
and
inc
imul
adc
nop
fs
xor
push
mov
sbb
jle
sbb
ja
ja
mov
push
jae
sbb
pop
movb
adc
int3
jne
cmp
jne
or
jne
test
sub
lret
out
jne
inc
or
cmp
imul
jne
hlt
int3
add
jne
mov
and
mov
test
mov
or
test
rcrb
mov
push
lea
and
mov
rolb
sbb
cld
sahf
add
add
dec
lock
push
clc
je
ja
data16
dec
fs
js
subl
lcall
cltd
jbe
mov
stc
dec
push
sbb
jg
add
adc
lods
aaa
adc
aaa
pop
dec
mov
add
pop
add
lods
add
or
shr
adc
push
out
mov
jae
bound
or
adc
inc
mov
mov
add
div
lods
mov
in
sti
jg
ss
fcom
insl
fadd
loopne
shr
or
mov
xchg
inc
push
dec
fwait
aam
shrl
xor
cs
push
jl
mov
mov
and
mov
stos
inc
lcall
xor
add
ficompl
sar
pop
int3
add
pop
int3
in
fiadds
dec
xor
or
scas
fisubl
mov
mov
and
push
fmull
mov
push
dec
add
cmp
shr
popf
stos
or
sub
sbb
lret
into
jmp
scas
rcrl
push
xchg
rolb
mov
sbb
movsb
int3
sbb
fadds
test
int3
add
jne
push
lret
mov
jmp
sub
add
imulb
mov
movups
xor
push
stos
mov
bound
inc
sbb
add
stc
and
lret
cmp
jns
cmpsl
push
cwtl
shl
aas
cmp
sub
int
lods
mov
mov
xchg
addr16
jmp
inc
add
stos
test
pop
jne
cmp
jge
sbb
inc
scas
and
add
push
mov
mov
adc
mov
rorl
dec
pop
cmp
push
or
or
popa
and
xchg
xchg
adc
fidivl
lret
cs
or
jmp
or
stc
gs
or
out
mov
dec
cmpb
je
lcall
add
sbb
sbb
add
or
mov
add
add
add
fcompl
addr16
adcb
sub
dec
cmp
push
pop
jae
push
sbb
cmp
cltd
loope
pusha
or
mov
adc
or
lahf
xor
mov
imul
cli
inc
push
mov
fsubs
pop
jno
xor
xor
or
and
and
movsl
pop
adcb
xchg
das
popa
push
mov
cmp
and
mov
and
std
shlb
jbe
or
add
xchg
ret
push
xor
daa
mov
and
pop
je
setg
ljmp
push
cmpl
out
clc
add
mov
and
jmp
mov
aas
sub
movb
lea
sub
js
cmp
mov
jo
ficoml
xor
mov
clc
add
pop
pop
inc
pand
loop
lock
lcall
jmp
test
icebp
add
add
ret
insb
inc
push
push
push
mov
mov
cld
inc
dec
inc
int
ret
adc
jns
les
sub
xchg
fs
xchg
xlat
movsb
fcmovu
pop
idiv
xor
push
or
xchg
aam
daa
add
testb
cmpsb
add
jne
test
stos
insl
out
add
pop
pop
sub
dec
mov
xor
adc
into
jmp
icebp
add
xor
or
and
push
add
jge
loopne
ja
push
ret
jbe
xor
sahf
add
dec
adc
mov
ds
aam
sub
adc
and
rcrb
push
shlb
enter
xchg
and
push
lods
push
sbb
subb
pusha
mov
lret
in
add
enter
or
push
mov
fidivl
out
xor
mov
mov
xor
pop
cwtl
xor
movsl
inc
push
call
loopne
sbb
imul
pop
xchg
jae
cld
pop
fldl2t
call
ret
push
cmp
rorb
sbb
adc
test
add
add
adc
or
and
stos
lret
lea
lret
lods
mov
xor
rolb
fadd
jmp
pop
fldcw
xor
loop
add
enter
push
inc
popa
push
lds
dec
inc
repz
testb
xor
test
and
push
mov
mov
push
xor
dec
inc
pushf
incl
loope
add
mov
xchg
inc
and
popf
mov
push
dec
cmp
dec
fwait
in
js
mov
inc
neg
sbb
jecxz
mov
lock
ret
daa
xor
or
jne
pop
cmp
call
add
mov
or
daa
mov
test
movb
inc
test
xor
int3
lcall
adc
fisttpl
or
xchg
mov
call
xor
and
inc
pushf
push
movswl
mov
and
data16
adc
add
cmp
add
fiadds
jg
mov
add
dec
shrd
push
or
sub
jle
cmp
sti
push
daa
ss
jl
cmpsl
fwait
scas
scas
cmp
cmp
pop
fwait
lea
stc
inc
add
dec
jmp
loope
es
xchg
clc
sub
adc
cmp
or
inc
shrb
incl
syscall
sbb
push
xor
sbb
ret
add
lcall
xor
jo
shl
mov
and
add
int
mov
or
mov
jb
push
sub
or
push
ds
neg
cmp
mov
lock
in
and
jb
push
push
orb
jns
add
jbe
mov
mov
dec
dec
mov
add
imul
dec
dec
inc
dec
pop
or
pusha
and
jb
or
sbb
add
adc
inc
inc
and
mov
dec
test
inc
add
sub
xor
lock
inc
je
int
movsb
inc
andb
cmc
add
arpl
loop
call
ret
pushf
and
push
lock
mull
sub
xchg
mov
or
cwtl
or
mov
inc
jmp
lock
inc
sub
xchg
sub
jp
jge
mov
jne
mov
js
push
push
mov
pop
xor
sbb
or
mov
xor
xchg
adc
testl
cmp
inc
or
xor
and
xor
xchg
repz
cmp
jg
scas
push
cmp
inc
lret
jbe
xchg
push
dec
test
dec
xchg
lea
add
incb
and
adc
push
sub
or
jmp
insl
cmp
cs
lret
fs
cld
jl
movsl
ja
lahf
jle
mov
mov
inc
or
sarb
inc
shlb
push
insl
in
loop
mov
cmp
adc
jge,pt
testb
jle
gs
or
pop
mov
jne
out
and
inc
popa
je
inc
je
dec
add
bound
and
and
pop
dec
xchg
pop
add
call
or
mov
dec
fwait
inc
inc
lods
mov
dec
inc
mov
das
dec
mov
or
fldl
fdivl
fmull
insl
push
mov
in
pop
clc
fstps
or
sub
mov
push
pusha
leave
and
mov
inc
pop
shlb
dec
shrb
adc
cmpsl
popa
and
icebp
mov
and
in
adc
push
dec
inc
add
inc
ja
sbb
mov
clc
jmp
repz
js
outsl
jbe
mov
cmpb
jne
jp
xor
adc
rorl
sub
add
hlt
insl
adc
dec
jmp
push
cmp
hlt
dec
jo
pop
shrl
sbb
rol
shlb
aad
cld
lahf
dec
imul
hlt
cmp
popf
pop
xchg
jno
ret
cwtl
movsl
aad
dec
cld
dec
aaa
rolb
push
mov
add
mov
aaa
sub
pushl
xchg
and
push
cmp
imul
or
pop
cli
sub
pop
sub
mov
addr16
mov
adc
xor
sub
xor
xor
mov
cmpl
lock
cmp
mov
adc
orb
push
jle
sahf
and
pop
push
in
mov
or
jp
pop
icebp
sub
sub
add
mov
mov
or
or
mov
inc
or
cld
mov
add
mov
fdivs
jge
roll
mov
ss
movlps
testb
daa
cmp
jl
or
out
int
lock
xor
pop
cmp
mov
mov
icebp
jae
cmp
dec
adc
nop
add
or
xchg
sbb
jmp
cmpsb
push
ja
lcall
add
xchg
test
jmp
adc
add
shll
inc
es
push
jb
int
jae
or
shll
pushf
aam
or
xor
mov
rcrb
mov
mov
adc
mov
test
jne
and
shrb
mov
sbb
sbb
mov
mov
or
xor
push
push
inc
call
sbb
mov
push
cld
cwtl
adc
std
insl
sbb
fs
xor
mov
sbb
add
adc
into
cs
jns
jne
xor
mov
add
hlt
fnstenv
pop
hlt
mov
xor
or
orb
push
push
push
dec
inc
dec
jecxz
jae
dec
push
xchg
adc
movl
loopne
rorl
mov
loopne
cmp
or
test
cmp
push
lcall
paddusw
das
add
call
sub
cli
xor
and
xor
cld
or
add
daa
sbb
inc
jmp
push
jns
dec
filds
and
int3
inc
adc
or
mov
stc
gs
test
icebp
inc
arpl
jle
push
push
in
xchg
mov
push
outsl
sbb
pop
xchg
mov
mov
jmp
cmp
sbb
es
push
out
push
or
in
xchg
lea
pop
jmp
xor
mov
mov
mov
addb
in
adc
iret
push
dec
pop
mov
mov
rclb
js
cmp
dec
ret
xchg
sarb
sbb
xor
jge
nop
dec
test
sub
lea
ret
cld
sub
mov
dec
lock
xor
movsb
cmp
sub
jge
mov
push
cwtl
sbb
ds
rclb
sysexit
cltd
jne
popa
ffree
insl
loopne
xchg
adc
jmp
movsl
cmc
pop
jno
loopne
mov
xchg
add
pushf
or
inc
stos
fidivs
nop
adc
adc
and
movntps
sbb
sbb
es
test
push
lea
add
mov
or
push
sbb
push
and
inc
sub
push
insb
mov
inc
xor
js
inc
out
adc
push
lock
push
inc
jmp
pushf
dec
out
pushf
mov
les
dec
inc
xor
or
and
imulb
insl
jno
inc
add
jge
adc
and
jne
jo
orl
push
add
mov
cmp
mov
xor
lock
sub
aas
lods
decl
adc
es
add
or
rol
xchg
add
idivl
mov
jmp
shr
or
mov
add
add
or
imul
imul
push
popa
cld
add
in
stos
mov
cmp
sbb
mov
fildl
sub
bound
aam
push
push
jp
clc
fnstcw
inc
pop
sub
lret
popf
pop
adc
testl
sbb
cli
mov
adc
mov
or
cs
push
xor
mov
inc
rorb
cltd
repnz
dec
or
fwait
inc
dec
enter
stc
pop
adc
inc
movb
xchg
mov
mov
cmp
ficoms
das
adc
and
adc
iret
shl
orl
lock
mov
xchg
cmc
xor
ljmp
ror
add
lcall
adc
aas
or
mov
cmp
test
test
adc
jbe
je
lret
je
dec
call
and
sub
adc
stgi
movsb
ficoml
hlt
mov
push
icebp
add
out
in
push
jmp
insb
in
cmp
push
sbb
push
add
or
pop
call
enter
add
movsb
pop
mov
pusha
push
ljmp
add
push
enter
push
cmc
inc
xchg
mov
mov
cs
inc
ljmp
dec
ja
mov
jle
ss
or
cld
inc
push
ja
xchg
in
mov
movsl
add
pop
cmp
add
xchg
leave
inc
xor
fstl
dec
cmp
lock
jl
cmpb
jl
xor
loopne
dec
mov
push
inc
mov
inc
xchg
adc
scas
push
xlat
push
pop
xor
test
dec
inc
push
push
mov
push
push
mov
and
push
inc
adc
fprem1
mov
sbb
lret
jne
aam
pop
xchg
inc
and
fisubrs
das
push
pop
add
and
sahf
nop
pop
inc
adc
mov
call
push
pushf
add
and
into
lock
enter
out
or
test
and
test
add
shll
in
fisttps
test
je
mov
add
or
cmpsb
push
sub
aaa
movsb
pslld
and
dec
dec
pop
pop
mov
mov
mov
jne
movsw
xor
sub
outsb
rorb
test
int3
add
aam
mov
pop
jmp
push
in
xchg
and
mov
scas
pop
adc
push
xor
in
lock
hlt
xchg
jge
inc
inc
div
fdiv
fiaddl
dec
mov
mov
sbb
inc
sbb
inc
js
sbb
xchg
sbb
adc
adcl
push
push
cmpsb
and
xchg
fistl
sbb
adc
sbb
and
adc
adc
dec
jns
sarb
fwait
dec
jne
pop
pop
pop
insl
fwait
mov
adc
orb
ljmp
shr
mov
adc
mov
idiv
and
mov
cld
lock
je
divb
subl
mov
push
bound
fimull
call
pop
adc
jno
in
xchg
lcall
outsb
call
dec
repnz
cs
or
push
mov
cmp
sbb
aas
cmpsl
sub
sub
test
pop
mov
dec
xchg
into
mov
daa
push
ds
les
iret
das
bound
hlt
fs
pusha
adc
setle
jns
mov
push
pop
and
pop
and
mov
jle
scas
gs
lock
popa
mov
cmp
lea
push
fidivs
pop
dec
int3
push
cld
and
insl
ljmpw
aaa
dec
rorb
jo
fidivs
jg
add
mov
jl
jge
xchg
test
dec
xor
dec
cmp
jne
sub
mulb
push
cmpsl
movl
fs
loop
sub
leave
je
imul
mov
mov
mov
out
es
mov
je
jg
aad
les
mov
push
cmp
cltd
cli
out
ja
add
cmp
adc
cmp
jne
mov
shll
leave
adc
mov
hlt
jb
idivl
pop
ss
add
push
dec
in
mov
orb
shlb
scas
ret
ja
xchg
mov
orb
pusha
mov
mov
and
pop
es
scas
sbb
loop
test
or
jmp
neg
je
aam
fidivl
addr16
js
jmp
imul
xor
mov
mov
sbb
lret
mov
imul
cwtl
mov
testl
xor
mov
adc
jo
arpl
in
jmp
mov
dec
push
pop
mov
or
test
jg
sbb
dec
pop
xlat
mov
jno
test
femms
gs
xor
adc
mov
sub
xchg
inc
xchg
sub
push
inc
mov
aam
push
xor
and
mov
sti
cltd
mov
add
call
sbb
mov
testb
xor
orl
jle
dec
mov
movb
push
rcl
rcl
lahf
out
sahf
aad
xlat
fcomp
add
and
fstpt
mov
pause
data16
movb
jmp
add
and
xor
jne
cmp
test
or
test
filds
mov
mov
add
push
adc
and
inc
push
add
jnp
outsl
aas
jne
mov
push
divb
push
mov
fs
call
jmp
icebp
adc
cmp
das
pusha
jnp
scas
or
push
push
add
cwtl
jecxz
push
adc
add
cmp
or
rol
mov
imul
rcll
jmp
sbb
sbb
lea
std
in
mov
inc
js
mov
adc
sbb
neg
mov
mov
mov
mov
mov
jl
push
inc
pushf
sub
adc
mov
test
adc
mov
roll
dec
adc
sti
add
es
pushf
lea
adc
cmp
mov
fcoml
and
decl
adc
or
daa
or
movb
sbb
fdiv
divl
mov
and
lea
pop
incb
subl
jae
xchg
ja
add
add
push
jns
mov
inc
mov
sarl
ljmp
ss
inc
or
movsb
notl
jne
in
sub
repz
test
or
push
dec
rolb
push
mov
push
lea
iret
or
mov
or
or
sbbb
movsb
repnz
sub
cmp
pop
shll
inc
repz
addl
pusha
mov
jge
jl
or
dec
pop
ret
and
rorb
jg
jle
jle
test
adc
sub
lea
inc
mov
add
cld
or
jg
into
loopne
cmp
rorb
add
push
push
lret
movl
clc
cltd
adc
inc
lods
ffreep
adc
insl
clc
in
out
sbb
inc
xchg
mov
or
dec
add
inc
lods
pop
enter
lock
test
inc
sahf
cmpsl
mov
inc
cli
div
cmp
test
push
sbb
mov
rorb
loopne
mov
push
jnp
sbb
adc
mov
adc
ret
dec
xchg
push
clc
and
and
icebp
loopne
fnstsw
fnstenv
xchg
jmp
push
mov
mov
xlat
xor
push
popa
cmpsl
add
pop
cmp
cmpsb
imul
or
clc
xor
xchg
mov
test
ja
negb
or
and
dec
pop
inc
je
xchg
and
inc
xor
mov
xor
into
or
fisttpl
shlb
fdivrs
enter
aam
inc
inc
test
dec
or
xor
or
sub
les
xor
cltd
mov
mov
ja
push
cld
lea
fcmovu
mov
mov
inc
dec
push
cmp
lods
lods
adc
adc
and
adc
loop
mov
sbb
negb
negb
test
xchg
inc
inc
lock
enter
out
or
jge
les
js
xor
sbb
dec
incb
jne
jne
sbb
loopne
lods
dec
mov
pop
test
mov
add
sub
jle
sbb
insb
sbb
add
mov
push
add
push
nop
lods
test
das
sbb
cmp
adc
mov
out
adc
pusha
fsts
nop
mov
cmp
pop
shr
scas
xchg
nop
mov
jb
push
js
inc
inc
shll
jbe
mov
fiadds
inc
imul
and
insl
call
inc
mov
loopne
fcoms
pop
add
and
insb
cmp
sub
sbb
jmp
aad
icebp
ret
sti
and
xchg
mov
fldenv
or
mov
add
sub
shl
dec
into
out
enter
pop
in
add
sbb
jbe
xabort
lods
xchg
sub
dec
enter
and
mov
cmp
push
shlb
test
dec
int3
negl
fimuls
add
add
xor
pop
and
into
or
mov
inc
inc
pop
or
xchg
inc
in
aas
insl
push
dec
mov
dec
cmp
jge
sub
push
jg
jmp
cmpb
or
add
dec
cmp
into
dec
mov
add
add
fadds
dec
jb
pop
add
adc
mov
add
sahf
fidivrs
jne
dec
mov
jb
int
scas
xor
sub
dec
orb
icebp
loop
add
push
add
mov
ret
adc
movsl
jge
enter
or
adc
test
add
test
mov
lret
mov
ret
mov
dec
inc
and
or
or
adc
fisttps
jmp
cmp
and
xchg
push
or
add
leave
clc
push
or
iret
je
add
adc
push
add
add
mov
mov
aad
ret
les
stos
push
or
jae
mov
ret
mov
mov
pop
and
cmp
xor
into
pusha
pop
pop
adc
inc
mov
addr16
icebp
and
pop
pop
mov
loope
mov
pop
shll
or
pop
mov
adc
inc
ret
and
adc
push
pop
jae
or
or
push
add
add
add
cmpl
push
or
add
mov
scas
movsl
and
pop
or
adc
xlat
dec
pop
lahf
push
mov
mov
add
and
jo
pop
jne
and
and
or
pusha
inc
push
mov
jb
mov
pop
add
pop
push
xor
or
int
cld
xorb
enter
or
inc
loopne
mov
sub
into
xchg
or
dec
sub
orb
out
mov
adcl
bound
cltd
ss
or
add
int3
dec
xor
or
adc
xchg
out
xchg
jle
lock
inc
pusha
mov
xor
inc
in
in
jg
into
into
into
sub
and
pop
js
ja
sub
push
pop
nop
pop
pop
dec
xor
pop
mov
dec
mov
or
pop
rolb
add
popa
lock
sbb
or
add
leave
lahf
pop
test
or
add
add
and
add
add
xor
test
into
and
je
and
mov
inc
sub
es
sub
jmp
jb
sub
popa
push
ret
in
ret
testb
sbb
push
scas
insb
and
or
sbbb
aad
dec
xchg
or
or
inc
enter
push
cs
pop
fmul
cmp
xchg
xchg
push
mov
adc
cmp
and
shrb
je
inc
mov
inc
sahf
jle
xor
lcall
adc
sbb
push
and
daa
or
mov
cli
adc
jge
sbb
gs
bound
push
jl
or
lea
mov
pusha
out
cltd
mov
add
push
inc
jecxz
cmpb
sti
in
dec
sbb
xor
mov
out
push
adc
mov
inc
loopne
andb
adc
movsb
mov
mov
mov
mov
or
out
je
and
push
sub
les
or
push
cmp
jbe
inc
inc
xchg
mov
mov
inc
jo
lds
insb
fimuls
add
xchg
mov
sub
jns
jmp
push
xor
xchg
or
cld
sub
inc
aam
ffreep
jecxz
popa
or
rolb
repz
rorb
push
sbb
add
xchg
add
rcr
xchg
cs
lods
test
lods
pop
lods
lock
pop
xchg
cmp
add
loopne
mov
jbe
xor
inc
ljmp
xor
ss
test
pop
dec
push
leave
je
test
push
xor
mov
out
je
and
mov
popf
push
mov
push
loopne
pop
ret
adc
push
mov
xchg
dec
jge
or
xchg
sbb
jnp
sub
sbb
and
mov
faddl
hlt
and
movsb
adc
inc
sbb
es
clc
decl
jbe
mov
pop
jge
lea
sbb
sub
push
pop
push
imul
and
enter
xor
jl
and
popf
push
inc
xchg
xor
fildll
push
shll
adc
leave
mov
rorb
rorb
adc
adc
bound
aas
btr
cs
push
mov
int
sbb
sti
sbb
add
jmp
push
push
xlat
or
pop
inc
adc
pop
inc
pushf
dec
test
sbb
pop
lods
fsts
clc
or
dec
sbb
sub
jmp
push
sahf
pop
mov
rorb
adc
mov
shrb
das
imul
loopne
movsb
nop
insl
jo
push
dec
jmp
xchg
addr16
mov
mov
and
inc
push
pop
add
addb
or
cmp
and
cmp
sub
rolb
ss
mov
xor
adc
add
test
insl
jo
stos
mov
popf
mov
and
sbb
xchg
mov
dec
shl
or
sub
mov
mov
fimuls
mov
sahf
xor
sub
call
mov
pop
and
add
pop
jl
jp
lea
dec
lea
fcoms
inc
mov
cmp
aad
js
mov
repnz
pop
nop
out
das
insl
scas
jae
fsubs
cld
dec
addl
adc
dec
loop
int
movsl
aaa
xchg
fisttps
cmp
push
aam
or
js
pop
subb
adc
or
and
mov
fcoml
sbb
inc
js
jno
or
xchg
test
sar
fcompl
xor
imul
imul
xchg
outsl
adc
sbb
les
sbb
cmpsb
mov
push
stos
add
sbb
inc
pop
out
inc
hlt
xor
jbe
fsubs
subl
rcll
or
add
push
mov
scas
mov
testb
js
jno
push
testb
push
push
add
mov
or
sbb
xchg
cwtl
or
cmp
sub
adcl
inc
xchg
jg
push
popl
add
push
in
test
daa
adc
sbb
cmp
adc
scas
js
mov
sbb
aaa
adc
data16
mov
shlb
fwait
pop
lea
xchg
ret
push
pop
or
mov
test
pop
outsb
mov
sub
fwait
or
loope
and
mov
mov
loopne
clc
out
cvttps2pi
aam
test
aaa
push
push
in
fbstp
mov
fsts
sub
mov
xchg
fildll
add
push
xor
inc
jge
lahf
adc
jmp
fstps
icebp
lahf
xorl
xchg
mov
sub
das
fadd
fidivl
test
in
mov
sbb
mov
inc
ja
je
mov
lcall
add
stos
or
and
mov
test
mov
xchg
lock
fs
push
mov
fdivr
add
sub
fmull
daa
call
fildl
icebp
leave
loopne
mov
data16
fsubrs
es
aad
jbe
cwtl
pushf
xor
js
xor
and
outsb
sub
fmuls
xchg
jmp
in
jmp
inc
push
in
lock
pushf
sbb
jp
lock
enter
pop
adc
rcll
cmpb
enter
fdivrs
cltd
pop
xorb
or
or
ret
xor
mov
mov
fadd
cmp
mov
adc
and
xor
lock
insb
xchg
jl
sbb
jne
cmp
es
inc
inc
adc
imul
jno
dec
cmp
lahf
push
cld
ljmp
mov
mov
mov
mov
fsubl
cmpsb
fcomp
aam
test
mov
ret
push
dec
mov
pusha
and
fwait
and
sub
sub
cmp
or
sub
sbb
dec
jg
cmp
or
pop
cmp
mov
jmp
pushf
adc
xchg
and
les
in
stc
test
in
push
aad
sarb
in
mov
or
in
movups
cmpsb
in
cmovl
mov
inc
mov
pop
imul
xorb
fwait
int
or
lock
push
push
pop
push
adc
cmpb
orl
jne
nop
and
mov
test
aam
pushf
xchg
pop
ds
xchg
add
mov
cmpsl
scas
sbb
cmp
inc
push
xor
xchg
adc
mov
cltd
mov
or
jo
lock
in
or
or
testl
rclb
push
loopne
jecxz
pop
sub
leave
mov
or
and
fsubr
rclb
cmp
cmp
cmpl
test
cmp
sub
xlat
add
xor
adc
fs
fldl2e
sub
es
xor
cmp
es
fs
inc
dec
iret
fs
fs
ret
pop
inc
lahf
insl
add
addb
repnz
inc
pop
or
lods
sbb
pop
jb
pop
int3
rcr
mov
xchg
add
ljmp
cmpsb
add
mov
in
jbe
stos
adc
adc
adc
movsb
imul
sub
rclb
mov
pop
xchg
add
stos
les
imul
and
pop
fdivs
xor
repnz
imul
nop
xchg
sub
mov
add
mov
roll
xor
add
in
xchg
cld
dec
adc
cmp
mov
aam
jbe
gs
in
mov
or
dec
and
xchg
mov
or
jb
add
movsl
in
cmp
jl
call
in
test
call
jmp
in
or
flds
jno
add
mov
mov
and
xor
insl
mov
and
adc
mov
loopne
insl
mov
and
jg
xchg
gs
loopne
in
jne
mov
sub
inc
xchg
and
adc
jnp
cmc
dec
push
xchg
cli
nop
mov
sbb
js
mov
adc
pop
push
orb
int3
out
lcall
adc
sti
popf
xor
jno
rorb
mov
adcb
into
rolb
dec
clc
out
mov
xor
and
lods
mov
fcoms
popa
mov
jo
fmuls
repnz
lea
cwtl
aad
pop
and
int3
out
jb
cmp
jb
jb
mov
jb
jb
int3
rcl
push
xchg
stos
inc
adc
push
add
mov
adc
aaa
pop
flds
add
sbb
or
adc
scas
xchg
mov
adc
mov
cmpsl
or
stos
pop
and
sar
int
push
pushf
and
pop
and
mov
in
jno
push
jbe
mov
or
ss
fsub
es
or
dec
repnz
movntps
dec
inc
lea
mov
dec
in
das
unpcklps
inc
adc
mov
mov
jns
inc
sbb
sub
and
or
push
mov
je
or
jmp
loopne
aas
in
adc
adc
dec
pop
and
xchg
jne
pop
jae
pushf
xorb
je
pop
lcall
test
push
sub
daa
and
xor
outsb
or
bnd
push
mov
pop
xor
movsl
dec
push
pop
pusha
cltd
fisubl
cltd
push
je
adc
jl
addb
add
sbb
xor
jge
fwait
mov
push
in
and
inc
dec
in
sbb
rorb
xchg
dec
xchg
xor
mov
std
inc
inc
sbb
inc
push
dec
xchg
mov
test
xchg
mov
jne
popf
and
push
push
mov
sub
dec
sbb
or
rcll
xchg
jo
rorl
idivl
insb
inc
stos
add
add
lods
daa
mov
cwtl
in
sbb
sub
inc
sahf
sbb
in
cmp
bound
pop
imul
sbb
cwtl
mov
out
add
or
and
and
or
lea
shlb
test
mov
aaa
inc
cmp
ja
cltd
or
hlt
mov
mov
mov
movsl
aad
inc
or
push
or
inc
mov
add
dec
shlb
daa
cwtl
lcall
popf
add
cwtl
adc
push
inc
push
and
xlat
fcompl
sbb
cmc
and
cmpsl
inc
fmull
mov
fnstsw
or
cmp
push
lds
add
inc
inc
es
cmc
xor
cwtl
movsb
stc
jl
repz
incb
dec
es
pushf
std
mov
in
mov
lret
das
dec
push
mov
pop
mov
xchg
std
int3
pushf
adc
mov
xchg
cs
inc
fiaddl
inc
cltd
js
sub
inc
jo
jne
or
add
movsb
popf
mov
fadds
enter
and
inc
icebp
mov
sarl
addr16
sbb
outsl
test
cmp
mov
adc
xlat
enter
fsubl
orl
pushf
sarb
mov
cwtl
push
mov
pushf
mov
fsubs
outsl
movsb
pop
push
dec
add
inc
lcall
mov
pop
mov
push
mov
inc
add
in
inc
fiaddl
and
jne
fnsave
lcall
movsb
xchg
nop
popa
nop
and
stos
mov
mov
jnp
inc
int
mov
movsl
lods
lods
test
add
imul
add
add
and
in
lea
iret
call
and
sub
mov
lcall
push
mov
data16
loopne
in
nop
mov
or
imul
lock
xlat
pop
push
inc
mov
in
mov
cmp
push
loop
add
sbb
sub
mov
icebp
sub
scas
je
push
adc
movsb
shrl
mov
outsb
aas
punpckldq
and
push
rorb
mov
cwtl
int3
jmp
xchg
enter
dec
mov
fmull
dec
and
mov
dec
push
in
popa
add
inc
in
adc
sub
or
test
adc
pusha
jle
dec
arpl
lret
mov
sahf
aam
shrl
mov
lock
cmpsb
repnz
pop
fdivr
rclb
xlat
enter
fcoml
pop
mov
jl
add
in
imul
fstpt
adc
sub
sbb
xor
mov
xchg
pop
jo
or
test
dec
sub
xchg
fsub
add
dec
in
mov
dec
and
test
mov
or
sub
sub
lock
and
jno
test
shll
cmp
aam
fwait
jmp
orb
add
sahf
nop
sbb
shrl
stos
sub
and
stos
adc
and
mov
xor
xor
fwait
add
bound
or
dec
add
pop
inc
fadd
aad
leave
inc
mov
mov
cmp
movsb
lods
mov
movsb
sar
in
xor
lods
jecxz
jmp
out
enter
jne
movsb
int3
cmp
movsb
adc
inc
js
add
lock
dec
pop
leave
inc
sbb
inc
add
stos
xlat
cwtl
lods
scas
adc
fsubl
push
push
scas
jmp
rcrb
fwait
mov
or
lea
mov
pop
sub
movsl
adc
dec
xchg
imul
or
stos
add
scas
in
scas
test
inc
xor
and
scas
je
leave
lret
jo
insb
std
pushf
std
fidivrl
test
pop
adc
add
dec
mov
gs
dec
cmpsb
dec
repnz
xchg
test
cwtl
push
fs
mov
test
loope
jp
das
and
add
cmp
xor
jge
add
inc
inc
cmp
mov
push
pop
fadds
lods
mov
inc
adc
lods
popf
push
mov
push
and
mov
mov
insl
test
mov
stos
inc
xchg
mov
lea
icebp
mov
xchg
adc
test
popf
and
mov
jl
inc
or
cs
cmp
push
call
and
pop
sbb
push
lret
movsb
mov
jg
loopne
mov
pusha
mov
shr
aam
inc
mov
shrb
bound
adc
or
or
stos
xor
xchg
aaa
les
adc
rcrb
xchg
cmp
xchg
inc
mov
insb
mov
ss
mov
push
xchg
and
int
repz
fs
add
aam
out
adc
inc
in
pusha
out
loope
sub
mov
loopne
fdivl
adc
xchg
sarb
pop
int
test
stc
outsl
mov
push
pop
wrmsr
and
mov
adc
sub
and
pushf
movsb
mov
daa
lcall
xor
sub
or
orb
loopne
cld
adc
cmp
fwait
sub
das
ret
lods
mov
mov
insl
mov
in
xor
sarb
adc
pop
in
push
cmc
or
xchg
das
cmp
mov
ret
push
mov
mov
int
imul
enter
sub
bound
push
push
ja
mov
pop
dec
jo
call
mov
imul
shlb
int3
sbb
mov
or
jo
mov
ficoml
mov
in
mov
lahf
shlb
shl
in
mov
adc
imul
iret
dec
mov
dec
jge
pop
pushf
adc
es
inc
sub
push
push
pop
imul
xor
jae
add
lock
sub
out
inc
push
test
add
and
dec
inc
lcall
out
inc
mov
cmpb
cmp
or
cmp
add
nop
dec
sub
adc
sbbb
add
mov
cmp
add
or
or
xor
cmp
and
aaa
stos
xor
pusha
sub
and
and
and
test
dec
inc
cmp
roll
sbb
das
es
mov
xor
adc
cmc
fsubr
out
and
out
add
mov
pusha
inc
mov
pop
dec
cmpsb
sbb
sbb
sub
lods
dec
rolb
stos
ret
jnp
push
and
xor
movsl
jo
jmp
inc
and
inc
adc
rorb
push
inc
mov
add
push
test
scas
pop
je
popa
xchg
dec
jl
arpl
adc
xchg
sbbl
stos
jo
mov
and
js
push
xchg
fildl
addb
inc
pop
jb
leave
insl
nop
and
xchg
pushf
dec
mov
leave
and
dec
addr16
int3
enter
int3
in
inc
andb
shrb
aas
lret
inc
test
movsl
jle
imul
lods
loopne
sub
aaa
popa
adc
inc
dec
mov
mov
pop
dec
pop
insl
mov
jmp
repnz
pop
push
mov
and
xchg
dec
cmp
in
and
lds
inc
push
sbb
imul
push
sbb
add
adc
imul
sbb
shrl
sub
or
inc
call
jo
les
jb
imul
xor
xchg
std
add
test
and
mull
adc
adc
and
adc
push
inc
add
mov
lea
add
sbb
mov
cmp
std
add
nop
and
sti
or
xchg
mov
sub
inc
mov
dec
push
jbe
shlb
cmp
and
pusha
xchg
inc
pop
mov
adcb
xchg
add
decb
imul
push
in
adc
xlat
add
iret
add
js
inc
fs
daa
call
dec
int
enter
test
mov
pop
das
or
rorl
test
in
xchg
les
enter
leave
mov
les
sub
movsl
inc
mov
inc
add
rclb
loop
jns
inc
lret
test
call
xor
xor
lret
pop
push
mov
cmp
cmc
test
fdivs
adc
push
andb
xchg
dec
cmpsb
mov
and
adc
rolb
dec
jo
add
push
add
fs
xchg
subb
test
adc
or
test
loopne
dec
adc
and
xchg
or
lcall
xor
mov
lret
lcall
jne
arpl
xchg
lret
xchg
inc
aam
cltd
jbe
scas
in
in
adc
dec
xor
and
and
fisubl
adc
sbbl
add
and
cld
fldt
mov
insl
call
outsb
ficoml
add
subb
fsub
adc
xchg
pushf
fdivr
sub
xor
xor
and
insb
les
sub
xchg
mov
shlb
add
mov
xor
fiaddl
in
push
int3
cltd
rorl
push
adc
mov
adc
push
lahf
push
js
stos
in
pushf
cltd
fs
imul
fs
dec
es
mov
enter
pop
or
xchg
dec
mov
leave
je
lods
shlb
enter
roll
loopne
mov
roll
ret
push
xor
aad
std
dec
adcb
call
cmp
jbe
add
jo
sbb
fs
ss
jne
lds
fiaddl
push
adc
pop
pop
push
repnz
aad
bound
test
nop
or
add
rcl
aam
rorb
mov
adc
adc
fisttpl
fldt
out
sub
xlat
fs
es
mov
or
lock
inc
mov
lods
mov
sbb
adc
rorb
les
ljmp
rolb
enter
add
fcomps
test
enter
jb
aam
nop
adc
fcomps
push
test
add
lea
sub
stos
pushf
stos
inc
sbb
adc
dec
cwtl
mov
pop
lea
repnz
cltd
mov
mov
and
and
cmpsl
and
sbb
inc
add
sbb
and
les
pushf
fisubrs
inc
mov
fcom
cmp
lock
xchg
cmp
arpl
cmp
inc
shll
cld
pop
inc
push
dec
mov
inc
adc
xchg
pop
mov
cmp
sbb
or
push
nop
or
cld
in
sub
adc
jo
mov
cltd
loopne
lock
pusha
adc
es
fstl
xor
fs
inc
enter
rorl
mov
jne
xor
test
sbb
in
and
xor
cmp
add
shll
cwtl
stc
test
push
insl
pop
fistl
das
rcrl
push
enter
enter
dec
adc
xchg
out
xchg
jl
pusha
xchg
dec
je
scas
mov
aad
enter
pop
enter
mov
dec
adc
pusha
dec
ret
push
fdivs
cltd
mov
xlat
push
enter
fs
test
dec
inc
insl
pusha
fs
rorl
cwtl
cmpl
imul
xchg
inc
adc
js
inc
fmull
fmul
loopne
pop
push
xchg
leave
ret
add
cmpl
cmp
xchg
inc
xchg
xor
push
sbb
inc
pop
sbbl
outsb
leave
add
arpl
dec
jle
push
add
push
cmp
icebp
cmpsb
add
inc
sbb
call
lea
xchg
aam
xchg
divb
mov
leave
push
loopne
lahf
call
add
jle
sub
pusha
or
mov
lahf
push
test
lret
mov
sub
and
mov
mov
shrb
inc
add
cs
or
or
into
mov
sbb
in
les
adc
and
or
rcrb
xchg
mov
adcb
int3
inc
sarb
and
ret
xchg
out
fs
add
pushf
cmpsl
loopne
bound
call
clc
adc
cmp
cli
inc
shlb
mov
negb
out
push
push
push
rcr
repz
icebp
mov
out
cltd
fadd
add
pop
or
push
cmp
idivb
addr16
dec
and
adc
push
les
sbb
sub
inc
xor
enter
cld
pushl
jo
or
cmp
dec
mov
pop
orb
jnp
mov
add
in
shlb
pop
and
xadd
inc
xchg
sub
rcll
mov
mov
jns
mov
repz
std
jle
test
push
xor
repz
sub
sbb
or
mov
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
or
fucomip
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
outsl
lock
xor
xor
sub
daa
adc
mov
rcll
xchg
adc
push
or
cmp
rclb
cmpl
cmp
imul
push
pop
xchg
lods
fs
out
sahf
cmpsl
and
xor
inc
fnstenv
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
gs
xor
insb
xor
cs
adc
popa
and
popa
je
outsl
cmp
mov
push
mov
pop
lock
bsr
lret
push
xor
incl
mov
testl
push
inc
outsl
jb
insl
mov
je
jb
gs
cmp
or
outsl
add
gs
cs
add
push
gs
push
andb
je
mov
popa
jb
mov
inc
imul
dec
xor
xor
testl
cmp
out
stc
sub
dec
and
jns
add
das
or
in
mov
dec
push
inc
inc
gs
insl
out
out
or
daa
dec
outsl
jbe
dec
arpl
out
lock
femms
jo
sub
addr16
dec
jne
repz
mov
inc
jo
imul
jb
push
inc
into
cmp
insb
adc
xchg
cmp
sahf
jae
xchg
xchg
cltd
mov
push
jne
xor
loope
and
daa
push
scas
clc
std
adc
aaa
sbb
dec
js
push
jne
pushf
jae
jbe
inc
sub
cmp
push
popa
das
jo
or
cmpsl
cmp
lock
mov
scas
add
add
sbb
iret
or
scas
fstpt
mov
adc
inc
test
sub
shl
jmp
sub
sub
cs
movsl
cmp
cmp
ds
inc
adc
pop
pop
push
pusha
insl
cli
push
push
cmp
jge
jg
cmp
fildl
imul
out
adc
or
adc
lock
push
inc
insb
jae
repnz
fs
mov
inc
mov
cmp
mov
xor
imul
and
dec
push
push
insl
in
inc
sbb
or
dec
dec
inc
sbb
lods
and
add
xor
sbb
cmpsl
jp
inc
outsb
push
jo
imul
insl
push
xor
int
mov
je,pn
jo
ret
push
xchg
idivb
and
fsub
xchg
enter
and
scas
cltd
fsts
adc
or
xorb
insb
mov
and
daa
mov
jne
scas
sbb
dec
insl
and
insl
push
xchg
add
notl
sub
aaa
add
mov
sub
inc
lcallw
out
fldl
mov
and
in
cmp
mov
sbb
jp
xorl
push
pop
es
or
outsl
je
push
or
push
and
push
ds
lods
rorl
fidivrl
add
mov
xchg
sarb
daa
sub
es
and
das
arpl
cmp
arpl
dec
popa
sub
mov
in
mov
fiadds
inc
xchg
mov
imul
pusha
int
int3
or
push
sbb
lock
popa
pop
enter
xor
jo
and
gs
push
fistps
adc
int
push
or
xor
scas
shll
hlt
pusha
enter
dec
add
add
xor
fdivs
outsl
outsl
ss
adc
fs
jo
cli
jbe
add
inc
or
sahf
inc
xchg
push
mov
in
pop
push
gs
sarl
mov
jle
outsl
push
or
mov
imul
push
cmp
sbb
bound
cmp
adc
jno
insl
in
ljmp
imul
scas
loopne
imul
inc
sbb
inc
jno
rolb
push
leave
nop
enter
inc
insl
imul
int3
fnstsw
adc
repnz
add
add
mov
push
and
pop
sub
cmp
addr16
push
cmp
push
jae
xor
fdivl
addb
pusha
jo
sub
add
adc
data16
lret
inc
sub
pop
dec
jmp
pop
sti
pop
cmp
push
and
cmp
pop
mov
fstpl
pop
inc
inc
and
mov
cmp
jg
lcall
iret
sub
add
fimull
sub
rol
das
lret
jmp
fisttps
push
icebp
pusha
inc
mov
clc
ret
movsl
add
addl
jae
push
loop
or
outsb
imul
into
in
test
add
add
xor
repnz
js
jae
aaa
mov
pop
dec
pop
add
add
clc
cmp
sub
push
imul
add
add
mov
sti
out
add
push
add
add
add
mov
cmp
pop
or
aaa
ds
push
pop
hlt
and
out
imul
pusha
push
js
or
sub
jg
cmp
add
sbb
addb
mov
push
xchg
test
add
outsl
mov
pop
daa
push
cmpb
into
in
fsts
and
sub
jb
int3
push
imul
push
loop
xchg
loop
xlat
push
stos
int3
js
fbld
push
pop
dec
rorb
sbb
add
lea
xchg
dec
cmp
jb
xchg
pop
xchg
xchg
inc
mov
clc
es
filds
push
or
xor
xchg
push
inc
ds
pop
pop
dec
cmp
test
and
loope
adc
cmp
loope
adc
data16
adc
adcb
repnz
cmp
pop
rcrb
xlat
mov
and
sub
and
adc
xchg
sbb
adc
add
insb
add
addb
jb
shlb
add
movsl
or
fs
adc
add
add
fildl
ja
in
je
or
add
mov
pop
sub
push
test
out
jg
push
addl
mov
decl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
ljmp
mov
mov
mov
mov
mov
ret
enter
dec
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
movsb
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
dec
mov
add
rorb
push
adc
cs
sarl
add
nop
pushl
fists
outsl
ja
aas
das
cwtl
movsb
inc
cs
jae
jb
bound
sbb
stos
inc
data16
lea
arpl
mov
jne
daa
pop
lea
dec
mov
outsl
js
push
fisubs
push
inc
push
mov
inc
cmp
xchg
sahf
insb
gs
mov
dec
push
test
daa
add
insb
in
dec
imul
mov
imul
ds
and
inc
jb
jns
daa
addl
jb
lds
push
jns
mov
jne
push
sbb
lcall
stos
or
cmp
outsb
pushw
push
inc
sub
mov
xor
mov
push
pusha
testb
fiadds
push
push
lahf
imul
fisubl
lea
clc
pop
lcall
lock
adc
pusha
gs
mov
es
sub
aad
dec
lahf
faddl
sub
cwtl
xchg
pop
pop
push
push
jae
loopne
mov
cmp
cmp
sbb
jae
addr16
orl
imull
outsb
gs
mov
bound
rolb
fstpl
push
push
push
dec
testl
dec
loope
push
mov
push
in
cmp
mov
adc
mov
mov
sub
ret
imul
mov
cwtl
push
inc
adc
nop
lods
sbb
jg
xchg
push
fadd
mov
jg
sub
push
or
mov
je
outsl
xchg
daa
xchg
mov
popw
lcall
jl
cmp
cmp
cmpsl
jnp
notl
das
push
sub
insb
mov
push
jle
sub
sub
xchg
dec
sub
sub
push
cmp
pop
push
inc
jmp
cmp
and
add
in
out
inc
dec
pop
pop
cwtl
jb
sbb
sbb
jb
imul
loope
mov
push
jbe
out
cltd
lods
sbb
and
jae
cltd
adc
sub
and
jl
lahf
sub
or
daa
cld
push
hlt
push
call
repz
mov
mov
cwtl
cmp
sti
push
aam
fistpll
mov
nop
mov
enter
iret
repz
addb
js
jo
sub
jns
pusha
add
pop
pop
dec
ja
in
shll
add
push
int3
adc
out
jns
rcr
push
push
push
dec
dec
push
inc
or
stc
cmp
clc
inc
lock
cmp
roll
cmp
sub
sahf
idivl
and
sbb
jbe
adc
pop
jns
incl
int3
out
sahf
out
lods
mov
fdivrp
mov
incb
test
out
sahf
out
inc
xor
sub
repz
sbb
std
in
loopne
mov
iret
repz
insb
inc
sbb
cld
jns
out
aam
mov
dec
lods
push
out
cmpsl
pop
aam
test
test
shlb
add
outsb
push
xor
push
in
ljmp
inc
outsl
pop
cmpsb
bound
fs
cmp
xchg
jb
jae
jb
xor
sahf
cmp
or
psubb
sub
add
sarb
push
sub
push
insb
cmp
inc
inc
dec
jae
insb
jnp
lods
insb
inc
mov
sbb
decl
push
dec
inc
dec
xor
inc
dec
dec
dec
push
push
loop
and
fbld
out
inc
dec
add
dec
dec
inc
add
adc
sbb
jo
adc
incl
popa
into
mov
jmp
adc
jnp
inc
loop
mov
ds
pop
idiv
cmpl
pop
clc
lret
sbb
jb
das
in
jg
jge
arpl
cmp
adc
dec
scas
jp
adc
in
fstl
mov
and
cmp
call
cmpsb
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
fistpll
xor
incb
int3
dec
dec
xor
dec
popf
pxor
add
pushl
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
lcall
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
loopne
out
fcoml
or
scas
int
mov
pop
leave
loop
mov
out
xor
xchg
dec
mov
lods
sti
psraw
xor
mov
iret
adc
xor
pop
std
addr16
adc
es
sbb
sbb
push
mov
es
or
outsb
jbe
and
add
test
push
das
inc
cmp
mov
les
int
clc
daa
inc
testb
push
je
iret
repz
push
dec
push
sub
jmp
push
pop
sbb
dec
sub
sbb
pop
adc
push
or
pop
xor
dec
es
push
das
adc
es
sbb
cmp
cmp
push
adc
sub
jle
fistpl
dec
pop
inc
sbb
sbb
jbe
adc
fsubrp
sub
ss
cmp
sbb
pop
push
or
neg
in
sbb
cmp
pop
sub
pop
add
adc
push
cmp
insl
out
adc
xor
pop
and
add
or
lods
inc
push
fsubr
fistps
ret
pop
push
pop
xor
add
mov
pop
dec
or
add
sub
push
adc
cmp
pop
cmp
out
push
push
or
adc
sub
or
pop
ljmp
int3
cld
and
sub
pop
daa
dec
pop
sub
dec
push
sub
jmp
sub
or
jge
inc
and
outsb
adc
cmp
or
imul
mov
pop
aad
dec
and
lahf
push
sbb
pushf
es
test
mov
lea
inc
cmp
or
sub
maxps
std
push
xor
add
adc
sbb
pop
sbb
xor
adc
fisubrl
sbb
xor
rorb
outsb
mov
pop
adc
cmp
and
pop
mov
dec
bswap
sbb
sbb
rclb
or
mov
push
adc
add
mov
add
mov
imul
outsb
repnz
mov
imull
or
es
clc
ja
pop
push
gs
xchg
adc
ja
incl
or
or
cmp
add
mov
pop
and
mov
push
pop
push
push
pop
sbbl
add
ja
jecxz
pop
adc
xor
pop
push
pop
cmp
movsl
push
inc
ljmp
jnp
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
xlat
jne
mov
daa
adc
push
jne
jg
sahf
out
addl
xchg
iret
repz
lahf
push
mov
xor
idivl
push
repz
sub
and
push
std
daa
or
es
and
dec
negl
adc
sub
hlt
cmp
mov
push
and
add
adc
push
popa
push
ljmp
inc
popa
outsb
fmuls
je
push
mov
push
popa
je
xchg
inc
mov
clc
popf
fildl
dec
bound
xor
and
push
or
in
cmp
sub
repz
bound
xchg
ds
mov
faddl
idivl
aas
aas
jns
out
push
push
push
jno
lods
out
int
fisubs
notb
cmp
sub
jbe
das
adc
roll
sbb
push
mov
imul
scas
cs
add
xlat
adc
sbb
dec
sbb
ret
push
cmp
pop
vmread
inc
popf
stos
ret
aad
dec
mov
adc
and
ja
push
pop
sbb
pop
jno
adc
nop
add
jmp
icebp
mov
push
adc
sbb
push
cmp
adc
jl
mov
push
jmp
and
push
xchg
add
jb
popf
pusha
cmpsb
xchg
pop
pop
push
insb
push
add
inc
and
and
pop
cwtl
or
lods
sub
or
sub
push
pop
or
xchg
adc
pop
adc
or
fimull
iret
fidivrl
js
dec
xor
cmp
cmp
xor
imul
jae
ja
xor
sbb
xor
or
pop
dec
push
or
push
pop
add
xchg
xchg
shlb
fs
cmp
ret
fisubrl
push
dec
pop
fildl
sub
daa
pusha
popa
push
pop
xchg
sahf
push
adc
adc
dec
dec
or
mov
adc
xor
es
inc
adc
push
add
push
cmp
mov
rol
or
cld
jmp
pushf
add
inc
and
mov
sbb
or
jo
pop
push
sub
dec
pushf
and
adc
lock
jle
pop
sub
xchg
imul
lods
dec
sbb
sbb
or
add
xchg
inc
add
push
data16
mov
xchg
testl
adc
xchg
es
cmp
mov
in
in
es
or
rolb
push
adc
cmp
or
sbb
xor
or
cmp
or
push
icebp
push
faddp
in
xor
pop
pop
cmp
ret
scas
and
into
aaa
daa
loopne
jmp
push
dec
xor
mov
es
sub
cs
into
cmp
inc
jge
loopne
outsb
js
test
sbb
mov
or
and
shlb
pop
adc
and
or
jbe
xor
inc
adc
sbb
js
pop
mov
cmp
push
xor
adc
nop
add
and
bound
sbb
dec
dec
adc
xchg
ret
fwait
push
xchg
adc
shr
je
and
pop
dec
cmp
push
gs
xor
scas
scas
in
jbe
int
dec
dec
mov
push
mov
sub
adc
ret
ds
dec
inc
testl
bound
inc
daa
dec
adc
dec
xor
pop
push
adc
push
add
push
adc
xor
loopne
add
sahf
imul
or
adc
fsts
ret
mov
clc
xor
lods
lock
pop
xchg
cmp
pop
imul
cmp
adcl
adc
nopl
push
and
mov
js
notl
add
or
loopne
fistpll
or
sbb
mov
imul
xor
dec
xor
jl
jns
popa
lcall
ja,pt
or
int3
add
push
test
jae
insl
popa
imul
fistpl
push
pop
outsl
jo
push
clc
in
pop
jle
sbb
push
ja
pop
out
and
adc
push
dec
repz
mov
mov
xor
iret
cmp
mov
xlat
cmp
pop
sub
add
jg
and
add
lods
mov
cmp
adc
clc
mov
pop
je
xchg
mov
or
ret
mov
and
sub
mov
sub
loopne
inc
xor
inc
addr16
scas
adc
sub
pop
push
or
push
rcll
out
jg
push
dec
push
push
pop
sbb
pop
add
sbb
out
or
jnp
pop
fs
xor
sub
orb
dec
scas
xchg
stos
call
jge
out
fisttpl
xor
add
xchg
cli
pop
cmp
addb
mov
loope
or
push
push
add
pcmpgtb
add
adc
les
push
popf
add
pop
clc
cs
testl
mov
sub
pop
adc
sbb
cmovno
or
pop
and
jl
and
push
pop
or
and
and
outsb
sub
and
sub
sahf
fcmovnb
and
sti
add
push
dec
les
loop
jae
gs
push
jo
out
cmp
pop
mov
push
pop
sahf
out
sahf
sbb
push
jl
out
andl
jl
iret
rorl
or
xchg
je
pop
or
cmp
sbb
mov
add
adc
fstpt
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
sbb
sub
mov
insb
add
das
or
insb
ds
adc
pop
add
int
mov
add
dec
str
add
stc
das
jno
push
pop
incl
inc
push
push
push
das
xor
xor
dec
jbe
jp
xor
and
mov
sub
pusha
add
pop
mov
adc
inc
addr16
outsl
inc
mov
dec
sub
xor
je
outsb
jae
push
mov
test
mov
mov
sub
xchg
or
xor
outsl
imul
xchg
fbld
xor
hlt
lods
pop
cs
xor
push
fwait
xchg
dec
xchg
pop
pop
pushf
sbb
cmovbe
wrmsr
lahf
jo
and
incl
popa
pop
sub
or
push
loopne
ss
stos
mov
adc
push
push
pop
cmp
hlt
push
lahf
pop
sbb
pop
xchg
dec
push
push
or
xorl
adc
mov
andl
mov
cmpb
add
pop
sbb
cmp
adc
jle
cmpl
pop
inc
inc
cmp
mov
pop
xor
xor
mov
insl
xchg
sbb
inc
xor
fstps
aam
aaa
loop
mov
leave
lret
push
push
xchg
and
ficompl
inc
insb
and
inc
cmp
dec
push
push
xchg
aad
and
push
xor
pop
stos
push
cwtl
sbb
and
add
adc
out
mov
sarb
test
jo
test
or
je
pop
adc
jbe
and
pusha
test
inc
push
or
push
mov
add
add
les
sub
js
adc
out
pop
fs
pop
inc
push
adc
or
les
roll
fcompl
mov
mov
jbe
jns
fnstsw
scas
xchg
dec
jno
push
or
pop
rclb
rolb
syscall
scas
add
and
lfs
xor
cmp
inc
pop
inc
pop
cmp
sbb
push
out
sub
or
daa
iret
repnz
or
dec
xor
fcmovb
push
jo
sbb
call
fsubrl
data16
mov
fisttpll
mov
stc
xor
stos
loope
jmp
daa
fiadds
add
xlat
pop
ds
rorl
xor
je
cld
ret
push
jo
add
rcrl
xor
das
or
enter
push
inc
inc
push
pop
jo
dec
inc
inc
add
xorb
xchg
aaa
lock
das
shl
aam
stc
push
dec
outsb
jnp
adc
dec
cmp
enter
or
sub
push
dec
daa
inc
push
jnp
inc
adc
sub
xor
inc
ja
jmp
sub
aam
int3
and
sub
inc
sbb
or
push
xchg
pop
add
hlt
push
lods
sbb
mov
sbb
sbb
and
jno
mov
stos
push
fcoms
pop
pop
clc
ficomps
cmpsl
cwtl
xor
adc
lret
cmp
push
in
movsl
test
popf
or
and
dec
in
add
adc
jnp
sub
outsb
addl
cs
mov
lea
push
cltd
sbbl
dec
and
pop
jg
or
push
es
mull
sbb
test
test
or
fiaddl
jo
ss
sbb
das
adc
and
call
test
inc
lods
dec
sub
adc
or
pop
scas
cmc
mov
add
jle
mov
in
xchg
cmp
enter
jle
adc
cmp
add
xor
fdivrl
or
pop
insl
push
xchg
and
pop
jmp
jp
and
lea
loopne
push
fs
xchg
and
dec
sbb
or
clc
filds
sub
add
sub
sub
daa
or
inc
mov
or
sub
sti
xor
daa
dec
or
sub
int3
and
sbb
sbb
and
sub
sub
loope
xlat
or
mov
add
fcomps
jmp
inc
mov
pop
push
and
push
loopne
xor
jns
setnp
sbb
sbb
cmp
mov
or
xor
adc
aas
lock
adc
push
cmovg
aam
cmpsl
hlt
cmp
pop
dec
jp
sbb
sbb
xor
mov
add
adc
or
inc
fadds
stos
das
adc
push
push
adc
cmc
sbb
mov
addr16
sub
rclb
mov
fnstcw
cmp
jge
loopne
adc
pop
sub
mov
add
dec
cmp
pop
mov
or
pop
sbb
cmp
fwait
inc
mov
adc
xor
inc
mov
pop
add
mov
or
cmp
into
add
inc
xor
sub
out
js
stos
pop
or
loopne
es
fdivrs
adc
cmp
pop
inc
cmp
loop
cmp
xor
fdivp
adc
add
adc
cmp
and
push
dec
pusha
dec
sub
dec
cmp
popa
or
imul
xchg
jbe
js
cmp
sub
sub
xorb
insl
and
sub
sbb
movsl
xor
cmc
xor
inc
loopne
pop
xor
or
stos
xchg
movsl
cmp
adc
cmp
and
jns
loop
shll
int3
and
inc
sub
push
add
insb
cmp
pop
cmpsl
sahf
addr16
cmpsb
shll
dec
sub
scas
sub
popf
je
insl
mov
xorl
xchg
rorb
scas
adc
jb
xor
dec
xchg
and
add
dec
decl
icebp
or
push
inc
or
sub
and
nop
xorl
mov
or
in
jg
pop
scas
aas
dec
or
and
inc
jnp
pop
xchg
push
jbe
push
ror
lods
push
mov
inc
pop
xor
adcb
dec
arpl
fstpl
and
cs
icebp
jle
hlt
out
add
pop
or
sbb
mov
dec
inc
daa
adc
jo
dec
add
pop
dec
mov
ds
int3
pop
inc
inc
inc
push
pop
pop
xor
in
or
cmp
push
sbb
fs
icebp
adc
je
in
test
adc
adc
ss
mov
and
push
nop
push
insl
stos
pop
push
push
or
xchg
jo
jge
sub
ja
push
clc
jbe
es
aas
cmc
decl
insb
gs
ja
fs
adcl
push
pop
in
add
dec
das
push
insb
mov
adc
shrb
sbb
testb
inc
inc
add
ds
push
xchg
or
and
mov
ja
in
mov
push
lock
adc
push
push
iret
repz
dec
pop
push
mov
out
int
imul
pop
push
lret
pop
inc
ja
pop
ljmp
shrb
xchg
add
dec
push
dec
dec
jne
cld
mov
shlb
mov
mov
ljmp
out
pop
sbb
ljmp
mov
ja
mov
lods
pop
dec
movsl
cmpsb
mov
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
in
cld
test
cmp
mov
scas
loope
mov
xor
pop
sbb
imulb
and
jle
jo
fsubs
ljmp
sbbb
test
xor
dec
xchg
pop
shl
dec
push
bound
sti
inc
add
pop
adc
incb
push
and
xor
aaa
xor
add
mov
and
int
push
movsl
mov
pusha
dec
add
push
fadds
jb
out
in
fldt
push
dec
imul
pop
mov
insb
sub
leave
jae
sub
cmp
cmp
pop
lods
sub
sbb
leave
jae
xor
cmp
and
sahf
xchg
inc
in
dec
fsubl
js
sahf
int3
dec
mov
pop
pop
je
inc
js
cmp
pop
add
push
mov
pop
aam
ficoml
ret
pop
lcall
push
dec
lds
inc
cmp
xor
pushl
inc
sub
sub
xor
inc
xor
inc
pop
xor
test
mov
bound
lods
fildll
jbe
adc
add
lcall
sub
jbe
sub
andl
lcall
jb
mov
stos
aaa
bound
je
bound
jo
cld
gs
adc
xor
mov
and
dec
inc
sbbl
test
xchg
pop
and
das
pop
dec
ja
sub
sub
and
js
pop
push
or
iret
out
cmp
fs
inc
aaa
lock
mov
mov
aaa
repnz
out
or
andl
das
cmp
add
pop
xchg
nop
push
outsb
dec
dec
and
das
or
add
ret
jg
add
and
es
inc
pop
stos
add
push
neg
fisubrl
dec
inc
pop
xor
pop
jns
lock
cmp
push
sbb
and
add
adc
mov
sub
mov
mov
sub
adc
in
das
dec
pop
or
cmp
sub
mov
mov
dec
fs
mov
sub
enter
outsl
pop
push
stos
pushf
es
push
xlat
pop
cmpsl
stc
xor
ds
xchg
loop
mov
repz
lahf
outsb
in
aad
imul
jo
xchg
in
in
or
push
pusha
fisubl
fisubs
adc
je
mov
or
pop
jl
mov
jl
insb
lahf
xlat
insb
jl,pt
push
push
pop
add
es
bound
mov
cmpsb
ret
xlat
jl
add
push
cld
add
mov
jg
lods
dec
daa
dec
aas
pop
movsb
popa
scas
test
sarl
lds
pop
cmp
dec
call
mov
sti
sahf
data16
rolb
mov
cmpsb
fcoms
ja
enter
and
outsb
push
dec
ss
out
out
movl
xchg
jns
cmpsl
stc
aaa
test
mov
out
mov
fs
add
mov
push
cwtl
call
xchg
sbb
loop
ss
cmp
out
push
inc
push
xchg
xchg
cltd
cmpsb
inc
mov
testb
push
push
cwtl
pop
mov
aad
xor
testl
cltd
cmp
js
out
lcall
jge
notl
mov
mov
aaa
outsl
test
ljmp
je
in
int
cmp
fwait
aaa
fucomip
repz
mull
clc
fiaddl
xor
push
xor
ret
rorb
mov
enter
jge
mov
cmp
push
out
out
sbb
sub
inc
js
cmp
mov
incl
repz
sarl
stos
leave
call
pop
mov
mov
mov
stos
clc
cmp
and
mov
aas
adc
in
repz
push
mov
jge
repz
cmpsl
lock
cs
jle
stc
cmp
lahf
mov
int
jns
dec
ja
iret
xchg
es
out
lcall
xor
out
in
es
inc
ret
repz
inc
mov
aas
or
aad
pop
dec
sbb
incl
scas
sub
adc
stc
add
or
out
adc
adc
push
mov
xor
adc
bound
mov
pop
mov
cs
mov
loopne
mov
test
pop
int3
push
das
in
sti
and
pop
sbb
enter
adc
push
cmp
iret
pusha
or
sbb
pop
adc
add
add
inc
pop
outsl
dec
sub
popw
inc
xchg
outsb
pop
aad
jbe
push
jae
popa
call
mov
ljmp
inc
sbb
out
je
addr16
push
pop
gs
cltd
push
dec
cmp
xlat
push
repnz
jae
testl
mov
divl
ljmp
cmpsb
dec
add
jbe
in
xorps
push
insb
pop
pop
push
out
jb
dec
pop
je
jns
ja
xlat
aaa
push
fisttps
jp
das
push
in
jno
ret
outsb
or
cmc
xor
jbe
iret
push
pop
test
out
pop
retw
js
frstor
or
dec
mov
ja
cmp
and
nop
push
fstpl
add
xchg
inc
rorb
cmp
out
adc
push
ds
sbb
das
outsb
popa
jns
sbb
insl
jo
jle
insb
je
push
imull
jg
popa
jo
jae
es
outsl
and
aas
sub
fstpt
adc
and
cmpsb
ljmp
lods
push
or
cmp
xor
sti
jbe
xor
xor
cmp
cmp
push
xor
xor
cmp
cmp
add
and
add
or
pop
data16
out
dec
das
or
push
sbb
sahf
imul
pop
add
or
lret
add
add
pop
jl
dec
push
fdivrl
xchg
pop
xchg
inc
mov
pop
fmuls
xor
cmp
ljmp
dec
sbb
xorb
sbb
adc
cmc
dec
sbb
push
inc
cmp
inc
pop
call
testb
js
xor
es
xor
xor
pop
inc
in
cmp
jmp
in
add
add
adc
xor
lods
inc
inc
pop
popf
repnz
call
adc
cmp
cmp
jae
fs
test
sbb
sarb
lock
aaa
cmp
pop
test
inc
push
adc
push
xor
xlat
nop
cmp
sarl
cld
xchg
sub
cmp
arpl
push
cs
adc
xchg
out
xchg
push
shll
and
mov
push
adc
mov
std
or
ret
sbb
adc
sbb
notl
push
pop
sbb
or
daa
stos
popa
dec
pusha
test
or
enter
gs
lcall
mov
es
repz
mov
inc
daa
or
jo
xor
stos
das
mov
lea
fiaddl
aaa
lahf
insl
or
or
mov
sbb
daa
mov
cmp
loopne
stos
inc
das
jbe
lods
mov
lods
daa
or
lea
pusha
mov
bound
das
adc
aaa
iret
dec
sbb
jecxz
aas
pop
inc
test
gs
ret
daa
test
push
push
imul
daa
outsl
shll
xchg
adc
jecxz
pop
insl
mov
sbb
xor
popf
repnz
cmp
das
or
shlb
fld
fwait
mov
push
cmovs
mov
sub
pop
xorb
pop
xchg
or
lea
pop
add
outsl
insl
dec
pop
int
addr16
aad
add
jg
rorb
mov
mov
mov
fwait
fwait
outsb
mov
inc
pop
and
mov
inc
imul
rclb
cmpsl
sub
adc
adc
sbb
and
mov
inc
aaa
add
dec
das
push
adc
inc
and
je
inc
jmp
adc
or
sub
jg
subb
mov
imul
and
dec
js
gs
cmp
sub
outsb
cmpsl
imul
adc
rolb
xchg
add
stc
rol
sbb
pop
xchg
in
adc
nopl
cmp
aaa
add
or
and
and
aas
cmp
das
push
cmp
je
pop
xor
push
and
xor
loope
loopne
mov
mov
fcompl
cwtl
xor
push
js
adc
and
inc
hlt
sbb
fisubs
add
inc
or
push
mov
pop
repz
bound
negb
inc
fsubr
pop
das
dec
pop
sbb
mov
or
and
push
adc
sbbl
adc
insb
and
popa
lcall
sub
and
jle
aas
mov
inc
sub
lea
enter
add
ret
xor
jle
xor
jnp
ret
inc
es
jb
pop
push
add
sbb
sbb
dec
and
dec
call
in
out
sbb
dec
cld
or
shlb
push
fwait
das
dec
les
rcrl
fisubl
mov
push
push
sub
pop
aam
popa
repnz
xor
test
push
pop
xor
sahf
pop
aad
ljmp
wrmsr
or
mov
pushf
push
cmovg
imul
int3
xor
dec
add
fs
add
repnz
xor
je
pop
fistpl
xor
inc
cwtl
mov
faddl
inc
jb
sbbb
xchg
xor
and
loop
push
mov
mov
lret
push
push
xchg
push
xor
xor
dec
shlb
andb
adc
loopne
in
mov
sbb
inc
inc
hlt
adc
inc
jp
test
xor
or
mov
and
or
xor
mov
cmpsl
rorb
xor
push
inc
mov
adc
push
fnstcw
jb
ficompl
aam
adc
js
mov
adc
out
sbb
icebp
les
jb
fwait
adc
jno
popl
pop
pop
sbb
add
push
adc
cmp
pop
dec
inc
or
dec
pusha
dec
idivl
dec
fldt
lcall
pop
decl
test
das
pusha
pop
and
adc
add
insb
stos
xchg
pop
and
xchg
add
sub
enter
stos
or
std
pop
subl
imul
mov
add
dec
dec
cmp
enter
out
sahf
adc
rorb
or
adc
lock
pusha
inc
push
adc
cmc
sub
jns
je
int
add
push
imul
xor
xor
add
sbbb
jl
sub
aas
pop
add
dec
insl
jae
push
sub
pop
adc
push
cmp
push
add
cmp
push
and
sbb
outsl
popf
push
pop
adc
and
sub
dec
pshufw
decl
adc
push
add
pop
cmp
add
pop
dec
cmp
or
sub
sbb
adc
incl
cmp
and
push
sub
dec
invd
xor
sub
or
or
add
aas
ss
adc
pop
push
or
add
sbb
sub
push
mov
sub
add
xor
aaa
xchg
out
cli
ja
sbb
xor
adc
cmp
sub
dec
dec
movups
dec
cmp
pop
inc
cmp
or
push
push
xor
cmp
pop
push
or
push
or
push
or
mov
cmpsl
jno
scas
inc
pop
add
mov
pop
ret
push
sbbb
ror
push
ret
push
or
fmuls
mov
cmpsl
add
push
das
adc
push
and
inc
dec
es
xor
push
std
xor
inc
push
sbb
inc
insb
rolb
test
cmp
out
and
push
xor
add
in
and
lcall
mov
dec
fstl
push
add
movb
mov
sbb
xchg
inc
les
adc
add
ja
pusha
pop
mov
jb,pn
xchg
jp
gs
push
push
lahf
loope
push
and
push
push
sbb
pop
push
dec
inc
dec
push
dec
add
xor
add
and
out
inc
sub
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
jmp
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
cmp
jmp
icebp
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
hlt
call
lret
sub
adc
or
cs
insl
sub
lret
push
jae
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cli
decl
stos
fmuls
lret
rep
cs
arpl
js
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
push
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
dec
or
adc
dec
dec
bound
xor
jp
push
imul
aam
arpl
inc
sub
inc
push
cmp
jb
and
insb
xor
jge
mov
sub
push
outsb
loop
jns
pop
pop
imul
ss
cmp
popa
sub
pushl
jne
or
jno
js
das
inc
je
daa
cmp
pusha
or
cmp
test
das
sub
sbb
xchg
jg
or
or
and
push
aaa
mov
lods
sarb
pop
push
mov
or
in
mov
aas
out
aaa
imul
mov
pop
daa
push
dec
add
aas
xor
lea
dec
inc
or
pop
jecxz
aaa
dec
nopl
xor
mov
push
inc
add
xor
jb
dec
xor
push
inc
add
inc
jns
pop
ja
inc
inc
xor
and
aaa
inc
push
inc
mov
into
inc
ss
cmovb
and
ss
cmpsl
ss
ret
data16
sbb
adc
dec
pop
add
filds
or
pop
js
xchg
shlb
dec
xchg
add
xor
sti
fldcw
bound
test
ds
cmp
push
cmp
xor
fstpl
mov
mov
jns
and
in
add
push
hlt
push
mov
adc
or
jle
sbb
push
push
dec
sub
adc
ret
dec
mov
cwtl
inc
push
movsb
and
js
mov
sub
dec
adc
js
or
adc
sub
cmp
and
xlat
xor
xchg
mov
dec
out
sbb
adc
sbb
jp
sub
or
sbb
mov
jecxz
sub
cltd
push
sub
mov
gs
es
cwtl
mov
add
sub
or
push
mov
push
faddl
jnp
cmp
jmp
addb
and
inc
mov
xchg
mov
and
mov
add
sbb
sub
pop
or
icebp
pop
lret
dec
inc
cs
jo
mov
cmp
js
sbb
mov
jmp
dec
adc
push
test
sahf
popa
inc
inc
icebp
adc
pop
dec
out
xor
orl
adc
cwtl
enter
add
add
xchg
pop
stos
into
adc
or
sbb
mov
and
stos
xchg
in
push
ja
outsb
je
xor
js
addr16
mov
jae
popa
insl
gs
cmp
and
pop
dec
out
add
aad
xchg
or
fistl
loop
xor
sub
ret
and
cs
sbb
int
push
outsl
insb
stos
push
popa
je
mov
xor
add
or
les
push
push
push
adc
mov
and
das
push
gs
pop
pop
push
out
sub
dec
mov
or
push
mov
push
adc
push
cmp
add
xor
xor
adc
inc
sub
aas
xlat
mov
pop
push
das
and
push
add
fisttpl
xchg
pop
jne
and
fmull
mov
or
int
and
and
imul
mov
push
outsl
adc
pop
inc
push
inc
sbb
mov
push
fsub
and
sub
out
js
push
pextrw
pop
cmp
and
pop
call
push
and
fsubrs
dec
adc
popa
dec
call
pop
push
ss
jb
pop
lock
les
push
pop
adc
ss
outsb
inc
mov
jmp
dec
jecxz
xor
cmp
or
ja
add
mov
cltd
mov
jl
push
mov
mov
and
pop
adc
mov
push
dec
cmpsl
push
je
xchg
pop
push
inc
enter
mov
sub
cmc
adc
jmp
jo
outsl
mov
push
movsl
sbb
or
push
push
jb
pop
aas
adc
out
and
adc
or
mov
jge
mov
cld
aas
pop
cmpb
sub
das
scas
pusha
push
and
cmp
arpl
dec
pop
mov
xchg
loop
xchg
inc
test
aas
scas
imul
int3
lods
add
push
sub
or
push
cmp
jle
sahf
das
in
push
xor
imul
sbb
pop
mov
test
sub
inc
cmc
test
into
ja
cltd
add
adc
push
sub
das
imul
call
pop
out
mov
imul
jg
outsl
insb
adc
pushf
pop
pop
pop
pop
and
pop
inc
sub
lock
pop
pop
pop
pop
adc
test
mov
insl
das
dec
xor
pop
dec
pop
fcmovnu
sbb
movsl
jmp
pop
repz
pop
pop
addr16
xor
fmuls
push
push
sbb
xchg
enter
xor
lods
es
rclb
and
fstl
cmp
adc
push
jo
scas
movsb
aas
add
sub
inc
dec
in
add
orb
inc
and
out
cltd
mov
add
cmp
inc
enter
xchg
cmpsb
in
dec
push
aaa
xlat
xchg
fstl
push
jne
or
pop
gs
add
add
jb
jbe
mov
test
xor
sar
and
addr16
popa
adc
push
pop
pop
dec
outsl
and
mov
cwtl
or
mov
inc
push
fimuls
punpckhwd
dec
outsb
push
je
and
fadds
adc
insb
xor
inc
dec
push
inc
sahf
xor
dec
inc
dec
inc
push
pop
or
jb
gs
adc
js
rsqrtps
push
rolb
fwait
pop
daa
cmp
daa
dec
push
dec
jb
or
sbb
ret
dec
mov
push
pop
orb
xlat
js
adc
and
and
bndstx
sbb
inc
scas
and
inc
cmpsl
addb
loopne
idivl
and
orl
ret
jb
in
popf
and
mov
inc
sbb
or
or
add
add
inc
inc
movsb
orl
test
shll
pop
int3
aad
add
aam
pop
jo
adc
and
cmpsb
enter
xchg
mov
dec
pop
pop
adc
sbb
pop
adc
push
xchg
mov
in
or
mov
cmc
cmp
psubsb
pop
add
and
and
imul
xchg
sbb
fimull
mov
lods
xorb
xor
shrl
push
mov
xor
sub
outsl
lahf
les
lock
push
add
mov
pop
push
push
sbb
das
inc
mov
push
mov
jp
insb
mov
imul
add
mov
pop
repz
ds
mov
das
ret
dec
dec
in
lods
insb
dec
add
fucomip
xchg
dec
inc
xadd
sbb
inc
popl
inc
xchg
jno
popl
iret
xor
cmpb
aas
mov
loope
jge
jo
maxps
sahf
add
jbe
bound
mov
add
test
mov
inc
pop
cwtl
fistpl
cmp
aas
add
test
addr16
push
adc
movsb
cld
daa
lret
stos
or
xor
add
outsl
ror
push
aaa
fisubl
add
xor
fwait
mov
pop
add
daa
outsl
pop
inc
jae
mov
push
sbbl
addr16
outsl
nop
sbb
xchg
pop
leave
xchg
inc
inc
leave
xchg
pop
leave
cmp
pop
leave
xchg
pop
sub
and
pop
leave
xchg
add
daa
add
and
pop
and
iret
sarl
push
mov
push
lock
mov
ss
insb
les
jns
cmpsl
test
cmp
pop
cmp
or
pop
xchg
jl
into
repz
xlat
pop
pop
sahf
pop
pop
ds
pop
imul
pusha
or
pop
aam
cmp
out
fcompl
movsb
mov
pushf
loop
pop
push
jo
and
xchg
push
add
movl
js
inc
std
pop
fsubs
int
inc
es
les
in
add
jns
jl
or
add
pop
cmp
add
jns
sbb
mov
or
push
and
idivb
xor
mov
sub
jg
in
pop
ja
jl
and
ja
add
dec
xchg
dec
mov
dec
outsl
cld
push
mov
pop
dec
shll
das
cmp
inc
pop
dec
outsl
leave
mov
or
filds
inc
inc
pop
adc
inc
cwtl
in
sub
outsl
fbstp
xchg
pop
cwtl
cmp
in
das
in
pusha
pop
ss
add
dec
adc
and
dec
xor
jl
xchg
or
jb
pop
scas
add
jo
out
and
add
mov
mov
jb
daa
xor
cld
mov
jl
pop
pop
or
pop
scas
fsubs
outsl
adc
sbb
daa
push
xor
shlb
xchg
cmp
xor
rorb
or
add
and
je
fstps
loopne
adc
jns
movsb
add
pop
scas
pop
pop
insb
pop
movsl
pusha
shll
les
lahf
add
dec
xchg
and
pop
jg
add
lock
bound
sub
xor
dec
pop
sbb
push
sub
fwait
nop
pop
fs
jo
fildll
ret
push
xor
fbld
outsl
and
and
rcrl
pop
movsl
loopne
popa
jbe
add
add
dec
xchg
fsubs
out
shlb
sbb
xorb
xlat
cmpsl
and
or
xor
push
aaa
addr16
idivb
sbb
ret
mov
in
idiv
cld
push
add
jns
jb
daa
add
mov
sub
dec
pop
int3
add
cmpsb
lahf
mov
lahf
imul
cmp
jg
dec
lret
fsubp
push
enter
add
pushf
xchg
fisubrs
adc
pop
and
jae
and
sub
sbb
sbb
ja
popa
idivl
cmpl
or
push
push
outsl
mov
cmp
jg
mov
mov
pop
lods
mov
cld
push
push
mov
rorl
scas
pop
sarb
mov
push
movsb
mov
imulb
nop/reserved
or
pop
leave
jae
adc
dec
mov
xchg
out
test
and
dec
mov
xor
mov
xlat
leave
or
or
xchg
sub
shrl
lods
fsubl
pushf
adc
or
pop
push
add
adc
and
inc
outsl
and
pop
ds
repnz
add
scas
ja
daa
in
clc
arpl
push
ret
push
pop
mov
aaa
mov
mov
imul
add
or
bound
test
add
jecxz
lock
xchg
fsubs
cwtl
mov
jnp
or
xchg
sbb
jg
dec
sahf
or
dec
repnz
insl
mov
pop
gs
add
es
mov
or
inc
add
lods
in
sahf
int3
aam
mov
in
dec
sub
fisttps
inc
jmp
inc
push
or
xchg
sbb
das
outsl
add
ss
inc
aad
pop
fs
inc
mov
nop
popw
mov
roll
add
rcl
aaa
in
xchg
dec
scas
dec
ds
cmpsl
add
add
iret
xor
xlat
andb
add
rol
push
out
les
or
add
hlt
sahf
push
sub
or
push
dec
jns
data16
push
push
xor
cmp
repz
les
xchg
or
mov
or
cmpsl
jb
pushf
aas
or
je
pop
mov
push
popa
inc
outsl
add
cmpsb
nop
fwait
pop
or
fists
or
sbb
push
xchg
pop
and
add
cmpsb
mov
ret
roll
scas
xor
push
test
add
sbb
push
aam
xchg
ret
out
popl
mov
rorl
sub
xor
inc
pop
or
addr16
mov
daa
add
ss
nop
add
movsb
loopne
fcompl
sbb
outsb
call
loopne
add
xlat
adc
insb
insl
and
mov
int
insl
daa
xor
pusha
shrl
cmpsl
jo
dec
insb
push
test
jecxz
aas
or
inc
mov
mov
mov
ja
inc
pop
lods
pop
mov
outsl
lods
nop
iret
and
adc
pop
insl
in
fwait
and
sub
xlat
retw
push
sbb
pop
das
sahf
mov
mov
pop
mov
arpl
pop
fmul
mov
lds
and
sub
mov
lods
repz
orb
cld
dec
push
jae
cmpsl
shl
jns
out
jp
sbbb
cld
pop
jnp
pusha
jnp
iret
repz
lret
out
or
lahf
out
aas
lret
out
jge
out
ds
repz
cltd
ljmp
cmpsl
stc
cmp
inc
jg
sahf
sarl
orb
iret
repz
mov
push
dec
repz
orl
out
cmp
cld
pop
test
pop
cmp
out
mov
add
iret
repz
shl
xchg
xchg
sahf
out
cmp
in
sub
lahf
out
mov
lcall
ret
out
imulb
mov
and
ja
rolb
mov
repz
out
fstl
mov
out
lea
pop
mov
idivl
iret
repz
dec
cmp
repz
mov
cltd
cmpsl
stc
out
repz
xchg
push
push
inc
xchg
iret
iret
repz
cli
sbb
cld
lahf
out
ds
imul
xor
ljmp
imul
cwtl
inc
mov
imul
dec
lcall
pop
fwait
mov
xor
mov
popfw
mov
iret
sarl
negb
lahf
cmp
shrl
mov
lds
cmp
pop
mov
sahf
out
jl
mov
lcall
movsl
nop
lret
push
cmpsb
dec
ds
jns
fcoms
cmpsl
int3
add
xor
out
aas
and
test
repz
or
int
fildl
popa
mov
sarl
sbb
repz
iret
cld
aaa
scas
xchg
ficoms
scas
out
ds
fldenv
sarl
jmp
mov
lahf
ja
sahf
mov
push
push
cld
inc
mov
repz
cmpsb
mov
out
ds
mov
sarl
adc
and
jg
iret
mov
out
push
stos
ficomps
ret
out
push
mov
ret
cmp
repz
les
ds
rcrl
mov
jns
mov
cmp
in
stc
int3
outsl
int
sarl
fstpl
mov
iret
stc
xor
int
rorb
adc
cmpsb
mov
and
out
aad
fmuls
arpl
rorb
mov
push
jno
add
fmull
push
add
mov
dec
sahf
cmpsl
cmp
add
add
repnz
sub
pop
xchg
inc
dec
and
pop
inc
jnp
rorb
aam
test
inc
es
and
sbb
adc
push
ss
jmp
xchg
add
and
dec
sub
push
mov
cs
fcmove
mov
ffreep
aaa
das
in
mov
enter
pop
xor
mov
ss
push
and
and
cmpsb
inc
shll
shrb
jg
cmpb
aas
cs
inc
orb
fwait
in
dec
inc
mov
stos
dec
push
xor
outsl
mov
jae
push
lock
bound
mov
in
inc
cmp
aas
movsl
loopne
sub
aas
jmp
rclb
push
out
jle
fdivrs
mulb
and
mov
cld
pushf
dec
ss
iret
xor
shr
lea
xchg
push
je
sub
jge
lret
pop
jmp
push
scas
add
aaa
mov
inc
jbe
push
push
daa
fs
xor
jne
mov
mov
into
lsl
dec
xchg
scas
sbb
push
movlps
ds
add
ja
xchg
pushf
in
ja
or
or
jnp
pop
dec
adc
shl
push
xor
sbb
and
bound
out
sub
mov
xchg
push
and
jg
pop
in
scas
push
pop
jp
fimull
daa
popa
aas
and
and
mov
push
ret
pop
js
cltd
fcomp
mov
or
inc
je
ja
mov
mov
outsl
and
dec
jb
and
cld
js
js
jns
push
ret
add
pop
imul
fiaddl
out
es
je
or
test
out
imulb
push
jl
fbstp
mov
fcompl
push
add
add
jbe
stc
faddl
jnp
jb
inc
fwait
dec
push
cmp
and
ja
mov
mov
les
jnp
and
cld
sbb
xchg
add
jnp
jnp
bnd
jnp
push
inc
outsl
in
inc
sbb
and
xlat
mov
cmp
cmpb
mov
and
insl
out
jl
mov
call
jns
or
jl
das
inc
scas
push
dec
cmp
and
jge
cltd
dec
and
jge
jl
cmp
in
gs
jl
push
add
add
add
cmp
cmpsl
pop
mov
mov
out
push
inc
dec
repnz
push
adc
les
adc
inc
in
es
inc
in
dec
push
sub
sbb
cmp
xchg
enter
and
addr16
jns
adc
test
loop
and
js
pop
cmpl
mov
aam
xchg
xchg
xchg
mov
int3
jge
in
sbb
aam
fbld
in
mov
jle
mov
sbb
jle
dec
cs
insb
push
pop
pusha
dec
dec
dec
dec
push
cs
rcrb
outsb
mov
pop
mov
mov
mov
mov
jae
adc
out
push
es
sahf
aaa
push
push
jg
es
enter
jg,pn
ss
jg
dec
pop
mov
out
outsb
jg
add
call
leave
xor
adcl
cmpsl
xor
push
mov
adc
inc
movl
adc
sbbl
and
jl
fcomp
and
daa
sub
jb
dec
nop
push
shlb
adc
or
adc
andb
iret
add
pop
lods
or
mov
jns
dec
and
inc
sub
adc
daa
cmp
fsub
pop
in
inc
dec
cmpsl
lock
jo
in
xorl
add
sbbl
adc
mov
add
test
mov
xorl
mov
ljmp
mov
or
or
cmp
repz
sub
aaa
iret
repz
or
pop
cmp
repz
arpl
outsb
adc
cmp
repz
xchg
iret
repz
adc
mov
sbb
int3
sbbb
test
out
xchg
cmc
push
add
fs
adc
pop
pushf
cmp
aad
mov
add
andl
aaa
cmpsl
xchg
xchg
mov
inc
xchg
fnsetpm(287
add
adc
nop
xchg
dec
mov
leave
and
xchg
xchg
insl
and
leave
push
test
fildl
iret
addb
call
rcrl
test
pop
push
inc
in
pop
xor
lret
add
push
in
pop
and
inc
push
add
mov
out
sarl
daa
sbb
out
pushf
cmpsl
add
enter
sti
test
jns
and
mov
ss
cs
adc
mov
aas
add
fstps
mov
and
jns
test
xchg
cs
mov
dec
fsubl
sbb
mov
leave
mov
xchg
mov
mov
addr16
inc
enter
mov
mov
cs
or
js
pop
aam
cmp
xchg
and
cltd
ja
fmull
aas
dec
and
cmp
sbb
mov
sahf
iret
adc
in
orb
xchg
mov
mov
aam
testl
pop
das
mov
mov
das
das
inc
mov
xchg
add
and
in
in
mov
push
rorb
mov
and
iret
cmp
inc
lcall
lea
test
hlt
adc
insb
xchg
mov
scas
pushf
mov
mov
mov
in
in
iret
cltd
mov
in
in
mov
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
sbb
femms
pushf
pushf
pushf
pushf
or
pushf
pushf
pushf
or
pop
push
pushf
pushf
pushf
pushf
add
cwtl
pushf
pushf
add
xchg
fildl
lock
inc
xchg
popa
outsl
xchg
add
fildl
add
mov
jmp
fmull
inc
repz
ja
fcoms
mov
out
dec
mov
addr16
punpckldq
sbb
out
test
lea
xchg
xchg
mov
in
mov
lgs
push
mov
repnz
int
or
or
clc
add
or
push
adc
insl
xor
add
jb
fldl
cmovnp
dec
leave
jae
mov
arpl
into
jae
orl
das
imul
adc
add
push
mov
jae
or
push
aas
fiadds
scas
pop
leave
jnp
leave
or
xchg
inc
pop
or
fsub
es
adc
cmp
xchg
inc
enter
das
scas
mov
in
mov
mov
mov
mov
or
fldl
pop
and
add
add
xor
pop
inc
lea
dec
sahf
or
inc
dec
ja
das
mov
nop
fwait
cmpsb
add
mov
mov
leave
inc
out
testl
jp
cmp
and
enter
inc
mov
push
add
iret
repz
add
cmp
repz
ja
orb
repz
lea
cwtl
or
cmp
or
adc
push
inc
dec
adc
xlat
xchg
sbb
xchg
and
inc
pop
dec
andps
push
scas
pop
insb
or
jp
jns
jl
test
fwait
or
xchg
mov
inc
loope
xchg
sbb
xchg
push
inc
pop
pop
jno
ret
iret
insl
dec
ds
inc
mov
add
sahf
pop
and
pushf
cli
add
xchg
add
xchg
addr16
popa
ret
add
enter
aam
es
dec
push
les
mov
scas
das
nop
xchg
iret
add
gs
cmp
pop
mov
adcl
nop
lods
xchg
mov
xchg
ret
lret
rcr
jns
out
xlat
jecxz
jmp
repz
sahf
xchg
out
sti
or
adc
adc
xchg
inc
xchg
cmp
xchg
xchg
dec
add
js
jns
xchg
xchg
mov
outsb
xchg
mov
mov
add
cwtl
fwait
in
inc
std
or
loope
cs
cmp
and
xchg
pop
push
add
sahf
out
sahf
add
xchg
or
lahf
or
leave
cs
js
ret
dec
dec
dec
dec
fsub
out
stc
repnz
pop
cs
setae
repnz
cmp
iret
clc
divps
imul
mov
and
mov
out
cltd
leave
jae
sbb
add
mov
xchg
xchg
lcall
push
pop
xchg
repnz
out
packssdw
xorb
add
mov
js
jecxz
fwait
outsl
and
pop
mov
mov
mov
mov
push
jmp
push
push
movb
xchg
aaa
movsb
cmpsb
inc
fwait
ja
mov
repnz
mov
leave
jae
ljmp
xchg
mov
ja
xchg
xor
add
enter
str
xchg
jns
insl
in
xchg
push
das
pop
push
or
cmp
aaa
ud2
imul
fwait
jp
xchg
xchg
sub
add
leave
out
roll
add
and
xchg
lock
in
mov
xchg
xor
mov
arpl
pushf
pop
and
add
pushf
cltd
enter
iret
cmp
rolb
dec
push
add
add
add
push
xor
in
and
outsl
out
cmp
pop
push
add
push
add
divps
nop
xchg
cwtl
test
test
das
repz
fmull
add
add
sti
repnz
cltd
adc
sbb
xor
cmp
ud2
pop
or
pushf
pushf
pushf
pushf
or
push
add
add
add
repz
repz
sbb
push
iret
repz
sbb
sbb
outsb
repnz
jae
and
jns
dec
orl
sahf
and
mov
xchg
iret
sub
lahf
cltd
fcomip
inc
jb
cltd
jl
add
into
leave
or
outsl
sub
add
cwtl
je
in
lcall
testb
lcall
out
add
jbe
bswap
out
jb
jle
push
sbb
leave
add
jg
mov
leave
rorl
in
inc
ds
fstps
sbb
fwait
xchg
pop
fwait
add
pushf
fbld
fwait
sub
xor
outsl
fwait
dec
fwait
iret
or
frstor
iret
xchg
jae
jb
out
xchg
iret
popf
movsl
lods
cmpsb
repnz
test
inc
stc
inc
pop
das
fwait
lret
xchg
or
mov
and
jg
cmp
mov
or
pushf
sbb
and
add
into
sub
pop
cmovle
pop
or
imul
out
pop
mov
negl
pop
xchg
sahf
out
cmpsb
scas
ja
leave
in
and
roll
fnsetpm(287
ja
adc
or
call
push
add
sahf
out
add
add
data16
push
sbbl
pop
jo
mov
mov
cmp
loop
cmp
sahf
out
repnz
add
or
push
push
iret
repz
cmp
and
sub
lahf
cltd
sahf
cmp
cmp
jne
dec
and
cmp
jae
out
xchg
mov
xchg
ja
fnstsw
stos
dec
fiadds
xchg
pop
loopne
inc
mov
mov
out
mov
pop
fiadds
out
repnz
scas
out
sahf
sub
call
lahf
xchg
pop
jb
push
xor
jae
pop
jb
faddl
mov
pushl
lahf
test
mov
out
or
pop
leave
push
or
xchg
data16
add
inc
xor
cmpsl
push
and
mov
jnp
ja
lahf
pop
push
add
push
add
cmp
jmp
cs
mov
aaa
mov
aas
pop
or
and
mov
pushf
andl
out
adcb
add
fwait
sysret
mov
shr
pop
rcrl
fstpt
or
jmp
jmp
mov
mov
outsl
adc
repnz
xor
repz
dec
push
add
pop
add
xchg
out
mov
add
cmp
mov
repz
test
mov
stos
xchg
psrad
jle
mov
or
stc
inc
dec
lock
push
out
cmp
aam
adc
mov
inc
sbb
mov
repnz
push
mov
enter
inc
fs
inc
mov
jp
nop
push
loopne
popf
cwtl
pop
mov
fwait
lret
test
push
les
xchg
imull
stos
push
add
stos
pushf
dec
and
stos
out
adc
pop
vmwrite
sbb
sahf
out
pop
cmp
inc
test
jns
or
pop
or
jns
addr16
jge
mov
jb
enter
xchg
mov
in
xchg
dec
jo
dec
mov
lods
jmp
dec
lods
outsl
mov
ret
movsb
das
sub
xchg
and
movsb
dec
movsb
push
push
enter
pop
pop
movsb
inc
sbb
mov
leave
or
enter
lods
jge
in
in
das
xchg
mov
in
mov
and
pop
iret
movsb
xlat
movsb
fbld
pxor
or
push
lods
sbb
enter
movsl
xor
orb
sbb
nop
lods
mov
outsl
pop
xor
push
cs
js
repnz
lods
addb
sbb
dec
jg
movsl
mov
fisttpll
aas
push
pop
ret
movsl
xchg
fildl
scas
out
out
pushf
xchg
xchg
xchg
div
idiv
and
int3
xchg
jbe
cmp
cmpsb
xor
dec
cs
out
js
jge
rorl
test
add
xchg
cmpsl
push
mov
fisttpll
ror
das
in
and
mov
ja
cmpsb
popf
jecxz
cmpsl
pop
push
cmpsl
xchg
adc
pop
xchg
pusha
shrb
str
cmpsl
enter
mov
cmpsl
pop
xor
stos
cmpsl
mov
rcll
fcmovne
inc
repnz
hlt
cld
addr16
sbb
pop
out
pop
pop
test
jae
and
test
outsl
das
test
inc
mov
daa
aaa
pop
push
mov
out
mov
push
jae
mov
add
pop
popf
movsl
lods
mov
repz
mov
push
out
movsb
fwait
cmp
lar
neg
jns
cmp
or
add
or
pop
xchg
pop
leave
je
xor
cs
iret
pop
emms
iret
fdivl
jbe
lcall
add
mov
jnp
ljmp
mov
insl
push
xchg
es
addr16
add
xchg
cmp
bound
jns
sahf
add
jae
in
mov
into
insl
in
stos
mov
mov
ja
push
rorl
add
out
decb
adc
incb
push
stos
daa
daa
iret
insl
push
pop
push
add
pop
cmp
repz
or
or
jl
movsb
fwait
sysret
cs
xchg
int
mov
mov
cli
xor
inc
inc
add
and
mov
in
pop
jo
movl
jl
push
xor
stos
outsb
daa
daa
and
jns
leave
repz
add
jo
push
cmp
stos
call
xchg
call
lods
mov
movsb
mov
inc
xor
mov
divps
out
fsubl
push
add
jns
lahf
add
and
push
lret
or
mov
sahf
pop
incb
lods
femms
lods
dec
dec
sahf
out
push
add
add
es
out
push
inc
pop
dec
or
clts
in
imul
lahf
lods
lods
sahf
frstpm(287
in
lods
lods
outsb
pop
jbe
xchg
out
jns
xchg
jp
jns
xchg
push
sahf
cmpsb
xrstor
pop
sbb
inc
or
daa
jns
inc
mov
or
nop
mov
and
into
pop
push
mov
enter
inc
scas
fistps
scas
cmp
fildll
leave
insl
sub
pop
bound
scas
push
jb
int3
sbbl
aas
rcrl
or
pop
out
mov
iret
pop
add
jo
inc
xchg
cs
ret
pop
fbld
mov
repz
adc
push
in
andb
mov
dec
xor
in
fdivrl
add
mov
lahf
sub
lahf
repz
scas
cmove
pop
add
fwait
cmp
gs
xchg
xchg
out
jne
test
sbb
shrb
pop
lsl
daa
add
lock
unpckhps
mov
leave
xor
pop
and
inc
pushf
push
mov
imul
jo
daa
mov
pop
mov
jo
scas
leave
pop
push
dec
sub
fmulp
shll
xchg
test
mov
outsb
unpcklps
add
add
iret
repz
add
in
fwait
add
pop
adc
mov
packuswb
leave
repz
outsl
add
add
xchg
lahf
repnz
mov
scas
or
mov
mov
repnz
cmp
psubb
fisttpl
aaa
repnz
lar
cmp
mov
mov
mov
lahf
ja
mov
inc
mov
jbe
lea
push
movd
jbe
push
xchg
out
cmp
xchg
or
push
fists
xchg
or
daa
daa
mov
rcr
pavgw
add
xchg
xchg
xchg
mov
adc
xchg
xchg
xchg
xchg
inc
pop
js
mov
xchg
xchg
cltd
mov
out
scas
repz
xchg
fnstenv
cmp
daa
iret
push
inc
dec
punpckhbw
sbb
or
repz
sbb
xor
frstor
ja
out
push
xchg
mov
jae
mov
lock
divb
mov
mov
mov
add
dec
cs
in
jo
jb
dec
dec
xchg
mov
jae
cmp
sub
xchg
xchg
xchg
mov
jecxz
jbe
enter
mov
mov
mov
and
xchg
addr16
mov
pop
fs
xchg
mov
mov
mov
repz
in
xchg
push
popl
iret
repz
xchg
or
into
repz
or
adc
mov
iret
mov
mov
xchg
jl
pop
adc
shlb
inc
pop
sbb
xchg
push
xchg
add
mov
pop
repnz
jb
push
inc
mov
mov
repnz
mov
mov
mov
mov
repnz
test
repnz
mov
mov
mov
mov
repnz
mov
mov
repnz
jmp
mov
mov
mov
jns
repnz
adc
sahf
out
sahf
sbb
daa
and
and
out
cmp
inc
and
out
sahf
out
push
es
daa
sahf
out
sahf
push
sub
dec
aaa
jns
cvttps2pi
cmp
dec
sahf
mov
je
xchg
les
int3
repnz
daa
mov
faddl
in
xchg
lahf
outsb
push
das
in
mov
push
cmp
iret
pop
mov
in
mov
pop
sbbb
push
and
mov
jns
jae
jnp
cmpl
das
cmpsb
mov
fildl
iret
repnz
iret
and
xchg
jl
mov
jbe
xchg
cmp
pop
jb
cs
out
jp
in
popf
leave
leave
repz
test
add
iret
leave
add
add
leave
ljmp
repnz
leave
add
sahf
out
jbe
pop
aaa
inc
adc
in
dec
pop
adc
in
dec
sahf
adc
xchg
xchg
jns
sahf
out
sbb
sahf
out
sbb
out
rcr
pop
jmp
jns
decl
mov
sub
sub
cmp
inc
mov
pcmpeqd
rcr
sahf
pushf
pushf
repz
adc
xor
jns
dec
cmp
dec
leave
repz
sahf
adc
dec
adc
daa
mov
push
jb
nop
scas
int3
jbe
cmp
ljmp
xor
add
sahf
out
in
push
pop
and
jns
lcall
sahf
es
sbb
leave
in
testb
push
mov
iret
outsb
mov
push
inc
daa
xchg
dec
mov
ror
dec
sahf
pop
imul
mov
leave
repz
xchg
push
pushf
cmp
leave
repz
movsb
lods
or
mov
out
pop
aaa
femms
ds
fmul
repz
sahf
adc
in
push
adc
iret
mov
fdivrp
push
adc
rorb
or
xor
pop
adc
sbb
in
mov
pop
inc
insb
cs
dec
sbb
leave
sbb
enter
mov
aas
into
add
xchg
dec
push
mov
dec
outsb
maxps
outsl
rcr
nop
cmpsb
pop
sarb
leave
sub
shlb
cmpsl
push
leave
in
in
in
pmaddwd
xchg
add
lret
dec
and
mov
xchg
fs
in
imul
pop
iret
leave
leave
sub
push
inc
repnz
cmp
or
into
ja
int3
sahf
dec
mov
ja
add
wbinvd
and
enter
adc
add
jbe
mov
cmove
in
mov
jae
mov
xchg
leave
leave
repz
lahf
push
cmpsl
scas
pushf
pop
and
or
rcr
popf
pushf
pushf
pushf
loop
repnz
dec
push
popa
mov
iret
inc
int3
mov
mov
addr16
mov
mov
xchg
xchg
push
jo
js
cmp
pop
leave
fcompl
jb
stos
mov
pop
ret
in
dec
sahf
add
fcmovnb
sub
int
fbstp
in
les
les
iret
jae
pop
es
repnz
ds
out
les
xchg
lret
or
jno
mov
jns
pop
mov
xchg
xchg
xchg
mov
jae
adc
mov
xchg
xchg
xchg
mov
xchg
mov
pusha
idiv
sysret
in
fwait
stos
lds
lods
ja
lds
leave
insl
xor
cmp
dec
mov
mov
call
jne
add
iret
mov
cmp
push
sub
jg
add
pop
jmp
repz
cwtl
sarb
sti
lds
add
mov
in
mov
cs
iret
leave
add
pop
cmp
ja
popa
xchg
jno
inc
repnz
add
xchg
fistpll
mov
mov
leave
rep
frstor
int
fcomps
add
ss
out
push
ds
pop
pop
pop
pop
add
xrstors
and
pop
xor
cmp
inc
push
in
daa
mov
addr16
jb
in
in
jge
mov
xchg
sahf
in
in
test
lret
in
in
loopne
jmp
test
dec
fsubp
add
or
push
sbb
dec
sbb
sbb
dec
dec
dec
dec
pop
push
adc
dec
sub
sub
repz
inc
fidivs
dec
iret
repz
xor
xor
iret
repz
jp
test
repz
pause
aaa
fwait
cmp
cmp
sahf
ja
cmp
rcr
push
ds
repz
decb
inc
sahf
out
ds
inc
adc
pop
sahf
out
dec
sub
inc
inc
dec
sahf
out
dec
dec
dec
push
popa
pushf
pushf
pushf
fcompl
insb
ja
lea
leave
repz
cwtl
sqrtps
scas
mov
jl
jp
leave
fistps
sarb
leave
cmp
and
xchg
inc
fstl
pop
into
cmp
cmp
enter
lret
gs
mov
lret
xchg
xchg
pop
jle
xchg
lret
iret
cmpsl
lret
jb
enter
lret
ror
cmp
sbb
fmulp
jmp
ficomps
jle
dec
or
out
adc
iret
repz
and
sub
ss
repz
sbb
sbb
iret
repz
bound
insl
js
sahf
out
push
and
in
in
cltd
movsb
scas
das
mov
cmp
lds
shrb
out
popf
cmp
out
icebp
cs
and
pop
int3
adc
in
outsb
mov
movaps
xor
jns
fucomi
dec
andps
pop
cmp
sahf
out
push
jne
cmpb
cmp
jo
jb
mov
sahf
xchg
out
das
int
inc
fsub
inc
dec
and
into
out
int3
dec
mov
popf
daa
int
int
mov
jae
add
in
enter
push
int
pop
int
int
dec
cmpsb
xchg
iret
or
mov
lcall
leave
repz
add
and
test
dec
js
enter
leave
call
push
daa
daa
inc
add
cld
jg
add
enter
into
adc
add
bnd
out
and
push
sub
jb
xor
inc
dec
into
or
push
into
cmp
lahf
sbb
push
jae
pop
jnp
daa
pop
pop
dec
pop
mov
jns
add
enter
xchg
xlat
into
mov
out
dec
dec
dec
outsb
out
idiv
and
and
mov
mov
fsub
jmp
push
pop
aaa
add
inc
movd
repz
sub
or
repz
jns
test
xchg
xchg
xchg
fistpl
insl
jns
xchg
rcll
fmull
jns
ja
out
cs
aaa
repnz
adc
sbb
push
sbb
repz
sub
xor
aas
cmp
mov
push
repnz
imul
jbe
in
in
orl
push
daa
inc
js
jns
mov
test
mov
shll
jb
or
shlb
leave
repz
sahf
add
push
fwait
or
inc
sar
fcmove
in
in
js
shll
repz
sahf
out
add
mov
cmp
movb
syscall
jns
test
or
rcr
jnp
jns
sar
rorl
rcrb
pmulhw
in
sahf
adc
push
shrb
rclb
push
adc
repz
push
pop
pusha
sbb
jbe
cs
push
push
out
mov
push
and
mov
and
shll
es
push
sub
sub
cli
shlb
xor
andb
in
imul
or
sub
seto
fstpt
rcr
insl
in
pop
inc
rorl
pop
add
add
jp
test
iret
repz
nop
or
inc
jg
fdivrl
pop
sbb
fiadds
shlb
jmp
scas
xchg
fstl
aam
aas
and
xchg
outsb
sbb
sub
ss
sysret
repnz
inc
aam
dec
aam
aam
cmp
repnz
aam
push
adc
xchg
cmp
into
orl
jns
aam
aam
push
mov
push
add
fisubrs
out
aad
fildl
psadbw
ljmp
push
xor
sbb
jg
pop
in
and
sub
pop
jns
ja
cmp
push
dec
pop
cmp
fucom
push
or
repz
pushf
popa
imul
pop
adc
jns
xchg
xchg
lahf
adc
out
jbe
lahf
mov
das
aas
loopne
iret
xlat
aad
out
test
sbb
mov
ucomiss
aaa
jb
sbb
cmp
inc
dec
push
sahf
out
sahf
push
pop
pop
or
in
dec
jnp
xchg
inc
sbb
pop
cmpsl
lss
jb
mov
and
jp
push
call
and
pop
push
lahf
xlat
xlat
ja
frstor
das
ss
inc
cmovl
out
dec
sahf
push
push
push
and
rorl
and
and
out
fiadds
cltd
daa
xchg
out
jns
scas
sub
lds
rcr
cs
cmp
icebp
cld
push
xor
fsubr
in
and
vmwrite
ds
aaa
push
jl
js
pop
punpckhdq
cmp
fiadds
xor
xchg
add
je
and
and
mov
arpl
mov
rorb
aam
push
test
pop
cmp
pop
or
cmp
aas
dec
and
inc
mov
or
aaa
popf
cmp
pusha
cmp
push
add
jns
out
sbb
sahf
out
pop
or
or
aaa
or
mov
imul
daa
adc
adc
xchg
xchg
fisttpl
xor
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
xor
data16
add
pop
cmpb
mov
inc
push
xor
jns
out
and
sbb
or
cmp
repz
call
iret
repz
aam
int3
enter
sahf
idivl
mov
cmp
out
cwtl
nop
mov
iret
js
fs
push
inc
cmp
repz
cmp
sbb
nop
push
clc
or
push
xchg
adc
mov
mov
adc
and
push
inc
aam
std
inc
and
mov
pop
adc
loopne
mov
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
test
shll
mov
mov
add
mov
in
call
nop
pop
jle
adc
push
ficompl
fnstcw
mov
fidivl
rcr
fsubp
stc
jb
jle
mov
addr16
xchg
mov
sub
or
pop
add
sub
and
push
clc
out
jp
adc
inc
aaa
push
imul
xlat
incl
xchg
pusha
stos
popa
mov
pop
das
mov
cwtl
or
mov
daa
add
mov
sahf
loopne
mov
or
or
out
adc
adc
jns
out
adc
inc
dec
repz
sbb
in
sbb
je
dec
push
jns
iret
repz
enter
sarb
and
ljmp
jns
jp
ljmp
xchg
push
mov
sti
les
cmpsb
aas
rorb
mov
add
pop
hlt
dec
or
fsubrs
inc
pop
das
in
jle
loop
jg
adcb
stos
add
add
cwtl
adc
cmp
jae
xorb
pop
mov
push
mov
inc
jmp
push
push
loopne
subl
inc
mov
xor
pop
and
call
xchg
dec
stos
insl
jg
out
cs
ljmp
add
shrl
out
inc
shrb
daa
pop
jmp
push
dec
xchg
es
shl
out
sbb
sbb
add
add
lock
sbb
jnp
and
push
and
scas
sbb
cld
lock
add
iret
cmp
push
fsubl
das
jnp
out
push
or
or
adc
iret
rcrb
in
enter
iret
repz
rcrb
push
mov
repz
pop
test
movsb
and
and
and
test
mov
and
clc
mov
push
ss
xor
xchg
fnstcw
rcrb
stc
es
cmp
xorl
jg
cmp
cmp
repz
pop
js
mov
idivb
iret
repz
xor
add
adc
lcall
and
mov
jae
das
push
push
xchg
cmp
dec
insb
cmpsl
push
push
xlat
add
dec
inc
pop
enter
xchg
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
dec
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
fistpll
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
mov
popa
pop
mov
and
decl
xchg
clc
repz
mov
subb
fwait
xchg
and
and
int3
inc
ja
add
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
cmp
jmp
cmpsl
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
sub
je
cmp
inc
je
inc
inc
push
dec
ljmp
in
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
xchg
fs
pushl
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
jmp
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
dec
and
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
jg
cli
test
xor
leave
mov
insb
fdivs
jne
filds
or
mov
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
lcall
movsl
mov
sub
mov
and
or
adc
ljmp
sub
fdivl
jno
add
aad
mov
mov
xor
jmp
aam
call
xor
add
jg
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
fdivs
test
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
mov
ljmp
cmp
mov
inc
movsl
fisttps
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
leave
jl
fnstsw
add
daa
adc
or
and
test
or
mov
lcall
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
ljmp
cmpl
or
mov
lcall
ljmp
fildl
incl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
pushl
xchg
shlb
add
inc
push
imul
xorb
sbb
jmp
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
jg
call
mov
jle
shll
push
repnz
addr16
jmp
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
std
ljmp
jns
imul
andl
shrb
rclb
add
decl
add
mov
das
es
lds
or
cld
pushl
cmpsl
call
ret
shlb
scas
ficomps
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
mov
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
call
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
lcall
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
decl
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
sar
push
xchg
cli
dec
inc
imul
scas
fcompl
fldenv
fucomip
ljmp
mov
shll
mov
inc
jmp
mov
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
aam
jmp
add
push
sub
mov
or
sbb
add
sub
inc
pop
jo
push
leave
xor
push
push
pop
pop
sahf
subl
cmp
push
xlat
jns
out
fcomp
fcmovu
fsub
jns
out
fsubp
jecxz
jns
out
in
jmp
sahf
out
in
repz
cmc
sahf
out
sahf
div
clc
stc
cli
sti
scas
xor
js
pop
adc
aas
adc
adc
sub
inc
mov
nop
scas
inc
push
out
cltd
fdivs
pusha
jae
inc
push
mov
dec
daa
dec
bound
je
insl
bound
push
xchg
lea
inc
push
popa
je
push
fisttps
and
cmp
inc
ljmp
lds
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
insl
jnp
lea
xor
xor
or
push
outsl
sub
xor
xor
xor
sti
imul
push
inc
jbe
pop
insb
imul
insb
les
push
dec
inc
sub
testb
or
adc
ss
and
xchg
pop
fidivl
or
sbbb
push
je
lods
test
jbe
or
inc
aas
sbb
xor
push
insb
xor
je
inc
inc
dec
dec
js
push
add
addl
sbb
xor
insb
inc
lds
push
dec
or
test
inc
inc
xorb
insb
aaa
jbe
cmc
lock
inc
push
push
aas
lods
fadds
add
sbb
fcoms
cltd
and
jae
insb
xchg
daa
pop
mov
inc
mov
cmp
xor
mov
sbb
inc
pop
jnp
cmp
jle
jae
inc
inc
inc
add
shlb
mov
gs
mov
iret
int
push
dec
cmp
pop
insl
inc
xor
sbb
mov
pinsrw
jne
or
mov
mov
pop
xor
xor
mov
sahf
add
or
add
out
fldl
push
clc
xchg
into
pop
not
or
jo
popf
pop
inc
cmp
aam
inc
adc
add
lret
cld
push
add
or
pop
outsl
xor
leave
xor
lcall
test
mov
or
rclb
inc
xorb
vmread
frstor
rcll
dec
popa
jo
cmp
mov
outsl
adc
mov
fdivs
adc
push
lds
xor
pusha
xor
nop
test
pop
cmp
arpl
cmp
mov
jo
push
dec
adc
push
xchg
sbb
outsl
insb
jns
das
aad
or
inc
jb
push
mov
mov
cmpsl
mov
arpl
inc
mov
test
test
push
bound
ja
inc
jbe
push
shll
mov
dec
ja
dec
xor
pop
das
adc
int3
lcall
push
add
add
xorb
jmp
jl
adc
lods
xor
pop
inc
dec
andl
or
aas
adc
aas
adcb
outsb
rclb
inc
push
inc
cmc
sub
bound
outsb
arpl
and
xchg
cmp
pop
push
jnp
cltd
pusha
in
insl
mov
add
aaa
inc
jne
push
rcll
adc
push
xorb
mov
mov
push
sub
inc
and
add
inc
push
mov
ss
push
dec
adc
jg
add
sbb
add
and
cmpsl
js
fcmovu
decl
fsts
notb
pushl
psrlq
mov
xor
ljmp
rcll
push
outsl
mov
mov
shll
pop
mov
xor
aad
decl
cmp
sahf
test
lods
addr16
pop
adc
fsubrl
lock
ds
mov
adc
incl
iret
lock
les
leave
in
adc
shll
inc
push
stos
and
or
xchg
add
pop
or
mov
add
jle
das
adc
scas
jp
ljmp
jg
sbb
cli
xor
sub
pop
aad
cmpsb
test
leave
scas
stos
das
ljmp
lds
and
rorb
push
jno
dec
repnz
add
dec
mov
pushl
xlat
gs
add
mov
into
mov
cmpsb
mov
sbb
cld
mov
dec
stos
lret
sub
in
rcrb
sub
ret
cwtl
push
mov
ds
jg
gs
dec
ss
sbbb
jne
sbb
lcall
xchg
jg
add
or
aad
sbb
mov
mov
adc
lcall
sub
mov
test
out
jo
and
mov
sti
popf
jp
pcmpeqw
pop
add
jo
push
adc
ljmp
push
xchg
call
insl
or
xchg
outsl
and
push
fdivr
jmp
and
sar
or
inc
xchg
jne
mov
xchg
dec
jmp
decl
test
cmp
sbbb
add
sbb
mov
push
shlb
fsubrs
mov
jmp
test
mov
push
leave
pop
pop
inc
std
or
out
mov
add
ret
cltd
pop
in
dec
addr16
lcall
jg
xor
idivb
data16
jg
aam
and
xchg
mov
sub
pushf
sub
sub
cmpsb
xlat
in
mov
out
push
mov
mov
mov
in
push
dec
mov
mov
push
rol
jne
pop
push
dec
aas
jg
movsl
inc
idiv
jmp
add
popa
fwait
ljmp
enter
sbb
nop
sahf
jl
xchg
cmp
xor
sub
jmp
iret
xor
inc
mov
scas
stos
imul
push
push
add
mov
sbb
ja
lods
fisubl
sbb
aaa
xchg
aas
mov
cmp
sub
lahf
addr16
into
push
scas
out
xchg
lret
xchg
push
pushl
rcl
xor
pop
popf
ret
lods
js
call
incl
push
in
mov
sub
inc
pop
inc
imul
pop
orb
dec
xchg
test
mov
popf
aas
add
stc
movsb
test
divb
test
decl
and
sub
sbb
sub
jne
or
int
xchg
mov
icebp
mov
nop
clc
es
shl
movsb
sub
lds
fadd
loop
push
icebp
fldcw
mov
mov
mov
or
daa
dec
outsl
fcmovnb
cmp
std
xchg
mov
out
pop
iret
fld
mov
mov
sbbb
xor
dec
pusha
movsl
pushl
jnp
inc
out
rcrb
sub
dec
mov
push
jne
xchg
out
cltd
inc
nop
adc
ljmp
mov
test
lret
jmp
int3
mov
shll
xchg
fldl
repnz
call
movsl
or
dec
adc
lea
fs
out
lods
loop
lods
pop
or
cld
decl
scas
mov
xor
sbb
cltd
int3
lock
push
inc
add
xchg
cli
sti
iret
lds
and
sub
xchg
xor
outsb
push
xchg
out
decl
xchg
mov
pop
push
leave
gs
nop
and
lahf
mulb
popf
xchg
jmp
xor
out
divb
cmp
push
mov
iret
sbb
decl
pop
outsl
fcomp
lret
xchg
hlt
push
jle
and
push
pop
mov
cmc
ljmp
outsb
lret
std
lcall
or
mov
adc
xor
nop
pop
xchg
stc
or
pushl
lret
push
test
test
pop
test
aas
mov
and
aaa
icebp
add
icebp
repz
aaa
outsl
imul
ljmp
pop
sub
pusha
bnd
popa
fidivs
mov
mov
in
fistpll
fdivl
sbbb
xchg
ds
pop
add
mov
divb
das
not
push
loope
cmpsb
out
lahf
into
lcall
subl
cld
filds
push
clc
fcompl
mov
adc
push
mov
sbb
or
fwait
or
lcall
lock
std
ljmp
mov
mul
or
imul
cld
pushl
mov
jne
pop
hlt
out
adc
out
mov
adc
xchg
imull
jg
pop
mov
sarl
jl
pop
outsb
rcrb
jns
cmp
faddl
or
incl
js
jbe
aad
pop
adc
mov
fnstcw
pop
inc
mov
lret
lcall
mov
jae
ljmp
daa
gs
pushf
mov
mov
test
cmp
aad
fsubl
mov
fiaddl
aam
rolb
jmp
add
das
cli
jg
pusha
cli
and
xchg
test
sti
lods
inc
dec
dec
aaa
pop
lea
icebp
test
inc
cli
jmp
pop
xchg
add
int3
xchg
inc
mov
mov
aas
ljmp
dec
lds
das
and
inc
pop
xchg
jne
pushf
or
fdivs
pop
inc
adc
sub
loope
dec
icebp
dec
jmp
popl
mov
ljmp
data16
dec
cs
dec
pop
adc
daa
sbb
cmp
mov
incl
mov
push
xchg
cwtl
sbb
fistps
in
dec
in
cltd
and
out
stos
fidivrl
repnz
fxch
adcb
insb
mov
inc
arpl
testl
mov
filds
std
push
popa
lods
push
push
push
xchg
les
repz
lcall
and
repz
shr
lods
aaa
add
and
pop
arpl
xchg
sahf
jbe
xor
in
ficomps
inc
push
std
jmp
cmpsb
xor
cmc
pop
or
push
cmp
imul
ret
iret
pushl
imul
adc
mov
ja
in
xor
cmpsl
loope
outsb
lcall
pop
pop
or
shll
pop
ss
adc
hlt
in
pop
sar
notl
in
cmp
mov
mov
dec
test
dec
adc
push
fstl
pop
jmp
adc
push
mov
xchg
fisubl
jbe
sahf
jmp
es
imul
mov
lahf
or
adc
frstor
or
push
call
test
xchg
mov
dec
mov
mov
mov
jl
push
pop
mov
mov
daa
xchg
pop
and
rcll
inc
sub
mov
push
xchg
pop
adcb
mov
jg
fldl
repz
divb
mov
movsb
adcb
inc
lock
cmp
push
rcrl
imul
pop
mov
adc
dec
cmp
push
inc
fistps
insl
ljmp
ljmp
cli
inc
adc
add
push
inc
sqrtps
cmc
ret
ss
popf
std
add
xchg
mov
pushl
out
mov
or
dec
rcll
fisubrs
addr16
and
inc
sbb
add
jmp
push
out
xor
add
rcl
sbb
popf
sub
jmp
cmp
fsts
xchg
stos
rorl
bound
mov
fisubs
mov
xor
push
mov
incb
push
adc
pop
es
or
fisubs
stos
call
js
or
data16
mov
in
pop
push
mov
push
sub
js
incl
addl
dec
dec
lret
jmp
and
popa
push
inc
daa
fistps
outsl
push
cmp
and
inc
mov
mov
in
in
popf
xchg
adc
mov
xchg
pushf
mov
call
mov
xorb
mov
mov
jae
pop
mov
mov
aaa
sarl
jno
movsl
xor
ljmp
fcoms
in
roll
add
dec
test
pop
cmp
dec
push
sbb
mov
hlt
stos
dec
xchg
dec
cli
aas
add
idiv
lcall
arpl
push
or
pop
jne
fsubs
movsb
mov
push
xor
pop
out
jle
pusha
clc
jecxz
cli
gs
loope
sarb
out
lods
int3
jb
cs
fdivr
lcall
mov
mov
lahf
jmp
fsubrl
shl
rcl
pushl
dec
xor
push
mov
sbb
mov
not
inc
insl
xor
pusha
mov
rcrb
inc
jecxz
ffree
ljmp
xor
std
test
jnp
pop
cwtl
pusha
xchg
inc
mov
pop
inc
jnp
push
mov
clc
mov
fidivl
and
incl
xchg
sbb
sub
fisttps
jo
mov
and
dec
aaa
xor
mov
loope
inc
inc
les
jne
adc
push
ljmp
jmp
data16
lret
push
and
addb
mov
mov
stos
pop
pushl
gs
in
cs
lahf
dec
inc
or
jae
mov
cs
lcall
add
pop
sbb
add
and
dec
xchg
mov
mov
es
decl
notl
in
ffreep
fdivs
fcoms
mov
jns
or
xchg
cmp
jnp
mov
jmp
pop
add
mov
pushf
nop
push
addl
bound
pop
ljmp
or
and
cwtl
repnz
cmp
inc
lcall
lret
add
decl
les
and
and
mov
call
or
in
xor
gs
cltd
fldcw
stc
xor
rcr
pushf
jl
dec
dec
leave
add
cmp
jp
clc
pextrw
and
inc
inc
stos
es
cltd
in
js
call
adc
sbb
imull
ds
fst
jmp
insb
imul
cmp
push
push
repz
xor
xor
ljmp
nop
dec
jb,pt
inc
adc
jl
jmp
pop
mov
add
jl
xchg
jmp
loopne
push
fcom
insb
mov
pusha
dec
jmp
sbb
into
mov
jle
repnz
adc
mov
ljmp
jmp
movsl
dec
mov
insl
push
dec
sub
xchg
or
lahf
pusha
sub
push
stos
adc
aad
sbb
lcall
inc
mov
xchg
and
out
xlat
push
xchg
pop
dec
inc
data16
call
fstpt
les
jge
dec
addr16
mov
xor
pop
or
dec
xchg
cmp
add
in
leave
hlt
push
mov
hlt
push
daa
aaa
outsl
ret
sbb
call
cs
cmpl
scas
out
loop
mov
jb
jg
xor
enter
jl
in
push
add
push
jnp
lods
push
sub
sub
loop
incl
xlat
cwtl
dec
clc
push
xor
jns
xchg
push
and
xor
sbb
dec
cmp
cmp
add
inc
push
sub
sbb
test
and
dec
inc
mov
jge
aaa
cmp
xchg
mov
xorb
mov
dec
test
jmp
scas
xchg
inc
mov
ffreep
addb
add
and
xchg
xor
fst
xor
dec
lods
ljmp
sbb
ret
sbb
jne
and
gs
hlt
out
clc
mov
ja
sub
mov
cld
movsl
test
cmpsl
push
jg
xchg
call
xchg
shll
shr
sbb
roll
insl
add
xchg
mov
xchg
add
incl
notb
pop
add
inc
lcall
jg
mov
shl
pop
xchg
xchg
push
push
xchg
imul
add
incl
ficoms
addl
fstl
stos
xor
shrl
dec
jnp
cltd
lret
lcall
dec
dec
pop
fbstp
pop
loope
das
sti
push
mov
cmp
jge
mov
outsl
lds
push
repz
ljmp
xchg
or
popf
rorb
aam
dec
lahf
cs
aaa
popf
jnp
inc
xor
xchg
fs
loop
jmp
lcall
incb
outsl
je
and
lods
test
sub
ret
pop
enter
popa
movsb
xor
mov
dec
or
cmp
push
ret
mov
lret
repnz
add
dec
xor
adc
fwait
jle
sub
out
out
call
push
xor
lcall
xchg
xchg
mov
jge
pop
xchg
inc
mov
mov
push
adc
pushl
push
xchg
aad
and
insb
mov
xor
fisttps
xlat
sub
cmpsl
das
pop
pushl
cmp
aaa
xchg
sbb
out
or
out
jbe
xchg
inc
sbb
into
ret
or
add
das
sar
or
cmp
es
fildll
jecxz
pop
in
shr
call
add
sbb
sbb
mov
in
loop
xchg
and
inc
push
mov
or
mov
cmpl
xchg
mov
sub
dec
test
cmp
cmp
dec
push
jp
leave
xor
or
xchg
imul
rorl
test
jmp
dec
movsb
and
adc
xor
fucomi
sub
mov
out
lcall
dec
ss
insb
xchg
push
or
inc
or
out
xchg
adc
decl
in
les
pop
and
hlt
movsb
sarb
push
ljmp
mov
mov
incl
leave
jg
add
mov
lcall
mov
fwait
arpl
cmc
fisttpll
pop
push
shrb
aaa
imul
cmpb
mov
out
mov
or
shlb
push
dec
je
repz
mov
mov
jmp
and
mov
pop
repz
mov
xchg
and
arpl
mov
and
adc
call
filds
jne
aam
cmpsl
rclb
pop
test
es
and
pop
icebp
xchg
sub
mov
or
inc
ja
adc
rcll
push
mov
inc
pop
les
pop
push
mov
clc
mov
iret
dec
lods
sub
jo
daa
daa
arpl
mov
adc
add
jl
add
in
lahf
pop
sbb
lret
mov
add
jmp
call
mov
mov
xchg
out
imul
cmp
movsl
sbb
jp
enter
mov
dec
scas
fsubrs
movsl
fsts
sub
or
decl
test
les
shll
dec
or
jmp
pop
xchg
jbe
call
jecxz
push
pop
and
xchg
js
call
mov
cmp
xor
call
lock
add
fnstenv
ja
adc
sbbb
xor
cli
decl
push
roll
push
shl
mov
sub
xlat
jo
and
daa
pop
pusha
or
or
mov
repz
aas
arpl
pop
push
fmul
mov
ret
xor
aaa
xlat
jne
jnp
icebp
mov
cmp
push
pop
fst
sbb
xchg
inc
pop
or
jmp
mov
mov
mov
int3
cmp
dec
pop
cltd
mov
cmpsb
pushf
adc
mov
std
leave
mov
jmp
mov
xchg
fistps
cmp
xorb
lcall
sar
fisttpll
leave
dec
loopne
lcall
std
mov
out
sbb
out
inc
xchg
dec
push
cltd
add
mov
call
or
loop
xchg
leave
dec
movsl
js
mov
pop
pop
mov
cmp
push
fucomip
mov
stc
test
sub
jp
incb
lods
push
pushf
jns
add
repz
jnp
scas
dec
jecxz
pusha
into
xor
pop
mov
decl
pop
lods
cmc
mov
aam
xchg
lahf
sub
sub
test
pop
mov
ret
icebp
out
adc
add
rdtsc
mov
xchg
cmp
addr16
and
fmulp
and
push
rclb
repnz
pushl
or
mov
add
rcrb
int3
jmp
xchg
xchg
xchg
pushf
loope
pushf
jmp
dec
jns
mov
push
mov
lahf
pusha
fninit
scas
sub
int
decl
mov
mov
les
addr16
mov
dec
adc
bound
movsl
sbb
lcall
loope
shr
mov
lret
in
and
push
dec
fnstenv
and
std
nop
sahf
pop
ds
pop
cs
and
inc
cs
fisttps
sbb
arpl
ljmp
mov
mov
push
mov
ds
pop
into
push
popa
jmp
inc
jp
mov
cmpsl
push
add
in
out
xchg
push
arpl
pop
cwtl
mov
adc
sar
jl
mov
adc
subb
stos
cmp
lock
xchg
pushl
push
cmp
call
stos
push
icebp
je
mov
call
inc
push
push
ja
or
fsubrp
push
jo
das
fsubrs
aad
int
imul
dec
imul
decl
subb
adc
aam
cmp
div
mov
lcall
fcompl
scas
dec
mov
addb
cmc
test
or
mov
ljmp
fdivr
decl
stos
into
jb
inc
lcall
fs
mov
push
ret
sub
mov
out
loope
les
stc
sbb
sub
ja
dec
insl
sub
popa
pop
orb
mov
mov
lcall
ret
stos
xchg
fadd
loop
push
in
inc
outsb
mov
xchg
pop
aad
out
lods
pop
jg
cmp
push
xor
xlat
pop
data16
movsw
sub
mov
and
incl
sbb
ja
ljmp
roll
out
add
or
ror
push
jb
push
hlt
incl
dec
add
add
outsb
xchg
gs
stos
jmp
xchg
popf
mov
add
or
cwtl
cli
rclb
cmp
outsb
shl
inc
arpl
dec
or
push
into
pop
xchg
leave
xor
push
sub
mov
cmp
mov
daa
mov
jmp
sub
dec
icebp
adc
inc
mulb
rorb
test
and
xchg
lods
or
movsl
idiv
pushl
es
jecxz
shl
popa
into
dec
cmpsb
imulb
push
loope
jno
ret
std
decl
mov
iret
jae
push
stc
push
dec
adc
push
ss
xchg
mov
call
xchg
pop
inc
inc
sbb
fwait
xor
fbld
cmp
scas
xor
test
mov
inc
loope
lret
imull
nop
arpl
dec
mov
xchg
outsl
cli
outsl
mov
movsl
add
mov
ds
imul
lds
jb
ljmp
add
adc
dec
adc
clc
fnstenv
adc
push
jo
cld
jle
xchg
jl
aaa
pusha
mov
clc
push
je
insl
xor
nop
pop
jle
push
hlt
xchg
mul
jp
imul
mov
sahf
lock
data16
sbb
jnp
sbb
add
popf
push
bound
decl
mov
xlat
ds
and
jns
mov
dec
jno
sbb
sahf
pop
mov
decl
outsb
mov
sub
jnp
push
jne
aam
xor
out
xlat
neg
dec
fdivp
pop
sbb
pop
mov
in
push
call
or
cmp
push
add
loope
sbb
ljmp
cwtl
rorl
push
dec
cmpsb
scas
fdivrs
js
in
pop
and
nop
pop
ds
gs
sub
ljmp
mov
adc
jo
mov
mov
jle
gs
jmp
add
mov
pushl
inc
mov
icebp
adc
aaa
cmpsl
cltd
sahf
or
ror
and
cmp
data16
ljmp
cli
mov
ret
nop
ss
mov
mov
cmp
dec
add
cmp
push
xor
std
mov
dec
repnz
inc
pop
stos
xor
pop
repnz
xchg
ficompl
mov
mov
pushl
cmp
mov
add
jmp
pop
in
push
sub
ss
in
cmpsl
gs
es
pushl
rolb
lea
out
mov
pop
std
mov
cmp
add
bound
push
jecxz
inc
ds
sbb
out
sbb
fdivrs
xchg
sbb
aaa
or
mov
mov
subb
pusha
out
xorb
ficoms
pushl
daa
cmp
jecxz
ljmp
sbb
mov
pop
sahf
xchg
popf
imul
xchg
xchg
sub
ljmp
mov
mov
xor
stos
neg
jbe
cmp
and
lds
push
cli
add
mov
stc
ljmp
or
mov
mov
xchg
out
test
add
ljmp
mov
out
mov
and
jno
mov
xchg
inc
lds
mov
loop
mov
cld
cmp
data16
jnp
in
cmp
mov
aaa
jno
push
mov
lcall
in
cwtl
pushf
test
push
rclb
dec
push
das
imul
data16
outsb
das
out
jmp
dec
pop
and
push
call
mov
mov
cmp
sbb
inc
cmp
cmp
jnp
rol
dec
add
mov
pop
movsb
xchg
xchg
or
vpunpckhbw
fmull
lods
dec
jg
adc
pop
pop
shlb
lahf
pusha
mov
jo
mov
lret
jl
jmp
or
push
cmc
mov
mov
sahf
loope
mov
hlt
mov
dec
jmp
test
fcomps
inc
imul
clc
filds
jno
jg
insb
inc
loop
loopne
mov
sbb
mov
cld
mov
outsb
sbb
xchg
xchg
cmp
fsubrl
adc
subb
popa
or
add
jns
and
mov
fwait
and
jle
dec
jmp
lea
out
pop
push
and
call
sub
cli
lds
pushl
or
sbb
scas
inc
loop
movsl
insl
mov
in
scas
push
pop
insl
je
add
pop
dec
jmp
pop
sbb
mov
js
cli
sbb
js
xchg
add
xchg
dec
mov
pop
xlat
ljmp
out
fidivrs
jne
pushf
in
jnp
push
psrad
test
or
loopne
jg
push
jg
ret
jg
and
stos
cmp
and
lods
call
adc
mov
mov
cmp
rcll
mov
insb
cmp
inc
leave
lret
incl
mov
imul
push
jge
test
in
push
sub
mov
js
push
ss
cmp
sub
push
shll
fldenv
jb
pop
xchg
jecxz
jg
and
ljmp
sarl
xor
sub
gs
jl
dec
mov
lcall
cmp
cmp
stc
xchg
popf
test
ljmp
cmpb
inc
push
in
out
rorb
iret
fiadds
cmpsb
jp
mov
test
pushl
lret
jno
adc
pop
loopne
rol
lret
or
loopne
test
das
test
rcrb
xchg
dec
out
xchg
les
sub
arpl
pushl
sbb
jge
sbb
mov
mov
es
mov
xchg
dec
lods
ljmp
scas
xor
or
xchg
fbld
sbb
jge
cs
clc
mov
ja
ja
rorb
mov
into
hlt
cld
es
divb
cs
jnp
lods
cmp
call
jp
cmpsb
jmp
hlt
add
xchg
push
test
push
push
incl
or
out
and
test
ja
lret
testl
lock
jb
inc
xchg
out
mov
decl
xchg
cmp
sbb
movd
sbb
jmp
sub
pushl
ja
std
sbbb
lahf
dec
adc
jo
cmp
sbb
fcom
and
inc
cmp
movsl
jae
decl
in
mov
mov
sub
or
dec
ret
inc
jg
pop
push
inc
sbb
dec
mov
sub
popa
xorl
int3
mov
scas
push
sbb
call
xor
mov
or
das
dec
cmp
ficompl
mov
cmp
push
cld
xor
dec
rcll
loopne
aaa
pop
cmpsl
sub
mov
lret
push
in
decl
mov
ljmp
push
xchg
int3
aas
decb
push
cmpsl
bound
loopne
jge
dec
xor
pop
sub
add
cmpsl
and
mov
dec
mov
call
fcmovb
mov
ljmp
sub
lods
dec
mov
jb
call
je
out
dec
sub
push
xchg
call
cmp
adc
loopne
es
arpl
or
cmp
jo
mov
lcall
loop
idiv
xchg
imul
push
das
mov
pop
test
jmp
aaa
cld
pop
sbbb
xchg
fcmovu
xor
rorb
mov
xor
gs
jp
repz
call
sti
pop
or
mov
jnp
js
mov
out
clc
lcall
test
add
sub
pop
jnp
and
push
les
add
imul
enter
jne
dec
in
xchg
push
cld
inc
adc
push
mov
add
aad
lods
sub
add
xchg
out
sbb
iret
pop
mov
xlat
outsl
fidivrs
daa
mov
cmp
or
pop
fcomp
pushw
jge
inc
test
mov
mov
cmp
in
lcall
pushl
push
jns
out
add
cltd
dec
add
and
std
sub
fistl
cld
cmp
jnp
xchg
cld
test
inc
enter
xor
out
push
adc
popf
stos
or
fwait
mov
es
lock
sub
mov
incl
mov
movsl
sub
ljmp
sar
ficomps
jg
adc
imul
push
popa
push
pop
dec
sbb
adc
sub
xchg
in
pop
insb
jecxz
or
int3
in
push
or
xchg
testb
lcall
sbbb
xchg
xor
sti
jbe
adc
push
lods
sbb
cmp
fisubl
call
lcall
sbbl
xor
loope
fs
dec
mov
or
sarl
xchg
repnz
jg
mov
cmpsb
daa
xlat
jecxz
push
xor
cmp
adc
clc
inc
mov
lods
adc
jg
sub
pop
clc
xchg
lret
dec
cmpsb
xchg
jecxz
shlb
call
sub
mov
sub
jge
scas
lcall
push
loope
ss
jne
incl
aad
xchg
lret
test
popa
fcomp
fcoml
xlat
mov
fdivrs
inc
cmp
jge
mov
mov
in
mov
imul
or
jecxz
pusha
sbb
mov
jo
sub
call
rclb
add
mov
or
lea
subb
shrl
aas
hlt
dec
aam
mov
stos
pop
inc
je
out
adc
mov
or
fwait
icebp
sahf
rcr
mov
cmp
ds
jmp
cmp
in
xchg
cmp
cs
out
xlat
test
stc
sub
push
adc
dec
or
mov
sar
ljmp
jl
xchg
or
inc
push
or
xlat
cld
add
icebp
loop
and
jg
repnz
ret
pop
lret
sub
stos
mov
add
sub
mov
mov
fisttpl
adc
push
xor
xor
dec
mov
xchg
cmp
cmp
xchg
outsb
pop
add
pop
imul
incb
aam
ja
adc
mov
xlat
ja
cmpsl
cld
or
xor
ja
scas
das
sar
jg
scas
repnz
pop
cltd
stos
mov
add
xor
inc
cmp
sub
jmp
testb
sbb
sub
cld
jbe
test
dec
mov
mov
int3
popf
insl
rcll
dec
mov
repz
mov
jmp
push
mov
and
lret
gs
scas
inc
orl
clc
lcall
xchg
je
dec
xlat
popf
mov
mov
add
bound
call
dec
test
mov
gs
pop
mov
icebp
sub
mov
push
dec
ja
call
stos
inc
shll
mov
mov
sahf
das
push
push
or
lcall
stos
stos
call
cmp
ret
int
cli
mov
andl
mov
mov
mov
jmp
cli
stos
and
sti
push
pushf
movsl
cmp
imul
fstps
clc
lods
jecxz
adc
clc
iret
enter
std
xchg
dec
loopne
gs
test
loopne
in
sub
insb
cld
mov
les
int3
enter
and
bound
inc
xlat
aas
ljmp
push
cs
jge
jl
mov
inc
jns
stos
or
dec
dec
sub
decl
sbb
daa
out
jl
leave
pop
lods
xchg
jne
xor
in
ret
lock
dec
int
mov
clc
add
mov
bound
add
sahf
inc
lret
dec
or
jle
outsl
mov
mov
fiaddl
outsb
xor
pop
mov
sti
mov
dec
push
clc
adc
cld
fdivrl
ficomps
sbb
and
mov
jp
repnz
pop
sbb
inc
loop
cmp
pop
inc
das
pop
lret
incl
cmp
mov
jecxz
inc
je
jmp
loop
mov
incl
call
int3
sub
cmp
subb
mov
add
in
int
int
push
aad
push
jl
or
push
push
xchg
pushf
jl
lcall
lock
xlat
mov
sbbl
xlat
cmpsl
ljmp
add
lret
push
shlb
addl
dec
cltd
fsubrs
pushl
cmpsl
cmc
lcall
cmp
cmp
xchg
mov
rclb
gs
into
mov
loop
imul
incl
xchg
rol
stos
and
fildl
insl
mov
adc
xchg
iret
sub
sub
incl
pop
imul
dec
iret
and
cltd
in
stc
fchs
jl
pop
adc
inc
int
mov
inc
loopne
and
lcall
push
and
std
push
mov
repnz
inc
jmp
dec
dec
pop
popf
push
dec
ret
pop
mov
sub
or
mov
lcall
fnstsw
in
push
mov
testb
aas
xchg
push
adc
mov
mov
rclb
fwait
xchg
jg
test
repz
scas
push
inc
jo
dec
jmp
push
test
mov
inc
insl
rcr
jmp
enter
dec
fcoml
in
jg
pop
mov
xchg
loop
outsb
out
rdmsr
mov
js
scas
out
xchg
lret
call
dec
push
xor
cli
lock
dec
jae
aaa
lahf
push
inc
ljmp
mov
adc
inc
adc
loop
les
hlt
mov
xchg
xor
cmp
mov
inc
cltd
and
inc
mov
orb
shll
pop
ljmp
out
jb
pusha
test
addr16
push
mov
popf
mov
call
jmp
test
movsb
dec
fists
adc
push
insl
cmpsl
inc
push
stc
xor
les
sar
jmp
cmc
xlat
adc
pop
mov
fistl
in
lods
addr16
arpl
xchg
push
push
pop
scas
call
adc
outsl
mov
push
jge
incl
loopne
lods
call
jbe
push
mov
daa
mov
dec
sbb
fistl
or
addr16
lcall
pop
cmp
jnp
rcll
xorl
mov
sub
xchg
ja
mov
lcall
popf
mov
pop
pop
lea
imul
ret
lret
iret
lds
std
jmp
movsl
hlt
enter
repz
sti
bound
cltd
add
cltd
and
call
js
or
je
or
push
dec
stos
loopne
cwtl
push
push
jb
je
aas
lret
jmp
dec
stos
ljmp
pop
add
xorl
sbb
jmp
gs
sub
jmp
xor
adc
lret
mov
inc
lock
jg
pop
mov
and
popl
inc
mov
popa
dec
lods
mov
dec
sbb
pop
mov
add
adc
loopne
ret
fnsave
push
add
push
ret
pop
fsubl
aaa
sub
jl
xor
js
and
dec
mov
adc
out
pop
cmc
pushl
scas
lcall
and
aad
push
sti
stos
scas
bnd
cltd
test
clc
call
arpl
orb
mov
inc
inc
mov
adc
mov
cs
insl
insb
imul
mov
add
inc
lret
int3
xchg
std
pushl
jo
shrl
outsl
mov
jbe
adc
sub
icebp
fnstsw
nop
cmp
call
xor
mov
pop
cmp
jno
pop
dec
iret
xor
adc
inc
shll
out
loop
jg
cli
mov
sbb
cwtl
or
xchg
lret
mov
sarl
mov
decl
cmp
push
jne
adc
loope
jbe
pushw
xor
xchg
pop
sahf
and
mov
incl
sub
jl
lea
shlb
int3
xchg
mul
ljmp
xchg
pop
std
jmp
jo
rcl
leave
std
loope
insb
add
adcl
data16
ret
cld
mov
jno
call
ss
jmp
lock
inc
inc
dec
loopne
maxps
mov
cmp
mov
or
jecxz
divl
ja
rsqrtps
popf
sbb
sar
rcll
sbb
popa
mov
push
out
les
clc
fldcw
adc
xchg
pop
sbb
cmp
push
mov
call
xor
sbb
and
stos
daa
dec
repz
xchg
inc
imul
mov
leave
enter
mov
incl
test
pop
cmc
lods
sub
jp
jg
pop
pushf
push
and
sbb
mov
testl
data16
mov
dec
shlb
imul
mov
stc
in
dec
pop
mov
sub
sub
add
fcompl
mov
shlb
dec
in
clc
test
bound
js
in
mov
jmp
insb
popa
dec
mov
xchg
inc
mov
imul
lcall
pop
cmp
lock
fs
mov
sahf
popa
sbb
dec
and
pushl
mov
add
lock
mov
sbbl
mov
pop
mov
mov
xor
jl
dec
xrelease
mov
ret
cld
jne
ret
cmp
push
mov
cld
pop
clc
pop
test
call
scas
iret
les
jg
gs
inc
mov
cmpsl
cwtl
cmp
push
or
push
pop
cli
push
push
push
jbe
pop
mov
mov
cltd
and
xchg
ret
sbb
into
cmp
arpl
cmp
jmp
sub
push
fdivl
out
repz
dec
popf
add
xchg
shlb
and
lcall
fstl
loopne
mov
and
ljmp
or
or
lcall
jp
rorl
insl
add
jmp
icebp
decl
sbb
mov
stos
jg
jp
repz
je
cs
mov
stos
pop
repnz
insb
out
popa
ja
add
add
adc
cwtl
gs
xor
push
ljmp
push
mov
inc
hlt
hlt
es
xlat
bound
data16
inc
dec
shll
mov
mov
or
call
push
leave
xor
rorl
push
dec
jg
divb
test
movsb
popa
outsl
mov
mov
lcall
sarb
dec
or
sub
push
popf
inc
jmp
cwtl
arpl
jo
pop
or
incl
push
scas
push
mov
das
lcall
push
cltd
add
fcomip
pop
std
mov
adc
push
das
cwtl
mov
xlat
sub
insl
ret
ljmp
mov
xchg
adc
cld
or
jbe
sti
in
arpl
push
dec
loop
call
xor
xchg
out
js
mov
xlat
das
mov
mov
ja
shll
mov
lcall
ds
cmpsl
cmc
adc
out
aaa
jnp
mov
lock
int3
clc
mov
dec
or
xchg
cli
dec
adc
test
call
pop
xor
sbb
shl
xor
ds
lea
jmp
cld
cmp
adc
fcmovu
inc
pop
in
iret
mov
xor
es
or
jmp
inc
mov
lcall
xchg
and
cltd
stos
ds
fsub
xchg
leave
jg
jmp
call
add
xlat
andb
movsl
or
push
nop
or
and
cmp
out
hlt
push
xor
idivb
les
negb
add
popf
xchg
jmp
gs
pop
jl
fucomp
notl
jo
mov
fidivl
sub
mov
mov
mov
lret
lahf
scas
mov
in
lcall
shl
ljmp
mov
jb
cld
xor
push
pop
pop
or
jmp
incl
lret
xchg
aaa
outsl
jbe
push
jno
test
cmp
cmpl
add
div
xor
sti
pop
aas
lds
pop
outsb
enter
push
push
pop
xor
loope
incl
in
in
mov
mov
rcrb
les
push
sub
pop
mov
jmp
clc
in
mov
jmp
dec
xchg
arpl
xor
dec
sub
decl
in
and
mov
sahf
test
xchg
stos
pop
ljmp
cmp
incl
orl
push
sbb
out
les
call
mov
sbb
jg
das
xchg
stos
pop
fwait
cs
sbb
jmp
push
loope
das
sar
inc
pop
jbe
out
and
js
and
dec
xchg
fidivrs
hlt
pushl
add
cmpsl
mov
ret
negl
jecxz
sbb
fdivrl
and
les
add
jb
cmp
jl
xchg
inc
lcall
das
push
mov
lds
push
insl
push
movsl
nop
std
icebp
outsl
jb
aas
pop
mov
push
or
sbb
lock
adc
je
loope
and
jge
sbb
push
mov
fcompl
mov
mov
lahf
loop
lcall
dec
mov
aad
cmp
sbbl
sub
sub
lods
cmp
sar
pushf
lret
iret
mov
incl
test
pushf
outsl
jb
stos
out
jmp
stc
addl
incl
inc
je
mov
cmp
out
xor
inc
push
repnz
ja
lahf
cmp
pushl
jae,pn
jg
cmpsb
fiadds
cltd
in
push
sbb
push
mov
int3
sbb
jno
adc
jecxz
ljmp
add
test
pushf
repz
mov
rcrl
orb
and
fdivrp
decl
and
testb
push
fidivs
in
xchg
mov
xor
sti
mov
fs
ljmp
and
and
push
rcll
xor
les
cmp
imul
mov
movsb
xchg
pop
jmp
dec
xchg
jns
popa
xor
repnz
jecxz
adc
lods
mov
pop
mov
pushl
stc
lds
mov
mov
sti
repz
adc
push
mov
push
sbb
lahf
lods
push
pop
pushf
repnz
sarb
icebp
xor
jmp
xchg
ret
push
jae
xchg
pop
add
daa
lcall
aam
pushf
bound
out
les
xchg
bound
repz
insb
or
jmp
add
jp
pop
mov
test
adc
cmp
lret
ljmp
mov
inc
xor
out
and
cmc
fidivrl
xchg
jecxz
inc
sub
jnp
fbstp
pop
pop
dec
jbe
push
jo
sub
jno
lods
icebp
push
mov
mov
adc
decl
daa
jnp
dec
es
cli
pop
and
insb
stos
cmp
cmp
aam
jg
sbb
or
lock
inc
xor
cwtl
xor
test
mov
incl
clc
push
xorl
adc
stc
call
cld
lret
stos
add
sbb
mov
ret
incb
ljmp
jle
push
dec
push
jle
cmp
sbb
push
push
scas
adc
pop
sub
in
adc
fs
mov
call
stc
test
jge
hlt
and
inc
sbb
in
incl
push
in
cmp
pusha
sub
mulb
and
mov
pop
arpl
je
pushf
xchg
pushl
stos
mov
rorb
pop
adc
jns
xor
push
aaa
mov
adc
fcomip
mov
repnz
jecxz
ds
je
or
gs
std
mov
cmp
jg
ds
rcll
cmpsb
push
gs
pop
and
arpl
and
dec
popa
imul
push
push
imul
test
scas
sub
xlat
pop
push
mov
push
jp
out
fisubs
cmpsl
clc
cmp
inc
add
cs
xor
incl
cmpsl
mov
inc
or
jecxz
push
xchg
je
int3
repz
gs
movsb
jp
add
rcrl
jbe
xor
hlt
or
mov
das
sbb
sahf
cmp
lret
fidivrs
notb
mov
movb
sub
lods
and
mov
mov
pushf
dec
adc
imul
lahf
ss
pop
lock
loope
ret
push
call
pop
fcmovbe
mov
mov
lcall
scas
cmp
adc
adc
xchg
xor
or
jae
cmp
push
jecxz
mov
mov
roll
aam
inc
cmpsl
jl
adc
dec
cmp
mov
sti
inc
ljmp
and
aas
sahf
xor
push
pop
data16
lret
insl
shll
enter
jg
into
jle
aad
xor
pusha
into
test
in
jp
fdivrs
icebp
mov
push
mov
mov
aaa
add
loope
push
sub
out
pop
add
leave
and
les
ret
and
call
adc
into
mov
mov
data16
imul
cmpsl
test
mov
and
or
std
cld
pop
or
inc
stc
mov
ljmp
ds
ja
out
test
vpshuflw
jmp
xchg
add
movsb
dec
out
add
js
lea
pop
hlt
mov
mov
ss
jl
incl
icebp
mov
mov
add
daa
pop
adc
shlb
cmp
cmp
out
lret
add
dec
and
adc
inc
in
adc
mov
pop
sahf
sar
decl
jecxz
sahf
adc
jae
ret
push
mov
decb
mov
add
push
push
dec
popf
dec
and
fwait
push
xorb
cmp
cmpb
stc
push
sbb
cli
decl
pop
out
xchg
mov
or
lods
icebp
cmc
mov
jg
add
test
xchg
rorl
add
or
jg
cmp
out
cld
xor
or
mov
mov
xlat
push
imul
cld
lods
dec
ret
das
enter
aaa
xor
cmpsb
inc
test
test
add
fsubrp
aaa
out
or
mov
dec
sub
icebp
in
sbb
daa
loop
div
adc
stos
loopne
incl
mov
fsubrl
or
and
jbe
ljmp
and
decl
pop
add
fdivl
jne
ret
add
js
inc
roll
test
pop
aaa
push
inc
mov
dec
push
cmp
cld
push
mov
pop
fcompl
jns
pushl
cld
push
pop
les
cmc
int
jmp
test
dec
cmp
shlb
fcomip
dec
adc
fs
add
aam
jbe
cmp
out
and
test
xlat
fidivrl
inc
push
cld
outsl
ds
clc
hlt
cli
cwtl
push
push
dec
inc
js
fs
jno
data16
push
pop
test
fcomip
jnp
push
icebp
rorb
call
daa
mov
lods
lcall
jmp
decb
mov
and
pop
pop
fisubs
add
clc
push
pop
mov
pushl
mov
adc
aam
jmp
jns
loopne
pop
je
call
in
fdiv
xchg
out
jb
outsb
pop
push
xor
testl
sbb
jbe
cli
mov
mov
in
or
sub
in
sbb
rclb
ljmp
pop
testw
mov
xor
les
push
incl
push
jl
std
adc
leave
cmc
mov
push
push
das
test
mov
out
js
fdivl
lret
lahf
xor
pop
cmc
cmp
popf
xchg
sbb
insb
push
fisubl
ret
pusha
xor
dec
and
hlt
out
outsl
fcomip
movsl
dec
hlt
adc
mov
out
mov
int3
add
pop
pushl
dec
cmp
sahf
push
stos
insl
cmpsl
fmull
inc
add
and
incl
jno
je
out
mov
stos
arpl
xchg
jno
imul
lret
jne
lcall
outsb
mov
jo
cmp
int3
test
fwait
jl
mov
jo
mov
mov
das
nop
pop
dec
jle
enter
lcall
cmp
mov
sbb
ffree
jge
dec
testb
out
in
xor
add
ljmp
test
xchg
xchg
pop
aas
std
rorl
cmp
xor
push
fs
push
mov
loop
mov
and
cmp
test
add
int3
insl
sub
sar
incl
push
nop
xor
mov
cld
adc
test
or
and
movsb
je
cmpsb
ljmp
push
rolb
lds
out
push
cmp
adc
inc
test
xchg
or
movsl
shll
sbb
jae
sbb
aaa
je
jns
je
cmp
jg
pushl
notb
or
xor
mov
lods
add
or
xchg
inc
jne
xchg
lret
dec
xchg
sub
cmpsl
pushl
cli
out
inc
scas
cs
jnp
aad
or
and
jns
icebp
int
add
push
cmpsb
add
ficoms
cmp
call
ljmp
xlat
mov
and
scas
stos
mov
sar
call
pop
ljmp
jle
push
pop
insb
pop
daa
aas
lea
scas
and
jg
xlat
into
mov
rclb
cs
fisttpll
dec
movsl
jg
adc
out
decl
push
loope
hlt
inc
adc
out
lock
js
pop
scas
repz
sbb
in
adc
jg
push
stos
call
xor
popf
js
mov
cli
int3
xor
arpl
xchg
ljmp
pop
fsts
adc
das
popf
pop
lcall
loopne
rcrl
loope
cmp
sbb
dec
lret
mov
mov
inc
or
pop
pop
leave
std
sbb
daa
cmpsb
das
cwtl
inc
cmp
test
mov
pop
xor
add
push
fistpl
test
adc
incl
test
pop
jmp
push
bound
mov
popf
push
dec
gs
call
sub
fdivrs
sub
xor
stc
ds
xchg
jle
cmp
insb
movsb
add
fcmovbe
in
fmul
jg
loopne
fadds
imul
mov
sbb
mov
incl
xlat
shl
mov
inc
daa
mov
push
push
stos
add
shrb
mov
cld
push
leave
ds
cmp
daa
in
rol
push
lods
mov
jmp
adc
lahf
dec
fiaddl
cmp
inc
add
lock
in
dec
test
das
insb
call
fisttps
je
lock
sub
fcomip
add
jp
adc
or
push
mov
xorl
inc
sbb
aam
cmp
push
lret
aaa
scas
cs
mov
js
jb
pushf
fimull
and
in
adc
jg
repnz
sub
cmp
mov
cmp
in
mov
push
cmp
mov
aaa
pop
fucomi
nop
pusha
mov
push
add
adc
mov
mov
out
fwait
sbb
push
jmp
jle
roll
decl
mov
sbb
adc
std
mov
mov
jle
xchg
inc
incl
mov
inc
lods
cmp
push
mov
outsb
add
push
incl
jne
jge
xlat
push
dec
pop
mov
sti
pop
sbb
testl
xchg
call
mov
ffree
mov
sbb
inc
insb
jnp
mov
aas
xor
cld
decl
mov
out
fbstp
pusha
lods
pusha
pop
in
dec
mov
pushl
mov
sbb
jge
dec
and
push
sub
fisubrl
pushl
icebp
add
rorl
or
pushf
jne
cmpsl
test
push
idiv
cmp
bound
test
jecxz
lcall
pop
sbb
sub
and
dec
jns
mov
push
mov
or
gs
xlat
fistps
xor
sub
fwait
orl
int3
fs
fcomip
xchg
cmpsl
imul
cwtl
stc
sub
outsb
jne
in
fnsave
into
ljmp
stc
mov
pop
dec
sub
inc
mov
inc
ja
dec
sbb
push
cld
inc
xor
and
inc
push
lahf
cmp
lcall
incl
cmp
test
xor
test
mov
outsl
test
loopne
jg
jmp
repz
inc
dec
rorb
mov
inc
cli
cmpsl
das
pop
push
lcall
decl
fmull
out
and
xor
mov
xlat
btr
imul
frstor
pushf
inc
add
add
out
inc
add
sub
jp
fimull
aas
pop
es
mov
fisttps
shlb
mov
jmp
xchg
xlat
std
or
decl
lock
xchg
inc
aas
je
sbb
jle
lret
cmpsl
test
pushl
call
pop
cmp
popf
pop
mov
pop
stos
popa
push
sub
push
test
lcall
addb
sbb
mov
inc
cmc
stc
push
cmpsb
and
call
xor
jae
std
lcall
push
inc
insb
rcl
cmp
lret
les
lods
ds
decl
int
pop
aad
mov
fldt
jbe
fsubp
fwait
jecxz
jbe
test
pushl
sub
inc
dec
pop
hlt
push
popl
inc
lcall
aaa
xor
incl
pop
ret
sub
ljmp
in
cmp
add
and
dec
mov
cmp
push
adc
lcall
call
jo
jno
add
fstl
sbb
push
pop
ljmp
pop
setnp
fwait
int
mov
imul
call
dec
add
pop
imul
mov
clc
inc
push
dec
dec
in
push
daa
repnz
xchg
ds
rcll
out
lret
sub
adc
loopne
cmpsb
cmp
out
jmp
aad
fistpl
dec
and
decl
imulb
push
xor
shll
jo
adc
adc
cltd
ja
adc
pusha
xchg
sbb
lcall
mov
jnp
dec
inc
rolb
movsb
shlb
cs
inc
lret
sarl
or
lods
mov
outsl
hlt
mov
das
lods
sbb
xor
or
inc
push
sbb
mov
jae
jb
mov
mov
ljmp
sbbb
fdivrl
repz
repz
or
outsb
outsl
pop
cs
pop
call
dec
xchg
and
inc
lock
push
out
cmp
pop
adc
ja
xchg
add
jle
addr16
rorb
pusha
not
lods
xchg
mov
in
xchg
lock
out
inc
jl
jns
sub
insb
icebp
push
insb
nop
adc
decl
hlt
pop
out
fisubs
out
xchg
clc
fldl
pop
ret
pop
push
dec
push
call
adc
cwtl
imul
sbb
popf
xchg
add
fsubrs
filds
adcb
ljmp
movl
call
fnsave
mov
cmp
call
mov
pop
pop
sub
xchg
mul
mov
or
lahf
mov
cmpsl
decl
jo
fwait
sub
icebp
xchg
call
ds
inc
jp
bound
pop
inc
jae
xor
jg
incl
jp
movsl
hlt
dec
add
movsl
shr
push
imul
pop
cmp
in
dec
cmp
icebp
je
mov
xchg
add
fisubrs
mov
sbb
mov
lods
fs
adc
cmpsb
cmp
aas
lret
mov
push
lcall
pop
xlat
les
cmpsl
ja
add
mov
popf
ss
shrl
dec
cmp
ljmp
loopne
push
fistps
pop
xchg
mov
mov
inc
cwtl
aam
das
xchg
bound
insl
aad
or
mov
scas
dec
dec
scas
insb
push
mov
dec
negl
iret
mov
and
incl
xchg
add
imul
imul
in
ljmp
mov
scas
cwtl
roll
out
sbb
mov
ret
push
sbb
aas
sbb
test
cmpl
shll
repz
or
mov
aad
jge
mov
and
mov
stos
xchg
test
sbb
iret
je
xor
popa
ljmp
or
pop
and
bound
int
pop
jne
xchg
js
and
movsb
mov
aam
and
jg
mov
ja
out
mov
jl
inc
test
lret
in
in
sub
mov
jne
jmp
dec
cmp
cmp
inc
add
mov
in
jae
movsb
cmp
inc
fs
call
out
sub
shlb
out
push
jle
pop
jns
lret
or
or
aam
shlb
sti
call
cmpsl
push
cmpsl
shrb
adc
and
push
repz
push
lods
inc
xor
jb
mov
fstl
sub
das
pop
fadds
jg
movsl
lods
adc
mov
mov
pushf
fs
cmp
cwtl
imul
aam
adc
dec
in
lcall
xchg
loope
pop
cmp
add
xor
xchg
lods
les
pushl
push
inc
inc
fisubrs
ret
inc
jnp
fwait
divps
add
fidivrl
mov
decb
jg
decl
out
add
daa
cmc
mov
fdivs
mov
cwtl
fcoms
test
cmpsl
xchg
mov
xor
lcall
fbstp
aam
add
insb
stos
addr16
daa
pop
es
in
cwtl
and
and
jg
lcall
jns
add
xchg
pop
or
adc
insl
or
lds
pop
mov
jg
pushl
adc
jnp
mov
cmp
fadd
stos
aaa
mov
and
jle
mov
and
xchg
xlat
stos
icebp
lods
mov
std
lea
stc
ret
outsl
js
std
inc
rcrb
sbb
jns
das
fstl
mov
xor
ljmp
stos
push
mov
es
scas
xchg
lods
add
xchg
hlt
adc
inc
ljmp
jb
xchg
dec
dec
icebp
insb
insb
aam
xor
into
mov
or
xchg
idiv
scas
cli
call
jae
test
fnstenv
lcall
jge
lea
insb
jmp
cmc
adc
xchg
stos
enter
add
adc
movsl
add
aaa
je
incl
movsb
mov
lds
mov
cmpl
in
lds
adc
arpl
enter
dec
cmpsb
xchg
mov
dec
je
lret
xorl
call
out
adc
stos
pop
gs
xchg
psubsw
iret
repz
jmp
or
or
jo
jle
aam
xchg
push
mov
mov
inc
stos
aad
mov
sbb
int3
push
cmp
call
sub
xchg
daa
mov
sti
negl
xor
push
inc
lcall
jbe
or
test
into
jnp
movsb
test
push
bound
xchg
xor
cmp
inc
scas
in
push
incl
movd
and
repnz
adc
pop
jnp
cwtl
or
scas
or
cmp
and
testl
add
jmp
mov
ss
hlt
es
jno
mov
cmp
or
inc
cmc
test
sahf
fsubrs
xchg
jg
cs
mov
sbb
xchg
dec
cli
jg
xor
outsb
xchg
fstpt
fdivl
dec
in
fldcw
cmp
jns
leave
and
or
in
dec
in
xchg
jbe
clc
sbb
fyl2xp1
cmp
adc
mov
xchg
or
aam
ret
notl
dec
jmp
and
inc
outsb
test
in
scas
mov
or
or
cs
addl
dec
imul
dec
mov
rcr
stc
aam
call
add
add
mov
jne
ret
add
aam
jp
pop
dec
cmp
lea
bnd
cmp
mov
sub
mov
lret
jb
pop
add
lcall
dec
mov
and
lahf
xchg
pop
mov
sbb
ja
shrl
add
sbb
movsb
sahf
imul
loop
and
mov
in
shll
sbb
cmp
push
icebp
push
cmp
mov
mov
push
xor
jb
ljmp
pushl
mov
rdmsr
in
movsb
mov
pop
rorb
dec
popa
rolb
ret
pop
inc
inc
xchg
sbb
sub
jge
mov
xor
into
pushf
sbb
insl
push
es
inc
ja
loopne
cmp
lods
sub
mov
inc
mov
in
adc
xor
fstps
dec
xchg
mov
cld
incl
dec
add
mov
push
es
push
pop
jg
adc
adc
pop
repnz
and
call
outsb
or
pop
push
out
repnz
mov
and
push
sbb
loope
ljmp
cli
dec
inc
data16
test
mov
add
cld
call
mov
out
mov
xchg
xor
push
and
and
xchg
mov
nop
xchg
pushf
outsl
pop
pop
or
mov
jmp
mov
shll
shl
pop
stos
or
xchg
xchg
mov
into
pop
ljmp
xor
pop
in
jge
imul
outsb
pop
enter
repz
in
inc
xor
dec
addr16
push
sub
mov
add
jo
aam
pop
dec
jae
cmp
jo
mov
int3
sbbl
or
lcall
add
xchg
rol
and
mov
xchg
cltd
push
das
cs
call
cmc
pop
in
dec
movsb
push
xchg
test
push
popa
sub
out
int
mov
push
pop
daa
inc
cwtl
cmpsl
cs
add
out
or
call
add
sbb
mov
dec
in
or
mov
inc
pushf
cmp
incl
adc
sti
add
dec
mov
inc
dec
insb
xchg
mov
daa
jno
fadds
std
call
xor
repz
fstl
in
popf
or
adc
jg
imul
jns
cli
push
nop
push
sbb
lret
inc
decl
jle
push
lret
lock
pop
adc
cmp
test
xchg
xlat
sahf
daa
imul
ret
ljmp
push
lret
inc
xchg
and
push
fs
jg
add
out
mov
popf
lods
mov
ja
dec
dec
jl
jne
jnp
dec
packsswb
inc
das
popf
pop
jns
mov
and
ret
shrl
push
pop
gs
and
std
in
jle
push
xor
xlat
push
or
mov
decl
lret
push
ja
add
add
call
xchg
sbb
adc
mov
pop
out
cltd
adc
call
mov
call
cmp
lods
mov
mov
dec
jns
push
or
sar
ljmp
pushl
cltd
lret
lods
fwait
inc
insl
lcall
adc
fs
push
dec
lea
sub
mov
insl
dec
jns
push
xor
inc
mov
call
gs
or
movsl
out
int
lock
popf
jae
xlat
xchg
xchg
lret
cmpb
lret
subb
es
lds
pushl
push
loop
ud1
into
hlt
jg
ljmp
icebp
pop
cwtl
xchg
dec
outsb
sti
xchg
xchg
adc
push
jmp
mov
inc
repnz
add
bnd
test
jecxz
in
sbb
jge
jae
decl
xchg
push
arpl
push
sbb
mov
xchg
aas
and
xchg
sbb
test
stos
sub
lcall
cmp
out
ret
xor
dec
inc
fdivrp
mov
psllq
aaa
int
jecxz
fwait
movsb
adc
pushl
push
arpl
xlat
mov
adc
loope
xchg
cwtl
jmp
hlt
int
repnz
cmp
cs
push
roll
test
xor
and
cmpsl
inc
rcrb
ja
test
ret
push
dec
ljmp
cli
sbb
pop
ret
xchg
or
add
push
or
cmpsl
sbb
push
adc
inc
inc
jbe
popf
ss
in
cmpsb
mov
mov
dec
xchg
inc
jo
dec
push
out
icebp
lods
out
iret
add
decl
cmp
sbb
ror
sbb
rcl
pop
push
mov
inc
fisttps
jmp
pop
call
lock
mov
loope
fiadds
aas
xlat
jg
mov
scas
jnp
outsb
lret
sahf
int
scas
xchg
shll
and
xchg
stos
jg
int
aad
lret
inc
stos
clc
jbe
sub
adc
sbbb
pop
mov
das
jo
push
pop
addr16
xor
jge
bnd
sbb
fisttps
xchg
jge
jecxz
mov
sbb
sbb
dec
sti
xchg
jo
out
push
jb
mov
cmpsl
in
lods
imul
das
rcl
and
bnd
movsb
xchg
adc
decl
lret
dec
adc
test
adc
jns
andl
decl
sub
into
mov
mov
fdivr
lods
clc
ficoml
movsb
mov
pushl
sti
xchg
push
push
jecxz
sarb
mov
cmpsb
or
sub
push
les
imul
adc
mov
fists
cmp
test
or
pop
cmp
das
aas
rorl
dec
ds
jmp
sbb
arpl
mov
movsl
mov
pop
ja
mov
push
inc
popa
repnz
loopne
cmp
fstpl
xchg
cmp
jg
add
or
lcall
mov
ljmp
mov
scas
std
stos
push
popf
test
fs
jg
jg
cmp
xchg
stos
inc
add
mov
std
pop
sahf
jmp
cmp
inc
pop
out
daa
hlt
push
cmc
pop
movsb
adc
xchg
jl
sahf
inc
cltd
stc
or
out
adc
jno
idiv
jg
push
dec
push
jns
inc
adc
sbb
stos
inc
cmpsb
pop
sub
stos
js
ljmp
mov
cwtl
jl
dec
pop
insb
pop
das
lods
or
mov
std
push
fxch
ds
sbb
pushl
mov
inc
mov
xor
ret
repnz
sbb
dec
mov
cli
pushl
scas
shll
mov
and
add
push
inc
adc
ljmp
pop
adc
sbb
mov
mov
xchg
mov
mov
fwait
hlt
mov
imul
cmp
imul
icebp
sar
ljmp
xor
pop
sbb
faddp
mov
mov
mov
push
jnp
dec
pop
fdivrl
cld
cld
icebp
sub
dec
mov
cltd
call
or
or
push
pushl
add
and
and
adc
jo
xchg
mov
in
inc
push
mov
dec
lods
out
incl
pop
xor
adc
hlt
xlat
in
mov
in
test
lea
mov
pushl
cld
pushl
sub
loop
call
cmpb
iret
push
sub
pushl
lock
cmp
sbb
inc
push
lods
inc
loope
jmp
in
mov
lods
sti
mov
fildll
pop
lret
addr16
jp
and
das
xchg
cmp
inc
push
fwait
lock
pushf
sbb
adc
and
stos
dec
add
push
mov
js
mov
mov
decl
mov
push
loopne
ljmp
adcl
adc
sarb
dec
pop
andb
aam
das
push
repnz
jge
adc
jmp
and
scas
daa
jle
sbb
mov
sbb
fstps
mov
jp
jecxz
pop
es
jg
mov
sti
repnz
gs
clc
repnz
mov
mov
inc
jg
and
lods
jno
inc
lea
inc
jle
fstpl
adc
idiv
cmp
testb
pop
mov
jb
xchg
cld
out
jae
adc
call
cltd
jbe
xchg
clc
lcall
and
inc
loop
cs
in
mov
xchg
cltd
jp
addr16
fiaddl
test
out
call
outsb
mov
in
fcoml
mov
adc
jnp
out
nop
test
xchg
dec
into
mov
ret
push
mov
inc
push
mov
es
mov
xchg
mov
jmp
lcall
xchg
sub
into
in
add
jl
sub
lods
add
ljmp
incl
out
add
shlb
jl
xor
jecxz
pusha
ss
aaa
xor
sub
ljmp
mov
into
sub
repz
daa
fstpl
jl
sbb
ljmp
testb
hlt
jg
test
push
insl
js
std
mov
loope
icebp
xor
mov
xchg
es
decl
jbe
cld
das
ror
push
loop
lahf
xchg
cmp
test
mov
xchg
pop
or
mov
add
cmp
jne
or
lcall
in
test
std
and
imul
aam
jmp
pop
sahf
xor
fisubl
jnp,pn
sub
sbb
cwtl
mov
repz
cmpsl
cli
sub
fidivrl
call
pop
not
jecxz
and
xchg
inc
push
jne
aad
popa
sbb
xor
scas
out
insb
ljmp
test
mov
dec
lahf
popf
and
add
cmpsb
add
das
sbb
and
jo
adc
loope
mov
fisttps
fdivr
in
jmp
shrl
pushf
imulb
daa
push
pop
pushf
std
pop
pop
int
push
aas
fsubl
push
inc
add
ret
add
xchg
dec
sbb
push
gs
call
cld
aad
mov
insl
fcoms
loopne
mov
mov
pop
lahf
lods
sarl
sbb
jmp
pop
popa
cmpsb
test
and
xor
cmc
dec
icebp
dec
dec
pop
mov
das
fldt
cli
lcall
and
enter
call
icebp
inc
dec
and
decl
in
mov
xor
mov
cli
mov
subb
sub
inc
dec
leave
in
jmp
pop
pop
fucomip
repnz
or
out
fadd
cmp
jmp
pop
mov
test
enter
xchg
hlt
sbb
lcall
ja
sub
or
mov
sub
mov
outsb
mov
add
outsb
adc
sahf
arpl
and
pushf
int3
push
sub
iret
pushf
jp
mov
pop
loopne
pushf
inc
nop
pushf
sub
dec
cli
push
fcmove
pop
dec
lcall
push
push
mov
xchg
test
and
es
cmc
cmpsl
and
sbb
sar
stc
ror
imul
jl
popf
push
mov
dec
roll
nop
adc
pop
lret
lods
cmp
and
adc
call
sarb
arpl
push
enter
mov
outsl
lret
sub
movb
out
decl
sub
push
or
pop
in
cmc
mov
scas
es
stos
mov
les
rcrb
js
cmp
insl
dec
inc
push
xor
cmp
xor
xchg
test
mov
mov
cltd
fwait
mov
xlat
or
and
mov
jnp
sbb
push
pushf
and
leave
xchg
or
mov
addr16
incl
xor
inc
xor
sahf
push
jl
mov
ret
push
push
aam
cli
lock
lcall
in
lcall
cmp
lret
rol
mov
arpl
mov
scas
and
stos
outsb
mov
pop
or
lcall
lods
movsl
sub
clc
mov
push
js
sub
adc
call
fwait
inc
xchg
testl
in
data16
ret
cmp
stos
mov
lock
outsb
aad
adc
decl
int3
jns
rcll
lds
ja
mov
out
mov
loope
jg
fcomip
in
ss
in
iret
aaa
icebp
call
loop
and
jnp
popf
mov
incl
leave
jle
jns
dec
sahf
dec
pusha
orb
outsl
xchg
add
pop
cmpsb
test
frstor
call
push
leave
in
outsb
aas
inc
dec
mov
addr16
in
pop
cmp
popa
pop
mov
int
inc
filds
lock
in
jge
dec
int
xor
cld
mov
xor
inc
dec
xor
mov
sub
scas
call
pushf
fcmovnbe
push
ljmp
cltd
mov
jge
andb
loopne
in
mov
mov
incl
mov
in
nop
adc
jbe
and
lahf
les
xor
out
cmp
xor
decl
adcb
in
and
daa
test
cmc
ljmp
pop
leave
popf
das
jmp
stos
xchg
dec
notl
loope
add
mov
ja
jmp
movsb
push
cmp
mov
adc
add
shr
xor
popa
push
and
inc
dec
ja
and
shr
popf
sarl
movsl
push
sti
scas
stos
lcall
mov
repnz
in
je
addr16
andl
enter
movsl
jmp
mov
xor
sbb
scas
mov
dec
mov
mov
push
std
aaa
std
aaa
rclb
mov
jbe
movaps
sbb
pushl
jmp
inc
adc
jns
shrb
dec
test
add
aas
cmp
mov
shl
sub
cld
pusha
sub
lds
ret
lahf
das
mov
ds
inc
jns
xlat
xchg
sbb
inc
xchg
lcall
cmp
mov
cld
inc
in
pop
cld
insl
test
sbb
jne
or
mov
aaa
stos
push
lahf
inc
dec
es
imulb
or
mov
stos
cmp
call
mov
je
out
inc
push
sub
push
pop
mov
cmp
adc
ja
add
add
mov
pushl
test
gs
cld
adc
sbb
adc
jno
test
fistpll
mov
ret
cltd
xlat
sub
mov
outsb
jnp
mov
mov
push
push
dec
ja
inc
out
out
and
fbstp
cmp
insl
aad
cmp
mov
mov
mov
add
add
cld
mov
mov
mov
adc
or
sti
gs
repnz
ja
popf
pusha
xchg
mov
mov
mov
fs
and
sahf
les
lcall
data16
cmp
stc
test
push
mov
or
ljmp
xchg
or
xorl
aad
xor
dec
jecxz
mov
mov
call
aaa
cmp
add
push
pop
dec
add
xor
or
call
cmc
pusha
pop
add
jne
ret
jmp
add
and
pushf
mov
ljmp
fsub
sub
push
scas
lcall
insl
sub
cmp
incl
push
faddl
lret
leave
bound
in
fstpl
mov
cmc
mov
imul
js
cmp
fildll
xor
mov
int3
shrb
testl
sub
cli
cs
bound
lods
and
mov
xlat
add
push
mov
fbstp
ja
scas
jo
ljmp
xchg
adc
xchg
rolb
scas
mov
pop
daa
push
icebp
adc
decl
mov
imul
adc
pop
imul
mov
mov
stc
sub
cmp
xor
cs
addb
ds
rcrb
mov
nop
dec
dec
subl
add
add
lcall
pop
loopne
jp
decl
or
mov
sahf
repz
jne
sub
cmp
pushl
dec
cltd
bts
xlat
jnp
mov
dec
push
cmpsl
ret
cmp
adc
and
out
lret
and
mov
lahf
call
lcall
xchg
mov
push
push
jmp
inc
loopne
decl
push
jo
fistpll
cmp
mov
push
ja
inc
push
ffree
repz
loope
addr16
push
cmpsb
lret
rclb
dec
pop
cmp
testl
sar
in
inc
fwait
inc
bound
clc
sbb
js
adc
adc
ret
jl
xor
dec
lock
loopne
popa
mov
scas
imull
inc
cs
stos
fmuls
push
pushl
push
test
add
and
ss
call
int3
mov
xor
ljmp
pop
mov
in
jecxz
add
push
scas
xchg
mov
lcall
pushl
inc
testl
fdivrp
inc
dec
push
pop
sub
leave
mov
mov
jg
jecxz
mov
mov
in
lret
cld
mov
mov
fdivl
dec
test
fistps
in
or
insl
pop
cmp
and
mov
addb
dec
in
lods
shlb
jmp
push
xchg
mov
inc
push
xchg
imul
inc
les
cmp
lcall
push
cmp
dec
das
pop
dec
and
xchg
movsb
sar
cmp
pop
add
cld
dec
cmp
push
lret
or
or
outsb
frstor
dec
mov
fcmove
inc
adc
outsb
pop
sbb
adc
nop
pop
in
jb
repz
xor
mov
jge
jmp
lcall
cld
add
pop
cmp
add
fldenv
adc
insb
sbb
cmp
lcall
jmp
cmp
xchg
adc
sub
nop
repnz
loop
inc
inc
xchg
imul
mov
mov
adc
sbb
test
sahf
je
sub
mov
cmp
ret
xchg
test
negb
fidivrl
mov
sub
incl
cmp
lea
mov
mov
pop
jb
pop
sub
out
loope
movsb
xor
insb
mov
iret
sar
jmp
lret
scas
jge
sbb
jnp
pop
mov
sbb
scas
jbe
sahf
call
out
sbb
ror
divl
ljmp
add
inc
inc
std
test
pop
cld
adc
jl
and
aaa
fnstcw
or
inc
jno
and
decl
jbe
sahf
mov
pop
mov
enter
shr
mov
push
mov
dec
sub
inc
jno
and
lret
stc
fwait
add
cmp
in
mov
mov
jl
mov
inc
pushf
idivb
std
mov
inc
or
mov
sahf
dec
rcrb
xchg
mov
dec
mov
xor
and
xchg
data16
xor
into
push
xlat
mov
sbb
mov
icebp
cld
fsts
mov
add
inc
jne
mov
add
cmp
xchg
mov
daa
subl
js
xchg
pushl
adc
popa
add
mov
inc
test
inc
mov
mov
fnstsw
dec
inc
cwtl
mov
push
test
dec
xchg
out
aas
inc
fisubrs
test
push
call
mov
dec
orb
pusha
pop
inc
stos
or
mov
insb
pop
xchg
rorb
xlat
popa
sub
cld
incl
and
std
ror
loopne
pop
in
std
rcl
hlt
push
std
incl
sub
ss
cmp
aad
inc
xor
mov
cmp
xchg
push
mov
mov
in
and
mov
mov
sub
xchg
aaa
xor
out
das
clc
ljmp
test
jp
pop
push
pop
add
adc
mov
rorl
pop
mov
int3
cwtl
and
mov
mov
xchg
aad
inc
pop
mov
rcll
xor
call
cld
call
into
out
xor
lahf
icebp
test
or
xchg
cmpl
fistpll
inc
jp
adc
pop
rorb
das
pop
loope
xor
inc
mov
xchg
insb
popf
arpl
in
rolb
mov
xchg
out
cmp
push
hlt
sub
dec
stc
jne
icebp
lock
or
dec
jmp
add
decl
icebp
sbb
dec
fisubrl
jbe
nop
cld
shrb
outsl
and
frstor
or
mov
mov
adc
ss
xchg
ret
dec
push
std
call
mov
ds
test
xchg
imul
inc
cld
gs
shll
mov
shlb
xchg
in
xchg
mov
jg
inc
js
push
icebp
aas
push
clc
mov
ja
hlt
aaa
in
stc
shll
decl
lock
adc
push
ret
xchg
sbb
js
mov
inc
mov
in
jns
out
cli
jmp
mov
inc
xor
cltd
mov
sub
test
push
sub
adc
bound
decl
sbb
rclb
aad
push
mov
fs
jns
cmp
lods
inc
cmc
cmpsb
fsub
mov
add
fs
incl
sbb
stos
cmp
xor
je
adc
insl
pop
jmp
mov
dec
jge
sar
pushl
js
adc
test
jo
test
cmp
jmp
adc
addr16
and
pop
xchg
xlat
stos
imul
aaa
std
incl
out
mov
jg
pop
push
jne
and
gs
mov
dec
cmpsb
xor
stc
mov
cmp
clc
subb
cmp
mov
sub
insl
enter
test
xor
sub
pop
mov
or
dec
xchg
cmp
jg
dec
orb
jg
push
mov
shl
popf
lods
inc
mov
cmpsb
push
xor
insb
add
lcall
and
pop
cmpsl
clc
add
int
jnp
xchg
imul
repz
insl
addr16
ficomps
das
into
adc
pop
loope
pop
and
je
out
dec
ljmp
adc
xchg
icebp
incb
jecxz
sbb
pop
push
movsl
ds
jle
cs
push
pusha
lds
inc
in
into
cld
pop
mov
mov
movsl
mov
mov
dec
cld
jg
lret
inc
nop
pop
ljmp
shr
fisttpll
pusha
pusha
push
ffree
push
mov
or
aas
mov
push
imul
xor
in
sbb
mov
sub
bound
mov
mov
das
push
adc
lock
das
sar
jl
outsb
fsubs
adc
jg
ret
push
sbb
lcall
push
push
dec
dec
dec
cmp
mov
ja
aam
sbb
inc
cmp
fucom
fdivr
ljmp
test
xlat
cmp
mov
sti
cmp
jne
mov
lds
mov
cpuid
pop
or
inc
sub
push
call
sub
cmp
or
pop
popa
out
test
xor
mov
test
mov
jo
lcall
push
and
fsubrl
into
iret
outsl
mov
nop
das
lock
leave
out
cmpsl
arpl
orb
adc
jg
in
movsb
push
and
push
adcb
dec
in
xor
or
push
test
insl
xchg
jg
xor
aaa
dec
mov
jb
add
into
sub
call
aam
jmp
hlt
js
mov
cmp
fists
repz
mov
addr16
cmp
sub
mov
cwtl
push
add
fistpl
dec
xchg
mov
call
mov
sbbb
pop
outsl
push
xor
ret
hlt
mov
adc
mov
ja
cmp
push
xchg
orb
in
jae
scas
push
push
adc
cmpsb
push
out
mov
dec
mov
lcall
adc
push
imul
call
dec
xlat
push
pop
mov
dec
insb
fsubrp
call
mov
xchg
divl
mov
sbb
in
orl
lcall
popf
adc
cmp
shl
xor
xchg
mov
scas
adc
cmpsl
xor
dec
jmp
aas
test
xor
popf
outsb
or
cmp
inc
stc
repnz
push
adc
scas
pusha
add
mov
les
scas
cli
fistps
or
xchg
add
data16
inc
popa
mov
insl
or
jg
fimull
out
stos
or
or
shl
add
lcall
and
call
or
sub
test
or
cmp
mov
aad
inc
or
jg
adc
fbld
push
push
sub
jae
faddl
add
add
lcall
push
jbe
fstps
mov
cmc
call
inc
fistl
jae
pop
inc
sahf
cmp
ljmp
stos
mov
sub
std
xor
push
mov
xchg
sub
fsubrs
out
pop
mov
mov
pop
movsl
jg
xor
and
cli
add
iret
xchg
xchg
add
jb
scas
xor
lret
sub
xlat
pop
jge
fs
aaa
sbb
lea
sub
lcall
bound
loopne
pop
cmp
xlat
pop
fwait
out
inc
xor
movsl
mov
mov
xor
lcall
lret
in
decl
lcall
dec
lods
lcall
sub
les
xor
lcall
xchg
mov
daa
cmc
xchg
mov
inc
or
dec
mov
sub
incl
or
push
cmp
orl
mov
es
push
aam
lcall
es
repz
jl
mov
sbb
sbb
hlt
pop
or
lcall
push
inc
sbb
cwtl
mov
xchg
jbe
aam
outsl
cmp
xor
inc
jno
adc
nop
add
pushl
int3
rcrl
shr
lock
ds
scas
sbb
cmp
ret
xchg
sbb
decl
hlt
movsl
cmpsb
pop
push
lock
and
ret
ds
jle
mov
mov
decl
xchg
xor
insb
out
or
std
loopne
sbb
incl
xor
lea
mov
xlat
add
aad
js
jmp
sbb
inc
sbb
test
xchg
cli
and
xchg
pop
rclb
lea
andb
enter
lods
dec
inc
rolb
inc
mov
scas
clc
jmp
inc
adc
mov
mov
inc
mov
xchg
push
cwtl
insb
dec
rcrb
sub
ucomiss
leave
inc
mov
push
pop
push
jb
dec
jle
test
mov
popf
inc
cmpsb
ljmp
push
pop
lock
out
inc
out
fisubs
loopne
jmp
push
mov
sub
fs
fiaddl
and
mov
test
mov
pop
mov
scas
jl
and
int3
or
mov
lock
add
pushl
mov
xchg
aad
fdivrs
nop
sbb
out
clc
popf
ja
add
inc
or
mov
incl
test
mov
fs
push
xlat
dec
rclb
mov
iret
test
inc
daa
push
push
cs
jg
cmpsw
xchg
add
insb
jle
shrb
jns
pushf
nop
sbb
and
addr16
xlat
decl
popf
lcall
ds
cltd
lods
adc
push
js
enter
xor
outsb
pop
das
jmp
mov
mov
pop
pop
mov
sti
pop
push
aam
mov
aas
mov
jmp
aaa
fdivrp
xchg
mov
pop
inc
ja
es
xchg
fsubl
xor
add
mov
adc
pushl
add
cmp
dec
test
xchg
push
cmp
call
jo
mov
lret
cli
std
mov
in
jl
xor
sahf
lahf
xor
mov
xchg
inc
incl
jp
and
pop
subb
lods
add
fwait
cmp
jmp
imul
flds
sbb
and
test
and
jge
call
inc
xchg
sub
sub
fbld
inc
dec
in
jecxz
outsb
mov
imul
inc
aam
dec
les
call
js
sbb
dec
inc
cwtl
repz
loopne
fcmovu
mov
push
gs
aas
pop
inc
or
insl
dec
divb
ljmp
mov
sbb
lahf
decl
mov
cli
out
lret
inc
scas
ss
gs
pushl
fldcw
out
or
cs
sbb
fprem1
cwtl
jmp
sub
int3
in
js
cwtl
lcall
jne
dec
mov
out
cld
adcb
add
push
fld
pop
insl
lods
inc
push
std
mov
mov
lock
insl
xor
jg
ja
push
jl
mov
add
or
inc
sbb
lcall
fistpll
sti
add
fcompl
sbb
xlat
adc
cli
movsl
jmp
pop
mov
ljmp
popa
or
dec
add
rol
mov
and
ljmp
je
call
clc
rcrb
and
in
pushf
add
push
pop
int3
les
mov
fsubr
imul
aad
or
test
gs
push
dec
fcomps
scas
into
push
inc
movl
add
ffreep
iret
lods
daa
js
out
fimuls
xor
rcrl
int
das
mov
mov
pusha
sbb
test
jg
fidivrl
data16
movsb
and
adc
sahf
ds
jmp
mov
pop
mov
ret
popf
dec
pop
add
cmp
or
test
lret
mov
ljmp
mov
enter
fwait
sbb
mov
cs
sub
jmp
ljmp
iret
jl
fcomps
jb
sti
push
fisubrl
sbb
mov
jecxz
incl
and
push
mov
inc
xchg
xchg
mov
lret
xchg
rorl
and
clc
mov
data16
lock
inc
inc
and
sti
fistps
inc
les
dec
inc
adc
mov
xor
and
jg
ffree
js
in
shlb
lret
mov
repz
sbb
xchg
insl
test
mov
je
push
icebp
ljmp
jnp
add
adc
dec
pushl
aam
les
cs
nop
xor
jl
insl
loope
xlat
in
lahf
or
fmulp
outsl
mov
jg
fidivrs
dec
outsl
push
push
out
into
mov
fldenv
jo
mov
and
fcoml
mov
sub
js
xchg
mov
cmp
mov
push
jb
jae
xchg
push
xchg
cs
dec
int3
push
pop
out
addr16
fcomi
subl
dec
xlat
sbb
cli
push
or
xor
and
lcall
add
je
adc
or
lcall
and
add
shrb
mov
add
aas
in
adc
lahf
repnz
test
pop
ljmp
clc
mov
clc
or
cmpsb
pop
xchg
push
or
push
sahf
add
add
insl
adc
mov
int3
mov
push
out
aaa
xor
adc
pop
sar
imul
fxch
or
xchg
xchg
lret
insl
sar
incl
add
push
ja
lea
add
inc
dec
lret
fwait
cmc
or
outsl
xor
fbld
xor
je
fiadds
push
lret
daa
sbb
dec
push
sbb
jnp
fldl
add
xor
mov
pop
and
dec
xor
bound
mov
mov
dec
sub
lea
mov
hlt
mov
push
mov
xchg
loope
mov
incl
xchg
cmp
jae
ds
cmp
pop
cld
icebp
add
int
call
cwtl
lahf
pusha
cmc
in
add
adc
jmp
sub
rcll
rcrb
push
nop
call
sub
movsb
mov
dec
ficomps
fcomps
or
mov
loopne
adc
dec
outsb
xchg
icebp
sti
je
add
add
fildl
add
fstpt
add
or
pop
pop
push
or
or
or
fwait
inc
decl
or
or
test
adc
adc
scas
std
fwait
pop
rolb
movhps
push
adc
adc
adc
in
cmpsb
fldl
add
or
adc
pop
adc
xor
rorb
add
mov
jle
add
add
adc
push
add
add
or
ss
mov
jb
mov
jge
add
add
push
adc
decl
xor
inc
mov
adc
xor
cmpb
pusha
add
xor
js
test
cmpsl
xchg
push
leave
pop
and
loope
mov
push
add
insb
and
in
xor
inc
xlat
pusha
add
leave
mov
push
ret
xor
orl
and
add
es
scas
cmp
mov
adc
push
adc
pop
popa
jno
and
xor
stc
or
xchg
mov
lock
loope
roll
mov
sbb
xorb
scas
fiaddl
or
js
fists
sar
sub
rcr
push
ret
xchg
and
sub
out
mov
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
or
inc
dec
push
mov
jg
loope
mov
cmp
inc
jb
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
inc
mov
dec
or
adc
pop
inc
inc
xchg
add
stc
stos
pusha
add
std
or
add
lds
cld
cli
and
pushl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
fadd
dec
adc
mov
mov
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
jmp
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
fdivp
jmp
orb
int3
lcall
fs
scas
mov
pop
pop
fbstp
movb
xchg
sbb
scas
adc
mov
xor
lods
ljmp
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
ss
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
mov
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
pop
cwtl
int
arpl
push
out
or
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
xchg
es
mov
out
pop
jb
mov
mov
or
push
mov
sub
pop
mov
jl
rorl
adc
adc
pop
jg
hlt
push
add
stc
loope
push
mov
sar
andl
aas
icebp
testb
mov
call
xor
jns
je
ljmp
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
push
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
dec
sbb
sbb
sbbl
into
andl
aas
loopne
cli
adc
xchg
fnstsw
in
add
inc
adc
loope
fisttpll
out
mov
std
cli
push
push
push
idivl
cmp
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sub
mov
cmpsb
orb
mov
js
jmp
xchg
pop
clc
pop
hlt
sub
ljmp
dec
movsb
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
loopne
fucom
out
sarb
sbbl
jno
or
sarb
mov
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
jg
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
lcall
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
pushl
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
pop
lock
stos
dec
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
dec
enter
add
jg
jle
jg
mov
lahf
cld
sub
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
std
les
cli
adc
and
lahf
fdivr
stc
int3
mov
mov
mov
pop
mov
std
loop
shrl
mov
dec
incb
fisubrl
aas
mov
mov
jo
or
cld
inc
or
pop
jg
add
jle
pop
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
std
jg
call
dec
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
sar
cmp
push
jbe
mov
imul
dec
cmp
sti
push
push
in
aas
mov
fsubrl
shlb
loope
lock
and
pop
imul
add
push
sbb
sar
add
push
and
mov
adc
inc
aas
push
rcrl
inc
pop
rolb
pop
inc
jb
fistpl
adc
call
ljmp
nop
mov
inc
sti
arpl
daa
std
or
sbb
pushl
ret
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
mov
incl
fsubr
fistps
lds
fidivrl
jg
stos
jecxz
jmp
add
dec
mov
sub
jge
xor
lahf
les
push
mov
sbb
sbb
cld
addl
loopne
decl
in
stc
mov
lahf
outsl
int3
push
sbb
pop
lods
movsl
test
sti
jle
xchg
popa
out
out
clc
pop
ficompl
inc
test
in
jge
popa
push
test
fcomip
pushl
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
sti
orl
icebp
push
cld
mov
jg
mov
pop
jg
pop
shrb
rcl
jg
adc
pushl
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
cmp
adc
inc
lds
push
pop
adc
imul
or
outsl
incl
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
ljmp
jmp
mov
into
test
xchg
movsb
insb
or
and
xchg
cmpsb
test
fidivrs
clc
insb
test
stc
push
aas
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
push
push
decl
enter
fcmovb
inc
adc
inc
loopne
test
xor
and
mov
or
dec
ss
bound
or
repnz
clc
dec
cmc
mov
jl
call
mov
lret
pop
in
cmp
int
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
inc
mov
sbb
xlat
inc
aas
mov
jg
add
clc
out
cmp
or
addr16
sbb
cld
daa
jp
inc
clc
in
idiv
adc
cltd
or
mov
ret
nop
cmp
icebp
scas
cli
icebp
das
incb
lock
pop
pop
div
cld
idivl
jmp
add
fs
loope
or
jmp
sti
pop
lds
out
xchg
add
out
or
mov
loope
mov
cmpsl
popf
or
ret
das
sti
mov
fbstp
push
daa
outsl
das
aaa
fwait
pop
aam
add
cmpsb
cmp
call
fiadds
dec
push
adc
mov
dec
adc
call
in
xor
or
pop
in
mov
inc
add
cltd
mov
or
aaa
std
fucomip
or
inc
sbb
xchg
rcrl
jle
icebp
ret
ror
sbb
cmp
jmp
jg
idiv
stos
cmp
aas
pop
clc
loope
loope
mov
sub
lahf
jp
dec
add
xlat
mov
xchg
fldenv
sbb
pop
inc
iret
fdivrl
xchg
lcall
decb
dec
mov
dec
or
sarl
pop
out
jg
jno
sub
jno
cmp
sub
arpl
out
iret
push
decl
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
xchg
add
test
pushl
add
pop
stc
push
dec
out
fstpt
mov
enter
jbe
pop
add
lahf
mov
jl
icebp
push
lahf
sti
inc
pop
imul
pushl
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
inc
aam
lcall
repnz
add
push
sti
pop
inc
leave
dec
lods
or
mov
push
mov
mov
int3
pop
iret
and
and
notl
inc
xchg
test
sub
inc
inc
mov
orb
nop
add
add
push
sbb
inc
mull
dec
xchg
jnp
sub
push
push
or
adcl
xlat
sub
jno
lret
addb
inc
imul
mov
or
adc
add
and
out
mov
jo
imul
or
insl
xor
add
inc
mov
inc
add
and
mov
mov
xor
mov
sub
inc
jb
out
insb
push
sbb
inc
sub
inc
push
push
gs
push
dec
pop
and
fists
inc
push
dec
jo
or
int
daa
sbb
xor
dec
push
dec
gs
jg
clc
pop
adc
push
outsb
popa
jo
push
xorb
dec
mov
sub
sub
push
or
dec
shlb
push
js
or
rcrl
ret
aaa
or
or
adc
cmp
jns
or
aas
push
incb
popa
jb
test
adc
imul
push
es
ljmp
or
mov
adc
insl
bound
mov
xor
jo
or
add
push
or
inc
jl
loopne
test
sub
imul
insb
stos
sub
jbe
inc
inc
sub
jnp
adc
fnstcw
or
inc
imul
bound
or
pop
ret
out
mov
inc
mov
ret
adc
inc
dec
adc
xor
pop
insb
push
pop
ds
insb
jne
xchg
jge
fiadds
xchg
dec
push
xor
cld
mov
imul
outsl
stos
clc
sbb
jo
inc
push
fildl
or
inc
push
inc
loope
rcrl
mov
sarl
dec
ret
push
jne
subl
mov
gs
xchg
push
jns
mov
inc
jae
dec
loopne
xchg
adc
inc
push
popw
xchg
push
hlt
fs
inc
sarl
jecxz
std
dec
or
js
cmp
xor
adc
popa
lds
les
pop
inc
fsts
or
dec
packuswb
pop
lods
inc
dec
push
pop
pop
inc
popa
xor
adcl
lods
sbb
pop
or
out
insl
adc
or
xor
arpl
dec
aad
jns
imul
xchg
test
fcomps
fisubrs
mov
xor
loop
or
or
pop
and
popf
fcmovu
outsl
popw
push
shlb
lret
mov
sti
ficoml
inc
xchg
popa
and
jb
jmp
dec
jae
push
inc
in
adc
dec
pand
adc
or
fcmove
adc
pop
inc
and
gs
adc
push
or
fs
xchg
mov
xor
js
je
shlb
mov
or
push
stos
pop
push
or
hlt
cmp
and
and
inc
popa
sbb
jo
jp
xchg
jg
xchg
test
sbb
adc
adc
xor
cmp
aam
or
mov
outsb
adc
outsl
jns
fsubrs
mov
dec
push
lcall
xchg
stos
popa
and
sbb
insl
pop
pop
imul
aad
and
inc
je
push
or
cmc
ss
inc
out
sti
sbbb
xlat
push
inc
sbb
pop
push
jg
mov
sub
mov
sbb
faddl
es
inc
lock
mov
add
fsts
ljmp
add
loope
xor
inc
push
sbb
add
xchg
or
pop
negb
inc
add
test
sub
movsb
cs
inc
dec
and
mov
sbb
pushf
push
jne
loopne
cmp
inc
fmuls
adc
fbld
sbb
jae
xor
jne
or
js
popa
add
mov
test
popa
lds
or
ss
addr16
outsl
jg
adc
pushf
mov
inc
outsl
push
mov
cmp
xchg
add
adc
fadds
mov
pop
mov
push
sahf
jbe
sub
andl
sarb
and
gs
jne
xor
nop
or
sbb
sub
mov
cwtl
sub
fs
pop
adc
pop
mov
arpl
adc
loope
sbb
xchg
mov
cmp
sarb
sbb
and
sbb
xchg
push
popa
sbb
daa
push
outsb
adc
dec
shr
mov
jno
cmp
dec
xchg
dec
dec
push
fiadds
xchg
enter
pop
dec
cli
pop
push
je
and
push
outsl
sub
mov
xor
jb
and
jl
inc
in
imul
lods
jo
inc
inc
and
arpl
sbb
pop
inc
imul
xor
mov
mov
js
fwait
xor
inc
insb
notl
jle
cld
mov
cmovnp
inc
call
stos
mov
repz
jno
aad
popa
push
mov
iret
mov
pop
scas
jns
push
lds
inc
cwtl
rcr
sahf
push
and
mov
push
mov
out
add
les
movsl
push
movsb
idivb
xor
push
popa
outsl
sub
shlb
jmp
and
enter
inc
loopne
loopne
push
push
adc
movsb
pop
ja
pop
ja
bound
jns
je
push
or
dec
adc
test
ss
rcrb
pop
add
add
mov
mov
shrl
xchg
movsb
dec
adc
imul
iret
mov
mov
add
cmp
in
inc
sar
mov
push
pushf
cmovno
or
mov
and
dec
andl
pop
and
and
push
dec
addb
in
movsb
bound
add
ljmp
push
jb
inc
jae
mov
sbbb
or
mov
push
repz
jo
sbb
bound
or
dec
rclb
push
icebp
inc
pop
stos
rcpps
and
imul
mov
loope
mov
dec
xor
push
mov
or
sbb
and
push
xor
mov
enter
push
adc
arpl
test
frstor
cmp
outsl
or
sbb
lods
push
mov
pop
mov
pop
pusha
mov
and
sbb
push
cmp
out
jb
xor
sub
fdivl
shr
or
push
ss
or
addb
mov
sub
push
xor
xchg
mov
pop
sahf
shlb
mov
popa
push
or
int3
adc
shrl
push
sbb
sub
cwtl
pusha
pusha
xor
push
adc
jne
push
outsb
pop
rolb
hlt
xchg
rorl
mov
push
mov
nop
in
mov
test
stos
lods
or
popa
xchg
pop
and
xor
sbb
fsubs
and
inc
lds
and
test
aas
pop
nop
fwait
adc
test
mov
and
cmpsl
push
push
ss
inc
test
daa
outsb
out
mov
inc
scas
or
or
pusha
jno
icebp
aam
push
lds
cmpsb
sbb
cmp
sub
bound
cmpsl
imulb
pop
fs
int3
xchg
popa
mov
add
pop
inc
add
stos
push
iret
jns
lock
sub
int
hlt
call
inc
push
fs
pop
fcoml
cmp
jnp
mov
push
pop
sbb
sub
lods
or
inc
cmp
cwtl
repnz
out
dec
cmp
add
cmovno
xor
out
stos
enter
xor
mov
inc
out
adc
ljmp
popa
push
sarb
pop
xchg
dec
push
dec
jnp
dec
dec
jae
inc
fs
out
int3
ror
loop
iret
add
data16
xchg
add
jmp
lret
push
jmp
xchg
xchg
and
shlb
pop
popf
js
pusha
sub
mov
add
ret
ret
loopne
or
or
movsb
pop
or
add
pop
dec
add
loopne
inc
pop
push
fisubl
lahf
lret
jbe
sti
jge
inc
xchg
add
sar
es
or
hlt
loopne
lcall
add
rcr
pop
push
mov
loopne
jle
dec
mov
pop
cs
lret
lret
bound
push
and
add
and
jb,pn
popa
adc
push
hlt
ficoms
inc
cs
adc
insl
out
cmp
in
adc
jae
arpl
cwtl
out
push
lahf
and
fistpl
add
es
jg
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
