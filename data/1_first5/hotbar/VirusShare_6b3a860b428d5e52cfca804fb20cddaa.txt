divl
in
mov
mov
jo
inc
add
add
mov
or
lock
call
test
je
push
push
push
movsb
lcall
test
je
cmp
pcmpeqd
cmp
jae
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
repnz
pop
ret
jecxz
shr
inc
sub
push
push
sarl
add
or
add
pop
pop
fstpt
call
push
push
xor
mov
push
mov
xor
sbb
inc
cld
add
jmp
mov
pushf
or
push
mov
mov
pushf
mov
xchg
mov
xchg
push
js
mov
cmp
test
jne
int
pop
and
pop
leave
ret
mov
jmp
pushl
jbe
mov
decl
push
xadd
dec
test
jg
add
js,pn
mov
pushl
inc
push
mov
add
lock
pusha
mov
add
cld
add
out
or
jmp
insl
test
mov
cld
pop
pop
cltd
ret
add
adc
inc
jo
loopne
lock
cmp
je
cmpl
jl
mov
push
jne
lcall
push
add
mov
jmp
mov
push
mov
push
loopne
jle
add
push
pop
cmp
cmpb
sub
jl
push
adc
sti
out
jnp
push
pop
pop
out
cmpl
or
inc
add
call
xor
add
decb
fbld
push
jg
mov
push
mov
jns,pt
rorl
sbb
jae
jl
inc
lock
add
sub
pop
adc
jmp
ret
dec
push
enter
push
lock
mov
or
add
push
lock
js
mov
les
sub
mov
push
cmp
pop
and
int
push
or
mov
mov
enter
iret
jl
add
push
ret
ja
out
icebp
mov
cmp
ja
add
jmp
test
add
add
mov
add
dec
js
into
cmp
jg
sbb
movb
push
or
pop
repnz
push
cmp
push
add
or
sbb
pop
add
cmp
or
cld
mov
sarb
clc
mov
pop
ret
pop
mov
jbe
dec
sbb
incl
and
mov
sub
xor
inc
sub
inc
clc
sub
enter
xorl
into
xor
cmp
sub
adc
and
jmp
pop
outsb
add
jne
insl
mov
outsl
clc
pusha
rcll
sub
lds
cmp
lea
outsl
icebp
mov
repnz
pushl
pop
sti
lret
xor
fsubrs
fcomps
aad
stos
js
pop
movsb
ret
jle
mov
pop
add
pop
leave
ljmp
incb
test
or
je
add
ljmp
dec
test
sbb
jmp
fidivrs
js
cmp
pop
jo
pop
push
adc
ss
add
aaa
idiv
pop
iret
fdivs
xorb
je
add
jmp
out
shr
je
mov
pusha
adc
push
xchg
lahf
lcall
movsb
fisubrl
push
js
add
cmp
je
push
push
push
sbb
pop
push
sti
je
jle
clc
mull
inc
add
sbb
js
adc
cld
push
sub
add
jbe
cmp
int3
jle
cld
push
inc
inc
js
dec
sub
adcl
add
mov
psllq
cli
int3
push
sub
cmpsb
aaa
in
dec
fisttpl
push
and
or
cli
push
nop
adc
lcall
mov
mov
cmp
int3
rorl
call
cwtl
fdivrs
mov
inc
push
xchg
sub
mov
inc
add
lea
adc
mov
jnp
clc
divl
cld
lods
jle,pn
stc
cmpl
jle
jle
pop
jmp
filds
jge
rolb
or
outsb
or
add
adc
ret
add
push
lods
rorl
das
push
dec
arpl
addb
lea
cmp
lock
sbbl
test
mov
inc
and
jmp
jne
push
xchg
jbe
inc
add
or
mov
jp
adc
mov
or
adc
int3
or
orb
punpckhdq
mov
push
xchg
pop
or
sbb
push
ret
movsl
push
loopne
pushf
pop
and
inc
or
lea
and
inc
adc
add
loope
clc
add
xor
push
daa
lcall
lea
into
add
xchg
push
sub
pop
das
jmp
push
scas
outsb
xchg
mov
mov
add
inc
dec
add
lret
sub
push
dec
sbb
mov
int3
jge
cmp
js
testb
mov
dec
inc
cmp
inc
ss
jbe
outsl
es
dec
mov
lret
push
sbb
or
pop
ret
inc
roll
adc
pop
mov
sub
add
and
mov
loopne
adc
sub
push
adc
add
inc
cwtl
or
jo
pusha
push
dec
mull
or
xchg
rol
loope
ds
xor
mov
dec
sub
jae
rolb
je
and
pusha
into
jne
je
or
imulb
hlt
rcr
rcll
jmp
das
mov
push
pop
pop
adc
push
addr16
adc
test
mov
mov
test
aaa
or
adc
adc
dec
ss
aam
fidivrs
add
mov
and
adc
push
mov
rorb
mov
xor
adc
cmp
scas
std
or
pusha
shll
sbb
mov
lea
mov
decl
add
cmp
jae
push
call
lock
loop
ja
daa
adc
mov
add
add
mov
sub
or
mov
cli
pop
clc
cmp
jge
jae
aas
add
mov
aaa
bound
addr16
std
mov
jmp
orw
pop
push
in
adc
inc
pop
fwait
scas
push
js
leave
js
pop
cmp
and
jg
inc
add
adc
add
rcr
or
popa
lret
setae
cmpsl
and
das
dec
dec
jne
cmp
hlt
addr16
and
add
aam
sub
leave
or
clc
jo
mov
rol
mov
test
sub
push
packsswb
out
push
cmpsb
dec
push
push
pushf
movsb
shrb
jne
stos
fs
ret
lahf
inc
adc
jne
fisubrs
jno
add
mov
es
les
int3
cmc
lock
clc
push
or
adc
rcr
lock
cmp
or
in
add
repz
adc
pushf
inc
cs
xor
jno
pop
loop
dec
iret
cmp
jl
sbb
fildll
aaa
cmp
jle
dec
sub
cmp
jle
enter
clc
and
icebp
jne
cltd
lea
decb
jmp
aas
pushf
negl
push
push
add
sub
mov
dec
icebp
xchg
push
lea
loope
lret
lock
xor
repz
and
repnz
add
adc
div
adc
lea
add
or
xchg
hlt
mov
cmpsl
xorl
mov
popf
mov
xchg
cmp
jbe
mov
cmp
decb
jb
lea
aam
mov
movhps
jp
je
pop
pushf
rorl
inc
add
jle
and
fdivrl
aas
mov
and
push
push
push
inc
mov
mov
movsb
call
adc
inc
sub
inc
pop
jp
cmp
je
cld
ja
sub
mov
dec
jmp
xchg
pusha
shlb
rcll
daa
iret
or
imul
push
adc
sbbl
xchg
scas
dec
push
cmp
and
push
cmpb
out
mov
movups
jne
cmp
push
movsb
cmp
je
ficoml
and
cld
clc
fimuls
or
imul
dec
test
ljmp
loopne
hlt
adc
divl
and
pop
pop
cwtl
dec
loope
pop
scas
add
sbb
xchg
jne
std
sbb
dec
or
mov
or
lock
add
sub
ljmp
fdivrl
jge
arpl
mov
jg
mov
movntps
add
add
xor
and
jg
mov
mov
out
sub
sub
movsl
divl
push
push
add
push
outsl
or
dec
cld
pop
mov
std
or
cwtl
hlt
adc
andb
mov
jle
mov
ljmp
jb
js
insb
sbb
mov
xor
pop
mov
pop
add
stc
scas
push
pop
movsb
add
or
adc
pop
push
scas
fadds
push
add
cli
and
inc
test
pop
xor
movsb
add
ljmp
jo
hlt
sub
es
push
in
and
add
inc
push
mov
repnz
sbbl
or
fistpll
aad
lock
loopne
or
mov
cmp
jle
add
pop
outsl
dec
fildl
or
xor
mov
jmp
xchg
mov
out
enter
cmpsb
pop
outsl
pop
pop
inc
insl
popl
mov
mov
pop
push
adc
cmp
jle
and
jmp
test
test
sbb
cmp
inc
rol
push
cmpsb
adc
out
pop
adc
call
in
push
lea
cmp
mov
pop
es
push
push
fstpl
dec
pop
fistl
in
test
jns
data16
cmp
into
outsl
inc
add
out
jne
daa
bnd
adc
repz
repz
jne
or
movlps
add
xchg
xor
pop
lahf
pop
xchg
ss
xor
add
int
movd
xor
je
dec
pop
or
pop
or
and
sbb
adc
call
cmp
sti
adc
add
jb,pt
pop
lea
push
fadds
test
fcompl
push
add
cmp
sbb
out
push
aaa
cmp
loop
push
push
ss
addl
ja
jmp
mov
inc
pop
xchg
add
pop
xor
and
and
inc
sub
out
ret
adc
sti
add
mov
cltd
inc
or
test
push
xor
jne
mov
lea
cmp
data16
cld
jne
push
push
push
push
lods
imul
movsl
mov
push
mov
or
push
ficomps
sub
inc
sub
stos
insb
pop
ljmp
push
push
les
jne
cmp
dec
mov
dec
fadds
fimull
add
push
aam
push
ljmp
cmp
in
shr
int3
lock
cmp
les
aad
add
adc
enter
pushf
shlb
or
and
cmp
mov
push
test
bound
push
rclb
jne
sbb
jbe
push
mov
fnstenv
ljmp
push
pop
cli
push
or
and
adc
pop
or
dec
daa
cmp
adc
sbb
ds
push
mov
mov
rclb
in
inc
mov
mov
enter
sub
loopne
call
movb
sub
jmp
movl
imul
lock
hlt
scas
pop
idivl
adc
adc
test
adc
adc
and
sub
sbb
pop
ret
je
pop
filds
pop
cmp
lds
out
inc
jno
dec
hlt
dec
add
mov
fs
xchg
xchg
and
jle
pushf
push
sub
pop
and
xchg
xchg
push
cmp
mov
cmp
je
nop
xor
inc
cmp
rorb
or
sub
sbb
icebp
xchg
mov
int
push
icebp
dec
inc
lret
aas
cmpsb
ds
jmp
push
movd
jmp
mov
jo
sub
inc
test
pop
pop
aas
inc
sub
lea
push
lea
push
inc
push
inc
xor
jo
mov
inc
out
jmp
enter
pop
push
pop
mov
xor
xchg
cmp
xchg
test
push
test
dec
mov
mov
mov
int3
dec
rep
dec
jg
jns
dec
pop
cwtl
dec
add
cmp
jne
aad
cld
dec
mov
cmp
jb
imul
add
in
mov
stos
call
mov
cld
inc
jmp
lea
notb
ljmp
push
push
push
movd
ljmp
jle
sarb
push
add
test
movsb
add
add
push
inc
add
in
mov
mov
shr
inc
es
cmpsl
ja
inc
imulb
cmp
je
cmp
jle
sbb
sbb
inc
dec
xchg
or
jl
ss
xor
or
and
adc
ja
and
dec
sbb
and
rorb
add
jge
lret
adc
leave
sbb
add
push
ret
mov
ret
mov
mov
jo
sub
xor
jnp
cmp
testb
sub
push
call
cmp
sub
sbb
and
or
inc
push
es
mov
push
push
mov
push
add
ljmp
push
or
cmpsl
ret
ja
cmp
jbe
sub
cmp
jbe
sub
push
dec
nopl
test
add
pop
call
lds
sbb
jb
add
pushl
dec
add
cmp
outsb
roll
mov
sub
sbb
je
out
das
xlat
je
imul
push
dec
fdivs
mov
mov
mov
mov
pop
pop
adc
loopne
mov
lods
sbb
jge
clc
addl
dec
out
pop
mov
hlt
pop
ret
or
inc
jo
int
int
outsl
test
cld
loop
lods
pop
test
nop
es
push
add
mov
push
sbb
mov
cmp
cmp
mov
jge
rorb
adc
loop
adc
jecxz
cmpl
test
jge
xchg
je
lea
mov
push
insb
int3
fisubl
xchg
cld
lcall
out
js
test
cld
call
inc
adc
dec
pop
push
push
pushf
mov
enter
iret
push
push
adc
add
mov
adc
adc
add
leave
adc
int3
out
mov
pop
dec
xchg
jmp
mov
ret
loope
jle
mov
mov
pop
mov
fistpl
xor
pop
pop
rcpps
cmp
sbb
and
lds
dec
jo
mov
movb
je
jo
fstpt
clc
add
or
jne
cmpb
push
pusha
and
xor
mov
aaa
xor
push
add
adc
pop
lret
jl
pop
je
out
sbb
push
stc
add
push
in
dec
stos
cmpsb
or
mov
push
out
mov
push
aad
adc
sbb
adc
sarb
inc
in
rcl
jae
dec
test
add
lea
lock
jnp
add
cmp
jne
enter
pop
jae
ss
sti
mov
jp
jecxz
push
sti
or
or
mov
bound
jmp
leave
mov
sahf
movsl
add
aad
mov
dec
or
push
fdivr
aam
inc
or
shl
mov
nop
call
dec
adc
pop
pop
xchg
outsb
mov
les
mov
xchg
das
cmpsl
int3
mov
loopne
loopne
xchg
inc
and
je,pt
add
sbb
jp
jbe
push
loopne
jmp
mov
fbstp
mov
mov
sbb
fidivs
inc
or
pop
push
mov
and
mov
jne
push
clc
pop
in
ds
cld
int3
sub
mov
test
sbb
and
cmp
jmp
divl
jg
push
in
jo
add
nop
xor
and
jmp
pop
aaa
call
cmp
je
inc
es
out
mov
mov
clc
cs
xor
fsts
mov
sti
jne
lods
push
ljmp
cld
test
xchg
xor
test
jp
jne
push
push
aad
adc
inc
pop
movsbl
pop
enter
nop
sarl
or
push
xchg
sbb
addb
adc
mov
fcmovu
push
ror
cmp
fwait
loope
incl
aas
jbe
in
subl
mov
and
mov
cmp
xor
dec
rol
je
or
lret
je
loopne
negl
pop
pop
sahf
fimull
or
mov
shrb
or
mov
pop
fcmovb
mov
cmc
add
cld
jne
push
ja
orl
push
stos
add
jmp
dec
and
roll
rorb
mov
sub
push
aam
pop
cmc
push
sub
dec
jns
pop
sub
call
setne
inc
push
adcb
lea
mov
iret
ret
inc
dec
inc
hlt
inc
add
add
or
mov
push
mov
mov
inc
sbb
sbb
cmpsl
pop
mov
or
call
sbb
or
sbbl
pusha
outsl
and
jecxz
cs
add
inc
sbb
imul
push
push
and
pop
pop
cli
mov
sub
or
sbb
sub
lcall
jb
cmp
ja
sub
xor
leave
rcrl
imulb
mov
push
in
push
sahf
and
ret
lcall
ret
mov
data16
or
push
inc
adc
or
pushf
xor
js
loope
fildll
repnz
test
je
mov
je
mov
mov
mov
mov
cmp
sub
in
das
je
or
adc
addr16
je
cmp
cld
pop
iret
sti
jne
mov
sbb
add
pop
dec
lea
add
mov
dec
mov
dec
xor
inc
sti
filds
testb
je
testl
mov
cld
cmp
jbe
jg
loope
sbb
cmp
je
addl
inc
jmp
inc
and
cmp
xor
mov
or
sub
bt
cmp
cmp
je
mov
lea
push
fidivrl
sahf
clc
dec
sbb
fwait
push
arpl
and
or
in
mov
pop
sahf
jne
cmpsb
push
mov
rolb
notb
sub
insb
aam
jmp
jne
dec
adc
cmpsb
movb
shr
lods
mov
orb
ss
scas
andl
scas
mov
push
push
and
mov
pop
and
inc
sub
arpl
and
xchg
out
lea
adc
mov
data16
mov
clc
jmp
add
jno
movl
insb
out
sub
push
shl
add
jmp
pushf
aas
dec
icebp
or
je
and
cmpsb
and
mov
inc
adc
fs
jne
xor
fcoml
and
test
mov
push
mov
or
jo
pop
pusha
inc
test
jae
mov
jmp
dec
fidivl
mov
popa
xchg
sub
lock
loopne
xor
push
or
push
adc
roll
outsl
adc
xchg
or
push
lret
cmp
rorb
cmp
mov
xor
and
es
in
mov
mov
jle
pop
or
jl
or
add
int
adc
je
lea
cmp
dec
lea
cmp
jbe
loopne
shrl
pop
popa
test
xchg
and
stc
popf
rcl
adc
je
test
jne
je
adc
add
outsb
push
push
adc
add
adc
sub
je,pn
inc
mov
sbb
dec
add
sub
inc
and
pop
xchg
add
cmp
mov
inc
and
andb
sub
adc
ja
push
jae
add
mov
inc
and
and
icebp
lea
sub
mov
push
pop
push
movl
jmp
mov
or
xor
push
shrb
dec
pop
adc
jle
adc
mov
test
mov
push
int3
in
sub
es
adc
outsb
sub
cmp
jo
test
push
xchg
call
ret
xchg
pop
in
imul
popa
rorb
xor
movb
sbb
je
pusha
inc
pushl
inc
mov
and
icebp
add
addl
mov
cmp
mov
repnz
es
out
xor
mov
or
lea
pushf
xor
out
dec
add
in
fisubs
mov
in
push
jnp
addr16
insb
sub
ret
in
into
inc
inc
and
jnp
jnp
xchg
xor
jle
sarl
inc
cmp
je
mov
and
mov
push
push
push
ljmp
rolb
mov
inc
and
or
andb
aad
daa
dec
out
shrl
cmp
sub
dec
jae
and
pop
adc
sub
or
into
inc
mov
or
cmpsl
adc
test
sub
and
sbb
lret
mov
push
fidivrs
sbb
in
xor
push
sbb
sub
adc
push
adc
rorb
add
sahf
imul
sbb
orl
ss
lock
mov
or
sub
push
add
fcos
pushl
decl
push
les
sub
rorb
cmp
sti
pusha
jb
mov
lea
cmp
xor
cld
push
sbb
cli
mov
fistl
xchg
pushf
add
mov
xchg
dec
inc
addr16
mov
mov
cwtl
push
mov
scas
inc
lret
push
push
inc
mov
jl
push
int
sbb
sti
push
jbe
and
mov
xchg
push
cltd
test
rcll
xchg
addl
push
xchg
and
and
cmp
xlat
pop
or
xchg
push
inc
fstl
xchg
add
and
xchg
lods
inc
push
fdivrs
xchg
cmp
leave
add
add
mov
pop
pop
sub
icebp
cli
test
push
xor
cmp
cli
add
ret
cmp
inc
mov
mov
dec
or
outsl
loope
push
xchg
mov
movlhps
stos
push
sbb
mov
xor
mov
mov
adc
les
rorb
xlat
std
lret
mov
out
and
add
int3
cmp
test
xchg
rcrl
push
sbb
jne
mov
cs
pop
mov
movl
inc
add
cmpsl
cmp
into
cmpl
mov
fists
cmc
inc
cmpl
lcall
mov
and
fcom
je
add
lahf
xchg
sbb
je
js
and
dec
js
xor
ss
sub
jne
cmpl
loopne
pop
ret
cmp
jns
daa
js
mov
test
add
mov
jbe
dec
pushf
pop
dec
mov
mov
ret
sub
lahf
shrl
ret
test
mov
in
loopne
iret
mov
xlat
lcall
mov
imul
mov
mov
aas
je
adc
or
jne
xchg
aas
imul
pop
jmp
cmp
jne
paddd
mov
inc
incl
out
std
int3
jge
push
aam
loopne
pop
mov
repz
ret
ret
mul
jg
leave
sbb
push
fbld
dec
push
ss
xor
mov
jae
mov
and
or
inc
mov
mov
out
mov
loopne
aas
int3
push
fldt
jp
dec
xchg
xor
movsb
jmp
inc
outsl
lahf
out
popf
and
insl
in
adc
pop
je
adc
push
or
popf
mov
add
xlat
sbb
sub
call
adc
jo
push
dec
xchg
stos
add
scas
lods
cli
orl
mov
jb
pop
xor
cmp
add
jno
or
inc
or
data16
ret
push
test
pop
cmp
inc
add
push
les
and
sti
push
push
cmp
push
les
cmpb
mov
les
xchg
push
mov
movsb
dec
inc
icebp
jbe
add
sbb
pushf
jbe
pop
mov
or
sub
and
lret
push
sub
mov
xor
cmp
mov
or
push
sub
adc
push
or
rol
push
push
jno
movsb
add
shlb
bswap
into
popa
sub
and
popa
scas
inc
mov
and
notb
lock
notb
je
mov
aad
push
xchg
jmp
push
mov
ss
out
mov
cmpsb
fstps
push
add
clc
push
add
jb
out
inc
sbb
inc
adc
inc
lcall
cmp
test
daa
shrb
idivl
or
cmpl
jne
or
xor
decl
add
daa
mov
jmp
pushl
jecxz
cs
mov
mov
add
pop
cmp
test
push
or
mov
pop
sub
push
jp
push
pop
jmp
je
pop
imul
sub
enter
std
std
push
mov
add
dec
jmp
mov
mov
add
adc
sub
and
push
lahf
cmpsb
xchg
sti
xor
fnstsw
xlat
je
sar
push
push
mov
sbb
imul
imull
hlt
divl
mov
lea
sub
inc
outsl
sub
xchg
adc
mov
test
cli
das
xor
mov
inc
cmpl
push
push
and
cs
push
mov
mov
mov
xor
je
fcmovne
jo
fdivl
lds
je
push
mov
outsb
ret
and
lcall
pop
xor
jle
mov
mov
add
jo
jne
mov
cmpsb
jecxz
or
and
outsl
loope
enter
mov
mov
sti
fsubrp
add
sbb
push
adc
rcl
add
dec
mov
and
or
lcall
in
adc
inc
mov
cmp
sbb
xorb
into
xor
insb
adc
adc
movsl
imul
push
sbb
sbb
mov
je
or
cmpl
add
into
mov
xor
aas
js
or
cmp
inc
loop
incl
enter
incl
cmp
inc
test
inc
or
push
je
inc
cld
push
lea
rorw
in
int3
cmpb
or
sub
jne
push
push
push
sub
dec
cmpl
fstpt
cli
cs
mov
cmpsb
xor
sub
rdpmc
mov
divb
push
fistpl
inc
in
jle
or
mov
add
in
mov
imulb
push
inc
dec
cmpsb
and
pop
add
bound
leave
mov
daa
sbb
lea
adc
cwtl
aas
push
jp
lock
hlt
mov
arpl
push
mov
stos
sbb
mov
inc
inc
mov
add
shlb
dec
push
pop
enter
or
jb
aad
inc
adc
xor
call
cld
push
push
and
mov
lock
call
popa
shll
add
aad
inc
pop
push
inc
addb
pop
fisttpl
lock
popa
and
adc
add
aam
hlt
push
cmc
orl
int
pop
popf
out
cmp
push
pop
mov
stos
js
jne
addr16
rcr
mov
call
test
cli
call
das
je
jo
push
shlb
out
xchg
cmp
mov
inc
pusha
scas
xchg
mov
jmp
xor
in
jns
pop
in
mov
push
dec
pop
jmp
jno
clc
lods
fcompl
lds
movsl
movsw
fimull
mov
dec
test
add
or
clc
adc
adc
sub
test
mov
pusha
push
dec
shl
jbe
sbb
inc
push
xor
fstp
je
push
test
pusha
es
push
mov
inc
je
adc
add
and
repz
or
movsl
push
inc
pop
mov
mov
add
clc
jmp
sub
push
ljmp
add
scas
push
jmp
mov
lods
add
cmpsb
frstor
stos
xor
adc
dec
and
je
xor
lock
jo
cmpsb
sbb
lcall
or
mov
pop
push
xchg
and
mov
xor
xor
andb
dec
jne
imul
sbb
mov
mov
call
cmp
jbe
push
mov
imul
jmp
stos
jmp
phaddd
cmp
push
movl
adc
push
inc
inc
sarb
iret
in
xor
and
and
cmp
jae
pop
dec
and
add
sbb
cmp
dec
jo
mov
icebp
inc
call
pop
fdivrs
fs
and
mov
jnp
lret
sarl
sbb
xor
mov
mov
mov
test
and
pushl
aaa
inc
mov
mov
jl
jmp
pop
les
inc
mov
cld
sbb
jl
jl
movl
or
lds
movsl
ja
bswap
mov
aaa
xchg
push
cmp
mov
or
movl
sbb
mov
data16
lods
mov
movsb
mov
push
and
aaa
mov
mov
mov
cmp
mov
push
jo
adc
mov
lods
and
loopne
in
cmp
mov
jo
push
outsl
inc
mov
mov
cltd
add
sbb
pop
mov
inc
addb
or
rorl
orl
pop
addb
cld
movsb
cmp
outsl
push
sub
pop
or
jae
enter
sbb
popa
pop
mov
dec
lea
cmp
call
mov
jmp
push
push
in
ret
push
mov
in
call
or
push
inc
call
push
push
test
movl
daa
loop
cmpb
cmp
push
mov
mov
xchg
mov
clc
pop
dec
outsb
loopne
lahf
sub
pushl
jl
test
nop
mov
push
push
push
lret
mov
mov
and
mov
js
lret
fdivs
pushl
push
iret
insb
pop
lods
xor
adc
adc
cmp
inc
iret
add
sarb
nop
mov
in
push
flds
cmp
jbe
cld
adc
xchg
and
jns
push
add
lcall
jbe
adc
sti
inc
add
push
cmp
pop
iret
mov
mov
les
push
divb
jno
pop
movsl
mov
call
js
mov
cmp
bound
or
loopne
xor
loop
inc
sub
sub
aam
sbb
or
sub
daa
adc
repz
or
sahf
add
enter
or
sbb
mov
bound
sub
imul
pushf
xorl
mov
sbb
dec
insb
in
nop
lahf
cmp
add
ljmp
cmp
pop
mov
pop
push
js
or
lahf
imul
roll
fimull
and
xor
loopne
in
add
fnstsw
adc
pop
lods
xchg
xor
imul
sub
sbb
test
and
or
pop
lock
or
dec
sbb
mov
add
in
aaa
sub
into
aad
es
and
sbb
int
adc
push
subl
or
pop
imul
lea
cwtl
inc
fs
shl
je
scas
enter
sarl
add
mov
js
jmp
or
pop
cld
sub
add
movl
add
lret
loop
in
dec
xor
push
adc
ss
sbb
je
add
cmp
mov
sub
adc
xchg
push
push
pop
add
dec
ret
push
dec
inc
and
std
sub
sub
xorb
fcomps
fwait
push
dec
test
push
ds
fidivl
movsb
push
pop
add
and
les
daa
mov
xchg
dec
or
add
add
jecxz
dec
popl
mov
jo
sub
mov
js
xor
out
and
fldl
or
push
or
ud2
icebp
movsb
and
mov
loopne
push
mov
jmp
push
lock
push
fimuls
pop
push
xorb
xchg
movhps
push
mov
push
test
or
sub
jl
shlb
into
pop
movsl
insl
loopne
pusha
ds
mov
into
mov
cmp
jecxz
cmp
or
mov
lea
cmp
jbe
cmp
jbe
mov
mov
mov
movsl
xor
xchg
jnp
inc
imul
push
stos
dec
xchg
sub
push
sbb
adc
stos
sbb
add
or
pop
nopl
sbb
sarl
repnz
push
icebp
aam
pop
scas
mov
inc
mov
mov
adc
pop
push
andnps
mov
add
test
punpcklbw
ret
andl
loopne
inc
add
inc
dec
test
repnz
or
push
out
pop
cmp
xchg
sbb
je
sti
movsl
popa
sbb
es
inc
push
add
xchg
cmp
jbe
mov
fs
dec
out
in
shrb
gs
mov
bound
dec
dec
push
pop
dec
inc
push
pop
inc
xor
inc
inc
lods
std
rol
call
ja
push
pop
mov
daa
adc
lods
andl
push
mov
daa
mov
sahf
mov
mov
mov
pop
subl
and
jo
pop
dec
jne
js
rorb
push
popa
mov
add
mov
sub
push
push
inc
stos
jbe
ret
mov
inc
push
mov
jmp
pop
fsts
sarb
jb
add
rcrb
inc
iret
push
cmp
jno
mov
lods
push
mov
cs
add
cmp
push
xor
mov
lea
fisttpll
add
mov
loope
push
lea
lahf
sbb
adc
mov
sub
sub
aas
push
add
or
push
imul
add
xor
jne
mov
pop
or
popf
mov
jle
aas
int
and
jl
inc
and
add
xorb
test
adc
cmp
cmp
jle
je
cmpb
mov
sti
add
push
push
aad
shlb
fsubrs
xchg
enter
and
sub
lret
imul
data16
or
fisubrs
fadds
cltd
pop
jg
nop
add
and
call
in
rorl
push
add
add
loop
xchg
mov
mov
or
sbb
shll
das
test
push
lock
inc
jecxz
ss
xor
and
cmovae
or
pop
fcompl
faddl
cmp
jge
sbb
push
test
xchg
add
mov
fdivrs
into
adc
adc
add
push
push
clc
test
push
shll
ret
addb
popa
and
and
and
or
addr16
pop
bound
dec
lds
dec
sub
out
divl
icebp
add
mov
sub
cmp
sbb
or
add
or
fucom
fcoms
mov
aam
cmp
test
mov
mov
mov
addb
xor
adc
popa
cmp
adc
adcb
aaa
lea
mov
mov
jmp
or
inc
les
jns
out
push
and
xor
inc
repnz
test
cmp
sarb
subb
or
pop
rclb
and
std
jge
or
or
add
andl
xor
decb
jl
cmp
shll
mov
arpl
push
pushf
dec
and
pop
repnz
ret
js
je
or
orb
xor
es
outsl
push
ljmp
leave
sti
xchg
pop
out
call
stc
cmpb
fwait
mov
jne
arpl
push
cmp
sahf
jmp
pop
lock
adc
outsb
fstpt
daa
imul
in
inc
xor
fistpl
and
add
xchg
push
mov
or
xchg
hlt
sbb
mov
mov
and
mov
pop
or
add
je
push
push
cmp
xor
xor
xor
sarb
fwait
jnp
rol
or
aas
test
or
jmp
mov
mov
arpl
adc
mov
loopne
push
pop
ficoml
push
fs
add
mov
inc
je
out
jb
movzwl
mov
out
sub
push
ljmp
or
sbbb
push
dec
lcall
push
jle
loopne
or
cmp
push
push
push
imul
sub
adc
pop
xchg
pop
pop
xchg
adc
sbb
xchg
je
enter
or
mov
inc
cmp
dec
stc
fs
mov
cs
mov
mov
pop
cwtl
mov
pushf
sbb
stos
push
insl
pop
mov
aad
pop
cli
jge
in
push
inc
test
push
cmp
js
push
mov
aas
inc
jmp
mov
sarb
sbb
push
jmp
and
dec
xor
loopne
and
hlt
mov
sbb
jbe
daa
pop
push
mov
repz
push
dec
sub
fs
sub
lret
mov
add
mov
add
sub
mov
push
cmp
xchg
sar
adcl
shl
mov
inc
loope
ret
loop
mov
iret
push
cmpsb
fdivrs
adc
cmp
inc
dec
in
loopne
adc
pushl
js
push
push
sbb
push
cmpl
adc
in
mov
and
push
fcoms
mov
inc
cltd
add
loopne
pop
pop
xchg
pushf
dec
orps
jo
mov
lahf
push
adc
insb
loopne
fwait
push
or
or
and
call
or
movsl
hlt
and
cld
sbb
test
je
jecxz
push
push
test
test
lods
cmovnp
call
inc
scas
andl
and
cmc
mov
in
incb
test
stos
pop
jmp
pop
adc
addr16
add
iret
or
aam
sbb
jl
outsb
cmp
push
ja
add
pop
add
xchg
xchg
std
orl
test
add
dec
pushf
mov
popf
lds
pop
inc
lods
xchg
fimuls
pop
js
inc
adc
pop
dec
js
push
adc
aad
mov
push
inc
bound
cmp
xor
aas
cmovae
adc
movsb
movb
fiadds
push
in
mov
outsl
testb
mov
ficoml
sbb
push
ficompl
dec
out
jp,pn
xchg
add
cmp
aam
mov
push
insl
push
enter
lea
sti
adc
out
imul
jne
roll
imul
movsl
mov
mov
sbb
fdiv
cmpsl
lock
test
in
pusha
cmpsl
pop
or
aas
inc
mov
xor
fstpl
dec
cmp
xor
cmpl
sbb
inc
imul
mov
pop
or
lea
mov
adc
adc
movsb
test
rcrl
dec
push
js
or
mov
xchg
shrb
loopne
xor
mov
sub
lods
mov
daa
std
xor
popf
fimuls
imul
cmp
inc
cmp
mov
outsl
and
push
ficoml
add
lcall
inc
xchg
out
sub
inc
pop
fdivrp
nop
pop
sbb
fisttpl
push
inc
push
cmp
je
lea
adc
push
arpl
pop
nop
pop
mov
push
js
and
das
mov
out
shl
push
or
adc
movsl
cltd
sti
cmp
sysenter
push
leave
sbbl
xchg
enter
xor
jmp
inc
mov
push
je
xor
mov
mov
push
add
push
dec
cmpsb
adc
cmp
jne
es
adc
jo
int3
add
sbb
xacquire
imul
or
adc
scas
cmp
or
cmp
inc
gs
sub
inc
fiadds
fistpll
mov
outsl
sbb
mov
jle
sub
scas
hlt
or
cwtl
adc
mov
sti
jg
dec
xchg
icebp
mov
es
lea
jmp
cmpl
inc
add
fdivp
cmpsb
lock
adc
je
mov
push
mov
ljmp
mov
shrb
inc
hlt
sbb
mov
in
sub
xor
mov
out
push
mov
adc
dec
pop
andl
pop
lock
dec
repz
mov
pop
xchg
add
add
push
sbb
add
ljmp
inc
and
repnz
sub
maxps
xchg
mov
mov
sub
dec
push
popf
push
fs
sbb
sub
fistps
jae
mov
add
negb
int3
andl
shl
push
mov
orl
aas
cmpl
ret
incl
outsl
pushl
jns
add
add
pusha
xchg
dec
and
sbb
ret
sbb
xor
adc
test
test
jns
push
push
jmp
daa
mov
dec
and
repnz
mov
inc
imul
sarl
jbe
push
or
loopne
in
and
and
test
popa
dec
mov
inc
and
ficoml
cmc
orb
mov
mov
push
adc
movsl
sub
sbb
add
pop
mov
push
hlt
jmp
aad
sub
lods
mov
js
push
mov
push
push
mov
in
rcl
xchg
rclb
mov
dec
mov
pop
push
or
imul
dec
add
adc
aaa
push
add
or
xor
sub
pop
in
pusha
pop
cmp
aas
add
cmc
adc
cmp
mov
std
rorb
and
adc
and
shrl
inc
add
lock
ror
je
cmpb
or
sbb
cmpl
adc
push
gs
cmp
insl
mov
sub
sbb
hlt
mov
movsb
pusha
inc
push
icebp
push
xchg
cmp
and
cmp
add
fs
arpl
xchg
popl
pop
xor
push
testb
lea
loop
dec
inc
gs
ret
insb
add
cld
adc
pop
or
or
mov
or
push
mov
jo
pop
jbe
notb
jmp
cmp
jbe
or
je
test
fnstenv
in
insl
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
or
sub
lea
push
cld
add
sbb
cmp
stos
adc
lock
leave
xchg
dec
sub
xchg
sbb
data16
xchg
xor
hlt
hlt
jns
push
sahf
ret
jb
lds
imull
pop
pop
out
xor
jno
or
cmp
jae
cmp
jmp
lock
lret
fxtract
jne
xchg
sub
push
js
fistl
cld
inc
mov
pop
loopne
fnstenv
mov
lods
push
mov
pusha
cmp
sub
adc
xor
add
scas
out
or
push
adc
dec
or
xchg
push
rolb
sbb
jne
repz
adc
xor
clc
cmp
aad
xchg
inc
xchg
jne
add
cmp
mov
dec
clc
mov
push
hlt
neg
sbb
and
int3
je
movzwl
jle
push
jmp
adc
fldenv
cmp
fidivrl
xchg
push
inc
xchg
aam
test
fs
add
adc
xchg
push
mov
gs
dec
sub
or
movsb
push
aaa
mov
mov
adc
add
in
and
add
push
sti
lea
fnstsw
add
mov
js
pop
loopne
xchg
mov
pop
cmc
cmpl
jne
in
or
cs
fdivs
or
jne
push
mov
mov
sub
mov
sbb
jbe
scas
mov
or
int3
popa
sub
push
jmp
aaa
movsb
cs
jge
mov
movw
das
cmp
cli
push
int3
out
popf
jmp
outsl
loop
cmp
pop
push
insl
jge
das
loop
imul
sub
aas
pop
movsb
inc
push
or
lea
fiadds
add
push
mov
ljmp
mov
popa
mov
lcall
cmp
rcrb
adc
rcrl
jae
popa
mov
rcll
lea
sbb
adc
roll
jle
setne
xor
or
or
add
inc
je
int
push
xchg
xor
push
mov
das
inc
test
cmpsb
adc
or
cmp
jge
movsl
lock
and
xchg
jmp
push
ss
sub
sarb
adc
sub
aad
and
and
cmp
call
dec
cmpb
fisttpll
mov
jg
lcall
mov
call
jl
jmp
nop
mov
jecxz
scas
sub
mov
test
cli
imul
aad
enter
inc
add
arpl
sub
loopne
cs
popf
sub
or
push
cmp
cmp
sub
add
mov
test
cmp
sbb
fwait
add
test
mov
rolb
or
popf
in
outsb
add
jb
addr16
je
mov
daa
cmp
xor
xor
cmp
pusha
push
or
scas
imul
insb
jp
cmp
mov
stos
xchg
jb
push
jae
dec
sub
adc
pop
adc
jmp
pop
cs
test
and
stos
jge
add
pop
push
push
mov
add
push
je
rclb
mov
loopne
lods
insl
aaa
mov
mov
outsb
xor
and
int
test
dec
dec
cld
sahf
mov
scas
test
pusha
push
add
pop
pop
push
sub
ds
push
fldenv
mov
popf
add
sub
sbb
nop
jne
xor
pop
ss
and
cmp
mov
cmpsb
sbb
and
stos
roll
xor
gs
jmp
dec
testl
fnstsw
jmp
push
in
add
insl
imul
sahf
adc
icebp
add
add
adc
xor
xorl
pop
or
lea
lret
faddl
roll
ficoml
cmp
paddsw
pop
cld
arpl
test
jnp
and
faddl
mov
cmp
adc
ret
add
jnp
rorl
dec
xlat
or
pushf
movsb
sub
mov
push
jle
mov
push
gs
js
jg
and
test
and
pop
adc
inc
ret
or
add
push
or
xchg
roll
inc
xor
andb
cmp
mov
popa
test
pop
and
mov
les
js
icebp
scas
mov
push
idivl
pop
pop
test
adc
xchg
or
out
mov
out
push
aam
lods
jae
fnstcw
and
divb
loopne
fmull
cmp
or
out
jge
lock
ljmp
adc
add
dec
jo
push
jo
cltd
rclb
fsubp
and
and
push
imul
jle
cmp
lret
pop
rcrb
cmp
pushl
jmp
mov
sbb
rcrb
push
mov
leave
add
mov
je
aaa
or
je
and
cmp
in
mov
enter
ljmp
lea
arpl
in
inc
jns
mov
add
adc
out
push
arpl
mov
dec
sub
push
or
add
addl
cli
add
jne
jnp
adc
lcall
inc
push
loopne
add
xorl
push
push
jne
subl
rol
pop
sub
mov
xchg
mov
int3
and
cmp
sahf
pop
out
daa
sub
mov
js
xchg
mov
sub
je
cmpsb
or
pop
sub
insb
fildll
hlt
lds
out
sbb
adc
inc
loopne
fcomip
mov
or
inc
fcmovu
dec
jmp
das
lods
lret
lea
aaa
pop
jge
loop
jae
sub
rorl
xchg
leave
or
sub
lods
and
xor
adc
dec
push
negl
cli
cmp
int3
arpl
push
mov
or
add
xchg
sbb
and
adc
lods
adc
lsl
dec
xchg
push
add
lret
xor
dec
push
and
push
sub
push
rcl
popf
adc
pop
pop
and
adc
cmp
mov
and
adc
lock
mov
je
jle
adc
mov
cmp
sbb
add
mov
mov
xchg
fisubrs
testb
enter
sub
xchg
adcb
xchg
ss
hlt
inc
xchg
push
lea
cmp
fdivl
in
scas
mov
ja
shld
add
nop
shll
cli
filds
rorb
xchg
sti
and
mov
aad
popf
out
inc
outsb
les
faddp
mov
mov
mov
subb
mov
add
xor
fstpl
pop
fimull
cmp
lea
mov
loopne
jo
sub
shll
mov
mov
je
test
test
mov
dec
or
push
add
jae
inc
cmpl
je
jne
adc
pop
dec
xor
or
mov
in
je
data16
inc
or
cmp
shrb
insl
dec
out
fadds
insb
jmp
mov
in
aam
mov
bound
or
add
mov
push
add
pushl
or
ljmp
inc
ljmp
aas
push
push
push
mov
mov
les
decb
test
je
cmp
push
cmpb
ret
push
bound
jo
push
sub
sbb
push
bound
adc
or
dec
pop
fs
mov
sbb
nop
stc
lcall
divb
notb
or
adc
pop
std
add
cmp
cmp
jae
inc
jmp
and
dec
rcll
sti
sub
pop
test
mull
pop
add
add
xchg
sub
jge
pop
movb
xlat
incl
ret
pop
je
cmp
jb
out
test
mov
sti
into
add
xor
jnp
jo
dec
xchg
icebp
push
idiv
aas
inc
xchg
sub
idivb
cld
les
xchg
push
add
push
push
push
push
adcb
loopne
mov
mov
cli
in
daa
cmp
pushf
fsubrs
cwtl
mov
mov
rcrb
add
xchg
and
push
jmp
push
push
cltd
sub
and
jmp
push
inc
fnstenv
sub
and
jg
imul
or
or
pop
push
mov
cmp
stos
jge
insb
idivl
shrl
fistpl
call
mov
cmp
jb
inc
inc
adc
mov
sbbb
into
jle
decb
add
ja
pop
mov
sub
push
inc
pop
les
and
and
popl
xor
inc
fistl
and
inc
ljmp
dec
add
push
add
iret
xchg
das
inc
loop
ret
sub
and
out
movsb
jb
and
mov
lods
xchg
inc
data16
push
xor
ja
cmpsb
imul
sbb
ret
push
push
dec
jmp
mov
incl
or
pop
in
pop
xorl
dec
stc
mov
cmp
arpl
cmp
pop
ss
ds
jo
out
or
mov
inc
add
sbb
rcl
cs
push
mov
and
xchg
add
sbb
std
rclb
mov
fadds
jmp
call
dec
or
iret
jne
sahf
inc
pusha
jno
ljmp
adc
push
sbb
daa
or
aam
mov
push
pop
inc
and
push
dec
jae
push
xor
pop
pop
imul
es
pop
imul
imul
cmp
adcb
sbb
shlb
adc
mov
aam
inc
mov
ds
jge
sub
push
pop
mov
push
lds
out
xchg
ret
mov
push
sub
cli
sbb
lcall
add
inc
insl
fldcw
pop
cmp
jb
loopne
jno
fwait
pop
pop
push
std
roll
mov
adc
sti
adc
dec
inc
decl
sbb
test
lahf
mov
mov
dec
dec
sub
cmp
fcomps
inc
sahf
push
mov
xchg
mov
loope
shr
mov
or
xor
orl
sbb
mov
sbb
inc
or
pop
sbb
and
sbb
int
and
sub
ja
jbe
xchg
mov
jg
mov
xchg
mov
sub
lahf
mov
mov
cwtl
sub
movsb
fcomps
push
and
push
and
add
jmp
or
jne
push
imul
pop
sbb
pop
xchg
push
push
test
mov
int
mov
lret
and
mov
or
sarb
lods
mov
jne
jne
push
jb
jne
add
inc
insl
lods
dec
add
pop
add
lock
lods
es
test
test
push
sti
test
cmp
pop
orb
xchg
add
adc
push
outsl
in
jne
sub
or
mov
push
bound
adc
cmp
jne
mov
push
movsb
adc
or
dec
or
dec
or
int
xor
push
sub
fimull
and
loop
insb
test
sbb
push
or
cmp
add
add
lahf
xchg
fsubrl
xchg
fsubl
lsl
cmp
jge
mov
jmp
pop
fsubrs
int3
leave
je
call
mov
cld
add
xor
leave
mov
xor
inc
cmp
xor
outsb
outsl
inc
push
lea
into
or
addl
dec
jno
mov
fldenv
push
pop
adc
pusha
cmpsl
rorl
std
les
rorb
pop
push
mov
mov
fsubrs
push
cmp
fwait
inc
mov
ret
push
cmp
inc
push
mov
mov
mov
call
pop
cmp
adc
push
pop
dec
cmp
xor
or
cmpl
jp
jmp
outsb
or
nop
stos
mov
jge
push
js
mov
fs
xor
sbb
cmp
je
jecxz
pop
xor
sbb
inc
lahf
rclb
cmp
cmp
mov
push
pop
add
int
lea
aas
mov
add
out
int
push
sarb
pop
pop
inc
or
sbb
adc
pop
cwtl
imul
sub
jo
cs
push
xor
scas
jg
mov
in
mov
jbe
leave
sbb
pop
jb
and
add
call
push
or
mov
sbb
mov
addw
movzwl
test
je
test
push
outsl
push
xchg
xchg
fnstenv
add
mov
inc
jmp
mov
xchg
sbb
xor
das
adc
cmpl
xchg
sub
inc
aad
pop
mov
fdivp
das
jmp
loopne
pop
add
or
lea
push
push
inc
mov
adc
daa
pop
loopne,pt
js
sub
push
fsubrl
adc
adc
adc
cmp
in
add
xchg
andl
leave
in
sbb
add
inc
pop
and
xchg
jb
neg
cli
rolb
mov
add
shl
add
xor
cmp
cwtl
xchg
shlb
pusha
pop
outsl
adc
lahf
push
mov
xor
and
rcrb
les
inc
cmp
jle
mov
in
and
cmp
xchg
and
jo
and
in
pop
adc
jbe
arpl
imul
jne
clc
cmp
movl
mov
fcoms
inc
xor
push
push
jp
popa
inc
stos
or
stos
ja
sbb
sub
push
mull
clc
imul
add
jo
aam
pusha
xchg
xor
mov
mov
test
push
mov
cmp
inc
sti
sub
and
add
testb
addr16
pop
mov
and
insb
push
add
sti
dec
into
push
add
clc
xor
and
sbb
mov
scas
add
fcomps
xor
int3
pop
dec
jne
mov
sahf
jl
les
js
insb
and
popa
sti
fs
push
lret
outsl
mov
inc
loopne
and
pop
sub
push
pop
dec
lock
and
leave
push
push
daa
jge
clc
mov
pop
sti
adc
cmp
popa
lock
test
adc
or
adc
mov
pop
jecxz
pop
popf
fnsave
jl
subl
call
testl
mov
sbb
or
adc
pop
addr16
sub
int
dec
jnp
pop
repz
mov
stc
mov
cs
outsl
cmp
add
lock
sub
push
push
movl
inc
cmpsb
mov
cs
or
es
js
and
rcrb
repnz
and
xchg
mov
push
push
fcomps
cmp
xor
cmp
in
cs
add
in
mov
dec
inc
mov
inc
dec
fisttps
mov
adc
ds
mov
jmp
into
out
push
or
mov
sub
dec
sahf
inc
push
rorb
xor
sub
int3
decb
popf
aam
xchg
and
jnp
cmp
icebp
rcrl
xchg
push
mov
aam
les
jno
ja
and
movb
in
sti
mov
data16
imul
mov
cmp
mov
or
cmp
fisttps
xor
mov
pusha
or
pusha
fadds
or
jb
jl
imul
out
adc
sub
cmp
jge
push
xchg
and
shrl
mov
fs
hlt
mov
mov
adc
cld
cwtl
test
xchg
push
cld
subb
int
fsubl
rolb
outsl
fnstcw
repnz
cmp
xlat
push
ret
adc
es
mov
mov
sub
mov
or
aas
or
dec
jno
repnz
inc
add
cmpsl
imul
aam
inc
sub
adc
mov
pop
popf
subl
xor
mov
cmpsb
movsl
fcoml
mov
push
in
addl
xchg
dec
jae
scas
jmp
es
sub
add
cwtl
fcom
xor
push
inc
adc
sar
inc
mov
fdivs
idivl
js
push
xor
rolb
call
adc
push
dec
mov
dec
out
mov
mov
mov
xchg
sbb
hlt
xor
add
and
lea
movzwl
or
sub
shlb
push
push
push
mov
popa
or
xchg
sbb
ss
push
or
push
test
adc
ret
insl
xor
and
rolb
jns
mov
and
jecxz
popa
or
pusha
daa
add
adc
xchg
mov
ds
xchg
cmpsl
jmp
add
xchg
loopne
or
cltd
dec
mov
xchg
xchg
jo
enter
or
lret
test
fs
push
adc
movsl
mov
push
pop
push
pop
arpl
add
lcall
add
cltd
nop
or
sbb
nop
or
or
cmp
or
sbb
nop
push
scas
add
fsubrs
clc
pop
push
cmp
add
or
cmpsb
or
jl
aam
dec
enter
aam
sub
fdivrs
jl
ror
jmp
and
lods
lods
outsb
adc
je
icebp
push
fidivl
add
pushl
sub
lock
add
fdivrl
mov
fisubs
push
mov
cmp
cmp
cmp
sub
dec
out
push
mov
je
cmp
dec
jns
mov
or
pop
test
subl
push
adc
push
jecxz
and
in
sbb
add
dec
fcoml
xor
cmp
jl
add
lock
dec
in
and
pop
rol
je
mov
push
pop
mul
fcoms
sbb
adc
push
pop
dec
int3
shrl
or
push
pusha
sbbb
sub
ja
xor
adc
push
pop
test
js
je
mov
inc
inc
daa
test
sbb
fidivrl
sbb
mov
jnp
ds
inc
add
add
fsubrl
push
cmpsb
add
mov
fisubs
outsb
loopne
lret
sbb
mov
sbb
cli
fiadds
cmp
mov
mov
mov
sbb
xchg
mov
loopne
xor
xor
push
push
mov
xor
xchg
inc
dec
lahf
xor
pop
mov
xor
and
dec
cmp
lock
popl
orl
jnp
rol
push
xchg
inc
in
mov
cmp
in
cltd
lods
rclb
ret
fistps
js
out
int
adc
sbb
push
dec
enter
jnp
cmp
pop
inc
adc
test
xchg
jmp
cld
std
jg
xor
loopne
adc
les
fcoml
add
inc
cmpsb
lock
sbb
popa
pop
in
push
or
add
int3
jl
adc
xor
push
xchg
xor
outsl
cmp
mov
xor
adc
push
movb
shrb
sbb
rolb
roll
setb
xor
or
orb
movsl
shlb
movnti
enterw
stc
loopne
pop
push
jns
xchg
popf
mov
push
mov
mov
add
adc
and
sbb
shll
fs
insb
jo
js
mov
imulb
enter
mov
cwtl
or
enter
sarb
fwait
mov
inc
mov
pop
imul
scas
sub
push
and
std
add
aam
ficompl
xchg
test
add
loopne
dec
clc
iret
and
add
mov
xor
sub
push
fadds
sbb
and
xor
jo
xor
add
and
xor
pusha
push
shlb
xor
jbe
push
sub
arpl
pop
inc
and
leave
movsb
push
mov
fs
sbb
sbb
adcl
push
pop
rolb
mov
mov
jne
std
mov
pop
fdivrs
cmp
sbb
mov
adc
addps
scas
inc
and
lods
jl
das
mov
and
into
mov
adcl
mov
jne
mov
es
dec
dec
mov
andb
or
push
ret
in
inc
rol
add
sbb
jb
mov
aam
ss
jmp
push
cmp
es
mov
mov
mov
mov
lea
loopne
push
movsb
xor
xor
sub
les
repz
push
mov
xor
jnp
leave
out
and
jo
sar
push
rol
ljmp
and
xchg
add
add
test
dec
push
fldl
mov
xor
aaa
and
das
xorl
filds
inc
dec
pop
jne
orl
cld
mov
jne
imul
popf
mov
mov
cmp
inc
and
xchg
add
test
mov
imul
add
das
push
test
stc
fldl
ja
arpl
pop
lds
add
xor
mov
xor
fimuls
into
add
test
shrb
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
pop
dec
fwait
jl
sub
insb
lahf
jno
cld
outsb
mov
push
dec
mov
into
lods
push
lret
and
push
inc
mov
or
push
mov
div
or
jmp
xchg
sbb
adc
xorb
and
inc
stos
outsl
les
push
aam
xchg
pop
add
dec
push
addl
mov
ds
or
cli
dec
push
pop
std
out
fidivrs
addr16
mov
or
orl
or
js
or
pusha
inc
pusha
add
or
dec
js
out
js
cld
or
or
adc
je
xor
and
adc
outsb
jo
pop
xorl
pop
xor
dec
ret
push
or
data16
dec
arpl
icebp
std
test
cmp
xchg
enter
xlat
xlat
sbb
aam
cmpsb
push
or
ret
mov
add
sbb
lea
fidivrs
jb
add
sub
mov
and
pop
scas
testl
jge
movsb
int
adc
lock
xor
lock
xchg
and
sbb
pusha
bswap
or
mov
je
xor
add
and
orl
enter
icebp
or
mov
jo
icebp
adc
add
testl
cmp
cli
je
popf
add
loop
orl
mov
je
cmp
lea
mov
sti
pushf
loop
fcoms
fwait
inc
and
daa
add
or
push
xor
dec
roll
inc
sbb
adc
sub
mov
adc
jnp
lock
lock
and
xor
js
dec
jmp
in
cli
mov
pop
inc
adc
sbb
jo
xchg
xor
or
movsl
movswl
mov
push
mov
lret
add
push
and
add
or
shrb
outsb
sub
sub
xor
cmp
sub
test
clc
loope
flds
pop
loopne
in
mov
sbb
push
ret
or
js
mov
xchg
and
sbb
mov
mov
je
inc
pop
mov
sbb
adc
stos
clc
jbe
cmp
push
adcb
add
sub
sbbl
sub
jns
adc
movsb
adc
inc
insb
push
push
lcall
popa
shlb
ss
inc
mov
pop
ret
or
and
add
cld
adc
sahf
out
mov
xchg
ret
add
lcall
or
xchg
mov
cwtl
sub
mov
outsb
add
lock
jo
cmp
andl
sbb
add
js
pop
shll
push
and
dec
rorb
mov
cwtl
adc
dec
push
out
adc
add
lea
dec
and
or
outsb
xchg
xor
mov
pushfw
xchg
shl
in
fcoms
inc
add
jecxz
cwtl
notl
cmp
mov
lret
rolb
push
xor
mov
push
fimuls
jns
sbb
mov
imul
xchg
mov
mov
lods
jg
and
cmp
fisttpl
cmp
aam
cmp
inc
push
push
pushf
rolb
dec
loopne
stos
icebp
mov
add
dec
ret
adc
sbb
aaa
stos
movb
add
in
sub
xchg
push
jge
int3
mov
mov
push
cmp
push
mov
addb
loope
inc
call
or
clc
mov
jmp
and
and
inc
sbb
adcb
les
fs
or
pop
out
data16
or
out
jmp
mov
sbb
fisttpll
dec
pop
les
pop
or
adc
data16
pop
cmpsb
adc
lcall
sbb
mov
push
pop
and
sub
loope
xchg
pushf
pop
inc
cs
push
arpl
push
adc
push
and
cmpsb
jbe
mov
movsl
inc
sbb
pop
push
push
inc
push
mov
mov
in
fstpl
out
stos
add
clc
xor
xorb
ja
lock
mov
push
rolb
shrb
xor
inc
fsubl
add
setb
ret
mov
push
push
fimuls
add
mov
inc
sub
xor
dec
add
fwait
icebp
xor
stc
movsl
add
sub
jl
scas
push
jp
pop
fcomps
es
adc
mov
lea
push
push
jp
call
sbbb
sub
cmp
lock
xor
lock
sub
cmp
out
sub
sub
cltd
inc
xor
add
sbb
imul
shlb
cmp
and
popa
adc
loop
aas
add
daa
insl
div
jg
movzwl
cmp
je
or
test
fisubl
inc
add
dec
movsl
and
sub
movsb
test
and
insl
movsb
or
testl
xor
dec
insb
in
clc
pop
dec
jmp
cmp
push
mov
in
cmp
mov
and
les
jmp
or
push
aam
in
popf
push
insb
xor
cld
and
sbb
and
or
add
ficompl
cmp
dec
icebp
aas
adc
sbb
sub
adc
sbb
mov
jmp
loope
push
inc
jnp
je
mov
mov
fs
lret
shlb
mov
or
or
push
call
mov
sbb
dec
lds
push
adc
or
add
inc
adc
adc
xchg
mov
shl
inc
push
xor
movsl
mov
push
add
cmp
sub
sarb
or
or
orb
sbbb
xor
push
push
push
xor
mov
xlat
dec
cltd
sbb
add
xchg
jb
adc
add
iret
pop
loopne
subl
hlt
lock
or
mov
add
loopne
shlb
pop
sbb
lea
xor
decl
pusha
cmpsb
xor
call
rcrb
push
mov
mov
mov
push
adc
test
pop
mov
loopne
dec
jns
xchg
push
xor
push
cwtl
or
adcl
jbe
js
call
jmp
xchg
into
mov
push
mov
or
add
and
add
cs
lods
mov
ja
nop
ss
xchg
cmc
sub
add
pusha
dec
push
sub
int
nop
int3
inc
or
xor
xor
inc
add
push
lock
fs
mov
pop
add
negb
lds
and
mov
xor
or
outsl
pop
js
movl
push
push
test
lcall
pop
les
aad
outsl
imul
jnp
je
jo
push
in
mov
aam
ss
adcb
outsl
insb
lds
push
jo
inc
in
inc
sub
pop
xchg
jbe
roll
xor
mov
cmc
js
aas
aaa
fisubs
cli
push
jmp
pushl
test
push
pop
mov
pop
pop
jns
rcrb
cmp
out
icebp
hlt
pop
fmull
fcoml
push
inc
add
mov
push
adc
adc
adcl
shll
and
inc
insl
inc
negb
outsl
add
mov
jl
andl
pop
adc
shlb
fs
sbb
cltd
je
jge
add
leave
pop
leave
and
push
aam
or
in
mov
repnz
jo
push
sub
adc
lods
sbb
inc
mov
loopne
mov
jbe
cmpsb
loope
fistps
jo
cmpsl
and
xchg
mov
pop
adc
movsb
sbb
mull
sbb
adc
adc
sbb
in
shrl
ret
adc
out
xor
cmp
xor
lea
dec
sarl
shll
sub
sbb
jmp
and
arpl
les
clc
mov
push
and
or
mov
fdivs
stc
mov
int
xor
or
lds
mov
stos
cmp
adc
lock
sbb
xor
loopne
out
je
and
push
daa
inc
clc
mov
cmp
add
cs
cmp
aas
ret
add
sbb
testb
scas
adc
xchg
cwtl
jne
sar
and
dec
or
dec
jl
loope
xor
mov
fistl
jmp
addb
neg
sbb
insl
sub
push
or
inc
mov
leave
pop
adc
dec
in
arpl
cmp
ja
sub
in
movsl
inc
add
mov
aas
add
or
insb
rolb
inc
push
jo
dec
add
pop
fisttpl
popa
add
lcall
leave
add
jge
add
dec
push
loopne
mov
inc
mov
ret
or
in
loopne
rolb
shll
inc
mov
cmp
sub
and
push
mov
cmp
test
mov
mov
mov
mov
imul
les
push
push
push
fs
dec
mov
mov
int
add
in
add
or
int
pop
mov
rcrl
bnd
fisubl
dec
fsub
js
mov
mov
xlat
push
sahf
int
cmp
aam
mov
mov
sarb
mov
punpckldq
push
je
add
push
sahf
jl
xchg
adc
add
push
and
jb
data16
dec
mov
sub
jmp
mov
add
inc
sbb
push
aas
mov
scas
mov
or
cltd
testl
jne
sbbb
scas
shll
test
push
sub
in
in
rorl
rcrb
cld
sti
scas
inc
cs
add
or
cmp
jl
push
aad
pusha
adc
and
push
mov
add
pusha
or
aas
jmp
test
dec
push
fldenv
and
test
inc
inc
pop
movsl
lea
je
pop
jp
xor
xchg
sbb
jo
inc
stos
adc
daa
lret
pop
popa
sub
add
roll
mov
mov
test
pop
pop
inc
pop
mov
pop
push
cmp
stos
push
adc
adc
cmp
test
mov
cmp
adc
sbb
jl
sbb
stos
mov
adc
inc
popl
ljmp
push
mov
push
in
shlb
jns
push
lea
sbb
pop
cmp
mov
xor
cmp
test
test
dec
sub
imul
int3
mov
and
jae
jecxz
lock
rorl
fadds
outsl
add
repz
push
pop
add
or
inc
scas
lock
insb
idivl
loope
subb
insb
roll
sbb
sbb
mov
mov
mov
pop
mov
mov
sbb
test
cwtl
ror
movsl
std
movsb
jo
jge
adc
sbb
lahf
mov
cmp
cmp
imul
adc
loope
jg
test
push
add
subb
jle
cmp
jp
mov
pop
nop
mov
push
pop
or
fstps
sbb
dec
pop
push
push
adc
dec
lock
shlb
call
push
jae
mov
mov
and
popa
shrd
movb
adc
imul
sbbb
sbb
pop
adc
fucom
pop
aam
insb
shr
inc
add
pop
xchg
mov
adc
cmpsb
adc
cmp
jge
or
pop
aad
jo
mov
insb
std
jmp
mov
sbb
dec
or
adc
add
pop
fdiv
mov
call
in
sbb
dec
ss
jae
movsl
mov
dec
fwait
inc
or
hlt
sbb
test
sbb
arpl
sbb
xchg
sub
or
jb
lahf
xor
jns
repz
mov
ja
sbb
idivb
add
cmpsl
in
icebp
xor
stos
jle
push
push
fisttpl
jno
adc
ret
xchg
lock
jmp
inc
stos
xorb
pop
sbb
push
jge
js
add
add
js
fwait
cltd
pop
mov
or
dec
mov
out
add
add
mov
insb
insb
sbb
das
int3
adc
dec
adc
inc
pop
movsb
stos
cmpb
add
pushl
xor
sub
out
movb
lods
loop
jb
mov
je
adc
sub
ss
inc
xchg
loop
dec
jne
ss
add
aaa
leave
call
sahf
adcb
mov
add
jmp
push
pop
push
sbb
mov
pop
mov
sbb
outsb
push
repz
cld
arpl
sub
repnz
inc
xor
addr16
adc
dec
push
lock
dec
ret
jbe
es
mov
mov
and
mov
dec
test
sub
xor
outsl
xchg
jbe
ds
inc
jo
pushf
into
je
pop
jbe
push
adc
inc
test
pop
sbb
push
movsb
lret
push
loopne
and
add
xchg
clc
sbb
and
scas
jmp
fstl
clc
rcll
xchg
xor
mov
sti
xor
inc
insl
cld
mov
sub
pushf
jae
insl
dec
mov
jmp
inc
popf
popf
and
je
lea
mov
add
popf
cmp
sub
lds
dec
push
push
dec
jmp
adc
mov
push
loopne
cmp
pop
fs
mov
xchg
push
pop
ret
mov
pop
stos
mov
sub
cmp
les
or
sub
jbe
mov
push
push
inc
pop
out
enter
cmc
mov
add
cmc
pop
push
push
fs
add
repnz
pop
xchg
hlt
pop
ret
pusha
je
movsl
or
xchg
dec
es
xchg
sbb
dec
mov
gs
dec
shlb
push
adc
shlb
pop
xchg
adc
add
lahf
or
aaa
sbb
lock
loop
dec
stos
orl
or
cmp
daa
mov
push
xor
popf
lret
add
lods
ja
insb
lock
push
pushf
sub
mov
sub
or
lock
push
testl
mov
mov
cmpsl
or
lahf
cmp
xor
jmp
xor
cwtl
adc
and
cmpsb
add
and
and
loope
insl
repnz
scas
or
add
mov
sub
pop
mov
push
mov
es
js
movl
pop
pop
push
push
lods
and
mov
out
fwait
or
xor
push
or
xchg
lcall
push
pop
cmp
add
xlat
sub
loopne
inc
xchg
cmp
in
jb
testl
xorl
and
push
pop
lret
cs
sub
mov
mov
and
sub
rolb
cmpsl
in
adc
test
push
xchg
add
mov
cmp
push
sbb
add
lret
mov
cmp
roll
rcll
addl
mov
mov
mov
ds
sti
cmp
daa
push
jle
xorl
popa
filds
imul
mov
das
in
daa
loope
add
dec
in
js
pop
inc
jnp
hlt
jo
rcrl
dec
in
pop
add
insb
lock
or
sub
loop
dec
add
push
push
pusha
rolb
add
jne
mov
stos
sbb
jbe
cld
push
inc
dec
inc
mov
pop
add
shl
ja
ret
adc
adc
hlt
adc
iret
lret
adc
cmp
imul
push
xchg
xor
and
nop
push
imul
xor
in
jne
ret
outsl
cmp
aaa
mov
fadds
je
or
je
or
sub
pop
jbe
adc
mov
lods
sbb
or
loope
jge
add
mov
sahf
xchg
jnp
or
adc
push
jmp
cmp
enter
adc
adc
push
xor
inc
dec
clc
add
adc
repnz
mov
add
js
nop
jmp
dec
addr16
mov
jbe
cmp
imul
mov
jecxz
add
mov
jecxz
jmp
mov
je
cmpsb
or
inc
adc
inc
pop
adc
or
push
pop
fdivrs
pop
or
adc
push
popa
add
adc
mov
shrb
and
ror
aad
ret
jmp
call
inc
ret
xchg
jle
mov
scas
and
lods
test
or
dec
or
dec
and
mov
and
jl
xor
or
pop
stos
and
xorb
testb
loopne
call
mov
pushf
out
add
fs
sbb
push
xchg
and
inc
sbb
mov
and
lods
loopne
push
shlb
scas
lock
xchg
sahf
decl
xchg
out
adc
adc
push
cmp
mov
mov
sbb
adcb
fs
ficoml
pop
inc
lahf
xor
xchg
dec
out
xor
bound
in
fisubrl
or
mov
fidivl
pop
mov
loopne
inc
int3
push
mov
and
int3
jb
data16
push
push
ss
out
daa
push
cmp
adc
xlat
aam
scas
inc
aam
jae
push
mov
movsw
lret
mov
in
jmp
pop
hlt
or
mov
push
shll
mov
sbb
add
push
cmp
loopne
repnz
lock
outsl
loopne
leave
and
push
adc
mov
sti
jno
lock
add
xchg
adc
addb
inc
test
lret
adc
xorl
pop
and
push
test
and
or
cmp
jge
push
mov
adc
aaa
xorl
add
jge
popa
aam
fimuls
add
das
mov
ss
and
add
insb
push
inc
xchg
test
cmp
or
mov
cwtl
icebp
ret
call
inc
and
or
inc
mov
mov
jns
add
inc
jnp
mov
add
push
stos
enter
inc
inc
jnp
cld
je
les
fs
pop
inc
ljmp
data16
mov
cmp
arpl
push
repnz
mov
inc
push
add
or
sub
inc
sub
push
fdiv
add
push
push
cs
cmp
push
push
adc
pop
cwtl
cmpsl
pop
mov
pop
or
inc
loope
inc
push
in
mov
add
xchg
push
lds
lods
add
mov
add
or
push
lea
mov
rolb
cmp
cmp
shrb
adc
or
dec
loop
imul
rorb
cmp
orl
dec
clc
hlt
ja
ja
test
and
pop
adc
pop
inc
cmp
pop
jnp
and
push
push
or
sbb
xor
mov
jl
repnz
or
mov
mov
jp
sub
mov
mov
dec
inc
ja
jns
dec
fsubs
sub
sbb
adc
leave
xchg
cmp
inc
sub
icebp
les
fmul
push
into
shrl
add
sub
mov
and
rcll
call
xorb
int3
pop
mov
sbb
cmpsb
mov
adc
add
or
sbb
decl
repnz
jne
add
push
pop
nop
cmp
in
sbb
sbb
ret
sub
mov
push
mov
orb
or
mov
mov
movsl
mov
aad
frstor
mov
push
outsb
cmc
and
xor
sbb
mov
dec
xor
rorb
and
fwait
nop
inc
add
xchg
in
movsb
sub
sbb
mov
lock
mov
xchg
cld
push
pushf
hlt
mov
mov
push
aam
dec
and
push
scas
movsl
movsl
dec
mov
shr
cmp
add
sub
add
sar
mov
mov
fsubrl
add
fsubrs
xor
out
es
stc
cmp
mov
mov
scas
cmp
clc
rorl
mov
push
push
sub
ljmp
cld
adc
call
jg
pop
push
out
mov
mov
pop
add
leave
fdivl
pop
js
and
sub
lea
ror
nop
xor
pop
push
cmp
ret
mov
repnz
sub
mov
cmp
xchg
data16
mov
or
les
cvttps2pi
adc
pop
mov
cmp
add
lret
mov
mov
mov
add
lods
add
xor
ret
xlat
into
neg
sbb
inc
je
lods
and
inc
push
add
rorl
out
fcoms
mov
daa
push
mov
je
xor
mov
and
dec
jno
loopne
pop
inc
push
sub
lds
jl
test
mov
or
adc
movsl
push
ret
mov
sub
mov
and
jge
subl
mov
icebp
jg
pop
jne
jle
dec
add
jmp
inc
add
push
cmpsl
repz
out
and
mov
shll
add
dec
inc
jle
mov
scas
gs
addr16
movl
das
mov
xor
dec
or
xchg
xchg
xchg
das
xor
repz
cmp
cmpsl
xchg
xchg
xchg
test
mov
jo
inc
and
pop
cwtl
push
jecxz
fnstenv
add
and
or
movl
mov
jno
inc
add
jbe
dec
jnp
jge
sub
lock
xchg
incl
add
push
jge
sar
dec
add
jno
or
or
push
add
mov
inc
push
or
inc
bound
cli
push
pushf
je
mov
jne
les
mov
add
mov
pop
stos
inc
sub
jmp
mov
mov
divl
sub
and
mov
cmp
cwtl
das
into
inc
adc
add
push
sub
sbb
popa
pop
dec
push
mov
inc
dec
mov
loopne
push
xchg
jmp
xchg
or
sbb
sub
or
sub
dec
dec
insl
cmp
push
or
insb
ret
or
or
cwtl
insb
cmp
mov
mov
mov
insl
sub
mov
roll
shrb
outsb
outsl
mov
or
mov
xor
push
lock
mov
xor
ret
and
lock
fwait
sub
push
filds
daa
mov
lret
mov
jp
loop
rep
pushf
inc
xor
pop
dec
sub
mov
sbb
hlt
incb
cmp
not
and
aaa
rcrb
sub
pop
andl
mov
and
jne
push
push
xchg
out
fidivs
push
push
mov
out
rcl
enter
repz
dec
adc
imul
sub
data16
mov
hlt
ds
test
adc
jge
in
push
aas
jb
jnp
movsl
int
cmp
xchg
xor
sbb
jle
data16
push
sub
bound
addr16
shlb
sub
jecxz
sub
or
xchg
push
cli
ljmp
repnz
sub
dec
dec
inc
out
rolb
dec
mov
add
jae
sub
pop
js
jg
pop
adc
push
push
xchg
add
or
jnp
inc
push
outsl
and
cltd
xchg
cwtl
mov
cwtl
call
push
sub
outsl
add
mov
cmp
pop
sub
push
bound
push
mov
and
and
jo
loope
lahf
fmull
jl
add
cmp
or
hlt
jle
xlat
dec
xchg
imul
negl
sbb
cmp
push
mov
cmp
imul
push
sub
ja
imul
cmp
andb
sarb
dec
jne
adcb
inc
enter
hlt
xchg
stos
push
push
xchg
push
add
xlat
push
inc
sbb
push
pop
xchg
jp
sbb
dec
pop
mov
in
and
addr16
test
jge
int
fsqrt
xchg
icebp
je
lea
mov
sub
and
adc
fadds
jno
fiadds
cwtl
rcll
into
mov
and
and
xchg
pop
ds
add
add
dec
es
or
addb
or
inc
adc
jo
adc
cwtl
out
mov
es
mov
or
or
push
or
in
and
aam
outsl
icebp
decb
inc
adcl
or
cmp
adc
test
sti
cmpb
dec
xor
and
sbb
cmp
in
dec
adc
push
add
rol
add
clc
jbe
pop
or
add
rcrb
js
sub
into
dec
dec
stos
mov
int
jo
and
sub
lcall
lods
dec
pavgb
imul
jb
mov
movb
add
push
or
pop
ret
jnp
aaa
imul
ret
sub
add
push
or
ja
test
adc
mov
sbb
fisttpl
bound
movhps
dec
mov
xchg
dec
push
insl
cmp
dec
int
jo
pop
jo
ds
pop
lods
mov
ret
adc
cwtl
ret
and
shr
ss
add
movsb
pop
sub
lea
xor
arpl
xchg
jo
pop
notb
je
push
dec
adc
or
or
sub
cmp
sbbl
test
mov
jle
pop
iret
addb
ret
sub
arpl
jne
pushf
ret
ret
ja
xchg
movsb
pop
fiaddl
cmp
insl
sbb
cmp
adc
or
mov
mov
mov
ret
idiv
jne
sub
incb
mov
addb
sub
ljmp
mov
jae
jb
jae
ror
in
jns
xor
and
es
hlt
jae
jge
and
jns
sbbb
mov
adc
add
loop
xor
int
addl
mov
rclb
add
sar
add
add
jp
push
jb
xchg
push
bound
adc
sbb
mov
xchg
hlt
adc
pop
dec
or
mov
mov
insl
xchg
dec
cltd
xor
js
test
pop
add
ret
jl
dec
mov
arpl
mov
sbb
xor
mov
insb
and
and
mov
outsl
rclb
daa
or
add
in
sub
arpl
nop
inc
add
ja
daa
mov
push
cmp
fsubrs
mov
fisubl
or
and
in
adc
or
jb
shrl
sub
pop
xor
dec
or
pop
lahf
sbb
shll
adc
call
add
mov
daa
dec
ret
arpl
and
int3
add
ror
xor
cmp
mov
loope
sub
or
jge
sub
sbb
iret
mov
and
xchg
loopne
lret
ljmp
push
ja
movzbl
dec
mov
js
shll
ds
test
push
outsl
mov
pop
push
push
push
or
cmp
in
add
add
adc
sub
inc
or
xor
int
pop
stc
leave
add
xchg
push
push
js
push
xor
mov
das
cmp
sub
push
adc
rolb
scas
mov
cmp
sarb
mov
sbb
add
xor
fs
jb
inc
stos
not
hlt
or
popa
nop
stos
fs
adc
sahf
add
pop
ror
adc
add
pop
push
xor
mov
or
add
add
add
mov
sbb
pop
mov
adc
repz
iret
and
push
and
push
sahf
sbb
loop
pushf
stos
sar
ret
and
fimuls
mov
ret
pusha
sub
ds
aas
stos
xchg
inc
lock
adc
sar
dec
clc
sub
or
jge
mov
dec
add
pop
cs
adc
xor
lret
push
mov
xor
fcomps
int3
inc
hlt
aaa
shlb
and
or
add
pop
insl
roll
jge
nop
or
add
mov
outsb
and
sub
roll
popf
packsswb
inc
adc
std
lcall
mov
mov
sub
fldl
fstl
add
and
fldl
fnstsw
test
jnp
rorb
mov
or
push
jle
loope
jmp
lock
jmp
test
mov
mov
hlt
notl
shl
insb
fldl
push
add
push
aas
movsb
mov
fstl
pop
rolb
fmull
cmp
fstpl
sbb
add
adc
pop
fsubs
pop
adc
pop
add
dec
ljmp
test
mov
lea
cmpsb
jo
ret
cltd
in
cli
test
sbb
fadds
rol
push
jne
mov
data16
sbb
ljmp
popf
fsubr
and
cmp
jb
lea
mov
dec
sarb
mov
lock
sub
loop
ret
shlb
rclb
loopne
or
adc
pop
push
xor
or
adc
dec
sub
hlt
pop
mov
out
mov
and
ss
mov
sub
sbb
adc
data16
imul
pushf
cld
push
mov
pop
jl
nop
jg
cmp
fadds
or
les
sbb
jmp
xor
inc
cld
imul
mov
orps
icebp
mov
lea
and
int
add
sub
addr16
sub
shlb
sbb
test
dec
push
pusha
aam
inc
mov
mov
inc
sarb
inc
fadds
jne
movsl
push
addb
es
cs
roll
mov
arpl
push
out
repz
jl
fcomps
fld
cmp
mov
test
or
adc
mov
loope
cmpsb
inc
or
pop
mov
orl
xchg
cmp
mov
push
cmpl
data16
repz
push
es
xor
push
sub
out
sahf
ds
dec
xor
sarl
je
or
pop
test
aaa
popa
mov
push
xchg
arpl
mov
pop
rcrl
decl
fidivs
inc
dec
cld
sub
or
jge
mov
inc
aad
mov
hlt
cmp
push
push
push
cltd
ja
lahf
xchg
cmp
jg
mov
movb
dec
lock
adc
jae
call
pop
or
adc
push
xor
push
push
sbb
mov
jo
subb
dec
xor
jb
push
or
push
pop
int
or
stos
fs
pop
fstl
pushf
rolb
orl
push
cmpsb
lds
xor
and
shr
pusha
mov
std
add
jns
imul
xchg
leave
or
rdtsc
add
jp
xchg
add
jge
cmpb
dec
push
add
add
cmp
add
faddl
ffreep
sbb
fbstp
and
jno
jno
sbb
fists
push
and
pop
inc
fucomip
xor
les
out
loopne
cli
jl
add
push
jno
imull
enter
or
or
pop
pop
movsb
push
mov
pusha
and
dec
in
lcall
pop
push
dec
sub
dec
out
cmp
js
pop
icebp
cmc
jmp
adc
inc
aam
stc
inc
mov
xchg
in
sub
mov
push
xchg
sub
push
mov
stos
sbbb
ja
push
xchg
test
mov
lods
mov
rolb
aam
mov
ds
mov
cmp
xchg
out
dec
add
sub
fisubs
dec
xchg
pop
inc
push
jb
loope
sbb
mov
and
pop
es
push
rcr
enter
std
mov
mov
clc
adc
lods
add
push
add
cmp
jle
sbb
pushf
or
dec
fnstsw
lock
inc
pop
mov
sbb
je,pn
int3
adc
push
sub
sub
inc
lea
xchg
fsubs
cli
push
push
add
push
xchg
push
push
cld
ja
sub
loop
loop
sbb
jo
adc
jns
int
mov
mov
ret
sub
arpl
inc
adc
in
push
inc
rol
mov
cmc
adc
out
dec
jl
pop
ss
push
fs
test
xchg
or
in
push
inc
mov
and
xor
push
jae
sbb
out
mov
ror
sub
xchg
push
push
push
mov
ja
add
or
mov
mov
mov
pushl
andl
and
iret
int3
andb
sbb
mov
mov
xchg
sbb
push
scas
cli
jl
push
loopne
mov
cmpb
mov
shll
xor
add
add
push
mov
insb
hlt
cmp
in
adcb
or
xor
mov
jo
mov
cmpl
add
push
jbe
stos
dec
add
ds
mov
adcb
add
or
cld
sub
push
lea
inc
cmp
cld
loopne
adc
mov
add
sub
aad
xorb
inc
add
xchg
cs
mov
add
add
iret
push
add
shrb
lock
icebp
push
inc
adc
cmp
jb
rolb
mov
mov
mov
pop
bound
dec
dec
push
nop
mov
fucompp
clc
js
ds
sbb
or
jns
jne
movb
movsb
adc
push
or
testb
decl
inc
adc
stc
das
push
inc
sbb
sub
and
sbb
push
mov
in
or
cmp
stos
fnsave
rcll
sbb
xor
or
adc
adc
or
ret
clc
inc
loop
fadds
mov
insl
jecxz
rcl
and
or
and
adc
jnp
inc
sub
adc
enter
test
rorl
insl
fwait
xor
add
ljmp
inc
sbbl
and
and
mov
sub
in
or
andl
push
sbb
mov
push
sti
test
or
ficoms
fdivs
jmp
xchg
inc
or
xor
xor
clc
xchg
leave
cmp
inc
sub
adc
and
jmp
sbb
mov
xchg
addr16
inc
jecxz
jbe
cs
xor
ss
aas
push
inc
ss
mov
and
pop
xchg
lea
push
add
xor
xchg
xchg
and
add
cmp
sub
push
pop
add
shl
cmp
pop
pop
mov
xor
mov
sub
cltd
push
cld
jne
push
std
call
or
mov
cmp
xor
mov
ja
mov
mov
rorb
rol
mov
adc
sbb
es
mov
orl
stc
fiadds
push
lock
add
sbb
daa
repnz
inc
mov
je
sub
xchg
loopne
xchg
and
sbb
daa
mov
and
dec
pushl
cli
in
mov
or
xchg
inc
add
push
sahf
sbb
dec
scas
in
neg
sbb
jnp
ret
jne
ret
hlt
jle
or
mov
mov
movsb
xorl
repnz
jg
mov
jmp
add
xchg
push
stc
test
jmp
cmp
add
pop
jno
mov
insl
scas
jecxz
inc
xchg
cmp
sbb
aaa
mov
mov
or
push
lds
aam
ja
lea
or
hlt
adc
cmpsl
in
dec
cmp
jg
jp
stos
pop
push
repz
adc
fimuls
fsubrl
aad
push
dec
fsts
adc
push
sub
clc
jp
pusha
sbb
add
mov
enter
call
ficompl
sbb
mov
jo
xor
jp
inc
jmp
lret
mov
add
ficoms
xor
dec
or
bound
jns
inc
fisubl
add
inc
bound
xchg
push
jae
pop
jl
sbb
mov
adc
pop
add
cmp
xor
mov
pushf
sahf
es
xor
pop
push
or
push
mov
adc
or
loopne
adc
loop
loopne
sbb
paddusb
add
fs
popf
or
rcr
jmp
push
inc
mov
test
in
and
and
fimull
lret
jo
sub
outsb
xor
xor
les
ret
imul
cmp
test
aas
cld
fnstenv
pusha
sub
xor
adcl
std
cld
mov
push
xlat
jmp
repnz
ja
out
xchg
icebp
nop
pop
push
test
ds
ret
or
inc
xchg
and
xorb
lock
sarl
or
mov
mov
inc
enter
lcall
dec
cmp
or
cmp
ss
pop
stc
inc
add
push
nop
pop
push
ds
mov
aad
pop
adc
mov
cmp
jl
adc
incb
pop
jle
cmp
push
jp
or
pop
pushf
push
push
ds
es
daa
mov
cmp
cmp
jge
mov
pop
and
pop
enter
xor
je
cmp
je
push
call
xchg
mov
adc
lcall
push
xor
xor
ss
jno
mov
stos
lahf
cwtl
push
add
stc
jp
std
or
sub
add
fildl
and
push
aam
or
or
adc
dec
je
jl
jg
sub
loope
or
call
out
inc
or
add
inc
jmp
pusha
pop
cmp
jge
push
sbb
jb
cltd
push
jle
jg
rcll
rclb
movl
jb
inc
cmpsb
mov
jg
sub
sbb
adc
das
fsubrl
cmp
mov
mov
adc
inc
sbb
or
add
fwait
xchg
push
aad
insb
add
mov
push
sub
mov
and
mov
jle
push
pop
jmp
jg
fisubrs
in
inc
mov
jp
out
mov
sbb
mov
mov
sub
mov
push
in
cmp
jle
jo
pop
or
add
jmp
sub
sub
mov
jne
clc
ret
cmp
pop
cmp
in
or
or
pop
shll
add
sub
push
fmuls
js
sbb
cmp
jg
xor
cmpb
add
addb
inc
jo
sbb
loop
pop
or
or
inc
pop
adc
xchg
ret
push
sub
sbb
pop
jge
shrb
and
or
loop
pop
in
fildll
data16
jl
ret
adc
or
mov
mov
out
scas
xlat
in
in
inc
cmp
or
sbb
xchg
xchg
test
cmpsl
movsb
into
sbb
iret
repz
pop
push
pusha
fs
or
inc
jecxz
and
ds
xchg
add
ret
push
shlb
enter
mov
fnsave
lcall
mov
push
add
or
push
xchg
jno
lods
lret
xor
inc
pop
cmp
push
ret
gs
test
mov
jp
cmp
pop
sbb
ja
or
addl
cmp
pop
sub
fidivs
fnsave
sbb
push
or
repz
leave
and
jnp
xor
pop
inc
fs
lret
daa
cmc
sub
adc
in
add
test
rorb
inc
mov
pop
sub
dec
rol
test
jle
and
dec
sbb
dec
and
mov
ja
loop
mov
and
loopne
cmpb
and
add
enter
sub
dec
add
fsub
mov
push
or
adc
push
dec
mov
lcall
sbb
xchg
ret
insb
dec
push
mov
inc
jg
nop
or
sub
add
add
add
jg
addl
bound
lea
mov
add
loop
push
rcrb
or
pop
in
jp
mov
xlat
inc
shrl
dec
jns
cli
sahf
aam
sti
mov
lea
clc
mov
sbb
mov
add
les
push
rcll
or
mov
mov
sarl
push
faddl
cmp
jae
out
dec
mov
pop
cmpl
mov
in
xor
pop
jecxz
outsb
movb
inc
sub
fucomi
xorl
hlt
push
shrb
js
pop
je
call
add
xor
dec
sub
ret
cmpsb
pop
adc
in
insb
xor
xchg
cmc
leave
mov
dec
imul
test
in
adcb
mov
dec
mov
mov
or
in
punpckhwd
imul
or
lea
cmovge
cmp
in
call
adc
mov
cmp
je
or
je
cmp
std
adc
and
jbe
clc
sub
push
add
pop
mov
push
incb
in
rolb
lcall
xlat
pop
fisubs
xor
arpl
data16
xor
clc
clc
mov
dec
add
and
jge
dec
or
pop
in
fisttpll
sbb
mov
mov
add
repnz
jmp
and
sub
cmp
pop
adc
inc
aad
and
mov
push
add
and
inc
fcoms
or
sub
sub
sbb
add
aad
mov
add
mov
inc
xchg
lahf
arpl
cwtl
outsl
popa
mov
jecxz
sub
daa
sbb
sbb
lahf
xor
dec
adc
roll
loope,pn
jns
imull
mov
lret
in
sbb
dec
sbb
jne
pop
xchg
shrl
bound
mov
pop
push
ret
fcmovb
in
mov
xchg
orb
xchg
lock
add
dec
mov
or
pop
push
inc
or
inc
popf
cld
mov
jl
lea
insl
sti
cmp
lock
dec
sub
inc
jle
mov
sub
sub
xor
cmpl
lea
sarb
hlt
push
push
sbb
push
out
add
add
imul
and
add
sahf
sub
cwtl
sub
and
pop
cmp
inc
outsb
inc
push
push
or
pop
jg
xor
out
adc
push
push
adc
fcmovbe
ja
mov
js
xchg
pop
call
adc
mov
push
mov
add
add
xlat
sub
push
add
mov
loopne
xor
push
or
insl
push
sti
movsb
xor
and
and
pop
inc
mov
adc
mov
sbbb
or
dec
dec
sahf
into
pop
sub
cmp
jne
pusha
addl
ds
stos
and
or
jae
xchg
dec
cmp
jmp
int3
ret
shl
imul
add
dec
mov
sub
mov
int3
insb
loopne
mov
cwtl
mov
push
push
cmp
test
sub
inc
and
popf
adc
jmp
pop
insl
push
inc
nop
or
mov
frstor
jo
subb
in
jmp
shll
pop
mov
jae
stc
sub
lds
orl
imull
adc
jmp
pop
push
cs
push
adc
inc
dec
repz
push
and
stos
insb
sub
loope
fldenv
dec
js
scas
or
and
jb
push
ficoml
les
lcall
mov
sub
inc
add
cmpsl
stc
or
daa
loopne
lea
push
push
icebp
mov
lock
mov
ret
fs
or
add
mov
xchg
shr
jb
or
xor
pop
jmp
or
ret
xor
push
and
out
mov
mov
or
test
out
enter
dec
xchg
xchg
and
popa
loope
cld
mov
mov
rolb
lds
addb
cmp
jb
xor
jmp
ret
xor
out
lret
push
stos
icebp
sub
pop
xchg
jne
ret
insb
loopne
and
shll
sbb
add
inc
fstpt
divl
movsb
cmp
ret
pop
inc
and
cs
sbb
xchg
sbbl
in
or
je
add
fadds
adc
pop
fdivs
add
insl
lods
insl
shrb
outsl
adc
jbe
inc
cmp
testb
inc
push
and
jge
push
add
test
ljmp
imul
rolb
ret
pop
test
jne
cld
push
sbb
mov
push
je
push
outsl
jmp
xor
pop
mov
cmpl
or
push
add
je
mov
iret
push
adc
jae
jmp
fsts
lea
dec
xor
cmp
rcll
cmp
vprotw
int3
pop
aaa
hlt
push
and
sbb
adc
lahf
stos
adc
add
xchg
pop
mov
ret
lret
push
inc
imul
mov
dec
sub
mov
fildl
add
call
mov
adc
sbb
xorb
dec
mov
mov
adc
fldl
pop
addb
jae
xchg
push
inc
pop
nop
loop
push
add
add
fmul
lds
stc
pop
mov
mov
inc
cmp
jne
lock
xor
add
xchg
xor
repnz
inc
inc
popa
xchg
or
test
inc
clc
xchg
repz
mov
xchg
out
outsb
movsb
ljmp
aam
decb
das
cmp
xchg
ret
out
xchg
adc
mov
add
xlat
xchg
sub
fs
fwait
shrl
pop
inc
mov
mov
dec
jmp
mov
or
add
cmp
xor
mov
and
add
inc
adcb
push
test
pop
repnz
cmp
pop
cmp
int
lcall
mov
mov
push
or
mov
decl
sub
lods
in
xchg
cwtl
sbb
cs
sbb
or
ds
pop
aad
xchg
mov
push
sbbb
iret
ss
imul
or
pop
roll
mov
add
sub
into
or
lahf
insb
add
popf
xor
sarb
push
into
push
lret
jo
fcomi
cmp
int
dec
movsl
ljmp
jo
adc
pop
push
aam
xchg
testb
pushf
lods
aam
popf
lods
xchg
lock
add
mov
enter
fsubrs
daa
add
insb
sub
lds
jbe
inc
pop
mov
pop
or
mov
add
jno
lea
cmp
and
sbb
jns
pusha
inc
push
jb
ljmp
jo
adc
push
pusha
add
xor
add
push
insb
out
roll
push
jne
ljmp
test
cmc
or
push
mov
out
loope
pop
adc
mov
es
mov
aas
loope
pop
xor
and
or
pop
mov
or
xor
mov
cmp
adc
cmpsb
leave
and
flds
mov
inc
and
loope
std
and
push
inc
and
imul
jae
sub
mov
mov
add
leave
orl
sub
fstpt
xchg
push
fmuls
mov
cmp
mov
pop
cmpsb
sbb
lods
push
push
rcll
push
push
push
dec
sub
std
cwtl
and
stos
gs
inc
mov
add
or
add
add
xor
inc
adc
xor
xor
mov
ret
dec
inc
mov
jo
inc
fistl
and
jle
clc
and
dec
into
cmp
jg
sbb
add
popf
lcall
push
inc
lods
cmpb
jmp
jmp
mov
and
push
mov
les
call
mov
adc
sbb
and
or
mov
inc
adc
inc
inc
inc
pop
jp
fldt
cmpb
add
cmp
in
inc
push
push
ret
mov
nop
aaa
imul
fnstenv
add
in
push
cmp
and
dec
push
pop
and
mov
and
jbe
cwtl
sub
mov
fcmovne
push
sub
and
or
mov
add
pusha
add
inc
adc
mov
push
or
js
pop
add
mov
push
add
pop
leave
and
loop
sbbb
es
js
push
push
popf
mov
ss
movhps
cmc
adc
dec
or
call
jo
and
insl
and
or
in
outsb
in
or
jbe
sub
call
int
cmpsb
call
mov
jge
lods
outsl
inc
inc
gs
negl
pop
add
mov
add
or
xor
lds
rcrb
push
mov
mov
ds
adc
xchg
xchg
ja
push
sub
adc
pop
out
dec
or
inc
mov
sbb
add
xor
xor
inc
divl
cmp
rcll
aas
push
xchg
in
xor
push
push
jnp
dec
jae
mov
push
aad
sbb
insb
jl
insb
xchg
mov
pusha
inc
jnp
hlt
pop
mov
cltd
in
and
push
pop
out
clc
and
jne
pop
push
sbb
iret
scas
jae
mov
cmp
jecxz
sbbb
xchg
push
push
call
in
movsl
ds
outsb
add
ret
pushl
push
mov
xchg
dec
adc
mov
jl
jmp
lea
xchg
test
lock
xchg
mov
xor
cltd
icebp
and
cmpl
lods
sub
sbb
aaa
mov
dec
jb
mov
xchg
pop
add
leave
repz
and
jl
inc
or
fcmovb
inc
xor
in
pop
and
inc
ficompl
sbb
cmp
adc
dec
mov
mov
js
and
fdiv
adc
loopne
and
lret
push
arpl
je
outsl
sbb
add
jnp
jecxz
ret
je
stc
mov
sub
stc
inc
loopne
fsub
or
pop
jmp
mov
or
inc
add
xchg
adcb
test
jp
push
arpl
pop
lahf
jle
insb
mov
rcr
sub
add
insb
jo
add
mov
push
test
lret
cwtl
cli
dec
pop
jbe
cmp
sub
push
aas
mov
cmc
insb
sub
inc
jo
push
adc
enter
push
or
cmp
mov
test
dec
lock
addr16
xor
mov
jne
jno
lock
pop
mov
mov
and
cmc
inc
and
loopne
add
cmc
add
cmp
pop
sub
push
les
nop
imul
dec
push
pop
inc
js
sub
aaa
sbb
adc
inc
sbb
mov
push
cli
ret
jbe
cmp
lock
sub
neg
add
cmp
jne
push
adc
add
dec
jge
inc
mov
jne
pop
sub
int3
mov
dec
popa
in
nop
xchg
inc
ror
sbb
sbb
sub
adc
inc
gs
nopl
insl
push
pop
mov
imul
mov
aam
cmp
jae
cmp
pop
icebp
jmp
repz
dec
sahf
pop
movsl
sub
mov
pop
in
xor
pop
sub
jo
and
xor
hlt
test
pusha
lods
mov
mov
popf
push
jns
push
inc
add
popf
pop
pmullw
push
imul
mov
addr16
hlt
jo
loope
add
mov
ret
inc
or
inc
jbe
mov
pop
sbbb
or
push
out
xchg
rcrb
fsubrs
or
jne
jmp
loope
loope
adc
pop
sbb
mov
push
inc
mov
rcrl
std
add
lock
jmp
insl
cmp
rorl
sbb
mov
dec
push
insb
lods
fdivr
repnz
add
inc
jp
clc
sbb
std
leave
jmp
lea
push
add
add
cmp
inc
stc
enter
mov
lret
sub
loope
mov
sub
mov
rcrl
jmp
pusha
outsl
clc
ds
add
sbb
push
mov
sbb
movsl
push
push
xor
pop
push
lea
sub
movsl
aaa
call
ljmp
in
xchg
mov
movsb
jl
movsb
into
inc
dec
or
inc
push
je
jp
loop
fistpl
add
cmp
or
jnp
and
ss
ja
lock
sub
shrb
push
cmc
mov
ret
push
sbb
sub
lods
sti
out
lea
push
push
cmpl
mov
inc
rorb
decb
fldcw
sbb
dec
test
dec
outsb
ret
pop
dec
dec
imul
sarl
mov
add
push
xchg
cs
je
test
or
lods
jmp
inc
das
or
cltd
js
push
jg
pop
or
add
ror
and
add
roll
add
jns
and
mov
mov
add
cmpl
mov
xor
pop
add
add
cld
scas
or
jle
xor
adc
shr
mov
lea
lret
sub
ret
adc
sbb
xchg
add
xchg
push
xchg
push
int
dec
mov
inc
inc
jp
xlat
dec
adc
mov
sub
ficompl
aam
lods
pusha
mov
add
cmp
insl
loopne
fiaddl
je
or
mov
inc
or
mov
cmp
popf
loope
push
sbb
cmp
and
fisttpl
sub
aad
sarb
test
xchg
movsl
call
jmp
and
lahf
dec
movsb
rcrb
clc
imul
pop
test
es
mov
pop
sbb
dec
mov
dec
aaa
int
loopne
or
jmp
imul
cmp
pop
cmpsb
daa
adc
adc
adc
ret
add
inc
ret
or
add
or
adc
dec
cmp
sbb
imul
es
pop
cmp
jmp
xchg
test
pop
mov
add
decb
popf
pop
add
adc
push
adc
adcl
ret
ljmp
push
pop
add
add
inc
push
sub
in
scas
and
adc
add
cli
cmp
icebp
in
add
or
push
cmpb
subl
sbb
hlt
cmp
xor
mov
inc
nop
push
sbb
cld
sbb
daa
inc
stos
or
addb
adc
add
jg
ret
jb
daa
add
inc
push
pop
cmp
jae
stos
and
add
cmp
ud1
push
ret
push
lea
sub
je
sar
out
sub
add
xor
lock
stc
lock
sbb
mov
push
mov
jbe
js
bound
nop
dec
mov
push
jg
or
loop
mov
jp
and
shll
lods
mov
shrl
cmp
push
pop
xor
ret
push
jno
mov
pop
dec
pop
and
popa
fmull
xchg
stos
pop
jo
dec
push
mov
pop
mov
sub
sub
into
mov
sub
push
mov
popf
mov
pop
addl
xor
das
add
cmp
add
jge
push
cli
add
cs
test
imull
sub
js
sub
cwtl
jbe
xchg
or
adc
test
jb
mov
or
dec
add
cmp
pop
pop
ljmp
xor
subb
mov
mov
inc
mov
jl
icebp
mov
inc
push
and
imul
jg
mov
xorl
push
fxrstor
cmp
into
jmp
insl
or
or
xor
sbb
add
rcr
hlt
lea
mov
insl
xor
nop
push
jns
and
stos
popf
ret
loopne
push
test
icebp
std
enter
or
push
ret
and
mov
or
pop
lret
loope
test
jbe
sbb
insb
jg
jmp
inc
adc
sbb
mov
js
push
popf
pmaxub
arpl
pop
inc
cmp
pushf
addb
je
xor
push
daa
and
sbb
out
sub
es
push
jne
fadds
decb
dec
mov
sbb
rcrl
jns
or
pop
sbb
sub
mov
xchg
and
sbbb
inc
push
es
test
mov
stos
lock
jns
push
je
cmp
jbe
push
rorl
icebp
test
por
das
fcmove
std
mov
or
movl
pop
ret
lahf
inc
ds
popl
pop
lea
add
outsb
aad
notl
rorb
sbb
inc
ds
xchg
sub
mov
shrb
in
pushf
xchg
and
lret
push
arpl
pop
xchg
push
aaa
lahf
nop
jp
inc
movsb
sub
pop
imul
nop
repnz
sbb
xor
clc
add
cmpb
pop
psubusw
mov
fisttpl
jg
jg
fs
test
jmp
repz
neg
movd
movaps
enter
outsb
pop
outsb
fcmovnbe
xor
jle
xor
cli
rcl
lret
lods
jecxz
sbb
or
jge
repz
inc
xor
xor
jg
sub
xchg
ret
nop
mov
mov
and
in
add
ficomps
add
adc
push
add
adc
outsb
sarl
adc
lcall
repz
roll
jbe
and
inc
dec
mov
add
addps
int
jnp
sti
fldl
sbb
sbb
inc
pop
pop
aad
jae
or
sbb
loopne
pop
jecxz
imul
jno
or
sub
scas
mov
inc
xor
add
incl
in
or
xor
stos
test
mov
iret
push
push
inc
decl
repz
push
and
imul
add
sub
or
push
cmp
filds
cmp
pop
loopne
cli
add
xor
flds
sub
mov
add
dec
out
hlt
mov
shl
or
neg
and
jmp
stos
mov
dec
ljmp
ret
mov
and
add
fwait
jbe
mov
outsb
push
shl
cmp
push
clc
jb
js
hlt
push
sbb
fmul
xchg
outsb
pop
and
ss
pop
pop
jne
push
test
call
sub
movsl
inc
add
out
mov
mov
inc
or
add
test
cmp
mov
push
xor
es
xor
rcr
sbb
rorl
xor
jbe
inc
add
add
out
jnp
int3
lea
dec
add
push
lcall
movsb
rcrb
xchg
out
sahf
testl
fs
or
inc
mov
mov
push
call
call
hlt
jg
out
hlt
clc
clc
cld
cld
lea
and
lock
sbb
jmp
mov
xor
nop
inc
pop
sbb
fildl
mov
push
lea
jl
cld
pop
rorl
and
std
cld
out
cmp
pop
jo,pn
cmpsb
fimuls
xchg
mov
xor
mov
nop
push
push
je
pushf
fiaddl
dec
gs
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
jne
mov
addr16
mov
jnp
adc
mov
push
clc
push
add
push
adc
and
push
aaa
out
sahf
out
sbb
sbb
out
sahf
adc
adc
or
add
sub
out
int
dec
or
js
aaa
mov
add
pop
mov
daa
ja
sub
je
subl
insb
bound
packssdw
push
mov
movsl
ss
outsl
cli
inc
bound
jmp
push
inc
dec
movsl
pop
sarl
xor
cli
jnp
lock
jle
ret
cmp
dec
mov
push
sbb
push
stos
int
pop
inc
mov
mov
jle
push
mov
jmp
jp
je
mov
push
xorb
ss
jne
adcb
dec
aaa
dec
and
sbb
test
push
loopne
jmp
add
add
out
shlb
popa
test
test
dec
shlb
xchg
pushf
sbb
add
push
adcb
mov
imul
mov
lods
mov
and
sbb
insb
orb
sbb
jbe
and
mov
adc
ret
dec
cmpb
adc
or
mov
mov
jmp
push
push
cmpsl
jecxz,pt
test
ficoms
fcoms
adc
pop
shrb
inc
xor
jo
mov
mov
adc
inc
cmp
jne
inc
cmpb
out
test
jg
insb
xor
sbb
mov
inc
jo
mov
or
sub
arpl
fsubs
cmp
sub
add
ljmp
rcrb
data16
jmp
jecxz
xchg
mov
dec
jns
dec
repnz
push
add
push
push
mov
inc
jae
adc
push
cs
or
cwtl
add
sub
or
movsb
adc
clc
and
xor
daa
cmp
xor
in
push
insl
xchg
and
jmp
lods
sub
sbb
or
insl
orb
inc
out
add
push
loop
jno
fiadds
lock
pop
lcall
rolb
push
sarl
push
lock
shl
ret
test
inc
data16
data16
mov
call
imul
cmp
sub
movl
mov
inc
ret
and
call
imulb
inc
push
or
pop
lret
ja
cs
inc
testb
les
mov
jne
orl
xor
push
and
or
cs
pop
in
pop
push
jge
jo
cld
hlt
push
roll
popa
push
fldt
xchg
cmp
and
xor
hlt
inc
mov
mov
push
push
push
lret
xchg
mov
mov
shll
pushf
adc
lods
sub
xchg
mov
ljmp
cmp
jb
pop
jl
jg
cmp
imulb
xchg
jbe
push
ja
mov
add
lds
hlt
mov
mov
mov
push
mov
aam
mov
cmp
push
cs
mov
add
movsb
cltd
sub
mov
sbb
push
in
mov
mov
xor
push
addr16
mov
sub
test
cltd
sub
out
stos
outsb
jnp
push
lock
arpl
pop
dec
movl
lea
cmp
je
sbb
arpl
cltd
pop
lcall
push
inc
test
mov
sub
sbb
jbe
add
sbb
dec
cmp
call
shlb
sarb
in
jl
insl
and
pushl
mov
fs
add
add
iret
ret
sub
fisubl
data16
orl
or
fs
enter
sbb
inc
pop
pop
enter
sub
sbb
pushl
add
push
cltd
pop
idiv
add
add
fistpl
or
adc
jl
out
into
xor
aas
lea
dec
push
push
jbe
adc
jg
add
pop
and
pop
decl
or
push
jnp
mov
int3
xor
dec
pop
adc
out
push
jbe
ficoms
lea
sahf
sar
stos
mov
shr
mov
xchg
dec
or
pop
or
movsl
or
mov
mov
xchg
xor
and
adc
mov
dec
cmp
jne
mulb
jecxz
icebp
test
xchg
adc
addr16
pop
push
push
push
and
cmpb
dec
and
xchg
or
ds
imul
adc
and
inc
mov
add
dec
push
ret
jne
push
cld
adc
add
push
adc
hlt
jmp
mov
jg
cmp
push
fwait
push
mov
addb
add
and
ss
lret
jbe
push
aam
std
loopne
rcrb
icebp
mov
pop
or
inc
imul
bound
pop
jb
lret
pop
cmpsl
mov
push
xchg
push
pop
push
loopne
adc
je
jl
fidivs
sub
push
mov
popa
rorb
and
pop
jge
je
adc
jp
gs
xchg
movsb
cmpsl
mov
add
fistpll
hlt
int3
push
mov
mov
lds
mov
cmp
arpl
cwtl
mov
mov
inc
add
push
iret
mov
bound
push
es
rorl
sbb
cmp
pop
xor
cmpb
and
daa
xor
jo
jne
stos
push
xchg
push
sti
pop
out
es
bswap
inc
cmpl
or
push
mov
insl
or
pusha
scas
jb
into
and
movsb
pusha
sbb
xchg
dec
imul
lds
and
and
clc
pop
push
sbb
aas
pop
cmp
pop
icebp
ds
mov
mov
dec
push
rclb
call
mov
sbb
push
imul
fadds
les
jb
mov
jle
sbb
pushl
insl
and
lahf
xchg
pop
subb
cmp
add
add
iret
fimuls
mov
stos
or
jg
inc
sub
cmpl
lret
jbe
pusha
ja
adc
jmp
inc
loopne
shlb
leave
loopne
loopne
pusha
inc
loopne
dec
sbb
sub
sbb
cmpsb
and
mov
cmp
dec
adc
mov
nop
outsl
repnz
add
movsb
or
pop
sbb
or
aad
in
pop
mov
das
adc
sbb
dec
notl
insl
jo
hlt
ljmp
and
aaa
or
inc
xor
mov
cmp
dec
sub
ds
mov
lret
dec
jmp
and
sub
push
pop
je
inc
je
mov
xlat
mov
inc
aaa
push
fs
xor
pop
xor
inc
lea
cli
sub
cmp
dec
xchg
xchg
and
adcb
xchg
rol
jl
sbb
lods
adc
or
es
in
inc
jmp
inc
jmp
or
jne
in
inc
dec
call
outsb
dec
scas
push
add
clc
inc
and
lret
cmp
mov
and
addb
out
sub
inc
inc
sub
pop
jmp
dec
sbb
jne
pop
add
test
cmp
jne
or
mov
popa
adc
or
add
or
mov
jne
lods
ficoml
inc
mov
cs
xchg
sbb
and
add
add
mov
mov
das
shr
dec
add
mov
or
lret
jo
mov
mov
xor
push
cwtl
push
sbb
fsubs
adc
xor
aaa
sub
sub
and
dec
cld
mov
mov
cmp
mov
jne
jmp
mov
mull
arpl
pop
ljmp
insl
adc
sti
jne
cmpl
add
call
adc
sbbb
or
adc
inc
addb
call
lcall
jns
mov
pusha
mov
mov
mov
dec
or
rcl
xchg
mov
mov
jae
inc
les
je
fmull
push
addl
or
pop
push
jo
enter
mov
push
pop
xchg
or
test
push
xor
sub
cltd
xor
lret
pushf
push
stos
pop
test
xor
scas
int
and
dec
pop
aas
push
fildll
insl
aas
xor
or
repnz
push
pop
cmp
orl
fucomi
add
and
and
cwtl
lcall
rclb
pop
adc
inc
aas
cmpb
and
fldt
sar
dec
jbe
cld
stc
and
mov
dec
or
xor
jg
loope
xor
or
add
rorb
or
or
mov
inc
inc
out
test
cwtl
or
or
pop
dec
mov
mov
cmp
mov
inc
cmp
jb
cwtl
pop
dec
inc
mov
mov
or
es
add
nop
adc
or
cmp
push
add
aad
inc
clc
pop
cmp
and
push
cmp
lods
dec
mov
inc
outsb
jne
ljmp
sub
cmp
jne
mov
rcr
mov
jne
es
test
cmp
jne
call
into
or
sbb
cld
jb
enter
iret
iret
jmp
push
dec
jl
adc
jmp
std
inc
iret
jmp
divb
adc
cld
sahf
xor
pop
adc
in
adc
out
and
push
or
sub
dec
or
sub
sub
adc
mov
imul
in
mov
shl
fmull
ret
rep
adc
popa
shrl
in
cltd
push
das
fs
adc
lea
push
xor
and
aad
scas
cmp
pop
dec
sbb
lock
movsl
lds
inc
and
sub
mov
inc
pop
loopne
sbb
mov
or
pusha
xchg
pop
inc
int3
pushf
call
and
and
leave
add
or
and
mov
sbb
inc
push
addb
and
or
cmp
mov
adc
movsb
flds
sub
and
stos
push
pop
push
xlat
inc
fwait
jne
mov
mov
and
push
aam
adc
or
jg
add
test
mov
jne
add
imul
inc
or
sbb
ret
loopne
in
mov
dec
mov
das
xchg
out
xchg
mov
and
inc
sbb
sbb
es
add
das
lods
lods
and
add
xchg
int3
int3
xchg
shlb
or
adc
sub
shr
test
jmp
mov
add
subl
push
and
jmp
mov
outsb
jbe
xchg
sub
outsb
cmc
lea
add
pop
adc
mov
dec
stos
and
mov
push
jno
xchg
jnp
lea
pop
ret
lock
sbb
or
xchg
push
jle
ret
adc
iret
icebp
pop
push
jmp
fdiv
and
bnd
shl
push
adc
adc
xor
ljmp
nop
in
xor
jbe
loope
fscale
inc
ljmp
add
push
test
int3
out
jne
test
or
mov
cmp
je
mov
loop
sub
jecxz
daa
xor
div
cmp
adc
xchg
pop
xor
out
add
inc
outsb
or
cld
jns
cwtl
adc
imul
xor
ret
inc
xchg
in
dec
push
loop
add
and
sbb
mov
cmpsb
in
jl
fists
call
or
jl
and
lret
sub
mov
add
adc
pop
and
mov
sub
push
push
pop
inc
sub
xor
inc
push
mov
inc
jmp
cmp
xor
push
orl
adc
jne
sub
sub
mov
mov
or
insb
mov
or
ljmp
push
insl
aam
xor
dec
or
mov
cmp
scas
repnz
dec
ficompl
or
adc
ds
or
adc
ret
data16
pushl
and
mov
mov
push
clc
and
data16
ret
mov
and
push
cld
stos
dec
movsbl
sub
jmp
mov
call
lahf
cmpb
outsl
sbb
ja
and
adc
sbb
call
jb
jne
push
clc
jbe
add
ljmp
add
or
and
and
scas
push
push
xor
adc
shl
cld
std
mov
addl
jne
test
cmp
push
adcl
divb
mulb
add
cmpb
sbb
pop
mov
add
push
mov
in
pop
cld
imul
insl
enter
xor
mov
lock
sbb
je
jmp
push
stos
es
pop
cmp
push
push
sub
or
les
shlb
cmc
movsb
popa
aaa
add
sar
dec
xor
mov
pop
dec
insb
dec
dec
xor
mov
or
inc
loop
repnz
mov
out
push
fwait
int3
push
inc
add
repz
add
movsb
or
enter
mov
addb
add
cmp
jb
lea
push
adc
push
pop
dec
pop
insl
mov
ss
adc
add
jecxz
cmp
cwtl
loop
fcmovu
xor
hlt
push
mov
es
cld
jge
push
add
les
lret
and
add
push
int
divl
push
out
cmp
test
int3
movsl
ret
icebp
cli
dec
cltd
xor
mov
das
xchg
sbb
pop
or
outsb
and
push
cwtl
call
aad
call
mov
sbbl
stos
and
sub
sub
ja
lock
daa
xchg
test
xor
or
and
adc
and
pop
add
pop
std
movb
pop
jmp
mov
cli
push
out
cmpsb
sub
std
add
adc
subb
add
push
pop
int
imul
imul
mov
clc
roll
rorl
sub
adc
mov
ss
add
or
or
gs
leave
dec
push
mov
sahf
xchg
icebp
jl
loope
cmp
mov
imull
jecxz
sub
mov
add
fsubs
add
sub
scas
jno
mov
or
pusha
and
or
sti
cmp
gs
shrb
out
xlat
adc
enter
or
push
or
lahf
push
adc
push
and
jmp
xor
lea
adc
push
loopne
dec
jle
mov
les
ja
mov
dec
or
push
mov
pop
sub
sbb
mov
inc
sbb
push
lcall
lea
sbb
and
bound
and
xor
xor
or
sub
adc
adc
sub
jo
pop
add
or
add
add
sahf
out
add
sti
mov
mov
jbe
aaa
jb
iret
add
mov
mov
push
push
inc
sahf
xchg
sub
pop
mov
or
or
xchg
sbb
cmp
mov
add
or
repnz
sbb
push
or
cmpsb
or
or
or
xchg
adcl
inc
scas
in
push
push
push
bswap
in
jns
xor
adc
push
jnp
pop
adc
or
sahf
lret
stos
cmp
adc
in
in
int
push
adc
lret
add
adc
inc
scas
in
adc
adc
in
fs
push
or
sbb
mov
sbb
xchg
sbb
add
cmp
fcoml
sbb
sbb
sbb
rep
sbb
push
sbb
cmpsb
in
inc
and
xor
sbb
jns
push
inc
negb
mov
jne
add
add
sub
std
aaa
mov
movl
aam
mov
xchg
push
inc
add
outsb
ret
push
in
push
in
imul
rol
adc
repz
leave
jnp
xor
mov
leave
out
out
jb
cs
aas
sub
call
nop
aaa
call
fidivrs
mov
cmp
ljmp
cmp
fisubl
dec
adcl
leave
mov
cmp
mov
push
repnz
out
xchg
out
mov
out
je
and
movsb
lock
dec
icebp
je
sub
icebp
das
jnp
enter
or
xor
hlt
hlt
imul
pop
hlt
xchg
std
cmc
cmc
xchg
addr16
cmp
jns
mov
pusha
nop
cmpsb
repnz
clc
clc
clc
dec
sahf
xchg
stos
or
xchg
addr16
cli
cli
add
or
sbb
sti
fdivrp
aaa
mov
fwait
cld
cld
je
cld
push
push
nop
mov
jne
mov
xor
sbb
decb
sub
xor
jmp
jmp
in
shll
lret
cld
rorl
cmpsb
loope
pop
cmp
adc
jecxz
lret
stos
pusha
jecxz
xor
mov
enter
cmp
idivl
mov
and
or
out
sbb
call
mov
jae
and
dec
jmp
scas
ss
jmp
xchg
daa
in
push
and
test
or
jmp
dec
or
push
xor
out
xchg
mov
lock
cmp
cli
or
out
repz
sbb
mov
stc
shll
stos
dec
push
cmp
mov
xor
clc
cltd
xchg
pop
leave
data16
push
stc
dec
in
ret
sbb
sbb
or
cmp
pop
pop
leave
cld
jmp
mov
push
int3
test
cs
je
jne
mov
or
shll
leave
or
and
clc
dec
add
push
imul
xchg
in
aad
fdiv
out
mov
sbbl
jb
imul
ljmp
push
jmp
testl
testl
mov
into
mul
sub
nop
mov
movsb
mov
repnz
and
repnz
inc
repz
setb
sub
or
lcall
div
mov
add
mov
clc
clc
xor
pop
cmp
push
pop
pop
cmc
cli
cli
inc
mov
mov
pop
repnz
cmc
cli
hlt
pusha
rcrl
push
data16
repz
push
jo
push
push
stos
mov
inc
xor
add
cmp
mov
jb
out
loope
loope
jp
jns
xor
pushf
pusha
pop
repnz
mov
hlt
roll
repnz
repz
repz
mov
inc
mov
or
xchg
repz
andb
pop
repnz
sbb
cltd
or
in
jmp
jb
mov
and
mov
pop
lcall
icebp
icebp
pop
xchg
stos
jns
xchg
pop
adc
repnz
repnz
cmc
cmc
xchg
adc
pop
mov
enter
lock
sbb
sub
cwtl
icebp
or
mov
jne
cmp
xor
cmovle
sub
adc
or
aad
pop
mov
test
inc
mov
mov
outsb
xchg
cmp
sub
ffreep
push
fisubl
mov
inc
cmp
push
sti
cmp
cmp
lods
enter
dec
add
mov
push
mov
enter
add
jne
neg
xor
jmp
xchg
fstl
fistps
lock
test
mov
add
add
dec
push
mov
sahf
push
add
inc
push
dec
sbb
ss
int
adc
jle
lea
int
imul
mov
lahf
out
insb
xchg
jg
sub
fldcw
dec
clc
inc
cmpsb
js
popa
test
sahf
out
pop
icebp
fsts
adc
shlb
in
sbb
clc
add
nop
or
adc
jle
dec
mov
cmp
in
js
jge
push
loop
loope
outsb
es
inc
fistps
push
outsb
mov
jne
cmp
mov
jne
jmp
and
je
add
lcall
inc
stos
mov
lea
add
not
and
dec
insl
hlt
sub
pop
sub
andb
cmp
add
loop
sbb
js
mov
sub
mov
add
mov
push
push
pusha
pusha
mov
fadds
mov
adc
mov
mov
and
jmp
cmp
and
je
inc
cmpsl
mov
test
push
sub
and
inc
cmp
adc
mov
inc
mov
adc
cmp
fbstp
sub
or
daa
and
andl
push
ror
pop
movsb
pop
in
cmp
enter
ja
adc
addr16
nop
sahf
dec
jp
add
dec
bound
add
mov
pop
test
adc
mov
sub
imul
sti
mov
cs
loop
icebp
js
lock
lcall
loope
mov
js
ret
test
adc
outsl
sbb
sbb
and
adc
sbb
fs
pop
test
inc
arpl
sbb
pop
inc
and
popa
xchg
call
xor
mov
inc
or
inc
add
xor
test
pusha
adc
or
out
loopne
mov
pop
ss
bound
add
stos
xchg
fiaddl
test
and
in
icebp
inc
aaa
or
xchg
mov
rcl
pop
dec
jne
mov
mov
fdivl
je
dec
loope
xor
xchg
add
aam
lock
nop
imul
das
or
adc
repnz
movsl
xor
pop
pushl
decl
jne,pn
adc
in
lock
xor
jmp
xor
aaa
jbe
jnp
sbb
cltd
pop
idiv
xor
pusha
or
nop
jle
cmp
ja
inc
xchg
outsb
mov
adc
or
jb
in
call
cmp
jae
dec
lea
loopne
jae
pop
jbe
sub
pop
or
cmp
lock
mov
adc
mov
leave
hlt
pop
fdivp
arpl
xchg
mov
fidivrl
or
rolb
adc
loopne
jbe
jle
rclb
sbb
sbb
inc
dec
je
xchg
and
push
push
lret
lcall
add
xchg
cmpb
dec
dec
mov
xor
movsl
shrl
sub
notl
ds
mov
and
push
mov
pop
sbb
xor
pop
into
and
pop
mov
test
cmpsl
int3
jmp
jle
aaa
out
stc
mov
mov
icebp
test
xchg
push
xor
cmpsb
sub
or
push
pop
adc
pop
sub
or
mov
push
xchg
mov
ja
jnp
ja
jmp
aaa
xchg
cmpsl
icebp
push
pop
enter
cmp
mov
addr16
jge
xchg
pop
idiv
mov
inc
divl
je
les
mov
popa
inc
mov
sti
mov
cmp
cmc
cs
add
sub
inc
aaa
pop
and
or
adc
mov
shlb
fmul
fsubl
adc
fs
jmp
jb
sbb
add
pop
adc
cmp
je
push
sub
sub
sbb
adc
decb
cmp
push
or
mov
stos
jmp
or
test
dec
mov
xchg
mov
icebp
sub
pop
sbb
xchg
mov
out
and
pop
je
cmpl
pop
xor
xchg
push
jns
dec
jl
notb
push
ret
int3
icebp
jecxz
sbb
cmp
add
inc
test
fldt
pop
mov
sarb
pshufw
fstpl
adc
and
jne
sub
gs
mov
into
and
mov
sub
adc
jmp
inc
xchg
ret
pusha
js
ljmp
inc
dec
dec
in
pop
push
jo
popf
push
call
dec
adc
cmp
inc
jns
sub
adc
mov
mov
mov
sbb
pushf
or
shll
cmpl
xor
dec
jmp
rep
sbb
dec
mov
sbb
or
inc
xchg
test
push
movsb
mov
push
inc
popa
mov
aaa
loop
xchg
mov
mov
movsl
or
fidivrl
cmp
mov
inc
adc
or
jnp
out
repnz
add
out
add
and
stos
push
testb
jns
mov
cli
nop
adc
shl
pushl
sarb
je
pop
loope
test
xchg
mov
jbe
aam
mov
sub
mov
data16
rorl
jge
mov
or
push
sub
jg,pn
insb
call
xchg
inc
fs
gs
adc
mov
pop
mov
inc
inc
inc
je
lods
movsbl
stos
adcb
cmpsb
mov
sbb
adc
add
rcr
faddl
popa
sbb
lock
ds
push
mov
push
push
jbe
xorb
flds
or
adc
or
sbb
ret
dec
or
cmp
dec
divb
outsb
or
mov
sbb
or
in
jmp
das
out
mov
push
xchg
movl
sub
sbb
jo
orl
ret
or
and
outsl
sub
lods
xchg
and
inc
dec
cmpl
daa
je
mov
xor
add
mov
mov
inc
or
add
push
daa
cltd
loopne
adc
int3
mov
popa
dec
mov
mov
shrl
push
orb
add
mov
sub
xchg
mov
cmovs
dec
sbb
test
lret
mov
cwtl
std
insl
jnp
andb
lret
add
insb
test
xor
push
xchg
inc
dec
mov
or
push
pop
jne
jmp
cmp
dec
clc
push
repnz
outsl
dec
lds
fnsave
mov
cmc
mov
sbb
cmp
or
mov
fdiv
adc
or
loopne
inc
dec
adc
in
sbb
xor
pop
dec
jp
push
xchg
jns
adc
int
in
aam
pusha
faddp
adcl
and
lahf
xor
test
sub
mov
sbb
lods
push
mov
hlt
mov
sti
sahf
lahf
pop
push
ljmp
and
push
sbb
cmp
ficompl
fdivrl
mov
sub
lods
movsb
ljmp
int3
lret
mov
push
jmp
cmpsb
xchg
test
incb
and
inc
inc
jb
lods
sbb
pop
lea
jp
xlat
dec
inc
inc
pop
cld
ja
or
mov
push
movsb
out
xor
jb
sahf
pop
xor
lock
clc
jne
pop
sbb
jmp
ja
and
jmp
test
sub
jecxz
jl
xlat
sub
sbb
imull
adc
adc
mull
xor
mov
repz
in
add
sub
sti
pushf
popl
mov
je
mov
mov
test
add
cmp
adc
add
sarb
xor
inc
popa
jne
fbstp
adc
mov
scas
mov
int3
test
inc
lahf
es
push
dec
shrb
cmp
push
and
insb
rclb
inc
mov
dec
sub
pop
push
or
mov
or
add
adc
add
xor
sbb
dec
loopne
andb
jg
or
or
adc
rorl
sbb
or
sub
mov
jno
adc
mov
inc
nop
lea
bound
mov
xor
push
sbb
adc
mov
subl
and
push
nop
pop
mov
jbe
hlt
push
movsb
mov
push
movb
popa
push
fstpl
or
ja
sub
in
xchg
or
push
stos
mov
or
sub
or
dec
mov
inc
xchg
push
push
inc
popf
or
insl
adc
and
sub
cmp
pop
sbb
inc
inc
cld
xchg
inc
lds
outsl
das
adc
inc
int
push
orb
mov
or
pop
shl
je
test
and
sbb
adc
mov
sahf
adc
mov
push
mov
pop
mov
cmp
and
sti
sbb
mov
and
mov
sbb
and
cld
jmp
dec
xchg
push
push
inc
xchg
pushf
cmc
push
pop
jo
add
fwait
or
mov
add
inc
jo
jg
add
ja
repnz
aas
inc
pop
inc
orl
mov
mov
cmp
jle
sbb
sub
decb
fnstsw
pop
mov
in
push
out
loopne
push
nop
jmp
mov
in
aaa
hlt
shrl
stos
inc
pop
xor
xor
inc
jmp
jne
mov
inc
out
shlb
lahf
add
jmp
sub
int
loopne
xor
cmp
cltd
rolb
mov
jecxz
and
or
sbb
dec
fsts
js
fmuls
xor
enter
add
movsl
push
add
push
out
xor
fwait
xor
jle
loopne
fdivp
pushf
xor
cmpsb
cs
into
std
pop
dec
cmpsb
movsl
cltd
je
jmp
loopne
jl
push
daa
insl
dec
sbb
and
aaa
loopne
mov
sbb
aas
shl
scas
cli
and
mov
jae
cmp
jbe
mov
lea
mov
test
sahf
lcall
leave
push
bound
popf
loop
jmp
leave
xor
sub
or
push
push
push
jmp
loopne
xorb
inc
cmp
push
and
out
ljmp
add
stos
push
mov
inc
sbb
mov
xorb
sub
cmp
movl
push
mov
test
lock
mov
cmp
pop
mov
mov
sbb
orl
add
repz
cmp
add
movsb
lock
test
std
push
mov
push
mov
inc
dec
jne
sbb
dec
push
scas
stos
mov
rolb
push
or
jnp
js
push
jmp
cmp
pop
pop
movsb
xchg
mov
jle
adc
js
dec
loopne
sbb
or
lock
mov
add
mov
in
mov
push
popa
loop
push
sbb
mov
xchg
adc
loop
jbe
iret
in
jo
pop
jno
call
push
loopne
sbb
push
mov
lcall
cltd
mov
dec
in
aam
bound
push
xlat
ret
ss
jo
insb
ljmp
push
adc
add
outsb
addl
mov
and
lds
inc
mov
add
test
dec
out
inc
cmp
sti
sub
jmp
xor
dec
sbb
mov
hlt
inc
push
gs
jmp
mov
movsl
ss
out
imul
inc
insl
adc
aad
es
popf
cltd
std
insb
cmp
cmp
add
mov
mov
jnp
cmp
out
aam
push
push
pop
pusha
and
inc
push
cmc
cmp
xor
inc
dec
jb
push
inc
push
movsb
mov
dec
pushf
lea
or
imul
clc
sarb
sub
sbb
aaa
ret
push
lds
jnp
or
pop
ret
dec
pop
add
or
sarb
roll
sbb
sbbl
mov
lea
mov
out
dec
inc
outsl
je
push
iret
dec
sti
pop
cmp
jne
sbb
cltd
inc
out
pushl
inc
mov
pushf
cltd
sub
lahf
das
sbb
dec
notl
popa
cltd
aad
insl
sub
in
aaa
mov
and
nop
mov
shl
xor
xor
cmp
xor
push
ljmp
sub
popf
orl
imul
cld
das
pop
insb
add
inc
add
add
test
xchg
and
loopne
ret
subb
mov
sbb
sbb
mov
es
push
push
jg
pop
inc
andl
xchg
dec
cli
popf
clc
daa
ficomps
sbbl
and
jb
add
add
dec
add
pusha
addr16
sub
aad
rcll
jmp
pop
push
dec
add
dec
insb
or
or
mov
fiaddl
add
jne
and
and
add
xor
into
mov
jl
sahf
add
popf
rclb
jmp
outsb
aas
push
scas
jo
sub
push
outsb
push
push
stos
lock
shrl
inc
movl
or
jle
add
mov
inc
or
add
jg
push
pop
add
xchg
pop
adc
mov
mov
mov
push
push
bound
sbb
mov
push
imul
dec
jl
or
clc
xor
xchg
add
loopne
dec
push
fxch
xrelease
sbb
pop
sarb
pop
cmp
ret
add
pop
jb
es
icebp
orl
sub
sahf
imull
das
xor
ror
pop
icebp
mov
iret
inc
push
outsb
rorb
adc
mov
sub
jns
dec
repnz
push
or
pop
and
sub
dec
int3
rcrl
cmp
nop
add
inc
inc
dec
ret
add
and
jle
sbb
push
sub
xor
jecxz
dec
jnp
adc
pop
rorl
jbe
lock
iret
insb
and
pop
cmp
adc
xchg
mov
or
push
add
jno
adcl
inc
mov
lock
pusha
stos
repnz
mov
bt
sbb
lret
gs
inc
pop
cmpl
push
sub
jae
push
es
adc
inc
fs
mov
mov
sbb
cld
insb
inc
push
insb
lcall
jae
scas
push
inc
inc
or
mov
mov
sub
push
ja
in
xor
pop
movsb
pop
nop
arpl
pop
xor
pop
pop
cmp
cli
out
lea
push
jne
cmp
stos
inc
lahf
xor
sbb
pop
mov
sbb
pusha
jb
mov
push
cmp
xor
add
mov
in
and
and
fistl
jecxz
iret
mulb
fcoml
fcomps
int3
data16
clc
or
test
movsl
xchg
into
lahf
xchg
shrb
lods
hlt
sahf
jbe
dec
add
hlt
ffreep
inc
ljmp
cld
xor
adc
pop
xlat
pop
stos
cld
adc
and
in
loopne
push
inc
test
xor
scas
hlt
insl
push
xchg
test
mov
jmp
stos
testb
pop
ret
push
xor
push
push
es
add
bound
pop
pop
jmp
inc
dec
lea
pop
and
add
in
mov
adc
ret
lahf
push
inc
add
popa
jecxz
nop
or
add
or
or
pop
clc
stos
add
jmp
xchg
decl
cmpsb
mov
jp
cmp
add
mov
aas
aam
sarb
push
add
in
adc
xor
pop
add
aas
mov
push
dec
aas
repz
or
push
pushf
xchg
add
cmp
mov
add
jmp
fadds
in
je
and
jns
pop
jbe
jbe
mov
push
pusha
jne
nop
jo
xchg
push
mov
add
pop
add
add
adc
aas
mov
or
repz
repz
and
xor
inc
push
rolb
out
sbb
or
cwtl
jbe
and
arpl
mov
sbb
add
into
push
lret
jne
fimuls
mov
jge
inc
push
add
inc
inc
sbb
pop
and
or
cmp
jp
xchg
and
inc
shlb
inc
sub
xor
les
mov
add
mov
sti
add
jle
jge
sbbl
leave
mov
sub
xchg
pushf
shrb
dec
shll
js
add
hlt
loope
pop
loop
lods
push
ss
pop
js
pop
cmp
iret
loopne
xor
insb
int
or
mov
xchg
in
sti
add
imull
mov
inc
and
cld
mov
add
mov
jno
jno
jbe
mov
push
jns
es
sub
shll
mov
je
movl
sbb
pop
push
or
push
aas
clc
mov
lret
scas
rcr
adc
and
or
push
or
rcll
mov
fnsave
jo
sub
inc
je
adc
pop
pop
push
push
mov
or
pop
cmp
hlt
lods
sub
ds
or
rorb
pusha
lea
inc
jle
mov
jg
adc
lea
inc
cmp
cmp
js
add
ficompl
pop
pop
xchg
dec
push
adc
cmp
jg
push
jo
pop
adc
lock
adc
ds
jmp
sub
pop
add
rolb
xchg
movsl
shrl
js
inc
loopne
xchg
inc
dec
pop
or
sub
in
xor
movsl
xor
xchg
fdivp
scas
pop
test
test
nop
ds
or
pop
imul
add
jp
jecxz
adc
push
les
xchg
xlat
lcall
cltd
adc
jbe
push
sbb
push
jo
in
add
jne
test
mov
pop
or
inc
lret
aaa
lock
in
pop
negl
leave
sahf
gs
push
mov
fcmovbe
ds
add
xor
cmp
stos
dec
push
dec
inc
pushf
jge
sbb
sbb
inc
add
and
mov
jns
aad
or
or
addr16
filds
rol
cli
add
add
add
sub
push
xlat
mov
dec
not
and
jg
inc
sub
shll
and
test
and
add
or
inc
xchg
dec
cmp
aaa
test
mov
jo
xor
sbb
data16
add
scas
push
testb
je
mov
mov
mov
addl
add
in
jbe
in
push
andl
jle
lret
pop
inc
and
mov
hlt
jbe
aaa
andl
cmpl
lcall
mov
aas
das
pop
pop
jg
pop
jo
jmp
sub
push
ret
idivb
sbb
fstps
fnstenv
inc
fmull
mov
pop
popf
mov
add
xchg
fdivrs
jecxz
push
jle
mov
popf
jne
fldt
mov
jl
mov
xorb
mov
ja
es
inc
mov
rol
push
or
jmp
jl
call
in
push
sbb
push
or
pop
add
cmpl
add
lea
fimull
jl
test
out
loopne
add
sbb
sar
pop
inc
mov
cmp
ja
xchg
pusha
jo
sub
mov
cwtl
sti
or
xchg
lret
movsl
mov
jnp
xor
or
sub
sbb
or
je
or
daa
adc
nop
xchg
int3
pop
addr16
pop
or
add
loope
pop
cs
add
stc
test
xor
mov
adc
out
loop
int
mov
add
sub
mov
imul
outsb
lea
cmpsb
xor
movsl
mov
mov
mov
adc
movsl
add
test
hlt
stc
pusha
outsb
outsb
stos
sbb
push
or
inc
insb
je
aaa
sbbl
jle
add
mov
ds
shlb
add
sbb
sbb
pop
and
push
ss
js
add
andb
insl
and
xor
jg
inc
fs
sbb
imul
movsl
and
cs
or
movsb
dec
sbb
idivb
add
mov
es
das
mov
imul
or
mov
pop
push
or
shrb
dec
mov
inc
adcl
adc
mov
and
lock
jge
call
arpl
imull
xor
xor
arpl
sub
stos
fwait
sub
ret
loope
rolb
dec
xchg
or
in
aam
jmp
xchg
and
sti
cmp
sbb
pop
add
or
mov
adc
into
sahf
cwtl
sub
inc
inc
push
insl
cmp
jl
xor
cmp
int3
cmc
stos
jns
ret
pushf
sub
xchg
add
notb
dec
mov
shlb
scas
push
adc
test
sbb
push
mov
movsl
jge
or
cld
sub
jns
lcall
pop
mov
inc
lods
xlat
mov
cwtl
ds
dec
mov
dec
nop
mov
test
ja
push
stos
mov
je
cltd
or
cmp
cmp
push
mov
out
pop
xor
sub
push
jo
adc
mov
movsl
xchg
mov
jmp
andb
or
sub
mov
xchg
ss
cwtl
rorl
dec
jo
gs
xchg
fcomip
test
mov
gs
fs
xchg
data16
or
adc
jbe
sbb
std
push
cwtl
lds
push
and
shl
gs
mov
std
cmp
fcompl
pop
jae
jne
add
push
addr16
xchg
hlt
jmp
cmp
jle
arpl
jle
sub
js
and
pop
push
push
pop
dec
les
add
or
adc
fmull
movsl
jo
shll
scas
sti
lock
nop
cmp
fsubp
rcl
pushl
dec
sarl
popf
lea
dec
xor
inc
push
rorb
cmp
sbb
out
cltd
sbb
test
movsb
pushf
jb
je
iret
sbb
inc
mov
cmpb
jne
and
loop
push
jg
dec
jno
data16
push
xor
mov
shrb
push
ljmp
and
ja
ret
inc
daa
add
popf
mov
hlt
sub
data16
push
cmpl
iret
call
or
adc
sub
or
mov
shl
je
and
push
orl
jle
mov
xchg
adc
add
sahf
mov
or
jae
push
or
push
nop
neg
mov
jno
xor
jp
mov
mov
bndldx
push
lock
adc
daa
test
ret
or
jne
and
or
pusha
das
sbb
cld
push
jg
ss
lods
stc
cltd
push
push
push
ds
sbb
enter
xor
mov
out
mov
xor
stc
cmp
push
dec
jmp
add
xchg
sub
inc
cmp
jmp
movsl
nop
icebp
dec
fwait
movb
jo
jge
or
push
pusha
movsl
push
jmp
in
mov
dec
mov
adc
sbbb
inc
jmp
sub
sar
int
inc
sub
rcrl
push
xor
sub
clc
xor
push
test
cli
and
mov
mov
ret
or
sub
test
jne
jmp
or
push
and
dec
mov
jle
adc
pop
scas
je
fidivs
mov
jo
int3
adc
lods
mov
pop
cmp
pop
fs
adc
lret
pusha
jns
icebp
sbb
mov
mov
imul
mov
pusha
push
mov
jo
adc
pop
push
add
insb
stc
inc
mov
pop
ds
add
add
mov
cs
test
and
scas
pushf
adc
cwtl
mov
je
gs
fwait
pushf
jbe
sbb
jge
pushf
sbb
adc
clc
daa
pop
mov
mov
sbb
insl
rorb
mov
push
daa
addr16
test
mov
pop
dec
ret
jmp
jmp
int
dec
nop
or
add
jl
es
rcr
mov
jle
ss
push
inc
jno
add
sbb
fstpl
mov
inc
loopne
push
jb
fcompl
add
mov
push
or
sbb
ja
and
and
arpl
cmp
fsubl
inc
jmp
loopne
inc
pop
cmp
lret
xchg
sbb
jbe
xor
xor
adc
mov
sub
push
mov
add
adc
mov
cmp
jecxz
cmp
push
call
lock
mov
aam
ljmp
push
dec
sub
push
outsl
je
push
clc
in
cmpl
sub
sub
lea
ja
enter
stc
push
cltd
pop
rcr
mov
pop
stos
mov
shl
mov
mov
xor
in
xchg
push
pop
out
mov
or
ret
pop
push
add
and
andb
stos
lret
sub
mov
std
std
or
mov
sbb
call
pop
shlb
mov
dec
sbb
nop
xor
pop
sbb
loop
cmc
je
in
add
in
jne
push
xor
add
inc
push
nop
and
xor
fcomps
aad
rol
inc
roll
and
into
jl
add
js
push
movsl
shr
pop
push
sbb
inc
mov
sbb
mov
dec
or
ds
clc
xchg
sub
cwtl
push
rclb
lahf
insb
int3
mov
inc
sub
imul
or
sub
add
and
and
leave
xor
mov
xchg
or
mov
repz
adc
lret
int
sbbb
iret
mov
jle
cmpsl
push
mov
and
lods
xor
data16
repnz
add
iret
xor
pop
sbb
lods
xor
lret
mov
dec
call
dec
das
nop
mov
cld
mov
adc
sbb
pop
push
es
add
xchg
xchg
into
jp
mov
aam
mov
rcrb
sbb
jle
js
jg
xor
fsubr
jne
popf
lret
add
mov
and
xchg
cmp
mov
jo
jmp
adc
jo
ds
fidivs
jo
or
push
ds
notl
popa
aaa
push
cwtl
push
mov
mov
scas
xor
loope
loope
pop
or
sub
pop
dec
popf
into
fsubrs
add
sbb
lock
or
xchg
mov
mov
movsb
int3
dec
adc
inc
std
mov
jnp
adc
andb
mov
call
sarb
lods
clc
push
imul
mov
cmpsb
push
loopne
inc
sub
movb
inc
jnp
sahf
or
movzwl
cli
call
in
les
shlb
fldcw
mov
xchg
bound
inc
inc
lods
xorb
sbb
mov
imul
jno
add
test
sub
push
pop
aam
xchg
je
ja
mov
fdivl
rcrb
xor
aam
xor
dec
xor
and
lea
cld
adc
mov
test
mov
push
lahf
pop
imulb
sbb
lea
inc
pop
xor
aam
mov
fsubrs
and
mov
popa
mov
aam
rorb
lret
inc
outsb
and
mov
mov
loopne
icebp
lcall
int3
fistpll
insb
jne
pop
ret
or
mov
mov
insb
jg
dec
lea
adc
jno
or
xor
cmp
cmp
xor
and
dec
dec
lcall
or
xor
sbb
add
or
xchg
cmpb
cmp
lds
in
jne
mov
mov
leave
mov
inc
mov
cmpl
cmc
enter
mov
adc
test
push
inc
mov
jnp
jb
sub
jle
cmpsb
fists
xchg
add
hlt
jl
and
shrb
add
mov
dec
adcb
dec
daa
cmp
adc
jge
dec
sub
push
mov
adc
icebp
sub
xchg
outsb
es
or
pushf
add
bound
pop
sbb
mov
test
ja
add
push
sbb
lods
cmp
mov
loopne
jae
scas
xor
fidivs
push
cld
and
gs
pop
test
push
pop
jb
lret
lcall
inc
add
pop
lea
push
mov
pop
xchg
add
mov
inc
mov
pop
mov
push
push
or
leave
and
xor
ljmp
in
mov
aas
inc
lock
test
push
mov
popf
or
jg
fcoms
dec
in
sbb
lods
xor
sbbl
adc
or
push
dec
xchg
imul
int3
adc
outsb
inc
or
lcall
adc
jnp
sub
leave
fsub
lods
and
pop
test
cmp
jg
inc
inc
push
sahf
or
add
pop
or
daa
nop
fs
xchg
pop
enter
aam
add
aam
repnz
mov
jge
inc
jb
aam
inc
inc
scas
xchg
add
loopne
daa
cmpl
mov
mov
push
push
sbb
sub
test
arpl
mov
ds
mov
push
or
movsl
adc
fstl
sub
addr16
popl
int
imul
lahf
stos
cltd
add
repz
call
andb
or
cltd
ficomps
cmp
sub
jbe
lock
or
mov
sub
fidivs
sahf
mov
xor
sbb
movsl
mov
mov
test
cmpsb
pusha
xchg
add
xchg
ret
pop
push
fiadds
pop
add
jp
sub
fwait
jns
inc
jb
adc
dec
aaa
mov
arpl
or
rorb
cmpsl
repz
pop
or
test
sub
mov
enter
pop
inc
insb
add
emms
lret
test
mov
add
popf
cmc
adc
or
mov
inc
mov
push
imul
sbb
lds
push
mov
adc
sbb
adc
lods
les
test
adc
js
arpl
fistpll
pop
xchg
push
or
shll
enter
testl
pop
xchg
movsl
jno
arpl
sub
mov
loope
clc
adc
jle
or
add
aas
push
les
repnz
adc
cmpsb
sub
cmp
push
and
sbb
push
inc
mov
adc
in
push
dec
or
xor
dec
jmp
add
or
xorb
cmp
aaa
jp
inc
fcomps
mov
dec
or
fisubrs
in
fstpl
adc
fmuls
call
lock
xlat
sbb
push
dec
fisubs
movsb
enter
popf
add
arpl
jno
xchg
pushf
js
cmpl
fstpt
popa
or
mov
jo
shr
pop
into
das
cwtl
test
outsb
fstpl
push
dec
add
and
sbb
lods
orb
adc
adc
test
push
push
lahf
fbld
dec
mov
pushaw
pop
sub
xor
sbb
cs
push
orb
add
testl
cmpsl
xor
ss
js
adc
nop
imul
mov
insb
orb
mov
push
pop
push
push
and
adc
pop
andl
xchg
fstl
mov
lock
push
mov
subb
lock
jns
aaa
nop
xchg
pushf
dec
fwait
push
movsb
lods
sahf
out
sahf
mov
inc
into
es
in
push
movb
xchg
adc
aad
push
les
mov
jns
sbb
pop
inc
push
movups
sti
mov
mov
rcll
inc
push
fs
pusha
in
jge
pop
inc
jl
sub
sbb
cmp
inc
aad
sbb
lret
push
cltd
jmp
inc
out
xor
cld
fcomp
pop
and
and
push
inc
imull
jmp
test
xchg
mov
adc
fucompp
scas
inc
jp
push
clc
and
ret
and
push
push
test
push
outsb
adc
into
sbb
inc
es
test
pop
sub
movsb
das
in
mov
mov
enter
lret
in
mov
in
repnz
std
mov
lods
std
clc
cmp
inc
or
jne
das
pop
mov
cmp
xchg
pop
sbb
jg
and
mov
sar
add
xchg
cld
test
jg
fwait
dec
sbb
pop
sar
jg
sub
testb
jb
bound
sbb
cmp
fs
cmp
push
adc
xchg
fdivrs
jne
or
jb
push
popf
sar
jmp
inc
jns
inc
xchg
mov
mov
mov
ss
mov
xor
sbb
in
shlb
ret
mov
xchg
lret
int3
lock
push
cltd
call
mov
jmp
lret
push
pop
add
inc
lret
in
adcl
add
or
test
pop
cmp
xchg
push
insb
mov
jne
popa
mov
jbe
repnz
lea
ds
adc
adc
mov
fsubl
out
out
or
inc
adc
dec
or
sub
inc
mov
insb
jne
inc
sub
imul
aad
pop
and
mov
jne
fcompl
or
and
xchg
out
cmpl
sub
cmp
movsl
test
outsl
ss
dec
push
imul
push
jns
mov
and
xchg
es
pusha
ret
inc
pop
data16
movzwl
rolb
cmp
xor
aam
roll
mov
jns
mov
jp
fisubs
or
stos
mov
adc
jle
xchg
lret
pop
sahf
add
in
and
bound
sub
stc
mov
push
adc
loopne
push
xor
push
lods
aas
test
mov
and
sbb
xchg
lret
and
outsb
jg
push
push
and
mov
je
pop
in
stos
shll
imul
or
mov
dec
dec
inc
icebp
adc
aam
dec
fisubrl
jmp
mov
sub
in
jo
jno
adc
pop
rclb
xor
add
add
pusha
popa
add
dec
test
repz
pop
test
add
add
aaa
mov
xchg
jl
out
xor
adc
push
pop
insb
xor
pusha
addl
jo
in
and
sbb
loopne
mov
sub
adc
int3
jecxz
mov
xor
pop
xor
mov
popf
lods
lods
loopne
pop
pop
jl
mov
mov
sub
testl
dec
push
cmp
cmc
aad
test
subl
fwait
mov
push
lods
mov
mov
xchg
push
mov
mov
cwtl
stos
test
popa
mov
int
sub
mov
aam
cmpsl
fsubl
lahf
imul
rorl
push
sub
mov
pop
mov
sbb
in
idivb
cltd
sahf
jp
jmp
inc
outsb
dec
loope
mov
or
dec
xchg
push
lahf
jb
push
popl
push
xor
test
xor
shlb
aad
leave
jnp
movsl
cmpsl
adc
sub
outsb
mov
pop
sbb
cmpsb
push
adc
fcoms
neg
sub
test
mov
mov
jmp
das
dec
popf
nop
pop
mov
bound
push
push
sub
popf
in
bound
and
ret
popf
inc
rep
and
cmpsl
xchg
fadds
bound
into
cmp
pusha
test
add
inc
movsl
sbb
imul
aas
dec
cs
leave
lret
jbe
xor
jmp
sti
pushf
out
add
pop
add
in
and
orb
ds
cli
loopne
add
xchg
add
sub
fistpl
sbb
jmp
mov
adc
aam
js
out
jnp
sub
or
inc
adcl
popa
jns
mov
dec
jge
jmp
fcoms
mov
xchg
or
or
scas
popf
pop
leave
int3
sub
pop
enter
mov
adc
add
mov
mov
mov
mov
jecxz
les
je
test
test
pushf
jno
adc
into
cmp
ficoml
push
add
movsl
in
hlt
in
sbb
movsb
rcr
mov
hlt
push
nop
cmp
test
ficoml
movsb
jne
jmp
sbbl
cmc
jp
shr
in
dec
pusha
dec
push
add
je
push
mov
inc
imul
frstor
popa
fimull
dec
ds
mov
fimull
dec
xchg
xor
inc
jg
ret
jno
cmpl
inc
add
lahf
push
add
lahf
out
mov
aam
xor
mov
roll
bound
fs
mov
jne
or
inc
inc
bound
aam
ds
mov
mov
push
jl
jne
xor
lds
sub
rorb
andl
push
nop
movsb
pushf
mov
mov
in
adc
or
cmp
or
push
mov
inc
mov
mov
jb
jg
jns
mov
mov
jle
dec
pop
pop
sbb
cmpsl
inc
imul
sbb
ss
mov
cmp
lock
popf
repnz
and
cmp
leave
lock
imul
pop
mov
je
jo
pusha
cmp
mov
scas
movsl
push
je
add
adc
inc
fisttpl
imul
add
or
add
dec
imul
shlb
adc
and
mov
inc
xchg
xchg
xchg
add
cmp
xchg
sub
or
out
xchg
dec
push
and
test
outsl
mov
das
in
and
dec
push
and
dec
sub
inc
movsb
sbbb
xchg
xchg
mov
movsb
mov
mov
pushf
add
stos
inc
jno
jno
and
dec
sub
incl
mov
add
test
or
xchg
imul
cmpsb
xor
sub
mov
mov
push
adcb
mov
xor
imul
lods
mov
adc
sbbb
lods
mov
orl
pop
sbb
xchg
pushf
mov
and
lods
sub
or
addr16
xchg
dec
inc
test
in
scas
cwtl
test
and
arpl
dec
inc
jb
dec
mov
repnz
sbb
jb
cwtl
xchg
or
or
cwtl
and
mov
test
pushf
sub
nop
xchg
or
stos
add
mov
xor
mov
popa
pushf
and
or
xchg
cld
hlt
adc
lea
add
cmpsl
push
mov
mov
aaa
hlt
ss
push
push
mov
or
ret
jg
dec
jge
mov
jg
push
inc
adc
and
inc
push
pusha
jne
dec
sub
xor
shrb
je
sub
fdivr
jg
adc
divb
xor
lcall
adc
xchg
fisubrs
add
jne
movsb
stos
mov
push
sbb
cli
pop
pop
ret
or
sub
xor
push
mov
bound
add
cli
shr
add
je
add
imul
loopne
cs
xchg
in
inc
or
lock
ljmp
fwait
xchg
outsl
push
iret
shl
push
dec
adc
push
and
mov
push
sub
outsl
inc
or
xchg
lret
jbe
jle
loopne
outsl
ja
dec
push
jg
addr16
mov
and
in
mov
fbstp
fidivrl
lea
lea
inc
out
and
and
pop
mov
rclb
push
mov
xor
dec
push
enter
or
xchg
push
negl
ret
pop
mov
sub
sub
push
data16
repnz
mov
mov
jae
pop
and
fmuls
or
cmp
adc
pop
icebp
pop
dec
adc
xor
loopne
adc
or
cmp
xor
inc
pusha
push
sbb
movsl
rcr
xchg
lods
cmp
dec
andb
add
xor
jbe
in
adc
orb
push
outsl
mov
test
je
pop
ljmp
lret
pop
pusha
data16
or
inc
dec
dec
lcall
cli
jne
lea
popa
add
out
and
mov
sbb
je
adc
in
fucomip
stos
bound
and
or
dec
imul
adc
inc
data16
jo
add
or
dec
or
popa
push
lret
ror
mov
mov
or
popa
inc
and
loopne
or
test
lahf
shrb
add
push
outsl
mov
mov
mov
mov
adcl
inc
movsb
lret
rcrl
sub
xor
jl
or
pop
push
popa
mov
or
iret
je
enter
or
cwtl
add
push
adc
mov
inc
in
dec
add
sbb
add
enter
add
mov
mov
loopne
movsl
pop
popa
adc
pop
lcall
testb
rcl
cltd
fidivl
in
loopne
inc
xchg
es
es
adc
jae
cmpsl
lock
push
push
testb
add
in
jo
jmp
fsub
push
xlat
pop
cld
xchg
jb
pop
fsubrl
loop
cmp
xchg
or
add
test
xchg
lret
mov
lods
fdivr
add
out
and
mov
pop
lret
mov
push
or
icebp
cs
scas
les
je
push
je
mov
cmpb
ret
int
test
xchg
mov
in
inc
push
jle
enter
mov
cmp
int3
das
xlat
outsl
jecxz
mov
ret
or
sbb
push
out
and
jmp
adcb
mov
mov
sarb
sub
in
cmp
or
imul
add
sub
loopne
sub
jnp
sub
mov
inc
outsl
or
cld
fcomi
subl
push
adc
sub
pop
shlb
js
testb
pop
adc
outsl
jo
in
push
fsubs
and
insb
fisttpll
inc
add
or
aam
jge
xchg
dec
movsl
sarb
idivb
adc
push
fdivs
dec
scas
movsl
nop
aam
testb
adc
inc
inc
fidivl
clc
shlb
xchg
out
mov
int
iret
xor
add
enter
sti
das
imul
cmp
jg
lea
jl
jl
cmp
jg
inc
jmp
ret
add
test
fsubrp
jbe
jne
imul
mov
jmp
push
pop
inc
jo
jge
aas
sbb
cmp
and
pushf
sbb
dec
pop
bswap
sbb
push
mov
or
loope
mov
adc
xor
insl
inc
mov
cmpsb
shrb
and
xchg
in
mov
pusha
add
add
and
or
push
cld
iret
add
xchg
pop
lea
mov
mov
js
mov
jp
mov
add
or
sub
xor
sub
pop
mov
inc
sbb
std
sbb
push
clc
lock
sub
mov
das
inc
pop
test
cltd
and
cmpl
xlat
imul
add
or
fadds
pop
sub
gs
ret
cmp
jg
add
jmp
sub
add
int
pop
pusha
jnp
in
push
inc
andb
into
xlat
pop
or
pop
and
sub
jmp
cmc
xchg
sbb
push
insb
and
mov
pop
adc
add
imul
dec
and
and
leave
outsl
imul
mov
sbb
pop
sbb
inc
sbb
push
xor
movsb
int
into
icebp
outsb
out
mov
add
out
jns
orl
decl
sbb
sub
jl
sub
incl
jge
jno
bswap
in
push
out
testb
or
js
int3
sbbb
clc
xor
push
adc
mov
in
pushf
push
cltd
xor
inc
xor
loop
mov
or
pop
cmpsl
push
outsb
out
push
sbb
cvtps2pd
push
jnp
jnp
jne
and
push
push
push
jmp
pop
lock
push
push
xorl
xor
dec
cmp
cs
push
cld
and
or
cmp
add
out
mov
movsb
xor
jnp
loopne
imul
add
into
mov
out
imul
adc
mov
out
mov
es
subb
jne
add
hlt
inc
sarb
daa
icebp
fstpt
adc
stos
dec
mov
mov
cmp
jge
cmp
jl
cmp
jg
daa
dec
je
push
jle
sarb
loopne
add
insb
and
repnz
jle
xchg
nop
inc
inc
lods
call
cmp
add
pop
out
jne
cltd
out
push
sub
popf
shrl
les
lods
inc
test
jl
shl
test
or
push
lods
sbb
mov
and
mov
inc
loop
cmp
dec
bound
dec
xchg
fs
mov
mov
mov
add
aas
mov
mov
xchg
xorb
mov
loope
add
mov
iret
jns
push
dec
lock
rorl
hlt
rorb
fildl
adc
inc
push
fidivs
lea
jmp
fucomi
mov
jg
iret
es
xchg
ja
push
push
mov
xor
add
mov
push
jge
insb
lea
lea
clc
adc
add
sbb
mov
xchg
pop
or
sbb
loopne
and
add
cltd
mov
in
cmp
adc
sub
sbb
mov
fiaddl
sbb
test
out
pushf
adc
jecxz
dec
ljmp
add
lock
or
pop
mov
jb
sahf
dec
or
inc
mov
add
lcall
lahf
mov
leave
mov
fldt
xor
jns
or
push
adc
daa
xor
mov
mov
ret
cltd
cs
imul
out
jne
mov
inc
ljmp
push
sbb
ljmp
adc
add
test
adc
push
insb
fisubl
mov
dec
cmpb
push
clc
ljmp
or
icebp
call
push
dec
imul
inc
inc
fldt
sbb
pop
xchg
aaa
mov
rorl
inc
adc
xor
cmpsl
enter
and
and
ror
out
rcr
mov
pop
cli
lds
cli
int3
push
push
push
xor
or
jge
fdivrs
sub
and
neg
sbb
mov
and
mov
sbb
and
push
test
ret
and
out
push
shr
inc
push
xor
daa
shr
rcr
shr
rcr
into
popa
aas
ret
or
pop
lock
xor
out
shll
cmp
or
cmp
add
out
add
dec
add
and
mov
fiaddl
pop
movsb
push
in
daa
movsb
mov
loopne
and
xchg
adc
xor
sbb
jne
mov
outsb
scas
sbb
ret
jns
or
js
push
fdivrs
in
popa
out
idivl
adc
adc
jbe
sub
adc
push
or
cmp
adc
inc
xchg
test
or
add
ja
adc
lock
adc
pop
jmp
cmc
clc
mov
pop
stc
inc
pop
jmp
lret
mov
fists
arpl
pop
push
sbb
push
pop
and
mov
xchg
dec
add
sub
test
dec
pop
pop
arpl
into
and
sbb
aas
mov
jle
cmp
pop
push
ja
dec
add
movsl
mov
or
stos
mov
inc
jb
lock
cmpsl
xchg
andb
mov
popl
pop
and
mov
or
dec
aas
lcall
aad
or
jmp
lcall
and
repz
leave
leave
adc
stos
scas
inc
inc
in
mov
fs
add
clc
ja
cs
pusha
adc
push
dec
loopne
jp
sbb
sbb
jl
jnp
mov
and
push
icebp
xchg
jne
mov
movsb
fmuls
mov
sbb
pop
sahf
add
icebp
dec
dec
sbb
call
push
mov
or
fcoml
cltd
mov
push
jne
push
add
cmpsb
aas
out
xchg
pushl
pop
fldcw
push
in
dec
push
xchg
push
sbb
outsb
add
fs
addl
jmp
push
arpl
out
or
mov
stc
pop
jne
pop
push
push
add
jne
jmp
xchg
jb
or
jno
rorl
adc
or
lea
cmpb
mov
adc
cmpsl
sarl
inc
pop
mov
es
mov
or
int3
add
ds
cmp
subl
push
add
or
mov
imul
dec
or
shll
add
xor
push
and
add
xor
mov
dec
adc
add
and
or
jne
mov
push
xlat
loopne
ret
mov
or
push
pushl
pusha
or
outsb
jo
imul
addb
xor
and
adc
testl
jmp
loope
sub
mov
mov
out
sub
pop
xor
loopne
inc
test
sbb
pop
cmp
in
adc
cmp
xchg
mov
push
mov
pusha
mov
mov
jne,pn
sbb
fnsave
rol
inc
mov
cmp
pushf
add
jbe
sbb
pop
mov
arpl
ja
fsubr
fnsave
call
pop
add
loopne
jmp
test
sbb
test
cmp
aaa
loopne
xchg
or
inc
daa
push
adc
push
dec
movl
pop
les
push
je
add
insl
ret
inc
sub
mov
stos
xor
stc
scas
add
pop
inc
cmp
or
out
sub
inc
aas
dec
movsl
adc
jnp
push
icebp
inc
cmp
roll
test
mov
rolb
sbb
xchg
ret
inc
pop
inc
and
push
inc
fs
out
or
push
sub
sbb
cmp
clc
pop
push
jb
mov
add
decb
inc
dec
insb
loope
mov
cmp
jb
adc
mov
or
mov
mov
or
clc
jnp
xchg
or
arpl
push
push
cs
jo
push
cs
daa
push
xor
sahf
and
call
lods
dec
leave
pop
push
and
inc
adc
repz
je
adc
insl
and
aam
sub
scas
bound
add
cmp
sub
adc
cld
leave
jo
inc
xchg
jae
mov
sub
cmp
lods
xchg
mov
or
cmp
xchg
jnp
xchg
ret
jg
inc
pop
inc
sub
sbb
movsb
and
rorb
mov
rcll
je
jle
mov
test
out
add
mov
sbb
push
jbe
mov
outsl
cmp
cli
pusha
or
mov
xor
lea
xchg
mov
pop
loop
pusha
xchg
xchg
mov
test
jle
pop
jbe
fsubs
hlt
or
stc
mov
mov
js
fs
fs
jle
js
jle
nop
pop
subl
xchg
test
xchg
test
xchg
inc
scas
dec
cmp
push
push
mov
xchg
mov
cmp
xchg
add
or
sub
sbb
mov
pop
rcll
push
loopne
sahf
pop
out
pop
adc
je
cmpl
int
jecxz
loope
cwtl
mov
bound
ja
aaa
loope
cld
cs
cmp
aam
rclb
add
in
movsl
inc
adc
test
add
or
rcll
popf
add
xorl
push
fidivrl
loopne
sbb
ret
cmp
add
ljmp
ss
dec
mov
outsb
push
fnstenv
xor
cmp
pop
popf
sbb
xor
inc
test
jnp
aas
push
push
inc
popf
or
sub
inc
and
repz
xorl
and
in
jne
lahf
pop
pop
push
loope
aad
add
adc
cmp
add
push
sub
inc
dec
adc
mov
or
sbb
or
add
adc
sbb
and
popf
cli
stos
sub
and
cmp
pop
out
or
push
mov
mov
or
popf
adc
or
inc
ljmp
jne
mov
and
cld
movsb
mov
jne
xchg
add
inc
lcall
je
out
adc
cmp
push
xor
dec
jmp
xor
pusha
or
sub
test
inc
inc
xlat
xchg
sbb
inc
pop
je
pop
cmp
in
dec
add
int
or
cmp
add
xchg
clc
lret
mov
in
mov
adc
add
xor
mov
push
inc
or
ss
add
je
cmpb
pop
and
andl
fnsave
dec
into
inc
add
xor
inc
into
mov
jns
pop
add
add
mov
cs
add
cwtl
fst
xchg
enter
sbb
mov
fsubs
mov
outsb
pop
lds
sbb
xor
push
xor
js
lock
lret
mov
loope
cltd
inc
adc
or
cld
imul
imul
shl
fcom
sub
pinsrw
inc
sub
mov
jge
push
push
orl
scas
xchg
jo
sbb
add
push
xchg
mov
jno
inc
loope
xchg
ja
cmp
je
dec
push
xor
dec
cmp
jecxz
ret
sub
cld
sub
push
sar
inc
push
adc
push
into
fidivrs
mov
xchg
or
sbb
sub
xchg
fstp
adcb
ret
stc
fcoms
fistl
or
sar
dec
jg
dec
mov
hlt
and
inc
push
pop
push
jmp
pop
mov
xchg
add
call
loopne
jae
pusha
add
movw
dec
add
mov
movb
xor
dec
sbbb
sti
add
push
lret
inc
rorl
insb
push
outsb
lret
adc
bound
mov
push
xlat
fidivrs
fnstsw
mov
add
inc
aas
cmp
add
aaa
and
xor
and
outsb
cli
andl
pusha
pop
orb
add
loopne
jnp
cmp
or
rorb
and
into
sbb
jnp
sub
shll
mov
jl
dec
pop
dec
lahf
or
xor
call
jo
xor
mov
cmp
or
jne
or
cmp
lcall
out
addr16
loopne
xor
jmp
sbb
add
add
ja
mov
xchg
inc
pop
clc
add
call
xlat
adc
addl
or
cmp
test
jmp
mov
pop
jmp
lea
mov
shl
add
lret
jle
outsl
add
mov
movsl
test
add
or
add
or
je
push
idivl
addr16
movl
add
mov
push
xchg
mov
mov
jp
sbb
xchg
test
sbbl
out
mov
ds
test
mull
mov
push
jne
dec
adc
mov
mov
leave
add
push
mov
xor
xor
out
arpl
pop
mov
test
adc
or
rcr
mov
push
lret
inc
adc
cwtl
mov
mov
jp
and
outsb
mov
inc
adc
enter
inc
dec
pop
jne
pushf
and
or
and
or
cli
mov
dec
adc
push
lcall
add
pop
out
popa
movsl
cmc
inc
push
lea
mov
add
sbb
or
or
lret
cmp
pop
sar
movsb
test
inc
popf
sarb
sub
inc
inc
sub
jle
push
je
cmp
lock
pop
aad
inc
imul
jmp
jmp
andl
movsl
inc
add
lods
inc
or
push
orl
movsl
mov
fwait
or
and
jne
adc
lods
inc
les
mov
dec
mov
mov
dec
fwait
push
xchg
pusha
inc
mov
xchg
mov
daa
cli
popa
movsb
cmp
stos
sub
fiaddl
lea
sbb
stos
xor
cmpb
push
call
add
adc
scas
mov
add
xor
sti
xor
je
popa
cli
cmc
xchg
or
inc
push
and
inc
loopne
jp
sub
fwait
sub
xchg
mov
mov
imul
add
fsubr
jl
fs
push
pusha
jecxz
jnp
jb
sub
add
ss
shrl
gs
pop
sbb
add
lahf
fsubp
daa
jp
and
jb
mov
dec
or
push
xchg
mov
lds
rorb
mov
es
pop
fildl
cmp
jno
dec
cmp
or
or
test
sbbb
data16
dec
out
add
sub
jge
push
sti
in
push
adc
mov
int3
cli
nop
cmc
inc
in
add
and
push
add
icebp
stc
cli
push
and
push
outsl
adc
es
pop
mov
mov
mov
mov
dec
adc
adc
es
ds
idivl
xchg
cwtl
int3
sbb
pushf
mov
ret
sub
jl
adc
loope
loopne
or
cmp
push
jae
loop
push
fadds
and
add
jo
mov
mov
lods
push
or
xchg
xchg
xchg
adc
ss
outsb
sub
dec
dec
dec
dec
xor
cmp
fimull
inc
pushf
pushf
pushf
fmull
dec
dec
push
push
daa
daa
pop
pushf
pop
add
daa
daa
daa
push
and
daa
js
fs
negb
sbb
mov
nop
xchg
dec
es
fs
pushf
mov
movsb
test
xchg
dec
xor
rol
fwait
or
sarb
dec
fcomp
loopne
xchg
dec
xor
call
leave
aam
hlt
clc
fldt
leave
and
jb
add
or
or
or
leave
mov
xor
adc
xchg
dec
sbb
and
xchg
dec
xor
sub
xchg
dec
xor
xor
cmp
orl
cltd
fimull
push
pop
lcall
xor
frstor
pop
cmp
and
cmp
ficoml
filds
or
cltd
nop
data16
xor
mov
mov
xor
pop
inc
mov
nop
and
adc
and
imul
sbb
inc
lcall
cltd
nop
sub
cmp
cmp
inc
imul
inc
dec
inc
lcall
mov
push
cmp
test
dec
imul
shll
xchg
and
add
int3
add
in
outsl
sarb
mov
push
leave
outsl
pop
inc
and
pop
lret
mov
and
imul
jle
add
add
and
call
adc
inc
or
rorb
aaa
cmp
jmp
adcl
adc
addb
or
outsl
in
fildll
sbb
iret
mov
dec
mov
loope
ret
or
xor
and
fcoms
pop
adc
sub
pushl
loopne
scas
add
pop
sbb
addb
je
insb
imul
sarb
dec
cli
adc
test
fidivrs
ret
lock
or
es
add
adc
fdivl
mov
orl
rcl
jnp
daa
lea
sbb
add
adc
gs
xor
mov
jb
xchg
adc
clc
bound
push
sbb
xor
xchg
mov
lock
out
cmp
xor
fisttpl
enter
cmp
or
xor
push
lea
jecxz
and
push
mov
add
sar
mov
fisubrs
cmp
repnz
add
push
push
notl
xchg
lea
clc
cmp
mov
xchg
add
punpckhdq
lds
sarl
cmp
sbb
imul
mov
jle
cmpsb
lods
pop
xlat
push
and
call
lods
imul
cmp
pop
pusha
jbe
ret
or
xor
popf
push
ds
push
lcall
dec
jbe
and
sbb
mov
adc
cmp
or
or
fs
lcall
in
mov
mov
mov
inc
pusha
stos
cmc
stos
sbb
fadd
push
jmp
and
mov
pop
xchg
sub
add
mov
jge
xchg
lods
push
test
sbb
add
add
dec
sub
jge
jmp
les
outsb
adc
cmp
dec
hlt
push
sbb
inc
push
mov
imul
cmp
enter
inc
mov
test
inc
push
fildl
dec
or
jns
and
inc
fs
add
fidivl
mov
jo
fnsave
mov
test
pushl
add
rcr
push
or
add
mov
test
dec
call
add
add
movzwl
inc
add
push
sbb
rol
repnz
out
clc
add
repz
push
jmp
stos
js
cmpsl
pop
push
pop
cmp
dec
iret
pusha
loop
lahf
test
or
rcr
push
mov
xchg
and
add
hlt
pop
hlt
ja
fisttps
cmp
fimull
add
inc
mov
sbb
rorb
xor
cmp
cmpb
ds
inc
shll
add
xchg
lret
pop
adc
mov
cmp
mov
mov
cli
or
shufps
inc
mov
jo
adc
or
sub
xchg
lock
outsb
and
and
sbb
mov
cmp
pusha
add
mov
sub
es
xor
insb
pushl
push
test
movsl
pop
clc
inc
or
jbe
fs
pop
xor
push
xor
inc
push
adc
fiadds
into
jg
pusha
pusha
xor
add
cmp
test
test
sub
sbb
and
or
and
add
mov
movsl
sub
mov
jnp
mov
hlt
leave
adc
xchg
fnstenv
or
test
popf
test
rclb
pop
cli
push
jmp
mov
sub
pop
into
adc
movsl
push
cmp
fdivrs
fisubrs
stos
mov
dec
xor
js
mov
lock
jo
lret
jmp
inc
mov
xor
and
adc
mov
xchg
aas
push
nop
out
shlb
adc
fucom
loope
cmpsl
sub
dec
mov
insb
adc
clc
push
je
negb
add
stos
mov
aas
cmp
jno
xchg
cwtl
inc
or
pop
inc
xor
cmp
mov
inc
and
sbb
js
in
cmp
jmp
add
mov
push
loope
ret
jne
imul
test
mov
and
sub
or
repz
movsbl
dec
stos
mov
and
push
xchg
test
cmpsb
mov
sub
sbb
and
pop
test
ret
xchg
fnsetpm(287
js
jl
clc
stos
mov
inc
mov
dec
push
inc
lcall
dec
or
sbb
inc
call
sbb
xor
mov
and
mov
adc
and
aaa
sbb
int
jne
dec
adc
fidivs
pop
xchg
or
test
inc
outsb
push
pusha
ret
mov
adc
popf
push
push
cmc
mov
add
push
push
mov
mov
and
mov
inc
inc
mov
into
ret
add
add
jl
inc
xor
icebp
repz
push
pop
inc
js
mov
stc
add
pop
outsb
and
xchg
add
idivb
fsubs
into
push
jecxz
mov
mov
xor
xchg
pushl
pop
and
mov
cmp
mov
sub
fistl
fisubl
dec
leave
inc
or
or
int3
inc
movsl
push
sub
push
mov
adc
and
dec
pop
inc
sbb
or
push
gs
cmpsb
mov
cmp
out
outsl
add
mov
into
mov
int3
movsl
stc
loopne
and
mov
dec
pop
sub
loop
cmp
adc
adc
add
adc
mov
or
push
xor
and
jbe
and
sbb
xchg
pop
jg
loop
push
pop
pop
testb
in
movsl
cmpsb
cmp
test
xchg
pop
xchg
xor
add
and
je
mov
hlt
cwtl
test
jnp
mov
pop
xor
frstor
xor
or
bound
cwtl
lock
mov
jbe
test
and
inc
mov
jmp
cmp
mov
pop
je
inc
cmp
shlb
das
jp
aam
inc
add
js
pop
sbb
cmpsl
lods
outsb
addl
jmp
adc
je
sub
pusha
loope
or
adc
add
scas
lock
aas
push
scas
fs
mov
addb
lret
jmp
and
mov
es
pop
adc
dec
scas
push
clc
mov
inc
jmp
imul
jecxz
mov
mov
enter
add
push
test
cmp
mov
cld
xlat
sbb
dec
cmp
and
pop
add
cmp
sbbb
cmp
movsb
add
in
insl
sbb
movsb
add
loopne
inc
sbb
or
sub
cmp
or
out
mov
add
mov
mov
cmp
push
addr16
lahf
and
addl
push
xor
imul
insb
ljmp
dec
or
jbe
jge
sbb
add
or
js
scas
mov
cmp
test
or
mov
repnz
in
lret
pop
in
sar
xlat
xchg
sub
stos
push
mov
or
pop
xchg
xchg
adc
mov
fsubrp
inc
cmp
fdivrl
clc
adc
shlb
xor
sub
sub
test
push
loope
adc
out
test
push
and
jb
or
mov
pop
cmp
and
rolb
xor
mov
negb
fcompl
daa
cli
and
out
jne
mov
imul
and
shll
mov
cli
or
jg
fisttpll
inc
les
ljmp
hlt
stos
out
rorl
adc
or
imull
ret
xor
push
pop
stos
test
pop
cmp
shlb
xchg
push
jne
add
aaa
aam
push
and
sub
aam
es
lret
inc
repnz
sbb
fdivs
and
sub
cs
xor
jle
dec
dec
dec
rclb
jmp
add
scas
inc
sahf
xchg
adc
jo
sbbl
sub
mov
orl
inc
adc
fildll
adc
adc
xchg
adc
cwtl
mov
add
call
add
sub
or
bound
rorb
orl
sahf
push
mov
rorb
push
push
imull
add
or
and
dec
inc
repnz
sub
sbb
mov
sbbb
cmp
add
pop
or
xor
lea
or
dec
cmp
int3
in
ds
add
mov
mov
popl
fs
sbb
inc
add
outsb
mull
mov
movb
aaa
in
sbb
aad
pop
adc
push
or
roll
pop
inc
mov
mov
add
dec
and
pushl
add
or
sub
rclb
loop
ljmp
imulb
cmp
loopne
push
sbb
cmp
out
loope
sbb
and
push
ss
mov
xchg
enter
or
adc
push
mov
out
or
sbb
jae
mov
popa
jecxz
sbb
popl
mov
push
push
lock
lret
and
jle
enter
cmp
inc
mov
pop
jns
jo
pop
jbe
loope
push
push
ret
shlb
mov
sbb
in
pop
js
shll
xor
or
jle
push
lahf
subl
pop
cmpsb
cmc
popa
sbb
push
or
mov
repz
and
ret
cs
fadds
and
cmp
or
mov
push
and
fistl
xor
adc
or
pushf
sbb
or
jmp
xchg
fucomi
add
and
cmpsb
test
add
sbb
pop
nop
adc
fnclex
adc
test
data16
add
es
dec
fcomps
and
add
sub
jmp
jbe
incb
adc
fucomp
outsl
sbb
lock
and
mov
and
divb
jl
and
jecxz
sbb
lret
in
add
or
jg
push
adc
and
inc
shr
sub
aaa
jge
std
insb
insb
ja
pusha
and
push
sbb
and
pop
adc
mov
pusha
loope
pop
sub
xor
and
cmpsb
adc
jecxz
pop
fstp
lock
pusha
fldl
cmp
daa
hlt
call
mov
xchg
or
inc
testb
in
mov
or
add
mov
out
test
xor
add
into
roll
lock
das
call
dec
jne
orl
and
jo
xor
stos
je
testl
ficompl
inc
daa
xchg
pop
xchg
jb
cmc
pop
imul
jmp
push
and
or
xchg
inc
flds
fstps
movsl
lea
or
pop
loope
inc
loopne
popa
mov
or
sahf
hlt
adc
in
or
adc
repnz
mov
push
mov
cli
cmp
dec
inc
add
imul
and
xor
test
cmp
sbb
mov
dec
inc
pop
pop
dec
lock
xor
fldz
mov
std
sub
fcompl
fnstsw
fldl
jne
jg
dec
jmp
sub
sub
jmp
sbb
leave
subl
adc
fwait
shr
psubusw
sarb
popl
pop
push
scas
add
xchg
mov
das
inc
mov
xchg
cmp
clc
mov
mov
dec
cli
std
and
es
in
mov
fmull
test
call
mov
pop
adc
cli
repnz
push
push
sbbb
daa
loope
push
mov
test
mov
cli
shrl
cld
pop
orl
sbbb
loopne
push
jno
mov
pop
jmp
lock
roll
dec
ljmp
add
loopne
cmpsb
mov
xorb
out
pusha
pop
lea
or
pop
and
push
add
jnp
test
and
pop
shl
in
mov
jmp
adc
and
fcomi
xchg
adc
push
add
popf
mov
roll
shll
mov
and
je
dec
add
sub
sbb
add
mov
inc
jo
xchg
adc
sbbl
mov
incl
add
loope
xchg
sub
xchg
add
pop
fs
jmp
pop
fstpl
imul
push
add
add
fwait
jno
shlb
and
cmp
cmp
js
inc
or
inc
push
in
xor
adc
or
mov
into
insb
push
jo
xchg
loope
inc
imulb
pusha
std
adc
push
mov
mov
push
sbb
enter
and
mov
jle
jmp
sar
das
ficomps
imul
lods
ret
cmpb
arpl
bound
out
jmp
mov
push
xchg
or
fnstsw
jl
adc
lock
out
sbb
movl
movsl
sub
jo
dec
mov
inc
cmp
add
dec
inc
cld
adcl
sub
inc
jecxz
cld
xor
cmp
jb
or
mov
stos
ret
or
lock
or
sub
jne
imul
decb
mov
cmp
lock
pop
and
popa
out
loopne
jmp
dec
sbb
test
nop
pusha
push
aaa
or
rorl
fld
in
dec
rcl
ljmp
mov
lahf
mov
xor
test
cmpsl
push
dec
in
dec
pop
and
mov
sub
mov
add
or
or
cmpsb
imul
or
push
in
mov
out
aam
jne
pop
ret
jo
iret
sahf
inc
sbb
xor
push
and
in
fiaddl
sub
dec
pusha
pop
mov
push
push
inc
and
adc
imul
cmp
sbb
push
fstsw
movswl
add
mov
inc
fstps
push
cmp
popf
and
rorb
dec
xchg
mov
or
insl
or
and
rclb
dec
pop
or
sub
inc
sbb
fwait
test
cs
adc
sbb
maxps
sub
repnz
rcr
jle
movsb
fldpi
xor
pop
outsb
bound
arpl
add
xchg
fs
inc
je
sbb
inc
icebp
scas
xsaveopt
mov
add
mov
add
inc
dec
dec
andl
or
mov
adc
mov
push
mull
adc
jne
pop
jl
inc
jl
pop
add
lcall
inc
sub
jg
arpl
sbb
test
jb
lock
inc
adc
ss
daa
call
addb
neg
cmp
bound
es
in
mov
pop
cli
push
adc
add
add
sbb
sub
add
loopne
mov
adc
add
adcb
pop
or
insb
push
push
push
jp
outsb
je
push
mov
mov
cmp
test
jle
imul
insb
sbb
cmp
out
mov
mov
or
in
add
popa
ret
arpl
add
and
dec
mov
fs
pop
dec
inc
testb
add
or
or
lds
sbb
cmp
jnp
and
add
push
push
cltd
js
shl
push
push
jmp
lahf
mov
je
enter
or
add
and
xchg
push
or
mov
loope
shr
add
xchg
xchg
arpl
fadd
add
jle
adc
mov
enter
lock
out
and
adc
cmp
dec
int3
mov
fldcw
int3
dec
mov
push
or
dec
cld
jmp
add
add
jmp
aas
loopne
insb
in
adc
fildl
addb
test
pop
adc
out
jl
ss
outsl
imull
lock
stos
or
jp
push
stos
pop
pop
ljmp
jne
sub
movsl
add
dec
push
in
lds
adc
jg
or
jns
dec
or
inc
lea
xchg
mov
push
mov
loopne
ljmp
fiadds
notrack
loop
rolb
cmpl
cmovl
jmp
mov
fwait
sti
shll
dec
or
inc
insl
jae
fcoms
sub
hlt
jbe
dec
mov
add
cmp
cli
out
or
or
cmp
push
fcompl
dec
sub
inc
sbb
std
adc
cli
jb
dec
js
movsb
jae
fmull
push
adc
jns
hlt
add
push
pop
and
scas
push
jno
fdiv
jge
lea
sub
fwait
arpl
cwtl
je
inc
mov
xor
fisttpll
pushl
or
into
cmp
jg
ret
aam
in
xor
sbb
cmp
mov
movsl
cmovnp
adc
mov
shl
sub
sub
xchg
lret
notl
mov
xchg
jb
and
loop
mov
cmp
out
push
or
mov
sbb
fdivrs
popa
loop
mov
clc
pop
sub
outsb
mov
xchg
mov
mov
sbb
dec
jns
in
pop
cwtl
add
lea
adc
dec
lds
faddl
clc
push
sbb
push
add
mov
andl
inc
ds
xor
lcall
pusha
mov
adc
out
mov
inc
mov
pop
add
adc
jb
push
jae
ss
push
incb
pop
xor
jp
clc
mov
dec
jns
cmp
and
test
cmc
hlt
push
aas
or
loopne
or
mov
dec
shll
bound
movsb
sub
icebp
xor
cmp
push
loopne
push
ret
arpl
pop
stos
rclb
add
xchg
xorl
ret
daa
andl
imul
mov
lea
out
and
lea
pop
mov
inc
lcall
rorl
hlt
dec
adc
or
lods
shll
rcrb
xchg
or
fidivl
or
aad
test
mov
lret
iret
insl
jmp
and
jne
mov
mov
mov
fadds
mov
dec
mov
sti
pop
rolb
inc
les
jl
mov
jmp
mov
mov
xor
mov
leave
enter
xor
adc
jnp,pn
push
dec
inc
nop
adc
cmpsb
imul
pushf
mov
cmpsl
mov
cmp
jne
call
add
push
lods
mov
cmp
or
dec
or
incb
inc
jmp
push
mov
cs
cmp
ja
shrb
jp
lea
cmp
ja
sub
adc
pop
dec
lcall
mov
push
inc
scas
cmpsb
add
sub
je
push
or
imul
jmp
mov
mov
adc
jmp
mov
jb
test
stos
popf
fmuls
lcall
std
push
adc
mov
das
cwtl
cmp
jle
sub
push
sarl
and
or
cmp
jbe
lss
test
xchg
lods
outsl
mov
pop
xchg
cmp
jmp
cwtl
sbb
rol
jae
mov
ret
mov
shlb
hlt
jmp
adc
cmp
mov
mov
fdivs
nop
add
jne
in
ds
dec
jae
imul
sbb
adc
cmp
loopne
or
and
outsb
mov
rclb
bound
repnz
sub
out
sub
xchg
or
dec
cwtl
notb
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
mov
add
xorb
shl
pushl
mov
shll
test
arpl
push
pusha
nop
mov
mov
subb
cmp
adc
mov
aaa
fdivrp
inc
testl
and
inc
jmp
out
add
mov
dec
or
mov
clc
add
repnz
dec
fisubrs
mov
rolb
jg
jmp
mov
or
sub
xor
sbb
dec
mov
dec
ret
adc
mov
fisttpll
jl
add
aam
xor
mov
xor
cwtl
jge
testl
mov
movsb
sub
cmp
out
clc
cmp
mov
pop
lock
jp
cmp
pushf
fsubr
in
mulb
inc
add
xor
jne
adc
and
lds
addb
movb
les
cmpsb
push
mov
mov
sbbl
push
pop
cmp
jb
clc
jge
mov
cmpb
mov
popa
add
pusha
jl
xor
sti
pop
jp
pop
xor
mov
roll
scas
mov
jne
inc
leave
cmp
jae
fidivrl
std
mov
lret
or
mov
or
adc
push
xchg
js
jne
inc
testl
ret
cmp
mov
les
mov
add
jne
inc
or
add
mov
int3
pop
push
hlt
int3
add
pop
dec
xchg
inc
sbb
or
mov
shrb
push
pushf
mov
negb
add
test
mov
and
call
xchg
sub
add
repnz
popf
cmpsl
inc
xor
mov
ja
loope
dec
mov
sbb
subl
lcall
pushf
sub
sbb
adc
cmp
roll
rorb
xor
mov
mov
aam
gs
and
pop
add
lock
mov
ret
inc
xor
sahf
pop
mov
lret
mov
adc
inc
mov
nop
shrl
add
not
ret
mov
in
je
sub
push
fcom
insl
fadd
loopne
shr
or
mov
xor
xor
jne
outsb
mov
xor
fs
mov
ja
push
xor
sub
jne
fisubl
cmp
xor
add
fisubrl
mov
mov
pop
xchg
inc
ljmp
jmp
jnp
push
dec
fisubrl
xchg
orb
jb
stos
mov
adc
mov
mov
jl
dec
add
mov
dec
or
daa
mov
dec
lret
into
jmp
out
insl
xorl
and
mov
mov
or
loop
fistpl
xorb
lret
das
jo
ficomps
xchg
add
negb
xchg
daa
sbb
movups
testb
mov
inc
mov
icebp
or
mov
add
xorb
add
pop
pop
mov
pop
or
inc
add
jno
iret
repz
mov
jae
push
rcl
cmp
push
push
stos
insl
lods
pop
cmp
ret
jbe
rolb
push
fld
int3
lds
mov
jne
push
jne
arpl
insb
js
sub
inc
jb,pn
xchg
xor
push
mov
mov
adc
or
repz
or
inc
lods
push
or
lock
stos
and
xchg
xchg
adc
inc
jge,pn
pop
jnp
cmc
or
ss
cmp
je
inc
adc
lods
or
out
mov
dec
cwtl
cli
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
pop
add
xor
ret
sbb
jp
pusha
les
mov
push
je
push
and
xchg
add
push
mov
and
adc
aaa
xor
mov
adc
add
push
dec
jmp
add
push
or
ror
xor
pop
jno
add
cmpsl
and
fwait
jmp
adcl
and
and
add
or
add
and
add
mov
push
pop
sbb
cld
hlt
sbb
lahf
inc
cmpl
and
jge
clc
add
lcall
fiadds
jne
movb
lea
loop
sbb
adcl
aaa
cmp
adc
or
cmp
add
ret
fsubl
push
add
mov
add
push
movsl
adc
mov
stos
xchg
loop
inc
mov
mov
push
add
jns
jecxz
or
movb
fs
pusha
dec
lret
or
dec
mov
cmp
or
add
cmpsb
hlt
data16
add
mov
stos
punpckhdq
mov
popa
xor
add
adc
add
push
jno
rcll
orb
lock
div
push
aam
jmp
sbb
dec
pusha
icebp
mov
loopne
cld
or
sbb
ret
jmp
call
jmp
adcl
xchg
jge
xchg
sub
adc
mov
xchg
insl
ffreep
push
add
shlb
enter
test
xchg
sbb
loopne
and
sbb
xchg
push
add
sbb
addl
pop
or
fadd
jl
loop
mov
es
dec
test
jge
adc
inc
addr16
and
cmp
jbe
or
inc
push
aaa
or
mov
enter
fiadds
or
adc
and
and
adc
movsb
shll
lret
ret
loope
adc
imul
insl
lea
ds
sub
xchg
mov
xchg
pop
adc
loop
test
adc
add
sub
xchg
sbb
test
enter
js
call
bound
mov
dec
and
fdiv
mov
leave
and
add
insb
movb
pusha
addr16
xchg
add
mov
fiaddl
neg
sbb
movsl
mov
and
mov
pop
aas
jp
jg
ret
daa
xor
or
jne
bound
xor
push
dec
jo
ljmp
mov
push
in
sub
inc
sbb
pop
jl
inc
xor
jle
dec
xor
xchg
test
ret
add
xchg
xchg
cmpsl
or
add
mov
ja
popa
inc
mov
imul
xor
add
xor
adc
jp
push
clc
popf
pusha
call
and
pop
lea
jmp
or
xor
shl
add
cmp
ret
mov
cld
add
hlt
invd
add
xor
bound
sbb
outsl
inc
jge
sbb
clc
jp
mov
jo
or
mov
xor
out
cld
test
adc
cmp
cmp
or
rorl
xchg
push
push
outsb
push
ljmp
pop
cmp
rcr
lock
or
jo
jmp
in
and
xchg
sbb
js
jg
pushf
mul
imul
sub
loop
or
mov
cmp
sarl
cmp
shll
push
push
adc
sub
xor
sbb
ljmp
jg
mov
push
pop
mov
cmp
scas
mov
or
or
movsl
test
scas
xor
rcrl
in
adc
lods
ja
dec
fstl
loope
mov
cmp
movsl
and
push
sbb
add
movw
cmpsb
inc
adc
fimull
push
jle
pop
faddl
ss
rcrb
push
inc
adc
sahf
ljmp
fs
enter
es
call
addr16
or
ret
aaa
sub
xchg
mov
push
lods
inc
sarl
push
mov
push
cmp
insb
add
andb
je
add
and
jbe
pop
add
into
shll
rorb
mov
push
sbb
stc
cmp
pop
iret
addl
enter
jne
push
cmp
js
nop
or
or
push
xchg
fsubrs
dec
sub
xor
testl
push
push
push
sub
inc
push
push
sbb
jmp
pushf
cmp
sub
loopne
jge
inc
or
cmpb
stc
mov
push
add
in
adc
cmpsl
popf
jmp
xor
ds
fnstcw
clc
gs
or
pop
add
test
test
jbe
sbb
scas
lods
or
xchg
inc
popa
je
mov
ss
je
dec
fucomi
xor
mov
jmp
pop
and
popf
sbb
or
or
xchg
or
mov
loopne
sub
or
adc
pop
xchg
ror
pop
cmp
xorl
popa
and
xchg
pop
mov
subl
push
imul
lret
je
into
dec
scas
push
xor
sub
hlt
jmp
push
mov
mov
fst
xor
pop
orl
je
fwait
xchg
jmp
ret
sbb
daa
cmp
sbb
jp
insl
add
les
repz
andl
loopne
or
mov
or
jecxz
and
or
lods
adc
jae
cmovns
push
outsl
push
sbb
cmp
cmp
and
dec
fcomp
jge
ss
rcll
push
loope
shll
cmp
int3
inc
sub
xor
xorl
pop
fcoms
ss
jo
xor
add
dec
test
push
add
or
and
shll
loop
in
add
aam
insb
mov
sbb
adcb
sbb
jge
cmp
mov
xor
add
sbb
clc
sbb
adc
pop
sub
push
add
call
sub
push
add
mov
xor
inc
lea
inc
jmp
pop
add
and
add
and
mov
or
and
and
jne
test
cmp
sbb
jl
les
or
pop
xorl
dec
insb
sbb
pop
mov
sbb
jo
mov
xor
pop
leave
sbb
mov
inc
adc
pop
jmp
adc
fdivp
or
jl
testl
shl
mov
jmp
enter
sub
push
fcompl
jge
jp
cmp
jge
or
cmp
out
add
sbb
mov
adc
push
or
shll
pop
popa
xchg
out
test
das
jecxz
ret
add
jmp
add
fs
sbb
adc
push
mov
adc
push
lock
mov
int
leave
ficoms
ret
add
scas
adc
or
outsb
and
sub
and
fistpl
test
loopne
sahf
adc
push
inc
pop
loope
pop
pushl
cmp
lea
cs
xor
add
pop
or
push
sub
in
test
xchg
inc
add
mov
and
sub
dec
jo
jmp
jmp
push
lock
inc
adc
sub
add
jmp
pushf
or
cmp
mov
stc
or
cmpsb
pop
xchg
push
cs
arpl
or
push
lret
push
pop
and
std
xchg
mov
jecxz
jg
sti
arpl
mov
dec
cld
jg
mov
push
push
shlb
and
jo
mov
lock
mov
enter
cld
fld
add
mov
das
jecxz
into
cmp
ss
push
or
cmp
xor
or
or
mov
xchg
icebp
lret
or
mov
pop
loopne
pop
movb
jo
mov
icebp
add
insl
sti
adc
mov
xchg
mov
cmpl
arpl
push
cmp
addb
dec
push
mov
data16
mov
dec
or
imul
pop
mov
mov
dec
movb
inc
sarb
xchg
sbbb
push
push
enter
pushl
sbb
test
mov
pop
jmp
cmp
add
and
mov
ficomps
sub
je
icebp
inc
adc
mov
jne
stos
pop
aam
mov
mov
cmp
popl
lods
pop
xor
incl
adc
lds
je
push
add
cmovae
xor
call
or
mov
sbb
and
sahf
ss
daa
push
or
adc
or
cmp
stos
adcl
or
fdivrs
cmp
cmp
rcrb
insl
mov
mov
mov
push
push
mov
insl
pop
inc
add
aaa
dec
movsb
lods
mov
and
std
adc
cmp
into
push
std
add
xor
repz
jmp
hlt
push
push
sarb
insl
insb
mov
sbb
jne
mov
xor
xlat
add
mov
scas
inc
mov
mov
test
hlt
inc
je
test
nop
add
data16
addb
sbb
lret
out
and
fldcw
add
fldl
out
pop
add
or
inc
add
jle
xchg
inc
out
pop
or
mov
push
push
clc
push
call
nop
jb
fbld
lret
add
mov
sbb
mov
adc
add
jmp
mov
jb
xchg
jp
push
cmp
xchg
jbe
or
movsl
pop
inc
jl
in
sbb
cmp
adc
dec
pop
add
pusha
inc
pop
dec
sub
and
loopne
inc
fisttpl
cmp
mov
xor
bound
mov
adc
xor
lret
mov
orb
add
mov
cli
push
or
cmp
or
or
inc
add
dec
fadds
cld
dec
mov
and
xchg
mov
or
scas
mov
mov
andl
mov
adc
xor
mov
shl
pusha
fdivrl
add
fsts
test
dec
xor
dec
push
mov
add
or
mov
shll
stos
push
shll
or
mov
ret
cmc
test
add
and
push
adc
or
jbe
gs
mov
in
push
inc
fstl
insl
pslld
aam
negb
add
or
call
enter
xchg
sbb
nop
jbe
ds
call
ss
and
push
and
sub
adc
pop
or
stos
lods
add
out
in
mov
scas
add
adc
inc
and
push
inc
dec
sub
dec
pusha
xchg
rorb
inc
cli
sbb
mov
mov
xchg
jmp
adcl
and
cmp
je
incb
xor
add
push
xor
clc
or
gs
sub
or
sub
add
push
insl
fistl
mov
and
push
je
mov
ds
mov
pushf
and
clc
push
inc
cmp
je
mov
rolb
jmp
push
rcl
add
ret
dec
jne
outsb
je
std
scas
outsl
adc
inc
dec
add
push
into
mov
adc
shl
or
or
pop
or
mov
and
loop
clc
inc
shll
lea
jbe
sahf
mov
je
mov
dec
jne
cmp
pop
add
xor
add
rcl
cmp
pop
pop
repnz
test
adc
loop
orb
cld
inc
movsw
xor
imul
inc
pop
inc
loop
add
dec
sub
add
and
fs
push
ret
inc
lcall
jecxz
push
xor
in
adcl
adc
add
sbb
addb
add
insb
cwtl
lret
add
adc
loopne
add
pop
jmp
adcl
mov
inc
jae
or
jae
lods
rorb
jg
loopne
ljmp
call
enter
add
and
icebp
idivl
jo
je
sbb
js
ret
xor
ret
sbb
dec
or
cs
popa
push
aad
add
shll
jecxz
jl
mov
inc
es
cmp
mov
or
sub
pop
dec
dec
movsb
sbb
pushf
push
push
inc
pop
or
jmp
testb
cmp
clc
dec
add
js
addr16
xor
cmpsb
lret
xor
add
loopne
or
inc
lock
aad
dec
fs
mov
mov
lahf
bound
sbb
pop
lret
test
test
sbb
pop
adc
inc
adc
inc
inc
add
and
inc
enter
fiaddl
movsl
pop
inc
sub
sub
xor
dec
call
sub
or
push
mov
and
sbb
stos
cmp
in
in
or
jb
daa
data16
adc
inc
or
dec
mov
xor
xor
es
or
cld
or
mov
je
and
jns
das
adc
cmp
jb
cmp
ja
add
cmp
adc
mov
cmp
sub
shll
leave
call
scas
mov
mov
shr
cltd
addl
inc
in
mov
add
or
or
cmovbe
clc
lahf
sub
add
jle
inc
flds
push
mov
lock
insb
mov
enter
xchg
and
cmp
outsb
hlt
jl
cmp
jb
push
or
add
or
idivb
dec
shlb
pop
add
sbb
dec
repz
sbb
add
in
rorl
je
dec
fistpl
call
cmp
je
add
test
lcall
sar
mov
cmp
jb
cmp
jbe
mov
xor
fs
out
push
xchg
adcl
pop
and
add
test
lea
fsubrl
or
aam
sbb
movb
mov
and
sbb
adc
fnstsw
sarl
dec
dec
in
dec
inc
add
or
inc
imul
mov
inc
mov
and
push
mov
sbb
xchg
je
and
ret
js
and
fmuls
and
enter
add
push
cmpsl
xor
shrb
pushf
xchg
out
outsl
push
shll
shll
loopne
xor
push
pop
loop
imul
push
jne
ss
jae
movb
mov
jnp
jno
or
mov
aam
lea
fisubs
fsubr
addb
add
inc
add
add
ja
data16
or
add
add
lcall
cs
outsl
ljmp
popf
and
cs
gs
mov
push
inc
jno
rolb
sahf
cmpsb
divb
lea
test
adc
loope
mov
loope
aaa
pop
in
sarb
adc
sbb
sub
call
add
push
ret
mov
cmp
dec
dec
sbb
xchg
rorb
cmpsb
inc
pusha
cmp
sbb
pop
add
add
loopne
or
and
mov
outsl
jecxz
gs
sbb
pusha
in
je
in
push
push
test
push
clc
fidivrl
movsl
test
sbb
mov
jp
in
je
mov
sti
dec
push
mov
cmp
add
add
adc
sbb
push
push
ret
rorb
sub
enter
into
adc
js
es
sti
sbb
inc
dec
mov
es
iret
jae
fmuls
loopne
cmpsb
loopne
jmp
dec
or
lods
jo
and
add
pushf
inc
ss
mov
mull
outsl
jae
ja
subb
adc
pop
enter
or
mov
scas
push
sbb
inc
insl
cwtl
push
dec
inc
inc
test
sub
jns
adc
cltd
xor
hlt
add
faddl
loop
sub
sbb
mov
cmp
hlt
jmp
cmp
pcmpeqb
mov
sub
inc
hlt
and
and
push
pop
cmp
je
dec
mov
stos
add
mov
test
mov
sbb
adc
push
and
push
inc
inc
test
data16
popf
fmuls
fdivrs
aas
cmp
sub
mov
and
add
aam
or
cmc
pop
inc
xor
mov
or
sub
movl
inc
jmp
dec
add
pop
es
add
mov
es
mov
or
push
fdivs
test
mov
mov
xor
jo
xor
xchg
mov
pop
and
sub
push
out
pop
push
andb
sbb
add
push
in
pop
pop
pop
push
mov
sbb
cmp
ss
inc
mov
fldcw
adc
sar
fcmovb
call
inc
imul
sbb
decl
test
or
mov
in
add
push
mov
mov
pop
xchg
neg
adc
push
ljmp
or
cmp
lret
mov
cwtl
inc
jnp
inc
movb
jbe
lret
mov
addr16
cwtl
jne
lds
push
mov
adc
mov
push
adc
ljmp
mov
jle
repnz
insl
xor
shll
add
or
mov
icebp
pop
rcr
test
and
and
bound
inc
xor
pop
andl
in
inc
mov
ja
ret
decl
loopne
sub
inc
sahf
xchg
call
lods
cld
and
adc
inc
inc
xchg
or
jo
popa
mov
and
add
xchg
rolb
das
rolb
add
dec
or
sub
out
lcall
xchg
js
movsb
dec
push
ror
andl
lea
ret
movsb
sbb
les
pusha
rcrl
xchg
mov
mov
and
mov
jns
rorb
xchg
jle
cmp
bound
shll
inc
fstps
xchg
shr
or
and
int3
mov
or
pop
push
push
lret
int
nop
test
inc
adc
fisubrl
mov
push
lods
xchg
shr
mov
insl
std
and
test
pop
shr
or
mov
dec
mov
test
jnp
xchg
dec
and
test
repnz
sub
push
testb
dec
cli
cli
inc
cli
xchg
test
jns
repnz
dec
inc
ret
add
dec
call
sub
cli
adc
insb
xchg
lahf
jl
fcmovb
ret
inc
fimull
out
test
loopne
xor
xor
jbe
and
jg
or
cmpsb
mov
dec
rolb
pop
xor
mov
xchg
add
stos
lds
mov
dec
or
or
pushw
sbb
inc
shll
jge
shlb
lea
xchg
rorb
inc
cmp
stos
sub
daa
adc
es
fmuls
mov
mov
and
dec
inc
shlb
fdivrs
pop
nop
add
dec
xchg
popf
nop
and
jge
cwtl
cmp
adc
shlb
dec
dec
push
xor
mov
or
or
mov
cwtl
lret
fcmovu
mov
mov
insl
test
cmpsb
arpl
cli
mov
sub
xchg
add
iret
idiv
adc
popf
adc
jg
or
jb
pop
dec
and
nop
das
test
or
or
sbb
popa
es
inc
lock
repnz
and
add
sub
xchg
fnsetpm(287
dec
add
inc
loopne
or
add
pusha
mov
pop
test
xor
ret
fs
std
mov
ret
jle
jo
sbb
movb
fbld
sub
adc
sbb
incb
pusha
fsts
sub
add
jbe
in
in
scas
xchg
mov
repnz
mov
inc
inc
rcrl
js
fcoms
xor
fiadds
fldl
insl
call
je
mov
adc
loopne
fadds
dec
jbe
lods
lea
push
and
mov
push
in
jne
adc
push
fbld
cmp
cli
add
inc
jmp
lock
fcmovnb
aam
into
or
or
dec
xchg
push
sbb
je
inc
fldenv
inc
js
adc
push
bound
mov
jae
add
mov
lret
call
cli
pop
xor
add
add
into
or
mov
inc
lock
or
in
sbbb
ret
hlt
mov
sub
jge
sub
cmpb
or
pop
pop
push
lock
dec
cmp
push
jb
mov
add
add
fadds
ja
mov
sbb
mov
jp
jne
dec
mov
test
mov
fmull
cs
in
or
cmpsb
loop
mov
dec
and
add
push
pop
mov
or
ret
adc
or
add
add
dec
movsl
test
and
nop
jp
mov
lcall
adc
dec
fnsave
and
inc
or
rclb
aad
fisubrl
iret
or
adc
add
rcrl
xchg
add
pop
jne
or
add
ja
push
pop
scas
je,pt
push
int3
fs
shlb
and
sub
ret
adc
push
sub
add
fimuls
mov
test
lret
push
sahf
orl
pop
cmp
xor
into
pusha
sub
mov
pop
sub
and
pop
pop
sbb
sub
rcrb
dec
prefetch
or
mov
or
push
mov
pusha
pop
push
pop
cld
fadds
adc
cmpsb
rclb
or
or
add
loopne
xchg
and
movsl
push
or
test
or
pop
aam
push
je
xchg
or
pop
ja
pusha
adc
xlat
push
pop
inc
shll
insl
add
adc
jl
mov
jmp
add
test
xadd
cwtl
icebp
add
ret
or
mov
popa
fcoms
dec
adc
loop
xchg
adc
nop
clc
mov
cmp
adc
je
jnp
or
push
xor
push
scas
orl
and
mov
xchg
xchg
mov
mov
out
adc
loopne
or
pop
sete
scas
pop
jo
movsb
jge
pop
repnz
test
adc
lcall
add
push
into
mov
mov
inc
and
sub
and
sbb
inc
in
in
jg
into
into
into
push
inc
test
dec
inc
pop
js
ja
sub
push
pop
nop
pop
js
xor
pop
mov
scas
add
not
and
or
sbb
dec
test
add
push
fs
test
arpl
pop
lcall
add
leave
lahf
pop
out
mov
jecxz
ret
movsb
lahf
jo
sub
stos
inc
test
mov
mov
ret
cltd
and
popf
ret
cwtl
sbb
push
jmp
mov
dec
dec
sub
mov
lret
mov
mov
jo
xor
pop
xor
and
mov
add
add
cmp
adc
shrb
movsl
adc
repnz
sti
je
inc
inc
ret
push
add
clc
addr16
xchg
or
or
mov
push
fwait
jo
dec
add
add
sbb
or
fucom
inc
dec
lret
add
or
add
inc
inc
add
mov
les
loopne
xor
add
cmpsl
test
icebp
inc
add
test
sti
fsubs
cmp
xchg
xchg
aad
jle
push
push
ja
push
ret
pop
push
jmp
movsb
or
mov
and
shll
push
sbb
or
mov
shr
mov
push
loop
mov
xchg
push
addb
ja
adc
pop
jmp
cmpb
xlat
xchg
xor
popa
sahf
xchg
add
push
inc
orb
mov
loope
jns
cmp
sarb
push
sbb
movsb
sbb
ss
rcr
mov
es
mov
sbb
cmp
pop
movsbl
xor
int
test
push
push
ss
cmpsl
in
mov
inc
adc
and
push
cld
ret
mov
scas
dec
repnz
roll
add
out
xor
mov
add
jbe
stc
sbb
sar
insl
push
dec
lea
push
fsubrl
aam
xchg
and
push
cmp
loopne
ds
push
in
push
aas
popf
loop
loopne
add
add
mov
cmc
pop
cmp
enter
dec
cmp
mov
push
rolb
loopne,pn
into
movb
pop
clc
or
xor
iret
jbe
adcb
inc
cmpl
or
popf
sbb
jb
mov
mov
lods
cmp
pop
inc
lods
or
mov
push
pushf
shl
loop
push
or
push
shl
push
cli
push
loope
push
push
or
dec
or
jno
test
push
sub
dec
adc
jg
shl
enter
push
pop
les
lcall
mov
or
push
adc
test
xor
enter
aam
sarl
dec
shlb
pop
adc
push
inc
cmp
push
push
or
test
pusha
insb
call
faddl
or
iret
cwtl
push
or
or
add
pop
or
cmp
lret
std
or
mov
add
lods
or
mov
std
aas
and
mov
mov
addr16
lea
cmp
jle
push
mov
adc
lahf
in
xor
pop
push
push
pop
xor
pop
arpl
jo
cmp
clc
sbb
jb
ficoms
inc
idivl
mov
mov
cmp
inc
mov
or
mov
int
jl
sbb
sbb
adc
push
push
gs
in
or
clc
scas
mov
outsl
mov
leave
lret
call
jge
inc
add
or
movl
and
sahf
fcmovnb
jge
aaa
mov
mov
sub
adc
sbb
xorb
xor
jbe
fnstcw
sub
cld
popf
ss
sbb
stos
adc
dec
sti
nop
adc
jo
sub
cli
add
cmp
sub
rorb
clc
dec
ja
dec
inc
add
ja
and
sbb
movsl
rol
add
in
movsb
lods
mov
push
add
add
in
in
push
pop
or
sti
in
or
jnp
or
jbe
jmp
jae
jae
or
por
jmp
jae
jae
adc
pop
adc
push
adc
dec
adc
dec
jae
jae
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
jae
jae
jmp
push
jmp
pop
jmp
rolb
jmp
sub
and
and
and
sets
pop
ja
notl
inc
lahf
or
repz
clc
dec
cs
ss
repz
inc
dec
push
pop
data16
cmp
repz
jnp
test
xchg
cltd
sahf
mov
test
mov
mov
cmp
lret
rcl
cmp
repz
jmp
push
sbbl
add
add
push
pop
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
add
add
int3
mov
dec
ljmp
push
xor
rcrb
int3
enter
dec
push
mov
test
add
or
jne
call
push
xchg
mov
cmpsb
daa
mov
inc
movsl
push
ret
call
jbe
push
push
jmp
mov
and
cmp
insl
sbb
push
sbb
and
push
inc
add
sbb
jge
push
push
pushf
movsb
rorb
mov
mov
push
lods
cmp
add
pop
nop
push
movb
add
push
and
and
adc
mov
ret
gs
xchg
pusha
add
and
sbb
add
sub
jo
movsb
push
add
mov
or
rolb
ss
mov
addr16
test
in
push
push
push
jl
push
push
lods
push
jp
and
stos
hlt
loopne
call
push
push
dec
jbe
sbbb
rolb
xchg
cmp
ljmp
lcall
outsl
cmpl
mov
push
and
cmpsb
jp
test
ret
mov
ror
cmp
pop
mov
bound
push
jmp
or
mov
jl
cmp
inc
aam
in
or
sub
sbb
jl
sbb
or
mov
jb
push
adc
mov
or
jbe
mov
leave
jns
inc
cmp
mov
cmp
lods
xchg
adc
ret
jge
negl
xorb
repnz
dec
or
jo
je
repnz
sub
les
cmp
jne
and
mov
out
push
add
push
xor
mov
xor
inc
loopne
mov
ret
lods
jae
into
add
in
ljmp
pop
mov
add
push
mov
cmp
lea
cmp
mov
sbb
mov
inc
hlt
dec
shrl
jle
in
loopne
pusha
imul
push
inc
ret
aaa
dec
dec
xorb
movsb
add
mov
xchg
std
popl
cld
mov
mov
movsl
push
mov
cltd
movsb
and
enter
stos
add
jmp
nop
rorb
and
cmp
add
adc
insb
mov
ret
mov
mov
mov
or
mov
mov
pop
les
mov
test
dec
or
sbb
push
stc
xor
and
add
xchg
inc
dec
aam
push
mov
mov
add
pop
movl
xor
lock
mov
pop
or
add
xor
push
xchg
xchg
push
outsl
ret
push
mov
call
or
jne
sbb
mov
xchg
pop
xchg
push
in
add
cmp
add
sbb
es
enter
movsb
lock
xchg
sub
enter
xor
sub
adc
mov
mov
sbbl
and
mov
pop
and
sub
test
mov
pop
pop
xchg
mov
cwtl
pop
mov
push
mov
call
stos
mov
mov
push
push
nop
pop
jo
pop
and
push
dec
dec
dec
cmp
std
test
push
cmp
jae
dec
loop
mov
add
dec
hlt
xchg
push
fmull
jmp
test
jns
je
arpl
ds
loop
loopne
andb
jmp
push
movsb
or
sbb
loopne
inc
mov
xor
cmp
pushf
pop
testl
mov
cmp
test
dec
and
jl
cmp
shrl
fidivl
test
dec
push
add
pop
adc
aad
rclb
sbbl
lcall
test
xchg
stos
rcl
cmp
rclb
insb
scas
and
cmp
fiadds
sbb
dec
add
test
pop
leave
dec
adc
in
mov
aad
cli
sub
push
sti
lods
pop
arpl
xor
push
pop
fistl
and
add
dec
pop
xchg
push
cmp
fnstcw
add
and
cmpsb
add
xor
sbb
arpl
popf
loop
cmpb
jne
xchg
in
test
cmpl
sub
mov
popa
call
add
xchg
or
sub
rorl
outsb
cmc
inc
sbbb
jno
jno
push
rcr
add
imul
inc
xchg
mov
mov
add
pop
or
and
push
ret
cmpb
sub
jl
push
fwait
add
pslld
cmp
hlt
sub
inc
clc
or
add
ret
pop
adc
jnp
and
push
add
add
insb
in
mov
cmp
xchg
fwait
mov
xor
adc
clc
add
jl
jmp
xor
movsb
andb
jge
sbb
inc
je
push
test
push
sbb
rcrb
xor
jmp
into
js
fs
and
mov
mov
dec
lock
ja
add
cmpl
in
xchg
mov
cltd
loop
adcb
aas
add
addr16
movsb
shl
cmp
cs
mov
outsl
add
mov
inc
pop
es
push
mulb
les
sub
mov
fcmovnb
pop
push
jb
mov
push
or
daa
jp
add
jno,pt
xor
add
adc
adc
ret
jmp
dec
xchg
mov
jmp
test
mov
int3
mov
ret
add
rorl
pushf
pop
jle
inc
daa
sbb
dec
pushf
pushf
or
inc
xor
fisttpl
dec
shl
scas
filds
sub
test
or
mov
dec
sbb
jo
jns
fwait
add
lret
add
push
loopne
mov
sbb
rolb
sbb
xchg
sub
addr16
pop
and
or
insb
outsl
sub
pop
add
mov
lods
jne
ret
fldenv
jne
fisubs
es
add
push
iret
mov
add
ja
adc
and
mov
add
fdivrl
push
adc
pop
fdivrs
mov
shrb
call
dec
notb
ljmp
ret
fcoms
or
add
shr
and
cli
inc
jl
or
sbb
popa
jp
dec
sub
jle
xor
add
add
inc
jmp
xor
cs
mov
les
cli
orl
loopne
data16
dec
loopne
mul
cs
push
adc
test
and
or
push
mov
pop
jmp
std
sub
sbb
jg
sbb
les
outsl
jo
pop
inc
pop
mov
loopne
imul
and
int
or
dec
xor
scas
jb
mov
add
push
pop
push
sub
jg
pop
dec
je
add
es
pushf
adc
xor
inc
sbb
enter
lahf
xor
mov
push
push
mov
adc
or
or
and
js
out
jg
stos
aam
aad
push
insb
and
sub
dec
sub
rorb
imul
cmp
jne
repz
fcmove
push
outsb
jl
cmpsb
mov
sbb
mov
das
add
push
mov
xor
dec
cmc
inc
subl
and
sub
or
cmp
repz
add
imul
divps
pusha
inc
add
xchg
cmp
pop
sbb
xor
testb
pusha
enter
push
push
ds
daa
and
or
and
and
movlps
ss
push
mov
lret
pop
daa
jns
push
mov
in
cld
nop
ja
or
sbb
adc
or
or
stc
lock
sub
or
jns
jecxz
sbb
ret
repnz
bnd
sahf
add
sbb
pushf
in
subps
push
imul
push
sbb
cmp
pop
mov
mov
xchg
daa
jno
repnz
repnz
or
xchg
lods
sbb
pop
push
or
mov
pop
mov
daa
sahf
loopne
in
dec
ficoms
or
xchg
xchg
add
inc
cmp
popf
ja
and
in
add
in
fs
push
xchg
cmp
push
mov
rdmsr
add
paddw
jl
imul
fisttps
dec
sahf
sbb
cld
js
rcll
enter
fmull
jmp
and
rdtsc
sbb
das
adc
incb
and
mov
or
leave
pop
int
jns
cwtl
push
jmp
or
repz
inc
push
bound
cmp
repz
jns
out
pop
adc
xor
jns
push
data16
cltd
stos
jns
out
mov
repz
repz
xor
leave
repz
gs
cwtl
mov
test
leave
inc
dec
xor
add
and
dec
js
xchg
mov
sub
mov
cmp
mov
mov
sub
mov
pop
and
mov
pushf
sbb
or
insb
in
das
lea
push
dec
add
mov
cmp
cmp
ja
jnp
rclb
outsl
in
push
add
scas
mov
pusha
or
dec
idivl
push
push
add
aad
ret
jge
sub
cltd
movsl
dec
xor
pop
add
pop
arpl
mov
push
notl
subb
adc
pop
pop
dec
cmp
call
movsl
or
cs
insl
dec
es
mov
ret
sub
sub
lods
aad
es
mov
and
inc
sbb
mov
nop
call
dec
mov
cmpsl
add
insl
loope
jns
pop
dec
fcomps
dec
xchg
in
inc
push
push
adc
add
loopne
fsubrp
lcall
addl
jns
dec
push
insb
and
lods
std
test
je
in
cmp
jne
inc
mov
shrl
adc
pop
out
sbb
jle
jmp
leave
shll
adc
xchg
jl
rdmsr
xor
add
mov
mov
xchg
loope
arpl
mov
pop
stc
test
xchg
mov
fdivr
daa
jmp
pop
pop
add
nop
dec
push
push
out
push
dec
and
adc
pop
js
push
and
jb
cvtps2pi
ret
adc
mov
inc
orl
mov
pusha
pop
out
scas
push
lods
or
data16
push
mov
inc
push
jns
dec
iret
mov
pusha
add
mov
in
sbb
jmp
scas
mov
jl
or
stos
jae
rolb
insb
add
pop
xchg
scas
mov
pop
loop
in
mov
push
inc
push
cmp
cmp
daa
add
add
fdivs
or
jne
test
dec
push
cmp
xor
adc
push
cli
sbb
pop
push
rcrb
or
add
or
je
movsb
lea
mov
setns
pop
fidivs
loope
xor
sub
or
or
cmp
inc
sub
int
or
add
jns
mov
ja
insb
push
jbe
or
fisttpll
rclb
notb
push
cmp
sbb
sbb
dec
aas
insb
add
addl
fiaddl
push
and
adc
cmpsb
push
sub
iret
imul
cmp
pop
cld
add
jns
aam
add
stc
shlb
sub
fs
movsb
xchg
jno
aas
push
pop
lcall
mov
bound
xor
imul
sub
imul
movsl
sbb
mov
pop
xor
adc
add
add
icebp
jmp
xchg
pop
pop
add
bound
subb
loopne
push
pop
and
sub
repz
mov
push
mov
gs
sbb
mov
add
adc
dec
jle
adc
jo
xchg
cmp
jge
leave
into
jle
gs
into
lea
dec
add
and
add
adc
orb
mov
sarb
dec
mov
lock
imul
call
xor
mov
pusha
mov
in
prefetchwt1
or
mov
push
lock
xor
fsubs
fsubl
in
in
lret
fcoms
mov
xor
mov
push
push
cmp
sub
ret
pop
pop
or
inc
or
xchg
pop
cmp
enter
rolb
out
push
mov
push
jne
or
cs
imul
aam
into
push
int3
push
cmp
jb
es
or
push
shrb
dec
es
adc
inc
or
cmp
gs
nopl
cltd
or
sbb
push
pop
pop
int
pushf
push
pop
sbb
div
cmp
mov
jb
ss
adc
adc
fs
sahf
adc
loopne
and
jge
test
test
test
cltd
add
sbb
pop
ret
adcb
sub
jne
cmpsl
je
inc
xor
push
rorb
mov
gs
pusha
popa
dec
scas
cmp
xchg
into
iret
adc
es
pop
orb
push
insb
sbb
jl
push
fsubrl
lret
or
cmp
mov
add
xchg
je,pt
dec
mov
or
ss
cmp
cs
stc
movsl
jmp
or
mov
sbb
dec
arpl
add
jne
imul
das
in
repz
xchg
mov
ret
xchg
sub
fdivrs
jmp
push
pop
pop
repnz
adc
or
push
add
sbb
or
das
mov
push
jp
jns
or
aad
or
aad
fsubp
add
mov
add
adc
pushw
pop
push
inc
mov
das
cmpl
jno
scas
dec
dec
mov
lods
push
push
sbb
pop
cmp
fldz
jb
sarb
pop
inc
cmp
sub
push
push
fadds
add
or
jo
pop
flds
ja
fildll
sbb
inc
adc
add
mov
test
fwait
add
ret
and
inc
push
xor
add
sub
cmp
lock
js
push
jecxz
rcrb
add
aad
add
jmp
adcl
cmpsb
fdivrs
push
into
stos
jmp
push
push
pop
push
les
dec
cmp
mov
push
add
lcall
mov
jmp
inc
scas
arpl
dec
fs
int3
pop
mov
out
mov
push
mov
sbb
cmp
and
fcomp
push
ret
push
push
shlb
dec
rolb
xchg
scas
adc
les
ret
and
sarb
and
icebp
inc
jp
and
mov
jns
jb
adc
xchg
mov
mov
push
roll
adc
lcall
lea
inc
cwtl
outsl
scas
andl
mov
adc
sub
aaa
adc
xor
mov
or
xor
adcl
push
push
je,pt
mov
nop
xchg
xchg
pushaw
inc
lcall
mov
cmp
mov
dec
mov
shlb
mov
repnz
lret
loopne,pn
or
adc
cs
idivb
mov
mov
ja
push
push
lea
rorb
ret
daa
lods
testl
testb
add
xor
in
xchg
push
push
xor
inc
mov
inc
test
dec
push
out
movsb
dec
jo
cmp
sub
mov
imul
and
in
repnz
roll
pop
and
sbb
loopne
mov
loope
jp
lods
iret
mov
cs
add
aaa
leave
mov
pop
iret
jb
or
pop
pop
adc
movsl
lock
mov
js
cmp
movl
jne
push
stos
jno
flds
sub
fsubp
adc
aaa
mov
adc
inc
add
subl
pushf
or
add
idivb
push
shll
imul
arpl
jmp
add
and
and
pop
rolb
xchg
testb
outsb
je
sbb
pop
daa
adc
rcrl
push
adc
pop
mov
rolb
rolb
push
pop
leave
ja
jb
dec
adc
mov
xlat
mov
shl
pop
pop
push
push
pop
ror
and
arpl
xlat
mov
adc
or
leave
pop
and
dec
adc
jns
stc
mov
or
sbb
fdivl
sbb
jl
jne
sub
je
in
and
jo
sbb
jle
dec
cs
or
jnp
aam
fsubs
xchg
je
push
neg
or
in
xchg
hlt
pop
cld
and
adc
mov
push
xchg
sarl
nop
inc
lcall
repnz
xchg
testl
add
arpl
and
jb
enter
jbe
and
pop
pop
clc
enter
and
cmovs
jbe
daa
cmp
jb
shrb
sub
jns
xor
movd
sub
mov
push
pop
and
inc
es
mov
les
shrb
lock
cmp
or
sub
inc
js
xchg
inc
jne
ficompl
xchg
call
inc
fcom
lds
in
int3
sbb
add
outsl
jb
add
pop
jb
pop
sub
and
pop
jb
hlt
sbb
and
jb
adc
inc
and
pop
or
in
push
ss
sbb
push
in
push
xor
pop
inc
push
in
fs
pusha
mov
andb
gs
jmp
lret
push
in
out
mov
and
mov
jecxz
data16
mov
das
std
or
cld
xchg
orb
adc
dec
xor
cmp
test
pop
dec
repz
jo
in
adc
adc
add
stc
stos
ss
add
js
pushf
mov
pusha
pusha
pusha
lahf
jb
ss
cmp
scas
ljmp
divb
pushl
scas
fcomps
adc
adc
xchg
inc
xchg
lds
insb
inc
andb
daa
push
std
icebp
lock
xor
cmp
jbe
xchg
cmp
mov
and
pop
xor
add
orl
subb
out
add
clc
outsl
cmp
xchg
pop
and
dec
stc
inc
jmp
and
add
sahf
cs
out
rclb
add
mov
and
add
jnp
sahf
adc
add
mov
xor
xor
fwait
mov
arpl
add
pop
xchg
gs
pop
mov
add
testl
pop
adc
ret
leave
cmp
mov
xchg
xchg
or
inc
xchg
std
and
bound
mov
push
fwait
push
pop
add
cmpl
test
sbb
pop
or
and
pop
or
shrl
cmp
adc
or
sbb
push
push
hlt
mov
dec
push
cmp
repz
push
cli
ficomps
pop
mov
xchg
mov
loop
pushf
mov
scas
hlt
adcl
pop
pop
push
and
inc
xchg
xor
or
push
subb
push
lds
leave
ret
clc
outsb
cmp
lods
shll
add
fldcw
sub
in
jmp
mov
cpuid
adc
aaa
add
loop
xchg
xor
pop
test
sahf
mov
add
in
jmp
push
pop
cmp
sbb
pop
sbb
cs
movsb
pop
movsb
jecxz
add
mov
pop
add
sbb
adc
rorb
inc
and
shlb
inc
and
hlt
sahf
xchg
int3
push
leave
cmp
xor
loop
sti
push
movsb
and
xor
addr16
outsl
and
adc
scas
xor
ret
inc
pop
mov
insb
repz
mov
frstor
loopne
add
das
adc
mov
ja
dec
cmp
dec
jns
gs
jb
inc
hlt
jbe
rcrb
cs
jne
mov
dec
aad
dec
lods
or
jp
mov
pop
sub
xor
adc
adc
in
xrelease
cltd
sub
lods
and
test
lahf
pop
lahf
out
or
mov
lods
xor
adc
xchg
mov
sbb
add
xlat
mov
adc
in
push
push
in
xchg
lcall
add
out
push
adcl
push
rolb
lods
pop
int
adc
adc
sti
inc
call
pop
mov
bound
adc
aam
add
js
fld
mov
mov
mov
inc
out
push
sbb
ja
shlb
or
fdivs
cmpsl
in
push
add
cmpsl
jne
flds
ss
bound
rclb
sub
add
or
test
add
pop
fidivrs
adc
xchg
mov
aas
mov
rclb
out
push
fmul
les
inc
int3
out
ljmp
shrb
pop
push
inc
dec
cmp
or
dec
cmp
pop
cmp
inc
nop
out
inc
pushf
jno
sbb
cmp
outsl
inc
adc
movsb
mov
jo
adc
lds
sti
test
int3
hlt
arpl
cwtl
adc
add
pop
add
mov
enter
cs
sub
mov
ljmp
mov
add
xorb
push
push
aas
cmp
inc
jne
sub
jge
js
push
loopne
push
xchg
out
push
sbb
jl
cli
shlb
add
xor
add
xor
int
mov
test
or
cmp
pop
mov
iret
add
xchg
xor
leave
fcomp
outsb
mov
xor
imul
add
pop
insl
mov
loope
fwait
int3
and
lods
shl
inc
push
enter
xchg
lods
adc
adc
add
xor
and
repz
mov
fstps
dec
lea
mov
je
adc
xor
les
pop
in
popa
lock
fadds
mov
faddl
fiadds
cmp
sub
call
in
mov
leave
xcrypt-ecb
cmpsl
or
mov
lret
inc
jg
daa
pop
and
dec
call
das
push
xchg
inc
loop
sbb
and
xor
movlps
loope
add
aam
pop
xor
lock
pop
jns
fwait
adc
pop
add
minps
pop
mov
insl
dec
push
xchg
dec
in
xchg
cmp
or
mov
cltd
adcl
and
inc
cmp
nop
adc
mov
jmp
inc
add
subb
stos
jo
or
fisttpl
xchg
fcoms
xchg
add
sbb
imul
popa
mov
test
mov
stos
cmpl
sub
scas
dec
and
in
mov
js
inc
jl
mov
scas
jmp
fimull
shll
adc
cli
inc
je
test
test
adc
add
loope
push
or
push
and
dec
fs
or
or
xchg
pop
or
mov
lea
imul
fdiv
push
test
sub
or
xor
xchg
ja
inc
cmp
xor
cmp
sbb
ljmp
loope
sub
add
sbb
mov
daa
add
or
xor
push
push
je
mov
mov
movsb
inc
or
nop
add
pop
pop
das
push
sub
add
jbe
cwtl
subl
cld
adc
push
int
cld
scas
pusha
sbb
gs
push
cmpl
mov
xor
xor
mov
mov
js
cltd
dec
pop
xor
cwtl
adcb
mov
imul
sbb
out
pop
xchg
add
jns
js
pop
mov
add
test
les
push
sbb
push
pop
cmp
in
push
and
inc
ret
in
push
add
clc
mov
leave
sti
sbb
mov
js
add
dec
dec
pushf
sbb
lock
add
xchg
hlt
add
push
negb
aam
add
push
xlat
repnz
mov
adc
push
jb
adc
add
mov
lret
sbb
push
imul
je
sbb
pop
shlb
dec
mov
in
add
cs
push
inc
push
inc
or
jge
into
sbb
mov
mov
inc
adc
and
or
mov
call
test
pop
push
sub
xchg
lea
sub
sbb
and
push
push
nop
rorl
addb
call
pop
pop
sbb
adc
cmp
xchg
add
inc
sahf
pop
push
push
mov
xchg
jmp
fwait
test
into
stos
out
lock
insl
jns
add
call
add
jl
stc
sbb
mov
sub
adc
sbb
ret
sbb
rcl
mov
pop
and
mov
fildl
repz
into
xchg
or
arpl
idivb
cmp
add
sub
bound
xchg
js
or
int3
cltd
mov
sbb
in
sbb
pop
or
dec
sbb
test
or
call
push
jae
add
sbb
or
add
sub
mov
mov
rolb
sbb
jo
mov
mov
adc
test
imul
and
jp
stos
jo
xchg
push
push
inc
cmp
add
cld
adc
sub
jo
or
mov
and
xor
cmpl
rolb
in
ret
add
add
mov
cltd
mov
push
sbb
inc
or
adc
push
xchg
mov
add
dec
outsb
ds
add
addr16
inc
enter
iret
add
and
adc
shrb
sub
xchg
add
xor
out
xchg
xor
mov
jl
sub
dec
pushf
filds
mov
mov
jge
pop
pop
mov
cli
dec
fimull
cmp
dec
mov
sub
movsl
xorl
pop
out
lret
push
add
mov
nop
adc
ret
sub
and
jmp
add
push
mov
pop
or
rolb
sub
sub
xor
mov
fs
sub
xchg
mov
cmp
jge
add
lcall
loopne
adc
push
push
mov
pop
ss
push
dec
js
mov
orl
insb
add
les
add
push
and
add
fs
pavgb
rclw
das
jl
lock
aad
jb
sbbb
sbbb
flds
jmp
rclb
aam
or
push
insb
xchg
shrl
inc
add
push
jl
test
pop
add
test
xchg
inc
lock
push
push
imul
mov
loopne
adc
into
rorl
out
ja
enter
and
adc
mov
push
and
add
dec
out
adc
or
daa
pop
or
adc
sbb
sbb
jno
add
sbb
out
cmc
ret
and
pushf
adc
adc
add
ja
push
and
inc
test
and
adc
mov
mov
push
xor
rclb
aaa
xchg
pop
insl
stc
test
out
pop
and
sub
in
or
push
adcl
sbb
push
ror
or
enter
dec
pop
xlat
mov
push
mov
ds
call
pop
add
sbb
outsl
xor
lods
aaa
or
xor
pop
fwait
cmpsb
adc
sahf
add
push
nop
lahf
and
inc
adc
lret
add
lahf
inc
add
mov
or
test
jg
dec
and
js
loope
fnsave
pop
cltd
cmovno
cld
inc
push
push
push
or
sub
fistl
xchg
adc
push
xor
cld
ret
paddsb
fwait
insb
or
fldt
xor
popf
cli
inc
pop
push
mov
xorl
mov
push
call
shrb
add
imul
sub
bound
and
hlt
cwtl
pop
or
sbb
or
dec
lea
loopne
push
adc
sarb
call
call
sbb
cmp
adc
add
xor
adc
in
add
push
jle
push
jb
adc
add
jge
push
or
fimuls
xchg
dec
or
dec
stos
je
dec
mov
adc
aaa
in
inc
test
mov
xchg
daa
enter
sbb
push
push
jmp
cmp
out
inc
cmpb
mov
push
sbb
sbb
test
mov
sbb
and
adc
nop
or
adc
enter
loopne
rorl
push
xchg
cmp
push
xchg
add
leave
inc
mov
into
add
shlb
xchg
mov
leave
push
jb
dec
into
pop
leave
cmpsb
add
add
inc
dec
inc
dec
lahf
int3
push
dec
sbb
add
dec
pop
push
pop
pusha
mov
test
mov
in
mov
mov
push
aaa
push
lea
push
mov
push
adc
or
xchg
sbb
sbbl
xor
dec
add
add
call
xchg
mov
inc
sbb
jecxz,pn
jns
add
push
add
aad
and
push
mov
xor
mov
xchg
and
stos
mov
inc
xor
aaa
movl
push
pop
rcr
sub
pusha
or
stos
test
xchg
push
pop
jb
push
dec
sbbl
mov
pop
push
jns
mov
add
int3
iret
inc
mov
xchg
cmp
mov
dec
test
xor
push
cmc
cwtl
and
mov
and
fiaddl
test
push
push
mov
orl
pop
pop
cmc
and
or
add
fs
xchg
or
push
add
movsb
add
add
cwtl
push
decl
push
sbb
pusha
pop
enter
push
dec
jno
xchg
ja
mov
cwtl
dec
addl
pop
xchg
pop
aas
testl
xor
pop
sbb
movsl
pop
and
fsubrs
sbb
mov
jno
sbb
and
and
loope
ds
ss
pushf
mov
sbb
jmp
adc
jae
cmp
or
mulb
push
arpl
jl
popf
pop
inc
push
jb
ds
data16
pop
xor
arpl
add
insl
inc
adc
or
in
subl
pop
sbb
dec
pop
mov
jo
pop
les
mov
sub
sbb
mov
push
inc
cmp
out
mov
sub
sub
sub
mov
in
adc
sbb
xchg
pop
vcmppd
enter
lock
xor
inc
sbbl
pop
in
jmp
mov
pusha
xchg
jno
pop
rcll
cld
punpckhbw
sbb
into
xor
pop
pusha
or
or
mov
pop
nop
fmul
sbb
pop
jl
dec
mov
mov
dec
mov
push
cmp
sbb
popa
sbb
imul
call
add
and
enter
inc
push
sahf
dec
push
and
sub
push
mov
add
fcoml
mov
test
nop
add
mov
and
loope
lods
push
out
push
js
lock
test
cmp
ror
clc
pop
jne
call
shll
inc
add
lret
cltd
xchg
sbb
mov
mov
mov
add
sbbb
mov
sbb
sub
mov
mov
pop
popf
js
xorb
or
push
in
sti
scas
and
aaa
stos
fs
mov
sarb
jl
cwtl
sbb
pop
jns
push
push
mov
sub
push
shll
mov
daa
and
sub
addb
pusha
icebp
in
pop
adc
prefetch
xchg
and
imul
mov
and
push
xor
xlat
xor
lds
push
lret
int3
mov
add
test
imul
mov
push
dec
mov
xor
xchg
int3
out
cmp
ret
and
xchg
push
mov
lret
jne
sbb
and
fsubl
add
dec
or
inc
mov
test
sti
sub
xor
dec
mov
sbb
icebp
xor
icebp
and
je
mov
cmp
sub
sub
push
and
loope
push
sub
fdivl
fiaddl
pop
mov
pusha
loopne
sbb
pop
adc
sub
xor
je
pop
pop
or
pop
push
addb
pop
pop
imul
stc
mov
push
and
mov
add
or
jge
rep
and
adc
cmp
imul
pop
cld
xor
rol
mov
ror
xor
shr
xor
es
sbb
mov
inc
xadd
or
or
add
add
add
mov
pop
call
stos
into
in
push
testl
jg
int
mov
jge
mov
testl
jae
clc
push
data16
add
add
xor
fst
xor
js
or
xchg
or
imull
inc
fidivs
fisubl
pop
fsubl
repnz
xor
out
lret
or
xor
jle
pusha
push
fs
jl
mov
cmp
int
pop
xor
shr
repnz
push
inc
pop
add
or
into
repnz
add
call
xchg
xorb
movsl
xor
jb
fsubr
in
jb
add
push
out
lods
fs
mov
add
dec
rcll
popa
add
xor
ds
sub
loopne
call
test
in
push
inc
inc
push
lock
call
sub
bswap
ret
sbb
outsl
push
bound
push
popa
orb
fcoml
loopne
xor
movsb
imul
xchg
xchg
xchg
in
lock
inc
xor
sarl
cmp
dec
add
sub
repnz
or
pushf
xchg
cmp
mov
or
push
mov
inc
add
js
cmpsl
inc
fbld
decb
or
adc
jo
inc
andl
push
sti
push
push
inc
mov
sub
xor
mov
sbb
je
xchg
cmpsl
sbb
jo
sbb
mov
rolb
aam
cmp
aam
dec
addl
push
dec
xor
add
pop
sbb
xor
xchg
subl
and
push
repz
and
fs
inc
fs
stc
inc
rorb
and
push
mov
cmp
and
not
push
out
push
push
insb
push
add
add
cmpsb
call
fcomp
loopne
push
dec
mov
fmuls
and
sub
dec
roll
aam
jb
test
sbb
cmpsb
ss
es
test
lods
inc
aam
int
dec
xor
dec
jb
add
scas
mov
popa
mov
dec
inc
push
adcl
cltd
and
nop
data16
xchg
sub
nop
sbbb
cmp
xor
push
scas
push
mov
mov
inc
push
inc
lcall
nop
pop
pusha
lret
xchg
add
push
scas
or
inc
lcall
xchg
pop
pop
fs
out
add
push
and
and
pusha
lock
sub
rcl
insb
pop
scas
rorb
rolb
add
addb
aam
mov
sbbl
cmp
in
mov
mov
add
sarb
mov
jb
add
add
or
fisttpl
cmpsb
push
adc
sbb
add
sbb
xchg
test
and
and
and
roll
adc
sub
mov
inc
sbb
pop
pop
mov
mov
js
rclb
out
lea
or
pop
push
adc
xor
ret
sub
mov
push
push
add
shlb
mulb
mov
js
inc
cld
movsl
lods
pushf
rorb
out
mov
adc
jl
je
nop
or
and
std
cmp
jbe
or
lret
adc
sti
add
fimuls
outsb
cmp
jae
mov
pop
data16
sub
or
int3
fsubl
lods
ss
adc
or
mov
xor
leave
aam
or
xchg
or
ljmp
mov
mov
jb
aas
push
xchg
push
adcb
add
cli
push
ficoml
test
fdivrl
testl
inc
push
pop
jo
mov
or
sub
loopne
push
dec
add
sbb
sub
addb
push
or
lea
mov
jmp
dec
mov
ffreep
push
cmp
lods
jno
xchg
in
push
cld
push
mov
sub
xchg
or
dec
pop
jae
inc
sbb
dec
and
push
pusha
pop
mov
lods
es
or
push
enter
lret
pop
adcb
xor
push
movsb
ds
adc
push
mov
add
jns
push
dec
push
or
cmp
cmp
fadds
out
mov
stc
fcmovbe
es
adc
sub
and
dec
test
add
loop
jmp
and
scas
subb
push
or
mov
popa
and
add
iret
xlat
jno
or
mov
hlt
or
jge
xchg
mov
fnstenv
jno
xor
jecxz
push
or
xor
push
ljmp
fnstsw
inc
add
outsb
or
ljmp
jg
mov
mov
andb
and
adc
push
sub
cmp
pop
fcoms
movsb
mov
jo
shr
iret
lds
xor
lods
jmp
push
in
insl
inc
sbb
xor
inc
insb
outsb
sbb
imul
pusha
loop
jg
rorb
lds
or
popa
xor
dec
dec
rolb
add
jg
mov
mov
inc
in
cmp
pop
sbb
dec
mov
in
mov
xor
addl
fisttpl
mov
mov
mov
clc
xchg
push
test
or
je
addb
inc
push
scas
sub
mov
sar
push
sub
mov
xor
or
push
add
test
pop
ret
add
push
pop
push
dec
sbb
or
adc
cmpsb
hlt
inc
je
adc
cwtl
or
mov
pop
mov
mov
mov
pop
push
cmp
js
stos
adcl
or
sbbb
dec
addl
sbb
sbbb
lds
fwait
add
xor
xchg
and
inc
pop
insl
add
fbld
stc
orl
pusha
push
test
sbb
mov
cwtl
or
out
pop
call
jle
mov
enter
push
test
jbe
jbe
add
sub
shl
clc
out
mov
hlt
push
sbb
jle
mov
push
inc
pushf
and
arpl
test
icebp
sbb
or
jnp
movsl
pop
ja
ljmp
push
lods
and
jle
inc
inc
jg
mov
mov
ss
enter
pop
daa
clc
jbe
pop
gs
les
push
add
stos
add
out
jg
jo
int
adc
add
js
ret
addr16
lcall
shrb
addr16
dec
dec
mov
addr16
mov
sbb
mov
out
sahf
out
pop
pop
pusha
cs
pop
push
push
stc
sub
fs
mov
sub
push
or
push
cli
xlat
inc
jge
in
mov
or
or
jle
mov
push
add
push
mov
out
sbb
xchg
rorb
or
cmp
pop
xor
sbb
pop
iret
movsl
xor
inc
call
js
or
pusha
add
cli
dec
jl
xor
mov
push
insb
add
or
mov
sub
mov
addb
outsl
ficoml
push
xchg
push
ds
pop
iret
sbb
inc
sbb
mov
inc
inc
test
sbb
sbb
pop
xor
sbb
adc
cld
inc
ret
mov
and
push
push
or
popa
jg
jl
adc
push
cmp
mov
int
insb
ret
and
imul
xor
and
add
push
fisttps
ficomps
cs
sbb
inc
or
dec
push
testb
clc
pop
adc
pop
add
push
stos
add
sahf
and
inc
or
or
cltd
sbb
adc
cmp
orl
pusha
enter
push
ja
or
cmp
in
sub
test
pusha
cmpl
push
jmp
sbb
les
imul
in
inc
mov
popa
inc
dec
das
in
addl
loopne
pusha
pusha
push
xchg
mov
add
mov
and
xchg
or
loope
les
add
inc
add
mov
je
outsb
push
sbb
and
in
add
out
add
mov
xor
jle
shlb
sbb
fcoms
lods
dec
mov
cmpb
in
jbe
out
push
jge
lret
jo
sub
ret
xchg
or
dec
push
cmc
push
and
push
cmpsl
mov
sub
mov
and
mov
adc
bound
lahf
ficomps
ret
inc
inc
push
addl
fbstp
movzbl
xchg
adc
faddl
test
je
shr
add
and
inc
mov
jl
or
movsb
mov
inc
insb
lea
push
push
or
lock
push
push
or
push
mov
cmpsb
mov
cmp
ja
mov
jmp
or
cmpsb
aam
dec
add
sahf
fcomps
je
aad
mov
inc
sti
test
adc
mov
addl
jbe
xor
hlt
bnd
adc
add
cli
sbb
or
adc
inc
add
mov
push
mov
mov
mov
clc
or
in
outsb
or
paddusb
out
fistpll
mov
dec
cwtl
cli
hlt
jmp
pop
add
xor
lcall
cmpsb
dec
add
cmp
dec
sub
push
xor
sbb
pop
push
sub
inc
inc
outsl
push
popf
sub
les
xor
dec
inc
sub
or
add
sub
mov
jg
or
push
notl
cwtl
loopne
aas
movsb
shrb
nop
mov
jle
dec
sub
movsb
subl
adcb
or
push
sub
push
xlat
mov
mov
push
movsl
rcrl
or
and
ja
fldl
xor
fstpl
push
pushf
pusha
mov
or
add
inc
fcompl
mov
xchg
and
cmpsb
xchg
jle
push
adc
xchg
rcl
mov
and
push
push
inc
xchg
rolb
or
dec
xor
inc
pop
xor
lea
push
jns
ret
inc
mov
lret
or
mov
ret
inc
clc
or
pop
test
xchg
jmp
lock
adc
inc
push
push
cs
jbe
xchg
cmp
movsb
dec
sub
sub
sbb
xchg
sub
dec
into
jle
push
inc
adc
push
jno
popa
int
or
es
mov
or
or
mov
mov
into
inc
ret
lret
and
push
js
pushf
adc
pusha
inc
or
das
bound
mov
call
inc
jno
mov
and
aam
inc
inc
or
clc
mov
daa
pop
mov
push
push
or
ret
push
inc
aas
xor
rolb
ret
mov
adc
add
test
mov
das
mov
jl
test
pop
pushf
arpl
test
push
mov
dec
or
inc
or
dec
add
adc
sbb
mov
mov
ds
sub
stc
lea
or
jecxz
jno
pop
push
iret
test
add
iret
xchg
addb
cmp
mov
std
push
leave
push
test
sbb
sbb
jmp
adc
mov
sbb
jp
add
xchg
inc
adc
rolb
or
in
push
std
adc
cwtl
sub
xchg
mov
or
lods
push
dec
pop
xor
ret
and
mov
faddp
or
pushf
test
inc
pop
push
jl
sti
pop
inc
adc
cmp
mov
jg
dec
loop
push
bound
mov
idivl
ss
iret
pusha
or
ret
mov
push
mov
sahf
mov
popa
call
inc
ret
push
jno
jl
test
lahf
push
mov
adc
test
test
dec
pusha
add
cmp
add
stos
xor
dec
xor
sbb
add
add
lahf
fcoml
inc
iret
enter
xchg
sub
in
sbb
ljmp
add
fs
lea
loopne
push
dec
add
dec
sbb
lret
fnstenv
popf
push
or
jmp
push
ficoms
xchg
jbe
pop
add
push
leave
rcrl
psubb
loope
mov
sub
movsl
jb
or
xchg
sub
shlb
pop
and
es
inc
sbbl
xor
adc
xor
sub
mov
adc
imul
pop
pop
bound
xchg
ja
cmp
inc
std
in
xor
inc
subl
or
daa
push
xchg
mov
fcoml
add
in
gs
xchg
ja
fbld
or
divb
push
hlt
xchg
cmp
movsl
sub
andl
push
cmpb
xor
sbb
adc
call
pop
pop
pop
loopne
or
nop
add
push
adc
clc
xchg
in
subb
hlt
mov
loop
dec
lret
push
lods
lahf
ss
testb
cmc
in
mov
dec
or
gs
inc
lret
lods
leave
inc
repz
xor
lcall
cmp
pop
push
adc
loopne
add
rcrb
inc
dec
scas
mov
les
and
dec
inc
ljmp
mov
cld
ljmp
mov
or
cmp
filds
sub
or
or
jl
cltd
std
fidivs
call
add
fsubrl
sar
mov
cmp
xorb
test
fndisi(8087
or
and
mov
cmp
jge
jmp
add
inc
div
jo
shlb
mov
mov
push
es
push
pop
ret
sbb
dec
mov
je
cmp
jne
inc
inc
jmp
xor
jmp
inc
dec
jge
inc
jbe
jne
lock
gs
mov
adc
xor
inc
xchg
mov
mov
sub
cmpb
jbe
repnz
mov
inc
roll
arpl
push
add
in
xchg
adc
nop
imulb
rorl
dec
jmp
incb
add
test
xor
jns
or
push
or
sub
inc
fisttps
and
adc
push
or
mov
sub
add
jecxz
pop
mov
and
and
shlb
icebp
inc
mov
or
push
cld
inc
adc
movsb
add
nop
lock
ja
add
lock
jle
sbb
mov
ret
in
adc
cmp
mov
push
push
add
pop
inc
pop
add
push
xchg
adc
jo
jbe
sbb
fs
pop
scas
add
mov
adc
sub
test
jmp
aam
xchg
inc
xor
or
adc
fists
inc
cmpl
push
sbb
loop
sbb
and
and
inc
les
cmp
adc
add
jae
or
popa
inc
or
or
pop
adc
scas
lock
lds
add
lret
adc
jnp
mov
and
sbb
pop
mull
test
mov
sub
dec
lea
pushf
add
pop
add
in
jb
adc
push
mov
sbb
adc
subb
call
fdivs
mov
mov
dec
sbb
clc
pusha
and
js
sbb
push
cmpl
rcrl
sub
add
scas
pop
movl
sbb
add
nop
loopne
adc
pushf
lock
xchg
push
cmpb
faddl
dec
outsb
faddl
arpl
popf
sub
sub
rcll
and
pop
divl
xchg
cmp
mov
mov
push
or
or
fadd
mov
sub
js
fcoml
xchg
test
cwtl
push
push
pop
clc
lcall
loopne
xor
adc
push
inc
or
adc
lret
mov
push
push
xchg
sbb
cmpl
xchg
lock
mov
add
jb
sbb
es
in
std
loopne
inc
inc
shrb
add
sti
mov
push
dec
rclb
lret
jge
push
add
or
xchg
dec
push
mov
lcall
sarl
test
jno
daa
push
push
cmpsl
dec
and
repnz
js,pn
push
or
inc
push
jl
and
jmp
xchg
xchg
lods
imul
inc
add
and
add
mov
jge
fdivrl
out
or
movsl
out
or
into
ret
pop
lret
loope
shll
adc
pop
pop
imul
mov
cmp
lock
add
push
push
inc
aaa
sbbl
inc
lea
push
inc
dec
add
mov
jmp
sbb
cmp
jge
push
jbe
sbb
mov
push
pop
rcrl
xchg
cs
sahf
add
adc
cmp
lods
in
call
mov
aad
xor
lock
cmp
fmul
mov
sub
dec
sahf
out
fsubrl
add
add
xor
pop
fstl
in
mov
fsubs
dec
pusha
xor
movsl
pop
xor
faddl
mov
ja
es
xlat
rorb
xor
push
jl
dec
and
push
pop
lea
adc
adc
ret
pop
testb
xlat
cwtl
faddl
data16
rcll
add
in
push
enter
adc
loopne
push
lods
push
push
test
mov
sbb
nop
sub
lgdtl
inc
mov
and
loopne
add
or
das
inc
add
or
insb
sub
addl
jbe
add
inc
imul
push
push
les
shlb
rcrl
jmp
fcomps
sub
push
sbb
stos
or
cmc
ret
or
stos
and
jp
gs
dec
data16
addl
ret
mov
cmp
push
pop
fldl
jo
ljmp
aas
leave
push
mov
push
jg
sub
sub
in
lcall
adc
sub
lock
add
pmulhw
xchg
push
and
in
xor
push
adc
or
dec
dec
movsl
sbb
sub
xchg
icebp
ret
mov
in
jg
cs
adc
mov
jns
adc
hlt
stc
jmp
lea
push
pop
jo
mov
lea
dec
push
sar
lea
cmpl
xor
sub
sbb
add
test
and
cmc
add
iret
push
dec
and
pop
lock
mov
pop
inc
in
pop
pop
dec
inc
or
mov
mov
and
xchg
pop
or
dec
js
pop
dec
xchg
dec
cmp
mov
pushf
cs
jmp
sub
std
add
mov
sbb
or
mov
and
mov
xor
pop
js
xor
clc
add
adc
xchg
lods
add
and
pusha
mov
add
lea
lock
jnp
sub
add
fnsave
xchg
jmp
mov
mov
push
inc
xchg
inc
imulb
imul
push
dec
es
sub
mull
pop
sbb
lea
xchg
pusha
lock
into
out
inc
pop
out
sbb
dec
mov
fcmovne
pushf
cltd
in
lods
das
mov
or
add
xor
pop
in
jmp
cltd
push
loop
and
add
push
movsb
cld
push
lods
or
imulb
or
jo
adc
popf
mov
mov
xchg
nop
daa
ja
dec
lea
sbb
iret
les
lahf
pop
or
loopne
or
xchg
outsl
or
lret
dec
or
pop
sbb
dec
adc
movsl
add
inc
mov
mov
lock
insb
or
mov
mov
inc
enter
test
xor
pop
pusha
inc
orl
inc
or
lock
inc
add
jge
in
outsl
dec
pop
push
sahf
test
andb
mov
sarb
xor
lret
inc
mov
std
mov
push
test
push
mov
sbb
sub
in
inc
and
xor
add
lcall
popa
lds
add
push
push
mov
or
lcall
sub
fadds
or
and
nop
mov
dec
push
sub
xchg
les
dec
arpl
inc
stos
inc
int3
in
ret
mov
or
dec
adc
popf
and
mov
lds
lods
dec
mov
mov
movl
pushf
dec
int
or
imul
push
and
in
mov
mov
enter
enter
pop
xor
cmpsb
mov
imul
push
daa
test
cli
push
int
mov
and
dec
push
sub
loope
popf
jne
adcb
push
dec
loop
outsb
xchg
jg
push
in
dec
sub
pop
xchg
dec
and
xchg
dec
push
insl
addl
ftst
fadd
push
sub
fmull
push
std
es
fistpl
mov
hlt
aad
test
rcrl
mov
je
xchg
cmpsl
sub
add
in
fiadds
mov
dec
add
mov
adc
clc
xor
notl
andl
mov
aas
dec
fsubrs
inc
ret
sbb
cmp
push
jbe
rcll
adc
mov
sbb
out
or
jmp
cmp
add
loop
out
cli
das
mov
out
push
sbb
rcr
cmp
xor
push
dec
or
adc
in
fbld
lea
cmp
ja
push
xor
add
insb
orb
ljmp
sub
dec
mov
lea
mov
inc
dec
out
mov
adc
dec
inc
jo
push
lcall
dec
jo
idivb
mov
test
sbb
sub
lock
xor
pop
dec
arpl
cmp
mov
and
jno
sbb
call
adc
dec
sub
mov
pop
jae
and
pop
stos
pop
or
lock
mov
sub
dec
add
xchg
pusha
and
insl
lods
xchg
cmpl
inc
rorb
je
or
leave
or
and
adc
push
rorl
mov
jo
cmpsl
cmp
mov
xchg
xor
and
lahf
or
push
int3
cld
jecxz
lock
add
add
nop
test
cmp
cmp
clc
and
dec
jl
adc
jne
call
test
cmpb
fldt
lock
sbb
jmp
and
xor
push
scas
mov
ret
call
pushf
ret
xchg
in
enter
and
in
and
and
or
push
ret
adc
shl
loopne
or
add
mov
cwtl
dec
lcall
add
int
ljmp
stos
js
xchg
popa
fdivl
mov
ljmp
or
sub
push
das
cltd
xchg
out
push
fcompl
push
sub
dec
push
andl
sub
pop
xchg
add
push
cmp
add
aaa
or
sub
cmp
xchg
sbb
cmpl
dec
cwtl
push
mov
clc
fisubrs
cmp
adcl
and
test
add
sbbb
and
or
adc
pop
es
add
call
lret
lods
js
ljmp
and
add
lods
sub
xor
decl
pop
sbb
pop
xor
mov
add
add
sbb
push
into
push
mov
adc
push
inc
push
mov
ret
les
js
add
test
sahf
scas
mov
sub
mov
inc
lea
mov
and
aas
mov
lods
xor
lcall
inc
inc
push
test
les
int3
rol
xor
test
inc
sub
xchg
push
mov
dec
jo
push
dec
sbb
add
repz
sbb
xor
pop
sbb
push
add
sbb
or
sbb
leave
sbb
push
dec
mov
inc
mov
adc
mov
pop
int
int
incl
add
add
ja
add
in
mov
stc
dec
xchg
push
sahf
pop
adc
je
into
inc
push
cld
and
sub
sub
je
js
pop
xor
push
shl
imul
xorl
push
enter
mov
or
push
sbb
push
push
sub
test
mov
sub
push
es
dec
ficoms
xor
push
inc
lea
insl
cmpsb
mov
lds
sahf
jl
mov
mov
and
fsub
fcomip
or
movzwl
and
cwtl
popa
mov
push
mov
pop
mov
rorb
sub
xor
pop
popf
sub
adc
xor
fs
daa
stc
pop
mov
add
sbb
and
mov
add
sbb
sbb
les
mov
cmp
pop
add
shlb
or
aaa
or
cmp
cmp
lea
loope
outsl
loop
push
std
push
adc
clc
or
faddl
xchg
and
call
xlat
daa
mov
jmp
cmp
fs
add
sbb
xor
rorb
jae
aad
movsl
and
sbb
idivl
inc
sbb
add
mov
jns
in
mov
mov
js
sbb
cmp
sbb
mov
aaa
test
sbb
addr16
sub
jnp
xor
push
mov
xchg
push
mov
dec
cltd
loopne
sub
in
rolb
aam
mov
dec
xor
rolb
pop
push
xchg
jp
inc
subl
pop
fs
repz
pop
scas
es
jns
push
sti
sbb
imul
or
insb
sbb
aas
inc
xor
roll
pusha
js
aaa
test
sub
dec
push
sub
cmp
push
add
popa
cmp
sarl
mov
ret
clc
inc
mov
arpl
xor
jo
cmp
mov
sbb
and
aam
testb
push
xor
add
and
adc
int
adc
sbb
test
or
push
sbb
pop
jno
sarb
je
imul
xor
jmp
popa
iret
add
gs
into
adc
daa
push
or
xor
xchg
adc
shll
popa
sbb
and
mov
test
gs
lcall
pop
push
cmp
dec
popf
xor
push
les
jmp
mov
into
adc
cmp
pop
pop
cli
pop
and
sbb
mov
cld
je
sub
jnp
adc
xchg
add
das
add
mov
mov
stos
adc
dec
or
movsb
xor
mov
imul
fsubr
adc
cmp
mov
sbb
sub
add
ret
mov
cli
sbb
jmp
test
fldcw
mov
mov
or
shrb
dec
test
hlt
and
sub
pop
push
sub
jle
sub
push
lret
jne
pusha
icebp
lock
sub
mov
dec
test
inc
mov
loope
subb
loop
js
je
jb
mov
adc
xor
jecxz
jmp
adc
inc
sarb
mov
xchg
pushf
mov
aas
loopne
ds
stc
mov
dec
cmp
ficoml
stos
add
xorb
mov
sub
cwtl
add
movb
movsb
inc
hlt
nop
or
adc
inc
mov
inc
ret
jg
inc
adc
and
dec
and
jne
adc
cmp
xorl
ja
push
xchg
mov
loop
xor
pop
jecxz
loop
clc
scas
incb
adc
imul
cmpl
and
or
clc
fstps
mov
push
scas
loopne
add
xchg
sub
push
add
pop
add
sti
push
adc
add
mov
sub
add
mov
inc
ret
sbb
popl
mov
mov
fnsave
add
aam
rcrb
das
cmp
adc
sub
arpl
push
lcall
push
inc
push
or
cmp
test
rorb
in
nop
add
loope
daa
push
mov
adc
rol
mov
loope
and
xor
cltd
dec
lcall
popa
jns
mov
rcr
push
push
or
fsubrl
xor
or
lock
and
sahf
dec
pop
sbb
ss
cmp
es
fdivs
ret
js
in
and
movsb
rcrb
push
add
inc
cmp
gs
mov
add
add
ret
cmc
pop
xchg
rcl
adcb
push
lret
ds
bound
and
je
add
xchg
mov
push
adc
mov
pop
and
jnp
addb
xlat
stos
std
daa
lock
movsl
das
inc
mov
xor
cmpsl
stos
adc
lock
push
pop
adc
xchg
and
mov
mov
dec
insb
and
add
mov
xchg
rorl
mov
add
mov
imul
dec
push
icebp
mov
sarb
loope
sbb
mov
and
mov
sub
inc
ss
push
pop
js
adcb
sti
rolb
mov
push
sbb
gs
add
pop
inc
mov
bound
rcrl
mov
add
inc
leave
insl
or
mov
mov
inc
sub
ljmp
lret
int
leave
aad
dec
jmp
je
push
sbb
nop
mov
mov
add
fwait
sbb
dec
push
jg
mov
pop
fidivl
mov
cli
jb
push
mov
jg
lods
add
push
add
and
test
dec
push
push
cmp
add
cs
xor
sub
mov
inc
fnstenv
xor
or
ret
fists
clc
inc
add
xchg
mov
sub
gs
sub
jecxz
jge
push
mov
fcompl
pop
mov
push
rcll
loopne
sub
jnp
inc
inc
or
inc
cs
pop
and
add
jne
sti
mov
mov
rorb
dec
cmpb
pop
xchg
roll
inc
push
test
cmp
sbb
ret
add
ret
test
dec
xor
adcl
mov
loopne
inc
xor
and
test
mov
pop
stos
xor
xchg
enter
ljmp
push
xor
sub
push
sbb
and
inc
or
jns
and
xchg
in
xchg
mov
pop
sub
loope
mov
ljmp
cli
mov
add
and
or
adc
lea
cmp
or
mov
dec
xchg
inc
clc
add
push
fisttps
andl
push
shlb
dec
mov
push
sbb
lods
adc
adc
les
ret
pop
and
aad
inc
jmp
xor
mov
sub
cmpsb
push
loop
sub
push
push
addr16
push
push
insb
push
jo
sbb
arpl
and
es
add
inc
dec
push
clc
dec
movsb
cmp
mov
push
shrl
sbb
pop
push
rcll
push
push
or
je
adc
sub
push
and
mull
mov
scas
test
lods
xor
add
ds
mov
lcall
sbb
and
nop
xchg
mov
aam
adcl
push
push
jns
or
jo
cmp
pop
add
push
or
dec
or
mov
lahf
aam
mov
push
cmpsl
ret
scas
and
push
cltd
movsb
mov
shrb
call
sub
std
push
cli
cld
jmp
lock
or
sbb
push
fs
sbb
cmp
imul
out
jmp
sbb
data16
sbb
stc
xor
out
movsl
mov
push
add
mov
addb
shrl
scas
add
mov
pop
call
sbb
rolb
mov
lret
fldenv
lds
imul
mov
cmp
test
mov
fisttpll
mov
or
push
xchg
and
cltd
movsl
ret
jmp
sub
push
push
push
nop
lret
jne
push
push
adc
dec
or
mov
out
or
xor
xor
pop
dec
mov
pushf
mov
cmp
or
sbb
fs
rcll
lods
incl
adc
negb
push
jo
pop
out
pop
or
pop
xor
xor
dec
or
fs
rolb
pop
push
icebp
sbb
push
xor
jp
aaa
stos
pop
adc
inc
and
push
push
lods
xor
jmp
xor
mov
cwtl
loopne
cmp
mov
movsl
inc
sbb
xorb
bound
in
jno
or
and
and
repz
fs
pop
mov
mov
push
xchg
adc
sbb
insb
pop
sbb
inc
add
andb
or
movsl
add
push
pop
sub
inc
rorb
hlt
ret
push
ss
pushf
sub
in
adc
loope
iret
jb
daa
push
enter
mov
mov
and
mov
xchg
jae
cmp
sub
inc
mov
mov
lea
adc
adc
dec
inc
adc
pop
subl
add
or
pop
sbb
out
lret
push
dec
in
jg
imul
inc
jno
xlat
inc
sahf
inc
dec
pop
mov
mov
add
js
sub
or
movsb
push
movlps
movsb
add
aas
push
incl
mov
inc
data16
push
inc
loope
push
repnz
int3
jo
dec
cmp
fdivl
bound
out
push
push
sub
xchg
and
lret
pop
dec
push
lcall
in
movb
pop
add
push
mov
popf
das
lret
pop
imul
daa
jecxz
sub
and
cmp
outsl
sbb
push
jb
cmp
add
xlat
dec
mov
jge
decl
push
push
fadds
adc
push
mov
divl
gs
sub
push
cmpl
es
neg
fimuls
xchg
inc
loop
and
out
mov
in
loopne
xlat
jmp
inc
in
xchg
lock
stc
adc
push
out
inc
icebp
add
mov
add
push
or
ljmp
add
sub
test
pop
aaa
adc
inc
nop
out
jmp
cld
ret
and
push
inc
inc
jl
ds
dec
add
mov
fwait
aas
inc
loope
sbb
and
mov
xor
aas
sub
ds
scas
inc
inc
fwait
pop
xor
xchg
xchg
test
xchg
ficoml
icebp
in
pusha
add
lds
and
mov
dec
add
mov
mov
aam
rorb
push
and
je
lret
push
loope
xor
mov
and
jle
or
pop
sub
test
in
xchg
sbb
mov
dec
sub
cmp
dec
pop
cmpb
and
leave
lahf
dec
mov
rdmsr
jecxz
fmul
sub
pop
lret
loop
adc
rolb
xor
cmp
dec
lahf
add
dec
xor
add
lea
fwait
dec
inc
fimull
inc
adc
mov
sbbb
adc
les
pop
push
pop
fists
sub
pop
inc
push
cltd
in
bound
mov
jno
daa
or
add
sbb
cltd
pop
add
xlat
mov
inc
pop
mov
add
leave
lea
xor
pop
push
xchg
inc
push
movsl
sbb
cli
dec
jmp
das
jne
push
adc
add
push
ret
push
dec
sbb
pop
sub
sbbl
sub
shlb
ds
jmp
movsb
adc
lods
or
popa
pop
mov
inc
test
inc
dec
inc
adc
addb
mov
movsl
pop
dec
push
mov
mov
add
and
or
inc
orl
adc
jmp
push
loope
mov
loope
xchg
push
adc
mov
insb
mov
pusha
push
or
lcall
dec
or
lds
or
cmc
pop
dec
sub
insb
lea
push
imul
pop
jo
inc
and
repnz
push
pop
mov
and
push
add
xchg
mov
cmp
mov
or
inc
lahf
fs
pop
lods
in
and
xchg
add
in
xchg
ret
sbbb
or
loope
push
adc
loopne
inc
dec
pop
sbb
add
add
cmp
jp
adc
fcomp
xlat
push
aam
movsl
xchg
stos
test
test
adcb
pop
stos
cli
add
int3
push
movsl
push
cltd
mov
popf
xor
add
xor
push
cmp
pop
add
lret
and
add
mov
pop
add
ret
adc
or
sub
push
sbb
pop
add
cs
sbb
cmp
push
jb
mov
jge
add
sbb
sbb
shll
test
jae
add
jns
mov
inc
jns
add
mov
stos
dec
or
sbb
add
ret
mov
sub
rorl
xor
fs
sub
scas
xchg
xor
mov
js,pn
mov
inc
mov
mov
xchg
push
in
push
pop
push
popa
sti
dec
je
or
lret
dec
or
inc
pop
fndisi(8087
adc
jns
xor
iret
push
popf
sbb
lock
fs
into
or
add
in
add
bound
mov
xchg
or
out
dec
mov
push
push
add
inc
push
imul
dec
dec
push
nop
cmp
fwait
les
icebp
mov
sbb
pop
pop
and
sub
add
add
jbe
xchg
adc
push
or
mov
sahf
push
push
movsl
and
sub
push
arpl
push
sbb
mov
pusha
ss
dec
push
jge
cmpl
call
sub
fldenv
sub
and
das
sub
jge
data16
js
mov
sbbb
or
cmp
mov
mov
ret
clc
mov
inc
mov
in
cmpb
jne
call
jg
sbb
push
bound
push
and
mov
sub
adc
mov
int
cld
aaa
jno,pt
xor
jmp
push
lock
inc
pop
or
ljmp
mov
outsb
in
jge
sbb
sbb
outsb
xchg
pop
or
pop
push
movsl
icebp
and
sbb
je
lahf
addl
pop
mov
push
gs
adc
mov
or
inc
popf
dec
cmp
lret
lret
cmp
nop
sub
rolb
cwtl
push
adc
out
inc
pushf
fildl
push
shrb
iret
popa
daa
rcrb
test
add
sbb
fdivrs
xchg
mov
bound
mov
shl
dec
xchg
push
mov
add
in
jbe
mov
sahf
int3
jae
pop
leave
rol
sti
xor
in
bnd
stos
orb
in
xchg
cs
scas
jbe
dec
lock
aam
xchg
test
mov
mov
shrb
lds
lock
dec
sbb
push
mov
arpl
mov
add
push
dec
adc
rorl
lea
add
mov
mov
movsb
fimull
mov
and
outsb
cmpsb
das
sbb
in
dec
jge
adc
add
inc
and
push
mov
hlt
sub
pop
lods
or
xor
jg
xchg
imul
sbb
xor
pop
mov
jle
mov
sub
test
push
add
shll
push
fwait
out
dec
mov
mov
mov
aad
xchg
test
add
xlat
mov
rclb
pop
mov
pop
test
jb
dec
pop
cltd
popa
pop
sbb
adc
xor
mov
inc
popa
xor
pop
mov
dec
dec
or
lcall
mov
in
lods
pop
lea
cmpb
and
je
mov
js
push
cmp
xchg
pop
lock
or
addr16
fnsave
add
lods
jne
push
ret
mov
cltd
clc
pop
add
dec
jl
and
adc
popf
sub
and
rcll
xor
stc
pop
cmovl
stc
xchg
leave
mov
pop
leave
rorl
test
pop
popf
xchg
cli
adc
leave
add
push
and
or
push
mov
add
add
in
andl
pop
or
sub
add
stos
inc
sbb
add
sub
gs
test
inc
je
jle
sti
loop
inc
fsub
clc
aad
fisttpll
pop
add
push
aaa
mov
dec
leave
sbb
rcrb
aas
add
or
mov
test
xchg
dec
push
adc
pushf
add
or
ljmp
push
mov
jnp
test
and
adc
js
mov
adc
lea
lock
xor
mov
mov
fnstcw
or
insb
movsb
test
sub
gs
sub
sub
daa
mov
xor
add
sub
jns
xor
sub
add
popf
dec
xchg
iret
movsl
and
mov
in
pop
nop
cmp
and
jecxz
mov
cmc
cld
pusha
or
cltd
push
xchg
adc
adc
pop
lret
pop
in
sbb
add
xchg
pushf
les
mov
imul
cmp
pusha
or
js
jl
test
dec
xchg
ret
pop
mov
scas
pop
inc
es
shrl
pop
push
lea
adc
fadds
cmc
pusha
push
outsl
xor
adc
out
imul
mov
push
adc
pop
lock
dec
gs
lds
mull
push
and
std
jecxz
mov
jno
cmp
adc
add
push
pop
sbb
push
cmp
adc
dec
call
or
add
push
push
add
add
xchg
ret
adc
iret
mov
testb
arpl
pop
or
xlat
or
mov
pop
push
ja
jb
jmp
xchg
test
push
test
or
add
or
inc
arpl
or
or
push
or
jmp
fldpi
xlat
push
inc
xor
mov
dec
daa
inc
jle
cmp
inc
or
fwait
shll
mov
out
stos
mov
call
incb
paddd
jnp
sti
jp
mov
jo
cmpsl
and
aam
jne
cmpsb
clc
or
inc
xorl
or
push
mov
fnstcw
push
adc
mov
push
loop
outsl
imul
dec
adc
push
add
rcrl
push
adc
or
lea
shr
int3
pop
idivl
cmp
mov
push
and
insb
lock
jmp
pop
xor
aad
cmp
es
fs
or
sbb
clc
adc
add
mov
movsl
mov
dec
mov
aam
adc
inc
int3
adc
jne
adc
jbe
frstor
dec
add
inc
mov
mov
mov
jnp
jl
lea
add
mov
jg
cmpsl
js
mov
scas
cmp
or
dec
call
adc
lock
lea
push
negl
jae
aam
fcoms
jae
pop
mov
mov
test
push
add
mov
inc
divl
push
cmp
inc
xor
aaa
js
std
inc
jb
shlb
popa
pop
out
lock
mov
pop
pop
jns
jmp
push
das
pop
mov
aam
fcmovnb
sub
iret
inc
les
dec
add
imul
loopne
adc
push
cmc
arpl
nop
push
pop
inc
and
aas
pop
add
jnp
sub
and
inc
add
loope
or
lahf
dec
mov
rcll
test
dec
test
sub
scas
aad
xchg
jbe
xchg
das
and
sub
push
jle
and
xchg
dec
dec
mov
jns
jle
scas
adc
fidivrl
fsubrl
jb
jp
push
push
push
or
shlb
dec
cmp
inc
xor
adc
sbb
stos
out
lcall
and
cwtl
add
ja
mov
dec
stos
pop
and
popf
and
imul
ret
and
dec
sbb
mov
iret
je
sub
pop
scas
ds
xchg
inc
addr16
push
call
cmpsl
js
lea
pavgw
jbe
cmp
and
xor
in
imul
jp
sub
sbb
xchg
sarb
cs
add
adc
outsb
sbb
test
xchg
dec
pop
fisubl
and
push
mov
xor
jmp
shl
movsb
sub
dec
or
pop
jge
loope
movsb
jae
add
add
adc
jae
mov
cmp
enter
shll
imul
cmp
pop
daa
fwait
call
mov
sbb
imul
lds
movsb
push
add
cltd
and
cltd
or
pop
jno
clc
mov
xchg
js
jne
sub
push
mov
sbb
and
jo
pop
clc
shlb
sub
push
shll
outsb
or
ja
mov
mov
jns
or
scas
lock
movsb
push
pop
add
lcall
shrl
sub
mov
out
stc
add
test
or
test
push
push
add
ficoms
mov
xor
cs
in
xor
mov
cmpsl
cwtl
push
add
ss
mov
aas
add
push
pop
add
cltd
call
push
mov
inc
enter
sbb
cmp
and
mov
aas
xchg
cmc
push
pop
aas
sahf
cmp
cmp
push
stos
jge
addb
sbb
stos
loope
xor
ret
ret
nop
aaa
cli
add
addl
popa
aas
cmp
and
in
out
pushf
or
loope
jle
subl
xorb
ret
pusha
adc
in
push
jp
xor
movsb
nop
jmp
ljmp
add
and
dec
pop
test
and
xor
xchg
add
das
sub
push
data16
xchg
xorb
inc
adc
adc
and
mov
xchg
js
sbb
mov
imul
add
inc
mov
lahf
xor
out
adc
push
adc
or
fistps
pop
ljmp
push
fnstsw
mov
push
push
or
xchg
xchg
aas
sub
addr16
bound
icebp
cmp
dec
and
cmpb
repnz
cwtl
add
pushf
pop
jo
lock
inc
mov
out
scas
sub
test
sbb
add
mov
add
in
rcll
adc
sti
and
sub
add
lcall
lcall
and
fiaddl
add
paddq
jge
xor
push
mov
push
lcall
inc
loopne
nop
sbb
and
lea
push
popf
jb
adcl
shrl
add
fdivl
mov
mov
jl
shrb
push
add
and
ss
inc
in
inc
cmp
iret
push
push
adc
inc
aas
fildl
fldcw
sbb
cmp
xor
ds
sub
cmp
push
xchg
insl
xchg
mov
lcall
xor
xor
dec
invd
lock
pop
inc
push
pop
dec
ja
push
js
imul
das
je
ret
bound
inc
xchg
popa
aas
sbb
pusha
adc
or
jle
xorb
sbb
adc
xor
pop
mov
adc
jbe
repnz
nop
add
mov
es
cmp
mov
adc
add
mov
add
mov
mov
pop
xor
dec
or
add
add
clc
insl
imul
sub
lea
xor
aaa
mov
inc
mov
addb
dec
inc
cmp
movb
pushf
lock
sbbb
push
add
inc
stos
dec
mull
pusha
stos
lods
sbb
add
add
push
mov
sub
lock
xor
data16
shlb
mull
std
adcl
xchg
loope
jp
jle
incb
add
ficoms
mov
es
xchg
fstps
sub
pop
ret
sbb
xor
add
dec
xchg
lea
push
scas
push
lock
xchg
ret
aas
sub
sbb
mov
movsb
jno
scas
sbb
in
ljmp
push
dec
cmp
shlb
sbb
scas
rcrl
pop
test
lret
fmul
push
sbb
cld
jmp
outsb
mov
in
cmp
cmp
rolb
xor
outsl
fimuls
das
je,pn
or
rol
call
jne
bound
mov
dec
or
ljmp
repnz
xchg
inc
jmp
call
leave
add
out
jg
ljmp
mov
shr
inc
shl
loope
cmpsb
mov
divb
enter
push
add
push
in
pop
in
data16
pusha
test
mov
or
dec
movl
push
fidivl
ret
mov
setle
push
jge
mov
sub
cmpsb
loopne
jne
les
call
adcb
add
sbb
mov
sbb
sbb
rorb
push
pop
jo
cmp
fimull
loope
dec
jmp
mov
or
inc
xor
dec
dec
in
cmp
sub
out
idivb
cmc
push
sbb
lds
sub
jns
mov
gs
push
decb
inc
sbb
stos
mov
in
push
mov
dec
sbb
movsl
jo
push
mov
inc
decl
xor
jmp
dec
and
or
jg
fidivl
lds
in
stc
stos
cmpsb
pop
or
faddl
mov
fs
add
shl
pop
or
nop
roll
mov
mov
rolb
cmp
or
fidivrl
mov
dec
repnz
pushf
and
sbb
addl
add
add
dec
xchg
mov
jmp
add
inc
out
sar
or
rcl
pushf
adc
adc
pop
ds
jo
adc
lock
add
xchg
cld
mov
add
xchg
xor
mov
arpl
in
aaa
addl
or
addb
push
jecxz
cs
jg
repz
mov
lahf
ds
xor
push
jmp
out
sub
add
push
push
aas
dec
xor
pop
add
loopne
jmp
sbb
cmp
push
hlt
push
incl
mov
add
and
xchg
xchg
icebp
icebp
icebp
out
add
add
outsb
pop
loopne
push
and
sub
dec
mov
cmp
mov
imul
sbbb
mov
jp
sbb
stc
mov
push
fs
sbb
lret
dec
in
dec
ss
inc
jl
enter
sbb
rolb
xor
call
adc
inc
push
xchg
lret
jl
push
scas
cvttps2pi
decb
mov
adc
add
dec
in
lds
cmp
loope
js
sub
fs
inc
sub
rolb
in
lcall
nop
add
lret
xor
lods
push
ret
and
cld
mov
xor
inc
subl
sbb
add
mov
and
sub
pop
inc
cmp
call
add
jle
pop
push
adc
dec
lods
aad
mov
es
pop
sub
fwait
xchg
and
popl
roll
add
pop
ds
jo
mov
mov
and
subl
popa
pusha
push
push
pop
loopne
cs
ficoms
inc
add
mov
ret
sub
data16
orl
mov
mov
es
sbb
cmp
test
fildl
cmc
dec
ja
adc
sbb
sbb
mov
xchg
mov
lods
dec
shrb
das
or
jmp
dec
mov
ss
or
push
add
xorl
pushf
lods
fnstsw
les
es
add
lcall
sbb
sub
inc
pushf
cmp
es
sti
aaa
add
in
inc
adc
icebp
std
push
adc
jno
mov
sub
arpl
leave
in
jo
and
push
mov
jbe
mov
mov
test
pop
test
add
inc
or
xchg
pop
xor
adc
decb
inc
iret
sub
lods
pushl
jle
gs
jbe
cmpb
jne
nop
cmc
movsl
jl
stc
js
pop
inc
fnsave
cmp
aaa
movb
xorb
lods
and
push
insb
add
dec
adc
push
mov
adc
add
mov
ljmp
dec
inc
aaa
andl
push
enter
dec
pop
lods
or
leave
add
push
andl
pop
mov
faddp
jbe
mov
ret
insl
int3
mov
fdivr
ljmp
and
jns
das
sub
xor
hlt
cmp
jl
cmp
jle
xor
jmp
or
push
mov
lea
cwtl
mov
add
mov
cmpsb
push
mov
or
jmp
add
inc
or
enter
pop
aas
lds
mov
xchg
mov
xchg
or
clc
add
ja
mov
jmp
push
and
or
dec
pop
push
mov
jb
je
mov
mov
test
sahf
inc
shrb
mov
hlt
push
inc
mov
push
mov
sub
sub
pusha
mov
mov
incl
add
dec
int3
add
adc
in
loopne
sub
sbb
inc
jg
push
jno
dec
jge
je
dec
and
mov
push
adc
xchg
push
daa
dec
shll
or
adc
outsb
orb
lea
push
adc
pop
fmuls
pop
xor
loope
add
jb
sbb
mov
ss
add
sub
add
ret
call
add
test
mov
sahf
inc
int3
enter
out
je
or
cmp
and
sbb
in
in
adc
je
add
decb
xor
je
lods
sub
inc
push
ret
ret
mov
jmp
xchg
adc
jae
mov
aas
or
sbb
cmpb
xor
stc
pop
fmuls
push
aam
xchg
dec
or
or
xchg
jnp
jo
sub
or
adc
nop
add
pop
mov
xchg
push
shlb
popa
xchg
aad
mov
mov
imul
out
and
sbb
incl
xor
mov
push
mov
test
and
lds
or
add
push
pop
dec
sbb
add
push
sbb
mov
pop
cmpsl
ret
ret
pop
fldenv
std
add
add
dec
push
in
ja
push
adc
mov
cmp
lea
nop
push
std
add
jg
ret
jg
push
adc
cli
and
into
xlat
rcrb
dec
jbe
sbb
or
adc
inc
or
js
je
sbb
xor
push
inc
dec
jbe
sub
push
fistps
mov
mov
push
in
std
add
dec
cmp
xchg
xchg
jae
cmp
je
mov
push
iret
nop
adc
xchg
or
mov
xchg
pop
dec
sub
cmc
jmp
in
mov
jmp
adc
adc
loopne
lea
jle
dec
dec
je
jne
mov
jl
mov
xor
repnz
call
jns
outsb
inc
cmpsb
je
outsl
or
je
pusha
push
mov
xchg
ljmp
loopne
inc
or
pop
ds
pop
mov
sbb
add
cmpsb
and
movsb
out
sti
adc
mov
loope
das
mov
sti
ds
cmp
jl
int
subl
sub
jge
sbb
cmp
nop
aaa
stc
test
sti
sub
jge
stc
fstpl
addr16
stc
push
cli
lcall
gs
lock
sar
push
push
data16
call
dec
das
xor
loop
test
js
pop
push
or
sbb
sbb
push
xchg
outsb
xchg
out
and
and
pop
sub
jb
outsb
xor
pop
xor
push
push
pop
cltd
cmp
xlat
inc
inc
xchg
inc
jbe
dec
mov
mov
pop
pop
jg
frstor
pop
call
insb
pop
jo
pop
js
xchg
lret
addb
nop
movsb
nop
sub
jg
push
gs
adc
and
jne
bound
xor
out
adc
iret
or
dec
cmpsb
inc
pop
sub
sub
lret
xor
xor
or
mov
push
ss
pop
xor
imul
lea
mov
pusha
push
imul
jle
mov
into
add
lods
inc
mov
push
jmp
xor
rorl
sysenter
incl
sub
xor
mov
call
hlt
push
nop
mov
lcall
nop
dec
mov
mov
mov
add
stc
lods
push
mov
dec
mov
or
nop
xchg
sub
lcall
sub
pop
int
and
adc
lds
cltd
pusha
test
xor
dec
dec
lock
sub
add
cmp
jmp
cltd
adc
mov
jnp
neg
push
push
or
jle
adc
ret
fld
push
push
ljmp
popf
and
push
test
inc
adc
lret
lock
pop
cmpsb
ds
add
pushf
cli
mov
inc
frstor
inc
cmpsl
popf
imul
or
loopne
adc
aam
push
pushf
dec
ds
add
in
push
loopne
push
adc
lods
icebp
out
es
addr16
cmp
add
shr
xlat
icebp
mov
movb
xchg
lret
add
sub
lea
aas
jne
lock
push
sbb
dec
mov
test
hlt
push
mov
stos
popa
adc
add
andb
xor
arpl
push
js
xchg
add
add
test
push
sbb
or
xor
loope
jb
mov
out
sub
lock
and
or
sbb
adc
in
jae
in
push
adc
push
add
aad
addr16
mov
mov
mov
shr
push
dec
bnd
loopne
inc
mov
add
sti
adc
cli
mov
cmp
out
dec
add
jmp
jno
insb
pusha
mov
mov
call
sub
lret
in
dec
add
adc
inc
push
or
sti
cmp
ja
push
add
test
pop
dec
push
fwait
sbb
xor
mov
dec
xchg
fcoms
stc
movsl
sahf
jb
mov
fcoml
daa
call
fidivrs
dec
add
nop
lahf
xchg
in
inc
push
mov
push
inc
mov
xchg
loopne
in
dec
mov
jae
jl
insb
mov
sub
sbb
call
sbb
xchg
jg
movsl
popa
dec
fmuls
das
es
inc
in
lahf
or
aaa
adc
xchg
decb
pop
insb
je
add
and
rorb
xchg
sub
cld
push
push
add
push
sub
lea
lea
jbe
inc
cltd
ret
pop
repnz
or
xor
add
rcrl
xchg
ljmp
xchg
push
fcompl
push
stos
sbb
sbb
fmulp
dec
inc
dec
and
shr
lea
sti
xchg
adcl
cmp
insl
jmp
pop
push
adc
fs
fcoms
shl
add
or
loope
mov
fmuls
or
shll
dec
std
sub
arpl
setp
and
xor
fwait
dec
or
lock
enter
popa
mov
xchg
dec
scas
or
inc
fs
mov
movsb
xchg
addl
lock
mov
push
sbb
fsubl
lods
mov
mov
lods
jo
jle
xchg
loopne
ficompl
xor
and
test
push
adc
inc
pop
popl
mov
adc
sbb
rcll
jp
push
mov
jg
dec
jle
pop
dec
mov
dec
push
je
adc
adc
fistpll
mov
test
hlt
pusha
aam
loope
rcrb
test
or
test
mov
push
daa
movsl
aas
mov
mov
popa
mov
push
dec
or
inc
cmp
mov
cwtl
pop
mov
fildl
pushf
mov
mov
jl
mov
sbb
mov
and
push
cltd
pop
inc
nop
and
fistl
inc
loop
and
push
jl
test
in
mov
adc
and
xor
inc
fdivrs
js
scas
pop
das
push
ds
hlt
aad
or
nop
int3
sahf
and
mov
mov
imul
sub
or
mov
cmpsb
push
add
push
dec
lods
push
mov
aaa
inc
pop
or
fimuls
fdivrs
inc
pop
rol
scas
or
xor
xchg
pop
mov
add
inc
push
fisubrl
add
inc
call
jo
adc
sbb
ficoml
jbe
or
sbb
mov
ror
sbb
rolb
out
iret
mov
mov
ret
sarb
adc
xchg
je
sub
js
sub
lods
jle
mov
sbb
fisttpll
and
and
insb
cmpsb
inc
push
sbb
pusha
hlt
push
mov
push
ret
adc
adc
jl
leave
rclb
mov
cmpsb
push
rcrl
pop
dec
data16
lock
push
repnz
call
scas
lret
or
repnz
lock
imul
test
les
cmpsl
outsb
dec
cmpb
test
repz
sbbb
fwait
jo
jne
pop
bound
rcrb
cmp
ja
lret
sbbl
mov
les
ja
adc
clc
xchg
rolb
sahf
mov
insb
cmp
pop
roll
mov
out
enter
or
addb
sbb
nop
pushw
add
inc
or
push
add
xchg
jae
andl
inc
cmpsl
dec
enter
push
fildll
inc
cmp
ret
jecxz
lock
js
add
movsl
daa
push
xchg
pop
or
into
shlb
pop
mov
sbb
inc
lcall
inc
stos
inc
and
into
mov
jo
and
or
aaa
and
js
int
and
mov
xor
dec
jle
cmp
adc
jg
mov
cmpsb
cmp
jno
sbb
sahf
sub
inc
lahf
mov
out
cmp
std
jne
sbbb
ret
mov
cmp
or
xchg
loopne
ret
daa
push
jne
xor
adc
repz
stc
jmp
adc
push
pusha
nop
and
sub
dec
cmp
sbb
roll
jb
or
sub
mov
mov
jnp
and
in
sbb
dec
cmp
ret
inc
jo
sub
pop
push
inc
dec
push
pop
jne
adc
iret
cltd
push
cmp
hlt
adc
add
fs
xchg
and
lds
add
sub
aaa
inc
add
imul
nop
fstpt
push
ja
mov
push
and
adc
cmp
push
xor
int3
adc
in
pop
cmovne
mov
add
add
add
adc
xchg
pop
mov
sub
jnp
xchg
mov
and
fbstp
aas
inc
mov
or
sub
outsb
inc
sbbl
pop
movb
cwtl
iret
in
rcr
movb
mov
mov
pushf
aaa
out
test
js
lea
xor
and
adc
ficompl
lahf
sbb
xor
mov
xchg
mov
mov
xchg
xor
add
mov
inc
push
ss
sbb
xchg
cmpsb
and
pop
fsubrs
mov
push
lods
xor
mov
sub
jnp
add
xor
xchg
jns
jmp
test
test
aam
mov
mov
nop
and
sbb
sbb
adc
in
in
test
jecxz
push
push
cmp
xchg
dec
clc
add
xor
bound
cmpl
bound
or
pusha
fcoms
push
andl
cmp
xor
push
test
xchg
push
jo
enter
lods
ljmp
inc
jmp
dec
ds
or
dec
sub
xchg
mov
add
ret
or
push
shrb
inc
jo
jmp
test
push
dec
mov
xor
insl
je
aas
lods
mov
daa
jne
incl
movl
sub
mov
xor
insb
push
mov
mov
mov
mov
imul
test
push
push
clc
push
push
sti
push
adc
hlt
das
dec
loope
inc
and
add
jmp
pop
repz
push
adc
push
lock
xor
cmpsl
jns
xchg
cld
add
xor
loope
fimull
mov
adc
and
movb
shll
sarl
add
imul
inc
jp
push
iret
add
add
sub
rolb
mov
mov
loope
ss
loop
xor
dec
xorl
sahf
lret
push
jge
and
adcl
or
sbb
jbe,pt
mov
cmp
dec
pushf
push
sbb
jae
add
or
arpl
adc
push
xor
pop
inc
and
xchg
inc
sbb
loopne
and
cli
inc
dec
add
jl
insb
xchg
push
mov
push
jns
sahf
mov
scas
fwait
enter
push
xchg
shrb
cld
push
out
sbb
mov
push
nop
pusha
ret
add
sub
nop
sarb
inc
xchg
movsl
push
testl
sbb
push
test
and
push
or
jmp
add
nop
adc
add
sti
mov
pushf
sarb
seto
jle
mov
adc
adc
or
iret
ljmp
cmp
adc
scas
dec
and
push
jne
sbb
mov
inc
repnz
dec
adc
iret
sub
enter
push
orb
js
hlt
adc
lock
mov
sbb
or
rclb
test
enter
and
add
add
and
add
inc
mov
or
push
add
clc
dec
lea
loopne
add
mov
jg
push
sbb
pop
xchg
push
adc
mov
fcoms
dec
adc
dec
push
add
sbb
xlat
cmp
mov
outsb
pop
adc
and
adc
js
jg
jae
mov
fsubrp
fadd
jnp
push
push
cmpl
jmp
sbb
mov
sub
xor
adc
movsl
or
imul
jle
adc
and
and
popa
aaa
add
clc
xchg
sub
dec
adc
xchg
dec
repnz
sbb
inc
adc
sbb
add
shl
movsl
in
jge
mov
mov
add
js
sbb
push
push
push
sbb
pushf
push
inc
rolb
int3
enter
pop
shll
aam
imul
in
fmul
dec
imul
or
arpl
pop
mov
andb
and
cmp
push
aam
sub
jl
or
cld
movsl
movsb
lret
ret
jbe
or
rorb
xchg
nop
ljmp
xchg
push
mov
inc
mov
dec
nop
js
inc
mov
pop
cmpsb
cmp
adc
outsl
test
xchg
adc
faddl
iret
dec
in
sub
mov
popf
push
or
js
cmp
push
popf
inc
sahf
and
lods
add
and
mov
dec
push
aam
adc
pop
mov
cmp
adc
push
inc
add
jg
cmp
mov
add
pop
or
lret
adc
inc
sbb
adc
xor
sbb
pop
lea
mov
lods
lods
aad
mov
dec
mov
sbb
cs
add
hlt
inc
add
add
sahf
add
sbb
xchg
popa
pop
add
push
push
adc
rcrb
into
and
push
xor
mov
push
dec
rcll
clc
adc
sbb
pop
sarb
fcomp
jns
insb
nop
lea
addb
sub
int3
fdivrs
and
xor
inc
push
or
or
xor
add
fdivrl
cmpsb
xchg
or
sbb
pop
and
fsub
or
inc
shll
jae
or
or
or
sti
or
adc
pop
inc
jb
lods
push
adc
or
push
adc
test
shll
and
lock
call
pop
xchg
push
or
pop
les
add
pop
mov
hlt
sarb
cmpsb
push
insb
cmpsl
cltd
enter
aas
mov
mov
xor
cmp
xor
test
ret
call
or
rorb
dec
push
pop
dec
sub
pop
mov
nop
dec
jecxz
leave
ficoms
leave
add
jno
movsl
test
cmp
aaa
test
mov
fdivrl
sub
rcll
flds
rcll
xor
push
je
jecxz
push
push
test
dec
inc
adc
ss
and
xor
lcall
dec
jmp
or
pop
or
or
lods
subb
stos
adc
cmp
pop
cmp
fisttpll
inc
sbb
xor
push
divb
pop
imul
mov
sbb
or
jne
inc
dec
xor
and
pop
pop
inc
fdivs
push
jmp
adc
adc
xor
push
adc
inc
sbb
xchg
jmp
test
sti
jo
push
ret
mov
mov
das
call
cmp
call
dec
dec
mov
pusha
adc
leave
add
daa
add
cmp
scas
sbb
or
popa
mov
push
inc
xchg
push
cmp
stos
or
cmp
pusha
fisubrl
scas
push
push
push
push
pop
loopne
inc
inc
inc
mov
sbb
push
lahf
dec
jnp
add
clc
insb
cmp
dec
les
sbb
add
pop
pop
sbb
or
adc
and
inc
jmp
inc
decl
es
xorb
sarb
sub
jo
push
std
pusha
jne
adc
les
popa
fstpt
sub
mov
adcb
pop
or
mov
sub
pop
push
subl
xor
dec
mov
inc
mov
movsl
cwtl
cmp
lahf
dec
loopne
mov
cmc
movsb
sbb
in
incl
lods
sub
test
jecxz
movsb
jge
adc
aam
push
dec
or
dec
jns
adc
or
mov
push
add
pop
or
mov
popf
cmpb
out
lock
jmp
movsl
pop
sbb
test
jo
sbb
test
out
ret
sbb
jle
mov
add
in
add
insl
jb
xchg
and
pop
push
insb
sub
push
scas
call
sub
inc
cltd
sub
fs
stos
movsb
sbb
in
and
push
aad
add
and
cmc
add
add
adc
inc
xor
pop
add
and
xorb
adc
inc
pop
clc
or
cmp
and
mov
mov
pop
push
xchg
ret
add
jecxz
pop
iret
pop
bound
cltd
enter
sarb
inc
push
ljmp
sub
dec
mov
push
ss
cmp
or
add
xchg
cmp
dec
in
lock
adc
add
cmp
aad
add
loopne
mov
mov
enter
or
add
inc
cli
adc
lea
jl
sbb
and
pusha
or
xchg
cmp
jb
adc
jp
cmp
out
and
xor
sbb
inc
add
in
sbb
clc
mov
jne
sub
add
testb
or
je
xchg
fsubrs
es
sub
js
dec
pop
icebp
or
jmp
mov
xor
fst
adc
add
insb
aaa
fidivs
repz
add
daa
repnz
hlt
ficoms
mov
cld
sub
or
je
add
popa
xchg
sub
sbbb
adc
hlt
loope
jecxz
js
push
mov
mov
sbb
adc
mov
push
add
cwtl
test
adc
add
test
out
sub
cmp
add
inc
shl
and
stos
lock
cmp
xor
addb
add
xchg
mov
test
push
es
lret
or
and
mov
sbbb
and
stc
ret
adc
lods
jmp
push
xor
sub
dec
push
and
push
and
ret
stc
adc
insb
ljmp
loope
push
pushf
push
rolb
rolb
lods
pop
pop
test
stos
test
mov
sbb
cmp
dec
rorl
xor
xor
test
adc
sbb
mul
sub
xchg
mov
mov
xchg
adc
fcoml
lret
lret
shlb
push
xchg
test
pop
mov
pop
or
enter
scas
cmp
lret
cmpsl
sbb
cmpsl
dec
ds
pusha
sbb
sbb
and
or
sub
cmp
inc
xor
or
mov
ss
push
push
dec
mov
xchg
leave
adc
push
or
lds
and
lea
loope
and
jecxz
inc
cmp
push
and
xchg
lock
mov
dec
jae
xor
or
adc
sbb
push
das
jb
mov
jns
pop
dec
jnp
dec
mov
adc
sbbl
subl
cmpl
test
cld
cmpsb
pop
ljmp
jae
ret
and
xchg
nop
lock
add
xchg
movsl
test
xorb
pop
lcall
rolb
icebp
jb
dec
or
adc
popa
xchg
je
roll
dec
xchg
add
sub
lret
inc
popa
cld
ja
lea
cltd
fmull
sbb
push
sbb
mov
mov
fstl
into
push
lock
fisttpll
and
jg
pop
pusha
add
add
cmp
adc
push
push
sub
sarb
mov
cmp
jl
and
cmp
daa
movl
jmp
es
cwtl
insb
loope
pushf
xchg
mov
add
nop
popa
sub
and
in
notb
sbbl
inc
mov
jnp
repz
mov
pop
loopne
bound
js
push
dec
gs
mov
mov
sbb
adc
loop
adc
mov
adc
or
fdivp
mov
xchg
mov
int3
jo
inc
test
or
or
add
xor
xor
aas
dec
lock
in
fs
test
mov
cmp
movsl
jmp
rorl
das
fidivrl
inc
jo
loop
push
lldt
ret
jge
les
xchg
mov
jmp
or
inc
sbb
sbb
popa
popf
inc
or
sub
adc
popa
and
or
lods
add
andl
sub
add
mov
jl
ret
sbb
stc
xor
rorb
popa
fdivl
or
lret
pop
pop
pop
mov
enter
sahf
das
jle
pop
addb
movl
cmp
push
inc
aas
and
sbbb
and
jb
sbb
and
sbb
sbbb
jl
sbb
andb
jb
sbb
sub
in
adc
inc
push
sbb
inc
in
push
cmp
pop
or
fsubrs
push
add
push
pop
mov
xor
xchg
add
inc
push
int3
jp
std
insb
xor
or
xor
mov
mov
pop
adc
push
xor
xchg
or
and
mov
mov
fs
sahf
movl
xor
inc
mov
sub
inc
fisubrs
mov
cmp
movsb
lret
pusha
inc
lret
fstpl
pop
cmp
call
pusha
hlt
mov
push
add
ror
inc
inc
int3
mov
and
push
fcoml
sub
cmpl
or
add
in
pop
enter
pop
adc
dec
jle
lret
push
push
cwtl
push
sbb
push
sbbb
mov
cltd
or
cmp
je
adc
mov
andb
and
sub
mov
mov
arpl
cmp
shrl
add
lods
add
sub
lret
mov
cmp
test
orb
jno
es
pcmpeqw
xchg
dec
fcoml
add
fimuls
adc
mov
push
sub
ja
lret
or
pop
sbb
mov
lods
and
aaa
mov
xorb
push
sbb
dec
xor
in
dec
or
pop
add
xchg
push
sbb
sbb
mov
sbb
mov
push
mov
xor
or
sub
adc
sbb
inc
lock
cmpsl
cmp
cs
es
andl
ffreep
outsl
sarb
sbb
push
outsl
xchg
sub
cs
push
inc
xchg
jb
imul
sbb
mov
bound
cs
sub
aas
push
gs
lock
and
or
icebp
es
and
push
popa
stos
ss
and
dec
rorb
cmc
fdivs
imul
cld
add
or
pop
mov
pusha
adc
jg
or
sbb
insb
mov
std
int3
push
xchg
cmp
mov
dec
dec
push
movsl
push
movsl
mov
inc
mov
loope
push
pusha
lock
push
mov
pop
cmp
je
sub
push
lahf
xor
loopne
push
outsb
lds
cmp
and
pushf
sti
inc
jecxz
push
dec
cmp
daa
dec
pusha
mov
movl
enter
shrl
je
stos
repz
mov
adc
std
adc
jge
dec
and
mov
dec
mov
ret
inc
es
mov
mov
jae
adc
push
movsb
out
dec
adcb
inc
push
push
popa
jnp
icebp
inc
lods
loopne
sbbb
inc
stos
mov
ret
adc
lock
sbb
mov
jnp
adc
add
mov
push
out
fwait
inc
adc
adc
aam
popa
pop
adc
adc
sub
jle
push
pushl
scas
lock
mov
push
dec
lcall
adc
sbb
adc
pop
sbb
and
sbb
in
pop
push
mov
mov
dec
ror
or
and
popa
int
sub
loopne
in
or
ret
es
int3
xchg
mov
dec
push
out
sbb
inc
les
test
mov
xor
mov
ret
les
aaa
test
push
and
add
js
inc
pop
push
loopne
dec
repnz
or
push
fistl
gs
add
in
mov
jae
pop
mov
cs
push
in
mov
aas
or
pop
xchg
jno
aas
sbb
inc
in
inc
sbb
jne
and
mov
mov
test
add
sub
cmpsb
xor
xchg
add
push
lea
pmuludq
fisubl
cwtl
test
mov
js
pop
mov
out
insl
sbb
cmp
je
xchg
mov
ret
out
push
or
fcoml
dec
jecxz
dec
and
cmp
mov
push
notb
in
cmove
mov
test
addl
jae
lods
or
lret
push
pop
call
jnp,pt
sti
shlb
push
pop
jl
jmp
mov
movsb
mov
ds
lahf
mov
movsb
jnp
sbb
cli
jle
dec
sbb
jbe
je
and
push
and
jecxz
mov
out
fimuls
jmp
jne
adc
scas
rcll
or
stc
push
scas
xchg
cmc
cs
out
inc
inc
inc
xchg
test
inc
data16
push
pop
fs
mov
or
ljmp
imul
and
add
add
sbb
nop
dec
sti
add
adc
aaa
test
or
and
mov
fsubrs
or
and
mov
adc
outsb
jp
push
push
push
or
push
jnp
sub
xor
push
lods
movsb
xor
cmp
popa
sbb
push
pusha
and
pop
dec
out
into
adc
and
push
or
mov
sub
jp
repnz
adc
mov
lock
mov
cmp
mov
add
scas
call
orb
cmpsb
cmp
or
push
adc
lock
mov
pop
jne
cwtl
insb
and
nop
movsl
cltd
out
cmp
movsb
inc
adc
lock
cld
rorb
movups
mov
xor
test
jo
jbe
mov
ror
sarl
push
and
fdivs
or
add
shl
sti
je
push
pop
push
mov
or
push
sub
sub
stos
lods
inc
push
cmp
test
loopne
subb
add
es
xchg
rcrb
dec
dec
or
cmp
imul
push
sahf
sbb
lret
aam
ret
dec
push
xchg
and
xor
pushf
sub
xchg
sbb
sbb
or
jl
loopne
rcll
push
sbb
inc
adc
insb
adc
sub
adc
push
mov
push
pop
sahf
or
fcoms
sub
push
ret
shlb
rorb
sub
daa
sti
test
inc
rcrl
fnstsw
test
jb
dec
fs
adc
and
fst
mov
dec
fsub
imul
push
sbb
add
loopne
sbb
inc
loopne
fdiv
sbb
xchg
push
arpl
in
hlt
adc
cmp
call
imul
test
imul
inc
pop
push
je
mov
fdivr
mov
jnp
fsts
xor
add
dec
loope
fs
lea
addr16
test
dec
sbb
adc
pusha
jno
sbb
test
and
or
dec
or
into
outsl
push
imul
or
jb
jbe
jns
push
xor
jle
push
xor
cmp
xchg
pop
jno
imul
sub
and
xor
inc
xchg
sub
ret
xchg
fs
dec
xchg
xor
mov
sar
fs
push
inc
xlat
fwait
push
sbb
pop
mov
xchg
popa
or
lock
pop
fiaddl
xor
inc
push
mov
leave
sbb
or
or
mov
add
loopne
add
jge
mov
push
sub
lea
out
sar
cmp
jbe
mov
cmp
push
call
daa
mov
cmp
xor
daa
and
xchg
xchg
repnz
test
je
jbe
xchg
lea
mov
or
mov
mov
mov
or
int3
pop
push
jne
add
push
push
adcl
mov
mov
xor
cltd
inc
inc
inc
je
or
inc
xor
popa
xor
push
les
icebp
test
cmpsl
add
and
clc
pop
xor
pop
adc
movsl
movsl
push
mov
pop
push
jg
pop
xor
and
xchg
add
mov
rol
lcall
fiaddl
push
dec
dec
or
cmp
aam
shrb
movsb
jno
push
sbb
and
loope
lcall
pop
arpl
jmp
xor
cmp
std
cmp
scas
and
xor
add
add
add
xor
push
add
push
mov
jl
lock
div
jg
ja
adc
jl
imul
or
add
dec
mov
push
add
mov
testb
lock
pop
inc
push
lret
pushl
adcb
adc
jne
ss
push
mov
lods
aas
in
xor
test
pop
call
cmp
inc
in
push
sbb
imul
or
and
rolb
inc
repnz
cmpsl
and
test
test
push
adc
fisttpl
lds
inc
xor
and
adc
mov
push
and
nop
nop
test
adc
inc
sbb
sbb
cli
movsl
mov
cld
or
push
pop
out
jle
cmp
es
sbb
cmpb
mov
and
pop
in
sbbb
fs
sub
cmp
out
enter
cmpb
mov
andb
dec
repz
adc
and
xor
arpl
or
repnz
xchg
enter
pusha
scas
xor
cmp
aad
xchg
dec
push
xchg
mov
subb
test
mov
cmp
fstpl
cwtl
add
sub
push
insb
ret
sub
lods
addl
repnz
sarl
shll
out
adc
rclb
clc
rclb
inc
dec
lods
in
sub
call
push
lods
mov
call
mov
mov
xor
inc
mov
pop
cld
adc
shr
movsl
xor
push
mov
pop
ffreep
jne
or
mov
inc
cmc
test
pusha
add
jecxz
sub
add
fldcw
cwtl
pop
iret
out
je
nop
add
and
or
fcom
iret
and
enter
pop
sub
push
or
push
or
inc
push
addl
lock
cwtl
mov
in
cwtl
jb
push
rol
add
xchg
test
dec
push
or
xchg
cmp
fistps
pop
loopne
push
add
mull
aad
push
xlat
push
mov
and
mov
mov
and
mov
loopne
test
mov
xchg
mov
sub
and
dec
lds
add
mov
or
sti
xchg
sub
je
or
push
cmp
xor
aaa
mov
add
cwtl
mov
and
setg
sbb
adc
adc
cld
sub
imul
jbe
mov
xor
and
push
and
test
mov
dec
sbb
dec
xlat
jl
inc
lea
push
cmp
add
push
and
dec
cmp
sarl
adc
sub
adc
inc
push
add
jmp
faddl
sub
fimuls
inc
cld
fcmovnb
je
push
adc
and
insb
jge
dec
sub
inc
pop
test
popf
pop
ficomps
sub
fs
icebp
in
enter
stos
cltd
push
dec
cs
adcb
int
adc
inc
cltd
nop
xchg
mov
cmp
mov
cmc
test
mov
adcb
pushf
pusha
mov
or
add
lret
push
or
call
orb
enter
sub
and
pop
jb
add
dec
in
leave
push
aaa
xchg
enter
adc
and
or
and
iret
nopl
jb
sub
push
nop
or
mov
sbb
ret
lea
pop
adc
sbb
sbb
push
insb
push
popa
sahf
push
repz
add
cmpsb
nop
or
xor
in
in
push
xor
sbb
inc
es
cmp
xchg
xor
dec
sbbb
push
sahf
or
add
add
addr16
pop
shrl
pop
adc
mov
adc
das
inc
inc
fnstsw
roll
xchg
mov
dec
ret
loope
mov
and
icebp
and
push
push
and
bnd
adc
pop
inc
or
enter
xchg
jl
mov
mov
daa
cli
lret
pop
cmp
cwtl
mov
and
shl
mov
dec
dec
inc
sub
addr16
adc
xor
push
cmp
lds
fsubs
mov
add
dec
push
lahf
out
mov
lret
ret
out
fbld
push
sbb
push
fs
les
sbb
xor
sub
xchg
mov
add
scas
inc
sbb
sbb
xchg
jle
leave
mov
or
xor
add
xchg
xor
adc
mov
icebp
and
in
ja
pusha
inc
fists
ret
fisubrl
test
aad
mov
ss
push
push
arpl
push
pop
pop
int
daa
pop
push
in
inc
les
ret
and
add
jl
int
xchg
mov
cmp
insb
jae
in
test
xor
adc
and
int3
lock
cmp
push
pop
cmp
push
dec
pop
std
mov
add
loope,pn
and
push
push
fistps
or
or
loopne
movntps
adc
sbb
jne
stos
adc
and
sub
add
ret
movl
inc
jns
test
or
andl
ret
push
sahf
cmp
adc
and
test
add
das
push
mov
loopne
or
and
dec
das
mov
dec
inc
cmp
sbb
and
cmp
pop
mov
insl
sbb
lahf
mov
jnp
stos
sub
cmp
loop
mov
push
rorb
addr16
add
in
outsl
shlb
dec
in
dec
add
cmp
xchg
imulb
push
movb
lret
cmp
sbb
inc
sub
xchg
adc
or
mov
mov
pop
movsl
je
or
pop
gs
push
ss
leave
test
ljmp
sub
pminsw
xchg
or
xor
enter
stc
sub
aad
notl
push
inc
fldl
rcll
mov
imul
mov
push
mov
insb
jns
arpl
std
jle
scas
push
mov
shll
ds
pop
mov
inc
dec
pop
aas
pop
movsb
mov
adc
and
xchg
push
push
push
mov
daa
nop
inc
jmp
dec
das
inc
call
lea
mov
movsb
push
sub
push
clc
add
jmp
call
mov
test
data16
add
push
cltd
pop
xlat
xchg
test
sbb
ljmp
pop
push
push
and
into
push
push
and
pop
mov
mov
or
push
adc
sbb
mov
xchg
add
mov
shrb
inc
jnp
jl
data16
fildl
xchg
jne
gs
add
add
jbe
and
pop
cmp
lock
adc
or
mov
and
sbb
add
dec
push
addl
add
xchg
dec
shll
mov
mov
mov
aaa
or
sub
add
inc
xchg
mulb
push
pop
loopne
inc
dec
xchg
cs
push
or
es
lods
adc
cs
adc
inc
push
pop
mov
loop
sti
aam
or
sub
ljmp
xor
cwtl
je
dec
mov
mov
jmp
arpl
mov
mov
scas
mov
and
and
inc
movsb
sbb
in
loopne
adc
mov
dec
pusha
pusha
xchg
inc
inc
or
clc
adc
cmpsl
sub
addr16
and
scas
test
cmc
adc
incl
mov
and
fiadds
shlb
sbb
dec
add
jb
sbb
adc
sahf
mov
adc
je
mov
sub
fsts
in
fstp
sbb
aam
arpl
popa
fcomps
lcall
jns
cs
bound
jecxz
sbb
push
sbb
mov
jmp
addr16
enter
and
xchg
daa
movsb
out
mov
add
nop
adc
push
and
push
sbb
mov
sub
add
mov
add
dec
imul
and
inc
popa
mov
xlat
or
fmuls
xor
mov
xor
jno
push
and
mov
add
sbb
ret
sbb
sbb
mov
push
cmp
inc
sub
lcall
add
push
repnz
fstps
or
notl
mov
adc
xchg
sti
mov
and
jo
pop
sbb
adc
dec
jecxz
xor
scas
adc
xor
mov
loop
loopne
mov
or
roll
or
cmpsb
pusha
mov
addr16
or
mov
cmpsb
and
shll
bound
lods
push
push
rep
push
je
xor
xor
insb
sbb
sbb
movl
pop
mov
and
add
cmpb
adc
adc
mov
aam
jmp
mov
int3
jno
add
dec
out
adc
jmp
inc
mov
popa
add
mov
add
loope
sub
add
mov
into
orl
and
loopne
lret
or
and
inc
pop
push
mov
testl
popa
pop
popf
or
jl
jmp
aaa
and
pop
subl
sub
daa
mov
es
aaa
lea
mov
mov
mov
enter
xchg
push
mov
sbb
inc
and
dec
mov
inc
push
fidivrs
out
xchg
adc
add
xor
or
or
cltd
adc
sub
cmp
enter
push
fdivrs
pop
add
leave
ljmp
clc
jbe
adc
sub
push
jecxz
int3
or
pop
ljmp
push
sbb
divb
jo
inc
inc
insb
orl
sbb
mov
sbbl
adc
mov
shll
or
inc
xor
popa
and
add
cwtl
pusha
dec
ljmp
jbe
or
in
out
sbb
fistps
repz
test
push
push
mov
mov
sbbl
sbb
mov
out
fisubl
mov
or
test
mov
or
dec
add
mov
ret
sub
and
or
push
mov
xor
pop
imul
xor
inc
or
insb
sbb
int
mov
add
jns
sbb
sub
pushf
sbb
or
mov
xor
sub
inc
adc
std
adc
mov
loopne
test
dec
mov
and
jae
push
fcmove
cmpl
daa
and
jb
jmp
push
popa
mov
and
rcrb
fstl
test
inc
lds
add
cmp
sbb
inc
pop
mov
sub
ret
test
roll
test
jmp
cld
add
push
mov
sbb
sbb
sbb
call
shrl
insb
pop
ret
sbb
push
push
add
testb
ss
or
inc
pop
enter
es
sar
adc
ds
jle
in
mov
decl
mov
cltd
gs
xchg
hlt
add
add
and
shl
mov
ret
push
adc
xor
arpl
dec
jne
or
dec
xor
and
inc
sub
xor
jns
jo
xor
push
adc
roll
cmp
imul
xchg
xor
or
xor
pop
add
push
mov
cmpsl
adc
adc
push
sbb
inc
insb
les
dec
ja
push
sbb
rolb
cmpsl
cld
push
and
sbb
ss
sbb
adc
nop
inc
mov
dec
adc
outsb
lock
lea
xchg
adc
add
add
adc
rorl
mov
rcrb
adc
sbb
pop
mov
fcmovb
sub
or
inc
push
jns
mov
jmp
dec
sub
cmp
lods
testl
xor
adc
nop
push
sti
mov
push
and
mov
cmp
scas
jne
cld
das
cmpb
mov
push
je
adc
enter
test
jp
sbb
inc
call
add
jbe
movsl
mov
pop
bound
addb
xchg
je
lock
and
mov
sarl
push
inc
add
cmovb
sbb
sub
es
rcrl
inc
outsb
add
push
imul
jne
xor
and
cmp
pusha
push
cli
rclb
xchg
mov
js
mov
movsl
rclb
in
and
enter
loopne
daa
add
mov
hlt
orb
movsb
popf
ret
andl
push
mov
fnstcw
push
ret
in
and
push
jmp
es
add
push
loopne
xchg
add
xchg
add
dec
addl
into
popa
sbb
pop
or
testl
push
inc
jb
ret
cmp
add
sub
jb
jnp
icebp
mov
jp
mov
or
clc
ja
repnz
mov
sbb
cmc
fadds
sub
aaa
xchg
mov
mov
pusha
xchg
aaa
jno
scas
or
add
jne
pop
adc
ss
cld
push
push
xchg
inc
mov
daa
pop
pushf
adc
cmp
or
sahf
or
or
mov
jecxz
sub
enter
push
orl
imul
pusha
mov
cs
add
cmp
ss
inc
cmp
mov
in
mov
test
inc
scas
shlb
inc
jmp
sbb
pop
mov
vmulpd
cwtl
cmp
mov
cmpsl
xchg
hlt
sbb
add
fwait
xorl
mov
xchg
into
xor
jae
sbb
in
shl
sbb
test
inc
pop
jae
xor
mov
movb
push
add
sbb
adc
je
inc
dec
imul
add
jo
leave
enter
jle
pusha
pushf
push
pop
push
outsb
mov
setg
xor
sub
or
mov
aad
ficoml
pop
sub
inc
insb
mov
daa
mov
lret
and
xchg
dec
lods
push
mov
inc
jo
fistl
int3
mov
mov
lahf
adc
sbb
mov
inc
or
pusha
push
xchg
pop
sahf
addb
test
add
xchg
sarb
xchg
adc
push
inc
push
cmp
cmp
pop
xor
xorb
faddl
add
xor
add
push
sbb
test
push
mov
mov
pop
dec
cmp
rorl
fcompl
out
clc
add
and
pusha
je
add
sbb
lods
push
stos
push
inc
dec
sti
add
mov
jo
sbb
mov
rolb
and
pop
pushf
popa
sbb
adc
cmp
dec
dec
jmp
push
adc
add
pusha
ja
pop
push
mov
push
sbb
in
dec
push
and
add
sub
mov
sbb
add
clc
xor
sub
xor
mov
sub
sbbl
test
and
cmp
repnz
mov
orb
or
cs
fbld
movsb
mov
ss
fldl
aad
data16
nop
mov
dec
push
mov
movb
pop
loopne
insb
imul
inc
daa
push
add
fidivl
lock
xor
inc
cwtl
popa
inc
leave
sub
adc
add
inc
jnp
mov
sbb
arpl
gs
sar
push
push
out
lea
sub
lock
xchg
mov
lea
mov
push
dec
lea
push
adc
add
into
call
push
xchg
andb
push
dec
and
sarw
jle
pop
and
xchg
out
xchg
pop
test
mov
cmc
push
or
push
mov
push
lea
adc
add
insl
push
sarb
push
sti
add
add
xor
sti
xor
into
movsb
hlt
shrb
xchg
mov
daa
cmp
inc
sti
mov
aaa
mov
jne
pop
xor
sub
pop
pop
lea
inc
pop
iret
mov
clc
js
mov
mov
insb
inc
arpl
ret
cs
and
in
movsl
popa
cmp
xorb
dec
or
adcl
and
sub
es
add
push
inc
pop
jmp
push
add
or
ds
dec
repnz
xor
fwait
test
fistl
les
mov
dec
xor
inc
add
cld
dec
ret
mov
sub
vmread
pushf
xchg
popa
adc
insb
or
add
add
and
rol
lea
cmc
jae
pop
je
adc
in
mov
inc
add
in
cmp
leavew
lret
bound
js
push
push
push
adc
push
pushf
lock
adc
es
push
xorb
xchg
add
aas
rolb
call
dec
repz
enter
or
xor
xchg
add
fisttps
xchg
inc
push
outsl
jp
inc
test
push
test
sti
rolb
adc
js
into
lcall
push
test
mov
enter
xor
xchg
xchg
add
stos
cs
outsl
dec
dec
test
ljmp
push
cmpl
mov
push
fcomp
cltd
xor
pop
fdivl
xorl
inc
nop
push
xor
mov
xorl
mov
repnz
nop
mov
cwtl
cltd
mov
push
jle
sahf
xor
sub
sbb
jp
les
pop
xor
adcl
stos
or
aam
aaa
jb
cmp
test
sbb
inc
adc
add
push
lds
add
push
and
movsl
in
bound
movsl
test
cmp
testb
mov
xchg
repz
xor
testl
cmp
pushl
pop
cmp
in
dec
and
aam
sbb
clc
adcb
add
xor
insb
loope
adcb
dec
xlat
and
add
cmpl
pop
das
adc
or
jp
clc
add
cmp
fwait
sub
xchg
sub
and
sbb
xor
clc
adc
mov
loope
jle
cmp
jecxz
enter
or
pop
xchg
cmp
or
inc
add
add
xor
js
add
pop
jae
aaa
test
pusha
popa
jo
add
rcrl
lock
add
add
gs
aad
xlat
pop
add
push
test
out
ffreep
inc
pop
lret
int
adc
lea
aam
jmp
mov
or
cmp
jb
scas
mov
hlt
jbe
pop
push
or
mov
dec
mov
nop
popa
dec
inc
push
push
test
adc
mov
jb
ljmp
sub
sub
rolb
icebp
in
xchg
idivb
inc
mov
pushf
sbb
ja
jbe
test
mov
cmp
jne
in
popa
jo
shll
push
loopne
mov
pop
mov
jns
ret
je
movsb
cmp
nop
xchg
and
jecxz
ficoms
add
add
sub
push
pop
add
mov
test
sbb
jae
sbb
cmp
add
adcb
add
lods
sar
lea
mov
imul
shll
jmp
push
insl
push
aad
or
mov
subl
out
movsl
adc
add
adc
in
jns
inc
cwtl
pop
xchg
and
fnstsw
xchg
jne
lea
jne
ret
pop
add
lock
mov
push
mov
dec
cwtl
inc
inc
clc
add
push
pushf
inc
out
dec
add
jle
cmp
xor
xor
loopne
arpl
ret
and
jnp
pop
push
nop
dec
loope
adc
push
fiaddl
loop
cmp
sbb
push
setae
push
inc
mov
pop
push
pop
mov
pop
ret
ror
lea
repz
xor
adc
xor
push
mov
lea
jmp
mov
mov
sub
ja
mov
add
movl
pop
xchg
loope
xor
push
add
xor
push
dec
je
add
mov
sbbb
mov
adc
filds
imul
enter
or
adc
pusha
stos
pop
mov
repnz
sub
mov
or
out
pop
inc
mov
mov
sub
dec
aam
lods
adc
stos
mov
cli
mov
lahf
stc
nop
adc
es
inc
testb
repz
push
cmp
nop
fsubl
pop
add
xor
dec
xorb
clc
pushf
in
xchg
in
xlat
and
sub
xchg
addr16
sub
xchg
mov
lods
sbb
push
xlat
push
mov
xchg
popa
mov
xchg
insl
out
add
push
mov
in
rcl
dec
adc
and
pusha
jle
sbb
pop
xchg
sbb
insl
or
xor
jl
lret
fimull
push
ret
xchg
ljmp
dec
sub
pop
rol
sub
fwait
push
push
inc
lods
adc
cmp
test
and
and
and
sub
jle
in
or
lea
push
out
rcr
xchg
lea
and
dec
sbb
xor
bnd
adc
mov
sbb
adc
pop
sbb
movsl
mov
scas
sbb
mov
fs
loop
cmpb
pusha
sbb
pop
dec
pop
push
cmpsl
sbb
and
xorb
pop
call
pop
mov
xchg
dec
fidivrs
or
add
dec
or
rolb
iret
push
add
rolb
movsl
mov
insl
pop
pop
out
xchg
push
push
or
inc
mov
movd
js
or
lea
push
cmp
sub
xor
xor
or
add
fisttpl
sub
cmpsl
nop
mov
popa
pusha
out
and
or
pop
inc
and
mov
mov
lea
in
push
lcall
in
push
adc
incl
pusha
popl
aam
pop
jl
xorl
out
cmp
jne
clc
cmpsb
push
adc
mov
cmp
je
lock
push
ds
add
imul
lea
dec
jne
push
aas
mov
inc
mov
scas
int3
or
je
and
rolb
daa
int3
sbb
roll
mov
aam
inc
inc
xchg
jb
sbb
cld
or
adc
roll
add
mov
xor
add
dec
pop
cmp
loopne
cmp
push
jb
cmp
inc
mov
push
call
sbb
rcll
pop
btc
fdivr
mov
pushf
dec
jecxz
lea
mov
insb
ss
add
push
add
pushw
mov
fwait
or
movsl
pop
xor
push
mov
and
pop
inc
mov
adc
adc
add
mov
mov
push
jne
mov
pushf
add
inc
push
adc
popa
xlat
sub
fdivr
adc
push
jb
int
push
dec
sbb
sbb
or
sub
push
gs
cmpsl
mov
xor
inc
cmpb
mov
insb
call
aad
sub
add
sub
shrb
and
xchg
stos
sbb
sbb
mov
shlb
adc
jmp
sbb
outsl
xor
mov
stos
mov
dec
ret
sub
push
cmp
call
add
jl
mov
or
sbb
scas
sub
sbb
jae
and
pusha
pop
add
sti
rol
ret
pop
sbb
and
fisubs
ret
and
sub
loopne
and
xor
add
cwtl
push
mov
popa
rorb
hlt
es
sbb
sub
daa
or
adc
aad
rcrl
sbb
cmpsl
or
lods
inc
xor
fs
sub
add
push
add
mov
jns
orl
sub
cld
mov
mov
cmc
das
push
and
cmpsb
mov
xchg
add
sbb
xchg
movsl
jb
push
xor
cltd
xlat
inc
cmp
cmp
push
movsb
nop
clc
pop
jae
ds
mov
adc
add
je
pop
rorl
test
jmp
and
adc
jne
popf
fcmove
push
fwait
loop
jmp
cmp
negb
fmull
push
mov
sub
andb
inc
shlb
inc
jl
inc
pusha
mov
mov
data16
xor
popa
adc
pop
jmp
mov
and
mov
xor
std
add
sbb
dec
jecxz
inc
mov
jle
push
popa
subl
sbb
mov
mov
setno
and
int3
out
movsb
jge
dec
rorb
or
add
pop
push
lret
xchg
js
xchg
pop
adc
add
mov
push
adc
rol
and
cmp
and
and
pop
jae
mov
popa
add
pop
push
pop
dec
andb
dec
push
stos
test
pushf
movsl
pop
std
xchg
sbb
pop
dec
loopne
test
dec
push
xor
in
mov
and
push
testb
sub
stos
sbb
aas
pop
xchg
sub
cli
push
dec
add
push
or
push
fnstsw
insl
jae
fsubrl
fs
sub
and
ss
and
xchg
push
dec
add
cmp
adcl
subb
inc
xchg
lock
cmp
mov
repz
jl
add
loope
lret
rolb
inc
mov
std
dec
pop
cmp
push
loopne
mov
shlb
call
popa
clc
push
insl
add
in
aaa
pushl
rcrl
imul
mov
enter
sub
mov
xor
js
scas
sub
mov
xor
add
dec
jns
pop
push
cmp
into
dec
push
lret
lods
or
icebp
or
push
cmp
sahf
adc
ss
sahf
movsb
js
add
xchg
pop
cmc
and
nop
xchg
pop
sub
fsubs
adc
jmp
inc
jl
dec
push
cmp
js
jo
and
stos
mov
jg
pop
pop
adc
push
les
rcrl
dec
sub
and
and
adc
xor
ret
mov
push
dec
jl
mov
xchg
jnp
lret
mov
xor
sub
mov
dec
sti
and
adc
add
cmp
dec
dec
push
push
and
leave
movsl
push
push
pop
sbb
inc
dec
insl
or
int3
xor
cmp
nop
xchg
mov
and
sbb
mov
sbb
fsubl
in
and
or
outsb
in
and
and
sub
dec
clc
movb
rorb
in
or
or
add
adc
nop
mov
sbb
jnp
loopne
aad
add
or
dec
add
outsb
and
push
nop
nop
dec
jle
dec
or
or
les
or
hlt
fmull
sbb
and
es
jecxz,pt
movsb
push
pop
xchg
pusha
js
cmpsb
or
push
mov
cmp
movsl
adc
mov
jns
aam
mov
pop
nop
xor
or
orb
push
pusha
and
and
lret
pop
sbb
or
addb
in
or
mov
adc
or
je
jmp
add
test
xor
stc
xor
jecxz
adc
dec
and
cld
or
sub
or
js
outsl
or
adc
movsb
arpl
push
pop
and
adcb
inc
call
iret
cmpb
jne
movsl
in
sub
loop
mov
shlb
into
push
inc
dec
mov
mov
mov
mov
push
dec
add
add
add
and
mov
pop
xor
xor
xor
bound
or
inc
rorl
fnsave
push
add
push
fnstenv
js
mov
xchg
lahf
dec
lds
inc
arpl
in
fnstcw
sbb
bound
sub
jp
sub
ret
add
jp
outsl
pop
in
jne
in
inc
jo
inc
add
mov
cmpsb
mov
sbb
cmpsb
rorl
and
or
sbbl
movsb
dec
jg
es
sub
jnp
or
push
insb
sub
jge
scas
mov
lods
cli
inc
xor
xchg
mov
rcll
add
cmp
mov
mov
push
mov
push
or
lods
in
xor
sub
jle
loopne
xchg
adc
add
jbe
inc
lea
inc
mov
add
fiadds
mov
xor
popf
and
or
xor
add
and
mov
nop
push
sub
ds
mov
nop
sub
dec
push
rclb
in
mov
lahf
int3
dec
scas
or
stos
test
in
and
pop
dec
ficoms
lret
aas
fcmovnu
push
and
mov
shll
roll
mov
js
and
inc
sub
sub
ja
mov
add
sbb
test
xor
loopne
ret
cmp
pop
pop
add
fnstenv
mov
xor
shlb
daa
loopne
jecxz
dec
mov
inc
mov
aaa
mov
loopne
mov
popw
push
xchg
inc
in
cmp
nop
in
jl,pn
or
add
lock
in
outsl
add
repnz
inc
arpl
xchg
jbe
fdivrl
inc
xchg
xchg
push
xchg
xchg
pusha
pop
mov
jecxz
or
or
aaa
cltd
mov
jae
test
pop
or
cmp
pop
inc
add
shrb
push
add
daa
mov
mov
push
inc
or
test
mull
adcb
xchg
ret
out
cmp
nop
add
icebp
test
push
or
xor
mov
push
inc
jecxz
sbb
pop
arpl
add
roll
ljmp
jnp
dec
adc
fldcw
ret
mov
fmull
xchg
pop
repnz
das
cmp
inc
icebp
xor
and
jns
and
in
jl
shl
enter
adc
stc
add
push
in
in
or
sbb
iret
popl
push
xchg
mov
sbbl
or
push
mov
loope
mov
es
cmp
out
sbb
loop
inc
mov
inc
push
push
fcoms
insb
mov
shl
xor
out
add
sbb
sbb
jns
sub
sub
add
pop
jg
push
mov
push
rcrb
xchg
mov
push
xor
or
adc
dec
sbb
fimuls
and
add
adc
adc
jae
lds
and
sub
lods
add
clc
data16
pop
xor
inc
jp
ror
cmpsb
push
or
mov
add
mov
sbb
pop
test
sbb
test
xlat
xchg
or
add
mov
push
sbb
adc
andb
xchg
into
adc
sahf
or
rolb
add
jecxz
xor
mov
orl
xchg
cmp
cld
xchg
cld
aam
imul
adc
jnp
dec
cmp
adc
mov
and
xlat
adc
cmp
jo
sbb
pop
mov
adc
enter
mov
push
sbb
lret
sbbl
or
pop
shl
jae
lret
mov
xchg
hlt
imul
adc
icebp
jl
dec
inc
xor
add
in
jecxz
sub
hlt
add
push
fnstenv
pushl
mov
push
fistps
mov
and
stos
push
inc
push
dec
es
inc
lock
pop
int
mov
ret
or
sub
sbb
adc
test
mov
pop
daa
in
dec
pop
sub
xor
adc
mov
push
or
push
andb
add
adc
bound
clc
push
roll
push
mov
pop
sbb
incb
sbb
jns
add
sbb
xor
fs
fcompl
scas
dec
inc
and
jg
enter
jg
jg
cs
mov
xor
dec
fs
cmp
inc
pusha
in
add
add
pop
shrb
jns
test
inc
push
pop
out
subb
fcoml
adc
jae
int3
push
xor
jecxz
rclb
in
jnp
or
pop
lahf
test
std
test
xchg
jl
shrb
sub
inc
test
mov
sub
jne
jecxz
xchg
cs
add
arpl
dec
shrb
inc
pusha
enter
jbe
mov
sbb
adc
pop
and
outsb
pusha
inc
clc
push
les
sub
js
aad
in
repz
rcr
pop
jmp
aad
cs
pop
jg
test
sub
inc
andl
xor
dec
jmp
les
push
xor
movsb
adc
dec
mov
imul
jnp
xor
adc
sub
xor
fiadds
xchg
sub
xor
loop
push
pop
and
faddp
dec
pop
cmp
and
fcmovb
pop
dec
cmp
pop
xor
mov
test
push
pop
or
bound
and
pop
dec
inc
fdivrp
pop
sub
cmp
xchg
inc
push
ds
ret
ret
lea
xorb
or
jmp
test
sub
push
push
dec
ljmp
pusha
push
enter
fcompl
add
in
les
ret
or
add
add
xor
stos
jae
add
and
push
cmpsb
adc
adc
loop
fisubl
clc
mov
mov
add
push
cmpb
dec
cld
imul
adc
sbb
loope
cmp
mov
xor
lock
and
mov
jb
sarb
add
pavgw
test
and
xchg
cmp
fs
cmp
inc
inc
mov
movsl
push
adc
jne
jl
add
ffreep
jge
fisubl
sbb
xor
repnz
popf
push
xorb
arpl
pop
jno
mov
add
mov
inc
mov
fs
xor
jl
jne
add
push
test
add
pop
or
orl
xor
pop
into
cli
mov
andl
filds
test
adc
imul
or
out
gs
sub
ja
xchg
inc
xor
mov
or
mov
pop
push
cmc
inc
mov
sub
cmp
xchg
sub
and
lret
out
mov
call
adc
jbe
jmp
sbb
cwtl
outsb
rorl
loopne
adc
xchg
xchg
mov
mov
inc
cmp
dec
clc
shlb
dec
cmp
add
sub
cmp
dec
test
stc
and
jb
xor
push
xor
push
rcll
or
push
sbb
dec
dec
mov
enter
sbb
pushf
lods
ret
push
jle
mov
cmp
lods
adc
mov
and
jne
add
jo
ds
push
inc
pusha
mov
jle
adc
jae
in
testl
into
nop
xchg
mov
cwtl
aam
adc
shll
ja
add
add
in
loopne
push
in
sbb
ja
jp
movsb
sbb
sub
push
daa
dec
cmpb
mov
mov
dec
jmp
push
cmp
push
push
xlat
mov
loope
xor
enter
mov
cmpsl
cmp
cmp
idiv
sub
rolb
rcll
mov
enter
inc
dec
sar
mov
mov
jns
add
dec
test
add
push
ljmp
dec
std
cltd
push
push
and
add
add
xor
inc
mov
scas
shrb
pop
push
add
fnstenv
adc
mov
sub
loopne
fcmovb
push
sub
dec
fdivl
pop
sub
pop
jecxz
jmp
add
lds
int
jp
pop
test
pop
sti
ja
push
mov
add
inc
add
add
imul
call
subb
es
cmp
push
jmp
inc
adc
nop
push
add
push
divl
aas
bound
dec
sub
xlat
sbb
or
push
jo
pop
iret
push
mov
push
adc
push
dec
test
mov
inc
popa
and
sti
jo
or
adc
cmpsl
push
push
add
jae
sub
shlb
push
and
in
insb
xor
mov
xchg
fs
aas
add
cmpb
std
add
test
mov
pop
test
jmp
push
xchg
or
cmp
movsl
nop
mov
js
or
inc
movsl
jp
js
jno
dec
mov
jae
fdivrl
cmpl
add
or
push
push
jle
push
ficoms
and
fldl
scas
in
and
loopne
add
and
aas
pop
inc
lea
dec
fsts
jns
add
adc
xor
mov
loop
rcrb
or
adc
lods
dec
xchg
daa
pushf
and
push
fwait
push
pushf
mov
xor
insb
adc
lret
rorb
js
or
and
pop
inc
push
enter
cmc
nop
shrb
jno
or
fnstsw
nop
sti
mov
cmpsl
mov
movsb
xor
scas
inc
sbb
inc
shll
nop
cmp
adc
inc
sub
adc
sbb
addb
sbb
mov
shll
mov
inc
mov
imul
pop
pop
or
add
movsl
fwait
aas
xchg
add
inc
dec
jae
addr16
dec
dec
lea
mov
es
mov
cmp
add
dec
fimull
push
jl
mov
pusha
pop
push
cmp
sbbl
inc
and
mov
jne
push
mov
add
outsb
call
jne
push
adc
lock
mov
cli
adc
push
popf
cmp
andb
jbe
daa
mov
push
mov
je
push
arpl
add
xorb
arpl
scas
scas
divl
jnp
daa
mov
push
or
inc
xchg
mov
mov
jno
cmp
push
add
pusha
jns
lret
scas
lds
lock
cmp
adc
cmp
push
std
cmp
int
movsl
or
push
jmp
mov
and
xchg
cwtl
mov
fcoms
insl
mov
loope
xchg
sub
mov
lahf
and
cmpsb
adc
rclb
je
scas
dec
cmp
imull
push
add
dec
ljmp
and
mov
jmp
cltd
incl
cmp
out
sub
or
lea
and
or
rorb
aad
and
sbb
xchg
icebp
les
int
add
dec
cmp
jae
jo
mov
jnp
lea
fbld
cltd
push
je
cld
or
adc
dec
inc
inc
imul
mov
scas
xchg
xor
mov
insl
adc
divb
mov
add
sbb
outsl
push
out
jle
sub
add
adc
std
daa
xchg
adc
and
jo
aam
ror
orb
enter
sub
fiaddl
xchg
adc
dec
lock
dec
xorb
inc
push
xchg
fs
inc
jb
and
and
and
sbb
adc
xor
add
sbb
insl
adc
repz
or
movsb
inc
add
shlb
data16
or
sti
and
lret
inc
push
mov
loope
adc
leave
sbbb
andl
movsl
aas
add
shll
push
xor
push
fistpll
jne
dec
icebp
add
sub
dec
adc
or
push
loopne
mov
fcoms
aaa
sbb
jnp
cmp
add
push
je
pop
iret
sbb
xchg
inc
push
xchg
rol
add
inc
adc
push
or
push
jne
fisttpl
mov
or
xchg
jne
out
xlat
cmp
fs
and
popf
xchg
sbb
shlb
push
xor
or
add
dec
cwtl
push
push
xor
cmp
add
xchg
mov
jnp
lcall
adc
setne
xor
clc
inc
inc
loope
sbb
push
mov
lret
jno
js
arpl
fs
loope
xor
sbb
movsb
leave
imul
pushl
clc
xor
xor
dec
push
shll
sbb
insb
mov
lods
pop
int
shlb
std
add
xchg
int
xchg
push
push
andl
rorb
pop
mov
mov
add
stos
mov
stos
sbb
xchg
jo
sbb
or
and
sbb
jbe
dec
xchg
pop
outsb
push
decl
and
leave
sti
add
add
movzbl
jmp
add
dec
es
repz
adc
or
pushf
or
fcoms
pop
dec
ret
test
mov
mov
fldl
cmp
or
push
mov
xchg
test
stos
or
cmpl
nop
jge
outsl
ret
or
or
pop
mov
insb
xor
push
add
dec
inc
dec
xor
jl
lds
mov
enter
push
add
out
push
lods
add
push
int3
add
insl
test
and
dec
mov
dec
sbb
pop
fdivrl
mov
cmp
movsl
jbe
fists
cmpsl
or
jbe
cmpsl
lods
sbbl
pushf
adc
popf
aaa
fadds
movsb
add
adc
dec
push
insb
xlat
and
dec
js
lret
call
test
or
sub
cmp
lret
out
add
xchg
inc
mov
jnp
popa
jb
push
add
bound
mov
adc
sub
aas
push
add
mov
mov
xor
dec
push
adc
sbb
movsb
dec
les
cld
push
cs
adc
clc
pop
pusha
test
test
fld
rclb
or
cld
fisttpl
stc
insb
dec
pop
jmp
mov
inc
scas
push
add
addl
outsl
rorl
add
ljmp
add
dec
adc
movsb
inc
and
das
cmp
in
push
ret
inc
popa
xlat
icebp
fistps
mov
push
aad
jle
inc
push
mov
movsb
jno
mov
cmc
push
mov
sbbl
push
loope
loopne
in
outsl
and
scas
add
ret
xchg
stos
lret
pop
rorl
out
inc
imul
aad
adc
add
dec
adc
lods
sub
insl
js
jbe
cltd
pop
addb
orb
mov
in
push
cmp
push
push
push
call
mov
add
push
adc
call
pop
movsl
cmc
es
or
incl
add
push
jecxz
sbb
fidivl
int
or
add
xor
xchg
mov
sbb
mov
and
in
aam
and
in
add
sbb
daa
xchg
xchg
add
add
pop
dec
sub
xor
in
jb
xor
cmp
xchg
lret
leave
in
or
pop
cs
xchg
inc
or
or
pushf
mov
addb
inc
imul
pop
adc
xor
mov
mov
add
nop
mov
sbb
int3
xchg
add
nop
rcl
loopne
call
pop
push
mov
mov
andb
fdiv
hlt
andb
flds
mov
pop
add
xor
nop
mov
xor
push
and
mov
add
dec
mov
add
sub
mov
cmp
add
jle
jmp
or
push
dec
add
iret
push
push
int3
sub
call
cmp
jb
or
xchg
mov
mov
iret
cmp
int3
push
sub
pop
jnp
pop
dec
inc
mov
outsb
ljmp
sbb
or
mov
loopne
outsb
add
add
add
add
mov
mov
stos
psubusb
ljmp
cmp
push
sbb
mov
mov
arpl
push
mov
ss
xchg
or
loope
adc
pop
mov
clc
es
or
mov
adc
in
fiadds
push
loopne
jg
ds
mov
nop
fsubl
std
push
jns
and
xor
in
xor
into
mov
or
stos
push
sbb
or
add
ljmp
and
xlat
or
sub
xchg
and
js
pop
push
cwtl
mov
push
dec
and
mov
sahf
xchg
add
dec
addr16
mov
cmp
lods
push
mov
adcb
lret
add
jecxz
add
xchg
addb
stos
dec
pusha
loop
sub
adc
pop
pop
test
push
add
rclb
inc
xor
adc
loope
dec
mov
and
inc
dec
rcl
pusha
sbb
jmp
push
push
inc
adc
out
adc
stc
lea
sub
mov
leave
mov
xorl
sbb
xchg
loope
mov
dec
insb
jl
lcall
jmp
inc
pop
xchg
or
daa
adc
xchg
or
daa
mov
push
inc
js
or
lock
and
pop
push
ds
inc
mov
cmp
or
jae
out
jns
inc
or
sbb
cmp
mov
sar
adc
inc
and
dec
stc
shr
dec
gs
les
mov
dec
mov
jae
push
enter
insl
add
jmp
mov
cmp
cmpb
pop
add
or
roll
outsl
add
push
inc
shll
pop
push
ljmp
test
sub
mov
sub
push
bound
shlb
xchg
pop
in
pop
pop
push
xor
sbb
loopne
in
out
pop
xor
sub
xorb
cmpb
adc
mov
add
push
cld
loopne
add
test
loopne
xchg
and
add
add
mov
sbbb
xor
or
cmp
pop
sbb
icebp
stc
inc
or
push
xor
adc
call
push
nop
in
fildl
add
xchg
lock
cmp
fstl
adc
inc
imul
js
sbb
fs
sub
cmpb
xor
sub
repz
push
xchg
mov
sbb
add
daa
in
or
pop
xchg
mov
xor
mov
add
adc
lret
or
push
push
test
xchg
or
scas
jns
lods
fistpll
pop
fbld
shl
jecxz
dec
sub
mov
popa
es
mov
jns
push
arpl
mov
cmp
sbb
ret
push
push
push
outsl
lods
mov
push
jle
cmp
add
mov
or
add
jecxz
sub
fcomip
or
add
sub
and
sub
push
iret
aam
fcoms
or
js
aaa
jecxz
and
and
aaa
jne
out
mov
or
arpl
mov
mov
cli
loope
or
mull
cmp
push
or
loope
repz
loope
jecxz
rcll
xchg
push
fxch
or
xchg
jnp
xchg
mov
inc
cwtl
or
cld
nop
push
jne
dec
push
add
sbb
repz
push
cmp
inc
push
pop
push
pop
test
push
xor
dec
push
mov
mov
lods
pop
es
cwtl
ret
lret
call
push
pusha
adc
mov
pusha
push
xor
lock
mov
outsb
in
xchg
aam
daa
in
mov
and
mov
jne
neg
decb
or
das
dec
rorl
sub
lods
push
jbe
xor
add
dec
fisttpl
leave
addb
xor
dec
add
inc
arpl
mov
push
fsin
mov
lods
dec
aad
rcll
cmp
mov
addl
push
lea
pop
es
pop
sub
cltd
dec
cmp
add
sub
roll
xlat
pop
nop
pop
xchg
adc
pop
jg
je
push
xor
jg
or
add
add
nop
test
dec
and
or
add
cmc
and
mov
pop
in
inc
and
jae
mov
aad
mov
jo
xor
pop
bnd
sbb
add
sbb
jae
lea
loope
push
mov
in
inc
mov
mov
cmp
stos
sub
in
or
popf
pop
cld
push
xchg
xchg
adc
jne
pop
mov
call
add
popf
lret
jle
shrb
ljmp
pop
jne
push
fisubrs
clc
incb
add
jle
int3
mov
mov
cmpsb
sbb
dec
sub
call
xlat
sbb
mov
and
js
notb
push
xor
mov
sbb
bound
fisttpl
or
inc
inc
std
cld
pop
dec
xor
add
adc
dec
pop
bound
and
inc
push
pop
out
clc
ds
nop
mov
xor
xor
arpl
mov
psrld
ret
add
call
loopne
hlt
add
dec
mov
and
stos
cmp
mov
nop
cmp
pop
jmp
cmp
cmpsb
adc
push
inc
adc
sahf
inc
pop
movsb
push
lods
mov
jl
ds
repnz
mov
sbbb
xchg
mov
ds
movsb
shll
cmp
inc
sub
or
pop
push
inc
mov
and
lahf
bswap
ja
pop
sub
push
addr16
adc
sub
and
sub
dec
jb
xor
dec
fwait
jbe
dec
jge
jmp
push
flds
jb
add
adc
mov
repnz
sub
push
daa
sub
fs
sub
pop
pop
fwait
push
jecxz
in
sbb
pop
cmp
or
aas
sbb
imul
dec
and
ret
outsb
mov
and
lds
jb
or
mov
xor
enter
push
push
pop
enter
bound
cmp
inc
enter
jb
or
nop
mov
pop
and
addb
les
dec
sub
stc
rclb
cmpl
push
sbb
sbb
xlat
add
fcmovb
shrb
add
sbb
sub
or
add
and
add
jbe
movl
lock
lods
add
aad
mov
enter
es
test
xchg
pop
pop
mov
sbb
mov
push
pusha
enter
push
push
or
fs
jl
inc
or
into
xor
sbbb
mov
or
sub
arpl
mov
test
lea
jge
adc
pop
sbb
xor
lock
jno
popa
cmp
inc
test
orl
xor
add
ja
jns
cmpl
das
sub
je
insl
idivl
loope
cmp
xchg
sbb
call
loopne
or
dec
pop
xchg
cmpsb
pusha
shll
mov
add
rorb
xor
push
xchg
aaa
and
xchg
push
add
pushl
mov
push
in
dec
lods
mov
mov
cs
aam
xor
sbb
or
clc
add
push
sarl
push
push
push
mov
push
idivl
add
push
test
cwtl
add
int
and
dec
mov
mov
loope
and
arpl
dec
xchg
xor
mov
inc
sbb
sub
clc
cmp
scas
aas
add
nop
imul
xor
jle
mov
lods
xchg
pop
fildll
mov
xor
and
jecxz
pop
pusha
push
or
cmp
sub
push
add
pop
cmp
out
or
sub
icebp
adc
inc
popf
sbb
xorb
scas
jns
dec
enter
outsb
mov
add
and
loopne
add
adcl
inc
mov
xchg
mov
addl
add
fcom
pop
sahf
add
or
mov
mov
cs
push
inc
mov
sub
adc
enter
movsl
lret
xor
mov
or
insb
fiadds
out
jmp
jmp
push
or
adcb
nop
add
jmp
jle
lret
inc
cwtl
data16
in
pop
sub
push
iret
mov
cmp
shlb
into
movsl
fisttpll
sbb
push
dec
insb
insl
seto
hlt
scas
nop
es
test
popf
fsubrl
and
ret
adc
xchg
xchg
loopne
push
or
push
pop
lcall
dec
push
xchg
mov
cmpsl
or
or
adc
sub
adcb
movsl
cmp
in
inc
jo
dec
or
and
or
rorb
xor
add
bound
shlb
or
mov
mov
aam
daa
pop
movsl
sub
aas
sub
mov
jnp
sbb
int3
xchg
lret
xor
or
mov
jge
rcrl
mov
sbb
push
test
fsubs
and
test
push
lods
imul
cltd
push
xchg
mov
ss
cmp
sub
lods
add
shr
jmp
push
pop
cmp
dec
sti
and
fwait
add
aam
negl
dec
add
jns
call
mov
pushf
inc
and
adc
push
notb
insw
mov
ret
pop
mov
mov
in
lret
dec
pop
sahf
cmp
jne
add
jle
or
sbb
add
insb
cmp
aam
xorb
aam
jecxz
subb
nop
cmp
test
dec
ffreep
mov
fnstenv
xor
or
cmc
lret
and
and
aad
sub
xchg
je
jle
or
popa
lock
or
lea
mov
xor
xor
or
cld
and
leave
or
movsb
dec
test
adc
outsl
fsubrs
pushf
xor
mov
pop
pop
push
mov
push
movsb
nop
js
cmp
inc
adc
jle
fs
push
push
xchg
ja
subl
cmpsb
or
mov
movsl
add
jecxz
pop
mov
mov
out
dec
mov
adc
pop
insb
lds
lahf
mov
aas
push
iret
jbe
dec
pusha
sbb
or
dec
pop
or
mov
ret
xchg
push
xorb
mov
test
packsswb
adc
pop
or
mov
push
xor
sbb
jo
mov
pop
test
stos
cltd
pusha
cmpsb
out
jb
addr16
push
imul
add
inc
add
loopne
adc
sbb
lock
dec
fadds
mov
mov
push
pushf
sbb
inc
jge
push
mov
rorb
cmpb
mov
mov
mov
push
mov
jne
cwtl
mov
sub
nop
adc
inc
xlat
cmp
and
insb
stos
movntps
adc
push
test
xor
repz
mov
fs
inc
cmpsl
jne
mov
xchg
or
hlt
push
js
xchg
dec
or
daa
rcrl
filds
cmp
cmp
mov
xor
mov
jne
pop
rol
adc
inc
iret
lods
mov
xchg
clc
or
imul
or
mov
jle
addl
sahf
pop
and
add
mov
iret
mov
cs
lods
inc
and
lahf
daa
addr16
mov
mov
inc
mov
sub
mov
sbb
mov
in
mov
xor
pop
out
or
pop
mov
addb
mov
scas
sbb
insl
pop
rcrl
inc
je
popa
jb
orb
es
pop
mov
adc
hlt
mov
sarb
leave
int
xchg
dec
pop
out
cwtl
or
add
mov
lock
mov
out
push
mov
dec
icebp
push
inc
push
mov
rorb
dec
in
mov
jp
mov
mov
or
or
dec
mov
push
ret
mov
sbb
je
flds
and
and
ja
mov
push
fistps
adc
test
mov
sbb
rorl
ds
and
push
push
mov
push
jne
push
fldl
xchg
adc
or
lds
mov
aaa
dec
mov
sub
adc
les
sub
push
adc
lea
scas
add
dec
cmp
dec
sub
mov
inc
rcll
jb
cltd
push
movsb
cmp
xor
sarl
lock
add
mov
jle
rorb
shrl
or
inc
rorb
movsb
and
mov
xorb
mov
sbb
clc
stos
mov
push
xor
push
lods
in
insb
add
ljmp
or
shl
pop
test
test
and
pop
rol
inc
imul
xchg
or
adcb
pop
lret
cmp
xor
mov
pusha
or
cmp
push
dec
jae
pop
dec
adc
popf
js
inc
addr16
fstpt
lahf
jno
and
ret
jbe
sbb
mov
pushf
add
js
cs
push
iret
inc
and
sbb
call
sbb
inc
push
xorl
mov
loopne
mov
mov
shl
xchg
lods
and
in
adc
sbb
xor
pop
hlt
sti
call
pop
jle
push
mov
cmpsb
sbb
sbb
repz
out
cmpsl
add
or
sub
jmp
imul
fwait
inc
test
sub
adc
push
push
sbb
xchg
mov
rcl
cmp
js
mov
pop
out
cwtl
jmp
xchg
cs
xor
int3
ja
or
xchg
cs
sub
movsb
or
andl
xchg
shlb
adc
bnd
mov
xlat
jb
pusha
and
cmc
ror
inc
push
push
shlb
shlb
or
sbb
in
leave
pop
popa
cltd
push
pushf
iret
das
mov
out
mov
mov
pop
or
push
pop
add
fisttpl
mov
das
mov
adc
enter
fcoml
sbb
lock
fadds
fcomp
inc
pop
pushf
xchg
or
adc
call
or
sbb
out
and
into
mov
outsl
pushl
test
pushf
fmuls
arpl
test
sub
roll
xor
cwtl
push
adc
test
and
clc
add
test
dec
add
sbb
aad
fmuls
cmp
xor
daa
stos
movsb
mov
sbb
mov
dec
xor
push
mov
add
sub
daa
adc
ret
icebp
push
mov
adc
mov
dec
mov
adcb
loope
push
sbb
mov
lahf
mov
cld
pop
or
aam
js
or
mov
jl
lods
or
sub
sub
mov
or
pop
inc
push
or
mov
sbb
fimuls
xorl
ret
push
or
xchg
arpl
xchg
fmuls
dec
repz
das
add
push
aas
repnz
rcrl
xor
or
jg
push
adc
mov
int3
in
popa
sub
fnop
ret
adc
add
les
and
sub
jle
mov
add
loopne
lds
in
push
ss
arpl
or
jb
xchg
cmp
inc
popl
mov
sbb
mov
add
add
mov
add
push
clc
cmp
push
addr16
icebp
mov
jo
mov
bound
psllq
jge
jo
shlb
push
sub
pop
cmpb
adc
sub
mov
lret
mov
aam
dec
bsf
nop
mov
jecxz
je
pop
sbb
add
sbb
add
and
aam
je
mov
aaa
push
jns
sub
sbb
lret
add
mov
dec
test
add
adc
sbb
mov
dec
mov
xor
or
mov
mov
mov
add
faddl
add
or
sahf
inc
dec
addr16
adc
xchg
pop
loope
cltd
and
or
rolb
movsb
out
gs
jl
inc
shl
dec
sti
mov
jmp
imul
xor
pushf
movb
shll
push
addr16
insl
cmp
add
cmp
or
pop
push
inc
adcb
inc
mov
loopne
ret
orl
shll
jae
dec
adc
pusha
or
shl
cmpsb
sbb
cvttps2pi
inc
fs
cmp
gs
dec
shll
and
adc
push
cltd
cmp
test
and
out
dec
xchg
pop
ret
popf
mov
out
mov
sbb
xor
negl
aam
dec
mov
lret
adc
pop
mov
pop
shlb
gs
jns
inc
push
or
iret
jb
adc
lock
test
pop
push
rcrl
pushf
jno
and
sub
mov
rorl
rcrl
in
jmp
fmulp
imul
pop
mov
mov
rol
adc
aaa
sbb
mov
inc
in
fdivr
in
aad
in
jge
mov
push
sahf
push
sub
push
gs
or
pop
or
adc
push
incl
pop
or
rorl
testl
pop
adc
mov
add
inc
jecxz
pop
enter
inc
test
ss
mov
loopne
xchg
or
pop
fwait
cmp
dec
or
nop
divl
push
fdivl
and
lret
aam
insl
daa
pop
outsl
or
xchg
and
push
fstp
ret
pusha
pop
sub
jae
ret
push
dec
adc
idivl
sub
pushl
sub
cld
pushf
mov
sbb
jbe
je
push
cmp
sub
or
insl
lahf
stc
cmp
push
dec
imul
enter
dec
pop
mov
pop
jecxz
mov
push
jl
xorl
mov
push
shll
or
fnstenv
adc
add
xor
xor
repnz
insl
and
outsb
sbb
test
and
sub
sbb
sub
loop
inc
xchg
sub
mov
mov
push
mov
imul
popa
lds
in
insl
sbb
lcall
scas
ss
int3
xor
pop
fiaddl
jmp
cli
jl
hlt
aam
push
ja
and
subl
pop
pop
pushf
jne
add
nop
scas
ljmp
fs
cmp
add
jne
pop
outsl
pusha
adc
cltd
pop
xchg
hlt
xor
cltd
push
add
mov
add
imul
push
test
xlat
leave
inc
mov
sbb
sbbb
test
enter
cmp
icebp
push
cmpxchg
adc
or
data16
push
in
xor
cli
es
or
push
dec
add
call
mov
je
and
lret
dec
mov
sbb
pop
sbbl
or
push
xchg
pop
sar
cs
inc
jno
sbb
add
dec
push
sub
or
inc
add
xchg
mov
mov
and
xor
inc
nop
xchg
aaa
push
mov
jp
add
clc
xchg
mov
lods
xor
pop
or
dec
mov
mov
push
add
push
xchg
dec
cmp
sub
pop
aas
cltd
in
push
sbb
sub
push
lods
and
ja
push
idivl
mull
adc
sub
leave
sub
and
inc
and
pop
fdivrl
dec
mov
ret
addr16
shll
es
repnz
pusha
and
mov
in
jg
pop
andl
xchg
jo
pop
jnp
outsb
aaa
pop
dec
sub
shrl
lock
mov
stos
jno
loop
mov
dec
and
xchg
add
daa
imul
pop
mov
ficoml
aaa
and
stc
mov
mov
shlb
xchg
dec
lds
inc
pop
xor
jge
daa
cmp
lcall
and
test
lea
aam
je
inc
and
cmp
lods
sbb
mov
adc
and
inc
dec
mov
add
cmpl
sub
pusha
dec
mov
imul
cmp
clc
push
dec
inc
stos
lock
sub
sbb
dec
pusha
mov
adc
adc
mov
mov
shlb
aaa
pop
lret
sbb
cs
int
faddl
pushf
xor
outsl
std
sbb
lods
sub
jb
add
out
loopne
cmp
or
push
nop
outsl
pop
sub
and
cmp
test
add
lock
int3
scas
lods
jno
pop
sbb
adc
adc
adc
popa
sub
fcoms
and
test
sub
daa
movntq
out
movups
sub
sbb
leave
mov
in
mov
jb
and
and
or
jo
adc
test
fadds
jle
fs
les
sti
js
gs
xchg
loopne
arpl
je
jo
cltd
ss
xor
xchg
insb
movsb
xor
inc
and
and
addb
xor
das
pushf
aam
xor
or
push
fisttps
push
fstpl
sbb
lods
sub
pop
rolb
lahf
mov
jbe
inc
or
xchg
jno
cmp
xchg
ss
xchg
sub
lret
jno
push
lods
ficomps
loop
hlt
jge
ret
mov
push
mov
xor
cmp
mov
or
jecxz
push
orl
scas
and
aad
and
push
ret
add
xchg
push
arpl
dec
in
dec
pop
lods
fnstsw
cmp
jo
fidivl
cmp
xor
mov
jb
repz
adc
lods
and
and
push
hlt
push
adc
out
or
add
jne
cmpsb
inc
imul
ds
in
add
mov
mov
ficoml
inc
stc
inc
stos
jnp
nop
cmp
push
mov
pusha
jbe
sub
sub
push
xor
inc
push
je
push
les
inc
aam
bound
mov
popf
mov
and
or
inc
add
xchg
adc
and
cmp
sub
in
pop
arpl
lock
add
mov
pop
comiss
dec
ret
test
and
dec
mov
sub
orl
and
xchg
push
mov
mov
test
cmp
or
xor
dec
ja
adc
sbb
sbb
add
mov
test
ficoml
lcall
xchg
sub
mov
inc
bound
ljmp
jge
mov
inc
mov
add
nop
sub
loop
lea
dec
adcb
mov
pop
pop
push
sub
sbb
rcrb
test
cmp
sahf
inc
add
push
adc
dec
ret
loop
je
push
cs
lret
or
clc
hlt
dec
xchg
push
sbb
xchg
test
adc
mov
jns
test
sub
aas
push
or
mov
ret
pop
mov
cmc
and
addb
pop
mov
int3
popa
push
push
in
adcb
shrb
mov
jns
icebp
and
test
dec
push
sbb
movsb
or
js
adc
imul
push
pop
push
cmp
inc
or
pop
sbb
aaa
nop
shrl
iret
pop
pop
mov
push
and
cmp
ret
push
sbb
sub
adc
mov
pop
das
or
xchg
inc
inc
inc
inc
inc
ret
cmp
jae
fs
movsb
cltd
lock
scas
mov
rcr
insb
dec
inc
add
push
jp
xchg
pop
inc
ret
loope
cmpsb
mov
ret
loope
jne
shrb
jo
inc
sbb
mov
xchg
adc
xlat
das
and
sbbb
inc
bound
aam
loopne
jae
mov
fadd
or
inc
sbb
push
xor
adc
or
push
add
xor
xlat
jo
add
sarb
jge
fsubrs
adc
dec
jmp
lret
mov
loop
inc
cmp
xchg
or
xor
in
adc
ds
inc
les
imul
popf
loopne
mov
adc
fs
dec
jecxz
imul
fimuls
mov
test
or
repz
pop
adc
and
aas
push
call
rorl
push
and
or
and
cmp
xchg
sti
andb
push
adc
xor
fnstenv
mov
add
loopne
push
mov
add
fcoml
fstpl
push
adc
add
pop
dec
adc
aad
jle
clc
je
xor
xchg
and
scas
negl
test
in
popa
mov
movsb
addr16
mov
ja
sti
fisubs
out
sbb
lret
jmp
fs
or
xchg
arpl
mov
adc
test
clc
jbe
das
outsl
fwait
insl
lahf
xor
xchg
sbb
aas
dec
lea
cmp
cmp
pop
xchg
sti
test
jg
sub
cmp
dec
sub
dec
mov
jne
jge
jmp
mov
ja
outsb
push
push
or
ja
mov
enter
or
inc
sbbb
mov
fdivrp
mov
mov
lea
adc
sbb
stos
es
push
sbb
rcrl
stos
mov
jmp
push
add
pushw
push
andl
or
clc
fidivl
jmp
push
cmp
addl
cli
stos
movb
adc
cmpsl
ds
pop
movb
icebp
mov
cmpsb
fmull
dec
xchg
loopne
push
cmp
cld
sub
cmp
cmp
fldl
jb
cwtl
or
xorb
mov
push
mov
gs
enter
les
add
les
lea
sub
push
adc
push
push
sub
mov
dec
push
inc
adcl
fsub
pop
sar
mov
jbe
insb
dec
adc
in
sbb
adc
dec
or
dec
pushf
pop
nop
fcomp
inc
xchg
sub
add
ret
bound
rcrl
lock
adc
add
aam
dec
xlat
jo
inc
push
inc
cmp
dec
cmp
or
cli
adc
inc
add
sbb
cmp
je
adc
rorl
pop
out
pusha
mov
fdiv
xchg
push
adc
inc
sub
push
sub
xor
inc
int3
bound
adc
ss
jbe
pop
add
addb
xor
add
add
mov
xor
je
test
pop
out
fmuls
adc
daa
sbb
js
pop
pop
sub
js
push
and
mov
mulb
mov
imul
or
cmp
or
inc
and
add
pop
push
mov
pop
es
or
pop
in
iret
mov
mov
xchg
je
cs
or
add
dec
jmp
dec
push
pushf
imul
dec
mov
adc
mov
les
inc
add
nop
dec
mov
or
mov
insl
adc
sub
mov
push
mov
stc
mov
xor
imul
sbb
xchg
jmp
add
pop
pop
pop
test
pop
jmp
and
jo
dec
sub
sbb
bound
mov
or
test
xchg
and
xchg
int3
into
inc
dec
add
pop
shl
fcomp
rolb
mov
and
jle
or
into
pop
pop
pop
adc
add
test
and
je
mov
inc
inc
and
and
cld
jb
ss
jne
lcall
push
cwtl
push
sub
aaa
pop
adc
cltd
adc
inc
ss
adc
cmp
mov
cmp
and
adc
aas
lock
and
rorl
xchg
sub
lcall
decl
xchg
dec
adc
sbb
fs
test
sbb
inc
or
mov
aam
scas
push
outsb
add
andl
push
inc
test
lea
add
sub
jnp
outsb
cmp
idiv
in
mov
aaa
sbb
add
xor
fnstsw
test
sub
in
je
sub
bound
jne
mov
inc
mov
and
jecxz
loop
xchg
pop
cmpsl
mov
lcall
fs
aam
and
cmp
dec
mov
and
pop
dec
pop
sub
mov
add
mov
out
add
sub
dec
jbe
leave
js
pop
mov
jo
cmp
xlat
jmp
aaa
sub
sahf
and
mov
inc
ss
std
xchg
pop
lea
inc
cmpsl
insl
jbe
aam
xchg
dec
fmul
push
sub
pop
or
loope
sub
push
pop
nop
mov
pushf
cs
push
fisttpl
fcoml
add
sbb
dec
test
push
adc
and
jo
shll
dec
dec
mov
mov
lock
adc
xchg
ds
sbb
jo
fcoms
push
cmp
icebp
add
xor
mov
push
mov
mov
pushl
mov
jle
push
jb
test
add
xlat
mov
xor
jo
cmpb
xchg
jne
cs
popa
xchg
mov
inc
sahf
pop
inc
testl
and
inc
adc
fldl
andl
sbb
cmp
xchg
pusha
inc
mov
test
push
push
push
repnz
mov
sbb
add
add
sbb
cmp
adcl
push
ss
and
dec
sbb
push
add
dec
jg
dec
xchg
add
xchg
or
nop
shr
and
loop
cltd
mov
pop
jno
jle
pop
dec
push
add
stos
and
add
add
sub
push
dec
cwtl
push
mov
jb
jge
cmp
cld
jo
sbb
test
and
iret
xor
dec
or
cmp
lahf
jmp
add
fcoms
and
lea
add
ret
cmp
insl
cmp
sbb
ss
adc
add
nop
cwtl
adc
xchg
dec
and
popa
mov
nop
popf
push
sbb
cmp
mov
push
adc
daa
sbb
adc
xchg
aam
xor
cwtl
aam
sbb
aaa
inc
pop
lds
lock
jb
out
popf
out
jmp
inc
lock
cs
sub
push
push
inc
popw
or
ss
pop
pusha
adc
repz
sbb
rorb
shlb
xor
ss
sbb
sub
test
dec
loope
jne
add
sbb
dec
adc
lret
int3
or
push
sbb
je
subb
jbe
rcrl
sbb
jl
xlat
es
popa
cmpsl
out
mov
mov
or
xor
mov
ljmp
cmp
pusha
adcl
and
add
pushw
and
push
and
mov
ss
mov
mov
fisttpll
inc
mov
outsb
pop
adc
and
lahf
imul
movb
popf
lahf
mov
xchg
fidivrs
popf
sbb
add
pop
cmpsl
lahf
push
and
shr
push
mov
push
pop
pop
in
xchg
lcall
dec
rcrb
cmp
inc
push
xchg
mov
dec
aam
les
stc
lahf
je
push
add
dec
sub
inc
popa
notl
sub
addb
add
push
adc
jnp
faddl
aas
subb
mov
aaa
mov
nop
xchg
in
and
iret
mov
push
pop
adc
add
jg
shlb
jae
sahf
cwtl
or
pop
sub
add
fldt
andl
daa
jne
leave
pop
daa
imul
mov
mov
xorb
outsb
or
push
fadd
pop
inc
inc
mov
pop
and
jo
mov
clc
lods
lds
or
adc
xchg
mov
inc
jmp
mov
mov
stc
adc
xchg
imul
jo
sbb
or
sub
call
add
lock
sbb
js
fidivrs
and
sub
bound
mov
inc
loop
push
stos
dec
adcl
pusha
addr16
cli
dec
sarb
fistps
cmc
mov
xchg
popa
and
shlb
add
sbb
inc
dec
inc
in
cmp
imul
push
outsl
test
adcb
inc
pushf
inc
push
loope
push
jns
cmpsb
test
inc
push
mov
jg
and
push
jae
movl
int3
shll
subl
inc
mov
pusha
dec
sub
loope
loope
insl
inc
xchg
and
pop
cld
and
push
push
loopne
jg
repnz
push
add
push
cs
add
test
add
mov
bound
hlt
sbb
scas
add
or
add
je
movsb
jae
mov
mov
xor
add
rcll
add
sbb
sbb
in
jo
pusha
jo
lcall
and
arpl
jmp
mov
sarb
jnp
insl
jmp
cmp
je
cmp
jo
jmp
imul
leave
adc
adc
sahf
mov
aad
cmp
dec
xchg
out
jmp
sbb
or
sbb
je
gs
data16
or
push
pop
insb
fiaddl
andl
cmp
jns
testl
jle
sahf
out
sahf
out
clc
xchg
lahf
stos
adc
jb
pop
xchg
add
popa
or
push
mov
loopne
add
je
sbb
fwait
loopne
icebp
jne
push
daa
fnstcw
je
je
pushf
or
orb
inc
pop
and
mov
adc
sbb
movsb
lods
add
mov
aam
xchg
or
sub
jno
fs
insb
sub
insb
or
sub
aas
jne
sti
add
in
push
je
jne
dec
jnp
dec
mov
jmp
lret
mov
xchg
fdivrs
push
pop
jmp
mov
cld
add
pushf
xor
jne
xchg
add
xor
inc
mov
inc
jecxz
int
fldl
push
push
cmp
nop
lret
in
jns
testb
or
shr
xchg
es
push
or
test
and
cmp
pop
lock
dec
outsl
dec
and
call
movsb
or
in
sub
mov
sbbl
xchg
sub
insl
jmp
imul
imul
sub
sbb
push
cmp
lret
fwait
push
movsl
dec
shrl
addb
inc
add
rcl
dec
sbb
into
hlt
push
sbb
ja
mov
cmpsb
icebp
xchg
ss
adc
xchg
test
insl
or
aad
sub
sti
adc
scas
mov
push
sahf
lods
pop
pop
in
jmp
sarb
pusha
sub
push
addr16
push
push
adc
in
jge
adc
xchg
lcall
mov
call
jmp
pop
jmp
adc
jmp
scas
jne
sub
mov
iret
mov
xchg
lret
and
pushaw
hlt
push
dec
mov
or
or
insb
bound
inc
sbb
mov
and
inc
xchg
xchg
cmp
and
mov
and
and
ret
sub
gs
sbb
mov
test
fildl
mov
push
fwait
mov
sbb
mov
outsl
scas
or
or
das
aad
jns
pop
pop
daa
adc
or
mov
push
shl
adc
mov
movsl
jno
sbb
and
adc
adc
cmp
sbb
ret
rol
mov
push
adc
sbb
add
xor
sbb
inc
xchg
shlb
lods
fs
cmp
sub
sbb
test
ljmp
sti
adc
or
xchg
aaa
inc
xor
add
cmpl
enter
xor
fldl
add
sbb
cmp
mov
insl
add
xchg
fstpt
gs
nop
push
jno
xchg
aaa
sbb
pop
or
insl
leave
sub
inc
or
dec
adc
test
push
inc
shld
aaa
das
push
mov
or
rcrb
adcl
inc
scas
test
fisttpl
push
mov
jns
andb
sarb
dec
enter
xor
adc
mov
xchg
es
or
ret
mov
sub
push
pushf
jns
sbb
test
push
or
outsb
loopne
or
xchg
push
loop
test
mov
add
xor
aas
push
movsb
aam
arpl
mov
cli
and
xchg
or
add
insb
nop
inc
inc
test
push
mov
sub
adc
mov
push
xor
call
mov
mov
mov
outsl
cmp
fistps
or
push
jmp
dec
roll
dec
add
push
je
inc
dec
push
mov
adc
add
sbb
std
or
pop
add
subl
bound
mov
mov
pop
push
mov
mov
test
lea
push
xlat
cmp
push
xor
or
clc
pop
push
in
xorb
xchg
fucomp
nop
pop
sub
das
inc
add
loope
or
mov
jmp
xchg
dec
pop
sbb
add
sbb
insl
cmp
cwtl
popa
popa
mov
and
roll
xchg
adcb
add
push
push
cli
push
sbb
std
in
or
call
sub
push
test
leave
orb
js
add
cli
xor
push
and
ss
dec
adc
push
add
sbb
sbbl
outsb
out
mov
les
dec
test
les
mov
xchg
adc
adc
int
adc
mov
or
add
adc
ret
js
or
adc
out
fidivl
pop
cwtl
and
testl
cmpsb
sbb
sbb
add
pop
shlb
push
or
mov
mov
stos
lcall
push
jb
cmp
xchg
movsb
cwtl
cli
mov
mov
inc
add
mov
fs
jp
add
pop
mov
mov
mov
add
shl
dec
sbb
pop
loope
mov
pop
inc
xor
lods
mov
xchg
orl
adc
sbb
rorl
and
adc
pop
or
adc
call
jecxz
in
jge
popa
sbb
enter
add
and
jmp
xor
addl
mov
sub
sbbl
adc
xor
loope
add
pop
xchg
loope
sbb
or
inc
std
jbe
jle
fs
inc
loopne
mov
jnp
out
lods
aam
jae
and
cmp
stos
pop
or
decb
adc
xchg
ficoml
sbb
adc
fisubs
rorl
push
sub
popa
movsb
inc
dec
mov
inc
shl
xchg
insl
mov
jne
add
int
cmp
xorl
sub
jl
inc
out
lret
aas
or
jp
jb
inc
lret
mov
insb
push
rcl
add
adc
mov
xchg
sbbb
add
push
xchg
xchg
cltd
pop
adc
pop
push
jbe
orl
jbe
enter
jmp
les
xchg
loopne
xchg
cli
in
lret
nop
and
cmp
jne
add
shll
adc
adc
lret
push
mov
cmp
jnp
dec
fcomps
hlt
sub
xchg
xor
dec
stos
les
imul
inc
imul
add
loope
cmp
movsl
je
inc
jmp
lea
jne
mov
ficomps
xor
cmp
mov
sbb
test
and
push
lcall
sub
push
call
jnp
orl
and
scas
add
xchg
mov
dec
mov
inc
or
pop
or
mov
inc
sbb
shlb
or
int3
pop
xor
cmp
sub
arpl
push
std
add
loop
fstl
adc
daa
adc
push
je
jg
sbb
sub
cmpsl
push
push
adc
sub
dec
mov
inc
addr16
cmpsb
dec
stos
push
inc
cmpsb
ljmp
loopew
arpl
xor
ds
aam
mov
sub
insl
push
push
and
popa
add
and
or
jge
pop
out
xor
and
or
pop
and
mov
mov
mov
loop
push
push
adc
push
pusha
imul
inc
lcall
rorl
dec
add
pop
ss
xchg
mov
dec
stos
push
sub
ret
push
sbb
mov
push
gs
popa
test
movsl
test
adc
add
dec
arpl
cltd
pusha
jmp
xchg
nop
test
pop
and
dec
push
loope
or
jmp
mov
adc
lea
mov
add
add
dec
xor
hlt
in
imul
lea
loop
jp
cmp
xor
push
nop
xchg
jb
enter
mov
and
inc
xchg
xorl
fsubs
pop
sbb
adc
xchg
aam
mov
cltd
out
adc
imul
mov
xchg
mov
jle
push
mov
aas
movsl
int
push
push
cltd
js
push
fbld
stc
mov
data16
daa
inc
jne
sbb
dec
xchg
add
ss
push
test
jecxz
incl
jmp
cmp
addl
shr
sbb
mov
loopne
or
push
push
pop
xchg
inc
or
cmp
adc
xor
test
mov
data16
sti
adc
je
pop
cld
data16
insb
daa
pop
jo
dec
mov
adc
je
test
loope
mov
mov
and
movzwl
xor
xchg
mov
inc
mov
cmp
jne
and
add
dec
es
icebp
push
push
hlt
push
outsb
adc
push
xchg
xchg
sahf
dec
mov
lock
jecxz
lods
lea
or
sub
dec
xlat
add
mov
sbb
insb
call
fs
pop
xchg
mov
stc
imul
inc
jne
shl
sub
lea
sub
push
jne
rclb
fstps
and
arpl
pop
in
adc
sub
mov
or
add
cmp
or
mov
shrb
dec
lods
shlb
fcom
mov
add
inc
add
adc
cmp
cmpl
addr16
push
bnd
mov
sbb
adc
adc
rcll
fistpl
sbb
inc
adc
fdivs
sub
add
and
hlt
data16
pop
daa
sub
or
inc
sahf
or
sbb
or
outsl
fadds
popa
sub
leave
insl
or
repnz
insl
mov
gs
push
enter
pop
push
or
inc
imul
into
loopne
movsl
insl
fucomip
fstps
punpcklwd
notl
xor
insl
int
lods
adc
xor
mov
add
hlt
push
mov
mov
adc
adc
mov
xor
add
or
ljmp
or
fistps
js
rcrb
pop
pop
and
and
xor
lea
repz
fbstp
jb
pop
loop
cmp
mov
add
push
mov
and
mov
clc
xor
fwait
insb
jne
inc
fisttpl
sbb
icebp
rcll
lods
iret
roll
das
or
or
push
or
repnz
sbb
inc
add
push
adc
jmp
push
xchg
sub
inc
push
cmp
xchg
add
dec
in
xchg
or
inc
mov
adc
ret
inc
jnp
jp
and
mov
adc
inc
stos
adc
rorb
mov
mov
add
aam
ret
fwait
xchg
les
jle
in
add
clc
or
mov
jle
dec
or
inc
shlb
push
push
xchg
xchg
inc
sub
and
lcall
mov
mov
cmp
push
add
xor
ss
ficomps
in
dec
sbb
stos
adc
xor
jae
dec
or
dec
mov
push
cwtl
js
hlt
and
xor
pop
inc
dec
pop
mov
es
and
pop
mov
cmp
lods
call
push
inc
mov
xor
jno
test
sub
push
in
or
jge
sbb
push
mov
cmp
dec
dec
das
push
or
add
das
xor
out
mov
pusha
xchg
xchg
dec
rclb
pop
sarb
inc
jb
dec
and
mov
stos
and
adc
andl
push
cmp
mov
push
rorl
lahf
lret
or
mov
es
push
int
sub
jns
or
mov
dec
in
test
inc
sbb
pop
enter
iret
jae
int3
or
push
jae
xchg
loop
or
or
inc
jl
sub
jns
rorb
sbb
jnp
loope
outsb
jae
out
inc
mov
inc
inc
cmpsl
enter
lods
rcll
mov
inc
leave
pusha
and
pop
add
xor
int3
pop
xorb
fsubs
int3
mov
scas
sarl
add
lds
movsb
cmovo
inc
push
movsb
mov
int
arpl
add
adc
adc
lods
rcll
jo,pt
jbe
je
sarb
adc
xor
and
repnz
pushf
pushf
mov
adc
flds
jecxz
fdivp
inc
push
fistps
mov
fmull
adc
inc
dec
gs
mov
xchg
or
adc
paddsb
xchg
lret
fcoms
dec
mov
popa
flds
roll
xchg
push
sti
sbb
mov
mov
adc
dec
add
nop
aam
pop
and
jo
icebp
adc
and
add
mov
rorl
inc
push
xlat
push
and
pop
cwtl
pop
les
adc
inc
mov
xlat
push
das
test
mov
jl
xchg
sbb
nop
sbb
jmp
sub
dec
cmpsb
sub
dec
inc
jg
mov
dec
call
add
xlat
push
or
mov
jg
into
mov
push
or
sub
test
jecxz
out
jge
bt
enter
ljmp
push
cmp
enter
lea
sub
rcrl
mov
adc
es
xor
pop
stos
mov
pcmpgtw
mov
rol
adc
cmovnp
adcl
jg
pusha
test
sar
jno
rcrl
xor
add
adc
in
sbb
test
sbb
sbb
imulb
pop
xchg
jbe
jae
test
sbb
pop
rorb
popa
repz
in
fiadds
push
push
dec
push
add
push
rorl
mov
jbe
jo
cmp
das
pusha
sub
pop
and
add
lock
inc
and
jmp
nop
mov
add
addl
pop
ret
xor
rolb
sbb
inc
pop
lret
popa
push
push
push
jne
int3
adc
movsb
sub
sub
or
outsb
add
inc
sbb
int
jo
mov
icebp
or
mov
mov
xchg
push
and
or
fdivrl
mov
pop
cmp
mov
adc
dec
ficoms
push
inc
cmc
sub
ret
add
cwtd
cmp
out
xchg
pop
sbb
push
das
add
dec
mov
add
out
ja
dec
inc
scas
pushf
pop
jae,pt
sbb
hlt
sub
and
xchg
cmp
or
push
sarb
mov
outsl
push
and
push
mov
add
popa
in
push
jp
add
je
adc
push
subb
pop
movsb
outsb
nop
inc
pushf
pop
cmp
add
mov
jbe
sub
fdivrs
inc
pop
pop
fucomp
inc
inc
jns
and
pop
xchg
ret
arpl
iret
sbb
test
push
lcall
sbb
inc
mov
cltd
sbb
mov
rorb
jmp
adc
xorb
test
test
sti
pop
jne
mov
xchg
sub
fimuls
mov
orl
shrl
or
xchg
mov
sub
xor
icebp
add
or
mov
jmp
daa
test
pop
call
cmp
in
lods
daa
enter
adc
or
cmp
push
stos
add
mov
push
adc
or
movsb
push
popf
pop
test
in
and
repz
orl
add
mov
mov
mov
sbb
add
push
xchg
stos
add
pop
or
mov
xor
or
and
ret
inc
jnp
or
pop
orl
push
xchg
inc
hlt
or
test
notl
pop
fcomps
nop
sub
mov
pop
mov
mov
and
push
pop
inc
test
and
iret
adc
mov
inc
test
popa
test
mov
bound
mov
addl
add
dec
pusha
dec
or
out
xor
int3
xor
sub
bnd
and
js
test
add
xchg
subl
cli
push
sub
sbbb
in
add
or
xchg
push
mov
adc
mov
push
xchg
push
sbbb
mov
sub
add
ss
and
out
psubusb
sub
iret
out
loop
jnp
adc
ret
mov
je
pusha
jl
and
fisubl
rclb
sbb
jmp
push
stos
in
xchg
pop
je
adc
push
dec
adc
sbb
gs
and
inc
push
enter
adc
sbb
ds
mov
cwtl
and
inc
in
jns
imul
push
repnz
mov
or
add
test
loop
sub
mov
xor
or
or
cmp
adc
adc
mov
test
push
pusha
rol
inc
sub
shlb
inc
and
mov
cli
sbb
cmpsb
mov
lret
sbb
nop
insb
bound
push
adcb
in
jl
add
js
push
enter
repnz
shll
add
fadds
or
inc
mov
sub
das
push
sbb
fwait
icebp
dec
mov
andb
adc
fisttpl
test
inc
cmpsb
or
pop
insb
shlb
or
lods
push
xor
lret
cmp
setl
arpl
fcompl
fcomp
xor
mov
inc
shlb
dec
jmp
pop
loope
xor
add
fisubs
push
ret
cmp
loopne
push
in
cmpsb
jge
sbb
popa
dec
jae
sbb
or
pop
push
mov
sbb
add
filds
or
popl
mov
add
add
push
mov
shlb
pop
sbb
incl
sub
adc
mov
and
mov
daa
pop
sub
push
adc
and
add
mov
popa
ret
aam
mov
adc
jo
enter
imul
cmp
push
roll
push
and
xchg
xchg
pop
inc
or
pop
aad
push
jo
mov
mov
pusha
insl
sbb
jge
or
repnz
add
adc
cmpsb
or
xlat
or
rolb
leave
add
lods
leave
adc
xchg
lods
cmp
dec
bound
mov
jb
jbe
jp
and
sti
ret
lods
adc
pop
pusha
adc
push
pop
out
das
and
js
stc
int3
xchg
mov
es
insl
sub
push
push
rol
push
repnz
shrl
pushf
push
loopne
addl
and
jo
mov
shll
scas
pop
push
inc
sub
fildl
loop
mov
pop
sub
pusha
sub
add
cmpsb
cmpl
sub
pushf
xchg
out
and
adc
mov
iret
daa
nop
mov
shrb
and
inc
mov
and
pop
fcomps
nop
inc
mov
sub
test
fwait
xlat
or
cltd
lret
cwtl
push
push
pusha
cs
clc
insl
lods
sbb
loop
or
mov
sub
pop
jnp
lods
sub
and
shlb
xor
mov
or
mov
cltd
and
lea
outsb
adc
ja
outsb
push
enter
test
movsb
nop
orl
push
in
in
into
sub
push
or
jecxz
add
lea
jp
xor
inc
sub
xor
mov
popa
popa
sbb
xchg
xor
adc
adc
jmp
push
mov
mov
lods
sbb
dec
loope
cmpl
movl
jl
mov
test
dec
mov
push
daa
cmp
in
and
leave
jae
aam
sbb
dec
shrb
add
in
sbb
mov
negb
inc
inc
outsl
or
mov
pop
addl
add
cmpsl
pop
sub
xor
sbb
add
shrl
test
mov
lods
add
and
inc
iret
cmp
rorb
push
mov
or
adc
mov
clc
pop
or
add
gs
push
mov
pop
or
push
cmp
pop
dec
popa
jecxz
js,pt
or
add
inc
dec
call
jmp
pop
mov
sbbl
xchg
aam
and
jp
or
or
out
mov
fmuls
pop
imul
xchg
xchg
push
push
adc
inc
push
add
bound
ret
imul
mov
dec
std
push
arpl
add
mov
xor
aas
sbb
inc
adc
inc
pop
dec
enter
fisubrl
pop
les
cmp
push
sahf
test
es
xchg
cwtl
or
enter
bound
mov
dec
mov
push
shrb
sub
mov
mov
cmp
sbb
mov
push
adcb
mov
jne,pn
sub
push
inc
insl
sub
mov
or
push
arpl
aad
cltd
cli
inc
add
xor
cmp
mov
cmpsl
lods
bound
ret
test
icebp
lods
sub
cmp
or
mov
push
data16
je
cmc
jns
subb
ret
xchg
jbe
or
pushf
ficoml
insb
loope
test
dec
or
lahf
cmp
xor
pop
jmp
es
into
cmp
inc
jo
or
mov
shll
mov
inc
or
add
or
push
sbb
pusha
mov
scas
pop
aaa
pusha
sub
push
jae
adc
and
popa
push
push
nop
mov
pop
push
jae
pop
inc
testl
mov
daa
pop
and
nop
pop
out
or
push
mov
movsb
or
rcll
popa
gs
push
ja
sub
mov
push
je
dec
jecxz
repz
inc
test
pusha
pop
or
dec
xor
add
inc
mov
dec
call
lcallw
jns
ds
lret
mov
and
adc
inc
xchg
in
add
sti
push
pop
or
xor
enter
pop
xor
decl
repnz
mov
adc
add
or
imul
or
adc
ficomps
loopne
add
daa
push
pmullw
add
in
rdmsr
or
enter
in
popa
inc
or
sbb
dec
fisubl
popf
cwtl
fs
mov
lods
stos
xor
xor
lods
xchg
pop
xor
xchg
std
in
sti
sbbl
or
mov
sub
adc
cs
shlb
insb
cld
test
mov
gs
sbb
sub
sub
mov
or
fsubs
aam
and
fstpl
jecxz
lds
rolb
sahf
or
xchg
xchg
cmp
dec
jnp
imul
and
xor
dec
push
and
pop
mov
jmp
mov
sub
sbb
or
xchg
es
lea
pop
scas
movsl
pop
sub
les
shlb
orb
repz
or
dec
leave
add
pop
and
adc
jae
sub
push
or
push
test
out
push
mov
fadd
sbb
sub
cmp
vcvttps2qq
fdivrs
jp
data16
int3
jb
push
cmc
sbb
lock
jmp
ret
mov
mov
or
add
adc
adc
mov
add
mov
cs
and
ret
iret
sbb
sbb
cmp
cs
adc
cltd
es
xchg
fcomps
sub
jnp
es
maskmovq
testl
jne
sbb
inc
test
sub
xor
xlat
jnp
push
lock
lcall
les
clc
fs
negb
xchg
rcr
and
pop
sbb
jnp
inc
outsl
insl
addr16
push
icebp
xchg
notb
pusha
lock
pop
dec
popa
sub
pop
dec
mov
add
mov
fcompl
fmull
inc
popa
jne
jbe
sub
inc
ret
ret
lods
jecxz
adc
jns
xor
add
sub
dec
add
xchg
rolb
jmp
xlat
push
test
js
jge
sqrtps
or
sbb
mov
pop
xchg
aad
loope
shlb
daa
inc
stos
mov
mov
and
dec
cmc
cwtl
arpl
pushf
pop
pop
xor
dec
inc
sub
fwait
and
loope
jae
or
sub
inc
mov
dec
mov
or
mov
inc
sub
sub
push
repnz
orl
shlb
push
add
mov
sub
and
sbb
mov
dec
dec
cmpsl
jp
pop
rclb
andl
jne
or
jge
cmp
ret
outsb
insl
sbb
and
jbe
push
sbb
inc
sub
and
rorl
sbb
dec
loope
adc
add
sbb
and
push
or
xor
sbb
pop
xchg
int
insl
bound
stc
stos
push
js
int3
jno
std
pop
je
xchg
imul
stos
and
sbb
mov
imul
mov
out
mov
push
scas
iret
cltd
jl
test
in
xchg
add
addr16
dec
sbbb
aaa
push
mov
sbb
iret
dec
mov
and
cwtl
and
sbb
fs
hlt
out
and
sbb
insb
test
add
dec
jl
call
xlat
jp
pop
inc
xchg
inc
test
and
das
cld
add
push
add
push
mov
insl
int3
test
movsb
pop
pop
pop
xor
sub
push
in
sbb
rolb
inc
sbbb
add
pop
jmp
dec
pop
dec
mov
jmp
sbbl
pop
jp
jl
dec
dec
test
in
push
push
int
rolb
mov
push
jmp
sbb
insb
or
mov
outsl
pop
push
xchg
jno
pushf
ret
mov
ja
iret
push
mov
xchg
rorb
imul
daa
dec
add
call
push
iret
sub
shll
cmp
dec
adc
inc
nop
cmp
push
xorb
les
pusha
pop
cmpsl
rorl
jo
inc
lret
xor
iret
or
sub
push
int
cmp
dec
lock
adc
repnz
insl
or
or
sbb
fcmovbe
js
push
pop
mov
mov
jbe
jl
sahf
cli
pop
adc
xor
stc
adc
les
js
add
ret
das
inc
and
shrl
push
mov
cli
sidtl
add
sub
dec
in
xchg
dec
imul
add
mov
adc
push
mov
inc
data16
mov
addr16
sub
sbb
popa
in
and
add
mov
aam
ds
pop
and
adc
dec
mov
ret
in
dec
cmpsl
lcall
and
icebp
sub
push
call
push
call
mov
shlb
push
addr16
inc
dec
xor
dec
fidivl
mov
jl
xor
mov
ss
cmc
dec
enter
xchg
sub
dec
jmp
in
addb
repz
sub
inc
jbe
decb
loopne,pt
inc
inc
insl
jbe
ret
jo
push
loope
testl
fcomp
sbb
pop
aam
and
inc
sub
imul
pop
inc
and
and
shll
or
sbb
push
dec
cmp
movsl
adc
mov
cwtl
mov
adc
mov
and
fisubrs
stc
pop
out
jnp
loopne
div
cwtl
and
enter
inc
sub
xchg
iret
sub
hlt
or
mov
cli
or
jle
lea
push
and
dec
out
and
cmpsl
fists
ss
popf
lods
mov
mov
test
push
popa
push
cmpsb
stos
push
lret
add
or
or
adcb
adc
arpl
sbb
xchg
dec
or
or
shlb
adc
push
movsl
push
divl
cmp
sbb
mov
mov
leave
sbb
jns
loopne
pushf
hlt
and
sub
push
dec
ja
mov
movsb
jp
push
inc
lea
mov
xchg
mov
jno
mov
dec
pop
xchg
pop
or
jno
sub
inc
fsub
es
ret
enter
loope
dec
cwtl
iret
out
iret
je
and
jge
je
sub
aam
mov
loop
xchg
faddl
fsubr
or
and
hlt
and
xchg
lea
sti
pop
or
andl
dec
loope
add
call
fdivrs
nop
cmpsl
aaa
addb
sbb
lods
in
mov
xchg
ss
daa
jae
das
dec
mov
or
icebp
mov
jg
int3
mov
sbb
xchg
int
sbb
add
int
mov
imul
jbe
in
cmp
add
ret
or
mov
and
xor
and
das
adc
cmp
movb
pop
test
shlb
subl
xor
pop
je
adc
xor
or
stos
adc
inc
adc
shrb
imul
aad
subl
push
sbb
popf
ficompl
and
adc
mov
lock
clc
and
stos
xor
fs
bound
and
add
mov
nop
fldt
or
or
or
cwtl
cmpsl
xor
sub
lret
cltd
sbb
nop
pop
in
fwait
in
sub
dec
lds
mov
divb
inc
add
jo
iret
add
sbb
sub
sbb
xorl
mov
mov
addr16
ret
sub
xor
push
mov
nop
stos
cmpsl
mov
adc
int3
cmpsl
pop
cs
shll
sbb
pop
push
dec
cmpsl
inc
loop
aad
test
inc
es
xor
pop
stos
inc
cmp
inc
mov
sbb
sub
rorb
in
mov
test
cmp
in
lahf
call
pop
sbb
addb
inc
push
fwait
push
sbb
mov
ror
mov
xor
rcl
pop
adc
fcomp
or
xor
push
jmp
sbb
or
jle
push
fisubrl
jne
andb
inc
inc
sbb
mov
test
xchg
fsubrl
cmpsl
xor
lea
test
add
xchg
adc
mov
xorb
xchg
mov
pushl
and
andl
imul
add
mov
inc
or
je
arpl
outsl
adc
sub
mov
aaa
mov
cli
popa
imul
or
aas
sbb
inc
mov
sti
pusha
pop
adc
adc
hlt
fimull
pusha
and
mov
push
cli
adc
sub
xor
scas
incl
in
add
stc
loopne
jo
or
or
sub
mov
loopne
cs
aam
jns
pop
or
mov
sub
adc
inc
pusha
test
push
xchg
std
das
sbb
adc
jmp
mov
push
addps
clc
insl
test
or
dec
dec
push
pushf
test
adc
pop
test
mov
cld
push
adc
hlt
mov
aas
pop
shrb
push
pop
and
popa
xchg
adc
add
test
cld
outsb
jmp
or
pop
sbb
jecxz
sbb
sub
pop
sub
inc
imul
shlb
cmp
andl
mov
lcall
adc
jl
test
clc
mov
call
or
add
ud2
iret
leave
cmp
adc
jns
pop
adc
fisttpl
dec
clc
dec
je
mov
repnz
push
sub
add
and
sub
dec
jg
clc
inc
notb
test
adc
adc
xchg
cmpsl
lock
xor
xor
js
rorb
daa
sub
adc
add
nop
push
roll
cmp
sub
push
lock
add
xchg
jl
pop
sub
fidivl
ljmp
sub
add
clc
inc
mov
mov
sbb
cwtl
outsl
add
adc
or
loope
les
ret
ret
dec
jl
cmc
push
mov
fcoml
pusha
add
or
push
or
and
icebp
imul
ret
lea
inc
xchg
popa
int
cli
ficomps
lock
add
sub
or
fldl
cmpl
loope
dec
in
mov
lcall
popa
inc
mov
aas
pusha
and
push
imul
es
testl
ret
pop
xchg
jnp
xchg
and
movb
scas
push
nop
nop
dec
adc
pop
cld
in
pop
or
jnp
push
cmpsb
push
mov
notl
xor
aad
xchg
add
xchg
sub
popa
inc
push
xor
xor
add
push
js
pop
cli
dec
add
dec
push
pushf
and
sbb
aam
add
add
cmp
std
mov
cmpb
mov
or
fisubrl
arpl
lods
add
adc
add
jle
hlt
in
clc
sub
sbbb
xor
jg
xchg
add
lea
cmp
jae
sub
aaa
dec
inc
push
push
jg
push
cmp
add
fildl
outsl
ja
jl
decb
je
pop
sub
pop
dec
into
sub
pop
mov
xchg
cli
mov
cmpsl
mov
ficomps
imul
add
cmp
lea
scas
js
xchg
cmp
je
xor
xchg
hlt
punpckhdq
test
mov
jmp
gs
push
lcall
push
adc
xchg
mov
pop
imul
push
cmp
cmp
or
scas
xor
push
inc
aas
jle
push
addr16
push
inc
imul
rolb
mov
mov
cmp
jns
pop
mov
pop
hlt
jne
jecxz
iret
loopne
sbb
ja
push
ret
add
push
aam
fnstsw
je
adc
lock
sbb
xchg
iret
add
mov
mov
mov
in
fnstsw
push
push
fistl
adc
xor
lret
mov
bound
mov
cmp
pop
loopne
or
pop
or
insb
movsb
fiadds
mov
mov
jmp
mov
xchg
and
cmp
sub
inc
mov
lea
or
int
jnp
ja
sbb
jle
test
sbb
dec
leave
inc
xchg
sbb
das
ret
icebp
pop
jle
call
or
enter
jns
imul
bound
imul
jge
insl
pusha
mov
mov
or
xor
sbb
in
insb
mov
add
or
xchg
loop
inc
adc
test
out
jbe
lods
jg
test
jl
pop
clc
mov
mov
test
test
pop
push
mov
mov
mov
sbb
int3
adc
test
mov
adc
xchg
jecxz
sub
mov
aaa
je
clc
adc
icebp
mov
fmuls
add
dec
les
inc
adc
nop
jo
push
ja
mov
xor
mov
push
daa
stos
dec
sbb
or
add
push
popa
dec
addb
fnclex
sub
jge
mov
push
sub
aas
push
jmp
out
adc
mov
inc
imul
mov
sbb
fcoml
xchg
mov
adc
sbb
and
adc
rorb
dec
push
push
sub
sti
pop
jge
pop
bound
pop
sub
or
cmpb
std
mov
loope
test
dec
push
das
mov
subl
push
jb
add
pop
or
mov
or
sbb
inc
sbbl
lcall
and
push
add
movsb
rcrb
and
addr16
and
inc
pop
call
lock
shrb
and
push
gs
mov
movsb
cwtl
cwtl
icebp
add
lock
inc
les
stc
xor
push
cmpsb
fcmovnb
test
pop
pop
aad
ds
add
aas
push
sub
or
rorb
sbb
lahf
or
rol
insb
pop
test
sbb
push
sub
iret
idiv
and
dec
push
push
adc
lret
adc
cmp
les
fstl
push
sub
cltd
dec
or
repz
lods
dec
mov
ds
lret
xor
rorl
test
mov
fs
cld
dec
add
adc
fdivrp
mov
test
mov
mov
pop
lea
inc
les
and
push
les
sbb
repnz
add
mov
add
sbb
sub
sub
test
adc
sub
stos
bound
mov
movsl
repnz
cmp
ffreep
sub
arpl
lods
fldl
in
repz
xor
stos
add
pop
and
push
hlt
add
repnz
int3
adc
bound
adc
popf
mov
pop
sbb
int3
imul
aaa
sub
int3
push
cmp
push
enter
addl
test
xor
pop
sbb
fstl
fwait
mov
pop
mov
mov
andl
sub
cmp
hlt
sub
pop
xor
adc
dec
sbb
mov
sar
adc
xor
jns
repnz
mov
pop
cmp
in
lahf
rolb
imul
sbb
mov
sub
jge
loop
inc
je
loop
pop
mov
sbb
pop
push
push
orl
pop
mov
adc
arpl
adcl
call
inc
int
les
fcoml
or
sub
inc
lcall
je
es
cvtdq2ps
or
cmp
test
ja
cmp
inc
rcl
adc
js
jno
lods
sub
jbe
dec
and
adcb
sbb
clc
pop
inc
inc
xchg
jle
cmp
cmp
bound
test
sub
cmp
jne
cmp
inc
clc
fcoml
lods
jns
or
lahf
inc
mov
jb
sub
jge
inc
movsl
push
rol
imul
movb
dec
movzbl
push
sahf
dec
or
in
in
jmp
fwait
dec
movsl
ljmp
sbb
ret
enter
or
jae
and
adc
mov
mov
aam
cmp
jmp
xor
and
xchg
xchg
add
dec
dec
dec
adc
mov
lret
inc
mov
push
add
fwait
sub
mov
or
ds
and
pop
xchg
adc
sahf
push
sbb
lcall
orl
imul
dec
or
and
and
push
popf
mov
loop
push
mov
dec
adc
nop
idivb
je
jl
mov
insl
fisttpl
addb
pop
add
pusha
hlt
push
dec
dec
repz
loop
and
xchg
cmp
sub
mov
push
imul
xorb
pop
mov
je
dec
cltd
push
mov
xchg
ja
sbb
or
xor
mov
orl
mov
or
sbb
decl
xchg
mov
outsb
jl
lds
xor
cwtl
mov
or
xchg
dec
call
mov
cmp
rolb
repz
or
cmp
sbb
shlb
inc
inc
lock
inc
ret
lea
mov
xchg
mov
addl
rcrb
nop
add
xchg
add
cs
add
leave
rorb
sti
inc
jle
cmp
fists
mov
out
sub
and
dec
cmp
jmp
loopne
xor
int3
mov
loopne
jbe
mov
sar
jbe
std
inc
roll
dec
cmp
jo
add
mov
push
sahf
cmp
lock
and
lahf
cmp
pop
mov
inc
fmul
jmp
xchg
movsl
outsl
inc
std
sub
add
repz
mov
dec
xchg
scas
cmpl
or
xor
add
adc
popa
loopne
push
pop
jnp
lds
loope
lds
sub
add
test
xchg
adc
push
cmp
adc
push
push
or
por
icebp
rclb
mov
ret
and
imul
pop
pop
test
orb
fs
add
mov
add
jg
adc
and
push
pop
stos
hlt
lahf
pop
jmp
push
pop
in
pop
cmp
hlt
and
stos
sti
aas
cmp
push
imul
call
adc
sub
push
adc
add
aaa
ljmp
nop
dec
dec
hlt
inc
push
jecxz
cmp
imul
and
push
mov
rcll
push
fwait
jecxz
nop
aam
adc
stos
xchg
add
xchg
shl
mov
cmp
jmp
push
les
les
xchg
or
lea
mov
or
xor
sub
pop
sbb
push
push
loopne
pop
or
cmp
add
int3
call
pop
ret
call
or
sbb
fimuls
jnp
ss
add
push
cmp
jmp
add
adc
aas
popf
inc
adc
sub
sqrtps
push
mov
rolb
aas
dec
aas
push
scas
xchg
addl
daa
push
cmp
dec
push
inc
inc
jb
push
cs
jle
dec
sub
xchg
sub
push
loopne
aas
push
dec
push
in
pop
push
aas
or
push
cmc
push
push
mov
fs
xchg
in
sbb
fadds
xchg
arpl
and
dec
and
nop
leave
inc
add
pusha
push
outsl
push
dec
and
push
or
std
jb
dec
adc
lcall
and
cld
mov
lahf
push
xor
shlb
dec
jg
xchg
lret
lret
mov
cmp
fildll
stos
stc
adc
sub
mov
cld
sti
es
xor
lock
lahf
push
les
stos
add
inc
loope
xchg
lea
cwtl
cwtl
and
dec
decl
cld
and
add
push
subb
orl
loop
mov
cmp
adc
or
test
in
call
dec
cltd
clc
inc
dec
inc
insl
jecxz
fldenv
pop
lret
cmp
inc
push
xchg
push
sbbb
or
faddl
push
add
in
lea
adcb
pop
shlb
xchg
inc
outsb
lea
cmpb
incb
outsl
add
addr16
add
jno
stos
loopne
popa
mov
inc
add
stc
sahf
adc
aaa
into
ss
popa
imul
popf
jno
movsb
adc
sbb
popa
xchg
jl
sub
add
or
push
or
orb
jecxz
add
cmp
add
adc
jle
push
add
and
mov
push
mov
mov
push
mov
mov
or
mov
push
insl
lea
cmp
cmp
out
clc
sbb
add
ret
mov
and
mov
xor
jo
dec
out
push
nop
subb
ss
add
repnz
sub
jne
xchg
je
and
adc
pop
movsl
rolb
mov
jecxz
sub
adc
push
fisubl
inc
cltd
in
dec
jae
adc
js
pop
push
jg
inc
or
test
leave
push
xchg
jo
jl
je
push
mov
popa
cmc
jmp
test
cmp
adc
imul
fstps
movsb
arpl
mov
rcr
mov
sbb
pop
xor
pop
dec
stc
xchg
mov
lods
or
popl
push
mov
add
adc
mov
jl
cltd
dec
imul
outsl
sub
xchg
sbb
std
lds
add
leave
ret
aaa
adc
mov
and
ljmp
int
je
pop
and
fld
fnstenv
daa
roll
fildll
insb
push
mov
iret
movsb
mov
hlt
jbe
pop
push
xchg
mov
les
rorb
or
xor
push
sbb
adc
xor
push
aam
sub
das
fcomp
dec
lods
mov
ret
mov
or
sbb
pop
pop
jb
in
push
sub
and
pop
enter
xor
movsb
cltd
dec
pop
jne
add
mov
add
add
and
shrb
or
fldz
stc
xchg
negb
inc
xor
adc
sbb
shlb
push
loopne
ret
clc
xor
adc
and
push
and
andl
jmp
subl
xchg
push
jno
aaa
and
movsl
fs
xor
xor
enter
fistpl
mov
inc
add
mov
mov
cmp
adcl
cld
adc
pop
iret
test
int3
rolb
and
stos
cmp
and
and
jno
popa
adc
xor
roll
or
into
mov
fs
jbe
adc
adc
jecxz
iret
cmp
dec
je
mov
loopne
mov
adcb
inc
jecxz
pusha
add
cmpsl
pop
lret
or
clc
scas
test
ret
mov
leave
xor
rorl
in
call
shll
jnp
mov
movsl
xchg
mov
mov
add
or
popf
pop
lcall
xor
aas
inc
jecxz
rclb
adcb
adc
nop
dec
dec
pop
push
sub
loop
sbb
mov
push
mov
insl
sbb
orl
inc
dec
lcall
std
data16
inc
inc
xor
push
mov
test
jnp
or
or
ret
gs
testb
xor
add
loopne
push
aas
xchg
das
lods
shlb
inc
rol
jo
arpl
imul
fidivrl
jge
ja
pop
ret
mov
jmp
out
add
adc
testb
imul
add
jbe
out
xchg
adc
add
aas
or
xchg
or
popa
jge
adc
mov
sbb
cmp
ja
jbe
cmpsb
mov
mov
inc
in
jb
int
push
xlat
cwtl
inc
add
mov
mov
icebp
dec
dec
imul
add
push
mov
inc
leave
push
dec
inc
popf
std
fisubrs
pop
dec
add
sbb
or
clc
mov
icebp
pusha
roll
and
jmp
jbe
xor
shlb
xor
xor
shlb
pop
into
lock
and
mov
lods
sbb
call
add
sub
pop
xchg
adc
xchg
pusha
in
push
and
sub
sbb
mov
xor
test
xchg
filds
leave
add
push
imul
fiaddl
fnsave
adc
lods
jne
stos
jmp
pop
or
or
push
mov
mov
loope
cmp
inc
pop
loopne
inc
xchg
pop
test
or
add
pop
int
and
adc
ret
push
inc
dec
sbbl
loop
les
cmp
adc
rcrb
push
push
addl
and
push
insl
inc
xor
fdiv
leave
test
shrb
in
sub
lea
std
divl
push
inc
inc
loopne
pop
cmp
cmp
sub
mov
pushf
sub
and
dec
stc
sbb
mov
mov
adc
push
ret
mov
sbb
xor
or
in
mov
popf
lock
xor
push
jl
call
xor
push
add
sbb
pop
clc
je
mov
out
inc
push
pushl
mov
sbb
mov
es
gs
jmp
and
mov
in
add
rcrl
lock
in
ret
and
xor
sbb
loop
stc
lods
adc
mov
or
jne
inc
sbb
and
or
push
lea
mov
arpl
or
sub
inc
sbb
pop
sub
and
test
add
dec
divl
decb
xchg
fimuls
sub
ror
xchg
nop
push
test
jmp
sub
js
or
xlat
mov
test
push
add
inc
icebp
add
add
fstpt
out
loopne
pop
insb
std
subl
sbb
xor
pop
jle
push
adc
sbb
sbb
sbb
and
cmp
add
push
push
push
add
pop
inc
rol
enter
dec
dec
cld
dec
dec
lret
fdivrl
cmpb
addl
pop
jl
test
mov
xor
jns
xchg
sbb
or
add
adc
mov
jo
sbb
xchg
in
ljmp
loopne
adc
push
rolb
incb
lock
pop
add
or
push
sbb
lret
mov
pop
aaa
loope
mov
mov
fmuls
pop
pushf
cld
inc
test
and
push
andl
cwtl
fildll
push
jl
or
cmovbe
shrl
cmpl
dec
pushf
pop
adc
cltd
dec
loope
inc
or
sbb
push
sbb
sbb
jg
out
shlb
dec
rclb
add
arpl
int3
or
pusha
in
aam
jns
mov
or
inc
or
xorb
cmpsl
and
push
outsb
fadds
pop
mov
adc
push
pusha
rcl
mov
mov
mov
ret
cld
dec
push
cmp
pop
cmp
popa
mov
stos
ret
mov
shll
push
add
pop
or
or
shlb
out
dec
mov
cmp
dec
or
test
adc
ficompl
jb
pop
pusha
xor
clc
push
and
fdivrs
ja
push
sub
add
sbb
je
jo
scas
sbb
aaa
lock
or
push
lock
cmp
xor
adc
xchg
fisubrl
sbb
cltd
mov
insb
jbe
pop
xchg
or
cmpl
add
and
mov
cmp
add
popa
xchg
in
or
je
mov
sbb
roll
sub
and
sbb
psadbw
add
and
dec
xor
and
testl
xchg
loope
repnz
jo
ljmp
pop
adc
or
push
adc
lret
jecxz
leave
or
push
hlt
jne
jp
pop
and
out
jno
push
ljmp
add
inc
addl
add
mov
adc
std
xchg
add
ss
xor
and
pushl
das
or
jmp
push
icebp
shrb
out
leave
cli
inc
cs
arpl
lds
aam
mov
sub
push
jecxz
inc
or
mov
sub
imul
inc
sbb
xorl
inc
inc
lock
jmp
mov
mov
addl
fwait
icebp
xchg
add
flds
add
mov
fs
jb
add
std
push
test
hlt
jae
adc
push
lea
cmp
xor
enter
ret
xor
cmp
push
mov
sarb
sub
add
mov
and
int
dec
inc
jnp
jbe
push
les
lret
xchg
sbb
rolb
push
fnstsw
adc
call
nop
jl
enter
fnstsw
ret
inc
lret
cld
and
xor
sub
xor
mov
jne
das
or
add
sub
jge
mov
enter
push
mov
lret
loopne
xchg
push
mov
std
hlt
jne
faddl
notl
and
or
rorl
xor
push
aad
mov
and
sbb
jp
pop
mov
pop
jle
xchg
dec
add
in
pop
mov
je
mov
addl
mov
dec
int3
or
dec
stos
fisubrl
inc
push
cmpsl
inc
shrb
int3
xchg
add
xchg
jne
jg
add
push
and
mov
xchg
add
adc
add
push
mov
lcall
jge
mov
or
hlt
adc
jg
scas
pusha
cmp
in
jle
out
orb
fiaddl
and
mov
and
stos
lock
inc
faddl
sbb
dec
fs
add
dec
jg
adc
orl
call
and
jge
xchg
hlt
rorb
and
and
jle
jmp
jbe
add
sub
lret
andb
call
cmp
pop
aaa
cltd
subb
enter
cmpsl
pop
xchg
jae
scas
shll
sub
push
popa
and
jns
inc
bound
or
sbb
loope
ret
repnz
dec
loopne
sbb
xchg
pusha
push
jbe
inc
lret
inc
xor
push
and
jo
insb
and
dec
rclb
enter
cld
ret
inc
jns
inc
or
pop
mov
or
cmp
je
cmp
clc
sbb
and
hlt
and
xor
pop
inc
or
sub
ret
and
add
dec
dec
shrl
mov
ficompl
rolb
and
fldl
addr16
je
cmp
xchg
jo
inc
xor
cmp
jbe
clc
push
push
or
mov
aam
out
sbb
add
call
and
loopne
sti
adc
mov
push
push
decl
push
push
movsl
popa
mov
mov
shl
fstpl
pop
jmp
sub
or
push
xor
dec
mov
dec
push
ss
jne
movl
int
loopne
push
aad
stos
orb
dec
in
push
lds
mov
mov
popf
pushf
mov
mov
in
lock
nop
mov
add
cmp
fucomi
rcll
jo
sub
or
out
dec
fdivl
cs
arpl
jne
jo
adc
fwait
or
aaa
mov
push
cmp
popf
call
les
rclb
jne
movsb
sub
test
in
xchg
in
leave
inc
rcrb
mov
cmp
sbb
popa
push
cld
inc
inc
xchg
jl
adc
dec
jb
insb
cmp
add
lret
out
adc
lret
dec
cmp
sar
insl
push
aas
mov
push
pop
jl
pop
loope
enter
jge
aam
ret
rolb
enter
jae
test
or
mov
outsb
jns
lods
inc
fdivrl
sub
dec
sbb
jne
popf
bound
loopne
jne
mov
imul
int3
or
lock
aam
mov
rcrb
fwait
mov
xor
cmp
leave
xor
mov
or
xchg
dec
xor
adc
xchg
dec
xor
and
xor
and
cmp
leave
and
inc
inc
dec
and
insb
xchg
cmp
jl
adc
into
scas
and
hlt
scas
dec
aaa
movsb
call
enter
sbb
rcl
jo
movsl
subl
test
in
call
dec
loopne
inc
push
dec
xlat
mov
mov
in
adcb
int3
xchg
and
inc
das
push
call
or
lock
push
adc
push
in
push
rcll
xor
push
shll
mov
adc
jb
call
or
push
sub
aaa
mov
popaw
inc
out
enter
push
in
mov
aaa
insb
jmp
in
fcomps
loopne
lods
add
out
in
sbb
out
inc
out
xor
cmpl
xlat
xlat
jbe
fnstsw
and
lock
scas
add
fsubl
xchg
inc
jo
nop
mov
or
mov
mov
leave
mov
push
fdivr
clc
gs
cmp
pop
lcall
mov
xor
test
mov
inc
call
call
inc
push
xor
push
shll
dec
sub
dec
jecxz
nop
xchg
mov
in
in
sub
xor
dec
das
adc
or
mov
pop
and
mov
push
jo
iret
pushf
inc
sub
inc
fcmovnbe
mov
push
fimull
movsb
and
push
add
pop
inc
test
mov
shrl
mov
cmp
sbb
ficompl
imul
psrlw
adc
inc
pop
or
pusha
and
mov
outsl
fadd
nop
inc
mov
jo
sub
imul
add
mov
frstor
ret
mov
dec
outsb
cmp
sbb
xchg
sti
cmp
dec
xlat
insb
xor
push
fnstenv
js
and
or
loop
call
movsb
and
adc
or
or
cmp
or
or
bound
or
sub
xchg
adc
mov
cmp
rcrl
or
pop
loopne
andl
xlat
sbb
inc
aad
aam
inc
push
jmp
push
pop
xor
stos
jl
mov
add
xchg
adc
add
ret
xchg
inc
ret
push
xchg
jecxz
stos
xor
add
or
stos
jno
jmp
xor
movsl
jnp
adc
inc
jmp
pop
scas
pusha
jmp
xchg
imul
das
adcb
repnz
xchg
inc
ficoml
xor
js
lods
push
inc
les
loop
push
fnsave
aas
pusha
and
mov
test
adc
sbb
insl
mov
and
push
into
push
dec
out
insl
sub
inc
ret
pop
push
test
je
or
minps
call
test
fsub
fdivs
jno
inc
inc
and
ret
rcl
mov
xchg
mov
mov
pop
nop
cmp
les
enter
addb
icebp
mov
dec
mov
test
leave
add
mov
mov
xlat
aam
lret
push
sbbl
inc
fcoml
aad
dec
lea
pop
pop
fidivrl
int3
adc
sbb
into
adc
out
shr
out
ja
mov
mov
scas
push
or
sub
mov
xchg
push
inc
rcll
es
mov
jnp
push
imul
aam
inc
sbb
adc
test
push
push
popa
or
test
test
lods
mov
cmp
cmp
cmp
enter
push
xor
outsl
and
xchg
daa
movsb
mov
or
push
pop
enter
push
or
add
stc
sbb
push
cwtl
ret
adc
jecxz
push
adcb
icebp
ret
loope
rcrb
mov
add
popa
divl
gs
cmpsb
xchg
inc
push
jne
subb
jne
and
fcmovnb
cmpsb
jl
stos
gs
and
sub
rol
pop
lds
jbe
hlt
fucomp
nop
mov
add
push
adc
pop
leave
popa
push
push
sub
xor
pusha
add
in
jno
sub
aad
push
jp
or
push
test
andb
sbb
cmp
stos
jno
lds
jmp
or
out
cld
add
sub
fadd
sbb
test
pop
test
inc
daa
mov
lods
std
or
nop
pop
stos
mov
sti
aam
nop
nop
sbb
add
jg
decb
cltd
or
pop
mov
clc
pop
jge
addb
dec
pop
lea
fwait
in
mov
sub
adc
push
insl
push
adc
jne
pop
mov
loope
pop
test
aad
cmpsl
stos
or
jmp
pop
or
movsl
xor
cmp
pusha
jnp
and
push
nop
loopne
aam
mov
enter
sbb
pop
adc
js
jnp
and
fmul
push
jb
inc
add
xor
dec
and
adc
clc
inc
mov
sub
mov
shl
push
loop
sub
dec
dec
inc
inc
mov
call
insb
pop
pop
inc
pop
lods
test
jne
push
sbb
sarb
lock
hlt
popa
sub
mov
int
and
fs
jb
mov
shlb
push
addl
dec
cmp
cmp
in
movsb
mov
es
adc
das
mov
inc
push
adc
push
mov
leave
cmp
pop
test
fisubrl
and
das
pop
in
stos
add
in
loopne
fs
cmp
jne
or
loopne
les
sbb
les
call
mov
addb
xor
test
jae
sub
in
mov
mov
adc
jmp
cltd
push
adc
rcrb
nop
ror
sbbb
call
inc
adc
shrb
imul
push
cmpsb
xchg
mov
gs
inc
and
add
enter
dec
mov
hlt
inc
and
adc
jno
sbb
mov
adc
leave
cwtl
xchg
inc
dec
dec
dec
cwtl
mov
in
nop
dec
outsl
movsb
xchg
pop
xor
pop
shrb
xor
add
mov
inc
repnz
cwtl
jmp
imul
mov
ret
bound
cmp
ret
in
stos
add
mov
add
andnps
add
outsl
mov
push
jp
je
xchg
movl
cmp
pushf
xor
jno
enter
rolb
mov
pop
xchg
mov
iret
aad
out
aam
daa
fstl
inc
push
mov
mov
ja
or
imul
fs
inc
mov
mov
cmpsb
jmp
sbb
or
mov
sbb
adc
clc
mov
mov
push
or
bswap
andl
jmp
xor
leave
mov
jmp
sub
mov
jne
cmp
mov
insl
fbstp
daa
and
inc
loopne
pop
repz
cmp
divb
lods
imul
xchg
out
or
lods
push
jmp
push
push
adc
in
flds
jecxz
and
jno
les
pop
test
js
outsb
sub
outsb
mov
mov
lret
push
adc
les
mov
out
jno
jns
xchg
inc
outsl
cwtl
outsl
pop
push
inc
adc
inc
mov
push
jo
inc
rclb
pusha
add
lds
inc
inc
fisubrl
rorb
cli
int
add
inc
inc
mov
jns
jo
popf
inc
jno
rclb
js
mov
cmp
ror
push
add
leave
xlat
cmp
aaa
lods
inc
adc
pushf
es
jno
jecxz
push
xor
ret
in
sub
mov
jno
jb
and
dec
mov
shrb
push
daa
mov
cmp
add
aaa
mov
in
and
rclb
add
adc
or
dec
or
push
mov
or
inc
sub
mov
jae
or
call
sub
inc
je
xchg
mov
push
ret
loope
stos
jne
fsts
sbbl
sti
fdivr
mov
push
fiaddl
pusha
push
ljmp
inc
mov
adc
lods
es
and
jns
jne
popf
sarb
aad
pop
fdivrs
pop
mov
adcb
sti
push
movsb
and
push
xor
sbb
test
les
cltd
push
lock
insl
and
aad
pop
push
jo
or
adc
xchg
mov
sbb
xchg
psubw
sub
mov
mov
adc
add
testl
ljmp
std
test
cwtl
jno
adc
inc
dec
jnp
mov
inc
lods
inc
aaa
pop
pop
cmp
mov
and
cmp
idivl
dec
cld
xor
testb
lods
and
sub
or
pop
adc
and
lahf
ret
push
pop
adc
push
ret
xchg
fs
xchg
sub
pop
sbbb
jp
inc
jb
jg
jp
popa
dec
adc
in
movhps
test
inc
stos
pop
rclb
add
or
subl
in
sbb
and
sbb
or
adc
mov
test
push
mov
sbb
and
adc
or
push
dec
cmp
mov
movsl
push
and
gs
insb
mov
xor
jl
mov
inc
loope
jge
inc
inc
push
enter
dec
test
sbb
mov
jge
movsb
les
dec
daa
imul
arpl
out
jo
inc
in
popa
pop
insl
ja
out
push
and
es
enter
jne
pop
aas
shlb
xor
pop
mov
xchg
fsubrs
loope
xor
es
adc
lods
in
nop
mov
sbb
es
aas
cmc
cwtl
ret
lea
mov
aam
gs
adc
lret
ret
mov
cmp
in
adc
jns
inc
jb
shll
call
sub
call
dec
int3
shl
add
dec
xor
inc
add
and
shlb
sbb
fiaddl
inc
mov
inc
adc
mov
sbbb
xor
push
cmp
pusha
and
cmp
mov
arpl
addl
pop
cmpl
inc
in
adc
psubusw
mov
in
addb
fadds
mov
movsb
or
xlat
test
inc
pop
je
sub
test
inc
jb
in
add
in
xchg
cmp
add
push
xchg
jbe
inc
test
mov
fcoml
insb
adc
add
das
or
xor
inc
fdivs
mov
adc
mov
xchg
xor
loopne
cmc
mov
cmp
stos
or
pop
dec
mov
or
daa
xor
fbld
mov
insb
inc
test
push
mov
adc
out
xchg
inc
imul
adc
movsb
fsubl
mov
fs
pop
scas
add
lcall
xchg
add
mov
sti
enter
adc
xor
push
push
in
test
pusha
cmp
mov
sub
adc
dec
pop
test
adc
ljmp
mov
adc
dec
cmpsb
xchg
test
xchg
pushf
or
xchg
sti
cmp
cmp
movsb
mov
loopne
add
nop
clc
outsl
mov
mov
aam
mov
cmp
adc
inc
adc
cwtl
sbb
les
cmpsb
inc
fmull
int
addps
mov
push
mov
adc
xchg
inc
les
insl
orb
int3
inc
sbb
jno
sub
mov
cwtl
sbb
repnz
addb
test
sarb
in
movb
sbb
xor
arpl
rcl
pop
mov
adc
imul
xor
xlat
popf
mov
loopne
pusha
orb
addr16
fs
or
mov
testl
daa
lea
add
and
or
in
fcoms
add
or
mov
and
dec
xor
adc
sub
sbb
and
cmp
jb
imul
dec
and
sbb
fcompl
xchg
dec
xor
and
xchg
dec
xor
sub
push
in
xor
and
add
xor
add
push
enter
in
dec
fsub
call
lock
aad
sbbb
pusha
inc
adcb
les
add
dec
les
les
jnp
xchg
mov
ja
or
daa
jno
ftst
inc
cmpsl
dec
push
push
pop
xchg
mov
jecxz
addb
popl
out
add
sbbl
or
out
imul
push
pop
sub
jge
or
std
or
orl
adc
mov
pusha
xor
adc
sbbb
and
mov
cmp
xchg
fists
pop
inc
cmpsl
inc
mov
subb
jg
push
push
mov
mov
cmp
xchg
sysret
fs
subb
je
sti
xor
sub
add
loopne
mov
mov
ret
or
in
xchg
jno
andl
icebp
call
mov
add
xchg
or
popa
or
dec
dec
in
inc
mov
adc
test
add
pusha
ret
xor
pusha
inc
or
cmp
adc
shrl
add
xor
cmp
and
adcb
or
and
jecxz
push
jbe
jo
sub
xor
inc
add
or
enter
pop
xor
mov
hlt
xchg
in
call
aas
and
add
cmpsb
or
adc
mov
adc
in
shrb
sub
in
fadd
test
aas
inc
dec
outsb
inc
test
mov
stos
shll
fstpt
and
fs
adc
ret
orl
imul
test
cwtl
test
cmp
sbb
xor
cmp
add
shll
add
jbe
cmpsl
adc
dec
mov
test
cmp
int
add
test
push
aam
or
lea
clc
test
ja
pop
jo
test
call
xchg
lds
sub
lds
adcb
stos
jae
test
pushf
jne
or
sahf
lods
and
loopne
lahf
mov
mov
call
sub
mov
push
call
inc
sarb
xor
push
xor
push
cmpl
sbb
stos
mov
pop
xor
mov
mov
fmull
pop
and
test
mov
test
pushf
mov
pop
jl
push
add
cwtl
sub
xor
pop
aad
in
sbb
lock
or
cmp
pusha
mov
jbe
insl
sbb
mov
push
lods
arpl
movsl
and
clc
popf
sub
fstpl
and
sbb
or
shrb
jae
jns
xor
inc
sahf
in
mov
sbb
lds
push
jl
lods
inc
cmp
inc
or
mov
sbb
pop
cltd
cmp
jbe
mov
cmp
loope
test
movsl
xchg
and
in
pop
aam
adc
cmpsl
les
xor
je
pop
and
push
fadd
sub
mov
push
fs
in
or
push
mov
test
inc
test
xor
movsb
sbb
cmpsb
fadd
push
bound
mov
dec
mov
push
dec
in
loopne
push
inc
add
mov
aam
add
imul
enter
add
scas
popf
mov
cltd
int3
xchg
in
pop
sub
cltd
and
aam
out
andb
les
les
or
lods
test
and
inc
test
inc
mov
sbb
in
xchg
mov
lahf
add
adc
ljmp
and
lds
push
mov
clc
dec
pop
push
pop
inc
loop
scas
fstl
inc
insl
mov
inc
pushf
insb
fisttpll
loopne
hlt
test
sbb
lea
hlt
mov
jbe
cmpsl
cld
xor
add
in
shlb
and
dec
stos
adc
add
imul
or
mov
loopne
xchg
mov
inc
insl
clc
adc
sti
mov
and
stos
jge
xchg
sub
push
add
lock
cmp
cltd
fsubs
enter
int3
add
test
movsb
lods
inc
xorl
aaa
pop
enter
or
adc
push
sti
stos
adc
mov
dec
sti
mov
orb
test
jb
adc
push
push
adc
sub
add
adc
es
jbe
adc
add
xor
and
mov
inc
les
es
movsb
and
fiadds
push
add
movsb
add
jl
or
insb
out
mov
mov
add
sub
xchg
jo
in
adc
das
add
sbb
pusha
dec
das
lods
enter
dec
enter
mov
pusha
sub
push
push
rorl
and
repnz
pop
lock
je
cmpsl
fcoms
call
mov
add
insb
fcoms
orb
inc
add
jp
xchg
mov
mov
cld
mov
xor
adc
mov
arpl
and
mov
push
adc
jae
cmp
dec
add
xor
scas
push
test
adc
mov
mov
or
pop
aaa
enter
int3
add
pusha
push
add
or
xchg
hlt
or
cmpsb
in
adc
add
enter
cmpsb
in
outsl
mov
push
scas
fistl
icebp
mov
add
inc
lods
dec
rcr
xchg
jne
adc
aam
push
mov
fcoms
pop
enter
repnz
pop
out
or
cmp
jecxz
push
adc
mov
in
adc
pop
xor
push
push
mov
xor
insb
in
push
incl
inc
insl
mov
lahf
mov
pushf
xor
jmp
insb
imul
mov
xor
sub
aaa
in
inc
jo
cmp
or
and
inc
mov
les
add
add
mov
inc
add
pusha
xchg
icebp
out
xor
mov
sbb
xor
ffree
add
pop
int
push
aam
cmpsl
or
notl
cmp
mov
adc
out
idivl
mov
mov
mov
in
xor
loopne
add
mov
dec
sarb
inc
lock
mov
dec
aad
mov
ficomps
xchg
xorb
pop
push
pop
and
adc
adc
sbb
xor
popa
stos
sub
cmp
lock
movsb
in
repz
in
sub
and
mov
inc
xor
adc
rclb
mull
cld
mov
mov
shlb
add
adc
call
rclb
aad
in
sti
fistpll
mov
fmuls
ljmp
in
enter
dec
rol
cltd
insb
mov
sub
sbbb
loop
mov
pop
fsubrl
mov
mov
xor
fs
mov
mulb
pop
nop
push
push
imulb
dec
test
and
fldenv
or
gs
or
dec
jno
aas
xor
ret
arpl
mov
popa
insb
add
xor
mov
pop
push
nop
inc
jo
or
les
push
adcb
cltd
push
or
mov
cmp
inc
mov
enter
add
xchg
push
js
mov
inc
push
push
jbe
add
mov
jl
sub
xchg
mov
cld
xor
push
sti
in
int
movl
add
rorl
xlat
xchg
fs
inc
scas
jge
mov
loop
nop
cli
and
sarl
cmpl
xchg
and
popf
xchg
mov
inc
add
pusha
sbb
cmp
and
jb
stc
add
pop
push
or
adc
fs
imul
xor
faddp
ficompl
lock
cmc
je
fcompl
mov
mov
mov
cmp
sub
xchg
pushf
std
adc
push
mov
stc
imul
push
xlat
mov
and
pop
add
out
lock
cmp
add
out
cmp
add
pop
xor
movsl
xlat
sahf
out
data16
aas
pop
adc
stos
xor
imul
xchg
add
mov
in
pop
rolb
lods
jg,pn
or
push
in
inc
aaa
mov
mov
ljmp
dec
mov
fistpl
or
jnp
mov
add
mov
rolb
das
mov
rcll
xchg
adc
fwait
filds
or
cmp
rclb
cmpl
test
int
lock
nop
add
into
pop
adc
test
add
push
inc
xor
out
pop
push
fistps
adc
enter
fadds
adcb
lock
rdpmc
add
pop
in
aad
incl
sub
fistl
sbb
and
jae
push
bound
and
insb
outsl
arpl
imul
cmp
jb
js
je
jb
gs
push
insl
dec
repz
cmp
outsl
add
add
add
sti
push
mov
push
gs
push
je
arpl
jne
jb
outsb
je
inc
lods
std
lcall
dec
xor
xor
jmp
das
jo
insl
or
pop
mov
push
dec
add
lret
shrb
dec
fsubp
add
dec
add
ja
jbe
and
add
das
dec
mov
es
cmovno
in
push
adc
mov
fdivrs
daa
dec
dec
je
and
mov
outsl
push
push
jo
dec
cmpsb
jne
addr16
jae
fistpl
add
insb
out
pop
ljmp
pop
imul
jnp
mov
bound
jne
outsl
and
pop
jnp
outsb
and
pop
xor
neg
fsubrs
out
iret
jns
out
mov
iret
popa
sahf
jne
subl
arpl
pop
push
pop
jbe
scas
jne
jae
push
mov
fidivrl
pop
out
inc
insb
fcmovnbe
outsb
push
ds
neg
iret
mov
insl
mov
jg
std
adc
cmp
add
jne
iret
fs
dec
and
jns
add
das
lods
lds
push
inc
inc
gs
testb
mov
dec
arpl
je
jle
je
inc
jne
jne
xor
pop
mov
dec
jne
xchg
outsb
xchg
inc
jo
imul
bound
inc
out
cmp
mov
into
cmp
xchg
outsb
xor
ja
inc
into
jne
xor
mov
daa
push
gs
fstps
adc
and
jae
cmp
jbe
inc
xchg
aam
aas
add
pop
jp
jbe
mov
dec
incl
fildll
pop
insb
inc
push
jl
in
jne
jns
repnz
inc
inc
adc
push
insl
and
jb
cmp
jle
and
mov
repnz
insl
pop
cmp
inc
cmp
dec
adc
mov
dec
into
inc
inc
orl
push
add
stos
push
in
mov
pop
je
aaa
xlat
loopne
push
and
and
jecxz
pop
add
dec
adc
daa
scas
insl
stos
scas
ja
push
push
shll
jle
jne
imul
outsb
dec
imul
aas
imul
pop
in
out
test
fwait
mov
sarb
bound
movsb
mov
jmp
jo
mov
mov
stos
insl
sub
addb
pop
push
into
ja
out
mov
shrl
inc
push
xor
pop
ja
insb
mov
pop
scas
loope
dec
sub
push
push
push
sub
pop
insb
lcall
xchg
in
cmp
push
or
jae
daa
inc
imul
fbstp
pop
out
jecxz
outsb
bound
jnp
push
pushf
add
ret
mov
mov
xor
mov
cwtl
sub
fbld
or
push
mov
jb
ret
add
mov
pusha
repnz
xor
movsb
daa
outsl
andl
xor
fidivrl
jg
push
sub
push
outsb
pop
sahf
aaa
lcall
iret
sub
fbstp
enter
dec
fbstp
jne
jbe
jb
mov
jae
push
enter
jg
in
cli
rcr
pop
stos
bnd
das
rcl
mov
loop
jae
pop
push
mov
jo
mov
jp
lahf
outsl
aas
or
pop
or
scas
jbe
fisubs
sbb
add
fisttps
add
imul
jb
fs
imul
rcll
cmp
jnp
xor
inc
xchg
sbb
clc
cmp
push
lods
ret
mov
pop
add
sbb
push
sbb
stos
pop
fs
pop
insl
lret
je
scas
cmp
out
xor
xchg
pop
dec
jne
popw
pop
jecxz
test
sub
insb
add
dec
addr16
pop
pop
add
cmp
push
cmp
loopne
out
fbstp
adc
das
mov
jae
imul
sbb
sahf
out
lcall
jae
sarl
sbb
push
das
push
dec
stos
xor
pop
sahf
dec
scas
and
out
lcall
jns
out
xchg
cld
mov
insb
loopne
loop
dec
aaa
add
add
push
jp
ds
xor
push
mov
sbb
das
or
pop
ja
out
add
cmp
mov
dec
insl
pop
mov
xchg
imul
or
outsl
ret
inc
jecxz
ffree
mov
cmp
add
push
inc
ljmp
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
add
aas
inc
inc
inc
inc
cli
inc
dec
dec
dec
dec
dec
dec
dec
dec
sbb
or
push
sub
cli
bound
pop
pop
pop
fs
jmp
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
divb
lcall
loopne
cs
and
repz
ret
mov
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
dec
push
imul
insb
outsl
outsl
pushf
rcrl
push
arpl
sub
mov
add
jo
xor
popa
js
fdivl
faddl
dec
pop
push
or
push
outsl
push
sub
test
scas
outsb
jne
insb
adc
fisttpl
push
push
add
add
add
xlat
adcb
cmp
push
add
xor
push
push
pop
imul
hlt
and
add
pusha
push
add
fimuls
inc
add
or
xor
sbb
cmp
addb
push
xchg
test
int
lods
add
orb
popf
fnstenv
push
and
sub
jb
sbb
in
int3
push
jo
add
push
jl
movsl
nop
jbe
mov
ja
and
xchg
sbb
push
jge
mov
add
call
pop
push
pop
nop
inc
add
pop
push
add
and
xchg
cmpsl
dec
pop
or
enter
test
enter
mov
or
lret
add
fmuls
sbb
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
push
in
add
cmp
faddl
inc
es
and
sub
dec
inc
add
inc
addl
add
add
mov
mov
leave
stos
ljmp
add
cmp
add
add
mov
or
sbb
sbb
in
pop
insl
sbb
fildll
inc
ret
jle
add
addb
incl
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
mov
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
jmp
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
and
mov
sub
inc
mov
mov
mov
adc
clc
aaa
add
outsl
ja
pushl
fs
cs
jae
jb
bound
arpl
outsw
jb
icebp
popf
mov
ss
popa
lret
addr16
icebp
imul
daa
pop
lea
dec
sub
addr16
outsl
js
push
add
push
pushf
insl
jg
and
insl
jo
jo
and
and
insl
or
shlb
aaa
insb
les
dec
imul
jns
inc
mov
cmp
ds
cmp
dec
inc
jb
jns
daa
push
mov
movsb
and
daa
jo
mov
insb
and
testb
arpl
je
and
inc
inc
imul
fsubrl
push
jbe
pop
rcrl
mov
jns
outsb
pop
jb
and
fldt
je
xchg
pusha
inc
jbe
sbb
push
lahf
fs
push
fisubl
fisubs
ret
cmpsb
mov
inc
pop
mov
imul
pop
or
jo
sbb
pop
daa
mov
mov
mov
mov
or
mov
pop
pop
pop
push
push
jae
or
scas
lods
jbe
aas
cmp
mov
push
xor
imul
sbb
outsb
gs
mov
data16
pusha
adc
xchg
fucomi
das
mov
push
push
push
push
dec
testl
xor
repnz
and
outsb
enter
aad
lods
filds
dec
jge
and
jo
insl
jle
jb
imul
imul
add
jg
xchg
inc
outsl
jae
sub
xor
xor
das
gs
jne
je
in
popa
lds
inc
jg
sub
lds
push
or
pop
jne
pop
das
je
outsl
xchg
ret
daa
xchg
mov
popw
mov
sahf
negb
push
jl
cmp
or
ds
jmp
push
das
push
sub
lcall
sub
sub
int3
cmp
sub
sub
push
jmp
push
cmp
mov
jmp
inc
mov
push
dec
outsb
ds
mov
dec
pop
pop
jne
jb
sbb
xor
pop
fs
ds
das
subl
pop
jo
ss
gs
inc
jb
addr16
adc
push
data16
sub
fs
mov
inc
jo
sub
push
addr16
scas
sub
pop
mov
out
sahf
cwtl
mov
sahf
out
push
dec
inc
xor
ror
out
imul
sbb
jns
adc
or
cld
cmpsl
int
hlt
push
jge
imul
push
lock
pop
cmp
push
push
in
pop
push
call
out
loopne
es
push
fcoms
aam
jns
out
ror
enter
out
sahf
mov
mov
xchg
mov
out
mov
call
jns
out
push
iret
repz
loopne
int3
les
mov
xor
jns
testl
mov
fistpll
dec
sub
rorl
iret
repz
push
xor
mov
adc
data16
mov
pop
jns
push
xor
add
inc
dec
mov
bound
data16
push
adc
outsl
aas
mov
xchg
jmp
test
fs
sbb
psraw
repz
aas
cmpsl
ficoms
pcmpgtw
mov
add
inc
dec
push
push
sar
push
or
and
xor
push
dec
inc
dec
cmovns
cmove
push
adc
cmp
adc
adc
jg
stos
inc
call
rclb
mov
es
xor
jnp
inc
loop
mov
ds
pop
adc
incl
jg
lret
sbb
jb
jge
arpl
cmp
pop
pop
dec
scas
jp
jno
in
fstl
incl
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
out
lahf
or
mov
jns
mov
add
test
shrl
leave
hlt
mov
adc
xchg
dec
les
repz
xor
dec
in
mov
or
icebp
pop
pop
repnz
adc
hlt
and
es
sub
add
inc
push
dec
push
push
ret
in
adc
or
outsb
jbe
and
adc
out
imul
mov
push
into
mov
sbb
push
add
dec
sbb
sbb
sub
or
pop
inc
sbb
sbb
push
dec
and
aaa
adc
cmp
dec
adc
sub
das
sbb
ficoml
cmp
dec
adc
and
jb
jbe
in
sti
negb
cmp
add
add
dec
sbb
pop
in
neg
in
sbb
pop
pop
add
adc
sub
push
xor
dec
inc
sbb
aas
and
sbb
dec
dec
and
fucomip
insl
add
and
lods
dec
dec
or
add
fildl
ljmp
dec
and
dec
ficoms
or
sahf
loopne
xor
das
out
inc
inc
add
jnp
pushl
cmp
push
and
sub
pop
sbb
xor
cmp
xor
mov
push
sbb
adc
and
mov
or
cmp
sub
out
or
add
adc
cld
dec
push
or
es
test
jbe
adc
inc
lea
cmp
sub
add
pop
pop
add
mov
das
ret
sti
and
adc
cmp
inc
sbb
inc
insb
jns
mov
cmp
das
sbb
xor
xor
cmp
or
and
mov
sbb
int3
or
movsl
lods
mov
jle
xor
cmp
adc
rcr
and
js
sub
or
push
or
cmp
fisubrs
shlb
push
lock
ja
cmp
xor
add
or
or
add
mov
dec
inc
xor
popf
loopne
sub
push
pop
pop
jo
adc
jecxz
push
ja
pop
pop
and
pop
ljmp
fsubs
inc
pop
adc
dec
nop
dec
cwtl
dec
pop
lock
in
push
cmp
mov
cmp
jns
testl
sahf
out
sahf
push
add
iret
sarl
icebp
lock
fcomip
cmp
repz
mov
cmp
lahf
shll
je
jbe
loop
pop
xor
addb
adc
jge
or
adc
adc
push
popa
push
outsl
insl
les
lods
jg
outsb
arpl
cmc
gs
out
gs
mov
jne
cltd
mov
call
imul
bound
xor
cvttps2pi
int
jae
sbb
inc
push
das
sti
xor
out
sub
je
add
sahf
pushw
jbe
out
ss
and
push
sbb
adc
out
cmp
scas
pop
dec
push
push
push
cmp
sub
jb
dec
dec
xchg
sub
push
lds
or
mov
xor
aam
dec
aaa
es
int
cmpsb
js
adc
add
add
push
mov
out
pop
add
push
pop
aaa
sbb
jnp
or
inc
sub
xor
ja
push
push
pop
movsb
and
push
push
mov
push
inc
add
pop
and
mov
pop
cmc
push
push
cmp
in
push
xor
push
fsubrs
test
insl
jmp
cmp
or
pop
mov
add
andps
push
es
xor
adc
pop
aam
push
imul
push
mov
lods
sub
sbb
pop
or
push
adc
push
je
sub
in
xor
loop
add
pop
cmp
hlt
shr
jo
out
xor
mov
pop
cmp
or
and
hlt
ja
repnz
push
push
dec
dec
jbe
imul
cmpsl
stc
cmpsl
push
cmpsl
out
mov
pop
jbe
dec
lock
cmp
pop
push
or
adc
pop
pop
push
sub
pop
out
movsl
xor
hlt
cmp
insl
mov
ja
adc
xor
lods
fisttpll
add
fcomps
mov
inc
push
or
cwtl
rorb
out
insl
push
xchg
fwait
or
inc
pop
pop
nop
fldenv
adc
xor
and
inc
dec
inc
push
das
jbe
or
push
cmp
daa
js
or
inc
xchg
outsb
dec
dec
pop
out
ficoms
dec
cltd
out
sbb
out
pop
or
push
cmp
cmp
and
outsb
sub
pop
adc
mov
cmp
dec
inc
inc
push
jle
jge
sbb
dec
scas
aaa
cld
pop
pop
inc
mov
sbb
cmp
aaa
adc
sbb
mov
popa
jb
bnd
or
scas
cmp
and
jnp
xor
sub
xchg
sbb
adc
xor
ja
xor
pop
ret
push
and
adc
mov
sbb
xchg
in
cwtl
pop
cmpsb
mov
inc
movlps
jle
or
scas
daa
ljmp
cmp
push
cmp
stos
mov
push
mov
inc
adc
popa
push
or
xor
pop
jmp
daa
aaa
fdiv
xor
iret
adc
pop
shld
or
loopne
test
push
pop
prefetch
or
dec
iret
and
ret
fbld
sub
sub
divb
scas
daa
sbbl
adc
push
cmp
and
ret
je
pop
pop
pop
and
inc
push
jo
and
repz
adc
or
test
mov
pop
add
jae
jmp
cmp
repnz
scas
add
pop
faddl
gs
push
push
adc
xor
mov
pop
shrb
pop
in
lcall
mov
sub
sub
or
bound
movsl
sbb
test
and
xor
or
mov
mov
mov
addl
inc
inc
pop
or
push
push
pop
cmp
lcall
or
add
jae
stc
add
xor
adc
sbb
ja
cmp
adc
push
das
sub
dec
imul
cmp
notb
pusha
cmp
add
add
divb
sbb
inc
inc
sbb
push
loop
out
xlat
das
dec
addr16
pop
dec
adc
lock
xchg
sbb
push
int3
or
loop
xchg
push
lock
sbb
dec
push
loop
add
push
andb
sub
mov
jns
popa
jne
push
sub
in
inc
ja
and
imul
pop
push
das
xlat
or
aas
inc
sarl
add
or
sub
adc
mov
andl
and
and
inc
or
cmc
xor
push
sub
das
lret
aas
cltd
or
xor
inc
add
daa
pop
pop
pop
jbe
inc
push
mov
outsb
mov
icebp
pop
jns
pop
push
or
mov
add
inc
aaa
push
sbb
scas
cmp
push
aaa
cmp
mov
sbb
push
push
push
ljmp
repz
mov
push
adc
jae,pn
xor
sub
icebp
shlb
hlt
push
in
stos
mov
stos
and
cmpsl
rcrl
sbb
pop
repnz
pop
mov
or
xchg
push
inc
sti
data16
decl
insb
outsl
jb
bound
xchg
pop
pop
push
push
je
and
loopne
daa
jae
popa
ficomps
andb
je
aas
mov
fcomps
daa
xchg
mov
and
xor
mov
dec
rorb
dec
ds
insl
mov
push
mov
fadds
notb
insl
pop
dec
jp
mov
call
mov
ret
push
out
xor
jo
xor
sbb
aam
lret
and
in
jg
xor
pop
xor
pop
push
dec
cmp
mov
dec
sbb
push
lock
pop
cmp
jg
pop
ja
or
push
pop
cmp
mov
push
pop
jl
push
mov
mov
push
cmp
iret
sbb
insb
push
jae
fiadds
sub
aam
mov
outsb
xor
sub
in
add
pop
fistl
cmp
cmp
xor
push
dec
inc
cmp
into
push
jp
adc
hlt
out
aam
or
int3
pop
bound
or
int
daa
and
sbb
out
sbb
jbe
sbb
add
sbb
or
dec
sbb
inc
jb
inc
insb
lods
jb
and
dec
adc
xchg
sbb
sbb
push
popf
mov
mov
or
popa
jo
push
and
fwait
adc
mov
adc
adcb
loop
add
cmp
cmp
cld
sbb
sbb
add
roll
and
xor
cmp
je
push
inc
and
push
or
nop
scas
aas
add
xchg
adc
sub
sbb
mov
loopne
xor
pusha
test
cmp
movsl
es
aas
push
adc
mov
cmp
mov
xor
fisttpll
xor
aas
stos
pop
fnstsw
push
fs
mov
lret
test
pop
ljmp
push
pop
push
jo
shlb
sub
fs
mov
sub
aas
cmp
pusha
pop
fistl
sub
pop
mov
pop
inc
dec
inc
sahf
add
mov
clc
sbb
ret
cmpsb
sbb
inc
clc
rolb
test
xor
jb
add
sub
pop
ss
mov
mov
cmp
add
dec
lock
push
sub
das
pop
and
pop
mov
bound
or
cltd
push
pop
addb
mov
add
fldt
icebp
in
pop
mov
pop
es
pop
xchg
adc
lods
popf
and
fnstcw
add
xor
add
adc
mov
pop
cmpsl
add
ja
xchg
clc
adc
xor
push
cmp
or
movsl
push
leave
xor
add
in
and
mov
add
push
and
lea
add
dec
sub
add
inc
adc
push
daa
sahf
xor
icebp
mov
push
and
and
lahf
inc
insb
or
ret
pop
aaa
and
dec
pop
xor
pcmpeqd
xchg
mov
adc
and
test
movsl
scas
cmp
lods
mov
push
sub
adc
dec
push
dec
pop
ljmp
adc
decl
push
shlb
and
dec
in
mov
xor
jg
sub
or
in
int3
aaa
xor
add
cmpsb
aad
insb
or
cmpsb
cs
mov
mov
mov
lock
pop
inc
pop
xor
push
push
cmpl
pop
inc
push
or
mov
cmp
inc
in
mov
outsl
lods
loopne
adc
adc
pop
inc
push
cs
add
pop
shll
pop
mov
inc
pop
js
jne
adc
pop
jecxz
push
or
divl
scas
dec
out
cmp
pop
dec
xchg
out
pop
push
cmpl
ficomps
inc
cmp
jnp
std
and
or
divl
and
and
push
sarb
out
mov
testl
imul
out
mov
pop
rclb
addl
sbb
push
fisttpl
or
jno
push
cmp
fcmovnbe
mov
gs
cmp
test
push
scas
nopl
jnp
movsl
and
inc
xchg
fidivs
or
xor
add
xchg
add
sub
aaa
adc
fstpl
outsb
hlt
orl
loop
mov
and
fisubrl
insl
inc
js
sbb
cmp
lahf
dec
sbb
lcall
mov
sbb
cmove
push
or
xor
fs
cmc
lahf
and
sbb
jmp
sbb
push
or
adc
aaa
andl
mov
or
adc
ds
loop
jo
xchg
sbb
je
mov
inc
or
jmp
lods
jno
jg
cmp
mov
ljmp
push
outsb
gs
xor
cs
cmpsb
inc
jb
push
adc
push
bnd
clc
and
popa
arpl
fs
and
adc
push
pop
push
sub
pop
mov
out
or
xchg
pop
test
mov
outsl
ds
ja
mov
into
ss
adc
pusha
mov
and
pop
xor
add
mov
imul
and
lds
scas
dec
cmp
cmp
ja
add
gs
mov
cmp
sbb
mov
sub
xchg
or
sub
pop
adc
cmp
cmpsl
cld
sbb
adc
int3
cli
adc
out
mov
pop
and
ss
cmp
xchg
or
cmp
iret
clc
inc
add
pop
xor
adc
add
inc
mov
adc
insb
daa
inc
test
fadds
icebp
aaa
adc
mov
xchg
add
aaa
dec
filds
shlb
mov
je
push
gs
push
fiadds
ja
fs
push
push
xchg
dec
xor
jb
jp
cmp
inc
xchg
add
add
cmpsl
shlb
add
pop
sub
pop
dec
inc
fsubrs
pop
inc
jb
mov
cmp
inc
jecxz
and
sbb
inc
add
inc
add
idivb
push
sbb
ror
fwait
int
jns
sub
popa
jecxz
loop
xor
imul
xchg
out
imul
cli
push
pop
dec
sub
push
jmp
ret
add
addr16
sbb
mov
loopne
arpl
insl
sub
xorb
sbb
js
jo
movq
push
shr
sbb
fisubl
out
scas
xor
jl
inc
adc
outsl
mov
add
aaa
imul
add
pop
pop
pop
push
ja
pop
fisttps
mov
sbb
ss
mov
jl
and
or
mov
imul
sub
push
mov
sub
xor
cwtl
or
mov
dec
add
jb
adc
jb
push
pushf
loop
inc
sub
fwait
add
xor
push
push
pop
in
and
scas
or
push
inc
inc
cmp
mov
pop
int
das
ficomps
pop
je
mov
mov
js
adc
mov
arpl
sub
add
loop
je
out
mov
hlt
xor
adc
sub
mov
int3
sub
push
adc
adc
rorb
sbb
std
pop
call
mov
movsb
pop
gs
sub
push
inc
stos
push
cmp
jno
push
mov
outsl
mov
pop
sub
stos
adc
push
lea
dec
push
adc
inc
stos
out
sahf
pusha
or
push
outsl
mov
dec
xchg
daa
push
xlat
add
push
mov
sahf
pusha
inc
pop
pop
sbb
addr16
xor
lods
cmp
add
les
or
pop
jo
sub
popf
push
les
push
push
push
das
cmpsl
outsl
aad
in
xor
and
cmp
and
fcomps
pop
sbb
and
das
sbb
dec
sub
push
enter
mov
xchg
fisubl
inc
shrb
pop
xor
mov
inc
divb
das
push
inc
push
pop
push
push
push
cli
jmp
sti
inc
dec
dec
dec
inc
mov
arpl
lock
inc
ret
jne
pop
fs
mov
cmp
and
push
insl
ss
bnd
scas
dec
xchg
jp
push
push
icebp
mov
test
mov
insb
mov
cs
and
jnp
and
aam
sub
fnstcw
not
and
push
mov
in
dec
cld
mov
getsec
shlb
mov
mov
outsl
outsl
sub
sbb
ljmp
mov
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
pop
sti
mov
mov
sub
sub
mov
xchg
mov
mov
ds
pop
sbb
idivb
jle
jo
fsubs
sbb
inc
pop
test
xor
dec
xchg
pop
shrl
pop
adc
hlt
test
pop
push
and
xor
inc
aaa
inc
pushw
inc
push
dec
or
add
sub
xlat
mov
add
pop
push
dec
dec
push
jb
and
outsl
push
dec
imul
pop
sbb
leave
jae
sub
sub
jmp
xlat
cs
call
xchg
out
mov
cmp
jns
sahf
test
cwtl
dec
mov
cmp
js
push
andb
insb
inc
js
xor
push
mov
add
cs
dec
sub
or
mov
pop
xor
dec
lcall
add
inc
cmp
xor
sub
mov
sbb
sub
inc
inc
push
xor
call
jne
call
imul
lahf
loopne
popa
jo
add
das
js
test
adc
push
mov
jle
pop
push
dec
call
dec
xlat
scas
jnp
punpckldq
lods
bound
push
mov
xor
daa
pop
or
les
dec
sub
sub
clc
and
dec
inc
sub
sub
adc
adc
lea
push
xchg
xlat
das
mov
pop
cmp
and
inc
dec
and
or
outsb
xor
and
int3
jns
fnstenv
pop
pop
pop
sbb
movsb
jbe
push
jecxz
cmp
daa
or
pop
dec
xor
popl
cmpsb
pop
sbb
pop
pop
dec
inc
dec
or
pop
add
cmp
add
or
mov
pop
cmp
jle
inc
adc
and
inc
jl
arpl
adc
sub
pop
or
das
xchg
cmc
or
xor
pop
jne
int3
mov
xor
out
popl
in
fsubrp
js
das
xchg
and
push
mov
sbb
xchg
dec
repnz
sbb
pushf
out
add
sti
inc
push
or
add
push
popa
sbb
xchg
hlt
xor
rcl
push
leave
aam
addr16
sarl
push
and
inc
or
orl
push
xchg
lods
out
idivl
adc
push
mov
repz
iret
test
int3
xchg
aas
mov
repz
aam
ds
dec
insb
mov
xor
and
es
xchg
xor
int
inc
fcomp
rcrb
dec
ret
or
out
jns
sbb
inc
push
xchg
pop
adc
sbb
fidivrl
jb,pn
pop
ja
cld
sub
scas
push
call
jns
testb
sub
mov
dec
push
pop
out
cmp
push
mov
movsl
loop
outsl
cmpsb
xor
lea
mov
or
mov
sbb
mov
scas
popf
in
imul
mov
add
out
or
data16
popf
in
jecxz
outsb
cmpsb
scas
push
out
pusha
mov
mov
jns
hlt
and
out
ja
inc
mov
pushf
imul
push
lods
in
mov
fincstp
mov
pop
es
movb
mov
repnz
mov
jp
stos
mov
lods
mov
cmp
jno
pop
jbe
negl
sub
test
mov
xlat
int3
push
repz
hlt
cld
movsb
mov
out
dec
mov
push
jbe
sarl
movsb
ss
pop
insl
push
jno
js
sti
cmp
shll
nop
fistl
neg
leave
xor
icebp
jl
pop
movl
push
mov
repnz
movsb
jae
lcall
or
jns
andb
or
push
push
xor
rcll
aad
dec
test
jns
mov
ds
repz
xchg
mov
jns
out
mov
lea
fdivr
xsaveopt
dec
mov
xchg
mov
test
or
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
pop
in
test
xor
adc
mov
jb
mov
adc
jmp
add
idivb
cmpsl
std
pop
mov
and
pop
sbb
enter
repnz
adc
or
adc
mov
mov
push
pop
fwait
cwtl
das
add
push
push
xor
pop
inc
mov
push
and
pop
inc
push
addr16
movsl
das
stos
dec
mov
movsl
jnp
aas
inc
jbe
dec
ja
sub
sbb
or
push
getsec
push
mov
cmp
aas
jae
mov
xlat
xchg
mov
dec
sbb
cs
sbb
pop
cmpsb
aam
sahf
push
dec
push
push
push
pop
lods
xchg
jo
insb
pop
xchg
jb
es
testl
push
jns
sbb
iret
das
push
repnz
gs
add
inc
imul
into
ror
pop
retw
mov
test
adc
pop
jp
addr16
subl
ss
pop
push
xor
mov
leave
and
add
call
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
incl
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
incl
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
ljmp
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
decl
sbb
mov
call
cltd
test
call
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
test
ljmp
orb
adc
enter
jg
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
sub
push
push
push
mov
fwait
stos
flds
pop
sub
mov
test
dec
cmp
dec
jnp
call
dec
xor
xor
push
dec
inc
fs
gs
push
sub
jl
pop
daa
and
and
call
aaa
sub
sub
jp
inc
arpl
jb
outsl
imul
push
jns
lcall
cmp
pop
insl
das
cmp
je
jge
inc
sub
data16
and
pop
push
xor
sub
inc
mov
add
pop
add
sbb
xor
xor
loopne
add
daa
pop
inc
aaa
inc
inc
inc
jnp
outsl
push
add
xor
push
cmp
mov
pop
inc
addb
imul
sbb
pop
mov
mov
daa
pop
daa
sbb
insb
fnstcw
add
cmp
cmpsl
lock
aas
adc
pop
sub
sbb
xor
cltd
adc
xor
jge
add
add
wrmsr
push
xor
xor
xor
mov
cmp
jbe
push
xor
and
pop
jnp
fnsave
inc
push
push
aaa
jl,pt
ds
cmovnp
mov
cs
pop
pop
add
push
mov
pop
push
xor
and
pop
adc
and
cmpsl
jecxz
jo
sub
dec
push
or
pop
lods
imul
cmp
xor
and
aas
adc
cmp
jbe
mov
bound
inc
pop
jecxz
mov
imul
aaa
insl
or
mov
cmp
mov
arpl
rcll
inc
int3
sbbl
popa
push
lahf
cwtl
popf
inc
es
test
mov
jg
orb
add
mov
lahf
aad
lds
pop
cwtl
add
cmp
adc
push
mov
mov
adc
mov
inc
xor
push
jnp
cmpsl
scas
rcl
test
push
xor
sub
aas
adc
sbb
jp
adc
mov
sbb
stos
fcoms
pop
jecxz
or
push
sub
adc
and
clc
xchg
or
sbb
add
pop
cmp
inc
xor
int3
testb
mov
testb
aam
ret
add
push
or
adc
adc
mov
sub
sbb
or
mov
rcll
mov
adc
outsl
push
fisttpl
dec
inc
and
xor
push
pop
pop
inc
inc
cmp
dec
fs
and
and
dec
inc
xor
lea
ss
cmp
add
mov
pop
cmp
mov
mov
test
movsl
scas
loopne
xor
pop
stos
or
pop
add
pop
add
lahf
sti
sbb
outsb
outsb
je
xor
shlb
pop
js
xor
imul
pop
insl
gs
cmp
pop
xor
mov
or
movl
movl
adc
xor
insl
jle,pn
scas
mov
js
out
adc
push
dec
filds
outsl
pushf
jb
popa
je
filds
js
inc
popf
insl
or
jg
inc
add
sbb
jge
fidivrs
inc
adc
add
out
push
je
rclb
pop
pop
daa
cli
cmp
dec
fadds
aaa
or
push
dec
fstpl
rorb
push
lock
test
adc
jecxz
mov
pusha
popl
xor
inc
adc
aam
das
outsl
and
mov
jo
and
fmuls
fdivrl
add
mov
sbb
or
cmp
ds
mov
adc
adc
ret
jg
push
outsl
js
lds
dec
sbb
mov
test
mov
les
sub
outsb
js
push
and
push
pop
or
pop
je
stos
pop
cmpsb
adc
sbb
add
fsubl
push
dec
pop
xor
int
pop
push
ja,pn
jb
pop
dec
add
add
or
mov
jle
xor
les
hlt
outsl
aaa
cmp
sbb
xor
push
xchg
out
lds
sbb
lods
test
or
xchg
dec
movsb
rolb
add
and
cwtl
mov
adc
cmp
push
in
jo
call
sbb
daa
dec
hlt
inc
loope
pop
xlat
fs
jo
xor
pop
das
or
outsl
imul
adc
push
or
inc
sbb
inc
pop
or
ss
jecxz
es
cmp
sbb
aam
dec
pusha
jg
fstp
inc
rorl
das
aad
jo
scas
cmp
arpl
pusha
add
xor
push
xor
cwtl
cmp
push
insl
test
jl
push
dec
ja
push
adc
xchg
and
mov
lods
sub
push
add
sbb
and
inc
xor
push
adc
xor
xor
push
sahf
cmp
push
push
sbb
pop
loop
sbb
es
jge
ret
jg
sbb
ja
dec
arpl
es
mov
dec
popa
and
pop
pop
add
popa
inc
outsb
adc
or
lds
sbb
mov
imul
gs
or
cmp
les
xchg
add
popf
pop
imul
lods
ficompl
fildl
pop
pop
pop
aas
aam
xchg
icebp
and
inc
outsl
mov
push
out
pop
pop
pop
pop
pop
add
pop
dec
decb
cld
or
fcmovne
rorb
dec
pop
movsl
shl
ss
mov
repz
popa
cli
push
imull
push
pop
lea
pop
jecxz
xor
mov
push
pop
cmpsl
std
xor
insb
sbb
push
cmp
movsl
outsb
fimull
adc
inc
adc
pop
cmp
push
int
pop
shlb
sahf
adc
and
and
lock
fistl
or
inc
and
inc
mov
pop
add
cmp
dec
push
adc
scas
mov
add
test
xchg
xor
aaa
lock
fldcw
or
sbb
inc
push
das
mov
pop
js
mov
mov
push
popa
jp
inc
popf
fcmovu
dec
outsl
and
lcall
xchg
cmp
cmp
imul
cli
ret
mov
pop
add
insb
pop
push
push
and
test
inc
dec
push
inc
pop
push
dec
inc
dec
mov
pushf
inc
mov
xlat
push
jnp
inc
call
inc
or
fwait
pop
daa
dec
addr16
insl
inc
sub
pusha
and
jb
add
sarb
or
mov
push
jb
xchg
add
mov
dec
pushf
outsl
inc
cwtl
jne
test
lock
addr16
adc
outsb
incb
adc
push
negb
push
jb
pop
adc
and
aaa
stos
rcl
fisubl
out
aas
ds
and
adc
jno
es
xchg
mov
jo
xchg
insb
je
push
addr16
jo
pop
stc
xor
and
jno
outsl
aas
ds
aas
divb
movsl
or
or
cmp
insl
inc
xchg
or
pushl
xor
xor
xor
xor
cmp
and
aaa
sti
jbe
xor
push
xor
xor
cmp
push
add
pop
push
or
mov
jbe
fwait
adc
push
adc
or
or
pusha
pop
orl
dec
add
cmp
mov
or
fwait
js
or
pop
add
inc
sub
aaa
adc
repnz
xlat
das
pop
sub
adc
pop
sub
mov
adc
adc
cld
es
inc
cmp
and
adc
stos
addr16
sbb
mov
ret
repnz
or
aam
push
mov
test
adcb
shlb
ljmp
sbb
and
sub
mov
cmp
sbb
sbb
cmp
cltd
xor
test
sub
mov
mov
cmp
sbb
ja
or
and
aad
les
dec
xchg
int3
inc
sbb
jp
out
inc
aad
daa
cmp
cmp
in
sub
pushf
and
inc
xchg
pop
inc
cmp
inc
outsl
adc
push
add
dec
sbb
scas
mov
add
xchg
adc
adc
push
imulb
push
and
mov
bound
es
cltd
addl
repnz
add
je
das
sub
xor
test
push
push
dec
mov
daa
push
cmp
mov
add
add
enter
aas
adc
ds
hlt
inc
sbb
mov
cmp
ret
daa
inc
stos
fldl
xor
jo
sbb
mov
lea
or
xor
aaa
jnp
push
lahf
fldcw
shrl
lods
daa
and
insl
mov
mov
stos
rclb
adc
or
outsl
mov
sub
adc
inc
pop
das
insl
add
mov
mov
lret
sub
cmp
lea
push
pop
inc
test
inc
jno
fldt
imul
popa
daa
pop
adc
push
das
dec
popa
cmpsl
movsb
cmovbe
pushf
jecxz
or
pop
inc
adc
movsb
and
repz
push
cmp
pop
inc
push
lock
test
imul
pop
scas
pop
cltd
mov
lahf
pop
xchg
fwait
adcb
popl
sub
add
ficompl
pop
addr16
arpl
pop
mov
dec
push
cmpsl
in
sub
and
arpl
xor
sub
inc
lcall
push
push
insb
add
outsl
lret
arpl
dec
mov
xor
sbb
xchg
loopne
addb
add
jmp
xorl
test
iret
cmp
jno
xchg
xchg
mov
sahf
dec
sub
loope
lods
inc
dec
js
xchg
insl
xchg
leave
mov
outsb
mov
pop
xchg
aad
inc
lss
outsb
add
mov
cmpsl
stc
cmp
fistps
adcl
or
mov
sbb
sbb
xor
es
pop
mov
das
das
ret
orb
mov
lahf
jnp
dec
sbb
add
inc
pop
daa
add
add
push
jo
and
cmp
in
xor
pushf
xor
sbb
push
mov
popa
fsubrs
jl
push
add
movq
or
mov
mov
pop
mov
inc
adc
jmp
pop
add
cmp
andl
adc
dec
lds
orb
dec
cmp
ret
lahf
addb
out
sbb
cmp
push
pop
ss
adc
push
pop
sbb
and
push
mov
ljmp
aad
inc
pop
fstps
popf
push
adcb
push
xchg
pop
sbb
sbb
pop
in
pop
fildl
push
shrb
sbb
or
inc
dec
xor
xchg
aas
pop
es
add
mov
faddl
xchg
xchg
lret
or
sub
add
dec
mov
movhps
jno
cwtl
sub
rorl
add
sub
cs
jae
rorl
and
jle
ja
sahf
adc
sub
or
sbb
sub
stos
or
xchg
push
mov
test
sbb
inc
push
cmp
push
dec
sbb
cmp
dec
es
std
daa
adc
pop
cmp
sbb
add
mov
mov
dec
jnp
cwtl
ret
mov
add
add
push
stos
pusha
dec
push
or
mov
fcoms
mov
sbb
inc
hlt
je
out
dec
rorl
int3
mov
and
adc
fimull
push
sbb
sbb
xchg
or
pushf
dec
dec
pop
or
inc
xor
dec
lods
sub
pop
sub
aas
es
das
test
pop
mov
int3
sbbl
les
pop
pop
pop
pop
jo
push
aas
cmp
or
ret
inc
jecxz
lea
cmp
mov
popw
dec
adc
fildll
call
lahf
inc
mov
and
sub
imul
dec
orl
int3
inc
pop
notl
sahf
ja
daa
adc
pop
sbb
out
xor
repz
andl
add
or
xchg
fs
pop
or
xor
add
sub
adc
sub
sbb
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
add
shrb
ret
sub
fldcw
shrb
xchg
pop
adc
push
adc
pop
add
int
mov
xchg
rclb
lret
str
mov
and
sbb
lcall
add
cmpsb
pcmpeqd
test
dec
aas
popa
sub
inc
addb
addl
addr16
add
cli
sub
xor
dec
sub
or
sub
fsts
pop
push
adc
in
add
xor
inc
pop
and
pop
xor
add
dec
das
xor
dec
ds
loopne
dec
pop
pop
push
dec
dec
inc
add
ud0
pushl
adc
or
push
sub
push
push
aaa
push
pop
cmp
pop
cmovae
xor
cmp
das
sar
das
adc
xor
cmp
xor
cmp
push
add
cmp
inc
es
cs
pop
scas
sbbb
dec
out
push
incl
xor
inc
dec
das
adc
xor
cs
xor
mov
sbb
or
add
aas
add
dec
divb
and
xchg
and
and
cmp
adc
jg
sub
ds
inc
xor
dec
dec
sub
inc
cmp
push
inc
sbb
mov
push
aaa
jl
inc
push
pusha
adc
popf
ja
jne
add
cmp
mov
sbb
sbb
inc
adcb
add
fadd
pop
xor
cmpsl
jo
add
es
or
dec
adc
insl
cmc
push
jo
fs
loope
leave
and
insb
pop
cmp
pop
push
fisubrs
arpl
jg
jae
xor
cmc
cmp
sub
xchg
push
sub
add
inc
xor
xor
xor
mov
xor
andb
test
sub
inc
add
dec
lret
add
test
sbb
pop
out
rolb
mov
mov
hlt
push
push
jns
imul
push
or
adc
inc
push
dec
inc
dec
push
dec
jg
movsl
xor
insl
push
outsl
add
inc
je
orb
jp
icebp
sbb
inc
mov
insl
inc
xchg
inc
or
inc
xadd
aam
sbb
inc
movswl
fisubs
cmp
jg
jo
outsb
add
pop
inc
pop
enter
scas
and
inc
shrb
sub
aas
faddl
jle
sbb
movsb
outsb
or
inc
aaa
add
and
inc
mov
xchg
nop
fisttpl
fcompl
inc
insb
outsb
jnp
cmp
aas
add
mov
push
cmp
mull
dec
and
daa
add
push
pop
lods
fcmovnu
inc
push
pop
das
inc
add
lods
pop
iret
js
imulb
add
das
mov
push
mov
daa
enter
inc
inc
testb
sbb
cltd
js
lock
jnp
repnz
push
push
xchg
sbbb
outsl
xchg
lock
iret
test
xchg
aam
mov
int3
mov
xlat
int3
addr16
fstpt
sbb
sbb
mov
outsb
jnp
sub
xor
aas
pop
leave
xor
pusha
sub
jo
mov
sti
mov
enter
pop
scas
movsb
adcb
cmpb
jg
add
hlt
ja
cmp
pop
aaa
mov
es
pop
outsl
xor
add
iret
rcrb
pop
pop
data16
push
jb
add
mov
cmp
hlt
mov
movl
mov
addr16
lock
xor
and
sub
push
push
xor
adc
xchg
or
pusha
scas
fdivs
mov
pushl
pop
enter
divb
repz
ja
iret
sarl
push
add
js
ja
in
jb
or
and
fiaddl
scas
pop
ja
icebp
fnsave
ja
jne
fimuls
xchg
scas
movsb
data16
js
mov
add
in
das
loopne
clc
fcoms
pop
or
adc
aas
ss
pop
addr16
xor
aas
pop
out
fimuls
dec
daa
sub
leave
xchg
mov
dec
inc
pop
leave
xchg
pop
inc
cmp
sub
xchg
pop
leave
sub
jecxz
pop
pop
add
out
mov
sub
or
lock
xor
jns
out
add
in
nop
je
sub
repz
jl
inc
sub
sub
sub
daa
ds
daa
out
out
daa
es
fs
out
jl
sub
xor
sbb
and
out
lahf
loopne
and
or
and
adc
add
jp
adc
sahf
flds
ss
out
inc
sbb
or
dec
sahf
out
aam
mov
out
enter
jnp
cmp
push
js
aaa
stos
push
lahf
out
ss
mov
imul
sub
mov
adc
popa
xchg
dec
push
dec
outsl
scas
fs
pop
push
xor
adc
add
andb
movsl
loopne
nop
push
pushf
es
outsl
add
inc
lods
sub
lock
or
lods
xchg
sub
in
lds
add
adc
jl
dec
mov
push
pushf
scas
add
adc
outsl
out
adcb
xor
sub
fbstp
add
in
ss
add
xchg
sub
push
push
pushf
push
sub
scas
sbb
sbb
ljmp
and
loop
dec
xchg
mov
sub
pop
jb
xchg
outsl
fcomip
sub
enter
adc
int3
xor
in
loopne
xchg
cmp
test
xor
in
clc
sub
add
es
push
mov
mov
sub
mov
xor
xchg
add
or
leave
adc
add
movsb
jbe
out
sub
xchg
mov
sub
or
mov
or
repnz
mov
add
mov
fbld
shrd
int3
outsl
and
xor
push
xor
jmp
or
shl
nop
push
pop
sub
scas
add
push
adcb
sbb
add
leave
xchg
enter
inc
pop
and
xlat
cmpsl
adc
xor
or
xchg
add
insl
out
loopne
inc
sub
push
push
pop
daa
jnp
dec
xchg
jbe
aaa
mov
and
loopne
dec
test
cli
pop
mov
mov
sub
repz
pop
xchg
sub
sub
fildll
adc
xchg
push
xchg
mov
pop
sbb
adc
add
loop
adc
pop
dec
in
test
fstl
outsl
js
lods
ret
push
push
outsl
jg
push
pusha
lds
daa
testl
push
hlt
push
ljmp
dec
mov
scas
cmpsl
cmp
jbe
xor
cld
das
loopne
or
xlat
scas
orb
jo
or
dec
scas
bound
dec
adc
loope
mov
xlat
or
scas
dec
pop
idivb
das
daa
add
jl
fst
or
dec
subb
dec
leave
dec
add
xor
push
sub
pushf
xor
pop
pushf
das
pop
or
mov
push
inc
outsl
and
mov
add
xchg
add
scas
pusha
fsub
shl
call
mov
xor
ja
sub
lods
pushl
mov
mov
fsubrl
add
mov
out
adc
adc
in
xor
xor
mov
sbb
pop
je
clc
daa
movsb
cmp
jmp
jg
mov
mov
xchg
loopne
lock
mov
fcoml
ja
xor
cltd
fdivs
push
sub
add
mov
notl
jb
pushl
push
pushf
push
push
fisubs
das
outsl
add
push
lods
aaa
pop
cld
enter
call
xor
push
or
aaa
add
inc
dec
cmpsb
add
push
xchg
pop
enter
cmpsb
pusha
add
push
xchg
mov
add
pusha
and
ret
add
call
leave
xchg
int3
daa
or
ja
adcl
sti
mov
push
push
les
fdivp
cmp
sbb
lods
outsl
loope
or
aas
add
decb
xor
cltd
loop
pop
or
push
aas
or
dec
enter
hlt
pop
xor
das
outsl
add
or
push
jo
or
add
and
mov
add
or
loopne
lahf
lock
ss
scas
add
andl
xchg
pop
add
mov
push
enter
dec
call
inc
add
out
daa
jb
push
jb
add
adc
out
hlt
pop
and
addr16
add
daa
aas
les
sbb
insb
aaa
lahf
int
add
jl
mov
scas
inc
add
mov
in
mov
enter
insl
fwait
lods
xchg
inc
xchg
outsl
mov
and
push
pusha
shrl
and
movsb
adc
scas
adc
dec
es
imul
daa
jge
iret
repz
cmp
pop
xchg
ljmp
jb
or
xor
out
cmp
lds
sub
outsl
out
out
mov
push
cmpl
sub
mov
repz
repz
push
test
repz
sahf
out
xor
pop
mov
sarl
clc
sbb
ds
push
test
cmp
jl
xor
ljmp
sbb
sbb
int
shlb
cs
xchg
sahf
cmpsl
stc
cmp
sbb
inc
jo
cmp
repz
and
jns
out
les
cmp
dec
repz
into
sub
pop
xchg
in
daa
cmp
ds
pop
aas
pusha
repz
jnp
push
pop
inc
push
loop
inc
out
cmp
pop
popf
shl
inc
sahf
out
sahf
sub
mov
jl
inc
es
test
lret
incb
inc
push
sahf
out
cmovne
xchg
mov
iret
sarl
aaa
mov
inc
mov
lds
dec
cmp
jl
cmpsl
stc
inc
dec
fwait
mov
sahf
cmpsl
fstps
dec
jl
cli
loopne
xor
cmpsl
fldcw
lcall
cmpsl
stc
sbb
aas
bound
out
sub
scas
push
xor
xchg
or
test
sarl
pop
fldt
push
insb
sahf
data16
adcb
mov
int
jns
clc
and
jns
sahf
out
int3
sub
fdivrl
flds
pop
push
movsb
iret
or
lcall
and
out
mov
pop
repz
cmpsl
stos
int
pop
xor
out
lcall
out
xor
ljmp
lahf
out
sahf
popa
test
ds
repz
scas
shl
pop
fs
out
fwait
mull
addr16
imul
cld
pop
push
out
mov
jmp
imul
push
lahf
out
ds
push
pop
addb
iret
repz
dec
mov
insb
jns
cmpsl
fnstcw
cwtl
outsl
clc
push
jo
sahf
jae
lcall
cmpl
iret
hlt
mov
fstps
js
mov
push
jns
ds
roll
push
rorl
int
push
and
lahf
cmpsl
stc
cmp
das
jl
mov
jge
iret
repz
cmpsb
jmp
lahf
out
subb
cmp
repz
je
cli
and
cmpsl
pusha
movsb
adc
iret
out
imul
mov
mov
mov
jns
fldlg2
push
push
loope
nop
push
inc
out
sahf
out
nop
mov
sti
out
cmp
push
xchg
cmp
roll
xchg
dec
repz
push
jl
sub
iret
repz
mov
jns
out
inc
pop
test
out
adc
stc
cmp
enter
xchg
dec
iret
sarl
loope
xchg
dec
imul
fldcw
cwtl
pop
ja
dec
repz
pop
cltd
das
imul
cmc
inc
lcall
sub
pushf
pusha
sbbb
lcall
pop
popa
adc
jbe
fiadds
aas
aam
repnz
lds
sbb
movhps
inc
testl
or
pop
xlat
or
dec
enter
pop
aaa
insb
mov
sbb
pop
subl
pop
xor
fwait
das
mov
sarb
bound
xchg
push
xchg
gs
int3
bound
or
insb
aas
into
mov
fcoms
outsb
inc
pop
and
daa
cmp
dec
aam
loopne
fists
dec
sbb
and
mov
adcb
pop
xor
repnz
movsb
mov
mov
cltd
lret
cmp
int
iret
shll
bound
pop
or
cmp
jmp
call
in
mov
and
sub
aas
je
pop
xor
mov
pop
jg
xchg
inc
in
iret
lcall
push
add
bound
inc
xchg
iret
fimuls
push
or
mov
xorb
jb
inc
ja
dec
inc
xchg
pop
mov
mov
dec
mov
pop
push
add
out
jmp
daa
jbe
xchg
add
xlat
cs
loopne
fbld
dec
dec
dec
es
iret
xlat
filds
mov
push
xchg
daa
or
repz
sbb
add
and
mov
push
xchg
in
in
dec
push
pop
and
call
cwtl
push
pop
cmp
dec
cmp
cmp
loope
idivl
cmpsl
cmp
or
pushf
out
and
cs
or
and
pop
push
and
pop
adcl
cli
call
fildl
pmuludq
in
rorl
inc
jp
xchg
mov
scas
mov
mov
push
sarl
scas
mov
push
daa
adc
add
out
cmp
xchg
add
mov
xchg
adc
xchg
push
dec
adc
jg
test
inc
cs
inc
sub
sub
jb
enter
sub
sub
sub
sbb
or
adc
repz
repz
or
repz
or
or
cmp
insl
vmread
repz
repz
adc
adc
cmp
repz
rclb
ficomps
ss
repz
sbb
scas
and
and
loop
sub
xlat
addb
mov
daa
outsl
ja
mov
add
xchg
fistps
lock
push
decl
loopne
push
scas
cmp
lock
lds
sub
pop
jmp
mov
push
xor
lods
push
inc
jb
inc
push
fsubs
jns
mov
mov
add
addr16
addr16
mov
out
pop
and
nop
popa
add
adc
inc
jb
leave
mov
lock
jae
call
fists
mov
jo
dec
lahf
push
fisubrs
pop
ffreep
mov
inc
cmpsl
push
in
inc
mov
cmpsl
movsb
pop
mov
ja
andb
js
inc
mov
jmp
or
fisubs
dec
pop
in
xchg
adc
das
push
das
es
lods
loop
fwait
push
ja
das
ljmp
mov
mov
mov
add
rclb
in
jmp
aaa
dec
dec
repnz
push
inc
jb
inc
xor
shlb
fucomp
movq
xchg
add
mov
sub
in
mov
dec
repnz
xchg
pop
jb
fcomps
add
jl
mov
xor
addb
sarl
dec
dec
inc
lahf
lock
cmpsl
push
daa
scas
push
add
fisttpll
outsl
mov
movswl
xchg
mov
or
out
or
cmp
cmp
or
leave
jnp
dec
aas
das
fisttps
cmovle
jns
xor
cmovo
mov
push
fcompl
push
aas
mov
add
or
inc
sbb
addr16
xchg
or
push
fbld
outsb
in
xchg
xor
xor
xor
push
cmp
jae
popl
push
add
js
pusha
outsb
xor
jbe
leave
in
and
dec
lahf
out
jne
leave
leave
scas
mov
xchg
and
icebp
mov
push
mov
push
dec
iret
push
outsl
jns
pop
xor
push
daa
sbb
add
jns
out
add
add
sahf
out
sahf
add
pop
ja
out
or
jbe
leave
leave
leave
dec
cltd
movsb
scas
mov
out
loop
leave
icebp
cld
or
adc
and
add
or
or
outsb
and
iret
repz
push
add
popa
cmp
repz
insb
add
iret
repz
or
lahf
rcr
ljmp
lahf
cli
add
dec
sbbl
rolb
or
mov
push
and
jnp
sbbl
push
add
out
add
add
je
lds
cmc
add
enter
or
push
and
repz
in
ss
push
pop
inc
or
repz
dec
or
arpl
cmp
repz
or
or
jmp
xchg
xlat
adc
push
mov
add
inc
repnz
push
stc
push
pop
rorb
mulb
xor
in
addr16
popa
aaa
xchg
insb
aaa
jb
and
aaa
xchg
xor
fildl
pop
jl
leave
leave
leave
in
shr
ljmp
scas
aaa
cmp
mov
cmp
in
xor
push
push
inc
mov
xchg
cmp
cmp
mov
fdivl
pop
leave
jae
mov
cmp
xchg
jl
sbb
addr16
add
pop
jb
and
mov
push
arpl
dec
fs
xor
xchg
scas
push
daa
je
xchg
mov
pop
pop
and
cs
call
daa
cmp
dec
mov
dec
cmp
enter
cmp
data16
pop
jmp
cmp
fimull
pop
mov
mov
xchg
dec
cs
adc
popf
mov
and
pop
ss
out
xlat
add
push
daa
inc
push
add
and
pop
add
cmp
pop
jbe
sahf
out
sahf
jle
xchg
mov
jns
out
xchg
or
or
out
scas
movzbl
dec
aaa
jns
mov
leave
leave
leave
leave
push
or
leave
leave
or
or
leave
leave
leave
leave
push
add
leave
leave
add
inc
leave
inc
repnz
or
leave
hlt
add
push
cmp
cmp
in
cmp
cmp
pop
mov
push
pop
enter
xor
bound
addr16
xchg
out
pop
mov
dec
ds
xchg
pop
fdiv
mov
insb
addr16
cmp
push
movhps
cmp
mov
in
mov
ljmp
repnz
cmp
js
mov
int
jns
ja
aad
add
in
in
fst
in
cs
pop
movsb
pop
incb
leave
pop
js
out
ds
jp
and
stos
mov
and
dec
shl
inc
push
nop
add
fldl
inc
push
daa
jl
stos
add
aas
aas
mov
lret
dec
aas
push
aas
pop
jg
in
jle
or
fiaddl
lahf
mov
mov
out
push
add
add
fmulp
jae
sldt
in
cs
enter
or
inc
adc
or
daa
das
femms
xor
in
dec
cmp
rcll
xchg
mov
fcoms
rcll
ud1
in
pop
ja
add
pop
pop
insl
xchg
mov
out
or
addr16
popf
xchg
inc
inc
daa
push
ja
mov
test
and
pop
mov
mov
pop
fistpl
pop
and
xchg
dec
inc
and
cmp
leave
jo
cmovl
cs
stos
mov
mov
push
xchg
cld
es
xchg
pop
mov
pusha
fmuls
xchg
dec
push
sti
leave
and
xchg
sbbb
lods
pop
leave
and
popf
mov
lahf
popa
shrl
cltd
push
jo
pop
jb
fs
mov
pop
pop
out
daa
divb
nop
mov
jns
sbb
sbb
testl
popa
inc
inc
dec
fimull
ljmp
int
fimull
ja
ja
daa
daa
pop
test
mov
mov
jmp
cmp
inc
jg
fsubrs
fcmovb
xchg
sub
enter
arpl
pop
inc
data16
mov
mov
inc
lods
pop
pushf
sarl
push
div
mov
out
add
cmpl
pop
xchg
xchg
pop
leave
jae
enter
pushf
mov
fs
push
repz
gs
add
repz
add
xchg
in
inc
pushf
inc
cmpsl
xlat
or
lods
nop
pusha
pop
or
and
out
iret
enter
pop
decb
push
inc
push
push
xchg
out
jns
push
push
or
sbb
daa
mov
ds
ror
push
idivl
iret
orb
out
into
mov
sbb
xchg
sub
mov
pop
or
ret
pop
push
daa
mov
sub
and
inc
call
lret
and
call
push
xor
lahf
sbb
dec
mov
dec
das
dec
pop
ja
sahf
pushf
pop
push
pop
gs
ljmp
pushf
pop
mov
xchg
xchg
pushf
cmpsb
mov
inc
dec
lea
fiadds
or
sub
fsubs
outsl
pushf
mov
pop
dec
lcall
dec
stc
sub
movsbl
dec
pop
ja
pop
push
pop
aas
in
popf
bound
xchg
dec
push
adc
adc
mov
das
mov
sbb
jns
or
xchg
xchg
xadd
cld
dec
add
or
xchg
xchg
xchg
dec
adc
sbb
and
jns
out
push
push
xor
cmp
out
sahf
out
or
sahf
out
sahf
or
or
dec
ud2
pop
or
in
in
or
push
add
add
add
sahf
out
sahf
je
jl
test
sahf
out
mov
je
out
movsb
mov
cmp
jae
mov
and
and
int3
es
dec
xor
dec
testl
inc
xchg
jo
add
jne
movsb
mov
mov
mov
add
fs
pop
lar
je
xchg
setg
dec
test
movsl
add
xchg
leave
jae
jl
dec
aas
xchg
fwait
xor
push
inc
wrmsr
jns
jns
cmp
lahf
dec
push
push
in
in
push
pop
pusha
push
jo
orb
push
nop
cwtl
mov
adc
iret
cmp
unpckhps
enter
add
andb
dec
out
aaa
out
je
push
add
or
test
inc
clts
dec
sti
pushf
mov
add
xor
push
cmp
out
das
dec
andps
hlt
rolb
pop
dec
lods
and
or
imul
dec
push
insb
push
in
test
js
insb
das
rcrb
fmuls
loopne
jae
rcl
lock
clc
test
lea
dec
pop
push
scas
or
cmc
jbe
outsb
sub
add
aas
cmp
inc
dec
adc
daa
fisttpll
data16
in
outsb
daa
jbe
jle
xchg
ja
mov
mov
jns
sahf
or
aad
out
test
call
dec
pop
adc
pop
adc
jns
aaa
dec
inc
pop
mov
sbb
jge
test
test
push
ljmp
dec
inc
dec
mov
cmpsl
xchg
cmp
push
rorl
sub
ret
enter
daa
das
scas
and
push
mov
and
push
pop
dec
push
fnstcw
push
pop
push
adc
dec
ds
sub
popa
jmp
sbb
fs
daa
test
mov
jns
dec
es
push
addb
cmp
in
xchg
push
add
cmp
lods
pop
mov
ret
iret
repz
or
or
repz
repz
or
sahf
out
push
movups
xchg
in
jno
adc
mov
es
jo
push
movsb
jo
inc
dec
jo
mov
mov
ror
and
jno,pn
daa
iret
push
roll
out
imul
push
and
pushl
loopne
jno
daa
cs
xor
jb
call
push
bound
daa
push
jne
fs
daa
push
das
daa
cmp
push
mov
push
add
popa
dec
sahf
out
add
cmp
rorl
or
orl
mov
xchg
cltd
or
mov
inc
jb
and
push
fs
cltd
in
push
nop
popf
out
fistl
jae
jg
out
mov
add
cmp
sahf
add
push
push
filds
push
inc
or
dec
pop
xchg
ret
jae
je
cmp
orl
sbbl
out
repnz
cltd
movsb
imul
out
sahf
push
mov
out
outsw
jg
push
lahf
adc
sbb
xchg
pshufw
aas
push
dec
and
mov
cmpsl
dec
fmulp
leave
leave
push
push
push
pop
mov
inc
repnz
pop
or
ja
jmp
xchg
lods
popf
mov
aas
movsbl
lds
call
push
das
mov
add
push
or
das
push
pop
xchg
test
push
dec
lock
pop
push
lahf
pop
push
pop
pop
pushf
je
out
add
lar
repz
repz
or
or
js
fnstsw
xorps
stc
push
vmread
sub
or
enter
xchg
push
fwait
mov
mov
pop
push
add
es
rcr
jns
ja
pop
jecxz
jmp
or
or
and
push
or
adc
iret
sbb
push
lock
pop
dec
add
stc
sahf
outsl
push
ja
cmpsl
jg
mov
push
pusha
jbe
mov
aaa
push
int
mov
adc
adc
ja
mov
ja
pop
push
ja
inc
cs
imul
popa
push
loopne
pop
daa
imul
in
mov
inc
outsl
frstor
rcrb
fstl
out
loopne
xchg
mov
shld
lfs
mov
jo
xchg
pop
sbb
cmp
fs
invd
pop
cmpsl
adc
dec
jnp
fisttpll
add
mov
mov
pushf
je
xchg
inc
push
cmovnp
mov
xchg
add
xchg
js
jns
outsb
xchg
mov
mov
sarb
out
orb
outsb
paddq
add
div
cmp
pop
das
push
add
inc
pop
sahf
xchg
outsb
fwait
outsl
push
pop
str
pop
jns
out
or
jl
out
sahf
out
or
or
sahf
push
test
xlat
adc
out
pmaxsw
fldt
xchg
jp
pop
scas
lret
fisubs
outsl
sub
xor
lsl
cmp
lods
cmp
push
mov
jo
mov
outsb
mov
shll
sete
leave
repz
pushf
pop
aam
lea
pop
mov
mulb
jnp
ljmp
cltd
fs
add
mov
jle
ja
out
cwtl
jnp
mov
pop
cmp
dec
out
pop
push
add
cmp
jle
mov
push
xchg
lsl
dec
dec
sbb
ret
rclb
pop
lidtl
add
loop
ljmp
sysret
or
or
incb
pop
cmovs
in
in
xor
enter
jl
in
jge
mov
inc
cmp
lret
stos
sbb
arpl
xchg
imul
addr16
mov
cs
pop
in
dec
fstps
dec
in
inc
cli
pop
mov
push
test
enter
pusha
sbb
out
mov
scas
dec
rcpps
add
in
sahf
add
imul
repz
push
aas
mov
jns
fistpl
push
or
sahf
out
sahf
or
stos
sahf
out
jns
mov
adc
out
jns
lret
adc
fisttpl
jecxz
psllq
pop
push
enter
pop
push
add
cmp
inc
pop
dec
push
outsb
repnz
push
pop
pop
addr16
add
jg
adc
out
cmp
xchg
cmp
xchg
lcall
jbe
push
daa
iret
adc
lock
pop
call
sub
push
popf
daa
pop
iret
fcmovne
inc
mov
pmulhuw
xchg
adc
sbb
pop
xor
dec
mov
lds
add
jns
int
aad
fstpl
add
in
dec
in
pop
pop
cmc
pop
imull
das
das
std
pop
add
push
mov
je
adc
pusha
or
dec
pusha
push
pusha
iret
sub
pusha
mov
jae
daa
mov
jbe
push
xchg
fistps
daa
scas
and
loop
orb
popa
popa
popa
sahf
cmp
mov
add
inc
mov
push
or
repz
or
insl
jmp
jmp
femms
push
jne
popa
xchg
cmp
pushf
dec
test
adc
test
mov
ja
repnz
add
mov
dec
push
addb
add
push
test
popa
push
bound
bound
push
nopl
xchg
pushf
fistps
shll
out
test
dec
in
fiaddl
pop
out
add
jbe
xor
daa
inc
jp
out
out
and
adc
js
push
movsb
rolb
test
push
cmp
fcmovbe
inc
or
cld
add
pavgb
jae
in
in
push
ret
sub
test
arpl
push
pop
sbb
dec
mov
xlat
push
cltd
mov
cmp
or
xchg
mov
nop
pop
arpl
pop
sub
mov
repz
outsb
setbe
es
iret
add
and
push
in
jb
pop
leave
mov
fs
mov
inc
iret
jae
jne
dec
rsqrtps
imul
outsb
repnz
jnp
add
dec
sahf
or
adc
or
mov
pop
sahf
fucomi
jbe
out
pxor
mov
and
in
and
push
add
cmp
in
in
pusha
push
in
mov
in
lock
adc
out
jbe
dec
imul
xchg
in
in
sahf
adc
setle
leave
shl
sbb
add
mov
sbb
sbb
and
or
and
push
jo
ja
push
add
push
daa
inc
pop
dec
repnz
dec
addr16
mov
pop
push
push
jb
pop
jb
jl
pop
jb
pop
test
aam
daa
jns
pop
push
xchg
dec
cmp
push
xchg
jle
out
xchg
and
filds
test
pushf
int3
iret
aam
leave
jae
pop
aam
add
notl
mov
imul
cmp
mov
xchg
mov
xchg
xorl
leave
or
inc
jb
inc
in
cmp
and
xor
push
mov
js
mov
adc
mov
sbb
and
push
add
mov
iret
mov
aas
fmull
push
in
in
daa
in
push
or
es
cmp
pop
pop
imul
inc
push
les
enter
imul
imul
add
lock
cltd
push
mov
cmp
cmp
aam
add
xlat
lret
out
jns
push
add
insb
inc
cmp
enter
insb
cmp
adc
insb
insb
and
mov
mov
adc
out
sbb
pushf
pushf
pushf
movsb
lods
das
int
out
sahf
ja
push
push
fldl
in
out
sahf
or
or
or
sarb
push
std
insb
add
jns
pop
push
push
sbb
jns
pop
push
add
sbb
and
insl
jns
mov
pop
clts
push
jbe
and
fsub
jle
bts
jns
xchg
xchg
insl
ror
sarl
cmp
fsub
push
adc
adc
iret
repz
adc
outsb
adc
out
sahf
out
push
adc
jns
xor
aas
sbb
jns
out
push
sbb
imul
sahf
out
jbe
sbbl
mov
xchg
and
jns
and
sahf
out
into
and
jns
in
out
sub
sub
sarl
sub
sub
sbb
jns
out
or
cs
out
sahf
cmp
inc
xor
cmp
or
xlat
dec
sahf
out
ss
cmp
loopne
jns
jne
jge
cmp
cmp
sbb
outsl
cmp
sub
int
cmpsl
enter
add
xchg
fwait
cmp
sbb
or
jo
xor
outsb
in
jo
push
scas
push
daa
frstor
lahf
pop
sgdtl
xchg
adc
ss
mov
pop
outsl
ja
xchg
xchg
fcmovne
xchg
enter
repz
and
sub
repz
je
jl
test
jns
mov
xchg
pushf
shld
jb
loopne
push
jb
daa
out
sbb
push
sub
in
dec
dec
inc
dec
pop
push
daa
mov
in
jb
jp
cwtl
pop
mov
cmp
in
in
sbb
cmp
hlt
sub
jae
push
out
dec
fisubrs
push
cmp
dec
push
cmp
xchg
push
pop
xor
cmovb
ja
push
xor
jae
ret
aas
push
add
jae
call
xchg
cmpsl
mov
pop
mov
je
mov
and
and
add
and
add
push
or
pushf
mov
jmp
jbe
shll
icebp
ja
and
fcmovb
out
ja
jne
pop
in
jo
sahf
xor
out
sahf
xchg
dec
push
add
xchg
xchg
imul
mov
or
or
stos
mov
ror
jns
sahf
adc
in
out
jnp
lahf
out
adc
pop
push
fwait
cmp
leave
sbb
sbb
psllq
scas
sbb
cmp
inc
push
repnz
iret
push
pop
push
iret
jae
and
cmp
jmp
xor
es
push
ljmp
aas
sbb
insb
cmp
emms
mov
xchg
mov
ja
daa
gs
jns
add
push
cmp
das
mov
xchg
out
or
push
or
mov
push
outsl
movntq
jg
push
adc
mov
adc
lahf
dec
xchg
cmp
cmpsl
push
pop
scas
sbb
mov
mov
inc
aas
lcall
inc
pop
leave
stos
inc
pop
mov
ja
add
out
push
mov
ja
cli
add
xor
jb
mov
enter
add
jo
mov
outsl
bound
push
push
outsb
mov
in
lea
pushf
fmull
xchg
lods
add
fs
fmuls
loopne
lock
call
pop
dec
adc
loopne
aas
jns
sahf
ja
mov
add
xor
repz
fmull
cmp
dec
add
jmp
jns
in
mov
mov
in
mov
jb
xchg
in
jp
pop
jb
mov
xchg
dec
addr16
das
jp
leave
in
and
xchg
xchg
leave
bound
push
sub
mov
fcompl
movsl
push
jecxz
repz
mov
pop
dec
sbb
lock
dec
dec
clc
rcrb
cmp
jnp
ja
jp
dec
jnp
inc
cmovle
dec
lock
outsl
pop
pop
jnp
cmpsw
push
xchg
xchg
mov
cmp
xchg
cltd
mov
les
paddq
jnp
test
lcall
jl
pop
test
jl
daa
jl
popf
and
mov
dec
jl
pop
or
ficoml
insl
pop
popf
pop
rcrb
test
pop
xchg
add
dec
dec
mov
fsub
fnstenv
fisttpll
call
shlb
and
outsl
pop
sbb
nop
pop
ret
and
sahf
mov
inc
xchg
daa
jge
push
inc
repnz
pop
xchg
fmulp
leave
leave
jle
mov
cmp
add
xchg
ror
rcll
leave
dec
or
add
lret
lea
mov
unpcklps
divps
pop
cmpsl
dec
jle
push
jb
mov
jle
addr16
mov
or
sbb
jae
enter
push
ja
dec
pop
mov
lahf
jl
push
jg
dec
cs
test
aam
in
das
fs
insb
jg
daa
adc
loopne
xchg
imul
jg
mov
sbb
jg,pt
xor
iret
ljmp
mov
adc
cmpsl
cmp
pop
inc
dec
pop
push
lods
add
mov
adc
orb
ja
mov
xchg
int3
xlat
loop
in
orb
syscall
out
add
push
push
pop
sbb
and
cmp
repz
or
or
out
sahf
inc
or
or
cmp
mov
in
xchg
test
in
in
mov
mov
and
sub
andb
repz
push
push
push
push
pop
and
cmp
jmp
sbb
cmp
cmp
sbb
push
out
cmp
adc
fmull
sub
inc
pop
dec
pop
jns
leave
repz
fidivs
jns
jns
out
test
xor
lcall
sahf
out
mov
out
sahf
out
fdivrl
cmp
repnz
or
in
adc
pcmpeqd
cmp
inc
cs
aas
dec
movntq
out
dec
pusha
dec
imul
jns
dec
jbe
orl
push
xchg
cmpsl
fwait
cmp
rcpps
mov
xchg
xchg
ftst
out
cli
filds
test
or
in
movsl
iret
test
inc
test
test
pusha
divps
pop
js
sbb
imul
out
fisttpll
add
mov
dec
xlat
lret
test
loopne
mov
popf
dec
push
cmpsb
inc
inc
sub
lahf
int
or
cmpsb
push
test
mov
push
add
es
repz
clts
in
in
cmp
push
dec
ja
out
or
test
daa
mov
mov
xchg
iret
pushf
movsb
lods
shl
in
mov
sub
addr16
sahf
pushf
fsubrl
xchg
out
idiv
pop
xchg
jns
inc
jbe
inc
dec
lock
xchg
fstl
pop
imul
je
jg
or
jns
or
daa
daa
daa
ror
loop
cmp
in
psubb
cmp
adc
xchg
jns
aaa
and
sbb
sbb
fucom
jns
sbb
push
nop
pushf
cmp
push
pop
data16
jns
leave
jno
push
and
jbe
popf
test
mov
daa
mov
leave
das
aam
dec
sub
adc
xchg
cmpsl
mov
push
adc
movsb
push
les
out
mov
leave
rep
cmovbe
add
cmp
jg
jns
mov
xchg
out
xchg
add
leave
mov
lret
lret
pop
aam
fisttps
jmp
sti
test
xlat
cs
or
idivl
push
mov
out
dec
sahf
sub
adc
adc
inc
push
dec
pop
pop
sbb
sbb
pop
test
iret
repz
sbb
jmp
and
mov
and
shll
rcrl
es
sub
sahf
cmp
repnz
or
pop
aad
inc
mov
inc
adc
movsb
rcrl
pop
add
cmp
ja
mov
jb
add
jns
mov
imul
add
inc
aas
push
jo
adc
and
data16
out
mov
or
ss
add
shrb
mov
mov
lahf
pop
dec
aas
dec
pop
pop
out
pushf
out
or
sahf
out
sahf
jnp
xchg
xchg
adc
iret
mov
addr16
out
out
sahf
sarb
jg
or
mov
lods
and
sbb
jg
pop
lods
sbb
repnz
jnp
insl
pop
push
fisttps
imul
sub
iret
dec
add
mov
outsb
mov
push
add
push
sbb
adc
popf
cmp
das
adc
inc
movzbl
rorl
int3
sbb
xlat
popf
out
fsubp
push
sbb
sbb
mov
js
orl
repz
add
imul
push
or
mov
psubsb
jnp
cmp
decb
mov
push
nopl
adc
adc
mov
adc
dec
cmp
jae
dec
pop
packsswb
outsb
sbb
iret
jae
jbe
sbb
jns
sbb
dec
sahf
out
mov
and
sarl
in
and
jmp
jmp
repz
pop
out
push
pmulhuw
ja
push
sub
imul
sahf
out
sub
mov
out
pop
xchg
xor
leave
rep
scas
inc
push
xor
daa
iret
cmp
sub
cmp
cmp
mov
mov
outsb
cmpsb
mov
psubusw
and
jns
das
add
or
in
scas
jg
dec
call
fistpll
in
jl
add
mov
push
mov
inc
mov
es
pop
psrlw
mov
push
sub
jg
cmpb
nop
fs
mov
add
data16
mov
iret
cmp
pop
nop
inc
mov
xlat
add
dec
mov
shlb
stos
roll
add
and
into
pop
mov
leave
mov
inc
lahf
xchg
mov
test
test
inc
cmp
fdivr
dec
xchg
cmc
add
xchg
pushl
mov
fdivrl
push
jne
add
and
inc
pusha
mov
pop
fs
xchg
xchg
push
cs
out
pop
cmpsl
push
movsb
lock
addr16
addr16
mov
mov
xchg
inc
pop
dec
sahf
out
ss
ds
dec
xchg
nop
insb
push
adc
pop
sub
out
and
xchg
pushf
loope
pop
sub
mov
ret
xchg
seta
add
inc
loop
inc
and
pushf
mov
mov
jb
dec
jle,pt
mov
mov
adc
inc
cwtl
mov
jnp
test
dec
jb
pop
jnp
cmp
and
mov
cs
dec
cs
nop
andb
add
call
fdivr
cmp
cmpsl
mov
xor
daa
push
das
scas
add
ljmp
xchg
xor
pop
ret
cmp
mov
and
int
pushf
pop
xor
enter
pop
jo
mov
test
adc
or
jg
vpshuflw
cwtl
scas
aaa
cmpb
jb
mov
mov
jmp
sub
scas
iret
loopne
add
push
xchg
mov
aas
sub
or
push
test
dec
xchg
push
push
addr16
pop
adc
and
push
rcr
mov
pop
shrl
pop
mov
lahf
js
pop
into
scas
inc
dec
cs
shlb
sbb
mov
inc
pop
mov
jmp
repnz
inc
mov
cmove
faddl
aas
mov
mov
orb
lea
cwtl
dec
scas
adc
aas
mov
lcall
int
adc
mov
sbb
xchg
pop
pop
mov
or
mov
stos
add
mov
push
add
dec
repz
loopne
lar
and
cmp
and
repnz
sti
mov
scas
mov
pusha
mov
mov
out
xchg
fucomi
cwtl
outsl
or
adc
cwtl
lds
push
cwtl
jmp
xchg
pop
btc
leave
push
jp
mov
sub
movsb
test
xchg
cwtl
xchg
pushf
inc
mov
jns
in
mov
mov
fistl
dec
out
jb
ss
incl
mov
nop
mov
xor
das
nop
pop
xchg
mov
cmp
jb
push
push
addr16
aad
pushf
stos
incl
pop
jb
mov
cmp
out
pop
das
in
in
jg
mov
adc
sahf
ja
push
add
inc
xor
jns
dec
sub
in
in
pusha
push
mov
and
mov
nop
push
push
repz
in
mov
cmpl
pop
sarl
fsubrp
hlt
lcall
js
jns
scas
test
ret
push
fadds
sbb
fwait
inc
jg
enter
dec
dec
fwait
push
fwait
pop
and
add
mov
out
fwait
push
leave
push
shrl
fmulp
into
fcomps
psllw
pop
decb
ret
adc
out
xchg
lahf
out
pop
pushf
push
add
add
inc
pushf
ret
pop
jl
xchg
pushf
nop
ret
pop
ret
mov
sbb
aas
jae
xchg
add
and
or
push
inc
das
cmp
fwait
sbb
scas
bound
testl
sbb
cmp
insb
cs
sbb
and
xor
aaa
test
mov
xchg
iret
add
xchg
out
pop
sbb
int
out
push
das
inc
pop
push
out
scas
push
jg
sahf
mov
lcall
test
and
pusha
push
fdivrl
adc
test
pop
xchg
inc
popf
js
and
push
push
add
sub
test
push
add
insl
sub
sbb
lock
add
mov
cmp
cs
inc
push
push
pop
sbb
inc
aas
xchg
stos
adc
out
pop
inc
add
mov
cmpsb
inc
aaa
sti
push
fildl
aaa
xlat
add
je,pn
leave
push
femms
mov
push
das
repz
jmp
or
fcmovne
leave
or
or
or
or
daa
adc
fmull
leave
adc
and
popf
pushf
inc
push
addr16
das
push
sysret
mov
in
push
mov
insl
push
and
leave
repz
sbb
push
pop
xchg
fucomi
addb
orl
addb
pushf
fmull
fbld
or
sbb
data16
incl
inc
insb
les
mov
adc
out
stos
pusha
test
and
loope
test
xor
stos
sbb
dec
sbb
pop
adc
sahf
jl
aas
nop
add
add
movsb
add
cmpsb
lret
pop
movsl
sbbl
fildll
mov
xchg
or
leave
inc
mov
inc
dec
and
mov
in
sbb
in
call
xchg
das
clc
std
adc
push
ficompl
push
pop
fisubrl
xor
pop
mov
rcr
fsubp
stc
jb
jle
int3
outsb
ljmp
iret
repz
adc
or
add
sahf
out
lcall
jns
out
sarb
out
test
movsb
mov
repz
mov
out
push
inc
out
sahf
out
sub
and
dec
jo
lahf
add
test
mov
call
repz
ror
shlb
cmp
push
cmp
repz
and
adc
imul
test
in
jns
in
shlb
mov
subb
repz
and
call
jo
psllw
pusha
pop
sub
inc
pop
loop
push
roll
or
mov
xchg
jge
mov
cmp
clc
pop
orb
jmp
incl
ja
mov
inc
aas
loopne
mov
push
loopne
pop
pusha
add
xorb
sahf
popf
icebp
daa
push
push
push
sbbl
jg
stc
and
push
mov
cli
inc
xchg
dec
pusha
sbb
das
outsl
adc
sub
inc
or
hlt
add
push
push
add
orb
pop
xchg
cwtl
xchg
enter
cs
data16
inc
pop
in
mov
add
call
inc
push
divl
xor
sgdtl
sub
cmpsb
adc
call
rorb
outsl
aaa
xor
sub
sbb
mov
adc
movsb
mov
push
cmp
sbb
enter
imul
push
push
ds
idivl
jnp
push
mov
insb
adc
jnp
repz
mov
push
adc
iret
repz
dec
and
fs
sahf
idivl
adc
push
jae
cmp
scas
push
sbb
push
sahf
repnz
pop
dec
pop
mov
neg
and
and
iret
es
stos
insl
push
pushf
clc
repz
pop
or
push
cmp
daa
xor
add
push
pop
js
jns
out
mov
repz
iret
fwait
idivb
dec
insl
add
push
pop
ja
iret
repz
mov
repnz
dec
inc
test
fisubrs
push
dec
insb
icebp
shlb
cmp
inc
xchg
sbb
incl
xorl
jg
jb
sahf
mov
add
and
inc
pushf
or
ret
mov
adc
push
pop
scas
cld
xchg
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
mov
loopne
jmp
xchg
test
mov
cmp
inc
mov
lcall
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
mov
aam
aam
jp
iret
inc
gs
xchg
push
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
jmp
pop
cmp
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
jg
mov
jb
int
add
aas
jno
or
frstor
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
call
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
cli
cmp
int
mov
addr16
push
mov
xchg
aas
ljmp
in
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
ljmp
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
sar
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
inc
xchg
mov
fmull
call
ljmp
push
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
xchg
jge
pop
ficomps
frstor
lcall
cwtl
aad
dec
inc
scas
xchg
add
popw
rorb
mov
pop
mov
mov
in
outsb
mov
pushl
add
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
lcall
jmp
mov
hlt
movl
imul
in
leave
jmp
dec
pop
add
insb
push
arpl
psubd
or
outsb
cmp
imul
std
jmp
shl
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
aaa
mov
fdivs
jne
iret
mov
fcompl
shrl
neg
push
adcb
push
popa
sarb
jmp
les
iret
shld
sub
mov
and
or
call
dec
push
sarl
fdivl
jno
add
aad
mov
lcall
mov
push
movsl
in
lahf
xor
mov
js
stc
ljmp
push
mov
sbb
push
sub
insb
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pushl
cld
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
lcall
ret
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
mov
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ljmp
or
add
mov
das
es
lds
or
add
mov
add
mov
cmpsl
call
ret
shlb
sbb
inc
fs
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
decl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
incl
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
scas
call
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
shrb
sub
mov
fidivrs
mov
jmp
scas
movsl
mov
xchg
mov
cmpsb
mov
call
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
filds
sub
data16
jns
insb
inc
dec
imul
adc
loop
lret
fldl
aad
out
sahf
out
xlat
fcomp
fcmovu
sahf
out
sahf
fsubp
jecxz
out
sahf
dec
in
jmp
sahf
jmp
in
repz
cmc
jns
out
div
clc
stc
cli
or
out
cld
aas
adc
aas
cmp
adc
inc
or
pop
or
push
shrb
jnp
bound
jle
int3
dec
outsl
push
dec
aaa
sbb
xchg
pop
sub
popa
outsb
out
pop
addps
inc
push
inc
pushaw
or
rolb
inc
push
dec
dec
dec
push
sub
out
aam
jo
incb
sbb
lcall
xchg
pop
dec
dec
inc
push
dec
inc
aaa
xor
pop
xchg
xchg
inc
dec
or
jbe
mov
aas
and
push
inc
pop
or
mov
pop
adc
push
pop
ljmp
addr16
aaa
aam
loope
or
subl
jp
jbe
jg
sub
andb
ret
test
ss
ljmp
imul
bound
out
and
jg
inc
jbe
push
jns
arpl
gs
dec
or
xchg
xor
sub
or
in
test
push
orl
inc
pop
xchg
fildl
sbb
xlat
cmpsl
stc
lcall
and
push
adc
pop
inc
pop
dec
fstpt
insl
bound
arpl
inc
andl
movnti
push
dec
orl
jno
fistpll
pop
inc
cmp
pop
bound
xor
pop
das
jo
pop
popa
arpl
cmp
arpl
or
xor
pop
aam
gs
xor
jae
push
inc
inc
shll
jbe
pop
sbb
dec
or
mov
dec
inc
faddl
inc
adc
insb
or
mov
inc
xor
popa
push
sbb
daa
pusha
inc
andl
imul
mov
cs
adc
and
pop
xchg
loope
pop
insb
xor
inc
inc
jp
mov
sbb
adc
jae
sub
and
or
insb
popa
sub
sbb
push
popa
xchg
aaa
aaa
xchg
aaa
aas
inc
add
aas
cwtl
pusha
lds
add
insb
pop
mov
popf
int
sbb
daa
pop
inc
aas
cmc
inc
mov
sbb
pop
push
fistpl
pop
push
cmp
jo
inc
inc
add
ds
cmp
add
pop
int
cmpl
int
push
dec
dec
lea
add
fists
inc
mov
mov
adc
ds
outsb
jne
rcrl
push
dec
jge
iret
mov
add
add
mov
arpl
add
outsb
loop
push
jns
mov
movsb
ret
or
imul
aas
std
or
cltd
dec
xchg
add
insb
imul
adcb
subb
lcall
push
movsb
jo
push
mov
ss
xlat
lea
nop
scas
mov
inc
sub
mov
or
pusha
inc
test
jno
popa
jo
loopne
inc
mov
outsl
add
add
mov
inc
rclb
movsb
sub
in
lcall
push
sbb
nop
test
pop
cmp
mov
jae
add
push
cmp
mov
jo
push
add
addr16
pop
shrl
insb
jns
das
mov
jb
jo
popa
jb
insb
adc
nop
adc
dec
mov
xor
insb
bswap
insb
inc
sti
or
bound
ja
inc
jbe
push
shrl
cmp
addr16
or
xchg
ja
or
mov
imul
xor
enter
push
mov
add
push
and
adcb
push
push
sub
aaa
bound
inc
add
imul
gs
cmp
push
mov
push
outsb
pop
cmp
fs
mov
xor
push
daa
aas
pop
sub
sbb
push
sub
inc
mov
test
add
xor
mov
mov
insl
sub
fs
filds
inc
or
fdivr
loopne
adc
dec
inc
mov
add
add
imul
mov
add
or
pop
pop
push
or
or
fidivs
or
or
adc
adc
push
adc
mov
jmp
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
filds
lock
add
mov
add
and
add
add
adc
add
ljmp
mov
jb
lcall
iret
imul
ds
xor
adc
pop
and
in
call
adcl
shl
and
bound
js
outsl
lret
jne
inc
add
mov
xchg
add
sbb
fdivs
inc
and
xor
add
subl
pop
adc
mov
scas
pushf
into
add
adc
add
pop
scas
cmp
adc
jo
pop
lods
push
adc
pop
popa
jno
and
adc
mov
pop
xor
lods
or
xor
adc
loope
icebp
mov
add
xorl
scas
xchg
or
js
pop
pop
ljmp
adc
xchg
ljmp
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
out
pop
les
fsts
dec
mov
loope
mov
cmp
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
stos
pusha
inc
mov
incl
sub
pusha
add
sub
decl
bound
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
xchg
ficompl
cmpsl
xor
mov
test
mov
cli
aad
std
movsl
jecxz
pop
mov
lods
and
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
ljmp
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
cmpsb
fisubrl
in
mov
orb
int3
lcall
fs
scas
push
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
pushl
scas
xchg
test
aam
and
sbb
sarl
and
rcr
incl
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
add
in
icebp
mov
pop
lock
std
or
pop
mov
daa
test
mov
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
cld
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
clc
pop
pop
mov
jmp
sbb
xchg
mov
jb
mov
mov
push
mov
sub
pop
mov
jl
rorl
adc
xlat
gs
jg
hlt
push
add
stc
loope
aad
outsl
jg
mov
sar
andl
aas
icebp
testb
mov
jg
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
ljmp
cli
push
inc
sbb
paddb
inc
mov
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
mov
push
push
idivl
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
cli
sub
sub
das
jmp
xchg
pop
clc
pop
hlt
lret
ljmp
dec
movsb
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
loopne
fucom
out
sarb
sbbl
jno
or
sarb
mov
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
jg
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
lcall
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
pushl
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
pop
lock
stos
dec
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
sub
mov
test
jg
mov
lahf
cld
sub
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
std
les
cli
adc
and
lahf
fdivr
stc
int3
mov
mov
mov
pop
mov
std
loop
shrl
mov
dec
incb
fisubrl
aas
mov
mov
jo
or
cld
inc
or
pop
jg
add
jle
pop
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
std
jg
call
dec
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
and
clc
xorl
mov
imul
mov
push
in
aas
mov
fmull
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
loope
pop
in
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
fbld
data16
pop
nop
mov
inc
sti
arpl
daa
lock
jg
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
fsubr
fistps
lds
fidivrl
jg
stos
stos
sub
mov
repz
jmp
sub
jge
xor
lahf
les
sbb
sbb
cld
add
aas
mov
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
dec
shrl
lock
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lcall
fsubs
shl
dec
jp,pn
adc
adc
fistpl
out
lcall
push
push
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
call
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
pushl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
pop
pop
xor
rorb
and
add
lods
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
das
cld
push
movsb
insb
or
and
xchg
fidivrs
scas
push
test
aas
repz
sbb
lock
or
push
paddsw
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
ljmp
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
adc
lcall
ret
faddl
xchg
lcall
mov
mov
or
dec
ss
lods
lock
mov
or
repnz
mov
pop
adc
call
cmpsl
lret
stos
fisttps
pop
in
cmp
jmp
mov
and
outsl
insl
pop
lock
jmp
hlt
dec
mov
ja
pop
in
xlat
inc
aas
mov
jg
mov
sub
addr16
mov
out
daa
jp
std
adc
cltd
or
and
leave
mov
ret
nop
cmp
das
incb
lock
pop
pop
addl
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
add
mov
fbstp
out
xchg
add
out
icebp
mov
loope
mov
pop
leave
xchg
cmpsl
popf
sti
mov
fbld
mov
outsl
das
push
in
jge
out
ret
cmpsb
cmp
call
xor
decb
jbe
add
decb
dec
adc
sbb
jo
call
popf
push
sbb
mov
cmp
int
add
push
pop
aaa
push
cltd
nop
test
add
sbb
xchg
fimull
in
jmp
int
jmp
arpl
adc
mov
sub
jbe
mov
clc
loope
loope
mov
lahf
jp
or
scas
jo
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
or
sbb
jo
dec
lds
sarl
pop
out
jg
jno
ret
sub
imul
clc
inc
sbb
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
lcall
mov
jne
in
sbb
xchg
imul
push
shrl
std
mov
daa
jmp
fmull
lock
add
mov
mov
add
cli
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
dec
popf
pop
add
inc
add
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
and
pushl
outsb
sbb
aas
inc
or
jns
or
add
push
test
push
sti
pop
inc
dec
push
mov
dec
mov
fs
fdivrs
int3
call
pop
iret
and
add
dec
mov
sarb
mov
jmp
aad
test
xor
cmp
adc
inc
jo
test
mov
test
call
jae
ret
icebp
cmp
add
aad
rcrb
fucomp
aas
push
mov
test
loop
out
dec
sbb
mov
pop
in
ret
test
cmp
pop
iret
es
fwait
xor
inc
jo
lret
into
cmp
xchg
in
xchg
xchg
int
mul
adc
add
roll
xor
ljmp
call
lods
iret
and
sbb
add
faddl
stos
jb
out
sbb
incl
nop
sti
mov
imul
inc
js
fistl
mov
cmpsb
stos
dec
jns
mov
pop
jne
adcb
popf
dec
jns
iret
leave
cld
jne
dec
pop
int
xor
push
setp
cld
mov
fimull
sub
mov
mov
call
out
xchg
sbb
aaa
pop
mov
cmp
cmp
iret
mov
adc
call
xor
mov
dec
xchg
mov
xor
les
repz
outsb
arpl
cmp
popa
xchg
cmp
cwtl
push
mov
ror
jmp
ret
pop
lcall
lcall
popa
test
xchg
std
push
in
cli
push
inc
jo
jg
fsubp
test
stos
popf
test
push
mov
call
pushf
int
lods
push
lds
adc
pand
pop
lea
mov
add
sar
clc
add
stos
push
xor
out
js
cmp
xchg
pop
popa
pop
imul
inc
and
gs
cmp
sub
loop
jbe
lock
dec
js
enter
jge
jne,pn
cmp
std
iret
push
sbb
mov
scas
mov
add
sub
pushl
inc
or
daa
push
cmpsl
mov
ret
mov
push
adc
out
sub
leave
xchg
loope
inc
push
push
fs
scas
cmp
rclb
imul
jne
ljmp
cmp
sbb
dec
or
in
shl
sbb
je
in
push
lcall
andnps
decl
cmp
cmpsb
jecxz
movsb
mov
mov
in
push
pop
dec
jge
xlat
out
imul
fucomi
mov
and
jnp
int
in
and
paddb
incl
and
shlb
ds
imul
sarl
pushl
cmp
sbb
mov
pop
or
cmc
dec
lds
out
sarb
sar
fidivs
sahf
pusha
sub
incb
out
shlb
rorl
dec
push
xor
pushf
sbb
cmpsl
jo
jg
les
xchg
out
adc
dec
jl
aad
push
adc
jmp
incl
inc
rorw
repz
jp
loope
stos
popa
aaa
insl
imull
nop
ror
adcb
decl
outsl
jb
ret
mov
mov
sub
pop
or
cmp
cli
xchg
push
movsb
icebp
lea
lds
mov
jno
pop
repnz
arpl
mov
fbld
test
stos
xchg
pushf
and
xchg
cmpsb
mov
jb
ds
rolb
push
mov
push
mov
and
adc
push
in
popf
shll
xor
xorl
cmp
dec
shlb
mov
movsb
cmp
or
mov
add
cmp
xchg
outsb
ljmp
cmpb
call
add
inc
sarb
ja
sbb
testb
jne
ljmp
mov
mov
dec
clc
jg
jnp
mov
mov
cld
add
cmpsb
loop
pushl
inc
ljmp
nop
dec
sbbb
ret
aad
mov
loopne
mov
sahf
or
or
cmpsb
dec
mov
push
sub
sbb
push
incl
push
push
jae
add
mov
rcrb
fninit
sbb
mov
enter
jle
jle
pop
or
fisttpl
dec
dec
fs
test
pop
xchg
push
lods
mov
jne
xor
xchg
mov
sbb
and
mov
fdivs
into
ss
imul
not
loope
xchg
movsl
fstl
iret
int
mov
sarb
clc
pop
add
insl
mov
inc
or
cmpxchg
inc
jecxz
mov
pop
xchg
in
into
push
or
in
jbe
pop
xor
dec
aam
repz
xchg
xor
pop
or
inc
std
dec
mov
incl
fidivrl
aaa
shrl
shl
lea
jecxz
xchg
push
cmp
push
jnp
pop
fisttpll
dec
fiadds
lds
xchg
sub
outsl
faddl
rcrb
push
ljmp
sbb
push
loop
xor
test
sub
cwtl
mov
repz
pushl
in
mov
push
fwait
xchg
xchg
loop
mov
mov
jg
popa
and
incl
dec
xorl
jmp
imul
cmp
lods
mov
incl
inc
into
out
in
sahf
mov
andl
or
or
dec
in
jge
jmp
test
mov
lahf
inc
mov
in
cmp
xor
adc
mov
ja
push
adcb
cmp
stc
cmp
ds
arpl
out
sbb
fcomip
push
jne
push
pop
jp
cmp
out
fildl
inc
dec
ret
xor
cmc
ljmp
in
mov
sub
stos
out
fildll
popa
fsubrl
xchg
js
sbb
lret
jb
incl
ds
popf
je
sti
cld
hlt
iret
ss
sti
fisubl
lcall
ljmp
ss
pop
cld
or
stos
mov
loop
mov
jmp
incl
sti
adc
gs
bound
dec
dec
decb
loop
lret
mov
pop
incl
std
lea
push
ret
ret
dec
in
jmp
loop
mov
and
ret
fwait
out
push
push
test
add
ljmp
sbb
jnp
das
inc
jmp
adc
push
jp
mov
out
mov
dec
or
aad
adc
shll
sbb
cmp
jmp
out
jbe
dec
movlps
sbb
and
cltd
mov
cmc
inc
nop
out
int
cmc
pushl
dec
pushf
and
sbb
adc
cwtl
lods
adc
call
pop
mov
test
negl
sub
xor
fisubl
xchg
mov
xor
mov
icebp
lcall
mov
fisubs
jecxz
jne
xchg
sub
pop
hlt
mov
mov
mov
sbb
add
or
lfs
ljmp
and
pop
mov
adc
icebp
push
icebp
rol
sti
lods
rorb
incl
cs
loope
cwtl
dec
ss
addb
in
pop
xchg
orl
jbe
int3
clc
lcall
sahf
mov
hlt
or
bswap
mov
jl
out
aad
push
pop
lahf
out
pop
dec
or
fistl
xchg
xor
jb
popf
imul
mov
mov
fnstenv
mov
pop
aas
incl
pop
hlt
addr16
and
fmull
or
out
shrl
dec
or
lds
test
pop
adc
call
repz
mov
in
insb
pop
xor
jmp
sahf
xchg
mov
jo
lcall
jl
xchg
add
mov
and
push
jae
sbb
pop
mov
xchg
inc
std
pushl
int
in
rol
out
lods
mov
cmp
les
jbe
stos
jle
pushl
inc
pop
scas
outsl
sbb
repnz
or
pop
fisttps
push
cmpsb
cmp
xlat
loopne
cmp
int3
fwait
int3
sbb
dec
mov
mov
cli
mov
clc
addr16
add
mov
lcall
pusha
cmpsb
cmp
pop
shlb
test
inc
push
mov
incl
adc
mov
mov
fstl
sub
jae
and
out
clc
jg
lret
cmpsb
mov
sub
mov
pop
movsb
shrb
lock
loope
shlb
aaa
mov
rol
cmp
xchg
xchg
jle
mov
cli
leave
sbb
adc
pop
sbb
enter
mov
cs
sbbl
sbb
cmp
loopne
pusha
xchg
and
icebp
pushl
mov
jns
push
and
popf
and
shr
inc
adc
adcl
nop
push
incl
call
lods
inc
dec
sarl
push
mov
adc
push
mov
mov
inc
std
repz
hlt
ljmp
mov
lcall
shll
push
fldcw
add
sbb
sub
xchg
mov
outsb
xchg
loop
jg
call
lds
pop
lret
cs
or
sbb
gs
ljmp
jmp
int
fiadds
repnz
daa
out
lret
stos
cmp
xor
jmp
repz
jecxz
xorb
daa
jae
loopne
enter
popf
movsl
xchg
inc
test
jb
jp
les
ss
push
or
or
cmp
pop
scas
loope
je
cmc
pop
pop
pushl
push
mov
xor
mov
lds
mov
adc
aad
lret
mov
lcall
addr16
and
fdivs
jge
rcl
sub
jg
mov
jp
and
data16
xor
scas
cmp
testb
adc
pushl
dec
xchg
int
enter
add
adc
outsl
stos
arpl
add
mov
jg
lcall
pop
fisubs
adc
push
xor
push
nop
stos
pop
adcl
xchg
dec
push
push
std
mov
vprotd
insl
testl
jmp
jecxz
pop
sub
jecxz
iret
pop
ja
mov
or
test
mov
stc
arpl
out
cmp
jo
sub
push
dec
jg
cmp
inc
jo
jns
lcall
mov
sahf
orb
cmp
mov
mov
cmpsl
sbb
call
in
call
and
jns
cmp
xchg
inc
and
xchg
jae
inc
outsb
pushf
mov
loope
lods
lcall
mov
fsubr
dec
lahf
cwtl
fisttps
fistl
lea
mov
aam
lcall
arpl
test
lahf
sete
xor
sti
cmp
push
mov
fdivrp
or
out
call
jp
push
mov
rcrb
adc
aam
lea
data16
fidivs
sar
jp
sub
inc
test
add
nop
and
outsb
ljmp
addb
push
in
or
or
xor
lcall
cs
pushl
clc
je
xor
daa
movsl
in
stos
pushf
add
clc
pop
jno
in
add
mov
xchg
pop
dec
stos
pop
adc
mov
push
dec
movsl
out
sbb
pop
mov
inc
xorl
decl
fldcw
outsb
xor
lahf
stos
jecxz
outsb
mov
sbb
dec
out
lods
fcompl
cmpsl
insl
adc
dec
xor
imul
decl
imulb
cmc
mov
lret
mov
push
cld
scas
cmp
decl
lds
cmp
pop
push
mov
add
mov
mov
incl
pop
mov
cs
pop
pop
adc
fs
mov
sbb
stos
sub
in
xor
push
into
pop
daa
xor
or
mov
rol
int3
and
cmpsb
cld
push
lret
sahf
jb
decl
out
xchg
cmp
daa
jge
sbb
jmp
xlat
jl
pandn
xchg
adc
jmp
and
stos
data16
cmc
add
sbb
xlat
add
fistl
int3
lcall
outsl
cmp
fwait
or
decl
call
mov
icebp
scas
sti
lcall
dec
lods
movsb
dec
out
arpl
loop
inc
hlt
into
add
xor
lods
sub
cld
cwtl
push
arpl
add
shr
call
cld
mov
je
and
xor
dec
sub
mov
jnp
shl
sbb
jne
cmp
cmp
lret
je
xor
jnp
pop
cmc
incl
outsl
sahf
aam
stos
nop
and
xchg
jne
and
addr16
enter
sub
xchg
sbb
jne
or
mov
jb
inc
std
jno
mov
movsb
adc
pop
fdivs
xchg
cmp
lret
int
cmp
add
push
add
sbb
not
jo
adc
and
jg
lret
ret
cwtl
fldpi
dec
sub
shrl
mov
adc
cwtl
push
incl
add
jecxz
int
mov
lret
scas
dec
mov
cmpsb
rcrb
pop
inc
lds
bound
decl
pop
iret
xchg
sbb
dec
loop
adc
fs
cmp
decl
sub
rolb
sbbl
fwait
push
and
cs
jl
jg
mov
xchg
pushf
mov
roll
bound
sbb
pop
mov
call
jg
mov
pop
outsl
aam
xor
jmp
lcall
dec
popf
pop
arpl
scas
test
sub
cmp
cmp
call
movsl
test
sub
loop
xchg
imul
js
pop
js
incl
mov
pop
stc
sub
sbb
adc
jmp
call
mov
sti
pusha
sub
arpl
idivl
xchg
sub
sbb
xchg
jnp
fdivr
ljmp
popf
sub
aad
clc
sahf
cltd
xchg
mov
adc
jns
push
xor
dec
shrd
push
xchg
cwtl
icebp
cs
pushf
lods
bound
je
jae
inc
daa
in
lret
jg
sbb
inc
sub
sub
jmp
sbb
cmc
mov
into
pop
mov
rcrl
mov
idiv
lds
arpl
pop
std
jle
push
push
mov
xor
pop
pop
bound
bsf
push
icebp
loopne
cmpsl
mov
insl
xchg
jmp
mov
ret
jb
lods
popa
pop
out
jmp
sbb
mov
jp
sub
nop
and
addr16
not
dec
adc
xor
jmp
dec
cmp
cwtl
push
mov
push
cmp
sub
pusha
les
mov
sub
lcall
pop
push
jmp
mov
or
or
mov
jne
test
adc
incl
out
jl
test
sub
jge
xchg
jge
dec
iret
mov
jb
pop
push
out
pushl
cltd
adc
xchg
js
mov
je
es
or
negl
mov
mov
icebp
movsl
dec
or
dec
imul
adc
add
inc
push
sub
push
jno
aad
jne
sbb
cld
addr16
pushl
mov
cwtl
xor
mov
pusha
cmpsb
cmp
sub
lcall
push
lods
sub
jle
inc
jne
jae
scas
jp
adc
ret
int
js
ljmp
jns
fwait
repnz
pusha
jge
dec
sahf
inc
aas
jb
ficoml
ljmp
stos
or
cmp
mov
scas
movsl
lret
pop
in
or
mov
incl
movsb
sti
jnp
scas
dec
or
sub
lds
fmul
jb
pop
cmp
loope
call
std
mov
es
pop
fisttpll
adc
loop
or
pop
jmp
pushl
test
aaa
mov
pop
data16
movups
test
xchg
test
cmp
arpl
push
icebp
aad
test
es
sub
testl
out
xchg
or
lods
incl
xchg
fcmovu
ds
mov
cmp
push
cltd
add
or
mov
lock
add
jg
mov
mov
pushf
test
cs
xor
and
cld
add
nop
push
cltd
inc
mov
subb
stos
add
dec
mov
xchg
dec
push
cmp
dec
mov
adc
mov
call
testl
pop
into
out
fwait
out
es
xchg
mov
push
das
pop
insb
decl
sbb
jb
shl
mov
ljmp
sbb
adc
bound
inc
into
in
jns
sub
lret
lret
scas
pop
sub
adc
test
fmul
mov
sbb
push
dec
sub
pop
cld
divl
or
movsb
sti
rclb
jno
pop
inc
xor
ljmp
sbb
mov
lahf
jg
adc
and
lret
mov
lcall
js
lret
sub
adc
or
ds
idiv
inc
aas
push
cli
xlat
fisubs
cmpsb
dec
push
repz
loopne
ljmp
call
pop
nop
jg
leave
notl
dec
enter
sub
int
mov
lcall
push
test
add
xchg
push
jo
dec
or
inc
adc
jmp
mov
push
rorb
xor
mov
dec
inc
outsl
es
cmp
inc
ret
push
movsb
cld
pop
ret
sub
hlt
fsubrs
pushl
adc
lahf
bound
ss
pop
inc
xchg
xchg
movsl
cltd
pop
mov
leave
call
ljmp
es
inc
sahf
data16
add
aam
xchg
mov
outsl
push
les
pop
imul
ljmp
xor
leave
inc
cmpsl
sbb
imul
mov
fnstenv
pop
call
ret
loope
ljmp
cmp
adc
incl
lcall
mov
outsb
sbb
xor
xchg
and
xor
jmp
jno
pop
shll
jp
pop
add
xchg
test
aam
sti
cld
subb
mov
fdivr
mov
jmp
cmp
dec
sub
pop
cmpsl
xor
mov
rorl
sub
pop
mov
and
jae
data16
sub
push
lods
faddl
int
aad
pop
test
jmp
pop
stc
sahf
leave
lret
dec
lahf
lret
sahf
in
lcall
ret
xchg
dec
jo
lret
sub
sub
inc
addr16
sub
sbb
push
int
out
cmpsb
subl
jb
push
cwtl
cmp
mov
ljmp
dec
mov
out
stos
clc
test
fcoml
bound
mov
add
jge
xchg
xchg
add
ret
jns
mov
mov
ds
ljmp
or
jbe
mov
mov
stos
and
insl
mov
and
xchg
decl
in
add
push
ja
mov
lret
ss
lahf
and
shll
mov
call
inc
jmp
xorps
jg
pop
xchg
js
jge
icebp
lods
cmp
push
adc
xor
xchg
pop
jmp
xor
dec
in
mov
popa
sub
xlat
repz
gs
frstor
pop
pop
rcl
sub
incl
mov
jecxz
in
sbbb
mov
sbb
jge
inc
leave
or
add
lret
xchg
out
jno
ljmp
ss
aaa
cmp
insb
loop
add
mov
pushf
loope
push
mov
inc
xor
decl
test
pop
add
or
xor
push
jnp
mov
fwait
ljmp
push
mov
and
stos
mov
daa
pushf
stos
ds
fisubl
or
loop
loop
mov
pushl
fdivr
push
fdivs
data16
out
callw
aaa
ljmp
pusha
popa
sbb
dec
or
out
pop
fimull
mov
add
mov
out
addl
lahf
sahf
imul
cmp
adc
stos
jle
sbb
mov
dec
xchg
push
or
sbb
push
and
xor
aas
stos
sahf
dec
jbe
ljmp
push
sbb
ss
incb
int
pop
adc
stc
lods
mov
repnz
int3
add
rorl
decl
loope
fwait
stos
sbb
jp
xchg
mov
repz
mov
jbe
mov
cld
ds
arpl
movsb
pusha
lds
insl
cmp
fstpl
sub
mov
add
jae
push
addr16
jg
jmp
aas
outsl
lock
xchg
pop
add
jle
fnstsw
add
cs
cmp
ffree
ret
fwait
lods
fcoms
sahf
pop
outsb
daa
mov
mov
xchg
and
jecxz
std
lcall
scas
loop
jnp
jmp
adc
sub
out
ret
mov
add
push
nop
add
pushl
mov
and
aas
dec
outsb
fnstcw
ds
dec
xor
hlt
add
mov
jp
mov
sub
and
add
ss
jg
dec
gs
fnstcw
sahf
and
scas
mov
jmp
adc
movsb
push
pushl
leave
sbb
les
pop
mov
cmp
cmp
mov
test
push
inc
out
jbe
decb
sub
sbb
xchg
call
loopne
ret
in
inc
fiadds
shlb
sbb
xor
push
sub
xchg
inc
enter
outsb
dec
inc
btc
xchg
mov
dec
mov
or
sar
out
fimull
sbb
lea
inc
mov
es
mov
fmuls
add
js
loop
stc
in
das
and
adc
push
ret
fsubrp
push
outsb
mov
incl
dec
test
fcoms
ret
ds
push
bound
mov
mov
lds
sbb
cmp
xor
ljmp
jp
lds
les
mov
mov
loopne
xor
jmp
cli
adc
jb
adc
and
and
jecxz
push
cli
dec
cmpsl
cmp
xchg
pop
sub
in
fsts
cmpsb
and
rcll
cs
outsb
loop
push
dec
pop
scas
cmpsb
ret
pop
or
push
jne
pop
jg
lcall
loopne
cmpsl
je
inc
mov
ljmp
sub
ss
push
xor
js
call
cld
addb
xor
mov
lods
negb
or
cli
push
es
je
lods
nop
js
pop
sbb
iret
adc
cmp
stos
inc
mov
stos
dec
pop
outsb
lods
xor
pop
dec
push
shlb
call
push
push
loope
clc
popa
aaa
xor
lods
and
add
xchg
mov
jecxz
fldt
aas
and
xor
out
fnsave
loopne
in
aam
cmpsb
and
incl
out
ds
inc
aaa
lea
je
fdivrp
xchg
test
pop
call
cmpsb
movsl
inc
jmp
mov
fnsave
xchg
fmull
lcall
sub
scas
dec
pop
es
gs
lods
sti
movsb
test
lea
loop
mov
imul
cmpsl
xchg
cltd
cmp
ss
mov
and
and
inc
mov
xchg
jp
outsb
cmp
int3
int3
cli
mov
sub
loope
mov
test
cmp
imul
in
sub
cmp
xchg
jle
mov
decl
dec
je
jns
pusha
mov
mov
stc
hlt
xchg
movsb
mov
add
lcall
jo
mov
xor
call
lret
or
rorl
mov
std
xor
daa
popf
loop
jmp
daa
xchg
jns
cmp
inc
popa
pop
or
xorl
iret
arpl
sbb
cwtl
std
fistpl
gs
cmp
cmp
call
rdpmc
mov
int3
leave
addr16
mov
outsl
insb
dec
js
addr16
stos
out
pusha
mov
in
or
mov
ljmp
dec
mov
push
ljmp
add
int3
ficoms
mov
stos
call
lea
je
cmp
rcrl
sub
mov
cli
jmp
adc
mov
dec
out
dec
lcall
sti
out
mov
mov
add
jbe
inc
sbb
dec
mov
sbb
add
pop
jns
int
sbb
lret
push
mov
mov
sbb
sub
mov
xchg
dec
dec
xor
mov
pushl
call
ret
dec
jg
imul
pop
cmp
call
aaa
jno
push
pushl
add
ds
lds
sub
sbb
pop
shlb
jle
ret
lods
inc
stos
imul
test
dec
push
sub
dec
cmp
sub
call
xchg
mov
and
mov
pop
lds
cmp
cmp
decl
mov
pop
aas
inc
sub
imul
cmp
lods
repz
cmp
jp
mov
adc
mov
int
mov
mov
sub
pop
movsb
pushl
sub
inc
mov
flds
jle
jmp
jnp
push
mov
test
incl
pop
pop
push
incb
inc
add
mov
push
add
out
mov
in
das
aad
aas
popa
push
nopl
fsubrp
pop
rorb
jmp
dec
jno
mov
jmp
enter
call
sbb
int
ds
pop
mov
pop
lea
jg
xorl
es
out
sbb
aad
bound
in
mov
and
shll
jle
cmpsl
dec
outsl
test
mov
loopne,pt
js
js
and
cmp
aad
cmp
gs
lcall
xorl
pop
or
pop
repnz
push
lock
jl
repz
push
jmp
pop
mov
or
xlat
push
pushf
mov
inc
repz
pop
in
push
into
ret
ds
lcall
out
rorb
cmp
sub
fmull
sbb
dec
cmpsb
data16
pop
sar
sub
dec
movb
push
pop
outsl
pop
jns
out
inc
mov
xor
mov
cli
ljmp
pop
jle
hlt
lock
les
push
jbe
mov
adc
in
jnp
std
leave
sub
inc
jno
dec
aam
gs
push
push
std
iret
imul
aas
roll
lcall
xchg
adc
mov
mov
xchg
sahf
outsb
stc
xor
test
jle
and
std
ljmp
stc
mov
out
jl
mov
fadds
ss
mov
mov
fdivrs
pusha
loope
das
sahf
repnz
xlat
ljmp
xor
ja
insb
fldcw
ss
incl
jbe
xor
and
insb
add
mov
mov
loope
leave
and
test
out
and
call
mov
jg
gs
or
outsb
sub
xchg
push
stc
es
mov
add
adc
insb
cmp
mov
pop
mov
adc
xor
pushl
js
sti
in
dec
jg
mov
mov
cmpsb
call
jns
xchg
pusha
outsb
and
shl
js
pop
lret
push
cld
pop
in
ret
dec
int3
cmp
inc
and
ds
inc
and
xchg
mov
loop
cwtl
inc
imul
cltd
jo
lcall
insb
jmp
dec
add
inc
pop
inc
mov
jnp
xchg
ljmp
jg
add
xor
cmpsl
pop
cmc
inc
iret
inc
pop
jnp
clc
cli
scas
mov
mov
adc
lret
sub
sar
cld
mov
push
jl
dec
or
js
mov
add
push
ljmp
repnz
mov
or
push
loope
sarb
idivb
addr16
inc
xchg
in
or
pop
shl
icebp
pop
andb
cld
test
jecxz
mov
daa
ret
mov
pop
mov
repnz
out
sbb
and
pushl
aam
ljmp
bound
push
jl
or
inc
fisttps
sub
cmpsb
cld
pop
inc
xor
scas
or
adc
mov
cld
aas
push
cwtl
mov
push
arpl
loope
push
push
lock
mov
mov
or
push
movsl
jnp
out
inc
ret
ficoms
cs
ds
je
jp
jg
adc
pop
enter
cmpsb
dec
stc
ja
cmpb
cmpsl
pop
jge
sahf
jae
int
ljmp
inc
loop
enter
outsb
dec
push
mov
push
lret
js
fisttps
xchg
dec
mov
mov
pushl
sub
test
out
daa
std
mov
repz
inc
enter
mov
push
push
outsl
jecxz
ja
das
pop
add
sub
sub
int
outsb
lahf
mov
rcrl
fstpl
mov
inc
xor
sahf
sbb
mov
enter
cmp
mov
aam
idiv
out
mov
push
mov
sahf
mov
nop
push
mov
cwtl
rcl
stos
daa
sub
lock
out
jg
push
mov
fidivrs
das
mov
out
and
scas
add
incl
aad
pop
pop
sti
push
mov
sub
xor
mov
gs
push
aad
je
sub
push
fwait
mov
ljmp
out
testb
roll
imul
sub
scas
xor
or
pop
cmp
clc
jmp
mov
in
jo
andl
mov
adc
clc
fcoml
fiaddl
pusha
clc
mov
enter
mov
sbb
ljmp
push
adc
and
mov
outsl
lods
add
mov
xor
es
cli
jl
aaa
insb
js
sbb
icebp
mov
in
sbb
add
cld
sbb
das
mov
adc
icebp
stos
fmuls
repnz
fs
loope
out
mov
mov
incl
pop
sahf
xchg
ret
and
pop
shll
aas
test
push
sub
push
stos
lods
cld
inc
mov
test
fstps
hlt
gs
cltd
xchg
dec
movsb
pop
lods
sub
and
mov
lds
popa
lds
pop
cld
fists
insl
adc
rolb
and
fdivrs
cmp
out
insb
out
and
scas
test
or
inc
cli
dec
cmp
pop
add
cltd
rcll
popf
call
and
in
cmpsl
and
scas
hlt
mov
addr16
outsl
fcomps
lret
sub
pushl
sbb
mov
pop
setbe
push
add
xor
cmp
inc
mov
or
shlb
sbb
in
mov
insl
adc
lret
fbstp
inc
in
scas
xchg
lcall
cwtl
out
pushf
push
cld
aam
cmc
dec
or
xor
outsl
pop
hlt
call
out
cmp
xor
lods
xchg
dec
lcall
xchg
push
ljmp
out
lcall
movsl
jb
sarb
inc
ds
jne
xor
inc
mov
movsb
movsb
into
mov
lcall
ja
ja
addr16
pop
scas
out
sub
sbb
sub
xchg
sub
ret
cmpsl
dec
cmp
jbe
xor
shll
sbb
pop
jo
daa
icebp
sub
incl
mull
cmpsl
mov
mov
insb
mov
hlt
int3
jmp
jle
push
nop
lea
jg
ljmp
fbstp
cmp
pop
sbb
cmp
movb
sub
scas
cli
clc
test
push
imul
push
adc
sahf
push
sub
mov
xchg
in
aas
arpl
incl
rcll
sbb
out
mov
inc
xchg
pop
adc
jecxz
icebp
jae
loop
or
js
xchg
aaa
test
movsl
ds
out
inc
sbb
into
popw
pop
push
or
dec
jnp
mov
call
repnz
hlt
out
pop
addl
mov
rorb
add
and
xchg
xor
lcall
into
inc
pop
mov
dec
adcb
dec
insl
lods
cli
cmp
cmc
jecxz
fstpl
rorb
scas
jmp
jae
or
jmp
push
pop
mov
adc
dec
or
lcall
shl
dec
jbe
pop
mov
jb
int3
cmp
xchg
aaa
push
pop
dec
aas
mov
push
mov
jmp
jae
movsb
rorl
sub
insb
sbb
mov
cmc
mov
int3
mov
decl
shlb
sub
mov
faddp
in
in
mov
daa
outsl
in
or
sbb
decl
mul
mov
mov
add
das
add
sahf
pop
call
pop
movsl
mov
mov
scas
insb
ror
push
sub
mov
push
add
mov
dec
insl
sbb
jmp
pop
in
pop
mov
ljmp
adc
pop
stos
mov
sub
sbb
or
jg
decl
leave
pxor
mov
xchg
push
mov
mov
sub
decl
int3
inc
es
mov
dec
cld
sbb
mov
data16
xchg
outsb
xchg
push
and
orb
xor
mov
and
pop
outsl
pop
sub
dec
or
adc
loope
pop
imul
mov
leave
lea
es
ja
dec
mov
in
popf
inc
mov
stos
push
push
xchg
das
sub
stc
adc
int
pop
pop
aaa
jecxz
sti
das
shl
call
mov
push
xor
repz
cltd
std
inc
je
jno
lcall
js
dec
cmpsl
adc
and
cmpsb
xchg
loopne
xlat
movsb
cs
push
cmp
mov
or
in
or
xchg
scas
clc
aas
cmp
and
xchg
sub
mov
mov
outsl
jmp
add
insl
icebp
jmp
fwait
jl
aaa
jnp
lahf
ficompl
xchg
mov
pop
mov
int
ljmp
jmp
cmp
cmp
or
inc
xor
pop
mov
and
lcall
mov
jbe
or
fiaddl
aad
stos
and
jmp
popa
inc
mov
cmp
dec
stos
iret
js
adc
pop
adc
or
insb
pushf
cmp
jge
shlb
sub
sbbl
xchg
test
sbb
mov
or
or
enter
mov
or
leave
add
fldt
push
cmpb
mov
or
fisttpll
stos
jecxz
mov
jns
hlt
xchg
movups
shll
rcr
scas
mov
pop
enter
sbb
jmp
divl
mov
inc
icebp
push
idivl
daa
pop
cmp
call
push
cmp
jmp
cmp
dec
mov
or
call
fcmovnb
cli
adc
lcall
das
and
dec
insb
loopne
mov
repnz
imul
pushl
sti
mov
cmpsb
xor
vmovmskpd
flds
insb
js
pop
scas
mov
pushl
dec
stos
push
ja
or
xchg
add
push
aas
outsb
jb
inc
lock
fldcw
add
pop
incl
pop
test
scas
repz
cld
jg
movsb
in
shrl
mov
jmp
or
daa
inc
sarl
andl
cmp
and
icebp
notl
aas
popa
sbbb
mov
mov
aam
icebp
ljmp
je
aaa
add
loope
mov
jae
xchg
repz
mov
inc
sar
mov
mov
sub
shll
jmp
aaa
inc
bound
push
jge
rorb
push
push
push
lret
jnp
push
or
fdivrp
mov
jb
push
cwtl
mov
rclb
rcrb
dec
mov
sbb
jns
into
xchg
lcall
mov
xor
aam
test
xor
push
push
fdivrp
jmp
mov
mov
mov
inc
call
test
sti
adc
mov
iret
nop
xor
push
add
sahf
testl
mov
add
sbb
lret
sar
ljmp
dec
inc
push
add
test
jg
icebp
outsl
mov
fiadds
or
decl
js
outsb
mov
sub
sub
push
mov
adc
or
aam
inc
iret
and
lcall
mov
and
jge
or
mov
adc
out
mov
pop
adc
fcomps
test
mov
add
mov
jne
or
or
movsl
sub
lods
mov
xor
adc
push
xchg
incl
mov
notl
push
sbb
mov
pop
add
jmp
mov
cltd
jb
push
xchg
sub
mov
shll
xchg
xor
out
and
rclb
out
add
call
mov
les
mov
xchg
iret
movsb
pop
subb
adc
sbb
cmp
xor
sti
pop
pushl
sbb
sbb
sahf
push
mov
push
popa
adc
mov
mov
push
mov
call
push
pop
incb
or
inc
cwtl
int
inc
das
fldl
and
add
dec
adc
jle
scas
iret
xchg
pop
ja
les
adc
lods
dec
cli
lds
and
nop
lret
sbb
mov
pop
inc
add
lods
inc
xchg
call
inc
or
loop
call
inc
outsl
mov
add
aas
xor
or
or
negl
pusha
cltd
rcr
push
ret
sub
or
inc
add
inc
push
iret
out
pop
dec
lods
xchg
das
ds
add
addl
or
ss
or
test
hlt
ljmp
sub
push
adc
and
test
mov
mov
stos
sub
sbb
je
out
in
ljmp
in
cmp
loope
jnp
fs
fsubr
or
test
mov
cmp
pop
loopne
decl
nop
jecxz
lea
mov
int3
cmpl
call
fwait
push
ret
add
aam
outsb
dec
idiv
cmp
jbe
push
inc
incl
stos
jnp
push
sub
sub
xor
push
add
add
pop
mov
push
xchg
loopne
inc
sub
lods
mov
push
js
jmp
iret
xlat
mov
mov
add
in
hlt
push
int
fisttpl
out
inc
cltd
dec
xor
enter
mov
mov
xorb
inc
sarl
pop
cli
and
jecxz
inc
rorb
pop
pop
ljmp
dec
add
clc
mov
adc
lock
jno
out
push
ds
adc
ss
mov
mov
inc
xchg
cmp
adc
cmp
aas
insl
cld
mov
dec
push
inc
jg
pushl
mov
jns
movsl
movsb
cli
pop
in
cmp
sti
push
flds
ljmp
decl
dec
pop
dec
dec
xor
orl
cltd
fst
mov
pop
ds
ljmp
fisubrl
mov
insl
js
mov
lahf
xor
push
or
mov
mov
lods
movsl
jo
inc
int
cld
push
mov
sub
in
out
mov
xor
lock
or
pop
adc
mov
mov
arpl
out
pop
mov
ja
jge
mov
mov
sbb
mov
ss
sbbb
in
daa
lcall
shlb
neg
imul
push
lds
push
call
xchg
sar
mov
lret
dec
pop
inc
shr
inc
and
mov
dec
in
jb
adc
scas
clc
jg
push
stc
push
push
jp
test
iret
pop
cmpsl
or
mov
lock
pop
xchg
test
sti
fildl
mov
push
std
fistps
mov
jle
add
jecxz
mov
lcall
or
inc
mov
out
insl
fcomi
mov
adc
jmp
test
jae
repnz
pop
and
aaa
mov
out
jne
mov
or
xor
incl
cld
cmp
outsl
sbb
fidivrl
movsb
dec
cs
rolb
xchg
loop
rorl
fimuls
inc
rcrl
xchg
jecxz
lds
ljmp
cli
ljmp
sbb
shrb
nop
test
adc
mov
test
fnstenv
aam
fsubl
jnp
insb
add
jge
ljmp
push
adc
hlt
sub
lcall
lahf
pop
mov
int3
lods
aad
mov
jl
adc
and
ljmp
or
es
pop
mov
lcall
xchg
xchg
les
mov
ljmp
xor
sbb
loopne
pop
mov
ret
mov
mov
imul
sub
pushl
push
dec
xchg
mov
adc
movsl
cli
jne
add
sub
jbe
sbb
mov
dec
jne
incl
outsb
adc
call
push
push
leave
rolb
dec
fsqrt
sub
xor
ret
mov
test
test
cmp
mov
jle
and
add
xor
mov
jnp
jb
decl
out
lcall
or
mov
and
cmp
cmp
imul
mov
call
cmp
loopew
cltd
shll
sbb
cwtl
pop
mov
wrmsr
out
jmp
adc
inc
call
dec
mov
lret
iret
cmc
aam
test
xchg
mov
sub
stos
push
jo
fiadds
pop
lds
incl
aaa
pop
xor
imul
jbe
mov
cmp
jp
mov
mov
cltd
hlt
add
xchg
cmc
xor
mov
mov
mov
jae
cld
clc
fnstsw
cmp
jb
pop
dec
push
lcall
mov
orl
mov
es
ret
lcall
mov
lods
pusha
sbb
add
rclb
xchg
inc
dec
outsl
sbb
dec
lods
fdivr
jg
lcall
jmp
scas
mov
test
sub
lret
ja
mov
pop
hlt
push
cmpsl
aam
in
mov
push
and
adc
ja
sub
lea
dec
outsl
clc
pushl
das
arpl
roll
pusha
ljmp
xchg
test
stos
lcall
pusha
data16
jbe
leave
nop
mov
push
leave
pop
icebp
rclb
pop
decl
lods
mov
rdmsr
mov
icebp
xor
push
aad
test
ret
adc
incb
cld
repz
inc
push
sahf
sarb
pop
sti
hlt
pushl
roll
xor
call
mov
je
aaa
xlat
int
pushl
add
jg
add
data16
jb
jbe
aam
std
mov
fbld
stc
jns
add
dec
mov
stos
testl
out
je
ret
popa
call
add
push
mov
and
xchg
xchg
add
fisubl
jmp
std
outsb
out
aad
xchg
ljmp
cmp
sub
mov
ds
xchg
std
and
and
lcall
sub
fidivrl
mov
sbb
xlat
add
movsb
data16
adc
mov
cmc
pushl
push
or
test
lret
xchg
mov
imul
lcall
sti
and
incl
iret
jle
mov
pop
movsb
and
je
cmpsb
movsl
shlb
cmp
lcall
sti
cmpsb
or
jmp
fs
jl
mov
sub
or
aaa
test
add
mov
xor
cmp
je
fcoms
jmp
sbb
idivl
inc
test
sti
loope
and
aas
dec
cld
pop
js
dec
cmp
mov
mov
xchg
push
mov
mov
inc
mov
mov
cmpl
mov
fcomip
dec
cltd
push
in
addr16
inc
scas
push
idiv
movsb
out
or
sahf
rolb
ljmp
or
pop
sub
jle
pushf
das
sar
push
mov
sahf
mov
dec
and
xorl
cmp
pop
cmp
daa
loope
out
call
mov
lcall
dec
inc
ds
dec
test
push
mov
cmpsb
js
push
mov
mov
mov
mov
push
data16
xorl
and
insl
mov
xchg
mov
mov
fwait
sub
sub
je
orb
push
gs
mov
cld
jp
jo
mov
fists
addr16
sbb
mov
ljmp
jmp
ret
cmpsl
sub
jle
pop
in
jg
or
adc
jecxz
insb
orl
inc
mov
ljmp
xchg
jle
jb
mov
js
mov
xchg
mov
incl
xchg
fistpl
mov
push
pop
fdiv
in
xchg
movsb
in
adc
jmp
out
ficoml
push
fwait
ds
inc
je
ja
dec
adc
int
xchg
push
inc
cltd
jns,pn
fwait
sbb
pushl
and
shl
nop
and
mov
sarb
xor
incl
add
add
jmp
xchg
jmp
pop
inc
ljmp
incl
jle
hlt
aam
push
push
mov
inc
inc
rcl
dec
hlt
jp
in
paddusb
sbb
ljmp
orb
jnp
pop
ret
inc
xor
sti
jmp
imul
sti
lret
fwait
pop
cmp
fnsave
in
mov
insl
mov
sbb
loopne
les
sub
mov
or
je
in
call
lret
mov
push
shr
mov
xchg
repnz
xor
pop
push
bswap
insl
pop
mov
cld
loopne
xor
mov
sub
js
fcompl
push
cmp
xchg
xor
sbb
jae
sub
ss
dec
push
out
pop
pop
cld
jmp
ret
stc
loopne
out
jge
fisubrs
mov
out
xlat
mov
adc
lock
test
lcall
jmp
das
sar
cmp
mov
or
movsl
lret
inc
cmc
jg
xchg
mov
cmp
or
mov
mov
ret
test
call
add
dec
lock
incl
mov
cmp
pop
shll
out
lcall
adc
scas
inc
fldl
ss
decl
fidivs
lcall
fs
imul
outsb
rcl
rol
mov
or
ret
xchg
fistps
mov
pop
inc
pop
pushf
int
ret
jns
incl
cld
push
pushf
push
or
loope
fstps
outsl
mov
jns
lods
jp
ja
insb
dec
popa
pushl
loop
inc
jecxz
scas
popf
incb
or
dec
lret
inc
lret
pop
xchg
mov
push
decl
test
out
shl
push
jns
mov
xor
sub
out
cmpsb
int
pusha
cmp
ss
cld
add
adc
jge
dec
je
js
call
push
mov
push
inc
add
popf
pushl
outsl
push
cs
jnp
mov
mov
pop
mov
adc
adc
js
sub
fcos
decl
add
mov
dec
lret
cli
iret
add
pop
cli
pop
push
fisttpll
xchg
imul
pushl
mov
xchg
jns
push
out
test
inc
and
add
xchg
incl
jge
mov
jns
xlat
push
jge
lods
pop
jnp
stos
sbb
pushl
in
cmp
decl
ja
das
std
jle
mov
roll
fisubl
mov
lcall
int
cmp
cwtl
xchg
push
cld
mov
or
or
incl
push
fwait
gs
inc
adc
jnp
mov
xchg
xorl
jo
push
pop
push
mov
mov
inc
daa
pop
lods
sub
inc
and
mov
pop
cmp
fldt
test
jg
aam
xor
loopne
lcall
fdivrp
cwtl
pop
ljmp
inc
cmp
call
outsl
test
mov
or
adc
xlat
out
clc
call
xchg
sub
in
lock
adc
sti
lods
idiv
dec
scas
stc
cmpsb
dec
test
std
addr16
push
mov
mov
push
in
incl
cmpb
pushf
aaa
mov
inc
push
mov
call
xchg
aad
mov
inc
xchg
adc
inc
push
pushl
and
daa
pushf
les
ss
xchg
adcb
fildll
incl
inc
enter
push
fdivp
arpl
sbb
out
stc
xor
out
mov
dec
jmp
pop
xchg
pop
ret
ret
jp
les
aaa
loopne
cs
or
mov
popa
std
scas
sbbl
mov
mov
lods
scas
inc
aaa
or
push
jae
lock
outsb
inc
cmpsl
and
adc
ljmp
repnz
pop
out
mov
les
mov
call
fnsave
imul
jae
stos
mov
repz
inc
lret
loope
pop
loope
mov
outsl
add
adc
lcall
lock
cmp
jle
xor
aad
cmpl
ret
pushf
ljmp
or
pop
cmc
pop
call
push
pop
scas
mov
mov
mov
add
lret
push
std
pushl
scas
notb
gs
add
pop
jg
lods
push
mull
sbb
lcall
and
xchg
shrl
rcrl
lea
push
movsl
sub
fdivl
mov
mov
jmp
mov
inc
fnstenv
stc
scas
mov
xorb
or
outsb
xor
cli
pop
hlt
inc
icebp
sbb
xor
sbb
incl
mov
jge
pop
fiaddl
jmp
in
hlt
inc
pop
test
lcall
call
addb
jl
push
cli
adc
jno
sbb
sub
fdivrp
add
sub
decl
aas
xchg
shl
cmp
orb
loop
sub
xchg
lahf
or
mov
aam
xlat
jne
call
test
in
inc
sub
jbe
sbb
nop
mov
mov
sar
ljmp
jmp
add
or
xor
xchg
sbb
scas
pop
movb
roll
push
call
push
add
push
scas
mov
inc
out
adc
roll
jp
adc
xchg
and
mov
jg
hlt
inc
mov
movl
pop
loopne
xorl
push
push
in
leave
sub
dec
imul
in
stos
outsl
clc
ljmp
call
push
ja
pop
adc
sbb
mov
popf
jmp
jle
push
xor
lock
test
mov
xlat
sbb
rcl
lds
out
push
pop
mov
ljmp
and
iret
jo
cli
or
sub
mov
movsb
mov
js
mov
out
ljmp
mov
lds
xor
int3
js
xbegin
les
mov
movsb
icebp
mov
jecxz
insb
gs
cmp
add
les
mov
scas
jmp
outsl
aam
in
jg
scas
sbb
dec
std
mov
aaa
in
fnsave
jle
fmull
pop
cmp
call
stc
movsb
pop
and
data16
ds
jge
pushf
sbb
cmp
sbb
call
mov
gs
lea
adc
mov
mov
mov
clc
cmp
pop
push
push
stos
sub
or
shlb
mov
dec
add
pushf
pushf
inc
jne
out
cli
out
jb
push
jg
lcall
cmp
mov
xchg
inc
out
clc
ljmp
loope
add
fstl
stos
xchg
push
or
icebp
jg
mov
popa
jmp
dec
sbbl
mov
dec
add
mov
push
mov
cmpsl
sbb
mov
push
sub
mov
sbb
pop
dec
mov
lds
cmc
fwait
sbb
movl
stos
movsb
push
cmp
fsubrp
arpl
mov
adcb
or
add
add
js
dec
scas
mov
je
mov
add
call
push
pop
js
scas
xchg
es
xchg
cmp
mov
ljmp
mov
loope
out
xor
mov
xchg
jmp
stos
sbb
mov
xchg
outsb
push
push
subl
lret
jmp
mov
sbb
pop
loope
pop
jmp
ja
jecxz
aaa
outsl
out
pop
fwait
lret
insb
pop
call
std
ljmp
inc
and
insb
mov
jb
cmp
loope
inc
jne
dec
imul
sbb
dec
dec
scas
aas
int3
shll
and
inc
shl
mov
ljmp
clc
lcall
ror
fldt
pcmpgtw
cmpsb
xor
cmp
xor
lret
push
test
cmp
xchg
cmpsl
xchg
decl
aam
pushf
mov
aam
loop
mov
hlt
call
fildll
outsl
je,pn
jnp
xor
inc
sarl
int
push
sbb
dec
inc
aaa
nop
andb
inc
adc
jmp
testl
repz
sub
jnp
dec
loop
lcall
call
scas
lock
cmp
test
out
ds
lds
sub
ljmp
decb
lea
jmpw
adcl
nop
adc
pushl
inc
cmpsb
pop
jmp
mov
mov
mov
lcall
ds
jns
addr16
inc
xor
pop
inc
mov
xlat
jl
xchg
mov
loop
jns
lods
jp
mov
div
das
add
xchg
mov
pop
rcr
cmc
dec
jg
sbb
inc
push
pop
andl
std
decl
incb
popa
sbb
gs
sbb
sti
jg
xchg
testb
jecxz
decl
dec
cltd
les
repz
cwtl
sti
rcrl
or
lcall
decl
cld
dec
adc
mov
dec
adc
ja
or
fists
jg
imul
push
lcall
cld
ljmp
mov
lcall
in
mov
scas
jp
lcall
jno
int3
push
lods
push
push
lcall
jb
call
sub
call
icebp
inc
scas
test
popf
fistpl
aam
xor
mov
jge
jg
inc
push
xchg
push
stos
hlt
dec
mov
sahf
jg
ss
outsb
or
sub
add
sub
loopne
decl
jnp
cmp
pushf
pop
incl
sub
push
and
xlat
xchg
push
insb
ficoml
hlt
idivb
decl
adc
adcl
lahf
mov
pop
pop
pusha
outsb
mov
lea
jne
test
pop
std
decl
mov
stos
stos
jg
mov
jo
sbb
popf
mov
loope
jecxz
dec
jmp
sbb
fmuls
div
sbb
shl
or
mov
jbe
mov
sub
outsb
inc
sub
xchg
inc
bound
or
addr16
mov
add
adc
addr16
imul
cwtl
jp
imul
cmc
pushl
pop
sbb
xchg
jle
and
pop
sbb
mov
fisttps
ret
pop
mov
cs
mov
or
test
jg
fcomip
clc
iret
sbb
in
sbb
data16
fcomi
sbb
dec
mov
out
lcall
mov
scas
xor
or
xor
addl
icebp
aaa
stos
ret
sub
fiadds
push
cmc
lahf
pop
cmp
inc
ret
jne
sbb
or
adc
movsl
movsb
mov
dec
add
ljmp
adc
fimull
sub
push
mov
mov
mov
nop
test
jb
jnp
cmc
pop
cld
lcall
pop
rolb
out
inc
xchg
addb
cmp
fisttpl
push
enter
push
daa
es
imul
outsb
add
sbb
add
std
or
sahf
mov
pop
out
jg
jle
xor
lock
push
roll
pushl
idivb
popa
movsb
xchg
fsubrl
pop
jmp
jmp
jmp
ret
in
fmull
xchg
fistpl
loope
arpl
das
xchg
fadds
incl
loopne
subb
push
cwtl
fldl
ficoml
xlat
ret
repz
out
call
mov
jp
dec
jnp
aaa
ja
in
cmp
xchg
out
fwait
loop
rclb
jmp
fxam
fwait
movsl
and
xor
sub
std
jo
cmpsl
mov
push
call
nop
jbe
jno
gs
insl
iret
pop
and
clc
xchg
xchg
push
dec
cs
push
lret
lcall
loope
pop
adcl
jl
xor
mov
rcrb
and
dec
add
shlb
push
mov
insl
popf
mov
mov
popf
add
lcall
mov
mov
testb
out
scas
icebp
or
imul
arpl
or
pop
lahf
cmc
ss
mov
movsl
nop
push
dec
outsl
mov
adc
cmp
jbe
dec
arpl
lods
jle
mov
test
test
mull
sbb
jle
push
fildl
decl
xlat
int3
mov
mov
inc
inc
lods
cmc
jg
popa
jns
es
into
ja
dec
iret
fdivl
std
call
cmp
xchg
and
jo
clc
mov
mov
lcall
push
repnz
fs
and
push
pop
cli
lret
mov
ret
or
or
nop
sub
decl
out
sub
xchg
jae
repz
addl
data16
icebp
cmp
dec
in
fmuls
or
icebp
decl
cs
jl
ret
push
movsb
pop
std
add
sahf
js
aam
and
cwtl
mov
sub
mov
lcall
movl
push
out
dec
sbb
adc
mov
fcomps
rorb
and
sub
je
ja
mov
push
subb
push
aad
std
push
pop
pop
xchg
loope
jge
out
mov
cs
incl
jp
lahf
cmp
and
in
xchg
out
test
sub
xchg
cmpsl
decl
lock
out
icebp
cmpsb
push
xchg
push
mov
insl
ljmp
push
mov
push
scas
push
adc
aad
lahf
fs
push
dec
mov
add
into
jg
arpl
mov
dec
xor
out
imul
xor
ss
fisttpl
pop
std
jmp
call
jbe
lods
stos
aaa
mov
nop
test
int
sbb
jle
pushl
adc
jb
ret
sub
aam
in
push
cld
cltd
xchg
test
sub
insb
cld
pushl
jmp
popf
dec
test
in
mov
sahf
jg
test
rclb
cli
int3
cwtl
xor
in
sub
sarl
sbb
movsb
enter
cmc
jg
push
call
push
js
lahf
movsl
ret
add
arpl
sbb
mov
test
pop
push
cmp
push
cmpsb
test
cmp
dec
mov
ret
jp
pop
mov
adc
data16
cli
ljmp
cli
push
call
call
mov
addr16
and
hlt
sbb
ds
ljmp
mov
xchg
in
jge
out
mov
or
pop
mov
inc
aam
jo
dec
jle
insl
sarb
gs
dec
imul
ljmp
xchg
imulb
nop
stos
sub
loop
lds
out
jmp
int3
xor
jg
pushl
loop
pop
leave
dec
cwtl
sbb
out
push
sub
push
cmp
jmp
mov
pop
inc
add
cmp
lea
je
inc
mov
hlt
push
xchg
or
mov
insl
js
pop
rclb
mov
pop
dec
xlat
insb
ret
ds
jbe
ljmp
push
js
clc
add
inc
mov
fsts
xchg
in
inc
mov
decl
and
cmp
jno
push
je
mov
or
mov
jl
incl
hlt
mov
or
pop
cmp
or
push
mov
in
cmpsb
inc
jb
adc
xchg
lcall
push
jo
sub
mov
lret
test
fsubrl
mov
mov
mov
inc
das
pusha
repnz
mov
call
stos
jecxz
arpl
rolb
loope
dec
mov
call
push
add
sub
cs
add
jnp
push
mov
loopne
testb
call
repnz
loope
sahf
sbb
addr16
std
mov
pusha
jle
mov
pushl
test
stos
jge
cli
push
pop
lds
mov
rorb
scas
fcoms
sbb
cld
jnp
jecxz
sbb
xchg
shr
add
outsl
and
fidivrl
rcll
iret
mov
in
jbe
jg
cs
inc
xorl
jbe
aam
push
adc
mov
adc
or
lahf
adc
xchg
jmp
hlt
repnz
scas
fs
outsl
cli
inc
mov
mov
loop
cmp
mov
scas
push
stos
ljmp
lret
and
push
or
ss
dec
jbe
mov
repz
jmp
mov
xor
xor
mov
jle
jecxz
add
lds
sti
sub
jmp
inc
fidivrl
daa
cld
xchg
push
or
int
repnz
aas
xchg
push
or
ljmp
add
frstor
lods
mov
fwait
clc
out
fmull
push
and
andb
push
mov
aaa
jo
adc
pop
mov
mov
or
cmc
inc
test
sub
pop
std
les
stc
or
and
fcmovnu
call
out
sub
mov
ljmp
repnz
call
rep
push
pop
sti
push
jecxz
xor
addr16
loope
push
jge
mov
test
pop
cld
and
sbb
sbb
jle
mov
lret
or
addr16
sub
sarb
pop
lock
pop
push
call
in
ss
push
dec
fmull
sbb
adc
scas
push
cmp
pop
sbb
mov
pushl
sub
cld
popf
fmuls
push
inc
fs
aad
mov
imul
mov
and
sahf
jle
xor
andb
ret
or
add
cwtl
xchg
in
cld
fildll
cmp
rcl
dec
inc
int3
adcl
hlt
jmp
outsb
dec
push
scas
adc
sub
add
out
sbb
jge
xor
dec
push
or
test
xchg
fildl
xor
idiv
loope
add
mov
xchg
fidivrl
add
jno
dec
ret
cli
dec
decl
out
fnstenv
jecxz
pop
orb
movsb
adc
repnz
xchg
add
test
js
sub
mov
dec
add
mov
mov
push
fstl
cmp
jbe
pushl
xor
xlat
add
mov
hlt
dec
scas
dec
jno
xor
ljmp
out
je
addr16
das
jno
push
outsb
es
push
scas
mov
inc
es
push
fsubp
stos
arpl
sbb
mov
mov
pop
xor
icebp
in
xchg
faddp
out
push
rolb
mov
decl
scas
lock
std
outsl
pop
or
xchg
dec
mov
jbe
inc
call
lahf
sub
dec
iret
pushl
stos
cmp
pop
mov
jecxz
mov
or
jno
xorb
dec
fnstenv
cli
mov
aam
cmp
jp
int
push
sub
add
lret
or
xor
lret
sbb
mov
pop
repz
adc
xchg
cmp
mov
mov
mov
pop
add
cmc
idiv
fwait
stos
mov
test
fdivr
jb
cs
stc
sbb
test
sbb
inc
mov
std
call
sbb
xor
pop
xchg
or
les
sti
repz
mov
lods
push
fdivr
incl
cmp
jle
xor
mov
subl
xchg
mov
dec
inc
aad
cmp
sbb
xchg
pop
cmpb
mov
jmp
lret
in
sbb
pushl
sub
push
pop
mov
stos
in
pop
fbld
jmp
cmp
das
add
cmpsb
aas
adc
popf
rdmsr
xchg
cmp
jg
insb
mov
jnp
popf
xor
sbb
fs
pop
xchg
add
into
dec
add
in
xchg
stos
pushf
leave
into
lahf
jb
dec
adc
add
lcall
jl
lret
mov
loopne
inc
adc
lcall
clc
fnsave
inc
adc
loopne
mov
inc
mov
adc
shlb
decl
sar
xor
inc
or
jp
mov
xchg
dec
outsb
xor
incl
or
movsl
inc
test
stos
inc
test
sbb
mov
jecxz,pt
mov
jmp
pop
pop
lods
pop
mov
addr16
xchg
and
cld
pusha
jmp
scas
xchg
adc
aad
push
xchg
mov
mov
lds
or
fildll
shr
mov
mov
push
sbb
cmp
inc
ret
aaa
cld
cld
repnz
aaa
cmp
lcall
inc
cmp
movsl
dec
shrb
pop
pushl
sbb
lea
mov
test
cld
mov
jbe
lahf
or
dec
mov
outsl
adc
push
test
mov
pop
dec
int3
leave
clc
bound
iret
xlat
sarl
jmp
jno
ds
push
jl
or
pop
inc
imul
incl
loop
mov
jbe
icebp
or
lods
cmp
jns
imul
movsl
inc
popf
insb
leave
fs
mov
xchg
ss
sub
sub
dec
movsb
mov
xlat
inc
adc
pushf
test
cmp
shl
mov
loope
aam
xor
in
in
pushf
mov
fsub
inc
xchg
xchg
jo
and
dec
cmp
addl
inc
jne
xchg
enter
jg
call
sub
inc
into
inc
gs
jnp
js
sub
repnz
incl
mov
out
idivl
movsb
ljmp
sahf
xchg
xchg
out
aam
mov
stc
daa
test
adc
mov
jmp
ljmp
jbe
dec
daa
cmp
pushl
mov
ret
mov
scas
fisubrs
inc
aad
cmc
dec
mov
dec
test
pusha
call
or
push
iret
and
or
bound
movswl
movl
ret
clc
ljmp
ficomps
aaa
popf
push
or
es
fisubl
push
jp
or
jg
cmc
or
mov
and
jmp
push
sbb
lret
and
mov
push
adcl
push
testl
shlb
imul
jl
roll
das
and
addr16
out
sub
adc
mov
sbb
mov
lcall
out
or
call
outsb
shl
or
les
adc
insb
lock
ljmp
rcl
xchg
mov
dec
ficompl
cmp
add
jae
sar
pop
cmp
xor
inc
mov
test
cwtl
loope
mov
lahf
mov
push
adc
sahf
cmpsb
cmpsl
leave
sahf
and
mov
xchg
mov
push
push
pop
jbe
inc
rcl
sti
frstor
stos
lcall
push
inc
xor
sub
mov
jmp
in
or
mov
sti
and
rorl
cmp
cmp
orb
loopne
pop
cld
ja
outsb
or
clc
xchg
test
cwtl
enter
paddsw
jg
add
fsqrt
mov
push
mov
sub
jg
jnp
inc
scas
mov
jg
fcomps
mov
negl
pop
cwtl
enter
ljmp
dec
xchg
call
mov
mov
adc
clc
ss
sub
aas
mov
jle
ja
jmp
jle
cmpsl
jp
scas
cld
pop
aas
stos
add
iret
xchg
gs
fcomip
jmp
jle
inc
fidivl
cmc
mov
repnz
jmp
xlat
sub
les
clc
adc
fists
dec
dec
rcr
mov
xchg
bound
outsl
pop
sub
pop
xor
pushf
sbb
sahf
incl
jg
fadds
cmpsb
and
mov
lcall
out
clc
dec
ret
mov
les
or
mov
cmp
xchg
leave
or
push
lcall
pop
xor
sub
xor
jb
pop
fcoms
push
jp
mov
adc
pushl
mov
lods
int
aam
imul
add
jbe
add
mov
test
xchg
mov
inc
pop
shrb
pop
cs
jns
mov
clc
iret
xor
inc
popf
adc
in
cld
imul
ja
jge
subb
or
out
pop
shr
out
adc
mov
jge
dec
fistpl
xchg
sbb
adc
mov
das
xchg
or
icebp
out
mov
jmp
stc
jae
fdiv
cmc
sub
shl
inc
das
mov
adc
pop
cmp
insl
repz
sbb
pushf
enter
fadds
decl
test
jmp
jne
sbbb
push
enter
jo
hlt
sti
movsl
adc
xchg
sub
daa
fnsave
fs
cltd
cwtl
loop
inc
and
lcall
notb
adc
ja
pop
adc
or
mov
jnp
cmp
in
incl
mov
lds
jno
roll
subb
sub
add
rcrl
xor
xchg
enter
jno
or
pop
mov
adc
inc
popf
pop
movsb
jmp
std
call
push
call
mov
fs
cwtl
popa
or
pop
std
call
ljmp
test
out
cmpsb
inc
add
test
dec
insb
in
jmp
adc
std
mov
stc
hlt
jo
dec
push
push
imul
clc
push
pusha
xchg
jb
cwtl
adc
negb
popf
aas
scas
ret
lret
sbb
fisubrl
bound
aaa
pop
insb
test
cwtl
sub
inc
push
pusha
ror
imul
js
lcall
cmpsb
les
sub
mov
dec
jmp
push
dec
std
dec
mov
add
jmp
daa
sub
mov
xchg
push
jmp
or
test
ja
or
ror
ds
mov
cmp
ljmp
mov
add
xrelease
sbb
sbb
dec
cli
pop
adc
push
jno
ja
mov
lods
mov
movsb
or
xchg
and
pop
and
mov
pop
subb
push
rorb
jle
scas
lods
outsl
fcmovne
pusha
and
xchg
outsl
jb
and
push
push
es
cmp
outsl
outsb
cmp
pop
mov
jns
inc
scas
popa
mov
out
andl
xchg
aad
dec
xchg
in
inc
mov
jl
xchg
push
adcb
or
or
pusha
adc
xchg
cmc
pop
rol
lret
testl
push
adc
mov
mov
mov
push
rcr
fwait
stos
fwait
mov
scas
cltd
xchg
repnz
xor
sbb
adc
pop
clc
lcall
aas
or
push
addr16
divb
stos
jmp
mov
or
ljmp
jmp
jne
jo
aad
popa
dec
pop
js
frstor
xchg
xor
jb
daa
fcmovne
cmc
in
dec
scas
jbe
out
ds
repnz
push
inc
das
push
sub
xchg
jo
and
sbb
in
or
ljmp
inc
and
inc
jne
imul
mov
push
mov
mov
test
jmp
aad
pushf
sub
push
ret
cs
jns
jg
data16
add
dec
mov
in
insl
loopne
clc
call
daa
adc
inc
call
dec
sahf
sbb
push
int3
push
enter
in
out
pop
fimuls
lds
add
xchg
xchg
out
lock
jecxz
insb
xor
jg
dec
ljmp
jmp
xchg
add
addr16
dec
in
xorb
add
jmp
cmp
and
mov
ds
in
push
cmpsl
jle
fwait
jg
or
ljmp
pop
pop
and
stos
and
incl
aam
sarl
outsb
fdivp
in
mov
fwait
imul
dec
lock
xor
andl
cmpsl
jecxz
push
loopne
adc
add
arpl
inc
cmp
pop
int
jb
mov
xor
repnz
jae
pushl
jo
in
fstps
gs
bound
cmp
mov
out
push
push
add
mov
std
sti
dec
movl
push
mov
and
loop
push
cmc
push
in
test
jmp
adc
cmp
lods
inc
icebp
cmpsb
jns
sub
mov
mov
jne
cmpsb
add
push
fwait
cld
aad
cmp
call
aaa
xor
and
ljmp
xlat
sbb
shl
nop
lea
mov
xchg
jle
cld
dec
jp
sub
aas
push
xchg
mov
lea
inc
ljmp
xor
test
sar
ljmp
addr16
lds
test
fadd
and
cmp
and
cs
jne
dec
daa
call
xchg
fldl
and
repnz
jne
shll
and
insb
sbbb
ret
ljmp
mov
mov
dec
adc
popf
scas
jae
clc
or
insb
pop
movsb
jno
fcmovbe
arpl
mov
push
out
fbstp
jg
les
pop
xor
je
popa
pop
mov
mov
cld
ljmp
inc
movsb
popa
jmp
enter
outsl
repz
fucomi
inc
jns
adc
jp
decl
adc
xchg
stos
or
and
mov
inc
xchg
mov
jne
dec
xchg
dec
in
push
xor
pop
mov
test
mov
xchg
xor
jmp
jno
lcall
test
inc
inc
pushf
jle
movsl
jl
dec
jge
sbb
lret
cwtl
je
xchg
cld
push
fmull
pop
push
dec
or
add
adc
aaa
push
mov
xor
jl
decl
loop
rclb
push
ja
out
push
jns
or
ret
jg
dec
in
dec
aas
xor
pushf
dec
xor
flds
es
and
notb
pop
xor
cmc
rcll
mov
stos
shlb
sub
or
jmp
into
adc
shll
dec
fwait
jge
jp
pop
dec
sbb
repz
jle
lds
mov
dec
push
dec
int3
adc
cwtl
jl
ja
xor
mov
out
jmp
jb
xchg
and
leave
or
hlt
cli
fsubl
mov
call
and
or
mov
popf
add
dec
adc
cmp
inc
jno
sub
leave
test
xor
dec
cwtl
fisubl
ja
loope
das
rcl
cwtl
dec
mov
push
clc
ficoml
pop
popf
jmp
mov
cmc
adcb
das
repnz
out
pop
cwtl
inc
mov
ljmp
push
decl
mov
jo
stc
jo
ret
repnz
xchg
out
lock
call
adc
xor
push
pop
lahf
movsl
fstpl
adcb
fbstp
call
in
push
push
ds
stos
add
sbb
mov
fldt
filds
sub
rep
and
push
mov
dec
aad
pushl
add
mov
add
popf
pop
push
cld
mov
icebp
orb
ljmp
inc
out
mov
mov
or
in
dec
outsl
and
xor
xchg
data16
sar
mov
inc
addb
inc
mov
std
cwtl
pop
sbb
inc
mov
push
pop
call
jae
jge
das
ficomps
adc
dec
ror
jae
outsb
or
decl
loopne
and
out
fdivl
out
add
int3
lcall
call
xor
fdivrs
addr16
in
sti
imul
addr16
std
push
rcrb
push
idivb
inc
inc
gs
sar
jmp
xchg
xor
jns
pop
addps
jmp
pop
fs
jbe
hlt
adc
inc
cltd
lret
add
es
mov
imul
mov
fs
sbb
add
xchg
mov
push
imul
dec
repnz
and
ljmp
add
orl
pushf
mov
in
fbstp
push
xchg
push
dec
xchg
cmc
sub
xor
sub
sub
jg
call
adc
push
les
test
xorb
jle
pop
mov
aaa
sbb
bound
lods
divb
cmp
out
xchg
test
fidivrs
pop
push
shrb
stc
sbb
stos
mov
lods
call
les
sbb
enter
xor
mov
dec
adcb
adc
jl
mov
cmp
mov
mov
cwtl
test
xor
jne
inc
inc
sti
xlat
xor
jmp
aam
decl
lock
shll
pop
xor
push
and
sbb
push
fcomip
sti
jmp
or
jle
sarl
mov
jne
dec
mov
imul
pushl
jecxz
jnp
sbb
add
jp
mulb
dec
out
ja
cmp
jmp
shlb
mov
repnz
pop
fcoml
jg
fs
pop
js
jo
jbe
lcall
pop
mov
push
shl
and
and
fisubrl
mov
mov
loope
pop
and
cmp
mov
rcrb
std
mov
fwait
jmp
sar
mov
xchg
fbld
imul
fmull
cmpl
pushf
xlat
ljmp
decb
sub
and
ficoms
xor
pop
fsubr
pop
es
push
inc
pop
nop
xchg
es
jg
mov
xor
mov
cmp
in
push
pop
jmp
and
decl
lea
add
js
out
xlat
sti
push
mov
out
cmp
insl
test
and
incl
mov
push
decl
jl
outsb
push
test
outsl
lods
js
or
xchg
lret
incl
fcmovbe
in
loopne
mov
dec
cmp
imull
inc
add
into
cmpl
in
incl
adc
cwtl
es
and
out
popf
inc
xor
icebp
pop
jae
dec
fsts
call
pop
add
pop
pop
aad
mov
addr16
push
cmc
out
test
movsb
test
pop
addb
lea
cld
out
inc
loopw
inc
aas
jmp
fists
leave
leave
add
cwtl
sti
leave
incb
lods
data16
add
adc
jmp
test
pusha
scas
andb
rolb
enter
cmp
cmp
xchg
scas
dec
into
mov
inc
push
add
pop
mov
cli
ljmp
adc
mov
out
cs
pop
inc
fbld
dec
rcrb
in
xchg
lcall
dec
mov
dec
inc
je
dec
lods
lea
es
push
mov
push
pushl
ljmp
pop
in
dec
inc
inc
lea
or
adc
rorb
movsl
xor
test
ds
into
jae
dec
jns
lods
pushf
xor
dec
dec
in
insl
sbb
pop
xor
popf
xchg
add
sub
pop
or
popl
jns
sti
xor
jo
mov
inc
mov
lcall
pop
stc
dec
aam
adc
out
iret
mov
mov
sbb
push
adc
idivl
cltd
call
rclb
inc
cmp
jecxz
das
ljmp
scas
cmp
sarb
es
add
movsl
cmp
lahf
push
mov
xor
inc
aas
ljmp
fisubrs
cmp
or
xor
dec
ds
faddl
fadd
call
adc
aas
rcrb
sbb
mov
or
mov
mov
js
mov
inc
xor
adc
out
adc
xor
repnz
inc
pop
and
mov
fwait
ljmp
cld
mov
popa
mov
add
cmp
pop
das
sar
inc
ljmp
mov
push
mov
popf
aam
cs
outsb
int
sti
pop
mov
jmp
jl
mov
not
in
je
adc
xor
mull
inc
ljmp
mov
icebp
xor
and
adc
mov
mov
incl
lcall
lods
mov
or
adc
jmp
incl
xchg
ret
aad
or
sub
push
or
repz
popa
out
or
xor
test
loop
push
inc
pop
pop
and
daa
mov
es
xchg
dec
ret
leave
mov
jg
sbb
rol
inc
pop
addr16
push
push
loop
cs
adc
jg
add
movl
xchg
inc
pusha
xor
dec
or
push
mov
test
jae
stos
xor
jb
call
adc
pop
push
fldenv
mov
pop
fnstenv
jo
sar
jbe
and
xchg
cmp
addb
das
mov
lcall
push
enter
mov
add
or
ja
fcomip
fbld
int3
add
xchg
repz
or
enter
je
mov
adc
dec
xor
jmp
insb
nop
mov
aam
lock
ds
clc
sahf
aam
inc
xchg
cmp
ja
call
enter
shll
mov
mov
popf
pop
push
fldt
iret
incl
test
and
daa
jns
les
xchg
mov
xor
push
leave
lock
incl
imul
loopne
fstps
mov
and
ficoml
decl
dec
push
jmp
stc
loopne
ljmp
jo
push
out
mov
imul
pushl
leave
data16
jae
dec
jl
cmpsb
popa
lret
and
add
adc
ja
decl
adc
xchg
sbb
repz
lea
or
jp
mov
js
dec
aas
mov
pop
push
scas
insl
flds
lret
mov
jnp
mov
xlat
cmp
push
mov
xchg
test
jge
and
fsubs
out
lahf
inc
imul
dec
xor
xor
cmp
sahf
inc
push
xchg
sbb
ja
aas
stos
ficompl
lods
dec
push
out
jo
xor
lea
dec
inc
incl
incl
je
sub
jb
mov
xor
in
into
daa
xor
mov
addr16
in
aaa
imul
loope
push
in
loopne
out
xor
call
sahf
enter
lcall
incl
test
neg
js
out
jle
push
sub
adc
cmpsl
icebp
or
inc
out
repnz
xchg
ret
sahf
add
lds
pop
mov
adc
stc
fisubrl
shufps
xorl
xchg
inc
ss
dec
jg
in
xor
mov
decl
and
cmp
fsubrl
int3
adc
push
push
in
sbb
leave
lret
shll
insl
nop
push
inc
xlat
mov
rolb
in
or
bound
jbe,pt
push
jl
jae
add
lahf
mov
in
sub
out
push
call
pushl
xchg
jne
push
xchg
xchg
test
and
loope
insb
xchg
mov
je
mov
mov
sbb
loope
jo
outsl
or
xor
xor
inc
mov
mov
cmp
jl
fwait
sub
inc
addl
mov
cmp
shlb
lods
mov
sahf
es
lahf
sbb
cwtl
adc
mov
icebp
incl
test
jmp
xchg
or
pop
stos
aam
in
aam
or
mov
cmpsb
mov
sbb
cmc
xor
or
inc
fisubl
movl
rolb
ljmp
dec
test
mov
mov
mov
int
push
dec
dec
sub
jbe
xchg
rol
xor
or
orl
movsl
mov
int
mov
cmp
cwtl
fwait
or
jmp
mov
lds
xor
out
inc
sbb
add
imul
pusha
mov
in
incl
xchg
and
dec
sub
jae
mov
aam
fists
out
inc
sarl
pop
icebp
xlat
xchg
pop
jb
popf
jns
decl
cwtl
mov
ret
inc
clc
jno
lea
in
sbb
cltd
ss
and
shlb
mov
loopne
mov
loop
insl
push
into
cmp
adc
decl
push
pop
inc
js
add
sub
ss
and
xor
loopne
mov
lock
push
jbe
lahf
out
mov
adc
leave
sub
fsub
ljmp
ljmp
mov
mov
jbe
dec
enter
test
loope
sysexit
pop
mov
movsb
mov
ljmp
mov
les
cmc
mov
dec
mov
cmp
inc
mov
xchg
movsb
aam
xchg
cmp
decl
push
arpl
cmp
loopne
sbb
scas
sbb
and
pop
out
xchg
push
jmp
inc
arpl
or
mov
scas
lret
lods
jle
sub
mov
ds
add
jg
sbb
sbb
fcomps
enter
mov
adc
xchg
mov
test
push
or
pushl
cwtl
mov
lock
pop
mov
dec
xchg
mov
inc
jbe
jecxz
repnz
dec
ds
ror
outsb
sub
inc
pop
hlt
fldl
jae
incl
addr16
arpl
pusha
insl
jle
in
arpl
inc
xchg
add
and
je
xlat
pushl
xor
pop
sbb
sub
or
out
sbb
push
loop
bound
push
sub
mov
call
cmp
dec
call
subl
pop
repnz
cmc
add
push
xorb
push
test
repnz
push
popa
lods
cmp
stos
in
jo
lahf
sbb
push
mov
mov
ljmp
push
fdivs
xchg
cmp
jmp
and
pop
dec
out
test
sar
aas
ljmp
repz
push
sbb
ss
mov
mov
sbb
in
cmp
fmuls
fistpl
inc
cmpl
rcrl
dec
mov
mov
adcl
sbb
mov
mov
mov
decl
cmovbe
or
jne
inc
out
stos
xor
or
jns
iret
push
aas
push
pusha
xchg
mov
nop
xor
fwait
shrl
ss
dec
mov
addr16
pushf
dec
pop
ljmp
jmp
mov
cmpsl
fisttps
pop
lods
repnz
data16
inc
ret
addr16
push
nop
add
incl
sbbb
adc
cmp
and
pushf
je
clc
fs
ficoml
jb
and
into
pushl
cld
ret
jp
sub
inc
jbe
xchg
mov
fs
lcall
cmc
scas
mov
pop
jp
in
sbb
repz
inc
clc
sbb
fs
jmp
fisttps
cmp
outsb
lds
lock
or
call
xlat
mov
imul
sbb
sbb
mov
and
lret
sbb
pusha
push
imul
or
mov
jae
dec
es
xlat
pop
ljmp
add
inc
das
jno
lcall
popf
wbinvd
test
dec
mov
mov
test
pop
cmp
roll
ret
out
push
pop
cmp
mov
dec
movsb
push
addb
loop
xor
dec
imul
decl
pop
inc
lahf
dec
and
inc
mov
das
mov
imul
fadd
jp
mov
xchg
sbb
jg
add
cld
pop
mov
and
lods
pop
stos
push
adcb
fnstsw
shl
push
ljmp
ret
mov
or
cmc
sub
notl
cmp
fists
mov
hlt
xchg
push
dec
cmp
push
mov
xchg
in
cli
jg
push
xor
loope
int
loopne
push
int3
lock
ljmp
push
sti
xchg
imul
xor
xchg
pop
and
push
mov
fadds
iret
imul
pushf
sub
pushf
outsb
in
icebp
push
jecxz
sti
lahf
test
jg
push
arpl
stos
mov
les
cmp
mov
mov
popa
aam
clc
add
adc
inc
in
or
out
cmp
lock
sub
or
xchg
lahf
pop
sbb
adc
lcall
es
jns
sbb
cmp
idiv
pop
or
sub
xchg
push
cmp
dec
mov
movsl
and
mov
dec
fisttpll
xor
addr16
push
sub
scas
aam
push
cmpsb
iret
lods
aaa
leave
jle
fdivr
pushl
xchg
adc
sbb
push
push
pop
inc
sub
sbb
pop
jp
out
call
movb
aaa
mov
xchg
iret
dec
cld
sub
movsl
mov
stc
add
push
sub
call
fidivl
arpl
cmc
pop
pop
mov
push
pop
insb
sub
mov
outsl
mov
loopne
incl
int3
jecxz
imull
adc
jb
loop
mov
inc
sar
cmp
or
mov
ss
and
std
sbb
stos
bound
int
fldcw
decl
lods
fisubrs
loope
fwait
xchg
jbe
add
sbb
outsb
mov
icebp
xchg
jle
loopne
inc
and
dec
addl
mov
inc
sbbl
push
pop
xor
aas
js
jecxz
or
ds
adc
jmp
mov
push
pop
std
lret
xor
aaa
pop
lods
je
pop
push
daa
sarl
fnstenv
cli
iret
ret
loope
repnz
lret
push
fdivs
inc
inc
xor
incl
aas
cmp
cmpsl
jns
push
out
inc
adc
pop
sbb
stos
hlt
lahf
outsb
jne
ljmp
hlt
mov
repz
lcall
xor
mov
call
xor
ljmp
rolb
outsl
mov
aaa
jl
xorps
cmc
loope
arpl
fmull
jnp
je
orb
jmp
sub
or
pusha
jg
scas
shll
push
arpl
add
clc
and
out
shll
cwtl
and
adc
push
lcall
mov
in
sub
test
adc
jmp
mov
js
xlat
inc
sub
ds
fcmove
and
inc
push
into
nop
lods
inc
movl
or
test
outsb
shlb
movsl
lcall
repnz
push
scas
mov
lret
pop
push
mov
subb
fists
and
xor
ret
mov
push
outsb
sbb
pushl
jnp
cmpsl
data16
mov
sti
incl
loope
aaa
sub
in
jl
loope
imul
push
fdecstp
popa
fwait
or
inc
lods
test
fldl
pop
test
dec
aam
dec
dec
sahf
mov
pop
jbe
lahf
nop
arpl
inc
cmp
pushl
ljmp
jno
sub
in
fdiv
pop
rorl
not
cld
call
pusha
or
mov
mov
push
push
scas
push
push
push
and
in
push
push
and
and
pop
movsl
pushl
push
nop
loopne
out
inc
and
xorb
dec
cmp
dec
mov
dec
xchg
ud1
sub
ret
rorl
insb
movsl
insb
in
pop
mov
inc
jmp
add
vminsd
xchg
dec
cmp
and
xchg
cmc
stos
cmp
stos
ljmp
cmp
mov
sbb
xchg
sub
inc
je
rcl
lock
cmp
sub
fstpt
leavew
sahf
mov
or
pop
mov
jnp
sub
pushl
in
inc
adc
jecxz
outsb
nop
or
imul
ror
call
sti
mov
push
or
pop
cld
jl
sbb
das
sbb
xor
xor
pusha
sarl
jmp
bound
sahf
jmp
sbb
xor
outsl
clc
outsl
in
inc
and
fiaddl
sbb
aaa
cmp
loope
add
cli
mov
lcall
cmp
dec
mov
cwtl
bound
fimull
ss
test
jle
popf
add
pop
jns
mov
jmp
or
cmp
sub
xor
out
iret
out
imul
jae
or
lcall
sub
mov
sub
cmp
mov
pop
adc
mov
lock
cmp
lcall
xlat
lahf
mov
ret
fwait
mov
sub
lcall
and
cmp
xchg
mov
cmp
imul
sub
mov
pushf
cltd
aam
xor
jne
iret
movsl
mov
sbb
inc
mov
fbstp
and
add
cld
mov
outsl
cmpl
push
sbbl
cmc
cltd
add
idivl
cmpl
mov
jns
addr16
cmpsb
out
xor
adc
fdivs
addl
js
in
popf
inc
mov
mov
test
shlb
test
adc
mov
ljmp
mov
sub
sbb
push
notb
adc
repz
mov
mov
mov
ljmp
add
or
cmp
xor
ret
stos
outsb
jmp
pop
out
mov
addr16
stos
jmp
loopne
insl
xchg
inc
lcall
jg
mov
adc
xor
add
enter
pop
out
inc
pusha
jnp
mov
and
lods
or
add
sbb
in
pop
ret
lds
sbb
sar
sub
addb
aaa
cld
aas
ja
pop
and
lock
cli
loope
sub
jns
mov
sub
decl
push
add
mov
mov
loopne
xchg
jo
ds
push
jecxz
in
xor
push
and
adc
repz
in
inc
inc
jae
ror
or
push
lds
out
pop
sbb
xchg
call
cwtl
push
push
push
fisubl
jnp
idivb
clc
es
jo
fists
sarl
mov
push
ds
xor
pop
push
sbb
xchg
in
fwait
je
insb
incl
loopne
add
test
mov
movsl
mov
cmp
in
jb
aad
mov
cmp
dec
repnz
jnp
dec
data16
stos
inc
mov
out
and
inc
lret
dec
aad
in
push
lret
mov
decl
addr16
adc
xchg
inc
and
dec
push
mov
pop
jmp
sub
decl
add
lock
int
jnp
fcompl
jnp
inc
pop
cmp
lock
movups
dec
lret
push
and
clc
incl
fwait
test
push
neg
cmc
scas
fcoms
xor
mov
scas
imul
insb
mov
adc
lods
dec
outsl
cltd
leave
push
cmp
popa
enter
adc
ljmp
xchg
and
imul
add
adc
xchg
jg
loopne
jle
mov
xchg
movl
mov
adc
ljmp
jmp
jg
jmp
stos
insl
ret
pushf
psllq
sbb
pop
jb
pop
aaa
in
sub
fcomip
ljmp
lea
shl
into
sub
sbbl
push
push
clc
test
pop
sahf
xchg
sbb
mov
outsb
inc
adc
xor
jmp
jns
pop
js
mov
push
jns
mov
push
pop
loopne
and
inc
mov
cmp
mov
or
lret
loope
inc
fwait
jae
jmp
das
clc
arpl
mov
push
stc
add
push
mov
mov
sbb
insb
repnz
mov
mov
fwait
xor
pushl
imul
loope
shll
add
ficompl
xchg
xchg
push
loop
xor
pop
inc
in
add
loopne
mov
pop
cmp
sub
and
ljmp
rolb
nop
insl
notb
test
into
out
rol
xchg
jge
or
jmp
push
push
decl
mov
je
ret
dec
adc
notl
shrl
mull
mov
imul
ljmp
pop
jno
jecxz
mov
mov
jge
mov
imul
dec
pushf
add
arpl
mov
les
hlt
sbb
jns
out
mov
in
add
lret
dec
mov
xchg
pop
fcos
jg
mov
in
push
mov
shrl
lret
outsl
mov
imul
xchg
out
incl
jmp
jbe
add
jb
push
push
adc
lret
xor
or
std
clc
sub
inc
push
inc
jns
xor
sti
inc
xor
mov
pop
pop
pop
xor
popa
push
or
popf
ljmp
jbe
jae
insl
aad
push
or
mov
lcall
int3
aas
cli
jbe
push
dec
xchg
xor
sbb
fs
xchg
mov
rcrl
mov
mov
xchg
les
ljmp
mov
mov
push
insl
pushf
xlat
push
pop
inc
jl
mov
decl
xchg
mov
adc
xchg
mov
lcall
jo
pushf
lea
je
int
call
xchg
cmpsb
xor
add
mov
scas
dec
push
mov
dec
jo
jmp
insl
dec
xchg
fs
incl
add
mov
mov
out
ja
sarl
fnstcw
mov
ljmp
pop
pop
jne
adc
stc
repnz
mov
pop
and
into
mov
test
std
sbb
sbb
pop
pop
lcall
inc
lock
stc
inc
push
sbb
xchg
ljmp
pop
xchg
sbb
ljmp
pushl
test
test
fucomip
ljmp
movsb
push
jns
dec
xor
lcall
jae
out
or
shll
es
std
dec
adcl
adc
jne
sbb
xchg
inc
popa
fisubrl
nop
sbb
cmp
adc
dec
inc
int
mov
mov
ja
mov
pop
sbb
cmp
andb
sub
test
ljmp
push
pop
cmpsl
or
cmpsl
fs
incb
divb
ficomps
or
mov
or
nop
outsl
add
enter
and
fbld
loop
sub
and
icebp
push
pop
mov
inc
push
cs
pop
mov
ljmp
and
cltd
push
push
fs
and
sahf
cmpsl
pop
cld
jg
mov
rcr
add
and
ret
loope
loope
stc
gs
test
mov
insb
test
decl
sub
or
pop
and
or
test
out
fwait
out
and
mov
incl
add
call
add
cli
idivb
sbb
jb
stc
dec
inc
pusha
cmp
roll
cmc
or
lcall
repz
jl
aaa
pop
jae
mov
pop
push
scas
adc
push
inc
sbb
pushf
test
cmp
or
mov
and
mov
shlb
std
dec
and
push
pop
repnz
adc
fisttpl
push
add
scas
into
fistpl
roll
fisubs
cwtl
jcxz
jp
cli
inc
jmp
out
sbb
or
xchg
insb
lahf
ret
stos
lret
cmp
jmp
mov
rcll
icebp
xchg
pop
insb
repz
incl
aaa
mov
dec
and
in
js
gs
sbb
out
leave
and
and
xchg
out
test
loope
mov
jge
jle
negb
ficompl
pop
xor
mov
leave
fistpl
sub
aas
mov
stc
sub
dec
and
rcrb
xchg
ds
lods
ss
sarb
push
inc
pop
dec
jnp
out
dec
dec
ret
fwait
lcall
addl
pop
out
push
and
push
cmpsl
and
aas
inc
jmp
notl
jg
jne
jb
add
pop
inc
ret
add
mov
ficoml
push
push
inc
test
jle
shll
xor
js
sub
sbb
sbbl
adc
pop
test
jmp
sub
inc
bound
lahf
mov
mov
and
daa
repz
adc
fcomi
adc
mov
clc
decl
mov
pop
stc
mov
push
xchg
adc
shlb
pop
xchg
mov
mov
jmp
push
aam
shll
mov
les
mov
ret
lcall
fistpll
xchg
pop
sbb
dec
in
mov
ret
sub
test
cli
push
fisubrs
sbb
ds
leave
mov
gs
adc
inc
mov
fcomip
inc
xchg
aaa
jae
cmpl
mov
sbb
ret
loopne
fsubrs
cmovno
fcomip
loopne
arpl
enter
leave
arpl
jle
jp
add
vpshufhw
ljmp
rclb
mov
sub
cs
cwtl
dec
enter
or
add
call
cmp
push
ss
mov
out
iret
add
dec
cld
sub
loope
xchg
icebp
lret
push
cmp
pop
cmp
out
out
add
insl
cmp
fadds
mov
sub
jle
stos
cmp
icebp
dec
hlt
adc
fiaddl
mov
les
mov
cmp
jb
test
fmuls
ljmp
inc
in
push
and
fisubrs
add
mov
fcomps
sahf
xchg
xlat
loope
lcall
jl
mov
idivb
xchg
inc
jp
mov
inc
xchg
xchg
mov
loopne
repnz
lret
ljmp
clc
jl
arpl
cmpsl
das
stc
pop
cltd
push
push
adc
xor
rorb
push
lcall
mov
add
aad
or
sahf
ss
testb
jmp
sbb
push
out
fistpll
add
mov
xor
push
mov
in
mov
push
loop
ja
add
xor
lea
out
lahf
shll
inc
cmc
cli
jg
pop
shl
stos
sbb
mov
loop
movsl
mov
mov
orb
out
clc
scas
movsb
pop
add
dec
cwtl
cld
test
dec
sub
pop
test
mov
shll
add
xor
scas
scas
xchg
popa
insb
sbb
out
lahf
outsl
lds
cmp
lret
mov
sbb
nop
in
faddp
fistpl
pusha
mov
lret
xor
ljmp
jp
hlt
or
roll
ja
and
movl
lock
push
pushl
xlat
xor
movsl
jmp
add
push
pop
adc
rol
mov
dec
mov
add
adc
mov
loop
int
aad
xchg
rcrl
sub
mov
cmp
decl
push
mov
pop
dec
cltd
mov
push
add
imul
adc
mov
mov
fistl
add
addr16
stos
jle
int
lods
call
cmpsl
pop
fcompl
decl
mov
xor
movsb
push
in
test
subl
adc
add
fistpll
xchg
nop
sub
xor
sahf
daa
xor
lcall
or
push
mov
or
mov
out
fxch
push
mov
aad
stc
pop
xchg
add
cmp
inc
xchg
subl
mov
imul
call
jmp
cmp
or
sbb
out
loop
in
jle
cs
cmc
int3
inc
dec
movsl
xor
cmp
fstpl
mov
mov
xor
int
inc
add
ret
dec
decl
mov
adc
movsb
sarl
xor
push
push
ret
dec
jmp
decl
scas
sub
jmp
mov
bound
loope
imul
outsl
xchg
ds
ljmp
das
pop
and
inc
or
adc
fcomip
call
mov
xor
mov
movsb
out
cmpsl
in
pop
lret
mov
ljmp
pusha
leave
inc
xchg
fnstcw
add
sarb
jns
mov
fsubrs
imul
lock
pushl
mov
je
insb
lock
cmp
lret
stos
mov
pusha
jecxz
mov
ljmp
les
jnp
lret
xor
popl
jmp
insl
filds
outsb
or
gs
call
imul
push
in
ret
fbstp
mov
pop
mov
cmp
sti
inc
mov
test
jecxz,pn
lcall
jmp
cmc
jmp
mull
out
aad
stos
stos
shrb
mov
jbe
ja
cmp
lret
mov
icebp
sub
dec
dec
and
pop
bound
xchg
arpl
pushf
lods
xchg
js
decl
leave
es
in
pushf
leave
push
std
dec
mov
clc
int
lcall
out
and
jg
ficoml
xchg
sbb
jp
iret
pop
ljmp
jg
or
mov
jmp
mov
adc
cmp
dec
jg
xor
pop
cld
xor
ficomps
stos
ja
aad
in
fists
and
jmp
add
in
cltd
pop
inc
je
sti
daa
sar
call
cmp
loope
popf
ror
adc
movsb
or
lret
lahf
enter
adc
shll
stos
push
or
mov
inc
or
fstp
into
pop
push
mov
ljmp
pop
test
addb
fcomip
mov
mov
imul
mov
fdivs
jns
insl
outsl
cmp
add
xor
sub
mov
aad
sar
decl
cs
mov
xor
mov
gs
mov
push
jp
mull
call
jns
xchg
pop
sub
sub
ret
adcl
hlt
test
jmp
pop
adc
ja
jmp
xchg
xchg
ja
push
inc
jl
sarl
jmp
mov
in
push
leave
jbe
scas
cmp
jne
xor
stc
cmp
lcall
jmp
pop
int3
inc
jle
ljmp
adc
jo
imul
xor
popa
jmp
repnz
iret
inc
add
into
movsl
std
outsl
clc
or
lcall
pop
lods
cs
mov
jp
fdivs
addr16
jl
repnz
aaa
sbb
and
jmp
mov
or
jno
in
xor
xchg
and
inc
pop
xchg
mul
sti
je
mov
dec
sbb
repz
imul
xchg
jmp
inc
mov
scas
hlt
jg
and
xor
dec
fs
rcrl
movsl
mov
dec
sarb
jg
test
ljmp
jns
aas
xchg
dec
cmp
jge
dec
sub
sbb
sub
sbb
lcall
fs
push
test
pop
jge
scas
xor
dec
popa
fs
xor
mov
cmp
and
adc
das
add
push
ds
cmp
test
imul
fisttps
xchg
mov
notb
data16
adc
push
jg
xor
test
mov
in
iret
adc
pushl
and
mov
add
les
mov
test
pop
mov
lahf
cmp
ja
sub
sbb
dec
xor
mov
mov
cmpsb
fistpl
ljmp
push
les
push
xor
push
shufps
loop
jbe
neg
xchg
pop
cmp
or
dec
loop
in
xchg
pushl
inc
js
inc
pop
int3
dec
arpl
mov
lods
push
ror
xor
jmp
mov
cwtl
ja
jmp
in
mov
fcomip
mulb
jmp
call
sub
cmp
inc
and
push
sub
lcall
mov
clc
add
xor
repz
sub
sbb
popf
in
rol
rcl
incl
xchg
lret
dec
imul
shlb
jbe
xor
lret
test
sti
and
jg
and
push
mov
out
jl
imull
stc
pusha
nop
add
mov
std
rcr
and
andb
nop
inc
nop
jp
addl
addr16
add
imul
fistpll
fcom
jne
cltd
cvtpi2ps
push
jge
jo
inc
sbb
enter
mov
lret
mov
and
lahf
dec
xchg
push
imul
lret
adc
and
decl
int
add
repnz
lods
cmp
jmp
cmp
arpl
loopne
inc
jge
pushf
ja
cmpsb
pushl
mov
adc
call
nop
pop
pop
test
jmp
xchg
xchg
mov
repnz
pushf
xorb
sbb
lock
incl
mov
mov
cmp
cmp
xor
fnsave
stos
pop
addb
decl
imul
inc
xchg
mov
pop
jmp
or
jg
les
in
mov
adc
cli
jp
inc
jmp
jo
insl
xor
in
sub
call
rcll
lea
dec
out
stc
ljmp
incb
cmp
jle
or
ret
push
imul
lods
cmp
popa
or
incl
xor
mov
ljmp
inc
or
insl
leave
sbb
repnz
sub
pushl
mov
lcall
pop
sub
pushf
xor
add
out
or
jmp
pop
sahf
mov
addr16
push
pop
add
mov
pushf
stos
mov
fs
call
adc
loopne
cmp
imul
sbb
adc
test
fstpt
mov
sbb
lock
xchg
in
inc
add
cmp
jmp
dec
ljmp
iret
fcomps
scas
jl
sub
jbe
fcmovnbe
mov
jnp
mov
mov
test
mov
pop
dec
ljmp
call
and
repz
mov
sbb
bound
jp
cmpsb
and
cltd
push
in
fdivr
decl
add
loope
mov
pushf
mov
pop
jne
in
lods
push
jno
inc
dec
inc
pushl
out
or
cmp
xor
inc
push
cmp
or
aad
stc
pop
xor
incl
pop
outsb
into
fwait
ret
xchg
and
mov
aas
mov
push
mov
adc
jno
mov
pop
mov
lods
lea
and
xor
inc
pusha
loope
call
push
cmp
xor
and
add
add
xor
mov
movsb
jmp
jmp
xchg
in
mov
mov
sbb
roll
mov
bound
mov
dec
imul
fnstcw
ja
movsb
or
lcall
mov
int3
pusha
inc
int
lock
lcall
xorb
ds
ds
subl
sbb
ljmp
mov
je
or
mov
and
loop
sbb
lcall
decl
movl
mov
xchg
pop
mov
arpl
mov
sbb
cmpsb
lret
out
add
sub
jmp
mov
sbb
jecxz
gs
jae
iret
mov
jmp
add
dec
inc
enter
xchg
aad
mov
cmpsb
psllq
decl
ficompl
mov
inc
jnp
sbb
push
test
inc
stos
sbb
push
scas
les
imul
mov
sub
cmp
jp
sbb
cmpsb
lods
xor
popa
xor
loope
fdivrs
les
jmp
inc
setns
dec
mov
cmp
sbb
adc
out
out
hlt
lds
ljmp
ljmp
or
enter
stos
inc
dec
mov
aas
xor
ja
insl
shr
or
and
sbb
add
and
call
push
add
jmp
adc
cmp
es
mov
mov
jno
lock
cmc
popa
enter
jp
push
pop
add
xchg
sub
in
lahf
and
decl
mov
mov
pop
inc
loopne
loope
inc
lods
cmp
nop
inc
xor
and
push
sbb
lcall
stos
fidivl
adc
mov
jge
add
jge
sub
int
shl
in
sbb
pop
add
and
mul
dec
xchg
pop
loopne
xchg
dec
xor
inc
or
pop
sahf
dec
jne
decl
fidivrs
jo
test
divl
test
sbbl
and
xor
movsb
xor
jg
xor
lock
movsb
add
mov
inc
jns
or
fidivs
out
mov
push
nop
inc
decl
roll
outsb
out
cltd
xchg
mov
mov
add
push
jnp
outsl
or
mov
incl
shlb
push
adc
xchg
dec
outsl
or
lods
xchg
andb
cmpsl
add
xchg
rcrb
xchg
nop
lret
ljmp
dec
inc
je
outsl
sub
push
sub
mov
pop
hlt
inc
ja
inc
insl
sahf
ss
lds
cs
das
shll
fwait
cli
sub
ljmp
ja
xor
sbb
push
mov
aad
add
and
dec
dec
shll
mov
mov
scas
and
aad
jmp
stc
rcrl
mov
and
ljmp
and
loopne
test
call
ljmp
pop
push
lahf
sbb
xchg
adc
std
push
and
mov
loope
pop
jge
stos
push
je
and
inc
fdivl
call
jge
mov
ror
ljmp
test
add
inc
xchg
jb
leave
push
jmp
call
push
jno
cmp
mov
or
jl
pushf
xchg
xlat
outsb
das
mov
cmpsb
loopne
sbb
and
in
sti
cmp
js
mov
stos
push
scas
decl
cmp
mov
cmp
adc
rcl
jno
xor
mov
sub
incl
fadds
dec
cltd
jnp
mov
sub
icebp
popf
mov
out
or
inc
or
xor
subl
xchg
cmp
xchg
cmpsl
in
cmp
in
in
mov
xor
dec
mov
fildll
jnp
and
xchg
rolb
jmp
fstp
xchg
fsts
pop
xchg
xchg
push
adc
sub
ljmp
js
out
sahf
imul
lods
pop
sub
cmp
sub
in
sbb
jmp
mov
in
rorl
stos
fmuls
jne
jnp
loope
das
idivb
ds
mov
pushf
pop
mov
dec
ds
leave
call
jns
out
mov
or
incl
inc
push
out
cli
xchg
movsl
sub
sti
and
repz
cmp
jne
fidivl
out
jmp
add
cmpsl
mov
push
mov
lock
jge
fisttpll
add
sub
sahf
hlt
mov
inc
cmc
mov
add
pop
lea
lcall
jg
rcr
sub
and
les
or
je
cwtl
test
and
ja
test
push
jmp
cmpsb
cmp
push
shll
mov
sbb
cmp
cmp
sbb
lcall
xor
and
pop
loopne
bound
adcl
mov
incl
dec
int
and
cmp
in
push
xchg
test
mov
pop
loop
scas
xchg
xchg
lea
push
cld
ljmp
jmp
push
es
sbb
fsub
pop
dec
xchg
mov
dec
push
jmp
inc
adc
stos
jnp
aaa
out
pushf
dec
push
ror
mov
and
loope
jno
fcomps
push
mov
xor
mov
or
pop
push
icebp
out
lret
pop
in
xchg
lcall
icebp
arpl
mov
out
pop
lahf
sbb
repz
ror
or
cmp
outsl
fcoms
inc
fwait
xchg
aas
ja
xchg
jnp
xor
fld
scas
mov
shl
xlat
mov
jns
push
or
call
jmp
sub
call
hlt
cmpsl
jb
fmull
sub
pushl
addb
pop
cltd
sbb
insl
es
xchg
inc
dec
cmpb
xor
fucomip
add
jmp
sbb
fcom
insb
es
rol
mov
mov
notb
ljmp
cvtps2pd
xchg
inc
nop
cwtl
xor
sbb
out
ja
dec
mov
stos
jmp
lods
dec
jmp
stc
outsb
xchg
fs
or
sbb
push
bound
incl
pop
cld
xchg
leave
sub
pop
xlat
scas
lcall
inc
jle
xor
jmp
or
mov
push
add
mov
test
scas
mov
rolb
jo
arpl
mov
in
jecxz
and
lods
out
add
movsb
in
xlat
fs
add
push
push
orl
add
or
mov
das
inc
ja
lcall
cmpsb
pushf
call
mov
test
insl
test
push
repz
pushl
rcr
dec
push
scas
out
daa
xor
outsb
cmpsl
lea
rorl
sub
fimuls
jo
inc
dec
sbb
out
push
or
push
mov
pusha
decb
mov
xor
sub
cld
jne
ds
popa
stos
xor
sub
cmp
mov
or
pop
mov
pop
mov
icebp
movsb
loop
insl
scas
icebp
add
jmp
adc
pop
movlhps
adc
roll
lcall
mov
out
movsl
imul
xchg
imul
inc
cmp
repz
cwtl
xchg
fwait
sahf
and
adc
decl
out
popa
leave
movsl
loope
inc
mov
bound
or
push
push
aaa
or
outsb
stc
nop
stc
lcall
mov
ss
add
imul
shl
and
clc
jg
pushf
sbb
fbld
cmp
xchg
lock
mov
push
add
or
add
push
adc
add
xlat
adcb
adcb
fistpll
fidivs
push
fldt
outsb
imul
push
xor
jnp
bound
lret
addb
inc
pop
adc
add
jnp
xchg
mov
and
mov
pop
jo
mov
cs
test
sbb
sub
add
inc
rolb
add
xor
inc
add
fs
xchg
and
insb
test
inc
adc
jle
sbb
clc
mov
inc
ficoms
push
gs
imul
add
orl
inc
gs
imull
and
mov
std
mov
pop
push
outsl
outsl
insb
push
push
xchg
jo
push
mov
xor
dec
gs
push
mov
xchg
and
sbb
mov
or
mov
shlb
shrl
addl
adc
imul
popa
fdecstp
dec
jne
js
stos
pop
inc
filds
add
popa
push
lock
add
insb
add
xlat
cmpsl
mov
xchg
mov
push
es
imul
jo
inc
pop
sti
add
insl
insl
popa
sub
shlb
push
push
in
mov
pop
push
outsb
or
imul
rolb
fnstsw
add
push
sbb
ret
cli
mov
adc
inc
jns
pusha
rcrl
push
sbb
sub
jae
jb
inc
inc
bound
imul
loop
jne
cli
addr16
loopne
jbe
in
mov
xchg
push
jl
bound
adc
mov
jo
icebp
dec
icebp
dec
pop
push
repnz
jne
jmp
jne
cmp
cmp
sbb
add
cmp
lods
jb
loopne
loope
out
je
ja
movq
je
dec
mov
pop
add
mov
lahf
push
outsl
push
lcall
arpl
out
mov
leave
in
sbb
popf
jns
jnp
xchg
cmp
xor
popa
inc
int3
outsl
shll
jns
jge
mov
mov
mov
lret
dec
bnd
push
sti
adc
addb
dec
pusha
cmp
and
xlat
adc
nop
outsl
pop
sbb
inc
cmp
pop
leave
fwait
mov
fwait
mov
jns
mov
gs
jo
xchg
daa
and
dec
inc
outsl
mov
mov
push
add
inc
pusha
xor
push
outsb
addb
or
je
lock
adc
jno
pop
jnp
outsl
popw
push
adc
loope
mov
fldt
imul
insl
aam
inc
ret
sub
fistpl
adc
or
jl
push
cmp
bound
dec
jb
out
gs
insl
pusha
push
fadd
ljmp
test
and
sub
rcrl
push
add
adc
adc
fnstcw
pop
insl
push
mov
int3
je
nop
mov
es
push
jmp
xor
pop
sbb
push
test
loopne
ss
push
arpl
pusha
or
or
cmp
es
sub
in
pop
pusha
mov
dec
pop
jo
mov
test
sti
sub
inc
and
popf
lahf
pop
or
mov
lods
jecxz
mov
jecxz
adc
jns
add
dec
outsl
and
or
xor
mov
sbb
idivl
orb
fwait
pop
jo
aaa
rorl
roll
adc
mov
jo
xchg
mov
inc
cmp
pop
loopne
push
inc
outsl
inc
icebp
xor
mov
je
bound
inc
xchg
fmuls
nop
mov
test
dec
jnp
push
sbb
jecxz
out
shlb
shll
jecxz
shlb
subl
jno
orl
add
or
adc
int3
sbb
adc
sbb
iret
fnstsw
lods
push
xor
push
flds
inc
es
sbb
out
mov
mov
cmp
add
stc
pop
add
jb
leave
sarl
fstps
mov
pusha
repz
cmp
mov
add
jno
loope
pop
stos
inc
daa
mov
popf
mov
xor
andl
xorl
sub
dec
adc
lods
insl
and
add
or
mov
lock
sahf
outsb
push
jne
inc
aam
addb
packssdw
andb
ds
loop
stos
mov
fwait
mov
and
inc
cmp
gs
push
inc
and
adc
dec
rcrl
mov
pop
dec
inc
jne
loop
and
xchg
pop
sbb
arpl
mov
or
push
or
lock
jmp
adc
les
jg
fstp
cmpsb
sub
inc
or
jp
addr16
inc
sbb
shll
dec
aaa
dec
xor
cmp
sbb
fcomp
fiaddl
mov
cwtl
gs
es
sub
sub
rol
jp
push
and
pushf
or
mov
popa
ffreep
jecxz
add
jmp
add
add
xor
fs
fisubs
and
push
fwait
pusha
inc
jb
and
mov
inc
dec
adc
data16
das
inc
inc
mov
stos
insl
xor
sbb
inc
imul
loop
fs
push
or
jecxz
or
insb
or
inc
pop
sbb
out
cmpsl
inc
lea
stos
mov
inc
fs
dec
jae
jno
xor
inc
into
sbb
lods
pop
cmp
dec
hlt
jne
jmp
pop
mov
jns
pop
imul
les
xor
sbb
adc
xor
xor
push
push
pop
xor
push
not
and
mov
inc
int
outsb
inc
sti
pop
mov
sub
pop
and
int3
push
lds
insb
push
data16
fists
or
dec
outsb
dec
jo
lods
mov
xor
shrb
pop
mov
test
xchg
lcall
dec
xor
imul
lcall
or
movsb
dec
cmpsb
imul
cmpsb
imul
scas
imul
mov
dec
imul
mov
xor
or
rorb
cmp
in
rcrb
mov
pop
and
push
outsl
and
aad
jnp
subb
and
mov
xor
ss
and
subb
pusha
and
inc
jb
jne
imul
bound
mov
jo
sub
cs
jo
dec
cmpl
out
or
mov
sbb
mov
mov
jg
pop
sahf
add
ss
test
loop
jbe
call
scas
dec
push
inc
push
cmp
scas
adc
daa
cmp
push
idivl
xlat
push
or
mov
in
ja
cmp
sbbb
sbb
fs
push
and
adc
sub
insl
and
in
jnp
sbb
xor
adc
jno
test
jmp
popa
or
sub
jo
outsl
nop
cmp
jnp
arpl
aas
stc
sub
inc
lods
sub
jo
pop
roll
imul
push
pop
arpl
xchg
jge,pn
jge
sub
mov
ret
lods
call
and
bound
mov
clc
inc
xchg
inc
insb
addr16
push
pop
cld
popa
imul
mov
add
pop
inc
xor
or
add
push
cs
push
xchg
mov
jno
insb
adc
sub
jno
loop
stos
sub
dec
test
mov
popa
push
mov
call
mov
add
insl
stc
dec
mov
inc
std
imul
mov
push
sub
sarl
inc
mov
xchg
sbb
add
add
test
xor
lds
aas
adc
ret
test
lock
leave
in
cmp
aad
mov
mov
jo
outsb
fisttpl
and
loope
cmp
or
xchg
les
pop
insb
and
dec
popw
imul
vcmpss
imul
imul
xor
outsl
add
pop
mov
pop
out
dec
add
insb
lahf
in
xchg
add
in
lret
cmp
fcompl
inc
push
pop
jns
add
stos
cld
push
push
inc
dec
out
dec
inc
call
fadds
mov
out
inc
xor
pop
pop
roll
jo
aaa
outsl
xchg
push
adc
sub
xchg
pop
loopne
dec
pop
and
xchg
or
out
mov
mov
pop
dec
jnp
sbb
sub
js
sti
lcall
sbb
out
test
or
add
mov
lods
mov
loopne
or
or
mov
daa
fisubrs
add
adc
jnp
xor
fcmovbe
out
adc
add
enter
out
jge
adcl
insb
pop
jg
lds
add
adc
mov
add
push
add
sahf
mov
xchg
sbbb
inc
insl
dec
mov
sub
add
cmpsl
nop
aaa
sbb
je
fadds
and
jb,pn
popa
adc
inc
add
inc
push
xchg
mov
scas
or
flds
dec
add
push
or
pop
sub
fmuls
out
ss
dec
rcrb
mov
ds
add
mov
adcl
push
test
dec
push
mov
adc
iret
rolb
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
aaa
inc
add
