divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcr
mov
mov
ds
pop
inc
lcall
push
push
push
xor
mov
push
mov
scas
and
inc
cld
add
push
fcmovu
inc
add
cmp
pushf
or
push
mov
pop
pop
movsb
adc
push
xchg
mov
xchg
pop
cwtl
pop
jnp
sbb
test
jne
incl
pop
leave
ret
mov
jmp
pushl
ja
xor
inc
adc
decl
push
xadd
dec
test
jg
add
xlat
lcall
xchg
add
mov
imul
adc
and
movsl
push
les
pushl
cltd
push
mov
xor
cmp
add
push
add
aaa
mov
cwtl
cmp
int
push
or
data16
cmpl
xor
movsb
mov
lahf
add
andl
sbb
outsl
in
scas
loope
mov
hlt
cs
addl
idivb
pusha
cmp
sbb
sub
dec
rcrb
in
int
cs
or
das
mov
or
or
sarl
jae
pop
cmpsl
lret
mov
int
add
cmpsb
cmp
lea
push
call
push
push
add
add
push
enter
loopne
pop
inc
add
in
sbb
into
adc
sub
pop
pop
repnz
enter
dec
or
or
add
jae
add
ja
add
dec
xchg
or
xor
test
jl
inc
add
test
pop
addb
das
and
and
dec
inc
fidivl
movsl
pop
xlat
push
sbb
xor
and
dec
push
or
js
sahf
add
push
aad
cmp
je
out
push
jmp
out
aam
fdivrs
fs
jl
add
pop
add
push
scas
xchg
jmp
push
sub
xlat
insl
sbb
add
push
jne
pop
sub
mov
aaa
mov
loop
loopne
pop
pop
ljmp
push
mov
insl
sarl
cmp
or
jge
gs
fildll
js
sti
mov
mov
xor
mov
pop
ret
das
push
cltd
arpl
roll
pop
int3
popa
adcb
cmp
cli
fadds
sub
inc
clc
sub
enter
sbb
in
jmp
sbb
or
cvtps2pd
insl
jo
das
movsl
push
xorl
sbb
pusha
ljmp
jo
cli
js
mov
cmp
jg
mov
adc
mov
inc
ret
pop
dec
mov
push
mov
pop
movsl
jmp
pusha
add
test
push
sub
pop
mov
clc
push
mov
sar
imul
cld
ja
mov
js
pop
dec
clc
add
push
fisubl
scas
jmp
shl
jbe
pop
in
sub
cmpsb
adc
leave
call
ficompl
int3
stc
clc
icebp
loop
lds
iret
jle
mov
sbbl
jecxz
js
jle
push
adc
cmp
fistpl
pusha
lds
dec
cmp
add
aaa
lods
std
jmp
cltd
sub
shr
enter
mov
mov
imul
cwtl
and
mov
add
push
jne
mov
cmc
sbb
adc
jbe
mov
out
xchg
rol
inc
add
inc
add
lea
push
add
adcl
inc
adc
js
notb
xor
into
mov
cld
aam
sbb
xchg
fistpll
pop
push
cmp
cmp
cmpsl
mov
jb
xlat
xor
fsubrs
mov
pop
leave
jmp
or
test
jle
mov
xchg
cmp
mov
inc
sahf
mov
xchg
rol
pop
test
sbb
jo
and
sbbl
sbb
aas
lds
into
je
or
addr16
push
mov
lea
inc
sub
or
xchg
xchg
or
lret
ret
and
addb
hlt
adcb
jbe
cmpsb
mov
or
hlt
jg
pusha
cmp
or
push
or
cmp
xchg
cmp
push
rcr
out
mov
adc
cmp
jle
mov
sbb
int3
out
add
sbb
cmp
or
pop
or
and
cmp
mov
xchg
pop
lret
filds
addr16
add
jb,pt
pop
add
mov
adc
rcll
std
fcoms
jnp
ljmp
add
cmp
clc
mov
push
push
push
rcrb
or
adc
xchg
call
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
cmpsb
cmp
mov
dec
out
ret
aad
add
sarl
sbbb
push
xor
cmp
push
mov
sar
push
lea
cmp
jne
push
int3
sbb
lock
push
add
pop
fucom
adc
pusha
js
push
mov
mov
or
pusha
test
xchg
pop
pop
pop
js
in
inc
subb
push
leave
xor
test
mov
and
sub
test
fcoml
jo
dec
mov
clc
mov
adcb
cmpb
sbb
mov
repnz
sbb
fistpl
cwtl
mov
fmuls
in
gs
pop
lret
pusha
mov
cmp
mov
out
testl
jl
or
jb
mov
mov
lret
rol
dec
out
outsl
cli
sub
or
pop
push
or
sbb
pop
push
movl
pop
jns
sub
mov
sbb
mov
fdivs
pop
in
loope
push
add
sbb
add
jg
and
test
push
lea
push
dec
lea
lock
outsb
inc
xchg
ret
push
imul
insb
lds
sub
mov
scas
nop
mov
enter
scas
push
movsl
cmp
lock
push
xor
add
pop
cmp
je
js
hlt
test
adc
jne
sbb
xor
arpl
ret
xlat
jecxz
mov
adc
xchg
ss
jbe
insl
into
mov
inc
fdivs
cmp
ljmp
ret
push
scas
push
sti
push
in
mov
aam
in
loope
cmp
dec
or
movsl
div
xor
mov
or
fucomip
call
arpl
cs
jno
bnd
mov
jp
lods
or
outsb
int3
pop
or
es
cmp
sub
add
or
lock
pop
mov
mov
fmuls
ret
mov
movsl
dec
roll
push
mov
mov
push
xchg
lock
ret
cmpsb
mov
lock
aaa
ret
jne
xor
mov
insl
add
pusha
xchg
faddp
jno
or
stc
lcall
loopne
push
sbb
pop
test
adc
xor
mov
sbb
adc
sub
and
mov
inc
xor
aaa
push
lock
lods
dec
lahf
fistpll
inc
add
ret
je
dec
pushf
test
adc
or
adc
movsl
sbb
call
inc
pop
ret
or
mov
loope
or
repz
adc
jle
int
pop
divl
jg
add
mov
push
sub
jbe
rcrb
fadds
mov
jle
or
popaw
jl
mov
call
and
sub
add
test
add
js
or
pop
fsubs
mov
rcl
add
ljmp
insl
xchg
add
sub
lret
ljmp
rorl
or
dec
or
sub
js
and
adc
fbld
ret
add
push
in
dec
fcoml
or
pushl
ljmp
sar
inc
pop
xlat
cmp
pandn
or
cmpb
je
in
rorb
in
scas
int3
mov
cmpb
ret
pop
movsl
stos
mov
dec
pop
je
pop
and
movsb
in
push
adcl
jbe
cmpsl
call
js
jecxz
add
call
movsb
lahf
cmp
add
adcb
test
aaa
pop
sbb
nop
push
and
jb
or
in
insl
mov
xchg
ret
pop
adc
add
xorb
clc
mov
jbe
js
xor
pop
mov
in
cld
cmp
js
or
dec
jns
xchg
fimuls
movsl
cmp
xchg
addb
movsb
sub
jo
daa
xchg
and
into
or
or
mov
je
mov
or
sbb
or
add
fs
push
xor
data16
mov
pop
add
sub
aas
ret
fadds
inc
roll
jo
aam
mov
jae
in
sub
adc
adc
bound
and
cmp
xorl
xor
jno
jne
adc
nop
adc
push
push
bound
mov
xor
ret
mov
lea
xchg
cmp
sub
adc
push
push
push
xchg
xor
ss
data16
jne
sbb
pop
sahf
out
sbb
dec
jmp
mov
loopne
jl,pt
dec
in
or
bound
cmpsb
mov
ljmp
sbbb
lea
xor
mov
push
fadds
jg
call
push
xor
xor
sbb
pop
mov
mov
in
shll
push
add
in
push
mov
push
xchg
loopne
jp
mov
lcall
cmp
sbbl
adc
mov
ret
jmp
repnz
je
or
inc
mov
or
sbb
add
xchg
xor
loop
xlat
les
lahf
in
xorl
mov
mov
push
xor
mov
mov
sti
sbb
rorl
adc
xor
ret
inc
in
fsubr
out
add
add
jb
loopne
movl
insb
xchg
lock
data16
out
loopne
aam
xchg
lods
scas
outsb
cltd
sahf
mov
shl
xor
cmpl
mov
or
mov
in
push
and
push
push
and
mov
jmp
xor
push
pop
jbe
inc
pop
je
sbb
repz
adc
push
js
test
adc
mov
pop
lcall
sub
sbb
test
sbb
imul
fldcw
fistpl
fistpl
jae
ret
pop
xchg
mov
jmp
and
rcr
ret
mov
inc
mov
add
cmp
mov
jns
imul
call
or
push
push
sbb
nop
maskmovq
imull
rcrl
test
enter
or
sbbb
pop
cltd
xchg
lret
push
mov
cmc
xchg
cmp
xor
icebp
pop
in
lods
loopne
add
lcall
test
cmp
popf
mov
cmp
lock
xor
aad
sub
jl
add
mov
fcoml
dec
out
outsb
cmp
mov
cmp
shlb
scas
js
aaa
out
clc
sub
cmp
or
fsubl
stos
dec
movsl
test
nop
out
or
nop
rclb
rclb
mov
and
push
imul
movsb
cmp
dec
pushf
fmuls
mov
int3
sbb
ficomps
mov
xchg
pop
enter
enter
enter
inc
push
imul
cmp
shl
sbb
mov
and
xor
jle
pusha
sbb
push
sbb
jmp
ja
sub
mov
xor
add
and
shr
adc
push
mov
jle
pop
mov
xchg
push
ss
stos
jo
aaa
fidivs
clc
adc
insb
rorl
dec
test
mov
and
xchg
notb
sbb
mov
sub
pop
push
xor
shrb
aam
and
push
inc
adc
add
mov
jnp
dec
xchg
dec
ds
loopne
stc
add
mov
loopne
push
or
pusha
sub
sbb
test
and
sbb
notb
jg
mov
jno
and
xchg
adc
inc
mov
orl
test
clc
out
mov
movl
mov
xchg
sbb
test
mov
cwtl
sub
iret
mov
and
mov
shlb
addr16
adc
mov
xorl
leave
sbb
fdivl
push
adc
in
cmpl
adc
leave
in
adc
mov
fcmovne
pop
and
push
pop
push
jmp
xchg
cmpsl
sbb
adc
or
pop
inc
sbb
shll
std
adc
pop
mov
add
adc
pop
movsb
jae
xor
sub
dec
or
shlb
push
sbb
out
sub
jl
mov
popf
or
push
mov
in
repnz
xchg
btc
lret
or
in
mov
outsb
aaa
adc
dec
xchg
sbb
mov
jne
push
lret
jl
movsl
jno
mov
adc
stc
or
sbb
jne
fsubr
into
adc
mov
aaa
addb
pop
leave
adc
mov
push
adc
movl
mov
or
adc
and
sub
sub
and
sbb
sbb
loop
leave
mov
neg
pop
dec
xchg
pop
bswap
push
inc
test
daa
sbb
jmp
sbb
test
pushf
sbb
clc
popf
cmp
sbb
or
jge
je
shll
les
shlb
pushf
pop
mov
pop
pop
stc
or
aas
cmpsb
sub
testl
mov
clc
add
add
rclb
addr16
mov
or
je
adcb
pop
cmp
dec
mov
xlat
in
xchg
adc
and
movsl
push
adc
jecxz
add
add
cmpsb
ret
or
push
in
push
add
fs
lods
cmp
adc
cmp
push
xorb
and
sbb
or
test
cmp
je
push
push
pop
in
sub
cmp
cmp
test
adc
cwtl
pop
mov
sub
xchg
and
mov
and
xor
cli
adc
and
std
push
pop
mov
scas
push
jne
xor
rorb
sahf
sub
mov
mov
loope
lock
and
and
and
test
push
and
sahf
inc
bound
stos
add
jbe
pop
add
push
add
pop
push
jo
fcomps
les
xorl
cmpsb
std
add
faddl
cmp
mulb
add
incb
mov
or
or
and
cltd
test
add
adc
data16
js
cmp
scas
sub
pop
nop
mov
add
xor
ljmp
sub
xchg
sbb
adc
adc
das
mov
scas
ret
inc
lret
ret
and
pushf
test
lret
or
xor
mov
add
push
pushf
add
add
push
in
pop
xor
cmp
xor
push
mull
adc
mov
lods
mov
int
lret
and
xchg
sub
mov
and
mov
adc
nop
out
imul
sub
lret
movsb
or
xchg
sbb
movsb
sub
das
sub
add
jg
or
test
adc
inc
in
call
inc
push
push
push
sbb
out
mov
push
pop
fdivrs
cmpsl
xchg
and
movsl
loopne
xchg
out
xchg
push
mov
popf
clc
stos
add
and
xchg
das
lahf
xchg
mov
sbb
dec
sub
or
stos
dec
mov
add
mov
dec
notl
sbb
lods
push
movzbl
xchg
cmp
sub
pushl
jnp
lret
fcmovnbe
sbb
xor
inc
mov
gs
ficompl
push
pop
xor
xor
fistl
fisubrs
dec
or
and
push
jae
mulb
add
sbb
pop
adcb
ficoml
add
les
js
push
adc
mov
inc
jb
sbb
pop
cmp
cmp
mov
bound
and
and
in
and
test
mov
data16
mov
inc
and
jae
xchg
aaa
pop
sub
ret
mov
push
icebp
jne
mov
inc
ja
ds
sbb
movsl
popf
fneni(8087
dec
cmp
mov
mov
in
and
pop
cmpsb
rolb
lahf
add
pushl
adc
cwtl
mov
lahf
faddl
jo
add
adc
mov
xchg
jbe
ret
push
je
mov
jo
adc
pop
dec
mov
jge
adc
je
cmp
push
push
fists
call
inc
jl
push
mov
fistl
dec
add
pop
call
dec
clc
jne
push
sub
jp
mov
mov
push
mov
lods
push
in
movsl
xchg
loopne
pop
jmp
cmp
push
mov
in
push
add
jg
and
jge
mov
add
add
or
mov
pop
inc
in
inc
pop
adc
mov
ljmp
fstl
xchg
xor
add
test
imul
test
push
mov
pop
jmp
pop
inc
xlat
rorb
nop
loope
or
lret
sbb
add
push
pushf
in
pop
pop
xor
loope
jne
xorb
adc
call
lcall
or
lock
mov
jl
and
ja
and
mov
sub
aam
pop
jle
xchg
inc
out
or
sub
or
mov
jl
into
add
scas
jbe
int
adc
pop
out
jne
or
je
sub
sbb
scas
shrl
mov
sbb
sub
adc
mov
and
push
and
inc
lret
clc
push
or
inc
pop
mov
lods
outsl
jae
popa
hlt
fsubrp
call
add
cmp
rcll
dec
xchg
push
add
and
std
mov
not
add
xchg
lahf
je
test
add
push
jge
cmp
pop
fsub
push
out
inc
and
test
call
addl
loope
jo
mov
and
lds
inc
sub
pop
add
push
or
jl
xor
jg
adc
sub
jg
push
mov
in
test
or
les
or
das
push
std
push
lods
inc
int3
add
mov
or
adc
push
fsubrl
or
mov
push
in
shrb
pop
mov
mov
adc
adc
dec
je
sub
pop
addl
pusha
cmpw
je
fcomps
adc
xchg
pusha
jmp
adc
add
or
xchg
rorb
mov
stos
test
adc
push
cmpb
in
xorb
aam
xor
jecxz
out
ja
rcl
push
push
les
je
lock
fbstp
test
hlt
xor
inc
mov
sbb
jle
push
jbe
fadd
jecxz
pop
cmpb
jp
fistpll
cmp
jle
and
je
in
sbb
mov
push
cld
push
cmp
insb
pop
add
xchg
ds
js
stc
popf
decb
fiadds
jle
pop
mov
add
push
push
out
shrb
mov
add
or
xor
out
pop
pop
adc
shlb
mov
xchg
adc
aam
sbb
leave
add
jge
scas
fcmovnb
cmpl
loopne,pt
sub
xorl
clc
cmpw
jne
fildll
rorb
outsb
sbb
inc
roll
inc
sbbb
ret
call
aam
das
test
mov
loopne
dec
test
or
ret
push
insb
mov
jbe
pusha
ss
add
push
sar
dec
mov
add
xchg
jmp
test
add
or
outsl
jns
flds
sub
stos
and
mov
scas
ret
roll
nop
or
or
adc
and
jb
and
or
sub
rolb
mov
jg
in
loopne
pop
cld
loopne
sbbb
pop
fisubs
cmpsb
add
fcomps
add
loopne
inc
ja
dec
add
nop
or
cwtl
push
dec
test
cmove
or
imul
loopne
ljmp
mov
cmp
cli
in
mov
sbb
shlb
ret
mov
jp
nop
xchg
cs
jbe
sbb
mov
mov
scas
jecxz
les
in
add
inc
mov
and
and
add
add
push
jecxz
repnz
push
call
ficoml
mov
rcll
addl
test
iret
cmp
decb
rcll
call
push
pop
nop
out
inc
dec
insl
or
mov
jbe
aaa
xor
or
push
loopne
add
test
xor
je
cmp
or
mov
js
pop
lods
dec
cmovns
mov
adc
sub
add
adc
iret
dec
fs
push
pop
call
add
xor
mov
or
push
mov
rorl
insb
and
rclb
pop
ss
cmp
aam
fcoms
faddl
loopne
in
mov
mov
xor
loope
test
je
pushl
push
js
std
cmp
mov
cmp
ret
shr
movzbl
push
fdivrs
push
ret
push
push
inc
add
movsb
mov
lret
dec
sub
jmp
sbb
jl
cmp
ret
push
andl
mov
addl
dec
push
gs
pop
xor
fcoms
out
xchg
icebp
test
add
int3
cmc
jle
pop
or
add
mov
or
add
sti
jle
cld
aaa
mov
push
push
mov
push
cmp
jg
mov
mov
jmp
into
mov
dec
arpl
jae
sbb
insb
sbb
leave
sbb
mov
repnz
xor
enter
push
ret
or
cmpsl
mov
cmp
pop
xor
js
outsb
sub
in
sub
cmp
subl
sbb
mov
sbb
jge
pop
sbb
jg
ret
push
pop
jmp
mov
push
cmp
inc
fs
int
and
ss
sub
shlb
cmp
add
sub
jne
xor
cmp
inc
adc
rorl
lock
ja
xor
inc
cmp
jae
stos
daa
clc
orl
dec
ja
xor
je
fs
divb
mov
add
cs
je
add
fiaddl
push
or
lock
imul
ljmp
call
jg
ss
add
push
push
jnp
shll
daa
adc
shr
scas
mov
into
popa
fwait
adc
fisttpl
pop
xor
rorb
cli
lea
ljmp
roll
or
push
test
adc
fiaddl
xchg
add
fcmove
add
mov
mov
xor
dec
push
mov
mov
add
sub
inc
test
mov
adcb
out
aam
int
jmp
call
mov
js
ret
push
cmpsb
std
inc
dec
hlt
jg
hlt
or
jle
push
sub
pop
movb
xchg
inc
lahf
xchg
imul
out
add
inc
pusha
mov
adc
sbb
sub
push
push
mov
inc
pop
inc
mov
in
sbb
pop
xchg
fdivp
add
jns
idiv
cmp
jl
cld
inc
in
mov
fldpi
push
xor
push
rcl
dec
pop
cmp
xor
push
ja
addr16
cmp
jae
lock
mov
pop
or
xchg
dec
pusha
cmp
popf
sbb
mov
jge
or
imul
jns
unpcklps
push
mov
inc
roll
je
dec
sti
adc
hlt
ret
je
mov
inc
cltd
mov
jbe
mov
lock
mov
xor
jne
sbb
cmp
into
cmp
outsl
loope
or
mov
clc
pop
pop
pop
inc
mov
int3
or
enter
hlt
add
add
seto
pop
mov
out
mov
jae
dec
mov
adc
mov
insb
add
inc
outsb
mov
push
inc
std
mov
add
adcl
ljmp
mov
pop
dec
dec
sbb
jb
xor
ret
add
adcb
xchg
fsub
pop
lcall
pop
mov
fs
jne
cmp
je
sub
xor
inc
cmp
or
in
sbbb
and
mov
popa
adc
lea
je
pop
sbb
lcall
adc
jo
sbb
lea
or
setne
rcrb
ret
push
arpl
jne
rolb
mov
call
adc
inc
sbb
popl
js,pt
jo
jg
stos
mov
lods
jo
sets
xor
push
or
add
aad
mov
jne
or
sbb
jmp
mov
test
ret
js
push
and
jle
mov
or
cmp
mov
add
add
cmpl
pop
cmpsb
dec
lock
data16
js
rorl
add
jmp
mov
in
jne
clc
add
adc
inc
and
lcall
outsb
repnz
mov
leave
xor
sbb
add
jle
ret
add
es
sahf
sbb
push
incb
imul
add
mov
mov
and
sti
pop
cmp
push
insb
cmp
adcb
hlt
mov
sub
jmp
cmp
lcall
je
jmp
sub
mov
negl
incb
ret
insb
cld
cmp
lea
jbe
mov
dec
or
push
push
test
push
mov
inc
popa
and
push
xchg
add
add
inc
das
cmp
xor
mov
xchg
push
in
add
and
jmp
sbb
loop
mov
xchg
imul
es
inc
fsubs
or
aad
cmpsb
pusha
inc
ret
xlat
jecxz
dec
mov
mov
test
cmpsb
bound
lea
sbb
sbb
sub
mov
scas
mov
call
jo
jp
sti
sbb
push
nop
cmpsb
rcrl
and
or
pop
inc
cmp
xchg
lods
pusha
push
xchg
imul
shufps
fdivr
movsb
and
inc
fdivs
in
sub
jl
loop
fldt
inc
leave
xor
cmp
add
fs
add
jb
enter
test
dec
jecxz
adc
cmpsb
movsl
or
scas
xchg
call
cltd
mov
cmpsl
jb
fsubrs
imul
test
mov
lret
cmpsl
enter
fnstenv
test
xchg
push
inc
add
adc
and
inc
je
test
fiaddl
add
xchg
sbb
enter
mov
call
pop
mov
add
lcall
sarl
add
inc
aad
bound
jmp
inc
mov
sbb
test
and
nop
add
inc
aam
movsb
add
mov
loop
xchg
mov
mov
inc
xor
jno
movsl
and
mov
inc
rcrb
dec
push
push
bound
mov
mov
adc
mov
or
mov
mov
leave
lret
xchg
dec
hlt
mov
cmp
and
fwait
jns
test
ficomps
pop
inc
lcall
xchg
add
movsl
nop
lret
inc
pusha
add
add
pusha
repnz
lret
cmp
xlat
sub
lods
cmpb
movsl
hlt
stos
lock
cmc
popa
shl
xor
leave
mov
clc
sub
test
and
adc
dec
scas
adc
ja
leave
sbb
imul
push
lea
mov
add
cmp
loope
or
and
adc
sub
sbb
pop
cwtl
sbb
dec
testl
sar
sbb
adc
in
cmp
push
jge
sarb
lret
mov
dec
adc
or
cmp
sbb
or
sbb
and
sub
and
and
enter
sbb
sbb
prefetch
push
aaa
sub
sub
pop
sbb
aam
daa
push
push
shll
pop
xchg
push
pop
movsb
xchg
aam
add
repnz
sti
shlb
stc
movups
sbb
and
stc
jge
add
adc
sbb
mov
xor
cmp
in
shrl
popf
ret
pop
negl
mov
add
cmp
shrb
adc
jle
push
jmp
jno
push
sbb
sub
sti
pop
dec
push
jno
loope
sbb
mov
xor
cmc
adc
push
mov
pop
add
sahf
nop
lret
outsl
clc
mov
jne
sub
dec
je
adc
out
into
fsubrp
jge
adc
pop
dec
inc
sbb
aad
xor
movsb
out
out
jmp
mov
mov
mov
or
dec
icebp
adc
leave
jmp
loopne
pop
add
pop
jne
mov
popa
js
jmp
push
add
push
mov
xor
push
xchg
and
or
mov
mov
lret
fimuls
inc
xchg
xchg
or
pop
push
mov
jbe
xchg
mov
pop
dec
jne
add
mov
andl
loope
add
add
daa
mov
or
pop
scas
lea
enter
int3
xor
popl
inc
sbb
scas
sarl
cmp
je
cmp
pop
dec
stos
xor
and
fs
sbb
leave
adc
cli
mov
stc
sub
sbb
fstpl
imul
ja
mov
je
xchg
push
and
xchg
mov
pop
mov
adc
jmp
xchg
cmpsb
adc
sbb
cmp
adc
dec
mov
push
mov
iret
fcomi
ss
cmp
inc
jo
cmp
repz
and
insl
pushl
push
jg
sbb
mov
mov
add
data16
and
sub
mov
cld
fstl
lea
adc
sub
mov
lahf
or
jnp
mov
movb
cmpl
mov
sbb
xchg
pop
jge
fists
mov
mov
pop
icebp
fbld
push
pop
push
lea
push
push
push
push
add
mov
lea
cmp
mov
adc
and
pop
leave
mov
jle
add
mov
lds
movsb
lea
xchg
push
push
jo
movl
jmp
hlt
mov
jnp
jp
pop
and
insl
mov
mov
fwait
add
fcmovbe
cmpb
and
sbb
push
aam
mov
pop
push
push
test
out
add
test
fnstcw
mov
test
mov
dec
mov
in
and
popa
inc
sbb
lcall
idivl
dec
push
mov
lretw
cwtl
or
in
add
xchg
adc
loopne
jno
jle
cmpsb
push
cltd
test
pop
push
inc
push
add
inc
sub
fadds
outsl
add
dec
add
aas
jae
jne
or
dec
repz
add
mov
or
lea
mov
inc
dec
jmp
repz
ds
cmp
jne
je
call
and
mov
ret
or
in
pop
add
push
icebp
nop
jecxz
sub
loop
add
push
cli
loop
lea
test
int
test
mov
cmp
dec
ljmp
aas
push
cmp
mov
mov
pushf
jl
stc
gs
sbb
sub
rolb
mov
lea
jl
sbb
add
les
mov
jg
cmp
aaa
test
lret
xor
popa
rolb
xchg
sub
aam
das
in
enter
or
mov
int3
push
lea
sub
fcoml
adc
dec
fildl
cmp
mov
test
add
adc
dec
mov
fdivl
sbb
or
std
ret
insb
xchg
cmpsb
cmpsl
add
rorb
pusha
and
mov
cmp
jne
pushf
lret
fstl
push
sub
xor
pop
adcb
pop
xor
or
stos
mov
push
rclb
rolb
mov
adc
mov
mov
enter
pop
jbe
sbb
cmp
pushl
call
push
or
out
int3
and
adc
or
pop
xchg
pusha
es
or
sub
les
rcl
mov
ficomps
dec
add
jle
mov
div
push
dec
je
movsl
clc
dec
loop
push
push
in
jge
pop
xchg
outsb
sub
sub
in
fsts
pop
sub
movsb
lea
es
cmp
push
mov
shll
mov
cmp
js
inc
adc
dec
cmp
les
loope
les
icebp
loope
push
mov
or
push
or
lock
mov
adc
sbb
push
neg
sbb
push
adc
cmp
out
out
fildl
add
pop
jb
inc
mov
xchg
sbb
in
and
add
dec
cmp
stos
add
push
push
iret
fwait
push
inc
sarl
out
or
xor
scas
rcl
dec
push
fimull
leave
and
push
push
xchg
adc
je
jmp
ficoms
in
mov
test
push
and
pusha
enter
xor
mov
loope
mov
test
adc
push
les
adc
punpckhdq
add
or
jmp
and
pop
push
mov
idiv
adc
dec
pop
xchg
jo
pop
xchg
or
les
pop
mov
dec
js
and
mov
jns
outsb
jle
cmpl
jne
pushl
push
jo
nop
dec
sbb
push
cs
push
int
xchg
lds
push
ds
fcoml
in
jmp
push
add
xchg
fmuls
bound
cmp
add
or
ret
aas
mov
loope
sti
je
cmp
scas
add
ja
sti
sbb
xchg
leave
push
sahf
repz
adc
mov
add
ja
cmp
mov
rol
sub
mov
addb
xor
clc
xor
sbb
push
jne
movb
cmpsl
enter
or
pop
repz
popf
movsl
fldz
jno
popa
xor
push
loop
enter
adcb
aas
addr16
dec
aas
mov
push
mov
mov
lea
jmp
sub
add
fdivrl
mov
roll
or
imul
mov
sbb
or
stos
roll
js
sbb
es
aam
leave
push
sbb
mov
xor
nop
pop
orl
fidivrs
push
sub
push
adc
enter
cltd
hlt
and
mov
pop
push
sub
xor
lods
test
mov
scas
iret
xor
or
jge
scas
mov
std
int3
ja
add
mov
cmp
nop
popa
cmpsb
and
mov
push
push
lea
add
xor
pop
pusha
push
or
jp
or
sbb
popa
inc
les
dec
jl
jns
imul
sbb
xor
xor
gs
and
jge
mov
xor
clc
sbb
out
test
pop
inc
fimuls
cltd
out
cwtl
imul
pusha
fcompl
scas
mov
pop
mov
rcrb
xchg
push
shrb
aaa
movsl
add
popf
pop
mov
push
stos
xchg
cltd
cli
cmp
inc
mov
sti
popf
out
andl
lods
lods
mov
sbb
xchg
inc
negl
popa
in
or
ja
lea
push
ret
sbb
cmp
mov
adc
mov
fs
adc
fmuls
and
cli
scas
loopne
push
repz
or
ret
inc
test
nop
mov
mov
adc
inc
sub
xchg
fs
xlat
push
adc
sbb
das
repnz
aas
sbb
push
jle
add
fdivs
cmp
cmp
cmp
les
sbb
out
or
inc
shlb
cs
sub
push
push
ja
in
scas
mov
adc
sbb
and
and
mov
add
fisubrs
add
pop
sub
push
cli
or
push
loope
mov
mov
or
or
push
jbe
testb
gs
jo
ror
push
rclb
push
movsb
inc
lock
sbb
mov
xlat
push
daa
out
push
mov
clc
andl
and
or
xlat
xchg
jle
fidivrl
xchg
sub
and
popf
mov
xor
lock
clc
mov
cltd
mov
lea
mov
pop
aas
sar
orl
enter
sbb
mov
cmp
jge
mov
sbb
idiv
push
mov
push
push
mov
les
into
idiv
shl
movsl
add
mov
test
test
jg
bound
loope
fs
dec
push
jo
or
mov
adc
scas
mov
or
or
aam
jae
lock
mov
dec
fldlg2
or
aaa
ficompl
pop
pusha
push
pop
jge
popl
call
mov
sub
clc
je
ja
filds
call
cltd
idivl
aam
into
jp
xor
movsl
test
js
jmp
lock
fs
or
xchg
dec
xlat
sbb
mov
cmp
in
jbe
lahf
xor
ficoms
sbb
dec
lea
xchg
mov
mov
sub
cmp
or
or
jecxz
jge
jmp
mov
hlt
fildl
pop
std
out
hlt
mov
test
jns
faddl
or
inc
sbb
mov
fdivrp
mov
sub
mov
lea
test
mov
inc
js
fdivs
les
xchg
pop
jl
jmp
sarb
xor
push
mov
scas
cmpb
or
clc
fidivl
jmp
push
cmp
or
mov
stos
push
pop
mov
pop
jne
pop
sbb
mov
inc
add
repnz
or
jle
mov
cwtl
mov
movsb
aaa
mov
mov
loop
das
add
aam
jl
cs
lea
popa
cmc
add
pop
inc
fstps
push
gs
bound
je
or
xchg
xchg
and
sbb
xchg
pusha
or
shrb
dec
out
push
pop
pop
into
pop
jle
sub
jp
in
lock
push
mov
jnp
mov
push
ret
data16
imul
in
add
adc
mov
repnz
and
fs
lret
jo
sbb
loope
pop
iret
add
mov
sbb
jne
xor
mov
inc
dec
jge
shll
mov
fistps
jl
movsb
xchg
adc
addr16
jp
push
leave
pusha
pop
leave
pop
xor
jae
adc
int
fdivrl
pushf
lea
push
mov
push
dec
aas
mov
in
mov
lea
test
cmpl
decl
lea
push
push
adc
mov
inc
inc
pop
mov
mov
sub
test
sub
pop
cmpsb
jle
and
push
xchg
movsl
and
je
pop
mov
or
mov
scas
sbb
push
inc
es
sbb
dec
jge
mov
pextrw
or
ret
sbb
lods
jmp
inc
xchg
out
pusha
pop
int3
out
pop
popf
cmp
pop
ret
dec
sbb
sbb
arpl
movsb
add
pop
or
das
and
cmp
movsb
mov
daa
sbb
enter
mov
pop
mov
xor
add
and
cmp
mov
pop
mov
push
cmp
data16
aam
aas
and
inc
int
mov
inc
sub
clc
cld
add
cmp
setb
test
mov
cmp
jg
popl
push
xor
sub
andl
push
lea
or
aaa
addb
adc
in
jle
je
push
fstps
out
mov
pop
adc
jp
add
cltd
push
xor
mov
je
dec
mov
or
mov
jbe
or
outsl
cwtl
inc
hlt
iret
push
fs
in
pop
jbe
push
add
shrl
inc
sub
xlat
ds
das
push
cmp
push
pop
xchg
pop
add
leave
and
shlb
sbbb
sbb
sbb
push
mov
lock
sub
pusha
sbb
imul
jmp
outsl
mov
rclb
sub
fildl
add
int
cwtl
dec
push
ja
and
pop
sti
xor
inc
and
xor
adc
or
dec
and
neg
or
jmp
push
push
pop
cmp
and
jle
xchg
pop
stc
inc
lock
xor
or
adcb
xchg
imull
cmp
fiaddl
jmp
add
shlb
pop
js
mov
inc
add
scas
sti
xor
into
fdivl
sbb
and
inc
pushf
pusha
stos
jb
test
popf
and
lds
sub
push
mov
dec
ljmp
cli
pop
dec
repnz
clc
pop
push
test
enter
jns
fmuls
sbb
add
call
fsubs
mov
add
popf
mov
incl
push
and
add
push
gs
je
and
or
cmp
loopne
popf
sbb
fstl
push
les
push
push
or
stos
test
add
sub
mov
in
call
std
mov
xchg
pop
pop
shl
push
iret
mov
mov
dec
test
movlps
int
popa
pop
push
sbb
push
cmp
iret
movsl
cld
pop
test
adc
mov
jmp
xchg
cld
mov
pop
ss
inc
xchg
push
or
and
je,pt
pop
cmp
imul
sahf
lods
cwtl
xor
push
mov
inc
adc
fcomps
push
shlb
push
adc
mov
fnstcw
xchg
mov
push
jnp
imul
mov
test
or
rorl
hlt
fidivs
mov
dec
andl
bound
je
clc
push
jl
ret
push
xchg
pop
pushl
jo
push
lret
jmp
mov
arpl
dec
cmp
mov
sbb
out
ret
je
push
ret
push
sbb
mov
and
sbb
push
dec
mov
jmp
dec
mov
sub
imul
and
mov
push
ja
lea
adcl
cmp
cmpsl
xchg
ss
mov
jle
pop
cmp
fmulp
js
cmp
jge
mov
rorl
pushf
mov
sbbb
cmp
jle
imul
xor
roll
jle
and
pop
xchg
out
in
sbb
popf
cmp
fisttpll
or
mov
jnp
xchg
mov
xorb
sbb
aam
sbb
xor
push
cld
callw
mov
cmp
in
mov
jl
pop
jo
sub
inc
sete
sbb
loope
and
je
sbb
jb
or
and
stos
push
or
adc
mov
jno
dec
out
mov
mov
add
adc
enter
push
mov
add
sub
jae
shl
dec
xor
out
movsb
add
sbb
mov
sub
ffreep
pop
lods
jecxz
push
hlt
js
push
push
sbb
pop
into
lods
pop
pop
je
lcall
mov
add
jne
iret
sub
lahf
lea
fmull
xchg
je
inc
mov
in
aaa
stos
push
aad
pop
or
and
or
insb
or
test
mov
jge
sbb
sub
push
iret
ss
add
sahf
je
sub
daa
push
sub
push
or
xchg
popa
dec
or
sti
add
sbb
or
jmp
das
adc
mov
sub
outsl
mov
and
aam
jne
lods
adc
fstpl
push
pop
pop
adc
mov
jno
clc
mov
sbb
int
adc
test
test
inc
lock
repnz
in
call
ja
fdiv
in
sbb
sbb
clc
xor
dec
sub
jns
pop
pop
arpl
andl
or
je
movsl
imul
fs
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
mov
sbb
xchg
mov
or
dec
xchg
pushf
push
add
cmp
mov
xchg
or
mov
add
loopne
enter
mov
sbb
push
or
sub
push
or
adc
push
xchg
shlb
inc
call
xor
hlt
add
in
adc
mov
cmp
or
add
dec
call
add
add
dec
cld
sub
lock
dec
dec
dec
aaa
mov
clc
mov
cli
xchg
inc
jge
cmp
jmp
das
hlt
mov
stos
push
out
out
or
jbe
or
push
push
add
push
outsl
or
sbb
gs
rorb
xor
cmp
loopne
clc
adc
sub
jp
dec
idivb
mov
es
popl
jl
inc
inc
in
jb
hlt
fwait
sarl
das
sub
jg
mov
ret
xor
gs
enter
jns
aaa
jb
or
faddp
dec
lret
mov
sub
add
or
mov
in
and
xor
cmpl
pop
push
mov
rolb
adc
push
xor
and
pop
shlb
shr
popa
lods
or
cld
jbe
movzwl
and
inc
push
shrb
sub
cmp
push
lea
push
mov
pop
pop
cmp
rcll
int
inc
or
jbe
pop
push
mov
push
test
fdivl
adc
add
lock
jmp
ljmp
subl
popa
mov
shl
mov
push
xchg
adcb
shll
loope
mov
xlat
in
cmp
ss
mov
and
inc
sbb
mull
test
insb
jbe
jae
lret
push
add
xor
inc
inc
mov
neg
cld
ficompl
push
xchg
add
xor
push
sub
shlb
dec
xchg
jb
and
sub
pop
mov
ret
xchg
push
aam
inc
arpl
push
cmp
ss
movsb
lea
sbb
lock
cmpsb
add
mov
jae
scas
movl
mov
sub
addr16
jnp
clc
fadd
add
lock
mov
and
hlt
mov
sub
xor
push
sub
mov
add
hlt
push
xchg
rcll
xor
lea
mov
lcall
stos
in
or
inc
out
cmp
add
pop
pop
outsb
call
inc
jns
loope
test
push
aas
inc
add
test
out
aaa
hlt
jle
mov
test
pop
or
popa
xchg
push
xchg
cmp
mov
or
push
cmp
and
sahf
addb
sub
jmp
mov
jb
jo
pop
jns
into
fs
cs
cmp
add
mov
cmpsl
mov
mov
fiaddl
sbb
dec
roll
leave
inc
add
outsl
aam
insb
xchg
mov
jp
iret
sub
sbb
sbb
inc
pop
jns
aaa
sbb
pop
arpl
test
movsb
adc
mov
sbb
aas
xor
mov
adcl
adc
xchg
dec
daa
push
adc
mov
lret
mov
push
jnp
mov
adc
mov
int3
jg
xchg
rol
aaa
orb
in
cltd
sub
xor
pusha
add
mov
push
stos
cmpb
and
jl
xchg
pop
cmp
out
xchg
mov
adc
sbb
pop
shll
inc
sub
movl
push
gs
add
adc
xchg
cli
jb
bndldx
popf
cmpsl
cld
mov
pop
adc
fisttpl
imul
add
jo
add
stc
imul
lea
into
push
cmp
outsl
sbb
fldenv
enter
test
std
dec
sbb
fstps
pop
les
rclb
fidivrl
rorb
inc
or
lcall
add
sub
xor
pop
dec
xchg
push
cwtl
fildll
mov
vshufps
xchg
mov
add
subl
mov
js
test
xchg
lock
mov
stc
push
fidivs
jno
iret
nop
lea
popf
sub
cltd
mov
pushfw
push
jmp
or
push
setne
cmpb
cmp
test
lcall
shll
sub
lea
lea
stc
mov
adc
lods
push
or
push
pop
or
adc
and
or
xor
test
dec
imul
inc
sbb
or
testl
out
or
push
dec
or
shrb
or
outsl
pop
mov
jb
mov
and
inc
mov
testb
or
cmp
nop
ds
fwait
loopne
mov
xor
ss
cmp
mov
dec
xchg
mov
js
or
jnp
movsb
fwait
roll
adc
mov
pop
sbb
mov
jo
movsl
in
lods
call
nop
jne
jmp
push
loopne
ja
into
lods
cmpsb
cmp
add
sti
sti
mov
mov
call
push
daa
mov
fsub
push
in
mov
and
test
pop
shl
pushf
jne
aaa
stos
mov
mov
and
mov
insl
push
cmp
repz
inc
xchg
subb
sub
adc
sarb
movsb
ret
int
adc
sbb
add
addl
ror
dec
cld
xchg
or
addr16
cs
nop
xor
and
adc
adc
add
inc
es
xchg
fiadds
pop
xchg
dec
push
fs
sbb
and
sub
pop
incl
and
add
jne
push
cmp
aad
sbb
leave
and
dec
pop
jmp
mov
adc
sarb
mov
lock
data16
insl
mov
mov
sub
xor
test
lret
cli
jle
add
cmp
sbb
movzwl
push
mov
pop
pop
mov
cmp
mov
jb
mov
xor
scas
cmp
aas
sbb
outsb
and
add
shrl
mov
sbbl
mov
shrd
mov
adc
mov
fsts
mov
mov
shlb
out
cwtl
add
test
scas
push
arpl
fs
lcallw
inc
loopne
fs
lock
repz
add
mov
ret
subb
mov
pushf
mov
cmp
in
add
adcb
ret
test
adc
xchg
addb
lock
ret
in
loopne
movsl
jne
and
push
mov
sbb
sub
pushfw
mov
pop
add
lea
lea
or
jbe
mov
enter
es
in
xchg
pusha
cmp
and
mov
iret
fldz
mov
cmp
cmpl
mov
inc
mov
pop
inc
fcoml
mov
cli
insl
sub
inc
shufps
stc
roll
aas
roll
ret
push
mov
push
outsl
or
inc
dec
out
adc
jo
cmp
outsl
rcll
std
dec
jbe
jo
add
cld
mov
or
mov
add
inc
out
pop
mov
ss
iret
aam
popa
jb
inc
add
add
pop
imul
mov
insb
push
push
dec
loopne
inc
in
xor
and
inc
mov
pop
add
aam
dec
in
mov
shrl
pop
enter
push
outsl
mov
cs
xchg
or
enter
or
add
scas
aaa
or
rolb
add
adc
jo
es
adc
or
add
pop
cmc
nop
das
sbb
and
in
lcall
lods
fisttpll
push
gs
popa
dec
aaa
xor
jns
movsl
ror
sbb
std
test
jns
and
mov
sldt
cmp
addl
or
movsb
dec
xor
jns
test
adc
loopne
out
mov
mov
jmp
arpl
xchg
sbb
jns
adc
and
pop
add
hlt
push
ror
das
and
jne
or
mov
dec
sub
test
adc
push
push
mov
test
push
testb
push
xor
mov
int3
faddp
and
xor
aam
push
add
shl
mov
push
daa
fadds
push
or
adc
add
add
and
mov
out
movl
maxps
mov
loope
pop
dec
push
sarl
jge
stc
pusha
pusha
sub
push
cld
adc
dec
fdiv
add
leave
in
adc
mov
and
leave
cmp
jns
cmp
test
je
enter
mov
adc
pop
inc
pop
cmp
push
push
leave
inc
aam
mov
je
cmp
scas
jmp
test
sbb
xor
xchg
lods
xlat
sbb
jnp
adc
icebp
sbb
sbb
stc
sahf
xor
scas
cmp
rcrb
mov
jae
mov
mov
push
push
pop
cmp
je
movsb
push
adc
or
cmp
mov
mov
or
jo
shl
sbb
fcomps
inc
dec
dec
sarb
and
test
inc
and
add
test
adc
and
jb
and
mov
jge
and
and
daa
jo
mov
cmp
push
push
cltd
fdivrs
inc
mov
xchg
push
sbb
inc
stos
mov
es
inc
add
in
sub
nop
jge
sbb
sub
sub
jnp
scas
ret
push
insb
pop
addl
stos
pop
mov
ret
mov
jle
dec
loopne
imul
cs
aam
lods
daa
das
or
mov
xor
das
jns,pn
pop
and
icebp
pop
sub
pop
add
sbb
pop
adc
dec
cmp
insl
into
int3
xor
rorb
fmulp
push
jno
push
adcb
push
push
mov
adc
das
insl
fdivr
rolb
jae
and
sbb
sbb
fmull
sub
cs
pop
cmp
sbbb
repnz
aaa
or
lcall
sahf
mov
lock
mov
add
retw
sbb
fldl
scas
cs
fldl
add
je
add
loopne
xor
or
pop
mov
push
push
jmp
add
iret
mov
xor
insb
add
jg
mov
sbb
decb
shrb
pop
loop
xor
pushf
testb
fcompl
cmp
cs
rorb
push
inc
pop
mov
mov
pusha
loopne
out
jmp
mov
mov
cwtl
lock
nop
faddp
push
and
xchg
fucomp
cwtl
bound
movsl
or
roll
jb
outsb
popa
dec
mov
and
les
fiadds
xchg
xchg
pop
outsl
add
fdivl
xchg
ljmp
sub
cmp
jbe
jb
and
dec
xorl
or
adc
mov
mov
popf
jae
ret
cmp
push
rclb
mov
cmp
xor
cmpsl
mov
xor
xor
lret
xchg
js
sub
lcall
fldl
insl
jge
push
adc
mov
es
and
push
data16
add
pop
roll
das
add
cmp
xlat
addl
test
les
and
xchg
je
leave
ret
jae
loope
or
cmp
cmp
or
rolb
dec
mov
shr
add
cmp
inc
ret
xchg
mov
jp
pop
sti
add
push
lock
mov
loopne
cmp
sub
mov
mov
dec
and
pop
lock
in
lret
ds
jbe
mov
dec
lods
int3
roll
or
insb
pop
scas
mov
test
hlt
cmp
push
arpl
jno
rcr
adc
mov
add
or
add
iret
sub
rolb
mov
mov
filds
xchg
sub
sbbb
xchg
outsl
cmp
and
clc
sub
fnstenv
add
adc
add
mov
rcrb
stos
into
in
mov
jbe
adc
or
out
or
dec
rorl
cmp
into
rorb
mov
push
ret
xchg
outsb
xor
push
pop
jbe
push
orb
sti
lahf
inc
add
dec
movzwl
mov
adcb
push
int3
push
addb
jecxz
inc
ret
testb
xlat
cmp
test
enter
inc
add
or
mov
cmp
fsubrs
fiadds
imul
xchg
fsubs
sub
pop
push
lret
mov
mov
pop
inc
jbe
call
aaa
loopne
or
add
fsubrl
aam
jb
pop
incb
xorb
sbb
xchg
shl
add
cmpb
addr16
jmp
icebp
je
cmp
ja
push
arpl
loop
and
loope
clc
je
jp
mov
xor
clc
ds
push
xchg
lock
sti
lea
push
lea
push
inc
push
movsl
dec
xor
push
push
femms
scas
pop
add
stc
add
sbb
inc
cltd
daa
dec
lret
cmp
jl
mov
hlt
int3
or
jge
cmp
jle
pop
sub
push
jle
roll
shlb
cmp
jne
add
sti
test
ds
push
add
lahf
insb
cmc
add
push
lods
push
lods
cmpsb
mov
dec
sbb
out
test
out
out
pop
xchg
jo
cmp
je
sub
push
jns
push
xlat
push
mov
insl
fcmovnu
movhps
xor
add
fstps
lock
sar
push
ret
outsb
add
test
jmp
sub
dec
bound
in
pop
adc
cmpsb
dec
or
or
sub
in
sub
lea
pop
sbb
out
push
dec
or
in
out
push
mov
sub
or
mov
jae
es
mov
fmuls
rcrb
jae
lods
jnp
or
sti
call
scas
xchg
movsl
or
cs
ja
adcl
push
mov
pop
imul
scas
pop
sub
cmp
add
xchg
push
mov
push
sbb
sub
push
push
xor
mov
jl
stos
divl
or
cmp
jmp
clc
xchg
ljmp
jne
fistpl
adc
mov
incl
cmp
je
jg
sti
pop
sbb
jbe
push
mov
fistpll
dec
sti
mov
xchg
inc
mov
push
clc
mov
add
or
pop
pushl
inc
jae
ret
ds
je
sbbl
or
out
mov
shlb
mov
sub
jne
push
sub
dec
and
lret
in
js
in
dec
test
or
xchg
test
add
and
add
inc
addl
jb
cmpsb
push
ret
add
rcll
mov
in
imul
stos
iret
rol
jne
popa
adc
call
pop
cmp
mov
jbe
outsl
cmp
ret
dec
push
adc
clc
ret
or
push
cmp
je
xor
call
mul
seto
mov
enter
out
and
jmp
cmpsl
mov
daa
cmpb
or
inc
fwait
xor
test
and
xchg
sub
shl
cmp
inc
inc
inc
or
mov
fildl
jns
fcoms
orb
and
ficomps
adc
mov
jge
ja
mov
scas
je
outsl
sub
scas
push
inc
add
pop
pop
push
cld
cmp
inc
out
test
sbb
adc
pop
pop
jbe
lods
cwtl
jecxz
jp
mov
shll
or
add
inc
in
push
adc
imul
test
xor
fimull
repz
xabort
cmp
adc
aad
add
jmp
pop
cmp
xor
adc
add
and
or
dec
xchg
cmp
arpl
je
clc
pop
addr16
or
cld
leave
and
sarb
lock
push
jbe
add
adc
into
inc
stc
cmc
mov
add
inc
bound
and
test
push
js
and
outsb
and
clc
adc
aad
add
aam
lods
sub
jmp
jmp
jl
ret
out
push
test
je
mov
aaa
xchg
cli
jmp
mov
aam
or
mulb
inc
cmp
jae
add
sub
pusha
les
cmp
inc
out
call
ret
adc
outsl
sub
sti
jne
and
out
adc
dec
adc
cmpsb
adc
ss
push
fcmovnb
mov
faddl
xchg
pop
sub
cltd
push
cmp
xchg
push
xor
fistpl
in
lcall
push
inc
dec
pop
or
pop
push
xor
ja
js
dec
or
lret
je
jo
push
lcall
mov
dec
fdivr
push
or
or
in
stos
xor
int3
imul
sub
mov
cmp
jg
jne
loopne
aaa
bound
lea
lret
jno
sti
aaa
sbb
push
out
mov
roll
rorb
movb
push
push
jle
test
dec
mov
or
jns
mov
jbe
in
push
pop
pop
fwait
lret
pop
lods
dec
or
and
jae
test
jmp
adc
inc
or
pusha
or
mov
or
mov
push
mov
xchg
inc
sbb
inc
sub
jg
push
cmp
rcrb
sub
test
push
ror
and
jp
pop
loopne
sub
push
subl
mov
and
add
dec
mov
sub
add
push
or
das
add
inc
lods
inc
and
or
sbb
loop
jo
push
mov
jl
test
push
insb
and
cmpsl
xchg
int3
rcrl
loopne
xor
mov
mov
xchg
push
and
movsb
mov
mov
outsb
stc
mov
inc
push
jge
repz
scas
push
sub
cmp
inc
mov
test
push
data16
push
fdivr
pop
in
or
push
cmp
push
popa
sub
in
sbb
add
pop
ret
call
bound
or
cmpsl
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
ljmp
xchg
in
jbe
insb
mov
testl
push
add
mov
mov
pop
sub
faddl
push
push
lods
or
push
add
or
sub
ror
pop
ja
push
adc
jb
test
push
mov
dec
insb
sbb
fldt
pop
adcl
outsl
ret
ret
fwait
inc
push
es
jecxz
aad
jnp
lahf
and
mov
mov
cli
and
fimuls
sbb
fiaddl
orb
xchg
dec
sahf
xor
mov
jnp
jno
inc
mov
mov
jne
subb
pusha
push
mov
or
dec
jmp
pop
sub
cmp
lock
add
sub
inc
add
lods
xchg
push
mov
push
or
shrb
cmpsl
cli
xchg
pop
inc
adc
in
mov
das
mov
cmp
mov
lods
sub
mov
mov
sbb
or
inc
push
or
pusha
mov
push
mov
lret
dec
js
jl
cmpl
mov
lods
pop
inc
rcr
lea
lahf
jb
adc
cs
mov
add
and
dec
push
pop
andl
cli
push
sub
pop
mov
pop
add
dec
pop
mov
push
or
xor
xor
pop
push
je
in
arpl
jo
push
pop
popf
push
dec
lahf
sub
mov
cmp
sub
fidivl
xor
jmp
fnstcw
push
clc
leave
ret
push
xchg
dec
adc
sbb
aam
or
rolb
mov
test
add
add
mov
inc
js
test
sub
or
dec
je
orl
addr16
cmpsb
xchg
loope
push
xchg
mov
cmp
pop
or
push
jmp
test
lea
mov
sbb
mov
dec
loopne
pop
jg
pop
les
add
jne
push
inc
loopne
ljmp
loopne
scas
aam
mov
xorb
popf
dec
movl
lods
cmp
sbbl
andb
mov
cmp
nop
xor
push
mov
repz
dec
fcmovnbe
icebp
sub
nop
mov
lea
mov
mov
mov
sub
push
mov
nop
inc
frstor
push
xlat
dec
cmc
sub
sbb
shlb
and
adc
sbb
ret
add
sub
pushf
orb
add
orb
notl
or
dec
adc
lcall
clc
inc
jne
lds
mov
push
adc
punpcklbw
add
cmp
cmp
iret
mov
xlat
ljmp
push
xchg
mov
xchg
jo
jo
arpl
outsb
cmc
cmpsb
mov
repz
adc
xchg
inc
or
push
mov
pusha
inc
lea
insb
xor
pop
das
xchg
fcom
mov
sub
mov
shrl
or
adcl
lea
xorl
pminsw
movsb
hlt
cmp
fcmovne
lcall
nop
xlat
push
mov
sbb
cld
push
dec
xor
js
mov
push
cmp
insl
inc
fadds
push
cmp
aaa
cmp
sbb
or
jae
mov
rcrb
pop
pusha
lods
mov
sbb
in
aad
sub
sub
cmpsl
ss
sub
adc
sbb
pop
push
sahf
js
push
gs
cmpl
dec
push
aas
int3
mov
or
mov
xchg
sub
lea
mov
cmpsb
call
and
sbb
loop
and
mov
loopne
mov
jns
rolb
jecxz
add
dec
and
inc
or
cmpsb
aaa
xchg
xchg
test
mov
xchg
xor
mov
cmpl
push
pop
xor
push
cmp
jne
popa
or
enter
push
mov
repz
pop
xchg
int3
pop
pop
sbb
cmp
sub
xchg
mov
imul
sbb
nop
nop
sbb
sbb
or
sbb
addr16
or
jo
dec
faddp
movsl
sub
shl
cmpb
add
pop
dec
or
or
inc
ja
add
shrb
mov
roll
xchg
pop
sub
add
add
enter
and
adc
add
lret
lret
sub
clc
xor
daa
std
lods
cmpsl
sbb
sbb
and
and
and
iret
test
fistl
ret
dec
adc
repnz
std
mov
shl
cld
jmp
sbb
sub
pop
aas
add
ret
add
jbe
push
lea
and
dec
ret
jb
mov
adc
add
push
adc
and
mov
ss
inc
popa
movb
popa
or
loopne
inc
push
ret
adc
sub
inc
outsb
call
lock
les
sub
addb
cmpsl
adc
adc
loopne
push
mov
por
test
movsb
imul
pop
outsb
dec
sub
in
test
sbb
add
les
mov
rcrb
filds
aas
sbb
adc
dec
sar
js
dec
lret
sub
in
aaa
ss
mov
pop
inc
std
and
fldpi
pushf
jp
pop
js
mov
jp
push
pop
mov
jne
adc
pop
push
mov
ret
enter
rcll
dec
mov
rcll
ss
or
dec
xor
push
push
add
ret
std
movsl
cmp
or
mov
fcoms
nop
jg
xor
stos
imul
push
loop
dec
outsl
fsubrl
lea
push
mov
sub
jmp
ficomps
xor
pusha
jo
inc
insb
pop
and
add
orb
add
pop
and
add
mov
inc
pop
pop
or
cmp
mov
inc
push
popf
idivb
les
bound
mov
dec
add
mov
int
lods
in
sahf
shlb
sbb
and
and
adc
orl
ret
and
mov
inc
or
xchg
in
fisubl
adc
push
lods
mov
and
cmp
cwtl
add
test
lock
mov
dec
add
xchg
inc
pop
lcall
mov
iret
rclb
ja
test
ret
or
lea
in
das
pusha
lea
cmp
inc
mov
test
movsl
inc
xchg
ljmp
loopne
inc
mov
sbb
out
inc
in
cmp
jle
jnp
cltd
mov
or
push
cwtl
daa
mov
into
dec
cmp
dec
and
ljmp
pop
mov
js
imul
sbb
push
push
sbb
mov
out
adc
push
add
in
lcall
cwtl
mov
imul
fidivl
sti
add
xchg
loope
cmp
pop
push
stos
shl
fstp
imul
int
mov
mov
xor
jnp
je
rcrl
xor
cmc
add
lea
mov
stc
cmp
push
mov
or
sub
mov
jo
xor
loopne
add
and
mov
xor
adc
and
jo
inc
mov
aad
shl
adc
lret
in
or
xchg
enter
push
shlb
sbb
test
movsb
dec
xchg
or
test
adc
imul
imul
or
sub
cmpb
nop
pop
je
push
ret
lods
fdivr
aaa
dec
add
orl
push
push
pusha
xchg
mov
je
mov
mov
jp
inc
pop
cmp
pop
sbb
jne
pop
mov
jp
sub
jmp
stos
es
in
add
ss
in
test
push
ja
movsl
aaa
jne
cmp
lea
sub
loopw
test
rcl
lahf
cmp
xor
jnp
jl
push
andl
push
dec
pop
inc
xchg
xchg
fadds
icebp
add
test
jno
push
sarb
out
sub
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
mov
push
jno
and
aam
out
rorb
cmpl
in
pop
pop
lods
sarb
mov
adc
pop
std
cmc
sub
xchg
push
and
push
loope
pop
push
sub
add
test
mov
inc
fdivr
je
and
mov
loopne
rclb
dec
insb
push
push
push
movsl
adc
enter
sbb
cmova
or
or
or
xor
push
das
or
leave
push
mov
pusha
sub
cmpsb
ja
adc
mov
imul
inc
push
pushl
movsl
adc
stc
cmc
sub
pop
test
adc
add
or
jb
and
or
inc
mov
scas
ljmp
adc
inc
inc
pushw
mov
dec
pop
cmpsl
adc
mov
nop
cmp
adc
adc
enter
mov
adc
sub
dec
push
inc
insl
lea
es
imul
and
daa
lea
scas
mov
cmp
xor
call
pushf
push
inc
dec
cmp
mov
sub
or
dec
jp
mov
add
xchg
mov
andb
cwtl
xor
pop
inc
or
nop
sbb
fmull
sbb
fcompl
pop
xchg
je
out
push
cmp
pusha
xor
mov
xor
mov
jmp
aam
stos
jb
dec
pusha
and
lea
mov
das
sub
jecxz
pxor
in
dec
add
inc
add
and
sub
push
lret
jmp
sbb
xlat
pop
xor
and
cmp
push
int
scas
addr16
cmp
dec
in
jno
lea
lea
mov
mov
xchg
sbb
imul
mov
rclb
dec
loop
mov
cltd
add
pop
inc
dec
rolb
aam
int3
push
pop
cmp
test
and
sbb
js
movsl
mov
int
ret
cmp
loopne
cmpsl
mov
xorl
das
rol
int3
sbb
pop
fiaddl
mov
out
lods
cmp
jne
subb
adc
sbb
push
incb
and
dec
and
mov
push
cmp
aas
fnsave
mov
sub
xchg
dec
cmp
sub
pop
xor
daa
int3
push
rolb
mov
mov
or
mov
jo
stc
xlat
into
mov
cmp
outsb
and
inc
lock
cltd
out
aas
cld
arpl
popa
lret
fdivr
roll
inc
xchg
pop
push
loopne
call
lds
imul
cmp
cmpsb
paddsb
cmp
jl
jmp
sti
pushf
mov
rorb
dec
xlat
scas
sub
popf
jb
adc
mov
add
and
bound
ret
movl
rolb
adc
cwtl
cwtl
xor
in
xor
push
cs
lods
cmp
frstor
imul
imul
and
add
sbb
pop
sbbl
addr16
xchg
push
jp
scas
jmp
aad
aaa
hlt
jnp
push
and
xchg
fldt
xor
shl
mov
mov
dec
push
je
dec
jne
pusha
mov
xlat
fcoml
shlb
clc
adc
loopne
shr
and
jmp
inc
push
push
sbb
ja
sbb
inc
roll
leave
push
fimuls
fwait
imul
xorl
repz
sbb
mov
mov
sbb
mov
xchg
ret
cmp
sti
in
andl
clc
loope
test
int
shll
xor
mov
mov
lea
xor
insl
or
or
sbb
mov
je
dec
les
jmp
lea
dec
das
mov
pop
ja
xchg
ds
jmp
push
mov
or
mov
jmp
pop
js
ret
mov
jge
insl
popa
test
jno
dec
repnz
arpl
adcl
push
and
push
xor
push
push
bound
pop
cmp
mov
adcl
jge
add
jb
dec
ljmp
mov
int
ret
lahf
loopne
sub
ds
je
jp
pop
add
inc
mov
inc
sub
adc
xchg
or
or
pop
cmp
es
lock
int3
or
mov
sub
push
inc
lea
push
cltd
or
push
enter
jo
popa
int
xlat
lods
pop
mov
push
add
outsb
dec
sbb
xor
push
aaa
push
xchg
fwait
into
cld
push
pop
cmc
and
shr
and
push
je
aaa
cmp
mov
das
andl
push
sbb
jmp
push
sub
cwtl
loope
jmp
jmp
adcb
xchg
pop
sbb
dec
shr
add
push
fldl
add
pop
movsb
aaa
insb
je
xor
add
xor
inc
push
loopne
incb
inc
cmpb
xor
iret
aaa
jne
sbb
ljmp
aad
xchg
mov
popa
fidivs
mov
mov
sbb
push
outsl
adc
mov
dec
push
lock
fistl
adc
movsb
xor
dec
lret
jmp
mov
adc
add
mov
lock
xor
sub
les
xor
xor
xchg
jg
ret
cmp
mov
push
or
pop
inc
xor
outsb
faddl
push
push
and
sub
mov
adc
and
ja
mov
adc
bound
dec
pop
fsubl
dec
imul
push
mov
pop
mov
mov
xor
pusha
not
pusha
movsb
push
add
cmp
nop
sbb
and
jg
ja
jge
mov
test
divb
inc
cmp
jl
lret
test
xor
adc
sbb
dec
or
inc
ret
push
push
mov
mov
push
pop
mov
sarl
mov
add
dec
jo
enter
insb
fistl
mov
lea
rorb
popf
fcmovb
push
adc
fiaddl
jge
sub
test
or
dec
or
xor
push
mov
mov
pushf
push
pop
jae
inc
adc
stc
mov
adc
movb
xchg
or
inc
lds
loopne
fistpll
mov
cli
push
mov
cmpb
je
imul
popf
push
add
test
xchg
and
jbe
sbb
mov
adc
in
xchg
sbb
lods
dec
inc
and
cmp
adc
movsb
jns
enter
mov
mov
imul
mov
sub
mov
xchg
and
loop
xor
lret
xor
push
inc
outsb
and
jae
sub
cmpsl
int3
cmpsl
aas
sarb
cmp
imul
daa
inc
jmp
jo
add
push
add
mov
loopne
jae
sbb
mov
and
aam
inc
dec
pop
cmp
pop
aaa
lods
add
mov
pushf
sub
das
mov
push
inc
fildl
pushf
in
push
push
out
and
loopne
cmpsb
mov
inc
pop
je
mov
dec
cmpsb
pop
outsb
pop
js
imul
sbb
flds
adc
je
divl
ja
sbb
clc
aaa
push
je
incl
inc
sub
jns
aam
jno
mov
mov
adc
xor
sub
dec
and
mov
inc
or
mov
xchg
sbb
pop
lods
mov
cli
cmp
cmp
push
and
das
mov
push
lea
cli
in
sub
cmp
jae
add
pop
adc
sub
inc
inc
sbb
lods
sub
je
lock
adc
pushf
xlat
sub
mov
cmp
mov
mov
cmp
cmp
dec
and
add
out
in
test
dec
scas
jo
cs
pop
std
cmpsl
loopne
sub
mov
xor
popa
pop
cmp
hlt
inc
pop
pop
cmp
ljmp
cwtl
pop
adc
ds
jg
sbb
jne
cmp
outsl
inc
sub
cmc
test
mov
rcr
inc
fstl
nop
and
imul
cltd
push
cmp
pop
cmp
test
mov
add
or
add
je
push
add
lret
call
push
cmp
jge
cmp
movsb
mov
lahf
xchg
mov
cmp
or
cmpsb
xchg
cmp
stc
adc
lods
add
dec
and
sbb
cmp
pop
shlb
pop
and
dec
in
test
sbb
fcmovnu
inc
sub
dec
mov
mov
xchg
mov
faddl
mov
jecxz
push
sub
fwait
inc
fidivrs
dec
out
pop
pop
rorl
pop
adc
leave
xchg
adc
je
das
inc
inc
xchg
sub
add
inc
sub
cmp
adc
sub
add
adc
fistps
xor
int
add
cmp
sub
fwait
addb
inc
fxam
adc
mov
xchg
push
adc
enter
notl
pop
add
push
push
mov
pop
cld
xor
pop
test
inc
pop
mov
jo
clc
adc
push
sti
push
cmp
inc
push
loope
mov
sbb
dec
mov
imul
je
inc
pop
push
sub
inc
cmpsb
sub
shlb
shrb
add
movsl
lea
mov
pusha
mov
loope
int3
js
pop
sub
jne
movsb
xchg
xor
sub
pop
loop
or
aaa
sub
and
mov
cld
cltd
adcl
and
sahf
test
jmp
rolb
and
je
add
jmp
mov
out
nop
out
mov
sbb
adc
push
jo
xor
add
mov
mov
nop
je
out
xchg
sub
in
inc
push
mov
mov
xor
and
shrl
mov
lock
pop
xor
xchg
add
pop
pusha
adc
popa
ror
pushf
inc
aaa
stos
xor
or
dec
cmp
je
xlat
gs
sbb
mov
bound
int3
jno
pop
aad
and
stos
adc
je
mov
push
adc
cwtl
xlat
dec
and
mov
pop
imul
cwtl
movsb
imul
inc
jg
orb
push
ret
mov
add
or
sub
jnp
or
sti
stos
je
icebp
adc
jne
mov
and
mov
ja
push
adc
mov
pop
and
mov
int3
sub
lcall
or
inc
dec
dec
add
cmp
xor
xchg
dec
jmp
jmp
sub
inc
movsl
jmp
out
mov
push
adc
cmp
jge
cmp
sub
scas
mov
and
into
test
add
cmp
imul
and
pop
ds
sti
jbe
jle
or
mov
insb
lock
lea
sti
sub
sub
sub
mov
lahf
adc
jl
in
insb
jb
or
add
or
add
and
negl
shll
or
aad
jnp
mov
ljmp
mov
mov
push
xor
aas
mov
jl
mov
pop
mov
inc
repz
mov
jl
dec
sarb
lock
fldt
or
out
negb
push
xchg
or
rcrb
sbb
sub
rcr
nop
adc
xor
xlat
stos
iret
xor
ja
icebp
push
push
or
test
pop
push
jl
popa
pop
aad
inc
je
es
push
dec
pusha
out
hlt
test
aam
jb
add
inc
ret
and
dec
or
xchg
imul
subb
mov
sbb
mov
or
add
movsl
bound
add
das
pop
daa
pop
sbb
sbb
sub
push
push
popf
adc
fwait
cwtl
cmp
int
pop
repz
push
sbb
imul
sarl
push
and
loopne
xchg
adc
xlat
push
sbb
pop
push
std
inc
fnstenv
add
ret
icebp
push
xchg
push
mov
movsl
cmpsb
mov
inc
and
mov
push
shrl
jae
sub
dec
es
push
xor
jb
icebp
jno
and
adc
in
xor
or
sub
cmp
inc
loop
cmp
push
pop
mov
mov
push
mov
jo
dec
sbb
xchg
loopne
test
aas
xor
das
lds
cmpsl
jle
enter
dec
mov
int3
xor
mov
out
lea
dec
mov
mov
pop
dec
dec
in
adc
int
call
sbb
and
sub
hlt
pop
orb
and
xor
nop
or
cld
and
enter
repnz
iret
das
or
nop
dec
and
adc
ss
push
jne
inc
dec
mov
movsb
and
and
scas
inc
sub
sub
repz
push
xchg
daa
sbb
dec
sub
stos
mov
sub
push
pop
push
pop
cmpsb
popa
and
and
sub
pop
leave
sub
adc
lds
nop
and
jo
das
sbb
jb
sbb
push
fisttpl
pop
stos
mov
push
rorb
push
sbb
adcb
xchg
inc
push
xor
lods
inc
or
mov
cmp
jne
add
mov
and
jle
sbb
mov
outsb
imul
xor
lods
jns
sbb
jge
push
push
adc
movsb
or
or
inc
or
out
mov
flds
fadds
adc
inc
fiaddl
movsb
cltd
nop
sbb
sbb
bound
adc
xor
and
and
or
insl
jecxz
std
inc
or
dec
push
inc
test
repz
sbb
fwait
xor
adc
or
xor
add
inc
in
xchg
popa
nop
fiadds
dec
and
dec
adc
sahf
or
and
xor
call
sarb
and
mov
mov
push
pop
inc
sbb
xchg
iret
mov
inc
mov
mov
dec
lcall
sub
adc
sub
push
into
faddl
mov
xor
jl
lret
and
sbb
cmc
adc
xor
xor
ret
inc
cmp
add
ljmp
aaa
lock
out
mov
cmpl
jno
dec
sub
stos
shl
movsb
mov
pop
push
pop
push
xor
jbe
lods
add
sub
dec
test
adc
xor
loopne
push
call
xor
mov
and
loopne
push
push
icebp
or
fcomip
or
es
cmp
jb
popa
cwtl
out
sbb
inc
sbbl
cmp
inc
xlat
adc
hlt
sbb
jne
je
xor
into
imul
push
and
inc
ret
dec
mov
inc
mov
andb
inc
pop
dec
mov
adc
and
ja
sub
insl
push
ficompl
lds
pushl
push
dec
or
call
outsb
push
popa
dec
lods
jp
insb
cmc
lcall
outsb
bound
sbb
popa
lcall
or
fs
or
add
shrb
add
aad
lods
mov
je
push
fisubs
call
shll
inc
mov
or
push
pushl
xchg
pop
orl
cmp
outsl
dec
mov
inc
mov
daa
lds
add
ja
mov
decb
jge
inc
fmuls
push
cmpl
cmp
add
aam
sbb
pop
mov
sarl
push
sub
pop
add
or
movsl
das
les
es
repnz
es
and
xor
test
cmpl
jne
push
mov
mov
xor
mov
jge
mov
ja
mov
jne
rcr
imul
hlt
add
aaa
xchg
mov
aaa
add
rcrl
sbb
mov
push
andl
jo
push
pop
movl
sbb
sbb
jmp
adc
mov
je
sbbl
gs
sbb
addr16
jae
mov
sub
inc
ljmp
xor
popf
xor
xchg
xor
mov
imul
pop
adc
jge
mov
dec
js
jns
mov
ret
icebp
jae
jle
pop
xchg
sbb
adc
jo
mov
lea
into
mov
push
sub
bound
pusha
jl
loop
rorl
push
dec
pop
in
and
fwait
pop
cmpsb
push
dec
cwtl
pop
inc
mov
in
je
dec
xlat
adc
mov
pop
fucomi
jo
push
inc
jmp
mov
add
imul
aaa
adc
adc
xor
adc
outsb
sbb
fistl
mov
sbb
push
pop
psubw
scas
movl
sub
test
mov
jg
mov
es
add
add
jb
movsb
sbb
stos
mov
lcall
std
xorb
mov
sbb
mov
mov
enter
insb
mov
enter
aam
bswap
rorl
or
adc
inc
add
or
or
push
add
aas
and
or
push
lds
flds
or
cmpsl
add
xchg
cmp
jp
and
sahf
add
or
adc
add
lret
enter
and
sbb
dec
fsub
cmp
jle
ret
cld
jae
inc
add
outsb
mov
ficomps
or
sbb
stos
clc
ret
xor
add
sbb
cmpb
sbb
jmp
icebp
loopne
loope
loopne
mov
out
dec
roll
mov
lret
jp
cltd
add
sub
push
shr
out
int3
orb
adc
lods
and
int
cmp
icebp
dec
sub
sub
icebp
repnz
and
inc
xchg
xchg
cmovo
dec
sub
rcrl
push
cmp
out
rcrb
das
call
xor
movsl
into
aam
ds
imul
sbb
sbb
mov
dec
lret
lar
enter
add
shrb
add
out
in
add
add
inc
popa
inc
mov
sub
mov
jp
push
add
ffree
lret
int
orb
dec
lret
leave
leave
in
cmp
or
push
pusha
and
pop
or
ficomps
or
inc
ret
insb
inc
lods
and
sti
repnz
add
push
xor
or
xor
xor
push
pop
rolb
adc
and
dec
or
andl
xor
cmp
and
mov
xor
or
dec
in
and
adc
or
and
test
pcmpeqd
add
cld
add
dec
sbb
inc
dec
subl
xor
sbb
dec
rorb
mov
call
movb
das
jb
xor
inc
mov
xor
mov
dec
stc
dec
ret
xor
movsb
xchg
lea
sti
out
xor
inc
test
mov
stos
inc
inc
mov
enter
xor
adc
sbb
adc
inc
lea
adcl
ja
or
xor
and
popf
adc
pop
inc
scas
or
testl
push
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
xor
add
adc
int3
xor
lds
fs
icebp
popf
mov
das
mov
loop
mov
dec
loop
mov
fs
les
and
push
push
dec
push
in
je
lea
pop
sub
jnp
push
push
xor
mov
xor
cwtl
sbb
push
daa
mov
sbb
out
aad
xchg
inc
je
sahf
incl
push
xor
sahf
shlb
cwtl
push
fdivr
ret
addr16
inc
sbb
xor
xchg
rorl
loop
inc
shrl
push
cmp
loope
adc
adc
or
xorl
push
rcrl
loopne
loopne
xchg
pop
dec
pop
push
sub
xor
sbb
inc
test
cmp
dec
and
jmp
jecxz
je
adcl
xor
dec
inc
add
jmp
adc
push
aad
aas
loop
adc
repnz
dec
aas
inc
std
or
or
xor
data16
scas
sbb
aas
inc
cmp
mov
fisttpll
rclb
mov
test
fidivrs
xor
hlt
sbb
fistpll
cmp
mov
sub
hlt
xor
les
repnz
in
adc
test
rcrb
or
insl
lea
push
and
or
ss
enter
push
imul
cmpb
add
adc
inc
repnz
add
shrl
push
lcall
adc
mov
dec
adc
push
push
lahf
add
xor
adc
add
or
push
lret
roll
repz
adc
pop
cmpsl
sbb
adc
inc
add
adc
mov
jp
xor
fs
pop
clc
adc
test
dec
je
insb
gs
cwtl
cli
cmp
addl
lcall
push
cmp
sbb
inc
cmp
push
sbb
call
jae
add
cmp
repz
mov
icebp
push
add
xor
add
add
lods
adc
add
inc
imul
test
out
and
incb
fstps
mov
fnstenv
ss
ss
sub
adc
sub
and
mov
or
push
movl
cwtl
or
push
sbb
jo
cmc
and
je
je
movsb
arpl
call
rorb
nop
push
push
movb
int
je
lods
mov
push
sbb
aas
sbb
jmp
jne
fiadds
and
add
in
loope
sbb
mov
dec
or
fisttpl
mov
aas
or
push
push
and
sbb
mov
jmp
mov
cmp
and
insb
pushf
sub
jo
mov
fdivl
dec
push
and
jb
sub
jns
cmp
mov
pop
pop
clc
loop
pop
dec
dec
fildl
imul
dec
add
imul
add
cmp
fs
push
jnp
daa
mov
push
notl
lret
xlat
push
stc
mov
pop
hlt
repnz
sbb
mov
daa
lock
jns
cli
lock
sbb
roll
push
mov
and
je
dec
xor
and
rorb
add
jae
xchg
mov
jns
mov
aaa
xchg
cld
addb
or
mov
mov
mov
mov
fists
adc
jbe
rorl
lds
or
cmp
jae
pop
add
roll
push
xor
addb
adc
roll
or
dec
adc
mov
xchg
cmc
adc
test
mov
mov
popa
sbb
pusha
ret
inc
mov
or
in
xor
mov
mov
mov
jge
sbb
or
cmpb
or
sbb
push
pop
or
in
mov
mov
jo
sbb
andl
adc
mov
adc
lea
sub
jno
xor
xor
add
cwtl
mov
rolb
sub
push
out
popa
insl
mov
inc
jmp
push
mov
jb
ret
sbb
sbb
adc
loope
cwtl
nop
popl
cli
or
test
es
dec
movsl
jne
ret
push
inc
and
sub
push
push
adc
inc
lock
ljmp
inc
add
pop
xor
sub
mov
in
sahf
adc
push
adc
enter
decl
lods
dec
jne
xchg
push
cmp
mov
jne
movsbw
fcom
sbb
ds
jno
jne
out
mov
or
je
adc
fwait
jne
rorl
push
arpl
sub
adc
xlat
icebp
cmp
mov
hlt
push
inc
xor
sbb
inc
mov
clc
loopne
cmp
adc
mov
imul
push
je
lret
call
adc
jo
sbb
xorb
sub
movsl
xchg
mov
xor
xor
lret
call
jle
in
add
cmpsl
ja
lea
dec
es
insb
dec
lods
repnz
mov
xlat
xor
xchg
xor
test
pop
dec
cmp
mov
test
push
cs
push
daa
in
js
gs
scas
shrb
rcrl
push
sub
in
jno
xchg
dec
sbb
gs
lock
xchg
xor
inc
or
lcall
and
push
inc
lods
test
cwtl
pop
push
neg
loope
jge
dec
push
sti
sub
js
out
or
imul
add
xchg
pushl
push
pop
mov
inc
xlat
mov
ret
and
aad
sbb
das
lods
pop
aad
or
lods
cmpsl
iret
dec
pop
and
arpl
imul
sub
jl
sbb
xchg
call
or
xor
sbb
xor
pop
xchg
mov
push
dec
and
xor
pop
cmc
add
mov
daa
imull
fs
scas
pushf
mov
je
cmp
xchg
das
push
loope
push
lahf
sbb
mov
mov
and
mov
out
adc
adc
hlt
xor
and
jecxz
shll
inc
push
movsb
mov
pop
ljmp
jo
adc
cmc
cwtl
sub
mov
stos
jo
stos
wbinvd
repz
inc
jae
cld
sbb
arpl
in
clc
cmp
mov
jns
jecxz
sub
adc
push
push
cld
jae
inc
call
in
movsl
cmp
cmpsb
mov
push
xor
mov
add
out
push
in
les
add
test
movb
dec
pop
clc
jbe
loop
inc
jle
mov
add
movl
loope
mov
test
hlt
mov
gs
mov
xor
les
inc
das
dec
add
and
nop
pop
pop
adcb
clc
or
pusha
push
fcmovne
or
fadds
test
inc
and
cmp
adc
icebp
or
and
jno
xchg
icebp
fld
adc
adc
addl
push
dec
ret
jp
movl
and
inc
dec
inc
addb
test
inc
pop
je
cmp
cltd
pop
cmp
into
int3
sbb
fs
push
add
pop
cmp
push
mov
sub
add
inc
in
into
mov
xor
sbb
cmp
ss
jge
add
dec
loope
in
in
adc
add
loopne
ret
inc
mov
add
add
rorl
adc
adc
and
push
push
and
mov
hlt
and
dec
pop
sub
sub
dec
and
je
mov
clc
push
add
push
push
push
push
popa
in
repnz
int
ret
aam
jo
lcall
add
xchg
mov
nop
call
sub
jg
popa
fs
jne
inc
adc
add
mov
movsl
mov
cmpsb
xchg
les
xchg
xchg
xorb
dec
push
daa
jo
jno
ficompl
mov
or
dec
inc
xor
mov
adc
test
dec
xchg
nop
push
mov
loopnew
repz
nop
inc
jmp
and
pop
sbb
sub
pop
mov
push
pop
push
sub
push
inc
or
cmp
inc
pop
cmp
movsl
das
pushf
imulb
data16
pushf
jmp
push
inc
cwtl
lcall
cmp
mov
cmp
gs
enter
sbb
mov
cld
mov
dec
fnstsw
mov
imul
xchg
or
pushf
cmp
jle
cmp
js
mov
test
xorl
pop
xchg
inc
out
loope
jbe
loopne
ret
popf
enter
adc
inc
je
cmpl
cmpsl
and
mov
inc
mov
add
adc
arpl
and
cmp
ljmp
pop
pushl
and
push
test
and
sarl
mov
pusha
xorl
sub
push
in
sbb
test
cltd
and
addr16
imul
enter
push
addr16
jo
pop
pop
xor
xchg
inc
mov
sub
jae
and
jbe
divl
cmc
cltd
xchg
push
sarl
push
mov
rorb
adc
mov
rcrb
adc
imul
orl
push
cli
pop
push
shll
lret
cmp
lock
jb
xchg
fisttpl
pusha
insb
inc
jne
sbb
jo
or
jnp
add
xor
mov
bound
push
push
cmp
and
add
loopne
cmp
fsubp
lea
inc
loop
and
mov
and
xchg
dec
adc
xor
icebp
push
loopne
jg
xor
xchg
or
scas
and
add
in
xchg
insb
fmull
mov
add
adc
and
dec
rcrl
sbb
mov
addb
jmp
les
lea
pop
ds
popa
cmc
orl
sub
cmp
pop
dec
xor
les
add
mov
jge
mov
int3
mov
jb
pop
sahf
ret
cmp
adc
loopne
nop
hlt
jae
leave
sbb
in
shlb
inc
pusha
negl
pop
dec
pop
clc
jmp
cmp
pusha
dec
inc
shlb
ljmp
add
cmp
je
fiadds
int3
pop
push
fcoml
in
mov
stos
or
scas
mov
dec
aaa
je
enter
test
gs
and
mov
add
push
ret
xchg
dec
push
adc
dec
test
dec
add
jbe
test
cmp
je
sbb
sbb
dec
adc
adc
xchg
sbb
or
dec
and
push
sbb
mov
and
jge
or
xor
loope
jg
cmp
sub
pusha
adc
mov
cmpsb
inc
nop
lret
test
pop
jl
pop
dec
pop
jne
mov
or
cmp
testl
in
mov
cmp
rcll
into
imul
nop
lea
push
dec
lahf
adc
push
pop
orl
dec
xor
push
lea
push
loopne
mov
mov
push
test
int
xor
or
and
cltd
mov
fldcw
fs
pop
xchg
movsb
inc
mov
xor
jo
or
sbb
mov
pop
adc
mov
xchg
mov
std
scas
and
stc
jle
add
cmpw
sbb
cmpb
shrl
push
add
fistpl
movsl
ss
push
pop
mov
add
shrb
cmpsb
push
je
pop
rcrb
enter
inc
cmp
mov
pusha
loopne
je
addr16
jae
xchg
pop
jge
push
push
add
in
xchg
inc
mov
loope
jb
pusha
jne
add
loope
dec
dec
push
sub
fistpl
add
jl
sub
jmp
mov
sbb
dec
jp
pushl
pop
add
pop
or
sbb
cli
jecxz
inc
and
or
sbb
cmp
adcb
add
sahf
js
add
scas
mov
lea
andl
aad
sub
mov
gs
push
icebp
aad
and
sysret
adc
mov
test
lea
push
bound
std
cmp
jne
jb
fs
push
ret
shll
ljmp
shl
dec
pop
push
pop
push
dec
xor
xor
add
mov
lock
and
leave
dec
jle
test
loope
jne
insl
pop
adc
cmp
sbb
in
sub
movsb
dec
push
sub
push
imul
icebp
jo
bound
sub
or
add
inc
mov
mov
add
or
gs
add
insl
movsl
push
mov
fimull
adc
xor
ret
mov
stos
test
mov
aad
mov
sbbl
push
test
addl
orl
addl
cmp
and
mov
rorl
mov
mov
stc
inc
lcall
mov
push
push
push
sbb
xchg
cmp
popf
add
mov
mov
jmp
test
lock
js
and
and
and
enter
and
mov
jmp
or
enter
int
stc
and
sbb
cmp
sub
push
divb
jne
cld
and
and
mov
sar
pop
sbb
push
sbb
jl
push
cmpl
dec
scas
adc
pop
je
or
cmpsl
adcl
add
mov
orb
mov
dec
jecxz
and
pop
mov
mov
mov
int
jl
pop
rcl
jne
iret
cmc
dec
push
ss
hlt
call
sbb
mov
pop
add
sbb
mov
dec
pop
jne
adc
nop
push
pop
es
inc
xchg
leave
ss
push
sub
in
orl
mov
push
and
pop
or
cld
decl
mov
lods
and
sub
cmpsb
xor
sub
call
fstpl
and
mov
sbb
in
mov
leave
aaa
pusha
loopne
idiv
es
mov
icebp
in
and
dec
jmp
mov
add
xchg
mov
cmpsb
xchg
cld
mov
sbb
js
lock
dec
adc
ss
nop
mov
stc
enter
and
adc
jle
ret
test
dec
and
sub
inc
and
jge
sbb
cmp
mov
enter
fcoml
in
add
xor
xlat
test
dec
inc
ret
sub
inc
inc
das
das
and
test
cld
nop
and
mov
in
pop
mov
jae
sub
cmp
stos
outsb
sub
mov
rclb
aaa
jg
cmp
mov
pop
jmp
adc
in
sub
pop
push
and
iret
jo
inc
jmp
adc
pop
in
mov
push
test
fucomip
inc
les
test
pop
in
adc
push
or
mov
inc
push
adc
pusha
andl
rorl
xchg
inc
add
js
dec
xchg
cwtl
xchg
xor
bnd
mov
add
dec
sbb
mov
or
mov
repnz
mov
dec
lahf
stos
pop
aaa
adc
inc
jno
lods
inc
mov
push
sbb
xor
orl
add
inc
push
mov
dec
clc
data16
pop
pop
push
dec
sub
push
or
push
and
data16
adc
outsb
xor
iret
dec
inc
inc
jmp
mov
sbb
pop
sub
and
mov
push
add
sub
inc
inc
dec
jnp
pop
in
jne
mov
dec
aaa
repz
add
push
call
sbb
and
jne
sub
xchg
sbb
loop
imul
ret
xchg
push
ret
icebp
mov
mov
and
rcrl
xor
mov
inc
fimuls
popa
pop
call
pop
pop
sub
lods
pop
movsb
xor
adc
fwait
xor
add
or
add
xor
pusha
sarl
mov
aaa
lret
in
jmp
inc
int3
into
rorb
and
inc
sbb
push
and
and
enter
or
daa
call
and
mov
adc
mov
pusha
clc
repnz
jge
pop
movsl
inc
inc
fists
mov
shl
push
notl
rcl
sbb
cmpb
pop
aas
outsl
imul
or
aas
cs
or
enter
enter
inc
aad
pop
inc
movsl
cmp
and
lahf
movsl
rolb
cmpb
mov
sbb
lods
fsts
mov
push
cmp
push
add
xor
rcll
pop
or
add
and
pop
jae
call
out
jmp
add
xor
and
icebp
lea
popa
arpl
cmpsl
cwtl
sarb
pop
pop
outsl
xor
xorl
pusha
bound
push
jne
cmp
adc
inc
das
jae
mov
adc
or
ja
das
pop
fsub
dec
xor
outsb
clc
push
xor
pop
sbb
adc
lods
lahf
mov
shll
test
lock
or
sub
rclb
sub
mov
lods
push
sub
mov
push
push
iret
ret
pop
repz
mov
pop
stos
sti
cs
lods
adc
daa
adc
adc
clc
adc
push
jne
mov
and
push
lods
mov
sbb
cmp
jmp
push
jg
lods
aaa
test
cmp
out
pop
push
subb
or
les
mov
sbb
out
adc
or
pop
xor
fcoml
fldenv
jo
mov
jle
idivl
scas
clc
xor
sbb
xor
and
sar
por
cmp
jne
xor
rorl
or
out
scas
jmp
ss
mov
test
stos
pusha
dec
or
stos
inc
cwtl
call
add
outsl
imul
xor
and
in
shll
scas
in
push
movsb
icebp
mov
test
push
jmp
sbb
fisubrl
test
in
adc
and
pop
or
rcll
xchg
adc
pop
dec
shrl
loope
xchg
divb
pop
sub
cmp
or
fnsave
cs
cld
jmp
dec
jp
fs
or
ja
adc
inc
xchg
or
pusha
rol
clc
pushf
inc
pop
roll
pop
or
pop
test
and
sbb
pushl
es
xchg
rorl
adc
lods
adc
rcll
int3
movsb
adc
dec
adc
out
dec
sub
in
mov
ret
add
inc
ret
lea
lea
and
repnz
jbe
push
in
cld
fildl
das
cmp
ja
flds
fcomp
or
nop
jge
adc
sbb
test
sbb
sbb
jae
xchg
adc
xchg
pusha
dec
insl
inc
pop
addr16
push
invd
mov
mov
ret
repnz
clc
or
dec
push
sbb
cmp
arpl
test
lcall
clc
mov
dec
or
fcoms
sbb
push
cmp
adc
and
nop
lret
or
cmp
cmp
adc
push
and
insl
cmp
sub
jmp
fsubrl
cwtl
sub
jle
mov
add
add
xchg
mov
je
inc
sarb
je
or
aad
xchg
and
sub
daa
test
xor
pop
inc
loopne
inc
idivl
add
js
jae
jb
sbb
je
push
xor
or
pop
ret
push
mov
out
shl
leave
cmp
xorl
mov
pop
pop
repnz
push
and
mov
hlt
pop
out
or
ficoml
popf
or
sbb
mov
dec
add
xor
jo
xor
mov
sub
jmp
aas
movsb
inc
add
jecxz
or
pusha
and
add
push
mov
and
pusha
cmp
push
mov
xor
adc
outsb
in
add
inc
les
lock
xor
cmp
ss
inc
les
cmp
mov
or
sub
add
cmp
mov
xchg
ret
and
mov
push
mov
jg
cwtl
add
adc
or
jo
cmp
outsl
cltd
and
dec
adc
fnsetpm(287
rcr
rclb
adc
mov
fadd
arpl
popa
aad
outsl
addr16
pop
popf
les
and
jmp
mov
adc
cmp
inc
test
int3
sbb
adc
and
and
je
jae
adc
sbb
mov
and
clc
xchg
mov
nop
out
sbbl
rcrl
sbb
imul
sub
add
pop
pop
and
sahf
mov
pop
pop
dec
xchg
lds
addr16
cmp
push
ficoms
repz
adcl
and
inc
movsb
sbb
aam
cwtl
fldt
push
lahf
mov
mov
fldcw
gs
push
lods
andl
xor
pop
mov
and
fwait
mov
and
cmp
aam
pop
es
lock
ss
pop
inc
mov
lock
jnp
dec
and
loop
xchg
cmpb
movsb
inc
adc
ret
imul
mov
push
and
loop
jns
add
adc
sub
jne
popf
cld
icebp
mov
mov
stos
in
mov
and
js
out
ficoms
sub
jnp
mov
push
jmp
mov
cld
ret
cmp
js
pusha
sub
mov
or
aas
les
clc
rcrb
sub
jmp
pusha
inc
mov
flds
and
jb
popa
test
psubusb
xor
push
ds
sbb
pop
adc
mov
sub
cwtl
movsb
fptan
ds
and
std
out
push
out
xchg
mov
and
or
xchg
push
push
xchg
ljmp
xor
insb
das
fisttpll
lret
jne
daa
push
dec
or
inc
fsts
mov
adc
test
dec
and
mov
add
add
and
add
push
fwait
aad
arpl
orl
sub
ljmp
popf
sub
mov
imul
mov
cmp
dec
loop
fcoml
jns
cmp
and
sbb
and
nop
sbb
and
or
fbld
pop
gs
pop
dec
decb
push
mov
or
mov
mov
sbb
add
adc
test
test
xchg
aam
notl
and
pop
lcall
sub
inc
aam
sbb
fsts
jae
mov
inc
inc
test
add
jno
mov
cmp
push
mov
mov
fsubl
jecxz
inc
add
ss
and
push
push
xlat
or
in
ljmp
loope
lea
adc
xor
std
push
loopne
inc
mov
andb
roll
and
add
movzwl
add
push
lock
pop
pop
sbb
pusha
pop
movsb
cmpsl
mov
aad
test
inc
sbb
sbb
xor
sub
sbb
sub
push
in
mov
lods
jns
sub
daa
test
clc
pminub
mov
adc
fcmovnb
call
jo
mov
loopne
cltd
push
pop
jb
xchg
mov
xor
in
addr16
cmpsl
nop
dec
mov
or
xor
pop
bound
add
imul
push
or
jae
lock
push
test
pusha
sub
movsl
fcompl
jbe
imul
xlat
sbb
decl
mov
nop
xor
jmp
add
fidivs
sbb
sbb
rcl
jns
adc
in
adc
or
xchg
pop
inc
push
jle
pop
inc
jp
add
in
icebp
mov
inc
loop
push
movsl
es
sub
adc
dec
popa
sbb
and
aas
pop
lcall
sub
inc
clc
inc
sub
cmpsl
push
mov
pushf
push
pop
adc
cmp
mov
mov
xchg
sbb
mov
dec
mov
pop
and
pushf
pop
add
fimuls
push
and
or
ret
jecxz
addb
arpl
adc
pop
jae
out
xchg
xor
testl
push
xchg
test
mov
cmpb
cmp
cmpb
inc
jmp
push
out
and
iret
and
in
sbb
pop
push
outsl
dec
dec
add
and
adc
and
aaa
pop
iret
nop
push
jno
add
movsb
sub
adc
adc
xchg
cli
adc
add
sub
mov
je
sub
scas
jns
das
icebp
das
sbb
xchg
sbb
pop
sbb
and
mov
push
mov
fisubs
xor
inc
sub
in
dec
dec
ds
xor
jno
fs
jecxz
mov
out
rolb
inc
outsl
push
pop
dec
cmp
pop
cmp
inc
scas
and
aaa
mov
aaa
or
rcrl
add
xchg
sub
xchg
add
xor
adc
adc
add
ljmp
roll
mov
jns
xchg
dec
dec
inc
jge
mov
push
push
dec
sbb
rolb
sbb
int
cmp
pop
dec
ss
push
ja
shl
mov
in
lock
pop
pop
int3
jmp
and
sbb
sbb
pop
test
xchg
pop
jne
mov
adc
and
push
or
ret
adcb
repnz
adc
or
adc
fsubrs
dec
inc
sbb
fwait
push
mov
add
pop
push
or
push
mov
dec
mov
loope
push
pop
mov
mov
int
clc
pop
add
das
inc
mov
sub
nop
or
jns
push
pop
mov
push
mov
mov
sarb
add
sbb
fisttps
lds
inc
cmp
pop
mov
scas
int
and
dec
pop
fs
jp
sub
and
jne
lods
jp
aas
jmp
push
imul
xor
mov
pop
fcomps
adc
mov
cmp
adc
xchg
dec
dec
mov
das
and
push
adc
adc
and
ret
pushf
or
inc
xchg
add
test
inc
or
sub
out
orl
add
mov
rclb
or
add
push
int3
push
cmp
cmp
jne
mov
icebp
push
sbb
movl
icebp
mov
add
and
or
test
ret
jmp
dec
pop
and
pop
jne
inc
pavgw
loope
mov
shlb
std
je
sbb
adc
adc
in
cwtl
cmpb
push
xorl
adc
mov
mov
add
pusha
lea
adc
adc
push
push
jl
or
fucomi
sbb
sub
sbb
pusha
sbb
lahf
and
mov
sub
inc
jmp
jecxz
sub
inc
sbb
push
sarl
sub
sub
fsubl
xor
or
leave
fisttpll
mov
cvttps2pi
mov
test
push
pop
mov
arpl
push
adc
int3
rcr
and
add
popa
sub
pop
mov
ffree
push
mov
cmp
test
xor
mov
out
aas
test
dec
int3
sub
cmc
sarl
into
push
scas
add
pusha
fdivs
xchg
mov
and
enter
xchg
adcb
mov
xor
arpl
stos
aad
or
mov
add
push
jle
xchg
das
fcomps
sbb
adc
cs
pop
shl
sub
add
jg
push
stos
and
mov
pop
pop
out
add
es
mov
in
adc
or
in
sub
pmulhw
sbb
push
je
or
mul
push
pop
mov
popa
pop
sarb
ret
bound
inc
add
xorb
mov
jmp
sarb
or
push
mov
sub
xchg
or
or
ret
addr16
test
push
pop
push
push
xchg
add
mov
mov
pop
pop
sub
push
push
fabs
je
pop
out
fnstcw
push
xchg
sahf
inc
sbbb
adc
outsb
xchg
test
repnz
jcxz
mov
loop
scas
push
cmpsb
es
mov
or
cmp
adc
mov
mov
push
std
jb
mov
inc
cli
ret
aas
in
sub
cmp
setp
lea
mov
je
mov
xor
pop
jmp
sbb
adc
add
mov
call
roll
xchg
adc
loop
aaa
fldcw
jecxz
xor
popa
add
sub
insl
jne
xor
sbb
enter
loope
in
pop
xor
iret
push
add
adc
sub
lea
push
mov
inc
test
adcl
adc
insb
xchg
and
push
add
add
cs
hlt
or
push
pop
dec
add
mov
jno
loope
in
push
mov
sub
pop
nop
jo
lods
xor
mov
mov
cmpsb
bound
ret
adc
push
mov
cmpsl
pop
or
subl
mov
mov
inc
fwait
mov
xchg
sub
fisubs
movsl
frstor
lret
and
repz
pop
subl
inc
pop
adc
aad
or
add
push
js
pusha
test
xor
xor
push
cmp
xchg
xchg
mov
gs
loop
mov
pop
xor
add
mov
pop
arpl
jae
mov
push
add
icebp
hlt
rol
call
out
inc
adc
dec
push
sahf
faddp
add
pop
in
adc
jne
shll
or
adc
repnz
clc
mov
fwait
push
loope
pop
imul
lcall
push
cmpb
mov
adc
xchg
aam
bnd
shlb
inc
mov
test
dec
incb
movl
inc
adc
adc
or
add
aam
stos
inc
adc
fldz
and
add
mov
lcall
add
sub
pop
xor
add
imul
pop
movsb
push
cmp
xchg
insl
xchg
idivb
xchg
inc
test
or
dec
dec
push
lea
push
mov
dec
adc
mov
addr16
inc
sub
mov
push
mov
xor
mov
loop
jnp
nop
pusha
or
mov
rorb
fisttpll
mov
mov
lret
sub
mov
or
lea
fsubs
adc
push
movsl
mov
sbb
call
adc
ret
pop
jecxz
pop
mov
int3
sbb
jge
bound
loopne
mov
testb
faddl
cmpl
push
sub
fstps
and
adc
cmp
push
cmp
jle
clc
stc
out
cmp
jp
push
cmp
cmp
inc
add
clc
divl
add
inc
jmp
into
push
data16
fadd
sub
mov
repnz
mov
bound
inc
or
fs
pop
divl
jne
mov
lock
inc
mov
dec
mov
lock
adc
or
mov
sub
dec
mov
jnp
inc
xchg
fcmovb
stos
orb
add
fnstcw
push
sbb
jbe
push
hlt
mov
cltd
push
push
repz
mov
popa
jmp
push
data16
xchg
mov
xor
xorl
shll
dec
cli
fwait
outsl
mov
add
sbb
pushf
push
dec
sahf
and
adc
xchg
sub
sets
and
daa
int
cmp
sbb
push
sbb
call
ds
out
adcb
mov
xchg
lret
add
or
enter
iret
xor
xchg
xor
and
pop
aas
or
mov
ret
aaa
shll
xlat
les
cs
add
insl
or
xchg
inc
jb
or
or
mov
insl
add
xchg
cmp
add
push
rol
add
xchg
insl
or
add
pushf
and
pop
lcall
mov
jl
pop
adc
adc
fwait
add
sub
sbb
push
or
xor
adc
out
push
mov
in
mov
push
in
adc
add
or
sbb
mov
pusha
cmpsb
jno
aas
and
xchg
pusha
shr
or
add
mov
leave
xchg
pop
or
add
xor
xchg
jns
push
inc
adc
mov
cmpsl
dec
mov
leave
mov
sub
lock
sbb
push
and
sbb
fdivrs
and
sbb
sub
sub
sbbl
test
push
inc
ss
les
stc
xchg
or
in
pop
dec
mov
or
adc
outsb
and
leave
adc
push
fstl
cs
push
pop
adcl
ljmp
movsb
test
aad
xor
adc
sbb
pop
mov
cmpsl
std
jo
push
cmp
stos
test
or
xchg
repz
add
cmpsl
dec
aas
push
and
inc
push
cmp
nop
addb
add
adc
jmp
mov
dec
lea
daa
adc
orb
jb
int3
aas
pop
add
jmp
push
sbb
inc
add
adc
lea
xchg
mov
loopne
lock
sub
mov
add
in
lods
inc
daa
shr
push
dec
jecxz
fwait
and
push
jge
lret
dec
mov
pusha
or
push
jo
pop
or
stos
fwait
loope
sbb
and
mov
add
rclb
dec
jle
inc
push
mov
push
add
sub
jmp
out
adc
nop
inc
jo
inc
add
xchg
icebp
enter
or
add
aaa
je
adc
or
sbb
and
add
cmp
cli
xor
push
pop
leave
cmpsl
inc
fs
cltd
test
lock
aas
mov
sbb
loopne
inc
cmpsl
cmpsl
in
add
sbbl
xchg
or
add
shrb
add
mov
lock
cmc
or
add
xchg
sbb
or
fiadds
or
mov
in
adc
pop
aad
nop
icebp
lods
jne
xor
ret
add
inc
jl
rclb
lea
adc
outsl
test
shl
jle
add
sbb
sub
push
add
sbb
or
cmpsl
in
and
adc
sbb
jbe
and
push
nop
inc
sar
jb
test
inc
pop
and
outsl
insl
orb
jae
adc
stos
imul
or
push
push
lret
xchg
adc
pop
xchg
dec
add
sbb
mov
insb
addr16
popa
mov
cmp
jne
stc
push
aad
je
mov
ret
jno
insb
xchg
popa
xchg
mov
mov
fsts
add
xlat
in
pop
fldt
cltd
orb
lock
cmpsb
fildl
cwtl
lock
cmp
xor
add
sbb
jne
dec
xorl
adc
jg
stc
add
xor
add
jl
mov
cmpsb
add
test
leave
test
fdivrs
adc
sbbl
and
test
pop
pusha
xor
pop
push
mov
push
and
pop
pop
and
dec
insl
xchg
add
and
adc
adc
pop
shlb
mov
lock
xchg
mov
mov
insl
add
jo
ret
mov
xor
jecxz
add
addb
adc
sub
xchg
xchg
testl
sub
cltd
mov
jle
inc
pop
mov
mov
inc
inc
push
jbe
add
push
xor
jbe
aaa
je
mov
out
mov
shl
mov
mov
push
push
sub
sub
fisttpll
xchg
mov
pop
call
fnsave
and
lcall
test
je
sbb
nop
mov
xchg
lock
pmuludq
push
sbb
dec
fimuls
mov
and
and
test
fstpl
pop
jns
lods
mov
jo
pop
or
adc
mov
fsub
pop
fsubrp
arpl
pop
or
dec
or
sub
pop
mov
mov
inc
aaa
dec
inc
fdivrl
enter
fdiv
scas
mov
inc
out
mov
inc
jl
gs
dec
rolb
adc
sub
shll
loopne
mov
xchg
dec
xchg
jns
stc
addb
jge
sub
add
add
fidivs
out
shrb
adc
sti
pop
xor
icebp
and
push
aad
xchg
enter
fiadds
fs
or
sub
andl
ret
ja
loopne
mov
aaa
dec
push
fiadds
push
jo
and
push
jge
xor
dec
shlb
sbb
cmpsl
setbe
mov
clc
test
insb
mov
xor
mov
ss
call
sub
adc
xor
clc
add
push
xchg
scas
push
dec
jg
mov
lock
stos
xor
shld
add
call
jb
ja
lea
fyl2x
cmp
push
push
and
popa
xor
or
or
por
or
push
mov
push
adc
push
and
cmp
or
or
jo
mov
cli
adc
push
mov
insb
test
pop
pop
adcb
add
push
push
mov
lahf
insb
dec
inc
es
push
mov
loopne
push
ja
push
sti
adc
sti
leave
push
and
ja
push
adc
fwait
call
stos
xor
mov
jle
mov
pop
sub
dec
inc
cmpw
jne
sarb
mov
inc
cld
cmp
out
cmp
push
jge
mov
mov
lea
cmp
or
sbb
out
data16
mov
insb
dec
push
xchg
sbb
and
aad
dec
add
jo
ret
movsb
push
movsl
and
push
nop
add
add
or
adcb
push
fdivl
pop
mov
adc
in
icebp
sbb
sbb
or
and
sbb
adc
adc
jle
push
cmp
mov
or
lock
mov
jnp
push
fwait
cli
push
test
inc
lods
dec
add
dec
pusha
pop
xchg
add
mov
push
pop
or
movsl
dec
inc
inc
add
ja
or
push
mov
data16
shll
mov
pop
movsl
push
inc
pop
sub
jbe
adc
cmc
sub
insl
imul
stc
adc
std
test
xlat
push
ja
fdivrs
lock
xor
lret
or
addr16
out
loopne
out
push
mov
xchg
add
arpl
ss
insl
and
dec
xchg
xchg
int3
xor
gs
mov
or
out
or
pop
xchg
and
push
mov
pop
push
sti
pop
test
dec
roll
movsl
sbb
cmp
aas
xchg
and
add
loopne
cwtl
push
xchg
sti
xchg
xchg
push
pop
je
jmp
jno
stc
ficomps
pop
add
mov
push
ss
push
mov
pop
cmp
inc
pop
lods
dec
fbld
or
or
rcll
pop
in
cwtl
jmp
push
test
push
inc
popa
call
pop
movsl
inc
xor
push
or
add
sbb
or
add
filds
xchg
pop
or
push
adc
cs
pop
add
ljmp
inc
std
lock
or
or
cmp
mov
push
enter
and
sbb
add
push
cltd
je
inc
popa
jge
fldlg2
lcall
fildl
inc
push
or
outsb
push
push
sbb
or
mov
jo
dec
adc
pop
mov
mov
adc
sub
inc
dec
add
dec
loopne
jbe
les
je
pop
jnp
dec
add
mov
cmp
or
in
adc
test
ja
cmpsb
mov
cmp
xchg
pop
xchg
dec
ja
adc
inc
insb
jno
jge
xlat
xor
and
and
xor
pop
add
mov
fs
or
pusha
push
fwait
cmpsb
std
fisttpl
ss
je
add
sbb
dec
ja
popa
ljmp
jmp
or
xchg
add
xchg
jmp
or
rclb
rclb
subb
dec
push
lods
jmp
test
out
sub
jge
or
jmp
or
jmp
ja
out
out
outsl
cld
jmp
or
jmp
aaa
nop
jmp
mov
hlt
lea
mov
lret
test
push
push
cmp
pop
jmp
and
xchg
dec
insb
mov
jb
mov
dec
add
cmp
nop
sub
nop
les
inc
aam
pop
push
push
rcrb
hlt
dec
sbb
and
adc
enter
mov
push
cmp
xor
cmp
je
mov
sbb
nop
shl
dec
adc
sbb
enter
mov
and
cmp
push
in
cs
lahf
push
js
adc
sbb
jns
or
push
daa
push
xor
inc
dec
jns
out
pop
arpl
and
xchg
lahf
test
sahf
fucom
icebp
sti
push
add
cmp
and
iret
repz
push
pop
imul
xchg
iret
repz
ret
int
jmp
pop
dec
xchg
loope
es
nop
jp
insb
stos
dec
jne
lret
push
cmp
sub
repz
ret
les
mov
adc
adc
adc
push
movsb
xor
adc
jo
xchg
mov
divl
int
shll
add
and
xorl
cmp
mov
and
fwait
jmp
imul
jo
pusha
lods
xor
roll
lock
call
inc
mov
push
jg
mov
push
lahf
jmp
add
out
fcompl
cmp
cmp
sbb
nop
faddl
aam
mov
fisttpll
mov
fsubl
mov
mov
pushf
inc
push
sub
sbb
and
mov
nop
mov
dec
sub
xchg
and
push
dec
test
xchg
cs
or
and
add
xchg
fs
testl
cmpsl
std
int3
mov
xor
push
cmpb
jge
ja
cld
pop
push
cmp
and
lock
jge
push
push
add
cmpsl
push
fiaddl
pop
and
xchg
lahf
aam
pop
imul
dec
fdivrs
jg
or
add
ja
or
rclb
push
sub
mov
mov
sub
insb
sbb
gs
push
xchg
xchg
dec
xchg
enter
or
sbb
ret
test
fadds
shrb
enter
sub
adc
lcall
lds
and
decl
sub
pop
lret
sbb
popf
and
jmp
sti
add
adc
or
mov
xlat
ficoml
pop
jp
pop
lret
test
fmuls
lahf
and
or
daa
add
xor
mov
movsl
rcrl
insb
jge
arpl
movhps
push
enter
pop
sub
push
or
rol
xchg
mov
mov
mov
pop
sbb
les
cmpsb
mov
cmp
cmp
test
test
or
mov
fildl
mov
dec
mov
cmc
aaa
mov
dec
add
sub
lea
pop
and
push
mov
mov
sarb
mov
nop
push
xor
push
xor
pop
and
in
mov
movb
rcr
es
mov
and
fdivp
dec
lods
push
das
mov
popa
inc
fisubrl
xor
lcall
xorb
inc
mov
xor
imul
jle
dec
sbb
icebp
xor
xlat
out
ficompl
mov
xchg
xor
xor
xor
das
xchg
xor
xor
jo,pn
xchg
xor
xor
sub
sub
sub
push
int3
lcall
ss
mov
mov
jmp
int3
jl
mov
movsb
ljmp
mov
and
add
pop
xchg
mov
insl
xlat
movsb
jno
pop
rolb
test
sbb
das
mov
adc
xchg
pusha
negl
xchg
inc
mov
rclb
and
stos
push
nop
inc
repz
test
jae
pop
or
inc
mov
imul
sbb
fistps
jae
inc
add
int3
pop
nop
dec
push
mov
inc
mov
mov
and
xchg
jns
adc
and
sub
sub
popf
pushf
pop
nopl
rclb
mov
repnz
adcl
push
sbb
jg
subl
pop
mov
push
push
mov
shll
inc
cmp
adc
ret
js
push
fnstcw
mov
cltd
rcr
cli
xchg
or
pop
push
mov
dec
cwtl
xchg
adcl
popf
mov
cmpsb
test
cmp
roll
mov
repnz
xchg
mov
sub
cmp
pop
call
outsb
inc
mov
aas
pop
adc
mov
xor
inc
push
aas
mov
mov
and
mov
cltd
cmp
in
aaa
and
and
and
nop
mov
inc
mov
sahf
lret
popa
loopne
in
push
inc
lods
js
mov
sbb
and
cmc
sub
inc
push
dec
xlat
popa
pusha
in
ret
cmpl
pop
lea
sbb
sub
cmpsl
jnp
jno
lcall
rolb
dec
pop
lcall
pop
inc
mov
nop
mov
sbbb
sub
insb
pushl
jmp
push
sub
pusha
xor
popa
aaa
and
clc
and
fsubrs
adc
and
add
mov
imul
fwait
adc
mov
xchg
xchg
cli
push
push
sub
jns
std
xchg
popa
insb
add
pop
push
mov
cmp
push
xchg
mov
lret
add
es
sahf
ds
push
pushf
add
dec
pop
add
xchg
adc
xor
inc
sub
repnz
and
mov
sbbl
nop
rclb
jecxz
push
arpl
adc
mov
mov
mov
imul
and
pushf
add
xchg
cmp
movsl
sbb
pop
cmp
xchg
daa
ror
ret
fistl
sub
js
scas
ret
cltd
adc
mov
pop
mov
in
push
cwtl
iret
and
and
inc
mov
push
das
push
push
adc
xor
sti
mov
popa
push
add
adc
andl
ret
enter
adc
xchg
cwtl
dec
int3
push
lcall
xchg
nop
mov
insl
xchg
sbb
fcoms
je
push
imul
mov
movsl
dec
dec
rorl
dec
jae
sbbb
jmp
dec
xor
inc
lcall
cmp
lock
sub
dec
and
jno
test
mov
leave
rcrb
fildll
add
shlb
notl
aam
sbb
stos
cltd
pop
xchg
mov
daa
xlat
rcrb
adc
push
cmp
pop
test
inc
adc
orl
movb
mov
or
or
or
or
cltd
nop
popw
pusha
push
pop
xchg
cld
and
pop
mov
add
xor
or
call
nop
xor
pushl
sub
mov
or
das
or
push
add
movsl
dec
orb
cwtl
mov
xor
push
dec
sub
mov
enter
add
mov
push
movsl
movsl
out
ss
add
mov
or
inc
push
cltd
add
je
sbb
faddl
add
test
mov
movsl
and
cmp
jnp
add
call
adc
pop
rcll
jo
jbe
sbb
sbb
pop
fcoms
lcall
or
stos
or
inc
jecxz
add
sbb
xlat
stos
xorb
mov
loope
lods
rcl
or
xchg
jo
lar
adc
arpl
or
adc
adc
rol
inc
mov
or
xchg
in
popa
popa
pop
fisubrs
adc
jbe
movsl
jge
sbb
insl
sub
cs
pushl
and
mov
cli
dec
pushf
jne
xchg
movsb
dec
stc
clc
lcall
adc
or
pop
sub
mov
pusha
sbb
scas
sbb
sbb
rolb
add
mov
mov
push
cmp
ficoml
push
mov
and
adcl
call
mov
xchg
and
push
and
pushf
pusha
repnz
and
or
xor
pop
xchg
cltd
push
pushf
xor
add
daa
pop
inc
mov
jl
addr16
xchg
cmp
stos
enter
add
sub
cmpsb
je
ret
cmp
add
push
cwtl
in
pop
outsl
push
cmp
sub
jo
pop
enter
add
mov
sub
xchg
pop
pop
push
movsb
repnz
mov
sbbl
and
and
and
jne
dec
cmpsb
jno
and
out
int3
xchg
pop
jb
pop
push
sbb
and
sbb
pop
jb
sbb
rolb
push
inc
xor
adc
xor
adc
push
cmp
adc
loopne,pn
aas
das
jo
pop
add
repz
and
or
fldcw
push
dec
out
sbb
aam
push
mov
and
mov
mov
and
mov
in
add
roll
insb
insl
lods
xchg
addr16
add
push
mov
inc
sub
xor
cmp
mov
cmp
mov
sti
push
jmp
push
ret
adc
mov
pop
inc
test
dec
inc
mov
mov
addb
xor
or
in
mov
nop
ljmp
dec
jo
movsb
and
dec
mov
lea
out
out
test
cmp
lds
push
cli
sub
testb
and
cs
push
push
push
jmp
jp
and
and
cmc
add
push
mov
fisubrl
loopne
sub
and
jmp
leave
adc
xchg
xor
jl
mov
cltd
cmp
dec
sub
test
inc
pushf
ret
add
cmp
mov
sub
inc
je
push
push
out
and
jo
sbb
pop
movsl
movsb
and
lret
sub
push
mov
jb
mov
jg
xchg
mov
mov
jbe
or
push
addl
sub
dec
loopne
ljmp
inc
js
hlt
xor
out
movsb
outsb
into
cmp
ficoml
cmp
jbe
mov
mov
cmp
jne
inc
add
fs
sarl
cli
das
addb
cmp
inc
push
push
hlt
ljmp
or
or
iret
jne
pop
mov
inc
adc
enter
jae
add
add
cmp
stos
or
iret
je
mov
dec
sarl
mov
jmp
shrl
push
mov
mov
stc
inc
loopne
inc
xor
xchg
or
cmpps
rcrl
add
jg
movsl
sbbb
popa
jae
testl
rcr
rcrl
aad
inc
adc
lods
dec
or
rcl
add
insb
mov
imul
jb
or
dec
mov
test
and
mov
xchg
adc
rorl
mov
ret
sbb
cmp
pushl
mov
jb
xchg
push
rorl
sbb
add
pusha
adc
push
cmc
je
add
add
cmp
in
dec
ds
dec
pusha
adc
add
aas
or
xchg
getsec
mov
ds
jl
fmull
jg
je
cmp
or
and
mov
movb
stos
test
and
ljmp
push
add
shrl
pop
dec
add
leave
jne
pop
add
int3
dec
cld
movsl
nop
enter
adc
adc
pop
adc
bound
bound
pop
test
mov
add
or
sbb
cmp
dec
sub
mov
out
fs
inc
daa
push
mov
fs
inc
push
push
testl
inc
jnp
sub
dec
iret
adc
push
mov
add
test
or
mov
or
sti
jb
cmpsb
mov
ja
fldl
xor
mov
rorb
add
push
ret
xor
sti
pop
ret
adc
es
dec
and
movsb
popa
jg
add
push
push
pop
gs
cmc
add
jmp
imul
or
mov
mov
loop
mov
adc
or
inc
cmp
dec
ja
sub
cmpb
fs
ja
sub
push
add
fsubs
or
imul
add
add
mov
add
in
mov
scas
adc
neg
xchg
sub
mov
test
pop
or
rorl
dec
xchg
sub
pop
dec
sub
dec
cwtl
add
inc
and
scas
and
xchg
sbb
outsl
adc
pusha
mov
xor
fldcw
or
push
sbb
leave
mov
loopne
sbb
push
mov
andl
imul
pop
sbb
aam
dec
add
jae
bound
cmp
xorl
pop
xor
adc
sbb
iret
or
add
incb
dec
xor
insl
mov
pop
mov
mov
jne
popa
add
or
es
or
add
or
mov
sbb
or
fsubs
adc
mov
mov
test
xchg
in
call
sbb
aam
call
popa
into
rolb
rclb
mov
jle
xor
repz
xor
filds
fistps
jnp
rolb
push
cmp
add
or
sti
dec
push
inc
or
xchg
adc
rolb
jnp
dec
in
cmp
hlt
push
inc
sbb
dec
ret
adc
or
pop
imul
pop
jne
call
mov
mov
or
or
xor
jmp
lock
add
pop
nop
and
inc
int3
ret
and
or
ret
test
adcl
jns
lea
inc
xchg
iret
sub
add
sub
add
js
shlb
imull
or
xchg
sbb
xor
fdivrl
int3
and
jne
pusha
inc
test
inc
jb
imul
sub
xorl
jp
mov
test
adc
cmpsl
je
stos
mov
test
lock
sub
adc
pop
cmp
and
mov
pop
test
push
sub
inc
sbb
or
arpl
and
je
push
les
push
les
iret
ljmp
call
adc
shl
les
pop
in
mov
jnp
test
push
test
or
xchg
pop
add
scas
test
shr
jecxz
mov
jge
ret
sbb
push
xchg
cmp
or
mov
xor
jle
adc
in
in
inc
sub
repz
sub
cmp
mov
xor
jne
je
adc
test
call
in
mov
sarb
pop
fwait
pop
hlt
add
sub
nop
mov
int3
push
or
add
shlb
mov
les
popf
push
nop
cs
cmp
adcl
nop
rolb
dec
les
enter
cmpsb
or
fistpl
adc
push
lods
fsubl
ljmp
test
mov
mov
shrb
push
orb
xchg
add
adc
sbb
inc
xlat
and
call
pop
dec
into
loopne
jbe
call
rdtsc
xchg
and
sbb
imul
mov
or
mov
add
lods
test
insl
leave
aad
or
scas
jb
clc
inc
das
je
jge
jne
fs
lea
pop
inc
sbb
and
ret
das
mov
push
sahf
fsubr
imul
in
cmp
mov
cmp
call
or
loope
pushf
xchg
loope
movsl
jno
ljmp
inc
sbb
mov
enter
push
add
or
bound
fcmovne
xchg
cmpsb
shll
or
inc
rcl
mov
push
sub
pop
sub
add
jno
and
cmp
adc
and
push
sbb
or
popf
mov
es
jne
bound
xchg
aas
inc
add
pop
add
adc
or
cli
mov
enter
jge
push
cmp
dec
or
and
cmp
jle
test
adc
mov
add
les
fldl
mov
mov
aaa
scas
xchg
jg
cmp
push
es
cmp
mov
xor
mov
ret
orb
pop
out
jl
jle
pop
ror
xchg
pop
xchg
pop
ret
ret
pop
pop
test
push
jle
pop
movsl
xchg
push
push
push
mov
enter
call
fldl
hlt
or
inc
sbb
inc
data16
cmp
popf
filds
adc
jne
daa
bnd
adc
js
lahf
out
jne
or
jne
or
push
mov
or
int
js
and
pop
lds
ret
pop
lea
cmp
inc
sbb
ds
cmp
icebp
out
movsb
rolb
sub
push
jl
mov
lea
repnz
cli
pop
hlt
lea
sti
lea
mov
sbb
mov
mov
add
cmpb
test
xchg
loope
sub
sub
punpckhbw
and
shll
jo
mov
xlat
and
push
into
or
cmc
int3
roll
mov
lea
sbb
scas
lods
adc
jmp
fnstenv
clc
adc
ds
cmc
jle
popf
or
jne
fstl
dec
rcl
add
loopne
rol
adc
test
lea
jb
adc
mov
add
push
jl
cmp
add
cmpsl
dec
xor
testl
loope
cmp
inc
loopne
mov
pushf
lahf
sbb
xchg
add
addr16
insl
mov
xor
adc
and
orl
incl
pusha
mov
cwtl
or
test
mov
and
int
fs
xlat
or
xor
jne
ror
xor
jnp
nop
lods
and
enter
fwait
and
pushl
filds
mov
mov
xor
jle
fimuls
push
test
and
subb
mov
in
mov
cwtl
shlb
or
or
mov
rorb
int3
loopne
mov
inc
or
lds
icebp
or
mov
testb
pop
mov
mov
and
cltd
hlt
add
mov
and
adc
jae
addr16
mull
andb
shlb
mov
pop
xor
adc
nop
mov
dec
adc
push
mov
loopne
add
pop
imul
push
and
aas
lea
mov
and
adc
lea
cmp
scas
and
sbb
bound
sbb
mov
jnp
cs
sub
imul
mov
inc
or
nop
ja
fwait
sub
xlat
lds
xchg
daa
test
and
add
dec
xor
daa
or
pop
aad
pop
clc
inc
inc
pop
mov
xorl
out
movsl
mov
sbb
loope
ficomps
das
imul
and
xor
adc
js
jle
xor
cli
cmp
mov
mov
mov
pop
adc
adc
mov
adc
adc
in
cmp
adc
cmp
in
lds
sub
test
pop
enter
pop
xor
push
sbb
sbb
enter
adc
pop
repnz
dec
xor
push
or
lcall
adcl
loop
mov
mov
xchg
inc
and
fnsave
push
daa
add
sbb
shl
bound
in
xor
add
push
lea
pop
ss
icebp
add
rcll
mov
push
add
sub
cmp
sub
loop
or
bound
je
insb
and
rcrl
or
sbb
push
pop
js
push
out
xchg
aaa
mov
test
xchg
pop
add
scas
ret
and
push
imul
js
xor
lock
adc
and
js
scas
push
loop
xchg
fnstenv
je
push
xchg
pop
lea
or
xchg
inc
sbb
fcoml
imull
xchg
xchg
sbb
xor
pusha
xor
xor
dec
loope
jne
sbb
adc
out
pop
test
leave
mov
add
and
lret
adcb
int
mov
shlb
ljmp
lods
push
hlt
dec
xchg
es
mov
les
popa
fildl
call
xchg
push
xchg
int3
pop
addr16
movsl
jne
jno
in
call
cwtl
add
adc
cmp
int
adc
cmp
enter
test
loopne
add
int
cmpsl
lea
jge
jecxz
add
pop
push
lock
fmull
inc
imul
lcall
jbe
and
adc
jp
loopne
je
repz
sub
or
cmpsb
dec
mov
fiaddl
call
jl
xchg
adc
cmc
fwait
push
jo
pop
pop
pcmpeqd
or
bnd
ja
xorl
imul
movl
test
aaa
push
sbb
xchg
mov
fs
aaa
sbb
cs
fcoml
xor
pop
or
jne
pop
xor
setge
add
es
jne
sub
or
cmpsl
fwait
test
ljmp
xor
test
and
sbb
or
adc
inc
je
fdivrl
push
xor
movzbl
arpl
adc
mov
push
xchg
in
dec
ret
mov
orb
adc
jmp
fldenv
imul
sub
jmp
jmp
jl
nop
mov
clc
dec
lcall
clc
adc
push
dec
pop
inc
mov
je
adc
stos
cmp
mov
inc
or
shlb
or
aaa
jns
and
out
les
or
aaa
jo
and
add
pop
enter
cmpsb
xchg
push
inc
xchg
sahf
lods
add
into
in
pop
jb
xchg
lea
mov
dec
cmpsb
stos
pop
lds
pop
sbb
sbb
call
inc
mov
out
je
mov
push
call
cmpsb
fisubrl
or
movl
lret
adc
jg
mov
movsb
dec
addb
movsb
out
add
xor
aad
repnz
popl
in
insl
sbb
ficompl
ret
add
sbb
xor
je
or
add
fldl
leave
push
stc
mov
cmpsb
popf
test
xor
xor
or
or
imul
or
lret
lea
addr16
add
pop
imul
mov
movsb
cs
jns
sbb
fsubs
and
mov
sub
orl
push
add
xchg
sub
add
mov
push
inc
pop
push
aas
xchg
stos
adc
adcb
cmc
mov
in
add
test
lock
xchg
aam
fistps
popa
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jb
rolb
sbb
test
and
sete
cmpsb
mov
jle
sahf
sub
cmpb
push
add
pop
cmp
jne
jae
movsbl
sbb
inc
lcall
sbb
or
dec
call
cmp
push
ds
jmp
inc
lcall
enter
ret
incl
mov
add
or
jecxz
or
add
inc
cmp
mov
jge
data16
and
lcall
ret
add
into
scas
push
stos
les
stos
subb
pop
ss
cmp
jecxz
sbb
push
jg
addr16
jne
enter
adc
or
or
fs
pop
pop
sahf
adc
popa
inc
rorb
ficompl
push
sbb
pop
cwtl
fidivrl
stc
or
test
xlat
sbb
test
shld
lea
inc
adc
roll
pop
xchg
mov
arpl
cli
aaa
push
cmp
jl
xchg
jle
insb
dec
popa
mov
ss
test
jo
js
inc
mov
add
dec
jne
push
cltd
in
and
arpl
add
lods
rolb
out
xor
sbb
add
aaa
lahf
push
ret
or
pop
or
jl
adc
or
and
inc
pop
pop
dec
daa
mov
loope
es
cmp
jnp
ficompl
ficompl
mov
push
push
pop
cmpsl
loopne
add
mov
in
add
add
jp
sub
sbb
lds
adc
or
cltd
jns
mov
ror
cmpsb
sbb
fcmovnb
pop
into
xor
repnz
sub
xchg
in
mov
or
add
nop
pop
push
push
je
add
jge
push
cmp
imul
jmp
ret
cltd
and
mov
or
cld
dec
push
push
fsubl
push
out
fcomps
in
cmp
outsb
pop
pop
rorb
add
pop
jb
jmp
push
sbb
push
dec
dec
push
add
stc
jbe
cmp
pop
jg
add
pop
xor
add
into
andl
dec
mov
in
sbbl
fcoml
mov
arpl
rol
or
js
idivb
popf
dec
sbb
xor
push
jne
loop
pop
call
in
push
popa
add
jb
cwtl
lahf
test
insb
xchg
pop
adc
dec
pop
sar
push
pop
xchg
mov
and
and
or
rcrl
jl
dec
bnd
push
pushl
sbb
inc
dec
faddl
push
add
test
sarb
cli
adc
fbstp
popf
in
sbb
jbe
pop
xchg
andl
adc
pushf
cli
aad
xchg
push
inc
popf
fstpl
daa
loope
das
push
rorb
imul
rolb
les
add
lods
mov
jmp
jecxz
xchg
and
jmp
add
int3
add
aam
aad
inc
rorb
push
push
daa
dec
add
or
adc
rcrb
mov
lret
xchg
jl
imul
xchg
aam
imul
push
jl
mov
xor
and
push
pop
aam
inc
jnp
stos
xor
mov
xorb
push
xchg
cmpl
jne
rol
scas
cwtl
or
aaa
mov
scas
and
adc
jo
push
adc
cmp
xor
xchg
xchg
movsb
sbb
cmp
int3
and
mov
les
roll
cmp
lcall
adc
mov
loopne,pn
and
test
cmpsb
je
dec
or
xchg
lods
fcomps
adc
cmpsl
call
out
das
mov
movsl
aad
lds
pusha
stos
and
and
sarl
add
ss
mov
inc
xchg
in
or
xchg
aam
and
or
add
adc
jnp
jge
jo
and
dec
leave
sub
cmc
stos
bound
push
jno
or
cwtl
loopne
dec
loopne
inc
xchg
orl
in
push
mov
sbb
je
sbb
daa
movsbl
shl
call
or
decl
ret
jmp
mov
out
test
pop
cli
pop
push
sbb
sbb
and
push
lret
movb
in
cmpl
movsb
or
rolb
shl
inc
sub
cmp
cmovg
shlb
cmp
add
or
cmp
jmp
dec
push
roll
sahf
in
lods
xchg
mov
cmc
sub
inc
pop
xor
mov
mov
loope
inc
aas
cld
les
pop
or
pop
xchg
xor
iret
and
lods
sbb
arpl
pusha
xor
mov
es
add
call
js
lahf
mov
sub
pusha
inc
popa
inc
cmpl
hlt
push
mov
pop
std
imul
add
out
aad
fwait
pushl
movswl
test
mov
mov
clc
pop
mov
iret
mov
sub
push
mov
push
pop
test
pop
les
inc
cmp
xor
mov
mov
dec
mov
mov
jg
push
mov
add
mov
add
movzbl
mov
roll
sbb
js
jl
dec
jge
cli
insb
clc
addl
pusha
ljmp
iret
push
std
scas
mov
incb
mov
add
out
pop
or
mov
nop
bound
nop
add
or
jmp
pushl
xor
mov
inc
call
jne
pop
mov
icebp
or
lea
xchg
ficoml
jb
lea
aam
in
dec
xchg
rol
pop
adc
mov
shlb
pop
add
fimull
xor
push
mov
add
fs
js
cltd
movsb
bnd
or
in
fs
and
or
mov
adc
sub
ds
fucom
nop
pop
or
testb
fsubl
sahf
mov
cmp
push
enter
das
and
fbstp
lahf
repz
lahf
lret
push
scas
and
push
xlat
mov
and
fs
imul
mov
fnstsw
test
js
xor
and
pop
mov
jae
sub
inc
pop
and
adc
add
cmp
push
mov
and
mov
ljmp
push
or
jl
imul
mov
movsl
das
mov
mov
push
jns
add
xchg
mov
add
pusha
and
test
jb
sbb
rcll
mov
stc
sub
loopne
dec
pusha
ss
lea
cmp
jbe
cmp
jbe
mov
aad
lret
add
enter
ret
mov
rep
and
insl
mov
sub
cmovle
sbb
adc
add
or
ficompl
test
aam
orl
mov
out
mov
jne
push
fldcw
mov
push
cmpsb
sahf
mov
push
cmp
insb
jmp
loop
std
mov
mov
jmp
addr16
and
pop
ret
and
enter
dec
sbb
mov
jmp
mov
test
cli
sub
jae
push
aad
mov
call
bound
cmp
cmpsl
js
sti
lea
ss
add
xchg
push
push
xchg
xor
verr
fwait
add
movsl
loope
gs
push
mov
imul
sbb
in
mov
into
pop
and
int
mov
xchg
lods
test
lds
sbb
cmc
je
aam
mov
clc
cmpb
ret
aas
jb
movsl
sub
pushf
jmp
cmp
cmpsb
call
xor
sbb
repnz
cmpsb
sbb
adc
adc
scas
push
xchg
aam
cmp
add
mov
jp
mov
adc
push
loopne
mov
cmc
icebp
sub
enter
mov
outsl
pop
and
mov
pop
shrl
test
jp
push
leave
push
out
rclb
xor
fidivrl
movl
or
jle
stos
or
pop
xor
xor
adc
ss
leave
and
push
mov
push
std
adc
cmp
xchg
jo
aam
enter
ss
ficoml
loopne
mov
nop
push
int3
dec
sti
dec
stos
xchg
dec
lcall
insb
add
sbb
test
xlat
push
jle
add
sbb
or
scas
add
push
adc
sbb
inc
lret
adc
add
dec
arpl
fdivr
add
xchg
xchg
xor
xor
mov
or
lea
mov
je
lret
pop
call
les
fistpll
mov
cltd
les
cld
sbb
maxps
xchg
add
testl
cmpl
hlt
test
cld
adc
dec
fwait
inc
ss
ret
movl
aas
pushf
pop
or
jbe
fs
cmp
test
fcompl
js
dec
or
fsubrl
push
out
fdivl
adc
inc
add
or
push
insb
or
sub
add
testb
xor
mov
andb
jno
loope
pop
ds
je
cs
and
and
xchg
add
pop
je
rcl
aam
popa
loope
popf
gs
xchg
inc
jp
or
mov
add
pusha
and
scas
and
fwait
jae
test
rclb
dec
lea
pop
aam
mov
test
jmp
jmp
out
scas
gs
fldl
loopne
lods
inc
add
sub
fdivrs
into
inc
aad
push
jmp
xchg
inc
xchg
shr
and
call
pop
loopne
hlt
mov
test
mov
push
shlb
xor
push
outsb
lods
sbb
gs
mov
divb
push
fs
mov
test
lahf
imul
stos
jo
lods
xchg
push
pushl
inc
add
clc
das
mov
cmp
jbe
adc
lcall
hlt
sub
cmp
pop
push
sbb
lret
sbb
or
pop
add
fisubl
adc
nop
cmpsl
or
mov
push
jmp
clc
bound
cs
jmp
sbb
pop
clc
jne
mov
inc
or
clc
sbb
outsl
andl
fcompl
inc
pop
leave
adc
dec
pop
xchg
cld
out
mov
add
cld
je
sti
mov
lock
mov
push
pop
push
adc
scas
or
sbb
adc
push
push
call
cmp
sbb
lea
mov
arpl
dec
mov
rcrl
lods
sub
adc
aaa
dec
and
popa
add
add
lret
inc
sarl
jae
inc
jmp
or
push
shl
mov
dec
jbe
adc
or
or
or
popa
fmull
add
and
in
nop
dec
or
xor
and
repz
in
bound
aaa
test
cmp
ret
in
dec
test
cmp
xorl
jns
dec
or
inc
pop
adc
mov
and
and
sbb
addl
cs
cmpsl
shrb
add
jns
fisttpll
mov
xor
sbb
and
sub
push
jge
jae
rclb
cmp
fildll
sbb
pop
jmp
cmp
test
cmp
into
adc
adc
xchg
ret
sub
mov
sbb
mov
push
and
ss
or
insb
in
movsl
inc
xchg
xchg
push
xor
sub
mov
mov
dec
or
inc
inc
ja
outsl
aas
stc
das
xor
das
add
mov
in
add
sub
or
mov
push
or
or
inc
xor
xchg
mov
dec
subl
andb
cmpsb
dec
xor
sbb
push
movsl
pop
adc
enter
add
add
pusha
dec
ss
test
jle
inc
pusha
push
ret
lods
xor
ret
ret
or
mov
sub
lock
adc
cmp
aad
mov
jp
and
xchg
push
rclb
xchg
push
loop
stos
subb
shlb
sub
lods
jne
xchg
pop
dec
mov
jne
testl
push
or
ljmp
ss
cmp
xchg
cmp
aam
jo
arpl
and
loope
mov
pop
adc
test
dec
pusha
pop
sub
adc
imul
nop
outsb
into
sub
add
jmp
sub
dec
lahf
enter
xchg
cmp
jb
mov
add
push
mov
mov
jnp
sbb
xorb
sbb
nopl
sti
lock
add
lea
imul
mov
sbb
dec
pop
lods
ja
sbb
pop
add
sub
sub
sbb
js
adc
jge
pop
xchg
pop
fadd
inc
xchg
cs
inc
mov
lock
sub
mov
aaa
or
or
ror
shll
sbb
shlb
loopne
pushl
or
outsl
or
insl
push
fisubl
pop
shl
add
xchg
and
fdivrl
ret
loopne
mov
jmp
sub
notl
mov
jmp
pushf
in
push
data16
std
mov
fldenv
ret
mov
cwtl
add
fsubl
outsb
mov
lea
iret
test
scas
dec
leave
dec
nop
lock
push
ret
pop
push
dec
mov
push
cmp
or
adc
jo
movsl
add
push
and
xor
xchg
sbb
xlat
inc
push
clc
fidivrl
push
push
ss
int
cmp
jb
cmp
inc
int
rorl
sbb
inc
aaa
popa
xor
loop
mov
mov
je
add
push
sbb
sbb
dec
mov
jl
xchg
push
push
pop
push
inc
adc
add
stc
hlt
insb
cmp
adc
dec
mov
cltd
clc
dec
je
mov
and
xorl
mov
mov
mov
filds
or
mov
cmp
addr16
je
cmp
and
mov
sbb
add
pop
dec
lea
repz
or
mov
pop
dec
xor
test
ja
push
cmpsb
mov
sub
inc
adc
je
testl
lods
sub
in
cmp
jbe
and
push
lea
loope
cmp
jb
mov
je
sub
inc
jmp
inc
and
inc
cmp
ficomps
push
cld
pop
pop
push
orb
loop
out
jae
cs
mov
mov
clc
repnz
je
aam
mov
imulb
roll
push
adc
into
inc
jmp
loop
mov
xor
xchg
sub
mov
jl
dec
cld
inc
xchg
cmp
add
cmp
jne
outsb
hlt
cmpb
bound
pop
push
or
imul
adc
je
ds
mov
test
data16
fdivs
js
sub
sub
mov
add
stos
es
enter
adc
push
push
mov
adc
ret
pop
in
add
cld
jmp
loopne
fisubs
mov
ljmp
mov
movzwl
testw
push
mov
add
jae
cmp
jae
movl
in
jg
sub
pop
shl
add
jmp
pushf
aas
insb
sti
adc
xchg
sub
dec
popa
or
adc
fs
jne
xor
and
lock
sub
or
push
incb
jae
mov
jmp
dec
shlb
icebp
adc
fstp
sub
out
sub
sub
sub
call
mov
or
dec
add
sbb
push
add
scas
ljmp
or
jge
lock
and
es
sub
fucomi
fwait
push
sub
and
pop
or
jl
or
adc
sbb
lods
and
pop
orl
decb
jbe
push
hlt
pop
arpl
dec
jo
jne
add
je,pn
test
jne
lods
push
std
sub
jb
push
pop
inc
clc
add
icebp
mov
or
jae
movb
inc
push
or
call
xchg
or
nop
push
and
sbbl
xchg
data16
jo
testl
ljmp
loop
test
inc
mov
clc
out
fsubr
adc
jae
add
inc
fs
sbb
and
inc
push
lcall
imul
popf
inc
xchg
lds
mov
fsub
add
fiadds
jecxz
hlt
dec
mov
and
mov
push
call
sarl
inc
ret
pop
inc
movsl
fisttps
add
ret
add
inc
daa
adc
lret
jne
mov
cmovns
mov
sub
push
inc
sahf
mov
imul
dec
test
add
lods
inc
xchg
mov
jg,pn
mov
jnp
push
fistpll
in
cmp
and
jbe
push
mov
sbb
push
push
int
xor
or
pop
shlb
int
jp
or
push
adc
push
mov
ljmp
push
mov
push
popf
call
testl
lea
cmpsb
jecxz
mov
jo
sbb
imul
mov
pop
push
andl
sub
sbb
pop
cltd
aaa
sbbl
xor
pushf
inc
mov
mov
jmp
add
ret
or
cmc
outsl
cmpsb
push
pop
push
movl
push
adc
dec
or
xor
push
xor
push
pop
lahf
jbe
add
mov
xor
incb
jne
sub
mov
sysret
sbb
lock
push
mov
xchg
xor
cltd
cmp
shrb
pushf
pop
and
popf
int
cmpl
sub
push
xchg
jo
sbb
cmp
cmp
mov
mov
cmp
outsb
or
out
push
fsubr
jae
pop
push
shl
adc
cmpl
in
or
add
cmp
pop
subl
es
dec
lea
mov
ljmpw
xchg
imul
or
pop
mov
inc
adc
pop
xor
and
ja
pop
mov
idiv
into
fisubrs
push
gs
add
xchg
cmp
mov
add
cld
pop
pop
nop
push
stc
jle
mov
je
cmpsl
popf
and
dec
push
or
jge
xor
cmc
cmp
js
push
lds
add
adc
xor
pusha
clc
fidivrs
clc
pop
je
test
dec
push
inc
movsb
mov
xor
push
fs
addb
shll
adc
inc
push
into
sub
xor
inc
push
nop
push
push
or
sub
mov
ret
cld
pop
xchg
test
call
mov
jl
mov
inc
inc
fidivrl
lidtl
pusha
push
mov
push
sbb
inc
or
push
push
in
mov
xchg
inc
and
mov
fdivs
aaa
les
add
add
orl
add
add
pop
inc
add
push
cltd
aaa
inc
loop
in
inc
add
outsb
enter
test
ja
ret
or
loopne
das
pusha
sti
pusha
jb
push
mov
out
pop
pusha
adc
roll
popa
xor
push
xorl
mov
daa
ficoms
int3
cmp
xchg
sarb
jne
cmpsl
cmpsl
das
push
and
lret
inc
cmpsb
inc
gs
pop
add
inc
push
ljmp
push
pop
mov
insb
xchg
adc
loope
sti
sub
mov
jbe
push
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
mov
cmp
xchg
or
cltd
inc
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
push
out
jae
cmc
lahf
cmp
ret
and
cmp
jne
in
push
bound
adc
or
sub
pop
cs
shl
ret
out
enter
sub
shll
sbb
sbb
clc
add
mov
lods
testl
push
add
pop
cwtl
cmpl
dec
push
xor
dec
jnp
ret
push
push
lret
cwtl
adc
dec
mov
subl
pop
arpl
std
jnp
das
movl
push
push
loopne
into
cmpl
movsb
fcmovu
iret
jge
xchg
andl
aas
fsubrs
pushf
sub
inc
fs
pop
ficompl
sbb
cmpsb
or
xchg
or
clc
inc
jmp
bound
and
push
cmp
pop
jge
out
orl
add
cltd
mov
popf
jne
push
push
sbb
jne
lock
call
jp
sub
add
iret
push
subl
test
test
dec
insl
loopne
add
push
adc
dec
push
dec
cmp
jae
push
imul
push
cmp
fmuls
xchg
xchg
jne
mov
icebp
cmpsl
jp
cmp
lods
fwait
pop
loopne
sbb
pop
xchg
fsubs
push
rorb
push
aas
je
xchg
stc
cmp
push
pop
jne
aam
adc
xor
inc
mov
xlat
imul
jne
pop
call
sbb
dec
mov
insl
in
lret
mov
mov
jne
jmp
popf
andl
test
jbe
mov
inc
popa
sbb
push
sub
add
addr16
aaa
adc
pop
lea
mov
add
je
pop
in
push
cmp
subl
mov
andb
push
imul
repz
jmp
pusha
xchg
fisttpl
sub
fimuls
sub
leave
or
adc
mov
nop
leave
add
xchg
mov
sub
decb
adc
cmpl
add
cwtl
sbb
inc
and
add
in
sbb
in
mov
add
subl
cmp
push
mov
or
and
ret
push
add
cmp
mov
cmpl
mov
push
cmp
std
push
mov
aas
inc
push
dec
adc
mov
jl
push
movsl
aas
add
inc
add
test
inc
mov
pop
pusha
xchg
pop
xchg
nop
fcomp
and
adc
sahf
xchg
xlat
push
push
push
push
pop
lret
in
mov
pop
ret
pusha
or
addr16
pop
pop
pop
dec
mov
push
sub
sbb
ret
addb
dec
rorl
dec
sub
jno
clc
add
push
les
mov
push
jno
filds
adc
and
incl
sbb
jmp
push
cmpb
rcll
lret
mov
enter
sbb
adc
lods
ret
ljmp
movl
xchg
ror
adc
test
es
sbb
or
sbb
les
adc
insb
or
or
add
daa
cmp
jecxz
jnp
into
xor
dec
xchg
push
es
je
jl
jbe
lock
sbb
ljmp
sbb
push
loop
mov
dec
cli
jp
push
pop
scas
movb
es
mov
je
out
dec
ret
mov
or
sti
and
adc
xor
add
xchg
mov
adc
or
pop
ret
fwait
sbb
push
pop
inc
shlb
test
out
lods
test
lock
mov
inc
nop
dec
fnstenv
stc
sti
es
sti
jnp
sahf
lcall
adc
mov
in
inc
jae
sub
mov
mov
xchg
fstpt
and
scas
xchg
inc
cmp
cmp
xor
cmp
jbe
mov
jno
in
and
jmp
sarb
mov
je
mov
cmp
jne
vpavgb
adc
in
mov
ljmp
add
adc
adc
lret
push
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
aas
or
mov
add
pop
mov
and
mov
sbb
andb
js
adc
into
inc
mov
movsb
sbb
jbe
push
adc
ds
loopne
inc
jne
ss
adc
mov
xor
pop
lock
call
xchg
shl
dec
lock
cmp
fadds
or
sbb
outsb
sbb
pop
jbe
jo
sahf
add
mov
adc
pop
lcall
mov
sbb
ret
add
es
xor
xchg
jo
add
cmp
sub
sbb
xchg
bound
addl
jne
adc
add
incl
cmp
andl
rcrb
adc
hlt
xchg
dec
pop
pop
sub
mov
push
jo
mov
test
in
sub
es
lahf
mov
cmp
cmp
scas
hlt
cmpsb
lret
mov
cmp
in
je
divb
lret
fucomp
arpl
mov
repnz
arpl
mov
or
and
xor
ljmpw
adc
push
pop
push
add
cmp
xor
leave
inc
cmp
lea
adc
jmp
jo
inc
hlt
mov
lock
hlt
xor
lods
add
je
mov
mov
sbb
add
in
lahf
ret
mov
cmp
ljmp
aam
pop
enter
push
jae
pop
jb
les
enter
mov
cmp
push
jecxz
mov
add
jge
push
jecxz
outsb
outsl
mov
and
add
jl
inc
adcb
insl
inc
push
push
popa
lea
test
mov
orl
int
rcrl
push
pop
xchg
fcomi
cmpl
adc
shrl
push
rclb
hlt
test
push
add
leave
das
je
add
sbb
mov
out
jb
ficompl
add
pusha
scas
pop
lods
xor
xchg
push
cmpb
jns
add
rclb
mov
fisttpl
xor
out
push
add
sub
xor
sub
orb
sub
cld
int
cmp
fsub
push
adc
pop
sbb
push
ja
inc
lock
push
test
pusha
sbb
mov
inc
je
adc
xchg
addb
and
adc
movsl
repz
mov
xchg
pusha
push
sub
cmc
cmp
loop
cmp
loope
je
push
das
jmp
push
loopne
and
push
adc
dec
push
mov
andl
cmpsb
dec
rorl
jle
push
add
jo
adc
add
mov
mov
clc
and
sbb
sub
push
dec
dec
lods
dec
cmp
pop
mov
sbb
dec
push
mov
jne
jns
add
cs
sbb
xor
sub
inc
cmpl
lock
push
jg
jbe
push
aas
in
clc
jge
ja
jmp
mov
dec
pusha
leave
cmp
xchg
lock
cmp
xor
xchg
fimuls
int3
add
sarb
int3
add
shl
rorb
and
int3
arpl
loopne
xor
inc
stc
lods
push
sub
les
or
aam
add
cmp
push
fdivp
add
add
sub
insb
dec
mov
push
mov
in
lret
pushf
fsubrp
push
mov
jb
test
push
je
push
mov
daa
das
or
cmc
das
xchg
inc
adcl
sti
incb
jl
jmp
pop
mov
ss
inc
mov
add
ljmp
sbb
add
imul
add
aas
push
dec
pop
test
in
adcl
fmull
push
xor
fidivl
cmc
jno
lret
into
jne
int
mov
sub
shl
push
insb
xor
lea
mov
pusha
lahf
adc
pop
sbb
dec
loop
push
and
adc
or
push
rep
lcall
aam
adc
or
cmp
movb
mov
jmp
aaa
loop
lea
inc
push
fiadds
xorb
xchg
sarb
ds
fldl
lret
push
push
aaa
lock
mov
stos
mov
cmpb
inc
add
adc
push
lcall
in
std
adc
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
dec
sbb
cmp
push
sbb
pop
nop
push
hlt
push
jbe
fs
jne
out
mov
dec
adc
cwtl
mov
sbb
mov
sbb
xor
ss
fadds
int3
inc
push
cmp
mov
inc
aad
es
or
aad
fsubp
xchg
push
or
push
jmp
sbb
sbb
popa
pop
jg
inc
cmpsb
leave
sub
pop
mov
cmp
das
loope
dec
fstps
or
fs
add
icebp
dec
fdivs
add
add
notb
jnp
adcb
jnp
jmp
push
cld
inc
inc
adcb
or
cmp
mov
fcoml
stos
xor
mov
pop
mov
popa
and
cwtl
jle
jne
popa
inc
jmp
test
dec
nop
push
add
pop
jl
repnz
push
push
loopne
out
sbb
add
fnsave
clc
xchg
aam
test
adc
inc
nop
mov
jno
ja
call
jo
movb
cltd
jo
add
scas
or
jo
repz
adc
xorl
pop
fucomip
and
sub
sbb
push
in
jecxz
and
inc
inc
addr16
or
jne
in
cmp
pop
iret
stos
mov
mov
dec
mov
sbb
pop
movsb
mov
add
sti
xor
dec
loopne
inc
fcomps
mov
stos
or
je
mull
or
mov
adc
sub
scas
inc
jle
xchg
movb
enter
sbb
mov
sbb
add
enter
mov
xchg
movl
or
dec
cli
xor
mov
or
lock
fsubrs
aam
sahf
cmpsb
add
mov
xchg
add
mov
add
xchg
cmc
lret
pop
loopne
popa
inc
sahf
and
add
push
dec
addl
jl
push
leave
fsubr
push
mov
sub
push
outsl
adcb
iret
or
cmpsb
inc
xor
pop
xor
mov
in
adc
add
popa
adc
pop
cmp
jne
test
bswap
incl
sub
fists
aaa
ja
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
and
xchg
adc
add
dec
push
push
pop
inc
sub
adc
add
pop
movl
add
jbe
dec
jnp
mov
add
push
adc
enter
xchg
mov
add
xor
cmp
out
lcall
pusha
lods
pop
mov
add
jae
icebp
sub
inc
sbb
ljmp
out
mov
xchg
add
cmp
inc
xor
iret
sub
data16
jo
jns
popf
pusha
sub
push
imul
jnp
ret
cli
xor
lds
pop
pushf
sub
push
jge
push
add
test
aas
sbb
sub
or
stos
jmp
push
ret
pop
push
scas
mov
or
inc
mov
mov
inc
xor
mov
add
test
or
mov
insb
rcrb
dec
dec
in
arpl
dec
fidivrl
outsl
ss
test
pusha
sbb
fdivrl
xchg
mov
loop
pop
push
das
dec
arpl
sub
sub
sbb
adc
sub
jge
xchg
lea
xor
or
pop
mov
ja
pop
leave
mov
push
jne
sar
or
clc
mov
jnp
and
adc
inc
push
jmp
js
and
xor
dec
dec
jle
dec
jnp
push
jmp
movsb
inc
aam
cmp
add
dec
and
inc
sbb
mov
arpl
ret
call
fucomi
dec
mov
into
cs
sbb
addr16
mov
push
inc
mov
mov
clc
pop
xchg
jno
imul
inc
je
adc
push
and
and
shrb
dec
jle
addb
dec
cli
xchg
xchg
mov
test
fsts
inc
and
pop
ljmp
sbb
sub
stc
push
jnp
or
cmp
fdivrl
or
push
stos
imul
push
imul
xchg
sbb
imulb
xchg
test
cltd
lcall
dec
aam
dec
ds
fisttps
pop
adc
nop
fnop
mov
pushf
jne
lods
movsb
add
in
push
rclb
mov
sbb
dec
mov
movsl
xchg
jne
sbb
dec
fwait
xchg
fnstcw
jl
add
push
mov
xorb
pushl
pop
push
sbb
push
jnp
mov
or
mov
arpl
add
or
bound
mov
popa
sub
das
push
arpl
add
mov
mov
test
repnz
and
roll
jo
add
jae
mov
adc
adc
or
add
mov
adc
jo
pushf
pop
sarl
js
cmpl
jne
adc
sbb
dec
inc
and
int3
mov
insl
test
imul
mov
pushf
xchg
jne
cmp
fs
out
ljmp
dec
lods
or
add
dec
shlb
adc
dec
inc
loope
sbb
cmp
dec
mov
inc
xor
cmp
jge
inc
jbe
push
jmp
sbb
rclb
test
cmp
push
sub
inc
mov
lock
in
nop
sub
inc
jmp
xor
sbb
popf
lret
je
cmp
xchg
sbb
adc
push
negl
lods
scas
jge
bound
xchg
mov
fcompl
and
cmp
xchg
xor
fildll
fcoms
data16
rcrb
cli
cmp
push
inc
jbe
adc
inc
jmp
divl
sbbl
cld
clc
push
jbe
cmp
inc
loopne
test
xchg
xchg
popf
mov
sub
push
ljmp
sahf
pop
ret
sti
jbe,pn
fdivl
ret
mov
test
mov
sbb
fidivrs
fidivrl
shll
pusha
adc
xor
push
dec
pop
insl
and
jg
lods
jae
orl
mov
cmp
jne
jl
push
cmp
push
fsubr
adc
addb
je
stc
js
push
ret
jp
sbb
lahf
test
jo
mov
inc
and
jo
inc
faddp
xlat
mov
or
sub
decb
pop
fs
mov
js
add
ffree
test
fldt
std
adc
incl
cmp
pop
sbbl
cmp
shrb
pop
adc
add
jb
jmp
mov
add
in
hlt
adc
addr16
loopne
mov
mov
or
lods
mov
push
cltd
ret
inc
enter
pop
dec
int3
fs
add
push
mov
push
or
jb
mov
push
sub
aas
call
cmpl
icebp
mov
pop
loopne
push
loop
or
mov
and
arpl
js
mov
lock
ffree
mov
and
or
mov
jb
jge
shll
mov
jne
insl
loope
dec
mov
popf
cmp
test
inc
pop
les
push
leave
jle
mov
jnp
mov
and
mov
xor
dec
add
push
mov
xor
fisubrl
dec
shl
sub
or
stos
outsb
cmp
rcrb
add
roll
sub
add
movsb
push
pop
bound
mov
or
add
in
mov
aad
mov
adc
jb
mov
add
lock
adc
adc
jbe
scas
cwtl
mov
stos
xchg
mov
dec
out
dec
cmpl
lds
jmp
int3
add
hlt
mov
mov
jp
jne
je
push
mov
mov
sub
add
out
xor
loopnew
inc
fldl
add
ss
or
mov
push
pop
in
cmp
push
and
fcmovnb
fcomps
leave
sbb
addl
cmp
pop
adc
push
cld
jne
ret
lods
imul
ficoms
lcall
pusha
add
push
aas
xchg
pop
adc
sub
mov
adc
arpl
push
test
and
xor
mov
dec
in
adc
adc
xchg
je
dec
xor
cmp
cmp
int
push
ret
aaa
jmp
mov
pop
sub
std
ja
gs
mov
lods
cld
ljmp
pop
nop
sarb
subb
ja
neg
sbb
inc
sbb
dec
push
mov
mull
inc
xchg
ret
jecxz
fwait
mov
mov
insb
pushl
aas
mov
shll
dec
sub
add
sbbb
add
jge
inc
das
in
lret
jmp
adc
aam
push
sbb
arpl
xor
push
inc
add
push
test
imul
in
loope
cltd
adc
and
cmpl
test
adc
test
adc
rcrl
mov
mov
jge
fstps
sarb
xor
push
xchg
inc
clc
push
push
add
mov
sbb
mov
lea
lcall
or
xor
pop
je
cmp
push
add
stos
insb
loop
mov
sub
enter
adc
nop
mov
add
fldl
fdivrl
mov
imul
addr16
inc
cmp
jl
inc
and
das
jmp
cmp
and
popf
subb
push
jo
out
cld
cmp
bound
ud0
lahf
or
idivb
adc
mov
xor
pushf
nop
rorb
aad
fdivrs
cmc
cwtl
adc
mov
cltd
out
inc
and
popf
cmc
xchg
dec
and
add
je
out
gs
leave
ss
adc
insl
ds
add
xor
not
push
sbb
jae
jbe
outsb
nop
xor
lods
popf
test
sbb
fcompl
pop
mov
addl
leave
cmp
test
sbb
dec
pushf
out
cli
and
mov
jne
popf
push
lock
add
mov
emms
dec
test
push
ud0
lds
mov
adc
mov
or
insb
aam
mov
push
fdivr
jnp
pop
mov
inc
or
push
mov
xchg
xor
push
aam
fnsave
testb
mov
and
test
mov
push
divb
push
mov
lret
adc
nop
sbb
add
aad
mov
pop
jne
call
roll
inc
test
out
mov
cmp
aad
sbb
pop
enter
push
push
xorl
jmp
sbb
sub
xor
testl
idivb
orl
jle
add
ja
loop
add
pop
xchg
in
scas
jmp
cmp
sub
sbb
xchg
push
or
adc
shrb
pusha
mov
repnz
clc
push
out
mov
cmpb
push
push
cltd
sub
adc
xchg
dec
into
pop
cmp
ret
pop
lock
out
fsub
mov
ficoml
jb
jno
in
pop
dec
add
mov
arpl
test
mov
add
jge
and
fwait
push
push
sub
xlat
ret
adc
pop
adc
out
dec
mov
add
aaa
pusha
pop
fldcw
dec
jne
push
and
mov
popf
mov
xchg
cld
addl
aam
mov
push
pop
adc
sub
xlat
cmc
mov
lea
popf
mov
add
addr16
jno
arpl
xchg
mov
test
shrl
add
arpl
mov
adc
push
mov
repz
sub
inc
arpl
pop
ret
loopne
stos
xor
or
mov
cs
add
pop
cmp
sahf
popa
lea
mov
add
pop
cmpb
mov
adc
shrb
sub
add
xchg
std
pop
cmp
adc
roll
push
push
mov
cmpl
shrl
mov
lea
rclb
or
xor
add
das
or
dec
or
mov
orb
and
rorl
ljmp
int
jle
popa
push
xchg
stc
fdivrl
jno
inc
xor
icebp
cmp
std
sbb
sbb
inc
jmp
dec
fdivrp
ss
rcr
psubw
popa
add
repnz
sub
enter
scas
dec
pop
outsl
mov
mov
cmc
scas
mov
jmp
in
std
xor
outsb
cs
mov
dec
das
jp
ja
mov
and
lds
int3
shrb
xchg
jbe
pushf
ret
ror
ret
sbb
adc
mov
test
in
arpl
mov
mov
pop
sub
add
test
jo
test
bound
sub
xor
mov
mov
in
xor
mov
mov
shufps
sub
repnz
fwait
sbb
outsl
push
and
add
andl
fisubl
xor
pop
sti
fld
adc
cmp
cwtl
clc
jecxz
and
loope
rcr
mov
mov
pushf
mov
cmpsb
fisttps
xor
push
cmpsl
mov
pop
dec
cmp
cwtl
mov
mov
mov
jns
es
sub
and
into
daa
test
mov
jae
adc
inc
test
and
sub
sub
dec
xchg
push
mov
pop
lcall
xorb
sbb
mov
cmpsb
pop
or
std
adc
ss
sbb
sub
shr
sti
frstor
and
out
std
ret
push
xor
jg
pop
push
pop
pop
inc
paddd
and
pushf
sub
lret
xchg
lock
mov
add
push
jecxz
and
push
mov
loopne
lea
xor
xchg
sbb
movsb
cltd
xchg
and
and
dec
adc
push
jecxz
add
fcmovnbe
inc
std
int3
dec
iret
fs
jmp
mov
inc
mov
cmp
into
fdivl
pop
inc
and
insb
dec
xchg
add
mov
or
js
ss
insb
xlat
ret
sub
dec
je
dec
mov
mov
repz
lea
sub
jl
pop
dec
xorb
aam
mov
mov
add
icebp
mov
das
fadd
jae
lea
jmp
cmpl
sub
shll
dec
test
dec
fnsave
push
jmp
loope
jnp
repnz
adc
inc
lcall
and
in
mov
lock
movsb
sbb
lahf
imul
xor
mov
sub
push
add
call
mov
add
jl
push
stc
add
je
sbb
adc
movsl
sbb
rcrb
dec
cmp
movsb
inc
inc
jo
pop
out
xchg
dec
xchg
sub
sti
loopne
rcrb
push
push
jnp
xchg
jb
aaa
rol
pop
push
add
xor
popf
sbb
or
or
or
pop
inc
sti
add
lret
test
or
jns
orb
test
push
ret
mov
mov
pushf
ret
push
sahf
pop
test
in
push
bound
add
push
in
das
or
cmp
xchg
movsb
mov
push
roll
dec
insb
stc
push
mov
adc
xchg
mov
movsl
sbb
in
add
jecxz
or
mov
push
je
cwtl
xchg
mov
or
sbb
mov
loopne
cwtl
iret
xchg
js
add
stc
xchg
test
scas
gs
outsb
or
rclb
pushl
xchg
or
roll
mov
push
mov
cmpb
pop
dec
jp
int3
mov
add
cmp
je
cmp
aaa
test
fdivrl
pop
lret
sbb
mov
adc
xor
addl
pop
insl
test
mov
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
mov
cmp
or
lock
cmpl
int3
push
or
sbb
add
inc
dec
pushf
jae
insb
push
or
ret
sbb
adc
xchg
sub
ret
jmp
in
clc
sbb
xor
aas
mov
xchg
sbb
inc
subb
inc
adc
lahf
add
or
lods
push
sbb
testl
or
cmp
adc
push
adc
cmpb
data16
mov
mov
cmp
dec
imul
push
jns
fdivrl
jne
mov
push
test
cmp
dec
dec
xor
clc
cld
add
adc
stos
es
dec
enter
call
mov
or
stos
fs
jns
or
lds
les
mov
cmp
add
and
cmp
call
mov
adc
inc
sbb
shr
scas
fxtract
jne
push
js
fildl
cld
loopne
fnstenv
mov
and
arpl
jbe
repz
dec
fmuls
cwtl
inc
mov
out
push
sbb
xlat
or
ja
push
cmp
filds
push
push
rolb
in
cmc
movsb
ficomps
popa
sahf
sbb
inc
insl
or
mov
pop
jae
pop
cs
pusha
push
ret
insb
std
sbb
push
hlt
neg
sbb
and
in
testl
movzwl
push
adc
insb
les
mov
jnp
adc
inc
test
and
add
mov
push
das
daa
add
xor
enter
sbb
sbb
sbb
movb
mov
add
je
adc
mov
idiv
aad
jge
jge
add
cmp
jbe
or
jne
xorb
add
mov
sti
cmp
jle
outsl
mov
das
cmp
push
xchg
push
in
push
mov
inc
cmc
jmp
sbb
or
orl
cmp
insl
fdivp
sbb
or
ja
and
push
imulb
cwtl
sbb
stos
mov
sub
sub
scas
adc
cmp
loope
lods
inc
xchg
out
mov
js
push
mov
cmc
test
mov
notl
rclb
jmp
cmpsb
adcl
xchg
xor
dec
add
pop
adc
or
mov
or
cltd
shlb
cmpsl
pushf
and
test
mov
jnp
sub
jg
cltd
or
dec
add
pop
mov
ffreep
sbb
adc
dec
sub
add
or
inc
popf
or
jbe
idivb
sbb
pop
xor
or
cmpl
add
insb
mov
mov
jecxz
push
out
push
pushf
out
jo
xor
push
ljmp
xlat
fdivr
inc
sbb
push
mov
and
or
sub
or
sbb
mov
loope
xchg
or
or
and
xchg
xchg
imul
out
in
outsb
add
cmc
inc
cmp
xchg
sbbl
movsb
mov
add
shll
inc
and
out
xor
or
imul
andb
fistpll
xchg
mov
jb
push
cmc
nop
mov
jae
jmp
cmpsb
outsl
bound
pop
or
arpl
sbb
jmp
xor
push
cmp
pushl
je
cmp
ficoml
clc
push
add
xchg
shll
push
push
addl
sbb
mov
cli
dec
jo
ret
std
sbb
sbb
call
jb
outsl
rcrl
jle
mov
add
inc
add
push
add
aas
mov
call
dec
adc
hlt
mov
jbe
pop
test
or
fmull
cltd
addr16
out
pop
sbb
sbb
cmpsw
xor
cs
jp
dec
mov
fnstcw
sub
jne,pt
push
adc
rcrb
sbb
pop
movsl
or
pop
xchg
pop
pop
jae
and
jge
arpl
pop
imull
fucomip
cmp
pop
inc
mov
packsswb
test
arpl
fdivl
ja
rcl
inc
scas
xor
and
dec
dec
xchg
add
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
orl
sbb
call
push
and
mov
cmp
xchg
push
sub
and
pop
mov
mov
adc
and
inc
sub
mov
add
pop
leave
roll
push
addr16
and
rcr
mov
pusha
pop
loope
xchg
or
js
mov
inc
cmp
push
inc
jg
mov
ret
xchg
cmp
mov
out
pop
inc
les
aam
jne
mov
fcomps
add
and
add
loope
loopne
jle
or
mov
xor
sahf
gs
and
adc
or
or
mov
adcb
jge
mov
out
push
test
xorb
inc
jle
push
push
pop
pop
test
pushl
push
lret
mov
dec
fsub
pop
add
in
rorb
into
and
and
std
add
push
ja
or
movd
pushf
adc
sub
sub
sti
jb
in
into
sbb
mov
mov
sub
roll
sbb
in
mov
test
lea
fistps
or
test
test
aaa
mov
add
popf
pushf
xor
xor
xor
sub
cmp
xchg
out
in
aaa
xchg
and
pop
je
cmp
fdivrs
adc
push
jae
ss
rorb
aas
or
or
test
mov
out
jmp
mov
pushl
sub
sbb
test
adc
pop
test
add
pop
mov
lea
out
xchg
rcrb
sbb
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
jmp
jae
aam
mov
jae
leave
jmp
push
inc
sub
xchg
mov
enter
cmp
dec
push
xchg
push
test
push
adc
add
orl
fisttps
mov
sbb
add
inc
pop
cmpsb
pop
push
sbb
adc
push
add
mov
je
mov
mov
shlb
mov
jae
dec
adc
push
adc
mov
adc
sbb
testb
push
das
dec
and
filds
sbb
adc
add
lock
lret
loope
rdmsr
push
lea
cmp
jle
mov
aaa
lcall
sbb
sub
ja
hlt
outsb
cmp
adc
fisttps
imul
nop
and
or
cmpsb
add
add
fisttpll
pop
xor
push
fsubrs
pusha
cmc
ret
gs
and
test
addl
sbb
lret
adcb
xor
pop
adc
mov
jecxz
push
fsubr
push
dec
or
dec
and
out
inc
cmpl
enter
adc
pop
sub
sbb
sub
dec
add
mov
inc
and
data16
inc
jo
out
pop
mov
adc
outsb
call
enter
xchg
sub
mov
je
mov
add
push
jmp
mov
orl
imul
std
incl
add
andl
cmp
xchg
out
xor
sbb
push
loop
addl
adcb
push
push
push
mov
daa
bnd
mov
bound
xchg
call
inc
js
dec
ret
daa
fidivs
lea
push
sub
sbb
jl
push
inc
push
xor
xor
mov
or
pop
ret
and
or
xchg
xadd
cmc
mov
jae
loopne
jge
fisttps
leave
fbld
fdivl
cmpb
jmp
cmp
jae
inc
jmp
push
cmp
cmp
sub
pop
pop
lea
adc
cmp
fcmovb
sub
push
jns
nop
subb
cmp
mov
cmc
adc
xchg
fdivs
sub
inc
sub
dec
sub
out
push
sti
push
mov
lret
mov
mov
call
mull
cmc
dec
in
add
in
sbb
adc
sbb
push
jae
or
mov
push
sub
shll
lret
dec
jb
jecxz
add
xor
add
test
aas
adc
push
lea
cli
adc
jo
mov
lret
mov
pushf
mov
mov
int3
pop
xlat
push
xrelease
push
wbinvd
fnstcw
aad
xor
pop
push
fdivrl
cwtl
mov
xor
adc
xchg
mov
movntps
int
or
xor
jp
je
xor
popf
mov
xchg
cmp
xor
or
lahf
mov
cmp
jb
inc
test
cmpb
push
ss
add
jo
xor
mov
cmp
sub
push
inc
or
mov
hlt
ds
es
xchg
cmp
add
sahf
sbb
add
adc
js
mov
std
cmc
imul
jo
pop
push
enter
add
out
push
add
xchg
arpl
jb
nop
sbb
pusha
pop
jmp
push
imul
mov
insb
test
lock
cwtl
mov
in
push
clc
xchg
or
jp
push
jbe
or
pop
mov
addl
push
add
lea
pop
mov
mov
pop
divl
xor
or
add
aam
jmp
add
cmp
adcl
mov
ss
push
cmp
in
add
push
adc
pop
sbb
mov
sbb
call
out
add
lea
popa
mov
imul
add
out
push
or
adc
shlb
cmp
adc
sbb
ret
popf
or
push
dec
cmpl
or
loop
pushl
mov
inc
push
iret
sub
push
pusha
jo
adcl
ret
daa
and
mov
sahf
xchg
sbb
inc
es
gs
jne
cmpsl
popa
mov
mov
xchg
push
ds
mov
popa
cmp
add
mov
insl
repnz
jno
dec
xchg
fs
mov
adc
push
push
mov
inc
or
sub
add
mov
jmp
fwait
orb
data16
bound
bound
jo
sub
mov
orl
jo
jns
jnp
pop
adc
or
mov
dec
sub
or
mov
inc
lods
arpl
mov
inc
xchg
mov
xchg
ja
outsl
add
fidivrl
enter
pop
pop
sbb
xor
xchg
or
sbb
jo
jge
leave
xchg
mov
leave
jae
lret
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
mov
inc
fidivrl
inc
xor
les
add
or
push
push
orb
loope
jne
sub
jp
push
sbb
mov
mov
inc
or
inc
clc
xchg
add
xor
jle
jne
in
jb
adc
lea
dec
xchg
push
pop
sbbb
fisubrs
lcall
adcb
adc
sub
jns
inc
jle
inc
cwtl
fs
fisubl
push
sti
mov
add
cltd
pusha
movsb
push
repnz
cltd
inc
out
std
jns
inc
dec
aas
push
int3
adc
sub
add
adc
or
nop
jo
lea
adc
test
mov
adc
or
sbb
add
cmp
jne
inc
pusha
cmp
bound
pop
push
imulb
push
adc
cmp
jno
loopne
cli
leave
push
add
add
dec
dec
adc
jo
cwtl
xor
in
mov
lcall
ret
inc
data16
pop
dec
in
push
push
inc
loop
mov
mov
mov
adc
cs
idivb
iret
mov
add
mov
jo
sub
aaa
popf
and
inc
jnp
cmp
fwait
ret
mov
pop
push
inc
push
push
dec
rorb
daa
out
psrld
fldt
pop
call
fimuls
mov
mov
xchg
incb
test
je
test
xchg
or
jo
mov
js
mov
pop
push
mov
mov
cmp
dec
stos
push
lds
jmp
js
push
or
roll
sbb
and
push
popa
cmp
insl
jge
aad
clc
xor
insb
cmc
or
daa
fdivrl
fcmovne
fsubrs
push
jge
adc
pop
xchg
fwait
mov
fidivs
adc
shll
loopne
lods
sbb
and
jb
push
push
jecxz
sbb
dec
push
clc
loope
jl
js
fcomi
js
or
jb
and
adc
adc
add
add
clc
lcall
adcb
xchg
shl
jbe
pop
in
pusha
pop
adc
adc
pusha
push
xchg
push
inc
jmp
adc
arpl
add
jle
cmp
fs
in
repnz
leave
adc
pop
fimull
dec
ret
or
mov
inc
dec
adc
jmp
jns
mov
ret
dec
lods
stos
aaa
jno
sbb
sub
push
cli
sub
nop
add
jl
inc
into
push
mov
lea
push
aam
jbe
test
push
mov
add
cmpsb
rol
nop
jb
daa
sbb
push
leave
push
jmp
cmp
shl
xor
clc
dec
cmp
repz
sub
rcrl
pop
xchg
add
js
cmp
movups
or
nop
pop
dec
clc
xor
nop
stos
test
dec
les
add
insb
add
jne
icebp
jmp
cs
cmp
fisubs
push
lea
xchg
and
lret
ror
sbb
add
jo
push
adc
cs
out
and
rorl
daa
jge
adc
sbb
out
mov
sarl
pop
sub
test
es
xchg
hlt
fcmovb
adc
mov
add
add
jl
inc
loop
inc
subl
into
addl
jb
popa
stos
sti
pop
push
lea
sbb
cmp
sub
push
jne
ja
sub
xor
test
add
and
lahf
inc
test
lock
sub
push
movl
or
or
mov
dec
or
rolb
cmp
mov
ja
pop
data16
icebp
call
repnz
jno
push
nop
mov
mov
push
push
dec
push
cmp
inc
nop
inc
rclb
add
push
pop
and
pop
jae
mov
mov
push
mov
repz
pop
cmp
pop
in
sub
adc
mov
jmp
into
out
add
lock
mov
out
lock
jg
imulb
push
xor
mov
je
adc
rol
stc
sbb
pop
mov
ret
dec
inc
and
xor
adc
cmp
and
aaa
mov
leave
pop
push
jne
sub
data16
cmp
lea
or
and
ss
add
sub
dec
dec
jns
sbb
iret
push
fwait
push
jmp
out
inc
pusha
mov
es
add
clc
nop
xchg
pop
mov
add
pop
adc
in
test
mov
fsub
dec
inc
fsubl
dec
in
xor
xor
dec
mov
sub
mov
and
or
push
sti
out
inc
sbb
sub
ret
or
sbb
js
je
nop
jbe
clc
dec
push
pop
xor
jge
jmp
and
mov
mov
mov
and
push
sub
jo
cmp
sbb
jo
cmpl
imul
add
adc
push
fnstsw
mov
mov
cmc
and
sbb
push
xor
jg
in
jo
xor
cmpl
mov
lods
add
jbe
dec
cmp
roll
push
cmp
loopne
jnp
xchg
inc
in
mov
jnp
mov
push
push
aaa
cmp
roll
push
push
push
dec
enter
out
pusha
dec
xchg
sub
pop
inc
adc
sbbb
add
icebp
jle
inc
dec
sbb
lahf
lods
pop
loop
push
mov
daa
shlb
mov
popf
les
ffreep
test
add
sahf
jns
add
pop
add
mov
or
sub
test
cmp
popa
aas
push
or
push
jne
push
push
leave
fdivrl
js
jne
adc
pop
xchg
pop
mov
mov
or
jne
pop
icebp
loopne
and
decl
adc
push
ljmp
fidivrl
fists
lahf
cmp
jo
mov
mov
pusha
jnp
cmp
je
lret
cmp
adc
fadds
pop
ret
push
mov
or
ret
insl
repnz
cld
divb
add
add
insl
lods
sub
in
dec
add
xchg
shr
aad
or
push
xchg
mov
ja
movsb
inc
mov
ror
add
push
xor
sarb
sub
xor
sub
enter
das
pop
xchg
mov
fiaddl
mov
inc
shrl
adc
mov
out
sbb
imul
pop
dec
scas
lcall
inc
sahf
fbstp
aam
pop
mov
jg
xchg
sbb
mov
mov
push
pop
mov
in
rcll
inc
cmp
sarb
push
jmp
xchg
call
sub
insl
push
lret
mov
flds
sub
xchg
nop
jnp
and
popa
or
dec
mov
rolb
shlb
or
mov
andb
andl
xor
push
sarl
mov
rolb
stos
adcl
add
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
pushw
mov
adc
add
movsb
jmp
insl
dec
add
adc
mov
adc
popf
sub
xor
sub
cmp
je
pop
adc
add
in
push
or
jne
push
or
mov
inc
cmp
inc
fsubs
add
adc
xchg
cmp
push
dec
xchg
or
jnp
loope
cmp
cmp
mov
js
cmp
jl
mov
rorb
xchg
loope
ja
lret
les
jae
mov
xor
sbb
push
adc
cmp
hlt
push
loop
adc
xor
or
fstpl
push
test
outsl
sbb
ficoms
jmp
add
out
stc
mov
and
adc
mov
jnp
or
lea
insb
mov
loope
mov
addr16
push
inc
mov
add
and
xor
pop
dec
dec
or
or
das
lds
fmuls
sbb
shll
and
dec
rorl
sbb
scas
sbb
nop
fsts
fimull
or
popf
sub
dec
ja
cmpb
movb
pop
inc
and
popa
sub
vpcmpgtb
jle
imul
sbb
xchg
sbb
add
cmpsb
imul
cmpsb
imul
jns
or
call
leave
xchg
cwtl
xlat
or
outsb
in
sti
or
mov
mov
add
inc
mov
xor
addr16
scas
sub
sbb
rol
push
adc
int
adc
and
mov
movb
sbb
and
mov
pop
sbb
std
xchg
jae
fadds
jbe
inc
jl
js
inc
push
fs
insb
push
fs
push
push
fs
push
cmp
xchg
mov
push
loope
mov
jge
xor
inc
ficoms
rcrb
addb
mov
pop
sbb
clc
and
mov
mov
icebp
inc
pushf
cmp
mov
xchg
daa
arpl
pop
adc
out
sub
adc
push
and
or
mov
add
or
subb
icebp
lea
sbb
rcrl
push
test
add
cmovle
cmpb
push
or
leave
add
jae
and
ret
pushl
lret
in
je
push
jl
adc
adc
jl
bound
sbb
in
lar
sub
or
inc
ret
mov
push
in
push
mov
shl
ret
mov
and
add
pushf
xchg
cmpsl
pusha
and
xchg
push
dec
ja
adc
jno
mov
mov
sbb
xorl
sub
subl
sub
daa
inc
dec
sbb
sahf
add
imul
inc
pop
xor
pop
add
mov
jmp
and
xchg
mov
fcmovnbe
jne
test
mov
xchg
lret
stc
fldl
sar
dec
dec
mov
mov
lods
cmp
sub
sub
and
mov
inc
xor
insl
jmp
scas
push
mov
roll
xchg
stc
push
jne
xchg
ss
mov
sub
mov
pop
dec
jne
cmp
sub
data16
cmp
mov
adc
xor
imul
lcall
mov
push
dec
mov
lock
xor
dec
jge
or
ficoms
dec
js
testb
and
xchg
sbb
dec
mov
and
dec
jae
push
scas
inc
and
inc
stos
add
xchg
or
lods
popf
jecxz
lods
aam
xchg
mov
test
jo
cli
out
fidivrs
or
adc
adc
insb
lods
pop
mov
or
pop
ds
inc
pusha
call
add
inc
or
xor
test
lods
outsl
push
es
cwtl
adc
test
xchg
scas
inc
mov
adc
add
jo
and
add
sbb
aad
xlat
adc
enter
inc
cmovno
test
mov
das
mov
je
sbb
inc
mov
out
push
mov
sbb
or
mov
mov
and
sbb
jno
orb
xor
int3
lock
inc
cmp
lock
adc
sub
jne
or
sub
out
mov
inc
mov
fs
xchg
pusha
pusha
insb
insb
ret
sbb
scas
les
add
jecxz
mov
or
mov
icebp
mov
testl
je
cmp
je
popf
sbb
cmp
jne
or
push
mov
sub
inc
adc
sahf
mov
inc
mov
hlt
sti
push
sub
inc
adcb
and
orb
or
xchg
add
adc
outsb
dec
adc
enter
jnp
lock
and
cld
lock
iret
sub
dec
jmp
adc
out
jecxz
push
push
pop
xor
add
push
rorb
mov
mov
sahf
mov
add
push
sbb
mov
sarb
pop
data16
lret
sub
xor
cmp
mov
sbb
pop
or
jle
sahf
push
flds
pop
cmp
sbb
test
mov
scas
xor
inc
loop
jp
xchg
cwtl
xor
pop
add
rol
and
jle
or
sbbb
fldenv
and
jne
adcb
jb
xchg
push
sbb
jns
xor
jae
maxps
popa
sbbl
and
loope
shlb
xchg
shrb
loopne
jl
adc
adc
je
shrb
mov
pusha
xlat
cmp
fldlg2
lret
cwtl
fidivrs
inc
fsubrs
jne
sub
popw
int3
mov
sbb
rcl
push
add
js
push
shl
add
dec
push
lea
mov
cwtl
push
out
add
add
lea
or
lret
push
or
lretw
sbb
push
fwait
mov
mov
adc
pop
fcoms
push
testl
in
lret
int3
xchg
and
add
adc
sub
mov
dec
xchg
sbb
daa
mov
inc
enter
mov
aam
hlt
insb
and
fcompl
cmp
mov
mov
loopne
add
int3
pop
pusha
cs
pop
mov
mov
dec
cmpb
dec
rclb
cmpsb
fdivs
dec
loopne
push
sbb
xor
ljmp
in
outsl
dec
ret
jge
int3
mov
dec
xchg
pop
sbb
sbb
rolb
leave
jbe
and
and
mov
insl
xchg
xor
pop
mov
pusha
rolb
mov
pop
leave
les
or
imul
ficoml
pop
or
out
jmp
std
loop
xchg
shlb
mov
push
aas
push
fs
cmp
out
rclb
push
adc
mov
jae
xor
adc
sbb
fistpl
in
ret
xor
and
ficoms
cli
sub
movsb
push
inc
mov
icebp
xchg
dec
inc
in
sub
mov
push
push
fsubrs
cmp
adc
fiadds
sarb
add
jle
xchg
mov
mov
imul
fmuls
in
into
outsb
dec
call
outsl
dec
loop
je
push
dec
out
pop
push
incb
xchg
lcall
sbb
rcrb
push
mov
lcall
cmp
dec
pusha
sub
test
stc
movsl
add
adc
ret
push
out
pusha
mov
sbb
and
jge
jo
adc
daa
pop
push
or
aaa
push
xchg
adc
sub
inc
or
lock
or
or
jmp
xor
rolb
lock
push
add
add
icebp
mov
dec
sbb
fdivp
push
stos
fstps
hlt
sub
mov
jns
jne
jne
jae
ja
movsl
sub
movsb
jns
pop
cmp
je
push
push
insl
or
movsl
dec
repz
adc
shl
sbb
lea
cmp
push
mov
or
sub
pop
and
push
sub
test
nop
push
aam
add
insb
xor
sub
inc
sbb
push
and
add
jnp
stc
in
sub
fistl
cmp
and
and
outsb
dec
into
sub
adc
sbb
and
pop
fisubs
and
je
or
test
int
jp
sbb
rcrl
adc
jp
jo
test
pop
cmp
je
in
cmp
push
pop
scas
push
movsl
int3
dec
jnp
out
push
cmp
add
xchg
add
sti
cmp
push
add
int
call
shrl
push
and
adc
leave
loopne
shll
test
adcb
cmp
jge
cmp
push
push
mov
push
pop
jb
xor
andl
clc
sbb
addb
xor
call
add
in
or
push
mov
xor
icebp
or
clc
jecxz
inc
mov
xchg
push
xor
stos
push
dec
lcall
int3
or
push
jbe
pop
rcll
stos
sub
xchg
push
mov
rorb
add
mov
inc
cmpsb
push
sbb
lret
pop
jmp
inc
add
or
ja
xchg
jnp
cwtl
xchg
add
and
divb
sub
and
xor
xor
rclb
loopne
adc
jg
or
cmp
add
fwait
xchg
cmp
fstl
push
shll
and
dec
adc
js
push
cmp
subl
mov
inc
fistl
cmp
aad
lea
lret
std
js
lds
jnp
cmp
or
dec
shll
add
mov
pop
rol
xchg
rolb
sub
movsb
push
inc
in
jmp
or
loope
test
or
orb
and
inc
cmc
js
aas
lea
adc
subb
pushl
mov
cmp
aaa
call
lea
ret
sub
mov
mov
inc
xchg
mov
inc
sub
add
mov
sub
push
adc
lods
push
pop
pop
mov
ret
pop
pop
sub
loopne
insl
cs
jl
andl
mov
ret
js
lds
push
insl
sub
outsb
jnp
shll
jae
and
mov
xchg
dec
or
dec
xor
xor
push
push
sbb
adc
scas
inc
xchg
add
push
faddl
fbstp
push
test
jo
or
call
cmp
pop
mov
negl
sub
mov
cmpsb
rcr
push
cmp
loopne
mov
adc
jl
and
mov
xor
imul
dec
add
sub
xor
pop
pop
js
push
jmp
and
cmp
jbe
adc
adc
sbb
bound
xor
inc
push
add
or
call
sub
or
jns
mov
movsb
add
jne
sub
fs
pop
ja
push
pop
sbb
lock
sbb
push
mov
xor
jle
pusha
lock
ret
cmp
cmp
cmp
or
imul
pop
testb
je
fdivl
aaa
orl
dec
or
dec
jl
loopne
testb
fisttpl
test
jne
lret
jl
inc
sbb
adcb
sbb
fisttps
clc
lods
push
push
leave
pop
fcmovb
or
mov
xor
ja
sub
mov
add
bound
adc
mov
out
add
inc
mov
cmp
xchg
sbb
popa
add
cmp
clc
xor
dec
push
or
push
loope
out
push
movsl
push
push
pop
ds
mov
mov
mov
and
xchg
cld
push
test
mov
xchg
ja
loopne
push
out
or
or
insb
pushf
pusha
xchg
test
mov
pop
xlat
push
mov
mov
cmpsl
cmp
push
xchg
lcall
movl
and
xor
fcoms
mov
clc
inc
imul
jmp
insl
sti
pushf
lock
nop
or
mov
stos
dec
ror
sub
fwait
xchg
jbe
add
push
pop
push
incl
inc
jbe
imul
cltd
negl
and
jge
push
xchg
ja
mov
ja
or
lea
andb
xchg
js
add
stos
push
ret
push
lret
inc
daa
mov
dec
push
and
popa
add
mov
pop
mov
movsl
out
addr16
addl
aas
movsl
add
xchg
and
xor
push
repnz
icebp
add
pop
sbb
add
testb
repz
mov
inc
pop
dec
pop
dec
pop
aas
or
sub
inc
inc
sbb
js
iret
adc
imul
outsl
dec
add
mov
pop
andl
cwtl
push
push
stos
loope
popl
nop
xor
adc
xchg
ficoms
xchg
in
fucomp
push
add
xor
pop
jns
or
orl
sub
dec
pcmpeqd
push
adc
test
test
sub
or
sbb
mov
aaa
pop
pop
push
xor
push
or
loop
inc
jae
mov
loop
xchg
pop
xchg
or
fsubr
orl
add
xor
rclb
js
andl
nop
dec
mov
jmp
sahf
or
xor
add
push
mov
hlt
push
and
add
or
adc
sbb
adc
xor
jge
adc
sbb
xor
add
cmp
loope
sub
loope
adc
add
iret
imul
push
xor
xchg
jo
or
sub
test
adcb
jge
sbb
xor
aas
aad
pop
jmp
mov
mov
aam
cli
jae
mov
int3
and
cli
push
cld
sub
push
fbld
pop
cli
test
pop
adc
inc
insb
shr
xor
xchg
out
inc
add
out
push
rorb
loope
fsts
or
adc
pusha
sbb
add
hlt
inc
sbb
mov
insb
std
adc
mov
cmp
addl
sbb
jno
andl
or
pop
insl
out
insl
or
or
movsl
push
pop
in
mov
hlt
sbb
xchg
or
or
sbb
sub
jmp
pop
adc
add
repnz
cwtl
sub
jns
inc
and
ja
sbb
push
int
dec
add
sub
push
fdivs
or
push
xor
xor
push
sbb
mov
pop
ret
das
and
in
xchg
mov
mov
mov
xorl
mov
rcll
push
adc
test
xor
adc
mov
push
mov
adcb
mov
push
add
adc
mov
inc
call
movsb
sub
push
add
mov
out
movb
mov
inc
and
lock
xchg
loop
pop
pop
adc
scas
sub
inc
jno
addb
jp
jae
lret
js
and
rolb
into
je
enter
push
push
imul
push
or
and
pop
mov
push
pop
leave
js
mov
push
mov
or
add
orl
idivb
addr16
push
inc
cmpb
aaa
ret
jbe
daa
insb
sub
enter
nop
push
xor
repz
sbb
or
xor
and
xchg
test
or
in
rorb
gs
inc
jo
repz
add
dec
sbb
dec
je
ret
and
ds
or
mov
push
out
fwait
scas
add
inc
int3
test
sbb
int
cmp
xor
cld
jmp
adc
nop
jo
dec
insb
mov
inc
cmp
inc
jge
fwait
push
popa
mov
addr16
adc
loope
mov
push
pop
jb
add
test
dec
insb
add
jl
and
jns
cmpsl
sbb
mov
pop
fs
or
addb
dec
fbstp
dec
fcomps
sub
xor
and
sub
inc
mov
les
fsubrl
aad
cmc
test
push
mov
sub
fucomip
repnz
pop
testl
sbb
add
xchg
dec
es
xchg
sbb
dec
mov
sbb
dec
test
jo
add
pop
xchg
adc
cmpsb
or
cmp
jle,pt
dec
push
fsubrp
add
and
sub
add
adc
xor
shlb
scas
add
jbe
push
out
or
pushf
scas
mov
cwtl
fldl
jo
add
loope
push
pop
and
cmp
insl
shl
out
divps
mov
adc
or
addr16
ret
out
cmp
ret
dec
ror
adc
dec
xchg
mov
cmpsb
add
or
mov
cmp
and
add
adc
das
jl
jae
inc
push
cwtl
inc
mov
pop
daa
fs
cmp
js
movl
xchg
inc
mov
or
cmpl
xchg
xor
mov
lea
mov
mov
imul
cmp
sbb
sbb
imul
mov
xchg
insl
dec
jmp
andl
jb
xorl
lret
add
pop
cmpl
adc
push
and
jle
ds
sub
daa
inc
fcompl
inc
adc
dec
push
mov
cmp
sbb
push
lret
mov
addl
adc
adc
adc
loopne
test
mov
mov
mov
or
stos
sti
jle
arpl
add
jno
lods
adc
popl
js
mov
in
daa
mov
xchg
push
dec
pop
push
lods
add
daa
cld
sbb
outsb
mov
or
lea
loop
cmp
add
or
sbb
adc
pusha
shll
in
mulb
inc
inc
shl
adc
adc
cmpsl
adc
adc
push
pusha
lcall
inc
nop
fs
jo
clc
push
xchg
cmp
loop
pop
nop
push
movsl
dec
push
cmpsb
addb
ret
jg
lcall
dec
ja
je
or
je
or
sub
adc
xchg
scas
andb
dec
jle
dec
push
or
add
adc
jne
sahf
cmp
negb
pop
add
jmp
cmp
movsl
test
bound
sub
cmp
inc
push
loop
loope
add
ja
mov
aam
cld
jnp
js
jbe
mov
sbb
xor
push
mov
lret
or
mov
pop
add
enter
js
cmpsb
or
add
inc
pop
sbb
push
pusha
dec
ret
pop
sbb
jbe
sbb
or
adc
mov
aad
loopne
shrb
loopne
mov
xor
xchg
pop
test
mov
pop
lcall
ret
push
dec
imul
dec
ja
test
loope
imul
or
adc
xor
subb
outsb
fcmovnb
mov
sarl
and
or
ret
push
adc
inc
dec
add
add
in
or
sbb
inc
popa
stos
mov
cmp
inc
enter
sbb
add
int3
mov
adc
and
mov
cmp
loopne
add
push
shr
push
push
or
and
adc
vpshuflw
mov
mov
fsubl
pop
lds
ret
out
je
push
test
xchg
idiv
inc
das
push
inc
cs
or
xchg
hlt
or
push
xchg
pusha
mov
xor
addl
push
les
sub
lock
mov
mov
pop
daa
push
or
pop
shr
ret
pop
lcall
push
mov
and
sbb
les
xchg
add
xchg
dec
push
dec
add
por
enter
mov
push
in
add
add
add
cmp
xchg
add
dec
cwtl
and
outsb
adc
mov
adc
add
popa
pop
add
idivl
mov
jne
sub
rcrl
leave
std
js
lods
jbe
ss
add
fcoml
je
dec
sub
in
push
jnp
ret
or
shl
fiadds
push
ret
pop
cmc
fcomp
xchg
data16
mov
inc
orl
or
mov
push
push
or
xor
cmp
mov
push
mov
xchg
js
xor
aas
sub
dec
les
add
ret
nop
les
dec
fs
fucomp
xchg
push
xchg
icebp
xor
dec
adc
inc
or
test
sbb
mov
aas
add
lods
or
sbb
or
mov
divb
out
fidivrl
stos
scas
std
decl
or
in
xchg
adc
jmp
cmp
inc
xchg
or
je
inc
and
inc
mov
jmp
dec
pop
jl
je
add
pop
xor
popa
mull
adc
outsb
push
mov
mov
cmpsb
sarl
sub
jne
mov
and
xor
push
adc
and
testb
dec
icebp
fcoml
loop
mov
ds
mov
sbbb
clc
pop
inc
sub
mov
arpl
pop
mov
dec
arpl
sbb
push
dec
ds
xchg
pop
sub
sbb
test
outsl
dec
and
sbb
je
daa
or
shll
fs
jmp
jb
clc
xchg
or
or
lahf
xchg
mov
pop
adc
cmp
ja
movsl
and
js
pop
popf
aam
lods
popf
jp
and
sub
loop
jne
sbb
test
and
push
jnp
sbb
xor
add
mov
inc
inc
fldl
mov
or
mov
adc
mov
adc
dec
push
addr16
add
or
fstpt
xorl
test
adcb
test
in
cmpsb
dec
cmp
in
scas
rclb
mov
xchg
push
jno
fimuls
leave
fcomps
je
rcl
add
pop
jo
rolb
adc
cwtl
imull
push
push
xchg
push
sub
lds
mov
push
inc
pop
jae
data16
xor
aaa
prefetcht2
xchg
in
mov
inc
push
dec
cmp
movsl
xor
dec
hlt
and
shlb
adc
incb
call
pop
adc
dec
or
mov
scas
add
mov
cmp
arpl
mov
mov
sbb
and
std
push
mov
mov
adcl
or
mov
add
adc
sub
or
out
or
stos
enter
inc
loop
mov
scas
push
stos
xor
les
dec
push
mov
add
and
cmpsl
jbe
and
mov
mov
fld
ja
outsb
sbb
sub
cmp
inc
js
pop
mov
push
lock
or
cmpsl
push
jmp
pop
sub
sub
xor
dec
mov
mov
stos
or
sub
add
and
ss
addr16
rcll
mov
inc
cmp
pop
jne
xor
adc
cli
inc
les
inc
xchg
int
pop
clc
jmp
mov
add
push
jne
test
xchg
or
push
push
or
js
je
xor
popa
add
sarb
dec
adc
push
js
jnp
or
jl
ds
lock
pop
das
push
sbb
xchg
jmp
std
xchg
jbe
cwtl
and
adc
mov
inc
xor
stos
icebp
dec
adc
and
lods
push
out
sub
adc
or
cmp
in
xchg
xor
cmp
mov
adc
cmp
push
cltd
data16
add
add
rcr
add
cld
leave
inc
adc
xchg
xchg
add
adc
and
divb
popa
das
sub
sub
and
jle
cmp
xchg
std
add
mov
adc
jbe
xor
lcall
ss
adc
mov
cmp
inc
pop
fsub
sub
mov
add
lcall
leave
adc
xor
add
mov
xchg
push
enter
push
sti
xchg
cmp
enter
sbb
cmc
or
add
mov
mov
test
sub
sbb
or
packssdw
lcall
jns
inc
push
dec
pushf
mov
cmp
xchg
fnsave
in
addr16
cmp
popa
jmp
dec
lods
repz
xchg
and
inc
lock
loope
cmpsb
cmpsl
test
jecxz
mov
adc
jmp
in
push
fcomp
std
jg
cli
add
or
or
in
jns
xor
cld
icebp
xchg
pop
add
sbb
adc
faddl
and
jl
addl
test
daa
sbb
mov
mov
adc
push
sbb
adc
pop
dec
cmc
push
mov
popf
add
in
dec
mov
xchg
loopne
fidivl
sti
and
mov
and
jmp
mov
lods
xchg
adc
pop
je
mov
inc
cmp
sbb
les
mov
std
mov
test
jno
or
cld
lods
mov
inc
bound
push
sbbb
sbb
add
xchg
adc
leave
call
subb
push
rcrb
sub
push
cmp
xchg
dec
sbb
sub
add
jp
jle
sub
jmp
xchg
mov
movb
inc
cwtl
add
clc
pop
mov
gs
stos
gs
dec
jp
cld
inc
xor
jmp
jo
leave
cli
fwait
outsb
lods
adc
push
cld
nop
je
sbb
or
popf
std
and
shl
xchg
inc
outsb
pop
adc
stos
cltd
push
jb
sbbl
add
je
xor
xchg
sbb
add
iret
adc
dec
jnp
arpl
sub
and
push
test
sbb
add
sbb
leave
adc
jns
xchg
add
repnz
jb
outsb
cld
ljmp
and
sub
or
lret
add
lret
cs
jne
lock
xchg
cmpsl
rcrb
push
xor
adc
sub
jb
mov
iret
and
xor
cmp
sahf
inc
push
inc
xor
cmp
push
inc
push
imul
jo
inc
xchg
sbb
iret
mov
jne
inc
out
iret
mov
inc
jne
dec
push
pop
ja
and
ret
gs
xchg
out
inc
push
sahf
out
or
insl
outsl
test
cmpsl
roll
dec
dec
jmp
int
mov
nop
xchg
push
push
push
lcall
rep
jg
push
pop
out
pop
and
jae
int
pop
das
pop
iret
pop
or
loop
sahf
inc
cmpb
mov
adc
pop
decl
call
addl
xchg
push
and
std
mov
adc
mov
push
popf
jno
test
mov
pop
adc
and
sub
cmp
jo
pop
pop
push
sub
xor
movsl
leave
jl
lret
xchg
pop
jbe
rorb
mov
xchg
movsl
movsl
push
sbb
rclb
movsl
push
movsl
jb
jae
pop
xchg
push
xchg
or
iret
push
adc
rcrb
int3
outsb
pop
xor
add
pop
adc
inc
sbb
adc
faddl
ucomiss
adcb
jg
or
iret
dec
je
cltd
faddl
inc
in
jl
sbb
call
or
inc
in
ljmp
mov
rorb
and
xchg
lahf
out
push
testb
cmp
or
pop
dec
cmp
push
jmp
or
loopne
js
push
pusha
add
mov
xchg
loopne
loop
add
jb
lret
cmp
jne
cmc
add
loope
sahf
rolb
imul
xchg
push
sahf
std
lcall
das
adc
add
sub
ret
jmp
fcoms
jl
popf
cmpb
add
push
pop
out
int3
mov
jne
lods
sbb
pusha
pop
pop
fs
push
or
pushf
xlat
aaa
add
popa
lret
loopne
sub
pop
andb
add
sbb
loopne
mov
ret
mov
mov
push
call
xlat
xor
mov
mov
push
adc
dec
or
cmp
loopne
rcrb
jae
movsb
out
dec
rclb
mov
ja
add
mov
fdiv
out
push
adc
adc
mov
push
push
add
push
pop
jb
mov
or
out
jbe
push
lahf
pusha
jecxz
adc
xchg
cmp
jl
lcall
dec
or
jg
cmc
push
fstl
stc
add
clc
jne
sbb
or
adc
add
ja
mov
das
pop
sbb
in
rclb
mov
add
test
xor
push
jmp
dec
or
push
dec
test
push
sbb
stc
fs
je
add
call
jb
orl
xchg
incb
fs
ja
dec
aas
insb
popf
call
cmp
call
cwtl
or
jmp
jae
and
in
xchg
pop
rcrb
gs
fstl
les
cmp
sbb
imul
sbb
test
repz
aaa
xchg
les
loopne
inc
dec
sbb
clc
cmpb
adc
push
mov
sbbl
jns
inc
mov
daa
clc
ret
lock
xlat
sub
jge
adc
jb,pt
or
dec
mov
or
and
cltd
mov
pop
addb
andb
push
mov
inc
lds
and
dec
enter
aaa
xchg
aad
cld
ja
dec
mov
mov
test
or
inc
mov
dec
cmpsb
adc
push
sub
cwtl
dec
add
sbb
jns
movsb
add
pop
fwait
jp
jae
xor
es
out
dec
cmpsl
mov
repz
push
pop
outsb
add
in
mov
cmp
nop
pop
xor
jbe
shll
push
leave
push
xor
pop
or
push
in
xchg
pop
fwait
add
cmp
fnstcw
jno
outsb
fnsave
outsl
jno
dec
or
arpl
adc
inc
xor
enter
jns
bound
sar
push
xchg
push
daa
inc
mov
sbb
xchg
sub
xor
add
adc
mov
push
dec
stc
add
test
push
insl
sbb
xchg
push
sub
jo
lahf
mov
out
dec
cmp
push
cmp
or
sbb
push
pop
pop
jmp
inc
pusha
dec
adc
cs
testb
test
push
xchg
xchg
ss
push
or
sub
cmpb
push
aad
imul
in
std
xchg
pusha
or
mov
mov
ljmp
xor
and
inc
xor
and
lock
mov
sub
repnz
xchg
std
aaa
aas
ja
dec
push
in
push
pop
inc
adc
pop
int3
mov
push
sbb
fistl
xchg
lahf
movsb
jno
js
jne
das
add
pop
andl
add
loopne
fisttpll
scas
leave
imul
inc
jnp
rol
sub
push
stos
call
aam
insl
cld
je
outsb
xor
pushf
jbe
jb
pop
xor
cld
aaa
loopne
sbb
sarl
xchg
mov
lcall
sub
mov
or
xchg
jl
lret
jp
mov
jbe
out
mov
popa
mov
sub
push
push
dec
pusha
sbbb
add
xor
sbbl
lds
or
fadd
push
push
adc
ss
loope
adc
xchg
add
xchg
add
push
sub
or
fdivrl
cmp
lea
jo
mov
push
lea
mov
pop
lcall
push
xchg
pop
adc
and
xchg
shrb
or
cmp
arpl
add
inc
push
adc
cmp
adc
add
sub
add
nop
or
lret
jecxz
jp
inc
or
adc
rcr
or
sbb
arpl
out
iret
stos
adc
dec
stos
inc
sub
ficomps
adcb
push
or
sbb
inc
into
or
je
int
sub
dec
mov
push
xchg
mov
mov
imul
jbe
cli
adc
fisubs
push
add
sbbl
movsl
jne
fcoml
pop
int3
test
and
mov
xor
sub
data16
add
xchg
insb
pop
jmp
add
jo
adc
push
mov
xorb
add
push
lods
mov
mov
pusha
push
mov
push
adc
add
cmp
sub
rcll
test
decl
stos
insb
loopne
mov
mov
and
sarb
sub
sbb
add
sbb
add
cmpl
jb
add
xchg
jo
dec
clc
rcrl
xchg
imul
push
and
push
dec
mov
xchg
call
mov
test
cmp
sbb
loop
xor
push
mov
je
jno
je
push
adc
cmp
push
jne
sub
and
mov
adc
sbb
les
enter
add
cmp
ret
xchg
dec
sbb
dec
jecxz
add
sub
repnz
adc
add
ljmp
xor
pop
loop
jl
push
clc
ja
sbb
sarl
pop
iret
fwait
mov
cs
push
fsubr
data16
pop
test
loop
jge
pop
stos
mov
shrb
pop
add
das
inc
and
mov
sub
lea
daa
add
push
pop
pop
inc
inc
cmp
inc
imul
test
test
es
cmp
inc
mov
or
mov
leave
nop
sbb
popf
add
repnz
lock
shlb
sahf
pop
inc
jnp
cmp
adc
movlps
jns
rolb
inc
sbb
dec
das
mov
fs
hlt
add
mov
sub
test
jg
mov
sahf
jg
clc
scas
add
ret
mov
xor
cltd
pop
mov
sarb
dec
clc
push
dec
cld
fists
shrl
shr
not
in
sbb
dec
rolb
imul
gs
mov
fmuls
es
xor
push
lock
jne
inc
inc
jbe
mov
hlt
addr16
inc
repnz
scas
aas
cld
out
sahf
divb
sub
jns
rcrl
jne
or
cmpsl
jns
cmpsl
inc
dec
inc
pusha
dec
sbb
lcall
test
add
adcb
push
lret
shl
add
jg
or
inc
add
xchg
push
sbb
iret
fnstcw
mov
js
xchg
add
decl
push
adcb
add
or
or
je
icebp
xor
mov
pop
xor
mov
and
add
sbb
mov
adc
push
push
pop
movl
adc
or
dec
rcrl
inc
push
pop
jne
outsb
xor
inc
jmp
or
mov
subb
icebp
fs
dec
push
incb
sahf
sbb
sbb
dec
cmp
jo
shrl
mov
hlt
cmp
jge
cli
and
call
mov
outsb
sti
push
jns
shll
inc
orl
dec
mov
and
sub
es
cmp
cmp
push
mov
push
mov
xchg
insb
or
inc
repz
pop
add
push
xor
jle
dec
sub
inc
cmp
jecxz
push
push
cvtps2pi
daa
mov
ljmp
popf
inc
bound
fildll
pop
mov
mov
in
mov
mov
and
dec
sti
rep
rolb
mov
cmpsl
lods
pop
or
sbb
jmp
sub
jae
mov
shlb
add
mov
sbb
andl
aam
dec
jnp
and
jne
push
sub
pop
and
inc
push
push
mov
jecxz
data16
push
push
mov
add
pop
loopne
adc
nop
data16
push
push
push
and
adc
push
ret
pop
adc
add
out
pusha
aas
mov
mov
imulb
cmp
in
adc
data16
cs
insl
push
xor
mov
and
jo
gs
jno
xchg
sub
xchg
lock
xor
or
js
ficomps
loope
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
mov
orb
data16
data16
sbb
pop
xchg
push
push
int3
dec
roll
add
lock
adc
aas
mov
push
dec
sbb
out
push
insb
shlb
or
mov
jle
or
jo
adc
decl
insb
in
dec
xor
fwait
xor
xchg
push
aam
call
and
mov
adc
mov
add
loopne
add
cmp
push
sbb
rolb
rolb
sbb
sbb
and
sarb
xchg
jge
add
loopne
mov
shlb
push
adc
push
loope
sbb
add
push
int3
addr16
cmp
dec
test
add
sub
push
add
mov
movups
ret
xchg
pusha
loopne
mov
dec
js
icebp
or
add
inc
je
out
adc
add
push
add
push
add
jg
adc
inc
pop
jnp
aaa
shlb
pop
mov
jno
xor
jnp
and
dec
clc
xorb
ret
es
sbb
lea
out
adc
shrl
lock
dec
adc
mulw
inc
cmp
xorb
test
or
inc
or
aam
rorb
jg
cmp
mov
sar
add
or
or
mov
lcall
inc
stos
dec
dec
jg
popa
or
mov
xor
jecxz
cmp
sbb
es
scas
lea
xchg
add
sbb
push
or
test
jnp
push
ficomps
ret
sub
add
sahf
ja
test
sub
mov
nop
pusha
adc
leave
cmpb
or
push
xchg
je
fsubrl
int3
shrl
test
dec
mov
incb
cs
lock
adc
popl
pop
push
adc
sbb
fisttps
insl
nop
jecxz
lock
mov
lods
jge
notb
je
push
shlb
lods
sub
or
in
inc
enter
jl
jno
sbb
xor
mov
test
jle
mov
jbe
pop
sbb
mov
insl
loop
jne
pushf
sbb
adc
adc
test
in
cmpsb
je
adc
pop
mov
pop
enter
and
adc
dec
sbb
jle
mov
jmp
dec
ss
mov
fisubs
jne
sub
outsb
sar
and
mov
jae
adc
sbb
mov
jb
fcompl
ror
push
idivb
dec
hlt
jae
or
add
jb
or
push
ret
mov
cmp
ss
daa
bound
push
or
pop
inc
inc
push
dec
and
push
sub
cli
sub
loop
int
push
enter
add
mov
xorb
sub
push
cmp
mov
cltd
subl
push
cltd
sbb
js
xchg
sbbb
push
mov
gs
xchg
add
jno
cmp
cmp
pshufw
sbb
sbb
ret
insl
popf
mov
pop
push
dec
aam
paddsw
xchg
jne
dec
scas
cmpsb
pop
fdivs
xchg
sub
adc
pop
pop
out
jmp
sbb
jbe
clc
out
call
and
or
or
insb
outsb
shll
call
daa
mov
mov
push
push
pop
cmp
xor
cwtl
ds
incb
test
and
nop
scas
sar
jne,pn
adc
daa
or
insb
jb
sub
and
add
sbb
in
or
and
and
and
mov
insb
ja
xchg
adc
ja
jb
nop
adc
arpl
or
bound
ja
xchg
arpl
jmp
mov
sub
cmp
and
adc
add
adc
andb
or
js
jge
imul
popa
movsb
cmp
push
arpl
addr16
xor
imul
je
pop
fisttps
call
sbb
or
sub
adc
sbbl
inc
in
mov
jmp
cs
sub
push
sub
sbb
push
fwait
and
xchg
int3
push
and
int
sbb
test
inc
ja
aas
cltd
xchg
xchg
or
outsb
call
add
and
push
xor
dec
push
fs
dec
push
hlt
sub
push
fs
daa
cwtl
fs
push
fs
sub
xchg
mov
movsb
sti
jl
or
das
jmp
cmp
inc
push
cmpsb
xor
cmp
test
test
dec
sub
xor
add
pop
mov
mov
jge
sbb
lea
leave
jmp
sbb
cld
or
in
inc
push
cltd
mov
adc
add
mov
adc
push
adc
or
pop
sbb
popa
xor
sbb
cmp
push
ja
adc
or
jne
dec
into
inc
pop
rclb
mov
clc
shlb
lods
jne
or
sub
pop
ljmp
popf
xor
and
adc
xchg
or
adc
fldl
mov
daa
loop
mov
pop
mov
lds
jns
mov
movsl
inc
mov
cmpsl
jge
cmpsl
shl
fimuls
enter
jmp
xor
loopne
sarb
shr
aam
sbb
pop
add
mov
adc
push
push
ret
loope
leave
push
push
jo
pop
add
mov
hlt
mov
and
mov
and
lock
inc
pusha
stos
dec
or
xchg
add
xor
sbbb
fldenv
pop
cmp
stos
jno
pop
add
mov
pop
add
xchg
rcll
sbb
shlb
pusha
insl
add
lock
pop
jp
punpckhdq
sbb
add
cmp
add
jne
sub
or
adc
mov
mov
bound
dec
aaa
mov
lock
adc
js
and
jno
jno
pusha
inc
and
popa
outsb
mov
or
adc
add
pop
adc
and
or
cmc
mov
daa
xor
out
push
or
adc
test
pop
rclb
jl
test
and
testb
je
push
jne
xchg
out
mov
jmp
cmp
sbb
mov
ja
ja
jmp
sbb
lods
jmp
dec
xchg
jmp
divb
xor
jne
cmp
jmp
pop
jo
jnp
or
jmp
or
mov
adc
inc
mov
xchg
es
cmp
or
xchg
fwait
jge
jp
rcrb
outsb
jno
sub
or
sahf
test
xorl
mov
jns
insl
pop
pop
pop
sti
inc
add
mov
sbb
ds
icebp
adc
mov
and
adc
insb
mov
mov
push
or
sub
dec
js
and
into
mov
xor
repz
or
nop
mov
mov
and
cmpb
xor
lret
push
mov
push
and
mov
pop
mov
aam
popf
inc
lods
and
cmp
inc
xchg
sub
call
inc
mov
jo
xchg
push
sub
clc
fsubl
lcall
cs
push
mov
cmp
aam
lret
dec
adc
addb
xor
cwtl
jmp
and
addb
add
cmpsl
push
lret
stos
mov
jnp
dec
inc
jns
rorb
mov
add
xor
pushf
inc
sarb
push
movsl
jne
fdivr
aam
add
fcomps
insl
les
pop
xor
icebp
fwait
push
scas
stos
scas
fistl
inc
inc
fdiv
into
mov
or
dec
pop
push
push
jl
cmp
pushf
cwtl
or
pop
and
jb
enter
or
push
push
popa
mov
dec
pop
clc
jl
mov
adc
inc
imul
lods
adc
test
or
jmp
lahf
adc
adc
inc
dec
pop
push
mov
add
call
push
sbb
out
and
pop
loopne
scas
jmp
or
push
outsb
mov
fstl
ljmp
pop
pusha
inc
mov
inc
fldl
jp
pop
loope
ret
add
popa
jg
and
pop
sbb
lea
or
dec
cmp
adc
push
xchg
xorl
shlb
shr
push
xchg
sub
ja
and
jb
loop
dec
ljmp
movl
push
push
mov
rorb
or
jae
js
dec
stos
mov
and
lahf
lock
inc
or
dec
push
add
clc
repnz
xchg
test
jl
pop
adc
cmp
je
inc
mov
xchg
shrb
or
shrb
sbb
outsb
das
pop
jl
loope
das
clc
mov
test
xchg
sbb
bnd
lea
adc
popf
jl
inc
in
lock
jne
ret
stc
push
es
sub
cmc
test
xchg
pushf
mov
int
jmp
xor
sub
cmp
repnz
pop
or
lock
repnz
in
daa
loopne
jmp
nop
push
test
loopne
aaa
inc
mov
out
add
pop
shll
repnz
pop
shl
cmp
xor
push
pop
push
xor
dec
ss
or
sub
ss
dec
movsl
aam
dec
jae
test
add
imul
push
insl
push
push
lea
test
pop
inc
sub
mov
xchg
mov
xchg
movsb
pop
rorl
cwtl
sub
lret
popa
add
add
sub
jbe
adcl
adc
fldcw
mulb
fmull
test
mov
fs
mov
or
rorb
outsb
dec
sbb
jo
sub
mov
sbb
negl
or
or
pusha
push
lods
inc
inc
arpl
inc
cmc
sub
rorb
test
add
add
cwtl
cmp
setl
jno
jbe
andl
push
dec
nop
or
mov
mov
or
xor
lea
xor
fdivr
ja
mov
sub
mov
lock
push
outsl
loopne
sbb
xor
inc
inc
je
push
add
xchg
and
data16
fdivl
fsubrl
outsl
lahf
push
das
repnz
xchg
jp
xchg
xchg
xchg
adc
cwtl
adc
arpl
sbb
add
cmp
and
stos
mov
dec
pushf
in
push
xor
jb
adc
sbb
xor
xlat
and
adc
aas
sub
or
lahf
rol
mov
push
test
dec
int3
dec
push
test
pop
xchg
dec
call
push
or
scas
mov
insl
pop
pop
lods
addr16
or
or
sbb
dec
inc
mov
xor
iret
push
jno
adc
sub
cmp
fimuls
xchg
sub
enter
xor
sbb
push
adc
adc
dec
jnp
inc
ljmp
hlt
out
push
sbb
add
xor
push
cs
cs
mov
pop
sbb
test
mov
push
ljmp
xchg
or
call
push
out
push
mov
add
rolb
inc
add
xchg
push
orb
out
cmp
sub
cmpsl
mov
mov
mov
add
add
aas
and
je
xchg
cmp
insl
loopnew
pop
jecxz
sbb
stc
pop
cmp
xlat
dec
mov
in
lods
push
push
mov
push
mov
jmp
popa
bound
or
stos
iret
add
mov
hlt
xchg
sbb
and
sub
and
jmp
test
fcoms
and
sbbl
orl
xor
xchg
xchg
ja
pop
sub
add
arpl
sub
mov
mov
jno
jp
inc
or
imul
xchg
arpl
insb
xchg
lea
cmp
sub
mov
pop
or
js
push
sub
ret
push
inc
adc
insl
adc
sbb
lods
mov
pop
mov
pushf
and
inc
jb
jmp
push
xor
mov
ret
cmp
push
into
int3
dec
inc
and
pop
add
fisubl
xor
inc
imul
or
cld
mov
enter
or
rolb
jo
sbbb
xbegin
roll
imul
xor
repz
mov
mov
push
das
add
cld
loop
ds
je
adc
cmp
sub
push
pop
sub
jl
lock
jnp
repnz
jo
pop
mov
nop
adc
pushf
loope
lea
pusha
xchg
push
adc
jp
test
push
sub
jp
sbb
mov
jo
fdivrl
outsl
jns
mov
cmpsl
lea
testl
dec
and
and
loopne
rclb
mov
mov
and
pushf
push
mov
inc
cmp
jmp
inc
nop
rcrb
mov
mov
fidivl
lea
adc
adc
mov
mov
pop
rcrb
mov
push
js
fcompl
cmc
mov
repz
adc
push
xor
stc
jbe
pop
mov
sub
mov
test
jmp
outsl
push
iret
sbb
cmp
xor
jns
aam
jge
mov
dec
add
jo
xlat
mov
roll
cmp
sahf
xor
cmp
and
mov
mov
or
xor
and
jne
pushl
fisttpll
adc
shl
lcall
xor
aad
or
pushf
or
lea
sbb
push
lahf
sub
test
cmc
pop
lock
pop
dec
in
cmp
andl
mov
lods
mov
mov
sub
adc
inc
call
movsb
mov
je
orl
add
jmp
stos
jg
pop
or
aas
push
pop
jo
cltd
les
push
fildl
pop
jns
outsl
xlat
push
push
repz
mov
jge
ss
mov
or
sbb
rcrl
push
xchg
inc
rcr
ret
push
movsl
and
daa
and
test
push
arpl
add
mov
icebp
add
xlat
ret
push
xor
sub
filds
add
and
xlat
or
mov
loope
add
out
pushf
mov
shll
mov
cmp
test
lds
aad
jae
adc
fildll
ljmp
dec
dec
test
pushf
xchg
mov
cmp
or
lds
fnsave
cli
fnstsw
jp
cmp
mov
xorb
inc
or
pop
xorl
sub
incl
lods
loop
gs
pop
inc
inc
inc
inc
push
jl
rcl
and
cwtl
xchg
out
lds
dec
cmp
pushf
in
cmpl
enter
push
in
adc
jns
lods
insb
mov
idivb
dec
sub
dec
add
repz
call
repnz
xchg
push
add
int3
xchg
and
push
mov
dec
lret
pop
jecxz
mov
es
sub
stos
add
es
dec
dec
jns
pusha
mov
add
dec
loopne
adc
or
add
and
inc
push
sub
test
adc
adc
mov
sarl
mov
inc
fdivl
or
adc
mov
cmpsb
in
lods
icebp
sbb
jae
or
mov
aaa
scas
nop
add
or
lock
cmp
cs
test
decb
pop
scas
shrd
inc
loope
jl
in
or
es
outsb
lock
fs
cmp
cmp
sub
sub
imul
sbb
push
lock
sti
nop
adc
leave
ss
mov
or
in
dec
fs
xchg
sarl
aam
hlt
lret
hlt
mov
fs
add
pop
push
nop
ret
cmpsl
pop
or
cld
cmp
pusha
std
adc
cmp
je
movsb
ljmp
je
imul
hlt
cli
jmp
sbb
mov
mov
ja
sbb
cmp
jg
lods
insl
mov
outsb
adc
ret
jbe
or
fisubrs
outsb
add
push
jge
push
adcl
push
fucom
sti
xor
outsb
fisubs
pop
bound
gs
mov
pusha
xor
inc
mov
lock
inc
jmp
in
jmp
fmull
jge
cmpsb
dec
cmp
ja
mov
mov
shlb
js
sbb
sbb
xor
jns
andl
jmp
inc
jo
add
pop
pop
jns
addr16
and
jne
add
mov
lds
add
iret
add
xchg
or
sbb
sub
into
test
lock
sub
js
dec
lret
jmp
pop
cmpsb
test
movsl
adc
test
sub
adc
mov
or
and
sub
push
loopne
adc
pmulhw
mov
sbb
xchg
dec
call
or
push
inc
ret
adc
jl
add
movsl
mov
rcrb
fcoml
es
jmp
sub
mov
dec
sbb
in
sub
popf
lret
push
cli
fdivl
data16
cmc
je
loop
aam
sub
push
sub
mov
test
mov
add
leave
pop
push
rolb
scas
or
in
fs
dec
xor
xor
push
cmp
popa
fsubr
push
fcomp
sbb
xor
and
rcrb
mov
pop
test
imul
andl
nop
inc
outsl
or
or
popa
push
pop
fisttps
mov
adcl
repnz
imul
dec
rclb
pop
leave
mull
xor
in
out
add
into
loop
aaa
xorl
das
mov
addb
outsl
xlat
xchg
add
pop
fcoms
das
lock
cmp
stos
mov
test
pshufw
movl
xor
lcall
and
pop
outsl
add
lds
add
test
adc
in
leave
aam
leave
flds
sub
rcl
pop
xor
inc
psubusb
test
js
push
add
mov
jl
sbb
cwtl
cli
pushf
shlb
insb
mov
mov
test
out
inc
loopne
insb
out
inc
test
xchg
xchg
and
adc
mov
enter
fwait
mov
imul
iret
push
lock
push
jns
dec
sbb
adc
test
rorb
mov
test
pop
dec
push
mov
sub
and
dec
push
mov
dec
cmc
adc
andl
mov
pop
mov
iret
cmp
or
inc
and
pop
shrb
pusha
and
cmp
orl
and
daa
dec
fcompl
xor
xor
mov
cmp
gs
pop
cmp
cmp
xchg
sbb
mov
xchg
shrb
mov
sub
add
popf
sub
gs
sti
sub
add
cmp
xchg
arpl
mov
sbb
sbb
lret
pusha
add
or
add
jp
push
es
mov
popa
inc
xchg
call
push
sub
cmovno
call
mov
mov
push
add
cmp
inc
les
sub
sub
outsl
mov
dec
lods
cmp
add
cmp
nop
fs
or
test
divb
dec
xor
loop
xchg
xor
shr
mov
push
movsl
mov
mov
mov
pop
or
inc
idivb
pop
in
fildll
cmp
call
add
or
add
jmp
add
dec
cmpsl
outsb
mov
ret
and
fdivs
add
inc
movsb
inc
or
in
adc
mov
cwtl
adc
aam
add
sub
dec
enter
arpl
mov
leave
sgdtl
fsubrl
popa
movsl
mov
or
cmp
insl
gs
mov
in
ret
scas
mov
push
dec
je
imul
in
push
fists
or
push
or
adc
xor
idivl
add
mov
pushf
dec
jl
scas
stos
dec
jl
fidivrl
jp
sbb
aam
cmc
and
mov
les
hlt
inc
dec
fs
cmp
sub
sub
pop
imul
pop
pop
mov
call
loopne
xchg
jb
testl
jp
jns
xor
fcompl
inc
enter
cwtl
arpl
inc
xchg
outsl
adc
nop
xor
jg
cmpsb
sahf
ljmp
ds
je
leave
mov
jmp
mov
add
into
add
xchg
mov
aas
cmpb
add
les
sbbl
jge
inc
je
mov
aas
cltd
test
sub
jmp
jb
or
faddl
pop
je
fcoml
adc
mov
add
mov
les
mov
in
shlb
dec
push
add
sbb
cmp
arpl
mov
repz
cwtl
jl
popa
repz
xorb
ljmp
nop
jge
std
and
dec
loopne
in
push
int3
movb
xor
add
ret
popa
mov
add
inc
mov
xorb
xor
jle
or
inc
stos
addr16
add
or
jne
pushf
fisttpll
mov
std
ljmp
push
pop
ss
xchg
ljmpw
or
jp
incb
jb
fidivrs
cmpl
push
femms
cmp
xor
sub
mov
and
dec
lds
adc
jmp
mov
pop
inc
adc
rol
push
push
push
mov
mov
adc
sub
test
mov
repz
push
pop
psllw
out
adc
cmp
dec
xor
inc
or
jb
mov
mov
push
cmp
sbb
lcall
rol
out
inc
mov
lcall
mov
push
repnz
jg
sti
add
dec
xor
add
inc
fdivs
aam
mov
test
aas
sbb
pop
and
cmp
add
add
test
loopne
and
or
xor
cmp
mov
jmp
lcall
iret
in
pop
and
push
xor
lods
test
and
lods
lea
jge
push
push
pop
stos
cmpb
pop
insb
mov
push
xchg
outsl
adc
popa
frstor
fidivs
sti
and
jno
hlt
add
lock
loopne
pop
mov
push
jno
inc
arpl
cli
ret
pop
inc
test
or
cmpsb
xor
push
jmp
add
repz
mov
mov
and
add
adc
lds
push
push
into
idivb
pop
mov
push
add
mov
mov
pop
jge
pop
nop
aaa
insb
out
mov
push
add
xor
xchg
jne
call
push
inc
mov
lds
mov
lret
push
add
sbb
pop
dec
enter
jl
add
hlt
add
jnp
and
test
mov
lcall
push
pushf
add
and
push
lcall
mov
setne
dec
lea
jo
int
sahf
lods
sub
movsb
test
mov
mov
mov
in
mov
sahf
adc
sahf
out
or
sub
inc
faddl
pusha
insl
jmp
loopne
std
cmp
add
xor
test
out
jns
loopne
es
push
lods
call
nop
pusha
aas
lahf
mov
add
jbe
push
lret
orb
sarl
mov
test
orl
adcl
inc
inc
sahf
cwtl
addl
pop
shrb
and
mov
xchg
jl
inc
push
xor
jl
xor
adc
popf
push
add
and
xor
js
rclb
push
adc
mov
scas
shlb
add
add
test
test
lret
mov
mov
icebp
into
mov
adc
inc
fwait
xor
adc
js
dec
cmp
mov
push
adc
ret
loop
les
fnsave
je
sbb
pushl
hlt
orb
jne
push
mov
push
fdivs
jmp
loopne
or
jo
ds
sub
or
sub
mov
mov
cltd
and
pop
shll
orb
bound
xor
mov
dec
mov
push
inc
cmp
sahf
ja
mov
or
mov
scas
xor
mov
mov
sub
mov
movsb
mov
clc
sub
into
mov
dec
into
mov
orl
shl
movsl
cmp
loopne
cld
test
push
aaa
mov
sbb
jbe
ljmp
test
sub
and
jo
fsubrl
orl
adc
or
mov
jge
push
adc
iret
push
js
psllw
jp
test
test
js
dec
imul
out
gs
rolb
aaa
jo
push
push
xor
outsl
decl
adc
push
sbb
push
mov
mov
mov
rclb
push
jmp
mov
adc
sub
imul
jmp
pop
rcrb
mov
das
pop
out
dec
jo
lods
xor
push
les
add
mov
addr16
jl
mov
inc
dec
pop
sub
icebp
bound
ret
and
mov
fisttpll
push
imul
jecxz
push
adc
sub
popf
pop
jo
inc
ret
and
mov
mov
lea
mov
adc
pop
int3
pop
in
filds
xchg
jmp
pop
andl
mov
pop
insl
bound
dec
loopne
or
sahf
loope
pop
mov
mov
adc
mov
add
xchg
in
repz
and
pop
mov
insl
stos
cmp
jl
dec
lods
pop
mov
jne
pop
and
add
outsb
push
stos
jno
mov
mov
push
adc
js
and
in
push
jle
cs
sbb
roll
adc
mov
jbe
sarb
call
pop
add
arpl
xchg
push
aad
daa
cmp
sbb
cmp
repz
aam
add
adc
inc
int3
nop
sbb
cmp
mov
mov
pop
mov
or
mov
shll
pop
mov
enter
hlt
lock
lock
pop
and
fisttpll
xchg
movsl
std
mov
push
push
movsl
out
faddl
fstl
push
fs
mov
loopne
rcr
fistpll
fldl
pop
fsubr
pop
faddp
andl
sbb
fdivrl
add
sub
das
pop
mov
or
mov
cmp
adc
jo
lods
dec
sbb
addb
mov
arpl
hlt
push
aaa
mov
xor
dec
mov
rcrl
and
fstpl
xor
inc
xor
add
cld
jge
bsf
iret
sub
push
mov
pop
test
or
pop
jbe
pop
jmp
add
into
mov
ret
adc
sbb
flds
daa
loopne
inc
out
or
jmp
pop
fsubrl
cld
dec
mov
int3
dec
sbb
mov
lock
push
mov
bound
jne
pop
addr16
ja
sub
mov
add
and
add
mov
cmp
jmp
mov
cmp
jge
and
mov
jmp
pusha
dec
or
or
popa
xchg
movl
ss
mov
jmp
pop
daa
sub
sub
mov
adc
in
inc
and
orl
or
cwtl
sub
jg
mov
jne
push
push
lret
ljmp
das
adc
pop
in
add
inc
fldl
or
imul
inc
inc
cmpsb
ljmp
add
sti
arpl
dec
jns
mov
mov
call
dec
cmp
ret
mov
movsb
icebp
and
or
mov
lret
jbe
pop
rclb
xchg
jno
jo
jmp
out
sub
xchg
sub
push
cli
sub
outsb
adc
fcoms
add
lock
inc
or
ret
mov
add
shlb
or
decl
inc
adc
fwait
addl
mov
xchg
es
lea
inc
inc
push
xchg
sbb
mov
cmc
nop
testl
and
mov
push
adc
xchg
dec
mov
jecxz
cltd
pop
test
add
mov
mov
in
arpl
push
add
in
outsb
arpl
arpl
mov
mov
fstpl
inc
cltd
mov
dec
sbb
jp
and
add
sub
sub
jp
push
add
lock
stos
rol
cmp
fsubs
shlb
inc
adc
lret
push
mov
push
mov
push
push
dec
lods
and
cs
inc
inc
js
mov
ret
inc
insb
add
sub
adc
enter
or
inc
or
mov
fsubl
mov
ret
loopne
jl
imul
ljmp
arpl
add
mov
or
mov
push
dec
xchg
add
addb
fmuls
jno
add
or
nop
xchg
xchg
test
adc
mov
push
cs
lret
and
mov
sub
pop
enter
dec
stos
and
imul
push
lea
xchg
clc
and
sub
shl
imul
imul
and
lock
cmp
loop
bound
repz
lock
dec
xchg
gs
or
xor
sub
adc
xor
fwait
test
inc
scas
stos
enter
xchg
dec
sbb
inc
xor
push
sbb
out
enter
and
in
and
adc
les
stc
fsubrl
shrb
inc
inc
xor
insl
xor
or
rolb
mov
aaa
xor
fldl
sub
mov
cmp
sub
in
mov
xchg
xchg
popf
in
inc
addl
shlb
mov
in
inc
inc
and
das
shlb
mov
push
lods
jmp
jg
not
push
or
sbb
mov
or
add
repz
enter
lret
cmp
jge
cmp
les
ret
test
test
pop
shrl
popf
insl
adc
outsl
das
leave
add
std
dec
ret
lods
es
adc
sbb
dec
xor
adc
dec
adc
add
test
ret
push
xlat
ljmp
in
xor
ret
mov
sbb
dec
push
jecxz
jo
dec
dec
mov
xchg
pop
adc
and
add
cli
aam
add
cmp
sub
push
or
xor
and
add
jecxz
add
mov
pop
add
xor
loopne
inc
or
roll
jp
aaa
shrb
rolb
call
jle
lock
movb
and
mov
add
popa
cwtl
cmc
rcll
in
jmp
cmpl
mov
add
jge
addb
inc
fbstp
subb
mov
loop
inc
mov
test
dec
loope
mov
xor
xchg
sbb
loope
cltd
pop
loop
in
sbb
rorl
xchg
test
jb
pop
sub
repnz
sbb
cmp
test
andb
inc
adc
enter
xor
inc
inc
push
or
or
lods
fwait
push
mov
or
xor
push
lcall
add
or
sub
or
dec
mov
mov
or
push
inc
push
inc
or
mov
ds
test
rcrl
les
or
test
xor
or
in
aas
lea
mov
push
pusha
adc
inc
push
or
rol
sbb
jne
loopne
push
lret
lock
clc
pop
pop
jnp
sub
mov
fld
fwait
dec
xor
pop
add
or
cmp
push
setl
xor
idivb
or
jnp
add
inc
sub
xchg
js
aaa
orl
mov
pop
mov
mov
or
shrb
sarb
xchg
ret
je
call
push
push
fistpll
into
daa
mov
mov
add
cmp
sbb
mov
pop
fsubr
aam
xor
add
les
cmpsl
push
push
stc
sbb
and
xor
add
mov
inc
push
in
in
subl
fmuls
xchg
push
push
loopne
int3
mov
mov
push
push
add
add
roll
inc
lcall
sbb
push
out
and
enter
sub
dec
adc
inc
js
rcrb
push
add
pusha
sarb
std
shll
enter
fstpt
test
lock
push
stos
je
add
pop
cmp
ret
sub
and
clc
jl
and
sub
int
xor
dec
sbb
rcrb
repz
loopne
rorb
pop
dec
add
dec
leave
xchg
popa
sbb
fwait
repz
and
les
add
push
les
nop
or
pop
repnz
and
sbb
dec
cmpsb
ss
lcall
sbb
xchg
xchg
dec
aaa
sarb
xor
and
pop
jne
add
cmp
sarb
scas
ljmp
pop
ljmp
pop
pop
push
push
test
stc
cmc
adcb
insl
bound
jnp,pn
ficoms
xlat
add
push
jb
enter
and
leave
or
leave
les
idivl
pusha
xor
push
push
add
or
sbbb
mov
loopne
out
add
adc
cld
push
pop
push
push
add
push
hlt
jge
inc
or
or
sub
shl
addl
xlat
call
cld
shlb
sbb
dec
sbb
int3
mov
enter
sub
inc
xchg
mov
outsb
inc
in
in
loopne
and
jo
leave
int
add
xor
cmp
mov
pop
ret
add
jo
and
rcll
aaa
add
popa
test
dec
fstl
sub
cmpsl
cmpsb
ja
cmp
in
scas
jecxz
fabs
rolb
pop
rol
fcomps
mov
shrl
int3
sub
test
in
and
lods
daa
sbb
sbb
outsb
clc
mov
adc
inc
and
icebp
inc
or
pop
jnp
ds
xor
or
xchg
jno
das
enter
jne
mov
lahf
mov
or
movsb
lret
cli
pop
xchg
gs
xchg
push
dec
je
fisubrl
pop
adc
adc
jo
sbb
leave
dec
and
fmuls
and
mov
push
xor
jge
xor
cmp
push
or
popa
xor
lds
cmp
sahf
and
mov
xor
gs
pop
add
nop
push
add
sti
cmpsl
imul
lret
push
mov
mov
jae
aad
test
push
xchg
xor
sbb
mov
je
jl
mov
rcr
fldt
jmp
adc
ljmpw
inc
inc
cmp
sbb
jo
and
mov
dec
aam
xor
add
sub
mov
push
aas
and
xor
inc
sbb
mov
fdivrs
loop
cmp
fidivs
out
add
and
mov
push
dec
xor
adc
lea
pusha
pop
ficomps
jp
and
lret
sub
push
xor
pop
add
popf
or
jmp
add
cmp
jl
push
inc
inc
dec
push
imul
inc
test
scas
in
inc
or
push
cmp
clc
stc
pop
sbb
jbe
loopne
sbb
inc
andl
dec
xchg
xor
jp
adc
pop
mov
sub
fisubs
push
push
mov
enter
imul
mov
in
adc
or
adcl
inc
mov
xor
inc
ret
insl
cmc
sub
mov
lock
sub
jnp
xchg
mov
add
insb
sbb
ss
sbbb
pusha
push
xor
mov
or
loop
mov
cmp
jle
sbb
or
int
xor
sbbl
xor
push
or
in
xor
or
xchg
cmp
push
sbb
ret
cwtl
sahf
cwtl
fdivs
sahf
adc
sbbl
push
sub
inc
push
bswap
or
mov
add
icebp
dec
repnz
and
add
into
jne
dec
xor
push
pop
mov
xchg
inc
pop
mov
pop
adc
push
shlb
cmp
add
push
inc
ss
sub
aas
or
push
and
enter
add
je
lcall
inc
pop
adc
add
daa
jnp
push
rclb
and
test
jne
repz
dec
cmp
mov
nop
push
push
inc
mov
mov
xchg
pop
popa
dec
inc
mov
or
push
aam
ret
mov
push
mov
pop
pushf
xor
mov
loopne
push
or
pop
fnstcw
jo
dec
add
sbb
rolb
add
popa
sahf
cltd
insb
insb
jbe
std
pusha
lea
mov
adc
inc
jmp
pcmpgtb
and
lcall
nop
orl
or
push
incl
cmp
jl
xor
lret
into
push
push
dec
fimuls
inc
dec
fdivs
jne
add
sti
outsb
subb
dec
push
cmpb
es
sbb
into
jl
shrl
pop
data16
jecxz
inc
enter
mov
std
fldt
std
dec
jg,pn
mov
pop
je
push
mov
cmp
mov
pop
mov
cmp
or
push
xor
push
shl
mov
and
mov
inc
and
pop
jne
jnp
push
addr16
pop
sbb
mov
push
jmp
push
sbb
outsl
xor
je
sub
dec
int
xchg
pop
stos
xor
les
push
jne
jl
pusha
dec
mov
dec
push
jge
les
mov
xor
insb
outsb
leave
in
sub
pop
andl
pop
sub
movsl
xchg
sahf
mov
mov
add
xchg
ret
les
add
sbb
pop
sbb
popa
mov
xor
or
stc
in
cltd
sarb
push
pop
aam
nop
ds
inc
loop
jne
das
js
add
add
adc
lahf
push
movsl
or
adc
dec
stos
cld
ss
push
sarb
add
stos
or
mov
inc
test
jbe
push
push
adc
aad
test
dec
mov
add
inc
pop
push
and
movsb
fstps
cmp
dec
leave
add
adc
adc
pusha
sub
or
aas
mov
add
mov
mov
mov
jle
call
je
or
rol
aas
mov
adc
fwait
mov
mov
dec
pop
and
push
inc
popf
aad
sub
dec
mull
xchg
lret
mov
jg
fcmovnb
and
inc
mov
push
or
sbb
xor
insl
popa
dec
dec
test
leave
out
push
rolb
call
inc
adc
add
cmp
push
and
inc
cmpsb
add
pop
adc
fcmovb
es
cmp
xor
push
cmp
ret
mov
or
push
xor
jne
jp
cmp
mov
jmp
je
or
into
stos
movsl
xor
inc
mov
or
cmp
xor
inc
out
es
sbb
sub
inc
and
sub
xor
dec
add
fwait
sbb
scas
shlb
push
pop
fdiv
je
add
test
outsl
cld
lret
movsl
ret
fdivs
add
sub
popa
jmp
adc
das
or
jne
push
jmp
cmp
dec
popf
xchg
mov
pop
xor
inc
xchg
bound
loopne
mov
test
add
add
sub
test
and
mov
sarb
lock
clc
push
shrb
mov
mov
loopne
push
pop
inc
cmpsb
rcr
and
jl
outsb
mov
sub
mov
loop
dec
inc
lods
mov
xchg
add
xorb
pop
iret
or
aam
sub
sbb
cmp
push
lcall
test
mov
mov
nop
test
into
jae
and
add
ss
in
fld
jne
add
jne
sbb
addl
testb
mov
and
shrb
adc
add
nop
add
or
or
adc
inc
pop
inc
mov
movsl
pop
das
fwait
mov
fs
stos
fldl
fs
pop
or
push
mov
movsb
mov
jmp
add
mov
xchg
and
test
lea
popf
or
mov
sti
ss
ficomps
and
test
adc
add
jmp
and
xadd
push
sub
ja
mov
mov
in
sub
ret
or
data16
je
and
aam
push
inc
dec
push
fisttpll
pop
push
inc
adc
and
dec
or
cmp
add
inc
mov
push
xchg
dec
add
sub
jle
jp
and
iret
jge
xchg
and
mov
xlat
arpl
inc
jmp
orl
inc
int
dec
in
adc
add
inc
mov
loope
inc
pushf
jo
or
sub
sub
pop
xchg
jmp
or
pop
jns
adc
fcmovu
and
test
push
test
pop
cltd
jp
jns
jae
xchg
int
call
mov
push
mov
mov
or
xchg
sbb
in
dec
add
aad
into
dec
pop
out
rcll
add
adc
inc
jge
add
jp
cmp
add
push
or
imul
lret
dec
and
adc
out
dec
pop
js
add
mov
ret
sub
add
nop
push
jae
or
addb
and
adc
dec
rorb
dec
or
push
outsb
outsl
movsl
jg
cmpl
popf
shrb
or
add
pop
xchg
dec
pop
add
jl
sbbl
dec
cmpsl
pop
cwtl
mov
popa
sub
fcmove
ret
cmpl
lahf
sub
xchg
repz
jo
and
push
or
scas
sbb
mov
icebp
adc
push
je
icebp
mull
fdivrl
jmp
inc
lahf
test
mov
mov
inc
inc
cld
pop
imul
push
add
adc
push
add
inc
dec
push
mov
push
mul
pop
fsubs
xor
hlt
and
mov
roll
push
mov
jl
add
and
sub
fsubrs
pop
add
lock
cmpsb
add
cmp
in
mov
fbstp
and
test
push
nop
or
jnp
lahf
sbb
mov
or
or
inc
mov
leave
and
nop
dec
sub
xchg
call
inc
popa
test
and
je
inc
aad
xchg
mov
aam
popa
add
jmp
ret
lret
push
repz
sub
push
or
pusha
push
insb
je
adcb
pop
mov
adc
stos
sbb
mov
daa
add
and
inc
pop
popa
add
mov
sub
scas
call
add
xchg
and
jo
or
icebp
sub
sbb
test
push
jmp
add
xor
gs
adc
mov
call
inc
mov
inc
mov
add
pop
enter
test
mov
test
cmp
cmp
cmp
test
in
add
jecxz
lea
fadds
jmp
call
test
mov
sub
pop
inc
mov
inc
enter
add
dec
add
add
push
dec
nop
lods
sub
cmp
setbe
loopne
mov
dec
fsubs
jecxz
mov
mov
test
gs
add
arpl
rclb
push
push
outsb
decl
add
push
push
push
sbb
jns
xor
or
jb
pushf
loopne
adcb
xchg
inc
push
jo
or
or
adc
or
pop
dec
pusha
sub
jg
or
pop
rcll
push
cli
ss
add
or
dec
inc
push
cmp
aad
cs
std
daa
sbb
mov
rcrb
sub
testl
and
insb
femms
lret
push
pop
call
clc
inc
push
add
add
cs
test
shl
adc
fdivl
rorb
loopne
arpl
inc
and
mov
lds
das
or
jae
push
inc
fbld
test
adc
inc
leave
test
adc
add
int3
ljmp
lock
inc
sbb
push
lock
mov
mov
stos
shl
jmp
add
cltd
rorl
or
push
mov
iret
in
rclb
inc
incl
push
lcall
mov
push
and
jp
push
adc
jo
xchg
iret
dec
ret
jmp
aad
lahf
push
xor
add
xchg
addl
rolb
push
add
push
cli
xchg
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
push
sub
jbe
push
jmp
adc
push
in
push
lea
in
mov
nop
pusha
aam
and
inc
and
mov
bound
or
fwait
lods
cli
lock
adc
test
dec
adc
adc
fsubl
add
outsb
call
insl
lahf
adc
stc
mov
mov
ret
or
test
adc
cmpsb
aad
sbb
ja
mov
fdivrs
mov
inc
movsl
nop
data16
push
jle
in
sbb
imul
add
rclb
mov
ljmp
in
fisttpll
out
xchg
out
gs
inc
stos
pop
push
cmp
jno
pop
loop
sub
pop
rcll
mov
add
mov
fsubs
or
jecxz
dec
cld
jb
or
or
or
outsl
jnp
clc
cmp
jecxz
js
nop
rcrb
fdivl
out
pop
or
dec
out
push
adc
inc
dec
and
jo
mov
and
cmp
sbb
mov
faddl
clc
movsb
ja
or
imul
xor
or
pop
xchg
mov
adc
pop
push
or
inc
rorl
sti
push
xchg
lods
mov
adc
pop
xchg
fstl
popf
pushf
jecxz
sub
test
aad
and
data16
adcb
xor
divl
fcompl
sti
pushl
add
lea
popf
mov
andb
fcoml
jnp
and
pusha
push
shrb
push
mov
dec
aam
and
push
cwtl
movsb
pushf
lods
adc
cmp
stos
ds
push
adc
sbb
jl
sahf
addb
jg
sub
das
and
push
aam
mov
xchg
xchg
mov
dec
pop
sub
pop
mov
push
cli
and
add
les
mov
bound
imul
sarl
push
push
mov
push
enter
aas
js
test
push
and
mov
loope
mov
push
sahf
ss
movl
inc
int3
in
movzwl
push
cwtl
cmp
fmul
pusha
imul
mov
sbb
ret
insl
add
pushf
jl
cmp
nop
push
sahf
jecxz
mov
mov
sbb
push
mov
lahf
dec
sbb
daa
and
cmp
cld
addb
aad
lret
fiaddl
xchg
push
mov
imull
cmp
pop
adc
jne
xchg
repnz
jl
js
popa
cmp
or
sub
les
jp
js
rolb
movb
push
popf
hlt
or
cmpb
enter
rcl
loope
xchg
mov
int3
inc
cmp
js
es
adc
mov
xchg
add
cmp
and
jb
xlat
or
push
cmp
std
clc
sbb
inc
xchg
or
xlat
pop
cmp
or
rol
out
push
shr
mov
mov
in
stos
xchg
adc
jmp
cmpb
and
adc
push
jg
push
push
ja
fstl
mov
or
imul
jne
movsbl
jg
mov
cmp
jb
mov
and
je
outsb
add
mov
iret
xor
inc
das
mov
lods
sub
mov
or
sbb
test
sub
or
xor
sub
adc
js
inc
add
jle
fsubr
adc
clc
subl
sti
divb
out
mov
pusha
test
cmp
jl
pop
pop
js
cmp
out
mov
xlat
jmp
sub
dec
pop
dec
call
pusha
push
fwait
mov
cli
insb
push
adc
xchg
test
inc
sub
hlt
out
add
insb
cmpsb
xor
push
outsl
adc
shrb
loop
addr16
sub
lock
add
push
std
dec
jnp
jecxz
repnz
leave
leave
leave
leave
add
leave
pop
or
or
jnp
out
out
or
jbe
jmp
or
addr16
out
por
jmp
adc
pop
adc
push
out
out
adc
dec
adc
dec
adc
aas
out
out
pop
jmp
sbb
xor
jmp
out
out
sbb
es
and
pop
push
shl
out
jmp
and
or
test
and
test
orl
xchg
cmp
arpl
cltd
mov
addr16
or
incl
xchg
icebp
mov
int3
aam
in
out
out
jns
cld
dec
add
or
sahf
out
sahf
adc
sbb
sahf
out
xor
cmp
out
sahf
out
dec
push
pop
pop
sahf
out
sahf
arpl
jb
jl
aas
js
pop
add
add
and
or
or
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
xchg
cmp
add
xchg
inc
cmp
aad
pop
std
icebp
int
mov
addl
inc
sub
add
xorb
cltd
scas
xor
xchg
rolb
loopne
fstpt
mov
pushf
les
add
pop
rol
aam
add
out
int
dec
inc
int
pop
add
imul
jne
push
or
xor
mov
mov
mov
decl
sbb
cmc
adc
orb
adc
bound
mov
fimull
mov
jmp
sub
outsl
dec
addl
loope
add
lock
mov
lods
cmp
lock
es
int
shll
pusha
sti
adc
jmp
xchg
test
pop
adc
cmp
sub
sbb
cltd
push
mov
test
fstps
sub
repnz
mov
es
mov
add
sub
push
dec
rclb
xor
jmp
cmp
and
cmp
mov
mov
rol
mov
mov
divl
xor
mov
xor
ss
mov
adc
shr
fs
aaa
aaa
in
mov
ljmp
inc
sbb
movl
in
ret
or
pop
adc
sbbb
mov
fistpl
lds
jmp
jge
mov
test
lret
shr
test
ds
inc
push
xchg
jno
xchg
dec
sub
mov
stc
ja
lea
imul
lret
mov
stos
mov
push
mov
adc
adc
fildll
sub
lock
or
add
pop
adc
xchg
mov
sub
sub
nop
push
or
sub
sbb
push
inc
or
or
scas
jne
repz
outsb
cltd
pop
testb
xor
and
jno
push
mov
andl
dec
ja
push
push
xchg
inc
pop
ret
push
stos
xchg
sbb
mov
and
pusha
daa
movsb
and
invd
out
pop
jecxz
imull
lds
push
rol
mov
and
xchg
adc
mov
or
sbbb
cmp
xor
movl
xchg
push
sbb
es
add
sbb
jno
loopne
sub
clc
mov
push
push
and
push
jbe
es
xchg
iret
cmp
or
fcompl
push
add
movsl
and
cwtl
inc
loop
imul
jb
pop
push
sti
jl
imul
fs
das
mov
add
and
and
push
mov
out
sbb
push
inc
jnp
outsl
stc
in
lods
inc
aaa
adcl
or
fidivrl
cmp
jl,pn
pop
sbb
sbb
test
cwtl
nop
sub
cs
lods
jg
xchg
jle
arpl
cmp
jne
lea
cmp
lock
inc
jg
and
or
js
cs
cmp
or
sbb
in
add
mov
inc
mov
or
lods
cmp
icebp
jl
fcmovu
ja
dec
push
sahf
cmp
push
insl
mov
test
jae
ds
xor
dec
xchg
nop
jmp
and
pushf
jmp
daa
lods
test
cmp
fbld
jae
movzbl
out
mov
add
or
push
jle
and
adc
jmp
mov
inc
add
push
inc
in
ss
mov
cmpsb
inc
inc
je
sbb
mov
hlt
mov
mov
lcall
jne
pop
je
xor
lahf
sbb
mov
ret
or
nop
jbe
cmp
dec
fwait
and
mov
dec
test
ret
or
les
mov
subl
add
dec
enter
fwait
pop
in
dec
add
and
add
pop
or
imul
sub
sbb
and
fstpl
mov
mov
xor
ficoml
mov
enter
sti
js
dec
push
add
jo
test
add
pop
sub
push
cmp
pop
pop
fbstp
rcll
mov
cld
ss
inc
add
add
and
add
adc
addr16
repnz
or
cltd
sub
popa
mov
sbb
xor
push
in
pop
mov
add
pop
adc
scas
push
test
bound
add
jb
cmc
dec
jb
cld
pop
std
xchg
fistl
sbb
mov
add
jge
ja
inc
lods
sbb
ja
inc
xchg
andl
jge
sbb
ljmp
rorb
stc
adc
fists
roll
stos
test
adc
add
mov
dec
pop
pop
or
cmp
fnstsw
lahf
test
test
je
jmp
xor
mov
pop
neg
pusha
loope
lea
cmp
jne
push
pushf
ret
mov
lcall
dec
mov
enter
loopne
dec
sbb
fwait
fwait
push
or
addl
mov
sbb
sub
sub
or
push
xor
inc
push
push
lock
in
adc
in
mov
cs
jge
mov
outsb
push
leave
les
iret
or
repz
iret
lea
lock
inc
pop
shrb
sub
inc
adc
mov
call
sbb
and
cmp
push
cmp
fnsave
jg
adc
loope
lods
cmp
and
sbb
dec
addr16
sti
xor
dec
cli
push
xchg
sub
or
mov
ja
mov
aad
shlb
loop
scas
mov
roll
pop
orb
jnp
pop
mov
push
scas
mov
lcall
in
adc
sbb
daa
sub
adc
xchg
es
pop
in
sub
xor
int3
hlt
es
mov
fwait
mov
cmpsl
add
adc
stos
mov
incb
cmp
and
movhlps
add
mov
int
xor
inc
dec
mov
mov
add
daa
dec
add
jbe
xor
cmp
cmpsb
xor
inc
inc
pop
or
inc
rorl
int
and
in
sub
stc
push
loopne
adc
or
push
push
or
xor
jns
add
rcr
pop
das
enter
test
popa
sub
ret
sub
test
sti
fnsave
adc
cltd
adc
xchg
lret
jae
ds
fs
cltd
cld
cmpl
rcll
push
adc
dec
gs
jne
lds
andb
rclb
jp
pop
adc
mov
sub
adc
cmp
ficomps
push
pop
push
xchg
jl
ds
sbb
push
mov
or
mov
hlt
loopne
adc
cmpl
je
inc
sbb
xchg
pop
xchg
push
push
hlt
ss
push
in
out
dec
push
mov
adc
sub
test
ljmp
mov
ss
inc
je
adc
lcall
and
movsb
sbb
lods
ja
adc
jl
mov
shlb
imul
scas
pop
jnp
sub
dec
loop
scas
add
or
test
lcall
mov
pop
mov
xchg
pop
and
cmpb
and
call
inc
cs
addl
xchg
int3
jmp
mov
loope
push
pop
and
or
inc
popa
fmul
adc
sbb
cmp
ds
lds
mov
xor
arpl
insl
xchg
pop
shrl
lock
pop
add
mov
push
sub
mov
dec
pop
rclb
insb
sbb
popl
imul
mov
daa
clc
imul
shrb
orb
popa
mov
dec
scas
fs
cmp
cltd
les
aaa
in
mov
inc
dec
inc
sbb
hlt
push
out
push
adc
or
out
sub
sbb
xor
xor
lds
jg
mov
xor
and
leave
inc
hlt
fsubrs
cmp
push
mov
add
rorb
fs
or
xchg
shll
lea
cltd
dec
adc
add
test
push
add
inc
push
mov
test
xorb
int3
sbb
call
push
and
and
andl
jp
mov
imul
dec
adc
cmp
fcmovnu
xor
mov
fcmovne
leave
sbb
int3
insb
mov
movb
cmp
data16
push
cltd
mov
xlat
out
mov
mov
pop
pusha
out
sbb
or
jle
add
cmp
or
enter
outsl
out
inc
mov
lea
push
mov
adc
pop
push
push
xchg
bound
fstpl
movsb
ss
rorl
inc
xchg
clc
pop
fcmovnb
fildl
daa
xchg
loope
enter
mov
push
loope
dec
dec
cmp
mov
addr16
jbe
arpl
sbb
adc
cmp
fisubs
cmpb
mov
fs
pop
fdivrs
pop
cmp
je
cmp
pusha
xor
dec
and
push
inc
push
xchg
jp
roll
fnstsw
pusha
rcll
data16
mov
out
jge
ds
and
or
orb
stos
jle
sub
pop
push
add
or
adc
mov
or
cs
fstpl
inc
mov
bound
loope
or
cmp
mov
test
jge
stos
xorl
cmp
inc
dec
sbb
cmp
arpl
push
cs
jo
cmp
xchg
push
dec
mov
xchg
jmp
inc
push
lods
push
and
add
mov
mov
aaa
and
or
popa
mov
add
inc
test
repnz
fwait
inc
pusha
cmp
mov
ss
xor
push
push
mov
pushf
les
add
cld
cmp
mov
cli
orl
adc
shrl
push
cmp
jge
mov
ja
mov
pushf
mov
add
fidivs
movsl
movq
jo
imul
mov
shrb
xor
xchg
xchg
insl
scas
or
lock
clc
clc
cld
or
das
imul
pop
cs
add
add
add
cwtl
cmpsb
push
mov
dec
sti
mov
dec
je
add
adc
mov
decl
cmp
dec
or
mov
shr
sbb
ud0
or
mov
sub
daa
dec
cwtl
add
xor
or
mov
adc
cli
sub
xor
or
and
in
dec
je
push
add
out
loop
insb
enter
dec
mov
repz
add
jmp
lcall
hlt
sub
in
add
push
add
jne
testb
cmp
jne
adc
movsb
cmp
add
aaa
daa
test
inc
test
xor
inc
popa
out
nop
addl
sub
or
cltd
idiv
inc
inc
imul
lret
and
clc
jb
push
cld
mov
sbb
sbb
mov
popa
rorb
mov
add
or
cmp
fisubrs
dec
add
add
xor
nopl
lock
sahf
cli
sub
add
mov
aam
mov
test
jmp
daa
pop
out
loop
jecxz
push
cmp
sarb
in
clc
jae
jg
and
pop
outsb
gs
jae
mov
lods
dec
jmp
push
mov
mov
aas
pop
nop
xchg
jl
pushf
testl
clc
in
adc
cmp
je
cmp
push
cmp
jne
inc
jne
dec
mov
inc
cmp
or
or
inc
pop
mov
stos
orb
inc
loopne
add
mov
cmp
pop
cmp
jne
push
dec
add
loop
sar
sub
outsl
mov
jmp
movsb
mov
cmp
jnp
cmovp
push
add
sub
xor
inc
mov
ficompl
fnstsw
jl
or
jg
mov
jmp
and
aaa
lahf
push
push
jmp
inc
jl
inc
jg
int
sub
aaa
jp
add
shl
dec
mov
sub
mov
jmp
mov
jle
inc
je
sub
jg
in
adc
test
or
das
movsl
mov
addb
icebp
jnp
mov
rcrl
ss
mov
or
sbb
add
out
cmp
pop
sahf
movsl
js
and
sub
les
aaa
push
add
inc
cmp
pusha
mov
jg
scas
pop
mov
push
fs
imul
pop
mov
mov
fildll
or
add
aaa
lcall
xor
dec
sub
pop
loopne
gs
inc
xor
gs
jge
inc
imul
push
pop
das
movsb
xor
xor
xchg
push
xorb
aaa
sbb
push
cwtl
rolb
cmp
or
in
inc
inc
push
out
jmp
xor
inc
fwait
xor
and
sbb
push
add
test
or
pop
push
shlb
les
push
cmp
mov
ret
pcmpeqb
xchg
cmp
xor
dec
pop
fmuls
je
and
cmpsb
inc
adc
clc
aaa
or
or
popf
add
into
gs
cmpsb
push
clc
mov
lods
arpl
sbb
pop
xchg
jl
push
loop
adc
inc
inc
sar
cmp
and
inc
mov
add
gs
shrb
pop
adc
xor
push
mov
je
xor
leave
or
fnstcw
mov
sbb
xor
test
imul
loope
pop
jg
addl
roll
sbb
push
mov
adc
cmc
imul
movsb
push
add
dec
cwtl
push
sbb
cmp
add
mov
inc
in
incb
mov
mov
sub
adc
hlt
jge
jne
add
je
inc
pop
add
sbb
lock
sub
and
test
movsl
movl
mov
push
test
adc
add
movsb
rclb
push
jp
ja
and
xchg
mov
or
add
in
cwtl
jne
in
inc
shlb
mov
xor
jmp
push
sbb
add
sub
or
out
and
lods
add
and
rcll
test
adc
imul
dec
lcall
or
jl
fsts
dec
xchg
or
mov
and
mov
int
out
les
pop
jne
push
movb
cmp
fadd
xor
or
rorl
fiaddl
push
cmp
pop
xor
xchg
and
inc
and
jbe
ja
cwtl
mov
mov
xchg
mov
sub
in
xor
pop
stc
cmp
fs
mov
mov
inc
ds
cmp
cmp
sbb
xor
je
push
inc
or
or
je
imul
sub
pop
sbb
dec
dec
lea
add
outsl
pop
sub
or
nop
mov
aas
movb
jbe
xchg
and
xor
sbb
push
adc
lock
scas
jns
pop
incl
push
cmpb
jne
mov
xor
idivl
ret
dec
or
ljmp
add
clc
dec
ret
sbb
mov
test
cmp
lods
sub
rolb
mov
dec
push
sbb
push
xor
push
xchg
mov
into
push
jb
cwtl
loope
cld
cmc
xchg
mov
or
nop
push
adc
inc
add
jp
cmp
adc
push
notl
sbb
or
adc
std
loope
pop
repnz
or
and
jp
arpl
filds
loope
adc
rep
push
addb
shll
mov
jnp
mov
adc
in
mov
cs
mov
mov
dec
dec
xor
inc
sub
mov
arpl
out
mov
xchg
push
nop
sub
jp
int3
jae
inc
pop
loopne
sbbl
gs
pop
or
insb
je,pt
inc
mov
push
jno
or
scas
fbld
add
add
ret
push
orl
mov
cmp
je
push
cmp
pop
lcall
mov
rclb
dec
adcl
mull
mov
jbe
adc
add
xlat
xor
and
aad
pusha
jo
jnp
jo
push
out
xor
push
push
push
jp
int
dec
shl
jmp
xchg
pop
inc
movups
cmp
sbb
pop
loopne,pn
sub
es
sub
xchg
sub
out
xchg
add
adc
xchg
loop
shlb
xor
sub
push
fisubs
sbb
aad
mov
cmpsb
jmp
sbbb
imul
mov
ss
insl
outsb
push
mov
sub
cltd
push
in
sbb
aam
test
mov
push
push
leave
and
lret
sahf
mov
mov
sub
jae
cmp
push
xor
in
lcall
inc
xor
cmp
jb
dec
cwtl
jmp
sbb
aas
push
lds
add
fnstenv
xchg
inc
push
xor
test
push
in
push
mov
mov
add
ret
mov
cmp
pop
mov
push
sarb
adc
pusha
fs
ljmp
lret
push
mov
scas
mov
mov
jne
and
or
dec
adc
push
out
inc
addr16
pusha
ret
jne
shlb
rcrl
adc
daa
dec
cmpb
sub
jb
inc
push
test
xor
adcl
cmpl
fdivl
dec
sbb
in
pusha
pop
roll
adc
mov
add
inc
and
cmp
inc
sarl
mov
daa
jmp
push
filds
inc
inc
push
or
fcomps
xchg
jo
xchg
rclb
inc
jp
cmp
add
rorb
lds
in
pop
and
add
add
pop
mov
cmp
add
or
mov
aaa
adc
mov
aaa
mov
mov
inc
sub
dec
pop
xchg
das
rclb
xor
jle
or
and
sbb
push
pop
data16
bound
repz
add
jno
pop
bound
sbb
data16
iret
adc
not
repz
mov
into
je
mov
jecxz
inc
ja
cs
enter
pop
nop
sub
pop
cld
sbb
sbb
aam
add
pop
push
test
jp
mov
orl
fisubrl
movsl
and
or
ret
cmpsb
leave
push
pop
fsubl
mov
jmp
push
lcall
jno
je
xor
loopne
pop
addr16
stos
xchg
ret
add
mov
jle
dec
inc
ljmp
xor
sbb
push
cmc
jno
or
sbb
sub
popf
jne
mov
or
or
pusha
mov
into
xorl
lret
mov
inc
pusha
idivb
gs
cmp
pop
cmp
xor
fcmovnb
xchg
je
dec
xchg
push
andb
pop
sub
fisttpl
pop
ret
cmp
push
or
mov
dec
xor
pop
pop
daa
scas
lea
addl
mov
xor
pop
or
and
lock
imul
fucomip
bound
mov
sub
mov
inc
push
dec
pop
addb
and
push
addb
xchg
mov
push
push
sbb
xchg
sbb
add
sbb
shrl
jl
pop
or
in
fs
mov
or
movsb
in
rcr
movsb
push
out
mov
test
movsb
sbb
push
pop
jb
inc
int
cwtl
lock
push
sub
inc
cmp
sbb
cmpsb
stos
mov
add
add
inc
sbb
test
push
xchg
or
push
or
lcall
mov
dec
ret
mov
push
or
adc
adc
mov
daa
pop
jae
push
push
cltd
in
filds
adc
mov
and
fwait
dec
dec
nop
nop
or
fbstp
fidivl
xchg
lahf
sub
push
cmp
pusha
insl
retw
fsubl
adc
jecxz
sbb
mov
pusha
mov
mov
jo
xor
add
adc
push
sbb
mov
pop
xchg
adc
add
test
rcll
jo
leave
call
add
fadds
pop
mov
pop
js
nop
inc
mov
jne
mov
adc
or
lret
or
xor
or
mov
mov
arpl
rol
add
dec
push
xor
mov
push
cmp
cmpsl
data16
pop
pop
and
ds
jle
pop
add
xor
sarl
loope
sbb
sub
mulb
mov
xor
jmp
inc
pop
call
mov
and
mov
cmp
bound
fistl
lods
or
data16
mov
pop
imul
inc
cmp
jge
stos
pop
push
ret
sbb
outsl
nop
jge
sbbb
daa
cwtl
jecxz
shrb
rorb
xor
or
inc
and
or
pusha
or
shl
adc
push
es
adc
cmp
fistl
lcall
or
loopne
sbbb
add
lea
inc
push
pop
lods
sbb
test
lods
popa
adc
sub
out
cltd
fs
push
sbb
shlb
ss
adc
mov
movsl
dec
cmp
adc
xor
dec
lea
daa
inc
mov
movl
rorl
repnz
adc
and
in
es
sub
sub
lods
mov
jo
sbb
and
ja
pop
js
jmp
and
loope
dec
adc
lock
out
test
inc
imul
or
mov
sbb
popf
sbb
data16
dec
pop
pop
and
adc
icebp
or
add
xor
dec
pop
xchg
js
inc
mov
sbb
orb
mov
or
sarl
cmp
ja
or
sub
xor
lock
mov
aam
test
inc
es
loopne
js
cmp
cmpl
and
sub
inc
mov
outsl
pop
push
jae
push
pop
push
clc
cmp
jmp
pop
cld
xor
lock
inc
xor
push
loop
cmp
cmp
fidivs
or
mov
cltd
fmuls
jmp
lea
fisubs
adc
test
mov
in
cs
gs
dec
and
xchg
or
jle
xchg
lods
adc
inc
insl
fisubl
sub
loopne
mov
mov
xchg
push
add
sbb
sbb
dec
dec
sahf
nop
lcall
fdivrs
ret
cmp
cmp
jge
xchg
add
mov
js
inc
and
jge
push
inc
sub
loopne
call
xor
sub
jae
xsaves
dec
jecxz
rcll
sub
stc
clc
or
jp
ss
cmp
mov
or
cwtl
jne
repz
push
adc
ret
mov
adc
push
xchg
push
pop
insl
test
sub
adc
xchg
aam
push
cmp
pop
mov
sbb
adc
xor
push
add
fnsetpm(287
mov
or
loopne
lcall
add
pop
mov
or
xchg
loopne
push
mov
xor
sub
cmp
je
jp
and
mov
add
mov
add
add
dec
pop
insl
pop
iret
push
mov
shl
js,pn
jne
ret
add
leave
data16
push
mov
jecxz
xor
cmc
dec
sbb
in
arpl
xorb
fisttps
mov
les
and
jns
mov
push
scas
stos
pop
aaa
jmp
sub
sarl
jecxz
sbb
adc
sbb
jae
cltd
mov
loopne
outsl
in
jb
cld
std
flds
fs
jg
push
or
xchg
push
jp
lea
test
roll
xor
pop
jbe
das
test
movsl
add
xchg
mov
add
cli
jmp
inc
ja
mov
test
fwait
lods
test
add
lds
pop
and
mov
adc
orb
xchg
test
outsb
adc
fisttpl
sahf
adc
in
mov
test
mov
cmpl
adc
addb
pop
mov
or
pusha
mov
je
movsl
mov
adc
scas
mov
add
or
mov
lock
add
lods
mov
xchg
or
dec
adc
fstpl
push
xor
pop
mov
pop
cmp
sbb
int3
sub
push
cmpsl
rcll
mov
repz
shr
push
push
xor
daa
arpl
in
pop
add
xor
and
hlt
or
push
das
sub
push
inc
inc
add
jnp
ret
or
cmp
fiadds
lds
and
rcrb
or
pop
cmp
cs
lcall
in
mov
xchg
cmpsb
ds
test
fs
adc
pop
push
ja
inc
jmp
add
cmpb
fistpll
movsl
adcb
adc
and
or
xor
sbb
aad
outsb
mov
sbb
sbb
clc
dec
xor
cmp
push
or
je
sbbb
pshufw
ja
sbb
std
cmpb
sub
sub
and
insb
aaa
jo
ret
jb
and
jmp
push
or
addr16
dec
test
popa
push
add
les
cmp
adc
adc
icebp
add
je,pt
sar
cmp
sub
xor
loope
mov
inc
roll
push
push
mov
ret
int
add
and
mov
inc
sbb
add
pop
mov
out
leave
lret
inc
sub
js
sub
stos
sarb
push
shlb
sub
in
pop
jae
sub
rclb
push
mov
push
dec
xor
loopne
push
inc
mov
add
and
jne
jne
leave
hlt
xor
or
adc
jmp
add
add
call
add
sbbl
je
cmp
jbe
push
popf
sbb
or
das
or
jecxz
xor
nop
sub
sub
xor
sub
adc
or
or
insb
cmp
cli
pop
inc
fisttps
mov
ljmpw
mov
sub
pop
mov
mov
jmp
test
mov
lcall
xchg
int3
mov
xchg
xchg
jo
dec
sahf
xor
lcall
loopne
cmp
icebp
daa
rorb
scas
xchg
mov
sub
inc
jo
mov
add
mov
push
dec
add
loope
lea
fucom
add
cmp
adc
mov
xor
inc
sbb
add
jb
data16
add
add
sub
data16
sbb
adcb
mov
pop
ja
shll
mov
sbb
push
xchg
inc
jb
mov
sbb
mov
das
pusha
ljmp
sbb
mov
xchg
jae
jmp
in
das
or
inc
push
xor
pop
div
faddl
aaa
lea
pop
or
ljmp
xchg
jmp
lods
push
dec
or
adc
inc
popf
fidivs
sub
adc
cmp
push
rorb
gs
jbe
xor
adc
add
xchg
mov
mov
rol
sbb
mov
and
cmpsl
jecxz
mov
in
push
orl
dec
inc
or
lock
out
or
or
mov
sbb
stos
cmp
std
cmpsb
imul
adc
sub
sub
jne
or
adc
out
adc
add
das
pop
lods
fcomi
ret
fidivrl
clc
int3
add
mov
jnp
rolb
dec
test
and
inc
or
jb
cmp
and
loope
lcall
mov
cmp
jb
neg
and
je
sub
cmp
rorl
jmp
loopne
add
or
or
add
stos
mov
mov
ljmp
jns
mov
hlt
push
add
shrb
stc
lock
movsl
jp,pn
in
pusha
jmp
loop
add
ljmp
push
jne
sub
decl
adc
lods
sbb
mov
jle
or
push
and
fbld
sub
cwtl
scas
pop
jl
fldl
pop
and
sbbb
jne
fnstcw
cmpb
and
clc
jg
fs
jle
into
sbb
add
movd
movaps
mov
fcmovne
jnp
enter
shlb
jle
xor
test
sar
push
ror
test
decl
fnstcw
and
lret
or
jg
std
int
mov
adc
jnp
mov
sub
aam
ret
lock
call
adc
mov
mov
xchg
repnz
imul
mov
mov
fnsave
addps
int
sub
fcmovb
sbb
adc
push
dec
adc
pop
jo
pop
test
sar
in
mov
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
les
mov
or
int3
jmp
dec
mov
sub
ret
adc
mov
cld
add
hlt
and
xchg
test
int3
or
aad
push
and
push
pusha
inc
dec
pusha
outsl
loope
adc
stos
loope
pusha
mov
sub
mov
or
mov
mov
push
sub
add
cld
clc
ja
mov
cmp
mov
push
push
je
cmp
jne
inc
cmpb
out
adcb
and
insl
pusha
mov
or
adc
add
cmpsb
or
in
push
or
mov
mov
ret
daa
cmpsb
ljmp
xlat
jno
cwtl
inc
push
xor
loop
scas
jmp
mov
push
xor
and
dec
fs
fwait
jp
lret
nop
mov
cbtw
xor
add
jecxz
lcall
xor
mov
pop
mov
xor
push
mov
scas
xor
and
outsb
nop
fsts
or
and
push
mov
pop
push
cmpb
mov
jmp
jns
push
pop
loopne
popa
test
xor
mov
inc
push
adc
inc
fadd
and
add
mov
sbb
movb
cmp
ret
sbb
pushf
pop
addr16
sbb
sbb
sbb
test
daa
out
inc
mov
jbe
pop
enter
movsl
std
add
pop
pop
in
mov
pop
dec
and
out
dec
and
arpl
inc
or
inc
mov
mov
cmp
jmp
stos
add
testl
mov
pop
adc
fstpl
jne
orl
dec
xchg
hlt
push
jg
adc
mov
jno
push
loope
shr
push
ret
and
arpl
decb
adc
adc
inc
push
push
test
inc
cmp
lea
mov
sub
sub
cmp
push
inc
xor
mov
mov
cmp
cmp
cli
adc
inc
mov
sub
fdivrl
xchg
or
adc
or
test
sub
mov
mov
or
rclb
mov
data16
in
adc
ret
xchg
xor
enter
inc
adc
lods
jnp
mov
add
dec
inc
jae
enter
sbb
cld
add
ss
inc
or
les
aad
cwtl
jns
adc
clc
andb
pop
sarl
arpl
loop
icebp
imul
push
xchg
and
cs
mov
cmp
mov
add
cmp
jns
paddsb
inc
inc
sub
enter
xor
mov
rorl
jne
insl
cmp
sbb
jmp
ret
jne
xor
outsb
loop
jne
cmp
cli
testb
je
inc
mov
cmp
js
fistpll
shl
or
cmp
jne
dec
jmp
xchg
jle
cmp
xor
fstpl
mov
jne
inc
aaa
push
lds
mov
test
jnp
push
loope
int
test
cmp
jno
cmpsl
test
fnstcw
dec
inc
dec
push
rolb
inc
or
xchg
lock
push
cmp
fbstp
add
cmp
cmp
and
cmp
mov
xor
pop
and
dec
fmul
mov
dec
pop
pop
jne
test
mov
pop
adc
stos
jbe
out
push
cmp
jb
rep
jmp
mov
cmp
insl
xchg
hlt
add
test
aam
icebp
jnp
in
rclb
in
adc
xor
sarl
pop
xor
inc
add
daa
cmpsb
lcall
sub
int3
lea
push
dec
add
dec
cmpsb
nop
inc
add
into
xor
xchg
mov
repz
movsb
push
pushf
xchg
mov
je
inc
mov
mov
call
cmp
in
lock
loopne
iret
repz
clc
clc
cld
sbb
inc
inc
lea
sbb
cmp
pusha
jmp
popa
sbb
sub
mov
inc
pop
sti
and
and
lea
adc
cmp
pop
and
std
sti
popa
repz
cld
out
ds
neg
sarl
or
sbb
stc
sub
popf
inc
pop
nop
push
jo
xchg
mov
mov
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
rcrb
mov
addr16
mov
bound
adc
sbb
repz
and
xor
inc
push
iret
repz
ss
sbb
adc
iret
repz
adc
or
nop
cmp
repz
add
sahf
out
xchg
insb
push
je
cwtl
and
push
add
or
mov
shlb
enter
jbe
sbb
add
cmp
inc
imul
test
addb
ret
leave
cwtl
or
sbb
adc
fidivs
sub
stos
test
hlt
add
push
in
push
pop
or
fwait
call
lock
sub
sbb
mov
lcall
sbbb
test
xchg
and
add
push
add
and
cmp
adc
xchg
inc
pop
push
shll
and
test
clc
push
jne
iret
or
mov
push
cmp
xor
lds
pop
popf
mov
and
xchg
mov
inc
adc
test
int3
test
loope
dec
cmp
or
mov
je
ljmp
mov
js
mov
test
cltd
inc
in
jb
and
or
push
dec
cmp
inc
dec
cltd
mov
jecxz
push
sbb
js
dec
adc
int3
push
adc
dec
push
jle
mov
les
fndisi(8087
add
push
jbe
sub
inc
aaa
pop
shrl
jle
cmp
pushf
mov
cmp
into
lea
cmp
adc
pop
sbb
jmp
sub
dec
jnp
mov
push
adc
or
add
out
mov
jne
pop
sub
in
test
cmpsl
cld
and
add
ds
and
xchg
or
sbbb
daa
rcll
fidivl
into
xor
or
cli
popa
test
lock
cltd
andb
and
push
clc
pop
adc
mov
push
inc
push
pushf
out
adc
add
pusha
faddl
xor
shll
call
ss
sbb
pusha
push
enter
inc
aas
pop
and
mov
sub
jns
ja
cmp
ja
pop
adc
sub
vmovsldup
and
add
lret
ret
xchg
jnp
pop
add
sub
inc
les
xchg
test
mov
aaa
or
je
dec
cmp
push
jne
testb
negl
xor
or
push
push
push
ror
dec
shll
loopne
cwtl
pop
fcomps
adc
add
inc
insl
cld
cmp
arpl
mov
rorb
xrelease
dec
pop
lret
pushf
sbbb
sahf
inc
jl
add
jg
jbe
js
lock
gs
ljmp
xor
sub
jmp
sbb
sub
repz
cs
push
pop
push
or
lds
or
pop
rcrl
xor
fs
or
rcrl
gs
adc
popf
pop
sbb
add
aam
or
shl
jl
popa
jmp
fcoms
sub
mov
ja
pop
jbe
lea
mov
outsl
adc
sbb
jp
pop
call
leave
push
sbb
xor
jb
cmp
clc
jbe
add
dec
push
sbb
rorl
mov
adc
out
jno
popa
mov
mov
or
jmp
test
jne
test
mov
and
rolb
add
push
add
lods
cld
jbe
clc
mov
add
arpl
mov
pushf
pop
push
add
push
xchg
repnz
cmp
arpl
cs
cld
out
test
push
jp
fistpll
xor
adc
sub
enter
mov
push
lods
jbe
ds
add
adc
xchg
out
subl
jnp
js
pop
push
sub
push
subb
add
inc
js
dec
lods
dec
inc
jmp
jbe
push
jl
repnz
or
insl
add
push
rolb
xor
repz
test
shl
ret
les
sub
movsb
sbb
lods
cmp
pop
mov
add
ret
out
push
cmpb
sbb
push
adc
cmpsl
jns
push
sbb
push
dec
pusha
mov
shll
das
loopne
frstor
inc
rcl
sbb
mov
flds
js
and
adc
or
add
dec
jne
mov
push
jmp
dec
repnz
jno
sub
popf
mov
push
push
ret
dec
jne
mov
sbb
xchg
sahf
xchg
call
push
or
pop
mov
inc
cmp
pop
daa
push
mov
sub
mov
loope
sarb
mov
jae
add
into
out
add
inc
cmp
imul
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
aam
lahf
pop
les
adcl
jb
jns
insl
test
dec
or
adc
jns
out
jmp
std
push
xor
cld
iret
lcall
scas
adc
in
adc
xor
cmp
jne
inc
inc
inc
clc
out
push
push
add
fdiv
loop
test
add
std
inc
jo
jle
dec
test
mov
adc
stos
mov
loopne
repnz
and
test
ret
push
push
jo
lock
dec
leave
lea
adc
popl
andb
imul
dec
dec
and
leave
adc
or
and
es
sub
pop
pop
popa
repnz
es
dec
dec
mov
fimull
pop
roll
mov
inc
xchg
ljmp
popa
mov
push
sahf
aaa
test
jg
and
lea
or
adc
aam
pop
dec
jge
push
daa
inc
or
cmc
push
nop
jge,pt
pop
add
xlat
xchg
inc
shlb
mov
je
mov
mov
pop
jg
add
mov
pop
adc
scas
test
jo
and
rolb
imul
push
ss
ffree
push
push
pop
into
xchg
and
outsb
loopne
mov
push
lret
jae
out
aaa
push
and
push
dec
fadd
lmsw
lea
fucom
xchg
xor
scas
and
jecxz
and
mov
insl
add
loopne
push
xorb
clc
pop
insb
aaa
and
or
shrb
push
in
jae
jb
sarb
addr16
daa
test
add
inc
dec
xchg
xchg
push
xchg
mov
push
mov
push
adcl
push
cs
mov
popa
add
push
mov
das
in
mov
mov
inc
imul
mov
ljmp
push
push
orb
rorb
clc
add
ret
push
sbb
je
add
mov
int3
and
fmuls
lock
and
sub
or
jo
sbb
xchg
subb
mov
loope
jno
or
or
loopne,pn
lock
adc
sub
ja
xor
pop
mov
push
inc
lcall
lock
rol
incb
mov
inc
je
mov
outsl
mov
lea
neg
mov
sbb
or
or
std
add
add
xor
pusha
repz
mov
scas
sbb
mov
mov
add
mov
inc
cmp
jb
jo
adcl
jae
shrb
mov
add
popa
inc
pop
ret
gs
jo
mov
or
ret
mov
or
iret
mov
sub
or
popf
sbb
adc
mov
mov
push
divl
lret
dec
stc
addl
std
or
iret
xor
jo
and
ljmp
add
das
push
add
mov
sahf
or
inc
cwtl
mov
or
out
cmp
je
out
sub
out
and
lcall
jmp
pop
addr16
dec
sbb
aam
or
xchg
dec
sbb
pop
aaa
adc
xor
mov
ja
add
sub
jle
mov
cli
mov
or
jl
and
lret
int
out
push
mov
test
cmpl
pop
mov
pop
flds
xchg
mov
loop
pop
mov
inc
jmp
and
outsl
sti
fwait
sbb
jmp
adc
jne
sub
cmp
and
stc
xlat
hlt
cmp
mov
adc
cmp
int3
push
xor
push
mov
js
or
scas
repnz
in
repz
adc
pop
mov
pop
add
mov
adc
mov
and
sbbb
mov
jg
mov
and
je
lret
sbb
je
lea
pop
lea
jmp
sbb
lock
or
sub
outsl
jbe
push
add
jo
fmuls
movsb
sbb
nop
jmp
push
test
mov
add
loopne
std
mov
sbb
inc
mov
lea
xchg
sbb
inc
sbb
or
lods
xor
mov
icebp
call
mov
add
ret
insb
dec
push
sbb
push
inc
or
push
lcall
xor
jne
mov
pop
or
mov
mov
mov
inc
mov
and
mov
jne
fs
add
adc
pop
pop
pop
add
push
push
and
push
add
jno
and
push
pmovmskb
push
push
push
orb
add
lods
sub
orl
cmp
je
and
or
sub
xor
or
add
mov
insb
enter
sbb
xor
xchg
jno
loopne
jne
test
mov
or
add
push
fstl
lods
dec
jno
add
js
or
nop
je
inc
mov
jb
lea
push
adc
or
das
adc
xchg
adc
cmp
test
sub
or
outsb
dec
rclb
mov
call
clc
ret
inc
testb
cld
or
inc
rorb
push
pushf
inc
data16
xlat
mov
sbb
mov
or
jne
or
add
sbb
int
mov
sbb
push
mov
sarl
mov
push
test
xor
hlt
test
in
or
int3
pop
gs
xchg
mov
dec
ja
or
les
push
mov
cli
xorb
adc
mov
mov
or
add
jmp
mov
adc
mov
cmpb
pop
jp
dec
sbb
or
clc
inc
call
mov
and
dec
leave
or
xor
sub
mov
jmp
add
inc
fadds
call
sub
mov
mov
inc
leave
test
sar
add
gs
nop
xchg
cmp
lock
mov
rcrb
xchg
add
fistpll
rcll
or
or
aad
and
push
into
and
jmp
xor
adc
loop
or
scas
xor
out
mov
hlt
push
fisubrl
jne
ja
rdpmc
mov
cmc
inc
pusha
aas
xor
test
subb
adc
stos
rcrl
dec
lea
xor
cld
lahf
push
jge
xor
pusha
out
imul
sub
shrb
jmp
movl
push
dec
adc
add
dec
cmp
in
stos
sub
sbb
pop
aam
push
insb
push
mov
xchg
add
or
jne
movsl
test
out
jae
stos
aaa
adc
pcmpeqd
sub
pop
idiv
lea
adc
decl
mov
loop
cli
mov
ja
pop
xor
popa
lcall
xor
rol
addl
js
adc
inc
js
ficoml
subb
dec
xchg
test
pusha
add
adc
mov
xchg
push
bound
mov
fwait
jae
or
fiadds
jecxz
jmp
iret
sub
push
in
sbb
inc
adc
or
sahf
out
push
repnz
add
or
cmp
cs
testb
testl
pushl
push
push
jecxz
sbb
mov
and
push
push
fists
pop
sub
fcmovb
in
mov
adc
and
lods
add
addl
rcl
add
or
jg
jo
in
xor
pushf
push
push
sbb
adc
mov
faddl
xor
repnz
adc
clc
fs
lods
popf
jmp
daa
adc
mov
adc
or
imul
sti
xchg
push
dec
or
push
movsl
jmp
dec
je
add
aas
cli
dec
sbb
dec
jne
push
pop
pop
cmp
bound
ja
scas
push
sbb
add
jmp
jecxz
xchg
addr16
push
and
push
jmp
add
sub
pop
push
push
les
lea
test
jp
cmpsl
sbb
push
push
dec
jae
adc
xchg
orl
push
lcall
push
jl
push
jne
mov
addr16
add
dec
loopne
and
out
xchg
inc
sbb
popa
pop
imul
out
xchg
test
je
fistpl
and
cmovp
pop
jns
mov
or
jo
inc
adc
add
add
push
addb
pop
cld
push
dec
jmp
xchg
jbe
orl
leave
add
ja
mov
jmp
rorb
add
dec
pop
jne
punpckhdq
sbb
sub
and
pmuludq
icebp
cmp
pop
shl
or
add
fcoml
sub
add
orl
inc
inc
mov
add
adc
add
cmp
inc
dec
jbe
sub
adc
sbb
mov
clc
jb
dec
and
add
int3
inc
sub
mov
scas
mul
mov
add
add
sub
pop
sbb
sbb
or
sub
mov
inc
adc
test
imul
clc
rclb
adc
je
shlb
je
and
cmp
or
cmp
clc
mov
pop
jle
fdivs
push
xlat
push
lcall
rorb
jo
xchg
and
dec
pop
and
dec
in
jo
loopnew
imul
add
mov
sbb
add
push
decl
das
cs
loope
xor
pusha
outsl
inc
pop
push
add
push
sbb
xchg
and
add
push
pop
sub
xor
cmp
cmp
cmp
jmp
mov
sbb
mov
pusha
into
cmp
lret
push
xlat
push
push
add
sbb
or
leave
mov
inc
lods
movsl
stos
sbb
jnp
push
lcall
icebp
daa
lcall
push
dec
lock
xchg
add
inc
and
inc
mov
pop
mov
push
inc
cmp
pop
sub
stc
xchg
clc
push
mov
stc
mov
test
cs
cmc
mov
notb
imul
add
cwtl
jmp
loopne
pop
fcmove
movsl
inc
sub
pop
adc
lds
sub
or
je
ret
leave
dec
cs
add
cmp
loopne
mov
jmp
dec
or
mov
cltd
pop
inc
mov
test
push
cmp
addr16
nop/reserved
cs
ret
shrb
mov
xchg
je
push
fsts
movsb
mov
sets
push
shl
jo
lods
int
push
mov
inc
into
icebp
in
push
add
in
add
pop
xor
push
enter
js
mov
or
inc
dec
aaa
xorb
repnz
stos
dec
test
cmp
pushf
aad
aaa
sarl
mov
stos
mov
cmp
dec
and
sbb
out
xchg
xchg
mov
roll
and
cmp
xchg
xchg
cwtl
pop
enter
ret
popa
mov
push
insb
scas
popf
test
cmp
ds
mov
pop
sarl
push
mov
mov
mov
imul
mov
ljmp
pop
movsb
adc
aam
pop
lret
sbb
mov
xchg
xchg
test
leave
push
orl
mov
pop
pcmpgtb
sbb
inc
inc
sbb
arpl
pusha
jge
call
dec
push
and
rcr
dec
pop
pusha
cmpsl
or
jl
add
mov
or
pop
mov
scas
adcb
cs
enter
movsb
inc
mov
andb
or
fisttpl
jmp
addb
mov
dec
test
pop
push
and
inc
push
push
sub
sub
push
fs
dec
outsb
ja
or
imul
ja
cmpb
mov
push
push
dec
call
xchg
xchg
add
push
lock
inc
sub
jne
push
in
arpl
mov
jmp
pop
sbb
mov
pop
xor
pop
or
push
lahf
push
repnz
jle
cmpsb
mov
or
and
mov
fsubrl
int3
or
xchg
ret
jmp
jbe
loopne
icebp
movsl
rcrb
ljmp
xor
pop
jne
inc
pushf
in
mov
jp
add
repnz
bound
data16
jns
xchg
inc
inc
popa
push
and
xchg
lret
mov
xchg
add
jae
aad
mov
lods
and
push
cmp
cmp
push
leave
arpl
cmp
pop
jmp
sti
mov
add
push
fs
or
pop
rcr
fs
pushl
decl
pop
jno
incl
iret
repz
and
adc
add
mov
hlt
jns
rol
jmp
sub
loop
jmp
xchg
mov
inc
fcoml
push
lock
cmp
push
jo
xchg
pop
fisubs
cs
mov
jns
test
test
orb
pushl
out
cmp
sahf
in
push
hlt
addr16
orb
inc
inc
ret
push
xchg
push
sbb
repnz
push
fldl
sti
addb
in
jnp
fbld
or
je
mov
sbb
and
fisttpl
push
shr
inc
jne
pop
xlat
mov
or
cli
add
push
loope
xchg
add
mov
inc
push
loopne
jmp
mov
jne
add
sub
adc
stc
and
loopne
lea
inc
and
cmp
mov
jo
or
and
adc
add
fnstcw
sbb
outsb
xchg
jbe
or
push
push
xor
enter
inc
push
sbbb
xchg
ret
cltd
mov
ret
jmp
negb
lock
mov
fstl
push
pop
inc
rcrb
xchg
mov
loope
cmp
rorb
push
lea
mov
inc
icebp
pop
push
add
pusha
xchg
mov
fs
or
add
test
push
inc
xchg
pop
loopne
inc
push
adc
imul
movsb
scas
add
cmp
jns
and
test
add
push
mov
call
push
rcrl
movsl
cmp
cli
and
sbb
cmpb
lock
xchg
in
es
ja
test
mov
rcrl
daa
loop
mov
and
pop
or
jl
jb
jle
addb
mov
movb
jmp
ss
je
insl
xor
sub
std
add
addb
add
cmp
mov
jo
cwtl
clc
mov
insb
or
dec
stc
movsl
add
fdiv
or
inc
repnz
cwtl
or
xor
or
adc
inc
call
xor
bound
test
orb
imul
or
std
cwtl
mov
insb
xor
jne
mov
push
stc
imul
mov
movsl
jge
test
add
inc
push
aaa
cmp
xchg
xor
mov
mov
mov
ljmp
adc
add
sbb
push
ret
adc
mov
mov
in
pop
lock
inc
or
int3
xor
out
push
inc
xchg
xor
cmp
loope
add
sub
sti
sbb
movsl
xchg
inc
jo
cmpb
mov
mov
pop
push
xor
and
arpl
loopne
fcoml
gs
aam
sarb
das
das
mov
popf
enter
rol
cmp
lods
mov
mov
divl
fbld
aam
aaa
dec
cld
xor
inc
cmp
aaa
xor
adc
and
in
sbb
clc
jno
sub
orl
fmull
add
scas
jmp
mov
in
inc
in
jo
mov
or
xor
into
imul
sub
sub
add
or
sbb
rcr
int3
int3
add
xor
adc
add
inc
sub
xor
addb
jmp
clc
or
dec
or
xchg
outsb
jb
dec
lods
sub
mov
adc
insb
ret
test
mov
sbb
xor
mov
adc
jbe
push
clc
dec
push
loopne
fisubrs
sbb
lcall
inc
xchg
push
push
pop
divl
xchg
push
push
or
dec
xor
movsb
ss
rcrb
clc
dec
movsb
fimuls
or
in
orb
cmp
call
mov
add
jns
add
lock
stc
rcrl
xor
mov
rolb
testl
and
cmp
and
sbb
jmp
or
cmp
add
or
sbb
movsb
xor
and
ja
adc
push
pop
adc
push
mov
xor
je
test
ret
test
mov
mov
mov
shl
pop
cs
hlt
fdivrs
pop
mov
popf
jne
sub
fcmovnb
fidivs
icebp
je
inc
cmpsl
pop
loopne
sub
jp
pop
fimull
push
xor
lcall
xorb
mov
mov
or
pop
add
cmpl
js
sti
les
sbb
pop
ja
push
mov
loopne
lock
rcrl
pop
sar
pop
lods
movsb
and
xchg
push
add
orl
out
mov
fdivr
cmpl
fcmovne
test
outsb
stos
sbb
dec
or
je
or
push
xchg
into
xchg
fldpi
insb
lods
pushf
pop
or
add
push
lret
in
sub
jecxz
mov
aam
mov
mov
adc
dec
push
or
jo,pn
std
loopne
js
notl
arpl
sub
stos
insl
pusha
lea
ja
adc
lods
shll
in
sub
hlt
fistl
cs
stc
cmp
js
inc
jae
je
insb
pusha
xchg
inc
sub
aad
test
fsubp
ds
fsubl
or
add
adc
jmp
jae
and
js
add
fmull
shlb
sub
mov
jno
dec
xchg
inc
fs
cmp
sbb
imul
int
and
pop
jp
adc
out
mov
add
adc
not
loope
xchg
movl
fiaddl
lea
mov
or
sbb
jle
inc
je
pop
push
or
pop
and
mov
mov
inc
movsb
dec
push
mov
and
dec
adc
jge
sbb
je
push
arpl
imull
xor
and
cmp
aaa
aam
mov
dec
pop
gs
shrb
and
in
rclb
xchg
jl,pt
adcl
clc
dec
mov
sub
loopne
mov
mov
stc
or
addr16
mov
push
xchg
inc
inc
push
add
jl
insl
cmp
jne
cmp
xor
pushf
sub
cmpsb
popf
lret
sbb
xlat
popa
jle
mov
mov
ss
cmp
popf
add
test
adc
push
mov
mov
inc
mov
aad
aas
xchg
dec
loop
push
out
mov
ja
jmp
mov
inc
lods
xlat
sbb
pop
lret
mov
dec
mov
mov
xor
jp,pt
mov
je
pop
cmp
xchg
cmp
test
sbb
outsb
jo
or
or
ret
das
xor
adc
jmp
faddl
jno
outsb
je
arpl
jmp
insl
sub
add
notb
or
in
imul
pusha
flds
adc
push
jb
jns
sbb
or
dec
mov
shl
sub
or
shlb
shll
movsb
addr16
mov
loop
cmc
sti
jmp
cmp
jle
popa
mov
sbb
and
pop
push
add
mov
pop
mov
push
adc
ret
push
shr
push
adc
adc
push
jbe
xchg
pop
jb
mov
inc
cld
adc
xor
int
fimuls
loope
xchg
sub
popf
xchg
or
inc
sbb
fwait
dec
rorb
sub
stos
push
stos
sbb
push
push
rol
xchg
push
scas
data16
pop
mov
or
cmpb
jne
rol
mov
xor
inc
stos
xor
and
sub
push
sub
pusha
cld
jmp
shll
mov
mov
inc
daa
add
pop
adc
loopne
lock
or
push
into
xor
push
scas
frstor
inc
mov
rcrl
adc
dec
adc
test
inc
cld
jmp
or
testb
add
push
sbb
daa
mov
pop
jl
jae
jbe
cmpb
fidivrl
and
mov
or
cmpb
sub
lock
mov
add
mov
or
jnp
fmull
int
mov
loop
sbb
xlat
and
or
add
sub
mov
paddsw
xchg
lret
clc
repnz
sahf
add
mov
dec
jmp
sub
sub
inc
cmp
mov
insb
push
cmpsl
into
cmpb
stc
or
cmc
movb
inc
jmp
push
mov
or
add
dec
dec
adcb
out
xchg
repnz
sar
ret
js
inc
push
jle
add
scas
sub
add
sub
movsb
movsb
push
sub
dec
push
and
cmp
or
inc
dec
pop
push
decl
mov
sti
in
jle
cmp
xor
dec
sub
push
pop
pusha
rolb
jo
mov
mov
enter
dec
cmpb
sub
adc
xor
cs
xchg
loopne
aam
adc
pusha
jnp
jle
aam
dec
push
and
sbb
pop
orl
sub
stos
and
xor
add
mov
lret
lcall
fstps
jmp
pop
int
fchs
pushf
cwtl
andb
inc
and
outsb
rorb
xor
mov
xchg
mov
xor
mov
movsl
daa
pop
mov
mov
push
sar
movsb
addl
outsl
addr16
sbb
jge
sub
add
pop
xor
add
jnp
fidivs
jns
int
push
outsl
shl
dec
pushf
test
addr16
out
out
testl
enter
jp
cld
mov
dec
popf
xchg
adc
xor
mov
xchg
arpl
int3
je
dec
pop
daa
repnz
jb
icebp
cli
fwait
jp
push
mov
xlat
roll
push
dec
pusha
gs
xchg
repnz
cmpb
xchg
nop
push
add
nop
cmpsb
es
bndldx
jbe
and
pop
in
pop
dec
pop
arpl
and
push
scas
inc
pop
lock
pop
and
gs
in
sub
mov
jnp
push
cmp
shrl
add
cltd
pop
mov
ss
jge
push
push
jp
insl
and
sahf
inc
jb
shll
in
and
nop
lea
pop
cmpb
add
xchg
cmpsl
sbb
js
adc
shlb
and
rol
mov
cmp
shlb
adc
inc
lret
adc
pop
rclb
jne
add
dec
jge
loopne
sahf
mov
add
nop
add
sbb
fsubrl
pushl
insl
and
lahf
out
ss
and
add
push
mov
stos
mov
stos
mov
jle
push
or
mov
adc
jmp
inc
loopne
gs
scas
xor
mov
pop
lods
popa
jl
out
sub
or
and
es
imul
lock
or
adc
leave
sub
movsb
or
sbb
pop
sbb
mov
adc
sbb
jge
int3
mov
add
lds
fmull
push
jb
in
stos
imul
and
mov
push
jno
push
rorb
pop
mov
aaa
test
ret
jecxz
fstps
pop
and
mov
dec
inc
xchg
addb
hlt
cmp
jp
cmp
or
insb
test
loope
mov
push
icebp
pop
jbe
mov
xor
or
rclb
ret
jge
sti
cmp
pop
xor
xor
ss
adc
lea
in
addl
jbe
sbb
mov
sub
mov
pusha
sub
sar
sub
xchg
aaa
mov
das
adc
mov
cmpl
jne
loope
sbb
into
in
xchg
push
callw
sub
add
into
pop
push
add
arpl
fcoms
pop
xor
je
test
lret
xchg
or
mov
and
inc
sbb
dec
jb
jo
pushf
cltd
inc
shl
mov
push
fisubrl
das
lea
or
imul
or
dec
inc
xchg
pop
add
mov
leave
jecxz
sub
fisttpll
les
mov
add
icebp
pop
push
jns
sub
inc
cwtl
pop
out
mov
mov
push
add
xor
push
ret
jmp
mov
fbstp
sti
nop
jne
jg
xchg
mov
shlb
lahf
insb
int3
push
mov
jecxz
ret
and
cmp
push
lea
inc
jbe
mov
out
adcb
mov
rol
aam
lock
inc
lock
push
adc
add
ret
neg
bound
adc
cmpsl
xchg
nop
xchg
adc
insb
iret
add
int
mov
or
inc
sbb
or
or
pop
loopne
data16
popa
pop
sbb
push
cld
mov
int
mov
pop
pop
dec
cld
adc
ret
inc
ror
lret
aam
sbb
add
jecxz
lods
jg
pusha
loop
adc
push
into
xor
push
push
dec
insb
loop
cmp
jmp
jle
xor
jmp
and
cmp
lidtl
jbe
add
push
mov
cmpsb
push
jmp
jp
pop
push
scas
nop
gs
aam
and
pop
add
and
push
movq
sbb
push
call
sub
and
pop
sub
inc
xchg
lea
shl
jbe
push
mov
cmp
dec
adc
lret
test
sbb
inc
or
mov
or
ror
pop
das
dec
jb
jmp
imul
andb
sub
sbb
dec
xchg
and
lcall
test
inc
cmpl
jne
push
cmp
push
nop
insl
popl
aam
das
and
pop
mov
jb
adc
dec
push
imul
addr16
mov
mov
pop
jl
cmp
mov
shlb
sbb
cmp
mov
ret
mov
in
les
and
enter
mov
add
mov
int
lods
es
cli
pop
ja
mov
movzbl
jo
xchg
cli
push
add
mov
test
es
push
mov
or
loopne
ret
pop
ja
fldl
mov
cmp
mov
shrl
filds
xor
and
mov
pop
jl
mov
rcl
jbe
in
or
add
mov
sub
arpl
les
inc
filds
pop
push
gs
imulb
cmp
cltd
and
stc
cmp
jns
mov
push
inc
rclb
cmp
jbe
jbe
jecxz
or
pop
and
add
sbb
shrb
mov
xchg
testb
xor
pushf
je
sbb
push
dec
inc
pushf
pushf
pushf
pushf
cmp
es
sti
xor
lds
push
or
sbb
dec
rorl
mov
xor
xchg
pop
in
pop
mov
xchg
sub
mov
mov
push
xor
leave
cmp
lret
mov
test
lods
push
das
fcoms
and
xor
call
push
mov
adcb
dec
ud1
cltd
and
fmuls
mov
and
sub
std
add
mov
in
and
mov
sbb
dec
push
call
inc
inc
push
mov
push
leave
int3
add
mov
mov
mov
js
inc
repnz
pop
mov
lret
inc
mov
lret
xchg
xchg
dec
sahf
call
mov
xchg
mov
mov
push
jo
mov
outsl
cmp
push
push
sbb
mov
adcl
lret
sub
inc
pop
mov
call
call
mov
in
pop
dec
ss
insl
cmp
xchg
movsb
sbb
mov
pop
xor
dec
es
adc
in
sbb
pop
lcall
aam
stc
push
leave
movsl
enter
and
or
fmuls
outsb
lods
inc
and
cmc
adc
aam
sti
es
in
sbb
in
push
inc
dec
bound
xchg
lods
xchg
jbe
sbb
daa
pop
lods
icebp
call
and
fnstsw
cmpl
adc
fdivs
cmc
filds
mov
sbb
scas
test
push
fdivp
cmp
addl
add
or
xchg
lods
pop
gs
mov
mov
jbe
scas
js
xchg
or
les
lock
push
arpl
loope
dec
add
loopne
xchg
cmc
push
xor
xchg
sub
inc
xor
jne
dec
fwait
and
xchg
or
adc
lods
mov
sub
mov
mov
or
add
mov
les
or
add
push
pop
cmp
shrb
inc
cld
and
push
inc
mov
dec
xor
cmp
mov
adc
shr
lds
xchg
lahf
dec
dec
scas
fldt
test
or
shlb
in
sbb
sbb
adc
fmuls
rolb
lret
js
push
nop
sbb
rorl
mov
movsl
aam
add
sbb
pop
imul
mov
mov
cmp
lds
imul
mov
sub
shlb
or
cmp
xchg
or
push
or
push
xor
inc
imul
xor
sbb
mov
or
enter
add
add
push
adc
shrl
push
fs
add
sub
mov
mov
inc
in
cwtl
out
push
sbb
add
in
add
inc
cli
into
ss
cmp
sarb
or
mov
inc
hlt
mov
std
push
pusha
pusha
insb
xor
out
and
mov
lea
addb
push
sub
push
add
out
xchg
or
and
inc
add
or
adc
jbe
loopne
lret
push
notb
cmc
jo
xchg
gs
inc
sub
xor
in
add
mov
and
inc
lret
sbb
add
push
sbb
lods
jmp
and
jge
shlb
and
or
mov
lea
mov
dec
leave
sub
mov
cmp
and
sti
sbb
mov
cmp
aaa
cwtl
push
imul
add
push
bound
sti
jb
xcrypt-ctr
cmpsl
pop
xor
mov
xor
mov
add
or
je
jnp
mov
push
xchg
inc
sub
cmp
xor
cmp
cmp
fidivrs
inc
push
insb
dec
iret
jle
lods
xchg
push
jmp
mov
shll
xor
pusha
dec
in
sbb
sbb
pop
add
jne
movl
inc
and
inc
std
jne
mov
jne
dec
or
add
jmp
sbb
rolb
dec
add
push
add
flds
jl
pop
negb
push
push
notl
ret
jnp
mov
js
sbb
inc
aas
incb
cmp
ror
xor
je
jmp
lock
test
push
inc
jo
sub
push
and
push
test
pushf
stos
jnp
jae
cmp
jbe
xor
shl
jne
cmovae
or
inc
inc
push
leave
inc
pop
lea
call
lods
sbbl
push
bound
rcrb
sub
sti
testl
mov
cmp
ljmp
icebp
inc
loope
add
incl
out
inc
add
jge
add
jb
mov
mov
inc
xchg
push
arpl
adc
add
sub
and
inc
out
dec
jne
cli
xor
icebp
mov
xor
sbb
add
idivb
push
lods
xor
push
mov
inc
out
sub
dec
jne
mov
pushf
and
push
or
inc
mov
rclb
cmpsl
cmp
xor
push
test
jmp
adc
aam
loopne
and
xchg
mov
cs
mov
inc
mov
in
or
je
loop
push
and
adc
call
cmp
mov
and
mov
popa
out
xor
xlat
xor
inc
push
cmp
dec
pop
adc
dec
orl
dec
sbb
push
add
inc
jo
insb
ljmp
add
add
and
sub
or
stos
rclb
xor
sbb
jge
into
dec
out
or
std
jnp
jg
sbb
jmp
xor
dec
sbb
mov
lret
xor
into
jmp
sbb
aaa
test
out
imul
cmp
ds
add
xlat
mov
mov
icebp
test
jmp
adc
cmp
mov
inc
ret
cmc
pop
loopne
or
loope
push
and
ret
inc
sbb
add
push
push
mov
jl
xor
push
sbb
leave
rorb
loope
sahf
cmpl
clc
lret
cmpl
ret
or
addb
sti
andb
sub
or
inc
add
xor
test
push
test
ljmp
ret
je
mov
xorb
mov
arpl
pop
add
loop
imul
pushl
imul
int
cmp
mov
lahf
das
adc
jno
inc
inc
sbb
sub
xchg
xchg
mov
sarb
sbb
sarb
jl
and
cwtl
pushf
movsb
popf
shlb
stc
aas
ljmp
push
mov
faddl
or
hlt
adc
cld
mov
das
pop
insb
inc
add
add
popl
push
xchg
jns
aaa
sub
adc
lea
inc
sbb
sub
cmp
js
ja
inc
xchg
sbb
pop
xchg
lahf
push
or
pop
or
addl
sbb
add
cmp
push
test
push
jb
add
orb
sub
lea
js
insb
leave
cltd
jmp
mov
aas
sbb
lcall
jle
sub
pop
clc
ret
or
inc
and
xlat
add
sbb
les
hlt
rcr
rol
test
enter
xor
movsl
jmp
test
mov
in
cmp
das
and
test
lock
addb
inc
pop
movb
xchg
clc
xor
ficoml
add
and
fcmovu
jp
ja
or
add
or
add
test
ret
inc
mov
mov
rcrb
or
insb
pop
arpl
push
xchg
loope
mov
push
imul
dec
fprem
lock
and
shr
lcall
or
lods
ds
push
cmpsl
cmp
aas
cmp
add
inc
push
sub
loopne
cmp
fnstenv
not
mov
pop
cltd
pop
call
je
adc
lea
jns
add
sub
push
in
sbb
in
push
in
inc
dec
or
subps
roll
sbb
push
mov
sar
push
dec
popf
fisubl
adc
xchg
cmpl
pop
cmp
scas
adc
xchg
mov
or
push
push
jno
adcl
mov
lock
inc
mov
cmpxchg
xor
movsb
xlat
or
and
pop
add
daa
inc
push
daa
xchg
test
cmpsl
xor
adc
mov
adc
push
out
arpl
cmp
jne
push
mov
sbb
or
sti
into
mov
fldt
xor
push
inc
push
or
pop
fistpl
mov
jl
in
arpl
and
pushf
jg
mov
shlb
mov
push
lods
add
xchg
sbb
pop
cs
rcrb
mov
push
dec
out
lea
push
add
cli
fisttps
mov
dec
loope
pop
mov
jp
aam
jmp
lds
jle
out
push
or
xor
xchg
mov
shlb
sbb
jnp
cld
pop
and
add
sbb
or
and
fsubrl
xor
sbbb
pxor
push
push
or
add
sbb
shr
je
mov
xchg
dec
testl
xor
loope
scas
push
pusha
jo
mov
dec
jne
or
jbe
je
subb
mov
imul
lea
or
xor
mov
je
xor
fildl
sbbb
lret
mov
add
jne
ss
fstpt
or
inc
inc
cli
pop
pop
ret
scas
in
in
xchg
push
mov
bound
add
lcall
add
icebp
aad
jb
push
adc
ret
jecxz
sti
mov
hlt
pop
mov
xchg
outsb
push
test
adc
loope
xor
out
jo
ret
push
dec
mov
push
or
shll
enter
or
mov
sub
dec
loope
jl
shl
bound
cli
sub
insb
cmp
add
sbbl
cmpsb
push
lods
and
punpckldq
das
dec
add
sbb
push
add
pop
pop
or
sub
test
mov
mov
rcr
mov
push
dec
push
or
in
lret
push
cld
cmpsl
fdivl
enter
cmpsb
add
sbb
push
lcall
fldl
or
inc
push
call
movsb
jnp
mov
add
popf
mov
in
or
xchg
fidivrs
cmpl
sahf
jge
push
fadds
mov
into
das
add
add
jmp
add
pop
dec
add
and
sbb
mov
jbe
adc
jmp
adc
jmp
add
stc
push
push
push
push
sahf
mov
std
sbb
movsb
fld1
or
sbb
cmp
or
or
lcall
or
mov
fwait
xchg
int
or
mov
jmp
adc
das
mov
pop
les
mov
adc
bound
cld
fmull
fstl
mov
cmp
push
mov
push
mov
and
leave
iret
repz
push
push
pop
sub
cmp
mov
cwtl
push
aaa
push
cmpsb
out
pop
addr16
icebp
sub
dec
popa
out
xchg
les
lods
sbb
add
push
jg
push
neg
sub
push
cmp
sub
pusha
jne
and
and
inc
add
out
dec
add
xchg
sbb
pusha
push
adc
inc
js
inc
add
dec
sbb
je
push
cltd
jmp
inc
faddl
adc
pop
and
adc
or
inc
test
adc
lea
fucompp
test
jp
mov
lahf
arpl
and
push
push
test
inc
aaa
adc
mov
lock
or
mov
or
cli
mov
mov
test
fdiv
xor
scas
and
dec
push
ret
cmp
sbb
idivb
sar
xor
jle
mov
cmp
scas
mov
les
mov
push
mov
rcll
iret
and
stos
bound
mov
pushf
or
mov
sbb
or
inc
scas
jns
sbb
push
cmpsb
lret
inc
test
or
lock
daa
xchg
or
ret
and
xor
lock
iret
mov
test
mov
xor
inc
fs
dec
js
adc
popa
jmp
sub
add
popf
fadds
mov
mov
enter
std
jp
mov
jae
jne
rclb
cli
adc
pop
mov
dec
add
rorb
pusha
mov
add
dec
mov
fildl
dec
hlt
stc
xchg
lea
je
movsb
ret
jno
scas
sub
push
idivb
adc
push
stc
mov
sbb
jle
cmp
pcmpeqb
dec
push
leave
adc
lret
ficompl
xchg
or
fcoml
or
shl
adc
pop
xor
popa
jmp
xchg
adc
jne
or
in
fsts
add
adc
xor
lds
ret
add
mov
mov
add
pop
or
add
sub
loope
and
mov
mov
lods
es
ss
test
aad
test
mov
cwtl
pop
xor
or
inc
sbb
test
push
sub
mov
stos
sbb
jne
inc
sub
jo
push
pop
aad
pop
cli
test
xchg
and
ss
cmpb
in
or
ja
cmp
sub
mov
movsl
dec
adc
icebp
sub
sub
jmp
dec
push
imul
add
mov
cmp
lods
scas
push
dec
cmp
inc
mov
push
push
push
dec
loopne
pop
and
pop
lea
inc
adc
pop
dec
scas
jbe
jo
cmc
cmp
idivl
dec
imul
jle
inc
pop
and
push
or
jp
call
notb
push
inc
lea
sahf
pop
or
inc
sub
dec
push
pop
or
fwait
lods
lock
fwait
cwtl
add
rcrb
push
stos
cmc
cmp
xor
cwtl
xchg
push
idivb
dec
stc
mov
cmp
cmp
sbb
int3
and
test
push
or
sarl
jns
daa
mov
mov
add
xor
mov
cld
sbb
icebp
push
loope
inc
push
xorl
dec
jnp
mov
adc
mov
je
add
or
ret
mov
jg
negl
pop
push
xchg
and
dec
add
xchg
adc
fbld
mov
and
add
mov
into
nop
cmp
lcall
std
and
or
scas
add
mov
into
cmp
icebp
push
jnp
addb
jno
leave
pop
add
or
and
and
pop
push
add
ja
test
mov
sbbb
popf
fldl
jp
mov
jno
mov
mov
add
add
adc
sbb
out
sbb
mov
scas
fnsave
dec
mov
mov
mov
mov
int
fnsave
adc
xchg
lea
inc
addl
or
or
cmpb
pop
inc
pop
cmpsl
inc
dec
push
nop
pop
out
pop
inc
or
stos
mov
pop
mov
jmp
cld
scas
cmp
data16
nop
jmp
inc
daa
add
or
flds
jo
dec
pop
mov
push
push
xor
in
push
nop
aad
lcall
jmp
push
scas
addb
mov
dec
add
mov
lret
add
sub
lods
addb
daa
add
imul
xor
std
push
or
sub
jle
incl
stc
scas
mov
sub
dec
mov
or
data16
loope
or
aas
dec
data16
cmp
rcrb
pushf
jmp
push
mov
jmp
dec
in
add
in
cmc
rorl
dec
sub
and
jge
dec
jno
orb
or
jmp
data16
test
sbb
jmp
test
sbb
in
or
jg
int3
cmp
out
or
jmp
push
clc
cmp
repz
out
into
inc
addr16
sbb
aas
fisttps
or
shl
scas
mov
lods
or
mov
fxch
adc
cli
xor
addl
fstpt
sbb
mov
adc
lock
push
push
push
mov
and
sbbb
mov
int3
nop
dec
call
jmp
sub
jo
or
and
rol
jmp
int
dec
insl
jmp
lret
inc
dec
xor
and
ljmp
adc
nop
sub
xchg
insl
push
out
pop
xchg
adc
daa
pop
mov
mov
mov
mov
inc
push
lea
jecxz
mov
mov
inc
sub
pop
jne
jbe
inc
xor
iret
repz
mov
sahf
lret
js
iret
push
mov
andl
dec
scas
mov
aam
inc
push
rclb
pop
mov
sbb
xor
pop
pop
movsl
or
rcrb
das
test
sahf
out
push
pop
pop
fcomps
mul
xchg
mov
cmp
xchg
int3
loope
es
test
hlt
repnz
je
sub
cmp
push
xchg
add
xor
lods
adc
pop
mov
movsl
cmp
push
xor
mov
mov
xor
addb
stos
mov
sbb
pop
and
inc
mov
movsb
sbb
data16
lds
xchg
cmp
push
xchg
inc
push
pop
arpl
mov
ja
es
xchg
cltd
adc
pop
rcrb
stos
cltd
lea
push
and
mov
sbb
fisttpl
mov
jb
in
movsb
mov
dec
lods
cmp
mov
mov
fsubrl
jb
jmp
xor
add
and
stos
movb
movsb
mov
fwait
jg
fimuls
cld
mov
leave
lods
mov
enter
mov
pop
ds
pushf
mov
xchg
mov
or
pushf
adcb
or
dec
test
xchg
dec
add
aaa
leave
jne
orl
push
or
test
push
and
sbbb
lods
pmaxub
sarl
or
xor
in
adc
mov
insl
mov
push
mov
imul
jnp
sbb
clc
adc
lods
div
mov
adc
pop
adc
lret
pop
push
xor
or
inc
xor
mov
jle
sub
pop
push
xor
pop
and
adc
divb
mov
mov
or
pop
pop
sbb
or
pop
aas
or
movb
rol
pop
xchg
cmp
sbb
mov
inc
adc
pop
push
cld
sbb
mov
push
jmp
adc
jns
fwait
stos
mov
add
push
jg
mov
jnp
es
mov
and
inc
jge
xor
xchg
movsl
push
or
ds
mulb
shlb
adc
es
xchg
lock
adc
mov
mov
or
jne
push
adc
inc
pop
push
inc
and
loopne
dec
sub
cmpsl
xor
adc
push
mov
lock
and
repz
xor
mov
jg
ljmp
add
outsl
push
push
test
adc
push
and
and
stc
outsb
sahf
cmpsl
dec
push
pop
outsl
inc
or
sahf
sub
repz
jle
dec
outsl
addl
int3
in
sub
lea
and
mov
sbb
pop
fists
lea
lea
inc
out
mov
or
shl
insl
fimull
mov
xor
dec
lods
sbb
xchg
test
pusha
or
loope
imul
inc
inc
push
negl
ret
mov
rcrl
lret
ret
mov
shr
arpl
and
dec
les
addl
xor
adc
into
lods
iret
inc
adc
xchg
jo
orl
mov
push
push
mov
lock
or
shr
jge
jo
and
push
loopne
sahf
add
std
inc
mov
stos
add
jmp
mov
lea
leave
jp
sbb
fwait
out
movsb
xor
imul
cmp
push
and
js
add
mov
adc
and
cmp
and
ljmp
mov
mov
popa
sbb
rcll
xorl
loope
xor
pop
sbb
lock
das
inc
lret
xor
push
push
mov
divl
add
xor
mov
mov
and
add
ret
cli
add
mov
mov
rorb
inc
dec
fisubs
or
adc
ds
pop
andl
or
stc
mov
out
dec
jbe
cmp
addl
xor
jle
nop
pop
subl
and
cmp
lea
sbbl
cmp
cmp
nop
xchg
mov
cmp
sahf
scas
inc
test
test
shlb
pop
rcll
pop
jo
sahf
pop
loop
mov
sbb
rorb
stc
and
push
mov
sbb
mov
mov
xchg
push
or
scas
xchg
jmp
inc
or
sahf
mov
out
and
adc
sbb
cmpsl
push
cmp
mov
insl
mov
loop
popa
aad
push
mov
pop
outsl
or
mov
shll
outsl
mov
jbe
add
gs
dec
inc
call
out
outsb
cmp
inc
jne
mov
add
or
jne
incl
mov
pop
insb
pop
pop
mov
dec
out
dec
adc
ljmp
xchg
aas
adc
pop
andl
push
stos
xchg
gs
adc
push
adc
pop
mov
ret
add
ror
gs
arpl
jno
cld
enter
or
and
testl
dec
push
push
call
out
mov
dec
add
mov
add
sub
fidivrl
movsl
adc
incl
pop
jp
add
inc
xor
pop
je
cmp
sub
mov
and
xor
pop
xlat
and
cmp
push
mov
jmp
push
xor
pop
jle
in
pusha
shlb
cld
add
and
sbb
or
scas
or
insl
push
mov
and
es
inc
cli
rorb
insl
mov
stos
ds
and
sbb
push
shlb
fistpl
pop
jbe
pop
cmp
push
push
iret
clc
sub
test
pop
clc
xor
ret
into
les
push
cmp
sbb
jb
fs
sbb
jae
lea
add
add
adc
lret
pop
xchg
lret
lock
fcmovb
out
frstor
orl
dec
call
pop
loope
xor
add
mov
or
sarl
mov
sbb
push
push
je
cltd
scas
call
push
sub
lea
push
fldcw
int3
pop
inc
pop
or
add
mov
push
xor
popa
int3
test
pop
dec
push
lock
std
lahf
dec
in
push
push
pop
push
int
sar
aas
sbb
nop
pop
mov
cli
inc
incl
jae
lock
movw
mov
std
fnstsw
and
xor
outsb
mov
aam
movb
jb
push
push
push
jl
dec
mov
add
call
or
add
push
mov
shrb
fidivrs
cmp
push
sbb
or
inc
add
lea
daa
adc
faddl
add
xor
aas
lock
or
rorb
and
into
jno
xchg
cmp
jb
inc
jl
cmp
or
adc
sahf
inc
loope
add
push
cmpl
dec
or
xchg
inc
or
or
pop
ret
cmp
clc
add
xor
jmp
mov
adc
inc
je
je
pop
xchg
mov
mov
insl
xchg
incl
lret
or
jo
sbb
dec
scas
imul
test
mov
orb
jmp
mov
dec
push
pop
jmp
lea
cmpxchg
xchg
cmc
cmpsl
loop
stos
add
cmpsl
inc
sub
push
aaa
xor
push
mov
dec
mov
mov
jne
jmp
shll
or
je
push
mov
dec
movl
and
or
lods
push
test
pop
idivb
je
or
pop
fnstsw
mov
test
inc
inc
rcrb
jge
dec
push
stos
dec
decl
js
dec
out
mov
test
and
adc
divl
addb
je
cmpsb
or
dec
test
adc
sbb
lock
lcall
fnstenv
sbb
cmp
lods
dec
mov
dec
les
or
push
lock
out
not
add
sbb
xor
orb
adc
jae
cmp
lock
ret
mov
fld1
mov
repnz
push
sbb
lea
pop
pop
push
sub
push
lock
testb
or
sub
xchg
jl
int
dec
jbe
pop
mov
add
fs
xchg
fistl
pop
cmp
ret
shll
cs
das
inc
xchg
popa
das
sub
xchg
das
push
push
jb
pop
jle
jns
sbb
addr16
ds
push
jnp
incb
cmp
fldt
loopne
daa
jg
aaa
xchg
lret
xor
xor
add
pusha
je
xor
or
or
lock
xor
iret
mov
fmuls
adc
lcall
inc
cmp
inc
dec
fnstcw
jbe
xor
push
adc
cmp
jae
inc
adc
cld
lock
xorb
pop
pand
add
sbb
sbb
mov
jge
out
adcb
add
push
xor
out
sub
movsl
andb
push
clc
stc
roll
inc
adc
cld
sahf
push
xlat
jmp
daa
push
imul
lahf
hlt
iret
sbb
les
inc
adcl
push
dec
push
and
or
jb
stc
or
adc
sub
cwtl
xchg
mov
push
adc
or
cmp
out
mov
sbb
popa
sbb
jne
inc
xchg
cmp
add
and
add
test
or
gs
cmc
xchg
jo
sarl
lret
sbb
add
js
mov
jge
inc
mov
xchg
push
sbb
or
and
or
popf
insl
hlt
adc
sbbb
in
sbb
sbb
lds
stos
push
lods
and
cld
sti
std
and
cmp
test
idivl
sub
adc
ljmp
sbb
out
int3
hlt
in
jae
mov
out
fcmovnbe
loopne
add
add
fs
test
mov
scas
mov
daa
adc
and
add
pusha
popa
xchg
mov
fcomps
outsl
js
je
push
scas
sub
cmpsl
test
ss
ja
sub
ljmp
add
push
jmp
and
stos
push
fistps
mov
clc
lock
jb
fildl
and
or
push
test
pop
and
dec
mov
adc
mov
ret
jmp
lea
dec
and
or
xchg
lock
push
test
test
sub
int3
scas
sbb
add
enter
cld
add
add
jb
mov
pop
xchg
fsubr
mov
lock
ret
sub
cmpb
pop
push
or
rcl
ret
push
or
pop
negb
fcoms
or
lret
repz
lsl
jmp
push
pop
push
push
mov
cmp
jmp
rcr
or
mov
repz
dec
sti
or
pop
fdivr
sti
ja
push
cmp
or
cmp
or
xor
and
out
or
fisubrl
lods
mov
lret
xor
mov
adc
jp
cmp
je
cmp
ret
sbb
pushl
insb
add
call
addl
mov
jnp
in
cmpb
sub
out
sbb
jbe
or
xchg
or
popf
adc
inc
lock
cli
and
out
icebp
push
cmp
sbb
inc
dec
or
sahf
stos
xchg
inc
or
mov
mov
push
mov
xor
ret
push
inc
mov
and
xlat
mov
xchg
sbb
adc
and
push
cmp
jae
cmp
jmp
xchg
or
out
push
sbb
adcb
hlt
movsb
je
xor
clc
popa
jnp
shl
jmp
dec
and
insl
pop
ret
movsb
add
pop
inc
xor
or
cmp
xchg
pop
sar
or
push
aad
dec
rcl
push
pop
lret
jo
add
sub
sbb
or
mov
adc
add
mov
and
bound
add
add
mov
jmp
inc
cmp
dec
push
xor
pusha
inc
mov
add
fistl
mov
or
push
or
dec
inc
decb
dec
or
andb
imul
mov
pop
sarb
or
mov
add
mov
insl
nop
int
aam
enter
xor
loopne
pop
add
loop
pop
outsb
add
in
add
jns
pop
stos
cs
lret
movsl
and
add
into
pop
sub
sbb
pop
rol
cli
insb
cmpb
cwtl
outsb
clc
adc
add
sub
in
insl
cmp
je
mov
loope
es
dec
sub
xchg
adcb
mov
leave
addr16
inc
ret
mov
mov
mov
daa
fsubs
cs
aas
ljmp
lds
sub
push
xchg
shll
adc
in
inc
mov
ss
imul
inc
push
imul
aam
push
js
std
mov
sarb
ret
je
mov
jbe
out
sub
push
pusha
inc
dec
enter
aas
je
push
popa
imul
push
sub
mov
popa
movsbl
or
mov
jmp
cmpsl
push
lods
int
sbb
pusha
jae
test
adc
mov
imul
and
xchg
sub
adc
mov
cmp
xchg
aad
mov
inc
mov
mov
inc
fidivl
and
cli
mov
dec
pusha
ds
nop
ja
addr16
shrl
sub
mov
jl
cmp
jg
inc
jmp
nop
les
inc
pop
lds
jbe
jne
imul
add
push
inc
mov
jge
aas
sbb
inc
push
dec
inc
jecxz
in
cmp
insb
cmpsl
je
dec
ret
jmp
dec
je
mov
cmpsb
mov
lock
xor
icebp
xor
jae
rorl
jl
test
xchg
push
adc
ja
jnp
cld
and
add
jo
sti
mov
stos
iret
mov
inc
push
adc
push
mov
push
cmp
jge
mov
xor
jae
shlb
push
and
adc
push
mov
xor
xor
clc
add
xchg
sub
mov
sbb
mov
insl
push
mov
inc
pop
ret
add
push
daa
psubd
push
sbb
pushf
shll
test
cmc
fstl
sub
mov
jl
pop
cmpsb
data16
clc
ljmp
xorb
imul
mov
andb
lea
ja
mov
sub
jo
inc
rcll
orl
test
inc
sub
xor
or
adc
add
pop
enter
inc
imul
push
gs
mov
pop
repz
cmp
or
insl
lock
jp
rcl
lock
pop
ja
push
insl
rcl
movsl
stc
loopne
addr16
pop
addl
test
xorb
mov
adc
adc
push
mov
inc
mov
push
data16
mov
mov
and
or
xor
mov
sbb
add
xor
cli
adc
outsb
shrb
xor
lea
or
add
pushf
out
btc
and
jno
push
sbb
add
add
dec
dec
loope
or
add
add
mov
ficomps
mov
xor
xadd
and
or
adc
and
pop
inc
mov
fisttps
dec
iret
dec
and
pushl
add
test
mov
jno
push
adc
sbb
pop
loop
mov
push
push
xor
adc
ljmp
push
inc
cmp
ds
das
imul
neg
es
ds
push
insb
enter
add
adc
cwtl
or
outsl
or
or
adc
or
aam
popf
mov
shld
scas
sub
sub
mov
imul
dec
xchg
cmp
rorl
dec
mov
test
pop
pop
adc
add
push
pop
xchg
add
aas
test
mov
addb
xor
inc
imul
aaa
les
mov
scas
call
out
andl
movsb
xchg
and
pusha
pop
pop
xor
xor
pop
dec
mov
ss
push
fwait
testb
je
sub
shrb
ds
pusha
push
or
push
dec
push
jp
pop
dec
jmp
es
fdivrs
and
mov
jmp
xorb
pop
jo
jl
popa
dec
add
mov
or
mov
loopne
xor
pop
mov
ret
shll
adc
add
dec
pop
add
aaa
std
sti
das
sbb
call
adc
lods
jae
call
inc
rolb
xchg
jge
test
andb
sub
add
push
push
lea
repz
mov
push
inc
mov
insl
mov
or
sarl
fcmovb
das
outsb
adc
fidivl
lock
mov
cmp
sbb
xor
fwait
inc
fsubr
das
pusha
inc
jmp
out
iret
les
xor
leave
sub
ret
pand
dec
jb
and
xorb
adc
cs
sub
jl
cli
mov
or
inc
mov
pop
mov
inc
push
push
nop
cmpsb
mov
int3
dec
mov
cwtl
or
lcall
dec
and
popf
mov
jmp
push
lods
mov
cmp
jb
mov
or
push
mov
cs
cld
mov
pop
push
or
xchg
dec
loop
lea
movsb
sub
jne
or
xchg
orb
mov
mov
insl
add
push
cmp
hlt
add
nop
leave
sbb
je
pop
lea
jl
sub
xchg
mov
jmp
andl
jmp
mov
mov
popf
add
insb
push
mov
test
sti
or
inc
jle
jle
sub
cmp
xchg
mov
add
mov
or
sbb
cmp
xchg
xchg
lods
bound
add
add
cmp
cld
fimuls
bound
sub
sbb
mov
icebp
mov
jae
mov
sub
inc
jmp
xor
ss
jge
sti
sahf
addl
mov
addr16
mov
movsb
jne
out
dec
jae
test
pop
fsubrp
sbb
or
mov
and
outsb
mov
rclb
bound
pop
push
sub
xchg
out
cmp
dec
cwtl
inc
inc
rcrb
and
adc
sub
cmp
mov
lods
lods
adc
sub
mov
sar
loopne
je
mov
data16
mov
mov
adc
lcall
xchg
imul
incb
dec
loop,pn
xor
fldl
pop
push
rclb
sahf
dec
dec
or
iret
pusha
adc
mov
mov
fisttps
repnz
and
lea
cmp
xorb
jg
cmc
jecxz
push
push
push
gs
inc
jmp
cmp
pop
xchg
adc
xor
add
dec
mov
hlt
les
add
sub
add
and
fsubrs
cwtl
jge
add
lcall
sbb
icebp
inc
jae
test
cmp
cmc
sub
sub
sub
add
add
jle
xchg
inc
xor
jne
or
inc
or
cmp
push
flds
cld
fsubrp
lods
sarl
add
mov
mov
rcll
imul
mov
mov
push
inc
jge
movsl
add
movsb
mov
cmpb
xorb
out
push
add
into
mov
lahf
mov
out
mov
mov
add
jae
sub
mov
sbb
mov
mov
xlat
and
std
mov
mov
inc
testl
add
enter
cmp
les
mov
jne
inc
or
cmp
or
push
mov
xchg
pop
dec
xchg
pop
mov
test
pop
fsubrs
clc
cwtl
xchg
test
push
pushf
fldt
inc
push
lea
lcall
add
pusha
add
add
mov
scas
ret
xor
cmp
jb
add
add
inc
ja
shlb
pop
inc
mov
add
pop
adc
adc
cld
push
int
sbb
sti
jg
add
push
addb
bound
sub
out
and
call
shr
mov
add
or
shr
aas
or
sbb
das
rcll
mov
bound
or
adc
inc
mov
inc
adc
addb
negb
push
pop
jne
je
jg
jl
fcom
insl
fadd
loopne
shr
or
mov
inc
ret
or
sahf
dec
mov
jne
outsb
mov
inc
xchg
dec
mov
mov
les
adc
and
or
push
cli
sub
cmp
lock
rcr
fiaddl
dec
add
mov
fwait
loopne
ljmp
jmp
or
mov
mov
ret
fs
mov
sub
mov
push
jl
dec
int3
int3
jmp
xchg
jp
jp
or
daa
mov
push
add
push
dec
into
jmp
lods
cmpsb
icebp
add
mov
push
and
and
les
icebp
pop
mov
and
push
mov
pop
xorb
lret
mov
sub
sub
test
sbb
add
int3
loop
movups
les
outsl
cmp
mov
inc
mov
inc
inc
or
add
xor
mov
xchg
rcrl
sarb
dec
adcb
ficoms
push
stc
popl
and
or
push
mov
or
pop
ret
in
adc
sbb
inc
clc
dec
incb
stos
push
xor
movsb
icebp
push
clc
addr16
push
pop
pop
and
cmp
mov
cmpsb
sub
pop
cmp
aam
mov
xor
push
jo
mov
ret
push
xor
mov
das
in
cmp
xchg
shll
adc
and
jne
add
adc
jecxz
faddp
push
int3
or
sbb
pushf
mov
jb
dec
in
and
add
subl
or
mov
push
lea
sysret
imulb
es
sbb
sub
mov
loopne
adcl
js
aad
pop
pop
bound
add
mov
cmp
and
int
jns
push
pop
mov
sub
shlb
add
push
test
xchg
insl
jnp
orl
sbb
test
clc
pusha
aam
call
jmp
push
mov
cld
push
js
xor
lret
cmp
push
adc
pop
iret
cli
pusha
stos
cmp
iret
sbb
dec
sub
adc
and
push
mov
sbb
mov
and
in
rclb
cs
or
add
push
dec
push
lock
loope
sbb
cmp
jge
push
pop
bound
loopne
sbb
jmp
gs
in
stc
pop
test
dec
lds
jmp
in
mov
add
sbb
jecxz
into
idiv
cmp
xor
aam
ffreep
in
je
pop
jmp
jmp
push
lea
add
jle
pop
mov
add
sar
mov
aas
or
add
loop
or
dec
adc
fwait
sbb
mov
movb
dec
mov
jge
mov
shr
cmc
lods
push
cltd
lods
loop
pop
adc
cmp
sbb
or
adc
aas
mov
push
inc
pushl
mov
jns
cmpsb
dec
jnp
mov
or
out
mov
cmp
out
inc
inc
or
mov
push
sub
xchg
add
inc
mov
mov
mov
pop
ret
add
sbb
push
add
fdivr
sbb
rcll
push
hlt
mov
andl
lock
cwtl
push
dec
into
push
outsb
movsb
add
and
xchg
add
mov
enter
sub
movsl
mov
loope
or
dec
clc
loopne
inc
inc
call
jmp
loope
sub
push
dec
inc
outsb
fadd
mov
dec
hlt
pusha
dec
or
in
inc
xor
push
or
xor
std
jnp
pusha
enter
push
add
fisubl
xchg
je
dec
or
sarl
fs
add
mov
ja
mov
and
and
mov
add
test
adc
add
jecxz
scas
mov
add
adc
xor
icebp
rol
sbb
mov
imul
daa
push
es
mov
dec
iret
test
or
sub
mov
sbb
pop
popf
popa
and
insl
cld
fisttps
cmp
mov
push
mov
inc
mov
sbb
fldt
cmp
scas
mov
xchg
mov
or
lret
ss
loope
push
adc
cmp
subb
mov
cmp
jne
bts
pop
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
loopne
ja
cmp
ret
sub
sub
add
add
add
dec
dec
dec
int
andl
jbe
fs
jne
or
pop
jns
adc
fiadds
cltd
shl
sbbl
mov
cmpsl
ss
pop
data16
fstps
test
sub
and
or
mov
cs
add
daa
shlb
movsl
jne
lea
mov
stc
cmp
push
xor
add
shlb
test
pop
add
rol
push
or
inc
lock
test
inc
push
jne
es
push
inc
sub
xor
int
push
mov
xor
mov
push
jo
inc
dec
js
lret
jmp
inc
mov
pop
mov
adc
call
xchg
aas
push
jae
jo
jae
adc
les
xchg
add
jmp
ja
lcall
je
das
and
pop
cmp
xor
cmp
mov
adc
cmpb
xchg
int3
test
lret
and
sbb
aam
and
sub
pop
xchg
cmp
push
inc
mov
add
push
cmp
test
and
loopne
test
jns
dec
lds
xchg
loopne
ret
inc
ss
in
mov
jmp
sbb
jecxz
dec
and
and
or
outsb
mov
push
dec
mov
push
out
or
mov
js
xor
mov
sbb
add
add
push
xor
add
and
mov
pushf
push
xchg
pop
fcompl
inc
jp
in
call
sbb
jg
add
out
add
loop
lea
out
hlt
loop
sbb
push
sub
pop
mov
fisttpll
xor
or
hlt
mov
mov
cld
outsb
inc
outsb
add
push
jmp
test
fdivrs
xchg
push
push
xorl
pop
jl
push
clc
adc
and
fnstcw
pop
sbb
or
stos
popa
add
inc
push
lcall
add
and
test
es
aam
sub
and
dec
push
ret
inc
setnp
or
add
dec
sbb
adc
push
mov
sbb
addb
cmp
insb
push
mov
xchg
dec
xchg
push
dec
lcall
lret
xor
test
mov
dec
roll
jle
add
add
pushf
lods
dec
js
push
pop
pop
pop
jg
sub
jb
cmp
push
jno
nop
enter
xchg
data16
inc
dec
loope
dec
mov
push
and
add
jb
sub
inc
mov
pop
mov
add
lcall
push
xor
pop
pop
shl
mov
lock
cmc
les
add
sbb
ja
pop
mov
scas
ljmp
or
cmpsl
mul
jo
jl
sbb
andl
dec
fdivs
jle
xchg
in
mov
lea
cmp
sbb
or
clc
decb
fimull
pop
cwtl
xor
fmull
push
aas
out
mov
pushl
jo
mov
and
cmp
icebp
mov
lret
cmp
shlb
test
sar
insl
push
std
dec
int3
es
jne
push
push
pop
mov
or
jne
pop
push
adc
cmp
jne
out
lret
xor
imul
cmp
add
pop
mov
or
adc
popf
pop
adc
pushaw
es
ss
fisttpl
or
mov
addb
and
int3
push
cmp
icebp
imul
add
icebp
push
push
xor
imul
adcl
pop
loop
imul
xorb
aad
adc
jmp
fadd
or
cmpb
xorb
add
ror
or
dec
fmull
jne
jge
push
scas
rcll
or
hlt
xchg
mov
xor
jmp
jle
xchg
cmpl
lods
mov
pop
push
nop
shlb
das
inc
shlb
je
jae
out
dec
imul
mov
push
pop
jl
dec
sbb
test
or
mov
scas
test
aas
cmp
insb
lds
in
add
mov
xchg
sub
cwtl
cwtl
imul
inc
mov
mov
dec
pusha
out
fwait
idivb
inc
pusha
jne,pn
sbb
inc
mov
sub
outsb
dec
fcoml
les
sbb
aaa
jge
mov
mov
bound
adc
hlt
pop
xchg
add
out
adc
cwtl
or
nop
or
int3
add
sub
mov
push
adc
movl
pop
mov
inc
inc
dec
cld
movb
roll
das
out
sub
inc
pushf
xor
test
push
add
bound
inc
loop
sub
push
pop
sbb
add
enter
or
stc
jb
ljmp
mov
inc
stos
sub
call
test
lahf
push
push
pop
adc
mov
inc
add
es
or
clc
ret
xor
add
mov
mov
lods
push
jne,pn
arpl
sub
or
add
out
and
inc
fsubs
jae
les
jbe
rcl
nop
orl
push
repz
dec
add
scas
mov
cmp
push
ret
pusha
jmp
insb
in
push
jne
scas
sub
outsl
inc
pop
add
add
dec
dec
push
xor
xor
cmp
out
cmp
xor
pop
insb
pop
xchg
cwtl
adc
jbe
mov
push
daa
pushf
dec
sbb
mov
mov
xorl
je
orb
ret
adc
sub
mov
sbb
loop
xor
clc
and
mov
adc
dec
cld
and
jbe
pushf
xor
or
mov
mov
jae
push
in
ja
cwtl
movsbl
mov
mov
fstl
daa
mov
test
bound
mov
fisttpll
orl
lret
das
adc
stos
out
rcrl
or
add
cmpsb
stos
pop
or
add
add
mov
sbb
sbbl
sbb
jae
and
or
nop
adc
add
cmp
mov
lea
outsl
jmp
inc
sub
xchg
xchg
xor
adc
rcll
sbb
pop
fs
cmp
test
movsb
cmpsb
dec
clc
sbb
fildll
add
jnp
xchg
xchg
sbb
or
push
or
adc
dec
dec
outsb
mov
sbb
sub
dec
dec
dec
xor
cmp
pop
add
mov
pushf
fmull
cmovs
pop
pushf
pushf
push
pop
add
daa
daa
fs
daa
daa
je
jl
idivb
lcall
adc
dec
es
mov
xchg
cwtl
pushf
mov
movsb
test
dec
xor
and
enter
xchg
int3
rclb
adc
xor
and
call
xchg
aam
hlt
in
xchg
dec
clc
cld
add
or
or
gs
and
cmpsb
xor
adc
dec
xor
and
dec
xor
sub
xor
xor
and
cmp
pop
xor
adc
inc
dec
dec
cltd
fs
imul
pusha
sbb
add
cmpsl
jg
add
test
cmpb
and
mov
dec
loopne
push
mov
jnp
mov
sar
xchg
xchg
out
xchg
dec
or
adc
nop
in
leave
in
xchg
sbb
sbb
and
and
cmp
cmp
mov
in
inc
les
pop
cs
out
scas
orb
inc
insb
pop
ficompl
xchg
push
jo
sbb
cmp
ret
and
adc
jmp
or
incl
mov
in
and
loopne
xchg
push
or
xor
or
and
mov
pop
add
imul
fisubs
add
test
and
add
jb
xchg
imul
jmp
xorl
dec
xor
mov
xor
and
shr
in
and
add
jmp
cmpb
and
and
test
js
in
test
adc
or
shlb
add
adc
and
je
imul
or
inc
addl
loop
mov
and
int3
pop
push
call
add
std
lods
shr
adc
lock
and
mov
dec
fisubl
and
jecxz
sbb
out
jmp
sbb
rcrl
push
adc
aaa
adc
mov
clc
or
or
inc
and
es
loope
jge
inc
ljmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sahf
inc
jecxz
push
sahf
sub
pop
fstp
cmp
ds
pusha
fldl
cmp
out
dec
xchg
pop
dec
jnp
testb
dec
in
pop
idiv
adc
sti
add
pop
jns
testl
fistpll
xchg
sub
mov
gs
cs
dec
jne
orl
and
adc
or
dec
fcompl
testl
pop
call
js
dec
cmp
pop
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstps
jmp
fisttpll
jmp
adc
fldt
aam
outsl
loope
push
hlt
adc
insl
jg
push
jbe
je
and
imul
dec
xor
mov
add
cmp
push
add
xor
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
jp
or
mov
lock
jmp
sub
ror
pop
sub
jmp
sub
fstpl
in
or
jmp
fsts
sbb
test
into
imul
adcb
xor
scas
adc
leave
dec
subb
dec
and
mov
jnp
inc
and
sub
mov
xchg
push
adc
ss
or
xchg
cmp
xor
or
adc
adc
push
pop
in
loopne
jne
inc
shr
xchg
test
ret
xchg
scas
lea
mov
aam
xchg
dec
mov
cli
shrl
ds
inc
pop
orl
sbbb
loopne
or
push
push
pop
jmp
pop
or
lock
cs
icebp
and
push
sbb
lcall
cmpsb
mov
sbb
sbb
push
pop
inc
lea
nop
cwtl
in
push
or
pop
mov
jle
push
add
sbb
jnp
mov
and
pop
mov
lret
add
fs
mov
es
insl
lret
icebp
inc
inc
adc
sbb
push
out
ret
test
cmp
je
pop
jle
jo
sbb
lcall
adc
sbb
xchg
jo
cld
sbb
hlt
add
or
pop
cltd
and
roll
pushf
sub
add
mov
jmp
addr16
or
ja
mov
pop
xor
jmp
jno
out
pop
gs
dec
inc
and
dec
daa
mov
lock
test
js
or
fstpl
push
sbb
jne
jp
es
icebp
jo
ret
insl
addl
sub
add
das
mov
mov
in
or
lock
mov
int
mov
or
les
aas
pusha
daa
push
clc
pushl
adc
fcoml
push
push
das
ja
adc
pop
jecxz
sbb
decb
add
jne
adc
fnstsw
loopne
sub
jl
push
jnp
loop
add
add
sbbl
or
je
loopne
sbb
into
sbb
mov
mov
or
xor
mov
hlt
add
sub
call
shll
push
lret
lock
or
sbb
mov
imul
decb
mov
add
fsubs
into
pop
mov
shr
mov
push
mov
add
pusha
push
sbb
lds
out
fld
fucomp
pop
fsts
lock
pop
out
mov
lret
push
xor
test
cmovge
push
dec
stos
and
mov
test
pop
sbb
or
or
lcall
imul
push
mov
stos
cmc
and
pop
je
aad
dec
cmp
cli
push
and
in
cld
es
sub
push
push
push
mov
test
lock
dec
ljmp
inc
jnp
fnstsw
movswl
add
mov
inc
fstps
push
cld
test
and
rorb
enter
data16
or
insl
or
xchg
in
rclb
dec
cwtl
or
sub
nop
or
aam
test
cs
adc
sbb
maxps
adc
repnz
rcr
jle
movsb
fldpi
xor
dec
sbb
pop
repnz
pop
mov
push
push
cmp
fnsave
xchg
push
inc
scas
xsaveopt
mov
pop
and
cmp
sub
push
lret
add
mov
lock
mov
and
adc
rclb
dec
or
and
mov
sbb
jg
inc
or
jg
and
andb
mov
push
pop
dec
mov
es
mov
lock
lea
arpl
aad
push
shlb
ss
and
test
xor
mov
pushf
add
int
adc
mov
inc
je
adc
cs
add
adc
ljmp
push
add
lret
je
mov
and
xor
xor
out
sti
jbe
nop
les
test
les
movsb
inc
inc
arpl
jg
adc
std
jle
or
or
loope
cli
test
adc
in
add
loope
rcrl
cmp
add
mov
push
adc
cld
cmpsb
dec
or
insl
xor
imul
dec
push
or
std
mov
jecxz
sub
push
dec
push
mov
sti
add
lret
loopne
rorb
addb
pop
pusha
sbb
dec
lock
stos
jp
pop
pop
les
lock
sete
sub
out
cmp
add
sub
pop
add
ret
lret
adcl
pop
jns
dec
or
inc
lea
pop
pusha
pop
fs
shrl
rolb
ds
call
not
test
ret
jmp
cmpl
add
repz
mov
mov
shll
and
iret
loopne
adc
iret
add
ss
jbe,pt
dec
mov
add
inc
fcompl
or
cmp
pop
xchg
clc
sbb
dec
cmp
adc
loopne
das
pop
adc
fidivs
mov
cwtl
and
repnz
add
pusha
adc
adc
add
subl
jl
fcomps
lea
loope
inc
aam
enter
cwtl
je
inc
xor
xchg
xor
or
aaa
je
or
inc
mov
or
inc
aam
addr16
push
xchg
dec
xor
cmp
addl
rorl
add
jae
inc
iret
fmul
shl
sub
sub
idiv
xorb
loopne
pop
popf
jb
mov
and
es
sahf
or
out
push
or
xor
scas
and
aam
out
xchg
inc
xor
add
jl
mov
pop
les
into
mov
out
push
and
mov
or
dec
jns
sub
cwtl
pop
repnz
lea
push
shlb
and
faddl
mov
dec
fistps
out
test
repz
adc
dec
sub
out
or
inc
rcrl
dec
xor
lock
rorl
cli
mov
pop
pop
lods
fsubr
pop
pop
push
push
jb
sbb
or
xor
adc
iret
dec
jns
cmp
and
shl
hlt
push
aas
sbb
outsb
xor
mov
mov
push
lods
and
and
adc
sub
arpl
ss
shll
cmp
popa
mov
sbb
sbb
lock
dec
into
movl
cmpb
mov
mov
and
and
in
or
sub
mov
inc
xchg
jge
testb
shl
test
xor
add
push
or
fildl
pop
lock
shlb
stos
push
cwtl
nop
push
test
jmp
ret
lock
and
xorl
cmc
push
add
mov
and
nop
adc
xchg
push
or
push
test
dec
and
pop
pop
dec
je
inc
and
push
enter
push
mov
lret
push
sub
xchg
jmp
ret
or
lahf
dec
mov
les
cmp
and
or
jb
mov
ss
inc
mov
mov
rorl
arpl
pop
rolb
xchg
out
mov
jo
pop
addr16
mov
adc
inc
cs
mov
or
ss
cmp
je
or
out
aas
sar
rorb
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
add
cmpb
inc
fcmove
pop
and
fcompl
fistps
add
adc
test
dec
or
sub
into
lret
add
sbb
dec
add
adc
or
orl
xor
in
adc
mov
add
adc
in
cmp
lret
adc
and
mov
aaa
sbb
fwait
sbb
fadds
cmp
lods
inc
xlat
rcll
mov
lret
mov
or
add
adc
inc
pop
sbb
cmp
push
pop
sbb
adc
out
outsb
rorb
jg
in
adc
sub
mov
popf
sub
mov
mov
cmpl
mov
popl
pop
and
sub
jle
test
dec
clc
pushf
cld
inc
cmp
bound
add
mov
lcall
add
push
and
sbb
jge
add
dec
in
and
cmp
adc
loopne
push
mov
inc
test
mov
fadd
inc
add
bound
andb
push
lcall
push
or
lcall
sbb
in
add
push
je
xchg
add
shll
daa
push
insl
in
mov
or
subl
add
add
add
xor
aam
je
movsl
mov
iret
ret
jmp
jne
test
and
xchg
inc
cwtl
xchg
jge
xchg
sub
adc
out
push
mov
adc
and
push
adc
shlb
push
push
lret
push
ss
sub
sbb
andb
test
cmp
push
jmp
test
fsts
xor
pop
push
xor
das
pop
and
push
fadd
xor
and
mov
dec
bound
jge
cmp
sub
adc
and
call
sbb
les
jbe
aas
or
pushf
xor
mov
push
adcb
enter
movsl
add
sahf
pushf
adc
add
push
and
or
adc
cmp
call
loopne
adc
stos
incb
pop
dec
loope
pop
dec
fcompl
sbb
jae
enter
mov
scas
cmpb
jbe
push
dec
xor
inc
xor
dec
and
add
mov
loope
add
push
js
into
mov
jg
dec
and
add
insb
movb
or
dec
rcrb
je
jge
inc
dec
push
inc
popf
neg
sbb
subl
mov
mov
nop
ret
repnz
jne
adc
mov
xor
xor
js
ljmp
inc
jo
in
call
jmp
inc
xor
mov
jb
es
mov
sysexit
shll
fisubs
push
or
add
nop
mov
add
dec
inc
adc
and
sub
sbb
into
sub
and
ret
sub
adc
xor
movsl
pop
ss
jbe
fs
das
cmc
insl
cld
add
hlt
shrd
sbb
sub
dec
cmp
add
test
push
movsl
clc
cwtl
xor
add
pop
push
insl
in
inc
and
xor
out
add
addr16
cld
sub
xor
cmpb
or
rorl
inc
call
insb
movsl
lea
inc
jno
or
shll
sbb
jnp
mov
and
lock
sarl
jg
ret
js
jl
or
jmp
pop
cld
scas
repz
fimull
jl
mov
mov
sar
mov
xchg
sub
add
mov
stos
adc
sarl
inc
xor
jmp
jg
mov
mov
inc
dec
pop
or
push
xchg
inc
repnz
je
sbb
cmp
adc
push
xor
dec
in
in
ja
fnstenv
mov
movsb
lock
sbb
push
jbe
mov
mov
add
mov
cmp
or
jp
fimull
xor
xor
idivb
cmp
push
sbb
mov
push
imul
push
inc
sub
add
dec
or
xchg
es
loop
cmp
inc
or
call
aaa
push
lods
push
add
or
inc
mov
stc
mov
push
jbe
call
das
vmread
fdivs
cmpsl
addb
and
jbe
and
into
shrl
sbb
mov
push
sbb
idivb
sbb
dec
cmpl
pop
push
divb
pop
das
inc
es
cmp
nop
push
push
mov
rorb
push
or
dec
cmp
or
xor
enter
sub
in
push
push
das
adc
dec
out
lea
jl
loopne
jge
inc
or
pop
mov
mov
pusha
adc
dec
xlat
add
popf
jmp
xor
movsb
add
pop
sahf
clc
gs
or
pop
data16
mov
imul
enter
popa
je
inc
je
dec
and
ja
xor
sbb
adc
loope
push
inc
mov
add
sbb
ror
insl
cwtl
clc
push
popa
sub
or
mov
add
loope
mov
mov
ret
arpl
in
mov
mov
jp
sbbb
sub
and
out
add
daa
push
adc
bound
cmpb
jne
add
and
testl
xor
jcxz
push
jmp
ja
ret
or
push
mov
mov
cmp
cli
jge
mov
adc
sbb
je
inc
or
inc
jecxz
ja
mov
mov
enter
push
push
call
loopne
sti
adc
push
test
out
inc
jmp
cmc
add
push
or
int3
xchg
mov
sahf
loope
js
inc
push
pop
pop
or
xor
test
pushl
adc
mov
sub
and
leave
shll
jne
mov
ret
test
leave
xchg
adc
fldlg2
add
mov
nop
cmp
sbb
mov
jbe
sub
or
mov
mov
jl
mov
inc
mov
push
jbe
xchg
adc
nop
jp
fwait
xchg
shlb
clc
pop
sub
cmpl
cmp
push
or
push
adcl
test
mov
push
mov
jbe
jmp
adc
sarl
imul
pop
pop
pop
pop
pop
push
rol
xor
dec
sub
fidivrl
enter
imul
icebp
jb
and
and
ljmp
mov
sbb
dec
je
dec
add
mov
push
push
jmp
or
jmp
mov
test
push
lcall
sub
mov
sbb
dec
js
test
xor
aad
js
mov
data16
xchg
cmpsb
dec
ljmp
into
add
sbb
add
cmp
leave
or
push
push
loopne
sub
jne
adc
mov
dec
xor
and
cmp
je
mov
dec
outsl
aaa
mov
push
or
insl
xor
mov
xchg
jae
daa
fs
xor
dec
add
je
push
add
adc
fiaddl
into
push
sub
sub
xor
loope
or
push
sbb
test
add
inc
sub
stos
or
and
xchg
and
test
sbb
or
nop
loopne
fcomps
dec
xchg
and
popf
call
add
pop
cmc
imul
or
les
repz
clc
sub
insl
std
shr
add
or
adc
add
out
pop
or
mov
push
push
adc
mov
dec
call
and
add
mov
mulb
or
add
pop
mov
pop
add
popf
xchg
jp
fidivrl
out
mov
adc
inc
jbe
add
jl
or
rorb
aaa
cmp
or
dec
mov
dec
es
push
push
hlt
es
sti
and
push
and
cmp
and
repnz
push
xor
xchg
ja
mov
inc
pusha
xchg
roll
adc
push
pushfw
stc
dec
movsl
cs
mov
int3
mov
lcall
jmp
xor
fstl
pusha
cmpsb
and
xchg
andb
mov
xchg
es
lock
ficomps
adc
adc
xor
adc
and
in
inc
jl
fsubrl
add
mov
stos
scas
cli
jne
dec
push
jp
adc
incl
pop
sub
cmpsb
or
xchg
or
mov
jp
mov
shll
data16
and
push
ja
mov
xchg
xchg
das
sbb
mov
xor
add
mov
repnz
das
and
imul
pop
and
loope
dec
adc
call
lea
ret
shl
xor
pop
or
jne
enter
add
lret
xchg
sub
or
decl
inc
sbb
jo
jno
sbb
jo
push
jns
movsb
xchg
cltd
sub
sbb
add
add
mov
xor
or
test
mov
jo
aaa
push
and
into
push
dec
xor
enter
hlt
add
add
mov
sbb
mov
lods
adc
insl
xor
add
pop
mov
mov
das
pop
jecxz
inc
pop
outsl
inc
mov
and
xor
mov
and
xor
mov
xor
clc
sbb
sub
gs
scas
aaa
inc
push
adc
jbe
jg
aam
sbb
add
pop
je
add
or
inc
mov
sub
xchg
mov
jge
jecxz
pusha
imul
dec
arpl
add
mov
mov
or
outsb
inc
jmp
push
add
leave
cmp
mov
or
fldl
jnp
push
sbb
add
call
scas
push
ljmp
inc
jb
dec
es
sub
push
icebp
cmp
mov
lock
jne
rol
fdivrs
mov
mov
cmp
jle
and
data16
jge
sbb
cmp
push
jp
fisttps
pop
cmpsb
sbb
out
ds
mov
xchg
fdivrl
ss
adc
cmpb
jl
xor
insl
jmp
xor
inc
add
mov
fstl
int
ret
push
filds
push
insb
jmp
stos
and
imul
adcb
mov
ds
mov
inc
and
inc
inc
push
mov
or
lods
test
aas
jmp
lods
mov
adc
lret
rcrl
jmp
dec
add
mov
fwait
mov
into
adc
rorb
push
cltd
or
adc
inc
mov
xor
clc
out
roll
leave
add
or
je
mov
iret
stos
add
ss
imul
lahf
dec
je
jecxz
scas
adc
bound
or
andb
in
sar
mov
pusha
jo
inc
add
pushf
sub
mov
lret
lock
out
dec
and
popa
je
adc
xchg
push
pusha
clc
pop
bound
add
or
push
in
loopne
jecxz
dec
jge
inc
inc
push
neg
neg
sbb
ds
sahf
sahf
sub
inc
sbb
lock
sbb
mov
nop
popa
adc
xorl
push
push
inc
lcall
mov
icebp
inc
push
test
adc
inc
aad
sbb
and
mov
push
add
leave
dec
jns
mov
loope
daa
pop
pop
pop
aam
pop
mov
add
adc
lods
rcl
ljmp
dec
and
shr
sub
adc
dec
adc
push
ret
cli
idiv
and
maskmovq
cld
lock
je
das
push
pop
adc
push
loop
add
loop
add
or
mov
outsb
into
add
orl
or
xor
enter
cmp
loopne
push
or
aad
mov
push
sarl
jbe
aas
mov
hlt
adc
test
sbb
shlb
xor
mov
rcll
jnp
adc
xchg
movb
adc
cmp
paddusb
adc
and
mov
sub
cmp
mov
or
and
daa
mov
xchg
add
rcrl
push
push
ljmp
cld
inc
ss
test
nop
aaa
dec
sub
mov
jnp
inc
inc
jns
cmp
movsb
xlat
cmpsb
je
cld
mov
and
mov
enter
pop
pop
push
and
sub
add
push
ret
cli
enter
xor
insl
inc
fs
xor
mov
xchg
add
mov
clc
or
adc
es
mov
je
mov
and
jb
cmp
dec
cli
out
ja
add
cmp
adc
cmp
jne
adc
shll
leave
adc
mov
hlt
jb
idivl
pop
je
push
dec
or
adc
push
inc
mov
mov
mov
inc
call
rcrb
adc
pushf
movl
aas
dec
push
pop
push
movb
jmp
or
push
mov
aaa
ss
cmp
mov
in
test
mov
or
mov
add
xor
add
inc
aas
or
cmp
ficomps
xor
pop
mov
into
testb
pop
xchg
subl
aaa
add
sti
test
xlat
insb
loope
mov
or
fstpl
js
push
andb
dec
dec
pop
xchg
sbb
jnp
je
add
sbb
daa
jo
movsb
push
mov
aas
dec
push
mov
leave
adc
shr
shr
ljmp
addb
test
or
mov
ja
pop
pop
dec
dec
movswl
cltd
lods
ja
xchg
fildl
cmpsl
aad
mov
push
ljmp
cwtl
sbb
jb
mov
mov
inc
orl
push
ds
jmp
sub
addr16
xor
and
mov
push
loope
stos
or
jb
jl
pop
mov
decl
jle
repnz
xor
adc
adc
mov
mov
mov
and
scas
std
and
lea
inc
xor
lods
push
cmpsl
add
into
sahf
cmpb
pusha
add
pushf
cmp
cmp
xor
mov
and
loope
leave
out
mov
inc
call
jnp
ljmp
loope
rorl
add
and
lea
rolb
lods
xor
inc
mov
push
lea
shlb
enter
xchg
imul
or
push
adc
inc
adc
cmp
pop
fcomi
xor
shll
js
pusha
data16
xchg
rcrb
insb
jl
fwait
cmpsb
mov
and
rorb
jae
add
cmp
cmp
bound
shll
mov
add
shr
or
test
cmp
rorb
sbb
imul
lret
or
pushf
out
mov
test
lods
cmpsl
lock
mov
add
shrl
loope
shr
or
sarl
or
dec
mov
lret
pushf
pop
jp
jnp
cmc
cmp
adc
loope
sub
movsb
stc
repnz
add
cli
cli
inc
cli
test
shl
repnz
jbe
test
movsb
cmpsl
movsl
fadds
inc
push
lahf
test
and
fmuls
sbb
adc
and
fisubrl
popa
fimull
pop
dec
nop
mov
push
fidivl
fldenv
enter
scas
push
and
mov
insb
out
je
lret
enter
imul
mov
xor
and
dec
sbb
imulb
or
pushw
sbb
inc
shll
jge
icebp
push
dec
shr
test
mov
mov
and
and
daa
adc
sbb
push
cli
or
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
notb
test
xor
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
push
and
insl
test
cli
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
xor
call
insl
push
aad
pop
outsb
call
inc
add
cltd
and
or
add
or
and
jne
cli
pop
inc
rcrl
lcall
xor
mov
insl
call
mov
imul
call
mov
fsubs
pop
add
inc
loope
push
and
js
push
in
les
out
add
movsl
out
pop
lods
jbe
in
add
fstl
cld
or
les
enter
xchg
xor
adc
or
movsb
stc
xchg
rcr
ljmp
lock
inc
dec
enter
sahf
mov
mov
jae
add
sub
add
call
hlt
mov
add
into
or
mov
inc
and
add
ljmp
jmp
dec
dec
jg
add
sub
cmp
jge
sub
add
cmp
movb
dec
cmp
out
fmuls
add
dec
add
add
fadds
adc
call
rorb
dec
mov
or
or
aam
or
add
dec
jbe
mov
lret
or
add
inc
mov
jp
ret
adc
rclb
add
add
add
mov
and
ret
lcall
xor
outsb
or
lret
mull
sub
or
add
push
and
pop
das
push
adc
or
repz
add
or
jne
or
push
pop
scas
je,pt
push
inc
or
ret
mov
cmpl
pop
movsl
shlb
xchg
adc
or
jae
pusha
das
adc
ret
cmp
mov
iret
xor
mov
dec
in
pusha
inc
pop
or
sarb
pop
pop
in
cltd
cmp
cmpps
ret
inc
inc
scas
prefetchw
sahf
inc
ret
or
push
lea
add
data16
xor
jbe
jne
or
or
mov
and
movsl
push
or
inc
je
pop
mov
pop
rol
push
je
lret
mov
or
sub
rcrb
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shlb
ret
sbb
cli
cmp
ret
xchg
inc
jl
add
mov
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
addl
push
or
mov
test
fadds
or
mov
in
xsaveopt
or
xchg
test
repnz
test
adc
imul
add
push
into
mov
mov
pop
sbb
xor
inc
jg
xchg
xchg
out
into
into
into
mov
or
mov
sarb
push
pop
nop
pop
mov
pop
mov
push
add
rolb
push
popf
sbb
stos
cmp
pop
inc
shll
push
fs
pop
push
test
pop
xchg
divl
xchg
out
adc
dec
js
pushf
add
movsb
popf
dec
jl
pop
stos
mov
mov
mov
and
cltd
and
sbb
pop
sbb
sbbb
sub
jmp
rcrl
jmp
leave
lret
push
xor
xchg
xchg
inc
and
jge
decb
mov
mov
aas
mov
sbb
or
enter
imul
in
add
into
lret
mov
inc
xor
in
push
not
aas
push
in
hlt
aam
sub
add
lcall
lret
sahf
or
jo,pn
add
repz
add
insb
mov
pusha
jno
sbb
cmp
stos
je
dec
sub
loope
jle
xchg
outsb
cmp
je
mov
push
or
or
or
cmp
jbe
sbbl
jmp
push
xor
movsl
pushf
xchg
loopne
lretw
pop
or
fisubrl
cmp
xor
mov
sbb
mov
lods
cmp
sbb
inc
or
cld
xor
mov
in
add
ret
ljmp
or
adc
enter
loopne
mov
js
lcall
shlb
xor
push
loop
and
push
push
mov
inc
dec
test
pop
and
lret
add
inc
cltd
in
fmuls
add
push
sarb
ret
cmpb
stos
or
add
dec
sahf
push
roll
xchg
dec
cmpsl
cs
xor
rorb
loope
movsl
push
aam
push
cmp
iret
daa
les
and
jmp
popf
ljmp
shrb
add
movsl
mov
js
or
add
cmp
fs
add
imul
lock
mov
mov
mov
gs
fimuls
notl
adc
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movsl
ds
cmc
inc
pop
xchg
ret
mov
hlt
add
call
es
push
ret
dec
mov
push
loopne
out
xchg
test
sbb
pushf
inc
and
push
or
into
pop
mov
mov
push
rorl
mov
fidivrl
sbb
xchg
sbb
dec
in
lret
test
adc
cli
neg
xchg
gs
add
jg
xor
inc
jp
mov
sbb
push
mov
lret
ljmp
mov
mov
mov
pusha
sub
mov
xchg
inc
xlat
add
gs
dec
mov
push
fmulp
add
mov
jecxz
mov
loopne
jmp
dec
fs
movsb
fistpll
mov
shr
subl
push
js
pop
enter
xor
or
mov
out
dec
sbb
sbb
push
test
adc
rcr
pushf
xor
push
bound
xorl
sahf
and
sbb
push
adc
cwtl
call
decl
arpl
je
jg
add
add
scas
sbb
sbb
xlat
pop
and
pop
push
stos
movl
lahf
scas
inc
pop
mov
iret
imul
xor
lahf
pop
mov
sub
rorb
jmp
pop
xchg
aas
push
sbb
sbb
and
in
repnz
adc
clts
ds
ss
xlat
add
test
js
add
sahf
sub
sub
and
add
add
les
cmp
or
iret
pop
test
pop
xor
jmp
or
or
cmp
xchg
push
dec
sub
sbb
cmp
sub
jmp
sbb
push
push
mov
clc
outsb
sub
sub
les
mov
mov
ljmp
or
mov
xchg
or
insl
mov
ret
cld
push
and
add
add
inc
dec
test
add
mov
xor
sbb
dec
pop
push
and
and
fstl
pop
sub
mov
ret
pop
rol
shll
sbb
mov
add
cmpsl
lock
pop
scas
push
mov
add
add
sbb
lret
fs
cmp
dec
es
sti
mov
cltd
mov
ret
ficoml
sub
ret
or
enter
dec
es
push
add
mov
pushf
ror
int3
jmp
fadds
add
xchg
sbb
adcb
test
or
insl
loop
push
loopne
je
pop
test
test
fs
les
cwtl
adc
inc
test
roll
pusha
imul
inc
add
jmp
stos
sub
cmp
cld
mov
inc
cmc
scas
cld
lret
or
adc
add
dec
test
mov
sarl
int
notl
or
into
inc
enter
mov
or
fstps
adc
cmp
and
adc
dec
sarl
rcrb
pop
add
jne
xchg
lock
fwait
mov
push
mov
in
lret
stos
xor
add
mov
hlt
inc
fcmove
push
cmpsb
adc
aam
xor
and
push
int3
rcrb
test
lahf
incl
sub
ret
stos
push
aam
pop
pushf
enter
xor
sub
data16
add
les
mov
fisttps
xor
btc
std
data16
xor
lock
xchg
roll
jo
jmp
push
pop
mov
or
and
inc
das
rcrl
aam
and
or
adc
add
and
pushf
jns
int3
dec
adc
movsl
ret
jo
arpl
imul
aas
imul
push
fsubrp
sub
or
inc
adc
loopne
cmpsl
lock
add
xchg
jge
cmp
fiadds
mov
aas
or
movsl
jge
mov
outsl
icebp
adc
mov
sbb
cmp
ja
mov
test
jne
adc
cwtl
dec
stc
cmc
and
sbb
int3
daa
push
inc
enter
sarb
out
jp
repnz
mov
dec
test
jg
adc
adc
lock
shr
lcall
sub
mov
rcrb
cmp
push
pop
addb
shlb
mov
call
pop
cmp
lock
fadds
in
mov
ljmp
fidivs
pop
push
cmp
mov
ret
leave
ret
push
lcall
add
dec
jb
sahf
stos
lods
scas
lea
scas
add
add
mov
or
mov
or
mov
testb
repnz
mov
or
test
or
pop
aaa
mov
out
lcall
push
inc
inc
loopne
pop
cmp
cmp
sbb
mov
pop
roll
sbb
dec
cwtl
repnz
hlt
enter
cmpl
mov
push
cmpsb
xchg
or
imul
cmp
adc
ja
ret
hlt
xor
push
mov
dec
fldl
mov
mov
int
mov
in
sbb
iret
es
jns
add
xor
mov
mov
inc
loop
or
mov
ret
inc
cmp
jge
dec
movsl
mov
adc
and
and
adc
inc
sbb
xor
or
std
or
xchg
xchg
and
xor
negb
xchg
sbb
lds
adc
jae
sub
lea
insb
sbb
aaa
inc
in
xor
test
mov
les
pop
sbb
add
add
ja
ret
or
stc
jg
inc
ljmp
pop
add
sbb
adc
push
rcrb
sbb
fwait
xchg
and
push
dec
je
inc
push
add
xor
or
lahf
insl
pusha
cmpsl
add
fs
pop
jl
divb
adc
mov
xor
imul
mov
fstpl
out
pop
cmp
and
test
add
ret
dec
xchg
cwtl
fsts
add
icebp
cld
or
xchg
and
push
or
fs
sti
mov
or
scas
mov
mov
mov
loope
fmul
adc
jo
cltd
inc
movsb
sub
xchg
push
inc
dec
xchg
push
push
jmp
loope
mov
and
cwtl
ret
cmpl
dec
cmpsb
pop
adc
jne
jle
inc
or
sbb
push
sbb
dec
and
adc
cmp
rolb
add
dec
loopne
dec
les
adc
and
add
mov
xor
addl
pop
dec
pop
mov
cmpl
stos
ds
cmpl
loope
lret
sbb
push
pop
cmp
sbb
movsb
push
mov
sbb
lods
daa
fisttpl
pusha
cwtl
movntps
dec
add
xor
rol
adc
rcr
mov
cmpsl
cmp
adc
or
lods
addl
cmp
jge
sbb
and
sub
push
inc
mov
pop
inc
stc
repnz
out
and
push
call
dec
adc
push
es
push
js
jnp
dec
mov
sbbb
pop
je
int
nop
pop
stos
cltd
aam
push
lock
adc
xor
aas
dec
jne
jl
jmp
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
jmp
movsb
das
add
pop
add
inc
fiadds
sbb
sbb
push
addl
imul
subb
cli
sbbb
xor
inc
pop
adc
daa
and
adc
or
ljmp
popl
dec
jne
push
and
inc
sbb
add
fcoms
jmp
xor
rolb
inc
xor
sarb
je
adcl
push
pop
fdivl
insb
or
pushl
mov
push
icebp
enter
xor
cli
inc
cs
adc
outsl
sbb
or
dec
inc
add
cmp
xchg
xchg
jns
inc
roll
sub
pop
jle
jmp
inc
mov
lea
mov
and
inc
lods
xchg
repz
insl
inc
lahf
in
xchg
les
push
add
data16
js
insl
pop
inc
hlt
push
cli
push
dec
or
jo
stos
dec
mov
xor
pushf
jae
cmpsl
call
push
lea
jl
pop
pop
pcmpgtw
mov
add
push
hlt
jle
cmpb
shl
mov
lock
jne
add
xchg
jne
lods
sbb
jnp
in
int3
popa
lods
add
mov
jb
arpl
sbb
aas
pop
sbb
xor
rclb
cmp
inc
cwtl
or
jl
fisubl
push
cmp
out
mov
or
pop
shlb
mov
and
xor
das
dec
pop
fsts
sbb
adc
xor
leave
test
cmp
mov
sbb
shlb
jne
ja
loopne
adc
fisttpl
or
sbb
ss
mov
mov
and
fwait
ss
fs
inc
pop
rcrb
lock
jle
add
imul
les
push
xor
inc
inc
cmp
inc
sub
jne
add
xchg
cmp
mov
inc
or
std
sar
scas
les
imul
sbb
jg
add
jno
addb
jbe
lcall
test
dec
add
fmuls
mov
inc
lock
or
mov
test
jb
adc
or
and
mov
mov
and
mov
fdivrl
jmp
jbe
adc
add
dec
jg
adc
orl
jg
jmp
adc
shlb
lret
or
roll
loopne
call
mov
jb
lods
jo
jb
or
cmpsl
mul
addl
and
mov
pop
aaa
pop
pushf
and
test
cmpsl
or
push
jae
js
cmp
jno
sub
pop
and
jns
rcl
in
bound
mov
out
mov
cmpsl
adc
ss
inc
lret
adc
pop
or
cmp
insb
and
mov
shrb
inc
cli
ret
jns
inc
or
mov
add
cmp
je
cmp
adc
cmp
ficoms
clc
jb
testb
xchg
testb
add
add
movsb
mov
jge
push
in
or
inc
sbbl
je
cmp
ret
cmc
pop
xor
sub
pop
adc
daa
clc
inc
sub
mov
push
or
dec
mov
inc
test
push
mov
xor
shr
jmp
das
xor
in
sti
xchg
push
cmp
sidtl
inc
push
mov
and
jne
or
adc
fnstsw
fstpl
pop
jmp
push
cwtl
js
xor
push
sbbb
inc
pop
pop
mov
in
test
iret
movsb
sub
sub
sub
mov
add
push
or
shrb
and
fldl
inc
repnz
hlt
xchg
sbb
jle
pop
je
push
in
mov
adc
and
add
or
stc
add
es
xor
jb
xor
pop
jne
add
adc
add
add
adc
adc
xchg
lock
int
out
movsl
cltd
add
push
cmp
push
inc
stos
mov
outsb
adc
xor
mov
insb
popa
stos
fcmovu
mov
add
lcall
add
icebp
out
pop
mov
lock
fnstenv
fcomip
fildll
mov
sub
clc
jbe
pop
cmp
jmp
cwtl
mov
xor
aaa
aad
add
loop
ret
sub
adc
enter
ficompl
adc
ret
fstps
mov
sbb
nop
adc
pop
dec
mov
mov
and
mov
pop
or
popa
sub
inc
or
lea
mov
sarl
mov
xlat
jo
add
and
rcrb
rolb
xchg
dec
inc
adc
sub
inc
or
cmp
adc
xchg
sub
jbe
and
sti
jl
lds
int
sub
pusha
jb
outsb
adc
in
sti
xchg
fsubl
cmpsl
fidivrl
imul
inc
push
in
lock
and
in
xor
adc
js
adc
in
lock
movsb
fmul
scas
pop
shlb
pop
cld
mov
cmp
fcmovu
sbb
jmp
mov
and
adc
cmp
dec
ret
dec
fisttpl
inc
mov
lods
mov
cmc
movsl
aam
imul
adcb
movsl
arpl
roll
sets
jo
inc
rolb
sbb
lds
fcomp
sbb
out
icebp
dec
in
arpl
xchg
fnstsw
pop
cmp
ljmp
mov
dec
adc
add
ret
ret
dec
frstor
and
add
fstl
adc
loopne
dec
ficoms
or
in
scas
mov
dec
mov
repnz
xchg
jl
rcl
in
inc
adc
bound
fsubrp
pop
adc
cmp
popa
xchg
xchg
push
inc
scas
mov
pop
push
xor
mov
and
mov
fcompl
push
nop
pop
fs
nop
mov
mov
das
adc
pop
dec
roll
in
cmpb
dec
push
loopne
je
push
adc
xchg
and
cs
and
mov
and
or
pop
mov
call
enter
or
les
sarb
test
aam
pop
cmp
test
adc
pop
jbe
loopne
adc
pop
fsubs
mov
lahf
repnz
outsb
push
leave
and
dec
fs
xor
js
and
enter
sbb
pushf
add
fsubr
adc
lock
add
aas
sbb
jge
das
and
xchg
adc
nop
adc
shrb
mov
enter
adc
sbb
sti
gs
dec
push
movsl
jecxz
jecxz
xchg
add
cmpl
enter
stc
sahf
xchg
inc
and
jno
adc
fcmovnb
sbb
mov
repnz
mov
cli
pop
jecxz
gs
pop
les
js
leave
les
jle
push
cmp
cltd
mov
jne
add
add
stos
adc
and
pop
or
push
mov
shl
outsl
add
inc
xchg
out
or
push
mov
inc
mov
int3
aam
and
addr16
adc
leave
aas
push
cmpsw
addb
inc
dec
or
inc
imul
xor
jbe
jle
cmp
popf
lock
lock
sbb
lahf
nop
xlat
sti
xor
popf
enter
inc
mov
adc
xor
aam
or
adc
xor
mov
mov
xchg
xchg
mov
loopne
lock
jp
jmp
dec
negl
jo
add
pop
insb
ja
subb
mov
mov
in
jno
fcompl
add
aam
sub
shrb
in
test
in
and
xor
jmp
sub
dec
mov
fnsave
imul
in
push
jmp
dec
add
cmpb
and
xchg
mov
push
cmp
enter
shlb
pop
repnz
fwait
add
xor
add
xchg
jmp
pushf
stos
push
and
add
jecxz
add
mov
sub
jl
mov
sub
adc
popa
in
sub
imul
fsubrl
shr
enter
pop
adc
jnp
and
mov
dec
hlt
mov
xor
mov
ret
dec
lods
add
inc
ret
push
sbb
sub
cmc
push
mov
ret
in
pop
push
fsubs
cmp
add
fwait
popf
adc
arpl
jecxz
xor
in
dec
imul
rorb
jmp
push
jo
leave
add
push
addl
xchg
pop
bound
ret
cmp
test
jp
jge
xor
push
enter
out
inc
push
mov
inc
insb
aad
xor
or
movsb
sub
pusha
jns
adc
in
lock
pop
scas
popa
jmp
adc
sbb
xor
je
lock
pop
cmp
pop
sub
jbe
iret
and
sbb
loopne
fmull
loop
scas
inc
mov
lock
pop
addr16
add
xlat
inc
repnz
daa
cmpsl
loope
xlat
clc
cltd
icebp
adc
sbb
pushf
inc
push
mov
icebp
cmp
xchg
mov
mov
in
es
leave
loopne
and
mov
xchg
sbb
or
dec
mov
sbb
fs
fdivrs
mov
sbb
add
dec
movsb
sti
repnz
es
aam
hlt
test
fs
jno
or
push
sub
push
xchg
mov
ret
xor
repz
shl
test
jp
psrad
jb
mov
ret
cmp
lock
mov
enter
clc
adc
xor
and
adc
aam
hlt
mov
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
stos
scas
lock
add
inc
push
add
xor
xor
cltd
cmc
add
punpckhwd
add
loop
cmpl
cmc
pushf
or
enter
or
andb
or
loopne
jnp
movl
adc
mov
testl
dec
shll
inc
sbb
cmp
iret
popf
daa
fmuls
adc
imul
leave
mov
and
adc
in
inc
push
adc
mull
and
or
cmp
mov
jne
pusha
lea
pop
enter
mull
inc
shlb
sbb
inc
sbb
xor
imul
icebp
clc
fs
iret
nop
movsb
in
ret
adc
adc
mov
push
jae
leave
mov
cld
stc
int3
and
popa
adc
jmp
stc
or
jno
jge
add
mov
clflush
and
pop
jae
aam
or
stos
push
adc
jge
sbb
dec
enter
xor
movsb
adc
push
add
mov
fmuls
das
rcrb
sbb
mov
dec
push
mov
imul
in
inc
cli
insb
stc
fs
adc
sub
sub
lods
test
push
sub
fcoml
pusha
je
ljmp
dec
or
sub
sti
nop
int
push
inc
xchg
gs
aam
pop
enter
in
add
rorl
loopne
fiaddl
and
inc
stc
call
loop
add
sbb
xor
pop
add
mov
cmp
test
daa
xlat
push
in
inc
aam
inc
mov
add
aaa
or
mov
aam
std
jg
xchg
nop
ret
test
dec
paddw
xchg
out
mov
stos
fdivs
loop
inc
js
lock
ret
cs
orl
mov
outsl
and
loopne
cmp
fsubs
ljmp
jno
and
mov
or
inc
fs
mov
jbe
inc
or
xor
xor
fidivrl
repnz
add
nop
daa
pop
mov
repnz
arpl
call
f2xm1
sub
add
mov
adc
in
sbb
inc
push
cmp
or
cmp
pop
push
or
add
daa
add
mov
mov
xor
incb
sbb
xchg
imul
test
pop
lret
cmp
lret
out
sbb
inc
ret
cmp
add
cmp
mov
add
or
or
sbbl
stc
push
or
sub
push
lods
mov
cmp
sub
jecxz
jmp
mov
imul
cwtl
and
daa
add
push
mov
sbb
inc
and
inc
mov
insl
mov
int3
setne
in
mov
dec
pop
test
int3
out
rorb
pop
scas
lods
adc
fistpll
mov
mov
add
mov
nop
aam
loopne
arpl
rclb
xchg
pop
adc
xchg
or
add
paddusb
add
lods
jno
and
xlat
jge
lods
fadds
inc
jmp
mov
out
arpl
push
fcoms
sbbl
sbb
fcomps
push
xchg
fsub
mov
mov
push
add
dec
test
dec
mov
push
dec
or
push
inc
lods
dec
jo
inc
or
pushf
push
mov
add
aas
aam
adc
inc
jl
cmc
sbb
shlb
add
subb
sub
cmp
call
cmc
mov
imul
dec
add
or
sbb
jns
enter
out
out
jb
int3
or
dec
ss
pop
gs
or
pop
mov
orb
movsl
mov
test
or
pop
inc
outsb
cmp
mov
inc
and
sub
das
pop
lods
insl
ja
sbb
inc
and
movsb
fsubrs
enter
nop
push
movsl
rolb
fnstcw
or
and
sub
pop
in
daa
xchg
call
and
inc
aam
fnsave
mov
fs
shlb
xchg
push
adc
jb
fcoml
add
dec
jg
and
add
sub
mov
mov
sbb
or
mov
mov
enter
add
adc
adc
mov
in
hlt
js
or
add
xchg
mov
cmp
or
movsb
rolb
jno
mov
andb
pop
jmp
mov
cmp
shlb
cmp
push
nop
adc
pop
adc
les
scas
popa
fdivr
notb
cmp
sub
and
xchg
mov
jno
mov
push
inc
in
in
dec
jno
add
js
sti
mov
push
and
lcall
dec
push
shrl
jno
and
sub
or
mov
mov
out
inc
jne
jne
or
iret
adc
fucomp
outsb
sbb
xchg
mov
loope
push
adc
in
sub
pop
inc
and
jecxz
jl
popl
fildll
pop
jmp
std
icebp
in
add
sti
les
aad
and
ljmp
fsubrs
in
push
sbb
daa
mov
inc
std
fcompl
xchg
sub
pop
mov
xchg
ret
in
movsl
lods
or
push
cs
lock
xchg
call
mov
adc
insl
jne
cmpsl
push
cltd
add
jl
xor
inc
aad
lods
fs
insb
mov
lret
sub
je
jmp
enter
adc
push
push
loope
das
in
test
fldt
aam
lock
roll
adc
inc
mov
add
call
adc
and
and
shll
fmull
inc
push
xor
cwtl
or
fldl
add
jge
xchg
cmpsl
pusha
push
addr16
lret
adc
and
xchg
outsb
and
hlt
xchg
lea
jge
movsb
or
rclb
inc
in
sub
lods
pop
int3
gs
outsl
and
rclb
mov
sub
inc
into
adc
sbb
in
inc
test
fcmovbe
or
sbb
mov
and
dec
inc
mov
mov
loopne
pop
pop
cmp
mov
lahf
out
adc
enter
les
mov
sbb
mov
sbb
divl
jo
xor
negl
movsb
stos
xor
enter
mov
adc
xor
xor
push
adc
push
push
sbb
pop
and
pop
daa
xchg
or
popa
cmp
sti
sbb
popa
sub
dec
insl
inc
push
cmpsl
sbb
addb
lret
mov
add
fsubl
cmpl
insl
pop
in
sbb
jne
punpckldq
sbb
cmpsb
insb
fsts
test
mov
adc
shrl
aas
cmp
and
test
fs
lock
jo
stc
adc
cwtl
pop
inc
xor
sbb
shlb
pop
sbb
inc
adc
sbb
insl
mov
in
sbb
mov
dec
int3
xchg
fildl
mov
dec
or
cwtl
nop
xchg
xor
sbb
hlt
sub
ret
jle
jb
push
adc
lcall
cwtl
movsb
loopne
dec
mov
movsb
cltd
orb
scas
mov
stos
pushf
mov
xchg
andb
xchg
mov
lret
mov
enter
push
sub
push
rorl
jmp
adc
sbb
dec
les
addr16
int3
fimull
jno
fcoms
add
hlt
test
push
or
cmp
loopne
cmp
pop
pop
std
movsb
fsts
out
jbe
js
push
rclb
fs
addb
add
scas
out
xchg
sbb
jl
mov
imul
ret
nop
adc
jl
inc
sbb
daa
nop
jo
dec
loop
imul
adc
jmp
mov
imul
rcll
lods
in
push
or
notl
or
mov
xchg
stos
inc
es
pusha
and
shl
sbb
add
cmp
int3
adcb
mov
adc
sbb
nop
ret
lds
dec
inc
xorb
es
enter
call
add
xlat
fnstenv
pop
adc
dec
es
in
paddusb
fdivs
adc
cmp
push
test
inc
rclb
test
or
call
xor
push
lea
ret
xchg
push
and
sbb
test
dec
cmpsl
mov
sbb
dec
andb
jmp
int
inc
add
add
push
bound
push
add
cmp
fdivs
ljmp
ret
es
clc
adc
pop
enter
es
push
xchg
into
mov
inc
mov
in
insb
jp
idivl
es
jg
add
pop
jb
mov
insb
adc
dec
push
push
insl
pusha
pop
inc
mov
dec
xor
pusha
adc
xor
and
cmp
xor
and
sbb
inc
leave
and
dec
cmp
sbb
xor
pop
sbb
xchg
fdivr
sub
adc
outsb
scas
sbb
shlb
push
dec
dec
test
inc
cmp
lds
enter
and
ret
sbb
mov
jb
leave
or
pusha
popa
scas
dec
push
cmp
mov
mov
addb
sub
cltd
sbb
or
les
repz
inc
xchg
stos
jbe
xchg
jb
adc
or
movsl
or
jl
pop
or
jne
xor
std
inc
pop
adc
cwtl
int3
stos
add
fldcw
push
movsb
adc
jmp
jne
pop
insl
xor
test
jb
test
je
sub
test
enter
sub
cmpsl
jmp
int3
cmc
int3
mov
les
rcrb
in
loop
shrb
nop
lahf
out
mov
rclb
outsb
lods
pop
inc
in
inc
out
sub
adc
push
or
jb
inc
ljmp
or
cmpsb
rorb
mov
pop
aas
inc
mov
dec
cs
sbb
in
lea
or
mov
pop
call
and
or
jo
je
daa
sbb
add
test
pop
loopne
pop
inc
inc
int
jno
popa
jae
mov
out
and
mov
add
add
xchg
int
cmp
mov
xor
or
adc
add
repz
loope
cmp
sbb
mov
inc
dec
mov
andl
aad
xor
mov
int3
jmp
pop
xor
test
movsl
push
push
xor
inc
pop
ret
xor
mov
dec
lcall
mov
test
xchg
imul
xor
jns
push
mov
cwtl
and
push
push
xor
fnstcw
gs
rcll
les
movsb
sbb
in
xor
js
inc
stos
xor
pop
xchg
ss
adc
sub
enter
cmpsb
mov
or
push
in
push
inc
and
xor
call
in
lods
lods
or
cltd
aas
je
mov
fwait
mull
push
mov
pop
pop
repnz
sahf
push
xor
insl
leave
xor
in
jns
inc
mov
push
or
sub
sti
or
test
sub
std
dec
jo
ljmp
addb
add
adc
aaa
ja
and
int
cmp
mov
aaa
mov
add
int
lods
or
and
pop
mov
jg
sbb
xchg
jno
cmp
adc
call
xchg
or
loopne
or
bound
test
push
or
lahf
cmp
push
loop
sub
pop
or
jo
mov
aam
pop
aam
mov
dec
loopne
inc
shll
das
andnps
jb
inc
mov
inc
rcll
in
in
out
rclb
cmp
ror
in
fsubs
stos
mov
inc
dec
sbb
shrl
std
xchg
icebp
jb
push
inc
mov
xor
les
fsubl
push
cmp
sub
test
add
pop
rorl
mov
pmuludq
loopne
aam
pop
imul
xchg
sbb
or
xorb
xchg
inc
or
sbb
in
cwtl
adc
enter
jmp
int3
adc
push
pushf
shlb
lods
test
sub
mov
lods
xchg
xchg
fucomi
mov
pushf
leave
leave
insl
xchg
pop
xchg
bswap
enter
leave
sarb
push
dec
outsb
push
or
leave
add
faddl
fsubr
sub
push
je
mov
pushf
xchg
and
xor
insb
das
ljmp
mov
jo
jns
inc
scas
mov
sbb
out
jl
xchg
dec
sbb
xchg
inc
xor
and
jl
push
inc
jb
aam
je
call
rorb
das
sub
pop
sbb
es
mov
inc
popa
adc
inc
lret
xorl
mov
or
pop
enter
mov
movsb
mov
jne
imul
push
jmp
mov
stos
cmc
inc
std
stos
les
icebp
inc
add
decl
ja
sbb
movsb
mov
jmp
sbb
mov
movsb
in
mov
xor
adcb
mov
add
shll
mov
movsl
loope
in
lret
and
cmp
lods
or
inc
les
test
cmpl
iret
inc
mov
daa
add
dec
jp
adc
movsb
movsl
dec
repnz
cmp
dec
adc
sbb
and
xchg
dec
es
pusha
negl
insl
mov
pushf
and
inc
out
gs
lcall
notl
leave
push
and
movsb
lods
sbb
cwtl
xor
inc
mov
scas
adcb
pop
inc
leave
fiaddl
xchg
imul
idivl
jecxz
xchg
loop
add
and
xor
xor
stc
add
inc
cwtl
dec
sbb
fcom
xchg
in
or
insl
cmpsl
nop
movsl
aas
outsl
mov
adc
stos
aam
adc
cmpsl
jo
jno
inc
push
push
inc
lock
jmp
cmpsb
mov
mov
sbb
inc
nop
mov
es
pop
cltd
ss
mov
imull
imul
sbb
shrb
xchg
sbb
xor
fs
dec
mov
enter
shll
scas
adc
cltd
add
mov
and
stc
les
andb
test
mov
inc
push
cwtl
jl
xor
mov
rclb
xchg
dec
pushf
xchg
ja
adc
or
sub
xchg
scas
or
shlb
aas
mov
cmp
pushf
pop
or
adcl
and
ljmp
jmp
movsb
pop
adc
movsb
and
mov
mov
pop
add
xor
repnz
repnz
repz
nop
imul
adc
rorl
mov
fwait
insb
mov
das
sbb
pushf
mov
leave
and
nop
movsb
and
pop
dec
mov
sbb
or
push
pop
jo
jo
push
neg
pop
sbb
sarl
rclb
aaa
jne
lahf
movsl
repnz
cmp
pusha
xchg
dec
mov
or
xor
pop
or
arpl
sub
repnz
cld
sub
push
and
popf
pop
in
lods
adc
mov
push
pushf
movsb
sub
cmp
jg
insl
xchg
xchg
xchg
lahf
in
sti
leave
and
ret
fists
inc
es
in
and
inc
sub
sub
push
movsb
or
mov
push
clc
mov
into
push
mov
dec
jb
cltd
add
icebp
shr
inc
shll
or
lds
and
test
dec
cmp
test
cmp
xor
in
and
es
aam
adc
pop
fsubl
and
sbb
xchg
adc
sbb
sub
push
mov
push
sub
push
or
bnd
dec
loopne
enter
shll
sub
pop
shrl
adc
stos
pop
xor
sub
mov
jp
lods
sub
push
fcmovnbe
cmp
mov
mov
out
mov
mov
sbb
sbb
faddl
or
repz
aad
jnp
faddl
sub
sbb
mov
and
sbb
mov
test
dec
lea
cmp
push
cmp
outsl
movsb
shrl
adc
pusha
push
or
jmp
mov
xchg
push
xchg
inc
movsb
aam
or
rorb
test
xor
scas
mov
adc
aam
pop
int
sbb
mov
push
xchg
mov
ret
mov
adc
arpl
and
mov
pusha
add
fnstsw
or
inc
mov
notl
pop
xor
add
loopne
xor
bound
negl
mov
fwait
adc
and
insl
test
dec
aam
adc
adc
or
inc
sub
lds
inc
test
dec
and
and
sub
and
mov
inc
xor
add
add
sbb
mov
and
in
test
bnd
push
push
test
orl
imul
aas
insl
cmp
sbb
xor
std
xorl
add
pop
aam
xchg
jo
push
push
pop
sbb
add
pop
pop
inc
scas
add
mov
call
popa
mov
fldl
or
mov
bound
in
nop
cli
inc
adc
imul
dec
scas
dec
rclb
mov
pop
test
cwtl
sahf
gs
sbb
fwait
or
mov
je
cmp
ss
movb
lcall
outsl
add
movb
jno
int
xor
cmp
xor
jo
arpl
das
dec
xor
sbb
mov
push
sub
shrb
push
fs
mov
inc
xchg
cmp
push
fwait
dec
push
dec
add
push
and
js
ds
dec
adc
pusha
inc
mov
inc
mov
scas
int
mov
xchg
neg
rolb
push
mov
sbb
nop
imul
xor
mov
pushw
hlt
mov
adc
nop
inc
test
sbb
add
ficoml
pop
or
jb
or
fcomps
and
dec
rcrb
mov
sbb
xor
or
xchg
dec
xor
test
mov
sub
nop
imul
loopne
sub
dec
xchg
or
pop
jo
movsb
push
pop
outsb
pop
xchg
push
add
fisubl
pmulhw
jne
fildll
jecxz
mov
add
fsub
xchg
out
xchg
or
inc
mov
cmp
or
jge
fwait
ss
adc
mov
mov
sbb
lret
inc
fmulp
rcrb
cltd
xchg
sti
add
push
test
adc
inc
leave
and
fmull
jo
ja
xor
cmp
insl
cwtl
call
jne
xor
sti
mov
mov
insb
add
and
jmp
out
mov
dec
mov
enter
sub
shll
es
ffree
add
ficoml
add
mov
sub
sub
jmp
stos
dec
push
and
mov
or
inc
shlb
pop
movsb
jnp
lret
imull
or
fcomp
aam
enter
call
mov
add
and
and
jmp
cmp
mov
adc
lcall
sbbb
out
or
push
and
push
mov
mov
outsb
pop
fs
push
xchg
mov
add
inc
aad
pop
repz
adc
fcomps
xchg
out
cmp
mov
sub
out
sahf
cmp
adcb
int3
out
add
and
fwait
int
push
push
add
push
xchg
pop
mov
insl
ss
push
rcrl
das
cmp
mov
mov
add
sti
jg
orb
jnp
mov
add
adc
mov
rcll
xchg
adc
jg
push
or
cmp
rclb
cmpl
test
add
cmp
insl
call
adc
test
and
push
xor
sahf
addr16
call
add
or
mov
add
push
cmp
add
pxor
pop
sub
fbstp
aaa
lods
push
mov
and
insb
outsl
arpl
imul
xchg
test
sub
popa
arpl
sti
pushl
jb
outsb
je
add
das
add
push
insl
adc
push
xchg
outsl
jb
js
je
mov
fistl
mov
jae
or
mov
add
in
jnp
add
add
add
jne
les
inc
jl
ja
and
jb
dec
push
add
add
xor
or
fs
add
adc
xlat
add
add
aas
xlat
popf
inc
rcr
ss
dec
add
sub
imul
push
insl
xchg
je
je
and
mov
das
dec
fisttpl
jl
xlat
mov
cmpsl
insl
push
push
jl
adc
jae
bound
push
mov
push
lret
sbb
popa
fidivs
xor
insb
outsl
cmp
or
mov
mov
out
bound
jmp
mov
jmp
jo
mov
dec
xor
stos
insl
sub
jmp
jae
push
imul
cmpl
shll
inc
push
data16
sub
mov
outsb
mov
sub
fs
lock
sub
insb
lcall
repz
lahf
popa
jns
sbb
push
outsb
inc
arpl
inc
or
daa
cmp
sbb
dec
jbe
fbstp
maskmovq
push
outsb
bound
jnp
sub
push
arpl
xor
xor
scas
xor
sbb
inc
mov
fcoms
fisubl
sbb
aas
cs
and
daa
mov
and
andl
arpl
popa
sub
inc
ret
or
outsl
orb
jg
mov
iret
fistps
lods
inc
push
ss
or
jne
sbb
sub
jbe
jb
jne
aaa
stos
aad
pop
jbe
in
pop
test
stos
bnd
fisubrs
sbb
pop
or
cmp
push
jo
lahf
xor
aas
or
arpl
sbb
push
mov
dec
push
mov
xlat
aaa
out
roll
jecxz
stos
mov
scas
fs
imul
shll
ret
xchg
test
cmpsl
jl
lock
das
loope
or
mov
pop
jge
mov
stos
pop
insl
lret
je
adc
cmp
lea
mov
sbb
subb
out
pop
jecxz
push
push
sub
push
inc
sbb
shlb
dec
int
xor
fs
add
xchg
das
inc
fimuls
add
js
and
out
enter
in
adcb
adc
enter
das
inc
mov
mov
clc
repnz
xchg
sbb
clc
pop
inc
mov
jmp
js
jns
into
xchg
and
in
ret
mov
aaa
lods
lock
add
mov
jp
fldl
add
push
cmp
fucomi
xor
loope
or
cmp
mov
cmp
imul
mov
popf
mov
in
cmp
push
fwait
cmp
out
pop
dec
orl
sbb
xor
fdivrl
pop
add
jbe
outsb
and
add
das
das
and
popa
mov
scas
pop
mov
shlb
dec
ljmp
mov
cs
test
je
mov
cli
addr16
idivl
aas
xor
stc
dec
inc
mov
sbb
mov
clc
ds
pop
pop
popa
jnp
outsl
dec
and
inc
das
pop
insl
sbb
pop
imul
iret
insl
arpl
fdivrs
out
out
mov
shr
and
arpl
adc
pop
pop
jp
jae
andl
sub
pop
sti
dec
jne
dec
fbld
insl
pop
mov
sbb
mov
lahf
jg
lea
enter
insl
cmp
add
cmp
and
jns
add
das
clc
lahf
neg
das
jns
push
dec
push
inc
inc
arpl
bound
mull
mov
dec
arpl
out
sbbl
inc
jo
sub
addr16
xor
insb
xchg
mov
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
out
jnp
jns
jg
addr16
popa
je
lods
std
int3
fnsave
xor
and
daa
mov
gs
sbb
dec
outsl
outsb
and
cmp
pushf
insl
jbe
mov
aas
add
out
dec
or
inc
arpl
mov
jae
jnp
dec
and
push
inc
push
popa
insb
jne
loope
mov
push
dec
ret
pop
decl
stc
and
sub
sub
cs
xor
xor
xor
ss
sbb
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
ja
pop
sub
push
push
jb
pop
pop
mov
xor
popa
bound
gs
imul
shl
outsl
jo
add
jbe
js
jp
jl
jle
dec
outsw
mov
lock
loopne
jnp
inc
xchg
pop
add
orb
aas
ds
sar
lret
jno
icebp
pusha
inc
mov
mov
ret
movsl
add
xorl
inc
ja
push
outsl
imul
jae
or
add
es
gs
xor
popa
js
jne
mov
addl
pop
adc
out
ret
ret
sbb
sub
je
adc
dec
sub
imul
add
and
push
pop
rolb
push
add
xor
pop
xor
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
les
int3
push
jo
add
lds
loopne
xchg
inc
add
imul
outsb
and
push
or
and
stc
into
and
sahf
xchg
int
push
rorb
add
dec
dec
sahf
dec
lea
mov
mov
xchg
xchg
dec
repnz
dec
xchg
mov
mov
insl
jns
add
pusha
je
popf
dec
scas
mov
aad
out
add
lods
pop
lods
push
stos
mov
xlat
jmp
repnz
sbb
fwait
xchg
cmp
push
ja
mov
cmp
xor
dec
inc
pop
dec
dec
inc
movl
out
shrl
fs
je
cs
adc
dec
dec
bound
je
outsb
data16
in
js
xor
ss
out
je
xor
divb
adc
jo
pop
lea
lcall
popa
addr16
outsl
js
push
inc
mov
and
cs
and
insl
jo
jo
and
mov
sub
shlb
aaa
insb
les
dec
inc
sti
add
and
add
pop
imul
ds
cmp
dec
inc
jb
jns
cmp
daa
pop
and
ss
jns
mov
insb
and
in
test
je
and
inc
sbb
cmp
outsb
jle
jbe
mov
fdivl
or
jb
and
fidivrl
pusha
inc
jbe
push
fiaddl
fmuls
imulb
xor
or
and
sub
arpl
clc
mov
lcall
cmp
push
and
mov
xchg
inc
pop
dec
adc
pusha
adc
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
or
push
cmp
call
push
hlt
clc
addr16
cmpl
ja
mov
data16
push
mov
insl
mov
push
push
push
dec
testl
imul
repnz
push
lods
mov
mov
fisttps
shlb
dec
jge
or
sbb
imul
push
imul
stos
rorb
pusha
jg
ret
push
inc
outsl
jae
inc
push
xor
das
gs
sbb
lods
fadds
mov
push
or
stos
outsb
aad
das
je
outsl
xchg
push
mov
mov
popw
mov
rcrl
pop
cmp
cmp
ds
mov
das
push
sub
pushf
lock
jle
shr
cltd
es
add
jnp
cltd
iret
add
sub
pop
or
sbb
test
fisubrs
das
push
jb
push
mov
and
push
mov
push
xchg
pusha
mov
jne
stos
addr16
push
jbe
mov
loopne
sbb
jo
ss
gs
push
push
pushf
imul
and
cmp
push
sahf
fsubl
int3
inc
pop
sub
popa
sub
push
jl
out
repz
cmp
xor
out
cmp
sbb
add
clc
lock
sahf
call
iret
out
push
enter
mov
sahf
out
mov
test
cmp
jns
cwtl
xchg
nop
mov
test
fdivp
addb
js
fnstsw
push
push
je
jo
insb
repz
fcoml
dec
aas
pop
push
push
iret
repz
push
dec
dec
inc
inc
cmp
iret
repz
xor
sub
jns
iret
repz
add
call
out
test
push
sahf
sub
call
iret
repz
push
dec
inc
xor
sahf
int
adc
cli
cld
in
rcr
jns
out
mov
out
lock
neg
jns
int3
stc
xchg
stc
mov
xor
test
mov
fdivrp
inc
clc
jle
mov
mov
add
and
orb
imul
inc
addl
or
add
aad
insb
add
add
cltd
xchg
push
push
add
jbe
add
add
imul
jmp
add
adc
sbb
mov
and
pop
xchg
xor
mov
addb
xchg
decl
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
int
dec
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
push
xchg
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
test
xchg
mov
push
and
inc
aad
push
lcall
push
andl
outsb
gs
popa
data16
pop
jg
jo
outsb
push
xor
add
pop
cmpsl
ficoml
add
add
push
jns
outsl
dec
arpl
inc
insb
cmpsl
cmp
mov
aas
sbb
mov
pop
addr16
xor
in
iret
test
pcmpgtw
xor
add
lock
inc
adc
push
and
imul
xor
push
dec
inc
dec
cmovns
add
mov
imull
adc
rorl
mov
mov
out
xor
jnp
inc
loop
mov
ds
xchg
out
in
pop
adc
clc
lret
sbb
jb
in
xchg
jge
arpl
cmp
jg
adc
in
sbb
xchg
fisubrs
and
cmp
dec
jmp
iret
imul
lret
add
inc
mov
mov
notb
lret
sub
fwait
ss
sbb
pop
mov
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
decl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
mov
adc
xchg
icebp
mov
cld
or
loopne
cmp
inc
mov
addr16
fcoml
mov
or
insb
mov
out
leave
ljmp
mov
dec
test
shrl
aas
jl
leave
hlt
mov
sahf
xchg
dec
add
scas
lods
dec
lock
jb
xor
pop
mov
pop
pop
repnz
and
es
cmc
aas
flds
sbb
add
add
int
dec
vmptrld
add
daa
rorb
or
cmp
sub
mov
or
xchg
and
pop
cmovg
inc
subl
ja
pop
and
fwait
imul
outsb
addr16
in
add
out
es
jae
lret
inc
inc
jmp
shrb
insb
scas
sbbl
xor
fidivrs
loopne
xchg
jg
aas
lea
pusha
fs
pcmpeqw
clc
mov
ja
popa
ret
cmp
fldt
mov
mov
jmp
insb
add
inc
xchg
lahf
je
push
out
shll
push
xchg
lret
or
adc
ret
ja
or
fcomi
inc
jb
add
inc
stos
test
or
ret
sbb
jo
push
push
pop
clc
and
movsb
xchg
jb
mov
jae,pt
insl
pxor
push
pop
mov
mov
xchg
jmp
js
sub
mov
out
fbstp
push
push
mov
loope
adc
jg
sbb
pop
or
adc
das
cmpsl
insb
push
in
dec
cmp
ret
or
stos
sbbb
or
fwait
add
sti
sbb
jns
mov
jg,pn
lcall
cmpsl
loope
mov
add
jmp
inc
out
pusha
mov
jne
ja
or
add
mov
sub
cmp
mull
add
jne
adc
inc
popa
cmp
dec
push
push
jo
imul
jge
sub
push
es
sti
cmp
divl
cmp
out
mov
clc
cmc
jmp
insl
ret
dec
in
adc
dec
mov
aas
xchg
gs
cmp
xchg
add
pop
jecxz
mov
insb
mov
dec
popa
xor
imul
mov
pop
out
inc
addr16
out
xlat
in
lahf
out
xlat
addr16
je
data16
aas
sbb
mov
arpl
daa
pop
arpl
add
loope
pop
gs
jne
in
mov
push
lret
sbb
andl
xor
jge
fistps
pop
inc
sbb
mov
add
sub
imul
add
pusha
aad
xor
ja
push
or
sub
inc
sub
pop
ret
daa
ss
xchg
add
ja
sub
aas
mov
loope
into
ds
icebp
jecxz
push
jecxz
addr16
push
arpl
shlw
in
arpl
call
and
push
push
dec
popa
jae
dec
js
jnp
out
or
add
cld
xor
mov
bound
ja
out
cmp
arpl
inc
neg
push
adc
aaa
pop
xchg
fimuls
add
pusha
aad
push
pop
mov
mov
push
sub
or
inc
xchg
dec
vmread
divl
sarb
add
pop
clc
xor
dec
imul
je
jmp
inc
call
lahf
push
xlat
les
out
js
inc
pop
or
pop
xor
inc
dec
arpl
push
add
lods
icebp
cmp
dec
mov
shll
sub
add
sub
outsb
sti
xor
lods
add
out
pop
push
cmp
inc
mull
jae
call
pop
mov
addr16
lret
and
insl
sbb
jg
fcomi
dec
fdivrl
outsl
sbb
add
push
push
inc
and
jmp
mov
adc
addr16
aas
ja
inc
pop
pop
cs
xlat
pop
push
ja
es
fwait
lods
loope
orl
mov
imul
jo
idivl
dec
insb
xchg
mov
inc
sbb
sbb
mov
mov
cmp
jnp
ss
mov
adc
aas
dec
sbb
cmp
test
cli
iret
pop
pop
por
xlat
mov
sbbl
adc
addr16
outsl
mov
rorl
xor
and
cmp
push
xadd
les
testl
add
mov
insb
sarb
pop
fcomip
les
punpckhwd
jno
push
pop
sbb
js
ja
cmp
and
addr16
bound
xor
stos
das
repz
push
mov
mov
jl
cmp
bnd
loope
pop
jnp
gs
jl
mov
push
sub
mov
pop
jnp
addr16
jns
insl
mov
popf
and
add
scas
jbe
pop
ja
outsb
mov
dec
outsb
cs
pop
ja
movsb
arpl
shlb
les
jno
jno
xchg
mov
insb
sub
lret
jl
into
add
cmp
bound
jns
jl
inc
jnp
mov
adc
lods
sbb
mov
push
sub
iret
imul
push
xchg
jl
insb
pop
arpl
ret
xor
loope
ret
out
adc
jle
es
insb
add
push
imul
add
mov
outsl
add
push
dec
xchg
addl
imul
clc
ret
pop
xchg
fisubs
lea
pop
push
jecxz
fistpll
jae
jae
xor
or
lahf
scas
dec
adc
inc
stos
cmp
pop
pop
fistps
out
lret
push
mov
aaa
sbb
pop
pop
jmp
xlat
sub
xorl
push
fsubs
aaa
push
xchg
insb
mov
aam
inc
aas
popa
mov
xchg
fisubrl
lods
push
es
mov
das
addr16
sbb
fwait
push
pandn
dec
pop
loop
dec
daa
push
les
or
jo
flds
cmp
fimull
je
cmp
dec
or
es
rolb
fbstp
cwtl
sbb
mov
cmp
scas
inc
popa
push
int
push
subl
ljmp
out
cmp
or
xchg
push
inc
add
or
insb
inc
xor
pop
push
outsl
ds
jnp
xchg
int3
inc
and
aam
dec
jnp
out
sarl
push
xchg
in
pushf
in
int
dec
cmp
test
pop
add
push
or
popf
loope
cmp
push
repnz
dec
stos
push
push
dec
pop
iret
jnp
mov
xor
sub
insl
inc
push
push
jae
mov
jns
addb
cltd
out
sahf
out
aad
cmpsb
pop
cmp
shrl
out
jnp
or
pop
aaa
dec
and
xor
imul
add
pop
jae
ss
or
and
shufps
inc
aaa
test
jbe
ret
mov
cmpsb
push
and
arpl
or
pop
test
sti
stos
pop
pop
push
jae
imul
and
fmull
mov
jae
insl
pusha
push
popa
jne
or
hlt
sbb
push
dec
bound
xor
pop
sub
and
jle
outsb
arpl
push
xchg
iret
out
cmpsl
arpl
add
adc
repz
pop
xchg
in
incb
movhps
cmp
jns
je
inc
ds
mov
push
ret
dec
repnz
or
cltd
clc
xor
jno
je
cmp
or
inc
out
push
jo
jb
mov
add
jb
jb
and
subl
inc
sbb
and
and
sti
cmp
and
arpl
xor
cmp
fs
adc
jo
loop
push
ds
enter
or
ss
cmp
imul
sbb
test
imul
inc
mov
push
movsl
fmuls
push
mov
xor
inc
popf
pop
jne
xor
cmpsl
xor
sbb
outsb
inc
or
je
loope
ja
push
ltr
js
xchg
add
rolb
shlb
dec
stos
pop
adc
push
pop
addr16
pop
inc
xlat
mov
test
push
and
inc
cmp
cmpsl
add
dec
add
add
add
pop
push
adc
pop
sarl
cmpsb
pop
repnz
pop
imul
adc
pop
mov
push
add
enter
not
iret
add
push
dec
push
push
xchg
and
ds
or
add
jg
xchg
aad
push
sbbl
fstpl
hlt
mov
add
inc
ja
icebp
and
fs
bound
cmpsb
call
movsl
and
inc
fiadds
jecxz
push
fiaddl
das
xchg
add
imul
aaa
mov
imul
popl
arpl
movl
adc
test
adc
shrl
sti
sbb
inc
sub
pop
adc
mov
adcb
lcall
pop
dec
jg
push
loope
iret
dec
stos
sti
stos
xchg
adc
jmp
dec
shrb
pop
jecxz
pop
inc
repz
pop
jl
inc
fs
mov
mov
bound
inc
outsl
adc
mov
lods
pop
mov
pop
inc
sub
or
pop
imul
mov
stos
orb
mov
jb
cmp
popa
adc
sub
aaa
and
mov
iret
imul
pop
shrb
jae
push
jp
jecxz
rcr
arpl
push
xor
aaa
pop
loop
push
inc
bound
xor
nop
push
sbb
inc
outsl
adc
rorb
jb
fs
push
dec
ja
add
js
jbe
xlat
dec
add
dec
inc
sahf
sahf
aaa
sbb
iret
mov
adc
pop
sbb
and
ret
out
andl
ljmp
xor
xchg
pop
add
js
add
sub
push
inc
int
add
das
adc
jns
mov
insb
out
and
sub
xor
inc
mov
sti
out
mov
mov
mov
xor
add
shrb
ret
sub
mov
insb
shrb
xchg
pop
adc
aaa
fwait
dec
and
add
xchg
int
mov
rclb
lret
str
ss
cwtl
or
and
das
incl
rolb
adc
xchg
fmuls
ss
mov
sub
fdivrl
mov
inc
clc
lock
out
pop
js
in
cmpsl
inc
fidivl
in
push
call
str
push
test
dec
fidivs
sub
mov
movsb
and
sti
jl
pop
or
mov
or
addr16
cmc
push
inc
outsl
inc
push
and
mov
imul
data16
xchg
push
faddl
xchg
dec
inc
pop
daa
nop
inc
cmp
or
sub
dec
inc
mov
scas
mov
jg
aaa
sbb
sub
fwait
jge
or
mov
push
and
movsb
scas
dec
popf
push
sbb
ret
xchg
arpl
movsl
aaa
adc
popl
jno
push
xchg
push
aas
shrb
jmp
inc
je
scas
xchg
add
pop
icebp
movsb
cli
jb
or
push
xchg
jo
out
jnp
ss
xlat
das
add
loope
and
cmpsl
push
or
orb
jp
push
lahf
sub
outsb
jmp
mov
cmp
gs
imul
outsb
jae
sbb
scas
inc
add
daa
push
pop
inc
repz
inc
pusha
push
xchg
inc
sets
stos
imul
inc
push
imul
subl
mov
jae
mov
aaa
sbb
mov
mov
ret
lcall
pop
add
jo
sbb
imul
das
ret
das
pop
mov
mov
loop
cmp
xchg
cmp
push
cmp
jmp
sub
insb
adc
rol
dec
xchg
fbstp
addb
popa
xchg
imul
lahf
arpl
dec
fildl
scas
jp
roll
xchg
xchg
sbb
lods
xlat
mov
mov
pop
mov
inc
outsb
cmp
lds
ret
ficomps
xchg
push
out
cmp
jecxz
mov
shrl
mov
pop
shll
pop
subb
adc
inc
push
pop
mov
add
add
push
jb
xlat
inc
fcompl
push
inc
inc
dec
cwtl
cmp
dec
xor
add
fistps
mov
je
sub
cmp
push
mov
push
sub
es
add
inc
rcl
inc
outsl
daa
sub
xor
push
jecxz
lea
mov
xchg
pop
xlat
mov
jno
sbb
imul
jmp
and
add
out
dec
mov
fcmovne
mov
fbld
mov
sbb
out
inc
inc
enter
cs
xchg
or
test
pop
or
mov
push
arpl
test
imul
dec
js
and
out
loopne
outsb
or
mov
in
into
sbb
sub
inc
lcall
push
mov
les
dec
daa
rorb
add
das
add
or
inc
pop
sti
out
push
xor
test
fs
mov
push
or
outsl
not
or
lahf
pop
ret
js
aaa
sahf
sbb
das
xchg
add
shrb
je
cmp
jl
mov
decl
rorl
shrb
push
jmp
sbb
xchg
and
dec
mov
push
orl
xor
ret
push
ret
cmp
addr16
popa
aad
jmp
mov
shlb
and
loope
xchg
adc
arpl
les
xchg
pop
xor
addb
addr16
mov
push
cltd
pop
push
dec
cmp
subb
insb
xor
lret
sub
popa
adc
sub
cmp
mov
testb
adc
jb
adc
push
push
mov
sbbl
pop
jo
sbb
aas
push
inc
push
sub
fisubs
xchg
jle
dec
mov
push
pop
sbb
sbb
dec
push
mov
stos
push
scas
mov
add
imull
mov
mov
add
dec
adc
iret
jp
scas
mov
add
rcll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
filds
test
daa
ja
mov
pop
or
pop
out
lds
fwait
out
push
stc
pop
cmp
mov
pop
cld
out
ds
lods
das
inc
std
bound
lods
push
add
fiaddl
pop
aad
int
insb
push
pop
xor
or
mov
cmp
or
xchg
jmp
sbb
out
fwait
mov
and
and
dec
dec
js
es
mov
pop
bound
adc
out
xor
dec
inc
pop
mov
or
xchg
loop
loop
arpl
mov
cmp
push
inc
inc
lods
das
call
add
add
jmp
fists
sub
adcl
sbb
pop
xor
xchg
add
dec
add
lcall
pop
pushf
ret
jge
int3
push
repz
sbb
ret
adc
or
ret
push
push
stos
sbb
pop
or
test
dec
lds
imul
add
das
sbb
adc
enter
iret
aas
inc
lods
push
add
lahf
das
scas
push
lret
xor
and
push
out
iret
sbb
test
ret
lods
mov
sti
pop
fisttpl
push
shrl
pop
push
rcr
xlat
and
xchg
push
addl
mov
daa
movb
jg
addb
jecxz
addr16
vmovntps
ficomps
and
std
adc
cmpsb
out
jnp
jge
push
sbbb
jl
xor
and
mov
rcr
cs
roll
xor
fists
pop
mov
lahf
add
push
insl
pop
push
or
sbb
jae
aam
cmp
adc
lgs
arpl
bound
ja
js
mov
pop
mov
pop
mov
fdiv
mov
push
mov
int
xor
inc
mov
scas
in
push
leave
push
jb
dec
scas
mov
lods
pop
leave
test
mov
pop
and
in
cmp
xchg
sbb
enter
jb
and
aam
scas
xchg
stos
xorb
mov
test
test
xchg
cmp
hlt
push
stos
in
mov
push
cmpsb
clc
inc
cmpsb
movsb
stos
ljmp
xchg
stos
movsl
movsl
movsl
add
xchg
pushf
push
movsb
mov
xchg
stos
stos
push
fbld
mov
push
aad
cmp
push
leave
mov
jl
ljmp
stos
in
mov
pop
and
stos
in
imul
sahf
cwtl
fistps
xchg
popf
popf
test
sub
fnstcw
xchg
movl
mov
pop
and
pusha
dec
jg
das
adc
xor
es
test
pop
pop
pop
shll
rorb
inc
inc
test
inc
dec
ret
fucomi
inc
mov
sub
dec
fsubrs
mov
inc
xchg
mov
push
and
xlat
inc
cmp
lods
xor
push
dec
lods
lods
add
pop
lcall
mov
dec
mov
arpl
imul
and
insl
aam
dec
inc
repz
dec
das
dec
inc
insb
mov
lods
push
inc
int
cmp
insl
sbb
inc
shll
movsl
and
inc
inc
or
aas
imul
mov
and
mov
push
add
ret
or
addr16
inc
add
dec
and
sti
xchg
leave
shrl
scas
addr16
push
xor
xchg
fildll
inc
scas
mov
scas
cmpsl
movsl
arpl
adc
push
inc
sub
aaa
test
inc
cmp
enter
adc
jp
jecxz
pop
jmp
push
adc
add
lahf
daa
or
das
mov
push
out
aaa
fildll
iret
aaa
outsl
mov
js
scas
push
or
inc
movl
and
aaa
outsl
jecxz
fmuls
bound
ret
lahf
mov
test
sti
push
aas
pop
cs
mov
lods
adc
aas
pop
jmp
lods
mov
jbe
mov
scas
mov
push
ja
mov
mov
movsb
or
inc
pop
cmc
out
pop
push
sbb
adc
xchg
nop
cli
cmp
mov
outsl
outsl
sbbl
lea
jg
or
xchg
lock
pop
add
pop
add
repz
fisttpl
add
sbb
in
pop
cmp
pop
sbb
mul
add
sub
pop
or
push
mov
add
add
pop
sbb
into
push
xchg
bound
add
dec
inc
popl
or
or
xchg
jmp
mov
xor
pop
jne
addr16
out
test
or
adc
je
or
sbb
je
push
cs
pop
testb
sbb
xor
cmp
add
imul
iret
mov
pushf
lea
xor
mov
les
in
ss
cwtl
mov
bound
jae
js
shrl
aaa
outsl
dec
js
test
jecxz
psadbw
xchg
sbb
or
test
stos
add
ret
sbbl
pop
iret
and
mov
shrb
inc
nop
sub
add
repz
or
dec
sar
add
push
and
adc
cmp
repz
push
push
push
andl
push
jp
outsb
movsb
dec
push
pusha
adc
insb
sahf
jl
push
idivl
sbbl
dec
rorb
sti
cs
fsubs
fwait
addb
bound
xorb
mov
push
add
stos
xchg
fimull
decl
scas
pop
inc
add
pop
inc
pop
rcrb
pop
and
sbb
pusha
push
scas
pop
sub
mov
or
push
push
das
cmp
xor
xor
pop
ljmp
jnp
dec
mov
inc
xor
or
xlat
cmp
js
dec
sbb
and
mov
arpl
sub
fists
push
push
add
mov
mov
out
inc
fiadds
pop
adc
dec
pop
jg
addl
fwait
xor
inc
xchg
push
jae
and
fistpll
xor
aaa
inc
aam
mov
or
push
cmpsl
xor
fwait
and
pop
xchg
loopne
mov
mov
and
mov
test
adc
ljmp
outsb
sahf
cmp
mov
push
in
cs
cmp
xlat
dec
sbb
ret
out
es
loopne
arpl
push
adc
fstl
insl
xchg
loop
fidivrs
daa
xchg
inc
xchg
cmp
inc
cmp
jnp
pop
ret
fs
dec
sub
roll
pop
jecxz
pop
mov
dec
shlb
or
inc
loopne
stos
in
inc
jle
js
xor
in
and
ficomps
jg
into
dec
or
out
sbb
cli
inc
push
bnd
ss
push
push
push
fidivl
bound
xor
repz
ret
xor
out
loopne
inc
cs
lret
jb
mov
ret
cmp
push
cmpsb
xchg
ja
jge
js
retw
pop
fwait
sub
pop
pop
inc
data16
xor
mov
lcall
out
sub
inc
inc
mov
xchg
add
dec
daa
in
fisubs
push
mov
out
pop
js
inc
and
out
sbb
inc
pop
pop
mov
push
es
clc
fidivrs
pop
push
push
xor
dec
mov
fs
inc
pop
dec
es
das
pop
out
mov
add
and
or
idivl
push
sysexit
mov
cmpsl
xor
outsl
push
scas
jge
xchg
push
push
insl
sub
neg
jnp
push
insl
mov
inc
ja,pn
xor
jnp
dec
mov
push
jp
fucomi
loope
ds
fiaddl
jg
fimuls
xor
das
sbb
outsl
dec
xor
in
fisttpll
xor
mov
inc
outsl
imul
add
push
dec
cmovp
adc
jecxz
add
loop
pop
xchg
dec
dec
adc
jne
inc
mov
pop
adc
push
outsb
lahf
fwait
insb
movsl
jo
jg
iret
jnp
dec
xchg
sbb
invd
or
xor
mov
pop
add
inc
inc
fcomi
pop
hlt
pop
int
xor
bound
jnp
ja
scas
add
bound
pusha
imull
mov
inc
adc
pop
add
popa
xchg
cs
pop
mov
sti
cwtl
test
mov
and
pop
lret
pusha
lahf
xchg
jno
fs
pop
push
cmpsl
xlat
addl
push
pop
add
addr16
jmp
arpl
pop
shrl
stos
scas
lcall
fs
mov
lret
and
lahf
push
mov
push
pop
dec
pop
lahf
add
daa
push
sub
sbb
inc
mov
jo
add
sbb
inc
dec
dec
sahf
xor
pop
sbb
mov
mov
push
sub
push
shll
imul
sub
out
pop
xchg
cmpl
call
dec
inc
into
insb
outsl
popa
fs
outsl
inc
cmp
jl
lods
push
add
pop
aas
add
out
or
hlt
adc
push
add
divb
cmpsl
sbb
add
pop
iret
adc
pop
mov
test
add
popa
cs
xchg
outsb
out
dec
movsl
mov
shlb
jb
mov
sub
gs
sbb
pop
scas
arpl
push
jo
xchg
add
jg
arpl
mov
ja
dec
mov
push
ljmp
repz
fsincos
add
adc
xchg
pop
ds
sahf
add
mov
es
mull
push
call
cmp
jne
jo
arpl
xor
std
add
ja
xor
xor
push
sbb
xor
filds
adc
dec
into
pop
shlb
or
pop
repz
xor
xlat
jae
inc
fmuls
jae
xor
mov
mov
insb
fwait
add
jae
mov
add
mov
push
sub
or
pop
dec
mov
popa
pop
outsl
ret
lods
ret
iret
mov
lahf
pop
scas
loopw
sub
sub
int
sub
outsl
add
add
out
jecxz
jp
sbb
mov
addr16
popa
pop
xor
mov
and
mov
sub
test
arpl
and
addb
ret
and
repz
les
cwtl
leave
fs
or
int
pop
and
mov
push
jne
inc
dec
iret
inc
mov
stos
lea
cmpsl
test
daa
jns
add
das
mov
test
push
xchg
outsb
dec
arpl
call
sub
shlb
lea
outsl
ljmp
das
repz
sub
sbb
xlat
aaa
sub
call
fs
adc
pop
ljmp
shrb
jb
push
ds
push
cmp
jle
js
lock
mov
cmp
inc
jmp
push
fdivrl
mov
inc
icebp
or
flds
push
mull
imul
lahf
sub
xor
imul
insl
mov
sub
out
push
out
out
sbbb
push
mov
inc
insl
bound
das
mov
dec
mov
add
add
inc
es
testl
mov
out
and
out
push
and
mov
add
adc
filds
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
xor
pusha
or
mov
sub
sub
nop
mov
xchg
mov
mov
ds
pop
sbb
aas
fstpt
and
jle
jo
fsubs
jmp
lds
sbb
mov
pop
dec
xchg
or
inc
dec
jecxz
dec
push
pop
add
pop
mov
jg
pop
push
xchg
xor
mov
aaa
dec
mov
jo
imul
fs
pop
mov
mov
add
dec
popa
mov
and
and
mov
mov
push
insb
dec
pop
and
in
rcll
dec
cmp
sub
jb
and
pushf
in
dec
push
xor
xor
cmp
xchg
int3
inc
mov
xchg
xchg
pushf
dec
mov
pop
daa
pusha
repnz
pop
ret
add
bound
adc
out
inc
pop
insl
and
dec
xchg
aaa
xor
cmp
das
ljmp
mov
fwait
add
push
pop
push
lcall
idivl
ficompl
cmp
sub
adc
inc
push
mov
inc
xlat
or
addr16
mov
icebp
mov
arpl
imul
push
or
and
aaa
inc
dec
hlt
ret
xchg
imul
bound
je
bound
imul
pop
int3
repz
dec
mov
xchg
nop
cs
bound
mov
add
pop
or
fisubs
jnp
call
push
scas
and
insb
mov
aas
push
das
xlat
inc
pop
mov
inc
sub
pop
sub
notl
adc
pop
pusha
insl
xor
dec
push
push
scas
fidivl
je
aaa
adc
bswap
imul
aaa
xor
outsb
das
addr16
roll
arpl
fisubs
jge
mov
push
dec
pop
rcll
xlat
aas
fnsave
xor
inc
call
test
sub
mov
movsl
inc
add
sub
in
and
out
add
jb
testb
pop
pop
insb
lahf
outsb
repz
fistl
xchg
imul
sub
xor
jno
add
jbe
or
sbb
outsl
dec
pop
dec
mov
rorb
outsl
push
cwtl
xor
bound
dec
inc
arpl
leave
jl
cs
cmp
jbe
xchg
xorb
xchg
push
pusha
adc
data16
hlt
addl
inc
add
mov
xchg
inc
loopne
int
idivl
test
dec
sahf
fstpt
jnp
xchg
and
push
cmp
fdivs
cld
pop
xchg
int3
in
lret
jnp
push
mov
fwait
pop
push
add
push
data16
jbe
rcr
lcall
jae
insl
jnp
repz
adc
cmc
push
jo
repnz
sahf
pop
jb
xchg
cli
into
xadd
aaa
cli
pop
pop
sbb
sar
aaa
es
nop
shll
xchg
jno
push
jns
and
jle
fldcw
cmpsb
push
mov
jbe
jnp
push
push
and
sbb
or
jne
jns
int
cmc
sub
sub
cmp
dec
insl
lods
pop
push
cmpl
sub
in
inc
pop
cmp
mov
daa
xchg
mov
push
sti
popa
jns
adc
popf
push
mov
cmp
push
sub
xchg
fcompp
mov
pop
arpl
insb
pop
inc
lea
mov
mov
cld
inc
pop
push
fimuls
pop
out
inc
js
xchg
nopl
mul
clc
mov
jns
dec
loopne
aaa
fstps
or
cmp
inc
or
idivl
es
sub
xor
ss
sahf
mov
push
cmp
out
mov
adc
out
sbbl
cmpsl
into
xchg
pop
push
inc
inc
add
aas
insb
fistpll
cmp
push
xchg
ret
add
cmp
repz
sbbl
push
dec
fists
mov
xor
ss
aaa
gs
fdivp
sahf
push
xchg
outsb
dec
outsb
cld
repz
mov
outsl
dec
jecxz
cmp
cwtl
out
ss
lret
rdtsc
push
into
out
sahf
jbe
leave
repz
mov
clc
cmp
and
jns
out
gs
mov
loop
cmp
and
sub
or
sbb
lock
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
jbe
aaa
jecxz
test
mov
pop
enter
pop
push
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
or
adc
cs
mov
test
loop
add
mov
lods
or
pop
xchg
push
adc
repnz
or
leave
cld
sbb
es
aam
push
add
iret
leave
shlb
or
jp
xor
test
inc
mov
jbe
popf
pushf
popf
cmp
insl
gs
cmp
out
shl
leave
pop
addr16
adc
pop
outsl
imul
cmpsb
mov
imul
or
mov
add
pop
push
dec
ljmp
les
popa
je
and
shlb
fistl
push
xchg
cmp
xchg
inc
mov
mov
outsb
imul
pop
push
ficoml
cs
lcall
lret
pop
int
movsb
es
push
push
and
sub
push
sub
lea
pop
push
or
notb
mov
mov
sub
cs
xlat
inc
pcmpeqd
pop
addr16
push
out
sub
push
fisubrs
cmp
adc
or
add
push
pop
outsl
xlat
icebp
jne
das
ja
fwait
push
jo
jmp
pop
inc
dec
popa
movsl
test
dec
aas
mov
adc
das
inc
jecxz
pop
lea
lret
ret
iret
dec
xchg
fidivrl
adc
fdivs
fs
out
jb
lea
into
xchg
divl
sub
push
and
sub
mov
sub
xchg
add
add
sysexit
ja
loopne
pop
jecxz
punpckhbw
inc
fildll
add
inc
jmp
mov
jbe
jo
xor
scas
dec
loope
xor
jmp
outsb
push
jnp
fwait
add
xchg
test
aaa
dec
and
add
ret
das
jb
and
pop
dec
inc
push
shrl
lret
jecxz
pop
xlat
dec
push
cs
imul
lock
inc
xchg
iret
adc
pusha
inc
incl
fsubs
js
je
repz
out
outsl
bound
cmpsl
inc
or
jne
xchg
inc
mov
push
mov
jo
pop
pop
addr16
mov
je
fisttps
cmp
dec
insl
mov
dec
mov
das
inc
lods
push
arpl
ret
icebp
adc
sti
xor
ja
jo
xlat
pop
xchg
mov
aas
jg
mov
sahf
fildl
nop
fstpl
sub
mov
mov
arpl
pop
jnp
push
sahf
daa
mov
cmpsl
inc
fildl
das
add
xchg
jne
xchg
pop
testl
iret
xchg
mov
push
shll
sbb
add
mov
jg
das
mov
insl
mov
xchg
xchg
inc
dec
push
call
jo
inc
jecxz
movl
fistpl
pop
scas
mov
and
out
insl
adc
inc
mov
sub
lahf
dec
add
mov
inc
js
mov
push
subl
push
adc
xchg
lahf
popa
push
sbb
cwtl
sub
jo
aas
push
add
push
adc
push
pop
or
mov
rcrl
in
adc
add
mov
add
adcl
das
pop
pop
outsl
cs
sub
mov
cli
jge
cmp
inc
lret
in
push
in
inc
push
inc
xchg
sbb
or
cli
cmp
dec
push
popl
mov
aam
pop
or
fidivrs
pop
inc
mov
dec
inc
into
xor
pop
rolb
sub
mov
mov
js
pop
addr16
ss
lahf
inc
sub
dec
inc
xor
sbb
add
cmpsl
push
sub
stos
call
jg
sub
add
inc
iret
pop
pop
inc
sbb
inc
jns
push
inc
cwtl
jg
iret
push
daa
cmp
es
xchg
sub
ja
adc
push
movsb
push
jecxz
lret
lret
out
cmpsl
fstpt
insl
jo
paddd
add
addr16
jo
jae
pop
ja
sbb
pop
jno
outsl
xor
push
and
daa
jg
mov
mov
pop
pop
sub
cmpsb
jns
je
jne
or
and
cmpl
pop
push
sbb
xor
das
lds
ja
out
mov
mov
lock
jae
arpl
mulb
cmp
dec
pop
inc
fstpt
push
inc
push
movsb
jo
fimuls
imul
push
or
add
gs
pop
or
jne
inc
sti
inc
jecxz
js
mov
aam
mov
testl
cmpsl
pop
stos
lods
inc
push
jl
add
bound
cmp
aam
cmovns
jae
add
pop
or
mov
into
dec
push
xchg
ljmp
add
push
dec
outsb
add
cmc
lea
pop
fbld
add
inc
adc
addr16
inc
xchg
test
push
aam
add
loop
push
jb
iret
sub
adc
mov
ret
mov
xor
adc
fadds
fistl
inc
outsl
outsb
or
aaa
inc
insb
js
jp
fmuls
pop
daa
xor
add
lret
pop
pop
sub
cmpsb
jb
imul
mov
push
push
das
and
pop
add
push
pop
and
mov
inc
dec
push
xchg
add
jle
mov
rcr
mov
or
jbe
add
cmp
xchg
pushf
add
sbb
sbb
add
repz
insb
mov
jmp
jnp
and
pop
mov
aaa
icebp
outsl
fidivl
and
ds
das
daa
add
sbb
adc
add
pop
daa
daa
daa
push
and
int3
push
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
es
js
insb
cwtl
lahf
sbb
fstpl
push
and
mov
add
les
sbb
arpl
jge
sbb
push
xlat
ds
push
data16
pusha
jo
pop
push
sbb
fsubp
mov
lock
push
inc
push
add
adc
jg
adc
push
subl
xchg
add
sub
sbb
rorl
repz
ja
mov
sbbb
add
lahf
outsl
mov
outsb
ret
jbe
mov
sar
fwait
push
mov
sbb
scas
cmpsb
push
push
sbb
xor
cmp
cmpsb
sub
sbb
pop
and
scas
pop
aaa
add
pop
outsl
add
mov
popa
mov
cmp
icebp
mov
or
cmpsl
push
or
incl
int3
inc
enter
xchg
aaa
push
sub
xlat
dec
or
push
pop
fmull
mov
or
shl
jnp
or
or
or
jb
mov
and
ja
out
push
imul
inc
outsl
arpl
popa
or
je
and
and
arpl
push
es
insb
lods
sbb
xchg
je
and
je
mov
popa
stos
push
xchg
test
dec
cs
mov
xor
and
mov
jo
adc
aaa
and
dec
inc
dec
xor
data16
push
push
aas
in
mov
js
outsl
fs
gs
jo
jns
jbe,pn
iret
inc
mov
cmpsl
add
pop
outsl
insl
jne
imul
sub
data16
add
or
addr16
mov
ret
das
cmp
and
mov
sbb
pop
gs
inc
insb
inc
les
adc
jbe
cmp
inc
popa
imul
arpl
aaa
xor
outsl
jo
ret
xor
gs
mov
ja
orb
inc
or
inc
xadd
cmp
negl
cmc
inc
cmovo
mov
mov
cmp
nop
jo
punpcklbw
mov
loopne
rclb
cs
scas
sti
inc
or
ret
movswl
cmp
pop
mov
mov
sbbb
scas
mov
push
lods
push
mov
add
inc
faddp
popl
in
inc
hlt
or
in
imul
push
xchg
sbb
add
in
pop
xchg
cmp
insl
bound
sahf
dec
lcall
and
daa
xchg
les
xchg
mov
xorb
xchg
outsw
inc
xchg
xchg
mov
jne
daa
xchg
outsl
call
repz
xchg
and
aam
addr16
lods
mov
inc
ss
and
add
xchg
cmp
add
sbbb
push
add
mov
fs
jbe
or
add
movsb
outsb
enter
lock
xchg
pop
or
loope
andl
cs
pop
fcomps
sub
fsubl
dec
xchg
and
mov
cltd
pusha
ret
ss
rolb
xchg
mov
inc
sahf
or
nop
or
xchg
lock
aam
popf
fdivrs
cwtl
xor
cmp
mov
add
js
xchg
movsb
and
jl
jae
pop
enter
pop
rolb
ret
mov
cmp
push
shll
xchg
add
mov
cltd
adc
sbb
inc
mov
inc
adc
outsl
xchg
dec
sbb
xor
pop
inc
xor
insb
ds
dec
daa
xchg
ja
iret
push
xchg
movsb
xchg
mov
enter
add
loopne
cltd
push
lcall
into
lcall
daa
imulb
aam
xor
add
test
rclb
outsb
jl
or
pop
subb
jbe
adc
nop
dec
aam
fwait
or
dec
lock
cld
fwait
add
cltd
pusha
arpl
in
scas
fwait
or
cwtl
inc
data16
fwait
daa
mov
mov
fwait
insb
leave
cmpb
add
pop
out
and
xchg
xchg
shl
inc
es
call
dec
enter
sbb
in
lods
ss
addr16
mov
out
lock
push
pushf
jo
jl
mov
shll
nop
out
lods
mov
andb
cltd
and
out
test
popf
add
inc
adc
cld
popf
sub
cltd
pusha
fbld
hlt
iret
test
mov
fwait
pusha
arpl
divl
int
push
cmp
push
fdivl
or
dec
add
or
sahf
or
sbb
pop
add
ja
inc
sahf
xlat
lahf
lcall
xchg
jl
lahf
pop
iret
test
xor
mov
and
jge
repnz
pusha
cld
lahf
mov
mov
out
mov
lahf
pop
insb
movsl
and
jns
in
lahf
mov
cs
or
out
in
pop
lahf
cld
cmpsb
mov
adc
outsl
bound
fwait
data16
out
mov
iret
sub
cmpsl
cmp
mov
add
mov
jns
clc
xchg
mov
pop
and
pusha
call
mov
cmpsl
mov
or
inc
mov
or
cmpsl
mov
mov
lods
push
cmpsl
mov
out
sahf
or
in
add
or
in
daa
testb
pushf
and
cmpsl
mov
cmp
lods
cwtl
push
cmpsl
jns
imul
test
pushf
mov
cmp
and
enter
in
pop
enter
add
or
fdivrs
push
mov
mov
xchg
xchg
mov
lahf
in
nop
out
test
enter
inc
sahf
clc
aam
hlt
daa
in
mov
mov
inc
movsb
and
xor
inc
lahf
pop
pop
cmpb
out
sahf
push
je
xchg
sub
add
inc
pop
movsb
les
adc
jp
fs
movsl
sbb
sbbb
push
cmpsl
jg
inc
sahf
pop
cmpsl
loopne
jl
cwtl
movsl
cmpsb
nop
addr16
cmpsl
insb
pop
enter
adc
rolb
addr16
cmpsl
or
pop
enter
adc
xchg
lcall
push
cmpsl
mov
xchg
jg
insb
push
daa
cmpsb
js
mov
rclb
ja
movsb
mov
enter
and
lods
push
add
daa
cmpsl
or
sbb
xor
xlat
pop
sbbb
jg
lahf
sub
cmpsl
jo
aas
or
pusha
mov
inc
sahf
pop
mov
fdivrs
inc
cs
movsl
push
cmpsl
mov
adc
or
or
ja
or
lahf
rcrb
nop
or
inc
rcrb
loopne
lock
test
push
int3
or
inc
and
add
test
and
or
push
cmp
lahf
pop
sarl
inc
lahf
mov
mov
ficoml
jg
js
aad
andb
out
mov
ja
mov
lock
pop
adc
inc
or
lock
outsb
add
inc
lahf
push
ficoml
ja
js
andb
inc
movsb
mov
push
mov
pop
roll
call
clc
lahf
dec
add
or
ljmp
cmc
push
pop
call
andb
jg
jo
inc
or
jo
cmp
movsb
and
daa
int3
mov
add
push
inc
fsubrl
ljmp
fiadds
cmp
je
lahf
mov
nop
mov
xor
movsb
iret
mov
pop
jb
xor
adc
sahf
in
inc
nop
int
pop
aam
lods
and
je
popf
lods
xor
dec
das
push
mov
and
xchg
or
mov
iret
test
inc
mov
pusha
mov
and
push
jb
ja
inc
and
sub
in
inc
and
jns
ja
mov
test
jl
nop
outsl
push
add
cs
pop
in
inc
rcrb
or
add
push
xor
pop
ja
mov
mov
mov
jns
in
mov
sahf
rcl
imul
nop
mov
and
fidivs
in
lods
sti
popf
dec
movsb
ja
lahf
pusha
fcomps
jo
lahf
push
mov
mov
in
inc
mov
je
divl
add
in
movsl
outsl
aas
data16
test
pushl
jbe
jo
pop
mov
cmp
xor
jo
mov
push
inc
cs
jns
mulb
xchg
mov
push
and
sub
outsl
add
inc
imul
jbe
test
test
xorb
sarb
enter
add
mov
arpl
test
popl
fcmovnu
addr16
daa
mov
repz
mov
push
pushf
push
mov
pop
test
xchg
addr16
mov
mov
xlat
mov
adc
pushl
mov
push
add
js
push
rorl
cs
nop
push
shlb
mov
pop
mov
outsb
insb
push
dec
dec
dec
xchg
pop
sub
movsb
lods
xlat
nop
loopne
pop
xchg
ss
adc
into
rolb
xchg
pop
orb
addr16
pusha
or
addr16
pop
pop
inc
and
out
lahf
out
mov
scas
clc
sub
dec
inc
xchg
sub
mov
sub
sub
fistps
sbb
scas
push
pop
aaa
add
mov
push
or
lock
idivl
mov
les
sbb
cmp
out
pop
mov
mov
into
repz
inc
xchg
repz
out
sahf
mov
mov
aam
mov
cmp
out
mov
loopne
inc
sahf
adc
fsubs
and
or
adc
jl
xchg
inc
mov
jo
inc
add
in
in
sbb
dec
add
iret
mov
cwtl
add
push
and
mov
mov
mov
roll
sub
movsb
ja
test
fidivrl
jbe
jbe
xchg
in
ja
ja
mov
add
inc
push
cmp
xchg
pop
cmp
pusha
inc
inc
mov
cmpl
enter
test
aaa
jl
inc
incl
mov
or
jl
add
in
cmp
cmp
out
test
mov
leave
insb
add
pop
in
and
es
and
shlb
sbb
adc
mov
push
push
pushf
fs
scas
add
pop
inc
add
sub
enter
fbstp
stos
jo
inc
mov
stos
outsl
sub
xchg
out
add
int3
nop
iret
add
cmpsb
pop
add
mov
mov
inc
aaa
mov
testl
pop
push
fcompl
stc
push
lock
lahf
mov
push
jle
mov
emms
add
pusha
shll
out
add
lds
sub
add
fimuls
ja
mov
stc
fildll
fbld
jmp
outsl
and
mov
ret
inc
xlat
aaa
dec
push
fisttpll
jbe
pop
lods
and
scas
xchg
and
outsl
cmp
arpl
stc
sub
daa
add
fdivrs
dec
scas
push
xchg
jl
mov
dec
mov
addl
fsts
add
push
push
pop
and
add
clc
es
imul
fisubs
fs
mov
int3
push
fdiv
fcmovb
jnp
push
xchg
jg
cmp
and
dec
bound
jns
clc
add
xchg
mov
add
sbb
out
or
cmp
sarb
divl
cmp
cmp
or
sub
push
out
dec
xor
rcrl
and
and
mov
mulb
push
mov
insb
bound
cld
loopne
cmpl
jo
cwtl
scas
bound
xorb
daa
ror
fcoml
add
ss
or
dec
push
stos
adc
sbb
xlat
mov
push
ret
xchg
pushf
xchg
push
lds
adcb
pop
ret
add
mov
ret
notl
outsl
and
adc
mov
dec
add
cwtl
inc
push
scas
ret
pusha
fchs
shl
call
xor
jbe
je
adcl
mov
aaa
outsb
fsubl
fnstenv
outsl
push
cmpsb
mov
add
les
scas
and
enter
add
fs
movsb
mov
out
dec
mov
mov
bound
mov
jg
lock
cmpl
lods
fs
out
lds
sub
add
in
dec
sub
fnstsw
push
nop
push
pushf
data16
pusha
out
xchg
outsl
filds
push
stos
aaa
pop
int3
pop
call
pop
xabort
push
sub
in
lock
or
add
mov
push
inc
xchg
push
push
xchg
or
xlat
push
xchg
imul
mov
addr16
jo
pop
inc
lahf
iret
push
mov
and
daa
out
sub
or
adc
push
insb
xchg
push
push
push
push
enter
iret
repz
cmp
enter
cmp
push
mov
or
je
pop
roll
or
aaa
or
push
adc
cltd
movsl
dec
xor
pop
outsl
add
mov
iret
subl
jo
jmp
orb
popl
stos
mov
enter
mov
enter
pop
or
enter
popl
sub
pop
loopne
mov
sahf
andb
mov
dec
inc
rorb
mov
mov
and
adc
lret
xor
cmp
sbb
mov
das
addr16
xchg
mov
daa
ljmp
mov
fbstp
jae
xchg
addr16
mov
loopne
gs
dec
testl
and
lret
add
mov
outsb
mov
popf
mov
lret
inc
push
push
aaa
mov
ja
mov
adcb
mov
mov
mov
sarb
push
es
dec
xor
cmp
andb
test
outsl
inc
push
call
int3
xchg
mov
jl
insb
mov
outsl
shll
xor
push
push
in
pop
ds
shrl
mov
sahf
out
xor
mov
repz
popa
mov
stc
sub
mov
sarl
fimull
jo
dec
jne
out
cmp
notl
jno
jno
lahf
out
mov
cmp
repz
adc
sbb
shrl
lret
jne
ja
cmpsl
int
push
jbe
push
dec
lret
repz
adc
push
repz
inc
fidivrs
out
xchg
ficompl
jns
push
mov
ret
fdivrp
es
imul
notb
jnp
repz
out
or
xchg
out
lcall
mov
sarl
jmp
jle
mov
out
adc
xlat
ds
sarl
pop
cmpsb
lock
mov
jns
out
adcl
cmp
repz
jb
fiaddl
sarl
jle
fiadds
xchg
push
rorb
xchg
sarl
ficoml
mov
iret
sarl
out
sbb
out
sub
out
fidivrs
mov
out
cmp
pop
lea
out
jl
stos
in
mov
nop
dec
repz
dec
mov
or
stc
cmp
jbe
ljmp
cmp
adc
lcall
mov
xchg
loop
cmpsl
fnstcw
add
cmp
cmp
sarl
dec
jae
cmc
jl
cmpsl
stc
imul
sarl
lock
mov
sbb
sahf
out
sahf
cmp
mov
cmp
pop
mov
mov
jns
dec
fwait
sub
out
ds
mov
iret
repz
fcoms
movsl
ss
mov
xor
cmpsl
lcall
and
jns
shll
test
cmpsl
stc
sbb
stos
iret
xor
stc
cwtl
lods
shl
lods
push
xor
out
jb
jmp
scas
popa
jns
iret
repz
clc
xor
xchg
in
mov
scas
aam
ds
adc
mov
sahf
ja
out
test
jl
cmp
repz
daa
mov
movsl
fdivrs
cmpsb
add
out
stc
xor
dec
repz
dec
mov
mov
stc
cmp
push
mov
sahf
cmpsl
stc
cmp
and
iret
sarl
dec
mov
int
imul
sahf
cmpsl
stc
inc
ret
addr16
fld1
cmpsl
leave
mov
scas
add
jl
sti
xor
bswap
outsb
aaa
rolb
inc
aam
fmuls
stc
mov
mov
sbb
fstp
push
mov
data16
jecxz
out
add
insl
push
pusha
outsl
int3
nopl
sub
xchg
or
push
outsb
aas
aam
ds
addr16
xchg
lret
sub
getsec
mov
fmulp
mov
rolb
xchg
ss
aam
pop
pop
xor
mov
inc
xor
mov
rclb
push
dec
aas
imul
sarb
andl
jg
push
fidivrs
add
cmp
push
aas
xchg
push
lahf
jg
loopne
repnz
and
fdivs
pop
jecxz
popf
xchg
push
leave
mov
pop
mov
dec
adc
dec
aad
lahf
fistl
movhps
jecxz
jecxz
mov
jg
in
dec
in
jb
das
repnz
hlt
pop
dec
jno
sub
lret
push
das
add
stos
dec
sub
aas
add
push
mov
and
and
jmp
mov
inc
cmpsl
push
lods
pop
test
sub
add
sbb
jmp
aas
inc
insb
outsb
mov
or
add
jl
mov
adc
add
int3
push
in
aaa
movsb
mov
fisttpll
dec
mov
daa
xorb
dec
dec
push
push
lahf
dec
das
enter
xlat
cmp
dec
inc
inc
add
xlat
pop
filds
push
mov
xlat
push
loopne
add
dec
dec
mov
js
push
pop
aas
out
jns
add
dec
add
fmuls
sbb
les
fidivs
lock
mov
add
xchg
mov
addr16
inc
mov
fldt
popa
or
addr16
test
into
inc
or
add
out
push
lods
fcomps
test
lahf
add
mov
leave
add
movsb
sbb
ja
hlt
ffreep
ror
fsubrl
fnstenv
push
movsb
cmp
pop
sbb
add
xchg
mov
add
pop
filds
cmp
mov
mov
lahf
leave
leave
inc
rcr
aaa
fsub
insl
movsb
rcr
call
sub
pop
in
xchg
adc
jo
ss
pop
leave
add
in
jb
pop
add
fistl
mov
mov
in
mov
mov
out
enter
pop
adc
sbb
les
cmp
imul
or
xchg
adc
pop
pop
pop
or
in
jb
jge
push
mull
pop
movsl
mov
jbe
cwtl
scas
push
sbb
mov
push
mov
xchg
daa
les
pushf
sbb
mov
outsb
cmpsl
ljmp
daa
and
sub
sbb
cmc
pop
aam
in
inc
pusha
sub
aas
adc
add
xorl
fnsave
orb
pop
fimuls
and
mov
and
insb
push
mov
add
xor
pop
pop
cmpsb
in
push
fs
or
pop
jmp
in
pop
fmulp
fidivrs
lcall
mov
shrl
adc
pop
push
dec
xchg
pushf
inc
call
mov
mov
dec
daa
test
mov
ja
jb
dec
fcomip
mov
fsub
and
js
out
add
mov
loopne
push
xor
insb
xlat
bound
movsl
jge
xchg
add
je
pop
leave
dec
add
xchg
lahf
xchg
mov
daa
cmpsl
scas
add
xchg
xchg
xchg
lret
mov
fsubrl
loop
ljmp
arpl
arpl
loope
movsb
mov
sysexit
cmpsl
push
cmp
inc
cmovge
pop
add
test
arpl
xchg
notb
mov
cmp
test
push
lret
and
aad
loopne
jmp
shlb
lret
testb
add
daa
push
faddp
inc
xor
fs
push
inc
xchg
and
add
cmpsl
xchg
adc
dec
add
xlat
add
adc
push
loop
loop
jecxz
scas
leave
sub
adc
mov
push
add
inc
fs
gs
push
or
sbb
and
enter
add
add
mov
push
pop
pop
or
or
push
or
xchg
loop
jb
lcall
or
gs
in
adc
popl
fisttpl
in
in
daa
sti
mov
add
and
add
aaa
ja
dec
inc
push
inc
cmp
xchg
in
inc
adc
push
je
cmp
enter
add
movsb
lods
nop
jg
pushf
lds
push
or
or
pop
mov
adc
in
inc
adc
out
push
addr16
cs
dec
sub
addr16
and
test
sub
xorl
sarb
pop
in
addr16
in
mov
adc
in
out
daa
dec
aaa
add
mov
nop
out
daa
mov
iret
push
and
push
cmp
add
aam
and
push
cmpsl
pop
call
jb
dec
xor
pop
adc
dec
call
mov
inc
into
sahf
mov
lret
sbb
add
les
ljmp
imul
sub
ss
adc
in
and
mov
fs
add
je
imul
cmp
jge
test
cwtl
mov
lods
inc
adc
mov
mov
and
or
xor
shll
mov
cmp
test
push
or
sarb
shll
loopne
push
cmovle
push
addr16
ja
inc
jb
pop
pop
push
dec
mov
pop
data16
movsb
add
mov
mov
test
add
and
mov
fldl
psrad
pushl
fsubl
add
push
insb
cmpsl
jmp
clc
daa
ljmp
cltd
xchg
pop
adc
add
imul
or
in
pop
fs
inc
es
imul
add
add
add
sbb
dec
inc
mov
out
or
out
ror
lock
andb
pop
in
test
sbb
imul
jo
mov
aas
push
inc
outsl
insb
stos
jge
push
pop
push
xlat
push
mov
push
inc
cmpsl
fucomip
sbb
jbe
leave
in
mov
mov
das
filds
fstp
cmpsl
push
aas
leave
dec
neg
insl
out
adc
add
push
add
or
out
or
in
mov
int3
lret
mov
and
nop
outsb
sbb
push
cmp
in
and
leave
lock
leave
and
in
inc
lds
scas
xchg
mov
jb
push
sub
xchg
xor
pop
outsl
pusha
dec
pop
mov
mov
popw
leave
icebp
xor
pshufw
setg
pusha
mov
dec
and
cmp
xchg
shlb
push
and
add
add
icebp
insb
out
xor
jno
inc
dec
cmp
out
jno
push
bound
mov
add
rolb
jmp
aam
les
in
mov
push
scas
jnp
scas
repz
or
repz
cmp
fcoml
or
je
jb
ds
add
push
jg
pop
add
mov
add
xor
xchg
daa
and
or
setb
repz
test
mov
add
lock
pushf
nop
testb
hlt
inc
add
xchg
hlt
push
hlt
sbb
setae
mov
in
dec
xchg
xchg
iret
ficompl
lock
in
xchg
add
pop
adc
and
mov
dec
mov
cmc
jae
xor
push
xchg
or
or
addr16
fisttpl
cmc
js
push
daa
int
je
ffreep
int
pand
movsb
jmp
cmc
das
mov
xor
push
testb
in
or
push
inc
push
mov
xor
lea
jb
push
rcrl
je
outsl
decb
jne
add
divb
adc
das
and
ucomiss
loopne
daa
or
or
outsl
jne
test
cwtd
cmpsb
mov
inc
jb
into
addr16
inc
rcll
dec
dec
and
sbb
pushf
mov
sub
push
pop
bound
pop
in
push
and
xchg
ss
mov
clc
push
mov
mov
repnz
es
mov
sarb
dec
push
ja
in
mov
stos
dec
fcmovb
xorb
mov
arpl
das
push
rolb
in
jbe
mov
ud0
leave
dec
in
or
movsb
js
in
mov
pop
inc
add
sub
ljmp
imul
scas
push
cmpsl
scas
add
mov
xor
ljmp
jg
or
push
add
sbb
and
aaa
inc
bsf
and
pop
jns
arpl
int3
sahf
outsb
or
jns
push
xchg
daa
and
adc
dec
xchg
jns
mov
sti
push
push
jp
movlps
sti
addb
jb
xchg
xor
xchg
cmpsb
dec
add
data16
and
xchg
add
mov
das
test
and
xchg
sbbb
clc
xchg
xchg
xchg
add
fs
das
inc
push
jnp
adc
xlat
pop
jnp
xor
out
jnp
iret
int3
and
jo
jae
clc
inc
into
sahf
pop
xchg
sahf
add
cmpsb
add
and
mov
fstpt
xchg
faddl
sbb
inc
std
inc
std
nop
mov
mov
mov
push
add
dec
std
das
mov
fsubs
clc
daa
add
lods
inc
incb
mov
adc
xor
push
ja
push
addps
in
jl
jl
decb
mov
xchg
cmp
add
stos
mov
mov
iret
or
iret
inc
cmp
mov
xor
pushf
sub
jg
cmp
fs
mov
push
pop
add
xor
insl
add
jne
jge
fimull
das
jge
call
jmp
cld
jl
shl
dec
push
add
out
dec
adc
cmp
enter
add
add
jmp
add
or
dec
push
xchg
add
stos
and
push
lds
pushf
pushf
pushf
int
inc
clc
hlt
daa
cmp
jg,pt
push
scas
jg
in
xchg
and
jg
jg
data16
jg
add
dec
inc
mov
add
daa
fstps
decl
jecxz
and
sbb
add
pop
sbb
xchg
mov
fadds
imul
mov
xchg
jae
jbe
add
iret
mov
mov
sub
lods
pop
jb
mov
xchg
mov
int
andl
xor
pop
mov
push
iret
leave
dec
in
mov
xchg
add
fcmovne
add
pop
cmp
enter
add
add
cmp
out
testb
addb
and
data16
pop
push
or
or
xchg
push
cs
jns
jb
inc
adc
push
push
adc
pop
push
data16
lcall
lcall
sti
and
repnz
addb
dec
fbstp
add
dec
je
jae
repnz
xor
aas
dec
pop
add
sbb
leave
leave
inc
xor
leave
flds
nop
std
je
rorl
push
sub
test
das
xor
cmpsb
ss
cmova
ja
mov
xchg
popf
pop
dec
dec
outsb
mov
pop
movsl
shrd
ret
dec
or
lds
in
fs
int
aad
in
add
sbb
cmovg
add
jno
xlat
mov
daa
lahf
add
aas
push
testl
xchg
pop
fwait
mov
daa
or
push
es
adc
adc
outsl
adc
mov
push
or
xchg
pop
or
xchg
jno
push
scas
pop
mov
fsts
pop
test
add
add
sub
inc
add
push
repnz
xchg
scas
or
daa
daa
out
outsb
daa
daa
pop
jns
pop
lcall
das
clc
das
data16
sarb
pop
pop
jo
dec
xor
daa
mov
adc
in
jecxz
out
stc
and
popf
jbe
add
in
jbe
or
lock
cmp
xchg
push
inc
add
arpl
pushf
mov
jg
lea
popf
pop
in
xchg
and
or
pusha
xlat
pop
or
jo
pop
pop
pop
push
xchg
xchg
xchg
xchg
mov
pop
pop
xchg
push
cmp
enter
or
sbb
or
xorl
ljmp
daa
xchg
xchg
das
jns
mov
lods
dec
push
je
push
test
mov
testb
xor
xchg
push
jb
mov
mov
das
fisubrl
push
add
jmp
enter
add
dec
sahf
imull
adc
cmp
mov
mov
cmp
mov
jl
cmp
out
in
decl
addl
mov
dec
dec
fimull
sub
cmp
inc
inc
aaa
xor
scas
popf
mov
arpl
mov
jb
push
movsb
add
xor
jb
xchg
mov
fucomip
cmpsb
lcall
jb
repz
push
and
mov
das
xchg
push
fisttps
aaa
jb
mov
push
or
add
or
ds
in
mov
mov
out
add
adc
add
data16
hlt
daa
and
add
xchg
emms
push
add
lods
pop
fists
pop
daa
jl
sub
mov
bswap
fistpll
pushf
mov
out
mov
ja
jns
sub
pop
mov
imul
push
push
pop
add
mov
pcmpeqw
or
insl
nop
mov
add
inc
test
mov
in
mov
mov
mov
fldl
cmp
xchg
inc
daa
cmp
mov
mov
mov
adc
cmp
cmp
xchg
dec
into
jne
cltd
das
mov
or
xchg
aam
movsl
cmpsb
jecxz
aaa
adc
lea
lea
adc
xor
inc
xor
ja
add
mov
iret
add
mov
pushf
loopne
cmp
cs
loopne
psubsb
mov
pop
mov
mov
ja
pushf
adc
fwait
sbb
jnp
dec
inc
sahf
addl
xchg
mov
and
jmp
xchg
lret
xlat
filds
adc
lahf
fcmovne
enter
and
sub
das
mov
add
das
in
cmpsl
in
in
ja
cwtl
add
add
cmp
mov
ror
in
lret
psrlq
jmp
dec
adc
insl
push
and
dec
fidivl
nop
push
push
push
aas
push
pop
daa
and
das
pop
or
jno
xchg
xchg
daa
mov
ja
ror
popf
push
mov
adc
sub
fcoms
inc
dec
sahf
int3
pmaxsw
add
fidivl
outsl
push
push
jmp
add
ja
fidivl
jns
nop
xchg
jp
bound
dec
push
jb
xchg
add
adc
add
jnp
add
in
add
add
std
xchg
add
mov
lahf
add
ffree
adc
sub
jmp
add
fnstcw
xor
xchg
add
fisubrl
sbb
aam
adc
mov
cmp
in
mov
sub
sahf
mov
xor
add
mov
outsb
dec
jns
or
dec
pop
add
out
jbe
fisttps
out
push
out
sbb
cmp
out
decl
xchg
pop
add
sbb
pop
pop
xlat
or
xchg
aaa
push
fs
dec
pushf
insl
sbb
jne
pop
mov
push
testl
xor
cmpsb
test
enter
leave
test
add
rcrb
rcrb
das
jno
rolb
jbe
sti
setne
cmp
sbb
leave
dec
movsl
or
xchg
imulb
push
iret
pop
pop
push
popa
pusha
in
enter
jns
sbbl
mov
xchg
or
xchg
pushf
in
mov
dec
dec
data16
xlat
filds
movntq
out
dec
in
lahf
xchg
testl
and
sub
xchg
xchg
add
dec
push
mov
pcmpgtw
mov
inc
mov
imul
fcmovne
inc
xor
jns
jecxz
xchg
ret
cwtl
das
xchg
sub
pop
es
xchg
fldt
ds
inc
iret
or
imul
add
inc
xchg
imul
xchg
js
leave
mov
fcmovnbe
pandn
xchg
femms
adc
and
sub
fwait
int3
dec
xchg
cwtl
addr16
mov
mov
dec
fidivrs
stos
pop
dec
outsl
cwtl
fwait
out
inc
in
mov
inc
sahf
mov
add
mov
leave
test
mov
add
or
xchg
fildl
sbb
dec
dec
inc
mov
add
in
jbe
sub
seto
mov
and
jge
addr16
xlat
add
jbe
mov
adc
clc
pop
add
pop
lock
jb
enter
dec
add
bound
push
mov
insl
add
add
xor
xchg
mov
test
add
mov
mov
add
rdmsr
jb
leave
or
add
add
and
imul
jecxz
jbe
dec
mov
pusha
dec
pop
mov
xchg
ja
dec
inc
mov
mov
and
pop
rcr
or
jmp
hlt
or
pushf
or
in
push
and
adc
jnp
dec
push
adc
insb
adc
ja
adcb
ficompl
and
dec
pop
sbbb
pop
data16
xorl
xchg
push
push
pop
nopl
add
inc
cmovns
cmp
popf
in
daa
mov
divl
popf
jl
dec
inc
mov
test
mov
xchg
fs
xchg
pop
pushf
or
in
mov
mov
push
push
repnz
aas
adc
dec
pmulhuw
jecxz
sbb
sahf
cmp
mov
sqrtps
mov
cmc
cmc
add
fcompl
adc
and
daa
inc
loopne
sbb
rsm
lcall
add
add
pop
lret
lret
pop
lret
sahf
rcrl
leave
sahf
jecxz
js
lahf
push
sub
mov
push
push
xor
cmp
inc
sahf
mov
add
add
mov
and
fisttpll
jl
add
pop
pop
mov
xchg
xchg
xchg
mov
psubusb
add
lcall
pop
and
adc
nop
push
arpl
jae
insl
dec
push
daa
push
pop
xchg
outsl
ja
outsl
pushf
pop
adc
and
pop
mov
xchg
lods
int
pushf
push
mov
and
arpl
jbe
mov
mov
sbb
and
in
and
cmp
or
out
enter
xlat
push
add
and
dec
lahf
add
sub
mov
movsb
add
invd
test
mov
and
inc
testl
xor
inc
int
mov
aas
inc
fs
dec
jb
inc
mov
nop
outsw
cmpsl
sub
mov
rsqrtps
inc
fimuls
pop
push
enter
push
mov
xor
stos
or
and
sbb
push
loope
in
adc
jb
enter
add
or
mov
and
inc
sbb
enter
sbb
gs
in
in
pop
push
adc
adc
adc
in
in
adc
push
or
pop
sub
enter
pop
mov
jg
and
add
mov
inc
push
enter
jl
sub
mov
sub
je
mov
insb
fbld
add
psubq
adc
sub
or
mov
sub
pop
in
mulb
add
add
mov
xchg
xchg
out
dec
fisubl
mov
mov
inc
out
fldl
in
add
cmp
add
add
inc
movsb
fwait
cmp
or
adc
movsl
scas
push
jb
dec
and
jb
pop
jb
mov
xchg
mov
leave
dec
in
lahf
mov
gs
pop
add
ja
cmp
inc
dec
leave
dec
ja
push
pop
pop
xchg
mov
daa
pop
jge
lea
pop
xchg
xchg
mov
xchg
add
jb
enter
lock
cmpsl
cmp
repz
mull
jg
or
adc
add
pop
and
sub
pop
xor
mov
and
cmp
inc
dec
or
push
fcmovne
enter
push
arpl
dec
push
mov
xor
mov
mov
addb
enter
xchg
xlat
add
loop
cmp
clc
xchg
lock
jne
sub
daa
lret
enter
fildll
mov
add
dec
push
add
pop
add
arpl
and
enter
testl
subb
xchg
pop
pushf
cs
mov
mov
daa
pop
mov
mov
add
loope
jmp
icebp
xchg
mov
test
test
mov
cmpsl
push
in
insl
pcmpeqw
jge
das
xor
test
pop
dec
fisubl
cmp
jl
in
push
lcall
fidivl
inc
stos
push
push
cmp
and
jmp
mov
das
xor
insl
shl
inc
out
out
add
adc
mov
stos
mov
idiv
mov
inc
repnz
aaa
add
xor
cwtl
jbe
daa
mov
or
jg
xlat
jecxz
push
dec
mov
paddb
xchg
mov
in
in
in
cmp
inc
add
dec
push
add
sbb
jb
add
add
mov
or
jo
into
jae
xchg
in
sbb
sbb
pusha
mov
push
xor
loope
and
cmp
inc
not
sbb
lods
lods
ja,pt
fcmovne
inc
xor
pop
in
push
jae
jg
scas
push
xchg
leave
enter
pushf
add
movsb
leave
leave
leave
leave
lods
mov
enter
in
or
loop
adc
loope
lahf
xor
xchg
xchg
pop
lods
lods
daa
xor
push
dec
add
in
and
cwtl
insl
iret
jne
pushf
stos
fstpt
xchg
mov
pop
mov
push
enter
rolb
push
add
push
femms
or
in
in
testl
jns
jo
or
or
shll
scas
dec
pop
xor
xor
mov
pop
jle
pushf
xchg
shrb
or
decl
test
scas
test
cltd
popf
das
mov
bsf
adc
jae
pop
fbld
and
add
dec
pop
xor
popf
jg
or
pop
xor
jmp
in
testb
scas
add
dec
fcmovb
arpl
xor
add
test
mov
cmp
xor
dec
scas
pop
scas
jg
pop
leave
dec
ja
ja
mov
ret
paddusb
mov
pop
incl
aaa
add
cmp
inc
mov
xor
cmp
add
xchg
mov
aaa
push
push
mov
lahf
mov
and
pushf
psrld
add
xchg
xchg
xchg
add
enter
or
or
jb
mov
or
xchg
mov
pop
adc
sub
mov
mov
pop
imul
cmp
lsl
mov
or
mov
mov
fimuls
mov
in
fsubrl
mov
pop
cld
addr16
insl
stc
jg
push
dec
push
pushl
pop
loope
fs
jg
xchg
leave
je
unpcklps
sbb
sahf
mov
sbb
push
and
adc
leave
leave
xchg
and
inc
adc
cmp
pop
test
pushf
sbb
inc
lods
mov
bsf
and
mov
and
int3
and
aam
and
outsl
dec
in
paddsb
sub
jb
lret
xchg
sub
sub
int3
mov
adc
sbb
and
dec
sub
pop
mov
mov
cmp
rorb
out
mov
pop
pop
sbb
ljmp
imul
add
cmp
add
orb
add
cmp
dec
jb
xchg
mov
mov
lds
in
mov
lfs
or
sbb
mov
dec
aas
mov
outsl
dec
add
push
in
leave
xchg
add
add
add
insb
add
jbe
and
jbe
mov
xchg
dec
lcall
jb
push
fmuls
loopne
call
inc
lock
adc
jb
adc
sbb
sbb
push
sbb
jb
enter
sbb
and
sbb
and
jb
enter
and
and
sbb
int
fisubrl
in
out
sub
enter
mov
sub
daa
mov
jb
es
and
enter
cmp
inc
and
cmp
push
pop
pop
push
fs
inc
mov
sbb
mov
xchg
push
pushf
adc
mov
adc
movsb
jb
xchg
add
scas
mov
inc
mov
test
mov
inc
mov
push
xor
cmp
enter
add
adc
push
js
and
sbb
or
jb
enter
adc
adc
sbb
into
adc
adc
adc
adc
notb
mov
mov
jb
sbb
sbb
jb
nop
cmovne
fisttpll
mov
jae
das
test
in
jbe
dec
lea
mov
xchg
mov
mov
mov
rcll
sbb
jb
fsts
hlt
adc
adc
cmp
enter
or
and
sbb
or
inc
or
in
xchg
pop
pop
push
push
sbb
cmp
aas
test
jns
add
mov
outsl
int
aad
mov
push
cmp
fs
add
or
or
and
pop
or
paddsw
and
cmp
in
adc
push
pop
pop
jecxz
in
addr16
jns
fldenv
test
push
xchg
lea
xchg
inc
cld
cmp
push
rolb
fiaddl
and
ljmp
fsubrl
adc
sbb
das
sub
cmp
cmp
cmp
dec
inc
mov
divps
imul
jg
jg
mov
mov
cmp
cmp
push
pop
and
in
and
mov
and
mov
repnz
add
ss
sbb
repnz
add
pushf
sbb
cmp
jo
js
or
int3
sahf
mov
cwtl
jb
cltd
mov
test
xchg
iret
add
dec
push
push
inc
out
leave
add
out
sti
add
sbb
jb
mov
push
add
inc
mov
aas
dec
or
fsts
or
movsb
cmp
enter
jae
jnp
sbb
pop
shlb
in
jbe
pop
icebp
sbb
sbb
pop
mov
sbb
xor
pop
dec
push
leave
enter
pop
push
jne
repnz
and
in
in
lods
movzwl
int
cmp
in
jecxz
out
das
stc
xchg
xchg
daa
sbb
add
xor
fistl
aas
add
in
xchg
add
pop
add
add
insl
push
out
mov
push
outsb
mov
pushf
pushf
int3
sahf
cmpsl
or
scas
mov
sahf
pushf
pushf
pushf
iret
xlat
fists
inc
fimuls
out
pop
notl
cmp
cs
rorb
adc
inc
dec
mov
sbb
sbb
adc
das
mov
inc
dec
lcall
je
dec
dec
dec
jle
mov
sahf
dec
shlb
mov
mov
call
scas
repnz
add
jle
std
add
rorl
and
pop
cmp
dec
iret
dec
inc
mov
or
or
jl
pop
xchg
jg
jb
jbe
lahf
test
mov
mov
jb
sbb
push
loope
psubw
inc
mov
into
sbb
sbb
sbb
enter
sbb
pop
mov
leave
sbb
pop
ret
xor
cmp
fld
dec
iret
ret
push
add
adc
jb
enter
sub
sub
sbb
sub
imul
xor
mov
iret
cmp
jb
xor
stos
ss
aaa
and
sbb
cmp
pop
cmp
je
fsts
cmp
cmp
mulb
aas
lods
mov
sbb
repnz
inc
flds
icebp
inc
enter
inc
or
inc
add
jb
and
add
dec
add
dec
inc
sbb
ja
mov
daa
and
in
ss
jne
subb
add
enter
add
xor
fs
or
mov
jmp
push
push
setno
inc
into
pop
sbb
sub
xor
xchg
in
adc
adc
arpl
sbb
and
mov
setp
cmpsl
mov
mov
int3
and
loop
test
fmull
clc
movb
in
pop
stc
out
dec
pop
jns
inc
mov
dec
add
add
jle
inc
dec
into
sahf
xchg
add
lahf
add
add
mov
pop
lret
or
xchg
xchg
daa
loope
in
testl
push
or
jnp
jb
add
inc
adc
cmp
push
push
adc
fsts
jge
sbb
leave
in
leave
enter
test
in
leave
fnstcw
and
aad
mov
cmp
and
and
outsl
add
sub
sub
and
xchg
mov
cmovae
daa
pop
test
xor
cmpl
fistpl
scas
add
xor
leave
add
aas
sahf
mov
in
jmp
repz
sti
sahf
or
cmp
leave
push
enter
push
sub
xor
add
xor
dec
add
setl
repnz
or
and
mov
frndint
ror
xchg
adc
adc
dec
mov
testl
nop
enter
aas
sub
loop
nopl
jb
xor
inc
sbb
sbb
inc
mov
jo
mov
in
xchg
and
and
mov
int3
iret
xlat
out
in
rorl
lret
jg
xchg
add
sub
sbb
jno
adc
in
ja
push
add
push
add
bnd
pop
push
jne
orb
inc
mov
or
leave
enter
or
mov
iret
lret
push
jmp
clc
adc
jnp
repnz
add
push
sbb
xor
adc
cmp
sbb
push
sbb
cmp
pop
push
push
sub
iret
push
xor
xor
iret
int3
iret
or
rorb
mov
into
int3
loope
jmp
mov
push
or
int
jb
enter
push
adc
jbe
and
aaa
adc
fs
leave
inc
dec
adc
push
adc
in
push
jg
jge
sbb
jb
test
lea
xchg
sbb
inc
mov
pop
mov
pop
dec
and
push
and
into
jo
int
jg
cld
into
sbb
repnz
sub
sub
xor
dec
push
or
popa
or
jb
or
lea
cwtl
adc
jns
jb
adc
jb
cmp
das
ficoml
pfpnacc
sbb
jb
in
lock
sbb
mov
pop
iret
or
pop
addr16
xchg
sub
sbb
enter
and
and
cmp
jbe
jl
sub
push
sbb
das
cmc
mov
jb
push
push
pop
mov
push
xor
insb
xlat
shlb
out
repnz
into
inc
mov
das
sarb
mov
das
shrb
pop
sti
push
push
imul
xchg
addl
syscall
mov
pop
and
push
mov
fidivrs
mov
cmp
das
in
roll
adc
inc
sahf
mov
adc
xchg
and
jb
fs
sbb
int3
sbb
xlat
sbb
loop
pop
aas
shl
fs
shlb
pop
pop
push
and
and
sbb
xor
mov
xchg
sub
fimuls
mov
das
sub
dec
inc
mov
pop
int3
xor
daa
and
xlat
aas
xlat
xor
loop
xchg
mov
psrlq
pop
jb
xchg
cmp
push
or
xor
pop
imul
mov
inc
push
je
add
psrlq
enter
push
jns
add
pushf
das
cmpsl
push
lss
and
aad
loopne
or
fs
not
add
push
sbb
pop
xor
jb
adc
cmp
cmovne
in
in
jbe
das
pop
punpckhbw
pop
jae
xchg
fucomi
fs
setbe
mov
scas
mov
mul
in
fisubl
in
aad
aas
and
bnd
jb
and
sub
sub
jbe
sub
inc
sahf
int3
das
in
cs
das
push
enter
adc
pop
sbb
xor
outsl
xorl
outsb
clflush
inc
fcomps
xchg
imul
into
inc
push
cmp
mov
add
enter
add
add
fs
fwait
movsl
pop
or
pop
fsubrs
movzwl
setg
movsb
loopne
xlat
dec
mov
testl
out
out
dec
clc
mov
in
pop
or
pop
enter
cmp
ja
push
dec
jmp
mov
ja
push
or
cmpsl
in
lahf
add
jo
xor
daa
xorb
pop
cwtl
add
nop
and
stos
add
mov
pop
xchg
shl
clts
xorb
orl
jg
aas
inc
push
and
pop
add
sub
mov
adc
into
sub
aaa
inc
fcmovnb
add
aaa
xlat
cmpsb
mov
xor
shrl
sbb
repz
or
or
dec
jbe,pn
or
ss
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
dec
sahf
out
push
and
jb
fsubrl
fcompl
orl
cmp
pushf
test
xchg
sub
mov
imul
xlat
sbb
data16
and
mov
mov
mov
add
fsubrs
add
adc
mov
rorl
mov
adc
pop
test
jbe
adc
sbb
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
jo
fs
ljmp
cmovo
leave
add
mov
iret
mov
in
sbb
in
call
adc
dec
leave
pop
cld
push
ficompl
push
pop
fisubrl
xor
fcomp
fisubs
fneni(8087
stc
jb
jle
iret
repz
out
jl
js
jo
iret
repz
push
cmp
repz
inc
xor
and
repz
sbb
adc
or
repz
repz
push
clc
hlt
fpatan
cmp
lock
sahf
out
fdivp
les
mov
jns
out
mov
fdivr
push
or
push
dec
push
inc
cmp
repz
xor
and
iret
repz
push
in
fadd
mov
iret
repz
cwtl
nop
mov
js
pop
push
jns
push
dec
inc
xor
sahf
out
jns
icebp
clc
push
in
fmul
xchg
lods
out
mov
jge
ss
mov
inc
mov
rorb
icebp
dec
push
xor
xchg
pop
adc
sub
cmpsl
mov
mov
test
pop
divb
cmp
mov
add
aas
sbb
add
push
daa
inc
test
orb
clc
mov
jae
xorb
addr16
outsl
lock
call
push
mov
mov
jg
mov
push
adc
aas
adc
xchg
rolb
add
mov
add
dec
lock
mov
and
sbb
cmp
add
xor
mov
add
pop
data16
sub
outsl
push
test
add
xchg
out
push
and
cs
dec
sub
push
enter
sbb
add
in
loopne
mov
out
add
add
rolb
out
xchg
es
into
and
testb
jb
xchg
and
add
and
sti
xorl
cmc
clc
or
popf
popf
sbb
add
mov
pushf
lfs
mov
int3
or
fsts
and
mov
stc
jb
enter
push
add
pop
clc
and
inc
mov
and
and
and
xchg
fsubrs
add
dec
cmp
shr
pop
fldl
movups
xor
dec
sbb
xchg
cld
or
loopne
xchg
incl
sbb
fiadds
repz
pop
cmp
pop
js
jmp
aam
mov
mov
call
out
fidivrs
push
pop
ja
mov
js
xor
jae
das
push
dec
insb
inc
or
sub
dec
push
repnz
mov
enter
cli
or
or
ret
nop
cmpl
adcb
sbb
pop
stc
and
leave
sbb
into
sbb
rorl
and
sahf
mov
pushl
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
jg
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
cmp
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
incl
cld
decl
pop
mov
xchg
clc
repz
dec
leave
cltd
sub
cmp
std
addr16
add
int3
add
aas
jno
or
mov
fisttps
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
call
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
push
inc
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
jmp
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
ljmp
cmp
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
clc
incl
gs
std
orl
pop
ficomps
frstor
sbb
out
or
and
adcb
mov
sub
jl
pop
inc
inc
je
inc
inc
push
dec
push
out
inc
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
pop
jg
sbb
out
xor
bound
pop
push
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
imul
pop
shrl
insl
outsl
lock
test
imul
dec
push
insb
xor
popa
cmp
dec
xor
adcl
push
inc
dec
push
mov
and
mov
jo
jb
push
or
inc
test
lock
dec
inc
gs
gs
daa
les
addb
arpl
inc
or
insb
mov
sbb
sub
dec
outsl
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
ret
dec
xchg
push
and
mov
rorb
insb
pop
das
push
fs
sub
inc
imul
pusha
dec
imul
sbb
daa
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
cli
inc
push
or
in
inc
ds
je
sbb
out
dec
push
dec
dec
lods
std
push
add
dec
bound
jbe
lods
cmpsb
pop
sbb
xchg
sub
cmpsb
push
mov
or
inc
cmpsb
dec
adc
sbb
iret
imul
adc
outsb
arpl
outsl
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jns
or
mov
pop
mov
push
mov
ja
inc
xchg
push
push
in
sbb
fsts
subl
sub
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
cmp
push
insl
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
test
in
xchg
add
and
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
xchg
lcall
mov
push
dec
scas
aam
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
movsb
jg
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
pop
push
orl
cmovbe
push
dec
daa
dec
dec
sub
or
jbe
fcoms
jae
popf
push
inc
in
arpl
dec
outsl
sbb
insl
imul
xchg
clc
pop
push
jne
les
outsl
rolb
loopne
push
pop
sbb
dec
outsl
or
aad
iret
insl
mov
popa
inc
iret
pop
les
andb
fdivrl
inc
das
xlat
pop
fadds
dec
jg
xchg
ss
repz
sub
xchg
lock
out
aam
test
js
insb
sahf
out
inc
or
hlt
cwtl
sbb
push
sbb
push
push
add
pusha
ds
gs
js
and
aas
adc
ja
popa
push
out
mov
les
hlt
push
xor
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
ljmp
mov
sbb
dec
jno
repz
test
ficompl
jmp
lock
pushl
roll
shrb
std
in
leave
mov
add
lcall
arpl
psubd
or
outsb
cmp
imul
addr16
add
incl
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
pushl
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
push
jmp
les
iret
shld
sub
mov
mov
xchg
adc
stos
sbb
data16
inc
fdivl
incl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
push
lcall
xchg
sbb
push
cmpsb
ljmp
insb
fs
add
hlt
push
imul
insb
sbb
xor
call
clc
insb
jnp
add
shl
adcb
cmc
fnstenv
cld
call
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
jg
pushl
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
decl
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
jmp
cmpl
or
mov
lcall
ljmp
fildl
push
fdivl
call
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
incl
lock
add
inc
push
imul
xorb
sbb
push
imul
decl
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
call
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
pushl
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
jmp
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
ljmp
ret
es
pushf
mov
insl
add
ss
jmp
addr16
mov
pop
orb
adc
mov
jnp
sbb
xchg
or
call
in
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
fcomip
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
hlt
mov
clc
sar
imul
push
js
or
ljmp
push
sahf
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jmp
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
test
or
push
xchg
mov
mov
mov
test
push
xchg
outsl
inc
jne
pop
jp
sar
push
imul
insb
imul
add
lcall
jbe
push
jns
arpl
arpl
ja
rorb
push
inc
insl
jns
insb
das
adcb
jne
outsl
insl
addr16
add
inc
xchg
fistl
nop
inc
mov
pop
shll
jp
mov
push
cmp
add
jge
cmp
dec
inc
js
popa
xor
mov
jbe
or
inc
add
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
mov
push
dec
inc
ret
testb
add
shr
insb
add
jne
cmp
mov
sub
mov
mov
cltd
push
ss
jbe
arpl
or
test
aas
xchg
sbb
lret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
xor
dec
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
and
lods
xchg
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
inc
aaa
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
sub
sti
mov
dec
jge
insl
imulb
adc
arpl
sub
xor
addr16
push
xchg
into
pop
jo
or
jge
inc
cmp
sub
sub
aaa
dec
sbb
cmc
cltd
dec
out
imul
add
adcb
subb
lcall
push
movsb
jo
push
mov
ss
xlat
test
mov
mov
sub
mov
inc
and
xor
adc
jo
lock
push
lahf
aas
push
outsl
outsl
push
sub
pusha
test
fcoms
inc
test
and
mov
pop
shl
inc
in
nop
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
movsl
sub
mov
jns
jne
xor
das
inc
and
test
sahf
mov
sbb
mov
push
clc
insb
bswap
dec
add
or
bound
pop
dec
popl
imul
xor
popf
xor
ljmp
sub
fstpt
add
sbb
pop
cmp
add
addl
push
jo
divb
pop
and
mov
aad
xchg
fisubl
sahf
aas
shll
pop
push
push
outsl
aaa
push
aaa
mov
sbb
loop
aaa
push
dec
pushf
and
add
rolb
inc
lds
pop
inc
and
mov
add
push
push
add
sub
add
test
addb
adc
jecxz
add
icebp
nop
inc
xchg
ja
and
cmp
repz
pop
mov
int
mov
pop
add
sahf
and
popa
insl
pop
add
je
iret
add
and
jne
and
and
fistpll
or
dec
shrd
popa
incl
pop
decb
push
lea
in
bswap
mov
test
jmp
jmp
repnz
in
push
pusha
ljmp
pop
fxch
ss
cli
push
cld
push
imul
lahf
addr16
inc
es
inc
nop
jg
add
dec
ja
mov
pop
and
add
sbb
insb
daa
aam
cmp
jmp
adc
adc
add
jge
arpl
add
mov
cmp
sbb
add
js
xor
xor
push
test
stos
and
sahf
mov
mov
add
js
push
loop
pop
test
icebp
push
pusha
push
add
push
enter
add
cs
add
les
lods
add
or
enter
xor
and
dec
lret
out
dec
xor
cs
mov
in
dec
or
rcrb
jo
push
xlat
out
add
xorb
gs
sbb
repz
push
inc
jl
les
cmp
popa
loop
sbb
sub
adc
sub
jmp
add
je
sbb
mov
mov
xor
and
inc
and
or
or
jne
orb
sub
pop
or
mov
xlat
cmpsb
icebp
mov
xchg
js
test
movsl
mov
inc
mov
lcall
push
mov
int3
fucomi
gs
add
jecxz
pop
mov
mov
or
jmp
sbb
pop
mov
call
popa
jecxz
rclb
rolb
je
dec
cmp
scas
mov
jnp
outsb
gs
movsb
pop
hlt
mov
dec
sub
or
mov
out
mov
hlt
jl
les
test
mov
push
push
pop
ret
inc
dec
pop
push
clc
mov
pop
sbb
add
cmp
xchg
mov
cmc
push
mov
aad
rcll
sbb
mov
call
nop
jp
sbb
inc
sbb
rolb
leave
dec
xchg
jbe
mov
mov
shrb
cmp
jbe
mov
mov
pop
adc
cmc
outsb
mov
push
sub
pop
stc
cmp
mov
dec
xchg
add
add
push
dec
inc
sub
pusha
loope
mov
push
sbb
je
out
mov
inc
call
push
orb
and
test
jbe
sbbb
push
add
outsb
pop
xchg
lock
dec
mov
clc
pushf
and
jbe
add
aam
es
jbe
jne
push
inc
imul
add
adc
imul
or
push
fwait
dec
arpl
addb
pop
outsb
lret
in
inc
add
in
dec
dec
and
insb
lret
mov
jne
push
push
rclb
adc
fsubl
rcr
loopne
adc
addb
add
movsl
fiadds
mov
shll
imulb
fs
imul
pop
enter
add
fwait
push
or
stc
dec
jnp
in
push
leave
push
sbb
pop
mov
into
int3
pop
pop
add
xchg
ficomps
push
push
mov
pop
jae
xchg
inc
cmpsl
das
push
test
je
sahf
or
inc
fidivrl
dec
pop
push
ret
test
jno
ret
rorb
ret
sbb
add
lods
and
add
mov
mov
inc
or
jo
gs
popf
imul
lret
add
mov
es
decb
aam
pop
inc
test
movb
or
fidivrs
dec
adc
add
push
mov
idivb
aam
lea
push
out
or
lds
mov
loope
dec
add
pop
adcl
push
push
andb
rcrl
mov
fsubs
adc
sarl
push
or
rclb
sub
pop
dec
dec
mov
push
cmp
cltd
mov
jno
repnz
mulb
insl
jmp
movsl
xor
add
xor
inc
pop
jne
jge
in
push
insb
mov
or
aas
lret
lret
adc
xchg
popf
jl
pop
inc
push
dec
and
jmp
loopne
ljmp
adc
insl
lock
bound
dec
call
push
push
add
xcrypt-ofb
cmpsl
insb
fdiv
sub
or
lahf
push
or
mov
sub
xor
sbb
sbb
enter
xor
add
loopne
lods
daa
add
jl
fmull
sbb
lcall
or
stc
call
xchg
push
pop
inc
fwait
jp
imul
mov
jp
push
or
mov
or
out
cmp
push
gs
mov
addr16
xchg
sbb
test
ja
in
adc
add
addl
js
cmp
int
sbbl
lret
xchg
pop
jl
or
std
imul
push
cmc
je
mov
and
add
in
add
dec
or
dec
pop
xchg
xchg
fsubs
and
or
and
pop
xchg
lret
test
xchg
rcll
gs
adc
push
or
push
sbb
inc
cmp
mov
cmc
loope
inc
bnd
dec
in
push
call
call
push
fldcw
jne
xchg
lea
sbb
lds
ljmp
mov
nop
adc
ss
xchg
cmpsl
sbb
jmp
fs
sahf
ss
push
sub
ret
push
mov
pop
pop
adc
sbb
sub
push
test
shrb
sbb
ds
ss
ja
pop
mov
xchg
out
andb
xchg
out
icebp
mov
sbb
push
inc
into
xor
in
dec
push
inc
dec
rorl
or
or
sub
in
mov
rcr
push
fs
sbb
sbb
mov
and
mov
cmp
fsubr
shl
or
je
popa
xchg
hlt
ficoml
pusha
jp
cmpsb
rolb
xor
loop
push
repz
sbb
adc
xchg
aad
pop
idivl
fs
add
ret
sub
or
pop
iret
mov
mov
push
ret
aam
shl
inc
movzbl
xchg
aad
cltd
idivl
out
mov
add
enter
pop
ret
aas
jbe
xchg
mov
rorb
mov
sbb
and
push
pop
lahf
movb
gs
test
push
mov
ljmp
bound
sub
adcb
cmpsb
cmc
push
hlt
push
and
xor
push
jns
or
into
add
loop
jo
add
and
pop
adc
cmp
ss
lret
xor
ds
push
mov
in
push
and
dec
test
and
jne
add
sbb
sbb
push
sbb
add
lock
sbb
sbb
loop
or
push
sarb
xchg
dec
cmp
cltd
dec
adcb
push
push
dec
fdiv
xchg
mov
xchg
add
loopne
sbb
pop
pop
pusha
push
mov
call
into
add
je
push
and
cs
sub
pop
sbb
jmp
pop
out
out
andb
push
sbb
pop
stc
and
jmp
adcb
fcompl
jb
call
adc
jmp
push
pop
test
xchg
xlat
rolb
cltd
bound
xchg
xchg
test
mov
es
inc
lea
adc
pop
mov
cmp
add
or
xchg
sub
movsl
insl
sub
lock
mov
lcall
fildl
imul
push
faddl
imul
push
push
loop
adc
mov
fyl2xp1
hlt
fdivrp
xor
sub
loop
xor
pop
loop
push
sbb
add
es
cmpb
icebp
decb
mov
xchg
psubsw
push
xor
xchg
enter
or
stc
mov
inc
call
lahf
sbb
mov
int3
or
imul
push
add
mov
dec
and
or
push
xor
ret
adc
pop
mov
pop
adcb
lds
xchg
out
mov
enter
sbb
or
mov
rep
out
dec
mov
adc
rep
push
mov
out
push
mov
xor
mov
stos
movsb
leave
shll
jle
rcll
aas
mov
flds
adc
xchg
incb
or
movsb
movsb
ficomps
cmpsl
scas
push
fcoms
mov
mov
lahf
loope
cmp
inc
shlb
or
xchg
mov
inc
mov
push
cmpb
enter
outsl
push
jb
adc
dec
je
ljmp
pop
ljmp
ret
push
stos
je
popa
pop
or
and
add
and
sbb
adc
fcomi
and
sub
sahf
pop
jns
mov
or
push
and
and
leave
daa
push
xor
or
jae
xlat
in
jb
adc
xchg
pushf
mov
ss
imul
and
into
rcl
cmp
push
mov
lret
xor
mov
sbb
cmp
insl
jb
mov
and
aas
js
sub
xchg
and
mov
ficoms
in
xor
push
adc
push
push
or
insb
or
and
jno
mov
scas
dec
adc
push
pop
adc
cwtl
push
cs
sbb
cmp
shrl
push
jae
and
outsl
xchg
dec
dec
cmp
jle
jmp
pop
or
dec
jmp
and
push
sub
dec
in
in
lcall
and
add
lret
pop
or
jmp
sbb
inc
inc
ficomps
imul
or
stc
divl
scas
loope,pt
and
dec
in
or
xchg
bswap
push
xchg
in
enter
xor
pop
jno
push
mov
imul
hlt
call
cmp
adc
and
imul
sub
mov
inc
pushf
popf
adc
or
push
gs
in
mov
ss
pop
mov
inc
sbbb
dec
xor
scas
or
cltd
je
test
out
inc
mov
mov
mov
cmp
mov
push
xor
shl
aam
push
sbb
lret
fsub
push
shlb
mov
jle
mov
lcall
mov
add
bound
sbb
xor
push
cmpsl
adc
and
fists
sub
dec
test
out
adc
mov
mov
gs
sbb
jne
out
inc
xor
cmp
mov
movb
push
jbe
mov
jo
xor
inc
pop
push
ds
jb
cmp
rolb
scas
call
xor
xor
shl
call
xor
fcomp
inc
test
inc
enter
ljmp
mov
or
les
mov
test
aad
enter
mov
push
mov
mov
loop
lea
ret
sbb
adc
jg
lea
jb
sbb
add
pop
lret
dec
sub
pusha
ftst
and
aas
in
rorb
push
jo
or
call
cmp
andb
sub
push
cmp
mov
lods
shrb
adc
movl
pop
in
dec
adcb
sub
in
jne
and
imul
mov
add
aad
xor
icebp
or
pusha
ljmp
push
add
add
out
enter
cmp
and
and
adc
jno
dec
mov
mov
inc
addr16
jbe
clc
es
sbbb
cmp
mov
ss
inc
and
dec
in
int3
pop
lret
xchg
popa
inc
dec
pop
lahf
loopne
add
add
add
or
je
xor
fldl
leave
ret
sub
cmp
adc
or
loopne
add
outsb
and
sub
xor
enter
jmp
xchg
xor
bound
jmp
mov
fs
stos
popa
imul
cmp
jle
dec
mov
or
push
cld
lcall
inc
popf
sbbl
pop
cltd
insb
cld
adc
cmp
inc
dec
test
lods
push
mov
clc
push
mov
add
rorb
mov
lods
jbe
and
xor
lods
scas
and
ja
push
popa
imul
dec
test
inc
test
leave
mov
cmp
push
push
loopne
ja
cli
test
lea
and
dec
fwait
jne
inc
shrb
hlt
repnz
push
pusha
push
rcll
dec
ss
xor
mov
or
or
shr
pushl
adc
bound
jnp
mov
ss
stos
std
std
jb
xlat
or
push
xor
mov
rorl
cmp
lock
push
xor
xchg
mov
jo
inc
sbb
jnp
enter
mov
dec
xor
sub
testb
and
xchg
pop
adc
dec
mov
adc
pop
push
mov
adc
std
add
adc
leave
adc
push
push
ds
dec
jl
add
shlb
dec
xor
xchg
push
and
pop
fnsave
cmp
bound
mov
mov
iret
add
cmp
mov
and
jne
inc
jb
jp
or
sbb
enter
out
xchg
mov
inc
fcoms
sub
subl
push
pop
mov
jmp
mov
add
adc
sub
pop
mov
jmp
lahf
mov
inc
les
xor
shlb
fstpt
jae
subl
or
sbb
jae
and
inc
push
push
jge
cwtl
out
stos
daa
jl
adc
hlt
pop
mov
adc
pop
cmp
add
out
push
ret
mov
scas
mov
jp
push
pop
xor
lock
addr16
cwtl
inc
jecxz
push
mov
mov
mov
push
call
pop
cmc
loope
cltd
cltd
sub
inc
cwtl
mov
cmc
lea
dec
xlat
mov
decb
sbb
sbb
xchg
sarb
push
sbb
push
mov
shr
or
enter
outsl
jne
fbld
or
xor
sbb
fadds
and
xor
add
addb
in
mov
or
or
xor
insl
pop
xor
or
sarb
sbb
sbb
incb
pusha
pop
add
scas
fs
loopne
or
sbb
fwait
cli
les
sub
mov
cmp
and
or
jp
cmp
xor
in
test
dec
adc
xchg
pusha
sbb
sbb
xchg
or
jl
pop
leave
push
or
sbb
jg
in
adc
jne
mov
jmp
or
pop
shll
clc
or
push
or
andl
dec
sub
dec
jge
xchg
or
xor
dec
or
mov
sub
push
jo
sbb
push
adcl
out
and
loop
addb
add
call
mov
pop
loope
test
ljmp
add
pop
jo
cmpsb
and
mov
dec
icebp
push
push
mov
test
loopne
cmp
add
hlt
mov
mov
adc
mov
mov
test
hlt
push
push
mov
arpl
or
das
insb
add
inc
xchg
stos
jg
mov
push
fucomip
cmp
je
cmp
jbe
movsb
xchg
sub
insb
mov
subb
clc
push
and
mov
pop
jbe
sbb
sbb
or
daa
loopne
loope
inc
push
in
std
insb
arpl
add
lock
or
pushf
cli
adc
mov
movsb
and
xor
pushf
loop
fmull
test
inc
jmp
sbb
scas
into
or
xor
fwait
add
movsb
adc
xchg
test
xor
mov
data16
mov
and
mov
push
push
inc
mov
imulb
enter
jmp
push
push
mov
popf
in
fsubr
jo
cmpsb
clc
icebp
mov
sbb
lock
cltd
adc
pop
mov
sub
sbb
lods
stos
lods
dec
jecxz
jnp
adc
movsl
rolb
loopne
into
gs
adc
push
and
and
push
rorl
dec
jle
test
rcll
dec
movsl
jp
loop
cmpsl
roll
loop
pop
jl
pop
push
lea
mov
movsl
sbbl
ljmp
xchg
aam
xor
mull
push
sub
push
push
cmpsb
aam
aaa
aad
push
in
mov
clc
jecxz
pop
popa
fsubrl
call
test
je
lods
mov
faddl
push
adc
mov
js
test
xchg
dec
je
jae
js
push
push
pop
adc
insb
cmp
in
add
or
int
or
push
lret
add
sub
pop
mov
push
and
or
and
fistl
jb
popa
psadbw
mov
jmp
lods
int3
rcrb
dec
dec
stos
push
ja
dec
mov
xchg
les
call
pop
fdivrp
jne
mov
hlt
push
in
shlb
add
mov
sbb
adc
jne
clc
and
push
add
cmpb
push
sbb
adc
jl
mov
pop
add
jmp
adc
and
or
adc
fsts
push
sub
xchg
mov
push
or
or
add
rcrb
or
call
lods
mov
call
movsb
call
lea
test
sbb
mov
or
add
or
pop
addr16
shll
pop
sbb
sbb
ret
cmp
cld
jne
into
cmp
mov
addr16
ss
cmp
push
in
dec
js
es
pop
test
and
iret
leave
je
int3
jecxz
decb
or
jns
outsl
cmp
mov
xorl
jmp
nop
xor
and
jl
push
sahf
jae
enter
sarl
jno
cmp
icebp
call
out
test
mov
je
subl
inc
jmp
mov
setb
push
fildll
xchg
arpl
jmp
repnz
sbb
call
push
xchg
pop
enter
jl
xor
negb
divl
push
dec
xor
sbb
call
xlat
jmp
jne
push
sub
imul
je
mov
movl
shlb
jo
adc
add
or
inc
fcompl
sti
xlat
jnp
out
xchg
jne
add
push
call
cmp
fisubs
in
movsb
jmp
js
lret
dec
in
sbb
test
mov
stos
jae
mov
dec
push
call
pusha
cmpsb
sub
call
int3
lock
adc
mov
push
mov
and
or
sub
bound
call
mov
shl
push
inc
and
xlat
out
push
jo
push
sbb
movsb
insb
sbb
jo
or
mov
cwtl
or
popf
fadds
mov
cld
test
outsl
jl
test
stos
sbb
mov
push
fs
cmp
and
mov
jg
add
andl
cmp
pop
mov
push
dec
lea
shrb
pop
mov
orb
insl
xchg
popf
jbe
test
aas
mov
call
mov
or
mov
xchg
fcoms
mov
cmp
fadds
dec
jne
or
mov
add
je
jno
adc
movsb
nop
lcall
test
je
lods
ret
stos
and
adc
incl
nop
sbb
sub
xchg
shr
mov
or
je
mov
push
cli
sub
or
xor
or
lcall
ja
stos
mov
lea
dec
fs
jmp
and
cmp
inc
inc
xor
pop
jo
ss
fnstenv
add
xor
aam
mov
mov
loopne
movsb
aam
mov
and
sti
jnp
sub
pop
sbb
dec
push
inc
push
push
add
loope
popa
es
mov
sarb
das
dec
aam
fisttpll
rclb
dec
imul
je
push
jecxz
sub
cmp
jge
dec
mov
push
sub
je
sbb
dec
sub
xchg
xchg
aas
enter
or
sub
fcmovb
sbb
xor
arpl
mov
xor
xchg
adc
pop
pop
or
inc
mov
push
fcmovb
inc
sbb
mov
sub
mov
xchg
push
out
insl
ret
push
adc
sbb
adcb
mov
mov
popa
sbb
xchg
adc
jnp
sbb
adc
arpl
add
lds
push
pop
sbb
sbb
and
sbb
adc
xor
sbb
mov
daa
and
mov
dec
sbb
jmp
rcrb
mov
and
loop
nop
cmpsb
nop
dec
mov
sbb
push
pusha
xchg
cli
or
cli
mov
and
jp
jle
mov
mulb
mov
xor
sbb
adc
cmp
dec
fnstenv
aam
inc
adc
cmp
jl
std
iret
call
and
pop
dec
adc
int3
insl
inc
or
pop
xchg
hlt
jmpw
movsb
dec
pop
leave
adc
fstpl
das
jle
decl
fwait
mov
mov
pop
popf
les
call
clc
pop
ficompl
pop
jmp
inc
jb
sbb
xchg
or
aaa
je
cmp
jmp
addb
sbb
ret
push
xchg
pop
faddl
repnz
lcall
push
into
cmp
xor
jno
dec
dec
jmp
sub
inc
mov
sarb
sarb
sbb
subl
ljmp
push
or
push
cmp
sbb
or
adc
cmc
sbb
or
dec
test
dec
in
mov
and
ja
push
cmp
and
inc
fiadds
shlb
sub
aad
pop
push
xchg
push
push
es
cmpsb
out
xchg
add
movsl
push
and
cld
aad
es
into
push
shll
shlb
in
sbb
push
push
push
es
inc
lods
lret
push
mov
loop
pop
vmread
dec
push
mov
or
in
ficomps
arpl
push
xor
adc
xchg
in
mov
sbb
sub
pusha
aam
int3
xor
jbe
push
mull
xor
xchg
cs
rorl
imul
mov
insl
mov
pusha
push
adc
in
shll
add
js
outsl
pop
aaa
loop
push
movsb
leave
cmp
adc
xchg
add
mov
in
add
push
mov
push
push
xchg
and
pop
rcl
adc
loope
inc
and
call
push
inc
inc
addr16
enter
aaa
and
les
pop
and
inc
andl
addr16
inc
sbb
sub
ja
data16
inc
xor
sub
enter
addr16
jnp
mov
lods
lret
call
dec
out
sbb
nop
push
dec
shlb
andl
jp
inc
push
inc
dec
sahf
int
or
cmp
pusha
nop
mov
in
nop
je
mov
pusha
mov
sbb
dec
mov
xchg
sahf
out
fidivs
sub
sbb
or
rcl
jns
inc
scas
roll
push
je
push
rcl
xlat
test
adc
je
inc
pushf
adc
jnp
mov
lock
daa
pop
nop
add
and
mov
inc
addb
mov
jns
mov
test
mov
sarb
out
enter
add
rolb
mov
or
push
adc
mov
pusha
mov
sub
pop
aaa
or
incl
lahf
movsl
pusha
and
xchg
add
or
sub
mov
mov
insb
or
cltd
adc
dec
add
std
dec
pushf
push
pop
jmp
cmp
je
std
push
scas
repz
lahf
ret
in
test
test
inc
xor
enter
push
pop
add
jae
and
and
std
cmovb
jo,pt
cmp
je
xchg
add
sbb
cmp
xchg
sbb
pop
test
push
push
pop
and
enter
inc
dec
fisubs
xchg
or
outsl
in
or
cld
add
fisttpll
jb
inc
lock
mov
cmpsb
or
or
or
xchg
adcl
inc
scas
in
push
push
push
bswap
in
jns
xor
adc
push
jnp
pop
adc
or
sahf
lret
stos
cmp
adc
in
in
int
push
adc
lret
add
adc
inc
scas
in
adc
adc
in
fs
push
or
sbb
mov
sbb
xchg
sbb
cmp
mov
xor
fcompl
sbb
sbb
sbb
add
je
push
sbb
iret
sub
inc
jo
xor
sbb
pop
push
push
aas
inc
sahf
aaa
inc
negb
pop
jne
add
lods
lea
cmc
add
sub
mov
add
movl
xchg
or
lahf
pop
jmp
cwtl
xchg
mov
in
push
in
imul
rcl
jns
movsl
test
xor
sub
sub
sahf
mov
inc
outsb
fiaddl
jne
adcb
or
pop
movhps
jmp
ljmp
add
add
or
mov
lcall
sbb
in
mov
push
inc
scas
in
xchg
out
or
dec
jae
inc
je
lock
scas
ss
dec
icebp
cmp
sub
and
jnp
or
adc
repz
std
cmp
hlt
imul
lret
stos
xchg
std
cmc
cmc
cmp
cmpsl
div
mov
add
mull
push
shll
clc
clc
clc
or
and
stc
and
jb
iret
cli
cli
add
aaa
xchg
pop
enter
cld
cld
je
fisubrs
and
push
push
nop
shlb
mov
in
push
repnz
sbb
aaa
lret
inc
mov
and
jmp
call
sub
jb
dec
popa
adc
into
cwtl
std
jb
pop
or
shr
jmp
adc
jecxz
ja
adc
cmp
scas
jbe
mov
popa
pop
push
mov
movsb
sub
out
xchg
pop
push
and
call
or
sti
adc
imul
jmp
aad
aad
jmp
daa
in
cltd
leave
and
or
jmp
pusha
or
pop
insl
nop
out
out
xchg
mov
push
cltd
cmp
or
stos
or
sbb
and
push
cli
stc
daa
mov
imul
mov
das
test
scas
xchg
clc
cltd
jb
or
push
and
stc
sbb
xor
sti
sti
sti
and
or
cmp
pop
in
push
jmp
mov
mov
inc
push
adc
ljmp
push
jne
mov
loop
pop
insl
nop
loop
shll
cmp
pop
push
loope
clc
and
xchg
dec
add
or
out
out
fdiv
and
jne
loope
negl
or
movsb
test
push
xchg
pop
push
and
loope
testl
testl
xchg
das
test
adc
mul
scas
testb
and
testb
repnz
inc
repz
leave
and
testb
xchg
cmpsb
jb
mov
imulb
xchg
mov
int3
scas
mov
pop
or
and
jmp
xor
cmc
cli
cli
xchg
pop
push
sub
sbb
or
or
xlat
inc
ljmp
add
add
push
cmp
sti
mov
mov
loope
jp
mov
pop
hlt
dec
xor
cmp
mov
hlt
loopne
rclb
pop
jns
mov
repz
repz
and
test
jmp
mov
adc
rorb
cs
or
in
jne
cmp
in
repnz
rorb
cmpsl
repnz
test
cmp
icebp
icebp
mov
xchg
pop
adc
and
ds
repnz
adc
and
test
mov
nop
or
cmp
pop
repnz
icebp
or
jae
stc
mov
dec
icebp
xor
setge
pop
repnz
or
stos
jne
mov
test
sub
jecxz
jp
jmp
testb
ret
and
inc
insb
loope
stos
jge
aaa
inc
cmp
cmp
sahf
add
mov
adc
mov
imul
minps
jne
stc
xor
lahf
icebp
dec
add
movsb
xchg
dec
add
nop
jno
ss
jge
dec
aad
and
mov
filds
int3
dec
pop
xorl
push
adc
aaa
fwait
dec
repz
repnz
add
cmpsl
stc
xor
jp
sub
push
jecxz
imul
mov
mov
sahf
insb
sbb
push
push
aad
in
jnp
out
xchg
gs
dec
outsb
or
xchg
lret
nop
into
mov
inc
lea
mov
imul
sbb
lea
inc
cmp
and
lret
push
int
aam
pop
sub
mov
ja
adc
jle,pn
jbe
and
jmp
rcr
adc
dec
sarb
andb
sarb
push
aaa
or
lea
les
ficoms
push
or
arpl
mov
push
testl
inc
sub
lea
push
rol
pushf
pop
call
loopne
popa
ret
lods
mov
pop
jmp
dec
and
add
and
es
and
mov
xchg
push
lret
adc
arpl
adc
sub
mov
push
lds
outsb
dec
jb
movsl
push
jmp
adc
mov
andl
stos
adc
loop
jecxz
sbb
xor
adc
cmovnp
jmp
aas
cmp
cmp
insl
cs
sub
jmp
xchg
push
push
xchg
cmp
xchg
add
arpl
jns
call
xor
pop
cmpl
shlb
test
enter
add
add
cwtl
test
pop
xchg
push
add
sub
xor
shl
data16
inc
arpl
arpl
lea
xor
nop
inc
xchg
push
mov
and
xor
adc
and
inc
adc
leave
pop
rcll
dec
pop
or
mov
adc
push
add
cmp
and
sbb
int3
ret
inc
xor
mov
xchg
adcb
rcl
or
call
add
lods
clc
add
or
push
dec
push
movsl
xchg
enter
mov
push
push
sarl
sbb
iret
cmp
je
xor
shlb
xlat
loop
sub
imul
and
sbb
mov
add
and
enter
lock
mov
xchg
mov
xor
dec
pop
xor
mov
mov
rcll
repz
add
mov
jmp
mov
nop
outsb
inc
mov
adc
xchg
mov
sbb
mov
xor
mov
push
addr16
sub
push
outsb
add
and
inc
out
pusha
jmp
aam
or
xchg
add
sbb
pushf
pop
and
nop
fwait
push
movsb
mov
dec
mov
inc
inc
pushf
xor
shlb
pushf
pushf
sub
sbb
cmpl
xchg
xor
and
xor
mov
mov
xorb
mov
sbb
add
mov
adc
mov
pop
lcall
lea
and
jo
ds
imul
shll
sbb
dec
jl
fsubrp
push
mov
pop
lds
dec
ja
aam
mov
adc
cmp
push
or
or
fxch
cmp
aam
aam
mov
mov
adc
inc
push
mov
adc
adc
inc
dec
data16
mov
push
sbb
rorl
mov
adc
mov
and
jno
add
mov
pop
outsb
xchg
or
or
adc
add
jmp
adc
adc
popa
imul
push
mov
rcr
xchg
xchg
inc
inc
xor
pop
xor
mov
in
mov
sti
aaa
leave
and
mov
lock
popf
dec
test
mov
sub
add
jno
add
add
mov
cmc
mov
bound
add
loope
and
lea
in
push
and
add
bound
imul
repz
in
aaa
popa
aas
movsb
popa
adc
pop
ret
je
sub
push
pop
pop
and
inc
dec
cltd
add
adc
pop
and
add
cltd
inc
outsb
mov
cmp
vprotb
inc
dec
cltd
add
dec
xchg
cs
cltd
sbb
push
daa
dec
mov
loope
cltd
xor
dec
jo
push
cltd
scas
sbb
inc
jp
cltd
mov
adc
xchg
movsb
lds
push
adc
xchg
movsb
mov
xchg
dec
cmp
pop
in
mov
inc
ret
or
mov
loop
jae
sarb
xchg
dec
shlb
lods
mov
jns
test
loope
xchg
test
nop
sbb
push
rcl
loope
test
adc
test
pusha
mov
adc
inc
or
mov
or
je
test
repz
mov
js
je
loopne
mov
mov
push
adc
addl
movsl
test
or
dec
cmc
js
dec
je
sbb
mov
dec
test
insb
mov
mov
outsb
mov
je
add
mov
mov
aam
test
xlat
push
add
push
sbb
test
cmp
pop
test
or
adc
mov
test
xor
test
inc
inc
test
xchg
adc
add
cli
enter
push
pop
shrb
xchg
test
cwtl
mov
call
nop
push
pop
lcall
cmp
adc
mov
fs
test
lret
adc
shrb
mov
push
xchg
js
test
subl
mov
mov
lods
push
sbb
xchg
push
sbb
fsubrs
xor
cmp
sub
push
test
or
dec
or
dec
mov
cmp
sbb
xor
in
dec
xor
test
inc
aad
pop
imul
jno
nop
mov
js
lods
xor
xchg
xor
push
cmp
test
test
imul
call
inc
inc
test
rolb
xor
js
and
push
or
and
mov
test
pop
sub
nop
rclb
pop
xor
test
sub
int
mov
roll
test
mov
inc
sbb
xor
rclb
cld
les
bound
fucomip
and
or
adc
push
sbb
mov
sarb
cmpsl
mov
mov
orb
test
mov
pop
sbb
lods
push
pusha
test
testl
and
or
scas
jo
shrb
push
add
inc
das
arpl
test
addr16
cmpsl
or
enter
stos
pop
add
pop
sbb
pop
aad
pop
mov
mov
xor
or
push
push
mov
test
xor
mov
xor
pop
imul
or
mov
xor
sub
push
xor
add
rcrb
insl
sti
lret
outsb
sbb
clc
inc
inc
cmpsl
mov
rcl
or
push
loopne
or
cmp
xchg
or
in
xchg
add
subl
imul
jp
out
push
movsb
das
jmp
xchg
je
mov
nop
rolb
test
test
rolb
stos
test
je
sbb
test
push
test
cmpsl
popa
test
sub
mov
test
xchg
fs
cmp
fs
push
pop
addr16
fs
dec
pop
cmp
cmovp
pop
add
test
push
call
popa
cmp
shlb
lods
cli
daa
imul
jle
sub
mov
pusha
ret
sbb
ds
pop
cmpsl
jo
jmp
xor
imul
jbe
les
sbb
aaa
dec
test
lods
add
xor
mov
adc
test
dec
cmp
mov
call
push
mov
xor
pop
test
test
inc
push
in
bt
sbb
cmp
shll
and
jmp
test
dec
or
rclb
jbe
test
jbe
test
ja
mov
rolb
xor
int3
add
jl
inc
mov
inc
dec
inc
pop
push
in
nop
and
pop
dec
add
mov
test
sarb
sub
call
and
add
dec
push
ds
xlat
jae
mov
push
test
and
test
inc
push
lcall
or
mov
adc
mov
sbb
insb
xchg
xchg
popf
ret
or
pop
xor
or
jl
pop
add
pop
xor
into
fbstp
and
je
add
js
out
sbb
push
mov
add
cltd
push
sbb
push
test
jge
inc
test
scas
pop
cmpsl
sbb
fdivs
jae
sahf
mov
in
push
cwtl
addr16
jb
xchg
inc
test
dec
inc
push
add
shlb
push
out
or
xchg
sub
push
call
stos
push
rolb
jl
cvttps2pi
cli
stc
dec
xchg
dec
orl
or
iret
mov
iret
test
iret
sub
push
and
iret
leave
xchg
nop
push
xor
adcb
add
add
imul
add
xchg
hlt
out
or
push
enter
jae
adc
pop
loopne
push
add
notb
and
daa
add
cli
testb
pop
jle
data16
or
cmp
push
sub
mov
sbb
call
or
push
inc
pop
jp
and
jbe
fimuls
and
or
mov
in
cmp
mov
inc
cmp
or
push
cwtl
popf
fisttpll
inc
push
push
shll
and
testb
sbb
inc
xchg
ret
fiaddl
push
add
movsb
jno
push
rcrb
inc
in
push
rorb
ds
mov
cmp
popa
out
fstpt
inc
sub
or
inc
push
es
inc
sbb
push
mov
and
and
lahf
xchg
test
and
xchg
sbb
filds
xchg
push
xor
loopne
xchg
popf
cmp
movsb
adc
in
push
jmp
call
imul
push
clc
cs
call
mov
es
jmp
imul
call
sub
js
inc
dec
mov
dec
xchg
xchg
sbbb
call
sbb
and
notb
inc
pusha
mov
adc
sbb
push
xchg
fldl
or
call
in
xchg
aaa
pop
stos
push
adc
test
inc
xchg
nop
sbb
adc
or
add
xchg
xorl
or
inc
inc
xchg
aaa
mov
and
daa
xchg
dec
call
test
pushf
sbb
ss
outsb
jae
lea
mov
fcmovnb
jle
push
mov
push
or
cwtl
adc
add
je
dec
hlt
out
loop
call
fwait
stc
dec
daa
movsb
add
incl
jl
xchg
mov
xchg
adc
and
je
xchg
rclb
cmp
add
imul
jecxz
notb
dec
adc
push
int
jmp
lds
cmp
sbb
adcl
pusha
addl
pop
scas
subl
aas
push
jo
mov
cmp
xor
addr16
inc
jp
add
sub
subl
adc
dec
inc
push
arpl
loopne
adc
xor
push
push
add
sub
ljmp
and
inc
pop
adc
popa
push
add
cs
mov
sbb
jmp
incl
fimull
add
jb
jecxz
out
nop
xor
push
inc
call
add
pop
inc
ss
int3
ss
lcall
add
call
mov
or
mov
jne
push
movb
and
lret
ljmp
add
cmp
inc
jmp
dec
jmp
xor
sbb
push
inc
inc
imul
adc
inc
aaa
mov
inc
inc
inc
pop
je
pop
es
add
dec
pop
das
add
shlb
add
add
rorl
stc
push
sub
in
add
mov
int
adcl
je
inc
or
je
jl
push
loopne
movsbl
rol
clc
and
cmp
leave
or
pop
or
ror
call
sbb
out
xor
inc
jmp
add
sbb
arpl
jmp
and
insl
pop
jno
inc
imul
lahf
outsl
sbb
loop
or
enter
add
mov
adc
push
mov
mov
shlb
div
cld
push
ret
movsl
rcr
call
xchg
push
hlt
out
inc
push
mov
sub
addps
pop
mov
lret
sub
jmp
sub
push
push
or
popf
out
mov
xlat
cmp
push
jne
and
mov
in
xchg
jg
jmp
cmp
xor
shrl
adc
push
add
ret
push
sar
inc
push
pop
ss
jl
call
or
cmp
mov
mov
xchg
lods
sub
hlt
dec
mov
cmp
sub
fcomip
inc
adc
sub
popl
xor
push
nop
mov
ror
sbb
jmp
sbb
sbb
lds
nop
xorb
jmp
mov
add
filds
lcall
inc
dec
add
in
test
je
loope
push
cmpl
add
sahf
jne
loop
in
push
and
sbb
sbb
out
pop
or
or
or
adc
data16
insl
jmp
lock
dec
call
inc
push
add
sbb
out
push
lret
rcrb
test
xor
or
sub
xor
mov
mov
inc
in
adc
xchg
and
in
jp
cmpl
enter
scas
stos
loopne
dec
popa
ror
push
push
xlat
cmc
fists
inc
fs
leave
in
xchg
and
les
sbb
bt
push
inc
fs
shlb
sbb
dec
call
cmp
lcall
pusha
ja
or
lret
inc
leave
int3
pop
xchg
push
mov
cmp
leave
xchg
insb
xchg
sub
sbb
jbe
xchg
pop
add
pop
add
push
cmpsb
pop
xchg
xor
into
jmp
xchg
and
jmp
push
call
adc
sbbl
adc
xor
lcall
addb
fnsave
aas
negb
ficomps
aas
dec
pop
int
je
and
inc
aas
int
je
sbb
aas
sbb
sbb
cli
sahf
xchg
xchg
xchg
and
repnz
ror
xchg
fs
inc
sbb
jno
leave
aad
out
inc
xchg
leave
mov
and
push
fs
leave
nop
sbb
xchg
mov
cmp
and
loop
and
fsts
in
adc
or
rcll
or
sub
mov
xchg
pusha
xorl
bound
inc
fs
imul
enter
mov
adc
leave
ret
adc
data16
push
and
fs
dec
and
inc
leave
nop
add
fs
pop
arpl
inc
pop
and
sbb
push
fs
pop
leave
or
sbb
xchg
push
dec
push
add
xor
rorb
fwait
mov
mov
sub
and
adc
jle
ss
leave
test
push
xlat
mov
lahf
xor
enter
push
mov
xchg
pushf
movl
push
mov
sahf
add
jne
cmp
pusha
mov
adc
mov
mov
jmp
adc
flds
sbb
dec
call
xchg
or
push
fs
lret
test
inc
cltd
and
inc
addl
ljmp
xlat
repz
insb
sub
inc
lea
je
mov
mov
outsl
mov
and
adc
daa
lea
inc
inc
inc
add
push
adc
inc
adc
push
mov
inc
inc
ds
outsb
add
inc
push
or
sbb
xchg
nop
cmp
mov
jb
aas
sub
call
xchg
mov
mov
sbb
add
or
pop
or
lock
pop
xchg
adc
sub
sub
xchg
xchg
push
or
je
xor
stos
gs
cwtl
test
mov
sbb
xor
lcall
xchg
sbb
xchg
sbb
or
sbb
test
pop
les
sbbb
sbbl
jl
ss
push
lds
xchg
test
or
push
jne
push
int3
mov
out
call
cmp
pop
cmp
push
stos
ret
xchg
mov
movl
stos
dec
pop
adc
aas
insb
sub
addr16
stos
loopne
fdivrl
aam
mov
ret
stos
and
stos
inc
or
mov
aam
or
call
aas
insb
stos
dec
hlt
push
push
pop
stos
xchg
and
and
sub
inc
sub
lea
push
pop
mov
mov
mov
pop
or
out
mov
cmp
movsl
pop
test
jo
sub
pop
loopne
dec
rolb
mov
mov
mov
pop
push
push
or
aad
mov
cmp
xchg
pop
adc
dec
push
call
push
and
jo
sub
pop
shll
push
mov
out
sub
int
lods
or
push
sub
or
popf
inc
cmp
xchg
mov
pop
pop
xor
and
pop
test
scas
adc
inc
xlat
pop
pop
aaa
call
nop
sbb
sub
xlat
lods
inc
mov
or
pop
jecxz
xor
pop
fxch
mov
ror
popa
mov
movsl
divb
pop
mov
daa
mov
mov
les
fs
pop
pushf
mov
push
pop
pop
mov
ds
les
cmpsl
hlt
pop
test
out
mov
and
push
and
mov
or
nop
or
sbb
pop
sbb
bound
rcrb
sub
pop
bound
cmp
jle
sub
popl
out
lcall
or
and
or
mov
mov
and
inc
push
mov
adc
pop
xor
bound
pop
add
adc
rcrb
bound
cmp
mov
pop
lods
pop
stos
pop
test
mov
lock
mov
adc
call
sbb
stc
mov
cmpsl
sbb
rclb
sbb
add
push
popf
sbb
dec
inc
sub
call
add
mov
fistpl
dec
inc
out
lds
loopne
mov
test
or
cmp
bound
pop
iret
lds
rcrb
add
addr16
pushf
sbb
mov
ret
sub
inc
enter
in
adc
pop
mov
bound
sbb
adc
and
call
push
dec
lret
pop
test
or
out
aam
pop
mov
and
ret
or
or
scas
insb
mov
xor
xor
push
sbb
xor
xor
lds
scas
cmpsb
sbb
sbb
xor
dec
cmp
or
test
cmp
mov
cmp
or
loopne
xor
pop
and
inc
sbb
cmp
mov
addb
into
pop
cmp
xor
clc
cmp
or
xchg
pop
dec
xchg
cmp
sub
imul
repz
addr16
cmp
out
push
or
or
jge
xchg
pop
lds
je
fisubl
pop
mov
pop
cmp
bound
jno
ret
or
call
cmp
nop
push
and
xor
dec
mov
mov
js
push
aas
outsl
cmp
push
add
test
jns
pop
dec
mov
add
cs
sbb
je
wbinvd
sub
jo
add
pop
cmp
rorb
or
psubq
jle
cmc
test
filds
or
orb
dec
call
push
or
fdivr
test
shlb
add
invd
dec
call
sti
addb
mov
cmp
pop
and
pand
cmp
and
aad
addb
mov
or
test
push
insl
insb
rcrb
sub
xor
sti
jae
pusha
movsb
and
push
adc
or
cltd
mov
sbbb
test
sti
add
inc
push
nop
mov
pusha
movsb
mov
mov
jno
add
xor
mov
push
pop
and
sti
repnz
sbb
rcl
jne
sti
movups
mov
xor
jmp
inc
jbe
movsb
sti
int
sub
and
dec
sti
xor
sti
and
push
inc
enter
or
cmpl
mov
adc
jnp
shll
pop
leave
inc
xchg
cld
pop
in
mov
pop
mov
lock
jmp
dec
sbb
push
test
mov
in
or
inc
adc
inc
adc
rcrb
jnp
xchg
or
push
pop
adc
and
loopne
mov
daa
aaa
cmpsb
pop
dec
inc
dec
shlb
pusha
cmp
push
fcoml
adc
aaa
aas
aaa
xchg
sub
iret
sub
adc
test
pop
xor
add
adc
add
fildl
test
call
in
outsl
nop
adc
dec
aaa
mov
cwtl
inc
aaa
dec
sub
push
mov
xorl
test
sub
test
divl
aad
je
fnstenv
mov
xor
in
in
stos
sub
push
adcb
adc
shr
test
xor
ja
mov
fisttpll
xor
or
inc
or
aas
xor
ja
mov
unpcklps
das
shlb
call
aas
aad
adc
and
adc
call
in
call
lret
xor
lock
call
cmp
loopne
call
movsl
and
dec
call
stc
dec
call
push
call
repnz
call
pusha
call
lret
xchg
das
pop
push
jne
call
in
call
jl
push
movsl
fstl
fldl
adc
push
cs
dec
cmp
xor
nop
sbb
cwtl
add
lret
test
in
xchg
xchg
adc
dec
ret
les
pop
mov
shlb
xchg
cs
dec
ja
adc
in
mov
in
cs
dec
pop
call
in
mov
mov
es
sbb
xchg
lret
repz
adc
add
sub
gs
loope
jb
adc
sub
mov
lret
test
test
sub
xor
lret
xor
cmp
jo
pop
sub
push
inc
sbb
cmp
xor
movsl
cs
adc
in
mov
adc
xchg
pusha
divl
dec
or
push
dec
adc
fisttpll
xchg
fldt
or
push
cwtl
sahf
je
cs
fcompl
inc
xchg
and
je
xor
inc
adc
js
adc
int
dec
jl
sbb
and
push
and
jb
mov
mov
daa
int
cli
cmp
pushf
xor
inc
test
dec
xor
inc
lods
mov
in
rorl
mov
dec
xchg
daa
mov
or
sbb
inc
cmp
inc
push
and
enter
inc
xchg
add
mov
or
out
je
xchg
and
xchg
inc
jno
push
cmpsl
push
mov
and
inc
adc
pop
flds
pop
pop
mov
adc
mov
test
xor
mov
add
adc
shlb
adc
or
sub
adc
and
adc
pop
add
sbb
dec
fcoms
mov
add
imul
test
cs
mov
and
adc
inc
sbb
sbb
push
imul
shr
rcrb
mov
or
stos
mov
fadds
mov
das
push
adc
xchg
movsb
inc
shlb
and
addb
pop
adc
adc
xchg
mov
test
dec
sbb
adc
adc
or
mov
mov
es
mov
add
add
and
loopne
mov
or
mov
push
ljmp
lcall
push
jge
dec
mov
pop
push
or
push
add
or
or
mov
adc
nop
fldcw
mov
test
adc
xlat
mov
adc
or
xorb
pop
mov
mov
sbb
je
mov
pop
lds
jmp
fs
sub
sub
inc
dec
and
cmp
orl
stos
cmpsl
dec
lea
mov
cmp
xorl
sub
or
fsts
in
jne
inc
cmp
popf
sbbl
orl
cmpl
xor
xchg
lds
sbbl
jecxz
push
int3
jno
push
in
push
pop
mov
mov
mov
dec
pop
cmp
mov
pop
cmp
push
cmp
mov
xchg
dec
pop
or
cmp
push
xchg
xchg
pushf
pop
fwait
and
mov
popf
sub
sub
je
das
pop
xchg
xchg
cs
jo
push
call
add
das
dec
jmp
push
dec
push
cli
mov
pop
dec
add
mov
pop
or
cmp
cltd
pop
movsl
sti
sbb
mov
add
sub
push
mov
andb
sub
scas
pop
xor
pop
pop
and
add
call
sbb
repnz
dec
xchg
dec
addr16
pop
push
pop
cmp
pop
cwtl
push
into
and
mov
push
and
and
dec
dec
xchg
sbb
pop
add
pop
pop
and
mov
shlb
ret
adc
xchg
or
je
loop
out
rorl
and
and
add
inc
sbb
sub
ss
call
dec
adc
call
and
sbb
sbb
inc
test
sbb
ss
mov
push
addl
and
dec
js
stos
push
test
jmp
les
popf
mov
shll
adc
daa
xor
nop
daa
or
add
daa
ret
xor
fisttps
sahf
adc
push
mov
jecxz
cwtl
daa
rcrb
or
adc
push
push
sub
mov
nop
arpl
adcl
leave
pop
and
mov
lods
pop
push
andl
or
pop
test
loopne
loopne
sub
add
scas
mov
mov
or
lret
inc
xor
and
jb
mov
or
xchg
and
inc
sbb
mov
push
push
jecxz
adc
xor
mov
call
sbb
negl
call
jbe
dec
push
mov
lea
lcall
pop
xor
xchg
js
sbb
mov
add
hlt
xchg
xor
pop
push
or
pop
push
or
je
and
nop
cmpsb
sub
or
pop
jl
sbb
arpl
mov
inc
inc
xchg
pop
inc
cmp
loop
movsl
fs
pusha
mov
andl
mov
sbb
sub
movsl
push
pop
imul
jmp
inc
pop
pusha
xor
shll
xor
in
adcl
inc
or
or
aam
ret
pusha
inc
xorl
sbb
pop
or
pop
and
cld
add
sbb
icebp
movsb
pushf
mov
push
nop
popf
cld
adc
push
shlb
sub
shr
add
dec
push
rorb
mov
sbb
scas
test
mov
sub
mov
scas
dec
jp
dec
ret
cmp
call
mov
push
sub
popf
pop
pop
or
add
call
inc
icebp
sbb
push
lods
xor
or
push
pop
roll
add
ret
sub
add
push
cwtl
inc
mov
into
mov
nop
inc
jle
push
push
stc
mov
fcompl
je
push
fwait
add
fwait
inc
adc
outsl
adc
or
add
inc
dec
xor
das
xor
inc
or
movsl
sbb
and
jmp
xchg
ret
add
push
sbb
add
jp
push
out
pop
scas
push
fstl
add
sbb
push
sti
out
add
pop
cmp
stos
fwait
cmp
loopne
xor
sbb
fcompl
xchg
adc
sub
xchg
adc
add
xor
push
sti
pop
rcll
jo
nop
jo
sbb
fcoml
out
sti
dec
imul
pop
mov
pop
sbb
inc
add
cli
push
xor
xchg
sub
in
in
adc
xchg
mov
xchg
mov
insl
dec
imul
push
out
cmp
adc
pop
pop
rclb
mov
push
aam
stc
cld
sahf
jg
mov
fldenv
je
leave
rcl
cmp
shll
rcll
xchg
mov
fs
xor
mov
shrl
xchg
into
pop
mov
xor
test
nop
lret
and
lods
mov
aam
cwtl
mov
push
xor
out
mov
ja
inc
rcll
enter
adc
rcll
enter
shrl
sbb
rcrl
shll
nop
xchg
cmp
pop
fdivl
add
test
ljmp
roll
mov
mov
cmpsb
test
cmpsb
xchg
jmp
call
and
pop
xor
mov
adc
mov
addr16
or
arpl
dec
mov
adc
push
call
mov
push
and
fnstsw
push
jb
mov
adc
or
and
inc
loope
mov
insb
movsl
hlt
add
dec
cld
sbb
cmp
jb
mov
mov
mov
je
jo
pushf
fistpl
adc
or
mov
mov
call
add
or
shlb
rorb
adc
mov
sub
test
mov
xchg
out
fdivr
fwait
repz
adc
mov
test
repnz
xlat
fwait
push
out
gs
jnp
add
mov
dec
xchg
out
jb
adc
pop
jb
les
rcrb
loop
jb
insl
adc
mov
or
mov
adc
lods
mov
jge
adc
ret
in
and
lcall
adc
xlat
ret
aam
inc
xor
icebp
test
and
and
or
add
mov
xchg
add
adc
repz
mov
inc
fs
andb
sub
shl
addr16
or
add
add
push
int
in
inc
jns,pn
cltd
test
jecxz
cltd
cmp
cltd
inc
inc
sbb
push
add
sub
in
lds
cmp
jo
add
sbb
push
cmp
dec
aad
inc
test
or
and
rolb
add
and
push
mov
push
sbb
dec
iret
or
or
cmp
pop
pop
or
or
cmp
repz
sbb
ret
iret
repz
mov
push
ds
out
cmp
or
sbb
aam
in
out
jns
push
mov
pushf
pop
push
lods
push
mov
int3
loop
push
inc
push
push
cmp
sub
push
nop
movsb
push
push
xchg
jns
out
jl
push
inc
ss
out
out
cmpb
push
push
lahf
out
sbb
repnz
fdivp
cmp
repz
mov
out
jns
mov
sbb
incb
add
es
int
jns
loop
sbb
iret
repz
mov
jns
out
sbb
pushf
scas
dec
repz
lret
or
and
iret
repz
pop
data16
repz
pause
sahf
lods
mov
mov
in
decb
ss
inc
cwtl
nop
repz
shr
jb
mov
cmp
push
sahf
mov
daa
rol
loop
jge
jns
clc
adc
sub
cmp
aaa
je
cmp
cmp
fs
push
cmp
adc
in
cmp
lods
daa
pop
mov
jbe
add
insb
stos
push
lahf
jae
jbe
push
cwtl
cmpsl
insl
mov
fwait
ret
das
out
iret
dec
test
aaa
int3
xor
add
insb
lahf
jbe
push
scas
test
bound
push
fisubrs
inc
push
rcll
aaa
jo
xor
pop
dec
sbb
outsl
push
mov
mov
gs
dec
push
dec
ja
jb
pop
cmpsb
cmp
test
mov
pop
inc
jl
and
mov
lahf
es
dec
mov
and
xchg
pop
insl
xor
xor
shlb
fistpl
aaa
cmp
insb
outsl
ss
insb
add
add
testb
nop
sbb
out
int
xor
push
call
out
jns
mov
dec
cmp
das
or
or
sbb
xchg
aaa
imul
orl
and
filds
add
adc
bound
scas
sbb
sarl
jmp
or
and
mov
and
js
mov
outsl
neg
sub
add
mov
mov
cmp
das
jg
les
mov
je
pop
aad
andb
das
push
dec
push
push
push
inc
push
inc
pop
inc
outsl
outsl
add
and
pop
inc
mov
sub
sub
sbb
cli
xor
xor
jae
pop
xchg
ficomps
outsl
jae
pop
mov
cmpsb
jo
jae
inc
jne
outsb
je
repz
shll
in
pop
inc
js
add
lret
fcmovnu
ss
inc
xor
sub
sub
sub
jg
sti
incl
xor
xor
xor
jge
xor
xor
inc
std
mov
inc
stos
xor
ss
xor
cmp
fdivl
cmp
xor
pusha
fs
mov
inc
mov
hlt
lahf
inc
add
sbb
sbb
jne
test
gs
cmp
xor
push
xor
or
in
jg
inc
push
and
inc
aaa
adc
xor
inc
or
lock
dec
outsb
jl
adc
pop
push
arpl
xor
inc
push
inc
push
dec
and
cmp
ss
pushf
xor
inc
pusha
mov
or
and
dec
dec
outsl
ret
mov
jo
adc
pop
sub
sbb
test
push
push
dec
subl
adc
mov
sub
jae
inc
push
out
pop
gs
inc
out
adc
push
sub
out
negb
in
mov
lods
fwait
das
jmp
sahf
add
movd
out
cmpsb
push
hlt
mov
dec
jb
dec
jo
adc
jg
inc
push
mov
and
jo
outsl
xor
cmc
ss
imul
movsb
inc
je
push
push
ss
push
mov
cmp
add
sbb
cmp
fildl
lea
mov
adc
sub
pop
pop
cmp
insb
ficomps
jl
inc
xchg
and
outsb
ret
pop
rol
or
pop
inc
cltd
inc
and
xor
xor
or
pop
cvttps2pi
push
cmp
rcrl
xor
pop
add
xorb
pop
jg
pop
mov
cwtl
jp
dec
pop
ficoml
push
ds
mov
jae
and
imul
andl
bound
js
daa
scas
scas
lcall
fs
imul
push
fadd
pusha
sbb
jo
dec
movsl
dec
cmp
pop
mov
push
dec
push
push
sub
mov
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
mov
cs
push
push
push
add
rcll
je
dec
sub
outsb
outsl
push
popa
imul
push
sbb
xor
lods
cwtl
add
push
push
add
add
cmpb
inc
adc
pop
and
data16
sbb
rolb
push
push
adc
push
sbb
dec
sarb
inc
or
jbe
out
pushf
add
sbb
push
mov
cmpsl
inc
adc
out
xchg
andb
add
dec
insl
or
ret
out
or
fadds
adc
adc
sahf
out
sub
loopne
adc
jae
mov
das
push
adc
cmp
jae
xchg
adc
push
sbb
sbb
stc
enter
sbb
std
iret
jae
rcrl
push
das
push
pop
nop
imul
cmp
js
imul
push
jns
stc
jp
push
cld
popa
pushf
out
fdivr
mov
out
sbb
stos
divl
out
repz
aad
lahf
mov
and
mov
es
arpl
test
dec
aaa
push
adc
mov
push
lds
push
dec
sbb
or
lahf
pop
test
adc
push
cld
or
repz
in
int3
fdivrs
iret
repz
out
xor
mov
jns
out
mov
jns
insb
push
pop
repz
repz
push
dec
dec
inc
sahf
out
iret
inc
cmp
xor
sub
sahf
out
sub
sbb
out
sahf
out
adc
add
repz
add
or
hlt
call
cmp
enter
stc
cmp
repz
xor
lock
out
sahf
cmpsl
int3
mov
insb
inc
int
jns
sub
adc
cld
push
fdivrs
repz
les
repz
sub
aam
mov
xchg
jo
sbb
add
cmp
int
call
cwtl
jl
push
cwtl
mov
inc
enter
jmp
imul
cmpl
sub
dec
les
cmp
inc
xor
dec
adc
neg
imul
arpl
inc
inc
add
adc
xor
mov
xlat
add
sub
mov
imul
add
adc
xor
out
sbb
shl
xor
cmpsb
mov
xor
jo
and
mov
sahf
dec
mov
pop
sbb
pushf
xor
bound
imul
jmp
mov
mov
xchg
mov
and
sbb
mov
jbe
or
sub
ljmp
js
shrb
mov
pushf
andb
rolb
pushl
fs
addr16
adc
and
add
decl
push
inc
push
xor
xchg
cld
inc
inc
mov
add
add
out
mov
les
jg
pop
jne
pop
add
sbb
cmc
pushl
add
jne
imul
nop
pop
dec
and
adc
arpl
imul
or
aas
mov
jo
push
or
popf
or
scas
pusha
cmp
inc
push
push
xor
filds
insl
out
push
push
push
insb
das
inc
dec
pop
mov
dec
outsl
jl
add
cmpsl
ja
lahf
add
js
jg,pn
das
loopne
xchg
es
lds
loopne
out
or
push
addr16
mov
xor
sub
ret
xor
mov
xor
and
insb
pop
sarb
pop
xor
das
jg
fcoms
das
cltd
nop
cmp
mov
ss
mov
mov
sete
int3
andl
data16
aas
xchg
adc
leave
and
xlat
jns
pop
cmpsl
nop
pop
mov
sti
cltd
or
push
lcall
inc
cmp
dec
lret
les
mov
stos
lea
pop
push
popf
jl
jno
shll
pushf
push
cmpsb
jg
mov
xchg
mov
dec
shlb
adc
aas
vmptrst
mov
aas
mov
cmp
iret
adc
inc
jb
shlb
sbb
mov
push
aam
lea
loope
adc
fs
loopne
fidivrs
movsb
dec
adc
cmp
lea
loopne
daa
cmpsl
jno
cmp
push
dec
and
loope
cmpsb
in
push
xor
push
and
imul
xor
inc
je
dec
imul
inc
aaa
xor
testb
arpl
notl
insb
push
lcall
fs
dec
dec
loop
xor
push
push
add
push
outsl
ja
xor
push
push
jle
jb
cmp
push
sub
add
faddl
daa
movsb
and
rcr
xchg
and
add
add
orl
daa
dec
jmp
pop
outsb
inc
lods
and
outsl
neg
ljmp
mov
add
mov
cmpsb
dec
push
jb
clc
mulb
insb
jae
arpl
scas
mov
pop
outsb
push
add
push
imul
int
push
mov
jae
mov
jae
push
test
adcb
push
or
push
insb
add
mov
out
pop
pusha
das
mov
push
sub
push
inc
into
sub
or
repz
lds
push
add
and
fs
loopne
add
fsubl
dec
mov
inc
push
mov
test
das
push
mov
sub
cmp
push
jo
jb
xchg
loope
mov
sub
push
fisubl
movsb
sbb
int3
sahf
notb
lods
cmpsl
xor
in
mov
dec
imulb
push
into
xchg
jno
ja
popf
adc
and
mov
pusha
inc
and
adc
out
push
inc
mov
fimull
and
xchg
xor
mov
mov
fcoms
cmp
inc
add
push
fbld
jne
lods
gs
or
pop
addr16
test
subb
and
stos
outsb
lea
pop
push
or
xchg
and
sbb
push
pushf
jne
nop
pop
ds
rcrl
inc
lahf
xor
arpl
jecxz
ret
sub
push
cmp
inc
cs
pop
bound
adc
jle
and
fcoml
lea
pop
adc
je
adc
lahf
outsb
xor
insl
add
and
sub
inc
sbb
jne
xchg
pop
sarl
pop
outsl
lods
js
aaa
mov
shrb
inc
add
push
add
push
lcall
orb
mov
pusha
xorl
push
dec
dec
dec
mov
add
inc
jns
mov
and
lds
mov
mov
lret
imul
outsl
inc
push
outsl
jl
xchg
sti
gs
dec
and
add
add
push
inc
sbb
add
sbb
cmp
add
sbb
lock
mov
out
mov
rolb
push
xchg
lret
out
jb
jecxz
sbbl
outsl
subb
xchg
jp
mov
inc
jmp
pop
ja
add
das
push
in
scas
je
aaa
dec
inc
dec
pop
or
inc
dec
lret
dec
aas
inc
cmc
in
or
out
mov
push
jmp
sbb
add
and
xor
mov
cmpsb
add
jne
sbb
and
jo
add
add
push
push
add
inc
xchg
add
pop
mov
fs
sub
pushf
sub
adc
int3
or
push
dec
pusha
push
jo
jno
test
push
cmp
add
jae
and
into
pop
rcll
and
test
inc
cmp
imul
add
rol
add
iret
pop
add
lret
xchg
sub
in
jmp
cmpsl
add
push
mov
rol
mov
push
adc
mov
jns
insb
bound
loope
pop
cld
inc
jae
adc
add
insb
inc
add
testb
add
cmp
push
add
or
xor
push
stos
mov
mov
addl
insb
jae,pn
bound
push
add
lods
out
das
sub
sbb
xor
sbb
cmp
fbld
lret
fbld
int3
cmc
pop
ficomps
mov
push
popa
popa
shrb
xchg
addb
and
inc
cwtl
aam
dec
cld
cli
jg
jecxz
testl
push
pop
in
hlt
addb
aam
lret
jae
ret
fisttps
sti
jbe
pop
pop
push
insb
push
sbbb
sbb
xchg
push
punpcklbw
out
scas
sbbb
pop
and
mov
jecxz
add
adc
push
nop
inc
loope
test
incl
sub
mov
add
add
aam
inc
cmp
pop
gs
cmp
mov
icebp
in
inc
xor
sti
fsubrl
pop
add
addr16
cmp
inc
pusha
out
inc
rcll
hlt
pop
hlt
mov
add
or
sub
inc
push
inc
sub
daa
push
enter
mov
pop
mov
pop
push
sub
outsb
adc
daa
sbb
jns
adc
add
repz
repz
out
lock
cmp
enter
mov
jns
idivl
movsb
pop
mov
sahf
out
nop
mov
jo
pusha
push
pop
push
inc
cmp
repz
xor
sbb
pushf
out
adc
in
lock
pop
mov
push
fcom
repz
repz
cwtl
iret
repz
mov
cmp
cmp
repz
and
adc
jns
out
add
in
hlt
in
in
jns
out
int3
mov
sahf
out
outsl
xchg
push
mov
js
push
inc
stc
cmp
jnp
jle
sbb
loopne
adc
fcomps
push
xor
push
push
cmp
shrb
repnz
popf
lods
mov
push
mov
sub
incl
pmuludq
sbb
dec
add
shl
xorb
pop
scas
push
nop
push
repnz
data16
fisubs
push
aaa
adc
adc
maskmovq
testl
lret
jbe
or
neg
outsl
add
mov
neg
cmpsb
jg
fs
inc
dec
pop
add
rolb
cmpsl
mov
add
xchg
xor
scas
lds
daa
movl
push
movsl
cmc
dec
adc
lea
and
lret
das
xorb
xchg
mov
push
mov
push
pop
jo
add
in
adc
rolb
pushf
mov
test
xchg
mov
mov
mov
dec
cmp
insl
xor
aam
insl
sub
outsl
and
jbe
and
scas
clc
mov
xor
xor
ds
je
add
pop
mov
add
add
outsl
jb
imul
and
fimull
dec
arpl
imul
sbb
cmp
ja
jo
dec
sub
and
push
or
adc
add
pop
jne
es
in
imul
into
mov
push
stc
das
sti
outsb
add
add
ja
xchg
sbb
inc
add
inc
pop
xchg
aam
pop
adc
fcmovbe
pushl
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
pushl
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
dec
xor
xchg
shll
inc
ss
ss
pushl
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
pushl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
ret
add
push
lock
idivl
or
incl
xchg
add
adc
and
dec
xor
xor
outsb
xor
jg
pushl
popf
xor
xor
xor
xor
xor
xor
mov
dec
xor
xor
xor
xor
xor
out
xor
xor
addl
mov
mov
mov
les
icebp
fdivs
call
xor
jno
pushl
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
add
fwait
and
into
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
inc
cmp
push
adc
cmp
cmp
cmp
cmp
pop
cmp
imul
sar
cmp
mov
pushf
cmp
adc
ds
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
sbb
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
xor
pushl
xor
dec
xor
insb
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
lcall
inc
inc
xor
pop
xor
jo
xchg
xor
xor
xor
xor
or
pop
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
jg
xchg
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
inc
test
jbe
pop
push
paddd
loop
xor
pop
xor
push
xor
xor
test
call
xor
xor
xor
ret
xor
xor
inc
xor
lcall
clc
xor
xor
test
mov
pop
pushl
mov
nop
xor
out
in
xor
scas
clc
xor
cmp
mov
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
adcb
mov
stc
cmp
cmp
cmp
push
lcall
and
cmpb
ds
aas
jmp
lcall
cmp
xchg
pushl
dec
ss
xchg
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
decl
js
cmpb
aas
sarl
aas
in
out
out
jo
aas
mov
xchg
xor
xor
pop
mov
jmp
mov
scas
xor
xor
xor
loop
decl
xor
xor
xor
mov
xor
xor
scas
jg
std
xor
cmpsb
data16
ss
add
or
aaa
and
aaa
pop
loopne
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
outsl
clc
pushl
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
sbb
cmp
push
mov
cmp
cmp
sbb
push
cmp
inc
cmp
jmp
outsl
add
push
cmp
sbb
cmp
cli
jmp
incl
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
lock
xor
bnd
adc
sub
xor
cmp
fists
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
inc
cmp
pop
cmp
mov
cltd
cmp
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
sahf
jo
jge
mov
movsl
aas
stos
aas
mov
mov
rolb
outsl
push
xor
insl
stos
lcall
dec
xchg
les
fidivl
in
or
call
pushl
adc
and
sub
cmp
jb
mov
xor
xor
xor
xor
xor
xor
xor
xor
mov
jl
cmpsl
xor
xor
cli
push
cld
aaa
scas
jno
xchg
xor
xor
xor
cmpsb
pushl
xor
out
cmpsb
xor
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
rcl
push
mov
bound
scas
cmp
mov
cmp
fdivrl
aaa
cmp
mov
cmp
or
and
cmp
cmp
cmp
cmp
cmp
push
nop
sbb
xor
or
xor
lock
pushl
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
loope
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
test
jbe
cmp
sbb
ds
xor
xchg
aas
push
mov
insl
xor
sbb
xor
xor
xor
xor
xor
jl
mov
cmpsb
cltd
aaa
mov
ret
incl
jl
aaa
jmp
repnz
or
cmp
pop
cmp
jge
mov
cmpsl
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
idiv
jg
mov
and
cmp
cmp
fdivrs
push
aas
jne
incl
bound
jg
mov
fwait
xor
xor
xor
xor
dec
or
repnz
ret
sub
xor
xor
divl
pop
xor
fdivr
inc
lcall
loop
ss
dec
ss
outsb
notb
ss
cli
aaa
cld
ss
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
jmp
push
inc
pop
push
imul
cmp
test
mov
push
jge
ret
cmp
dec
cmp
cmp
js
jg
cmp
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
push
loopne
push
inc
cmp
orb
pop
scas
jg
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
inc
inc
add
lds
pushl
sbb
xor
xor
pop
xor
xor
incl
and
xor
xor
mov
xor
push
ljmp
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
das
sar
fidivl
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
adc
jbe
cmpl
cmp
cmp
loop
aas
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
das
jle
rcrl
rclb
sub
jne
adc
sar
filds
xor
jg
xchg
xor
xor
xor
pusha
rcll
lret
pop
cld
xor
xor
ljmp
jbe
loopne
adc
adc
sbb
sbb
loope
ljmp
xor
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
mov
push
lock
out
xor
decl
or
aaa
into
cmp
inc
xor
xor
xor
jl
mov
mov
movsb
xor
les
int3
mov
xor
xor
xor
xor
jg
add
cmp
sub
sub
xor
cmp
inc
cmp
loope
pop
cld
cmp
cmp
xor
and
scas
push
fidivs
cmp
cmp
inc
add
mov
mov
enter
cli
add
aam
fdivrs
fdivl
lock
stos
scas
scas
dec
cld
push
add
or
adc
add
inc
stos
sbb
and
and
sub
sub
xor
icebp
pop
fidivrs
inc
cmp
cmp
pop
cmp
cld
jg
cmp
insb
cmp
je
jl
cmpb
pop
push
cmp
lcall
mov
aas
inc
mov
push
aas
push
aas
ret
filds
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jbe
jmp
or
xor
xchg
xor
jg
sub
xor
xor
inc
xor
xor
cwtl
xor
or
xor
fsubl
mov
js
mov
jb
int
cld
xor
pusha
xor
lahf
jle
jge
or
or
ss
sahf
int3
ss
jg
call
ss
fdivs
fdivl
loopne
in
call
ss
ss
add
add
call
aaa
or
adc
adc
aaa
sbb
and
and
sub
sub
aas
cli
lcall
aaa
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
jl
mov
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
ret
dec
into
mov
dec
mov
mov
clc
ljmp
xor
enter
shlb
aam
fdivs
fcompl
in
jno
sbb
out
aaa
hlt
xor
aaa
subb
or
adc
adc
sbb
cmp
fdivrl
call
xor
clc
cmp
pop
sahf
jl
cmpsl
lcall
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
clc
insb
cmp
jl
test
mov
cmp
movsb
cmp
mov
mov
mov
cmp
inc
xchg
test
sub
test
and
mov
mov
jne
call
sti
popa
pop
in
sahf
repnz
shufps
lock
jmp
adcb
lret
sub
es
inc
add
fbstp
xor
add
and
addb
int
or
add
pop
add
popa
sub
fiadds
pop
movsl
push
add
rolb
or
fimuls
adc
push
rcl
or
mov
addb
enter
imul
sub
sub
xor
sbb
iret
repz
mov
lcall
sahf
add
fists
enter
dec
or
test
adc
rcll
movsb
inc
ret
and
pop
pop
sbb
push
sub
rcrb
pushf
and
add
add
dec
les
push
sbb
push
and
bound
adc
shll
or
out
jle
dec
enter
dec
jno
mov
push
shl
jb
pop
mov
mov
and
sub
frstor
pop
sbb
jne
push
mov
je
push
pop
fildl
pusha
xchg
loope
adc
push
mov
push
loopne
adc
xchg
jne
push
push
push
rorl
xor
xchg
add
xor
dec
add
cmpsb
adc
adc
cld
jge
push
push
add
add
movb
inc
or
pop
pop
shlb
movsb
mov
in
inc
inc
sbb
adc
jns
or
sbb
xlat
and
and
xor
insl
mov
sub
fbld
and
je
cmp
outsb
jno
add
test
jp
add
pushf
or
adc
loopne
xor
idivb
inc
mov
mov
cmp
and
and
or
mov
push
lea
jge
jnp
mov
cmp
fs
push
in
add
add
push
adc
mov
inc
decb
sbbl
push
mov
mov
mulb
dec
rorb
adc
lea
movsb
mov
mov
jb
cmpb
inc
push
mov
js
adc
adc
or
inc
push
push
call
push
lret
pop
aad
xorb
stos
dec
cmp
pop
dec
add
enter
pop
add
add
das
lahf
fidivs
inc
cmp
andb
call
gs
jle
aas
cmp
js
inc
sbb
popa
sti
mov
or
or
cmpeqps
mov
shrb
inc
cmp
gs
and
std
push
xchg
call
pop
es
and
jo
jge
push
inc
jmp
lret
lods
addl
sub
sti
mov
subb
mov
mov
mov
lock
cs
push
loop
lahf
and
pop
orb
es
jg
mov
nop
lcall
pop
fmuls
push
adc
inc
or
movsb
jl
out
push
jnp
push
dec
jmp
mov
sub
sub
or
jge
aaa
push
and
xchg
or
xchg
fcompl
mov
inc
mov
js
movsl
or
mov
fsubl
push
push
aad
or
mov
lea
out
xchg
pop
sub
add
or
and
clc
shl
add
lret
sbb
add
pop
pop
or
or
pusha
pop
in
test
mov
or
loop
enter
push
cmp
mov
push
mov
clc
aaa
add
pusha
xor
dec
ret
loope
xlat
push
or
jge
out
call
push
loope
sub
adc
add
mov
imul
or
dec
clc
push
sbb
inc
ret
dec
mov
xor
dec
add
inc
cmpsb
test
imul
inc
or
push
and
or
incl
adc
pop
sub
js
hlt
sub
rclb
adc
push
nop
test
sub
test
inc
xor
lea
cmp
push
or
cmp
xchg
sbb
loop
or
mov
cmpsl
or
push
insl
loop
or
mov
out
xchg
xor
xchg
adc
inc
or
sub
or
popf
add
dec
into
jg
add
jbe
inc
and
sub
jl
sbb
ficompl
sbb
mov
push
push
push
mov
and
mov
sbb
jg
or
add
push
jno
cmpsb
fiadds
divl
mov
lods
xlat
call
pop
sub
in
or
add
add
sti
add
aas
adc
push
ja
out
scas
aad
in
adc
dec
and
add
jo
pushf
or
pop
clc
adc
ret
push
cmp
jp
add
pop
push
in
imull
add
adc
sub
sbbl
dec
or
clc
fs
mov
xchg
sub
jge
orl
xor
shlb
pop
xor
mov
add
xor
mov
pop
adc
dec
adc
inc
add
fstpt
xor
lods
xor
pop
int3
mov
and
pusha
orl
and
xor
leave
sbb
jmp
or
jo
or
and
mov
xor
sarb
mov
jae
add
inc
and
sub
mov
lods
and
xor
xchg
iret
popa
and
test
enter
and
sub
push
inc
mov
xchg
xor
and
mov
test
sarb
movb
or
test
pmaxsw
or
push
arpl
rorb
popa
push
mov
or
out
sub
pop
mov
popa
pop
fadds
lods
shll
in
ds
fwait
loopne
out
lret
push
call
sub
es
pop
mov
mov
cmp
mov
loope
xchg
push
xchg
sub
push
fst
sbb
outsb
incl
xor
sub
push
sarb
pop
clc
inc
add
push
pop
daa
test
pop
popf
pusha
xor
jnp
push
ja
sbb
xchg
jnp
xchg
popa
popf
rolb
notb
inc
rcll
jnp
sub
lret
sbb
and
test
xchg
or
cmpsb
jo
push
pop
das
adc
adc
adc
xchg
std
inc
sbb
sbb
in
test
daa
fs
push
loopne
lods
scas
andl
je
lods
fwait
adc
push
out
movhps
sbb
in
xchg
mov
pop
sbb
std
test
or
push
mov
xor
add
int
jl
adc
sbb
call
in
push
insb
lahf
mov
fcoml
dec
mov
or
xchg
and
mov
or
jo
test
repnz
mov
call
lcall
stos
adc
es
inc
sub
push
call
out
mov
xchg
je
pusha
or
addr16
inc
and
cmpl
and
pushf
mulb
or
xchg
and
xlat
fistl
loop
inc
shrl
cwtl
inc
adc
mov
les
loop
test
xchg
ficoms
popl
icebp
sarb
inc
pushf
mov
sbbl
sbb
lahf
sbb
add
push
inc
mov
cmp
or
sub
and
stc
push
add
sbb
jns
sbb
sbb
adc
pop
add
jg
add
inc
mov
rorb
mov
mov
mov
xor
jnp
call
aaa
and
inc
adc
mov
dec
add
and
ds
movsb
adcl
add
add
or
leave
test
pusha
es
dec
ret
pop
int3
xchg
dec
ss
or
jo
jecxz
fdivs
mov
push
mov
and
jp
inc
cmpsl
jae
cmp
xchg
pop
jne
mov
pop
lret
cmp
nop
push
adc
push
out
movsb
rolb
hlt
pop
pop
mov
loop
in
dec
pop
out
out
xchg
fs
pop
push
push
out
sahf
dec
inc
cmp
clc
xor
cs
sbb
inc
popf
out
jmp
push
imull
lret
in
das
pop
int3
and
pop
divl
adc
xor
pop
nop
xor
push
push
add
pop
sbb
add
mov
xchg
pop
mov
cmp
loopne
push
fadds
loopne
lock
test
iret
clc
add
push
pop
mull
add
or
adc
jne
inc
pop
cmpsl
shr
add
mov
jns
xchg
cwtl
inc
ds
stc
inc
pop
test
xor
call
inc
inc
push
pop
jns
jns
sbb
daa
dec
sbb
hlt
mov
jns
add
or
inc
push
jno
ds
dec
data16
mov
mov
pop
or
adc
push
hlt
or
ja
test
pop
cwtl
xor
loop
cmpsl
fisubl
add
pop
push
pusha
adc
cmpsl
incl
test
imul
in
movsb
sub
xor
andl
dec
shrl
sub
sub
cmpsb
xor
sub
sub
and
sub
sub
pop
mov
pop
and
repz
sub
or
or
sub
imul
inc
lcall
xor
sub
sub
sub
adc
ljmp
scas
push
xchg
js
sbb
enter
mov
adcb
xchg
adc
jp
loopne
and
loopne
add
mov
cmp
je
push
fldl
and
inc
mov
popl
push
xchg
fimull
scas
or
push
lret
dec
add
ret
insb
push
sahf
sbb
jle
jle
addr16
add
arpl
arpl
call
adc
inc
shrb
or
dec
xchg
sbb
push
jmp
sub
and
rolb
mov
bound
adc
popf
rcrb
and
mov
xor
push
xchg
gs
inc
iret
push
xchg
ffree
adcb
inc
nop
adc
call
push
hlt
mov
iret
enter
inc
rorl
push
sub
aas
and
in
fnsave
mov
xor
mov
or
sub
cld
push
cmp
cmp
xor
inc
jmp
test
sub
push
je
test
push
mov
cmp
pop
es
jae
mov
rcrb
nop
add
cs
push
ja
imul
xchg
add
pop
mov
inc
dec
and
cld
add
or
lahf
dec
mov
xor
push
jno
jns
mov
lods
ret
daa
adc
pop
enter
add
js
mov
dec
lret
rol
mov
jns
sub
outsl
mov
cmpsb
mov
push
xor
ret
inc
loop
pop
sbb
and
popf
dec
fmull
pop
cmpb
mov
jns
mov
into
daa
mov
cmpsb
mov
pusha
sub
sbb
sbb
cmp
push
adc
lcall
bnd
ljmp
icebp
sbb
cmp
push
scas
sub
icebp
enter
dec
aam
inc
sbb
inc
and
inc
xchg
inc
lods
cmpsb
xchg
inc
inc
push
cmc
fiaddl
jne
cs
jmp
outsb
cmpsl
pop
aam
inc
inc
push
fs
inc
fstl
push
aam
push
test
call
les
push
sbb
pop
nop
pop
dec
gs
adc
dec
lods
sub
sbb
xchg
loope
enter
add
mov
inc
inc
push
mov
inc
pop
or
push
lcall
push
and
addb
mov
sub
filds
adc
and
xchg
inc
frstor
inc
mov
adc
jbe
push
in
fidivrs
cwtl
dec
and
xor
mov
jl
cmp
loopne
and
pop
stos
xchg
rcrb
fstpl
lret
int
inc
inc
cs
mov
mov
lea
push
or
pusha
mov
fs
mov
mov
test
xor
push
inc
pop
sub
or
lret
pusha
and
aaa
je
adcb
and
das
push
pop
xchg
inc
popf
nop
inc
add
inc
scas
adc
mov
mov
fisubrl
and
jnp
ret
or
je
xorb
icebp
mov
mov
and
jae
inc
movsb
jbe
movsb
cmp
mov
push
jne
xor
fldl
pop
mov
xor
jo
dec
cld
sub
nop
xchg
sub
push
or
dec
mulb
inc
jmp
dec
or
mov
inc
adc
mov
mov
xor
cwtl
mov
sbb
sbb
arpl
adc
loopne
movsb
mov
xor
ret
mov
pop
dec
sbb
in
ds
cs
mov
sub
mov
loope
xor
shlb
mov
je
pop
aaa
js
mov
push
mov
cltd
sbb
sbb
sbb
push
cmp
sbb
sbb
cmp
sbb
sub
pop
cmp
dec
and
jmp
or
add
arpl
fcomip
dec
nop
outsb
bound
out
dec
or
cmp
enter
xorb
mov
or
mov
scas
call
es
mov
or
lods
jecxz
dec
pop
call
daa
xor
mov
xor
jo
in
mov
popf
inc
aam
bt
xchg
xchg
lret
pop
jo
mov
test
inc
nop
movsl
aam
nop
pushf
cmp
scas
sub
in
aam
aad
out
or
dec
mov
mov
cmp
fwait
cmpsb
jp
mov
mov
dec
aad
mov
test
dec
jl
sbb
xor
xor
xor
pushf
push
aam
sbb
ja
sbb
xor
aad
push
rcll
inc
lahf
enter
xchg
nop
xor
inc
nop
inc
shrl
xchg
aad
divb
xor
es
sbb
cmpsb
mov
daa
ficoms
add
sub
push
mov
inc
leave
add
mov
mov
sub
mov
add
repz
das
push
push
add
hlt
or
adcb
in
add
and
or
jnp
or
xor
mov
xor
aam
daa
xchg
enter
cmp
xchg
xchg
mulb
lock
mov
dec
lock
daa
and
and
or
cmp
mov
mov
mov
adc
js
dec
jnp
inc
add
fistpl
enter
jnp
nop
xor
pusha
jp
pop
adc
jns
hlt
push
dec
loope
xor
add
lahf
call
add
loopne
cltd
inc
or
sti
loopne
mov
and
out
roll
add
jbe
fcoml
cs
xlat
or
pop
nop
fsubrl
xchg
int3
or
add
movsb
adc
pop
pop
movsb
sarl
xchg
roll
call
xor
stc
loopne
ret
subl
pop
sti
inc
stc
adc
stc
cs
pop
ret
stc
movb
push
stc
inc
ret
std
and
push
mov
sar
push
fdivs
mov
mov
push
aas
call
pop
jl
test
inc
and
push
stc
mov
mov
aaa
jmp
mov
in
dec
push
call
and
stc
xchg
call
push
fst
enter
in
jl
clc
adc
frstor
xor
cmpsl
mov
daa
adc
jne
stc
sub
xor
jmp
daa
fnstsw
dec
push
xchg
in
fsubrl
inc
xor
or
pop
jmp
gs
movsb
jmp
sbb
mov
sub
xorb
je
add
fcmovnu
fildl
enter
pop
add
mov
pusha
mov
adc
xchg
or
ss
enter
sbb
inc
push
inc
aas
iret
aam
lock
into
outsl
adc
inc
adc
call
push
test
xor
int
add
inc
cs
sbb
add
pop
leave
push
sub
jmp
sti
lods
mov
sbb
ret
call
aaa
adc
arpl
test
fdiv
je
xor
jge
mov
test
sub
out
xchg
js
jl
addb
dec
inc
sub
or
xor
and
add
mov
shrl
inc
mov
stos
rol
aad
stos
xchg
loope
cmpb
jl
xor
test
pop
inc
adc
jno
push
jb
shrl
cli
lods
gs
pop
pushf
rcrl
jge
add
or
out
jnp
mov
js
shll
xchg
mov
nop
fxch
popf
arpl
push
test
add
pop
push
sbb
pusha
or
xchg
and
pop
cmp
pusha
xor
adc
push
sbb
and
pop
mov
leave
dec
in
xchg
pop
adc
jecxz
cmp
push
fdivs
scas
mov
xor
mov
sbb
lahf
movsl
xor
pop
repz
push
push
jns
cwtl
hlt
xchg
pushf
mov
jecxz
adc
xor
cmp
cmp
jo
xor
jb
adc
adc
pusha
sbb
adc
pusha
sbb
adc
adc
jp
in
and
fldcw
aam
jns
mov
roll
fsts
rcrl
enter
shlb
pop
sbb
mov
or
stos
mov
imul
push
adc
leave
sbbb
inc
jo
push
bound
xchg
add
sub
lock
xchg
adc
add
movlps
inc
mov
fwait
ss
das
mov
fldl
inc
adc
in
fwait
xchg
mov
mov
outsb
adc
pop
adc
ss
add
dec
xchg
xchg
int3
inc
adc
push
pop
jp
adc
dec
jmp
or
ss
imul
xchg
adc
sub
mov
mov
mov
dec
inc
jmp
push
movsl
movsl
mov
fsubrl
sub
nop
rclb
movsl
movsl
adc
out
adc
jnp
in
pop
inc
and
push
mov
lcall
sub
and
adc
push
lret
pop
adc
xor
xorl
in
ds
insb
xor
push
inc
aaa
and
sbb
dec
in
cmpl
stos
dec
cmp
sub
and
xor
sarb
push
dec
mov
sbb
pop
mov
fimuls
push
add
dec
dec
out
mov
lds
lea
cmp
add
lret
jge
mov
popa
arpl
insl
lds
push
jno
dec
xlat
lds
gs
adcl
sbb
adc
in
dec
sahf
in
mov
or
dec
fsubl
mov
fs
pop
xor
mov
pop
pop
aaa
test
call
cmpl
and
add
push
pop
aam
jb
outsb
push
pop
loop
test
nop
pop
push
leave
mov
push
frstor
ret
outsb
push
pop
dec
pop
xchg
in
outsl
push
sub
push
pop
mov
xchg
sub
stos
add
loope
sbb
cmp
ret
push
gs
inc
lret
sbbl
pop
or
or
mov
aam
ljmp
mov
pop
enter
push
jne
pop
sarb
aaa
out
jns
adc
jno
sbb
aaa
pop
hlt
aam
lcall
shr
cmc
add
and
pop
push
outsl
mov
loopne
sub
and
dec
sub
enter
add
push
scas
pop
test
jle
dec
sub
add
or
iret
shlb
xchg
insb
sub
adc
pop
pop
mov
or
pop
cs
adc
enter
in
pop
in
rorb
in
loopne
popf
sbb
push
adc
mov
hlt
sbb
in
mov
mov
jb
push
mov
mov
dec
mov
inc
mov
sub
and
or
add
call
mov
sarb
xchg
mov
mov
test
xchg
xchg
xchg
mov
nop
mov
xchg
mov
push
cmp
inc
push
pop
mov
sbb
and
ds
push
jb
sbbl
pop
cmp
inc
cld
mov
sbbl
fstpt
push
repnz
mov
and
cmp
mov
mov
cmpb
inc
push
jb
mov
in
pop
cmp
mov
repnz
sbbl
cmp
inc
push
stc
mov
sbb
and
fdivrs
jb
xorl
pop
cmp
inc
xchg
mov
sbbl
jne
push
pop
inc
push
repnz
mov
and
cmp
cmp
dec
and
sbb
or
mov
xchg
xchg
data16
shll
and
xchg
and
or
sarl
and
scas
mov
cld
xchg
mov
add
and
imul
sbb
in
sbb
inc
and
das
lcall
cmp
cmp
inc
dec
or
stc
mov
inc
xor
inc
xchg
adcb
cmp
mov
insb
push
cmp
rol
loopne
daa
adcb
and
into
aad
addl
or
in
xor
add
mov
sbb
sbb
mov
sahf
and
mov
xor
sub
inc
leave
sub
mov
push
push
dec
push
dec
enter
xor
dec
push
ret
rorb
push
adc
push
mov
hlt
imul
notl
mov
icebp
andl
sbb
or
and
sub
roll
pushl
cwtd
xchg
sbb
push
jp
enter
add
push
cwtl
sub
adc
imul
mov
shll
test
scas
mov
push
pop
outsl
add
outsl
xchg
xor
dec
ret
dec
cmp
inc
outsl
jmp
ret
or
pop
outsl
in
mov
in
nop
movsl
outsl
jecxz
fs
inc
adc
and
or
push
pop
mov
les
mov
sub
push
outsl
mov
adc
dec
outsl
push
xchg
enter
outsl
push
pop
mov
and
jb
dec
imul
cmp
leave
sarb
pop
mov
sbb
push
outsl
cmpsb
sub
cmp
dec
and
cmp
pop
sbb
je
outsl
pop
and
xchg
push
inc
xor
mov
push
add
je
mov
shlb
dec
outsl
js
lea
shl
jmp
adc
fstl
subl
inc
mov
outsl
and
scas
je
jp
outsl
mov
dec
ja
mov
add
mul
shlb
andb
and
lret
loop
and
nop
movsl
cmp
mov
pop
mov
outsl
fidivl
dec
mov
pop
mov
outsb
push
pop
adc
mov
and
outsl
cmp
in
jbe
pop
sbb
test
fwait
and
jmp
push
outsl
pop
rorb
pop
mov
outsl
mov
and
sub
add
add
outsl
cmp
push
pop
push
shrb
jmp
shll
outsl
xor
lock
jb
mov
scas
cmp
pop
cld
sub
adc
dec
rorl
push
call
push
push
outsl
mov
jp
pop
mov
and
orl
mov
stos
iret
insl
fdivr
xchg
nop
movsl
ja
outsl
dec
sbb
pusha
jmp
std
mov
adc
cs
pop
mov
and
pop
sbb
sbb
sbb
outsl
lods
call
outsl
xor
xchg
sbb
sbb
outsl
xlat
xchg
xor
enter
sbb
mov
adc
outsl
aas
fs
dec
and
push
aaa
mov
shrl
imul
outsl
in
push
pop
mov
lret
xor
sbb
push
add
pop
jp
outsl
cmp
nop
and
into
jnp
mov
je
nop
test
outsl
pop
sbb
aas
imul
sahf
popa
outsl
sub
dec
out
xchg
sbb
popl
mov
cs
mov
mov
outsb
or
pop
outsl
inc
test
test
jg
cld
nop
movsl
cmp
pop
sbb
mov
push
push
xor
or
xor
xchg
cmp
rorb
and
ss
outsl
mov
enter
outsl
xchg
nop
and
xchg
or
pop
fidivs
outsl
dec
sbb
dec
push
sub
loopne,pn
push
inc
fs
push
xchg
aad
or
sub
fs
lock
jo
shlb
shrb
movsl
rcll
sub
cmpsb
ljmp
xchg
and
rcrb
loop
shr
outsl
jb
std
mov
outsl
nop
movsl
negl
aad
fidivrs
and
jmp
add
outsl
nop
mov
sbb
outsl
xlat
inc
add
inc
and
dec
jp
mov
loop
andb
test
movsl
xchg
enter
repnz
fs
mov
call
movsl
roll
mov
outsl
pop
ret
loopne
outsl
stc
xor
add
sub
insb
outsl
sub
cs
xchg
repnz
mov
jno
nop
movsl
sbb
outsl
enter
fimuls
pop
jmp
outsl
addr16
pop
subb
les
jno
ja
jb
inc
inc
xchg
out
lods
jo
enter
loop
and
dec
popl
pop
shrb
and
outsb
and
mov
addr16
addr16
inc
and
aad
call
xchg
inc
jb
or
into
dec
mov
mov
out
mov
mov
out
adc
and
and
add
push
cltd
jmp
inc
iret
mov
nop
ror
inc
mov
dec
iret
sub
mov
cmp
xchg
cmp
sti
add
jmp
xlat
insb
dec
xchg
inc
movsb
mov
push
adc
cwtl
push
pop
addr16
scas
ret
cld
jmp
cmp
aaa
cwtl
subl
shlb
popf
in
push
test
xor
clc
xorb
lahf
push
push
or
inc
cltd
push
cmp
mov
testl
sbb
scas
pop
fldz
movb
push
in
mov
jle
jmp
fdivrl
inc
xor
test
dec
cmp
cmpsl
push
cs
repz
repz
jo
aam
out
sahf
out
test
cmp
bound
jp
xchg
cmpsb
mov
into
fsubrp
add
repz
jb
iret
repz
cwtl
cmpsb
mov
fdiv
sahf
out
ds
push
sub
dec
jns
out
pop
data16
cwtl
repz
out
loopne
push
stos
iret
repz
and
push
pusha
insb
cmp
repz
adcb
add
mov
int3
mov
adc
adc
push
pusha
and
sub
inc
fsubl
xor
repz
ljmp
sbb
jns
sub
push
outsb
cmp
jl
int
repz
clc
mov
mov
push
cmp
mov
xchg
mov
add
adc
pop
add
mov
push
sahf
idivl
mov
add
out
sarb
adc
adc
push
ds
sarl
sbb
sbb
xchg
out
sbb
or
int
xchg
out
test
push
pop
sahf
mov
and
pop
cmpb
ds
repz
jp
cmp
hlt
call
cwtl
shlb
push
push
push
push
movb
testl
or
add
out
data16
xchg
or
xor
dec
repz
sbb
add
xchg
hlt
call
aam
enter
repz
sarb
mov
mov
iret
repz
mov
iret
repz
je
insb
iret
repz
push
push
cmp
repz
dec
dec
inc
inc
repz
repz
xor
sub
repz
sub
or
nop
sahf
out
sahf
in
les
jns
and
inc
popl
ror
cmp
mov
inc
lcall
clc
mov
jns
out
int3
lods
test
cmp
out
in
enter
outsl
xchg
dec
xor
push
in
mov
push
mov
inc
sub
push
pop
sub
push
mov
sub
add
pop
push
sub
adc
aaa
xor
push
push
add
inc
pop
cmp
or
scas
fwait
lods
inc
xchg
insb
out
mov
ja
adc
ja
sub
adc
ss
add
inc
pop
mov
loopne
or
sbb
xchg
popa
out
daa
add
and
xchg
int
fdivrl
xchg
add
push
daa
jnp
pop
pop
and
push
mov
fsubrs
outsb
inc
add
pop
mov
mov
in
pop
jg
das
xor
lcall
ss
xor
sbb
xor
add
roll
call
adc
add
aas
jb
or
cs
test
cmp
jge
and
fmuls
cmp
cmp
push
adc
pop
inc
inc
fwait
push
lods
push
out
aas
sbb
dec
dec
mov
add
stos
dec
rorl
insb
mov
aas
mov
push
int3
xchg
pop
xorb
mov
ja
stos
ja
mov
outsl
xchg
adc
jg
mov
mov
pop
or
unpcklps
xor
xchg
adc
in
add
push
nop
imul
jbe
adc
push
mov
test
aaa
les
outsl
andb
in
and
sbb
fiadds
iret
in
adc
jbe
jo
jbe
ud2
jno
int
xchg
jno
push
xchg
movsl
add
mov
leave
in
and
push
push
sbb
shrl
cmp
adcb
and
cld
andb
xor
pop
and
pop
inc
aas
inc
xor
adc
outsl
jne
push
cmpsl
mov
mov
mov
cmp
outsl
and
loop
pusha
data16
sbb
xchg
mov
xor
movsl
mov
push
cmpsl
mov
lret
sbb
jecxz
dec
pushf
xor
scas
xor
xor
or
push
add
sbb
push
lret
pop
add
sub
xor
sbb
sub
dec
dec
adc
pop
sub
xor
lea
lea
mov
ret
mov
dec
xor
iret
lea
and
ss
aaa
xlat
and
rcrl
inc
xor
inc
fbld
push
rcrl
rcrb
jno
shll
sbb
aas
and
iret
rcrl
inc
inc
jae
fcomps
xchg
inc
inc
and
inc
rcll
fmuls
jecxz
sbb
rcrl
psubusb
rcl
arpl
push
xlat
push
and
inc
xor
dec
pop
rcrb
xor
xor
sbb
sub
push
je
add
mov
xchg
add
jbe
aad
mov
pop
aam
inc
inc
or
xor
cmp
pop
incb
dec
or
movsb
xchg
testb
cmp
repz
xchg
nop
mov
je
pop
push
pop
sahf
out
sahf
dec
inc
inc
cmp
xor
sahf
out
xor
and
repz
out
sbb
add
xchg
out
outsl
fs
xchg
in
push
in
sahf
out
sahf
enter
test
inc
sbb
jns
jl
out
fidivrs
fs
push
jnp
cmpsl
mov
and
add
sahf
out
out
xchg
push
enter
jns
out
test
cwtl
nop
mov
repz
jo
pop
inc
sahf
ja
cmp
sub
push
adc
cmp
sarl
loopne
mov
repz
insb
pop
adc
inc
sub
add
add
pop
jnp
lret
lock
dec
test
into
xor
dec
push
test
push
stos
sbb
sub
pop
js
push
push
sbb
lods
mov
inc
call
insl
shr
leave
pop
jg
sub
pop
enter
pushf
testb
xchg
outsb
stos
lcall
xchg
cmpsl
lods
push
sbb
inc
aam
mov
mov
aas
iret
mov
inc
and
incl
mov
cmp
add
pop
xor
mov
mov
mov
dec
jnp
iret
xor
xor
sahf
xor
sbb
sub
xor
xor
xor
aaa
fbstp
fisttps
jecxz
arpl
cmp
xor
notb
cmp
bound
jg
mov
cmp
sahf
fisttps
fdivrs
bound
cmp
xchg
lahf
cmp
das
test
cmp
push
and
pop
ds
ds
call
mov
aas
fs
imul
aas
jecxz
call
cwtl
dec
xchg
mov
and
sub
or
popa
cld
xor
mov
mov
pop
push
shl
loope
xchg
push
out
xor
repnz
xor
xor
mov
xor
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
xor
clc
mov
xor
das
xor
out
xor
xor
and
sub
std
pop
sub
sub
xor
xorb
xor
xor
sbb
ss
xor
xor
xor
xor
xor
push
mov
pushl
shlb
enter
push
xor
and
sub
insb
ss
sbb
jecxz
ss
push
or
incl
jp
aaa
cmp
insb
cmp
stos
popa
dec
xchg
leave
jbe
cmp
sbb
sbb
and
aas
jl
mov
sub
xor
jp
test
mov
test
repnz
cmp
pop
dec
cmp
rolb
stos
push
fildl
cmp
dec
cmp
push
ret
cmp
cmp
inc
idivb
cmp
cmp
nop
xor
cmp
aad
mov
cmp
mov
inc
ds
ds
ds
cmp
dec
out
nop
icebp
xchg
xchg
mov
aas
repnz
xor
wrmsr
and
inc
xor
xchg
xor
xor
xor
lods
xorb
and
xor
inc
sbb
or
xor
dec
in
dec
xor
popa
jl
mov
xor
mov
outsl
test
lret
push
add
sub
pop
mov
mov
aaa
in
lock
and
xchg
sub
cmp
data16
pop
incl
cmp
xchg
xchg
xor
cmp
into
in
bound
divps
inc
dec
ss
cmp
idivb
lret
jp
mov
cmp
push
xor
jnp
subb
cmp
cmc
call
cmp
mov
or
loopne
in
jmp
lock
add
sbb
cmp
xchg
xor
inc
jp
fdivr
lea
insb
cmp
cmp
cmp
cmp
cmp
sub
ds
cmp
push
ds
ds
clc
aam
clc
pop
es
adc
and
dec
aas
push
aas
or
sbb
pop
ficompl
out
xchg
xor
inc
daa
aaa
lds
loop
jg
mov
mov
cmc
xor
xor
shlb
fcomip
sub
inc
xor
insl
xor
test
sbb
fdivr
xor
adc
decl
loope
xor
aaa
jnp
jecxz
adc
mov
or
cmp
xchg
shll
inc
adcb
inc
orl
ljmp
lcall
inc
cmp
mov
mov
pop
cmp
outsl
sub
add
ss
sub
jg
cmp
ja
or
cmp
cmp
cmp
cmp
cmp
mov
push
push
addr16
cmpb
sbb
pop
cltd
cmp
cmp
cmp
sbbb
xor
sbb
aas
sub
pushf
pop
inc
sbb
inc
popa
cld
jg
outsl
or
js
lock
xor
jl
mov
adc
xor
push
cmpsb
xor
xor
decl
add
xor
xor
mov
jg
xor
out
push
adc
sbb
das
ss
mov
mov
aaa
pop
mov
sub
pop
cmp
push
jecxz
test
cmp
fdivp
cmp
cmp
cmp
outsl
test
mov
bound
imul
clc
pushl
jg
cmpsb
cmp
cmp
cmp
test
lahf
cmp
aas
cmpb
iret
aas
loope
pusha
add
clc
lcall
sbb
sub
cmp
xor
test
xchg
test
icebp
pop
mov
fbstp
icebp
push
push
scas
or
enter
cmp
hlt
xor
or
ss
aaa
gs
cmp
jecxz
icebp
cmp
cmp
cmp
scas
or
jo
mov
xor
out
push
out
test
adc
outsb
and
xor
pop
push
into
sub
cmp
jb
push
inc
jnp,pn
mov
lcall
test
out
dec
pusha
or
or
adc
add
and
je
sbb
push
jl
sbbb
mov
sbb
xor
je
mov
sbb
xor
sbb
lret
mov
in
or
push
add
add
daa
je
int3
out
cmp
mov
push
pop
enter
jl
sbb
test
orl
fcmovb
xor
int3
xor
mov
sbb
mov
inc
sub
mov
xor
xor
adc
clc
stos
dec
xor
cmp
inc
xor
icebp
aaa
sarb
push
xor
xor
mov
xor
pushl
mov
nop
xor
orl
xor
mov
rolb
pop
inc
mov
fsubs
mov
divb
je
xor
lcall
or
jle
jp
cmp
or
aaa
push
xor
push
push
jbe
mov
int3
xor
cmp
je
xor
mov
mov
xor
sbb
fmull
loopne
cmp
stos
cld
stos
xor
xor
adc
dec
xor
xchg
xor
xor
insl
xchg
roll
jnp
loop
xor
bound
xor
pusha
sbb
mov
movsb
cmp
icebp
cs
shlb
add
push
pop
stos
sbb
daa
orl
jl
call
xor
dec
xor
data16
add
xor
jb
subl
repz
cld
cmp
inc
xchg
loopne
orl
pop
xor
mov
jo
jmp
mov
xor
xor
xor
xor
xor
xchg
sarb
test
lods
and
xor
sbb
sbb
push
fiaddl
sbb
sub
pop
jo
pop
loope
cmp
or
aas
add
leave
push
pop
mov
inc
adc
xchg
scas
push
iret
jb
xchg
inc
gs
call
xchg
cmp
adc
inc
outsb
test
xor
sarl
test
insb
pop
dec
mov
aas
fisubrs
jmp
mov
stc
adc
fildl
lds
pushl
stc
xchg
cmp
inc
pop
adc
sub
in
fdivs
pusha
rol
push
outsl
insl
push
pop
in
dec
ror
sbb
lcall
adc
mov
xchg
xor
sbb
push
dec
jo
lahf
push
shll
mov
push
arpl
mov
clc
pushl
sub
out
dec
inc
pushf
mov
pop
xchg
inc
test
mov
mov
sahf
out
cwtl
dec
shlb
hlt
xor
lcall
clc
dec
inc
fcompl
push
lds
jno
add
or
scas
cmp
incl
mov
cmp
out
dec
lods
dec
call
xchg
mov
mov
out
adc
ljmp
das
xchg
aaa
fildl
adc
mov
jle
mov
pushl
inc
ljmp
jl
sub
iret
rcr
pushf
inc
leave
mov
dec
or
mov
lock
fnstenv
or
pusha
sahf
out
dec
js
je
or
xchg
decl
add
rcll
inc
mov
jne
mov
xchg
daa
mov
mov
xor
mov
call
enter
pop
test
cmp
ja
dec
mov
jge
xchg
xor
adc
clc
lret
sub
sti
cld
push
jg
or
sbb
jp
mov
mov
fisubs
sbb
dec
push
xor
adc
jno
fcomi
sbb
outsb
inc
adc
dec
dec
jo
jmp
in
sbb
dec
mov
fwait
cmp
cmp
lods
in
pop
jle
mov
incl
jnp
movb
add
test
out
push
fmul
js
push
or
dec
orb
add
cmp
cwtl
and
pushl
fisttps
enter
loopne
out
adc
sub
pushf
and
jnp
push
test
inc
adc
incl
pusha
stos
pop
mov
xchg
loopne
inc
xor
loop
sub
or
jmp
pop
cli
and
cli
xchg
loope
mov
mov
jo
dec
hlt
iret
pushf
gs
dec
sub
lahf
decl
and
mov
repz
js
icebp
cwtl
and
inc
mov
imul
jmp
in
in
inc
cmp
outsl
out
bound
das
jae
jae
out
subb
add
imul
add
inc
stos
xchg
push
or
push
icebp
aaa
xchg
test
insl
pop
xchg
jg
jmp
mov
negl
adc
ds
shrb
sbb
pushl
cld
fsubl
andl
add
xchg
pop
test
jmp
add
xchg
rcr
lcall
sbb
sbb
imul
adc
pushl
adc
mov
mov
adc
loopne
stos
jle
and
jbe
cmpsb
push
inc
fcoms
push
push
divl
push
repz
adc
test
xor
sbb
popa
test
add
sti
ljmp
clc
xor
clc
xchg
jno
adc
mov
pop
push
mov
cwtl
sub
jmp
scas
clc
call
add
adc
push
dec
cmpb
bound
aad
pushl
shrb
inc
dec
adc
pop
and
outsb
inc
push
jmp
dec
dec
push
jne
jb
or
pushl
jmp
addr16
loope
pop
sub
cli
lea
xorl
bound
fstpl
or
sbb
ljmp
jg
incl
loopne
or
push
inc
sub
or
cmp
push
jmp
js
mov
xchg
xchg
jne
xlat
xor
movsb
movb
pop
inc
xor
adc
jp
sbb
jo
mov
cltd
dec
call
lcall
and
je
and
incb
mov
jmp
decl
mov
out
lcall
or
and
fdivl
dec
jnp
cmp
incl
mov
cmp
test
ds
fs
movl
xor
lcall
pop
fs
call
add
add
or
lahf
xchg
push
adc
mov
xchg
cmp
ret
mov
adc
dec
xchg
popa
adc
or
pop
test
iret
xor
mov
cs
push
lahf
adc
sbb
pop
test
jg
pop
test
cmpsb
jmp
adcl
push
mul
add
les
inc
mov
pop
inc
ja
popf
sub
js
clc
ret
fs
decl
aad
push
rorl
enter
dec
mov
pop
jge
les
mov
rcrl
mov
call
dec
das
fdiv
mov
mov
and
and
mov
and
and
pop
push
icebp
mov
jg
mov
imul
xchg
sbb
and
pop
pavgw
ljmp
rclb
lds
jnp
sub
push
and
pop
lahf
pop
or
dec
data16
mov
cmc
insl
insl
xor
push
dec
stos
pushf
in
jge
call
fdivr
lcall
sbb
inc
jg
loope
fmul
sarb
ret
inc
or
fbstp
fucomip
ljmp
in
jl
int3
inc
mov
push
mov
add
push
xchg
loope
dec
add
fidivrs
adc
sub
sub
sbb
das
jp
dec
dec
push
into
pop
pop
repnz
xor
sub
mov
insl
insb
mov
and
cwtl
jmp
mov
dec
mov
push
loop
lret
es
test
ljmp
inc
mov
cmc
mov
xchg
jmp
scas
pop
and
ljmp
push
add
sarl
xor
fwait
lock
out
mov
cltd
jge
out
add
cs
xchg
sub
int
dec
dec
stos
lcall
mov
mov
leave
andb
jl
mov
iret
and
push
lods
test
push
mov
push
std
inc
sub
or
flds
mov
mov
mov
add
pop
adc
stos
mov
sub
cmp
xchg
stos
jmp
inc
in
jnp
repz
xchg
cmp
xchg
decl
pop
pop
jno
loopne
mov
shrb
fadds
dec
fdivrs
sbb
mov
xchg
loop
lcall
mov
pop
insb
xor
out
insl
cmp
jecxz
fisubrl
inc
mov
or
mov
adc
popa
mov
jecxz
shrb
out
push
repz
lds
xchg
push
mov
in
movb
push
sbbl
out
xchg
rorl
lahf
jnp
mov
hlt
cmc
sub
mov
lcall
push
mov
mov
pop
jecxz
xchg
sub
jae
jl
mov
push
stc
mov
sub
jg
insl
mov
xchg
jp
cmpsl
outsb
xchg
jmp
bound
lock
call
js
xlat
and
icebp
std
cmp
add
sub
jno
popf
fbstp
sbb
or
cltd
cltd
lahf
int3
pop
lods
unpcklps
fstps
call
and
or
aas
and
mov
call
fwait
pop
filds
popf
lret
xchg
pop
inc
add
mov
hlt
xlat
pop
aaa
in
ljmp
clc
decl
mov
mov
jmp
cmp
test
mull
aam
aad
js
xchg
inc
hlt
jns
pushf
shrl
notb
fwait
or
jnp
xchg
sarb
or
ficomps
imulb
push
je
fs
out
mov
jle
xchg
jle
sub
loopne
xchg
add
jg
pushl
inc
out
add
xchg
sbb
cmp
mov
shll
push
icebp
aad
insb
decl
shrl
jge
addl
push
insb
out
mov
jnp
jbe
call
shll
adc
cmp
add
ljmp
xor
pop
pop
out
pushf
pop
jge
ljmp
push
out
mov
aaa
mov
mov
lret
add
fs
mov
inc
sbb
mov
cmp
mov
ljmp
or
cwtl
jp
in
hlt
xchg
leave
shlb
decl
imull
std
repz
shll
int3
imul
addl
and
dec
inc
push
sar
mov
aad
mov
repz
insb
mov
ret
call
inc
fisubrl
call
mov
jecxz
jle
arpl
mov
dec
inc
or
jle
out
popf
add
in
adc
sub
outsb
and
cld
push
js
lcall
jl
fldenv
dec
sbb
jecxz
inc
push
test
push
scas
and
jmp
mov
mov
push
mov
insl
icebp
xor
enter
sub
jae
cmp
ljmp
jg
out
add
xor
rcrb
push
stos
push
fisubs
pop
xchg
movaps
jmp
pop
incl
mov
push
stc
or
mov
xor
fsubs
pusha
mov
xchg
sub
fcos
mov
loopne
ret
xor
pop
sahf
inc
mov
call
ror
and
pop
es
mov
mov
jmp
scas
ljmp
ljmp
xchg
test
pop
movsl
push
pop
mov
movsb
mov
mov
lds
out
add
loopne
lret
sub
pusha
mov
adc
lods
push
xchg
sub
pop
and
dec
ljmp
push
shlb
cmpsb
stos
pop
in
mov
femms
pop
mov
xor
pushf
int3
inc
sub
push
gs
inc
das
mov
xchg
fisttpll
mov
dec
aad
cmpsb
rcll
pop
pop
ja
js
sub
shll
push
jo
or
jmp
inc
dec
xlat
les
add
adc
fsubl
movsl
mov
jge
test
ljmp
pop
ficoml
jne
and
jle
ficompl
scas
test
xchg
out
pop
int
pop
ficoml
cld
add
lcall
sbb
cmp
adc
or
pop
ljmp
xor
mov
decl
ret
jmp
jp
or
mov
xor
pusha
aad
leave
push
push
arpl
add
jmp
push
pop
test
mov
mov
mov
shrb
and
out
aas
jnp
mov
push
sbb
add
decl
notb
arpl
stc
outsb
dec
mov
mov
mov
adc
push
pop
dec
push
fimuls
jne
mov
lcall
mov
outsb
ret
inc
mov
jmp
mull
ret
pusha
pop
das
jnp
sbbl
ret
das
push
rcll
add
nop
inc
sbb
decl
cltd
pop
xchg
dec
cmp
addl
andb
loope
mov
push
cmpsl
mov
jmp
shrl
jae
test
in
movsl
ds
adc
cmp
cs
call
sahf
cmp
sbbl
jg
mov
lret
popa
fs
sbb
ret
fadds
sub
out
movsl
ret
sub
fistpl
and
js
sub
mov
in
cvtps2pd
jg
cmpsl
jne
scas
into
insl
cmp
popf
pushf
lcall
jmp
xchg
fnstsw
push
addl
and
and
mov
jnp
lcall
or
fistpll
notb
sar
lds
sub
or
out
and
aam
jbe
xchg
xchg
cli
inc
mov
inc
xor
jbe
adc
pop
xchg
inc
mov
mov
jmp
int
mov
jp
test
pop
and
push
lret
cs
psubq
pop
sar
call
push
jecxz
sbb
in
sbb
adc
and
aaa
fnsave
or
repz
and
cmc
repz
cld
decl
xchg
loope
in
cli
movsl
inc
sub
cwtl
out
or
push
jae
cmp
test
decl
and
pop
mov
into
xchg
js
or
and
sub
cmpsb
pop
hlt
out
jb
hlt
adc
adc
leave
cld
inc
cld
incl
sar
or
ljmp
and
sub
inc
jg
adc
scas
push
int3
jp
xor
xchg
pusha
sbb
incl
adc
inc
pop
aaa
pop
xor
andb
push
xchg
mov
push
outsl
sahf
xor
adc
decl
cwtl
sbb
sti
inc
and
or
out
bound
call
ljmp
sub
inc
jecxz
push
sbb
test
ljmp
test
repnz
bound
fsubr
pop
inc
inc
xor
lret
pushl
out
rorl
mov
xchg
xchg
mov
in
lods
stc
movsb
push
pop
jbe
std
jmp
dec
divb
xor
jb
insl
mov
decl
das
decb
pop
jg
mov
hlt
loope
sub
imul
ljmp
jo
pushf
and
sub
lret
nop
xchg
xor
jb
out
jmp
das
cmp
shll
jnp
and
aad
add
adc
adc
pop
hlt
cmp
sar
incl
pusha
push
into
xchg
outsl
stos
push
addr16
ja
js
add
xor
cmpl
jmp
xchg
mov
test
clc
mov
sub
je
popl
mov
decl
sub
sbb
mov
repz
mov
shlb
orb
aam
out
out
xlat
cs
cli
call
rcrb
movsb
arpl
jmp
jo
rcll
fst
ret
or
addr16
rolb
pop
cmp
sub
jp
shr
pushl
and
jmp
aaa
cmpsb
jp
daa
fs
jno
enter
popl
mov
sar
mov
mov
jb
hlt
dec
mov
jg
cmp
xorl
hlt
sub
push
sahf
repz
scas
cs
push
inc
fstpl
mov
mov
ds
incl
or
mov
leave
and
push
xor
mov
jg
mov
push
into
jne
pop
incl
lcall
mov
imul
mov
mov
lock
cmp
pop
dec
adc
jmp
or
push
jl
decl
mov
cmp
lcall
insl
push
jle
adc
pop
push
mov
push
sbb
in
call
popw
scas
xor
jp
scas
mov
lock
incl
sbb
add
xchg
mov
jg
lea
inc
mov
outsb
inc
sbb
decl
loopne
and
push
sbb
and
push
cmpsb
nop
or
testl
repnz
cs
shll
fisubs
fistl
jecxz
jmp
jmp
mov
jl
pop
leave
stos
sub
and
les
mov
pop
lcall
and
xor
cmp
dec
fisubs
daa
sub
mov
outsb
mov
jbe
stos
add
popa
or
ljmp
in
out
imul
inc
aas
sbb
jns
loopne
clc
in
lcall
adc
xor
push
xchg
lds
add
stos
jge
inc
xor
call
push
mov
cs
aad
adc
adc
fistl
dec
call
add
pushl
mov
cltd
or
mov
xor
dec
pop
fldt
pop
mov
sti
jg
dec
movsb
lock
sub
pop
fs
pop
cmp
adc
sub
gs
add
mov
dec
and
call
shrl
pusha
repnz
dec
inc
push
es
gs
rcll
popa
sahf
dec
xchg
enter
jge
xchg
fdivr
call
add
xor
dec
pop
xchg
push
sub
mov
xchg
repnz
jb
shlb
adc
dec
push
jg
repnz
add
or
fs
nop
lcall
xor
mov
xchg
lods
and
insl
pushf
ss
sti
loope
and
les
xchg
jg
rcll
imul
dec
pop
and
pop
icebp
in
imull
and
or
lcall
xorb
jae
imul
sub
dec
adc
and
decl
dec
pop
popa
icebp
scas
mov
out
xlat
addr16
mov
js
adc
es
xchg
lcall
pop
dec
jge
or
mov
add
xor
decl
lock
mov
lods
xor
leave
push
gs
les
sar
mov
sbb
add
mov
xor
es
int3
daa
xchg
xchg
fnstcw
mov
push
adc
push
lcall
jmp
cmp
add
stos
mov
gs
ljmp
inc
push
arpl
cmp
out
fidivl
sbb
repz
es
popf
jbe
aas
adc
mov
sbb
xor
je
nop
xor
dec
lahf
js
adc
jge
pop
jnp
lcall
bound
adc
std
xchg
int3
push
sbb
push
addr16
add
jg
pop
sti
imul
lcall
pop
enter
pop
movsb
faddl
cmp
cmp
movsl
std
jbe
es
cmovae
jge
push
xlat
test
push
mov
push
cmp
push
or
shll
cld
lea
repnz
incl
pop
dec
inc
enter
sbb
cmp
addr16
xchg
jne
dec
fisubrl
adc
cmp
imul
mov
push
lret
and
pop
xchg
mov
call
xor
stos
cli
jbe
and
sbb
xchg
xor
xchg
cmpsl
xor
insb
xchg
test
sahf
xchg
ds
cmp
mov
xor
test
pushl
sar
add
popa
xchg
into
js
dec
and
dec
xchg
shl
or
jg
pop
lcall
adc
into
cmp
stos
je
mov
cli
cmp
jmp
push
jne
pop
sbb
repz
cltd
adcb
call
dec
mov
rcll
ljmp
loop
hlt
arpl
rol
filds
add
popa
sbb
jns
xor
adc
das
adc
sub
dec
testl
sbb
loope
imul
and
out
push
mov
xchg
dec
add
cmp
jno
dec
adc
test
push
sub
pop
inc
xor
inc
mov
or
adc
mov
jb
lcall
mov
rorb
xchg
mov
mov
data16
pop
pop
inc
sbb
ljmp
pushf
cmp
loopne
jns
test
gs
inc
push
mov
aaa
fstpl
inc
lret
shll
jp
lret
nop
repz
adc
mov
test
jnp
xor
lods
lods
adc
add
sti
shll
mov
es
fdivrl
stc
sub
jmp
jnp
repnz
std
bound
dec
mov
xchg
sbb
iret
aas
jp
pop
std
loope
sub
filds
pop
add
jb
or
out
inc
lahf
cld
push
pop
dec
test
fistpll
push
push
fadds
push
dec
out
out
mov
pop
xchg
cltd
and
xchg
fsubrs
sbb
mov
mov
add
ljmp
dec
sbb
aaa
out
add
fldenv
andb
sub
push
jmp
out
dec
stos
lods
or
mov
mov
adc
roll
sub
loope
or
pop
std
jmp
mov
pushf
enter
gs
jb
mov
xor
and
dec
pop
mov
sub
leave
jno
sarb
sbb
mov
hlt
xor
xchg
nop
mov
lcall
adc
and
jg
push
test
fcomip
ljmp
or
sahf
stc
mov
sbb
int
mov
ja
dec
xchg
cmp
aaa
ljmp
fdivrl
pusha
sbb
stos
jle
pop
cli
dec
outsb
pushf
adc
cmp
sbb
lahf
test
jnp
ljmp
js
and
stc
arpl
mov
arpl
into
test
and
lcall
jg
add
pop
and
ret
pop
dec
pop
arpl
mov
xor
xlat
dec
mov
cld
cld
into
jl
add
pop
hlt
sbb
repnz
jae
mov
sub
std
incl
xor
push
mov
shrl
fisubrs
aam
iret
mov
dec
cmpb
ljmp
sub
mov
lds
mov
mov
test
and
push
ss
inc
mov
test
mov
jg
fnsave
pop
cltd
imul
int3
outsb
or
mov
lds
or
cwtl
fcomip
dec
mov
sub
mov
or
pop
sub
inc
cmpsb
cmpsb
add
loop
adc
mov
sub
push
ljmp
movsl
addb
pop
mov
loopne
popf
outsl
and
icebp
dec
test
pop
adcl
sub
insb
dec
addr16
stos
and
ljmp
outsb
cmpsb
pushl
mov
popf
jo
out
and
inc
cmpsl
adc
mov
sbb
jmp
or
or
adc
xor
imul
cmpsl
cmpsl
adc
aaa
cld
inc
shrb
arpl
stos
sbb
outsb
int
outsb
xor
xor
push
rcr
mov
std
jp
and
jne
pusha
inc
arpl
dec
xorb
pop
jbe
sub
scas
cmp
out
decl
aam
jae
xor
int
fstpl
insb
and
out
aam
xor
cmpsb
scas
sub
fildl
call
pop
lds
cwtl
and
rorl
inc
les
lahf
arpl
mov
mov
cmp
jb
ljmp
push
in
sti
xchg
movsb
fxch
jecxz
loopne
or
inc
je
enter
inc
lods
test
ret
clc
enter
mov
clc
shll
fistps
sub
call
pop
enter
out
jle
xchg
cwtl
aaa
ret
pop
inc
dec
arpl
pop
mov
pop
adc
lcall
ja
mov
inc
add
pop
fcomps
jmp
sub
jg
xchg
push
sub
js
lods
add
push
loop
insl
icebp
jmp
int3
adc
xlat
scas
mov
pop
xchg
les
stos
pushl
xchg
inc
adc
in
repz
mov
add
inc
rolb
jle
jle
inc
mov
push
or
outsl
ds
out
inc
xlat
leave
in
out
into
cmc
cmp
fs
cmp
aaa
adc
imul
mov
loope
xchg
pop
pop
xor
pushl
push
movsb
xchg
sbb
and
dec
push
xchg
pop
rcrb
testb
js
in
ret
cmp
std
pushl
adc
jmp
aam
in
xor
sbb
lock
add
or
mov
into
outsl
outsl
int
push
dec
inc
ret
std
mov
pop
cmc
lcall
int3
mov
into
fildl
int3
imul
xor
lock
jmp
dec
leave
sbb
adc
pop
repnz
nop
aad
adcl
decl
adc
repz
pop
lea
shlb
xchg
ss
adc
clc
out
sti
jg
pushl
mov
je
test
lods
sti
pop
scas
sbb
rorl
cmp
decl
adc
movl
js
xor
push
or
push
and
incl
or
lea
cmp
xor
cmp
lods
lret
inc
xor
stc
mov
call
pop
jge
push
insb
data16
xor
cmp
inc
fdivrl
pop
mov
pop
mov
push
mov
daa
rcrb
loope
cld
or
sbb
lcall
fisttps
call
pop
mov
cmp
inc
aas
dec
dec
in
mov
stos
in
pop
pop
hlt
call
loopne
mov
test
cli
inc
scas
ja
inc
cmp
push
loopne
inc
mov
sub
test
push
xchg
andl
add
cmc
out
mov
cmp
jns
addl
xlat
imul
pushl
adc
int3
bound
or
dec
pop
mov
mov
fsubs
or
incl
popa
in
cmc
jbe
pop
dec
lahf
jmp
cmp
push
ljmp
hlt
sarl
lcall
cmp
sub
cmp
data16
addr16
fdiv
jae
xchg
xlat
cltd
incl
jg
mov
xchg
jbe
mov
jns
rclb
es
ljmp
push
rclb
mov
sti
call
jne
mov
mov
push
out
jmp
cltd
xchg
out
xchg
outsl
jmp
pop
mov
shlb
lret
sub
cli
test
bound
iret
insl
test
push
or
mov
pop
jo
adc
idiv
mov
aam
lahf
and
pop
and
icebp
and
js
mov
scas
out
pop
cmc
fisttps
mov
pop
dec
out
ret
sub
add
jmp
adc
sbb
decb
jae
xor
mov
jmp
ret
aad
repnz
lret
lock
int3
xchg
ljmp
or
mov
or
aaa
cmp
mov
je
mov
fbld
push
idiv
call
dec
ja
lahf
loopne
shr
inc
insl
add
stc
xchg
lods
stc
je
aas
or
mov
incl
lahf
test
add
pop
pop
insb
ja
lahf
xchg
sbb
xlat
lahf
and
call
cmpsl
lea
fisubrs
cs
mov
pushf
pusha
pop
jbe
lcall
or
das
insl
lahf
push
mov
lret
push
cmp
repz
sbb
fdivrl
insb
mov
test
xor
ja
nop
push
data16
nop
add
jmp
dec
xor
loopne
xor
mov
loopne
mov
test
mov
fidivl
pushl
jmp
inc
push
xchg
and
sbb
xor
lods
and
push
jg
mov
test
movsl
cmp
jge
out
lods
imul
fmull
cld
loop
adc
push
repz
or
xlat
xchg
bound
scas
insl
imul
cli
jb
push
pop
jae
repz
andl
mulb
xchg
jl
mov
js
adc
popf
mov
shlb
xorb
jnp
sub
mov
ret
decl
stos
add
pop
adc
mov
mov
in
inc
fiadds
std
jg
push
xchg
mov
jo
fstpt
insl
cmp
pushf
cmc
jge
jp
orb
mov
sti
call
sub
jns
mov
jle
and
and
in
push
or
fimuls
lret
loop
mov
sub
jmp
push
out
js
push
ss
movsb
jno
push
add
mov
ja
mov
dec
or
call
je
push
dec
mov
incl
ljmp
lods
std
aam
push
push
ret
cmp
ja
jmp
push
aam
push
pop
lds
movsb
scas
cltd
inc
or
movsl
aad
xor
cmp
in
fstpl
xchg
aaa
lret
mov
cmpsb
fcomps
xchg
dec
rorl
or
ror
push
xor
cmpsl
das
and
in
mov
in
push
or
mov
repnz
movsb
mov
lahf
je
or
cltd
mov
decl
sbb
inc
xor
mov
fwait
xor
ret
jp
cltd
mov
add
scas
pushl
jmp
xor
pop
ret
jecxz
lret
rorb
lret
popf
adc
add
xchg
pop
fistpl
cmp
mov
sbb
mov
jb
and
lret
mov
jae
test
cld
cltd
cmpsl
aam
xor
cmp
shl
or
test
mov
les
jp
mov
enter
push
rorl
cmp
in
lcall
mov
dec
cs
lcall
or
cmp
sub
push
fcoms
call
mov
mov
mov
jo
lods
pop
cmp
outsb
xchg
ds
jmp
rorl
imul
mov
loope
repz
jo
rorb
pop
ljmp
jns
sub
stos
mov
sub
mov
mov
test
sub
rclb
daa
out
dec
lock
aas
imul
addr16
jecxz
mov
xchg
pushf
inc
popa
xchg
imul
sub
pushl
push
int
mov
mov
pop
or
xor
ss
dec
cmpsb
cmpl
jns
decl
add
mov
js
mov
leave
or
jmp
dec
push
pop
fnstenv
jo
dec
addr16
jg
les
dec
in
cmpsl
insl
pop
pop
cmp
ror
push
iret
mov
sbb
sbb
mov
ljmp
pop
adc
loope
faddl
in
mov
sbb
or
das
jno
aad
incb
ret
cli
je
or
fidivl
sbb
jg
ss
xchg
lahf
and
test
scas
sbb
push
cmpsb
lods
out
stos
pop
cmpsb
cwtl
jmp
pop
daa
sbbb
push
ret
stos
mov
mov
pusha
mov
fldcw
mov
fistps
add
inc
nop
mov
dec
xchg
fadds
lcall
push
or
mov
mov
cmp
push
dec
add
jge
nop
scas
mov
adc
incl
or
aam
les
nop
pop
xchg
outsl
mov
sahf
lea
scas
fmulp
sar
sub
mov
cltd
mov
cmp
pop
clc
cmpsb
jecxz
push
push
push
lret
and
repnz
paddusb
dec
inc
data16
mov
es
mov
mov
pop
ljmp
cld
push
adc
outsb
dec
or
inc
aam
sbb
add
jl
test
stos
in
xor
fsubs
ljmp
mov
push
sbb
or
lds
subb
js
mov
sub
jns
incb
movsl
mov
cmp
mov
call
movsl
lcall
push
pop
mov
jecxz
scas
cmp
out
cmpsl
or
leave
shll
outsl
mov
jbe
mov
test
sbb
pushl
sbb
cwtl
addr16
sub
cmp
xor
lcall
dec
incl
hlt
jmp
das
xchg
jg
jae
or
cmp
lock
sarb
stos
aam
pop
and
adc
jbe
imul
mov
sbb
or
inc
inc
dec
enter
jno
mov
arpl
inc
pushl
out
in
bnd
inc
add
xorl
mov
cld
adc
jns
aas
fucomip
mov
in
pop
and
into
jg
push
test
call
dec
sar
mov
clc
xchg
lock
inc
mov
mov
stos
inc
insl
xlat
cmp
ljmp
sub
push
inc
jbe
test
push
cmpsb
pop
cltd
shlb
add
mov
jle
sbb
dec
cmp
lods
lcall
add
inc
cmpsl
dec
xchg
fmull
mov
mov
jg
and
divb
cmp
cwtl
inc
inc
mov
add
or
xlat
mov
inc
sub
ljmp
mov
pop
into
fwait
cmp
add
loopne
cmp
jg
lock
fsubl
jne
adc
pop
daa
jns
dec
mov
inc
int3
xor
inc
sub
test
in
es
sub
loopne
imul
and
jecxz
and
jmp
jp
jl
xlat
sub
mov
cltd
mov
hlt
mov
jg
incl
mov
lahf
pop
add
ja
cmp
sbb
xchg
out
lret
clc
clc
popa
into
push
xchg
fnstsw
adc
lods
jmp
sub
jno
dec
push
adc
das
push
cli
insl
dec
xchg
mov
add
ds
inc
sbb
and
pop
enter
shrb
shlb
arpl
imul
ret
repnz
pop
jae
add
pushl
adc
lret
ljmp
jmp
ss
rclb
pop
arpl
call
mov
jmp
ljmp
mov
dec
jmp
sub
nop
dec
loope
push
pop
pop
fsubr
xchg
test
std
imul
mov
lahf
aas
cmpsl
decl
jnp
pop
inc
xchg
mov
loopne
clc
in
push
push
add
inc
sti
lods
push
pop
adc
scas
and
loope
lods
ret
scas
bound
das
sar
mov
and
adcb
dec
mov
adc
ljmp
or
movl
mov
fstpt
and
aaa
sbb
dec
out
insb
or
pop
cmc
jmp
icebp
aad
orb
dec
fisubrl
sbb
jle
lea
pushl
insl
mov
mov
or
pop
int3
pop
les
pop
andb
dec
push
push
mov
jg
dec
lcall
or
or
stc
adc
scas
fistpl
and
inc
pop
mov
cmpsb
scas
pop
imul
in
pop
clc
into
out
popa
dec
inc
or
jmp
fwait
sub
call
dec
aas
hlt
gs
popf
jecxz
xor
mov
lods
outsl
fnstenv
cwtl
cld
scas
mov
fsts
jmp
cs
movsl
push
insb
dec
cwtl
mov
mov
lahf
clc
daa
pop
dec
mov
jge
ja
mov
mov
adc
xchg
mov
fiadds
scas
inc
adc
stc
cmpb
aas
cmp
mov
incl
std
mov
leave
sbb
cmc
add
arpl
jb
ret
rcll
sbb
scas
clc
inc
push
fisttps
gs
pop
rcl
jl
cmp
call
or
and
decl
dec
sbb
dec
inc
movsl
pop
test
cmp
shll
pop
mov
xor
mov
jo
movsb
lods
or
mov
in
shrb
iret
scas
cld
push
jae
cld
clc
mov
cltd
inc
popf
outsl
js
pop
push
xchg
inc
inc
jl
aam
dec
inc
iret
mov
incl
testb
mov
icebp
daa
sub
jnp
jae
sarl
xchg
inc
sbb
into
prefetcht1
xchg
ljmp
push
sbb
and
sbb
push
add
mov
sub
aad
cli
dec
pop
sub
add
in
cmp
fdivs
adc
pop
out
or
xlat
fisubs
in
mov
jmp
jb
and
cmc
loopne
cltd
xchg
xchg
sbb
cmp
lahf
ret
ss
adc
push
mov
fs
cmp
lret
and
push
in
push
popf
cmp
push
movsl
jle
xorb
pushf
addr16
lcall
outsl
psubq
notb
daa
sub
adc
test
push
pop
inc
jmp
jmp
xor
iret
or
pop
push
jp
addl
push
mov
lcall
mov
mov
call
mov
push
fidivrl
cmpsl
fadd
insl
adc
pushl
xor
les
fidivrl
jge
mov
add
cmp
xchg
sbb
push
ljmp
sbb
fldt
data16
sbb
int3
jae
loop
jl
pop
int
aas
lret
dec
jnp
out
rclb
xlat
jnp
test
fwait
add
xor
ja
into
scas
inc
mov
test
lcall
scas
inc
fmull
ss
jle
in
mov
ret
fmull
mov
icebp
nop
push
or
inc
add
out
mov
mov
mov
out
aas
imul
push
lods
mov
sub
nop
add
cmp
mov
test
sbb
xchg
push
mov
std
pop
jns
add
std
ljmp
mov
push
nop
dec
xchg
aam
adc
insl
push
inc
leave
les
pop
xlat
lods
sub
jl
dec
iret
ret
inc
shlb
mov
mov
mov
ret
push
or
jmp
je
sahf
push
out
js
mov
negb
sbb
sub
dec
sbb
or
xchg
or
mov
shrb
add
adc
aad
xchg
jl
ljmp
clc
imul
inc
jae
cmp
mov
aas
or
fcmovb
cmp
in
and
sub
jmp
cmp
fcomip
decl
icebp
shll
mov
aam
sbb
sti
hlt
mov
adc
js
outsb
jecxz
loopne
jle
lcall
and
inc
xor
and
xchg
cmc
ficoml
mov
mov
jg
mov
and
and
repz
popf
cltd
pop
xlat
push
iret
pop
test
mov
in
ret
mov
pop
and
sti
dec
and
and
imul
ja
decl
fwait
dec
ret
cs
sub
stos
loopne
xor
in
stos
lahf
stos
leave
pop
add
loop
jmp
incl
test
mov
sbb
test
mov
cs
jno
push
pop
xchg
add
popa
stc
push
repnz
jg
rcrb
shr
lock
inc
push
push
and
pop
and
les
inc
nop
lods
adc
mov
scas
jbe
fwait
jmp
fiadds
add
mov
cli
push
fucomip
outsb
shrl
cmp
incl
dec
in
xor
mov
dec
sar
lcall
push
jne
mov
sar
fcomip
decl
cs
xchg
push
pop
jo
sbb
mov
enter
loopnew
push
call
xchg
fidivl
jge
mov
lock
cmp
sub
gs
ljmp
fwait
push
xchg
fmuls
mov
stos
jp
jg
mov
lods
cmpsl
sbb
inc
mov
icebp
mov
and
push
clc
scas
xlat
mov
fwait
js
mov
cmp
fsubs
pushl
sbb
and
mov
xchg
xor
decl
mov
push
mov
xchg
test
mov
stos
incl
jmp
in
or
jne
aam
test
jb
mov
decl
mov
sarl
mov
in
cmpsb
dec
mov
xchg
cmp
fistps
lret
sub
mov
dec
loopne
call
std
pop
loope
test
jp
mov
jmp
arpl
add
nop
add
lcall
repz
repz
loope
mov
push
pop
mov
mov
mov
ljmp
push
pop
jl
sub
sbb
lahf
mov
popa
subl
inc
outsb
orl
das
addl
ret
popl
sti
cmpb
mov
in
mov
mov
xor
subb
mov
jg
ret
push
ljmp
jno
sub
cmp
hlt
mov
mov
fucompp
sbb
jns
dec
mull
pushl
jmp
mov
or
lock
mov
rcr
and
cli
add
movsl
fucomip
cli
ljmp
cmp
pop
outsl
aad
mov
sahf
jmp
fmul
add
decl
xor
xor
out
loop
jo
xor
fnsave
sub
mov
cs
jns
fimuls
addr16
sub
lcall
roll
std
bsf
sub
les
ja
lea
cld
pushl
jle
mov
lods
ja
push
or
jne
sub
pushf
js
xor
mov
lcall
pop
push
inc
cld
inc
inc
cwtl
and
fldl
aas
or
loopne
or
mov
mov
call
jge
mov
lock
incb
and
ret
jecxz
inc
pop
call
cld
sarl
add
notb
mov
sub
jb
jmp
mov
das
mov
aas
lret
pop
cmp
xchg
cltd
push
fs
and
lcall
xchg
loopne
jns
std
fdivl
xchg
lahf
lcall
push
loopne
hlt
cmp
std
fsubs
push
push
add
adc
loope
cmp
pop
incl
stc
adc
insl
ret
sub
adc
mov
dec
mov
decl
adc
outsl
aas
adc
in
add
sub
xchg
sub
push
repz
fcom
mov
sub
mov
cwtl
add
and
fsubrs
cmc
pop
out
xor
xchg
jnp
mov
lret
lcall
fisttps
cli
mov
andb
jge
push
repz
mov
jmp
les
xchg
push
cwtl
xchg
adc
mov
nop
or
and
loopne
pushl
pushf
xchg
iret
hlt
lahf
jb
std
jns
das
pop
stos
out
jbe
lods
stc
or
std
dec
lods
fst
addr16
adc
cmpsl
inc
pop
fs
sub
iret
mov
int3
or
dec
out
ss
stos
pop
mov
sub
xor
lock
call
fistps
xor
mov
xor
mov
or
add
js
and
mov
popa
clc
cld
mov
xor
add
das
add
movsb
gs
dec
lret
int
inc
pop
inc
fcomps
mov
xor
sbb
mov
xor
fwait
arpl
push
xor
ljmp
fwait
xor
adcb
aad
lods
jg
inc
cmp
enter
mov
dec
cmp
or
inc
pusha
data16
inc
lret
loop
movsl
cmpsl
mov
inc
out
dec
scas
mov
rol
jg
pushl
cltd
imul
mov
inc
dec
into
lcall
test
sti
mov
rorb
repz
jge
ljmp
add
xor
jb
and
sbb
xor
cmpsl
and
adc
jae
faddl
outsl
decl
mov
popf
xor
hlt
and
push
xchg
iret
push
xchg
xor
mov
ja
lcall
and
scas
or
aad
and
mov
cmp
dec
in
cld
adc
adc
add
sub
sub
pop
jne
mov
call
scas
mov
push
jmp
fwait
jmp
jg,pn
jmp
pop
xlat
pop
cmp
in
or
push
xchg
pop
dec
xor
test
cltd
rorl
lcall
data16
std
pop
lods
xor
loopne
xchg
arpl
pusha
test
decl
cmp
dec
mov
push
pop
mov
in
das
insb
cs
mov
jo
push
imul
pushl
test
pop
scas
test
cwtl
std
push
inc
lea
xchg
xor
scas
inc
pop
aad
sub
ljmp
gs
mov
jl
stos
bound
inc
add
xchg
enter
lcall
lret
cmp
adc
lcall
aam
outsl
movsl
mov
jle
leave
inc
and
mov
lock
xchg
add
sub
stos
movsl
in
shl
into
out
jnp
js
stos
jmp
pushl
mov
cmp
lods
stos
xor
imul
cltd
jmp
pop
pop
adc
add
decl
inc
push
lahf
mov
pop
cmp
scas
pushl
loopne
popl
push
in
call
jg
scas
aam
ret
incl
mov
jae
sahf
mov
sub
and
stos
testl
sbb
push
add
lcall
mov
xor
pop
xchg
mov
fdivrl
rcll
pop
mov
pushf
push
sub
loope
mov
std
inc
scas
inc
nop
insl
pop
mov
aad
mov
call
cmp
fisttpll
ja
push
shl
cmp
adc
lret
push
adc
pop
pop
cmp
pop
jg
rcll
jp
in
mov
cld
mov
lods
incl
jae
inc
sub
mov
inc
incl
adc
pop
in
repnz
btr
adc
inc
lea
and
or
mov
pop
cld
ljmp
daa
mov
jno
adc
ljmp
sbb
insl
sbb
lock
lcall
repnz
aad
repz
push
nop
mov
pop
mov
mov
mulb
mov
addr16
inc
lret
icebp
pop
shll
cmp
cmp
pop
or
xchg
ficoml
dec
mov
or
push
decl
mov
push
pop
jecxz
int3
mov
xchg
mov
adc
sbb
js
dec
sbb
mov
push
xor
lahf
mov
sbb
cmpsb
adc
movsl
lcall
pushl
rclb
and
gs
leave
out
packssdw
pop
mov
add
cmp
ja
clc
fxch
and
inc
js
mov
sbb
std
pushl
mov
mov
sbb
mov
adc
lcall
ljmp
pop
mov
sahf
mov
adc
inc
sub
call
ljmp
cs
mov
movsl
loop
push
hlt
test
and
pop
out
mov
push
decl
sub
into
insl
dec
in
pop
pop
je
cmp
and
mov
std
cmp
cmp
cmp
mov
orb
jns
outsb
mov
std
inc
fwait
push
ljmp
lods
in
adc
mov
dec
scas
out
cs
out
sbb
icebp
sbb
pop
mov
ret
sbb
jmp
lock
decl
imul
nop
mov
cmp
outsb
inc
out
ljmp
mov
sbb
loop
mov
mov
subb
das
sar
int
or
push
icebp
mov
dec
sahf
mov
out
mov
mov
pushl
dec
push
push
push
mov
lahf
or
sub
clc
scas
pop
nop
out
cmpl
mov
or
dec
int3
andl
and
sbb
or
std
out
iret
adcb
decl
jnp
out
jecxz
cltd
sbb
mov
outsl
call
inc
mov
cmp
xchg
aad
test
inc
lret
out
mov
cld
jg
sbb
leave
sbbl
fdivs
into
scas
lcall
cmpsb
cmpsb
sbb
rcll
xchg
xchg
adc
xchg
cmp
mov
dec
sub
imul
add
mov
adc
sti
sub
or
movsb
jo
jb
aad
add
xor
dec
incl
out
ss
mov
lock
incl
shrb
cltd
add
hlt
jg
or
lock
dec
jl,pn
fiaddl
aam
pop
orb
xlat
dec
dec
lret
push
ds
fwait
inc
popa
mov
stos
push
rorb
cli
in
inc
out
lods
pop
mov
jecxz
push
test
inc
add
jg
and
sub
mov
dec
call
imul
call
call
xor
ss
push
adc
ror
sbb
fwait
mov
mov
adc
out
xchg
mov
xchg
stc
gs
xchg
pop
or
stc
hlt
push
fnsave
xor
mov
adc
mov
mov
popa
mov
daa
jecxz
push
repz
ud0
cmp
mov
aam
or
or
shll
lods
mov
ljmp
xchg
or
arpl
fistpl
ror
jae
js
mov
stos
sbb
xor
in
das
pop
cmpsl
or
adc
shrb
xor
test
leave
gs
cmc
inc
test
jnp
out
push
mov
lret
aad
pushf
sub
jne
iret
out
jl
call
fildll
test
or
cwtl
out
jl
pop
aas
mov
fsubr
inc
pushl
insb
ret
aaa
sar
mov
jbe
push
push
xlat
fidivrs
sub
mov
sub
ja
loop
aam
incl
inc
fcmovnb
jae
sub
test
sub
jbe
and
sbb
clc
addb
jne
push
mov
out
ljmp
decl
sbb
xchg
inc
inc
adc
xchg
dec
inc
xor
outsl
ljmp
cld
popa
or
push
fimuls
push
lods
dec
fldl
mov
mov
in
lods
mov
push
sub
pop
hlt
int3
pop
and
in
push
shll
push
pushl
or
jge
call
pushf
outsl
xor
sub
dec
andb
mov
sti
imul
pusha
movl
stos
or
repnz
push
jbe
cltd
in
pop
lds
or
sub
ljmp
addr16
pusha
fsubrl
arpl
pop
cmc
pop
shlb
and
mov
or
jp
movl
int
je
cs
mov
sub
jmp
adc
insb
xchg
adc
inc
aam
popf
js
mov
fistpll
inc
ljmp
call
outsb
cmc
loopne
das
sub
add
xor
mov
push
std
ljmp
dec
in
fcoms
int3
cs
adc
ljmp
loope
push
pop
andb
mov
pop
push
pop
inc
xor
sti
fs
lods
fld
dec
xor
ljmp
mov
cltd
add
int3
and
out
ret
mov
or
scas
dec
sub
addr16
pushl
cmp
aam
and
mov
mov
mov
stc
popf
mov
fcoms
fisubrs
xchg
inc
call
fnstsw
pop
loop
xchg
mov
pop
or
in
jp
pop
iret
or
push
inc
popf
test
pop
xchg
lds
cld
mov
and
rcrl
push
cmpl
mov
incl
xor
rcl
dec
xchg
lcall
cmp
call
xor
int
add
loope
outsl
sbb
test
jecxz
iret
adc
push
imul
popa
push
insl
xor
cwtl
mov
decl
lock
ficompl
movsb
push
fiaddl
les
mov
ss
xor
js
mov
test
dec
adc
mov
imull
push
add
out
mov
jmp
incl
push
dec
je
mov
neg
subb
xor
test
add
decl
xor
cmp
mov
xchg
iret
rcrl
jnp
dec
lahf
lahf
ss
ds
push
addl
or
push
movsl
lcall
in
outsl
add
and
xchg
push
jmp
inc
push
jb
and
addl
cli
pop
push
fcom
xor
xchg
or
pop
mov
sub
inc
pop
pop
stos
movsl
lock
sar
push
xchg
xor
clc
mov
stos
test
xlat
sub
mov
subb
push
andb
loop
jne
dec
mov
mov
pop
mov
xchg
sbb
call
pop
mov
pop
in
xor
mov
lods
pop
stos
push
inc
jne
push
jb
mov
inc
cli
dec
sub
cld
jae
and
mov
xchg
mov
shll
mov
call
clc
ja
sahf
popf
cltd
enter
mov
outsl
subl
and
pop
sbb
push
push
fdivrp
call
rcr
sub
jb
imul
lds
fwait
xlat
dec
mov
test
loop
sbb
adc
sbb
xchg
sbb
lcall
pop
add
leave
cmc
repz
mov
dec
and
mov
mov
shll
lahf
lret
mov
dec
cmpsl
loope
pop
and
add
test
adc
or
jmp
pop
test
add
mov
call
mov
loope
inc
push
in
shl
incl
clc
ret
dec
clc
adc
dec
jl
das
call
sarb
decl
mov
mov
mov
mov
data16
add
dec
add
push
mov
cmp
inc
sub
rclb
adc
jne
jae
inc
int3
jo
and
xor
into
nop
fidivl
adc
push
sbb
scas
cmpb
sub
gs
cmp
push
pop
ret
inc
xchg
push
xor
sbb
gs
xor
xor
in
pop
fnsetpm(287
add
cmp
push
xchg
add
ja
add
push
xchg
dec
ss
movsb
mov
cld
call
jo
cwtl
xor
pop
cmp
inc
sub
pop
orb
pop
cmc
dec
call
loopne
sub
cld
dec
ja
pop
sbb
jae
sub
aas
dec
pop
push
mov
clc
dec
daa
inc
pop
xchg
add
dec
and
jp
pop
std
jnp
xchg
pop
std
or
cwtl
push
fnstsw
adc
pushl
push
sti
cwtl
mov
push
mov
je
ds
add
inc
cmp
pop
push
icebp
inc
fdivr
push
call
ret
iret
clc
dec
fwait
push
lock
aas
sub
pusha
dec
adc
push
cld
mov
mov
sbbb
or
cmovo
ljmp
lcall
cmpsb
cmpsb
cs
dec
xor
test
and
pop
jnp
sarb
sub
sub
pop
dec
cmpsb
mov
fwait
divl
xchg
push
jg
pusha
jae
xchg
call
mov
cwtl
fldl
call
call
imul
movsl
gs
mov
sub
mov
xor
fisubs
aaa
bound
push
xlat
jb
mov
add
xlat
shl
pushl
aas
pop
dec
inc
ds
mov
cld
data16
mov
or
sub
ds
cmp
out
sub
icebp
pop
fstpl
js
mov
test
enter
repnz
mov
dec
sbb
cmp
test
in
fisttps
jnp
data16
mov
repz
rcl
mov
into
ljmp
jnp
pop
je
cmpsl
stc
jb
fstpl
push
sbb
mov
sbb
cmp
xorb
cmp
outsb
or
add
sbbb
push
rcll
cmp
push
in
pop
ret
inc
sub
decl
mov
enter
mov
mov
sub
mov
or
bound
push
push
xchg
push
mov
push
pop
mov
int
jb
cmpsl
jnp
and
scas
mov
aad
sbb
andb
leave
xchg
cli
daa
loope
and
andl
bound
arpl
in
xlat
inc
xor
movsb
push
mov
push
pop
add
lds
in
cmpsb
popf
es
sbb
sub
je
inc
cld
sarl
pusha
mov
ds
push
lods
push
sbb
cmp
push
hlt
sub
push
inc
jle
andl
sub
dec
je
arpl
cli
insl
adc
loop
push
addl
cld
lret
clc
jmp
das
inc
aad
lea
xchg
fiadds
lcall
leave
add
test
mov
pop
xor
in
frstor
mov
shlb
cmp
leave
sbb
lcall
inc
ljmp
cmp
stos
mov
cmp
call
decb
cmpsb
xor
xor
or
in
sub
adc
xchg
pop
mov
ljmp
stc
std
dec
inc
push
mov
repnz
movsl
cmp
lcall
fisttps
rorl
lcall
rcll
adc
test
sbb
shlb
mov
inc
insb
pushf
into
cmp
enter
incl
mov
cli
lods
xor
mov
gs
sbb
loopne
in
pushl
shlb
mov
negl
add
add
adc
sbb
sub
into
inc
mov
and
outsb
imul
adc
leave
cmp
in
pop
lock
aaa
and
int3
les
pushl
movsl
dec
xchg
in
mov
test
sbb
pop
mov
mov
ljmp
push
pop
jp
pushl
mov
push
lock
mov
push
mov
in
jg
inc
dec
xchg
cmc
add
mov
fistpll
loopne
sub
pushl
fistpl
scas
and
int
in
xchg
jbe
cmc
ret
rcr
cmpsb
mov
ret
and
fcos
push
add
sbb
popaw
pushf
xor
pop
sub
jbe
xchg
mov
push
scas
cli
pushl
mov
subl
fmuls
gs
andl
adc
jmp
cmp
mov
cmpsb
mov
les
test
add
call
pop
cmc
mov
cmp
xchg
jl
out
xor
rcl
nop
pop
mov
jae
cmp
cld
ds
xchg
std
and
nop
gs
leave
pop
cwtl
mov
mov
xchg
pop
inc
sarl
daa
ljmp
sbb
pop
mov
push
xchg
dec
inc
insb
rcrl
mov
lret
test
adc
ljmp
call
lock
out
outsb
fmul
adc
fisubrl
mulb
sti
push
add
loop
lcall
push
je
jo
test
sub
xchg
sub
pop
fistpl
and
fisttpll
and
in
cmp
or
insl
jb
xchg
adcl
push
cld
call
jns
gs
cld
mov
pop
mov
lods
movsb
lods
in
std
mov
pushl
xchg
adc
xchg
inc
hlt
mov
rorb
test
push
orl
out
mov
sbb
dec
dec
mov
cmp
mov
orl
call
xor
mov
daa
jg
mov
out
call
je
mov
ljmp
leave
sub
xlat
jne
js
hlt
push
or
insb
lahf
test
jmp
mov
mov
lea
and
loope
cli
adc
outsl
or
xor
mov
pop
mov
stc
fstl
aas
pop
sbb
pop
mov
mov
ljmp
pushl
xor
and
mov
sub
insl
pusha
mov
sub
mov
and
add
xor
fistpll
stos
sub
sbb
stos
cli
cltd
add
or
jmp
mov
repz
mov
add
push
mov
iret
jle
mov
cwtl
iret
imul
push
rcl
ja
jne
stos
mov
pop
es
dec
aad
mov
fisttps
inc
incb
mov
test
call
int3
gs
sub
xchg
lret
xchg
mov
and
outsl
cmp
or
call
mov
jl
test
movsl
vmulps
xchg
scas
or
aaa
push
cltd
xor
adc
iret
xchg
loop
xchg
add
lods
jecxz
jg
iret
loope
mov
or
out
dec
imul
rorb
fidivrl
mov
mov
shll
in
les
mov
pand
xor
ljmp
xor
add
ljmp
sub
mov
push
cltd
or
pop
cld
lcall
shl
xlat
jp
or
das
sbb
and
fists
mov
das
jmp
mov
ljmp
push
outsb
in
inc
xchg
cmp
jno
in
xchg
pop
mov
ljmp
clc
ljmp
jp
pop
jmp
movsb
push
pushf
mov
stc
repnz
in
jmp
inc
cmp
subl
cld
aad
repnz
mov
popa
add
mov
cmp
and
pushf
test
jne
test
aam
bound
and
add
fs
decl
pop
sbbb
lds
pop
int3
add
ret
clc
test
lds
dec
stos
mov
aad
fcomip
jg
sub
pop
mov
and
add
jmp
cmpsb
shlb
pop
sub
ljmp
lods
fucomi
loope
sbbb
das
push
addr16
mov
pop
mov
mov
cmpsl
add
or
test
mov
in
mov
arpl
adc
push
or
cmp
push
mov
decl
xchg
push
cld
dec
jne
ja
lret
lea
mov
mov
sub
popf
les
xor
les
out
enter
push
das
mov
test
push
loop
fcomip
imul
push
fwait
mov
pop
andl
pop
fists
jmp
lds
push
adc
xchg
hlt
dec
jo
jne
xchg
loope
out
mov
cs
sti
leave
jge
adc
mov
inc
cmp
adc
jge
or
cmp
push
and
push
dec
fistpll
sbb
fldenv
lret
dec
lcall
test
add
xchg
adc
sbb
adc
ja
cmp
xchg
adc
add
incl
imulb
out
cmp
xorb
imul
push
mov
xor
inc
lds
in
adc
inc
lret
jg
decl
stos
cmp
pop
aam
xlat
movsl
cmp
or
xor
test
xchg
into
insb
xchg
lcall
jg
sbb
xchg
xor
adc
sbb
jne
pop
jle
int
or
aad
pushl
rorl
je
cmp
jae
jg
shll
jge
pop
insl
add
incl
sbb
mov
out
insl
clc
mov
xlat
fstps
sarb
lods
push
mov
push
leave
nop
cld
jae
sbb
or
loop
lods
clc
ja
out
cmp
gs
pop
jmp
sbb
add
frstor
popa
cmc
dec
fdivrs
sarl
or
repz
lcall
mov
pop
xor
sbb
add
cmp
inc
push
dec
popa
mov
outsb
enter
shrl
nop
pushl
cmp
rcrb
pop
int3
sbb
stos
pop
lret
fdivl
pop
pushf
jne
fs
ja
or
aam
inc
xor
jnp
ds
jae
or
sbb
mov
adc
push
pop
call
dec
call
arpl
pop
loopne
lds
jb
jmp
add
ljmp
inc
out
pusha
ret
ds
out
clc
ljmp
movsl
and
fidivrs
and
push
jmp
shl
mov
jbe
jmp
fmuls
aam
push
mov
lcall
outsb
jecxz
shlb
aam
mov
ljmp
pusha
ljmp
mov
lret
adc
mov
ljmp
dec
out
roll
push
mov
add
sbb
shr
dec
mov
mov
mov
inc
and
adc
cmp
in
xorb
test
ss
call
repnz
cmc
dec
sub
pop
xchg
arpl
int3
dec
rcl
rcl
out
mov
loopne
jno
lcall
decl
xchg
push
insb
xor
xchg
add
cmp
adc
lcall
push
mov
scas
and
dec
sub
cwtl
pop
and
nop
jl
mov
dec
loop
dec
and
js
fdivs
xchg
push
lret
pusha
sub
and
rclb
adc
addr16
sbb
mov
cmp
repz
pushl
xor
cmpsb
add
cmc
cmc
scas
out
cli
dec
movsb
mov
jecxz
nop
pusha
mov
push
subl
dec
decb
inc
fsts
andb
sar
push
cmp
ljmp
dec
test
xorb
testl
inc
and
dec
sbb
cmp
and
xor
sbb
inc
insl
sub
dec
fdivs
mov
xor
cmp
in
ljmp
aad
ljmp
mov
inc
push
xchg
pop
aas
mov
cmc
xor
js
sbb
jne
mov
nop
rolb
mov
test
ret
xchg
xchg
inc
xor
mov
sub
incl
icebp
add
jmp
daa
cmp
shlb
test
mov
pop
rol
ds
into
rcll
jl
lock
add
sbb
int
ljmp
fsubrs
push
outsl
inc
adc
push
add
xchg
xchg
test
jmp
mov
jle
incl
test
pusha
lods
imul
adc
add
std
pop
add
or
pop
pop
mov
jmp
jp
out
sub
lods
das
mov
push
xor
fsubrs
mov
and
pushl
nop
jge
cmpsb
nop
xchg
pop
into
mov
or
pop
faddl
or
rcl
jne
sbb
sbb
push
sbb
mov
pop
xchg
in
pop
and
out
dec
inc
fs
push
cltd
mov
orb
popf
cli
mov
lock
in
into
push
inc
pop
lods
sbb
ret
and
sub
or
xchg
mov
loope
ret
test
pop
mov
pop
out
inc
pusha
ret
add
push
das
jns
hlt
pop
adc
int3
pusha
rolb
lcall
lods
push
mov
and
das
sti
mov
in
mov
movsl
mov
fwait
adc
jge
imul
pop
mov
daa
or
call
outsl
dec
repz
xor
fidivs
rorb
cltd
leave
sbb
cmc
or
sbb
cmpsb
int
push
pop
div
mov
sti
incl
jnp
in
sbb
and
stos
sbb
idivl
cmc
std
sahf
icebp
out
or
mov
jmp
xchg
jae
mov
pushf
out
ret
ljmp
orl
adc
inc
int3
ds
cmpsl
ja
or
mov
ja
jmp
mov
sub
fwait
pushf
inc
iret
dec
popf
mov
mov
dec
push
call
inc
mov
cmp
adc
and
pushl
cli
cltd
aaa
add
clc
popf
scas
xor
sbb
push
or
inc
xchg
stc
pop
subl
aaa
pop
movsb
push
inc
or
inc
xor
scas
das
mov
fcomip
lcall
lock
mov
popa
sbb
push
shll
lcall
fwait
fs
test
lret
sti
enter
dec
imul
push
hlt
sarl
push
fimull
or
mov
repz
fsub
in
jg
call
incl
daa
xchg
mov
xor
lahf
sar
call
cmpsl
stos
push
pop
jbe
fsubp
or
push
iret
js
and
lds
and
inc
xchg
cmpsb
push
pop
std
inc
cmp
xchg
push
imul
cmp
adc
cmpsl
xor
cmp
jmp
mov
inc
pop
lock
sub
dec
scas
in
jo
addr16
sarl
call
fwait
icebp
shll
jmp
or
push
test
out
mov
outsl
clc
dec
clc
loopne
psubsb
movsb
out
mov
xor
pop
test
decl
cltd
mov
jle
jmp
pop
stos
xchg
mov
or
cld
dec
xor
jne
or
call
jmp
enter
imul
xor
or
mov
outsl
stc
popf
or
pop
jo
clc
lods
out
pop
rolb
xorl
push
or
mov
lods
push
push
cmp
pop
jg
hlt
aaa
sub
mov
xlat
insl
lret
mov
enter
mov
sub
add
mov
cli
lcall
adc
rorl
out
xor
add
xchg
xchg
sub
add
pusha
mov
ljmp
xchg
jo
enter
scas
jl
mov
sti
cmp
cs
jns
push
pop
mov
jmp
dec
scas
lock
in
in
outsl
jecxz
xchg
cmp
pop
dec
jle
les
hlt
stos
out
cli
enter
dec
push
pop
fldt
add
outsl
xor
int
in
mov
mov
or
out
mov
shrl
jmp
sbb
add
push
push
out
dec
inc
sbb
nop
push
outsl
xchg
inc
pop
notl
lods
sahf
xor
add
push
mov
decl
call
sub
mov
mov
and
notb
shll
jb
jb
negb
fildll
dec
xchg
jle
shll
pushf
xchg
fisttpl
jmp
dec
in
push
xchg
movsl
xchg
or
mov
addr16
dec
jae
mov
ss
mov
sbb
jge
jns
test
fisubrl
pushf
in
xchg
cld
push
xchg
call
ja
mov
shrl
out
arpl
mov
dec
push
dec
pop
jns
mov
scas
lds
cld
pop
xor
ret
rclb
decl
dec
ss
mov
movsb
jp
jb
mov
xor
push
adc
or
lret
popa
test
js
enter
out
fs
xchg
lcall
aad
pop
jno
test
add
jp
sub
fnstenv
out
cmp
dec
mov
pop
xor
jmp
jle
arpl
cli
out
push
cli
test
aas
inc
movb
inc
jp
dec
movsb
inc
or
stc
and
ret
decl
dec
inc
call
out
scas
mov
pop
inc
rorl
mov
inc
ficompl
xor
test
or
loopne
mov
fnsave
popa
dec
jl
fs
bound
mov
mov
pop
outsl
and
push
dec
inc
std
mov
pop
xor
out
jecxz
jmp
stos
pop
push
mov
add
shrl
testl
pop
xchg
xor
jbe
adc
xchg
mov
aaa
mov
mov
out
xchg
push
adc
adc
in
push
mov
cmpsl
dec
mov
jmp
jb
fdivs
jo
inc
add
leave
rcrl
incl
xchg
mov
test
out
ja
sti
pop
mov
cmp
loope
sti
clc
mov
fstpl
mov
mov
sahf
repnz
add
bound
ret
stos
lahf
jo
iret
mov
idivl
sbb
dec
test
mov
sbb
addl
mov
mov
andb
jmp
insb
shlb
jns
mov
das
addb
lahf
mov
mov
movsb
inc
mov
std
or
fldt
pop
movb
fiadds
lods
jg
dec
das
in
or
fcmovnbe
clc
je
push
repnz
fnstsw
and
call
sti
ret
loope
sahf
fnstsw
and
in
stos
repnz
dec
out
pop
adc
psraw
call
ror
pop
cmp
rclb
sub
add
aad
xor
mov
call
call
xor
repz
popa
sbb
mov
icebp
xchg
mov
imul
call
gs
jns
movaps
fidivrl
mov
mov
dec
fnstcw
mov
filds
mov
mov
sbb
std
je
push
push
sbb
or
bound
mov
decl
cmp
add
leave
aas
test
mov
pop
jo
pop
ds
dec
ljmp
push
fsubl
dec
xchg
addr16
das
inc
xor
or
out
or
pushl
dec
iret
test
lds
test
mov
add
sub
fwait
push
movsl
decl
adc
sbb
ja
pop
cli
add
out
fmul
stos
sbb
rclb
cs
fcomip
iret
ja
cltd
les
add
addb
add
sub
fcmovnbe
mov
mov
ljmp
pop
cld
out
push
jp
sar
cmp
jmp
cli
rclb
ljmp
sub
dec
in
lods
inc
adc
adc
cltd
loop
ja
test
sti
adc
jg
incl
cs
inc
jg
or
mov
adc
mov
jg
mov
sub
add
lea
add
jle
push
push
jmp
test
js
or
int
lods
adc
add
hlt
and
cwtl
rclb
xor
pop
incl
cli
ja
out
jne
xor
movups
xchg
mov
andb
call
or
sbb
outsb
fisubs
jne
and
pushl
xor
jl
lds
mov
insl
dec
std
pop
sti
ja
nop
sti
sbb
das
cmp
out
es
test
decl
mov
daa
mov
or
sbb
sbb
nop
mov
decl
cmpsb
sub
lret
cs
mov
mov
dec
out
push
pop
lret
cmc
loop
sbb
cli
jmp
xchg
adc
pavgw
int
test
inc
outsl
pusha
dec
adc
sbb
test
scas
or
test
scas
jmp
loopne
repz
or
jle
push
dec
push
add
mov
mov
xchg
mov
jmp
int
dec
push
or
jns
jmp
int3
pusha
mov
inc
push
add
int
nop
add
sub
ljmp
fcmovu
pop
cmc
ljmp
jo
das
shrl
adc
ljmp
jp
add
daa
push
add
cwtl
test
cmpsl
imul
cs
fistpl
pop
add
shrl
sub
rcr
pop
negl
lea
mov
stos
sbb
xor
sbb
pop
fcomip
jp
sbb
inc
test
out
dec
fcoml
push
xchg
mov
lcall
mov
fsts
je
mov
mov
das
sbb
push
lahf
push
lds
cmp
imull
mov
push
jmp
mov
ror
pop
cld
mov
mov
or
cmp
iret
cmp
ljmp
cli
ds
cmpsb
xchg
fwait
loop
into
fs
jp
repz
push
mov
inc
mov
lgs
jge
pop
xor
dec
fs
jecxz
stos
out
movb
decl
push
pop
push
enter
bound
push
aaa
add
adc
popf
jp
scas
adc
inc
or
std
jmp
pusha
adc
dec
ret
dec
cwtl
xchg
pushf
faddl
cld
add
jge
cmp
incl
jns
out
sbb
mov
push
rcrl
pop
push
pop
xor
cmpsl
repz
in
pop
nop
pushl
test
mov
aad
pop
jae
ficompl
push
xchg
sub
mov
push
pushl
inc
test
jo
arpl
shl
add
xor
loop
shrl
or
popf
adc
lcall
test
xchg
cmp
ficomps
xor
add
cli
sbb
jg
and
xor
inc
xchg
ja
dec
jmp
dec
or
jnp
lcall
pop
sub
or
lock
fwait
nop
mov
add
mov
pop
cld
and
cli
jmp
jp
js
lahf
pop
jnp
or
filds
dec
mov
movsl
inc
call
out
push
add
or
push
ret
cmp
je
sub
sbbb
fsts
call
fadds
jecxz
clc
push
out
int
fucomi
sub
scas
fnsave
out
fcompl
add
decl
cmp
cld
adc
or
fldcw
pop
je
call
ljmp
jl
in
cmp
jmp
movsb
lcall
incb
sbb
fwait
jne
adc
clc
test
push
cli
in
dec
std
incl
cmpsl
enter
shrl
adc
in
push
rorb
outsb
test
rorl
pushl
fcoml
stos
push
inc
add
sub
nop
test
xchg
jb
xchg
push
fdivr
in
jne
inc
movsl
cwtl
jg
sub
inc
adc
stos
outsl
negb
lock
in
addr16
xor
ljmp
test
jl
jnp
insb
pushf
rclb
adc
pop
icebp
or
xchg
aaa
ljmp
or
push
mov
mov
lds
into
fisubs
push
or
lods
stos
clc
sbb
jge
test
inc
adc
cld
mov
fidivrl
sbb
bound
jno
sbb
and
mov
jge
loopne
push
xchg
call
add
or
add
aaa
int
push
dec
jbe
sub
mov
adc
fwait
inc
add
incl
cmp
addb
addb
dec
rcrl
test
int3
sar
jg
fildll
xchg
dec
cltd
pop
daa
pop
leave
ja
std
mov
mov
pop
jbe
pusha
pop
pop
call
hlt
jp
pop
xchg
fmull
jmp
pop
gs
inc
xor
and
jecxz
cmp
fsubl
mov
ljmp
xchg
pop
inc
or
scas
fbld
adc
xor
mov
aad
fcmovnb
inc
cmp
mov
cmpsb
ljmp
cs
gs
das
loopne
mov
into
je
jmp
lret
inc
xlat
scas
lahf
or
xor
inc
fsubrl
mov
dec
mov
xlat
add
sub
sbb
enter
imul
mov
lcall
shrb
ss
sarb
cmp
mov
test
lods
mov
test
in
cli
ljmp
inc
jecxz
frstor
cwtl
es
leave
jns
pop
mov
xchg
data16
ljmp
orb
xor
xchg
imul
jmp
repnz
xchg
out
mov
cs
incl
xlat
xchg
stc
push
test
jo
xchg
leave
add
rcll
icebp
nop
push
mov
mull
pop
jne
incl
and
lods
pop
inc
clc
hlt
jno
mov
out
push
mov
mov
mov
sub
push
daa
nop
cld
lcall
pushl
imulb
repnz
cs
jmp
in
outsb
add
sbbb
insl
int
decl
xor
jmp
lret
jo
enter
ljmp
jg
decl
adc
fmuls
cmp
xlat
shll
mov
mov
decl
jl
add
or
loope
and
std
adc
sbb
out
call
push
push
stos
or
mov
jo
mov
jb
negl
cltd
andl
sub
mov
ljmp
icebp
add
push
push
mov
pop
into
roll
lea
xor
lods
inc
dec
jmp
incl
sbb
mov
fidivl
loopne
ljmpw
pop
lock
jnp
into
pop
xchg
or
repz
cmpsb
ljmp
lcall
sub
jmp
xlat
lods
jecxz
inc
xor
pushl
sub
test
popf
lahf
xchg
adc
pop
push
in
xchg
jne
cli
mov
jmp
fisubrs
std
push
je
cli
lret
jp
or
lcall
mov
aam
or
cld
orb
inc
xchg
jae
je
pop
sbb
pop
push
xchg
shrl
mov
mov
in
ljmp
adc
pushl
jnp
gs
dec
jg
pop
push
ss
popa
popa
cli
add
jnp
ret
in
decl
leave
inc
push
loopne
fisttpll
mov
int3
pusha
sub
lock
inc
sarb
filds
lods
clc
movsb
cmp
sub
mov
pop
pop
mov
adc
adc
add
pushl
in
sub
ss
xlat
xor
shrb
xchg
mov
push
jg
push
add
inc
outsl
aam
add
add
jb
sub
rcr
push
ds
jmp
sbb
fs
xchg
dec
pushf
sbb
jbe
xor
push
and
push
rcr
jnp
incl
mov
ja
jecxz
es
sbb
adc
xchg
hlt
mov
es
cmp
mov
bound
loope
test
or
into
or
stos
jg
push
pop
sarb
lods
insb
cmc
push
nop
clc
sti
add
add
call
rorb
add
inc
fmul
cmp
and
jno
clc
mull
das
orb
decl
add
or
aad
ljmp
dec
xor
imul
das
out
fstpt
adc
jl
pop
cwtl
sub
lods
add
mov
dec
push
ljmp
int3
sub
js
call
inc
sbb
pushl
decl
add
rolb
pop
xchg
mov
repnz
push
es
push
push
cs
jb
inc
push
jbe
xlat
mov
and
jg
cmp
sub
imul
call
xchg
inc
ljmp
jecxz
xchg
fisttpll
jo
idivb
in
decl
call
xor
cmpsb
xor
in
scas
mov
inc
mov
xorl
loope
pop
cltd
cld
xor
jnp
rorb
addl
stos
cmp
jg
or
mov
mov
outsl
cmp
les
bound
fidivrs
mov
outsb
sub
call
and
adc
inc
or
add
cmp
or
repnz
add
mov
jb
adc
lcall
adc
enter
cs
jge
cs
and
bound
ret
ljmp
jp
movntps
mov
inc
int3
inc
inc
divl
pusha
mov
xchg
jmp
imul
popa
std
inc
popf
es
cld
int
lock
add
sbb
sbb
and
call
test
adc
add
inc
cmp
inc
pop
aas
out
xchg
or
in
ret
mov
incl
imul
cmpsb
or
ja
adc
jno
stos
jmp
cmp
jne
adc
mov
popf
int3
adc
fcoml
pop
pop
mov
push
push
pusha
mov
bnd
or
outsl
hlt
in
push
sub
call
mov
mov
iret
ss
sub
shrl
push
ret
mov
jle
push
xchg
cltd
and
pop
dec
sbbb
idivb
push
inc
or
jl
cli
jmp
jns
insb
mov
cmp
inc
xchg
neg
mov
shlb
mov
out
ret
mov
aam
pop
add
sub
xor
bound
mov
je
mov
decl
cmpsl
jecxz
push
fisttpll
mov
sub
pop
out
jg
andb
lods
mov
imul
aas
movsb
aaa
mov
lods
je
cmc
or
ljmp
icebp
nop
and
pop
scas
dec
mov
xchg
sub
aam
decl
lock
fiaddl
dec
xchg
rorb
push
pop
xchg
stc
dec
mov
jmp
pop
outsl
jno
add
fs
mov
mov
mov
movsl
out
jle
sahf
pop
cmpsl
add
lret
sub
jecxz
ss
int
cld
test
or
dec
or
out
jge
test
lcall
bound
std
data16
mov
test
loop
sbb
sub
jg
popa
gs
sub
in
loop
sarl
sbb
fs
inc
xor
xchg
jns
arpl
cmpsb
call
in
inc
mov
inc
or
inc
arpl
call
push
aaa
stos
cmpl
sarb
movsl
cmp
xchg
out
movsb
pop
mov
jmp
aam
aam
sub
fiadds
mov
test
dec
jl
cmp
pushf
cmp
enter
jg
sub
mov
xchg
dec
lret
mov
loopne
test
call
idivb
out
sbb
push
imulb
std
outsb
mov
rsm
outsb
cwtl
pop
decl
cs
addr16
lock
gs
ret
aad
pusha
or
int
fsubrl
int3
adc
repnz
ljmp
mov
xsavec
jl
je
pop
shll
and
lret
ja
cmp
inc
ja
ljmp
cmp
dec
xchg
dec
inc
jbe
out
fmull
pop
or
pop
adc
repz
xor
orb
xchg
and
dec
jb
pusha
xlat
adc
push
pop
les
imul
pusha
cmp
lods
dec
jmp
mov
decl
inc
mov
push
mov
jo,pn
cmp
sbb
jle
push
stos
lret
pushl
cmp
ljmp
dec
inc
ss
sbb
xor
lcall
sbb
xchg
dec
hlt
adc
leave
cmp
adc
or
pushl
inc
xorl
test
negl
jg
mov
or
push
in
pushl
jo
add
sti
or
shll
cs
mov
loop
lcall
stos
cltd
cltd
imul
xor
jp
xchg
sti
inc
mov
jnp
pop
pusha
add
insl
cmp
add
sub
push
ja
int3
xchg
icebp
incl
push
xchg
insb
jns
pop
out
popf
cmp
pop
outsb
mov
scas
mov
fildl
sub
out
cmp
std
cltd
stos
cmc
loop
add
jle
mov
stos
jmp
mov
lods
xor
loopne
imul
faddp
sub
bound
lcall
and
data16
mov
gs
push
je
test
cmp
sahf
xchg
rclb
lock
dec
cmp
mov
add
xchg
roll
xor
push
mov
dec
pop
cmp
mov
out
cmc
push
insb
push
dec
sub
int
add
clc
fisubs
mov
sub
mov
jecxz
out
dec
cld
sbb
jg
fucom
rcll
bound
pop
cmp
arpl
xchg
jp
pop
lds
hlt
pushf
fistpl
les
cmpsl
scas
shlb
scas
mov
dec
cmp
add
inc
incb
mov
jp
or
xchg
repnz
test
shll
lret
inc
mov
ljmp
xor
enter
fistl
clc
call
mull
dec
mov
cmp
cmp
insl
sbb
jmp
mov
mov
push
mov
dec
cltd
sar
popf
pop
sub
mov
incl
stos
mov
xor
push
lds
orl
cmpl
pop
fs
fisubl
mov
xchg
adc
jnp
xor
xor
xchg
fistl
adc
fcomip
jg
sbb
push
decl
imul
add
mov
fldl
out
adc
gs
mov
cltd
mov
stc
lcall
hlt
push
test
push
iret
sub
mov
fdivl
out
cli
stos
popa
mov
pop
xor
mov
add
fisubrl
mov
cli
jg
lea
xor
sbb
xchg
in
popa
negl
mov
inc
inc
in
popa
mov
loope
jmp
mov
mulb
fwait
xchg
mov
call
push
and
xlat
xor
lods
pop
sub
inc
fildl
out
xchg
mov
popa
xchg
loop
incl
sub
out
ret
mov
repnz
push
rcll
push
sub
ljmp
sti
insb
lahf
inc
leave
data16
push
adc
dec
add
dec
scas
inc
jp
and
add
fs
icebp
fildll
add
incl
xchg
jmp
into
lret
loope
jecxz
imul
decl
movsl
push
lods
and
dec
ror
in
jae
lods
dec
aam
cmp
mov
pop
arpl
mov
mov
fwait
sub
xchg
lock
mov
pop
es
outsl
mov
sbb
pushl
sarl
loopne
das
or
arpl
cld
aaa
mov
in
les
pushl
hlt
jp
sub
dec
add
mov
xchg
dec
mul
sub
insb
shr
sub
pop
sti
lcall
movsl
inc
add
mov
push
xchg
arpl
cmpsl
inc
add
call
mov
aas
call
lea
incb
repnz
cmpsb
cmp
hlt
fwait
loopne
push
xchg
xchg
inc
mov
push
std
decl
fmull
jns
mov
jbe
in
jg
shr
in
rorl
jne
ljmp
xor
ljmp
xor
inc
int
xchg
lods
add
insb
rcrb
incl
and
pop
test
clc
repnz
loopne
dec
imul
jno
dec
out
xchg
mov
xor
call
hlt
cld
adc
push
es
sbb
xchg
mov
sbb
lds
jecxz
aam
push
or
or
add
cs
int3
std
adc
cs
mov
stos
in
mulb
jnp
xor
loop
enter
addr16
and
mull
das
ja
pop
mov
dec
mov
jge
cmp
js
mov
inc
je
xor
inc
add
adc
addl
pushl
cmpsl
dec
push
pushf
push
lods
scas
cmp
jne
sub
in
inc
mov
lret
mov
test
repz
dec
lds
call
and
jno
mov
or
incl
fnstcw
mov
sbb
add
xchg
icebp
fwait
ja
sbb
mov
mov
and
insb
lock
sub
cltd
or
daa
and
sub
shlb
and
shlb
incl
and
lds
cmp
jl
subl
cwtd
pop
push
test
push
imul
lds
incl
mov
mov
aas
pop
in
and
clc
das
push
ljmp
sti
pop
push
or
add
pushl
in
sub
cs
ret
fcomip
or
mov
xor
iret
stos
jne
dec
pop
dec
xor
incl
hlt
xchg
xchg
shlb
std
xchg
cld
sbb
aad
or
cmp
loope
les
fsts
jl
inc
and
and
pushl
xchg
mov
frstor
mov
in
mov
into
stc
dec
data16
subl
adc
sbb
decl
sbb
lahf
or
jbe
jg
pop
popa
inc
fildll
cltd
cmp
mov
decl
loopne
xchg
jo,pt
cld
test
jne
cmp
aad
daa
mov
jne
fisubs
sbbb
subb
cwtl
lret
pop
cmpsb
or
sub
and
ljmp
es
jbe
int3
mov
jb
aam
push
push
xchg
sub
cmp
jb
loopne
sti
movsb
jle
arpl
pop
or
add
fildll
inc
push
data16
jecxz
daa
cli
pop
sub
cs
incl
int
test
push
shlb
es
add
dec
sub
aaa
int3
sbb
xchg
in
mov
add
sbbb
jns
sbb
push
cld
pop
add
decl
lock
xor
sub
or
sub
jb
cld
mov
jg
lcall
cmp
aam
push
sbb
fdivs
int3
movsb
mov
call
out
scas
or
add
arpl
shr
data16
das
cs
xor
dec
int
add
js
and
mov
imul
stc
mov
jbe
and
mov
inc
insl
imul
fcoml
pop
and
addl
frstor
cmp
push
out
outsb
pop
mov
pop
inc
mov
addb
xor
and
jg
pop
inc
fwait
fwait
pushf
fnsave
ret
fldt
icebp
mov
aad
out
jae
mov
jmp
inc
iret
xchg
cltd
mov
lcall
push
mov
call
out
cmp
outsb
mov
lcall
mov
push
mov
push
adc
cmc
aas
into
sub
lcall
lahf
out
push
cmc
stos
cs
jns
aam
lahf
inc
rolb
in
jne
dec
lahf
inc
mov
xor
xorb
int3
push
imul
cmp
popa
pop
adc
mov
shlb
test
xor
shrb
out
jo
jg
incl
xchg
sbb
mov
leave
jle
lret
adc
fadd
jno
add
xchg
sub
stos
insb
std
push
push
xchg
inc
stc
ret
sbb
sbb
mov
cld
call
pop
or
sbb
stos
cmc
jg
mov
inc
mov
iret
movsl
or
dec
xor
decl
inc
pop
or
xor
cs
fcoml
push
adc
loop
gs
jle
add
cli
jmp
add
inc
iret
inc
xchg
or
dec
mov
mov
xchg
pusha
inc
cwtl
add
add
call
shl
idivl
pusha
sub
xchg
in
jl
pop
add
testb
incl
fwait
insb
incl
push
xchg
inc
mov
aad
add
sub
xchg
mov
adc
push
sahf
and
int
jp
shll
je
pop
scas
das
and
dec
fisubrs
fwait
shrl
push
add
lcall
lcall
xchg
pop
sbb
test
fimuls
imul
aaa
jno
mov
popa
sarl
jne
pushl
dec
js
xor
test
pop
arpl
dec
mov
xchg
and
in
sbbb
jg
cld
dec
or
xor
xor
ret
std
pop
mov
or
out
clc
cmp
and
test
push
mov
adc
cmc
incb
ljmp
cmpsl
cmpl
mov
mov
and
lods
xor
scas
fs
jp
or
mov
push
jo
jg
jmp
cmp
orb
test
dec
mov
in
cmp
xchg
jge
loopne
cmp
add
jp
mov
cmc
enter
pusha
fs
lret
insb
call
and
pusha
mov
imul
fs
in
mov
xchg
push
xchg
lahf
icebp
push
cmc
jg
mov
mov
rcrl
push
lahf
xchg
pop
int3
cmp
decl
test
jmp
inc
sub
dec
hlt
cld
add
push
inc
jo
aam
clc
pop
arpl
call
int3
dec
sub
std
es
test
fwait
inc
dec
push
je
cmp
add
and
inc
incl
sahf
xchg
clc
cltd
xchg
xor
rolb
or
sub
jmp
lret
mov
shll
add
cs
xchg
sahf
jmp
mov
scas
test
dec
pop
sub
sub
div
jo
decl
dec
mov
push
popa
aam
mov
add
out
rclb
push
jnp
mov
cmp
sbb
inc
popf
or
out
mov
mov
out
add
pushl
xchg
and
mov
sbb
sbb
test
adc
std
adc
andb
mov
fs
or
insl
xchg
pop
push
push
arpl
or
adc
in
cltd
pop
pop
xchg
call
mov
leave
das
daa
int3
test
adc
jae
lcall
mov
fcomip
jmp
dec
xor
xor
jae
sub
clc
mov
movl
adc
inc
daa
add
test
imul
cmpb
or
mov
xchg
pushf
dec
jb
jge
jmp
and
imulb
in
dec
adc
xchg
dec
inc
mov
or
inc
xor
mov
clc
lcall
add
sbb
xor
lods
ror
jo
cmp
decl
ja
xchg
iret
dec
lock
idiv
push
or
cltd
aam
mov
test
inc
mov
shlb
sbb
dec
mov
jmp
jbe
push
imul
dec
dec
mov
xchg
cmp
mov
aaa
and
add
jnp
in
add
testl
xchg
enter
add
int3
clc
dec
or
popf
sbb
fcomip
add
inc
jnp
add
pop
pop
xchg
xorl
cli
fnsave
sar
cmpb
mov
ret
push
adc
movl
movsb
js
iret
scas
in
cmp
js
nop
hlt
or
fwait
call
ljmp
mov
aam
sub
jmp
push
jl
fs
ljmp
sar
jg
mov
mov
jnp
fstpt
icebp
leave
testb
scas
cli
mov
arpl
fdivl
cmc
mov
rcll
mov
add
dec
test
popf
out
test
pop
mov
dec
dec
daa
fistps
es
adc
or
out
push
jb
in
aaa
outsb
js
clc
xchg
lahf
scas
ja
call
fwait
inc
sti
test
mov
movsb
and
push
scas
test
mov
lcall
and
sbb
push
in
daa
dec
loop
mov
inc
inc
ljmp
adc
xor
incl
pop
repnz
aad
xor
cs
ljmp
mov
pop
dec
cli
rol
cmc
jle
push
nop
dec
in
cmp
mov
repz
xchg
adc
mov
jne
jmp
out
lods
test
add
repz
sub
xor
subl
addl
std
stos
mov
cmpsb
adc
icebp
cmp
and
xor
lret
or
outsl
lods
sub
cmc
and
into
repnz
ja
lcall
out
pop
xor
rcrb
movsb
aas
flds
jb
cmp
push
sar
call
sub
rorl
fs
pop
mov
rcrl
rcr
jg
fbld
lahf
mov
shrb
mov
cmpsb
mov
push
pop
adc
inc
jno
lcall
dec
xchg
push
or
insb
scas
loope
or
jecxz
or
lcall
call
fs
add
jnp
or
ds
ss
movb
xchg
dec
shlb
scas
andb
mov
push
enter
jb
adc
nop
push
xchg
push
inc
adc
aam
inc
imul
add
and
add
lods
or
pusha
xorl
push
rolb
mov
fcoml
cld
clc
jo
and
daa
in
jmp
rorl
idivb
sub
jmp
hlt
add
mov
incl
cmp
push
push
fs
mov
sub
fists
mov
mov
jae
popf
stos
push
mov
xchg
push
push
lret
sar
imulb
test
sbb
mov
cmp
mov
sub
sahf
int3
sbb
clc
call
leave
adc
add
in
lret
adc
xor
frstor
es
jb
ja
xchg
jo
xor
push
mov
sbb
enter
pop
xchg
push
hlt
ljmp
mov
or
mov
mov
jmp
je
add
add
sbb
sbb
cmpsb
out
sbb
cmp
lock
or
js
in
adc
xor
cmpsb
popf
lret
movsl
xlat
mov
ljmp
shlb
push
gs
jmp
loope
or
out
icebp
fidivrs
mov
push
inc
insl
sbb
outsl
or
push
pop
jmp
incl
cwtl
mov
pop
stos
xlat
cltd
xchg
push
adc
sub
add
enter
pushl
lea
dec
cmpsl
push
das
pop
js
pop
mov
incl
pop
pop
cwtl
in
mov
push
xor
xchg
idivl
call
mov
or
fcmovu
out
xor
push
push
inc
fimull
je
lret
movl
in
jae
es
popl
daa
leave
lcall
push
push
scas
arpl
mov
stos
and
xchg
mov
ja
jp
lock
add
out
ljmp
jmp
loopne
dec
dec
sbb
insl
pop
add
out
inc
mov
sahf
sahf
pop
xchg
cmp
arpl
mov
scas
push
fs
sbb
inc
fldt
movl
les
sarl
xor
test
lods
mov
cld
mov
push
imul
jmp
mov
mov
xchg
pop
std
ret
mov
ret
xchg
xor
clc
call
push
adc
mov
push
out
enter
out
lret
lret
or
ljmp
loop
mov
sbb
xchg
inc
and
sbb
cmp
jg
inc
jbe
push
xlat
push
sub
push
push
and
iret
pop
outsl
nop
inc
lret
adc
push
push
decl
repz
stos
cmpsl
push
je
ficompl
xlat
sub
loop
cmp
shll
out
inc
insb
lock
addl
je
jmp
out
inc
fwait
int3
fdivrp
call
enter
test
loopne
mov
outsl
mov
loope
out
xor
pop
inc
push
fidivl
daa
push
ljmp
jne
daa
xchg
cmp
ret
xor
mov
ljmp
xor
add
fidivl
out
movsl
fwait
das
imul
enter
out
cli
decl
aas
adc
adc
adc
mov
pop
clc
adc
push
into
mov
jmp
mov
stc
mov
xor
pop
mov
jnp
mov
mov
pop
mov
inc
mov
data16
sub
pop
aaa
add
push
jl
or
lahf
or
and
pop
enter
inc
adc
jno
sub
mov
call
cs
or
shl
pop
mov
lds
cltd
movsl
scas
sbbl
cmp
jmp
mov
inc
sbb
sarl
add
insl
movsb
popl
xchg
xchg
sarl
lcall
mov
jo
insl
call
add
xchg
gs
ds
out
push
and
mov
sbb
roll
pusha
loop
lods
sahf
popa
pop
aam
in
cmp
lcall
hlt
cwtl
imul
mov
je
stos
imul
add
mov
mov
decl
cmp
fsubrs
imul
mov
pop
repz
push
jg
incl
jp
movsl
dec
mov
or
pusha
xchg
loopne
adc
pop
inc
cmp
xchg
incl
and
mov
cltd
adc
and
add
pop
fdivrs
add
ljmp
enter
mov
jp
iretw
mov
shl
xor
and
lahf
aaa
cld
dec
in
pop
pop
out
out
xchg
fwait
add
fisttps
dec
insb
insb
pushl
cmpsl
mov
jno
cmp
aam
fbld
inc
mov
aad
imul
xchg
pop
jb
xchg
xor
call
pop
mov
jmp
jecxz
xor
lcall
dec
fadds
adc
stos
xchg
arpl
mov
jge
adc
loopne
repnz
outsl
decl
jae
and
cmpl
push
cmp
aam
dec
int
add
sub
and
jmp
fwait
ljmp
or
cmc
cmp
test
xchg
popa
int
out
adc
and
ret
mov
inc
mov
and
test
add
jo
jg
rol
ds
sub
movsb
sbb
lods
dec
stos
mov
daa
test
hlt
lds
cmpsl
cli
call
lret
test
push
cmpsb
mov
inc
loope
imul
jp
push
and
decl
in
into
jae
mov
dec
mov
mov
insb
icebp
incl
jne
pop
in
adc
repnz
je
pop
dec
xor
add
enter
pop
sbb
inc
out
aaa
cld
fwait
addb
mov
add
mov
es
xchg
out
lock
lcall
mov
aaa
outsb
mov
jge
outsl
xor
das
dec
or
mov
in
xchg
cmp
mov
scas
xlat
and
or
lock
js
hlt
scas
rcll
dec
jg
call
sbb
jno
rorb
push
xor
aas
iret
pop
push
and
adc
cmp
fsubrs
out
push
cwtl
jne
pop
jg
dec
subb
mov
sub
fistps
cmp
xor
cmp
outsb
pop
mov
ljmp
popa
or
and
cmp
pop
mov
mov
xor
inc
cld
jmp
test
or
sub
scas
mov
dec
fbstp
data16
mov
bound
xchg
push
stos
cltd
or
nop
jns
xor
mov
mov
cmpsb
aaa
sub
pop
je
inc
pop
clc
nop
loope
and
dec
lods
scas
push
outsl
mov
outsb
adc
out
in
xchg
add
outsb
mov
add
jbe
shlb
ljmp
jge
sub
sub
mov
mov
test
inc
mov
shrl
cli
pushl
or
mov
leave
imul
push
pop
imul
adc
insl
sbb
rorb
dec
sbb
stos
jge
add
pop
repnz
stos
lcall
dec
jno
flds
jge
cmp
lahf
mov
fucomp
xchg
fisubs
pop
lret
xlat
ljmp
inc
xor
push
jbe
cltd
dec
ret
inc
pop
inc
add
sub
loopne
jmp
sahf
push
shlb
push
cmp
int3
mov
mov
mov
mov
cld
das
jbe
adc
xchg
scas
aas
pushf
mov
add
aaa
movsb
cld
ss
mov
push
popf
shl
pop
rcr
xor
insl
repnz
filds
andb
lea
enter
add
out
cmc
xchg
incl
and
sub
jge
pop
sub
in
ret
stos
dec
mov
jecxz
jle
movsb
decl
jnp
jg
dec
ret
mov
jp
aam
outsl
into
cmp
ja
cmp
lods
popf
lds
movsl
pop
je
shr
jmp
idiv
fmull
mov
cwtl
dec
sub
jg
sahf
mov
xchg
int
cmp
xchg
push
bound
pop
push
sbb
into
add
sbb
sub
and
inc
mov
stos
push
aam
jae
outsb
insb
and
out
cmp
mov
ljmp
rcll
mov
loopne
mov
arpl
call
xor
loop
jge
fbstp
sbb
sub
ljmp
push
inc
mov
pop
scas
sub
push
jecxz
mov
pop
and
cmp
dec
loope
mov
or
push
sbb
ljmp
push
jb
xchg
inc
pop
jne
sub
scas
pushf
jb
sub
daa
stos
mov
jp
lcall
add
inc
jbe
xchg
cwtl
xchg
inc
addb
or
xor
xor
out
hlt
cmpsb
xlat
out
or
push
dec
mov
add
jnp
lcall
mov
or
add
push
popf
repnz
dec
mov
imul
adc
add
mov
jo
push
push
lods
jbe
das
cld
ljmp
adc
push
xchg
inc
mov
in
in
shll
aas
adc
mov
or
outsl
call
es
lods
dec
jnp
bound
mov
sub
or
sub
push
leavew
cmp
daa
or
out
dec
rcl
jmp
insl
jne
mov
cmp
lcall
add
enter
mov
adc
mov
ret
mov
popa
xor
ljmp
pop
clc
mov
rorl
mov
scas
pop
cli
shlb
push
jo
or
insl
imul
add
sub
call
je
push
or
mov
mov
fildll
xchg
stos
xchg
pop
add
xlat
lods
js
or
add
pop
hlt
xchg
mov
push
les
inc
add
mov
ds
xor
sbb
movsb
xadd
jns
dec
sahf
xchg
sar
jns
test
fstps
mov
sub
mov
bound
add
mov
scas
scas
cmpsl
push
jg
dec
cld
push
pop
xor
jo
jo
sbb
inc
outsl
mov
jmp
pop
test
test
aaa
jo
push
enter
or
mov
je
dec
repz
sbb
les
sbb
inc
in
aad
mov
ja,pn
xchg
ret
adc
testb
mov
leave
lods
inc
insl
push
sti
cli
int3
call
or
ljmp
inc
and
pop
and
push
test
loope
xchg
test
adc
rcl
movsl
fst
mov
cmp
pop
pop
fldt
ds
loopne
mov
cmp
sub
add
std
mov
push
in
insl
dec
mov
incl
cld
xlat
sub
add
push
sub
pop
and
sbb
clc
cwtl
stos
ret
xchg
jmp
sub
lds
sbb
xor
or
cmp
mov
scas
mov
out
xchg
add
ret
decl
call
outsl
or
sub
outsl
dec
sti
mov
cmp
decl
mov
fwait
xchg
adc
clc
push
xchg
clc
mov
stos
xor
fbstp
jg
pop
sub
cmp
mov
cmp
mov
or
stos
xchg
call
int3
cmp
ja
mov
jb
test
outsb
fisubs
inc
repnz
push
ss
jp
adc
push
out
jge
xchg
decl
imul
sbb
adc
push
stc
test
or
scas
test
push
cmc
dec
inc
mov
fldl
push
js
enter
decl
mov
jg
mov
ja
or
pop
mov
dec
or
jb
test
movsb
jge
sbb
mov
test
mov
dec
lock
and
adc
add
clc
sub
push
mov
sub
jmp
pop
inc
into
repnz
repnz
loopne
and
jo
xlat
les
test
imul
push
sti
xor
ja
fistps
push
or
or
jge
mov
pop
stc
xor
lcall
testl
ja
push
pop
nop
je
shl
rcrb
lcall
inc
lahf
sti
hlt
pushf
push
popa
xchg
xor
xchg
pop
cli
std
out
push
lds
sub
sub
adc
mov
push
dec
push
push
stc
test
cmc
addb
xchg
sub
addb
ljmp
ljmpw
jnp
lret
stc
lcall
xor
lock
cld
dec
ss
ljmp
pop
jmp
add
rolb
pop
xchg
lea
dec
arpl
adc
fcomip
ljmp
lock
lret
mov
inc
loopne
or
xchg
dec
pushf
pop
out
fwait
mov
dec
add
jle
or
mulb
cmp
cmp
jmp
scas
inc
xlat
test
cltd
push
push
outsb
push
pusha
cltd
jg
arpl
mov
cs
or
mov
and
push
jnp
inc
push
pop
sub
popf
ljmp
aaa
pop
aas
scas
and
pop
mov
rorl
push
cmp
mov
mov
mov
xor
dec
leave
sub
lea
sti
inc
rcl
mov
or
decl
push
ret
bound
mov
loope
les
lods
stc
sbb
daa
incl
and
imul
push
rcll
sarb
arpl
xchg
dec
adc
mov
mov
out
adc
sub
or
xor
cmpsb
xchg
and
mov
test
cli
jmp
ret
das
sub
pushf
stos
cmp
scas
push
int3
cmc
call
in
mov
ljmp
pop
sbb
pop
adc
mov
mov
lock
pop
jmp
aaa
not
inc
jg
incl
sar
mov
outsl
test
fdivs
stc
mov
lds
and
mov
ljmp
xchg
push
xchg
shrb
mov
mov
lods
lds
mov
xchg
fsubs
pop
enter
mov
scas
jmp
stos
dec
pop
jbe
mov
lods
movsb
xchg
adc
repz
cmp
fisubrs
cli
cmp
xchg
mov
push
inc
add
lret
or
pop
call
jbe
jns
xchg
enter
js
ja
gs
jge
add
push
jle
mov
dec
mov
les
cld
movsl
out
and
addr16
xor
pop
lret
decl
adc
lock
mov
xor
lock
sub
test
xchg
sbb
xor
mov
rcrl
pushf
inc
in
sbb
mov
hlt
sub
adc
or
push
movsl
xor
shr
loope
push
pusha
mov
test
pop
stc
cwtl
repnz
sub
mov
mov
mov
sbb
lock
call
or
dec
fldcw
mov
loop
call
dec
repnz
jg
cmp
sub
mov
or
inc
add
repnz
loope
popa
xchg
mov
aam
incl
cmpsl
sti
loopne
mov
inc
pusha
and
out
rcrb
sbb
xor
ret
cmp
std
sti
sahf
pushf
das
lcall
adc
sub
xor
jecxz
dec
bnd
add
call
mov
lcall
pop
cld
fadds
sub
insb
bound
mov
mov
js
add
pop
lds
cmp
ja
fisttps
push
jecxz
ja
das
or
cmp
adc
xor
mov
repnz
dec
icebp
adc
push
pusha
pop
pushl
mov
icebp
stc
cltd
sbb
cmc
xchg
out
pop
mov
in
pop
mov
jp
jns
decl
mov
inc
aam
aam
aas
pop
adc
rclb
dec
jb
xchg
sbb
jmp
fisubrl
mov
rcrl
xchg
in
clc
jae
sub
mov
fsub
jne
lcall
fs
fsubr
pop
xlat
lcall
cwtl
fbstp
adc
and
xchg
sar
pop
xor
xor
into
rcrl
pop
cmp
mov
adc
leave
mov
mov
adc
call
lret
sbb
adc
idiv
pop
fnstsw
aas
mulb
loopne
fwait
pop
push
repnz
cld
xor
jmp
in
mov
push
cli
dec
push
insl
pop
fwait
inc
rol
test
inc
ret
movsl
sub
call
fstl
out
push
mov
push
pop
fldt
xor
loope
scas
mov
pushf
jmp
pop
jo
pop
cs
shr
nop
mov
outsl
dec
in
addr16
xor
testl
mov
fcomp
sub
jae
out
or
lods
push
das
loopne
mov
in
outsl
push
jne
enter
std
ljmp
mov
pop
push
scas
mov
out
mov
ja
pushf
ss
mov
cwtl
and
ljmp
xchg
into
ja
pop
mov
fbstp
sbb
mov
nop
dec
shrb
inc
add
clc
fidivrl
les
inc
inc
das
jo
aas
jle
es
jl
mov
xchg
dec
mov
pop
sahf
loope
push
mov
in
jl
outsl
clc
pushl
push
out
inc
inc
jo
out
and
cmpxchg8b
call
cld
incl
mov
mov
cmc
and
int3
jmp
lret
dec
mov
in
xchg
lahf
ja
pop
and
out
mov
pop
add
mov
push
mov
aaa
mov
push
sub
aam
mov
mov
cmp
addl
repz
adc
aaa
jnp
push
inc
ss
fadd
gs
hlt
mov
adc
adc
test
and
pop
or
adc
jmp
push
mov
jp
popa
cmpsb
sbb
in
sti
xchg
testl
incl
cmp
out
sbb
cmp
adc
jae
leave
sarl
stc
subb
ljmp
jle
call
inc
std
xchg
jae
aaa
dec
in
jnp
in
out
div
les
std
xor
pop
stos
ret
sub
mov
lods
lock
popf
test
out
cltd
lahf
mov
jb
inc
in
dec
push
or
fdivrs
sbb
mov
jp
jl
lds
outsl
cli
incl
cwtl
push
sub
les
movsl
imul
adcl
nop
out
adc
ljmp
negl
mov
mov
adc
shll
imul
jg
add
cmpsb
inc
cmp
lcall
push
pop
mov
imul
ret
in
scas
sbb
sbb
loope
ljmp
dec
lods
and
cltd
pop
fwait
mov
cltd
scas
cmpsl
sub
and
cmp
or
in
ficompl
icebp
xchg
into
push
pop
shll
xor
call
push
and
fstpt
mov
sbb
dec
fdivs
adc
cmpsl
push
fnstcw
mov
cli
or
icebp
jns
xchg
xor
ret
js
out
mov
call
push
adc
sahf
jecxz
fstl
jge
and
mull
add
or
sub
cmp
jmp
adc
xchg
dec
int3
aad
xchg
sbb
adc
mov
sahf
inc
adc
dec
add
jg
stos
mov
test
cmc
out
push
bound
or
insb
mov
loope
call
push
mov
sub
divl
mov
mov
in
ror
dec
popf
cmpsl
pushl
in
pop
jo
inc
ds
and
test
nop
arpl
jns
pusha
jl
in
sbb
incl
jecxz
shlb
data16
xor
xchg
jecxz
and
out
and
sbb
loopne
call
jbe
data16
adc
ss
jp
loop
or
jno
mov
cmp
cmp
push
pop
mov
dec
ds
loope
xor
cld
inc
mov
decl
dec
push
sub
popf
into
outsb
filds
and
addb
inc
and
fwait
jle
in
in
loope
add
ss
dec
ret
push
loop
push
push
lahf
cmpsb
adc
call
lret
fnstcw
lcall
lods
insb
arpl
inc
mov
nop
stos
xchg
aad
dec
mov
mov
in
int
pop
andl
push
js
cli
jg
add
icebp
arpl
add
ljmp
clc
out
mov
cmpsl
push
pop
jb
shlb
add
mov
call
daa
mov
add
data16
mov
adc
lock
mov
jns
outsl
clc
jg
movsb
mov
dec
pushf
inc
xchg
inc
hlt
sbb
fwait
loope
fiaddl
sbb
jmp
ss
pop
mov
incl
adc
add
push
cmp
lcall
sub
sbb
and
lret
sbb
insb
popa
jne
cld
sbb
lahf
loope
lock
imul
mov
jmp
inc
xlat
pop
test
xor
add
cmp
jg
pop
mov
xchg
cmp
and
mov
insl
loopne
clc
sbbb
ljmp
jl
lock
sbb
nop
mov
xor
clc
fdivrl
fnstcw
sub
xor
sub
decl
mov
cs
and
and
jle
cwtl
add
jbe
ljmp
aad
into
inc
xchg
jne
inc
fistpll
mov
mov
cmpsb
fucomip
cmc
sbb
xor
mov
enter
mov
fstl
clc
cmp
push
call
sub
enter
fcom
xor
inc
aad
jns
cld
repnz
out
jg
call
sbb
xchg
cld
ljmp
jo
insb
cmp
mov
andl
std
call
or
loopne
sti
mov
push
or
add
push
outsl
bound
mov
outsb
fisttpl
out
into
popf
outsb
cld
inc
out
addr16
or
fcomip
jmp
adc
xlat
shlb
lea
filds
fcoms
lcall
adc
push
cld
sbb
xor
pop
movsl
sub
jg
out
mov
shll
incl
mov
insl
xchg
pop
dec
mov
lods
mov
jmp
idiv
push
jecxz
insb
pop
xchg
mov
andb
sub
pop
adc
in
fists
mov
lock
hlt
jmp
adc
push
push
pop
das
xchg
mov
shr
fldenv
lock
js
lcall
mov
sbb
cmpsb
aas
dec
xor
ljmp
fbstp
jl
pushl
enter
inc
lock
push
ja
les
daa
movsb
in
lcall
mov
decl
jbe
test
sbb
test
push
lods
xor
adc
or
call
loopne
xor
xchg
mov
pop
cmp
les
fs
xor
xor
fdivs
mov
aaa
arpl
dec
ret
sub
popa
mov
rol
and
andl
decl
sub
ds
jno
mov
add
out
mov
in
outsb
test
ljmp
or
xlat
out
xor
mov
icebp
enter
out
xchg
pop
jmp
xchg
out
push
repz
decl
xchg
mov
jg
hlt
push
pop
in
in
mov
cmp
in
icebp
xor
aaa
std
jg
mov
jo
mov
xchg
adc
js
and
insl
test
ror
xchg
call
mov
sub
xchg
adc
push
mov
nop
inc
and
stc
jb
lret
lcall
mov
add
icebp
adc
mov
add
filds
imul
mov
sub
cmpsl
cld
inc
lcall
lcall
sbb
lret
cmp
lahf
xchg
stos
mov
ss
jl
lods
jo
pop
dec
dec
jmp
imul
xlat
jle
push
popf
loope
mov
lcall
movsb
sub
jp
and
out
push
outsb
inc
sub
int
mov
or
lods
scas
das
fidivrl
inc
jmp
aaa
shll
xlat
mov
ljmp
jl
cmpl
cmpsl
adc
scas
cmpsl
sub
cwtl
test
jbe
pop
sar
decl
mov
in
adc
aas
sahf
sub
imul
mov
das
pop
scas
mov
jne
leave
sub
push
hlt
ja
test
xchg
cmc
out
je
inc
divl
aas
push
bound
addb
ja
iret
mov
xor
insb
repz
mov
xchg
fdivs
jbe
mov
dec
fst
hlt
subl
pushf
loope
sbb
fistps
cmp
call
sub
push
or
cld
adc
in
js
xchg
je
adc
shr
xchg
sbb
out
mov
into
lret
lcall
push
pop
bound
push
sahf
adc
bound
xchg
es
xor
mov
jg
or
int3
out
scas
lods
cwtl
jns
insl
bound
jg
inc
in
out
xor
in
dec
neg
jo
pop
mov
cmp
es
incl
iret
push
mov
in
jne
inc
into
outsb
shll
adc
add
es
cmp
mov
mov
fcmovnbe
jmp
cs
xlat
fbld
jno
stos
in
jg
ja
test
call
aas
jno
inc
pop
push
int3
stos
push
xchg
lcall
add
cltd
or
dec
push
cld
jmp
fsubs
sbb
js
test
cmp
decl
mov
js
mov
idivb
jno
pop
xor
sub
pop
mov
cs
movsl
xchg
addr16
testl
mov
ljmp
mov
jp
cltd
call
lea
and
arpl
push
ret
scas
jmp
sub
push
xchg
stc
mov
jne
mov
mov
roll
cmp
mov
stos
icebp
mull
or
jg
pop
loopne
xchg
std
out
out
test
pop
hlt
decl
mov
push
sub
sbb
outsl
fidivs
sahf
mov
cld
xchg
sub
outsb
mov
sbb
loopne
inc
std
imulb
loopne
push
shl
pop
out
subps
mov
movsl
xchg
shlb
or
xor
and
push
jmp
jl
mov
cmp
ficompl
dec
lcall
cmpsb
pop
mov
inc
jge
jmp
loope
mov
repnz
ljmp
cmpsb
bound
inc
xor
outsl
xchg
or
dec
adc
out
fscale
std
or
outsl
rclb
decl
sbb
push
fsts
aad
xchg
icebp
sbb
cmpsl
xchg
jl
out
lods
cli
call
test
push
mov
gs
int
aas
int
inc
adc
int
ljmp
cld
std
scas
sub
jl
sub
scas
mov
lods
jmp
fdivrl
adcl
jp
xor
mov
mov
jo
iret
movsl
mov
jmp
cmpsl
adc
loopne
cwtl
sub
lret
push
jmp
insb
pushf
pop
out
mov
and
sar
or
ret
jbe
cmp
gs
cmova
incl
test
outsb
hlt
fcoml
dec
sti
sarb
hlt
cwtl
or
js
dec
add
dec
hlt
fs
mov
fdivrs
out
outsl
xchg
in
js
jmp
test
add
pop
pop
outsb
int3
fs
out
push
push
jne
hlt
aad
mov
mov
adc
cmp
jg
ljmp
mov
repz
add
jnp
out
cmp
addl
fdivr
inc
or
pop
pop
pop
and
jbe
popf
and
and
push
rcrb
stc
in
adc
add
ret
xor
sub
jnp
ljmp
ss
fcomps
call
inc
ljmp
jnp
cld
in
sub
imul
rcr
jmp
push
mov
or
fistpll
cmovo
adc
inc
sbb
xchg
insl
leave
ljmp
in
push
imul
cmp
push
nop
jns
lods
inc
inc
push
mov
call
out
les
inc
mov
jge
or
pop
insb
inc
jecxz
sbb
out
xlat
mov
add
or
ds
mov
ror
loopne
repnz
jle
xor
je
inc
movsl
adc
decl
cmpsl
jno
fsubrs
jo
jmp
call
int3
jnp
lret
ds
pushl
std
outsl
cli
jle
and
mov
inc
or
int3
movsb
pop
outsl
xor
mov
ja
inc
push
test
and
fistl
shll
jne
aad
push
push
movsl
mov
mov
mov
mov
ret
and
mov
nop
sub
jnp
adc
or
push
sbb
lahf
andb
orl
jp
xchg
mov
enter
dec
mov
xor
mov
mov
pop
mov
lods
dec
inc
mov
ds
cmp
mov
repnz
aaa
std
incl
push
fsub
cltd
jle
fldt
and
jg
sti
sub
pop
xchg
inc
cmp
jns
fiadds
subb
shufps
test
das
je
outsb
mov
icebp
sub
incl
jge
stc
jmp
sarl
aam
pusha
insl
push
lods
inc
and
mov
loopne
fcomi
jnp
jecxz
and
pushf
imul
inc
or
cmp
movups
ljmp
sahf
add
pop
sub
jecxz
jmp
es
sub
jmp
push
mov
fwait
jne
xchg
cmc
andb
imul
pop
cwtl
mov
fdivs
movsb
mov
mov
rorb
inc
sbb
lcall
leave
mov
mov
int
gs
xchg
mov
out
adc
cmp
pop
insb
jg
inc
fwait
je
and
cmpsb
ljmp
clc
mulb
loop
and
jb
imul
cmp
lcall
push
push
dec
mov
inc
loop
push
insb
mov
cmc
pop
xchg
add
adc
pop
adc
cmp
dec
and
cs
das
lods
mov
push
or
or
adc
jmp
ficomps
pop
mov
inc
sub
inc
jmp
xlat
das
lds
loopne
jg
lods
cmp
sub
push
mov
mov
adc
stos
out
andb
mov
mov
out
add
push
pop
xor
mov
push
repnz
cmp
lret
fwait
or
mov
iret
mov
dec
jae
in
mov
xchg
push
xor
daa
dec
test
decl
xor
adc
arpl
jecxz
pop
cs
in
pop
dec
leave
sbb
andb
push
icebp
cmp
sbb
jl
and
adc
data16
cmp
dec
mov
fwait
mov
pop
loop
or
push
call
rcr
add
in
test
or
pushl
pop
sbb
mov
jae
xchg
scas
inc
rorl
push
and
aaa
clc
sbb
pushl
adc
icebp
movsl
lods
mov
lea
popf
and
insl
lret
loopne
pop
push
fwait
mov
lock
inc
std
popf
adc
int3
ret
sbb
lret
sbb
out
call
jo
aaa
ds
jecxz
mov
cmp
pop
mov
and
push
inc
mov
decb
xchg
mov
pop
fpatan
popa
in
xor
mov
xchg
jecxz
ljmp
xchg
popf
jno
push
lods
scas
cmp
jmp
fstpl
ffree
mov
fldt
std
aad
call
adc
and
sbb
imul
repz
or
pop
add
dec
mov
hlt
rorl
movsl
pop
sub
lea
dec
ret
jo
inc
jge
mov
out
aad
push
add
cwtl
clc
xor
mov
mov
pop
enter
jmp
cmp
push
int3
xchg
lahf
dec
push
cmpsl
fwait
push
dec
inc
test
xchg
pop
or
in
in
mov
add
lcall
mov
adc
jnp
ficompl
out
loopne
std
clc
add
stc
cmpsl
jb
pop
jne
cmp
into
pop
mov
out
fwait
xor
ljmp
mov
inc
test
loopne
inc
and
xor
cmpsb
jl
xlat
jge
lods
incl
imul
inc
fdivrs
and
jbe
adc
adcb
orl
cmp
mov
frstor
push
xchg
cmp
mov
push
mov
cmp
lahf
cmpsb
lcall
fwait
fwait
ds
in
scas
and
hlt
adc
mov
stos
popa
xor
outsb
inc
jnp
pop
das
call
cmp
mov
jge
in
lret
cmp
fmul
xchg
fistpl
push
jl
jmp
imul
xchg
xchg
jmp
cwtl
lcall
xchg
pop
imul
lcall
int
cmp
aas
inc
sbb
xor
xchg
add
inc
loop
daa
xlat
stos
repz
loopne
mov
outsb
rolb
sbb
inc
fsubl
jmp
ds
call
lea
ficoml
mov
jno
dec
adc
mov
lret
fcmove
je
pop
iret
sbb
incl
arpl
push
shr
sahf
lea
mov
push
imul
mov
punpcklwd
add
push
cwtl
lret
jmp
mov
fisubrl
fsubs
in
rcrb
addb
in
lds
sub
hlt
xlat
outsl
adc
mov
es
cmp
xchg
sub
loope
add
cmc
add
lcall
mov
add
imul
mov
dec
cli
inc
xchg
jo
fcomi
inc
inc
cmp
mov
mov
fmull
add
ds
call
inc
rcl
stos
cltd
inc
or
push
imul
push
sub
insl
mov
out
mov
lret
decl
call
mov
aad
shlb
lea
push
mov
push
aam
dec
mov
and
xor
dec
loope
cmpsb
out
mov
mov
jbe
or
repnz
js
xorb
fwait
les
pusha
or
mov
decl
repnz
cmp
mov
mov
aaa
shlb
int
sarl
and
call
jle
dec
dec
movsl
sub
sbb
xor
mov
jno
mov
shrl
enter
mov
add
add
rorb
into
js
cmpsb
mov
mov
lcall
push
sti
popf
dec
sbbl
dec
ds
mov
xor
jmp
fwait
inc
arpl
jg
mov
xor
lds
mov
mov
jge
pop
sub
decl
jb
fcomip
pushl
jno
push
scas
jg
shrl
push
fmull
jmp
mov
bound
xor
insb
mov
jb
bnd
sarl
ja
cmpsl
cltd
lods
cmp
shl
jno
cmpsb
inc
out
dec
jnp
dec
add
loopne
sar
lcall
inc
push
stos
inc
call
call
je
mov
mov
je
shr
movsl
sti
xchg
adc
shlb
mov
int
pop
xchg
lcall
push
addr16
imul
sbb
loop
push
lcall
mov
aad
ss
in
ljmp
fistpll
lods
daa
aad
push
mov
js
stos
das
pop
or
jp
xor
mov
jg
incl
jge
dec
sti
or
xchg
rclb
int
inc
nop
xchg
mov
ret
ljmp
add
pop
dec
mov
dec
push
mov
xchg
dec
mov
xor
cs
or
mov
in
dec
stc
sub
adc
adc
cwtl
inc
mov
adc
ja
repz
lcall
rolb
push
xchg
and
pop
test
movsl
ret
mov
aas
popf
dec
pop
scas
xlat
incl
push
cmp
mov
in
jmp
push
pop
fst
push
xchg
mov
dec
push
pop
xchg
add
jb
out
shrb
lea
jmp
xchg
lea
mov
cmp
push
popf
cmp
sbb
and
test
push
xchg
mov
mov
ljmp
cmp
lds
loope
into
aas
pushf
xor
xor
lock
push
lcall
mov
dec
mov
roll
ret
sahf
dec
sbb
test
jnp
jae
adcl
pop
or
aad
or
xchg
outsl
ficoms
lock
adc
int3
daa
jb
add
xchg
into
mov
fbld
repz
pop
mov
push
std
pop
in
test
xor
push
imul
mov
call
mov
imul
outsb
sub
daa
andl
mov
mov
mov
bound
mov
adc
pop
jge
cmp
leave
push
in
out
xchg
lea
movsb
enter
mov
mov
icebp
dec
stos
jb
mov
rclb
jg
xor
sbb
cmp
decl
xchg
jns
jne
pusha
bound
dec
cs
mov
pop
aad
test
scas
jle
push
jg
cli
into
sub
enter
jle
je
sub
xchg
out
push
pop
or
jmp
es
cmc
add
xchg
jae
adc
int3
push
jnp
out
push
mov
pop
sub
or
pushl
or
jnp
loop,pn
push
jae
and
pop
aas
cld
ljmp
mov
jae
into
sahf
stos
mov
fcoms
incb
sar
ror
addr16
outsl
mov
out
add
mov
sub
push
sub
std
incl
xorb
pop
iret
inc
jle
lock
or
add
push
fwait
jle
sbb
decl
pusha
orb
sahf
insl
adc
rcrb
subl
pop
pop
dec
pusha
jg
test
ds
cs
arpl
jg
push
leave
push
int
mov
sub
pop
xchg
inc
cwtl
test
sub
dec
jns
sbb
push
das
cli
decl
test
sbb
fstpl
mov
pop
jo
cltd
adc
imul
jle
jg
es
xchg
sbb
mov
cwtl
sbb
and
push
xchg
jne
frndint
push
pop
test
mov
js
aas
outsl
repnz
mov
scas
in
dec
fidivrs
pop
cld
mov
sbb
call
mov
imul
int3
xchg
dec
int3
mov
pop
sbb
lock
or
pop
mov
nop
jns
fs
ljmp
decl
sbbb
pop
addr16
clc
iret
mov
mov
fldpi
pop
cld
ljmp
jp
std
push
lods
shlb
xchg
setp
cld
jmp
xchg
pop
mov
inc
arpl
repz
int3
outsl
jae
in
subb
hlt
call
out
cmp
jae
mov
cli
mov
xchg
and
jmp
aam
cmp
jne
push
mov
fsubl
mov
or
incl
lret
jne
mov
xchg
cmp
push
mov
pop
add
mov
mov
insb
lock
gs
lods
inc
scas
push
jg
mov
adc
and
lds
xor
jg
jmp
push
fimuls
add
cld
pop
sbbb
dec
andl
outsl
jg
in
mov
cmp
cld
or
loopne
jmp
adc
clc
add
aas
call
in
lcall
leave
xchg
cmp
push
jecxz
adc
rcl
loop
push
cmc
jl
pushl
enter
sbb
je
add
or
jmp
das
in
pop
mov
incl
stc
add
inc
mov
inc
movsl
cmp
lea
fnstcw
in
jno
cmc
pop
fisttps
jmp
ja
or
sub
sbb
pop
sub
jl
jmp
push
mov
push
aam
or
xor
xchg
xchg
and
xchg
aad
decl
and
xor
test
popf
xchg
push
mov
ljmp
sbb
jp
mov
arpl
test
outsl
xor
movsl
stos
mov
xchg
mov
ljmp
push
into
xlat
adc
fs
aaa
mov
insl
repnz
loop
ljmp
mov
aaa
aad
sub
push
in
clc
cmpsl
push
or
ret
sbb
lret
inc
sub
sti
sub
mov
fdivs
pop
jb
insl
test
cmpsl
pop
and
fcoml
jg
out
bound
in
ffree
inc
pusha
cld
mov
notb
cmp
or
jmp
mov
arpl
test
mov
cmpsb
or
pop
xor
inc
xchg
adc
ljmp
shlb
testb
xchg
sbb
mov
ja
xor
incl
in
and
scas
mov
addb
cmp
in
sbb
jnp
mov
push
push
test
dec
push
push
arpl
sbb
out
rorb
div
loope
lcall
xchg
xlat
lret
push
fs
rorb
inc
jno
xor
jae
mov
shlb
mov
ljmp
push
pop
fdivp
push
fwait
cwtl
push
mov
inc
andb
adc
mov
sti
stos
and
mov
leave
jno
inc
fsub
pop
push
incl
cld
sti
inc
inc
mov
fisttpl
push
int3
mov
mov
lahf
inc
test
inc
sar
stc
aaa
int3
jae
fwait
ret
pop
fs
dec
stc
popf
ljmp
ret
xor
aaa
pop
and
mov
lcall
aas
lods
adc
add
lds
push
hlt
adc
adc
scas
movsb
fldcw
dec
sbb
mov
lock
add
and
jmp
insl
mov
sbb
testb
repnz
out
test
test
pop
fisubrs
mov
jp
mov
sub
mov
mov
scas
js
aam
scas
sahf
je
ss
cmc
xchg
mov
imul
add
push
je
lock
outsl
adc
dec
sbb
call
add
jl
mul
mov
and
rcrb
rclb
popa
stos
cltd
jbe
add
hlt
jmp
shll
pop
insl
jge
sbb
pop
ror
inc
cvtpi2ps
pop
cld
mov
pop
sbb
adc
and
jb
mov
in
call
movsb
pop
mov
xor
outsb
mov
xchg
sarb
ret
fdivr
call
cmp
inc
jecxz
mov
arpl
ja
daa
jb
lret
lods
and
sbb
icebp
decl
jb
pop
ss
subl
popa
call
cmpsb
push
ljmp
sub
int
lods
sbb
jmp
jp
xchg
and
or
out
aam
rcl
push
mov
ljmp
push
push
jmp
mov
xchg
cmc
imul
jno
sub
fcomip
lock
cmp
pop
sbb
scas
aas
mov
inc
ss
insb
adc
in
stc
adc
jmp
dec
xchg
jno
stos
sbb
jg
or
loope
incl
fsts
fnsave
das
push
sbb
in
or
pop
inc
inc
pop
push
jae
cmp
andl
and
jmp
cmp
and
stos
in
call
jmp
push
pop
in
pusha
jo
lcall
mov
xchg
adc
sbbl
stos
movsl
mov
roll
incl
test
add
cmpsb
pop
fldenv
cld
inc
testb
mov
or
gs
fdivrp
decl
pop
cmp
lods
pop
dec
lret
dec
mov
cltd
insb
int
jne
sub
enter
mov
sbb
pop
test
test
xor
mov
or
shll
decl
jne
into
lods
iret
fstpt
xor
icebp
mov
into
popa
adc
xchg
fidivrl
out
gs
jmp
xor
mov
aam
call
into
insl
ds
outsl
jo
pop
movsb
imull
xchg
jp
xorl
mov
jae
mov
ficoml
pop
adc
mov
out
mov
fs
ljmp
scas
jmp
call
repz
sbb
test
add
mov
pushl
enter
mov
mov
pop
popf
icebp
or
xchg
dec
mov
ljmp
adc
add
testb
add
jb
out
add
adc
in
push
idivb
scas
add
scas
int
ret
out
push
nop
pop
stos
mov
xchg
xchg
idivb
mov
leave
mov
jg
ffreep
test
or
mov
mov
out
jns
mov
inc
xchg
call
loopne
sar
and
and
jp
fsub
jbe
call
pop
div
hlt
push
and
shll
xor
jecxz
fisttpl
inc
stos
mov
leave
or
cmpsl
xchg
push
fmull
pop
cs
jecxz
fiadds
pop
icebp
mov
ljmp
mov
ret
mov
mov
mov
cwtl
shll
roll
mov
test
add
icebp
sub
push
test
out
stc
std
or
lods
dec
sbb
inc
lods
decl
mov
cld
pop
aad
cwtl
fcomi
mov
adc
lock
psrld
cli
mov
inc
and
pop
cmp
mov
popa
inc
xor
test
int
ljmp
out
and
jmp
pop
sub
mov
insl
insl
cltd
mov
jmp
shll
add
mov
jecxz
mov
sbb
nop
in
icebp
cmp
sbb
inc
jle
cmp
mov
call
mov
icebp
sbb
ljmp
stos
es
scas
fisubs
push
imul
clc
push
xchg
call
xchg
bound
adc
test
cltd
ds
fildl
pop
fsubr
cli
push
std
fdivrs
aad
cmpsb
fwait
cmpl
cmpsl
in
mov
mov
call
jns
pop
lods
jae
mov
cmpsb
dec
and
mov
test
addr16
ss
jg
cmp
dec
xlat
jle
pop
ds
adc
dec
dec
mov
jmp
mov
sbb
pop
mov
and
xor
add
mov
lea
push
cmpsl
incl
cmc
sub
adc
mov
jecxz
dec
fwait
sti
lcall
negl
sub
lcall
mov
fcoml
pop
int3
push
xchg
fwait
std
lcall
aaa
cmp
ds
in
push
adc
hlt
lds
test
pop
rcr
pop
adc
aam
cli
jmp
cltd
adc
adc
rolb
push
cmp
inc
icebp
pop
sbb
and
dec
mov
or
ljmp
test
cmp
divl
sub
adc
cwtl
jmp
loope
lds
mov
ljmp
jp
jg
cmp
movb
out
push
and
fnsave
inc
dec
ljmp
lds
cs
out
in
adc
and
jo
adc
mov
decl
xchg
mov
pop
popa
jae
popf
movsl
inc
xchg
add
mov
jg
jmp
nop
add
sub
dec
ret
mov
mov
in
mov
jne
cmp
mov
and
mov
sti
sub
ficomps
hlt
ror
stos
dec
fs
outsl
pusha
in
inc
pop
mov
and
push
pop
icebp
xchg
mov
loope
ljmp
push
mov
dec
adc
stos
or
or
inc
ljmp
xor
loope
add
out
push
or
push
test
mov
add
fcomip
jmp
push
add
in
es
mov
or
adc
push
cwtl
repnz
call
jne
out
mov
add
or
scas
ret
dec
push
xchg
mov
and
insl
and
in
or
js
adc
cltd
xchg
hlt
mov
sub
mov
test
cmpsb
stos
or
or
jle
add
dec
xchg
jb
and
xchg
lret
jo
decl
or
pop
push
adc
sbb
or
int
cld
inc
jnp
ljmp
add
push
mov
mov
and
push
adc
aaa
test
incl
mov
jbe
movsl
subb
add
aad
sbb
and
push
add
lret
mov
cmp
sbb
in
sarb
addr16
mov
pop
enter
aas
or
sub
inc
leave
sub
adc
mov
mov
cmp
addl
jge
push
outsb
jge
idivl
out
outsl
inc
in
pop
cmp
decl
enter
insl
jae
int
ficoms
sbb
jl
push
jne
out
rcr
outsl
mov
push
cmpsb
pop
mov
mov
inc
push
xchg
pop
mov
das
sub
stos
shlb
dec
les
dec
mov
ret
xor
dec
aaa
add
incl
rclb
je
cmp
bound
mov
dec
push
and
into
mov
stos
icebp
and
shll
dec
aas
mov
out
stos
mov
sub
mov
jg
jmp
ja
test
out
idiv
lods
jp
jle
pop
ret
ret
pop
or
lods
clc
dec
xor
mov
adc
scas
out
lret
leave
inc
fiadds
mov
and
in
jne
icebp
mov
xor
in
arpl
repz
pop
mov
ficoms
add
ljmp
clc
fisttpll
inc
push
push
or
adc
imul
js
cmpb
lcall
stos
mov
pop
cmpsb
pushf
loopne
fisubs
insb
addl
or
sarb
fcos
decl
or
mov
add
cli
ret
jmp
mov
mov
pusha
mov
fs
loop
add
adc
stc
sar
call
flds
lcall
ljmp
jecxz
fistps
pop
push
xchg
mov
lcall
mov
cmp
xor
lock
in
cmp
ret
call
jg
lcall
pop
out
or
fnstsw
push
subl
incl
xchg
js
pusha
lea
leave
cmpsl
mov
jnp
cmpsb
sub
mov
mov
addr16
push
pop
lock
mov
ret
jl
mov
int
xor
jmp
xchg
mov
leave
push
arpl
xchg
push
cmp
fcomps
mov
jne
les
lcall
fisubrl
ljmp
lcall
pusha
sbb
adc
jecxz
pushf
pusha
arpl
jae
lret
fidivrs
pusha
and
mov
pop
popa
cmp
mov
jle
push
jg
push
dec
dec
mov
in
pop
in
dec
dec
or
jmp
fwait
mov
mov
int
fdivrl
bound
ljmp
cli
ljmp
jno
das
or
imul
orb
out
push
fsubrs
lcall
add
pop
insl
je
in
jle
roll
push
pop
cwtl
loop
or
cld
ja
push
sti
ss
sub
inc
or
xchg
mov
add
fisubs
in
adc
and
int3
aam
sbbl
lcall
adc
aad
lcall
push
rcll
sub
mov
test
xchg
test
push
add
adc
add
call
in
mov
push
push
cmpsb
push
mov
arpl
gs
out
arpl
decl
lahf
push
mov
inc
bound
xchg
pop
jg
sub
dec
aas
jmp
adc
cmp
mov
loope
cmc
sub
sub
pop
bnd
mov
mov
cmp
add
int3
out
pop
decl
dec
jae
add
cmp
aas
or
dec
incl
scas
cmpsl
cmp
inc
jae
mov
ss
aad
push
add
call
mov
ds
mov
loope
in
jmp
call
ds
nop
jg
incl
dec
scas
xor
mov
inc
cmp
xor
js
push
sbb
add
jmp
jo
push
out
add
in
sbb
mov
jp
scas
cmp
jno
or
mov
mov
lcall
adc
cmp
xor
sbb
frstor
mov
bound
scas
and
fists
ds
xor
incl
repnz
imul
fisttps
xchg
ret
enter
mov
ret
jmp
cld
rcll
in
fidivs
das
popa
imul
mov
mov
xchg
arpl
cmpsl
psubd
cmp
jnp
push
pop
jbe
lods
pop
ret
jns
push
cs
cmp
pop
inc
mul
dec
cmpsl
xor
add
repnz
ljmp
add
mov
stos
fidivl
aad
sbb
divb
add
negl
je
xor
mov
loopne
push
out
cli
call
cmp
or
imul
adc
cmp
lock
add
adc
call
es
lock
sbb
add
jno
and
jg
cmovne
mov
ret
iret
add
push
lret
or
mov
xor
ret
lods
out
scas
jg
daa
xchg
fisttpll
hlt
sbb
in
clc
pop
mov
dec
jge
popa
ret
test
ljmp
xchg
push
dec
inc
mov
push
out
cmp
in
sbb
cli
fistpll
in
mov
or
aas
dec
add
or
push
push
fsub
inc
incl
cmp
hlt
mov
jne
dec
mov
cmp
lods
jb
loopne
add
jg
imul
sub
out
sahf
xor
push
inc
fimuls
xor
movsl
inc
sarb
add
cmpsl
in
dec
shll
mov
pop
int3
lcall
jae
push
dec
popf
and
ss
adc
das
or
mov
addr16
pop
dec
cmp
jnp
incl
sbb
sbb
push
test
and
fdiv
lods
test
xchg
adc
mov
cmp
imul
ss
inc
push
call
call
ljmp
jns
jae
and
iret
dec
scas
sbb
inc
sbbl
pop
add
shlb
sub
sbb
rorl
shr
xchg
sub
outsl
jns
push
dec
pop
pop
in
pop
add
outsb
or
movsb
mov
pop
jo
shlb
lret
lcall
fidivrl
loope
jl
ds
jb
mov
int
xchg
pushl
enter
pop
fs
mov
cwtl
xchg
sub
stc
inc
and
mov
repz
rolb
xlat
stos
aam
or
and
add
loope
jae
dec
fwait
xor
jg
testb
std
outsb
adc
cmp
xchg
fcomps
xchg
sub
call
dec
xchg
jl
std
inc
lods
sbb
into
mov
lret
pop
das
inc
mov
adcb
jge
mov
imull
fisubl
mov
xorb
int
imul
lea
sbb
push
stos
out
xchg
sub
ljmp
lods
sub
pop
xchg
push
xor
repz
mov
shr
cs
pop
mov
pop
rclb
inc
shll
cmp
xchg
or
jb
cmp
sbb
ret
cld
in
pop
mov
dec
inc
sbb
push
leave
and
lahf
outsl
repnz
popa
cltd
into
nop
call
mov
xorl
test
mov
pushf
inc
push
inc
pop
jno
sbb
iret
pushl
cld
imul
xchg
sbb
leave
push
mov
jecxz
xchg
sub
incl
mov
adc
sbbl
cs
jmp
pop
sub
sbb
iret
dec
daa
sub
jle
ja
js
pusha
jp
decl
pop
addr16
clc
sub
popf
cld
xchg
inc
fldenv
popa
dec
pop
push
jbe
and
xor
arpl
lods
call
pop
imul
mov
roll
mov
or
leave
xor
gs
pusha
popa
lcall
call
mov
mov
mov
inc
xchg
pop
out
stos
in
lahf
pushf
xor
jg
ret
or
mov
add
rorb
fiadds
shlb
sub
decl
mov
jne
mov
mov
add
insl
imul
pop
outsb
insb
scas
ss
jge
test
mov
cs
adc
sub
mov
insb
aam
call
lds
pop
mov
cmp
cs
stos
mov
pushf
pop
pop
fnop
jno
or
jge
std
push
out
clc
pop
adc
pop
or
aam
push
or
out
inc
test
lcall
xor
psubb
movsl
mov
stc
dec
out
mov
mov
adc
inc
in
bound
aam
lcall
xchg
sti
pop
clc
or
out
mov
mov
daa
mov
jle
shr
cltd
or
enter
es
in
sub
ds
mov
sub
jb
ds
xor
lcall
icebp
inc
add
imul
cmpl
mov
lods
push
sub
xorl
rcr
incl
hlt
fstps
jp
mov
outsb
xchg
or
das
inc
jle
ret
fistl
push
pop
inc
es
cli
sbb
addr16
int
lcall
ror
dec
push
cmp
out
scas
inc
neg
cmp
cmp
cmp
or
mov
add
mov
inc
inc
ljmp
mov
mov
push
jge
cld
insb
and
lcall
lcall
std
sahf
enter
pop
int3
push
pop
test
sahf
and
xor
push
into
cmp
mov
xor
ljmp
out
xorb
jecxz
popf
rol
call
sbb
lea
push
repnz
ds
sbb
subl
or
movsb
icebp
pop
incl
mov
in
pop
dec
cmp
jmp
sub
ss
fistpl
cld
push
xchg
shrb
adc
xchg
pop
loop
repnz
mov
dec
movsb
fdivrl
push
cmp
cltd
xor
jg
test
int
inc
xchg
ret
xor
mov
data16
popa
fistpl
mov
out
jl
inc
das
test
mov
lock
sbb
xchg
shrb
jns
dec
insl
leave
push
push
adc
rcl
jmp
xchg
rcr
mov
loopne
push
incl
sub
nop
stos
je
in
imull
loope
imul
hlt
pusha
bound
and
pushl
xchg
scas
mov
ds
jg
enter
subb
int3
fdivrl
mov
incl
jno
jmp
pop
mov
dec
shl
movsl
push
bound
cmp
cmp
test
mov
mov
bound
in
scas
add
push
jne
push
pop
lds
adc
dec
dec
ss
fcoml
push
and
loopne
call
insl
repnz
push
sub
insb
xchg
pop
mov
inc
adc
mov
in
xchg
push
inc
pop
mov
fiaddl
jp
xchg
push
sub
jo
aaa
clc
mov
push
je
xchg
cmp
fsubr
sub
inc
mulb
mov
pushf
lahf
push
sti
mov
and
shr
jmp
cmp
test
pop
pop
in
repz
sub
shl
icebp
movsb
lcall
nop
sahf
ljmp
lcall
mov
sub
push
hlt
ss
add
out
xchg
lock
cs
pop
dec
cs
mov
sub
sub
jns
add
ljmp
shlb
xchg
popa
jmp
aad
cmp
out
pop
xor
push
gs
or
lcall
popa
ret
pop
and
daa
pop
ret
jae
dec
cltd
lods
or
mov
iret
or
sub
ljmp
in
adc
jecxz
jg
scas
push
pop
dec
shlb
xchg
enter
adc
pop
add
inc
inc
cld
lods
loopne
and
mov
add
jecxz
cmp
lea
add
inc
cmpsl
movsb
adc
shr
test
dec
jbe
inc
add
sub
mov
add
pop
sbbb
pop
out
jg
fs
cmp
mov
int
push
addl
xorb
loop
or
or
jecxz
cld
adc
loop
push
inc
sti
fisubrl
add
adc
mov
mov
mov
fidivl
xchg
mov
push
mov
pop
mov
or
testb
fiadds
pusha
mov
ja
add
fwait
outsb
iret
ja
and
incl
pop
ret
mov
push
jo
xchg
mov
mov
outsl
push
push
mov
fwait
jo
sub
xor
adc
inc
cmpsl
jle
sub
jnp
fwait
sbb
sahf
or
add
aad
push
add
imul
decl
dec
cmc
add
mov
ret
iret
inc
mov
in
add
xorb
inc
scas
dec
fnstenv
js
aaa
icebp
mov
xchg
ljmp
cwtl
mov
call
dec
add
pop
xor
inc
cmp
scas
loope
lret
ljmp
push
gs
push
lds
jp
mov
hlt
scas
test
andb
test
cld
push
dec
sub
cmp
f2xm1
cmp
pop
push
stc
out
cwtl
xlat
cld
pop
into
sarb
decl
sub
imul
insb
hlt
dec
int
stc
mov
inc
pop
pop
pop
dec
or
out
in
test
outsb
ds
xor
dec
andl
jp
data16
popa
push
xchg
mov
movsb
ljmp
pop
popf
inc
jno
adc
mull
mov
pop
into
pop
inc
repz
shrl
fstpt
repnz
movsb
pop
fildl
fwait
call
insl
adcb
sub
jle
pop
insb
xor
mov
cs
cmc
ficoms
sub
push
addr16
call
cmp
inc
pop
std
pop
cmp
push
dec
lcall
xor
xchg
sarl
pop
nop
cmpsl
es
jp
cmp
mov
mov
in
sbb
or
pop
ljmp
adc
sar
icebp
jl
and
jecxz
jae
pushl
push
xchg
adc
les
rcl
xchg
pop
test
pusha
sub
push
loopne
jmp
mov
js
divl
outsl
mov
xor
xchg
xor
lcall
je
mov
comiss
mov
mulb
cmp
mov
lcall
or
adc
mov
xor
stos
scas
rorb
pushl
sub
stos
and
daa
mov
pop
sbbb
cld
test
lea
inc
lcall
cs
sarb
fs
sbb
ret
push
cld
movsl
les
enter
sbb
adc
xchg
push
sub
int3
lcall
imul
or
jecxz
cmp
repnz
jno
and
mov
inc
jbe
adc
cmp
cld
call
jns
mov
mov
mov
fbld
push
add
push
jmp
cmpsb
sbb
test
jb
xchg
sbb
call
das
arpl
in
mov
add
sbb
jmp
sub
push
loop
call
sahf
imul
pop
mov
inc
push
sbb
and
lcall
xchg
and
mov
rcr
push
dec
fsubrp
or
cltd
inc
push
fildl
js
cmp
lods
or
mov
pop
sahf
dec
dec
cmp
or
or
adc
addr16
pop
mov
ljmp
aad
jb
add
or
xchg
gs
lret
inc
insl
scas
insl
ljmp
push
lock
addr16
mov
pop
into
std
xchg
lahf
icebp
sub
inc
in
pop
clc
or
push
outsl
push
inc
xor
pop
leave
mov
call
icebp
mov
sub
mov
ret
lret
jl
leave
aam
inc
cwtl
dec
popf
mov
clc
pop
es
sub
sub
and
mov
ja
movsb
jecxz
mov
aad
ss
int
mov
xor
and
decl
sbb
enter
push
sbbb
loop
ljmp
or
lcall
ja
icebp
jbe
xchg
or
cmpl
mov
jmp
je
sbbl
sub
lods
test
or
mov
ljmp
cs
les
push
insb
inc
pop
inc
pmullw
cwtl
sub
push
sarb
stos
jb
ljmp
aad
cld
xor
je
std
movsb
mov
adc
nop
mov
fldenv
push
mov
or
push
sbbl
jnp
mov
leave
mov
pop
icebp
jmp
shrb
push
icebp
insl
fs
fdivrs
pop
push
outsb
mov
cli
dec
mov
mov
ds
addr16
pop
daa
adc
pop
mov
push
dec
scas
cli
pushl
cmp
std
add
enterw
and
mov
adc
inc
dec
sbb
sbb
jae
mov
jp
pop
push
andb
subb
decl
aas
inc
dec
cmp
mov
mov
push
stos
lods
mov
push
jecxz
je
fdivrp
fcomip
lcall
cwtl
add
mov
in
sub
mov
pop
mov
jmp
jecxz
loope
andl
lods
mov
jmp
je
pop
cli
sub
sbb
lods
lock
orl
add
decl
mov
scas
adc
cmp
adc
ret
ficoml
xchg
mov
xor
jnp
data16
mov
adc
stos
add
inc
sub
pop
nop
mov
pushl
shrb
scas
in
fstpt
pop
pop
inc
in
mov
push
push
icebp
add
cmpsb
push
xchg
pop
movsl
lcall
cld
leave
inc
mov
cmp
add
push
imul
fsubl
nop
and
or
mov
sub
inc
jle
aad
add
dec
sti
pop
hlt
ljmp
push
test
aad
jns
outsl
xchg
inc
add
aad
dec
xor
jg
and
jne
push
jno
dec
je
cmc
xchg
mov
add
lock
cmc
cmp
outsl
sar
movsb
mov
jno
test
jns,pt
jb
hlt
sbb
mov
test
push
jno
xlat
and
mov
add
lods
je
cmp
lds
mov
sub
xchg
fwait
sbb
fwait
push
fldl
in
fists
arpl
mov
fnstsw
cmpsb
incl
cld
ss
and
xchg
push
fdivp
aam
fbstp
adc
adc
andl
enter
dec
push
xor
or
jmp
pop
xor
pusha
scas
xor
adc
jmp
stc
lret
sub
inc
addr16
inc
notb
jae
cwtl
dec
sub
popa
test
and
fsubrl
decl
cltd
or
mov
jl
and
std
adcl
sbb
jnp
jb
add
jno
xor
iret
cmp
mov
cmp
movsb
jns
out
cmc
inc
mov
add
nop
imul
popf
mov
inc
lahf
fstps
aad
mov
adc
xchg
mov
pop
loopne
adc
adc
add
add
decl
mov
iret
hlt
and
xchg
cmp
mov
jg
mov
data16
sub
mov
das
mov
lock
sarb
lock
ret
call
outsb
push
inc
cmpsl
cmp
xchg
dec
movhps
xor
testb
sub
incl
mov
or
adc
in
ret
fisttpl
iret
mov
call
cld
xor
push
mov
lock
rcll
cmpb
mov
jmp
xchg
and
push
mov
jae
sub
and
add
rcll
or
mov
int3
fs
sbb
decl
pop
cli
add
stc
ficoms
adc
push
std
sbb
sbb
sbb
mov
cmpsl
test
sub
je
add
sbb
jg
or
or
cmp
orb
jbe
int
fcomp
clc
mov
roll
decl
sbb
xchg
xor
mov
outsb
adc
enter
xor
ljmp
js
cld
cli
decb
mov
sahf
sahf
orl
stos
ja
add
retw
mov
adc
push
addb
arpl
call
mov
mov
dec
into
sarl
xchg
or
push
scas
adc
pop
lahf
mov
sbb
cmp
or
lea
inc
xor
jno
decl
mov
pop
lret
xchg
iret
decb
dec
gs
jne
mov
ds
call
mov
and
lret
add
pushf
and
dec
mov
push
nop
bnd
clc
jmp
push
and
loopne
and
stc
call
and
dec
pop
mov
idivl
scas
jnp
testb
mov
cmp
pop
popf
jb
std
icebp
nop
xorb
ss
inc
ds
sub
inc
out
ljmp
rclb
xchg
std
pop
mov
push
insb
mov
in
add
sarb
test
cld
cmp
and
ljmp
xor
popa
cmpsl
filds
xor
mov
jmp
jl
pop
cmp
xor
sub
loopne
cmc
push
ret
jg
lock
push
xchg
lods
push
push
decl
mov
inc
gs
jae
or
mov
sbb
pop
push
push
repz
sub
pushl
jecxz
dec
lock
dec
sub
xor
cmp
jns
push
cmp
pushl
fcomps
push
mov
pop
call
push
in
mov
cld
push
xor
lcall
movsb
decl
hlt
inc
xchg
ljmp
add
out
push
daa
aas
fiaddl
jo
xchg
cmp
test
mov
or
mov
jmp
jg
into
mov
adcl
lret
xor
cmp
cmc
hlt
dec
shrb
pushl
test
push
insl
add
je
fs
jae
pop
mov
or
hlt
dec
xor
popa
mov
fildl
add
xchg
cltd
loope
push
mov
out
mov
jns
dec
out
mov
or
out
fmull
push
ret
dec
sbb
cmp
lret
push
inc
imul
bnd
xchg
pop
push
xor
incl
out
dec
mov
dec
pop
xor
mov
xor
mov
aam
xor
mov
aas
adc
out
pop
aad
xchg
std
popf
mov
inc
cli
popf
fisttpl
sub
and
and
pop
and
or
pushl
mov
inc
mov
ds
fwait
addr16
bnd
jg
icebp
test
push
cwtl
pop
insb
roll
add
xchg
jns
cmp
iret
push
or
popf
iret
jne
cltd
sub
push
push
cltd
fidivrs
mov
cld
mov
push
push
cltd
dec
sub
orl
rolb
or
decl
and
jp
ret
push
ret
xchg
mov
jb
ret
cmpsb
dec
jge
popa
mov
ljmp
mov
sti
aam
mov
push
sarl
into
xor
fstpt
cmp
or
inc
add
and
push
jle
pushf
xchg
mov
xor
mov
push
int
loop
adc
lcall
fmuls
arpl
mov
xor
mov
repnz
cmp
jp
mov
jg
adc
mov
mov
lcall
das
adc
bnd
dec
mov
jbe
add
push
les
push
cmp
push
ret
sti
fcoml
sbb
pop
das
sbb
or
inc
pop
dec
into
sbb
incl
mov
xchg
jns
cli
mov
cli
cs
dec
and
sti
das
subb
jmp
jg
sub
popf
push
jle
and
pushl
jb
mov
das
fidivrs
pop
mov
jns
pop
jge
jg
sahf
jecxz
fistpll
pop
aam
ret
xorb
add
shlb
mov
add
jns
pop
xchg
push
cld
mov
mov
out
cwtl
mov
mov
xchg
jmp
gs
sbb
out
inc
push
jle
fnstcw
aas
inc
jo
pop
scas
sub
dec
sub
decl
ret
xlat
dec
ja
xchg
imul
xchg
mov
jp
nop
cmp
pop
loopne
mov
decl
loopne
add
jp
mov
jmp
jle
push
jecxz
pusha
mov
ljmp
or
cmpb
call
cmpsl
mov
adc
shlb
push
fistpl
fnstenv
or
pop
fs
mov
out
jge
pusha
hlt
rolb
jecxz
cmp
fcomip
jg
fisubrs
jns
sub
jbe
xor
fadd
jl
sub
sub
lock
adc
add
pop
mov
xor
jp
mov
dec
cmp
pop
repnz
inc
push
and
movsl
in
aas
pop
mov
xor
jg
jp
loop
into
shlb
or
adc
movsb
jo
jnp
mov
dec
push
jbe
out
mov
sbb
xor
dec
cmpsb
daa
into
jmp
clc
decl
outsl
in
ficoml
pusha
pop
xchg
insb
mov
mov
cli
ljmp
sub
and
in
mov
out
lret
cli
inc
cld
xchg
mov
pushl
bnd
das
inc
jmp
in
lret
cwtl
adc
ret
popa
jg
mov
test
clc
iret
lahf
push
mov
pushl
pushl
cmpb
mov
add
ror
jecxz
mov
jno
incb
pop
lcall
add
lahf
fimull
ds
imulb
mov
shlb
jg
insl
call
fadds
push
movsb
mov
mov
pop
or
mov
dec
int
dec
cmp
adc
lcall
and
fucomp
xchg
imul
cmc
outsl
push
adcb
lcall
lcall
hlt
xchg
pop
sbb
imul
add
subb
add
fidivs
fldt
lret
add
aam
inc
sbb
xchg
aad
fs
jmp
adc
out
xorl
mov
fisttps
je
iret
push
xchg
inc
in
lods
sti
loop
loop
aam
ret
int3
mov
ja
jmp
test
fs
fwait
sbb
jo
xchg
xchg
cmp
pop
adc
out
cli
ljmp
out
mov
lret
icebp
mov
mov
mov
xor
sub
rcrb
cmp
ljmp
in
dec
lcall
add
xchg
mov
xchg
adc
xor
add
ljmp
ja
je
push
add
ljmp
mov
jg
dec
inc
sbb
and
mov
rclb
push
rorb
jnp
inc
or
in
xchg
fsts
cmp
mov
popa
push
mov
ja
iret
nop
lret
push
ret
jl
xchg
cmp
xchg
fisubrs
mov
cmp
enter
imul
rcll
test
adc
les
lcall
mov
test
lcall
push
stos
shlb
popa
cmp
pop
push
xor
xchg
push
pop
jb
in
int
je
and
jmp
pop
cmpsl
jnp
into
inc
cmp
dec
pop
push
movsl
add
inc
loop
adc
lcall
mov
adc
pop
mov
pop
movsb
cmpsb
mov
sbb
sti
cmp
movsl
imull
aaa
out
jmp
jle
sbb
aas
outsb
call
repz
call
and
cmp
ss
xchg
sub
test
cmc
les
das
mov
ljmp
test
das
shlb
xchg
stc
mov
inc
sbb
rorb
lret
loopne
push
xor
sbb
enter
roll
std
sub
dec
fcoms
add
xchg
lcall
push
or
pusha
rorb
mov
mov
dec
outsl
mov
and
ret
incl
sub
stc
enter
add
mov
addr16
xchg
dec
repz
pop
rorb
push
mov
fwait
stos
xor
push
mov
xchg
push
fs
cmpsl
cmc
mov
gs
dec
xchg
jnp
cmc
push
mov
or
test
and
outsl
push
lret
cs
ljmp
sbb
dec
dec
addr16
mov
jmp
xor
push
inc
jle
imul
pop
push
sbb
aas
jns
jmp
cmpsl
sbb
das
mov
ja
mov
rcrl
sbb
sbb
leave
es
cs
lcall
jo
jbe
dec
fidivs
pop
xor
xlat
add
and
cld
lock
fs
pushl
mov
sarl
inc
pop
mov
mov
and
pop
inc
and
push
mov
push
jp
lcall
xor
mov
rcrb
sbb
cmpsb
mov
cmpsl
lock
ret
adc
lcall
or
push
sub
xchg
inc
out
jns
or
stc
rclb
mov
adc
xor
int
jnp,pt
out
cmpsl
ret
clc
ljmp
int3
stos
hlt
lods
add
jp
data16
imul
jg
call
mov
jmp
in
shll
push
xchg
jno
and
cltd
pushl
jmp
xchg
xlat
mov
stos
ds
scas
clc
lcall
shlb
rolb
lcall
enter
pop
ljmp
or
inc
jbe
dec
rorb
xor
jnp
ja
jmp
in
jmp
mov
push
sbb
pop
pop
add
pop
cmpb
jp
test
add
jnp
dec
cmp
push
outsb
adc
ljmp
aam
nop
adc
pop
insl
in
add
inc
cmp
in
dec
jle
repnz
adc
std
mov
xor
lods
arpl
jno
push
and
andl
cwtl
ret
or
cmp
mov
shlb
jecxz
sbb
mov
call
filds
xchg
je
loop
jg
enter
mov
stc
inc
inc
popf
mov
mov
cmp
push
push
cmc
rcrl
push
inc
lods
in
dec
test
pushf
rorl
jbe
sub
or
jns
push
out
cmp
push
jb
cli
loopne
xlat
outsl
addb
out
into
mov
jne
mov
pop
pop
sub
clc
cmpsb
adc
pop
push
sbb
ds
ljmp
mov
lock
lcall
dec
push
jno
not
dec
cmp
mov
push
lcall
and
xor
or
ljmp
shrb
cmp
aam
pop
clc
mov
das
loop
cmpsl
int3
loopne
mov
rclb
cltd
mov
icebp
and
cmp
loope
call
adc
in
xchg
shlb
xchg
jo
sub
xchg
call
dec
mov
test
bnd
jo
add
mov
pop
pop
lcall
sbb
sbb
pop
out
xchg
loopne
mov
test
ret
cs
mov
sub
mov
enter
shl
push
out
lahf
outsb
dec
iret
out
jb
hlt
lcall
incl
adc
fs
test
ljmp
outsl
cld
fisubrl
decl
pop
imul
in
movsl
adc
or
mov
mov
mov
call
push
jbe
inc
lret
and
scas
insb
popa
movsl
fisubrl
subb
enter
popa
mov
push
inc
add
ljmp
ljmp
xchg
es
jge
sbb
dec
push
pop
sub
push
add
push
sbb
pop
enter
pop
and
pushl
fsubr
repz
pop
and
and
outsl
add
cld
cmpsb
add
jmp
mov
cmc
jb
pop
fdivrl
jae
dec
sub
pop
push
insl
xchg
addr16
lret
sub
dec
in
test
js
int3
mov
jnp
pop
lock
adc
xor
jmp
test
cmp
sub
out
jmp
push
mov
not
jnp
call
popa
push
push
push
xchg
aam
iret
test
push
cmc
inc
scas
mov
psrad
cmp
lcall
shrl
mov
clc
subl
ret
jnp
sub
cwtl
pushl
sarb
repz
stc
lea
movsl
mov
inc
cltd
xchg
sub
cld
rcll
push
mov
push
inc
stc
pop
ss
sub
out
push
fadds
cld
sbbl
jbe
sub
mov
ficoml
mov
dec
clc
call
test
push
mov
mov
cmp
aaa
inc
pop
fwait
test
mov
pop
fwait
shll
sub
cmp
in
shll
pop
dec
out
dec
pop
dec
outsb
paddd
mov
cmp
std
ljmp
jge
or
mov
fcompl
into
cmp
int
xor
adc
int3
push
jg
imul
xchg
mov
icebp
xor
iret
fcomip
jmp
lods
mov
xchg
imul
stos
fidivs
pop
mov
xchg
imul
inc
dec
jno
nop
jp
pop
xchg
ficoms
cld
xchg
sub
and
pop
add
loope
repnz
stos
jecxz
gs
mov
jle
jne
sub
stos
mov
pop
sbb
orl
pushl
dec
xchg
lea
aad
test
cmp
mov
jo
test
cmp
decl
sbb
add
cmpsl
popa
pop
fiadds
mov
pop
xor
fstps
xlat
xor
sub
push
mov
pushf
or
pop
xchg
adc
daa
jmp
pop
lock
movsb
mov
inc
loopne
lods
add
fildll
rclb
jg
add
out
pushf
insb
fildl
sti
jle
sbb
push
sbb
dec
scas
jbe
lods
jp
push
ficomps
jl
in
or
aad
mov
cmpsl
mov
inc
dec
xor
xor
mov
repnz
pushl
add
out
inc
out
dec
pop
enter
fwait
xchg
xchg
cs
push
cld
jecxz
cwtl
push
sarl
ljmp
mov
sti
fidivrs
xchg
push
jge
jle
int3
out
js
cmpsl
push
imul
into
es
call
roll
lahf
sbb
enter
pop
ror
ss
and
repz
inc
pusha
cmp
xchg
mov
cmp
jb,pt
mov
inc
fwait
jb
aas
call
add
loope
es
std
dec
sbb
xchg
adc
scas
out
xor
pushl
jp
movsb
xchg
push
pop
mov
adc
dec
dec
aam
xor
push
mov
pop
std
cld
pusha
inc
cmp
pop
cmp
stos
stos
loopne
adc
cmp
mov
adc
adc
adc
decl
inc
and
adc
push
jb
repnz
and
clc
push
adc
or
mov
lcall
jge
jmp
pusha
mov
inc
cmp
jno
pop
cmpsb
and
jmp
sbb
jmp
into
rclb
test
adc
rcl
hlt
aaa
loopne
mov
je
lcall
sbb
loopne
xor
mov
jno
mov
jb
pop
mov
clc
dec
in
sbb
mov
mov
xchg
sub
xchg
push
xchg
xchg
invd
mov
mov
push
outsl
xlat
inc
aaa
mov
inc
mov
inc
movd
mov
addr16
fistpll
push
or
xlat
loopne
cmp
out
push
notb
out
stc
and
incl
cld
icebp
inc
cwtl
fstps
sub
out
sbb
mov
insl
rcll
inc
aam
jns
add
ret
inc
call
pop
ss
sub
inc
outsb
out
and
and
cld
movsb
cs
pop
and
movsb
ljmp
mov
add
inc
xchg
mov
sarl
xchg
lahf
cmp
jl
ljmp
es
test
mov
jg
vmovhps
loope
mov
push
mov
sti
repz
pop
scas
int3
outsl
decl
mov
into
popf
sub
pop
outsl
mov
cmp
or
lahf
or
dec
ret
aaa
or
pop
sub
and
jo
push
enter
cli
jmp
js
xchg
pushl
fimuls
push
dec
mov
push
mov
dec
mov
int
xor
pusha
std
cli
lret
pop
adc
jo
mov
jbe
repz
jp
push
cli
dec
mov
insl
outsl
push
pop
push
inc
idivb
decl
ret
cmp
jp
clc
adc
lcall
outsl
incl
das
ljmp
cltd
and
in
add
mov
mov
shrb
cmc
mov
fbld
jae
mov
mov
insl
pop
xorl
in
mov
sti
roll
cmp
iret
nop
push
aas
ljmp
jo
sub
or
ficoml
add
lret
jb
mov
test
push
mov
ljmp
fcomps
ret
idiv
inc
sbb
mov
mov
ja
call
js
jb
into
in
negb
inc
dec
dec
cmp
mov
push
jnp
inc
cmc
mov
enter
testl
inc
jg
mov
jae
aas
rol
data16
ss
push
lcall
and
add
iret
mov
jb
popf
pop
mov
pop
cmpsb
shrb
mov
mov
dec
fidivs
shl
cmp
and
jmp
pusha
mov
or
fisubs
mov
xlat
xchg
push
mov
jmp
rolb
inc
cmp
jl
mov
and
xchg
rorb
or
sub
mov
pop
inc
or
jl
adc
imul
xchg
sub
ficoml
push
std
jg
cli
popf
enter
lea
sub
mov
in
or
jbe
pop
insb
cmpsb
fisttps
cmp
incl
fwait
pop
jl
pop
pop
ret
test
test
rcrb
call
fldcw
push
sub
cmp
push
popa
popf
addl
cwtl
push
mov
inc
pushl
aam
sub
push
mov
pop
call
pop
in
push
pop
clc
sbbb
jg
sbbb
push
xor
cmp
lea
in
pop
in
enter
push
xor
dec
or
shr
mov
sub
inc
xchg
pmaddwd
push
inc
repz
jg
decl
pop
fwait
dec
jecxz
jmp
push
imul
fmuls
or
decl
scas
lods
pop
je
jo
push
mov
jmp
je
push
cmp
in
mov
outsl
pop
enter
loop
icebp
sub
add
jmp
jecxz
aad
inc
lcall
sub
lcall
nop
lahf
and
loopne
jae
and
sti
repnz
clc
push
lcall
int3
mov
inc
mov
lcall
cmp
ret
jae
xor
jno
mov
xchg
loop
push
and
mov
les
leave
test
mov
dec
inc
mov
pop
cs
pusha
aam
lret
jb
dec
fs
sbb
addb
mov
inc
mov
data16
lea
sub
stc
dec
aad
jle
roll
cmc
and
push
das
ljmp
rcll
pushf
jmp
push
inc
lret
nop
mov
in
xor
hlt
enter
decl
outsb
mov
mov
ffreep
test
sbb
fdivr
mov
ljmp
push
stos
dec
popa
popl
add
pop
or
pop
into
loope
stos
sbb
or
test
push
gs
and
adc
xlat
ret
xor
cli
dec
adc
jne
xchg
in
xor
je
cmp
jnp
popa
adcl
decl
xchg
jmp
insb
mov
dec
fildll
jge
cmpsb
imul
mov
addb
xor
jne
mov
mov
mov
pop
out
cmp
call
sbb
sub
out
xchg
lcall
addr16
pop
loope
xchg
insb
jl
shl
cmp
xchg
bound
xchg
sub
sub
push
ds
xor
add
insl
test
xlat
pop
outsb
pop
pusha
test
pop
push
in
add
decl
or
mov
lcall
and
jo
insl
xchg
lcall
ret
mov
repnz
outsl
or
out
enter
xchg
or
js
mov
mov
xchg
adc
mov
inc
cmp
mov
xchg
pusha
add
fcomip
decl
mov
pusha
xor
jl
decb
cld
fwait
mov
scas
pop
addr16
incl
jp
call
enter
sub
mov
addr16
cmp
lods
xchg
jg
das
mov
ja
mov
clc
dec
mov
cmpsl
pop
cld
js
jns
gs
lahf
das
xchg
mul
outsb
mov
mov
loope
mov
push
addr16
inc
cwtl
pop
add
lods
aaa
popf
popf
push
sub
shlb
andl
push
dec
mov
icebp
lahf
sbb
shrl
jae
aas
repnz
add
add
fistpl
out
cmp
pop
aaa
mov
nop
int3
dec
xor
lock
sbb
pop
xchg
lea
in
decl
int3
mov
and
or
xor
or
faddl
push
fneni(8087
xor
lcall
mov
cmp
and
push
cli
test
fisttpll
sahf
inc
inc
add
mov
movsl
aad
mov
dec
cmp
pop
ja
xchg
lret
inc
jecxz
inc
cmp
adc
jle
or
cltd
mov
or
cli
cwtl
cmp
or
stc
mov
data16
scas
cmc
or
sub
incl
mov
xor
add
shrl
dec
mov
movsb
and
call
and
push
xchg
out
lahf
fcoml
mov
test
push
call
and
sub
push
jo
pop
mov
jbe
mov
jp
push
inc
inc
lods
stos
ret
in
xor
push
add
pop
mov
jg
in
jecxz
xchg
adc
sbbb
cltd
jecxz
mov
push
add
call
call
leave
add
cmp
cmp
cs
fcoms
cwtl
push
movsl
sbb
rcrl
push
daa
lea
xor
js
xchg
dec
data16
mov
cld
xchg
icebp
and
cs
add
jmp
ret
aad
cmp
inc
sbb
mov
sub
rolb
jb
pop
mov
outsb
subl
pop
lods
ja
or
jg
rorb
cmp
lock
jne
sahf
cld
and
dec
adcl
ret
and
ljmp
push
mov
push
and
mov
jp
insb
dec
add
popf
jmp
jmp
cmp
stc
pusha
mov
mov
pusha
int
push
lods
in
das
inc
popf
sti
jnp
cmpsb
decl
es
mov
call
xor
imul
mov
incl
jo
stos
stos
out
outsb
enter
jae
lock
pop
jg
sbb
sbb
mov
xchg
aas
xchg
imulb
push
loopne
jle
decl
lock
add
pop
in
pusha
jmp
cltd
cmp
fldenv
pop
ds
out
mov
and
dec
inc
pop
das
and
ljmp
pop
inc
je
jle
lock
shr
sahf
dec
or
fimuls
xchg
and
lret
pushl
aam
dec
inc
enter
push
repnz
dec
pusha
aaa
ljmp
and
inc
jge
flds
iret
insl
mov
dec
nop
sbb
inc
ficomps
clc
xlat
add
rcr
xor
aam
pop
sarb
jg
jns
lods
es
push
je
cmp
call
sbb
std
aad
dec
fbstp
stos
sahf
shll
adc
xchg
outsb
bound
data16
fimuls
stos
mov
addr16
jbe
das
insl
fdivl
mov
pop
and
lcall
and
sbb
sbb
xchg
mov
fistl
ret
jne
and
jmp
xor
jb
xchg
sub
xor
lea
add
mov
dec
xchg
in
scas
add
cmp
outsl
and
mov
sti
inc
jge
sbb
mov
ficoml
adc
cmp
loope
sub
scas
clc
ljmp
out
dec
mov
pop
sti
xchg
push
cmpl
call
sbb
and
xchg
rcrl
out
or
inc
lret
call
es
mov
adc
fmull
adc
push
out
add
outsl
jge
mov
lcall
movsl
cltd
shll
stc
or
inc
out
js
sbb
imul
lcall
mov
ja
lods
cmp
lret
loop
test
mov
mov
ds
test
pushl
sub
fists
fs
pop
insb
movsl
rorl
into
or
outsl
test
pop
jle
les
add
imul
imul
add
xor
lahf
test
push
cli
mov
roll
pop
add
fisttpll
xchg
xor
sbb
cmp
sahf
cmp
or
xor
jg
inc
mov
hlt
mov
and
sub
in
ljmp
in
test
mov
adc
sub
sub
ja
shlb
lcall
rclb
sbb
sub
jne
enter
nop
bound
mov
rcrb
orl
push
push
pop
adc
mov
jmp
add
cld
repz
lret
pop
dec
das
ja
shll
iret
xor
sub
or
pop
lock
sahf
add
movsl
fstpl
xor
jno
add
cs
rcrb
cmp
sub
lods
push
and
mov
add
mov
jmp
push
test
sti
pop
adc
int
jno
pop
scas
pop
push
mov
mov
pop
mov
jg
es
cmpsb
sub
push
mov
sbb
jno
ds
cmc
loopne
inc
xchg
fnsave
mov
call
dec
push
loop
jno
test
into
push
insb
mov
xlat
push
add
incl
sbb
mov
dec
xor
and
mov
sbb
add
mov
jge
int3
lods
nop
int
lcall
ss
xchg
add
fldcw
stos
ljmp
ds
outsl
push
jno
xlat
gs
out
push
les
or
aaa
mov
cli
call
push
insb
gs
push
clc
jge
or
lods
out
test
sbb
mov
sbb
sbb
shr
insb
insb
ja
ja
add
adc
adc
mov
dec
ss
movsb
incl
xor
or
inc
or
ljmp
mov
fidivl
pop
sarl
sub
test
jne
inc
sti
cmp
push
mov
cld
jg
arpl
inc
fwait
push
and
adc
inc
lea
js
mov
sti
ss
mov
sbb
xor
add
xchg
cmp
loopne
fsubs
pop
mov
sub
cmp
dec
loope
nop
and
sub
into
adc
push
push
and
mov
pop
jns
scas
xchg
xor
out
loop
jg
mov
scas
loopne
cmp
loop
in
fs
push
pusha
inc
int3
in
and
pusha
leave
js
mov
ljmp
call
mov
mov
dec
pop
dec
pop
cwtl
mov
fiadds
lcall
sti
add
rcll
jb
repz
cmpsl
sub
mov
xor
cmpsb
pop
out
decl
xchg
jecxz
or
jb
stos
and
cmp
mov
dec
pop
pop
mov
mov
in
cs
movsl
nop
cmp
aaa
or
jne
add
cwtl
jg
lods
pushl
rolb
jg
rorb
lahf
int
mov
xchg
mov
clc
les
arpl
hlt
into
xor
pushl
push
cld
outsl
std
xchg
lahf
jle
push
movsl
mov
adc
lret
mov
cmp
sbb
out
jno
cmp
and
fs
das
mov
ja
mov
ljmp
adc
hlt
cltd
repz
sub
movsb
cmc
mov
mov
les
xchg
push
pop
mov
cwtl
inc
pop
lcall
and
jo
push
mov
rolb
stc
fimuls
out
xchg
dec
pop
clc
ss
out
into
fisubl
and
and
nop
andb
pop
push
popf
cmp
mov
call
popa
neg
aam
mov
movsl
xchg
push
inc
mov
mov
insl
jle
pop
lcall
push
mov
pop
popa
cs
cltd
out
push
push
xchg
inc
cltd
notl
dec
dec
adc
dec
jb
mov
shrb
mov
lods
jo
imul
inc
movsb
mov
and
decl
call
jo
push
sbb
lea
mov
mov
xchg
or
test
jne
push
fstps
xor
cmp
in
xchg
stos
dec
xchg
pusha
push
or
imul
out
decl
stos
adc
jge
xor
push
test
call
insl
rorb
jge
dec
lret
dec
push
fisttpl
lcall
imul
mov
lret
out
pop
stos
or
clc
and
call
jno
cmp
pop
or
add
outsb
sahf
jno
out
fdivr
pop
or
insb
sub
mov
add
jno
call
or
ret
and
jne
pusha
aad
ret
rorb
xchg
adc
roll
mov
push
lcall
scas
int
dec
xchg
ljmp
add
sbb
call
aaa
xor
mov
cli
movsb
lock
mov
pop
xor
lods
enter
ljmp
push
add
adc
arpl
ja
mov
mov
xor
sub
xchg
xor
pop
scas
pop
adc
mov
addl
call
ss
push
jne
xor
push
adc
cmp
dec
pop
dec
mov
sub
mov
push
in
pop
sub
mov
imulb
jmp
sbb
insb
fdivl
xchg
ja
stos
cmp
sbb
aaa
out
dec
push
sbb
lret
and
call
daa
lods
pop
daa
out
subl
insl
aam
cli
jge
cmp
mov
pop
pop
xchg
mov
dec
or
jg
sub
push
dec
dec
gs
pusha
pop
pop
add
inc
cmpsb
mov
icebp
leave
jp
xor
dec
popa
stos
xchg
xchg
test
dec
and
cli
cmc
out
inc
or
mov
ficompl
mov
push
pop
pop
or
lds
mov
lock
xor
add
pop
push
and
adc
sub
xchg
into
loope
add
inc
dec
das
stos
xchg
mov
inc
mov
rorl
xchg
ljmp
cmpsb
fmull
sbb
xchg
decb
push
fistpll
sti
sub
lock
sub
jmp
or
sbb
jl
push
test
std
cld
scas
cli
jmp
jnp
lcall
lret
and
scas
negb
scas
push
mov
mov
call
sbb
icebp
jne
hlt
decl
xlat
mov
dec
mov
jbe
incl
sub
push
pop
in
dec
cwtl
xor
mov
lcall
add
rclb
arpl
mov
jp
xchg
mov
aas
adc
hlt
ljmp
cmp
pop
and
mov
xor
push
into
lods
jg
adc
push
scas
sub
decl
push
int
popl
mov
aaa
jle
push
mov
ss
pop
push
into
dec
pop
push
mov
aas
repnz
imul
movsl
mov
jmp
jne
cmp
lds
repz
pop
inc
dec
pop
cmp
test
lcall
inc
and
jo
cmp
dec
xor
lds
mov
xchg
push
xor
out
mov
cmp
pop
cmp
test
dec
scas
lret
push
push
push
inc
ret
push
in
cmpsb
inc
ljmp
adc
cs
mov
adc
outsb
jp
mulb
inc
jbe
mov
mov
scas
cli
dec
mov
ret
das
int
dec
or
mov
test
addl
mov
xor
jl
sbb
push
xor
bound
in
mov
cs
fcompl
imul
idiv
mov
movsl
sub
sar
test
into
fcoms
xchg
rclb
aad
neg
les
arpl
adc
rcr
xchg
pop
addr16
loop
fcomip
inc
rorl
ret
xchg
inc
lea
or
aaa
fisttpl
jnp
dec
jo
call
cwtl
sub
push
insb
dec
push
jnp
mov
inc
lret
lds
jge
mov
pushl
std
jne
test
or
mov
sbb
pop
adc
insl
into
inc
cli
ret
popa
les
mov
adc
xchg
jno
sub
lods
movsl
addl
cmp
lock
push
loope
lahf
outsb
das
inc
cmp
pop
imulb
jge
cmp
movsb
call
loopne
pusha
inc
sub
mov
and
fimull
sahf
adc
jns
incl
mov
data16
mov
xchg
fmuls
std
mov
decl
int3
and
inc
movsb
call
or
scas
inc
cltd
cmp
dec
fstl
aam
lds
or
cli
fildl
sub
cmp
inc
cld
jg
or
cltd
imul
xor
xor
cmp
cs
dec
push
pop
lret
dec
ljmp
cmp
ss
lcall
inc
aas
movsl
in
pop
push
movsb
cmp
fs
pop
int
lcall
cmp
test
test
cmc
sub
push
mov
mov
push
or
sbb
jg
push
out
dec
cmp
add
push
ret
es
inc
inc
push
push
push
jmp
fs
inc
ljmp
xchg
push
xor
imul
or
sbb
xorb
cwtl
das
adc
dec
lret
call
pop
xchg
js
push
hlt
jle
sub
fimuls
shr
pop
inc
stc
enter
push
jge
jl
in
sarl
mov
xchg
das
xacquire
fldt
inc
sar
lcall
jecxz
int
and
mov
sub
add
ljmp
jo
fdivs
mov
stos
ds
cwtl
std
jno
sub
js
xor
cli
jg
inc
arpl
push
adc
xchg
add
lods
outsb
lods
out
aas
jp
mov
sub
aam
sub
dec
lods
test
adc
stos
outsl
or
add
mov
hlt
pop
jmp
ja
aas
mov
jp
arpl
push
jbe
mov
scas
stc
sti
jae
cmpsb
cmc
lcall
int
lea
mov
lea
jmp
mov
mov
pop
and
sub
lahf
mov
test
cmc
call
jp
mov
mov
popf
icebp
inc
inc
cld
test
dec
pop
decl
dec
ja
inc
scas
int3
enter
outsb
dec
mov
loop
push
mov
imul
int3
dec
insb
lcall
jl
sbb
loop
mov
pop
xchg
inc
addr16
out
das
sar
jmp
xchg
subb
pop
cmp
adc
mov
add
shr
push
jns
or
movsl
dec
nop
sub
jne
pop
lock
sub
cli
cmpsl
out
push
pop
divb
incl
pusha
dec
adc
negl
cmp
stos
insb
pop
bnd
outsl
adc
int3
gs
scas
lcall
je
cmp
sub
mov
mov
sbb
sub
cmp
sub
ret
icebp
xchg
jmp
gs
push
mov
dec
push
mov
fwait
cmp
mov
call
scas
insl
std
cmp
fmulp
rcll
fiadds
out
pop
xchg
ljmp
sbb
inc
cli
scas
cmpl
sub
pop
pop
out
pop
mov
rclb
sub
adc
in
call
rol
inc
mov
rcr
jb
lea
xchg
incl
lods
pop
scas
outsb
cmp
sub
sub
xchg
movsb
jg
or
jg
incl
push
imul
jecxz
inc
pop
sub
adc
data16
push
lods
sub
icebp
andb
lcall
movsl
xor
shlb
or
inc
pusha
imull
cmp
jl
mov
roll
mov
cmp
inc
add
mov
ljmp
cltd
mov
mov
faddl
cli
jnp
jbe
inc
shlb
decl
iret
out
sub
xlat
mov
pop
jmp
mov
sti
push
sub
jg
or
mov
nop
adc
cmpsl
and
push
mov
mov
or
das
mov
mov
add
jns
out
out
sbb
sbb
enter
xchg
jns
call
cli
xchg
sarl
addb
je
inc
cmc
fadds
xchg
je
mov
movsl
jle
pop
lds
fwait
dec
jmp
mov
adc
push
fstps
lods
lock
mov
movsl
add
pop
cmpsb
xor
mov
rcr
dec
insb
aam
lret
fdivr
push
ror
call
cld
fdivl
sub
adc
dec
mov
in
ss
mov
subb
pushl
mov
cs
mov
popf
clc
or
inc
xchg
xlat
sahf
sarb
pushl
lea
jecxz
lds
jns
int3
pop
cmp
mov
jg
popf
in
sub
mov
call
cmpsl
adc
mov
add
push
decl
rorl
sub
mov
jle
sbb
pop
std
jl
cmp
inc
iret
stos
and
notb
xor
in
arpl
sub
lahf
iret
fld
dec
xorl
cmpsb
push
test
push
or
stos
fistpl
incl
mov
push
xlat
inc
xor
pop
inc
into
mov
popf
jnp
add
lcall
mov
xor
ja
ficoml
fsubrs
mov
jl
adc
call
ljmp
and
or
mov
and
lret
cmp
outsl
movsb
push
in
inc
data16
jmp
mov
lcall
mov
mov
les
adcl
sti
out
test
jecxz
push
mulb
in
jmp
pop
enter
data16
pushf
movsb
mov
pushl
jno
fwait
rcll
jl
and
pop
imul
in
in
lcall
lret
dec
orl
rcrb
popa
pop
dec
movntq
nop
or
xchg
jg
mov
mov
and
or
xchg
mov
incl
loope
xor
nop
stos
mov
fucom
enter
sub
incb
cld
hlt
sbb
cltd
xor
inc
out
loopne
mov
push
cld
lds
and
into
mov
dec
mov
fwait
pop
xor
arpl
inc
sub
test
lcall
xor
jl
in
xlat
out
adc
add
pushf
sahf
mov
bound
push
cwtl
mov
in
insb
in
mov
gs
mov
mov
arpl
dec
jge
in
ds
and
xchg
add
call
sbb
test
imul
js
loopne
movsl
fistps
mov
dec
iret
sti
cmp
inc
xchg
into
jle
push
dec
iret
xor
add
daa
adc
decl
scas
and
lret
jg
mulb
fiaddl
sub
icebp
xorl
cwtl
push
ds
out
insl
cmp
insb
jecxz
repnz
aas
and
pushl
std
push
lret
mov
sbb
mov
jp
ret
inc
cli
aad
fdivrp
cld
stos
and
jp
jg
mov
add
dec
mov
aad
push
jg
cmc
mov
mov
cmp
sub
and
jo
incl
or
jg
sub
push
inc
dec
decl
sub
xor
pushf
adcl
pop
mov
orl
sbb
decl
leave
xlat
mov
add
bound
and
jg
loopne
iret
cld
xor
pop
add
ljmp
leave
ret
fcoms
xchg
call
sub
pop
std
jo
add
lahf
push
or
cli
pop
insl
popf
mov
pop
lock
mov
test
cmpsl
sbb
xor
int3
ljmp
decl
inc
or
loop
lods
xchg
ss
scas
sub
cmp
add
test
incl
lret
and
sbb
pop
jp
xlat
call
les
in
jge
inc
lds
xchg
cli
xor
cmp
mov
cmpsl
ret
xchg
and
sub
test
mov
iret
jp
ret
int3
jb
sahf
stos
pusha
or
xchg
iret
sbb
leave
cmp
pop
cmc
fdivrs
aas
inc
scas
add
mov
es
adc
leave
or
jp
out
stc
jae
dec
pop
and
mov
out
xchg
outsl
leave
clc
in
xadd
ss
mov
popa
fdivrs
or
dec
movsb
fs
sub
pop
fxam
outsl
cli
push
cmp
sbb
xchg
mov
xchg
or
pop
pusha
adc
add
jle
call
je
push
lcall
xor
rorb
out
clc
ret
cmp
nopl
add
decl
and
or
fdivrl
faddl
push
mov
ja
fldt
cli
lcall
dec
lds
idiv
jle
pop
imul
mov
xor
mov
mov
sub
das
cmp
outsb
sbb
call
jge
xchg
inc
cltd
clc
inc
dec
inc
jb
mulb
dec
adc
outsl
push
and
jmp
add
call
xchg
jno,pn
shl
sbb
cmp
arpl
das
rclb
pop
sub
sbbl
dec
dec
xor
xchg
and
arpl
call
adc
xor
arpl
cmpsl
iret
aaa
repnz
aas
jb
cmp
jo
jmp
dec
loope
iret
out
cmp
addb
scas
leave
pusha
sbb
inc
jmp
testl
mov
push
cmc
test
xchg
fdivl
jno
jl
and
incl
jnp
cmpsl
jo
mov
sbb
pushl
jo
add
sub
call
xchg
push
xchg
jne
lret
xchg
ud0
insb
or
imul
sbbb
bound
mov
popf
rcrl
test
jg
mov
xchg
loope
xchg
sbb
les
lcall
sarl
mov
pop
cmc
cs
mov
cmp
lea
clc
fdecstp
lea
nop
aaa
leave
lahf
jmp
jae
xchg
mov
fildl
cs
aam
mov
sub
fst
lcall
push
or
ret
inc
clc
mov
xchg
cmp
xchg
and
movsl
test
aad
and
call
mov
xor
rorb
call
outsl
add
inc
sbb
inc
or
lcall
xor
pop
out
out
test
push
pop
inc
test
add
pop
ss
js
ret
inc
mov
mov
stc
pop
lods
push
std
jmp
enter
jb
js
cmpl
mov
sbb
inc
jecxz
lcall
sti
gs
hlt
mov
push
int3
cmpsl
push
jmp
fcmovnb
xchg
lock
call
jmp
push
insb
mov
ja
mov
flds
cmc
aad
push
aaa
mov
sbb
push
daa
mov
insb
cld
ret
dec
ljmp
je
popf
inc
sub
outsl
nop
lods
scas
dec
scas
test
sbb
jecxz
icebp
cmpsl
stos
dec
lods
mov
arpl
mov
lock
mov
and
jb
cmp
xor
push
jge
or
pop
sti
push
and
das
hlt
jecxz
mov
js
sub
pop
aaa
cmp
stos
jb
cmp
jle
push
in
pop
cmpsl
push
mov
jne
cmp
cltd
sub
push
nop
mov
mov
cmp
adc
ds
push
lock
fimuls
dec
and
mov
incl
pusha
shlb
fcmovu
mov
cmp
mov
lcall
stos
lock
shlb
push
lret
add
movsl
cmpsb
mov
lods
jne
xor
nop
pmuludq
sbb
xchg
xor
dec
inc
sbb
or
sbb
hlt
jmp
mov
sbb
mov
mov
or
fistps
mov
push
cli
cs
imul
cli
dec
and
xchg
repz
push
pop
sub
push
outsb
mov
aas
mov
xchg
fcomps
sahf
ss
cmp
add
adc
adc
outsb
ds
sbb
aam
xchg
sub
lea
test
int3
push
vpandn
decl
jle
shrl
add
out
aas
lahf
movl
stos
jle
jl
mov
into
ljmp
mov
shr
push
call
sub
mov
loopne
pushf
mov
orb
fnstenv
popf
loopne
clc
jmp
inc
pop
push
dec
push
iret
mov
inc
cltd
iret
and
leave
sbb
call
pop
push
filds
xchg
add
mov
cmpsb
push
popa
jno
sbb
aas
sub
call
les
cltd
jp
cmp
insb
inc
xor
out
mov
mov
call
adc
stc
out
das
test
adc
mov
lcall
cld
ficomps
mov
sub
shll
xchg
or
ja
and
cmp
cmpb
lods
lods
pop
jecxz
push
das
cmpsl
push
xchg
std
adc
xchg
xchg
mov
dec
xchg
add
add
aas
arpl
mov
ja
add
shl
rolb
shrb
incl
in
aam
mov
inc
xchg
push
jp
sarb
dec
pop
outsb
pusha
cmc
or
add
mov
loope
dec
sbb
scas
jne
pop
jae
add
das
pop
loopne
bound
loopne
cld
lods
push
ljmp
jo
xchg
aad
adc
sub
sbb
mov
inc
push
call
push
mov
push
adc
and
xchg
jnp
lock
jmp
call
pop
xor
sbb
xor
inc
xchg
leave
xor
add
mov
mov
rcrl
clc
inc
xchg
jg
ds
or
sti
rorb
out
dec
sub
jno
inc
xchg
lret
mov
incl
in
add
mov
addr16
nop
xlat
dec
pushl
cmp
shl
xchg
jne
sbb
outsb
enter
xor
mov
add
ljmp
mov
jmp
pop
and
idivl
in
mov
mov
sub
xchg
adc
xor
push
cmp
dec
cs
mov
mov
push
adc
mov
pop
addr16
sahf
pop
rorb
lcall
rorl
rol
jmp
cld
pushf
inc
xor
mov
shr
dec
jnp
push
mov
incl
iret
and
adc
outsb
adc
jle
and
lock
mov
xchg
mov
incl
jl
cmpsb
inc
pop
fld
inc
add
or
sbb
test
or
mov
je
fwait
xor
xchg
lds
ret
mov
mov
incl
adc
pop
mov
push
movsb
int
xor
xlat
push
xchg
fnstenv
add
call
sbbl
test
xchg
cmp
xchg
jg
lahf
hlt
mov
xor
pop
mov
sub
ljmp
shlb
out
imul
mov
xchg
std
dec
loopne
out
ja
in
test
jno
mov
movsl
shl
js
jge
stos
cli
sbb
stos
mov
jns
inc
and
cmp
in
ljmp
leave
lret
push
loope
mov
jl
das
push
xchg
aas
test
into
std
fs
adc
sub
inc
test
mov
jns
push
cs
jnp
and
pop
aaa
ds
incl
add
and
mov
aas
push
push
mov
jns
call
loop
repz
dec
dec
mov
inc
cmpl
and
adc
jle
mov
test
cwtl
xchg
cmp
in
not
jg
sbb
dec
mov
xchg
std
decl
sbb
fmuls
inc
shlb
mov
ss
in
shrb
or
test
ljmp
mov
jl
fcomp
lods
int
mov
movsl
in
sbb
dec
fimull
inc
outsb
xchg
test
adc
sti
xchg
stos
or
cmp
jp
popf
ret
or
mov
loop
loopne
dec
xor
shrb
fistl
das
clc
subl
jno
mov
in
xchg
cli
xchg
rcrl
pop
add
add
push
pop
call
cs
sbb
dec
mov
and
cmp
lcall
or
or
pop
loopne
lcall
sub
sbb
and
sub
pop
xlat
ret
aam
aas
pop
aaa
into
decl
std
rcrl
push
xor
popa
xchg
loop
cwtl
sub
call
mov
dec
jae
push
das
adc
ret
adc
test
xchg
in
sub
cmp
jg
incb
cmp
push
dec
pushf
xchg
inc
jmp
push
mov
decl
into
repnz
sbb
icebp
jle
aam
adc
dec
jg
lds
mov
lods
test
sbb
mov
adc
test
xchg
call
inc
add
pop
sub
cmp
jno
pop
mov
test
std
clc
shll
xor
push
popf
sub
insl
pop
mov
cmp
sbb
arpl
mov
leave
nop
push
mov
aad
cli
cmp
and
xor
add
or
jp
xor
sub
inc
mov
and
and
cld
push
mov
sub
cmp
fwait
and
lcall
sti
jns
sbb
cld
test
fcomps
jge
and
out
jmp
ss
jl
call
clc
push
fisubs
mov
int3
cmp
cmp
mov
mov
ljmp
jecxz
stos
or
imul
scas
je
inc
sti
fcmovne
adc
add
in
sub
int
mov
js
sub
mov
adc
mov
call
test
das
jl
ljmp
jle
push
jle
cmp
xchg
mov
push
or
sbb
lcall
push
fcmovu
jne
lock
cmp
xchg
pop
adc
xchg
push
pop
mov
jg
jb
shr
fstp
or
dec
leave
or
or
add
imul
cltd
jl
mov
mov
int3
inc
jnp
popa
enter
popa
push
inc
test
inc
or
pop
cmpsb
mov
cmp
sar
rcll
mov
push
xor
and
or
mov
insl
mov
cwtl
fdiv
push
lock
insl
sub
ds
ljmp
add
ljmp
mov
mov
and
or
push
mov
mov
cli
clc
jge
imul
fidivs
push
insl
jbe
call
dec
mov
or
ret
mov
jbe
push
sahf
and
int3
mov
xchg
movsl
jmp
shr
je
pop
jl
sub
pop
sub
enter
outsb
pusha
jb
pushf
ljmp
cli
mov
add
cld
insb
inc
lcall
mov
lcall
ret
sub
jmp
sub
out
mov
sbb
xchg
mov
stos
cmp
adc
mov
js
add
icebp
les
xchg
or
xor
test
fcomip
cmp
sub
aam
movsb
mov
popf
mov
vmovupd
dec
jle
bnd
int
sub
lret
mov
cmp
xor
hlt
call
das
mov
testl
push
xchg
dec
aad
sbb
pushf
shll
and
cltd
inc
call
ror
test
and
pop
fisubs
push
ficompl
adc
movsl
ret
lcall
pop
push
and
jmp
push
dec
out
push
jb
cmp
aaa
pushl
jno
mov
imul
adc
daa
jae
mov
dec
hlt
ljmp
jmp
mov
jno
pop
int3
mov
mov
push
scas
clc
cld
int3
data16
jmp
mov
outsb
mov
test
inc
pop
lcall
fdiv
in
sbb
lcall
stos
push
xchg
lea
bound
push
sbb
xchg
fdivs
cmp
add
in
dec
sub
pop
scas
dec
lods
sub
in
jmp
in
fidivl
adc
inc
clc
cmp
jge
in
push
shrl
and
ljmp
xor
adc
push
xchg
movsl
movsl
and
aad
cli
mov
mov
leave
ja
sar
mov
fisubrl
xor
xor
sbb
push
aam
cmc
mov
jmp
inc
pusha
imul
mov
sbb
ja
adc
fsubl
jge
aad
jns
cmpsl
mov
std
jmp
sub
or
aaa
daa
add
sub
mov
xor
pop
jno
jg
or
cmpsb
push
out
fildll
sbb
jecxz
mov
cmc
fidivs
call
sub
outsl
popf
dec
aaa
jne
add
jnp
inc
cmpb
fs
inc
cmp
sbb
pop
sbb
adc
loopne
pop
sahf
cmp
scas
sub
cld
cs
hlt
fldcw
int
hlt
mov
push
int
hlt
int
loope
dec
lret
add
js
mov
popf
xlat
ljmp
clc
dec
xor
aas
inc
push
pop
nop
jnp
or
popa
fidivs
sbb
pop
call
cmp
cs
jge
mov
xchg
lret
push
push
test
mov
dec
fldenv
mov
mov
fcomip
call
xor
sahf
pusha
popf
test
call
xor
decl
sub
movsl
jo
and
jae
mov
add
mov
popa
shlb
push
inc
and
shlb
xchg
cmp
fdivs
dec
testb
inc
test
or
or
inc
rolb
xchg
aaa
mov
fbstp
hlt
push
jmp
incl
inc
mov
xchg
sarl
scas
mov
jae
das
pop
and
pop
data16
icebp
inc
add
inc
mov
in
rorb
cmp
cltd
je
xor
mov
ret
inc
in
nop
arpl
lcall
mov
jo
or
mov
push
mov
mov
add
rorb
jl
xor
lods
rcl
lret
add
call
mov
push
cmpsl
pop
in
add
inc
iret
inc
cmpsb
repz
test
incl
lods
mov
popa
push
jge
bnd
mov
icebp
loope
subl
push
mov
adc
push
test
mov
rolw
lcall
mov
mov
xchg
adc
ss
cld
mov
mov
cli
movsb
test
sub
push
rolb
lods
mov
jg
ljmp
push
cmp
push
rcrl
sub
jo
movsl
call
cld
push
icebp
push
mov
outsb
jbe
xor
dec
hlt
fimuls
jnp
decl
dec
push
or
je
leave
pop
imul
and
mov
mov
movsl
in
push
imul
mov
pop
cmp
dec
jns
jns
ficoml
stos
jo
fists
inc
mov
push
rcll
test
and
fistpll
sub
vzeroall
test
jo
loopne
in
pop
imul
ja
mov
jmp
mov
int3
lock
cli
clc
mov
divl
andl
and
lea
xor
jg
icebp
into
mov
fldcw
shrl
cmpsl
mov
imul
ljmp
mov
jle
stos
push
jle
movsl
dec
mov
xor
into
es
cmp
jp
mov
adc
ss
fidivrs
sbbl
dec
dec
push
imul
ljmp
clc
pushl
daa
cltd
xlat
jb
das
or
cmc
mov
xor
invd
dec
aam
xchg
mov
mov
test
std
jmp
loope
xchg
nop
xchg
mov
loop
stos
pop
xchg
data16
adc
cmc
outsl
ss
das
and
mov
ja
adc
cmpsb
add
adcl
jmp
mov
lret
loop
in
dec
lcall
imul
jo
sbb
fildl
cmc
mov
inc
cmp
enter
pop
shrl
ds
pop
mov
ljmp
jns
dec
test
sbb
daa
call
xor
je
sbb
dec
xor
and
sub
jecxz
aam
mov
jl
ss
fwait
mov
lods
idiv
jmp
and
jge
cwtl
dec
cmp
int3
inc
cmp
pop
xchg
mov
inc
and
test
jmp
cmp
in
insb
jns
lret
mov
inc
arpl
inc
out
sub
sub
into
sub
jg
push
inc
clc
lods
xor
negb
mov
ds
xchg
fisttpl
xor
xchg
jae
dec
in
push
out
test
jmp
inc
jae
pop
pop
fs
inc
mov
sar
cld
stos
xor
cmc
ds
cmp
xchg
mov
insb
pop
mov
int3
sar
mov
bnd
lods
jmp
data16
jge
jnp
jp
mov
pop
iret
push
or
mov
or
in
and
ljmp
addr16
dec
in
push
je
insb
or
push
push
mov
cmp
or
outsb
pop
sar
aas
xchg
jmp
mov
dec
push
insb
xchg
out
ss
test
in
lea
into
test
and
sar
mov
lods
pop
and
push
test
nop
sahf
pop
jecxz
and
mov
jl
loope
xchg
leave
sub
mov
cs
popf
shll
push
incl
mov
mov
jge
xchg
and
jecxz
orb
xchg
mov
lcall
icebp
sti
fiaddl
inc
mov
stos
arpl
cmp
fsubrl
test
jnp
dec
mov
fwait
pop
fucom
mov
aaa
cmpsl
fucomip
inc
cld
jae
pushl
cld
inc
lret
and
data16
mov
aad
jo
enter
test
pop
std
ljmp
push
push
push
inc
mov
pushf
and
mov
mov
pop
shll
pop
call
dec
stos
sar
les
and
or
sub
ja
mov
call
push
push
ret
in
cld
mov
aad
ss
sahf
cwtl
enter
out
and
decl
xchg
adc
mov
xor
subb
xchg
roll
xor
cmp
sbb
ljmp
or
cmp
mov
mov
push
loope
scas
add
jo
idiv
sarb
xchg
ret
incl
call
ficoml
jp
cmpsb
xchg
jae
pushf
or
popf
cmpsb
insb
dec
pop
addr16
and
jmp
jmp
xchg
dec
lock
imul
push
jno
aad
xchg
cmpsb
mov
jne
lcall
xor
push
in
xchg
xor
cmp
and
mov
mov
mov
mov
dec
ss
jns
pop
xchg
lret
sbb
cld
insl
jmp
dec
and
inc
jnp
pop
and
add
mov
mov
mov
inc
push
inc
js
insb
icebp
dec
dec
fistl
sub
lock
mov
dec
ljmp
cmpsb
sub
adc
xor
dec
cmp
dec
pop
test
and
data16
test
orb
and
nop
fcmovu
call
ljmp
mov
mov
andl
into
and
divb
aas
lcall
xchg
aaa
movsb
es
dec
into
xor
mov
ljmp
insl
jg
xlat
jg
and
push
jo
sub
hlt
lahf
mov
repz
inc
loop
clc
mov
nop
cmp
inc
es
and
insb
pop
mov
xchg
sbb
out
fsubrs
push
or
inc
pop
insl
dec
in
push
popa
mov
sbb
ret
sbb
sti
and
dec
fld
dec
ss
xchg
ljmp
push
cli
and
ljmp
fnstsw
sub
dec
popf
sub
xlat
lcall
pop
out
mov
leave
lods
mov
cld
int3
test
or
arpl
daa
dec
sub
mov
pop
add
jg
dec
das
push
out
das
xor
loop
jo
xchg
xchg
and
das
mov
decl
leave
mov
andl
rolb
stos
jo
and
jmp
push
mov
adc
inc
push
rorl
cmpsl
inc
rep
jp
cmpsl
sub
mov
call
jge
sub
pop
or
fstpt
cmc
sbb
rcrb
adc
xorl
lea
sahf
je
popa
ljmp
pushl
pop
adc
push
pop
sbb
mov
movsb
gs
incl
cmp
ljmp
js
push
or
pushf
pop
cmc
fcomi
add
pop
ljmp
jns
mov
int3
bnd
jns
enter
sub
movl
pop
flds
lcall
push
dec
and
xor
icebp
dec
xchg
mov
cmp
push
shlb
jb
push
pushf
setge
dec
mov
xor
out
gs
sbb
loop
in
cmp
mov
mov
scas
xchg
dec
pushf
sarb
outsl
call
or
jmp
test
test
sti
psraw
out
mov
cltd
repz
add
xchg
jnp
cmp
lcall
aaa
pop
or
xor
ljmp
aam
fs
push
push
sahf
or
call
xor
adc
daa
push
cld
mov
push
ljmp
mov
data16
pushf
xorl
mov
mov
fldcw
mov
repz
incl
and
xchg
sbb
xchg
addr16
mov
lods
xchg
adc
and
call
ljmp
mov
cmp
jle
testb
repz
cmp
repz
sar
in
mov
mov
pop
xlat
scas
inc
mov
repnz
stc
out
add
mov
sti
decl
in
sti
jmp
pop
sbb
xor
scas
aam
std
fisubl
lods
xor
pushl
loop
pushf
mov
aaa
popa
mov
lar
mov
iret
or
leave
loope
movsl
test
mov
cmpsb
incl
sbb
test
addl
add
lcall
mov
cltd
sbb
fst
nop
mov
push
pop
push
std
adc
mov
decl
pop
outsl
lcall
and
shll
sub
mov
nop
outsl
xchg
enter
jmp
outsb
push
scas
fstps
pusha
push
roll
fistpll
sbb
sbb
jecxz
imul
pushl
pop
jbe
cmpsb
jnp
push
jno
testl
dec
ds
ja
xchg
xor
adc
mov
add
inc
or
shll
jae
dec
insb
out
clc
cmpsb
cli
xor
inc
ljmp
sbb
jmp
decl
jle
shrb
orl
sub
ss
repnz
cmp
mov
xchg
and
test
pop
and
fisubl
xchg
add
cmp
decl
and
cmp
mov
adc
or
hlt
fldt
cli
adc
mul
sahf
push
lods
js
xchg
icebp
mov
inc
push
pushl
test
mov
repz
and
fisttps
pop
sub
xorb
outsl
pop
fucomi
add
popf
cmpsb
push
jecxz
push
fcoms
push
lods
jbe
imul
cmc
mov
xor
pusha
mov
push
dec
lds
movsl
xchg
push
push
jmp
lahf
add
lcall
pop
clc
push
int3
cmp
xor
jmp
xchg
inc
nop
imul
sbb
dec
sbb
test
mov
xchg
call
xchg
cld
mov
call
jno
sbb
mov
enter
arpl
push
inc
movsl
into
das
dec
xor
mov
out
xchg
push
adcl
ljmp
mov
sbbl
leave
mov
repnz
push
shlb
cmp
decb
pop
hlt
cli
or
or
jo
pop
xchg
aaa
daa
shl
cmpsb
inc
fbstp
mov
decl
subl
xor
scas
xlat
repnz
pop
jmp
test
xlat
add
cmc
xor
xchg
out
push
icebp
das
xchg
mov
es
adc
shlb
lock
out
add
lods
comiss
scas
mov
inc
fwait
sbb
clc
inc
adc
or
addr16
ud0
out
pusha
es
dec
pop
cltd
jb
leave
and
xchg
pushl
inc
push
outsl
cmp
jl
aam
arpl
jg
jg
arpl
cld
inc
mov
mov
lcall
cmp
mov
sahf
test
out
pop
sbb
sbb
repz
dec
decl
clc
cmpsb
mov
stos
dec
lret
xchg
mov
jne
xchg
out
fisttps
xor
lret
jmp
xor
push
sub
dec
jl
cmp
lds
rcrb
mov
add
sub
pop
sti
mov
mov
ret
aam
push
mov
scas
push
adc
pop
cmp
outsb
and
subb
dec
xchg
add
jle
add
inc
sti
nop
cmpsl
andb
shll
jle
mov
mov
pop
jne
or
call
jmp
inc
jns
push
inc
pop
push
cltd
xchg
and
movsl
push
inc
bound
lret
cmpsb
fldenv
js
shrb
addr16
adc
jb
bound
decl
rcrl
xchg
cmp
xor
sbb
sub
mov
imul
jmp
pop
addb
movb
leave
aam
cmp
in
std
inc
popa
jmp
mov
insl
cld
outsl
xchg
scas
inc
ja
mov
mov
jl
mov
fldl
ljmp
rorb
push
dec
lods
sub
xchg
dec
fwait
lret
mov
add
scas
clc
jmp
push
sub
or
mov
sub
test
fisubs
hlt
pop
or
mov
push
loopnew
mov
mov
arpl
test
lods
into
lcall
loopne
add
mov
testl
sbb
inc
xchg
mov
jb
xor
decl
jg
sbb
xchg
xchg
outsb
mov
push
and
out
push
jo
loope
cld
jmp
sti
call
sub
jp
in
mov
imul
addb
and
ja
cmp
scas
cli
xor
jnp
subl
std
out
push
mov
xchg
incl
push
inc
ficomps
mov
and
jbe
pop
jmp
sti
sahf
or
xchg
mov
add
ljmp
pop
xor
jnp
mov
inc
mov
adc
mov
push
dec
cli
xchg
call
neg
rorl
push
addr16
jecxz
and
aaa
int
mov
jp
xchg
xor
xor
popf
into
shlb
jecxz
or
push
sbb
lcall
bound
es
js
cmp
jge
sbb
push
aaa
sahf
cs
xor
xchg
jmp
fsubr
into
sub
js
sub
jne
xchg
inc
jg
sbb
push
mov
icebp
cmp
ljmp
cmpl
shll
fists
scas
sbb
jle
idiv
pushl
adc
lcall
push
mov
test
stc
insl
or
jmp
in
in
push
or
and
push
sahf
mov
cltd
push
xchg
pop
out
in
shrl
mov
lds
pop
mov
mov
shrb
jg
dec
fs
flds
out
add
aad
shrb
inc
out
clc
jmp
in
sub
dec
cltd
xor
pop
mov
adc
mov
gs
in
adc
sub
pop
xor
imul
sbb
jns
dec
add
jne
out
pop
cmp
incl
stc
jl
cmpsl
pop
insb
sarb
popf
pop
sub
or
mov
decl
xor
xchg
arpl
fldt
enter
jmp
mov
idivl
push
fbld
pop
fcoml
stc
cltd
lock
adc
mov
add
subl
ficoml
imul
mov
call
imul
jmp
push
dec
xor
jne
cmc
pusha
std
add
push
addr16
lcall
jge
daa
imul
imul
or
aaa
inc
pop
add
inc
test
jnp
int3
cwtl
fs
jg
dec
dec
jl
sar
jg
jge
fbld
push
cmp
adc
insl
mov
xchg
push
cmp
lcall
imul
iret
push
push
jb
sbb
xchg
dec
leave
mov
std
jecxz
pop
incl
push
inc
call
shr
pop
std
shlb
mov
ret
pushl
roll
and
ret
inc
imul
into
inc
xor
jne
into
fldlg2
incl
jo
dec
and
mov
and
dec
xchg
jge
ret
adc
mov
dec
mov
xchg
loope
insb
add
mov
xor
stc
pop
mov
sbb
mov
or
cmp
stc
scas
jp
pushf
outsl
les
mov
inc
push
call
or
sbb
dec
mov
inc
xor
or
cli
inc
cwtl
shlb
idiv
call
ss
mov
je
jg
cli
cmp
test
xchg
xchg
cmp
cmpsl
and
push
push
lahf
jge
xchg
outsb
adc
lcall
sub
mov
mov
imul
ljmp
mov
adcb
sahf
loop
leave
add
fwait
test
pop
cmc
jg
lret
sub
jae
mov
out
adc
cmc
in
pop
sub
mov
mov
sub
scas
sub
cmp
fdiv
add
xor
mov
loop
inc
fdivrp
mov
xchg
out
fisttpl
push
and
mov
test
jl
pop
or
out
dec
adc
lcall
loope
cmp
aam
pop
sub
jp
mov
sub
jmp
ffree
movsl
lahf
std
mov
push
jae
cmpsl
mov
insl
inc
std
push
push
scas
mov
sbb
mov
outsl
mov
sub
iret
push
in
sbb
decl
dec
movsb
aam
push
lcall
insl
mov
sbb
leave
stc
mov
jle
pop
sbb
test
jb
xor
ljmp
sti
or
jp
sti
adc
push
jo
jbe
aas
es
sbb
cmp
xchg
sbb
inc
mov
fcomip
shlb
cli
inc
pop
sbb
sub
aad
xchg
cmp
mov
sbb
jnp
outsl
push
dec
mov
cmpsl
cmpsl
xchg
pusha
mov
adc
addl
clc
mov
pushl
mov
ss
cmc
jp
or
xor
int
scas
fs
test
jmp
cmpb
movsb
ret
aas
jne
xor
sub
jge
fs
sahf
cltd
xchg
aas
lock
ljmp
addr16
sbb
add
in
push
mov
in
lcall
dec
sbb
gs
decl
sub
pop
outsl
cmp
pop
shrl
xorl
test
mov
imul
sti
ljmp
inc
push
mov
pushl
std
jmp
sbbb
sti
mov
lea
fisubrl
testb
sbb
lret
lcall
inc
popf
cmp
add
js
dec
cmp
inc
insb
mov
int3
pop
pushl
mov
pslld
xchg
push
add
push
pushf
lea
fildl
cmp
jmp
fcmovu
fcomps
jl
pop
rclb
nop
ss
adc
mov
call
sbb
jae
push
mov
sbb
sbb
xchg
or
ret
jno
ljmp
mov
incb
pop
cwtl
mov
gs
mov
js
and
movsb
in
jmp
add
jae
mov
push
or
lea
inc
iret
push
mov
inc
push
repz
and
xor
add
lock
mov
xor
fcmovb
sub
shll
fnsave
movsl
xchg
sub
lcall
push
into
rorl
repnz
pop
push
sub
push
inc
ds
inc
ljmp
stc
cld
push
or
mov
mov
pop
mov
jmp
push
mov
xchg
cmp
insl
mov
and
jo
sbb
pop
lock
lock
clc
cmc
sub
icebp
dec
xor
in
addr16
lods
lds
fcomip
clc
add
movsl
lock
in
adc
or
scas
cli
mov
push
xchg
ljmp
fucomip
loopne
and
mov
cmpsl
cltd
and
ret
cmp
es
popf
push
call
out
or
pusha
xchg
pop
xchg
mov
std
bnd
cli
iret
add
jge
jmp
xor
stc
inc
int3
sub
jb
push
cli
out
jge
mov
jmp
or
lods
xchg
decl
add
pop
in
lret
fadds
inc
test
int3
and
out
shl
incl
inc
and
in
push
cmp
jp
jbe
pop
xor
iret
call
sub
call
dec
dec
out
pop
movsl
push
aad
sarl
sbb
xchg
imul
sbb
push
ud0
cmp
inc
inc
repz
adc
sbb
jmp
sar
inc
mov
inc
daa
sub
mov
out
std
pushf
das
cli
jg
cmc
jae
or
lods
jno
enter
xor
jne
jmp
push
testl
stos
loop
push
push
notb
aad
mov
dec
ss
xchg
lahf
les
inc
pop
inc
fsubl
pop
xchg
lcall
dec
pop
push
mov
jmp
stos
rolb
jne
cld
arpl
mov
sub
mov
pop
and
xor
jmp
push
mov
mov
popl
ret
ret
mov
into
aas
lea
cmpsb
jne
rorb
incl
add
mov
inc
pop
fcomi
loope
iret
notl
mov
fadds
mov
les
and
inc
shll
or
in
fists
repz
jmp
adc
jl
iret
push
xchg
push
dec
xor
dec
mov
stc
outsb
pop
sbb
out
jmp
mov
and
pop
mov
int
psrlq
push
rcr
push
int3
scas
sub
loopne
mov
xor
sahf
js
and
inc
popa
sbb
das
adc
ljmp
ljmp
inc
lcall
xchg
stc
xor
adc
xor
xchg
dec
in
fwait
lcall
push
sbb
xchg
mov
or
mov
xlat
pop
xor
jle
jmp
jmp
jg
loope
push
mov
and
cmp
jge
clc
mov
pop
mov
jg
pushl
lret
bound
sub
inc
xchg
scas
int3
adc
test
adc
jmp
sub
imul
stos
xchg
pop
arpl
xor
adc
pop
sub
cld
inc
outsl
mov
or
ljmp
jge
loop
xchg
cmp
subl
ja
leave
mov
pop
dec
mov
fadds
decl
and
lret
mov
movsb
adc
inc
cld
mov
cs
rclb
js
jg
mov
add
imul
int
cmp
inc
imul
iret
mov
dec
add
repz
push
mov
fsubrl
outsl
or
mov
pop
cmpsl
pop
jo
lods
mov
std
xlat
lret
fisttps
test
or
mov
fildl
mov
pop
data16
pushl
arpl
cmp
push
mov
or
ss
jecxz
sbb
bound
incl
mov
int3
mov
mov
dec
leave
mov
add
sti
push
jge
mov
jmp
roll
lods
xor
imul
cmpsl
push
outsl
push
jns
jne
dec
fwait
pop
jl
add
mov
mov
sbb
jae
std
jae
gs
lock
pushf
cli
hlt
mov
incl
push
lods
and
pop
stos
ds
lea
adc
faddp
nop
fnstenv
mov
imul
xchg
stos
into
push
enter
lods
andl
xor
inc
add
stos
cmp
out
lcall
inc
lock
incl
or
je
daa
mov
arpl
ljmp
clc
mov
jp
mov
cmp
xchg
clc
jge
push
mov
stos
push
mov
push
call
dec
lods
mov
scas
cmpsl
add
cmp
aad
add
push
jp
cmp
fidivrl
and
lcall
inc
mov
dec
jae
lock
popf
ror
stos
fs
nop
out
pop
dec
pop
add
mov
mov
pushl
std
out
scas
ljmp
add
js
xchg
sbb
pusha
ja
imul
in
inc
aas
scas
loopne
jo
js
ret
fdivrs
jle
flds
stos
mov
push
cltd
movsb
or
enter
lcall
adcl
rclb
mov
pushl
rcll
jbe
mov
jp
imul
or
je
inc
mov
sbb
pop
sub
stos
rorl
test
or
pop
mov
ds
call
jp
push
mov
pop
das
pop
cmpl
ja
sub
sarb
call
xlat
pop
sub
out
xchg
ds
sbb
cmp
int3
or
out
cmp
das
clc
out
movsb
mov
insl
xor
mov
mov
adcb
decl
push
popf
lahf
mov
fs
and
sahf
cs
jmp
mov
mov
and
sbb
es
jns
mov
inc
cli
mov
out
add
adc
gs
imul
int3
insb
fidivrl
mov
push
lods
xchg
mov
dec
pop
sbb
push
data16
push
fs
xor
fistl
ljmp
adc
jg
adc
mov
aad
je
roll
jle
bound
lock
pushl
fnstenv
or
lahf
mov
push
fsubs
xchg
xchg
push
add
dec
aas
cmpsb
dec
and
es
jg
mov
inc
insl
fisubrl
adc
incl
dec
mov
out
mov
pop
adc
out
dec
dec
scas
icebp
push
jecxz
xchg
mov
jnp
dec
jg
in
pop
xor
lock
or
mov
jmp
stos
fdivrl
xor
cmp
popf
dec
das
loope
jae
pop
mov
cmc
hlt
out
xor
outsb
fnstsw
icebp
adc
jmp
sbbl
insl
lods
jge
nop
and
inc
cmpsl
ret
sub
out
cli
rclb
push
xchg
insb
dec
jne
push
js
ljmp
and
sub
mov
aam
push
inc
jg
mov
jo
xchg
test
pop
mov
in
fadd
sub
mov
and
decl
popf
sub
lret
scas
jecxz
sub
mov
popf
icebp
enter
out
lods
mov
cmp
push
dec
push
xchg
daa
pop
lods
mov
mov
dec
stos
cmp
jp
out
mov
sbb
mov
movsb
rorb
lea
sub
sbb
pop
mov
call
test
ss
into
push
xchg
inc
scas
pop
push
cmp
push
aad
inc
mov
ljmp
iret
stos
jbe
jnp
int3
sub
sub
and
out
mov
stc
orl
mov
lods
xor
lret
push
sub
mov
cli
rcll
dec
mov
xchg
lods
outsl
loopne
icebp
cmp
or
data16
lcall
popl
in
popa
lock
xor
mov
stos
xor
jmp
jmp
cmp
pop
push
lods
aaa
jp
test
mov
out
lods
cltd
mov
and
ljmp
or
jno
mov
sub
addl
incl
cli
xchg
cmp
shlb
mov
or
adc
inc
xor
cmc
scas
cli
jmp
xchg
xlat
pop
mov
aaa
jb
in
xor
out
sbb
cmp
jg
decl
or
repz
and
jne
mov
adc
ds
mov
lret
ljmp
lcall
mov
gs
lcall
es
pushl
or
lahf
add
mov
outsl
or
sti
cmp
jl
mov
push
push
mov
gs
inc
jno
mov
jp
hlt
or
cli
mov
pop
adc
push
mov
fsubrs
push
ja
bound
pop
rsm
xchg
jne
sub
xchg
add
mov
pushl
cli
out
jl
jg
hlt
and
jg
dec
xchg
or
fidivrl
enter
repz
mov
fnstcw
popa
xor
dec
push
cmc
fnsave
xchg
xchg
rolb
xor
fcomip
out
aam
sbb
sub
rcr
rorl
aam
dec
fwait
movsb
push
dec
insb
pop
sub
cmovno
enter
add
inc
xchg
scas
clc
add
repz
inc
loop
lret
mov
sub
cmp
ljmp
and
dec
in
aaa
test
adc
jae
scas
gs
inc
fidivrl
faddl
push
std
dec
jg
ljmp
push
mov
test
inc
ds
std
inc
inc
mov
or
into
push
roll
adc
stc
pop
iret
sbb
sbb
in
mov
in
jmp
pusha
lret
das
and
aam
or
movsb
pop
mov
sbb
dec
mov
xor
imul
mov
xor
test
inc
cwtl
lret
adc
inc
loopne
inc
jns
mov
repz
test
and
incl
pop
and
repz
pushf
imul
sbb
mov
arpl
cltd
dec
jbe
ret
jl
adc
adc
ja
push
aaa
sub
sbb
dec
lock
cmp
cs
call
dec
push
and
xor
sahf
push
pop
adc
jecxz
inc
xchg
negl
cli
arpl
out
aam
jge
push
inc
mov
and
pop
in
and
xor
enter
mov
stc
mov
out
adc
subb
push
pop
cmp
stc
fbstp
int3
lcall
jmp
into
jo
adc
mov
rorl
xchg
inc
mov
push
out
mov
fcomip
ljmp
fisubs
mov
imul
loopne
movsb
pop
adc
sub
into
incl
cld
ljmp
pop
movsb
adc
rclb
fdivl
clts
idiv
ljmp
sbb
je
sbb
fwait
or
push
jae
xor
out
add
jg
jmp
pop
mov
mov
xchg
les
mov
scas
insl
cli
mov
in
sub
ljmp
sbb
rcl
shrl
rep
jns
std
lods
xchg
inc
pop
jbe
ja
std
ds
incb
sbb
jns
aad
mov
push
xchg
push
lock
ljmp
cmp
mov
int3
movsb
push
mov
jg
jp
or
jnp
scas
dec
rorl
jmp
pusha
xchg
sub
sub
fs
push
or
movsb
mov
movsb
cmp
stc
xchg
setl
call
fiadds
lods
pop
push
push
mov
imul
jle
or
gs
push
test
std
call
pushl
xchg
lds
lcall
adc
jb
pop
mov
sbbl
add
decl
sbb
nop
insb
jns
jecxz
push
or
and
fisubrl
loope
ret
xor
ljmp
rcll
xor
xchg
jmp
push
scas
lea
cmc
dec
inc
xlat
jl
ljmp
jbe
inc
sar
jmp
clc
das
test
mov
aad
push
xchg
fs
dec
out
inc
ljmp
outsb
stc
and
std
pushl
inc
jg
mov
and
jae
lds
or
shl
outsb
xchg
in
jg
decl
lahf
mull
nop
shll
mov
ss
incl
es
and
cld
fimuls
push
js
xchg
ja
jecxz
inc
push
xlat
out
push
or
mov
sub
pushf
cld
outsl
fwait
dec
jbe
jg
test
jae
scas
inc
gs
enter
push
mov
xor
kmovb
jle
xchg
add
lods
fisttpl
incl
sbb
push
call
lahf
xchg
adc
cmpsb
into
xor
push
pop
gs
lcall
and
stos
xchg
sub
lock
ret
in
lds
imul
fstl
fsubl
lock
push
fs
mov
mov
lret
aad
mov
call
xorl
repnz
pop
repz
out
inc
and
ja
mov
out
cli
ljmp
cmp
les
push
pop
push
out
adc
jmp
aas
repnz
add
xchg
outsb
loope
mov
stos
retw
je
lcall
dec
and
loopne
xor
repz
in
mov
xchg
jmp
jmp
sub
fmulp
push
and
test
lods
ds
jl
dec
mov
call
cmp
jnp
jnp
sub
mov
or
ljmp
dec
scas
add
mov
iret
xchg
lea
xor
sarb
xchg
hlt
addr16
pushf
aam
imul
pop
in
lods
sti
inc
into
dec
jmp
int3
mov
add
and
test
mov
loop
aaa
std
pushl
jo
sbb
movsl
popa
fdivl
dec
push
int
jnp
cmpsl
or
call
xor
jl
push
xchg
je
cmp
repnz
into
scas
jp
ret
mov
xchg
cmp
loope
call
pop
add
rcrb
dec
adc
out
lret
pop
mov
lock
push
call
add
cmp
xlat
mov
addl
call
dec
mov
sti
add
data16
mov
aad
imull
dec
cmpsl
jmp
jle
push
adc
push
xlat
icebp
cmp
scas
and
sbb
sarl
or
arpl
inc
or
or
sti
jge
sub
test
in
or
mov
test
aam
adc
cmc
fs
incl
xchg
ljmp
jb
das
negb
test
mov
pop
sarb
lods
and
add
or
and
ljmp
mov
arpl
ss
popf
xchg
xchg
testl
stos
jle
aad
ljmp
mov
jge
pop
mov
adc
or
out
rorb
je
dec
adc
sub
jb
push
sbb
cmp
xor
js
jnp
jae
sbb
dec
mov
lahf
push
stos
mov
xchg
aad
xor
ret
call
das
loop
pop
aad
sub
push
pop
and
sbb
aas
and
mov
dec
mov
lods
mov
pop
mov
mov
ljmp
mov
or
enter
mov
cli
cmp
add
in
inc
cmp
js
mov
std
xlat
push
push
popa
xchg
add
out
mov
inc
std
jb
pop
jno
testl
es
andb
sahf
or
ljmp
push
fimuls
loop
ret
or
decl
add
psrlq
aaa
push
data16
push
cmp
dec
jg
push
stos
push
in
iret
sti
push
cld
icebp
mov
fildl
ret
dec
cmovno
lret
add
aas
cli
loopne
pop
pop
adc
dec
jmp
sbb
mov
mov
roll
mov
jl
test
data16
lret
fucomi
in
inc
push
pop
sub
mov
lock
and
out
add
cli
lcall
in
or
xlat
push
sbb
dec
fs
and
and
ret
xor
out
jmp
out
sub
and
adc
or
push
inc
jne
insl
fnstsw
imul
in
or
hlt
rcrb
sub
cmp
mov
pop
mov
inc
dec
mov
lcall
enter
dec
mov
imul
bound
iret
outsl
cld
xchg
imul
lret
sub
push
xchg
in
mov
jae
xchg
jge
pop
shrb
inc
jmp
out
push
and
ss
enter
scas
cmp
adc
mov
cmp
fs
daa
push
lcall
xor
add
lret
jg
icebp
and
aaa
jge
flds
xor
jmp
ss
sub
fs
and
in
add
mov
daa
adc
daa
out
jbe
out
aas
adcb
dec
pop
cltd
sbb
outsl
xchg
mov
stc
pop
cwtl
pop
pop
aam
fcoml
in
pop
cmp
inc
jno
xchg
into
in
stc
aaa
mov
or
je
in
call
jge
enter
cmpsl
ss
add
movsl
mov
ret
fsubs
add
inc
cmp
push
aas
fildll
mov
sbb
pop
cmp
mov
call
fmuls
adc
xchg
or
pop
or
push
adc
stos
loop
sub
ljmp
in
cld
mov
jecxz
push
or
dec
adc
mov
lcall
lods
outsb
mov
aaa
inc
mov
aad
xchg
repnz
clc
pop
out
pop
dec
add
call
stc
sub
pop
mov
xlat
and
scas
cmp
lret
push
push
sbb
mov
pop
aad
dec
jecxz
mov
bound
mov
jne
stc
mov
sbb
lods
and
mov
popa
mov
sub
jmp
cli
test
cld
fists
out
pop
adc
mov
adc
outsl
call
loope
jno
mov
sar
cld
fimuls
pop
repz
ret
repz
clc
pop
imul
int
das
push
lock
aas
in
pusha
mov
sbb
ret
outsb
pushf
call
ljmp
inc
repnz
and
mov
testl
and
and
addr16
test
mov
pop
or
ljmp
loopne
add
sub
mov
mov
push
loope
into
inc
and
mov
cmp
je
xor
mov
out
xchg
gs
push
cltd
add
jp
decl
cmp
adc
jle
shll
and
mov
xchg
ss
jmp
popf
cltd
and
mov
lock
sub
adcl
shll
ud0
call
xchg
popa
add
sub
sbbl
push
imul
xor
pop
jmp
ljmp
xor
push
mov
jns
cltd
pop
cmc
mov
sbb
loope
incl
cmc
inc
cmp
cli
fldl2t
fisttpll
test
inc
xchg
cltd
inc
and
enter
pop
inc
rcrl
aad
mov
xor
cld
out
or
dec
mov
jmp
xor
mov
jg
cmpl
loop
dec
loope
cmp
out
push
mov
lea
sub
mov
mov
mov
mov
mov
leave
fwait
inc
das
dec
imul
xor
ljmp
jecxz
sbb
int
sub
sbb
cmc
mov
int
mov
pushl
cmp
push
sub
outsl
jp
or
pop
xlat
jge
imul
lock
incl
adc
roll
jmp
or
cmp
xchg
popa
in
bound
adc
ffreep
mov
shrb
mov
dec
jae
rorb
negl
xor
ljmp
xchg
add
jo
or
push
gs
iret
pushf
fstps
decl
add
sahf
push
cmp
cmpsl
stc
lahf
loopne
es
int
jmp
xor
bound
sbbb
mov
cmp
xor
aam
jg
in
sub
lahf
adc
jne
mov
and
lock
test
dec
clc
ljmp
adc
inc
daa
dec
adc
lahf
sbb
stos
je
call
std
jnp
sbb
pop
or
add
fbstp
lcall
ret
decl
ficoms
and
std
aad
push
mov
sub
push
ljmp
incl
and
sti
call
fcomi
sahf
rorb
inc
out
adc
nop
stos
pop
ljmp
jge
fsubrl
addb
bound
imul
push
lret
nop
dec
dec
aas
dec
jns
dec
sbb
lcall
and
das
bound
xchg
lods
ljmp
jge
mov
dec
mov
fmul
mov
sbb
and
dec
mov
dec
das
and
pop
mov
loopne
mov
xor
push
mov
push
into
lret
scas
in
mov
fldt
cmp
sub
mov
mov
decl
pop
mov
or
mov
test
xchg
ja
ficoms
mov
lret
mov
push
xchg
dec
or
lcall
and
mov
loop
sub
lcall
mov
mov
clc
mov
mov
push
ds
loop
inc
fadd
ljmp
jg
aaa
cld
mov
mov
mulb
cld
xchg
loope
ljmp
cld
push
scas
scas
arpl
adc
pop
dec
inc
je
popf
xchg
push
inc
adc
sub
ljmp
ret
cmp
aam
adc
dec
outsb
cwtl
pop
ja
and
cmp
mov
jo
inc
mov
pusha
and
mov
mov
pop
xor
mov
fisttps
adc
mov
call
inc
lret
pop
cli
cld
mov
xchg
data16
cmpsl
push
outsb
incl
xor
pop
cmp
adcl
mov
sar
pop
and
incl
dec
adc
mov
xor
add
mov
std
movsb
rcl
cmp
sti
ljmp
rolb
jg
in
bound
cmp
sar
xor
insb
ror
xchg
jmp
cmp
jb
sti
shlb
cmp
add
mov
cmp
xchg
dec
insl
xchg
movsb
addr16
imul
xor
outsl
push
jnp
pusha
xor
jp
pop
shrb
ljmp
scas
xor
pushf
out
mov
and
inc
dec
mov
sbb
lret
loopne
mov
add
mov
dec
das
add
repz
pop
sub
cmp
xchg
imul
bound
mull
movsl
lcall
idivb
cmp
mov
sets
sbb
lods
insb
inc
push
dec
jg
test
mov
shll
stc
jnp
jns
lret
or
test
pushl
inc
in
pop
fdivl
mov
mov
lods
mov
divb
push
decl
loopne
push
push
inc
enter
in
sbb
mov
and
call
mov
add
mov
rcr
jl
cld
adc
and
jg
incl
out
mov
mov
push
sbb
ja
in
push
sub
inc
sarb
cmp
push
jb
cs
mov
xorb
decl
dec
adc
test
sub
je
inc
cs
cs
or
movsb
jno
loop
mov
sbbl
popa
shlb
jnp
mov
mov
iret
lret
push
lcall
fwait
xor
call
pusha
mov
mov
ljmp
inc
sahf
stos
adc
fnstenv
or
decl
cmpsl
inc
out
jle
js
arpl
pop
popf
dec
icebp
jg
scas
mov
pop
dec
ljmp
sub
dec
sub
aas
aaa
test
das
adc
lcall
jle
movsl
fcmovnb
jecxz
imul
or
dec
in
int
ljmp
mov
sahf
inc
fs
mov
add
xchg
xchg
fdivs
mov
outsb
sbb
mov
incl
push
hlt
aaa
jp
mov
sub
mov
int3
jg
or
jae
ljmp
add
enter
rorl
dec
hlt
fsubrl
popa
pop
ljmp
or
push
js
sub
insl
xor
adc
push
scas
mov
clc
scas
adc
xchg
push
aaa
aad
sbb
rcrl
xchg
mov
incl
cmp
sahf
lret
cmpsl
or
mov
adc
inc
and
mov
rolb
cmpsb
in
pop
dec
mov
pop
push
cwtl
test
ret
ljmp
jbe
pop
cmp
sbb
cmp
lds
cmp
imul
or
mov
cmp
inc
dec
lahf
cli
inc
in
into
fsts
aam
adc
pop
hlt
jg
loope
adc
adc
jge
pop
scas
cmc
loop
arpl
pushl
inc
nop
or
call
sbb
xorl
and
into
xor
mov
mov
pop
xchg
test
in
sahf
lds
sbb
push
stc
mov
dec
mov
out
clc
lcall
mov
icebp
add
test
pop
fadd
out
ljmp
repnz
fwait
aad
out
andl
test
insl
cld
lret
adc
cmp
pop
pop
pop
incl
subl
idivl
test
movl
xor
decl
sbb
mov
outsl
dec
cli
xchg
push
sbb
cmp
adc
dec
cmp
ss
mov
call
stc
pop
scas
inc
dec
cmp
ljmp
int
sarl
cmp
es
sub
popl
or
jg
into
test
add
cld
ds
in
jb
push
inc
inc
leave
mov
insb
mov
push
pop
mov
in
in
sub
inc
mov
xor
or
cmpsb
jecxz
call
pop
stos
bound
das
rolb
jb
push
cld
mov
fs
stos
data16
out
lret
out
pop
inc
jb
loop
std
jle
pop
out
pop
sub
mov
hlt
mov
popf
in
push
pushl
sbb
fidivrl
pop
or
jmp
in
std
cs
mov
dec
push
jge
out
cmpsb
mov
fisubl
das
ret
adcl
mov
adc
lcall
mov
mov
outsl
mov
iret
jge
push
jle
aam
and
rcrb
mov
inc
test
in
xchg
adc
setl
lock
mov
enter
repnz
jp
mov
dec
shr
adc
pushl
mov
dec
xor
push
int3
ffree
jg
inc
ret
mov
fadds
sti
pop
or
inc
sub
cmp
in
das
stc
loop
push
and
sarl
pushl
sahf
push
cld
pop
das
mov
lods
push
adc
sbb
pop
jns
add
inc
clc
push
push
add
push
sub
cmp
ss
aas
lcall
ljmp
pop
cmp
imul
fdivrl
lods
ret
orl
lcall
sbb
jnp
mov
sbb
push
lcall
jae
and
xchg
outsb
push
aaa
ds
int3
xchg
cmp
enter
mov
lcall
push
add
test
pop
movsb
push
xchg
popf
insl
cli
or
mov
lcall
sahf
cmp
xor
mov
mov
mov
ljmp
decl
mov
stos
inc
popf
jmp
fnstsw
test
and
xchg
loope
adc
adc
fst
loop
in
push
xchg
sar
jmp
push
int
cli
test
icebp
push
popf
das
divl
mov
fsubrs
pop
ret
xor
jle
xor
incl
out
jle
adc
push
mov
mov
js
stos
enter
ljmp
xor
pop
mov
lcall
and
sbb
addr16
push
mov
add
xchg
nop
lods
and
pushl
cld
pushl
mov
inc
cmpsb
xchg
lds
fwait
loopne
pop
hlt
jo
mov
ss
cmp
clc
int
push
fisubrs
cwtl
xchg
enter
cmpb
sarb
mov
pop
out
push
dec
mov
loopne
xchg
push
mov
iret
out
insb
insb
jp
dec
push
cmp
and
jg
inc
iret
push
inc
shlb
inc
ljmp
mov
adc
push
es
fisttpl
jns
xchg
lods
mov
stos
dec
dec
popa
incl
movsl
pop
xchg
rcll
scas
xor
rorb
push
jge
pushf
pop
movsl
push
mov
and
insl
inc
mov
adc
scas
cli
lret
inc
test
sbb
outsl
mov
xchg
mov
xchg
push
cmpsl
sbb
popa
call
pop
in
stos
sub
mov
js
adc
fstpt
lcall
jae
xor
adc
adc
jmp
cld
sub
test
ljmp
fdivr
in
pop
or
xchg
adc
push
dec
repnz
call
jecxz
ret
pop
mov
fstpl
inc
cmpsl
pop
lcall
rclb
in
sub
ljmp
push
shrl
aam
or
pop
pop
lcall
jns
mov
fmull
add
repz
and
andb
call
lret
sahf
andb
xor
lds
iret
and
and
jmp
scas
les
imul
push
fwait
mov
cwtl
aad
incl
cld
sbb
pop
int
cmp
movsb
xchg
jne
pop
push
ja
aam
scas
add
call
sbb
mov
scas
incl
mov
mov
or
repnz
or
dec
xchg
dec
mov
decl
lea
mov
test
pop
xlat
iret
ret
fldt
ficompl
mov
mov
pop
hlt
xchg
lea
repnz
outsl
xor
in
ljmp
cli
sahf
pushl
enter
pop
and
pop
cli
shl
jbe
push
daa
jg
lret
fnstenv
inc
nop
jb
jmp
push
popa
inc
loopne
es
out
mov
cmc
adc
cmpsb
sub
js
push
pop
scas
push
ljmp
loope
mov
adc
sub
es
adcl
outsb
add
stc
xlat
push
mov
lret
ljmp
mov
fldenv
out
aas
rcl
adc
incl
xlat
pop
cmp
int3
pusha
fistl
ret
mov
lret
rolb
lcall
call
xchg
outsl
or
ss
jl
cwtl
xor
sub
cld
stc
push
push
ja
dec
sahf
in
dec
jecxz
stos
dec
jg
add
fdivp
iret
mov
insb
sub
pushl
xchg
aas
xchg
xchg
cmp
or
popa
adcb
ja
xor
ljmp
mov
adc
xchg
push
stc
test
shll
cmp
or
negb
pop
mov
fistpl
push
dec
pop
stc
mov
adc
rorb
mov
push
out
xor
sub
jbe
mov
dec
sbb
sbb
mov
push
and
and
mov
lret
cmp
jmp
mov
dec
es
cwtl
stc
cmpsl
inc
sbb
mov
inc
lea
xchg
xor
lock
testb
inc
call
std
aam
imul
movsl
shrb
pusha
cli
mov
and
sbb
dec
push
mov
dec
mov
stc
mov
inc
inc
inc
shl
outsl
filds
dec
clc
mov
push
sbb
or
das
inc
lods
dec
std
dec
lock
lods
pop
jg
xor
jmp
mov
adc
sbbl
push
inc
rclb
adc
decl
jnp
xchg
mov
scas
clc
lcall
pop
fsubrs
xchg
xchg
pushf
and
out
out
xchg
in
add
stos
inc
add
mov
cmp
aam
push
out
add
mov
add
xor
lret
inc
cli
lahf
enter
fld
cld
jmp
add
aam
jmp
jns
adc
pushf
mov
xlat
adc
push
or
pop
cmp
nop
mov
decl
in
ret
xchg
decb
sub
out
not
shrb
js
fmulp
les
clc
add
sbb
es
xor
mov
push
scas
sbb
jl
mov
dec
je
ljmp
inc
inc
cmpsl
mov
mov
fimuls
cmp
outsb
std
xchg
jns
adc
pop
incl
pop
xchg
mov
or
adc
cmc
and
fmul
jecxz
call
and
das
mov
lret
and
ret
popa
xchg
mov
cmc
sub
or
rolb
lcall
es
push
inc
je
jae
mov
xchg
rcll
nop
dec
pop
nop
cwtl
xchg
hlt
sub
or
std
out
inc
out
sarb
fs
cs
lds
mov
shll
jg
push
sbb
fldenv
mov
mov
repz
push
dec
outsb
in
jnp
jl
cmp
inc
adc
fs
and
jmp
dec
mov
xchg
call
fbld
popa
in
loop
sti
cmpsl
inc
and
push
jbe
leave
daa
into
fisubrl
loope
jnp
iret
test
call
adc
jae
add
push
push
fdivl
int
and
movsb
adc
xchg
pop
fdivrs
jmp
or
sti
add
test
dec
push
loope
mov
arpl
pop
push
lahf
in
test
jecxz
and
fisttps
adc
aam
mov
mov
inc
dec
mov
stc
pop
inc
and
popa
sbb
decl
inc
test
scas
xor
aaa
aad
stc
and
cmp
lcall
and
testb
or
pop
cmpsb
sbb
sub
sub
jno
pop
sub
push
outsb
xorb
gs
inc
js
pusha
add
jae
mov
fstpt
add
add
filds
add
or
pop
pop
push
or
or
or
or
or
imul
pop
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
movsb
pop
mov
call
adc
and
xchg
add
fsubrs
inc
or
add
sub
iret
rclb
jb
imul
inc
cmpsb
jne
cmpsb
add
push
adc
in
stos
incl
and
xor
inc
mov
adc
bound
js
lret
add
mov
mov
push
out
pop
stos
sub
adc
and
sub
jo
push
mov
stc
pop
loope
lods
jmp
mov
inc
fbld
adc
mov
scas
pushf
into
add
adc
add
pop
scas
cmp
adc
jo
pop
lods
push
adc
pop
popa
jno
and
adc
mov
pop
xor
lods
or
xor
adc
loope
icebp
mov
adc
xorl
pop
or
or
js
lds
or
aaa
cld
pop
adc
adc
sbb
cli
and
mov
inc
jnp
ljmp
sbb
and
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
and
jmp
add
push
xchg
jg
or
insb
sub
addr16
out
or
push
call
data16
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
decl
mov
orb
int3
lcall
mov
push
pop
mov
pop
popf
xchg
mov
mov
popl
movb
sti
inc
dec
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
call
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
icebp
jg
divb
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
out
test
jne
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
test
cwtl
int
arpl
push
out
or
pop
clc
fldt
mov
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
out
stc
xor
cmp
mov
jmp
sbb
add
mov
dec
out
pop
jb
mov
or
push
mov
xor
dec
sub
pop
mov
jl
rorl
adc
in
call
stos
hlt
push
add
stc
loope
mov
sar
andl
mov
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
ud0
mov
mov
dec
adc
push
lock
lods
jp
pop
dec
mov
aad
aaa
sbb
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
mov
push
push
idivl
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
xchg
je
aad
adc
ret
outsb
pop
mov
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
mov
mov
jb
and
insl
add
leave
push
scas
loop
jge
call
sub
mov
push
mov
adc
and
sbb
xchg
jo
and
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
sar
cmp
mov
xchg
sub
push
xchg
cld
call
pushl
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
cmp
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
ljmp
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
call
imul
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
and
add
jae
shrb
mov
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
call
iret
adc
pop
cld
addl
adc
and
fildl
push
enter
jecxz
scas
sub
pop
cld
lahf
cs
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
out
pop
sti
pop
jg
add
jg
mov
aad
test
fcmovnu
adc
mov
mov
iret
push
fistpll
stos
icebp
pop
incb
jno
adc
jg
jg
jl
jecxz
sbb
sarl
adc
loopne
push
jbe
or
clc
xorl
sti
push
sti
shlb
imul
dec
push
ss
clc
in
aas
mov
fsubrl
lock
incl
fcom
and
clc
xchg
inc
nop
push
inc
pushf
mov
push
jle
mov
and
mov
adc
inc
aas
push
rcrl
inc
pop
rolb
pop
inc
jb
fistpl
adc
call
ljmp
nop
mov
inc
sti
arpl
daa
std
or
sbb
pushl
ret
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
mov
incl
fsubr
fistps
lds
fidivrl
jg
stos
jecxz
jmp
add
dec
mov
sub
jge
xor
lahf
les
jle
mov
sbb
sbb
cld
addl
sbb
cld
add
int3
push
sbb
xorl
mov
jle
xchg
popa
add
inc
sti
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
sbb
mov
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
pop
fadds
cld
or
out
lcall
shl
cld
clc
mov
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
mov
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
mov
adc
inc
lds
push
pop
adc
imul
dec
or
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
push
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
das
cld
cwtl
inc
mov
insb
test
cld
outsl
scas
jo
aas
repz
sbb
lock
in
jmp
cmp
mov
sbb
aaa
clc
push
std
mov
subb
or
mov
xchg
decl
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcrb
out
pop
or
or
dec
ss
aas
lods
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
fistps
jno
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
and
aas
mov
mov
out
cmp
or
addr16
sbb
cld
daa
jp
cld
jbe
adc
cltd
or
mov
ret
nop
xchg
clc
push
std
cmp
das
incb
lock
pop
pop
div
cld
idivl
cmc
add
scas
stc
lahf
loope
add
lahf
jmp
std
scas
bound
jge
fbstp
out
xchg
add
leave
xchg
mov
mov
loope
mov
cmpsl
popf
push
mov
cmp
ja
push
daa
outsl
das
fwait
dec
das
push
add
cmpsb
cmp
call
ret
data16
decb
adc
mov
jo
jbe
and
call
lock
jg
push
sbb
mov
inc
add
pop
out
mov
aaa
std
lock
cltd
dec
dec
inc
sbb
xchg
jmp
mov
aas
icebp
ret
ror
sbb
inc
adc
mov
mov
sub
mov
pop
clc
loope
in
scas
xorb
mov
lahf
jp
dec
add
xlat
or
sbb
and
cld
pop
inc
iret
fdivrl
xchg
lcall
decb
dec
mov
dec
or
sarl
pop
out
jg
jno
sub
out
cmp
sub
arpl
out
inc
jg
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fmull
lock
add
mov
mov
add
cli
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
dec
popf
pop
add
stos
loopne
push
inc
dec
inc
popf
push
lret
xchg
lcall
inc
add
mov
push
nop
mov
mov
test
and
push
and
pop
aam
subb
inc
and
inc
add
jae
rcr
addb
pop
imul
incl
pop
in
cmp
ja
add
add
mov
jg
and
pop
or
inc
add
in
mov
add
dec
orb
add
test
xchg
cmpsl
adc
roll
scas
jle
dec
lds
jno
jg
mov
lock
mov
dec
and
sub
pusha
or
jno
mov
jnp
xchg
movsl
push
daa
add
xchg
dec
scas
imul
push
and
cs
push
movsb
push
movsb
stc
mov
push
and
stos
push
and
push
test
and
fistl
imul
push
inc
pop
pop
add
scas
dec
lods
push
mov
pop
sbb
add
shr
mov
add
push
ds
les
push
lds
adc
mov
mov
insb
or
lret
imul
imul
imul
into
mov
jbe
fnstenv
fdivs
mov
stos
pop
pop
or
dec
stos
mov
mov
mov
aam
push
mov
push
sarl
shrb
shll
fidivrl
iret
outsb
or
push
ret
je
fidivrs
push
pop
shr
jge
fisttps
add
fwait
inc
mov
in
movsb
push
add
lods
stc
mov
push
jae
shlb
mov
mov
push
push
add
jne
push
aam
cld
mov
flds
ret
add
mov
add
pop
dec
add
push
out
mov
ja
data16
inc
xchg
mov
push
push
shlb
lret
mov
jns
stos
aas
add
ja
push
jo
jge
xlat
jne
add
ja
push
jae
aad
push
xlat
ja
js
push
jns
lahf
fnsave
or
push
fidivrl
rol
mov
push
fldl
mov
mov
ret
jmp
ljmp
mov
mov
sub
xchg
xor
sbb
setbe
xor
fidivl
cwtl
aaa
push
lcall
push
setg
cmp
popf
xchg
popf
mov
push
sahf
inc
push
lahf
inc
lahf
mov
in
jg
pop
mov
push
imulb
movl
out
pop
pop
out
push
hlt
clc
stc
lahf
out
sahf
cli
sti
cld
std
incb
insb
mov
clc
jecxz
arpl
inc
jae
add
imul
add
pop
add
data16
add
pop
add
insb
add
scas
inc
push
mov
mov
add
std
fisttpll
push
add
or
add
add
mov
add
or
test
test
and
stos
cmpsl
or
push
sbb
or
pop
pop
adc
cltd
int
pop
adc
lods
add
pop
add
out
stos
femms
lods
lods
pop
push
fnstcw
scas
add
scas
insl
and
pop
adc
and
imul
adc
sbb
in
scas
sbb
scas
scas
scas
scas
sbb
mov
mov
and
add
add
adc
ret
and
rcrl
add
mov
and
and
push
dec
inc
mov
mov
and
adc
mov
or
sub
mov
sbb
pop
pop
sub
sub
daa
mov
lea
adc
es
nop
out
aas
cmp
pop
fldt
mov
cmp
cmpsb
add
mov
xor
xor
pop
or
jbe
push
or
add
pop
jg
out
pop
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
push
jg
ficoms
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
dec
xchg
nop
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
addl
insb
andb
cwtl
sahf
mov
pushf
fwait
lcall
decl
test
xchg
xchg
sub
dec
ja
jns
dec
outsl
fwait
push
jle
bound
js
imul
cmp
je
xchg
pusha
mov
jo
orb
test
int3
or
mov
test
outsl
dec
repz
mov
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
ja
loop
jle
jb
cs
xor
mov
add
std
sub
sbb
and
mov
cmpsl
fnstcw
jo
push
inc
mov
mov
add
sub
xchg
jae
xchg
jp
inc
aas
repz
push
popf
inc
mov
aaa
add
xchg
jno
lret
push
bound
ja
insl
imul
lahf
inc
inc
push
insl
lcall
add
data16
xchg
outsb
add
xchg
xchg
pop
push
idivb
adcl
push
pusha
shl
movsb
jae
add
jb
shll
outsl
adc
pushf
push
rorb
add
outsl
fisubs
mov
outsb
mov
dec
push
add
pop
in
lret
ja
sahf
jbe
fistpl
imul
fisttpl
ds
push
add
and
es
js
mov
gs
mov
shrl
insb
out
ds
pop
outsb
push
outsl
ror
push
ds
jo
and
sbb
insb
fistl
jg
fiadds
call
jl
or
mov
add
sar
in
adcl
bound
out
arpl
negl
iret
sahf
mov
std
jbe
push
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
imul
adc
faddl
pop
fwait
mov
dec
addb
sbb
test
test
mov
test
in
mov
push
xchg
into
nop
and
out
xchg
in
xchg
lock
sub
xor
in
push
sub
imulb
insl
mov
roll
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
jl
lods
es
pushf
cmp
imul
aam
jle
push
adc
scas
jo
test
sahf
push
out
out
mov
jbe
stos
into
shll
lgs
int
insl
roll
sarb
push
movsb
out
jl
mov
ret
hlt
adc
pop
data16
add
addr16
xchg
lods
add
dec
out
je
dec
sub
inc
movsb
daa
add
push
and
mov
add
femms
or
or
or
sbb
or
es
push
adc
push
add
adc
adc
ds
add
and
mov
adc
sbb
pop
test
mov
mov
fisubrl
mov
add
and
negb
inc
loopne
ds
mov
lods
xor
and
aas
push
adc
xor
or
iret
adc
cmp
cmp
repnz
and
testb
cmp
ds
jbe
sbb
sbb
cmp
scas
xor
dec
mov
scas
ds
jle
aas
adc
mov
mov
ds
xor
dec
inc
test
mov
scas
add
fwait
bound
mov
addr16
mov
ds
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
in
mov
lcall
sub
sub
add
add
fildl
add
sub
dec
and
inc
cmp
mov
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
push
jg
je
xchg
jns
jle
addl
jo
inc
pop
adc
cmp
push
andb
and
mov
incl
add
shr
ja
incl
cli
cmc
repz
dec
xor
jg
push
aas
add
xchg
pop
cmp
test
add
mov
add
mov
outsl
fisttpl
push
fnstsw
repnz
fldt
outsb
xchg
addr16
add
pushf
add
mov
out
sub
outsl
push
in
lcall
or
mov
shll
push
push
dec
lret
js
push
std
jg
xchg
add
mov
mov
test
scas
xchg
js
insb
insb
adc
in
out
divb
sub
sub
xchg
push
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
ss
fnstenv
push
es
jbe
negl
fcmovnu
mov
shlb
iret
push
lret
loopne
adc
std
into
fidivs
imul
xchg
cwtl
int
mov
add
jge
and
and
add
and
adcb
dec
cld
pop
stc
aas
dec
dec
dec
add
pop
add
push
dec
or
adc
cmp
outsb
outsl
jg
adc
dec
or
add
push
adc
nop
psadbw
add
or
pop
pop
cmovg
fimull
dec
sbb
inc
adc
iret
out
jg
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
filds
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
aam
and
xor
sub
mov
xor
add
mov
xor
mov
and
data16
mov
push
inc
and
push
outsl
add
mov
daa
pushf
andl
pop
sbb
add
and
jbe
sarl
orb
jmp
lock
xlat
sbb
incl
pusha
mov
adc
sysret
or
cmpb
pusha
movsl
ds
xor
in
pop
inc
jb
lock
hlt
and
or
xorps
push
and
inc
jg
ja
add
outsl
int3
inc
andb
sbb
ret
pop
lahf
and
addb
jg
xor
sar
mov
cli
fisttps
arpl
sbbb
or
cmpl
push
push
xchg
jg
roll
mov
and
pop
das
sti
mov
les
inc
int3
mov
or
jg
popa
mov
cmp
adc
or
pop
ja
es
idivb
shrl
push
cld
jg
adc
add
xor
pop
jle
cmpsb
add
mov
std
jg
or
je
dec
ret
pop
jg
push
dec
bound
incb
lret
data16
or
or
inc
addl
xor
addr16
or
cwtl
sub
incb
sbb
sbb
ficomps
jg
mov
mov
add
addb
jg,pt
jo
lea
push
jbe
les
fldt
pop
add
adc
lea
and
adcl
flds
add
sbb
lods
jle
lret
les
mov
addr16
add
jle
mov
mov
xorl
add
inc
xor
or
data16
inc
loopne
push
jg
adcb
addb
incl
inc
pusha
addb
and
inc
ss
pop
xchg
or
inc
dec
jg
or
mov
mov
mov
ljmp
fisubrs
imul
daa
aas
aaa
pop
pop
outsb
mov
add
pop
jle
js
shll
add
orb
mov
jle
sbb
add
test
jle
push
dec
xchg
popf
xlat
dec
testl
mov
push
comiss
daa
push
arpl
inc
insb
pop
push
mov
arpl
out
decl
xor
dec
inc
iret
xor
lcall
push
or
ljmp
dec
mov
adc
jle,pt
jle
xor
push
fnsave
aam
push
fnstenv
add
enter
push
jne
pop
push
jbe
push
movsb
insl
inc
out
push
jnp
push
jp
fildl
js
dec
jbe
pop
pop
xlat
fadds
pop
mov
mov
test
es
push
outsb
inc
popf
push
daa
ljmp
incl
shlb
jle
dec
ljmp
outsb
ss
out
test
xchg
dec
ja
inc
cmpsl
xchg
call
test
jns
fiadds
inc
outsb
lahf
mov
push
mov
fisubs
sahf
inc
out
or
sbb
insb
fwait
int
cs
aas
popf
inc
push
pushf
cmp
mov
jb
cwtd
mov
push
xchg
xor
xchg
xor
sub
fidivl
nop
daa
ss
cs
in
ss
or
outsb
test
push
call
lcall
mov
jg
test
ja
xor
lcall
sahf
pusha
enterw
es
or
insl
xchg
cs
add
pop
ja
dec
push
int3
rclb
xchg
movb
movsb
call
imulb
mov
add
add
les
mov
testl
xor
mov
add
movb
outsl
pop
add
add
or
dec
pop
adc
aas
push
adc
iret
repz
mov
lea
jg
push
popf
push
imul
mov
sbb
test
push
mov
dec
repz
cmp
cmp
and
sbb
add
in
add
mov
inc
sbb
dec
incl
sbb
pop
inc
and
mov
push
mov
fildl
and
hlt
ficoms
sbb
xor
dec
cli
push
idiv
xchg
add
adc
mov
add
mov
incb
add
pop
mov
pop
lcall
or
mov
ds
sub
inc
int3
push
das
pop
cld
decl
shlb
in
push
inc
iret
push
lcall
std
out
or
xchg
btc
or
lcall
or
jo
sub
mov
lds
decl
mov
incl
les
outsb
ljmp
jmp
test
push
call
inc
xor
xor
sub
inc
inc
ret
sbb
or
jmp
sbb
push
xor
xor
scas
jmp
mov
or
mov
nop
mov
mov
inc
xchg
or
mov
xor
push
iret
jle
adc
aad
cltd
mov
mov
call
push
movsb
test
add
decl
pop
pop
add
cwtl
sbb
incl
inc
shrb
sbb
ljmp
lret
sub
popf
mov
push
std
ficoml
dec
mov
out
adc
test
test
call
adc
and
mov
lgdtl
popa
repnz
push
call
jg
outsb
mov
incl
adc
xchg
loop
jae
mov
push
test
push
addr16
sbb
gs
in
rcll
pop
inc
movsb
mov
mov
push
pop
aaa
mov
sub
push
shll
js
mov
roll
dec
mov
ret
incl
fwait
in
es
dec
push
mov
in
in
inc
push
inc
inc
pop
inc
pop
ja
pop
fwait
mov
imull
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
xor
cltd
inc
cs
dec
mov
out
add
and
fwait
dec
fistl
rcl
outsb
shrb
xchg
je
shll
push
push
jb
jl
dec
pop
imulb
push
iret
insl
popf
cltd
dec
mov
outsl
xchg
lcall
push
and
push
decl
push
xchg
cs
pushl
decl
pop
add
pop
int
repnz
jmp
popf
cmp
aas
jmp
leave
lcall
push
inc
testb
xchg
push
push
aaa
push
int
mov
ss
xchg
push
xchg
dec
xchg
jmp
es
xchg
xchg
movsb
notl
sub
ljmp
test
scas
incl
xchg
or
xchg
mov
cwtl
fimuls
sub
fucomip
les
std
faddl
int
fstpt
push
jnp
jp
or
jl
test
jns
jl
push
jge
mov
pusha
mov
adc
push
jbe
adc
fidivrl
push
dec
mov
jg
push
dec
repnz
repnz
jae
pop
fidivrl
push
mov
repnz
loope
out
add
in
add
int3
outsb
nop
nop
sub
scas
add
subb
outsl
stos
push
sub
lahf
fisttpll
in
push
adc
adc
add
imul
or
jnp
lahf
dec
es
addl
sarb
orb
jg
and
xchg
out
fisttps
out
mov
cli
iret
fisttpl
clc
push
idiv
mov
jb
sub
jg
mov
shrb
sahf
icebp
dec
pop
cld
js
mov
sub
jg
mov
icebp
jbe
adc
repnz
je
daa
jg
mov
ja
cld
sbb
cmp
mov
or
inc
mov
add
sti
pusha
incb
out
xchg
inc
jbe
xor
jg
dec
in
shlb
shlb
jl
ja
dec
and
jge
and
or
pop
pusha
and
push
fsub
pop
push
sub
decl
nop
jle
mov
fidivrl
arpl
clc
cwtl
jne
sbb
push
pop
mov
pop
push
pop
or
aam
jne
scas
mov
xchg
ds
lcall
add
jns
mov
push
mov
jmp
xchg
jmp
push
xchg
outsl
in
ja
mov
loop
adc
xchg
out
sbb
dec
push
lock
mov
lret
jg
out
mov
or
push
mov
ljmp
push
or
stc
inc
or
xlat
inc
jo
iret
push
cmovno
sub
sub
out
jecxz
fildl
adc
add
or
addb
cmpsl
insl
ud2
add
or
stos
loope
sub
lahf
hlt
push
lock
fwait
call
arpl
adc
sub
jp
shll
fnstenv
into
pop
push
sbb
push
xor
dec
sti
sbb
push
or
and
fwait
sbb
push
sbb
outsb
stos
arpl
dec
or
andb
test
sbb
adc
mov
add
sbb
cmc
sub
cwtl
jp
les
and
add
cmp
and
add
and
mov
insl
jo
test
arpl
pop
add
xor
push
and
xchg
inc
or
lods
adc
fdivl
loopne
les
and
xchg
ss
adc
and
dec
test
mov
add
lock
inc
jmp
lahf
jo
das
mov
sbb
filds
imul
inc
and
insl
mov
add
add
and
mov
or
gs
add
sarb
add
test
inc
sbb
xchg
adc
adcl
cmp
mov
insl
and
mov
add
pop
popf
scas
dec
and
pop
xor
insl
shlb
xor
arpl
sarb
mov
imul
xor
xchg
and
lds
add
mov
subl
or
addl
or
test
repz
inc
or
les
ficomps
lahf
push
push
xchg
movb
jno
mov
shrb
jo
xor
popa
sbb
loop
and
imul
xor
pop
sub
and
mov
ljmp
pop
pop
dec
insb
rcr
mov
incl
sub
pop
add
cwtl
push
cmpsl
mov
inc
mov
jne
addr16
mov
add
in
mov
je
and
add
inc
xchg
movb
xor
add
adc
dec
and
and
and
lods
adc
push
cmp
dec
mov
dec
add
cli
xor
inc
sti
popf
xchg
shlb
mov
dec
jecxz
pusha
inc
je
push
mov
sbbl
add
adc
rorl
sbb
lret
es
je
push
dec
mov
cwtl
in
xchg
sbb
sbb
inc
push
lahf
imul
sub
xchg
cmp
and
mov
lods
andb
jp
outsl
invd
inc
or
xchg
sbb
ret
add
push
xor
or
test
sub
cmp
and
mov
scas
rcrl
push
mov
je
lods
jmp
adc
cmp
popl
inc
xor
imul
xchg
or
inc
jge
cmp
pop
jbe
ret
scas
out
mov
mov
xor
add
aad
adc
add
fsubs
sub
mov
adc
mov
hlt
inc
jns
in
jae
mov
mov
fists
cmp
pop
test
mov
out
mov
imul
inc
imul
adc
sti
jge
push
cmc
test
pop
inc
incl
loope
adc
inc
inc
and
std
cmp
adc
test
pop
pop
mov
push
cmpsl
adc
add
pop
in
dec
fxch
js
lcall
cmp
jne
or
xchg
add
push
push
jae
loopne
gs
pop
sub
mov
out
les
fcoml
sub
sbb
inc
fildl
jno
lcall
lea
inc
insl
arpl
popf
cmpsb
jno
sti
dec
mov
jae
or
xchg
nop
mov
psubsw
inc
in
pusha
push
ds
inc
dec
mov
cmp
popa
rcpps
jecxz
sub
push
jb
inc
inc
pop
add
add
pop
clc
adc
imul
pop
mov
ja
fstp
movsb
dec
insb
sahf
daa
test
lcall
outsl
push
or
pop
jo
jb
adc
add
mov
stc
adc
lock
inc
mov
xor
jae
cltd
pop
xchg
cmpsb
ret
sub
into
sub
sarl
cwtl
imul
mov
push
sbb
into
push
les
xchg
rclb
jge
bound
inc
jnp
cltd
cmp
xor
mov
adc
mov
inc
dec
ret
lods
and
sbb
pop
and
clc
fwait
popa
inc
je
insl
dec
outsb
dec
flds
stc
add
das
mov
shrl
loope
js
loop
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
lcall
push
dec
shll
mov
xor
pop
add
xchg
into
cmpsl
es
cmp
insb
inc
inc
xchg
pop
and
or
fiaddl
mov
and
cmpsb
mov
pop
imul
and
shlb
cltd
lock
sbb
jns
push
xor
mov
es
ret
add
pusha
sarb
loope
data16
pop
insb
mov
pop
test
inc
insb
sub
push
push
scas
cmp
ret
nop
push
jecxz
and
dec
xorl
mov
dec
add
xchg
xor
inc
sbb
pop
xor
jge
inc
cwtl
jo
jl
and
popa
test
das
jno
scas
dec
inc
hlt
mov
gs
dec
add
jbe
inc
mull
add
fs
push
jge
out
dec
mov
imul
and
lcall
push
dec
mov
inc
insb
sub
mov
outsl
inc
inc
jo
sbb
xor
mov
sbb
jo
outsb
sub
mov
xchg
mov
pop
xlat
adc
or
test
jbe
mov
jecxz
and
lods
lea
sub
sbb
out
xorb
in
loopne
js
adc
mov
jno
inc
ret
mov
sbb
sbb
test
inc
jle
push
insb
or
fcoms
insb
test
mov
xchg
mov
dec
insl
dec
inc
push
adc
sbb
xor
test
dec
cld
addr16
jo
adc
inc
lods
sub
jne
pop
xor
push
add
xor
cwtl
jb
adcl
inc
sbb
addb
mov
js
insl
mov
xor
sbb
hlt
cwtl
add
push
movl
push
mov
push
add
outsb
pop
stc
sub
mov
aas
scas
inc
sub
mov
mov
xchg
lods
mov
xchg
jbe
test
pusha
arpl
lods
xchg
mov
xchg
jb
sahf
mov
inc
xchg
sbb
jge
incl
sub
ss
sbb
daa
lods
or
arpl
mov
jbe
lcall
xor
outsb
inc
test
jp
sub
xor
movsb
pop
inc
pop
jo
aaa
sub
add
inc
rcl
cmp
ss
sub
adc
lea
sub
decl
push
push
or
inc
and
cmp
or
sbb
add
rcll
and
notb
push
xchg
fidivrl
or
and
adc
add
lcall
adc
or
or
add
adc
mov
sbb
jmp
push
sub
sub
or
push
or
adc
es
push
mov
or
pop
adc
sbb
push
sub
push
push
inc
sbb
sbb
mov
adc
adc
or
xor
fisttpl
add
add
xor
sbb
push
lock
pushl
add
adc
cmp
or
cmpsl
add
and
xor
cmp
jle
fcomp
add
or
push
or
or
add
fbld
push
sbb
subps
inc
pop
sbb
push
sub
mov
and
sbb
or
sbb
add
sub
sbb
cmp
outsl
and
adc
adc
sbb
loopne
sub
adc
mulb
pop
xor
mov
and
daa
push
or
xor
or
or
or
fdivr
xor
outsb
add
xor
push
cmp
and
sub
out
out
or
pop
mov
in
sbb
ss
push
dec
pop
pusha
mov
push
lcall
in
fmull
xchg
push
adc
jbe
xchg
mov
subb
jecxz
push
lcall
daa
add
push
xor
xor
or
cmp
mov
xchg
daa
aas
sub
and
sub
or
cmp
std
stos
pushl
es
xor
dec
sbb
das
push
bswap
add
decl
sahf
jns
cmpl
adc
adc
or
push
push
lods
adc
adc
incl
inc
decl
push
push
or
pop
aaa
adc
adc
adc
daa
adc
or
xor
push
sbb
and
es
mov
xchg
daa
cmp
sbb
and
or
inc
and
or
add
mov
decl
or
cmp
pop
dec
adc
or
pop
adc
pop
rol
sbb
and
or
or
jb
adc
pop
sub
ja
jbe
sub
sub
jg
lock
ds
cmp
hlt
ss
inc
sbb
xor
das
test
push
jl
filds
mov
lock
or
dec
sub
sbb
les
push
das
clc
fstpt
push
adc
add
adc
or
cmp
clc
adc
xchg
lock
add
or
bound
jo
or
or
adc
push
sbb
dec
rdpmc
pop
mov
loop
jg
push
sbb
xchg
jb
xor
cmp
adc
sub
xor
xchg
pusha
cmp
cmp
adc
call
incl
sub
lock
adc
lock
sbb
add
pop
lock
cmp
lcall
pop
fdiv
mov
push
cli
sbbl
ss
unpckhps
sbb
mov
daa
push
aaa
mov
or
xor
mov
outsl
dec
lds
lock
add
sub
fisttpl
mov
cmp
push
cmp
outsb
add
push
lock
pushf
jnp
pop
adc
push
dec
mov
adc
xor
out
push
push
jae
testb
add
push
push
and
inc
sbb
pop
lock
ficoml
and
dec
cs
inc
mov
add
ljmp
inc
lcall
xor
sub
and
cmpsl
or
dec
inc
outsb
faddl
shrl
xor
bound
adc
testb
outsl
jg
clc
add
insl
fmull
and
xor
ljmp
push
or
cmp
adc
adc
ja
fdivr
push
and
push
fcoms
psubsb
sub
adc
adc
jno
xor
adc
fists
and
push
mov
push
lock
or
or
call
adc
jb
pop
inc
addr16
aas
dec
pop
pop
imul
lods
xor
sub
cmpsl
decl
xchg
add
inc
push
adc
inc
incl
andb
jno
sub
outsl
stos
aaa
insb
pop
pusha
dec
arpl
sbb
sbb
das
sarb
mov
push
and
pop
xor
xor
lcall
mov
push
sbb
femms
push
sbb
sbb
adc
aaa
and
dec
aam
lods
or
aaa
and
cmpb
add
cs
lcall
lock
or
adc
cmp
dec
jnp
jne
and
adc
arpl
sub
or
cwtl
mov
add
cs
pop
adc
adc
lock
add
scas
ret
pop
pop
lds
in
sub
inc
adc
aaa
push
xchg
push
sbb
adc
xor
push
pop
pop
and
imul
add
lock
add
sub
add
inc
jg
adc
aad
aad
push
push
mov
cmpsb
in
jb
rolb
fs
lds
and
add
add
mov
pop
jl
sbb
sub
pop
cmp
sub
xor
fldenv
xchg
sbb
xchg
jle
adc
test
inc
cmp
inc
daa
insb
and
xor
add
and
add
push
or
xchg
jmp
add
or
sub
and
dec
xor
add
fcmovu
mov
xor
and
push
pop
mov
stos
repnz
inc
and
and
and
std
aas
sbb
and
pop
ud2
fisttps
sub
in
mulps
pop
cs
push
cmp
adc
sub
pop
icebp
or
adc
push
xor
movsb
mov
push
jne
dec
sbb
daa
inc
adc
push
or
xor
pop
add
in
mov
sbb
inc
in
push
add
sbb
loope
outsb
add
inc
and
movsl
or
mov
ja
sti
add
sbb
sbb
dec
add
loopne
jae
and
pusha
lock
adc
lock
out
stos
mov
sub
ficoms
pop
and
sub
add
es
add
es
adc
daa
pop
adc
cld
lret
lods
jle
mov
xchg
adc
aaa
dec
or
inc
push
and
cli
add
sbb
add
fs
xchg
daa
sbbb
jge
adc
add
sbb
inc
inc
jg
popf
and
test
and
pop
or
dec
pop
cmp
test
or
add
divb
sbb
xor
push
dec
ss
add
adc
pop
sbb
add
pushl
lock
add
sbb
addr16
pushf
sbb
nopl
sbb
push
movhps
sbb
sub
or
cmp
pop
scas
and
and
jmp
or
sub
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
or
sbb
add
pusha
data16
js
fsubl
and
mov
jl
and
aas
scas
clc
pop
push
pop
inc
and
aas
scas
xor
xor
or
incl
sbb
pop
add
push
push
pop
push
sbb
push
push
add
push
adc
pop
aaa
sbb
add
aas
enter
inc
cs
ljmp
inc
pop
sbb
sbb
sub
adc
lock
lock
add
lock
mov
sbbb
lock
add
pop
or
add
jl
add
or
sbbb
cld
pop
ss
xchg
repnz
cmp
es
jg
std
adc
pop
or
and
lcall
push
sbb
cmp
unpcklps
mov
or
push
sub
or
and
inc
or
ret
sbb
jg
pop
sbb
adc
or
or
jg
outsl
sbb
adc
xor
aas
adc
push
push
sub
adc
pop
shrl
stos
sbb
pop
xor
and
mov
insb
inc
jg
mov
dec
test
out
imul
outsb
adc
inc
call
lret
jo
incb
xchg
pop
sbb
leave
add
movlps
pop
sbb
mov
lock
add
jne
push
pop
push
jb
pop
sub
fucomi
fdivl
outsl
and
push
dec
push
cs
fs
lahf
dec
in
lds
mov
scas
inc
add
pop
xor
add
add
lock
push
and
add
popa
or
xchg
dec
xor
loop
pop
or
or
movntps
push
pop
adc
adc
push
and
sbb
or
xchg
jne
sub
push
sub
movsb
adc
pop
int3
pop
sub
sbb
inc
push
push
inc
or
push
cmp
and
das
adc
sub
cwtl
ljmp
icebp
incl
invd
or
daa
push
cs
sub
or
sbb
or
call
adc
pop
daa
or
dec
prefetch
lock
and
pop
push
xchg
movsl
adc
cmpsb
lahf
ds
sub
push
push
sbb
or
mov
xor
pop
xor
adc
push
or
adc
xor
xchg
or
adc
add
lcall
xchg
mov
adc
subb
lock
add
and
wbinvd
push
mov
pop
and
lock
push
dec
xor
inc
adc
sub
fldt
sbb
nop
pop
or
sbb
sub
inc
inc
inc
cmp
nop
lock
mov
cs
xor
sbb
xlat
xor
popa
pop
sbb
out
bound
aam
repnz
dec
adc
popf
clc
jmp
sbb
inc
cmp
pusha
insb
pop
mov
sub
dec
pop
adc
adc
outsb
js
dec
ret
and
adc
imulb
ss
push
xor
and
inc
push
jg
dec
mov
inc
xor
pop
lock
xor
push
xor
test
or
xor
ja
mov
add
sub
push
or
push
das
mov
adc
fcoms
jecxz
aas
push
cmpsb
push
inc
pusha
push
nop
adc
incl
cmp
loopne
inc
push
pop
dec
sbb
cmp
fdivrp
punpckhwd
aam
pop
mov
jb
add
insb
das
sbb
add
or
sbb
jo
in
mov
or
or
sub
es
and
or
xor
or
pop
mov
call
sub
or
adc
sbb
pop
sub
data16
pop
mov
adc
sbb
mov
adc
add
adc
jge
rdmsr
push
push
sub
dec
dec
add
repnz
sub
imul
xchg
aaa
dec
lock
add
in
pop
and
add
xor
push
push
inc
outsl
or
ss
sbb
dec
jle
les
add
and
xor
pop
hlt
dec
and
enter
xor
lea
pop
push
sub
push
aaa
dec
adc
fwait
cmp
cwtl
pop
ds
push
cli
es
adc
adc
pop
cmp
and
sbb
outsl
mov
or
sub
xor
adc
add
xor
lea
adc
jle
sbb
fistpll
adc
mov
adc
adc
ds
adc
pop
lock
cmc
adc
test
adc
sub
or
push
adc
sub
sbb
jmp
mov
and
pop
and
add
inc
dec
jge
mov
adc
sbb
push
adc
sbb
add
and
mov
xor
js
and
add
ss
or
push
inc
or
das
or
add
adc
nop
and
cmp
cmp
jp
test
adc
or
inc
or
push
arpl
inc
push
pusha
adc
lds
dec
rorb
or
sub
add
dec
insb
idivb
cmpsb
fbld
push
sbb
arpl
lods
daa
push
arpl
incl
xor
sbb
sbb
pop
lock
add
dec
cmp
adc
or
ud0
pop
lock
adc
adc
andl
xchg
ljmp
inc
sbb
ds
sbb
and
push
dec
fmuls
pop
ds
subb
rorb
xchg
or
or
push
adc
add
or
mov
push
lods
adc
mov
xor
cmp
aam
inc
or
sbb
or
push
adc
cli
add
xchg
aaa
popa
push
das
or
pushl
add
inc
adc
adc
das
sub
pop
popa
lahf
pop
sub
mov
mov
and
and
pop
inc
adc
xchg
test
cld
cmp
call
es
clc
scas
loop
or
inc
inc
cmp
or
scas
fildl
orb
out
add
dec
mov
jbe
add
data16
mov
sbb
adc
dec
pop
int3
and
dec
icebp
pop
pusha
inc
push
aaa
movsb
add
bound
cmp
daa
jg
incl
and
jae
sbb
pop
and
out
imul
mov
or
sub
and
clc
jmp
inc
pop
adc
sbb
pop
cmp
adc
add
push
cmp
mov
pusha
and
daa
push
sbb
add
lcall
pop
jecxz
lock
dec
nop
and
or
outsl
dec
dec
lock
fcomip
sub
push
sub
sbb
cmp
add
outsb
xor
pop
mov
or
fimuls
pop
clc
dec
and
sysexit
cmp
je
dec
mov
add
dec
add
loop
push
nop
sbb
xchg
mov
sbb
ja
sti
add
pop
or
sbb
push
push
pop
adc
sysret
or
xor
mov
stos
pop
add
and
push
pcmpgtw
or
lahf
add
jo
sbb
add
or
inc
aaa
push
xchg
or
outsl
add
dec
sbb
mov
out
xor
jbe
lock
fsubp
rorb
jmp
xor
rcl
sub
push
pop
jle
iret
sbb
dec
push
retw
and
xor
js
inc
push
lock
mov
or
rolb
push
lock
add
movsb
ret
or
sbb
sbb
clc
stos
test
add
adc
xchg
sbb
jno
add
cmpsb
ficoml
ficoml
lock
aas
adc
jge
lock
add
bound
pop
aad
lea
je
dec
into
xchg
add
or
push
pop
mov
test
adc
or
xor
pop
xchg
sub
clc
stos
lock
pop
add
lock
js
xchg
dec
or
push
pop
testb
sbb
sahf
or
ja
fisubs
push
adc
or
adc
or
add
adc
xor
push
dec
or
and
xchg
sbb
push
xchg
loop
lock
inc
mov
push
or
jno
cmpsb
imul
xor
scas
pop
jo,pn
adc
or
or
sbb
adc
xor
outsl
pop
andb
or
sbb
sub
sub
dec
dec
dec
push
ret
js,pn
push
xchg
mov
addr16
int3
add
or
adc
rorl
loopne
es
push
sub
sbb
jp
or
or
adc
adc
cltd
push
push
push
out
xchg
push
and
add
nop
and
sbb
inc
add
sbb
cmp
add
xchg
mov
aam
rcl
stc
sbb
inc
out
sbb
jmp
ds
mov
pusha
lcall
sub
lock
fisubs
add
fs
push
and
movsl
imul
loope
clc
lcall
je
adc
and
sbb
aas
cmp
fdivs
add
push
rcrl
rcl
cmpsb
inc
push
lret
push
mov
adc
and
add
fdivs
fdivs
sub
add
pop
hlt
lock
cltd
shl
les
lock
add
mov
adc
sbb
pop
sbb
adc
js
push
add
or
and
xor
mov
cmpsb
sahf
add
adc
adc
fidivs
femms
das
dec
or
bound
push
and
js
sub
and
xor
add
add
incl
lcall
xchg
pop
mov
cmc
cmc
sub
popfw
ss
and
lock
fcoml
dec
dec
mov
adc
movsb
outsb
das
pop
or
pop
push
push
and
sbb
es
push
and
push
or
sub
push
popa
push
mov
push
inc
outsb
out
push
test
shlb
sbb
fidivrl
cltd
dec
add
add
adc
loope
ss
add
hlt
jo
insb
das
js
testl
push
aam
add
xchg
mov
add
mov
mov
loope
push
mov
sbb
inc
lock
add
shl
add
adc
pop
and
les
ss
mov
adc
and
sbb
cs
sub
add
and
or
cmp
or
add
pop
mov
mov
jl
sub
sbb
push
add
adc
call
std
mov
sysenter
add
pop
cmp
pop
mov
sbb
push
adc
inc
cmp
call
adc
and
xor
push
mov
and
adc
mov
shr
xchg
pop
dec
cmp
jg
das
add
lock
fwait
jno
pop
add
ss
jb
mov
xchg
sbb
cmp
mov
cmp
cmp
sbb
xor
sbb
pop
sbb
cs
jbe
cmp
push
mov
push
sbb
jle
sub
and
and
jge
decb
sbb
sub
sbb
mov
xor
arpl
fisubrs
dec
mov
push
dec
cmp
inc
inc
fwait
xchg
stos
push
and
mov
push
jbe
dec
xor
xor
ds
xor
and
mov
add
and
cmp
cmp
pushl
cmp
xor
jle
xchg
sub
cmp
sub
subl
sbbl
lcall
shl
xor
inc
sub
sub
and
xor
sub
xchg
and
dec
push
push
push
lret
xchg
cmp
movsl
xor
mov
push
and
inc
inc
pop
enter
fists
pusha
inc
aas
dec
jne
and
add
and
sub
or
dec
std
mov
mov
add
mov
dec
sub
xchg
cmp
and
negb
cmp
push
test
jo
and
mov
idivb
cmp
add
in
mov
push
add
push
push
sbb
xchg
lock
push
rclb
sub
add
xchg
lods
fucomip
aam
lock
push
add
jbe
dec
add
adc
xchg
xchg
jecxz
cwtl
dec
rclb
mov
mov
add
push
mov
or
mov
push
pop
lcall
sub
and
stos
lock
add
push
hlt
fdiv
js
pop
push
push
stc
xor
lock
adc
or
inc
or
xor
lock
adc
fwait
out
stos
lock
add
add
sbb
adc
les
aam
mov
pop
test
cmp
inc
lock
cmc
out
xchg
xchg
jo
mov
fnstenv
inc
ficoml
jnp
xor
or
or
sub
sbb
lcall
inc
xorb
mov
lock
sub
jmp
dec
or
and
push
in
adc
or
adc
or
insl
out
jnp
adc
sbb
adc
fdivp
adc
or
das
push
or
sbb
test
dec
lret
adc
push
movups
mov
xor
sbb
icebp
add
or
and
push
cmp
iret
inc
mov
jae
or
push
dec
cmp
jbe
add
jno
cmp
adc
and
push
sub
xchg
imul
dec
push
mov
movsl
push
push
push
push
or
add
mov
pop
outsl
add
leave
pusha
outsl
push
insb
xchg
iret
std
mull
loope
add
sbb
sbb
mov
add
and
data16
push
adc
lods
mov
sbb
out
ja
add
or
or
sti
in
adc
insb
pusha
adc
data16
xor
cmp
push
sub
adc
and
imul
pop
and
mov
cmp
sub
adc
outsl
mov
das
outsl
or
mov
fstpt
sub
pop
scas
dec
or
invd
sbb
or
xor
pop
jnp
insl
icebp
maskmovq
testl
mov
loopne
int
inc
xchg
sub
adcl
mov
popa
adc
sbb
out
mov
or
in
fistl
mov
mov
sysret
imul
mov
add
xor
mov
sbb
das
lods
xchg
fsubs
pop
lret
mov
rcrl
movsl
or
into
cmp
mov
in
xchg
sbb
dec
nop
mov
insl
arpl
or
cmc
lds
adc
jg
jecxz
adc
imul
rcrl
stos
mov
rcl
mov
sub
sub
inc
lds
sub
or
pop
ret
sub
adc
push
or
inc
aaa
push
adc
push
xor
divl
mov
xor
xor
aad
and
or
aad
fwait
imul
fisttps
rclb
pop
adc
fsts
lods
mov
push
push
stos
aaa
ja
cmp
sbb
sbb
imul
adc
or
pushf
xorl
ljmp
adc
xor
pop
lods
lea
shrl
or
pop
sub
or
inc
push
jo
outsl
adc
adc
dec
and
pop
jno
adc
xchg
and
push
lahf
lock
add
adc
sbb
faddl
push
add
sbb
pusha
ret
add
js
lds
out
add
in
add
ficoms
add
xor
dec
out
mov
push
and
sub
sub
cmp
xor
ret
mov
sbb
or
or
in
popf
mov
xor
pop
add
xor
sbb
xor
pop
and
pop
mov
pop
and
and
mov
pop
inc
and
add
push
sbb
int
cmp
inc
sub
pop
push
jle
inc
cmp
adc
test
rol
or
add
fistpl
lods
faddl
in
add
pusha
jecxz
add
scas
cmp
or
inc
push
test
jle
add
pop
clc
imul
jbe
jno
add
mov
pop
or
xor
add
lea
add
pop
sbb
add
cmp
pop
inc
xchg
inc
bound
add
xchg
push
loopne
inc
fnsave
pop
mov
nop
fs
insb
je
cmp
push
push
sub
sub
out
mov
mov
xchg
mov
pop
sbb
push
rcl
mov
dec
fisubs
push
xchg
fldt
jo
cmpsb
xor
sub
dec
xchg
and
add
add
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
