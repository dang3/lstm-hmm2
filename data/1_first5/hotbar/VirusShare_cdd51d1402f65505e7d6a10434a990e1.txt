divl
in
mov
mov
mov
inc
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
data16
mov
add
int3
aam
andl
lea
punpckhwd
aaa
mov
push
mov
inc
in
iret
negl
push
in
loopne
movb
inc
xchg
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
mov
jmp
ja
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
dec
push
push
ss
pop
in
in
in
loope
xlat
cs
loop
in
xor
roll
lea
xacquire
mov
mov
loop
push
mov
into
push
cwtl
in
and
fs
push
lock
and
lahf
faddl
ljmp
cmp
mov
mov
push
push
push
lods
cmovle
push
cld
inc
add
fdiv
fistpl
fisttpl
ret
add
dec
cld
ljmp
test
je
pop
add
pop
mov
nop
or
push
loopne
cmp
shlb
jno
mov
sbb
add
push
dec
in
pusha
les
mov
jg
mov
push
xchg
dec
add
test
in
push
call
lock
pop
sub
sahf
or
out
call
xchg
and
mov
adc
loope
js
in
push
push
mov
in
inc
scas
adc
mov
pop
sbb
mov
xor
cmp
jge
mov
jmp
mov
jns
and
push
inc
inc
dec
jb
cmp
scas
push
mov
jmp
mov
sbb
adc
fisttps
inc
fisttpl
push
pop
mov
aaa
jb
rcl
and
xchg
adc
out
imulb
rolb
and
inc
cmp
jae
jnp
pop
and
cmp
pop
stc
push
mov
add
lods
push
sbb
add
mov
push
mov
push
insl
xor
or
sahf
lock
adc
add
sbb
pop
in
pop
push
jle
push
push
adc
pop
pop
or
ja
je
cmp
lock
add
call
cli
and
xor
jmp
dec
lock
and
popf
sbb
pop
xchg
gs
cwtl
out
jg
jo
push
push
push
push
or
lahf
xor
popf
loope
in
mov
and
push
iret
sub
in
dec
hlt
mov
add
or
push
xor
loopne
push
sbb
cmp
xchg
pop
dec
xchg
push
sbb
stc
das
pop
sub
and
or
out
sbb
and
pop
andl
or
and
mov
push
fwait
xor
adc
movsl
lods
mov
push
mov
outsb
sbb
push
daa
mov
int3
push
xchg
mov
jle
scas
jge
or
cmp
push
sub
xor
sbb
fnstsw
scas
sbb
push
xchg
loop
fisttps
sub
adc
ss
in
adc
sbb
outsb
push
shrb
push
sub
test
xor
inc
dec
movsl
push
sub
adc
jns
inc
movaps
push
inc
in
push
shl
enter
jmp
adc
cld
push
push
push
push
inc
inc
push
or
cmp
adc
movsb
inc
mov
adc
fnsave
sbb
push
inc
ds
ss
sub
pop
push
push
adc
in
outsb
mov
pop
sbb
sarl
pop
mov
mov
test
imul
push
js
sbb
mov
sub
repz
roll
mov
cmp
pop
cs
xchg
test
xchg
push
mov
xchg
sbb
out
lahf
lds
mov
cs
cld
js
mov
sub
out
ret
mov
or
xor
add
push
push
fcmovu
cmpsb
call
cmp
fidivl
fwait
mov
aam
in
and
or
notl
mov
std
lock
jl
push
xchg
idivl
xor
cmp
sub
imul
xchg
mov
shrb
test
mov
movsl
cltd
mov
test
jl
or
sbb
lret
inc
mov
adc
pusha
rclb
fs
mov
cmp
jl
cmpsl
nop
or
adc
mov
int3
cmp
je
adc
mov
lea
mov
mov
aaa
je
and
sub
cmp
cli
mov
jmp
pop
jno
or
inc
insb
sub
add
cmpsb
xlat
icebp
arpl
add
in
mov
mov
mov
stos
mov
hlt
cmp
arpl
inc
icebp
or
xchg
xor
jae
or
add
bound
add
dec
or
jne
mov
out
xchg
sbb
push
cmc
push
stc
or
mov
inc
ljmp
cmpsb
testb
dec
in
xor
jecxz
hlt
jmp
push
leave
ret
push
mov
fcomps
push
cmp
pushf
ficoml
ss
icebp
mov
push
data16
mov
cmpb
lock
jg
lock
jne
pop
mov
sub
sbb
shrb
fs
mov
mov
je
sub
dec
pushl
pop
in
cmp
popf
or
push
push
adc
xor
cli
xchg
mov
incb
mov
ja
aas
or
push
push
mov
cmp
loopne
sub
sub
loopne
fwait
scas
cli
pop
inc
sub
call
mov
test
jne
fs
inc
xchg
jl
incb
jmp
pop
pop
push
push
sub
pop
push
pop
jmp
lret
adc
jl
fldt
pop
ret
add
loop
or
xor
xor
enter
and
pop
cmp
pop
bound
and
mov
mov
mov
sub
jmp
push
lock
fdivrs
add
add
push
dec
push
andl
adc
mov
xor
aas
inc
or
push
mov
cmp
pusha
adc
mov
pop
mov
pop
pop
ret
push
data16
jne
xchg
add
cmp
jmp
cmp
push
dec
mov
scas
notb
push
jp
test
jne
pop
ja
sub
push
cmpsb
subb
out
dec
inc
aam
fistpl
add
pop
or
jne
js
sub
pop
cmp
mov
jge
sbb
jecxz
out
cwtl
cmp
je
movb
jle
mov
mov
adc
loopne
mov
lea
push
mov
imul
mov
lock
mov
addr16
add
mov
adc
leave
ret
lods
insl
cmp
cmp
cmp
push
add
or
ret
jle
jge
cmp
std
or
adc
adc
add
inc
inc
pop
adcb
mov
or
stc
jne
mov
insl
pusha
jo
jmp
xchg
in
add
cmp
loopne
push
repnz
inc
repz
push
icebp
mov
cld
ja
lea
decb
pushl
cmp
jmp
pop
add
xchg
pop
popaw
faddl
pop
pop
pop
arpl
adc
adc
jae
pop
xor
out
orb
adc
fcoml
mov
pop
cwtl
rcl
mov
mov
push
movsb
inc
inc
inc
sbb
jle
dec
sbb
divb
push
push
dec
mov
pop
or
sub
push
pop
ror
outsb
ss
push
push
popl
adc
ret
fcmovnb
pop
inc
pop
pop
xchg
mov
loopne
adc
shlb
ret
or
orl
outsb
mov
icebp
inc
sub
sahf
int
leave
add
add
addl
push
or
std
icebp
sub
push
mov
cmp
or
das
rorb
adc
into
je
cmpl
pop
and
adc
push
jne
push
push
imul
jnp
ret
jl
pop
jmp
fmuls
xor
cmp
jl
arpl
xor
push
inc
sub
inc
or
jmp
mov
jge
xlat
add
fidivrl
inc
clc
jg
xor
sbb
sub
or
push
jne
shr
mov
and
add
lods
adc
jg
stc
or
inc
inc
or
shlb
adc
ret
sti
rolb
xchg
outsl
or
push
xchg
movb
mov
xchg
outsb
xchg
and
subb
sbb
and
enter
or
jne
test
or
repz
dec
push
push
call
outsl
sub
mov
into
cs
jp
xor
pop
pop
sbb
gs
pushf
mov
push
fdivrp
mov
ret
push
sbb
mov
mov
mov
cld
xor
out
lods
pop
mov
push
clc
mov
ret
inc
or
push
ds
mov
inc
loop
add
pop
xor
sbb
xor
cmp
outsb
icebp
pushl
repnz
jle
push
cmp
jmp
mov
cmc
idivb
mov
ret
ret
shlb
call
out
cmp
inc
call
lea
cmp
stos
jne
mov
add
xor
push
xchg
jbe
inc
add
or
mov
adc
adc
pushf
xchg
pop
adc
dec
jmp
pusha
fimuls
jge
ret
adc
pmuludq
pop
adc
xor
lock
cmp
or
iret
ret
jo
aam
push
mov
jge
cmp
ss
mov
cmp
xor
cs
xlat
sahf
and
adc
loop
xor
add
enter
or
scas
leave
push
inc
add
or
cmp
ret
push
rolb
sub
inc
fldt
cltd
jmp
add
js
gs
and
ret
cmp
dec
add
adc
insb
ret
mov
pop
pop
jmp
mov
add
je
mov
push
dec
out
sub
dec
dec
adc
dec
sbb
sbb
pop
aad
setae
fstps
test
in
cli
jmp
je
or
jno
push
mov
js
mov
jae
out
push
movsl
push
xor
inc
mov
testb
pop
add
mov
and
popa
test
inc
aam
pop
mov
dec
jbe
aaa
xor
scas
push
mov
adc
inc
and
cli
add
or
sbb
das
or
cli
sbb
add
in
loop
pop
ret
push
push
shlb
cs
inc
adc
mov
mov
sbb
and
and
aas
sbb
das
sbb
sbb
pop
loope
cmc
add
push
stc
lods
ret
rclb
cmp
adc
pop
loope
or
cmp
ss
ficomps
icebp
jo
push
adc
lcall
add
adc
pop
mov
bound
or
cmp
ja
out
je
movups
and
mov
adc
cmp
popf
cmpl
push
cmp
jecxz
add
shrl
pop
testl
mov
inc
cmp
push
pop
je
jb
jmp
push
or
lock
pop
mov
dec
sbb
adc
and
outsl
out
outsb
sub
add
push
push
jbe
call
lret
xlat
add
cmp
xchg
cmp
jg
mov
jmp
sub
dec
je
push
adc
sub
test
or
jmp
ss
jl
mov
jmp
or
cltd
ret
int
into
sahf
in
jmp
nop
jecxz
pop
jne
jp
sbb
lock
rolb
incl
xor
add
or
call
testl
pop
mov
lea
movsb
sub
mov
push
mov
xchg
xchg
mov
loope
fimuls
mov
xchg
and
push
aaa
xchg
jl
movsb
push
xor
push
push
sub
push
lret
idiv
jo
js
inc
push
in
in
jae
and
adc
in
imul
jmp
mov
adc
jmp
cmp
or
jae
mov
shr
fs
sbb
pop
movsl
adc
adc
adc
mov
mov
fstpl
imul
movsl
inc
jae
je
scas
push
and
push
jmp
and
rcrb
cmp
jmp
data16
sbb
mov
mov
repnz
and
sahf
out
sahf
das
inc
pop
push
out
jle
xchg
push
push
hlt
push
push
fs
aad
cld
sbb
cld
cmpsb
cld
loope
imull
push
push
pusha
shll
adc
and
mov
or
clc
movb
add
or
jno
mov
scas
mov
gs
xchg
das
dec
push
icebp
cmpsb
push
and
and
push
pop
push
lea
push
xorl
xor
xchg
xchg
dec
cmp
mov
cmp
inc
les
jmp
mov
scas
pop
or
jl
add
scas
dec
xchg
popf
jge
mov
dec
adc
movl
push
inc
mov
insb
push
sbb
lea
bswap
dec
jo
and
jbe
jp
jnp
push
call
add
add
lock
push
ja
mov
je
ljmp
lret
ret
jnp
push
test
mov
sbb
cmp
mov
insb
cmp
adcl
fimull
or
cld
xchg
cmp
push
sahf
mov
imul
imul
andl
in
adc
inc
fcmovbe
xorb
js
adc
nop
inc
sbb
pop
pop
inc
jp
push
loop
adc
dec
dec
rclb
not
and
add
ret
mov
push
aaa
and
mov
imul
lds
in
pop
push
push
xchg
xchg
imul
jl
cld
push
push
push
push
mov
loope
pushf
cmp
xor
push
push
loop
add
xchg
push
mov
dec
sub
lods
and
sahf
pop
jmp
push
clc
add
push
outsb
mov
pop
pop
daa
lea
sub
pop
mov
jo
mov
mov
in
and
loopne
pop
faddl
sbb
sbb
lds
push
push
cli
hlt
dec
add
adc
outsb
xor
sbb
sub
in
or
lea
push
mov
pushl
in
mov
in
mov
adc
dec
adc
mov
dec
fucomip
add
lea
or
negl
pop
cld
je
std
mov
dec
call
cltd
sub
sar
add
bound
daa
dec
shll
in
dec
in
cmp
push
cmpsb
fnstenv
add
mov
inc
adc
dec
jns
rcrb
jae
mov
push
add
xor
jno
lods
test
or
mov
mov
mov
push
cmpsl
adc
sbb
sub
pop
push
and
fcompl
lahf
and
push
and
ja
push
cmp
adc
adc
ljmp
test
sbb
and
and
daa
enter
adc
pop
jbe
dec
testb
xchg
jbe
fnsave
dec
roll
inc
cmp
dec
or
mov
insb
mov
adc
pop
loope
pop
push
clc
push
lea
and
fstps
leave
and
test
aas
mov
sbb
adc
icebp
into
int3
pusha
mov
shl
popf
sub
pusha
ljmp
movsb
add
mov
pop
mov
sub
mov
jge
je
push
mov
inc
test
fdivrl
aaa
and
repnz
hlt
sub
fdivrp
sub
jbe
andl
dec
std
pop
xchg
mov
cmpl
je
cmpl
xchg
jne
adc
dec
je
scas
iret
fsubrp
mov
sbb
cwtl
pop
push
add
lea
mov
jmp
mov
lock
jmp
andl
stos
push
ror
rorb
sbb
pop
cltd
loopne
mov
lds
pop
lds
pop
icebp
mov
sahf
pop
mov
js
push
push
sbb
lods
dec
lret
adc
jl
in
cmp
hlt
movb
add
lock
push
aas
sub
fldz
enter
add
cwtl
jo
jle
xor
subb
repnz
mov
fdivrl
mov
lea
in
adcb
pop
shll
test
mov
test
inc
pop
loopne
mov
fsubs
popf
push
idiv
lcall
mov
imul
xchg
jle
or
pop
lea
inc
dec
push
call
outsb
pop
jbe
mov
push
sub
cmp
mov
mov
push
shlb
popa
xor
push
sub
or
nop
out
pop
rorl
push
enter
lock
ror
adc
jl
pop
insb
nop
add
xorl
ror
daa
cmp
pushf
push
and
xor
lea
lods
cmp
mov
push
cmpsb
dec
lock
popf
loope
sbb
add
and
sub
pop
cli
xlat
call
xor
addb
xchg
push
sbb
test
cmpl
pop
push
lcall
icebp
iret
sbb
lret
out
pop
test
icebp
mov
or
imul
inc
dec
fldl
fmull
std
or
add
mov
fs
sbb
es
push
add
rcrl
or
lock
inc
scas
xorb
xor
lods
mov
pop
or
test
mov
cwtl
rcrl
sbb
push
mov
lahf
or
jecxz
jne
pushf
and
pop
popa
add
lods
jo
mov
or
lea
dec
push
add
push
addl
sbb
dec
sub
in
int3
push
cmp
xlat
stos
cmp
lock
dec
or
sbb
mov
es
nop
or
jno
js
ret
cmp
in
push
mov
das
adc
andb
sub
in
inc
dec
xor
sarb
jbe
aaa
test
adc
push
dec
sub
fmulp
mov
je
cmpb
mov
je
test
pop
roll
push
jmp
stc
inc
add
sub
sub
push
cmp
nop
fldpi
adc
xor
push
insb
repz
mov
push
or
xchg
mov
mov
pop
inc
shlb
mov
stos
mov
loopne
push
sbbb
inc
push
in
adc
sahf
data16
mov
sbb
data16
jno
outsl
and
sbb
pop
push
aam
cmp
inc
xorl
out
jo
cwtl
jo
dec
fsub
nop
or
scas
sbb
sbb
cmpsl
scas
mov
push
pop
inc
xchg
rolb
adc
mov
cmp
in
in
sti
ljmp
mov
incl
and
add
sar
push
fnstenv
push
adc
jl
dec
xchg
aaa
nop
popa
inc
or
lock
call
mov
mov
mov
jo
fcomip
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
aaa
bound
jp
mov
add
jne
mov
push
jbe
adc
jmp
fnsave
aad
pop
insb
cmpsl
int
push
les
jmp
mov
sti
in
dec
testb
pop
push
adc
outsb
mov
fldz
inc
mov
add
or
pop
pusha
push
ljmp
movsb
sti
sub
clc
je
test
std
cmp
inc
lcall
add
cli
das
push
jmp
test
aaa
outsb
pusha
jl
icebp
mov
mov
or
xchg
arpl
mov
leave
jle
cmp
lahf
xor
sub
sbb
insl
or
lea
clc
add
sti
fbld
movl
cmp
out
jg
jae
dec
sub
jge
jmp
mov
push
jg
clc
pop
hlt
fildl
pusha
or
add
clc
loopne
xor
xor
mov
fdivrp
mov
dec
sub
mov
mov
pop
add
pop
add
fisubrs
push
out
pop
jl
jmp
rolb
fbstp
cmpb
or
clc
fidivl
jmp
push
inc
xchg
outsb
mov
mov
dec
lods
inc
xchg
sahf
lods
jmp
shr
inc
jne
pop
add
jl
dec
jmp
dec
mov
aad
xchg
sub
js
cmpsl
xor
lea
push
or
call
aam
push
adc
loopne
pop
xor
mov
adc
test
mov
pop
push
out
dec
ja
lahf
je
je
je
in
dec
int
or
pop
and
jne
push
jmp
sbb
cmpsl
push
out
jle
add
push
push
push
pop
sti
jae
js
adc
pop
addr16
out
aam
mov
or
nop
arpl
jns
int
clc
test
call
mov
sub
cld
gs
mov
mov
dec
push
jne
rcrl
pop
mov
xchg
imul
mov
pushf
loopne
lea
leave
push
adcb
and
sbbb
add
mov
icebp
lea
icebp
ret
std
add
mov
push
mov
adc
adc
pop
or
mov
sub
out
mov
dec
add
push
jb
adc
cmp
cli
sbb
andl
pop
adc
add
imul
ret
push
jg
jg
sbb
orb
insb
and
std
adc
xor
cld
jo
inc
or
mov
add
aam
insb
adc
fs
int3
and
push
push
pop
pop
xchg
jl
add
mov
cmpl
movnti
aaa
les
mov
mov
repz
inc
adc
push
xor
xchg
dec
jb
stos
push
or
add
fbld
arpl
or
inc
or
mov
pusha
sub
jno
scas
shrb
inc
ret
pop
pop
mov
add
mov
add
sbb
push
leave
clc
lods
sub
clc
setb
test
jne
loope
loopne
mov
sarb
dec
sub
sar
xchg
clc
js
fwait
dec
dec
adc
pop
add
pop
mov
add
and
mov
je
sub
jp
inc
xchg
pop
mov
pop
pop
icebp
jg
adc
dec
nop
lock
hlt
mov
test
push
add
imul
lods
sahf
pop
mov
inc
sbb
mulb
and
cmp
popf
xchg
adc
bound
lcall
xor
call
sbb
or
mov
lret
mov
test
xchg
dec
daa
sub
dec
fcmovne
adc
in
cs
bsr
add
or
pop
pop
mov
int3
xor
clc
or
and
push
je
testl
push
je
lahf
push
mov
shr
hlt
pop
or
mov
or
sbbl
push
push
mov
add
and
std
xor
dec
movl
pop
leave
push
adc
movl
adc
dec
mov
mov
lock
dec
inc
jl
lods
sbb
xor
ret
sbb
insl
ja
outsl
arpl
and
lods
lock
enter
adc
lret
mov
push
rorl
sbb
pop
push
inc
push
sub
in
subb
movsl
mov
test
je
mov
aas
mov
cltd
mov
push
ret
jne
push
push
inc
mov
in
jmp
push
mov
jmp
adc
out
fcom
bound
imul
mov
sub
nop
mov
jecxz,pn
in
xchg
inc
addl
repnz
test
and
jl
lock
jae
add
cltd
dec
or
mov
push
add
cmp
ss
sbb
inc
or
repnz
add
push
mov
fcompl
inc
xor
dec
add
sub
xor
jl
dec
adc
pop
insl
icebp
addr16
int
xor
mov
inc
insl
pushl
mov
lcall
xor
cmp
jge
mov
call
les
enter
jl
add
in
popaw
xor
dec
pop
shl
mov
pop
push
sub
rcl
jne
fcomps
inc
fmuls
fwait
sahf
shll
xor
cmp
enter
repz
sbb
cltd
pushf
adc
ss
xchg
add
or
mov
outsb
repz
adc
mov
leave
lret
sbb
or
fsubrs
push
cmp
dec
push
mov
add
add
cltd
pop
or
stos
or
mov
inc
and
inc
add
and
inc
or
ficoml
and
pusha
sbb
mov
jne
push
sti
pop
ds
test
pop
mov
mov
mov
icebp
pusha
scas
ljmp
popf
in
pop
cwtl
movsl
enter
mov
cmpsb
cs
popf
inc
test
stos
jecxz
mov
mov
call
fsubr
nop
add
xor
scas
testb
outsb
sbb
stc
sub
push
cmp
sbb
and
mov
dec
lea
roll
ret
aam
call
inc
dec
outsb
sbbb
pop
xorb
sbb
or
xchg
jge
inc
xchg
icebp
repz
mov
test
pop
push
or
push
push
adc
shl
cmpsl
lret
mov
daa
add
add
pushl
fdivl
cmpsl
add
rcrl
clc
and
es
adc
addl
dec
rorl
in
adc
sbb
jl
fsubrs
in
mov
call
aaa
and
mov
test
sbb
arpl
cwtl
nop
out
or
aaa
pop
scas
mov
fdivrl
ret
adcb
xchg
rcrb
bound
pop
dec
adc
or
lods
xor
je
rcll
repnz
add
pop
enter
adc
mov
sub
push
push
fldcw
jo
movl
lods
cmpsb
adc
inc
sbb
das
add
push
cmp
or
shrl
push
jo
push
es
in
mov
neg
sbb
bnd
cmpsl
inc
aas
xor
inc
and
popf
fidivs
rorb
lea
jno
and
sub
xor
ffree
dec
jbe
lods
lahf
nop
xchg
pop
inc
rolb
nop
scas
pop
mov
vmovaps
imul
sub
nop
add
push
stc
shrb
pusha
sbb
mov
mov
adc
mov
hlt
mov
sbb
jne
pop
push
cli
adc
fmuls
sbb
mov
push
sbb
movsb
lret
cmp
ror
dec
roll
mov
sbb
loope
or
fdivr
add
push
in
loopne
mov
mov
stc
sbb
int
mov
lcall
loope
popa
jo
mov
das
cmpsb
dec
mov
movsb
inc
adc
cmp
cmp
adc
rclb
pushf
xor
push
subb
mov
lcall
cmp
rorb
mov
sbb
sub
push
mov
inc
and
iret
push
xor
sbb
stos
cmp
lock
imul
mov
push
fldenv
xchg
sbb
push
rcrb
adc
mov
movsb
and
je
mov
fstpl
scas
popa
insl
push
or
pop
pop
leave
js
and
pop
jnp
orl
test
add
xchg
cmp
pusha
shlb
lods
not
addb
push
stos
push
xor
lods
cmpsb
push
inc
pop
sti
and
add
push
adc
cmovbe
and
sbb
loopne
das
test
shlb
add
enter
mov
or
jns
xor
lods
out
and
inc
and
imul
fnstcw
shrb
fdiv
test
dec
cmp
enter
jle
or
lock
lcall
daa
js
in
add
push
repnz
dec
ljmp
xchg
mov
sbb
lahf
adc
imul
and
sbb
pop
dec
push
jmp
xchg
jle
mov
and
andb
ret
shll
cld
insl
scas
in
mov
cwtl
jne
add
jns
iret
clc
pop
push
or
mov
push
push
sub
orl
or
arpl
push
arpl
push
mov
inc
in
lahf
pop
sbb
popf
pop
or
push
jg
xchg
pop
addl
add
add
lods
sub
int
xor
in
mov
popf
ja
adc
dec
fnclex
adc
push
insl
movsl
in
xor
test
lock
sub
push
mov
in
dec
outsl
xor
in
dec
mov
jg
xchg
or
adc
js
jo
jle
or
fldl
xor
adc
pop
ljmp
jle
movsb
pop
popa
punpckhwd
pop
jl
outsb
or
dec
cmp
lock
or
mov
push
fnstsw
dec
cmp
mov
dec
mov
xor
cmp
jle
sbb
imul
pop
mov
jmp
cmp
je
ja
fmull
add
mov
mov
lret
sub
enter
pop
int3
fimuls
adc
sbb
jnp
inc
mov
push
jae
push
and
fists
lds
jne
orl
and
xor
adc
jno
push
jnp
sub
outsl
outsl
testb
mov
and
gs
pusha
mov
adc
mov
jp
out
mov
pop
jae
test
jns
xor
ret
lea
mov
lods
inc
push
pop
mov
mov
inc
testb
sub
shr
xor
loope
out
subl
arpl
add
dec
in
outsl
enter
jb
cmp
sub
jns
jne
out
jl
or
xor
mov
ja
pop
ret
rorl
roll
xchg
mov
fwait
nop
cmp
sub
dec
xor
sbb
call
out
dec
test
dec
xor
inc
inc
or
imul
mull
push
push
add
je
ficomps
adc
test
orb
cwtl
sbb
add
out
xor
push
outsb
mov
cmpsl
rcll
sbb
int
xchg
jl
les
lret
rcll
adc
add
xorb
mov
aad
aam
and
rcr
xchg
adc
adc
xchg
cmp
push
xchg
or
fnsetpm(287
rcr
push
test
in
push
mov
xor
xchg
out
inc
add
add
and
adc
leave
leave
sub
cmp
clc
inc
iret
adc
mov
push
cs
insb
aad
cmp
cli
mov
mov
pop
jo
adc
and
and
push
sbb
cmp
gs
sub
or
push
call
pop
pusha
call
dec
andb
inc
dec
pop
and
pop
adc
out
fsub
pusha
pop
jns
adc
xor
pop
mov
imull
adc
out
push
inc
jp
test
test
pop
cmp
cmp
testl
sub
negb
xor
push
lea
andl
mov
loopne
xor
xor
sbb
aaa
rorl
adc
pop
xchg
icebp
xchg
lret
adc
out
ret
icebp
jge
jo
movsb
repnz
fstl
test
fs
lea
pop
add
mov
stc
lods
jg
or
pop
out
xlat
xor
pusha
inc
jae
xchg
sub
sub
inc
imul
pop
push
cld
xchg
bound
jge
jbe
enter
jne
push
or
push
mov
mov
sub
and
movsl
dec
and
fidivrl
pop
push
addb
sbb
pusha
je,pn
clc
cmpl
jne
int3
dec
out
pop
jecxz
xor
xchg
test
jge
outsl
add
xor
sbb
jl
fstl
icebp
movl
int3
push
xchg
fs
push
push
orb
lcall
mov
dec
test
cltd
and
mov
add
notb
js
idivb
sub
mov
jne
xor
out
rorb
and
repnz
push
js
js
jecxz
xor
pop
xchg
adc
cmp
push
dec
inc
outsl
or
jbe
roll
xchg
jp
jne
mov
test
ret
dec
mov
out
jecxz
xor
rcll
cmp
jns
lock
or
das
mov
sbb
xor
lock
inc
push
clc
inc
shl
std
sbb
sbb
mov
mov
fs
add
lahf
sarl
jns
into
mov
test
pop
out
ss
xchg
add
sbb
nop
mov
outsb
ljmp
test
fsub
add
cmpsb
xchg
add
add
mov
or
lahf
dec
xchg
aad
xchg
icebp
sub
add
fiaddl
adc
inc
sub
stc
pop
fldl
out
pop
in
sbb
push
and
ljmp
push
jp
ljmp
mov
mov
and
repnz
add
lret
out
cltd
stos
loope
inc
ljmp
inc
movl
pop
sub
mov
mov
xchg
aam
je
adc
lcall
push
sub
mov
pusha
pop
push
jne
cmp
xchg
or
mov
adc
and
pop
repnz
lahf
mov
add
pushf
lret
enter
adc
aam
es
and
xor
popf
sbb
xlat
and
mov
cmp
call
pop
adc
lods
lea
jp
lcall
rclb
test
les
jne
pop
pop
push
outsb
mov
sub
dec
mov
inc
push
repz
cmp
setne
aam
jg
cmp
jne
sti
aas
push
push
push
mov
ljmp
sub
jmp
mov
cmp
jne
push
push
push
push
add
outsl
push
lock
mov
sbb
call
adc
shrb
xor
pop
sarb
test
mov
push
lret
or
xchg
mov
daa
loopne
xor
inc
es
nop
push
and
pusha
mov
int
pop
movsl
mov
dec
dec
sbb
or
add
inc
add
and
xchg
dec
cmp
jb
jne
push
push
xchg
or
sbb
or
and
add
mov
push
push
sbb
rcll
stc
subb
movsl
dec
movsl
xlat
filds
xchg
sbb
fmul
into
fwait
push
sbb
lahf
shlb
subb
jae
lods
inc
out
push
add
xchg
loopne
dec
or
jmp
or
lods
imul
sahf
loopne
push
je
xor
or
xchg
sbb
and
in
lret
adc
or
xor
push
fwait
sub
inc
push
pop
arpl
popa
pop
mov
lret
sbb
adc
mov
and
lret
stc
add
inc
dec
and
pop
inc
enter
xor
mov
lock
add
jne
shl
add
push
xor
insl
es
xchg
push
out
test
jbe
int
call
mov
dec
pop
es
insb
repnz
cmp
or
scas
xchg
xor
add
mov
stos
inc
mov
inc
and
mov
out
mov
out
xlat
mov
pop
into
fsts
scas
xchg
push
push
mov
xchg
imul
loope
inc
inc
jle
xor
lret
je
push
mov
icebp
jle
push
into
push
adc
mov
fiadds
in
lahf
mov
mov
pop
dec
fldt
stos
dec
test
fisttpll
push
pop
shlb
push
cmp
or
push
push
cmc
add
fdivp
push
cmp
leave
jb
mov
ret
ljmp
pop
insb
and
inc
clc
ss
test
cld
push
lock
xchg
icebp
sbb
sbbb
cwtl
add
sbb
sub
cld
jo
pushw
pop
lods
ja
shlb
insl
push
clc
jb
xrelease
jl,pn
push
push
push
sbb
repz
xor
mov
ljmp
mov
lahf
lcall
add
push
cmp
pop
fmuls
lcall
adc
xchg
icebp
sub
ljmp
out
lea
jmp
lods
js
push
inc
add
in
rolb
out
test
mov
movsb
insb
mov
add
fsubrl
sahf
leave
test
sub
sub
pop
out
outsl
loope
shlb
xchg
leave
sub
pop
imul
mov
cmpsl
pop
add
dec
sub
mov
dec
test
mul
das
dec
lods
daa
add
ss
push
lret
into
lock
out
fistps
addr16
adc
shll
sbb
or
jg
mov
cmp
jae
push
cs
add
fcomps
es
ja
hlt
push
add
add
mov
mov
jmp
cmp
loope
inc
std
dec
hlt
jge
mov
movsl
mov
add
mov
push
mov
shrl
or
clc
and
lahf
or
jmp
cmc
insb
testb
push
ljmp
pusha
pop
lcall
test
inc
jecxz
and
push
cmp
ss
hlt
jg
loope
shl
outsb
and
push
jmp
in
mov
bound
mov
hlt
mov
mov
fwait
and
adc
adc
enter
mov
sub
pop
aad
fadd
push
pop
movsl
xchg
rorb
test
mov
add
lock
or
ret
ret
or
mov
mov
adc
cmp
ja
imul
jge
xorb
xchg
cmp
pop
shrl
ret
mov
cmp
mov
xor
dec
sbb
adc
pop
jecxz
lret
sub
lock
xlat
sbb
cmpsb
cmp
push
fstps
pop
and
sub
cmp
mov
jne
pop
xor
js
xchg
dec
inc
js
add
sub
cmp
dec
ud2
nopl
or
and
lret
ret
test
dec
or
test
faddl
in
lahf
pop
push
xlat
nop
cmp
test
push
sbb
xchg
xchg
fcomps
data16
jp
adc
sbb
mov
jg
and
js
shl
int3
cmp
cli
or
js
lcall
or
mov
mov
xor
movsb
jb
lea
ljmp
mov
in
mov
test
pushf
aam
or
lret
cmpsb
leave
sub
out
pop
pop
es
mov
sbb
jne
xchg
mov
ret
pop
arpl
popl
xacquire
and
mov
sbb
dec
lods
scas
push
cmp
outsb
lds
adcb
int3
outsb
or
mov
cmp
sub
mov
inc
pop
adc
inc
jbe
cwtl
push
pop
xchg
xchg
int
cmp
jbe
daa
sub
bound
fs
cltd
mov
adc
adc
cwtl
icebp
fs
test
mov
je
inc
cmp
or
ret
inc
cli
pop
jg
test
mov
add
push
sbb
sbbb
stos
test
mov
xor
lods
push
xchg
les
jb
inc
pop
xor
inc
jne
jmp
addr16
xchg
pop
sbb
into
sbb
in
push
push
popf
scas
test
imul
aam
daa
add
lods
xchg
stc
inc
cmpb
loopne
inc
test
in
repz
pop
adc
sub
arpl
push
dec
in
add
and
xor
lea
fdivrs
fcoml
mov
add
ret
bound
jl
mov
imul
inc
add
push
sti
adc
arpl
sub
std
mov
mov
sbb
leave
jno
pop
adc
push
mov
adc
and
inc
test
pop
lock
iret
xlat
icebp
add
dec
clc
push
movsl
push
lea
leave
es
pop
leave
mov
sbb
sub
sbb
ss
inc
push
sub
aam
push
sbb
sbb
popf
pop
pop
rolb
jbe
les
lock
cwtl
adc
or
xor
insl
push
arpl
popf
add
jne
cltd
aad
ret
js
mov
dec
add
je
jno
and
inc
mull
cs
jno
lcall
sbb
jne
sbb
gs
mov
mov
or
fs
sbb
arpl
fists
and
out
adc
adc
into
inc
xor
out
mov
es
xchg
mov
push
or
add
sbb
scas
xor
inc
lds
test
push
lods
or
mov
loope
inc
imul
out
sbb
sbb
jmp
aas
push
jl
fistpl
push
push
add
movsb
push
push
sub
cltd
and
in
dec
or
add
add
mov
out
fs
cld
leave
push
scas
das
stos
pop
mov
add
jmp
scas
insb
push
dec
add
in
dec
int3
pop
sahf
jge
fidivl
sub
jl
push
dec
ss
push
push
gs
add
pop
dec
push
ds
dec
or
push
cwtl
add
push
fisubrs
or
xor
mov
rclb
lds
adc
add
mov
adc
jle
dec
out
pop
pop
shrl
push
loop
cmpsl
cld
add
add
and
aam
popa
sbb
pop
lock
sbb
add
mov
sbb
pushf
jbe
mov
outsl
add
jmp
xchg
or
int3
and
xchg
push
push
jo
jbe
and
pusha
xchg
cmp
hlt
in
nop
daa
push
dec
adc
loopne
and
and
dec
movsb
or
loopne
adc
pop
pop
lock
pop
dec
lock
pop
inc
repnz
or
and
mov
cltd
xor
jle
mov
aaa
call
imul
jle
jae
leave
sbb
aas
insb
rolb
lods
jp
insl
xor
sahf
js
pusha
lock
xchg
inc
out
pop
out
and
mov
shl
xor
shr
lock
shl
in
mov
pop
lock
add
xchg
pop
add
mov
sub
push
pop
xchg
pop
rol
pop
fdivrs
sbb
push
push
movsb
mov
push
add
shrb
ljmp
pushf
in
pushf
dec
mov
rorb
ljmp
add
mov
jo
push
leave
pop
in
lea
jno
cmp
stc
or
lods
pusha
nop
dec
or
mov
push
push
mov
addr16
mov
lcall
ficoml
xor
fimull
mov
adc
push
add
in
cmp
add
add
gs
test
inc
rcl
and
lea
jg
dec
xchg
jne
icebp
lock
pop
push
pop
or
cmp
cmp
push
filds
inc
das
dec
jmp
mov
movsb
sarb
pop
xor
push
push
dec
push
sbb
cld
fsubrl
inc
push
je
push
lock
pop
inc
ficoms
addl
lea
or
push
mov
add
push
xchg
subb
lea
push
lock
lret
lcall
cmp
sub
mov
imul
jo
fidivrs
fadd
jg
or
add
call
loop
xor
hlt
shr
jge
push
out
rolb
push
sub
sub
add
add
push
push
add
push
shll
ja
jno
rorb
jl
jp
je
cmp
test
inc
dec
rorl
add
stos
cltd
mov
lods
hlt
addl
enter
dec
sbb
adc
pop
pop
pop
cli
or
push
mov
push
rorl
inc
sub
mov
or
sbb
push
mov
dec
mov
into
pop
jmp
lcall
dec
cwtl
rcll
add
sahf
test
push
movsb
fcoml
rolb
daa
scas
add
lret
pop
push
mov
push
cmpsb
outsb
add
call
ret
pop
lock
fbld
and
mov
cmp
je
adc
outsl
add
jge
sbb
movzwl
jnp
arpl
movsl
lcall
fstpl
inc
mov
pop
gs
push
sub
pop
cmc
push
jmp
push
sub
test
jmp
ds
pop
cli
aam
in
jl
push
push
stc
fdivr
popa
sub
jecxz
and
xchg
push
test
push
add
pop
mov
int
test
and
ds
or
or
cld
decl
cmp
je
push
lea
push
adc
mov
sbb
sub
push
push
test
jmp
pop
mov
mov
xor
sub
xchg
rcrl
mov
data16
dec
jmp
call
push
aas
push
adc
xchg
daa
fs
and
addl
mov
test
enter
clc
add
hlt
sub
push
in
inc
cmpsb
jbe
je
shlb
push
mov
neg
push
add
fisubs
fwait
or
push
loope
in
and
push
je
sbb
mov
cmpsb
mull
test
ja
push
sub
lahf
icebp
sub
call
xor
push
push
cmp
je
fcmovbe
push
push
push
insl
add
add
xchg
sbb
stos
fiadds
push
mov
es
in
aas
push
fdivrs
fnsave
push
aas
and
int3
sub
cmp
jbe
mov
jmp
dec
cs
mov
fdiv
mov
pusha
insl
in
mov
xor
and
enter
jl
push
test
loope
data16
adc
repnz
movsb
cmp
mov
adcb
xor
decb
jnp
cmpsb
add
xor
and
imul
add
cmpsb
cmp
dec
int
aad
je
mov
dec
mov
std
cmpl
je
ret
pop
or
and
or
adc
filds
adc
ret
add
jb
pop
push
ljmp
mov
sub
sbb
xor
dec
sbb
jae
rcll
cmpb
or
fbstp
js
lea
cld
decl
das
je
cmp
je
cmp
jne
add
pop
mov
push
cmpsb
mov
cmc
je
aad
sub
call
outsb
or
sub
cmc
mov
add
shrl
mov
cmp
xor
adc
cmovp
lock
pop
clc
add
cmpsb
push
add
scas
test
mov
enter
or
jno
cmp
jne
xchg
cmp
out
jl
ljmp
mov
or
test
lret
xor
jl
sub
sub
xchg
es
add
lods
adc
sbb
mov
leave
ret
sbb
arpl
xchg
imul
cmpb
or
ja
in
push
pop
ret
xor
inc
add
out
popa
push
ret
fimull
call
add
shlb
add
xchg
mov
mov
push
inc
adc
cmp
xor
sbb
xorl
adc
jle
clc
sbb
filds
pop
jne
mov
cmp
repz
fists
cmp
jne
mov
sbb
add
outsl
pop
out
aam
dec
inc
lock
mov
pop
dec
xor
mov
jg
push
movsb
jne
jmp
testb
lcall
jl
inc
sbb
cli
cmp
xchg
mov
mov
mov
testb
fs
dec
inc
jmp
inc
and
ljmp
loopne
mov
add
pop
sub
ret
inc
mov
jo
dec
dec
clc
jmp
or
cmp
je
mov
lea
push
movsb
sahf
clc
jo
dec
push
mov
mov
cltd
pop
in
inc
xor
shl
insb
inc
cmpl
cmp
rcr
insl
notb
cmp
push
fsubrl
outsb
xlat
pop
adc
je
sub
mov
cmp
or
ja
shrb
enter
insl
add
lds
xorl
icebp
cld
add
push
cmp
push
jge
mov
lret
or
into
in
rol
enter
jmp
loop
jne
andl
mov
cld
mov
loopne
inc
inc
insl
rorb
mov
data16
cltd
aaa
jb
cmp
ljmp
shl
add
jmp
cwtl
aas
les
and
and
dec
hlt
add
negb
test
jne
xor
push
ss
lock
test
incb
inc
sub
push
jae
mov
jmp
loope
mov
pop
cld
jbe
test
and
rorb
or
adc
call
outsb
das
or
bound
push
icebp
rolb
std
push
dec
cmp
jg
or
jge
mov
aaa
or
jle
es
sub
pop
outsl
repz
pop
cmp
jl
pop
jle
pusha
push
insb
test
inc
test
or
jb
xor
jbe
mov
test
fwait
and
repz
jne
or
je,pn
test
jne
je
es
jae
and
xchg
je
fistps
and
add
add
inc
mov
push
sub
push
sbb
movsl
dec
and
add
shl
dec
and
mov
mov
inc
and
pop
jb
pushl
out
cmp
mov
push
mov
je
das
push
add
inc
es
inc
sbb
stos
inc
xor
jp
pop
add
push
movl
sub
mov
jmp
or
xor
push
cmpsb
imul
mov
sub
jne
mov
add
rolb
fimull
mov
jae
out
lcall
mov
xlat
jno
fiadds
mov
pushf
pusha
mov
jge
fsubrl
imul
add
movb
push
aaa
popf
and
lea
dec
jno
je
push
pop
add
pop
jb
cld
adc
pop
cmp
mov
add
mov
loopne
inc
mov
clc
or
xchg
lods
cmp
pop
cwtl
xor
lock
sbb
stos
dec
daa
mov
add
fsubs
arpl
mov
addr16
inc
and
jae
push
cmpsb
movsb
xor
ret
lea
add
or
xchg
push
andb
adc
pop
cld
mov
add
mov
rclb
or
xlat
mov
sti
pop
daa
dec
add
cmp
cmp
push
and
mov
ss
test
push
or
rolb
aam
xor
pop
sub
adc
fwait
push
adc
mov
add
pop
stos
xor
sbb
scas
jl
ret
inc
fimull
add
cmp
add
add
mov
add
mov
scas
push
or
mov
sahf
push
cmp
lock
hlt
sub
inc
push
les
add
pop
adc
push
cwtl
and
xchg
sarl
outsb
xor
aaa
xor
subl
xchg
mov
imul
sti
inc
or
mov
pop
lock
lds
cwtl
and
add
pop
sbb
mov
mov
xchg
adc
roll
cltd
add
pushl
xor
rol
subl
mov
cmp
and
sahf
xchg
fwait
cmp
jmp
mov
push
mov
lahf
sub
pop
cmp
addl
xchg
xchg
sub
mov
dec
mov
or
push
fidivl
push
leave
mov
cmp
or
bound
xchg
cmp
xchg
inc
and
and
daa
aas
jne
mov
test
mov
pusha
call
push
movsl
adcb
in
jae
mov
mov
add
aam
loopne
lret
subl
xor
push
lret
inc
loope
mov
xor
loop
dec
add
push
in
rolb
jne
push
sar
push
pop
add
and
jne
push
cmpb
adc
mov
cmpsb
jne
jne
sbb
mov
add
movl
add
jl
mov
bound
into
cmpl
dec
adc
pop
sub
mov
mov
in
add
jmp
mov
orl
fcomps
inc
loop
hlt
mov
inc
je
lods
cmp
lds
lds
add
inc
xchg
in
loope
rcll
mov
jge
pop
and
aaa
sbb
or
cwtl
mov
sarl
add
repnz
mov
adc
lods
fstpl
pop
push
aam
fsubr
cmp
in
test
jbe
popf
jo
push
push
outsb
push
push
and
sub
in
push
call
xor
jae
xor
sub
jge
shlb
inc
pop
cld
pushw
jmp
pop
inc
cmp
je
lea
cmpb
mul
sbb
adc
je
or
jne
push
loopne
mov
jmp
cmp
mov
pusha
sub
incl
fnstenv
sub
dec
mov
pop
cs
ja
sbb
xor
jb
jge
cmp
fchs
je
jl
out
je
jmp
add
mov
rclb
movb
mov
or
add
enter
iret
popa
inc
xor
jbe
das
loop
fsubl
nop
jmp
inc
push
sbb
dec
popa
in
adc
pop
sbb
dec
sub
pop
push
fisttpll
cmp
push
xor
subl
sub
adc
add
int
push
rolb
dec
mov
pop
pushf
ret
inc
leave
test
or
adc
xchg
mov
jp
mov
xchg
lret
in
or
xor
cmp
dec
jge
inc
mov
fimuls
push
add
mov
pusha
shlb
and
sbb
lock
outsb
imul
mov
jmp
jb
notb
push
cmp
outsb
imul
in
cmpsb
sbb
cmp
ret
fwait
pop
pop
and
mov
or
rcr
mov
sub
in
mov
mov
xor
cmp
add
jb
fists
sbb
filds
jbe
pop
ret
icebp
jnp
adc
push
push
mov
ss
data16
and
or
shrb
mov
inc
mov
push
xchg
push
jp
ret
add
push
lahf
or
js
pushf
out
negb
jnp
mov
xchg
push
in
pop
sbb
inc
ljmp
jnp
dec
lock
push
hlt
ficoms
mov
insl
pusha
mov
lods
adc
dec
test
in
clc
lods
or
sub
jl
orl
lods
add
sub
lock
out
pop
inc
dec
movl
mov
sub
js
or
loopne
and
push
push
mov
add
or
inc
ss
repnz
push
cmpsl
fld
inc
cs
test
sub
mov
movb
or
or
add
or
popa
pop
lcall
cmp
movsb
or
sub
dec
xor
cmp
movsl
loope
loopne,pt
in
jne
cld
aam
cmp
test
lock
arpl
cmpb
mov
xor
lcall
hlt
cmp
orl
mov
rclb
jnp
fs
cmp
adcb
aas
jl
adc
or
xor
jmp
pushl
add
mov
in
jg
jo
mov
faddl
addr16
push
frstor
xor
orb
pop
push
pop
jmp
lea
and
mul
add
cmp
mov
setle
sbb
push
xchg
mov
pusha
enter
push
inc
inc
xor
xlat
fcmovu
in
in
lret
push
sub
jo
mov
into
sbb
push
out
sbb
out
xchg
mov
jo
orb
jmp
paddq
push
xchg
lret
movsl
inc
mov
cli
xor
mov
sbb
push
adc
js
pop
sbb
clc
push
adcl
adc
push
daa
in
xor
shlb
jae
cmp
or
bound
xchg
testb
or
cmp
push
or
inc
out
ret
movsl
pop
add
mov
pushf
or
lahf
jg
add
or
cmp
jmp
add
dec
rorb
sub
addr16
gs
mov
or
loopne
xchg
pop
outsl
cwtl
mov
jl
xorl
outsb
push
jl
cld
or
or
in
out
cmp
cltd
inc
mov
popa
adc
lock
sahf
or
dec
scas
dec
cld
in
sbb
aaa
sub
into
add
sub
call
push
sub
pop
pop
sbb
sbb
fwait
je
pop
sbb
cmpl
jmp
dec
in
push
pop
mov
mov
mov
pop
adc
lods
sarl
lock
jle
add
push
mov
lcall
sbb
xor
cmp
pushf
push
sarl
mov
ret
add
js
das
inc
jbe
pushf
inc
clc
lods
out
sti
dec
cmp
add
jle
pop
sbb
in
xchg
incb
xor
pop
cli
pop
pusha
mov
mov
ja
dec
aas
pop
mov
push
mov
push
push
test
pushf
mov
adc
insb
add
call
add
sahf
xchg
push
int3
lcall
hlt
mov
add
int3
in
rolb
or
js
adc
cli
pushf
xor
lods
or
inc
scas
imul
mov
shrb
inc
insl
out
stc
lahf
cmp
pop
or
adc
addr16
mul
jmp
push
lock
dec
cmp
and
lret
dec
add
cmpsl
push
ret
data16
into
mov
mov
sti
test
clc
xchg
fmuls
inc
out
or
add
enter
into
fcoms
lods
and
andps
xlat
les
rcl
gs
and
sbb
add
add
pop
insl
hlt
sbb
addr16
cmp
add
pop
sbb
jmp
pop
xor
or
out
int3
sub
inc
loope
mov
pop
dec
jecxz
mov
imul
push
mov
cltd
xchg
adc
imul
mov
push
and
inc
insb
lock
pushf
cwtl
pop
sub
stos
sub
lock
push
lret
dec
add
dec
inc
adc
and
lods
insl
jl
ja
jecxz
sbb
mov
cmp
shlb
jbe
dec
mov
imul
mov
cmp
adc
and
jbe
dec
in
fmuls
push
insl
inc
pop
jns
call
mov
mov
inc
push
xor
jecxz
int
sbb
nop
cmp
sbb
xchg
push
inc
xchg
pop
cmp
pop
pop
mov
or
adc
popf
movsl
sub
adc
push
std
pop
add
pop
add
iret
es
pop
nop
testl
cmp
inc
push
xor
int
sub
clc
insb
ficompl
mov
jecxz
insl
sub
sbb
into
cmpsl
hlt
neg
in
repnz
sbb
dec
inc
and
jne
bswap
pop
addr16
push
adc
test
pop
jae
inc
fiaddl
loop
adc
fs
nop
add
adc
or
outsb
test
clc
fisttps
ljmp
or
xorb
inc
insl
cld
dec
adc
dec
aas
lods
push
pushf
in
dec
cmp
or
das
pop
add
sub
sub
push
sbb
fisubrl
roll
jg
pop
or
lds
popf
pop
cmc
push
add
sahf
push
sub
or
jmp
clc
lock
lret
loope
cld
cli
lea
stos
pop
cmp
pop
xor
adc
jle
ret
pop
inc
orl
adcb
and
imul
xchg
insb
or
mov
or
dec
lods
inc
rsm
xchg
jb
push
shlb
test
ja
adc
pop
outsl
adc
add
mov
das
inc
aam
sub
and
ja
jecxz
pop
js
fsubrs
subl
sarl
add
mov
nop
push
in
pop
adc
push
popa
push
and
icebp
cmp
jne
pop
scas
in
arpl
inc
sub
pop
dec
or
mov
adc
out
mov
mov
movsl
loopne
xor
jge
push
pop
adc
loope
dec
pop
sub
adc
cli
jns
cwtl
xchg
cmpsb
mov
dec
stc
xor
test
inc
call
out
jno
adc
adc
push
ds
adc
mov
sbb
clc
cmp
outsb
and
scas
sub
popf
adc
in
sbb
test
sar
sub
sub
push
or
and
adc
roll
sub
sub
cmc
pop
jle
movhps
movb
dec
nop
inc
sub
mov
pop
cmp
sub
inc
frstor
sbb
into
icebp
jo
pop
pop
movsb
sbbb
xchg
jns,pn
stos
shll
testb
pop
add
add
mov
sbb
movb
inc
push
cmp
push
ja
sub
xchg
cmp
es
sbb
test
and
loope
leave
dec
mov
insb
enter
add
aas
cs
sbb
and
push
dec
mov
rcrl
push
decl
test
pop
push
sbb
pop
push
inc
push
dec
or
jo
roll
je
iret
xor
adc
addb
popf
mov
fs
adc
dec
xchg
push
pop
and
jmp
test
movsl
or
push
xor
jne
push
into
aad
xchg
cmp
loope
pop
test
cli
xor
xchg
sub
pop
add
pop
mov
lret
int3
aad
test
pop
enter
or
adc
shll
daa
jne
addr16
shrl
stos
adc
cwtl
add
inc
ds
cmp
or
add
movsb
subb
pop
xor
xchg
sub
fldcw
and
inc
scas
xchg
sub
test
add
and
mov
pop
in
inc
or
stc
sub
push
xor
stos
and
pop
adc
inc
nop
or
ds
mov
push
loopne
pop
mov
aas
add
cmp
jnp
xor
inc
les
xacquire
jg
pop
fs
add
sub
je
faddl
aas
in
mov
jp
fldl2e
pop
xchg
push
add
aam
jns
js
xor
movsb
and
sbb
or
sub
in
test
dec
dec
cmp
xchg
dec
pop
call
sbb
xor
rclb
in
xlat
mov
jo
fs
adc
sub
mov
xor
sbb
in
inc
cmp
dec
adc
mov
jmp
loopne
enter
inc
mov
xor
pusha
mov
sbb
imul
jb
sub
dec
xor
and
add
push
xlat
enter
add
xchg
inc
push
rcrb
jmp
enter
dec
aaa
mov
clc
sbb
mov
cmp
push
imul
lahf
pop
or
inc
push
push
push
mov
or
aam
jbe
out
iret
sbbl
sub
pop
hlt
jne
jo
pop
imul
jle
test
cld
lods
scas
jl
push
push
mov
mov
andb
test
dec
mov
ljmp
jb
jmp
sahf
mov
mov
call
xor
aaa
dec
pushf
je
jl
xor
pusha
test
inc
dec
xlat
push
xchg
push
mov
xor
add
or
fwait
fwait
movsl
lret
js
push
test
cwtl
push
lcall
call
xlat
aaa
fpatan
push
call
repnz
add
popa
mov
repz
mov
fidivrl
dec
sbb
mov
dec
add
pop
jp
adc
repnz
call
inc
fsts
push
push
mov
rorb
or
scas
jno
and
sbb
pop
bound
mov
fxch
push
inc
or
push
icebp
pusha
imul
int3
fdivl
cmp
mov
pop
adcb
cmp
fmull
psrad
xor
xadd
and
or
cmp
pop
mov
mov
xchg
or
je
xchg
out
push
adc
or
cmp
gs
mov
add
fcoms
push
fwait
xlat
push
je
push
mov
pop
jmp
sti
rclb
ss
or
lcall
lds
ror
push
insb
arpl
addb
or
in
push
mov
pusha
add
imul
dec
and
xchg
sub
mov
mov
mov
xchg
pop
idiv
xor
leave
stos
add
jne
outsb
pop
inc
in
fsubl
pop
xchg
add
sub
or
mov
push
add
lcall
jo
out
in
ja
lock
shrl
sub
adc
dec
add
mov
pop
xchg
or
inc
rep
sub
inc
push
je
inc
lods
mov
sub
xchg
call
jno
dec
adc
inc
aas
push
mov
call
push
sub
push
cmp
cmp
aaa
cwtl
fisubs
aaa
enter
mov
shl
sub
stos
jge
hlt
xorb
xchg
insb
pop
mov
push
dec
cmc
sbb
adc
xchg
fdivs
push
ficompl
in
inc
push
jle
fbstp
cmp
les
subl
aas
mov
jmp
and
bound
push
aaa
fsub
sar
fcoms
jmp
mov
inc
lea
lcall
movl
test
pop
mov
fidivs
call
push
xchg
and
and
dec
sbb
sbb
cli
or
movsb
or
xchg
into
pushf
mov
cmp
mov
je
add
cmpl
jo
pusha
sub
xchg
xchg
push
fidivrl
aam
repnz
movsl
pop
add
call
or
lahf
mov
add
dec
sbb
push
fnsave
insl
cmp
ljmp
test
adc
pop
and
call
iret
dec
push
and
sbb
adc
leave
mov
xchg
cltd
cmp
scas
outsb
fwait
add
or
fs
movsl
xchg
jne
ret
lret
sub
jge
movzbl
push
xor
or
jecxz
sub
jg
aaa
mov
out
dec
cmpsb
push
je
xor
mov
inc
loopne
divb
pusha
pushf
fisubs
pop
rorb
lea
cmp
or
pop
dec
fwait
loop
popa
inc
lcall
and
sub
mov
sbb
add
add
sub
mov
movsb
jns
jmp
mov
sub
lea
push
lea
push
inc
push
lock
insl
jge
js
out
movsb
lds
testl
jae
push
sub
add
outsb
adc
arpl
pop
ret
cmp
int
popa
mov
or
or
sbb
fadds
sbb
lret
or
pop
cmp
mov
or
add
aad
add
or
add
cmp
aaa
lods
sub
dec
ja
mov
add
test
push
push
cmp
mov
push
or
inc
in
jge
cmp
incb
add
push
xor
ss
int
push
pop
sbb
sub
je
sbb
sbb
or
xor
cmpb
adc
cmp
jl
inc
ret
cmp
xchg
lret
ss
fildll
cmp
je
xor
inc
cmp
sbb
adc
ret
pop
cmp
ss
mov
mov
cmp
ficoml
or
xchg
jo
adc
ret
sbb
in
mov
ja
cmp
repnz
mov
pop
adc
adc
or
fs
xchg
or
ret
dec
in
imul
loop
pop
js
xchg
divb
add
mov
je
add
out
fwait
push
xchg
mov
cmp
jbe
cmp
jbe
mov
sbb
cwtl
stos
xor
mov
or
roll
push
lahf
mov
insl
mov
enter
fs
sbb
adc
add
mov
xor
movb
adc
cmp
movsb
movb
pop
and
es
xchg
jg
loopne
sbb
popf
in
lahf
mov
pop
aas
stc
mov
orb
lea
sar
xor
jl
mov
xchg
xlat
push
fld
addl
decb
add
ds
es
lods
je
adc
adc
add
adc
ss
xchg
push
ret
pop
pop
mov
jl
sbb
pop
push
xlat
popa
sbbl
adc
xor
stc
fdivrs
cmp
imul
sbb
mov
jne
mov
sub
sbb
jl
or
ds
sbb
and
inc
inc
loope
and
pushl
xor
test
cmp
and
ret
cwtl
sbb
and
push
cmp
in
mov
mov
push
inc
cmp
outsl
jl
or
das
lock
mov
stos
lds
sub
out
mov
jbe
mov
xor
incb
divl
pushl
lea
lcall
cmc
jg
negb
hlt
flds
push
daa
fstps
and
orl
fistpl
xor
push
mov
mov
sbb
and
sub
push
push
fwait
in
int3
mov
mov
popl
mov
movsb
xchg
lea
and
add
or
jb
adc
mov
pushf
inc
out
sub
pop
rorl
ret
movsb
ja
add
mov
bound
icebp
mov
push
push
std
and
adc
inc
lea
idivb
clc
lea
cli
nop
jb
mov
xchg
lea
int
hlt
adc
enter
inc
cmp
inc
shlb
xlat
les
sarl
or
or
fld
hlt
aam
pop
fdivrl
mov
lcall
lcall
jl
inc
adc
pop
clc
imul
fwait
lret
mov
and
test
mov
test
out
cmc
xor
push
ret
arpl
sbb
divl
and
sbb
or
aad
and
rorb
mov
add
ja
mov
mov
arpl
ret
out
inc
xorl
add
jo
jecxz
negl
ljmp
push
adc
rcl
jl
adc
call
into
push
cmp
cmp
xorl
js
jb
adc
shlb
mov
mov
dec
jp
sahf
inc
movsb
xor
mov
loopew
xchg
fwait
fwait
and
pop
pop
inc
stos
or
mov
mov
iret
lods
pop
xor
dec
es
pop
lods
loope
inc
fbstp
or
cmp
jnp
xorb
loope
pop
add
ljmp
nop
loopne
mov
xchg
faddl
xor
lret
shll
adc
sbb
adc
mov
out
insb
and
into
jo
stc
jmp
or
xorl
sbb
mov
cmp
adc
or
lret
arpl
int
pop
xchg
cltd
mov
jo
mov
add
jp
jmp
mov
mov
jle
clc
hlt
mov
xchg
jg
cmp
cmp
pop
jl
cmp
add
jg
clc
add
testb
adc
icebp
stos
ss
out
sub
or
bnd
push
sub
fadds
lret
push
mov
inc
mov
cmpsl
add
cld
mov
stc
cmpb
imul
jge
popf
into
fildl
push
mov
pop
test
popf
lock
push
jmp
or
fstpt
cmp
jge
mov
lahf
movsb
mov
and
pop
add
inc
add
add
lret
imul
and
lock
lret
movzwl
lods
pop
sbb
and
lods
cmpsb
lahf
inc
jl
or
xchg
xor
sbb
adc
or
pop
pop
push
push
or
mov
clc
dec
push
lock
pop
pop
fsubrs
push
push
test
les
mov
sub
push
inc
sub
dec
fwait
cmp
cmovo
in
mov
fiadds
cmp
push
mov
push
inc
or
jle
add
xchg
loopne
rol
push
outsb
ja
inc
add
pop
sbb
dec
xor
push
push
stos
mov
push
stos
mov
mov
fldcw
lods
pop
sbb
testb
aad
jno
pop
pop
dec
fisttpll
sub
jl
rolb
loopne
les
dec
cmp
je
cmp
icebp
add
jne
push
aam
mov
je
aam
jnp
pop
or
or
pop
cmp
pusha
xchg
pop
hlt
out
and
inc
sbb
adc
pop
fadds
push
cli
iret
std
mov
push
pop
popa
jge
jle
mov
mov
mov
mov
cmpsb
cmp
mov
cld
js
jb
pop
ret
jbe
adcb
sub
pop
and
lods
cmc
mov
and
push
mov
xchg
les
aam
xor
push
xchg
mov
movsb
push
cmpb
hlt
stos
enter
addl
addr16
insl
and
or
mov
pop
or
aam
adc
mov
sbb
pop
inc
sub
mov
rolb
fsubrs
in
add
mov
xchg
push
xor
or
lods
adc
ret
xor
dec
push
enter
cmp
ret
push
aaa
mov
pop
std
mov
ds
in
jg
dec
jno
movlps
nop
inc
adc
notl
add
lods
mov
mov
push
out
jmp
jle
sbb
inc
xchg
jmp
aaa
lret
pop
push
cs
loope
lock
lods
sbb
add
pop
xchg
dec
movsb
out
push
int3
xchg
lea
je
push
fcoms
pop
add
push
mov
test
mov
adc
cld
inc
in
stos
shll
sub
push
rorl
rol
movsl
add
test
sysret
shrl
sbb
sub
nop
mov
test
push
test
sbb
adc
sbb
loopne
cmp
cld
add
xor
loop
in
mov
mov
xor
pop
lea
daa
xor
cmp
xchg
shll
cwtl
fdivl
sbb
movb
jp
fdivs
push
mov
push
or
data16
pop
dec
sbb
ja
mov
sub
or
mov
mov
dec
xlat
mov
daa
jmp
into
int3
cltd
or
cmp
add
adc
insb
mov
aaa
int3
pop
add
jns
fst
jle
mov
idivb
fimuls
add
inc
cmp
mov
mov
enter
cmp
stos
or
dec
mov
jnp
lods
loopne
jp
in
xchg
ss
jne
ret
mov
adc
rcll
lods
ss
push
xor
xor
inc
lahf
and
jecxz
inc
mov
add
adc
push
inc
mov
inc
ss
add
inc
sbb
out
stos
xchg
and
mov
dec
and
mov
push
mov
pop
cmp
je
mov
lock
mov
sub
and
jl
cmp
jne
adc
sub
js
addr16
and
bnd
jecxz
xor
xorl
cmp
ljmp
and
clc
add
jbe
push
shr
hlt
sbb
or
push
and
cmp
enter
mov
pop
or
js
dec
hlt
cmova
orl
imul
pop
pop
mov
jmp
push
stc
mov
cmp
jae
lea
jmp
scas
lods
outsl
testb
inc
cmp
jbe
stos
in
push
rolb
pop
sbb
or
and
mov
insb
mov
or
jne
cs
pop
and
fsubrl
cmpl
or
add
cwtl
jo
aaa
xor
pop
fs
in
xchg
imul
sbb
add
call
call
fsubl
call
sbb
or
xorb
mov
and
mov
sbb
push
add
rcll
int3
pusha
sub
mov
cmp
pop
xor
mov
add
je
lock
in
loopne
xchg
in
cmp
sbb
mov
push
pusha
add
lret
sbb
cmp
add
pop
bound
add
sbb
sbb
test
push
inc
fsubl
dec
push
xor
cmp
mov
xor
out
pop
xor
mov
inc
loop
fmuls
push
dec
cmpsl
shrl
dec
and
xchg
popa
mov
cld
sahf
sbb
lahf
ja
mov
sbb
loopne
and
psubb
gs
push
je
jo
xchg
xorl
cwtl
js
jmp
lock
and
pop
loopne
jae
jo
mov
or
jbe
sti
push
xchg
call
adc
or
ja
push
pop
cs
cmp
fwait
insb
add
push
mov
xor
xlat
xchg
push
cmp
mov
hlt
fcmovu
orl
dec
lock
add
push
xorl
xchg
mov
gs
inc
lock
and
cmp
inc
add
je
pusha
adc
add
inc
lcall
or
jne
push
dec
rol
dec
xor
pop
sub
sbb
push
add
ret
stos
inc
xchg
or
inc
andl
adc
lea
clc
lea
xchg
jns
pop
rorb
sub
pusha
loop
push
sub
jge
push
pop
xor
test
mov
lahf
add
mov
or
cli
sbb
je
mov
cmc
xchg
add
jmp
cmp
jbe
xchg
subb
dec
inc
jns
xor
insl
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
or
sub
lea
shl
dec
pop
cmp
stos
es
movsb
push
mov
and
xchg
mov
hlt
ret
enter
jns
or
inc
pop
jle
and
pop
and
pop
mov
cmpsl
mov
cwtl
fidivrl
cmp
jae
movsb
or
mov
lret
xor
jne
push
js
rorl
push
fistl
cld
loopne
fnstenv
mov
cld
lods
push
mov
xor
or
mov
in
add
or
add
xlat
cld
clc
pushl
xchg
add
cmp
xchg
nop
sub
into
orl
data16
or
xor
rol
xchg
je
fiadds
add
cmp
push
mov
mov
hlt
and
iret
je
mull
push
or
hlt
push
mov
mov
lods
and
add
dec
adc
cmp
leave
data16
nop
adc
cwtl
test
mov
nop
test
mov
xor
jmp
dec
dec
mov
daa
fwait
inc
lea
adc
dec
arpl
imul
leave
subl
ficomps
movsl
cmp
jne
cmp
shlb
cmp
adc
add
jbe
adc
jbe
push
mov
cmp
pop
push
xorb
dec
xchg
js
adc
mov
dec
jae
lret
pop
pusha
sub
dec
aas
imul
flds
roll
sub
das
push
jmp
pusha
ret
sub
lock
cltd
lods
das
push
das
adc
dec
hlt
xor
and
push
and
dec
jnp
mov
in
adc
faddl
sbb
loopne
add
js
in
lods
push
cmpsl
or
pushf
mov
add
dec
fsubrs
and
lahf
or
mov
adc
sub
leave
xlat
push
movzbl
jo
leave
lds
sbb
push
xor
lods
inc
iret
mov
lcall
push
xchg
jo
xchg
add
aam
pop
jne
or
jle
mov
push
pop
sbbb
push
push
jns
mov
push
add
mul
seto
inc
xchg
sbb
adc
enter
or
sbb
mov
gs
mov
adc
mov
data16
push
push
out
push
or
xor
sub
push
dec
out
mov
call
add
mov
mov
push
movsl
inc
or
in
jmp
rclb
lret
in
pop
and
jecxz
mov
jmp
mov
clc
and
rorl
sbb
jo
inc
test
repnz
or
mov
jge
mov
mov
inc
rclb
or
dec
or
cmp
loop
xchg
push
icebp
test
sarl
cmpb
jp
icebp
add
adc
addb
jl
sbb
xor
nop
mov
xor
aaa
pop
adc
mov
mov
lahf
popa
cmc
iret
mov
cmpsl
and
popa
jo
sub
inc
out
xchg
nop
pop
adc
jae
mov
jbe
mov
gs
jp
xlat
push
xor
lock
dec
and
dec
and
jmp
mov
sub
xchg
fiadds
jne
xchg
out
into
jbe
mov
pop
jne
inc
cmp
jae
push
sbb
dec
cmp
cmpsb
fwait
repnz
add
cmp
add
dec
pop
pusha
push
xor
iret
int3
fsub
mov
clc
and
jle,pn
lahf
test
insl
or
jb
xor
test
cmpsl
pop
rcrb
call
cld
xchg
cltd
pushf
add
pop
test
scas
fidivl
addr16
xor
ret
jmp
push
push
mov
push
xor
jo,pn
sub
push
test
adc
push
fs
and
cmp
mov
add
out
xchg
lret
ja
sahf
mov
je
pop
loop
add
pop
cld
add
add
in
test
adc
pop
inc
les
enter
out
rcll
addb
jne
mov
ljmp
out
sbb
inc
mov
jl
sub
addr16
or
mov
xchg
push
cld
jmp
in
sahf
xchg
std
pop
add
sbb
shll
inc
dec
adc
data16
pop
movsb
adcl
adc
loopne
lcall
sbb
popa
inc
adc
jo
xor
call
xor
sbb
shll
xchg
xchg
adc
cmp
adc
lcall
in
jl
cmp
bound
push
jmp
clc
mov
inc
movsb
or
lock
cmp
cmp
enter
inc
jl
or
cmpsb
xor
bound
or
mov
clc
pusha
adc
jbe
xor
jno
pusha
rorl
repnz
mov
add
sbb
icebp
or
pop
add
repz
sbb
or
lcall
je
sti
mov
bound
push
or
test
xor
mov
and
call
out
mov
movl
andl
loopne
pop
scas
adc
pcmpeqw
dec
fsub
push
pushl
cmp
xchg
in
jl
out
cmp
in
add
mov
jo
pop
or
dec
gs
jb
and
test
and
jmp
push
mov
xorl
in
mov
mov
sbb
xchg
jbe
sub
in
test
adc
xor
test
add
xor
push
cwtl
mov
mov
adc
pop
out
adc
lcall
lret
jb
sbb
fcompl
arpl
sbb
push
dec
add
rorb
das
das
mov
fsubrs
add
inc
jmp
ret
in
cmp
add
add
movsl
or
lahf
flds
xor
sub
mov
xchg
aas
ds
je
dec
pop
cmp
insl
adc
push
lods
outsb
pop
lea
xorb
das
push
ret
push
out
mov
icebp
mov
je
shrl
sub
mov
and
imul
in
sbb
xchg
rcrb
mov
fsub
xor
pushf
cltd
lea
inc
dec
int3
cmp
jae
sub
mov
adc
mov
lock
cs
adc
ljmp
dec
push
push
cmc
xchg
shlb
cmc
push
inc
sbb
add
fstpt
add
dec
dec
or
inc
inc
mov
xor
sbb
pop
mov
or
sti
pop
or
jmp
adc
jae
xor
cmpb
add
xchg
ljmp
push
jle
sub
cltd
mov
insb
int3
add
in
mov
mov
out
enter
addb
xchg
cld
jb,pn
cmp
adc
cld
or
inc
pop
pop
insl
enter
cli
sub
and
lea
rcl
fildl
cmp
add
jmp
incb
add
xor
and
sbb
or
test
sbb
lea
mov
xchg
inc
cmpsl
je
mov
punpcklbw
inc
or
jp
push
addr16
daa
push
xlat
inc
cmpl
movsl
sbb
imul
or
gs
dec
mov
xchg
or
add
loopne
inc
xchg
inc
mov
into
jmp
cld
cwtl
mov
xchg
pushf
ja
dec
and
xchg
adc
sub
inc
insb
loope
stos
ret
add
mov
pop
pushl
jmp
add
mov
lds
xchg
pop
loop
push
subb
dec
hlt
fcoml
cmp
hlt
mov
popa
roll
mov
push
out
adc
push
mov
mov
mov
dec
add
stc
or
add
jb
push
jae
lea
push
sub
xchg
je
or
mov
stos
icebp
mov
ja
push
and
or
mov
or
mov
mov
inc
sbb
or
inc
imul
cmp
push
cmp
jae
inc
jmp
push
jnp
js
or
mov
gs
fisttpll
sub
fdivr
push
movb
or
push
mov
pop
dec
sahf
dec
testl
push
add
add
insb
xor
fstpl
mov
lahf
xor
jnp
inc
sub
push
sarl
orb
mov
dec
mov
mov
adc
ret
jle
in
push
dec
push
xchg
sbb
or
es
or
xchg
inc
or
popa
sbb
push
push
or
addb
std
mov
sbb
test
in
pop
pop
sub
test
mov
adc
sbb
and
ss
xor
cmpb
sub
cmp
test
push
or
jbe
xchg
std
pushl
push
add
test
mov
mov
adc
ja
cmpb
add
dec
mov
push
or
or
xor
sbb
add
and
sbb
jb
inc
jecxz
subl
inc
add
mov
and
data16
sahf
pop
imul
cmp
sub
push
inc
or
or
inc
add
es
jecxz
xor
mov
mov
add
into
and
add
mov
jmp
mov
adc
shlb
lea
cli
ja
cmpb
inc
lods
leave
mov
aas
ret
push
or
jl
xor
pop
or
mov
mov
jno
iret
push
xor
cwtl
and
mov
pop
ret
add
mov
and
cmpsb
imul
scas
pusha
inc
pop
sbb
test
pop
in
cmc
popf
add
push
adc
mov
adc
push
int3
sbb
mov
jns
sub
mov
pop
repz
sub
add
hlt
mov
mov
xorb
sbb
cltd
dec
aam
or
or
mov
and
adc
dec
xor
xchg
movsl
inc
sbb
sub
leave
cld
push
mov
outsl
mov
cmp
into
movsl
or
les
addb
lret
cmp
sbb
mov
push
mov
xchg
or
daa
xchg
push
les
rolb
cmp
jbe
fmuls
lret
push
jp
mov
xchg
and
jge
cmc
or
xor
lock
mov
cmpsb
aad
nop
addl
fimuls
lahf
out
test
fwait
mov
out
imul
sub
cmp
or
mov
hlt
jge,pn
clc
fucomip
je
push
push
jg
or
xor
aad
mov
and
inc
adc
pop
fbld
jne
and
pop
fildll
imul
or
mov
add
push
add
cltd
adc
hlt
jle
arpl
pop
mov
sahf
or
jns
and
xchg
and
aam
scas
sbb
lods
cmpsb
adc
das
std
adc
fimuls
sbb
mov
jo
jmp
push
pavgw
sub
pop
and
fmull
mov
pop
and
xlat
lret
xor
pushf
fimull
mov
cmp
mov
mov
adc
and
loop
rolb
and
outsb
push
cltd
sub
cmp
adc
cwtl
lods
pop
mov
push
stc
cmp
inc
clc
adc
add
dec
add
cmp
test
inc
pushf
sub
nop
or
push
push
xchg
push
and
insb
aas
lods
cld
add
daa
push
ja
andb
aas
cmp
cmp
add
inc
insb
jl
pop
sbb
pop
gs
sbb
shl
out
add
xchg
cmpsl
nop
in
or
sub
gs
push
or
inc
pushf
mov
mov
sub
cld
push
ja
and
jbe
push
repz
lods
loop
cli
test
adc
icebp
add
sbb
dec
and
push
push
imul
fistpl
pop
ja
out
mov
xchg
mov
add
pop
fdivrs
adc
add
mov
pop
popa
mov
dec
cld
inc
fldl
xchg
mov
dec
rclb
cmp
jo
imul
int
add
es
jmp
push
ja
jbe
mov
and
mov
outsb
rcrl
popa
pop
jmp
sub
dec
lea
or
jle
mov
push
int
push
adc
std
inc
adc
pop
push
mov
std
xor
mov
sbb
pop
decl
cmp
lcall
popf
pop
call
je
xchg
loopne
inc
sub
add
adc
and
shlb
mov
jo
testl
ds
lret
xchg
push
in
dec
popl
jbe
adc
es
les
xchg
jb
add
push
mov
jp
add
lods
gs
mov
pop
mov
es
sub
adc
xor
jne
add
mov
inc
pop
xchg
jg
js
rol
push
rcrl
ret
or
inc
pop
fldenv
in
bound
mov
cltd
into
or
fisubs
xchg
mov
add
sub
daa
fldcw
repnz
jne
mov
mov
xchg
je
cmpl
or
jp
movsb
add
dec
enter
and
arpl
mov
stos
sub
cmp
inc
iret
bound
sub
add
adc
mov
fstpl
sbb
pushf
mov
subb
add
shl
inc
rcrb
or
stos
or
arpl
mov
cld
sub
lea
mov
cmp
xor
addr16
add
mov
cmp
sub
shrb
adc
jge
lret
xor
or
nop
js
and
xchg
movsb
lods
xchg
int3
test
and
adc
sbb
jmp
pusha
repnz
mov
cmp
fdivrs
call
std
cmp
jmp
push
call
movsb
push
ret
mov
pop
mov
and
ret
out
testl
mov
lods
nop
ret
es
fcomps
push
into
dec
and
aad
dec
scas
jns
sbb
pusha
xchg
inc
popf
pop
leave
xor
xor
or
xchg
add
xchg
adc
xlat
ss
js
dec
stos
cmp
mov
iret
lock
cwtl
xor
lea
push
shrb
leave
ds
hlt
imul
notl
ret
andl
mov
repz
dec
and
adc
cmp
xor
je
add
out
lar
or
xor
dec
push
incb
jae
call
lea
sbb
push
sbb
xchg
in
jo
roll
mov
add
mov
or
fldcw
pop
ret
push
ss
or
push
in
add
and
test
or
dec
push
lcall
dec
jecxz
mov
jle
cwtl
in
mov
sti
dec
or
movups
mov
or
pop
add
movsb
popa
cmpsb
dec
aaa
cmpb
cmp
popa
sbb
dec
pop
test
or
ret
xchg
es
xchg
clc
push
sub
or
cmp
je
mov
or
sarl
test
jl
test
push
aaa
pusha
shrb
mov
add
add
pop
adc
or
inc
sub
test
mov
clc
sbb
mov
icebp
inc
sub
outsl
xorb
fstpt
test
loope
mov
je
loope
loopne
jg
jno
dec
jnp
stc
pop
rorb
inc
inc
push
jg
jo
xchg
pop
sub
lods
movsb
jbe
sub
mov
jmp
es
cmpsb
in
mov
cmp
call
outsb
push
or
lcall
or
mov
inc
test
lea
add
mov
testb
sarl
daa
cmpsb
xchg
or
jecxz
ss
aas
jne
das
xlat
fldt
shl
js
fdivrl
push
test
adc
cmp
mov
pop
add
xchg
mov
aam
and
dec
sbb
mov
xchg
xchg
fmul
add
push
sub
add
add
cmp
mov
fmul
mov
push
xchg
into
leave
add
xor
ret
dec
sti
fimull
ja
loopne
mov
outsb
xchg
lods
push
lock
rclb
cs
xchg
push
inc
fsubrs
xor
stos
cmpb
je
nop
dec
sti
jbe
sbb
adc
rcll
and
filds
in
jne
push
push
in
in
cmpsb
cs
addb
lds
sbb
test
in
jge
cmpsb
mov
das
aad
pop
inc
fidivl
pop
inc
sarb
stos
rolb
sub
test
add
mov
jl
ret
xor
mov
repnz
mov
or
cmp
clc
push
cmp
jb
mov
dec
or
or
adc
or
add
adc
cmp
aaa
mov
or
or
or
js
push
push
fwait
je
aad
push
orb
inc
add
rolb
js
pop
add
ret
lea
mov
mov
mov
daa
icebp
add
je,pn
out
imul
jle
push
adc
sub
xchg
mov
ret
cmp
jl
testb
insb
frstor
pop
mov
nop
outsb
add
pop
ret
mov
jmp
and
add
jg
push
inc
shlb
test
fisubl
icebp
adc
mov
in
jle
mov
or
popf
pop
inc
mov
push
cld
sub
nop
les
clc
ja
in
sub
fdivs
dec
sbb
or
filds
pslld
add
movsl
dec
jnp
jo
dec
mov
push
jns
pop
or
add
mov
lea
test
pop
push
repz
shlb
jne
dec
jecxz
fcoml
mov
cwtl
lock
adc
mov
add
loopne
mov
aaa
sbb
movsb
add
lods
mov
inc
or
out
and
out
je
inc
mov
mov
movsl
mov
lock
push
adc
jae
js
faddl
popf
push
loopne
ud0
mov
mov
xor
aad
mov
xchg
pop
fdiv
decb
mov
mov
or
pop
das
adc
pop
cmpsl
adc
mov
pop
mov
adc
xor
pop
xorb
js
mov
stc
mov
arpl
popf
sbb
movsl
xchg
push
push
push
sar
add
sbb
iret
jbe
mov
out
mov
xchg
xchg
or
das
or
sbb
jb
sub
inc
shlb
dec
xchg
jl
add
mov
setle
push
xchg
test
jne
lret
fsub
push
subb
aas
mov
sbb
movsl
clc
shl
sbb
and
in
mov
cltd
jg
pushf
cmpsb
fisubs
negl
pop
mov
fstpt
push
sbb
test
loopne
push
rol
xchg
test
sti
es
xor
stos
mov
and
push
sub
push
insb
mov
fcompl
push
push
add
jb
and
fisubs
cs
stc
stos
push
fs
mov
inc
cld
dec
jno
adc
sbb
es
shll
and
adc
and
lea
insb
push
or
aad
adc
push
cmp
add
in
jb
add
xchg
lret
xor
xor
push
dec
sub
cmp
cmp
push
cmp
lret
movsb
or
and
inc
insb
push
pop
rcrb
rcrl
push
add
sti
outsl
aaa
mov
int3
xchg
push
mov
fmull
xchg
dec
mov
or
sahf
fsubrs
push
push
rcll
dec
aam
push
movl
loop
inc
pusha
add
pop
mov
xor
dec
jae
xchg
add
dec
and
cmp
sbbl
xchg
icebp
mov
mov
jmp
fmul
mov
loopne
mov
sbb
imul
or
or
pop
push
sbb
xchg
andb
mov
jg
fs
inc
push
cmp
inc
inc
push
cmp
cmp
xor
cmp
nop
xor
and
in
inc
sbb
insl
nop
inc
push
or
or
fs
push
xchg
push
rcrl
loopne
jno
popl
mov
xor
iret
clc
aam
sub
fstl
adc
push
xor
test
push
in
xchg
movsb
test
add
add
add
fbld
out
lea
inc
add
add
lar
xchg
sub
cmp
pop
sub
sub
cld
pop
sub
pop
cmpl
aam
adc
push
int3
dec
and
shrd
push
xor
addb
cmp
cmp
adc
mov
dec
add
cs
xor
sbb
dec
fiaddl
add
inc
adc
pushl
push
mov
pushl
push
loope
and
out
jo
push
and
push
push
add
inc
test
xor
mov
sbb
nop
jge
add
dec
and
inc
or
jmp
lea
test
insl
adc
jle
pop
jo
out
xchg
push
adc
les
sub
popf
add
daa
inc
or
sub
into
mov
push
push
pop
cmp
pop
add
push
or
nop
dec
or
push
jne
mov
inc
sbb
ja
sub
push
mov
or
in
push
add
mov
push
cmp
movsb
xor
sub
mov
rcl
xor
or
nop
xorl
or
push
lods
add
cmp
pop
cmp
mov
sub
movsb
aad
mov
loope
lcall
sub
or
dec
out
push
shlb
add
mov
icebp
mov
xchg
push
add
or
add
lods
xchg
adc
les
cmp
jge
loop
add
add
test
push
mov
into
lods
orb
notb
sbb
in
pop
or
adc
inc
data16
aaa
pop
adc
cmpsb
adc
jo
or
dec
and
stos
mov
in
cld
aas
fcoml
les
mov
inc
mov
adc
cltd
cltd
pop
sbb
sub
jbe
in
or
and
inc
sbb
insl
push
mov
adc
dec
js
inc
and
mov
push
mov
sub
cmp
das
dec
jg
mov
in
and
xor
cltd
inc
test
pop
stos
insb
add
ret
push
leave
xchg
mov
inc
adc
sti
add
mov
and
lods
mov
mov
mov
dec
jp
jp
mov
jne
pop
jmp
cld
or
sub
adc
mov
sub
outsb
testl
mov
mov
or
add
cs
pop
add
je
jne
cmp
jae
push
add
cld
adc
sti
jmp
mov
imul
xor
push
stos
and
aad
inc
ficomps
pop
js
add
or
mov
ljmp
ds
movsl
push
push
test
mov
sbb
mov
sub
sbb
movsl
adc
sbb
dec
mov
inc
inc
rcrl
jo
pop
cmpsl
add
sub
xchg
mov
add
lret
inc
nop
inc
and
and
mov
and
xor
or
out
rolb
fisttpll
fs
scas
jnp
addl
lea
stos
adc
cli
inc
or
and
popf
jb
xor
xor
mov
aad
add
adcl
push
and
xchg
inc
test
mov
and
push
pop
shrb
add
add
addl
jl
sub
sub
into
repz
add
xchg
out
adcb
js
xor
xor
out
orl
or
psubsw
xor
mov
arpl
rep
mov
add
or
or
and
std
xchg
push
add
adc
jne
lret
xor
xor
add
jae
and
enter
sbb
xchg
push
mov
mov
stc
add
sub
adc
jmp
rorb
test
jp
pop
adc
jae
loope
mov
xor
mov
scas
mov
xor
pop
mov
sbb
out
xor
cmc
and
jp
sbb
stos
or
scas
iret
ret
add
sbb
std
add
jnp
add
or
sub
add
imulb
xor
jne
push
push
ret
xchg
pop
pusha
and
mov
and
xchg
cli
xor
lods
dec
sbb
ja
vmread
xor
int3
or
cmp
lret
rclb
pop
ds
and
jge
pop
dec
in
adc
das
mov
jge
sbb
nop
sub
lret
sti
jl
push
inc
cmp
add
mov
rcll
test
lock
dec
push
mov
mov
stc
sbb
sahf
add
or
pusha
les
dec
testl
dec
inc
and
in
outsl
scas
mov
xchg
add
orl
or
test
xchg
in
cld
adc
pop
es
push
push
popf
jno
lahf
pop
orl
ja
enter
cmp
js
in
loopne
dec
push
jp
mov
nop
stos
pop
daa
pop
mov
jae
inc
subb
cmc
mov
push
and
shll
stos
mov
xor
in
leave
jg
xorl
aam
and
dec
out
cmc
push
xchg
jle
add
mov
ss
cmp
cmpl
addl
xchg
inc
in
sub
push
and
inc
sub
clc
or
and
out
fisubrs
xchg
or
mov
inc
test
icebp
das
or
mov
popl
test
jl
sbb
lahf
aas
test
cmove
adc
xor
sbb
adc
mov
pop
add
or
or
add
testb
prefetcht0
or
mov
cld
mov
ret
flds
or
sbb
xor
iret
xor
hlt
outsl
adc
push
push
aaa
mov
orl
push
ret
popa
loope
jae
roll
lock
hlt
pop
lock
pop
hlt
std
orl
fcoms
mov
out
fs
and
das
or
adc
xchg
or
insb
cli
adc
or
leave
jecxz
adc
xor
ret
pop
adc
add
add
push
mov
dec
or
pop
repnz
dec
loopne
add
sub
push
jae
aas
lods
les
add
jbe
xorb
fs
mov
cltd
arpl
mov
jne
or
and
negl
cwtl
push
push
mov
push
inc
addl
xchg
xchg
inc
insl
movsb
or
out
add
imull
push
adc
and
xchg
mov
xchg
cmp
sbb
pop
sub
in
jl,pn
push
leave
testb
dec
in
call
sbb
jnp
lret
jae
es
repz
adc
push
icebp
fs
test
adc
pop
dec
xchg
push
pop
std
das
sub
inc
push
jle
movsl
or
push
add
hlt
outsl
rcl
add
fdivrs
dec
aam
sub
cli
xchg
int
mov
add
xor
push
jmp
test
push
inc
mov
test
and
les
sub
fistl
sub
lret
js
subb
or
mov
popf
sbb
xor
pusha
in
shll
mov
xor
in
sub
mov
xchg
fcom
inc
add
adc
daa
nop
mov
fstps
xor
jg
and
inc
cmp
jle
push
loope
pop
push
movsb
loopne
push
rclb
in
mov
mov
mov
adc
push
jo
rolb
popa
inc
cmp
cmp
popa
push
xlat
sbb
out
push
pop
loopne
cltd
jmp
xchg
inc
inc
push
mov
inc
iret
dec
mov
or
mov
mov
sbb
jle
daa
cmp
inc
add
adc
push
addr16
mov
cwtl
int
in
push
loope
cmp
shlb
jmp
adc
shrb
xor
xor
test
pop
pop
jg
mov
and
dec
jg
pop
pop
arpl
mov
add
mov
aas
sarl
mov
adc
mov
mov
ret
pop
jmp
mov
ret
clc
jg
lods
sbb
xor
dec
push
je
dec
jne
fcoml
js
or
adc
adc
fiaddl
lahf
lea
mov
sub
lock
jmp
insb
or
fcomp
sbbb
push
jmp
cmp
pop
mov
mov
fdivs
lea
sbb
popf
pushf
xor
xor
dec
xorl
dec
mov
cmp
dec
jns
jp
jb
mov
aaa
mov
add
aas
jg
pusha
xchg
xchg
mov
add
mov
and
push
sub
jo
fs
jge
inc
sub
arpl
mov
push
jo
sbb
hlt
shl
imul
sbb
and
ja
push
cltd
push
sub
mov
sub
pop
or
sbb
incb
jb
inc
mov
call
dec
cmp
or
cs
pusha
pop
lcall
inc
xchg
cmpsb
mov
rcll
out
xor
pusha
sub
xchg
sub
es
xchg
js
adc
pop
in
cli
xor
les
and
push
jb
sub
in
pop
into
stc
push
add
jecxz
xor
or
jle
mov
adc
sub
adc
cmovs
sti
je
mov
inc
rcrb
iret
imul
inc
pop
lret
pop
addr16
fmul
or
mov
loop
loop
iret
mov
adc
add
adc
dec
and
sti
dec
sub
or
inc
pushf
add
cmpsb
imul
test
add
test
gs
pop
push
xor
leave
and
sub
js
popl
sbb
aam
or
dec
fs
and
in
jbe
fwait
and
and
sub
call
add
movb
mov
or
xchg
mov
sbb
movsb
popa
lcall
dec
fs
fisttpll
js
sti
jae
jmp
cmp
jae
add
mov
push
sbbb
loope
push
pop
or
andl
dec
jns
sbb
lret
mov
bound
into
fistps
orb
pop
cmp
js
sbb
dec
ss
mov
push
adc
mov
mov
jb
sbb
cmp
ds
and
adc
and
mov
pushf
sub
add
dec
jecxz
lock
dec
adc
mov
mov
mov
adc
and
pop
jge
and
lods
call
lahf
ret
loop
gs
or
fimull
jno
hlt
stos
ja
pop
gs
inc
dec
jmp
jmp
sub
ds
mov
adc
xor
divb
das
mov
cs
ret
shl
mov
inc
mov
fcompl
lret
int3
sbb
sbb
sub
mov
mov
add
shl
pop
lods
inc
push
int3
imull
test
ret
or
mov
outsl
repz
xor
and
dec
fwait
mov
xor
xor
add
jle
cli
rcl
rolb
fs
cmp
xchg
inc
push
add
mov
lock
push
xchg
add
adc
daa
cmp
push
inc
stc
testb
enter
orl
rolb
rorb
push
cwtl
gs
xor
pop
add
stos
inc
fiaddl
mov
fdivrl
js
jne
cltd
pandn
jge
push
add
pushf
jle
jecxz
lock
push
add
add
add
jmp
cmp
mov
mov
xorb
jae
lea
xor
cwtl
pop
mov
jl
xor
sbb
test
push
push
mov
hlt
decl
xchg
xchg
enter
mov
mov
mov
out
xchg
and
pop
sar
cmpsb
pop
rclb
loopne
mov
mov
iret
push
test
jle
push
je
jb
lcall
or
xor
adc
push
mov
pop
bound
lds
shll
push
lods
mov
mov
mov
sbb
sbb
shll
sub
ja,pn
in
xchg
lea
int
pop
mov
mov
adc
ljmp
test
out
mov
adc
into
fimuls
movsb
push
push
sbb
outsb
insb
cmpsl
adc
movsb
test
add
pusha
pop
and
adcl
cmp
nop
cmpsb
adc
in
test
sbb
in
mov
pop
or
add
xchg
and
cmp
bound
cmp
and
testb
sbbb
daa
or
push
clc
imul
inc
jb
fmuls
addb
adc
pusha
test
and
mov
lock
ret
cmp
sahf
int
movb
std
imul
or
dec
xor
cli
cld
sbb
mov
lea
sbb
push
outsl
sbb
aam
and
adc
or
fsubr
in
stc
int
pop
clc
push
push
sbb
jecxz
sbb
pop
dec
and
cmp
mov
mov
cmp
and
add
xor
mov
mov
inc
xchg
lea
fldt
sbbb
mov
mov
cmp
mov
dec
rcrb
inc
push
pop
and
mov
lea
push
mov
mov
cmp
int3
stc
jnp
insb
dec
mov
rclb
and
mov
sbb
adc
lock
lods
ljmp
sub
lea
mov
sub
inc
mov
sbb
nop
add
mov
cmp
jb
sub
jnp
add
mov
and
jb
inc
cwtl
mov
fs
sbb
mov
cli
inc
push
punpckhwd
ss
sbb
push
push
sbb
add
xor
daa
daa
jae
push
mov
xchg
fmuls
sbb
cmp
push
cmpb
or
or
aas
shlb
pop
popf
adc
sub
iret
or
xchg
ds
mov
jb
mov
push
inc
xchg
negb
lds
add
and
leave
mov
aaa
push
add
or
icebp
fisttps
or
lock
cltd
lret
cmp
or
mov
xchg
repnz
inc
mov
add
pop
or
movl
lock
fisttpl
insb
xor
cmp
inc
ret
push
imul
inc
in
jp
repnz
dec
xacquire
in
in
test
nop
outsl
aaa
mov
cmp
lret
pop
bound
and
ror
repnz
in
adc
pop
inc
mov
or
dec
adcb
dec
jecxz
fwait
pushf
pop
and
sbb
mov
mov
lcall
jl
sbb
xchg
mov
cmpl
stos
pop
adc
out
cmp
add
sbb
orl
pop
inc
and
aaa
inc
sbb
push
adcb
leave
and
xchg
stos
sbb
icebp
push
push
cmp
lods
andb
in
rcrb
push
jb
sbb
add
sbb
pop
mov
cmc
mov
xlat
and
outsb
fsubl
xchg
ja
clc
stos
xor
mov
mov
test
mov
aas
jne
mov
bound
jnp
pop
pop
add
add
add
movsb
cmp
lods
adc
mov
and
in
outsb
ror
pop
aam
push
push
or
jne
xchg
inc
add
cmp
add
or
push
ja
mov
movsl
cmpsl
movsl
call
pop
jge
bound
jmp
mov
jne
sbb
add
adc
add
jmp
xchg
int
sub
mov
pop
repnz
add
loopne
insb
je
out
push
clc
and
mov
mov
ficomps
lcall
or
jne
pop
test
mov
iret
leave
cmp
dec
push
inc
mov
and
push
sub
dec
test
test
outsb
jmp
xor
movsl
mov
in
jae
pop
js
lret
stos
push
enter
mov
data16
jl
xlat
push
inc
xchg
push
jb
sbb
inc
ss
xor
mov
mov
dec
pop
popf
jns
es
inc
push
fidivrs
cmp
fstpt
fisttpl
inc
mov
repnz
inc
add
sbb
adc
xor
and
xor
mov
inc
mov
inc
inc
xchg
pop
or
movsb
jb
sbb
or
and
mov
push
sub
and
push
js
xor
push
shrl
cmpsl
pop
mov
testb
fcomps
jns
in
loopne
call
push
shlb
adc
outsb
push
outsl
inc
loope
xchg
xchg
inc
sahf
mov
outsb
xchg
rclb
insl
enter
jns
mov
mov
and
jb
xchg
inc
aam
cmp
in
sbb
js
ret
xor
sbb
lahf
ja
pop
sbb
add
test
push
sbb
out
xchg
cmp
xor
and
lods
stc
into
testl
xchg
inc
push
mov
push
sbb
adc
pop
add
and
sub
into
dec
sbbb
pushf
sub
rol
icebp
and
fidivl
xor
dec
jnp
es
sbb
in
test
cs
push
and
jge
push
xchg
pop
fwait
loopne
sbb
cmp
push
adc
leave
add
jle
and
loopne
inc
sub
jns
sti
xor
sahf
push
pusha
push
xchg
lods
mov
aad
je
daa
daa
and
and
inc
cwtl
dec
enter
ret
sbb
xor
outsl
pop
jmp
sbb
stos
js
sub
push
mov
sub
inc
cmp
fs
inc
and
loopne
pop
and
dec
repz
adc
pop
sbb
add
sbb
dec
pop
or
push
xor
and
jno
push
dec
cmp
cmp
or
leave
mov
adc
les
les
aam
mov
lea
rcll
and
xchg
xchg
sub
outsl
pop
movsl
adc
sti
scas
cmp
pop
jae
sub
add
aas
in
xor
push
adc
shlb
xor
mov
mov
sub
push
nop
pop
nop
sub
xchg
neg
push
loopne
mov
dec
ror
dec
sbb
xor
js
sub
and
out
sub
mov
leave
mov
jo
xor
push
ret
stos
xor
jae
cs
add
mov
movsb
pop
ret
fcomps
adc
lock
pop
xor
jge
cmpl
fs
movsl
dec
cmp
xor
les
push
sub
sub
lea
ljmp
ret
xor
sub
aam
xor
sbb
push
dec
jp
mov
mov
or
lock
aam
out
xor
xchg
push
addl
pop
out
dec
sbb
leave
push
adc
and
mov
and
add
fnstcw
or
xor
pusha
or
push
stos
inc
sbb
cmp
pop
shlb
jb
sbb
inc
jmp
fs
push
aaa
lret
xchg
jnp
sbb
push
add
mov
xchg
pop
lahf
push
arpl
fstl
mov
out
fdivrs
xchg
push
mov
mov
jo
mov
mov
dec
popa
push
scas
sbbb
fwait
cmp
sbb
jns
fs
and
mov
in
inc
mov
in
xchg
or
and
sbb
or
daa
and
jb
mov
or
add
mov
rclb
fs
jl
add
jg
dec
out
push
rol
cmp
mov
mov
push
popa
inc
add
loopne
xchg
mov
xor
and
inc
xlat
xor
insb
enter
cmc
fwait
add
pop
enter
jge
or
mov
test
pusha
mov
and
mov
push
pop
addb
lods
cmpl
add
xchg
push
mov
jo
fists
sub
or
add
daa
jge
push
daa
lea
cmp
pushf
pop
cmp
lods
sbb
xor
jmp
sbb
push
daa
mov
inc
inc
jo
jne
or
jb
inc
sub
cmp
jae
sbb
jmp
adc
sub
xchg
inc
mov
inc
in
rol
mov
movsb
jae
xchg
dec
dec
mov
pop
cwtl
dec
mov
enter
push
adc
add
add
ss
mov
adcb
lahf
and
mov
inc
push
and
dec
push
sub
xchg
or
jmp
adc
inc
and
sbbl
in
xlat
lret
ret
sub
xlat
pushl
sbb
sub
push
push
stos
mov
adc
dec
mov
cs
jne
xor
or
sub
push
jbe
roll
cmp
test
jne
and
mov
jae
xchg
dec
roll
fs
add
and
push
add
sbb
aaa
pushl
call
in
sub
ds
mov
lret
fldcw
sbb
fst
sbb
rorb
aad
movsl
cs
sub
ret
add
test
add
stos
xor
adc
push
jmp
stos
and
in
in
mov
and
dec
repnz
es
or
daa
jo
das
pop
adc
pusha
sbb
sbb
cmp
or
out
sub
or
pop
stos
mov
ds
in
sbb
adc
call
dec
faddl
daa
push
add
rol
lret
ud0
cmp
push
pop
pushl
xchg
pushl
out
xchg
jnp
sbb
mov
inc
adc
dec
sbb
xor
add
in
test
dec
negl
cwtl
xchg
fs
sbb
sbb
loope
adc
xor
pop
loope
and
sbb
xor
mov
inc
xlat
sub
and
shr
rorl
addr16
mov
inc
xlat
add
xchg
outsb
xor
push
jns
lahf
sbb
loopne
sbb
mov
dec
lea
dec
call
xchg
sbb
sbb
insl
mov
subl
jb
jl
sbb
push
sbb
sub
pop
jns
movsb
mov
addl
push
xchg
cmp
pop
rclb
cmp
sub
movsb
test
mov
xchg
cwtl
movsl
jge
sub
imul
cmc
sub
and
je
pop
xor
mov
ja
push
lods
adc
dec
sti
cmp
in
pusha
jns
ljmp
rcll
shll
push
xor
sbb
mov
leave
gs
sti
mov
rcll
pop
pop
pop
xor
adc
or
xor
push
cmp
xor
xor
xor
mov
sub
mov
inc
add
in
add
xor
loopne
or
ss
xchg
xchg
jbe
pop
sub
aaa
lcall
std
cmp
inc
insl
loope
pop
call
sarl
sub
jo
mov
push
xor
pushf
adc
mov
mov
lock
push
sub
sub
cmpsb
and
mov
sbb
rorl
sbb
cmpl
mov
cmp
dec
imul
negl
in
lock
sbb
mov
fidivrl
jae
sub
dec
push
push
adc
rcll
push
js
xchg
add
repz
push
xor
push
mov
adc
and
arpl
pop
push
push
jmp
flds
lods
imul
push
imul
push
sbb
adc
rcl
push
jmp
xor
inc
inc
mov
and
pusha
imul
lea
xor
pop
shlb
xor
pop
jb
xor
mov
gs
xor
mov
leave
inc
ret
push
imul
pushaw
xor
das
xor
xor
inc
fiadds
push
dec
xor
mov
inc
test
xor
in
xor
les
andl
and
xor
mov
and
adc
push
movsb
sbbl
pop
inc
das
lret
add
mov
adc
in
or
dec
or
rcr
sub
test
push
mov
xorb
rcrl
subl
inc
test
inc
icebp
mov
daa
cmp
out
cmc
mov
mov
mov
daa
sbb
or
add
mov
or
hlt
xchg
add
jnp
cltd
in
lds
lods
push
lds
pop
lds
mov
or
das
popf
or
and
lods
ret
and
pop
sub
sbb
fmulp
jecxz
je
ffreep
lahf
aaa
jns
jle
add
das
aaa
ljmp
sti
inc
int
pop
or
cltd
sub
push
pop
sub
loopne
dec
adc
shll
mov
outsb
rorl
in
mov
mov
jmp
push
test
cld
rorl
leave
dec
subl
add
pop
dec
or
xor
and
xchg
std
icebp
pop
lea
adc
xor
aad
jg
bound
in
in
test
sbb
sub
or
data16
push
arpl
inc
int3
sbb
int3
xor
cltd
movsb
pop
mov
dec
test
stos
dec
xchg
add
lods
or
jb
enter
lods
xchg
sbb
jns
adc
gs
aam
repnz
and
pop
or
jle
dec
fs
jecxz
ss
push
jae
rolb
mov
or
in
adc
das
lcall
jmp
test
jl
cmp
cli
pop
push
add
fidivrs
sbb
pop
dec
fsubl
lea
sbb
movsb
xchg
push
push
xor
xor
mov
inc
sub
pop
add
pusha
pop
mov
pusha
rcrb
call
inc
mov
sbb
imul
or
dec
pop
inc
lock
adc
daa
and
pop
push
xchg
adc
push
inc
jg
jmp
adc
jmp
mov
flds
push
fmull
jl
ss
pusha
xor
ret
test
push
test
sub
pop
nop
push
or
and
insb
fisubs
push
dec
jo
lock
imul
es
sub
daa
jne
test
mov
add
mov
loope
je
and
adc
lods
dec
je
enter
mov
insb
fimuls
in
adc
pop
cmpsb
aaa
mov
pop
xchg
dec
stc
mov
mov
or
jl
out
sub
je
rolb
mov
xchg
xchg
sub
and
sbb
dec
add
fcmovnbe
iret
cli
jno
cwtl
mov
mov
scas
pop
push
push
jne
jns
lock
mov
xorb
aas
xor
or
adc
test
nop
stos
xor
cltd
rorb
jo
and
sarb
jmp
or
enter
jge
inc
pusha
sbb
sub
or
scas
repnz
je
rclb
add
aaa
or
and
mov
aad
pop
jo
or
shrb
fcmovnu
mov
mov
ljmp
movsb
loop
adc
adcl
mov
push
mov
xchg
mulb
fiaddl
add
and
jle
mov
xchg
mov
add
xor
sbb
jg
sbb
pushf
dec
inc
cmc
mov
dec
movb
push
push
in
push
sbb
dec
insb
loope
rcrl
sub
insb
jo
pop
arpl
sbb
fstps
mov
inc
add
insb
xchg
imul
inc
ret
sub
adc
push
mov
mov
add
test
fs
cltd
cmp
pop
test
mov
sub
xchg
in
jge
gs
and
insb
inc
cmp
push
lods
pusha
sub
cmpl
ret
mov
xor
add
insb
ret
popa
pop
add
movl
inc
adc
push
fst
jle
cwtl
xlat
mov
dec
insb
sub
push
sbb
xchg
jo
sahf
fildl
and
sub
cld
mov
inc
and
insb
dec
dec
and
sub
leave
dec
lea
cltd
movsl
pop
pop
add
and
mov
imul
imul
pop
mov
sbb
sub
lcall
or
in
xor
ret
jo
xchg
inc
push
sbb
cmpsb
roll
adc
pop
orb
aaa
or
stos
inc
push
mov
jo
les
shl
les
dec
pop
or
test
sti
or
cwtl
outsb
mov
cli
jns
mov
mov
xchg
pushl
in
push
mov
push
mov
out
mov
pop
add
movsl
cmp
loop
mov
push
add
mov
sbb
add
add
dec
das
dec
xchg
sub
xor
add
inc
dec
inc
xchg
or
test
xor
inc
lods
xchg
test
bound
and
outsb
and
outsl
pusha
or
push
mov
enter
push
inc
cmp
jl
dec
or
sub
in
dec
push
sub
ds
sahf
adc
test
sbb
imul
or
jne
adc
std
mov
cmp
je
cmp
je
cmp
je
cmp
je
sbb
mov
push
inc
cmp
int
pushf
sbb
cmp
cmp
adcb
jbe
dec
pop
inc
gs
pop
jns
cmp
xor
fstl
cmpsb
push
pop
loope
sbb
in
xor
xchg
mov
test
incl
out
rclb
pop
xchg
mov
ret
and
cwtl
test
add
pop
in
loopne
sbb
adc
int3
adc
add
xchg
and
pop
nop
pop
dec
jbe
sbb
push
inc
lock
sub
int
inc
arpl
and
imul
loopne
mov
mov
pushf
fmull
jb
int3
jge
data16
mov
jl
pop
nop
sub
and
or
jecxz
adc
test
mov
dec
sbb
xor
sbbb
add
push
hlt
incb
and
xchg
fiadds
sbbl
fdivrl
test
cld
arpl
ret
pop
shl
sbb
les
and
push
add
push
sbb
ret
nop
clc
and
inc
jo
pop
sub
and
jns
popa
xor
stos
add
inc
scas
loopne
jg
and
sbb
pop
es
mov
bound
push
daa
jbe
clc
mov
subb
jg
pushl
mov
xchg
fildll
inc
mov
mov
pop
xchg
addr16
rol
add
dec
mov
ret
jo
arpl
test
insl
xchg
jb
xor
dec
sub
xchg
xor
xor
sub
xchg
hlt
sub
incb
shlb
ret
add
pop
xchg
inc
test
cs
xor
inc
add
test
insb
lods
adc
xor
sbb
daa
cmp
sub
addr16
push
or
jmp
and
cmpl
test
mov
inc
xchg
or
inc
and
ljmp
push
inc
fsubs
mov
push
testl
push
ds
aam
dec
mov
pop
mov
sub
mov
dec
lds
stos
inc
ja
enter
andl
pop
xor
mov
jl
ljmp
jle
je
dec
and
adc
push
inc
or
jb
pop
xor
adc
movsl
adc
mov
mov
add
xor
ret
insb
mov
and
jbe
xor
mov
xchg
mov
xor
xchg
push
es
push
cmc
sub
rorl
cwtl
jns
and
mov
filds
or
mov
xor
adc
fs
insb
loopne
xchg
inc
dec
adc
mov
inc
xchg
mov
jne
or
fiaddl
and
cmp
lcall
xlat
nop
shlb
add
in
inc
pop
or
iret
popf
add
jg
mov
pop
mov
or
and
xchg
adc
push
pop
inc
leave
fildl
and
leave
pop
imul
adc
negb
leave
cmp
movsl
add
mov
pushf
aam
dec
mov
lcall
test
inc
pusha
xchg
and
mov
inc
pop
pop
lea
clc
mov
mov
sub
sub
test
push
mov
inc
xchg
sbb
sar
and
push
add
jo
sbb
adc
or
cmp
outsb
and
adc
pop
aad
cmpb
jne
push
inc
add
cmp
jne
pop
add
xlat
mov
jb
sarl
sub
add
int
call
mov
clc
or
xchg
xchg
ret
jo
add
sbb
stos
or
mov
stc
or
in
push
pop
movsb
mov
jle
cmp
jle
pushl
aam
pop
lea
mov
adc
lea
cmp
push
stos
pop
pushl
mov
sbb
cli
jmp
or
adc
mov
ret
dec
inc
movb
push
clts
or
les
fisttpl
adc
jecxz
les
inc
jbe
or
aad
adc
jno
and
iret
dec
pop
je
or
mov
mov
lcall
or
cmp
pusha
jb
adc
xchg
jge
jne
pop
ss
or
imul
inc
jnp
je
pushf
jecxz
orb
dec
push
test
out
inc
test
movsb
jecxz
andb
fisubrs
inc
cmp
xchg
mov
mov
imul
xchg
mov
mov
jg
sub
xor
inc
cmp
inc
cltd
imul
test
push
inc
daa
mov
in
cmpl
mov
dec
out
mov
xchg
push
lea
adc
add
xor
add
mov
int3
dec
ret
stos
add
std
les
mov
mov
sahf
mov
sub
inc
stos
cmc
lea
shl
mov
mov
cld
nop
es
add
daa
rclb
lahf
or
adc
jmp
cmp
fimuls
and
mov
xor
in
and
and
es
xor
and
xor
xchg
addb
xchg
call
es
fisubl
push
jmp
push
add
cmp
movsl
dec
and
leave
push
xchg
insl
push
adc
insl
pop
outsb
sbb
lods
pushf
xchg
cmp
shr
xchg
mov
xchg
push
jle
mov
dec
icebp
sub
xor
sbb
insb
es
dec
fdivs
inc
ljmp
ret
inc
push
or
dec
push
mov
xor
in
ss
inc
sahf
mov
pop
pop
or
adc
and
push
mov
cmp
push
or
aas
jecxz
sub
repnz
test
jb
xor
stos
arpl
or
rolb
xor
add
call
das
mov
pop
jl
lock
dec
dec
addr16
call
arpl
mov
inc
push
jns
iret
cmpb
enter
add
mulb
lods
cmp
push
mov
xchg
add
mov
cmpsb
push
test
lock
xchg
sub
push
mov
outsb
stos
and
jge
inc
add
pushf
sub
iret
or
shlb
outsb
adc
loopne
nop
xor
xchg
sbb
aaa
jl
adc
mov
arpl
push
xchg
gs
add
mov
test
orl
inc
sub
sahf
fmull
push
ret
cmp
push
mov
mov
push
dec
adc
mov
es
sbb
push
add
sbb
clc
ret
ja
pop
ret
push
test
test
test
dec
mov
lods
xor
cmp
sub
cld
push
fldt
push
or
push
loope
inc
sbbb
pushf
out
cmp
stos
xor
sub
adc
loop
pop
mov
jns
or
or
pop
mov
les
es
popa
mov
mov
mov
push
jnp
and
add
loopne
in
mov
loop
or
jns
add
out
lds
mov
orb
mov
dec
stos
je
adc
mov
sub
lods
outsb
inc
pop
les
daa
ret
mov
mov
mov
insl
adc
mov
adc
shl
mov
cmpl
lds
push
push
pop
clc
ret
jne
jmp
andb
adc
add
adc
push
push
sub
or
xor
leave
jecxz
or
inc
fwait
inc
and
add
push
sub
lods
sbb
mov
andb
pushf
dec
pop
iret
pop
sub
dec
aaa
mov
jne
enter
mov
mov
pop
xor
mov
das
mov
mov
push
rcrl
push
push
sahf
inc
inc
cmp
nop
rclb
nop/reserved
inc
ret
je
loop
pop
insb
shrb
adc
inc
pop
outsl
add
jge
int3
inc
inc
sub
adc
sahf
inc
jbe
out
adc
sbb
push
cmp
insb
sbb
jmp
pop
cmp
add
rcrl
call
inc
pop
je
mov
add
jb
repz
sbb
imul
push
icebp
mov
xchg
test
inc
add
inc
sqrtps
sub
in
aad
lock
and
pop
mov
ret
es
stos
shll
xchg
mov
and
adc
shlb
adc
cmpsb
and
jp
push
int3
cs
fcompl
rorb
inc
or
mov
xchg
dec
andl
clc
test
jl
push
adc
and
in
mov
mov
cmp
ret
cmp
mov
cltd
or
and
xchg
mov
cli
ja
pop
sti
in
sub
or
fcmovnb
xchg
jp
push
dec
scas
mov
mov
and
add
and
sub
nop
add
xor
call
sub
or
add
imulb
adc
jne
cld
inc
pop
inc
sbb
imul
and
dec
sub
push
cld
fdivs
sbb
sub
sbb
and
stc
sbb
movsl
mov
inc
sbb
add
in
pop
mov
xchg
sbb
andl
mov
push
rolb
push
dec
ja
ret
dec
jmp
mov
pop
add
jno
xor
aaa
je
insb
add
push
dec
arpl
add
dec
das
adc
xor
add
pop
pop
cmp
adc
xor
test
jns
test
rcrl
mov
dec
aaa
mov
fidivrs
cmp
sahf
dec
out
sbb
ror
mov
inc
pop
shlb
adc
cmp
and
jmp
push
dec
pop
inc
sub
cmp
sti
ja
sub
sub
xor
cmp
repnz
mov
dec
adc
mov
loope
scas
or
pop
mov
pop
push
lea
dec
jle
pop
test
add
adc
add
push
xchg
cmp
outsl
inc
and
pop
cmp
shll
dec
or
push
imul
popf
insl
push
loopne
cmp
jne
fistl
pop
xor
push
movb
cmp
and
xchg
pop
daa
adc
mov
cltd
sub
xchg
jmp
push
adc
push
xor
push
cmpl
sti
leave
ljmp
pop
pop
pusha
pop
loope
push
mov
push
scas
lods
jno
mov
mov
cmp
jmp
add
aas
loop
call
cwtl
and
sbb
loopne
rorl
test
cmp
pop
andb
xlat
cmpb
aaa
jne
sub
or
stc
xor
loopne
into
push
xchg
out
mov
add
adc
sub
xchg
cmp
in
cmp
or
mov
pop
jle
jp
xor
lea
cmpb
inc
bound
sbb
jmp
mov
call
add
gs
add
clc
sub
cmp
pop
jl
pop
je
adc
daa
and
clc
add
inc
lods
in
dec
sub
dec
inc
inc
fdivl
mov
ficoml
cmp
aaa
mov
mov
jae
jecxz
jecxz
fdivrl
call
test
cmp
test
ret
movsl
xor
fwait
dec
xchg
lea
insb
dec
loope
mov
insl
jne
cmp
or
out
inc
jae
push
loopw
rsm
mov
push
sti
or
outsb
push
dec
pop
cmp
pshufw
std
movsl
mov
test
hlt
out
movsl
add
mov
dec
pop
subl
enter
mov
and
or
jmp
dec
adc
xchg
mov
mov
popf
sbb
xchg
and
mov
ds
add
leave
sub
in
and
cwtl
cmp
mov
scas
je
mov
test
les
or
pop
pop
and
orl
pop
ret
and
push
rorl
or
and
rolb
je
nop
xor
and
jmp
stos
jne
push
cmp
jne
xor
inc
lret
out
les
mov
sahf
lret
jp
or
or
or
and
adc
pop
adc
push
daa
adc
js
xchg
gs
addl
and
add
or
loope
pop
icebp
jno
cmpl
jne
push
xchg
scas
and
ja
test
adc
pusha
cld
mov
mov
shl
lea
aam
push
sub
push
or
cmc
sub
ja
enter
sahf
add
dec
cmp
jmp
dec
inc
cmp
rorb
mov
fs
and
xchg
lss
mov
dec
or
xor
sub
inc
sbb
sub
jl
lods
push
or
jno
mov
dec
ret
cmc
test
or
es
or
add
js
mov
mov
adc
andl
mov
in
les
push
dec
xor
or
fsubs
test
sbb
into
flds
fsubrs
scas
loopne
orb
sbb
fisubrl
sbb
clc
adc
js
dec
mulb
lods
adc
rcl
sub
cmp
or
or
cmpsb
outsb
cmp
out
adc
adc
add
push
add
push
or
aaa
mov
cmp
mov
popa
and
sub
clc
dec
ret
pop
cmp
dec
dec
cltd
xchg
mov
push
addl
in
mov
adc
push
daa
mov
out
mov
jmp
mov
add
mov
insl
je
mov
std
cwtl
cmp
cltd
or
mov
lea
iret
repnz
push
or
sub
and
or
push
inc
and
mov
push
add
push
mov
push
or
xor
data16
pop
xor
jb
pop
lcall
xor
lea
es
mov
or
sub
insl
cmpsb
sahf
xor
cltd
jmp
push
xchg
sahf
jno
and
push
cmc
adc
xor
dec
sub
in
mov
or
nop/reserved
push
into
jne
jo
push
push
dec
cmp
mov
add
int3
push
or
xor
aas
hlt
loop
jnp
in
fdivs
xchg
sbb
jne
cmp
sti
mov
dec
mov
cmp
fists
lcall
inc
and
nop
adc
fadd
add
fisubl
jo
lock
inc
add
inc
dec
mov
fstpt
push
mov
mov
cmpsb
mov
enter
pop
push
mov
and
push
pop
mov
lods
and
clc
cmp
push
cmpl
cmpsb
adc
enter
movsl
lock
ss
mov
sbbb
mov
clc
mov
jb
dec
pusha
mov
jp
lcall
push
add
aas
ja
popa
mov
adc
xor
inc
cld
push
add
dec
adc
daa
mov
jp
or
sar
mov
sub
mov
adcl
imul
inc
jb
and
jb
and
push
jecxz
es
mov
jo
sub
lock
mov
andb
mov
movsl
mov
pop
or
xchg
add
jmp
push
adc
mov
test
out
lods
leave
out
mov
in
pusha
pop
rcll
pop
cmp
je
jmp
mov
popa
outsb
sti
or
test
add
jle
mov
and
mov
aam
sub
dec
ret
sbb
sbb
inc
cmp
cmp
out
push
inc
inc
cmp
loop
mov
sub
xchg
int3
mov
pop
insl
add
loopne
repnz
and
xchg
scas
pop
or
or
inc
loop
mov
xchg
cs
in
call
daa
call
and
push
add
mov
cmp
fiaddl
cltd
inc
aam
stos
push
or
int
das
sub
das
add
add
out
mov
pop
in
xchg
aam
js
lock
sub
sbb
push
aad
mov
aam
mov
xchg
shll
out
int3
adc
mov
xor
outsl
nop
arpl
add
push
push
icebp
jge
fstps
push
loopne
push
mov
mov
mov
sbb
inc
daa
sbb
adc
lret
inc
mov
jl
subl
je
or
sbb
sbb
add
xor
push
outsl
sub
dec
push
sub
fdivrl
call
xor
call
sbbb
mov
subl
addl
rorb
jl
icebp
and
loop
inc
or
adcl
jg
cmp
dec
decl
sub
add
adc
or
mov
dec
add
inc
or
push
into
cmp
mov
cwtl
xchg
cmpsb
pushf
out
stos
mov
cwtl
adc
xchg
jmp
ret
ljmp
aam
sbb
dec
and
adc
aad
pop
push
imul
push
push
adc
mov
cmpb
inc
rcll
ja
push
adc
xchg
cmpl
roll
sub
int3
fisttpll
or
push
rorl
add
inc
dec
shr
es
or
ljmp
std
je
cmp
add
das
cmp
imulb
xor
add
bound
sub
pop
sub
mull
jl
mov
inc
test
add
lea
movb
pop
fsubr
gs
and
cmp
xchg
out
push
idivb
inc
pop
mov
rcll
fdivrs
cmpsb
sub
jo
inc
and
inc
push
xor
jno
std
ljmp
xchg
jmp
or
dec
rcll
cmp
inc
test
cmp
cmp
or
ficompl
pop
mul
xor
test
xor
roll
and
rcll
lods
mov
jle
popa
jecxz
cmp
xchg
fsubrs
mov
and
push
pop
inc
push
add
outsb
and
cmpsl
jns
jmp
adc
sbb
mov
adc
jo
rcr
sub
push
push
cmp
or
mov
xchg
movsb
mov
jbe
scas
fadd
and
addl
push
adc
adc
pop
pop
rorb
dec
shll
loopne
push
xor
push
ret
adcb
xchg
cmp
rorl
or
lahf
ret
inc
enter
adc
cmc
jo
push
sbb
adc
sbb
jnp
adc
je
outsb
mov
add
xor
cmpsb
adc
push
outsl
inc
out
shr
adc
and
push
push
lea
lea
pop
xchg
loopne
js
cltd
shrb
cltd
pop
inc
adc
orb
lds
or
cmp
sub
movsb
movsb
test
bnd
mov
xor
sbb
xchg
lock
shlb
jnp
jne
lock
lods
pop
in
mov
mov
mov
mov
mov
cli
cmp
jb
push
or
ret
or
pusha
or
mov
inc
loop
insb
mov
push
mov
inc
jle
sbb
lahf
out
inc
push
mov
push
les
adc
cmp
jg
mov
in
ja
sub
sbb
dec
xchg
add
and
pusha
cmp
popf
popa
xadd
or
nop
xchg
mov
jmp
mov
test
or
scas
cltd
push
shr
int3
mov
into
or
xchg
push
mov
in
mov
das
imul
cs
inc
testb
in
icebp
aad
orl
arpl
stos
push
in
out
add
push
add
inc
rcrl
jbe
push
push
dec
stos
pop
add
insb
pop
add
fwait
lock
push
xor
adc
xchg
inc
xchg
jge
or
sub
mov
mov
aam
and
push
and
fld
mov
push
pusha
push
push
ds
push
mov
push
xor
cltd
movsl
mov
pop
cmp
movsb
xchg
push
sub
jbe
insl
xor
movzbl
add
jmp
aam
add
xchg
pop
popf
jmp
add
fucomp
xor
popf
das
pop
mov
bound
sbbl
jg
andb
outsb
sub
mov
or
pop
data16
mov
inc
rcll
adc
movb
not
xchg
or
je
inc
das
scas
sbb
or
jae
add
push
jae
repz
sahf
arpl
push
mov
lret
push
je
inc
or
push
or
mov
jne
or
cmp
push
push
jle
cvttps2pi
rcrb
cmp
outsb
add
mov
fmull
mov
js
push
pop
mov
cmp
or
or
and
push
or
fisubrs
movsl
cmp
pop
dec
xchg
sub
out
cmp
rorl
and
fadd
add
add
xchg
jmp
push
iret
jp
ret
popf
add
or
xchg
rorl
jmp
xor
or
jl
shrb
or
add
push
cld
outsb
fucom
nop
mov
pop
and
sbb
sub
add
push
sub
add
xor
xor
and
fstpl
jnp
xor
rclb
pop
sbb
inc
push
mov
stc
pop
and
mov
dec
loopne
adc
or
divb
or
mov
mov
outsb
nop
sbb
sbb
jl
rolb
rorl
cmpb
or
mov
add
leave
data16
aam
rolb
nop
dec
insl
das
pop
sbb
or
sub
mov
mov
nop
or
inc
and
sbb
push
pusha
shll
je
xchg
testb
fsubr
xchg
cmp
aas
mov
cmp
sti
or
ret
popf
dec
cmpsl
inc
int3
test
inc
mov
pop
shlb
scas
sub
lret
mov
inc
and
pop
mov
popl
sahf
xchg
int
adc
and
or
pushf
push
xor
pusha
pushl
cmp
sub
inc
jl
add
and
js
jo
add
and
and
xor
dec
jae
add
add
das
pop
ret
add
inc
and
xchg
adc
xor
adc
add
adc
push
clc
adc
and
adc
and
cmp
jne
inc
push
pop
push
pop
push
xor
ds
in
outsl
shrl
pcmpeqw
mov
inc
adc
mov
es
fmul
mov
mov
pop
xor
or
dec
adc
fildll
jmp
int3
scas
mov
cmp
sbb
roll
movsl
jne
sbb
xor
inc
xchg
lret
or
sub
ja
xor
add
jne
add
mov
jb
mov
mov
dec
mov
push
lock
int
dec
pop
add
lea
inc
mov
mov
dec
inc
jne
pop
hlt
faddl
incb
rolb
insb
sbb
or
mov
inc
or
cld
das
mov
ljmp
add
inc
fimull
ja
jl
addl
xor
mov
add
int
jo
mov
adc
adc
notb
add
cmpsl
jg
cld
in
scas
fcomps
fdivrs
jb
fnstcw
adc
adc
adc
pop
mov
cmp
in
addl
cltd
in
add
iret
cmp
pushf
orb
pop
cmp
clc
push
mov
inc
gs
fcmovnbe
xchg
out
fnop
lods
je
dec
add
mov
xlat
adc
ret
mov
stc
lock
push
stc
pop
sub
icebp
jne
xor
stc
mov
xorl
fwait
neg
push
xchg
inc
lahf
sub
sbbl
sub
sub
xchg
xchg
add
push
pop
test
insl
pop
cmp
xchg
mov
daa
ret
adc
shrb
mov
mov
jns
pusha
fadds
test
sub
loopne
mov
or
jg
loop
loop
mov
sbb
adc
cwtl
dec
cmpl
cli
or
cmovo
push
pop
sub
dec
or
ss
pop
aas
inc
or
pop
jno
jne
js
push
es
lahf
and
rolb
push
jae
pop
or
dec
movsb
add
adc
push
dec
cmp
cmc
sub
jmp
add
sbb
incb
mov
xchg
inc
imul
cmpsb
push
popa
mov
xchg
push
add
sub
rolb
xor
pop
mov
add
ds
adc
loop
rorb
fcoml
pop
cmp
out
cmp
notl
add
sbb
adc
sbb
lods
outsl
mov
push
gs
je
pop
push
sbb
fs
pusha
insb
xchg
xchg
inc
inc
insb
push
or
movsb
add
sub
jecxz
adc
movb
pop
testl
je
cmp
je
testb
pop
add
mov
roll
mov
and
inc
pop
fsub
iret
je
xor
mov
sub
push
sub
or
sub
inc
pop
xchg
jmp
lea
inc
fmul
dec
add
sbb
int
or
dec
lock
add
lock
lock
cmpsl
out
xor
jmp
movsl
push
push
pushf
out
into
ficoml
pusha
in
adc
sbb
cmp
push
dec
ss
movsb
push
fcompl
mov
jg
mov
add
push
mov
clc
cmpsb
mov
or
ret
pop
push
sub
mov
imul
es
hlt
leave
inc
scas
shlb
jl
aam
mov
xorl
adc
push
inc
sub
add
movsl
mov
fidivs
and
inc
adc
orl
test
je
test
ljmp
cmp
jbe
stos
add
jle
in
add
push
lds
repnz
jns
or
lods
adc
push
outsb
icebp
push
jge
jne
lret
pop
pop
xchg
or
mov
inc
lcall
xchg
xor
mov
stos
popa
addr16
push
aas
jne
ja
mov
and
fsubs
scas
lods
clc
or
or
int
fistl
fidivrs
mov
lods
sub
push
test
sub
js
clc
mov
fwait
sbb
jae
cmpl
pusha
xchg
push
push
fmulp
pop
and
dec
push
lea
rcrb
push
adc
mov
ret
aam
dec
pop
pop
cmp
push
lret
push
or
lods
or
sbb
lods
add
adc
dec
fisubl
xchg
test
sub
jo
mov
jno
out
inc
add
je
add
in
mov
cmp
out
push
push
loopne
dec
push
inc
aam
lds
arpl
and
push
sbb
sti
dec
sbb
push
push
shlb
aaa
test
fmul
inc
loop
idiv
mov
mov
xor
pop
cmp
je
mov
pop
mov
jp
add
jo
and
inc
dec
lods
sbb
pop
loopne
or
mov
aaa
and
mov
mov
mov
xor
jge
mov
jg
adc
test
insl
cmpb
dec
or
lock
pushf
pusha
pop
sbb
and
push
scas
loope
or
push
mov
adc
addl
mov
sbb
push
mov
lods
push
sbb
mov
cmp
mov
jo
push
pop
into
jecxz
dec
enter
jecxz
xor
in
cmp
inc
and
ja
sbb
lret
push
clc
mov
inc
verr
xchg
xchg
xor
cmp
cmp
and
dec
dec
push
or
test
push
cmp
movsb
fsubr
mov
mov
cmpl
xor
int3
pop
aam
jecxz
push
clc
add
lods
mov
jo
outsb
xchg
sub
mov
jo
lret
sbb
push
test
mov
pop
pop
into
test
mov
xchg
mov
test
add
add
xlat
aam
sbb
push
sbb
popa
adc
out
jo
ds
mov
dec
mov
sahf
cmp
push
xchg
popa
cwtl
add
xor
or
and
cmp
jmp
inc
cmp
mov
mov
js
aaa
sar
nop
cmp
and
test
mov
sbb
jne
inc
lcall
dec
cs
dec
jae
push
push
push
je
add
imul
out
mov
dec
mov
adc
push
pop
lea
push
adc
repz
inc
cmp
scas
mov
xchg
cs
push
push
pop
sbb
mov
push
mov
mov
inc
dec
or
adc
stos
xchg
inc
ret
mov
repz
xchg
jae
inc
sub
imul
and
push
icebp
add
cmp
cmp
imul
std
and
cli
push
sbb
jge
orb
loop
add
xchg
imul
xchg
push
push
dec
add
out
jp
push
push
sbb
xor
or
sub
cmp
xorb
pop
adc
pop
xchg
in
push
pop
sub
loope
jmp
dec
cmp
int
rcll
xor
or
call
dec
push
xchg
ja
mov
xor
mov
mov
dec
stos
mov
inc
mov
push
loopne
push
gs
shr
and
or
mov
call
shrb
add
lods
and
jne
popa
inc
xorb
test
icebp
xor
aas
sbb
cmp
or
jo
push
push
push
or
mov
dec
xchg
fimuls
add
push
or
add
mov
sub
lret
int
int3
ficomps
out
and
fbld
push
sub
sub
add
mov
ficompl
rclb
xor
or
pop
xor
mov
xchg
add
addl
cmp
inc
xchg
mov
and
xor
and
jp
xor
or
xor
imul
inc
inc
sub
push
inc
lcall
xor
lock
xchg
dec
jp
andl
inc
xor
inc
jne
xor
shrb
lock
inc
jo
ficoml
add
sub
dec
jmp
gs
std
insb
sbb
pop
xchg
cwtl
loop
lea
test
out
pusha
lahf
loopne
ss
push
inc
das
add
test
rcr
push
cmpsb
xor
outsb
mov
jo
sbb
pop
pop
pop
pop
jge
xchg
jns
xor
sub
jb
mov
mov
jl
lods
enter
pop
adc
icebp
dec
pop
sbb
and
or
cltd
add
lock
bound
push
lret
mov
cmp
lds
cmp
push
icebp
dec
cwtl
sbb
adc
sub
mov
lahf
add
adc
ljmp
in
enter
test
ret
inc
mov
push
or
push
cli
fdivrl
push
ds
pushf
push
mov
cltd
bnd
dec
cmp
sbb
mov
jl
or
mov
push
je
adc
push
in
mov
xor
jmp
add
movl
fdiv
jno
inc
adc
push
inc
push
inc
repnz
inc
push
add
xchg
sbb
fdivs
add
jmp
addl
pop
pop
xchg
pop
dec
push
fbstp
mul
or
pop
mov
or
cmp
xorl
lea
xor
jp
stc
pop
or
mov
cmp
cmp
cmp
cmc
mov
imul
ret
fcmovb
pop
testb
or
mov
dec
jl
xchg
jl
mov
add
dec
loope
xor
out
sbb
or
mov
or
data16
push
sbb
cmp
sub
inc
std
sbbl
push
mov
ja
fisubl
scas
push
mov
jl
xor
sbb
pusha
repnz
addl
xor
add
and
jbe
out
push
push
xor
dec
addr16
lahf
aaa
add
mov
and
pop
outsl
insb
push
sbb
jmp
sbb
mov
mov
test
insl
pop
xor
dec
or
mov
jne
jbe
stos
pop
rol
filds
mov
cmpb
lods
cmp
jne
out
dec
stos
pop
mov
outsb
and
test
jno
loop
xor
cmp
push
cld
push
and
and
and
ret
cmpl
sarb
or
add
inc
mov
sub
cwtl
into
lods
ret
insl
fcoms
shlb
pushf
xchg
inc
xlat
adc
out
or
aad
test
shr
add
mov
adc
jl
jo
mov
inc
push
ret
mov
sub
or
sbb
shl
mov
push
pop
andb
adc
mov
ret
jmp
bnd
insl
dec
int3
popf
aad
fwait
jae
in
adc
mov
push
push
lea
das
sbb
rolb
cltd
negl
cwtl
inc
push
jmp
push
insl
data16
loop
je
mov
cmpsb
xchg
cmp
push
add
xchg
mov
test
pop
add
shlb
jb
or
imull
mov
pop
xor
add
push
rorl
and
push
jecxz
cwtl
push
in
in
cmp
xor
out
and
inc
leave
aaa
inc
lods
push
addl
cmp
imul
pop
sbb
movsb
cmp
je
mov
xor
push
add
aas
imul
daa
add
jno
cmpsl
or
push
lods
xchg
sbb
jmp
add
pop
ss
aad
out
add
xor
lea
push
push
sti
ret
nop
mov
adc
cmp
or
mov
aam
scas
sub
incl
push
es
mov
push
mov
les
inc
jo
pushf
ljmp
inc
je
cld
dec
cmpsl
mov
fcompl
xor
cmp
pop
and
and
je
rcll
shll
mov
testb
mov
or
jae
lret
push
out
lret
add
add
mov
sub
lahf
ljmp
in
cmp
dec
sub
andl
lcall
in
rcrl
dec
insb
add
push
adc
add
loope
loopne
xor
add
adc
adc
sbb
imul
add
nop
inc
jae
notl
add
and
pop
out
loope
and
int3
and
dec
repz
flds
rclb
mov
dec
rcr
push
jmp
pop
and
aas
or
cmc
imul
jnp
jae
fmuls
outsl
inc
cli
push
cld
inc
movb
adc
in
jge
movl
inc
out
insb
shr
inc
add
loopne
fs
movlhps
dec
adc
and
data16
adc
pusha
adc
dec
iret
jo
dec
popf
sbb
stos
pusha
insb
std
fcmovb
mov
mov
aam
adc
fdivrs
cmp
out
es
inc
mov
pop
fiaddl
ss
add
clc
push
js
in
clc
std
les
and
je
jne
aaa
mov
lock
push
pop
adc
inc
hlt
lret
fsubl
mov
push
jns
mov
add
jmp
cmp
mul
je
pop
and
cmp
dec
push
mov
imul
inc
in
dec
push
rolb
push
push
sbb
mov
inc
mov
not
and
fcmovnb
pop
xor
add
loope
femms
lcall
fucomi
mov
cmp
pop
jmp
sbb
add
movsl
add
insb
insb
sbb
jo
mov
adc
sub
pushl
mov
xor
testb
movb
sbb
push
cmp
push
je
mov
pop
dec
sub
push
or
xorb
adc
add
clc
add
push
push
dec
push
sbb
test
mov
mov
imul
test
sub
xor
cvtpi2ps
sbb
add
dec
sub
or
pop
insb
ljmp
jmp
sub
pop
or
xchg
jns
mov
add
xor
fisubl
xor
mov
repz
hlt
addr16
je
add
loope
adc
lcall
cmp
adc
or
adc
cmpb
lcall
adc
mov
dec
cli
mov
mov
dec
jno
adc
xchg
inc
mov
popf
push
adc
pop
and
cmp
jl
loope
out
sub
lea
mov
loopne
push
push
popa
mov
push
shll
loope
or
push
adc
stos
ret
pusha
inc
jae
insb
mov
movsl
loopne
cmp
cmp
mov
fisubs
and
push
push
cmp
ljmp
idivl
pusha
sbb
mov
int3
sub
pop
push
pop
jns
dec
loop
mov
js
in
loopne
pop
testl
push
je
dec
inc
sbb
mov
and
and
adc
jl
inc
mov
sub
xor
es
dec
or
mov
movsl
movsb
push
xchg
mov
cmp
sbb
gs
jmp
or
es
cmp
xchg
ficompl
into
jl
add
inc
add
mov
cltd
add
les
xchg
rcrb
icebp
lock
dec
testl
popa
cwtl
nop
jle
sbb
cmp
mov
push
pop
test
xor
xlat
loope
dec
lret
adc
and
and
insb
dec
add
imul
or
or
jg
or
jae
push
push
fcompl
or
es
jl
movl
pop
pop
push
push
cld
cltd
or
rorl
enter
mov
imul
push
in
dec
pop
inc
xlat
cwtl
arpl
dec
lods
push
push
gs
inc
push
and
es
mov
mov
jae
test
add
inc
test
pop
mov
push
rolb
add
scas
fildl
mov
mov
mov
jnp
pop
dec
pop
lods
push
add
mov
add
mov
sbb
jnp
and
sub
das
xchg
adc
aaa
adc
dec
les
add
mov
adc
mov
sti
sub
xor
add
mov
test
xchg
cmp
bound
inc
pop
sub
fs
or
fstpt
cmp
sub
sub
push
push
stos
pop
mov
ds
imul
xchg
jbe
lret
mov
pop
inc
push
push
divb
pop
mov
jp
sbbl
push
push
dec
les
add
je
cmp
orl
shl
xor
and
xor
ret
imulb
cmp
addb
pop
stos
test
pop
push
imul
push
and
mov
fisttps
sahf
pop
andl
daa
jmp
inc
ret
loope
mov
mov
ja
je
or
je
or
sub
xchg
out
jbe
adc
adc
inc
lock
xchg
push
or
ret
cmpl
mov
movsb
js
sbb
jl
jne
lcall
sub
sti
sarb
sbb
adc
adc
push
xor
inc
push
flds
sub
xchg
lds
imul
mov
jbe
call
hlt
cmp
mov
loope
pop
cmp
mov
inc
in
cmpb
test
cmp
mov
adc
je
shlb
call
fs
xorl
and
xchg
nop
cltd
jl
rclb
loope
test
movsl
and
add
adc
mov
out
cmp
xor
pop
xor
xor
fwait
test
dec
je
sub
je
sub
add
push
dec
xor
add
adc
in
sub
or
or
lds
or
push
adc
inc
xchg
clc
dec
inc
stos
or
add
adc
lcall
pop
dec
dec
push
test
jmp
les
cmp
lea
clc
cmpsl
dec
sbb
add
int3
sub
push
daa
fiadds
or
stos
or
nop
push
dec
cmpsb
pcmpeqd
pop
sbb
sbb
push
add
sub
pop
das
jge
xor
adc
fdivrl
notl
popa
add
mov
divb
mov
in
and
push
and
mov
inc
push
inc
push
push
push
movsl
sbb
push
shlb
call
int3
mov
loopne
in
push
xor
loopne
popf
push
inc
cmp
fsub
aam
and
repnz
xor
cmp
ret
arpl
in
and
jo
test
add
cmp
pop
dec
sub
cmp
movb
in
roll
mul
mov
xchg
std
fdivrl
xchg
mov
jmp
push
sbb
inc
addb
or
fwait
out
les
jp
adc
pop
ret
leave
nop
inc
es
fmul
xchg
mov
sbb
hlt
mov
ds
cmp
push
xor
ret
rorb
rol
push
xchg
cs
push
cs
pop
fdivrs
repz
sbb
repz
lcall
adc
icebp
mov
out
jns
and
inc
and
add
lcall
jge
loopne
aam
movsl
shl
jmp
xchg
hlt
cmp
cltd
cmp
aam
fs
aam
test
mov
ret
loopne
movsl
or
xor
imul
test
fidivrs
inc
or
add
pop
dec
dec
push
ret
fs
mov
jl
and
xchg
cmpsb
imul
je
and
clc
inc
mov
cwtl
sbb
or
cmp
into
jno
sbb
dec
sub
mov
cwtl
push
adc
mov
jl
pop
sub
or
hlt
fstpt
sbb
dec
repnz
mov
xchg
ret
push
cli
jb
fisubl
aam
loop
mov
sbb
sbb
xor
inc
lods
dec
xchg
sub
and
std
or
push
adc
sub
insl
cmc
mov
ret
xor
imul
jmp
jle
adcb
xchg
mov
leave
shll
nop
xabort
push
mov
push
inc
hlt
enter
push
inc
push
lret
push
pop
stos
test
icebp
adc
pop
mov
lea
push
mov
push
hlt
add
push
mov
daa
icebp
xlat
or
push
xor
inc
enter
pop
mov
push
jne
add
or
insl
push
inc
xchg
popf
int
dec
in
sub
push
cltd
push
and
call
sbb
or
cwtl
mov
nop
bound
xlat
fcoms
fwait
cmp
daa
subb
inc
jb
sbb
shlb
and
sbb
in
xor
iret
stc
pop
mov
movl
add
or
sti
jns
cwtl
mov
add
adc
lahf
test
sti
add
test
clc
cmp
call
movsb
scas
xor
rcrl
or
push
mov
mov
cmp
loope
inc
stos
push
cmp
loopne
pusha
popf
subb
add
pop
arpl
push
aas
xor
outsb
and
cld
jne
push
dec
in
daa
and
mov
push
call
pop
push
iret
dec
pop
incl
xchg
invd
dec
cltd
movsl
decl
dec
daa
xor
push
lret
enter
nop
push
out
aaa
or
push
sub
inc
std
cmp
mov
jne
dec
sub
xadd
hlt
add
pop
ficomps
cwtl
inc
dec
inc
push
outsl
or
into
dec
or
sbb
or
neg
add
icebp
sbb
mov
push
and
push
push
add
xchg
cld
mov
inc
ja
cmp
cmpsl
movsl
pop
xor
jl
je
or
iret
fsubr
push
cmp
jg
dec
push
rclb
push
sbb
or
push
pop
mov
in
mov
sbb
jmp
in
fadds
call
mov
das
in
or
inc
push
adcb
or
nop/reserved
add
jg
sbb
jo
cmp
xchg
add
dec
push
ljmp
pop
jg
sti
je
push
cmp
push
sub
push
mov
adc
je
push
sbb
adc
and
lock
sbb
sbb
lods
movsb
dec
sbb
inc
adc
in
bound
mov
push
and
sub
xor
inc
sub
sbb
test
movsb
insb
or
push
push
xor
xor
pop
sbb
mov
jns
dec
mov
lret
sarb
sbb
sbb
add
push
sbb
jns
mov
nop
add
mov
sub
inc
sbb
mov
cwtl
and
test
cmp
addb
pop
adc
pop
mov
mov
jnp
mov
outsb
xchg
mov
dec
shr
out
add
xor
mov
mov
xchg
je
and
dec
adc
xchg
or
test
pop
xor
sub
inc
jne
mov
sahf
rclb
adcb
xchg
dec
mov
ss
xor
sbb
adc
jno
movsb
mov
icebp
mov
add
xchg
jge
pop
loopne
xchg
adc
add
and
adc
mov
sbb
inc
loopne
add
cmp
or
out
pop
enter
fidivs
sbb
shll
in
aaa
stos
sbb
fadds
jge
stos
jns
mov
je
shr
sub
dec
jo
xchg
js
cmp
incl
call
cmp
push
jmp
xlat
jnp
pop
shll
add
lret
pushaw
rcll
cmp
push
inc
adc
push
adc
jg
in
dec
inc
adc
xor
add
fwait
add
sar
and
add
ss
stos
or
inc
mov
dec
dec
hlt
add
pop
je
or
push
cmp
cmc
jne
es
push
dec
xchg
pop
add
inc
outsb
xchg
push
and
pop
xchg
mov
lret
pop
pop
add
jl
sub
in
pop
or
movsl
rorl
les
test
rorl
subb
nop
adc
fcmovnbe
or
mov
mov
jmp
movsl
pop
inc
shrl
and
insb
jge
arpl
ljmp
jnp
dec
push
add
hlt
adc
and
out
push
sbb
lock
adc
and
js
add
or
in
add
out
popa
mov
push
nop
rcr
or
mov
push
sbb
mov
push
jo
or
push
orl
lahf
mov
adc
dec
sub
xor
add
xchg
adc
adc
jnp
out
dec
pop
lea
or
je
adc
notl
push
enter
mov
sbbb
xchg
dec
ja
xchg
push
bound
sbb
or
sbb
inc
repnz
and
push
and
and
add
and
add
and
sub
mov
xor
push
mov
sub
lea
jmp
sbb
xchg
add
mov
mov
test
mov
bound
or
inc
xchg
inc
mov
xchg
and
adc
and
and
xor
mov
pop
push
cmp
push
xchg
and
adc
xchg
inc
or
pop
cmp
and
ret
cmp
or
adc
repnz
inc
adc
inc
fwait
addr16
add
or
in
das
pusha
or
xchg
hlt
dec
add
cmp
hlt
jns
add
nop
jl
mov
ret
dec
in
push
push
mov
push
dec
jmp
push
sbb
push
push
dec
mov
push
add
clc
inc
fstpt
arpl
add
mov
int
ds
mov
fbstp
cmpsl
stc
cmp
add
jmp
enter
decb
adc
dec
sub
jne
push
xor
addl
scas
add
out
mov
aam
or
dec
add
cwtl
sub
test
and
cli
es
roll
lea
test
rol
and
cwtl
inc
mov
pusha
lods
mov
test
lods
add
cli
push
shll
mov
adc
dec
cmp
fbld
sbb
daa
ljmp
movb
jp
jp
loopne
addr16
dec
mov
jl
pop
in
jecxz
dec
sarb
jge
jl
scas
adc
inc
adc
enter
add
push
inc
or
inc
or
add
std
jbe
push
push
add
lds
std
stos
in
push
jl
cmp
jae
incl
test
imull
shl
pop
cmp
jne
jbe
sbbb
adc
pop
dec
xor
or
add
jp,pt
rcl
xlat
outsb
mov
ret
add
xor
lret
stos
cmp
sub
loopne
pop
jo
mov
push
mov
push
ss
push
sbbl
shll
mov
push
jle
sahf
movsb
or
push
and
or
rorl
jge
and
pusha
scas
dec
jge
adc
outsb
sub
jmp
push
jecxz
ds
pcmpgtb
jnp
xchg
clc
gs
jno
hlt
subb
mov
into
test
xor
shlb
sbb
jecxz
dec
add
mov
xchg
inc
add
mov
jne
add
add
push
shlb
push
jb
sbb
or
add
in
push
dec
cmp
push
fsubl
xchg
inc
jb
adc
mov
aam
pop
and
jmp
add
test
hlt
mov
popf
in
faddl
jge
mov
dec
dec
cmpsb
xor
gs
mov
dec
dec
push
insb
call
in
es
imul
sub
mov
js
lock
jns
push
inc
inc
add
add
mov
adc
pop
sbb
scas
mov
push
enter
jge
test
mov
cmp
jbe
shll
pushf
pop
xor
leave
push
xor
lret
push
adc
add
sbb
ss
xchg
push
fstpt
neg
mov
jo
add
push
push
lock
lock
dec
mov
fs
inc
bound
fs
mov
dec
pop
repnz
mov
test
dec
or
inc
push
push
mov
push
jns
mov
xchg
aaa
add
jne
test
push
loope
inc
ds
push
cmp
jo
add
mov
cmp
mov
or
lock
push
and
lret
jmp
jg
adc
inc
xor
inc
sbb
test
mov
pop
mov
cmp
push
push
lea
in
insl
bound
sub
push
stos
adc
add
push
pop
or
mov
xchg
movsb
rcl
or
mov
inc
inc
dec
xor
or
mov
mov
add
or
sub
fwait
or
mov
cmp
push
fwait
add
fs
in
inc
add
movsb
aas
je
mov
pop
pop
mov
je
adc
push
pop
and
and
push
andl
mov
and
inc
cmpsl
repnz
adc
adc
loope
jmp
sbb
addl
mov
sub
or
testl
and
jb
jne
andl
out
cmp
sbb
into
xchg
adc
arpl
out
add
or
mov
cmp
int3
cmp
out
inc
sub
movsl
or
inc
fcoms
bound
pop
add
mov
push
jge
jo
sbb
pop
dec
lea
mov
dec
push
repz
inc
mov
or
and
js
push
pop
or
arpl
loope
mov
jno
xor
xor
add
ds
dec
sbb
lods
sub
loope
loopne
or
loope
inc
fldenv
or
push
rcll
movups
dec
hlt
adc
out
add
pop
loop
ret
gs
lcall
push
xchg
xor
imul
lea
push
xchg
xchg
xchg
sbb
lcall
andl
test
pop
push
jo
lret
scas
out
push
js
cmc
or
mov
pop
or
fcoml
in
dec
rolb
in
dec
movsb
pop
xchg
mov
cmp
sbb
mov
push
sbb
sbb
add
lock
adc
mov
pop
rclb
push
data16
fcomps
test
mov
lcall
test
adcb
pop
sbb
inc
cmp
daa
adc
cmp
xor
pop
mov
dec
mov
pop
int
sub
sbb
popf
test
fmull
cld
daa
add
dec
dec
pusha
dec
cmp
cmp
ss
xlat
orb
adc
and
mov
mov
lock
or
insl
lea
mov
jbe
sbb
shl
mov
add
inc
xchg
sub
mov
in
and
xchg
push
push
adc
adc
mov
xchg
pop
sbb
push
xor
xor
aaa
andps
sbb
pop
add
push
fwait
in
inc
dec
mov
sub
jl
push
je
mov
mov
push
stos
mov
inc
mov
insb
es
int3
and
pop
and
ja
outsb
push
clc
sti
add
and
dec
ljmp
fsubl
push
call
insb
fsubrl
mov
sub
pop
inc
and
int3
insl
adc
sbb
pop
sti
inc
inc
imul
addr16
push
cmp
dec
dec
imul
inc
outsb
sub
ja
jae
fldt
lea
cmp
nop
fcompl
mov
add
cwtl
add
or
inc
xor
clc
jmp
cmpl
push
xor
roll
jb
je
xchg
ja
jne
jne
jmp
inc
mov
lods
negb
inc
pop
cmp
leave
mov
mov
push
or
je
xor
push
dec
inc
movsl
cmp
push
pop
push
mov
inc
xchg
sti
jl
test
lods
push
cmp
adc
pushf
ds
mov
sub
mov
cmp
sbb
jge
mov
xor
dec
add
jmp
not
pushf
push
push
mov
lea
add
push
shll
add
enter
outsb
sbb
jl
testl
addr16
das
das
mov
sub
sub
xor
xchg
xchg
xchg
sub
cmp
into
lret
dec
or
dec
pop
or
and
and
jg
addb
add
jge
sbb
push
cmp
inc
add
jecxz
aas
stos
adc
out
push
adc
add
or
jno
push
sbb
or
or
mov
xor
push
lods
fsubp
adc
dec
push
mov
pop
scas
mov
mov
test
adc
rclb
push
xchg
je
sbb
mov
or
es
fisubrl
push
dec
add
or
inc
addr16
jbe
inc
aas
in
add
xchg
cmp
sub
jp
lods
nop
jge
jmp
ss
sbb
xchg
test
pop
add
test
or
shlb
sub
dec
cmp
inc
call
xor
icebp
and
je
ret
xchg
add
std
lods
ja
cmp
cmp
imul
jno
sbb
add
outsl
sub
ret
ds
adc
adc
test
leave
mov
in
sub
sub
sub
push
mov
or
pop
cmp
sub
mov
ret
inc
pop
pop
and
cwtl
pop
notb
ss
adc
rep
bound
adc
outsb
sahf
sub
jmp
sub
jae
movsl
pusha
lock
pop
shlb
add
fcomps
inc
sbb
andl
or
jnp
and
jne
test
jae
push
push
lock
sub
push
and
push
mov
pop
clc
sub
adc
push
shl
data16
inc
sub
arpl
or
bound
int
sub
sub
xor
cmp
fsts
or
movsb
jle
cmp
mov
cmp
or
cmp
fiadds
jne
mov
xor
test
and
mov
and
dec
sbb
or
sub
lock
sub
cmp
hlt
add
or
insl
or
orb
pop
lret
pusha
jmp
or
push
pusha
adc
fs
cmc
icebp
and
mov
jmp
imul
push
inc
add
and
cld
sub
push
pop
xchg
or
fs
je
into
out
ret
aad
inc
inc
pop
mov
xlat
fiadds
mov
pop
pop
mov
jge
into
add
xor
cmp
lret
loop
mov
jg
pop
adc
push
push
inc
xor
push
lods
call
xchg
mov
adc
mov
xchg
xchg
mov
push
mov
push
sar
call
pop
sbb
push
cmp
mov
push
ficoms
dec
gs
or
or
mov
fdiv
xchg
ret
adc
jno
incl
or
or
aad
dec
rclb
add
and
out
push
xlat
mov
adc
arpl
ret
push
and
add
ret
int3
push
add
inc
xor
js
dec
push
sbb
or
jle
xor
cmp
push
or
sti
sbb
decb
adc
add
push
xchg
xchg
push
roll
or
xchg
dec
xchg
jo
push
xchg
or
sbb
push
std
jo
sti
mov
jge
je
test
stos
hlt
mov
push
push
das
xor
pop
cltd
in
or
add
dec
jo
sbb
push
xor
ret
or
sub
cld
lods
push
les
jb
push
sub
sub
pop
sub
mov
mov
ret
sub
xor
mov
mov
sub
ret
adc
addr16
pop
mov
jle
insb
insl
sub
xchg
lcall
int3
movb
les
xlat
add
pop
nop
and
jge
shrb
es
in
mov
iret
pop
es
push
icebp
push
mov
testb
fistl
je
jle
adc
shlb
cmp
inc
orb
pushf
test
popa
insb
loope
fsubr
or
push
adc
fimull
push
pop
cmp
popa
loopne
xor
dec
adc
or
or
hlt
add
push
sbb
dec
or
or
sbb
orb
push
lret
sar
jbe
sarl
clc
inc
or
add
jmp
push
or
mov
push
inc
mov
loopne
je
sub
jecxz
out
add
movb
pop
hlt
repz
mov
add
arpl
adc
or
movsl
rorb
pop
lea
inc
cmovns
add
fiadds
add
lock
dec
add
testb
lock
add
fmull
ror
test
movsl
mov
inc
cmp
fs
inc
jl
loope
jl
pop
in
mov
jns
popa
and
lea
nop
insb
lea
jns
dec
push
mov
incl
pop
sbb
jb
inc
push
aas
orl
pusha
inc
xor
and
mov
xor
pop
mov
sub
mov
cmp
sbb
xor
call
sbb
nop
adc
roll
cmp
pop
adc
jno
testb
push
jmp
dec
fisubs
sbb
dec
add
jne
sub
clc
test
add
aaa
pop
cmp
add
std
push
mov
aad
jae
jb
pushl
inc
sbb
mov
push
sahf
add
mov
es
jae
push
push
stos
jl
jp
add
xchg
and
or
hlt
lret
rorb
adc
test
pusha
loopne
icebp
or
test
gs
sbb
sbb
inc
mul
sbb
in
mov
and
mov
adc
test
mov
dec
jmp
lahf
or
push
mov
lcall
jne
lahf
ret
xor
mov
or
mov
stos
in
push
rcrl
or
and
lock
jmp
adc
mov
xchg
and
insl
xchg
cmp
and
sbb
mov
daa
lds
arpl
dec
or
sub
addb
or
and
dec
inc
mov
nop
or
mov
jmp
je
pop
add
and
or
push
adc
adc
arpl
lds
stc
std
icebp
cmp
addb
or
or
rol
mov
cmpsb
cmp
add
movsl
jne
testl
pushf
and
add
or
test
pop
daa
movsl
sbb
subl
lcall
movsb
aaa
shrl
inc
cmp
ss
sbb
std
lods
push
jns
pop
stos
push
shlb
in
fldl
fmul
aaa
push
and
xchg
xchg
mov
xchg
and
sbb
xchg
and
inc
push
nop
cs
xor
nop
inc
push
sub
inc
push
nop
inc
nop
cs
jae
nop
lods
or
jmp
push
lret
pop
push
xchg
xor
clc
xor
movsl
std
sub
sbb
xor
or
xor
pop
push
js
mov
mov
pop
sbb
adc
jo
fistpll
xchg
cmp
or
out
pusha
push
out
or
push
add
repnz
push
adc
or
add
rorb
pop
adc
lds
mov
lcall
or
or
movl
push
aaa
lcall
sub
dec
lret
jno
or
pop
add
repz
pop
adc
lea
add
dec
adc
pop
loope
xchg
enter
or
mov
or
pop
pop
sbb
jg
push
leave
dec
inc
adc
push
push
rolb
push
sub
inc
je
pop
sbb
pop
adc
dec
jl
test
mov
addr16
jge
sub
sbbb
mov
repz
and
fsts
orl
adc
mov
push
and
push
mov
pushw
fadd
mov
push
cmp
ds
pop
mulb
pop
push
mov
shrb
ret
fdiv
push
and
daa
jo
adc
and
lods
mov
pop
test
loope
das
movsl
or
add
rorb
ror
lods
sbb
pop
js
xor
jne
push
cltd
or
jns
jae
es
lods
inc
push
vmxoff
inc
dec
das
xchg
jg
adc
fisubrl
dec
adc
movsb
mov
mov
push
inc
repz
ret
rcll
stos
add
gs
arpl
sbb
and
je
daa
add
pop
orb
mov
and
mov
xor
dec
sub
push
or
pop
mov
shl
sbb
sub
inc
or
sub
xor
and
test
and
pop
push
scas
or
add
jmp
fmuls
rorb
add
jecxz
lea
inc
cmc
add
lock
jecxz
add
mov
inc
movsl
or
lock
or
ljmp
push
loopew
jmp
out
pop
mull
mov
pop
sbb
ret
movntps
push
enter
xor
sbb
ror
add
call
jns
cmp
aam
inc
sub
mov
or
adc
cmp
fiaddl
sbb
enter
imul
testb
add
stc
pusha
xor
dec
cmp
xchg
xchg
push
mov
and
xor
or
call
push
cmpsl
inc
andb
or
iret
outsb
cmp
fistl
mov
in
lret
pusha
or
mov
add
pop
and
sub
test
divl
lret
call
sbb
popa
clc
cmpsb
push
and
inc
mov
push
jecxz
addr16
pop
or
lods
sbb
xor
adc
and
sbb
add
dec
adc
xchg
or
xor
cmp
dec
lods
inc
stos
testb
loope
lock
cs
in
out
add
repz
push
outsb
pop
pop
std
and
iret
pushf
ret
xchg
or
dec
push
nop
and
cmpsl
mov
push
inc
int
push
jge
adc
ds
and
jne
push
lock
iret
pop
sbb
iret
dec
loopne
adc
xor
rolb
xor
adc
and
pusha
push
add
idiv
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
sub
cmp
mov
add
shlb
daa
mov
mov
jge
mov
pop
and
cmp
jl
ljmp
cmp
je
jne
pop
xor
pop
and
sub
add
and
push
sub
pop
nop
add
inc
jmp
test
sub
add
insb
add
fldenvs
sbb
ljmp
shlb
cmp
jl
mov
push
mov
add
jl
in
inc
or
pop
or
cwtl
jge
test
mov
mov
xor
fidivl
bound
adc
mov
dec
lock
or
scas
lea
rorb
inc
mov
mov
or
add
sub
es
jp
cmc
or
push
dec
call
xchg
mov
test
sarb
dec
inc
out
or
inc
shlb
sub
or
rcrb
push
aam
sbb
in
clc
imul
inc
sub
add
sbb
in
pop
jp
popa
popa
js
or
aaa
push
mov
ror
add
jmp
rorl
call
xchg
lods
sbb
dec
push
mov
pop
or
dec
or
cmp
ds
pusha
sub
inc
popa
or
adc
out
lcall
inc
pop
pop
test
ficoms
cmpsl
push
push
push
jne
fstps
outsb
sarl
and
dec
xor
sbb
add
lods
xchg
test
pop
adc
add
repz
fs
addr16
sbb
push
js
and
cmp
cmpsl
inc
mov
adc
shl
sbb
lea
sub
xor
dec
adc
lahf
push
push
inc
addb
add
push
imul
insb
adc
push
rolb
es
push
fldcw
or
and
rorb
add
mov
xchg
out
fdivr
and
ret
lret
push
lret
jnp
mov
jno
jmp
inc
pop
nop
ret
inc
inc
popf
mov
lret
and
push
repnz
sbb
in
pop
pop
or
nop
pop
rclb
ret
sbbb
xor
cmp
inc
jle
and
cmpsb
inc
aam
fs
inc
jo
call
pop
xchg
mov
add
sbb
out
scas
mov
and
arpl
incb
andl
jle
js
pop
outsl
por
inc
and
pop
enter
xor
inc
inc
or
xchg
orl
add
fwait
adc
push
lods
popa
sub
inc
jmp
inc
jl
sbb
gs
adc
lds
lea
mov
ds
xlat
bound
or
xchg
cmpsl
movsb
adc
das
dec
pop
push
or
adc
and
dec
inc
sub
or
je
je
je
or
adc
push
and
xchg
dec
and
stos
push
lcall
xchg
mov
inc
rclb
xor
xchg
sub
jp
mov
addr16
cmpsb
xor
jge
jp
sbb
or
push
mov
mov
clc
and
daa
je
mov
add
adc
jg
sub
pop
push
pop
push
or
add
cs
cmp
inc
xor
inc
mov
fsubrs
or
in
test
and
mov
inc
ficoml
jle
dec
add
and
sbb
or
jl
rorb
in
mov
dec
insb
mov
lods
sub
jne
push
repnz
jmp
and
pop
sub
jne
stc
cmp
cmp
aaa
out
loopne
or
insb
addr16
xchg
imul
lcall
daa
rclb
and
push
imull
xor
mov
xor
fsts
imul
xchg
add
mov
jnp
sbb
pop
pop
leave
cwtl
sbb
pusha
dec
nop
fldl
xchg
in
fcomps
cmpl
sub
mov
add
adc
inc
jle
adc
popf
push
dec
add
mov
xor
push
mov
pop
outsl
push
push
ret
inc
dec
js
push
jo
add
aam
sbb
sub
enter
sub
push
or
pop
cmpsl
push
repz
dec
add
lds
aam
sub
fs
dec
hlt
rcll
jl
popf
push
fcompl
push
hlt
jg
mov
sub
test
mov
pusha
adc
push
js
cmpsb
jmp
cmp
or
push
xchg
orps
add
loope
xor
out
lods
bswap
lret
sub
mov
stc
stc
sub
lea
mov
add
ret
pushf
jg
push
xchg
js
test
push
push
sbb
push
adc
or
jg
add
adc
shrl
aaa
add
rorb
or
mov
inc
adc
sti
or
jns
mov
mov
loopne
inc
dec
rcll
dec
push
dec
pop
dec
xor
add
testb
mov
data16
test
inc
push
and
lcall
push
dec
adc
ljmp
pushf
sub
test
mov
or
dec
add
rol
jbe
add
gs
aam
push
adcl
pop
lret
pop
aaa
ja
or
popf
out
push
add
int
xor
push
orb
sub
xor
add
jmp
or
ret
gs
lea
nop
sbb
clc
data16
adc
and
xchg
adc
xchg
mov
jo
push
adc
test
out
jmp
in
jg
pop
sub
jnp
loop
add
push
pushl
jae
sahf
push
adc
push
sahf
lret
push
inc
sbb
movsb
ja
or
div
je
cmp
cmp
clc
xor
sub
pop
and
ds
inc
xchg
mov
clc
push
jno
sub
mov
nop
pop
add
sbb
sbb
outsl
mov
push
cltd
and
dec
loopne
js
push
cmp
fdivrs
inc
push
pop
je
fldl
xchg
jne
cmp
fstpl
dec
in
mov
cmp
push
cmp
adc
jne
jns
sahf
sub
or
jne
add
cli
jne
or
dec
pop
sbb
frstor
andl
sub
or
inc
cmp
dec
add
push
push
cli
popa
inc
ficoms
lock
enter
testl
arpl
test
lea
fstl
jecxz
inc
adc
sub
pop
loop
adc
or
sbb
xlat
pop
fisubs
lock
rorb
cmp
adc
lahf
jg
popa
dec
push
mov
rcrl
add
jle
shrl
fsubl
mov
fildl
jne
push
rcrb
or
idiv
jbe
adc
loopne
sti
movsl
pmaxub
cld
dec
movsl
fcmovbe
lcall
outsb
adc
aad
sbb
popa
pop
add
sub
cmpsb
sahf
or
cmp
or
adc
dec
pusha
fcompl
jb
cmp
mov
dec
sub
aam
mov
shlb
or
movsl
ficoms
loopne
hlt
jne
mov
push
ret
stc
icebp
pusha
imul
mov
test
lea
cmp
je
insl
and
xchg
xlat
popa
loope
int3
adc
add
cmc
mov
adc
add
add
push
add
stos
add
cmpsb
fs
push
sub
push
jecxz
adc
push
pop
cmpb
xor
push
mov
repnz
adc
xor
sub
dec
popf
mov
lods
addl
lds
push
repnz
push
push
push
ja
xor
or
sub
inc
adc
dec
int3
test
xor
pop
rclb
push
rcrb
add
inc
fcoml
imul
pushf
xorl
mov
inc
jno
adc
add
fnstsw
outsl
or
cmp
push
push
pop
shrb
enter
mov
shll
and
rorb
push
sbb
inc
sbb
adc
inc
es
mov
and
mov
les
imul
mov
adc
xchg
cmp
add
or
mov
rclb
mov
mov
mov
and
adcb
es
mov
jmp
add
pop
shl
jmp
xor
mov
je
or
mov
loope
sbb
mov
xchg
test
cld
aad
add
and
mov
push
and
ret
mov
mov
cli
or
mov
push
int
cmc
orl
pop
xchg
sub
sub
sahf
fcompl
or
sub
add
mov
sti
cmpsb
jmp
pop
jg
adc
inc
xchg
fs
add
or
add
add
dec
mov
add
je
icebp
dec
test
outsb
out
call
in
mov
cmp
jl
enter
je
inc
xor
stos
inc
xor
adc
test
mov
and
pop
stc
inc
push
pushf
or
pop
add
add
add
por
shlb
filds
sub
aad
andb
sub
lret
mov
sub
inc
sub
jmp
imul
movsl
inc
in
inc
adcb
imul
mov
push
jmp
push
imul
sbb
ret
cmp
cmpsb
push
jmp
mov
pusha
pop
fmull
push
pop
mov
push
mov
rcrb
in
pminsw
dec
sarb
outsl
lods
inc
shlb
lods
mov
in
and
popa
add
xor
aaa
pop
fimuls
or
icebp
cltd
bswap
out
int3
mov
pop
mov
fdivs
cltd
movsl
aad
sub
sbb
hlt
mov
arpl
ss
ljmp
mov
lahf
or
push
loope
mov
aad
push
jge
push
fsubs
add
mov
xor
shlb
cwtl
dec
out
cmp
mov
jle
push
adc
lods
add
mov
cltd
clc
pop
inc
push
adc
sub
jg
in
push
in
or
sub
popf
pop
in
xchg
add
cmp
sub
les
jmp
mov
jecxz
rorl
mov
mov
inc
ret
xchg
inc
stos
fiaddl
mov
rorl
repz
mov
enter
adc
pop
cmp
mov
enter
loop
cltd
fcmovu
and
add
or
mov
adc
push
pop
xchg
push
dec
adc
push
pop
test
cmc
dec
shlb
push
pop
sbb
push
cmp
mov
outsb
pusha
mov
lea
outsb
push
pop
xor
or
pusha
test
sti
mov
cmpsb
aad
sbb
fwait
dec
outsb
dec
clc
pop
inc
or
loop
push
inc
add
sub
jo
mov
pushf
rorl
mov
imul
sub
sti
hlt
jle
pop
sub
mov
sbb
jo
enter
mov
or
shlb
add
and
xchg
das
push
lahf
shl
pop
xchg
mov
fs
jmp
jmp
pop
test
lahf
in
mov
dec
xor
cmp
add
scas
inc
pop
or
sub
rolb
stos
test
popf
push
add
adc
lds
aad
inc
or
inc
rclb
sti
or
add
mov
jne
movsl
pop
adc
popf
inc
fcoml
inc
negl
sbb
mov
insl
lods
and
dec
sub
cmc
push
adc
movsl
mov
fsubr
jmp
adc
mov
add
mov
xor
cmp
mov
shll
sbb
rclb
inc
mov
movsl
jp
imul
aam
mov
push
push
mov
loop
adc
cmp
cmp
pushf
mov
adc
push
mov
lock
dec
add
jle
adc
inc
imul
insb
icebp
xchg
movsl
movsb
aam
nop
sbb
mov
push
shlb
push
mov
stos
into
inc
pop
xor
repnz
sbb
pop
push
xor
lahf
shll
cs
pop
cltd
xlat
andb
movsl
xchg
adc
jb
push
stos
sub
push
add
add
pusha
leave
inc
popa
ret
mov
pop
mov
int
cmp
test
lea
dec
loop,pt
pop
add
sti
test
rolb
or
mov
lcall
xchg
cmp
loop
sbb
mov
shl
stos
scas
dec
push
loopne
xor
aaa
dec
test
jns
lret
cli
adc
rcll
test
rcrb
add
pushl
cmpsl
add
push
popf
cltd
call
add
add
push
lea
and
and
jmp
testl
cld
loope,pt
jge
push
sbb
and
pop
mov
mov
push
add
popa
inc
mov
mov
orb
dec
add
ret
dec
dec
jp
xchg
nop
xchg
jbe
jne
sub
cmc
lock
mov
push
mov
and
xor
lea
push
inc
adc
sub
sbb
fwait
pop
sub
push
outsl
fcompl
pop
test
mov
add
stos
insb
dec
jb
sbb
or
popa
add
and
inc
pusha
mov
adc
pop
push
icebp
add
mov
sbb
push
and
mov
movsl
dec
stos
sbb
mov
aad
dec
sub
imul
mov
add
out
mov
push
das
std
ljmp
out
and
jne
sbb
push
sbb
xor
or
aaa
xchg
sahf
or
sbb
cltd
mov
jg
cmp
and
adc
and
sub
test
popa
pushf
jne
xor
cwtl
mov
jle
test
inc
ret
xor
popa
mov
add
pop
sbb
scas
and
mov
insl
stos
push
add
inc
aas
mov
sahf
pop
nop
out
outsl
roll
xor
je
pop
enter
or
lea
pop
mov
or
mov
add
inc
cwtl
adc
cwtl
push
cmpsb
xlat
mov
loop
aas
std
or
adc
insb
test
pop
mov
jmp
sbb
call
mov
adc
mov
cmp
sbbl
hlt
clc
or
pushl
mov
lret
fistpl
jo
addb
gs
sbb
sbb
sbb
loopne
mov
dec
repz
mov
cmpsl
call
adc
iret
mov
pop
push
push
inc
out
dec
out
fwait
shlb
inc
dec
sub
lods
dec
inc
fists
fildll
nop
add
pusha
inc
push
iret
test
js
jl
xlat
rcll
mov
ret
leave
add
aam
inc
mov
dec
nop
pusha
dec
cwtl
cmp
xchg
mov
pushf
pop
pop
xor
and
lods
or
leave
mov
push
inc
or
jb
pop
enter
inc
sbb
in
arpl
insl
or
iret
dec
inc
movsb
or
loope
cmpsl
lods
xorb
cmpsb
adc
add
jns
dec
and
sub
and
inc
xlat
and
hlt
sbb
sub
imul
xchg
out
xor
adc
xchg
sbb
xchg
shlb
lret
sub
and
aaa
mov
sbb
cmc
sbb
pop
enter
or
hlt
pop
mov
xor
push
popw
xchg
push
pop
gs
mov
cmp
jmp
shl
pcmpgtd
or
and
and
add
les
sbb
arpl
jb
negl
xor
adc
inc
sbb
and
mov
push
push
cwtl
and
pop
xor
mov
lea
fwait
insb
test
pop
dec
sbb
lods
dec
add
xchg
scas
and
or
scas
sbb
cli
adc
rcrb
push
and
stos
mov
gs
push
sub
xor
lret
mov
mov
orl
loop
xchg
dec
pop
stos
fistps
inc
cmp
out
test
fidivl
adcb
sub
pop
jo
adc
push
or
fdivl
lods
shr
adc
xor
into
mov
inc
outsb
sub
sbb
jge
popf
inc
and
push
xor
loopne
rolb
fwait
xchg
and
jecxz
pop
dec
jmp
cmpsb
into
aaa
cld
jnp
pop
addl
jno
add
xchg
xorb
pop
mov
mov
or
adc
sahf
dec
dec
iret
cmp
shrl
mov
xor
movb
mov
cs
mov
mov
add
pop
fwait
pusha
dec
and
sbb
arpl
mov
add
add
pop
pop
add
aam
sub
out
xlat
daa
xor
and
imul
xlat
popa
in
and
sub
int3
jne
scas
movsb
adc
pop
mov
stc
fldenv
and
push
fisttpll
inc
cs
fisttpll
cmp
sbb
cmpl
mov
push
adc
add
adc
loopne
fucomp
inc
rcrb
repnz
sub
adc
push
orl
or
jmp
mov
mov
in
js,pt
pop
notl
movsl
enter
or
cld
std
xor
push
push
or
xchg
sbb
jns
or
enter
jns
add
add
repnz
rclb
cmpsb
push
push
mov
push
sbb
jb
mov
xchg
adc
add
or
and
shlb
lods
ljmp
push
jne
loop
ljmp
inc
cmp
jae
and
gs
test
inc
push
jmp
jp
out
or
mov
adc
jbe
mov
sbb
xor
pop
stc
inc
add
pop
js
inc
inc
xor
icebp
push
pushw
cmp
or
push
cmp
add
je
sbb
mull
imul
imulb
nop
jbe
inc
adc
cld
push
sub
cmp
fildl
dec
or
mov
std
andl
adc
jbe
inc
cmp
sub
testb
sbb
dec
es
test
xlat
cli
std
or
orb
outsl
xchg
and
lahf
outsl
mov
push
shlb
or
and
sbb
rolb
ret
pop
cli
lock
cmp
dec
mov
and
arpl
lea
cmp
nop
pop
adc
clc
or
pop
mov
adc
push
adc
push
inc
loopne
js
jne
and
xor
jmp
sub
jnp
sbb
roll
es
dec
les
mov
les
test
cltd
cmp
js
std
test
les
jg
fisubrl
out
out
xor
pop
ficomps
or
lret
je
mull
inc
mov
ficomps
nop
lret
and
jbe
and
es
dec
cld
push
dec
sub
pop
sub
push
mov
sub
cmp
gs
std
xchg
es
dec
or
and
sbb
pop
push
pop
sub
dec
popa
int
xchg
es
jg
icebp
cwtl
inc
test
xchg
adc
dec
movsl
xor
xchg
mov
pop
and
nop
inc
movsl
xchg
filds
push
sub
stos
push
xor
add
sub
xchg
js
andb
sbb
add
xchg
mov
mov
loopne
les
adc
lock
add
mov
xchg
jmp
add
sbbl
and
mov
outsl
mov
sbb
fsubrl
push
or
and
xor
and
xchg
rcr
out
out
cmp
sbb
xchg
sbb
and
pop
fsub
pop
fsubrp
fs
and
into
mov
shl
clc
out
jg
sahf
xchg
sub
icebp
and
xor
fsts
and
add
pop
xchg
adc
sub
jg
je
dec
je
add
es
cmp
jp
xor
fwait
sub
insb
push
sbb
ss
mov
sub
push
xchg
ljmp
iret
adc
or
sbb
xor
or
fs
aaa
pop
xor
push
push
xchg
sbb
sub
cltd
add
dec
jne
int3
and
out
fnstcw
add
push
or
int
jbe
lahf
pop
mov
fcomps
js
es
addr16
jge
or
push
xor
jp
and
sbb
cld
in
aam
xor
lea
lret
lahf
stos
or
sbb
sbb
and
nop
fldl
push
nop
xchg
pop
adc
adc
nop
xchg
pop
pop
imul
push
daa
pop
jns
push
xor
or
sbb
mov
mov
dec
roll
lret
sbb
fs
je
movsb
xor
push
ret
outsb
or
xchg
and
sub
pop
out
mov
pop
test
outsb
or
jl
ret
mov
lret
dec
aam
xchg
call
enter
ss
in
jbe
mov
and
femms
push
adc
xor
pop
xchg
cmpsb
lods
lret
sub
pop
xchg
or
lret
push
xor
dec
jbe
lahf
xchg
inc
incb
test
scas
mov
mov
mov
je
and
jmp
jge
and
cld
cld
and
xadd
push
std
punpckhbw
aaa
ficoms
mov
sbb
and
push
cvttps2pi
daa
lret
nopl
aas
add
fcmovb
aaa
lret
insb
and
cmp
xchg
iret
jmp
daa
xchg
aaa
xor
ffree
leave
outsb
mov
sbb
push
cwtl
aam
sahf
adc
jecxz
add
jns
lea
push
sbb
repz
adc
je
xchg
cmpsl
mov
leave
cld
or
imul
out
sahf
out
stos
mov
xor
out
add
and
inc
cmp
repz
data16
cltd
repz
rep
mov
jns
iret
call
sbb
fs
jo
push
movb
movl
mov
xor
rcl
insl
mov
lock
inc
pop
imul
notl
mov
jnp
xor
cmp
sub
mov
sbb
ja
or
movsl
add
add
xor
add
push
push
mov
jne
stos
dec
cmovae
add
cmp
sub
lret
inc
jmp
adc
lds
inc
sbb
push
mov
cmpsb
fwait
xor
adc
pusha
mov
lods
loopne
sbb
sub
push
adc
xchg
mov
bound
js
je
sub
xor
xchg
sub
or
mov
sbb
pop
jns
push
add
xor
xor
push
mov
aas
jmp
mov
add
add
adc
nop
adc
sub
or
push
inc
inc
bound
sbb
pusha
sub
xchg
lods
push
mov
cmp
lods
dec
mov
mov
inc
imul
add
sbb
pop
inc
test
repnz
jb
add
popf
gs
or
pop
jnp
int3
jecxz
rcr
xchg
sbb
mov
push
stos
mov
xor
jno
inc
cltd
icebp
add
adc
shlb
mov
test
jnp
xor
ljmp
arpl
arpl
xor
and
pop
loopne
add
shlb
call
pop
add
mov
or
pop
or
lods
xor
addl
das
nop
add
push
push
lret
or
sbb
xchg
je
fwait
int
stc
add
mov
bound
out
lock
cmp
xor
xorb
adc
aad
sbb
aad
lcall
add
and
mov
enter
or
pmaxsw
lahf
pop
and
push
xchg
xchg
sbb
sub
dec
roll
push
ret
and
add
push
sbb
and
int3
les
loopne
add
mov
stc
in
mov
popa
push
cmp
jnp
xchg
jb
sub
lock
xor
push
add
popa
and
in
add
les
sub
mov
mov
mov
sub
ret
leave
add
add
sub
push
push
int3
rcrb
add
data16
movsl
or
mov
sub
sbb
outsb
int
push
test
lds
mov
aam
mov
pop
les
cmp
pop
sub
pop
leave
lock
sub
lcall
inc
shr
adc
mov
call
or
bound
test
pusha
aam
ret
adc
cmpsl
jo
and
lea
fsubs
ret
sbb
adc
out
adc
cmp
cmp
adc
adc
stc
jl
push
mov
lods
arpl
jne
dec
or
or
ljmp
inc
orb
or
mov
std
sbb
loopne
xchg
add
push
ret
call
inc
push
cltd
xor
push
or
dec
lods
cmpsl
pop
aad
pop
xchg
mov
adc
sub
mov
jbe
loopne
and
sub
movups
jmp
stos
andb
js
add
pop
mov
add
cmp
mov
inc
and
mov
pop
and
sbb
sbb
pop
pop
daa
std
sub
adcb
pop
inc
loope
jnp
sbb
xchg
test
adc
add
rorb
ret
in
sub
inc
shrl
mov
jge
sbb
cmp
pop
enter
or
mov
nop
sub
pop
sbb
sbb
in
add
push
orl
xchg
pop
and
sbb
test
add
lea
rcrl
lea
mov
xchg
ret
cmpsl
and
add
or
mov
pop
loope
push
push
mov
fs
sub
adc
or
test
loop
mov
stos
dec
inc
lods
and
pop
inc
add
shrl
adc
inc
xor
xchg
sub
dec
add
jno
jo
add
or
les
mov
test
mov
inc
cpuid
lods
mov
shlb
loope
in
sbb
inc
jb
in
push
sbbl
adc
add
and
orb
test
sub
xor
xor
mov
cmpsl
mov
push
int
daa
cmp
test
nop
or
jge
cli
dec
mov
push
jo
pop
mov
add
mov
cmp
adc
test
cmp
and
into
rol
adc
sub
add
adc
dec
movsl
cltd
adc
mov
add
jge
pop
je
loopne
dec
adc
in
sbb
movl
or
mov
nop
dec
cltd
test
sbb
mov
xchg
cmp
jbe
sti
add
mov
adc
adcl
lods
or
xchg
adc
add
aaa
shr
sti
ret
bound
push
imul
mov
cmp
loop
scas
inc
pop
insb
add
fldcw
scas
inc
add
insb
in
inc
stos
mov
mov
inc
jl
cmp
jno
xor
mov
les
pop
sub
push
fldl
push
inc
dec
mov
outsb
fmull
data16
pusha
fildl
fmuls
sbb
sbb
push
inc
mov
sbb
pushf
xchg
shll
pop
add
cmp
adcl
and
xchg
fneni(8087
sub
push
ror
fdivl
testl
sbb
adc
sti
xchg
mov
aad
lea
mov
add
inc
stos
add
es
ret
push
mov
cmp
sbb
aad
sub
adc
or
call
or
ret
sarb
addb
bound
xor
adc
jecxz
js
in
imul
add
push
mov
lock
in
cs
mov
or
sbb
movl
jno
cltd
pop
push
mov
rolb
pop
sbb
or
jmp
sbbb
loopne
fistpl
shlb
cltd
ret
sub
imul
sub
pop
lock
iret
int
inc
sub
fsubl
je
rol
leave
addb
pop
inc
clc
js
cmp
xor
mov
shrl
mov
shll
mov
lea
add
dec
dec
lock
xor
xor
adc
fsubrl
xchg
push
mov
dec
fimuls
adc
ret
or
adc
jl
xor
jmp
cmp
jl
movsl
mov
jle
adc
jle
xor
push
jg
jle
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
inc
call
push
pop
cltd
idiv
out
dec
sarl
pop
mov
ds
or
rcrb
test
cmp
xchg
roll
sbb
mov
jp
mov
adc
gs
test
addl
es
xchg
xor
mov
inc
pop
lds
dec
call
inc
xchg
jl
xchg
push
in
in
in
incb
xchg
call
int
popf
and
cmp
mov
dec
pop
push
sub
cmp
add
andb
push
push
push
sub
push
push
outsl
imul
in
imul
movsl
xor
loop
mov
lret
test
in
repnz
les
loop
add
dec
fldl
push
inc
xor
inc
xchg
pop
out
pop
call
lea
mov
cmp
mov
pop
push
push
mov
pop
enter
and
or
dec
cmpl
mov
imul
bound
push
sub
mov
mov
fcoms
dec
div
push
pushf
adc
add
dec
xlat
or
cmp
icebp
hlt
and
aam
dec
jo
xchg
inc
pop
lcall
mov
push
rolb
lret
and
adc
pop
jl
mov
das
adc
push
push
pop
outsl
mov
lods
or
imul
fistpll
push
pop
push
push
sbb
xor
fs
cltd
les
sbb
sbb
mov
jae
mov
sbb
fadds
out
out
push
push
xchg
or
pushf
mov
cmp
enter
add
fmuls
dec
jae
cwtl
and
fisubs
daa
xchg
pop
xor
ds
aam
daa
and
and
dec
cmp
push
dec
or
rcrb
loopne
test
xchg
mov
in
jmp
xchg
movsb
push
stc
jno
or
push
mov
pop
push
mov
es
adc
daa
add
das
and
cwtl
sub
push
adc
enter
xor
inc
jb
xchg
sbb
pusha
cwtl
xor
orl
pop
mov
sbbb
js
cmp
in
mov
movsb
leave
and
dec
pushf
xchg
mov
out
je
dec
dec
cmp
mov
test
inc
cmp
dec
xchg
fsubr
call
jo
sub
dec
outsb
and
push
in
adc
xor
sub
dec
lret
imul
mov
add
adc
in
js
clc
js
fisubrl
xchg
cs
fldt
xor
xor
or
int3
xorb
jge
push
add
loopne
inc
nop
xchg
pop
push
mov
fs
jbe
fldz
sbb
aas
mov
pop
movsb
movl
inc
lea
lds
adc
sti
hlt
cmp
test
hlt
mov
and
lock
adcl
and
xor
mov
pusha
add
popa
adc
vpmacsww
pop
js
add
movsb
add
push
repz
and
pop
push
in
pop
pop
int3
cmc
and
inc
push
jg
and
sbb
mov
movsb
repnz
sbb
in
push
or
xchg
lret
jnp
push
or
sbb
nop
sbb
mov
int3
add
or
scas
jge
lods
daa
in
call
pop
sub
cmp
mov
lcall
outsl
xor
mov
push
stos
jmp
pop
pop
sti
mov
das
lods
sbb
jmp
rorb
inc
jns
xchg
jo
shr
adc
push
and
xor
mov
dec
inc
inc
sub
pop
lret
into
imul
jbe
sub
add
andl
in
rcrb
dec
sar
sub
add
mov
test
cmp
xchg
jp
sub
fsubrs
sub
ds
lods
dec
aad
xor
xor
mov
or
and
pop
sbb
dec
gs
sbb
les
add
pusha
xchg
pop
in
es
pop
les
inc
loop
sbb
or
add
or
test
sbb
push
inc
mov
ds
loopne
enter
cmp
sbb
mov
pop
jg
push
cltd
pop
inc
or
cmp
dec
sub
adc
ljmp
add
dec
mov
testl
mov
and
into
xchg
loopne
and
cmc
popf
add
push
vmwrite
mov
mov
lds
popa
daa
dec
adcl
mov
xchg
pop
scas
add
lea
cwtl
ss
adc
mov
inc
ljmp
push
xchg
fadds
and
ja
pusha
push
pop
mov
add
dec
dec
mov
adc
movsbl
mov
shrl
add
gs
js
add
jecxz
das
aaa
mov
hlt
xchg
push
lock
mov
adc
aam
sbb
xchg
lock
and
loopne
dec
and
hlt
push
loopne
in
add
incb
lret
dec
pop
or
add
and
push
jo
inc
xchg
inc
mov
or
mov
cmp
loop
cli
test
xchg
or
adc
pop
push
cmp
mov
cmp
cmpsl
pop
and
popa
mov
fsubrl
push
orb
clc
add
out
add
movswl
sbb
push
jne
cmp
xchg
push
imul
sbb
orl
jl
cli
or
adc
popl
add
add
shrl
pushf
and
and
mov
subb
add
jne
fs
test
mov
inc
fadd
push
pop
push
int3
jecxz
mov
inc
subl
cmp
sti
adc
mov
pop
inc
lds
push
inc
sub
or
fwait
pop
pop
sbb
cmovle
add
fcoms
int3
popa
adc
xor
adc
fdivs
lods
and
fdivl
push
int3
addb
adc
or
adc
pop
dec
je
jmp
or
and
or
loopne
or
fadd
cltd
adc
push
adc
adc
loop
add
aaa
es
adc
movsl
and
test
cltd
rorb
test
leave
ret
call
sbb
enter
aas
xchg
sbb
jns
mov
loopne
lcall
xchg
ss
xchg
push
lock
push
into
out
das
push
sbb
movsb
in
fcmovnb
outsb
imul
cmpsl
push
int
shlb
data16
rorb
jle
adc
jg
pop
dec
jg
in
add
in
adc
ret
es
add
adc
push
es
movsb
mov
adc
rorb
sbb
inc
inc
xor
dec
popf
in
and
push
pushf
sub
and
ja
mov
jmp
daa
mov
cmp
cmp
push
mov
lods
jp
rcll
jae
shrb
gs
in
cmp
push
cmp
sub
pop
inc
cmp
xor
ljmp
in
es
sbb
mov
or
movsl
mov
test
dec
sbb
adc
sbb
jne
rclb
sub
inc
sbbb
add
add
sub
xor
adc
sarl
insb
or
or
in
xor
push
into
rep
or
xchg
jle
push
inc
mov
mov
outsb
mov
in
cmp
dec
add
jge
imul
inc
addr16
rorl
aad
pusha
imul
jbe
pshufw
xchg
imul
add
or
mov
stc
push
and
aas
and
inc
mov
insb
lea
pusha
ret
xchg
adc
or
xor
gs
in
inc
mov
add
cmp
lret
jo
ret
imul
mov
push
cmp
or
push
and
xor
push
inc
enter
aas
and
loopne
push
push
push
adcl
repz
sbb
cmp
pop
push
call
mov
mov
cmp
inc
mov
adc
and
xchg
xor
lds
xor
or
fdivl
je
popa
dec
out
xchg
lods
jo
pop
rcrl
xchg
push
jmp
test
sbb
dec
sbb
es
push
sbb
xchg
or
or
add
mov
mov
and
sbb
xchg
js
out
or
xor
mov
or
icebp
out
push
ret
cs
call
mov
sbb
adc
add
and
mov
aam
adc
jp
inc
dec
push
cmp
push
jne
mov
aaa
push
cmpsl
gs
pop
and
mov
mov
or
repz
pop
mov
fucomp
pop
adc
add
push
push
push
arpl
add
repz
adc
ret
adc
es
and
pop
arpl
sub
pop
push
xchg
insb
or
loop
add
mov
and
add
or
mov
add
mov
imul
fs
mov
cmp
popa
addb
loope
cld
xor
push
into
repnz
mov
push
bound
xchg
nop
mov
sub
sbbb
in
push
push
mov
push
test
add
popa
sub
lods
outsl
fists
out
push
pusha
mov
sub
divl
mov
mov
mov
inc
pop
or
stos
pusha
ljmp
lcall
and
inc
adc
addl
loope
fnstsw
imul
addl
cltd
jb
or
sarb
addr16
and
bound
in
rcrl
fistpll
add
lods
outsl
adc
fs
addl
jne
int3
cmc
dec
ret
adc
in
dec
inc
fs
mov
sbb
push
sub
mov
aaa
or
jne
testb
jno
pop
out
jae
mov
call
rcrl
push
jno
mov
test
add
jmp
cmc
je
std
dec
inc
inc
imul
mov
loope
clc
mov
sub
push
fmull
add
push
fs
mov
and
adc
xor
jle
cmp
mov
push
lcall
add
sub
or
fstpl
ret
es
clc
jo,pn
push
ror
sbb
jo
fld
jmp
hlt
sub
cwtl
mov
push
pop
iret
pop
push
sbb
and
mov
add
mov
jmp
mov
movsb
repnz
push
push
push
pop
inc
scas
inc
movsl
and
pop
push
sbb
add
subl
add
cmp
jmp
iret
xor
dec
aad
mov
add
push
daa
add
or
or
jp
mov
rolb
sub
push
cmp
sbb
loope
xor
add
add
inc
sub
pushf
enter
sbb
push
push
pop
and
jl
or
add
mov
jo
xchg
rcrb
adc
test
add
subb
pop
std
mov
mov
or
add
mov
ret
stos
push
mov
cmp
or
into
and
ds
sbb
push
xor
or
cmp
push
test
js
or
sbb
lods
je
mov
or
push
mov
inc
je
add
ret
cmp
cs
and
or
addl
test
jae
stc
xchg
mov
roll
inc
xor
cmp
inc
jmp
add
fimull
sbb
adc
mov
jg
in
mov
mov
pop
movl
add
adc
ret
decl
sbb
mov
pusha
pop
add
orl
dec
lods
push
xchg
or
mov
mov
cltd
add
frstor
je
rorb
or
add
mov
shll
push
xor
movsl
cmp
rorl
test
enter
es
lret
push
push
outsb
jle
mov
pop
add
fisttps
push
push
mov
mov
mov
pusha
test
xor
jns
inc
mov
sbb
jb
jmp
jl
dec
inc
stos
shll
add
sub
or
add
cmpsb
fwait
inc
rolb
bound
mov
and
jbe
or
mov
or
adc
stos
add
and
or
xchg
adc
mov
das
xchg
or
int3
inc
inc
jmp
in
inc
jmp
xor
jbe
inc
in
sub
js
icebp
cmp
mov
cmp
adc
es
sub
cmp
sbb
roll
out
shll
cmp
repz
mov
mov
adc
mov
and
cmp
adc
inc
and
nop
ret
sti
pop
cmpsb
xorb
test
xor
fucompp
pop
xor
out
or
outsl
sbb
sbb
lret
or
jae
in
push
lods
add
outsb
or
cmp
push
mov
punpckhbw
imul
ja
andb
mov
sahf
sbb
dec
sti
addb
test
jo
daa
push
subl
jb
xlat
cmp
push
inc
sbb
sub
adcb
je
inc
cs
xchg
push
inc
gs
in
pop
xchg
push
popf
subb
add
lods
adc
mov
push
dec
pushf
sbb
and
dec
je
push
andl
and
cmp
imul
dec
jmp
lds
cmp
sub
adc
xorps
testb
add
xor
adc
add
cmp
scas
fsubs
loopne
jbe
adc
sbb
lea
sbb
mov
or
scas
mov
and
icebp
fimull
lock
clc
or
cli
sub
and
mov
and
adc
add
mov
inc
cmpsb
xchg
adc
xchg
mov
cmp
and
push
aaa
and
jnp
mov
ret
fimull
and
mov
xor
add
xlat
sub
add
push
jns
rorb
push
dec
sub
or
stos
jno
xor
and
jae
enter
jmp
cmp
or
add
daa
int
xchg
mov
add
and
mov
dec
cmp
mov
adc
cmp
xchg
sub
or
out
jecxz
push
rcrb
add
lret
in
sub
push
add
xor
adc
mov
outsl
lea
jns
daa
adc
lcall
fwait
cmp
add
push
push
mov
mov
and
fildl
push
pop
fs
mov
outsl
push
xor
leave
and
dec
push
cmp
and
or
lods
push
push
mov
dec
add
pop
cwtl
cld
sub
push
mov
adc
je
incl
mov
add
adc
dec
and
sarl
stos
push
aaa
ret
jne
adcb
jno
xor
add
add
insb
add
xor
fwait
ud2
aaa
adc
cmp
fiaddl
sub
push
sbb
or
add
push
orb
aad
int
xor
mov
subb
push
jns
adc
and
and
ret
mov
rorl
sbb
ret
dec
dec
xor
add
popf
mov
imul
cmp
pmullw
cmp
addr16
push
jecxz
add
mov
mov
into
dec
adc
fs
inc
rcrb
mov
and
loope
add
pop
stos
adc
shrl
mov
jp
push
dec
jo
aaa
mov
mov
mov
adc
les
push
push
inc
nop
xor
insl
cld
out
mov
push
mov
in
mov
push
call
sarb
cmp
pop
addr16
cmp
sbb
push
jle
jne
movsb
shrb
or
push
or
cli
rclb
xchg
pop
inc
add
and
ds
xor
movsl
add
pop
or
cmp
jmp
mov
loopne
sbb
rclb
pop
or
ret
ja
repnz
mov
ret
sub
mov
test
rorb
dec
shlb
mov
dec
pop
psubw
cmp
dec
imul
xor
dec
out
jo
cmp
xabort
pop
daa
cmpsl
repz
sti
orb
icebp
jg
push
pop
jle
mov
xor
movsl
enter
jno
jo
and
cld
loop
mov
icebp
jb
jmp
xchg
cmp
cmpsl
jecxz
and
neg
xor
jge
pusha
ret
dec
mov
inc
push
ljmp
test
arpl
sbb
adc
loopne
fmull
psrld
xor
mov
dec
ror
pop
imul
jo
dec
push
mov
pop
lea
add
dec
pop
adc
jl
or
hlt
add
hlt
mov
push
das
dec
test
fiaddl
jns
xchg
js
es
cmp
dec
xor
or
rorb
xchg
mov
shrl
xor
repz
fmuls
mov
xor
test
push
cmp
pop
cwtl
sbb
dec
sub
test
adc
test
or
add
or
mov
rcl
cmp
inc
inc
push
cmp
imul
rol
push
and
movsb
jge
xor
push
ud2
rcrb
push
cmp
sbb
fdivrs
inc
dec
or
sub
and
adc
jne
cmp
fcmovnbe
jbe
ss
mov
mov
fdivr
or
fadds
les
mov
inc
mov
std
or
add
loope
orl
pop
loopne
xchg
sbb
mov
add
int3
jge
or
shlb
push
cmpsb
fimuls
adc
lea
out
or
or
test
sbb
out
nop
mov
add
pop
rclb
mov
mov
aam
xorl
cmp
lea
mov
mov
mov
imul
push
mov
jnp
pusha
or
xchg
push
les
jl
push
rcl
pop
mov
jb
rclb
cmp
mov
xchg
push
adc
frstor
cwtl
mov
mov
popf
inc
pushf
je
adc
xchg
xlat
mov
fcoml
cmp
sbb
mov
pop
mov
push
orl
or
imul
add
lds
les
aam
add
add
add
lock
incl
add
add
push
pop
and
movsb
out
faddl
mov
sub
roll
xor
adc
shll
les
cmpsb
xchg
sbb
sub
ret
sahf
inc
pop
jp
mov
jl,pn
mov
insl
lret
sub
sti
jl
scas
in
loopne
push
mov
mov
or
inc
dec
es
sbb
mov
dec
enter
loopne
ret
imul
dec
push
inc
orb
test
je
dec
lods
and
jnp
dec
adc
aad
call
pop
loope
test
shrb
cmpsb
daa
iret
icebp
jbe
dec
sub
jns
enter
or
mov
inc
jle
jb
ret
jns
mov
adc
aaa
and
test
or
add
mov
notb
adc
pop
sub
into
dec
popf
mov
push
pop
dec
jl
adc
cmp
fsubr
adc
mov
push
sbb
fwait
xor
push
imul
xlat
push
fdivrs
mov
xor
adc
cmp
mov
or
popf
test
sbb
mov
pop
mov
outsl
inc
lods
push
xchg
pop
or
dec
push
push
xchg
and
inc
pop
or
and
cmp
setge
inc
sub
sub
out
pop
arpl
sbb
or
push
add
fmul
and
xor
out
incl
adc
push
fadds
loopne
mov
inc
icebp
cmp
dec
adc
xor
nop
adc
arpl
sbb
aam
add
rorb
data16
scas
test
or
xor
jne
push
mov
dec
or
jle
push
jmp
mov
test
inc
sbb
movsl
test
xor
cmp
mov
loopne
data16
push
sub
ljmp
mov
out
push
ja
leave
sub
and
movsb
adc
imul
into
es
sub
insb
sub
pop
adc
jp
push
sub
ds
xchg
or
add
dec
pop
loop
add
in
mov
push
call
or
push
cmp
push
popa
add
mov
add
fisttps
jbe
cmpl
jne
cmp
jbe
inc
orl
adc
jno
ss
sbb
call
adc
jae
add
xor
mov
jbe
sub
dec
roll
int
mov
fwait
scas
inc
sbb
mov
mov
xor
pop
push
dec
test
jb
andb
jnp
fadds
int3
sbb
xchg
sbb
enter
adc
mov
push
outsb
mov
loopne
leave
pop
call
aam
jp
lock
jge
loope
cmp
add
dec
mov
mov
add
or
scas
and
adc
cmp
cmp
add
push
int3
add
pusha
cmp
rolb
mov
dec
inc
mov
testb
and
pop
inc
jge
jne
mov
lahf
or
movsb
scas
and
fists
jne
test
adc
lock
pusha
and
add
mov
and
divb
xor
mov
dec
or
adc
or
or
fistpll
jecxz
repnz
jae
push
and
adc
or
cwtl
pop
imul
sbb
adc
lock
pop
push
push
push
cmpsb
rcrl
or
add
sbb
inc
xorl
adc
cld
pop
add
mov
xor
or
int3
out
enter
in
or
ret
add
ror
xorl
xorl
ss
movsb
push
ret
hlt
xchg
xor
inc
fadds
add
push
and
sarb
and
push
cmp
adc
xor
xor
scas
pop
mov
stos
inc
fs
jecxz
lea
xor
dec
lods
add
inc
add
pusha
xchg
and
push
or
sbb
fisubl
rorl
and
imul
aam
cmp
adc
push
pop
nop
fildl
in
xchg
dec
rep
popa
std
ss
in
dec
cmp
enter
cmp
mov
dec
add
mov
out
mov
movb
das
jecxz
test
pop
adc
test
push
ret
sub
cli
mov
add
xchg
insl
fninit
dec
dec
aam
cmp
test
repz
jp
jne
cmp
mov
mov
cmp
push
test
dec
pusha
arpl
mov
mov
imul
lock
and
jne
jg
out
dec
daa
add
jnp
mov
adc
jnp
sub
js
jmp
or
add
push
pop
mov
mov
add
xlat
cmp
sub
insb
call
push
ljmp
xchg
repz
jmp
testb
push
mov
add
add
sti
jnp
mov
mov
sub
and
mov
inc
es
sub
mov
or
mov
daa
or
push
add
pop
stos
mov
xor
gs
shrb
adcl
rclb
mov
pop
pop
sbb
cmc
pushf
pop
fcom
lods
xor
dec
icebp
sti
cltd
in
or
sbb
fcomps
rolb
fcomps
adc
inc
popa
mov
cmp
ret
jecxz
enter
mov
mov
push
xor
inc
pop
lods
popf
cmp
xor
call
push
inc
int
mov
push
dec
inc
mov
mov
addl
or
jg
sbb
cmp
cmp
adc
call
mov
pop
flds
xchg
cmp
rol
jne
lahf
sub
pop
in
sub
stos
mov
test
or
test
xchg
sub
push
arpl
sub
into
mov
mov
mov
outsl
cmpl
xor
js
pop
xchg
mov
xor
jmp
lock
sbb
dec
dec
pushf
aaa
xchg
adc
cmp
in
adc
push
out
out
sub
shlb
and
jge
ja
dec
push
ljmp
mov
sub
adc
xor
mov
pushf
sub
sbb
cli
mov
or
pop
xor
or
xchg
jg
or
and
dec
or
jecxz
out
pop
arpl
and
xorl
add
push
lods
push
sbb
dec
lods
cld
popf
ja
mov
dec
push
popa
add
sbb
int
push
push
push
push
push
call
cmp
inc
push
push
jmp
mov
rcrl
scas
add
xor
and
pop
mov
mov
sub
es
or
dec
jae
sub
or
shr
or
add
mov
push
rorb
inc
cltd
push
mov
pop
test
addl
push
push
sub
movsb
pop
add
clc
xchg
jbe
inc
or
sub
loopne
mov
xchg
out
cvtps2pd
das
jge
fsubrl
inc
pop
cmp
xorb
jno
icebp
xor
cmp
lock
rcrb
xlat
push
test
mov
pop
arpl
mov
dec
nop
add
mov
cwtl
inc
mov
cwtl
shrb
aas
push
mov
sub
rolb
push
pop
xchg
int3
mov
shr
push
push
and
mov
sti
das
push
mov
push
push
push
vmread
xchg
stos
push
leave
mov
dec
or
sti
inc
dec
xor
or
insl
shl
push
mov
cmc
mov
pop
sbb
sub
sub
aam
push
pand
or
mov
inc
mov
inc
sbb
jl
cmp
cmpsl
mov
mov
fidivrl
or
sub
mov
mulb
jne
xlat
cmp
push
ficoms
enter
xchg
fstpl
sub
or
and
and
lods
fldt
pop
or
rclb
repnz
fcoml
daa
rcrb
add
add
nop
andb
push
insb
call
inc
cmp
or
faddl
test
push
loop
hlt
or
into
cli
xor
cmp
mov
imul
stc
inc
cmp
mov
sbb
lret
and
repnz
and
cld
mov
push
push
inc
into
adc
add
fwait
movsbl
dec
pop
pop
mov
cld
sti
rep
jecxz
loope
movsw
push
cld
movsb
jg
dec
xchg
or
mov
fnstsw
std
shr
mov
inc
mov
adc
movb
add
push
lea
sbb
xor
push
or
mov
mov
jle
cmp
lret
add
movsbl
xor
loop
xchg
mov
ss
push
roll
xchg
jb
and
push
cld
je
ret
adc
imul
lods
leave
icebp
xlat
push
cmp
mov
or
adc
outsl
or
ss
mov
lods
outsl
sub
scas
sbb
add
mov
or
subl
mov
mov
and
push
in
insb
or
cmp
mov
xor
xor
pushf
inc
negb
inc
xor
mov
idiv
cmc
ss
mov
shll
lea
cmp
push
push
das
sbb
lock
lock
test
ret
dec
ja
pusha
xchg
inc
jle
in
pop
ror
xchg
or
and
cmp
lahf
push
add
dec
dec
add
dec
pop
or
or
aaa
aaa
aaa
mov
or
jmp
or
jno
jmp
push
jmp
aaa
aaa
aaa
aaa
por
jmp
adc
pop
adc
push
aaa
aaa
aaa
aaa
adc
dec
adc
dec
adc
aas
aaa
aaa
aaa
aaa
pop
jmp
sbb
xor
jmp
aaa
aaa
aaa
aaa
sbb
es
and
pop
aaa
aaa
aaa
aaa
pop
jmp
and
or
jmp
mov
adc
fimull
push
xchg
rol
popf
push
mov
and
je
rcrl
xor
movsl
cld
fistl
sahf
cmpsl
stc
cmp
add
sahf
out
and
sub
sahf
out
inc
inc
dec
push
sahf
out
sahf
push
pop
pop
imul
js
addb
xchg
xchg
fwait
mov
movsl
or
add
and
or
or
test
decl
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
inc
gs
push
or
pop
enter
jle
pushf
test
push
dec
fbld
cmp
xor
cmp
jle
js
out
inc
mov
inc
fcoms
imul
sbb
test
dec
add
add
push
pop
jae
sbb
test
outsb
push
push
jae
mov
mov
add
xlat
xchg
lock
dec
or
inc
sbb
lock
sub
mov
push
cmp
inc
cmp
jbe
adc
pushaw
push
jno
dec
popa
dec
mov
test
nop
push
xchg
lds
fwait
and
filds
push
jmp
inc
push
push
sub
inc
pop
jnp
pop
pop
pop
jne
dec
push
dec
jl
fisttpl
mov
xchg
test
mov
lahf
fwait
push
add
int3
dec
push
push
je
jbe
inc
inc
dec
xlat
xor
fidivrl
pop
subl
in
jns
add
inc
inc
push
adc
pushf
aam
adc
sub
test
inc
clc
push
repnz
fisttpl
out
sub
add
inc
inc
or
enter
rcl
push
lods
push
or
ljmp
mov
ja
sbb
add
add
add
or
and
call
mov
push
and
push
sbb
add
xchg
sbb
call
outsl
adc
dec
pop
mov
adc
adc
in
pushf
lahf
pop
and
shll
push
xlat
fsubs
sbbl
jecxz
test
mov
xor
adcb
jle
push
xor
and
dec
je
sub
insb
frstor
xor
push
ss
test
mov
andl
push
pop
int3
add
test
pop
ja
xchg
sahf
sbb
add
cli
pop
loopne
or
popa
fwait
js
mov
ljmp
insl
sub
mov
jmp
mov
jne
and
adc
jno
stos
daa
mov
jo
push
xchg
ds
jbe
aad
adc
inc
lock
mov
add
push
mov
jge
fcoml
mov
movsb
add
aas
testl
xor
xchg
je
dec
sahf
inc
ds
ret
lahf
cld
push
mov
adcl
je
mov
bound
xchg
clc
sbb
push
xor
xor
ja
mov
adc
subb
or
and
rclb
xor
lret
adc
mov
or
js
out
std
and
lods
cltd
js
and
adc
mov
rol
mov
dec
sub
inc
out
outsl
or
testl
xchg
xchg
mov
mov
mov
xchg
cmpsb
push
xchg
add
xchg
and
popa
or
in
sbbl
push
mov
pop
js
loope
int3
loopne
dec
mov
mov
or
push
leave
adc
xorl
test
daa
shr
dec
push
sbb
mov
add
xor
daa
push
dec
call
xor
cmp
inc
lcall
aas
mov
or
push
or
sub
or
adc
ret
ja
arpl
sub
pop
cmp
sti
mov
add
sub
js
outsb
clc
add
aam
or
push
jmp
add
movsb
scas
mov
push
push
adc
add
in
test
ja
stc
dec
flds
inc
enter
fsubrs
mov
leave
push
push
add
scas
rclb
fs
scas
pop
push
stos
push
jl
mov
push
out
lods
push
add
rcrl
sub
add
sbb
xor
sub
fstl
mov
mov
xor
ret
lahf
call
pop
or
dec
xchg
lahf
push
shrl
inc
je
cmp
xchg
push
adc
adc
dec
jp
ret
js
daa
push
push
add
cmpsl
mov
mov
mov
sub
xchg
cmp
add
call
xchg
nop
leave
shlb
leave
iret
mov
pop
jnp
jae
xlat
pushf
sub
loopne
xchg
in
or
add
push
adc
cmp
cmc
jge
lods
icebp
add
ret
adc
nop
sub
xor
adc
sub
rorb
xchg
sub
mov
add
xchg
pop
subl
mov
aaa
leave
xchg
adc
adc
add
je
or
push
and
clc
xorl
ret
add
fisubrl
inc
or
xor
or
jne
mov
int3
push
seto
mov
push
fs
xchg
jl
sub
sub
jne
movb
cmp
and
mov
jmp
je
or
ret
cmp
xchg
add
cmpsb
pop
divl
leave
movsb
andl
add
in
data16
sbb
dec
xchg
push
push
in
pop
dec
cmp
clc
fimuls
fs
or
ds
inc
add
insb
inc
jns
pop
inc
frstor
addb
adc
mov
dec
xchg
cwtl
add
pushf
and
xchg
fs
lret
test
or
cmp
xchg
je
mov
mov
xchg
push
xchg
les
int3
adc
xor
aam
loopne
and
add
inc
cs
test
lret
pop
mov
add
inc
mov
add
add
xor
lar
push
push
ret
setb
xchg
cvtdq2ps
or
jbe
or
mov
inc
or
push
cmp
jl
push
pop
mov
sub
lea
xchg
inc
mov
add
jnp
dec
pusha
push
or
adc
stc
dec
sbbl
push
jne
out
sub
ljmp
jmp
cmpsb
call
and
add
sti
adc
sbb
mov
jmp
out
xor
jo
add
sbb
mov
mov
pop
sti
cmp
je
mov
and
and
mov
sub
shll
mov
in
lahf
xor
cmp
fisttps
xor
das
sub
lds
cmp
daa
insb
je
js
xchg
int
mov
sbb
push
fwait
das
cltd
dec
lds
or
xchg
xchg
sub
stos
andb
xchg
push
sub
pusha
or
cmp
jge
cld
pop
or
inc
push
hlt
cmp
jl
cmp
jle
push
ret
mov
and
fiadds
mov
imul
outsb
movsb
jno
xchg
xor
hlt
mov
lea
push
rol
pop
add
push
sub
ds
or
pop
lods
pop
pop
push
cld
add
cld
adc
adc
pop
inc
js
and
inc
pop
inc
cmpsb
push
shll
dec
jbe
jbe
or
adc
cmp
push
loopne
fsubs
in
jge
push
mov
sub
mov
mov
sahf
lock
xchg
movsl
dec
push
jge
or
push
jne
loope
pop
sbb
xchg
or
mov
add
and
out
lret
adc
xor
inc
or
mov
xchg
in
call
dec
add
icebp
andb
arpl
adc
shr
and
leave
rclb
call
xchg
dec
cs
test
xchg
clc
jns
cli
xor
int
loope
lods
cs
jge
lahf
loopne
add
bnd
xor
sub
call
pop
inc
or
xor
sub
test
mov
aas
jne
push
dec
addb
xor
adc
pop
xchg
scas
push
xchg
or
fnstcw
dec
movsl
popf
lods
adc
loopne
or
fiaddl
sahf
dec
cltd
jecxz
ss
mov
dec
mov
je
push
pop
call
jno
xchg
cmp
shlb
loope
loop
adc
xchg
cmp
mov
or
or
xchg
push
push
jmp
sbb
sbb
fistpll
or
jmp
inc
xor
test
scas
cmp
rolb
add
imul
add
scas
dec
cwtl
loope
lds
mov
jo
and
mov
pop
add
push
inc
es
lds
sbb
rep
pop
aaa
dec
int3
loope
scas
cltd
or
test
xchg
jno
inc
mov
jge
scas
shl
sbbl
push
push
push
gs
sbb
jae
fnstcw
outsl
xchg
movsl
insb
popa
mov
mov
mov
sbb
ja
lea
or
subl
ss
or
icebp
jno
pushf
inc
test
xor
sub
inc
adc
dec
icebp
mov
inc
fwait
aaa
inc
sbb
add
push
scas
fcoms
or
push
jmp
jg
jle
mov
pushl
std
decl
mov
pop
in
lret
and
add
es
mov
pop
add
into
loopne
ds
das
or
imul
adc
pop
ja
xchg
or
and
ss
dec
loopne
and
sbb
into
cmp
test
jbe
or
jne
mov
adc
into
popf
push
hlt
ljmp
jbe
lods
add
ret
inc
jle
clc
mov
and
mov
or
lock
popf
or
jns
popa
add
mov
test
rol
push
cmp
mov
adc
adc
cs
sbb
push
pop
push
jg
cmp
lret
pop
mov
mov
sub
orb
leave
inc
sbb
movsl
dec
repz
add
inc
movb
lahf
rorb
gs
dec
ss
jle
mov
jae
lock
in
arpl
xor
insl
fimuls
pop
xor
nop
mov
and
add
in
xchg
scas
gs
xchg
cmpsl
jp
xchg
push
add
mov
cmp
or
inc
push
jnp
leave
ficompl
mov
pop
pop
stc
addb
add
push
and
xor
xor
jbe
test
push
pop
xor
and
add
or
dec
in
lea
mov
xchg
push
push
sub
inc
push
inc
pop
add
sbb
xchg
xchg
jecxz
pop
gs
test
xchg
aad
leave
repz
fildl
or
aad
mov
push
dec
push
in
and
fs
push
test
pusha
add
fs
pop
ret
fwait
sub
lods
fdivl
inc
movsb
imul
jl
mov
mov
mov
push
mov
pop
add
or
std
faddl
fstl
fldz
fcomp
ffreep
add
mov
stos
arpl
sub
fsubr
pop
faddp
cmp
push
ds
adc
mov
cmc
adc
addr16
clc
or
sbb
rclb
xchg
inc
push
mov
pop
hlt
and
adc
hlt
pop
hlt
and
sub
jl
cmp
ds
jne
hlt
or
outsb
xor
jmp
loop
jmp
cmpl
es
mov
pop
lcall
ss
icebp
das
mov
daa
sbb
mov
std
xchg
rcr
imul
push
sub
mov
mov
jmp
fldl
cmp
mov
inc
sahf
and
ljmp
arpl
push
test
cmp
jno
mov
nop
push
push
je
adc
jne
mov
imul
inc
fbld
cmpl
pop
adc
inc
or
ja
mov
and
jmp
cmpb
lea
sbb
mov
lcall
shl
jle
cmpsl
fimuls
enter
jmp
push
int3
loopne
shr
dec
mov
imul
lahf
mov
rol
popf
in
out
inc
imul
push
or
ljmp
decl
mov
push
test
or
sub
leave
inc
or
add
inc
pop
stc
pushf
cmpl
sarb
mov
ss
sbb
xlat
dec
or
pop
mov
inc
inc
into
enter
test
mov
frstor
and
push
pop
adc
sbb
out
and
jne
cli
sbb
jo
push
push
loope
mov
add
xor
lds
push
pop
push
into
and
or
dec
fdivrl
rolb
rclb
ret
ss
je
shrb
mov
push
popf
mov
jge
inc
lret
sti
fs
out
push
lods
and
pop
sub
add
cs
imul
jle
inc
add
jb
or
aaa
inc
insb
mov
push
jne
push
push
call
inc
pop
pop
inc
call
enter
add
push
sub
push
or
dec
pop
jb
cmp
sarb
or
xor
or
div
loopne
in
mov
ret
adc
mulb
mov
inc
fmuls
mov
xor
jo
jno
and
and
testb
cmpsb
test
xchg
or
das
lret
push
loop
jecxz
popa
jecxz
pop
testl
imul
add
bound
xlat
mov
inc
lock
xchg
jae
or
sbb
insl
or
dec
sub
mov
rorb
xchg
dec
sarb
and
dec
sbb
pusha
or
push
sar
stc
add
popf
rolb
pop
mov
test
ud2
jge
cmp
mov
cwtl
out
cmpsb
xchg
jo
xor
cmpsl
adc
pop
andb
rcrl
add
lret
add
sub
ficomps
pusha
and
imul
add
mov
aam
pop
or
adc
pop
mov
pop
sbb
lock
fidivl
sbb
push
jmp
add
push
pop
xor
xchg
dec
jle
mov
xor
mov
rorl
mov
ja
adc
in
mov
pop
rolb
pop
ja
xor
lret
add
or
pop
pop
add
ss
mov
add
addb
scas
adc
mov
test
les
xchg
push
cmp
jb
ja
pusha
ret
jne
jae
scas
sub
movsl
jbe
popa
pop
jbe
adc
xor
sbb
push
push
and
nop
mov
add
inc
lcall
or
popf
jne
out
mov
push
push
dec
mov
push
mov
adc
lods
dec
cld
inc
inc
test
or
movsb
add
pop
add
push
mov
lock
adc
leave
mov
xlat
sbb
xchg
and
and
jno
mov
and
push
xor
and
fsubl
loop
pop
std
dec
mov
inc
push
call
jmp
or
loope
xchg
or
test
dec
pcmpeqb
adc
pop
push
je
dec
popa
sub
mov
lods
jae
adc
pop
jae
fidivrl
mov
dec
pop
fisubs
or
sub
stc
push
mov
pop
cltd
jp
inc
in
or
icebp
mov
or
push
movsb
add
pop
jb
test
les
int
lock
nop
inc
das
sub
push
mov
push
dec
aas
leave
test
sbb
jb
jo
movsb
add
and
mov
xlat
lea
fdivs
loop
in
orl
enter
enter
js
mov
pop
push
mov
bound
adc
mov
adc
or
je
insb
or
sub
mov
adc
adc
pop
shlb
or
aad
fsubs
popa
or
xchg
adc
add
lods
inc
sbb
loope
xor
dec
xor
aam
inc
dec
fidivrl
insl
faddl
inc
nop
push
add
in
mov
mov
xchg
pop
fwait
or
sub
xchg
mov
or
in
negb
adc
call
add
pop
add
mov
dec
add
dec
dec
pop
push
loopne
negb
cmp
xor
push
or
and
in
cmpsl
movsl
sub
subb
inc
jbe
sub
xor
mov
pop
out
fiadds
rolb
mov
repz
cvtps2pd
fisubs
sbb
dec
mov
xor
mov
jge
dec
dec
mov
sbb
jg
adc
lods
fists
cltd
into
roll
or
jo
mov
jle
fmull
rep
add
outsl
test
and
push
add
inc
push
pop
sub
inc
pop
push
pop
sub
mov
dec
fildl
sahf
mov
orb
loop
and
movsb
lock
lahf
mov
push
push
rcrb
jno
dec
and
cmpsl
push
fbld
icebp
add
ficomps
aam
popa
add
out
aaa
mov
push
lods
mov
nop
iret
sbb
and
push
pop
addl
outsb
adc
test
adc
jnp
inc
add
lock
insb
hlt
push
dec
push
ret
mov
lods
leave
movhps
shrb
xchg
andb
mov
jb
fwait
loopne
push
fwait
xchg
pop
pop
and
lret
xchg
clc
jle
adc
into
push
push
xchg
mov
mov
cltd
shrb
jb
cmovbe
or
xchg
push
add
loopne
cli
int
loop
mov
fs
mov
dec
pop
lea
sub
cmp
sub
add
xor
repnz
jmp
mov
push
pop
xchg
xor
add
enter
jae
nop
and
test
in
inc
add
subb
in
push
incl
and
nop
push
in
mov
and
repz
and
xor
clc
nop
fistpll
mov
jle
lds
adc
in
or
lahf
mov
rcrl
ror
push
stos
test
testb
dec
or
fsubrs
xchg
es
or
fadds
out
push
ficoms
call
test
push
mov
xchg
test
or
sub
nop
lret
aaa
adc
push
popf
push
push
js
and
xchg
sub
subl
xchg
adc
addr16
lods
push
nop
lcall
out
lcall
push
adc
add
and
outsl
dec
sub
mov
fcoml
inc
or
imul
or
repz
sbb
xor
push
xchg
jne
int3
mov
ret
rorb
xor
daa
icebp
push
adc
push
adc
pop
or
mov
or
subl
lret
sub
sbb
xor
xor
out
aaa
cmpsl
mov
aaa
adc
inc
or
mov
pop
out
and
sbb
fsubl
xchg
enter
pusha
pop
jo
add
sahf
out
xchg
imul
push
or
cmp
or
inc
cmp
addb
test
inc
addr16
sub
push
adc
dec
cmp
ss
insl
lods
pop
fdivl
and
imul
mov
lock
clc
dec
pop
xorl
xor
add
cmpsl
xor
gs
mov
add
push
mov
sarb
ljmp
dec
or
sahf
imul
fisubs
popa
subl
xor
or
popa
aad
dec
lods
pop
cmpsl
subb
lods
xor
in
mov
push
add
push
mov
int3
sarl
out
sarb
fwait
push
pop
cld
adc
inc
mov
lods
cmp
movsb
dec
mov
fmuls
xchg
mov
pop
xchg
lock
jmp
lret
test
push
xchg
adc
popa
push
mov
cmp
jge
add
or
imul
push
call
dec
inc
adc
mov
rclb
lds
push
xchg
jns
adc
mov
je
in
push
andl
test
shrb
ret
adc
push
lcall
mov
cwtl
in
repz
es
push
cmp
adcl
shlb
fwait
inc
cmp
inc
mov
add
rorb
int3
inc
call
shll
lret
or
ret
call
lcall
sahf
xor
or
add
cmp
call
call
cmp
jns
add
add
jl
test
cmpsl
or
bnd
or
jno
xchg
inc
jo
js
and
rorb
sahf
hlt
lea
xchg
lock
mov
mov
sub
movzbl
inc
outsl
cmp
testl
add
cmp
jge
add
inc
and
ret
das
pop
jo
lods
pop
test
sub
pop
shrl
cmpb
adc
jo
and
sbb
pop
sbb
add
cmp
or
add
test
insb
add
push
mov
xchg
xor
int
adc
in
pop
sub
sbb
das
sbb
xorb
lret
cmp
les
outsl
xor
movsb
and
mov
pop
inc
les
negb
sub
dec
and
cmpsb
xlat
hlt
or
bound
bound
pop
pop
sbbl
push
loopne
std
aaa
incb
test
mov
dec
cmp
je
or
je
in
imull
fsubl
cmpl
mov
inc
add
xchg
jle
mov
lea
adc
jnp
push
nop
lea
cmpsl
pushf
and
pushf
data16
test
fisubl
mov
jbe
lods
push
insb
clc
xchg
test
add
ljmp
lea
or
mov
lea
sbb
xlat
cwtl
pop
js
mov
jl
or
mov
call
pop
dec
outsl
adc
sub
pop
inc
ret
stos
mov
sub
sbb
int
push
mov
inc
pushf
nop
push
push
or
ja
jl
mov
je
or
movl
cmp
mov
mov
lea
js
test
stos
mov
test
or
inc
cmpsl
add
popf
mov
push
ror
insb
movsb
mov
dec
fwait
mov
popf
adc
cmp
add
lcall
out
jle
aaa
mov
test
out
fldl
int
cld
pop
cmpb
es
loope
push
popa
hlt
xchg
movsl
cmpsl
sbb
sbb
dec
cmp
enter
and
add
ss
xor
clc
adcb
std
stos
mov
outsl
movsl
les
sub
pusha
xchg
and
and
cmp
and
inc
test
in
adc
push
push
cmp
in
in
and
jbe
jne
shll
pop
sbb
jne
enter
cs
idiv
es
or
rcpps
movsb
sub
test
push
jne
pop
sbb
cld
clc
or
hlt
lock
cmp
std
mov
loop
xor
ds
push
push
nop
movsb
adc
inc
movzbl
cmp
jl
or
lret
inc
mov
inc
mov
fsubrs
lea
mov
jnp
and
aaa
call
push
and
into
pushf
add
lea
cmp
mov
pop
out
push
mov
push
push
xor
out
popa
and
pushl
pop
in
cs
xchg
mov
jb
mov
data16
in
sbb
lods
mov
push
cs
push
dec
xor
mov
xchg
movsb
pop
add
daa
mul
xor
mov
pop
inc
mov
inc
xor
loope
test
mov
adc
push
in
aaa
inc
nop
dec
and
enter
mov
test
mov
mov
cmp
insb
xor
std
and
add
cwtl
imul
fcompl
test
push
sbb
xor
mov
mov
jle
add
fldenv
add
sbb
test
xor
xchg
xor
and
xor
sub
mov
test
cld
xchg
xor
or
xchg
sahf
out
sbb
mov
push
push
jne
in
mov
jl
push
hlt
subb
sbb
fwait
sub
stos
fisubrs
adc
repz
out
add
pop
mov
push
mov
add
scas
and
push
fcomps
loopne
fdivl
jg
int3
dec
pop
enter
je
das
add
in
pop
adc
movsb
pusha
rol
into
testl
inc
pop
add
dec
sbb
loop
roll
cs
dec
xchg
loopne
loopne
and
and
in
sub
aam
mov
add
popf
adc
xor
mov
add
cwtl
sbb
mov
jecxz
dec
sbb
xchg
mov
pop
mov
mov
das
xor
and
inc
and
rolb
sub
push
pop
lret
jo
or
les
pop
sbb
mov
xchg
inc
out
dec
cmp
jge
mov
fwait
dec
pusha
adc
xchg
test
push
add
ret
xor
cmp
pop
testb
insb
dec
xchg
inc
pop
sub
or
jo
fidivs
push
leave
inc
sub
sub
push
dec
inc
xchg
or
ja
inc
push
inc
sub
sub
cmp
pop
xchg
xor
push
out
dec
mov
or
and
iret
insl
sbb
sbb
xchg
sbb
xor
pop
mov
rsqrtps
inc
or
sbb
adc
clc
mov
xorl
bound
pop
add
pop
sbbl
push
xor
subl
and
pop
nop
xchg
pusha
and
inc
ss
push
push
dec
add
mov
or
les
cmp
je
mov
jge
iret
data16
daa
rcrb
aad
ret
jg
mov
insl
xor
push
or
push
mov
inc
fildl
xchg
lea
mov
mov
sbb
jne
test
pushf
jge
test
std
cs
jg
jg
push
add
mov
adc
adc
mov
ret
cmp
push
sti
imul
bound
shll
xchg
xchg
lret
inc
jmp
inc
fs
sub
mov
test
pop
inc
cmp
xchg
inc
icebp
add
loope
mov
push
jl
or
push
jmp
test
xchg
repnz
cmp
movsb
addr16
sub
xor
fisubl
les
stos
arpl
add
lea
daa
ret
and
add
mov
mov
test
and
jp
pop
mov
add
in
adc
sub
push
mov
test
inc
in
and
push
movsb
xchg
push
in
pop
or
popa
cmpsl
aam
pop
in
mov
repnz
ss
add
dec
pop
in
orl
xor
rcrl
xor
dec
xchg
dec
xlat
xchg
mov
xor
cs
mov
or
adc
orb
shlb
call
push
jne
out
push
inc
dec
and
mov
xorb
addr16
cs
cltd
stos
rclb
xor
and
stc
rol
add
insl
mov
enter
scas
outsl
fsubrs
les
xchg
aam
inc
ret
daa
insb
and
push
and
xor
dec
les
je
shlb
sub
cs
imul
dec
clc
or
je
ret
and
je
ficompl
mov
jle
ret
sub
out
sbbb
nop
or
cmpsb
xchg
xchg
movsb
add
test
cltd
push
pusha
xchg
sahf
mov
mov
push
mov
aaa
xor
sub
add
adc
push
aam
aad
add
or
xchg
dec
mov
addb
inc
sbb
icebp
lea
arpl
js
push
inc
jge
fnstcw
or
dec
jne
and
mov
push
mov
adc
cmpsl
jo
xor
clc
jp
cs
lahf
je
xchg
mov
push
clc
repz
cmp
inc
inc
xor
mov
cmp
gs
pop
cmp
xchg
inc
fs
inc
ret
leave
inc
add
gs
les
add
sub
pop
xor
int3
insb
or
in
shl
push
mov
xlat
xor
mov
cmp
cmp
out
cltd
stc
inc
mov
in
add
dec
pop
sub
shrb
push
fistpl
les
data16
dec
cmp
in
iret
lcall
ret
jne
jbe
imul
insb
inc
loop
adc
jle
inc
inc
sbb
mov
fcoml
insb
xchg
dec
out
adc
dec
nop
sbb
add
ds
mov
xchg
rorl
mov
loopne
lcall
dec
and
or
rorb
add
leave
fsubl
sar
rol
out
or
cmp
test
xor
jb
lock
pushf
push
not
bound
popa
dec
loop
test
mov
movl
fmull
cmp
jbe
add
xchg
jo
xor
dec
mov
test
pop
add
inc
stos
pop
xor
ja
inc
add
xor
cmc
inc
or
xor
adc
xor
mov
inc
dec
add
mov
and
pop
test
adc
into
sahf
cmp
inc
pop
push
mov
or
push
jp
aam
adc
inc
enter
push
inc
push
jl
add
popa
call
scas
push
jge
jp
sbb
scas
adc
jne
lret
pop
mov
push
jb
cwtl
adc
add
das
mov
push
ds
xor
out
xor
inc
and
xchg
es
fiaddl
shlb
sub
addr16
lahf
and
or
loope
and
ret
or
or
sub
in
sbb
mov
push
add
add
decb
lret
negb
add
call
cmpsb
fldl
test
sahf
jo
mov
adc
mov
mov
adc
pop
daa
jp
cmovg
and
xor
subl
lea
sbb
push
dec
push
adc
es
or
std
rolb
lock
lods
rorb
adc
and
data16
adc
sbb
add
add
or
sar
sbb
ficomps
push
pop
inc
cs
pop
add
pusha
fstps
and
xor
adc
push
push
add
ret
or
and
js
sub
jmp
mov
loop
and
ss
or
sub
jns
lods
adc
xor
out
dec
or
dec
decl
adc
inc
xchg
jp
mov
ret
cmp
xor
push
scas
or
pop
jo
cmp
loopne
add
or
aam
scas
das
add
mov
outsl
mov
pop
loopne
out
sbb
jmp
push
and
lret
or
insl
and
sub
push
xchg
or
sbb
mov
shll
ljmp
test
mov
rcll
mov
inc
mov
push
mov
push
mov
xchg
adc
int3
xor
or
repnz
or
es
fisubrs
sub
in
dec
adc
cmp
cmp
fsubrs
push
pushf
mov
iret
les
dec
pop
and
clc
xchg
or
mov
mov
fisttps
or
insl
jne
test
dec
adc
mov
aam
je
jmp
push
cmp
jbe
inc
sub
cld
pusha
mov
cmp
push
xchg
shlb
and
sbb
lcall
pop
sbb
stc
push
clc
or
js
mov
cmpsl
dec
and
dec
push
xchg
cmp
and
and
mov
insl
inc
mov
push
sahf
add
adc
xchg
sub
loopne
mov
dec
notl
std
push
test
inc
mov
lods
mov
in
mov
insl
or
pop
popa
cs
daa
popa
lods
mov
push
cwtl
sub
js
push
pushf
dec
dec
adc
movsl
stos
cmp
adcl
mov
inc
popa
mov
popa
xchg
xchg
xchg
inc
and
lods
mov
jbe
sub
mov
out
mov
ljmp
imul
mov
xchg
lret
mov
frstor
dec
push
shrb
and
daa
adc
push
enter
sbb
test
ss
loopne
rolb
mov
mov
fcmovb
movsl
or
addr16
xchg
jo
jge
add
mov
cmp
call
pop
mov
lock
push
push
sbb
jge
inc
call
adc
sub
inc
loop
add
adc
lret
sbb
sub
dec
mov
push
lods
dec
xor
mov
add
mov
in
pusha
and
mov
mov
add
push
ja
push
push
dec
mov
pop
add
jmp
scas
mov
pop
fwait
sti
push
int
lea
loop
call
mov
stc
call
lock
popf
ret
les
push
fwait
mov
outsl
and
sbb
bound
push
and
xchg
sub
cmpl
sbb
dec
sub
adc
cmp
dec
mov
xchg
fwait
and
rorl
jmp
push
out
mov
adc
clc
or
mov
mov
pop
jbe
shll
sbb
and
jno
pop
int3
dec
test
sti
imul
test
mov
repz
xor
jnp
pushl
push
xchg
insb
cs
add
cmp
fwait
or
push
cli
adc
fs
movsb
inc
sub
push
ds
adc
insl
stos
fldenv
loope
sbb
push
repnz
mov
testl
arpl
rorb
add
inc
or
adc
imul
cmp
xchg
sub
je
jp
sub
orb
dec
xchg
cmp
outsb
or
je
jbe
inc
mov
icebp
jg
aad
ja
dec
je
or
and
adc
gs
into
icebp
pop
cmp
daa
fsubr
jb
or
xor
lahf
add
mov
adcb
imul
nop
push
cmc
imul
ljmp
dec
int
xor
cltd
and
mov
shrb
pop
push
pop
add
lods
fsubl
ficoml
leave
clc
outsb
push
fstpl
mov
fs
and
cmp
aaa
mov
inc
call
dec
adc
adc
in
sub
adc
stos
or
dec
aaa
xchg
test
pushf
loopne
add
lahf
andb
push
fidivl
push
dec
outsl
push
mov
pop
sbb
imul
adcl
pop
sbb
xchg
add
pop
add
pop
mov
js
add
push
in
lahf
jo
add
add
pop
adc
mov
lods
popf
mov
inc
je
fwait
and
cmp
loope
sbb
lock
hlt
jne
cld
push
dec
sub
push
daa
dec
mov
adc
sub
inc
rclb
lods
and
push
add
push
push
mov
xor
xchg
push
sbb
dec
mov
cmp
adcb
pop
dec
loope
subl
imul
sub
mov
sbb
cmp
sti
out
xor
inc
ret
or
iret
rorl
imul
movsb
insl
fsubl
and
pop
hlt
and
sub
ljmp
or
int3
and
mov
dec
jl
adc
inc
or
cs
mov
jl
push
dec
movl
ss
pop
je
nop
pop
inc
push
loope
dec
dec
stos
clc
rorl
mov
or
pop
es
dec
inc
or
pop
add
aaa
ljmp
jp
cmp
nop
sub
xchg
push
or
mov
pop
dec
sub
add
xchg
rcrb
xor
and
and
mov
addr16
mov
inc
mov
cwtl
push
xchg
sarl
push
sub
push
xchg
cmp
lahf
lds
sbb
mov
sbb
imul
sub
js
mov
in
add
outsl
dec
out
cs
scas
mov
jmp
mov
adc
jns
push
adc
cld
sub
test
sub
push
push
aam
movl
add
adcl
repnz
pop
or
and
or
ds
ret
push
add
pop
sub
push
movb
mov
mov
jne
test
mov
mov
or
jecxz
add
jg
movsl
pop
push
out
sub
cmp
pop
mov
cltd
ljmp
stc
addr16
mov
rorl
repnz
lret
movl
mov
or
and
adc
jmp
andb
mov
fidivrl
pop
xchg
les
pop
mov
jne
in
sbb
pop
xchg
sub
inc
or
jns
sbb
jecxz
lret
loope
push
pop
lret
pop
dec
ficoms
inc
inc
push
cmpsl
push
daa
cwtl
mov
dec
adc
xor
imul
sarb
imul
push
adc
and
aam
sbb
push
jl
sarl
mov
mov
push
inc
inc
xor
add
ja
mov
jl
push
in
add
inc
loop
aas
lcallw
or
xchg
mov
bound
cmp
or
inc
push
sbb
lahf
dec
adc
loop
movsl
shrl
enter
and
mov
add
jbe
cltd
jmp
cmp
pop
loopne
fwait
in
jmp
inc
aam
jno
push
adc
push
push
or
dec
add
bound
push
jecxz
enter
add
fdivs
pop
adc
shl
xor
cmp
pop
and
xor
stc
data16
in
add
je
push
enter
pusha
or
xor
fildl
out
pop
adc
push
mov
lret
test
cmp
shrb
push
xor
xchg
movsb
jecxz
cmp
pop
call
push
rcll
out
and
cmpsl
ret
addb
adc
jbe
push
int3
call
or
dec
inc
sbb
fwait
js
cmpsb
inc
testb
icebp
enter
or
adc
rol
or
xchg
sbb
cmp
mov
pop
inc
xchg
push
cmp
hlt
jge
adc
test
adc
sbb
dec
rorl
adc
adc
iret
mov
mov
mov
test
push
lds
insb
add
add
stc
inc
pusha
cmp
dec
loopne
icebp
adc
add
repz
add
loopne
sbb
inc
push
in
or
daa
loopne
xor
push
xchg
ss
inc
int
in
pop
mov
shlb
adc
lods
shufps
add
mov
fisubs
repnz
rolb
dec
xlat
fsubrs
ret
imul
int
aaa
lods
push
mov
shlb
rol
mov
add
enter
test
pop
mov
xor
jp
jp
push
fdiv
cmp
add
cmp
or
mov
adc
cmp
mov
ja
push
sbb
in
mov
push
sbb
mov
cli
sbb
lea
repnz
in
es
or
mov
dec
jg
jmp
inc
push
mov
ror
xor
shr
xor
sub
jnp
mov
decl
or
icebp
add
add
add
mov
shl
stc
pop
adc
fs
or
fbstp
push
or
and
xor
add
add
cmp
add
add
push
inc
scas
push
mov
ror
cli
in
stc
lcall
jge
xor
and
and
xchg
adcl
xor
xchg
mov
repnz
repnz
sub
fmull
mov
inc
sub
push
or
xlat
ret
push
mov
add
add
add
adc
and
call
sub
rcl
call
call
dec
xor
mov
cli
mov
rol
rol
out
inc
lcall
xor
lret
dec
push
mov
nop
cmpsb
imul
push
in
shl
in
add
adc
push
cmp
enter
or
add
mov
pop
aaa
push
scas
sbbl
cs
push
xor
das
cltd
call
loopne
pop
dec
rcl
in
in
adcb
xor
pop
cmp
aam
sbb
xor
gs
xchg
dec
or
int3
into
in
mov
or
push
xor
and
popf
dec
sti
in
and
out
iret
or
data16
stos
xor
sbb
add
pusha
cmpsb
pusha
pop
inc
adc
loopne
inc
mov
inc
jo
je
or
jo
ficoms
cmpsb
inc
mov
jl
dec
shll
adc
push
lock
pop
iret
loop
mov
add
add
jle
fadds
pop
jbe
call
sub
ret
lret
push
clc
jp
push
cmpsb
bnd
add
gs
fdivrs
imul
and
psllq
inc
mov
mov
xor
cli
nop
or
jmp
aam
dec
shll
aaa
cmp
adc
xor
sub
mov
xor
in
push
inc
shr
rolb
rcll
inc
aaa
cli
xor
xchg
add
fcom
aaa
or
inc
or
cmpsb
sub
dec
loopne
in
pusha
in
pop
lahf
jo
add
movsb
loope
inc
push
sbb
adc
xor
and
nop
data16
or
xchg
pusha
push
xor
cwtl
add
cmp
and
and
adc
or
xor
push
and
pop
sahf
push
add
or
push
or
and
insb
pop
lcall
pusha
xchg
pop
xchg
pusha
pop
scas
mov
xchg
movsl
mov
inc
in
rorb
sbbl
cwtl
inc
pushf
loop
in
sbbl
lret
cmpsl
je
dec
dec
enter
dec
icebp
stc
stc
adcl
adc
out
les
xchg
inc
dec
jb
add
fmuls
adc
push
cltd
cmpsb
imul
jns
jns
adc
in
add
and
sbb
pop
cmpsb
push
jg
mov
aas
pop
add
sub
mov
inc
push
mov
inc
push
cmp
sbbb
inc
aaa
sub
sbb
cmp
pop
cld
sub
ljmpw
pop
xor
pusha
adc
addb
lcall
add
pop
push
and
sarb
sbb
rol
or
mov
adc
fst
push
add
add
insl
fidivl
mov
sub
and
mov
push
jmp
lea
push
sub
pop
mov
mov
ret
dec
or
mov
adc
ficomps
loope
aas
pop
add
adc
cmpl
mov
cwtl
sbb
adc
or
adc
in
fs
adc
sbb
fldt
push
jae
push
pop
fadds
rep
or
jle
xchg
lods
mov
or
pushl
fs
pop
loopne
ror
mov
cmp
sub
xchg
ljmp
mov
and
adc
test
inc
push
movsb
aam
and
aam
inc
nop
adc
sbb
push
aaa
in
movsb
rcrb
inc
add
dec
lea
sub
xchg
out
pusha
jmp
fdivl
mov
jge
repz
push
dec
push
mov
mov
inc
in
xchg
jne
sub
xchg
pop
add
or
sbb
push
xor
cltd
jns
inc
push
or
xor
xchg
loope
push
movsb
mov
stos
adc
sbb
pusha
mov
js
xchg
sti
jl
adc
or
fsubs
jae
mov
andl
dec
adc
mov
das
xchg
xor
jno
imul
mov
dec
add
xor
sub
mov
cwtl
and
jo
cwtl
loope
shll
inc
dec
test
sbb
push
mov
push
sub
nop
add
mov
pop
or
pusha
ljmp
call
sub
dec
andl
movhps
dec
pop
mov
movsb
pop
ret
dec
or
xchg
push
or
and
sti
sub
sub
or
rdpmc
dec
pop
fildll
mov
mov
shlb
sbb
dec
pusha
push
mov
lock
push
push
add
adc
push
xor
rcrl
mov
inc
cmp
sub
cmp
orb
movsbl
lock
add
fwait
or
push
aam
pop
outsb
mov
or
dec
add
add
xor
es
sbb
call
xchg
mov
push
movb
dec
inc
and
fadds
clc
xor
push
add
and
and
cmpl
or
hlt
insb
mov
sub
inc
sub
adc
mov
push
test
cmp
jns
jmp
xchg
gs
xor
push
pop
repnz
or
inc
jns
cmp
fiaddl
add
addl
inc
shll
sbb
fimuls
sub
rcrb
adc
cli
mov
mov
inc
jnp
sbb
xchg
cmpb
xor
test
jae
push
adcb
and
add
and
add
cltd
jmp
or
add
jge
call
xor
lock
or
or
or
testb
pop
aam
mov
or
insb
loopne
or
mov
pop
inc
mov
dec
and
adc
lea
ret
mov
mov
sub
dec
fcomps
aaa
add
and
or
mov
pop
add
daa
lods
in
stc
sub
mov
lock
sti
loope
and
mov
cmp
sub
add
or
push
dec
sub
imul
push
push
dec
addl
out
sub
mov
and
dec
ret
jbe
xor
rclb
fildll
fcoms
inc
std
pop
xor
scas
add
cmp
scas
push
xor
xor
adc
jmp
and
jnp
inc
sbbl
xorl
and
sub
mov
inc
movsb
lods
and
jb
out
jo
pop
es
lea
fdivs
push
dec
out
jge
fdivs
popa
xorl
pop
hlt
out
adc
cmp
enter
out
cs
push
pusha
orb
movsl
out
or
xchg
filds
aad
xchg
xchg
dec
push
mov
jo
aas
or
pop
mov
or
dec
add
sub
mov
pop
jne
dec
ss
testb
xor
nop
out
fistl
pop
data16
sub
mov
xchg
mov
ss
fdivrs
in
push
xchg
xor
inc
add
mov
inc
rcrl
xor
lock
cmp
stos
fsts
cli
idiv
push
adc
test
jbe
push
push
add
sbb
adc
hlt
pop
push
jae
loope
bound
xchg
sub
mov
jmp
pop
xchg
xor
jbe
push
xchg
push
les
add
xor
pusha
shrb
push
jb
inc
mov
sbb
mov
dec
jb
js
dec
pop
mov
xor
sbb
mov
sub
cmpl
notb
xlat
pop
call
int3
sahf
ljmp
sbb
inc
or
mov
lahf
dec
pop
pop
add
rcrl
cmp
ret
add
dec
xlat
push
jge
fcmovnbe
pop
aad
mov
ret
mov
xor
enter
lods
mov
jno
and
adc
and
xor
pop
pusha
lock
mov
dec
stos
lods
and
fadds
dec
sub
cmp
lret
jbe
add
or
sub
add
mov
mov
push
mov
outsb
fs
push
call
ljmp
xor
sub
adc
hlt
mov
pop
mov
shll
adc
dec
bound
xchg
dec
push
mov
cmp
push
scas
cmpl
jmp
pop
pushl
push
enter
sarb
push
pop
lock
push
lret
data16
xor
mov
add
mov
push
xor
and
sbb
pop
add
sbb
fidivl
add
insb
add
mov
mov
push
inc
jg
inc
dec
and
rcr
inc
add
popa
jb
jae
shlb
pop
out
push
push
enter
in
mov
xor
dec
pop
cmp
sbbl
or
sti
push
test
jae
sub
inc
je
dec
sbb
es
mov
sub
fdivs
jp
add
pop
scas
bound
dec
adc
dec
inc
and
inc
aaa
inc
inc
push
orl
add
pop
aas
bound
stc
ja
ja
orb
jne
push
cmp
jb
mov
push
mov
xchg
movhps
or
lock
daa
and
or
fs
pop
or
jmp
mov
pop
pop
mov
out
cmp
das
dec
cmp
data16
jge
xchg
nop
lods
sub
ret
dec
lahf
mov
jbe
mov
dec
cltd
shrb
mov
scas
nop
add
mov
cmp
cs
lock
cmp
jmp
lods
ret
mov
mov
pop
jp
leave
mov
or
das
loope
add
jo
mov
loopne
wbinvd
das
scas
mov
ja
pusha
fimuls
mov
inc
cmp
out
mov
movsb
mov
jl
inc
cmp
mov
aas
jmp
mov
sub
mov
out
adc
mov
aaa
in
mov
mov
adc
mov
pop
cwtl
xor
or
dec
mov
jne
mov
fmuls
sub
add
lret
add
xchg
mov
adc
adc
mov
xchg
fidivs
repnz
push
mov
add
add
imul
hlt
pop
push
jo
cmpsb
mov
cmp
je
mov
dec
repz
or
pop
push
mov
xor
and
movsb
xor
inc
cmp
or
sub
test
aam
out
ja
inc
test
adc
aaa
ret
push
xor
jbe
out
and
jns
sbbl
out
mov
push
push
data16
pop
or
push
out
or
popa
jl
sarb
loopne
cmpb
fdivrs
mov
fwait
or
popaw
push
push
push
jl
xchg
inc
add
push
arpl
jns
test
outsb
xorb
lds
pop
lret
adc
push
les
dec
and
fiaddl
cmp
sbb
loope
jnp
cmp
dec
sub
sub
sub
mov
comiss
aam
and
in
inc
xor
pop
jmp
inc
xor
mov
outsb
xchg
int3
insb
hlt
dec
add
or
or
fcmovu
add
shl
and
add
mov
enter
add
add
loopne
add
loope
shl
xor
mov
mov
or
movsw
pop
adc
fbld
mov
cli
mov
int3
jp
jge
mov
pop
mov
iret
push
fidivrs
pop
add
lods
and
popa
push
and
mov
sub
sub
cmpsl
fs
dec
add
or
push
inc
loopne
fs
dec
ret
sub
add
cmpl
movsl
fdivp
sar
mov
inc
pop
or
inc
dec
add
aas
and
das
cmp
cs
push
mov
sbb
and
mov
mov
mov
dec
daa
test
mov
inc
and
sbb
popf
add
xchg
pop
mov
adc
shl
icebp
or
adc
clc
dec
imul
cmp
lret
jb
pusha
stos
lds
add
mov
and
sub
imul
cmp
sbb
xchg
xchg
ljmp
dec
adc
adc
and
xchg
cmpsl
push
mov
jge
or
add
bound
push
insl
push
out
xchg
rclb
sbb
add
push
add
xor
xor
or
lds
cs
insl
in
mov
xor
inc
sbb
push
fildl
and
sbb
pop
sub
adcb
dec
xchg
mov
pop
cmp
inc
xchg
fsts
sub
in
sbb
xor
xchg
and
in
cmpsb
sub
imul
mov
test
enter
mov
mov
jbe
fmuls
jle
inc
ss
ret
push
in
jl
sbb
rorb
jbe
mov
out
ja
jmp
push
js
jbe
mov
jmp
das
testl
cmp
xorl
js
ss
cmp
push
add
add
les
inc
pop
sbb
or
dec
jo
stos
add
mov
pop
push
push
sub
adc
call
add
fidivrl
fsubl
in
pop
or
stos
in
aam
sub
sbb
pusha
mov
push
stos
xor
sub
fucomi
adc
and
lds
cmp
inc
pop
js
xor
mov
lret
push
or
xchg
xor
adc
in
dec
sti
inc
lock
sbb
mov
popa
outsb
nop
mov
adc
stos
insl
pusha
in
pop
ret
mov
or
pop
jmp
movb
jl
lea
inc
test
xchg
dec
ret
in
add
arpl
rcrb
insb
and
xor
in
pop
daa
dec
push
and
push
adc
dec
andb
dec
add
cmp
fisttpl
dec
pop
push
jns
jns
or
or
mov
sub
adc
int
sbb
mov
stos
cmp
iret
mov
jns
cmp
or
xor
inc
or
jo
adc
push
and
add
xor
test
scas
or
pop
imul
cwtl
aaa
push
gs
adc
sub
dec
ret
inc
mov
adc
mov
and
clc
test
add
aam
xchg
jo
mov
sbb
clc
add
int
bt
cmp
lock
jo
push
mov
mov
mov
or
test
jmp
call
push
clc
sbb
pop
je
mov
shrl
sbb
mov
push
sub
das
popa
dec
scas
mov
inc
cmp
or
inc
or
les
sti
movsl
in
jo
push
out
add
pop
cmpsl
ret
pop
pop
mov
pop
push
ret
negb
pop
mov
sahf
and
cwtl
push
lret
aam
xchg
pop
xchg
sarb
adc
insb
popf
adc
incb
insb
cmp
lods
test
push
int3
in
aaa
push
or
rolb
movl
cmpl
jne
sbb
mov
mov
nop
pop
or
mov
sub
sbb
mov
imul
outsl
xchg
cmpl
jle
jle
popf
add
mov
icebp
or
mov
pop
adcb
jl
pop
rolb
test
loope
jne
push
roll
adc
or
xor
push
das
sub
push
inc
mov
push
xor
and
or
mov
add
pop
imul
in
imul
je
cmp
mov
insb
mov
or
repnz
insb
inc
or
js
cmpsl
mov
jo
or
add
cmp
add
push
ds
or
cmpsl
shrb
sub
inc
jo
jne
addl
mov
test
inc
add
dec
add
test
shll
ret
stos
lock
es
adcb
mov
subl
sub
hlt
rcrb
outsb
insb
cmc
movl
adcb
sbb
adcl
mov
add
je
push
push
sub
pop
mov
inc
aaa
sbb
adc
push
add
int3
add
push
cmp
xchg
negb
fldpi
add
push
cmp
jne
push
adc
jge
add
add
mov
sub
mov
cltd
lret
cmp
or
repz
push
icebp
push
aad
push
insl
inc
and
push
pop
mov
push
test
and
jg
sub
sbb
loopne
jae
dec
and
into
xchg
rolb
xlat
out
jge
sbb
jno
ret
adcl
in
push
js
jne
jg
cwtl
sbb
push
add
nop
or
adc
hlt
adc
hlt
xor
inc
dec
stos
sbb
push
in
cmp
insl
dec
imul
les
and
push
pop
add
or
test
inc
hlt
push
push
mov
push
test
sbb
or
inc
add
push
mov
subb
cmp
outsb
out
inc
adc
push
push
add
push
push
push
addr16
sbb
lods
pop
cmc
in
pop
andb
adc
mov
in
adc
add
mov
fwait
imul
push
rorl
sbb
lods
shr
sbb
or
sbb
push
aas
adc
add
cmp
adc
jmp
lea
push
sbb
mov
inc
add
inc
or
inc
bswap
mov
cmp
jne
data16
loop
ret
sbbb
or
dec
loopne
stc
jmp
adc
dec
arpl
lret
jmp
push
xchg
in
hlt
dec
pop
pop
xor
pop
sbb
adcl
pop
pop
pusha
std
roll
jb
sub
cmp
iret
push
movb
inc
push
xchg
rcrl
or
jne
hlt
inc
mov
or
sbb
pop
xchg
sbb
clc
mov
les
jae
out
imulb
leave
mov
lods
sub
lcall
xchg
dec
sbb
and
or
sbb
or
sbb
subb
sbb
add
data16
sti
jnp
cwtl
test
jmp
push
inc
or
and
pop
sbb
clc
push
mov
lahf
mov
add
jmp
ret
push
and
mov
push
mov
or
les
movb
movsb
loopne
or
and
xlat
mov
cs
cmp
je
pop
mov
js
and
adc
xchg
lods
int
or
mov
xor
or
inc
mov
add
jecxz
lcall
lret
ljmp
stc
jge
out
add
and
add
add
sbbl
mov
fdivs
ret
test
mov
push
adc
jb
test
mov
pop
and
push
je
jmp
xchg
daa
add
sub
test
and
jp
xchg
inc
sub
in
mov
cmpsb
mov
filds
jne
cltd
add
shl
enter
push
mov
add
nop
push
mov
adc
jae
sub
mov
jbe
adc
test
mov
nop
inc
loope
and
xor
test
faddl
or
or
rclb
and
sub
ret
add
icebp
lret
adc
in
cmp
mov
test
cmpl
push
in
mov
orl
mov
inc
adc
jb
aam
clc
push
loopne
mov
cmp
push
push
fisttpl
sub
int
dec
aad
mov
adc
xchg
insl
adc
fistpl
and
rorb
jno
xor
bound
clc
lcall
push
shlb
repz
push
cmp
add
or
jno
loopne
xor
or
push
lea
scas
ss
loopne
jo
add
pusha
mov
loope
sbb
adc
inc
xchg
aad
push
movb
js
sub
jle
or
adc
jl
sbb
cmp
aas
pop
cmp
push
mov
pop
in
fmuls
dec
test
pop
test
pop
mov
jmp
imul
cltd
pop
fidivrl
xchg
loopne
insb
test
xor
cld
sub
push
push
dec
es
sbb
add
cmp
push
vcmpss
mov
adc
sbb
cmp
and
insb
sbb
push
ror
icebp
inc
stos
pop
sbb
mov
add
addb
fwait
pop
push
mov
sub
in
insb
adc
jae
push
rol
adc
push
push
push
fwait
clc
jp
inc
pop
lret
mov
lock
inc
je
sar
jo
sub
jbe
mov
out
rcl
mov
adc
xor
xor
pushw
insb
repnz
dec
push
inc
scas
cmc
dec
inc
mov
pop
xor
xor
dec
or
sets
add
mov
repnz
or
mov
adc
and
dec
jnp
pop
outsb
movb
adc
mov
jns
adc
mov
out
jb
and
lds
xchg
jmp
in
mov
movsl
jg
mov
adc
fisubrl
dec
push
fldl
or
stos
add
xor
push
jbe
rolb
or
outsb
xor
add
mov
movsb
in
int3
pop
jl
inc
sbb
movsb
jbe
mov
nop
push
add
and
xor
inc
inc
inc
fdivrl
pop
jb
cmp
mov
ficomps
sbb
jp
scas
dec
call
push
insb
sbb
outsb
and
test
jo
stos
je
mov
cs
jge
pop
sbb
test
shrb
mov
jbe
cmp
push
shlb
push
bound
push
push
mov
jp
mov
push
je
inc
xorb
sub
push
dec
popl
xor
add
in
fucom
jne
mov
js
jmp
push
cwtl
loopne
lcall
and
xor
sbb
mov
movsl
or
leave
adc
jne
mov
sub
add
sub
shl
push
dec
out
jns,pn
mov
xor
add
push
or
sub
cli
jg
jmp
xorl
andl
sbbb
jnp
inc
ret
and
cmp
mov
mov
or
and
pushf
es
push
mov
mov
inc
pop
pop
and
fdivr
sbb
and
add
scas
adc
and
push
inc
push
lock
pop
and
aas
jnp
test
out
or
and
cmp
xchg
bound
addl
push
fwait
cltd
repnz
cmp
fdivrl
jmp
add
dec
bound
mov
das
pop
stos
ds
push
pop
in
pushf
push
inc
loopne
fwait
jl
and
dec
push
push
aas
or
or
adc
or
mull
add
xchg
sub
roll
out
jne
pop
pop
imul
jno
mov
adc
sarl
push
push
sub
add
pop
pop
mov
sub
mov
inc
xor
cmpsl
mov
orl
mov
jmp
adc
out
xchg
pusha
jne
gs
push
daa
pop
mov
xor
outsb
add
and
sbb
jle
dec
and
mov
inc
shlb
add
mov
cmpsl
add
inc
sbb
mov
addl
mov
loopne
jle
rcrb
js
xor
adc
clc
push
dec
add
shrb
xchg
fdivp
jecxz
shlb
mov
jmp
mov
jle
add
push
cmp
scas
imul
js
and
or
fstpt
and
mov
and
clc
jg
fs
test
loopne
mov
movq
movaps
xchg
push
clc
jae
xor
jle
xor
cli
pusha
std
test
cmpsb
je
cmp
or
repz
or
jg
clc
fstpt
push
xchg
ret
adc
jnp
mov
mov
into
mov
add
adc
into
scas
mov
adc
add
mov
fadd
roll
add
imul
mov
pusha
addsd
mov
fldl
sbb
sbb
inc
pop
fildl
shlb
sbb
jmp
imul
pushf
sbb
pop
adcb
nop
or
jae
cmp
lds
mov
mov
andl
push
and
adc
pop
and
sbbb
pop
xor
push
push
ret
jge
outsl
push
loop
mov
jge
push
pop
and
aad
sub
inc
mov
rorl
hlt
xchg
mov
push
mov
adcl
loope
popa
cld
pop
ljmp
fnstenv
mov
or
roll
adcl
and
pop
sbb
fldl
rorl
je
repz
cltd
mov
ljmp
fxch
or
movsl
loop
daa
pop
adc
or
or
dec
mov
out
mov
push
iret
fld
cmp
adc
push
insl
cmp
xorb
push
roll
cs
pop
divps
clc
jb
repz
subb
and
cmovs
mov
push
pop
into
div
jecxz
stos
std
jmp
aam
stc
or
rep
jmp
push
push
sbb
jb
xor
xor
hlt
jl
stos
cmp
js
or
pop
and
out
cmpsb
push
and
pop
pop
mov
stc
lcall
mov
mov
jge
jb
movsb
mov
movl
fiadds
mov
or
out
sahf
testl
test
iret
repz
lahf
cwtl
mov
mov
call
repz
lock
hlt
xchg
cmp
repz
clc
cld
mov
inc
mov
inc
push
lock
fldenv
cmpl
xlat
jmp
sbb
mov
nop
inc
pop
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
inc
lret
dec
adc
xor
daa
stc
sub
pop
nop
xchg
push
mov
dec
gs
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
sbb
pop
add
ljmp
mov
or
push
inc
loop
cmp
dec
push
pop
fs
repz
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
nop
or
aaa
ficoms
add
push
add
sub
daa
ja
daa
push
mov
xchg
add
and
mov
fs
add
je
and
idivl
bound
mov
mov
test
je
add
lods
cmp
push
adc
into
add
xchg
cmc
add
repnz
mov
inc
inc
add
testb
jmp
jp
je
mov
inc
jmp
rorl
sahf
mov
call
sbb
ja
dec
cmpsb
sbb
loop
sbb
and
mov
xor
adc
inc
fidivrl
iret
fidivrl
sub
cmp
fcompl
or
adc
add
jg
call
fwait
lock
popf
rorb
adc
or
jb
sub
and
xchg
sub
hlt
fcomi
arpl
or
in
mov
jne
xchg
jmp
push
xor
and
or
add
push
scas
addb
inc
mov
xchg
ljmp
adc
inc
cmp
jne
inc
cmp
dec
test
sub
xor
call
sbb
adc
dec
mov
cwtl
push
push
adc
mov
out
and
add
das
and
or
dec
hlt
mov
pop
inc
inc
test
hlt
cmp
push
ror
mov
pop
adc
arpl
repz
out
adc
push
add
push
mov
lret
aam
pushf
cmpsb
cmp
xor
push
add
or
and
mov
push
mov
or
cmpl
jbe
and
in
sub
inc
hlt
cmp
movsb
mov
pop
inc
mov
dec
add
enter
sbb
ret
jge
outsb
or
shl
shlb
dec
leave
jecxz
insl
in
sbb
or
or
inc
pop
cmp
mov
jns
je
mov
mov
inc
cmp
aam
lret
jne
sbb
add
cmp
jmp
jnp
orb
inc
cmp
mov
sbb
lods
lods
mov
movl
int
mov
lahf
xchg
inc
pusha
add
rolb
adc
je
ja
jo
add
loopne
jne
orl
clc
mov
stc
adc
or
hlt
stos
inc
push
add
hlt
aad
mov
in
in
sub
xchg
cmp
sub
ret
add
inc
sbb
lock
pop
sbb
sub
dec
mov
push
insb
ja
je
jbe
sbb
mov
ss
cmp
ja
sahf
push
jecxz
jmp
jnp
cmp
test
mov
movb
outsl
xchg
mov
fistpl
dec
cli
or
add
jmp
or
mov
inc
jmp
xchg
popa
ds
jbe
pushf
or
push
cld
jb
sub
jb
mov
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lret
pop
mov
sbb
mov
test
or
add
jae
push
jbe
loope
sahf
or
and
addr16
sub
mov
sub
and
fistpll
jge
cmp
jb
lea
clc
pusha
sub
mov
and
cld
jne
mov
push
cmp
jne
mov
es
jne
inc
push
mov
adc
or
movl
dec
jmp
adc
repz
cmp
jmp
std
std
jmp
cld
ret
cld
ret
pmaxub
dec
adc
inc
pop
scas
jb
call
push
movb
shr
pop
xchg
add
xchg
inc
mov
into
sub
popf
shl
in
popf
mov
add
inc
insl
adc
addb
sub
pop
ret
adc
push
lods
repz
inc
push
add
sub
std
or
in
add
or
add
lea
or
add
orl
adc
leave
adc
push
daa
insl
das
lea
daa
jle
cwtl
mov
jge,pn
sahf
and
add
mov
add
or
push
adc
mov
add
mov
mov
dec
jg,pn
sbb
lock
leave
xchg
outsb
arpl
push
popa
insl
or
dec
mov
repz
aad
mov
xchg
loop
mov
and
xor
inc
push
push
pop
div
and
and
jb
test
inc
pushf
pop
nop
sbb
clc
jo
rol
xchg
xor
lods
pop
sbb
pop
adc
push
mov
daa
mov
clc
pop
sbb
push
pop
add
sub
dec
clc
add
mov
jmp
adc
push
adc
imul
sub
mov
mov
decb
gs
repz
and
mov
jecxz
cmc
cmp
mov
sbb
push
sub
sub
adc
pop
leave
xor
outsb
neg
aam
or
jl
or
lods
push
mov
arpl
jle
cmpl
js
fisubrl
xor
xchg
test
inc
fstl
xor
inc
jmp
out
idiv
movl
jmp
adc
jne
sub
or
xor
call
sbb
int
and
fiaddl
add
cmp
xor
mov
mov
push
mov
pop
and
mov
or
adc
dec
add
add
lds
cmp
mov
sub
loop
adcb
or
test
decl
dec
mov
jmp
fidivs
lret
adc
in
sti
jmp
ja,pn
xor
fnstsw
clc
cmp
jae
push
movsb
wbinvd
scas
fstps
and
xor
hlt
pop
or
sbb
add
lods
or
aaa
loop
cld
out
adc
xchg
fadds
flds
mov
and
add
sbb
addb
or
or
jne
jbe
mov
mov
inc
mulb
sub
push
push
jg
and
fisubl
add
into
mov
out
pusha
in
rcrb
sbb
mov
mov
pop
aaa
cmc
cmp
jb
cmp
in
cmp
jmp
push
dec
andb
insl
adc
jbe
popa
push
sub
call
or
lods
or
out
incl
sub
stos
mov
shr
gs
js
jo
inc
aas
push
mov
pop
sub
test
pop
mov
jmp
jno
jbe
push
mov
push
mov
fsubs
mov
jne
testb
and
shll
cli
xchg
rcrb
fs
ds
adc
adc
mov
shlb
mov
mov
inc
inc
data16
outsb
fmull
dec
and
daa
or
shl
mov
je
hlt
fs
push
adcl
mov
pop
adc
testb
inc
mov
inc
add
rol
add
lret
dec
jmp
xchg
add
fsubrl
sbb
adc
sub
ds
popf
pop
mov
push
es
push
leave
stos
inc
mov
xor
adc
adc
es
leave
jne
test
lock
leave
xchg
int3
fstps
pop
mov
clc
stos
and
outsb
mov
lea
icebp
jo
setp
push
inc
fs
add
add
push
push
test
inc
dec
ret
pop
fstl
xor
jo
xor
sub
clc
jae
fwait
sub
dec
push
or
add
mov
or
push
cltd
daa
call
clc
cmpsl
xchg
jno
push
mov
adc
repz
mov
push
xchg
sbb
jo
lahf
jne
pop
call
loopne
je
inc
cmp
jb
lea
popf
xchg
adc
adc
insb
dec
jp
push
ss
add
pop
xchg
cmp
xchg
aas
sar
dec
mov
mov
dec
add
mov
adc
and
rorb
xor
lahf
rorb
out
popa
mov
out
and
xchg
cmp
or
pusha
fsubrl
adc
and
stos
pop
imulb
fldpi
or
pop
ret
sbb
adc
xchg
cmp
pop
push
push
or
dec
inc
mov
inc
sub
add
in
loopne
sahf
lea
jae
push
add
lcall
sub
pop
mov
mov
sbb
test
hlt
add
test
dec
call
jge
or
shlb
ret
es
mov
test
push
incb
sub
ds
fcmove
sub
std
add
xchg
push
test
push
loopew
xchg
icebp
jno
je
mov
je
inc
stc
xlat
rorl
pop
adc
adc
ja
loopne
cmpl
xor
mov
jmp
mov
add
ja
negb
ficomps
xchg
and
mov
xor
dec
pop
sub
les
movsl
lret
dec
lods
fwait
jle
addr16
fdivrs
sbb
xchg
aad
mov
popf
aaa
outsb
pop
decl
int3
push
and
pop
ds
shlb
push
mov
cmc
or
les
add
maxps
add
lcall
popa
pop
es
repnz
push
push
pop
or
or
add
and
in
hlt
xchg
int
or
aaa
loopne
push
lret
mov
pop
xor
mov
pop
cmp
pop
je
push
adc
and
mov
push
adc
sub
pusha
test
sahf
cmp
add
mov
mov
mov
pusha
pop
cwtl
leave
popf
pop
divb
dec
pop
cld
fmuls
inc
xchg
xor
faddl
mov
ja
sub
push
mov
push
xor
cmc
in
std
sbb
ss
jp
and
xlat
test
sub
aas
push
add
push
cmpsb
fdivrl
mov
jmp
push
xor
call
push
xchg
xor
mov
sub
lds
inc
rcll
add
xlat
sbb
adc
fildll
imul
je
sub
sbb
test
sbb
rolb
xchg
xchg
xchg
fstp
or
jl
mov
fdivrp
fdivl
xchg
lahf
jmp
push
push
fucomp
add
mov
add
jg
rorb
xchg
cmp
mov
cmp
jne
or
mov
adc
loopne
je
add
inc
adc
adc
cmp
adc
push
sub
pop
shrl
sbb
rcrl
add
xchg
dec
mov
cmp
mov
fstpl
iret
cld
push
mov
mov
cmp
lds
mov
sub
sub
dec
and
lods
xchg
jecxz
pop
push
test
inc
cwtl
sub
pop
icebp
and
pop
jo
push
sar
mov
jne
mov
lods
mov
mov
push
daa
mov
sbb
cmc
pop
cld
mov
adc
mov
adc
cmp
sbb
sbb
mov
mov
in
movsl
mov
jg
sarb
in
xchg
jp
and
fxch
bound
xchg
xor
pop
inc
pop
jl
lahf
or
jecxz
mov
sbb
and
sub
mov
pop
or
cmp
pop
push
inc
test
add
add
enter
mov
push
jo
ret
lret
pop
jne
adc
cmp
loope
xor
in
cmovne
mov
jb
jle
mov
and
les
bound
gs
pop
and
stos
lock
jmp
mov
out
cmpsb
push
and
hlt
mov
cmp
divb
in
dec
inc
inc
inc
pop
dec
or
cwtl
dec
mov
xor
push
push
pop
jle
inc
mov
cmp
je
add
lock
movzbl
add
sub
je
ficoml
jle
fbstp
add
adc
imul
jo
pop
add
inc
push
nop
add
daa
add
in
add
test
add
mov
add
jle
add
cmp
in
add
add
sbb
push
xchg
sub
pop
jb
or
enter
or
dec
jb
cmp
or
sub
pop
enter
pop
or
test
loop
or
cmpb
add
nop
ja
inc
or
add
ja
xor
and
push
rsqrtps
adc
pop
in
lods
pop
adc
fwait
sub
popa
in
cmp
sahf
lret
add
ds
add
adc
add
sbb
inc
ficoms
adc
adc
enter
push
push
repnz
push
pop
pop
pop
lcall
mov
sbb
sbb
enter
call
pop
and
sbb
sbb
fstl
add
je
pop
sbb
xorl
cmp
sbb
cmp
inc
inc
push
pop
pop
push
decl
jne
add
add
sub
cmp
in
pop
lret
xchg
add
add
cmp
xchg
lock
test
shlb
repz
add
cmp
je
lcall
push
in
repnz
lea
add
aad
cmp
mov
out
fwait
out
ret
xor
enter
add
call
adc
dec
dec
cwtl
jmp
jb
sub
and
or
sbb
or
in
in
in
and
repnz
add
mov
out
out
inc
enter
out
sbb
pop
inc
push
imul
in
cmp
icebp
icebp
cmp
sahf
xchg
pslld
out
std
lret
mov
pusha
iret
pushf
lcall
fwait
pop
in
sbb
mov
jb
cmp
div
pop
in
repnz
cmp
cmp
push
fsubs
dec
clc
clc
clc
cltd
adc
add
inc
stc
inc
stc
lock
mov
iret
cli
cli
iret
sti
push
jns
sbb
sti
stos
cld
cld
rclb
cld
push
out
adc
std
xor
cmpl
adc
cmpsl
mov
xchg
roll
xor
rol
push
in
ret
stos
xchg
fimull
or
push
xchg
es
and
jecxz
mov
std
sti
in
in
and
adc
sbb
out
mov
or
out
outsb
dec
push
jno
call
or
pop
orb
cltd
repnz
repnz
in
add
inc
popf
cli
sbb
js
out
out
out
cltd
and
add
xchg
pop
leave
das
cli
push
cli
sbb
jmp
sub
sar
push
leave
push
jb
stc
stc
cmpsb
jb
imul
stc
idivl
pusha
pop
xchg
div
pop
fwait
xor
add
stc
push
xor
out
clc
cmp
rclb
sti
cltd
sbb
outsl
in
cld
inc
cld
adcl
add
sbb
push
adc
ret
cld
sub
inc
or
loop
icebp
testl
shl
xchg
xchg
mov
divl
sbb
out
push
jno
sbb
out
inc
testl
negl
sti
imul
ljmp
negb
jns
cmp
notb
adc
cmp
test
mul
inc
repnz
testb
push
cmp
bnd
or
jno
cmc
mov
adc
pop
xchg
cmc
jb
imul
cmc
pop
dec
cmc
pusha
pop
xchg
cmpsb
div
idivb
flds
cmp
cmp
sahf
clc
clc
jecxz
stc
test
cmp
les
hlt
inc
repnz
jne
xor
push
hlt
sbb
shll
data16
hlt
test
push
jo
sti
xchg
dec
sub
push
ds
sub
loop
dec
push
push
loop
sub
xchg
cmp
repz
rclb
test
mov
loop
repz
repz
andl
push
test
jmp
jmp
shll
xchg
repnz
or
sub
dec
in
cmp
lea
jns
jne
add
and
push
push
adc
mov
divb
cmp
icebp
test
icebp
cmp
imul
pushf
dec
push
add
jecxz
rcll
sbb
popf
lock
stc
adc
and
jne
push
pusha
leave
mov
mov
push
lock
test
ss
push
jmp
push
stc
outsb
add
sub
out
ret
mov
in
cmovno
push
add
enter
add
stos
fsubl
and
dec
add
push
add
sub
lods
loopne
dec
adc
or
dec
add
jmp
and
and
ljmp
dec
or
and
data16
pop
fnstcw
push
inc
add
push
cmp
popa
mov
push
push
popf
pop
test
data16
or
jle
fnstcw
mov
pop
pxor
pop
sti
cmp
cmpsl
sbb
push
pusha
insb
lea
fdivp
mov
outsb
push
inc
jae
out
dec
outsb
or
and
mov
push
rolb
clc
loope
mov
pop
aam
lock
pop
aam
mov
mov
hlt
scas
add
xor
push
test
pop
mov
arpl
daa
mov
pop
or
adc
and
or
or
add
test
lea
fdivs
fistps
cmp
xor
in
sub
ja
and
add
stos
xchg
push
or
sub
sbb
cltd
jmp
push
inc
and
cmp
add
sub
imul
ret
pusha
mov
test
mov
dec
adc
into
adc
nop
sbb
and
movl
push
push
adc
mov
sub
in
in
lcall
adc
imul
mov
nop
adc
and
mov
aam
mov
pop
and
and
pop
rolb
pop
inc
inc
inc
inc
add
or
cmp
cmpb
jb
mov
cmpsl
imul
mov
gs
vmread
add
xor
dec
outsl
cmpsb
or
nop
rclb
adc
sub
je
pop
roll
mov
add
sbb
pop
cmp
adc
mov
enter
add
xor
orps
push
xchg
sbb
push
les
adcb
cmp
pop
rclb
or
leave
or
jl
xor
add
mov
jmp
mov
add
xchg
cltd
mov
jne
jo
sub
dec
or
in
cmc
sub
push
mov
fistpl
inc
loopne
out
adc
outsl
ret
stc
aad
loop
xchg
mov
rcll
scas
pushl
jne
mov
mov
inc
inc
cmp
push
push
jmp
sbb
xor
xlat
outsb
out
jns
mov
dec
mov
mul
pop
shlb
pop
push
lcall
push
xchg
cwtl
bound
sub
subb
popa
mov
adcb
clc
mov
mov
jecxz
rcl
testb
daa
inc
roll
pop
imul
lods
add
or
in
je
sahf
ret
push
fwait
add
jmp
stos
add
testb
and
xchg
push
sahf
outsl
add
outsb
jb
or
hlt
mov
push
popf
push
clc
jp
adc
and
stc
repnz
hlt
pop
jo
dec
jnp
mov
add
aam
orw
das
push
popa
mov
incl
arpl
mov
mov
mov
incl
inc
and
adc
decl
jne,pn
loop
xor
and
repnz
scas
cmp
xor
jg
cmpl
mov
jbe
push
cltd
pop
idiv
rclb
pusha
adc
jo
mov
jl
pop
dec
rorb
out
aaa
dec
mov
xchg
push
in
adc
adc
jmp
cmp
jae
dec
and
pop
jae
pop
jbe
mov
dec
pop
adc
and
jmp
fsubrl
pmaddwd
shlb
pop
mov
cmp
push
jg
pop
pop
test
sbb
add
pop
test
test
sub
mov
sbb
dec
dec
je
mov
adc
push
push
jne
mov
aas
scas
jmp
mov
dec
mov
xor
mov
lods
xor
decb
push
sbb
lahf
test
mov
inc
pop
fstps
cmp
jb
jae
das
sbb
adc
dec
pushf
and
jmp
xchg
loope
add
fs
test
stc
mov
xor
add
shrl
popa
ficoml
lret
jl
test
xor
frstor
jno
adc
fisubrl
pop
xchg
sub
imul
stos
xchg
arpl
inc
sub
pop
cmp
inc
enter
ja
push
aaa
mov
jge
bound
clc
add
pop
idiv
adc
push
xchg
inc
out
fstl
pop
fistpll
es
addr16
jmp
or
dec
or
mov
dec
xchg
xor
mov
lret
mov
adc
fs
fcmove
movsl
mov
sbb
xchg
cmpsb
adc
pop
or
je
jo
mov
jecxz
repnz
shll
sbb
int
mov
push
add
push
inc
jbe
repz
adc
jg
pop
icebp
cmpb
push
sti
sub
jno
loopne
dec
loope
cmp
xor
pop
jmp
dec
icebp
xor
cmp
push
mov
dec
push
pop
xchg
push
cmp
out
js
xor
mov
jg
pop
mov
insl
cmp
jle
sub
mov
das
lcall
xor
jbe
adc
outsl
mov
je
int3
dec
jo
mov
je
lock
push
inc
fdivs
mov
add
jmp
inc
lretw
test
adc
push
cs
iret
insb
lahf
pop
popl
mov
sbb
dec
and
js
adc
push
cltd
push
or
inc
mov
movsb
mov
dec
cmp
pop
ljmp
adc
lcall
push
fildl
push
push
pushf
imul
rclb
data16
and
adc
sub
push
je
mov
adc
pop
push
push
movsb
xchg
mov
or
xchg
clc
xchg
push
and
jge
add
mov
push
hlt
mov
adc
pop
inc
or
cmp
jnp
inc
adc
or
out
call
add
xchg
push
mov
cmpsl
pushl
jbe
dec
ljmp
adc
xchg
rorb
and
pusha
jl
js
pop
add
andb
adc
push
and
sbb
sub
mov
dec
push
movl
decl
inc
jg
les
mov
gs
sbb
pop
jb
mov
ret
mov
add
clc
mov
inc
inc
cmp
pop
lcall
mov
cli
orb
insb
in
sbb
adc
add
dec
xor
xchg
jle
dec
je
popa
jecxz
mov
sub
push
dec
push
ficoml
mov
mov
pushf
scas
inc
pop
sbb
fbld
cmp
mov
incl
fdivr
hlt
mov
in
push
mov
push
inc
sbb
js
inc
pop
cmp
mov
pop
out
cmp
lods
mov
popa
and
sbb
insl
sbb
fmuls
or
xchg
dec
push
push
sub
test
movl
cltd
push
nop
hlt
mov
addr16
test
loopne
xor
adc
test
incb
and
cmp
je
mov
lock
adc
add
shll
rolb
jl
push
push
pop
inc
xor
adc
popa
rcrl
or
push
dec
add
cli
frstor
in
dec
subb
add
push
repnz
jb
lret
mov
adcb
adc
loopne
push
fiaddl
fcom
addr16
adc
add
shll
lea
jecxz
and
jmp
dec
or
cmpl
pop
mov
cs
popf
push
nop
cmovge
push
dec
sbb
adc
enter
aam
sub
xor
orb
pop
and
movsb
jo
cmpsb
push
stos
test
ret
movsb
inc
xchg
in
push
pop
stc
xor
call
mov
xchg
sbb
cmpsb
in
out
or
in
or
sbb
pusha
adc
hlt
lea
or
lahf
jge
dec
sbb
cmp
je
push
stos
or
lcall
movsb
cmp
sub
sbb
mov
pop
add
xlat
mov
les
xor
divl
add
jmp
cmp
pop
mov
shlb
cmpb
jne
inc
inc
xor
lcall
cmp
inc
lods
ja
xorl
subl
movsb
cltd
cmp
push
inc
pop
add
push
sti
ss
jmp
clc
xor
clc
and
jnp
xchg
shr
es
inc
adc
mov
pop
dec
movsl
xchg
cmp
jno
or
inc
jne
dec
jns
jns
aam
inc
mov
in
pushf
adc
cltd
nop
jmp
mov
add
add
aam
sbb
cmp
pop
push
jmp
xchg
negb
push
or
cmpb
mov
or
mov
rep
inc
shll
fdiv
mov
jecxz
or
hlt
add
lock
loopne,pt
push
clc
add
dec
lahf
leave
mov
outsb
mov
adc
xchg
cmp
inc
rolb
arpl
xchg
cltd
loope
jmp
pop
arpl
xchg
push
jno
mov
xor
icebp
je
iret
or
mov
das
outsl
add
jp
push
imul
inc
add
jecxz
sub
mov
push
out
mov
rorl
cld
adc
in
add
shrb
pusha
into
jo
jno
ds
xlat
cld
cmp
dec
xor
pop
aad
add
jbe
jbe
adc
mov
adc
ljmp
xor
clc
push
mov
jns
push
clc
xor
xor
js
insb
std
and
dec
shll
sbb
mov
xor
and
and
lods
cmpl
insl
clc
xchg
cmpsb
scas
dec
pop
fcomps
sahf
enter
or
arpl
dec
adc
sub
mov
sub
nop
imul
or
mov
jmp
popa
or
mov
mov
adc
dec
lcall
std
data16
xor
xchg
insb
stc
cmp
dec
add
or
xchg
inc
push
jnp
js
and
adc
ret
jmp
xchg
mov
jae
pop
gs
jo
arpl
cmp
sbb
imul
cmp
mov
ja
js
lcall
icebp
fwait
inc
mov
mov
adc
cmp
ret
inc
jge
cmp
loopne
or
dec
es
jge
fiaddl
loop
mov
sbb
ja
mov
push
fidivl
subl
out
mov
test
sbb
dec
sub
cmpsb
lock
ret
jbe
jle
repnz
inc
mov
dec
push
jg
adc
jbe
lret
mov
lcall
xchg
cmp
test
jp
inc
rcll
jmp
push
pop
xor
ror
sarl
jle
ret
fmuls
cs
hlt
fadds
insb
cwtl
mov
in
push
jne
lock
or
mov
xchg
adc
pusha
adc
adc
sbb
ds
push
incl
std
xchg
sub
sub
xchg
or
test
xor
mov
push
ret
inc
mov
adc
frstor
add
push
jns
pop
and
push
ret
loope
imul
sbb
jo
loopne
mov
mov
insb
push
lea
loopne
out
into
add
cmp
call
inc
fisubrl
call
adc
xor
jb
das
add
jae
xor
sub
push
pushf
sbb
lods
push
and
jnp
je
cmpsl
cli
or
or
push
dec
or
dec
aad
mov
inc
jecxz
sub
jne
jo
mov
sti
les
dec
lea
dec
xchg
loope
sbb
xchg
pop
es
push
sub
mov
cmp
lock
xor
jl
jg
pop
fcomps
mov
cmpsb
jle
jnp
mov
add
sbb
hlt
loope
add
jle
leave
or
movl
push
repz
nop
mov
push
and
js
mov
call
pusha
and
sbb
xchg
lock
or
and
add
test
dec
inc
lock
or
lock
mov
push
mov
or
lods
lret
test
lds
pop
sub
push
jbe
xchg
jb
or
jg
push
xor
mov
pop
pop
pop
pop
sbb
sbb
jg
popl
mov
inc
scas
mov
ja
push
mov
add
pushf
jbe
xor
sarb
xor
call
mov
xchg
fmulp
adc
adcb
pop
jo
sub
loopne
cmp
imul
or
mov
push
data16
pop
cld
sub
dec
je
lret
or
out
fildl
adc
mov
adc
or
dec
loop
and
sbb
test
lret
imul
add
or
shl
or
adc
fdivrs
cmp
pop
add
pop
sub
mov
inc
dec
jne
int3
repz
aam
xchg
mov
bnd
shlb
mov
call
test
mov
xchg
adc
mov
mov
pop
adc
out
push
jle
mov
movb
out
addb
test
jle
push
sub
repnz
xchg
or
popf
adc
jne
je
push
ja
or
ret
cld
fidivl
mov
push
dec
fadds
stc
sub
push
cmp
push
push
cld
mov
sub
pop
dec
or
enter
int
jmp
mov
orb
mov
push
outsb
and
je
and
sub
in
movb
movsb
ja
hlt
mov
jle
test
pop
mov
cmp
sti
aas
in
scas
and
sbb
lret
add
jmp
cmp
add
ljmp
push
mov
inc
inc
ret
inc
sbb
jl
leave
and
clc
ja
mov
jmp
jo
jg
cmp
movb
inc
shlb
add
inc
into
add
xor
sub
je
sbb
dec
inc
lock
jno
addl
negl
hlt
add
rol
das
jmp
xorl
mov
clc
pop
mov
mov
cmpsb
push
aaa
je
xchg
sub
aam
sbb
inc
std
jne
fcoms
imul
fldt
stos
enter
sarl
jmp
iret
rolb
inc
sub
or
push
cmp
mov
fwait
push
pusha
paddsw
popf
cmp
sub
lods
mov
nop
xchg
repz
mov
cmp
or
pop
fidivl
push
jmp
inc
insl
push
shl
cmp
in
repnz
add
fdivl
stos
inc
or
scas
mov
test
inc
jae
cmp
movsl
and
call
add
push
decl
test
push
cmp
leave
inc
xor
subb
leave
xor
mov
dec
or
adc
jmp
loopne
sub
mov
cld
jmp
loopne
andb
std
cmp
inc
cmp
ljmp
inc
es
sti
nop
sbbb
inc
int3
jge
add
or
cmp
jb
mov
xor
inc
sub
adc
sbb
loopne
adc
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
insl
xchg
mov
jl
sbb
jnp
divb
jns
ja
push
mov
inc
out
mov
stc
shrb
rclb
fdivp
icebp
lret
gs
jnp
test
xor
not
add
hlt
leave
es
je
loopne
adc
xor
int3
movsl
pop
mov
fisttpll
push
sub
and
mov
cmc
push
xor
sub
cmp
adc
lret
outsl
pop
sbbb
xor
lret
es
inc
int3
mov
ret
cmp
fisttpl
insl
rorl
xlat
cli
jo
insb
ljmp
xor
in
pop
xor
fs
dec
cmp
repz
insb
ret
mov
dec
loopne
jg
out
ja
inc
pop
sub
jmp
xor
dec
sbb
add
xor
add
sub
pusha
push
out
arpl
jne
insl
adc
fcompl
jb
jmp
inc
sbb
xor
imul
or
sbb
lea
cmpl
mov
pop
movl
pop
add
add
and
in
or
loop
idivb
pop
or
sbb
icebp
sub
push
ds
jge
mov
cmp
mov
lahf
jno
add
testb
sub
testb
mov
rcrb
or
rclb
js
mov
push
cmp
jne
cld
mov
jle
jg
or
or
push
cmpl
adc
shlb
cmp
add
fisttpl
or
lock
int3
decl
jne
sbb
dec
xor
stos
or
frstor
add
sbb
mov
or
rorb
jp
or
cmpsb
or
pop
ret
pop
ret
jo
or
jo
sbb
adc
mov
adc
xchg
xchg
stos
dec
mov
push
xorb
push
je
push
mov
sbb
js
je
mov
loope
cmp
add
push
dec
xchg
mov
jbe
push
sub
je
ret
or
sub
or
loope
xor
xchg
xchg
lods
mov
test
mov
push
xchg
adc
mov
jno
sbb
mov
stos
sti
rclb
and
loopne
sbb
call
xlat
and
mov
daa
mov
movsb
jg
fdivrs
aaa
adc
fwait
mov
push
movsb
mov
ss
add
inc
jb
je
enter
lret
call
aas
sbb
cwtl
sub
pop
lea
mov
lea
push
push
mov
or
aas
push
incb
cs
cmpsl
es
inc
jge
andb
test
inc
pop
cmp
inc
and
cmp
cwtl
and
sbb
xor
sti
lret
insb
push
dec
inc
fmul
cld
push
jo
test
inc
or
inc
mov
xorl
loope
xor
cmp
sbb
jno
mov
jg
push
cmp
push
aaa
ret
outsl
mov
sbb
sub
mov
xchg
xorl
ret
dec
push
mov
jbe
add
cmp
movsb
push
lret
bound
xchg
pop
jns
filds
fnsave
dec
add
jns
inc
xchg
shlb
sub
jmp
dec
adc
rcrb
test
cmp
dec
xchg
xchg
and
sub
and
jb
inc
inc
xor
cmp
inc
test
jle
pop
sbb
push
popa
lcall
enter
jno
scas
cli
mov
mov
add
mov
jle
or
fdivs
and
insl
jno
jo
jg
jge
add
mov
inc
dec
sub
mov
jnp
ljmp
pop
fidivrs
mov
popf
jnp
cmp
orl
push
adc
pop
cmpsb
and
daa
test
movsb
jno,pt
xchg
mov
stos
testl
push
dec
es
mov
sub
data16
jbe
mov
and
mov
iret
loopne
aaa
inc
mov
push
mov
mov
nop
stos
mov
add
mov
cld
shll
in
inc
sub
andl
enter
jecxz
jbe
scas
sbb
mov
and
imul
std
pop
pop
pop
popf
aam
sarb
clc
jns
jns
or
test
movsl
rcrb
popl
insl
and
enter
dec
call
adc
jp
or
sub
aam
xchg
add
in
mov
lahf
lea
mov
addb
inc
inc
pop
das
dec
ret
mov
popa
pop
popa
js
jmp
jge
jmp
sarb
mov
rclb
add
sbb
cmp
mov
add
jmp
mov
es
mov
jae
js
lds
shl
xor
push
xor
shl
iret
aas
push
enter
test
test
xchg
pushf
addb
mov
popl
jl
out
adc
add
mov
push
shlb
call
inc
loope
push
jmp
mov
rclb
adcb
fcomps
in
adc
nop
mov
rclb
pop
test
xchg
clc
cmp
repz
movsb
lods
mov
nop
xchg
adc
jns
loopne
call
jne
mov
lahf
pop
les
dec
mov
and
xlat
outsb
cmp
cs
pop
pop
sahf
call
xor
out
and
mov
adc
dec
inc
sbb
and
data16
adc
lcall
jo
or
mulb
jns
adcb
rorl
jge
inc
mov
add
incb
sub
int3
xor
scas
adc
aam
inc
adc
add
and
cld
pusha
sub
lds
test
fs
and
xlat
inc
mov
and
jno
mov
jb
aas
lret
or
dec
sbb
cmpsl
mov
inc
hlt
fdiv
mov
xor
and
adc
mov
daa
addl
push
lahf
cli
mov
enter
leave
ret
testl
fld
fnstcw
dec
dec
adc
jge
jae
xchg
out
leave
orl
or
pop
and
movl
push
imul
sbb
int
inc
adc
and
dec
mov
and
or
push
adc
xor
shlb
add
pop
out
push
or
adc
js
mov
cmp
adc
mov
adc
push
gs
sbb
notrack
dec
outsb
cmp
mov
loop
and
loope
xchg
xchg
cmpsl
mov
outsb
push
sahf
add
jle
test
ja
dec
popa
xor
sub
popa
or
lock
movl
push
outsl
popa
mov
fdivs
sbb
hlt
jecxz
and
mov
mov
rolb
cmpsb
xchg
andb
in
es
xor
and
add
push
ljmp
daa
ret
lock
adc
jno
jg
xchg
or
inc
sbb
imul
fwait
adc
xchg
pop
sbbb
and
or
leave
jb
mov
in
daa
jecxz
nop
sbb
lea
inc
cmp
xor
push
rorl
push
cmc
loop
pop
push
pop
xchg
ret
push
jecxz
shl
imul
inc
mov
fs
or
lock
xor
test
cli
or
incl
and
push
in
add
or
sub
dec
pop
push
mov
push
pusha
push
repnz
fwait
ss
or
test
adc
orl
push
cmpsb
lock
or
jecxz
mov
inc
and
adcb
pop
cs
jae
shlb
adc
jbe
xchg
sub
test
test
in
or
sub
fcoml
inc
test
outsl
fcompl
adc
pop
divl
test
lock
xlat
add
xor
push
mov
xor
dec
xchg
fcomps
popf
mov
push
jne
mov
pop
adc
in
hlt
dec
ljmp
or
mov
push
sub
pop
pop
cmp
shl
add
mov
add
or
and
dec
xchg
mov
add
ret
inc
mov
mov
cwtl
sbb
xchg
push
push
lock
push
mov
mov
dec
jmp
and
pop
fdivs
adc
inc
sarb
dec
cmp
lcall
or
mov
hlt
fadd
fsub
not
pop
cmp
xchg
cmp
push
pop
mov
jne
loop
mov
mov
cmpsl
xchg
jecxz
leave
movzwl
jl
loopne
or
movl
inc
adc
dec
cld
jle
imul
mov
lea
or
ja
mov
movsbl
xchg
mov
loopne
mov
test
pop
sbb
pop
sar
xor
add
mov
cwtl
ret
mov
stc
mov
loopne
lea
loopne
cs
aam
clc
fcomps
mov
sub
dec
or
je
or
add
je
sbb
cs
mov
push
pop
add
ret
out
pop
andl
nop
cli
sub
in
sub
or
aam
mov
or
sub
pop
jl
mov
rorb
inc
or
ja
movsl
mov
repnz
cmpsb
mov
hlt
out
loopne
mov
aaa
mov
cmp
push
sbb
into
pusha
xor
mov
test
ret
insb
nop
xlat
mov
dec
pusha
sub
adc
pop
mov
pop
and
pop
or
fiadds
orb
jo
inc
xor
cwtl
add
fs
or
imul
pop
outsl
cmc
jne
and
dec
jmp
loope
xlat
jmp
movsb
mov
insl
xchg
push
mov
mov
xlat
mov
jge
rorb
push
sbb
fidivs
je
cmp
adc
or
pop
mov
add
mov
ret
add
hlt
fadd
push
adc
cld
xchg
loop
or
dec
nop
and
cmp
inc
push
jae
dec
testl
mov
fwait
add
cwtl
das
mov
cmpl
push
add
dec
and
jne
in
or
xor
mov
pushf
in
rcl
in
sub
mov
or
nop
mov
add
push
ret
subl
shlb
xor
push
addl
negl
outsl
inc
mul
xchg
aad
movsb
dec
lret
add
adc
mov
sarb
add
mov
outsl
testl
test
inc
pushl
xchg
aas
push
insl
dec
loop
dec
add
sarl
in
lods
cmp
mov
inc
xorl
pop
cmpsl
pusha
pop
ret
aam
mov
add
dec
popa
je
bound
xor
notb
pop
clc
test
sub
push
ss
add
add
rcll
add
addr16
scas
push
je
cmp
je
test
mov
enter
mov
xor
cmp
sbb
stos
test
mov
pop
sub
sub
adc
xchg
jo
cmp
jecxz
adc
xor
add
into
ret
pop
jne
mov
jne
jae
imul
add
xor
pop
loopne
aaa
jo
xchg
push
xor
int
or
sbb
jl
call
pop
xchg
xor
adc
xor
adc
dec
inc
rcl
sub
mov
mov
ljmp
stc
lcall
pop
xchg
cwtl
inc
call
sbb
dec
nop
aad
icebp
pop
cmpb
jne
and
ds
adcl
or
sbb
mov
cmpsl
dec
pop
out
addr16
decb
mov
std
inc
daa
add
pop
es
adc
lahf
shl
push
pop
data16
push
sub
pop
test
push
lret
shlb
cmp
adc
inc
fbstp
or
push
ss
outsb
cmpsb
add
or
je
cltd
outsl
fsts
xor
dec
sub
and
xor
jl
mov
movsb
jae
adc
lds
pop
fimull
xor
inc
mov
je
sbb
dec
test
daa
mov
or
jne
and
lea
cmp
das
sbb
jp
add
push
inc
bound
cwtl
jp
ljmp
xorb
cmp
push
nop
xchg
clc
sahf
add
clc
bswap
mov
dec
jmp
pop
xchg
sub
inc
dec
icebp
sbbb
stos
aas
je
lock
addr16
mov
movb
inc
jmp
push
outsl
nop
push
mov
loope
xchg
dec
cmp
or
xchg
mov
ret
cmp
sub
insb
jb
adcl
gs
xchg
cltd
adc
clc
add
sub
sub
push
test
inc
xchg
mov
cli
and
pop
lds
jb
cltd
sub
sub
pop
and
inc
shl
push
jp
dec
out
fdivrl
lea
pusha
mov
jns
lret
pop
aad
pusha
adc
push
jbe
dec
xorl
jne
testl
aaa
cmp
sbb
push
clc
loop
add
xchg
nop
popa
jle
cmp
pushf
test
inc
or
pop
jg
repnz
leave
mov
push
shrl
or
and
daa
pop
or
add
push
mov
lods
adc
adc
movsl
daa
sahf
js
les
insl
mov
mov
xor
in
sub
movsb
cmp
dec
xchg
lock
mov
xor
cld
mov
dec
sti
popf
dec
add
lcall
xor
jle
shl
ss
adc
push
rorb
mov
pop
add
pop
lcall
sbb
xchg
adc
xor
das
add
cmp
insb
or
cld
sbb
push
lea
mov
add
push
fistps
sbb
and
mov
test
push
popa
addl
lcall
jnp
ds
mov
adc
sub
add
pop
xchg
in
or
decb
push
pop
stc
adc
cltd
mov
push
aas
out
das
mov
pop
mov
pop
cli
test
loope
xor
jge
push
dec
sbb
dec
dec
divb
push
clc
es
push
pop
jmp
push
mov
jle
jecxz
jne
aas
test
orl
sar
adc
sbb
add
arpl
inc
repz
mov
lods
imul
sub
dec
pusha
sub
lds
mov
fcom
or
sub
sub
or
adc
lds
xchg
sahf
arpl
or
cld
out
mov
adc
enter
sub
ss
cmp
cld
fdivl
rclb
lret
push
or
int
pushf
fwait
sarb
loopne
int
sub
cld
shr
mov
imul
add
mov
dec
jnp
or
popa
jecxz
xchg
lret
outsb
and
clc
mov
inc
add
ret
loop
ja
jne
sar
dec
cmp
jbe
push
pop
mov
loopne
sub
dec
or
addb
lods
decl
dec
add
shll
pop
mov
repnz
mov
lea
xor
mov
push
pop
add
push
or
out
add
dec
rcrb
add
icebp
cltd
push
or
push
sub
fimull
jmp
clc
and
push
idivb
add
jne
and
sti
add
push
cmc
push
ds
pop
cmp
jecxz
pop
stos
or
mov
imul
cmp
jno
out
sub
cmp
or
and
aaa
pop
or
xor
sbb
push
mov
push
jle
shll
xchg
push
pop
dec
add
mov
mov
dec
mov
in
push
or
nop
ret
mov
int3
inc
cmpsb
sarb
adc
loope
ret
pusha
mov
mov
inc
mov
mov
outsb
or
lods
clc
lock
push
or
pop
mov
das
dec
or
jmp
dec
adc
cmp
mov
or
or
ret
push
fwait
inc
xor
xor
sbb
into
repz
add
and
stos
test
cwtl
and
pop
fdivrs
and
shl
add
scas
jp
push
inc
sti
divb
or
sbb
cmp
sub
iret
push
decb
adc
jne
or
xor
and
pushl
push
push
js
xchg
jp
and
push
loope
call
mov
adc
adc
jge
inc
negl
loope
sub
cmp
sar
insl
or
mov
or
in
das
mov
pushf
pop
mov
test
lahf
jo
jne
data16
or
outsl
push
mov
cmp
js
or
adc
xor
pop
push
cmp
fcmove
test
stos
cmp
mov
mov
inc
mov
xchg
jl
adc
in
add
fwait
orl
imul
addb
pop
mov
lea
xorl
rolb
push
fucomip
stc
mov
imul
inc
and
in
add
adc
dec
jne
or
ror
lret
loopne
in
sbb
popa
cltd
in
lea
cld
xchg
cmp
sub
shr
adcl
dec
dec
clc
jp
sbb
enter
out
jae
sub
adc
jne
fst
or
lock
call
cld
push
dec
jne
je
clc
add
clc
add
sub
rcll
sub
sub
out
icebp
movsl
mov
sahf
arpl
mov
dec
shlb
cmpsb
dec
inc
jne
or
add
pop
jge
and
not
and
into
xchg
adc
adc
int
xor
sbb
sub
or
mov
push
scas
xchg
mov
dec
cld
fs
cmp
jl
mov
and
pushf
jle
subb
f2xm1
fcmovnb
in
out
cmp
in
add
je
sbb
mov
int3
push
pop
movsb
sub
adc
inc
sub
data16
sbb
clc
rolb
jge
jb
es
add
cmp
mov
dec
or
push
jns
push
xor
in
inc
sub
push
adc
xor
pushl
movsb
pop
fstpl
lea
data16
sub
adc
lcall
pop
dec
pop
pop
xor
cmpsl
imul
nop
dec
rcrl
iret
jmp
data16
and
js
mov
imul
adc
inc
insb
xor
out
cli
and
push
inc
and
clc
jl
lret
xchg
inc
mov
jge
imul
mov
inc
dec
insb
pop
xor
push
sar
dec
jo
xor
jp
movsb
pop
ficoml
movb
std
cmp
xor
cmp
repz
mov
test
pop
xchg
push
mov
ss
fbstp
jo
jmp
ja
dec
ficoms
add
push
mov
dec
lea
imul
icebp
mov
bnd
and
shll
movsl
loope
cmp
lods
decb
push
cs
lret
into
mov
mov
xor
jns
dec
ss
dec
jp
sbbb
sub
xchg
sarl
loope
add
insb
push
add
fisubrs
cmp
push
jecxz
add
push
push
jge
fs
and
addb
rclb
or
out
fldcw
push
nop
cmp
and
incb
add
or
rol
adc
adc
inc
ret
push
jne
mov
sbb
jne
jmp
sahf
imul
jnp
add
xor
mov
jmp
xchg
sar
cwtl
cmp
mov
adc
mov
lcall
cmp
je
mov
dec
sbb
and
mov
mov
dec
pop
iret
jne
or
data16
jno
mov
and
xchg
xchg
push
aad
mov
jmp
dec
lock
gs
and
jne
mov
push
pop
fdiv
int3
sbb
inc
test
inc
push
pushf
mov
sub
aad
inc
out
icebp
sbb
jge
adcb
xchg
dec
jp
push
add
xchg
sbb
dec
jo
ror
push
repnz
mov
and
mov
decb
jne
rorl
fidivs
push
sub
mov
mov
frstor
bound
dec
push
and
push
clc
into
xor
dec
je
inc
imul
xor
push
or
xor
adc
pop
xor
sub
jge
gs
sub
jmp
cmp
or
testl
insl
and
push
mov
or
sub
mov
call
fcompl
add
scas
lods
fnsave
test
lea
ds
jne
jno
loope
cmp
out
pop
das
push
ds
mov
add
jmp
mov
push
repnz
inc
xlat
mov
je
nop
rclb
jle
in
jb
or
xorl
mov
push
scas
lock
sbb
rolb
inc
test
pusha
add
adc
mov
add
sbb
push
lock
and
jp
mov
rolb
stos
sub
loopne
cmpsb
fstpt
leave
pop
data16
shlb
cmp
push
imul
test
cs
flds
inc
cmp
cmp
sub
add
push
mov
fs
je
sbb
gs
je
and
inc
repnz
cwtl
push
pushl
cmp
mov
int3
dec
call
or
inc
add
bnd
push
dec
sub
dec
and
push
add
std
outsb
das
add
adcl
push
jecxz
ds
adc
push
in
adc
inc
andl
mov
or
mov
test
jl
lahf
sub
enter
inc
movsl
inc
js
push
or
pop
shlb
sub
add
pushf
cli
and
jnp
pop
jl
xchg
push
in
call
hlt
and
mov
int3
push
push
loope
jecxz
imul
or
sub
push
jnp
push
shll
sub
xchg
xor
push
out
pop
push
pop
xchg
and
out
or
lcall
xlat
mov
out
stos
inc
push
push
push
je
mov
inc
jg
or
lock
add
jmp
dec
sti
or
sbb
inc
inc
jns
ret
jne
roll
pop
inc
shrl
pop
mov
and
and
inc
mov
or
dec
sbb
cwtl
movsb
mov
sbb
popf
call
rcrb
dec
hlt
mov
xchg
or
push
adc
and
sub
add
mov
iret
cmp
call
ucomiss
or
int3
test
scas
mov
into
je
rcr
cmp
mov
push
stc
inc
rorl
sbbb
or
xor
inc
test
sub
push
xor
ja
or
xor
scas
cmp
jb
sub
sub
sarb
jne
in
lods
or
mov
outsl
pop
add
fdivs
xchg
arpl
stc
fsubrl
gs
sbb
ss
mov
xchg
pushf
scas
cmp
jecxz
dec
mov
outsl
aad
leave
hlt
fisubrs
add
mov
test
pop
push
inc
pushf
or
aas
insb
jne
jbe
sbb
or
pop
and
pop
pop
sbb
jg
jnp
scas
pop
adc
mov
add
xor
daa
pop
mov
or
or
enter
loope
dec
jae
int3
les
xchg
push
add
out
jae
ret
jne
lcall
jns,pn
test
adc
add
sbb
cmovo
cli
sub
call
dec
mov
enter
test
enter
in
lods
mov
jb
cwtl
lods
lcall
neg
lret
nop
lret
and
dec
push
test
movq
or
pusha
inc
push
jb
inc
mov
adc
cld
daa
nop
in
fimuls
cld
stos
data16
stc
push
or
test
jb
mov
call
mov
push
cmp
jb
test
push
hlt
xchg
out
pop
inc
push
and
ret
sahf
inc
sub
lods
rclb
test
and
call
push
lods
add
nop
mov
dec
scas
nop
sub
lock
mov
in
xor
adc
add
in
daa
pop
enter
jo
adc
test
mov
mov
lock
cld
enter
cmp
subl
bound
or
push
fmuls
xor
cmpsl
jne
mov
mov
xor
fdiv
xchg
inc
inc
loop
or
sbb
jne
cmp
push
data16
ljmp
sahf
mov
imul
cmp
mov
outsl
ret
mov
pusha
out
sub
clc
xchg
adc
inc
cmpsb
ret
xchg
pop
add
inc
or
andb
sbbb
fwait
cmp
aaa
mov
fs
add
mov
in
or
pop
or
mov
lods
shrl
mov
and
mov
bound
daa
mov
mov
inc
cmp
mov
mov
jmp
mov
mov
or
add
xlat
add
sub
fnstsw
fsubs
push
adc
clc
xor
add
adc
mov
jne
add
ffree
imul
inc
cld
push
cs
add
rolb
enter
cmp
ret
pop
js
adc
and
inc
mov
add
mov
or
shll
enter
lret
and
sub
out
add
xor
dec
ret
dec
fimuls
xor
push
clc
add
cli
sti
cld
std
mov
shll
mov
xor
jl
insl
es
xor
fcoml
cmpsb
mov
jle
xor
jg
inc
gs
sbb
add
push
pop
ss
fisubrl
rcrl
int
mov
aas
xor
push
movsl
xchg
je
push
or
pop
inc
fmul
lock
sbb
fldl
in
neg
ss
add
call
fwait
cmp
push
push
mov
push
push
repz
in
xchg
imul
cltd
jo
push
dec
xor
data16
sub
das
negb
sub
xchg
dec
je
add
test
lcall
or
sti
sub
sbb
rorb
test
cmp
mov
iret
mov
add
test
push
jbe
sub
sbb
iret
out
lcall
inc
add
test
xchg
jl
out
adc
lock
test
in
lock
mov
in
inc
adc
fdivrl
push
fdiv
fsubrl
fstl
or
and
pop
icebp
inc
push
mov
and
inc
lock
repz
push
cmp
push
fsub
push
out
testl
nop/reserved
xor
and
push
dec
dec
and
add
adc
stos
enter
sti
dec
daa
insb
dec
inc
sbb
or
dec
fmull
lock
insb
leave
fs
fstpl
hlt
sub
ds
xchg
fbld
jbe
inc
jle
je
mov
inc
clc
add
mov
push
xchg
jmp
inc
fsubrl
add
add
fstl
popa
push
jmp
push
sbb
cli
clc
testb
pop
into
inc
jp
addl
cmp
and
ret
and
push
push
adcl
jge
outsb
cmp
inc
add
jns
fdivrs
push
loopne
mov
adc
sub
stos
lods
or
xlat
xchg
pop
aad
pushf
push
xor
mov
mov
das
mov
sub
in
mov
or
movsb
mov
xchg
xchg
pop
xlat
call
test
cs
call
jne
cmp
mov
lods
std
sarl
mov
mov
sbb
push
clc
dec
loope
push
jo
rol
add
add
pop
jecxz
movsl
jnp
jg
xchg
dec
sbb
pop
sar
clc
fldt
push
lea
testb
inc
cmpsl
test
lds
sub
std
or
mov
mov
out
or
mov
rolb
mov
pop
push
ss
ljmp
ret
fadds
push
pop
ja
adc
rclb
jne
std
lods
rorb
inc
das
push
rorl
mov
sbb
or
int3
shlb
enter
das
and
cli
jno
dec
push
and
or
add
test
xor
add
cld
adc
mov
cmp
hlt
cmp
stc
or
xor
popa
sub
mov
xor
in
and
mov
fstpt
dec
je
imul
je
cli
cmp
sub
dec
cmp
inc
or
hlt
sub
pop
aad
jb
adc
and
sbb
es
es
pop
inc
in
and
jne
cmp
inc
xor
cld
inc
sub
lcall
int
lcall
js
push
xchg
push
pop
lods
cmp
and
mov
push
leave
mov
push
repz
inc
lea
mov
xchg
xor
ds
in
sbb
lret
lea
pop
call
or
repnz
addr16
mov
jecxz
mov
adc
sti
push
inc
cmp
xor
gs
sub
out
in
mov
lods
scas
outsl
gs
cwtl
add
dec
jnp
dec
mov
xor
cwtl
xchg
mov
push
adc
xor
pushf
adc
mov
dec
insl
sub
push
mov
or
fidivrl
jns
daa
mov
mov
add
jns
xorl
hlt
std
push
test
add
enter
mov
imul
xor
and
jp
pop
pop
lods
divl
into
je
testl
pop
adc
or
fs
daa
daa
xchg
lret
sti
jecxz
xor
dec
sbb
jns
xchg
insl
sbb
std
aaa
push
cmpsb
pop
or
das
lock
or
std
adc
jecxz
ret
jecxz
lds
cmc
cmp
mov
test
jbe
outsl
mov
shlb
inc
mov
sbb
push
jmp
nop
popf
mov
call
jl
std
aas
mov
fsubs
sahf
push
mov
repz
mov
loop
push
fcomp
jge
mulb
mov
imul
mov
push
fidivs
lds
pop
mov
out
sub
mov
lock
out
imul
mov
imul
push
fmuls
adc
cmp
roll
push
mov
inc
sbb
xor
mov
std
repz
stos
cwtl
out
imul
inc
add
aaa
xor
in
push
sahf
aad
test
ret
cmp
rorb
icebp
xor
roll
adc
mov
inc
inc
adc
lds
cmpsl
adc
cmp
mov
mov
call
arpl
inc
lock
xor
repz
test
mov
std
shlb
arpl
mov
out
push
mov
popa
mov
lret
fdivrp
or
es
mov
stos
mov
sub
mov
pop
dec
faddl
movsb
cmc
shll
lret
lock
xor
push
mov
mov
sub
sub
or
cmp
sbb
jge
int3
mov
cmp
mov
addl
enter
cmp
push
div
enter
insl
jns
lock
sub
jae
dec
cmpl
pushfw
inc
fbstp
bound
cmpsl
add
push
movsb
adc
jge
clc
mov
inc
push
inc
lret
jne
cmp
sub
cmovge
addr16
push
or
pop
out
enter
push
dec
pop
xchg
and
je
xchg
push
and
in
loopne
in
std
std
loope
lods
pusha
push
add
add
xchg
test
xchg
aaa
fsubrl
pop
movsb
bound
add
mov
leave
inc
add
push
out
jns
iret
jmp
enter
ss
in
adc
sub
test
sub
adc
loope
push
jne
push
sbb
outsl
aaa
enter
push
aad
test
leave
mov
or
dec
movsb
test
add
cmp
cmp
sarb
and
arpl
aad
test
push
imul
push
xlat
adc
sub
cmp
ja
fiaddl
adcb
stc
pop
repnz
clc
xor
inc
xor
cmp
fmuls
pop
pop
rep
jecxz
cmc
ds
mov
int3
lock
inc
ret
dec
dec
push
fisubrl
push
lock
repz
push
lea
repz
sub
out
test
stc
nop
inc
sahf
das
scas
movsl
call
cmp
pop
push
push
jb
sbb
int3
stc
bound
jns
int3
stc
xlat
aad
scas
or
cmp
xchg
inc
int3
stc
int3
stc
aam
mov
cmp
and
out
xor
enter
push
add
push
cltd
mov
daa
xchg
ljmp
xchg
pop
xchg
xchg
test
pushf
inc
jb
jns
enter
mov
lods
test
fs
lret
aad
lcall
je
movsl
dec
dec
enter
sbb
outsb
pop
pop
xchg
lret
std
lret
outsb
cmc
loope
and
daa
mov
insl
and
cmp
test
xchg
rep
es
frstor
clc
mov
adc
leave
gs
pop
dec
pop
push
enter
aaa
and
or
nop
lret
push
divl
push
pushf
and
and
clc
mov
loopne
test
dec
stc
lcall
ds
mov
mov
dec
sub
dec
xchg
in
pop
inc
xor
nop
dec
es
movsb
inc
xchg
nop
bound
dec
inc
or
adc
test
scas
nop
incl
dec
adc
xchg
add
xchg
pushf
nop
nop
nop
cltd
add
lods
cmp
cmp
aad
ret
rclb
dec
pop
je
movsb
data16
jmp
push
outsb
aaa
pop
pop
aad
add
repz
cmpsl
push
mov
xor
cmp
fdivl
xchg
xor
pop
inc
inc
xor
out
push
std
fisubrl
cltd
nop
sbb
jg
adc
and
inc
push
pusha
push
dec
add
jo
stos
dec
cltd
add
pop
adc
rep
adc
cltd
and
mov
xor
sub
or
lods
cmp
roll
ret
pop
rolb
int
js
repz
jno
nop
inc
add
ret
sbb
adc
xchg
je
cmc
mov
rep
ss
neg
pop
mov
sub
shl
lock
push
lods
sbb
add
ss
dec
rcll
mov
or
inc
xor
int
mov
push
push
dec
adc
push
and
std
push
sub
icebp
dec
push
pop
outsl
inc
lret
repz
jbe
jle
sbb
imul
mov
push
jo
and
sbb
dec
or
call
pusha
int
enter
inc
ss
les
fs
inc
pusha
jae
test
and
call
mov
sub
cmc
into
jo
fidivl
ja
aam
sub
fimull
sub
mov
add
sub
push
pop
rcr
adc
in
lock
rep
jge
les
xor
mov
rcll
in
in
cmp
cmp
or
sbb
push
push
ret
imul
sbb
xchg
gs
jae
mov
pop
add
test
vcvtps2pd
imul
mov
fcmovbe
loopne
inc
movb
adc
pop
sbb
cltd
inc
push
or
push
jnp
shl
pop
aam
loop,pn
add
jne
xchg
and
sub
cli
xor
mov
lea
xor
add
mov
gs
mov
rcl
mov
push
adc
jo
mov
mov
add
fsubrs
dec
repz
or
and
test
movb
ds
gs
jg
or
gs
jns
adc
push
mov
jecxz
test
jno
test
je
aas
lods
scas
divl
adc
loop
ret
aaa
loope
imul
dec
and
insb
repnz
push
xor
jne
lea
popa
add
ja
add
les
mov
push
mov
js
out
and
stos
bound
adc
ds
loop
sbb
or
push
cmp
add
mov
jb
shlb
inc
pop
clc
shrl
mov
xchg
mov
xchg
mov
jmp
in
inc
mov
xor
xor
ret
jmp
mov
inc
sarb
dec
jecxz
push
mov
or
cmp
push
xchg
fisttps
cmp
aaa
dec
imul
hlt
daa
clc
inc
push
shr
lret
sbb
jae
testl
es
ss
aaa
out
mov
nop
push
call
mov
inc
jp
and
xor
cmp
xchg
mov
or
push
sar
adc
mov
push
or
sarb
bound
lret
mov
fs
xor
inc
push
pop
push
push
addr16
mov
rcr
shr
rcr
or
jne
div
pop
dec
sti
ja
mov
out
jb
cmp
or
cmp
imul
sub
sbb
xor
loop
adc
or
fcmovu
fcmovu
lret
or
jle
iret
pop
push
es
jle
mov
push
add
jo
test
addb
pop
pop
jmp
pop
test
pop
stc
movb
inc
pushf
and
stc
clc
movb
fwait
inc
je
push
adc
pop
cmp
xchg
adc
pop
sub
push
lea
std
popf
jp
xor
add
sbb
or
clc
inc
add
fsub
jl
pop
popa
sub
sbb
shlb
adc
ret
xor
ja
mov
dec
leave
and
sub
popf
jne
mov
adc
pop
pop
cmpsb
sbb
mov
lock
adc
decb
outsb
mov
dec
cmpsb
stos
dec
and
pop
sbb
inc
and
imul
dec
sbb
sbb
mov
inc
cmp
push
sarb
add
lea
and
push
mov
jb
push
xchg
das
fcoml
clc
aas
pop
xor
push
lret
or
ss
ret
out
pusha
adc
cmc
jne
sbb
jbe
lea
push
incb
and
int
adc
int3
xchg
js
xor
ds
pushf
and
addb
adc
cmp
adc
fs
mov
inc
lods
inc
dec
andb
shll
dec
mov
mov
leave
mov
outsl
subb
mov
lret
test
shlb
aas
adc
loopne
push
stc
loopne
sbb
push
or
movsl
movsb
and
inc
xor
cmp
js
mov
iret
add
add
add
pop
test
and
or
aaa
dec
push
sbb
lock
rclb
xor
or
repnz
jge
in
test
xchg
aas
sar
push
xor
cmp
or
test
rcr
inc
xor
push
lock
adc
mov
inc
sbb
pusha
rclb
add
push
jo
cmp
push
mov
out
sbb
fidivrl
mov
mov
add
pop
loopne
loopne
and
lea
and
repnz
outsl
movl
or
mov
pop
ret
add
shlb
cmpsl
jbe
popa
adcb
icebp
movsb
shlb
je
mov
fdivrp
iret
mov
stos
ss
sub
or
mov
in
lea
adc
cs
divl
lret
ret
jge
jecxz
icebp
incl
and
mov
and
stos
addb
in
popf
jne
int3
pop
mov
mov
push
out
inc
and
daa
ss
pusha
aas
iret
shll
xchg
pop
sub
out
dec
addr16
outsb
or
cld
cmp
and
pop
xor
test
repnz
and
add
test
std
sbb
add
push
das
xorb
cld
dec
push
mov
int
ret
clc
or
push
jmp
lods
xchg
lret
hlt
icebp
repnz
push
push
hlt
xchg
add
mov
or
jbe
cmp
cmp
jb
inc
fistpll
sub
out
inc
pop
inc
cmp
roll
and
xor
daa
dec
sbb
ret
jg
mov
sub
bound
inc
data16
pop
cmpb
push
dec
sbb
sbb
push
dec
cs
or
or
jmp
sti
jb
inc
sub
ds
adc
icebp
pushf
lahf
push
push
xor
mov
sbb
imul
into
lock
mov
cs
push
mov
jo
push
jne
jmp
cs
push
sub
and
pop
push
adc
fisubrl
xchg
pop
dec
inc
adc
adc
mov
inc
adc
inc
jbe
orl
add
ja
push
pop
mov
sub
popa
lret
adc
shrb
push
or
mov
out
xchg
push
add
ret
xor
adc
or
ret
and
fs
scas
jge
adc
hlt
in
sti
add
test
dec
pusha
jae
pop
dec
ds
scas
add
add
test
xchg
cwtl
lock
xchg
and
leave
frstor
test
jle
cmp
xor
inc
add
and
push
sub
loop
sub
cmp
mov
fs
pop
push
push
mov
xchg
test
cmp
and
xchg
sub
xchg
cmp
popa
cmp
shl
jo
lock
leave
push
sbb
rorb
sbb
dec
or
pop
sub
pop
jmp
push
push
xor
std
adc
gs
push
cmp
ret
inc
icebp
imul
and
call
in
hlt
add
add
pop
loopne
add
add
popf
cmpsb
ret
push
and
xchg
xor
or
lock
shll
fs
sbb
dec
movsb
fstps
fdivs
cmc
mov
pusha
pop
movb
mov
lods
pop
or
sbb
add
xchg
adc
clc
and
dec
je
xchg
dec
cmc
mov
jmp
int3
xchg
push
push
loope
sub
mov
mov
cmpsb
das
addr16
and
fidivrl
fwait
lret
dec
sbb
cmp
in
push
push
call
mov
add
push
lods
scas
xor
and
or
je
sarl
dec
mov
mov
jne,pn
sbb
fnstsw
movl
fwait
sub
fsubr
out
xchg
mov
cmp
jge
mov
inc
nop
lock
push
pop
mov
inc
fninit
push
or
add
mov
push
xor
cli
insb
cmp
jo
sarb
adc
rorl
pop
aam
push
adc
fs
stos
imul
jb
repnz
add
push
or
adc
insb
in
das
lds
sbb
and
mull
negb
gs
push
mov
jecxz
xor
jg
jmp
test
fsubr
clc
sub
cmp
bound
and
and
push
shl
fdivrl
xchg
fcmovb
out
inc
mov
sbb
cwtl
cmp
dec
jae
jb
jo
ljmp
xchg
mov
insb
loopne
ja
inc
test
and
pop
je
inc
insl
pop
dec
loope
sub
cmp
rcll
cmp
mov
rolb
mov
xchg
push
aam
and
mov
dec
outsl
loopne
cmp
jbe
stc
std
or
ljmp
jmp
cmc
sub
ja
dec
adcl
popa
fs
inc
cmpsb
orb
je
mov
pop
push
cs
mov
addr16
test
mov
jnp
and
mov
xor
ret
add
dec
rorb
add
pop
push
sub
stc
es
sbb
dec
push
out
mov
ss
push
mov
lea
add
adc
fdivs
pop
jg
pop
ss
mov
inc
and
cmp
pop
push
or
mov
push
popa
jo
pop
inc
mov
mov
inc
in
sbb
mov
jp
fldl
adc
push
test
inc
or
xchg
add
inc
lcall
sbb
fsubrs
stos
sub
sub
repz
jmp
xor
loopne
pushf
rcrb
inc
inc
ret
jo
js
incl
mov
or
inc
inc
inc
pop
je
pop
es
pop
cmp
or
addb
xor
or
pusha
push
mov
roll
outsb
adc
add
dec
pop
or
push
es
pop
cmova
add
dec
mov
rorb
pop
xor
andb
inc
mov
mov
repz
mov
inc
pop
loope
pop
add
arpl
sub
ljmp
cwtl
pop
lahf
rorb
mov
int
xor
sbb
mov
shll
mov
sub
dec
inc
inc
cmp
add
js
mov
loope
fnstcw
lods
inc
xor
clc
hlt
aas
jae
mov
sbb
shl
vmwrite
mov
clc
ss
stos
mov
imul
jno
daa
and
dec
mov
or
push
daa
subl
and
in
loope
jne
add
push
jl
and
mov
or
or
leave
xor
js
out
jmp
or
ret
in
mov
cmp
cmp
mov
inc
inc
or
jne
repnz
sub
push
sar
jp
and
hlt
arpl
orl
sbb
clc
dec
loopne
or
gs
push
pop
cmp
shlb
cmp
cwtl
ret
jmp
sbb
addb
fs
sub
mov
add
sbb
cmp
rol
ljmp
or
loopne
imul
mov
mov
lcall
push
xchg
les
pushf
mov
push
push
pop
push
dec
add
mov
or
add
call
ret
in
jmp
add
mov
mov
or
or
or
push
and
aaa
test
cmp
inc
mov
aam
loope
in
js
dec
into
addl
push
inc
push
and
pop
pop
add
out
mov
xchg
movsb
jl
inc
or
daa
pop
pop
sbb
subl
xchg
pop
aaa
clc
add
nop
and
mov
andb
and
and
daa
into
sub
mov
call
cmp
insb
loopne
ficoms
adc
ror
inc
xor
push
mov
dec
movsb
sub
bound
add
dec
jp
cmp
mov
add
out
add
flds
flds
cs
imul
inc
add
and
xchg
or
sbb
incl
hlt
inc
adcl
sub
xchg
pop
repz
push
cmp
push
adcb
jb
xchg
andl
testb
nop
gs
pop
adc
mov
aas
fwait
cmpsl
adcb
mov
rorl
mov
inc
idivb
add
loopne
lock
sub
mov
xor
dec
movl
pop
sub
mov
jmp
scas
pop
addl
cltd
dec
adc
aaa
sbb
out
mov
shrb
sahf
or
mov
fs
out
push
xlat
cs
push
divb
sti
xor
push
in
lret
movsb
loope
lock
andl
sbb
dec
shrl
in
out
mov
test
adc
loopne
or
xor
add
push
rcrl
adc
xchg
mov
sub
jno
sbb
enter
add
adc
jb
rcrl
mov
jle
add
ret
sub
mov
cmp
dec
inc
xchg
pop
ljmp
ja
in
mov
jno
or
roll
jle
mov
stos
xlat
or
into
bound
or
pop
jae
pop
aam
adc
push
add
cmp
jg
add
jmp
pushl
add
jl
daa
and
push
jne
and
add
sarl
mov
mov
je
mov
in
adc
jl
subb
in
stc
inc
pop
test
sahf
lret
adc
xchg
add
popa
xchg
jo
call
loope,pt
inc
adc
js
je
push
cmp
test
fcmovnu
loop
push
push
sar
push
iret
push
movsb
aad
jne
add
data16
mov
add
sti
or
add
mov
or
mov
and
mov
push
dec
dec
mov
pop
or
mov
loopne
pop
daa
insl
cmpsl
jp
inc
pushf
cmp
rcrb
popa
lods
out
push
or
pop
imul
or
xchg
xchg
sbb
clc
cmpsl
and
mov
push
add
imul
les
jne
js
push
and
ret
pop
cmp
xor
test
mov
popf
or
pop
bound
das
adc
test
add
adc
clc
mov
pop
and
xor
xchg
dec
dec
loopne
jnp
cmpsb
or
sarb
sbb
aam
jle
fisubrs
sarb
ret
xor
mov
cmp
add
sub
push
and
push
push
scas
out
or
ds
test
xlat
call
or
jp
negb
mov
jmp
adc
outsl
jo
lret
mov
fdivs
adc
mov
rolb
ficoml
pop
jmp
fdivrs
jp
pop
jmp
lock
push
push
mov
outsb
adc
aam
leave
enter
xor
add
mov
push
sbb
rclb
in
aaa
test
cmp
jg
inc
jmp
inc
inc
or
scas
hlt
pop
mov
jbe
jne
imul
enter
push
pop
test
fiaddl
mov
jo
and
sub
or
ret
ss
inc
push
mov
xchg
mov
aam
dec
movsl
adc
mov
cld
cwtl
testb
jne
push
out
mulb
and
add
or
push
mov
test
enter
sbb
enter
mov
rcl
movl
or
movl
xchg
pop
or
fldenv
inc
pop
pop
sub
fisubs
aas
xor
lea
movsb
pusha
pop
xchg
adc
push
cmp
lock
add
je
testb
je
mov
adc
sbb
or
test
push
loopne
mov
cmp
cmp
aaa
mov
leave
es
sub
andl
and
and
jle
sbb
cmp
cmp
jbe
mov
jg
sub
dec
fstpt
add
push
or
sbbb
mov
inc
test
cmp
jl
and
dec
sahf
sbb
mov
les
enter
loopne
add
popf
adc
xlat
adc
add
rcrb
dec
loopne
dec
in
and
xchg
call
out
std
jmp
pop
mov
push
in
push
xchg
ret
sub
mov
cmp
sti
xor
and
and
inc
sbb
pop
mov
jmp
mov
leave
pusha
and
dec
xorl
outsl
dec
dec
dec
and
push
adc
add
sbb
add
xor
shlb
fs
fs
rorl
lret
push
sbb
xchg
mov
call
lock
push
jl
jle
sub
push
jo
xor
or
xchg
push
dec
loopne
lret
mov
cmp
or
jg
aas
add
and
aaa
imul
sbb
pushf
sbb
add
test
add
sbb
pop
bound
push
push
adc
clc
nop
movb
out
dec
or
mov
jg
xchg
sub
out
add
pop
jl
mov
sub
xor
xchg
test
pop
mov
cmp
add
fneni(8087
xchg
inc
mov
test
and
xor
jl
push
gs
add
mov
loopne
js
dec
sahf
addr16
ja
sub
mov
aaa
inc
addr16
in
mov
adc
ss
sub
inc
push
clc
add
and
add
jmp
mov
cmp
lock
pusha
mov
pop
cmp
fcoml
ja
pop
add
cmp
jae
adc
push
insb
cmpsb
mov
fidivrl
pushf
jg
mov
scas
or
mov
push
out
aaa
xchg
pop
ret
jbe
xchg
lods
adc
xor
repnz
in
and
and
push
ljmp
scas
rcrb
rolb
pop
flds
jle
mov
lcall
cmpl
pop
frstor
lods
xchg
fxch
xchg
lock
adc
aaa
rcrb
pop
jle
outsb
ss
cmp
dec
sbb
mov
or
popl
and
mov
sarb
or
cld
push
sub
das
sbb
inc
icebp
mov
push
ja
xor
xor
repnz
mov
dec
shl
pop
sbb
add
repz
lods
popa
pcmpeqd
lcall
mov
cltd
inc
test
aam
push
xlat
add
inc
cli
cmpl
and
aaa
inc
mov
jmp
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
add
pop
add
inc
movb
cmp
add
add
xlat
or
lock
add
xor
es
call
or
mov
jo
aam
jle
jge
jno
leave
repz
inc
add
cs
jno
push
or
sbb
orb
lcall
or
hlt
mov
jo
pushf
sbb
add
and
ret
mov
icebp
lcall
inc
fildl
data16
andb
mov
sbb
int
lahf
sub
jns
push
test
or
inc
add
pop
mov
lea
pop
je
pop
cmc
and
push
mov
push
imul
mov
test
into
xchg
push
ss
sub
fcomps
push
lahf
push
jb
data16
mov
imul
pop
push
or
mov
cmp
jl
mov
inc
add
or
xchg
add
fisttps
jns
jle
pop
lock
rcrb
clc
push
mov
mov
cmc
dec
push
ljmp
jb
mov
dec
sbb
movsb
sub
inc
push
mov
inc
xorb
in
dec
dec
inc
dec
or
xor
enter
icebp
cmp
int
xchg
pop
scas
mov
sbb
das
inc
jp
add
pop
lods
insb
lret
pop
or
dec
incl
sbb
adc
or
mov
pop
jo
cmpsl
shll
test
mov
xchg
xlat
jns
jne
mov
and
in
shrl
sbb
mov
arpl
pop
and
adc
add
ret
loopne
pop
sarl
xchg
pop
jle
xchg
jl
les
mov
sbb
sbb
jecxz
fildll
push
or
aas
push
ret
repnz
mov
cmp
and
push
dec
cmpsb
or
arpl
add
dec
mov
push
lock
adcl
sbb
popl
mov
add
dec
js
or
outsb
jns
lods
adc
cs
and
pusha
jbe
add
sbb
decl
mov
stos
mov
cmp
fstl
orl
call
lret
pop
hlt
pusha
sbb
push
mov
or
or
ss
test
outsl
nop
insb
ret
mov
push
push
cmp
xor
pop
and
negb
std
jb
xor
icebp
xchg
or
add
add
add
push
pop
jp
adc
repnz
cmpl
lcall
lock
orl
push
es
cmc
sub
xor
sub
mov
push
ljmp
and
dec
sbb
xor
mov
jo
jo
out
mov
mov
mov
call
je
cmp
adc
jecxz
es
cmp
jb
testb
cs
inc
sub
data16
dec
sub
add
out
gs
movsb
mov
movb
and
es
sbb
jns
jb
cmp
mov
push
push
or
adc
sub
in
push
cwtl
or
rcr
xchg
xchg
cmp
xor
imulb
cmp
outsl
jo
clc
shl
push
out
adc
mov
mov
cld
outsb
xlat
xor
jle
clc
rcrb
fstpl
pop
or
es
jmp
ret
icebp
cmp
xchg
push
inc
cmp
loop
push
sub
popf
adc
push
push
stos
push
ret
and
and
sub
fs
pop
sub
sbb
pop
sarb
je
xchg
cli
adc
jbe
inc
push
jbe
pop
mov
or
adc
lods
in
add
int3
cmp
popa
mov
mov
sbb
mov
popl
lods
push
mov
push
cld
inc
mov
pop
push
dec
je
out
pushf
test
push
sbb
adc
pop
sti
dec
inc
out
mov
std
mov
dec
and
sbb
sbb
sbb
push
add
js
mul
push
mov
mov
xor
add
rcrl
xor
inc
shll
stc
cmp
leave
xor
out
jne
ret
pop
push
push
mov
mov
dec
int3
cs
adc
or
in
inc
popa
add
test
dec
fisttpl
addl
adc
daa
daa
mov
ss
sub
daa
daa
daa
xor
cmp
or
cmp
inc
and
dec
dec
outsb
daa
inc
cmovs
or
push
pop
add
xchg
pusha
fs
xchg
jo
js
dec
jnp
mov
adc
and
dec
xor
xor
xchg
cwtl
pushf
mov
movsb
test
sub
dec
mov
mov
arpl
aad
add
add
add
lock
stc
push
dec
sub
hlt
and
fwait
nop
jle,pn
or
clc
adc
add
dec
dec
cld
adc
or
sbb
or
subl
and
in
lahf
nop
nop
or
insb
pop
jns
xchg
adc
add
pop
dec
inc
pushf
dec
and
add
add
shlb
and
dec
pop
imul
jbe
or
and
inc
sub
mov
dec
add
out
cli
dec
mov
sbb
cmp
dec
fwait
xor
dec
sbb
mov
push
shlb
mov
dec
int3
inc
sub
mov
pop
repnz
mov
push
sub
out
push
or
imul
fiaddl
jne
jmp
in
daa
mov
and
inc
inc
test
xor
pop
fcmovu
pop
pop
ret
xchg
insb
jle
cmp
popa
lods
or
cmp
inc
sub
mov
test
ret
testb
hlt
stos
xor
push
lret
je
lea
push
jle
shrl
adc
push
popf
xor
mov
lods
or
sbb
inc
lcall
pusha
aam
xchg
or
aam
rcr
sub
dec
pop
je
push
pushf
daa
inc
or
rcrb
inc
push
dec
and
loopne
test
or
pop
jge
pop
add
fstpt
stos
mov
push
gs
mov
lock
rep
cmpsb
mov
xchg
cmp
mov
add
int3
add
inc
repnz
cmpsb
add
mov
stos
cmpsb
xor
outsl
add
addl
mov
ljmp
add
loope
ret
xor
and
jmp
jg
jo
pop
in
xlat
jmp
jbe
fmuls
dec
xor
out
jg
adc
mov
xor
pop
popa
pop
int
add
ret
push
movsb
push
roll
fcoms
rolb
into
push
or
aaa
loopne
or
push
or
mov
loope
adc
adc
and
fisubrl
jb
push
mov
push
movsl
add
outsl
jmp
enter
sbb
std
xor
mov
psubb
loope
adc
pop
mov
cmp
add
inc
xor
pop
push
inc
add
xchg
and
mov
scas
xchg
or
push
add
fisubl
fsubrp
sbb
pusha
adc
imul
mov
rorb
clc
movsl
jns
inc
into
sub
xchg
sbb
pop
in
dec
call
in
cmp
mov
pop
out
or
out
jecxz
adc
mov
and
hlt
add
add
out
out
jle
fisttps
fcmovnbe
sti
mov
or
popa
sub
sub
jne
sbb
xchg
or
ljmp
test
xor
stc
popf
add
sbb
inc
shlb
movsb
jno
xchg
inc
insb
push
dec
lods
sbbb
ljmp
out
adc
xorb
and
cmp
xchg
popf
pusha
dec
sub
add
int
push
sahf
cmp
pop
addl
pop
outsb
xchg
lret
ss
mov
or
inc
adc
mov
pop
lea
jbe
stc
or
lods
mov
adc
ja
fistl
push
hlt
mov
add
xor
stos
jmp
ja
fcoml
mov
cmp
ret
jo
lret
add
cmp
fsubs
pusha
push
mov
xchg
adc
pop
cmpsl
cmpsb
ds
scas
inc
call
pushf
pop
ss
push
dec
inc
lea
or
xchg
push
orl
lea
mov
iret
les
push
xchg
mov
fcoms
sub
push
lea
dec
pop
dec
ljmp
sub
xor
sarl
cmp
test
mov
jl
mov
incl
cmpsb
int
push
test
push
or
push
icebp
cmp
mov
mov
sbb
scas
rcr
pusha
cld
sub
jmp
jne
movzwl
and
mov
mov
and
sbb
out
inc
int
dec
out
sub
inc
cmc
push
icebp
pusha
adc
dec
pusha
push
ds
mov
fcomps
add
in
sbb
fistpll
mov
pop
clc
daa
and
adc
cmp
out
in
push
sysenter
sbb
dec
add
xchg
sbbb
int3
mov
pop
adc
lret
sahf
cmp
push
xchg
outsb
ja
sub
sub
jne
sahf
inc
rclb
cmp
pop
scas
pushl
adc
cli
or
inc
popa
das
fimuls
mov
adc
mov
jmp
inc
fmuls
scas
loop
stos
push
and
inc
lret
cmp
push
pop
inc
add
push
cmp
jmp
push
add
js
mov
aaa
enter
movsl
dec
add
lds
add
xchg
scas
in
mov
lods
push
orl
fwait
sar
or
inc
inc
sbb
or
dec
cmpl
add
inc
faddl
jl
mov
dec
dec
stc
pop
pusha
mull
rclb
adc
into
fs
dec
lock
push
xchg
sub
inc
cmp
push
addb
test
mov
pop
push
cmpsb
pop
lock
scas
sub
out
data16
mov
std
jno
add
addl
sti
add
jns
je
add
fwait
jo
lret
jmp
or
pop
push
lods
loopne
pop
sti
mov
jge
jl
lea
cmp
pushl
lods
adc
jns
inc
ja
shlb
insb
ljmp
dec
cmp
adc
lods
mov
divl
fidivrs
or
pusha
xor
mov
inc
cmpb
mov
test
lods
and
sbb
loop
adc
orb
xor
push
xor
pop
popa
push
adc
mov
orb
jo
loope
je
aaa
push
imul
add
or
jmp
sub
and
xchg
rorb
sbb
ret
cld
clc
sbb
ret
scas
inc
jmp
test
clc
or
sbb
jmp
sbb
xor
es
lods
dec
adc
fcoml
adc
jp
subb
or
dec
int
add
mov
or
inc
add
inc
xor
and
adc
daa
add
scas
subb
lock
addr16
dec
cmc
fdivrl
sbb
push
and
mov
aaa
xor
sbb
fnstenv
data16
or
outsb
repnz
and
es
mov
ljmp
mov
pop
or
sbb
or
pop
inc
mov
lods
add
mov
xor
jecxz
cmp
adcb
pushl
cmpl
cmp
dec
repnz
into
sub
and
orl
or
add
push
notl
ds
pop
mov
and
push
gs
fisttps
repz
pop
cmp
lods
mov
mov
xchg
xchg
out
ja
add
call
pop
fstpt
addr16
pop
and
or
adc
pop
fisubrs
push
jne
pusha
lret
mov
fldenv
dec
and
adcb
push
cmp
ficomps
lods
pop
lods
pop
pop
nop
clc
scas
pusha
mov
cmp
pop
shll
add
push
rcrb
test
lods
xor
add
lcall
sahf
lcall
lock
mov
dec
or
or
or
dec
cmp
mov
test
mov
push
cmpsl
sbb
push
and
je
pop
or
pop
jl
xchg
test
add
shlb
fnstcw
pop
sbb
push
add
push
popa
add
in
das
mov
sub
jns
mov
clc
add
jns
sub
pop
xchg
adc
mov
jmp
inc
test
jl
push
test
cltd
jae
dec
mov
clc
mov
inc
jmp
movsl
sub
icebp
xor
jecxz
loope
xchg
mov
mov
loop
jle
xorb
es
nop
xchg
ret
push
jo
inc
dec
fistps
push
clc
scas
pop
movsl
cmp
and
pop
add
push
jno
out
sbbb
push
sbb
adc
outsl
adc
sarb
push
cmp
sub
rclb
and
cmp
pop
pop
mov
int
jb
stos
loope
jne
push
ss
inc
mov
add
mov
jne
in
mov
sub
mov
mov
das
mov
lea
sub
mov
pop
mov
or
das
push
fcoml
out
inc
aam
inc
dec
cmp
and
ds
or
pop
clc
jp
inc
mov
sub
les
mov
and
into
xor
nop
test
mov
jne
rcr
dec
jbe
jbe
mov
scas
xor
adc
dec
cmp
in
lods
dec
and
mov
adc
inc
lret
pop
sub
rorl
les
jmp
jle
mov
adc
adc
sub
add
or
add
stc
inc
mov
cmpb
lods
mov
mov
sbb
callw
xor
pop
jmp
xchg
xor
gs
in
popa
lods
imul
test
in
pusha
icebp
xor
and
inc
les
or
ror
rolb
popf
mov
mov
rorl
sbb
in
xchg
jo
and
sbb
pop
and
sub
movsb
pop
xor
hlt
sti
pushf
pop
mov
xor
pop
sub
je
push
popf
ds
mov
outsb
cpuid
cmp
pop
std
sahf
and
data16
pop
negl
outsb
or
xor
inc
sbb
adc
and
pop
or
push
push
iret
sahf
out
call
or
cmp
fisttpll
test
push
or
and
nop
push
repnz
sti
or
push
mov
xchg
test
and
add
or
or
jns
or
nop
fcmovnu
lea
add
shll
dec
xor
adc
divb
leave
and
shr
xchg
fildl
add
gs
dec
test
push
add
add
push
in
push
or
add
cwtl
xor
out
add
mov
push
dec
fistpl
je
or
or
push
les
subl
inc
jmp
pop
in
clc
incb
jmp
sbb
lock
and
mov
dec
fisubl
and
jecxz
mov
xchg
jmp
cmp
or
pop
dec
std
roll
xor
sarl
cmp
jge
je
sbb
add
loope
flds
and
aas
pusha
mov
pusha
loope
pop
sub
mov
add
dec
in
adc
fnstsw
pusha
cmp
imul
pop
insb
loop
popf
sbb
sub
inc
testb
push
es
jns
dec
in
or
add
add
test
fisttps
aas
popa
cwtl
mov
cmp
mov
or
sub
sarb
sti
xor
xchg
mov
pop
testl
jp
test
adc
dec
pop
sbb
jmp
push
and
inc
add
outsl
cs
int
add
inc
flds
fldenv
mov
dec
jp
or
push
ret
mov
loopne
sbb
mov
dec
adcl
cmp
mov
cmp
mulb
xchg
or
shrb
ficomps
mov
push
sub
out
gs
adc
xor
pop
out
shlb
add
rcll
inc
xchg
aaa
sbb
adc
jp
loop
fcompl
jle
xchg
and
inc
jl
add
add
jmp
sub
sub
jmp
sub
cmp
mov
psubusw
push
adc
adc
sub
repz
pop
pop
or
cmc
jnp
imul
xchg
add
push
fstpl
xor
add
imul
cmp
cmc
repz
faddl
adc
xchg
inc
movsb
shrl
and
mov
or
mov
mov
iret
or
into
pop
not
mov
ret
movsb
pop
orl
fs
shl
jle
loop
jo
jp
push
sahf
jmp
pop
ret
dec
test
movsb
lods
in
sbb
adc
lds
mov
and
cmpsl
or
jp
add
cmp
mov
xor
jg
outsl
mov
sbb
pop
call
test
push
jmp
or
mov
or
sub
push
xchg
movl
xchg
xor
or
xchg
test
lds
fs
jno
je
jl
push
add
rcl
inc
movsl
adc
jg
pop
add
adc
or
and
add
sbb
pop
jg
xor
add
sbb
pop
adc
ret
incb
jno
mov
dec
inc
and
push
add
or
sub
sbb
mov
pusha
xchg
jo
adcl
xor
sub
xchg
stos
mov
push
mov
inc
movsl
mov
add
add
cmpb
cmp
scas
cmpb
mov
icebp
pushf
out
mov
jbe
sub
daa
inc
mov
daa
mov
inc
jo
popa
sbb
mov
int3
cmp
fnstsw
adc
push
jns
xor
pusha
mov
mov
mov
std
mov
mov
adc
int3
pop
cld
or
jge
sub
pop
lahf
enter
dec
imul
cmpps
sahf
push
cld
ljmp
jne
sti
jo
gs
gs
ljmp
xchg
mov
cmpsl
pushf
mov
add
ljmp
xchg
out
push
pop
or
test
fadds
into
fcmovne
push
sbb
es
pop
jbe
insb
ljmp
test
push
push
stc
jne
dec
pop
or
mov
aad
icebp
sbb
mov
aam
gs
or
aaa
dec
pop
xchg
stos
inc
add
or
push
out
mov
out
out
jne
mov
je
mov
cld
push
add
push
jl
sbb
sub
hlt
xor
pushf
shr
loop
pop
sub
clc
data16
dec
aad
push
fisttpll
inc
or
test
sbb
loop
inc
flds
and
xor
or
inc
flds
adc
fldt
add
adc
int3
and
sbb
fidivs
lods
aam
or
jle
call
ret
sbb
and
ja
or
insb
jg
les
and
inc
je
sbb
adc
jge
inc
xchg
scas
push
mov
xchg
and
jbe
mov
or
dec
test
sub
outsl
ljmp
adc
add
push
mov
cmp
jle
add
sbb
or
std
sbb
fidivrs
push
popa
inc
shlb
xor
fsubrs
xor
adc
push
cmp
insl
push
mov
and
data16
aas
dec
and
jbe
mov
push
jnp
iret
jl
enter
xchg
adc
lcall
add
xchg
mov
mov
dec
cli
dec
enter
es
mov
mov
pop
xor
psubq
popa
add
lods
sbbl
fwait
lock
sbb
jno
fildl
out
push
mov
adc
enter
add
loope
insb
popa
adc
or
add
adc
pop
xchg
jl
xor
mov
dec
aas
gs
pop
jle
mov
or
xchg
hlt
dec
cmpw
inc
inc
mov
sarl
adc
bound
int
loopne
inc
dec
orb
mov
loopne
adc
push
or
test
and
pusha
mov
sar
sub
push
data16
sarb
cmp
mov
pop
loope
lcall
add
add
orl
addb
adcl
push
sub
scas
xchg
jo
shlb
mov
cltd
xorl
add
dec
pop
pop
dec
jns
pop
shl
adc
lea
pop
subb
popa
daa
icebp
lret
loopne
test
mov
inc
aam
loop
rolb
adcl
cwtl
movsb
dec
or
jmp
push
cli
out
mov
insb
pop
and
mov
out
mov
inc
mov
into
dec
jbe
dec
inc
out
fisubs
xor
repnz
jb
cmp
sbb
in
movsl
cmc
iret
dec
cmp
or
jb
mov
nop
les
jae
dec
mov
adc
imul
movsb
pop
and
aam
add
test
rclb
inc
mov
subl
sti
cmp
dec
dec
lock
xchg
shrd
test
xor
enter
cmp
mov
mov
xor
or
pop
inc
mov
lcall
and
push
cld
not
in
popf
push
or
iret
xchg
vaddsd
out
push
or
add
fisubs
ss
popa
adc
mov
jl
inc
shl
aas
fcoml
mov
jl
mov
aam
push
mov
mov
jge
popa
pop
xor
sub
in
mov
hlt
sub
add
test
repz
dec
adc
mov
cmc
push
or
test
gs
cmp
cmovg
bound
pop
xchg
adc
loop
lcall
inc
xor
sbb
jns
inc
lock
or
jecxz
or
mov
lock
daa
jae
cmp
mov
out
addl
mov
rolb
or
loopne
mov
andl
sbb
mov
mov
iret
pop
xorb
and
mov
sub
add
sub
xor
jge
cli
pusha
and
sub
shrl
imul
adc
xor
add
or
or
mov
in
add
loop
stc
and
mov
pop
push
bound
pop
pop
xchg
jns
scas
sub
sub
pop
pop
inc
leave
adc
or
adc
pop
add
adc
adc
cmpl
or
adc
cld
xchg
out
or
sbb
les
adcl
sbb
push
add
mov
stos
std
dec
ljmp
adc
into
mov
push
or
test
mov
hlt
test
orb
or
xor
add
or
push
lods
mov
lcall
cmp
in
jne
inc
jmp
mov
push
adc
or
xchg
add
aam
loopne
sub
cmp
ja
inc
or
frstor
xchg
mov
call
cmp
rolb
sbbb
jle
sub
inc
add
mov
sbb
into
jmp
ljmp
jmp
ds
pushf
adc
jmp
cmpsl
scas
adc
push
mov
adc
push
sub
inc
call
mov
push
js
std
cmp
jle
cmp
push
xor
pop
dec
push
jmp
dec
push
mov
lds
xchg
sbb
int
and
sub
shll
sub
mov
dec
add
mov
jae
cmpsl
movsb
cmp
mov
ret
dec
inc
fisttpl
fwait
sbb
push
pop
jge
pop
mov
mov
add
mov
nop
add
jne
dec
dec
jae
and
sbb
sub
mov
or
fisubrl
call
xor
lea
mov
out
push
sub
out
adc
gs
orl
daa
sbbl
push
stc
sub
cmp
mov
jo
test
mov
and
call
mov
add
xor
fsts
imul
jbe
jg
fs
testl
push
jmp
fiadds
push
fisttpll
jmp
cld
mov
rorb
sbb
and
sub
mov
rolb
or
sti
or
jecxz
add
pushf
jmp
push
mov
pop
mov
jno
or
xchg
cmpsb
push
adc
jne
xor
cmpsb
dec
pushf
xor
or
mov
neg
add
mov
rcr
fwait
movsb
sub
cmp
cmp
testl
sub
dec
pusha
lods
or
ret
out
in
test
or
sub
xor
jne
rcr
add
adc
inc
pop
subb
lods
shll
xchg
les
cli
push
inc
aas
pop
cmpsl
mov
and
fmuls
cmp
jb
mov
dec
mov
cmp
add
pop
rorb
mov
mov
into
mov
mov
pushl
lock
and
and
adc
nop
frstor
push
and
adc
sbb
ja
out
lret
ja
mov
pop
mov
out
push
pop
pop
movb
testl
jne
enter
les
mov
pop
inc
into
jne
inc
or
fwait
add
sarb
xor
hlt
int3
adc
pop
mov
test
rcrl
or
push
in
imul
mov
movsb
push
adc
lock
lahf
into
push
mov
dec
ja
lods
add
and
push
rorl
subl
lcall
inc
xor
stc
jg
add
push
or
aaa
dec
or
scas
or
js
js
add
inc
nop
shll
hlt
insb
and
or
shr
add
rcll
xorb
into
and
pop
or
adc
inc
mov
les
jno
push
add
notb
mov
mov
test
ss
fcom
insl
dec
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
push
aam
daa
fwait
aam
shrl
das
int3
and
mov
mov
push
ja
aam
loope
or
sar
mov
insl
xchg
push
add
fisubl
in
cmp
pop
es
add
in
fiadds
push
call
test
mov
pop
jle
jb
add
adc
fmull
jo
dec
ja
orb
sbb
or
add
sbb
mov
lds
push
push
into
jmp
scas
push
xchg
shlb
sbb
jae
jno
jnp
rclb
movsb
int3
lods
test
inc
add
push
int3
xchg
jne
push
lret
das
jo
ficomps
xchg
add
negb
xchg
daa
sbb
movups
testb
mov
inc
mov
pop
roll
inc
sbb
fistps
push
add
cli
push
push
cmp
out
xor
enter
outsl
jne
out
pop
fxch
jge
movsb
pop
sub
jp
testb
add
jmp
inc
add
fildl
movsb
lods
arpl
pop
push
add
fs
mov
mov
shrb
mov
adc
mov
pop
cmp
or
dec
in
push
stos
and
dec
pop
push
xchg
xchg
pop
jnp
adc
inc
cs
or
ss
lods
jge
push
cmp
je
or
out
mov
dec
cmp
adc
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
adc
stos
mul
pop
add
fcompl
addr16
xor
jnp
or
cmp
pop
jae
push
jae
outsb
fisttps
sarl
sbb
pusha
or
fiadds
cmp
dec
out
loope
jo
cmc
std
push
and
movsb
inc
xchg
xchg
out
mov
jnp
add
push
adc
imul
add
loopne
pop
xor
data16
or
xor
xchg
mov
and
aam
add
fdivs
push
inc
or
or
and
daa
adc
sbb
pop
iret
ret
je
setg
sub
push
add
mov
mov
loop
aas
sub
sub
loop
xchg
js
cmp
pop
cmp
add
push
xorb
mov
es
sbb
jg
hlt
mov
add
lcall
jmp
sub
add
or
xchg
add
pop
xor
lods
test
daa
fisttps
mov
inc
dec
inc
jae
mov
out
adc
jns
les
add
fs
in
test
cld
xor
push
or
sub
add
mov
add
mov
add
pop
push
or
or
daa
xor
inc
addb
xor
xor
aam
inc
adcl
push
lock
mov
inc
adc
push
imul
loope
clc
dec
sub
mov
mov
rcll
ja
rcrb
mov
mov
loopne
subl
data16
xchg
add
push
je
add
test
data16
jo
enter
adc
mov
xor
xor
arpl
adc
ret
test
xor
sbb
sub
stos
loop
call
loop
sahf
out
jmp
movl
inc
adc
lahf
cmp
xor
jp
rorb
fcoml
dec
mov
lock
add
inc
add
and
stos
lret
jl
mov
int3
mov
pop
fadd
jmp
lret
push
xchg
nop
icebp
negb
dec
adcl
cmp
or
lds
jg
add
loope
enter
inc
enter
mov
sub
loopne
js
dec
jecxz
push
push
mov
cmc
jg
dec
dec
inc
xor
leave
and
add
mov
and
adc
sti
or
je
cmp
fimuls
insl
dec
fwait
pusha
inc
neg
sbb
add
sub
loopne
lock
ret
daa
xor
or
and
shll
cmp
sahf
jnp
add
decb
insb
ficoms
scas
test
movb
cmp
ss
sbb
sub
and
or
mov
adc
xor
inc
and
sub
dec
xchg
push
sub
adc
insb
dec
adc
in
push
movswl
loopne
je
and
and
data16
mov
pop
shlb
cmp
add
mov
add
add
mov
shrd
push
jle
cmp
ss
imul
clc
mov
xlat
data16
or
cmp
xchg
stc
inc
ds
leave
add
jmp
xchg
clc
sub
mov
adc
add
push
insb
incb
push
push
cmp
jne
test
sbb
insb
add
mov
xor
jo
mov
out
and
add
fwait
add
or
ja
jl
dec
jb
push
sub
or
orl
mov
lock
jg
inc
dec
lahf
inc
shll
push
add
push
mov
int3
add
jbe
and
inc
push
not
mov
xchg
xchg
jle
lret
add
xlat
push
dec
dec
inc
dec
pop
or
rorb
or
sbb
or
orl
push
mov
mov
lds
cmp
jbe
dec
dec
popf
add
mov
loopne
ja
test
mov
and
sub
sub
inc
inc
push
mov
cwtl
or
imul
inc
sub
and
push
xchg
addb
dec
hlt
sarb
mov
jne
or
inc
les
rolb
mov
pop
xor
xor
ficompl
out
into
mov
pusha
bound
pushf
out
add
mov
xor
enter
je
push
shlb
and
cmp
and
push
cmp
inc
lret
jbe
adc
or
inc
rorb
add
stos
sub
icebp
adc
push
add
jge
insl
push
jmp
insl
cmp
mov
jl
dec
out
xchg
jle
mov
mov
inc
sbb
xorl
inc
shr
adc
in
loop
mov
je
jp
jns
jge,pt
in
pop
dec
jle
gs
or
pop
data16
pop
aam
sbb
in
jnp
popa
je
inc
je
stc
add
lds
ss
xor
adc
pop
add
push
push
in
cmp
mov
cmp
mov
or
cmp
lret
mov
add
adc
adc
xor
inc
call
dec
add
push
pop
clc
fstps
or
adc
push
loope
cmp
sbb
inc
dec
rolb
xchg
hlt
stos
cmp
jo
xchg
pop
adc
or
adc
xor
or
je
dec
aas
shrb
push
inc
or
xor
gs
jmp
icebp
cli
pop
je
sbb
cmp
dec
sub
xor
cmp
xchg
roll
sub
add
hlt
mov
stos
xchg
xchg
rorb
cmp
push
cmp
and
jo
pop
mov
lahf
cmp
dec
cld
lahf
add
jbe
dec
push
sub
and
jo
insl
je,pn
pop
popf
ret
sub
and
pusha
xor
dec
sub
aaa
cltd
movsl
and
mov
popf
sub
push
shl
sub
je
sub
sub
mov
pop
sub
mov
pop
loopne
iret
rolb
adc
mov
lret
insl
shll
mul
xor
mov
cmpl
lret
or
push
test
push
les
dec
push
mov
dec
push
jle
pop
push
ficompl
mov
jmp
or
jp
pop
call
cli
rorb
mov
test
dec
sbb
xor
or
dec
cli
and
sub
je
mov
and
jbe
jge
inc
movb
mov
inc
adc
pop
testb
add
mov
je
aas
int
lock
pusha
stos
repz
fnstcw
out
pop
cmp
test
mov
sbb
int3
or
pop
mov
mov
gs
add
xor
inc
and
sbb
movsl
inc
mov
dec
push
push
jmp
fildll
outsb
or
jmp
testb
mov
adc
adc
rol
add
lret
aad
and
aaa
mov
xor
shll
cmp
push
or
fdivs
out
xchg
lret
adc
es
gs
push
sbb
mov
mov
sbb
mov
js
lds
mov
cmpsl
mov
or
adcl
push
adc
push
sbb
sub
fdivl
push
mov
push
cld
cwtl
adc
dec
fs
lea
xor
mov
sub
jo
push
in
rolb
adc
addr16
jns
jne
test
mov
cwtl
lock
inc
dec
fwait
ret
fsts
xor
or
or
sbb
fldenv
inc
push
push
xor
loopne
xor
lea
xrelease
call
xor
xlat
mov
loopne
cmp
jge
notl
imul
xchg
sbb
push
add
rcr
das
add
call
sub
fldt
dec
fiadds
arpl
and
xor
cmp
sbb
inc
jmp
das
add
xor
in
push
add
dec
mov
mov
xor
stc
inc
inc
test
data16
sub
sub
push
sbb
jle
push
push
cmp
fwait
les
sbb
push
mov
mov
pop
mov
jmp
test
loop
adcl
push
rolb
aam
dec
stos
sti
out
jne
lea
jmp
adc
mov
hlt
xchg
jnp
testl
psllq
and
outsl
mov
mov
push
hlt
sbb
fsubl
shlb
mov
in
mov
sub
pop
mov
push
mov
out
cld
sub
es
xchg
mov
dec
movsb
cmp
je
loope
sub
jmp
cwtl
cli
xor
ret
rorb
js
xor
ffree
ljmp
push
pop
sbb
ret
adc
inc
fisubl
nop
adc
dec
mov
adc
sbb
mov
or
inc
pop
test
loope
pop
incl
outsb
and
movsb
lea
cs
xchg
mov
mov
sub
les
inc
xchg
mov
inc
xor
sub
inc
push
mov
pop
loope
adc
aaa
adc
sbb
cmpsl
sub
jmp
pushf
popa
mov
and
xchg
push
and
loop
shr
cmp
mov
in
adc
and
pop
and
testb
cmp
xchg
loopne
xchg
pop
inc
or
fisttpl
add
adc
es
push
shr
add
or
cmp
lock
push
mov
fcmovb
jmp
shr
or
xor
ficompl
lock
add
or
bound
scas
push
bound
sti
in
stos
mov
cmp
push
sbb
cmp
mov
sub
sub
xlat
scas
add
and
adc
fnstcw
dec
pusha
xor
xchg
sub
les
add
xchg
or
jg
or
mov
shr
cmp
mov
mov
stos
or
mov
pop
mov
adc
adc
mov
sbb
cltd
repnz
orb
or
cmp
add
movsb
sbb
stc
out
loopne
jo
mov
cmp
sub
and
call
inc
sbbb
cli
and
adc
les
loop
andl
inc
int3
aad
test
xor
sbb
fsubs
pushf
clc
stos
negb
push
push
pop
sub
or
test
test
pop
add
test
je
dec
call
test
or
xchg
add
ret
inc
rcl
movsb
cmp
add
icebp
sub
push
cmp
sbb
lods
sbb
push
add
xor
xchg
adc
cmpsl
push
jbe
enter
add
add
call
dec
mov
adc
and
inc
cli
xchg
xor
sub
mov
push
adc
dec
jbe
out
insb
call
push
jle
inc
add
flds
stos
push
ja
les
and
or
pop
cmp
cmp
leave
inc
mov
pop
jbe
cmp
lock
mov
sbb
aas
xor
cmpb
inc
stos
nop
shl
insb
xor
inc
xchg
adc
rolb
adc
bound
mov
push
mov
push
push
and
test
inc
adc
sarl
fstps
ljmp
or
cmp
sub
and
sbbb
adc
cmpsl
add
mov
in
add
dec
add
out
aad
stc
and
enter
jo
pop
adc
into
adc
das
push
sub
push
fcmovu
add
shll
add
je
mov
dec
jo
or
pop
les
ret
dec
mov
or
pop
pop
sub
push
cmp
ret
jne
movsw
es
push
jl
push
pop
outsb
rorb
mov
aam
mov
or
enter
jmp
rorl
pop
push
insl
pop
adc
in
aas
call
adc
fdiv
ds
sahf
loopne
sbb
sub
inc
test
dec
repnz
and
xchg
pop
gs
adc
sbb
push
push
inc
or
fsts
fcomi
sbb
adc
fs
and
sbb
and
daa
test
test
mov
and
pop
pop
push
lret
adc
cwtl
jae
add
and
lods
rcl
ljmp
sub
loope
shr
test
stc
sbb
push
idiv
and
adc
je
testb
jmp
ljmp
outsl
mov
adc
sbb
fiaddl
adc
sub
jle
pop
es
xchg
push
jge
dec
and
jnp
je
push
or
into
jbe
jns
aas
push
pusha
imul
xchg
sub
bound
mov
add
push
xchg
add
pop
adc
call
bound
adc
adc
jno
setle
fcoms
add
mov
cwtl
sbbl
stos
mov
shrl
popa
mov
ss
push
or
cs
int3
push
fcmovne
aam
cld
and
dec
pushl
dec
sbb
ss
jg
outsl
sbb
xor
jge
mov
xchg
bound
and
or
leave
jne
sub
testb
sbb
lds
push
sub
leave
je
xlat
adc
das
divl
and
es
and
or
mov
je
les
mov
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
mov
shll
leave
adc
mov
xor
idivl
pop
add
add
push
je
mov
scas
ret
ja
sbb
mov
pop
lahf
mov
mov
pop
pop
ljmp
sbb
pop
push
sbb
div
mov
in
fdivs
push
push
addr16
mov
adc
mov
pop
shll
and
push
mov
push
xor
sub
testl
test
adc
ja
push
and
aad
cmpl
mov
add
jg
dec
scas
fstl
pop
xlat
pop
inc
sbb
push
lcall
xor
sbb
hlt
inc
test
xor
sub
addl
adc
adc
iret
or
mov
sti
cltd
fcmovb
add
push
inc
je
jo
inc
sbb
xor
sbb
lea
jle
mov
pop
jle
dec
repz
sti
mov
push
rcl
rcl
iret
repz
aad
xlat
fcomp
fiaddl
fstpt
mov
fsts
add
mov
into
lcall
cmp
test
mov
mov
fucomi
outsl
orb
mov
add
push
or
or
add
cmp
test
mov
divb
push
xchg
shl
in
pusha
std
push
ja
call
cmp
push
xlat
das
or
push
push
add
fwait
bound
adc
push
lea
xchg
jle
adc
dec
scas
jmp
pushl
pop
gs
sbb
lea
shll
and
clc
adc
mov
add
or
fisttpl
test
add
xor
addr16
mov
pushf
into
push
pusha
inc
sub
adc
test
sbb
sub
mov
cmp
xchg
adc
sti
add
shlb
jp
sub
mov
adc
shr
or
decl
add
push
or
jne
shlb
lock
fucomp
clc
push
mov
fdiv
negl
cmp
mov
and
lea
pop
sbb
subl
jae
xchg
and
add
pop
inc
mov
adc
mov
in
fstpl
jns
ljmp
les
or
ret
daa
leave
mov
and
rcr
inc
and
dec
jge
mov
rolb
push
mov
push
lea
les
insb
dec
xchg
mov
or
or
and
dec
sub
pop
shll
inc
repz
addl
add
cmpl
mov
shll
add
clc
jle
jle
jne
test
add
or
mov
sar
loopne
icebp
aaa
in
and
hlt
rorb
push
push
inc
fsubl
push
lret
movl
xchg
xchg
pop
mov
lods
ss
sub
insl
clc
in
out
mov
mov
or
dec
inc
push
push
adc
dec
add
lock
xchg
lock
idiv
cli
inc
push
in
sub
div
les
or
or
mov
movsl
xor
call
mov
adc
mov
sub
ret
push
mov
rorl
leave
push
pmaxub
sub
mov
rolb
lcall
mov
rcrl
mov
in
sbb
push
cmpsw
add
pop
push
repnz
push
push
sub
loop
out
jae
jmp
mulb
jb
push
sbb
test
push
mov
repnz
or
call
mov
pop
insl
inc
shlb
fdivrs
aam
in
push
sbb
inc
inc
test
dec
ss
xor
mov
dec
and
mov
xor
xchg
mov
mov
sub
cld
lea
fcmovu
mov
mov
push
aam
and
lods
lods
sarb
pop
roll
and
movsl
add
jns
sbb
xchg
add
sbb
mul
sbb
jp
negb
test
push
sbb
jge
or
orb
jge
inc
pop
and
lock
ret
sbb
adc
ljmp
in
pop
rorl
pusha
mov
stos
sbb
int3
jge
lods
cwtl
les
sub
notb
loope
adc
inc
add
inc
mov
push
arpl
xchg
add
push
nop
cmp
call
mov
pop
jle
out
adc
add
cmpsl
sub
inc
pop
shll
jno
popa
call
jb
mov
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
icebp
sub
loopne
loopnew
test
add
sahf
sub
and
shlb
fnstcw
in
out
loop
xor
push
sti
and
aad
stos
cltd
xchg
mov
repnz
mov
add
mov
or
into
les
enter
clc
sbb
stos
jbe
pop
lcall
dec
inc
pop
mov
adc
jne
scas
mov
cmp
push
shlb
add
mul
add
lahf
add
add
add
in
into
or
sbb
mov
inc
xchg
inc
in
fcmovbe
test
mov
dec
lock
hlt
cmp
jge
sub
cmpb
or
add
dec
cmp
jae
mov
push
xchg
jb
add
add
fadds
add
or
fidivrs
jne
dec
mov
jb
int
inc
push
or
adc
loop
ret
and
add
push
add
inc
jbe
ret
adc
sti
sub
enter
or
or
and
ret
lcall
add
push
mov
ret
and
push
adc
fisttps
jmp
cli
inc
out
mov
or
xchg
icebp
jns
add
or
pop
pop
scas
add
adc
pusha
test
adc
mov
stos
or
push
ret
les
adc
or
jae
cmp
ret
aas
test
lret
push
cmp
pop
cmp
xor
into
push
sub
push
pusha
inc
mov
mov
rcrl
repnz
or
pop
cmpps
or
nop
mov
adc
xchg
mov
lock
ret
pop
inc
push
pop
jae
or
add
add
add
ja
add
jl
push
test
jl
or
mov
push
je
dec
pop
or
push
mov
or
dec
pop
dec
pusha
test
and
fidivrs
xor
and
ds
mov
mov
movsb
sahf
mov
sub
popa
cmp
or
pop
push
pmulhuw
fldcw
dec
lcall
xchg
or
xorb
or
cmp
stos
jg
subl
into
xchg
into
inc
ret
add
jge
and
in
stmxcsr
cmp
faddl
bound
cltd
ss
or
add
data16
sbb
add
add
xchg
jle
out
push
mov
mov
xor
leave
repz
inc
jg
into
into
push
push
pop
and
out
fisubrs
sarb
push
pop
nop
xchg
push
out
icebp
pop
cwtl
pop
mov
cmpb
shl
push
jnp
pop
add
clc
sub
pop
push
sub
add
leave
lahf
sbb
out
pop
test
add
xchg
addr16
add
add
inc
mov
or
je
pop
inc
lcall
xchg
sub
adcl
sub
sbb
lret
jb
lret
push
xor
xchg
push
adc
push
push
data16
push
dec
xchg
mov
pop
shll
cmp
xchg
test
mov
xchg
push
mov
xor
push
dec
loopne
adc
and
mov
jno
jle
xor
fwait
pop
movsb
ret
ficomps
adc
sbb
cmp
ficompl
and
daa
lahf
popa
rorb
out
adc
xchg
xor
sarb
bound
push
jl
fwait
jb
ljmp
xor
out
icebp
inc
and
and
dec
jno
rorl
push
aad
movsb
cmp
sbb
xor
and
push
adc
scas
les
insl
add
inc
dec
shlb
push
lock
dec
sub
rorb
pop
lock
add
ds
je
sub
jp
call
push
cmp
jbe
in
daa
loop
inc
inc
int3
call
jle
xchg
lds
out
and
inc
hlt
mov
jo
fstps
ss
dec
loope
jmp
or
shll
scas
push
or
icebp
add
ds
aam
fcomip
mov
movsl
rolb
movsb
jo
jns
push
sbb
xor
mov
add
test
xchg
adc
lods
test
leave
sahf
inc
xor
jmp
sub
mov
sbb
sbbl
mov
pushl
and
in
inc
test
je
test
frstor
das
push
xor
mov
aam
pop
pop
and
jb
inc
push
fcoms
or
pop
mov
mov
mov
push
adc
add
fs
cli
shlb
cs
filds
push
hlt
and
rclb
dec
sub
in
cmp
pop
jno
jge
or
xchg
sbb
pop
push
sub
jae
add
xchg
jl
dec
stos
and
xchg
xor
add
jns
push
lods
push
sarl
test
push
mov
adc
pop
es
ret
mov
aas
aas
jo
rcr
jl
sub
pop
add
add
lds
rorb
loop
jmp
push
push
xlat
xchg
mov
enter
aam
mov
scas
and
popa
sar
lea
add
and
sbb
pop
andl
inc
test
or
inc
sub
lock
jne
push
inc
das
pop
ret
lods
movsb
sbb
push
xchg
push
pop
mov
adc
fisubrl
or
pop
mov
and
inc
js
sub
or
mov
mov
into
outsb
or
xor
into
add
or
inc
jle
and
add
andl
pop
sbb
fisubl
daa
loop
jns
cmp
lods
loope
dec
shl
andb
push
clc
cltd
lret
das
add
sbb
xchg
arpl
inc
jl
xor
push
lock
inc
or
mov
sbbb
pop
jl
loopne
lea
ss
xchg
sti
enter
push
push
and
shlb
daa
and
sbb
pop
nop
mov
jae
fsubs
push
pusha
loopne
outsb
scas
loopne
jmp
nop
movsl
test
dec
loop
jae
jmp
inc
add
ss
idivb
pop
cmp
push
js
dec
xor
mov
mov
mov
cld
sbb
inc
js
mov
mov
sub
clc
fcompl
inc
arpl
hlt
and
add
or
xchg
sbb
mov
es
les
sbb
xor
sbb
adc
and
push
hlt
shrb
sub
add
lahf
subb
mov
push
pop
testb
outsl
xor
push
testb
push
push
and
addr16
add
or
cmp
add
call
adc
push
jo
cmp
int3
add
int
and
add
pop
inc
push
daa
data16
sbb
add
fidivs
bound
add
pop
jg
mov
andl
push
bound
add
pop
push
cmp
adc
add
or
pop
inc
jle
mov
xor
subb
and
add
mov
dec
loop
or
loope
and
mov
mov
aad
push
out
cvttps2pi
mov
test
cmc
push
dec
fbstp
add
fld
adc
mov
push
xor
adc
jmp
fsts
jno
outsl
cwtl
mov
xor
ss
add
jmp
cmp
fcomp
pushf
fstpl
adc
test
cmpsb
pop
or
pop
push
xchg
push
push
jge
mov
cs
sub
lea
pop
adc
add
stos
or
pushf
cltd
js
in
mov
iret
mov
sub
push
gs
sub
or
and
mov
ret
fsubl
daa
sub
call
in
inc
gs
leave
test
mov
lea
add
in
xchg
aad
cmp
mov
xor
enter
cltd
xchg
fwait
dec
fmuls
nop
and
dec
jnp
add
inc
push
in
dec
or
push
xor
nop
mov
mov
add
int
mov
mov
call
loopne
jnp
or
mov
or
mov
or
repz
adc
dec
xor
and
insl
add
jo
jl
fdivrl
shl
jge
adc
xchg
sbb
cmp
xor
in
inc
adc
push
xchg
lret
jo
dec
rclb
sbb
xchg
add
insb
mov
orb
pop
xor
sbb
pop
sti
push
push
jo
cmp
mov
bound
dec
mov
jge
lahf
and
js
xor
fwait
cld
jle
movsb
test
or
sub
cmpsb
insb
in
push
jg
adcl
push
pop
ja
call
aam
movsb
addr16
inc
pop
les
mov
adc
xchg
xchg
aam
xchg
in
xchg
and
push
jge
jg
xchg
xchg
fcmovnbe
pop
in
movups
rorl
movsl
fadds
cmp
sub
sbb
cmp
addb
mov
or
call
and
fildll
hlt
add
jns
je
cmpb
sbb
jne
jnp
outsb
inc
mov
fcmove
or
sub
or
pushf
mov
sbbb
cmp
in
sbbb
push
jmp
dec
or
xchg
or
lock
hlt
call
notl
rclb
js
in
dec
loopne
xchg
fsubl
int3
or
rcrl
loope
dec
enter
xorl
lock
cmp
out
inc
shrb
loopne
jl
xchg
push
pop
or
xor
adc
sub
adc
xor
dec
es
cmp
dec
es
fs
dec
fs
fwait
xchg
push
jg
xchg
push
outsl
or
jle
push
add
add
nop
outsl
sbb
int3
push
cmp
rcr
add
pusha
test
imul
dec
mov
aam
fs
cmp
nop
popa
adc
adc
xchg
cmp
sub
imul
sub
and
pop
addr16
mov
adc
xor
cmp
cmp
mov
insb
xchg
adc
inc
mov
mov
sldt
pop
jmp
aas
push
cmc
nop
add
js
cmp
sbb
and
xorb
js
mov
push
int3
aad
outsb
and
fisttpl
dec
and
rcrb
add
xchg
mov
cmp
ficompl
rcrl
jb
mov
in
cmpsb
sbb
call
out
in
mov
movsb
and
fmull
fadds
ret
mov
push
cmp
insl
adc
rcll
dec
xchg
mov
lock
adc
in
mov
xchg
mov
cld
adc
push
in
or
ljmp
fs
sbb
xchg
sbb
add
adc
mov
fcoms
push
xor
call
sbb
aad
pop
jns
sub
test
in
sub
mov
out
sub
mov
adc
jo
shl
andb
out
cmpb
adc
cmp
clc
xchg
mov
sbb
stc
pop
jno
test
in
loopne
push
test
jae
fcomp
aam
jo
inc
iret
sbb
je
and
test
lock
mov
mov
jb
jb
mov
mov
rol
int3
stos
inc
jne
rcl
pop
jnp
add
dec
sahf
or
lret
movsb
dec
push
add
sbb
sub
fistps
push
adc
shlb
in
test
das
nop
and
mov
mov
int
nop
cmpsb
or
dec
mov
ret
call
fs
daa
fsubl
mov
mov
or
das
sbb
test
lock
leave
and
or
pop
js
sub
movsb
stos
inc
rcrb
add
lea
mov
adc
inc
adc
arpl
fdiv
fs
xor
mov
xchg
sahf
hlt
movsb
adc
mov
in
xor
or
xor
pop
aas
in
sbb
cmc
mov
inc
mov
mov
scas
and
mov
add
mov
jno
nop
xchg
xor
and
andl
inc
push
call
cmp
sub
xor
dec
repnz
pop
pusha
cltd
fs
cltd
mov
js
jl
cmp
sbbb
sbb
cmp
pop
leave
mov
sub
pop
mov
cmp
das
dec
jne
mov
bswap
and
or
jnp
inc
xor
nop
adc
in
mov
call
push
xchg
adc
add
jne
popf
add
xor
mov
push
imul
dec
movsb
add
stos
add
dec
push
stos
pop
jo
or
cwtl
idivl
test
add
imul
in
sbb
add
cs
in
cwtl
cmp
fs
pop
imul
push
loopne
mov
jge
cltd
popa
xchg
pop
loope
or
sbb
enter
or
leave
and
sbb
sub
add
in
aaa
call
test
ja
lcall
les
or
inc
jmp
sub
xor
fwait
test
cmp
shrb
xlat
sbb
mov
cmp
add
ret
inc
ret
test
xchg
test
jmp
jo
fwait
fwait
inc
dec
lcall
inc
daa
cmp
add
fwait
mov
in
jge
push
xchg
or
pushf
stc
mov
jns
insb
scas
add
insb
cwtl
movsb
adc
mov
or
mov
std
sub
in
cmp
lds
mov
xor
pop
je
loopne
aam
cmp
sub
mov
xchg
cmp
inc
mov
jne
push
mov
das
out
paddusb
dec
and
cmp
popf
stos
jbe
jmp
jno
insl
mov
scas
test
rolb
xchg
test
mov
add
daa
shll
fsubl
fs
lahf
lods
mov
int3
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
cwtl
mov
push
addr16
dec
outsl
movsb
dec
add
das
scas
or
push
inc
cmc
test
adc
mov
enter
inc
add
xchg
mov
or
mov
and
push
in
or
xchg
test
movsb
sbb
xchg
sbb
jnp
rcrl
mov
lods
lods
test
push
enter
mov
add
mov
pusha
push
inc
xlat
push
mov
int3
mov
dec
jo
xchg
clc
mov
lds
dec
test
xor
mov
cmp
xchg
sub
ud0
mov
mov
pop
or
pop
lods
add
addb
js
movsb
popf
or
ficoml
inc
jno
es
inc
dec
jle
insb
orb
sbb
push
fucomi
sbb
repz
fcoms
mov
test
push
xchg
cs
mov
mov
in
rorb
aas
jnp
push
rorb
adc
fs
enter
shrl
roll
sti
mov
int
rcll
push
add
sbb
mov
je
inc
in
or
add
mov
je
in
movsb
inc
daa
xor
push
and
mov
rcrb
cld
inc
sub
repnz
testb
test
enter
mov
aam
fsubrl
rclb
or
jb
lea
cmp
int3
pop
aam
push
int
fsubl
movsb
pop
and
adc
andb
pusha
mov
fmuls
or
lods
clc
loopne
sahf
xorb
sbb
cmp
test
xlat
mov
ret
push
adc
cmpsb
in
mov
or
or
adc
cmp
fildll
sub
stos
sbb
stos
jne
stos
xor
mov
dec
add
out
and
or
dec
pop
ret
aam
scas
inc
leave
inc
push
test
mov
fadd
in
movsb
mov
movsb
shrl
jecxz
in
add
enter
movsb
lret
xor
mov
movsb
adc
fsub
sbb
inc
imul
leave
sbb
add
loopne
cmp
push
test
fsubl
push
mov
lcall
test
sbb
fwait
loopne
mov
xchg
mov
inc
or
orl
fsubrl
rorb
push
imul
or
stos
add
dec
insl
push
lock
push
lods
push
mov
mov
fs
lret
insb
std
pushf
std
dec
fidivrl
iret
pop
adc
adc
inc
nop
mov
popa
push
insb
xchg
xchg
dec
cmpsb
dec
test
cwtl
mov
push
movsb
test
loope
cld
cmp
jp
sbb
cmp
dec
adc
inc
mov
inc
fcoml
fsubs
in
mov
jge
push
mov
push
push
and
movsb
xor
test
adc
lds
sbb
shrb
cmp
mov
push
xchg
jns
outsb
dec
popf
les
je
xlat
lcall
mov
cld
shr
cmp
leave
jecxz
inc
cmpsb
xorb
loopne
in
mov
mov
pushl
and
aam
jbe
jne
aad
cmpsb
or
add
scas
ret
frstor
adc
push
test
xor
adc
pop
mov
lds
mov
mov
xchg
fs
ja
minps
repz
or
aam
out
mov
and
daa
scas
in
in
pusha
out
mov
inc
mov
xchg
or
jb
rolb
xor
and
pushf
mov
pop
sub
mov
jo
dec
jnp
mov
xchg
stc
add
in
insl
ljmp
ret
and
cld
mov
mov
mov
mov
xchg
inc
mov
paddusw
fdivl
sbb
repz
and
cmp
pusha
test
add
cmp
fldt
push
push
push
mov
inc
mov
mov
loope
mov
clc
push
mov
int
mov
adc
fwait
loope
mov
mov
push
movsb
add
mov
pmulhuw
mov
roll
add
xchg
inc
subb
test
test
adc
roll
stos
sub
fdivrl
jb
rol
add
mov
repnz
popf
enter
and
cmc
jb
adc
push
adc
inc
hlt
pop
jb
sub
push
ficoml
or
add
int
pop
movsb
xor
add
lock
jae
and
dec
sbb
adc
insl
add
and
inc
lcall
mov
inc
adc
popf
setae
or
add
adc
gs
cs
add
sub
jb
sti
cmp
mov
mov
test
cmp
fsubrl
mov
mov
sbb
xchg
cmp
adc
in
les
dec
xor
push
xor
out
or
out
out
xor
xor
shlb
in
repz
jns
dec
cmpsb
sbb
mov
push
jae
aad
inc
repnz
or
rcll
add
sbb
cmp
rcll
cs
pop
sbb
inc
pop
dec
aad
or
xchg
call
adc
mov
or
ret
lea
pop
lea
pop
scas
adc
cltd
movsb
pop
je
test
bound
jne
dec
mov
lods
fwait
stos
jo
leave
int
push
xlat
js
in
push
dec
addb
inc
pop
pushf
dec
jb
nop
and
and
xchg
mov
xor
push
in
push
test
cmpsl
in
pop
jo
repnz
shrb
aas
les
sbb
or
les
or
add
inc
inc
jo
loope,pn
and
inc
xor
clc
loop
ret
xor
and
sub
adc
lahf
push
sbb
movsb
or
inc
push
sbb
mov
mov
roll
cmpsb
or
sub
bound
add
cmp
add
adc
das
call
or
lds
movb
mov
mov
es
outsl
xor
std
add
cltd
nop
inc
sti
or
or
fs
adc
pop
ss
and
adc
add
inc
mov
add
jge
add
mov
in
aam
or
pop
cmp
std
enter
add
or
xchg
or
daa
aam
fldl
add
and
fists
sbb
and
pusha
inc
xor
jb
push
aam
add
fdivs
std
xchg
jb
mov
dec
movsb
sbb
sti
adc
inc
enter
adc
cmp
or
or
int3
mov
aad
aad
cltd
fs
sub
pinsrw
push
push
leave
sub
push
sub
mov
xchg
lock
jmp
pxor
mov
add
subb
cmpsb
addb
gs
push
sub
mov
adc
in
lea
insb
gs
insl
push
mov
xor
push
pushf
pop
jne
int
sbb
push
mov
je
in
ss
cmpsb
xchg
or
call
in
pusha
into
fwait
or
adc
or
inc
loopne
cmpsl
or
leave
call
push
pop
and
mov
xor
and
push
mov
sbb
jno
and
mov
push
rclb
and
and
lcall
jbe
arpl
aam
in
leave
and
cltd
in
adc
or
dec
xor
or
add
fs
sbbl
btc
push
cld
fistl
push
sbb
ficoml
clc
scas
xchg
dec
fwait
add
fsub
xchg
pushf
subb
jne
decb
push
mov
xor
nop
fs
sbb
mov
cltd
orb
shlb
mov
aaa
cmp
sub
jl
mov
dec
fwait
push
in
inc
add
ror
sbb
inc
test
xor
xor
push
xor
in
pushf
adc
and
js
fs
and
dec
jo
mov
add
push
subb
sub
lods
cmpsb
call
enter
and
inc
loopne
mov
pusha
cmp
jne
and
test
or
outsl
mov
push
movsb
mov
cmp
je
add
sub
jo
push
enter
cltd
add
pusha
pop
insb
adc
fidivl
add
pop
and
xchg
inc
pop
inc
pop
mov
and
push
aas
pop
les
mov
outsb
loop
popf
fsub
jbe
je
into
xlat
fldt
mov
fldt
je
lods
cmp
lea
test
mov
test
adc
lock
adc
fcomps
dec
stos
sub
push
stos
mov
out
movsb
movsl
mov
rclb
dec
sahf
int3
add
popa
xchg
clc
mov
xor
mov
fstps
shlb
shl
jb
rcr
fiaddl
adc
push
stos
scas
test
push
mov
movsl
mov
leave
stos
roll
push
stos
pop
adc
mov
out
js
inc
mov
fistps
inc
test
xor
push
or
and
test
cmpsl
mov
cld
dec
roll
lret
fcompl
xchg
pop
jg
pop
push
mov
scas
jbe
lock
mov
mov
cmp
pop
and
nop
lock
in
adc
lds
scas
cmp
sub
lds
sub
inc
xor
cmpb
sbb
jo
ja
imul
loopne
stos
call
iret
es
jb
mov
addr16
int3
xchg
bound
leave
loope
clc
fnsave
shll
xor
cs
mov
and
lret
rclb
stc
std
jmp
push
mov
movsb
cltd
push
cwtl
mov
insl
pop
add
adc
repnz
sti
test
fbstp
fmull
insl
xchg
out
mov
adc
jl
jo
push
enter
sub
dec
aad
mov
pop
dec
pop
pusha
dec
push
fdivs
test
push
enter
lea
fs
test
and
insl
pop
rorl
pusha
sbb
xorl
xchg
inc
and
pushf
inc
ds
dec
inc
faddl
or
pop
sub
sbb
and
pop
or
inc
pushf
push
sub
xor
or
jle
jg
xchg
sbb
lcall
rolb
and
cmp
add
push
cmp
mov
std
xchg
xor
cmp
mov
in
jp
xchg
aam
mov
out
xor
add
jl
push
std
and
add
pop
stos
sbb
std
adc
add
fs
xlat
ds
cld
push
or
cld
lea
aas
jb
or
push
fisttpl
addr16
sub
cs
in
or
sub
or
and
es
sbb
xchg
mov
out
fs
lret
xor
fs
in
out
xchg
aam
jmp
adc
fs
clc
push
insb
dec
ja
or
lods
out
inc
shlb
add
das
sub
fcmovnu
inc
add
push
sbb
xor
cld
fsubs
or
cs
push
add
gs
cmp
xchg
mov
insl
mov
dec
mov
push
xchg
les
push
jb
ds
pusha
pop
push
clc
cs
jmp
mov
ljmp
add
fistpl
and
incl
mov
add
and
mov
and
jnp
or
adc
out
leave
push
dec
jg
ljmp
cmpb
or
enter
mov
sub
das
adc
inc
inc
inc
sub
mov
dec
dec
dec
dec
dec
dec
dec
dec
push
inc
push
pushl
mov
pop
popa
bound
gs
imul
jo
cld
pushl
jae
jne
ja
jns
xor
xor
xor
ss
cmp
sub
daa
adc
pushl
ljmp
mov
rcll
xchg
adc
push
or
cmp
rclb
cmpl
mov
push
push
jno
mov
fistps
pop
push
cli
arpl
std
jns
dec
outsb
je
jb
outsl
arpl
fs
out
sbb
pcmpeqd
jns
dec
imul
push
insl
es
gs
xor
cs
adc
popa
and
sub
insb
popa
je
outsl
outsb
push
mov
pop
divb
rdpmc
add
lmsw
cmp
sub
aaa
fldt
insl
mov
jb
js
je
jb
gs
cmp
or
cld
jae
arpl
outsl
add
add
add
add
add
push
push
je
mov
popa
jb
mov
inc
imul
dec
xor
xor
aas
pop
pop
mov
insl
insl
cmp
iret
fs
dec
and
jns
add
das
lock
push
dec
push
inc
inc
gs
jbe
pop
push
insl
bound
daa
dec
outsl
jbe
dec
arpl
jo
push
jo
sub
addr16
out
popa
mov
dec
jne
xchg
mov
inc
jo
imul
jb
push
inc
into
mov
into
mov
pushf
jae
popl
fcompl
into
ja
inc
push
jne
xor
mov
daa
push
cmpsl
cwtl
mov
push
jne
dec
js
out
mov
push
jne
xchg
pop
dec
rcrl
push
popa
das
jo
or
mov
lock
cmp
inc
ud0
add
adc
push
fs
pop
push
orb
int
lahf
cmpsb
jmp
sub
sub
cmp
ds
inc
das
pop
pop
rcrl
cmp
jge
jg
cmp
pushf
lcall
addr16
out
mov
pop
or
adc
divb
pop
push
inc
insb
jae
scas
jmp
fs
mov
test
jmp
out
es
xor
insl
and
jb
jbe
aaa
cmp
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
aas
aad
sbb
push
jo
imul
mov
pop
mov
je,pn
jo
mov
and
mov
and
push
popl
ds
int3
mov
je
or
xorb
mov
int
inc
popa
and
daa
mov
jne
loopne
data16
xor
and
insl
push
sbb
mov
inc
cs
xor
and
jne
dec
mov
rol
lcallw
out
es
or
add
xchg
push
and
or
imul
sub
or
fs
cli
jb
bound
inc
jo
inc
push
and
push
ds
fidivrl
int
push
mov
loope
push
daa
sub
test
das
arpl
cmp
roll
arpl
jge
das
andl
inc
in
inc
xchg
xchg
insb
imul
imul
int3
or
push
addb
mov
shll
xchg
shl
jns
push
fbld
ss
cs
lock
adc
jbe
shll
hlt
nop
or
es
dec
add
add
cltd
mov
in
ja
outsl
outsl
ss
stc
or
fs
jo
cli
jbe
add
inc
test
xchg
push
mov
jbe
push
gs
loopne
lds
mov
xlat
outsl
push
or
pop
scas
xor
lcall
bound
cmp
idivb
ljmp
imul
push
jo
imul
mov
jno
rol
pusha
aad
push
push
leave
nop
fs
sbb
call
data16
adc
jns
add
pop
fsubs
push
and
pop
push
pusha
test
sub
addr16
jmp
jae
xor
fcompl
roll
pusha
jo
sub
cmpb
adc
push
sub
lret
inc
pop
add
sub
pop
dec
jmp
lods
jge
cmp
push
and
cmp
lods
vmovd
pop
inc
inc
and
fisttpll
and
jg
jmp
xchg
ss
pop
loopne
add
test
push
rol
das
lret
repz
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
rcrl
xorl
push
adc
mov
imul
out
ret
add
add
xor
fldl
jg
js
jae
sbb
jae
je
pop
dec
pop
add
add
mov
xchg
sub
stos
mov
jb
xchg
adc
pop
movsl
jge
adc
add
add
add
add
pop
icebp
lcall
cmp
pop
or
aaa
ds
push
pop
hlt
and
divl
push
js
or
sub
add
sbb
addb
fiadds
xchg
test
add
aaa
mov
pop
daa
push
cmpb
addr16
push
push
and
sub
jb
int3
push
xor
ja
mov
int
es
push
xor
dec
stos
int3
js
jo
lcall
or
sbb
cmp
lea
mov
nop
xchg
xchg
mov
sar
int
inc
pop
dec
sub
sub
dec
jo
adc
pop
add
or
pushf
adc
or
pushf
jo
dec
pop
daa
pushf
jo
data16
nop
adc
jno
out
mov
pop
push
fisubrs
xlat
test
in
or
xchg
and
dec
add
test
xchg
add
mov
add
xchg
mov
cmp
mov
add
add
dec
cmp
add
ja
shrl
popf
add
aaa
adc
mov
add
or
shr
add
decl
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
lcall
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fdivr
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
sub
stc
cli
sti
cld
std
inc
add
add
ljmp
push
sarl
add
push
pushl
or
fists
outsl
ja
out
mov
inc
cs
jae
jb
bound
mov
stos
inc
lods
xchg
jbe
ss
popa
mov
bnd
mov
lea
dec
mov
inc
in
fldt
bound
inc
push
mov
outsb
insb
shlb
inc
sahf
insb
gs
mov
dec
sub
pop
mov
daa
add
insb
in
divb
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
push
test
les
pop
enter
fsubrs
mov
mov
outsb
rolb
xchg
or
or
cmp
outsb
data16
sbbl
jns
push
or
pop
fisubs
jbe
push
push
or
fs
and
xor
or
mov
clc
popl
cmp
sbbb
gs
xor
or
fisubl
dec
dec
lahf
pop
dec
and
lock
xchg
pop
pop
push
push
jae
sbb
push
cmp
cmp
arpl
or
movsl
jae
addr16
sub
out
push
das
outsb
gs
mov
data16
insb
adc
or
sti
dec
push
push
push
push
dec
testl
pushf
inc
or
mov
cmp
or
jge
lods
cmp
aas
jg
inc
or
jae
call
mov
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
jg
jo
pop
shlb
cmp
sub
push
jne
adc
or
push
outsl
xchg
lods
jo
aaa
daa
xchg
mov
popw
repz
cmpsl
cmp
es
cmp
iret
repz
and
sub
inc
jl
lcall
sub
sub
addr16
mov
dec
sub
sub
push
scas
xchg
loopne
inc
jmp
cmp
and
add
pushf
ficompl
cwtl
jb
jmp
adc
fs
jb
imul
mov
ss
lret
push
sarb
and
xor
jo
sub
mov
jl
lahf
out
add
sub
cld
push
hlt
push
call
les
idivb
cmp
sti
push
aam
jnp
repz
nop
mov
xchg
inc
push
test
out
addb
js
jo
imul
add
cmpsl
jge
inc
dec
data16
push
push
int3
adc
sub
push
fsubrl
push
push
push
dec
push
dec
ret
imul
inc
mov
xor
cmp
sub
repz
repz
sbb
adc
xlat
ds
adc
decl
jns
out
shrb
out
sub
or
incb
test
jns
out
pusha
inc
xor
sub
cmp
out
hlt
std
in
loopne
iret
repz
mov
insb
inc
sbb
sahf
out
lcall
push
stos
ret
jns
cmpsl
pop
aam
push
sub
lcallw
sarl
jns
push
xor
push
cmp
add
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
iret
jns
fcompl
je
mov
push
jg
lods
pcmpgtw
xor
add
jle
push
xchg
or
adc
inc
inc
dec
jae
pop
sub
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
loop
and
stc
sti
push
dec
inc
dec
add
dec
dec
inc
add
incl
loope
adc
sub
adc
incl
popa
into
mov
rclb
mov
xor
jnp
inc
loop
mov
ds
cmp
push
pop
clc
lret
sbb
jb
stc
lcall
arpl
cmp
adc
dec
scas
jp
repnz
jno
in
fstl
mov
and
jg
stc
cmp
dec
imul
lret
add
inc
mov
mov
and
incb
sub
fwait
ss
sbb
pop
pushl
out
vmwrite
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
decl
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
call
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
mov
out
fcoml
or
scas
int
mov
pop
leave
loop
dec
pop
hlt
stc
mov
xchg
dec
mov
lods
incb
cmp
push
xor
out
mov
fsin
les
and
es
sbb
sbb
push
scas
or
outsb
jbe
dec
add
and
push
das
mov
inc
scas
inc
std
mov
jae
mov
add
divl
push
dec
push
cs
idiv
call
mov
cs
dec
sbb
inc
pop
or
and
inc
es
or
or
idiv
pop
dec
sbb
pop
push
dec
daa
pop
or
pop
pop
push
pop
push
pop
push
push
pop
pop
adc
inc
ss
sti
mov
xor
dec
push
inc
daa
inc
jno
jb
scas
dec
mull
mov
sbb
sbb
xchg
add
pop
cs
ljmp
and
push
sbb
push
inc
inc
push
push
sub
push
cmovle
dec
sbb
je
inc
test
push
dec
add
cmp
mov
jg
ss
ds
sub
push
ljmp
sbb
cmp
cs
sahf
loopne
push
xor
sub
pop
adc
inc
out
or
cmp
sti
push
sub
and
cmp
adc
xchg
decl
cvtps2pi
pop
cmp
and
cs
sub
push
inc
sbb
add
and
pop
dec
das
sti
outsb
adc
das
or
lahf
in
sbb
dec
and
sbb
sbb
pop
inc
inc
inc
inc
test
je
lea
rcr
push
cmp
pop
sub
cmp
mov
mov
adc
inc
dec
dec
push
pop
inc
ds
push
xor
dec
imul
sub
dec
inc
push
dec
cmp
das
sbb
int
inc
xor
cmp
cmp
or
sub
int3
or
fimull
sti
mov
jle
xor
fucom
pop
push
push
ss
push
add
adc
js
add
rorl
jae
adc
xor
push
mov
or
sahf
fdivrp
ja
inc
and
gs
ja
cmp
sub
cmp
dec
push
inc
pop
xor
mov
push
push
mov
dec
sbb
in
sub
popf
loopne
pop
pop
push
pop
and
push
and
pop
push
ja
push
xor
pop
pop
ss
ljmp
fsubs
inc
pop
adc
dec
nop
dec
cwtl
xlat
jne
in
push
cmp
imul
rolb
sahf
out
mov
sub
lea
sahf
out
xchg
push
lahf
daa
mov
fsubp
int3
int
outsl
jg
push
fsubr
int
stc
cmp
or
loop
lock
imul
add
and
pop
or
mov
push
scas
sbb
cwtl
cmp
hlt
adc
pop
dec
push
push
push
jp
mov
or
cmp
outsl
insl
mov
inc
popa
outsb
xchg
inc
sbb
mov
xchg
cmp
xchg
test
mov
dec
bound
xor
mov
jnp
and
cmp
psllq
repz
repz
jnp
mov
out
lcall
jns
iret
jnp
fisubs
notb
les
sub
sub
pop
rcrl
adc
pushf
daa
cmp
aaa
sub
pop
push
pusha
dec
inc
and
sbb
sbb
push
add
push
sbb
sbb
or
adc
jne
fisubrl
sub
jae
or
or
xor
push
inc
nop
push
or
mov
sahf
push
fisttpll
inc
idivb
push
xsha256
cmpsb
push
push
pop
push
inc
fcoms
fistpl
jmp
push
in
mov
pop
cs
jb
dec
xor
sub
shll
insb
push
dec
inc
push
rol
and
push
dec
pop
push
fildll
sbb
sub
or
inc
testl
push
or
jp
sub
daa
inc
daa
pop
push
pop
sub
push
push
mov
mov
test
push
inc
out
inc
ja
sti
rclb
ss
xor
daa
cld
xor
out
sysret
sbb
pop
sbb
add
pop
push
add
pop
scas
jge
fs
rorl
hlt
outsb
scas
xor
dec
pop
jo
pop
mov
subl
xor
pop
xchg
ret
popa
adc
adc
sbb
sub
inc
pop
cmp
insb
dec
inc
das
push
cmp
cs
cmp
pop
push
sbb
jbe
cs
inc
dec
pop
mov
cltd
jne
loope
cmp
push
xor
pop
inc
and
pushf
mov
loopne
jle
pop
sub
lods
sub
lahf
fwait
mov
sub
imul
or
cmp
mov
xchg
testl
adc
pop
sub
adc
cmp
sub
loope
sub
push
testl
insl
and
sbb
es
push
icebp
aam
mov
es
pop
outsl
jle
sub
pop
inc
push
into
aaa
daa
rolb
cmp
mov
sub
into
ss
sbb
lods
dec
and
dec
or
imul
xor
and
mov
mov
push
jo
add
add
xor
sbb
or
decb
imul
pop
mov
cmp
bound
xor
and
out
and
loope
insl
jno
or
dec
sub
dec
mov
pop
das
inc
mov
pop
sbb
gs
dec
sahf
daa
xchg
faddp
sub
lcall
cmp
mov
xor
adc
ds
in
dec
js
dec
adc
ss
sbb
add
bound
add
adc
mov
inc
and
lods
add
push
dec
or
add
and
insl
add
pop
mov
ss
repz
dec
add
pop
ja
push
daa
adc
push
push
lods
cs
jo
sub
xchg
imul
pop
adcl
inc
cmpb
xor
xor
dec
xor
sub
mov
inc
sbb
or
push
loopne
cmp
ss
lods
mov
mov
sbb
lahf
imul
sub
or
std
push
jl
jns
popa
jne
push
cmp
ja,pt
and
mov
jae
insl
popa
imul
inc
sbb
push
iret
fiadds
jo
jle
sbb
push
ja
and
cmp
push
adc
mov
pop
adc
cs
add
iret
repz
cmp
mov
dec
add
sub
add
cmp
and
les
adc
or
xlat
pop
mov
mov
dec
or
movhps
mov
sbb
cmp
push
dec
push
mov
push
dec
mov
cmp
mov
test
dec
shrb
cs
pop
or
das
cli
cmp
pop
and
sbb
in
push
aaa
xor
xor
fisttps
sbb
das
pop
pop
pop
jl
jbe
iret
mov
lods
pop
inc
xlat
cmp
cmp
dec
cwtl
jmp
dec
xchg
fcoms
mov
in
adcb
loope
or
pop
sub
ret
push
jbe
imul
jno
rol
push
popf
xor
mov
lea
xchg
adc
dec
or
cmp
pop
cmp
add
pop
inc
aaa
add
mov
jne
add
sub
push
mov
mov
fidivl
push
test
imul
sub
and
add
and
lret
inc
pop
cld
push
push
das
xor
xor
mov
and
sbb
mov
xchg
inc
das
push
adc
pushf
xor
inc
addr16
scas
and
and
dec
sub
xor
je
fs
fsubl
jae
push
mov
test
jns
push
je
jb
test
jb
outsl
imul
jno
imul
xor
pop
sub
outsl
xchg
xchg
dec
xchg
xor
test
inc
add
xor
ret
leave
xor
sub
das
pop
pop
jmp
adc
sub
push
adc
adc
pop
push
cli
cmp
clc
jl
ret
mov
inc
xchg
inc
inc
xor
pop
pop
or
pop
push
and
fisubs
dec
push
inc
pop
push
mov
mov
loopne
inc
das
aas
mov
pop
addl
rclb
inc
push
aam
jle
cmp
pusha
das
jb
jle
inc
sbb
xor
insl
ret
repnz
inc
mov
adc
sbb
repnz
jbe
mov
sbb
mov
adc
leave
mov
and
leave
rcrb
es
push
xor
adc
or
push
mov
inc
dec
ljmp
fwait
add
and
pop
lods
faddl
enter
or
les
sbb
mov
dec
dec
push
fists
jmp
xor
or
adc
xchg
inc
cmpsl
stos
scas
add
xchg
mov
or
inc
push
pop
push
outsl
lcall
dec
mov
daa
pop
pop
fwait
arpl
sti
insl
sub
sbb
push
push
cmp
data16
pop
add
or
test
aas
in
pop
sub
inc
inc
sbb
or
mov
or
push
pop
ljmp
cmp
push
loopne
and
sub
pop
jb
js
pop
daa
fwait
and
sbb
out
ficoms
ss
jle
insb
ds
fstl
pushf
loopne
int3
fldenv
fwait
out
mov
push
mov
das
push
loop
sbb
xchg
xor
in
push
jo
testb
daa
loopne
repz
inc
ret
pop
cmp
or
cmp
gs
add
push
xor
or
xchg
je
cwtl
xor
outsb
sub
pushf
pop
add
andb
jno
xchg
test
pop
sub
daa
cmpsl
fstps
push
sbb
or
sbb
jp
inc
sbb
pop
dec
adc
ds
popl
or
adc
jno
pop
mov
cmp
mov
pop
outsl
int
into
sub
es
pop
adc
int3
xor
mov
dec
test
pop
test
adc
mov
cmp
mov
arpl
xor
dec
ret
jecxz
push
mov
das
push
cmp
dec
jecxz
outsl
push
pop
dec
sub
ss
inc
push
sbb
mov
lret
push
lea
push
and
sbb
adc
jmp
adc
or
mov
aam
outsl
pop
es
mov
dec
jns
adc
enter
ret
pop
pop
pop
lcall
xor
or
andb
or
push
aaa
sub
dec
lds
mov
push
enter
xchg
lahf
and
add
movsl
mov
fdivrl
or
add
push
pop
push
call
mov
mov
pop
inc
mov
dec
xchg
int
stos
ret
enter
sbb
cmp
and
and
cmp
push
sbb
cmp
add
and
cmpb
push
int3
add
dec
cs
sub
ret
cmp
adc
pop
lds
loope
mov
cmp
lds
adc
or
sub
push
sbb
and
mov
or
daa
or
repz
inc
ss
inc
adc
dec
dec
in
imul
and
add
cmp
cmpsl
mov
add
lods
pop
dec
call
xchg
mov
out
int3
sbb
pop
sbb
adc
hlt
inc
mov
pop
popa
stos
das
adc
pop
push
adc
aad
mov
mov
cmp
cmpsb
addb
mov
ret
pop
or
or
adc
xchg
adcb
enter
inc
adc
mov
inc
sbb
sbb
dec
pop
mov
call
jno
cmp
jnp
inc
mov
adc
xor
inc
mov
or
ss
mov
or
jge
int
xchg
scas
push
cmovno
sub
out
js
stos
push
or
loopne
es
fdivrs
adc
cmp
pop
inc
cmp
loop
cmp
xor
fdivp
adc
push
and
and
adc
or
pushf
jge
cltd
adc
popa
or
imul
pusha
xchg
jbe
js
ss
sub
cmp
mov
lods
jae
sbb
and
sub
sbb
test
test
inc
sub
cmp
popa
xchg
testl
aaa
adc
mov
pusha
push
insl
sbb
push
adc
and
inc
add
and
cmp
sbb
fwait
test
and
dec
sub
scas
sbb
das
sbb
or
push
data16
push
xorl
adc
push
dec
xchg
and
cmp
add
in
jo
fisttps
add
dec
add
push
sbb
dec
or
cmp
sbb
adc
rorb
std
mov
inc
rolb
addr16
mov
sbb
push
and
or
mov
outsl
pop
cmp
cmp
stos
call
fcomps
daa
xor
fwait
sbb
xor
cs
fisubrs
xor
jb
push
sbb
mov
sub
daa
data16
push
sbb
movsb
jnp
add
arpl
mov
ss
int
inc
xor
xchg
movb
jmp
pop
mov
adc
adc
and
push
xor
jl
insb
xor
jmp
aad
add
jbe
sub
sub
popa
jg
sub
pop
imulb
je
jo
repz
cli
add
je
ja
fs
imul
cmp
test
add
ljmp
fiaddl
inc
jb
pop
push
daa
imul
fists
dec
push
call
dec
push
push
enter
mov
adc
shlb
out
push
lahf
push
jecxz
pop
pop
lods
jns
cmpsl
stc
cmp
cmpsb
mov
out
add
pop
pop
push
mov
mov
pop
fiaddl
enter
mov
movb
adc
mov
dec
push
dec
dec
jne
das
out
out
aaa
shlb
mov
mov
fwait
jnp
pop
sbb
ljmp
mov
ljmp
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
insb
decl
cli
mov
sub
sub
das
in
decl
mov
ds
pop
sbb
imulb
and
jle
jo
fsubs
ljmp
sbbb
test
xor
dec
xchg
pop
shl
dec
push
bound
sti
inc
add
pop
adc
incb
push
and
xor
aaa
xor
cmp
insl
xchg
lods
rolb
pop
add
push
insb
inc
shll
lea
out
daa
out
fistpl
dec
imul
xchg
out
and
xchg
dec
dec
sahf
pop
sub
cmp
in
in
sub
sbb
dec
sahf
xchg
xor
cmp
and
jb
pushf
in
dec
fmul
add
jae
dec
mov
cmp
js
cmp
mov
or
pop
aam
dec
dec
popa
in
and
jg
call
jnp
cmp
xor
sub
xor
inc
xor
xor
inc
xor
inc
pop
xor
mov
bound
xchg
jmp
adc
cmp
push
sub
aad
js
loopne
bound
jbe
sub
sbb
and
xor
dec
xchg
jp
into
push
jb
into
ret
jo
aaa
bound
je
bound
adc
mov
mov
adc
inc
daa
pop
add
adc
and
and
and
ret
imull
and
adc
adc
subb
pop
fldt
sub
das
inc
mov
sub
ss
mov
mov
out
into
enter
sbb
adc
xorb
iret
sarl
dec
mov
daa
push
ss
mov
outsl
push
mov
outsb
and
dec
sbb
or
or
push
jg
add
shrb
outsb
pusha
push
pop
push
fdivs
out
push
pop
pop
dec
cmp
inc
push
xor
jns
ret
pop
ljmp
movsl
aad
pop
pop
pop
out
shlb
push
xor
loopne
inc
outsl
sbb
das
pop
das
jge
xlat
push
inc
push
cmpsb
push
outsl
dec
in
sbb
fs
mov
scas
mov
cs
aad
mov
pop
lea
pushf
outsl
aam
aad
or
cmpsl
fnstcw
sub
out
fiadds
movsb
fadds
sti
cmp
fcmovnb
jbe
cltd
fcomps
jge
and
xchg
fstl
insb
mov
mov
pop
jl
ds
xlat
mov
fwait
aas
leave
es
bound
mov
leave
add
lcall
jbe,pt
mov
bswap
js
daa
aas
fbld
popa
scas
in
es
insl
das
nop
imul
mov
push
rorb
inc
enter
ds
mov
pusha
leave
jns
cmp
les
and
add
adc
ds
rep
subb
lahf
out
fcompl
test
mov
ds
aam
lock
xchg
testb
xchg
daa
pushf
dec
rorl
mov
cmp
outsl
jl
mov
lds
shl
clc
test
pop
jmp
or
sahf
ja
out
xchg
out
fisubs
clc
push
mov
sti
leave
push
aam
push
icebp
jnp
aaa
push
cltd
testb
xlat
fidivrs
aaa
je
sub
dec
icebp
addl
ss
iret
sarl
pusha
aas
and
mov
xor
push
inc
jns
in
adc
jns
addr16
out
xor
cltd
jl
repz
and
mov
push
or
xchg
cmpsl
fnstcw
mov
shl
sub
jnp
add
push
jne
mov
popf
out
push
out
mov
add
sahf
stc
out
repz
out
push
xor
jns
data16
mov
jl
out
sbb
cmp
repz
arpl
iret
repz
cmp
int
cmpsl
stc
cmp
add
lahf
out
jl
out
push
xchg
das
mov
xlat
test
or
js
jmp
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
adc
add
mov
and
push
mov
and
pop
add
idivb
adc
mov
bound
push
and
pop
sbb
enter
adc
repz
inc
repnz
iret
pusha
or
or
adc
add
pop
pop
outsl
pop
inc
xchg
xlat
test
outsb
push
push
jae
popa
mov
ss
aas
inc
push
jne
pop
sub
sbb
add
aaa
push
mov
pop
sub
cmp
jmp
dec
fisubl
push
fdivrp
mov
jae
dec
cmp
pop
mov
push
je,pn
pop
test
jbe
ljmp
push
push
add
push
inc
cmpsb
cmc
cs
imul
push
dec
pop
je
jo
adc
aaa
push
fisttps
ficoms
inc
jnp
fs
push
ret
pop
pop
jecxz
outsb
divl
mov
into
ror
pop
retw
or
or
dec
add
test
sbb
movsb
push
adc
mov
inc
add
fadds
jl
dec
push
and
or
ds
and
das
adc
push
es
insl
jo
dec
pop
insb
je
fisttps
adc
addr16
jo
jae
es
outsl
mov
idivb
cmp
adc
and
sahf
mov
push
cmpsb
mov
mov
lcall
xor
xor
xor
xor
cmp
cmp
movsb
stc
int
push
xor
xor
cmp
push
add
add
push
sbb
xchg
lcall
or
xor
or
loopne
xor
jae
test
add
pop
dec
pop
lods
imul
adc
shlb
push
sub
inc
dec
dec
cmp
ss
jo
or
dec
pop
sbb
push
or
pop
sub
push
push
and
push
or
mov
dec
lahf
cmp
ss
dec
xchg
sbb
inc
jmp
push
push
pop
xor
mov
lret
inc
xchg
fstpl
add
pop
add
add
adc
and
js
xor
int
jnp
xor
mov
daa
adc
inc
sbbl
xor
inc
sbb
jnp
sbbl
mov
test
loope
xor
inc
loopne
out
fisubs
pop
sbb
sahf
sub
xor
loopne
mov
adc
out
cltd
or
xchg
add
push
or
or
fldcw
mov
add
das
adc
int
fidivrs
and
sub
xor
inc
mov
xor
jnp
mov
mov
data16
insb
mov
mov
xchg
sbb
fwait
int
ret
sub
add
or
out
insb
push
adc
pop
add
ss
adc
push
push
dec
ltr
mov
and
das
xorl
xor
adc
imul
dec
dec
fldt
sub
mov
ss
or
push
sbb
push
mov
sub
adc
or
imul
lock
lods
push
aaa
mov
mov
mov
aaa
sub
js
mov
hlt
or
inc
mov
sbb
jo
push
pop
or
mov
adc
addr16
aaa
lahf
jbe
adc
adc
fldt
mov
stos
lcall
fisubrs
fsubs
lods
daa
jge
xchg
pusha
push
mov
fimull
push
jnp
das
divl
icebp
pop
xorl
gs
and
jno
mov
mov
imul
popa
daa
pop
xchg
push
sub
das
dec
shrb
loope
lahf
fimuls
fidivrs
sahf
negb
repnz
inc
push
push
cmp
sbb
mov
or
mov
mov
mov
js
fiaddl
fsubrl
js
lahf
pop
xchg
outsb
cmpsb
pusha
adc
pop
and
sub
test
addr16
lea
jg
sti
add
les
cmp
sub
popf
push
xchg
xchg
fcomps
push
pop
mov
cmp
xor
or
add
outsl
lret
pop
popa
popa
sbb
xor
pop
lods
daa
sbb
or
and
sbb
push
idivb
jl
sbb
cmpsb
dec
jl
pop
mov
mov
push
imul
push
xorb
and
add
jo
insl
fnstsw
xchg
adc
push
ja
fsubrs
xchg
outsb
cmpsl
call
jecxz
shlb
dec
add
loop
sbb
xchg
push
jae
ss
dec
sub
mov
add
sbb
es
pop
xchg
ret
cmp
das
push
je
scas
and
das
pop
or
or
xor
cmp
bound
nop
es
js
sub
push
inc
outsl
add
mov
jnp
sbb
sbb
lret
inc
ret
adc
adc
rcll
pop
xor
aam
dec
lahf
das
sub
adc
fldcw
or
xchg
addl
lods
and
sbb
pop
xchg
orb
pop
lret
lock
loope
xchg
outsb
pop
push
add
add
fcmovne
fcomps
negl
daa
lock
andl
pminsw
sub
les
icebp
mov
or
sub
push
push
test
adc
and
dec
sbb
xlat
mov
mov
cmp
fadds
inc
xchg
adc
adc
or
les
xchg
xchg
adc
roll
jae
sub
push
cmp
clc
repnz
mov
inc
or
push
jle
lods
sbb
push
add
cmp
frstor
sub
orl
pop
xor
mov
or
outsb
inc
fistl
aad
inc
fcmovu
xchg
or
inc
adc
jb
push
inc
sbb
xchg
fs
push
loop
inc
xor
add
or
xor
xchg
pop
inc
pop
jbe
pop
dec
mov
ja
rolb
add
add
jbe
xor
loopne
pop
sbb
sbb
push
lock
sub
or
add
mov
and
sub
and
hlt
les
fs
addb
xor
cmp
push
sbb
lret
call
inc
mov
int3
insb
pop
aam
add
mov
adc
pop
fbld
stc
mov
push
out
jno
jg
pop
mov
pop
push
sub
js
pop
xor
inc
sub
mov
inc
fnstenv
pop
sbb
in
mov
add
cli
stos
xchg
fstl
sbb
xchg
xor
pop
stos
or
cmp
das
pop
arpl
adc
cmpb
pop
cs
dec
dec
cmp
out
sahf
dec
add
xor
adc
lock
sub
je
ss
push
dec
movsl
xor
jmp
inc
test
jb
jo
ret
test
lds
fs
push
jnp
test
push
adc
loopne
idivb
inc
adc
or
jae
inc
sbb
pop
adc
push
push
add
prefetchw
cli
sbb
outsl
popf
push
pop
adc
dec
inc
adc
es
pop
and
jo
pop
aaa
adc
pop
sbb
xor
shld
adc
jmp
and
push
sub
sub
sub
push
es
pop
sub
daa
push
inc
sub
cmp
sub
jmp
cmp
inc
pop
aas
inc
cmp
or
dec
adc
adc
cmp
pop
push
or
cmp
sbb
sub
xor
sub
or
inc
add
pop
xor
cmove
xchg
out
cli
ja
dec
inc
dec
xor
adc
adc
dec
and
cmp
lcall
and
push
and
sub
inc
sub
or
pop
add
or
cmpb
faddl
and
xchg
add
imul
and
push
pop
jnp
stos
add
out
ret
sbbb
cmpsl
sahf
pop
dec
dec
mov
push
adc
or
xor
and
dec
in
cli
gs
mov
sub
movsl
call
addb
or
ds
push
ss
add
or
or
bound
dec
xor
xor
dec
stc
xchg
push
push
dec
enter
std
push
outsl
inc
jo
add
xchg
or
mov
and
pop
xchg
daa
bound
lods
les
add
ret
mov
mov
loope,pn
sahf
inc
jb
add
hlt
xchg
in
push
push
das
leave
sti
jg
fadds
push
push
inc
push
dec
inc
dec
push
dec
add
xor
sub
cmpsb
outsl
mov
cmpsb
inc
sub
mov
inc
pushl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
call
test
and
jge
je
mov
andb
fwait
rol
ljmp
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
call
cwtl
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
decl
mov
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
call
sbb
mov
call
cltd
test
push
push
inc
movsb
sbb
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
xlat
orb
js
test
add
mov
mov
movsb
mull
push
js
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
lcall
int
pop
jbe
push
xor
and
das
inc
push
push
inc
inc
pop
sub
or
gs
xor
decl
sbb
push
xor
arpl
jnp
push
jg
cmp
sub
sub
sub
dec
aaa
bound
cmp
insb
js
push
add
pop
cmp
imul
and
push
cld
test
sub
inc
cmp
or
cmp
and
out
arpl
push
sub
push
pop
mov
push
int
cltd
sub
outsb
in
nop
dec
cmpsl
aaa
pop
out
imul
mov
and
push
dec
push
dec
and
mov
cmp
sbb
push
aas
lds
push
sub
aaa
sarl
inc
sub
xor
xor
push
inc
add
inc
fdivrs
xlat
pop
inc
inc
xor
aaa
inc
inc
es
mov
cs
cmovb
pop
sbb
lahf
ss
out
and
mov
mov
mov
js
int3
pop
inc
or
addl
push
ss
xchg
add
inc
call
cltd
cld
scas
bound
pop
andl
jb
mov
jg
inc
xor
mov
dec
cmp
fstps
sub
mov
in
fdivrl
test
mov
jle
adc
or
or
pop
pop
and
or
mov
bound
mov
mov
sub
sbb
dec
js
add
mov
inc
adcl
adc
pop
jmp
sbb
push
jb
push
inc
cmpsl
add
inc
and
fmul
push
pop
sbb
daa
out
and
sbb
jp
push
inc
jnp
inc
mov
push
sbb
je
loope
mov
add
loop
sub
push
jl
mov
sbb
mov
pop
sbb
loopne
pop
adc
sub
or
inc
push
sbb
xor
push
inc
xor
pop
outsb
lret
iret
push
push
mov
push
jmp
and
nop
orb
push
mov
sbb
xchg
mov
popf
add
ret
adc
shlb
fisubrl
or
sub
dec
push
js
push
fstpl
mov
mov
jmp
sub
dec
cmp
xchg
mov
fsubs
sub
xor
dec
sahf
dec
pusha
and
add
or
iret
dec
xchg
test
or
or
nop
mov
jnp
sbb
xchg
pushf
or
outsb
outsb
je
xor
js
stc
xchg
jo
jbe
jae
popa
insl
gs
loope
pushf
cmp
jmp
or
jecxz
and
inc
push
mov
divb
pop
or
xor
insl
loop
inc
push
inc
stos
sbb
dec
mov
jecxz
cli
inc
outsl
insb
cmp
je
lret
pusha
inc
xchg
insl
lock
outsb
cld
xor
cmp
pop
sbb
negb
add
or
pop
push
gs
loop
aaa
sbb
jmp
pop
pop
or
xor
pop
pop
add
dec
fisttpll
aad
inc
xchg
pop
adc
add
pop
ds
jl
pop
inc
adc
ret
and
jae
add
imul
xchg
fmull
inc
sbb
stos
or
or
lods
fnstcw
mov
in
dec
adc
addr16
xchg
jle
push
mov
pop
sbb
xor
dec
and
sub
jle
and
pop
repnz
push
push
and
push
add
cmp
nop
pop
dec
add
je
or
dec
popa
dec
add
jbe
pop
push
ja
jb
pop
jecxz
incb
pop
inc
jne
fisubl
inc
push
inc
xor
and
push
pop
adc
jp
daa
pop
dec
push
or
test
mov
push
pop
xor
add
mov
testl
aas
sbb
and
call
pop
pop
xor
sub
hlt
xchg
fs
jo
decl
sub
xchg
push
stos
push
outsl
imul
push
pop
mov
movsl
pop
xor
and
push
dec
dec
das
aaa
pop
xor
movsl
mov
iret
dec
add
negb
and
scas
ss
popa
adcl
and
pop
adc
cmp
nop
pop
sbb
push
shlb
push
mov
pop
sub
or
push
rcrb
inc
push
mov
jl
pop
data16
dec
jo
cmpsl
push
lods
inc
fstpl
sub
inc
outsl
dec
aam
rcrb
pop
ja
cmpsl
xchg
pushw
dec
xchg
scas
pop
cmpsl
mov
test
mov
das
add
pop
add
push
jg
imul
lcall
sub
jle
lea
pop
pop
aas
inc
pop
sbb
sbb
push
pop
pop
jo
fisubrs
pop
stos
rorb
aaa
mov
fs
pop
dec
pop
movsl
jmp
divb
dec
pop
repz
and
cs
jae
pop
lea
sbb
jbe
xor
andl
pop
maxps
dec
push
insl
push
add
sub
sub
les
call
and
and
ficompl
lock
adc
pop
inc
and
inc
pusha
ficomps
add
cmp
cmpl
imul
insl
fstps
or
stos
push
push
sbb
add
jb
pop
push
add
dec
and
xor
fnsave
push
popa
mov
mov
outsl
and
add
je
push
punpckhwd
call
dec
outsb
push
je
scas
dec
rorb
popf
add
inc
dec
push
inc
pop
push
dec
inc
in
xor
cwtl
dec
xlat
jb
gs
mov
mov
js
cmovae
add
pop
daa
jne
addl
mov
shll
mov
popa
xchg
or
mov
rclb
push
adc
aam
daa
lock
arpl
rcrb
loopne
and
or
or
add
leave
addl
aaa
mov
mov
jns
jb
enter
push
adc
add
sub
or
or
add
lock
call
xchg
sbb
sbb
pop
lret
sub
xor
dec
lods
data16
aad
push
dec
subl
inc
pop
sbb
push
add
pop
hlt
ret
andb
cs
dec
pop
pop
ret
inc
loopne
daa
and
mov
ror
daa
inc
sub
pop
mov
xor
push
cmp
add
daa
call
add
lret
xor
enter
in
iret
pop
xor
fimull
lods
xorb
test
sbb
add
outsl
insl
aaa
jo
fstps
push
imul
addr16
mov
lds
and
bndldx
cmp
adc
pop
push
pop
aad
les
fs
inc
add
inc
imul
nop
mov
mov
jle
xlat
push
cmp
je
sarb
scas
inc
das
lods
ret
dec
sub
insb
dec
add
pop
shr
xchg
dec
inc
xadd
cmc
inc
pushf
inc
mov
inc
imull
or
inc
adc
outsl
fcmovnb
fiadds
nop
jo
maxps
addr16
sub
dec
add
jb
pushf
fadds
das
test
mov
inc
out
xlat
lea
cmp
aas
add
test
addr16
dec
movsb
cld
daa
add
or
push
xor
add
outsl
ror
push
aaa
in
lods
lods
dec
pusha
lahf
add
adc
or
push
mov
lods
inc
daa
adc
mov
mov
mov
aas
jg
stc
jbe
addr16
outsl
nop
sbb
xchg
pop
leave
dec
inc
inc
pop
leave
xchg
pop
cmp
xchg
pop
leave
xchg
sub
xchg
pop
stos
xor
daa
adc
and
push
jecxz
cmp
rcrb
mov
push
lock
push
insb
les
xor
out
mov
sbb
pop
and
repz
repz
pop
xchg
jl
pop
pop
out
cmp
jns
pop
pop
ds
pop
push
jl
out
cmp
or
pop
aam
ds
sarl
shlb
sub
sbb
and
sbb
and
and
dec
mov
std
pop
fsubs
mov
insb
das
fs
les
in
add
pop
or
add
xchg
cmp
cmp
add
mov
testl
xchg
arpl
jnp
out
push
mov
mov
jg
dec
scas
jbe
jg
mov
stos
ja
add
sbb
cltd
in
outsl
cld
push
enter
sub
mov
jl
cmp
inc
pop
dec
outsl
xchg
or
leave
add
inc
inc
cs
sbb
aad
xchg
out
mov
fildll
jb
cwtl
cmp
cmp
testb
ss
add
filds
pop
dec
xor
jl
pop
pop
leave
mov
scas
add
insb
and
sub
adcb
xchg
xchg
xor
pop
mov
and
jb
in
cld
or
shll
or
pop
scas
add
outsl
inc
mov
popa
out
pushl
inc
jb
and
leave
jae
pop
pop
shrb
fildll
and
outsw
sub
lock
pop
adc
dec
sahf
out
mov
cmc
pop
pop
insb
pop
pop
or
dec
test
pop
fs
mov
add
mov
jg
sbb
stos
or
jg
sub
add
jns
and
pop
ret
sarb
pop
fildll
push
xor
and
pop
loope
outsb
outsl
and
data16
xor
jmp
pop
or
pop
pop
scas
adc
loope
xchg
in
andb
inc
pop
and
xlat
cmpsl
and
loopne
shlb
pusha
iret
stos
sub
sbb
fwait
in
negl
cld
push
add
mov
add
jecxz
mov
subb
lahf
mov
iret
xor
das
push
cmp
jg
cmpsb
outsl
in
enter
add
pushf
xchg
fisubrs
mov
pop
icebp
mov
sub
sbb
sbb
ja
popa
negl
sbb
fadds
pop
xor
push
jg
push
push
xchg
daa
xor
pop
enter
cld
sub
shl
push
or
gs
pop
bound
push
movsb
mov
jnp
nop/reserved
or
xor
pop
je
add
jbe
test
xlat
es
xor
dec
mov
mov
xlat
or
lcall
pusha
xchg
sub
fs
cmp
and
cmp
inc
arpl
push
arpl
testl
and
ss
shl
cmp
scas
and
push
in
clc
arpl
push
nop
push
fs
rcrb
mov
lods
xor
pop
leave
adc
aaa
xchg
and
test
add
jo
lock
shll
out
mov
das
or
xchg
sbb
jg
pop
leave
xor
dec
dec
sahf
test
ja
add
fsub
mov
addr16
jae
pop
jb
mov
enter
xor
out
jnp
mov
or
leave
mov
shlb
push
popa
test
pop
cmpsb
nop
lea
pop
mov
or
cwtl
lock
mov
aaa
add
and
pop
aaa
in
xchg
pop
leave
mov
cmp
cmpsl
add
insb
insl
pusha
iret
xor
xlat
add
jo
push
sahf
iret
fcmovnbe
xor
daa
push
out
les
or
add
popf
pusha
aam
dec
xchg
push
push
cld
imul
out
les
xchg
mov
inc
or
dec
push
mov
or
xchg
dec
enter
push
xor
pop
mov
or
cld
fs
int
or
sbb
adc
xchg
or
add
dec
ficoms
jo
sbb
mov
cwtl
scas
dec
xchg
add
bound
rorl
lods
add
pop
out
push
addr16
add
or
mov
and
jb
push
sbb
daa
add
adc
out
test
inc
sahf
adc
push
sbb
outsb
call
adc
test
xlat
mov
movsb
stc
lods
daa
xor
pusha
jnp
in
imul
test
clc
aas
jno
mov
mov
push
cmp
faddl
mov
outsl
lods
pop
adc
mov
insb
and
stos
lods
jge
sub
xlat
bound
jp
add
das
leave
jae
out
js
mov
pop
addr16
lods
popa
aas
pop
fsubl
mov
push
mov
jbe
loopne
fmull
xor
pop
fisubrl
push
mov
xor
insl
xchg
mov
icebp
out
sahf
out
jnp
jne
stos
iret
sarl
jmp
outsl
sahf
cmpsl
stc
cmp
push
jge
pop
test
dec
repz
sbb
mov
jg
sahf
out
es
into
icebp
sahf
out
testl
mov
jns
xor
iret
repz
or
or
out
lcall
cmp
sarl
inc
xorb
add
aad
cmp
out
xor
jns
iret
clc
and
repz
sub
mov
sarl
fiadds
mov
push
sahf
cmpsl
stc
cmp
inc
mov
lcall
mov
int
jns
aam
pop
pop
nop
xor
out
je
out
pop
xchg
insl
jns
iret
repz
push
xchg
data16
loopne
xchg
adc
out
sbb
sarl
adc
xchg
jno
imul
cwtl
dec
je
dec
jnp
loopne
cltd
out
push
jnp
sbb
mov
or
repz
popf
xchg
mov
out
ror
es
sahf
push
insb
pushf
bswap
sarl
cwtl
inc
mov
cmp
sub
sti
sti
cmp
out
mov
das
movsl
scas
sahf
out
mov
cmpsb
jns
lcall
cld
xor
outsl
cmp
repz
adc
jl
cmpsl
stc
sbb
stos
imul
mov
ds
xchg
push
lods
out
scas
sub
jl
out
ret
scas
fs
lcall
cmpsl
stc
xor
jmp
mov
out
ss
loope
mov
mov
cmpl
fldl
mov
push
mov
mov
dec
movsl
add
insb
ds
mov
rol
jns
out
rcll
and
cmpsl
stc
cmp
pop
xchg
lret
js
sarl
negb
int3
pextrw
jns
push
popf
sar
push
dec
jnp
out
mov
int
enter
jns
into
ss
iret
pop
daa
loop
jl
shll
aam
add
out
push
aad
sbb
pop
in
int3
add
xchg
jns
inc
add
inc
fwait
push
pop
jbe
pusha
pop
push
pop
jno
pop
add
push
fsubrl
xchg
out
mov
mov
xchg
mov
and
daa
sub
and
jp
sub
jmp
pop
paddq
adc
mov
aas
pop
and
xchg
or
dec
and
leave
xorl
incl
and
daa
xchg
adc
and
pop
xchg
push
mov
adc
and
ss
aaa
inc
loop
pop
dec
enter
mov
mov
jbe
ss
pop
cmp
push
jo
loopne
push
fs
ficoml
scas
jb
daa
outsb
xchg
mov
inc
pop
mov
fmuls
mov
leave
and
fistpll
jnp
mov
sti
mov
inc
mov
mov
mov
add
aad
les
jmp
jmp
popf
inc
pop
enter
ds
int
es
push
out
aas
mov
not
repnz
es
mov
cld
mov
iret
gs
add
fmulp
sti
mov
scas
ljmp
inc
decl
pop
push
aaa
ja
cmpsl
mov
jbe
pop
push
inc
mov
mov
ret
add
cmp
dec
les
add
cmovle
cmp
ds
add
ja
in
inc
sub
or
or
pop
jnp
aas
shrb
sbb
push
and
pushf
inc
ss
push
cmp
dec
mov
inc
aas
les
push
push
jmp
ficoms
dec
and
fmul
jne
push
popa
xor
sarl
loop
push
and
fimuls
test
pushf
sbb
inc
repz
shlb
test
inc
and
jns
dec
add
hlt
js
mov
in
pop
cmp
scas
nop
call
gs
sbb
xchg
jl
jns
outsb
scas
lcall
jl
dec
push
mov
scas
out
in
cmp
mov
push
add
addr16
add
jnp
add
jp
jns
adc
add
mov
and
in
popa
jbe
jp
mov
xchg
xchg
pushf
xchg
push
adc
add
inc
repnz
enter
roll
pop
enter
jl
inc
sub
addr16
xlat
fiadds
push
push
inc
outsl
and
jo
jo
add
add
xchg
cmp
loopne
jl
ss
imul
mov
add
jo
inc
repnz
pop
test
inc
dec
jb
adc
jge
jge
cltd
dec
and
repz
in
jl
push
add
iret
roll
into
repz
or
out
push
mov
pop
inc
mov
inc
inc
dec
repnz
fdivrl
jge
jge
leave
adc
adcb
jle
in
dec
and
inc
jle
xchg
enter
push
addr16
and
adc
add
mov
mov
mov
xchg
in
lds
jge
add
inc
repnz
sbb
and
cmp
xor
jle
jle
xchg
pushf
mov
je
pushf
pushf
pop
orb
pushf
mov
out
pop
lret
psrlq
jbe
fisttpll
jmp
repz
sti
mov
fwait
in
repnz
push
jg
push
js
into
inc
dec
add
pop
jg
outsb
and
mov
jg
xchg
add
leave
inc
sahf
lock
in
mov
sub
adc
daa
cmp
insb
jo
daa
jmp
insl
test
out
inc
pop
mov
and
pushf
repnz
leave
aam
daa
addb
mov
add
daa
pop
rcl
push
fdivs
adcb
into
js
push
inc
mov
inc
jb
mov
lds
outsb
xchg
inc
repnz
les
sbbl
in
ret
jmp
andl
sbbl
sub
inc
jb
cmpl
xchg
xchg
pop
gs
xchg
les
or
test
mov
sub
cmp
add
lret
lret
daa
or
fildl
lret
lret
out
cmp
cmpb
xorb
cmp
or
cmp
repz
or
pop
iret
repz
or
or
iret
repz
mov
xchg
adc
cmp
repz
adc
cmp
adc
adc
shl
pop
out
sbb
add
jns
out
sbb
mov
addl
xorl
jae
add
in
aaa
jb
xchg
mov
stos
icebp
mov
test
dec
and
xchg
jb
xchg
test
iret
inc
xchg
mov
xchg
test
cltd
test
jb
mov
les
test
das
faddl
hlt
faddl
pop
add
push
mov
mov
lock
inc
das
lret
inc
pop
inc
add
adc
mov
loopne
scas
aaa
daa
and
add
in
daa
call
leave
add
test
xor
push
add
adc
jp
jne
inc
xchg
mov
aas
add
adc
mov
xlat
es
xchg
and
ficoml
and
pop
and
jl
xchg
dec
pop
and
xchg
dec
aam
xchg
xor
in
xchg
mov
int
push
mov
push
leave
inc
out
inc
jo
pushf
or
enter
mov
pop
and
mov
and
daa
imul
lock
mov
xchg
push
push
lock
fildl
iret
in
mov
mov
mov
mov
inc
dec
mov
mov
leave
dec
adc
pop
push
pushf
add
xchg
inc
mov
jo
mov
in
jns
xchg
add
mul
lock
and
mov
cmp
jns
lea
mov
pop
inc
lahf
add
xchg
add
xor
fbld
sbb
loop
dec
adc
lea
pushf
jecxz
mov
int
lock
jns
das
lock
mov
mov
jns
or
and
sub
mov
jns
dec
mov
pop
mov
jbe
jns
push
mov
fisttpll
femms
or
daa
or
or
daa
daa
daa
daa
pop
push
add
daa
add
add
dec
lea
jmp
mov
inc
mov
mov
inc
jb
xchg
mov
mov
stc
push
xlat
push
push
mov
pop
and
in
mov
pop
fcmovne
pop
mov
nop
ja
mov
add
popf
mov
bswap
adcb
adc
mov
xchg
mov
or
add
daa
iret
cmp
push
and
push
or
test
xor
cmp
or
leave
andl
mov
mov
xchg
fisubl
ja
iret
pushf
or
aad
xchg
jg
enter
mov
lea
lea
fstpl
add
push
nop/reserved
xchg
mov
or
dec
or
or
loop
imull
cmp
cmovle
pop
or
mov
out
in
aas
cs
inc
pop
mov
nop
xchg
inc
pop
jo
push
jmp
ljmp
daa
rcrb
cmpb
lea
and
mov
xchg
dec
outsb
mov
xchg
xlat
fistps
pop
out
push
add
and
das
pop
mov
pop
jle
cmp
xor
in
das
xchg
les
pop
mov
sbb
jb
mov
jle
das
mov
xchg
mov
lock
les
int3
das
add
leave
inc
repnz
xchg
out
test
or
and
repz
cs
cmp
repz
repz
or
pop
iret
repz
or
jo
jle
inc
push
cmp
mov
in
and
cmp
ja
call
nop
iret
in
jbe
adc
sbb
and
sub
leave
repz
cmp
cmp
inc
leave
xor
fisttpl
push
nop
pop
or
mov
movsb
xlat
mov
xchg
aam
daa
hlt
das
scas
or
nop
xchg
nop
cmp
and
movl
in
add
xchg
pop
xchg
jbe
jb
movl
out
ret
pushf
cmp
daa
int3
pop
xchg
fcoml
mov
mov
adc
daa
xor
mov
xchg
cmp
mov
xchg
xchg
cmp
mov
cwtl
mov
test
mov
pop
mov
jb
xchg
mov
dec
and
hlt
jmp
lcall
fs
push
xchg
addr16
in
dec
xchg
xchg
push
xchg
pop
leave
inc
repnz
sbb
mov
fimull
cs
cltd
addr16
add
sti
push
xchg
pop
adc
sbb
daa
xchg
xor
cmp
xchg
pop
xchg
xchg
int
sbb
xchg
jg
cmp
xchg
lcall
dec
dec
mov
dec
dec
dec
out
sub
or
inc
pop
sub
jb
enter
xchg
bound
sbb
xchg
adcl
es
mov
in
add
add
jns
cmp
add
fucompp
js
xchg
xchg
adc
ja
adc
xchg
add
ficoml
outsb
pop
int
push
into
iret
addr16
cld
hlt
sub
popl
mov
inc
cmp
and
daa
dec
mov
jle
push
fists
lsl
in
fstpl
add
mov
movsb
add
in
xchg
cmc
xchg
bnd
std
das
add
add
or
cmp
pop
outsl
rcrb
add
imul
pop
popf
mov
cwtl
mov
filds
aam
dec
pop
jb
repnz
or
and
cwtl
pop
and
in
inc
cwtl
xchg
fs
dec
mov
insb
cwtl
lcall
dec
lahf
testl
add
femms
enter
pop
pop
rcrb
repnz
dec
or
adc
cltd
repnz
dec
cltd
in
repnz
cltd
pop
cltd
arpl
fdivrl
or
pushf
pushf
pushf
pushf
pop
push
add
pushf
add
sbb
repz
sbb
sbbl
iret
repz
xchg
push
fwait
pop
dec
sahf
outsb
repnz
sahf
out
dec
mov
stc
mov
js
push
rcrl
cmp
negb
rcrb
inc
pop
push
lock
push
add
arpl
pop
lar
jae
pop
insl
xchg
lcall
dec
sahf
out
add
repnz
xor
jb
ror
jmp
pop
jns
stc
add
in
or
mov
daa
cmp
xchg
inc
fists
iret
enter
fwait
push
mov
clc
xchg
movsb
das
mov
sarb
mov
add
ljmp
or
inc
mull
pop
xchg
ret
mov
mov
pushf
out
jb
cmp
add
leave
mov
pop
pushf
sbb
jae
cmp
jg
pushf
xchg
rolb
cmpsb
cltd
pushf
mov
pusha
xchg
js
mov
dec
loope
in
into
out
ficomps
add
mov
fisubl
adc
movsb
ja
in
dec
dec
inc
push
popf
out
pop
popf
leave
repz
insb
mov
jp
mov
pop
and
pop
push
jb
cmp
cmp
cli
add
adc
or
jns
and
sub
pop
cmp
repz
or
or
repz
push
adc
leave
cmpsb
daa
push
scas
adc
movsb
jbe
nop
push
lea
iret
repz
mov
mov
push
loop
das
fiadds
repnz
scas
pop
clc
movsl
or
cmp
cmpsb
imulb
mov
push
push
add
push
push
add
and
scas
push
lahf
inc
cmpsb
call
sub
push
fs
xchg
into
add
jg
in
in
sbb
add
mov
jecxz
outsl
pop
stc
lahf
pcmpgtd
sbb
add
pop
add
mov
inc
jo
out
or
inc
and
loopne
out
inc
aas
push
pop
push
lahf
inc
mov
pop
dec
push
add
lar
lea
pop
cs
mov
sahf
xchg
outsl
mov
push
nop
mov
ds
adcb
lret
rcrl
cmpsl
fwait
cmp
fistpl
add
in
adcb
add
pop
or
mov
fldenv
mov
xor
jns
xchg
dec
test
ja
mov
mov
xchg
out
add
leave
out
lahf
pop
add
ret
cmp
lret
add
and
in
mov
rcll
mov
jl
mov
inc
nop
push
sub
lock
enter
inc
inc
mov
fstpl
popa
mov
movl
dec
push
and
pop
enter
stos
inc
movsb
stos
add
ror
repnz
cmp
rolb
push
fsub
aad
push
aaa
out
not
frstor
popl
xor
daa
push
in
add
mov
sub
add
cmp
repz
push
push
pusha
pop
repz
repz
or
or
iret
repz
lods
push
mov
jle,pt
mov
daa
cmp
mov
lods
and
dec
and
movsb
push
jo
mov
pop
ja
movsb
das
inc
mov
pop
movsb
bound
mov
orb
mov
add
movsb
inc
cs
addr16
lock
mov
mov
in
lods
lods
movsb
leave
leave
leave
add
jno
leave
leave
out
negl
push
and
jl
jmp
mov
nopl
adc
aaa
push
jo
enter
movsl
bound
add
jg
mov
frstor
aam
daa
sbb
and
and
add
test
mov
jl
mov
into
aas
ljmp
cwtl
pop
or
jmp
lahf
movsl
out
fnsave
movsl
jmp
push
aas
push
inc
jb
mov
scas
mov
xchg
stos
push
cmpsb
cmpsb
es
fcomip
je
push
aas
pop
add
add
dec
and
xor
pop
jae
cmp
popa
imul
leave
nop
xchg
lods
mov
in
lsl
and
push
aam
mov
cmp
add
sahf
outsb
and
push
testl
sahf
add
xchg
jae
popa
andl
xchg
pop
str
cmpsl
and
jns
cmpsl
lds
jae
enter
cmpsl
icebp
pop
or
mov
test
cltd
dec
ds
add
mov
out
cmp
movq
sbb
pop
push
mov
jmp
leave
inc
mov
out
jb
stos
xchg
add
cs
fucom
sahf
out
fisttpll
in
pop
cmc
add
mov
add
jl
sbb
adc
xor
add
arpl
test
cs
imul
addr16
scas
jns
lahf
ja
mov
jnp
daa
adc
in
negl
movhps
dec
adc
xchg
cmp
mov
addr16
add
jns
add
divl
ja
jg
pop
push
ja
stos
push
faddl
push
xchg
outsb
jae
inc
pop
lsl
mov
out
add
outsl
or
add
lods
fwait
cmp
lidtl
add
repz
pop
sub
xor
cmp
xor
es
fiadds
and
add
dec
stos
aas
vmread
mov
call
stc
enter
mov
mov
mov
inc
insb
aaa
pop
xor
mov
jb
cmp
mov
mov
add
enter
jno
pandn
out
xchg
iret
mov
push
add
in
sysret
movhps
dec
add
pop
xchg
lods
push
gs
and
xchg
mov
mov
dec
push
sahf
fstpt
iret
mov
dec
lock
push
sti
adc
ja
daa
iret
lods
mov
lods
iret
inc
lods
dec
lods
iret
repz
pop
push
push
jbe
mov
or
add
pop
lods
lahf
lret
lret
lret
lret
lods
outsb
lods
mov
cmp
sahf
pop
cmpsb
adc
iret
adc
push
into
stc
int3
hlt
jbe
pmaxub
repnz
sahf
and
inc
pop
mov
dec
mov
rolb
scas
inc
and
push
or
mov
movsb
addr16
retw
dec
daa
push
scas
fildll
outsl
loopne
orb
xchg
scas
pop
lcall
das
rsm
pop
or
sahf
test
enter
lahf
movsl
jle
mov
iret
rcrl
add
jb
mov
mov
or
or
sub
push
or
xchg
adc
scas
or
dec
jb
scas
and
dec
mov
add
fildl
incl
out
outsb
pop
mov
mov
rorb
add
enter
leave
rcr
pop
or
inc
or
push
fistpll
aaa
ss
pop
cmp
das
outsb
push
cs
add
xchg
jb
xchg
add
lock
mov
repnz
loope
add
cmp
inc
add
or
adc
pop
fcoml
dec
and
popl
outsl
and
xor
scas
dec
mov
push
iret
pop
packuswb
mov
pop
ja
jg
push
push
xchg
xchg
outsb
repnz
add
xchg
orl
xchg
or
in
cmp
mov
mov
mov
in
mov
loop
ljmp
push
pop
cli
cli
or
nop
fmulp
add
adc
or
lea
mov
inc
dec
mov
push
mov
jbe
xchg
xchg
js
sub
jns
xlat
xchg
add
sbb
aas
mov
push
or
getsec
jns
push
mov
sub
adc
outsb
and
or
adc
sbb
es
dec
dec
dec
cs
dec
push
dec
dec
dec
dec
jo
mov
dec
aam
cmc
adc
dec
insl
das
jne
sahf
out
adc
iret
repz
fmull
stos
leave
sbb
sbb
loope
sbb
aad
mov
and
leave
adc
mov
loope
jb
pop
mov
bound
insl
mov
js
adc
xchg
leave
leave
inc
stos
mov
icebp
and
loop
mov
xlat
mov
add
into
repz
pop
enter
push
mov
mov
mov
cmp
cmp
dec
mov
mov
mov
mov
cltd
mov
mov
xchg
xchg
cltd
ja
shll
mov
mov
xchg
mov
mov
xchg
and
mov
mov
mov
out
fidivs
push
push
cmp
inc
or
out
dec
or
pop
cmp
push
xchg
xchg
js
mov
dec
push
jne
cmpsl
shrl
fmull
mov
mov
mov
insl
daa
pop
pop
mov
lret
lret
or
ljmp
lret
lret
lret
or
and
cs
inc
mov
dec
mov
mov
lret
lret
outsb
mov
dec
lret
lret
lret
mov
stos
mov
mov
push
mov
cmp
repz
fsubs
jecxz
repz
and
and
and
cmp
or
cmp
repz
sbb
daa
sub
js
sahf
outsb
cvttps2pi
aas
cs
mov
ret
jmp
jne
jge
test
fucom
jns
lea
call
and
and
popf
rolb
iret
loope
daa
fnsave
imul
daa
pop
fdivrp
daa
ss
test
xor
cmc
cmp
pusha
addr16
ja
jns
fsubrp
pushf
fimull
dec
mov
sbb
ja
repz
es
push
add
jns
addr16
mov
iret
leave
in
in
sub
sahf
cmpsl
fwait
cmp
ud2
pop
or
jb
jns
outsl
pop
jp
repnz
iret
adc
daa
iret
jae
adc
leave
push
es
jae
aam
sbb
xor
jmp
sbbb
pushf
mov
push
push
and
sahf
cmp
leave
sub
and
mov
jmp
lds
dec
repnz
movsl
mov
mov
pmaxub
pushf
pushf
mov
mov
pushf
pushf
pushf
arpl
cmp
repz
stos
lss
mov
ret
lret
ficoml
push
mov
sahf
push
sbb
bswap
leave
leave
in
push
jb
cwtl
cmp
leave
leave
mov
and
xor
imul
daa
iret
xor
push
cmp
in
jbe
pcmpgtd
outsb
sub
fnstcw
das
enter
cmp
mov
aas
mov
mov
bswap
push
add
vmread
mov
mov
pop
outsl
idivl
dec
xchg
pop
daa
outsl
femms
add
ds
shl
fcmovne
pop
shlb
das
push
adc
rorl
ja
push
adc
lar
pop
push
sbb
sub
pop
inc
fwait
lret
dec
push
sbb
leave
sbb
je
and
fdiv
jbe
iret
mov
xchg
shr
vmread
rorb
rorb
jmp
in
in
xchg
cmc
mov
divps
in
add
sub
int3
sahf
faddl
rcll
add
imul
mov
orl
xchg
scas
mov
rcll
into
in
jns
fiadds
out
loopne
inc
mov
ret
ret
dec
fiaddl
lret
ja
inc
iret
leave
repz
cmpb
ja
popl
pushf
pop
xchg
in
subb
popf
ljmp
or
rcll
ret
jg
int3
in
xchg
push
paddsw
pop
ret
xlat
pusha
ret
push
and
push
mov
fwait
arpl
xchg
mov
ret
xchg
fsubp
in
dec
out
out
add
dec
adc
xchg
repnz
pop
pop
pop
sub
xor
add
cmpsb
sub
push
les
mov
test
mov
xchg
pop
outsb
mov
in
pushf
fbld
mov
decb
les
outsl
into
outsb
daa
mov
out
out
negl
call
insl
sbb
testl
sub
enter
lds
lds
jb
pop
xor
insl
fcmovne
in
jbe
xchg
test
adcb
jns
daa
daa
ror
add
in
in
jmp
add
pop
and
pop
xchg
out
inc
pop
add
add
sahf
ds
daa
mov
mov
jno
jns
cmp
pushf
movsb
outsb
xchg
mov
movb
js
push
out
push
sahf
pop
mov
cli
add
fists
push
add
sub
repz
add
mov
push
pop
push
mov
mov
xchg
pop
lret
lret
inc
jp
outsl
stos
mov
lret
lret
lret
lret
rol
loope
lret
lret
lret
lret
in
test
lret
lret
lret
lret
sbb
and
cs
jmp
dec
pop
nopl
cmp
cmp
sbb
sbb
cmp
cmp
push
adc
cmp
pop
sub
jo
jns
dec
jnp
xor
xor
sahf
out
xor
xor
sahf
out
aaa
fidivrs
jmp
cmp
cmp
cmp
lahf
jbe
leave
fidivrs
cmp
in
in
ss
inc
inc
dec
cmp
repz
dec
inc
push
inc
bound
vmread
dec
jns
out
mov
dec
movsb
jb
jb
scas
pop
mov
iret
jae
push
out
push
xor
in
icebp
cld
pop
lret
pop
cmp
lret
lret
call
and
lret
insl
in
lret
fiadds
and
lret
cmp
lret
leave
lret
cld
mov
inc
ljmp
dec
mov
fisttps
lret
push
lret
mov
lret
sub
aaa
push
adc
inc
push
dec
pop
pop
iret
repz
sbb
outsb
sbb
iret
repz
test
sbb
lcall
daa
iret
and
in
jns
and
and
repnz
repnz
or
adc
push
push
repnz
fildll
int3
xor
repz
in
aas
cmovp
push
xor
repz
pusha
xor
jbe
jns
fildl
mov
jbe
pop
mov
sahf
out
cmp
cmp
out
ds
out
cli
repz
inc
fimuls
add
xor
pushf
cmp
es
xor
and
cmp
inc
int
shll
sar
int
repnz
add
cmp
mov
push
mov
xchg
iret
or
jecxz
mov
push
add
push
jno
inc
ds
pop
adc
add
mov
decl
in
inc
xlat
xchg
dec
ja
daa
cmp
push
into
ror
and
popa
into
imul
jno
pop
clts
leave
leave
leave
leave
orl
jg
into
js
inc
add
nop
aam
mov
pop
in
into
or
hlt
cld
filds
lahf
pop
mov
xlat
push
and
rorl
das
daa
aaa
iret
aas
iret
inc
sahf
fcmovne
xchg
iret
dec
iret
push
mov
insb
pop
dec
mov
popf
fsubrl
nop
mov
pop
fwait
mov
mov
sahf
out
bsf
or
cmp
out
fisttpll
call
cmp
or
adc
rcll
adc
jns
dec
cs
iret
repz
insb
push
sbb
sbbb
sbb
movsb
sbb
mov
cmp
les
and
fmull
pmulhw
outsl
sti
daa
jecxz
adc
push
rcl
das
sbb
in
repnz
jg
enter
iret
repz
push
push
add
jle
xchg
out
cmp
mov
add
mov
iret
or
sarl
leave
repz
rcr
enter
or
adc
pop
push
pop
fisttpl
jns
syscall
or
scas
xor
shlb
mov
popa
pop
clflush
ja
adc
push
adc
cwtl
push
mov
sahf
out
sbb
sbb
xchg
out
rorb
push
ficompl
push
in
iret
mov
and
push
cmp
jnp
shrl
and
daa
xor
cmp
sub
push
shl
add
add
pop
shrl
dec
inc
loop
cmpsl
icebp
das
sub
jmp
mov
sub
pop
add
shll
pop
mov
cs
iret
repz
rorl
fiadds
jmp
inc
cmp
lahf
pusha
fdivr
push
push
and
aam
pop
pop
pop
aaa
aam
aam
aam
sahf
out
pop
arpl
outsb
pop
jns
je
out
test
sysret
xchg
pop
mov
pop
lcall
jns
xchg
aam
aam
push
adc
in
jo
adc
adc
outsb
in
stos
pmullw
aad
push
jns
out
das
daa
add
add
outsw
adc
cmovg
fisttps
jb
xchg
jl
fnsave
rorl
ja
push
add
fcmovne
xchg
lcall
sahf
xchg
outsb
or
dec
ret
push
fmul
repz
pop
call
push
iret
clc
adc
pop
or
iret
repz
sbb
pop
and
sub
scas
cmp
inc
dec
xor
push
ficomps
data16
outsl
frstor
jl
xchg
aaa
jb
sbb
xchg
popf
test
sahf
out
sahf
push
mov
mov
or
das
fisttps
ljmp
cmc
add
ud2
push
pop
iret
leave
leave
leave
and
inc
adc
iret
repz
adc
cmp
fwait
nop/reserved
outsb
sbb
outsb
daa
iret
sbb
jns
xchg
out
push
mov
and
and
mov
sahf
out
xchg
xlat
push
and
test
jns
std
push
xchg
out
popf
call
fcomps
push
sub
daa
iret
repz
cs
push
rorb
sahf
fsubs
mov
sub
pop
xchg
mov
aaa
lods
mov
xor
dec
cmp
fists
test
add
movb
aas
cmpsl
inc
inc
imul
movsl
sub
cmp
cmp
je
jmp
push
push
pop
aam
jge
cmp
aas
dec
push
movsl
adc
pop
inc
or
popf
mov
aaa
outsl
jns
rcll
cmp
push
add
jae
add
add
add
repz
or
or
mov
jbe
or
aaa
or
or
daa
adc
adc
mov
outsb
das
and
push
addr16
das
push
xorps
pop
imull
push
and
jbe
cmp
jb
pop
and
jbe
orl
xchg
xchg
out
pop
xchg
sub
mov
fbld
bound
xchg
xlat
sbb
data16
cs
iret
push
sbb
jmp
cmp
repz
and
sbb
jns
out
or
call
jns
out
aam
int3
enter
sahf
sarb
iret
rep
movsb
cwtl
nop
mov
jns
ja
push
js
fs
sahf
out
sahf
push
inc
inc
cmp
sbb
movsl
lock
or
push
and
pop
mov
sbb
jae
loopne
adc
in
test
and
sbb
std
bound
jo
addb
test
ljmp
movsb
add
in
sahf
pusha
cmpb
cmpsb
fisttps
mov
sbbl
mov
xchg
inc
mov
popf
pop
rcrb
mov
sbb
out
ja
stc
in
call
adc
push
cmpsl
in
pop
fidivrl
xor
fcomp
loopne
jb
icebp
lret
ret
and
push
inc
mov
adc
andl
mov
imul
mov
inc
aaa
push
out
pop
pmovmskb
add
mov
das
test
aas
pop
test
cmpsl
repz
mov
push
loopne
mov
or
imul
out
adc
sahf
out
sahf
adc
lahf
out
sbb
in
sbb
cmp
rep
sbb
cmpsl
stc
cmp
push
sub
enter
cmpsl
stc
sahf
nop
and
ljmp
jns
jp
ljmp
xchg
mov
add
jno
aaa
outsb
in
pop
clc
rorb
push
add
ret
les
and
inc
pop
movsb
add
or
and
fstl
add
les
cbtw
pop
push
xorb
adc
out
icebp
addr16
push
push
mov
dec
pop
mov
lods
jmp
xchg
stos
xor
aas
pop
daa
idivl
and
jg
stos
insl
stos
jge
cmp
pop
jg
out
sbb
loopne,pn
inc
lmsw
shl
sub
daa
pop
dec
inc
inc
inc
xchg
es
ja
or
xor
cmp
sbb
loopne
push
js
mov
jns
repz
lock
and
push
ds
lret
vinsertf32x4
lock
add
lock
out
and
push
or
jns
jnp
or
adc
in
repz
out
enter
sbb
push
mov
test
repz
rep
and
cmp
and
ret
pop
clc
mov
and
mov
xor
mov
stc
es
fstps
inc
cmp
mov
mov
and
jg
iret
jnp
push
cmp
pop
js
imul
repz
xor
dec
insl
add
mov
xchg
mov
ljmp
push
dec
insb
pop
pop
push
inc
cmpsl
add
enter
dec
inc
pop
enter
jl
xchg
or
ret
mov
adc
pop
in
adcb
sbb
lcall
mov
mov
ret
inc
and
sahf
mov
sub
inc
call
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
addl
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
ljmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
ljmp
inc
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
jmp
pop
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
xchg
clc
repz
mov
subb
fwait
xchg
and
and
addl
aas
jno
or
mov
fisttps
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
call
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
push
inc
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
ss
jmp
inc
xor
lods
cmp
mov
cmp
cmp
mov
decl
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
hlt
call
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
std
out
xchg
enter
orl
pop
ficomps
shrl
or
pop
enter
pop
inc
inc
je
inc
inc
push
dec
dec
in
je
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
pushl
xchg
fs
xor
fdivrl
jmp
rclb
mov
incl
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
call
aam
movl
imul
std
in
leave
mov
add
insb
push
arpl
jmp
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
jg
std
test
movsl
cli
test
xor
leave
mov
insb
fdivs
jne
mov
inc
iret
or
shrl
push
ficoms
push
xlat
enter
mov
mov
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
xchg
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
and
test
push
movsl
in
lahf
xor
mov
js
stc
cmp
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
ljmp
popa
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
gs
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
std
jg
dec
into
pop
cmp
mov
inc
movsl
fisttps
fdivr
mov
sti
hlt
shrl
imul
mov
sarb
add
in
add
pushl
pop
dec
or
cmp
add
daa
adc
or
and
mov
or
mov
popa
into
push
stc
ficomps
leave
fcos
ljmp
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
call
pop
push
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
incl
inc
push
imul
xorb
sbb
push
imul
aam
loopne
sar
decl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
sar
mov
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
jmp
sbb
outsl
and
ja
int3
add
mov
das
call
loopne
es
lds
or
add
mov
cmpsl
call
ret
call
loopne
shlb
scas
ficomps
ret
es
pushf
mov
call
or
addr16
jb
push
add
adc
mov
jnp
lcall
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
incl
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
jmp
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
jg
xor
lds
mov
jmp
sbbb
mov
xor
mov
add
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
push
mov
mov
mov
sbb
add
sub
ret
pop
jo
xor
mov
pop
push
push
scas
or
enter
cmp
push
xlat
cmp
repz
fcmovnu
repnz
repz
loop
in
iret
repz
in
jmp
iret
repz
in
repz
cmc
iret
repz
div
clc
stc
cli
sti
push
cwtl
outsb
cmp
pop
adc
or
add
lahf
adc
mov
and
mov
in
sbb
jae
inc
push
pop
adc
jbe
jnp
mov
add
or
leave
bound
inc
xor
mov
dec
popa
je
push
filds
xchg
and
cmp
inc
pushl
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
notb
push
je
push
movb
mov
insb
imul
inc
insb
imul
dec
inc
outsl
iret
or
les
inc
or
es
jp
movsl
lea
push
and
jecxz
js
popa
or
sub
pop
insb
and
push
je
push
push
jbe
and
aas
jbe
jno
shl
xchg
push
ret
je
inc
inc
push
xor
cmpsb
xor
dec
pop
aaa
imul
xchg
insb
popa
jns
cmp
push
dec
insb
and
rcrb
xchg
cmp
movq
aas
inc
push
add
pop
push
push
aas
sub
aas
cltd
and
cmp
daa
int
imul
pop
inc
aas
and
inc
dec
jle
lea
mov
xlat
inc
inc
dec
dec
fistpl
pop
mov
je
jo
inc
inc
add
ds
push
testb
mov
xor
adc
sbb
int
push
dec
cmp
inc
mov
mov
push
sbb
mov
push
xchg
cli
inc
outsb
jne
andl
dec
jge
in
pop
ja
xor
xor
or
outsl
add
addr16
pusha
insl
clc
xchg
into
pop
jo
add
pop
popf
popf
pop
inc
cmp
rorl
aas
aaa
mov
dec
cld
push
add
gs
ss
inc
andb
cmpsb
or
lahf
mov
shlb
pop
bound
sbb
xlat
sbb
and
lahf
xchg
adcb
out
jb
test
popa
sub
cmp
popa
jo
lahf
xchg
rcl
lahf
push
outsl
outsl
test
add
adc
pop
in
jno
adc
in
push
andl
xchg
add
add
cmp
adc
and
xchg
sarl
jo
push
add
push
outsl
insb
jns
add
mov
sub
stos
dec
push
mov
je
pop
push
arpl
insb
psadbw
xchg
sbb
inc
push
bound
jge
fimull
bound
mov
pusha
xor
popf
cwtl
in
dec
xor
lods
jmp
xor
add
out
and
inc
repz
nop
outsb
and
push
shrb
lods
xor
in
pusha
pop
inc
dec
adc
mov
push
cmp
lods
inc
cwtl
sbb
adc
jo
sbb
push
call
inc
push
inc
dec
and
loop
bound
outsb
arpl
lcall
in
pusha
mov
insb
insl
aaa
push
or
push
pop
sub
insl
mov
xchg
fisttpl
subl
cmpsl
add
daa
sub
orb
dec
fs
andb
sub
push
cmova
mov
push
fcomp
inc
add
jmp
add
dec
inc
dec
add
add
iret
mov
add
add
mov
add
or
pop
pop
push
or
or
or
or
or
push
lock
adc
adc
push
adc
push
add
imul
movhps
push
adc
adc
adc
add
data16
jmp
adc
pop
adc
inc
add
pop
add
add
add
adc
pusha
inc
push
add
aam
jno
mov
cwtl
xorb
jb
imul
ds
in
mov
pop
and
xor
inc
mov
adc
xor
cmpb
fwait
add
add
and
mov
shrb
mov
mov
xchg
xchg
addl
or
andb
inc
pusha
pop
sbb
pusha
xor
add
scas
add
inc
pushf
into
add
adc
cmp
jg
jne
adc
push
adc
pop
popa
jno
and
das
push
xchg
mov
lock
loope
add
mov
inc
xor
pusha
and
scas
fiaddl
or
js
mov
cli
sub
rcr
push
ret
xchg
incl
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
std
pop
les
fsts
dec
popa
add
push
mov
cmp
sub
out
cmp
xor
and
fistpl
jg
inc
cli
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
push
repnz
rcll
incb
sub
pop
add
call
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
xor
aad
std
movsl
jecxz
pop
mov
sub
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
data16
decl
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
mov
in
mov
orb
int3
lcall
fs
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
xchg
mov
xor
lods
scas
xchg
test
aam
and
sbb
sarl
and
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
jg
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
std
ljmp
sahf
loope
rorl
mov
int
arpl
push
out
or
pushl
cld
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
insl
imul
fbstp
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
jbe
sti
loope
mov
sar
andl
aas
icebp
testb
mov
mov
mov
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
cmp
push
clc
jb
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
aas
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
fisubs
icebp
aas
std
cli
push
push
push
idivl
ljmp
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
or
ljmp
cmp
sti
punpckhbw
cmpsb
orb
mov
xor
jmp
xchg
fistl
negb
pop
hlt
sub
movsb
add
lea
pop
jmp
jg
gs
std
xorb
jg
aad
adc
incl
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
ljmp
sarb
std
pop
les
cli
mov
mov
inc
arpl
cmp
lcall
sbb
scas
sbb
push
scas
loop
idiv
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cld
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
loopne
fdivrl
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
xor
call
adc
push
jo
pusha
imul
enter
mov
mov
pushl
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
test
add
jg
jle
jg
mov
jmp
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
orb
scas
les
cli
adc
and
lahf
iret
in
fistpl
lret
mov
das
pop
cld
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
add
or
cld
inc
or
pop
jg
add
out
pop
mov
jg
mov
aad
test
mov
jle
iret
push
jbe
push
sbb
incl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
repnz
jg
sarl
adc
loopne
sar
orl
pusha
mov
imul
mov
push
in
aas
mov
fmull
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
loope
pop
in
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
fbld
data16
pop
nop
mov
inc
sti
arpl
daa
lock
jg
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
fsubr
fistps
lds
fidivrl
jg
stos
ljmp
ss
add
dec
mov
sub
jge
xor
lahf
les
xchg
ds
sbb
cld
addl
sbb
mov
in
stc
mov
lahf
outsl
int3
push
sbb
idiv
pop
imul
arpl
out
out
outsl
xchg
jg
incb
jge
popa
push
test
jbe
outsb
hlt
sti
fwait
std
pushl
cld
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
and
shl
cld
mov
adc
jmp
stos
pop
jg
pop
shrb
rcl
jg
adc
xor
pop
mov
call
fisttpl
sub
jmp
lea
jp
jnp
jecxz
call
inc
lds
push
pop
adc
imul
or
inc
pop
xor
sar
decl
sbb
xor
subb
iret
mov
lock
inc
cmpsl
enter
mov
fwait
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
add
insb
test
aas
repz
outsl
mov
mov
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
lcall
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
insl
and
inc
adc
inc
loopne
test
out
rolb
pop
or
jne
pop
cld
or
dec
ss
lods
movsb
xchg
mov
repnz
mov
jl
and
call
cmpsl
lret
aaa
push
std
cltd
pop
in
cmp
jmp
mov
adc
lock
jmp
hlt
dec
mov
xlat
inc
mov
aas
mov
jg
mov
sub
addr16
incl
cld
daa
jp
std
adc
cltd
or
mov
mov
ja
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
sub
je
jge
paddsw
mov
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
push
xor
es
push
or
jge
out
adc
insb
cmpsb
cmp
call
xor
decb
mov
das
push
adc
mov
and
call
mov
iret
nop
inc
xchg
mov
cmp
int
add
push
pop
aaa
std
mov
dec
dec
inc
sbb
mov
mov
aas
icebp
ret
sbb
push
jnp
int
jmp
sbb
adc
shrb
mov
stos
mov
loope
loope
mov
lahf
jp
in
inc
sti
dec
add
xlat
jmp
outsl
adc
fldenv
iret
fdivrl
xchg
lcall
lock
repz
sub
jo
jo
and
outsl
pop
out
jg
jno
ret
or
inc
arpl
decl
in
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
mov
jne
in
sbb
xchg
imul
jmp
outsl
jmp
sub
lcall
std
mov
daa
jmp
faddl
mov
inc
add
fisttps
div
pop
stc
push
dec
out
fstpt
cmp
mov
mov
enter
or
loopne
xchg
jg
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
jmp
mov
fildll
fsubrl
dec
add
leave
inc
adc
add
mov
hlt
inc
sti
push
sti
pop
inc
dec
push
mov
pop
and
mov
mov
mov
pop
iret
and
pop
xlat
pushf
das
gs
fldcw
mov
les
sub
fdivr
mov
mov
in
ficoms
insb
sti
lcall
lock
cld
mov
ja
fisttpl
sahf
dec
jp
fmuls
xor
js
mov
and
dec
out
cmpsb
sub
lret
and
lret
pop
cmp
push
push
xchg
repz
pop
ljmp
mov
cltd
pop
loope
jae
add
rorl
jge
xor
xlat
stc
mov
mov
ja
mov
pop
shld
sahf
jo
repnz
int
or
arpl
mov
out
stc
and
lcall
sbb
icebp
mov
push
push
adc
push
xor
xlat
dec
mov
mov
data16
nop
dec
push
enter
push
cmp
mov
pop
xor
and
jo
sub
movsb
sarb
loope
ljmp
fs
pop
imul
xlat
repnz
xchg
popa
rolb
inc
push
mov
dec
inc
pop
xchg
and
sbb
addl
dec
addr16
cmp
cmp
pop
dec
jb
jmp
sub
dec
jno
mov
fistl
daa
jo
mov
cmp
iret
or
stos
cltd
test
rcrl
jge
mov
sub
pop
adc
adc
scas
cmpsb
test
inc
jae
mov
ljmp
test
push
lcall
and
xor
mov
mov
lds
test
decl
jecxz
fiadds
xor
inc
pmulhw
fdivr
jge
cmp
xor
shl
or
mov
sub
jnp
inc
mov
sbb
pop
in
popa
mov
mov
test
mov
shlb
cs
jl
std
mov
mov
dec
dec
mov
xchg
dec
push
push
cmp
lret
aam
lds
fnsave
subl
cld
add
and
cmpsb
mov
ljmp
add
adcb
mov
push
incl
loope
pop
lock
int3
dec
clc
fsubr
dec
jo
clc
inc
xor
clc
adc
pop
lds
or
mov
ljmp
mov
push
in
jl
inc
cwtl
out
mov
mov
pop
loop
sub
fcmovb
lcall
outsl
push
pushl
cmp
cld
mov
lcall
subb
adc
cmc
mov
fdivp
loopne
test
or
mov
pop
out
addr16
push
xchg
ds
frstor
ljmp
add
push
mov
dec
xchg
push
pop
cld
fsubrp
popa
testl
jmp
xor
lahf
enter
loopne
adc
loopne
push
mov
sub
int
xchg
mov
push
rcl
push
insb
in
xor
or
inc
mul
lcall
inc
mov
push
popf
ret
sbb
movsl
rcr
filds
test
ja
xchg
and
out
shll
dec
incl
fs
or
std
xchg
xor
or
shll
inc
cmp
mov
incl
out
fucomi
jo
push
inc
hlt
mov
aad
cmp
imul
fcomip
fucomip
fimull
icebp
lcall
sti
ja
jmp
ds
call
mov
cmp
xchg
cmp
lods
mov
pmullw
imul
stc
sahf
lock
cmp
mov
arpl
xorl
push
mov
stos
push
outsb
in
ret
jb
cmp
incl
and
in
xor
lret
fdivrl
imul
push
sbb
test
clc
or
xor
adc
lcall
lret
in
popf
sub
mov
ret
ficoms
mov
outsb
scas
rclb
out
into
mov
push
cld
in
daa
add
push
fdecstp
stos
or
fs
sbb
push
xlat
xchg
adc
jg
mov
jo
sub
out
sbb
mov
push
mov
pushl
dec
cmp
daa
lods
test
iret
push
mov
inc
sub
daa
jae
mov
jnp
adc
call
push
sub
pop
and
ss
mov
cli
ljmp
jae
jne
dec
leave
ja
cmc
lods
mov
loopne
orb
sbb
sub
ljmp
loopne
xchg
adc
pop
mov
xchg
movsb
sti
adc
push
mov
mov
lahf
call
sarb
sub
cs
std
cmc
rolb
mov
push
std
cltd
pop
inc
je
fisubrl
cmp
sbb
cmp
negl
imul
and
jb
xlat
popa
aam
mov
cld
stos
lahf
pop
mov
mov
push
mov
mov
mov
or
mov
fldcw
cmp
ljmp
sbb
mov
mov
outsb
jno
inc
dec
mov
lods
inc
dec
repz
lahf
push
mov
or
push
mov
sahf
adc
sti
arpl
ljmp
test
mov
out
mov
mov
subb
sub
in
sub
in
adc
dec
aad
jmp
xor
push
ds
addb
mov
jnp
daa
lock
push
cmpsb
dec
loope
icebp
cli
cmc
fisubl
les
dec
jmp
jg
or
divb
xchg
movsl
push
enter
dec
lods
jno
xchg
and
jg
adc
jmp
push
ficompl
shrl
dec
insb
fwait
mov
jno
adc
mov
decl
sub
pop
jns
ds
mov
fidivrs
and
mov
pop
hlt
insb
sbb
mov
sub
xchg
pop
imul
jg
mov
inc
call
flds
in
pop
jo
xchg
inc
pop
aad
nop
fstpt
aad
bound
insl
pop
jp
cmc
xor
outsb
mov
dec
insb
int
loop
in
mov
ljmp
mov
mov
push
dec
inc
pushf
pop
enter
loopne
mov
push
sbb
jmp
in
std
jne
jmp
cmpsl
or
rorl
jbe
jl
cmpsl
sub
dec
push
cmp
pop
pop
sbb
push
es
ljmp
cld
adc
popf
mov
sbb
dec
fildll
lret
fcomip
incl
lds
xchg
jp
add
adc
jb
lcall
lcall
xor
test
call
lahf
rcrl
rol
push
es
mov
mov
pop
adc
xor
mov
jo
lret
jo
dec
mov
push
xchg
icebp
jmp
jno
mov
popf
xchg
xor
popf
mov
and
popf
cmpsb
movsl
add
xchg
cmp
pop
xor
xor
ss
push
call
lret
inc
sbb
data16
pop
cmc
pushl
adc
or
test
leave
mov
sbb
jno
mov
ljmp
mov
or
inc
jns
or
or
push
mov
mov
dec
mov
cmpsl
outsb
adc
andb
aad
lcall
outsb
xchg
sbb
jp
insl
mov
mov
or
ja
hlt
mov
inc
jmp
lea
mov
sti
inc
push
mov
push
mov
in
jns
shll
enter
shll
or
cmp
aad
adc
pop
jl
sub
dec
mov
rcrl
fildll
sub
gs
addb
sbb
add
cli
adc
push
sub
xor
or
shrb
pusha
pop
mov
scas
fldt
xor
jle
push
cs
cwtl
jmp
add
dec
sub
lods
int
lretw
rclb
xchg
mov
jecxz
xor
js
imul
lcall
int
cltd
lods
pop
mov
xchg
cmp
cs
loopne
adc
xchg
mov
incl
cld
clc
test
xchg
lret
cmpsb
mov
in
adc
push
mov
cmp
addr16
and
lret
scas
ret
test
lahf
aad
pop
decl
or
xor
jb
aaa
loop
pushf
movsl
sub
sbb
jbe
or
push
pushl
ret
xchg
xor
or
mov
lahf
sub
pop
jmp
lcall
jnp,pn
into
in
sbb
mov
sub
popl
mov
sub
xchg
inc
lcall
pop
pop
jecxz
mov
ds
cmpsl
mov
call
sbb
in
cmp
call
mov
push
mov
sub
icebp
jmp
adc
jp
xchg
movsl
sbb
dec
imul
lods
fisttpl
test
jb
mov
jmp
sbb
inc
movsb
in
fwait
pop
dec
dec
lret
push
popf
fisubrs
mov
and
fbld
stos
lods
mov
sbb
xorb
iret
lcall
outsb
ljmp
mov
jl
rclb
jae
shrb
hlt
add
dec
jnp
or
ljmp
xor
jmp
mulb
imul
jge
testl
xchg
ja
pop
ljmp
or
jecxz
pop
scas
cmp
push
out
out
cmp
cmp
mov
jle
roll
push
add
adc
or
lcall
cmpsb
pop
addr16
iret
into
and
daa
fildl
arpl
pop
sub
add
decl
jmp
dec
or
xchg
repz
or
mov
aam
add
stos
xor
mov
int
inc
cmp
cli
jp
ja
fistpll
call
mov
mov
add
jg
dec
push
jl
pop
imul
cmp
scas
fimull
jns
push
sbbb
pushl
xor
inc
cmp
bound
sbb
mov
push
jbe
lcall
adc
jbe
cmp
lea
fs
adc
cmp
sti
stos
leave
add
fcomip
dec
loopne
cmc
mov
mov
mov
ds
adc
dec
ds
inc
es
insl
loope
fdiv
addl
mov
fcmovu
fmull
sahf
ja
cmp
and
ja
movsl
xor
ljmp
jge
push
xchg
cltd
mov
jmp
ds
shl
nop
pusha
lret
test
imul
push
add
mov
mov
add
jp
enter
outsl
or
enter
mov
call
push
mov
inc
cmc
sbb
lret
mov
and
cli
in
inc
mov
call
mov
std
mov
cwtl
popf
test
xor
pusha
xlat
push
hlt
dec
or
add
call
mov
movsl
cmp
jnp
push
and
pop
cmp
mov
and
mov
xchg
inc
gs
dec
fsubs
push
test
mov
jne
jmp
pop
in
fs
cmpl
imul
push
xchg
les
rclb
mov
in
popa
divb
cmp
mov
push
and
fwait
add
inc
fildl
iret
lods
cmc
aad
inc
ss
ds
mov
aas
stc
sbb
les
lock
xchg
rorl
into
push
jge
mov
or
in
jg
mov
cwtl
clc
xchg
test
in
sti
ds
daa
insb
inc
mov
mov
add
adc
add
cmp
fisttpl
xor
push
push
leave
mov
push
loop
inc
rolb
sub
mov
inc
out
sbb
mov
xlat
and
hlt
bnd
sub
cmpl
adc
mov
incl
xchg
stc
push
lret
mov
sbb
mov
adc
jle
shrb
insb
xchg
cwtl
js
rcl
enter
pop
sbb
xchg
inc
mov
lret
decl
sbb
pop
lcall
mov
fcmovnbe
cld
lret
mov
sub
lret
loopne
std
push
test
pop
mov
loopne
in
push
jg
push
fs
fbld
jmp
push
fistpll
dec
sbb
pop
subl
subl
mov
lahf
rorb
mov
nop
xor
adc
or
icebp
pushl
std
push
jae
pop
shrb
push
xchg
out
mov
repnz
sub
mov
lcall
mov
xor
enter
push
sub
pop
enter
cwtl
es
nop
inc
scas
mov
cmpsb
std
clc
insb
inc
data16
pop
insl
mov
rorb
je
pop
out
push
mov
imul
and
out
sbb
imul
jmp
and
jp
lret
cmpsb
icebp
imulb
or
jmp
cs
outsb
aad
pushf
dec
outsb
repz
add
lcall
xchg
jmp
outsb
sub
add
adc
movsb
adc
sub
nop
insb
and
sub
sti
ret
dec
outsl
cli
push
and
sbb
mov
xor
ficompl
mov
data16
pop
cld
lcall
pop
arpl
mov
pop
push
nop/reserved
test
xchg
mov
mov
mov
mov
repnz
iret
dec
loope
daa
fildll
ljmp
lea
pop
push
or
and
lahf
pop
jmp
lcall
xchg
sbb
or
mov
aas
sar
call
inc
lods
rorb
cli
xchg
stos
jo
and
ja
push
daa
jo
dec
cmp
jg
shlb
mov
js
pop
clc
rolb
and
push
dec
pushf
sub
jbe
decl
pop
mov
decl
stos
pop
mov
add
loope
inc
push
enter
push
lods
push
repnz
cli
jns
jge
add
or
lods
cmpsb
insl
into
xor
mov
inc
dec
fs
shrb
sub
pusha
repz
scas
in
dec
es
inc
and
test
mov
jbe
adc
xchg
in
movsl
sub
mov
test
ss
jg
daa
shll
shr
or
movsl
sbb
fimull
ljmp
arpl
and
movsl
test
fsubrs
xlat
jb
sbb
sub
jmp
out
unpcklps
lock
push
sbb
lea
sbbb
in
fnsave
jmp
imul
int3
add
jle
jg
idiv
rcrb
inc
xchg
add
lcall
mov
cmc
dec
inc
std
mov
xchg
test
jmp
cld
pop
mov
loop
dec
scas
pop
jns
pop
push
push
jl
xchg
repnz
adc
ljmp
or
mov
and
jns
push
repz
push
pushf
lock
outsl
int3
repz
lea
ljmp
nop
sub
movsb
mov
pop
gs
pop
adc
imul
pop
pop
in
in
std
dec
sahf
add
and
test
mov
test
out
popa
jnp
mov
mov
mov
decl
aaa
or
ret
lret
add
mov
pop
add
mov
test
in
pop
inc
out
ja
lahf
lahf
cs
popa
or
adc
fstpt
in
adc
inc
cmc
jle
inc
aaa
sahf
mov
cltd
js
dec
and
inc
xorl
test
push
pop
lret
push
xchg
lret
fnsave
add
stc
mov
test
scas
mov
in
fwait
dec
ficomps
xchg
pop
mov
jo
adc
stc
lret
jmp
mov
fisubl
mulb
ret
sarb
mov
xlat
mov
mov
addb
cmpsl
mov
daa
push
out
adc
cli
jg
in
ret
daa
jecxz
mov
sub
fistps
mov
int
jno
adc
je
scas
mov
cmpsb
pop
jl
dec
andl
cli
sub
ja
xor
xor
decl
daa
call
insb
sub
scas
add
mov
popf
push
frstor
out
and
push
sbbb
or
push
xor
and
pop
call
lret
gs
xchg
or
incl
cld
arpl
cld
jns
je
sbb
fs
xchg
push
adc
pop
frstor
ret
shrl
outsb
test
test
sbb
gs
jmp
call
or
cmp
and
outsl
xchg
and
pop
sbb
decl
cli
cmp
sbb
lds
ljmp
inc
cmpsl
cwtl
mov
ret
out
jbe
das
xchg
aaa
pop
push
test
in
es
pusha
cmp
mov
mov
inc
stc
arpl
pop
push
hlt
cmc
imul
xchg
lods
mov
or
push
sub
pushl
fstps
in
mov
sub
arpl
call
lock
adc
mov
jnp
int3
push
addr16
dec
mov
and
cmpsl
cltd
mov
enter
mov
mov
and
cwtl
dec
aas
and
mov
mov
call
mov
or
jne
xor
push
sub
mov
dec
or
ljmp
mov
adc
and
ljmp
xor
mov
adc
andb
push
mov
fcoml
movsl
fisubrs
jl
jb
dec
lock
imull
and
add
dec
lods
gs
lahf
xchg
add
fistpl
ficompl
inc
pop
test
test
sub
outsb
lret
xchg
call
ljmp
jp
repnz
pop
mov
aaa
std
je
sbb
sub
dec
loope
dec
jns
fildll
mov
lahf
rclb
pop
aad
aam
out
insl
loope
jle
mov
cmp
nop
aam
jmp
scas
addr16
flds
lods
call
dec
add
pusha
lret
out
fdivr
incl
sarb
mov
int3
pop
push
mov
testl
push
pop
xor
mov
stos
dec
xor
push
iret
fisttps
fsts
stc
sbb
fcomip
lcall
clc
sbb
dec
lock
adc
and
lods
test
je
psubb
add
push
out
mov
sub
ljmp
das
inc
add
into
iret
push
cmpsl
jno
sbb
in
cmpsb
mov
decl
mov
test
sub
sti
add
cmp
stos
jp
lds
scas
push
pushf
xchg
cmp
ret
pop
mov
xchg
or
dec
adc
add
call
ds
mov
jle
sar
or
inc
pusha
xchg
sbbl
or
xor
cmp
jmp
std
push
jecxz
pop
fsubrs
pop
pop
pop
popa
arpl
lret
fcmovbe
mov
xchg
push
inc
sbb
clc
incl
call
push
aas
nop
pushf
aad
dec
mov
mov
decl
mov
mov
test
add
pusha
add
adc
rorb
add
cld
pop
mov
mov
jae
inc
or
jnp
jo
aam
jmp
inc
fistps
jmp
push
rcl
jnp
ja
es
mov
add
icebp
stc
lds
or
xchg
std
or
or
sarb
pop
push
int
stc
mov
sahf
or
pop
repz
insl
push
fsubs
ljmp
xchg
dec
mov
stos
gs
inc
add
jns
popa
addr16
push
xchg
or
cmp
in
scas
call
cld
out
std
clc
push
jmp
sbb
mov
sub
cmp
pushl
jg
inc
dec
pushf
pop
mov
je
jle
mov
leave
xchg
jo
push
int3
pmaxub
int3
adc
mov
cmc
jge
test
cmp
inc
xchg
and
lahf
mov
jae
add
idivl
call
ja
ffree
xchg
lret
mov
aaa
loop
mov
sbb
xor
mov
fcomip
cld
jecxz
insl
in
sub
mov
das
xchg
lods
out
add
xor
jnp
pop
imul
shrl
mov
outsl
incl
mov
leave
ljmp
xchg
lret
push
mov
cs
lock
inc
ljmp
or
xchg
sbb
mov
mov
add
lea
lcall
xchg
enter
push
adc
pop
and
out
ret
add
cs
mov
fs
mov
inc
xchg
add
pop
inc
xchg
mov
cmp
cld
mov
repz
mov
ss
mov
mov
pop
or
xor
mov
imul
js
jecxz
adc
xchg
sub
stos
decb
jne
iret
and
and
ds
bound
mov
mov
fistpl
xor
pusha
imul
push
inc
fldcw
mov
orl
gs
push
int
repnz
inc
jl
icebp
xor
sahf
lcall
xor
or
mov
xchg
or
push
sahf
adc
leave
jecxz
call
stos
jnp
ljmp
outsl
push
cmc
mov
loopne
in
sbb
enter
and
mov
rolb
or
lret
mov
lods
jl
jmp
xchg
fbld
lods
sbb
xchg
fs
inc
ret
sbb
push
cli
icebp
shl
cld
lods
lock
call
fidivl
jle
mov
mov
xchg
adc
stos
xor
decl
cmp
imul
inc
mov
clc
popf
lods
mov
mov
mov
fisubl
pushl
cwtl
jp
outsb
rol
pop
fsubrs
fs
cs
xchg
adc
add
jg
imul
adc
mov
fdivrl
mov
pop
nop
push
or
call
int3
fcoml
push
insl
sti
dec
fs
es
lods
adcb
xchg
xor
mov
and
incl
scas
adc
cld
fsubrl
mov
and
fwait
jle
jg
clc
cmpsl
mov
mov
sbb
scas
mov
incl
inc
call
hlt
es
mov
mov
fisubrs
rorb
mov
push
popf
negb
inc
pop
es
xchg
adc
or
inc
lcall
dec
lods
inc
sbb
dec
int
adc
test
psubq
jo
int
in
jnp
ret
or
scas
ljmp
int3
cwtl
notl
pop
out
xchg
sti
loopne
out
cmp
cwtl
jle
mov
jg
cmp
cmp
xchg
ljmp
dec
int3
lahf
ret
mov
lods
push
ljmp
and
and
xor
push
sub
mov
cmp
gs
pop
call
dec
jns,pt
mov
popa
and
js
jp
xor
mov
cmp
pushl
push
shlb
rol
mov
inc
add
mov
xchg
inc
inc
push
rorb
dec
loope
test
mov
std
pop
movsb
adc
das
decl
or
aam
js
js
push
push
add
sub
int
sub
mov
enter
add
jge
push
popf
rol
push
imul
enter
add
ljmp
push
in
mov
in
int
push
or
std
outsb
inc
cwtl
inc
out
int3
mov
dec
stos
rcrb
jae
nop
stos
inc
jbe
xor
sbb
pop
lds
stc
and
xchg
stos
inc
call
loopne
or
add
jl
into
fucomip
test
adc
adcl
sub
jnp
inc
jmp
sub
dec
lret
adc
dec
cmp
xchg
fcoml
push
mov
das
inc
das
mov
lret
enter
mov
call
and
test
mov
ss
aaa
ljmp
cmp
mov
adc
hlt
pushl
out
push
mov
push
insl
mov
mov
sahf
scas
insb
mov
call
imul
je
outsb
mov
fwait
cmp
leave
sub
ljmp
aaa
jmp
out
xchg
push
test
inc
xorl
fdivrp
or
cmp
rclb
push
dec
and
jge
scas
push
sbb
pop
or
pusha
add
cmp
aaa
pusha
pop
push
int3
jbe
and
xor
aas
clc
or
push
mov
jge
sub
xlat
or
sbb
scas
mov
loop
rcr
add
push
ja
xor
cmp
pop
mov
xor
loope,pn
test
popa
pushl
shl
ficoms
cwtl
cs
mov
lds
xor
aaa
cld
and
sbb
pusha
loop
xor
clc
jge
cltd
xor
test
pop
decl
int
sbb
in
lcall
xlat
xor
cld
mov
bound
ljmp
out
mov
iret
push
push
sub
lret
insb
jge
lret
test
add
loope
inc
mov
decl
inc
in
sub
loopne
decl
adc
rclb
pop
sub
popf
mov
lcall
test
sbb
sub
sbb
outsb
in
int3
push
test
lcall
add
jb
into
mov
xor
or
test
pushf
data16
loope
jmp
cli
lret
popa
nop
xor
add
dec
sarl
pop
jmp
enter
fsts
call
cmc
test
and
or
jmp
cmp
mov
lcall
pushf
sti
lods
shll
xor
xor
mov
ss
addr16
shrb
ljmp
fldcw
in
mov
add
sub
fadd
popf
dec
aaa
pop
xchg
cmp
int3
sbb
dec
jg
cmp
js
xchg
testl
mov
sbb
jl
adc
stos
loope
incl
adc
adc
inc
and
cmp
mov
lcall
jmp
add
call
lret
cmpsl
push
jl
push
outsb
and
scas
rclb
pop
outsl
idivl
cmp
push
dec
xlat
pop
pop
ret
mov
or
jmp
je
jmp
sub
pop
repz
in
dec
movsb
inc
push
cmc
mov
jb
sbb
inc
cld
lcall
cmp
fbstp
ds
jb
popa
cmpsl
inc
jae
jg
and
mov
lds
lret
push
out
pushf
dec
pxor
xchg
idivl
and
in
rcl
dec
pushf
jo
addb
loop
lret
push
clc
stos
hlt
mov
xchg
push
add
jg
mov
iret
mov
push
xor
cmp
out
cmp
lret
orb
mov
mov
adc
fisubrl
rolb
test
repz
fldcw
int
std
xchg
push
jl
jbe
mov
cmpsl
sahf
int
and
iret
jns
jns
push
ljmp
push
jl
outsb
jg
icebp
repz
xor
push
sbbb
scas
das
push
clc
loopne
pop
add
loop
add
inc
xchg
lcall
pop
lret
arpl
mov
bound
mov
push
enter
adc
stos
adc
clc
adc
dec
sbb
ljmp
mulb
lds
leave
cmp
mov
and
out
std
lcall
test
xor
sub
mov
dec
inc
xor
xor
mov
dec
sti
into
add
pop
inc
jg
inc
cld
jo
mov
loope
mov
lcall
ljmp
pop
xor
cli
fwait
inc
jmp
or
and
mov
and
mov
push
cmc
sub
jnp
cmc
fidivrs
test
push
and
rcrl
leave
xor
std
rorb
or
cmp
cmc
push
insl
and
jmp
dec
jecxz
add
scas
clc
mov
movsbl
ret
adc
cs
stos
clc
and
ds
fistps
sar
rcll
arpl
push
or
sbb
lods
fcomip
lcall
push
and
jecxz
pop
jne
jge
pop
dec
or
and
pop
std
call
scas
data16
movsl
adc
add
inc
aaa
stos
mov
test
dec
inc
push
shl
decl
mov
and
xchg
and
jecxz
push
push
mov
cmpsl
lret
ss
int3
mov
jnp
push
fbstp
and
sbb
adc
xchg
jge
xchg
push
stos
jg
sub
outsl
pop
mov
sbb
push
dec
loopne
sub
jmp
dec
add
mov
decl
pop
mov
lcall
fistpll
in
mov
sarb
jmp
mov
insl
xor
or
sub
and
lahf
or
repz
push
jnp
mov
imul
call
insb
adc
ret
mov
dec
dec
scas
mov
int
xor
mov
mov
js
lret
test
xor
imul
sub
les
iret
push
mov
mov
fildl
loopne
bound
std
lcall
leave
test
xchg
inc
and
ret
mov
dec
or
mov
pop
popa
jecxz
lcall
add
xor
pushl
adc
or
xchg
not
ljmp
lods
daa
fstps
xor
mov
fwait
mov
sbb
inc
addr16
jmp
cmpsb
push
lea
fcomps
call
jnp
lds
mov
dec
adc
xchg
jnp
pop
adc
cmc
xchg
scas
add
xchg
inc
push
call
add
mov
mov
fwait
sub
sbb
sub
adc
push
xor
cmp
cmpsl
push
clc
pushl
inc
pop
and
mov
enter
jmp
add
enter
sti
pop
mov
popl
sub
jg
mov
dec
sub
sbb
mov
mov
xchg
mov
or
add
or
ljmp
pop
sub
cmp
adc
out
add
xor
loopne
std
scas
inc
mov
stos
xchg
ljmp
jmp
stos
dec
pop
aad
sub
add
mov
push
rcr
sub
lret
imul
mov
and
cmp
inc
jnp
sub
incl
and
test
cmp
aaa
rcrb
push
movsb
xor
arpl
dec
cmp
aaa
das
push
popf
and
mov
fmuls
push
imul
or
push
sbb
neg
ljmp
repz
lcall
into
popa
aaa
add
jno
xchg
inc
sbb
cmpl
jmp
or
push
cmp
sbb
aaa
mov
sub
dec
js
sbb
xchg
push
loope
scas
adc
fildll
fsubr
ds
out
push
scas
adc
and
in
leave
cli
pushf
mov
sti
outsl
pushl
and
push
sti
jge
sbb
cmp
pop
mov
addr16
adc
fiaddl
pushl
fstpt
push
pusha
test
adcl
mov
jp
cmp
sub
push
dec
sbb
pushl
add
jg
in
ret
test
icebp
push
push
in
and
lock
fildll
and
push
pusha
sbb
dec
daa
in
or
imul
mov
icebp
call
push
xor
mov
clc
push
sbb
rcrb
jp
push
icebp
cmpsb
sbb
sub
xchg
pop
out
adc
and
lret
mov
inc
lods
pushl
mov
and
add
mov
cmpb
xor
idiv
cmp
push
jns
aam
lea
popf
js
stc
sub
inc
sub
or
out
jmp
sbb
or
push
div
push
mov
mov
inc
bound
loopne
ret
jns
out
call
adc
cmp
xchg
add
rclb
sbb
aaa
fisubs
jmp
dec
xor
sahf
insb
xor
mov
stc
push
or
inc
adc
ljmp
jmp
mov
out
xlat
xlat
ret
pop
stc
out
cmp
dec
jbe
pushl
fldcw
mov
or
sbb
ljmp
mov
adc
jmp
sub
xchg
mov
ror
clc
xor
insb
loop
rol
push
and
mov
icebp
dec
sbb
mov
ljmp
in
adc
and
inc
roll
daa
rorl
outsb
jmp
jge
inc
cmp
lcall
cmp
pop
xlat
insl
jns
adc
adc
loop
cmc
dec
lahf
insl
mov
fldenv
cmp
lods
enter
add
int3
jne
loop
fimull
jb
imul
pop
mov
or
dec
int3
xchg
sbb
mov
mov
nop
je
cmp
bound
cwtl
cmc
jle
incl
xor
pushf
sahf
pop
inc
add
insl
fwait
adc
jbe
lcall
mul
xchg
xor
xchg
mov
test
pop
in
add
insb
sahf
pop
jae
lcall
mov
pop
xchg
fwait
pop
dec
lret
hlt
mov
popa
pop
jne
pop
ret
lea
dec
sub
incl
rcll
xor
adc
adc
ds
icebp
insl
cmpsl
pushf
and
or
inc
ljmp
and
mov
pop
push
adc
mov
mov
addr16
adc
scas
push
mov
and
lcall
push
fists
add
fs
popf
icebp
repnz
xchg
insb
pop
inc
dec
mov
dec
int3
pop
scas
jle
test
sbbb
cmp
pop
sub
dec
jecxz
xchg
pop
xchg
or
dec
stos
inc
movsb
xor
das
lea
pop
push
sbb
adc
mov
mov
mov
call
sbb
ret
cmpsl
adc
scas
ja
imul
cmc
sbb
add
fldenv
mov
stos
or
and
sub
dec
mov
xor
div
dec
and
in
lcall
mov
and
imul
popa
xlat
stc
fsubrs
jb
pop
push
xlat
xor
push
push
jmp
mov
sbbl
xchg
insl
xchg
sub
test
jno
pop
mov
sbb
nop
iret
lret
icebp
incl
dec
cmpsb
xlat
int3
xlat
in
xchg
jno
sahf
popa
ja
jmp
out
inc
cltd
add
cmpsl
jo
push
sahf
mov
jmp
sbb
insl
jg
mov
cmp
in
jecxz
lret
xor
xor
inc
enter
cmp
fcos
mov
iret
mov
test
outsb
ja
test
add
ret
cmp
decl
adc
cmpsb
dec
pop
fstpt
mov
in
mov
das
sub
push
push
mov
mov
jns
sbbb
ss
dec
decb
loope
sub
out
scas
fwait
ret
es
lock
jmp
mov
sbbb
mov
adc
aam
movsb
push
pushf
mov
jno
xor
ljmp
mov
gs
and
add
jle
cmpsb
movsb
dec
fs
cmp
repnz
pushl
shll
test
rorl
xlat
jne
xchg
pop
and
push
and
fnstenv
push
jmp
pop
out
dec
mov
pop
jl
fcoml
loope
std
fwait
dec
add
add
or
mov
rcrl
cmp
in
jle
std
pop
aaa
iret
stos
cmp
sbb
or
cmpsb
mov
dec
push
clc
inc
push
cmc
pusha
arpl
cmc
imul
jae
mov
mov
sbb
mov
incl
mov
clc
rorb
dec
fwait
scas
dec
ss
inc
cmp
dec
push
lea
decl
int
ds
adc
mov
das
test
mulb
movsl
xor
xor
inc
lcall
or
in
mov
lods
inc
xchg
lods
dec
inc
jne
push
adc
pushl
mov
daa
int
push
lods
push
pop
sbb
scas
sbb
daa
inc
fidivrl
jmp
faddp
pop
popa
push
xor
mov
clc
lock
add
decl
std
scas
inc
lcall
push
dec
sbb
incl
or
in
lahf
push
jp
jb
dec
in
inc
cld
add
or
lock
adc
adc
std
adc
insb
out
shll
out
jl
enter
insb
fidivs
inc
push
xchg
sbb
movsb
push
sti
and
mov
cmp
arpl
fbstp
enter
mov
jmp
in
dec
jle
push
jmp
insb
mov
shll
and
mov
inc
and
push
jg
call
ljmp
dec
sub
or
jno
fsubrs
call
jae
and
push
outsb
xor
and
divl
test
stos
ljmp
jb
daa
addl
rcr
les
divl
call
xor
mov
xchg
cmp
sbb
sub
ljmp
shlb
std
bound
and
fcoms
test
imul
in
rorl
xchg
dec
in
xchg
fs
push
inc
addr16
jg
cmp
notl
in
or
or
popa
pop
inc
cli
dec
pop
sbb
mov
lret
mov
dec
ljmp
cli
xor
ror
cmp
cld
into
and
aas
dec
mov
lcall
imul
repz
mov
adcl
clc
ss
sub
lcall
rcll
stc
add
jae
dec
ljmp
enter
out
std
cmp
incl
sbb
cmp
pop
inc
sub
xlat
and
nop
insl
jmp
mov
sub
lcall
inc
add
and
stos
push
fnstsw
xlat
mov
nop
inc
aas
or
ljmp
fcoml
mov
mov
adc
dec
sbb
test
inc
outsl
mov
jmp
inc
fistpll
stc
or
sub
rorl
mov
pop
adc
movsb
sub
decl
sub
adc
imul
jb
cli
stos
test
scas
jg
mov
xchg
dec
push
clc
call
dec
push
cltd
int3
push
mov
fldcw
or
je
aad
insb
or
loope
sbb
xor
fisubrl
push
lcall
xor
nop
shll
sub
and
in
inc
cmpsl
outsl
clc
inc
xlat
idivl
cmp
sub
or
ficoml
jl
icebp
or
mov
cmp
stc
imul
inc
add
lea
dec
icebp
incl
xchg
xor
mov
lcall
mov
roll
sbb
mov
fcmovu
dec
aaa
scas
js
test
lds
mov
cmp
das
jno
push
push
in
mov
or
adc
push
call
fcoms
lcall
pop
cld
in
int3
inc
mov
repz
loope
jg
hlt
lcall
push
mov
lcall
outsl
xor
out
mov
out
sbb
addb
mov
adc
jo
iret
hlt
sub
xchg
jle
push
mov
fcomip
cld
jp
lods
adc
int3
in
xchg
pop
ficoml
incl
jb
pop
movsb
xchg
dec
shlb
iret
cmp
sbb
fstpt
sbb
ljmp
sub
dec
in
pop
mov
jl
inc
sbb
xchg
clc
adc
scas
pop
test
push
pushl
mov
pop
bound
jecxz
lds
mov
or
sbb
ljmp
xlat
jg
jbe
testl
mov
inc
push
pop
or
incl
mov
movmskps
add
jb
xorl
xchg
push
jb
cmc
mov
jns
fs
inc
stos
fidivrl
jns
and
jg
insb
ljmp
mov
clc
or
je
or
sti
xchg
das
test
jg
daa
push
jp
movsb
mov
xlat
fisttpl
pop
xchg
in
jecxz
repz
and
jmp
sahf
and
bswap
sub
lds
rol
loope
pop
jecxz
int
rcrl
fmul
lcall
cmp
adc
inc
xchg
add
pop
out
rol
or
dec
aas
arpl
push
test
incl
addr16
jno
shl
fistpl
ljmp
pop
jno
loope
inc
loopne
push
imul
jle
and
cld
js
insl
fisttpll
rorb
mov
daa
or
imul
incl
int3
mov
xor
das
bnd
pusha
push
fwait
inc
cmp
es
inc
add
ljmp
clc
es
dec
push
adc
pop
xchg
or
pop
xor
xchg
ret
jp
es
dec
movsl
xor
inc
push
call
xlat
sti
jmp
xchg
cmpsb
lcall
xchg
orb
in
jecxz
clc
ja
stos
and
mov
out
and
mov
ljmp
in
cmpsl
cld
cli
inc
jecxz
std
and
hlt
aad
arpl
add
sahf
jmp
fwait
test
lcall
adc
bound
mov
mov
test
sbb
push
cmp
iret
mov
sub
or
mov
stos
insl
fsubr
movsb
mov
test
pop
cmp
out
into
xlat
cmpsb
imul
test
popf
inc
xor
into
push
push
aas
sbb
gs
loop
cmp
cli
mov
mov
call
inc
sbbl
pusha
insl
or
xchg
cli
xorb
cmp
adc
fistpll
jmp
pop
jmp
int3
lahf
pop
gs
xchg
mov
push
add
repz
stc
daa
outsb
inc
or
call
lret
bound
outsl
addb
std
sbb
push
sbb
inc
test
repz
aad
ljmp
pop
jb
add
inc
sti
cmp
mov
je
jmp
std
scas
mov
iret
cmp
jp
enter
sub
lcall
jle
popf
cmpsb
popf
jo
enter
jl
xchg
into
pop
mov
lcall
mov
out
jo
test
dec
cmpsb
imul
jne
rolb
jg
adc
or
sahf
je
outsl
mov
outsb
and
push
push
lods
pop
jmp
bound
aad
fs
cmpsl
das
pop
jmp
dec
mov
pop
mov
or
jmp
les
dec
and
push
jmp
inc
fwait
dec
sub
mov
and
adc
mov
out
movsb
in
pop
add
out
ficomps
das
adc
adc
test
ljmp
movsb
dec
and
subb
pcmpeqw
xor
xor
jmp
int3
xchg
into
rorl
lahf
lods
lock
loope
mov
push
test
pushl
and
neg
xor
dec
nop
push
sti
cs
inc
cltd
sub
mov
push
es
hlt
cmp
pop
enter
cli
or
mov
add
and
adc
ds
incl
and
outsl
iret
aam
xchg
push
sbb
fisttpll
in
inc
dec
lock
jg
inc
pop
sub
or
xor
into
xor
out
outsb
push
dec
fdivr
out
clc
mov
neg
mov
fildll
into
inc
cmp
repz
repz
out
lcall
pop
subb
adc
ret
cli
sti
clc
adc
xor
mov
ljmp
sub
rcrl
dec
mov
and
gs
cmp
jne
xor
mov
jg
sub
cwtl
int
inc
mov
pop
cmp
icebp
pushl
add
jns
int
dec
and
dec
pop
enter
fs
sub
ljmp
daa
movsl
sub
jl
fwait
cwtl
jecxz
xlat
shrb
mov
adc
push
cmp
movsl
push
test
jmp
jecxz
stos
call
xchg
int3
mov
jnp
out
and
mov
or
xor
outsb
call
xchg
adc
nop
or
pop
jge
aad
pop
jl
jb
and
in
mov
adc
xlat
jg
sbb
sbbb
out
fadd
inc
cmp
fmuls
pop
cld
jg
or
xchg
outsl
or
nop
and
pop
in
icebp
jbe
pop
sub
lcall
notb
daa
add
pop
imull
xchg
and
lret
mov
xchg
adc
movsb
mov
lods
pop
add
les
jne
ljmp
mov
popa
cld
inc
add
cmp
insb
xor
xchg
dec
fdivrp
popf
aas
dec
xchg
add
in
and
mov
mov
incl
movd
jno
aaa
sub
ja
dec
pop
sub
jg
fcoms
icebp
out
les
xor
je
pop
leave
js
ficoml
je
dec
loop
push
inc
add
loope
cli
enter
repnz
and
mov
je
in
dec
cmp
dec
incl
outsl
insb
scas
rcll
nop
xchg
mov
ds
popf
int
xchg
push
icebp
mov
and
insl
mov
sub
pop
fwait
mov
ljmp
sub
sub
aas
add
fcomip
push
outsb
cmpsl
and
mov
and
sbb
mov
ljmp
add
inc
mov
insb
sbb
adc
das
fisubl
mov
push
mov
fcomip
decl
and
jmp
mov
js
mov
inc
cmp
shr
lcall
cmp
dec
lcall
xchg
scas
adc
or
loope
adc
cmp
mov
call
mov
movsb
out
scas
mov
sub
mov
jecxz
jecxz
inc
fbstp
aas
out
mov
add
lcall
rcrl
dec
cli
je
pop
lds
stos
dec
jns
add
pop
xchg
bound
sbb
sti
nop
mov
pushl
xor
les
es
sbb
pop
jmp
push
enter
inc
loop
incl
into
jl
iret
jbe
xor
std
ds
cmp
mov
pop
sub
sbb
mov
enter
insb
rol
pop
mov
xor
dec
imul
data16
push
js
das
cwtl
call
in
ljmp
sub
lea
xor
sub
cs
cs
in
xchg
mov
decl
pop
cmc
inc
inc
ja
loop
xchg
jl
addr16
imull
mov
incl
addr16
mov
mov
cmpsl
ret
inc
push
sbb
jno
pop
cmp
adc
test
lcall
lea
iret
mov
add
fwait
jge
out
je
loopne
xor
mov
sub
das
push
lods
push
xlat
iret
or
ljmp
add
mov
pop
pushf
in
dec
push
movsl
dec
cmp
movsb
pop
sub
std
jmp
out
jmp
adc
add
lret
sbb
push
push
or
decl
dec
dec
mov
mov
bound
push
ret
inc
test
push
push
icebp
mov
mov
pop
or
xchg
push
pushf
add
cwtl
decl
add
int
leave
stc
fldenv
mov
cmp
notb
jmp
stos
aad
mov
or
ret
mov
mov
ret
mov
arpl
jecxz
scas
push
jle
add
push
cmp
cs
push
test
mov
test
imul
adc
dec
jle
dec
incl
push
inc
call
lods
int3
pop
daa
adc
es
mov
lea
pop
ss
lcall
lahf
mov
and
in
add
mov
stos
leave
sub
test
es
mov
rclb
cmp
das
stos
lret
add
xlat
ljmp
aas
je
xchg
std
cmp
fdivrs
sahf
subl
xchg
dec
and
test
push
lds
jg
incl
rolb
loopne
xchg
push
and
pop
push
jl
jge
sbb
ret
data16
jmp
adc
xor
mov
imul
js
subl
outsl
and
jne
xchg
push
pop
xchg
push
paddusw
xchg
sub
jle
inc
mov
aad
cmp
jmp
shlb
xor
push
pop
or
lret
lods
stos
idivl
ljmp
inc
add
pop
push
pop
dec
rorb
push
dec
inc
addl
pop
sbb
ljmp
sbb
pop
lock
dec
xorb
xchg
dec
push
into
repnz
and
jbe
stc
call
xchg
sub
cmc
movsl
lods
or
test
cs
dec
call
jl
push
inc
mov
adc
xchg
js
cmpsl
aas
push
push
jb
pusha
call
inc
cmp
rcrl
sbb
sti
testl
fwait
es
xchg
clc
sub
das
pop
push
push
sar
incl
pop
js
push
icebp
aaa
adc
mov
js
mov
or
loope
xchg
test
mov
out
neg
aam
and
sbb
mov
add
mov
das
xchg
or
dec
test
xor
mov
add
sbb
incl
mov
mov
loop
jns
cld
imul
pop
mov
call
rorl
rcll
inc
repnz
imul
rorb
ja
loope
lods
decl
scas
or
xchg
or
dec
mov
xchg
lods
gs
repz
pop
int3
test
scas
scas
cli
jg
pop
aas
mov
mov
xchg
xor
pushf
add
push
data16
decl
mov
pop
aas
dec
shlw
jg
and
pop
add
testl
call
adc
mov
outsl
inc
mov
ljmp
out
push
cwtl
jl
push
ds
xor
push
inc
jmp
jmp
xchg
add
jmp
xchg
fdivs
xor
fwait
pushf
ss
sahf
mov
adc
lods
jmp
jne
jle
aas
xor
mov
scas
mov
cmc
div
cmp
sbb
call
lret
repnz
mov
mov
int
movups
sub
bound
repz
mov
xor
test
xor
cmpsb
adc
sub
push
pusha
test
call
ds
sub
nop
clc
pusha
in
jle
xlat
das
add
jnp
push
jp
xchg
mov
jns
popf
out
jbe
test
mov
push
adc
test
ljmp
popf
adc
test
inc
shll
mov
popa
jmp
dec
or
bound
add
filds
scas
add
mov
xchg
sbb
fwait
stos
pop
out
dec
out
stc
movsl
out
sbb
xchg
jmp
inc
andb
jbe
packsswb
jnp
pop
iret
jo
jp
test
shll
mov
mov
sbb
hlt
ja
mov
mov
dec
js
mov
pushf
scas
call
ret
mov
mov
adc
popa
xchg
push
inc
fstpl
push
jb
jae,pt
cmp
lcall
add
xchg
xchg
add
cld
inc
pop
in
decl
das
push
ljmp
or
inc
inc
in
out
and
cmc
dec
fwait
out
adc
jle
adc
lcall
mov
das
shll
fidivs
adc
push
and
jg
dec
test
jnp
aad
and
testb
cli
test
jnp
mov
mov
cwtl
xor
in
mov
sub
add
repz
xchg
mov
repz
jmp
cmp
inc
pop
mov
lcall
mov
jle
pushf
outsb
cltd
mov
decl
xchg
jg
mov
dec
cmpsb
inc
xchg
js
sub
mov
cmp
sahf
pop
nop
add
jle
mov
sub
and
jmp
push
mov
fistpl
xor
xchg
xor
push
mov
icebp
into
xchg
and
call
inc
scas
leave
aas
js
js
rorl
inc
mov
je
add
inc
dec
cmp
jmp
out
dec
test
out
cmp
push
jl
fcmovu
jb
lret
and
push
aam
push
mov
clc
incl
mov
mov
dec
hlt
push
jne
or
jmp
xchg
arpl
mov
pop
test
add
mov
scas
xchg
jl
mov
stos
push
cli
nop
cmp
rolb
in
push
sub
adc
gs
incl
test
ret
pop
or
mov
jmp
cmc
sbb
lea
into
jp
outsb
push
addr16
xor
call
push
mov
push
fldt
iret
cmp
subb
pushl
pop
push
test
push
mov
subl
arpl
add
incl
jbe
sbb
mov
push
mov
fs
push
fidivl
jecxz
dec
fistps
adcl
ret
mov
jno
pop
xlat
scas
ficoms
jmp
test
sbb
je
enter
cltd
loopne
cltd
ljmp
fdivrl
cmp
add
ss
mov
jno
out
dec
mov
movsl
inc
and
jg
in
leave
push
mov
stos
lods
lret
dec
pushf
pushl
or
scas
push
shll
mov
daa
lea
jnp
cmpsb
pushl
inc
imul
fdivp
testb
insb
rorl
lahf
inc
decl
lock
aad
lds
pop
dec
mov
jmp
fisubl
aad
ret
imul
imul
popw
int
test
mov
fcmovnu
mov
aad
jecxz
mov
fs
and
out
dec
pushf
mov
mov
dec
stos
dec
and
inc
or
into
xor
mov
nop
add
cli
lock
jle
lcall
lahf
sbb
out
jp
cltd
orl
jmp
psrlw
fisubrl
jg
popa
mov
in
pop
cld
jecxz
jl
dec
cli
xchg
sahf
movsb
ljmp
pop
mov
call
fwait
dec
mov
call
outsl
add
and
sti
mov
inc
push
xchg
test
push
imul
out
pushf
pop
decl
lret
jnp
outsb
stos
xchg
dec
mov
out
sahf
jecxz
outsl
xchg
dec
in
cmp
xchg
push
decl
adc
sub
pop
pushf
or
adc
lcall
adc
push
mov
ja,pn
xor
add
pop
decl
out
inc
pop
jg
mov
cmp
fwait
call
imul
lods
sti
inc
xchg
les
mov
pop
mov
aaa
std
pop
cltd
stos
test
push
cmpb
std
xor
mov
jl
ljmp
push
push
lret
jle
je
shlb
lock
mov
int3
jp
fld
ljmp
loop
sbb
mov
inc
fwait
add
movsl
mov
cmpsl
js
sbb
push
mov
call
or
lods
ds
iret
je
add
movsl
dec
pop
sub
decl
dec
cmpsl
xor
pop
sub
in
movsl
sub
and
mov
fisubl
xor
pop
stos
ljmp
mov
and
jbe
sub
mov
cmp
imul
pop
clc
mov
ljmp
mov
sub
hlt
cmc
leave
pushf
pop
mov
and
jmp
jp
and
mov
cmpsb
out
pop
icebp
aaa
push
icebp
negb
xchg
jl
outsl
fdivr
jg
jl
shrb
hlt
fisttpl
pop
or
dec
iret
idivw
rcl
aas
jne
jns
adc
fxtract
outsl
and
out
test
stos
push
sub
rep
adc
lcall
std
out
inc
inc
cmp
les
mov
loopne
lret
xor
xchg
adc
xchg
jne
mov
mov
push
mov
jmp
popa
stc
popa
and
xchg
push
test
mov
xchg
fcomps
cld
jmp
fcomip
adcb
adc
mov
movsb
test
jg
in
sbb
cmc
shlb
cmpsb
int
jl
jle
cmpsl
push
stos
stos
scas
adc
jmp
jle
into
sbb
pop
xchg
dec
das
cli
and
xadd
pop
shll
clc
pusha
pop
icebp
pop
loopne
fldpi
loopne
xchg
and
or
inc
loop
in
mov
jl
out
dec
ljmp
mov
pop
pop
inc
in
sahf
xchg
pop
sbb
pushl
ret
fcoms
aam
daa
inc
or
jnp
xor
data16
aaa
jg
xchg
adc
sahf
pop
outsb
repnz
pop
stc
shll
or
enter
into
call
mov
dec
mov
mov
xor
movl
imul
imul
aaa
cs
xchg
mov
hlt
subl
push
ss
out
xor
andl
int
iret
or
cmc
ja
xchg
sub
sbbb
in
test
js
push
pusha
pushf
cmp
jnp
jecxz
xchg
arpl
mov
mov
call
cwtl
mov
test
sbb
add
decl
lret
cmpsl
loope
push
inc
lea
push
jecxz
push
aaa
dec
xor
xchg
sti
lods
cmp
push
incl
mov
mov
loopne
push
xor
adc
jl
mov
mov
pop
push
in
je
mov
aas
mov
popf
pop
mov
push
sub
cli
adc
mov
ljmp
cmp
adc
or
xchg
insb
pop
fisttps
lock
std
ret
push
cmp
mov
dec
out
test
mov
mov
je
std
lcall
nop
lcall
ret
mov
push
andl
xchg
inc
pushl
xchg
imul
ret
scas
sbb
scas
dec
cmpsb
ds
push
xor
dec
sar
dec
bound
shrb
mulb
cmp
sahf
cmp
xchg
into
incl
lods
scas
ds
xor
cmpsl
jp
push
sahf
movl
pop
fs
inc
lret
sbb
frstor
or
jle
fadds
mov
jae
outsb
in
scas
movsl
roll
jecxz
xchg
decl
sbb
mov
movsb
pop
mov
and
xchg
aam
or
shll
pusha
push
lret
cmc
adc
mov
lcall
imul
dec
daa
clc
rcll
cmpsl
cmc
lret
dec
xchg
filds
jmp
mov
hlt
or
push
cmp
mov
dec
rcrl
daa
ljmp
sarb
pop
in
mov
xor
test
xchg
jmp
jg
xor
data16
loop
in
mov
mov
iret
push
add
inc
xchg
cs
pushl
jmp
xchg
pusha
lods
inc
les
pop
push
ja
jne
lods
into
imul
rol
mov
cwtl
icebp
fwait
xchg
push
data16
hlt
pop
jb
push
sbb
cwtl
mov
pop
inc
mov
pop
ja
jns
addr16
pusha
sub
fiaddl
decl
fdivrl
fcom
cmp
fprem
insb
xchg
dec
xor
leave
clc
lods
jns
int3
or
in
pusha
lock
jne
gs
imull
xchg
push
in
add
fcompl
and
sub
adc
dec
sbb
je
mov
pushw
lahf
repnz
iret
xor
mov
mov
mov
addl
pusha
mov
and
fcos
mov
xchg
xchg
cmpsl
hlt
out
out
inc
pop
mov
dec
fistpll
cli
ja
sahf
lds
push
rcl
pop
sbb
ljmp
jne
jo
sbb
mov
or
push
inc
and
cmpsb
xor
push
iret
mov
call
xchg
iret
leave
push
rorb
adc
mov
int
mul
in
mov
jmp
data16
lods
ss
jl
cmp
add
mov
lds
fcomp
add
sbb
jp
ficomps
stos
popa
xchg
decl
lea
pop
sarb
cld
imul
xor
mov
movsb
sbb
repz
decl
cmp
out
add
add
scas
mov
aad
decl
lock
push
jg
ss
enter
push
mov
pop
sti
jle
incl
rcrb
pop
mov
xchg
push
movb
fimull
rcll
mov
cli
jnp
enter
pusha
shl
insl
pop
fwait
test
je
xor
or
jl
jle
call
movsl
inc
xchg
jl
in
es
inc
mov
leave
outsl
push
dec
sahf
jp
pop
jnp
xchg
movsb
clc
jg
mov
inc
and
xor
jns
add
inc
fwait
mov
cld
incl
mov
mov
sub
add
mov
or
xchg
ja
aas
lcall
push
call
cmp
push
jne
scas
mov
inc
imul
test
call
add
adc
lret
daa
jno
test
jbe
xor
dec
lcall
jmp
lahf
imul
fldenv
aaa
stos
test
fxch
ret
lahf
gs
lret
cwtl
repz
incl
repnz
pop
test
add
mov
js
movsl
mov
adc
int3
js
jae
sub
loope
idiv
inc
fisttpl
aaa
sarl
xchg
push
aad
jmp
addl
cmp
das
cltd
sub
jg
inc
mov
inc
mov
jnp
mov
adc
mov
popa
insl
aas
sub
adc
and
dec
pop
inc
cld
inc
and
pushl
dec
adc
or
scas
xchg
mov
imul
dec
test
cmp
dec
sbb
fcomps
inc
mov
push
stc
push
repnz
inc
inc
pop
xchg
mov
and
repnz
aas
inc
xlat
jmp
out
stos
mov
hlt
je
push
cmp
push
les
sub
sbb
push
mov
lcall
sbb
pop
dec
xorb
pop
fisttpll
iret
out
sbb
pop
or
xchg
fidivs
fdivl
lret
in
jo
icebp
and
dec
mov
mov
call
mov
pop
jb
es
push
sub
negb
jb
add
outsl
jo
push
in
cmp
lods
fiaddl
mov
cmp
jne
or
mov
aam
mov
aas
or
jo
outsl
dec
pop
mov
pop
aam
mov
sub
ljmp
cwtl
das
fists
rclb
and
ss
cmpsb
jb
ljmp
ljmp
mov
rol
xchg
repz
es
aam
adc
pop
sub
xchg
loope
lds
push
stc
jbe
imul
pop
idiv
sub
adc
lds
jg
sbb
sub
mov
outsb
fdivr
lcall
or
push
and
call
insl
cmp
iret
popf
pusha
or
jg
mov
outsb
sub
mov
jle
popa
dec
scas
sub
in
sub
or
incl
or
xor
mov
xor
sbb
cmp
dec
lcall
mov
pop
std
movsb
movsl
mov
jo
adc
adc
xor
cmp
inc
xor
or
jle
movsl
jge
adc
xchg
addr16
push
jp
push
lret
cmp
out
xor
movsb
xchg
mov
rclb
out
lahf
ljmp
outsb
sti
xor
movsb
mov
pop
sbb
out
cmp
incb
nop
and
lods
and
cmc
lcall
shlb
sbbl
dec
rol
pop
adc
cltd
je
cmp
pop
sahf
sbb
ds
lea
adc
dec
bound
mov
cwtl
fs
push
loop
jmp
iret
jp
and
insb
sub
pop
idivl
add
movb
mov
decl
arpl
sub
mov
popf
and
loopne
decl
add
in
jbe
push
out
mov
ret
mov
or
repz
repz
ljmp
lahf
add
and
add
mov
cmp
pop
scas
lods
in
mul
dec
outsb
cmpsb
call
mov
gs
pop
addr16
sub
mov
scas
sbb
sbb
dec
cmp
into
mov
sbb
jle
add
shlb
sbb
mov
push
prefetchnta
jp
cmpsl
and
add
adc
sbb
test
insb
test
sub
dec
js
dec
mov
std
ljmp
xchg
inc
insb
stos
xor
jecxz
enter
xchg
push
sub
lret
idivl
ret
xlat
pop
sti
mov
pop
mov
ss
test
mov
inc
cmp
pop
add
mov
aaa
std
jg
mov
fstps
mov
jecxz
rcrl
cmpsl
push
cltd
in
add
add
pop
divb
lret
cmp
push
int3
xor
cmc
ja
mov
and
jae
in
movsb
and
mov
cmp
shl
or
inc
adc
popa
clc
jb
push
jp
hlt
pushl
sti
inc
mov
dec
xchg
mov
stos
add
sbb
jp
jg
cmp
aaa
mov
mov
ljmp
arpl
hlt
insb
lcall
xchg
dec
push
test
push
pusha
inc
movsb
pop
jp
dec
xor
mov
ficompl
pop
and
adcl
xchg
rorl
imul
mov
inc
sti
out
adc
outsb
xchg
je
mov
push
int
in
mov
jp
dec
push
mov
mov
test
mov
jb
aaa
mov
sbb
pushl
cwtl
inc
insb
adc
xchg
shr
rcll
mov
adc
incl
jbe
sbb
out
daa
imul
arpl
xchg
pop
mov
gs
add
out
rorl
pushl
mov
in
pusha
loopne
rorl
leave
aam
and
in
adc
push
jecxz
daa
jbe
pushf
xor
mov
jg
out
lods
cmp
push
mov
out
mov
pop
add
mov
add
fisubrs
fisttpll
pushl
push
add
mov
shlb
jmp
sti
jns
mov
ret
in
dec
decl
jb
insb
fstpt
push
pop
in
sub
jecxz
call
fs
ret
fidivrs
std
jmp
jle
inc
ljmp
push
or
and
and
push
ljmp
lds
pop
mov
sub
cld
sub
pop
and
lcall
adc
dec
mov
inc
push
cmp
jbe
repnz
sbb
scas
pop
cmp
rcll
mov
pop
pop
jb
aad
iret
hlt
pop
add
jns
in
ds
push
call
xor
pop
pop
mov
jb
cmpsl
push
daa
jnp
sbbb
sub
test
lcall
dec
std
xor
shrb
outsb
aas
pop
xchg
adc
inc
inc
aad
call
lret
push
aad
jbe
sbb
ret
xchg
clc
jl
mov
sbb
pushl
adc
shrd
xchg
movsb
lods
xor
gs
add
lcall
rorb
das
add
fldenv
test
cmpsb
icebp
inc
jp
fcmovnu
cltd
sbb
out
cli
push
cs
mov
fisttpl
pop
sub
xor
pushf
insb
sub
decl
mov
pop
loop
out
scas
or
mov
andb
loopne
and
aaa
push
cmp
jge
sarb
insl
stc
inc
pop
sarl
scas
movsl
cmp
mov
gs
sbb
sarb
jmp
in
or
xchg
mov
jb
mov
mov
std
out
loope
dec
and
push
mov
push
outsl
movsb
push
adc
inc
or
cmp
ret
idiv
mov
sarb
fcom
imul
sub
ljmp
mov
rcr
popa
lret
cmpsb
dec
lea
mov
loopne
sbb
push
push
popa
mov
cmpsb
sbb
mov
push
das
mov
mov
ja
pop
hlt
xor
xchg
call
cmp
jno
xchg
dec
add
nop
xchg
aad
jl
xor
xchg
mov
lcall
inc
fdivrp
adc
lahf
cmc
jecxz
push
push
mov
xchg
iret
data16
or
sub
mov
out
jg
ljmp
inc
fisubrl
jnp
jp
popa
fistl
js
sbb
mov
mov
mov
pop
pop
mov
shr
out
adc
xor
int3
mov
add
fsubp
inc
scas
out
test
and
mov
xor
pop
repnz
dec
out
sub
jbe
js
xchg
nop
popa
lods
jp
aas
cli
xchg
jl
adc
inc
jno
ljmp
xchg
pop
movsl
cmp
pusha
add
xchg
xchg
mov
adc
lcall
add
stos
pusha
aaa
stos
cmpsb
mov
ja
popa
dec
aaa
pusha
ret
lcall
xchg
fbld
add
sub
orl
xchg
xor
cmp
pop
idiv
jmp
into
test
enter
xchg
popl
stos
fiadds
adc
mov
iret
mov
clc
cmp
jmp
pop
and
shlb
fiadds
pop
pushw
mov
repnz
adc
incl
adc
scas
shlb
sub
sub
sbb
outsb
cld
cwtl
xor
lret
push
call
daa
mov
mov
adc
push
addb
gs
sub
dec
pop
pop
dec
mov
lret
aam
cmp
push
jnp
mov
cli
push
scas
scas
lcall
fcmovbe
loopne
and
jecxz
rorl
and
cmp
inc
andl
sti
or
js
sbb
in
sarl
mov
mov
loope
add
push
sub
push
mov
mov
xchg
test
or
pavgw
insb
push
pop
adcl
pushl
cmc
mov
jl
jp
add
cld
dec
aas
in
repz
rorl
jg
incl
clc
adc
cmc
ja
cs
dec
mov
add
incl
cld
loope
dec
inc
push
loope
loope
rcrb
add
ljmp
outsl
sub
sti
ljmp
pushf
push
jnp
fmulp
rorw
mov
pop
cmp
pushl
mov
out
cwtl
rorb
jmp
cmp
std
mov
pop
fidivl
mov
std
dec
push
or
pop
cmp
push
xchg
ljmp
scas
mov
pushf
scas
mov
lock
nop
aaa
dec
push
pcmpeqd
push
leave
xchg
cmp
faddl
sar
ljmp
and
jmp
jecxz
inc
add
icebp
int
push
mov
aas
xchg
jae
insl
push
inc
and
jbe
and
cld
jp
shlb
das
xchg
movsl
push
cs
nop
std
ja
mov
or
mov
xor
jp
ret
inc
jmp
adc
decl
cmp
push
popf
ja
icebp
ret
fisubl
shll
flds
jo
ret
mov
jmp
sbb
pop
rorl
shr
pop
push
int
lods
shlb
add
sub
es
dec
push
and
lds
inc
outsb
adc
jne
out
mov
mov
notb
jmp
add
sbb
mov
ret
push
lds
int3
js
lahf
rcl
lahf
sbb
pop
sar
call
fistps
xor
or
aas
ss
inc
scas
pop
dec
cmc
mov
mov
add
test
mov
jecxz
mov
icebp
in
jmp
bnd
in
mov
jb
mov
dec
hlt
or
mov
out
fs
iret
nop
jle
push
ja
test
decl
fcomp
and
push
iret
xchg
mov
lds
xlat
fdivr
lahf
jl
pxor
ljmp
inc
cltd
scas
and
sahf
xchg
inc
out
and
push
xchg
adc
and
add
dec
insl
and
cs
imul
sahf
sub
nop
mov
cmc
testb
mov
mov
cli
jmp
mov
inc
inc
in
cmc
sub
call
mov
sar
outsb
loop
xchg
inc
andb
nop
inc
enter
cmp
shl
out
cli
pushl
mov
cmp
mov
pusha
lods
pop
add
xor
inc
adc
je
push
mov
mov
iret
adc
pop
xchg
arpl
imul
rcll
add
decb
nop
fcmovb
dec
push
mov
cmp
lret
dec
pop
ja
xchg
pushl
scas
cmc
mov
jle
cmp
fsubrs
rorl
icebp
mov
outsb
or
test
lcall
loop
mov
repnz
sub
cmpsb
std
out
clc
mov
mov
fldenv
mov
loope
push
xor
cs
clc
pushl
push
xchg
mov
das
hlt
outsl
pop
outsl
jae
sbb
hlt
notb
outsl
nop
push
bound
imul
popf
mov
inc
pop
dec
imul
xchg
jb
fdivrl
shlb
jo
sub
iret
dec
mov
pop
stos
dec
gs
ds
dec
setl
cmpsb
mov
add
push
pop
ret
push
sub
xor
hlt
es
mov
insl
call
pop
jmp
sbb
cld
subl
cs
ficomps
xchg
pop
push
xchg
inc
mov
lret
jmp
int3
add
and
jecxz
pop
les
ds
xchg
dec
mov
inc
out
push
or
lret
jae,pt
rcrl
xchg
jg
mov
aam
push
adc
inc
incl
and
sbb
add
cmp
and
jge
inc
fwait
sbb
push
loope
popf
ret
and
fimull
rcr
fsubl
stos
mov
incl
add
test
push
das
mov
mov
xchg
pop
mov
dec
sbb
hlt
popa
out
loop
cli
idivb
fwait
pop
cld
jae
insb
pop
cs
outsb
and
pop
sbb
xchg
cmp
jnp
mov
in
inc
jno
sbb
or
movsl
and
cmp
mov
gs
fmuls
lods
out
test
decl
dec
sti
jle
es
sbb
sub
les
jo
xchg
es
fucom
pushl
int3
mov
repnz
mov
std
mov
jecxz
popf
jo
repz
mov
xor
mov
sti
xor
dec
ss
add
adc
push
adc
sub
mov
cmp
sub
adc
mov
mov
shl
push
int
xchg
add
push
fwait
loope
jae
lods
iret
add
cmp
mov
ret
jo
int
cmc
pushl
iret
pusha
mov
maskmovq
idivl
decl
jmp
pop
in
mov
sub
and
add
ja
test
mov
insb
ljmp
xchg
mov
mov
aaa
faddl
call
dec
popa
inc
sqrtps
jb
push
push
sub
lret
sahf
xor
incl
fldenv
sbb
inc
pop
fisttps
into
pop
lock
scas
mov
inc
loope
mov
lcall
test
inc
repnz
or
xor
cmp
stos
mov
decl
lock
into
cmpsl
and
sahf
mov
stos
out
inc
test
les
inc
lcall
pop
fidivs
push
add
fistps
ror
add
mov
jbe
leave
negl
jae
cmp
inc
incl
jl
nop
jb
adc
gs
lds
clc
mov
das
arpl
stos
or
adc
lcall
inc
js
sbb
das
je
add
pop
in
icebp
das
jae
add
shrb
jno
out
clc
add
cmp
rolb
rcrl
xchg
stos
xor
mov
dec
add
push
sahf
inc
cmpsb
nop
lcall
inc
xor
das
mov
push
cmp
cmp
fmul
popf
mov
test
decl
jle
dec
cwtl
cs
sbb
mov
jbe
xchg
jmp
cmp
mov
repnz
mov
push
push
lret
push
push
popa
inc
cmp
adc
shlb
sbb
jb
push
sub
pop
push
movsb
ljmp
mov
js
cli
out
pop
inc
jnp
scas
cmp
sbb
add
jo
pop
bound
call
sbb
pop
push
repz
outsl
push
fidivrs
mov
neg
imul
or
mov
lahf
dec
pop
aas
movsl
pop
or
pushl
adc
insb
jbe
jbe
shrl
enter
call
lea
sub
in
cmp
aas
lcall
int3
jns
or
es
jecxz
mov
xchg
aad
int3
cld
push
dec
movsl
imul
xor
xor
sbb
sub
adc
js
roll
mov
push
mov
scas
out
hlt
push
pop
mov
repz
int3
into
push
xor
mov
push
aad
dec
aam
ret
or
stos
xchg
sbb
or
decl
loope
ja
jne
cs
pop
xchg
lods
mov
mov
mov
or
cmp
xor
orl
sbb
mov
or
adc
xlat
aas
push
jae
lahf
aad
xor
lods
push
push
xchg
andl
pop
popa
pusha
incb
test
cmp
fisttpl
pop
call
inc
pop
adc
adc
adc
xor
lock
dec
cmp
into
or
ljmp
mov
fisubrs
lret
outsb
scas
xor
push
pusha
inc
std
mov
rcl
out
mov
loopne
call
ja
cltd
pop
test
jns
mov
fadd
incl
loopne
hlt
lcall
jns,pt
shlb
xor
xchg
insb
out
icebp
loope
jb
inc
std
mov
cmc
insl
and
cmpsl
pop
sbb
mov
xchg
test
pop
lcall
mov
enter
cs
or
push
jno
sar
add
loope
push
inc
fistps
js
add
mov
outsl
dec
or
cs
and
dec
push
xchg
lock
push
push
mov
addr16
hlt
add
stos
jno
lret
addb
inc
lcall
bound
imul
fsubp
ja
es
jo
imul
sbb
imul
jp
ds
add
adc
andl
push
adc
shrb
scas
add
iret
add
imul
and
pop
add
add
sbb
mov
dec
fs
and
sub
pop
and
fistpl
dec
jo
daa
sbb
jge
inc
and
gs
lods
loopne
nop
test
insb
push
cltd
inc
or
outsb
popa
jo
push
loope
jge
dec
sbb
pop
sub
aaa
ret
adc
dec
jne
js
or
sbb
add
or
push
popa
adc
insl
add
cmp
add
aas
push
incb
jb
sbb
jb
or
add
push
es
ljmp
dec
add
xorb
in
xchg
adc
xchg
jo
mov
das
add
inc
jl
mov
sbbl
imul
mov
pop
add
fxch
adc
inc
inc
sub
mov
push
outsb
lea
inc
imul
insl
jecxz
or
xchg
or
inc
or
sub
push
fisubs
rorb
inc
mov
mov
mov
insb
jne
mulb
js
addl
xchg
dec
push
xor
pop
adc
imul
loop
inc
sbb
jo
inc
push
fildl
mov
test
push
pop
push
pop
push
mov
sarl
ja
and
subl
mulb
pop
jb
xor
jle
subl
jns
mov
push
cmpl
adc
sbb
push
push
push
hlt
fs
add
jecxz
std
lods
loope
add
cmp
push
xor
adc
popa
pop
inc
insb
rcll
packsswb
push
pop
test
stos
inc
dec
sbb
sbb
and
adc
jo
popa
leave
mov
jle
arpl
mov
sub
sbb
and
mov
adc
dec
or
js
push
push
sub
cs
pop
or
outsl
inc
jne
imul
shlb
lret
mov
mov
imul
xchg
popa
and
jnp
shll
adc
js
mov
inc
or
pop
dec
inc
dec
cmp
jnp
or
inc
mov
pop
mov
push
cmp
lahf
xor
repz
stos
push
in
jecxz
lods
xor
js
pop
jl
ja
mov
jo
inc
stos
pop
push
pusha
inc
inc
dec
cmp
jo
xlat
xchg
and
and
inc
popa
or
fisubs
jo
jp
sbb
loope
push
jg
enter
sbb
addl
sbb
rcl
xchg
sbb
outsb
adc
jae
in
loop
jns
int
push
add
or
gs
and
mov
pop
stos
outsl
push
imul
outsl
jns
inc
je
mov
add
push
inc
inc
out
mov
xlat
push
enter
inc
sbb
pop
dec
ret
into
mov
mov
and
insl
push
or
sbb
push
scas
in
ret
loope
stc
mov
add
xor
add
jns
xor
pop
in
stos
loope
xor
xor
jo
shll
adc
jbe
add
loope
pop
aaa
cmp
jne
and
inc
dec
movsl
rclb
and
xlat
loope
sahf
pushf
push
jne
inc
fmuls
mov
or
fbld
jecxz
inc
xor
jae
xor
mov
pop
popa
add
dec
or
stos
test
xor
outsl
rol
adc
mov
sub
adc
lods
add
mov
pop
inc
sbb
pop
outsb
push
outsl
add
andl
pop
and
movsb
add
sbb
mov
xchg
sub
rolb
out
mov
cmp
dec
gs
jne
dec
ja
fildll
fwait
sbb
arpl
lods
ret
mov
dec
add
inc
and
jg
push
fadd
mov
push
jmp
mov
out
scas
xchg
add
shl
in
mov
jge
js
sub
nop
test
push
outsb
adc
or
mov
push
inc
inc
popa
dec
push
fiadds
xchg
pop
dec
cli
out
jne
mov
push
je
and
push
outsl
xor
jb
and
popa
and
jl
cmp
lods
jo
inc
inc
mov
pop
jae
push
arpl
mov
pop
inc
imul
lahf
mov
push
sahf
mov
icebp
mov
mov
inc
insb
testl
cmovnp
in
adc
inc
call
cli
xor
pop
and
jae
xor
adc
nop
iret
mov
jne
jns
push
vmovshdup
sahf
push
and
xor
sbb
wrmsr
or
jns
les
add
inc
xchg
movsl
inc
nop
inc
hlt
push
movsb
push
imul
dec
push
push
pop
xor
adc
jnp
adc
add
pop
xchg
outsb
inc
push
push
adc
and
adc
inc
jnp
cmp
mov
insl
dec
outsb
dec
adc
jnp
ss
ss
jnp
sar
pop
add
add
mov
imul
dec
shll
or
push
cmpsb
popf
cmpsb
xor
inc
push
xor
dec
jnp
add
adc
in
nop
lock
rcrl
inc
jb
and
fmull
pusha
out
dec
and
adc
outsl
bound
adc
popa
dec
movsb
bound
add
adc
out
inc
jb
add
jb
inc
jae
inc
leave
and
daa
mov
imul
push
fcmovnbe
inc
jo
sbb
arpl
and
push
jns
rclb
shlb
icebp
and
or
sbb
pop
jbe
imul
roll
push
cmpsl
nop
mov
shrb
in
cmpsl
jb
mov
push
adc
and
push
aad
mov
fstpl
or
mov
test
fucomip
add
cmovno
fnstenv
xor
dec
or
mov
mov
out
jb
dec
push
mov
cltd
inc
cmp
or
pop
sbb
outsl
push
ss
jl
pop
inc
sub
pusha
mov
xlat
xor
dec
lock
popa
mov
jae
cmp
and
enter
adc
cs
push
dec
sub
inc
cwtl
dec
push
adc
sbb
add
cmp
push
outsb
push
push
fsubl
sbb
mov
lret
shll
test
mov
imul
dec
and
and
lock
insl
jecxz
test
ret
add
cmp
xor
pop
or
and
push
fcoml
and
addb
popa
or
fcomi
ficomps
jb
out
push
test
movsl
outsb
out
push
xor
or
mov
jno
sub
jecxz
add
das
sbb
roll
cmp
and
cmp
cmpsl
mov
addr16
int3
add
pop
pop
mov
or
iret
jns
imul
cmpsl
sub
pop
cltd
nop
inc
push
loop
mov
cmp
lea
push
dec
push
sub
lds
or
xor
lahf
cmp
add
sub
mov
aaa
js
add
cmovno
mov
jne
popa
or
push
push
inc
out
insb
add
sub
jmp
xor
pop
xchg
dec
push
ja
imul
and
pop
pop
out
int3
rclb
add
add
push
movsb
rcll
mov
jo
add
jmp
jg
dec
mov
pop
sbb
sbb
les
jp
add
test
dec
les
fwait
add
fmuls
add
lahf
or
dec
add
stc
xor
lcall
cmpsb
cmp
push
cmp
sahf
roll
dec
sub
pop
adcb
or
inc
mov
fdiv
pusha
push
add
mov
lods
cmp
inc
daa
loopne
test
cs
es
loopne
lret
add
xlat
add
and
outsb
push
cvtpi2ps
jb
popa
adc
sbb
imul
jge
mov
out
inc
cs
adc
cs
cmp
mov
sahf
jae
arpl
xlat
pusha
dec
mov
push
lahf
es
xchg
and
ret
add
orb
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
