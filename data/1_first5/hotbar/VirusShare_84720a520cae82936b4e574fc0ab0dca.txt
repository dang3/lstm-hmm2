divb
in
mov
mov
js
inc
add
add
pop
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
xor
stc
out
aas
mov
test
je
cmp
add
and
jbe
decl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rol
add
jp,pt
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
pop
adc
inc
cld
add
jmp
test
jne
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
repz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
push
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
lods
sbb
andl
mov
dec
lock
adc
push
adcb
push
jge
pusha
outsl
adc
xchg
ja
cmp
sbb
sub
dec
xor
push
mov
mov
mov
or
or
pop
cmpsl
push
cmp
mov
mov
aaa
ret
data16
call
jnp
add
push
outsb
loopne
data16
sbb
inc
mov
lea
mov
adc
dec
jle
mov
sbb
mov
fadds
int3
push
iret
jbe
ret
ja
mov
sbb
xchg
adc
xchg
rcll
xchg
mov
shll
pop
lcall
xchg
and
add
sub
pop
xlat
dec
pusha
mov
test
or
sbb
push
loope
int3
fisttpl
sahf
add
fwait
jnp
mov
aas
fadd
jae
ljmp
push
jno
pop
jmp
mov
or
push
push
sbb
outsb
or
sub
add
xlat
mov
cmp
push
mov
push
jne
jp
aaa
ja
inc
pop
bound
das
pop
ficoml
push
mov
cmp
add
or
sbb
push
clc
jge
insl
cmp
lcall
mov
xor
mov
pop
ret
push
inc
lock
jae
scas
mov
int
inc
sub
popl
mov
inc
clc
sub
enter
push
pop
adc
mov
ss
push
sbb
orb
jl
jne
pop
adc
out
loopne
inc
test
adc
or
inc
clc
jg
mov
adc
adc
ret
mov
rcrb
adc
pop
outsl
pop
xchg
sbb
pushf
sbb
mov
sub
push
mov
sar
jg
std
jg
lea
push
cmp
ja
adc
sbb
add
push
outsl
xchg
push
mov
jmp
pop
scas
and
and
push
push
addb
add
add
pop
leave
ret
lret
call
icebp
adc
cmc
cmp
jle
mov
cmpl
or
push
fsubrp
sub
icebp
cmp
jge
dec
cmp
add
sti
adc
jmp
cltd
xchg
add
push
ljmp
ret
enter
mov
push
hlt
cmp
jl
cmp
jne
mov
cli
or
mov
push
jbe
mov
ja
mov
shll
mov
mov
or
incl
push
add
push
push
lea
mov
mov
addl
lock
xor
mov
pop
cld
aam
push
cmpsl
stc
mov
fdivrs
cmpsl
mov
xlat
ja
xor
fsubrs
cmp
pop
leave
roll
pusha
fcomps
ffreep
or
test
jle
cmp
mov
inc
shl
cmp
adc
icebp
sbb
mov
push
mov
dec
loope
movl
mov
repz
push
sarl
lea
inc
push
push
test
pop
sub
nop
or
add
lcall
dec
mov
or
adcb
out
ja
or
pop
and
insl
mov
sub
add
xchg
test
cmp
cld
mov
shlb
jb
orl
or
push
adc
cmpb
orl
pop
xor
aad
mov
push
push
int3
movb
pop
mov
fistl
add
push
cld
iret
stos
or
imul
pop
jecxz
incb
jnp
sub
call
add
jle
add
cmp
xchg
rorl
stos
lock
add
xor
jle
push
jg
mov
into
pop
adc
pop
cmp
je
or
push
testl
push
cmp
lock
jmp
cld
ret
dec
ret
call
push
bound
sbb
or
testb
addr16
test
out
in
das
jns
cmp
notb
clc
add
lock
mov
lods
sbb
pop
lock
sub
rep
mov
jns
mov
es
aam
cmpsb
jg
mov
add
push
or
pop
or
and
in
mov
bound
xchg
push
push
loop
ljmp
add
jb
pop
rclb
push
aam
sub
pop
xchg
mov
push
lea
dec
cmp
push
orb
je
cmp
aaa
cmp
mov
aam
add
and
mov
jmp
jno
stos
adc
or
and
mov
fisttps
pop
je
and
and
inc
sub
dec
movl
mov
fdivl
and
mov
in
cmp
or
or
cmp
jne
add
xor
fwait
jecxz
lea
cmp
jne
push
push
push
push
outsl
aas
mov
pusha
cmc
int
mov
or
ret
dec
inc
push
sub
pop
pop
sbb
rclb
xchg
cmpsl
paddb
dec
xor
push
loopne
sub
sub
and
ja
sub
pop
mov
push
orb
mov
push
leave
xchg
push
push
pop
mov
xlat
adc
push
cmp
pop
call
stos
pop
lret
jne
xor
or
add
stc
push
or
mov
jo
xchg
add
out
push
and
cmp
ret
mov
adc
mov
and
pop
and
pop
push
stc
jmp
push
add
mov
rcrl
or
push
decb
push
sbb
lods
imul
inc
sbb
push
lds
ficoml
les
mov
sbb
movb
int3
hlt
fadds
jle
std
cmpl
jne
or
jne
mov
jmp
jp
imul
lea
scas
mov
daa
push
sbb
add
pop
es
add
pop
fdivr
xor
or
lahf
out
cmp
pop
jp
push
pop
jmp
shr
mov
in
outsl
sub
je
dec
je
add
dec
jmp
mov
mov
add
sub
lock
addl
lret
mov
mov
mov
cmp
sti
lea
mov
hlt
or
pop
fsts
stc
sti
es
sti
pushl
call
mov
mov
inc
jae
sub
js
push
mov
or
mov
xchg
cmp
jne
cmp
sbb
repnz
sub
in
mov
jno
mov
mull
push
mov
dec
js
pop
std
add
dec
add
inc
add
dec
in
add
ds
ret
je
incl
aaa
enter
je
jg
mov
cmp
jae
aaa
xchg
nop
mov
cmp
je
push
pop
lock
mov
push
adc
pop
adc
cmc
mov
cld
pop
push
xor
pop
mov
dec
leave
ret
push
push
insl
roll
pop
mov
mov
cmp
push
adc
ds
mov
and
in
sbb
adc
int3
rorl
xor
mov
xor
clc
in
in
lock
cmp
mov
or
push
imul
jbe
jo
mov
adc
sbb
sbb
mov
je
or
daa
inc
sub
and
into
cmp
lock
data16
aas
js
jle
sbb
stc
push
jmp
incl
incl
cmp
sbb
inc
inc
call
cmp
mov
in
mov
push
xor
cmpb
dec
clc
jne
ja
push
loop
hlt
sub
pusha
lahf
cmp
clc
mov
jo
fadds
jge
cmpsl
test
sarb
add
je
divb
push
call
xchg
or
sub
imul
add
scas
xchg
in
mov
mov
xchg
and
jge
jb
outsl
movl
xchg
rorl
dec
aaa
jp
inc
hlt
sbb
lock
jg
mov
je
mov
xor
mov
test
jne,pn
inc
inc
mov
mov
ret
je
rcl
pop
enter
stos
into
test
fadd
mov
ss
pop
rorb
xchg
iret
jle
mov
and
push
or
call
cmp
jmp
mov
and
movsbl
lods
push
cmp
push
jg
fdiv
push
mov
enter
sahf
sub
mov
jnp
pop
cld
je
orl
int
and
push
pop
mov
inc
cmpsl
push
jne
addr16
jbe
fisubl
sub
test
sbb
xor
das
je
jo
lock
mov
push
out
and
sbb
dec
add
pusha
scas
xchg
push
cmpb
fldt
and
push
dec
sbb
pop
or
adcb
inc
mov
movsl
movsw
fimull
xchg
inc
or
fiadds
add
or
xor
stos
mov
sub
mov
xor
xchg
inc
fsub
push
adc
pop
jne
imul
jmp
scas
push
test
pusha
es
inc
je
mov
jae
test
and
adc
movsl
push
inc
adc
jne
scas
out
testb
sub
sbb
paddb
push
add
xchg
cs
shlb
sub
inc
add
cmp
and
loopne
imul
mov
adc
fisubrl
and
lock
push
jmp
lret
adcb
add
hlt
adc
xchg
add
out
loop
adc
int3
je
mov
pop
or
dec
add
loopne
dec
jne
jns
sub
sbb
xor
call
sbb
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
cmpl
sbb
pop
sahf
movl
adc
insl
push
inc
shlb
pop
aam
cs
repnz
fmuls
fdivl
fsubr
inc
and
add
lea
dec
cmp
mov
mov
mov
inc
call
cld
mov
aas
push
xor
popf
cmc
faddp
sbb
nop
rcrl
addr16
pop
push
lods
loopne
adc
fistl
push
mov
fs
test
scas
je
call
inc
idivb
ret
test
das
or
incb
jl
jmp
lock
test
pop
mov
cmpsb
add
frstor
sbb
add
xor
cmp
clc
shrb
add
aas
mov
mov
adc
testb
pop
push
push
loope
stos
cmpsl
push
mov
jle
movl
sbb
hlt
stos
jle
dec
xor
mov
data16
jl
pushl
push
mov
sbbl
repz
cwtl
jns
ret
push
pop
gs
or
sbb
fadds
mov
mov
jg
je
ficoms
enter
xchg
cmp
mov
imul
in
push
mov
mov
sbb
aas
cmp
orl
xor
adc
aaa
rorb
jmp
push
divb
cmp
loopne
pop
sbb
lahf
push
loope
sub
xchg
loopne
adc
cmpsb
bound
lds
rol
popf
dec
or
loopne
dec
sbb
lret
jo
sbb
push
sbb
lret
shl
mov
mov
add
iret
add
aas
js
sub
icebp
cmp
jne
jmp
pop
cld
andl
lea
pop
mov
and
or
push
inc
xor
into
idiv
jg
inc
pop
ret
cmp
jb
cmp
ja
movzbl
sub
sbb
imul
ss
outsl
notl
mov
call
je
add
push
sbb
xor
mov
loopne
jbe
jbe
push
pop
push
inc
adc
push
imul
iret
fsubr
mov
mov
test
je
pop
clc
imul
cmpl
in
xor
mov
cmp
je
aaa
loope
outsl
or
mov
cmp
addr16
je
jb
mov
fwait
lock
sbbb
or
or
mov
dec
xor
sti
mov
lock
mov
xorb
cmp
and
cld
inc
rclb
shlb
lea
jne
dec
fcomip
inc
cmp
add
out
add
and
xor
xor
xor
inc
pop
dec
cld
addb
and
pop
lcall
clc
mov
es
repnz
mov
mov
ss
dec
hlt
jb
into
out
test
adc
mov
add
sub
in
test
pop
sub
jmp
pop
mov
xchg
cmp
clc
cmp
jne
test
sub
vandps
mov
hlt
sub
movb
sbb
in
mov
jb
or
ja
js
sub
inc
push
xor
jecxz
xor
in
inc
inc
cld
rcrb
jo
xor
mov
addl
arpl
and
jge
data16
in
push
inc
push
stos
je
add
test
je
mov
aaa
jae
ss
inc
pop
inc
shrb
ljmp
pop
shl
add
jmp
pushf
aas
insb
sti
and
cmpsb
and
hlt
pop
popa
mov
jns
test
jne
xor
dec
or
lock
mov
mov
inc
rorl
call
cmp
dec
lcall
cld
je
repnz
push
inc
pop
mov
roll
add
or
inc
movsl
lds
enter
cmpl
jg
or
jge
add
or
jle
es
sub
sub
lcall
pop
or
jl
or
adc
je
lea
cmp
jbe
pop
cmp
lea
cmp
jbe
mov
arpl
daa
mov
adc
je
test
jne
mov
or
pop
into
std
sub
cmp
sar
ret
add
inc
jg
test
and
jae
movb
inc
mov
adc
mov
rclb
push
and
inc
pop
shlb
js
mov
push
mov
inc
and
push
xchg
push
jmp
mov
adc
jae
int3
ret
dec
cmpsb
adc
adc
dec
inc
test
cmp
scas
cli
inc
in
sbb
clc
push
push
push
mov
loopne
or
jl
xor
pop
sbb
and
gs
xchg
out
mov
mov
add
setne
ret
jb
mov
ljmp
mov
cmp
sti
mov
push
aas
clc
mov
inc
sahf
sbb
push
push
adc
je
and
clc
push
pushf
dec
inc
xchg
aaa
popf
pushf
in
lea
add
jg
mov
cmpsl
inc
dec
ja
out
in
mov
adc
lock
mov
cmp
or
cmp
or
push
add
adc
push
mov
inc
push
or
out
and
cmp
ss
xlat
and
fisubs
xchg
insb
or
mov
sbb
stos
gs
or
sub
xor
xchg
cmp
leave
fistpll
push
andl
sub
add
or
movsb
cmp
sbb
jo
fdivl
dec
mov
jle
pop
lods
movsb
mov
xor
nop
pop
rclb
fnstsw
mov
add
mov
fadds
lods
sbbb
in
sar
push
pop
push
movl
mov
mov
xor
push
fnstsw
dec
add
sub
icebp
mov
movsb
push
call
xchg
push
mov
bound
jbe
inc
pop
push
mov
adc
sub
xchg
push
add
jne
mov
lds
arpl
mov
mov
cmpsl
xlat
jb
int
bnd
outsb
inc
lea
mov
push
pushl
cmp
push
cli
push
lret
mov
fidivs
pop
lea
outsb
push
call
push
pop
jle
xchg
scas
push
je
lea
mov
cmp
pop
stos
or
lea
add
lods
add
pop
sub
enter
xor
add
rcr
bnd
xor
and
jbe
ja
inc
mov
andb
jnp
icebp
and
inc
inc
fwait
add
cmp
xchg
inc
pop
nop
push
jmp
cmp
je
cmpsl
popf
mov
mov
pop
mov
push
movsl
xchg
jp
pop
mov
pop
adc
aam
clc
outsb
scas
and
das
je
or
test
dec
push
mov
inc
jmp
xor
addb
push
fs
adc
leave
dec
adc
xor
fsts
push
xlat
mov
decl
and
bound
push
pop
je
or
mov
sub
push
mov
inc
cwtl
cmp
jge
lea
sbb
add
loopne
loopne
push
sbb
inc
push
or
stc
loop
or
add
addr16
and
je
push
cwtl
pusha
repz
add
push
add
add
pop
pop
shrl
xor
pop
or
fbstp
xorl
sahf
push
pop
icebp
addb
push
ret
or
sti
pusha
jb
adc
or
ljmp
add
push
adcl
mov
mov
dec
je
out
dec
mov
test
jecxz
das
push
and
negb
enter
or
push
add
ljmp
push
mov
xor
mov
data16
jo
and
arpl
push
sbb
test
xor
ficomps
lock
int3
jmp
addb
xchg
xchg
pop
xchg
or
andl
jo
push
or
pusha
stos
adc
frstor
pop
or
jnp
or
push
enter
hlt
mov
mov
push
pop
test
push
push
notb
jle
shlb
fucom
enter
aam
out
stc
or
int3
ror
add
loope
loope
push
sub
add
push
clc
ljmp
mov
addr16
mov
add
in
mov
cmpl
ljmp
jp
push
push
lret
mov
jne
jge
sub
add
mov
sub
insl
jnp
das
ljmp
lahf
mulb
add
js
mov
cmpl
inc
call
sbb
sti
mov
cmpl
add
xchg
jnp
sbb
int3
or
xchg
lea
inc
je
ret
imul
out
jno
cmp
mov
add
inc
mov
or
jne
xchg
cli
add
mov
popf
jne
push
push
cmp
mov
jp
mov
xchg
mov
mov
clc
pop
lds
dec
andl
test
dec
cmp
adc
xchg
rorl
push
adc
mov
push
ficoml
pop
sbb
xor
pop
dec
mov
or
sbb
mov
icebp
in
jo
mov
lods
fwait
mov
loopne
ss
ds
fsubs
mul
jmp
xlat
push
aas
je
cmp
push
or
jne
aam
cmpsl
jne
cld
sahf
mov
push
jmp
inc
pop
jne
pop
pmulhw
call
test
andb
insl
in
fildll
loopne
jne
jmp
jbe
cmp
sbb
sub
mov
xor
test
mov
inc
aam
and
cmp
out
fisttpll
jbe
lock
add
je
pop
in
or
pop
in
stc
mov
and
mov
cwtl
inc
repz
into
jno
div
jmp
pusha
mov
jae
scas
and
lret
out
cs
mov
adc
push
leave
adc
adc
pop
out
inc
add
fisttps
push
add
je
add
cmpl
lock
mov
mov
cmp
add
mov
mov
mov
push
pop
or
pusha
push
popf
loop
inc
in
cmp
push
mov
or
orb
and
lea
add
rclb
rorb
mov
dec
adc
mov
jl
push
xchg
aas
add
inc
add
test
xor
pusha
test
xchg
nop
fcomp
and
mov
rcll
xchg
fsts
push
push
push
pop
lret
in
mov
pop
ret
pusha
or
addr16
pop
sub
lret
adcl
sub
cmp
call
mov
adc
clc
pop
rolb
je
push
push
movb
or
push
cld
push
inc
add
dec
inc
pushl
mov
pop
jae
push
or
or
je
jns
or
popa
pop
adc
mov
subl
je
mov
jmp
sub
push
int3
push
mov
and
push
lea
push
pop
jecxz
push
les
divb
push
or
push
inc
push
or
outsl
jge
int3
xchg
adc
mov
add
jge
add
sarl
sub
mov
and
or
mov
sbb
jle
lock
pop
push
jne
pushl
mov
dec
or
jo
add
mov
ja
jl
jne
xchg
scas
jmp
test
fsubrp
fidivrl
rcrb
ja
push
mov
enter
es
jo
mov
sub
sti
jo
pusha
push
add
adc
inc
cmp
adcb
xor
jbe
lcall
daa
push
mov
addr16
pop
mov
inc
lock
xor
mov
push
cmp
pop
iret
add
push
inc
pop
push
faddl
stos
or
movsl
dec
scas
jge
mov
call
loopne
arpl
lock
icebp
bound
mov
xor
adc
loopne
mov
fcoml
popf
andb
push
sub
cltd
loopne
push
cmp
mov
sbb
add
enter
lds
loopne
push
shrl
or
lock
out
jp
loopne
rcrl
or
push
cmpsl
add
fsubrs
add
or
cmpsb
or
loop
cmc
cmp
outsl
clc
mov
andl
adc
xadd
cmp
stos
add
jle
push
lds
xchg
inc
fstl
dec
loopne
push
push
cwtl
pop
pop
leave
adcl
xor
out
and
and
adcb
inc
scas
loopne
iret
or
fistl
or
pop
pop
jne
mov
mov
add
popa
adc
pop
loopne
loope
mov
sahf
dec
mov
lock
adc
jbe
subb
push
and
xlat
jge
sbb
jl
adc
sbb
frstor
sbb
sbb
out
dec
outsb
jmp
leave
push
pop
pop
jmp
mov
adc
push
or
mov
fs
xor
push
adc
push
or
sbb
xor
dec
mov
and
push
shl
cmpsb
scas
mov
jge
mov
popa
iret
pop
pop
and
add
sub
adc
cld
iret
ja
cmc
add
and
shll
fists
out
fisubrl
jge
mov
add
mov
js
add
cld
sbb
cmp
fistl
cmp
fcompl
cmp
in
stc
mov
insb
orb
data16
out
mov
pop
pusha
pop
add
push
or
sub
xlat
shll
mov
xchg
pop
dec
xor
mov
sub
ret
inc
mov
popl
aas
push
adc
push
iret
sbb
imul
add
out
push
adc
daa
js
subl
bound
jb
mov
mov
inc
adc
cwtl
repz
jecxz
js
sbb
mov
cmpsl
cmpb
sub
mov
mov
mov
push
mov
adc
pop
mov
lcall
jl,pt
push
rclb
and
cmp
insl
pusha
or
aaa
sbb
xor
fs
insb
add
js
push
imul
xorl
dec
xor
push
lahf
sahf
push
jo
in
push
mov
xchg
mov
mov
je
sub
in
pop
pop
inc
adc
ret
pop
fmull
lea
add
bound
mov
leave
or
push
jg
std
inc
iret
cmp
sub
cmp
orb
jmp
lods
mov
mov
iret
sub
push
mov
jns
imul
cmpl
mov
and
lea
sbb
leave
mov
push
leave
mov
shl
dec
lock
aas
jns
jl
cmc
push
in
add
inc
call
out
dec
push
pop
lahf
push
fidivrs
dec
aas
sbb
xor
dec
dec
lahf
adc
jmp
adc
xor
xchg
repz
outsb
ret
into
daa
jle
mov
lds
outsl
popf
adc
add
add
pop
xor
mov
push
or
and
iret
or
cmp
add
sub
sub
dec
lods
pop
or
inc
xacquire
jp
or
jno
rorl
repnz
jbe
int3
xchg
pop
sub
push
cmp
cld
inc
and
pop
das
add
data16
fistpl
sar
andl
sbb
pusha
add
or
mov
push
inc
add
adc
cltd
shrl
mov
inc
adc
mov
sahf
mov
test
aas
mov
push
mov
dec
cltd
int
out
jl
rorl
adc
mov
and
fidivrs
and
movzbl
adc
popa
add
jle
jl
push
test
dec
dec
fldl
pushl
movlps
fcomps
sar
inc
adc
ds
push
andb
add
jmp
xchg
jne
ja
sarl
fisubrl
mov
or
movsb
dec
in
and
xchg
adc
bound
adc
push
and
mov
pop
dec
and
xor
inc
icebp
mov
adc
jnp
je
sbb
cmp
mov
adc
adc
out
push
imul
pop
dec
xchg
cmp
push
js
inc
lock
xchg
ret
pop
adc
jecxz
nop
outsb
mov
xor
sbb
ds
mov
sub
stc
or
dec
leave
dec
mov
push
pop
nop
pop
movsl
xor
fs
ret
and
and
xor
inc
jo
pop
into
gs
mov
or
inc
mov
icebp
into
scas
xchg
adc
movsb
mov
xor
push
sub
ficoms
pop
pushf
and
repnz
pusha
sbb
push
xor
loop
pusha
mov
mov
in
jae
adc
repnz
out
and
inc
je
daa
je
scas
adc
mov
andb
mov
adc
push
push
or
mov
mov
fsubrp
xor
dec
jl
mov
lea
in
cmpb
push
push
push
rorl
sub
incl
mov
mov
pop
add
in
movsb
out
mov
pushf
pop
pop
lea
imul
fs
mov
punpckhbw
lods
and
cmp
and
cmp
lea
jnp
jp
rolb
pop
push
adc
addb
decl
outsl
pushf
or
aad
mov
sbb
jbe
adc
leave
and
lret
lock
jmp
sub
fldl
push
sub
and
call
xor
js
mov
dec
ljmp
or
pop
dec
loopne
push
call
sub
add
imul
xor
xor
mov
xchg
loope
mov
push
cld
das
pop
cs
inc
in
mov
out
add
add
jb
loopne
movl
cmp
fildl
push
aam
jnp
and
sbb
cmpl
ds
sbb
mov
and
in
jo
loopne
jecxz
push
ljmp
add
fldt
pop
xchg
inc
pusha
je
in
sub
int
push
movb
mov
inc
push
in
push
dec
and
mov
stos
pusha
stos
movsb
add
icebp
std
ljmp
orb
out
push
sbb
sub
fistpl
fistpl
stc
aaa
les
ret
je
push
mov
and
gs
mov
xchg
dec
leave
mov
xchg
xchg
inc
or
sbb
mov
mov
sub
push
mov
dec
pop
sbb
jne
and
nop
sbb
xor
push
jo
xor
sub
icebp
lock
cltd
xchg
lret
and
nop
or
or
inc
cmpsb
in
push
mov
into
cmp
shr
xor
and
sub
dec
and
das
mov
add
xor
inc
fmull
sub
xor
sub
push
jo
fcoml
aaa
sbb
mov
mov
enter
fwait
pop
mov
push
push
mov
dec
movsl
test
or
xchg
and
cmp
rclb
pop
xchg
or
fwait
xchg
ret
sub
push
gs
inc
pushf
pushf
pusha
dec
leave
jae
mov
mov
int3
sbb
int3
and
enter
push
sbb
enter
outsl
cmp
ret
sbb
push
mov
mov
jns
mov
lahf
lret
sbb
or
inc
pop
mov
jle
pusha
sbb
push
inc
jb
push
dec
call
jmp
mov
cmpsl
pop
clc
mov
xor
das
and
push
mov
cmp
hlt
iret
popa
fs
pusha
pop
mov
loope
sub
mov
adc
push
fadds
and
or
dec
sub
or
mov
lock
sbb
sbb
and
bound
adc
mov
push
xor
sbb
adc
push
push
inc
adc
and
jnp
movsl
sbb
leave
lock
add
or
aam
cltd
sbb
inc
push
sub
jge
lahf
test
and
data16
mov
movsb
and
shlb
adc
dec
jb
notl
mov
scas
push
mov
test
xchg
pop
hlt
mov
or
inc
les
sbb
imul
sti
movsb
sbb
jl
jg
test
mov
push
and
inc
jp
jae
pop
add
je
dec
jo
pop
nop
adc
add
mov
or
jl
dec
sbb
scas
push
xchg
int3
ds
pop
jne
mov
fcmovne
push
cmc
add
pop
push
jmp
xor
mov
loopne
xchg
xor
pop
rcrl
shll
push
rcll
push
or
adc
ss
sub
push
adc
sbb
push
jnp
je
dec
or
sbb
loopne
dec
ret
mov
mov
push
jl
cmp
lea
pop
inc
jb
pushf
or
shll
and
pusha
mov
fildl
mov
mov
pusha
test
adc
inc
adc
ror
popa
and
mov
jno
shll
sbb
jne
shlb
es
into
adc
cmc
xchg
adc
xchg
dec
mov
push
add
add
cmc
xchg
push
inc
mov
fldenv
sub
push
sbb
iret
loopne
addl
mov
neg
pop
xchg
mov
jno
ret
repnz
jno
test
movsb
sbb
cli
sub
xor
mov
out
xchg
fadds
push
jbe
popf
fistpl
add
in
cmpb
cmp
rolb
add
fbld
add
pop
nopl
pop
stc
popa
pop
iret
sbb
ljmp
adc
clc
add
xor
adc
je
sbb
pop
inc
or
push
adc
xor
in
mov
insl
add
xor
jge
les
and
jecxz
or
scas
mov
add
ret
or
incb
pop
add
mov
pop
inc
pop
mov
cmp
xorb
sbb
xor
int
shlb
cmp
or
negl
je
push
push
pop
loop
cmpsl
push
jbe
test
sub
push
pusha
lock
sub
leave
push
hlt
dec
mov
sbb
lock
sbb
shrl
mov
or
jmp
ficoml
or
mov
push
add
fildl
push
pop
or
mov
push
js
popf
sub
xlat
insb
test
and
addl
popa
popf
pop
mov
cmpsl
aad
or
and
outsb
aam
sbb
and
loopne
je
jo
sub
mov
push
inc
mov
es
or
push
push
cltd
test
js
push
push
test
sub
repnz
icebp
scas
sub
pop
sub
nop
mov
cmp
sub
push
test
push
popa
das
cwtl
jge
jno
pop
push
enter
ret
inc
lret
ret
test
jbe
push
jne
or
outsb
inc
mov
cmp
push
stos
add
adc
pop
mov
ljmpw
xlat
pusha
xor
daa
sub
das
aad
xor
adc
push
movsb
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
daa
sbb
arpl
dec
adc
inc
subl
cmp
xchg
pop
add
and
inc
add
adc
sub
repz
dec
pop
sub
mov
push
mov
scas
test
mov
jp
push
daa
pusha
add
andb
lcall
add
test
cmp
inc
and
int3
pop
and
push
mov
mov
sub
sbb
cvttps2pi
push
mov
stos
dec
mov
mov
push
enter
enter
fdiv
cmp
sbb
xchg
movsb
and
test
jmp
sti
xor
xor
xchg
dec
xlat
cmp
xor
sbb
mov
pop
xor
in
cmp
outsl
mov
cmp
addr16
loopne
cmp
dec
dec
jae
testb
or
and
xor
stc
and
sbb
adcl
pusha
sbb
sbb
aad
push
inc
cmp
sub
cmp
cmc
sub
cmp
repnz
sub
cmp
test
sub
fadds
xor
je
int3
ret
leave
cs
popa
ret
jns
pop
jns
into
cltd
pop
shll
cmpsl
adc
popa
movb
adc
xlat
mov
fisttps
jl
mov
sub
add
sti
mov
scas
aas
rorb
pop
pushl
sub
mov
mov
sahf
test
cmpsb
sti
add
xor
sbb
push
jo
mov
les
push
mov
fwait
jbe
hlt
pop
gs
or
xorl
push
push
add
loop,pn
je
bound
sbb
sub
cmpsb
pop
inc
xor
in
inc
pop
dec
mov
js
push
or
push
sub
xor
sub
mov
cmp
lret
jne
popf
mov
lods
out
jmp
cmp
fbld
xor
nop
cmpsl
mov
mov
dec
push
pushl
jge
mov
add
pusha
mov
adc
add
stos
in
fsubs
cli
add
loope
ret
sbb
test
fmuls
adc
sub
pop
popf
movsl
mov
mov
in
loopne
sbb
push
mov
lock
int
mov
les
push
cmp
ret
pop
ret
push
out
in
adc
jno
or
subb
in
mov
out
lock
setne
pushf
or
jge
push
inc
sbb
jb
or
push
scas
xchg
pop
out
jne
or
out
je
sub
push
xor
mov
loope
xchg
sub
test
das
or
xor
das
rclb
faddl
dec
dec
cmp
addr16
or
aam
xchg
add
out
push
out
fsubp
lods
push
jne
or
xchg
cmp
mov
outsl
cmpsl
test
add
xor
call
sub
sub
repz
push
inc
and
sub
adc
int3
fldl
stos
fdivr
adc
shl
out
inc
out
push
je
or
or
cmp
jo
inc
fnstenv
inc
cwtl
lods
loope
lds
ret
jnp
fisubs
push
xor
jmp
movsl
mov
dec
imul
jne
clc
rcll
cwtl
mov
mov
or
mov
mov
enter
inc
int3
add
dec
cmpsl
stos
adc
xchg
and
add
loopne
insl
push
cmpsb
lahf
cmpsb
ds
test
mov
test
push
or
dec
scas
xchg
ljmp
pop
add
jg
outsl
xchg
adc
push
mov
adc
push
add
push
mov
mov
mov
stos
mov
jne
push
ds
mov
xorb
aam
push
stc
out
mov
cmc
outsl
arpl
dec
mov
sbb
je
je
out
push
cmpsl
or
push
mov
jbe
push
pop
lock
jle
mov
sbb
ja
mov
aaa
or
ss
mov
sbb
pop
add
les
and
mov
and
jnp
ja
movsl
je
loopne
jle
inc
mov
push
mov
mov
cmp
or
push
xchg
and
nop
pushf
sbb
and
add
mov
roll
add
filds
jge
xchg
jo
out
lea
push
fsubrl
xchg
pop
add
ljmp
loopne
cmp
or
push
mov
mov
inc
icebp
or
push
adc
mov
mov
push
mov
cltd
testb
cltd
cwtl
nop
push
sub
lock
pop
mov
jp
jo
xor
fisttpl
in
push
lock
inc
cwtl
xchg
mov
lods
sahf
stc
push
add
push
js
testl
cmp
lock
adc
xor
add
sahf
lock
inc
js
push
sti
or
or
loopne
mov
movsb
call
pop
lcall
icebp
sahf
fdivs
test
jge
lods
pop
add
ret
pop
pushw
adc
pop
fidivrl
in
fwait
pop
movsl
add
fsubrl
in
push
test
cltd
or
sbb
push
stos
sbb
aaa
adc
and
ret
imul
dec
push
stc
adc
popa
pop
mov
popa
inc
clc
mov
or
test
xchg
dec
or
test
lock
xor
outsb
rcr
sarl
inc
ficoml
in
push
movsl
dec
les
mov
cmpl
fs
pusha
mov
lret
xchg
loopne
sbb
ret
adc
call
test
cmp
ret
sub
rcrl
addl
iret
shl
ret
xchg
mov
jae
jg
push
adc
pop
call
push
inc
xchg
cmp
les
enter
cwtl
leave
mov
jbe
mov
or
sbb
add
fcoml
add
popa
or
das
add
and
dec
or
cmovns
cmpxchg
repnz
movsl
in
and
sub
mov
dec
push
pop
and
add
mov
sub
push
pop
movsl
dec
mov
mov
es
js
sbb
jns
sbb
pushf
fcoms
fdivrl
sbb
fdiv
in
jg
mov
mov
je
jmp
call
cmp
ret
shr
scas
push
aas
xor
rclb
or
ret
fs
cld
sub
cmp
add
orb
fists
in
jle
jp
popa
xchg
je
arpl
mov
add
movsl
enter
or
pop
cmpsl
cli
gs
ret
push
lret
adc
or
cmp
push
lods
mov
arpl
jne
add
mov
sbb
incl
add
push
test
pop
cmp
jmp
lds
pop
sub
mov
add
and
and
dec
jle
dec
enter
adc
push
push
aaa
shrl
push
cmp
jg
mov
adc
lods
xchg
iret
jmp
movsb
addr16
sbb
add
add
cs
testl
push
mov
adc
andl
ss
or
shrd
sti
dec
or
or
mov
outsl
add
mov
addl
push
jl
mov
push
jne
xchg
pop
rcrb
sub
jmp
mov
push
mov
mov
ja
push
arpl
subb
packuswb
mov
or
call
lret
or
dec
in
and
or
push
cmpsb
loope
test
cs
adc
sub
sahf
rolb
adc
inc
fisubrl
push
lea
cmp
jae
hlt
jmp
xor
lret
fcmovnu
inc
gs
call
inc
add
loop
adc
testb
rorb
pushf
in
inc
cld
or
sub
stos
imul
add
jb
adc
cmp
jg
lods
xchg
push
sbb
add
shlb
cmp
pop
nop
cmc
jg
pop
scas
cld
ret
mov
popa
nop
add
mov
adc
insl
xchg
sub
xor
push
add
lea
lea
dec
fwait
enter
add
dec
aam
adc
cmp
adc
in
xchg
add
add
jle
push
mov
js
cmpsl
mov
dec
popl
xor
jg
jb
ret
cwtl
fs
sub
dec
test
dec
insb
insl
test
js
push
hlt
push
das
imul
jne
mov
push
xor
jmp
test
pop
fwait
sub
push
and
dec
mov
mov
pandn
push
inc
inc
mov
ljmp
inc
push
testw
orl
push
cmp
stc
sub
mov
inc
push
push
dec
ds
outsl
ljmp
add
pop
pop
inc
data16
fistpll
fildl
sub
mov
sub
sar
subl
mov
rolb
mov
sahf
clc
je
dec
or
ficompl
repz
scas
sbb
mov
lea
push
rol
push
cmp
push
dec
or
cmp
adc
cmpsl
shll
or
mov
test
push
jns
neg
sbb
hlt
jl
repz
push
lcall
push
cwtl
incb
push
inc
push
test
ret
mov
jge
js
cltd
pop
cltd
jbe
add
mov
mov
pop
ficompl
push
je
push
push
xchg
dec
add
mov
xchg
mov
mov
lea
faddl
lods
stos
into
adcl
mov
test
sbb
mov
adc
cmpsl
lahf
nop
mov
ret
cmpb
sbb
adc
jecxz
xor
add
in
repnz
push
lret
mov
mov
pop
clc
imul
pop
push
popf
stos
cmpsb
add
jbe
daa
les
out
mov
cmp
sub
test
shrb
pop
push
movsb
mov
inc
push
xchg
movsl
popf
sbb
push
pusha
insl
xor
subl
mov
sbb
nop
xchg
adc
pop
or
pop
mov
cmp
outsb
jbe
cmp
jbe
mov
sbb
add
cmp
mov
out
in
mov
sub
aas
insl
mov
add
sub
push
sbb
adc
insl
out
das
mov
mov
add
ds
inc
and
jl
pop
loope
inc
add
jbe
sub
add
inc
mov
test
sbb
lret
cmp
ja
or
pop
sbb
cmc
sub
aam
movb
sti
jmp
movl
mov
inc
pop
call
dec
cmc
dec
pop
jmp
iret
dec
adc
adc
mov
rcl
pop
push
adc
or
add
je
stos
push
and
test
insb
sbb
jb
jo
pop
fimuls
or
bswap
jae
and
sbb
popa
jnp
cld
or
mov
xchg
sub
jmp
push
mov
je
dec
dec
add
cltd
and
aam
jmp
sub
xor
inc
cmp
or
aaa
andb
cld
and
mov
iret
and
sbb
sub
jne
fldl
and
or
add
lods
hlt
sbb
mov
pusha
flds
mov
negb
adc
test
das
mov
aam
popf
mov
add
sub
sbb
popa
and
sub
sbb
mov
adc
jmp
push
adc
aam
adc
push
and
lcall
cwtl
movsb
dec
or
xor
pop
arpl
push
add
cmp
add
js
cmp
fdivr
inc
mov
lea
in
or
pop
and
rcrb
sbb
pusha
push
stos
cmp
mov
or
sarl
ret
add
imul
inc
imul
fwait
cmp
add
pusha
lods
daa
orb
cmp
fadds
and
mov
or
pusha
adc
and
sub
lcall
adc
cmp
jne
sbb
jl
sbb
seto
roll
mov
jmp
dec
movsb
nop
xchg
mov
and
pop
and
add
pushl
push
push
pop
cs
addb
movsb
pop
and
mov
ds
mov
sbb
enter
add
pop
mov
add
lret
pop
aas
pop
js
jo
push
pushl
lret
sub
sub
neg
sbb
inc
je
cmc
lahf
orb
jp
cmp
pop
and
cld
mov
clc
mov
add
and
pushl
aas
mov
mov
and
mov
adc
enter
dec
addr16
lock
ss
add
cld
scas
mov
lea
outsl
mov
add
aam
push
sbb
arpl
into
and
add
pop
in
sbb
xchg
add
add
sub
push
cld
mov
sahf
inc
ja
ja
pop
int3
jmp
lret
jne
mov
push
push
lock
test
jnp
lock
add
jmp
push
sbb
cmp
mov
pusha
out
test
jno
pusha
or
add
or
inc
imul
xchg
imul
jg
dec
mov
mov
mov
xchg
sar
add
sbb
mov
xchg
or
cwtl
and
xchg
cmpsl
das
or
add
add
cmp
lea
jbe
fwait
push
or
mov
push
cmp
push
stos
ret
dec
add
xlat
lds
adc
icebp
lea
lea
js
push
bound
std
mov
jp
mov
dec
enter
loope
imul
ja
or
mov
adc
bound
adc
add
lock
shll
add
inc
cmp
inc
popa
mov
clc
xor
add
and
push
rorb
lahf
mov
daa
add
jne
pop
mov
mov
push
mov
bound
mov
adc
mov
movl
pop
add
stos
and
aas
dec
das
add
jmp
mov
sub
sbb
xchg
inc
outsb
movl
mov
add
or
pop
inc
dec
movl
lods
push
pop
cmp
push
or
bound
push
outsl
aam
adc
add
push
mov
data16
xchg
flds
lcall
lods
jo
sbb
stos
sbb
or
imul
and
sub
mov
or
out
mov
fstps
mov
xchg
cmpsb
cltd
adc
mov
or
test
sbb
aam
ds
fdiv
sbb
lea
mov
mov
orl
rcrl
lds
mov
jmp
jno
push
rorb
cmpl
inc
lea
cmp
xchg
xchg
lods
out
sub
pop
xchg
sbb
xor
lea
insb
pop
jmp
push
lods
mov
jb
fadd
call
or
sbbb
adc
pop
subl
dec
sahf
xchg
out
fstl
add
popf
test
decl
xchg
push
cmp
jl
inc
and
out
clc
jbe
das
jmp
cmp
or
test
std
dec
add
subl
dec
cmpsl
xchg
testb
add
push
push
push
sub
loopne
cld
lea
hlt
mov
hlt
sub
sbb
test
lds
in
sbb
insb
adc
cs
ljmp
add
fisubrl
sbbb
or
enter
push
jo
mov
or
xor
add
push
push
mov
mov
fsubrl
loopne
cmp
mov
clc
test
mov
mov
std
jae
loopne
and
xchg
dec
lds
pusha
fldcw
jmp
jo
push
xor
pushf
cmp
shrb
loopne
inc
push
mov
ljmp
push
lods
lods
mov
lahf
lds
repnz
hlt
shld
shl
mov
int3
idiv
into
jbe
je
lods
jnp
scas
inc
popf
jp
std
cmp
jne
pushf
iret
and
sti
das
test
mov
jmp
xor
push
cmp
pop
add
sub
mov
xor
jo
inc
mov
mov
xchg
jle
je
inc
ret
adc
jne
xchg
cmp
scas
popa
cmp
loopne
xor
insl
add
sbb
and
js
cli
inc
std
jb
lods
add
lea
ret
adc
mov
sub
jmp
sbbl
cmp
orl
inc
aam
cmp
cmp
into
or
cld
adc
jle
add
ja
dec
ret
pop
pop
movsb
jne
jmp
add
sub
pop
xchg
or
add
rorb
xchg
ret
push
fbstp
dec
pop
and
nop
sbb
repnz
aad
adc
out
cmp
cmp
stos
insl
into
inc
loopne
add
ds
jae
ds
pop
lock
mov
jmp
mov
inc
push
inc
add
mov
adc
cmpsl
add
xor
cmp
cmp
xor
pop
push
shll
fstps
adc
mov
cmp
int3
sub
push
inc
inc
push
outsb
jne
pop
sbb
js
add
ret
and
or
push
inc
inc
pop
jno
out
lock
pop
loopne
inc
and
pop
or
xor
cwtl
jmp
push
jg
jnp
repz
inc
cmp
out
pop
ja
divl
push
mov
rorb
or
sub
fdivrs
int3
decl
fucom
and
sub
mov
je,pt
add
cmp
jb
dec
lock
lock
add
inc
test
lea
je
fistl
cmpsb
sub
pop
ljmp
fsubr
out
cmpsb
adc
cmp
jae
cmpl
xchg
stc
stos
inc
stos
jle
imul
jle
jle
add
jne
cmp
inc
enter
mov
add
cmp
and
mov
or
stos
test
ret
addr16
pop
inc
call
je
inc
jmp
ljmp
imul
and
jo
lea
mov
fs
cmp
or
decb
push
pop
sbb
cltd
lock
add
mull
add
xlat
cmp
and
xchg
xor
js
mov
shl
fldl
mov
mov
push
mov
cmp
jl
test
push
das
lret
mov
jg
sbb
mov
aas
int
popf
addb
xor
out
aas
lock
lcall
lcall
mov
lea
mov
inc
cmp
sub
testl
icebp
jg
add
or
ja
shr
outsb
cmpl
push
mov
inc
mov
dec
stos
or
push
nop
adc
xorb
cmp
stos
sub
mov
mov
adc
and
dec
pop
rorl
cld
iret
jmp
push
or
sbbb
sub
cmpl
push
and
cmp
push
xor
inc
add
out
rorl
pop
dec
stc
insb
stc
sub
mov
xchg
add
ss
or
notl
adc
cmp
jmp
xor
or
jle
xor
sbb
and
xor
sub
popf
ret
nop
mov
in
in
imul
dec
lock
std
shlb
cmc
leave
push
lock
cmp
insb
push
loop
mov
add
inc
loope
popa
sbb
jbe
in
lea
mov
popa
pop
xchg
add
shlb
sarl
sbb
cmpsl
cmpb
mov
xchg
dec
movsb
add
andl
sub
xor
dec
pop
in
xor
mov
adc
adc
ret
data16
je
mov
iret
mov
add
xchg
sarl
xchg
mov
dec
cmpl
sub
loopne
dec
lea
shll
inc
push
mov
hlt
jmp
xchg
inc
iret
cmp
mov
and
dec
aas
pop
ret
xor
fisttps
adc
call
mov
pop
fwait
dec
sbb
das
test
das
sub
sbb
pop
adc
xchg
imul
jmp
xchg
xchg
stos
jp
aam
adc
push
ja
or
xchg
pop
pop
xchg
xor
add
stos
or
and
out
cmpsl
add
inc
pop
imul
push
add
pop
add
add
cs
jecxz
xadd
or
add
jo
pusha
gs
push
fimuls
xor
adc
jbe
inc
cmp
or
shlb
adc
loop
inc
push
leave
arpl
add
xchg
dec
add
test
inc
or
orb
mov
pop
int3
mov
iret
and
mov
sub
pavgw
sbb
jmp
mov
xchg
sbb
stos
jbe
mov
cmp
je
loopne
shll
mov
inc
stos
push
shr
and
jg
cmp
jne
inc
mov
adc
jo
fisttpl
mov
jl
lock
lret
pop
aaa
add
cltd
lods
call
or
dec
repnz
add
xor
xchg
shl
out
negb
push
sbb
sbb
out
mov
lahf
int3
cmp
pusha
xor
fs
cld
sub
sbb
add
or
cmp
jnp
ret
jmp
mov
pop
push
mov
fisttpl
shrl
xchg
lsl
sti
pop
sub
xor
jmp
cmpl
inc
and
sub
repz
ret
or
sub
fistpll
jns
lahf
adc
out
dec
in
xchg
fwait
push
not
xchg
pop
jbe
dec
jmp
sub
dec
or
sub
or
xchg
pop
sbb
xchg
inc
sbb
push
cmp
jle
add
fs
adc
lret
mov
mov
ds
add
ret
and
pop
movb
mov
push
aam
aaa
pop
push
arpl
subl
pop
mov
je,pt
mov
push
cmp
push
push
push
sbb
andb
jo
add
ret
arpl
xchg
fnstsw
push
out
xchg
push
xchg
mov
or
ret
in
and
daa
and
popa
and
and
xchg
xchg
cmpsb
and
jl
sbb
in
or
loopne
neg
add
leave
push
or
push
lcall
adc
sbb
push
shlb
fnsave
test
popf
mov
add
sub
mov
or
push
cmp
push
pop
movsl
daa
shll
orb
push
lcall
mov
sbb
adc
lods
negl
dec
test
xchg
mov
sbb
sub
mov
add
lret
sbb
roll
in
cmp
xlat
fimuls
sub
push
es
pushf
loopne
and
or
in
jbe
or
or
jb
pop
pusha
dec
cmp
je
push
dec
sbb
jmp
add
jp
pushf
or
xchg
xchg
into
out
xchg
add
loopne
mov
lock
mov
inc
call
inc
push
add
or
addr16
jno
pop
mov
jae
lea
xchg
jae
daa
leave
mov
pop
adc
add
fidivl
and
jg
dec
or
or
adc
push
imul
sub
aad
push
je
xchg
loope
adc
or
inc
jnp
cmp
inc
loope
sbb
push
cmp
data16
clc
sub
rcrb
jmp
cmp
mov
in
cld
je
test
dec
dec
dec
clc
jne
mov
fnstenv
push
push
test
add
aaa
sbb
mov
sub
lea
push
cld
cmp
stos
push
rcrb
shlb
dec
sub
xchg
sbb
xchg
mov
hlt
push
and
hlt
jns
or
inc
test
pop
cmp
add
mov
shlb
cmp
jae
cmp
jmp
or
stos
adc
lret
fxtract
jne
pop
push
subb
js
add
adc
xor
fnstenv
mov
ja
push
mov
stc
repz
rclb
pusha
dec
inc
add
mov
imul
xlat
or
imul
inc
ja
push
cmp
loope
push
xchg
dec
loope
jmp
cmp
lods
lea
pop
fucompp
pop
test
push
loope
notl
dec
das
fmull
jno
fists
or
sub
push
hlt
neg
sbb
and
add
out
test
inc
movzwl
push
adc
into
rorb
js
mov
es
rorb
test
sar
xor
js
adc
jmp
je
mov
std
out
sub
pop
call
and
pop
test
sub
test
orl
push
cmpl
jne
cmp
jbe
mov
in
adc
lods
and
dec
cmpsb
cmp
loopne
sarb
cmpsb
jl
cmpl
das
jne
mov
loopne
insl
popa
es
jmp
sub
mov
fisttpl
push
sbb
call
js
jae
fbstp
jp
sbb
dec
js
es
cli
mov
scas
adc
enter
imul
pusha
cmpsb
cs
pop
or
xchg
gs
out
or
fnclex
add
fistl
add
sbb
mov
loopne
ja
icebp
fnstcw
aaa
pop
or
shlb
cmpl
or
sti
decl
pusha
and
mov
or
mov
jmp
or
imul
mov
movsb
inc
cmp
es
xchg
inc
movsl
sbb
mov
mov
outsl
push
sahf
fsubs
aas
or
outsl
icebp
mov
sti
in
push
adc
les
push
dec
das
addb
push
push
mov
cmp
push
fs
lahf
insb
push
jne
push
test
cmp
xor
mov
push
mul
seto
neg
or
adc
iret
pop
and
das
rorb
dec
adc
xchg
rolb
mov
pop
ljmp
mov
jbe
fistpl
dec
in
lcall
mov
in
icebp
loopne
add
jp
nop
xorl
pop
xchg
inc
or
popa
loopne
push
divl
nop
mov
mov
bound
jecxz
xchg
outsl
repnz
push
mov
pop
sub
or
js
pop
sbb
movsl
clc
inc
or
xor
mov
jle
cld
test
cltd
testb
nop
add
or
cmp
in
and
sahf
loopne
jne
cs
dec
gs
fiadds
pop
xor
or
cmpl
xor
shrb
sub
xor
mov
or
popa
stos
out
sbbb
mov
jg
es
or
add
call
add
sub
loope
test
mov
add
mov
and
inc
or
in
dec
add
and
cli
subl
cmp
jae
xchg
sti
xor
addr16
cmp
jae
orl
mov
push
push
dec
mov
xor
push
lea
add
sub
mov
insl
jmp
cmpb
int3
jb
push
test
bound
mov
in
pop
push
pop
ret
sahf
les
add
inc
mov
add
loopne,pn
or
dec
push
xorb
mov
sbb
adc
jo
or
adc
push
clc
sbb
add
std
mov
lds
and
mov
ficompl
cmp
xchg
int
imulb
add
mov
mov
add
fnsave
pop
inc
mov
popf
call
cmp
inc
adc
jl
xlat
sbb
dec
fucom
cmp
adc
or
mov
sbb
dec
arpl
aam
jmp
mov
orb
inc
cmpl
call
es
iret
pop
or
inc
pop
movsb
ret
orl
and
mov
loope
fmul
inc
lock
mov
mov
or
sar
lea
adc
cmp
cltd
imul
test
dec
jbe
out
lods
outsl
sahf
jne
imul
jbe
jbe
jbe
fimull
mov
cld
mov
jns
cmp
adc
jge,pt
leave
cmp
or
adc
mov
mov
enter
mov
movsl
hlt
push
in
pop
adc
sahf
aam
hlt
andb
jb
mov
popa
shll
xlat
nop
pop
fcoml
pop
mov
mov
ss
icebp
fiadds
ds
or
loopne
xor
stos
cmp
mov
lcall
pop
push
jbe
das
fsubr
jecxz
xchg
sbb
mov
sti
pop
ret
and
enter
addr16
mov
fadds
lahf
push
xor
push
mov
ds
leave
test
xor
adc
pop
lcall
mov
cmp
daa
pop
add
gs
fistl
arpl
stc
loopne
jae
das
or
aam
jns
add
jle
push
pop
lret
test
into
mov
fmull
fwait
mov
xchg
add
sub
cmc
cmp
pop
mov
decl
and
ret
sub
jb
out
inc
leave
cmp
jbe
mov
fmul
or
sub
mov
mov
rol
lea
inc
cmp
iret
xlat
sub
add
out
inc
cmp
jbe
enter
aad
out
addl
cmp
add
mov
sbb
lock
mov
ret
cmp
add
sbb
call
jbe
insl
dec
adc
stos
mov
inc
add
ja
or
adc
sahf
jne
push
out
dec
in
call
dec
jbe
fcmovb
das
stc
loopne
mov
rcrl
cld
test
daa
push
mov
lea
xchg
dec
cmpsb
sbb
jge
sub
sub
adcl
aad
or
lea
pop
jae
mov
mov
mov
leave
jmp
dec
mov
fstps
mov
sub
and
or
mov
sbb
sti
adc
pop
test
mov
outsl
nop
xchg
pop
mov
cltd
loopne
sbb
push
adc
add
add
jbe
rorl
mov
mov
adc
and
and
pop
divps
mov
scas
movsl
aad
pop
jno
jle
mov
pop
and
jne
adc
push
cmpsb
pop
pushf
jecxz
push
pop
mov
je
test
pusha
adc
and
and
push
cmp
loopne
sbb
sbb
test
ds
xchg
xor
cmp
fnstenv
xor
pushf
xor
push
cmp
adc
mov
jmp
or
xor
or
and
push
push
push
xchg
andl
sbb
mov
mov
mov
inc
ss
rorb
xchg
adc
push
stos
xchg
push
mov
daa
jb
in
add
lods
jecxz
adcl
sbb
xchg
sbb
sub
mov
add
addr16
xchg
xchg
mov
nop
add
push
pop
add
pop
mov
sbb
loopne
push
inc
pop
out
pop
andb
jne
mov
mov
adc
add
push
or
test
aas
mov
xchg
lahf
pop
jnp
shrb
or
mov
pushf
hlt
daa
lods
dec
or
loopne
fbld
inc
cmpl
adc
movsb
dec
dec
rcrb
dec
mov
xor
inc
and
andb
or
outsb
sbb
mov
add
push
push
ds
inc
aaa
jns
adc
push
sbb
push
je
lcall
and
sub
in
cmpsb
orl
imull
shl
insb
je
nop
jbe
inc
add
jo
push
mov
and
rolb
pushl
adc
xchg
sbb
mov
stc
mov
mov
shlb
outsl
lea
mov
or
outsl
ja
stos
mov
in
jb
push
jae
lea
push
push
add
sbb
pop
push
scas
push
lea
stos
cmp
fbstp
loope
mov
xor
lcall
and
pop
xchg
lcall
cmc
loopne
jge
roll
repnz
les
leave
dec
sbbb
cmpb
xor
scas
call
add
out
push
ficomps
cmp
sub
sub
jle
sbb
jo
and
out
push
jbe
les
movb
sub
cltd
mov
mov
jge
push
jb
sub
xchg
rolb
push
sbb
pop
dec
sti
sti
imul
popa
in
negb
addb
sbb
aaa
test
mov
in
sbb
jmp
mov
loopne
hlt
mov
push
test
push
push
push
mov
xor
popf
xchg
es
and
jb
dec
sub
jle
push
popa
cmp
mov
xchg
adc
test
jns
jno
cwtl
insb
xorb
loopne
jae
lret
push
icebp
pop
add
les
cli
push
lret
push
ret
cmp
jmp
push
or
lcall
jns
sahf
or
sub
das
lea
xor
xor
imul
xlat
push
outsl
jnp
cmp
inc
add
lcall
and
aad
lret
in
xor
inc
mov
sub
invd
or
fimull
xchg
mov
and
push
notb
inc
or
add
mov
pushl
xor
inc
mov
pop
shll
mov
and
and
aaa
jmp
iret
add
xor
cmp
neg
add
mov
aas
aad
push
mov
mov
shlb
inc
sbb
imul
lods
lcall
movsl
pop
push
cmp
leave
test
and
pop
in
pop
popa
sub
inc
test
clc
push
pop
pop
cmp
jne
push
inc
aad
test
jne
call
aam
movntps
stos
add
int
push
mov
aaa
adc
pop
rcrb
mov
lcall
adc
cmc
mov
xchg
je
mov
push
jp
movsl
inc
movb
call
dec
sub
fiaddl
push
mov
lret
sbb
jge
cmp
jne
out
push
adc
ja
lea
and
push
cld
jnp
inc
mov
and
roll
inc
gs
add
cld
es
cmpsb
push
sub
mov
adc
icebp
mov
adc
and
jne
lods
in
dec
testb
lock
std
daa
pop
add
add
mulb
rol
push
inc
adc
or
inc
push
adc
pop
push
push
cmp
mov
mov
mov
int3
sub
cmp
jbe
pop
and
adc
adc
cmpb
rolb
aam
sub
push
fucom
mov
movl
push
out
movl
xchg
es
lods
addr16
add
add
sti
lock
in
roll
loop
and
cmp
jge
sub
es
popf
aam
add
adc
and
sbbl
scas
xchg
adc
and
add
mov
rclb
sbbb
mov
rcll
push
mov
mov
xchg
jno
push
dec
mov
sbb
lods
add
cwtl
or
daa
add
mov
or
jns
icebp
shlb
add
clc
sub
pushl
pushf
push
inc
decl
in
pop
and
aas
inc
in
insl
fldt
add
in
push
in
jl
xchg
adcl
push
inc
imul
push
dec
mov
mov
stc
or
sbb
call
cltd
mov
cmpsl
jb
fsubrs
sahf
lret
loopne
test
jo
mov
xchg
sub
fsubr
inc
mov
add
pushf
mov
sub
sub
jb
leave
sbbl
adc
enter
xchg
sbb
mov
sub
dec
pop
outsb
test
bound
mov
inc
lods
add
mov
jmp
aam
jns
xor
sbb
and
mov
sarb
sbb
cltd
add
clc
pop
inc
cs
inc
push
mov
mov
dec
ss
fcmovb
imul
or
jmp
cmp
pop
mov
repz
mov
mov
sub
cs
sbb
push
nop
and
fwait
in
xchg
or
popa
cmp
xchg
in
dec
mov
test
pusha
sbb
imul
jmp
imul
push
enter
xor
pop
mov
xor
loope
lret
mov
test
adc
lock
ljmp
stos
lock
and
stos
cmc
gs
adc
loopne
mov
and
mov
and
iret
mov
inc
enter
inc
xor
jge
adc
rclb
sub
adc
test
and
jb
in
roll
and
jo
and
sbb
mov
dec
ljmp
popf
enter
or
and
cmp
cmp
or
lea
sbb
nop
xchg
es
pop
adc
ljmp
adc
movb
sbb
inc
rolb
and
and
sbb
cmp
and
ret
aaa
add
and
push
je
sub
jle
and
cmp
push
les
hlt
jo
adcb
dec
add
or
cmp
ja
aas
add
sbb
out
mov
stc
adc
cmp
popf
cmpl
inc
pop
sbb
cmp
inc
hlt
or
shrl
pop
notl
xorl
adc
je
nop
mov
inc
jle
push
in
pop
nop
call
mov
jbe
jl
sahf
lods
in
sub
add
mov
jbe
repnz
insb
test
cmp
cli
cmp
sbb
jne
sub
sbb
push
pop
dec
je
mov
je
sub
test
lods
push
ja
xchg
sti
sti
pop
rorb
cmpsl
adc
adc
mov
les
mov
fwait
inc
or
jmp
lods
je
insl
fsub
pop
jne
test
push
xor
push
add
xchg
mov
or
or
call
sahf
push
xchg
lds
lret
jbe
data16
sbb
xorl
icebp
xchg
mov
ss
push
add
mov
add
js
pop
or
push
push
daa
pop
jo
lahf
xchg
cmp
mov
stos
add
jnp
sti
arpl
adc
sub
mov
shl
outsl
pop
and
jmp
cmp
je
cmp
imul
push
mov
jmp
inc
sbb
leave
fwait
clc
dec
rcll
cli
mov
mov
fstpl
imul
je
das
sbb
and
adcb
jmp
xchg
sbb
cvtpi2ps
xor
lcall
rcr
sbb
iret
dec
pop
hlt
incl
or
pop
insl
fldt
mov
mov
add
pushw
and
aad
sbb
pusha
jns
push
inc
sbb
fstl
in
lret
xor
mov
add
sub
pop
aaa
sub
or
sbbl
sahf
add
fcmovne
rcrl
lahf
push
push
or
xchg
stc
icebp
cs
pop
jge
jmp
add
jge
mov
mov
cli
call
push
and
lea
push
lea
push
xorl
shll
lea
mov
xchg
loopne
jns
icebp
inc
cmpsb
add
dec
mov
inc
test
cltd
movb
lahf
sahf
jb
test
rclb
cmc
sub
mov
movl
dec
jb
or
sub
ret
leave
inc
insb
data16
push
push
je
xchg
rcrl
pop
std
xchg
out
aam
push
clc
dec
imul
inc
xor
add
or
adc
jno
push
inc
popf
mov
xchg
push
mov
mov
je
sub
rep
adc
in
and
dec
adc
dec
dec
xchg
push
add
inc
jno
jle
add
outsl
imul
and
pop
andb
scas
adc
ret
adc
in
or
mov
int3
sbb
cmpl
dec
dec
pop
lcall
jo
or
pop
xchg
jle
inc
jae
aas
ret
outsl
mov
add
push
repz
lds
loop
cwtl
lods
call
in
aas
xchg
mov
inc
in
pop
lret
lret
call
jle
adc
xchg
pop
lcall
notb
mov
sub
aam
cmp
push
or
scas
loope
sbb
nop
push
cmp
mov
pushf
jl
sbb
jb
pop
rolb
mov
fiadds
lea
jl
sbb
push
push
int3
repz
scas
inc
insb
jg
adc
push
adc
xor
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
fs
pop
negb
test
jl
jne
int3
push
dec
xor
fcoml
cli
dec
fildl
cmp
jne
adc
push
outsb
xor
inc
add
test
divb
lock
ret
insb
xchg
cmpsb
adc
mov
push
das
and
negl
add
adc
push
push
or
xchg
pop
loopne
jo
aam
fcompl
xor
jb
bound
in
mov
push
rclb
rolb
add
jg
cmp
mov
mov
enter
cmp
push
outsb
pop
pushl
call
push
or
shrb
lcall
or
shrb
lods
les
shrb
les
loopne
mov
lock
idiv
es
mov
push
dec
push
mov
sarl
jge
cmp
fiadds
sub
adc
dec
jmp
sub
sub
in
mov
pop
les
pop
cmp
mov
inc
adc
inc
dec
cmp
iret
adc
mov
dec
or
or
sar
and
jge
add
and
je
sbb
mov
shlb
add
in
xor
stc
adc
mov
sbb
fisubrs
xor
xor
and
sub
hlt
adc
pop
push
pusha
loope
leave
lock
lock
sbb
dec
dec
push
cmp
or
into
xorb
popa
orl
and
rorb
leave
mov
push
clc
and
push
push
in
sahf
sub
inc
mov
mov
repz
mov
push
sahf
adc
mov
hlt
lods
mov
imul
lods
push
int
adc
loope
aaa
adc
punpckhdq
xor
lock
pushl
and
or
pusha
add
and
les
lea
decl
mov
rolb
pop
loopne
lret
cwtl
xchg
jge
scas
adcl
cmp
aam
jne
pushl
inc
rolb
cltd
dec
insl
push
adc
fcoms
mov
fildl
adc
scas
push
push
outsb
jae
fmuls
and
pop
or
scas
push
loopne
loope
enter
in
pop
push
sbb
icebp
xchg
adc
pop
cmpsb
xchg
jl
sbb
sbbl
jo
jo
push
fiaddl
in
dec
or
shll
push
add
add
js
jo
hlt
xor
clc
lock
shr
adc
push
jne
movb
add
cmp
jne
xchg
adc
mov
pop
and
mov
xchg
jnp
notb
cmpsl
mov
dec
aas
mov
fistl
test
hlt
or
lea
jmp
xor
xchg
fsubrs
scas
and
and
lock
jle
fimull
popf
sub
mov
cmpb
jl
push
push
dec
or
js
sbb
ss
mov
or
push
hlt
add
jns
push
les
push
nop
pop
cmp
iret
push
adc
xor
or
push
mov
movsb
push
jo
cmc
loop
push
pop
push
ljmp
adcb
xchg
movsl
mov
shrb
xor
insb
dec
pop
xor
nop
add
mov
adc
pushf
lret
sbb
push
push
shlb
adc
mov
out
mov
or
test
adc
add
dec
and
push
push
lret
jl
cmp
dec
rcll
fdivrp
jbe
xor
stos
adc
and
inc
jge
test
js
mov
movsl
mov
mov
mov
add
mov
imul
mov
inc
iret
and
fwait
inc
fldl
fmull
add
lds
out
push
mov
push
push
aaa
movsl
loopne
jae
mov
dec
push
jo
mov
cmpsl
cli
mov
leave
imul
add
mov
xorb
jno
xchg
negl
daa
iret
inc
popa
in
ds
addl
andl
cmpsl
nop
ret
aam
stos
jo
xor
je
pop
pusha
daa
fmuls
call
mov
andb
inc
pop
rolb
cmc
jmp
mov
pusha
add
adc
pusha
jo
test
add
xchg
lds
test
pop
arpl
or
repnz
cmpb
xor
je
push
pop
cmp
jb
mov
sub
cmp
mov
push
jne
cs
sub
ja
ljmp
cmp
sbb
aad
mov
and
repz
mov
push
push
push
pop
xchg
dec
xchg
sbb
sbb
pusha
mov
mov
cmp
fsts
pop
pop
iret
push
call
lret
jmp
sbb
lods
xchg
jo
sub
push
call
fbld
je
xlat
mov
add
out
cmp
add
push
hlt
push
xlat
sub
adc
pop
mov
or
scas
mov
and
jo
mov
call
mov
push
and
lea
push
cmp
decl
orl
adc
in
jmp
loop
out
mov
inc
cmp
jge
mov
mov
idiv
push
mov
push
push
mov
sub
test
hlt
fists
push
jp
fstpt
mov
sbb
add
pop
mov
jo
sbb
mov
sarb
push
test
add
mov
jmp
aam
jae
lea
add
push
in
dec
and
in
or
out
jle
pop
pusha
push
pop
pop
pop
inc
sbb
sti
sub
fsubrs
cli
sub
lea
cltd
idivl
in
push
into
jp
xor
mov
inc
fwait
daa
xor
mov
popa
jg
fs
jl
movl
adc
test
insb
sti
test
mov
lahf
xor
lahf
movsl
in
sbb
adc
mov
dec
into
fbld
pop
jle
mov
addr16
mov
clc
adc
or
or
sub
jge
jmp
mov
out
stos
mov
mov
test
jns
faddl
nop
or
add
adc
stc
mov
jmp
lea
ret
mov
pop
add
pop
add
les
or
mov
jl
jmp
into
push
mov
and
loope
or
clc
fidivl
jmp
push
xchg
iret
xor
push
cli
jle
push
pop
out
outsb
lods
mov
pop
movb
test
add
mov
jmp
sbb
jo
in
cmp
lret
mov
ljmp
outsl
jp
ds
adc
mov
pop
jne
push
gs
mov
mov
enter
add
and
leave
test
jmp
out
xchg
dec
fcoml
sub
and
dec
mov
inc
out
push
pusha
stos
sub
call
mov
into
mov
adc
imul
int3
mov
push
push
insb
in
outsb
jecxz
out
xor
mov
sbb
mov
enter
pop
iret
andb
addr16
mov
jne
xor
mov
inc
push
sbb
shll
inc
and
test
pop
add
push
lods
dec
jmp
inc
fistpll
punpckhdq
leave
adc
sbb
adc
xor
xorb
or
ss
push
mov
xchg
lea
xchg
sbb
inc
mov
aam
mov
lods
pop
arpl
xchg
sub
fdivrp
sbb
or
add
cmp
dec
leave
adc
icebp
inc
inc
inc
and
movsl
mov
adc
sub
rolb
pop
sub
popa
or
cmp
imul
pop
pushf
add
cmpsl
cmc
jp
mov
and
mov
dec
add
es
jl
dec
push
sbb
mov
or
push
insl
mov
ret
cmpsb
pop
call
push
push
pop
aam
xor
ja
pop
pop
imul
test
push
ret
mov
stos
sarl
and
leave
mov
imul
test
dec
das
pop
sti
and
and
mov
pop
mov
repnz
sbb
dec
push
ret
push
inc
lock
pop
inc
push
je
int
mov
inc
sub
clc
filds
cmp
setb
test
pop
iret
pop
cmc
mov
sub
cmp
push
incl
dec
adc
push
lea
push
mov
fadd
add
sbb
out
bnd
push
loope
pop
cmp
rcrb
push
or
add
hlt
mov
inc
xor
xor
jl
dec
mov
jnp
lock
daa
insb
dec
hlt
push
xor
and
scas
sti
xchg
cmp
call
push
inc
enter
jbe
das
push
sub
cwtl
or
aas
sub
or
inc
push
pop
aaa
cmc
cmpsl
dec
pop
testb
adc
mov
pop
jmp
jo,pt
mov
cld
cmc
dec
or
xchg
or
mov
sub
pusha
sbb
xchg
subb
push
adc
sub
sti
xor
in
aas
jmp
test
mov
je
pop
cmp
mov
mov
push
movl
ss
mov
mov
loopne
jno
push
push
sub
cmp
xor
push
outsb
xor
dec
dec
int3
jecxz
movl
int3
insl
shrb
xor
inc
sub
inc
add
add
test
icebp
in
mov
call
fisttps
jmp
les
push
push
fidivrl
dec
fsubrp
leave
jae
sub
clc
pop
add
movsb
jb
push
fadds
sbb
cmp
adc
dec
dec
mov
lret
mov
or
or
mov
add
mov
push
xor
in
push
pop
les
iret
mov
sarb
pop
push
int3
sbb
scas
test
add
call
out
icebp
jle
repz
pop
insl
inc
sbbb
pop
xchg
stc
rolb
jl
dec
and
mov
mov
fadd
jo
inc
pop
bound
pusha
xor
imul
or
mov
jne
jb
pop
call
push
notl
pop
es
sbb
fbstp
mov
pop
leave
nop
jl
pop
les
add
push
aam
xor
mov
mov
push
or
and
call
add
in
sti
sub
xor
mov
ja
adc
push
add
fiadds
fstp
jns
sbb
cmpl
adc
push
xchg
dec
mov
mov
xlat
sar
and
adc
mov
xchg
push
pushl
adc
lret
jmp
pop
ret
push
andl
dec
cmp
mov
lret
je
lcall
insb
mov
xor
sbb
xchg
mov
jmp
clc
mov
and
sub
and
mov
lcall
loope
orl
jp
cmpsl
xchg
sub
ljmp
adc
leave
js
cmp
jge
mov
mov
jae
push
add
cmp
sbbb
or
or
push
pusha
jle
in
pushl
inc
scas
cmpsb
andl
cld
mov
cltd
xchg
mov
std
push
mov
push
sub
mov
sti
adc
mov
imul
test
mov
inc
nop
data16
jne
fcompl
enter
sbb
xchg
dec
mov
cmp
in
mov
fistl
and
cmp
sete
adc
loope
and
addb
pop
sti
cmp
xchg
hlt
cmp
dec
or
push
ss
dec
dec
mov
mov
rol
sbb
and
add
push
inc
or
ret
mov
repz
add
aam
fwait
mov
push
ret
jecxz
js
sbb
jne
lock
loope
add
xchg
push
mov
and
cmp
mov
int
jmp
stos
lock
push
sbb
ja
jge
nop
xor
add
addr16
outsl
fcmovu
xor
iret
ss
cltd
adcl
popf
jnp
cmp
push
popa
insl
pop
or
push
or
pushf
jg
loopne
xchg
add
iret
mov
add
adc
xchg
cmp
pop
ja
pop
les
sbb
pop
cmp
adc
or
pop
sub
pusha
ret
or
cs
adc
mov
cmp
xor
imul
sub
mov
pushf
call
sbbl
and
loop
and
add
prefetch
pusha
fmuls
or
sbb
imul
add
sub
or
push
movsl
gs
jmp
dec
xchg
jle
jge
xor
outsl
cmp
adc
mov
or
insb
dec
push
fisubs
cld
incl
push
push
or
pop
fdivrs
adc
fcom
ret
and
arpl
xor
outsl
mov
and
or
xchg
movzwl
fimull
sbb
add
jne
and
rcpps
mov
inc
add
add
add
jmp
or
lret
lahf
push
or
aaa
add
lock
and
mov
mov
test
adc
movb
mov
int3
lahf
add
icebp
sbb
xor
repz
loop
xor
test
or
jg
in
xor
push
lret
xor
inc
aas
shlb
loopne
inc
xor
fisubs
pop
test
in
shlb
xchg
mov
std
ret
push
pushf
xor
add
add
xchg
data16
out
mov
xor
data16
movl
mov
popl
xchg
arpl
xchg
dec
sub
fsubs
adc
mov
and
test
adc
sub
cs
rolb
push
cmp
adc
xor
aaa
xor
jecxz
jo
add
aaa
add
in
rorb
and
lods
jb
add
and
cwtl
idiv
test
jge
sub
adc
daa
call
xchg
mov
aam
gs
ficompl
subb
add
sbb
xor
movsl
dec
mov
fwait
sbb
cmp
inc
or
add
mov
imul
into
aad
ds
stos
roll
xchg
addl
adc
sub
aam
outsl
jl
mov
mov
inc
pop
les
loope
in
cmp
pop
lahf
or
or
pusha
dec
pop
cmp
push
pusha
and
mov
add
mov
daa
adc
or
imul
ss
mov
out
scas
add
mov
clc
aas
cmpb
jne
mov
sbb
call
or
dec
add
jae
mov
jns
adc
xorl
cmp
js
inc
inc
lods
push
push
rcl
syscall
adc
stc
inc
movsb
faddl
inc
add
scas
mov
mov
std
add
adc
sbb
test
shrb
push
stc
arpl
adc
loopne
add
xor
xor
push
inc
inc
sbb
add
dec
inc
add
sub
adc
add
addb
stos
jb
jb
xor
push
xor
push
push
mov
pop
push
fwait
jl
add
push
sbbl
std
addr16
mov
popf
jl
mov
xor
imul
lcall
xchg
lea
cmp
xchg
call
cmpsl
popf
jg
out
push
lret
andl
pushf
mov
jmp
jbe
sub
std
add
sub
lea
enter
add
aad
mov
movsb
cwtl
lret
pusha
imul
lds
aad
fwait
lods
test
stc
inc
mov
testb
mov
add
push
cmpl
out
inc
test
sbb
mov
repnz
cs
xlat
dec
mov
push
cmp
mov
shl
ret
push
and
fisttpl
sub
cmp
leave
sbb
lods
mov
mov
lea
popf
mov
adc
cmp
xchg
sub
sahf
orl
mov
mov
imul
jno
testb
inc
cmp
dec
fistpl
adc
addl
rclb
and
rorl
outsb
push
sar
xor
rorl
jbe
jmp
pop
ret
mov
add
cltd
inc
bound
lahf
adc
subl
sub
adc
sbb
dec
jae
cmp
and
push
or
rcrb
jmp
pop
iret
xor
aaa
push
jb
fbstp
daa
out
adc
adc
xchg
cmp
pop
add
pop
pop
jb
xchg
imul
push
int
jecxz
ljmp
mov
cld
movswl
add
mov
push
cmp
xchg
in
mov
mov
in
rclb
add
cmp
add
mov
popf
inc
sti
call
mov
js
and
loop
pop
pop
xor
rcrb
scas
mov
cwtl
mov
adc
int
jb
jbe
cmp
push
loopne
add
rol
push
sbb
mov
push
nop
aad
jle
push
cltd
cli
dec
mov
pop
repnz
add
adc
add
jp
aas
mov
mov
int
ljmp
push
arpl
pop
fimull
test
xchg
fs
loop
mov
je
mov
das
daa
mov
push
cmp
pop
or
aas
rcr
sahf
xchg
inc
in
add
push
adcb
push
ret
pop
adc
xchg
push
dec
or
jns
dec
fisttpl
movsl
lret
mov
notb
ret
adc
jae
adc
mov
add
pushfw
mov
cmpsl
jle
adc
out
popa
mov
mov
mov
lods
pop
push
jecxz
maxps
mov
aaa
pop
cli
mov
pop
mov
lds
icebp
push
sbb
fdivp
in
cmc
mov
add
pop
pop
xor
xor
insl
ret
mov
push
loopne
and
mov
dec
mov
push
mov
dec
inc
inc
adc
test
call
jmp
aaa
mov
ficompl
dec
int3
inc
mov
pop
insb
dec
push
ds
mov
xchg
xchg
push
movsb
das
ss
inc
mov
push
ja
dec
or
push
iret
jmp
ss
inc
or
cmpb
pusha
test
jno
cmpsb
or
push
ss
pusha
je
jns
out
xor
nop
push
or
mov
mov
lret
inc
outsl
mov
xchg
dec
and
mov
dec
xchg
dec
add
repz
dec
sub
movsb
xchg
sub
andl
push
xchg
adc
pushf
ja
lret
pop
stos
and
rclb
inc
cmp
call
inc
sub
push
adc
jnp
pop
fiadds
fcompl
sbb
pop
pop
adc
jns
test
mov
out
pusha
pusha
add
imul
sub
jo
gs
pop
es
jns
or
enter
push
movb
mov
mov
andl
test
cli
fcoml
xor
mov
ljmp
jo
jne
cwtl
push
aam
sbb
cmp
mov
lret
lds
movsb
adc
mov
movsb
sub
xchg
cwtl
les
rol
sbbl
jns
push
pusha
rcrl
clc
add
arpl
data16
mov
xor
inc
push
mov
or
inc
lds
adcb
push
dec
maxps
pop
adcb
pop
and
inc
mov
push
cwtl
mov
andb
xor
xor
fdivr
in
or
xchg
pop
popa
testl
leave
or
int
cmp
lea
insl
je
shll
pop
test
hlt
sub
add
pop
cmp
cmp
mov
or
and
sti
aaa
aam
jbe
inc
test
push
iret
sub
xor
push
cmp
rcrl
inc
aad
les
inc
or
or
inc
cmc
sbb
sbb
stc
push
xor
mov
pop
pop
or
rcrb
jno
jl
sub
cmpl
sbb
jne
lock
mov
jle
mov
push
or
lahf
shll
push
and
dec
and
mov
mov
jns
rcll
pop
mov
test
inc
loope
lea
sbb
push
je
enter
stc
and
adcb
xchg
mov
mov
push
add
cmp
stos
mov
mov
repnz
add
inc
sub
shll
mov
xchg
mov
push
add
dec
pavgb
mov
sub
push
mov
loope
test
jge
sub
add
lret
test
fcoms
aas
push
cwtl
popf
call
das
or
xor
and
adc
test
jge
adc
in
cmp
pop
movsb
or
add
es
cmp
int3
xor
jno
mov
dec
or
leave
push
inc
push
xor
das
out
dec
push
sub
popa
and
ror
subl
int3
sbbl
sub
and
add
call
cmp
mov
push
inc
mov
loop
and
mov
pop
push
jmp
jb
out
mov
dec
roll
test
scas
pop
loope
push
adc
jl
pop
add
je
sub
add
adc
adc
aam
push
mov
add
mov
ljmp
leave
mov
sbb
bound
inc
jecxz
outsb
adc
leave
icebp
or
fcompl
cmp
xor
dec
sbb
loop
jmp
fsubl
dec
add
int
xchg
sbbb
xchg
xchg
loop
fwait
test
mov
inc
mov
mov
and
push
cld
sarb
lea
and
mov
or
insb
mov
cmp
insb
movsb
shrl
xchg
pop
or
sub
inc
pop
fmull
add
add
bound
or
inc
and
ja
dec
subl
lock
jnp
or
fwait
dec
add
and
cli
inc
call
addr16
jmp
cmpl
push
mov
and
or
xchg
pop
adc
int3
int3
push
mov
fildll
es
xchg
adc
out
test
mov
xor
gs
in
imul
inc
notb
in
pop
push
shll
mov
cmp
add
push
std
pop
mov
xor
std
fildll
adc
pusha
andb
push
aaa
mov
aam
add
std
dec
mov
xchg
mov
cmpsb
jbe
adc
push
sub
pop
cmp
aad
add
mov
xchg
jae
pop
dec
inc
and
mov
and
add
mov
jbe
push
add
fistl
mov
pop
dec
hlt
sub
push
xor
call
stos
add
jno
enter
or
leave
out
mov
sbb
cs
push
add
out
adc
or
dec
push
testb
sbb
mov
dec
stos
hlt
pop
sub
push
orb
and
cmp
pushl
dec
daa
mov
inc
xor
cmpsl
or
mov
pop
stos
js
js
pop
clc
mov
pop
lock
in
mov
leave
or
add
ds
lret
fs
movzwl
popa
pop
add
in
scas
pop
cmp
data16
mov
push
cmp
mov
sbb
sub
add
mov
or
movaps
lds
addr16
pop
add
push
or
movsl
stos
dec
std
mov
adc
jns
inc
cmp
push
mov
push
add
test
sub
push
add
dec
call
and
inc
pop
or
add
inc
jmp
ret
ret
add
adcb
mov
inc
rcrl
test
imul
ja
jae
push
pop
inc
ss
xchg
jle
and
cmp
nop
ret
push
test
sti
lea
sbbb
inc
cmpl
bound
inc
mov
inc
jb
mov
sbb
fiaddl
addr16
pop
fcmovnu
and
dec
decl
lret
cmp
jl
cmp
cmp
inc
imul
sarl
pop
sub
cmp
jle
sbbb
icebp
jne
repz
mov
push
add
into
pop
pop
dec
testl
ss
sub
test
cmpsl
xchg
sub
dec
dec
mov
out
daa
pop
pushw
push
lods
loop
xor
add
fxch
ret
shll
sub
test
mov
or
daa
imul
mov
addr16
fucomi
cmp
jnp
adc
cmp
add
push
jns
xchg
sbb
fsubs
push
jb
test
outsb
mov
imul
leave
lahf
mov
mov
push
outsl
pop
pusha
mov
cmp
std
or
ret
cli
popa
lds
jne
jnp
push
or
add
push
andb
pop
mov
push
aam
adc
pop
test
mov
test
xor
add
pop
inc
sbb
or
jo
inc
pop
jp
js
xor
bound
mov
test
cmp
repnz
in
cmpl
mov
sti
add
pop
add
stos
dec
aaa
jmp
add
jp
ss
scas
adc
lods
js
hlt
test
inc
or
das
clc
add
aaa
mov
ret
xchg
mov
or
cmp
fs
pop
mov
sub
mov
and
cmp
jae
adc
push
push
bound
sahf
xchg
push
daa
sub
inc
test
add
push
dec
add
jl
or
aad
popa
dec
popa
inc
and
or
dec
pop
sbb
add
test
xorb
rolb
push
in
xchg
daa
pusha
jae
orl
xor
sub
cltd
pop
fdivrs
lods
adc
js
nop
clc
or
in
push
mov
mov
lds
orl
dec
xor
inc
xchg
push
ds
sbb
sbb
idiv
adc
adcb
xchg
adcb
dec
call
test
je
xchg
faddp
jmp
sub
dec
inc
sti
pop
push
jb
push
adc
add
cli
jmp
or
jno
cmpsl
mov
push
inc
cmp
jae
add
scas
cmp
roll
jmp
je
inc
sub
mov
inc
inc
in
or
pop
push
mov
push
push
jno
out
push
add
sub
adc
iret
std
sbb
subl
adc
pop
daa
inc
rcrb
adc
mov
add
push
xor
add
sbb
in
cmp
out
outsb
adc
or
inc
js
xchg
pop
sub
fcmovnu
xchg
mov
lret
inc
inc
mov
sbb
add
jo
jmp
popf
inc
mov
xchg
out
add
rolb
push
add
add
movsb
scas
aad
push
cmc
mov
insl
xchg
adc
mov
or
jmp
insb
mov
push
inc
or
adc
rcr
fxch
or
inc
adc
adc
dec
pusha
andb
mov
jp
add
ret
jp
jle
mov
leave
out
icebp
movl
push
clc
loop
cmp
push
lahf
or
jbe
ret
jo
mov
adc
ret
push
ret
xchg
push
dec
xor
and
test
add
mov
jbe
lds
cmpb
xor
pop
add
cltd
or
pusha
mov
xchg
negb
outsb
push
xor
inc
push
jl
push
flds
pop
imul
adc
inc
fildll
sbb
repz
shrb
in
push
dec
aad
sbb
mov
inc
divb
popa
sub
repz
shrb
xchg
shlb
mov
and
movups
mov
mov
bound
cmp
xchg
mov
xchg
cmpsl
pop
lret
dec
or
jb
and
ficoml
jno
jbe
add
mov
mov
lock
out
jne
es
push
loop
clc
mov
push
je
inc
inc
rcrl
or
mov
push
icebp
fwait
inc
vcvtps2pd
les
mov
and
and
jns
inc
and
ret
or
mov
push
mov
flds
test
inc
ret
xchg
icebp
lods
pop
mov
jmp
fnstcw
or
outsb
rcr
add
mov
fiadds
pusha
test
pop
bnd
jo
mov
pop
les
jae
sub
fstpl
lods
stos
push
or
xor
mov
and
roll
jmp
idiv
dec
sbb
jb
dec
movl
adc
inc
add
mov
add
jnp
push
or
cmp
divb
mov
adc
notb
sbb
js
add
es
sbb
pop
add
pop
cmp
shlb
jmp
push
sbb
or
jae
mov
push
movsl
sbb
je
inc
popf
and
cmpsl
dec
aam
dec
js
jl
sub
repz
xor
cmp
aad
add
sub
lods
add
add
lea
fmuls
addb
push
fsubrs
add
aaa
movl
imulb
xor
mov
push
or
xor
xor
inc
push
je
in
arpl
jo
push
pop
popf
push
dec
lahf
sub
mov
cmp
sub
push
jo
xor
ret
jnp
mov
and
leave
daa
mov
push
loopne
mov
dec
inc
outsb
sbb
rolb
out
pop
or
mov
push
xchg
sub
dec
cmp
mov
jo
adc
pop
jmp
mov
adc
enter
inc
mov
adc
pop
or
das
sbb
repz
fidivs
dec
ja
mov
dec
icebp
add
inc
push
push
add
dec
jo
inc
mov
cmp
pop
ret
push
mov
mov
dec
sub
aas
add
ror
cmp
ss
aad
mov
loop
sar
push
mov
add
nop
xor
int
and
mov
mov
add
adc
arpl
sbb
cld
lea
ss
add
and
push
in
mov
adcb
sub
push
and
xor
int
adc
mov
adc
add
cmp
adc
rcrb
dec
push
adc
clc
pop
fisttps
cmp
lret
mov
xor
sub
pop
pop
add
pop
addl
mov
mov
shll
jbe
mov
adc
sbb
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
cmp
jbe
lea
insb
scas
cmc
and
fcom
in
je
mov
sbb
mov
shll
shrl
leave
xchg
xor
lea
fidivrl
cmp
ljmp
jp
mov
or
mov
cld
push
dec
xor
js
jo
and
ficoml
add
cmp
aaa
cmp
cmp
js
loopne
jae
mov
loope
sbb
addr16
dec
push
movsb
out
mov
jmp
aam
jmp
aaa
push
sahf
inc
lcall
inc
dec
mov
mov
mov
sbb
aas
ljmp
rcrb
stos
push
hlt
lea
push
or
cli
iret
cltd
sbb
insl
pop
xchg
inc
push
mov
mov
loop
in
add
mov
mov
sbb
add
dec
and
inc
or
xor
aad
cli
out
push
xchg
fnsave
pop
mov
jo
push
and
bound
inc
shl
leave
mov
xchg
adc
dec
sub
fs
jg
push
push
pop
xchg
cld
pop
pop
push
fistpl
sub
cltd
nop
es
mov
or
sbb
repz
add
pop
stc
addr16
or
sti
push
xchg
mov
faddp
push
cmpb
add
pop
ds
xchg
mov
sub
es
loopne
loopne
sub
cmp
xchg
pop
aad
sub
pusha
and
xchg
inc
inc
adc
sub
daa
xor
daa
std
cmp
outsb
subb
loopne
test
inc
add
ret
in
add
and
xchg
addl
aad
lods
stos
and
jmp
mov
add
pop
push
and
add
jbe
mov
mov
je
repz
imul
jl
mov
cmpl
mov
aam
pushf
inc
push
push
mov
sbb
les
push
and
add
push
inc
xor
sub
xchg
or
mov
int
add
jmp
mov
add
dec
or
fsubs
mov
cmovl
test
inc
mov
andl
xchg
test
dec
loope
test
aas
xorb
push
or
sbb
js
adc
ja
sub
fcomp
fdivs
lea
dec
adc
push
jbe
lods
add
sahf
fwait
out
scas
test
arpl
dec
adc
rorl
push
out
dec
xor
push
and
xor
cltd
or
jns
ror
rcl
cmp
lea
jno
outsb
xlat
push
outsb
insl
pop
test
lods
jl
jle
loope
movsl
push
sarl
pusha
jo
inc
insb
pop
testl
pushl
mov
xlat
mov
adc
or
jo
insl
pop
inc
pop
xor
inc
inc
push
bound
fdivs
roll
dec
loopne
mov
mov
loope,pn
mov
sahf
fwait
in
fdivrl
push
pushf
mov
lds
in
or
or
or
imull
dec
xor
or
push
adc
jo
add
xchg
call
push
ret
xchg
jne
jne
lods
in
sbb
xchg
ljmp
js
sbb
push
push
or
bound
scas
mov
push
lea
jl
push
lea
sbb
cmp
inc
mov
dec
dec
fldenv
dec
pop
ret
shr
push
adc
mov
pop
negb
push
jmp
enter
pcmpeqw
pop
test
enter
arpl
push
add
rcrb
xor
and
add
cmpsl
and
cmpsl
push
int
adc
jl
fs
negb
inc
mov
nop
scas
jmp
mov
xchg
mov
mov
sti
adc
movsb
xchg
jno
dec
inc
cmp
sbb
rolb
push
adcl
pop
neg
fwait
pop
dec
pop
jge
pop
mov
mov
movsl
sub
cltd
mov
repz
sbb
and
iret
mov
xor
cltd
rorb
lahf
mov
adc
test
popa
pop
or
mov
arpl
insl
and
fimull
cltd
mov
xlat
push
adc
addl
dec
in
outsl
and
outsb
and
rorb
fstl
pop
xor
mov
dec
arpl
cwtl
or
aam
adc
call
fdivl
jecxz
mov
fdivs
test
sbb
jmp
fwait
js
cmp
in
cmpb
dec
jmp
add
pop
lret
aam
push
inc
and
outsl
fimull
xchg
jnp
orl
push
push
mov
and
sbb
push
js
adc
lds
xor
pop
xchg
pop
cmp
loope
cmp
jne
dec
mov
out
xor
shlb
dec
mov
bound
fwait
jo
xor
js
jmp
pop
dec
jne
cmp
push
loopne
xchg
cmp
icebp
xor
lahf
cmp
push
mov
mov
andl
add
lds
push
pop
inc
imul
or
ss
cmp
mov
mov
mov
or
cmp
lcall
fdivs
loopne
inc
mov
push
adc
fsubr
aam
push
movsb
fsubr
shlb
jl
pop
orl
push
pop
into
mov
pop
movsl
inc
movsb
jmp
test
or
dec
push
push
aas
mov
sub
lea
movlps
sub
dec
sti
nop
loopne
rclb
dec
insb
push
push
push
jp
dec
mov
cmp
mov
imul
dec
add
mov
adc
rorl
cmp
roll
xchg
adc
xor
out
cmp
jecxz
push
cmp
add
dec
rol
scas
jge
add
push
rcl
jp
pop
jmp
pop
push
mov
inc
adc
dec
xor
enter
cmp
lock
shrl
and
jae
jb
or
cltd
mov
mov
add
cmpsl
adc
sbb
pop
pop
rorb
adc
adc
adc
mov
dec
or
mov
ja
dec
mov
mov
xor
lods
enter
pop
mov
jno
repnz
fsubl
push
hlt
mov
iret
cld
mov
xchg
lods
cmp
mov
jae
add
movsl
arpl
push
mov
es
push
xchg
sbb
in
sbb
aad
xor
test
dec
rolb
mov
xchg
cmp
inc
dec
xor
pop
inc
imul
mov
dec
pusha
test
outsl
lea
sahf
popa
push
inc
dec
es
pandn
pop
mov
in
dec
add
and
leave
inc
add
push
stc
ret
mov
mov
push
sbb
xlat
nop
dec
sbb
adcl
js
pop
orl
jno
lea
call
push
mov
es
xchg
imul
es
and
mov
xchg
add
cmpsb
inc
inc
shrb
imul
dec
imul
mov
fmull
mov
movsl
mov
imul
inc
lods
sbb
clc
pop
fadds
mov
enter
inc
xchg
pop
cmp
fwait
lods
adc
jo
xor
sub
pop
ret
xchg
push
jp
and
test
rol
and
push
cwtl
push
and
ror
mov
addl
je
lods
call
cmpsb
push
or
int3
pop
and
imulb
mov
add
inc
imul
xor
pop
in
xor
aam
mov
mov
or
xchg
clc
cmpsl
push
out
xor
sub
popa
sbb
insb
sbb
mov
xor
ret
pushf
xchg
xchg
cmpsl
jmp
and
jbe
cmc
in
pop
sbb
and
mov
mov
xchg
idiv
pushf
mov
rolb
pop
mov
scas
sub
popf
jb
adc
shll
or
cwtl
pop
frstor
mov
push
movl
test
inc
inc
adc
test
inc
popa
mov
cmp
xor
xor
mov
test
outsb
sub
add
jge
mov
or
adc
add
push
mov
sbb
call
or
ss
inc
arpl
sub
jb
adcb
push
sbb
inc
adc
in
add
ror
push
xor
dec
pushf
mov
jno
jne
push
and
xor
adc
mov
popa
popa
or
or
sarl
test
or
popa
inc
cltd
movsb
ss
stos
int3
pop
xchg
or
lock
imul
hlt
das
xchg
cmpsb
adc
add
sub
mov
aaa
or
push
xchg
jge
scas
sbbl
sub
inc
or
inc
mov
xchg
daa
xor
fstpt
enter
push
lea
cli
jb
lea
or
jecxz
mov
shr
adc
pop
or
jmp
lea
enter
out
sub
pop
ja
xchg
ss
adc
xchg
pop
je
mov
jo
sub
pop
and
mov
push
inc
lds
pop
scas
and
mov
ljmpw
cmp
pop
daa
call
push
insl
add
mov
and
xchg
push
cmp
testb
cmp
mov
push
jo
cmp
pop
sbb
sub
push
cmc
mov
push
clc
lret
jl
je
or
inc
dec
movsb
push
jmp
in
sub
loop
and
add
lcall
ret
mov
call
jno
sub
lock
and
das
popa
adc
mov
push
adc
sbb
mov
cmp
push
loopne
cmp
push
out
push
jmp
dec
aas
bound
pop
shr
and
cmp
insl
mov
aaa
js
test
andl
sbb
popa
mov
es
int
adc
add
mov
loope
jmp
adcb
mov
pop
leave
cli
jmp
test
xchg
and
lods
sub
addr16
mov
popa
xlat
mov
add
cld
js
mov
or
mov
inc
lea
or
pop
pusha
mov
jmp
ret
test
js
ss
or
inc
aaa
bound
push
sub
cmp
dec
sbb
fadds
sahf
push
insb
sbb
mov
aaa
dec
mov
mov
shrb
decb
dec
sub
sbb
dec
fildl
outsl
jbe
les
shll
ret
addr16
outsb
inc
or
add
movl
sbbb
and
or
add
and
out
push
lods
inc
pop
jns
mov
mov
dec
adc
aaa
lods
test
push
push
mov
pop
or
inc
mov
adc
adc
shll
outsb
imul
adc
repz
loop
and
mov
cmp
jge
cld
js
mov
mov
adc
fdivrs
das
fnstenv
pop
cs
dec
add
imul
mov
and
mov
mov
test
jmp
jecxz
sti
sarl
mov
adc
and
add
pop
mov
lea
fstl
in
jne
mov
imul
test
mov
dec
lret
mov
or
ss
mov
int3
push
pop
imul
clc
cmpb
xchg
add
sbbl
xchg
pop
rclb
test
popf
mov
inc
cmp
cmpb
je
sub
mov
push
test
int
xchg
and
jbe
sbb
test
adc
fistl
jmp
inc
data16
adc
dec
pause
nop
or
or
push
lret
mov
push
out
shlb
sub
xchg
xchg
pop
mov
movsb
push
ret
lret
mov
xchg
daa
jbe
xchg
jecxz
gs
fisubl
lret
cmp
dec
jno
sbb
inc
cmp
push
pusha
or
outsb
cmp
cmc
test
xor
cmpl
dec
sub
add
jmp
mov
adc
rolb
inc
xchg
or
popf
pushf
jmp
or
inc
enter
cmpsb
mov
mov
test
subw
adc
test
test
sbb
mov
adc
je
xor
add
icebp
push
dec
jmp
push
je
incl
inc
adc
jo
fdivrl
mov
push
jle
dec
outsb
xchg
shlb
aam
dec
and
dec
sbb
mov
sbb
cmp
inc
xchg
sbb
pop
push
test
in
xchg
lock
sbb
lea
mov
add
mov
aas
mov
in
int3
andl
les
test
xchg
ficomps
roll
shrl
fdivl
push
dec
nop
mov
dec
mov
nop
fidivrs
cmp
mov
push
shl
adc
sbb
pusha
testl
push
adc
sbbl
in
nop
rolb
xchg
mov
push
push
xchg
movsl
cmp
or
dec
cwtl
test
or
push
jp
push
or
inc
jmp
cmc
jns
rorb
fcomp
fstl
mov
filds
aas
dec
pop
and
dec
ret
cmp
mov
imul
jo
nop
cs
cmpsb
pop
lods
or
jge
pop
cmp
out
cmp
shld
fisttpll
cmp
movsb
sub
mov
add
or
lahf
mov
ret
shlb
and
sbb
sub
adc
add
pop
and
jl
in
sbb
fcomip
es
sub
and
sbb
add
pop
mov
mov
mov
sbb
ficoms
sbb
nop
cmp
jg
push
mov
add
mov
xor
push
xchg
adc
scas
pop
and
mov
sub
xor
imul
mov
and
aaa
fistps
lcall
dec
add
shrb
vmread
in
sub
adc
adc
nop
addr16
pop
xor
or
dec
pop
add
sbb
leave
and
pop
add
push
test
pop
ret
test
and
inc
stos
outsl
popf
push
sti
push
loope
and
jp
movsb
ret
cmpl
push
imul
fldl
cltd
mov
and
and
imul
sub
scas
xor
ret
mov
or
or
cld
pusha
mov
daa
add
sub
popf
mov
xor
push
lea
adc
scas
push
or
xor
push
jmp
ret
push
cltd
adcl
jo
cmp
daa
adc
das
mov
subl
mov
add
lods
pop
insl
mov
nop
adc
leave
add
sbb
loopne
imul
mov
xor
je
mov
sub
enter
and
add
gs
sub
fcompl
shrb
sub
xchg
add
pushf
inc
aaa
popa
and
daa
ss
pop
dec
cmp
lret
and
bound
mov
scas
cmp
int3
jno
scas
inc
pop
cmp
xchg
mov
js
aaa
cwtl
xlat
jp
push
pop
dec
inc
dec
addr16
test
jge
adc
add
movsb
outsl
jne
cmp
rorb
push
pop
in
mov
sub
cmp
mov
mov
adc
jo
insl
mov
sbb
test
imul
and
imul
movsb
mov
ja
sub
orb
pushw
sub
sub
orb
pushl
jp
test
out
push
push
push
cmp
movsl
xlat
test
sbb
add
push
mov
xor
push
pop
leave
arpl
push
jp
adc
ja
xchg
or
push
clc
cld
dec
imul
mov
pop
push
cmp
ljmp
add
out
push
sbb
shlb
xchg
in
dec
push
icebp
jge
outsb
or
pop
mov
push
cli
dec
inc
out
lret
js
clc
jae
stc
ficomps
dec
jbe
decl
ljmp
pop
lea
dec
out
inc
lcall
aas
sbb
movsl
cmp
jne
mov
ljmp
xor
jmp
lea
popf
and
add
push
loopne
sbb
test
stos
sbb
jns
aad
outsb
pop
mov
ds
sbb
test
push
mov
cmp
hlt
push
add
pop
pop
sub
sub
jecxz
pop
test
xchg
movsb
lret
push
push
mov
pop
and
leave
mov
push
fs
jnp
jno
cmp
add
cmp
add
or
jmp
gs
sub
mov
out
sbb
sub
sub
dec
std
push
fadds
outsb
lret
cmp
sbb
loope
push
xchg
lods
mov
arpl
divb
mov
das
or
push
inc
pop
jge
mov
push
mov
ds
mov
divb
pop
jge
scas
xor
fists
into
push
jo
adc
adc
mov
add
push
cmpsb
or
ret
and
fcmovnbe
mov
sub
mov
leave
add
add
mov
pop
pop
or
or
mov
jge
jmp
cmp
sub
push
sbb
mov
ds
pop
adc
adc
pop
nop
inc
iret
mov
lea
jmp
jecxz
mov
enter
cmpsl
adc
jle
loope
mov
mov
xor
out
push
jp
adc
shll
add
pop
int
mov
and
cmp
sbbl
fwait
push
and
test
leave
push
xor
sbb
xor
leave
orl
leave
and
xlat
mov
iret
cwtl
pop
push
xor
inc
and
xchg
sbb
fistl
ret
push
push
cmp
aam
and
adc
inc
dec
negl
in
mov
push
sub
mov
mov
jo
loopne
adc
xchg
and
dec
xchg
ss
or
out
dec
xchg
movsb
jb
test
dec
or
add
and
push
push
aaa
dec
dec
pop
mov
jl
mov
push
push
sbb
mov
subb
test
push
pop
sub
pop
and
in
push
cmp
leave
icebp
dec
and
pusha
push
mov
test
push
sub
push
adcl
adc
nop
and
dec
and
or
or
or
cmp
jo
enter
lea
push
mov
add
dec
insl
adcl
adc
and
lock
dec
ret
loopne
add
add
ret
cmp
sub
or
das
adc
in
inc
dec
shlb
xchg
fwait
mov
push
xchg
rolb
jmp
xchg
dec
and
dec
xor
push
mov
add
in
cmp
in
fcomp
jp
xor
mov
nop
xchg
cmp
out
pop
add
lea
shll
inc
rorb
or
fs
and
mov
mov
push
add
inc
call
xlat
inc
fsubl
addl
aaa
adc
xor
xor
add
lock
jne
mov
sahf
and
push
xchg
mov
fmull
lock
xor
je
mov
hlt
mov
rorb
add
or
and
shrb
mov
call
add
jno
lret
in
mov
or
out
stos
stos
adc
and
or
stos
imul
int
lods
push
inc
push
int3
ss
inc
or
cmp
sbb
aaa
or
clc
adc
idiv
cmp
pop
mov
je
inc
xlat
adc
lock
mov
daa
mov
dec
or
int
arpl
fcoms
pop
push
cwtl
xor
lods
mov
mov
repnz
add
adcl
jp
inc
cmpsl
mov
je
add
fsubr
xor
rcrb
fsubr
inc
xor
int
xchg
daa
dec
lods
push
jmp
jnp
and
data16
sub
and
in
and
xchg
or
sub
jmp
jnp
push
adc
sub
push
rcrb
rcrb
xchg
insl
mov
cmp
xor
call
adc
inc
add
dec
popa
daa
sbb
pop
cmp
push
or
adc
rorb
push
mov
xbegin
push
pushl
and
or
and
into
pushf
orl
loopne
shlb
pop
xchg
repz
or
inc
leave
dec
add
repz
repnz
orl
sti
xor
and
lods
and
and
cmpl
jne
xchg
outsb
and
xchg
clc
inc
mov
dec
xor
fidivrs
push
ja
dec
dec
dec
or
and
jne
push
dec
jg
jg
loop
call
jge
add
xor
add
sub
cmp
sar
lock
je
and
inc
aas
pop
leave
leave
shlb
nop
add
orl
inc
cmp
dec
daa
or
mov
arpl
sbb
inc
mov
cmp
push
lods
ja
mov
and
enter
sbb
sub
and
icebp
lcall
sbb
daa
add
repz
sbb
int
cwtl
adc
es
add
int3
rorl
and
fnstenv
mov
sub
cmp
ret
test
xor
sub
pusha
pop
mov
outsb
inc
in
jge
pop
icebp
and
or
ret
in
stos
shrl
inc
movsb
jl
in
cltd
mov
sbb
scas
mov
pop
mov
nop
sbb
test
cs
stc
mov
dec
in
sbb
mov
call
insl
pop
sbb
cwtl
sbb
rolb
dec
dec
and
xor
aam
add
add
aam
pop
out
lea
ret
push
push
lods
xchg
movsl
mov
xor
or
push
adc
iret
popa
sbb
notl
xor
repnz
or
or
pop
or
pop
les
inc
fstl
dec
fsubrl
bnd
jmp
jae
inc
add
outsb
mov
cmp
das
rcl
sub
je
mov
pop
mov
mov
hlt
jmp
ljmp
add
push
loopne
mov
loopne
add
call
cltd
adc
in
push
imul
arpl
fsubrl
push
mov
push
stc
mov
pop
and
repnz
mov
out
sub
adc
sbb
jecxz
push
or
lods
pop
ret
pop
xor
xchg
sbbl
mov
jo
push
or
mov
push
fcmovb
sub
xchg
dec
inc
mov
popf
lret
enter
mov
mov
pop
enter
popa
sbb
sbb
mov
fcoml
xchg
into
pop
jbe
add
push
sbb
jno
xchg
sub
fmull
sub
xor
cmp
sbb
popf
mov
xor
or
gs
test
or
sub
pushf
lcall
hlt
sub
lea
sbb
movsb
arpl
or
dec
pop
xchg
leave
push
sbb
rorb
mov
lret
xchg
call
dec
imul
das
andl
sbb
pop
testl
and
aaa
imul
mov
out
dec
push
call
clc
cmp
cld
dec
adc
or
pop
add
rcrb
cmp
sbb
adc
cmp
leave
adc
aam
pop
loopne
mov
or
popl
xchg
inc
mov
pusha
add
add
sbb
mov
inc
cs
cmp
mov
and
inc
pop
loop
xchg
inc
cmp
pop
sbb
call
ret
test
mov
and
inc
pop
pop
cwtl
or
jns
sub
jae
and
orb
inc
lea
enter
test
push
xchg
adc
jb
mov
inc
shlb
arpl
push
mov
mov
add
stos
ficoms
lret
or
push
lock
mov
pop
ja
fmull
cmp
xor
push
pop
xchg
jge
iret
fdivrl
dec
lahf
adc
mov
les
or
sbb
mov
mov
inc
xor
push
enter
sub
cmp
fsubrp
pop
jb
pop
lea
pop
push
push
cs
divl
dec
xor
pusha
push
sbb
push
daa
xlat
sbb
mov
push
push
cmc
bsr
into
mov
je
jo
push
clc
stos
incl
mov
pop
sar
xchg
fucomi
add
fisubrs
jge
jb
xor
xchg
sub
push
xchg
sahf
push
sbb
xrelease
xchg
movsb
push
jo
pop
filds
int
ljmp
adc
nop
or
or
cmp
sbb
es
jmp
sbb
add
cmp
dec
dec
xor
inc
add
xchg
xchg
sub
loop
enter
js
adc
push
adc
jbe
cli
lods
sbb
jnp
pop
push
and
js
es
lods
out
rol
or
rolb
shlb
add
cmp
sbb
cld
enter
sub
out
cli
add
or
clc
lods
sti
fnstsw
ja
add
jmp
test
add
push
or
or
push
lods
subb
jecxz
jb
push
mov
cmp
adc
addb
leave
cmp
lock
inc
cmpsb
enter
sbb
adc
mov
mov
pusha
out
xor
push
fdivrs
dec
fmuls
stos
out
and
lods
add
stos
push
lea
add
dec
loopne
shlb
mov
les
xchg
or
and
push
push
pop
int3
data16
bound
mov
push
outsl
push
into
push
xchg
pop
orb
test
sub
add
cmp
cmp
je
jecxz
xorl
xor
cmp
scas
fisttpll
pop
add
inc
icebp
push
add
movsb
dec
add
movb
dec
xor
pop
hlt
aaa
cltd
cli
xor
add
lcall
jl
sbb
jne
mov
fstps
addr16
dec
test
mov
shl
pop
mov
or
jno
test
movl
insl
push
lea
mov
mov
movsb
cmp
pop
mov
adc
hlt
inc
push
mov
movb
inc
and
jns
sub
sub
insb
sbbb
aam
test
mov
xchg
xchg
sbb
mov
cwtl
es
pop
jnp
push
jne
mov
mov
popf
test
push
sub
int3
scas
cmp
das
or
push
push
sbb
loopne
lcall
or
out
cmp
push
and
or
inc
movl
jl
popa
nop
inc
dec
pusha
out
nop
xchg
push
push
dec
add
xchg
add
and
out
adc
sti
mov
inc
push
xchg
fucomi
dec
and
or
repz
jecxz
sbb
fcoml
sbb
das
popa
hlt
out
rorl
cmp
push
add
inc
cmp
pop
mov
mov
xchg
xlat
mov
add
inc
dec
loope
scas
jle
lea
mov
sbb
mov
pop
mov
adc
xor
sbb
cmp
pop
pop
icebp
call
lock
and
xor
inc
pop
leave
add
add
scas
sbb
adc
mov
push
push
add
mov
xor
inc
or
iret
sti
pop
jae
mov
cmpb
cltd
inc
test
test
xchg
cs
mov
adcb
dec
mov
jae
xlat
inc
ljmp
xchg
addl
and
into
jns
push
test
adc
sub
mov
insl
push
dec
pusha
sub
std
and
outsl
cmp
popa
push
js
jo
add
test
xchg
mov
or
cmp
xor
adc
inc
andl
or
js
ret
sub
cld
sbb
inc
push
sub
xchg
jnp
xchg
dec
ss
aam
popa
or
mov
inc
jp
mov
mov
rol
mov
xchg
aam
cmpsl
decl
mov
push
arpl
jecxz
popa
add
movsbw
or
jno
jae
mov
je
or
je
adc
movsl
jb
je
dec
inc
push
arpl
xor
mov
pop
movl
inc
fld
ret
das
adc
add
scas
dec
cmp
adc
je
daa
rcll
or
mov
or
shrl
xchg
mov
mov
nop
mov
std
repz
pop
dec
sbb
shl
and
mov
adc
xor
cmp
and
jge
lock
mov
hlt
aam
dec
pop
push
lea
sbb
aad
mov
pop
sub
inc
cmp
std
push
sub
sbb
push
lea
add
and
sbb
mov
loopne
cmpsb
push
js
out
add
xchg
adcl
fucom
cs
xor
inc
jno
jmp
cmp
adc
js
pushl
mov
mov
mov
aaa
lret
mov
fistps
int3
sbb
or
mov
inc
fwait
bound
popf
push
fcomps
in
and
sub
call
xchg
or
jmp
add
add
push
dec
test
hlt
cmp
sbb
push
inc
shrl
mov
pop
call
or
cld
push
ja
test
jne
loopne
popa
insb
rolb
popf
inc
icebp
jb
push
mov
js
je
cmp
push
mov
sub
loopne
inc
add
mov
push
js
cwtl
mov
sub
add
sti
imul
dec
inc
adc
fpatan
in
xchg
jbe
push
add
rolb
inc
push
nop
call
adc
stos
lahf
lahf
and
mov
dec
dec
mov
rorl
xchg
add
sub
jnp
shr
inc
lock
dec
or
pop
cmp
push
in
stc
xor
xor
mov
xor
inc
aaa
icebp
enter
mov
daa
cld
cmc
icebp
jnp
pop
movl
call
xor
ret
mov
cmp
pop
xchg
mov
rorb
adc
lock
mov
loope
test
dec
mov
pop
inc
bound
orl
mov
mov
adc
xchg
and
mov
mov
dec
xor
pop
mov
inc
xor
jne
or
sti
mov
movl
sbb
inc
inc
dec
inc
lea
in
mov
inc
xchg
mov
mov
das
icebp
les
push
xchg
pop
aaa
add
test
pop
addr16
imul
push
mov
and
jnp
cs
test
and
ret
push
inc
sbb
loopne
in
in
adc
cmp
loopne
add
jne
subb
sarl
inc
andl
push
fsubs
push
repnz
adc
push
and
out
inc
pop
mov
xor
cmpsb
sub
sub
jne
mov
clc
sub
lcall
les
push
add
push
es
loop
push
push
xor
mov
movsl
or
pop
lock
es
popf
adc
fsubs
mov
mov
icebp
dec
jne
dec
loope
xchg
push
cmp
jne
sbb
jo
jle
or
lods
xchg
fiaddl
sbb
roll
dec
aas
sbb
mov
xor
test
mov
dec
pushf
adc
repnz
xchg
nop
inc
pusha
xchg
movsl
pop
mov
lock
movsl
adc
pushl
pushf
cwtl
sub
mov
loopne
hlt
and
sahf
scas
sub
add
xchg
test
xchg
pop
inc
sub
jp
cmp
jo
movsl
in
lret
dec
cmpsl
movsb
mov
inc
xchg
ds
push
inc
orl
cmp
jnp
adc
stos
sbb
inc
fisubrl
pop
add
sbb
imul
fisttpll
mov
cwtl
xlat
add
push
pushf
cmp
jle
cmp
js
add
mov
xorl
pop
xchg
xchg
fistl
push
popf
hlt
sub
cmpb
inc
mov
cli
xor
push
pop
adc
mov
inc
adc
and
jl
mov
and
cmp
dec
inc
push
jg
mov
add
outsb
push
add
leave
xor
inc
nop
out
mov
add
sub
mov
subl
jne
sub
jb
cltd
push
imul
cmp
add
lock
xor
xor
push
and
outsl
xchg
jo
add
test
in
jbe
add
dec
and
sub
mov
add
mov
sbb
pop
dec
push
pop
in
jnp
add
mov
cli
movsl
mov
in
shll
frstor
std
sbb
cmp
lcall
cmp
inc
cmp
jo
or
jnp
lods
in
adc
jnp
nop
xrelease
or
dec
popa
fsubs
pop
xchg
cmp
test
push
daa
lea
jae
dec
jecxz
xor
add
sahf
xchg
jne
mov
push
bnd
push
fsts
lahf
push
push
clc
xor
mov
adc
cmc
jno
pop
xchg
mov
pop
dec
inc
sbb
xlat
inc
xor
or
mov
xor
dec
jne
mov
and
shrb
sbb
pop
jecxz
jb
in
les
dec
rol
out
cmp
imul
jb
icebp
jmp
and
dec
push
cmp
test
cmpsl
jge
mov
mov
or
push
xchg
jo
aas
mov
add
push
cmp
mov
push
sub
cmp
dec
add
and
mov
dec
pop
movsb
push
push
mov
jmp
cmp
mov
mov
mov
or
pop
int3
je
mov
movsl
mov
ret
ds
bound
call
or
bound
loope
aam
or
pop
jb
mov
add
push
les
ss
or
sub
insl
xorb
dec
mov
inc
jge
mov
pop
cmp
dec
push
and
imul
push
shrl
xchg
inc
xor
xchg
or
add
cs
and
andl
scas
aas
inc
adc
popa
daa
add
mov
punpckhwd
sub
rorb
add
scas
aam
in
lock
mov
mov
rcll
cmp
popa
cmpsl
add
fwait
in
in
shll
jae
fsubrs
mov
xor
loopne
cmp
test
pop
push
loopne
sub
cwtl
or
loopne
push
or
pop
mov
test
push
pusha
mov
lea
lret
xadd
inc
pop
add
jmp
dec
sbb
out
mov
and
stos
add
mov
jb
daa
push
mov
leave
cmpw
sbb
popa
shlb
push
fsubr
xchg
lret
ss
push
pop
add
xchg
mov
pusha
sar
into
add
push
inc
push
je
mov
andb
jns
adc
mov
jmp
loopne
addl
scas
adc
xorl
xchg
lret
test
fmuls
aas
pusha
jne
push
dec
push
add
cs
sub
jmp
out
dec
outsl
jg
mov
dec
movzwl
jnp
add
pop
out
dec
aam
or
rcl
xchg
pop
xchg
xchg
repnz
pop
fidivrl
sbb
add
dec
or
sub
das
cmp
and
fldl
push
xorl
insl
adc
pop
dec
sub
nop
inc
bound
add
sub
cltd
nop
cmp
add
adc
add
std
clc
lea
mov
adc
outsb
dec
arpl
dec
pusha
icebp
add
ss
jb
fs
push
loope
mov
or
call
push
pop
xchg
dec
fwait
xor
jo
lea
jmp
push
jle
xor
daa
mov
lock
jbe
rclb
fadds
push
and
movsb
roll
inc
or
stos
sub
xchg
pop
sbb
ljmp
sbb
inc
sbb
sbb
and
inc
adc
sub
mov
pop
mov
cmp
mov
adc
add
add
mov
sar
xor
pop
xor
addl
test
arpl
popa
lock
mov
mov
ss
nop
or
mov
lds
mov
movsb
adc
and
iret
mov
leave
cld
arpl
stos
dec
mov
in
add
adcl
jmp
and
mov
dec
dec
or
add
adc
andl
arpl
shl
mov
cmpsl
xchg
push
popa
out
mov
push
nop
pop
in
push
sbb
add
notb
inc
add
sub
pop
jmp
push
pop
cmpb
jno
push
cmpl
inc
jp
mov
jne
jmp
cmp
push
cs
sbb
data16
pop
adc
mov
leave
in
mov
iret
in
fcoml
or
in
and
mov
xor
lret
add
push
imull
outsb
inc
hlt
je
call
xchg
incb
pusha
test
jne
fcoml
aad
add
data16
add
sbb
divb
and
les
add
scas
push
and
pop
mov
xor
inc
icebp
mov
lods
pop
push
pop
or
push
jo,pn
in
push
dec
jo
sub
add
cmc
inc
pop
or
mov
ja
nop
jp
aam
inc
adc
outsb
jle
add
mov
loopne
sarl
xor
mov
xor
daa
or
add
sbb
mov
stc
dec
jle
pop
mov
cmc
dec
imul
cld
mov
cli
dec
loope
lea
xor
shll
shlb
adc
lahf
in
sub
lahf
adc
add
pop
pop
inc
mov
mov
test
mov
shrl
jge
dec
and
pusha
mov
fsubrs
pop
pop
push
jp
xchg
shlb
sub
xchg
sbb
jb
and
shlb
rclb
ja
mov
adc
xor
jmp
push
push
mov
dec
enter
addl
mov
or
xor
push
xchg
pop
and
test
stos
ljmp
in
inc
test
push
dec
daa
sub
xchg
dec
xor
adc
or
pop
xchg
jp
dec
dec
inc
inc
xor
inc
jnp
lea
mov
inc
push
jg
sub
and
inc
or
push
or
inc
push
jns
mov
mov
stos
pop
aaa
movsb
cmp
adc
xor
les
outsb
in
cmp
pop
ret
push
push
mov
dec
clc
inc
sub
pop
push
push
inc
add
mov
popa
inc
sahf
sbb
inc
outsl
shlb
cmp
dec
pop
sub
in
out
popf
add
mov
popa
dec
and
cmpb
dec
pop
inc
push
jle
jne
jp
out
cmp
repz
and
push
shrb
rcr
mov
sub
sub
sbb
test
sub
mov
inc
cwtl
jne
push
cmp
pop
fidivrl
sbb
rcrl
jne
and
dec
dec
fnstsw
fidivrs
test
movsb
xor
pop
adc
lahf
adc
mov
push
fadds
add
pop
sub
sub
jae
push
adc
fistpll
in
jge
repnz
inc
int3
push
rclb
lret
mov
sbb
inc
pop
push
shlb
add
pop
cmpb
pusha
outsb
in
and
cmpsl
pop
subl
mov
or
fldlg2
dec
rolb
mov
add
push
call
add
ds
sarb
aam
push
pop
out
xchg
js
or
movsb
xchg
inc
shr
dec
lret
insb
sub
insl
mov
insb
or
sbb
decl
stos
rorb
pop
pop
cmp
fimuls
pop
test
push
movsl
xchg
ror
jnp
adc
in
cmp
ret
repz
dec
or
adc
or
pop
mov
adc
icebp
mov
sub
add
and
sahf
insb
sub
outsl
adc
clc
push
xor
lahf
and
pop
and
shlb
enter
dec
mov
jmp
mov
mov
xor
dec
and
fs
arpl
nop
push
in
jp
popa
mov
mov
push
xor
xor
and
lods
xchg
dec
adc
inc
repnz
popf
decb
xor
les
or
bound
dec
add
pushf
inc
adc
sub
adc
cmc
inc
or
pop
roll
xor
sub
cmc
xor
popf
or
loope
clc
iret
pop
ljmp
inc
sbb
enter
jg
clc
or
mov
das
or
fcmovnb
jne
aaa
or
fnstenv
pushf
sbb
in
stos
ret
xchg
mov
icebp
push
mov
bound
or
sbb
pop
mov
fsubp
repnz
roll
push
pushf
inc
mov
adcb
movsl
push
stos
sub
xchg
popa
add
mov
in
repz
mov
add
add
bound
jne
push
mov
rorl
scas
xchg
and
sbb
sar
and
pop
add
and
inc
mov
repz
shll
xor
or
cmp
mov
mov
repz
rcrb
repnz
pop
mov
push
and
mov
inc
cltd
pop
push
dec
out
es
or
sarl
popfw
or
popa
sbb
mov
cmp
mov
arpl
mov
add
mov
inc
arpl
repnz
insl
ret
push
scas
or
inc
cmp
jno
xor
rolb
adc
add
rcr
xlat
lea
mov
loopne
shr
fwait
test
out
xchg
lret
pop
pop
in
or
pop
xchg
dec
arpl
push
or
or
add
je
nop
inc
in
test
xchg
add
push
mov
jge
xor
daa
add
or
sbbl
dec
jo
adcl
nop
and
xchg
mov
or
addb
xor
and
add
pop
pop
pop
and
leave
imul
mov
sarl
cmpsl
lret
or
mov
jle
dec
and
xchg
cmp
test
adc
je
mov
lahf
dec
mov
jp
sub
sub
imul
sub
movsb
lcall
push
sbb
inc
popa
inc
aaa
lds
fs
movaps
push
adc
testl
xchg
ficomps
lea
mov
jnp
loopne
movsl
pop
cmpsl
adc
push
fisubrs
aas
pop
pop
xchg
cmp
lahf
sbb
aam
dec
popa
adc
mov
push
aas
sti
js
adc
movsl
sbb
sbb
ret
push
lret
insl
shlb
add
lret
add
cmp
lock
test
insb
xorl
in
pop
add
insb
jno
fisttpll
or
pop
mov
dec
and
pop
jno
mov
es
test
and
sub
sbb
add
xchg
add
shlb
push
jns
popf
cld
icebp
dec
or
pop
sub
in
push
dec
scas
call
movsl
pushf
dec
mov
addr16
xchg
aam
jmp
das
and
clc
push
mov
sub
add
aas
xor
dec
cwtl
data16
jns
inc
movsl
jecxz
jmp
add
adcl
cmpsl
jb
or
xchg
or
gs
xor
or
test
gs
mov
rorl
movsb
dec
dec
fmull
movsb
and
inc
test
add
xchg
xchg
ficoms
fdiv
pop
push
push
xchg
fs
mov
lea
das
cmp
daa
push
or
add
push
and
or
adcl
movsb
movb
std
xor
int3
cmp
cs
in
cmp
and
cwtl
sbb
cmp
sub
inc
movsb
adc
lret
or
sub
jle
dec
lock
cmp
inc
ret
xchg
jns
test
aaa
and
iret
nop
sbb
push
mov
add
sahf
jne
lcall
shll
pop
dec
lcall
and
push
pop
dec
push
mov
ret
and
inc
cmp
and
loope
jmp
stos
mov
push
lahf
jnp
rorb
xchg
dec
push
je
xor
aaa
inc
jno
cmp
xchg
push
mov
outsb
cmpsb
push
js
inc
add
iret
imul
push
and
adcl
leave
push
scas
xchg
fiadds
sbb
xor
out
dec
push
adc
push
jne
ds
mov
add
adc
cmp
out
mov
test
loope
add
movzwl
add
sbb
iret
pop
pop
mov
add
lret
push
and
pop
inc
dec
mov
inc
or
pop
xchg
popf
sar
shrb
rcl
cmp
mov
lods
jns
sub
daa
add
and
loopne
ret
adc
jb,pn
push
shlb
inc
jo
sbb
push
or
jo
ret
je
ret
lods
cmpl
aas
add
or
xorl
xor
add
or
std
or
jbe
jg
es
xor
dec
dec
jns
inc
jno
test
movsb
adc
movsl
imul
rorl
xchg
push
stc
out
push
mov
enter
adc
xchg
mov
sbb
in
or
gs
mov
jns
mov
xor
into
or
adc
mov
mull
push
xchg
ja
leave
lds
jo
test
jns
pop
pop
jl
or
push
jns
shrl
and
mov
add
sub
inc
adc
sub
xchg
inc
clc
sub
cmp
mov
pop
push
jbe
pop
xor
adc
pop
mov
mov
adc
push
popf
movsb
or
jle
movsb
pop
jp
and
aaa
pushf
pop
lea
mov
pop
jecxz
push
xlat
or
adc
movsl
xor
clc
push
pop
mov
xor
pop
add
popa
testl
fwait
push
and
adc
nop
dec
and
xor
cmpsl
inc
lds
pop
add
sbb
leave
outsl
sub
sbb
jne
jne
cltd
add
fdivs
sbb
loopne
mov
addl
sbb
jno
add
or
pop
rcll
add
fsubs
dec
loop
movsl
imul
sub
dec
jbe
inc
sub
je
sub
scas
jns
test
icebp
push
push
cmp
jp
iret
sub
shll
push
mov
push
lock
xchg
xor
dec
dec
sbb
int
call
ffreep
sbb
add
pop
in
fs
inc
es
and
push
or
in
aaa
or
mov
ficoms
mov
adc
aaa
sbb
push
jmp
jb
popf
pop
cmp
dec
mov
mov
push
push
repnz
repz
sahf
inc
or
dec
cmp
xor
push
push
adc
push
xor
fistl
and
pop
xor
lock
push
stos
and
adc
inc
or
cli
sub
dec
jae
adcl
adcb
cmp
repz
sbb
fwait
mov
mov
add
push
mov
ja
mov
loope
push
push
mov
es
push
dec
and
rcll
mov
orb
jge
sbb
cli
add
mov
fimuls
aas
add
inc
jbe
fbld
mov
ja
lds
dec
in
sub
mov
and
push
enter
scas
jp
outsl
push
mov
push
and
mov
sbb
pop
jmp
repnz
inc
mov
and
sbb
cmpb
adc
inc
pop
xchg
dec
dec
pop
mov
test
and
and
bound
xchg
or
sti
add
ret
xchg
add
inc
mov
mov
outsl
test
dec
mov
sbb
cmp
add
or
in
addb
push
adc
mov
subb
push
shl
push
sbb
and
cmp
imul
iret
add
inc
sub
enter
popf
nop
popa
xlat
or
xchg
or
aam
mov
cld
mov
aas
adc
or
sti
add
push
adc
mov
jg
std
ficoml
sub
test
or
jecxz
mov
xchg
shlb
sub
lea
call
test
adc
cmp
dec
or
sbb
sub
sbb
pusha
sbb
loope
xor
loopne
cwtl
les
or
add
or
and
mov
mov
or
mov
ljmp
mov
adc
fisttpll
mov
inc
mov
mov
sub
mov
orl
mov
or
popa
cmpl
cs
mov
xor
pop
or
xchg
inc
loope
mov
cmp
jb
and
ljmp
fs
mov
xchg
lock
pop
leave
add
xchg
inc
adc
inc
stc
rcr
mov
sbb
movsb
lea
inc
push
jle
mov
adc
jne
das
fdivr
push
movsb
cwtl
cmpsl
insl
iret
push
adc
aaa
fisubrl
push
xchg
mov
xor
mov
insb
mov
pop
pop
mov
inc
lock
cld
rolb
push
sbb
jne
mov
or
sbb
aad
fsubs
cmp
pushf
xlat
adc
test
scas
push
pop
ret
pop
in
jle
jno
jmp
inc
and
into
inc
dec
inc
lods
push
mov
push
cltd
jno
sbb
mov
lods
imul
sub
sub
sub
jnp
pop
mov
xchg
add
hlt
adc
push
add
and
dec
test
push
cmp
aad
test
movsb
addr16
sbbb
and
mov
sub
sub
in
pop
mov
enter
cwtl
clc
push
cmpsl
js
subb
into
push
cmp
push
jno
xor
lods
imul
out
mov
or
xchg
or
mov
adc
mov
and
jl
shll
mov
data16
pop
ret
and
nop
push
push
rcrb
jg
cltd
inc
add
movsl
mov
lahf
dec
sbb
flds
sub
decl
out
sbbl
push
sub
lea
push
fiaddl
inc
add
movsb
adc
xchg
mov
call
sbb
lret
push
shrl
mov
cs
hlt
dec
add
or
push
rcll
rcll
adc
insl
dec
xchg
test
js
dec
loopne
mov
pop
es
scas
adc
fcom
lds
nop
data16
pop
lock
push
cmp
add
mov
dec
fwait
push
faddp
loopne
mov
pop
mov
pushf
xor
sub
sbb
pop
addr16
int3
and
pop
mov
rcrl
pop
add
jo
outsb
xor
pop
xchg
mov
movups
inc
dec
aad
mov
lock
or
mov
pop
add
iret
inc
lods
stos
stos
movsl
in
add
inc
loop
push
out
dec
call
xor
inc
adc
dec
arpl
and
in
and
adc
adc
mov
dec
filds
or
clc
movsl
mov
mov
sbb
mov
in
push
sbb
add
repnz
fs
push
lods
add
mov
dec
in
inc
xlat
push
jge
sub
adc
daa
rorl
inc
rorb
pop
or
sub
fldz
and
add
and
cmp
and
or
in
fwait
sub
cmp
lret
mov
xchg
sarb
push
sbb
incb
or
inc
ret
cmp
push
ret
mov
aad
test
cltd
adc
in
inc
sub
push
pop
or
jl
out
add
pusha
aas
gs
loopne
jge
insl
pop
mov
fisttpll
mov
mov
and
dec
and
and
xor
fdivs
mov
dec
movsl
mov
mov
xor
sbb
call
dec
xchg
pop
fwait
pop
jecxz
sbb
cmpl
pop
mov
add
mov
pop
inc
faddl
jg
jle
clc
mov
loopne
mov
jle
vmovddup
adc
cmp
push
cmp
jle
cmp
fisttps
push
cmp
cmp
inc
add
pop
cmpb
inc
inc
jmp
sbb
movw
xchg
ljmp
dec
cmp
les
push
mov
cltd
pop
idiv
mov
mov
fisubrl
rorb
sbb
dec
test
cmpsb
sub
mov
add
adc
inc
sbb
or
cmpb
mov
push
testb
fnstenv
push
jbe
inc
shrb
push
mov
ljmp
repz
ret
dec
mov
data16
cmp
sub
cwtl
ret
lea
and
mov
movsl
or
repz
add
dec
dec
sub
adc
adc
cmp
and
sub
xchg
pop
pop
daa
int
cmp
push
js
inc
data16
inc
push
jo
mov
cmp
adc
shrl
insl
loopne
cltd
in
push
or
sbbb
inc
inc
dec
popf
sbb
fistpl
pop
adc
add
insl
or
pushf
enter
or
add
pushf
inc
and
add
arpl
ss
push
push
shl
movsl
inc
daa
xchg
jo
cmp
push
push
test
dec
mov
je
inc
jl
out
stos
outsl
mov
sub
adc
fisttpl
xchg
add
push
inc
sbb
and
dec
push
sub
push
test
mov
mov
sbb
sbb
mov
cmpsl
and
push
inc
cwtl
push
lcall
rcl
dec
and
dec
add
xchg
popa
and
push
dec
push
mov
stos
push
adc
popa
nop
ret
jae
movsl
and
inc
fucomi
push
adc
sbb
das
add
lods
shll
sbb
sbbl
xor
in
sbb
mov
imul
jnp
bts
mov
sub
push
in
add
test
xchg
outsb
gs
fwait
pusha
sub
sbb
stc
add
xchg
nop
mov
xorb
jnp
pushf
dec
rcrl
out
adcb
push
lea
push
pusha
ljmp
or
mov
push
notl
in
jo
fsubr
push
mov
mov
and
push
add
push
js
and
in
cltd
cmp
rolb
adc
add
jmp
int
adc
lea
or
adc
adc
pop
rcll
cltd
lods
aas
pop
add
addl
pop
add
cmp
scas
xchg
sbb
ret
push
push
and
add
test
cmc
in
push
pop
daa
and
es
lret
mov
dec
adc
loopne
pop
or
push
ret
loope
mov
cmp
push
mov
out
rclb
dec
ds
sbb
sub
mov
movsb
sub
movsb
lods
cmp
pop
stc
pop
repnz
xor
fdivs
xchg
stc
sbb
sbb
cwtl
jbe
jbe
ja
jle
adc
add
cmp
xor
mov
out
lds
mov
xor
add
lods
add
and
mov
mov
or
lcall
or
lods
mov
mov
arpl
or
push
and
xchg
sbb
mov
inc
jno
pushf
or
cmp
xchg
pop
xor
rolb
arpl
bound
sbb
shrb
jp
cs
mov
lahf
mov
adc
push
jae
sti
cli
sbb
push
push
jg
inc
jge
rol
inc
and
sbb
int3
adc
xor
mov
xchg
xchg
add
roll
push
cmp
movsb
insl
xchg
xchg
flds
xlat
popa
movsl
es
stos
sbb
shrl
lock
add
sbb
mov
ja
mov
jns
jl
sbb
icebp
mov
pop
imul
in
test
push
jne
adc
lea
mov
lock
dec
adc
xchg
add
pop
sbb
mov
add
pop
or
jle
adc
pop
fildl
fildl
and
negb
push
idivb
mov
xor
shl
adc
cmp
add
sbb
mov
jo
addb
sti
add
pop
loop
addb
jg
adc
adc
lods
lods
popa
sbb
and
push
imul
and
or
mov
push
bound
xchg
add
jb
adc
push
add
xor
dec
add
sub
sbb
xor
jle
test
shl
add
sub
adc
inc
cmp
loopne
adc
mov
cmp
dec
add
inc
pop
movsb
mov
stc
mov
push
jbe
adc
jae
push
mov
xor
jbe
aaa
je
mov
push
stos
pusha
shl
or
fcoml
shrb
or
leave
out
ffree
nop
ret
stos
sub
xchg
xlat
ret
fldl
add
sbb
loopne
les
nopl
mov
aas
add
mov
call
fldl
push
sbb
cltd
test
jg
sbb
and
and
out
outsb
push
pop
inc
mov
lods
lods
mov
push
jl
pop
pop
or
jge
mov
inc
pop
and
loope
fsubrp
dec
push
push
js
data16
or
push
push
dec
popa
call
sbb
cmc
mov
insb
inc
shrb
scas
rorb
jb
ret
imull
adc
ds
adc
mov
or
or
shll
add
or
movsb
fwait
pop
jns
push
fcomps
cmp
fcoms
add
adc
jecxz
je
into
loope
lock
pop
aad
sarb
insl
push
popf
nop
add
mov
in
aad
jns
outsb
fstps
lcall
mov
cmp
adc
rcll
and
jmp
inc
xor
or
push
mov
cmp
daa
dec
loop
mov
and
insl
pop
xor
jnp
jnp
add
mov
and
mov
scas
add
clc
clc
cmp
xchg
pop
push
lea
cmp
jb
stos
xor
add
jmp
cmp
ja
jb
lds
pop
ja
lea
push
push
and
push
push
je
fadds
sub
or
or
push
leave
adc
mov
push
adc
push
push
sbb
rcrb
or
cli
adc
cmp
stos
mov
lods
dec
add
pop
pop
jle
adc
je
dec
add
rolb
gs
xor
xor
cld
dec
push
or
cmp
mov
jg
rcl
ja
push
jne
imul
ja
push
les
push
adc
sarb
or
test
dec
inc
cmpw
jne
cltd
lahf
and
or
sub
push
inc
in
fisttps
dec
push
push
jl
mov
fdiv
mov
add
sti
jg
stc
std
mov
or
mov
xchg
add
leave
out
data16
push
push
push
push
push
or
inc
stc
ficoml
push
pop
stos
clc
jns
pop
insb
or
fsubs
lret
sub
mov
popf
orb
mov
lcall
lea
ret
jns
cs
dec
jge
cmp
and
mov
adc
xorb
add
imul
xchg
mov
push
add
test
xlat
popl
push
ja
xchg
sbb
pop
andl
and
shr
in
xor
imul
test
test
shr
mov
rcrl
rcrl
int
call
xchg
into
pop
adc
insb
test
pop
cwtl
jo
rol
out
or
adc
dec
jmp
or
or
gs
dec
popa
inc
movsb
mov
jns
cwtl
push
mov
sbb
cwtl
and
ss
sbbl
add
xor
xor
pop
ret
pop
add
mov
add
xchg
push
repnz
pusha
or
jnp
mov
loop
lahf
ret
push
mov
jno
xor
lcall
adc
push
adc
add
cmc
ret
mov
push
test
or
mov
xchg
jns
dec
sub
lcall
in
add
push
adc
in
push
mov
ljmp
xor
push
push
stos
cmp
lods
and
inc
or
popa
cmpsl
mov
jbe
ljmp
or
xchg
in
lcall
mov
cmp
addr16
push
jns
sbb
xchg
sub
test
adc
stos
push
inc
insb
adc
outsb
in
push
scas
inc
dec
xchg
add
adc
repz
push
push
inc
pop
sub
add
mov
cs
cmp
stos
pop
orl
inc
mov
ja
add
mov
mov
xchg
aas
mov
and
outsl
inc
shrl
and
add
push
and
xor
rclb
inc
jg
je
loopne
cmc
mov
int3
and
testb
mov
xor
adc
inc
add
pop
and
sub
scas
jl
adc
jmp
push
push
popf
push
je
adc
jmp
push
xchg
bound
push
movsl
lcall
decl
jmp
push
in
rcr
cmp
xor
push
pop
pop
jno
pusha
nop
pop
push
mov
fs
jmp
push
out
pop
mov
movsl
push
push
push
jle
scas
push
and
mov
aam
testb
and
loopne
sbb
jbe
xor
pop
inc
or
adc
xor
push
arpl
aam
cmp
sbbb
cmp
push
pop
sbbb
pop
mov
sub
call
dec
inc
clc
mov
clc
push
or
loop
pop
in
loopne
mov
daa
mov
sbb
or
hlt
sub
in
mov
dec
pop
adc
push
push
pop
jnp
ss
sbbb
cwtl
push
mov
cmp
daa
hlt
pop
negl
das
push
mov
add
rcrb
aas
mov
push
jmp
imul
mov
popa
xchg
pusha
jg
pusha
out
addr16
jo
pusha
lahf
pushf
adc
push
aas
add
push
imul
out
or
fucomp
repz
repz
add
push
sbb
repz
repz
repz
orl
mov
jns
iret
repz
pop
mov
sbb
jns
out
xor
jns
pop
addr16
jno
or
test
xchg
inc
mov
push
add
add
stos
inc
addb
jno
pop
insb
jmp
clc
aam
mov
or
push
sbb
popf
nop
adc
sub
movsb
xor
or
lea
insb
mov
movsl
nop
pop
popa
jno
ja
cmp
add
cs
or
fwait
jmp
and
std
jo
lea
jno
movsl
cmpsl
pop
lock
das
fidivrl
test
hlt
imul
xchg
add
out
fcompl
inc
push
cmp
jb
mov
repnz
fstpl
mov
xlat
arpl
roll
cmp
add
imul
sbb
dec
sbb
loope
ret
sub
fdiv
lods
int3
push
dec
push
dec
test
pop
or
or
and
adc
mov
pop
roll
les
cmp
sbb
rorb
cmp
vmread
bound
int
pop
push
cmp
push
je
into
mov
sahf
shlb
imul
jge
pop
arpl
ret
add
mov
jbe
andl
shlb
dec
adc
sti
pop
andl
out
cmp
gs
push
shll
dec
and
sbb
xchg
enter
xchg
loope
or
sbb
enter
inc
adc
adc
cmp
xchg
adc
dec
icebp
jo
sar
or
cmc
xor
and
outsl
adc
iret
imul
add
dec
orl
sbb
jnp
popa
xor
test
pop
dec
add
int3
cmp
add
call
test
jl
sbb
jl
bound
push
mov
call
push
dec
xorl
or
fnstenv
add
push
inc
pop
mov
and
inc
in
insl
sub
pop
sbb
les
repz
pop
lea
ja
add
jne
lock
les
pop
ljmp
mull
or
fwait
je
mov
test
mov
in
cmp
pop
mov
std
or
fildl
pop
imul
icebp
xor
mov
sarb
mov
les
push
xor
xor
push
fldcw
movsb
cmc
cwtl
lahf
mov
xor
push
outsl
xchg
jl
cs
and
dec
fidivrs
push
cs
push
je
mov
shlb
dec
fwait
nop
jbe
mov
xor
imul
movsb
popf
xor
jle
stc
xor
and
mov
pop
mov
sbb
rcrb
das
insb
rcrb
jo,pn
jl
pop
rcrb
sub
sub
enter
nop
imul
jg
imul
mov
cmpsl
daa
and
mov
loopne
popl
push
adc
mov
aaa
lret
adcb
insb
xlat
movsb
cmp
psubsb
test
sbb
ficoml
aas
subl
in
mov
or
push
js
stos
inc
adc
add
or
movsb
bnd
pop
incb
mov
add
sbb
sub
push
xorl
mov
sbb
mov
sbb
xchg
inc
mov
nop
and
insb
and
sbb
xor
sbb
jge
sub
sbb
addr16
test
sub
das
add
addr16
xchg
shrb
push
in
mov
les
daa
aaa
push
mov
sbb
cmp
pop
mov
pop
lahf
cmp
movsl
out
xchg
or
pop
into
cmp
scas
xchg
cld
orl
xlat
hlt
adc
cmp
rorl
jp
bnd
sub
sub
xchg
int3
cmp
xlat
push
outsl
mov
pop
scas
pop
dec
enter
call
inc
adc
sbb
dec
push
out
xor
dec
pop
and
adc
jb
inc
in
aaa
loope
jo
rorb
in
ss
or
mov
dec
inc
adc
loopne
sbb
sub
icebp
push
pusha
fistpl
das
sbb
ljmp
scas
rol
scas
xor
sub
xchg
jle
and
sub
push
cmp
inc
jg
sub
jns
add
dec
adc
pop
sub
and
xlat
inc
sub
je
stos
ret
or
xor
shr
sbb
sub
jnp
dec
fnstsw
mov
popa
sbb
add
and
mov
dec
pusha
adc
movsb
mov
dec
dec
cmc
and
jecxz,pn
sub
test
mov
cli
xchg
push
or
inc
in
xchg
and
push
lods
test
fnstcw
cmpsl
cmp
jnp
jno
pop
pop
ret
cmp
and
adc
enter
clc
mov
cmpsl
adc
add
xlat
dec
sub
loopne
xor
jecxz
mov
add
in
cwtl
lret
shlb
add
in
das
mov
fildll
push
jmp
ss
or
mov
nop
movsb
lods
test
outsl
inc
mov
rcl
andl
shlb
xchg
xchg
or
and
test
or
icebp
fs
lds
jp
pop
mov
add
jmp
test
arpl
inc
mov
or
scas
push
sbb
ror
packsswb
jae
mov
mov
adc
adc
aaa
scas
adc
fnstsw
dec
adc
into
push
pusha
push
cmp
es
aam
jbe
ds
lock
adc
enter
enter
adc
push
gs
sub
mov
push
pop
xchg
push
dec
inc
int3
push
je
dec
enter
aam
rcrb
mov
sbb
push
shlb
jl
lods
push
and
jbe
push
pop
adc
and
mov
mov
mov
and
inc
jno
lcall
push
mov
nop
nop
out
inc
lods
inc
sbb
sbbl
daa
mov
testl
inc
sbb
enter
insl
and
add
add
inc
cmpsb
push
adc
sbbl
jae
fisttpl
orl
jle
test
cwtl
inc
add
xchg
orl
mov
mov
mov
movsb
jo
push
pop
pusha
push
pop
out
and
add
and
adc
sub
and
andl
shlb
aas
cmp
cmp
add
pop
mov
xchg
sbb
xchg
inc
xchg
movl
stc
inc
jecxz
pop
int
fdivrs
hlt
add
and
loopne
add
ret
mov
shlb
cs
add
test
movaps
arpl
lret
andb
jns
int3
xchg
call
add
rolb
or
loopne
push
imull
dec
adc
push
test
pop
inc
sbbl
movb
adc
xchg
pushl
in
push
movsb
xlat
xchg
inc
rorl
add
rclb
push
dec
loope
xor
fcoml
mov
push
mov
shrl
popf
out
adc
pop
adc
shlb
push
loopne
lcall
xor
xor
adc
or
pushf
mov
nop
ret
mov
jns
addl
pop
add
sbb
inc
js
mov
insb
jo
inc
jbe
dec
jne
xor
mov
inc
mov
sbb
add
sub
push
pop
ror
andl
mov
aam
and
mov
pop
lods
add
rol
push
push
sbb
inc
adc
es
push
imul
jno
and
nop
push
pusha
sti
daa
insl
and
push
push
mov
outsb
movsb
push
and
sub
sub
dec
sub
inc
test
imul
mov
pop
mulb
in
sub
sbb
add
adc
idivl
inc
in
dec
popa
sub
jbe,pn
sub
dec
repnz
rclb
aam
jl
adc
sidtl
cmp
addl
push
sub
sub
daa
dec
es
sbb
pusha
and
sbb
sbb
xchg
and
and
inc
int3
les
mov
sbb
cmpsl
cwtl
jo
inc
pushf
imul
sbb
test
in
je
xor
dec
or
adc
andl
shrb
mov
test
push
or
jge
inc
add
sti
fdivrl
test
cmpsl
loope
mov
adc
cmp
fsubrs
jb
bound
pop
add
pop
movsb
or
dec
inc
pushf
inc
loope
add
inc
or
add
sub
ja
add
imul
rolb
inc
arpl
jae
push
decb
inc
dec
inc
gs
ret
shlb
push
push
cmp
adc
lds
cmp
add
test
daa
int
clc
aam
cs
int
leave
inc
jo
add
push
xchg
lret
mov
and
loop
rol
mov
loope
adc
or
mov
sbb
sub
test
arpl
loop
sbb
into
sub
repnz
add
jge
dec
aad
dec
cmp
pop
sub
lods
in
jmp
stos
movsl
inc
mov
xor
movsl
xchg
xchg
pop
add
cmp
mov
insb
jg
sbb
cmp
cmp
shrl
je
push
mov
lea
test
not
shr
jb,pt
mov
xchg
push
mov
je
test
add
jb
adc
pushf
shlb
sbb
dec
mov
cmp
xor
cmp
jbe
repnz
cmp
inc
add
or
cmp
jb
jl
stos
rolb
decl
sti
add
outsl
inc
mov
subl
pop
mov
push
or
iret
xor
mov
jnp
adc
repz
jae
inc
jne
mov
cmp
cli
sub
mov
mov
dec
shl
orb
dec
clc
dec
shrl
scas
adc
test
mov
int3
inc
mov
dec
add
cld
xorl
push
shrl
es
pop
add
test
inc
rcr
sub
loope
push
dec
pop
test
ds
inc
push
dec
fsubrs
insb
jb
add
mov
ljmp
test
inc
insl
jge
cmpsb
jbe
stos
jne
adc
pop
or
xchg
sbb
and
loop
pushl
add
dec
cmp
xchg
xchg
lahf
jp
xchg
mov
movsl
bound
flds
adc
test
popf
jecxz
rolb
jb
add
cmpb
in
inc
adc
lea
ret
scas
mov
add
icebp
pop
outsl
outsb
outsb
jmp
ds
jl
or
je
cmp
loope,pn
decl
inc
jmp
movzbl
movb
movsbl
shr
mov
jg
mov
and
mov
nop
inc
mov
xor
or
jne
pop
in
movsl
mov
adc
outsl
and
dec
add
push
pusha
nop
pop
movsb
bound
mov
lock
cmp
mov
inc
dec
sbb
movl
adcb
inc
imul
mov
dec
and
and
loope
testl
ret
add
adc
mov
pop
rcll
loopne
inc
lock
xchg
cmp
mov
jg
add
cmpb
je
dec
and
xchg
roll
push
adc
leave
icebp
imul
lcall
or
pop
inc
mov
sub
aad
push
sub
call
lcall
lock
cmp
lea
push
pop
shrb
in
cmpb
pop
mov
loop
enter
enter
inc
push
leave
and
sub
inc
push
add
push
pop
or
mov
or
or
in
cmp
mov
idivl
cmc
xor
lcall
mov
xor
and
jmp
cmp
cmp
loop
movsl
mov
fs
testb
or
ss
cmpsb
push
test
movsl
lods
xchg
jmp
in
push
adc
inc
add
sub
cmpsb
cmp
cmp
sbb
jl
add
jns
addl
movsb
jo
xlat
add
inc
inc
sbb
sub
push
and
xchg
or
and
sbb
dec
mov
push
cmp
sbb
dec
mov
add
repnz
jne
jbe
insl
or
or
mov
push
push
leave
adc
pop
test
cmp
jae
push
inc
and
fistl
test
pop
mov
and
xor
push
jnp
sbb
inc
push
xchg
popf
push
cmpsl
dec
loop
fcomps
cmp
mov
add
adc
or
and
add
enter
sub
adc
lahf
dec
mov
or
sub
mov
test
or
shlb
or
mov
push
pop
fistps
inc
hlt
mov
add
in
sbb
jle
out
repz
js
out
jp
rcrb
test
push
or
cmc
rolb
mov
dec
cmp
pushf
mov
jbe
popa
iret
mov
push
push
adc
and
push
inc
sbb
add
sub
ljmp
mov
notl
lock
jno
mov
loope
in
add
sar
test
xchg
pop
adc
cmp
out
lods
aam
lea
mov
fdivl
int3
jl
adc
inc
rclb
imul
lret
andb
add
sub
mov
and
push
shlb
or
xor
add
sbbl
sbb
or
pusha
sub
ds
jmp
decb
or
or
shlb
ret
scas
mov
das
jge
fs
je
andl
aas
test
lock
sub
pop
outsl
insl
dec
pop
cmp
jge
xorb
sbb
mov
and
je
sub
push
nop
iret
ret
je
inc
mov
pop
shll
cltd
loop
stos
in
sub
adc
mov
outsl
adc
sbb
pusha
lcall
add
scas
test
jmp
fisttpll
push
orl
add
icebp
xchg
adc
in
mov
push
mov
cmp
pusha
shr
outsl
das
inc
xchg
mov
xor
jne
je
inc
test
jl
or
nopl
push
fxch
push
hlt
add
add
mov
or
inc
pop
int3
jbe
roll
fcoms
mov
les
jns
push
sarb
xchg
das
nop
rolb
add
inc
cmpsb
movsb
enter
sbb
add
xor
xor
add
adc
sbb
test
rcr
push
out
lea
cmp
push
inc
ja
inc
jne
inc
or
sbbl
cmp
add
cmp
sbb
sarl
fdivs
jbe
add
les
dec
xchg
call
rolb
mov
movb
ror
inc
loope
jnp
sbb
mov
xor
enter
and
push
mov
or
fldt
je
jge
push
frstor
lea
imul
dec
enter
mov
test
addl
xchg
idivb
lock
sbb
call
sub
cmp
sti
xchg
fimull
mov
sbb
or
add
sbb
sub
cmp
or
dec
movsb
rorl
fs
push
mov
shrb
push
lea
addb
test
xorb
push
inc
push
addr16
sbb
scas
rdtsc
inc
or
arpl
sbb
add
add
arpl
mov
adc
cli
add
leave
out
sub
add
ja
mov
add
and
test
imul
mov
pushf
cmp
inc
add
inc
or
sbbl
sahf
notb
sub
add
pop
xchg
inc
sbb
popa
and
shlb
jl
adc
sub
cmp
mov
adc
and
shlb
enter
mov
fldl
push
popa
data16
roll
imul
sub
aaa
adc
adc
jne
daa
repnz
jns
fidivs
adc
hlt
jne
or
jne
cltd
ret
out
inc
clc
dec
shlb
cmp
jg
inc
pop
mov
mov
or
adc
adc
inc
sbb
add
add
movaps
add
push
aas
pop
icebp
fwait
in
add
mov
mov
or
mov
or
repnz
lea
add
es
dec
lea
fisubs
mov
out
or
inc
push
adc
rol
iret
aam
into
lret
xchg
inc
pop
sub
mov
push
lret
sbb
mov
jae
mov
mov
or
mov
jb
pusha
int3
int3
pop
lea
hlt
sub
jnp
push
inc
mov
push
loop
pop
xlat
notb
movsb
popf
or
or
xlat
inc
pop
fstl
mov
add
fsubrs
neg
loopne
rol
adc
rolb
dec
in
adc
mov
cmc
jl
push
cmp
insl
loop
popa
or
stos
lahf
push
ss
xor
popa
xor
adc
loopne
or
cmp
addl
push
xchg
insl
mov
dec
or
movsl
adc
pop
xchg
lea
incl
daa
pusha
cmp
pusha
in
enter
xchg
test
in
sbb
mov
fs
push
jne
iret
push
repnz
into
xor
xor
mov
sbb
fiaddl
pop
add
clc
jne
mov
mov
fsubrl
dec
push
or
adc
xlat
adc
xchg
push
add
cmpb
pop
adc
add
mov
jbe
call
or
into
adc
or
or
into
inc
addl
pop
jmp
sub
inc
mov
test
sbb
jmp
push
dec
add
mov
dec
enter
pop
addr16
hlt
add
and
push
fldcw
or
jge
fwait
imul
or
mov
ret
push
loop
leave
push
loopne
dec
xchg
pop
and
push
cmpsb
mov
pushl
rclb
or
sbb
dec
lea
cmp
test
gs
std
or
dec
ret
mov
insl
fwait
or
mov
jnp
ficompl
add
push
les
cmp
insb
dec
push
negl
cmpsl
sbb
jmp
xorl
ret
or
daa
dec
jl
into
add
icebp
jbe
mov
push
pop
iret
leave
dec
or
outsb
rorb
inc
orl
inc
dec
mov
pusha
mov
sub
roll
loop
inc
mov
sub
sbb
das
in
les
inc
popa
xor
or
push
push
cmp
cmp
xchg
maxps
mov
and
adc
xor
subl
sahf
sbb
cmp
sti
sub
xor
xchg
xchg
adc
pop
daa
es
pop
xor
cmp
push
sbb
es
sbb
iret
inc
inc
cs
lret
adc
cmp
in
and
inc
sbb
rolb
adc
inc
jg
add
enter
inc
and
pop
es
xlat
push
or
rclb
leave
or
jg
jmp
sbbb
adc
repnz
push
or
popa
jg
sub
hlt
lea
sub
stc
inc
dec
jle
sti
pop
rcl
outsl
popa
leave
push
arpl
adc
xorl
and
sbbl
add
pop
rcrb
adc
rclb
ljmp
lds
mov
int
sub
jo
fwait
jp
xchg
jle
xchg
inc
or
pop
in
dec
call
jle
dec
js
dec
clc
jae
jg
inc
sub
lods
cs
call
pop
push
mov
movsl
inc
sbb
fdivl
int
and
aas
test
shlb
adcb
lock
lock
pop
jne
movsb
in
aam
popa
loopne
jo
test
push
and
hlt
imul
adcl
pop
or
jno
test
sarb
push
les
xor
add
and
call
je
cmpsl
scas
mov
popa
addr16
mov
in
inc
dec
sub
adc
sbb
test
imul
mov
popf
inc
enter
test
loopne
jae
test
es
jecxz
inc
pop
mov
mov
fwait
push
lock
inc
add
movsl
popf
inc
lock
sti
and
and
es
or
pop
xchg
mov
js
cmpsl
mov
int3
dec
fisttpll
sub
and
cmc
cmp
loopne
mov
lods
xchg
inc
fistpl
fcoms
repnz
pusha
push
xchg
adc
xorl
loope
sub
dec
sub
push
shlb
and
orl
cmp
cli
syscall
stc
adc
add
push
popf
mov
push
jne
fsubrs
cmpl
in
mov
jg
xor
push
jne
mov
je
test
ljmp
cmp
cmp
mov
xchg
push
mov
mov
mov
dec
jp
mov
bound
xor
sahf
jne
lock
sbb
in
lds
cmp
ret
daa
shlb
fdiv
fisubrl
lods
sbb
fs
test
mov
mov
xchg
xchg
dec
and
dec
shl
addr16
lcall
js
cld
sbb
push
inc
adc
test
adc
stos
cmp
add
adc
jmp
push
jmp
pop
les
fwait
dec
loopne
mov
and
xchg
loopne
push
add
add
xor
jecxz
push
pop
jp
adc
dec
loope
arpl
mov
sbb
adc
stos
loopne
cmp
dec
bndstx
jp
popf
mov
pop
jmp
out
je
cmp
aam
ss
call
adc
fisubrl
dec
add
inc
push
xchg
loopne
sbb
lret
mov
mov
scas
add
xchg
xor
in
hlt
jns
pop
or
jbe
repz
push
fisttps
lea
pop
mov
sbb
xchg
mov
aad
and
push
stc
cmpsb
inc
rolb
in
mov
mov
clc
push
test
ret
fs
test
adc
imul
add
jmp
shrb
dec
jno
push
aaa
test
mov
movb
dec
sbb
sbb
adc
push
add
or
jmp
ret
mov
fnstcw
push
push
mov
push
aas
lret
mov
and
mov
aas
mov
mov
mov
rcr
mov
lock
ret
or
js
pop
fwait
and
sub
jo
and
scas
add
movsl
jne
jne
xchg
jp
add
out
or
je
jle
cmp
add
rolb
sbb
add
sete
test
dec
adc
fmul
addb
leave
cli
add
add
jne
jae
movsbl
sbb
inc
mov
jmp
sbb
or
movsb
pop
add
sbb
pop
jmp
enter
xor
lea
and
dec
inc
jg
and
out
or
jecxz
or
subl
inc
push
inc
cmp
jl
mov
rcl
cltd
and
add
sar
add
dec
pop
mov
add
clc
xor
loopne
sahf
pop
xor
ss
cmp
jecxz
aad
lock
inc
jne
lret
shr
sub
jl
jbe
mov
mov
dec
jne
fs
xor
pop
pop
lcall
loop
dec
rcrb
jbe
stos
adc
ficompl
stc
je
popf
es
jp
jbe
scas
xchg
pop
jo
in
hlt
add
lea
jne
push
pop
cli
ret
add
sbbl
adc
jnp
rclb
sbb
pop
or
cmp
sub
add
push
push
push
mov
inc
les
mov
push
mov
add
lret
ret
mov
stos
jnp
adcl
cmp
repz
xchg
or
cli
and
dec
add
or
xchg
add
sbb
repz
mov
aad
sub
addb
or
add
sbb
sbb
adc
inc
pop
dec
sbb
cmpsl
push
xor
loope
push
xor
aam
inc
cmp
mov
xchg
je
rol
xchg
or
sahf
or
stos
sub
push
outsb
inc
or
mov
xchg
ret
bound
leave
loopne
push
inc
sub
int3
insb
fistpll
pop
push
in
loopne
and
and
insb
repnz
push
or
xor
fwait
outsb
pop
cmp
cmp
inc
pop
add
cmp
test
push
in
add
lock
in
push
push
sbb
flds
push
push
movsb
sbb
std
inc
xchg
mov
and
pop
dec
or
add
add
inc
jbe
js
in
mov
or
pusha
inc
and
push
pop
call
in
push
add
push
dec
jg
jne
inc
pop
push
push
aas
jp
sbb
sbb
xchg
and
shll
xor
xchg
push
pop
nop
subl
int
adc
push
insb
sbbb
sub
xchg
je
or
adc
sub
ficomps
mov
mov
popf
fildl
fcomps
gs
pop
push
push
cmp
call
test
and
add
movsl
push
mov
add
mov
das
je
addl
dec
and
jbe
dec
push
and
dec
fidivl
jo
mov
shl
loop
mov
add
int3
xchg
rorb
add
mov
push
daa
adc
shl
pop
add
mov
xchg
cmp
dec
mov
popf
adc
mov
nop
mulb
scas
xchg
pop
aam
imul
push
and
and
push
pop
aam
cmc
stos
rcrb
mov
jbe
in
aaa
push
push
or
pop
mov
jmp
mov
inc
adc
pop
rol
test
push
push
inc
pop
jae
push
cmp
pop
fcompl
xchg
mov
loope
aad
loope
cmp
lds
xor
out
add
sti
pop
incl
mov
push
pop
cmp
loopne
mov
pop
shl
je
mov
adc
cmpsl
call
out
das
insb
pop
push
add
pop
sub
lcall
pop
fildl
xchg
push
add
and
pushf
xchg
mov
sti
das
xchg
push
aam
add
lods
das
leave
xchg
or
push
scas
fadd
pusha
jmp
stos
scas
or
cli
sub
mov
push
cmp
jl
cwtl
loopne
fdivrl
je
lea
jge
and
add
mov
lcall
or
sub
daa
movsbl
test
pop
add
add
ret
mov
incl
mov
mov
test
xchg
dec
out
test
sub
fmul
movb
pop
xchg
mov
sub
dec
rcrb
xchg
int
add
adc
or
xchg
cli
xor
arpl
and
int
jl
or
popf
push
push
or
arpl
dec
rol
add
cmp
add
xor
or
popa
or
data16
mov
adc
shrb
das
test
loope
xchg
mov
iret
popf
and
dec
sbb
push
xchg
xor
pop
cmpsl
add
inc
es
cmp
jo
fs
adc
inc
add
mov
mov
pop
jecxz
add
adc
stos
xchg
xchg
add
mov
sbb
mov
mov
ljmp
daa
clc
pop
mov
mov
mov
push
add
addb
push
cmp
cmp
aad
sub
or
mov
cmc
repnz
dec
adc
mov
push
push
mov
clc
add
mov
add
push
mov
orb
js
jl
mov
clc
addl
cmpsb
hlt
mov
sub
push
jle
fcompl
or
orb
or
mov
shrl
movb
add
push
imul
jne
lcall
push
leave
push
xor
mov
inc
call
jne
pop
push
stc
clc
xor
mov
stc
lret
pop
fwait
jb
cs
xchg
pushl
cmp
loop
sahf
mov
xor
into
push
add
cmp
and
in
xor
arpl
or
push
adc
test
add
outsb
xchg
push
cs
in
in
cs
or
inc
cli
xor
mov
mov
xchg
jnp
mov
xor
pop
popa
faddl
hlt
dec
cmp
and
cmp
dec
aas
ja
add
out
lret
push
scas
and
cmp
push
mov
popa
cmp
push
or
and
jmp
xchg
add
add
mov
xor
mov
sub
loopne
xor
and
adc
add
add
inc
movsl
pusha
lds
fadd
inc
push
fmuls
add
push
sbb
push
shrl
mov
xchg
mov
cltd
mov
cmp
push
jns
add
sbb
sbb
xchg
add
add
mov
add
add
add
xor
jmp
dec
add
cmc
or
or
inc
inc
add
cmpsb
andb
add
xchg
dec
es
dec
xor
gs
add
pusha
fucom
pop
or
mov
incb
add
mov
inc
js
adc
xchg
mov
loop
push
push
xchg
outsl
dec
sub
pushf
leave
xchg
inc
push
adc
je
inc
cmp
adc
cmpsb
mov
or
js
in
mov
xor
cmp
into
adc
xor
or
loope
or
shll
push
arpl
sbb
ret
addr16
popf
aas
jb
movsl
or
adc
jle
loopne
cmp
cli
add
mov
xchg
pminub
and
data16
gs
cs
cmp
sbb
and
jp
fs
loope
add
add
and
or
cmp
and
mov
pop
jge
xchg
cmpl
int3
sbb
ja
imul
pop
in
out
test
dec
popa
fs
mov
or
call
jbe
and
jo
inc
or
jle
stos
cs
xor
ret
popa
jl
push
ss
add
in
sub
xor
fisttpll
shl
push
dec
adcl
or
dec
fnsave
sbb
mov
xor
scas
sbb
mov
fnop
insb
dec
sti
pop
sti
cmpsb
hlt
sarb
dec
cmpl
push
ret
rorb
stos
jle
add
mov
imul
scas
add
push
aam
ret
or
jl
xchg
shlb
rclb
and
inc
imul
out
fmuls
clc
lods
out
fdivl
mov
je
roll
inc
sti
les
sahf
dec
jge
sub
in
subl
add
mov
das
inc
push
mov
and
mov
shlb
dec
fwait
movl
inc
jb
idivl
push
sarb
jmp
push
xor
ss
xchg
outsl
pop
fdivl
inc
xchg
adc
inc
mov
add
leave
push
aaa
and
insb
or
sub
add
mov
mov
or
or
fsubr
push
pop
je
jo
dec
int3
jnp
and
es
outsb
push
testl
pop
aam
popf
and
iret
mov
dec
rolb
or
xchg
test
mov
or
rcll
loopne
into
inc
out
push
fs
addr16
daa
xchg
outsb
mov
adc
dec
divl
out
int3
mov
or
sbb
fists
or
mov
gs
or
add
gs
incl
movsb
je
daa
xlat
mov
jb
mov
sbb
add
movsb
add
jmp
ret
ret
mov
jmp
push
mov
test
or
and
mov
hlt
lahf
pop
push
push
push
sub
pop
sbbb
cmp
dec
pop
xor
or
into
cld
movsl
push
pushl
xor
rclb
adc
ret
clc
mov
sub
jmp
push
pop
push
sbb
jb
xchg
unpckhps
add
sub
repnz
lret
jge
sbb
shrb
adc
lock
sub
bound
xor
or
sbb
or
mov
inc
outsl
adc
mov
iret
hlt
enter
pop
mov
leave
les
inc
inc
mov
cld
out
dec
xchg
dec
cld
shlb
or
cmp
jno
scas
lea
mov
sbb
adc
testb
push
push
call
cmp
sbb
jb
sahf
jmp
add
jecxz
adc
flds
ss
cmp
dec
pusha
cmp
jmp
pop
and
out
roll
adcb
fs
jmp
add
nop
mov
dec
push
das
movsb
inc
jb
xchg
xchg
popa
bound
inc
addr16
or
pop
imul
cmp
pop
test
xor
cmp
dec
dec
push
mov
xor
in
mov
cmp
sub
fidivl
movsb
pusha
inc
mov
xor
adc
mov
fs
xor
and
and
sbb
adc
mov
pop
xchg
iret
sub
daa
repz
xor
xchg
es
xchg
and
pop
cwtl
sub
shrb
mov
pop
fldt
fdivrs
and
push
push
sub
xlat
mov
and
sub
dec
push
and
dec
insb
or
daa
jne
inc
mov
add
push
test
rorb
and
cmpsb
jo
mov
iret
mov
cmpsb
das
or
rolb
das
or
in
out
xchg
adc
lea
push
or
dec
push
mov
pop
sbb
mov
and
push
flds
sbb
add
sub
sub
js
xor
cmpsb
dec
xor
loopne
xchg
push
mov
jae
and
inc
fiadds
and
sub
movsb
cltd
dec
or
add
sbb
filds
pop
sub
add
pop
cmp
or
add
mov
mov
jae
fnop
stc
jne
xor
sub
shlb
jne
xchg
inc
nop
cld
jnp
push
jne
imul
inc
push
push
pop
ret
dec
fs
xor
add
test
ss
adc
sbb
xchg
rcl
or
and
pop
add
or
adc
cmp
push
loopne
mov
cmp
inc
jnp
test
aam
call
mov
jp
leave
cmp
pop
sbb
fsubp
xchg
ret
cmp
jb
icebp
in
mov
leave
popf
ljmp
call
pop
inc
inc
rol
js
or
leave
inc
sbb
push
test
in
ret
and
movsb
rcrb
faddl
fdivs
push
inc
push
jne
push
mov
or
pushf
mov
movsl
pushf
je
ja
sbb
cwtl
push
cmp
ss
or
sbbl
xor
pop
adc
xchg
addr16
inc
xor
inc
lods
or
push
data16
add
arpl
ret
xchg
filds
movsl
push
dec
dec
pop
lret
clc
inc
call
sbb
mov
sbb
test
xchg
cmp
jbe
cmp
push
cmp
inc
xor
add
test
xlat
dec
jo
imul
sbb
ret
sub
jnp
mov
push
mov
orb
cmp
pop
mov
sbb
sbb
lret
xor
mov
loopne
xchg
mov
inc
pop
sub
ret
lds
mov
or
loope
int3
and
adc
dec
aam
rcrb
xor
shlb
and
mov
push
mov
cs
test
push
shlb
and
fsubs
adc
pop
clc
sbb
mov
mov
sub
lods
sub
pop
test
pop
rcrl
or
jge
sub
or
dec
add
jae
mov
nop
out
xor
xchg
push
jmp
add
pop
movl
and
mov
dec
nop
inc
dec
insl
sbb
and
test
push
lods
test
inc
sbb
xorl
faddl
je
mov
cmp
adc
icebp
mov
pop
or
shll
add
sub
add
dec
xor
ja
inc
mov
test
lock
cmp
mov
pop
mov
and
sub
clc
xchg
sub
loopne
jge
add
push
test
and
xchg
push
sbb
shll
mov
jbe
jno
inc
push
sbb
jnp
inc
cmp
sti
adc
cltd
xor
and
cmp
pop
fmuls
dec
jbe
mov
push
enter
mov
lds
clc
outsb
xchg
pop
dec
and
aam
mov
and
push
pop
shld
mov
ficompl
or
add
add
sahf
test
push
push
gs
ret
adc
and
addl
lods
adc
dec
popa
jnp
dec
xchg
jl
sti
push
and
sbbl
xchg
sbbl
jnp
stos
rorb
das
movsb
jmp
jge
adc
adc
add
add
inc
sub
sbb
mov
xor
inc
jns
lock
inc
insl
rolb
cmp
daa
adc
xor
xchg
pop
add
aam
cs
adc
adcl
adc
dec
sbb
cmpl
jne
push
cmpb
aam
in
dec
push
int3
mov
and
nop
sub
pop
mov
inc
pushf
fdivrs
or
outsb
and
mov
inc
lods
add
dec
lods
or
fsub
sbb
fldt
rorl
push
jno
sbbl
dec
loope
jge
mov
outsl
rorb
cltd
jmp
inc
ss
sbb
je
add
mov
and
push
hlt
imul
ret
dec
xor
mov
jmp
adc
subl
xchg
js
jne
fdivs
pop
addb
fstpt
lahf
shr
xor
bound
test
xchg
mov
andb
loopne
cmc
sub
clc
jbe
mov
sub
push
lahf
adc
sbb
and
mov
pop
aas
lock
jbe
adc
dec
adc
sbb
fisttps
sbbl
pop
mov
mov
mov
loopne
fbld
rolb
lock
and
inc
add
pop
lret
ss
adc
fdivl
ret
mov
and
xorb
mov
xchg
mov
sbb
mov
shll
inc
inc
mov
daa
pop
xchg
dec
mov
or
mov
jno
enter
mov
inc
sbb
jne
cmp
push
adc
cld
lock
push
mov
inc
jo
adc
and
pop
shlb
add
jbe
lods
adc
pushf
xor
roll
rcrb
or
sbb
pushf
outsb
mov
sldt
dec
push
pop
call
mov
push
cmp
outsl
lret
and
fcmovnbe
ret
loopne
mov
cmp
adc
stos
hlt
jmp
mov
xor
push
push
lock
aaa
mov
pop
loop
out
push
aam
sub
enter
inc
aaa
mov
imul
sub
sti
dec
push
push
mov
push
or
rorl
test
jns
test
pusha
js
push
push
sbb
subb
call
in
mov
xchg
mov
icebp
and
push
or
dec
mov
lock
mov
lock
or
cmp
mov
aas
push
mov
mov
cmp
adc
jmp
xor
add
push
pop
xchg
outsb
mov
sbb
push
mov
pop
mov
scas
arpl
push
mov
sub
aad
ljmp
sub
sub
add
add
das
movsb
push
push
mov
sub
push
ret
bound
ljmp
popf
push
inc
push
rolb
scas
push
push
jb
mov
adc
sub
jecxz
mov
fisttpll
or
xchg
jno
out
cmpsb
mov
xchg
jb
dec
xor
sbb
xor
rclb
adc
jbe
jp
pop
adc
dec
xor
hlt
jne
je
subb
hlt
sub
add
out
xor
and
add
dec
aas
push
leave
adc
sub
push
jb
icebp
ret
imul
push
pusha
jae
push
pop
clc
mov
push
sbb
adc
add
fs
jbe
cmp
testb
cmp
dec
js
push
test
loop
into
pushl
and
mov
sub
cmpsl
sahf
pusha
adcl
cmp
out
sub
push
dec
ret
fstp
cmp
int
stos
mov
cmp
mov
mov
add
adc
or
or
cmp
inc
mov
inc
sub
xor
xchg
push
movups
leave
push
inc
or
inc
shrb
mov
js
into
dec
sbb
lahf
aam
adc
pushl
xor
push
adc
insb
push
dec
pop
aas
cli
ficoms
push
push
push
pop
mov
xchg
inc
cmpsl
mov
cwtl
in
adc
mov
cmp
jmp
mov
mov
mov
loopne
cmp
repnz
aaa
pushf
and
pop
fwait
ret
dec
cltd
pop
mov
popf
jno
dec
aam
push
out
jns
jno
push
mov
fidivrs
adc
pop
xor
mov
or
add
test
or
add
cmp
xchg
sbb
pop
push
mov
and
mov
inc
dec
dec
outsl
push
cmpl
mov
push
inc
dec
sub
sbb
dec
push
das
jmp
cmp
test
or
jno
add
push
clc
push
push
test
cmp
js
es
mov
mov
cld
push
out
push
adc
adc
fidivs
cs
and
pop
in
in
and
push
jecxz
aam
inc
leave
sbb
or
mov
mov
das
fisttpll
jb
and
loopne
test
adc
xor
dec
pop
mov
inc
inc
push
cmp
rorb
js
pop
adc
push
or
sub
jo
test
test
data16
ljmp
fstl
cld
mov
in
cli
shlb
cmpxchg
add
testl
lcall
pop
and
sbb
sub
pop
pop
dec
sbb
stc
jmp
xchg
rclb
xor
inc
sahf
add
ds
inc
punpckhbw
pop
call
rclb
add
inc
loopne
ja
and
pushf
outsl
ss
xchg
mov
test
daa
push
das
das
or
scas
sub
dec
jno
add
mov
jae
lahf
sbb
test
sbb
repz
rclb
jnp
cld
push
and
add
enter
sbb
mov
add
sti
dec
mov
xor
lock
jp
mov
jne
or
pop
or
add
ret
xchg
stos
xchg
xor
ret
jmp
push
icebp
lods
out
leave
test
clc
repnz
popa
inc
notb
hlt
lret
std
jmp
mov
daa
push
push
fisubl
add
js,pn
and
rol
daa
jge
sahf
std
jo
add
mov
mov
cmp
mov
push
scas
jb
test
jbe
adc
jp
adc
mov
cmp
jecxz
pop
jl
subl
add
cmp
and
pcmpgtw
push
lea
outsl
push
push
es
scas
mov
les
sub
int
scas
mov
dec
and
or
dec
cmpsb
jne
and
cwtl
pop
cmpb
or
sub
adc
lock
sub
push
adc
dec
push
jo
incl
inc
or
mov
mov
rorl
nop
jb
popf
rol
mov
and
push
ret
sbb
int
nop
lock
push
es
push
pushf
imul
inc
clc
insb
sahf
dec
add
ret
and
push
test
pop
xor
in
daa
jl
pop
mov
mov
jmp
into
out
movsl
xlat
fsubp
push
loope
roll
xchg
iret
xor
jnp
mov
cld
lock
in
and
jmp
pushf
mov
je
dec
add
in
lock
sub
push
out
decb
cmp
jl
mov
leave
hlt
or
sbb
sahf
leave
jno
jg
aas
lea
jle
mov
cmpsb
and
jmp
sub
dec
cmp
cmp
adc
lret
pop
push
rorb
add
sub
adc
adc
shlb
inc
add
inc
cmp
ffreep
adc
incb
adc
aam
cmpsb
sbbb
mov
in
xor
orl
je
adc
add
push
add
std
mov
jb
xchg
jbe
rcll
movsb
int
jns
sbb
adc
in
xlat
sub
push
js
je
xor
cmp
fidivrl
cmp
pusha
xchg
jmp
pop
sub
jns
dec
cmp
mov
sub
dec
movsl
push
xchg
rcll
daa
mov
pop
mov
loopne
dec
ret
dec
or
jmp
sub
insl
inc
imul
adc
adcl
mov
pushf
dec
les
xor
jo
addl
das
add
mov
pushl
sub
cld
pop
mov
arpl
xchg
outsb
push
dec
sub
fsubr
push
cltd
mov
or
mov
cs
jbe
inc
in
mov
add
lock
push
aaa
mov
sbb
rclb
pop
out
sbb
scas
sub
mov
dec
xchg
es
push
pop
shrb
sti
mov
std
pop
xor
mov
in
inc
sbb
pop
loop
and
push
sbb
fs
or
mov
les
testl
out
cmpsl
lock
rcll
or
jecxz
mov
in
imul
dec
cmp
sbb
out
jl
loopne
lcall
jno
in
jne
call
or
pop
mov
push
lea
or
jne
outsl
fwait
xchg
cmp
dec
jae
fsubl
into
loop
or
xor
int3
scas
push
pop
sbb
or
and
lea
cmp
or
sbb
test
mov
mov
or
adc
sub
cmp
in
popaw
inc
jnp
es
push
sub
push
mov
xchg
rorb
push
ret
sti
popa
mov
test
inc
mov
aam
testl
pop
ss
cmp
sub
mov
lods
or
push
jl
adc
aad
pop
push
mov
mov
ja
adc
jp
or
or
xor
sbb
cmp
mov
out
inc
dec
out
scas
add
add
nop
or
mov
and
cmp
enter
jg
cmp
cli
mov
xor
adc
int
pop
data16
mov
mov
pop
rclb
adc
sub
insl
dec
sub
daa
mov
sbb
fnstcw
lret
sub
mov
mov
jmp
dec
aam
adc
lret
shlb
lahf
sbbb
andl
movsl
inc
outsl
mov
loopne
rolb
data16
cli
or
out
shlb
sbb
jne
add
xor
xchg
dec
push
je
xor
out
jnp
outsl
sbb
dec
insb
mov
gs
sbb
cmp
scas
adc
or
aaa
lcall
jmp
mov
push
mov
and
pop
jo
js
cmp
je
xchg
jge
add
cmp
sbb
jne
rorb
dec
imul
push
cs
lret
fadds
add
cmp
mov
lret
jnp
imul
cmp
mov
divl
idivb
jl
mov
mov
cmc
xor
xor
push
ficoms
imul
xor
inc
ja
sbb
in
push
cmc
push
mov
cmp
fdivs
je
pusha
and
sbb
lea
mov
fcompl
rcrb
xor
movb
stc
or
cwtl
cmp
ja
loope
jne
push
or
lea
add
add
imul
into
or
mov
push
nop
or
adc
add
mov
insb
or
mov
xchg
mov
rorl
sbb
lea
sub
js
or
adc
sbb
xorl
add
gs
subl
shrl
pusha
and
insb
fwait
adc
add
mov
notb
sub
cmp
push
sub
mov
push
mov
lcall
in
xchg
mov
fidivrs
add
pusha
shll
jo
mov
orb
mov
or
inc
popf
dec
fsubr
pop
xchg
addb
cmpsb
outsl
test
jbe
dec
adc
mov
mov
inc
mov
scas
or
pusha
sub
jg
ljmp
pop
mov
and
pop
movsl
xchg
inc
pop
mov
add
les
dec
pushl
push
jl
pop
inc
push
fadds
jl
js
orb
jo
or
orb
pusha
xchg
or
adcb
sub
scas
adc
dec
push
cmp
iret
adc
and
inc
les
or
dec
jp
xor
xor
dec
imul
les
jo
into
cmp
fisubrl
imul
xor
pop
adc
add
xor
je
aaa
std
add
sub
loopne
mov
mov
add
test
mov
xchg
sbb
ds
pop
cmp
and
scas
enter
cmp
add
jne
sbb
inc
push
ret
dec
cmp
sbb
es
mov
sbb
or
sub
loop
pop
mov
push
pusha
xor
cmp
add
nop
xor
dec
sbb
add
test
in
js
lock
push
dec
and
in
inc
sub
add
xor
sbb
test
and
dec
fwait
or
stos
pusha
and
cmp
push
je
fwait
out
shlb
sbb
das
fbstp
xorl
roll
sub
push
sbb
mulb
inc
dec
adc
imul
jo
iret
xor
sbb
dec
test
or
sarl
add
in
jmp
cmc
dec
mov
stc
frstor
outsl
xchg
fldl
sar
lds
add
iret
and
mov
xor
or
cmpsl
repnz
stc
sti
mov
iret
in
mov
inc
xchg
les
ja
sbb
mov
add
sub
add
adc
scas
movsb
sub
mov
cmp
mov
data16
cmp
je
xor
ds
xor
ja
mov
push
ficompl
pusha
stc
jo
cld
adc
mov
dec
mov
ficoml
xchg
cli
fs
jl
xchg
cmp
dec
mov
pop
sbb
test
in
mov
dec
and
jle
lahf
lea
inc
cmp
xchg
inc
jne
popf
lock
jbe
push
leave
mov
mov
jo
cli
out
fidivrs
ret
addr16
add
or
dec
sbb
pop
push
in
into
imul
adc
inc
pusha
sahf
dec
pop
aas
add
or
inc
push
mov
cli
es
sbbl
movsb
sub
add
push
pop
out
insl
adc
icebp
mov
insl
push
test
lods
sub
cmc
inc
xchg
rol
xor
sub
andb
add
jb
sbb
push
lea
adc
imul
and
mov
mull
and
sbb
jno
orb
and
insb
js
movsb
lock
sbb
lock
cmpl
or
into
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
mov
test
scas
jnp
jb
imull
ret
js
cmp
cli
je
or
les
add
out
enter
cmp
int3
js
push
inc
and
cmp
lea
mov
hlt
sti
sub
mov
ljmp
jno
shr
push
jne
inc
and
rorb
push
movsb
andl
dec
dec
inc
dec
adc
jnp
xchg
or
xchg
lock
cmp
mov
scas
add
dec
jmp
ja
push
pushf
out
into
ljmp
sbb
cmp
sub
add
rolb
movsl
movswl
xor
mov
mov
add
cmpb
shlb
sub
sub
xor
cmp
xor
jne
mov
add
push
flds
pop
add
sub
cmp
ss
mov
dec
aaa
je
xchg
jl
lods
fs
pop
push
xchg
shrb
and
test
pop
mov
sbb
movsl
add
das
pop
shll
stos
test
jne
jne
adcb
repnz
addb
rclb
sub
icebp
inc
bound
push
addb
test
popa
cmp
push
sti
xorb
add
sbb
inc
lcall
ret
test
scas
in
out
xor
les
xor
xchg
test
xchg
js
cmp
mov
stos
cmp
fldt
pushaw
and
push
add
pop
lock
xor
outsl
xor
je
sbb
add
js
sub
xchg
push
and
or
sar
push
lea
adc
sub
mov
sbb
or
add
or
xor
lock
out
dec
fisubrl
fcoms
movl
push
cwtl
sbb
and
add
mov
push
and
lods
mulb
adcl
lods
inc
mov
inc
add
vmaxsd
push
test
add
mov
or
lea
lock
and
fnstcw
js
sahf
enter
cmp
repz
xchg
jbe
pop
add
and
inc
inc
rcrl
ret
cmp
and
pop
fdivs
cld
subb
outsb
ljmp
xchg
into
in
ret
jge
int3
mov
stos
mov
sub
sbb
mov
inc
xor
mov
aad
rcr
xchg
adc
inc
and
call
add
divb
push
or
lods
out
pusha
xor
out
jmp
xor
adc
fwait
popa
adc
cltd
push
cmp
mov
and
xchg
xchg
add
repz
push
sbb
xor
adc
and
jl
xor
faddl
fsubrl
test
sbb
push
jecxz
or
sbb
lock
mov
push
pop
push
cmp
loopne
fiadds
mov
mov
sarb
pop
in
pop
or
inc
dec
push
jecxz
sbb
fmuls
fstps
push
cmc
or
adc
add
je
mov
loope
nop
add
dec
call
inc
jl
or
mov
rcrb
test
mov
xor
xor
fisttps
dec
pop
mov
movsl
mov
push
orb
ja
pusha
lods
push
sbb
and
insb
lea
push
adc
pusha
xchg
loope
adc
jmp
daa
stos
pop
add
sbbl
pop
xchg
shlb
lock
ds
orl
test
jmp
xor
and
mov
inc
xchg
mov
cmp
and
dec
popw
pusha
icebp
sbb
fdivp
inc
fdivp
fidivrl
dec
test
dec
cltd
push
lret
test
adc
jae
pop
push
sub
fisubs
je
xchg
sbb
divl
xor
sarl
cli
mov
ret
jl
repnz
cmp
mov
mov
call
and
inc
sub
push
repz
es
xor
sbb
cmpsb
sbb
or
xchg
int
inc
jg
inc
imul
or
addl
adc
es
test
sub
pop
sub
imul
ret
or
pop
mov
popf
inc
jg
adc
inc
int
roll
cld
mov
iret
push
into
push
mov
cmp
imul
cmp
decb
out
and
test
xchg
jle
mov
or
mov
push
pop
cmp
cs
or
sbb
push
and
cmp
in
xor
add
nop
add
pop
ja
lcall
cmp
add
or
insl
or
add
and
cmpsb
push
and
push
xchg
shr
and
loop
je
or
add
xor
sub
adc
inc
stos
and
mov
inc
aaa
push
or
or
jo
push
push
xchg
lods
dec
fs
fcompl
addr16
inc
sub
test
dec
or
add
push
sbb
jbe
pusha
sbb
sbb
mov
jg
xor
push
jb
sub
pop
es
outsb
sub
cmp
xchg
andl
pusha
dec
xchg
pop
mov
xchg
jae
mov
fwait
xchg
cmp
push
dec
lahf
cmp
mov
loope
mov
js
movl
push
in
lcall
inc
dec
push
inc
xor
xchg
ret
or
add
mov
icebp
nop
sbb
pusha
jnp
cwtl
roll
mov
cltd
ss
aas
mov
call
outsb
dec
js
scas
lds
add
je
sub
jbe
inc
in
jmp
push
daa
sbb
mov
jns
mov
lods
std
inc
cmc
js
int
mov
inc
jmp
pushl
rorb
pop
mov
aaa
call
lea
push
subb
jmp
mov
and
shll
pop
mov
inc
mov
or
into
jl
inc
aam
test
inc
negb
or
adc
mov
jl
andl
add
in
adc
je,pt
ss
mov
add
jae
dec
cmpsb
cmp
inc
lds
pop
push
cwtl
flds
lea
cmp
es
adc
scas
inc
xor
push
test
add
push
fcoml
cmp
mov
or
mov
jo
adc
mov
and
cmp
mov
cmpsl
or
mov
lcall
aam
push
arpl
mov
push
pop
add
imul
mov
sbb
xchg
mov
pop
lock
shrl
pop
push
sbb
pop
jo
pop
jmp
and
mov
loope
adc
adc
clc
mov
bound
movsb
and
push
or
mov
loop
dec
add
lods
or
sub
pop
pop
xor
idivb
test
push
xchg
pop
add
fisubl
xchg
imul
jg
adc
or
subb
test
subb
sub
cmp
imul
dec
jmp
testb
clc
fcoms
and
mov
ss
pop
fdivr
int
dec
or
dec
jl
loope
xor
push
not
lds
addb
push
test
sbb
or
add
inc
test
mov
leave
pop
adc
xchg
stos
dec
in
arpl
mov
mov
xchg
rcrb
mov
in
movsl
inc
add
mov
aas
add
or
testb
leave
inc
push
mov
jo
popa
add
sarl
aaa
pop
leave
adc
mov
add
mov
xchg
movsb
dec
test
push
push
pop
test
mov
or
pop
add
mov
jl
dec
jp
cmp
push
test
loopne
mov
pop
pushf
adc
or
or
pop
dec
shrb
mov
push
add
xchg
mov
sub
adc
idivb
mov
mov
mov
push
xor
into
jmp
ljmp
fcoms
mov
stos
or
jbe
cmp
or
scas
sbb
mov
es
xlat
dec
imul
pop
push
jg
mov
cmp
dec
cmc
scas
cld
ret
jge
push
add
push
mov
xchg
and
in
xchg
jmp
or
mov
dec
js
dec
and
ds
add
mov
sub
je
push
je
jecxz
push
lcall
or
test
xchg
and
andl
cltd
inc
sbb
and
testb
repz
xor
xchg
fmuls
mov
aas
and
movsb
stos
inc
or
sub
daa
js
cmc
xor
lods
add
pop
and
adc
mov
sub
out
andl
adc
adc
or
cmp
fstpl
or
inc
adc
mov
insb
sub
push
push
jns
push
dec
add
mov
sbb
hlt
and
lcall
ret
add
cli
mov
sub
sbb
aaa
pop
stos
push
mov
inc
popa
hlt
hlt
jle
push
or
jae
leave
wrmsr
pop
rolb
add
or
or
dec
insb
insl
push
pop
inc
cmc
cmpsb
or
andl
mov
imul
mov
dec
insb
add
sbb
adc
add
jl
add
das
rol
cmp
adc
push
cmp
adc
or
xchg
sbb
fistps
sbbb
cmp
cmc
jns
pop
mov
pop
test
shlb
jns
shrl
fcoms
cs
sbb
push
mov
push
pop
add
xor
mov
je
push
jecxz
and
aas
sbb
ret
jbe
stos
out
pop
or
cmpl
and
outsl
inc
cli
push
cld
push
movb
shrb
enter
sbb
xor
shll
iret
call
call
test
gs
loopne
adc
cmp
insb
sbb
add
push
pop
sbb
or
or
push
cmc
pusha
insb
std
pop
push
sbb
add
adc
add
shr
popa
repz
dec
dec
push
mov
popf
and
in
sub
jae
insl
dec
cld
fsubs
mov
es
fimull
sbb
sbb
jne
sbb
movsb
push
mov
push
pop
adc
shl
rolb
pop
jbe
ret
ss
hlt
adcl
jno
dec
sbb
push
int
dec
lods
jnp
dec
add
xor
ret
sub
out
loop
pop
hlt
xchg
fsts
or
mov
orl
loopne
adc
push
sbb
and
nop
test
idivb
orl
pop
shrl
inc
xchg
add
test
mov
loopne
out
pop
adc
or
pop
arpl
mov
mov
mov
xlat
insb
sbb
or
mov
nop
cmpsb
aam
lahf
inc
mov
add
pushl
dec
arpl
inc
frstor
xor
ret
inc
scas
xor
je
js
add
ss
dec
sbb
jnp
lret
add
fucomip
cwtl
adc
mov
ficomps
in
add
add
jmp
push
mov
fisttps
pop
mov
out
cmp
jl
sarl
push
cmp
jle
add
xor
and
shl
cmp
or
int
andl
adc
nop
push
jne
repz
mov
jo
and
xor
sbb
xor
aas
adc
push
loope
adc
hlt
sbb
inc
nop
mov
je,pt
aas
push
stos
push
mov
sbb
or
scas
jb,pn
fimuls
push
pop
scas
js
and
jmp
jp
cmp
and
hlt
inc
adcb
ret
cmp
sub
push
push
sub
xor
ja
cmpsb
in
lea
bound
ret
mov
test
and
and
push
frstor
adc
and
lds
pop
or
fwait
pop
fs
sub
adc
cmp
push
jecxz
and
clc
aaa
inc
test
pusha
or
xor
jbe
das
adc
inc
mov
les
sub
mov
les
lret
dec
insl
xchg
fs
loopne
jne
mov
loope
imul
and
rol
adc
cld
call
dec
mov
mov
aas
jmp
adc
movsb
cmc
subb
xchg
adc
or
dec
xchg
mov
push
test
test
pop
sub
or
js
test
mov
test
lods
sarl
add
in
push
pushf
add
fisubs
add
je
add
xchg
lock
div
add
hlt
loopne
xchg
pop
dec
jle
xor
ret
mov
aaa
push
neg
ret
and
and
rorl
jae
sarl
and
add
cmp
loope
pop
or
shlb
adc
mov
push
push
cwtl
pusha
and
in
cmp
dec
js
movl
cltd
push
push
push
hlt
or
dec
dec
loopne
xor
lea
je
mov
inc
xlat
sbb
cmp
sbb
addr16
clc
imul
loop
push
sarb
andl
pop
loopne
mov
or
sbb
cs
addb
add
ret
addb
push
or
fistl
xchg
pop
mov
imul
mov
add
lret
mov
rclb
rcll
shrb
adc
cmpb
jns
mov
in
nop
stos
sti
jb
inc
sbb
in
orb
dec
ficompl
das
in
daa
add
in
xchg
xchg
pusha
mov
arpl
mov
test
sbb
fsubrl
lea
outsb
mov
loop
dec
inc
xchg
push
iret
pop
or
push
jo
push
pop
cld
push
es
add
adc
dec
cmp
inc
shl
scas
adc
adc
xor
ret
cmpsl
adc
fcoms
or
fs
xchg
xchg
aam
sub
nop
outsb
sti
jbe
mov
test
outsl
cwtl
dec
fstpt
adc
ja
je
or
je
and
mov
or
sub
fisubrl
mov
scas
sti
cmp
mov
andb
or
jo
mov
xchg
sbb
push
push
fistpll
jne
sahf
outsl
pop
add
mov
push
sti
xor
negb
mov
jbe
adc
push
xor
inc
and
outsb
inc
mov
cmp
int3
iret
ja
inc
data16
pminub
pusha
dec
add
push
movsb
call
clc
cmp
sbb
push
lea
jecxz
mov
lods
lock
xor
mov
js
pop
sub
cmpsb
or
add
inc
xor
or
adc
sbb
sbb
dec
ret
or
adc
jecxz
sbb
mov
mov
test
xchg
and
xor
pushf
aad
or
mov
subb
pop
sbb
xorb
fadd
push
cli
mov
dec
je
sub
add
sub
push
stos
add
bound
jo
lret
inc
scas
fidivrs
in
mov
xor
shll
or
push
adc
inc
dec
scas
leave
xchg
mov
inc
cmc
out
or
xor
fldt
fsubr
and
or
inc
add
push
sbb
add
test
add
adc
out
rorl
and
movsl
cmp
cmp
loopne
ja
pop
mov
jne
push
or
sub
pop
cmpsb
push
pusha
daa
andb
rolb
repz
add
sbb
inc
mov
stos
sbb
pop
fsubl
pminsw
les
push
jmp
loopne
ds
std
clc
or
add
inc
cli
or
or
push
adc
movb
sbb
push
xchg
call
inc
cmp
mov
ret
fstl
pop
add
jbe
dec
push
lret
adc
push
int
mov
imul
fcompl
add
les
sbb
dec
push
dec
mov
cmpl
out
xor
and
push
jb
add
add
add
add
repnz
sub
pop
dec
inc
xchg
pop
enter
mov
fsubl
inc
add
jg
mov
jge
mov
adc
sub
insl
add
dec
stos
js
lods
lods
movsl
xchg
inc
xchg
sbb
fsubrp
loop
cmpl
pop
mov
int
push
ret
pop
rcrb
hlt
cmc
fcomp
mov
pop
test
enter
push
ret
andb
xchg
leave
shlb
ds
jo
out
jl
mov
ret
aas
mov
sarl
jge
jne
pop
inc
add
adc
daa
add
sbb
das
xchg
pop
out
mov
push
xchg
ret
lret
or
inc
sbb
mov
addr16
dec
lods
or
sbb
add
inc
shlb
movsb
mov
mov
outsl
cld
mov
imul
repz
adc
push
cmp
adc
or
add
mov
xor
addl
stc
sbb
add
cld
jg
dec
and
hlt
or
push
sub
xor
sub
jnp
jle
mov
push
subl
or
js
mull
jno
shlb
daa
inc
ret
sti
push
xor
inc
adc
icebp
aam
pop
lock
bound
add
xchg
jge
rcr
lea
add
lahf
ds
lods
mov
mov
clc
sbb
and
push
sbb
data16
inc
pop
mov
xor
stos
sbb
sbb
push
jb
xor
mov
jg
outsl
loopne
leave
and
pop
je
adcb
insb
insb
xor
loopne
sbb
adc
cmp
adc
add
or
or
mov
mov
mov
fimuls
and
lods
sbb
sub
push
and
sub
fwait
sbb
add
adc
mov
or
add
insl
pop
inc
inc
push
or
inc
shr
inc
or
mov
pop
int
push
int
push
dec
inc
mov
stos
test
rcl
or
sbb
scas
daa
xchg
sarb
jecxz
in
cmpsl
push
push
cmp
inc
jp
and
movsb
push
gs
jbe
pop
push
inc
das
fwait
adc
rcl
add
push
xor
xchg
outsb
fcoml
sahf
ret
inc
sub
subb
jo
cmpsl
push
xchg
push
sub
xor
imulb
push
lcall
xor
xor
aaa
divps
push
addr16
and
or
cmp
hlt
xor
sbb
pusha
rorl
js
mov
sarl
ret
mov
sbb
and
mov
out
std
mov
mov
pextrw
sbb
mov
mov
mov
pop
lea
mov
adcl
or
test
add
gs
push
sub
loope
mov
sbb
lock
xor
rclb
pusha
sub
daa
cmpsb
js
adcb
inc
inc
or
jne
cmpsl
adc
xchg
pop
fadds
enter
je
cs
xor
add
sar
enter
and
shll
cmp
or
or
sbb
das
push
xlat
jp
loopne
cmpsl
and
imul
mov
jnp
mov
pushf
add
hlt
xor
lahf
sarl
or
subl
pop
lock
enter
jne
xor
adc
int3
test
add
stos
imul
or
push
sbbl
jne
test
mov
sub
fsubs
pop
test
push
js
je
xor
popa
or
sti
and
rcll
sti
fiadds
jl
sbb
xchg
xchg
das
movsl
rolb
sbb
jmp
ret
rcr
std
and
adc
dec
dec
pop
test
inc
movl
dec
adc
and
rcrb
dec
cmp
adc
pop
cmp
test
dec
inc
lods
push
dec
xchg
icebp
cmp
shrl
in
xor
cmpsb
std
inc
adc
add
push
mov
dec
mov
movsl
pop
mov
dec
jno
sub
cmc
test
jle
jle
je
ret
add
pusha
mov
popl
jbe
mov
sbb
mov
pop
mov
sbb
adc
das
and
pop
sbb
sub
mov
in
and
cmp
in
mov
leave
add
xor
clc
sbb
push
das
inc
sbb
dec
pop
or
sbb
sub
sbb
add
cmpsb
jo
adc
loop
mov
and
pop
or
nop
mov
test
lahf
inc
mov
dec
pop
adc
jle
out
dec
mov
icebp
in
loopnew
movsb
sub
je
repz
lock
dec
cltd
scas
shl
test
jecxz
cmp
pop
mov
loop
dec
sbb
fadds
push
mov
or
call
repnz
jmp
push
nop
adc
roll
ljmp
mov
push
repnz
daa
je
shlb
add
pushaw
push
lret
cmp
je
int
aad
in
adc
push
adc
lea
es
or
dec
ja
dec
adc
mov
or
sti
and
insl
daa
lcall
inc
push
inc
dec
cli
mov
dec
dec
xchg
sub
je
cmpsb
mov
mov
je
cmp
or
add
cwtl
cmp
jne
arpl
movl
fisubs
cld
cmp
sbb
popf
or
sbbb
loopne
inc
cld
jo
leave
ljmp
sub
sbb
rcrb
inc
shrl
and
pop
pop
push
cmp
cmc
xor
push
jne
cmpb
and
push
data16
or
push
adc
pop
mov
addr16
add
loop
jp
or
ficoml
inc
imul
sahf
sbb
cmp
and
fstpt
add
sub
add
jmp
fucomi
stos
cltd
push
xchg
pop
orl
sbb
imul
outsb
pop
cmp
adc
jle
rcrb
adc
or
insl
movsl
std
push
dec
or
je
adc
fldcw
scas
sbb
jbe
and
das
push
sbb
fwait
and
cmp
imul
adc
sub
rcr
sub
jne
icebp
lret
sub
lods
lahf
pusha
fsubl
dec
add
inc
inc
xor
clc
add
and
xchg
sub
jge
xor
or
xor
xor
rorb
xor
je
lock
cmp
enter
jne
inc
mov
jne
inc
jne
ja
and
dec
rolb
ret
movsl
fwait
xchg
xchg
pop
gs
call
clc
inc
and
insl
push
mov
add
xor
jmp
push
and
push
lahf
or
daa
insl
xchg
and
imul
imul
add
insl
repz
fidivs
mov
in
sub
bound
cltd
adc
push
mov
mov
pcmpeqw
bound
adc
or
sbbl
fcoms
or
mov
jbe
pop
adc
and
mov
movsl
test
pop
leave
dec
adc
mov
jmp
push
push
ret
insb
pop
imul
imul
lods
adc
push
push
es
movsl
xor
or
lods
xor
fadds
cmp
lock
je
adc
push
clc
loopne
jg
push
scas
dec
mov
dec
movsb
ret
inc
or
shrb
dec
fsubrl
and
orb
add
cmp
addb
hlt
popf
fdivrl
aaa
in
clc
inc
xor
shl
out
xchg
xor
aaa
in
aam
mov
mov
movsl
sbb
lahf
loope
dec
pop
fldl
aas
int
push
testb
or
or
jo
arpl
mov
ljmp
mov
pop
inc
loopne
loopne
add
aad
xor
xor
xlat
add
insb
inc
mov
mov
jmp
inc
sahf
cmp
add
pop
pop
xor
loope
cmc
mov
std
ljmp
jnp
sbb
sbb
popf
and
mov
jne
test
orb
xor
iret
mov
pop
mov
lock
int3
or
jne
aam
add
inc
inc
xor
push
pusha
insl
xchg
loopne
pop
mov
dec
pop
xchg
add
in
int3
inc
xor
cmp
pop
adc
add
push
mov
xchg
jbe
add
scas
sbb
add
repz
or
shll
insl
dec
ljmp
enter
sbb
mov
hlt
loopne
pop
push
xchg
fs
icebp
movsl
and
or
nop
push
and
and
add
push
xor
rorb
cmpsb
jbe
or
cltd
mov
cltd
adc
test
cmp
dec
or
pop
or
movsl
lock
add
aam
pop
fcomps
cmp
jne
sbb
mov
clc
popf
add
clc
push
xorps
pushf
das
ficoms
mov
cmp
add
repnz
sbb
outsb
pusha
xchg
cmp
push
push
add
cltd
pusha
clc
mov
jmp
push
loope
nop
sub
jge
xchg
jae
sti
pusha
cs
fidivrl
or
xchg
sti
add
add
ljmp
in
ficoms
cwtl
or
jmp
push
inc
inc
push
cmpsl
shld
fmuls
inc
mov
add
stos
jno
imul
cmp
jno
ror
bswap
inc
lods
mov
enter
enter
mov
cmp
pop
push
cld
push
lret
push
xchg
or
jecxz
outsb
inc
mov
scas
pop
clc
sub
jge
adc
xchg
xchg
xchg
decl
sub
and
or
das
pop
push
sub
lcall
lock
and
loop
jle
rcrb
or
lds
and
vmread
cmp
pop
pushf
mov
pop
xor
pop
dec
call
or
aas
lods
push
xchg
sbb
adc
sub
inc
es
imul
sub
cmp
lock
cltd
jge
subl
das
mov
bound
and
repz
das
aaa
and
cmp
scas
cltd
out
add
shll
push
leave
push
xor
or
lods
dec
orb
imul
jno
mov
and
push
mov
mov
ss
mov
add
mov
sar
test
xchg
xchg
scas
xchg
mov
and
sbb
lahf
add
xchg
xchg
push
or
dec
dec
sbb
addr16
add
sahf
out
adcl
push
lea
add
call
mov
cmp
push
cmp
mov
jmp
sbb
aas
xor
je
test
add
cmp
jbe
xchg
adc
xchg
test
push
pop
lds
lea
cmpsl
dec
xchg
push
sub
mov
xchg
pop
fildl
inc
ds
sbb
sub
push
add
and
inc
adc
and
xor
inc
das
xchg
std
fs
mov
das
push
pop
dec
std
adc
or
js
sub
dec
enter
in
push
add
sub
insb
sub
sbb
inc
dec
cmp
fs
or
xor
fsubr
inc
leave
mov
cmp
inc
or
lds
lcall
sbb
inc
and
sbb
xor
in
mov
add
fiadds
or
and
mov
xor
test
or
orl
xor
or
adc
mov
and
sbb
adc
and
jl
jbe
push
jnp
clc
lcall
push
push
sbb
push
jl
outsl
add
iret
add
test
addr16
or
shrb
or
roll
sbb
add
cmp
push
sub
enter
add
mov
ljmp
movb
jo
adc
sub
lea
mov
rorb
dec
sbb
fdivrs
dec
adc
add
ss
lock
scas
adc
sbb
adc
sub
push
ss
jecxz
and
cmp
adc
sbb
add
add
das
dec
jecxz
push
mov
js
pushf
mov
mov
lods
adc
in
in
xchg
dec
or
pop
out
stos
lea
dec
stos
xchg
xchg
sub
sbb
ljmp
adc
std
les
and
cld
movsl
leave
cli
or
andl
mov
xor
mov
insl
clc
sub
ficomps
xchg
pop
cmc
jecxz
xor
push
dec
mov
push
push
jbe
fdivl
add
divl
ret
pop
adc
fcoml
dec
sbb
xchg
xchg
setl
sbb
xor
shll
inc
push
push
adc
jne
and
scas
andb
stos
or
pop
xor
pop
insb
mov
pop
ret
sub
das
sbb
xor
xor
mov
popa
and
in
or
sub
loopne
mov
mov
fsubl
dec
adc
cmp
das
xor
adc
adc
add
inc
lret
or
push
hlt
lods
popa
adc
pop
xor
mov
mov
adc
push
jae
mov
in
push
xorl
rol
push
add
aas
cmp
xchg
sub
push
pop
adc
pop
xchg
es
loope
mov
rorl
filds
mov
inc
push
adcb
loop
push
sub
sbb
sub
cmp
xchg
mov
add
ret
sbb
pop
xchg
ja
or
mov
push
clc
shl
xor
adc
jge
cmp
pop
mov
cld
fcoml
pop
cld
sub
lock
test
pop
ret
mov
pop
add
dec
inc
and
jl
add
xor
in
mov
push
cmp
xor
or
lods
in
cmp
push
push
jo
add
ja
leave
nop
sub
fmull
sbb
rorl
pop
jp
push
xor
mov
rolb
movsb
or
pop
push
lea
xor
inc
push
inc
imul
and
sti
jl
test
jg
mov
sahf
jg
push
xor
sbb
mov
sub
mov
sbb
loop
lock
pop
mov
dec
cmp
xchg
sub
push
and
out
mov
jle
dec
add
jmp
or
in
xorps
pop
hlt
xor
mov
or
add
inc
inc
aas
pop
lds
ja
sub
dec
pushf
addr16
inc
mov
cmpb
mov
xchg
push
mov
les
xor
xor
pop
pop
pop
pop
cmp
dec
add
sbb
sub
and
roll
dec
push
pop
mov
movl
add
or
inc
add
sub
andb
jae
jnp
repnz
mov
inc
mov
subb
popa
decl
mov
jne
cmc
xor
adcl
je
ficoms
test
xor
pushf
sbb
xor
insl
jns
mov
dec
mov
add
movl
push
mov
pop
es
sub
shll
push
pop
je
jmp
iret
inc
adc
aad
jle
xor
dec
mov
add
inc
or
paddd
sub
pusha
add
sahf
add
push
or
or
hlt
and
pusha
shrb
or
xchg
inc
xlat
sub
sub
jno
js
cmpb
mov
and
aaa
and
out
pop
mov
fwait
cmp
pop
fcoms
xchg
mov
adc
and
adc
movzwl
ss
test
stos
test
test
or
or
push
add
jbe
test
xor
sub
cmp
mov
pop
dec
cmpl
or
imull
pop
lea
sbb
mov
rep
sbb
outsb
sahf
mulb
data16
sbb
jmp
testl
pushl
jne
and
or
out
mov
clc
andl
sub
jne
push
push
dec
cld
jae
push
push
popf
adc
testb
and
push
mov
loopne
jge
pop
loopne
adc
sub
je
data16
xor
adc
adc
push
push
arpl
aas
call
lock
adc
sbb
xor
lcall
adc
jbe
flds
fidivs
test
imul
mov
je
and
nop
jmp
mov
jno
push
sahf
mov
inc
scas
push
flds
xchg
sbb
bnd
pop
push
lea
jnp
pop
adc
push
push
pusha
xchg
shlb
sbb
xchg
ret
and
jae
push
sbb
inc
add
mov
lock
push
lret
lcall
jecxz
dec
cmp
mov
push
insb
popa
dec
loope
mov
inc
inc
insb
mov
jno
inc
pop
or
and
lods
pop
xchg
jno
ljmp
pop
in
test
push
leave
dec
sbb
pop
stos
mov
sub
lret
dec
xlat
mov
adc
push
adc
add
xchg
xor
popl
inc
lea
dec
sbb
sbb
imul
sarb
dec
jne
mov
mov
fs
bound
push
wrmsr
push
js
mov
jbe
and
addl
add
mov
imul
and
adc
sbb
push
mov
sub
js
inc
adc
clc
adc
inc
fadds
add
push
movsb
add
call
xor
xchg
dec
mov
pop
dec
add
jo
add
mov
adc
les
jnp
test
sbb
and
lods
xchg
or
mov
push
rcll
int3
roll
fcmovb
xor
fnsave
cmp
xorb
insb
fcompl
shl
je
sub
or
mov
xor
push
call
sub
sar
add
or
or
mov
lcall
shl
lret
dec
dec
lret
lcall
sub
xor
sahf
inc
jecxz
in
inc
push
cmp
je
cmp
in
mov
pop
cmp
das
cltd
fisubrs
xor
rol
inc
or
ret
fisttpl
add
sahf
ja
test
pusha
sub
mov
mov
pop
inc
pop
mov
es
cmpl
mov
dec
sbb
dec
mov
dec
sub
roll
popl
and
rorb
push
adc
sub
aam
mov
xor
mov
notb
outsb
aam
lds
std
xlat
sub
sbb
lcall
sbbl
inc
test
or
mov
mov
or
cmpsb
rcrb
fadds
adcb
push
imull
adc
pop
test
or
arpl
push
imul
adc
mov
inc
or
insl
push
lea
sub
adc
cs
pop
push
jge
jmp
push
rol
mov
mov
jmp
ret
jne
sub
outsb
sar
sbb
int3
dec
lcall
push
sub
adc
mov
jb
jae
sbb
sbb
push
add
mov
dec
hlt
jae
and
xchg
lods
jae
ret
pop
and
fs
cwtl
dec
daa
cmpsl
ss
inc
movsb
push
adc
pop
and
and
or
dec
mov
xchg
cmpl
sub
daa
jmp
jp
adc
shrl
sub
or
or
pop
adc
cmp
mov
sub
stos
push
frstor
setg
in
inc
jecxz
iret
lea
rcrb
inc
fstpl
adc
jge
arpl
pop
push
xor
sub
fimuls
push
loopne
push
mov
and
inc
sbb
cltd
sbb
sbb
mov
sub
insb
dec
testl
push
cmp
cmp
add
xorl
sbb
cmp
adc
dec
adc
insb
fsubs
sub
and
adc
or
rcr
adcb
push
jb
mov
or
arpl
sbb
mov
cmp
cmp
pop
ret
or
int3
push
jb
adc
cmp
data16
add
xor
add
sub
or
repz
movsl
or
push
and
adc
mov
cmpsl
jne
xor
xor
rcrb
dec
pop
cmp
test
add
cmpb
and
xchg
cs
push
fldenv
inc
mov
stos
mov
push
dec
or
xor
fs
mov
add
or
jge
mov
and
inc
aas
and
inc
push
nop
jl
jl
and
push
and
and
sbb
xchg
sbb
es
push
nop
inc
push
sub
daa
push
nop
inc
sbb
aas
inc
inc
mov
lret
les
cmp
test
or
mov
das
sbb
cpuid
jb
pop
push
cmp
push
inc
in
inc
and
jle
in
xor
sub
xor
or
mov
mov
mov
clc
sbbl
xor
cmc
pop
cmp
xor
stc
pusha
adc
push
add
add
mov
jbe
mov
adc
cmp
sbb
xchg
adc
pop
lock
test
mov
pop
lods
rcrb
adc
jnp
and
inc
sub
sahf
roll
and
stos
pusha
shlb
add
add
jo
pop
mov
movsb
int3
les
jp
repnz
test
sbb
test
sbb
fldl
dec
lcall
insl
or
neg
cmpsb
cmp
jmp
xchg
or
xchg
mov
repz
icebp
inc
mov
mov
repz
loop
fimuls
enter
std
fsubrl
loopne
jp
rcl
in
aam
and
add
add
out
lret
dec
mov
jp
dec
hlt
sub
push
mov
add
cs
inc
push
rcrb
cmpsb
xchg
xor
add
xchg
cs
adc
fsubl
jno
mov
and
dec
dec
pop
push
sub
push
mov
pop
mov
sub
push
sub
cmp
cmp
and
adc
dec
pop
lock
pop
fadds
push
adcb
xor
cmp
cmpb
aaa
xchg
or
adc
pop
cmp
and
xor
out
std
fs
int3
xor
mov
xor
lock
roll
fwait
push
xchg
and
push
mov
add
and
loop
mov
and
test
sub
mov
and
pop
inc
add
out
adc
mov
das
dec
loopne
mov
mov
or
pop
jbe
or
outsb
mov
xor
bnd
cmp
or
mov
push
cmp
lret
push
and
add
push
push
xor
dec
xor
xchg
out
jb
adc
fs
add
mov
adc
cmp
push
pop
mov
dec
pop
ret
sbb
or
scas
addr16
and
movsl
mov
push
xor
sarb
lods
sub
nop
add
hlt
aad
or
mov
movsb
jmp
and
in
add
je
ss
adc
xchg
cmc
sub
lods
cld
push
shlb
mov
test
adc
cmp
push
clc
lock
mov
inc
push
and
xchg
aas
int
fisttpl
test
push
push
xor
pop
je
shrb
cmp
add
push
add
dec
or
or
xchg
jo
int3
aam
mov
cmp
in
add
fisubrs
call
out
insl
sub
inc
push
or
mov
or
cld
cmp
push
add
push
int
dec
pop
mov
std
aam
and
in
sbbb
pushf
nop
jae
sbb
mov
lcall
push
push
add
lahf
jmp
das
pop
mov
or
mov
or
or
inc
nop
test
pusha
jnp
inc
sub
ret
aam
xchg
stos
sarb
fcomp
cmpsl
mov
es
xlat
ljmp
mov
loopne
xlat
xchg
mov
push
adcb
jnp
fdivrl
sbb
dec
mov
cwtl
or
dec
cmp
and
pop
or
sub
into
pop
clc
jl
mov
mov
xchg
jg
test
ret
jbe
jmp
ss
add
fbstp
xor
dec
adc
mov
cltd
cmp
or
and
mov
cmp
dec
cmp
lock
das
or
scas
popa
push
lock
inc
cmp
rclb
push
divl
shll
push
pushf
js
inc
inc
imul
mov
pusha
adc
jl
test
pop
test
push
daa
dec
das
add
jp
sbb
lret
shlb
or
mov
popa
pop
add
xor
sub
ljmp
xchg
xchg
pop
push
cli
push
mov
test
or
push
inc
leave
dec
fdivl
or
or
push
push
ds
add
divl
pop
addb
jb
push
mov
push
test
add
xchg
imul
mov
mov
mov
iret
clc
adc
mov
mov
xchg
pushf
fwait
xchg
or
in
int3
sub
std
add
sbb
ficoms
or
cmp
jo
cltd
sahf
lret
mov
mov
in
inc
cwtl
pushl
add
cmp
or
xchg
push
pop
xchg
or
mov
scas
insb
xor
push
mov
daa
loopne
shll
and
dec
dec
xor
xchg
push
scas
je
mov
mov
fmuls
fmuls
jne
xchg
movsb
cmp
add
push
loope
dec
mov
lods
push
add
test
mov
mov
mov
or
xchg
aam
xchg
pop
shlb
shl
incb
mov
sbb
or
test
adc
popa
popa
dec
adc
xor
jne
cmpb
mov
imul
or
int3
xchg
inc
or
jo
xor
and
sub
pusha
sub
or
sbb
enter
dec
push
lock
arpl
xor
fs
mov
ucomiss
fs
adc
dec
lock
sahf
xchg
aas
icebp
push
dec
pushf
mov
sub
xchg
js
or
testl
mov
xor
mov
add
jb
dec
xor
pop
outsl
adc
cmp
loopne
sub
faddl
rorb
stc
push
mov
sub
pop
and
outsb
test
jns
rcrl
ds
ret
leave
mov
out
add
push
arpl
insb
ret
xchg
xor
push
js
inc
push
mov
push
jo
cli
push
dec
pusha
xor
dec
outsb
call
or
lds
push
aam
mov
xchg
aam
mov
and
xor
push
lahf
jl
ficoml
push
adcl
pushf
xor
shlb
and
into
popf
mov
lcall
addr16
inc
dec
push
adc
add
cltd
test
das
test
sahf
enter
dec
and
cmp
push
pop
mov
adc
push
adc
repz
push
push
adc
cmp
add
cmc
add
cmpsb
mov
mov
jbe
pop
jl
inc
sub
push
insl
flds
dec
arpl
mov
mov
mov
push
ja
ljmp
xchg
or
rclb
fs
mov
and
es
cltd
inc
add
mov
cmp
stos
push
cmpsl
sub
pop
adc
sbb
pmulhuw
sub
ds
add
clc
xchg
push
cmp
pop
jecxz
sub
fsubrs
sbb
pop
call
jb,pn
pop
enter
sbb
aad
add
les
and
lea
pop
ss
jno
mov
xchg
cmp
mov
pushf
mov
jb
mov
mov
mov
mov
lock
jecxz
mov
xchg
in
pusha
sbb
cli
add
pop
xor
xchg
xchg
cmpsl
sub
inc
push
add
scas
mov
sbbb
mov
sub
mov
fs
lea
rcll
fbld
dec
inc
add
push
mov
xchg
pop
or
call
into
xor
outsb
mov
test
sbb
adc
add
xchg
ljmp
dec
test
clc
or
outsb
and
push
lods
pop
push
and
push
mov
pop
insb
enter
or
fadd
enter
inc
xor
ret
adc
push
mov
jnp
jge
mov
or
rolb
jo
enter
jnp
push
lods
fcoms
inc
dec
inc
imul
pop
or
push
mov
cmc
pop
push
das
stc
test
lea
pop
mov
movsb
push
adc
ret
mov
je
sub
push
call
inc
and
push
cs
mov
cwtl
pushf
aam
xrelease
dec
lods
lock
hlt
dec
adc
sub
pusha
mov
imul
xor
pop
shrb
imul
cmpsl
lea
enter
adc
imul
ret
fsts
sbbb
push
jns
xchg
pop
add
add
gs
inc
dec
lea
xchg
jmp
cmp
popf
mov
movsb
sub
mov
jo
test
movsb
lea
adc
movsl
or
push
popa
call
movsl
add
fs
lea
rcll
test
inc
adc
cmp
add
mov
popf
inc
loope
or
dec
mov
sahf
mov
dec
xor
lods
and
fs
test
push
mov
dec
ud2
mov
stos
pop
or
mov
add
sbb
andb
mov
xor
rorb
movsb
lds
ret
add
add
and
mov
push
cmpsl
sbb
push
mov
push
mov
inc
lcall
mov
add
sbb
pusha
rcl
sub
mov
sbb
push
repnz
add
cmp
mov
fimull
mov
jns
outsl
ret
repz
filds
sub
lock
jp
lods
or
push
test
jo
cmpsl
push
push
test
scas
je
push
mov
loope
ret
ret
cmp
lret
lea
insl
lea
out
ret
outsl
xlat
nop
push
std
add
cwtl
mov
mov
sti
loopne
push
je
rorl
add
sub
push
adc
loopne
push
jmp
xchg
fldcw
repnz
and
xchg
inc
aas
dec
push
cwtl
sub
cmpsb
shrb
movsb
stc
push
sbb
dec
fdivl
dec
fs
scas
inc
push
test
sbb
int3
gs
sbb
xchg
ficoms
test
push
mov
mov
imul
add
sbb
push
in
mov
scas
mov
lea
mov
inc
adc
js
mov
cmc
cmc
add
movzbl
add
mov
cmp
and
call
mov
fsts
cmp
jge
fdivrl
push
sub
lret
mov
cmp
mov
mov
pop
pop
or
in
imul
test
and
nop
int
rcrb
add
jg
movsb
pop
sub
jge
add
add
rol
cmp
xchg
pop
cmpb
cltd
or
pop
push
mov
xchg
arpl
pop
push
ret
jns
dec
xchg
test
xor
dec
mov
imul
mov
inc
cmp
jmp
or
xlat
test
icebp
adc
mov
xchg
dec
shrl
pop
mov
sbb
inc
clc
shld
loopne
cmp
mov
loopne
rorl
mov
outsb
mov
sti
or
and
add
sarb
cmp
push
push
ja
sub
fsub
mov
pop
scas
imul
add
xchg
add
adc
addl
and
or
test
push
pop
call
decb
imul
movsl
loop
clc
push
sub
outsb
lock
or
jl
es
loopne
xor
adc
xchg
cmpsb
mov
xchg
jg
enter
mov
pop
insb
dec
adc
mov
cmp
inc
lock
test
cmpsb
sub
hlt
mov
or
ss
fs
jns
shlb
aas
cmp
sub
std
int
pop
fwait
inc
cmp
je
mov
outsb
adc
je
data16
jae
or
jmp
jle,pt
jge
mov
iret
jg
outsb
adc
fldt
cli
jbe
or
inc
sub
setle
call
inc
adc
jle
xchg
push
pop
mov
or
jp
mov
and
jle
or
sbb
lret
sbb
lock
xlat
add
adc
jmp
or
out
cmp
fnstcw
cmpsb
dec
cmp
sbb
sbb
push
lock
xor
fs
inc
jmp
inc
repnz
bnd
add
addr16
inc
ja
dec
and
jne
push
or
loope
and
dec
adc
andl
dec
xchg
push
sbb
add
or
adc
adc
lret
lods
dec
and
jmp
pop
cmpsb
xchg
pusha
dec
ret
pusha
xor
dec
push
inc
pop
pop
aad
nop
push
fadds
fiadds
mov
mov
sbb
call
imul
cmp
or
inc
es
push
add
roll
adc
push
mov
add
jno
imul
out
mov
cmp
push
push
cmpsl
cmp
lret
xchg
hlt
xchg
fmuls
sbbb
lods
sub
mov
fmuls
sbb
decl
pop
push
repz
sub
xchg
xor
and
stos
inc
les
sub
xchg
push
jns
push
cli
or
adc
fmuls
iret
shlb
sbb
inc
mov
stos
mov
mov
rcrb
les
aam
andl
fcoml
shlb
or
jae
popa
mov
push
sub
negl
inc
mov
push
push
inc
stos
ret
push
adc
xor
movsl
testl
pop
dec
add
pop
sbb
test
inc
xchg
push
into
xchg
xchg
shrb
mov
adc
jp
add
test
nop
and
xchg
pop
iret
cmp
mov
test
or
mov
addr16
push
jbe
xchg
inc
inc
lcall
and
pop
lods
int
insl
outsl
push
inc
ss
adc
inc
dec
sahf
xchg
mov
adc
and
or
pop
mov
xchg
cwtl
mov
mov
push
sbb
adc
mov
lods
inc
add
xchg
mov
xchg
sub
dec
lds
xor
in
stc
movsb
fcom
cmp
fwait
mov
add
adc
dec
mov
mov
outsl
xor
push
cmpsl
xchg
adc
fistl
aas
mov
test
inc
stos
fcom
pop
xchg
shrl
add
addl
rcr
push
pop
hlt
or
xchg
mov
pop
cmc
pop
or
popa
and
or
fcoms
inc
dec
mov
pop
ret
add
addr16
or
test
inc
lret
jne
enter
ss
jno
inc
pop
repnz
scas
mov
cmp
inc
testb
xchg
inc
push
js
mov
ret
mov
sub
pop
andl
cmp
push
add
fdiv
lret
sub
add
in
icebp
mov
cmp
push
inc
iret
js
mov
xor
sbb
dec
xor
or
pushf
testb
aaa
arpl
add
push
xlat
and
roll
pop
sub
fcompl
push
mov
in
loopne
push
xor
pop
add
sbb
cmp
insb
or
adc
cmp
xor
lret
xor
cmp
push
sbb
push
testl
xor
add
mov
sti
xor
in
mov
sbb
dec
xor
loop
xchg
xor
shr
xchg
nop
loopne
xor
loope
mov
dec
dec
xchg
imul
sub
pop
or
jmp
outsb
pop
cmp
call
add
aaa
jmp
add
stos
shlb
adc
and
fdivs
add
inc
jbe
sbb
loop
jl
stc
sbb
and
jl
popf
test
arpl
mov
jg
nop
movups
add
jp
fcmovu
outsl
insb
add
in
mov
add
and
pop
fcmovb
inc
fidivs
mov
and
xchg
test
and
testb
ss
hlt
shlb
or
fcoml
add
mov
rol
faddl
dec
xchg
enter
push
jno
pop
jl
lods
push
and
nop
enter
xor
jecxz
and
cmpsb
xlat
add
inc
and
and
dec
pop
xor
and
pop
mov
addr16
xor
cmc
adc
sbb
cs
mov
aaa
adc
mov
add
popa
adc
loope
push
scas
les
stos
and
sarl
inc
movsb
outsb
sub
mov
jge
mov
sub
hlt
stos
lea
or
pop
mov
ret
arpl
add
mov
add
adcb
push
fidivl
pop
fs
or
add
stos
cmpsb
xor
jae
mov
nop
rcrb
xor
xor
push
and
xlat
pusha
or
mov
xchg
or
push
and
imul
cmp
push
cmp
xor
add
and
int3
cmp
shrl
xchg
addr16
or
pop
add
sub
insl
fs
out
sub
dec
push
sub
xor
nop
pop
jae
idivl
mov
mov
dec
loopne
clc
mov
push
add
nop
addr16
fnsave
push
adc
jmp
adc
xchg
je
cmpb
xor
pop
imul
and
mov
xlat
out
push
and
fmull
jb,pn
and
aam
in
push
in
loopne
adc
nop
ret
jo
andl
femms
fwait
mov
pop
in
sbb
mov
popa
js
adc
xor
adc
jmp
adc
adc
ret
outsl
cmp
sbb
inc
in
push
fistl
mov
xor
mov
sbb
cmp
mov
loope
dec
sbb
push
xchg
cmpsl
mov
push
pop
out
aam
adc
jmp
inc
adc
and
popl
pushf
xchg
push
adcb
les
je
pop
mov
lods
lret
rol
xchg
movb
hlt
fsubrs
mov
xchg
dec
sub
inc
jge
popa
test
sbb
dec
fmulp
movsb
push
xchg
aam
inc
adc
mov
inc
fdivrs
push
outsl
fisttpl
movsb
add
cmp
or
js
push
xor
test
rcrl
add
add
adc
je
cs
push
pop
dec
mov
dec
push
das
dec
shlb
mov
fcomip
jnp
lret
nop
loope
dec
push
push
xor
xor
ret
push
rcrb
mov
push
pop
imul
cmp
push
and
pop
insb
pusha
roll
dec
scas
or
jg
lock
subl
mov
mov
lock
dec
sbb
pop
in
mov
mov
push
or
mov
jmp
mov
inc
mov
mov
mov
push
int
imul
add
sahf
sub
pop
test
push
mov
mov
add
xor
adc
test
mov
enter
inc
mov
loope
mov
cmp
push
sub
lret
lret
lret
movsb
jo
mov
in
lret
mov
add
out
shlb
fcompl
and
cwtl
fdivr
test
cwtl
nop
push
push
adcb
lret
dec
addb
xchg
push
fsubr
aam
push
adc
dec
add
pop
add
pushl
add
les
push
hlt
test
xor
mov
fmulp
lods
sbb
mov
mov
jne
into
fisubs
cwtl
push
xchg
dec
test
sbbb
mov
xchg
jl
leave
test
inc
add
rolb
popf
add
jb
and
js
insl
xor
sub
enter
les
dec
add
push
adc
push
adc
mov
fsubl
push
add
xor
add
cmp
popa
in
push
fcomp
sub
pop
cltd
pop
and
data16
cmp
je
sbb
icebp
pop
pop
les
nop
and
push
mov
and
add
and
or
mov
xlat
sub
xor
xchg
add
add
cmp
xor
or
loopne
les
xchg
test
loop
push
sub
xor
cwtl
sbb
or
fs
mov
fs
add
dec
test
mov
pop
push
or
jmp
lahf
rcll
adc
sub
xchg
or
aaa
stos
mov
lds
ret
clc
and
stos
xor
dec
push
mov
adc
stos
in
adc
adc
mov
bound
push
cmp
jmp
adc
cltd
mov
inc
insb
cs
xor
adc
sub
pop
pusha
leave
in
sti
add
movsb
cmp
hlt
pop
add
iret
or
jo
inc
xor
imul
les
decb
cmpsb
and
imul
adc
sbb
mov
bound
rcrl
xchg
push
or
inc
test
mov
sbb
test
into
mov
cs
sbb
mov
push
mov
lahf
jne
das
rcrb
lret
xor
call
push
mov
aam
or
add
loop
push
xor
leave
jne
add
inc
or
lds
inc
ds
cmpsl
sbb
in
cmp
ret
pop
adc
pop
imul
mov
add
jbe
inc
ds
in
sbb
mov
add
xchg
mov
lock
push
or
xor
mov
repz
aad
lea
or
std
cli
and
inc
cmp
inc
mov
jmp
fldl
inc
push
repz
call
ss
mov
sarb
add
push
scas
xorb
push
sarb
int
inc
hlt
fstl
add
fcomp
fnstsw
jne
in
ljmp
in
fldl
pop
fsubr
pop
faddp
andl
sbb
mov
sub
pop
push
adc
xor
xchg
fnstcw
xchg
lods
orb
cmp
inc
xchg
or
inc
clc
adc
sbb
rcll
mov
mov
cmp
mov
mov
sub
loope
mov
fsubrs
add
inc
jecxz
xchg
in
pop
inc
mov
iret
sub
sarl
push
mov
lea
push
or
mov
or
sbb
add
xchg
mov
clc
std
push
push
sub
and
in
subps
popa
jp
fistpl
push
push
insb
adc
mov
push
dec
mov
int3
dec
add
cmpb
call
mov
jnp
xor
jne
pop
in
pop
sbb
ljmp
ljmp
inc
add
mov
outsl
addl
cmp
jge
or
mov
dec
sbb
or
ss
outsl
stos
pop
push
inc
and
pop
cmpsl
or
repnz
test
or
bound
push
pushf
repnz
inc
mov
sub
cwtl
push
test
out
jg
xor
add
and
rol
lret
add
ja
mov
mov
shrl
fiaddl
xor
stos
push
jle
adc
pop
push
mov
orb
repnz
mov
push
pop
dec
scas
and
xor
inc
dec
mov
lahf
push
shll
push
xchg
mov
mov
cld
sbb
inc
cmp
aad
push
push
xor
adc
sub
pop
push
mov
push
in
sub
cmp
insb
push
lcall
mov
pop
ret
and
addb
or
dec
or
jne
test
adc
mov
cmpsb
test
mov
pop
fcomps
or
pusha
mov
jp
pop
stos
rorb
push
xor
movsl
loope
mov
pop
xor
dec
cmp
lods
rorl
das
xor
jge
xor
dec
cmpsl
sahf
enter
pop
daa
pop
sbb
sub
aas
sahf
or
scas
xor
lcall
cmp
add
movsb
xor
add
fcmovne
mov
mov
loopne
fcoms
push
mov
sbb
inc
ret
jne
adc
movsl
outsb
fisubrs
inc
insb
add
in
cmp
mov
pushf
or
sbb
test
cs
daa
imul
jno
scas
or
and
mov
bound
dec
mov
mov
mov
jle
cmp
push
ss
inc
mov
shrl
dec
lock
orb
insl
adc
inc
cltd
and
bound
and
rcll
icebp
dec
js
push
xor
add
add
fwait
mov
push
imul
and
push
mov
movl
clc
lcall
sub
mov
or
xor
lret
decb
repz
gs
mov
add
add
arpl
jae
or
int
loop
stos
or
mov
or
ss
mov
js
shrb
cmp
in
int3
push
jmp
or
rcrl
ret
mov
test
push
das
sbb
xchg
loop
add
or
push
xchg
fsubs
push
clc
repz
mov
xor
xchg
js
and
add
jb
ja
insb
je
inc
rolb
push
mov
cmp
jmp
adc
cmp
mov
add
scas
fmull
mov
mov
mov
andl
jl
lret
adc
rorb
cmpsb
pop
xchg
add
fdivrs
adcl
addr16
jb
push
or
mov
and
sahf
cmpsl
adc
outsl
mov
sbb
and
add
daa
add
inc
push
test
cmc
or
out
in
xor
mov
mov
rolb
dec
icebp
mov
popf
sbb
in
loopne
push
mov
add
in
dec
or
mov
lock
pusha
and
and
pop
xchg
inc
sub
or
adc
push
addr16
cmp
loopne
lock
or
test
movsb
rclb
and
add
ja
adc
in
out
add
and
mov
adc
addb
jmp
cmpl
jmp
popa
addr16
push
sbbb
fistps
fbstp
xor
mov
jmp
and
popf
push
pslld
sahf
mov
xchg
and
lret
xchg
jb
jl
push
adc
dec
dec
scas
sub
jmp
xor
push
fcompl
fidivrs
cmpsb
push
bound
dec
jbe
mov
inc
test
in
or
jle
adc
adc
mov
adc
add
add
in
push
add
pop
je
mov
add
dec
loopne
or
xor
cmp
pop
cs
push
jne
dec
ds
or
movsl
or
adc
enter
loopne
addr16
flds
push
ds
or
push
rclb
sarb
add
insl
imul
stos
es
mov
sbb
xchg
xchg
out
push
in
lock
cmpsb
inc
jo
pop
push
xor
shlb
loopne
mov
into
lock
sbb
cmpsl
cmp
mov
pop
or
mov
xor
orl
and
mov
push
sbb
ret
fnstcw
add
stc
inc
mov
jl
test
fisubs
leave
lock
adc
rolb
lret
or
xchg
call
pusha
jne
negb
push
sarb
dec
pop
js
in
mov
sbb
das
pop
fdivrs
aam
lcall
les
jae
adc
xchg
test
arpl
mov
push
and
out
mov
sbb
iret
adc
jo
jbe
scas
xchg
sbb
movsb
popa
jo
aaa
push
faddl
insb
push
pusha
lock
ja
xchg
inc
cmp
jne
lcall
xorl
mov
dec
enter
sub
pop
repnz
or
and
rclb
add
orb
bnd
jbe,pn
shlb
fldpi
add
ret
and
cmp
ret
or
pop
clc
jl
jno
push
shll
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
loop
dec
cmp
lcall
sbb
aaa
rolb
loope
xor
shl
or
or
repz
imul
push
mov
data16
pop
push
xchg
push
cmpsl
lea
push
sub
stc
cmc
bound
push
or
stos
mov
jle
ret
dec
ficoms
inc
fsubrs
imul
rcl
and
fcoms
push
mov
adc
or
push
lahf
jp
rcrw
push
movups
lock
imul
jge
inc
jmp
pop
sub
jge
imul
cs
sbb
push
rcrb
shll
pop
or
pop
call
add
xchg
xchg
in
js
and
xchg
mov
enter
add
lds
fisttps
add
rcll
cmpl
jecxz
ds
inc
dec
dec
or
movlps
inc
lods
adc
and
mov
or
les
mov
xor
outsb
popf
mov
sub
popa
and
xchg
or
mov
in
loopne
sub
pop
in
fnstenv
sbb
loopne
ret
aad
adcl
sub
daa
sbb
sub
sbb
cli
mov
xchg
adc
inc
and
jmp
push
mov
aas
jne
cmp
das
imul
xor
out
add
decb
loopne
dec
je
sub
push
lahf
push
addr16
add
adc
or
lods
mov
mov
or
xor
sahf
add
jmp
lods
addb
xor
lods
outsl
ret
sti
push
and
push
sti
push
dec
push
addr16
lods
push
sub
dec
jb
mov
push
adc
lret
mov
and
stos
xchg
xorl
sub
or
push
or
push
sarb
push
clc
pop
xchg
inc
jmp
adc
mov
adc
inc
inc
cmp
sbb
sbb
shlb
jno
mov
les
or
addl
or
lock
add
in
cmp
je
mov
and
add
mov
mov
push
add
les
cltd
lret
sub
push
stos
add
add
cmp
add
ficoms
push
inc
inc
dec
push
inc
repz
ficomps
pusha
cmp
dec
xchg
push
outsl
in
mov
cmp
xchg
ret
flds
ds
sbb
inc
andl
dec
xchg
rolb
sub
pop
cld
pop
lea
or
or
cmpsl
adc
xor
xor
stos
popf
sub
push
ss
inc
mov
ja
int3
push
push
mov
add
test
and
dec
cs
and
fs
aas
adcb
cmp
mov
push
xor
fiadds
cmp
mov
sub
lea
add
mov
push
loopne
push
adc
repnz
scas
xchg
in
cli
std
in
faddl
ret
jb
sbb
or
lret
jo
sbb
popa
dec
iret
cwtl
fdivs
sahf
adc
or
inc
push
nop
sub
or
mov
adc
cmp
mov
sbb
adc
ja
cmc
xor
sbb
push
jae
pop
sbbb
es
dec
test
test
es
leave
jle
inc
xor
in
add
or
xchg
add
jle
and
lods
jg
jecxz
sar
add
incl
push
addr16
jno
inc
pop
adc
or
pop
add
dec
xor
push
dec
fs
cs
pop
cmp
pop
arpl
push
inc
pcmpeqb
inc
sbb
xchg
or
add
test
mov
ss
xchg
pop
out
xchg
test
push
and
hlt
xor
add
xchg
jno
inc
add
pop
es
arpl
jb
mov
pop
rolb
pop
dec
pop
mov
cltd
popa
sbb
sub
syscall
pop
fcomps
xor
in
cltd
cmp
lcall
orl
mov
jne
incl
cmp
jl
xor
lret
into
test
xchg
imull
fsubrs
cmp
pop
fidivs
sub
sub
dec
push
cmpb
es
loopne
push
into
jl
shrl
xchg
fisubl
pop
enterw
fcoms
sbbl
mov
out
pop
mov
push
pop
je
push
mov
cmp
adc
sub
cmp
or
push
sbb
sbb
inc
xchg
test
inc
and
xchg
loopne
jbe
jne
jns
pop
sbb
mov
push
jmp
push
sbb
loop
dec
je
sub
dec
int
clc
lock
stos
xor
pop
imul
jne
jl
aam
stos
les
dec
inc
mov
gs
xor
xchg
int3
scas
bound
xor
cs
push
lds
sarl
adc
hlt
push
mov
dec
pusha
sbb
or
mov
stc
cmp
or
outsl
popl
sbb
push
js
add
ss
xchg
push
jp
add
or
rcl
test
mov
je
rorl
pop
outsl
push
lock
fstl
mov
sub
dec
test
and
aaa
push
mov
push
shlb
and
lea
jns
inc
dec
push
in
dec
pop
xchg
or
or
or
aad
mov
pop
test
jle,pn
and
or
test
push
lret
adcl
push
lock
inc
jle
pop
and
in
mov
cmp
test
cld
mov
mov
inc
jo
outsb
fdivrs
cmpl
aad
loop
mov
push
std
popf
xor
pop
arpl
pop
insl
popa
out
jno
dec
inc
and
aam
fdivrs
mov
push
xor
sbb
data16
xor
pop
mov
push
ss
sub
or
inc
xor
push
pop
xlat
push
push
cmp
ja
lock
data16
jne
inc
mov
add
mov
daa
dec
cmp
aad
pop
stos
movsl
mov
inc
jbe
adc
mov
cli
movsl
cmp
lods
push
bound
test
int
call
cmc
adc
add
sub
fldl
cmp
inc
mov
pop
ss
pop
notb
push
sub
popf
xchg
push
bswap
aam
add
sbb
ss
adc
pop
cmp
jne
push
jmp
cmp
imul
add
shll
mov
test
sub
pushf
adc
and
pop
mov
inc
cltd
in
leave
enter
and
or
pop
jb
adc
fsubl
addr16
das
push
add
xchg
jae
mov
repnz
test
leavew
ret
jle
mov
adc
jle
or
pop
inc
loope
xrelease
adc
insb
pushf
sbbl
in
in
and
movl
dec
cltd
or
in
mov
mov
decl
aaa
nop
cmpsl
rorb
test
mov
enter
xchg
mov
pushf
jge
iret
loop
push
dec
adc
shlb
fnstenv
add
jne
test
call
adc
dec
inc
pusha
rclb
xor
in
dec
push
cmp
sub
mov
add
adc
inc
lcall
lds
sbb
pop
fwait
fs
int
jmp
mov
int
dec
xchg
mov
pop
or
pusha
add
sbb
pop
jp
xchg
or
pop
sbb
adc
xchg
add
rclb
inc
push
scas
mov
mov
pop
jo
adc
dec
fs
bound
inc
pop
mov
inc
sbb
dec
pop
in
aas
mov
cmp
or
sbb
je
jmp
pop
adc
inc
popa
adcl
mov
adc
mov
adc
popf
or
shlb
jg
rorb
movd
sarl
and
add
push
cltd
or
aad
enter
loopne
mov
in
adc
jl
adcb
mov
mov
inc
add
jne
adc
loope
orl
mov
and
movsl
inc
mov
xchg
mov
pop
lsl
inc
add
aas
jge
mov
gs
inc
dec
dec
or
insb
jbe
andb
pop
sub
ss
mov
mov
xchg
mov
jmp
or
pop
cmp
jle
call
idivl
scas
inc
clc
or
push
or
and
pop
and
inc
xor
add
push
sbb
or
sbbl
jbe
jns
and
adc
ret
addb
sbb
fisubs
xor
popf
shrb
pop
rolb
cmp
je
add
sahf
popa
mov
dec
add
idivl
es
fwait
popa
ret
cmpl
lahf
sub
test
mov
xlat
and
or
insl
jmp
xor
icebp
or
mov
icebp
mull
fcom
lods
jmp
inc
lahf
mov
dec
mov
jno
xchg
test
and
cmp
jl
push
push
push
cwtl
push
mov
cwtl
push
add
dec
xchg
rorb
mov
fnsave
cmp
xchg
jecxz
es
hlt
stos
sub
or
and
lock
outsl
test
sbb
sub
adc
and
mov
add
push
cmpsb
rcr
cmp
in
and
fists
and
test
push
test
insl
rorl
xor
mov
imul
or
call
xchg
aam
sbb
sub
or
sbb
add
jne
xchg
aaa
mov
xor
in
fbstp
cmp
es
push
pop
push
inc
sub
sbb
sti
stos
and
std
pop
pop
jne
cmp
xor
cld
cld
in
push
decb
push
mov
aas
jbe
jb
add
and
push
mov
nop
jp
ret
inc
cwtl
or
ror
fs
aam
sbb
lea
jle
mov
dec
popa
jle
jle
mov
repnz
sub
lock
cmpsl
aam
imul
sub
xor
or
loopne
outsl
sbb
shr
push
outsl
fbld
sub
sub
add
push
push
xor
push
xor
jbe
and
adc
xor
shrl
adc
cmp
sub
daa
movsl
fdivrs
js
test
ret
add
das
xchg
inc
add
adc
cmp
pushf
jno
xor
sbb
cltd
addr16
pushw
adc
xchg
hlt
repz
add
cmpsb
popa
jo
sbb
and
jg
xchg
push
or
lock
cmp
and
mov
cmpsl
add
push
mov
dec
mov
mov
dec
in
cmp
inc
or
push
and
adc
mov
pop
add
leave
adc
mov
test
pop
push
dec
add
pop
add
sbb
orl
jecxz
mov
inc
mov
inc
dec
jecxz
mov
add
adc
rolb
xchg
mov
push
xchg
sub
adc
and
jg
push
jb
xchg
add
js
dec
sahf
imul
sub
arpl
jns
jne
cmpsb
push
lahf
dec
fsubs
mov
gs
pop
addl
pop
push
or
push
loopne
iret
dec
insb
add
push
push
enter
xor
or
jb
push
or
or
subb
jno
or
or
out
test
pusha
subl
adc
loop
je
sarb
orb
pusha
and
push
dec
push
cli
pop
jb
cmp
xor
adc
stc
cmp
cmp
ja
add
sbb
lret
pop
jp,pn
cmc
lcall
add
test
ret
pop
push
push
pop
out
mov
push
mov
dec
std
adc
push
xor
fcom
in
pushf
sbb
mov
ds
or
xchg
sbb
adc
sub
push
call
inc
push
inc
scas
xchg
adc
fs
rclb
jecxz
in
jmp
push
and
add
push
mov
addb
mov
lret
mov
imul
xchg
mov
and
mov
std
outsl
mov
sub
mov
or
jg
add
adc
loopne
or
dec
and
pop
or
or
adc
in
xchg
stos
add
inc
push
stos
iret
push
mov
cmp
lock
icebp
sbb
dec
push
fistpl
call
subb
aad
cmp
stos
xchg
cmp
dec
lock
and
call
add
test
dec
adcl
hlt
push
jmp
in
insl
and
push
lea
dec
enter
in
push
inc
xorb
lret
bound
push
mov
das
push
add
push
adc
jl
js
out
dec
dec
fmull
sub
or
add
scas
loope
xchg
sub
in
ja
push
jns
jnp
ret
jmp
lret
fdivl
jle
sub
int
and
int3
push
pop
mov
sti
bound
xor
push
jle
imul
add
mov
jl
rclb
mov
ljmp
out
xchg
out
inc
inc
adc
mov
je
stos
inc
lock
pushf
data16
les
hlt
mov
jbe
fwait
shl
shll
adc
and
int3
ret
adc
push
jb
or
or
sarl
add
cmp
jecxz
sbb
sbbb
or
xor
pop
ret
sub
test
das
or
xor
lea
jle
pusha
sub
lret
add
insl
or
mov
inc
pop
movsl
mov
or
pushf
xchg
jge
data16
adc
pop
push
shl
das
imul
sbb
mov
push
insb
mov
stc
sub
or
cwtl
sub
xchg
push
mov
inc
cmp
xor
cwtl
pushl
cwtl
clc
mov
xchg
xchg
loopne
fsubl
fcomps
pop
shll
and
dec
fiadds
shrb
mov
cmp
in
jb
mov
sbb
rep
ds
push
adc
cmp
inc
pop
test
loopne
inc
test
fsubs
push
shr
test
imul
adc
and
xchg
xor
popa
mov
stos
mov
xchg
mov
or
add
in
mov
push
enter
sahf
sbb
and
shl
push
mov
adc
lods
push
xchg
pusha
mov
movl
and
mov
dec
addr16
in
cwtl
cmp
enter
jmp
push
jbe
testb
xor
icebp
jae
fimuls
mov
sbb
push
arpl
nop
scas
insl
cmp
cmp
ja
jg
call
sbb
subb
insb
mov
push
xchg
repnz
fcoml
daa
cmp
jne
les
js
add
or
sbb
mov
loope
xchg
jp
js
rolb
outsb
lds
push
popf
hlt
or
loope
imul
in
inc
xchg
rcl
or
int3
inc
cmp
adc
jnp
jno
pop
mov
and
lods
push
ret
and
add
lock
je
dec
mov
outsb
sarb
int3
repz
pop
or
push
sbb
mov
sbb
movsb
xor
pop
and
daa
cmp
push
mov
adc
ljmp
nop
rclb
mov
mov
adc
fsubrp
or
call
adc
adc
and
jmp
adc
cmp
xor
mov
pop
dec
leave
rol
jne
movsbl
xor
mov
clc
adc
jbe
push
paddb
ficomps
push
mov
mov
test
arpl
sbb
mov
add
push
mov
push
jecxz
ds
repnz
push
clc
xchg
xor
shrl
jl
and
and
mov
dec
sub
pop
cltd
orb
mov
or
outsb
push
decl
pop
cmp
jl
outsb
push
hlt
push
cmp
push
pop
sbbb
pop
xor
hlt
ret
enter
add
dec
dec
sub
ds
imul
adc
xchg
jmp
inc
subl
add
pushf
mov
push
rolb
fs
ja
adc
inc
push
fwait
ret
mov
or
push
adc
add
pushf
mov
xor
insl
push
add
add
pushf
pushf
pushf
add
outsb
lahf
pushf
or
jmp
or
jmp
or
jno
outsb
outsb
outsb
or
por
jmp
outsb
outsb
outsb
outsb
adc
pop
adc
push
adc
dec
adc
dec
outsb
outsb
outsb
outsb
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
outsb
outsb
sbb
pop
pop
jmp
and
or
and
mov
adc
and
pop
hlt
inc
rdpmc
shl
jecxz
or
sub
js
sub
jl
je
repz
inc
add
sarl
repz
loope
icebp
div
adc
repz
fadds
or
repz
unpcklps
push
and
cmp
repz
xor
cmp
repz
repz
dec
push
push
pop
xor
iret
pop
imul
fadds
add
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
inc
add
inc
mov
add
cmp
aas
psubusb
popf
dec
or
outsl
inc
sub
and
mov
inc
adc
dec
sti
mov
fnstcw
inc
add
divl
or
add
dec
pop
add
mov
fdivl
jo
out
push
mov
xchg
jne
mov
inc
jg
push
nop
outsb
adc
xor
testb
fwait
xor
or
mov
ljmp
adc
inc
lea
hlt
sub
xor
call
popa
xchg
mov
lea
loope
test
xorl
repz
enter
test
mov
ret
adc
fdivrl
cmpsl
sarl
cmp
ret
add
hlt
mov
cmp
sbb
mov
mov
insb
xchg
cmpsb
lods
mov
xor
rolb
test
iret
mov
bound
enter
lcall
push
fcompl
pop
sub
out
cli
push
test
das
jae
sub
mov
inc
cmp
jae
sbb
ljmp
cmp
jb
test
inc
jge
xor
xchg
add
incl
inc
loop
add
ja
addr16
or
ret
push
sbb
pusha
sub
icebp
es
cmp
psrlq
jle
pop
cmpsl
add
push
lods
xchg
or
fistpl
scas
iret
adc
xchg
sbb
cmp
jae
or
dec
test
fists
pop
and
mov
ljmp
call
adc
loope
dec
les
cmp
dec
sub
int3
jne
aam
lods
rolb
stos
adc
jl
loopne
sbb
pop
js,pn
ret
movl
adc
inc
dec
imul
cmp
fcoml
ljmp
ret
cmp
hlt
mov
xchg
aam
adc
and
push
scas
ds
adc
or
and
stc
ja
lea
imul
cmp
ja
inc
stos
pop
mov
lods
mov
stos
ret
xchg
andl
imul
sbb
add
adc
or
inc
ret
pop
in
jmp
icebp
stos
push
sbb
in
clc
incb
add
xor
fidivs
push
mov
scas
cmc
rorl
lcall
add
mov
push
and
test
pop
pop
push
or
mov
pop
sub
mov
push
or
inc
pop
stos
or
dec
sbb
or
insl
fnstsw
push
fdivs
cmc
in
pop
adcb
mov
xor
jo
jge
nop
lret
inc
mov
adc
add
or
rorl
xor
xchg
movl
pop
rcrl
sbb
add
sbb
lock
fadds
push
xor
aaa
daa
adc
xor
xchg
mov
cmp
sbb
push
and
pop
cltd
cmpl
mov
setb
mov
inc
xor
movl
sub
leave
mov
orb
imul
inc
or
adc
div
movsl
push
xchg
pop
xor
push
rcrb
xor
aas
sbb
adc
push
fildl
jl,pn
xchg
adc
adc
add
hlt
cmovnp
jle
ss
cmp
jne
lea
cmp
shl
mov
jne
or
js
popw
nop
cmp
lock
sbb
mov
inc
jg
loope
mov
or
or
test
jl
dec
xchg
sahf
cmp
push
js
mov
cmp
xchg
imul
jae
ds
mov
lcall
dec
daa
jle
mov
and
movzbl
sub
test
fwait
sbb
in
out
adc
ret
cld
js
push
add
adc
aam
gs
jo
pop
push
inc
in
cmp
mov
sub
ret
mov
mov
and
dec
lcall
mov
jne
shrb
outsl
push
push
lahf
cltd
ja
jmp
xchg
inc
nop
jbe
add
mov
fwait
and
cmp
cmpsb
mov
inc
mov
sub
in
push
adc
dec
out
or
add
sbb
adc
ret
push
mov
ficoms
ss
pop
aaa
js
jne
xorl
idivb
push
gs
jo
cld
pop
clc
adc
ds
mov
mov
in
sub
shlb
jecxz
push
ret
arpl
dec
dec
mov
or
cmp
inc
adc
or
jle
cmp
popa
mov
xchg
lret
adc
mov
sbb
add
sbb
inc
loopne
sub
dec
enter
cltd
sub
xlat
outsl
sbb
dec
mov
nop
xchg
nop
das
sub
or
fimuls
notl
mov
inc
mov
push
sbb
rorl
xlat
mov
insb
cwtl
dec
enter
cmp
es
test
cld
xor
add
inc
xlat
add
push
jnp
ret
ret
add
xchg
addl
loope
and
push
jmp
dec
adc
in
pushf
outsb
mov
xor
pop
or
pusha
and
pop
xchg
insl
push
sub
push
sti
aas
cwtl
clc
je
jmp
push
bound
lea
iret
rdseed
cmpsb
lock
rcr
pop
lcall
mov
test
mov
sub
cmp
enter
pop
push
sub
sbb
mov
pop
mov
add
bound
jle
jle
or
lcall
insb
add
pop
dec
cmp
inc
push
push
xchg
mov
push
lock
sbb
cmp
mov
fisttpl
inc
ds
repz
addl
lret
dec
loopne
jo
fdivrl
iret
je
ss
pop
inc
adc
pop
sbb
in
or
jo
inc
jnp
or
sbb
xor
jb
cmp
adc
cmp
scas
arpl
xor
or
out
mov
push
mov
push
ret
lods
inc
loope
inc
ret
pop
or
jnp
jo
aaa
mov
inc
in
pop
ficoms
or
push
nop
pop
int
jle
add
inc
imul
data16
push
pop
pop
and
ljmp
std
nop
xor
scas
xor
dec
imul
cmpsl
inc
push
mov
cld
sbb
loope
ljmp
push
cmp
and
adc
cld
add
mov
gs
lea
mov
xor
mov
add
xor
push
sbb
jb
dec
ljmp
shrl
cmp
or
inc
xor
shlb
sbb
iret
in
adc
stc
push
push
add
dec
or
bswap
xchg
fstl
testb
sar
sbb
add
aaa
dec
mov
pop
fwait
jge
or
xchg
add
push
cmpsl
cs
sbb
cmp
xchg
insl
xor
xchg
sub
sbb
dec
imul
cmp
sbb
cmpsl
cltd
jb
adc
inc
movsb
loop
mov
ffree
add
mov
mov
clc
mov
js
das
loop
push
pop
push
ret
ljmp
and
mov
je
inc
mov
push
hlt
inc
iret
mov
dec
cld
dec
add
enter
sbb
cpuid
pusha
nop
mov
xchg
fisubs
push
fdivs
inc
push
inc
jno
jg
cwtl
push
scas
divb
sub
jmp
cmp
push
adc
ljmp
sub
mov
adc
sub
loope
bound
fnstsw
negl
pop
ss
fisubl
mov
pop
or
ds
shll
enter
push
xorl
add
pop
enter
and
addl
cmpb
inc
xchg
xchg
mov
ret
lret
dec
inc
jl
and
mov
ds
sub
pop
pop
and
jnp
stc
xchg
inc
pusha
les
xchg
xchg
adcl
imul
mov
xor
loopne
and
dec
push
shlb
sbb
xchg
cmpl
mov
je
ljmp
mov
insb
in
mov
in
dec
imul
inc
push
sti
shlb
push
sub
sbb
xchg
and
and
bound
and
enter
pushf
add
and
add
cmpsb
ss
mov
mov
add
cmp
pop
push
lods
cmp
sub
sub
aas
fs
and
jg
mov
flds
xor
fsubrs
stc
xchg
xchg
and
and
lods
test
popa
sub
xor
pusha
adc
cmp
roll
lea
sub
daa
dec
sub
inc
ffree
mov
and
adcl
mov
sbb
inc
aaa
dec
push
and
and
andl
mov
or
lcall
dec
adc
cmp
int
outsl
pop
add
pop
fcmovne
leave
sbb
xor
inc
xchg
push
push
inc
es
roll
push
cltd
sbb
movsl
je
add
clc
dec
mov
fisttps
mov
pop
insb
xchg
adc
sub
lea
js
mov
lea
push
mov
jb
movsl
jp
pop
aam
inc
pop
push
push
arpl
pushf
movsb
mov
inc
stos
mov
or
or
fildl
daa
popa
adc
adc
mov
adc
xor
ja
dec
sbb
int
cmp
jne
and
mov
mov
les
push
dec
dec
cwtl
pop
xchg
std
cmp
je
cmp
or
push
push
in
loopne
aaa
inc
mov
fsubl
xchg
imul
cmp
inc
sub
sub
mov
es
cwtl
sub
adc
add
aam
ret
sbb
negl
aad
ret
inc
fstpl
lahf
rclb
mov
bound
cmpsb
sbb
adc
or
dec
fisubs
adc
dec
test
in
mov
movsl
and
dec
addr16
and
cmp
ret
adc
xor
pushf
sahf
pop
pop
xchg
mov
push
repnz
cltd
push
inc
dec
xchg
add
add
pop
lock
fsubrs
cmp
mov
mov
movsl
inc
or
je
xor
or
or
test
repnz
push
cmp
mov
lock
inc
pusha
cmp
inc
cmp
movsb
inc
mov
mov
les
pop
adc
inc
test
mov
lea
adc
daa
sbb
adc
shrl
push
cmp
jge
mov
ja
mov
jle
pop
lea
or
stos
rdtsc
in
lock
push
add
cwtl
and
mov
sbb
xchg
testb
ret
das
hlt
clc
clc
cld
add
sqrtps
movl
lahf
lret
or
push
add
add
cmpsb
test
jg
jle
sbb
add
dec
je
add
adc
cmp
in
jmp
aas
dec
or
mov
shr
sbb
loopne
lret
cwtl
mov
ljmp
xor
lea
inc
lds
or
cmp
js
mov
loope
test
mov
sub
xchg
and
fists
or
je
push
add
out
loop
and
fldpi
pop
mov
mov
repnz
add
decl
out
lret
sub
movsb
add
push
add
je
cmp
jne
sbb
adc
mov
pushf
cmp
fdivrl
xor
add
ljmp
fildl
clc
sbb
jmp
push
or
cltd
idiv
inc
inc
imul
push
mov
orb
adc
call
pop
xchg
loope
addb
push
add
or
cmp
add
mov
cmp
or
mov
adc
push
push
out
icebp
xchg
lock
add
or
pop
pop
cmpsb
mov
test
jmp
daa
pop
out
es
loope
push
in
inc
xchg
and
fmul
repnz
mov
jg
or
int
cmpb
jmp
jp
aad
inc
movsb
push
ds
jne
decb
jle
in
xor
je
cmp
pop
clc
lcall
pop
cmp
je
cmp
jne
inc
jne
mov
sub
or
orl
and
fcoml
adc
inc
fdivr
pop
and
jb
mov
movsb
cmp
cltd
rcrb
inc
cmp
jne
mov
add
jno
aam
test
outsl
clc
punpckhwd
movl
push
sbb
enter
push
pop
mov
dec
into
sub
jmp
notb
aaa
jle
jl
or
jg
mov
jmp
and
int
xchg
popa
push
jmp
inc
jl
inc
mov
mov
jg
aaa
jle
add
shl
dec
mov
sub
xchg
addr16
jbe
jmp
mov
add
popf
and
and
jg
outsl
adc
test
or
lret
sub
enter
sub
push
rcrl
mov
xchg
lea
or
sbb
cmpl
push
ljmp
and
sub
mov
aaa
adc
adc
cmp
enter
pusha
mov
jg
aas
fs
cmc
add
dec
mov
test
push
add
jo
iret
dec
jl
cmp
orb
inc
icebp
mov
sub
loop
xor
test
mov
and
mov
and
push
xor
rcr
fsubs
inc
cmpb
mov
hlt
pop
sub
mov
aaa
rolb
in
inc
inc
push
out
jmp
pushf
mov
xor
or
push
and
ds
dec
loopne
test
call
mov
or
push
jbe
jle
wbinvd
cmp
cmp
dec
andb
fsubrs
loope
mov
lahf
sub
cmp
je
cmp
je
pop
pop
clc
adc
jne
dec
adc
movb
icebp
mov
inc
push
mov
cmpsl
and
shl
lock
jg
jne
mov
mov
cld
test
mov
push
jmp
pop
push
sub
inc
dec
leave
sbb
pop
sub
fsts
shr
pop
adc
je
test
jne
ret
or
mov
pusha
ja
mov
adc
mov
adc
or
ret
rcrl
ret
sar
push
dec
shl
ficoml
lcall
clc
cmpl
ficoml
or
shlb
push
or
testl
neg
out
daa
adc
cmp
jne
adc
je
repnz
sub
and
cmp
fs
push
sbb
dec
push
js
pop
push
add
pop
pop
or
outsb
xor
xorl
enter
inc
adc
and
out
jg
dec
or
fs
adc
dec
sub
dec
pop
sub
testl
mov
inc
jbe
adc
mov
xor
icebp
jmp
inc
rolb
mov
push
push
xlat
lods
add
sbb
push
shlb
inc
xor
fsubs
inc
inc
or
cmp
icebp
dec
lods
jle
xor
sbb
add
sbb
or
ljmp
or
dec
mov
inc
jne
mov
movb
pop
mov
mov
xor
orl
fiaddl
push
cmp
lret
and
test
jae
push
sbb
sbbb
dec
je
add
roll
fstps
enter
ret
cmp
push
adc
inc
cltd
in
mov
pop
mov
xor
add
in
sbb
pop
xor
mov
or
mov
repnz
ds
lods
adcl
movsb
or
inc
sub
or
andl
xchg
or
insl
jl
jbe
or
inc
mov
inc
movups
or
push
push
cmpb
mov
les
mov
divl
jbe
testl
push
xchg
das
lods
aas
fnstenv
fldenv
clc
sub
and
in
popf
jp
popf
testb
mov
aas
add
lods
pop
mov
je
insl
lcall
inc
inc
or
dec
xchg
stos
dec
cmp
pop
push
xchg
outsl
scas
btc
into
cmp
mov
lea
push
adc
mov
add
adc
dec
push
xor
dec
enter
leave
mov
xchg
cmp
pop
repnz
sub
sbb
xor
les
jge
enter
add
roll
or
shlb
mov
jne
in
push
adc
jnp
dec
or
stos
sub
jp
in
xor
add
push
or
js
sbb
adc
or
add
or
adc
enter
or
fwait
inc
insb
je,pt
inc
xor
frstor
push
push
xchg
das
cld
and
inc
sbb
jns
pop
test
sbb
push
test
popf
jecxz
inc
cmp
bound
popf
int3
pop
cmpsl
sub
adc
and
xchg
add
pop
lock
and
lcall
jo
push
mov
pop
jne,pt
xlat
nop
cmp
lret
js
mov
push
jnp
negl
js
test
adc
roll
cmp
rclb
imul
push
setl
xchg
into
enter
cli
xchg
sub
call
inc
jo
loop
out
pusha
call
fs
addr16
sbb
xor
and
push
jmp
ss
xor
add
arpl
or
std
jmp
mov
and
leave
add
lret
movsl
loope
adc
jp
push
in
jae
mov
and
jbe
lea
mov
add
inc
jmp
cmp
jb
xchg
jmp
push
pop
adc
sub
fdivrs
popf
shll
xlat
aam
mov
push
adc
popa
push
push
or
add
cmp
push
xchg
rol
mov
add
inc
movsl
xchg
les
ljmp
mov
mov
cwtl
les
push
adc
push
cwtl
mov
pop
cmp
dec
cmp
push
cmp
dec
cwtl
push
cmp
cmovge
cmpb
add
or
imul
inc
push
lahf
push
inc
imul
mov
test
add
pop
jb
les
push
cmp
nop
clc
xor
cld
test
add
dec
and
adc
mov
into
in
je
cs
mov
push
inc
cmp
xchg
sti
fsts
jmp
jb
push
add
inc
cltd
mov
fstp
or
or
pop
add
cmp
loope
adc
leave
xlat
add
das
sti
mov
jns
add
popf
inc
filds
arpl
je
and
or
adc
or
and
sbb
add
or
rorb
mov
dec
unpckhps
jge
mov
aaa
hlt
in
push
xor
dec
sbb
divb
mov
pop
mov
jne
and
cmp
lods
sub
sub
sbb
fldpi
or
fcoml
cmp
aaa
sub
gs
mov
xor
je
gs
kaddw
and
stos
push
dec
rolb
pop
loope
and
pop
notb
xorl
adc
jmp
dec
mov
je
shlb
movsl
jb
jno
jo
or
cmpsb
mov
dec
dec
push
mov
sub
or
sarl
fs
shrb
jno
jmp
inc
sub
pop
movsb
cmp
addb
push
fwait
daa
je
xchg
xchg
cmp
or
inc
and
insl
orl
push
pop
jp
mov
inc
push
sub
and
outsl
lcall
lock
inc
mov
movl
add
and
in
dec
stos
pusha
imul
clc
orb
out
xor
sbb
mov
andl
xor
cmpps
or
pop
push
mov
mov
xor
lcall
cmp
fmuls
inc
xchg
xor
repnz
addb
pop
mov
in
dec
push
push
jmp
adc
pop
dec
rcl
push
inc
jb
popf
add
clc
test
jmp
fsubr
rcrb
mov
clc
loopne
ret
add
xor
mov
xchg
adc
pushf
and
add
push
add
or
in
daa
sbb
ss
add
sbb
mov
sbb
push
dec
push
add
lret
in
int3
xchg
lret
push
mov
fidivl
mov
add
pop
aam
loopne
sbb
js
in
cltd
fistpl
test
insb
and
adc
ljmp
adc
mov
dec
pop
xchg
mov
fadds
in
xchg
arpl
clc
out
add
or
outsb
pushf
test
mov
push
ret
lds
jl
rcrl
ss
adc
sbbb
xor
ja
mov
mov
test
mov
adc
notb
and
jno
jle
adc
dec
xor
adc
push
lock
sub
mov
mov
jmp
add
xor
sub
jmp
dec
pop
outsl
cmpsl
mov
xor
hlt
fcmovbe
mov
add
sbb
dec
into
sbb
sub
push
js
or
sub
testb
and
cmp
xor
addl
ret
sbb
sbb
outsl
fnstenv
test
sbb
ficompl
sbb
add
or
lret
pusha
jmp
sbb
adc
push
or
pushf
mov
sbb
xor
fstpt
repnz
lods
cmpsb
adc
pop
lods
jne
and
jne
dec
inc
clc
subb
cmp
pusha
add
lea
inc
sbb
adc
or
sbb
adc
outsb
add
adc
stos
and
mov
lahf
mov
add
ss
rclb
push
mov
mov
out
adc
dec
cld
and
movl
and
or
jl
or
or
and
bound
sub
sub
adc
int
and
or
ja
mov
and
xchg
lea
out
test
pop
push
xor
inc
or
loopne
xor
jns
jle
cmp
push
cli
xor
push
cwtl
add
push
push
and
ljmp
dec
aam
and
jge
scas
inc
mov
sbb
lea
pop
jo
xor
out
out
cmp
rcll
lea
sub
sbb
test
ja
xor
sahf
rolb
pop
dec
aad
mov
into
sbb
adcl
mov
cmp
movsl
js
sub
adc
push
pop
jne
pop
push
jae
movsb
sti
iret
jmp
mov
push
and
push
les
std
push
and
or
lahf
ds
xor
rcrl
lret
adc
xor
sub
jmp
lea
int3
mov
ss
lret
inc
push
and
xchg
or
adc
pop
sub
pusha
sbb
dec
popa
push
pop
adc
and
push
or
xchg
add
stc
test
movsb
data16
xchg
dec
movsl
inc
push
in
pop
test
push
mov
adc
test
mov
js
push
ret
pop
mov
shlb
xor
call
add
mov
add
setae
jecxz
jg
mov
aaa
stc
clc
outsl
and
mov
push
ss
jmp
jne
repz
rclb
adc
cli
ja
leave
pop
mov
xchg
mov
pop
stos
add
push
jge
data16
test
je
in
jae
cmp
pop
mov
pop
add
or
jo
adc
lock
push
jnp
or
rolb
inc
jecxz
cmp
dec
sar
ja
hlt
mov
shl
or
shr
rep
adc
data16
test
pop
mov
cmpb
fs
es
in
adc
pop
mov
mov
lods
jmp
pop
and
mov
mov
fisubrl
sub
movb
dec
adc
or
mov
sbb
outsl
xor
jae
adc
sbb
push
or
insb
push
nop
ja
je
add
jo
imulb
push
rorl
jge
xchg
sbb
enter
in
sub
pop
inc
addr16
jmp
add
or
sahf
shlb
mov
fwait
jne
xor
enter
lds
mov
push
imul
gs
gs
or
stos
dec
fcomps
outsl
sub
outsl
xor
xchg
loopne
cmp
inc
adc
jae
loopne
push
faddl
fadd
pop
mov
shll
jno
shll
leave
push
push
pusha
lds
call
fisttpl
sub
aad
cmpsl
sub
sbb
jg
fs
push
pop
es
or
xorb
jo
mov
push
dec
pop
ret
xchg
sbb
ja
cmp
sbb
adc
and
test
jbe
lret
repz
and
add
xchg
mov
pop
push
adc
inc
ficoml
jg
sahf
inc
arpl
xchg
xor
adc
aam
mov
push
movhps
inc
ret
or
inc
xchg
add
or
gs
je
jbe
jg
push
pop
cmp
pop
cmp
filds
mov
xor
call
int
sub
pop
push
ja
inc
jmp
xchg
add
mov
daa
xor
imul
scas
and
test
lods
dec
jp
stc
cmp
and
pop
icebp
adc
fdivs
mov
cmp
dec
and
mulb
xor
sbb
fsubrp
cmpb
sub
mov
add
sub
jne
es
jo
aam
dec
insl
fdiv
mov
add
mov
push
sar
outsb
mov
push
pop
repnz
mov
sub
je
pop
sub
das
sar
xor
mov
mov
out
mov
pop
in
fwait
test
or
push
mov
test
xchg
or
push
lea
push
jg
mov
icebp
pop
mov
pop
inc
arpl
add
lcall
mov
xor
xor
mov
test
push
cmpsl
mov
sub
andb
imul
popa
dec
push
adc
dec
es
cmpxchg8b
enter
btc
jne
mov
sub
or
push
call
xor
add
nop
sub
cmp
sub
aas
enter
push
je
cmp
jbe
push
add
adc
testb
add
mov
in
jecxz
daa
add
and
push
adc
jle
insl
cmp
sub
or
pop
inc
aam
or
aas
stos
enter
ret
or
adc
andl
adc
sbb
sbb
stc
mov
sbb
sub
and
jo
xorb
jb
ds
inc
inc
mov
insb
rorb
push
or
cmp
mov
jo
lret
jne
xchg
sbb
xchg
cmp
rorb
inc
jo
pop
subl
dec
lcall
push
addr16
cmp
sbbl
add
mov
je
stos
mov
cmp
sbb
iret
mov
pusha
jo
mov
sbb
sub
rcrl
pop
mov
mov
scas
sub
frstor
cmp
inc
jb
popa
test
mov
movsl
imul
push
mov
pop
sub
dec
push
mov
cmp
lcall
add
pop
sbb
pop
iret
ljmp
pop
jb
imul
imul
fisubrl
pop
popl
cmpsb
cmp
dec
popa
arpl
mov
nop
jne
jnp
lahf
sub
test
or
js
loop
icebp
js
rcl
dec
shll
add
add
rclb
adc
punpckldq
mov
sbb
outsb
push
sub
adc
lock
cwtl
sub
into
outsb
push
out
mov
sub
adc
scas
stos
or
out
frstor
jbe
adc
sub
sarb
sbb
mov
dec
sbb
shl
add
sub
daa
dec
jne
jmp
push
sub
cs
xor
jae
movsl
je
dec
je
dec
jne
mov
icebp
rolb
xchg
inc
push
sub
pop
lods
mov
xor
sbb
inc
inc
add
lock
pop
addb
hlt
xchg
das
fadd
sbb
lea
mov
xchg
xor
sub
adc
out
ja
bound
push
cld
jne
mov
push
cmp
outsb
sahf
out
jne
es
jne
pushl
dec
popa
out
ljmp
sar
ret
movzbl
push
dec
jmp
adc
lahf
out
stc
jmp
std
std
jmp
cld
cld
jmp
lods
cmp
or
adc
insl
loop
fiaddl
inc
sbb
js
fs
lcall
push
add
xchg
fsubrs
xor
or
fld
rorl
mov
push
rclb
adc
outsb
aad
dec
cmpsl
in
or
incb
psrld
cmp
and
lret
jnp
add
push
pop
inc
inc
rcl
test
adc
rclb
add
adc
mov
enter
xor
andl
orl
adc
pop
pop
xor
adc
xor
imul
out
mov
test
loop
sbb
imul
xor
in
or
push
or
lock
repnz
push
xchg
lea
add
xlat
pusha
pop
inc
lahf
enter
jne
test
cld
es
mov
je
mov
clc
sub
or
jg
add
mov
sahf
mov
fiadds
mov
jle
call
push
jnp
sbb
enter
mov
sub
ja
mov
cmp
out
hlt
das
and
inc
push
xor
pop
div
nop
nop
push
mov
test
sbb
aaa
mov
xor
xchg
in
cmp
test
jae
andb
and
out
test
pop
pop
sub
pop
push
sbb
mov
jmp
pop
inc
mov
jae
cmp
addb
lods
mulb
in
xor
or
ret
enter
adc
pop
jmp
mov
sbb
les
push
insb
mov
rcll
dec
sbb
push
aaa
fidivs
mov
push
rolb
or
test
mov
test
mov
pop
adc
cmp
push
mov
inc
lock
pop
mov
rolb
in
int
cmp
jbe
or
lea
and
je
push
and
add
mov
insl
pushl
add
not
and
sub
shrb
mov
icebp
add
xchg
dec
sbb
adc
lods
movsl
add
adc
mov
fnclex
push
lods
add
test
lea
ja
jne
mov
mov
addb
cmp
jmp
sub
or
cmp
ja
mov
inc
je
mov
mov
sbb
shl
in
ret
loopne
jg
or
add
jmp
or
mov
inc
inc
push
ss
imull
loope
pop
push
scas
lock
cmpsb
or
cmp
mov
inc
cmp
jb
pop
cmp
xor
filds
ret
je
xor
jl
mov
pop
pop
ret
lea
sub
sbb
fadd
loopne
push
adc
ret
jg
stos
je
mov
add
ret
mov
sub
or
fistpll
jecxz
push
adc
jle
ret
divl
lret
add
aad
das
push
push
xor
xor
xor
jo
and
jge
xorl
add
hlt
inc
sub
out
jne
cmp
loopne
sub
scas
add
loopne
pop
out
cmp
je
test
je
cmp
xor
in
adc
cmp
addr16
outsb
or
imul
aaa
sbb
icebp
add
sbb
adc
fcoms
cmp
or
ljmp
add
push
jle
or
jl
and
lret
jo
je
mov
incb
cmpl
add
jo
adc
jl
inc
roll
xor
inc
xchg
sarb
jns
pop
inc
jmp
cmp
jne
sbb
es
add
add
sub
dec
push
dec
test
pop
inc
adc
cmp
notb
dec
or
stc
incb
cmp
je
cmp
and
or
lahf
loop
insb
adc
pop
fmuls
fcomps
cmp
pop
add
adc
mov
loop
inc
xorl
je
sub
dec
cmp
lods
adc
push
sbb
ja
and
mov
shrl
jae
outsb
or
sub
push
push
and
add
sub
gs
and
dec
inc
mov
xchg
jbe
arpl
mov
mov
push
adc
shl
cld
std
mov
push
test
jne
test
cmp
push
sub
xlat
push
jbe
add
sub
je
push
hlt
pop
in
and
xchg
pop
mov
add
mov
cld
stos
or
fwait
jnp
cmp
in
pop
cld
fcoms
dec
dec
sbb
add
mov
mov
int
cmp
pop
xchg
insb
lahf
xor
push
jmp
mov
movsb
or
push
popa
push
sub
push
push
test
xor
mov
out
aam
cmp
push
or
into
ljmp
aad
inc
ret
lret
imul
xchg
data16
in
addr16
out
stc
shll
cmp
jne
imul
mov
cmp
push
mov
push
stc
lods
movsb
push
sbb
push
popa
add
cmovl
lock
jmp
jnp
das
pusha
jle
adc
jb
lea
shlb
inc
dec
cwtl
jo
loopne
pop
add
sbb
xchg
pop
push
addl
inc
mov
ret
aaa
adc
xchg
and
in
push
testl
cmp
or
jae
insl
mov
js
jne
movsl
stc
inc
cmp
adc
fisttpll
adc
xlat
bound
aaa
push
push
ljmp
in
jbe
cmp
add
mov
cmp
push
sub
jge
icebp
xchg
lods
out
rcll
adc
aad
mov
xchg
xchg
push
addr16
int
lret
cmp
fcomps
push
stos
pop
mov
test
fiadds
shl
movsl
test
push
sub
std
push
in
ja
pop
jbe
lea
scas
inc
lcall
push
loop
imul
adc
test
lcall
push
das
sub
out
add
es
jne
out
popa
int3
loopne
xor
dec
adc
pop
inc
cmc
loope
pop
cmp
enter
pop
pop
mul
inc
and
adc
sub
scas
mov
mov
lods
mov
add
scas
xor
call
sarb
ret
hlt
or
call
aam
arpl
push
je
dec
mov
mov
sub
jo
dec
mov
movntps
sub
jne
pop
ljmp
out
adc
add
adc
sbbb
mov
jmp
insl
stos
lds
add
sbb
adc
jmp
push
loopne
rol
mov
insb
jno
pop
pop
sub
pop
sub
fidivs
sub
scas
add
push
leave
dec
shlb
mov
cmpsl
mov
movsb
push
add
jb
outsb
dec
lock
mov
cmc
ja
pop
clc
repnz
jne
fs
add
adc
sbb
test
stos
jnp
lock
add
ds
xorl
fisttps
push
rorl
inc
lea
push
lods
popf
orl
or
fimuls
adc
fisubs
dec
jbe
cmc
adc
add
pop
insb
sbb
lea
pop
data16
ljmp
push
jne
les
or
add
filds
ds
test
or
xor
add
shrb
icebp
sbb
sbb
pusha
add
scas
sti
sub
scas
enter
mov
stos
add
inc
nop
adcb
sbb
jb
lea
push
adc
or
push
add
add
lret
les
enter
xor
add
cwtl
enter
lea
add
es
inc
outsb
sti
pop
aas
lahf
push
adc
sbb
adc
xchg
arpl
test
xor
pop
mov
mov
sub
cs
or
lret
cmp
dec
ret
mov
loopne
das
and
addb
inc
sbb
scas
and
xor
push
clc
js
fidivs
rclb
jne
int
or
xchg
loop
add
mov
push
call
adc
mov
add
and
pop
pop
clc
mov
and
add
jmp
pop
ltr
out
into
or
or
ja
or
inc
imul
hlt
mov
inc
adcl
je
leave
inc
cmp
add
call
scas
or
call
repnz
mov
inc
test
testb
leave
mov
js
ret
orl
mov
gs
adc
adc
cmp
adc
sbbl
or
push
and
loopne
hlt
xlat
jmp
inc
adc
data16
je
dec
adc
dec
jle
mov
adc
imul
cmovg
in
mov
inc
mov
mov
add
icebp
in
add
lret
ret
and
mov
and
sbbb
xchg
fnstcw
push
adc
push
add
and
mov
out
fbld
mov
outsb
pusha
jmp
movq
movaps
cmp
jae
xor
jle
fnstenv
divl
cli
rcr
adc
je
cmp
jge
jnp
mov
repz
or
jg
dec
mov
xchg
ret
adc
and
and
in
push
mov
push
and
mov
jbe
out
jne
adc
or
add
adc
mov
andb
xchg
repnz
dec
sti
in
ret
mov
add
pop
or
cmp
addps
int
add
fdivrp
fcmovb
sbb
sbb
mov
add
bound
pop
pop
add
shr
cmpsl
push
faddl
test
inc
outsb
pusha
mov
aaa
mov
mov
push
stos
sbb
mov
aaa
xor
sahf
movsb
mov
inc
jns
add
inc
fmuls
pop
adc
pusha
orl
jne
inc
mov
mov
mov
dec
sbb
add
clc
sub
addr16
mov
jo
out
xchg
push
mov
push
push
movb
rorb
stos
and
addr16
jecxz
dec
dec
adc
and
dec
cmp
rcll
or
pop
shlb
rcrb
cmp
in
nop
adc
in
movsb
jnp
je
jp
mov
pop
cmp
sbb
movl
mov
dec
and
xor
subl
cwtl
jmp
xlat
loopne
or
out
mov
add
cmp
mov
ss
or
loop
loope
or
and
cmpsl
ljmp
mov
hlt
push
lahf
jmp
int3
incl
push
push
cmp
dec
loopne
lock
test
pop
add
dec
or
pusha
imul
push
sahf
dec
pusha
mov
aas
ret
adc
filds
sbb
pop
mov
bound
jo
sub
les
ss
adc
js
andl
or
ret
adc
inc
sbb
inc
cwtl
sub
adc
hlt
out
pop
inc
sub
rol
cmp
insb
in
movl
mov
mov
jnp
mov
pop
jg
inc
xchg
jmp
cmp
arpl
xchg
jle
pop
add
sbbb
pop
incl
sub
cmp
jne
inc
and
in
cmpb
out
add
or
sub
adc
add
xor
or
aas
sbb
sbb
mov
sub
sbb
aas
ja
pop
enter
or
pop
inc
inc
or
jl
cmp
imul
mov
insl
mov
ds
sub
cmp
js
je
addr16
mov
testb
lock
movsb
cmp
es
loope
or
mov
add
push
rcll
frstor
or
lret
inc
adc
xlat
aaa
push
lds
jg
push
loope
xchg
or
jmp
jmp
hlt
jp
cwtl
fcmovnb
adc
mov
dec
xor
inc
enter
add
add
sub
xorb
pop
sbb
push
js
and
push
or
imul
mov
push
lea
mov
cvtdq2ps
cmp
jle
adc
mov
aas
push
dec
ds
push
jo
sub
imul
cmp
pushf
mov
cmp
je
sbb
pop
ret
sbb
jmp
sub
jnp
or
cmp
jne
push
adc
or
add
mov
sub
push
xor
ret
mov
addr16
xchg
add
fistpll
loope
lock
sub
sbb
push
or
dec
sub
shrb
cs
push
cmp
ficoml
or
jo
pop
add
mov
pop
pop
jecxz
mov
mov
push
mov
fnstcw
add
sbb
jb
jbe
push
jbe
mov
call
push
fwait
scas
stc
nop
lret
idiv
clc
or
adc
and
and
test
leave
ffreep
lcall
sbb
pop
jae
cmpl
shufps
and
bound
mov
clc
or
mov
pop
mov
sbb
push
dec
or
pop
and
jmp
jle
pusha
push
add
push
js
std
nop
cmp
jne
mov
imul
or
push
push
and
and
sbb
jno
pop
hlt
sbb
movsb
push
leave
jbe
push
push
push
lret
ret
or
arpl
cmpsb
cltd
test
jg
stos
icebp
adc
jmp
pop
sub
je
popf
push
jmp
xor
mov
insl
ret
and
movsl
push
push
add
or
push
or
test
dec
push
rolb
or
sbb
testb
inc
push
dec
inc
data16
popf
lcall
jecxz
lret
int3
dec
sbb
dec
fucomi
xor
in
jae
imul
adc
or
xchg
jne
mov
mov
ret
inc
add
xchg
ucomiss
outsb
sub
in
inc
sbb
mov
loopne
in
dec
lods
mov
negb
jmp
sbb
sbb
or
inc
cmp
jle
mov
addl
inc
decl
cmp
pop
mov
out
mov
jbe
or
aam
mov
pop
idiv
test
pushw
and
inc
add
xor
in
in
adc
add
inc
xor
add
sub
xchg
inc
test
or
fists
ficoml
dec
loopne
adc
mov
pusha
add
pop
push
ljmp
sub
add
or
mov
add
cwtl
inc
sarl
pusha
pop
jno
mov
push
in
mov
push
lret
out
or
repnz
repz
add
or
mov
adc
push
testb
fidivs
xchg
loopne
mov
clc
dec
loopne
lcall
ret
les
addl
pusha
cmp
in
mov
push
jg
push
in
mov
movb
lods
add
addl
cli
pop
xchg
lahf
or
jg
jb
inc
cmpb
push
outsb
pop
pop
mov
mov
mov
pop
paddusb
idiv
adc
jbe
inc
sarl
push
push
add
sbb
adc
inc
je
pushf
dec
lods
or
sahf
inc
in
adc
jbe
xchg
ljmp
dec
faddl
or
jnp
ljmp
or
insl
sbb
fstp
inc
add
sub
mov
inc
xor
addr16
mov
sub
push
push
fisttps
fsubrl
lea
push
test
jbe
adc
mov
push
cmp
pushf
add
jmp
xor
push
test
sahf
insb
push
addr16
jne
mov
test
pop
add
dec
jle
andb
jne
push
inc
push
testb
sub
push
pop
lcall
and
test
xchg
out
sahf
movsb
dec
xchg
cmovp
add
cmp
pop
je
jg
mov
mov
mov
sub
add
call
or
mov
add
xchg
jbe
leave
add
ror
shll
jmp
or
sti
xchg
pop
dec
push
dec
jmp
sub
mov
mov
push
adc
adc
xchg
push
mov
sbb
pushf
adc
mov
sbbb
push
in
mov
addb
jg
jns
jmp
cmp
jae
adc
adc
icebp
shll
mov
fdivrp
ss
add
xchg
push
add
out
inc
and
jg
xor
mov
add
add
sub
outsb
mov
popa
sbb
mov
push
push
adc
test
mov
dec
mov
test
cmpsb
mov
add
xor
xchg
lds
sbb
dec
and
inc
lods
shr
sub
cmp
inc
insb
mov
pop
jle
lcall
insb
ss
cli
or
sub
rorb
add
dec
in
push
std
sbb
outsb
push
inc
aam
mov
add
loopne
and
lret
dec
sti
and
pop
or
xor
jl
or
nop
add
adc
js
adc
sbb
rol
pop
fs
push
pop
add
cmp
or
push
push
dec
test
add
push
sbb
imul
pop
into
cmp
lret
sbb
jne
push
sbb
out
push
inc
lods
movsl
stos
sbb
sub
or
cmp
xor
ret
and
and
sarl
inc
adcl
data16
fisttps
cmp
push
add
adc
stc
dec
in
aad
clc
push
mov
stc
mov
push
fwait
jle
shl
notb
imul
lds
loop
add
push
inc
loope
push
cs
pop
adc
lds
sub
dec
or
je
ret
leave
dec
cs
add
cmpsb
adc
cmp
les
inc
mov
jmp
dec
or
in
add
dec
stos
cltd
pop
inc
mov
inc
add
adc
jno
adc
mov
push
xlat
je
cs
aaa
hlt
fldcw
test
and
subb
aad
pop
sets
push
insl
sub
daa
int
push
mov
in
js
in
push
or
js
aam
add
jnp
cmpsl
pop
or
inc
mov
push
add
js
mov
lret
inc
jo
imul
add
fildl
mov
and
roll
or
jge
call
dec
in
loop
xor
xorb
push
int3
ret
xor
cmp
jl
sbb
cwtl
test
add
lock
adc
mov
push
adc
test
cmp
and
push
fwait
hlt
and
mov
out
pop
add
or
xchg
sbb
xlat
ljmp
pop
movsb
adc
int
dec
mov
movsb
xor
addb
mov
popa
stos
sub
leave
dec
aas
add
cmp
push
or
gs
sbb
movsb
jo
jo
test
shlb
push
mov
dec
xor
lock
loope
adc
repz
and
and
or
xchg
sub
xor
mov
fucomp
mov
rolb
insb
adc
and
mov
out
or
dec
cld
jmp
loop
mov
or
ja
repz
inc
push
mov
sarl
dec
add
dec
in
outsb
testl
jbe
mov
dec
insl
pusha
cli
rorl
insb
mov
pop
hlt
sub
push
lock
fcmovb
ja
push
jmp
pop
test
sbb
jae
movntps
leave
jmp
stc
xlat
repnz
xor
and
sub
adc
lret
clc
pop
lea
mov
dec
in
cltd
dec
mov
adc
cmp
into
je
gs
mov
jns
pop
jne
mov
and
inc
pop
mov
repnz
sahf
jp
pop
mov
push
insb
add
inc
xchg
inc
inc
repnz
push
pop
xor
mov
xchg
xchg
mov
in
mov
arpl
jge
push
loope
lcall
and
data16
aad
and
sub
cmpsl
test
fbstp
aad
xchg
cmp
pushf
roll
cmp
jl
js
cmp
jb
sbb
inc
mov
adc
insl
ficompl
out
out
dec
pop
pop
jne
repnz
neg
mov
adc
stos
loop
stos
test
das
mov
movsl
jmp
mov
xchg
or
xor
test
mov
mov
nop
inc
or
xchg
and
pop
dec
adc
mov
repnz
lods
adc
mov
rcrb
lea
dec
add
fldenv
xchg
add
mov
add
iret
jnp
push
cld
div
push
in
push
in
aam
sahf
out
mov
mov
call
sahf
out
lock
hlt
lcall
push
adc
addb
cli
clc
cmp
shll
jmp
xor
nop
inc
pop
popa
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
pop
and
std
cld
loop
mov
out
mov
lea
push
inc
xchg
stc
sub
outsb
pop
sbb
mov
hlt
push
sbb
fiaddl
jl
push
jbe
fisubs
add
sahf
inc
push
out
push
add
nop
dec
dec
and
out
mov
out
dec
in
outsb
mov
or
push
orb
push
cwtl
mov
repz
repz
sbb
iret
repz
adc
or
or
sbb
repnz
add
dec
int3
or
push
in
outsl
aaa
mov
add
prefetcht1
and
mov
in
mov
or
pop
and
lcall
movsl
add
or
xchg
std
jge
or
je
mov
shrl
pushf
testb
jne
pop
aam
xchg
call
test
rol
cli
cli
loope
adc
or
inc
xchg
add
out
push
dec
testb
jne
push
sbb
sar
cmpsb
cltd
dec
jl
loopne
mov
mov
and
inc
sub
mov
fnsave
out
push
pop
adc
pop
pushf
cmp
es
xor
cmpb
sbb
xchg
movsb
cmp
clc
stos
add
rorl
jmp
test
push
push
lods
je
movsl
fisubrs
push
cld
or
lods
push
fstl
fucomip
xchg
jno
enter
rclb
or
inc
add
cmp
enter
adc
sbb
mull
jne
or
sbb
fs
in
bound
bound
or
jmp
lods
push
sarl
add
jne
or
sub
or
push
aaa
adc
int3
les
call
inc
xorl
andb
daa
sbb
js
sub
or
out
xor
in
push
call
push
or
shlb
cmp
mov
mov
xor
and
xor
mov
out
dec
pop
std
add
pop
dec
sarl
lds
ret
lods
or
stos
insl
mov
loopne
sub
hlt
add
insb
or
dec
stc
dec
rol
adc
roll
ret
sub
adc
adc
popa
inc
dec
test
adc
mov
dec
pop
sbb
movsb
cmp
dec
push
loopne,pn
add
xor
xor
pop
mov
je
sub
pop
cld
jmp
nop
lcall
sti
add
lret
je
rep
mov
lock
dec
ljmp
cs
pusha
xchg
fnsave
lods
lret
out
pop
or
xchg
xchg
push
xor
mov
xchg
xchg
xchg
insb
sbb
inc
sub
cmp
popl
punpcklwd
push
test
out
add
add
dec
pushf
jbe
cmp
es
or
rorb
mov
pop
mov
pusha
xor
add
push
fistl
test
andb
pop
lahf
data16
push
push
pop
into
jo
inc
int3
inc
inc
popa
lret
or
and
bound
jecxz
jl
adc
jo
sub
xchg
sti
ret
inc
xor
andl
sub
sub
pop
push
xor
daa
mov
fsts
arpl
loopne
fcoml
mov
aam
sarb
xchg
fists
popf
enter
loope
pushf
xchg
shrb
ret
jnp
shll
fbld
aam
aaa
dec
cld
xor
jo
sbb
and
arpl
in
xchg
jno
insl
push
jne
adc
push
scas
cld
mov
adcb
add
mov
or
mov
jbe
jmp
inc
sbb
add
pushl
cmp
pop
pushl
sub
push
dec
sub
ds
add
xchg
push
mov
sarl
or
call
xlat
scas
inc
outsl
pop
scas
jecxz
test
mov
or
xor
adc
je
push
mov
aad
mov
add
inc
call
add
fsubrs
mov
pop
inc
loope
in
fsubp
sbb
inc
jnp
sub
loopne
divl
push
cmp
pop
xchg
leave
sbb
rcrb
into
sbb
clc
dec
mov
mov
lahf
and
jg
sar
mov
jo
jmp
ljmp
sahf
and
inc
pop
bound
xor
mov
add
pop
cli
sbb
and
and
or
and
clc
insb
or
push
cld
into
ffree
enter
cs
cwtl
mov
dec
popf
test
fdivs
sub
mov
rolb
jmp
je
pop
pop
les
sub
aaa
test
aaa
out
or
jb
pop
cs
fdivrs
aam
cmp
pop
sbb
cmp
inc
or
movsb
add
adc
jae
cmp
push
mov
leave
xchg
call
loopne
xchg
push
jo
rcll
fildll
add
cmpl
imul
ficompl
add
ja
mov
add
shrl
sarl
cmp
push
sar
pop
lods
movsb
cmpb
or
es
mov
inc
cmp
lea
lret
in
or
loop
or
popa
inc
lret
sub
add
mov
sbb
into
lods
pushf
mov
or
add
setg
jb
in
sbb
sarb
lret
jnp
xchg
mov
adc
push
jnp
add
jo
add
pop
aas
clc
adc
push
imul
xor
push
mov
ja
movsl
leave
test
add
jbe
pop
sbb
xor
cmp
push
mov
insb
sbb
test
inc
and
adc
aaa
test
insl
dec
loope
insb
fsubl
adc
sbb
pop
and
mov
ss
js
add
insl
and
mov
xor
movsl
sbb
mov
inc
fs
cmp
cs
imul
lcall
sahf
jle
test
add
inc
xor
call
xor
dec
pusha
jmp
add
pop
shrl
mov
sub
adc
or
ds
mov
mov
push
pop
cmp
adc
popf
xor
adc
out
jge
push
arpl
mull
sbb
xor
add
aaa
aam
nop
scas
outsb
das
mov
add
cmp
testb
ja
push
loopne
xchg
sti
inc
jl
mov
test
mov
subb
add
ja
adc
push
push
addr16
and
push
insl
cmp
jl
xor
insl
xor
lcall
push
shl
pop
pop
xor
mov
loopne
ss
call
aam
test
dec
dec
push
outsb
loopne
data16
mov
push
adc
inc
mov
xchg
in
aas
and
out
mov
pop
mov
inc
lods
dec
pop
sub
xlat
mov
mov
dec
ret
push
clc
call
mov
jmp
adc
or
gs
sbb
fidivs
outsb
jo
pop
jo
add
mov
push
add
addr16
repnz
je
or
sub
cmpsb
ss
ret
sbb
insl
mov
add
je
xor
bound
fildll
test
test
insl
cmp
xor
jle
adc
adc
jae
sbb
or
and
shl
movsb
stos
add
add
push
add
push
add
mov
dec
adc
jne
mov
jmp
cmp
jle
popa
jae
mov
mov
cmp
test
pop
push
add
pop
ret
sbb
adc
jo
sub
je
push
shr
push
push
insb
push
and
inc
push
lcall
and
adc
ss
sbb
mov
sub
inc
sbb
jnp
push
movsb
xor
mov
cs
mov
in
divb
popf
push
push
inc
scas
cbtw
test
call
loop
sbb
aas
sub
add
je
inc
stos
jp
mov
adc
sub
sub
in
jae
pusha
cld
or
in
in
jp
mov
add
arpl
push
arpl
adc
clc
ja
or
imul
push
push
mov
dec
cmp
mov
inc
mov
rcll
pop
in
in
adc
nop
inc
cld
jmp
dec
int
sub
cltd
inc
in
arpl
sub
cltd
out
dec
addl
jl
or
mov
jae
fwait
push
mov
sub
fidivrl
nop
xor
jne
loope
data16
or
jno
psrlq
and
mov
add
les
or
fstps
jecxz
int
mov
loop
sbb
sub
or
cwtl
sar
push
out
cmpl
xor
adc
mov
cmp
dec
jmp
sub
jno
out
xchg
sub
inc
cmp
imul
into
addb
lods
dec
shlb
add
movb
inc
jmp
test
lock
mov
or
out
xchg
mov
je
repnz
inc
add
clc
ret
stc
stos
inc
lds
pop
std
scas
sub
incb
movsb
movsb
mov
push
sub
mov
fmuls
mov
decl
adc
in
jle
cmp
cmpb
sub
xor
jg
jo
dec
push
inc
mov
ds
dec
sbb
pop
dec
jg
fsubrs
adc
cmpsb
leave
and
mov
pusha
xchg
aam
adc
jle
aam
sub
js
sub
pushf
jmp
pop
push
sahf
mov
pop
dec
pop
xchg
out
loope
lret
in
dec
adcb
jg
jmp
sub
ret
jmp
pop
dec
rcrl
scas
fldenv
dec
sub
sbb
mov
push
jae
add
pusha
add
add
in
sahf
les
push
movsl
daa
pop
mov
call
pop
mov
cli
movsb
adc
xchg
adc
mov
mov
pop
notl
ret
pop
jns
outsl
mov
add
sarb
push
pop
add
add
mov
test
in
nop
je
mov
push
les
add
mov
xchg
xor
sub
cmp
repz
adc
popa
add
pop
or
lock
jmp
test
repnz
cwtl
pop
in
xchg
lock
or
sahf
push
or
dec
xchg
rolb
pop
push
outsb
mov
out
sahf
testl
enter
lahf
shl
xchg
mov
xchg
or
push
adc
xchg
orb
push
add
ds
jmp
mov
leave
pop
aas
mov
sub
inc
or
push
testl
jge
push
pop
popf
gs
dec
ja
pop
adc
loop
call
pop
ret
adc
mov
xchg
xchg
mov
mov
xor
fcoml
scas
sbb
ret
repnz
jge
insb
add
mov
or
pop
push
cli
sti
test
rorl
aaa
push
inc
in
out
cmp
sbb
pop
shll
push
or
push
add
and
inc
push
push
mov
mov
jecxz
idiv
push
fiaddl
mov
or
adc
outsl
je
mov
and
jb
into
pop
dec
pop
add
mov
xlat
xchg
xchg
jbe
shrl
add
and
fwait
sub
adc
cwtl
pop
xchg
loope
cltd
sub
mov
loope
mov
mov
xorl
cmpsb
lret
cli
and
adc
pop
sbb
push
rcr
xchg
aad
sub
and
xchg
add
aam
dec
push
hlt
pushf
jge
testb
imul
xchg
adc
sbb
fidivrs
idivl
pushl
insl
and
lahf
xchg
test
ja
sbb
jp
add
push
mov
stos
mov
stos
jbe
cli
int3
test
push
xorl
adc
jmp
inc
loopne
mov
inc
loopne
and
leave
sbb
sbb
fldt
jmp
and
dec
mov
or
add
dec
divl
stc
and
test
sbb
add
pop
adc
pop
rcrb
pop
popa
or
idivl
int3
lock
mov
scas
bound
call
push
jb
ftst
push
add
add
add
push
movsl
inc
adc
jl
xor
push
call
sub
sbb
add
imul
dec
pop
sbb
icebp
add
ljmp
insl
gs
add
xchg
push
jle
jl
mov
nop
sub
loop
inc
lea
xchg
mov
inc
mov
hlt
pushf
sbb
mov
add
outsl
flds
ja
xchg
lret
inc
inc
sub
sub
adc
outsb
cmc
lea
into
inc
sar
mov
insb
inc
leave
sub
fst
loopne
or
in
mov
mov
jne
pushl
insb
call
mov
jne
repz
jmp
push
add
push
push
ja
jnp
push
data16
sbb
mov
pop
shlb
inc
mov
cmp
cmp
loop
adc
rol
jge
enter
fisttpll
dec
addb
or
or
pop
mov
ret
inc
push
or
sub
sbb
jo
bound
push
lss
icebp
pop
addl
and
imul
fistpl
add
ret
in
enter
shrl
jl
xchg
bound
nop
fdiv
call
mov
int3
push
sub
ja
imul
test
mov
loop
push
lea
loopne
xor
xor
xchg
xchg
test
mov
push
push
mov
lock
lret
mov
andl
push
leave
imul
xchg
mov
insb
xchg
xor
cmpsl
into
or
sub
cmp
push
mov
imul
sbb
sbb
mov
or
imulb
push
aam
data16
sbb
push
inc
push
cld
mov
xchg
or
sbbb
mov
dec
xchg
xchg
mov
dec
inc
cmp
scas
mov
scas
call
insb
push
jg
es
and
add
push
pop
and
add
cs
jmp
xlat
push
xorl
leave
cmp
add
jo,pn
fiaddl
and
decl
hlt
push
mov
into
imul
push
ja
sub
pop
fiadds
mov
xor
lcall
pusha
mov
adc
dec
mov
rol
or
mov
dec
adc
clc
icebp
outsb
lods
lret
test
imul
xchg
cmp
fnsave
jmp
and
js
and
aaa
ss
dec
xchg
lcall
ret
inc
cmpl
jne
push
cmp
popa
fnstenv
js
das
nop
or
push
push
pop
frstor
sbb
adc
adc
adc
loopne
pop
inc
lods
dec
and
clc
hlt
fsubl
pop
add
or
das
rclb
push
push
sarb
fisubrs
iret
movzwl
scas
or
in
mov
rclb
ret
enter
pop
add
lea
data16
aam
or
push
loopne
pop
ja
sub
pusha
xor
fsubrs
sbb
rcrb
mov
es
pop
or
add
rcrb
ja
test
xchg
dec
mov
lahf
sub
dec
in
aam
cmp
sub
adc
lods
inc
fadds
mov
push
add
mov
xor
mov
mov
cmpb
cmp
adc
mov
dec
adc
xor
ficoml
scas
add
fs
jl
xor
out
pop
xor
sub
sub
insb
jne
jbe
sbb
xor
adc
mov
loopne
and
jnp
and
add
pop
inc
cmpb
xor
cmp
leave
leave
dec
dec
inc
cmp
rclb
xchg
add
and
push
in
lds
xor
xchg
cmpsb
cltd
in
mov
fs
xchg
rorl
xchg
test
call
je
sub
push
leave
sbbl
and
mov
ds
lret
divl
test
imul
add
in
sbb
mov
int
leave
adc
mov
dec
add
sbb
cmp
xchg
push
add
mov
sub
cmp
add
std
add
mov
in
and
push
shlb
and
sbb
stos
adc
in
out
xchg
cmp
lods
add
mov
mov
cmpsl
push
and
xchg
mov
inc
or
xchg
call
xchg
dec
sub
add
loopne
enter
adc
jo
movsl
xor
mov
adc
mov
xchg
stos
movsb
lods
enter
xchg
iret
lret
test
call
call
inc
cwtl
lods
and
in
pop
dec
pop
dec
es
fmuls
loopne
and
push
repz
movsb
xor
faddl
push
in
fcompl
out
in
mov
aam
enter
pop
sub
or
fdivs
adc
or
movsb
in
fs
dec
mov
aam
in
xchg
test
push
or
test
test
daa
inc
lock
pop
lods
out
add
xchg
push
sbb
sbb
shlb
sbbb
adc
int3
cmpsb
pop
fadds
cmc
and
mul
nop
ret
add
nop
jns
out
push
hlt
dec
xchg
fwait
cmpsl
in
sbb
out
in
outsl
lods
movsb
mov
push
pop
xchg
cmp
test
cmp
ret
inc
aas
lea
cmc
sub
mov
mov
loope
sbb
andb
adc
xchg
ret
xchg
or
scas
jne
dec
cs
and
shr
loopne
xor
xchg
clc
push
xchg
jmp
mov
xchg
cwtl
mov
ds
test
pushf
sub
dec
add
mov
xchg
mov
adc
push
mov
sti
shr
lds
and
add
dec
fbld
add
add
adc
cmp
and
push
add
sti
inc
add
sub
add
fmull
sub
xor
rorb
decb
sbb
shrl
ret
addb
xchg
sbb
xlat
cmp
mov
push
add
add
mov
mov
or
pop
or
jmp
sub
andb
or
das
or
xor
or
or
adc
push
lret
xor
sbb
and
inc
adc
mov
call
add
adc
shrl
add
add
ja
sub
mov
mov
inc
ja
and
cld
add
movsb
xor
or
in
inc
or
sbb
push
iret
or
sub
in
or
mov
jo
add
sub
mov
filds
or
js
popf
out
and
mov
dec
add
push
sub
push
insl
mov
xchg
or
nop
mov
add
aaa
and
cs
or
cld
add
fnstsw
ficoms
push
push
or
jnp
cmp
movsb
sub
cmp
push
add
inc
inc
cld
mov
push
xlat
dec
and
mov
movsl
int
push
insb
leave
jbe
orb
mov
and
xchg
into
adc
push
xchg
mov
pushf
adc
mov
mov
lahf
out
out
jle
or
pop
mov
cmp
xchg
mov
sbb
mov
push
or
sbb
and
jmp
fmul
rolb
jne
mov
dec
addl
insb
sub
inc
jo
fadds
push
jg
add
ja
ds
or
adcb
rorl
inc
sub
cmp
and
jmp
cmp
imul
test
mov
push
nop
dec
iret
jle
lods
nop
xor
mov
push
and
stos
out
in
mov
jne
movl
pop
sub
inc
imul
imul
nop
das
add
jmp
inc
inc
or
rolb
mov
inc
or
xchg
nop
cmp
pop
push
push
lahf
lea
xchg
push
push
dec
xorl
dec
incl
xor
into
mov
jae
std
aam
push
jmp
lock
push
inc
fsubrs
add
push
mov
and
sbb
and
push
aas
rolb
adc
aad
cmp
or
push
call
pop
jp
iret
shl
jne
shll
inc
pop
lods
rcll
leave
inc
cmp
sub
lea
inc
aaa
jmp
outsb
enter
mov
push
loopne
subb
cli
cmp
inc
cmp
ljmp
add
sbb
inc
pop
jge
add
add
jg
jb
mov
fwait
test
aam
inc
je
push
xor
mov
sub
cli
jl
sub
sbb
dec
jne
mov
dec
mov
out
cmpsb
mov
inc
nop
jmp
adc
jbe
mov
jle
xor
push
mov
aaa
leave
or
inc
dec
jne
xchg
pushf
inc
loop
scas
stos
mov
jmp
push
rolb
push
jnp
cmpsl
cmp
notb
enter
adc
cmp
lcall
pop
mov
dec
mov
cmp
pop
pop
push
sub
and
push
jo
rorl
mov
and
or
and
sbb
xor
push
outsb
push
ja
jmp
push
ss
call
testb
insb
ljmp
add
push
add
and
or
inc
push
or
xchg
jne
lock
add
sbb
cmp
jmp
xor
dec
sbb
mov
pop
push
inc
mov
pusha
sbb
pop
ret
sub
rcl
insl
adc
jne
es
xor
adc
and
push
dec
and
imul
and
add
push
xchg
ds
cmp
mov
loopne
sbb
xorl
out
ret
js
ds
push
sbb
mov
lea
or
loope
clc
and
rolb
aaa
push
xor
cmpl
ret
adc
orb
sub
cmp
xor
sub
xor
and
push
xor
add
mov
fadd
je
cmp
mov
and
xor
lcall
lods
cmpsb
xchg
cmpb
mov
cli
addr16
imul
sarb
rolb
fiaddl
les
popl
movl
cld
sub
dec
jp
cmp
pop
pop
sbb
cwtl
daa
sbb
iret
ljmp
jle
jg
je
lcall
js
add
inc
add
add
inc
and
add
leave
loope
sbb
inc
fsubr
sub
and
pop
into
sbb
add
jne
out
and
nop
cwtl
add
and
pop
loope
icebp
add
and
jb
add
add
add
clts
call
leave
xchg
lret
pop
call
fsubrp
mov
rolb
aam
and
js
push
icebp
sbb
sbb
and
std
xor
mov
mov
push
pop
xchg
movsb
push
and
push
test
mov
mov
orl
out
mov
mov
cwtl
add
inc
sbb
adc
movl
imul
adc
jo
push
jmp
fldl
dec
add
cmp
lock
sahf
inc
sbb
xchg
cwtl
mov
or
push
dec
mov
in
sbb
aam
mov
pop
or
ret
mov
mov
ret
imul
jne
ret
pop
rorl
xchg
mov
rol
dec
es
fdivr
lahf
mov
arpl
ds
inc
cltd
sub
adc
xchg
adc
pop
add
or
jnp
or
xor
shl
pop
shl
mov
iret
push
adc
push
outsb
xor
jno
inc
and
insb
pusha
cmpsb
jne
sbb
sbb
cmpl
inc
dec
pop
cmp
dec
and
jle
pop
cwtl
dec
jl
sbb
jmp
bound
xchg
push
dec
lcall
jbe
and
xchg
cmc
xor
pop
cmp
jmp
lcall
mov
push
popa
popf
jge
adcl
sarb
mov
push
xchg
xlat
in
push
loopne
jge
aam
fs
xchg
xchg
lret
pop
jo
mov
push
jo
cmpl
leave
test
push
adc
sbb
and
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
fnsave
aad
sub
xor
test
fistpl
jge
mov
out
outsl
xchg
arpl
sbb
push
jne
cmp
stos
inc
lahf
xor
or
rcl
xchg
sbb
pop
mov
adc
and
inc
ljmp
dec
je
add
ss
dec
jne
or
or
loopne
inc
js
movsl
sbb
in
mov
add
or
lods
test
test
std
inc
hlt
xchg
and
mov
lods
std
cmpsl
mov
psubsb
cld
jne
cmpsl
pop
mov
mov
jp
aaa
mov
add
inc
push
add
add
mov
dec
lea
hlt
aaa
je
mov
test
idivb
and
and
out
push
push
or
mov
xchg
out
ret
sbb
cmp
add
cmp
shl
sbb
cmp
mov
mov
mov
fbld
mov
xchg
mov
pop
cs
jl
adc
pop
jb
adc
dec
sbb
or
add
mov
add
scas
xor
add
dec
rclb
pop
cld
jns
arpl
mov
fstpt
outsb
mov
xor
popf
dec
enter
inc
fiaddl
addr16
sahf
mov
call
sti
dec
je
or
or
push
and
lahf
mov
or
push
inc
sub
xor
push
add
imul
ds
add
jne
cmpb
movl
jl
cmp
inc
xor
std
inc
in
icebp
dec
movsl
in
add
outsl
loope
push
imul
in
jno
pop
leave
mov
andl
scas
push
lods
jp
push
enter
test
or
jp
pop
push
dec
rcll
add
and
or
cmpsb
inc
push
clc
fs
sbb
cmp
inc
or
mov
mul
pop
jle
push
or
add
add
push
sbb
cmc
push
inc
lea
mov
pushf
xchg
push
popa
icebp
adc
clc
cli
push
loope
pop
mov
mov
add
xor
and
movsb
popf
jne
xor
imul
push
or
mov
pop
test
rorb
out
mov
sub
or
enter
sbb
jns
daa
cmc
aad
shll
xor
sbb
ds
cmp
fnstcw
icebp
push
xor
dec
mov
pop
enter
mov
sub
je
add
or
mov
or
out
insl
cmp
mov
shll
push
mov
adc
mov
fstpt
aad
add
cmp
in
xor
lcall
std
and
sub
inc
ret
xor
ret
ret
cmp
in
sbb
adc
sbb
leave
push
add
jecxz
sbb
and
mov
and
mov
mov
movsb
xchg
jne
adc
dec
jecxz
nop
popf
mov
hlt
add
mov
mov
mov
movb
loop
shl
insl
pushf
inc
pop
mov
or
jl
movsl
repnz
stos
dec
push
mov
mov
pushl
fistpll
bound
scas
mov
imul
cmpb
fildl
cmpsb
call
in
jnp
lods
lock
and
mov
and
nop
push
in
xchg
or
fnstcw
outsl
arpl
push
dec
push
sub
or
nop
aad
inc
rorb
cld
ret
repnz
sub
mov
xchg
lret
mov
ss
dec
mov
mov
mov
mov
jbe
jmp
mov
rorb
lea
xchg
and
lcall
sub
ffreep
mov
rep
aad
sub
sbb
sub
xor
loope
fwait
data16
and
dec
data16
cs
aaa
pop
xor
add
test
pop
dec
les
in
cmc
rorl
dec
outsl
arpl
jmp
push
sub
js
test
sbb
jmp
rclb
sbb
add
lds
jg
int3
cmp
loopne
sub
test
jne
add
sbb
dec
fstpl
call
std
fisttps
int
dec
rolb
loope
loopne
mov
std
in
mov
pop
jmp
fwait
mov
mov
dec
lahf
pop
xor
jge
jg
sbb
mov
je
cltd
lea
mov
mov
mov
int3
nop
dec
es
add
fisubrs
pop
dec
or
add
lret
in
int
dec
dec
jmp
lret
inc
push
mov
and
dec
js
dec
or
adc
xor
pop
and
push
adc
mov
outsl
daa
pop
mov
mov
mov
dec
lea
sbb
mov
test
push
xor
pop
jle
adc
xor
mov
jns
out
push
loop
scas
mov
repz
mov
sbb
inc
sub
xchg
lock
ja
insb
subb
push
push
insl
jmp
add
mov
in
subl
xorb
out
rol
xchg
xor
pop
lret
daa
std
popl
mov
xchg
adc
addl
and
leave
push
cmp
dec
popf
or
ret
dec
pop
lret
cmpb
cmpb
divb
sub
movsl
push
adc
xor
push
xchg
jne
push
adc
lret
mov
leave
add
xchg
loope,pn
add
cmp
jle
sbb
add
lret
sbb
inc
dec
mov
mov
mov
incb
fsubs
cmp
insl
push
adcb
add
and
out
loope
xor
add
pop
sbb
add
jmp
and
or
xor
lock
pop
inc
scas
xor
repz
idivl
sbb
jmp
movsl
or
sub
pop
shrl
loopne
loope
int3
xchg
inc
mov
inc
sbb
mov
popa
test
jge
nop
cmp
and
sub
mov
jno
jno
out
int
shll
inc
jns
and
push
and
inc
sub
outsl
cmp
push
dec
add
jmp
popa
cmpsl
mov
aas
clc
add
lret
jb
pusha
lods
and
outsb
pop
or
push
xor
insb
cmp
and
sbb
adc
add
add
pop
lea
adc
xchg
and
add
push
xor
push
std
adc
out
int3
sub
sub
and
push
int3
lsl
sbb
or
stos
jl
mov
add
fidivs
sti
fisubs
mov
and
mov
jb
inc
xchg
clc
adc
dec
into
add
ret
sub
jmp
aas
push
orb
add
sub
dec
push
or
push
movlps
out
fidivrs
mov
mull
lsl
jmp
push
pop
cld
jg
ljmp
fcmovnbe
ljmp
into
ss
repz
dec
fdivrs
outsb
nop
mul
pop
jb
cmp
or
cmp
or
out
sub
xor
and
adc
pusha
je
loope
neg
or
push
lret
jo
clc
fxch
pop
ret
adc
add
add
and
loop
mov
lock
xchg
xor
pop
shlb
mov
mov
fiaddl
and
out
dec
xchg
sub
inc
roll
insb
sar
xor
orb
push
adc
add
jae
imulb
push
sbb
ret
push
pop
xor
test
inc
jb
mov
or
sub
lea
daa
pop
enter
mov
push
cmp
add
fcoms
xor
or
mov
in
shll
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
sbb
fbstp
jmp
mov
outsb
jmp
test
jp
js
mov
add
cmpsl
gs
sbb
inc
pop
out
lahf
jmp
fidivl
or
lahf
add
sub
or
and
jle
jno
popf
arpl
pop
testb
outsb
mov
mov
pop
outsb
push
xchg
adc
jne
or
mov
cs
ret
or
mov
mov
pop
adc
dec
aas
xchg
lea
mov
push
sub
push
inc
icebp
andl
rolb
mov
fcoms
mov
rorl
adc
push
add
sub
addr16
mov
xchg
xchg
inc
inc
pop
add
je
add
push
or
test
das
add
imul
mov
cwtl
dec
and
sub
cltd
mov
mov
fwait
rolb
push
fldl
or
dec
pop
jae
lds
dec
fdivrs
mov
jp
fistl
mov
imull
bnd
jmp
adcb
mov
mov
inc
sbb
ret
pop
in
nop
into
das
nop
mov
shll
dec
add
and
sub
je
or
adc
sbb
scas
mov
addb
push
push
xchg
inc
pushaw
js
or
fstpl
cmp
xchg
xor
shrb
sbb
add
stc
cmpsl
xor
and
pusha
enter
imul
mov
fs
xchg
mov
push
dec
cmp
cmpsl
rorl
inc
pop
inc
mov
lock
fmull
fstl
mov
lock
push
cmp
push
push
lea
xor
jnp
sub
nop
and
sub
dec
sahf
cmpsl
stc
cmp
xlat
shlb
sub
fdivp
push
insb
jne
jle
or
mov
pop
adc
mov
aaa
rcll
fucomp
dec
add
cmpsl
int3
push
mov
inc
ss
and
hlt
lods
into
jne
inc
add
add
leave
add
pusha
cmp
clc
or
loopne
pusha
push
inc
mov
add
divb
cltd
jmp
inc
faddl
test
add
out
fisttps
or
inc
test
adc
fucompp
jae
outsl
fs
jp
xchg
and
ret
and
dec
ljmp
jmp
test
mov
ss
mov
dec
or
dec
sub
iret
push
sbb
sbb
adc
mov
aas
xor
jle
xchg
into
aaa
mov
and
push
test
movsb
add
xchg
mov
and
add
sarb
sbb
cmp
add
aas
out
inc
jle
inc
or
enter
test
icebp
or
inc
mov
pop
enterw
mov
inc
or
ds
nop
imul
lock
mov
jo
je
or
fisubl
and
mov
push
addr16
fcomps
xor
add
or
inc
mov
mov
scas
movsl
push
adc
fcomp
add
scas
mov
or
or
add
dec
mov
pop
xor
adc
sbb
inc
shrb
and
dec
push
popa
xor
and
lds
xchg
call
push
xchg
inc
lret
push
imul
and
xchg
ja
sbbl
mov
add
es
inc
xchg
add
or
jo
stos
movsl
cld
fldt
dec
in
mov
jb
xor
cmp
es
insl
mov
fistpl
outsl
movsb
rcr
mov
add
in
xor
xchg
adc
xorb
and
inc
leave
push
and
xchg
clc
mov
dec
cs
mov
inc
push
mov
or
sub
mov
and
mov
sbb
mov
adc
mov
test
xchg
pop
inc
dec
lret
push
sbb
lock
jne
popa
dec
add
sbb
xor
popa
movsb
test
push
jb
test
pop
enter
lods
cmovnp
xor
push
mov
js
jns
mov
hlt
pop
dec
inc
push
sti
aad
jmp
les
sbb
je
sahf
sub
int3
adc
inc
jg
pop
xor
movl
jl
inc
or
mov
add
adc
or
push
pop
dec
pop
pushf
je
lahf
push
mov
les
xchg
sbb
jo
clc
inc
mov
pop
pop
bound
mov
pop
push
pop
mov
loope
sbb
mov
jmp
or
mov
and
iret
push
jmp
mov
mov
xchg
insl
cwtl
add
adc
jae
jg
mov
xchg
pop
sbb
push
pop
rorl
inc
dec
test
and
cld
inc
mov
pop
mov
mov
add
cmp
and
rolb
or
jno
ror
adc
xchg
test
mov
push
dec
and
add
jl
movsb
and
mov
mov
lea
cwtl
ret
mov
call
test
fstpt
mov
or
je
mov
int
lret
sub
ret
adc
std
cld
rcrb
pop
pop
push
push
push
mov
push
inc
js
push
nop
outsl
mov
add
xor
int
aas
mov
cmp
je
or
add
push
std
int3
and
and
jle
popa
add
imul
push
sbb
and
mov
sbb
xor
stos
bound
je
or
insb
rorb
add
dec
rorb
mov
hlt
mov
test
jne
pop
dec
or
inc
fisttpl
inc
cmpsl
xor
inc
addl
xchg
insl
sti
rcll
xor
pop
push
add
xor
add
hlt
sub
fiadds
fidivs
cli
or
stos
add
jmp
or
cmp
sub
pop
mov
lcall
sbb
lods
sbb
inc
data16
xlat
iret
jne
cmpl
jne
push
xchg
mov
xchg
sbb
and
cmp
add
mov
lcall
inc
xchg
sub
daa
jne
jmp
cmp
ret
cmp
jno
push
lock
rclb
maskmovq
divl
xchg
out
add
xor
add
rcl
adc
cli
add
dec
dec
push
and
clc
fisubs
ds
cmp
pusha
mov
add
jle
xchg
icebp
inc
jle
andl
or
xchg
fldl
stc
mov
fs
cmc
adc
cmpsb
jmp
cmp
jb
subl
xchg
xor
xchg
inc
test
lea
ds
xchg
xorl
mov
cmp
popf
sub
pop
mov
add
es
xchg
or
rcll
pop
fs
scas
add
pop
shrb
or
sbb
in
add
lea
sub
sbb
and
or
jmp
jo
add
inc
or
out
push
mov
cmp
push
sbb
add
pop
lds
add
push
add
fdivrs
jnp
inc
in
js
insl
loope
push
hlt
inc
push
jecxz
js
mov
bound
and
jp
adc
pusha
fldpi
xor
js
gs
ss
gs
and
inc
or
pop
ja
push
jne
and
lds
fmull
mov
adc
test
in
jnp
pop
mov
xor
dec
out
dec
adc
add
in
int3
pusha
lret
nop
dec
popl
jo
push
addl
jb
rcrb
sub
xor
inc
test
jo
push
push
pop
pop
inc
or
int3
push
notb
add
outsl
xchg
enter
or
mov
or
jne
dec
push
dec
dec
or
mov
addr16
add
fisubrl
or
aas
movsl
adc
incl
jle
jmp
push
inc
faddl
push
jl
pop
je
cmp
push
insl
jmp
movsb
scas
or
js
and
xchg
or
cld
push
ljmp
pop
inc
or
xchg
push
insl
and
cld
add
sbb
sbb
inc
push
insl
or
andl
mov
jno
adc
nop
mov
dec
sbb
ljmp
shlb
fcomi
mov
cmp
inc
popa
xor
clc
adc
push
scas
inc
inc
cmp
lea
int3
xlat
lds
loop
inc
and
and
jae
and
lock
jae
lea
add
add
push
xchg
xchg
inc
xor
test
outsl
popa
imul
daa
orl
mov
jnp
pop
loopne
xor
insl
push
mov
cmp
add
pushf
js
push
outsl
lds
data16
push
mov
lea
push
fnstcw
or
jbe
pop
pop
push
xchg
loop
out
or
mov
mov
addr16
push
push
pop
push
int
rcrl
or
fwait
leave
xlat
lea
lods
sbb
mov
lock
sub
incl
or
push
inc
and
xor
dec
inc
clc
fisttpll
xchg
add
jb
push
push
mov
out
adc
call
push
add
dec
aas
add
add
mov
or
fldl
cmp
inc
or
push
or
or
add
arpl
fbstp
daa
faddl
add
or
aas
cmp
or
dec
aas
js
rorb
and
into
sub
shll
cmc
test
xor
lds
adc
cmp
sub
push
dec
imul
mov
fmuls
sbb
inc
jmp
je
cmp
pop
ret
mov
or
add
xor
jmp
jo
xor
pop
and
popl
add
incl
clc
sbb
dec
sbb
mov
repz
jg
mov
push
orb
jmp
mov
jmp
lea
pusha
add
and
jmp
push
sub
rclb
sub
push
aaa
xor
jo
fistpl
mov
jne
jmp
xchg
cmp
fiadds
or
je
push
mov
cmp
cmp
push
mov
mov
or
daa
pop
pop
xor
mov
stos
jae
or
dec
sub
add
dec
fs
nop
sbb
int3
dec
out
mov
push
push
lcall
mov
mov
je
insb
ss
jns
xor
movsl
cmp
jle
xor
pop
cmpxchg
repnz
lock
xchg
ss
sbb
cmp
ljmp
out
repz
and
add
lock
add
push
lret
cmp
pop
mov
iret
sti
jge
fsubl
jbe
inc
adc
sub
jae
cs
xor
and
lret
cmp
clc
sub
call
sahf
inc
dec
inc
and
lret
sbb
lock
push
add
lahf
fnclex
push
or
sar
dec
adc
shlb
adc
jg
or
mov
mov
jbe
add
adc
mull
test
popa
fadds
sbbb
lahf
call
cwtl
jbe
cmp
or
inc
mov
addb
jb
mov
push
inc
mov
cmp
sbb
xchg
or
sbb
add
gs
jle
mov
mov
mov
gs
testb
sub
ja
inc
xlat
push
les
and
xlat
mov
push
daa
pop
push
pushf
jo
dec
or
jne
add
stos
and
sarb
into
loopne
mov
jmp
insl
or
jmp
push
push
lds
in
clc
xor
imul
pop
mov
and
and
jmp
dec
and
inc
test
and
push
mov
loope
test
adc
jmp
or
je
fs
int
addl
hlt
pop
lret
jo
sahf
mov
adc
mov
jbe
sub
inc
adc
in
or
mov
push
loopne
pusha
loope
sbb
push
mov
pop
inc
cmp
mov
xor
rclb
adc
lret
xchg
pusha
add
rcrl
sub
push
push
pop
aas
pop
dec
inc
decb
dec
add
icebp
add
frstor
stos
or
inc
cmp
lock
dec
xchg
push
clc
mov
mov
add
sarl
lcall
adcb
jg
add
ss
dec
jmp
pop
jo
mov
leave
jb
filds
add
sbb
fiaddl
or
sbb
and
jb
pop
push
int
lods
fsubr
add
sti
lods
adc
sbb
sbb
cmp
push
add
mov
or
sbb
cmc
les
add
lcall
sbb
fwait
clc
fidivl
dec
mov
or
mov
push
dec
mov
push
sbb
pushl
lods
mov
lods
shlb
dec
pop
jno
stos
or
sub
push
push
push
mov
les
sarb
sbb
mov
sub
cmp
ret
sbb
cwtl
mov
xchg
outsl
push
mov
push
fistpl
jno
rol
aas
jg
inc
ds
int3
lods
int
mov
mov
jne
mov
mov
jmp
adc
adc
push
into
cwtl
mov
adc
inc
add
or
jbe
fcoms
fucom
mov
push
mov
adc
add
xchg
dec
dec
fmuls
adc
push
shl
nop
aam
test
xchg
lods
pop
inc
inc
fidivl
mov
push
mov
add
xor
mov
sub
mov
or
sbb
xor
adc
add
insb
xor
cmp
inc
jmp
xchg
out
data16
cmp
jbe
jne
imul
xchg
bound
mov
outsb
jge
aas
sbb
lret
cmp
push
cmp
in
sbb
xor
sbb
add
je
mov
iret
mov
lock
xor
jp
call
or
xchg
or
cmp
sahf
fstp
fdivp
jne
push
adc
and
add
sbb
mov
or
sbb
scas
rcrb
inc
dec
adc
jg
ljmp
gs
lahf
out
outsl
push
push
dec
adc
push
and
jl
daa
xor
jg
fsubp
repz
outsl
inc
or
jbe
jle
xor
repz
es
jg
jg
jo
mov
std
lods
sbb
xchg
dec
in
jbe
rcr
pop
ffreep
pop
mov
lea
inc
out
and
lea
insb
shrl
cmp
pop
xor
dec
ljmp
or
imul
inc
push
negl
ret
mov
jo
shrb
lret
ret
mov
shr
or
rcl
xlat
daa
xchg
and
sar
push
fmull
mov
pop
rcrl
sbb
inc
push
cmp
jge
int3
out
outsb
mov
lea
inc
out
testb
push
mov
cmpsb
xchg
and
mov
jmp
scas
sub
icebp
orl
ds
pop
inc
mov
ret
add
adc
cli
and
shl
sbb
fs
and
or
jmp
xor
adc
loopne
outsb
ljmp
in
jg
sbb
or
jmp
mov
add
ja
into
push
push
xor
sub
cld
jecxz
adc
orl
push
push
adc
enter
push
sub
adcb
jge
lods
push
pop
nop
cs
lods
adc
shlb
gs
add
outsl
sbbl
loope
andl
loopne
rcl
adc
rcl
xchg
dec
or
dec
inc
inc
pop
insl
pop
xchg
mov
std
and
or
xchg
cmp
dec
push
adc
or
push
push
rolb
mov
push
in
jne
movl
push
add
cmpsb
pop
push
pop
or
sbb
fisubrl
cmp
add
insl
mov
clc
lea
lea
or
add
pop
dec
imul
add
mov
in
mov
add
xchg
jne
cmp
ds
add
mov
cmp
fisubs
pop
lock
xor
xlat
mov
or
pop
out
or
aam
lock
mov
add
sub
jno
adc
fsubs
pop
jno
push
jb
je
xor
push
mov
adc
pop
stos
adc
outsb
xor
pop
push
and
jo
or
shrl
cmp
inc
mov
out
push
push
push
imulb
ds
cmpsb
popa
adcl
gs
adc
dec
mov
mov
out
sub
fs
shll
jnp
leave
shrb
xor
pop
aad
andb
add
inc
ja
test
and
mov
inc
and
pop
mov
adc
add
xor
shr
pop
push
test
aas
mov
js
or
arpl
add
sbb
pop
xchg
arpl
dec
sub
daa
shl
add
iret
andl
out
data16
es
pop
pop
mov
pop
xchg
subb
push
inc
test
in
je
sub
sub
adc
repnz
cmpl
mov
sbb
outsb
test
leave
sbbb
loopne
mov
dec
adc
pop
jo
jl
or
or
out
imul
das
push
in
xor
pop
gs
cld
sbb
and
pop
push
push
or
cmp
test
rolb
into
lods
push
pop
mov
cmp
rcrb
add
push
adc
adc
out
push
inc
mov
es
dec
and
mov
push
sarl
dec
adc
insb
adc
xlat
inc
push
movsb
addb
sbb
adc
sysexit
hlt
push
mov
ljmp
jg
mov
cli
popf
pushl
leave
aam
mov
inc
push
cmp
push
icebp
push
movsb
mov
or
adc
jo
mov
cmc
enter
stos
inc
mov
inc
sti
dec
inc
push
push
nop
inc
dec
mov
or
cwtl
or
les
cmp
pusha
sub
xorb
mov
cmp
orb
add
jmp
push
mov
cs
push
or
mov
or
xchg
shll
popf
xchg
cmp
push
dec
iret
and
jp
gs
dec
cs
mov
sub
add
jnp
inc
inc
add
je
adc
test
dec
adc
xchg
mov
mov
adc
jmp
mov
stos
popf
mov
inc
add
scas
mov
push
inc
and
aaa
cmp
cmp
jle
sub
ffreep
push
sarl
and
jmp
dec
push
les
or
cmp
xchg
push
test
xchg
pushf
incl
jle
jae
out
sub
idiv
fcmovu
lock
sbb
sbb
mov
les
mov
mov
pop
jge
out
jge
sarl
mov
nop
out
xor
es
jae
imul
sbb
or
push
jmp
add
fs
push
icebp
dec
rclb
bound
jns
js
lahf
and
cmp
dec
or
orl
push
fsubr
dec
and
push
and
stc
sub
mov
mov
movsl
jbe
sub
mov
aad
stos
loopne
xchg
ss
je
mov
adc
movsb
adc
jno
mov
cmp
cmp
push
div
outsl
jbe
add
testl
sub
or
pop
je
sti
adc
cmp
sub
je
clc
mov
dec
mov
imul
fdivr
sbb
dec
xor
cmp
or
jecxz
je
adc
inc
jmp
cmp
data16
xor
shrb
mov
mov
dec
mov
pop
push
hlt
sub
lock
sti
add
mov
pushf
push
push
and
fsubrs
cwtl
jge
add
lcall
sbb
icebp
inc
jae
test
cmp
fadds
shlb
mulb
add
paddusw
in
mov
xor
jne
fadds
andb
lods
pop
cld
jg
xor
lods
sarl
add
cmp
push
mov
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
fwait
aam
ror
into
hlt
mov
or
jecxz
add
or
daa
icebp
add
jne
mov
roll
ja
sbb
inc
dec
frstor
push
xlat
jae
and
pop
mov
inc
ja
xlat
push
or
mov
or
add
xchg
cmpsl
and
movsl
jg
pop
inc
testl
mov
jne
dec
les
dec
into
stos
inc
jne
mov
pop
ss
or
cmp
or
movsb
mov
xchg
adc
xchg
nop
sbb
je
test
lock
or
push
pushf
jo
insl
pop
mov
les
mov
lods
shr
adc
sub
ret
xor
cmp
jb
xchg
ficoml
fiadds
lahf
test
cld
je
incl
cmpl
insl
mov
add
adc
sbb
sti
in
xchg
mov
jg
add
aaa
les
push
add
mov
jg
pusha
aam
gs
call
testb
shr
pusha
in
and
or
sti
sbb
addr16
pop
mov
sub
lods
dec
sub
inc
mov
xor
add
idivb
pop
lods
lcall
shrl
shl
shr
or
mov
sahf
dec
mov
inc
ret
or
outsb
mov
or
enter
sub
push
ret
xchg
sub
xor
mov
fiaddl
fiaddl
mov
jo
push
ljmp
jmp
out
jmp
or
lods
mov
fstps
jb
or
xchg
sub
lds
dec
and
xor
xor
int3
jmp
sub
or
rolb
inc
daa
mov
fxch
push
dec
into
jmp
lods
negl
xor
out
rolb
jae
imul
add
out
add
insb
and
lods
mov
es
xorb
lret
das
pop
outsl
fs
sub
lret
mov
movups
mov
mov
and
jo
mov
sub
call
xchg
xchg
add
push
push
dec
cmp
sbbl
out
rcrl
ljmp
out
and
adc
jno
repz
adc
roll
adc
add
testb
adc
sbb
mov
sbb
subb
lcall
pop
mov
lea
cmpsb
mov
icebp
push
mov
sbb
push
mov
lds
orb
xor
add
dec
push
push
lock
inc
ljmp
sahf
test
stc
or
sbb
mov
jne
in
lahf
cmc
add
or
lahf
loopne
pop
insl
xor
fistpl
popa
mov
fnstenv
dec
in
or
inc
stos
ret
add
and
rolb
repz
hlt
or
mov
ljmp
sub
dec
lret
es
dec
or
adc
mov
pop
xchg
loopne
jg
inc
fbld
pop
lea
cs
mov
icebp
pushl
add
mov
add
shll
shrb
xor
cmp
in
out
pop
pop
loop
pusha
pop
je
inc
push
jmp
push
inc
adc
and
repz
xchg
loop
inc
inc
jo
mov
jne
les
mov
jnp
stos
jo
testb
adc
mov
xor
mov
push
xor
xchg
add
rcl
sbb
add
repnz
inc
mov
inc
inc
cli
pop
pop
ret
cs
pusha
popf
fiaddl
rorl
mov
jns
fcmovne
bound
add
cli
shr
add
and
mov
rolb
shll
and
out
or
cld
adc
ret
push
pop
jne
jo
movsb
xor
dec
popa
mov
mov
adc
dec
jl
pop
inc
cli
ljmp
andb
shrl
leave
push
bound
push
cli
shl
mov
sbb
adc
push
sub
mov
rorb
pop
dec
pushf
mov
jae
dec
xor
push
loopne
or
mov
jo
push
loopne
sbb
loopne
and
jmp
dec
movsl
add
insb
pop
mov
ret
mov
nop
jne
cld
add
in
into
ja
xchg
cmp
xor
dec
pop
jmp
mov
push
lea
lcall
cmp
mov
add
sar
mov
aas
push
push
je
or
dec
adc
jge
xor
arpl
cmp
jne
and
mov
mov
adc
data16
pushf
cmpsb
push
mov
test
fildll
jo
test
ljmp
mov
ficompl
cmp
pusha
cmpsl
sbb
cmpb
push
push
loope
adc
mov
popf
mov
or
and
dec
xor
aaa
jo
and
sbb
mov
add
addr16
mov
fsubl
sub
sbb
mov
aaa
push
lods
adc
push
hlt
mov
andl
loopne
and
popa
inc
rclb
cmp
in
out
lret
add
cld
cmp
cmpsl
rolb
fsubs
cltd
adc
push
push
out
pop
movd
xchg
push
cld
inc
call
jmp
xor
inc
sub
adc
outsb
mov
nop
loopne
inc
push
lea
fimull
and
loope
scas
cmp
add
dec
sub
inc
xchg
jne
loopne
lea
je
push
mov
aad
mov
jns
and
inc
fs
add
fidivl
mov
fwait
test
jo
imulb
fisubl
incl
cmpsb
int
push
test
push
or
add
jmp
cmpsl
mov
sbb
cmp
clc
add
cmp
test
xor
es
cmp
sbb
jp
scas
test
repz
push
jmp
cmp
inc
jge
and
iret
push
pusha
dec
iret
test
out
and
dec
loopne
scas
sbb
pop
sbb
jg
sbb
fisttps
cmp
jge
jg
jmp
adc
push
sysenter
sbb
movsl
xchg
loopne
dec
xor
jecxz
push
mov
ret
data16
and
mov
imul
mov
imulb
adc
pop
cwtl
mov
cmp
mov
cmp
pusha
pushf
loopne
jne
shufps
mov
cltd
jmp
push
addl
xchg
pop
movsb
lds
lock
and
inc
fisttpll
jne
ficompl
and
daa
ret
sub
shll
les
mov
push
cmp
andl
loopne
fs
pop
jns
iret
add
and
add
add
jg
sbb
mov
mov
or
sub
xor
test
sub
and
cmp
mov
and
scas
imul
push
lea
mov
stc
cmp
loope
scas
add
rolb
sbb
cli
or
sahf
push
sarb
or
adc
jmp
jne
jb
lods
push
es
or
or
push
inc
fidivrs
sbb
add
js
mov
jp
fwait
jo
lret
jmp
inc
mov
lret
and
adc
clc
jb
sbb
jae
lcall
lods
cmp
cmpsl
sub
mov
add
adc
sub
negb
add
ret
mov
fidivrs
adcl
rdtsc
andb
cmp
aas
and
sbb
into
ds
sbb
jmp
inc
mov
inc
jo
or
add
iret
shll
sub
stos
lock
and
xorb
adc
or
inc
adc
or
sbb
jmp
sbb
xor
int3
ret
test
cwtl
push
jb
xchg
out
or
les
or
push
mov
push
loope
inc
add
sbb
stos
rorl
push
popa
sub
cltd
mov
inc
imul
and
pushf
push
or
pop
jp
xor
mov
and
cmp
cmc
imul
mov
adcb
loop
int
lret
pop
rorb
pop
xor
ret
addb
lea
cmp
loopne
inc
mov
push
push
test
push
xor
movsb
in
enter
jl
lock
addl
js
movsb
popl
pop
sbb
fdivrl
xlat
pop
loope
or
add
std
mov
adc
ljmp
jb
loop
popa
xchg
enter
add
test
andb
andb
stc
adc
push
xor
adc
adc
push
jne
leave
jo
inc
rcrl
scas
sub
or
xor
dec
push
jno
and
push
dec
inc
jae
and
inc
jmp
xor
aaa
idivl
mov
outsb
lds
jle
add
or
adc
xchg
ret
push
mov
pop
sar
out
pop
movsb
adc
gs
cmp
pushf
sub
xor
xchg
data16
adc
in
imul
sahf
loopne
sub
sub
mov
jns
push
fistl
mov
js
xchg
add
pop
shl
mov
jg
cmpl
cmc
dec
adc
and
loop
cmp
xchg
sbb
add
sbb
or
das
push
pop
mov
jl
sbb
andl
or
jno
mov
push
test
mov
inc
pop
and
jle
std
xor
fdivrs
or
pop
cwtl
lds
aaa
push
jne
push
aas
out
xor
ds
pushl
push
shlb
push
add
xor
and
add
rcl
shlb
jmp
xchg
jmp
push
std
mov
inc
add
loope
push
or
or
xchg
push
pcmpeqw
cmp
ret
les
test
mov
addb
jmp
out
loopne
or
adc
iret
inc
add
push
mov
adc
pop
add
pop
pop
sbb
ss
mov
pop
fcomps
pop
or
pop
gs
cmp
cmp
loopne
dec
xor
testb
mov
rol
in
imul
dec
or
aaa
test
cmp
adc
cmp
mov
and
fdivrs
or
into
adc
int
add
ror
or
test
mov
push
imul
and
xor
sbb
aam
mov
push
cwtl
fs
adc
cmp
out
adc
ficompl
call
hlt
and
and
dec
je
jae
mov
mov
push
mov
sbb
or
adcb
mov
add
lret
sub
jne
lods
push
in
add
lahf
arpl
and
or
adc
jp
dec
pusha
sarl
pusha
jne,pn
sbb
fnstsw
movl
pushf
fsub
jnp
push
jle
faddl
sbb
in
jge
mov
mov
and
lods
adc
fsubr
fnsave
push
mov
cmp
pop
add
outsb
sbb
jmp
cwtl
cmp
add
inc
and
sub
mulb
push
adc
fs
xor
jmp
inc
pop
xchg
mov
xchg
xchg
cmp
roll
adc
xor
dec
sbb
or
adc
dec
bound
xor
add
lcall
push
inc
mov
xchg
stc
jb
je
test
or
sub
push
dec
dec
call
sub
push
shlb
sub
or
sub
inc
clc
pop
inc
sbb
sbb
ret
pop
ja
sub
cmp
cs
in
mov
inc
and
mov
outsb
and
xorb
nop
cmp
mov
adcl
shl
lcall
cmp
push
into
loope
mov
lock
add
pop
mov
adc
sar
das
and
push
inc
xchg
iret
cmpsb
add
dec
scas
test
push
mov
cli
sbb
fldl
xor
xor
pop
cmp
test
jnp
faddl
adcb
push
dec
fbld
jl
or
rcll
and
inc
cmp
cld
xchg
je
sarb
clc
pop
pop
push
sub
sbb
jp
cld
fadds
sub
orl
push
xor
and
mov
sub
jp
ja
js
enter
mov
lahf
daa
xor
mov
sub
adc
sbb
jmp
mov
mov
or
movb
adc
out
roll
mov
pop
pop
jb
stos
cltd
or
sub
js
scas
jle
mov
hlt
add
adc
push
lret
and
dec
sbb
xorl
sbb
and
out
lret
sbb
test
jg
cmp
call
mov
adcb
mov
loope
cmp
js
cmp
aad
jo
cmp
push
add
push
adc
stos
cmpsb
int3
push
and
or
mov
cmc
test
jae
xor
mov
mov
rclb
lea
or
adc
ss
jb
sbb
sub
jb
jb
xor
cmp
data16
cmp
inc
and
in
in
inc
cmovs
mov
add
cmp
fs
cmp
je
jl
mov
inc
arpl
adc
mov
and
nop
xchg
xor
and
cwtl
pushf
mov
movsb
test
fs
dec
es
xchg
dec
xor
cltd
fs
imul
call
cltd
aam
hlt
and
cltd
fs
cld
add
insl
and
leave
add
add
xor
cltd
adc
fs
sbb
and
cltd
fs
dec
sub
xor
xchg
dec
cmp
cmp
dec
dec
mov
and
dec
push
push
pop
test
sbb
gs
cmp
jl
movsb
cltd
nop
ss
je
js
add
xor
and
xor
and
xor
cltd
nop
adc
adcb
or
sbb
inc
and
movsb
xchg
cmp
cmp
lods
inc
mov
or
inc
mov
mov
dec
mov
push
enter
pop
mov
adc
and
xchg
sbb
ret
aas
xchg
nop
and
movsb
xor
sub
add
xchg
xor
nop
mov
xchg
and
or
adc
sbbb
punpcklbw
add
leave
push
push
xor
in
and
nop
testl
mov
call
pushf
ss
lock
mov
arpl
iret
leave
pop
mov
shlb
ss
cmpsl
movsb
pop
imul
mov
data16
push
lret
fistpl
dec
sarl
pop
and
adc
lods
xchg
sahf
movsb
mov
push
jecxz
fnsave
mov
mov
jnp
push
push
jo
sahf
rorl
sti
jbe
mov
rorl
xor
push
cld
sbb
adc
out
movsl
cmc
and
aam
enter
sbb
add
loope
push
or
lods
dec
in
test
adc
add
shl
mov
dec
insb
lcall
xchg
or
or
or
nop
pop
iret
add
or
sub
out
push
dec
call
and
ret
cs
fadds
and
cmp
or
fcoms
xor
mov
push
shll
dec
xor
adc
or
push
in
and
jmp
jne
xchg
fsubl
and
push
xor
std
or
inc
add
fsubrs
or
inc
xchg
andb
dec
cmp
cmp
push
jbe
icebp
and
je
sbb
or
mov
mov
cs
cltd
and
call
mov
jmp
pop
mov
or
jmp
inc
and
mov
and
in
out
movsb
jl
and
jecxz
sbb
add
pusha
lcall
ret
pop
adc
and
mov
orl
and
jge
aaa
jge
test
rorl
adc
hlt
flds
and
rcr
ja
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
dec
adcl
pop
xorl
pusha
mov
push
pop
cmp
sub
rorl
sub
inc
testb
outsb
es
adc
sti
scas
cmp
add
add
test
fisttps
adc
repz
das
scas
or
pop
je
dec
jne
orl
and
push
add
push
mov
out
and
sbbb
sbb
mov
jb
sbb
jmp
push
and
or
xor
adc
fnstenv
push
fstps
jmp
fisttpll
or
adc
fistl
pop
mov
test
mov
aad
pop
sub
pop
inc
dec
adcb
and
xor
mov
add
or
jecxz
sub
push
fs
sbb
pop
dec
push
aaa
cs
lods
sbb
lods
jg
adc
add
divb
nop
dec
jmp
sub
sub
sbbl
mov
psubusw
dec
test
into
adc
mov
jg
xor
scas
cwtl
mov
icebp
xchg
mov
and
addr16
mov
imul
lcall
fadds
cmp
scas
imul
scas
in
adc
in
inc
test
cli
repnz
or
adc
sub
cli
test
mov
rcll
aas
or
insl
in
mov
orl
sbbb
loopne
or
jle
push
pop
jmp
pop
add
push
icebp
adc
lcall
cmpsb
mov
and
hlt
push
pop
xchg
or
or
push
insb
std
out
fcoml
jg
jae
out
or
pop
mov
lret
pop
adc
popf
repnz
push
stos
mov
les
fwait
in
movzbl
shl
lea
call
sarb
je
and
jl
rcrl
lcall
in
sbb
add
adc
and
push
push
push
adc
sub
movsb
xor
cli
pop
push
cmp
bound
je
nop
fdiv
adc
mov
pushf
add
in
fsubrp
fwait
jno
popf
add
inc
and
aaa
pop
and
loopne
add
push
sbb
push
pusha
pop
or
mov
in
jo
push
sub
pop
mov
mov
fwait
push
or
in
mov
andl
lock
lea
cmpsl
pushl
fadd
pop
xchg
xchg
sub
mov
jbe
push
das
adc
out
add
hlt
inc
int3
mov
std
shlb
push
mov
xor
or
fnstsw
add
rcrl
mov
inc
pop
cmp
add
add
pusha
pop
andl
xchg
add
mov
or
into
sbb
ret
pop
inc
pop
std
sub
add
jecxz
pop
jp
xchg
dec
cmp
or
mov
popl
jecxz
enter
or
sbb
cmp
mov
ljmp
mov
clc
outsb
fnsave
mov
fsubs
into
pop
call
andb
adc
adc
ret
flds
pusha
rolb
mov
dec
cmp
rcr
pop
flds
shrb
push
adc
xor
test
fbstp
orl
mov
icebp
das
mov
adc
gs
or
xor
push
or
push
or
push
push
mov
mov
push
pop
jmp
sub
xor
push
scas
jge
xchg
add
movsb
es
sub
or
sub
push
push
jo
dec
xchg
mov
push
dec
ljmp
adc
fstsw
fcoms
push
movswl
sbb
loop
shll
sbb
fldpi
js
lcall
dec
xor
fmull
in
sbb
insl
or
push
mov
lock
dec
inc
or
sub
loopne
or
fwait
test
fsubs
mov
jbe
outsb
fwait
sbb
add
and
ret
pop
repnz
sbb
or
movsb
fldpi
xor
push
sub
scas
xlat
clc
je
lret
dec
sbb
xorb
sub
scas
xsaveopt
fnsave
and
adc
adc
cmp
sbb
pushf
jae
mov
pop
push
jmp
and
jge
test
loop
js
mov
int3
add
enter
or
scas
add
jmp
sub
jmp
aas
mov
pop
roll
out
cmp
mov
data16
test
add
push
push
add
sub
xchg
push
lock
stos
mov
stos
pop
pop
mov
inc
jae
adc
in
sub
pop
cmp
mov
push
adc
pop
add
por
lea
adc
insb
aas
inc
ret
jns
dec
or
inc
lea
pop
outsb
xor
inc
xor
lret
scas
rolb
xor
inc
push
popa
outsl
dec
call
loop
rolb
cmpl
jle
movsb
pop
repz
loopne
sti
std
pushf
pop
pop
and
mov
out
mov
inc
insb
fwait
lret
fcoms
sub
mov
mov
adc
cmp
jb
cmp
inc
add
sub
dec
inc
sub
clc
cmp
dec
push
inc
cld
mov
pop
inc
dec
and
mov
mov
stos
jns
fcompl
add
cmp
or
push
and
xor
orl
cmpl
add
sbb
or
icebp
loope
or
ljmp
bound
enter
add
xor
cmp
jl
push
movsl
das
test
pop
xor
pop
call
lret
sub
sub
divl
xchg
jp
xchg
loopne
pop
popf
mov
into
and
loopne
or
ds
push
or
or
cs
aam
out
mov
add
shll
add
inc
shl
loopne
sub
xchg
popa
pop
sbb
mov
loop
inc
pop
or
dec
jns
mov
pop
dec
lea
push
ror
mov
lods
loop
shl
sbb
test
cmpsl
inc
popa
rorb
sbb
enter
into
loopne
rcrl
dec
xor
mov
add
mov
lods
fmuls
vpor
pop
push
push
jb
push
repnz
decb
xor
cmp
and
ret
mov
cmc
hlt
push
aas
cmp
or
rorb
mov
inc
ret
frstor
jge
lock
movsb
xor
cmp
test
arpl
arpl
pop
pushf
mov
arpl
sbbl
roll
add
jne
daa
mov
lock
dec
into
sub
xchg
xor
out
mov
jl
stos
iret
and
mov
and
mov
sub
mov
inc
xchg
jge
aas
sbb
shl
sbb
sbb
enter
or
fisubl
pop
lock
adc
mov
fildl
testl
sbb
mov
adc
and
nop
inc
xor
daa
nop
mov
mov
popf
or
test
cmp
sub
sub
inc
adc
sbb
xchg
add
cmp
push
rorb
adc
jne
pop
dec
adc
mov
test
add
or
stos
outsb
and
xor
icebp
cmp
fstps
xchg
push
jb
frstor
mov
inc
mov
mov
lret
adc
rorl
test
test
nop
mov
cmp
mov
sub
or
pop
pop
sti
scas
push
xchg
xchg
xchg
adc
inc
cs
jg
xchg
or
ss
cmp
je
or
decl
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
roll
out
inc
inc
mov
loope
xorl
push
mov
aaa
movb
jp
sti
popf
add
lcall
inc
pop
push
imul
lods
test
adc
or
adc
xor
mov
add
in
adc
mov
add
adc
jno
scas
mov
gs
pop
and
xchg
inc
addr16
es
mov
sub
jne
and
jbe
pop
rcrb
mov
fisttpll
or
add
inc
out
inc
out
adc
sbb
ret
xor
mov
cld
adc
clc
add
mov
adc
mov
adc
aas
sub
mov
jae
mov
mov
lods
pop
ret
mov
scas
sub
add
pushf
sbb
push
push
pop
add
add
lods
mulb
lods
out
xor
jmp
sub
add
xchg
into
or
sbb
mov
call
gs
mov
and
mov
inc
dec
jns
neg
sbb
je
jl
cltd
push
data16
mov
cs
or
add
add
add
xor
pop
into
xor
push
rclb
cmp
in
xor
or
jae
rol
push
inc
or
add
or
adc
icebp
rcrl
pop
data16
arpl
adc
pop
jmp
addr16
sbb
xor
xchg
sub
adc
mov
fcoml
xchg
and
adc
sub
testb
xlat
mov
sbb
js
or
jmp
addb
pop
jne
sar
jecxz
ds
out
push
push
fadd
pop
enter
orl
mov
cwtl
xor
push
mov
in
xchg
mov
in
push
sbb
xchg
sbb
mov
rcrl
or
sbb
dec
shlb
add
les
pop
adc
xchg
push
and
push
lret
or
in
call
sub
lods
imul
add
dec
adc
fcoml
or
dec
and
mov
xchg
push
orl
cmpb
jbe
sub
ljmp
and
add
mov
aad
bound
cmp
xlat
inc
fstl
dec
sub
leave
and
add
insb
mov
inc
push
xchg
das
and
adc
enter
inc
inc
mov
fistpl
fstpt
push
and
adc
jg
ret
mov
or
jne
bound
xor
aam
es
icebp
sub
mov
pop
inc
xor
mov
adc
and
sbbb
aam
fisubs
or
mov
adc
lods
ja
movq
hlt
nop
or
call
dec
cmpsb
and
push
xchg
and
aad
push
pushf
pop
fsubrs
pushf
sub
and
pop
pop
inc
cmp
sti
or
andb
fistpll
shrd
sbb
jle
outsl
jno
dec
cmp
jge
sbb
call
cwtl
xor
cwtl
xchg
add
data16
xor
clc
scas
inc
and
xor
out
idivb
sub
or
sbb
rorl
inc
call
push
pop
test
lds
lock
ret
mov
xor
jo
out
shl
sahf
push
in
and
push
ret
xchg
sarl
jg
and
or
jmp
adc
mov
shl
fimull
jl
ret
adc
push
shll
mov
pop
sbb
add
mov
push
add
in
lock
sarl
add
cmc
jl
jg
mov
pop
jnp
dec
dec
inc
dec
pop
or
add
jns
fcomps
imul
sbb
cmp
sub
orl
jo
icebp
push
mov
adc
sbb
sbb
add
popf
adc
sub
aas
inc
sbbl
add
jp
cmpsl
inc
add
inc
roll
inc
sbb
jle
in
push
push
ss
jmp
mov
call
inc
ret
bound
sahf
fwait
adc
jno
es
call
icebp
in
adc
cli
pop
push
hlt
rol
push
lods
add
loopne
flds
jle
aad
mov
or
insb
rcl
scas
or
push
and
out
repnz
je
aad
or
adc
fnstenv
jl
into
aaa
inc
movsb
add
cwtl
rolb
sbb
fadds
sbb
mov
cmp
orl
sbbb
add
and
jne
push
cmp
imul
out
out
call
dec
sub
add
test
xor
enter
push
pop
cmp
push
or
test
dec
out
data16
jl
xor
cmpsb
sub
inc
or
cmp
or
outsb
stc
mov
cwtl
or
out
add
adc
inc
fsubs
popf
jmp
xor
sarb
fnstenv
sti
add
pop
or
pop
data16
js
clc
xchg
xchg
lods
sbb
int
dec
sub
push
inc
je
sarb
dec
sbb
jmp
xor
mov
inc
pop
sub
xchg
sub
mov
hlt
inc
sbb
popf
insb
sub
sbb
sub
push
add
aaa
cmp
ret
xor
sub
ret
pop
cmp
je
sub
or
sub
inc
pop
scas
pop
push
inc
inc
mov
inc
pop
jle
daa
push
adc
scas
cmp
inc
jmp
imulb
clc
mov
bound
xchg
roll
mulb
mov
js
jmp
adcb
mov
push
test
fwait
loopne
cmp
jp
push
mov
xchg
cmp
je
sbbl
rcl
mull
fwait
aam
add
js
sub
push
test
popa
add
loope
outsb
mov
mov
in
sbb
or
cmp
in
lea
cs
roll
push
inc
and
jg
lea
push
cmp
mov
push
push
and
jo
push
out
inc
and
jge
and
and
push
adc
enter
fistpl
add
mov
pop
sub
mov
cmp
push
js
mov
sub
mov
test
jl
push
pop
btc
and
mov
cmp
sbb
lods
pop
adc
mov
cmpl
push
or
xchg
sarb
mov
dec
push
mov
mov
jmp
adc
aas
add
or
mov
pop
test
pop
mov
and
or
aam
scas
es
and
nop
icebp
or
pop
jb
andl
adc
jge
dec
push
sbb
dec
je
dec
push
push
jmp
test
nop
mov
jle
add
cli
and
orl
pop
adc
jmp
lret
orb
lcall
jno
add
aad
inc
or
sbb
data16
int3
or
inc
or
cmp
cmp
outsb
orl
jns
inc
jecxz
mov
adc
jne
and
cmpsl
add
je
sbb
and
aaa
xchg
fwait
jp
mov
or
test
rolb
or
insl
mov
add
push
fimull
fcoml
jl
inc
pop
adc
adc
xchg
adc
adc
into
sub
xor
push
and
and
mov
sbb
mov
mov
mov
mov
mov
cmp
pop
dec
scas
sbb
xor
add
sbb
pusha
arpl
add
mov
dec
mov
aam
movsl
adc
or
or
or
aam
adc
outsl
mov
jge
shr
add
or
imul
ss
shr
or
mov
push
push
adc
mov
shr
lret
add
mov
mov
or
add
insl
jns
adc
and
movsl
mov
fimull
inc
jbe
add
jl
pop
and
dec
in
sbb
cmp
or
dec
dec
add
cltd
pop
mov
mov
repnz
dec
fidivrs
fcoml
xor
bound
xor
push
mov
mov
add
lahf
inc
inc
movsl
aam
pushf
stc
rolb
sbb
push
or
or
jge
decl
cmpsb
mov
cmpsb
and
xchg
xor
outsl
inc
xor
pushf
or
lock
cli
ficomps
adc
loop
adc
mov
push
verr
push
test
ret
cli
sub
dec
sti
jne
mov
sbb
fcmovnbe
test
add
mov
inc
mov
rcrb
je
data16
sub
adc
pop
and
andb
insb
test
mov
add
pop
mov
push
je
pop
adc
lds
rcrl
enter
push
and
mov
lret
rdmsr
rorb
repnz
or
lret
mov
push
addl
lret
cltd
xchg
or
dec
bound
add
inc
or
adc
cltd
mov
sub
xchg
sbb
add
daa
lret
and
and
or
mov
pop
rolb
adc
mov
andl
pusha
adcb
inc
dec
inc
mov
fistl
mov
mov
add
daa
lock
push
and
adc
int3
pop
shll
inc
pusha
mov
jmp
in
outsl
inc
add
push
lret
clc
cmp
fisubs
int
cmpsb
or
bound
in
and
js
or
clc
sbb
fistps
or
xchg
mov
repnz
ret
mov
aam
sbb
add
pop
rol
sbb
lock
adc
or
sub
mov
pop
push
xor
inc
loope
xchg
add
fiaddl
fimuls
xor
dec
call
sub
mov
add
lea
pop
call
and
jmp
imul
push
xchg
sbb
add
call
pushf
movb
jns
add
dec
or
xchg
or
mov
inc
rolb
int
sub
push
loopne
in
mov
cmp
jle
inc
and
das
rclb
pop
cs
hlt
int
sbb
mov
inc
insb
xor
outsl
mov
fcoml
xchg
xchg
in
xor
cmpb
je
fidivl
push
incl
adc
or
sbb
push
jo
push
pop
jo
sbb
ljmp
imul
dec
insl
fwait
orb
and
aaa
jne
mov
sahf
add
data16
sub
mulb
ret
cmp
jne
push
mov
int
daa
mov
jnp
jmp
dec
add
mov
and
xor
rorb
push
rcrl
adc
fprem
mov
roll
leave
add
je
cmpsb
add
iret
adc
mov
xchg
inc
sbb
sarb
or
sub
lock
cmp
adc
jne
shl
push
push
movsw
xor
dec
add
or
or
pop
call
dec
push
jb
and
lret
rorb
orb
rcrl
adc
and
sbb
add
nop
shlb
in
sub
inc
jnp
jg
inc
push
neg
neg
sbb
sub
mov
sbb
fwait
inc
ret
sbb
xchg
adc
fcomps
sbb
push
push
inc
and
fsts
jp
xchg
fcomi
sbb
sbb
movsb
sbb
sbb
and
xchg
jns
xchg
jne
pop
pop
push
xor
mov
int3
test
shll
and
lods
rcl
ljmp
dec
and
shr
sub
adc
pop
imul
idiv
and
inc
or
maskmovq
cld
lock
je
pusha
mov
add
jae
push
mov
daa
sbb
mov
inc
add
sbbl
dec
adc
adc
enter
and
dec
xchg
push
or
aad
lods
cmp
jbe
mov
bound
aas
sbbb
dec
and
test
shlb
or
push
xchg
mov
aas
adc
dec
add
rep
inc
and
ds
push
orb
add
arpl
mov
dec
popa
pop
dec
mov
jo
pop
xchg
add
popa
adc
decl
dec
stos
cs
ljmp
cld
inc
ss
dec
repnz
aaa
dec
fadds
es
cmpsb
jnp
rcll
jns
cmp
xlat
into
and
ret
jne
pop
cmp
inc
jmp
xor
imul
add
in
jbe
push
inc
cld
scas
mov
cwtl
or
and
vpcmpgtw
jg
xchg
subb
or
pop
adcb
pop
mov
outsb
es
push
pop
je
adc
cld
repz
pop
jl
out
push
cmp
ja
add
cmp
adc
cmp
jne
movsl
add
es
shr
xor
mov
xchg
jl,pn
pop
pop
je
mov
adc
iret
and
jb
lret
mov
rclb
mov
inc
test
data16
or
fdivr
aas
scas
and
push
movb
jmp
or
ljmp
daa
dec
ja
ljmp
test
test
subb
and
movl
rorb
into
add
pop
mov
pop
mov
adc
outsl
loop
pop
mov
inc
jle
or
push
mov
fdivr
inc
jb
out
pop
mull
dec
sub
andb
sbb
mov
pop
into
push
in
pop
dec
daa
add
sbb
cmp
mov
sahf
push
imul
pop
pop
shr
shr
ret
pushl
inc
imul
lea
sar
lods
mov
fcomp
aam
fwait
pop
neg
xchg
push
ljmp
mov
cmp
and
call
or
xorl
push
sub
sti
add
dec
cmp
and
cwtl
sub
pop
dec
mov
push
pusha
sub
shlb
jl
into
sbb
outsb
or
dec
jle
repnz
push
pushf
pop
adc
jno
mov
mov
pop
loopne
or
and
lea
inc
xor
nop
push
cmpsl
add
into
repnz
mov
sahf
add
jmp
ja
lods
nopl
loopne
xor
jae
cltd
or
inc
call
loop
ljmp
inc
mov
inc
inc
das
jbe
mov
lea
rolb
add
fiadds
js
jp
les
dec
or
and
or
or
xchg
dec
push
add
sub
in
rcrb
or
ret
movsb
out
mov
sub
lods
adc
in
xchg
mov
mov
mov
pop
aaa
dec
sub
lods
and
rorb
sbb
mov
jo
shll
fstps
out
mov
gs
add
shr
or
and
iret
push
loope
rorb
sbb
push
int
fdivrs
inc
daa
add
cmp
loope
inc
mov
in
push
int3
shrl
loope
shr
or
mov
cli
jmp
xor
nop
xchg
mov
push
sti
lock
arpl
jnp
ja
dec
and
lcall
mov
sub
cli
inc
cli
div
xchg
test
mov
cltd
lods
add
addr16
call
lea
in
dec
sub
adc
ret
add
pop
fisubrl
push
aam
lcall
push
fidivl
fldenv
enter
jg
add
or
cmpsl
mov
dec
rolb
loope
xchg
mov
cmp
dec
mov
stos
xor
jno
mov
jge
pushw
sbb
loop
rcl
xor
out
jge
dec
add
fmuls
sbb
aad
jne
sbb
aam
daa
push
pop
sub
in
mov
xor
inc
shlb
fcomps
aam
int3
jbe
inc
mov
and
jge
add
test
mov
dec
sub
test
rolb
xor
fsubl
or
push
lret
sahf
mov
mov
pusha
mov
insl
test
popa
cmp
cwtl
cli
mov
pop
add
mov
xchg
add
sahf
idiv
adc
adc
adc
jg
mov
adc
lock
sub
stc
add
mov
lock
or
cmp
jne
push
jns
loopne
ljmp
pop
loopne
pop
inc
sub
lret
mov
fstps
fisubs
je
cwtl
sbb
sub
sbb
xor
negb
std
pushl
inc
mov
sub
jle
push
pop
rcl
inc
push
outsb
call
jbe
rolb
mov
sub
pop
push
shl
cmp
mov
pop
cli
outsb
push
hlt
cmp
rcrl
dec
cli
fcoms
xor
fiadds
pop
jl
sub
call
push
jmp
loopne
call
fs
sbb
mov
pusha
lea
push
cmp
mov
mov
mov
xor
or
clc
sti
mov
jns
add
shlb
or
mov
enter
dec
into
test
or
xchg
out
dec
pushf
ljmp
lock
inc
dec
enter
sahf
mov
mov
jae
add
sub
adc
adc
test
call
shl
xor
add
add
into
or
mov
inc
mov
push
and
inc
inc
daa
add
jmp
dec
jg
fistl
ret
jmp
cmp
jge
sub
cmpb
sub
movb
dec
cmp
and
jle
add
dec
add
add
fadds
cmp
pop
add
hlt
ret
ficoms
xchg
in
jp
jne
dec
mov
loopne
adc
jb
int
adc
cmp
in
mov
ret
and
add
lds
inc
mov
jo
ret
adc
add
xchg
cmpsb
rorb
add
add
add
popf
ret
test
mov
mov
xchg
lret
and
push
or
push
push
ret
jp
sub
or
push
rolb
pop
cltd
dec
std
dec
or
jne
or
xor
ficoms
pop
scas
je,pt
push
ret
cmp
ret
mov
lods
or
mov
or
fsubrs
xchg
xchg
xchg
adc
or
jae
pop
sbb
pop
mov
mov
inc
and
cmp
xor
into
push
inc
inc
sub
and
femms
cmp
pop
and
pop
pop
or
in
orb
xor
sbb
or
or
xor
xchg
ljmp
or
inc
lods
jne
dec
movsl
test
add
add
xchg
rcrl
lret
subb
mov
push
je
arpl
or
adc
xlat
push
pop
cmp
ja
insl
add
adc
xchg
neg
jne
and
mov
jo
ds
dec
jge
add
mov
out
and
push
or
inc
cmpsl
outsl
push
scas
popa
fcoms
pop
sub
nop
and
cmp
inc
es
test
sbb
push
mov
orl
inc
mov
sub
shlb
jecxz
xor
jge
and
mov
add
or
jo
repnz
test
adc
lcall
add
push
into
mov
mov
inc
and
sub
and
sbb
inc
in
in
jg
into
into
into
out
fnstsw
movl
push
lock
outsl
lock
nop
pop
sahf
pop
add
arpl
insb
add
shlb
and
or
sbb
dec
test
add
push
fs
test
pop
pop
mov
jno
xor
add
leave
lahf
pop
xchg
out
pushf
xchg
negl
jl
dec
js
loope
adc
into
mov
pop
hlt
fsubrs
popf
ret
dec
xchg
sub
sbb
roll
sbb
mov
jmp
push
or
mov
cmp
xor
pop
mov
sub
and
adc
fldcw
xchg
mov
jge
push
enter
mov
rolb
mov
lret
mov
add
mov
mov
add
sarl
sub
imul
jge
paddq
dec
add
je
rolb
ret
cs
push
sahf
add
pop
sub
repz
sbb
or
mov
push
sbb
je
pop
xchg
js
dec
sub
loope
cmp
popf
adc
je
mov
xor
or
push
hlt
mov
cmp
jb
lret
dec
repnz
jmp
push
rorb
fcoms
pop
fisubrl
cs
cmpb
leave
mov
xor
or
sbbl
sbb
sub
std
jne
push
out
les
and
add
sbb
and
sub
pop
push
daa
push
scas
mov
cwtl
popa
adc
loopne
and
adc
cmp
pushl
pop
pop
add
aad
xor
jo
fistl
mov
pop
and
pop
sbb
fcmovnu
in
inc
lcall
sbb
inc
push
sub
cmp
cmpsl
in
cmp
je
inc
and
add
cmp
adc
push
xor
dec
cmp
into
fdivp
cs
pop
mov
dec
add
test
add
mov
push
mov
cmp
add
daa
bound
add
aas
jne
pop
xchg
pop
jmp
mov
push
push
sahf
mov
xor
les
call
notl
add
or
push
stos
sub
xor
push
jl
mov
adc
adc
xor
movsb
xchg
cli
icebp
pop
dec
or
pop
or
call
push
outsb
ss
ss
dec
jmp
cmp
insb
inc
dec
mov
mov
into
inc
pop
lret
inc
pop
or
mov
cmpl
ret
jnp
jno
and
sbb
lds
dec
in
test
or
clc
cli
fistl
test
xor
je
mov
jg
xor
int3
ret
sti
push
xor
add
pop
pop
sub
push
fisubs
dec
lea
push
mov
mov
enter
cmc
ret
push
add
inc
add
cmp
pop
nop
outsl
popa
add
jae
nop
mov
je
daa
cmpsb
loopne
jmp
dec
test
mov
cmp
in
pop
push
cmp
subl
push
js
dec
pushf
rclb
xor
xorl
dec
sbb
push
cmp
mov
xor
push
pushf
iret
outsb
pop
inc
shl
pushf
inc
shrl
push
arpl
sub
add
sbb
dec
or
ss
push
andb
xor
xchg
xchg
faddl
push
jp
push
jg
scas
xor
inc
mov
fcoms
mov
adc
push
xchg
adc
arpl
xchg
lods
add
xchg
jbe
sbb
or
das
mov
xchg
dec
aas
jo
sbb
mov
or
repnz
pop
movsb
adc
inc
dec
pop
dec
and
andl
push
or
xlat
xchg
pop
mov
and
xchg
mov
mov
cwtl
cmp
test
add
fdiv
xor
test
sub
mov
bound
pop
dec
and
rcll
push
daa
movsl
adc
inc
cmp
cmp
mov
jl
push
mov
inc
cwtl
push
gs
xchg
loope
outsb
inc
cwtl
sub
es
and
adc
mov
ljmp
cs
sub
jmp
adc
xor
hlt
dec
orb
pop
inc
jecxz
add
add
xlat
test
int
and
mov
xor
sbb
pop
pop
push
and
and
fists
pop
sub
adc
lods
pop
rol
lods
movsb
mov
rcll
and
add
ret
cmpsl
add
imul
jns
sahf
xor
call
jecxz
in
cmp
mov
orb
loop
jp
adc
es
hlt
jno
or
lret
gs
sub
lods
jbe
push
pushf
ret
xchg
mov
icebp
push
xchg
push
sub
addb
and
push
add
sbb
inc
sub
insl
cld
mov
loopne
movsb
pop
ret
pop
xchg
adc
xor
in
push
adc
adc
or
cmp
test
daa
outsb
mov
insb
add
les
cmp
xchg
cmp
aas
lods
jno
inc
scas
cld
icebp
jb
push
adc
rolb
sub
or
call
in
or
into
mov
loop
mov
add
xor
jns
adc
cmp
and
loope
push
mov
sbb
xor
push
rolb
inc
jbe
sbb
lock
fwait
mov
imul
movsl
fwait
sbb
push
hlt
addl
insl
clc
pop
add
push
jmp
shlb
addb
rorl
aam
orb
add
les
pop
pop
pop
sub
aam
add
mov
mov
mov
fmuls
dec
or
or
xchg
sub
fdivrl
inc
and
or
push
in
pusha
add
or
sbb
gs
in
inc
js
mov
test
cli
mov
in
and
cs
mov
jo
arpl
imul
xchg
and
mov
les
mov
jmp
jb
add
cmp
rclb
push
mov
add
aas
or
push
add
movsb
cmp
hlt
movsl
jge
adc
mov
sbb
cmp
ja
pop
xor
jge
and
push
or
push
scas
pop
test
add
add
mov
push
mov
cmp
or
repnz
mov
cmp
adc
fcomps
lcall
lret
add
stos
xchg
rcl
cmp
add
shlb
popa
push
dec
xchg
mov
aam
into
lock
fadds
in
jae
xchg
pop
dec
mov
pop
add
sar
push
push
cmp
cwtl
inc
repnz
enter
sbb
inc
mov
imul
inc
lea
rclb
jp
or
aad
rorl
push
mov
sub
push
add
pop
out
ss
bnd
add
or
aam
in
sub
jg
inc
sub
loopne
pop
cmp
mov
pop
jns
mov
push
xor
mov
jle
sbb
mov
das
sbb
mov
cli
dec
cmpl
push
lret
push
nop
or
imul
stos
xor
mov
cmp
ja
das
push
or
xor
lods
cmpsl
xor
push
cmpl
add
or
mov
push
in
pushl
mov
cmp
fucomip
sbb
iret
and
add
cltd
mull
jno
jnp
xor
rcrl
outsl
push
in
ret
adcb
cmp
rcrb
xor
test
push
and
push
cmpsb
or
jne
inc
sbb
enter
into
mov
std
bound
shlb
inc
inc
jae
push
and
call
push
sbb
push
xor
sbb
fidivs
xchg
xchg
sarb
leave
ret
add
ret
add
ret
add
adc
lret
dec
sub
test
push
add
add
js
das
sar
push
push
lock
aas
int3
loop
add
push
shlb
sbb
pushf
sbb
inc
push
sbb
xor
add
mov
push
pop
xor
push
push
add
aas
icebp
or
dec
ret
movsl
add
jg
adc
mov
jmp
pop
jl
testb
repnz
sbb
sub
xchg
or
mov
call
mov
cmpsl
adcb
mov
je
repz
adc
or
mov
rcrb
iret
push
inc
les
mov
scas
lret
insl
cltd
scas
mov
mov
repz
fstp
aaa
loope
fdivs
cmp
mov
cmove
xchg
push
aaa
and
inc
dec
jb
lods
fadd
mov
mov
and
mov
cmpl
or
pop
adc
cmp
jae
inc
cld
push
fldl
push
sbb
dec
sbb
jg
ficompl
rcl
add
dec
jo
xchg
daa
mov
jnp
mov
aam
jle
add
stc
xchg
cmpsb
jmp
ret
inc
xchg
cs
outsb
fmuls
mov
shrb
xor
add
push
add
js
pop
cmp
xchg
les
mov
stc
mov
jp
or
dec
xchg
and
xchg
movsb
imul
aaa
mov
adc
push
or
dec
add
add
es
test
xor
cmp
inc
xor
cli
xchg
or
sbb
jbe
nop
inc
loopne
ja
push
shlb
cmp
stc
repnz
and
xor
add
adc
pushf
fs
sbbb
mulb
mov
pop
je
bextr
sub
cmpl
aam
and
dec
mov
cwtl
jmp
mov
pushf
cmp
or
enter
je
xchg
je
mov
enter
sbb
jmp
outsl
sub
lea
or
iret
add
pop
sbb
cmpsl
movsl
add
inc
push
fiadds
gs
sbb
push
xor
jno
push
out
push
xchg
add
repnz
add
cmp
mov
pop
adc
adc
xor
fidivrs
leave
dec
fisubl
xchg
jne
push
add
inc
shlb
or
sbb
cmp
inc
xor
je
sarb
dec
adcl
cltd
decb
and
jne
push
sub
mov
pushl
lds
in
add
mov
cli
inc
cs
arpl
mov
jo
and
mov
xchg
jns
mov
mov
addr16
cld
loope
inc
sbb
pop
xor
loop
or
xor
sbbl
add
mov
push
icebp
inc
hlt
push
cli
push
jb
inc
fs
scas
xor
push
insl
add
fadds
add
fidivs
imul
add
inc
adcl
ja
cld
mov
cwtl
sub
add
and
xorl
popf
or
push
add
lret
arpl
inc
or
jg
or
xor
inc
push
mov
inc
inc
cwtl
or
jl
fisubl
push
cmp
out
mov
or
icebp
pop
xor
mov
xor
mov
or
dec
pop
add
adc
shr
inc
inc
pop
leave
adc
rorl
stc
push
mov
std
hlt
jne
adc
fisttpl
or
adc
cmp
mov
adc
dec
outsb
pop
pop
cmovae
ljmp
sbb
sahf
dec
add
xor
inc
push
cmp
pop
enter
jge
sub
cmp
adc
or
jo
dec
push
mov
xor
sub
adc
adc
movsl
add
adc
jecxz
add
enter
mov
pusha
test
jo
or
mov
and
lock
or
mov
cmpsl
movsb
or
movsl
jle
out
popf
push
lock
and
popl
mov
add
faddl
inc
cmpsl
or
pushl
ret
ret
add
dec
jg
adc
orl
jg
jmp
adc
pop
sub
push
hlt
xchg
mov
add
jb
andb
and
inc
pop
jo
cmp
ss
cmp
jb
or
cmpsl
jnp
popa
ret
scas
gs
ret
pop
aaa
pop
pushf
and
icebp
pop
xchg
jae
mov
or
adc
add
pusha
jmp
scas
and
sub
inc
adcb
inc
ja
test
adc
fwait
or
jnp
es
lret
or
test
rolb
insb
and
dec
pop
dec
mov
test
rcr
jns
or
pop
mov
or
cmp
je
cmp
clc
call
mov
and
cmp
jb
testb
xchg
inc
add
insb
bound
data16
loopne
les
ret
rorb
jge
push
jmp
inc
addr16
sbb
sbbl
je
cmp
pop
jns
jb
cmp
imul
push
push
or
xchg
pop
scas
in
push
mov
push
imull
das
xor
push
cmc
cmp
jg
jne
push
or
push
mov
and
dec
lods
pop
dec
nop
mov
clc
hlt
shlb
daa
mov
pop
jmp
lods
pop
pop
add
aas
push
inc
pop
pop
inc
es
mov
push
dec
push
mov
mov
cmp
subl
gs
xor
or
pop
add
hlt
mov
and
dec
cmc
add
xor
pop
inc
jns
push
test
pop
sub
stc
add
add
inc
lock
nop
inc
lcall
dec
push
in
add
inc
mov
frstor
mov
pop
leave
add
loopne
push
pop
enter
cmp
out
pop
adc
add
push
push
sbb
mov
daa
aas
inc
shlb
fwait
rcll
les
sub
and
or
popa
aaa
adc
test
jg
rcrl
mov
jecxz
aam
rcr
fbld
bound
fildll
shld
pushf
movb
in
jns
fstps
icebp
aaa
ja
add
xchg
fnstenv
cmp
fadds
cwtl
adc
ret
pushf
pop
sbb
adc
test
pop
mov
mov
xchg
adc
xor
inc
and
inc
and
pusha
push
or
in
shll
movsb
mov
xor
nop
in
sbb
fadds
in
push
jns
sbb
dec
add
in
sbb
mov
adc
mov
ss
pop
jno
in
notb
xor
int
pop
add
in
cld
sub
jo
in
xor
enter
adc
inc
nop
or
push
mov
sub
in
add
xor
enter
xor
les
fimull
in
lock
dec
xor
in
pop
xchg
or
ja
and
sahf
bound
sbb
inc
in
sub
cmpsb
dec
ja
inc
aaa
mov
dec
je
mov
xchg
call
adc
in
xchg
int3
call
mov
push
jmp
jmp
cmp
xor
movsl
arpl
roll
mov
sarl
inc
in
nop
push
or
daa
jecxz
add
fcomps
sbbl
dec
in
jl
add
jb
lods
ljmp
xor
insb
dec
dec
inc
outsl
add
ljmp
mov
cmp
pop
pop
jmp
or
push
inc
inc
cs
lcall
mov
and
in
inc
adc
or
inc
adc
and
cmp
push
adcb
xor
mov
fistl
popa
ret
dec
fadds
jae
rcr
enter
fwait
jl
lret
or
ret
sbb
xlat
mov
test
in
pop
cmc
lret
push
xchg
arpl
cwtl
sbb
popa
test
hlt
inc
inc
xchg
dec
adc
and
lock
adc
ror
add
mov
push
and
mov
imul
or
or
test
int3
pop
enter
enter
rclb
or
mov
call
mov
inc
fisubl
xchg
jno
test
sub
or
cmpsb
or
cmp
adc
adc
leave
adc
in
fsubr
cmpb
mov
cmp
insl
xchg
pusha
cltd
fs
dec
fs
es
js
add
cltd
jl
test
and
sbb
call
cmpsb
sbb
add
xchg
test
fdivrs
adc
push
adc
or
mov
adc
int
mov
adc
mov
nop
dec
fcmovb
adc
shlb
push
sub
mov
rcl
je
popf
in
sti
gs
flds
jl
add
lahf
loope
insl
push
xor
cmp
sti
dec
repnz
jecxz
cmpb
add
sbb
push
lret
call
nop
ror
ja
ret
icebp
mov
mov
js
lods
add
aad
cmp
test
mul
in
push
fsubrl
les
xor
arpl
or
dec
dec
push
mov
fistpl
pop
inc
je
int3
repnz
pop
jnp
imul
stos
mov
xor
add
adc
adc
nop
inc
cwtl
sbb
dec
adc
rorl
adc
repz
mov
in
xor
cmp
push
mov
hlt
insl
in
daa
cwtl
mov
inc
pop
hlt
jo
or
cmc
mov
shrb
xchg
push
sub
inc
addl
lret
lcall
testl
js
jl
dec
xor
cwtl
and
arpl
ret
dec
enter
rclb
cld
nop
xchg
sbb
dec
mov
loopne
nop
popa
pop
aam
nop
mov
call
shrl
adc
orl
and
inc
inc
jp
insl
jmp
pop
je
dec
or
push
rorl
lea
movsl
pop
jl
inc
fsubr
jne
mov
sbb
test
fldcw
and
cltd
imul
clc
add
push
xor
sbbb
inc
dec
call
and
cltd
inc
adc
aas
mov
stc
int3
and
ret
loopne
and
and
jno
dec
xor
ret
jo
sub
cli
pop
orl
loopne
rcrl
sub
xchg
jns
or
nop
inc
shr
cli
jl
jp
xor
cli
std
add
push
fadds
cmpsl
push
adc
pop
nop
call
cmp
mov
jecxz
mov
dec
and
and
aam
rol
addr16
cs
and
pop
sub
jl
icebp
pop
mov
movups
adc
sub
fs
out
mov
dec
jecxz
sub
push
inc
add
jo
or
jb
iret
cmp
or
rcrl
and
or
xor
popf
lcall
mov
enter
pop
adc
add
mov
es
outsl
or
cltd
jbe
inc
add
in
mov
aad
mov
sbb
loopne
xor
test
mov
test
sub
push
fnstsw
mov
movl
fwait
dec
jne
pop
imul
ss
sub
push
xchg
jp
dec
aam
stc
lock
jne
adc
mov
test
mov
xchg
sub
inc
lret
in
in
test
ret
cmpsb
call
and
jl
faddl
xchg
shll
and
sbb
and
fcompl
loopne
insl
add
rclb
push
in
xchg
add
push
shl
or
sbbl
adc
in
and
enter
xchg
movsb
sti
sbb
xchg
mov
mov
nop
inc
subb
loope
sub
push
loope
xchg
fsubrs
insb
insl
push
adc
mov
nop
xchg
sub
fsubr
or
sarb
ret
cmp
lock
pop
sub
push
test
sti
xor
add
cs
inc
push
or
or
in
inc
or
or
xchg
dec
push
or
or
subb
or
and
invd
or
fwait
aam
adc
dec
dec
jg
cwtl
pushf
stos
inc
out
adc
cmpsb
ss
addr16
fistl
imul
mov
cmp
test
mov
movsb
mov
xor
and
mov
xor
dec
movsl
jb
pop
fwait
imul
or
cmp
or
in
pop
fdivl
sbb
mov
add
xor
push
insb
sub
shrb
or
mov
push
ret
pop
iret
sub
cmpsl
pusha
dec
xchg
jmp
xchg
adc
ret
addr16
es
add
jb
pop
jle
cld
sahf
dec
fmul
xchg
flds
xchg
fcomi
dec
push
add
aam
pusha
pop
js
add
sbb
cmp
lods
add
inc
or
or
fs
or
sub
xor
pop
and
repz
enter
cld
gs
fwait
mov
cmp
xchg
ret
das
das
cltd
jbe
adc
mov
inc
lahf
jno
mov
xchg
sbb
out
lods
or
loop
adcl
jnp
fmuls
scas
sbb
or
cltd
clc
or
xchg
call
jb
jnp
iret
ret
adc
adcl
pusha
or
fmuls
pop
das
rcrb
xchg
mov
stc
dec
sbb
adc
psubsb
adc
orb
arpl
adc
sub
imul
push
lds
movsb
ret
mov
push
and
stc
pop
in
jmp
xlat
xor
dec
fsubrl
dec
sbb
xor
push
icebp
dec
push
and
inc
or
loop
xchg
mov
fiaddl
mov
test
out
cmp
fadds
mov
orb
mov
inc
sbb
add
enter
jo
mov
or
es
test
push
aam
sub
xchg
pop
fdivs
pop
ret
ret
lret
outsb
movsb
or
cmp
inc
out
and
fidivrl
inc
in
or
push
imul
iret
sub
jo
orb
adc
dec
jno
mov
mov
in
lahf
lock
in
jl
loopne
in
adc
push
aad
xor
xchg
or
pop
push
sub
or
pusha
punpcklwd
hlt
mov
jl
insb
add
sbb
jo
test
mov
lds
push
arpl
shlb
call
popf
xchg
mov
adc
stc
fstl
fimull
andb
mov
test
adc
pop
jae
dec
mov
test
or
lea
xchg
mov
mov
ret
movsb
adc
inc
pop
mov
faddl
adc
pinsrw
hlt
mov
in
insl
and
push
in
int
int3
pop
rorb
pop
aam
pop
and
enter
sub
mov
cs
xor
add
mov
sbb
adc
sbbl
pop
pop
xchg
sub
les
inc
push
adc
add
xchg
or
subb
sbb
xchg
pusha
xlat
push
xlat
insl
dec
inc
add
mov
jge
pop
xlat
rorb
imul
adc
add
jecxz
fadds
push
mov
aam
fsub
mov
and
sub
cltd
xchg
lret
orl
add
rcrb
imul
lods
mul
mov
lea
mov
ljmp
dec
aad
addb
inc
add
fstpt
mov
sub
pop
pop
cwtl
mov
adc
push
pusha
aas
fcomps
test
jmp
mov
cmp
mov
push
call
sbb
ret
sbb
lods
gs
cmp
repz
inc
ljmp
mov
popl
or
sbb
outsb
xchg
popw
mov
aaa
sub
sti
enter
add
inc
pop
movsl
roll
pushf
pop
loopne
rclb
cmp
inc
sbb
in
leave
and
push
inc
sbb
call
or
sub
xor
int3
jnp
sbb
pop
cmpsl
daa
inc
nop
popa
push
fcoml
ljmp
mov
pushf
test
adc
rcr
pushf
mov
mov
sbb
pop
les
test
and
sbb
xchg
out
aad
fidivrl
adc
arpl
xor
hlt
negl
xchg
mov
mov
add
sbb
sub
iret
add
adc
pop
push
sub
cmp
mov
ss
nop
pop
mov
mov
inc
add
and
mov
sub
js
neg
cli
mov
pop
ffree
notb
jne
and
xchg
cmp
sbb
jg
xchg
xchg
das
adc
mov
sbb
sbb
push
ret
in
jb
aas
mov
sbb
sti
call
es
adc
cmc
out
addl
mov
xchg
dec
cmp
jb
jns
out
or
test
pop
adc
pusha
pop
sti
sub
jo
ret
das
inc
or
nop
pop
adc
sbb
inc
adc
sbb
pop
lods
mov
mov
and
cmp
cltd
mov
dec
stos
pop
movsl
xchg
sbb
inc
jb
mov
out
xchg
and
xchg
imul
pop
imul
loopne
mov
stc
sbb
push
or
movsl
stos
xorb
or
and
inc
shll
sbb
in
rclb
loope
popa
nop
xlat
push
add
sbb
insb
adc
push
not
ret
sbb
jp
dec
dec
and
in
and
xchg
xchg
push
or
dec
xor
cmp
jae
dec
xchg
std
enter
nop
cmp
add
and
dec
jb
addr16
test
or
mull
cmp
inc
andb
jl
ret
push
ret
push
nop
popa
dec
insb
movsb
mov
dec
shlb
popf
lcall
and
inc
xchg
sbb
ss
dec
imul
sub
add
stos
mov
test
fistl
xchg
push
nop
aam
push
rolb
nop
cmp
leave
stc
test
pop
and
jno
push
xor
in
in
adc
xor
or
cmpsl
test
mov
dec
xchg
fst
or
rclb
mov
cmp
sub
aad
enter
and
leave
xchg
xor
and
lret
adc
fisttps
rolb
cmpsb
jne
push
push
sbb
mov
mov
mov
gs
dec
leave
mov
rclb
add
dec
dec
nop
xor
or
xchg
cs
and
mov
or
rclb
enter
xor
aam
or
pusha
gs
cmp
add
lret
enter
les
jo
inc
rcrb
add
mov
in
sbb
or
hlt
adcl
xchg
fmul
sbb
je
sub
fadds
xchg
jne
adc
data16
or
test
les
cmp
rorl
adc
adc
dec
sub
hlt
inc
dec
sub
cwtl
fcmovbe
mov
fs
in
movsb
push
dec
cs
jne
test
ss
aam
hlt
test
jmp
inc
sub
subb
aas
sub
pushf
pop
mov
sub
xchg
fsubrl
xchg
or
and
sbb
and
inc
leave
aam
fs
into
mov
dec
sbb
cs
es
int3
aas
mov
das
mov
adc
mov
adc
or
mov
adc
push
aad
mov
push
sbbl
fildll
test
xorl
js
or
nop
test
movsb
mov
mov
gs
xchg
andb
nop
pop
dec
sbb
add
mov
dec
mov
stc
jmp
js
add
mov
adc
in
loope
mov
dec
or
and
inc
repnz
mov
adc
test
fldl
pop
inc
das
sbb
js
test
adc
xor
and
inc
jl
xchg
xchg
imul
test
je
push
or
orb
mov
rolb
das
jns
mov
or
subb
sbb
add
jo
xor
mov
xor
mov
mov
std
push
repnz
lods
adc
inc
cmpsb
mov
push
dec
mov
dec
pop
outsb
inc
inc
faddl
fldcw
daa
inc
adc
fildl
adc
pop
lods
out
mov
sbb
aas
pop
aam
or
or
mov
rolb
xchg
dec
mov
sbb
movsl
sbb
jecxz
pop
popl
adc
sub
jno
and
mov
aam
enter
mov
xchg
ja
push
xor
lea
add
add
jmp
mov
popa
pushf
rcll
sbb
movsb
xor
addb
mov
sbb
mov
adc
lea
sub
or
bound
fimuls
inc
jb
test
pop
nop
popa
inc
rcl
mov
push
pop
and
inc
push
adc
lret
fadd
adc
and
jecxz
and
dec
xchg
jne
pop
inc
inc
and
xchg
inc
xchg
or
enter
test
jge
pop
mov
jecxz
repnz
sbb
cmp
jbe
movsl
adc
fs
inc
mov
jp
idivl
cwtl
mov
cltd
lea
xchg
sbb
insb
adc
sub
push
insl
adc
xorl
pusha
adc
xchg
push
xchg
dec
cmp
sbb
dec
xor
inc
cmp
xor
inc
sub
mov
pop
inc
sarb
pop
leave
fdivr
or
push
rclb
mov
or
xorb
push
sub
faddl
cmpsl
enter
movsb
xchg
pop
popa
leave
adc
or
mov
mov
mov
xchg
aam
xchg
sub
mov
out
inc
aad
in
adc
cmpl
or
in
testb
ret
xor
std
or
sbb
loop
and
or
fwait
lods
mov
lods
test
call
and
test
movsb
xor
bound
insl
mov
sti
js
shlb
gs
jne
bound
cwtl
add
pop
sub
int3
or
pop
int3
shrl
xchg
rcl
icebp
aam
xor
cmp
and
insl
sbb
mov
jne
jecxz
lods
mov
mov
mov
mov
dec
sub
xchg
in
cmp
fdiv
nop
cmp
addl
mov
sub
mov
sub
ja
dec
adc
outsl
mov
loopne
xchg
mov
xchg
test
jns
sbbb
lock
ret
mov
mov
test
adc
cwtl
subl
push
test
xor
mov
arpl
xchg
dec
daa
mov
gs
mov
add
or
inc
pop
push
mov
cmp
sbb
test
xor
std
add
pop
rcl
add
test
adc
je
mov
rclb
xchg
dec
xor
inc
dec
pop
lock
movsl
shll
jmp
shlb
cld
or
and
xor
and
or
push
rcll
push
test
cltd
cmp
in
in
stos
push
mov
xor
inc
pop
dec
sbb
mov
adc
jb
enter
adc
pusha
inc
push
test
push
ret
inc
add
fcoms
in
hlt
or
test
adc
pop
sarb
mov
xchg
dec
mov
in
stos
enter
and
arpl
inc
sub
push
sub
and
lcall
ja
insb
push
sub
mov
inc
xchg
push
dec
bound
and
stos
addb
scas
lods
jg
daa
xlat
xorb
mov
pop
xor
jo
loopne
mov
lret
sub
and
add
andl
xlat
pop
or
cs
or
leave
mov
aam
loopne
fsubr
fcomps
xchg
or
push
enter
or
add
and
cmp
dec
add
or
sbb
pop
adc
push
add
shrb
mov
mov
add
movsb
xchg
lock
mov
push
mov
push
dec
insl
and
incl
jge
adc
sub
jecxz
mov
enter
mov
dec
aam
pop
mov
jge
lcall
sub
or
and
jl
test
pushf
adc
mov
les
jbe
and
nop
icebp
nop
inc
mov
insb
inc
push
sbb
push
sbb
xorb
mov
fs
cmp
js
daa
mov
dec
pop
nop
bswap
les
daa
daa
daa
mov
outsb
daa
daa
pushf
xchg
mov
pop
and
pop
unpckhps
fsubl
mov
daa
cmp
and
dec
movsb
orb
mov
cltd
pushf
dec
inc
xor
in
xor
mov
pusha
push
xchg
mov
mov
inc
ljmp
push
out
mov
adc
jns
lods
sub
mov
ss
insl
jmp
icebp
jecxz
mov
ret
inc
lods
neg
mov
fs
leave
xchg
push
push
enter
lret
shl
sbb
mov
mov
bound
or
mov
mov
adc
mov
jns
je
ret
clc
dec
cmc
xor
or
jne
xor
pop
cmp
push
in
call
sub
push
ljmp
mov
loop
shll
add
mov
xchg
aaa
xchg
sbb
or
pop
dec
mov
test
test
jb
cwtl
nop
shrd
xchg
dec
mov
lods
insb
cld
cmpb
loope
xchg
fstpl
int3
shlb
shlb
adc
nop
xchg
sbb
push
push
mov
xor
mov
sarb
fwait
sbbb
arpl
jb
das
rclb
push
mov
ret
cs
xor
mov
inc
fwait
je
cmpsl
or
xchg
and
fisubl
or
imull
sbb
and
push
testl
mov
dec
repz
int3
imulb
rol
movsl
insl
xor
pop
rcll
insb
and
sub
jmp
orb
pop
cmp
sub
inc
inc
or
push
icebp
dec
lods
movsb
and
push
push
inc
leave
fisubrl
and
add
and
enter
dec
sbb
inc
jmp
cmp
int3
xor
sbb
mov
test
adc
enter
imul
loopne
jo
push
icebp
dec
enter
add
les
fwait
mov
inc
es
stos
and
mov
addr16
xlat
aam
leave
jno
or
cmp
xor
push
fistpl
sub
add
in
xor
or
stos
push
inc
cwtl
jp
and
sbb
push
and
mov
and
sub
imul
sbb
fwait
or
shrb
xchg
sbb
orb
xor
pushf
imul
fs
enter
and
jo
fwait
rclb
fmul
stc
dec
mov
add
das
mov
xor
mov
jb
and
sbbb
adc
es
xchg
xorb
lds
rclb
and
fcoms
xchg
xor
aas
mov
loope
push
enter
push
sbb
subl
or
leave
in
adc
popa
aas
fcoms
push
jbe
sub
inc
fwait
movsb
adc
add
orb
ljmp
mov
inc
jo
and
xor
lock
repz
sub
nop
imul
mov
cmpsb
movsl
ljmp
cwtl
sbb
nop
add
leave
and
jmp
inc
inc
test
enter
and
and
jo
mov
jo
sbb
push
neg
xor
mov
add
mov
pushf
xor
int3
cmp
sub
add
lcall
or
arpl
imul
repnz
cld
sub
push
and
popf
pop
in
lods
adc
pop
fcoml
movsb
sub
cmp
jg
insl
xchg
xchg
iret
in
sti
leave
and
inc
fists
inc
es
in
and
inc
sub
sub
push
movsb
or
mov
push
clc
mov
into
push
mov
dec
jb
cltd
add
icebp
shr
inc
shll
or
and
cmp
add
stos
les
xor
inc
rolb
sub
inc
popa
or
push
xchg
or
adc
or
lcall
out
xchg
mov
addl
call
mov
sub
mov
push
in
sahf
out
adc
sbb
in
das
jbe
pusha
sarl
dec
popf
inc
adcb
mov
push
and
fsub
out
sbb
or
lock
ficompl
add
jmp
out
sub
sub
pop
push
nop
mov
xchg
sub
loope
add
call
in
pusha
sub
jb
adc
inc
cmp
push
out
dec
inc
fistl
push
movsb
sbb
xor
push
call
xlat
test
movsb
adc
push
lahf
inc
xor
pusha
neg
xor
push
inc
test
jno
pop
rcr
or
call
pop
mov
mov
test
mov
mov
les
mov
ret
jnp
mov
pop
pusha
mov
inc
outsl
lods
testl
movsl
enter
cli
xchg
push
jo
and
test
je
jne
sub
test
and
aam
mov
jbe
adc
sbb
ret
add
shrl
push
xor
dec
push
and
shrl
lcall
adc
es
adcb
js
icebp
mov
repnz
sarb
les
cmp
inc
mov
add
mov
inc
xchg
aas
ret
xor
enter
xor
add
je
pop
out
sbb
aam
dec
xchg
or
xor
aam
sub
rcll
add
mov
insl
mov
call
sbb
add
aaa
sbb
popf
sbb
inc
adc
in
enter
adc
rorb
xchg
and
rep
imul
xchg
push
push
lods
xor
add
cmp
je
cmp
lret
add
mov
ret
inc
add
mov
cmpsl
sbbb
cltd
arpl
sbbb
cmp
xor
or
xor
jge
cmp
sbb
mov
or
iret
and
inc
imul
cmp
sarl
add
shlb
fstl
sub
adc
insl
add
ret
inc
int
mov
xchg
pushf
jl
shrb
jno
orb
jl
push
bound
mov
sbb
pushf
adc
je
ret
mov
inc
xchg
sbb
add
push
ret
leave
pop
pop
add
test
xor
inc
fstl
fnsave
xor
or
xchg
dec
xor
mov
mov
imul
push
or
xor
popa
cmp
cmp
push
cmc
arpl
mov
sbb
lret
or
lret
sub
adc
push
cmp
or
dec
sbb
push
or
xor
das
orb
push
mov
xchg
mov
pusha
cmp
nop
jbe
sbb
adc
and
mov
xchg
fildll
lods
add
push
mov
mov
in
push
mov
enter
imul
incb
test
ljmp
ljmp
cmp
les
mull
xor
sbbl
push
sbb
push
idivl
add
fcomp
adc
add
sti
enter
in
test
subl
lret
xchg
pop
and
push
add
push
ret
lods
mov
and
sbb
mov
outsb
mov
and
js
push
inc
sub
sub
xchg
pop
push
and
jnp
push
xchg
add
mov
mov
add
les
and
dec
or
pop
mov
sahf
and
xor
xor
push
xor
enter
sbb
mov
adcl
push
or
jle
ret
imul
xor
pop
and
mov
imul
mov
test
fbld
add
adc
mov
out
inc
push
imul
stc
psubsb
sahf
out
sahf
inc
popa
jl
mov
insb
jg
jns
add
inc
add
movsb
push
cld
sarl
fxch
loop
enter
int3
cmp
fldenv
mov
jecxz
pop
and
and
rolb
mov
or
adc
out
leave
ljmp
mov
add
orb
jnp
mov
push
xor
adc
out
mov
mov
gs
xchg
adc
push
or
cmp
rclb
cmpl
jp
lret
pop
mov
add
into
pop
adc
test
das
ss
repz
mov
push
cmp
xchg
stc
imul
movsb
and
mov
mov
cmpsb
cmp
inc
jb
popa
testb
jmp
popa
arpl
jne
jb
outsb
je
gs
lock
mov
sbb
add
pop
sub
add
push
inc
iret
push
jg
popa
insb
insb
outsl
arpl
imul
add
adc
mov
fsubrl
mov
push
inc
outsl
std
in
fdivrp
jb
js
je
jb
gs
add
or
outsl
add
idivl
and
add
mov
neg
cmp
jne
xchg
je
inc
and
jb
cmp
ja
dec
push
add
add
add
out
inc
add
or
insl
xor
xor
inc
push
add
loope
testb
add
aam
push
and
push
insl
femms
fidivrs
xchg
je
je
and
jae
dec
mov
dec
adc
insl
clc
fidivrs
clc
push
push
or
negl
cmp
lret
sbb
cmp
or
jbe
aas
js
cmpsl
mov
jp
outsl
or
fbstp
mov
gs
ja
fcmove
bound
and
outsl
jmp
xchg
je
aaa
jo
mov
xlat
mov
insl
sub
push
imul
scas
cmp
jne
jno
out
sub
data16
pop
mov
outsb
dec
sub
xchg
ds
jp
sub
insb
inc
shl
loope
sub
arpl
cmp
sbb
mov
cmp
push
or
pop
xlat
jae
daa
dec
jbe
jecxz,pn
jb
fbstp
outsb
bound
pop
out
aaa
adc
sbb
jo
arpl
xor
mov
push
call
insl
mov
fs
gs
fidivs
das
jb
cmp
pop
xchg
fidivrl
cs
es
roll
or
outsl
add
push
ret
pminub
jg
xchg
or
fisttpl
lahf
aaa
rol
add
iret
test
inc
fbstp
mov
fbstp
jne
jbe
jb
stos
imul
or
xor
pop
fidivrl
push
das
rcrl
push
pop
mov
insl
push
push
mov
cmp
push
jo
ss
dec
fistps
imul
arpl
and
xchg
push
mov
push
pusha
xlat
or
sbb
insl
lret
jbe
fbld
fs
imul
rcll
clc
xor
jnp
xor
inc
xchg
or
clc
cmp
push
lods
ret
mov
pop
add
sbb
push
sbb
stos
pop
fs
pop
insl
lret
je
scas
cmp
push
out
sub
fisubs
sbb
subb
pop
pop
jecxz
push
mov
ret
sub
shlb
add
dec
addr16
je
pop
pop
add
adc
push
cmp
loopne
inc
inc
xor
repz
adc
std
adc
out
cmpsl
push
adc
push
sbb
cld
sbb
iret
repz
sbb
sbb
imul
sahf
dec
int
push
lcall
idivl
sahf
out
push
jns
jp
push
fisubs
lcall
js
mov
jp
aaa
add
sbbl
sub
push
push
push
mov
out
fcmovne
add
jl
loope
pop
mov
out
jge
pop
imul
pop
sti
mov
mov
shll
cmpsl
push
fdivrl
dec
add
sbb
pop
mov
add
repnz
jns
add
das
ret
in
das
and
cmp
ljmp
dec
inc
and
ret
cmp
dec
inc
jmp
jnp
pop
ret
dec
idivl
xor
repnz
dec
inc
mov
sbb
pusha
daa
mov
ret
mov
daa
outsl
dec
and
inc
jo
pop
inc
das
ss
add
pop
imul
mov
fcmovne
jns
out
out
adc
iret
and
arpl
push
outsb
inc
pop
pop
jp
dec
xlat
mov
and
scas
push
imulb
dec
jne
dec
mov
shll
ds
neg
mov
insl
arpl
mov
jg
jg
xor
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
sbb
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
fimuls
mov
push
popa
insb
jne
inc
inc
mov
outsb
pop
push
pop
call
daa
sub
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
xor
dec
dec
dec
dec
mov
push
mov
xchg
add
pop
pop
pop
inc
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
adcb
jnp
jge
jg
sub
xor
sub
ja
fdivl
imul
add
adc
add
add
add
add
xor
cmp
outsb
add
xor
dec
and
outsl
add
lahf
push
add
pusha
push
add
leave
fstpl
inc
add
or
xor
sbb
movq
pop
loopne
mov
add
orb
mov
ljmp
lret
jno
icebp
pusha
inc
mov
outsl
lcall
clc
ret
movsl
add
xorl
jo
imul
imulb
jge
mov
jb
pop
dec
dec
add
sahf
add
xor
aas
aas
popa
iret
mov
out
js
addl
out
fdivs
or
dec
push
addb
ret
fistl
add
xchg
add
pop
je
adcb
cmpl
cmpsb
data16
push
inc
pop
imul
pushf
pop
sub
jb
insb
push
pusha
pop
pop
cmpsb
jo
add
inc
mov
lret
xlat
push
outsb
imul
and
cmpsl
mov
jp
fldl
cli
and
pop
roll
inc
sbb
push
loopne
add
xchg
xchg
out
add
lea
mov
cs
xchg
xchg
fisubs
mov
sahf
or
mov
fildl
popf
dec
cmpsl
xchg
mov
cli
mov
hlt
add
lods
push
stos
aad
mov
jmp
jp
add
sbb
push
rcl
lret
pop
sbb
out
or
notl
cmp
rdtsc
ss
js
dec
dec
inc
dec
mov
mov
inc
adc
notl
filds
inc
mov
push
jae
js
add
bound
je
outsb
inc
insl
xor
icebp
out
push
jbe
dec
je
xor
in
insl
sub
push
xchg
daa
pop
lea
mov
outsl
js
push
xchg
insb
sti
inc
repnz
and
insl
jo
jo
and
outsl
pop
pop
ljmp
insb
les
dec
imul
mov
mov
cmp
dec
inc
jb
jns
jae
mov
daa
pop
and
jnp
jns
mov
insb
and
fcomps
in
and
addr16
push
jle
jbe
jle
pop
je
in
jo
or
jb
and
mov
fwait
or
jbe
push
mov
mov
push
lahf
fs
insl
add
and
and
lods
jp
pusha
inc
pop
jbe
xchg
pushw
popl
lock
xor
imul
add
lds
push
inc
inc
pop
daa
mov
dec
adc
shll
lock
push
outsb
mov
mov
pop
push
push
jae
or
adc
scas
lods
cmp
call
sub
cmpl
das
outsb
gs
mov
lea
cmp
mov
push
push
push
dec
testl
mov
dec
xor
aam
enter
stos
popa
mov
fisttps
mov
ds
or
sub
sbb
push
imul
lds
or
dec
xchg
inc
rorl
push
sbb
xor
jl
popaw
sbb
pop
mov
inc
jg
sub
jno
pusha
push
or
push
outsl
xchg
lods
jo
aaa
daa
xchg
mov
popw
insl
lahf
cmpsl
cmp
es
or
ds
and
sub
inc
jl
out
mov
push
jle
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
iret
push
mov
xor
stc
cmp
repz
or
hlt
or
call
fadds
test
push
aam
sahf
out
rolb
int3
enter
cmpsl
mov
lods
movsb
mov
pushf
outsb
cwtl
xchg
nop
push
fdivp
cmp
inc
xchg
mov
push
cmpb
jns
js
jo
out
sahf
out
fs
pop
pop
jns
out
push
push
jg
dec
inc
cmp
jns
out
and
add
or
repz
loopne
mov
out
cmp
add
or
js
fs
dec
repz
out
and
call
dec
enter
and
clc
cmp
ds
push
xchg
push
mull
cmp
sbb
or
or
add
outsb
sar
nop
or
cmp
stos
dec
bound
test
bound
inc
addl
add
add
insb
add
ja
cltd
xchg
push
aad
push
add
jo
add
add
add
mov
ja
inc
dec
mov
fucomi
add
jnp
aaa
andb
push
pop
andb
jle
xchg
test
addl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
aam
jmp
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
test
and
push
adc
inc
aad
jmp
inc
pushf
or
cmpsl
and
pop
outsb
adcb
js
popa
data16
pop
rorb
pop
jns
push
xor
movsl
ficoml
into
ljmp
pop
add
push
arpl
cmp
mov
push
insb
fs
sbb
pop
addr16
movsl
xor
test
shrd
pop
lock
sub
add
inc
adc
push
out
imul
and
xor
push
dec
inc
dec
cmovns
add
mov
push
adc
sub
adc
sub
inc
call
mov
adc
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
in
xchg
jb
jge
arpl
cmp
jg
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
incl
inc
mov
xchg
push
pop
mov
ds
dec
add
scas
lods
dec
in
scas
test
lock
xor
pop
mov
pop
adc
dec
pop
repnz
and
inc
sub
lret
es
mov
jle
add
add
icebp
ficompl
xchg
pop
cwtl
test
lahf
pop
inc
ja
subl
sbb
adc
ljmp
push
mov
jg
push
into
mov
jbe
add
out
jbe
test
das
jns
dec
xchg
outsb
loopne
and
aas
dec
pop
in
xchg
jnp
out
lret
cmp
loope
jp
mov
and
notb
xor
scas
add
je
arpl
test
ret
arpl
or
mov
repz
jne
fs
pop
outsl
mov
sti
or
push
mov
popa
daa
outsb
cmpsl
xor
mov
sbb
shlb
jecxz
je
sbb
jg
add
sarl
xchg
lret
xchg
sbbl
imulb
fldl
push
jo
xor
add
or
outsl
and
or
xlat
loope
jl
jae
jae
insl
jle
fcmovb
mov
cmpsl
mov
add
jle
or
mov
fimull
fbstp
out
adc
aaa
push
mov
jb
push
ret
xchg
adc
das
cmpsl
cmp
xor
add
add
inc
subl
mov
out
shrl
mov
fistpll
outsb
xlat
jge
and
jmp
movsb
cmpsb
adc
js
mov
adc
stos
xchg
js
cmp
xchg
jne
aas
adc
pop
mov
out
add
pop
jle
or
scas
outsl
pusha
jns
outsl
sbb
notl
outsl
aad
pop
lcall
mov
das
addr16
iret
jb
push
add
mov
sbb
mov
gs
imul
push
fs
jg
lock
xor
ja
xor
xor
push
imul
movsl
sub
inc
movb
adc
jns
inc
sub
testb
sbb
mov
imul
add
hlt
push
ja
call
fwait
pop
cmp
push
shll
push
incl
loope
push
das
aaa
sbb
adc
add
iret
gs
cs
ret
scas
popa
or
ret
bound
cs
add
push
and
loop
imul
inc
mov
xlat
je
sub
push
mov
divl
adc
xchg
nop
imul
inc
sub
mov
mov
dec
outsl
jo
pop
sub
mov
dec
shlb
mov
pop
ja
jo
out
pop
jecxz
pop
adc
js
insb
aas
pop
dec
inc
insb
push
ds
ja
or
add
inc
addr16
xchg
out
jne
out
es
daa
je
mov
scas
push
mov
or
pop
arpl
das
push
idivl
pusha
lods
pop
push
dec
mov
xchg
sbb
repnz
mov
pop
jmp
js
loopne
loope
icebp
xchg
pop
mov
imul
push
adc
push
add
les
pop
lock
push
sub
mov
and
push
pusha
test
ds
mov
add
outsb
inc
aas
mov
dec
push
jg
push
push
xchg
adc
loop
je
jb
push
mov
pop
popf
into
push
mov
push
arpl
mov
imul
push
adc
push
or
mov
fs
sbb
pop
sysret
jo
cld
or
je
jae
lahf
ret
pop
outsb
out
xchg
repz
ja
negl
adc
aaa
outsl
ja
push
pop
outsb
add
xchg
sbb
pop
sub
je
adc
sub
mov
push
mov
cmp
cmp
cmp
mov
aad
add
add
negl
pandn
push
repz
sub
pop
notb
mov
adc
xchg
out
fs
and
movl
jb
push
test
subl
dec
sbb
xor
add
out
pop
push
lret
loop
dec
pminub
lret
ds
pop
jb
and
pop
and
add
cltd
test
mov
ret
addr16
ja
pop
popa
lds
mov
mov
daa
dec
pop
pop
adc
cs
imull
ja
lods
loope
push
ret
fwait
out
inc
push
inc
mov
loope
pop
mov
jo
arpl
dec
insb
pop
push
jnp
scas
push
mov
push
add
ljmp
sbb
jnp
ss
or
mov
mov
dec
sbb
inc
sbb
jge
clc
pop
je
pop
push
rdtsc
xchg
icebp
jmp
pop
jecxz
mov
inc
push
aad
pop
mov
mov
mov
ja
ljmp
lahf
inc
imul
jg
and
faddl
dec
incl
out
inc
dec
push
iret
mov
mov
push
les
mov
fldl
pop
jl
imul
push
ja
aaa
and
lods
mov
fisubs
bound
fsubp
out
push
das
pop
into
mov
fs
cmp
jns
jae
bound
es
iret
push
out
sub
pop
sub
jecxz
out
or
sbb
out
jns
insl
xor
mov
add
divl
cmp
pop
arpl
jp
fldl
jl
subl
outsl
push
mov
lret
jl
or
arpl
jns
mov
mov
decb
sarl
jl
and
sbb
adc
or
mov
insb
cmp
cmp
sub
jl
arpl
mov
fs
outsl
pop
and
adc
mov
cmp
pop
add
mov
push
ficoms
xchg
pop
cmp
fistpll
sbb
stos
or
icebp
test
out
les
fidivrs
mov
jo
das
jae
rcrb
push
sbb
inc
pop
das
mov
mov
fwait
pop
sbb
xchg
fbld
xlat
sub
icebp
jmp
jb
bound
data16
xchg
push
fdivs
push
insb
cwtl
inc
add
add
shll
popa
inc
xchg
pop
aaa
outsb
clc
test
das
push
mov
imul
pop
mov
jg
mov
orb
lea
sub
jp
iret
sbb
adc
pop
sbb
iret
repz
iret
push
push
andl
adc
mov
cltd
or
or
imul
or
adc
mov
add
fisubrs
inc
xor
adc
sbb
and
sub
data16
inc
iret
xor
inc
mov
mov
fnstsw
mov
mov
popa
xchg
add
shrb
ret
sub
shrb
lahf
data16
xchg
pop
adc
pop
add
sub
sbb
fwait
int
dec
str
add
fldcw
stc
das
incl
rol
sti
xchg
push
add
xor
jno
lea
in
dec
sub
aaa
cmovnp
icebp
sub
inc
cli
dec
or
pop
push
fs
mov
dec
outsl
mov
push
inc
dec
inc
lcall
pop
inc
push
test
dec
jae
xor
push
mov
cs
scas
push
mov
cmp
pop
out
scas
pop
scas
adc
mov
xor
shrb
cmpsl
push
dec
sbb
jnp
sti
out
pusha
jae
imul
adc
movsl
xchg
mov
ds
mov
xchg
cmp
mov
lahf
imulb
jae
cmp
ds
push
mov
mov
es
push
scas
pop
lret
inc
loope
add
js
push
fs
push
fmuls
pop
sub
cs
jnp
jbe
mov
push
stos
push
lods
pop
es
lahf
idivb
push
cmp
scas
dec
sti
fidivrs
es
ds
jno
push
mov
push
dec
mov
cs
sbb
imul
lfs
inc
lds
ds
aaa
pop
sarb
out
int
push
cli
push
mov
jns
sbb
sbb
test
repz
inc
push
arpl
test
idivl
push
xchg
mov
out
test
xchg
or
sbb
out
jnp
aaa
dec
and
imul
daa
jae
mov
and
aaa
pop
mov
mov
push
arpl
scas
rorb
loopne
or
add
sti
cmp
sbb
pop
jae
aas
iret
popa
pop
popa
add
imul
fs
movb
and
cmp
jae
xchg
testl
and
inc
or
bound
imul
sub
push
pop
push
jle
mov
xor
outsb
outsl
jo
lea
stos
xor
out
push
scas
fucom
or
cmp
cmp
repz
xchg
fcomp
in
cmp
mov
jbe
push
xchg
fnstcw
iret
repz
xor
mov
in
iret
shrl
aaa
sbb
sahf
cmp
gs
je
cmp
inc
mov
jo
shrb
outsl
jb
scas
jb
mov
mulb
and
inc
sbb
and
mov
cmp
jae
imul
and
fistpl
adc
ret
or
and
mov
je
ss
cmp
shlb
imul
in
sub
ja
imul
cmp
sbb
xor
ret
lea
jge
imul
sub
call
in
sub
popw
push
jecxz
daa
sub
data16
sbb
mov
push
add
push
sbb
mov
pop
filds
pop
pop
shrb
push
or
mov
add
adc
inc
mov
imul
fcmovnb
out
mov
lock
sarl
daa
imul
xor
inc
pop
jno
in
push
test
mov
leave
sub
jl
push
push
and
dec
fadds
mov
xchg
das
mov
jae
fbstp
jg
fbld
add
inc
fs
mov
mov
xor
mov
out
je
push
sbb
inc
aaa
xor
xchg
aam
aas
xchg
sbb
or
stos
pop
dec
and
orb
sbb
rclb
outsl
or
mov
mov
stos
push
or
and
adcb
adc
or
cmc
push
inc
decl
adc
adc
pop
dec
cmp
xchg
aaa
inc
sub
pushw
mov
jecxz
jae
cmc
add
pop
adc
popf
xor
pop
aad
imul
repz
push
push
stos
pop
push
ret
or
ret
dec
and
jecxz
xor
xchg
add
insb
sub
pop
sub
aam
mov
sub
iret
sbb
cmp
shrb
jecxz
fidivrl
mov
stos
dec
aaa
ret
das
aaa
pop
bound
push
subl
arpl
pop
mov
mov
or
jb
fs
add
test
std
fildl
ss
lods
push
icebp
ficoms
add
fsubs
inc
aaa
addb
add
fcomp
outsl
testl
addr16
test
movsl
repz
scas
push
xchg
xor
dec
sub
sub
aas
xchg
mov
sti
jle
and
movsl
es
andl
inc
aas
inc
push
inc
cmp
inc
imul
data16
add
je
sub
push
loope
mov
sub
push
pusha
cmp
lcall
xor
mov
outsl
jo
shlb
sbb
mov
pop
cmpsl
dec
cmpsb
cmpsl
insl
xchg
xchg
shrl
dec
popa
aaa
pop
cmpb
adc
sbb
dec
imul
push
mov
jmp
mov
sub
cmp
push
mov
jb
push
cmp
iret
or
mov
loope
push
into
out
and
add
push
out
cmpsl
push
cs
and
push
mov
push
stos
xchg
add
add
add
sahf
mov
jnp
mov
je
inc
inc
push
addb
arpl
fs
sbb
stos
pop
jg
or
ret
inc
aaa
repz
jno
mov
int
xor
insl
pop
inc
or
insb
aas
lods
subl
scas
sub
popa
mov
jo
aaa
inc
sub
es
lahf
xchg
mov
js
inc
mov
or
cmp
pop
je
cmpsl
dec
sub
xchg
add
mov
xlat
and
dec
jns
movsl
push
mov
mov
xor
ret
push
ret
inc
lcall
pusha
popa
fistpl
inc
stos
divl
lcall
pop
xor
push
lahf
jmp
stos
xor
cmp
sbb
fs
ficoms
mov
push
adc
dec
addr16
lahf
ret
roll
movsb
add
push
js
jbe
jne
push
and
mov
add
mov
cmp
adc
jns
loop
push
pop
xchg
divl
or
bnd
jb
push
outsl
push
xlat
pop
push
ficoms
ret
inc
fstpt
popl
clc
mov
add
cmc
ret
scas
addr16
mov
je
cmpsl
or
fcomps
xor
push
sbb
pop
es
mov
sahf
orb
adc
push
push
aaa
arpl
push
mov
mov
mov
lahf
bound
xchg
sub
inc
jae
mov
cwtl
cmpsb
bound
xchg
push
aas
ljmp
and
push
add
loope
inc
pop
iret
sub
adc
ja
jne
arpl
imul
or
out
xchg
push
push
mov
mov
fwait
and
pop
add
mov
add
xor
add
dec
scas
nop
add
xor
subl
pop
jbe
jnp
addb
shl
ret
repnz
push
jg
lea
scas
sub
jae
mov
out
xor
outsl
out
les
push
sub
das
cmp
mov
popa
xchg
add
xchg
push
xor
fwait
or
push
pop
inc
outsb
movsl
pop
sti
adc
adcb
push
out
dec
add
push
xor
mov
inc
pop
and
push
lcall
popa
insl
pop
adc
fidivrs
aaa
sub
jmp
mov
pop
inc
cmp
aas
ja
push
jnp
in
mov
xor
imul
sub
dec
cmp
or
ret
inc
mov
sbb
jnp
cs
shld
pop
push
xchg
inc
lods
and
mov
mov
pop
minps
add
push
jmp
mov
add
add
ret
out
mov
test
push
xchg
gs
cmpsl
xchg
jb
pop
xchg
xchg
add
jbe
pop
adc
gs
aas
pop
outsl
iret
sbb
sarl
addr16
dec
insb
mov
jge
jno
jae
out
arpl
mov
jmp
pop
pop
mov
ljmp
pusha
push
call
cmp
dec
in
shrb
push
mov
dec
sbb
mov
rcrl
pop
push
test
dec
jae
jl
pop
sarl
pop
scas
mov
lcall
dec
gs
data16
iret
rcrl
sti
jl
dec
repz
clc
in
imul
dec
fldl
outsl
inc
imul
push
adc
fbstp
rorb
xor
bound
out
ja
mov
scas
xor
mov
mov
sti
cmp
arpl
adc
push
lahf
or
jg
xor
cmp
pop
les
push
jae
sbb
cmp
insb
lods
dec
mov
and
imul
dec
mov
cmpl
sbb
mov
pop
and
pop
inc
jg
sub
daa
cmp
shl
imul
insb
shll
xor
sub
adc
push
das
mov
or
dec
aas
add
mov
out
pop
push
pop
inc
in
inc
xchg
insl
mov
and
scas
sbb
shlb
repz
aam
or
xlat
cmp
jecxz
sub
mov
stos
adc
add
clc
fwait
push
stos
ret
adc
imul
shlb
filds
dec
rorb
jnp
jge
data16
xor
sbb
add
fs
jmp
ficoms
adc
outsb
sbb
lods
and
jge
and
add
jb
les
push
mov
adc
sahf
dec
add
mov
mul
push
out
push
mov
loopne
dec
bound
jle
push
negl
mov
inc
out
adc
jg
mov
cmp
pop
stos
divb
mov
push
inc
xchg
jae
inc
dec
and
mov
xchg
and
mov
subb
mov
in
xchg
repnz
and
dec
sub
test
xchg
stos
in
add
mov
xchg
dec
and
in
mov
dec
scas
sbb
mov
leave
push
xor
mov
js
leave
push
repnz
mov
dec
pop
and
stos
in
cltd
test
and
xchg
inc
sub
hlt
mov
and
clc
scas
push
jb
dec
movsb
push
scas
xchg
test
push
repnz
and
or
cltd
dec
pop
mov
stos
in
int3
stos
jl
fstps
rol
add
mov
sbb
dec
sbb
cmp
jg
mov
inc
sub
loop
aas
pusha
or
es
stos
dec
popf
rol
shl
inc
inc
adcl
add
lods
add
jbe
xor
cmp
push
inc
mov
imul
inc
lods
and
xor
cmp
and
push
cmpsl
mov
bound
cmp
adcl
add
xchg
bound
mov
xor
pusha
aam
outsb
inc
dec
movsl
xchg
repz
insl
sub
ss
inc
mov
push
testl
xorl
mov
push
test
push
sbb
inc
add
mov
xlat
inc
in
push
jo
xchg
mulb
das
push
adc
mov
setae
push
scas
addr16
stos
data16
imul
mov
inc
inc
scas
inc
scas
and
movsl
lods
push
scas
ret
test
insl
add
and
inc
sub
jmp
push
cmp
mov
sbb
pop
or
sbb
mov
mov
arpl
das
popa
les
or
aaa
mov
js
filds
aaa
bound
scas
outsl
scas
or
inc
mov
add
test
les
push
outsl
push
popaw
add
lahf
mov
les
daa
add
sub
ja
jo
or
jbe
mov
jg
aaa
add
in
xor
mov
or
cmc
out
jp
inc
das
push
sbb
or
xchg
mov
fmuls
loop
outsl
jbe
inc
test
cmpl
xchg
add
cmp
dec
fsubrs
sahf
pop
mov
pop
inc
pavgb
mov
daa
and
fildl
mov
or
or
sub
sahf
test
fcomi
dec
push
daa
lock
fldt
adc
dec
sbb
popl
add
aam
jecxz
jno
imul
emms
xor
pop
jne
addr16
bound
fcompl
imul
mov
insl
je
arpl
sbb
lcall
nop
and
out
shlb
push
lret
mov
or
es
or
mov
divl
in
ss
fwait
cs
mov
popa
jae
js
outsl
loop
mov
dec
js
xor
jbe
dec
imul
test
or
repz
and
add
pop
pop
xlat
stos
add
testb
adc
xchg
mov
outsl
mov
sahf
cmpsl
jge
jg
add
out
mov
push
mov
outsb
fsubrl
lahf
out
sbb
fwait
mov
inc
test
scas
push
scas
outsb
dec
mov
xor
or
outsb
jg
jnp
rolb
ret
imul
add
inc
xlat
imul
loope
inc
inc
jne
cmp
inc
test
mov
fisttps
push
mov
xchg
sub
mov
mov
stos
nop
out
shlb
mov
dec
sub
pop
cmp
xor
xor
insl
pop
jnp,pn
adc
filds
cmovno
das
or
dec
cmpsb
int
cmp
adc
xor
outsl
test
sbb
mov
jns
ja
jge
pop
push
fisubs
daa
pop
stos
loopne
mov
int
stos
xorl
push
daa
jae
and
movsl
inc
lds
lahf
subb
xor
lods
pop
rolb
lods
je
outsb
out
pop
or
outsb
loopne
sti
push
lds
scas
fstps
adc
addl
mov
xchg
stc
sbbl
ret
dec
push
je
push
outsb
push
sub
xchg
push
ss
cs
cmp
push
sbb
push
xor
mov
js
imul
lcall
out
xchg
jnp
in
add
and
inc
xchg
cmp
jns
xor
mov
push
dec
lret
into
xor
pop
jmp
pop
mov
js
aaa
stos
pushw
or
out
jnp
push
or
xor
es
inc
roll
imul
inc
neg
je
das
jbe
dec
or
fnstsw
mov
cmpsb
ss
push
ja
shrb
bound
xor
cmc
and
push
mov
pop
cs
lret
jp
cmp
push
ljmp
jp
ret
shll
sbbl
das
jmp
fidivs
sahf
loop
testl
sub
arpl
fs
sarl
inc
mov
cmp
cmp
es
dec
daa
imul
or
mov
add
out
js
inc
adc
imul
jnp
inc
pop
pop
mov
push
es
ss
test
push
push
xor
dec
jb
mov
inc
pop
dec
es
das
cmp
lods
add
and
or
scas
mov
mov
cs
cmp
adc
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
sub
imul
add
ds
jp
iret
push
orl
loop
xlat
sahf
dec
das
xor
das
push
out
xchg
dec
xor
js
xor
xor
and
imul
fs
cmp
add
lahf
jmp
mov
arpl
aaa
mov
sbb
in
addb
push
pushw
jae
jo
sbb
jg
lahf
sbb
jle
adc
pushf
movb
push
mov
inc
inc
fistl
scas
lds
pop
add
xchg
push
mov
xchg
inc
iret
inc
les
xchg
xor
or
mov
arpl
lret
aas
arpl
aad
daa
mov
or
add
mov
and
ret
xchg
mov
and
push
pop
add
lea
mov
ja
or
fsubrs
mov
mov
xor
and
add
mov
add
sub
jb
inc
mov
inc
xchg
pushf
roll
adc
mov
mov
dec
outsb
mov
adc
cmpsl
mov
sbb
push
addr16
mov
pop
mov
fadd
gs
stos
sub
mov
mov
insb
outsl
popa
fs
outsl
test
fnstcw
adc
push
orb
dec
inc
insb
jl
ljmp
lods
or
in
jecxz
addr16
push
xor
iret
push
adc
add
or
es
test
mov
xor
das
pop
sub
inc
add
xchg
pcmpeqb
pop
lods
orb
xchg
stos
lds
shrb
aas
add
and
xlat
add
rcrb
mov
and
pop
add
pop
jo
scas
push
sub
aas
pushl
ss
inc
sub
fistpll
push
adc
or
sbb
or
les
mov
inc
mov
fcoms
call
cmp
jmp
mov
popa
push
das
xchg
xchg
sub
fwait
iret
movsb
dec
inc
mov
add
popa
fldt
sbb
lock
repz
sbb
data16
lahf
inc
cmpsl
inc
add
and
push
adc
call
jns
add
rclb
add
fists
pop
je
out
mov
sahf
adc
inc
scas
mov
and
stc
push
pop
adc
ret
andb
cmp
les
add
clc
jg
and
mov
mov
aaa
sbb
pushl
mov
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
insb
out
pushl
ss
adc
cli
mov
sub
sub
inc
cmp
mov
sbb
mov
ds
imulb
in
pop
sbb
xor
mov
dec
jg
cmp
cs
pop
sbb
mov
ja
cli
dec
pop
dec
xchg
jecxz
dec
push
pop
mov
pop
adc
mov
aam
jne
pop
out
cmp
pop
test
imul
mov
or
cld
js
inc
or
ret
movsl
push
inc
inc
and
sbb
push
jo
dec
scas
mov
sbb
dec
jns
pop
jb
fcoml
int3
sub
sub
pushf
dec
sahf
dec
cs
mov
jl
in
jns
insb
cmp
sahf
xchg
inc
dec
dec
cmp
sahf
sbb
inc
loopne
add
jb
push
xor
nop
ret
push
dec
push
inc
fisubl
cmp
push
cmp
mov
jmp
add
lock
scas
pop
imul
dec
dec
cmp
cmp
ss
cmp
sub
mov
ljmp
sarl
inc
addr16
and
cmpsb
jp
mov
int3
punpckldq
cmc
sub
imul
out
orl
incl
bound
je
bound
imul
cli
add
add
shlb
addb
iret
orps
cmp
mov
push
pusha
daa
lret
das
pop
aam
and
push
imul
scas
imull
sbb
add
imul
xlat
mov
out
xor
adc
pop
xor
inc
dec
daa
mov
pop
sbb
rolw
loopne
or
pop
outsl
inc
addr16
call
add
push
xor
add
push
dec
add
test
push
xlat
out
dec
jge
jecxz
jb
arpl
ficompl
pop
dec
gs
push
jnp
repz
sbb
call
aad
push
push
push
jp
lods
mov
stos
cmpsb
je
add
push
jecxz
les
dec
out
mov
outsl
cs
lods
les
dec
add
addr16
jbe
sbb
adc
xchg
pop
push
popa
in
pop
nop
mov
add
mov
adc
fcomi
push
pop
rolb
aaa
pop
push
cs
xchg
in
in
roll
and
xchg
xchg
das
push
pop
xchg
in
sarl
sub
in
sahf
aaa
mov
cmp
mov
pop
sarb
mov
jg
popl
ss
cmc
mov
inc
out
fbstp
outsl
add
push
jg
push
daa
sub
mov
pop
test
cmp
sbb
int
push
inc
scas
mov
cmpsl
cli
jge
mov
test
dec
jnp
cmp
dec
in
in
jnp
mov
mov
outsl
cmpsb
and
mov
fwait
xor
cld
xor
cmp
dec
sti
sbb
and
sti
mov
loopne
int
jns
cmp
fdiv
push
cmp
cmp
seto
ror
idivb
jl
push
dec
inc
xchg
push
dec
dec
daa
fdivp
cmp
in
inc
sti
xchg
push
sub
lcall
test
xchg
aad
fnstsw
out
jge
dec
outsl
pop
push
mov
push
repz
fwait
pop
inc
push
pop
outsl
lahf
mov
int
lret
push
xor
push
jge
jnp
pop
imul
divb
push
leave
test
out
xchg
xchg
push
push
fistpll
cmp
mov
cs
sahf
cmpsl
stc
xchg
rorl
fistpll
jbe
jge
xchg
sahf
out
fistpll
pop
pop
es
lods
call
push
pop
xchg
xor
cs
fnstsw
out
insl
inc
pop
push
lock
inc
pop
jge
out
jg
shl
inc
xchg
loop
mov
cmp
insb
pop
fcomi
sahf
aaa
pop
sahf
dec
add
jge
sbb
mov
xor
mov
inc
sbb
iret
repz
xchg
mov
cmpsl
stc
and
je
enter
out
dec
dec
jns
mov
imul
dec
and
sahf
arpl
call
xor
inc
or
dec
sbb
scas
sub
or
sub
adc
stc
add
adc
rcrb
push
push
mov
xor
adc
mov
bound
mov
scas
int
mov
mov
loop
and
push
pop
mov
or
bound
je
cmpsb
mov
bound
push
and
pop
sbb
enter
cmp
adc
or
adc
stc
pusha
or
add
inc
pop
enter
stos
ret
pop
mov
inc
subl
sbb
push
fcom
xlat
jnp
or
lock
iret
mov
icebp
dec
clc
inc
ja
outsb
outsb
jp
xor
push
js
xor
push
popa
pop
insl
gs
inc
mov
jl
stos
xchg
testl
rorb
mov
dec
in
pop
stos
imul
jo
sub
pop
add
inc
add
outsl
xchg
jb
popa
je
mov
dec
pusha
add
inc
adc
dec
add
jl
das
pop
inc
mov
mov
pop
push
ficoml
cs
dec
pop
dec
pop
jnp
outsb
and
add
jb
push
add
add
mov
sub
arpl
jmp
inc
mov
adc
mov
push
mov
xchg
xor
jecxz
push
pop
inc
mov
or
add
push
mov
movsb
ffreep
jo
push
jo
adc
das
dec
xchg
dec
adc
push
daa
mov
inc
jecxz
mov
or
outsb
insl
xchg
lret
les
dec
xchg
push
sbb
mov
popa
mov
gs
scas
xor
test
lds
inc
sti
rcl
add
push
add
lock
imulb
rolb
adc
xor
xor
dec
pop
enter
cmp
sysexit
cmpsl
xchg
mov
ret
ret
mov
mov
sub
dec
jg
ret
push
ljmp
xor
imul
push
loope
add
outsb
push
jnp
sbb
dec
or
add
shlb
dec
cmp
mov
mov
and
xchg
lods
mov
xlat
arpl
inc
add
or
mov
add
out
out
push
dec
outsl
movsb
sub
rcll
adcb
aas
sbb
bound
sbb
out
addb
insb
or
jmp
mov
lret
inc
mov
das
iret
cmpsl
test
int3
insb
pop
inc
inc
push
add
push
push
pop
push
inc
pop
jo
addr16
fwait
inc
xchg
sti
sub
push
divl
xchg
loopne
jo
out
fisubl
jecxz
das
jecxz
pop
aad
jnp
adcl
stos
jp
inc
rsqrtps
das
daa
jg
sub
sbb
lret
loope
lods
xchg
mov
pop
add
popw
imul
scas
outsl
aaa
fisubrl
fistpl
loope
inc
out
xchg
das
sbb
pop
testl
pop
aas
popa
mov
rclb
jb
das
sbb
add
mov
inc
mov
mov
insl
mov
xchg
add
xor
push
sub
ret
pop
mov
ret
fwait
aad
or
add
jb
arpl
add
stos
push
pop
sbbb
iret
adc
mov
mov
add
dec
bnd
addb
loope
hlt
xor
sbb
daa
add
mov
popa
sub
stos
mov
push
inc
pop
jecxz
jne
sbb
jae
or
xor
mov
inc
cmp
cmc
mov
pop
jno
mov
es
orb
add
aaa
push
mov
pop
punpckldq
push
pop
cli
inc
push
mov
push
pop
lahf
fistps
mov
push
icebp
jp
testl
mov
arpl
push
cmp
jl
pop
add
inc
xchg
pop
pop
add
pop
inc
jae
pop
mov
aaa
jns
aas
clc
sbb
ja
xlat
lcall
cltd
cmp
and
stos
or
sti
sub
cmp
insb
je
add
fnstsw
aas
jo
jae
daa
pop
jno
outsl
mov
or
xor
push
xchg
scas
pop
push
popa
sbbb
xchg
sar
jo
push
jne
or
xor
ret
ja
sbb
out
pop
dec
out
lock
inc
mov
push
xor
mov
lahf
inc
push
lods
and
je
adc
dec
add
punpckhwd
arpl
push
push
mov
test
popl
cmp
adc
inc
sub
dec
push
jae
xchg
lock
mov
lahf
les
adc
lods
pop
stos
add
rcrb
mov
push
cmp
bound
cmp
add
pop
test
shrb
into
dec
nop
push
rorl
xor
jmp
push
add
bound
push
decl
mov
cmpsl
pop
movsl
jp
sub
mov
rcrl
inc
and
mov
pshufw
fidivrl
jb
shl
dec
iret
fdivs
dec
jmp
push
ret
xor
fidivl
pop
or
cltd
lea
or
aaa
inc
insb
sbb
mov
daa
incb
int
xlat
sub
inc
pushl
pop
mov
out
inc
out
and
arpl
dec
mov
scas
pop
aas
push
xchg
incl
dec
inc
dec
push
xchg
add
add
clc
push
mov
fiadds
add
idivl
ret
jle
add
add
pop
add
or
jb
push
addr16
into
mov
and
test
js
pop
ja
out
test
mov
and
ds
das
sbb
or
or
daa
daa
daa
push
and
mov
pop
inc
inc
inc
push
inc
pop
and
or
and
es
js
insb
cwtl
das
add
jbe
pop
push
and
adc
inc
pop
sub
dec
add
mov
pop
gs
add
ds
push
popw
rcrb
aaa
push
movsl
sub
add
pusha
sub
or
loopne
pop
in
adc
pop
push
or
idivb
pop
mov
daa
cmp
shrl
mov
faddp
push
or
inc
or
adc
es
xor
lahf
pop
notl
adcl
sbb
push
mov
jnp
jp
push
jo
scas
cmove
mov
cli
sub
in
rcr
dec
mov
jbe
adc
lea
pop
or
in
or
jbe
ja
jecxz
or
cmpsl
push
sbb
mov
incl
fstps
fincstp
sub
push
repnz
jnp
fnstcw
pop
sub
push
sbb
sbb
mov
pop
inc
pop
push
sub
dec
or
push
pop
adc
sbb
inc
outsl
arpl
popa
add
notb
je
and
and
arpl
mov
stos
push
es
cs
fsubrl
xor
xchg
and
je
mov
popa
stos
orb
xor
out
inc
fcompl
and
xor
and
push
js
add
inc
dec
inc
out
sbb
xor
and
push
push
pop
jbe
add
outsl
fs
gs
jo
or
mov
mov
push
adcl
jne
das
adc
add
or
addr16
and
push
mov
pop
gs
inc
or
mov
insb
scas
jbe
lock
imul
inc
cwtl
aaa
pop
sbb
insl
xor
pop
data16
fstps
push
sahf
dec
sub
rep
mov
or
jge
dec
sbb
inc
xadd
sbb
inc
movd
and
inc
in
arpl
cmp
lahf
nop
jo
mov
outsb
mov
pop
pavgb
pop
dec
sahf
push
mov
or
cmovge
cs
aas
dec
xchg
shll
lods
adc
nop
xchg
outsb
dec
in
jb
das
sbb
mov
xchg
mov
push
movsb
daa
ds
mov
js
sahf
inc
push
addr16
pop
jnp
mov
in
cmp
jnp
lock
or
inc
inc
add
outsl
int3
xchg
iret
sub
in
cmp
fwait
nop
int
daa
movsb
movsb
push
adc
fiaddl
and
mov
xor
xchg
out
mov
add
pop
repnz
dec
in
cld
add
sarl
out
fadd
or
loope
cmpsl
pop
in
testb
add
xchg
idivl
movsb
push
lods
push
in
push
sub
cs
inc
int3
imul
inc
les
add
out
notl
mov
mov
mov
xchg
ja
jno
mov
push
movsl
pop
jns
dec
mov
dec
cs
xchg
add
ss
imull
cmpsb
in
sub
push
cmpsl
add
add
and
sub
inc
xor
addr16
pushf
pop
movsl
das
mov
mov
push
movsb
cmpsb
inc
inc
add
pop
les
mov
enter
hlt
add
add
xchg
lock
addr16
ss
sbb
inc
cmpsb
push
mov
fcoml
or
cmp
cmpsl
cmpsb
and
ds
mov
jl
aam
pop
enter
cmp
jae
test
cmpsl
xor
sub
enter
inc
jo
push
test
cmp
test
push
fsubrs
aaa
les
aam
and
pop
dec
into
test
lahf
mov
daa
testb
lahf
adc
nop
test
xor
pop
adc
adc
test
outsl
leave
xchg
cmp
sbb
js
mov
ja
mov
pop
rorl
rorb
neg
push
lds
sbb
sbb
and
push
xchg
dec
enter
push
pop
and
add
jnp
jb
pop
mov
loopne
sarb
in
cld
subb
stos
inc
aas
in
aaa
xor
xor
push
inc
push
outsb
adc
xchg
inc
mov
mov
dec
andb
sbbl
pop
enter
pushf
enter
dec
sti
sbb
and
adc
mov
call
fstpl
mull
fs
adc
sub
push
loopne
push
mov
pop
enter
dec
loopne
mov
lock
lods
lahf
dec
enter
loopne
xor
push
push
lahf
jl
sahf
outsl
insl
ja
lods
addb
nop
out
mov
in
fcom
or
inc
sahf
loopne
fmuls
fnstcw
lods
push
fcmovnbe
mov
lahf
dec
lahf
pop
repnz
ja
xor
pop
enter
xor
leave
jae
pop
rolb
mov
cmpsb
lock
add
pop
enter
test
idivb
push
xchg
mov
test
mov
inc
jg
mov
fnsave
js
scas
mov
fs
fsub
jns
in
int3
loopne
mov
inc
fdivrs
es
and
xor
fisubrl
fiaddl
jg
inc
sahf
fldenv
xor
lahf
mov
sub
repnz
enter
enter
cmp
enter
test
or
fs
fistps
insb
mov
imul
cmpsl
les
stc
cmp
jo
adc
pusha
lock
out
nop
mov
fdivs
jg
add
mov
sbb
stos
insl
in
sub
enter
daa
sahf
pop
push
js
pop
jae
iret
test
mov
enter
test
pushf
clc
or
sbb
ds
enter
fiaddl
mov
fwait
sub
fisttps
cwtl
mov
test
stos
jne
ljmp
pop
sarb
cld
pusha
xchg
lcall
and
inc
mov
push
shll
push
push
fs
pop
cmpsl
and
mov
jg
mov
mov
and
test
call
clc
or
addr16
pop
call
mov
stc
es
sahf
pop
mov
jae
mov
out
inc
sbb
stos
clc
es
cs
pop
push
add
or
lock
aas
pop
enter
loopne
sub
inc
push
pop
mov
mov
cmpsl
jg
sarb
or
cwtl
lods
mov
cs
or
mov
mov
addr16
sahf
cld
mov
aad
dec
dec
add
pop
cmp
cmp
dec
mov
push
enter
ja
inc
lock
dec
push
push
mov
adc
out
xor
fidivrl
cwtl
rorb
subb
adc
mov
mov
or
mov
rolb
lods
sub
daa
and
frstor
lahf
lock
dec
repz
inc
sbb
pop
aam
mov
push
iret
test
cmpsl
les
push
cmpb
das
mov
or
ljmp
pop
inc
lcall
push
enter
jg
test
inc
xchg
mov
and
inc
lcall
xor
mov
out
dec
call
mov
rcl
call
out
inc
adc
cmp
aam
xchg
push
inc
out
lods
lods
jg
inc
mov
push
fwait
nop
mov
xorb
add
dec
enter
push
js
enter
sbbl
inc
test
mov
subb
cs
or
sbb
jb
jo
das
fadds
and
mov
shrb
adc
pushf
mov
je
sarb
pop
pop
jg
fs
or
lahf
fs
insb
mov
mov
notl
sarb
mov
inc
mov
stos
jne
iret
mov
lahf
jae
or
fmull
stc
pop
enter
mov
fsub
add
sub
mov
xor
int
lahf
ja
xor
repnz
enter
xor
test
pop
aam
enter
hlt
pop
ds
jb
aam
and
xor
inc
mov
mov
ja
mov
or
or
sub
aam
inc
das
test
push
outsl
pop
mov
jg
addr16
in
mov
dec
inc
mov
jb
pop
xor
aaa
adc
push
mov
mov
mov
inc
inc
add
pop
jo
call
cmp
jo
andb
aas
and
call
lock
inc
iret
jl
sahf
adc
inc
dec
mov
inc
push
test
pop
sub
lock
call
lock
call
loopne
daa
fdivs
shll
jo
cmp
ss
in
mov
addr16
xlat
lcall
or
inc
push
adc
push
rcll
es
add
mov
xchg
lea
movw
stos
daa
dec
dec
inc
ss
fdivrs
dec
scas
in
inc
cmp
xor
scas
in
sub
pop
lods
in
xchg
lahf
idivb
int3
out
push
sbb
cld
lret
push
iret
sarl
pushf
cmp
js
mov
sahf
idivb
push
aam
fs
repz
insb
push
xor
out
jns
in
enter
enter
repz
repz
mov
cmp
cmp
and
or
loopne
int
shlb
les
addl
lcall
addr16
xchg
jne
mov
mov
aas
ss
add
dec
sahf
out
lds
test
dec
sahf
js
inc
add
idivl
push
xchg
arpl
jbe
inc
mov
inc
lahf
xchg
jg
insl
mov
aam
mov
and
add
and
dec
outsl
pop
leave
and
inc
aad
inc
mov
inc
xchg
dec
shll
sbbb
dec
outsl
leave
mov
or
filds
test
pop
repnz
lock
pop
leave
xchg
pop
jb
cmp
loop
cmp
ss
add
dec
jl
xor
inc
inc
scas
add
adc
ljmp
sub
mov
add
xor
fbstp
or
cmpsl
aaa
xor
sub
lcall
mov
push
enter
sbb
ret
push
sbb
add
dec
xchg
xor
mov
fs
lock
aad
xchg
cld
outsl
fnstsw
movsl
xchg
push
jb
or
sub
cmpsl
rol
rclb
cmpsb
add
mov
lret
call
sarl
movsb
leave
loopne
ficomps
int3
push
or
rol
dec
xchg
orb
pop
mov
lret
inc
push
jg
xchg
sub
mov
mov
sub
pop
leave
mov
outsl
add
ror
or
shlb
pop
int3
iret
data16
jnp
sbb
push
dec
xchg
scas
add
bound
rorl
scas
add
mov
cmp
add
enter
xchg
pop
les
push
aaa
jb
iret
adc
inc
mov
lods
mov
xchg
or
fiadds
daa
add
sbb
fdivs
es
mov
nop
rcrb
sbb
push
mov
cmpsb
aam
ret
test
jg
push
adc
push
mov
das
in
push
popa
dec
mov
dec
pop
scas
movsb
mov
add
mov
adc
idivb
repnz
bound
je
not
jbe
lds
mov
icebp
mov
xchg
outsl
jg
in
loopne
xchg
shll
sbb
xchg
push
in
jne
push
iret
inc
push
cmpsl
push
mov
cmp
rolb
in
iret
rclb
rorb
mov
cmp
pop
roll
jo
dec
mov
adc
and
or
xchg
imulb
iret
daa
add
pop
jne
xlat
or
cmp
iret
hlt
shlb
cmp
push
in
pop
mov
inc
xorb
pushf
iret
mov
testl
xchg
sub
add
dec
add
incl
pop
mov
shlb
push
and
mov
ljmp
lods
movsl
ja
int3
outsl
cmp
adc
cmp
cmpsl
mov
shll
shrl
mov
rcrl
call
jg
add
jg
scas
in
lcall
xchg
loopne
mov
ja
invd
xchg
adc
add
cltd
fcomps
add
or
fdivp
adc
push
mov
push
shrl
push
outsl
add
or
loop
push
lods
pop
lods
fcom
mov
call
push
cld
shlb
add
or
mov
xchg
or
jl
xlat
add
mov
dec
sahf
iret
mov
daa
mov
xchg
sub
mov
dec
sbb
xchg
jns
out
pop
dec
push
inc
mov
push
cwtl
jl
negb
ss
outsl
je
or
insl
stos
or
aas
lahf
or
add
or
fdivl
and
adc
inc
xchg
call
fcoms
add
in
lods
pop
or
mov
aad
sub
push
pusha
testl
leave
fwait
xchg
add
ss
aad
inc
and
call
push
xor
scas
add
push
sbb
sbb
out
inc
xchg
outsl
add
jo
lahf
addr16
dec
mov
inc
add
out
fs
jb
push
jb
add
nop
dec
jecxz
clc
xlat
push
loopne
xchg
push
sub
aas
mulb
addr16
inc
test
rorb
es
and
mov
and
xlat
pop
or
divl
and
mov
inc
xlat
adc
xlat
inc
decl
fs
fmuls
inc
push
inc
fdivs
fs
outsl
insl
xorl
out
adcb
jo
shl
sahf
or
loopne
lahf
packssdw
ja
mov
aaa
and
push
sub
je
mov
ja
dec
aam
ret
lods
jne
daa
insb
aas
insl
or
addr16
lea
cs
mov
push
jp
push
push
jge
add
ds
repz
xchg
sar
imul
imul
cmp
repz
insb
inc
mov
idivl
sarl
in
outsb
and
repz
repz
outsl
inc
jns
lahf
out
cmpsl
xlat
std
and
imul
std
dec
jno
iret
sarl
jb
push
add
aaa
sub
out
lcall
cmp
sarl
addr16
lret
sahf
cmpsl
stc
add
sahf
lret
repz
sbb
ja
arpl
iret
fldl
js
mov
jecxz
jns
push
ds
xchg
clc
sbb
fwait
cmp
out
shl
jnp
loop
sahf
out
std
xor
push
jge
cmp
roll
mov
iret
sti
es
mov
iret
repz
in
adc
xchg
rcrl
subb
iret
dec
sbbl
or
ds
repz
jg
int
test
out
ss
fcoml
test
sarl
push
jg
xchg
cmp
out
lcall
sahf
mov
iret
roll
jnp
inc
mov
out
divb
mov
iret
sarl
lods
call
out
mov
push
jns
iret
repz
add
lahf
out
int
nop
sbb
data16
cmp
out
or
sarl
ss
xchg
pop
xchg
cmp
xor
out
xchg
loopne
xchg
push
pushf
out
lcall
mov
out
cwtl
imul
jns
xor
cld
cmp
cmp
repz
jl
pushf
outsb
mov
lahf
out
dec
xchg
mov
sahf
jo
sahf
out
int3
sbb
lcall
mov
ds
shll
jmp
cmp
repz
sarl
inc
arpl
or
iret
addr16
cmpsl
andl
xchg
push
iret
sarl
fnsave
test
sarl
test
lods
out
jl
mov
sbb
repz
jne
scas
cmpsb
leave
inc
mov
sarl
jecxz
mov
mov
mov
fnstenv
repz
repz
or
ljmp
inc
cmpl
test
test
lcall
push
mov
add
dec
cmp
out
adc
mov
cmpsl
stc
adc
jl
cmpsl
stc
and
and
data16
insb
ds
iret
dec
shrl
or
imul
aam
les
int
repz
ret
lret
int3
fwait
int
imul
iret
insl
rcr
cmpsl
stc
xor
inc
roll
idivb
int
xlat
push
sbb
mov
push
repz
int
ficoms
loopne
les
data16
mov
dec
cmp
xchg
ss
push
jbe
mov
aas
aam
cmp
jbe
sbb
pop
push
movsb
scas
adc
ja
push
cld
fistpll
or
xchg
mov
stos
popf
int3
aaa
rolb
mov
pop
xchg
pop
shlb
sub
das
fs
dec
or
int
fistpl
and
scas
mov
mov
aas
dec
mov
adc
add
out
aas
xor
leave
or
arpl
sub
test
pop
dec
jb
popf
ret
dec
jbe
orb
loopne
in
rol
lahf
arpl
pop
das
mov
cmpsb
lock
jno
rep
fsqrt
das
test
pushf
in
jecxz
inc
fwait
push
insb
jnp
add
outsb
add
out
push
or
and
addb
inc
dec
data16
fisubl
aas
in
xlat
cmc
fimull
push
ss
jne
sbb
push
inc
daa
setg
push
lahf
movsb
jcxz
ja
ret
pop
push
daa
and
rorb
push
lahf
or
dec
cld
jecxz
add
fwait
xor
adc
loope
xchg
inc
xor
pop
push
cld
push
daa
subb
fadds
pop
lahf
mov
and
inc
inc
or
jl
fcomip
inc
jno
sbbb
jo
pop
cmp
push
loop
ja
ds
jo
fs
xchg
pop
cvttps2pi
scas
cmp
inc
repnz
in
movsb
into
fs
aaa
add
ficoms
add
mov
les
dec
push
mov
push
negl
dec
ss
loopw
insl
shrb
push
jno
add
in
insl
test
call
scas
add
push
jl
dec
xchg
mov
cmp
inc
addr16
mov
cmp
ja
mov
fistpll
cmp
out
mov
mov
mov
cs
in
inc
push
in
mov
daa
out
gs
jne
orb
pushf
mov
xchg
pop
jb
ffreep
mov
in
call
xchg
shrl
inc
dec
scas
pop
and
scas
insb
mov
cwtl
add
in
mov
aas
mov
inc
push
vphadduwd
add
das
cmp
mov
mov
xchg
inc
push
xchg
scas
inc
xchg
push
jmp
pusha
mov
jb
enter
insl
xor
jmp
xchg
jo
stos
shlb
outsl
jnp
cmp
faddl
test
scas
push
sub
loopne
adc
movaps
inc
daa
or
xor
cmp
dec
or
and
mov
mov
or
lret
shr
aas
xor
and
jg
inc
lds
jbe
inc
iret
cmp
pushf
inc
dec
jo
jmp
dec
jmp
outsb
sbb
push
addb
xlat
pop
ja
add
pop
jns
movl
cmpsl
cmp
flds
inc
vmwrite
pop
sti
adc
add
orb
adc
and
fstl
mov
out
addr16
push
mov
leave
mov
push
mov
leave
fnstenv
outsl
mov
mov
xchg
xchg
pop
insb
in
shl
xchg
xchg
xchg
pushf
and
daa
and
lret
xchg
push
cmc
repnz
push
mov
sbb
xchg
lods
sbb
enter
jmp
mov
iret
mov
mov
fmull
jo
jo
adc
dec
adc
imul
push
xchg
mov
jmp
mov
daa
daa
pop
int3
push
xchg
int
out
daa
daa
fucom
push
add
xchg
cmp
je
cmc
das
push
mov
sbb
and
jno
jno
xchg
and
jno
jno
out
jbe
into
inc
arpl
imul
in
jnp
andl
scas
loopne
jns
add
dec
dec
dec
dec
mov
into
repz
ljmp
cmc
outsl
jb
or
or
sahf
out
sahf
or
or
cmp
mov
push
shr
add
outsb
push
add
push
in
jbe
daa
sbbl
mov
ret
in
cmpsl
mov
sahf
push
lock
mov
xchg
fsub
add
xchg
cmp
iret
add
add
js
jae
lock
xchg
and
pop
jae
push
ja
cmp
enter
jae
jae
jae
inc
mov
jae
jae
out
in
and
sub
icebp
stc
sub
cmp
pop
je
je
and
xlat
xchg
push
pushf
icebp
cmp
inc
adc
cmp
icebp
repnz
push
dec
jb
jmp
inc
inc
js
rclb
repnz
and
test
push
rcr
cwtl
push
mov
pop
inc
pop
lock
out
pop
add
push
fbstp
or
mov
cmp
add
add
lds
insl
mov
cmova
cmp
inc
aaa
inc
push
jg
inc
icebp
push
mov
inc
repz
test
aaa
and
daa
sbbb
xchg
enter
fwait
adc
fadds
dec
jnp
frstor
xchg
iret
add
hlt
mov
xchg
mov
fcomip
das
popa
aaa
adc
nop
xchg
scas
fwait
or
ret
xor
mov
leave
and
adc
mov
sbb
xor
mov
enter
jbe
dec
jbe
jbe
sbb
jb
jbe
jbe
jbe
jb
jl
mov
pop
cmc
jbe
mov
insl
addr16
in
and
pushf
in
in
adc
cmpsb
adc
ja
idivb
in
jns
inc
ja
xchg
iret
adc
insb
divb
aaa
push
leave
jl
ja
mov
mov
iret
mov
aam
popl
mov
or
xchg
pop
dec
and
cmp
dec
mov
ja
testl
clc
mov
xorl
ror
sbb
mov
push
xor
jbe
cmp
push
add
in
in
jb
addb
clc
fbld
push
loopne
cmp
cwtl
clc
mov
leave
test
dec
lret
jbe
xor
pop
push
or
bound
jns
dec
repnz
xchg
fadds
push
stc
cmp
sahf
or
add
stc
and
inc
mov
inc
adc
stc
scas
mov
std
roll
cli
shrl
pminub
push
addr16
push
pop
ja
mov
mov
cmp
xchg
mov
in
in
jmp
mov
adc
sbb
in
jp
leave
leave
add
inc
and
sbb
addr16
bound
emms
jp
addr16
in
mov
sti
and
enter
sti
mov
jns
push
jb
jno
scas
add
shl
add
in
jp
sbb
mov
cmp
fcoml
mov
adc
jns
gs
xchg
pop
push
push
add
jns
out
add
in
in
sahf
add
xlat
sahf
pop
and
or
inc
dec
mov
std
jg
push
in
std
add
add
or
pop
dec
shrl
pop
push
pop
fs
mov
std
mov
pop
cmp
cwtl
fisttps
pop
and
pop
movntq
pop
movsl
push
dec
es
in
jl
pop
or
mov
push
cs
dec
cs
mov
cs
dec
dec
and
cmp
leave
dec
or
enter
shlb
mov
jle
xchg
imul
inc
mov
fists
das
mov
and
into
mov
mov
in
push
xchg
dec
cmp
scas
pop
jg
jl
xchg
pop
jb
test
mov
ja
movd
xchg
mov
push
mov
ficompl
sti
add
inc
push
sbb
cmpsb
inc
inc
push
xchg
push
pop
mov
xorb
scas
mov
push
ja
repnz
adc
add
test
push
daa
out
add
in
push
inc
mov
pop
jo
mov
xlat
aam
xor
addr16
pmaxsw
cli
ja
cmp
add
out
jns
mov
add
mov
or
inc
mov
cmpl
mov
jae
stos
mov
xor
inc
add
stc
push
je
enter
sbbb
mov
push
punpckhdq
pop
leave
jae
clc
lea
inc
jmp
jg
push
shll
xor
jns
in
out
lock
add
mov
cltd
or
push
add
mov
mov
pop
jb
push
push
addr16
xlat
mov
mov
mov
xlat
xchg
dec
cs
das
sbb
jg
ucomiss
mov
mov
add
pusha
mov
pop
ror
inc
jnp
daa
dec
push
iret
test
push
sub
sub
inc
je
cmp
add
dec
jle
or
inc
stos
mov
sbb
dec
jg
jmp
jg
push
das
popf
or
pop
es
cmpsl
mov
pushf
jmp
push
outsl
test
enter
jmp
xchg
loop
xchg
or
in
xchg
mov
jp
xchg
jg
add
outsl
cmovae
pop
or
mov
das
filds
cmp
sub
pop
or
mov
or
pushf
out
daa
cwtl
pop
and
mov
push
xchg
push
das
push
xchg
add
call
or
dec
ja
jns
orl
add
aaa
mov
ja
addr16
aad
divl
cmpsl
push
test
or
pop
lock
cmp
xor
cmp
xchg
insb
fimuls
pop
fmuls
repz
jbe
jg
pop
test
pushf
cmp
leave
lcall
repz
mov
fisubrs
out
repnz
or
sarl
std
or
dec
sahf
addr16
adc
xor
and
mov
mov
or
fldt
ja
addr16
imul
mov
addr16
ljmp
add
aaa
pop
loope
pop
or
scas
pop
sbb
sahf
out
cs
add
fwait
in
mov
popf
int3
push
mov
xlat
push
adc
inc
push
xchg
pushf
mov
or
and
out
psllw
mov
sbb
nop
xchg
xchg
mov
mov
mov
out
push
or
aas
call
pop
pop
push
daa
mov
aaa
addr16
aaa
ja
cmp
popf
fsubrl
cwtl
mov
mov
push
add
int3
pmaxub
or
mov
scas
incb
mov
ret
xchg
or
jg
mov
mov
push
repz
test
add
insl
mov
pushf
mov
cmp
or
xlat
repnz
iret
movsb
add
cmpsl
cmp
lea
lea
into
in
stos
pusha
fmul
ds
stos
pop
daa
decl
and
add
dec
push
popf
or
movups
imul
ja
jns
xchg
push
push
movsb
mov
rcr
adc
sbb
push
jg
enter
scas
inc
scas
or
dec
jb
adc
inc
adc
scas
js
push
lea
inc
mov
mov
mov
add
cmp
popf
jecxz
jmp
xrelease
sti
jbe
stc
pushf
add
adc
inc
cmp
xor
jb
add
addr16
mov
push
test
sub
iret
lods
cmpsb
loopne
out
iret
mov
hlt
dec
cs
clc
ja
lods
hlt
pop
pop
das
or
xchg
out
pop
adc
add
cmp
sub
xor
cmp
jae
negl
dec
or
or
pop
push
pusha
push
pop
pop
js
xor
leave
repz
outsb
andb
push
cwtl
mov
inc
mov
cmpsl
sti
nop
pop
pop
pop
inc
xchg
adc
and
outsb
cmpsl
push
and
inc
xchg
jnp
push
mov
call
mov
movb
jp
stc
add
dec
inc
pop
das
xchg
and
adc
xchg
cmp
jns
adc
sarb
loopne
jns
pop
in
add
cld
and
enter
add
pop
jl
mov
xlat
push
movsb
dec
ja
push
addr16
cmp
addr16
imul
pop
ja
mov
jg
pop
add
jg
add
fstpl
bswap
xlat
fisttps
cmp
mov
out
or
ds
cmp
or
xchg
jmp
xchg
out
push
cmovle
xchg
cmovo
push
jae
fmuls
shr
push
aas
cmpsb
je
pop
jne
popf
test
divps
push
imul
cmpsl
aaa
adc
adc
into
shl
ja
js
dec
push
push
pushf
es
xor
push
aas
push
xchg
arpl
xchg
adcl
dec
push
xchg
lret
loopne
iret
repz
or
or
inc
repnz
shlb
sahf
pop
jns
data16
sahf
and
push
add
jns
out
jo
jle
sahf
out
sahf
mov
sahf
or
mov
mov
push
lock
xchg
daa
adc
sbb
sbb
adc
add
out
push
hlt
fisubs
sub
mov
inc
dec
dec
mov
or
incl
cmp
leave
enter
jb
jmp
or
mov
pop
aaa
decl
cmp
outsl
push
decl
pop
aam
fwait
inc
sahf
sbb
fistpll
in
iret
mov
out
cmp
xchg
jg
xchg
cmpl
add
add
in
iret
imul
fiadds
adc
jbe
leave
inc
lods
mov
addr16
xchg
mov
fists
shll
cwtl
or
into
pop
push
xlat
pop
sub
cwtl
ffreep
rsm
jbe
in
push
cmpsl
pop
addr16
sbb
iret
xchg
xchg
or
outsb
shrb
test
add
out
jl
push
iret
mov
mov
sahf
xchg
rorb
push
pop
fnstsw
loopne
mov
xchg
out
fwait
cmp
push
scas
cld
sbb
sbb
inc
aaa
push
insb
scas
mov
insb
mov
scas
fs
dec
and
add
sbb
push
dec
cltd
daa
add
xchg
xlat
mov
cmp
lods
mov
mov
or
psrlw
or
fcomps
orb
cltd
sbb
push
pop
lcall
out
das
lcall
test
cwtl
sbb
and
test
popf
cmpsl
inc
ficoms
scas
add
das
lahf
nop
inc
scas
outsb
lcall
test
daa
cmp
out
js
cmp
pop
xchg
pop
in
jbe
psubsb
scas
sti
testl
dec
mov
fwait
mov
jbe
pop
add
dec
call
push
mov
or
jne
decl
jg
jecxz
and
push
daa
jns
inc
cmpsl
cwtl
ljmp
and
loopne
mov
mov
fisttps
push
xchg
mov
aas
sbb
xchg
sub
cmp
push
pushf
cmpsl
dec
pushf
in
movsl
cmp
mov
mov
mov
mov
bound
mov
ss
sub
popf
xchg
jmp
mov
ret
cmp
mov
jp
pavgw
jbe
cmp
scas
push
leave
leave
inc
jae
iret
rcr
vmread
cli
das
adc
rcrb
sahf
daa
xor
adc
pop
mov
push
repz
stos
sahf
fisttps
fcmovne
leave
fwait
mov
cmp
mov
xchg
leave
jae
testl
xchg
lahf
dec
push
lahf
pop
cmpsl
loopne
rorl
add
das
xor
daa
fstpl
lcall
mov
leave
and
pop
fcomps
in
adc
addr16
push
loope
mov
pushf
xchg
cmp
add
xchg
outsb
repnz
sldt
cs
cmp
repz
jnp
jmp
or
adc
out
lss
repz
adc
and
mov
dec
mov
cmp
adc
cmpsl
mov
sub
wrmsr
mov
jmp
test
insb
orps
setge
out
dec
rolb
sahf
sub
add
lcall
pop
mov
sbb
dec
push
je
and
or
mov
mov
cmp
lea
xchg
outsl
push
outsl
stos
xchg
dec
sahf
add
ficoms
pop
xor
xlat
push
adc
xlat
mov
iret
jae
cmovs
in
push
pop
insl
js
andl
or
mov
jmp
daa
push
jmp
outsl
fstpl
smsw
jo
out
add
movsb
rorl
inc
movsb
das
push
jp
dec
in
ja
out
fstl
stc
scas
jg
pop
push
aas
push
xchg
jl
aas
iret
cmpsl
push
sbb
cmp
jbe
mov
cmpleps
lret
mov
insb
push
cmp
add
pushf
arpl
xchg
imul
stos
dec
es
xor
iret
movsb
nop
cmp
jle
push
movsl
cmp
pop
pop
xchg
add
out
scas
mov
mov
pop
aaa
or
xlat
xlat
xchg
xchg
xchg
jmp
iret
or
mov
push
add
bound
xchg
dec
es
sub
pop
addr16
push
fisttps
xchg
setp
popf
pop
mov
cmpsb
pop
sub
xchg
add
daa
mov
cmpsl
or
adc
and
jecxz
cmpsl
xchg
sbb
cmovae
ss
dec
rcpps
dec
sahf
out
imul
or
push
cs
mov
mov
pop
mov
xchg
rcr
loope
add
mov
add
or
adc
dec
cmpsb
cmp
aas
ja
jae
jb
dec
add
jb
jp
subb
scas
ja
sub
movsl
fbstp
jne
lods
xchg
add
mov
mov
push
add
push
das
int
int
daa
iret
pop
aad
rcl
js
adcb
test
out
pop
mov
dec
insb
ja
mov
xchg
push
pop
xchg
test
in
jbe
mov
xchg
setp
lods
mov
push
in
xor
dec
fabs
test
outsw
pop
adc
nopl
or
mov
pop
inc
cs
pop
mov
stos
xchg
insb
out
xchg
xchg
stos
ja
into
add
sahf
push
lcall
push
fucom
paddsw
js
mov
add
daa
fiaddl
mov
stos
xor
cmp
pusha
das
outsl
pusha
into
mov
pcmpeqd
daa
mov
jl
jae
jb
mov
iret
repz
fisttpl
repz
xchg
daa
daa
decb
lods
sbb
xchg
out
cmp
xor
mov
lods
xchg
repnz
push
lods
pop
push
pop
push
pop
and
enter
mov
fstl
mov
cltd
in
cmp
into
lock
lods
xchg
or
movups
mov
lods
pushl
or
adc
lods
cmp
orb
fiaddl
cmp
das
jbe
mov
daa
pop
les
push
mov
in
scas
xchg
mov
sti
lods
lock
mov
jb
xor
stos
lock
gs
scas
decl
cmp
insl
xor
push
xlat
mov
outsl
mov
iret
push
add
lar
iret
repz
pop
mov
out
jbe
cmp
rcr
pavgb
or
stc
adc
and
mov
cmp
pop
add
add
pop
jns
out
add
jnp
int
out
inc
iret
or
cmp
push
or
lcall
aam
adc
in
push
add
xor
jmp
loope
inc
outsl
out
mov
inc
addr16
je
sbb
jg
addl
add
ja
iret
loope
mov
cwtl
mov
das
pmulhuw
in
push
test
mov
mov
cmp
xor
push
das
pop
xor
les
pop
pop
push
mov
mov
add
setle
cs
xor
cmp
push
mov
pop
leave
leave
in
jbe
pop
imul
repnz
adc
lfs
push
mov
outsl
xlat
outsl
fistpll
out
out
jle
enter
pop
push
aas
pop
mov
in
loopne
mov
or
mov
push
fbstp
push
mov
pop
add
xchg
mov
mov
cltd
aaa
mov
pop
roll
iret
repz
add
stc
cmc
pushf
std
or
or
cmp
or
or
xor
sahf
out
sahf
or
push
jns
out
adc
imul
jns
out
adc
jns
adc
lods
jns
out
sbb
daa
fucom
into
prefetcht1
push
daa
daa
daa
daa
adc
daa
daa
daa
adc
femms
cmp
es
or
add
or
adc
add
sbb
jb
test
outsl
fnsave
mov
sub
daa
xchg
and
insb
idivb
out
popf
inc
mov
cmp
pushf
pop
aaa
mov
loopne
jae
sbb
mov
cmp
mov
cmp
sahf
add
mov
cmp
shll
mov
mov
mov
mov
mov
sub
mov
daa
mov
aas
addr16
addr16
dec
dec
bound
cmp
and
cmp
jb
insl
mov
jo
dec
loop
add
xchg
les
mov
pop
sub
pop
arpl
in
daa
imul
leave
out
or
sahf
cmpsb
repnz
scas
pop
mov
add
outsl
popf
fildl
loopew
call
pushf
ja
mov
jae
push
movzwl
mov
jns
out
push
jg
sysenter
push
add
sahf
push
inc
movswl
or
leave
repz
or
or
sahf
out
insb
or
orl
or
adc
pushf
pushf
pop
and
lahf
cmpsl
xchg
xchg
cmp
ljmp
cli
lar
aaa
or
add
adc
ss
inc
js
push
and
pushf
cmp
dec
mov
faddl
pcmpgtw
jne
pop
in
test
push
cmp
outsb
daa
daa
test
xchg
leave
inc
jmp
rclb
and
add
dec
repnz
daa
mov
icebp
jbe
arpl
mov
sub
xchg
and
cmpsl
lods
addr16
dec
dec
jecxz,pn
loopne
outsl
and
pop
mov
out
jmp
dec
cmp
inc
arpl
xchg
pop
ret
idivl
pop
cmp
adc
pop
inc
aaa
lea
inc
andl
es
or
test
push
push
cltd
or
sbb
ja
cmpsb
test
movswl
mov
ret
add
data16
hlt
int
jecxz
paddb
out
fisttpll
push
push
add
in
dec
pop
add
insl
jns
xchg
cs
packuswb
shll
orps
adc
fisubrs
xchg
dec
jno
jns
cmp
pushf
movsb
sahf
dec
and
sub
loopne
jb
cmpsb
add
mov
sbb
add
mov
iret
repz
push
add
add
cmp
xchg
pop
ss
inc
fadds
cwtl
inc
call
inc
mov
test
cmpxchg
outsb
fisttps
xlat
leave
psrlw
jecxz
inc
dec
dec
in
cmc
mov
fimuls
pop
mov
popa
mov
scas
mov
daa
jbe
dec
dec
cs
add
fisttpll
ja
pop
mov
inc
inc
ljmp
mov
push
pop
ret
xchg
int
syscall
fdivrs
pop
invd
out
stc
push
or
ret
pop
ds
fwait
xlat
rcrb
decl
push
inc
mov
mov
fnstsw
jo
js
pop
cmpb
fwait
test
xchg
push
or
mov
mov
mov
mov
push
das
add
sbb
jmp
pop
leave
mov
ja
mov
mov
lret
inc
jb
mov
movsb
inc
mov
out
adc
ja
lea
pop
mov
mov
rol
mov
movsb
fistpl
pop
add
in
add
or
je
je
out
push
push
test
or
ret
repz
adc
das
xchg
addr16
mov
mov
mov
mov
rorl
add
add
add
leave
rorl
push
and
or
sbb
hlt
pushf
cmp
fiadds
or
in
repnz
rcrl
aaa
xchg
mov
xchg
pop
cltd
outsb
mov
outsb
pop
mov
psubw
ds
or
ret
ret
loop
enter
sbb
mov
shrl
fwait
pop
rcrl
pop
leave
psrlw
cmp
repz
adc
adc
adc
mov
push
xchg
fcmovne
enter
xor
cmp
jns
inc
sbb
sbb
jns
pop
pop
popa
mov
out
cmp
jno
and
in
mov
dec
mov
es
movaps
out
dec
cltd
sub
sahf
out
mov
mov
sahf
shrl
das
shll
mov
loope
xlat
xor
inc
xchg
cmp
pop
xchg
cmpsl
mov
inc
pop
testl
dec
jne
xor
inc
push
push
mov
add
push
ja
ret
das
ret
adc
daa
cmp
ret
fmuls
jne
inc
mov
push
jg
and
mov
xchg
roll
push
adc
pop
dec
popf
pushf
dec
adc
mov
mov
ja
jbe
mov
out
testl
js
or
les
enter
pop
and
imull
and
fcompl
dec
inc
inc
mov
je
push
daa
cmp
jl
mov
add
sti
xchg
pop
push
scas
push
out
es
add
mov
xchg
popf
das
movsl
dec
lods
psllq
jae
or
repz
paddsw
cmc
adc
mov
mov
repz
repz
adc
repz
pop
inc
sbb
push
cmp
repz
pusha
sbb
repz
repz
jle
mov
repz
pop
xchg
and
cmp
mov
mov
repz
and
jb
aad
fsubrp
inc
popf
mov
adc
push
aas
es
popf
popf
popf
popf
pop
cs
jg
lahf
ds
mov
fwait
popf
fists
lcall
fs
cmp
rep
and
jg
repz
push
xchg
iret
repz
lahf
sbb
repz
pop
mov
mov
adc
loopne
lret
bound
push
and
inc
js
sub
xor
adc
mov
mov
iret
repz
or
iret
repz
mov
mov
lret
aad
in
xchg
and
jmp
sbb
jb
movl
sbb
repz
sub
xor
repz
repz
sbb
push
iret
repz
sbb
sbb
iret
repz
test
mov
das
mov
mov
in
iret
into
out
loope
or
mov
outsl
dec
sahf
out
jo
scas
femms
adc
adc
out
pop
adc
comiss
aaa
leave
push
or
cmp
repz
or
push
iret
repz
or
insl
pop
js
flds
push
sahf
or
leave
rorl
cmp
pop
cmp
fldt
mov
stos
arpl
dec
loopne
call
xchg
lock
push
pushf
fldcw
clc
leave
mov
out
daa
pop
wbinvd
push
sbb
jne
out
and
or
sub
xor
cmp
inc
dec
sahf
out
adc
push
pop
fcmovne
repz
pusha
adc
jb
adc
sahf
jl
test
dec
je
push
outsl
scas
lret
and
push
rclb
fimull
cmp
repz
ljmp
or
lret
fbstp
cmp
xor
jae
jb
inc
dec
push
pop
ja
cmp
pcmpgtd
jno
push
popf
fmull
adc
cmp
cmp
mov
iret
xlat
sbb
loop
in
clc
lret
mov
shrb
sbb
add
ds
inc
dec
add
push
pop
pop
push
jo
js
or
popf
cmp
nop
push
push
cwtl
in
in
mov
dec
test
adc
ja
rcrb
push
ljmp
pop
movsl
xor
and
add
push
leave
lret
lret
dec
incb
int
int
int
add
addr16
pop
into
sarl
daa
fisttps
jae
jg
jp
ret
mov
iret
repz
int
or
or
leave
repz
or
ss
add
pop
sbb
es
leave
repz
xor
adc
iret
push
pop
pop
push
leave
jae
sbb
repz
iret
leave
repz
shlb
and
popf
cmp
in
maskmovq
testl
mov
sahf
cmp
sub
inc
iret
pushl
dec
and
ja
jns
out
mov
xchg
out
sahf
out
cltd
add
add
lods
push
mov
cs
dec
sahf
aaa
leave
mov
rcr
push
or
leave
leave
leave
in
cmc
std
sahf
out
in
rorb
repz
pop
sub
cmp
cmp
push
dec
sahf
outsb
repnz
push
nopl
mov
ds
js
cmp
outsb
sub
cmp
cmp
mov
int3
enter
aam
aas
in
leave
out
fucomi
das
testl
pop
test
sbb
sbb
outsb
cs
cmp
pop
xchg
rolb
cmp
pushl
dec
cmp
push
pop
daa
sbb
sarb
or
push
xchg
pusha
rcll
shrl
cwtl
push
add
popf
mov
or
ja
jae
jb
pop
bswap
ftst
xlat
repz
pop
icebp
or
or
or
sbb
or
and
pop
or
pop
dec
sarb
shl
frstor
lahf
pop
sarb
adc
out
sahf
jg
mov
xchg
outsl
mov
scas
test
xchg
push
sbb
out
push
sahf
sbb
sbb
out
lds
and
shlb
pop
call
rcr
or
mov
neg
jae
jg
sub
sub
sub
repz
cmp
cs
iret
repz
pop
xor
xor
cmp
xor
push
repz
out
popa
push
outsb
aaa
sahf
jns
push
lcall
lahf
aam
iret
repz
xor
dec
dec
cmp
out
pop
aas
arpl
repz
scas
jns
test
inc
cmp
repz
inc
cmpsl
inc
mov
jae
popf
shrl
dec
xlat
adc
cmpsb
xchg
add
jg
cmpsl
xor
dec
dec
dec
nop
xchg
int
mov
dec
inc
pop
rcrb
pop
es
aad
push
lahf
ss
jae
repz
add
mov
iret
repz
fs
outsl
jp
sahf
out
push
or
stc
inc
dec
stos
aad
mov
aad
pop
jns
rcl
push
adc
jns
or
add
femms
push
adc
cmp
sbb
jns
outsb
mov
pop
pop
push
in
orb
das
cmp
mov
scas
mov
das
add
es
pop
xchg
mov
add
cltd
dec
xor
lahf
xlat
ja
jmp
push
add
add
dec
sahf
out
add
cmp
leave
repz
out
lods
push
or
or
push
ret
xlat
dec
pand
xchg
adc
adc
hlt
xchg
fmuls
pop
adc
sbb
and
sbb
ds
leave
repz
sbb
sbb
push
pop
out
or
cmp
and
out
cmpsb
sub
cs
xchg
out
sahf
ret
sub
mov
jns
jecxz
stc
push
sub
and
xor
pop
push
dec
flds
fldcw
out
pop
pop
ja
jg
push
push
fsubrl
xchg
xchg
cltd
aas
mov
cltd
dec
ds
xor
jp
cmp
aam
jmp
push
stc
fstps
pop
fmulp
repz
or
push
or
out
pop
or
outsb
adc
xchg
repz
pop
xchg
push
adc
pushf
adc
adc
cmp
repz
push
xlat
pop
loop
daa
daa
iret
sbb
cld
pop
fistpl
repz
adc
sbb
sbb
sahf
cmp
inc
fisttpl
fstpt
repnz
or
and
popa
fldt
mov
inc
scas
lidtl
in
mov
and
and
push
nop
xchg
int
mov
in
ficomps
add
add
add
dec
lock
pop
push
loope
sahf
out
or
or
or
mov
fcompl
or
ja
push
maxps
push
out
sahf
adc
adcb
fcmovne
repz
lcall
out
mov
shufps
rcrl
ficomps
pmuludq
das
push
cmp
add
daa
fucomp
ffree
cmp
cs
aam
aaa
fstp
push
es
mov
push
pop
jo
out
in
wbinvd
js
or
nop
push
or
out
jbe
stos
aas
mov
mov
das
sbbl
mov
fstpl
idivl
in
fimuls
sbb
pop
out
fmulp
sbb
daa
push
push
das
pop
repnz
sahf
aaa
and
and
fidivrs
push
popa
jo
add
fidivs
xchg
jo
add
daa
iret
mov
dec
pop
lret
jns
mov
fistps
or
repz
add
femms
out
jmp
pop
das
push
adc
repz
cmp
cmp
inc
cmp
mov
dec
das
pop
pop
femms
repz
cmp
ds
leave
repz
jl
xchg
ficomps
and
mov
fisttps
aam
repz
and
and
and
es
loopne
ss
add
nop
bound
push
pcmpeqw
adc
or
pop
fs
and
sahf
aam
sbbl
popa
push
mov
mov
jno
mov
das
mov
sbb
loopne
cmpsl
pushf
pushf
or
mov
ljmp
mov
psllq
dec
sahf
add
or
aaa
syscall
cmp
out
inc
or
iret
in
jbe
jne
pop
loopne
repz
loope
imull
das
adc
pop
push
sbb
sub
cmp
xor
sbb
iret
jae
cmp
popa
insb
pop
mov
mov
push
and
out
jns
call
ja
test
out
or
adc
sub
pop
iret
in
movsb
fwait
pop
das
sub
sahf
ja
cmp
xor
daa
fucom
jns
push
movhps
mov
popa
xor
ja
ss
jbe
orb
cmp
cmp
fisttpll
call
sahf
cmp
or
jo
stc
mov
fs
in
es
jecxz
outsw
jae
lsl
pop
push
nop
das
es
leave
repz
push
xor
das
dec
andps
jae
cmp
pop
push
jne
fsubrl
subb
sets
iret
mov
pop
mov
shrl
fmull
out
pop
cltd
cmp
std
or
unpckhps
jae
cmp
pop
sub
jns
daa
dec
mulps
repz
and
jns
fcmovne
xchg
leave
paddq
fistpll
sahf
out
ljmp
mov
pop
fs
outsl
cs
repz
sahf
das
test
popf
cmp
cmpsb
xor
outsb
mov
or
das
and
sub
dec
inc
dec
mov
xor
paddq
filds
add
call
sahf
aaa
insb
xchg
mov
add
jbe
repz
imul
leave
leave
sub
cmp
inc
push
rcpps
aad
or
movntq
pop
int3
pop
mov
lret
xchg
bound
inc
pop
in
sbb
pop
pop
inc
jl
jno
imul
outsl
outsb
add
leave
adc
daa
adc
xor
loopne
decl
xor
add
push
add
sub
and
pop
sub
nop
xchg
add
test
aas
aas
inc
push
pop
add
mov
pop
xor
sbb
popa
and
pop
sbb
push
or
sahf
out
or
or
jbe
xchg
fdivl
or
jbe
test
adc
ja
das
leave
leave
in
in
xor
outsb
mov
push
addr16
das
push
xorps
mov
push
and
cs
pop
andb
cmp
addl
sub
jbe
leave
cmpsl
mov
into
aas
xlat
mov
sbb
addr16
test
add
pop
inc
rclb
or
cs
insb
popa
addb
push
cmpsl
push
mov
mov
add
sbb
inc
adc
add
popa
mov
outsb
or
lcall
mov
or
pop
adc
xchg
into
add
or
andb
fisttps
mov
movsl
sbbl
cmp
mov
decb
inc
out
in
jbe
pop
inc
mov
iret
mov
in
sbb
in
call
adc
cmpsl
in
jle
ficompl
push
pop
fisubrl
xor
fsubs
adc
jb
jle
lods
nop
loope
ss
add
mov
repz
test
iret
rep
fs
dec
inc
iret
repz
cmp
sub
and
iret
repz
sbb
adc
imul
add
add
out
outsl
mul
add
push
aam
int3
rcrb
mov
inc
out
js
jns
and
pop
fs
pop
push
push
sahf
repnz
cmp
into
adc
mov
add
int3
mov
mov
mov
fdivp
cmp
js
pop
push
out
dec
xor
sbb
imul
hlt
add
shl
fdivrp
sahf
mov
push
xchg
push
insb
push
inc
add
pushf
pop
lahf
icebp
fcom
xor
mov
push
xor
push
fldcw
jo
call
lock
fcomip
nop
cwtl
pop
mov
add
mov
fsubrp
adc
push
pusha
idivl
push
or
dec
orb
pop
sub
jae
xorb
jmp
lahf
push
push
push
mov
push
inc
jg
lcall
mov
pop
and
inc
sgdtl
push
push
sbb
jg
push
pusha
add
rcll
add
rcrb
leave
add
pop
sbb
cwtl
flds
xor
outsl
cmp
push
iret
xchg
pushf
add
addb
stos
lea
push
fildll
add
fadds
orl
xchg
add
dec
xchg
add
out
xchg
es
fs
iret
repz
pusha
sahf
out
lcall
out
fdivp
mov
cmp
ds
out
jns
pop
adc
inc
and
push
or
jnp
out
or
cmp
sahf
out
push
dec
sbb
adc
sub
repz
sbb
push
sbb
adc
repz
or
or
lcall
es
sbb
shr
ret
subl
xorb
inc
pop
daa
xor
pusha
or
and
push
xchg
fmulp
addr16
sbbl
ret
cmp
repz
xchg
mov
in
repz
repz
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
lds
add
dec
out
dec
push
repnz
mov
enter
cli
or
or
ret
nop
cmpl
adcb
sbb
pop
stc
and
leave
sbb
into
sbb
rorl
and
sahf
mov
pushl
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
jg
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
clc
cmp
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
ljmp
rclb
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
mov
outsb
dec
leave
fwait
xchg
and
negl
int
add
aas
jno
or
mov
jg
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
lcall
or
cltd
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ljmp
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
jg
lcall
dec
dec
gs
std
orl
pop
ficomps
frstor
dec
xor
pop
mov
push
inc
out
mov
lods
mov
push
cwtl
cmc
and
inc
je
inc
inc
push
dec
inc
lahf
pop
inc
jbe
push
jns
arpl
arpl
je
xchg
cmp
mov
dec
je
jo
insb
imul
inc
insl
jns
mov
jnp
pop
sub
dec
inc
push
dec
inc
aaa
xor
mov
mov
push
dec
or
cmp
sbb
dec
inc
jo
inc
popa
push
adc
pop
pop
jbe
addr16
outsl
mov
cs
or
or
daa
or
sub
test
xchg
scas
cmp
pop
pop
push
lock
dec
push
xor
add
cmp
mov
mov
jno
adc
add
fmuls
inc
dec
push
pusha
testb
push
jo
jb
push
and
push
and
inc
inc
test
push
xor
gs
adc
add
flds
arpl
data16
mov
add
push
sub
bound
outsl
push
dec
adc
pusha
imul
adc
push
in
push
xchg
xchg
call
xor
addr16
xchg
xchg
cmp
pusha
daa
adc
push
das
dec
add
push
fs
add
dec
inc
aas
dec
pusha
sbb
dec
inc
dec
mov
xchg
dec
jae
imul
inc
call
xor
inc
out
inc
inc
jns
xchg
cmp
les
mov
push
push
cmp
sbb
jns
pop
test
push
pop
mov
in
inc
sbb
lock
dec
dec
pusha
imul
lds
jae
jbe
dec
jb
xor
push
mov
xchg
movsl
cwtl
or
dec
adc
add
xchg
dec
jnp
sub
popa
jne
push
cmp
dec
pop
xlat
int3
mov
push
push
add
pop
mov
push
mov
ja
inc
xchg
push
push
in
or
mov
subl
sub
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
sbb
push
insl
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
test
or
mov
data16
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmpsl
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
dec
push
orl
rsqrtps
push
dec
daa
dec
dec
sub
cwtl
xchg
pop
xchg
sbb
and
arpl
dec
outsl
jle
pusha
ja
insl
imul
jne
shrb
outsl
push
jo
xor
push
rcrl
dec
outsl
addr16
addb
iret
inc
push
mov
insl
pop
xchg
stos
pusha
add
movsb
adc
mov
xlat
inc
scas
ss
out
jg
mov
push
push
sub
clc
lahf
fdivrs
repz
test
js
jns
iret
repz
sub
sahf
faddl
scas
xchg
out
push
xlat
cmp
add
inc
xchg
out
sahf
ds
push
and
jg
andb
xchg
xor
ja
popa
push
out
mov
ljmp
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
pushl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
incl
adc
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
incl
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
decl
add
fdivs
jne
iret
or
shrl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
test
add
or
or
or
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pop
mov
push
movsl
in
lahf
xor
mov
js
stc
call
add
push
loope
or
insl
or
pop
arpl
hlt
push
ljmp
bound
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fcos
pushl
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
pop
mov
mov
into
pop
cmp
loop
mov
dec
xlat
xchg
fdiv
ffreep
shll
jmp
outsb
xor
mov
sarb
call
mov
sbb
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
jmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
or
inc
push
imul
xorb
sbb
push
imul
lcall
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
ljmp
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
cmp
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
cli
inc
fs
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
ljmp
orb
adc
mov
jnp
sbb
xchg
or
out
fdivrl
jmp
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
pushl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
ljmp
cli
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
call
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
out
add
lahf
faddp
movsl
adc
mov
mov
popa
xlat
pop
aam
mov
inc
jne
xchg
push
or
imul
icebp
xchg
and
and
xchg
push
inc
jne
outsl
insl
cmpsl
inc
push
call
inc
js
inc
insl
bound
xchg
or
jbe
test
adc
inc
inc
js
sbb
shl
aas
and
orl
jno
notb
pop
inc
cmp
pop
bound
xor
aaa
idiv
cmp
popa
arpl
cmp
arpl
or
xor
shl
bound
popa
shlb
ficoml
inc
jbe
pop
test
fs
or
xor
inc
loope
cmp
or
sbbb
pusha
sbb
dec
or
or
jb
imul
insb
imul
movsb
push
jmp
inc
aas
loope
dec
push
sbb
lds
stos
inc
inc
push
cld
loopne
or
js
test
adcl
pop
xchg
insb
popa
jns
imul
dec
insb
adc
push
nop
pusha
add
aaa
je
or
push
aaa
aas
inc
push
add
ficoml
and
jae
add
int
lds
pop
inc
aas
dec
push
mov
add
out
inc
fistpl
sbb
inc
pop
mov
es
cwtl
jo
inc
inc
add
ds
mov
push
mov
iret
int
push
sbb
dec
lea
or
jb
mov
movsb
adc
inc
outsb
jne
inc
popa
push
mov
pop
fnstenv
add
add
or
adc
xor
addr16
add
into
pop
jo
inc
mov
icebp
frstor
inc
cmp
inc
adc
imul
je
shrb
fidivs
push
and
push
outsl
pop
lret
or
push
jo
and
lods
fisubl
inc
mov
cmpsl
sbb
ss
daa
inc
jb
mov
add
fsubrl
or
ds
dec
adc
aas
push
outsl
outsl
inc
sbb
sbb
jbe
out
push
jno
adcl
in
push
test
lds
or
sub
test
pop
cmp
das
aam
add
push
mov
push
cmp
test
push
popl
rcl
addr16
pop
sbb
push
push
outsl
insb
jns
jecxz
loopne
das
inc
lock
popa
jb
or
pop
sub
aad
nop
adc
insb
adc
or
bound
sub
addr16
subl
mov
push
mov
loop
sub
inc
push
insb
sbbb
sub
xlat
sub
adc
lods
fwait
clc
dec
mov
and
sub
imul
les
popa
roll
pop
add
and
mov
lds
mov
sahf
aas
andb
adc
movsb
fidivs
inc
aaa
adc
sbb
cmp
fcoms
cs
push
fwait
sbb
outsb
cwtl
inc
pop
repnz
adc
orb
adc
lret
rclb
int
xor
or
mov
push
inc
adc
dec
popa
xor
pop
nop
out
inc
mov
jge
out
out
clc
or
pop
mov
int
mov
add
subb
adc
add
pop
outsb
outsl
je
or
adc
mov
mov
insl
cs
cmpsb
dec
shrd
popa
incl
lea
lahf
jg
cld
bswap
mov
out
ud0
jmp
in
out
out
repnz
in
push
pusha
ljmp
lret
cli
add
mov
cld
push
imul
andb
add
dec
out
in
imul
or
or
insb
daa
aam
cmp
dec
int
sub
add
mov
mov
add
sbb
add
xor
sahf
dec
or
test
mov
stos
and
push
mov
subb
adc
mov
push
loop
and
test
push
add
pop
add
clc
xchg
add
add
les
adc
cs
lods
add
jb,pn
rcll
mulb
inc
outsl
and
inc
cmp
mov
xor
dec
rcr
fs
rcrb
in
mov
add
jb
enter
andb
sahf
sbbb
inc
mov
sbbb
mov
nop
xorb
jecxz
and
clc
pop
lahf
and
rorb
lea
mov
dec
or
or
dec
jne
mov
add
imul
dec
dec
push
jg
mov
ret
push
aam
sar
jbe
xor
xor
xlat
ss
xor
pop
jno
int3
fucomi
gs
jmp
cvtpi2ps
or
jmp
mov
das
jbe
movsb
ret
pop
mov
cmp
cltd
xor
imul
int3
loope
push
mov
shr
jnp
clc
pusha
dec
cmpsl
outsb
xchg
hlt
mov
cmp
shr
xchg
and
hlt
jl
les
mov
enter
add
or
movsb
or
pop
enter
addb
inc
sti
mov
add
mov
pop
jnp
push
mov
sbb
push
movzbl
sbb
call
nop
fadds
xadd
call
xchg
jbe
lods
push
dec
dec
sub
cmp
jbe
mov
repz
mov
call
dec
xor
enter
dec
mov
push
iret
dec
mov
cltd
pusha
loope
addl
push
ret
outsl
out
sarb
call
je
ja
and
jbe
xchg
call
add
outsb
xchg
xor
test
mov
mov
pushf
jbe
add
add
fbstp
test
jne
push
inc
imul
add
adc
lret
je
push
mov
mov
arpl
imul
xor
dec
inc
in
inc
dec
and
lret
mov
adc
lock
rcl
sahf
inc
insb
push
inc
adc
cmpsb
mov
inc
adc
loopne
shrb
imul
xor
ret
mov
add
std
and
pop
inc
les
leave
fs
pop
pop
xchg
or
enter
rcl
fs
or
rcrl
in
push
leave
push
inc
xchg
cmp
movsb
xor
pop
add
movsl
ja
and
or
push
inc
lcall
adc
lock
clc
push
inc
fiaddl
jp
dec
pop
push
ret
shl
sub
pop
rorb
test
nop
sbb
pop
cltd
test
mov
and
sub
and
sbb
push
gs
push
jnp
dec
sub
lret
add
mov
es
decb
aam
pop
inc
test
movb
or
fidivrs
dec
adc
add
push
mov
idivb
aam
lea
out
out
or
lds
mov
loope
sahf
add
pop
adcl
push
cmp
rcrl
mov
fisubl
adc
rcll
add
and
or
rclb
mov
pop
inc
repnz
ljmp
js
pop
cmp
fstpt
jno
repnz
mulb
and
hlt
add
xor
inc
pop
jne
jge
in
push
insb
mov
and
push
aas
lret
lret
adc
xchg
popf
jl
daa
inc
dec
fcoml
and
add
jo
mov
rolb
adc
mov
adc
lock
dec
inc
pop
je
call
and
cmpsl
insl
push
push
insb
fdiv
sub
inc
mov
add
inc
or
mov
xchg
push
shll
out
mov
xor
push
sbb
or
insl
add
inc
jl
dec
cltd
xchg
int3
in
mov
lcall
cmp
stc
jp
mov
cmp
pop
fst
std
adcl
cmp
jp
push
xor
orl
ja
or
sub
lret
and
xchg
mov
jle
inc
pop
test
ja
mov
mov
inc
push
rolb
add
add
roll
push
jnp
xor
pop
int
cmpl
lcall
sub
test
jle
lock
call
stos
dec
leave
cmc
lret
add
mov
dec
add
in
add
and
cmp
sbbb
xchg
dec
insb
and
xchg
fsubrl
jecxz
xlat
lcallw
xchg
rcll
xor
and
sub
enter
test
adc
jo
mov
push
dec
call
jle
pop
push
call
aam
or
call
arpl
lea
xor
mov
lret
stos
adc
test
loop
jl
rcrl
ss
hlt
jmp
sbb
xchg
imul
sarb
add
inc
lock
insb
dec
call
dec
xchg
aad
adc
call
shrb
mov
or
ret
bound
pop
mov
xchg
xchg
xchg
sbb
pop
cld
push
sbb
push
inc
into
pop
in
dec
sub
mov
inc
rcl
adc
mov
or
sub
in
push
fs
sbb
jmp
in
sbb
jae
shll
cs
cmpsb
fs
shl
or
cmpsb
xlat
dec
cmpsl
hlt
ficoml
call
inc
push
xor
clc
clc
enter
js
mov
lea
aad
or
add
ret
insb
dec
ja
sub
or
pop
sti
icebp
mov
jecxz
dec
orl
movl
addr16
pop
andb
and
test
sbb
fstps
aas
shll
push
pop
lds
and
push
pop
lahf
mov
es
sbb
movsl
gs
fcoms
incl
bound
or
jg
push
push
ret
push
or
sub
and
in
adc
pop
loop
nop
roll
jo
jmp
add
add
jp
xchg
xor
adc
ret
xchg
lcall
push
faddp
out
push
and
jne
ds
jo
out
sub
aaa
sbb
sbb
pusha
loop
fdivr
inc
or
mov
xchg
jae
lea
xchg
out
push
push
push
dec
fdiv
cmp
or
rcrl
pop
pusha
rorb
ficoml
in
int3
call
pop
sub
jp
mull
cs
sub
pop
icebp
jge
test
mov
mov
andb
adcl
stc
and
push
inc
test
int
mov
push
jb
call
cmp
pop
test
xchg
xor
jle
xlat
rolb
addr16
xchg
xchg
sbb
mov
jne
in
dec
pop
xchg
push
lea
adc
adc
xchg
gs
jbe
cmp
adc
inc
inc
mov
dec
push
dec
mov
test
push
lods
mov
xchg
mov
daa
shlb
fildl
rcr
push
movsl
or
cmp
xchg
add
push
shll
testb
repz
call
hlt
fdivrp
lods
loop
mov
xchg
fdivr
mov
arpl
pop
sub
sbb
add
cmpb
dec
xor
stos
xor
enter
add
push
dec
leave
xchg
andb
enter
stc
mov
aas
xor
call
or
mov
int3
mov
mov
mov
mov
xchg
push
imul
or
jno
ret
mov
adc
pop
mov
pop
xchg
jnp
xor
lea
add
sbb
sbb
add
mov
insl
push
add
lock
movsb
push
add
mov
test
fisttpll
sub
nop
aas
mov
xchg
shlb
rorb
inc
fisubl
cwtl
mov
sbb
inc
push
sbb
aad
rclb
std
xor
mov
add
dec
sub
rolb
aaa
dec
or
pop
fs
dec
outsl
push
jb
or
cmp
je
ljmp
add
pop
push
pop
pop
xchg
push
popa
pop
push
and
add
int3
divl
or
je
cmpb
add
mov
xorl
repnz
inc
fistpl
or
push
ror
lods
jp
fistl
movsb
repnz
loope
mov
adc
jb
adc
xchg
pushf
data16
in
imul
xor
push
int3
into
rcl
fiaddl
mov
add
ret
lret
mov
loopne
pop
cmp
cmpsl
cmp
sbb
and
aas
js
mov
and
lret
mov
std
imul
pop
push
enter
imul
fs
add
push
pop
fimull
or
and
scas
dec
adc
jecxz
dec
aas
push
push
orl
push
js
push
jae
and
cmp
mov
and
jp
sbb
dec
pushl
add
inc
test
gs
inc
push
jbe
dec
in
in
xchg
mov
xorps
and
pop
or
jmp
inc
or
mov
adc
dec
sub
or
xchg
cltd
mov
cmp
jne
pop
or
dec
in
pop
xchg
or
in
enter
jo
add
jno
adc
test
mov
jbe
insb
cmp
adc
xlat
jo
push
leave
sub
mov
cmp
and
push
or
mov
in
mov
mul
jmp
mov
rorl
bound
stos
repnz
mov
lds
fdivrl
je
inc
mov
mov
mov
cmp
mov
adc
shl
aam
xor
daa
fsub
push
sbb
xor
mov
jge
fcomps
xchg
lea
pop
cmp
sub
pop
adc
imul
push
cmpl
test
filds
jnp
aas
push
fists
ljmp
mov
push
sbb
jne
mov
lea
shll
lods
push
cmp
test
inc
std
fidivrs
sbb
inc
xor
sbb
push
mov
pop
mov
add
mov
mov
xor
xchg
cmpsb
adc
jmp
adc
push
mov
aaa
push
call
inc
enter
adc
inc
or
pusha
ja
sahf
les
test
dec
in
test
aad
mov
lods
dec
xlat
push
push
mov
jecxz
repz
push
lea
mov
jo
dec
lea
sbb
push
cwtl
das
jno
test
adc
popf
dec
sub
or
and
cwtl
add
aas
lahf
mov
hlt
push
add
jne
dec
inc
mov
jl
push
loopw
test
cld
xchg
faddl
jb
add
add
pop
in
lods
and
shl
sahf
in
les
imul
mov
jns
mov
push
icebp
push
mov
pusha
ljmp
push
add
add
cmpb
out
enter
push
or
jecxz
sub
mov
call
into
sub
arpl
call
inc
inc
and
pop
cmp
cwtl
mov
inc
dec
pop
and
je
or
or
je
mov
pop
push
jmp
clc
dec
or
loopne
outsb
ret
sbb
or
inc
jge
push
push
adc
fimull
mov
aaa
xchg
sbb
xor
bound
jmp
mov
fs
loopne
mov
adc
xor
cli
sub
sbb
cwtl
imul
lcall
hlt
jl
scas
and
cltd
insb
cld
adc
pop
jp
int
nop
add
or
mov
add
xor
sbb
mov
or
sub
xor
lods
jns
or
jbe
imul
std
add
nop
push
dec
inc
jnp
add
jmp
adc
mov
data16
push
mov
push
push
loopne
inc
or
mov
mov
sti
push
xchg
push
inc
rorb
hlt
repnz
ja
inc
pushf
rcll
shll
aam
inc
inc
xor
sub
or
or
shr
decl
jl
or
jnp
loope
sbb
call
mov
xor
xchg
nop
cld
cmp
movb
rorb
inc
mov
dec
cmp
xchg
mov
mov
jne
enter
mov
dec
repnz
mov
add
inc
adc
test
sub
mov
jo
cld
jge
xchg
lret
sub
jl
cmovo
dec
adc
std
adc
jmp
push
ds
loop
inc
and
push
das
cmc
mov
xor
cmp
in
push
inc
xchg
out
add
mov
sahf
pop
add
mov
and
mov
lds
jp
mov
mov
rcrb
js
aam
sbb
ja
xlat
sub
subl
push
pop
clc
mov
int
mov
add
movsl
or
add
rorb
inc
xchg
mov
les
xor
mov
mov
add
int3
lods
or
sbb
insl
inc
xor
or
daa
fucomp
add
jl
adc
xchg
adc
mov
pop
pop
cmp
push
xor
popf
mov
enter
sbb
shrb
xor
add
or
mov
mov
cmp
imul
ds
jns
in
jbe
push
adc
rol
jmp
sbb
js
les
push
movsb
addr16
clc
push
or
enter
fsts
jbe
outsl
jne
xor
aam
std
jmp
and
xor
pop
call
inc
jmp
in
sti
xchg
sub
imull
xchg
addl
jo
sahf
sarb
rorb
mov
inc
rol
cmp
sub
ret
mov
cmp
pop
add
icebp
stos
add
fs
dec
test
mov
dec
mov
push
mov
in
test
dec
mov
mov
adc
ret
xchg
push
xor
inc
or
cmp
fidivs
repnz
mov
jl
xor
jne
mov
jmp
or
sbb
or
xor
push
or
or
lahf
dec
rcrb
lret
xor
je
dec
adcb
in
mov
and
add
push
adcl
or
clc
adc
lcall
inc
push
add
call
out
test
loope
xchg
aaa
pusha
xchg
mov
push
sbb
cmpsl
xchg
std
test
shll
lds
ss
outsb
mov
inc
mov
test
shl
cmp
dec
sti
adc
adc
and
aam
inc
mov
push
push
mov
lea
andl
sub
aaa
lods
div
ss
fucomip
cmp
je
cmp
jbe
sub
jne
and
subb
dec
jg
nop
clc
push
and
std
nop
loope
ficompl
das
adc
or
sbb
xlat
jo
out
push
in
xchg
push
push
mov
cli
adc
add
loopne
and
ret
int
and
cmp
shr
or
mov
je
imul
or
stos
xor
sbb
fwait
add
xchg
test
ret
mov
jb
insb
inc
js
clc
mov
mov
jle
xchg
mov
pusha
xor
cld
jbe
out
push
or
jbe
fwait
jmp
push
rorl
or
imul
push
sbb
or
or
mov
rorl
call
or
ret
xor
lods
sbb
adc
inc
adc
add
and
lods
stos
loopne
sti
push
adc
je
ret
add
cmp
jle
test
dec
cltd
or
stos
and
or
mov
mov
pop
push
lea
mov
sbb
pop
xorb
xchg
mov
aam
jno
inc
jne
data16
push
pop
movsb
ficoms
aam
roll
xchg
in
pushf
inc
aas
jle
jno
push
cli
call
js
lea
lods
je
insl
out
fwait
arpl
push
push
pop
xchg
cs
rorl
rol
mov
dec
jno
in
lcall
push
push
add
test
add
or
sub
dec
sete
adc
aam
popa
sbb
sub
sbb
inc
sahf
or
dec
dec
imul
insb
pop
and
mov
ret
push
mulb
mov
jmp
pop
cltd
xorl
xlat
inc
and
adc
push
insb
arpl
ja
das
mov
addps
push
andl
push
hlt
inc
pop
ss
push
adc
mov
ss
lahf
addr16
clc
and
cmp
iret
jmp
push
sbb
push
cmp
sub
mov
or
mov
jmp
adc
and
add
adc
adc
sub
jbe
mov
sbb
push
or
xorl
mov
js
add
fldl
pop
mov
inc
fimull
or
iret
call
stos
mov
push
push
imul
pop
addr16
mov
jmp
sbb
mov
cld
jne
into
cmp
js
xchg
jmp
ss
fcoms
jne
push
and
subl
and
loope
sti
push
ret
leave
je
int3
jecxz
inc
push
sahf
dec
decb
adc
xorl
jmp
inc
es
jo
xor
inc
sub
mov
arpl
icebp
call
dec
loopne
inc
sarb
adc
pop
cld
adc
inc
jmp
dec
setb
or
mov
cmp
movsl
stc
xchg
add
movsb
sbb
mov
xchg
sub
mov
lcall
dec
jl
js
xchg
push
push
negb
in
ja
jecxz
push
dec
xor
or
insb
pop
jne
into
icebp
xorb
movsb
inc
or
mov
cmp
dec
insl
xchg
pusha
movl
push
sahf
or
or
or
fsubrl
mov
jp
lret
and
mov
jne
add
push
call
xchg
sub
in
movsb
jmp
js
sbb
mov
test
or
cmp
mov
sbbl
mov
cmp
add
js
adc
mov
pusha
sub
into
fsubrl
or
sbbb
call
fdivrl
and
out
push
sbb
add
xor
fdivl
or
jno
jmp
or
popf
pushf
or
insl
je
cmpb
test
fldl
stos
push
lods
add
sbb
push
fs
inc
mov
mov
inc
mov
shlb
andl
cmp
jg
push
loope
pop
pop
dec
lea
or
push
cmp
call
push
fnstenv
test
aas
mov
icebp
mov
addb
mov
nop
push
adc
or
inc
inc
dec
jne
movzbl
aad
or
add
je
aam
sbb
xorb
mov
fisttpl
test
addl
incl
rcrb
sbb
sub
sub
adc
jmp
insb
jmp
sti
add
and
adc
cli
sub
fsubrl
test
xor
or
and
pop
or
cmp
dec
mov
lea
inc
nop
inc
xchg
xor
inc
pop
rorb
rorb
ret
lods
inc
ss
sbb
add
imul
in
mov
loopne
inc
lret
mov
fucomip
sub
repnz
pop
push
movsl
or
popa
es
nop
xor
add
ss
lret
sub
rorb
call
dec
dec
dec
fldl
je
popf
inc
xor
adc
push
dec
pop
aas
dec
dec
divl
cmp
insl
dec
aas
enter
mov
shr
push
xor
xor
xor
add
mov
inc
xor
sub
sbb
add
cmp
xor
out
pop
fmuls
xor
push
add
rolb
call
add
xor
out
xor
xor
pushf
mov
test
loopne
addb
xor
sbb
xor
xor
rorb
dec
push
pop
xor
xor
adc
mov
jp
pop
in
adc
inc
xchg
je
rorb
push
and
addr16
popa
pusha
xchg
adc
dec
xor
add
pusha
xchg
jle
cmp
cli
or
or
jp
jle
jge
cmpsl
xorl
pop
call
call
mov
pusha
popa
js
dec
aam
inc
adc
ja
ss
call
and
pop
dec
adc
adc
mov
jp
jge
xchg
mov
jnp
add
cvtdq2ps
cmp
or
test
add
mov
call
enter
pushf
xchg
ss
scas
pop
jmp
stos
push
xchg
cld
xchg
pushl
dec
int
cmp
jmp
dec
pop
movsb
mov
xchg
mov
mov
xor
fcmovu
xchg
test
jo
addr16
pushf
out
cld
loopne
pop
push
into
cmp
xor
jmp
sub
inc
jmp
movsb
adc
push
sbb
jnp
add
push
iret
push
push
xchg
sbb
lcall
add
mov
leave
test
or
jbe
sahf
or
dec
mov
push
lock
sbb
add
mov
mov
inc
fiadds
mov
dec
incb
cmp
es
cmpsb
add
fisttpll
and
ljmp
mov
jle
ret
shll
add
sub
es
orl
fld
jmp
push
sbb
mov
push
or
in
ficomps
cmp
and
ret
xchg
int3
test
inc
push
xchg
js
sbb
js
push
push
ror
xchg
daa
imul
cs
xor
sub
adc
dec
push
sbb
cmp
push
fildl
inc
and
sbb
push
jns
hlt
xchg
push
xchg
pop
imul
pop
mov
jmp
fs
adc
test
and
add
xchg
cmpsl
push
push
or
mov
rorb
loope
rorb
or
push
xchg
cmpsl
pop
aaa
adc
fwait
outsb
and
les
pop
dec
enter
das
xchg
shl
sub
xchg
sub
rcrb
ss
shlb
or
sub
adc
pop
jb
sahf
and
call
push
jo
rolb
rolb
or
push
movsb
mov
add
daa
inc
cs
pusha
out
jae
mov
or
push
les
mov
inc
dec
daa
cmp
int
xchg
xor
sub
call
adc
add
add
sahf
xlat
loopne
jmp
imul
je
pusha
call
pop
pop
or
daa
inc
daa
or
divl
nop
add
and
dec
sbb
xchg
add
push
out
mov
test
sahf
out
push
mov
ror
rorb
jecxz
sarl
or
push
adc
fwait
xchg
sub
xlat
and
lcall
cltd
rol
andb
mov
push
push
pop
push
mov
inc
and
mov
loop
or
insb
and
cmpb
adc
dec
pushf
push
pop
fstl
loopne
jmp
cmp
je
mov
add
sub
fs
ret
lea
adc
add
pop
add
or
add
add
add
adc
pop
sub
inc
lret
out
jg
jo
cmp
je
xchg
add
in
fmulp
mov
inc
scas
in
push
push
push
gs
int
add
inc
or
and
or
lret
sub
or
add
or
or
sysenter
xchg
add
mov
or
or
or
push
or
xor
push
cvtdq2ps
pop
xor
adc
pop
in
sbb
adc
cmp
in
add
adc
pop
and
and
push
adc
push
adc
adc
adc
jb
jb
adc
xchg
cmp
push
push
inc
mov
pop
and
ljmp
sbb
xchg
sub
mov
pusha
in
sahf
sbb
mov
in
sbb
xor
repnz
jo
sub
ja
sbb
mov
negb
pop
push
cli
add
add
xor
insl
nop
movsl
cli
push
add
mov
add
cmp
xchg
jmp
cwtl
xchg
push
in
cld
in
push
in
imul
rcl
leave
jnp
dec
ret
in
in
leave
repz
mov
pop
enter
aas
adcb
call
adc
loope
jmp
cmp
cmp
xchg
sub
jmp
jmp
sub
call
in
lret
stos
or
aad
iret
enter
cmp
mov
out
jb
jb
xchg
out
or
inc
lcall
aaa
jb
lock
dec
icebp
cmp
push
inc
pop
mov
adc
cmp
repz
std
in
cltd
push
push
hlt
hlt
imul
negb
std
cmc
cmc
cmp
inc
div
mov
das
nop
xchg
sbb
gs
clc
mov
clc
or
sbb
stc
and
sahf
xchg
sub
add
sti
mov
cld
cld
cld
je
idivl
sbb
push
push
nop
shlb
mov
xor
iret
fwait
xchg
std
sbb
mov
push
ret
inc
testl
jb
dec
jp
push
sbb
mov
pop
jmp
xchg
jecxz
jecxz
xchg
mov
cld
in
in
mov
enter
testl
and
inc
or
out
xchg
mov
call
xchg
bound
cltd
and
inc
scas
ss
daa
in
cltd
dec
push
and
or
jmp
add
cli
out
out
push
push
out
xchg
mov
sbbb
xor
or
insl
nop
repz
sbb
add
cmp
mov
imul
mov
jns
xor
jb
pusha
pop
repnz
sbb
xor
sti
sti
sti
xchg
sub
push
or
cmp
in
push
lret
jmp
mov
rcll
test
cmp
inc
xabort
or
sub
dec
loop
push
push
loop
arpl
in
repnz
clc
and
mov
add
or
shl
out
fdiv
pop
leave
or
sahf
in
rcll
fisubl
dec
ljmp
mov
testl
or
rclb
xchg
jns
mov
into
mul
scas
mulb
pop
repnz
jae
insl
repnz
das
test
scas
inc
repz
notb
and
mulb
out
div
testb
repz
xchg
addr16
cmp
pusha
mov
stc
jmp
test
repnz
cmc
loope
cmc
inc
mov
inc
cli
hlt
or
xlat
inc
pushw
data16
push
popf
out
test
push
jo
adc
stos
mov
xchg
xor
sti
mov
loope
push
jnp
loope
jp
setb
pop
cvtdq2ps
cmp
lret
and
pop
pop
lcall
mov
repz
push
mov
or
xchg
repz
and
insb
repz
repz
andb
mov
xchg
or
in
mov
in
repnz
andb
xchg
cmpsb
movl
push
pop
adc
and
repnz
repnz
cmpsb
jb
sbb
and
icebp
pop
dec
adc
push
cwtl
icebp
cs
add
or
arpl
mov
sbb
adc
scas
adc
or
inc
jb
mov
test
nop
in
jl
ret
sub
lret
mov
push
push
sub
ffreep
sahf
movsb
adc
inc
pusha
jb
scas
xchg
aaa
inc
cmp
cmp
xor
add
adc
mov
lods
mov
add
jne
stc
xor
dec
icebp
dec
add
movsb
xchg
dec
inc
xor
aam
jmp
jmp
and
add
int3
imul
pop
dec
push
nop
push
jns
adc
repz
push
add
adcw
sub
push
cmp
data16
push
repz
mov
mov
rep
sbb
push
push
aad
in
iret
repz
push
dec
outsb
or
adc
jns
or
dec
xorb
adc
cs
aad
mov
jns
inc
cmp
adc
shll
lret
mov
pop
aad
js
push
icebp
sbb
and
xchg
lods
je
xchg
mov
sbb
jg
fists
sbb
cmpb
inc
xor
jmp
pop
or
mov
subl
push
testl
xor
or
sub
in
xlat
pop
adc
sbb
pusha
mov
or
hlt
and
push
sbb
add
imul
xor
in
jmp
adc
pop
add
je
xchg
cltd
push
push
stc
and
es
and
mov
add
pop
insl
adc
arpl
adc
add
or
or
mov
leave
popa
movsl
arpl
adc
inc
dec
arpl
pop
jno
rcll
stos
adc
adc
jecxz
sbb
mov
cwtl
test
add
movsl
and
hlt
sarl
cmp
sub
int
jb
dec
add
jecxz
in
add
mov
inc
add
dec
cltd
pop
jb
inc
sub
in
dec
ret
add
add
pop
xchg
pop
adc
push
xor
sub
js
xor
sahf
mov
mov
xor
dec
nop
xchg
push
mov
and
push
inc
cltd
sbb
inc
and
inc
test
leave
pop
inc
dec
pop
inc
fsts
add
pop
xchg
and
sub
jl
xchg
and
add
xor
and
xchg
movsb
mov
cmp
nop
or
cltd
push
inc
xchg
lods
clc
add
or
movsl
xchg
rcll
xor
test
cli
adc
shll
jg
daa
movsb
jae
test
je
test
xlat
loop
push
xchg
and
sub
sti
sub
jmp
in
and
mov
stc
push
add
add
pop
leave
sahf
mov
sbb
mov
in
and
mov
xor
push
or
jmp
arpl
add
mov
xor
ds
test
aaa
lcall
rclb
nop
pop
and
pop
or
mov
ss
in
adc
mov
orl
and
lds
in
jbe
or
pushf
pop
push
xorb
nop
in
push
xorb
in
sub
pop
inc
inc
in
xchg
xchg
xchg
xchg
cmp
sub
pop
xchg
xchg
sbb
xor
and
inc
jb
test
nop
sbb
mov
orb
push
add
orb
push
xchg
push
andb
in
dec
nop
pop
adc
repnz
scas
mov
xchg
cmp
in
cmc
add
mov
push
mov
add
push
mov
fs
pop
push
mov
or
imul
push
stc
in
in
pop
rol
or
ds
push
or
dec
in
push
xor
inc
in
or
xor
cmp
xorb
cmp
add
push
in
std
push
cmp
mov
in
dec
das
pop
stos
or
pop
inc
and
test
nop
in
test
popf
add
mov
nop
test
in
lock
test
adc
rcr
xchg
inc
push
or
mov
push
or
and
leave
xchg
and
popf
dec
aaa
lock
sub
add
movsl
jno
or
push
xor
sbb
cmpsl
data16
data16
loope
push
xorb
xchg
and
pop
iret
dec
add
push
bound
mov
push
cmp
mov
ss
fstps
xor
add
and
pop
sbb
mov
scas
add
iret
nop
adc
mov
dec
test
xchg
cmp
iret
and
dec
sbb
iret
adc
xchg
sbb
jo
scas
je
sti
push
daa
or
and
dec
mov
xor
nop
inc
push
or
jb
jge
adc
mov
xchg
push
add
daa
and
xchg
out
addb
and
and
addb
cwtl
lods
in
add
mov
inc
ret
or
test
loop
xlat
inc
sbb
daa
adcb
add
xchg
push
pop
jmp
loopne
mov
nop
sbb
push
xchg
loopne
rolb
push
orb
xor
sbb
dec
jmp
aad
rcl
or
jo
push
jo
repz
shlb
je
xchg
mov
shrl
lahf
call
mov
pop
xchg
cs
cmp
jmp
xchg
mov
inc
scas
pop
jl
pop
dec
fs
out
call
loope
xor
xor
mov
xorb
mov
pop
xor
adc
mov
inc
out
inc
pop
pop
or
jmp
pop
mov
fs
add
loopne
jmp
inc
cmpsb
insb
mov
sbb
jmp
fs
jne
rcl
sub
loop
and
inc
leave
loopne
and
pusha
scas
test
shl
loopne
jmp
jno
jmp
je
jmp
nop
sbb
les
jmp
jecxz
mov
jmp
adc
xchg
iret
pop
stc
shll
adc
shrb
add
mov
jl
nop
mov
sarb
inc
jmp
cs
jnp
fwait
call
jo
ljmp
push
nop
add
xchg
push
sub
sbb
push
jmp
inc
mov
or
dec
mov
cmp
mov
xor
add
or
pop
sbb
imul
or
cmp
pop
jmp
sbbl
add
push
jbe
dec
imul
call
in
jmp
lea
sub
and
pusha
pop
pop
xor
and
add
sbb
jmp
mov
jmp
pop
sub
or
cs
pop
or
add
lods
into
sbb
jmp
cmpsb
inc
inc
sbb
or
pop
xor
cld
sub
out
dec
jmp
rcl
int
mov
lds
mov
jmp
dec
cmp
aam
jp
pop
xor
mov
push
cs
orb
mov
sbb
sbb
push
cs
mov
lea
loope
jmp
test
pop
pop
or
data16
int3
sbb
lock
xor
insb
jo
jb
or
xchg
movsb
fcmovbe
enter
jbe
lock
ja
int
in
mov
mov
xor
or
mov
cmp
je
mov
insl
push
or
hlt
mov
out
mov
shrb
mov
or
addl
inc
repnz
xchg
adc
int
adc
lret
loop
push
adc
jmp
subl
pop
dec
or
cmp
xchg
and
pop
inc
loop
mov
rcll
arpl
ret
imul
jp
hlt
and
dec
push
inc
push
dec
rolb
jno
shlb
push
mov
das
sbb
test
js
xchg
xor
jmp
xchg
shlb
inc
jmp
pop
xor
mov
pop
mov
mov
xor
jne
jmp
mov
cmp
mov
mov
pop
cmp
dec
and
mov
pop
cmpsb
adc
push
call
sbb
jmp
lods
cli
cmp
cmp
hlt
fs
jmp
sub
ds
setb
leave
jmp
pushf
fsubr
loop
aaa
imul
and
and
dec
add
inc
mov
xor
repz
stos
cmp
mov
inc
je
ret
or
inc
out
push
movsb
mov
js
mov
dec
pop
ret
sub
fstpl
inc
push
mov
inc
daa
clc
xchg
xchg
push
cmp
jbe
in
sbb
lods
ret
mov
xor
push
inc
sbb
lds
fisttps
rcrl
mov
aad
xor
pusha
xorl
mov
xchg
addr16
enter
sub
inc
pop
or
sub
and
and
fiadds
and
and
js
fwait
or
outsl
add
cmpsl
or
xor
jae
inc
sbb
leave
mov
call
or
xchg
push
add
and
mov
bound
js
in
jo
pushf
or
mov
lcall
pop
repnz
xchg
movsb
fimuls
repnz
push
sub
movsb
fiadds
xchg
fidivs
mov
dec
fiadds
ffreep
add
push
xchg
dec
cmp
es
fildll
arpl
adc
loop
push
jae
mov
rcll
cwtl
jnp
dec
dec
xchg
inc
fisttps
mov
mov
leave
push
mov
movsb
xor
out
or
call
pop
dec
xchg
push
shr
rolb
jl
loopne
or
in
cli
stc
jmp
sbb
pop
and
jg
dec
inc
and
mov
inc
push
jo
test
andl
push
and
leave
xchg
adc
push
cwtl
and
add
mov
fwait
roll
das
push
loopne
inc
cmpsl
hlt
out
or
scas
inc
inc
cmpsl
enter
cmpsl
loope
jl
inc
stc
push
clc
cmpsb
add
notb
and
int
jbe
lcall
stos
xchg
fbld
dec
or
sub
inc
inc
cmp
push
sbb
call
push
adc
and
jbe
fimuls
call
push
cmpsl
cmpsl
jmp
nop
into
addr16
and
inc
mov
out
adc
push
cwtl
dec
addr16
cmpsl
push
shll
push
ret
push
inc
xchg
ret
rcll
mov
rcrb
push
xlat
push
push
cmpsl
dec
and
popa
andl
mov
adc
cmpsl
push
add
xor
cmpsl
mov
fnstcw
mov
jo
push
jmp
or
cld
push
sbb
add
and
or
mov
imul
cmpsl
clc
cs
call
ja
sbb
xchg
pushf
xlat
push
call
pop
jo
mov
outsl
xor
mov
xchg
xchg
inc
push
dec
sub
or
mov
push
out
add
mov
mov
xchg
sbbb
push
or
inc
mov
sbbl
mov
inc
mov
cmp
loop
mov
pop
test
aaa
mov
push
and
push
mov
test
fs
mov
pop
test
mov
or
mov
test
mov
push
aaa
mov
adc
sbb
mov
imul
cmp
push
mov
add
cmc
adc
outsb
adc
jno
and
adc
call
stos
sub
outsb
inc
add
dec
loop
movsb
mov
stc
dec
daa
movsb
add
incl
mov
mov
and
and
sbb
pusha
call
xchg
imul
mov
lds
rcrl
lret
adcl
pusha
sub
xchg
rolb
mov
push
jns
ja
mov
xor
adc
out
je
jg
call
adc
mov
mov
or
dec
adc
push
adc
out
or
add
sbb
ljmp
dec
and
sbb
ret
cmpsb
add
adc
std
xor
mov
nop
inc
and
cmp
pop
sbb
add
fbld
mov
jb
xor
push
inc
call
pushf
inc
pop
inc
push
lods
in
dec
lods
ss
call
gs
mov
mov
add
cmp
inc
aaa
and
lahf
push
movb
cmpb
jns
fcmovnbe
int3
jmp
cmp
push
inc
jmp
dec
jmp
xor
xor
fimuls
inc
inc
adc
mov
outsb
jo
xlat
and
add
inc
pop
je
pop
es
test
mov
loopne
inc
xchg
bound
rorl
fs
stc
add
mov
pop
das
or
xorb
add
adc
cmp
lock
and
cmp
leave
or
pop
cmpb
aaa
mov
xor
inc
jmp
out
sbb
pop
add
adc
push
nop
add
icebp
sarb
fs
cwtl
sti
mov
cltd
sbb
lds
xor
enter
loop
inc
mov
sbbb
mov
xor
mov
inc
mov
mov
insb
pop
sbb
mov
call
cmp
div
fcoms
xor
inc
iret
shlb
jb
cmp
mov
pop
fisubrs
jge
push
push
dec
testl
mov
add
jne
dec
popf
cmpsl
aam
pop
enter
add
ja
cmp
push
add
clc
adc
lods
or
mov
add
ret
push
cld
das
ret
xorb
xlat
movsb
xchg
rclb
mov
mov
sub
sbb
push
hlt
dec
es
cmc
inc
adc
sub
or
nop
jmp
jecxz
mov
rorb
dec
sbb
xchg
mov
push
movsb
xor
pusha
xor
scas
jno
inc
and
hlt
mov
cltd
nop
rcll
add
in
add
pop
push
push
xchg
mov
popa
add
sahf
in
jbe
lret
mov
push
xchg
nop
cmpl
out
and
or
das
dec
cli
or
xor
xorl
lock
add
and
cs
push
pop
and
mov
xchg
lret
mov
or
mov
xor
mov
xchg
aaa
adc
rol
mov
mov
dec
js
jbe
or
dec
scas
stos
loopne
push
push
add
cmp
nop
fwait
cwtl
and
roll
sbb
mov
mov
nop
rorb
mov
gs
pusha
sub
daa
ja
test
mov
xchg
push
sub
mov
inc
inc
mov
jl
xchg
sub
pop
add
pop
push
xchg
xchg
jmp
cmpsb
jecxz
xor
mov
dec
sbb
daa
sbb
and
jmp
movsb
rcrl
loopne
cltd
and
roll
xor
mov
lea
je
lcall
xorb
fiadds
loope
shll
push
loope
pop
and
inc
je
lea
loope
inc
sbb
lea
loope
xchg
inc
inc
adc
xchg
xchg
ljmp
xchg
lret
inc
jno
or
aad
and
mov
out
mov
and
xchg
dec
push
dec
nop
mov
nop
fisttpll
inc
inc
mov
movsb
pop
adc
xchg
add
rclb
add
push
test
add
shrl
dec
add
mov
ljmp
fbstp
filds
jmp
ljmp
or
adc
rclb
nop
push
out
dec
lea
mov
into
data16
fs
adc
sbb
inc
test
dec
cmpsb
or
dec
nop
add
adcl
dec
sbb
or
dec
and
add
sbb
or
mov
rcrl
pop
dec
adc
add
pop
pusha
dec
jmp
mov
mov
inc
and
in
inc
inc
dec
jle
or
mov
orl
std
daa
test
lea
push
or
call
or
push
pushf
dec
sbbl
push
push
mov
subb
jne
cmp
test
call
or
mov
in
mov
rcpps
int3
inc
fwait
adcb
dec
outsb
push
sbb
test
dec
adc
rolb
xchg
add
roll
sub
mov
ss
je
sarb
sub
ss
push
xchg
cmpsl
adc
daa
lea
add
push
test
call
or
test
pop
xor
sbb
add
mov
aam
in
cmpsl
mov
sbb
cvttps2pi
push
mov
cmpsl
mov
mov
and
xchg
adcl
or
pop
or
adc
pop
addr16
pop
shlb
pop
rcrb
push
xor
adc
mov
and
mov
call
dec
push
adc
pop
lds
dec
push
fstpl
cmpsl
sub
pushf
es
pushf
mov
pop
push
jb
inc
stos
mov
or
out
lods
dec
lds
dec
pop
fldcw
inc
push
sarl
jnp
and
rcrl
test
and
test
xor
lea
scas
repnz
push
push
rcl
fldenv
and
mov
fstl
movl
xor
adc
and
in
fnstsw
loopne
add
mov
push
mov
and
xor
ja
mov
aam
pusha
aaa
push
xor
inc
push
jmp
and
push
rclb
xchg
and
fldenv
push
adc
sub
or
or
xchg
dec
dec
out
add
xor
mov
and
inc
mov
adc
add
sbb
inc
xor
ret
cmp
call
dec
mov
scas
or
pop
xor
inc
aad
in
pop
lret
xchg
les
or
call
push
mov
sbb
nop
rorb
shrl
adc
adc
dec
call
cmp
sbb
int
lods
inc
aaa
xor
inc
or
daa
adc
inc
inc
scas
movsb
ljmp
lds
add
pop
loopne
inc
inc
and
xor
adc
shlb
inc
aaa
call
jo
int
rclb
mov
xorl
lds
int3
mov
imul
jnp
xor
std
xor
adc
in
inc
lea
push
adc
inc
inc
pushf
pop
inc
rolb
ja
ds
push
adc
inc
inc
dec
loop
push
jp
ja
inc
inc
cs
adc
inc
inc
add
nop
rol
inc
movsb
mov
sbb
add
dec
lea
inc
sbb
add
rorb
mov
hlt
sbb
out
lcall
loopne
push
adc
push
xor
or
add
push
stos
adc
inc
inc
xor
and
inc
inc
add
cmp
mov
dec
call
dec
enter
call
mov
adc
outsb
sbb
jmp
xchg
out
test
inc
lahf
jg
cmpsl
addl
lea
fcom
xchg
sbb
add
push
popf
ss
es
inc
jo
push
sbb
movsb
mov
dec
sub
es
int3
lds
dec
mov
adc
loop
test
push
out
fcomps
dec
inc
iret
lds
inc
inc
or
nop
popf
or
ficomps
mov
and
in
dec
dec
inc
jge
mov
sbb
sbb
push
mov
daa
dec
or
fs
lret
pusha
and
or
jne
cwtl
mov
or
sbb
cs
push
lahf
mov
xor
insl
inc
and
pop
mov
or
pop
sti
ss
nop
and
test
ja
or
dec
xchg
test
call
xchg
je
sub
cmp
loopne
xor
push
fs
jp
sub
addl
adcb
sbb
testb
mov
pop
dec
shr
mov
rorb
pop
mov
push
enter
mov
mov
jnp
enter
or
or
fnstenv
xchg
xchg
in
inc
fiaddl
pop
sbb
inc
xchg
cmp
or
push
enter
xchg
and
mov
sti
mov
mov
dec
cs
aas
test
adc
xchg
push
mov
roll
and
fs
inc
cs
pop
dec
cmp
leave
movsl
mov
mov
repz
pop
leave
and
sti
inc
mov
add
inc
inc
xchg
or
sti
shlb
inc
jbe
dec
sti
sti
mov
mov
sti
cmc
inc
and
decb
mov
enter
push
inc
inc
scas
call
test
jle
sti
dec
dec
movsl
mov
add
bound
inc
inc
sti
pop
adc
flds
inc
mov
or
adc
fldl
cmp
adc
mov
jp
adc
neg
pop
adc
cwtl
mov
jae
xor
dec
insb
into
mov
sub
add
rcll
jae
sbb
xor
mov
popl
dec
sub
jo
xor
sbb
or
jp
mov
sub
add
adc
pusha
xor
repnz
andl
movups
jmp
mov
andl
int
sub
addl
dec
inc
xor
adc
dec
test
mov
or
push
push
sub
xchg
notl
mov
or
and
ret
mov
arpl
fistpl
cld
pop
in
mov
dec
mov
and
decb
inc
adc
and
add
and
test
inc
call
and
pop
lcall
inc
and
sbb
or
push
push
mov
pop
ljmp
icebp
pusha
cmp
rcrb
and
mov
outsb
xor
pop
ret
nop
jge
xor
adc
test
mov
xchg
and
ja
sbb
adc
push
bound
call
adc
in
outsl
jb
dec
call
cwtl
data16
dec
sub
mov
cltd
and
test
sub
and
or
negl
call
cltd
test
mov
or
xchg
stos
sub
and
and
cmp
jmp
rcrb
je
rcrb
out
sub
outsb
ja
aam
or
inc
or
aas
push
mov
xor
call
xchg
aas
aad
ss
mov
adc
pop
stc
in
call
xor
clc
lret
xor
lock
das
pop
mov
call
divl
mov
mov
lds
scas
pusha
stc
repnz
call
movsb
lods
stc
repnz
call
pop
call
inc
rcrb
fs
das
jg
insb
call
je
gs
mov
pop
jl
push
xchg
dec
mov
adc
cmp
jb
pop
sub
mov
nop
sub
adc
pop
pushf
cli
lret
sub
in
fsts
adc
test
lods
int3
out
rcrb
mov
xchg
mov
xchg
mov
jle
jae
lret
loopne
in
call
push
in
inc
aam
xchg
lret
lock
movsl
jb
pop
clc
sbb
adc
sub
add
leave
or
or
leave
gs
loope
xchg
dec
in
adc
rclb
cs
and
and
sub
mov
jle
push
cs
dec
jae
push
push
mov
inc
dec
aaa
dec
in
cmp
xor
jb
pop
mov
sbb
xchg
lret
pop
add
fsubl
movsb
xorb
xor
fbld
je
mov
pushf
xor
or
xor
sahf
inc
call
and
mov
je
data16
js
adc
inc
dec
lcall
movsb
sbb
imul
mov
imul
cmp
in
sbb
inc
test
adcb
dec
cli
dec
lcall
mov
add
ljmp
out
shrb
sbb
or
mov
add
addr16
or
sti
shlb
xchg
je
jne
adc
sti
lcall
nop
push
sub
push
dec
xor
insl
fwait
loopne
add
inc
pop
pop
mov
add
mov
in
push
inc
aam
mov
pop
insb
push
inc
aam
bound
mov
add
or
insl
mov
test
out
push
dec
dec
dec
shrl
inc
scas
sbb
inc
shlb
dec
fsubrs
std
push
inc
xchg
xor
std
adc
cs
and
sbb
adc
xchg
inc
cld
mov
std
rcrb
mov
inc
std
push
ja
shrb
and
jnp
std
xchg
das
inc
add
or
sbb
shlb
call
adc
pop
cmp
adc
adc
bound
push
shrb
mov
or
xor
xchg
sbb
mov
and
mov
ss
mov
mov
ss
add
outsb
ss
inc
mov
mov
or
push
ljmp
mov
nop
jae
or
rclb
push
or
fsubrs
or
add
mov
flds
nop
mov
push
pushf
mov
test
add
cmpsb
lock
adc
mov
sbb
sbb
xchg
or
lds
sbb
push
ret
sub
dec
ja
inc
fstpl
adc
stos
push
mov
cmpsl
adc
lea
sbb
outsb
push
out
push
jne
and
fld1
or
cmp
ljmp
popf
mov
mov
jp
adc
mov
cli
inc
xchg
lds
adc
push
jne
arpl
repnz
in
push
mov
mov
dec
mov
or
jne
add
fwait
cmp
jne
push
cmp
mov
xchg
or
lods
pushf
and
fwait
and
sub
xchg
popf
or
add
mov
jo
push
call
add
mov
dec
je
dec
push
cmp
push
cli
ret
jne
andb
dec
lock
jne
lods
cmp
cltd
sbb
push
cmp
xor
inc
sub
add
and
xorb
movsl
inc
mov
or
jne
cs
add
add
xor
add
jnp
push
pusha
dec
push
bnd
rol
xchg
push
push
je
rclb
mov
adcl
jp
xor
jne
paddsw
mov
and
test
sbb
fwait
shlb
and
lcall
dec
call
rorl
sbb
pop
xor
pushf
je
cwtl
rolb
push
or
mov
cwtl
shrb
mov
xor
orl
xor
test
push
fldl
pop
sbb
pop
push
adc
or
das
leave
lods
and
jnp
pop
clc
shll
movsb
ret
add
nop
pop
addl
ja
add
or
fistps
inc
push
mov
insl
stos
jno
pop
rcrb
inc
addl
test
sub
shrb
mov
mov
dec
pop
imul
aam
jne
test
shrl
shll
shll
mov
or
sbb
sub
dec
repz
mov
mov
nop
pop
out
roll
popa
dec
test
mov
scas
ret
jge
insl
xor
or
gs
les
and
testl
dec
push
mov
int3
lea
pop
sti
jecxz
xor
add
and
sarb
adc
inc
xchg
test
testl
mov
not
add
add
and
dec
xchg
notl
or
mov
ret
popa
pop
insl
mov
pop
inc
sub
jno
cmp
xchg
add
notl
mov
outsb
xor
fldenv
push
je
push
xchg
testl
jbe
outsb
xor
add
sub
lock
push
testl
arpl
fs
mov
pop
test
push
cld
add
add
push
push
jl
imulb
add
jb
jge
add
mov
lea
push
mov
dec
push
push
je
mov
repnz
or
sub
xchg
cwtl
sub
out
nop
dec
and
and
mov
les
movsb
repz
ret
add
call
cmpsl
icebp
sbb
add
mov
fisttpll
add
add
andb
pop
js
sub
cmpsl
mov
into
je
add
jle
loopne
shll
and
jp
cwtl
cmp
xchg
cmpsl
adc
jmp
cmpsb
rcr
or
inc
imul
hlt
cmp
cmpsl
das
xor
cmpsl
or
imul
enter
inc
jno
add
out
pop
dec
cmpsl
and
push
jne
pop
scas
push
pop
xchg
add
mov
push
pop
sahf
cmp
sub
mov
push
add
in
adc
jmp
xchg
add
inc
dec
loop
nop
mov
test
or
fs
mov
fistpl
jo
add
out
cmp
xchg
add
xchg
test
mov
lea
cli
push
xor
or
pop
in
in
cmp
mov
jecxz
mov
push
out
je
push
xchg
cmp
adc
pop
adc
ffreep
addl
shlb
push
fldenv
xchg
scas
inc
sbb
movsb
test
push
jmp
imul
pop
dec
inc
dec
xor
xchg
xchg
add
xor
rcrb
cmp
and
loopne
jb
or
test
cwtl
mov
mov
or
xor
push
gs
mov
adc
inc
pop
or
or
mov
and
xor
xchg
mov
insb
xchg
or
mov
lahf
mov
fdivl
add
sahf
adc
inc
sbb
and
sahf
sbb
or
mov
adc
shr
hlt
xchg
cmpl
mov
int3
xchg
je
rcrl
jg
mov
sub
in
mov
popa
push
popf
les
sti
fldt
or
pop
je
push
call
jecxz
es
fdivrs
dec
dec
out
scas
pop
xor
fstl
out
jmp
or
shrb
scas
outsb
insb
movsl
hlt
xor
adc
sbb
fwait
orb
imul
jne
adc
sbb
push
or
lock
ss
movsl
scas
or
add
jb
cmp
movsb
jbe
add
lret
sti
fwait
rep
add
adc
insb
outsl
push
jo
repnz
xlat
fwait
push
xchg
mov
add
lret
clc
dec
mov
jbe
mov
adc
xchg
fwait
clc
sbbl
fwait
test
cwtl
insl
adc
inc
sub
sub
push
cmp
cmp
lock
sub
jge
adc
stos
cwtl
or
cmp
lcall
adc
xlat
ret
xor
adc
icebp
in
xor
pop
push
add
or
mov
push
mov
xor
stos
add
movsb
repz
mov
lret
call
add
repz
push
add
movl
mov
mov
int
mov
icebp
jbe
xchg
test
inc
push
cmpl
xor
aam
xor
out
or
cltd
adcl
sbb
add
mov
jmp
dec
scas
push
mov
cs
mov
or
sbbb
incb
mov
add
cmp
inc
mov
cmp
add
and
jns
out
or
sbb
ret
jns
out
mov
push
int
jns
ds
or
sbb
fcmovnu
repz
push
mov
pushf
pop
push
sahf
out
pop
lods
push
mov
out
jns
testl
nop
movsb
cmp
repz
push
xchg
jl
push
inc
iret
repz
cmpb
push
push
repz
sbb
repnz
jns
out
fmulp
mov
jnp
mov
ret
into
sbb
incb
add
es
loop
sbb
jns
mov
int
outsb
pusha
sbb
pushf
out
cmp
scas
lret
or
sahf
out
sahf
and
pop
data16
sahf
out
test
jns
out
fsubrp
decb
and
push
shr
data16
ja
jb
jle
sahf
mov
daa
sar
fdivp
push
loop
clc
adc
sub
cmp
aaa
jns
ja
je
fs
push
cmp
jns
pop
icebp
adc
daa
pop
mov
jbe
fsts
fiaddl
lahf
jae
jbe
push
cwtl
cmpsl
mov
xchg
das
out
iret
dec
test
imul
outsl
add
jbe
push
scas
test
sbb
sahf
sub
mov
add
pop
or
xor
sbbb
jbe
gs
jle
sub
sub
xchg
push
mov
fst
inc
or
dec
push
dec
ja
jb
movsb
or
pop
mov
js
dec
outsl
push
push
ja
xchg
add
inc
mov
adc
push
jno
daa
js
sub
xor
push
rcll
jo
xorb
ss
xor
add
adc
lock
bound
add
push
rol
addr16
xor
rep
or
mov
das
mov
mov
outsb
lcall
inc
sub
push
imul
mov
jecxz
dec
lds
jecxz
or
or
dec
mov
adc
push
push
pcmpeqd
jno
bound
and
imul
mov
jo
add
aaa
or
data16
adc
dec
mov
das
das
sub
fidivl
lock
je
test
fldenv
pop
arpl
inc
dec
aas
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
inc
push
cwtl
xor
and
pop
inc
pusha
roll
mov
movsb
pushf
pop
sub
pop
xor
xor
jae
mov
mov
dec
imul
addb
inc
jne
outsb
je
test
popa
mov
xor
je
jbe
ss
inc
xor
sub
sub
sub
ljmp
sub
xor
xor
jge
lahf
std
xor
xor
inc
xor
xor
ss
xor
cmp
fdivl
cmp
dec
out
in
xor
aaa
clc
inc
inc
xor
mov
push
hlt
xlat
add
in
xor
vmread
jo
cwtl
jne
test
xor
orb
cmp
xor
push
xor
outsl
lcall
insb
or
push
and
inc
aaa
adc
xor
inc
mov
dec
sahf
xchg
add
push
arpl
xor
loope
sahf
inc
push
inc
push
dec
and
cmp
ss
add
mov
or
and
dec
push
cmpsb
push
lds
mov
dec
lock
xchg
or
mov
lock
test
push
insb
rol
dec
hlt
imul
lods
mov
sub
inc
repz
fisubrl
jle
out
inc
out
adc
push
sub
out
in
cmp
push
mov
jl
aaa
mov
lods
sahf
add
movd
fsubr
cmpsb
push
hlt
subl
and
ret
insb
adc
mov
and
outsl
test
loope
xor
imul
je
je
xor
fwait
mov
xchg
cmp
add
pop
mov
sbb
xchg
add
add
mov
jp
popf
mov
rcll
cs
inc
neg
sarb
arpl
icebp
fsubp
inc
insb
mov
xchg
and
outsb
ret
adc
push
ss
cmp
les
sub
flds
jle
test
arpl
insb
sub
pop
jo
cltd
cmpsl
addl
lods
adc
jp
xchg
sbb
mov
out
push
and
jo
lret
jnp
pop
sub
mov
push
imul
bound
sub
daa
scas
scas
je
dec
fs
lods
popf
push
imul
push
jo
mov
adc
insl
sub
movsl
mov
inc
aaa
dec
call
jmp
pmovmskb
fwait
outsl
push
pop
arpl
inc
cs
push
push
push
add
mov
ja
fs
cmpsb
shlb
dec
fsubl
push
popa
imul
add
or
fcomps
fdivl
xor
movlps
mov
xchg
adcb
nop
rclb
repnz
outsl
inc
push
xorb
out
mov
xchg
pushf
add
sbb
push
rorb
pop
adc
dec
ja
pop
adc
les
xor
add
mov
add
jns
mov
orb
fdiv
xor
or
add
mov
das
pop
and
das
xchg
adc
imul
sbb
enter
xor
out
sbb
std
sbb
mov
das
push
pop
nop
cld
and
push
and
jns
jns
out
stc
jp
push
cld
fdivr
shrl
mov
push
mov
mov
out
les
ret
jl
mov
and
xor
stos
jg
data16
add
popa
and
pushf
out
push
ds
cmp
xchg
popa
xchg
es
add
lahf
add
adc
push
cld
or
in
sahf
out
fmul
les
movsb
xor
stc
call
mov
jl
insb
push
cmp
pop
mov
jns
out
dec
inc
inc
cmp
iret
repz
xor
sub
and
cmp
repz
adc
out
cmp
or
add
cld
or
hlt
call
sahf
out
mov
nop
jo
repz
out
adc
pop
int3
mov
repz
mov
sbb
cmpsl
stc
cmp
cld
push
fcom
les
out
mov
js
sub
cmp
out
aam
mov
ds
inc
sbb
add
call
sahf
out
mov
inc
faddl
inc
and
insb
sbb
pop
cmp
sub
fwait
repz
les
mov
push
push
cmp
inc
xor
negl
lret
sub
adc
add
fidivs
adc
inc
dec
cmp
icebp
push
push
dec
xlat
testb
inc
or
stos
xchg
sub
sub
insl
das
loopne
push
xor
or
shl
cmpsb
mov
test
mov
pop
fbld
sbb
bound
sub
ja
shrl
sub
pop
push
jmp
mov
es
mov
xchg
dec
stos
data16
stos
or
or
adc
fildl
adc
pop
js
shrb
decl
dec
lods
mov
pushf
andb
rolb
ret
jns
test
add
andb
add
pop
cmp
movl
fwait
out
pop
icebp
inc
mov
push
add
mov
pop
or
or
fs
das
rclb
jne
imul
test
icebp
push
mov
jo
push
gs
xor
or
jo,pn
bound
pop
daa
add
mov
es
mov
push
push
insb
das
inc
sub
push
outsl
jl
add
mov
cwtl
lahf
add
loopne
mov
cmp
cmp
fsub
ds
and
addr16
mov
rolb
test
add
testb
sub
aas
pop
enter
das
fcoms
mov
fs
aam
cmp
ret
enter
sete
int3
jb
jg
ljmp
js
and
and
fmuls
jns
pop
popf
inc
pop
in
rcr
cmp
xor
push
lcall
lret
clc
cmp
test
adc
or
jl
in
lds
push
xchg
sbb
inc
call
mov
adc
or
mov
xor
and
push
sbb
jmp
mov
in
rorl
iret
dec
mov
leave
fcmovnbe
mov
aas
jbe
mov
imul
aam
lods
xor
insl
insb
adc
fs
loopne
jns
ficoml
dec
adc
repz
daa
popf
mov
lock
enter
mov
loope
xchg
xchg
imul
cwtl
insl
lret
data16
movsb
mov
xor
push
imul
push
dec
imul
fadds
ltr
mov
fidivs
push
lcall
or
loope
xor
mov
les
push
push
add
push
outsl
ja
xor
pop
pop
test
xor
mov
push
sub
add
jno
fadds
out
daa
movsb
and
pop
arpl
push
inc
repnz
adc
lods
adc
lret
fucomip
cmc
pop
repnz
mov
mov
bound
dec
inc
mov
jb
insl
adc
adc
inc
add
adc
shrl
dec
pop
outsb
push
add
push
imul
mov
cli
add
jae
fmull
add
ret
rcll
test
ficoms
dec
jb
xor
ss
mov
out
das
mov
ficoml
push
sub
push
inc
out
mov
ret
addb
loop
sbb
shll
xor
add
mov
cmpsb
dec
mov
inc
push
mov
aam
scas
xor
das
push
mov
xchg
or
cmp
push
jo
jb
lret
lock
jns
imul
movsb
sbb
roll
push
push
lods
cmpsl
xor
jb
pop
adc
sbb
imulb
packuswb
cmp
adc
into
inc
imul
inc
pop
mov
inc
pusha
inc
and
or
mov
push
inc
pop
sub
and
xchg
xchg
mov
xor
sbb
pop
add
pop
in
sub
cmp
inc
add
fisubl
add
fbld
jne
xchg
inc
or
lods
mov
add
subb
xchg
push
mov
addr16
xchg
pop
push
xchg
and
dec
sti
pop
dec
jecxz
push
nop
pop
ds
call
inc
lahf
xor
mov
xor
dec
popa
dec
sbb
add
popf
xor
inc
cs
das
xor
adc
jle
and
sub
adc
cmp
or
lahf
outsb
xor
add
and
add
mov
aas
das
pop
outsl
push
mov
or
ljmp
out
push
add
push
lcall
orb
mov
add
push
dec
dec
dec
lds
ds
add
jns
imul
xchg
xchg
fs
lds
inc
mov
ss
mov
xor
push
outsl
mov
xchg
xchg
dec
and
add
stos
loope
add
push
and
xchg
add
cmpsb
cmp
add
sbb
lock
jae
mov
rolb
sub
add
imul
rorb
xorb
arpl
subw
push
jbe
mov
dec
pop
or
pusha
movsb
in
aas
inc
cmc
sub
mov
int3
sbb
mov
out
mov
jecxz
mov
gs
push
xor
fadds
addb
mov
lea
add
jo
add
add
xchg
add
inc
dec
andl
inc
jo
sub
dec
xchg
ds
data16
dec
pusha
push
jo
jno
sti
imul
pusha
add
cmp
and
fcmovbe
roll
in
xchg
inc
leave
xor
ljmp
dec
imul
add
jmp
pop
add
lret
xor
sbb
out
outsl
hlt
gs
ss
cmpsl
add
push
mov
loopne
loopne
imul
push
push
or
jns
insb
bound
inc
jae
adc
add
mov
jbe
testb
orb
add
push
adc
sub
or
rolb
xchg
mov
cmp
dec
jle
push
jae
das
sub
nop
push
xor
sbb
cmp
fbld
lret
fbld
insl
jge
jp
ficomps
mov
push
popa
xor
push
sub
std
fwait
xchg
inc
subb
aam
es
jg
jecxz
add
push
pop
in
cli
inc
add
sbb
jae
loope
inc
fisttps
jge
jg
pop
push
insb
push
sbbb
or
test
repz
mov
and
pop
xor
add
cmp
pop
mov
jns
pop
dec
mov
incl
bound
addl
pop
add
push
mov
inc
cmp
pop
xchg
js
inc
xor
sti
fsubrl
lods
add
sbb
pusha
jmp
pop
cmp
mov
cmpb
or
adc
add
andl
addb
push
and
inc
test
xchg
xorb
sub
mov
adc
adc
add
jns
cmpsl
stc
clc
out
lock
sahf
out
mov
iret
jnp
lods
test
pop
mov
iret
repz
nop
mov
jo
pusha
push
pop
push
sahf
out
sahf
inc
cmp
and
sbb
dec
repz
cld
in
lock
imull
loopne
fcom
jns
out
enter
cwtl
out
sahf
out
je
push
cmp
out
sahf
xor
and
adc
cmp
repz
cld
in
hlt
in
in
cmp
repz
mov
iret
repz
push
js
push
inc
jl
out
sub
and
or
jmp
push
add
push
inc
insb
dec
and
sub
sub
add
popf
loopne
divl
mov
push
mov
shl
incl
pmuludq
push
push
sub
pop
shl
rcrb
sub
sub
push
xchg
out
push
dec
add
or
pop
add
sub
jbe
add
xchg
adcb
mov
add
outsb
push
jg
fs
inc
dec
pop
add
mov
xor
pusha
xlat
bound
mov
test
sar
dec
or
nop
data16
das
sbbb
dec
add
dec
fstpt
dec
push
pop
jo
add
in
mov
inc
mov
push
inc
mov
outsb
shr
aam
rcrb
cmp
insl
xor
ljmp
xchg
mov
jecxz
cmp
insl
jbe,pn
and
lret
cld
fbstp
add
and
or
je
xorb
mov
jb
xor
push
add
and
mov
sbb
cmp
mov
sub
and
xor
add
adc
add
push
pop
jne
ss
xor
mov
popa
insb
into
jle
dec
mov
or
das
sti
ss
add
push
mov
lahf
ds
inc
add
inc
inc
add
fistpl
adc
fcmovnbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
ljmp
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
dec
xor
xchg
shll
inc
ss
ss
incl
aaa
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
sbb
cmp
sub
ret
add
push
lock
idivl
jmp
add
adc
and
dec
xor
xor
outsb
xor
mov
popf
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
out
xor
inc
sar
jge
mov
xor
xor
fidivl
scas
xor
rclb
clc
pushl
jecxz
call
xor
cmp
pushl
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
decl
or
dec
cmp
outsb
cmp
cmp
cmp
push
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
jmp
aam
fimuls
adc
cmp
cmp
cmp
cmp
pop
cmp
stos
and
ljmp
jae
mov
pushf
cmp
call
das
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
pop
or
std
out
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
xor
ljmp
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
decl
xor
pop
xor
xchg
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
mov
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
fwait
lcall
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
and
pusha
jbe
pop
push
pop
jg
or
cmp
pop
xor
push
xor
incl
pushl
call
xor
xor
xor
ret
xor
xor
jmp
pop
xor
lcall
clc
xor
xor
test
incl
mov
nop
xor
out
in
xor
scas
clc
xor
cmp
fistpll
pop
lods
cmp
cmp
lds
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
orb
cmp
cmp
cmp
push
lcall
and
cmpb
ds
aas
jmp
dec
pusha
outsb
xor
xor
mov
ljmp
ss
ss
xchg
cmp
cmp
mov
mov
jg
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
inc
inc
aas
push
mov
cmpb
aas
sarl
aas
in
out
out
in
pop
pop
lcall
movsb
xor
add
das
pop
cld
xor
xor
xor
fisubrl
xor
ljmp
and
xor
xor
mov
xor
xor
aas
cli
scas
std
xor
cmpsb
data16
ss
add
or
aaa
and
lods
loopne,pn
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
std
aaa
cld
decl
int
repz
xor
cmp
xchg
outsl
cmp
mov
call
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
inc
lock
mov
add
push
cmp
sbb
cmp
std
push
incl
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
clc
push
cltd
sbb
jbe
adc
sub
xor
cmp
ljmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
jg
xor
cmp
pop
cmp
mov
cltd
cmp
scas
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
cmp
aas
jge
mov
movsl
aas
stos
aas
mov
mov
shlb
pop
xor
lcall
sahf
xchg
les
fidivl
in
jmp
xor
xor
xor
xor
mov
xor
xor
xor
xor
ljmp
xor
xor
xor
mov
jl
cmpsl
xor
xor
jge
sbb
lcall
xor
xor
ja
xor
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
jmp
sbb
scas
cmp
outsb
subb
cmp
cmp
mov
xchg
cmp
mov
lcall
cmp
cmp
cmp
ljmp
mov
jle
push
or
xor
clc
lcall
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
cmp
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
inc
add
jbe
cmp
sbb
ds
ds
pop
mov
aas
push
mov
insl
decl
mov
xor
xor
xor
jl
jg
push
scas
fiadds
aaa
ret
add
aaa
repnz
or
cmp
pop
cmp
jge
call
out
cmp
cmp
jbe
imul
cmp
cmp
cld
cmp
mov
and
cmp
push
cmp
cmp
fdivrs
push
aas
jne
mov
or
push
ss
mov
fwait
xor
xor
dec
or
repnz
aas
xor
idiv
mov
mov
fsub
adc
es
dec
ss
ss
jmp
movsb
ss
enter
in
and
cmp
cmp
cmp
mov
dec
adc
lock
ljmp
push
stos
sarb
jo
jne
test
mov
ret
cmp
mov
cmp
cmp
jae
aam
fnstsw
jecxz
imul
mov
push
cmp
xchg
cmp
cmp
pop
sarb
inc
cmp
cmp
call
mov
and
push
cmpb
cmpsl
ds
ds
add
ds
idivl
add
sbb
addr16
loope
insl
ljmp
xor
jg
in
xor
pop
xor
xor
cmp
or
xor
xor
xor
xor
jg
pushl
mov
xor
push
lcall
push
pushl
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
lcall
pop
mov
cmp
mov
cmp
cmp
adc
pop
cmp
cmp
cmp
cmp
cmp
adc
pop
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
pusha
icebp
push
aas
test
fdivrl
loop
out
out
pop
rclb
outsl
ret
sub
jne
adc
xor
jae
cmp
sub
pushl
jg
xchg
xor
xor
xor
mov
mov
add
ljmp
lcall
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
lock
cmp
cmp
cmp
cmp
ljmp
cmp
scas
xor
aaa
mov
incl
xor
xor
lcall
decb
lods
sarb
xor
fdivl
in
test
lods
xor
xor
xor
cmp
sub
sub
xor
mov
cmp
inc
cmp
dec
cmp
push
rcrb
jo
xor
fidivs
and
cmp
push
mov
push
mov
scas
ret
enter
aam
fdivrs
fcoml
pop
jge
in
call
dec
cld
push
add
mov
cmp
pop
stos
sbb
and
and
sub
jecxz
jo
sub
xor
cmp
inc
cmp
clc
xchg
dec
cmp
pop
cmp
cmp
insb
cmp
je
cs
add
jl
cmpb
push
mov
nop
clc
mov
xor
cwtl
mov
sub
xor
inc
ret
dec
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
sar
loope
sub
aas
fdivrs
loopne
clc
jbe
push
or
or
hlt
cmp
pop
bound
clc
xor
xor
test
incl
dec
xor
test
mov
nop
xor
xor
fmull
mov
mov
xor
mov
xor
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
std
decl
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
jg
mov
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
call
lcall
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
or
nop
aaa
xchg
aaa
cwtl
into
mov
call
loope
dec
mov
mov
mov
aaa
enter
rorb
dec
cld
aaa
aam
fdivs
fcompl
in
loop
test
xor
aaa
hlt
add
or
rclb
cmp
sbb
cmp
out
ret
fdivrl
call
clc
ss
inc
js
pop
cmp
cmp
cmp
cmp
es
cld
in
ljmp
cmp
cmp
cmp
cmp
cmp
push
cmp
subb
cmp
mov
cmp
cmp
mov
cmp
push
add
mov
push
rcrb
adc
std
mov
push
mov
jne
call
sahf
repnz
aas
pop
mov
add
dec
daa
adcb
lret
icebp
addb
xor
leave
mov
dec
jae
lcall
roll
add
add
pusha
mov
mov
dec
sbb
pop
cmpsb
add
add
fildll
or
xchg
gs
adc
nop
data16
bound
mov
out
adc
sub
jo
and
and
dec
mov
inc
repnz
pushf
movsb
cmp
xchg
lods
fists
inc
and
add
filds
inc
inc
aas
roll
pop
pop
dec
xor
sbb
xchg
ljmp
gs
les
mov
add
popf
jbe
bound
or
push
inc
mov
out
aad
xor
lock
dec
mov
xchg
lea
sbb
pop
in
push
out
jle
adc
pop
sbb
jne
push
mov
jmp
mov
les
or
fcmovnu
les
xchg
addb
movsb
mov
dec
mov
enter
rcr
loopne
adc
cmp
stos
push
push
push
cmp
or
outsb
xor
das
inc
xor
cltd
adc
or
pushl
insb
sub
clc
add
pop
push
push
add
sbb
push
popf
sub
or
roll
and
pusha
or
and
jns
inc
mov
xor
pop
outsl
sub
or
sub
cmpsl
icebp
ja
je
cmp
outsb
int3
and
es
add
cs
das
dec
loopne
aaa
add
clc
or
dec
mov
std
outsb
add
inc
mov
mov
cmp
and
and
std
xchg
call
mov
lea
jne
rcr
insl
jge
push
popf
pop
inc
lahf
xchg
cltd
xchg
add
fildl
sbb
adc
mov
xor
jae
mov
aaa
push
mov
dec
adc
push
or
adc
lea
insl
mov
mov
jb
cmpb
xchg
sarl
jl
adc
add
insl
fcmovu
scas
sbb
aaa
or
inc
push
push
mov
movsb
call
push
adc
pusha
xor
push
mov
add
roll
enter
pop
add
inc
ljmp
in
int3
add
inc
cmp
andb
jo
pusha
fld1
aas
jmp
pop
jmp
xor
in
nop
add
cmp
mov
mov
ud0
jge
push
jb
xor
and
jne
mov
mov
inc
and
mov
divb
push
adc
cwtl
or
jmp
sti
mov
subb
mov
mov
std
cmpsb
push
sub
push
push
loop
lahf
and
pop
orb
es
ret
mov
nop
lcall
pop
fmuls
push
adc
outsb
or
movsb
jl
xor
xchg
movsb
out
push
jnp
push
dec
jmp
mov
sub
sub
or
jge
aaa
push
and
xchg
or
xchg
fcompl
mov
inc
cmp
out
subl
push
xchg
popa
call
aad
or
scas
add
inc
mov
lea
jo
movsb
shr
add
and
clc
adc
hlt
ret
sbb
pop
das
add
pop
pop
or
add
cmpb
or
pop
pop
sarl
pop
add
dec
loope
jnp
popa
xchg
mov
cmpsb
shrb
and
fsubr
pusha
or
lock
loope
in
out
sub
or
jge
out
call
push
sbb
insb
add
or
pop
je
push
rorb
push
mov
push
sbb
inc
xchg
addl
rcpps
lcall
and
sub
or
mov
xchg
pop
pushl
adc
stos
sub
rcrb
pop
hlt
sub
rorb
pop
xchg
loopne
je
adc
or
ret
mov
lea
push
lea
mov
inc
popa
adc
add
xchg
sbb
push
mov
es
cmpsl
or
mov
pop
or
lock
push
insb
inc
adc
mov
inc
or
in
or
loop
push
ja
gs
aad
clc
idiv
dec
and
out
or
jbe
in
sarl
xor
or
add
aad
je
adc
pop
mov
and
imul
add
sbb
mov
cmpsb
xchg
mov
ljmp
sbb
cwtl
add
mov
mov
and
mov
aas
adc
push
ja
mov
mov
sar
and
add
movsl
adc
or
inc
push
imul
jecxz
push
in
arpl
add
imull
add
sub
mov
add
push
add
cmp
je
xchg
pushf
sub
xchg
adc
mov
rcll
and
push
inc
rcrb
pop
inc
and
rcl
and
sub
xlat
adc
inc
or
sbb
xlat
inc
or
and
xlat
and
aaa
sbb
xlat
test
xlat
ja
movsl
pop
jl
mov
pop
xlat
ror
inc
mov
cmp
xor
out
and
mov
mov
cmp
fwait
mov
jae
dec
testb
fildl
and
or
imul
or
rcr
or
in
pop
enter
lods
mov
adc
sub
push
sub
repnz
sub
sub
mov
adc
pmaxsw
or
push
arpl
fsubs
push
mov
push
jmp
lea
aam
lock
mov
jmp
pop
ret
inc
popf
in
or
cmp
sub
mov
mov
pushf
jmp
inc
lret
mov
lea
sub
mov
and
xchg
push
push
lret
mov
outsb
adc
cs
ret
lods
jae
add
subl
loope
add
clc
push
xor
ret
pop
lret
mov
or
push
push
xchg
or
pop
daa
xchg
scas
xchg
xorl
or
adc
cmp
out
scas
sbb
xor
xchg
push
ds
rorl
push
pop
cli
popa
arpl
das
mov
add
das
ret
inc
sbb
inc
dec
add
ret
push
pop
inc
cmp
cwtl
push
push
inc
sbb
lret
mov
mov
pop
sbb
or
pop
test
xor
cmp
gs
add
adc
ss
mov
adc
mov
pop
mov
scas
fcoml
dec
mov
or
lret
jb
and
ja
outsb
cs
inc
mov
nop
cmpb
jp
push
dec
jo
push
lret
mov
cmovno
xor
inc
cs
jb
sahf
adc
jmp
pop
scas
aam
inc
dec
push
call
mov
imul
andb
and
cmpl
jo
inc
push
pop
xor
gs
push
add
test
les
aaa
and
inc
sbb
inc
inc
rorl
push
mov
stc
inc
sbb
push
push
or
or
dec
test
popl
das
insl
inc
jg
inc
test
lods
sbbl
js
or
sbb
sbb
adc
mov
adc
mov
cmp
or
xor
and
pop
and
or
xchg
xchg
and
adc
call
or
mov
mov
add
dec
push
mov
dec
inc
mov
mov
mov
mov
add
inc
jns
add
mov
push
shr
andb
ds
pop
mov
pusha
mov
inc
mov
push
add
ja
adc
xchg
dec
ret
inc
xchg
dec
test
xor
xchg
movsl
pop
jno
insb
into
jo
mov
fnstcw
lret
pop
push
mov
push
sub
sbb
inc
cmp
inc
fisttpll
les
popf
mov
cmp
nop
nop
sub
pop
in
adc
rolb
hlt
or
xchg
dec
jne
out
mov
xchg
fs
sahf
out
pop
push
dec
inc
cmp
mov
cltd
xor
repz
jmp
pop
mov
mov
cmpsl
sbb
lret
and
roll
aam
outsl
ja
pop
nop
xor
push
push
jl
pop
mov
add
mov
mov
iret
repz
push
fadds
loopne
lock
add
push
sub
cmp
push
out
fimuls
inc
sub
xor
inc
sbbb
pop
out
mov
movsl
leave
out
mov
sub
xchg
ds
or
and
xor
add
sbb
sarb
cmp
test
sbb
hlt
inc
imul
adc
mov
mov
rcl
in
jns
push
jl
xchg
loopne
adc
ja
pop
xor
pusha
mov
sub
mov
hlt
push
out
dec
mov
test
gs
pop
push
cmpsl
fimull
xchg
xor
sub
out
or
cmp
xchg
or
sub
sub
add
sub
add
add
sub
imul
or
inc
shlb
sbb
xchg
sub
dec
lcall
or
add
jae
sub
sub
sub
sub
sub
sub
sub
xchg
push
leave
test
cmp
sbb
or
or
mov
add
push
sub
adc
dec
jp
add
pop
rolb
lret
add
out
adc
or
sub
pop
rcrb
pop
lods
hlt
cmp
or
adc
ret
insb
dec
in
fsts
sahf
sbb
rclb
addb
aaa
push
and
inc
psubsb
push
xchg
outsb
xor
inc
and
mov
shrb
or
mov
pop
mov
sub
and
shlb
push
je
add
mov
mov
mov
sbbl
mov
inc
add
inc
cs
inc
iret
push
mov
inc
rcrb
inc
mov
inc
or
push
sub
iret
inc
shl
sbbb
push
aaa
adc
adc
inc
aas
and
mov
xchg
test
fisubl
pop
rolb
inc
xor
je
pop
les
inc
loopne
sbb
push
inc
jmp
into
mov
mov
out
shrl
ret
call
or
adc
or
mov
add
jp
mov
xor
push
inc
dec
xchg
ficoms
repnz
insl
out
jo
inc
je
xchg
push
mov
jae
es
pop
fsubl
adc
and
mov
mov
or
lock
pop
adc
push
add
js
pop
jge
jno
js
roll
arpl
jno
jl
and
outsl
cmp
imul
fdivl
xchg
jns
sbb
or
cltd
js
jns
daa
adc
cmpb
fiadds
insb
sub
sbb
icebp
cs
into
daa
inc
bound
sub
sbb
xchg
js
xor
sbb
xchg
jo
inc
jns
xchg
das
lret
jns
ljmp
leave
or
pop
jns
push
ret
scas
pop
mov
push
cmc
xchg
dec
aam
sbb
xor
aam
fbstp
addr16
sub
xor
mov
mov
addr16
shll
jmp
outsb
cmpsl
shll
sbb
scas
addr16
mov
cmpsb
mov
or
loopne
inc
mov
push
or
sbb
out
aam
dec
gs
sbb
dec
dec
bound
addr16
sbb
xchg
addr16
or
inc
enter
sbb
shll
pop
aam
mov
lcall
push
push
ja
pop
sbb
lock
les
sbb
fisubs
inc
or
push
aaa
add
jne
mov
push
sub
in
fisubs
mov
jl
daa
sbb
mov
lret
inc
outsb
mov
loopne
inc
inc
xor
adc
fnsave
fisttpl
test
mov
lods
push
test
push
testl
pop
shlb
fs
mov
and
dec
mov
cs
push
adcb
shll
lret
sbb
addr16
push
es
jne
ret
das
push
nop
mov
xchg
lock
or
dec
or
or
imul
mov
mov
mov
jnp
and
inc
mov
sbb
jnp
aaa
mov
push
rorb
addr16
and
test
cs
data16
and
ja
push
dec
jl,pn
loopne
mov
and
subl
adc
bound
mov
dec
nop
outsb
mov
pusha
andb
rcrb
adc
nop
fidivs
mov
adc
and
xor
xorb
sub
push
adc
loope
nop
into
sti
sub
not
mov
push
fcompl
cld
js
mov
or
push
stos
hlt
mov
movsb
mov
arpl
fs
cmp
inc
fs
dec
addr16
sbb
or
xchg
dec
nop
mov
or
fnsave
and
fistpll
mov
jo
xor
mov
cmp
mov
mov
dec
stos
mov
cwtl
and
outsb
xchg
mov
dec
pop
call
and
xorb
movsb
adc
mov
aam
bt
jo
movsb
movsb
mov
rcrb
aam
scas
sub
mov
in
and
dec
loop
cmp
sbb
shlb
cmp
mov
shlb
pop
adc
aad
aad
lock
out
push
xchg
jl
and
or
inc
pop
sub
pop
call
mov
aam
push
nop
fidivs
aad
in
inc
xor
lahf
enter
mov
and
adc
xchg
std
sub
dec
andb
cs
cmpsb
xor
dec
fidivs
push
repnz
inc
add
mov
repnz
mov
sarb
call
and
das
mov
hlt
or
and
sub
fwait
in
sbb
fisttpll
adc
lods
mov
shll
xorb
push
mov
adc
mov
mov
lcall
and
push
mov
pop
xchg
jns
dec
lock
inc
add
and
sahf
push
lret
push
jmp
mov
mov
rcrl
mov
sub
add
or
fstpt
add
pop
mov
add
fs
cmp
push
enter
hlt
push
cmpb
and
add
lahf
call
and
push
shl
jnp
nop
xlat
dec
leave
sti
loopne
out
inc
sub
xor
xchg
jmp
imul
movsb
xchg
pop
sbb
movsl
pusha
pop
nop
xchg
xchg
or
mov
pavgb
dec
mov
stos
or
pop
hlt
mov
sbb
je
adc
stc
mov
stc
jne,pn
mov
xor
sbb
mov
push
mov
jecxz
call
fcoml
mov
or
js
mov
jo
push
stc
sbb
popa
outsl
inc
mov
in
dec
push
call
inc
mov
cmp
je
stc
adc
fstp
mov
leave
sub
cld
clc
adc
frstor
popa
mov
dec
mov
daa
and
mov
sbb
xor
jmp
daa
fnstsw
xchg
movsb
sub
icebp
fcompl
andb
push
push
xorl
lret
cmp
movsb
jmp
xor
aaa
pop
movb
jne
xchg
xchg
iret
bnd
add
fcmovnu
fisttpl
add
enter
invd
aas
mov
mov
out
xchg
push
adc
mov
aas
pushf
push
test
aam
adc
mov
adc
call
test
mov
xor
test
or
mov
pop
push
pushf
pop
nop
add
mov
sub
jmp
test
jle
sbb
ret
call
rcrl
mov
lret
pop
rclb
hlt
je
or
lret
jge
push
xor
and
xchg
popf
dec
idivl
js
jl
addb
mov
pusha
add
andb
or
lahf
shlb
shll
repnz
lock
mov
lret
rol
sub
fldl
dec
push
sarb
mov
stos
shll
add
shrl
cli
lret
cmp
jo
pop
xchg
pop
shll
sbb
shrl
stc
shl
mov
mov
sbb
cmp
or
fld
jne
xchg
inc
lea
nop
flds
adc
lock
xchg
inc
push
adc
pop
push
push
test
pusha
sub
sub
and
daa
pop
cmp
dec
in
xchg
pop
shl
sbb
adc
push
fadds
andl
xor
pop
ja
ret
lahf
sarb
mov
into
cmp
sub
nop
pushf
mov
cmp
hlt
xchg
mov
and
add
mov
push
adc
rolb
sbb
xor
adc
jo
xor
adc
adc
adc
mov
adc
dec
push
add
fldcw
aam
xchg
daa
xchg
roll
fnstcw
push
jb
rcrl
dec
pop
test
sarb
pop
mov
or
sbb
movsl
shrb
xchg
xchg
adc
inc
or
pop
push
pusha
add
add
pop
std
or
or
std
lock
arpl
cmpsl
pop
enter
mov
dec
adc
das
mov
pop
adc
rclb
xchg
out
insl
stc
outsb
mov
cmp
pusha
pop
jecxz
add
int3
insb
cmp
inc
adc
add
dec
adc
xchg
xchg
outsb
or
push
imul
rorb
pop
fadds
adc
pop
jne
out
mov
inc
cli
sub
shrb
pop
lock
rcr
push
sub
jl
sub
mov
jbe
sub
adc
jnp
in
leave
push
aad
sbb
and
cmp
or
push
sub
push
dec
fcoml
push
lret
and
pushf
orb
mov
ss
or
cmpsb
in
ds
pop
cmp
cmpsl
inc
xor
call
dec
in
dec
push
jne
push
cmp
sub
inc
mov
pop
push
sarb
lods
dec
mov
xor
lcall
outsl
loopne
pop
insb
push
add
dec
dec
out
mov
lds
sbb
lds
jnp
cmp
add
cld
xchg
sti
mov
dec
vcmppd
fcmovnb
aas
inc
test
aaa
test
gs
adcl
sbb
adc
in
dec
sahf
in
mov
or
dec
fsubl
sub
inc
and
ljmp
sbb
inc
mov
sbbl
pop
or
add
repz
lods
and
sub
pop
addb
mov
cmp
jmp
cmc
loop
pop
fcoml
pop
push
xchg
inc
sub
cli
iret
aad
mov
push
pop
add
push
mov
in
mov
hlt
push
mov
pop
push
rorb
pop
mov
pop
push
adc
aaa
sub
fsubl
mov
mov
xchg
mov
or
rcl
frstor
ja
sbb
mov
scas
fisttpll
outsb
pop
sarb
and
cmp
jne
jb
xor
test
das
subb
push
and
sub
jecxz
jmp
cmc
es
cmpsb
jb
jb
pop
dec
and
lea
pop
test
nop
mov
pop
dec
or
loopne
enter
mov
xor
addr16
pop
add
ss
pop
pop
lea
adc
jmp
adc
call
lret
leave
in
loopne
add
xchg
leave
jecxz
int3
lret
inc
stc
xchg
mov
lret
pop
jns
jns
or
push
bound
pop
mov
inc
mov
cmp
and
sbb
add
sti
mov
loopne
das
das
das
das
fdivrs
sarb
mov
mov
das
cwtl
mov
cmpb
mov
push
jb
adcl
ds
xor
sbbl
adc
push
jb
mov
and
mov
nop
sbbl
mov
enter
xchg
mov
in
pop
cmp
push
pop
mov
push
mov
cmp
inc
push
xor
sbb
and
mov
nop
sub
jecxz
fdivrs
mov
sbbl
lods
mov
push
jb
mov
and
mov
nop
sbbl
mov
enter
xor
mov
int
in
in
mov
clc
es
daa
shll
and
das
inc
or
mov
mov
cld
in
movsb
sbb
ja
xor
daa
int
add
sbb
jb
mov
enter
adc
and
pushf
xor
daa
sbb
jns
mov
stc
mov
dec
xor
inc
xor
xchg
daa
add
ret
mov
xor
mov
orb
jb
in
and
mov
orl
add
dec
mov
aad
xchg
loopne
dec
in
xor
and
inc
and
dec
push
and
mov
mov
xor
sub
mov
sub
arpl
push
sub
adc
ret
cmpsb
mov
neg
shlb
push
mov
hlt
imul
testl
mov
icebp
sbb
xchg
aas
pop
out
push
inc
sub
test
inc
add
and
test
inc
xchg
sub
aam
or
mov
adc
mov
jb
mov
test
inc
iret
lcall
push
xchg
int3
inc
dec
sub
loope
dec
sub
xor
sbb
add
inc
adc
rolb
hlt
dec
adc
repnz
push
aam
and
push
dec
js
mov
dec
mov
push
xchg
push
test
pop
sbb
jl
xchg
and
mov
movaps
fbstp
les
fistpll
ja
push
xchg
dec
leave
sarb
je
sub
mov
mov
cmpsb
sub
pop
adc
xchg
fcoml
gs
and
push
sub
inc
mov
inc
mov
sbb
xchg
dec
divl
dec
nop
arpl
mov
inc
jmp
test
and
test
mov
sub
mov
dec
and
scas
push
das
xchg
and
dec
xchg
scas
mov
sbb
gs
or
push
lcall
adc
inc
test
int3
and
adc
test
sub
dec
mov
xchg
dec
jnp
sarb
pop
lret
dec
push
pop
dec
xor
push
or
and
sub
and
dec
in
jbe
push
inc
mov
and
inc
sub
pop
dec
aaa
add
shlb
push
les
dec
sub
fwait
mov
je
dec
sub
call
inc
inc
dec
pop
hlt
cmp
sub
xor
dec
loopne
xor
and
int3
fadds
inc
add
imull
fdivs
dec
cld
sub
cmpsl
dec
les
dec
dec
mov
push
xchg
mov
dec
mov
gs
dec
test
sti
insl
fdivr
ficoms
lret
dec
dec
sbb
inc
sbb
es
ss
jmp
lods
js
mov
sbb
sbb
xchg
sbb
adc
mov
adc
shrb
dec
dec
xor
inc
sbb
inc
call
test
dec
push
sub
lods
movsl
ret
adc
dec
and
xchg
dec
fdivs
mov
sub
dec
or
add
dec
sub
jmp
xlat
and
lret
xor
cmp
gs
add
mov
out
xchg
add
or
loopne
insl
mov
je
nop
test
dec
pop
movsl
xchg
nopl
cmp
xchg
sub
xchg
or
sub
scas
inc
pop
xor
sub
sbb
in
cs
jbe
clc
and
or
cmpsb
inc
test
inc
pop
jp
cmpsb
jg
mov
dec
ret
sbb
xor
cmc
cmp
pusha
or
xchg
sub
add
je
mov
lea
mov
rcl
adc
adc
pop
lret
scas
subb
pop
dec
pop
sbb
dec
dec
adc
and
lea
loopne
inc
pop
dec
push
push
lret
dec
push
sub
ljmp
cltd
lock
cmpsb
orb
sbb
dec
das
xchg
inc
pop
dec
bnd
lret
dec
loopne
jb
sub
rcrb
adc
add
push
mov
dec
adcb
aad
mov
mov
out
push
add
dec
sub
rcll
mov
xlat
and
dec
push
xor
dec
loop
lcall
adc
inc
sub
jg
adc
xchg
dec
mov
inc
push
stos
dec
mov
mov
dec
pop
ret
sub
stc
or
cmp
dec
pop
sbb
push
xor
pop
cmp
dec
xchg
repnz
mov
sub
push
jno
adc
xorl
movsl
subl
dec
pop
jmp
dec
addr16
pop
pop
adc
loope
loop
mov
adc
ja
jb
xchg
dec
inc
out
and
dec
or
shl
xchg
push
pop
inc
dec
jp
sbb
mov
dec
sub
and
inc
sub
push
or
out
inc
test
gs
popa
mov
stos
addl
and
and
adc
out
xor
pusha
push
andb
inc
sub
fs
push
scas
rorl
jnp
jne
cmpsl
xchg
push
push
and
adcb
inc
xchg
mov
sbbb
add
jmp
sbb
mov
fimuls
sbb
add
insl
push
popa
sub
lcall
cmp
test
mov
outsb
jne
in
popf
in
mov
xor
mov
jns
mov
clc
gs
push
cltd
push
test
dec
cld
push
jp
and
add
jnp
int3
mov
and
dec
repnz
cmp
lods
addr16
xchg
jmp
jbe
bound
fdivrl
mov
cmp
test
repz
cmpsl
push
mov
test
repz
push
fs
movsb
int3
lcall
or
jns
ss
pop
outsb
out
sahf
out
xchg
cmpsb
ret
repz
hlt
add
cmp
repz
push
cmp
repz
repz
mov
stos
fiadds
sub
push
iret
repz
jo
xchg
mov
aam
into
repz
lock
cld
fnstsw
cmpsl
push
adc
dec
add
jnp
add
pop
dec
repnz
data16
lea
daa
adc
adc
push
int
sbb
nop
shlb
sbb
push
adc
jl
lcall
adc
sarl
sub
push
outsb
cmp
jl
fnstcw
push
lea
sbb
dec
mov
add
test
pusha
mov
push
mov
mov
pusha
or
adc
cmp
mov
push
adc
push
adc
cmpsl
jne
xchg
sbb
add
cmp
out
nop
xchg
and
lcall
push
pop
sahf
enter
xor
push
push
and
jns
jnp
jns
jp
push
cld
adc
pop
fwait
shlb
lock
or
adc
add
jo
pop
xchg
ret
inc
xor
mov
and
pusha
xchg
out
sahf
daa
xor
dec
inc
xor
int
jns
sbb
or
hlt
xchg
icebp
cmp
repz
in
repz
repz
int3
enter
cmp
mov
movsb
cmp
repz
pushf
cwtl
xchg
nop
repz
repz
repz
js
jo
push
cmp
pop
pop
push
push
repz
repz
dec
inc
inc
xor
stc
cmp
sub
adc
nop
lock
out
sahf
fdivrl
dec
repz
cld
fdivrs
repz
pusha
pop
dec
out
cmp
and
adc
in
sahf
out
sahf
les
jns
jge
push
nop
fs
lea
out
int
xor
sbb
add
mov
inc
adc
add
mov
or
pop
push
test
or
or
std
daa
stos
pop
notl
xor
push
push
add
jbe
mov
jo
xor
jne
shrb
add
scas
cmpsb
xor
dec
es
ja
xchg
push
mov
ss
add
sti
adc
jo
or
dec
into
push
nop
lods
in
dec
inc
inc
xchg
sub
dec
jge
xchg
out
cmp
xor
xor
pop
or
xor
pop
bound
insb
sarl
ret
push
pop
inc
adc
imull
xor
xor
jne
cmp
ja
push
push
pandn
fwait
xor
gs
xchg
ret
add
mov
pop
mov
mov
lcall
pop
add
fisubl
adc
push
add
push
and
push
sbb
add
inc
jo
iret
cmp
aaa
dec
lahf
fiadds
push
xor
repz
pop
pop
adc
fdivs
sbb
xor
jge
sub
jg
push
and
push
cs
push
aas
jb
inc
pop
enter
cs
mov
fsubrs
inc
pop
jge
es
dec
xor
cmp
ret
mov
pop
inc
inc
fcomps
sbb
dec
jae
popf
sub
dec
mov
popa
mov
aas
in
dec
enter
xchg
pop
pop
test
mov
movsb
jg
push
dec
shlb
inc
lods
out
aas
mov
sub
fsubl
adc
xchg
aam
push
lods
int3
xchg
jl
pop
les
xchg
nop
imul
mov
jne
sbb
mov
inc
push
movsl
cmp
jns
aaa
add
add
je
dec
dec
ret
jecxz
sbb
fiadds
iret
in
adc
jbe
jo
jbe
ud2
jno
int
xchg
jno
push
and
add
nop
cli
dec
cmpsb
pop
pop
leave
in
and
push
js
les
xchg
movsb
cmpsb
adc
adcb
imul
cld
subb
add
aas
inc
adc
mov
pop
push
gs
pop
dec
ds
arpl
add
and
and
add
pop
add
arpl
push
mov
add
sbb
mov
jmp
sbb
push
push
jmp
mov
lods
adcl
jmp
xor
dec
add
int
dec
imul
xchg
push
pop
sub
mov
ret
ret
mov
sbb
mov
mov
cwtl
push
stos
mov
insb
sub
push
stos
push
adc
adc
imul
xor
xchg
and
add
das
insb
lods
or
mov
sbb
divl
loop
xchg
sub
lahf
aas
imul
or
cmpsl
dec
adc
mov
icebp
cwtl
popa
pavgw
mov
mov
mov
test
or
rorb
mov
sbb
roll
pop
test
xchg
out
mov
lods
test
sahf
out
sahf
pushf
xchg
mov
iret
repz
pusha
pop
pop
push
push
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
sbb
cmp
ja
or
push
cld
xchg
hlt
call
loopne
enter
jecxz
iret
mov
xchg
cmp
jnp
dec
mov
test
jl
insb
repz
repz
dec
cmp
jns
jne
sbb
xchg
mov
jns
out
sarb
sahf
mov
xorb
iret
repz
push
inc
cmp
sub
xor
out
or
xchg
in
into
repz
enter
jo
inc
les
dec
dec
pusha
imul
pop
push
mov
push
dec
lock
mov
mov
enter
sub
mov
push
jne
pop
das
rorb
fs
ja
cmp
inc
add
and
xchg
cs
call
leave
pop
jg
in
imul
pop
jbe
mov
ret
push
mov
cmpsl
mov
and
addr16
pop
mov
aas
sub
push
xor
pop
adc
incl
rolb
or
jecxz
add
loopne
xor
mov
mov
call
sub
iret
xor
xor
sahf
xor
xor
xor
xor
xor
aaa
fbstp
xor
clc
outsb
sbb
cmp
cmp
cmp
notb
cmp
bound
xchg
xor
mov
decl
cmp
cmp
xchg
mov
cmp
mov
and
pop
lcall
jecxz
data16
aas
fs
imul
aas
jecxz
call
dec
sbb
sub
inc
xor
mov
cmp
push
shl
loope
mov
div
in
jg
xor
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
jecxz
nop
icebp
xor
cli
xor
xor
dec
fisttps
push
test
mov
xchg
xor
xor
adc
sbb
sbb
jmp
jg
xor
xor
xor
xorb
xor
jecxz
in
repnz
ss
xor
xor
xor
xor
xor
fists
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
inc
sbb
xor
xorl
out
push
sbb
aaa
leave
jp
aaa
cmp
insb
cmp
and
xchg
leave
jbe
cmp
sbb
sub
sbb
and
and
sub
xor
jp
mov
incl
mov
repnz
cmp
pop
xchg
aas
dec
cmp
test
pushf
xor
cmp
sbb
filds
dec
cmp
cmp
cmp
inc
idivb
cmp
cmp
sbb
xor
cmp
nop
jbe
cmp
icebp
ljmp
cmp
ds
ds
ds
cmp
dec
xchg
mov
mov
movsl
imul
and
inc
xor
xchg
lock
jle
xor
and
and
lret
mov
aam
fimull
xor
jecxz
popa
cld
xor
cmpsl
repz
maxps
add
test
lret
push
add
clc
dec
mov
mov
aaa
in
decl
xchg
sub
cmp
xor
clc
xchg
js
jle
xchg
xchg
xchg
push
mov
mov
ret
adc
js
into
in
adc
push
xchg
cmp
mul
mov
xchg
jb
cmp
cmp
outsl
xchg
or
push
cmp
jne
fisttps
jnp
subb
cmp
cmp
loope
test
lods
lret
xchg
es
in
jmp
lock
mov
ja
sbb
xchg
xor
jecxz
add
sar
insb
cmp
cmp
cmp
cmp
cmp
sub
ds
decl
sbb
ds
ds
clc
es
adc
and
dec
aas
mov
aas
call
gs
outsb
xor
jno
test
icebp
jo
out
xor
inc
daa
lds
mov
xor
pop
popa
js
xor
xor
xor
shlb
inc
xor
insl
mov
cmpsb
xor
test
cli
xor
ja
mov
int3
loope
xor
ss
ss
aaa
jnp
mov
inc
mov
or
cmp
cld
jo
lea
push
cmp
xchg
cmp
push
ljmp
lcall
icebp
sbb
push
mov
mov
pop
cmp
outsl
sbbl
ss
sub
jno
ja
push
enter
cmp
cmp
cmp
cmp
cmp
cmp
scas
push
mov
ja
cmpb
cltd
cmp
aaa
lret
cmp
cmp
sbbb
sub
lret
call
ret
leave
cmp
inc
outsl
fmull
xor
lock
xor
adc
xor
and
cmp
cmpsb
xor
xor
jecxz
outsl
pop
add
xor
xor
mov
out
or
adc
sbb
das
ss
mov
mov
aaa
pop
mov
push
ss
mov
lret
jg
fdivp
cmp
cmp
cmp
mov
jg
mov
bound
imul
cmp
cmpsb
cmp
cmp
cmp
add
or
cmp
aas
iret
aas
loope
or
add
xor
xor
xor
popa
xor
test
xchg
mov
fbstp
dec
inc
movsl
mov
push
push
aaa
jge
mov
mov
hlt
xor
lcall
jecxz
aaa
gs
cmp
cmp
cmp
cmp
or
sahf
pop
in
jp
ret
xor
out
adc
lock
mov
cmp
xchg
xchg
icebp
push
into
sub
cmp
jb
push
shrb
jnp,pn
mov
lcall
daa
or
dec
pusha
or
or
adc
sbb
and
nop
xor
enter
xor
or
and
les
je
test
sbb
jp
mov
mov
inc
inc
xchg
push
hlt
ljmp
adc
jmp
stc
int3
mov
mov
cmpsl
mov
mov
mov
fs
xchg
icebp
aad
les
xor
into
fmuls
loopne
call
out
adc
cld
xor
xor
adc
xor
push
popf
ss
inc
xor
test
xor
pop
mov
insb
fnsave
sub
je
jl
cli
xchg
inc
nop
xor
movsb
xor
rcrl
mov
cmp
xchg
stos
rorb
xor
xchg
in
xor
xor
and
mov
mov
nop
js
or
mov
xor
or
movsb
icebp
jo
inc
shlb
in
sbb
mov
dec
inc
xchg
cmp
ret
repnz
cmp
outsb
cmp
sub
sub
add
pop
dec
sub
pop
pop
jo
mov
xor
shlb
xor
xor
xor
jg
mov
xor
dec
lret
test
incl
jb
xor
lock
sbb
and
xchg
mov
ss
dec
ss
add
ficomps
leave
jo
sbb
stos
sbb
push
shlb
mov
xor
add
sbb
xor
lret
and
xor
cld
cmp
inc
xor
pop
dec
jecxz
mov
xor
xor
and
xor
mov
sarb
xor
xor
xor
xor
femms
mov
cwtl
mulb
pop
push
test
gs
jo
pushf
xor
xchg
mov
sub
push
cld
push
pop
jo
nop
ljmp
addl
pop
fdivr
aaa
inc
pop
dec
add
inc
dec
in
and
test
fbstp
inc
clc
add
add
or
in
add
pop
pop
push
or
or
or
or
or
adc
aaa
cmpsl
and
adc
add
pop
dec
mov
adc
adc
adc
add
data16
or
pop
vunpcklps
rolb
or
imul
adc
dec
inc
push
out
add
sub
outsl
inc
mov
jnp
cmpsb
jb
imul
add
add
incl
adc
pop
and
xor
inc
mov
adc
xor
cmpb
fsts
sahf
inc
xor
mov
inc
sub
sub
or
mov
inc
fcmovb
mov
sub
andb
mov
push
movsb
jnp
nop
sub
adc
mov
pushf
into
add
adc
add
pop
scas
cmp
adc
jo
pop
lods
push
adc
pop
popa
jno
and
adc
mov
pop
xor
lods
or
xor
adc
loope
icebp
mov
add
xorl
scas
dec
mov
cmp
add
js
add
std
or
jg
incl
adc
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
jmp
lahf
mov
movsl
jecxz
cli
pop
mov
jmp
push
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
lcall
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
icebp
call
fisubrl
in
mov
orb
int3
lcall
mov
push
jg
pop
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
call
lods
scas
xchg
test
aam
and
sbb
sarl
and
in
call
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
push
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
ljmp
and
lea
pop
cwtl
int
arpl
push
out
or
push
push
sahf
pop
clc
sti
jg
jno
ljmp
mov
call
sarl
xor
hlt
and
xchg
jmp
rcll
in
inc
sbb
add
call
insl
jb
mov
or
push
mov
sub
pop
mov
jl
shll
jp
push
gs
jg
hlt
in
in
outsl
call
paddsb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
decl
imul
scas
fadds
in
sub
jbe
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
incl
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
in
dec
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
sti
decb
xchg
in
add
inc
adc
loope
fisttpll
inc
aaa
dec
outsl
out
aas
std
cli
push
push
push
idivl
cmp
pushl
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
pop
add
push
scas
cmpsb
orb
mov
sti
notb
cmp
js
jmp
xchg
pop
clc
pop
hlt
lret
stos
imul
add
lea
jg
gs
lcall
xor
imul
outsl
adc
ret
das
pop
pop
pop
sar
incl
cld
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
ljmp
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
ljmp
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
lcall
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
push
movsl
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pushl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
call
mov
adc
adc
push
jo
pusha
imul
add
mov
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
incl
daa
add
jae
shrb
shlb
out
aas
stc
add
out
gs
mov
pushl
fidivrl
lock
adc
pop
cld
addl
adc
and
pop
repnz
cmp
fmull
enter
jecxz
aas
clc
aas
lahf
scas
sub
in
pop
mov
sub
mov
dec
outsb
mov
cld
inc
mov
push
sbb
push
inc
or
testb
push
pop
jg
add
jg
mov
mov
aad
test
mov
mov
iret
push
std
mov
out
jbe
push
sbb
stos
icebp
pop
incb
jno
mov
cvtpi2ps
push
inc
jecxz
sbb
sarl
adc
js
fdivr
loopne
and
clc
xorl
mov
imul
dec
ret
imull
mov
mov
aas
mov
fsubrl
cmpxchg
and
decl
mov
clc
xchg
pushf
mov
repnz
and
mov
mov
lahf
or
push
rcrl
in
xor
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
outsl
lcall
mov
inc
sti
arpl
daa
std
or
sbb
mov
lcall
incl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
push
cld
lds
fidivrl
jg
stos
pop
iret
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
call
outsb
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
add
call
ljmp
bound
pop
outsl
xchg
inc
test
in
jge
popa
xchg
das
rolb
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
add
decl
xchg
aad
loop
lahf
mov
or
out
lcall
in
in
pop
shl
cld
mov
adc
stos
pop
jg
pop
shrb
sar
ljmp
sarb
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
ds
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
imul
or
inc
pop
xor
rorb
and
add
cmpsl
push
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
clc
fldt
lcall
fists
sbb
lock
in
jmp
clc
lods
add
out
sbb
aaa
clc
push
std
mov
mov
or
mov
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
mov
loopne
test
out
rolb
pop
or
or
inc
in
cmpsb
rorl
aas
lods
leave
inc
lods
movsb
or
cmp
add
mov
jl
mov
add
call
cmpsl
lret
pop
fwait
mov
cmp
jmp
mov
pop
sti
stos
or
lock
jmp
hlt
dec
mov
xlat
inc
inc
sbb
lods
jg
mov
sub
addr16
nop
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
push
mov
das
incb
lock
pop
pop
div
cld
testl
fs
sbb
stc
lahf
loope
jae
jmp
addb
jge
jg
pushl
out
xchg
add
out
icebp
mov
loope
mov
clc
inc
mov
cmpsl
popf
sti
mov
fbstp
cmp
outsl
das
rorl
out
rcrl
popf
js
data16
decb
faddl
outsl
decb
dec
adc
call
xor
cltd
add
arpl
mov
cmp
int
add
push
pop
aaa
std
mov
dec
dec
inc
sbb
mov
mov
aas
icebp
ret
sbb
push
jnp
int
jmp
sbb
adc
shrb
mov
stos
mov
loope
loope
mov
lahf
jp
sbb
inc
sti
dec
add
xlat
rcrl
jbe
xchg
fldenv
iret
fdivrl
xchg
lcall
inc
push
rolb
mov
pop
cmpsl
xchg
addb
into
sarl
push
icebp
fildll
out
jg
jno
ret
cmp
arpl
out
lcall
sbb
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
ljmp
or
sbb
xchg
imul
cmp
je
outsl
jmp
std
mov
daa
jmp
faddl
mov
sub
mov
lock
stc
push
dec
out
fstpt
mov
enter
dec
adc
add
fsts
inc
and
cmp
add
add
push
sti
pop
inc
enter
add
or
mov
mov
test
and
incl
add
movl
push
or
inc
nop
rclb
jne
jmp
out
js
loopne
xchg
mov
test
sahf
enter
jge
pop
pop
outsl
insb
sahf
lret
push
jle
dec
mov
mov
popa
jne
jnp
jge
push
scas
sarb
pop
dec
or
dec
fs
sarb
push
or
int3
loopne
cmp
mov
shll
adc
mov
and
dec
jae
pop
mov
push
add
cli
pop
xchg
push
sub
or
outsb
daa
xchg
ljmp
ret
arpl
js
cmp
out
adc
lret
and
repz
and
ljmp
pop
in
das
stc
orb
int
aam
xchg
add
push
mov
and
and
or
loopne
int3
sahf
dec
mov
xorb
lcall
and
sahf
lods
shlb
or
xlat
test
adc
xor
push
stc
dec
lcall
decl
cmpsb
xor
xchg
sub
flds
dec
cld
cli
sbb
sbb
and
scas
rol
push
clc
cmp
jb
or
mov
stos
or
into
fimull
test
or
cmp
xor
push
outsl
ss
decl
ret
sbb
lods
cmp
adcb
adc
inc
xchg
jo
addr16
mov
incl
aad
adc
shl
dec
mov
test
mov
ret
fists
enter
xchg
cmp
pop
loope
in
pop
movsb
add
clc
mov
incl
add
adc
sti
daa
ljmp
xchg
push
inc
incl
loopne
adc
jo
adcb
xchg
imul
dec
or
aaa
ret
inc
xchg
js
ss
inc
jnp
jo
mov
mov
mov
movsl
xlat
loop
iret
jnp
mov
arpl
lcall
pushf
fmull
call
scas
sub
xor
arpl
in
iret
les
repnz
stc
aaa
testl
mov
mulb
in
xchg
movsl
adc
loope
adc
pushl
sbb
cmp
fbstp
divl
cltd
xor
jmp
xor
insb
inc
inc
test
sbb
nop
insb
jp
shl
mov
jne
cld
xchg
call
lret
mov
mov
lcall
adc
inc
hlt
iret
jno
push
push
ljmp
call
jno
add
outsb
mov
ds
shl
xchg
mov
arpl
fimull
aaa
xchg
mov
push
stos
sub
call
dec
adc
call
pop
aas
pop
pop
movsl
dec
cmp
sbb
or
ds
or
in
adc
jo
sahf
pop
xor
adc
into
cmp
push
jmp
imul
shl
sub
fs
dec
or
xor
push
popa
mov
decl
cmp
fs
and
xchg
aas
rol
push
inc
pusha
adc
mov
call
and
cmpsl
mov
xchg
lret
stos
shrl
fiaddl
xchg
loope
mov
sbbl
das
sti
je
push
sub
repnz
lret
cmp
ljmp
pop
cmp
and
sahf
inc
dec
stos
lock
or
vshufps
std
incl
pushf
subb
bound
addr16
call
sbbl
pushf
mov
js
testl
bound
call
dec
or
cltd
push
sub
mov
data16
in
mov
mov
dec
dec
pushf
push
sbb
aas
dec
jmp
mov
pop
fwait
icebp
mov
sahf
rcrb
sbb
push
shl
pushf
xor
inc
subb
adc
loopne
pop
lods
cmpsb
testb
cmp
and
xchg
mov
test
adc
popa
nop
sahf
jp
jl
mov
lret
jg
inc
outsb
jp
sub
and
or
rclb
decl
aaa
mov
sbb
subl
decl
adc
into
js
pop
mov
test
test
mov
daa
movsl
xchg
idiv
inc
push
daa
jae
cmc
test
stc
ja
xor
cld
jge
pop
loop
pop
leave
lods
mov
jae
sbb
jmp
test
shrl
aas
sbb
pop
jne
mov
imul
int
repz
jg
jmp
fdiv
ljmp
and
jle
aas
xor
jae
pop
cld
incl
scas
dec
into
xchg
push
cwtl
cmpsl
jae
aam
icebp
jmp
cmp
mov
adc
fsubrl
jb
mov
pop
inc
sbb
test
scas
mov
add
add
loop
sti
pop
adcb
sbb
ds
xor
sub
push
cvtps2pi
and
fcmovb
mov
lcall
les
or
jbe
inc
pop
mov
and
mov
push
popf
cwtl
jo
movsb
and
call
jp
add
mov
in
mov
in
adc
arpl
mov
xchg
icebp
rcrb
mov
adc
test
leave
lahf
adc
pop
cmp
pop
jl
incl
out
cmp
out
push
add
int
or
push
fstps
lcall
outsb
lret
sti
dec
push
push
jns
divb
jle
pop
dec
mov
decl
ja
or
pushf
push
fcomps
std
jnp
and
scas
rep
mov
inc
fbld
cmp
cmpsb
mov
test
pop
lock
xlat
ret
mov
mov
sbb
cli
lret
imul
outsl
fstl
dec
aas
cli
aam
xchg
test
scas
ljmp
sar
iret
jecxz
ret
sbb
push
mov
dec
in
cmp
divl
test
repnz
pop
mov
jo
mov
push
dec
fs
adc
jmp
cmpsl
out
gs
jmp
lock
sahf
dec
or
cmc
push
cmpsb
jg
and
sub
aas
sub
jg
fisttps
ficompl
cmp
mov
std
out
clc
incl
test
mov
xchg
fisttps
dec
popa
inc
dec
inc
mov
mov
jb
loopne
scas
xor
jg
subl
xchg
lcall
movsl
xor
pop
jo
mov
and
js
orb
in
dec
pop
sti
jl
push
repnz
push
push
adcb
insb
and
outsb
dec
jge
jge
add
fwait
call
jecxz
jecxz
jmp
test
imul
fsubr
scas
cmp
into
test
ljmp
aad
dec
fcomps
lcall
ret
cmp
ja
pushf
cmc
xor
pop
jmp
mov
push
jnp
jge
jmp
test
mov
mov
jne
xchg
jmp
push
aad
das
test
cmp
or
ljmp
mov
aas
sbb
sbb
outsl
pop
fs
int
jp
pushf
mov
push
repnz
and
xor
mov
cmp
cmp
push
adc
enter
inc
inc
clc
push
test
addr16
mov
imul
jmp
lcall
cli
fmul
int
shrl
lcall
inc
pop
lcall
mov
ds
inc
loopne
les
int3
mov
pushl
sub
lcall
arpl
or
pushf
push
or
inc
ljmp
xor
mov
stc
jb
js
jp
cmp
decb
mov
lcall
hlt
cmc
add
xchg
adc
push
lahf
setns
popf
or
stos
call
decl
int3
jne
or
movsl
pop
sbb
testl
aad
mov
call
and
rcr
cltd
rolb
jns
js
outsl
inc
in
lea
int
icebp
aaa
enter
inc
mov
push
mov
stc
cmpsl
xor
add
lods
mov
scas
lea
out
test
imul
in
ljmp
ljmp
test
sahf
sub
dec
xchg
rcrb
cs
mov
int3
idiv
lcall
push
xlat
mov
adc
push
mov
imul
xchg
pop
repnz
cli
pop
push
push
std
dec
fs
cltd
push
jg
and
aaa
sbb
push
nop
and
inc
xor
dec
fistps
movsl
lcall
or
xchg
jle
hlt
fnsave
push
cmpsb
fcmovnu
mov
adc
dec
in
jmp
push
pop
mov
push
nop
adcb
adc
idivl
jns
push
inc
stos
and
xchg
inc
ret
iret
lea
push
sti
enter
adc
add
lock
push
push
pop
out
prefetch
stos
inc
mov
nop
out
add
stos
sub
inc
fbstp
xchg
outsb
push
or
clc
xchg
xchg
and
mov
fwait
mov
cmpsl
int
jne
jo
sti
sub
aaa
cld
incl
or
and
pop
stos
xchg
call
mov
xlat
cmp
incl
xchg
mov
push
pop
ror
push
test
cwtl
jl
arpl
xchg
jmp
movsb
adc
jmp
dec
test
adc
out
xchg
sub
adc
and
cmc
fldcw
stos
xor
pop
cmp
add
fnstcw
iret
pop
cli
loopne
icebp
lods
les
push
pushl
outsl
ljmp
lahf
movsl
cli
repz
lret
mov
cld
add
jg
test
outsl
call
mov
rcrb
in
shlb
xor
cli
sahf
gs
lea
jl
mov
xchg
dec
loopne
dec
jle
xlat
cmp
push
inc
and
pop
push
xchg
jo
pop
inc
in
jg
adc
outsb
std
xor
inc
mov
out
fcoml
push
add
xchg
push
enter
rclb
push
xchg
daa
clc
jno
and
popa
or
jp
jne
lahf
pop
divb
push
ljmp
push
push
out
mov
outsl
sbb
test
dec
data16
pop
sub
pop
cwtl
adc
popa
xor
mov
or
sbb
pop
loope
jmp
and
cmpsb
lds
data16
mov
push
loop
fcomps
test
push
aad
ljmp
xchg
pop
outsb
adc
ret
in
fcoms
push
fldenv
mov
cmp
outsl
jmp
push
fmull
iret
sbb
movl
js
pop
add
or
and
xchg
lcall
lcall
aas
push
mov
pop
or
movsb
dec
sbb
insb
or
aaa
rolb
cld
fsubrp
fprem
mov
or
out
inc
int3
imul
arpl
stos
pushl
or
sbb
aad
mov
into
push
stos
cwtl
sub
in
pop
test
call
shl
mov
fdivrl
in
js
xor
pop
test
incl
das
into
push
movsl
jno
and
ficompl
stos
sti
fcoms
xor
lods
pop
jb
out
leave
push
sbb
cld
cmpsb
cmp
addr16
test
dec
mov
dec
dec
adc
mov
pop
cmp
icebp
aad
add
push
into
aas
into
inc
adc
rolb
mov
jb
or
clc
sbb
mov
adc
fsubl
sub
mull
fnstenv
sbb
jg
ret
outsb
nop
aam
ss
mov
arpl
test
bound
mov
dec
jmp
jnp
cltd
jmp
xchg
and
inc
sub
sbb
cmp
sbb
call
pop
inc
lcall
sbb
add
mov
popa
shrl
sarb
stc
ret
fdivrl
cwtl
stos
mov
mov
paddusb
jnp
sub
aaa
xchg
mov
sbb
incl
leave
jo
in
stos
pop
pop
stos
lds
lea
xchg
lds
or
jl
lahf
or
call
leave
jbe
iret
mov
int
xchg
or
ja
into
sbb
inc
in
inc
incl
pop
jp
out
mov
aas
mov
or
adc
cltd
push
mov
xchg
int
xchg
cmp
sbb
test
pop
mov
mov
test
and
call
inc
clc
cmpsb
inc
ds
ret
push
mov
jmp
cli
into
sbb
xchg
jg
mov
lock
push
adc
stos
loop
lcall
loopne
aad
std
pushl
inc
movsb
cmp
notl
repnz
mov
std
add
dec
jg
imul
scas
shlb
jg
hlt
jl
xlat
xchg
dec
fcoml
fidivs
lret
xchg
fdivrs
out
xchg
xor
push
cwtl
fdivr
mov
rcr
loopne
xchg
mov
ljmp
add
ljmp
cmp
xchg
mov
adc
call
xchg
movsb
out
imul
lret
cmp
jo
sub
xchg
mov
lods
call
dec
test
sub
push
loopne
lcall
or
and
mov
mov
call
lcall
cmp
jns
xlat
xlat
push
push
mov
cmpsl
cld
nop
sub
ljmp
in
fstpl
insb
jns
pop
fmulp
pusha
xchg
in
pop
scas
fidivrl
call
pusha
sub
push
or
pop
dec
push
sbb
jnp
mov
daa
test
pop
loop
outsb
xlat
mov
add
xchg
stc
xor
lcall
scas
mov
adc
mov
sub
inc
push
idiv
mov
mov
loop
insb
mov
xchg
pop
cld
cmp
ja
cmc
inc
mov
stos
int3
add
jnp
int
add
mov
imul
push
and
out
pop
push
ss
lods
test
into
outsl
xor
sub
cwtl
cmp
clc
mov
aam
jne
test
test
push
dec
clc
popa
ret
and
pushf
jnp
dec
call
std
lcall
test
test
xchg
int3
jmp
ficoml
stc
pop
mov
leave
mov
decl
icebp
sbb
imul
imul
call
popf
mov
loopne
fdiv
mov
mov
mov
inc
fwait
xchg
stc
wrmsr
jmp
or
xchg
dec
fsubl
mov
ret
jle
mov
mov
outsl
add
dec
add
mov
cld
ljmp
inc
dec
adc
fbstp
mov
cmpsb
cmpsl
cwtl
lods
xchg
dec
xchg
mov
mov
xchg
cmp
adc
aaa
xrelease
fstp
xlat
aad
clc
or
dec
jmp
pushl
mov
jbe
loop
xor
push
and
inc
mov
fistl
daa
mov
cltd
pop
adc
mov
and
in
mov
cmp
ljmp
mov
adc
test
cltd
dec
mov
decl
arpl
push
shlb
mov
lret
mov
adc
mulb
cmpsl
imul
pushl
mov
stos
adc
cmp
sub
ret
insl
sub
add
cmp
mov
push
push
pop
push
stos
add
ss
push
sbb
or
cs
lods
jmp
sub
ljmp
jmp
mov
inc
mov
pop
int
pusha
push
pop
roll
mov
ljmp
je
xchg
insl
mov
loopne
fdivrp
xor
pop
test
mov
decl
ret
aad
jnp
cmp
pop
test
ljmp
fstpt
scas
and
ljmp
inc
pop
jae
add
mov
in
mov
jge
mov
cmp
into
jne
xor
in
mov
inc
mov
scas
in
test
and
fldpi
insb
addr16
inc
ret
push
and
mov
mov
incl
sub
aad
add
les
fisttpll
pop
xchg
inc
aam
data16
loope
and
ljmp
sub
add
call
cmp
inc
mov
scas
mov
movsl
mov
pushl
popa
mov
inc
mov
cmp
inc
jns
sbb
xchg
sbb
jmp
push
push
pop
xchg
adc
xor
in
lcall
out
std
ret
and
xor
dec
sahf
ss
aad
dec
clc
inc
lahf
fcmovnb
pusha
lcall
pop
lods
xor
into
rep
jge
cli
mov
fadd
xchg
xor
lea
cli
stos
pop
lret
jmp
push
outsl
lds
out
adc
mov
lcall
lcall
jecxz
arpl
sbb
push
mov
inc
jb
xchg
xchg
mov
rolb
fldenv
es
mov
jecxz
and
movsb
sub
add
call
les
cs
decl
adc
insl
imul
push
cltd
mov
dec
lcall
xor
outsl
les
pop
in
mov
aaa
mov
roll
and
cmpsb
sbbb
icebp
sub
mov
cs
sub
jl
sub
push
inc
cmpsl
inc
mov
cmp
ds
imul
mov
jmp
lds
xchg
mov
mov
lcall
adc
jb
lods
xor
movsb
push
and
bound
loopne
push
lahf
repz
adc
decl
cwtl
xchg
imul
push
ror
xor
jecxz
das
pop
adc
mov
pminub
xchg
mov
cmp
popa
lds
incl
add
push
mov
cld
decl
push
sahf
push
es
stc
sbb
adc
das
repz
or
leave
mov
cmp
cmp
scas
out
daa
cmpsl
lahf
mov
pop
cmp
aas
push
or
jbe
fwait
stc
sti
into
cmpsl
sbb
fisubrs
outsl
and
shlb
fwait
repz
outsl
jg
jmp
push
xchg
insl
arpl
jbe
adc
cmpsb
adc
pop
or
sub
inc
mov
or
rol
push
pop
mov
and
add
lret
ljmp
repz
out
push
repnz
cld
incl
loope
xchg
mov
mov
xchg
imul
xchg
std
daa
ret
jg
push
cmp
dec
xchg
out
mov
add
loope
scas
dec
add
ljmp
in
fwait
mov
sahf
hlt
add
outsb
enter
clc
jecxz
mov
gs
outsl
nop
or
das
push
xor
mov
incl
test
xorb
jnp
jp,pn
inc
pop
rolw
add
sbb
xchg
mov
inc
imul
cmpsl
push
cmovno
push
out
cmp
dec
and
dec
push
daa
aad
xchg
mov
jg
bound
inc
mov
cli
dec
inc
add
jmp
test
push
jmp
sbb
cmp
jns
ret
andl
lea
add
push
jl
mov
ret
incl
scas
sbb
test
sub
cmp
repnz
push
cmp
decl
cmpsb
cmp
xor
sbb
xor
sahf
andb
push
jl
lcall
mov
or
lock
outsl
push
or
rclb
mov
test
data16
call
in
mov
movsl
xor
mov
lcall
iret
into
add
les
xchg
cmp
mov
sub
mov
xor
pop
jg
lock
xchg
mov
cmp
sub
jmp
or
and
jno
mov
xor
fstpt
ljmp
sti
subb
and
push
push
and
xlat
push
sub
mov
mov
lret
sbb
pop
adc
repz
call
jnp
into
jg
in
aam
pop
loope
lret
or
loope
iret
dec
test
xchg
cs
decl
arpl
or
inc
fisttps
cmp
mov
test
jl
out
mov
shrb
inc
inc
adc
in
and
and
mov
pushl
lods
leave
push
movsb
add
push
out
cmp
and
push
adc
jg
call
sub
daa
jno
fsub
adc
adc
cwtl
adc
and
mov
jmp
fsts
nop
fimull
lds
nop
xlat
mov
pop
mov
out
dec
mov
and
ljmp
mov
in
push
out
cmc
ljmp
roll
mov
lahf
push
dec
cmp
pushf
loop
ret
loope
mov
dec
repz
pop
xchg
cld
test
adc
inc
fldl
push
mov
hlt
mov
repnz
mov
mov
popa
mov
or
lcall
lods
mov
mov
int3
insb
and
adc
mov
ret
decl
sbb
xor
and
imul
fs
stc
inc
push
sahf
gs
add
call
xor
ror
xor
cmp
dec
roll
jmp
adc
sub
cmp
aaa
and
jmp
out
push
aad
mov
ljmp
ficomps
ljmp
fidivrl
stc
mov
test
adc
cmp
scas
outsl
adc
insl
mov
inc
sub
popf
outsb
test
jmp
in
dec
sub
stos
shrl
mov
cmc
mov
loope
rorl
push
xor
or
mov
loopne
in
subl
xor
pop
jl
das
outsb
push
pop
popf
mov
cmc
and
scas
jmp
xchg
iret
pop
jl
mov
pop
fdivrl
inc
xchg
inc
pop
ljmp
es
mov
outsl
ja
xor
fdivrs
leave
and
ds
in
or
int3
xchg
pushf
jg
mov
xlat
ffree
jp
pop
xor
jbe
sub
or
fdivr
decl
mov
daa
mov
fildll
mov
cltd
dec
in
jmp
mov
dec
aas
clc
testl
adc
ja
jg
mov
in
mov
cmp
push
lds
call
fucomi
in
sbb
xor
jns
add
cmp
mov
or
or
push
std
adc
icebp
dec
dec
cmp
lock
xchg
or
cmp
mov
nop
scas
clc
outsl
cli
adc
or
sbb
or
sbb
repnz
inc
lret
jecxz
jmp
mov
xchg
mov
dec
pop
push
cltd
pop
jno
dec
jmp
dec
xchg
push
cld
mov
dec
je
into
ret
jb
jle
sub
cli
lahf
jns
xlat
push
sub
cli
ljmp
inc
lds
fmuls
jle
dec
xchg
jmp
fmull
imulb
or
mov
daa
jg
mov
add
stos
and
mov
loopne
jg
call
fisubl
loop
out
js
nop
xchg
dec
dec
mov
pop
mov
mov
call
sti
cmp
ret
push
pop
aaa
jecxz
mov
add
inc
insb
add
ja
dec
sub
out
fsubs
std
movsb
imul
popf
mov
scas
add
mov
or
scas
mov
das
ror
push
jo
jno
pop
cmc
mov
sahf
xor
call
adc
sbb
pop
imul
das
and
pop
push
lahf
insb
cmp
js
adc
mov
jmp
add
xchg
jns
scas
sub
sti
fwait
lcall
incb
aam
ss
out
out
push
mov
in
es
and
mov
lcall
imul
fldt
pushf
test
insb
push
loopne
push
daa
cltd
fildl
xchg
faddl
decl
mov
add
dec
push
jp
cs
bound
jne
mov
pushl
pop
pushf
pusha
pop
popf
inc
push
gs
call
inc
test
mov
adc
jmp
fs
push
imul
xor
lods
inc
subb
arpl
mov
mov
cmp
lods
dec
cwtl
ljmp
addb
pop
jl
sub
call
fcmovnu
pop
fnsave
push
pop
in
mov
rorl
in
movsb
mov
pop
fistpl
lcall
dec
insb
xor
shll
incl
xor
inc
pop
shrl
xchg
push
mov
fidivl
and
fs
sbb
jbe
mov
sbb
pop
mov
decl
enter
sahf
scas
jo
jae
push
push
mov
test
les
push
lcall
dec
iret
jge
xor
dec
gs
mov
or
mov
push
push
cli
ljmp
sub
mov
pop
inc
pushf
pop
insb
sub
add
ljmp
jo
jg
mov
lahf
sbb
pop
fdivp
fidivrl
addl
add
inc
mov
xchg
jle
push
xchg
bnd
dec
ret
sub
mov
push
add
dec
xchg
pop
clc
sub
jg
cld
pop
into
push
ret
push
fsubl
pop
inc
in
and
sub
xchg
decl
in
lcall
jle
jge
xchg
mov
sub
lods
inc
popa
sbb
out
pushl
jge
mov
cli
sub
aas
sbb
push
push
push
jnp
push
mov
push
and
pop
jge
xchg
push
cwtl
mov
pop
xchg
clc
push
sub
jecxz
xchg
jp
adc
incl
cmp
clc
sbb
cltd
fsubr
clc
push
lahf
test
fcomip
or
push
aaa
call
sbbb
les
imul
incl
fs
sbb
rcrl
sbb
std
add
loope
cmc
shll
cli
fbld
stos
fcmovnb
loop
out
mov
sbb
nop
pop
jg
movsl
lea
dec
imul
jbe
sub
mov
or
mov
mov
cltd
xor
jae
imul
mov
push
jmp
sbb
fimull
sub
xchg
mov
mov
cmp
lcall
sbb
repnz
lcall
insl
gs
addr16
jb
repz
ja
jp
out
mov
jmp
sahf
dec
clc
mov
pop
popf
pop
in
fcompl
pop
sub
xchg
cmpsb
into
test
in
aaa
sbb
fidivrl
mov
cmp
fisubrs
push
std
sub
adc
repnz
lsl
lcall
jo
and
roll
and
shr
ljmp
push
push
xchg
mov
xor
fmuls
andl
push
push
repz
xchg
and
fstp
push
inc
arpl
push
rolb
xchg
mov
pop
and
mov
bound
pusha
adc
or
out
ret
sbb
pop
lock
cmp
bound
ljmp
stos
cmpb
orb
popf
inc
ret
mov
pop
jne
mov
sbb
scas
mov
roll
ljmp
xchg
mov
mov
int
ja
pop
add
sbb
ret
and
mov
mov
cmp
lock
and
aam
mov
test
in
call
cli
mov
sbb
pop
push
loopne
imul
int
sub
shlb
incl
jae
jb
nop
addl
stos
rcrb
int3
add
add
sti
mov
sti
pop
divps
sti
jno
shrl
fst
jecxz
pop
out
les
dec
add
lock
popl
imul
mov
stos
pop
lret
sbb
jg
clc
pop
sti
adc
popa
cli
xchg
sbb
jmp
jno
adc
ss
pop
ljmp
mov
test
stc
sti
inc
lods
cmp
popa
cmp
hlt
in
mov
pop
pop
popf
mov
ljmp
lock
push
arpl
push
call
out
in
scas
pop
sti
push
xchg
sahf
idivb
jmp
lret
bnd
pop
outsl
popa
mov
call
test
pop
mov
arpl
pop
mov
or
mov
pop
sub
push
enter
stc
adc
sti
pushf
cmp
push
add
ja
push
xor
inc
incl
xchg
sbb
or
push
insl
pop
xor
mov
pushl
push
mov
test
stos
pop
xlat
dec
ret
mov
xchg
cmp
mov
loope
les
mov
popa
sbb
xchg
push
adc
fwait
cmp
punpcklbw
cmp
fs
xor
call
test
les
sub
pop
inc
mov
push
fwait
and
das
jne
mov
inc
and
jg
adc
sub
sbb
xor
fstl
popf
or
cli
pushl
sbbb
dec
inc
adc
push
fwait
adc
and
rcll
ljmp
mov
ja
sti
adc
adc
in
pop
or
andl
shll
cmpsb
inc
mov
jbe
pop
push
pop
push
mov
jae
jl
jno
jns
int3
sbb
mov
shlb
lcall
movsl
aam
cmp
add
inc
push
xorl
fiadds
inc
mov
pushl
jmp
movsb
jb
mov
xchg
mov
in
adc
inc
cmc
ret
mov
incl
sbb
loopne
and
scas
dec
cwtl
or
lock
mov
sbb
jg
xchg
call
movsl
mov
push
test
jb
fwait
movsl
fldenv
or
out
test
push
lods
int
push
pusha
scas
or
gs
pop
pop
cmp
movsl
fmul
jb
les
repz
push
stos
mov
and
dec
adc
push
stos
sbb
lods
jae
and
pushl
mov
cmp
jle
cld
push
repnz
dec
sahf
cmpsb
inc
cmp
sub
sbb
xchg
std
pushl
fcoms
jge
lret
fcmovb
push
jmp
fdivl
mov
sub
or
and
daa
inc
or
decl
jge
xchg
cs
in
in
addr16
pop
into
mov
shrb
mov
mov
icebp
mov
negl
inc
pop
jmp
lcall
jno
dec
out
sbb
mov
lds
push
mov
clc
addb
incl
jle
lea
xchg
inc
test
iret
in
cmp
cmpsl
pop
and
cmp
inc
cmp
adc
ljmp
mov
xchg
inc
jmp
pushf
add
shrb
xchg
int
cmp
fcomps
xlat
adc
add
lret
fbstp
jb
cmp
stc
jno
mov
push
dec
cmp
jp
mov
xor
in
loopne
sbb
lcall
lret
cmp
cmp
mov
mov
mov
and
subb
incl
nop
push
pop
dec
andb
adcb
dec
jmp
andl
das
sub
ds
faddl
sub
call
andl
test
mov
movsl
mov
sub
xor
cmpl
fisubrl
mov
add
xor
mov
jae
jnp
xor
in
adc
leave
cmp
fdivr
cmpl
add
sbb
dec
dec
inc
mov
incl
lcall
lahf
pop
mov
out
cmp
lcall
cmp
sti
mov
test
popf
addr16
imul
loopne
inc
into
add
bound
lods
call
nop
sub
or
aam
mov
and
test
fmul
mov
in
shll
clc
call
mov
or
dec
loop
inc
addr16
fnstenv
cli
lcall
sbb
fstl
push
jb
jle
mov
jbe
cmpsb
aas
lahf
xchg
jbe
decl
jb
insl
mov
test
push
jmp
fcomip
ljmp
sti
push
jb
dec
mov
pop
mov
add
jl
fdivr
mov
pushl
jle
mov
out
inc
int3
cmpsb
cltd
push
mov
xor
ficoms
dec
push
cmp
call
addb
xchg
lods
lock
adc
shrl
iret
push
andb
decl
hlt
sub
leave
pop
dec
xchg
push
and
data16
lret
adc
xchg
idiv
decl
into
pop
stos
je
mov
mov
ss
xchg
push
jns
pushf
cmp
lret
fidivrs
mov
cmpsb
incl
xchg
dec
push
mov
adc
stos
movsb
and
sub
ljmp
dec
or
mulps
mov
mov
mov
pop
mov
test
dec
orb
or
es
dec
cmp
movsl
xchg
xchg
aam
add
das
popf
sub
out
test
and
lods
ficoml
incl
shll
and
xchg
pop
inc
fisubrl
cmp
loope
test
pushl
cli
pop
or
sub
cli
xchg
xlat
dec
aaa
pop
cmpsb
ficoml
mov
test
mov
call
fnsave
inc
test
out
jle
out
and
int
pop
xor
cmp
in
loop
inc
js
cmp
sti
movsl
push
and
std
pop
fsubs
call
imul
call
add
inc
aam
xor
cmpsl
xchg
mov
sbb
sub
dec
out
ljmp
cmp
imull
xchg
mov
mov
jae
pop
lahf
cmpsb
jmp
jne
test
in
push
jbe
jmp
push
mov
adc
pop
and
jmp
cmp
mov
dec
push
or
push
or
roll
push
decl
cld
jb
ds
aam
clc
jnp
sbb
clc
popa
inc
mov
mov
test
or
aaa
mov
mov
push
dec
sub
mov
push
ljmp
xchg
dec
inc
out
aas
adc
cmpb
aad
sub
je
lods
hlt
data16
push
cld
cmpsl
add
in
push
pop
movsl
inc
inc
mov
sub
inc
and
dec
sti
cltd
outsb
inc
lcall
ljmp
out
adc
loop
xor
aam
xor
pushl
call
dec
xchg
ljmp
pop
mov
cs
adc
hlt
mov
sti
lock
sbb
fdivr
push
sub
repnz
pop
data16
cmp
or
in
mov
enter
lcall
xor
inc
test
jo
or
lods
mov
es
lods
aad
les
sbbl
mov
pop
mov
mov
stos
push
dec
dec
ja
loop
aam
adc
xchg
lods
ret
sub
add
dec
mov
inc
decb
or
call
cwtl
out
and
cmp
and
pushl
in
jo
sbb
cld
stos
addb
cltd
jo
jns
cmp
rcrb
add
call
push
pop
push
push
sub
sbb
jae
cs
repnz
fs
in
inc
add
and
push
pop
or
mov
push
int3
sub
sti
popa
adc
out
xchg
mov
adc
mov
cs
ret
push
mov
loop
mov
in
add
lcall
fsubl
push
hlt
lcall
movsl
cmp
dec
push
lcall
xlat
pop
lock
xor
stos
xor
loop
push
jge
js
setb
in
shll
pop
lock
mov
mov
or
je
mov
and
mov
xor
incl
dec
cld
stos
jg
mov
notl
bndldx
pop
xchg
lcall
mov
movsl
mov
fisubrs
bound
xchg
decl
xor
loopne
xchg
stc
inc
sub
and
repz
pop
xchg
cmpsb
pop
movq
adcl
jecxz
adcb
out
insl
fidivrs
loop
mov
xchg
xchg
xchg
mov
repz
aaa
inc
mov
jge
sub
ljmp
es
cmp
lret
in
lock
pop
pop
fwait
lock
sbb
call
stc
sahf
sarb
das
mov
mov
or
loop
xchg
pushf
mov
addr16
push
fcomps
out
inc
mov
call
stc
push
mov
dec
out
sub
or
cs
cmp
push
jnp
mov
cmpsl
in
add
pop
mov
dec
test
scas
loope
out
insl
and
mov
ljmp
scas
popf
aas
jae
or
or
inc
incl
dec
test
inc
push
mov
leave
incl
ljmp
jmp
inc
lcall
loopne
inc
aam
mov
loope
pop
adc
aas
mov
icebp
daa
inc
or
jmp
insl
loope
fists
push
mov
and
add
or
or
cmpsb
or
fdivrl
ljmp
pop
mov
sub
decl
xchg
orl
fiaddl
mov
inc
inc
loop
sbb
and
decl
imul
js
sub
or
push
or
dec
ljmp
adc
mov
xor
jnp
repnz
mov
leave
dec
dec
add
loopne
call
mov
push
xchg
movsl
jmp
subb
inc
jns
gs
cltd
mov
fucomp
and
fsub
sarb
xor
repz
mov
sahf
test
pushl
leave
and
rcrb
jns
xor
mov
out
fcmovne
shll
cmpsl
cmp
lcall
add
outsb
sub
mov
sub
rcll
mov
pop
je
incl
es
xchg
xchg
addr16
stos
shll
pop
mov
jmp
push
jnp
sbb
ljmp
jl
sub
push
scas
sbb
cltd
or
pusha
sarl
inc
ja
incl
fisttpl
fdivs
inc
pop
pop
bound
mov
mov
rolb
and
pop
ss
pop
or
mov
mov
int
or
dec
lret
mov
test
fidivl
adc
mov
adcl
adc
ljmp
xchg
xor
cmpsb
and
lret
xchg
test
cmp
inc
lcall
cmp
mov
lret
or
loope
or
lahf
jmp
jle
dec
xchg
cld
pusha
shrl
dec
push
repz
pop
daa
mov
ljmp
jge
call
incl
pop
ss
sbb
add
cld
dec
pop
dec
test
push
xchg
mov
pop
fadds
jge
loopne
push
in
jno
clc
jg
rcrl
out
and
mov
lds
xchg
or
push
in
mov
loop
div
int3
jnp
fisubs
arpl
lcall
xor
fdivl
aas
add
cs
insl
sbbl
xchg
movsb
cmc
mov
push
pushl
mov
cmc
sbb
and
add
add
dec
rclb
decl
mov
and
mov
xlat
cs
popa
ret
inc
add
xlat
jns
out
ljmp
pop
inc
stc
movsb
push
bound
and
imul
leave
sbb
pushl
gs
jmp
or
mov
or
int3
cmpsb
jnp
xchg
pop
jne
shrl
addr16
mov
jo
std
add
mov
xchg
jp
xchg
sbb
jnp
stc
inc
add
stos
sub
int3
xchg
out
incb
repnz
xchg
imul
jbe
mov
xchg
push
lds
mov
push
lea
push
or
dec
roll
dec
jg
call
int
mov
jl
lret
push
jecxz
cmp
xchg
lea
movsl
inc
sub
data16
push
xchg
shll
cmp
and
jmp
pop
xchg
pushl
mov
cmp
mov
adc
mov
sbb
fildl
add
dec
jle
jmp
cmpsb
ret
sahf
enter
jne
pusha
cs
enter
cmp
jmp
daa
pop
mov
ljmp
dec
or
adc
push
icebp
cwtl
dec
iret
iret
mov
stos
ds
pop
les
pop
mov
mov
sti
mov
sbb
push
scas
inc
or
or
xlat
dec
insl
add
mov
clc
push
sbb
nop
cmp
addr16
sub
and
mov
call
jo
lcall
out
adc
repz
xchg
fs
negl
loop
scas
cmp
incl
fbstp
in
in
pop
aam
cmp
pushf
jns
adc
stc
bound
mov
ret
push
cmc
ds
lock
into
sbb
nop
in
add
stos
jmp
cmp
inc
cmc
xchg
int
jge
or
jp
jo
add
ret
sar
or
sbb
decl
mov
dec
mov
add
sbb
mov
add
xchg
mov
lods
shrb
outsb
xor
int3
or
cmpsl
mov
fadd
cmpsl
add
sarb
gs
movsb
mov
decl
lock
movsb
adc
sbb
jge
test
iret
mov
loop
cld
xorb
fdivs
sbb
imul
call
aas
call
inc
push
cltd
jecxz
sub
fstpl
mov
xchg
pop
xchg
mov
mov
adc
sar
or
dec
test
jmp
and
imul
rcr
push
clc
mov
pusha
arpl
inc
lds
mov
addb
mov
lcall
test
xor
popa
or
add
xor
jmp
popf
ljmp
lods
in
fisubrl
xchg
xor
xorb
push
cmp
jmp
jle
cmpsb
pop
jcxz
mov
mov
and
mov
mov
sbb
push
call
push
dec
lock
pop
inc
mov
jmp
push
ret
pop
inc
pushf
inc
insb
push
scas
cld
outsb
mov
test
and
xor
push
test
decl
pusha
jecxz
cmp
mov
out
and
frstor
dec
pusha
pop
cmpsb
mov
add
mov
mov
lret
or
jb
rorb
mov
xchg
mov
pop
cld
test
ljmp
sub
cmp
mov
inc
inc
insl
into
call
jmp
xchg
sub
dec
icebp
pop
jns
xor
dec
lock
ljmp
ljmp
and
test
lods
pop
paddb
lcall
aaa
outsb
aas
movsl
mov
push
push
push
mov
or
pusha
test
xor
push
loop
stos
sbb
rorl
sub
lcall
lea
and
insl
push
stos
stos
fidivrs
pop
roll
fnsave
mulb
imul
inc
mov
xchg
adc
ljmp
jbe
mov
add
pop
push
push
inc
test
ljmp
sub
sbb
xor
dec
shll
mov
mov
dec
mov
mov
es
push
or
jbe
cmp
std
push
cmpsl
divl
sarl
push
in
sar
jmp
test
in
movsb
sbb
jbe
sbb
ret
mov
fisttpl
cld
test
pop
inc
pop
in
mov
push
add
test
incl
sub
stos
add
lods
xor
pop
gs
scas
adc
cmpsl
adc
cld
mov
push
adc
dec
decl
push
icebp
out
push
push
fwait
cmp
inc
stos
cmpsl
push
or
jecxz
sbb
call
std
push
out
lahf
add
push
mov
int3
xchg
pop
xor
dec
fidivrs
lret
jae
pushl
cmp
enter
pop
ss
mov
ja
pop
sbb
lods
notl
pop
ljmp
rorl
imul
adc
js
mov
scas
sub
mov
ja
push
gs
jo
rorl
cli
pop
lods
cltd
xchg
incl
in
xchg
enter
insl
fs
xor
out
mov
sub
push
dec
clflush
cli
pushl
aas
js
mov
mov
or
add
sbb
mov
mov
jmp
mov
ljmp
fsubrs
xor
fisttpl
scas
ds
inc
xor
adc
les
xchg
jmp
xchg
cmpl
mov
addr16
ss
cli
push
pop
iret
stc
xor
shl
mov
cld
incl
adc
jl
inc
test
mov
add
mov
pushl
pop
aad
inc
xor
or
mov
fcmovnb
cmpsl
cmp
std
ds
sbb
or
push
das
cld
shr
mov
lret
mov
icebp
popf
pop
dec
and
incl
adc
insl
gs
mov
push
ret
or
push
push
andb
jge
push
clc
ljmp
clc
mov
sub
cli
dec
loope
fmull
aaa
or
das
aas
mov
ss
jmp
das
and
xlat
fsubrl
and
jns
imul
mov
ja
stos
mov
adc
xor
mov
add
mov
sbbb
mov
insl
jno
ret
dec
inc
and
sub
and
pop
stos
and
cmp
pop
std
ljmp
lds
add
or
test
ret
repz
push
jae
mov
incl
cmp
in
ds
insb
mov
imul
sarb
loop
add
nop
ljmp
out
mov
push
or
in
xchg
cmp
js
outsb
xor
jae
js
sbb
ljmp
out
or
push
imul
mov
cld
and
leave
add
sub
mov
jg
lock
imul
cmc
leave
loop
lods
push
sbb
mov
hlt
cmp
lea
or
arpl
pop
and
les
jno
cmp
nop
call
or
mov
mov
push
cmp
adc
inc
adc
push
add
add
jae
push
xchg
sahf
xchg
lcall
xor
jbe
dec
or
jae
fildl
pushf
xchg
cmp
lret
mov
icebp
pusha
sarl
add
incl
xor
mov
jmp
aam
or
cmp
jg
jecxz
sahf
push
pop
inc
pusha
mov
incb
aad
dec
scas
mov
pop
xor
fwait
cmc
lods
subb
lcall
and
and
loopne
ss
jns
push
test
mov
and
pushl
or
sub
pop
mov
fbstp
out
jmp
pop
fildll
insb
jne
mov
fwait
sbb
imul
and
test
adc
pushl
and
cmp
jnp
lahf
stos
cmp
adc
jnp
sbb
sbb
mov
jnp
add
test
xlat
dec
jmp
cmpsb
pop
nop
mov
jle
incl
lcall
mov
inc
adc
imul
jle
je
jae
sbb
andl
mov
mov
adc
int
lock
xchg
pop
jmp
mov
int3
xchg
pop
mov
sub
in
ss
int
and
lahf
fisttps
xor
fcompl
adc
push
inc
movsl
xchg
scas
lcall
movl
lret
repz
gs
or
jns
andl
pop
cld
pushl
pop
sub
and
out
sarl
out
popa
and
sbb
or
movsb
jl
xlat
sub
sbb
pop
xor
dec
lcall
inc
test
test
std
jae
xlat
in
mov
aaa
cmpsl
loop
outsb
pop
insl
xor
or
decl
or
rolb
mov
je
lock
inc
xor
jmp
or
or
add
jns
dec
cwtl
fs
push
sbb
daa
sub
call
xchg
les
jl
into
and
stos
push
out
sub
incb
in
roll
jg
xor
js
mov
sbbl
enter
push
jo
adc
sub
xchg
outsl
test
je
dec
movq
push
and
jl
add
pop
notl
sub
sbb
push
enter
or
fistpl
gs
movsl
jb
pop
pop
and
outsl
add
fsubs
incl
mov
jle
jp
sbb
push
lret
dec
notb
xlat
inc
and
decl
sbb
pop
orb
fdivr
jae
push
lahf
mov
jns
icebp
add
dec
add
mov
incl
xorl
lcall
ja
jbe
adc
cmp
rcr
mov
bound
ljmp
insb
cs
lahf
dec
mov
rcrb
arpl
aad
in
lds
cmpsb
sbb
fcom
fisttpl
js
stc
push
mov
lcall
push
sub
into
sub
push
sub
out
pop
pop
cltd
push
push
pop
lods
and
daa
sub
ljmp
int
inc
xchg
lret
div
jbe
cld
pop
inc
in
xor
and
call
pop
xor
mov
leave
xor
push
loopne
lock
sbb
push
xor
or
incl
sub
andb
dec
out
clc
je
mov
je
loope
inc
push
push
nop
decl
inc
adc
orl
cmp
jno
ficoml
shr
jae
gs
decl
jmp
aad
xor
jno
mov
xor
sub
lods
jns
pop
loop
adc
jg
ljmp
cmp
lret
jae
ficoml
jbe
push
add
jle
jmp
mov
adc
sbb
lret
sub
jge
add
pushl
cld
sbb
adc
bound
nop
in
jo
mov
arpl
mov
push
adc
sub
sar
rcll
sbbl
push
cld
push
fwait
scas
loopne
mov
jo
pop
push
cmp
dec
jae
loopne
aaa
jno
mov
call
sbb
std
movsb
push
adc
mov
mov
xchg
xchg
jecxz
rcll
icebp
sub
sub
clc
lcall
es
mov
jl
ljmp
cmp
sub
out
or
cmp
mov
jno
loop,pn
mov
pop
cmpl
stos
push
rclb
in
cltd
divl
in
fisttps
xchg
mov
fwait
lea
fmull
jno
add
call
cmp
sub
repz
lea
cmp
cld
into
sti
negb
sahf
scas
sub
mov
pop
pop
mov
repz
pop
xchg
test
push
les
jmp
cmp
or
into
cmpsb
mov
add
pop
lret
mov
sub
mov
mov
out
dec
sbb
in
jle
pushf
add
dec
jnp
pushl
popf
adc
loopne
mov
inc
push
aam
sbbl
pop
call
sbb
sub
decl
mov
push
or
sbb
inc
int
cmpl
ljmp
dec
arpl
xchg
mov
stc
orb
inc
fs
call
call
pop
pop
xor
sub
xor
pop
jmp
pop
push
repnz
js
lahf
lcall
or
jecxz
ret
shlb
inc
pop
mov
push
xchg
inc
dec
inc
stos
mov
loope
mov
pushl
pop
insb
fldcw
lods
mov
inc
mov
in
inc
adc
or
sbb
xlat
popa
push
insl
das
cli
cmp
push
push
std
pop
jl
mov
xor
int3
jnp
inc
push
test
les
jecxz
mov
jb
filds
fcomps
jns
sti
sbb
call
inc
push
sarb
push
repnz
xchg
movsl
mov
scas
mov
lea
sub
ret
cmp
dec
push
lea
cs
ljmp
mull
push
incl
cmp
int3
inc
insb
ljmpw
into
and
movsl
cmp
inc
lcall
out
or
decb
aaa
xor
push
in
sub
jmp
adc
enter
mov
inc
mov
fldt
sub
xchg
push
jo
push
cmp
outsb
dec
jg
iret
dec
mov
sbb
adc
call
sbb
shl
xchg
mov
ds
push
or
inc
cs
mov
call
lcall
incl
adc
xchg
push
xchg
jmp
dec
cmp
fs
call
fisubl
mov
cmp
xchg
jecxz
scas
push
notb
push
fisttps
out
xor
sub
sar
repnz
fstps
fs
dec
dec
mov
fwait
lods
pusha
call
and
sahf
cltd
mov
imul
jle
sbb
jecxz
inc
sub
lods
sti
or
pop
jmp
sbb
mov
loope
pop
sub
sbb
fistpll
je
ror
and
jmp
cs
dec
dec
stos
inc
sub
mov
mov
xchg
arpl
dec
pusha
out
lret
out
jb
xchg
insl
cld
add
sub
sub
js
decl
repnz
cmpsb
orl
clc
out
lds
sbb
jmp
mov
cmp
and
mov
dec
add
insb
sub
notl
or
jnp
mov
pop
pop
and
ljmp
test
lcall
adc
sbb
mov
xchg
and
sub
xchg
hlt
cli
or
xchg
inc
push
and
jg
fwait
xchg
sub
bound
mov
fwait
int3
fsts
aam
sbb
jecxz
mov
incl
sbb
testl
mov
sub
rorl
decl
in
cwtl
push
xor
insb
mov
sbb
inc
push
mov
mov
mov
xorb
call
cmp
sahf
xchg
mov
cltd
jo
xchg
mov
lea
mov
add
lcall
pop
push
sahf
lahf
sbbl
ret
mov
push
imul
loop
cmpsb
dec
jns
outsb
jg
lcall
jecxz
pop
pusha
and
jp
pop
mov
mov
push
sahf
xor
add
push
syscall
clc
outsl
clc
cmp
xorb
int3
movsb
adc
push
insl
les
dec
sub
clc
outsl
test
add
mov
ds
test
adc
cli
incl
adc
xchg
pop
fcmovb
push
sahf
or
push
jae
rcl
jbe
lcall
je
pop
data16
sub
cli
mov
adc
ljmp
add
ljmp
xchg
fstpl
and
dec
inc
mov
repnz
sbb
scas
sbb
inc
mov
jg
mov
mov
pop
jge
jle
inc
fs
repnz
out
decl
mov
push
pop
inc
sub
gs
or
xchg
jle
ljmp
call
push
cmpsl
aad
lahf
lds
mov
mov
sbb
push
cmp
int
into
xchg
pop
test
aad
jmp
or
and
and
imul
xchg
out
cmp
enter
cld
pusha
add
mov
loope
dec
lahf
mov
jecxz
pushl
std
enter
fucomip
test
or
xchg
cmp
les
js
mov
pushf
dec
push
rclb
cmp
in
and
lods
mov
push
outsb
push
ljmp
addb
push
mov
jmp
cli
lcall
test
push
cmp
pop
or
test
scas
outsb
xchg
test
sub
fcomip
cmp
lret
mov
sbb
adc
inc
cmp
mov
ud0
lcall
movsl
das
gs
pop
pop
loopne
iret
call
sbb
adc
notl
pushf
jmp
mov
mov
sahf
data16
xchg
test
adcb
dec
in
mov
ljmp
bound
imul
lds
cli
test
int
jo
shrl
mov
mov
xchg
rcr
adc
mov
bound
movups
movb
adc
jg
mov
rclb
pop
lcall
push
fadd
xchg
push
adcb
fxch
sbb
fwait
or
xchg
xorb
icebp
cmpsb
out
push
dec
in
pop
pop
pop
test
int3
incl
leave
and
lods
mov
pop
jle
ljmp
pop
add
in
jae
jmp
mov
lret
in
xchg
xor
xor
lcall
sub
arpl
mov
mov
leave
adcl
lcall
push
pop
dec
imul
and
jns
fwait
std
call
jb
lea
lcall
decb
push
push
mov
sub
mov
sub
pop
sti
aaa
cmp
pop
aas
push
sbb
xchg
push
scas
fs
cmp
jl
leave
jnp
pushf
pop
rclb
pop
mov
icebp
sub
dec
cwtl
xor
dec
sub
xchg
dec
arpl
lds
nop
or
push
mov
ljmp
dec
out
sbb
cmpsb
rcl
orl
pop
out
sub
insb
repz
in
push
jmp
repnz
dec
outsl
imul
or
push
mov
jne
xor
idivl
fisubrs
in
push
sbb
sbb
je
out
stc
dec
sbb
pop
mov
shlb
pop
jecxz
gs
decl
lock
loopne
mov
dec
pop
pop
bound
pop
cwtl
push
ja
out
insb
push
jnp
dec
push
adc
and
or
jae
pop
clc
cltd
dec
mov
and
xchg
neg
ficompl
jmp
in
add
inc
ja
out
cmpsl
into
fdiv
lcall
cs
scas
adc
cld
mov
mov
or
shlb
xor
xchg
ds
ljmp
rorl
cwtl
ljmp
and
std
inc
xlat
into
lods
clc
lock
fcomip
cmp
insb
fsubr
out
pop
sub
roll
jecxz
popf
dec
gs
lods
ja
in
repz
dec
cmp
jmp
add
and
xchg
fsubrl
cmp
lretw
sti
mov
ss
popa
inc
cmpsb
or
sti
or
add
outsb
push
xlat
les
inc
cld
mov
mov
sahf
inc
dec
mov
inc
and
rclb
inc
or
pop
and
sbb
shll
add
lahf
dec
insb
or
lahf
jle
sbb
test
in
cmp
push
xchg
push
mov
in
add
sbb
xor
aam
fdivs
pushl
add
jl
popf
jge
jp
rcl
mov
inc
iret
sbb
mov
pushl
hlt
push
loope
rcr
mov
lcall
xchg
cmp
mul
aad
adc
jle
lcall
mov
push
sbb
jg
dec
js
inc
inc
push
iret
fbld
push
hlt
and
je
pop
cld
call
adc
daa
dec
jge
and
hlt
pop
iret
gs
aaa
push
xchg
stos
movsl
fabs
int
push
push
mov
ror
cmp
mov
lods
cli
push
sub
aas
pop
and
and
pop
sbb
xchg
fnstcw
mov
jg
xor
gs
sbb
lods
rcr
or
mov
mov
cmp
das
leave
sbb
enter
jnp
popl
loopne
test
dec
in
adcb
insb
push
sbb
and
in
pop
shl
pop
aam
int3
add
or
mov
loope
aas
in
mov
loopne
mov
les
jg
ret
fstp
in
lcall
inc
and
add
cmp
jp
orb
js
xor
xor
fldenv
add
lods
sub
lcall
neg
lahf
cmpsl
xor
icebp
je
xchg
xor
pushf
std
or
popf
scas
mov
subl
jmp
fnstenv
mov
pop
mov
sbb
xchg
or
or
mov
call
das
mov
sub
in
les
jb,pn
mov
inc
aad
ret
jmp
mov
add
jmp
loopne
insb
in
mov
fwait
pop
dec
dec
jp
test
ljmp
icebp
or
arpl
pop
sub
push
or
push
mov
adc
lcall
adc
or
lock
aam
jns
jae
repnz
sbb
dec
das
adc
lock
lcall
sahf
aas
and
ljmp
jmp
test
xchg
aaa
or
jl
daa
jb
push
sbb
xor
in
jecxz
cmc
pushl
ja
sub
push
mov
cli
test
or
pushl
mov
sti
repnz
das
push
inc
in
lret
popa
inc
xor
or
jmp
adc
flds
je
mov
inc
xor
push
test
test
js
incl
das
fmuls
jge
jo
and
mov
arpl
cmp
xor
jmp
lcall
and
fmull
divl
push
insb
cld
icebp
out
mov
jecxz
aas
es
mov
sbb
cmpsb
pop
dec
sbb
cmpb
lcall
add
ret
sbb
mov
xchg
fidivrs
cmpsb
loopne
xchg
jg
cmp
jo
push
or
js
js
xchg
push
and
xchg
out
lahf
std
popa
aam
jo
mov
dec
inc
int
iret
loop
js
insb
mov
sub
fcompl
mov
cli
addr16
arpl
mov
adc
add
add
ljmp
jmp
pop
cmc
mov
xchg
adc
xor
and
insl
cmp
pop
in
pushl
stos
push
dec
cmpl
xor
into
in
sub
cwtl
push
loope
jae
jmp
mov
call
sub
sub
or
push
orl
lcall
scas
xchg
mov
pop
jae
push
pop
cltd
mov
in
fidivrl
in
int3
aad
fwait
nop
inc
ljmp
sarl
push
push
adc
shrl
or
jae
decl
jns
inc
mov
or
mov
xor
aad
stos
repnz
jns
cld
pusha
out
add
inc
clc
jg
fisttpl
adc
inc
movsl
and
jge
mov
popf
je
inc
xor
ljmp
jne
pusha
mov
into
push
in
inc
idivb
mov
cmp
and
lcall
repnz
lods
pusha
cmp
or
daa
adc
push
and
jmp
push
les
arpl
data16
test
pop
loop
loope
dec
test
dec
jle
pop
mov
call
imul
lods
inc
test
inc
or
xor
out
sahf
push
inc
ret
jmp
call
mov
push
ret
loopne
jbe
shlb
mov
mov
sbb
push
lock
cmp
dec
rcl
jmp
xor
push
fistl
movsl
dec
jnp
jno
lahf
icebp
cmp
or
xchg
lock
pop
xchg
sbb
mov
xchg
pop
mov
adc
aas
lcall
fisubrs
vorps
fcomps
shll
and
sub
stos
pop
stos
xor
insb
sub
imul
fistpll
fwait
bound
cld
jp
push
decl
sbb
bound
loope
inc
xor
cmp
es
xchg
sub
pushl
jge
push
cs
or
mov
call
mov
dec
xorb
call
cmp
dec
testb
xchg
lret
pushf
push
jle
adc
mov
lret
sbb
jg
jl
inc
adc
mov
mov
cmp
lret
mov
lret
jmp
in
adc
mov
xchg
push
lret
in
jo
ss
pushl
cld
sti
pop
sub
in
outsb
lea
movsl
mov
jno
push
sub
mov
push
mov
shlb
mov
mov
sub
lods
loop
jnp
enter
mov
call
pop
stos
negl
in
pop
int3
test
sti
and
aas
roll
psrlw
mov
jmp
cmpsb
ss
les
inc
insl
cmp
lret
lods
adc
push
pushl
inc
pusha
adc
pop
pop
xchg
adc
or
fucomi
gs
cmp
decl
nop
mov
test
or
cmpsb
aaa
cmp
mov
aaa
scas
jae
add
sub
dec
jp
mov
mov
ret
xchg
mov
aam
and
mov
les
mov
rcll
xchg
pop
cmp
fsubs
jl
data16
pushl
int
inc
test
rcrl
dec
xchg
jmp
push
jecxz
insl
dec
or
incl
jmp
push
and
push
pop
mov
cmp
ljmp
lea
push
out
mov
into
mov
gs
pushl
icebp
dec
not
jg
test
out
rol
popa
lock
in
imul
jmp
dec
in
xor
repz
gs
maskmovq
notl
sahf
outsb
ss
mov
es
decl
ss
mov
insl
xchg
xchg
xor
mov
xchg
mov
xchg
inc
and
xor
bound
pop
cs
jmp
rcll
sbb
push
movsb
cwtl
sbb
in
mov
mov
adc
add
hlt
add
decl
inc
mov
inc
adc
dec
xor
arpl
adc
fcos
mov
mov
push
stos
jle
sahf
xor
push
lcall
cmp
aas
mov
mov
leave
addr16
xchg
xlat
pop
xor
mov
mov
cmpsl
add
jns
out
adc
lret
shll
and
in
aas
stc
sbb
and
sbb
inc
mov
mov
xor
ss
das
push
mov
call
mov
mov
dec
cmp
fsubrp
das
xchg
xchg
push
adc
add
ret
mov
mov
loopne
jno
mov
test
xchg
fs
testb
mov
pop
push
int
adcb
mov
push
mov
insl
lret
test
iret
xchg
lcall
in
pop
movsb
test
fcmovne
mov
jbe
stos
add
push
outsl
mov
ds
daa
stc
nop
aaa
test
popf
inc
jle
incl
pop
mov
push
and
rolb
int3
push
pushf
js
sub
call
lods
dec
xchg
and
jbe
lods
push
pushf
jmp
pop
enter
insl
fs
inc
add
lcall
adc
imul
call
jp
ja
jg
fdivrs
sbb
dec
mov
stos
ret
aaa
push
arpl
xor
ret
add
push
leave
enter
or
adc
add
pop
jb
sub
push
adc
inc
ljmp
in
imul
inc
shll
pop
int3
lcall
es
mov
sbb
cmp
jl
imulb
pop
insl
jae
mov
adc
enter
fisubrl
cmp
cmpsl
sub
lcall
mov
xor
shr
nop
xchg
mov
icebp
inc
sbb
andl
mov
fldenv
ljmp
fisttpll
sbb
pushl
cmp
xor
sub
addr16
adc
sbb
cli
icebp
iret
and
mov
fisttpll
iret
lods
dec
xchg
ja
clc
pop
pushf
jmp
mov
outsl
clc
insb
mov
int3
mov
bound
and
jo
aaa
rcl
aaa
cmp
push
sbb
incl
cwtl
sti
xor
call
sub
jae
mov
dec
iret
sahf
sbb
xor
pushl
cmp
int
add
scas
jecxz
mov
idivb
cmp
aaa
mov
call
pop
jnp
mov
in
nop
mov
pop
cmp
dec
or
push
jb
aam
mov
lcall
cmovbe
sbb
sbb
ljmp
jb
out
repnz
std
sbbl
push
ret
out
pushl
push
dec
mov
clc
and
sub
call
sar
sub
push
sbb
nop
jo
jb
ret
mov
jnp
jb
ficompl
xchg
pop
stos
scas
das
jno
imul
cmp
aaa
inc
stos
shrb
jecxz
scas
cmp
cmp
inc
in
add
ljmp
imul
push
cs
xchg
ss
xlat
adc
adc
ljmp
pop
incl
outsl
cltd
shll
xchg
call
push
test
stc
pop
insb
jg
dec
or
sub
insb
in
mov
dec
lret
jae
addr16
lock
stos
jo
inc
push
pop
ret
sbb
fcmovnu
decl
loope
inc
xor
push
testb
and
mov
rcrb
and
cmp
ja
add
mov
and
cmpsl
dec
lds
pop
mov
je
push
out
sbb
cld
ret
decl
inc
scas
fisttpl
mov
data16
ficomps
incl
push
sub
js
stc
pop
in
inc
mov
fsubrl
adc
insb
loopne
sub
sbb
mov
adc
dec
mov
push
sbb
das
lcall
lods
mov
dec
adc
imul
cld
pop
cli
lcall
pop
sub
cmp
sub
insb
pusha
lret
hlt
mov
dec
mov
mov
repnz
xor
fistl
mov
movsb
iret
pusha
sub
call
enter
jge
stos
insb
mov
sbb
push
jbe
test
push
into
sahf
push
insl
or
pushl
mov
and
cmc
icebp
daa
bound
jmp
inc
pop
loope
add
mov
jae
fisttps
jmp
add
push
sub
lcall
xor
pop
lock
call
setae
push
or
mov
push
sbb
push
sbb
fildll
dec
mov
adc
mov
ds
scas
les
mov
fsubrp
cli
lcall
test
dec
ret
pop
pop
popa
gs
repz
jae
jb
adc
decl
lret
push
clc
outsb
rclb
call
lret
jge
and
pop
icebp
frstpm(287
inc
mov
push
or
mov
aad
sub
sbb
ja
adc
pop
movsb
add
je
dec
stc
sbb
syscall
pop
incl
xchg
loop
andl
xor
mov
pop
cs
mov
shlb
stos
outsb
mov
push
aaa
outsl
xor
pop
add
dec
test
outsl
movsb
mov
lahf
and
mov
decb
aaa
sbb
sbb
xchg
test
add
sbb
test
int
popl
shrb
outsb
shll
scas
xrelease
cmp
xchg
out
cmpsl
bound
sbb
mov
pop
imul
cmp
or
jns
mov
pushl
push
sbb
lahf
mov
addr16
mov
addl
xchg
push
and
dec
xchg
push
ret
adcb
add
ret
movsl
jg
repnz
jae
mov
fbstp
jecxz
aam
cwtl
inc
test
cmp
push
jne
add
ret
cmpsb
pop
pushl
loop
repz
xchg
clc
ret
sub
dec
adc
or
movsb
imul
jl
pop
mov
dec
add
cli
arpl
test
push
push
add
shll
lock
jmp
xlat
rcrl
pmulhuw
push
lods
push
jnp
pop
push
loopne
mov
push
incl
cld
es
out
jle
in
in
xor
add
call
jbe
gs
lcall
aas
shll
cmp
idivb
or
mov
int
daa
ss
daa
pop
add
adc
sub
rcrb
ffreep
aam
ljmp
add
dec
push
mulb
dec
mov
lds
popf
loopne
shlb
fstpl
iret
aam
xor
das
or
sahf
mov
jg
ja
incl
inc
loope
orl
jo
inc
iret
mov
pop
nop
lret
daa
dec
in
scas
or
push
push
je
fdivr
cltd
loope
orl
mov
notb
call
jg
jns
cmpsb
jae
out
test
dec
mov
xchg
movsb
test
aad
cmp
ljmp
fstpl
jbe
inc
or
loop
pop
inc
je
hlt
mov
stos
and
adc
xchg
lcall
push
shr
in
and
ror
add
xchg
adcl
add
incb
repnz
les
add
sti
out
test
mov
dec
add
pusha
jb
iret
dec
cmc
cmp
arpl
incl
and
xor
dec
shr
rol
cmp
sbb
repnz
pushl
subl
push
jecxz
stc
repnz
mov
fisubrs
ljmp
sub
jb
mov
push
and
in
in
scas
clc
add
out
mov
mov
test
add
idiv
lcall
add
or
movsl
mov
jne
sub
int
xchg
loop
aaa
or
jns
sbb
incl
xchg
scas
aaa
aam
call
sbb
xor
adc
jp
jg
fldt
movsb
mov
outsb
inc
or
sub
pop
pushf
jle
jmp
int3
ss
js
push
lret
inc
push
rcrl
out
les
cmp
decl
sub
lahf
les
hlt
bts
cli
jmp
mov
xor
mov
pop
push
cmpsl
aam
stc
fmuls
xor
sti
test
decl
adc
sub
push
jecxz
loope
and
nop
je
and
incl
ds
jo
cmpsb
dec
fsubl
add
in
jns
out
push
lods
jne
bound
jae
sbb
jmp
adc
movl
rcr
lea
inc
xorl
sbb
fimull
and
fnsave
pushl
push
mov
out
ss
adc
pushf
mov
xchg
xchg
xor
cld
mov
pop
ljmp
cli
jmp
icebp
pop
stc
or
jns
aas
xchg
xor
popf
in
add
pop
mov
jmp
fistl
test
es
jns
stc
fs
ja
hlt
nop
cld
push
enter
mov
mov
ljmp
leave
arpl
sbb
mov
xor
lret
adc
push
repnz
incl
cmp
sbb
in
xor
pop
mov
shlb
mov
jno
inc
xor
rorl
xchg
mov
imul
inc
in
lds
jns
push
icebp
inc
decb
push
test
mov
xor
les
pushl
dec
imulb
mov
pushl
fsubrs
mov
cli
cmp
stos
test
repz
fwait
xor
imul
cli
mov
xor
fcomip
pushl
cmp
rep
add
icebp
mov
jp
shlb
sub
faddl
xchg
mov
incl
cld
test
arpl
pushf
sti
mov
leave
push
je
int3
mov
jge
scas
pushf
mov
ja
aam
data16
sbb
fucomi
cld
cmp
dec
xchg
jo
mov
clc
popl
rep
ret
or
aam
cld
jae
mov
scas
std
pusha
test
je
scas
sub
testb
cmpsl
cli
orb
jge
pushl
shlb
jp
loopne
mov
in
movb
mov
in
pushf
outsl
sbb
js
in
das
rolb
inc
pop
movsb
xchg
push
sbb
js
jo
das
cli
fistpll
push
xlat
insb
adc
inc
lret
es
lahf
ret
pop
jecxz
iret
jae
decl
loopne
pop
test
sub
test
test
lcall
inc
pop
outsl
xor
mov
pop
push
lcall
xor
push
incl
daa
or
push
dec
movsl
lret
pop
aad
cmc
les
mov
cmp
mov
dec
fmull
dec
pop
push
repz
test
pop
mov
dec
lods
mov
and
lcall
mov
pop
fld
mov
mov
in
mov
jg
insb
leave
call
xor
xor
adc
repz
mov
sarb
aas
adc
add
es
xchg
mov
ljmp
clc
std
jg
mov
or
or
mov
inc
push
add
xor
outsl
pushl
xor
popf
dec
mov
and
stc
push
jne
insl
and
xchg
jmp
lods
xchg
mov
fstl
and
rcrb
inc
or
xchg
or
pushl
insl
mov
or
data16
sbb
leave
clc
push
pop
pop
add
jne
pop
daa
inc
testl
cltd
inc
mov
sbb
pop
or
jns
dec
cmp
insl
mov
dec
stos
ret
mov
xchg
cld
jmp
cli
add
adc
jmp
addr16
mov
jg
test
jg
loopne
addb
rorl
push
pop
lret
and
pushl
mov
loope,pt
incb
pushf
ds
push
adcl
mov
pop
lea
inc
ret
add
cmp
dec
enter
cltd
adc
insl
mov
xor
xchg
sbb
fwait
sub
lcall
sbb
xchg
sbb
push
imulb
xchg
ss
xchg
jg
add
jecxz
std
mov
push
ja
movsb
dec
dec
mov
adc
jo
insb
xchg
addb
pushl
aaa
jo
push
adc
mov
daa
cmp
and
loop
push
test
push
cld
je
cmp
fidivrl
sbb
mov
add
negl
xor
cmp
scas
dec
add
push
add
outsl
fmul
in
std
sbb
sub
repnz
mov
ret
sar
jmp
scas
lock
cs
nop
cld
fwait
ds
mov
fdivl
inc
mov
jbe
push
dec
jbe
test
push
test
ja
mov
movl
sbb
out
std
ljmp
xor
movsl
jns
std
pop
lcall
rclb
movsl
call
jo
xchg
mov
or
and
cltd
js
icebp
jnp
test
mov
adc
ljmp
pop
hlt
or
or
sti
lret
mov
sub
icebp
jecxz
arpl
add
divb
shl
mov
mov
or
decl
fwait
xor
adc
mov
outsl
repz
and
mov
pop
mov
jne
test
aas
fisubs
xor
into
mov
outsb
mov
cmc
sub
out
cmp
scas
cmpsb
jo,pt
sar
or
or
jb
loope
ds
pushl
test
mov
mov
ficoml
dec
sub
adc
ficoml
aaa
xchg
call
incl
mov
or
push
lods
sub
stc
lcall
push
cld
sbb
xor
push
mov
mov
mov
cs
ret
or
sub
and
pop
data16
add
clc
call
cmp
sub
mov
xchg
in
xor
in
sahf
scas
jl
stos
push
jmp
push
mov
xchg
scas
sub
out
jg
stc
mov
fcmovnb
and
out
jl
lock
bound
cmp
aam
lock
jnp
stos
lahf
pop
push
hlt
ret
ja
jae
out
jmp
sub
stos
jle
imul
pusha
mov
mov
comiss
mov
js
mov
xchg
mov
mov
adc
repnz
dec
std
cs
push
xor
ret
rcrb
incl
lcall
insb
aad
and
dec
mov
pop
inc
mov
mov
xor
call
ja
insb
push
xchg
pop
sbb
jae
sub
jns
aas
dec
js
pop
push
jl
mov
imul
push
es
sub
cli
mov
xor
imul
pop
je
loopne
lds
xor
decl
inc
adc
outsb
cmpsb
pop
fdivrl
inc
cmpsl
out
cmp
dec
inc
pop
fdivrs
cwtl
outsl
cmp
jns
test
jl
fdivrl
test
add
jg
imulb
adc
icebp
cmp
cmpsb
jo
iret
loope
sbb
hlt
push
inc
push
sub
int
ffreep
inc
aas
roll
sbb
ljmp
addr16
add
gs
pop
xor
jmp
jge
jae
leave
cmp
mov
lret
mov
movb
and
sub
push
aaa
movsb
inc
inc
out
aaa
fs
iret
cld
pushl
int
mov
add
dec
mov
xchg
cli
cmp
call
test
push
fcompl
ret
add
into
cmc
nop
pop
sbb
je
mov
ljmp
aad
xchg
stos
pushf
imul
sub
mov
or
cmpsb
ja
sub
xchg
incl
sub
jnp
into
inc
jo
xor
cmp
repnz
sbb
pop
ljmp
sbb
mov
inc
fdivs
xchg
mov
decl
pop
sub
pushl
and
mov
xlat
icebp
jno
faddl
mov
or
data16
fsubs
mov
sbb
cmp
mov
push
lcall
std
inc
sub
aam
jno
jg
or
mov
fidivs
fcomip
jmp
mov
xor
sub
and
enter
fcompl
xor
push
roll
lea
sub
insb
push
xchg
sbb
jle
xchg
ret
mov
pop
mov
xchg
pop
stos
xlat
sbb
mov
stos
clc
sub
push
fidivs
cs
xor
cmp
stos
cmp
pop
incl
jmp
aas
daa
in
xor
jno
rolb
movsb
hlt
pop
insl
inc
pop
call
mov
sbb
dec
bound
push
adc
push
jle
movsb
aas
clc
cmc
adc
mov
cmp
loop
add
mov
mov
decl
test
inc
fcompl
push
jecxz
insb
pop
cltd
push
mov
jmp
das
cli
lcall
iret
cwtl
imul
jnp
fstpl
sahf
jo
push
into
push
mov
or
movsl
outsb
xchg
xlat
jno
sbb
xrelease
loope
xchg
subb
daa
movsl
cmp
or
lods
jne
mov
xchg
or
insb
movsl
ljmp
lcall
xlat
cs
mov
data16
mov
fwait
dec
dec
xor
cmpsb
stc
leave
lcall
inc
std
xchg
mov
lret
repz
fistpl
mov
ljmp
mov
push
mov
nop
cmp
outsb
pop
cmp
xchg
jb
mov
or
cmp
add
mov
jecxz
test
push
shlb
jmp
movsl
pop
add
xlat
pop
sar
xor
pop
xor
jns
ror
in
dec
mov
in
fisubrs
jbe
fidivl
frstor
loop
stos
sbb
aam
add
int3
ret
xor
xchg
loope
lcall
cmp
push
jae
pop
mov
mov
adc
pusha
lea
outsl
sub
mov
dec
ljmp
push
xorb
aam
out
jmp
ds
sub
outsl
clc
push
mov
int3
pop
mov
mov
push
lret
stos
pop
cltd
inc
inc
sub
sbb
call
and
adc
pop
addr16
dec
jmp
repz
xorl
popf
incl
mov
cmc
mov
adc
adc
push
mov
adc
mov
inc
orl
mov
call
call
mov
hlt
xchg
sbb
push
sub
mov
sub
sbb
incl
lret
sbbl
out
call
xchg
mov
sbbl
rorb
iret
pop
fdivr
ljmp
ret
fwait
jne
es
or
add
in
push
inc
inc
cltd
pushf
pop
test
mov
jne
xchg
lcall
jecxz
inc
clc
add
shlb
stos
cld
jmp
movsl
cmp
xchg
mov
clc
inc
inc
pop
cmp
dec
add
pop
test
ljmp
or
add
lods
and
dec
andl
faddl
or
ljmp
jmp
push
mov
nop
xchg
push
movsb
imul
and
push
bound
js
cld
adc
fs
je
cmpsl
sub
pop
pop
lret
jno
jns
icebp
inc
adc
inc
js
pushl
sub
imul
mov
jl
insl
bnd
push
loope
iret
sbb
sbb
inc
sti
lcall
aaa
mull
lret
jecxz
cmp
in
cwtl
jecxz
fcos
jg
push
jae
xlat
mov
fnstcw
xchg
push
out
mov
inc
mov
mov
xchg
pop
hlt
pushl
dec
icebp
push
mov
push
arpl
cmc
dec
rcrb
int3
add
and
pop
adc
ja
sti
dec
bnd
lcall
pop
test
cmp
mov
dec
test
adc
mov
push
hlt
and
loop
add
inc
pop
mov
imul
lea
gs
mov
xlat
popf
fists
jmp
cmpsb
xor
ret
jge
or
inc
cmp
dec
stos
or
seta
mov
adc
decl
fsubl
and
pushf
jmp
sub
idiv
std
lret
fildl
mov
decl
into
iret
cld
push
daa
pop
xchg
mov
jmp
jecxz
mov
mov
pop
push
mov
mov
adc
sar
mov
js
xchg
lock
cwtl
mov
sahf
lcall
lcall
pop
mov
aad
cli
daa
pop
or
mov
je
xor
scas
mov
mov
sbb
and
mov
jp
insb
jmp
jg
ljmp
andl
xchg
cmp
es
dec
and
fists
fcompl
fwait
lock
jmp
sub
outsb
data16
pop
cmp
inc
xchg
jbe
imul
pop
cmp
bound
cmp
call
add
add
mov
ss
pop
jp
inc
imul
incl
aaa
adc
jl
mov
imul
xchg
jne
cltd
test
or
ss
cli
lret
jb
imul
incl
pushl
xchg
mov
test
daa
pop
or
call
adc
sbb
cmp
or
adc
outsl
jmp
cltd
add
call
hlt
inc
movsl
add
cmp
sbb
lahf
movsb
mov
rcll
pop
inc
ret
lods
jmp
out
ljmp
in
or
jno
fwait
or
repnz
lds
ret
lcall
mov
test
shrb
popf
aas
out
les
xchg
jo
mov
jp
sub
iret
push
xor
loope
mov
jg
jb
fnsave
icebp
cmc
aam
pop
cmp
lcall
dec
mov
into
loope
adc
arpl
popf
sbb
addl
xchg
mov
cmpsl
adcb
and
pop
es
pop
loopne
insb
repz
push
xor
dec
sub
jo
mov
ljmp
add
testb
push
push
aaa
pusha
mov
mov
inc
mov
jg
push
add
pusha
jl
xor
or
ljmp
push
inc
mov
ficoms
lahf
stos
stos
xchg
or
es
adc
mov
mov
repnz
inc
sbb
mov
mov
mov
jg
ljmp
inc
mov
dec
mov
sbb
fdivr
mov
jmp
or
dec
sarb
dec
mov
jle
loopne
adc
enter
ljmp
ret
jne
pop
in
loope
sbb
and
jl
cmp
adc
popf
out
xchg
std
movsl
fdivp
lods
xor
data16
sarl
or
pop
imull
lods
shlb
xor
push
call
dec
cmp
xor
pop
adc
add
push
cltd
or
fistl
cmp
or
ljmp
pop
pop
mov
arpl
data16
xchg
jo
pop
sarl
ret
jns
inc
outsl
adc
xor
and
xchg
sbb
or
decl
imull
subb
inc
aam
outsb
cmp
out
dec
cmp
mov
dec
in
nop
sub
sub
and
sbb
punpckhbw
sbb
out
and
inc
sub
out
enter
pushf
xchg
or
jg
pop
cli
pop
lret
add
mov
test
sub
xor
adc
push
sbb
call
mov
push
imul
sub
loope
idiv
mov
jmp
outsl
mov
lcall
jno
xchg
lock
xor
cld
jg
insl
sbb
adc
aam
bnd
out
hlt
adc
call
inc
fs
outsb
mov
sahf
mov
and
outsl
mov
cmp
jmp
rorb
test
ss
ds
int3
aad
jno
inc
fcomps
cmp
outsl
cli
decl
out
and
mov
test
ja
push
mov
xlat
pop
jmp
pop
and
add
insl
mov
stos
push
loop
ss
sub
lcall
repnz
bound
xchg
inc
xor
xchg
rorl
lock
fcoms
inc
loop
inc
scas
stc
inc
mov
fisubrs
xchg
lds
sarl
lock
es
imul
mov
dec
push
mov
push
or
ljmp
sub
jle
sub
mov
push
in
jg
cld
cmp
xchg
outsl
ljmp
fcomps
push
push
inc
or
sub
dec
mov
mov
cld
out
mov
mov
fwait
sbb
jmp
mov
pop
test
sub
mov
dec
repz
mov
shlb
mov
mov
pushf
clc
push
pop
mov
test
subb
pop
cmpsb
mov
lcall
clc
leave
sbb
jae
divl
es
cmp
lds
nop
das
mov
mov
jmp
iret
adc
push
test
xor
xor
out
fildll
xchg
lahf
and
cmp
inc
and
mov
xchg
rcl
push
sbb
dec
data16
aad
dec
sti
andb
call
int3
ljmp
or
stc
inc
xor
push
mov
imul
cmp
fincstp
push
inc
xchg
cli
lcall
arpl
xor
lret
sub
pop
inc
mov
cmp
push
lds
pop
cmp
sub
shr
or
mov
pop
mov
sbb
lea
jecxz
ss
aad
lcall
sti
cltd
push
scas
adc
mov
fdivrs
in
add
mov
test
sub
xchg
jecxz
jl
inc
in
inc
push
ss
sbb
mov
arpl
hlt
lds
sub
inc
xchg
adc
daa
push
aas
adc
add
mov
cmpsl
cmpl
push
push
xchg
les
adcb
dec
xor
pop
dec
cmp
xchg
arpl
add
and
jle
cmc
aad
push
inc
jb
mov
pop
mov
mov
mov
jge
movsl
aad
shrl
lcall
and
and
sti
add
mov
xor
sub
aaa
sbb
incl
pop
dec
scas
and
mov
pop
lds
frstor
add
push
jb
add
mov
movsb
jo
mov
xchg
dec
iret
mov
test
jmp
ret
mov
stos
xchg
pop
mov
push
cwtl
ret
and
cmp
ljmp
add
mov
addr16
cmp
or
push
cmpsb
cs
mov
imul
push
frstor
out
lods
das
popf
lods
and
imul
mov
pushl
inc
fstps
mov
jb
pop
jo
aas
movsb
mov
es
xchg
sub
mov
iret
sbb
fs
pushf
mov
mov
call
fisttps
shlb
aam
push
jns
add
dec
sbb
mov
outsb
or
push
decl
gs
push
push
adc
push
repnz
rorb
cmpl
mov
mov
test
cmpsb
xor
lcall
inc
enter
scas
inc
rcl
lcall
iret
lahf
js
or
addr16
add
faddp
out
rcll
cmp
andl
push
decb
ljmp
leave
es
icebp
sbb
clc
mov
xor
push
or
and
bound
inc
jmp
popa
xor
add
jno
pop
jmp
push
mov
jbe
adc
shlb
jp
call
push
and
ds
movsb
nop
fildl
push
push
or
stc
xchg
mov
incl
mov
adc
adc
das
movsb
xchg
test
or
inc
sub
incl
add
frstor
mov
adc
jne
fidivrs
add
ljmp
push
jecxz
fcoms
xchg
and
inc
or
mov
mov
pop
and
lcall
fwait
imul
arpl
out
call
xchg
inc
sub
lds
jg
jne
mov
loopne
and
arpl
inc
jg
sub
push
aaa
in
dec
int3
fs
jmp
cmpsl
jbe
lea
ljmp
flds
hlt
xor
call
mov
pop
xchg
fcompp
adc
dec
rolb
push
jae
filds
ljmp
clc
mov
inc
mov
or
jo
inc
fidivrl
push
lcall
out
jmp
ss
cld
pop
inc
dec
movsb
push
adc
cs
mov
inc
mov
xchg
sarb
stos
inc
mov
sahf
in
or
mov
or
xorb
add
xchg
and
decl
fldl
rcrl
push
sbbl
scas
cmp
cmc
je
lea
dec
add
mov
mov
into
or
test
aas
js
fistl
in
stos
test
pushf
mov
cmp
push
mov
es
cld
ljmp
arpl
inc
imul
pop
imul
sub
lahf
cwtl
pushf
stc
filds
jg
in
int3
shrb
mov
push
lcall
add
mov
mov
call
cmp
mov
cli
jo
jo
lods
clc
movsl
in
testl
sar
dec
mov
xor
add
and
cmp
and
in
data16
jg
add
xchg
or
cmpsb
lds
pop
pop
mov
scas
mov
insl
xchg
call
rorl
push
inc
push
fdivl
clc
xchg
push
lahf
mov
test
mov
and
arpl
cld
mov
bound
mov
inc
ljmp
mov
push
inc
mov
add
or
test
xchg
icebp
out
outsb
sbb
mov
and
add
pushl
lea
ror
pop
sbb
inc
jnp
test
mov
mov
cwtl
pushl
std
push
mov
or
dec
xchg
out
pushf
aaa
push
mov
leave
mov
into
xor
dec
or
pushl
dec
and
icebp
jne
and
cmovbe
pop
inc
jno
insl
outsb
incl
movsb
out
shr
movsl
movsl
adc
and
mov
fidivs
cmp
jmp
out
jnp
das
arpl
sub
jnp
sub
inc
into
or
rcl
pushf
aas
dec
mov
jne
cmp
mov
stos
add
jecxz
movsl
xchg
pushf
jbe
adc
pushl
pop
fs
adc
push
imul
in
push
dec
inc
dec
xchg
ljmp
xor
repz
movups
and
add
mov
or
jl
shlb
pushl
shl
out
arpl
aad
bound
aas
inc
rcrb
or
dec
in
xchg
hlt
scas
mov
adc
outsb
xor
lcall
cmp
in
xor
lret
sahf
dec
arpl
mov
ficoms
lock
pop
fs
decl
lods
cmpsl
jp
jl
cmpsl
les
sbb
pop
and
mov
add
jns
fcoml
out
ljmp
inc
pusha
sbb
das
loop
push
ficoms
and
and
add
in
cltd
pushl
push
loop
xchg
pop
aas
in
mov
jmp
or
scas
rcrl
es
jmp
cmp
mov
jmp
rcl
pop
imul
mov
mov
cmp
aam
out
aaa
out
xchg
fsubrs
rolb
cmc
dec
mov
ljmp
out
xorl
cmp
int3
cmp
push
jmp
jle
add
aas
mov
push
mov
inc
fwait
andb
notb
clc
push
xlat
mov
fstl
shl
and
movsb
sbb
loope
xchg
stc
fldl
jmp
fiadds
sub
xchg
gs
mov
ret
sbb
mov
mov
sbb
cld
pop
adc
ljmp
pusha
cmp
ret
pop
inc
out
xor
icebp
xor
mov
decl
jnp
aad
popf
mov
pop
jnp
push
mov
lcall
ds
shrl
repnz
sub
enter
adcb
sti
lcall
adc
and
scas
mov
mov
sub
cmp
stc
mov
mov
int3
jo
pop
shr
xor
ss
fiaddl
pop
daa
cmp
push
jecxz
sbbb
xor
mov
scas
mov
les
mov
fcomip
movsb
mov
ret
push
popf
mov
ja
xchg
lcall
fldenv
mov
push
std
call
and
loop
cltd
dec
push
and
sub
test
mov
mov
insb
pop
outsl
jb
xor
pop
outsb
fistpll
or
int
call
and
pop
aad
jns
scas
data16
xchg
add
jle
lock
mov
pushl
pusha
icebp
mov
stc
or
fadds
xor
xchg
vpaddusw
in
mov
adc
push
pushf
jnp
call
push
adc
mov
gs
imul
jbe
cmpsb
sub
add
insl
dec
sahf
aad
sub
sbb
fimuls
adc
jle
push
fcoms
jbe
push
shrl
rcll
lcall
xor
in
icebp
loop
outsb
sahf
loopne
xchg
add
je
or
mov
cmp
repnz
in
or
xchg
in
pop
ljmp
xor
xor
sub
xchg
jo
jae
jecxz
jbe
mov
outsl
loopne
call
mov
pop
aaa
sub
cmpsl
or
cltd
push
mov
dec
lea
pushl
fcmovnu
inc
dec
jb
out
dec
add
dec
je
lods
cmp
jmp
popa
ss
loopne
sub
ljmp
push
es
ljmp
incl
dec
xor
jg
dec
and
adc
ljmp
dec
jmp
call
xchg
push
ds
or
sbb
scas
fisttpll
push
int3
dec
and
lcall
shll
sbb
push
mov
mov
xchg
fsubs
mov
cs
enter
icebp
cli
jmp
std
hlt
cmp
push
fwait
sub
adc
cli
jmp
stos
mov
pop
icebp
call
sub
jns
inc
inc
pop
sbb
cli
jbe
sbb
ja
pushl
inc
mov
cmc
push
xor
cmp
jo
outsl
xor
rclb
inc
and
repz
clc
dec
mull
push
push
push
loop
out
sbb
fcoml
ljmp
jmp
add
int3
sti
adc
adc
in
jnp
sti
xchg
pop
xchg
data16
enter
incl
and
daa
adc
test
ljmp
sub
imul
mov
ss
xchg
fldl
pop
or
push
imul
dec
mov
pushf
movsl
lret
ds
cmp
xchg
inc
scas
push
cmpsl
xlat
inc
in
lahf
pop
ja
repnz
and
iret
in
lcall
std
mov
jle
fdivs
push
mov
or
int
ljmp
fisubrs
mov
insl
pop
or
add
clc
sbb
mov
or
lcall
sarb
ja
mov
lcall
jo
mov
hlt
int3
mulb
jmp
pusha
add
add
mov
sub
shl
gs
inc
jecxz
fiaddl
inc
into
mov
clc
mov
and
ljmp
loope
in
or
mov
std
dec
inc
bts
sbb
jp
pushf
out
inc
mov
jne
mov
mov
mov
xchg
mov
ljmp
das
jle
push
scas
pop
sub
cmp
mov
jl
out
jae
jg
jle
and
call
and
dec
sbb
dec
dec
xchg
fwait
cld
jp
pop
scas
dec
scas
fidivl
fcomip
sbb
mov
add
inc
stc
out
roll
je
jno
mov
std
jl
js
jg
movsl
inc
ret
cltd
out
loop
int
cli
mov
mov
fildl
icebp
lcall
in
jnp
sahf
dec
xchg
mov
stos
lret
pop
inc
repnz
movsl
sbb
push
mov
lcall
mov
sbb
jne
outsl
xchg
dec
outsl
push
sub
or
xchg
loop
xchg
mov
mov
push
dec
jmp
stos
sbb
andps
jle
adcb
pop
popa
popf
lcall
dec
test
sub
inc
call
add
adc
cwtl
adc
decl
lods
hlt
aam
jne
in
adc
add
dec
fsts
sbb
push
fadds
call
mov
sub
add
dec
ss
jb
std
icebp
mov
jecxz
push
mov
aas
insl
dec
int
or
ljmp
incl
jle
imul
add
enter
pusha
xchg
push
bound
jg
push
aaa
test
insb
incl
mov
cwtl
faddl
out
inc
pop
mov
inc
push
ljmp
stc
mov
cmp
call
fidivl
mov
cmp
out
arpl
jp
inc
mov
mov
push
incl
fcom
xor
cmpsb
das
mov
test
push
ds
rclb
jmp
ljmp
pop
enter
ret
lahf
push
loopne
cli
sub
or
mov
mov
into
shll
inc
push
mov
ljmp
push
addl
outsb
scas
outsb
loop
ss
xor
mov
test
fmull
push
sahf
rolb
fbstp
pop
roll
xor
stos
push
add
les
adcb
shll
sbb
enter
sar
mov
mov
jns
sbbl
pushl
data16
push
xor
mov
push
xchg
ja
aas
pusha
push
gs
pop
mov
pushl
inc
lea
das
xchg
cmpsl
xchg
push
cmp
xchg
int
lcall
jae
mov
mov
ljmp
xchg
ds
or
hlt
in
addr16
ljmp
out
cmp
jo
ljmp
adc
out
push
inc
xchg
fwait
int
or
jp
and
arpl
cmp
or
out
decl
jle
daa
movsb
jnp
addr16
fildll
mov
mov
inc
mov
incl
das
dec
mov
in
xlat
cli
daa
sub
inc
sysret
sbb
lds
enter
ljmp
es
or
dec
jae
mov
xchg
cmp
cmpsl
mov
les
pop
icebp
jmp
and
loope
rcl
sbb
andb
mov
daa
push
xor
or
ud0
lcall
xor
data16
sbb
pushf
ja
dec
sbb
stos
out
xor
lcall
imulb
dec
loopne
xchg
cmp
leave
pop
sbb
lock
cwtl
jb
sub
mov
call
les
mov
cmpl
adc
add
imul
sub
pushl
xchg
mov
roll
lods
add
sbb
cvttps2pi
xor
fstpt
mov
cltd
mov
and
outsl
cli
pushl
ja
cld
rcrl
sbb
sub
scas
add
lcall
ljmp
out
sub
cwtl
sub
js
idivl
fcompl
js
mov
or
jg
incb
sub
inc
jmp
mov
clc
cmpsl
push
stc
pop
lock
incl
or
xchg
and
or
and
mov
into
decl
in
push
iret
push
or
out
out
add
cmp
cmp
push
hlt
incl
jno
arpl
adc
fists
int
pop
mov
mov
addl
mov
lock
fisttps
and
mov
lret
fisubrl
mov
inc
sbbl
pop
push
xchg
data16
sbbl
repnz
jg
jno
aas
pushf
cmpsb
inc
mov
jae
or
call
lods
push
mov
sbb
pusha
int3
mov
adc
xchg
hlt
lock
sar
in
adc
xor
cwtl
jnp
ja
aaa
jg
leave
cmpsb
pop
lea
daa
aas
js
adc
inc
addr16
jmp
jnp
sub
cmc
hlt
cmpsl
xchg
add
test
cltd
push
ret
add
sub
jmp
mov
rcll
mov
cs
jp
loopnew
in
out
lock
jge
cmp
in
hlt
jg
fcoml
sbb
sbb
jmp
lods
ss
add
sub
fistps
fcomip
sub
test
sbb
and
mov
jnp
js
loopne
push
sar
fwait
push
leave
pusha
stos
in
dec
xor
sbb
push
test
sbb
xchg
xchg
movsb
idiv
jmp
rclb
mov
daa
loop
xor
rclb
test
or
jge
xor
enter
push
ljmp
repz
loopne
int
push
in
sub
stc
lcall
cmpsb
out
add
sub
mov
orb
test
and
fsubrs
enter
dec
mov
jns
insb
jmp
ljmp
cmpsb
lock
push
test
adc
ror
lcall
or
push
dec
cwtl
pop
outsb
adc
xchg
jp
sbb
ss
hlt
fdivrs
push
loop
add
popa
add
rclb
add
stos
icebp
and
in
popa
lcall
cmpl
orb
in
jb
push
inc
or
notl
outsl
sar
xchg
cwtl
sbb
mov
add
mov
test
jbe
call
rclb
out
int
or
add
jp
pop
arpl
ja
push
mov
out
inc
inc
test
out
cltd
inc
addr16
ljmp
lds
push
dec
dec
sub
icebp
mov
clc
inc
push
repnz
adc
add
and
pop
jge
sbb
decl
cmp
pushf
jl
or
mov
dec
cmp
mov
incl
jae
out
pop
aam
and
push
push
and
aam
push
mov
stc
push
lock
mov
fadds
inc
iret
out
cs
adc
sbb
push
shlb
xchg
sar
mov
les
dec
push
out
cs
aaa
xor
inc
push
mov
push
mov
mov
lcall
adc
out
add
fldcw
inc
mov
fidivrl
dec
scas
call
int3
cmpsl
push
cs
xchg
push
lods
scas
cli
push
mov
jmp
sbb
enter
sbb
lcall
or
add
jmp
mov
jns
and
movb
pushl
xor
mov
xlat
adc
int3
orl
or
cmpsb
xlat
sbb
jmp
data16
aas
adc
add
adc
out
cmp
clc
js
cmp
pusha
jno
incl
pop
sub
in
ficoml
orl
pop
ss
data16
sub
push
inc
xor
ljmp
lea
xlat
iret
sbb
mov
test
mov
mov
adc
lcall
aam
pop
mov
add
pop
imul
xor
mov
lcall
pop
add
sbb
adc
rol
mov
test
xor
in
orl
hlt
cli
inc
call
shrl
mov
cmpl
movsbl
stc
cli
test
lcall
jg
idivb
lea
popa
loop
mov
iret
shr
jns
dec
xor
mov
into
hlt
mov
push
dec
leave
dec
ror
pop
adc
mov
pop
arpl
jmp
push
mov
je
jb
push
popf
lods
xchg
sbb
iret
ds
jae
std
incl
scas
push
imul
int3
sbb
inc
mov
push
js
jg
or
incl
mov
sbb
dec
shl
sbb
jecxz
imul
add
call
sub
pop
jmp
lods
adc
js
lret
push
in
jle
jae
lea
movsl
dec
or
lock
sbbb
ljmp
sbb
fidivs
push
adc
mov
mov
adc
sub
lock
mov
pusha
ret
in
movsl
mov
xchg
cli
call
lahf
out
test
lock
ds
cmp
cmp
adc
inc
mov
pushf
cmp
jg
cs
int3
jmp
push
stc
outsb
pop
add
fwait
and
sarb
bound
adc
xchg
ret
ljmp
jo
dec
sahf
adc
sbb
test
lret
mov
pushf
add
adcl
or
decl
mov
sbb
insl
inc
xor
jmp
test
test
cmp
hlt
mov
loopne
lahf
sbb
lcall
jmp
mov
mov
fnstsw
and
sub
fs
and
scas
jge
cltd
pop
cmp
pop
popf
out
lea
loopne
inc
dec
adc
cmp
mov
xchg
pop
push
in
popa
mov
pushl
std
insb
jnp
pusha
sbb
dec
or
decl
jecxz
lods
cwtl
incl
js
scas
gs
fst
adc
adc
movsb
mov
push
ja
scas
and
cmp
pushl
push
or
cltd
aam
inc
cmp
dec
inc
in
sbb
xor
adc
sub
fidivs
loopne
shlb
sbb
stos
or
punpckhwd
ljmp
cld
icebp
mov
xchg
jb
jp
fistps
pop
das
unpckhps
sar
dec
es
cmc
mov
xor
adc
mov
movsb
jmp
mov
jno
jb
xchg
shrb
dec
and
adc
icebp
mov
cwtl
push
adc
pushl
int3
test
pusha
jecxz
and
ja
loopne
pop
jp
mov
adc
lcall
sbb
inc
mov
loopne
jns
call
mov
adc
xlat
in
dec
cmp
push
filds
inc
xor
es
mulb
outsb
inc
mov
pop
cwtl
lods
scas
mov
pop
add
call
sbb
pop
mov
xchg
pop
cmpsb
jmp
in
aaa
cld
or
movsl
or
inc
cmc
insl
mov
jp
push
out
adc
gs
call
out
push
push
sub
dec
sbb
mov
data16
or
hlt
pop
sub
sti
cmp
sub
adc
jge
inc
imul
push
je
std
lea
filds
push
aam
aad
add
pop
test
lods
jmp
mov
mov
imul
ljmp
test
insb
js
orb
popa
fnstsw
dec
call
clc
call
cmp
add
loopne
adc
and
in
cli
pop
arpl
sub
sti
sarb
incl
repz
roll
xor
mov
push
cmpsl
test
sbbb
or
jmp
xor
enter
stc
dec
jp
and
add
shrb
popl
aad
sub
loope
decl
scas
mov
subl
xchg
cld
sbb
lahf
popa
aad
in
mov
fimuls
out
adc
jbe
jp
mov
ror
jne
daa
outsb
ja
cld
push
add
ret
jmp
mov
in
ds
popf
sbb
cmp
mov
sar
les
lods
call
call
stc
inc
sub
inc
pop
clc
inc
ja
cmpsl
mull
adc
sbbb
fwait
ja
mov
repnz
fcomip
decl
arpl
add
daa
dec
pushf
mov
mov
push
clc
decl
insb
push
hlt
pop
in
lock
fsqrt
mov
insl
xchg
ffreep
leave
lock
ljmp
inc
adc
mov
mov
fcomp
cs
das
std
ds
mov
xchg
in
hlt
pushl
std
ljmp
dec
ficoml
pop
cmc
push
add
jge
and
mov
adc
clc
dec
jge
and
dec
xor
rorl
inc
les
pop
or
or
jmp
mov
xchg
shrl
xchg
lcall
ja
call
jae
dec
mov
lcall
fimull
or
xchg
out
in
mov
test
sbb
outsl
xchg
lock
mov
icebp
idivb
mov
pusha
xor
pushl
js
sbb
in
pop
sub
jae
cld
cmc
and
add
int
adc
jmp
push
repz
mov
push
xchg
fwait
jl
ret
hlt
std
sub
fwait
mov
dec
test
xchg
xchg
adc
ds
or
mov
dec
icebp
pop
imul
incl
add
and
js
jle
fistpl
stos
dec
data16
loopne
sbb
call
mov
test
xchg
out
fdivrl
subl
stc
shll
in
out
jo
sbb
fs
xor
jb
mov
sub
js
mov
and
ljmp
inc
push
sub
movsb
mov
fldt
push
push
jp
pop
call
xlat
sbb
push
add
or
mov
or
mov
lcall
inc
xor
mov
lcall
xchg
loope
decl
inc
cmpsl
sbb
scas
lret
out
fxch
sub
inc
sub
out
add
filds
decl
push
stc
mov
cwtl
hlt
movsl
ss
mov
sbb
lods
mov
and
hlt
andl
test
mov
ss
fwait
nop
xchg
jne
xchg
rolb
cs
dec
std
lock
adc
mov
jp
test
adc
or
ffreep
movsl
pop
or
mov
push
jg
sub
ljmp
fcomi
inc
mov
cmp
stos
jno
pop
jo
mov
mov
into
xchg
mov
ljmp
or
xor
sub
add
aaa
std
ljmp
cmp
sub
mov
ljmp
jb
leave
outsl
ja
or
sbb
inc
adc
outsl
sbb
dec
jnp
jae
jmp
jnp
adc
mov
cmp
inc
pop
or
lock
xor
in
pop
das
sar
les
lret
lret
popa
lock
sub
ljmp
jnp
or
adc
shll
lahf
cmp
sti
pop
sti
fnstsw
push
stc
sbbb
sbb
pushl
push
dec
mov
cld
pushf
pop
jle
sbb
int3
mov
adc
mov
ret
mov
repz
mov
push
arpl
cmp
rcl
ds
ljmp
shlb
mov
inc
dec
or
cmp
jnp
outsb
add
jg
lcall
lahf
outsl
inc
or
test
push
or
fildll
mov
lods
incl
stos
jns
mov
mov
mov
aaa
jno
jmp
adc
pop
sbb
lods
push
movsl
js
jmp
xchg
in
ljmp
int
xor
jmp
cmpsl
roll
mov
stos
cltd
sbb
test
xchg
mov
ss
das
popa
lods
sub
xchg
push
jno
enter
or
pushl
pushf
call
sbb
pop
mov
mov
mov
sbb
ret
fcomip
scas
mov
movsb
mov
sbb
pop
xchg
int3
fcmovnbe
and
lcall
push
xor
dec
xchg
push
movsb
daa
or
sub
cmc
add
mov
fildll
fwait
sub
movsb
dec
jp
pop
outsl
stos
aaa
and
mov
je
jmp
jbe
lea
push
mov
add
inc
out
je
jno
imul
out
jmp
repz
sbbl
fs
ljmp
insl
loopne
and
sbb
sbb
jne
inc
mov
xchg
fnstsw
stc
xor
sub
decl
enter
mov
mov
int3
enter
inc
sub
rolb
mov
out
lahf
adc
or
mov
fsubrl
lea
and
mov
mov
xchg
jg
stos
inc
lret
sbb
pushf
and
out
in
gs
pushl
fbld
ror
add
popf
jg
test
mov
xchg
decl
cmpsl
das
int3
and
adc
sbb
adc
adc
mov
jo
insl
aaa
jmp
mov
mov
sub
cmp
pop
jbe
shl
or
sbb
jg
push
jmp
icebp
push
add
lods
outsl
cmpsb
ret
and
and
pop
or
push
jae
in
mov
cmp
pop
sub
push
jg
imull
pushf
push
test
hlt
roll
xchg
rep
stos
sub
mov
xor
push
mov
inc
push
xor
decl
ret
adc
in
loope
fldcw
xchg
sub
cld
jno
insb
mov
leave
sbb
cli
pushl
and
pop
mov
mov
mov
test
push
sbbb
pop
in
xchg
xlat
and
sahf
imul
pop
add
movsb
pop
pop
fidivrs
das
xor
push
push
or
jge
sbb
sbb
sub
sub
sahf
das
and
test
es
cmpsl
jg
dec
les
sbb
adc
repz
and
mov
call
or
das
or
jp
in
dec
mov
mov
fiadds
jne
aam
push
cmp
push
pushf
das
bound
pop
dec
out
pop
in
dec
iret
or
jno
lock
lahf
inc
and
leave
and
lcall
out
sahf
sub
ret
outsl
push
xchg
ja
mov
and
arpl
mov
push
aam
imul
or
test
mov
jae
lea
aam
enter
std
mov
cli
pop
aam
add
aam
sub
sbb
sbb
mov
loope
inc
dec
ss
lcall
push
push
popf
pop
and
rolb
pop
or
adc
ljmp
mov
adc
add
call
test
arpl
mov
mov
lcall
adc
mov
mov
xlat
outsb
out
incl
and
sub
mov
je
loope
pop
ret
lods
mov
mov
je
cwtl
fnsave
in
decl
and
lea
dec
lds
sbb
shll
nop
cmc
sti
cmp
inc
lret
jg
sbb
mov
or
lahf
mov
xchg
mov
jg
sub
out
insb
mov
dec
adc
outsb
mov
pop
pop
out
push
leave
mov
pop
lds
ja
jmp
fnsetpm(287
or
add
rorb
lds
sbb
lcall
or
dec
nop
cld
cmp
lahf
pop
js
add
js
frstor
sbb
pop
sub
and
scas
xchg
adc
or
jg
out
outsb
cmp
je
pop
inc
shl
aam
cmp
cs
aad
or
sbb
add
stos
mov
and
andb
mov
fcmovbe
in
xlat
out
add
pop
icebp
incl
pop
mov
or
test
shrl
jg
test
xchg
mov
push
inc
mov
std
cli
or
mov
repz
jmp
aas
ror
xor
and
lret
and
adc
jge
test
stc
mov
ljmp
cmp
fs
push
cmp
sbbl
icebp
adc
push
jns
fimuls
jmp
pop
cmp
out
scas
addb
in
push
cld
cld
call
inc
push
mov
lock
sti
nop
jo
decl
inc
mov
xor
mov
sti
divl
out
xor
jl
push
dec
dec
pop
xor
scas
xlat
and
push
ljmp
int
mov
dec
andb
movsb
add
inc
popa
icebp
call
stos
jnp
je
or
in
pop
mov
jo
push
iret
test
xor
in
loopne
call
mov
adc
int
adc
push
inc
pop
cwtl
outsb
adc
sbb
pop
xchg
push
negb
lea
push
lods
or
mov
xlat
inc
mov
cmp
inc
mov
jmp
mov
fstps
ret
outsb
mov
xchg
popa
dec
jecxz
idiv
mov
pop
cwtl
sub
fmuls
lods
inc
insl
mul
ljmp
out
outsb
sarl
inc
or
ljmp
lods
push
mov
mov
and
stos
dec
xor
inc
rcrl
sahf
aam
lret
pop
mov
lock
lcall
das
adc
dec
xor
cmp
jo
mov
push
xor
and
mov
fs
mov
jmp
into
push
push
jae
mov
nop
testb
decl
mov
ds
sbb
shll
and
repz
ja
addr16
mov
orb
inc
js
mov
mov
and
loopne
xchg
in
push
adc
loope
pop
imul
outsb
inc
mov
inc
xor
add
pushf
mov
jno
mov
leave
loopne
mov
cld
push
sub
ret
enter
or
or
cmp
mov
mov
lods
add
int3
sub
dec
xchg
rcl
cmpsb
bound
inc
dec
pop
lds
xchg
out
loop
jmp
push
cmp
sub
push
ja
loop
sbb
pushl
ds
dec
xchg
mov
cltd
push
xchg
xchg
andl
sub
cld
mov
push
shrb
add
push
push
xor
sbb
mov
or
mov
jg
jo
sub
jmp
mov
pushl
lret
mov
cld
int3
xor
push
pop
push
pushf
ret
mov
xor
inc
mov
cwtl
xchg
jmp
pop
icebp
push
pop
or
jae
lcall
push
int3
xchg
mov
mov
movb
addr16
mov
sub
xchg
xchg
inc
xchg
sub
jnp
cs
jnp,pt
sbb
push
scas
mov
push
mull
lcall
mov
lret
call
adc
scas
pop
pop
fld
xor
jbe
outsl
lock
cmp
mov
cmc
jmp
into
popa
aaa
pop
mov
push
adc
jb
sbb
add
fbstp
leave
xor
ja
push
cmc
xchg
sub
movsl
sub
cmp
pmaxub
mov
pop
xchg
mov
decb
adc
rorl
pop
dec
cld
or
xorb
adcb
push
add
mov
rcll
clc
inc
sahf
nop
jmp
andl
fcompl
cmp
mov
call
jno
fisttpll
ss
jmp
sbb
sub
test
xor
xor
cmc
fnsave
lcall
pop
mov
clc
stc
fs
iret
rcll
insl
adc
and
and
mov
test
es
mov
out
cmc
or
mov
mov
icebp
xchg
push
jl
jle
xchg
scas
add
dec
xorl
inc
xchg
xchg
imul
dec
push
js
xor
out
xor
outsb
ret
pop
or
ljmp
movsb
das
xchg
sub
rclb
pop
add
call
into
push
cmp
rorl
lcall
iret
xchg
jg
lret
repz
dec
mov
sbb
inc
arpl
stos
ljmp
jmp
xchg
pop
mov
outsl
jns
out
adc
jae
push
push
cmp
fs
cmp
out
js
mov
pusha
jmp
mull
pop
mov
sub
jle
call
decl
sub
mov
test
aam
aam
dec
shlb
or
push
dec
xchg
ljmp
push
mov
mov
or
jmp
xchg
das
movb
xor
sub
pop
and
inc
mov
push
outsb
xchg
iret
add
decl
or
push
es
lcall
xchg
addr16
cmp
lret
cmpsb
sbb
out
sbb
ljmp
mov
or
hlt
clc
jmp
clc
bound
and
sub
pop
inc
in
mov
je
xchg
ljmp
mov
pop
arpl
movsb
mov
add
adc
jg
sbb
and
adc
add
aaa
icebp
es
xchg
in
in
out
repnz
push
outsl
iret
jmp
inc
and
insb
aam
lcall
jbe
jecxz
xor
aaa
sbb
jmp
mov
mov
das
pushf
cmp
mov
pushf
ret
cli
psadbw
or
xor
inc
lret
jnp
popa
push
mov
and
cmpsb
jno
and
cli
sub
aad
ljmp
mov
push
subl
iret
das
pushf
cmp
mov
lea
call
mov
call
aad
andb
inc
push
xchg
push
cmp
inc
jo
inc
add
roll
incl
data16
sub
jg
dec
or
leave
stc
out
ljmp
mov
and
pushl
adcb
xchg
sub
pusha
aaa
in
and
pusha
mov
or
inc
jb
push
orl
jp
adc
jmp
addr16
xor
inc
mov
xchg
sbb
fdiv
hlt
add
cli
incl
outsb
mov
push
add
xor
sub
pop
pop
iret
inc
jmp
push
jae
pusha
jbe
mov
shll
inc
xchg
mov
push
jg
push
pop
cmp
ljmp
push
dec
xor
push
fldenv
pop
mov
cmp
inc
jo
mov
lcall
or
or
mov
jb
push
jb
in
int
add
xchg
cmp
incl
lds
lret
push
push
cmp
inc
lahf
cli
std
lods
inc
push
xchg
lret
mov
dec
xchg
mov
jecxz
adc
insl
outsb
or
scas
and
imull
xchg
jne
orb
inc
xor
and
cmpsb
test
sbb
push
adc
jns
imul
loope
mov
mov
mov
and
fs
clc
fildll
stos
repnz
gs
jp
adcl
dec
repnz
nop
ds
pushf
mov
mov
pop
ljmp
lcall
icebp
lods
popf
out
fisttpl
shll
pop
out
lock
push
sub
push
insl
cmp
adc
clc
insb
xchg
pop
xor
dec
cmp
inc
inc
stos
add
mov
mov
cld
call
adc
jl
push
inc
gs
in
fincstp
jecxz
dec
inc
lcall
cld
pop
inc
test
pop
push
jmp
xchg
add
push
daa
lret
ljmp
outsl
mov
stos
scas
insl
daa
cmp
mov
cmp
xor
inc
repnz
orb
push
sub
sti
push
stos
fadds
stc
adc
jle
cmpsb
xor
sbbl
insb
test
sub
fidivrs
pop
shll
jmp
xchg
enter
mov
xor
sar
flds
aas
dec
jge
stc
jns
xsave
sub
je
js
loop
mov
dec
lret
adc
decl
jl
mov
adc
adc
inc
clc
les
xor
das
outsl
dec
sbb
cmp
mov
in
rcll
mov
pop
push
mov
add
and
cmp
add
ljmp
pop
mov
dec
push
cmp
int3
stos
cmp
sub
js
insb
je
mov
fwait
dec
imul
fsubrs
sar
sbb
movsb
adc
add
in
pop
mov
repnz
push
jp
sub
mov
mov
inc
shll
hlt
cmpsb
pop
xchg
inc
das
fcoml
outsb
sbb
push
nop
hlt
decb
xchg
test
sub
out
cwtl
push
nop
xor
mov
lret
movsb
aam
jl
cmp
and
mov
decl
mov
lods
mov
ljmp
jmp
dec
test
mov
push
cmp
sub
xchg
add
cltd
ljmp
incl
mov
push
or
sub
out
or
test
xor
cmpsb
sbb
xor
pop
rcrl
lcall
xchg
jge
faddl
cmovle
or
xchg
jno
cmp
mov
outsb
push
cmp
stos
lcall
and
out
push
scas
mov
inc
movsl
int
pusha
adc
jne
mov
cmpsb
pop
add
les
pop
ss
or
shrl
xor
jmp
sbb
mov
add
jg
inc
jge
inc
xorl
call
in
adc
xor
sbb
test
aaa
dec
xor
push
pop
out
lods
into
add
sti
fiadds
out
add
sbb
lods
les
push
or
adc
or
jmp
out
inc
jle
leave
imul
pusha
push
or
lds
adc
xchg
pushl
dec
aaa
shll
mov
daa
in
ja
pop
inc
xchg
sub
sbbb
lret
mov
pop
pop
xor
sbb
mov
lcall
pop
ret
ret
daa
hlt
lods
fstl
hlt
decl
jbe
pop
mov
or
mov
lds
sbb
cmpsb
sbb
adc
jg
mov
lcall
in
arpl
out
push
pop
call
sarb
jnp
or
sbb
sub
aaa
std
mov
mov
or
cmp
xchg
call
je
mov
rclb
loope
call
jae
xor
push
push
scas
mov
sti
out
or
inc
push
test
lcall
lcall
adc
int3
cli
outsb
retw
sarb
in
push
imulb
xor
lcall
out
cmp
adcl
mov
lret
sbb
loopne
mov
pop
out
or
call
sbb
jp
sti
aad
ljmp
adc
in
mov
decl
push
sbb
inc
pop
xchg
dec
push
fisubrs
inc
mov
pusha
jg
ljmp
sub
ljmp
aaa
lahf
sbb
int3
inc
test
mov
cmp
push
lret
sub
cwtl
imul
mov
mov
rorb
dec
xchg
jae
incl
or
sub
mov
mov
fistpl
dec
sub
icebp
xor
loopne
mov
call
gs
cmc
out
fs
pop
stc
rclb
mov
shl
popa
outsb
inc
idiv
pop
js
or
es
pop
sarl
mov
sbb
pop
outsl
or
inc
add
inc
call
pop
clc
call
mov
ljmp
mov
dec
inc
mov
jmp
scas
cmpsb
adc
jns
nop
mov
and
jnp
xlat
mov
or
jp
stc
push
push
fidivrl
mov
ds
pusha
popf
stos
pushf
push
invd
jno
jmp
pop
mov
add
call
test
mov
and
scas
repnz
scas
std
int
push
mov
loope
sar
jmp
cmc
xor
jo
nop
jl
ds
mov
popa
xchg
imul
jmp
das
call
bound
mov
fwait
add
leave
sbb
ljmp
clc
fdivp
push
dec
sbb
loope
cmp
sbb
pop
cmp
jno
out
decl
sub
mov
leave
and
xor
push
xchg
and
decl
inc
and
cmp
xchg
push
sub
push
arpl
jmp
xchg
lea
lea
adc
je,pn
stc
das
fmull
js
inc
and
aam
js
sahf
fstpt
fcmove
jp
xor
xor
sub
mov
add
cli
sahf
sbb
inc
scas
push
in
lcall
xchg
aam
cmc
mov
adc
aaa
dec
sub
add
test
add
mov
hlt
lcall
shr
icebp
rcr
lock
dec
sbb
jg
fidivrs
ljmp
inc
bound
fcomip
xchg
repnz
cs
idiv
jne
stos
cmpsb
ljmp
fsubr
ret
xchg
sub
in
cli
jmp
ds
incl
lds
lret
lds
outsb
adc
aam
pop
cmpl
jb
cmp
rorb
sub
jg
decl
mov
das
pop
in
je
lret
es
sahf
and
inc
xchg
icebp
scas
test
fsubrl
imulb
sub
push
mov
push
and
fcomi
sbb
xor
jle
cltd
ds
mov
hlt
pusha
sub
push
aas
rol
sbb
jo
mov
sahf
out
movsb
arpl
daa
sub
call
and
fcoms
fidivrl
dec
mov
jmp
mov
push
pop
or
adc
daa
pop
enter
cmp
mov
mov
mov
mov
cmpsl
jns
or
mov
jne
xor
sahf
ds
pushl
rclb
mov
sub
mov
xchg
sarl
outsl
std
jne
cmp
dec
or
popf
jo
daa
inc
fstpl
ret
push
and
mov
mov
and
xor
out
hlt
fsubrs
xlat
in
cltd
pop
xlat
pushf
pop
clc
push
mov
xor
adcb
cmpsl
rorl
add
jnp
rcl
outsb
loopne
ret
out
outsl
jmp
insb
cltd
aas
mov
adc
xchg
sbb
mov
fidivl
pushf
cwtl
xchg
je
outsl
cli
mov
inc
cmp
fsts
and
inc
shrl
cld
or
aam
xchg
mov
and
cs
test
inc
lret
xor
push
out
xchg
xchg
push
daa
and
test
push
outsl
push
std
jg
lret
pop
jg
dec
stos
mov
dec
lret
mov
out
adc
incl
out
sbb
jbe
jg
xchg
out
scas
ficomps
out
pop
mov
test
mov
sbb
dec
sar
decl
adc
stos
cmpsb
xchg
sub
mov
lods
mov
clc
lcall
loop
xchg
inc
pop
add
loop
lret
mov
push
jnp
pop
lods
sub
pushl
xchg
pop
xor
ljmp
dec
incl
cltd
mov
cld
hlt
mov
call
clc
push
push
jne
cmp
cmp
outsl
cli
jbe
arpl
and
cmp
mov
pop
sbb
ljmp
mov
cmc
mov
stos
clc
jnp
nop
fisttpll
cmp
xor
je
push
mov
pushl
jne
add
mov
call
mov
dec
jno
adc
sbb
adc
enter
mov
leave
filds
inc
push
stos
jmp
dec
fcomps
out
cwtl
cmp
decl
push
into
orb
mov
jne
mov
cmpsl
decl
fsubs
imul
sti
mov
lcall
cmpsb
mov
decl
pop
imull
leave
jecxz
pop
cmp
xor
ret
aaa
stos
sub
cmp
jg
pop
inc
mov
inc
sti
ror
shlb
mov
xchg
and
mov
push
std
jmp
jbe
jae
test
addr16
mov
jo
sbb
jmp
insb
sbb
jne
xchg
cmpsl
mov
dec
jp
xchg
enter
popf
frstor
loope
sub
das
push
call
insl
add
xchg
aas
lods
mov
dec
dec
cmc
outsl
aad
decl
mov
vcvttss2si
mov
sbb
movsl
iret
fmuls
xchg
lock
push
xor
cmp
push
jecxz
jl
inc
ffreep
pop
sti
adc
out
test
js
and
call
loope
loopne
mov
xchg
lcall
inc
addr16
mov
fisttpll
jecxz
inc
mov
jmp
pop
jmp
add
out
push
imul
inc
lcall
xchg
mov
lcall
mov
or
push
outsb
xlat
ss
leave
push
out
je
testb
lock
jns
mov
mov
pop
loope
std
and
imul
xadd
fimuls
jbe
sbb
fwait
sub
xchg
push
es
xor
ljmp
adc
mov
dec
push
or
loope
adc
mov
lcall
std
mov
dec
jae
push
mov
dec
inc
iret
push
mov
lret
inc
mov
rcll
dec
int3
jnp
jb
int
lahf
popf
shlb
rcll
inc
inc
jp
lods
daa
jl
decl
pusha
pop
mov
xchg
jbe
or
scas
stos
in
loopne
orl
pop
jns
scas
push
decl
sub
dec
scas
mov
pop
leave
in
push
add
push
xor
incl
negl
inc
jne
mov
xor
movsl
jge
lds
xchg
sbbl
sbb
rcrl
movsb
scas
add
mov
int
mov
xor
sub
lds
fisubrs
pop
adc
adc
ret
push
pop
aad
sbb
pop
mov
repnz
fadds
push
into
scas
sbb
and
jg
and
jb
shr
jmp
inc
sbb
loopne
xor
in
pop
dec
or
jnp
repnz
sub
scas
stc
push
add
xor
ljmp
cmp
fistps
les
ljmp
in
pop
xchg
mov
add
test
incl
dec
jp
movsl
fsubl
cmp
test
sub
out
ds
in
clc
fildll
call
sub
inc
or
mov
ljmp
mov
mov
fs
les
cli
add
scas
push
sub
js
lcall
js
add
leave
dec
inc
adc
mov
mov
xchg
jg
rcll
ret
out
push
fs
inc
mov
dec
fdivr
push
les
jbe
jb
cs
call
ljmp
mov
mov
cmp
inc
dec
add
outsl
cli
dec
pop
adc
and
mov
xchg
push
mov
inc
jb
decl
fsubr
mov
repz
shrl
out
divl
das
loop
je
inc
incl
pop
jne
mov
jp
sub
mov
add
push
outsb
stc
pop
and
jbe
clc
cmp
mov
sahf
movsl
sbb
mov
pushl
fcoms
sti
sub
pop
cmp
xor
lret
push
xchg
fistl
fmuls
sub
dec
stc
push
dec
hlt
pushf
push
mov
pop
adc
mov
lods
pushl
push
int3
or
adc
ss
hlt
mov
es
jle
and
xchg
xor
loopne
sbb
push
cwtl
outsl
mov
test
and
aam
leave
push
dec
movsb
mov
push
sub
lahf
dec
inc
cs
fdivrs
insb
push
jge
call
xor
adcb
adc
inc
xor
adc
addr16
fcmovnb
dec
mov
mov
decl
jmp
xlat
dec
jb
cltd
mov
lods
jle
sbb
call
and
lea
stos
shl
hlt
push
shll
repz
mov
int3
cmp
leave
notb
or
leave
pop
bnd
xchg
nop
or
adc
aam
loope
gs
pop
mov
repnz
mov
pushl
cmc
imul
xor
cmp
jns
ds
jns
mov
xor
test
push
adc
ds
adc
cmpsb
inc
in
aad
das
xchg
movsb
cwtl
push
repnz
ljmp
shrb
mov
pop
adc
outsl
inc
fstp
dec
in
mov
es
outsl
decl
pusha
ret
inc
mov
gs
sbb
iret
aas
sbb
mov
fisubrs
pushl
lcall
sbb
jecxz
mov
fildl
scas
scas
or
jle
adc
mov
and
popf
mov
unpcklps
imul
adc
call
addb
mov
dec
sub
jmp
cli
sub
lahf
xor
push
jbe
dec
lret
lock
and
scas
mov
rorl
push
mov
rolb
aas
iret
mov
call
adc
inc
loopne
adc
pop
push
mov
mov
rcll
inc
dec
into
fucomi
add
and
inc
jmp
jns
dec
jbe
xchg
fcoml
outsb
or
subb
adcl
arpl
jns
mov
int
sub
ljmp
pop
lahf
mov
out
fnsave
rclb
sub
mov
js
mov
add
lret
cmp
sbb
cli
sti
arpl
and
ljmp
cli
dec
ja
scas
popa
inc
xor
aam
int
sub
gs
ficoms
js
lods
test
iret
aam
jge
jp
cmp
add
cwtl
jnp
mov
call
or
dec
fstl
cmpsb
inc
cmp
xor
dec
shll
jg
dec
orl
push
mov
push
cmp
sbb
jmp
or
mov
mov
dec
add
xchg
pop
dec
and
push
mov
xchg
push
inc
into
dec
stos
popa
fcoml
inc
cs
mov
mov
test
dec
mov
push
add
fldlg2
mulb
jmp
addl
repnz
mul
test
fcomip
loopne
push
mov
addr16
mov
mov
fs
jmp
push
orl
mov
inc
jle
xchg
ret
xchg
adc
arpl
cli
pushl
mov
loopne
lods
cmpsl
add
mov
shll
mov
mov
outsl
in
add
movsb
mov
ja
jmp
pop
mov
adc
shlb
hlt
mov
std
lcall
loopne
cmc
imul
into
call
jg
pop
xchg
ret
sbb
inc
loope
mov
lret
das
inc
and
mov
or
add
call
or
pop
push
ljmp
icebp
xchg
inc
add
enter
addr16
sar
cmp
jp
ret
mov
lods
add
sub
sbb
cmpsl
les
lcall
xchg
ret
xor
idivb
sbbb
pop
rorb
jecxz
fbstp
stos
jae
hlt
mov
mov
add
dec
and
xchg
pushl
out
clc
jns
push
arpl
iret
sub
jecxz
mov
pop
push
rep
stc
lcall
or
mov
fisttpl
mov
push
lods
jmp
sub
int
out
push
add
cmp
xor
sbb
leave
inc
xor
orl
push
and
ljmp
shr
mov
lds
sub
cli
dec
mov
dec
cmp
xor
cmc
rcr
or
jae
out
addb
dec
cli
dec
outsl
arpl
fsubrs
call
fdivr
cwtl
jne,pt
pop
push
insl
jge
add
push
sub
jp
inc
or
pop
rorb
fidivrl
sbb
pop
push
mov
sbb
movsl
push
out
and
lcall
por
and
push
cmpsb
int3
jbe
mov
pop
lods
xor
lret
enter
movsb
leave
out
jmp
ficoml
sbbb
cmpb
inc
loope
mov
push
inc
jg
jnp
add
testl
pusha
pushl
cld
fdivrl
adc
out
cmc
jl
adc
add
fldcw
mov
mov
xor
decl
mov
xor
iret
out
pop
inc
cmp
in
sub
popa
clc
cmp
sub
cld
filds
fwait
cmp
mov
mov
xor
mov
popf
push
xor
cld
mov
loopne
sahf
adc
dec
or
loop
ret
pushf
and
pop
push
fiadds
gs
jne
enter
pushl
mov
enter
lods
testl
jne
push
test
jg
test
and
sub
xchg
divb
push
lret
xor
lock
lahf
and
icebp
adc
lcall
sbb
push
pop
fldl
and
inc
lahf
lcall
call
rclb
stos
add
inc
jge
imul
inc
call
push
fdivrp
call
push
mov
sbb
mov
push
push
pop
sbb
lds
sub
jmp
cmp
xor
cli
out
insl
sarl
mov
cld
xchg
ja
in
mov
jne
out
clc
jmp
cmp
sub
dec
mov
jecxz
adc
adc
jae
mov
int3
or
and
stos
jg
inc
movsb
xchg
repnz
xchg
rcrl
or
lock
lahf
mov
xchg
dec
jl
lahf
sub
mov
jmp
es
or
popf
mov
cmp
fstpt
xchg
xor
outsb
cs
pushl
push
bts
fnstenv
rorb
movsb
adc
test
add
idiv
sub
ret
push
sbb
clc
jbe
adc
movsb
jae
dec
mov
mov
lcall
sub
aaa
and
xchg
push
scas
and
cli
ljmp
inc
lret
movsl
inc
scas
jge
cmp
cwtl
xor
or
stos
jb
clc
pushl
fisubrl
fnstcw
out
push
xor
sbb
pop
xchg
jl
in
movsl
clc
mov
jae
inc
scas
dec
pop
cmp
movsb
test
mov
sbb
dec
xor
add
cmc
ds
lock
ljmp
gs
test
jecxz
pop
lds
and
dec
add
fwait
cmp
push
inc
incl
adc
mov
imul
jge
mov
lods
sub
std
and
arpl
incl
xchg
or
stos
pop
lret
test
ficoms
xchg
call
xchg
jnp
add
jmp
aam
sbb
push
call
icebp
ret
push
clc
ljmp
push
std
dec
lods
fsubr
add
dec
ja
mov
mov
mov
inc
mov
incl
in
fidivs
into
xchg
or
sub
sub
jo
pop
adc
pop
xor
shll
jbe
insl
sti
jb
pop
add
pop
xchg
add
popa
pusha
add
lock
pop
jno
call
clc
into
and
std
pop
add
mov
rcrl
sub
aad
cmp
inc
sahf
outsl
xor
clc
lret
cmp
mov
jnp
or
add
jg
jp
pushf
jnp
cmp
xchg
stos
jle
mov
aaa
jp
iret
mov
jp
cmc
cmp
or
xchg
or
inc
in
lods
cmp
pushf
cmc
aaa
inc
lcall
mov
test
lcall
xor
das
sahf
sbb
js
push
arpl
fisttpll
inc
jmp
inc
dec
repz
out
xchg
lahf
loopne
outsl
cli
pop
ror
cmpsb
inc
mov
adc
mov
sar
jg
sbb
cmpl
ret
out
fidivs
rcll
jne
mov
jp
fsubrl
insb
pop
cmp
rclb
push
nop
leave
or
in
add
leave
in
ret
lods
mov
sub
test
jb
xor
lcall
xor
mov
fidivrl
rcll
push
ds
sub
xor
pushl
ret
adc
mov
dec
add
lret
or
rorb
mov
scas
fsubrp
dec
mov
pop
ss
std
shll
adc
add
mov
pop
cmc
aas
in
scas
or
int3
and
out
xchg
mov
cmp
andl
jno
sub
jl
mov
fsubrp
mov
in
jns
pop
xor
jg
mov
mov
lret
inc
mov
adc
jbe
lods
clc
clc
ljmp
or
repz
xchg
leave
xor
movsb
xor
sub
and
outsb
mov
ljmp
or
inc
mov
mov
repnz
sti
xchg
mov
xor
adc
pop
in
addr16
scas
addr16
and
cld
fwait
xor
inc
inc
lods
pop
push
ss
or
add
push
movsb
pushl
cmpsl
push
addl
mov
sbb
fdivrs
iret
cltd
dec
call
mov
cmpsl
stos
hlt
imul
sbb
lods
pop
pop
std
ffreep
imull
popf
sbb
jmp
pop
lock
mov
push
int3
jp
ret
ljmp
dec
jg
and
dec
cmpsb
imul
dec
adc
iret
lahf
and
dec
jb
ret
lock
call
jmp
sub
jno
shrl
fs
push
inc
mov
ret
xor
jmp
jmp
imul
test
xor
insb
in
sahf
mov
cmp
xor
dec
push
mov
cwtl
jo
jae
outsl
or
ss
decl
push
loope
insb
les
cmpsl
clc
push
fwait
clc
mov
xchg
repnz
push
xchg
add
fsubrl
xor
lea
cld
or
lret
sub
mov
lret
lcall
cld
das
out
cmp
xchg
pop
mov
clc
lahf
popa
push
lcall
jl
and
loop
sub
data16
test
inc
je
mov
mov
out
movsl
push
xchg
test
push
aaa
orb
mov
mov
fsubrl
mov
and
inc
sarb
and
scas
xchg
pop
aas
shll
jnp
hlt
sar
lods
pop
inc
sbb
mov
inc
pop
and
mov
mov
pop
inc
shrl
xor
das
cli
push
jecxz
fstl
loopne
push
lcall
mov
inc
adc
icebp
sbb
int
jg
incl
fnsave
sub
jae
and
push
xchg
ss
loop
inc
sub
or
mov
fidivl
sti
fists
rol
mov
xchg
lcall
mov
fldcw
out
cwtl
mov
fucomp
jb
push
decl
push
pop
mov
pushf
fldenv
dec
cmp
cli
sub
adc
in
decl
iretw
ror
out
ret
out
jp
sarb
test
xor
or
loop
decl
fwait
add
insb
cmp
stc
into
insb
or
push
push
ret
in
add
and
dec
sahf
scas
jle
xchg
lods
or
jno
inc
push
fwait
mov
loopne
out
fisubrl
mov
pushl
and
repnz
cli
ja
enter
mov
and
ds
jno
cmp
fsubs
push
ljmp
sar
sbb
jle
enter
cmp
adc
xor
mov
out
clc
jmp
jle
repz
enter
idivl
insl
shlb
outsb
outsl
test
xchg
cmp
dec
xor
out
sub
sarl
cmp
and
pushf
out
dec
nop
repz
jg
inc
mov
in
xchg
insl
and
jecxz
jbe
cmc
loopne
fs
and
add
jmp
xchg
add
ja
and
insl
decl
mov
jp
dec
mov
or
sub
shlb
orl
and
sbb
out
inc
cmp
inc
inc
rcl
out
insl
movsl
cmpsb
stos
sti
push
xor
push
les
sbbb
sbb
loop
sub
incl
or
in
pop
cli
xor
scas
dec
or
cmp
lcall
dec
gs
jmp
sub
xchg
sub
pop
or
push
push
fcompl
movsb
and
adc
cmp
ljmp
or
test
cmp
sbb
sub
cmp
clc
xchg
adc
ljmp
inc
rolb
sahf
adc
std
sub
add
xchg
inc
mov
sub
leave
fiadds
lcall
add
test
inc
popa
aas
push
cmp
adc
fucomi
orl
dec
mov
stos
punpcklbw
or
inc
adc
cs
sub
and
decl
out
dec
and
addl
mov
fsubrl
out
xchg
dec
mov
or
les
fs
das
xchg
add
or
mov
fnstenv
mov
mov
jp
popa
mov
in
icebp
loope
pop
lea
and
call
ljmp
js
rclb
aad
fcomps
test
mov
mov
pop
int3
pusha
aad
test
jecxz
pop
ljmp
xlat
mov
pop
xchg
mov
adc
push
xor
insb
test
out
or
testb
mov
sub
lock
jp
fsubp
mov
add
add
jmp
dec
ja
jp
push
jns
mov
insb
pusha
cmp
leave
lcall
ja
mov
in
add
xor
fcomip
hlt
jne
jge
xor
int3
ret
sub
adc
ds
lcall
and
enter
daa
das
push
dec
or
sub
ss
push
jns
jmp
je
xor
xchg
ljmp
push
es
movsb
mul
mov
mov
fwait
aaa
fs
cmpsl
sti
inc
push
aam
inc
jns
pop
outsl
lahf
fdivp
popa
mov
xchg
xor
ja
adc
inc
aad
push
pop
mov
or
leave
inc
dec
add
mov
fcompl
fsubrs
notb
dec
xchg
or
ljmp
out
mov
mov
pop
into
inc
jl
mov
out
incl
mov
rclb
test
lea
aad
mov
iret
clc
mov
stc
out
fs
leave
stos
jmp
fiaddl
imul
ljmp
sbb
mov
enter
pop
mov
cmp
jge
mov
cmp
das
jecxz
inc
shrl
push
arpl
sbb
jmp
inc
setl
jecxz
das
int3
sahf
inc
jns
scas
cmpb
push
push
dec
cmp
push
lds
sahf
cli
mov
lds
int3
pop
in
xor
or
arpl
aaa
call
fisubrl
push
mov
fcomip
xor
cmp
movsl
mov
mov
adc
mov
add
fdivl
test
mov
cmp
decl
or
cmc
mov
push
pop
and
adcl
mov
mov
xor
xor
and
add
aam
and
ss
pop
and
and
test
mov
cmc
or
jb
push
les
jl
imulb
js
mov
out
and
loope
inc
add
xor
push
inc
clc
inc
and
rorb
and
ljmp
cmp
xchg
pop
dec
pusha
pop
adc
and
adc
xlat
xor
ljmp
pop
add
inc
fwait
ret
push
test
cld
in
ss
jne
es
gs
adc
incl
shrl
sub
push
and
mov
lahf
aaa
fidivrl
adc
lcall
fdivl
cltd
cmp
pop
lods
xor
push
xor
ljmp
inc
enter
decl
ss
mov
cmp
ja
mov
inc
push
mov
push
mov
jle
nop
mov
jp
mov
loope
xor
inc
mov
dec
jp
jge
sar
jbe
jmp
js
out
xchg
jle
sub
stc
pushf
fnstcw
mov
je
mov
roll
outsl
mov
sbb
decl
out
loopne
dec
sbb
roll
dec
adc
es
jnp
mov
enter
into
add
push
xlat
out
stc
inc
cmp
lcall
mov
cmp
xchg
sahf
das
cmpsl
adc
call
addr16
mov
fs
add
adc
push
arpl
inc
jbe
popf
xor
ljmp
dec
in
ss
inc
int
jge
call
jg
addb
daa
and
push
jb
test
jmp
xchg
cmp
sbb
and
xlat
lahf
pop
stc
jg
mov
lods
outsb
or
cmc
lret
lcall
ret
jp
xchg
jae
aaa
sub
adc
dec
inc
adc
mov
icebp
jns
stos
sub
in
pop
jle
mov
and
inc
incl
std
mov
dec
mov
mov
push
jge
jge
push
enter
jmp
inc
xor
push
push
je
cltd
jl
fcomps
xor
fs
fadd
mov
lea
sbbb
jmp
mov
fisttps
loop
aam
ret
lcall
push
cmp
lcall
inc
nop
dec
js
lods
pushf
ss
mov
push
sub
and
sbb
iret
out
ljmp
sahf
test
or
mov
std
lcall
push
xchg
mov
add
and
repnz
jg
adc
jns
adc
xchg
cmpl
insb
pop
outsl
sbb
ja
inc
push
int
pop
loopne
dec
test
xchg
scas
mov
sbb
mov
jne
loope
sbb
scas
jecxz
and
ljmp
pushl
ds
push
int
and
out
pop
sbb
dec
test
push
in
es
ljmp
ds
std
cmpsb
outsl
mov
std
fisubl
fwait
cmp
ljmp
jmp
jp
mov
lret
std
add
psubusb
jnp
xchg
dec
mov
lcall
aas
int
in
popf
nop
je
movsb
adc
fildll
sub
fsub
jl
mov
pop
jg
and
mov
pushl
hlt
pop
jae
lds
inc
jecxz
cmc
mov
pushf
push
xchg
mov
pop
dec
lea
xor
aam
icebp
lcall
lods
sbb
in
mov
or
jb
dec
movsl
pop
pop
pop
jo
mov
pop
add
test
sbb
dec
popf
xor
je
sahf
jl
pushf
stc
jbe
fistpl
or
cld
decl
add
sbb
push
out
rcr
dec
les
nop
int
cwtl
push
jg
and
lds
nop
pop
test
sbb
in
pushl
adc
xchg
hlt
push
fidivrl
xchg
mov
bound
or
cli
xchg
mov
fbstp
int3
sub
push
pop
add
or
movsl
jle
jne
call
jmp
lods
sub
xchg
loopne
mov
dec
push
xchg
lods
stc
aaa
dec
sub
andl
mov
lcall
adc
xchg
js
push
cmp
adc
jp
push
jae
in
xor
jecxz
call
stos
pop
loopne
cli
jmp
xlat
inc
pop
jnp
inc
sub
hlt
cmp
popa
push
incb
in
and
rep
ljmp
or
js
mov
adc
jg
sbb
les
mov
lcall
notb
lcall
insb
sbb
xchg
cli
clc
push
cmpsl
jl
mov
lcall
mov
mov
pop
lea
inc
jb
dec
mov
loopne
push
lea
jmp
mov
stc
ret
and
negb
push
mov
xlat
inc
and
movsl
mov
cmpsl
sbb
mov
jmp
das
mov
inc
adc
dec
jg
mov
pop
or
inc
repz
xor
iret
orb
or
dec
aas
jecxz
cltd
push
es
jg
jmp
ljmp
adc
mov
jge
mov
ds
rcl
enter
sub
out
orl
jg
xchg
cld
popf
jge
cmp
inc
out
add
jns
cmp
mov
cwtl
or
aaa
xchg
aad
mov
lock
push
loope
dec
orl
out
mov
sub
aad
mov
sub
jecxz
cli
sbb
in
dec
decl
nop
std
add
ds
test
daa
xor
push
movsl
fs
jg
mov
out
adc
dec
push
cmp
add
dec
stos
stos
lcall
pushl
rorl
fs
push
repz
push
pop
adc
setno
scas
ljmp
lahf
aam
cmp
xor
aaa
add
adc
and
pcmpeqd
mov
decl
fisttpl
or
movaps
mov
mull
pop
mov
jl
jbe
popf
xchg
std
shr
sbb
stos
dec
subb
out
pop
sbb
pop
mov
loopne
pushl
push
and
aad
fstps
leave
out
jmp
mov
xchg
xchg
ss
jle
call
pop
pushf
emms
sbb
data16
dec
push
aad
insl
sbb
rcrl
xlat
js
mov
lcall
push
mov
insb
pusha
inc
adc
add
dec
jmp
stos
jae
movsb
out
or
mov
sbbb
mov
enter
mov
push
dec
jns
add
jge
inc
jbe
lahf
and
and
ljmp
cmp
filds
daa
mov
and
loope
sahf
dec
jmp
or
adc
jo
out
sti
push
movsl
sub
jmp
mov
add
lret
sar
lcall
stos
xor
push
shrb
push
fnstcw
or
into
insb
mov
ljmp
ret
outsl
mov
xor
jb
push
iret
add
lret
push
ffreep
mov
mov
dec
xchg
jno
jecxz
mov
jmp
iret
aas
push
lods
jae
inc
pop
cwtl
mov
xor
jg
add
mov
les
lds
lahf
lret
int
xor
hlt
pop
icebp
jg
or
jg
arpl
jecxz
jecxz
lret
mov
pop
lcall
jle
sbb
rclb
mov
inc
mov
mov
int
scas
lcall
mov
mov
lods
mov
movsb
lret
push
push
inc
pusha
fcomps
mov
pop
add
pop
insb
mov
mov
jge
and
arpl
iret
sbb
cld
es
sar
call
cs
ljmp
dec
lods
fcmovnbe
add
adc
shrb
ffreep
or
xor
dec
sbb
std
je
stos
cs
or
xor
ljmp
mov
pop
incl
or
pop
xor
pop
mov
call
push
insb
cmp
pop
pop
imulb
lcall
out
nop
pop
lods
push
pop
lcall
decl
pop
or
or
or
mov
in
ljmp
jne
daa
imul
mov
into
push
cmp
mov
jb
ret
inc
mov
fidivs
cli
inc
pushl
pop
push
and
jge
adc
repnz
add
ljmp
icebp
adc
jno
sbb
adc
jbe
xor
mov
std
push
ss
pop
loopne
cld
cmp
xchg
dec
js
pop
dec
fs
cmc
lcall
mov
or
jmp
mov
jno
insl
arpl
lcall
xchg
pushf
or
jp
add
ret
dec
imul
xchg
cmp
dec
inc
cmp
sti
xchg
in
popf
xchg
sub
pushf
cltd
pop
push
ja
outsb
stos
jo
cmpsb
icebp
xor
dec
inc
xor
adc
call
daa
orl
dec
push
add
cmp
sbb
adc
and
call
jmp
repnz
cltd
imul
pusha
nop
pop
icebp
sar
lcall
push
mov
adc
add
xchg
jmp
in
stos
mull
xor
mov
in
mov
and
ljmp
dec
and
add
push
nop
or
addb
imul
sub
fucomp
pop
sub
jp
add
adc
xor
neg
inc
pop
imul
pop
jg
lcall
adc
into
fsts
in
mov
cld
in
leave
xor
sub
call
dec
pushf
movd
in
xchg
xchg
push
sub
push
stc
xor
cld
mov
fcomps
mov
movsl
decl
incl
sbb
arpl
jge
sub
pop
sub
fiadds
stos
jb
out
scas
push
shl
leave
js
xor
ljmp
int
out
inc
fcoms
in
or
sub
mov
pop
jmp
push
enter
mov
mov
nop
out
xchg
pop
or
mov
aam
mov
sbb
lcall
into
in
rcrb
xor
xchg
inc
cmpsl
in
mov
arpl
jbe
out
fildl
lcall
dec
pop
add
sbbb
sbb
sahf
imull
movsb
inc
xchg
jmp
mov
fsubrp
sete
inc
scas
dec
pop
in
add
ds
lcall
mov
sub
lcall
fcomi
dec
fcomps
loopne
inc
add
sbb
dec
call
dec
fcoml
ret
mov
test
sub
aad
icebp
js
lods
pushl
das
pop
jl
test
pop
daa
jmp
xchg
add
fs
mov
ljmp
inc
adc
addb
xchg
jge
xlat
call
inc
jle
mov
cmp
pop
dec
pop
popf
push
cmp
jge
add
xor
xor
sbb
lahf
ss
stc
mov
call
shl
jp
sub
sti
lock
or
jecxz
mov
push
decl
js
out
mov
inc
inc
xor
and
inc
inc
xchg
incl
aad
mov
cwtl
stos
xchg
ds
lcall
fcomip
subl
in
jmp
xchg
out
icebp
ret
pop
scas
push
jge
xor
mov
jg
aas
and
outsl
gs
fildll
mov
mov
pushf
jg
xor
sar
das
mov
adc
add
dec
jbe
mov
cmp
stc
lock
repz
mov
pushf
enter
daa
and
repz
jmp
jmp
cmc
aad
loope
sti
shrb
mov
mov
sbb
adc
out
push
pop
xor
call
mov
call
adc
mov
repnz
rcr
cmp
jmp
jg
pushf
dec
stos
mov
aam
mov
shrl
push
mov
jle
xchg
fwait
xor
loopne
sti
inc
mov
xor
jb
inc
jbe,pn
mov
bsf
out
inc
subb
sub
cmp
insb
xor
outsl
imul
push
inc
fcmovbe
and
pop
jmp
sub
fdivrl
orl
mov
jnp
fnstsw
push
adc
mov
inc
pop
ficoms
fld1
mov
sub
push
xor
cmc
xchg
jbe
movsl
pop
lock
repz
mov
pop
push
lcall
js
aas
mov
mov
pop
out
adc
mov
enter
adc
sbb
sti
mov
and
fimull
aaa
scas
adc
sti
mov
imull
scas
inc
sub
out
call
adc
ror
mov
or
stc
les
les
iret
mov
pop
gs
or
out
test
jle
or
mov
adc
adc
test
sub
mov
call
cmc
les
jbe
loopne
jg
xchg
mov
cwtl
mov
cmp
push
push
mov
lcall
dec
push
fcmove
mov
insl
inc
xlat
lret
test
or
lcall
fldt
ja
hlt
js
psubd
ljmp
test
ljmp
addr16
add
mov
push
and
cmp
enter
in
out
mov
jg
mov
pop
mov
or
sub
mov
cld
mov
flds
stos
add
dec
cld
call
ljmp
xchg
and
fildl
inc
dec
sub
jp
adc
sbb
dec
mov
int3
jnp
cmpsl
adc
cmc
call
dec
xchg
aas
shlb
arpl
xor
push
or
out
incl
pop
and
and
sub
mov
and
mov
cwtl
repnz
decl
mov
stos
push
xor
inc
or
xlat
cmp
cmpsb
incl
insb
in
mull
push
insb
jae
push
in
ljmp
nop
sti
mov
incl
or
aam
pextrw
mov
mov
pop
fcomip
inc
movsb
push
cmp
test
lret
inc
leave
ds
adc
pop
sub
gs
in
jmp
hlt
into
in
movsb
loope
pop
mov
rorb
push
add
mov
push
jge
dec
sub
cmp
rorb
inc
mov
in
dec
test
cmp
js
xor
add
and
jg
jbe
sub
movsb
in
adc
inc
jg
cmc
stc
lods
xchg
cltd
mov
xchg
mov
imul
mov
add
js
xor
jmp
mov
xchg
mov
jmp
ret
test
inc
mov
outsl
aas
adc
jnp
call
inc
push
fs
jmp
mov
sub
incb
jns
sbb
lret
push
xor
sbb
in
sbb
lcall
mov
and
loopne
lods
jmp
rcll
out
mov
lods
notb
leave
in
adc
mov
sub
fwait
dec
jmp
decl
pop
pop
outsl
arpl
jmp
xlat
scas
lds
cld
inc
les
mov
imul
xchg
cmp
lods
cmpsl
pop
shlb
jmp
aaa
cld
cmp
enter
pop
sahf
movsb
cmp
addr16
mov
ret
pop
sti
cmp
stos
pop
sbb
pushl
mov
mov
and
adc
and
pushl
mov
lods
into
mov
js
xchg
cmp
or
test
xor
leave
shrl
jmp
sar
test
xor
xchg
test
push
clc
jg
or
push
mov
inc
mov
call
into
add
ret
adc
mov
andl
std
cwtl
scas
outsb
cmp
jg
mov
test
xlat
xchg
sub
in
lods
popf
add
js
sbb
pop
add
or
ljmp
mov
cwtl
sbb
cmpsb
rcll
or
stos
jle
ds
mov
insl
sub
in
je
aad
pop
dec
cld
test
lahf
push
ret
scas
and
clc
lcall
popf
sub
push
and
rorl
add
or
jb
push
cmpsl
sbb
and
mov
divb
mov
fildll
call
mov
daa
add
cli
test
rol
std
movsb
push
fildl
into
pop
aas
cmp
sub
pushf
addr16
lcall
adc
stos
popf
mov
aam
sub
emms
mov
decl
pushf
loop
xor
movsb
aam
push
imul
decl
in
sub
jno
xor
imul
sub
subb
xor
cmp
aaa
in
clc
mov
xor
call
repz
mov
insb
inc
push
insb
cld
pusha
cld
aas
int3
inc
adc
xchg
or
sbb
fcomip
mov
mov
ljmp
xchg
stos
js
call
fwait
add
mov
add
ret
add
hlt
and
movsl
pop
cmpsb
les
jmp
sub
push
mov
mov
pop
out
roll
xor
pop
push
clc
jmp
jbe
pop
push
loope
rcl
int
push
shlb
ss
cli
shll
adc
cmc
mov
dec
ret
daa
out
icebp
mov
mov
divl
fldl
inc
enter
xchg
push
cmp
mov
pop
ret
cmp
ret
lcall
ljmp
mov
mov
sub
xlat
mov
push
dec
outsl
ljmp
jb
addr16
cli
iret
imul
divb
lock
incl
mov
loop
ss
add
mov
and
outsb
jl
inc
pop
shlb
popa
clc
les
cmp
jle
lea
adc
or
les
decl
adc
push
sub
adc
mov
mov
mov
test
and
je
or
pushf
movsl
sbb
inc
aas
xor
mov
push
dec
mov
inc
fiaddl
scas
int3
mov
dec
cmovb
in
popa
ficoms
or
jbe
jl
adc
in
call
pushl
or
stos
lahf
aaa
cmp
movsl
xchg
dec
in
jmp
sub
pop
add
fcomi
pop
cmp
add
dec
fdivs
or
lods
out
xchg
jns
push
testb
lcall
jb
loopne
pop
xlat
and
xchg
jb
mov
in
in
sahf
repnz
push
leave
and
lcall
jmp
add
cmp
cmp
push
xor
inc
dec
xchg
adcb
jg
insl
jmp
fdivl
loope
in
les
xorb
add
insl
xorb
ret
dec
adc
push
out
cmpsb
xchg
xor
dec
adc
or
jo
pop
mov
push
or
xchg
ffree
leave
or
mov
mov
dec
dec
adc
mov
stos
jne
inc
mov
in
daa
xchg
lret
mov
dec
int3
fimuls
cmp
pop
and
rclb
lea
insb
xor
push
mov
inc
jmp
std
iret
aaa
or
in
mov
or
cli
fsubrl
jg
sub
dec
xchg
mov
loopne
pushf
lods
sbb
inc
jne
dec
cmp
sub
decl
xchg
cmpsl
cwtl
inc
ret
mov
ret
in
xchg
add
and
aaa
inc
not
shl
nop
decl
sahf
cmpsb
cmp
lods
inc
ficoml
sbb
mov
pop
mov
fsubs
icebp
mov
loopne
popa
jecxz
mov
iret
lahf
cmp
hlt
adc
mov
lcall
aas
out
pop
cmc
loope
mov
sub
bound
mov
gs
jns
push
decl
mov
shrl
or
std
insl
out
lods
lea
out
dec
insb
mov
mov
mov
daa
cmpsb
pop
xor
pop
sub
incl
lret
fdivrp
bound
dec
cmp
repnz
shl
xchg
fdivs
shlb
gs
cmp
and
fidivrl
test
call
ficompl
push
insb
lea
lea
adc
xor
sbb
mulb
lret
mov
das
mov
std
icebp
scas
mov
mov
push
stos
jbe
mov
or
sub
jg
and
inc
in
mov
pop
mov
dec
mov
decl
or
mov
xchg
and
js
mov
pushl
cs
sub
xorl
sbb
push
mov
lret
ljmp
push
cmp
ljmp
or
arpl
cwtl
sub
xor
mov
pushf
rorl
mov
loop
lcall
shrl
add
cmpsl
jge
jb
or
ret
gs
push
jg
mov
xchg
shrb
loopne
cmp
push
add
pushl
enter
lret
mov
stos
test
adc
jae
lcall
out
or
xor
pusha
dec
lcall
jmp
xchg
repz
loopne
jbe
sub
cmp
jmp
movsl
sahf
rcrl
addr16
inc
stc
xchg
enter
popl
cmpsb
mov
or
fiadds
ja
xchg
jle
mov
ljmp
mov
add
pop
push
cmp
jmp
ret
or
flds
add
xor
mov
dec
and
fld1
push
js
mov
pushf
inc
pushl
sub
rolb
mov
and
add
pusha
jp
sub
mov
incl
or
mov
arpl
mov
add
lods
xchg
bound
cmp
in
call
push
lret
mulb
inc
adc
ds
incb
cmp
fsubs
adc
mov
nop
jmp
lret
pop
pop
out
clc
int3
nop
fisttps
mov
add
incl
mov
pop
lret
ret
notb
add
fiaddl
fdiv
mov
insl
data16
decl
sbb
imul
sub
stos
bound
ljmp
dec
test
fnsave
test
rolb
and
pop
test
lcall
and
and
xchg
cmp
popa
rorb
orl
clc
inc
popa
and
rorl
mov
movsb
pop
call
fstl
sub
movsl
mov
xchg
sub
data16
xchg
ljmp
mov
shl
cwtl
adc
xor
cmpb
and
mov
mov
test
pusha
and
pop
fsubr
ds
and
outsb
lcall
fs
movsb
mov
out
les
dec
adc
mov
sub
and
inc
mov
sahf
icebp
sbb
pop
std
decl
orb
mov
test
hlt
jne
outsb
adc
sbb
fnstcw
orb
pop
dec
sub
sbb
jbe
mov
inc
imul
pop
dec
or
ss
mov
incl
lock
scas
adc
push
data16
int3
mov
outsb
lret
jg
inc
xor
lret
rorb
adc
inc
mov
sbb
pop
andb
jmp
and
push
movsb
int
add
popa
loope
popa
jmp
addr16
stos
jns
insl
pop
decl
insl
jns
mov
dec
or
sub
lret
xor
push
in
ja
mov
mov
add
daa
out
out
push
mov
cld
and
push
jecxz
out
sub
push
jmp
cwtl
daa
and
ljmp
stc
xchg
loope
pop
mov
xchg
shll
mov
mov
movsb
jle
or
mov
jge
push
jge
sbb
or
adcb
decl
aam
mov
clc
push
jmp
test
or
push
enter
lcall
sbb
addr16
xchg
mov
shll
mov
or
mov
sar
pop
loopne
adc
cli
idivl
and
pushf
ljmp
or
sub
or
or
mov
addl
jmp
loopne
ret
mov
xchg
sbb
pusha
ret
sbb
js
mov
aam
mov
add
dec
les
xorl
std
incl
bound
xchg
lods
insl
mov
dec
fcompl
mov
and
xchg
fcomps
xchg
pushl
push
sbbl
repz
es
xor
adc
dec
mov
decl
mov
inc
stc
fildl
fstl
mov
add
test
repz
mov
sbb
jp
cmova
enter
jl,pn
movsb
repz
int3
jl
out
pop
or
jmp
ret
lock
incl
sbb
ret
push
xor
scas
jno
xchg
push
or
xor
jge
enter
stc
sbb
call
out
push
ss
cmp
pusha
push
stos
nop
cmp
jo
fs
loope
ficoms
adc
je
in
pop
xor
pop
out
mov
inc
imul
mov
mov
stos
aas
push
rcrl
stc
out
out
and
shl
std
ss
and
jg
jle
sub
pop
and
add
pop
fwait
repnz
fldl
ljmp
je
mov
fiaddl
outsl
sarl
lret
mov
cmp
cwtl
mov
decl
popa
movsb
stc
not
add
pusha
ret
add
fwait
push
inc
nop
arpl
jnp
jno
shlb
pushl
lds
inc
cmp
paddw
aaa
sbb
push
or
push
mov
sbb
rcrl
fst
push
push
adc
inc
xchg
dec
inc
out
les
and
adcl
and
fmul
popa
pop
fildll
add
repz
imul
cltd
lds
dec
mov
in
cs
stos
sbb
leave
xrelease
les
pop
dec
out
je
mov
sbb
hlt
lret
lcall
stos
int3
mov
js
in
or
mov
dec
dec
jg
nop
sahf
pop
and
sub
add
pop
das
mov
mov
mov
dec
sahf
in
push
lcall
cmc
out
lock
mov
push
push
mov
ljmp
push
jae
fadds
push
mov
mov
dec
lods
sahf
jb
sbb
decl
scas
add
scas
add
cmp
fbstp
mov
fsubrp
or
mov
and
aam
mov
shll
scas
push
xchg
ja
popa
cmp
ret
arpl
pop
popl
std
cmp
xorl
add
hlt
xlat
fwait
jle
enter
std
rorl
mov
les
movsb
hlt
std
jnp
sub
jg
es
das
or
mov
in
xchg
cmpl
dec
mov
push
xchg
mov
lcall
or
mov
fnstenv
iret
pushf
pop
pop
mov
mov
lahf
mov
xchg
addr16
sbb
dec
inc
push
cmpb
adc
push
data16
mov
aad
aaa
nop
adc
test
shr
push
xlat
xor
cmp
jne
lcall
out
out
pop
sub
scas
es
js
jl
stos
sbb
sub
cld
outsl
clc
incl
push
mov
push
mov
out
push
fimuls
inc
movl
mov
inc
shll
push
inc
out
and
mov
cmp
call
test
jns
int3
fsubs
aam
dec
and
dec
int3
mov
aaa
stc
adc
jns
sub
fisttps
js
in
popa
push
and
clc
sbb
sahf
mov
adc
ljmp
and
test
jg
shrl
dec
jmp
xchg
or
jne
addl
jl
adc
lret
dec
xchg
jg
insl
pop
xchg
scas
fbstp
loop
shrl
cmc
push
sbb
scas
decl
in
test
es
mov
inc
fnsave
xor
subb
loope
hlt
dec
mov
clc
je
stos
rclb
inc
inc
pop
icebp
pushl
into
cld
pop
push
dec
xchg
adc
lcall
push
ret
out
clc
mov
push
and
add
inc
sarb
in
pop
pop
stos
add
cmp
sar
lahf
stos
jp
mov
inc
icebp
imul
dec
add
sbb
mov
sbb
add
stos
shll
lock
daa
push
cmp
mov
call
pop
shrl
mov
mov
mov
or
ja
dec
clc
pop
mov
cld
lods
ret
jae
incl
xchg
rolb
lods
inc
dec
mov
xor
pop
maskmovq
dec
xchg
out
js
lcall
xor
das
loopne
mov
mov
adc
scas
fisttpll
ss
dec
mov
mov
jmp
and
aas
push
pop
sub
or
mov
mov
pop
out
int
jne
pushl
fisubs
mov
cmpsl
push
jg
aad
std
sub
lods
adc
pushl
push
lahf
aaa
sub
lds
or
hlt
xor
icebp
fldt
dec
loop
dec
pop
in
lret
add
mov
aas
pop
arpl
std
ficomps
lods
cmpsb
and
ret
sub
mov
aas
xchg
enter
cmc
pop
cmp
arpl
fildl
xlat
mov
imul
add
sub
add
and
jg
add
ds
xchg
push
adc
lods
js
cmp
mov
out
pop
xchg
mov
mov
popa
dec
push
xchg
incl
inc
and
push
rcll
hlt
pop
push
mov
pop
dec
hlt
sahf
jmp
jecxz
push
jb
jecxz
cmp
xor
or
es
pop
inc
aam
fdivs
call
sbb
aas
push
or
jg
dec
adcb
pop
add
fstps
inc
lods
sbb
ja
mov
push
movsl
mov
cld
incb
movsl
andl
and
call
shr
aam
loope
jg
sub
push
sub
test
xchg
test
inc
cmc
add
in
idiv
ljmp
add
push
aam
jbe
movsb
xchg
mov
fiaddl
cmp
fbstp
xor
cmc
push
push
cmp
outsb
mov
leave
test
in
sub
xchg
bound
cltd
loope
andb
movsl
xchg
mov
fists
push
jecxz
push
fsubs
fs
pop
out
mov
mov
lret
adc
fwait
push
cwtl
fsubrs
pop
arpl
daa
mov
decl
std
outsl
loop
outsl
aad
and
push
push
in
push
push
mov
add
jmp
pop
dec
mov
jb
bound
jg
and
cmp
inc
sahf
mov
or
pushl
out
mov
add
sub
mov
ret
cmp
mov
insl
push
sti
stos
inc
insb
cli
jg
ljmp
hlt
leave
shlb
cmpsb
adc
mov
fcmovbe
mov
cli
sahf
call
jge
inc
xor
stos
fadd
adc
dec
clc
cmp
mov
mov
decl
aam
or
mov
mov
push
scas
push
mov
jp
mov
cld
out
mov
mov
ds
mov
add
push
sbb
out
aas
dec
testb
jecxz
mov
out
ss
in
mov
out
jl
int3
inc
push
dec
test
out
cmp
call
in
cmpsb
daa
faddl
or
and
popf
test
in
inc
push
mov
imul
jmp
mov
scas
inc
shrb
mov
xchg
cli
mov
xor
push
pop
add
jnp
lahf
jbe
les
sub
add
cmp
xor
divb
mov
or
movsl
hlt
push
lods
ljmp
inc
mov
in
and
dec
inc
lds
in
out
call
lcall
cmp
xor
lret
movsb
out
cmp
mov
and
sub
mov
xor
rol
dec
mov
or
int
call
cmp
loop
xchg
into
or
lcall
adc
insl
out
pop
sbb
hlt
js
push
outsl
adc
mov
ljmp
or
push
lret
mov
xchg
loope
xchg
inc
add
ret
in
push
lahf
and
out
roll
in
test
scas
mov
outsb
xchg
cmp
lea
jb
jmp
xor
add
fcomip
pushl
pop
stc
loopne
push
mov
into
and
fdivl
pop
test
sbb
xchg
xor
mov
push
outsb
xchg
rorb
push
outsb
adc
jle
incl
sahf
pushf
pop
add
mov
sbb
adc
ljmp
jp
jmp
mov
test
fdiv
sbb
sbb
push
sub
mov
aam
cmp
inc
es
push
inc
mov
jecxz
xchg
inc
and
mov
decl
cmp
incl
push
or
push
xchg
mov
push
cmpsl
pop
outsb
or
sar
mov
inc
sbb
mov
mov
in
xchg
scas
mov
mov
sub
sti
jns
jg
mov
jmp
mov
push
loope
aad
push
ljmp
xor
out
arpl
mov
sbb
gs
lods
cld
xchg
jg
cmp
mov
bound
scas
jb
xchg
xchg
out
sarb
mov
sub
xchg
repz
std
lcall
inc
iret
adc
negb
xor
jge
mov
mov
push
fs
push
mov
call
push
bound
adc
imul
and
out
adc
xchg
jle
daa
dec
xor
incl
inc
add
or
and
test
mov
ljmp
decb
jecxz
pop
fwait
xor
shll
inc
cltd
cmp
test
cmp
lods
insb
jg
incl
ds
mov
fidivl
pop
lock
cmpsb
loopne
loopne
addb
or
pusha
lcall
adc
add
jecxz
adc
int3
adc
xchg
cmpsl
xor
pop
push
xor
stos
cltd
adc
cltd
nop
mov
call
xchg
adc
fdivs
bound
pop
js
xor
jmp
fistpl
outsl
cli
incl
xor
mov
fisttpl
in
mov
adc
or
mov
lea
cmp
sub
lds
mov
fcomip
lcall
int3
or
and
pop
ret
inc
ljmp
inc
mov
xchg
fdivrp
call
jp
inc
mov
and
sub
mov
pop
mov
ljmp
pop
mov
mov
jg
inc
mov
lock
gs
in
enter
add
fsubl
nop
out
pop
pushf
jbe
das
adc
outsl
or
daa
pop
jecxz
gs
or
les
movsb
cltd
fisubl
cmpsl
stos
test
mov
push
call
and
xchg
shr
dec
enter
jb
js
inc
xchg
iret
test
out
call
loopne
xchg
jne
adc
ds
stos
clc
pop
test
pop
inc
mov
sub
clc
sub
loop
ret
dec
nop
arpl
popf
imul
shrl
inc
mov
mov
jl
aam
add
cmp
clc
in
dec
cltd
ljmp
mov
jnp
add
or
inc
icebp
cli
push
jge
enter
loopne
mov
lcall
or
sub
mov
pop
lret
and
stc
movb
cmp
dec
jmp
ljmp
sub
jno
jns
test
sahf
cs
mov
stos
test
sarl
call
pushl
or
pop
jge
jge
testl
repz
fildll
call
enter
fidivl
iret
pop
pop
xchg
mov
xchg
mov
pop
mov
fcomip
dec
sub
adc
int3
ljmp
pop
adc
imul
sbb
xor
std
pop
es
loop
insl
inc
jmp
push
mov
push
jns
mov
lcall
dec
packuswb
xlat
fisttpll
insb
and
inc
mov
xchg
adc
bound
push
lret
imul
cmp
mov
sar
lret
stc
or
inc
incl
repnz
xchg
ret
mov
lods
mov
cmp
cmp
js
dec
mov
add
daa
into
call
add
or
cmp
testl
lcall
daa
test
xor
xor
pop
test
dec
xchg
into
push
mov
in
mov
add
aam
fsubl
aad
fisubs
jmp
xchg
mov
push
or
shll
sti
push
ds
or
mull
jmp
fdivr
pushl
inc
xor
cmp
xor
mov
lds
jecxz
fmul
je
in
inc
or
loope
movsb
add
pop
inc
nop
mov
inc
lret
call
jg
jl
mov
xor
stos
or
cli
mov
roll
shr
ljmp
xchg
loop
aad
fldenv
aas
roll
mov
cmp
mov
cld
mov
jecxz
pushf
fsts
xor
stos
dec
icebp
test
mov
cli
jne
iret
jge
pop
rcll
subb
mov
hlt
sub
test
push
fld
push
mov
mov
lock
xor
push
test
rorl
mov
loopne
fwait
gs
cmp
jbe
dec
in
movsl
jmp
outsl
jg
push
sub
or
add
and
xchg
dec
mov
dec
pop
dec
jecxz
push
cld
lahf
adc
jo
inc
xchg
fwait
push
adc
cli
std
andb
push
adc
push
jno
aaa
pop
frstor
pop
pop
mov
scas
cmc
out
mov
sti
iret
mov
in
adc
das
adc
inc
les
incl
and
scas
int3
dec
pop
call
push
in
test
pop
repz
mov
jmp
push
jge
mov
dec
mov
jns
test
jmp
adc
int
ret
test
sub
incl
sbb
sbb
inc
repnz
jl
inc
xchg
ret
lret
or
nop
mov
scas
stos
cli
or
mov
divb
and
stc
bound
lds
nop
mov
adc
ret
and
movsb
sahf
rcrb
xor
add
dec
clc
mov
jg
mov
sbb
lock
lret
leave
loope
jmp
mov
fldenv
sbb
stc
repnz
cmpsb
addr16
loopne
dec
fwait
jmp
decl
pushf
mov
fistps
rcrb
jb
or
sbb
jmp
dec
mov
jb
jmp
loop
in
loopne
or
cmp
mov
add
out
fisubl
in
test
imul
leave
push
jg
sbb
push
xorb
stc
je
inc
push
imul
jbe
loope
ret
cmpl
pushl
mov
xor
ds
xor
sub
mov
pop
push
fiadds
push
adc
in
outsl
xchg
pop
push
mov
and
ss
call
mov
shrl
add
lds
dec
das
inc
imull
call
jg
out
mov
xor
mov
mov
cmpb
lret
dec
popa
mov
rcll
shrb
cmc
fs
add
mov
push
cmp
xor
pusha
std
dec
jecxz
jge
cmp
pop
pusha
xor
jno
mov
or
push
out
sbb
jae
aad
rorb
incl
das
mov
mov
daa
dec
arpl
cmp
out
pop
lcall
mov
test
std
in
mov
mov
mov
loop
mov
xchg
add
sbb
cltd
decl
insl
mov
lret
xor
cmp
ljmp
adc
push
fnstenv
xlat
pop
add
scas
in
lea
inc
dec
les
call
loope
cmp
sub
pop
outsb
cmp
mov
jne
jl
fbld
sbb
leave
in
mov
adc
push
jp
push
addl
ret
das
sti
pop
pop
fwait
mov
inc
push
xor
roll
dec
push
loope
pop
add
and
repz
loope
mov
stos
stos
lcall
dec
inc
add
pop
jmp
pop
sub
adc
stos
fwait
push
gs
xorb
cmpsb
ljmp
jge
cmc
adc
rclb
fldl
lret
jbe,pt
mov
jecxz
cmp
loopne
cmp
push
adc
adc
test
nop
call
call
mov
mov
xchg
jecxz
into
xchg
call
pop
mov
aas
ds
test
dec
mov
ja
mov
inc
scas
cmp
sbb
hlt
rclb
call
push
insl
rcrl
sub
daa
mov
ss
sbb
and
gs
lcall
mov
repz
in
loope
jmp
jne
imul
sub
add
inc
pop
cmp
imul
shlb
pushl
notl
adc
push
pop
out
inc
push
div
and
rcr
ja
cli
cbtw
xchg
dec
clc
call
lds
pusha
mov
push
pop
outsl
bound
testl
mov
clc
pop
jb
andl
mov
jg
test
ljmp
mov
jmp
add
cmp
mov
fcomps
pop
imul
mov
mov
cmp
push
push
ljmp
sbb
stos
movsl
fs
imull
mov
je
jecxz
ljmp
ljmp
decl
mov
push
int
cli
scas
push
ffreep
mov
hlt
test
and
pushl
mov
test
add
clc
xor
outsb
pusha
outsb
iret
js
test
clc
dec
lret
loop
mov
xor
notl
adc
xchg
cltd
mov
loopne
jle
loopne
jns
mov
jo
cmpsl
fwait
push
insb
mov
ljmp
stc
jnp
jno,pt
aaa
push
and
cmpsb
roll
mov
dec
inc
and
lea
inc
mov
or
pushl
mov
mov
icebp
mov
or
cli
popa
add
stos
pop
std
adc
ljmp
dec
mov
jb
sahf
scas
das
mov
lods
into
js
mov
mov
xor
loop
insl
jle
loope
cmp
ljmp
push
xor
dec
add
shrl
in
pop
call
int3
sbb
jmp
push
ret
jns
js
incl
adc
scas
mov
data16
cmp
ret
jmp
and
pop
mov
pushl
or
jmp
cmp
daa
add
add
mov
dec
xor
and
enter
incl
fsubs
inc
mov
add
fcomi
jle
xor
cmp
pushl
movsb
cmp
rol
lds
jmp
inc
sbb
push
sub
ret
lret
scas
cmpsl
add
push
sahf
loopne
test
leave
clc
call
and
in
popa
push
inc
es
jmp
jl
nop
repnz
or
popa
cmp
ljmp
hlt
xor
ljmp
sti
orb
mov
dec
xchg
mov
cmp
lahf
fdivrs
pop
data16
sbb
mov
ss
fimuls
push
pop
test
cmp
out
xchg
xor
ds
jmp
jns
js
lcall
fstpl
sti
stc
mov
mov
sbb
sub
dec
iret
push
and
push
ds
mov
inc
scas
leave
int
lahf
sub
jb
lcall
mov
test
fld
cmp
cs
jb
outsl
mov
sarw
xchg
mov
jmp
test
jle
std
push
scas
ja
xchg
pop
testb
and
lods
in
fcmovnb
lcall
decl
inc
push
dec
adc
xchg
sti
push
sarb
cmp
pop
repnz
insl
sub
in
mov
sarl
push
imull
mov
sub
call
cld
pop
fsubp
loopne
dec
push
es
push
xchg
inc
sub
imul
pop
pop
stos
loope
fincstp
pushl
cmp
ret
mov
adc
into
ret
int
loopne
push
pop
repz
jmp
cs
sub
jp
aam
or
int
test
outsb
sbb
mov
mov
dec
pushl
sub
pop
out
ja
rcl
call
inc
fsubrs
and
mov
xor
popl
add
test
and
sbb
cmpsb
or
in
das
rclb
lahf
jb
xchg
push
fnstcw
rcrl
mov
mov
in
ret
ss
mov
dec
push
and
sti
std
dec
stos
inc
lea
incl
cltd
xorl
ds
xchg
or
sub
in
xor
dec
add
jg
incl
mov
ss
inc
sbb
dec
jp
adc
pop
andl
outsl
movsb
icebp
fildl
sbb
dec
mov
xchg
mov
aaa
push
xchg
call
mov
ret
mov
pop
jne
push
cltd
ljmp
lcall
fstps
inc
pop
imul
negl
les
es
and
in
inc
xlat
out
lcall
stc
in
repnz
mov
cmp
cld
xlat
fstpt
and
pop
dec
mov
xor
lods
fucom
mov
int
or
insb
sbb
xchg
jg
out
insb
stc
pop
shrb
and
jecxz
fidivrs
fbld
cmc
cli
and
mov
sbb
add
inc
or
adc
add
cs
js
imull
nop
or
jmp
sarb
xchg
scas
pushl
mov
imul
mov
cmp
jmp
daa
mov
mov
repnz
fdivrs
mov
cmp
lcall
dec
mov
xor
cld
xor
mov
add
frndint
das
pop
sbb
ret
aad
jmp
arpl
scas
jo
sarl
js
xor
repz
imul
inc
cltd
push
sbb
sbb
fadds
xchg
or
cld
adc
notb
incl
jae
fcomps
pushf
or
inc
sti
xor
fisttps
cmp
cmove
mov
and
push
cmp
xor
incl
dec
pop
mov
adc
mov
sti
jae
andb
mov
push
or
sub
cmc
aam
aad
in
cmp
inc
insb
arpl
incl
or
outsl
xor
sub
fadds
inc
inc
xchg
in
or
jnp
mov
in
out
test
jle
mov
cmc
test
jno
mov
dec
bswap
cs
xchg
dec
test
jmp
daa
sub
xchg
xchg
cmp
icebp
test
gs
lret
push
add
mov
test
xor
std
mov
push
jne
fcom
fdivr
fisttps
adc
cs
mov
xchg
scas
aad
fsqrt
pushl
mov
fs
mov
je
fcmovnbe
lret
rcrb
dec
xchg
push
in
icebp
roll
ret
add
xchg
nop
loop
jp
jp
out
addl
mov
test
mov
xchg
sub
lds
jp
xchg
stos
or
xor
push
mov
decl
in
js
and
push
mov
sar
sub
sub
lahf
lcall
or
pop
jl
sti
loopne
push
insl
add
movsl
ja
call
cmp
inc
xchg
dec
icebp
sarb
and
xchg
fs
fistpll
movsb
data16
pusha
sahf
jae,pt
test
xor
incl
clc
add
inc
ret
jno
push
in
test
ja
inc
lret
cmp
push
push
push
dec
shrl
dec
inc
and
jne
repz
rcl
insl
xchg
dec
je
add
cltd
jne
jnp
ret
popf
loop
cmp
adc
jl
rclb
xchg
jp
sarb
dec
add
jmp
fwait
int
es
add
imul
adc
mov
data16
ljmp
inc
dec
imul
jg
into
jg
fildll
sub
jle
xchg
aas
rcrb
adc
and
inc
cmp
decl
test
pop
int
add
dec
xor
in
iret
jg
fwait
cmp
sbb
jmp
cwtl
or
push
mov
fstpt
sbb
push
jo
mov
decl
sub
sbb
insl
xchg
fwait
pop
daa
aam
outsb
inc
cs
sti
shll
jp
fs
stos
xlat
jl
mov
shl
cmpsb
inc
popf
in
out
lcall
decl
dec
insl
jmp
sbb
sub
pop
pop
enter
jo
mov
mov
inc
mul
add
std
pop
gs
or
dec
xchg
ljmp
or
sub
xor
adc
scas
xchg
ljmp
sti
in
mov
mov
int3
mov
mov
sbb
jno
popa
stc
xchg
incl
mov
lcall
pop
or
pop
bound
sarl
mov
inc
idiv
lcall
mov
xchg
rcr
and
ja
inc
dec
jbe
ja
or
and
dec
lods
xchg
rcrb
shrb
xchg
mov
cmpsb
add
stos
mov
sub
pop
stos
mov
dec
sbb
dec
or
imul
movsl
inc
insl
cltd
inc
xchg
lcall
jg
pop
push
push
inc
cmc
push
mov
std
xchg
xchg
push
fdivrs
pop
stos
xchg
imul
test
decl
xchg
lods
addb
mov
mov
sub
and
or
dec
das
add
scas
push
cwtl
jbe
jns
lods
js
xchg
and
xor
jmp
call
cmpsl
mov
inc
decw
push
lds
outsb
lods
cld
hlt
or
add
pushf
je
ljmp
push
mov
adc
into
test
repz
shrb
jnp
push
shl
gs
incl
fsts
sub
cmp
lods
push
push
fcmovb
jnp
push
and
mov
idivb
jmp
xchg
jo
mov
inc
pusha
lret
imul
loop
xor
aas
xor
adc
sub
xchg
xchg
es
out
cmp
outsl
fbld
and
loop
jl
std
dec
adc
fildl
hlt
mov
sub
sbb
incl
push
sarl
sahf
sub
lcall
push
cmpsb
insl
lock
xor
arpl
popa
jmp
in
sub
mov
adc
mov
or
in
ret
lods
sbb
lahf
idiv
push
sti
das
add
adc
in
sbb
mov
bound
adc
jns
stc
mov
mov
sbbl
pop
mov
pop
push
xchg
add
mov
mov
mov
frstor
outsl
xor
pop
loopne
inc
add
pop
jmp
mov
js
dec
push
adc
adc
call
push
or
add
adc
std
add
dec
inc
jl,pn
andl
fwait
push
xchg
and
or
xchg
data16
pushf
mov
popa
sar
jne
inc
push
pop
xor
into
mov
lcall
add
into
pusha
add
push
mov
mov
pextrw
inc
sub
out
push
addr16
mov
cltd
mov
xchg
xor
lods
ljmp
mov
xchg
cmc
xlat
sti
andb
adc
and
mov
iret
dec
dec
adc
pop
icebp
ljmp
fwait
cmp
js
decb
outsl
shrb
mov
pushl
loop
lahf
cmp
sbb
mov
cmp
shll
pop
push
adc
mov
xor
xchg
int
mov
repz
adcl
out
mov
ss
cmpsb
jg
scas
cwtl
sahf
jnp
enter
fucomp
mov
fisubrs
jno
js
mov
scas
popa
popa
loope
mov
cs
notb
jmp
sbb
or
out
loop
jmp
xlat
fisubrs
lcall
adc
test
out
clc
pushf
cld
fwait
jb
addl
incl
inc
int
std
das
push
repz
cwtl
test
ret
and
xor
mov
sbb
adc
and
data16
mov
xchg
or
rclb
adc
mov
pop
or
xor
xor
incl
sbb
mov
out
dec
std
sti
sbb
mov
out
lods
loope
jnp
push
push
or
dec
push
inc
pop
rcll
cmp
fwait
add
cmp
push
pop
push
and
out
pop
shll
clc
add
pop
incl
sub
adc
push
out
jge
pop
mov
pop
fcoms
hlt
mov
pop
push
or
imul
decl
jo
loope
sbb
js
test
mov
dec
inc
bound
dec
push
fbld
or
test
mov
mov
jae
push
jg
test
ds
shll
adc
call
mov
ljmp
movsb
cmp
shl
pop
idivl
cld
lret
mov
insb
fcoml
mov
mov
int3
js
push
popa
sbb
lcall
inc
cmp
flds
pushf
jno
push
jecxz
dec
jb
and
pop
push
dec
ret
sbb
or
inc
out
or
sub
xchg
xchg
mov
fidivl
push
sub
imul
add
or
out
jnp
stos
imul
pop
sub
mov
leave
shl
lods
in
sub
lcall
bound
sbb
data16
and
adc
inc
dec
mov
test
aas
lods
cmp
cltd
and
arpl
lcall
lods
mov
dec
dec
dec
pop
xchg
and
pop
xchg
ss
fiaddl
fisttps
fs
test
inc
dec
sub
mov
imul
xchg
mov
inc
mov
jae
call
mov
and
std
femms
cmp
jle
int
and
pop
lcall
incb
orl
int3
adc
mov
or
mov
pop
test
cmp
les
lret
sub
mov
cmpb
jmp
in
cli
pop
jae
fiadds
out
xchg
mov
jnp
shr
movsl
adcb
incl
out
mov
dec
and
loopne
shlb
push
fistpll
fwait
js
ljmp
lea
insb
outsl
das
sub
in
mov
jle
sar
dec
loopne
aam
rcll
jo
aas
mov
fiaddl
incl
xchg
scas
and
sbb
popf
es
sbb
dec
mov
jmp
push
adc
jns
icebp
sbb
scas
xlat
jae
sahf
call
pushl
std
inc
sarl
xor
mov
xlat
dec
xchg
in
and
aam
jbe
cmc
add
test
mov
dec
mov
movsl
dec
mov
jnp
fs
push
ja
cmp
dec
mov
decl
cmpl
orl
sbb
fldt
icebp
mov
push
pop
decl
call
xchg
pop
xor
xchg
lods
pop
out
incl
je
leave
and
mov
sahf
jbe
mov
imul
ljmp
incl
mov
imul
pop
sahf
jae
scas
fmuls
xchg
fnop
pop
pusha
cmp
jne
outsl
cli
ljmp
popf
mov
push
ret
sbb
int3
daa
popf
pop
shlb
in
leave
inc
incl
mov
je
and
fcmovbe
icebp
test
pop
pop
mov
ljmp
sub
xor
adc
mov
inc
mov
sti
jo
mov
in
cmc
shrl
lcall
sbb
cmp
xchg
add
mov
sub
jns
xchg
ret
jge
sub
data16
mov
lcall
ret
sbb
mov
leave
imul
jl
jns
test
pop
cmp
xchg
ret
ds
pop
mov
mov
test
lret
and
lcall
iret
decl
les
cli
cmp
sbb
insl
xchg
insl
xchg
xlat
movsl
ljmp
ffree
mov
cld
scas
push
sarb
and
mov
loopne
test
test
inc
arpl
icebp
lods
or
mov
outsb
mov
mov
imul
mov
iret
iret
or
popa
insb
adc
fs
mov
lea
fs
mov
mov
je
xor
mov
out
out
lcall
mov
sbb
push
loop
sbb
leave
stos
dec
stos
pushf
add
sbb
mov
xchg
ljmp
jmp
mov
xchg
mov
hlt
xor
ret
ficoms
xlat
or
and
ljmp
sub
lods
mov
inc
dec
push
sub
pop
jo
xor
ljmp
xor
xor
into
fbld
adc
jo
add
loop
jmp
scas
push
add
inc
ret
cs
mov
mov
xor
dec
into
push
stos
shrb
jg
add
fnsave
sbb
jno
inc
or
sub
movsb
pop
fadds
outsl
cs
ljmp
clc
cmp
inc
ret
push
shrl
push
sbb
insb
popf
xor
incl
jae
pop
jl
cwtl
sub
daa
or
dec
jb
cmp
jmp
lret
xor
incl
add
enter
mov
mov
lahf
push
mov
js
or
scas
push
loop
inc
push
dec
mov
cmp
pop
js,pt
movsl
cs
pop
lcall
mov
jecxz
loop
lret
push
sbb
shll
mov
dec
inc
movsl
ljmp
hlt
adc
bnd
xchg
out
popa
mov
push
push
loop
push
movsl
jns
ljmp
lcall
dec
rorl
mov
mov
std
stos
popa
cmp
cmp
cld
ja
lcall
pop
stc
mov
sarb
or
or
push
fdivs
movsb
bnd
sbb
je
cmpsb
pushl
and
or
push
jae
jecxz
pop
fildll
scas
xchg
js
repnz
decl
mov
nop
pusha
dec
add
insl
in
mov
fs
shrl
cld
out
jns
sbb
enter
imul
xor
popf
cmp
pusha
call
shrl
sti
xchg
scas
rclb
in
fbld
mov
or
mov
add
incl
cmp
or
cmp
mov
pop
imul
mov
cmp
decl
mov
out
jg
add
in
and
xor
add
outsb
pop
add
mov
dec
xor
loopne
jmp
push
in
clc
popf
lods
fistps
shlb
jg
mov
sbb
or
add
fwait
xor
dec
ficompl
mov
lcall
ljmp
movsl
ret
popf
in
mov
ret
movsb
andb
repnz
cs
or
decl
and
sub
sub
xor
out
sbb
pop
jp
xor
cmp
in
test
sahf
in
mov
inc
mov
pop
mov
test
stc
mov
lcall
ret
xor
jl
adc
and
add
pop
ds
jb
cmp
xchg
jl
and
jmp
push
inc
jle
cltd
pop
push
sarb
xchg
ss
push
cltd
mov
mov
pop
lret
adc
jmp
push
cmpsl
fcompl
push
std
mov
jno
in
jp
call
inc
dec
mov
out
fimuls
sub
addr16
andl
filds
out
add
hlt
xlat
inc
sbb
bound
lods
pop
cmp
out
jbe
jmp
mov
pushl
es
fidivrl
jle
mov
dec
and
test
xchg
sub
arpl
pop
fdivr
dec
aam
ds
shrl
fsubrl
aaa
imull
cmp
pop
call
pop
mov
scas
je
mov
lcall
xor
pop
test
js
insl
adc
xchg
je
int3
or
jle
outsb
cli
push
mov
jnp
sub
pushl
xor
int3
push
addb
cwtl
sub
push
push
cld
enter
incl
pushl
lock
cli
jl
shlb
out
fstpl
fisubrs
jg
mov
shrb
outsl
rclb
cmpsb
movsb
lret
inc
imulb
mov
pop
outsb
fcoml
cmp
inc
std
icebp
fwait
pop
movsb
jg
cmp
jns
mov
decl
sti
push
jmp
mov
lcall
xchg
shrb
sub
cli
repnz
ror
cli
pop
mov
jo
jbe
sub
fsubs
loopne
insl
mov
mov
adc
or
inc
ljmp
mov
push
pop
or
sahf
xchg
pop
data16
mov
lds
sub
not
inc
inc
call
dec
into
adcb
push
int3
push
or
and
adc
dec
nop
dec
pop
mov
pusha
pop
test
call
cmp
in
loope
shlb
push
mov
jg
pop
adc
fsubrp
test
loop
loop
enter
sbb
mov
dec
test
call
loopne
rol
mov
test
jle
inc
sub
in
or
sub
push
lods
push
ja
cmp
idiv
xchg
test
jle
mov
bound
or
mov
in
loop
sub
loope
jb
add
cmpsl
add
and
les
les
shll
cmp
call
mov
adc
test
push
sbb
pop
pop
jl
outsb
stos
sub
lcall
jp
ja
jge
cwtl
outsl
idivl
scas
push
and
out
mov
or
push
sti
cmp
incl
mov
lods
scas
cli
xchg
testb
in
inc
mov
sub
push
jbe
pop
push
xchg
cmp
testl
or
fwait
gs
ljmp
scas
mov
xchg
mov
daa
mov
pop
fstpt
sbb
and
add
jnp
lods
jg
add
dec
aad
pop
xchg
and
mov
dec
ljmpw
sar
pop
iret
sbb
nop
jecxz
pop
aad
cltd
adc
test
xlat
incl
jp
or
lods
mov
movsb
xorl
out
sub
jge
mov
lock
call
mov
sbb
test
add
decl
push
and
pop
mov
and
and
adc
test
out
aas
dec
in
mov
inc
jle
mov
in
push
lret
jns
pop
arpl
push
fcmovne
movsb
leave
lock
ret
xchg
mov
bound
lret
mov
pmulhw
dec
mov
arpl
adc
adc
adc
ret
cmp
cmp
ja
push
shrw
sahf
dec
or
es
lcall
push
xchg
fsubp
pop
out
ds
aaa
lret
sbb
jno
jbe
sbb
jmp
decl
loopne
mov
fisttpll
mov
jp
arpl
and
and
mov
enter
dec
push
out
enter
mov
sub
pop
jge
mov
call
sub
test
dec
sbb
jge
sahf
jecxz
pushf
dec
xchg
push
fnstsw
add
adc
std
dec
decl
cld
or
jnp
rcr
ficomps
notb
sub
push
outsb
bound
pushl
jbe
gs
add
aas
jnp
and
push
ljmp
xorl
stc
ljmp
ljmp
dec
push
adc
xor
mov
scas
add
jle
aaa
mov
arpl
das
push
inc
or
dec
jmp
push
push
add
or
jns
inc
xchg
and
mov
push
ja
cmp
std
stc
lcall
movsb
mov
aam
ret
fstps
mov
scas
out
inc
ret
ret
decl
sbbb
xor
mov
hlt
xor
testl
or
jmp
aas
sub
fnstenv
jne
mov
cld
fsubrs
pop
pushl
lcall
jnp
popa
int3
and
fildl
cmp
jmp
rorb
mov
hlt
mov
mov
les
push
pop
lahf
ja
xchg
pusha
std
jmp
push
pop
mov
mov
add
repnz
mov
mov
push
hlt
push
mov
movsb
jge
lret
cld
pop
xchg
push
scas
scas
cs
shll
sti
fdivr
jg
jmp
pusha
jmp
lret
mov
mov
push
daa
or
xlat
jp
inc
cmp
push
inc
jb
aaa
mov
enter
mov
push
incl
int
inc
aas
fdivrs
test
inc
out
rclb
out
std
clc
mov
fwait
mov
xor
xchg
cmp
lcall
pushf
pop
aam
cmp
mov
outsb
in
negb
or
xor
stos
jl,pn
mov
out
data16
iret
sub
and
cltd
out
jmp
gs
lds
imul
inc
cmp
ja
pop
pop
push
mov
int
dec
pop
lods
fdiv
dec
adc
arpl
push
ret
sub
fwait
inc
adc
out
adc
sub
add
jns
or
mov
testb
jecxz
push
popa
adc
add
jg
and
xchg
lahf
andb
ficoms
fisttps
ljmp
mov
fucomi
dec
xor
push
mov
pop
lods
cmpsb
jbe
xor
lret
xor
fs
outsl
scas
arpl
call
and
movsl
sub
mov
jae
mov
mov
lods
nop
mov
addb
ret
pop
das
xchg
cmp
mov
out
cmp
ljmp
rorl
aam
pop
sbb
loopne
xor
ficompl
imul
das
sarb
je
outsl
rolb
mov
lret
clc
or
pusha
subb
mov
lahf
jnp
jmp
cltd
cmp
daa
pop
pushf
orb
gs
dec
inc
lock
pushl
or
and
cmp
int3
in
in
rorl
jne
in
call
push
mov
mov
sub
mov
lea
out
jecxz
dec
cmp
rcrl
xchg
dec
fstpl
cwtl
xor
sbb
sub
pusha
repz
std
idiv
loope
sub
or
dec
sbb
adc
cmc
push
fcomip
ljmp
jecxz
push
pop
pop
stc
ret
sbb
decl
jbe
scas
stos
movhps
cmp
ret
ss
add
cmp
ljmp
xchg
jmp
cld
inc
add
jns
push
data16
icebp
cmp
mov
lods
roll
mov
xor
xor
lea
call
pop
jnp
inc
xor
or
push
xchg
aaa
adc
or
xor
rorl
and
jmp
stos
xor
mov
mov
push
int3
ffreep
mov
aas
inc
mov
or
pop
mov
sbbb
inc
add
cmp
sub
ljmp
cwtl
and
popa
jl
in
lret
push
repz
push
push
sub
cmp
lcall
movsb
test
outsl
inc
jae
cltd
popf
xor
or
xchg
psubsw
movq
lock
xchg
dec
repnz
push
cmp
or
cli
lds
push
dec
mov
xor
decl
loope
lcall
dec
insb
jl
mov
and
jbe
jp
cmpsb
pop
imul
lcall
and
sbb
dec
push
lahf
fcoml
push
mov
divl
fmul
and
imul
add
jo
scas
test
hlt
xchg
les
jne
and
dec
cltd
sbb
adc
decl
ror
addb
fildll
aas
daa
mov
add
shl
pop
pop
jl
adc
ficomps
fistpll
lret
sahf
rcll
sbb
ror
push
jmp
adc
sub
sbb
decl
jecxz
xchg
nop
outsl
cltd
into
adc
repz
test
in
inc
ret
push
add
mov
xlat
adc
shll
sbb
sub
arpl
xchg
lcall
ljmp
aaa
xor
mov
popa
repz
mov
push
outsl
pop
lods
jge
scas
push
mov
adc
rorb
lcall
scas
js
xor
cwtl
test
into
inc
out
mov
jge
push
clc
cmpsl
sub
lcall
repnz
mov
sti
out
inc
mov
enter
sub
inc
xlat
popa
push
jecxz
sbb
pushl
clc
aam
icebp
imul
je
cmp
adc
or
decl
mov
xor
push
lldt
xchg
push
enter
out
sub
jp
push
xchg
aas
xchg
sub
push
jae
es
adc
mov
movsb
push
pushf
fiaddl
jb
mov
pop
lret
dec
nop
test
incl
mov
cmc
cld
into
push
adc
movsl
cwtl
lock
cltd
cmp
fiadds
lcall
in
pop
push
or
lods
fildl
cmp
inc
in
mov
cli
mov
xor
sbb
mov
or
jmp
leave
xor
dec
outsb
cmp
stos
cli
mov
pop
inc
jl
mul
stc
rolb
andb
incl
cmp
cmpb
pop
or
dec
inc
ficomps
mov
fnstsw
test
test
sbb
into
adcb
outsb
mov
fstl
in
xor
sarl
pop
sbb
clc
inc
jnp
dec
sti
adc
out
xor
add
mov
outsb
pop
repz
imul
xlat
std
jmp
sub
add
pop
rep
popf
imul
bound
nop
and
aad
sub
das
add
pop
pushl
popa
mov
mov
dec
mov
sbb
aam
stos
add
xlat
das
mov
pushf
mov
jmp
or
aam
push
iret
lret
jnp
ja
dec
lods
jne
xor
lods
outsb
adc
xchg
jg
mov
sbb
dec
xor
shrb
enter
jmp
test
adc
lock
mov
mov
outsb
in
js
sbb
jae
fidivl
or
and
inc
divb
or
cs
cmp
inc
call
movsl
lahf
lea
mov
call
leave
das
jecxz
mov
iret
mov
pop
fists
inc
cmc
pop
scas
pop
popf
loopne
xor
mov
jmp
mov
out
sbb
cmpsl
popf
inc
mov
mov
jg
or
mov
outsb
mov
mov
enter
mov
mov
incl
add
aam
insb
in
or
lods
mov
stos
rorb
push
dec
rcl
ja
cld
mov
inc
cmp
ficoml
sbb
outsl
xchg
not
mov
ljmp
popa
orb
jl
cs
push
inc
mov
and
decl
fs
push
nop
inc
ss
push
jbe
mov
scas
nop
cs
mov
ljmp
stc
cli
out
and
fdivrl
lods
and
sti
jbe
adc
xlat
cltd
std
mov
mov
orb
jecxz
lds
lea
pushl
xor
xchg
fimull
inc
adc
pop
inc
add
pop
inc
rcrb
test
incl
mov
stos
mov
das
cld
lcall
leave
sub
shll
jne
cmp
pop
cwtd
push
mov
sbb
push
xchg
mul
es
pop
cld
ljmp
dec
subl
daa
dec
dec
pushf
mov
mov
cmp
notl
test
pushf
dec
xchg
jno
sub
ficoml
push
cmp
push
push
adc
push
jmp
or
out
inc
mov
inc
shrb
push
cli
insl
cmp
gs
call
sub
lret
clc
fsts
jne
mov
inc
and
and
adc
ljmp
lret
push
sti
push
imul
cmp
fs
jle
inc
ljmp
mov
mov
popa
push
xchg
xlat
mov
lds
mov
pushl
inc
stos
cwtl
and
in
mov
pop
sub
push
xchg
loop
sbb
cmp
add
ljmp
stos
stc
mov
xor
dec
int3
mov
jge
adc
fwait
or
mov
incl
jp
inc
xor
jmp
out
cmp
out
ja
pop
sbb
add
lods
iret
test
loopne
decl
mov
jb
into
fbstp
dec
test
loope
jecxz
popa
sarl
std
cmc
sbb
dec
das
xchg
inc
stc
mov
fdivs
fisubrl
jo
jmp
mov
stc
movsb
out
push
cmpl
push
mov
xchg
pop
dec
mov
pushl
addr16
dec
push
int3
xor
leave
lret
pop
stos
ljmp
xchg
pop
lea
inc
mov
lock
pop
shll
sarb
mov
decl
nopl
inc
jecxz
in
inc
xchg
or
push
mov
sahf
out
lds
out
sub
lock
call
mov
jns
rol
jmp
and
pop
and
jg
pop
daa
icebp
add
call
push
xchg
jns
pop
cs
push
stos
sbb
jmp
ljmp
shlb
mov
push
test
and
test
std
inc
mov
adc
fadds
mov
sub
lahf
adc
popf
push
push
mov
add
icebp
jg
in
scas
inc
dec
pop
pop
mov
cs
or
ret
push
mov
cltd
fdivl
cld
js
ljmp
clc
and
incl
arpl
in
ds
or
jae
cmp
add
shll
mov
iret
ljmp
jle
push
bound
pop
xchg
mov
push
lret
adc
ja
and
inc
das
mov
sti
addr16
lcall
hlt
dec
add
imul
jmp
inc
mov
faddl
subb
lods
hlt
in
pop
sar
ljmp
push
mov
mov
cmp
pop
idivl
jno
sub
inc
and
inc
movsb
inc
dec
jno
mov
int3
mov
lods
mov
sbb
push
orb
sub
cld
faddl
mov
sub
mov
lds
pop
xchg
push
sbb
sti
call
in
scas
sbb
incl
xor
mov
insb
decl
stc
dec
cmp
adc
pop
dec
loop
xchg
xlat
ret
sti
decl
and
and
call
fsubrp
mov
hlt
xor
repz
ret
and
dec
sahf
adc
or
shll
ljmp
daa
rclb
push
jbe
lahf
or
jp
pop
add
xchg
xor
insb
call
cld
jecxz
xchg
pop
cmpsl
pop
repnz
cmp
xchg
and
and
xor
lcall
sti
cli
lods
int
pop
shlb
mov
cmpsl
adc
lcall
imul
adc
inc
push
xchg
out
jbe
mov
xor
cld
aaa
mov
cld
dec
push
jns
pop
fsubrs
or
je
jg
fldenv
imul
jne
test
lods
mov
cmpl
gs
mov
or
ret
decl
mov
ret
ss
jno
ficomps
std
rorb
loopne
xor
call
mov
sbb
dec
jbe
imull
lcall
sub
lods
int3
lds
adc
jmp
ret
xor
out
movl
xchg
or
mov
in
add
mov
int
cmp
decl
cmp
mov
cmp
inc
pop
mov
loope
dec
pushl
std
call
dec
fnstcw
dec
loopne
loopne
daa
and
iret
scas
fstps
js
mov
fistpl
cmp
test
ret
movsb
in
push
gs
js
pop
ds
inc
js
mov
mov
push
mov
adc
inc
jp
cmp
sub
sub
ljmp
arpl
jae
add
mov
adc
stos
xchg
cmp
xchg
pop
xor
mov
jns
mov
mov
popf
out
mov
lcall
loope
sub
stc
and
fstl
nop
cmp
loope
fnstenv
xchg
pushf
nop
loope
lcall
stc
mov
andl
mov
ds
decl
add
adc
push
mov
test
leave
imul
iret
xlat
push
es
pushl
sbb
xchg
push
cmpsb
test
repnz
mov
push
out
fsubrl
cmp
pop
sar
mov
jle
pop
mov
pop
outsl
leave
jmp
jb
aam
push
pushl
ljmp
adc
inc
jl
imul
test
notl
outsl
sti
jle
rorb
ljmp
pop
mov
movl
sub
mov
push
shr
test
insb
adc
imul
loope
inc
inc
repnz
leave
xchg
inc
jbe
notl
mov
inc
shrl
push
test
loopne
outsb
movb
out
clc
call
iret
testl
out
mov
lcall
push
ja
jae
aas
push
lcall
xchg
sub
inc
dec
push
out
xchg
imul
call
jg
push
ljmp
or
call
in
repz
idivb
cwtl
sub
outsl
jl
je
dec
mov
ljmp
addr16
addr16
mov
sub
sub
mov
push
inc
cmp
in
lahf
shrb
jmp
in
cltd
dec
repz
insb
sbbl
out
push
mov
cmovns
int3
pop
out
clc
call
ljmp
mov
sub
int
or
jg
aaa
pop
xchg
aam
dec
mov
int
fwait
lods
pop
xchg
jae
cmp
dec
addb
and
push
pushf
cltd
mov
aaa
ds
cmp
loope
pushl
cmpsl
inc
ds
cmpsb
outsb
sbb
add
nop
adc
mov
pushf
mov
push
dec
insl
inc
mov
int3
xchg
fwait
sub
xor
mov
pop
pop
or
mov
dec
push
lret
xchg
xor
push
inc
mov
shll
jp
sar
push
stos
imul
mov
movsl
shrb
mov
fucomi
into
or
aas
push
xor
adc
sti
pop
fs
push
or
mov
out
pop
enter
ucomiss
ljmp
fnsave
push
lock
cmp
daa
mov
shlb
scas
xchg
xor
or
fcomip
xor
sbb
std
ljmp
rcrl
xchg
enter
fmuls
push
ljmp
sub
enter
xor
push
repz
xchg
jl
xor
push
sub
in
add
decb
cmp
jmp
into
jmp
xchg
orb
ds
roll
sbb
mov
sub
loop
xor
sub
dec
cmpsb
cmc
aas
dec
lcall
adc
mov
pop
jmp
push
mov
xor
jnp
jge
mov
xor
pop
mov
lret
mov
cld
cmp
push
pop
sahf
jg
fstl
fdivp
addb
ds
call
inc
xor
inc
inc
xchg
push
in
cmp
jp
cltd
outsl
dec
sub
insl
add
sbb
test
jmp
ret
mov
push
jle
out
lcall
xorb
pop
das
adc
dec
jmp
repnz
call
inc
mov
sbb
scas
sti
rolb
lcall
ljmp
mov
xchg
jmp
popf
add
sti
mov
clc
inc
sub
adc
cli
mov
stos
notb
inc
and
jle
fs
test
loop
jg
cmp
cwtl
je
push
and
pop
iret
int
lea
in
sub
stos
xor
scas
bound
out
mov
adc
jo
loop
pop
or
cs
clc
add
mov
std
loopne
outsb
inc
add
call
cmp
inc
aas
and
and
xlat
inc
addr16
pop
and
jns
cld
lret
jmp
incl
mov
pop
cmp
decl
mov
xor
mov
jnp
aas
orb
xor
decl
decb
ret
xchg
sub
mov
aaa
rcrl
pop
jo
adc
mov
decl
aad
fiaddl
mov
push
ret
mov
arpl
sar
jg
lock
mov
xchg
push
or
cld
sbb
push
adc
pavgb
pop
mov
imull
push
xchg
push
adc
bound
out
jmp
xorb
pushl
mov
fildll
lahf
shll
jmp
sti
sub
xchg
test
inc
mov
arpl
decl
sbb
sahf
mov
fbld
out
jne
xchg
dec
cmp
ljmp
imul
jp
pop
push
and
sub
lods
ret
add
pushl
clc
xchg
movsb
es
sbbl
shlb
xchg
movsl
js
sbb
cld
push
fwait
jmp
loop
lret
mov
xchg
jno
mov
dec
nop
adc
cmc
push
pop
rep
jmp
jns
mov
xor
or
gs
lret
int
aaa
inc
push
or
or
mov
addr16
jge
movsl
push
jns
jno
xor
or
xchg
inc
cmp
or
cmc
jmp
xchg
cmp
ljmp
and
fwait
hlt
das
jbe
sub
and
jg
imul
insl
repz
and
xchg
pusha
clc
sub
rcl
sar
ljmp
test
dec
xchg
mov
sbb
xor
pushl
cld
scas
inc
adc
jecxz
data16
pop
decb
cmp
xchg
rolb
push
loop
gs
negl
in
cmpps
jmp
sub
push
mov
pop
leave
mov
aad
sbbb
ljmp
out
imul
lods
lds
subl
int3
inc
daa
jae
mov
mov
jmp
pusha
mov
pop
add
insl
lea
ja
push
pop
pop
ror
mov
mov
jmp
pusha
sub
jne
dec
cmp
dec
add
push
cld
mov
pusha
hlt
xchg
dec
pushf
pop
inc
notl
add
jle
inc
push
mov
inc
sub
cltd
imul
and
lcall
mov
sub
insb
addb
and
sub
rcrb
gs
das
jmp
mov
or
adc
add
jl
test
push
sti
jmp
iret
mov
or
pusha
loope
push
movl
inc
pop
jbe
push
and
mov
jg
adc
push
loopne
jg
pushf
lret
aad
xlat
out
mov
in
rclb
faddl
push
xchg
out
xorb
jecxz
xchg
imul
adc
or
aaa
rorb
mov
out
mov
jb
cmpsb
and
ss
sbb
push
xchg
mov
mov
jg
out
sbb
jne
cli
int
jne
inc
jnp
pop
rcrl
outsb
mov
jg
dec
sbbl
xor
add
mov
stos
mov
pop
pop
js
adc
je
call
pushl
adc
cmpb
scas
add
jmp
mov
leave
movb
hlt
gs
adc
add
add
js
aaa
cld
jmp
shrb
dec
insl
dec
push
inc
add
xor
stos
cmp
jae
clc
pushl
dec
mov
or
shl
nop
xor
loopne
inc
jo
aaa
lcall
pop
lret
cmpsl
sub
imul
xor
ljmp
and
loope
dec
leave
cltd
fnstsw
xor
pushl
xchg
dec
xor
xor
xchg
lea
les
icebp
enter
fs
pushl
cli
lret
insl
push
out
sub
int3
cmpsl
xchg
inc
cmp
jl
jo
jno
cmpsb
inc
mov
rol
mov
adc
jo
lods
popf
mov
out
adc
fcmovnbe
outsb
leave
lods
stos
incl
mov
cmp
fwait
nop
lods
ja
mov
or
pop
pop
mov
jle
pop
outsl
lea
jne,pt
jge
sbb
jl
lock
orl
or
gs
or
push
bound
jno
push
mov
decl
jge
dec
rcrb
imul
inc
sbb
stos
hlt
mov
fs
cltd
loop
ret
aam
adc
dec
mov
xchg
adc
int3
aam
cmpl
imul
mov
sbb
xor
and
pop
lock
mov
mov
sbb
decl
mov
sti
repnz
cmp
xchg
sub
loope
test
movsl
xor
scas
clc
ja
outsb
sub
push
lea
pop
and
movsl
push
in
shlb
inc
in
scas
cli
lcall
rcll
dec
xchg
sti
adc
repnz
push
mov
xor
cmpsl
pushl
xchg
into
and
inc
cmp
pop
xlat
or
cmp
jmp
stos
popa
lcall
dec
sbb
ljmp
jmp
push
push
sarl
es
jns
imulb
daa
rolb
adc
mov
pop
lock
jl
xchg
into
out
pop
xchg
mov
fwait
test
mov
mov
jg
cmpl
loopne
pusha
push
incl
dec
loop
or
pop
inc
or
lret
sub
stos
cmp
imul
inc
inc
or
in
mov
scas
lcall
ljmp
cmp
mov
dec
mov
add
ds
adc
iret
xlat
and
mov
notl
shlb
or
imul
adcl
idiv
jg
shll
stc
dec
mov
cltd
mov
add
aaa
cmc
adc
push
xchg
movsb
stos
les
daa
push
loop
mov
pop
and
jp
sbb
insb
pop
icebp
pushf
fcmovnbe
lcall
out
xchg
sbb
mov
sti
xchg
push
add
into
dec
das
cli
lcall
stc
ret
cmpsb
imul
shlb
add
ja
xor
inc
dec
cld
lcall
jmp
xor
loopne
adc
inc
sbb
or
call
pop
and
inc
into
fstl
sub
mov
push
loopne
and
icebp
pop
push
jmp
or
jne
push
push
push
xchg
jge
dec
inc
das
in
popl
cmpsb
xchg
shr
pop
pop
ljmp
or
lcall
jmp
adc
movsl
nop
bound
mov
sets
pushf
mov
pop
mov
cmp
call
pop
mov
add
sub
arpl
sub
and
dec
ja
or
dec
or
or
gs
mov
dec
hlt
pop
pop
mov
loop
cmp
pushl
and
push
inc
daa
ss
jg
sub
xor
jg
fs
sti
or
in
pop
das
adc
dec
and
jo
addr16
stc
movsl
sbb
in
xchg
and
add
xor
aaa
push
aam
dec
cmp
rcrb
dec
cld
cmpsl
cli
cmc
push
in
ljmp
clc
fsubr
lahf
divb
pop
out
jnp
je
cmp
mov
pop
cmp
fidivrs
call
loop
scas
out
lds
adc
xlat
sbb
cs
cmp
cli
jg
in
pop
adc
int3
movsl
xchg
mov
mov
pop
jo
lret
je
pushl
xchg
dec
adc
in
and
fisttps
add
bound
adc
ds
jmp
add
sahf
jg
roll
inc
inc
push
pop
inc
pop
fs
jg
push
shll
shrb
clc
cld
in
clc
outsb
jecxz
insb
rcll
sub
mov
in
xchg
and
rorb
dec
outsl
lcall
test
icebp
rcll
jae
adc
nop
mov
mov
in
xchg
incl
enter
jns
mov
adc
insl
int3
outsb
popa
leave
mov
cmp
sbb
decl
mov
aam
cmpb
add
std
daa
call
pop
pop
js
in
hlt
jg
jmp
sub
ss
lods
or
xor
add
repnz
clc
ljmp
ljmp
lcall
movlps
out
andb
das
in
call
xchg
add
xchg
push
xchg
push
adc
jbe
sbb
or
jo
das
call
loopne
push
sub
pop
push
mov
cmc
xchg
into
sub
cmp
and
mov
ljmp
dec
dec
repnz
loope
int3
fimull
popf
stos
imul
popa
aam
pusha
jle
pusha
es
dec
add
mov
mov
ret
xchg
pop
mov
mov
imul
sub
sti
shl
pop
sbb
popa
in
leave
cli
jmp
sbb
cld
mov
cmp
call
pop
ret
popf
mov
popf
lods
sub
out
div
popf
push
mov
and
xchg
cmc
sub
push
xchg
rolb
adc
scas
aad
sbb
inc
fldenv
lret
xchg
cmc
add
call
cld
xchg
icebp
add
jmp
scas
fucomp
cmp
inc
fwait
popa
or
push
sub
xchg
lcall
call
pop
movsl
lods
repz
push
pusha
sbb
test
xchg
outsb
jmp
or
call
loopne
movsl
setnp
or
jmp
sbb
pop
mov
decl
aad
or
or
fidivrl
arpl
js
mov
lcall
dec
test
daa
addl
sbb
bound
rcrl
inc
mov
sub
clc
iret
lret
xchg
sbb
notb
dec
xor
adc
push
jbe
lcall
mov
and
inc
call
mov
cmp
xchg
mov
movsb
pop
fwait
cwtl
jns
sbb
lcall
loope
cmp
imul
adc
loop
test
pushf
push
dec
xor
ror
fistpl
dec
cmpsb
out
lahf
push
dec
and
lea
lahf
jg
or
xlat
mov
negb
and
in
lock
cmp
add
aam
xchg
xchg
fisubl
bound
ja
jns
ja
inc
mov
adc
aas
push
lret
ret
mov
decl
mov
mov
jns
mov
mov
out
into
insl
test
imul
icebp
mov
mov
aad
xor
pop
ja
pop
and
enter
js
push
and
scas
lcall
hlt
sub
dec
ret
imul
ret
int3
sbb
cld
ror
pop
loop
decl
cmc
jecxz
jp
das
dec
movsl
jno
rcll
es
int3
and
adcl
cld
mov
aad
lahf
mov
jge
jmp
lds
push
pop
push
push
mov
out
out
sbb
mov
and
or
jo
cli
lahf
jb
iret
adc
js
imul
fwait
mov
popa
push
sbb
inc
xor
sbb
sbb
xchg
jmp
lcall
in
cmpsl
lods
addl
cli
mov
test
mov
fs
xor
outsb
xchg
jne
sbb
imul
sahf
push
jno
push
mov
jg
push
scas
pop
or
mov
cmpsb
insl
sub
inc
pop
aas
sbb
fcompl
xor
sub
cli
incl
jp
dec
pop
sbb
lds
push
in
sbb
ds
test
push
add
mov
mov
or
xlat
push
pop
cmp
inc
cmpsb
ljmp
cwtl
sub
mov
mov
mov
mov
mov
hlt
dec
fisttps
aam
outsb
lds
outsb
xor
icebp
jmp
push
and
out
and
and
sbb
clc
jg
das
mov
lahf
stos
das
clc
call
sahf
mov
mov
ds
into
push
pop
inc
je
idiv
call
lahf
sbb
xchg
lea
xor
xchg
ficompl
cmp
mov
sbb
mov
cmp
ljmp
sbb
in
mov
xchg
push
cmp
and
cmc
jmp
ret
mov
push
mov
cs
ljmp
mov
arpl
call
fnstsw
test
pop
ja
push
sbb
rorb
push
pop
out
scas
mov
fldenv
movl
adc
mov
xor
xor
in
mov
stos
in
jae
adc
lret
out
call
cmpsb
mov
mov
xchg
aas
decb
xor
add
xor
lcall
dec
setae
jo
mov
test
mov
enter
int
imul
jg
call
mov
fmull
mov
dec
aaa
jmp
push
xor
cld
lcall
fldt
std
pusha
decl
pop
lds
orb
or
ficompl
in
xor
ud0
add
lea
iret
cmp
inc
pushf
sub
and
dec
mov
sub
call
int3
fwait
sarb
xchg
push
loope
mov
lret
nop
pushl
xor
cmc
and
mov
sub
call
sbb
sbb
push
jg
incl
pusha
in
cltd
arpl
push
in
pop
jp
cs
lcall
incl
mov
sbb
in
daa
inc
ret
test
pop
mov
lahf
mov
mov
bnd
mov
mov
jmp
inc
mov
popa
fwait
sub
ljmp
lods
add
sub
or
in
mov
xchg
inc
xchg
cmp
push
mov
jmp
rcrb
jecxz
jge
dec
repnz
call
test
jp
add
sbb
cmp
mov
mov
mov
lahf
filds
inc
loope
call
sti
mov
shl
scas
push
lret
int
test
sub
call
cltd
jle
lret
push
shll
cli
xor
xchg
es
arpl
sbb
mov
adc
lret
loop
incl
pop
sub
pop
scas
ds
pop
xor
les
imul
lcall
aaa
pop
cmp
and
rcll
pop
test
pop
pop
mov
mov
push
std
mov
decl
aad
aam
inc
data16
loop
xor
xchg
jne
cld
pop
sub
out
call
in
iret
push
dec
insl
les
push
cmp
mov
fstl
ss
xlat
sahf
lcall
int3
int
jb
inc
mov
mov
int3
cmc
jg
cli
pop
cmp
decl
mov
adc
in
dec
aaa
stos
bswap
xchg
mov
push
or
mov
dec
dec
lock
mov
ljmp
cmpsb
push
mov
stos
cmpsl
movsl
fmulp
jbe
xchg
decl
xchg
ret
je
jb
mov
outsb
mov
xchg
and
jae
fs
call
das
sbb
mov
pop
pushf
xchg
push
bnd
test
dec
add
in
fimull
aad
push
test
popa
pushf
mov
dec
jp
addr16
mov
stos
incl
js
int
test
jmp
shl
gs
xor
mov
inc
inc
hlt
fcos
call
push
xor
movsl
pop
xor
ret
ds
push
ja
loopne
jae
flds
sbb
pushl
int3
cs
lret
inc
push
push
out
cli
lret
subl
call
sbb
sbb
add
cmp
jge
test
mov
lret
pop
lahf
mov
les
std
xor
adc
enter
xor
je
sub
pushl
rcl
stc
or
or
push
mov
or
or
add
sbb
xchg
jae
call
mov
sti
jne
aas
ss
and
mov
add
fsts
addl
xchg
add
lcall
dec
xor
outsl
xlat
imul
xchg
sbb
rcll
call
sub
jb
fdivr
cld
cmp
rorb
outsl
scas
enter
mov
mov
add
and
pop
filds
decl
cs
push
push
rorb
pop
js
fcomi
xchg
clc
jnp
mov
repz
and
mov
test
adc
sub
mov
test
sarb
add
andb
pusha
push
dec
ror
push
cwtl
sub
pushl
mov
div
mov
les
aas
scas
cs
popf
sub
ret
out
mov
mov
fs
rolb
insb
mov
cwtl
mov
in
js
xchg
ficoml
sub
mov
aaa
adc
dec
xchg
sarb
mov
ss
cmp
dec
stos
addr16
ds
xchg
jmp
mov
jno
cwtl
je
jne
shr
push
icebp
pop
popa
loope
or
nop
adc
lock
and
add
fists
arpl
or
insb
les
scas
sub
and
jae
mov
cmpsl
imul
pushl
out
pop
cmp
adc
sub
dec
inc
cmp
js
sbb
cmp
jecxz
leave
imul
decl
aam
adc
push
sub
push
inc
mov
push
pop
fdivrp
xchg
inc
je
popa
aam
jecxz
or
xor
pushl
cld
cltd
ds
cmp
lcall
adc
adc
cmp
cmp
inc
inc
mov
aam
push
fs
push
xor
push
call
pop
pop
add
and
xchg
call
cltd
lret
fists
sub
jg
pop
push
xchg
mov
push
fnstenv
jle
mov
xchg
or
lcall
scas
xchg
add
addr16
mov
fmull
testb
aam
xlat
mov
cli
or
jecxz
pop
into
mov
lahf
push
hlt
hlt
mov
mov
rcll
or
inc
fisttpl
or
mov
jmp
cmpsl
fdivs
sbb
mov
movsb
push
in
das
clc
decl
pop
clc
fmull
push
stos
aam
cld
pop
dec
mov
neg
jmp
ljmp
mov
pop
insl
gs
adc
bnd
int
cli
cmp
pushl
arpl
mov
cmp
int3
mov
push
mov
ret
xor
inc
clc
js
test
mov
jg
xchg
lret
sbb
mov
gs
jle
jnp
pop
jle
rcrb
xchg
mov
xchg
xorb
mov
aas
js
ss
sti
cmc
std
pop
sbb
divb
sbb
dec
lret
hlt
mov
and
adc
mov
loope
clc
add
mov
jno
mov
cmc
out
jnp
add
es
movsb
xchg
fidivs
cmp
push
leave
cmpsl
test
cs
rcrl
fistpl
or
jmp
fcompl
in
movsl
pop
or
jmp
mov
repnz
lods
push
lret
xchg
dec
jmp
cltd
dec
cld
mov
mov
std
pushl
roll
inc
lock
jo
test
mov
repnz
cmp
jne
notl
ret
sub
adc
xor
cld
mov
sbb
mov
jne
dec
ss
insb
and
repz
xor
gs
and
jmp
pop
pushl
js
popa
sti
push
mov
test
push
enter
cmpsb
dec
ljmp
clc
jg
rcr
or
xchg
mov
dec
push
lcall
jp
imul
mov
jg
arpl
mov
ds
loop
lcall
dec
pop
jnp
xchg
adc
shll
adc
popf
xor
in
mov
pop
mov
aad
jmp
jo
rcrb
sbb
les
incl
ret
ret
outsb
aad
cli
inc
sbb
mov
in
sub
repnz
fmull
rorl
and
insb
xchg
loope
dec
cwtl
loop
push
lcall
into
cltd
pop
aam
jnp
rcrl
pop
mov
decl
lock
xchg
xchg
mov
scas
mov
inc
loop
stos
push
xchg
xchg
iret
jb
jl
addr16
push
mov
push
mov
mov
sti
add
sub
insl
dec
in
sub
addr16
jmp
jg
dec
repz
pushf
inc
movsb
adc
adc
pusha
data16
mov
rcr
fisttps
jle
or
das
pop
mov
adc
mov
aad
loope
lods
or
in
pop
ljmp
cmp
mov
add
push
es
in
mov
les
cmp
movsl
mov
aam
mov
jbe
mov
std
lcall
sbb
sbb
and
mov
sub
dec
xor
mov
icebp
mov
jecxz
mov
mov
gs
mov
or
or
scas
mov
mov
sub
mov
jmp
mov
mov
std
sti
jns
cmc
xor
jmp
adc
pop
lds
cmpsb
stos
cs
lcall
pop
call
mov
loope
push
xor
arpl
fcomip
adc
aas
fsubrs
and
sbb
jp
mov
cmp
jl
dec
test
cmpsl
sub
and
sub
adc
decl
fistps
jns
xchg
push
stc
nop
or
adc
mov
sbb
mov
sahf
repz
imul
ljmp
push
pop
adc
sbbl
xor
sbb
mov
add
xchg
xchg
pushl
xchg
aad
mov
mov
add
jge
pop
test
dec
pop
in
sar
out
adc
or
repnz
dec
sbb
lret
mov
pop
pop
sub
adc
and
subl
push
pushl
fiadds
dec
inc
adc
cmpsl
test
mov
lret
mov
push
push
mov
push
jmp
adc
cmp
sti
cli
sbb
std
testl
dec
xchg
mov
xchg
push
dec
mov
push
pushl
xlat
push
xchg
add
sub
inc
add
or
mov
add
sub
or
adc
mov
addb
pop
add
incl
or
add
les
jo
mov
jg
add
pop
and
js
mov
ss
add
pop
notb
pop
dec
orb
and
mov
or
dec
adc
dec
fs
inc
scas
jle
setns
sub
jg
add
dec
mov
loop
pop
imul
xor
fsub
pusha
or
jnp
xchg
out
mov
movsl
push
daa
add
xchg
dec
and
cmpsl
push
and
mov
es
push
movsb
push
movsb
inc
scas
push
outsl
out
cli
and
stos
push
and
push
test
and
imul
mov
sbb
pop
add
mov
cld
repz
mov
sbb
inc
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
incl
mov
insb
or
lret
imul
imul
imul
sub
lret
mov
jbe
fldenv
or
push
jae
mov
test
cmp
stos
pop
stos
mov
jbe
jb
ss
add
jo
mov
push
shll
add
outsl
lods
loopne
insl
push
shll
fidivrl
iret
outsb
or
push
ss
mov
sbb
jns
out
jge
mov
mov
xorb
ljmp
movsb
push
add
mov
jl
stc
mov
shlb
mov
lcall
add
jne
shr
data16
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
mov
push
data16
inc
ds
scas
cmp
push
push
shlb
mov
outsb
outsl
stos
aas
add
ja
fstpl
fldl
push
xlat
jne
add
ja
mov
insl
rcll
aad
push
xlat
ja
js
push
jl
sarl
jns
push
jp
jp
inc
push
fidivrl
push
insb
push
out
sarl
ja
fldl
rorl
jmp
ljmp
ficoml
xchg
sub
push
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
insb
out
cltd
cmp
cmp
pushf
cmp
popf
xchg
ds
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
out
mov
push
jecxz
push
imulb
add
movl
out
jns
out
push
hlt
clc
stc
cli
sti
loope
sahf
out
std
incb
jecxz
arpl
data16
sbb
add
jo
imul
dec
push
add
pop
add
pop
add
cltd
int
pop
add
cmp
mov
inc
mov
push
add
push
mov
add
add
nop
cld
fldcw
or
test
test
ds
stos
cmpsl
or
push
sbb
lods
sbb
pop
adc
mov
adc
jmp
mov
femms
lods
lods
pop
mov
insl
addr16
scas
add
scas
insl
lods
pop
pop
sbb
push
scas
lods
push
and
lods
pop
sbb
sbb
nop
scas
scas
sbb
mov
mov
in
or
and
repz
push
mov
or
or
in
xchg
lock
adc
mov
pop
and
and
and
sub
repz
mov
pop
sub
daa
and
mov
add
addr16
sbb
mov
ss
and
cmp
pop
roll
pop
aaa
cmpsb
add
insb
sti
incl
mov
pop
xor
pop
or
or
std
int3
in
push
add
pop
pop
xor
mov
mov
das
push
cs
xor
add
xor
das
pop
push
push
xor
std
jmp
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
clc
fildll
test
cmp
jl
jge
jno
jmp
lock
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
and
incl
movsb
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
decl
xchg
nop
xchg
xchg
sub
dec
ja
jns
dec
mov
sub
js
imul
cmp
je
adc
sub
push
mov
jbe
loopne
inc
or
pop
scas
inc
pop
mov
aas
outsl
dec
jns
fists
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
sub
push
jb
cs
xor
mov
push
push
pop
push
pop
jbe
dec
sbb
jle
and
push
mov
xchg
in
rcrl
pop
push
inc
mov
cmp
mov
inc
add
es
jae
xchg
jp
inc
push
popf
inc
in
addr16
outsl
mov
aaa
add
xchg
jno
lret
push
bound
mov
into
mov
mov
inc
push
sahf
mov
mov
insb
add
outsb
add
xchg
xchg
pop
push
test
jg
cmpsb
dec
push
dec
push
movsb
jae
add
jb
shll
addb
pushf
push
rorb
lahf
loopne
dec
mov
cltd
insl
outsb
mov
jns
dec
mov
add
ja
sahf
jbe
fistpl
dec
imul
fildll
stos
push
add
and
es
js
out
mov
gs
mov
shrl
insb
pop
mov
push
outsl
ror
push
ds
rorl
sbb
push
mov
pop
jg
fiadds
call
clc
add
mov
in
adc
mov
fbld
stos
bound
out
arpl
push
loopne
mulb
data16
jb
sbb
in
out
xchg
in
push
jle
or
jecxz
or
flds
fnstcw
aad
push
divb
fildl
lahf
cmpsb
sarb
addb
push
sbb
sbbl
test
test
sbb
popf
int
inc
test
in
mov
push
xchg
nop
and
mov
xchg
in
xchg
lock
sub
sub
cmpsb
jge
add
scas
outsb
out
xchg
das
push
xchg
pop
fldt
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
push
cmpsb
pop
cmp
sub
sbbb
push
cmpsb
scas
jo
or
sahf
lret
shrb
into
rcrl
mov
psrlq
sub
mov
int
mov
mov
sarb
into
addr16
sarl
ret
dec
adc
add
mull
push
leave
cmp
dec
dec
out
je
add
inc
sbb
dec
adc
mov
fisubrs
or
or
mov
sbb
or
es
push
adc
push
add
in
pop
adc
adc
ds
add
ret
mov
xor
ds
inc
mov
mov
mov
std
push
testb
mov
add
and
fsubrs
ds
mov
pop
sar
push
aas
and
xor
xor
or
pop
and
insb
aas
aas
cmp
sub
adc
js
pop
adc
mov
sbb
inc
jbe
popf
mov
sub
inc
or
fidivrl
cmp
dec
mov
scas
ds
jle
aas
jbe
jge
adc
ds
xor
dec
inc
test
mov
scas
add
sub
mov
mov
addr16
mov
mov
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
in
ljmp
mov
sahf
ds
xor
sub
sub
sub
sub
insl
dec
pop
inc
add
dec
and
sar
fildl
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
jg
aas
mov
jge
jns
jns
jle
addl
jo
lods
mov
outsl
outsb
pushf
sti
popf
shrb
rolb
outsl
adcb
add
push
cs
out
or
incl
push
push
add
cmc
repz
dec
xor
loop
aas
add
xchg
pop
cmp
test
add
mov
add
mov
push
mov
fnstsw
incl
stc
cmc
repnz
into
xchg
addr16
ja
shr
add
pushf
outsb
popf
add
notl
in
lcall
or
mov
mov
sahf
or
jae
js
add
ds
pop
add
mov
add
cmpsb
mov
test
scas
xchg
js
lret
and
out
test
sub
jbe
sti
fimull
sub
nop
sub
mov
fistl
xchg
xor
xchg
xor
xchg
outsb
lcall
in
imull
jbe
negl
fcmove
fst
clc
cltd
int
es
push
lret
loopne
push
std
adc
fdivrp
divl
xchg
add
test
jg
adc
data16
jge
or
mov
add
pop
repnz
dec
dec
dec
dec
dec
dec
add
pop
mov
add
dec
or
adc
cmp
adc
dec
or
arpl
dec
push
adc
add
or
pop
pop
lcall
inc
push
dec
sbb
aas
in
and
dec
and
adc
sbb
dec
add
outsl
jmp
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
pop
push
and
and
add
dec
ss
xchg
adc
das
xor
sub
sub
adc
mov
insl
ss
stos
push
pop
mov
mov
mov
popw
mov
mov
add
outsb
mov
push
add
outsl
bound
add
pop
push
enter
or
or
outsl
mov
cmpsl
dec
xor
or
into
incl
jg
sub
inc
xlat
sbb
shll
or
push
jnp
pop
mov
es
xor
cmpsb
pop
daa
iret
fdivrp
sysret
in
lock
pusha
rcll
punpcklwd
rcll
inc
sbb
or
push
lock
outsl
pop
mov
sub
sahf
jg
test
sub
lahf
mov
into
adc
out
cli
mov
add
mov
cli
filds
add
cmp
pop
jg
add
xor
cli
inc
test
adc
les
or
jg
inc
mov
cmp
pop
das
sti
mov
pop
pop
add
jle
rcll
mov
sti
jg
jo
insl
pop
xchg
ret
mov
adc
and
pop
test
sbb
push
les
dec
idivb
ljmp
cld
add
and
bound
or
push
or
std
test
add
xchg
les
xchg
pop
jg
push
orl
add
mov
or
sub
decl
push
loopne
xor
roll
add
nop
sub
sub
xchg
or
sbb
sub
jg,pt
add
xchg
push
jbe
or
lods
aas
add
jmp
adc
cltd
lea
xchg
insl
push
add
mov
in
jle
lret
imul
add
add
add
and
push
xor
dec
jg
xorl
or
jg
add
shrb
push
push
jg
add
push
mov
push
add
sub
jg
les
adc
pop
mov
lods
cmpb
mov
fdivrp
cmpsb
ljmp
in
popf
notb
add
daa
rcl
mov
aas
aaa
pop
pop
in
push
pop
xor
pop
jle
xor
pop
inc
push
add
test
mov
jle
sbb
decl
push
or
push
dec
xchg
push
fnstsw
je
add
mov
insl
iret
lods
comiss
daa
push
arpl
das
les
aam
insl
xchg
arpl
out
push
xchg
push
and
hlt
dec
and
lcall
jae
lds
ljmp
or
or
jle
push
and
mov
push
dec
fidivrs
inc
idiv
fnstenv
add
push
jne
dec
out
jl
pop
push
jbe
or
es
push
jnp
push
jp
ja
dec
decb
js
dec
jbe
pop
add
jne
mov
mov
mov
jbe
call
and
or
ljmp
jle
aam
cmp
test
scas
jmp
call
and
mov
jns
fiadds
insl
and
push
mov
outsl
inc
call
inc
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
test
cwtd
fstpt
cmpsb
mov
xchg
xor
xchg
xor
sub
sub
jns
insl
push
nop
daa
ss
cs
enter
mov
xor
lcall
cmpsl
sbbl
jg
dec
test
cli
pop
fnsave
xor
inc
int
sbb
push
jbe
data16
ss
rcl
push
cs
add
mov
aam
ja
dec
test
xchg
movb
inc
mov
pop
ja
testb
pusha
add
add
dec
in
adc
inc
pusha
sbb
sub
inc
dec
push
insl
outsl
mov
mov
jns
or
add
push
adc
add
push
orl
lea
jmp
or
xchg
inc
and
cmp
lock
push
jmp
xor
pop
cmp
std
cmovb
icebp
imul
add
sub
lcall
out
pop
sahf
jbe
xor
jmp
mov
pop
call
push
sbb
xor
inc
push
mov
push
negl
xchg
std
call
jmp
syscall
mov
sub
xchg
mov
or
call
sbb
add
mov
daa
cld
pop
das
pop
stos
mov
incw
js
xchg
adc
add
push
jbe
lcall
or
sub
sti
psubusw
test
ds
fcompl
adc
ljmp
test
inc
push
sahf
test
call
decb
sbb
inc
cmpsb
decl
mov
lcallw
sub
ljmp
cmp
add
adc
mov
enter
bswap
xor
data16
adc
inc
sti
mov
stos
insl
out
setno
incb
add
push
inc
dec
inc
sub
nop
sysret
arpl
add
mov
outsb
push
sub
dec
arpl
push
sub
pop
sti
and
call
imul
call
mov
jbe
xor
pop
stc
bswap
arpl
leave
add
call
jg
push
inc
test
cli
dec
dec
mov
test
push
imul
push
sbb
imul
rcll
ficoms
push
pop
inc
stos
nop
into
aaa
mov
jecxz
fwait
push
shll
roll
imul
ret
lcall
call
adc
jmp
ljmp
dec
push
mov
push
inc
lods
sbb
es
mov
lea
sahf
movsb
dec
push
stos
push
popf
inc
xchg
int3
jnp
cmpsb
dec
dec
inc
jne
lcall
push
add
and
dec
shlb
push
shrb
xchg
int
push
rcl
outsb
shrb
es
fwait
dec
push
push
jb
and
das
push
iret
insl
xchg
jmp
outsl
pop
imul
push
push
dec
stos
xchg
push
ljmp
call
sahf
call
fisubl
dec
pop
add
repnz
adc
push
jmp
pushf
int
xchg
mov
decb
cwtl
xor
push
inc
push
xchg
fisubs
es
push
aaa
push
lcall
xchg
xchg
push
xchg
es
xchg
xchg
xchg
notb
sub
xor
mov
test
aam
incl
decw
int3
jb
fimuls
clc
movb
neg
and
push
dec
call
js
std
faddl
jge
push
jnp
xor
imulb
or
jl
or
dec
movsl
fstp
jl
push
jge
jg
es
fwait
cltd
std
add
adc
fidivrl
push
dec
push
dec
repnz
std
jns
repnz
jae
pop
fidivrl
push
mov
jnp
xlat
lock
jge
hlt
in
add
int3
outsb
nop
mull
addb
mov
stc
sbbb
or
pop
jne
lahf
push
adc
adc
push
and
int
push
jns
inc
sahf
addb
cld
dec
lahf
dec
es
in
inc
and
pop
aas
lds
sysret
jg
and
xchg
out
push
sub
iret
xchg
mov
cli
ljmp
clc
push
idiv
ss
inc
sub
jg
mov
icebp
dec
ffree
and
pop
cld
daa
or
mov
fstpt
mov
icebp
bnd
ret
je
daa
jg
mov
inc
push
jns
ja
loope
xchg
and
mov
jp
es
xchg
jge
add
jge
and
jmp
mov
and
sarb
shrb
and
jge
idiv
xchg
cmpsb
nop
sub
lcall
push
fsubl
pop
push
inc
push
push
dec
adc
jle
mov
push
jmp
mov
jmp
push
pop
push
pop
cmp
or
scas
ljmp
incl
hlt
sti
and
lcall
push
jns
incl
push
mov
jmp
xchg
jmp
mov
push
xchg
jle
mov
loop
adc
xchg
in
jmp
xchg
jmp
mov
lret
jg
out
mov
or
push
adc
fdivp
inc
mov
add
ja
daa
cmc
test
nop
xlat
push
adc
out
cmovno
lret
push
inc
mov
nop
cmc
adc
push
or
push
pop
lcall
call
sub
call
insl
pop
fwait
fwait
imul
stos
xchg
lret
rcrb
shlb
fwait
call
ret
adc
sbb
xchg
push
outsb
cmp
test
std
out
insb
mov
or
push
movsb
push
or
and
ficomps
inc
or
push
aad
add
incl
or
mov
clc
inc
fsqrt
adc
outsl
bound
addr16
mov
cmp
jg
push
cmc
fildl
pop
xor
inc
imul
imul
and
and
sub
outsb
sbb
cmp
jo
push
rol
cmpsl
gs
insl
or
ja
dec
add
pop
push
mov
add
fstpt
pop
mov
add
adcb
pop
lea
mov
adc
sub
add
lret
sub
insb
popa
loop
sbb
push
ficomps
sbb
ljmp
popa
or
test
sahf
scas
fsubrl
sub
addb
punpckhdq
test
loope
pop
add
test
pop
fwait
cmpsl
int
addl
inc
mov
into
push
add
sub
cs
loope
push
push
outsb
ret
lods
sbb
xlat
shlb
addl
mov
mov
je
dec
add
add
ret
adc
jbe
mov
fildl
pop
or
push
push
adc
bound
pop
add
or
sub
lea
jae
sbb
add
rcrb
mov
or
mov
add
add
mov
aad
popa
orb
add
xor
add
push
mov
mov
or
daa
add
sbb
add
add
push
in
add
jne
fbld
push
jne
and
cmp
xlat
loopne
out
sbb
insl
aad
pop
mov
pop
or
jecxz
out
cmp
fistps
lds
test
add
mov
or
mov
jns
insl
or
push
lea
mov
mov
and
sbb
sbb
add
sub
inc
jecxz
dec
lret
push
push
xorb
sub
sbb
les
adc
add
fiaddl
lock
fldt
les
sbb
add
cmp
push
hlt
jno
lret
out
das
jo
xor
inc
cmp
aam
pop
scas
sbb
mov
inc
jo
mov
nop
arpl
xor
xchg
mov
lahf
aad
pusha
stos
mov
ret
popa
cmp
xor
adc
push
adc
jbe
dec
outsl
push
xlat
push
mov
sub
xor
mov
and
sub
xor
test
dec
in
and
inc
je
and
mov
lahf
sbb
scas
stos
adc
mov
xchg
xor
sbb
xchg
cwtl
push
pop
push
lea
iret
or
rcrl
mov
fwait
dec
dec
and
fildl
jb
cmp
xorl
mov
sub
and
popa
pop
push
sub
shrb
sbb
push
cmp
or
mov
jo
orb
jae
xor
sub
xchg
imul
outsb
test
sbb
insl
pop
sbb
pop
sbb
test
testl
sub
add
inc
sarl
lea
add
push
int
lds
dec
gs
jns
and
loopne
and
and
jno
ds
and
leave
jno
or
xchg
inc
test
add
sub
jle
lock
push
jmp
lret
sbb
inc
mov
ss
inc
std
and
lahf
push
pop
mov
filds
push
push
fistl
jge
push
insl
sti
dec
cmp
and
sub
sbb
sbb
inc
arpl
jne
push
mov
inc
insb
cs
mov
cmpsl
js
bnd
cmp
dec
roll
jl
cmpsl
mov
cmp
inc
imul
mov
mov
std
mov
rcr
mov
ja
inc
adc
insb
sahf
daa
push
pop
jo
in
shlb
outsl
pusha
inc
jb
jp
cmp
add
pop
adc
jne
inc
xor
repz
in
inc
ret
popa
mov
mov
push
outsl
js
hlt
or
and
popf
insl
adc
push
push
les
push
cwtl
subl
xorl
ja
mov
push
not
and
mov
outsb
outsb
inc
push
nop
xorb
adc
pop
je
insl
dec
outsb
dec
xor
add
and
sbb
pop
xor
cmova
int3
pop
imul
lcall
dec
add
sbb
mov
shll
add
or
lcall
push
adc
or
mov
lcall
pop
cmp
outsb
cmp
pop
inc
scas
jo
mov
or
in
jp
ss
and
lods
imul
and
fisttpl
popa
daa
xchg
jb
inc
jo
mov
dec
dec
sbb
mov
sahf
imul
outsl
add
loopne
jge
push
pop
sub
pop
jmp
enter
std
push
inc
jg
insb
test
jo
mov
pusha
or
repz
pop
xchg
jecxz
xchg
les
push
int3
arpl
sbb
add
dec
xor
adc
xor
cli
or
addl
jne
and
int3
push
inc
test
out
and
test
js
shll
dec
mov
adc
je
fs
or
dec
sti
imul
lods
or
jle
imul
push
pop
mov
pop
pop
jle
test
inc
inc
js
in
pop
add
js
lret
inc
xor
sub
add
scas
mov
lret
jae
fsubr
gs
dec
rcrl
xor
pushf
stos
mov
cs
fimull
and
rcll
icebp
ret
adc
cmp
addr16
insb
add
inc
pop
lds
into
mov
test
pusha
addr16
popa
adc
push
insb
in
loop
sub
push
mov
sbb
xchg
inc
dec
nop
mov
pop
adc
dec
test
adc
push
shll
ret
push
rorl
adc
das
xchg
dec
lea
pop
push
cmp
imul
outsb
sbb
jb
adcl
inc
sbb
addb
mov
js
insl
mov
adc
sbb
hlt
cwtl
or
push
movl
push
mov
push
add
outsb
pop
cmp
shll
jg
movsb
aas
scas
inc
sub
mov
movsb
jno
jmp
jbe
test
inc
sbb
pop
jnp
cmp
mov
rcll
cmpb
push
inc
push
mov
test
and
adc
xor
fidivs
mov
push
arpl
jbe
test
pop
lret
lcall
out
inc
pop
inc
jmp
mov
dec
dec
ja
imul
or
add
dec
js
movsl
dec
fistps
sub
or
inc
loopne
shrb
movb
cmp
sbb
add
push
cld
add
add
xchg
clc
jnp
add
daa
lock
test
jecxz
push
and
or
in
addr16
inc
sub
jle
push
pusha
push
add
jno
push
xchg
lret
mov
mov
push
lock
xor
adc
add
xchg
int3
fiaddl
adc
push
test
add
xchg
sub
add
push
mov
fidivrs
sub
adc
push
pop
sahf
push
mov
loope
inc
push
sahf
jns
mov
xchg
pop
gs
or
pop
sub
inc
jbe
fdivl
cmpsb
and
add
add
inc
incl
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
inc
add
add
