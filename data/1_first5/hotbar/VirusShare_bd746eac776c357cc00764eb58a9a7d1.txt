fcomp
decl
andb
lea
push
mov
or
sbb
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
iret
or
inc
sub
lahf
out
aas
push
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
mov
in
fstpl
mov
in
adc
push
mov
les
cmpl
or
push
faddl
adc
loopne
push
adc
mov
mov
pushf
push
push
aaa
stc
orl
ficoms
jno
and
push
add
push
inc
mov
icebp
sbb
add
push
lock
dec
add
mov
sbb
sub
add
push
mov
in
add
or
icebp
rcrb
xor
xor
fcomip
fbstp
add
inc
hlt
push
push
adc
push
push
xchg
sub
sbb
push
mov
push
adc
inc
ja
push
leave
or
leave
fldl
leave
add
add
add
adc
or
and
inc
pop
repnz
shlb
fs
or
aaa
or
fldt
int3
mov
add
mov
and
in
adc
outsl
cs
imul
cs
push
push
insl
push
jo
dec
add
ss
aad
or
push
push
call
cmpsb
xor
xchg
out
mov
sub
xchg
adc
mov
mov
lahf
mov
adc
cmp
cmp
pop
dec
sub
push
push
adc
push
and
es
ror
inc
add
cmp
inc
add
or
flds
add
in
push
mov
xor
jb
xor
xor
jl
and
inc
les
daa
inc
and
lea
or
mov
dec
sub
adc
xchg
dec
xor
les
push
add
add
pop
mov
test
add
pop
sub
lcall
in
mov
xchg
dec
push
incl
cmp
pop
jge
mov
outsl
cmpl
in
ret
xor
mov
cmp
and
dec
dec
push
inc
aaa
enter
insb
sbb
add
pop
cmp
jl
xor
mov
inc
sbb
clc
loop
sbb
ret
mov
cli
aaa
fwait
rcrb
or
and
mov
push
push
or
sub
mov
sbb
jne
sub
jg
or
or
int3
cmp
cmp
sub
inc
lock
mov
sbb
fsubr
adc
fists
push
cmp
dec
or
adc
push
jne
mov
mov
sbb
dec
push
adc
sbbl
jnp
inc
add
inc
add
subl
dec
fdivrs
cmp
out
out
mov
or
add
and
jecxz
add
sbb
iret
hlt
push
and
and
out
sub
sub
add
nop
sbb
pusha
push
mov
and
mov
push
inc
loopne
xacquire
dec
aaa
mov
sbb
or
inc
mov
mov
mov
add
aam
fdivr
mov
addb
incl
add
sub
negl
leave
repz
and
cmp
dec
push
pop
aas
in
xor
push
pop
xchg
imul
inc
bnd
or
sbb
inc
jb
or
inc
and
pop
push
movsb
inc
pop
fiadds
stos
cltd
nop
aas
jl
ret
xor
lea
lds
arpl
cmp
ds
push
clc
scas
scas
shlb
mov
pop
push
lcall
pushf
mov
fdivp
push
sbb
loopne
jmp
int3
mov
sbb
add
mov
xchg
cltd
mov
pop
popf
test
sub
adc
sbb
pop
dec
push
mov
and
and
jecxz
insl
test
stc
jae
jne
test
je
adc
add
cmp
push
mov
add
push
push
xchg
cmp
in
test
jno
and
xchg
fldt
sbb
scas
je
push
pusha
sub
sete
add
rolb
xchg
sub
in
jb
lea
mov
shlb
cmp
dec
ficoms
add
pop
mov
jmp
pop
jge
scas
insb
xor
push
repnz
xchg
cmpsl
ljmp
xchg
dec
ds
scas
pusha
mov
jno
pop
cwtl
mov
mov
leave
add
fs
xchg
lret
sbb
adcb
leave
adc
jnp
cmpl
cmp
clc
and
xor
push
push
inc
and
push
mov
fwait
pop
punpckhbw
adc
push
push
aam
clc
push
and
pop
push
push
nop
dec
inc
in
and
xor
push
cmp
movaps
add
or
add
leave
lea
bound
addb
dec
fcomps
mov
leave
data16
adc
sbb
or
adc
or
jb
jmp
push
add
sbb
mov
sbb
das
inc
in
subl
leave
or
mov
inc
fisubs
nop
jge
fsub
mov
mov
and
jmp
push
pop
and
icebp
sbb
jge
inc
ja
int
orb
bound
and
mov
subl
int3
push
push
mov
call
leave
mov
sti
arpl
test
lods
mov
cwtl
push
cmp
push
mov
nop
xor
mov
jecxz
mov
add
mov
js
out
xor
pusha
mov
cmc
cmpsl
mov
shrb
movsb
inc
mov
cmp
mov
pop
cld
fsubs
push
cmp
repnz
jb
outsl
add
or
or
sti
push
in
or
cli
lea
data16
test
mov
nop
mov
add
hlt
add
test
jae
sti
loopne
or
push
dec
adc
mov
pop
add
adc
adc
int3
notb
adc
sarb
cld
rolb
dec
pop
push
pop
movsl
arpl
add
adc
push
out
int
mov
add
enter
cli
mov
adc
adc
adc
into
push
fs
adc
das
xchg
sarl
das
je
outsb
sub
icebp
jae
mov
cmp
and
insb
mov
inc
mov
add
mov
dec
lods
add
adc
jmp
fnsave
jge
mov
mov
dec
popa
push
mov
stc
and
aad
bound
pop
pop
dec
mov
js
cmpxchg
jae
jne
es
adc
stos
add
mov
std
ret
movsl
movaps
in
jg
adc
inc
cmc
lea
mov
jl
je
flds
int3
xorb
in
add
jmp
adc
aad
mov
xor
iret
cmp
jb
fildll
les
mov
push
push
inc
and
insb
xor
cmp
inc
cmp
add
dec
inc
add
mov
cmc
pop
adc
aas
adc
outsb
hlt
jne
mov
pusha
lock
pop
cmp
jo
inc
test
push
adc
js
push
add
push
ljmp
xlat
cmp
je
sub
cmp
je
xchg
add
mov
and
adc
sub
pushf
xor
lock
sub
push
fwait
cmp
test
mov
push
push
dec
shll
push
and
pop
jg
lock
push
sti
int3
add
sbb
jg
dec
shrb
push
stos
xor
xor
std
incl
jg
shrl
adc
call
inc
cmp
jl
outsl
add
ret
outsb
lea
or
jp
push
js
jne
fisttpl
cmc
jbe
pusha
insb
push
push
pushf
push
xor
mov
push
fsubs
mov
pop
sahf
xchg
push
rolb
xchg
filds
and
cmpsb
pushl
movzwl
int3
push
shl
lods
mov
sub
loopne
push
int
jl
sbb
jmp
sbb
cmp
test
jne
sub
mov
push
mov
hlt
sbb
andl
mov
mov
adc
jo
mov
in
nop
mov
jne
lods
push
mov
xchg
ret
mov
sahf
add
pop
inc
lods
and
stc
loop
enter
cwtl
or
add
testb
sbbl
ret
fldl
mov
sub
das
or
lock
imul
pop
call
sbb
push
insb
popa
sbb
addb
add
push
rol
mov
fadd
or
inc
lahf
push
decb
ljmp
jmp
push
jge
mov
jbe
in
mov
shr
inc
pop
cmp
jle
jb
cmp
out
movsb
xor
inc
cld
mov
lea
sub
or
jge
mov
adc
cmp
fbld
ja
add
jmp
mov
ret
push
push
mov
pusha
jl
pop
inc
add
js
mov
mov
movb
ret
xchg
lret
pop
mov
das
ret
aas
mov
cmp
js
fdivrl
push
sub
add
hlt
cmp
stos
push
fistps
shlb
or
leave
xorl
push
mov
aad
mov
mov
rorl
jge
add
push
push
setb
ret
fisubl
or
or
not
lods
jne
add
pusha
fldcw
fdivrs
stos
ficoms
cld
jb
hlt
mov
sub
or
ss
push
push
push
cmp
ja
push
push
loope
fisubrs
sbb
pop
in
jmp
add
push
fdivs
ret
sbb
add
jl
push
cmp
cmpsb
imul
pop
mov
xor
js
lahf
ss
std
sbb
cmp
shlb
jmp
adc
addr16
adc
pop
int3
ffree
mov
or
popa
or
fcmovu
outsl
aam
push
lea
push
adc
jb
roll
or
out
movb
mov
mov
dec
jl
out
arpl
jo
ss
push
jbe
add
cmp
cwtl
push
mov
adc
nopl
rcr
test
outsl
and
mov
ret
pop
insb
imul
add
mov
mov
inc
or
sahf
xor
cmp
je
cmpl
lea
jl
aas
rcr
das
mov
push
jne
push
call
mov
repz
dec
test
push
testl
aad
sub
pushf
pop
sub
mov
pop
push
inc
jl
or
inc
clc
outsb
shlb
push
mov
dec
dec
je
ret
loope
pop
fdivs
mov
or
shlb
pop
add
fistl
sbbl
test
into
push
cmp
loopne
pop
mov
push
push
outsl
add
add
mov
fcmovnb
lret
and
mov
jb
or
and
xor
sahf
cmpsl
adc
aaa
jp
sub
mov
jle
pop
mov
loopne
adc
pop
push
adc
mov
call
lea
clc
ret
outsb
ja
dec
adc
outsl
adc
mov
lea
xchg
xlat
inc
mov
adc
inc
subl
mov
push
mov
push
shll
idiv
add
push
sub
int3
out
test
pop
or
add
rolb
or
out
por
add
pop
jge
dec
and
push
addb
hlt
and
push
adc
push
stos
incb
jo
and
add
sub
pop
shll
jnp
cli
addr16
lock
jge
fdivrs
cmp
mov
pop
sub
pop
adc
cmp
and
jg
ds
add
andl
add
lea
push
shll
inc
adc
or
or
mov
pop
pop
daa
inc
popa
lahf
mov
jmp
dec
or
je
pop
pop
push
xor
or
jmp
jg
cmpb
mov
loope
cmp
jb
mov
add
sti
les
pop
pop
adc
mov
inc
das
mov
rcr
push
in
insb
in
pop
sbb
stos
push
pop
mov
test
lret
mov
addps
je
lret
in
mov
insb
cmc
adc
xor
xchg
push
mov
pop
out
mov
les
jo
sbb
adc
movl
dec
cmp
inc
adc
or
sub
adc
loopne
push
sub
int3
push
and
inc
sbb
or
out
call
test
inc
inc
enter
ds
pusha
mov
je
push
int3
in
adc
add
jae
inc
pop
popf
ret
jge
adc
mov
pop
lea
sbb
sbb
pop
and
sbb
push
das
aaa
popf
lea
ret
jne
xor
jb
lea
add
adc
ror
push
data16
mov
add
push
call
clc
mov
mov
dec
inc
test
mov
call
aas
add
xchg
pop
or
or
popa
mov
icebp
mov
ja
imul
mov
outsl
adc
enter
ret
enter
popa
lahf
adc
in
or
xchg
dec
insl
and
pop
and
loope
aad
sbb
aas
sbb
mov
mov
push
lock
into
dec
pop
sub
sbb
pop
pop
loope
mov
aad
orb
and
fisttps
cmp
pop
jbe
xchg
or
lock
and
fimuls
je
or
scas
or
jne
ss
push
movsb
rcl
and
into
push
ret
lods
rorb
fmuls
outsl
jb
stos
push
adc
sub
mov
fists
add
test
cmpl
and
jle
pushl
dec
or
jmp
ret
pop
add
sbb
ret
and
sarb
rcr
jle
je
sbb
repz
jecxz
in
icebp
mov
inc
pop
and
xor
or
ja
je
jbe
ja
inc
adcl
jmp
mov
push
les
sar
xchg
jne
cmpsl
fst
ss
aas
cmp
mov
loope
in
insl
movb
mov
mov
inc
inc
or
repz
push
inc
dec
adc
or
push
add
mov
push
icebp
repnz
push
js
jmp
dec
cmp
mov
rorb
imul
xchg
nop
pop
push
mov
lds
movsb
aaa
cmp
inc
mov
fstps
leave
and
mov
jo
inc
int3
fsubrs
testl
sahf
out
test
sahf
in
in
xorb
adc
ret
popa
bswap
push
mov
mov
dec
mov
movsb
shlb
sub
dec
sbb
jne
jmp
inc
push
mov
lahf
jmp
out
movl
sahf
or
mov
in
divb
test
push
mov
sub
jl
lret
fldcw
je
lods
orl
push
adc
movsl
aaa
clc
imul
cmp
out
out
pop
cmp
xchg
repz
repz
adc
or
repz
inc
sbb
add
mov
or
and
mov
adc
mov
push
pusha
rcrl
in
popf
push
adc
jae
out
jno
mov
or
clc
cmpl
xrelease
loop
jns
mov
add
mov
lahf
popf
pop
enter
push
aam
mov
incl
inc
xor
pop
push
lea
push
push
call
shll
lea
psrlw
ret
icebp
xor
cmp
aam
les
and
nop
mov
cmp
aas
enter
and
movl
sbb
sbbb
sub
cmpsl
stos
jge
mov
add
cli
cmpb
jae
sbb
mov
sti
dec
jne
add
sbbb
jle
lock
push
stos
sti
cmpsl
insl
push
jle
ficompl
add
pushf
insb
rorl
lock
test
push
pusha
mov
stos
and
icebp
das
sbb
mov
fisttps
sbb
inc
mov
and
addb
jle
cmp
xchg
dec
or
jne
push
sub
push
subb
push
xchg
dec
in
scas
xchg
sbb
movsb
shl
sbb
sub
in
jno
xchg
out
sbb
xchg
movsb
lods
adc
divl
mov
js
mov
and
lcall
push
enter
sub
or
mov
ss
pop
add
setne
push
add
jp
fmull
ljmp
or
xchg
cs
pop
dec
in
popf
push
cld
mov
push
push
cmp
cmp
je
gs
push
push
test
mov
xchg
pushf
push
mov
lahf
gs
jle
sahf
pop
and
push
mov
movsl
cmp
pop
shr
ret
cmpl
xor
psubd
push
pop
and
test
xchg
in
sub
mov
sub
rcll
lret
test
xorl
push
lea
fisttpll
sub
lcall
push
mov
mov
insb
push
dec
dec
mov
push
push
xor
push
push
lea
add
mov
out
je
sub
and
sbb
rcrl
rcrl
mov
mov
lcall
push
mov
add
mov
inc
add
mov
cmp
cs
mov
pop
xor
or
and
and
inc
jp
insl
or
jbe
sbb
sub
repz
sbb
push
adc
xor
cmp
inc
or
jle
cmp
sub
jae
jae
push
push
arpl
mov
inc
test
pusha
roll
fistps
jmp
icebp
rorl
push
add
iret
pop
mov
sbb
push
mov
movsl
push
jg
dec
addb
adc
adc
push
xor
push
push
sub
mov
mov
jmp
sub
push
add
js
cmp
addb
mov
and
or
or
addl
cmpb
lret
out
adc
pushf
test
mov
sbb
dec
adc
push
cwtl
pusha
lock
pop
sarl
inc
push
bound
add
mov
push
data16
icebp
mov
cwtl
add
jmp
lret
xor
xor
pop
push
push
push
and
jbe
push
inc
mov
mov
lret
push
mov
insb
xorb
sbb
and
xchg
push
sbb
imull
adc
xlat
push
pop
or
pop
mov
pusha
rcr
clc
add
je
add
divb
cmpl
jbe
call
lret
call
lea
jmp
pop
or
stos
push
pushf
mov
jo
pop
stos
adc
rcrb
xlat
or
les
mov
sahf
fldz
fdivp
jb
add
cmp
fsubrl
mov
dec
and
flds
pop
inc
push
ret
lds
mov
aas
mov
insb
add
adc
adcl
jne
pop
mov
sbb
sub
mov
jne
push
mov
jl
lods
mov
leave
js
rorl
pop
outsl
jo
adc
or
aad
jb
pop
pusha
xchg
fstpl
sbb
clc
out
xorb
push
mov
pop
dec
cmp
loope
sub
mov
enter
adc
add
les
pop
jns
lods
and
xchg
adc
in
mov
xorb
nop
add
incl
mov
or
jnp
sbb
dec
xor
sbb
push
push
sub
addb
fmul
js
inc
inc
lahf
push
rorb
fcoml
pop
push
pusha
mov
sarb
or
add
and
loopne
mov
jle
cmp
pop
sub
push
push
lea
aam
fdiv
sbb
or
dec
loope
sub
fs
inc
sub
push
lret
push
jl
push
cmp
or
out
or
cmp
xorl
adc
or
push
test
imul
addb
dec
sbb
xchg
xor
test
xor
mov
lds
or
and
push
push
push
and
daa
jo
sbb
add
je
add
push
int
ja
mov
rorb
adc
in
aaa
faddl
sub
int
in
imul
cwtl
inc
fldl
fmull
add
pushf
test
push
inc
jl
and
mov
push
jb
push
lahf
push
mov
fisubrs
pop
repnz
or
mov
fisttpll
or
add
dec
mov
push
dec
ret
or
repnz
push
xlat
icebp
lock
aaa
adc
sbb
mov
je
int3
push
loop
and
mov
imul
xor
push
pop
dec
push
add
push
mov
gs
or
daa
repnz
movsb
pop
jl
mov
inc
lock
sbb
leave
or
push
jo
adc
push
insl
push
rsqrtps
pop
add
pop
mov
and
and
adc
mov
push
nop
add
push
inc
adc
popa
ret
xchg
test
insl
pusha
push
push
ficompl
movsb
mov
push
cwtl
add
aam
icebp
and
push
mov
sbb
add
hlt
cmp
call
rorl
enter
lods
lock
push
loopne
xor
das
cs
sub
push
pop
inc
test
fs
nop
in
int
dec
push
mov
pop
jnp
push
push
and
mov
dec
push
xor
push
outsb
loope
ret
xor
xchg
or
push
pop
insb
push
pushf
jp
pop
inc
shrb
dec
sbb
push
ljmp
push
push
loope
je
ret
jo
dec
outsb
xor
add
cld
inc
sbb
cmp
data16
sbb
ja
adc
inc
inc
push
sbb
mov
adc
push
clc
ret
lea
dec
enter
dec
mov
or
lock
fldcw
enter
add
popf
enter
mov
cs
sub
xchg
mov
ret
test
or
cmp
add
mov
jmp
cltd
and
pop
lock
sar
lock
cmp
pop
pop
adc
jl
push
lods
xor
add
jecxz
sti
jnp
call
push
or
rorl
adc
out
add
std
inc
cli
push
mov
shr
add
mov
imul
push
lret
out
pop
test
jle
mov
out
das
and
enter
call
fdivrs
add
mov
lret
imul
lea
outsb
loopne
adc
cmp
je
cmpl
pop
ret
or
xor
jne
rcrl
jmp
in
dec
inc
sbb
xor
fisubrl
jne
mov
hlt
push
arpl
lea
or
js
pop
mov
and
cmp
dec
inc
push
push
push
clc
div
idivb
lock
inc
lock
and
xchg
mov
jae
test
sbb
sub
inc
or
push
mov
fstpl
push
int3
je
test
fisubrl
sahf
hlt
sbb
or
je
int3
jl
fstpl
push
lcall
add
aaa
roll
lods
andb
int3
inc
cmp
mov
sbb
sahf
imul
scas
push
add
jl
insl
arpl
outsl
jo
loope
adc
jle
cmp
insl
xchg
cmp
mov
adc
sbb
xchg
sbb
and
test
inc
or
ljmp
out
pop
lea
cmp
or
out
or
jp
jge
jmp
mov
pop
sub
sbb
jge
faddl
or
or
rorb
filds
or
xor
sbb
mov
pop
mov
mov
xchg
add
jns
inc
ret
mov
outsb
cmp
add
shll
rorb
je
nop
or
adc
je
pop
pushf
or
lods
add
sbb
pop
mov
enter
cwtl
sub
movb
pop
jecxz
leave
jge
cwtl
push
or
bound
sub
push
aad
sbb
push
outsl
das
pop
and
cmp
xchg
or
call
je
sbb
es
inc
rcll
mov
jl
jo
pop
jbe
xchg
xchg
and
jns
and
cmp
sbbb
insb
rolb
push
dec
lea
xchg
xchg
adc
cmp
sub
and
rorb
out
test
dec
inc
jg
sbb
clc
sbb
add
xor
xchg
or
add
xchg
mov
scas
add
lea
or
inc
xor
mov
pop
les
adc
loopne
insb
pop
cmpl
or
into
aam
sbb
pop
ss
or
and
inc
mov
into
mov
push
sbb
sbb
iret
pop
clc
adc
nop
sbb
or
test
cmp
mov
or
add
push
outsb
ret
pop
sbb
cmc
push
pop
test
je
rcll
test
jmp
pop
notb
inc
mov
fisttps
pop
lea
push
push
mov
mov
fs
ffreep
outsl
jne
xchg
fstpl
inc
mov
cmp
lods
dec
test
push
sahf
adc
ds
test
notb
inc
fdivs
das
adc
jg
mov
cmp
sbb
mov
adc
pop
mov
pop
mov
in
clc
pop
out
and
sub
lea
pop
test
push
mov
sbb
sbb
add
call
adc
dec
mov
lret
add
inc
jle
push
mov
lahf
pop
and
or
test
lahf
or
int
pop
orl
mov
push
cmp
test
dec
and
clc
and
pop
dec
cld
sub
clc
setb
scas
push
mov
sub
cmp
setae
or
aad
pushf
sub
add
icebp
ja
push
add
mov
int
and
mov
push
or
cmp
movsl
fnsave
in
fcoms
dec
sub
cmp
lods
cmpsb
stc
aas
mov
push
mov
and
adcl
movsl
and
call
pop
pop
fistpl
icebp
loope
je
rorl
cld
jecxz
outsl
rclb
mov
push
push
mov
inc
push
push
cmp
push
inc
shrl
je
aam
sbb
pop
jp
add
incl
movsl
adc
push
imul
push
cmp
dec
push
leave
test
inc
pushf
daa
scas
sbbb
mov
xchg
push
aam
dec
mov
dec
adc
add
in
mov
dec
push
ja
movzbl
or
cmpsw
rcrb
mov
out
and
dec
fwait
idivb
aaa
push
inc
dec
add
add
adc
fsubrs
add
pop
stos
or
push
jo
psrlw
lea
lahf
inc
dec
adc
push
dec
enter
and
and
aas
or
icebp
repnz
adcl
movsl
dec
out
mov
add
es
xchg
jmp
add
inc
pusha
jmp
lods
int
dec
das
push
add
add
lea
aaa
bound
mov
fwait
out
imul
xor
add
and
movsb
mov
lret
rorb
xchg
rorb
andb
shlb
jle
inc
les
jl
or
mov
mov
push
push
pop
mov
dec
push
pop
or
enter
ret
cmp
movsl
ss
add
push
fmuls
lahf
add
adc
je
dec
sub
or
mov
mov
sbb
fsubrl
test
jmp
ja
sahf
jns
jo
inc
insb
sbb
or
dec
push
adc
setle
nop
cmp
dec
push
pop
and
push
cmpsl
hlt
mov
shll
mov
push
dec
add
push
popf
rolb
repz
dec
push
pop
xchg
mov
push
mov
shrl
sub
adc
in
stc
je
xor
sub
or
xchg
shll
ret
in
sub
ret
mov
icebp
push
push
push
movsb
pop
sub
and
dec
adc
cli
call
mov
out
mov
sahf
jl
sbb
push
stos
mov
setg
flds
sbbb
pop
das
inc
sub
dec
jge
mov
dec
cmp
sbb
xchg
dec
mov
mov
fwait
xchg
ds
fstpt
cs
jo
mov
and
int3
push
xchg
push
xor
loope
sub
sbb
and
test
sbb
cmp
jb
sub
xor
and
or
add
push
push
push
rolb
xchg
iret
push
add
dec
pop
iret
cwtl
pop
mov
xchg
lds
mov
mov
ljmp
push
mov
in
mov
push
aad
outsl
rorb
add
add
add
mov
xor
pop
in
xchg
or
mov
repnz
adc
movsb
push
or
nop
outsl
or
xlat
pop
or
aam
out
xlat
inc
jb
push
or
jle
push
ja
movsl
fwait
or
cmp
or
add
add
popa
cmpl
mov
push
fdivrl
test
pushf
lods
mov
cltd
cmp
sub
enter
or
and
aas
push
out
cltd
or
ret
push
mov
je
lcall
rol
leave
lds
iret
inc
dec
add
std
fisubl
fdivl
jl
rorb
outsl
mov
es
pop
movl
pmulhuw
xchg
test
add
testl
push
or
sbb
pmaxub
dec
add
push
pusha
sub
xchg
pop
adc
insl
test
sub
cli
notl
out
leave
or
fsubs
jns
mov
and
sub
sub
push
dec
cmp
les
cmpsb
mov
cli
or
frstor
sub
andb
mov
add
aad
lahf
aaa
dec
adc
cmpl
imul
xchg
bswap
jae
cmp
push
ficoms
sbb
push
jo
sbb
push
cmp
int3
xor
push
adc
mov
cmc
loop
cmp
sbb
jo
popf
sbb
bound
mov
sub
stos
sub
or
push
mov
fmul
pop
adc
sub
out
pushf
mov
xor
sbb
sbb
dec
push
push
sbb
push
lods
lcall
cmp
stos
inc
loopne
xor
sub
lcall
sub
scas
push
push
add
push
clc
dec
adc
inc
sub
lahf
add
pop
leave
in
jl
or
and
push
mov
adc
push
sarb
cmc
xlat
rdmsr
movl
push
in
mov
push
push
imul
in
push
stos
repnz
stos
popa
push
and
mov
dec
or
in
clc
xor
mov
es
push
pop
mov
adc
loopne
pop
ja
or
add
in
xchg
or
sbb
xchg
xchg
iret
pop
out
cmp
or
xor
mov
enter
push
dec
ja
test
mov
roll
push
and
in
sbb
sbb
inc
jl
mov
sub
aad
ret
cwtl
pop
push
adc
icebp
movsl
je
sbb
shlb
inc
jne
in
out
mov
mov
adc
xchg
movsl
in
mov
int
sub
add
lods
cli
xor
adc
sbb
cmp
jnp
sbb
pop
pop
pop
cmp
push
push
sbb
aad
pop
aas
pushf
icebp
push
push
add
lds
insb
fdivrp
xor
nop
cmpsl
pop
cmp
testb
cld
fsubr
icebp
push
cs
sbb
pop
mov
mov
je
or
add
pop
dec
mov
or
or
in
mov
mov
push
add
xor
adc
loope
sub
xor
add
inc
out
and
sub
ljmp
mov
or
and
mov
xchg
sub
jl
call
xor
das
jle
adc
sub
pop
add
es
or
push
pop
add
xchg
popa
pop
or
in
and
mov
fnstsw
aam
fwait
lods
push
push
cltd
push
adc
add
sub
sti
fucom
add
stos
repnz
out
mov
inc
and
or
adc
lds
push
push
clc
sbb
xor
sub
rorb
inc
or
rcrb
int3
jb
mov
push
or
push
or
add
sti
add
mov
cmp
pusha
mov
addl
js
mov
das
jge
sbb
rcl
nop
sbbl
jp
enter
mov
push
mov
adc
ficoms
mov
add
mov
pop
pop
push
push
lahf
sub
mov
and
pusha
nop
and
push
add
cld
sbbl
push
add
bound
repnz
and
push
int3
dec
jle
adc
das
push
fs
and
stc
jl
dec
xor
add
mov
iret
xchg
sbb
add
orl
and
cs
or
hlt
sti
push
push
cld
rclb
jb
jb
sub
xor
mov
arpl
jmp
jmp
jne
adc
pop
add
cmp
and
adc
adc
je
in
hlt
push
test
in
test
sbb
add
rorb
add
cmp
inc
xor
hlt
xor
push
mov
xor
adc
push
pop
shlb
dec
mov
cmp
sub
or
add
adcl
leave
fadds
mov
jbe
jg
pushf
jmp
push
sbb
insl
pop
mov
pop
lds
je
or
mov
movl
jb
push
and
cltd
dec
scas
lret
cmp
nop
xchg
mov
orl
imul
test
xor
lcall
lods
dec
cmp
mov
icebp
sbb
inc
rolb
pop
add
std
lods
and
mov
popa
jo
sarl
sub
sub
or
fdivrs
mov
or
inc
cwtl
pusha
filds
inc
movb
add
jge
mov
mov
dec
ds
rclb
pop
push
sete
and
outsb
loopne
mov
lds
mov
adc
and
fildl
outsl
mov
and
jg
push
mov
or
add
or
call
pushf
out
in
push
push
mov
push
jne
push
xchg
push
lods
outsl
add
pop
stos
enter
mov
mov
adc
mov
test
mov
push
mov
es
or
or
test
add
adc
sbb
outsb
or
imul
xor
xor
mov
jg
add
add
sbb
aas
aaa
push
inc
sbb
mov
cmp
push
inc
sub
adc
aam
and
xchg
xchg
cld
rcrb
inc
mov
ret
clc
and
xor
xchg
stos
pop
lahf
bound
inc
dec
pop
lds
or
dec
inc
xor
mov
fsubl
jmp
ds
add
push
and
adc
push
add
lea
loopne
add
les
std
psrad
ficomps
sub
mov
add
push
jo
into
into
inc
test
sar
repnz
pop
push
sub
xchg
mov
je
or
sahf
mov
and
clc
mov
imul
dec
adc
and
pusha
push
pop
pop
adc
mov
push
mov
test
je
popf
pop
scas
cwtl
cmc
and
or
imul
jo
push
sub
jle
je
loopne
clc
lea
push
sbb
or
adc
mov
int3
jo
es
pop
fimull
dec
push
fnstsw
push
and
xchg
popa
inc
ds
push
and
cltd
or
adc
imul
adc
ficompl
les
addb
or
push
jmp
or
std
and
pop
test
lret
repz
jb
add
mov
dec
jae
pop
or
mov
es
std
sti
test
inc
push
push
and
pop
inc
or
push
jns
cmp
mov
dec
and
xchg
test
pop
mul
loopne
xchg
jae
xor
jo
in
es
dec
adc
sbb
dec
loopne
xchg
cs
xor
es
test
nop
cmpsb
cmp
and
nop
lret
and
filds
push
sub
pushf
xchg
stos
jbe
mov
imul
nop
inc
adc
inc
movsl
insb
jae
pop
inc
out
jo
adc
add
dec
inc
and
cmpsl
add
clc
or
nop
mov
lock
adc
adc
setg
test
jns
mov
jecxz
sub
and
mov
dec
mov
je
ss
xor
push
add
inc
popa
in
xor
leave
pop
dec
pushf
and
bts
jb
and
pop
xor
push
out
movsb
inc
add
inc
jb
cmp
adc
push
mov
aam
dec
shlb
sbb
add
popa
loopne
and
les
cltd
and
cmp
ret
mov
shrb
sbb
sub
mov
jle
lea
push
mov
mov
mov
sbb
mov
stos
sub
mov
mov
les
ret
xor
fcomps
cmp
and
repnz
leave
test
sbb
cwtl
jmp
pop
mov
mov
jmp
add
adc
mov
fidivs
ror
ds
nop
jg
adc
sub
push
mov
dec
xchg
lods
cmp
hlt
sub
sbb
ja
test
inc
push
imul
cmp
inc
and
mov
shrb
push
add
add
mov
add
and
sbb
movsb
enter
jne
mov
or
add
sbb
jae
push
xor
jb
mov
push
cmp
lret
cmp
mov
jno
pop
and
mov
push
push
push
pop
fs
stos
xor
push
pop
sbb
sbb
sub
cld
out
jnp
push
and
adc
push
movl
rorl
sbb
xor
add
shlb
pop
jb
cmpsl
pusha
xchg
repnz
jl
les
pusha
xor
and
movsb
pop
mov
push
push
les
outsb
ja
dec
cmpsl
adc
rol
js
push
and
xchg
dec
iret
and
pop
push
cmpsl
fwait
mov
imulb
or
push
add
push
and
push
lds
or
mov
pop
mov
dec
add
ja
je
cld
test
hlt
dec
clc
aas
sub
dec
call
jge
mov
push
nop
mov
pop
push
add
sub
test
rorb
fidivrs
jg
push
mov
es
cmpsl
add
sub
add
xchg
pop
jl
hlt
lahf
cmp
psubd
xorl
jne
xor
pop
sub
and
popf
dec
pop
pop
out
inc
xchg
mov
pop
int3
lcall
inc
jp
in
mov
xor
mov
rcrl
ret
mov
or
scas
imul
push
pop
dec
je
std
mov
lcall
or
inc
add
mov
out
cmp
lea
jl
icebp
lods
clc
add
push
cmp
jl
inc
cmc
enter
adc
push
into
repz
pop
pop
roll
sbb
mov
mov
jno
test
push
inc
or
mov
pop
mov
sbb
mov
sbb
shlb
repnz
add
cmp
dec
add
nop
cmp
leave
js
inc
outsb
and
adc
push
dec
mov
push
test
add
cmp
push
jmp
fisttpl
or
ret
pusha
cmp
or
xchg
ret
inc
push
cmpsb
dec
insb
add
iret
pusha
add
jo,pt
lock
jge
pop
daa
add
das
enter
addr16
sbb
scas
or
jo
or
sbb
or
mov
fucomip
cs
jmp
subl
sbb
inc
jbe
je
out
xor
cmp
jl
shll
movsl
test
add
jo,pt
cli
mov
xchg
and
mov
das
jecxz,pn
sbb
mov
mov
xor
incb
jle
adc
mov
mov
push
sbb
add
add
push
add
inc
scas
negb
ss
add
rclb
pusha
mov
mov
je
iret
fs
aad
jp
mov
sarl
jl
mov
add
push
imul
ret
pop
test
ja
dec
leave
inc
pop
push
stos
addb
loop
sub
dec
mov
jle
and
add
inc
add
int3
pop
cmpl
dec
cld
lea
sub
pop
mov
dec
jb
sbb
loopne
cmp
dec
push
dec
or
jo
cmc
or
sbb
or
pop
data16
mov
cld
mov
shrl
cmp
loopne
loop
cmp
enter
sbb
xchg
icebp
test
inc
push
rclb
or
adc
xorb
or
lock
lds
and
xor
or
test
leave
xorl
std
add
aad
jb
jno
cmp
push
xorl
and
fadd
or
push
test
inc
scas
stos
or
push
shrb
xchg
mov
dec
inc
leave
pusha
push
xorl
rorb
adc
mov
mov
dec
dec
xchg
xor
sub
or
xchg
xor
inc
xor
lea
pop
xorl
pop
test
push
push
mov
cmp
sbb
ljmp
inc
add
pop
pop
hlt
data16
je
incb
loopne
outsl
sbb
push
clc
mov
xor
pushf
jmp
iret
shlb
test
push
icebp
push
push
push
push
sbb
jmp
mov
cmp
add
sbb
add
arpl
xrelease
add
jnp
test
mov
adc
xor
mov
mov
pop
test
add
xchg
sub
or
xchg
cmp
test
inc
and
fwait
inc
inc
into
scas
and
and
and
daa
push
or
aaa
in
lock
add
mov
pop
leave
mov
nop
inc
and
or
fldt
scas
cmpsb
add
cmp
jg
cmpsb
push
loope
dec
pop
xchg
setnp
les
movups
or
pop
lds
andl
jo
push
dec
add
clc
mov
cmp
push
add
dec
and
inc
sarb
push
mov
aam
and
pop
jnp
icebp
push
mov
cmp
sahf
xor
leave
cmp
and
sbb
or
popa
outsb
cmp
pop
sbb
xchg
hlt
cltd
loopne
dec
pop
and
mov
or
pop
jg
push
push
stos
mov
cwtl
or
push
jmp
mov
xor
add
lea
jo
data16
cmp
and
imul
pop
shlb
inc
loope
or
xchg
movl
sub
jge
adc
adc
wbinvd
mov
andl
shlb
movsl
xor
shlb
mov
add
enter
je
add
dec
inc
and
js
pop
adcl
push
push
or
scas
xchg
sub
adc
cmc
mov
sbb
stos
aaa
jnp
push
sub
xor
pusha
adc
dec
bound
mov
test
orps
scas
int3
or
pop
nop
xchg
xchg
sub
cmp
push
call
adc
push
dec
fisubrs
leave
outsb
xor
dec
mov
loope
adc
push
push
mov
sbb
roll
mov
inc
test
add
mov
ret
pop
hlt
push
xchg
data16
inc
adc
mov
jbe
pop
and
sub
push
arpl
cmp
add
inc
and
or
or
scas
push
push
mov
and
sub
loopne
push
fstpl
mov
or
aas
rcrl
inc
into
cmp
aaa
je
test
mov
pop
and
mov
add
xchg
loop
add
mov
shlb
cmp
jmp
push
dec
xor
stos
mov
push
inc
cwtl
shrb
call
test
pop
je
push
xchg
xor
mov
mov
lods
rorl
and
jmp
adc
or
cmpsl
mov
add
iret
sbb
bnd
xor
add
cmp
add
ret
jge
xchg
cmc
push
ss
stc
in
ja
lock
add
icebp
popf
fwait
and
mov
repnz
sub
mov
out
and
call
cmp
mov
mov
pop
mov
mov
test
add
outsl
mov
push
cld
lea
ret
adc
mov
mov
jbe
adc
sub
cmpsl
or
adc
out
pop
mov
add
mov
sbb
pushl
mov
cmp
jne
mov
rol
cli
cmp
jl
scas
sub
test
adc
add
mov
pop
loop
push
daa
cmp
int
rorb
mov
sbb
and
or
push
push
add
jl
xorl
mov
push
shll
test
orl
xchg
cltd
dec
dec
adc
ljmp
mov
sub
decl
or
sub
adc
ja
add
jle
inc
jg
adcl
pusha
cmpb
mov
sahf
adc
lea
add
cmp
icebp
mov
sbb
adcl
in
int3
jo
sub
int
add
or
mov
add
repnz
mov
into
pop
hlt
pop
adc
pop
or
mov
dec
hlt
jge
cmpb
push
pop
cmp
flds
inc
push
push
das
lds
mov
cltd
aaa
pop
dec
mov
es
push
inc
or
je
fisubrl
inc
sbb
pop
push
es
or
or
or
adc
sahf
jl
mov
cmpsl
add
pop
push
jg
push
add
push
dec
add
sub
sbb
push
ret
pushf
fcmovnu
test
vorpd
xlat
lcall
insl
enter
adc
pop
pop
dec
jb
add
test
cwtl
push
ret
mov
jmp
and
pop
push
sbb
add
stos
ret
decb
ljmp
add
andb
outsb
or
pushf
push
adc
sbb
push
lret
test
or
dec
pop
jb
imul
sub
mov
sbbb
dec
jb
add
lods
rolb
inc
xchg
cmp
lds
ds
mov
push
mov
adc
cltd
adc
sbbb
ljmp
inc
jle
pop
idivb
add
inc
cmp
adc
xor
or
rcrb
or
ja
or
femms
push
pop
mov
add
test
repnz
add
je
jns
sbb
and
orb
dec
add
jecxz
push
mov
xchg
rorl
jge
clc
sbb
xchg
mov
jl
mov
loop
std
dec
insb
lea
cmp
jle
pusha
sub
cmp
jle
sub
sub
lcall
xlat
cmp
cwtl
pop
shll
sbb
sub
and
mov
cli
and
xor
rol
add
loopne
xchg
cmp
xchg
push
push
push
push
loope
rcrl
addr16
push
add
and
ficomps
xchg
mov
jno
push
add
rorl
repz
ljmp
mov
scas
and
or
hlt
gs
mov
rorb
decl
in
call
inc
or
push
jo
inc
or
adc
movl
push
and
cld
fmulp
mov
jo
jl
in
xor
rolb
shr
add
adc
mov
or
sarb
adc
imul
push
mov
sbb
inc
pop
jmp
or
or
xor
inc
cmp
insl
xor
cmp
out
and
xchg
fldenv
adc
add
or
pop
xchg
lcall
and
xchg
dec
sbb
js
dec
lods
xchg
xorb
in
pop
fsubs
out
xchg
jmp
adc
sub
push
push
push
js
mov
cmp
mov
push
rorl
xor
lock
xor
leave
leave
andb
jg
jle
jmp
and
jl
jns
icebp
out
xor
test
dec
mov
mov
push
icebp
mov
push
sub
popa
fnstenv
fcmovnu
add
shll
and
mov
jecxz
push
sub
or
jns
ficoms
pop
mov
shll
inc
cmp
cmp
jne
test
sbb
sub
fisubrs
or
jp
popl
sbb
jle
xchg
jne
mov
push
es
mov
int
sbb
adc
or
xchg
sbb
or
mov
and
push
add
add
xchg
dec
push
addr16
je
dec
or
nop
in
sbb
push
add
sub
enter
xor
adc
test
mov
jae
add
in
or
jb
and
mov
cltd
nop
and
lahf
push
xchg
xchg
push
jae
movsl
xor
stc
sub
sbbl
mov
push
jns
sub
cmp
stc
xor
xor
ds
repnz
jnp
sbb
test
adc
xchg
pop
adc
push
sub
cmp
js
leave
inc
orb
sbb
addl
movsl
lret
dec
mov
pop
jb
adc
mov
xchg
or
pop
rolb
sbb
test
sbb
imul
inc
mov
stos
daa
cs
or
xor
and
dec
test
adc
mov
push
mov
fwait
dec
sub
jmp
xor
pop
pop
xor
adc
add
xlat
jmp
dec
sar
mov
das
cmp
push
cs
in
ja
xlat
dec
loope
push
mov
push
push
add
pop
add
add
xchg
daa
pop
add
mov
push
sbb
sbb
adc
pop
push
adc
xor
imul
js
inc
push
push
cmp
popa
test
sti
mov
and
jne
aaa
jg
repnz
push
movsl
paddusb
decl
pop
sar
xlat
daa
movsb
or
sub
and
push
mov
pop
or
in
decl
lsl
dec
js
adcl
insl
push
add
movl
sbb
dec
mov
pop
push
push
add
inc
sahf
and
lcall
pop
push
lds
dec
add
stc
adc
or
add
jp
push
ret
test
mov
sbb
in
xchg
out
mov
mov
cmp
sbb
stos
adc
cmpb
pop
scas
push
aam
mov
push
cmpb
into
and
mov
push
pusha
cmp
cmp
js
add
jmp
fsubrs
lock
sub
cwtl
inc
pop
dec
jnp
ret
mov
jmp
mov
adc
pop
xor
addr16
shlb
xchg
adc
fdivrl
adc
mov
into
gs
bound
mov
inc
xor
mov
mov
adc
mov
jae
in
fildll
fs
inc
lea
clc
xchg
ja
flds
subb
scas
push
cmpsl
add
pop
cmp
pop
mov
xor
xorb
idivl
xor
stos
mov
pop
push
or
add
insb
imul
xchg
cmp
sub
xchg
mov
mov
outsb
push
adc
jl
add
vmread
insb
enter
cmp
je
and
add
das
roll
cmp
pop
shrb
insl
xchg
xor
jo
and
icebp
jne
sub
add
movd
adc
add
jb
push
or
nop
add
sbb
lcall
aam
cld
shrb
je
test
inc
mov
aad
mov
sbb
push
pop
xchg
mov
xchg
sub
add
fbstp
cmpsl
mov
shlb
sbb
push
pop
sub
add
dec
clc
or
xor
xchg
movsl
sbb
subb
ficoms
mov
iret
adc
add
ds
in
out
ss
loopne
adc
stc
repnz
or
loopne
add
add
cmpl
mov
mov
add
pop
stos
out
js
lea
lar
ret
ret
and
mov
or
sub
xor
les
repnz
test
and
dec
les
loop
jmp
or
adc
mov
push
pop
std
push
push
jnp
frstor
xchg
inc
lcall
nop
in
sbb
fldl
sub
xor
icebp
add
daa
outsb
addl
cmp
inc
dec
add
or
jae
xor
arpl
sbb
push
sub
xor
jle
pop
dec
push
pushf
adc
in
incl
and
lock
int3
cs
push
push
lock
ret
inc
sbbb
mov
addb
movsb
or
or
imul
or
xchg
lcall
fnop
fstpt
test
add
incb
push
cmp
clc
jb
pop
imul
lods
pop
clc
jg
mov
push
xchg
lea
sbb
in
push
push
inc
sub
push
imul
sbb
jl
add
and
andb
jle
sahf
cli
adc
sti
sub
imul
add
in
aaa
adc
ret
add
pop
lock
clc
sub
or
jmp
push
jbe
adc
add
pop
out
add
push
inc
pushf
outsb
mov
sub
or
pop
push
cltd
hlt
adc
sub
sub
loopne
add
cmpsl
jle
sub
push
out
add
lcall
pop
out
ret
and
ljmp
into
notl
add
add
xchg
sarl
adc
icebp
mov
int3
insb
sub
and
andb
punpcklbw
or
add
movsb
imul
scas
adc
out
mov
dec
pop
push
bt
decb
out
ffreep
clc
repnz
inc
dec
mov
mov
ret
je
aad
push
add
loope
rcll
add
sbb
or
fs
push
int3
inc
jno
js
mov
or
lea
ret
xor
add
pop
jp
std
insb
or
push
pop
daa
add
mov
popa
xlat
int
mov
in
or
adc
loope
loopne
ds
mov
mov
enter
or
sub
push
push
out
push
rcr
or
das
inc
add
add
sub
icebp
jnp
add
add
jmp
js
popa
push
push
faddp
add
cmp
jo
jno
add
sub
add
sbb
movzwl
add
push
push
cltd
sub
xchg
push
lods
mov
test
push
push
push
cmp
push
adc
or
sub
sub
movsl
add
inc
clc
add
int3
aad
sbb
push
js
jns
mov
push
add
adc
or
das
pop
loop
xor
mov
sbb
or
ficomps
addr16
push
pop
scas
call
cmp
cld
dec
add
shr
inc
je
mov
jnp
or
pusha
adc
xor
dec
inc
push
fnsave
push
xor
sbb
cwtl
addr16
sti
pop
push
call
push
nop
fmuls
aad
xchg
shrb
cmp
or
sub
bndldx
sub
and
push
mov
sbb
pop
shlb
pusha
pop
xchg
add
xor
test
mov
add
sbb
arpl
xor
push
lea
add
dec
and
cltd
add
fnsave
movsl
xorl
mov
insl
rorl
aas
and
and
fimull
mov
fidivrs
xor
adc
add
popf
aad
jp
shlb
inc
push
fwait
xorb
cld
sbb
call
push
rorl
es
dec
cmp
pop
push
inc
mov
inc
clc
aaa
lock
xlat
or
bound
dec
mov
inc
mov
shrl
imul
adc
dec
rcrb
test
push
push
dec
cmpsl
lcall
jge
adc
clc
xor
push
sbb
mov
inc
loopne
lcall
clts
popa
mov
clc
in
and
add
sarb
ret
aam
push
push
mov
pusha
mov
jle
lock
cmp
jbe
add
dec
push
and
movsl
popf
inc
aaa
lock
cld
push
push
xchg
jo
inc
popf
cmp
popa
push
stos
or
push
jp
push
ljmp
je
and
das
inc
jnp
cmp
jae
mov
loop
and
jg
cmp
add
jb
pop
lea
je
aam
pop
adc
fadd
mov
jo
out
fistps
adc
pop
and
inc
and
or
jb
pop
mov
movsl
rclb
mov
xor
jg
xchg
dec
cmp
and
movl
sbb
lods
dec
ret
outsl
test
and
add
dec
imul
xor
ret
jg
das
add
or
or
push
cmp
push
cmp
lea
jne
push
push
mov
adc
push
fisttpll
jl
mov
mov
mov
lods
rcll
xchg
push
pop
cld
fsubrs
repnz
in
mov
loopne
shll
pop
sbb
popf
xor
call
mov
xlat
add
loope
add
pop
movl
push
inc
mov
sub
sbb
fcomp
call
jl
adc
mov
mov
push
jl
std
xchg
adc
xchg
cmp
jbe
jnp
jmp
add
xor
movsb
xchg
cmp
inc
and
mov
cwtl
cmpsb
daa
sub
fmuls
cs
pop
mov
inc
mov
push
pop
push
fiadds
mov
rcl
lcall
cmpsl
xor
data16
sub
das
or
out
int3
sub
or
pop
mov
scas
push
rcrb
je
sub
jp
dec
xor
xor
in
pop
sub
in
sub
clc
je
insb
fistpll
mov
movl
jecxz
add
inc
inc
ret
jo
test
sbb
dec
push
dec
xchg
add
hlt
hlt
pop
sub
ror
xchg
fsts
ret
hlt
jle
inc
je
jge
les
cld
jg
inc
js
sub
adcl
xor
test
jmp
jecxz
lods
mov
mov
push
sbb
es
jne
adc
xchg
lods
mov
outsb
pop
in
negb
pop
sub
add
push
loopne
xor
sub
dec
inc
les
enter
and
jl
mulb
jne
cmpb
push
inc
adc
and
inc
pop
pop
lods
mov
scas
es
sub
in
mull
fisubs
jecxz
mov
jl
aad
ss
movsb
cmp
ret
jmp
dec
je
aas
lods
bound
jne
aas
movb
addr16
imul
pop
imull
lods
in
or
dec
add
sub
cmp
jne
sub
pushf
pushf
xchg
rorl
fptan
sbb
push
aas
dec
add
push
repnz
and
push
add
add
mov
les
fisttpl
sarb
rorb
popl
or
in
sbb
dec
fmull
cwtl
jo
xor
iret
pop
sbb
xchg
ds
add
rcrl
aad
in
dec
fstpl
xchg
xchg
jb
lods
fwait
mov
pop
test
push
cltd
push
in
mov
dec
xchg
mov
insb
push
movsb
jl
adc
lcall
sub
push
lret
sub
jmp
cmp
popa
cmpsb
mov
sbb
pusha
or
pop
mov
push
pusha
inc
insb
push
push
or
or
cs
leave
push
or
hlt
pop
dec
mov
push
imul
sbb
adcb
loopne
jo
loopne
push
mov
incl
mov
sbb
inc
fiadds
xor
mov
loopne
mov
dec
out
addl
stos
pop
ret
loope
and
pop
rcrl
dec
add
or
sub
or
lock
imul
cs
fcoms
fwait
sub
lock
ja
cmpsb
les
dec
xor
dec
call
pop
lea
imul
push
add
or
mov
xchg
push
es
popa
rorl
and
lea
mov
jge
movsb
jo
xchg
imul
and
dec
repz
xchg
xchg
sbb
in
adc
sub
gs
inc
and
jae
and
push
fdiv
cmp
sub
loopne
mov
lock
mov
adc
inc
lods
lock
add
and
xor
jo
sub
out
push
imul
in
adcb
int3
mov
push
or
dec
jmp
test
lcall
imul
cwtl
daa
loopne
hlt
add
push
mov
rclb
add
push
mov
mov
push
addr16
push
jo
lea
test
dec
adc
mov
pusha
pop
std
ret
or
mov
xor
push
mov
push
cmc
jns
daa
andl
mov
push
pop
adc
jno
shll
in
insb
push
sbb
pop
rcrl
push
pop
pop
jb,pt
insb
push
mov
jmp
inc
ret
jns
push
inc
stc
add
xor
sbb
adc
and
rclb
or
mov
xchg
jge
push
add
cmp
movl
jge
insl
movl
in
pop
dec
adc
daa
push
xor
enter
mov
jbe
icebp
cmp
lahf
push
fsubs
hlt
sbb
or
cmp
mov
scas
add
sbb
inc
in
pop
or
test
pusha
cmp
sub
mov
adc
cld
aam
xor
lea
adcl
xor
push
ja
orb
pop
arpl
fs
out
pop
int
mov
inc
lret
and
decb
sub
cmc
mov
rorl
xchg
rclb
push
sti
mov
outsl
pop
test
sbb
push
cli
hlt
mov
test
sbb
mov
clc
push
mov
shll
and
pop
cmpsb
mov
push
xchg
jbe
cmp
and
cltd
or
in
stos
xor
test
aad
dec
jle
push
xor
test
and
inc
mov
pushf
mov
push
and
or
cmc
nop
or
sub
es
mov
cmc
sub
jle
mov
sbb
leave
daa
adc
sub
and
orl
test
jae
xchg
ss
push
sub
pop
and
pop
mov
inc
repz
sbb
aad
jge
test
push
dec
cs
testl
jmp
outsb
sbb
push
js
arpl
jns
popf
mov
xor
je
add
test
stc
sbb
loopne
push
xchg
enter
pop
push
loope
into
push
xchg
and
lods
dec
push
lock
sub
mov
lods
mov
sub
outsb
pop
jge,pn
inc
pusha
or
pushf
das
js
xchg
push
and
daa
sub
in
ljmp
aas
mov
xor
xor
dec
das
cmpl
pop
leave
push
lods
pusha
leave
stos
pusha
sbb
mov
movsl
rcll
ds
lods
loope
or
inc
imul
add
insb
push
xchg
xchg
xchg
mov
push
xor
mov
mov
pusha
cmpsl
or
mov
pop
or
mov
iret
xor
mov
push
div
mov
pop
shl
ret
push
push
cltd
xchg
add
mov
push
push
push
mov
ljmp
or
push
movsb
mov
adc
popl
fnstenv
cld
int3
dec
verr
xchg
jo
cltd
adc
mov
cmp
cmp
pop
xor
cmc
enter
dec
mov
and
rcll
mov
pushf
sub
pop
cmp
cmp
mov
xchg
mov
sbb
out
inc
movsb
lret
dec
out
arpl
int3
xor
mov
in
push
cmp
mov
cmp
pop
rcrl
imul
inc
mov
scas
jbe
jmp
repz
pop
or
xor
xor
fs
push
xor
loope
inc
mov
xor
popa
je
popa
xor
push
cmp
jecxz
sbb
ret
xor
mov
mov
dec
fimull
lret
mov
push
movaps
push
test
adc
add
insl
mov
jno
loop
jle
inc
adc
xor
stos
pushl
xor
adc
sbb
xchg
xor
sub
pop
fdivr
lea
scas
and
decb
jne
ds
sbb
dec
cmpl
data16
sub
out
and
push
aaa
mov
fcoml
mov
repnz
gs
hlt
adc
xchg
xchg
fwait
mov
andl
enter
ds
ljmp
repz
cwtl
in
dec
push
ret
jl
mov
sub
inc
into
mov
ja
jnp
jmp
push
mov
mov
nop
cwtl
sub
pushf
in
adc
pop
and
jp
in
lcall
or
and
xchg
in
sbb
add
dec
pop
jge
push
cltd
sub
cmp
jo
test
mov
clc
or
sub
or
and
lret
shlb
push
inc
jae
das
ret
fsubs
jge
or
sub
mov
je
and
inc
mov
jnp
jns
and
add
pop
xlat
add
mov
push
daa
js
cli
cmp
fimuls
and
inc
aas
push
mov
dec
fdivrs
mov
pop
push
mov
divl
fcmovne
cmp
push
adc
gs
sub
cmp
pop
and
sbb
mov
ret
mov
xor
sub
int
das
es
pop
mov
mov
dec
sbb
jne
or
dec
jbe
lds
pop
insb
aas
xchg
mov
cmp
into
push
inc
aas
mov
sub
in
pusha
daa
lds
cs
push
fs
and
rorl
pop
mov
and
push
rcrb
or
mov
test
cmp
mov
stc
adcl
mov
outsl
push
xchg
jp
push
mov
js
leave
adc
push
sub
xchg
dec
and
sbb
cwtl
mov
push
ficompl
push
jmp
mov
repz
hlt
sub
push
xchg
sbb
aad
popa
enter
hlt
and
or
std
les
add
jge
mov
push
inc
inc
scas
jo
pop
lcall
add
arpl
fisttpll
push
sbb
push
cmp
pop
dec
adc
sub
dec
imul
cmpl
dec
mov
jae
dec
push
adc
sub
aas
inc
push
xchg
out
pop
loopne
adc
jl
push
sbb
xchg
jno
push
add
dec
popa
push
adcb
push
js
das
rcl
and
add
adc
inc
jge
pop
and
xchg
rorl
stc
cmp
or
aas
decb
enter
xchg
dec
sahf
test
hlt
lock
push
push
or
ficompl
les
pop
loope
push
lea
sbb
cmp
add
adc
loopne
push
sub
in
add
add
scas
pop
fdivrs
repz
orl
cltd
and
sub
adc
add
in
pop
add
mov
push
rolb
jnp
or
xchg
fmuls
mov
loopne
sarb
orl
push
xlat
jmp
lea
out
in
dec
loopne
push
popa
test
outsb
mov
or
cmpb
je
adc
pusha
pusha
fsubr
and
call
out
and
sbb
xchg
es
data16
add
jge
pop
mov
cmp
pop
andb
inc
aaa
popa
push
pop
mov
inc
hlt
daa
cmp
insl
or
mov
and
nop
dec
cmpsb
popa
pusha
dec
fs
pop
inc
mov
ja
push
or
and
cld
adc
sub
mov
sub
sbb
arpl
scas
out
add
xchg
test
xorl
dec
test
push
js
push
or
in
add
dec
mov
fisttps
push
add
fwait
ret
xor
mov
outsb
mov
sub
xchg
adc
cmpl
push
addb
push
es
dec
iret
jns
mov
add
rolb
adc
or
dec
dec
and
xor
xchg
xchg
enter
xchg
sbb
xor
mov
push
in
movsl
cmp
lcall
mov
mov
inc
adc
orl
leave
cmpsb
fwait
xchg
xchg
adc
inc
pop
mov
xor
cmp
inc
dec
xlat
jnp
enter
sub
xor
cmp
aas
sbb
jb
cmp
pop
inc
adc
or
dec
jp
dec
int3
mov
sbb
xor
lea
cmp
cmpsl
jmp
ret
int3
clc
rorl
loop
push
dec
add
lret
shr
movzbl
ss
outsl
fucomi
or
enter
push
push
push
mov
sbb
push
cmp
dec
push
mov
ss
fbld
clc
shlb
mov
cmp
xchg
sub
sbb
fs
lods
add
das
pusha
and
pop
in
or
add
movsb
jbe
push
sahf
cmpl
fcomps
add
int3
mov
mov
clc
push
pop
es
lahf
popa
faddl
sub
pop
push
fwait
mov
inc
sbb
jle
adcb
outsb
xlat
iret
std
ret
dec
mov
insl
push
push
cmp
pop
add
mov
sbb
cmp
jecxz
xor
or
mov
stos
jg
popa
lea
mov
or
add
dec
and
adc
nop
push
leave
daa
cmpsb
push
adc
js
xchg
and
lcall
or
rclb
xchg
enter
dec
push
push
cmp
mov
les
lds
test
xchg
jne
pop
add
mov
sub
inc
xor
fimuls
popa
cs
and
pushf
lods
rcl
push
mov
dec
pop
dec
or
adc
mov
xchg
adc
add
jnp
add
insb
dec
adc
pop
jge
cmp
jne
push
mov
les
adc
enter
mov
add
jmp
daa
push
adc
lret
clc
fstpl
pop
mov
filds
and
mov
add
sub
cld
je
scas
mov
inc
add
inc
sub
loopne
es
addb
cmpb
mov
lahf
push
jb
add
push
pop
xor
mov
aas
push
lea
push
das
and
cmp
cmp
out
xor
inc
or
xchg
les
aas
jge
push
sub
adc
call
xchg
filds
or
or
adc
hlt
hlt
stos
add
aaa
jno
iret
fbstp
mov
mov
in
jg
mov
in
mov
loopne
incb
clc
sub
cmp
dec
std
mov
add
fsts
ret
inc
jl
cmp
push
add
ret
call
loopne
pop
inc
or
faddl
inc
xchg
sub
push
push
sub
cmp
je
dec
hlt
sub
mov
mov
pop
push
mov
mov
jge
cltd
test
aaa
pop
inc
test
repz
push
lea
push
inc
push
xor
pop
fnsave
dec
mov
dec
movb
addr16
xchg
adc
or
iret
cltd
push
enter
adc
jb
adc
enter
cmp
fs
inc
xchg
jbe
leave
addb
pusha
xor
xor
xlat
mov
aaa
add
ds
and
pop
nop
fwait
pop
mov
imul
sub
aaa
push
jecxz
pop
or
in
es
movsb
adc
sub
cld
inc
pop
jnp
fistpl
inc
ss
or
hlt
or
dec
push
xor
or
lock
mov
mov
push
mov
xchg
loopne
xor
adc
push
adc
jns
test
lods
cmp
xor
cmpsl
mov
lods
adc
js
add
mov
rorb
sub
or
in
cmpb
cmpb
jne
ljmp
mov
or
or
loopne
shrb
mov
mov
sub
adcl
jbe
call
mov
sbb
pop
and
inc
adc
ret
mov
or
xchg
adc
sbb
push
pop
mov
xor
je
push
pushf
pop
push
inc
add
lods
add
xchg
jb
and
daa
mov
subb
mov
popf
scas
lods
sbb
movsl
movb
adc
or
pop
mov
pop
inc
or
inc
dec
je
scas
inc
mov
and
inc
test
sbb
xor
xor
ljmp
jmp
mov
push
add
test
movsb
push
lea
mov
in
iret
pop
adc
mov
pop
dec
xor
ret
rorb
int
mov
inc
or
mov
rcrl
xchg
nop
enter
out
paddq
movsb
sub
dec
test
add
add
sbbb
loopne
bnd
push
jne
add
push
cmpsb
in
std
sbb
sub
inc
sub
cmpb
push
das
test
arpl
stos
add
add
push
inc
xor
mov
enter
sbb
add
test
ds
inc
push
push
cmpl
bnd
jns
addb
sarb
adc
clc
movsl
push
ret
inc
in
inc
hlt
sub
xchg
push
cs
mov
xchg
adc
in
xchg
xchg
sub
sub
repnz
sub
and
sbb
rolb
adc
adc
ds
mov
popf
je
dec
es
and
xor
les
into
and
inc
lods
mov
push
xchg
push
push
pop
int
hlt
movsl
mov
inc
inc
xchg
add
rcrl
or
and
push
mov
fwait
loop
or
jecxz
das
jne
cmpl
add
dec
aaa
rclb
js
jmp
and
mov
add
fst
xchg
fidivrs
nop
or
and
cwtl
inc
js
sbb
out
jb
mov
cmp
push
scas
pop
ret
lea
je
mov
sbb
adc
lret
sbb
cmpl
push
jl
add
lock
loopne
add
xchg
into
shrl
push
and
mov
mov
movsb
mov
and
jl
jo
test
rol
fidivs
sub
mov
inc
mov
or
js
push
je
add
addb
add
add
je
mov
fdivrp
adc
ljmp
pop
jmp
push
cmp
lea
jge
data16
mov
cmpsb
scas
ret
and
jne
lds
in
jo
adc
cmpb
pop
jmp
je
imul
add
in
xchg
push
stos
test
push
stos
add
xchg
mov
ret
mov
mov
and
ljmp
cmp
mov
and
xchg
sbb
push
ficoms
xor
js
js
das
mov
test
jmp
add
sbb
adc
add
iret
rclb
inc
scas
xchg
push
lds
adc
sub
out
dec
sbb
push
cmpsl
mov
jl
pop
add
and
into
or
fisubrs
sub
mov
and
vpmacsdqh
sbb
and
add
stos
jb
into
pop
and
xchg
sbb
cltd
xchg
xchg
je
add
add
xchg
cmc
add
xchg
sub
cmpsb
dec
lock
jbe
pop
cmc
mov
xchg
jb
mov
push
cwtl
and
push
push
test
outsb
sti
push
rcrl
dec
bnd
gs
push
loop
lcall
sub
test
dec
je
jg
test
xchg
leave
jne
mov
dec
jne
sub
inc
int3
sub
andl
pop
out
into
rol
xchg
adc
lret
les
dec
aad
sub
xchg
loopne
loopne
or
pop
and
lahf
sub
sbb
shlb
jb
fdivr
add
mov
jne
adc
sbb
icebp
cmp
pop
and
fs
xchg
cmpsl
xchg
aam
and
dec
scas
lret
xchg
add
add
enter
cltd
stos
aaa
nop
add
or
out
mov
call
mov
sub
lahf
xchg
cltd
adcl
fldenv
nop
rol
imul
ja
push
pop
sbb
and
push
rcl
subb
jns
nop
out
out
pop
in
adc
fimull
sub
xor
mov
scas
ret
add
or
adc
fists
test
add
xchg
clc
aam
lock
out
jge
mov
cmpl
repz
lods
sbb
xorl
jg
mov
push
pop
mov
mov
and
inc
ret
mov
rclb
sti
add
inc
call
scas
test
inc
lea
insl
xor
or
add
xchg
push
xchg
inc
adc
adcl
add
lea
insl
lods
dec
addb
push
imul
into
test
mov
cmp
jge
mov
push
loopne
pop
and
xchg
mov
lock
push
mov
jb
rorb
aam
adc
inc
andb
movsl
imul
adc
jmp
cmp
mov
ret
xor
and
xchg
or
clc
push
scas
into
adc
lcall
mov
pop
test
dec
cli
mov
add
push
inc
xchg
repnz
sbb
int3
leave
push
add
ret
inc
mov
pop
dec
add
aas
push
push
push
pop
sub
and
jb
rcll
lret
shll
xchg
mov
ret
push
mov
pop
cmp
rcl
int3
and
pop
lds
push
pop
bound
mov
mov
shlb
arpl
inc
inc
cmp
or
adc
and
mov
adc
or
iret
fxch
push
sub
push
jno
pause
xchg
nop
cmp
pop
and
lcall
inc
movsb
jns
adc
sbb
and
aas
pusha
mov
and
push
mov
inc
jp
lods
nop
loopne
jp
sbb
fistpll
add
lea
cmp
fcoms
hlt
jne
cmp
aaa
iret
or
pushw
sbb
jle
add
lahf
dec
outsb
sbb
addl
mov
cmp
loope
push
push
jmp
pusha
mov
sbb
aaa
std
ss
add
nop
jae
mov
xor
lcall
jo
push
mov
insl
bound
lret
ljmp
xchg
shlb
lods
imul
pushf
sub
sbb
mov
cmc
dec
xor
push
je
inc
add
cmp
jl
jmp
add
mov
repz
shr
hlt
pushf
xor
test
xchg
les
enter
mov
daa
fldcw
sbb
jmpw
xor
xor
add
lods
notb
or
cmp
push
inc
push
sbb
push
loopne
add
notb
cltd
ljmp
mov
pop
mov
cmp
or
mov
mov
shrl
add
orb
dec
push
push
js
js
das
pop
in
push
sbb
fistpl
mov
and
adc
xor
std
and
loopne
cmp
inc
cmpl
push
adc
push
push
aaa
and
icebp
dec
call
inc
jne
jmp
cmp
xchg
or
fs
fldl
imul
nop
add
xor
jo
dec
push
sbb
sub
push
sbb
push
mov
dec
and
mov
mov
or
push
and
adc
dec
add
gs
adc
adc
ss
xchg
mov
push
mov
sub
call
push
sbb
loopne
test
pop
loopne
mov
or
test
pop
movsb
cmp
mov
xor
orl
lock
dec
inc
mov
adc
push
cli
jno
pop
and
or
adc
mov
add
add
sbb
inc
inc
orl
add
cmp
pop
or
xor
sub
sbb
fdivrs
inc
mov
dec
stos
movsl
pop
test
popa
push
mov
mov
lock
xchg
push
mov
inc
pop
ret
bound
movsb
sub
nop
add
jo
xchg
adc
mov
push
js
sub
sub
and
leave
xor
adc
and
mov
and
adc
adc
jge
add
imul
push
cli
test
push
mov
cs
cmp
cs
ret
or
dec
and
add
lds
mov
cs
cmp
cmpsl
xor
or
ljmp
push
xor
push
stos
xchg
push
or
rcr
and
xchg
imul
cmp
imul
scas
push
shrb
pop
or
or
sbb
imul
sub
push
push
mov
mov
sbb
adc
insl
mov
xchg
rcr
mov
sub
add
and
xor
fcmovnb
popa
mov
inc
xor
jne
lock
mov
stc
jb
sbb
add
cmp
jae
xchg
gs
pop
mov
push
xor
test
cmp
stos
add
ja
push
push
push
je
mov
add
or
lods
call
pop
mov
inc
inc
or
in
cmp
xor
hlt
push
dec
dec
outsb
add
das
inc
xor
push
jmp
inc
pop
cmp
jl
pop
ds
int3
xorb
cs
mov
mov
inc
andl
jl
mov
cmp
leave
xchg
adc
jb
xor
add
xor
adc
sub
or
xor
mov
clc
pop
mov
add
out
inc
add
add
mov
or
test
mov
pop
shrb
push
aas
mov
add
and
loope
jo
xor
sbb
sbb
xor
scas
and
insl
dec
or
stc
scas
insb
inc
cmp
das
adc
pop
xchg
rol
cmp
push
das
pop
mov
add
mov
push
inc
add
lds
lret
mov
sbb
rcrb
xchg
push
add
sbb
cmp
mov
rolb
and
loopne
sbbl
inc
test
outsl
dec
out
sbb
int
dec
and
cmp
lods
sub
cmpsb
inc
pop
jmp
aaa
mov
adc
aam
cmp
outsb
sbb
add
pusha
jmp
or
fs
mov
push
or
rorb
call
ss
add
xchg
or
decb
test
mov
jl
fisubs
fcoml
pop
cs
jno
pop
jge
mov
shll
in
andps
push
dec
sahf
or
xor
mov
cmp
into
adc
mov
adc
and
sbb
mov
dec
scas
sqrtps
pop
mov
clc
or
sub
fadds
inc
xchg
es
jbe
cmp
les
or
or
xchg
dec
lret
addl
lock
or
or
and
mov
or
lock
outsw
adc
movsb
jge
data16
cmp
mov
inc
popa
es
mov
aad
add
xlat
aad
push
rolb
divb
xor
inc
sbb
aam
sbb
add
sbb
repnz
jp
or
inc
xchg
push
mov
in
xor
mov
loopne
fisubs
adc
hlt
jg
std
lcall
les
mov
mov
out
mov
stos
mov
adc
mov
xchg
les
ret
daa
xor
ljmp
dec
hlt
scas
push
arpl
dec
pop
add
jne
push
dec
inc
fldenv
dec
stc
dec
and
mov
push
pop
mov
je
cmp
and
adc
mov
jne
pop
leave
pop
mov
test
movsb
ret
add
pop
jb
ret
jle
mov
push
and
cmp
imul
push
jno
xchg
mov
sti
adc
pop
lcall
mov
add
add
add
sub
xchg
jg
popa
xor
cmp
dec
cwtl
stos
adc
xor
sbb
popf
dec
es
out
test
jb
add
push
push
nop
ret
addl
addb
daa
or
xor
add
sub
dec
gs
sbb
and
push
push
nop
lret
sub
add
or
xchg
xor
cmp
add
add
inc
push
sbb
or
lret
pcmpgtb
cli
cmpsb
sbb
jl
push
jo
add
jl
mov
xchg
into
sarl
adc
in
or
in
add
adc
test
shrb
inc
enter
pop
add
dec
mov
in
sub
and
fcomps
xchg
js
sub
pop
push
inc
pusha
sbb
mov
mov
adc
sbb
jbe
inc
andl
and
cmp
mov
popf
pop
and
or
adcb
or
or
lea
dec
pop
sbb
cmp
and
sbb
pop
ror
push
rcrb
adc
and
lea
int3
rclb
sbb
insb
data16
hlt
setne
mov
xchg
xor
dec
dec
or
xor
or
dec
xor
xchg
xor
or
xor
xchg
xor
dec
and
and
dec
xor
add
dec
xor
xchg
xor
add
ds
adc
mov
sub
addb
mov
in
int3
aaa
add
adc
and
add
add
lods
push
lea
add
and
sub
decl
pushf
cmpsb
sbb
pop
pop
in
adc
add
xchg
sbb
inc
lcall
sub
pop
jne
cwtl
lcall
ljmp
or
dec
push
cmp
adc
mov
sbb
add
inc
loope
jmp
and
pop
lods
lcall
loopne
add
dec
sbb
dec
movsl
cmp
cmp
and
aaa
push
add
xor
mov
test
addl
cld
into
fiadds
and
add
sbb
rcr
inc
pop
xor
add
push
fdiv
add
sub
in
pop
and
and
test
push
outsb
and
add
nop
xor
loope
filds
int
sub
fucomi
sarb
add
lds
or
push
insl
mulb
sub
sub
mov
loopne
pusha
push
mov
out
mov
lea
lds
sub
lds
pop
or
adc
sbb
sbb
cltd
dec
inc
push
cmp
sub
std
sbb
mov
in
or
lods
sub
dec
push
dec
sub
push
rorl
pop
cmp
dec
push
push
sbb
mov
xor
dec
hlt
cmc
es
pop
pop
or
sbb
enter
cmovnp
jl
and
mov
inc
sub
inc
and
jnp
hlt
mov
jne
inc
jns
mov
xchg
inc
mov
and
dec
jl
sub
or
xchg
dec
push
hlt
repnz
sbb
dec
mov
push
hlt
push
leave
xor
or
mov
and
sbb
and
shlb
je
sbb
mov
add
out
push
mov
test
scas
adc
xlat
popa
push
mov
iret
push
es
or
cmp
push
mov
fbstp
out
pop
dec
mov
push
stos
dec
xchg
cs
mov
pusha
xlat
adc
push
sbb
cli
scas
inc
cmc
sbbb
push
or
insb
fs
inc
mov
inc
cmp
aad
mov
jb
xor
aaa
jnp
xor
and
and
xchg
mov
je
mov
fs
push
mov
jmp
inc
cmp
leave
and
adc
leave
mov
or
aas
adc
inc
movsl
add
push
cmp
push
lcall
mov
mov
add
outsl
sub
movl
int3
fbstp
inc
mov
cmp
xor
push
ljmp
add
mov
insl
xor
jo
or
push
pop
pop
ret
fmuls
add
nop
cmp
xchg
mov
test
sarl
in
xchg
mov
cld
jge
add
xor
push
xchg
pop
push
push
fiaddl
mov
sbb
test
add
fisttpll
fistpl
sbb
icebp
mov
add
or
sub
rcr
dec
or
jns
scas
cld
dec
fsubl
loope
pop
lock
cmp
or
pop
mov
push
loopne
incl
aas
mov
pop
sbb
xchg
cmp
das
cld
mov
je
sub
js
push
pop
in
shrl
mov
cmp
ljmp
pop
out
or
cmpb
test
or
lret
ret
je
lods
cmp
call
pop
add
xor
in
pop
adc
inc
pop
rolb
push
sbb
jb
jecxz
mov
ret
lods
mov
btc
push
mov
lea
xor
aad
mov
push
cmpb
adc
sub
adc
fadd
xchg
fmull
adc
int
cmp
or
xchg
scas
das
push
lods
xorl
jo
inc
mov
cmp
pushf
jmp
lea
pop
mov
lahf
inc
sub
inc
pop
xlat
fbstp
or
inc
arpl
pusha
loop
xor
fs
xor
jle
cmp
das
test
in
cmc
sbb
jge
jae
push
push
xchg
sbb
sti
jmp
mov
adc
lea
orb
in
in
loop
xchg
dec
fdivl
imul
cwtl
add
add
lock
ljmp
mov
sbb
add
insb
pushf
xchg
adc
adcb
xchg
jo
and
push
es
add
add
iret
push
lods
dec
fnstenv
js
pop
or
adc
inc
mov
ret
or
pop
ret
and
xchg
push
jl
sbb
lds
lret
xor
int3
add
inc
and
cmp
adc
dec
adc
pusha
and
inc
lods
orb
xor
mov
mov
loope
pop
jne
stos
inc
mov
adc
adc
int3
xor
add
ret
leave
adc
pop
aad
cmpsl
add
mov
xor
pop
adc
jns
cmp
data16
int3
add
std
or
lahf
test
rcrl
jl
rcrb
cmp
sub
ror
inc
cmp
stc
imul
push
lock
mov
movb
jae
imul
xchg
sbb
test
push
dec
adc
push
sbb
pusha
inc
sub
cmp
push
pop
push
in
in
pop
xor
into
pop
daa
ret
aas
push
xchg
jbe
ret
pop
push
pusha
bound
nop
pop
and
ds
push
pop
pop
and
or
xchg
lret
mov
and
mov
inc
jo
leave
lea
push
nop
fstpl
xchg
xchg
xor
and
std
les
mov
or
and
sub
sarb
cmp
lods
mov
in
mov
fldl
or
lcall
adc
or
adc
pop
mov
push
hlt
push
fstps
dec
fcomps
dec
push
cs
dec
outsb
or
dec
dec
add
inc
mov
in
nop
adc
sub
adc
push
adc
mov
jne
cmp
mov
je
add
jns
jl
mov
test
sbb
mov
push
hlt
outsl
aam
xchg
sahf
call
add
xchg
stc
pop
repnz
nop
push
sbb
mov
je
jo
pop
add
pop
push
outsb
push
test
cld
movsl
aad
push
adc
mov
adcl
mov
sbb
or
lea
dec
push
push
mov
jb
adc
pusha
sub
jmp
fisubs
xchg
cs
inc
js
sbbb
push
xor
inc
jecxz
push
lock
cmp
aas
or
adc
pop
mov
mov
rcrb
stos
hlt
sahf
mov
cwtl
sub
movsb
cltd
xchg
xchg
sub
sub
pusha
xchg
xor
rorb
sub
test
add
mov
shlb
sahf
ja
push
add
add
rclb
inc
js
mov
push
jnp
dec
push
mov
and
push
in
jl
dec
loop
call
add
xor
ficoml
mov
jne
imul
sbb
inc
lea
enter
add
add
cmpsl
add
mov
mov
dec
and
addr16
add
mov
dec
les
aaa
dec
mov
inc
cmp
test
jae
loopne
stc
ret
or
adc
add
loop
cmovg
pushf
jne
nop
int
add
add
or
cmpsb
and
js
pop
mov
xchg
xor
adc
push
aad
hlt
pop
aaa
or
fs
or
sbb
jne
test
sub
rcr
inc
dec
push
mov
mov
xor
test
pop
or
or
inc
sub
xlat
add
sub
andb
scas
ret
out
mov
pop
mov
lods
mov
cmp
push
xor
mov
cli
and
sbb
pop
clc
adc
jmp
idivl
pushl
stc
cld
sbb
sbb
push
push
addr16
sub
test
jmp
into
aam
and
cmp
mov
stos
jp
scas
je
or
mov
cli
movsb
nop
and
lock
inc
cmp
jmp
or
jl
mov
xlat
push
add
mov
and
gs
dec
jne
xchg
lock
cltd
xlat
cltd
mov
mov
mov
jmp
sti
incl
cmp
mov
add
sarb
sub
pop
mov
adc
test
lea
adc
sbb
xchg
inc
fiadds
jno
rcrl
out
jmp
pop
dec
jns
les
cltd
xchg
add
rclb
stos
imul
inc
cli
mov
cmp
aaa
adc
aas
push
adc
sbbb
pop
dec
or
in
pop
addl
jb
push
dec
lahf
pushf
sbb
fidivrs
movsb
sub
mov
ds
inc
sub
sbb
cmp
add
or
inc
in
xor
and
pop
push
or
fs
pusha
jg
dec
add
pop
push
and
pop
xchg
adc
data16
mov
cmpsl
lea
daa
insl
aas
aad
stos
or
push
sub
rorl
sbb
scas
mov
repnz
idivb
cmp
pop
push
inc
jnp
dec
mov
xchg
icebp
enter
mov
outsl
adc
cmpsl
and
adc
movsb
dec
adc
adc
jo
inc
sbb
mov
lea
add
and
ud2
test
inc
xchg
mov
insb
sti
ds
imul
add
addw
out
hlt
and
dec
jl
stos
in
push
rcrl
mov
fstps
push
cmp
ret
das
add
sahf
push
xchg
sbb
nop
jb
add
add
gs
mov
mov
jno
imul
mov
cltd
cs
dec
testl
and
mov
sub
sub
mov
gs
cs
ret
pop
xor
dec
ret
sub
push
and
mov
pop
pop
push
ret
xor
lret
and
or
stc
fs
std
arpl
add
test
and
add
adc
or
cmp
or
das
add
mov
mov
add
into
push
adc
dec
rolb
movsb
fs
sub
pop
or
rorl
push
or
shll
andl
mov
lret
int
add
bound
insl
sbb
sbb
bt
bound
leave
and
mov
dec
out
inc
dec
push
sbb
pop
ljmp
and
stos
int3
rorb
imul
cmp
iret
fdivl
push
std
les
insl
fldcw
jb
ljmp
mov
stos
jle
mov
ficomps
push
or
leave
pop
cmp
ss
jmp
out
aaa
push
xchg
pusha
add
rolb
fisubrs
or
add
mov
sbb
fcomps
inc
and
icebp
push
pop
inc
push
rclb
add
inc
push
or
xor
stos
popa
xor
std
movzbl
movsb
and
and
or
inc
dec
pop
sub
call
push
dec
push
in
push
fs
and
in
sbb
or
adc
push
shlb
push
sub
add
inc
xlat
cmpb
or
push
pusha
movsb
push
add
sbb
push
push
fisttpll
ss
push
repnz
inc
hlt
push
xchg
ja
and
cltd
adc
imul
jns
mov
mov
or
inc
adc
and
xchg
sbb
fistpll
cmp
inc
shrb
push
pusha
sbb
loopne
scas
mov
loope
mov
inc
add
push
ficomps
scas
mov
inc
sbbl
clc
cmp
dec
push
dec
popf
es
pop
xchg
mov
sbb
xchg
or
call
sub
sub
ret
je
or
xchg
jo
test
xor
movsb
add
pop
pusha
add
rcl
or
pop
push
mov
jmp
inc
lahf
add
and
pop
enter
or
int3
sub
adc
or
shrb
cs
push
cld
push
lock
aad
adc
je
mov
jg
mov
fsubrs
push
lds
inc
pop
push
shlb
sbb
xchg
enter
lds
ficomps
push
lods
incb
cmp
jb
mov
sub
into
pop
push
push
mov
xchg
and
dec
jne
mov
insb
dec
or
mov
xorl
outsb
cmp
sbb
gs
or
leave
and
adc
mov
push
mov
jecxz
mov
aaa
loope
add
add
adc
adc
add
add
push
imul
add
cmp
ljmp
inc
jmp
xchg
adc
addb
lea
pop
and
add
cs
pop
cmpl
cmp
dec
inc
push
into
adc
adc
cltd
out
test
xchg
dec
add
xor
or
aaa
jge
mov
inc
add
pushf
dec
xor
lret
aam
stos
stc
nop
push
lret
andl
cmp
in
das
push
notl
jl
jl
sbb
test
inc
js
sbb
inc
sbb
dec
adc
xchg
sbb
add
adc
mov
mov
and
test
lea
lret
les
aam
dec
out
mov
andb
mov
mov
stc
bound
add
fs
cmp
test
dec
inc
add
inc
aam
pop
and
shrl
ret
sub
mov
aam
pop
sbb
daa
adc
add
jg
rcll
cs
mov
into
sub
pop
dec
fsubr
sub
dec
cmp
jae
inc
cmp
sbb
lock
outsl
sub
mov
push
pop
and
mov
scas
cmpsb
out
jns
mov
sahf
jge
mov
add
or
mov
js
aaa
sbb
inc
hlt
push
repnz
repnz
mov
adc
in
adc
cmp
mov
add
push
test
mov
inc
or
es
jmp
sbb
and
in
jne
lea
sbb
jle
or
stc
mov
rorl
xchg
and
pop
sbb
outsb
nop
popa
outsl
push
stos
pop
test
add
pusha
mov
mov
shr
dec
jbe
sbb
jae
sbb
int3
scas
jge
movzbl
movb
mov
add
std
hlt
push
fdivr
push
nop
shlb
daa
push
orb
push
inc
leave
mov
loop
xorl
add
sub
pop
aaa
stos
test
movsb
sub
es
outsl
sub
cmp
mov
data16
and
and
sbb
pop
int3
rolb
mov
cmp
push
enter
mov
mov
psubb
stc
jbe
or
xchg
jbe
sub
adc
lahf
push
pushf
clc
mov
add
pop
mov
cs
add
and
or
call
lods
push
sub
mov
inc
jbe
mov
or
imul
xchg
xlat
or
push
mov
add
sbb
inc
ja
test
subb
add
push
sub
lcall
sbb
imul
je
pop
cltd
adc
imul
es
mov
sub
loop
jbe
push
inc
mov
inc
jmp
inc
adc
dec
pusha
mov
pop
pop
lock
pop
ja
out
add
lcall
add
cmp
jae
inc
sbb
adc
add
sbb
in
notb
mov
jns
ret
sbb
add
pop
and
pop
movl
or
rcll
and
nop
mov
bound
fstl
aaa
hlt
adc
sar
or
add
or
adc
adc
sbb
fldt
jmp
add
rcrl
xor
je
shll
dec
push
push
arpl
pop
xor
pop
add
pusha
push
ja
jne
add
imul
je
sbb
fiaddl
in
jnp
orb
inc
xor
ja
and
in
rolb
and
or
pushf
mov
sbb
lea
pop
inc
mov
jb
test
add
jns
adc
mov
sahf
test
bound
pop
sti
push
pop
inc
dec
test
out
dec
lea
dec
or
into
jecxz
push
clc
add
xor
or
jmp
push
test
or
jl
sbb
js
rorb
je
jo
and
push
pop
insb
cmp
push
dec
fs
ret
push
inc
and
dec
pop
add
in
dec
push
or
xchg
sub
aaa
mov
inc
and
pusha
adc
inc
or
ss
mov
repz
lahf
ljmp
or
leave
pop
int
adc
pop
add
push
xor
cs
pop
inc
cwtl
push
imul
xor
and
pushf
dec
and
imul
setge
int
sub
xchg
adc
mov
pop
rolb
add
inc
nop
jmp
xchg
jns
inc
pop
rorb
cmp
xor
cmp
aam
push
cld
push
push
mov
out
fwait
sub
adc
aam
sub
inc
inc
xor
es
push
dec
jg
pop
nop
fwait
ret
out
inc
clc
rol
mov
cmp
ret
lahf
in
outsl
lock
outsl
xor
orl
lea
lods
and
add
mov
xor
sti
jle
push
les
push
arpl
or
sbb
dec
aaa
and
pop
pop
rclb
cltd
out
testb
lret
les
dec
loope
mov
sub
in
cltd
mov
incl
dec
and
dec
orl
xchg
or
js
adc
sbb
les
xchg
push
jne
adc
push
adc
mov
cmp
add
pop
and
test
xchg
or
dec
mov
adc
pop
adc
push
mov
rcrb
imul
shrl
xchg
cmp
inc
jne
xlat
push
ds
inc
test
stos
js
sbb
cmpsb
incl
pop
pop
dec
xor
lret
mov
xchg
ret
cmp
outsl
xlat
lcall
pop
pop
cwtl
inc
lar
mov
dec
push
dec
fmull
mov
rcrl
cmpb
adc
or
xorb
mov
and
inc
mov
xor
sub
jecxz
je
push
jne
lea
scas
je
mov
fistpll
mov
or
xlat
icebp
push
add
or
dec
movsl
shlb
and
add
push
or
pop
jo
dec
cmp
push
outsb
pop
push
mov
jno
adc
arpl
mov
push
sbb
and
je
mov
push
mov
pop
sti
dec
das
dec
mov
arpl
sbb
out
mov
lea
add
inc
adc
push
xor
mov
xor
pop
inc
pop
add
insl
popa
lds
lahf
ss
mov
add
dec
fcompl
mov
mov
jp
stos
inc
push
pushf
and
and
jo
fcmovnbe
xchg
push
cmpsl
push
test
mov
pop
or
inc
cli
arpl
pop
xchg
push
ret
add
xor
cmp
sbbb
addb
push
xorb
add
sub
fildll
pop
fs
fs
jmp
test
movsb
add
inc
push
mov
inc
sahf
dec
or
push
movb
push
scas
or
add
lock
je
jb
mov
cli
sbb
jmp
jmp
mov
lret
dec
loop
push
push
adc
jl
sbb
inc
lds
rep
and
lea
lret
xor
fcomps
lret
and
sub
lcall
test
mov
mov
inc
sbb
test
cwtl
test
dec
outsl
push
js
dec
dec
mov
dec
push
sbb
movsb
xchg
ss
jne
add
push
add
push
cmpsl
fwait
jns
lret
ljmp
test
add
mov
dec
pop
bnd
push
dec
shll
insb
mov
and
mov
xor
iret
stos
push
adc
xchg
out
pusha
adcb
outsl
jmp
es
or
mov
shrl
mov
insb
in
and
push
lea
jg
std
aaa
test
xchg
push
and
and
and
xchg
jns
lahf
jnp
sbb
cltd
out
jmp
nop
mov
push
mov
add
pop
sbb
and
jmp
pop
jbe
shlb
jo
xchg
sbb
push
fdivr
aad
sbb
sub
push
push
cwtl
in
test
mov
cmp
adc
popa
cmp
dec
xor
push
in
call
repz
and
add
push
pop
lcall
sbb
pop
push
sbb
shll
jns
test
test
xchg
movsb
xorl
mov
sbb
inc
aaa
jno
jns
xor
adc
leave
and
and
inc
and
xchg
sbb
sbb
and
and
test
jmp
mov
and
add
loop
sbb
test
les
les
or
inc
inc
add
mov
push
push
je
cmpb
popa
movaps
inc
orb
sbbb
adc
add
and
add
es
pop
push
jg
int
inc
das
test
add
add
mov
mov
push
dec
mov
fmulp
dec
push
aad
xchg
cmp
popa
jo
xchg
add
mov
mov
lahf
push
or
lods
inc
push
popa
xchg
xchg
or
xor
add
jb
inc
lret
and
mov
mov
fadds
lcall
in
or
sub
sub
push
or
icebp
subl
aad
test
sbb
sbb
or
je
mov
int
dec
mov
fcoml
push
or
push
cmp
nop
push
dec
push
sub
cmp
dec
sbb
test
sbb
or
add
add
aaa
push
cmpl
dec
js
inc
test
dec
push
push
xor
mov
jne
mov
cmp
inc
gs
movsl
mov
pushf
ret
add
mov
or
jne
xchg
or
and
fisubrl
and
and
icebp
xor
negl
xchg
push
mov
xor
aam
lods
call
pop
sub
push
or
fnsave
ret
add
clc
add
push
pop
lcall
mov
pop
insb
in
or
outsb
sub
repz
mov
dec
add
push
dec
dec
es
xor
push
mov
ss
mov
fildl
and
cmpsb
inc
insl
mov
xor
movsb
cmc
fidivrs
adc
dec
fists
or
sbb
push
je
sbb
and
and
aaa
and
pusha
testl
daa
sub
cmp
lods
outsl
or
movsb
sbb
lret
and
adc
js
stos
inc
shrb
add
sbb
cmp
adc
xchg
or
ds
popa
mov
mov
outsl
iret
movsl
addl
out
push
sub
adc
test
lds
adc
cmp
lods
sub
or
jecxz
sub
jp
xchg
inc
pop
or
or
and
iret
cmpsb
or
jp
inc
push
mov
xor
sti
dec
cmp
or
and
or
rclb
add
jecxz
iret
add
mov
sub
inc
or
lods
ss
or
inc
inc
arpl
fisttpll
sti
mov
and
loope
inc
mov
fcmove
or
ret
popf
in
mov
jnp
sub
sbb
fadd
inc
pop
in
popa
jmp
aaa
sbb
popa
movsb
insb
fistl
enter
mov
dec
push
adc
jp
or
cmpl
adc
or
push
xchg
lods
add
cltd
and
adc
movsb
sbb
push
nop
pop
cmp
add
sub
fs
sub
adc
adc
push
inc
enter
adc
add
push
nop
mov
stc
pop
push
xchg
mov
sbb
add
add
or
or
mov
cmc
test
mov
mov
fldl2t
mov
sbb
and
xor
insl
sbb
mov
add
jno
sbb
add
sbb
xor
jns
fs
xchg
cs
mov
pusha
push
inc
aad
and
scas
and
mov
push
xor
inc
xor
sub
js
sub
add
and
add
jb
dec
push
inc
pop
push
mov
and
sti
xchg
mov
dec
xor
mov
and
push
and
dec
and
mov
outsl
sbbb
loopne
dec
mov
and
or
sbb
out
ss
inc
insb
pop
mov
inc
das
pop
or
sbb
adc
sbb
xchg
push
enter
cmp
or
popf
shl
and
dec
fs
stos
mov
and
dec
cltd
inc
popa
add
add
add
lret
push
xchg
or
pop
push
xchg
sbb
xor
and
sbb
sub
or
cmpsb
fldenv
adc
jne
es
movsb
cs
enter
push
enter
leave
dec
adc
jbe
test
cmp
jno
pop
movsb
stc
add
cmp
inc
push
mov
add
add
int
push
push
push
push
push
jp
add
hlt
lret
add
pop
sub
and
movsb
lahf
add
imul
mov
aaa
mov
inc
cmp
ret
and
mov
je
xchg
icebp
push
das
add
test
push
pop
add
push
sub
sbb
add
or
adcb
push
add
adc
cli
pop
xchg
adc
dec
rcr
push
push
xor
ret
jl
xchg
push
inc
pcmpeqw
mov
push
nop
loopne
mov
push
jg
test
pop
jb
aam
push
mov
scas
and
or
push
pusha
sbb
pop
test
cmpsl
int3
dec
inc
add
lret
pop
xchg
int3
sub
sub
jns
lret
sahf
aam
xchg
inc
les
mov
mov
sbb
stos
add
mov
flds
dec
push
jl
lcall
add
cs
adc
sub
outsl
std
cmp
and
pushf
pop
dec
dec
pop
mov
aad
mov
inc
or
push
out
sbb
es
adc
cmp
dec
pop
inc
or
out
mov
mov
lods
shlb
inc
mov
mov
and
pop
cmp
dec
fdivs
push
fistpll
jl
rorl
mov
cmp
test
sbb
pop
sbb
dec
jnp
shr
mov
cmp
cmp
push
add
test
sahf
and
pop
imul
xor
mov
fisttpll
cs
or
or
stos
in
or
inc
test
mov
ret
jmp
roll
adc
in
pop
test
es
push
aas
adc
popa
and
xchg
es
mov
iret
adc
mov
push
mov
sub
or
sbb
adc
lea
mov
jl
xor
xchg
push
nop
loopne
rorl
outsb
les
out
add
push
mov
sbb
xor
sbb
fcomp
sbb
mov
push
cltd
xchg
sbb
in
push
shlb
add
xchg
enter
sbb
sbbl
push
and
xchg
xor
adcl
iret
sub
repnz
cmpb
mov
and
iret
es
rolb
dec
subb
iret
add
xor
fsubrl
test
cmp
and
enter
bound
cmpb
test
cmc
jo
les
jnp
cs
push
sub
or
sahf
mov
scas
imul
inc
inc
xchg
mov
pusha
pop
jne
sbb
adc
sub
or
repnz
sbb
ja
pop
pop
pusha
dec
fs
mov
xor
add
cs
jne
lds
mov
pusha
lods
jmp
outsl
xor
je
pop
shrl
jg
or
sub
xor
inc
rorb
sarl
arpl
push
loope
or
popa
addl
fimuls
mov
mov
bound
mov
cmc
add
mov
ret
aaa
push
mov
sbb
xor
cld
mov
icebp
sbb
loopne
mov
ret
fs
push
push
push
jae
inc
xlat
js
inc
shr
push
call
addr16
movsl
or
or
adc
sbb
or
push
sub
andl
push
lds
push
loopne
push
or
pop
lods
ss
pop
inc
jmp
xor
cwtl
pop
push
aaa
dec
xor
adc
push
adc
out
adc
xchg
lahf
sbb
mov
lods
outsb
ror
and
loopne
dec
or
mov
stc
les
and
pop
jns
inc
jl
sbb
push
mov
add
xor
bnd
shlb
arpl
aas
mov
xor
inc
push
arpl
dec
jb
cmp
in
sub
lods
jns
add
call
outsb
jp
or
inc
roll
mov
push
xor
pushf
push
and
cmpsb
sbb
movsb
cs
adc
rcrb
mov
out
adc
push
push
hlt
fdivr
and
inc
cmpsb
add
stos
and
out
dec
jae
andl
inc
fiadds
inc
push
mov
jns
inc
cwtl
or
cmpsl
es
sahf
movsb
cmp
mov
cmp
fs
cmp
add
cmp
pop
adc
xchg
repnz
inc
fprem
xchg
pop
clc
lea
das
jns
ficompl
adc
sub
mov
jno
and
xchg
sub
data16
loop
js
pusha
jp
add
ffreep
sbb
mov
push
or
subb
xlat
lcall
pusha
inc
test
insb
das
or
test
leave
inc
pop
push
sub
js
xor
es
leave
sub
sbb
adc
inc
test
adc
nop
cwtl
add
xor
aam
in
cmp
or
aas
push
xchg
scas
or
mov
sub
popf
jo
dec
lods
add
sub
cmpsb
shrb
add
cwtl
mov
sub
sahf
data16
dec
or
stos
cs
cmpsb
dec
dec
aas
loope
popa
test
pop
mov
test
loope
pop
and
inc
and
fisttpll
sbb
mov
lock
and
nop
in
dec
insb
flds
push
sub
push
add
dec
int3
sbb
flds
cmp
mov
sub
lock
jmp
lds
or
and
and
and
pop
lret
mov
sub
lock
adc
fs
scas
js
sub
and
push
push
lret
inc
shrb
sbb
cmc
xchg
mov
pop
bnd
cmp
xor
and
aaa
sub
bound
and
dec
out
jae
punpckhbw
pusha
and
or
pop
sbb
jbe
cltd
push
mov
xchg
insl
add
scas
add
je
mov
dec
xchg
ljmp
cmp
pop
lds
push
jbe
les
or
or
mov
lahf
push
sub
or
mov
mov
mov
aas
pop
dec
scas
xor
dec
sti
js
xor
add
cs
es
sbb
jb
sbb
pushf
js
rclb
enter
dec
sub
clc
fs
int3
mov
aad
rcll
int
sbb
pop
xchg
mov
andps
in
or
sbb
insb
aam
push
dec
xor
xchg
arpl
pop
pop
push
xor
xchg
or
jge
cmp
sahf
xchg
fistpl
cmp
add
pop
adc
sub
jge
cmp
push
je
lea
in
and
mov
add
icebp
insb
inc
mov
xor
bound
jbe
notb
movsl
mov
cltd
sarb
pop
dec
into
test
mov
adc
xchg
mov
je
mov
adc
insb
inc
push
leave
jae
cmp
push
leave
dec
adc
data16
adc
jge
sub
xchg
push
adc
pusha
add
inc
les
inc
add
in
push
dec
add
sarb
add
rclb
add
fwait
pop
nop
inc
or
sub
int3
and
inc
cmpsl
add
xchg
shrw
jecxz
push
lcall
xchg
xchg
fimuls
jo
push
xchg
or
daa
fs
xchg
adc
js
and
out
ds
in
jl
cmp
jae
fidivl
cmp
in
add
xchg
sbb
jmp
mov
cmp
jae
movsb
bound
mov
push
pop
dec
cmp
jecxz
sbb
and
mov
and
loopne
inc
jns
push
adc
testl
and
dec
jmp
aam
push
push
xorb
adc
test
inc
mov
and
xlat
or
add
xor
dec
or
cmp
aam
mov
mov
gs
jmp
push
push
pop
insb
cltd
jg
test
aad
jo
push
mov
inc
adc
ret
add
push
sub
pop
mov
lock
les
mov
popf
jb
jp
xor
push
pusha
mov
add
jne
sbbb
add
data16
insb
leave
sbb
aaa
hlt
adc
add
and
mov
adc
fisubs
add
pusha
mov
push
add
mov
push
nop
mov
mov
or
cmp
enter
xchg
or
xor
mov
sub
sbb
and
dec
xchg
out
aaa
les
jecxz
add
cmp
sti
bound
out
xchg
adc
xor
sbb
mov
stos
movsb
ss
jne
popa
sub
and
add
inc
bound
test
mov
rorb
inc
out
in
lea
add
test
push
adc
cmp
dec
mov
mov
xchg
loop
mov
sub
sbb
inc
mull
jnp
pusha
push
and
lret
cmp
add
subl
mov
dec
sub
push
mov
inc
sub
or
inc
sbb
cmp
and
arpl
adc
inc
sbb
cmp
pop
dec
cwtl
nop
xor
dec
aas
push
push
jge
add
lods
testl
or
sub
dec
and
les
add
adc
push
sub
lcall
and
cli
mov
or
xchg
pop
repnz
sti
jp
movsb
add
pop
adc
add
dec
pop
xor
imul
aas
or
and
gs
push
adc
adc
or
adc
mov
imul
out
and
pushl
jnp
jae
mov
xchg
dec
add
test
jg
sbb
std
jl
in
sbb
ds
add
fmuls
xor
fs
add
add
push
ret
inc
inc
outsl
pop
xchg
add
inc
and
or
subb
add
aas
pop
mov
pusha
xchg
sarl
jns
add
stos
lods
xchg
loope
hlt
dec
push
les
jg
imul
mov
shrl
sub
pop
pusha
xorl
and
enter
jb
mov
add
jmp
mov
add
add
jg
add
outsl
xor
jb
lcall
pop
sbb
inc
dec
push
sbb
adc
mov
add
and
mov
cmpl
lock
mov
ret
xchg
insb
movsl
xchg
xlat
pop
fsubrl
ljmp
cmp
inc
lahf
sbb
scas
or
leave
mov
mov
push
xor
and
imul
jb
inc
and
pop
push
incl
push
pop
pop
or
flds
dec
imul
dec
fs
insb
fstps
sub
lret
mov
adc
pop
add
ror
lcall
adc
popf
lods
xor
add
sub
or
xchg
add
jle
pop
dec
pop
fildll
pop
push
or
mov
add
cwtl
roll
xlat
notb
dec
js
add
inc
push
cmp
pop
and
insb
shl
add
mov
adc
or
or
add
imul
jmp
lods
mov
adc
sub
push
jns
punpckhwd
nopl
outsl
and
inc
xlat
ljmp
pusha
ja
pop
mov
push
inc
inc
cmp
adc
sbb
add
lahf
or
mov
lds
sbb
test
shlb
sub
lea
adc
mov
or
pushf
lahf
mov
test
test
xchg
inc
fwait
or
fistps
push
les
jnp
mov
mov
mov
adcb
inc
push
rolb
jno
int3
add
sahf
sbb
sbb
popa
mov
lcall
pop
pop
imul
xchg
sbb
jnp
movsb
jns
mov
dec
xor
sub
mov
aaa
push
xchg
sub
or
xor
fneni(8087
sbbl
push
lock
inc
in
inc
xchg
into
movsb
test
enter
xchg
mov
sbb
mov
sysret
push
movsl
mov
pusha
iret
insb
movsb
mov
les
push
sub
push
fldcw
inc
js
js
dec
mov
or
movsb
lea
and
loopne
mov
in
or
test
inc
add
dec
cmpsb
repz
inc
or
rclb
enter
rclb
push
dec
repnz
pop
dec
pop
addl
push
sub
inc
push
jp
dec
mov
dec
add
loop
sbb
xchg
mov
lock
adc
cmp
pop
or
jo
aas
add
mov
jg
xchg
outsl
push
jne
cmp
je
cmp
je
cmp
or
je
push
inc
cmp
or
cmc
or
mov
dec
hlt
jne
and
push
mov
add
cli
outsb
push
stos
pop
loope
xchg
mov
cmpb
je
stos
mov
pop
popf
test
shlb
data16
pop
sbb
mov
bound
adc
and
sub
mov
cli
xchg
mov
adc
lds
in
adc
je
nop
xchg
aam
cld
icebp
int3
xchg
sub
clc
hlt
push
adc
jno
push
jo
and
andb
add
adc
and
rcll
lock
pusha
or
loopne
sbb
ret
push
cmp
fstl
xor
mov
mov
ds
cmp
lcall
push
lock
adc
mov
push
push
mov
push
pop
push
sbb
cltd
mov
cmp
or
aam
jb
pusha
add
mov
and
jle
or
inc
sahf
push
clc
sbb
in
sub
dec
loopne
mov
and
and
sbb
sub
dec
sbb
mov
ret
js
or
sub
sbb
fmull
mov
cmp
mov
push
and
mov
mov
adc
nop
xchg
into
xchg
sub
test
push
dec
lock
add
sub
pusha
sbb
clc
lock
inc
clc
popf
gs
and
fsubl
adc
fs
or
mov
lock
stc
int
inc
sub
adc
push
mov
pop
xorl
shl
mov
sahf
ljmp
xchg
xchg
jne
adc
xchg
and
cltd
lock
ss
out
int3
es
add
mov
push
push
push
daa
dec
les
int3
push
mov
pushf
test
fsubrs
ja
mov
out
xchg
add
mov
and
lea
mov
inc
dec
bound
adc
iret
or
mov
push
push
push
inc
sbb
out
push
aas
sub
or
lcall
lcall
mov
adc
dec
pop
ret
push
call
adc
mov
push
dec
fwait
dec
or
jl
and
mov
push
mov
dec
inc
mov
aam
je
lea
inc
aam
shlb
rclb
xor
int3
inc
sub
fdivl
dec
xor
sub
das
xchg
out
cmpsl
into
mov
je
jecxz
mov
aaa
add
jns
jnp
shlb
fldt
or
pop
mov
pop
clc
jge
and
imul
out
imul
fbstp
or
jg
inc
mov
loopne
add
pop
hlt
stos
outsb
or
cmp
movsl
mov
fs
in
call
sti
push
xchg
sti
je
mov
scas
mov
scas
jne
dec
fcomp
mov
cmp
jnp
scas
ret
xchg
cwtl
mov
xchg
ljmp
mov
jmp
ds
pop
pushf
cmp
repnz
pop
or
int
jne
loop
dec
pop
lds
sbb
adc
pop
push
or
shlb
or
mov
push
pushf
mov
adc
cwtl
pop
inc
popl
fcoml
ljmp
mov
inc
add
jo
sub
lods
or
jge
and
xor
imul
dec
loopne
sbb
lahf
mov
xchg
cmp
cmp
xchg
mov
je
pop
bound
stc
and
ret
jne
inc
xchg
sbb
stc
jns
out
add
mov
incl
mov
les
lcall
dec
dec
cmp
push
mov
jge
pop
movl
pusha
and
inc
mov
mov
jmp
mov
adc
push
sub
xorb
xchg
xchg
movsb
mov
aad
cmp
mov
and
xor
push
maxps
aas
adc
pop
mov
clc
pusha
push
movsl
stos
test
cmp
fs
pop
dec
add
add
inc
iret
or
filds
lea
les
dec
ss
cmp
jg
or
adc
cmp
cmp
mov
pop
mov
adc
jmp
cmp
add
aas
push
int3
push
adc
in
adc
jnp
hlt
sbb
dec
sub
push
lea
or
sub
cmp
jbe
inc
sbb
pop
cmpl
adc
add
lock
sub
inc
or
loopne
xor
pop
test
mov
pusha
adc
inc
mov
adc
sub
jl
xchg
sub
sub
add
or
std
subl
stc
xchg
orb
fcoms
stc
push
outsb
insb
pushf
popa
add
or
lods
push
jl
sub
mov
cmpb
call
xchg
in
jge
jne
cmp
jne
int3
scas
push
jp
jns
push
sbb
pop
pop
mov
push
xor
xor
push
pop
or
iret
movsl
movb
add
enter
and
test
sub
lcall
adc
cmp
lds
out
orb
xor
sub
or
jmp
fs
rol
jle
xor
pop
das
test
fs
je
dec
push
and
pop
and
das
inc
inc
cltd
push
dec
out
fmuls
inc
test
pop
jo
js
dec
xchg
xlat
movl
push
dec
fadds
add
mov
xor
cld
cmp
add
pop
push
mov
sbbb
pusha
cmp
mov
stos
inc
lods
cld
adc
mov
rorl
adc
adc
adc
inc
enter
ja
mov
data16
pop
das
mov
ret
cmp
or
xor
dec
ss
pop
or
mov
sbb
pop
add
stos
lea
cmp
sbb
repnz
mov
icebp
push
push
push
movsb
adc
inc
xchg
mov
push
inc
add
movhlps
sbb
inc
adc
insb
sbb
iret
cmp
pusha
fs
test
push
push
lods
dec
xor
call
push
shlb
fimuls
inc
sbb
dec
out
and
cmp
outsb
inc
add
inc
shrb
xchg
push
pushf
push
movsb
sahf
jl
out
pusha
jecxz
sub
or
outsl
push
movb
bndstx
roll
jbe
or
push
inc
sbb
inc
daa
dec
cmp
and
add
call
inc
sbb
aas
mov
add
mov
xchg
push
cmp
pop
ds
push
pop
addr16
lods
dec
and
inc
add
lahf
movsl
push
mov
or
push
add
dec
add
addb
ficoms
or
dec
divl
jne
jo
and
jnp
sbb
jne
add
add
loop
adc
mov
add
mov
push
add
sti
lahf
out
movsl
rclb
pop
lock
dec
loopne
mov
cmp
jne
test
je
mov
cmp
ljmp
add
call
push
sbb
jo
pop
add
cmp
std
or
aad
mov
insb
adc
jle
sub
hlt
ss
int3
jg
inc
pushf
ja
add
pop
or
cwtl
pop
pop
sub
das
sub
adc
pop
lret
pop
dec
rolb
mov
or
inc
dec
dec
popf
add
faddl
pop
xor
dec
pop
jl
add
mov
je
push
repz
jbe
or
daa
pusha
and
xlat
xor
jnp
cmpsb
mov
inc
push
mov
inc
test
out
adc
scas
imul
pop
or
adc
rolb
xchg
mov
add
dec
jo
dec
xchg
ss
repnz
push
ficoms
or
popa
imul
cmp
mov
mov
movl
sbb
in
mov
mov
in
and
and
pop
sub
adc
pop
jmp
push
add
popa
add
movsl
mov
push
cwtl
push
pmulhw
insl
push
push
xor
or
push
test
movsb
push
fs
addb
or
xor
push
mov
push
or
out
dec
repnz
pop
inc
xor
xchg
je
adc
or
leave
es
and
imul
push
adc
or
mov
add
pop
dec
jo
sarl
sbb
dec
push
and
subb
xorb
aam
inc
dec
into
jle
sbb
or
xchg
ljmp
dec
sub
dec
aad
adc
arpl
sahf
adc
aam
sbb
or
ret
push
push
out
mov
push
add
sbb
pop
imul
add
push
sub
sbb
cmp
sub
add
out
ja
xor
cmp
and
pop
das
jl
mov
les
and
sbbb
or
or
and
ret
mov
xor
ret
fldcw
pop
lods
loopne
arpl
icebp
les
filds
pop
adc
adc
inc
in
add
dec
xchg
cs
sub
test
clc
gs
dec
mov
cld
xor
inc
scas
gs
nop
test
sub
adc
sar
mov
insb
xor
mov
lods
mov
stos
inc
or
pop
add
sbb
dec
dec
xchg
in
arpl
mov
sbb
test
test
incl
jne
cmp
jb
sub
jmp
push
dec
movzwl
sbb
aaa
dec
pop
cmpl
push
setl
movzbl
sbb
mov
push
push
and
jae
mov
loopne
xchg
imul
loope
xor
and
sahf
adc
pop
cmp
or
cmp
mov
cmp
rclb
jg
push
push
or
test
and
and
test
inc
push
lahf
xchg
je
lea
or
int
mov
fsubl
pop
jns,pt
mov
cmp
test
enter
sbb
adc
add
mov
push
mov
cs
xchg
inc
add
xchg
pop
ds
ljmp
add
sbb
and
dec
dec
or
mov
dec
daa
push
cmp
adc
xor
je
and
add
dec
rorb
add
jg
sbb
or
push
adc
mov
xor
adc
dec
push
adc
inc
mov
and
and
ds
mov
das
adc
rolb
and
push
sarl
fs
stc
cmp
cwtl
clc
sbb
and
ret
adc
add
mov
jb
clc
dec
pop
or
test
push
jb
iret
das
sbb
push
mov
xchg
or
inc
fiadds
sbb
push
and
xchg
pop
add
pop
nop
xchg
addl
inc
test
bound
or
pusha
push
mov
push
sbb
or
adc
or
imul
jmp
sbb
jns
add
dec
xor
pop
and
cmp
add
adc
fstl
xchg
push
aas
and
mov
sub
add
pop
jnp
cmp
rorb
cmp
mov
jg
sbbb
sti
lret
adc
sbb
mov
pop
int
fiadds
mov
dec
mov
sbb
pop
or
rcrb
adc
dec
je
enter
sbb
sbb
or
jge
ds
adc
cmpl
jne
push
pop
add
dec
jbe
mov
rol
jns
pop
add
push
loope
sbbb
add
dec
adc
faddp
jmp
mov
js
mov
dec
add
jg
sbb
sub
mov
jp
sub
movsb
add
addb
mov
push
mov
ret
inc
mov
jg
or
cmp
jle
lea
cmp
jl
fildl
cmpb
jne
jbe
sbbl
sbb
cmp
mov
add
xor
push
es
cmp
mov
or
adc
nop
mov
fcoml
xor
rcrl
sub
add
sub
pusha
cwtl
sbb
push
xchg
and
shll
dec
arpl
andl
or
add
cmp
jecxz
nop
adc
fidivl
add
dec
dec
inc
push
adc
adc
jb
push
ljmp
add
and
sbb
fcoml
dec
sbb
ss
rol
and
aam
xchg
mov
rorb
jbe
cmp
mov
sub
pop
bound
inc
jae
shlb
xor
mov
mov
mov
adc
leave
inc
sbb
aad
jge
ret
adc
add
sub
ss
mov
mov
push
adc
cmpsb
dec
imul
insb
imul
test
notl
push
xor
jo
jg
fidivs
push
inc
ljmp
add
fmuls
mov
pop
xchg
adc
push
push
fisttps
aad
dec
call
mov
mov
inc
add
mov
xchg
add
inc
jge
sahf
xchg
fstpl
mov
xor
sub
mov
jns
out
xchg
aas
push
imul
push
add
mov
push
sbbl
addb
xor
pop
sbb
dec
lods
test
jmp
and
add
pop
add
xor
push
push
sbb
push
add
imul
int
fwait
dec
jns
lret
mov
sub
and
ljmp
insl
iret
sub
lahf
ret
and
jo
push
push
and
xor
movsl
xchg
xchg
add
mov
push
xor
push
enter
or
je
dec
or
test
loopne
dec
jl
xlat
xor
fsubs
inc
fisttpl
daa
xchg
xor
sub
callw
inc
pop
pop
rorb
stos
dec
inc
sub
and
add
add
or
and
xor
add
push
pusha
jo
adc
pop
dec
dec
xor
lods
or
sbb
pop
push
jno
xor
stc
xor
outsl
fs
mulb
or
push
jne
xor
fadds
sbb
jbe
orl
inc
addr16
lret
add
cwtl
inc
inc
pop
lahf
mov
rcrb
sbb
mov
rcrb
roll
xchg
sub
add
mov
testl
dec
pop
lahf
push
mov
xor
xchg
out
mov
popf
outsl
shr
push
data16
sub
cs
cmpsb
addr16
pushf
push
inc
addb
cmp
aas
movsb
enter
sub
loopne
lods
add
fldcw
and
int3
rorl
int3
sarl
outsl
xor
mov
fsubrs
dec
pop
int
dec
push
push
in
in
inc
cmp
stos
add
shll
inc
std
sbb
push
mov
test
leave
pop
or
bsr
adc
enter
push
dec
or
cmpsl
test
iret
jg
mov
stc
and
push
lea
inc
pop
movsl
je
call
insb
popa
mov
ret
xor
scas
sbb
push
inc
test
cmp
jmp
xchg
adc
fidivrs
add
lea
cmpsb
int3
sub
fildl
or
sbb
subb
and
xchg
push
imul
andb
sub
cs
jae
mov
lahf
test
jmp
sub
mov
aaa
sbb
pushf
sbbb
push
add
xchg
inc
out
pusha
push
dec
inc
or
inc
fldl
add
xor
rolb
clc
mov
lods
enter
sub
and
adcl
gs
shl
aam
and
stos
in
lahf
incb
addl
pop
sub
lea
cmp
iret
add
push
xchg
and
sub
pop
fisttpll
jne
dec
gs
dec
xlat
or
and
sbb
and
push
and
mov
mov
clc
out
lret
mov
jmp
sarb
add
jne
repnz
outsl
ret
jne
mov
jg
mov
rorb
test
popa
add
lcall
push
pop
sub
neg
cmc
jl
test
mov
test
jl
push
push
cmp
lret
repz
pop
shrl
mov
jle
dec
push
adc
in
cmpb
dec
push
mov
mov
push
js
cmp
imul
mov
push
push
out
mov
div
jle
icebp
fwait
mov
adc
cmc
sbb
xchg
nop
sub
pushf
movsb
sahf
clc
movsb
lret
mov
xchg
mov
xchg
dec
and
filds
roll
lock
push
data16
icebp
mov
inc
xlat
rcr
out
add
or
pop
sub
aas
sti
push
push
fwait
movsb
lahf
and
fldcw
cld
pop
ret
lcall
xchg
nop
or
in
sub
push
adc
mov
and
sub
ret
div
mov
mov
adc
pop
mov
dec
roll
xor
xchg
rolb
faddl
lods
fimull
pop
or
xorb
cs
jbe
shufps
xor
mov
xor
fs
jo
enter
stos
mov
sub
mov
popa
xor
popa
jl
dec
inc
fisttps
add
sub
or
lock
or
mov
je
and
xor
fildl
jb,pt
pushf
push
rol
gs
xchg
insl
push
inc
add
ret
jnp
dec
testb
fdivrs
and
sub
adc
sub
stos
out
xchg
rolb
mov
daa
clc
xchg
fnstsw
push
jge
andb
push
sub
mov
sbb
cs
or
mov
seto
mov
neg
or
iret
out
or
daa
push
ss
movsb
push
lds
cwtl
jne
jp
sub
or
and
adc
push
pop
jo
pushf
xor
jg
pop
dec
andl
clc
rorl
push
adc
or
je
js
xor
and
jae
sbb
mov
fsts
inc
push
movsl
sub
pusha
push
mov
pop
add
pop
inc
out
paddsb
loope
daa
subl
sub
call
push
sub
push
push
cwtl
mov
cmp
test
or
outsb
popa
nop
call
fidivl
mov
rorb
xchg
mov
bound
jb
push
fs
mov
fs
adc
hlt
add
in
push
or
fadds
movsl
fdivs
fldcw
mov
add
insb
cmp
data16
fldcw
jl
pop
shll
mov
or
adc
filds
add
inc
push
jle
sbb
adc
add
ficoms
lock
and
jne,pn
inc
and
adc
aas
shlb
cmp
jne
aam
jb
push
inc
loopne
jge
sbb
push
and
rol
loop
mov
xor
shll
hlt
mov
push
sub
push
ss
adc
push
mov
movsl
cwtl
xchg
ret
adc
outsl
push
ret
push
es
inc
mov
imul
jg
lcall
fcompl
cmp
mov
ja
clc
cmp
jbe
or
test
std
ret
xlat
mov
cmc
imul
cmp
mov
movsb
sub
or
sub
mov
sub
sbb
pop
aad
dec
adc
mov
jne
push
pop
pop
mov
adcb
lret
adc
jg
sbb
flds
flds
cmp
les
aam
pop
jl
fmulp
lret
leave
iret
sbb
push
sbb
sub
fmuls
push
sbb
pop
out
dec
inc
sbb
jae
adc
lock
sbb
fdecstp
xor
push
lahf
movsl
aas
and
pop
jns
pop
add
add
jnp
adc
cmpl
or
adc
lcall
add
push
or
push
cmp
dec
inc
jb
addb
xor
pop
cmp
sub
jae
js
push
or
xchg
inc
jecxz
cld
orl
les
push
test
jge
mov
jmp
mov
or
lods
pop
imul
scas
sarb
sub
fisttpl
push
pop
xchg
mov
lea
mov
jo
enter
subl
dec
adcb
adc
push
push
inc
add
lock
scas
add
or
jo
ret
xor
add
cmp
mov
push
call
mov
or
mov
in
push
dec
sbb
dec
add
lea
jl
into
push
fsubl
cmpsb
fmull
push
or
cmp
dec
call
mov
push
dec
pop
iret
push
iret
ds
push
punpckhdq
pop
js
lock
je
sub
xchg
cmp
fnstsw
inc
lret
pop
je
push
dec
mov
vcvttsd2si
loop
mov
or
loop
inc
xchg
pop
inc
lcall
add
sbb
lods
adc
sbb
cmp
add
push
call
jmp
xor
jg
mov
jg
adc
mov
pop
jmp
fistpll
sub
add
push
jg
push
inc
cwtl
pop
cld
or
inc
cmpsb
cwtl
popf
mov
jmp
push
out
or
push
rorl
mov
sbb
or
adc
xor
jne
and
xor
pop
popf
add
jle
mov
or
add
push
push
pop
imul
push
push
sbb
sarb
xor
cmp
sbb
jg
call
cwtl
cmpw
jne
mov
je
test
imul
or
mov
dec
fsts
pop
push
mov
push
push
call
iret
add
cmp
mov
cmpl
scas
rcrl
inc
push
lock
or
or
call
mov
repnz
mov
clc
mov
jb
inc
je
hlt
scas
lret
aam
lods
int3
test
adc
sbbl
loopne
lea
push
push
les
push
adc
daa
mov
cmp
fwait
ds
push
mov
adc
sub
jp
adc
mov
adc
mov
ljmp
inc
sbb
or
pop
mov
or
push
xor
mov
jo
jl
xchg
cmpsb
push
mov
pop
jmp
out
daa
push
push
mov
jle
push
inc
scas
push
icebp
mov
add
push
mov
and
mov
ret
sbb
inc
mov
aaa
push
inc
scas
shll
int
fs
sbb
xlat
sub
mov
adc
popa
outsb
push
push
add
jle
mov
mov
scas
dec
sahf
push
sub
pusha
dec
ret
sbb
sbb
inc
insb
test
call
test
dec
sbb
push
mov
or
push
testb
and
repnz
adc
lcall
insb
dec
popf
call
out
loope
dec
push
adc
loop
fbld
fisubrs
and
inc
inc
addb
push
adc
rorb
push
cld
sbb
test
pop
sbb
call
push
icebp
fsubp
mov
lods
fwait
ret
repz
xor
and
das
add
push
cmp
sbb
push
add
in
mov
jbe
lock
rclb
pop
xor
xor
sub
mov
in
mov
imul
int3
pop
loop
incb
inc
add
push
push
aaa
mov
scas
in
lods
xor
mov
add
push
push
icebp
divb
stos
loopne
aam
pop
addr16
jp
cmp
je
inc
or
inc
mov
or
insl
lock
or
insl
movsb
lock
sbb
sub
push
jecxz
adc
jl
push
ja
jecxz
mov
sub
jne
xor
insl
push
out
or
inc
add
arpl
orb
cmp
push
rolb
hlt
rcrb
inc
jecxz
inc
push
iret
or
sbb
jle
and
add
js
rorb
cmp
cmp
mov
bound
push
insb
das
dec
dec
mov
or
sub
jns
cli
sub
push
sub
dec
sti
mov
movb
mov
cwtl
nop
cmpsb
pushf
mov
popa
andb
jl
jl
dec
add
push
mov
test
add
xchg
xor
xor
shll
ss
pop
test
cmp
and
cwtl
inc
mov
mov
ret
push
push
push
je
rcll
pop
ret
xor
adc
cs
pop
ret
inc
andb
out
mov
int3
fst
or
rclb
mov
ror
and
lret
inc
or
inc
inc
jmp
roll
cmp
push
and
out
mov
lret
out
das
push
into
xor
add
bound
cwtl
imul
xor
mull
sbb
orb
lods
cmp
insb
aam
or
add
pop
cmp
sti
das
call
dec
sub
idivb
add
mov
push
cli
cwtl
sub
inc
test
pop
jge
push
in
xor
dec
jmp
cmp
in
xor
test
xor
mov
hlt
lea
movzwl
mov
mov
into
loopne
cmp
into
pop
mul
inc
add
aam
cld
add
ljmp
setb
jb
rcll
jge
cmp
push
fwait
inc
mov
hlt
in
lea
je
popf
xchg
dec
pop
inc
pop
jbe
jns
pusha
cmpb
mov
dec
inc
ret
sbb
in
adc
sub
xchg
adc
insb
out
mov
adc
call
adc
add
scas
mov
mov
into
pop
outsb
push
dec
rolb
pop
sub
stos
test
add
lea
loopne
push
xor
mov
ror
mov
fs
push
rorl
mov
fsubp
sahf
ret
ss
cmp
push
dec
sbb
push
mov
push
xchg
add
daa
bound
je
jo
js
outsb
mov
or
orb
adc
mov
push
jmp
jbe
push
push
lea
aaa
dec
xor
jmp
push
lods
lret
and
pusha
add
add
je
push
cmp
pop
rcrb
xor
and
push
mov
imul
pop
out
mov
pusha
adc
xchg
xor
mov
jnp
inc
roll
cmp
test
adc
jnp
mov
mov
lds
or
out
sbbb
sti
push
dec
mov
cli
cmp
jb
push
push
or
cmpsb
adc
loop
or
xor
dec
jecxz
dec
movsb
mov
scas
cltd
fwait
mov
inc
lahf
mov
push
roll
jl
push
lock
pushf
adc
xchg
movbe
jl
aaa
push
fwait
push
cmp
das
scas
loopne
add
mov
lahf
mov
jmp
cmp
cwtl
insb
roll
mov
jbe
orl
push
add
push
lock
xor
or
sub
push
inc
push
ret
jb
jl
and
out
lret
push
arpl
fs
xlat
push
sub
sbb
xor
rcll
mov
in
inc
fs
push
pop
stos
int3
ret
jne
add
movsb
sbb
jae
fs
fiaddl
sbb
in
and
adc
sti
cmp
inc
add
sub
adc
clc
mov
mov
cld
divl
out
push
icebp
pusha
pop
sbb
stos
mov
js
and
inc
in
push
or
lcall
movb
not
and
pop
jno
pusha
fistpll
clc
dec
xor
insl
jne
cs
add
push
repz
mov
dec
push
das
iret
push
push
je
inc
or
loop
in
push
or
and
jle
cmp
into
mov
into
push
push
pushf
sbb
mov
cmp
ret
xlat
in
call
mov
repz
cs
dec
push
or
push
ret
jle
xor
icebp
sbb
push
push
fidivl
pop
jp
adc
and
push
in
mov
xchg
je
push
cmova
cmc
sahf
sbb
sbb
and
mov
movb
hlt
adcl
mov
mov
xlat
adc
or
add
in
es
rcrb
sbb
jb
push
push
pop
sahf
xchg
les
fimuls
out
mov
mov
fucom
nop
and
pop
push
sbb
out
jecxz
push
sub
xor
or
mov
cmp
sbb
jnp
jae
je
rcr
add
adc
out
fwait
incb
cmp
jne
clc
les
or
lea
cmp
pop
je
imull
add
push
ja
sub
cltd
or
sbb
scas
dec
xor
sub
mov
pop
aam
mov
and
ds
pop
popa
xor
push
cmpsb
pop
scas
inc
xorl
mov
sbb
insb
popa
and
push
or
ja
mov
lahf
adc
pop
jae
into
or
add
cmp
imul
push
or
fmuls
fsubr
mov
out
cmpsb
cwtl
mov
or
push
mov
inc
int3
inc
xor
mov
scas
sub
dec
jnp
dec
in
and
pop
les
xchg
add
xchg
int
adc
jbe
pop
loopne
ds
add
xor
push
ret
ret
pop
cmpsl
rcl
pusha
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
jbe
rcl
xor
push
and
push
sbb
lock
leave
cmp
jne
adc
js
sub
and
imul
cmp
jne
mov
sbb
rolb
cltd
icebp
testb
sub
arpl
or
in
mov
adc
mov
add
sub
popa
add
fs
cs
fcomip
inc
lret
leave
in
pop
and
sbb
mov
jne
sbb
jmp
and
test
xor
inc
cli
add
push
ja
adc
pop
fsubp
xbegin
inc
mov
jb
mov
mov
or
pop
xor
pop
mov
mov
cmp
sub
jmp
sbbb
and
push
sbb
cld
call
bound
faddl
adc
jbe
pop
cmc
iret
add
add
and
dec
mov
ljmp
add
and
add
lea
xchg
add
jne
lea
add
lods
pop
jns
or
adc
push
addl
notb
xchg
push
or
ret
inc
sbb
fstl
mov
adc
cmpl
out
add
scas
jp
das
or
movsb
cmp
in
add
repnz
out
add
iret
cmp
adc
ljmp
mov
mov
imul
fisttps
nop
fnop
add
lods
je
mov
arpl
shrl
sub
mov
iret
rcrb
ret
ss
push
or
push
or
je
icebp
jne
jge
push
xor
mulb
fwait
or
sub
popf
pop
jne
sbb
dec
sub
les
scas
ja
mov
iret
or
cli
js
jno
mulb
fucomp
jbe
je
ret
adc
shrb
jne
mov
mov
sbb
add
push
lret
clc
dec
cmp
add
rorb
cmc
or
jmp
cmp
shrb
cmp
sbb
ror
invd
ret
shlb
or
dec
sbb
xchg
rcl
cli
or
addb
sub
pusha
mov
add
dec
add
inc
adc
inc
test
pop
xor
push
or
xchg
out
jge
loop
mov
jl
stc
test
enter
std
inc
or
mov
xchg
decl
add
push
xchg
into
pusha
imul
outsb
rorb
je
pusha
push
lea
or
fildll
arpl
scas
jo
pushl
ds
sbb
push
out
orb
int3
lock
sbb
cwtl
adc
loopne
jnp
notl
xchg
and
ret
rcrl
lods
cwtl
cmp
nop
gs
je
enter
pop
fs
orl
jecxz
and
push
ljmp
shr
clc
je
ds
ret
ja
add
jecxz
and
outsb
outsl
or
mov
je
cmp
je
imulb
add
mov
pop
stc
loop
mov
adc
iret
je
xor
adc
mov
push
push
lock
push
sub
inc
pop
inc
or
sub
pop
lds
lcall
push
addb
xchg
out
push
add
lock
adc
add
sahf
pop
in
lock
cmpsl
addb
jmp
jns
push
adc
push
rorl
add
repz
fs
cmp
or
xchg
int
mov
test
fbstp
into
add
push
mov
lahf
mov
into
lea
mov
sub
cs
sub
adc
xchg
dec
cmpsb
mulb
push
je
loopne
cmp
or
adc
testb
rcll
fs
and
jge
sub
sbb
lods
and
xlat
test
test
ljmp
sbb
adc
loopne
jecxz
outsb
scas
cmp
jle
leave
enter
js
push
sbb
jns
fsubl
dec
insb
clc
push
push
jge
jne
rolb
push
enter
add
and
cs
es
stos
popa
sub
jne
outsb
and
cmp
push
xor
xchg
add
imul
cltd
divl
stos
or
insb
jbe
imul
add
cmc
addb
push
test
sarl
sub
jo
cmp
je
sahf
lret
sbb
add
js
data16
or
cwtl
dec
push
lea
push
pop
cwtl
push
adc
xchg
add
lea
fsub
add
lret
push
or
or
or
sbb
lods
add
xchg
jbe
data16
xchg
fcoms
cli
les
jl
imulb
xchg
pop
xor
pop
add
mov
mov
push
roll
push
enter
adc
fsubrs
mov
in
jge
push
pop
arpl
and
pop
pop
xorl
inc
sbb
jmp
inc
std
mov
and
sbb
adc
sbbb
adc
js
sbb
mov
inc
or
je
sbb
inc
bound
cmp
je
ss
mov
rolb
ss
inc
lahf
mov
ud2
and
sbb
jg
mov
pop
adc
sbb
scas
xchg
jnp
mov
adc
add
pop
adc
inc
push
pop
sbb
pusha
pop
movsb
mov
sub
or
mov
addb
and
or
push
pop
push
or
push
and
fadds
cmp
fistl
into
and
fsub
adc
lds
in
cmp
ds
loope
cld
inc
aam
lret
sbbb
cmp
out
pop
add
fs
lcall
loop
fistl
mov
or
adc
push
inc
insl
push
cmp
and
jmp
sub
and
pop
or
enter
add
por
fwait
push
adc
xchg
pop
in
cmp
sar
jns
mov
lea
pop
xor
add
pop
in
pop
pop
and
mov
xchg
sti
dec
jne
mov
pop
mov
movsl
add
idivb
je
mov
int
mov
arpl
xor
xor
cmp
es
push
push
cli
pop
mov
ds
mov
cmp
in
cltd
push
xchg
mov
lods
add
pop
lock
test
mov
and
mov
mov
xchg
cmp
popf
pop
dec
or
aaa
cmc
ljmp
pop
aas
ds
popa
and
lods
movzwl
cmp
cmpsl
mov
jle
inc
mov
push
sahf
xchg
out
dec
push
rcrb
or
int3
daa
or
aas
aam
outsb
xchg
cmp
push
arpl
cwtl
cmc
repnz
push
xor
push
xor
lret
mov
shr
enter
jno
mov
pop
sub
in
xor
mov
fbstp
inc
dec
or
pop
loop
pop
xor
adc
add
jb
sbb
sub
addr16
mov
stos
sbb
mov
add
js
pop
lds
pop
and
jb,pt
dec
pop
xchg
cmp
or
vmread
mov
or
ret
xchg
movb
addr16
aas
push
pop
ljmp
xor
mov
cmp
xorb
out
mov
nop
mov
scas
dec
mov
pop
sub
pushf
xchg
rorb
pop
cmpsl
inc
pop
pop
dec
and
cmp
decb
push
xchg
dec
and
cs
int3
mov
xor
mov
mov
inc
jnp
arpl
xchg
in
sarb
jecxz
dec
xor
call
mov
loop
shlb
push
sub
in
push
jo
bound
mov
test
sbb
mov
xor
dec
stos
push
outsb
push
or
push
and
push
ss
and
adc
shrb
fmull
add
or
add
or
xchg
add
ficomps
out
std
push
and
filds
xor
mov
sub
movsb
cs
sub
dec
jle
ficomps
neg
sbb
push
cmp
ret
and
xor
and
sub
adc
lods
sarl
sbb
adcl
js
pop
or
xor
lea
pop
xor
es
adc
test
inc
sbbl
inc
mov
inc
xchg
dec
pop
inc
test
incl
loope
outsb
xorl
xor
fidivrl
sbb
inc
jmp
pushl
xchg
stos
push
pop
mov
iret
call
inc
lea
lock
ja
push
cmp
shrl
push
rorl
or
in
adc
xor
cli
jo
inc
idivb
andl
pop
out
cmp
jl
inc
push
add
adc
rorl
jl
cld
and
push
je
adc
or
imul
jecxz
fistps
xchg
cmp
cltd
pop
push
sahf
push
xchg
dec
outsb
mov
in
adc
mov
xor
sbb
cwtl
jo
lods
dec
pop
xorl
ljmp
lds
loop
and
xchg
inc
xchg
aad
add
mov
mov
orb
loopne
pusha
jno
pop
test
inc
dec
cmp
xchg
shll
sbb
jl
inc
aaa
adc
or
inc
sub
adc
adc
xor
xlat
push
outsl
rorl
jmp
add
mov
insb
dec
dec
adc
jecxz
xchg
pop
inc
push
inc
or
inc
push
and
rolb
and
je
push
out
ret
stc
mov
cld
jmp
movsb
cmp
pop
pop
frstor
mov
sbb
cmc
or
push
xor
es
sbb
sbb
or
cmp
cmp
cmp
cmp
xchg
xor
add
out
jg
ret
testb
je
and
inc
movups
cmp
dec
jl
loope
xor
xchg
push
sbb
movzbl
mov
add
mov
dec
movb
push
shl
inc
mov
mov
mov
push
inc
lret
stc
push
imul
pushf
mov
add
movsb
xor
aas
fstpl
mov
xor
xchg
and
cmp
sbb
inc
add
xchg
into
mov
add
pusha
and
add
aaa
sub
sbb
sbb
push
push
test
mov
sbb
pop
fs
sbb
cmp
test
push
filds
sbb
cmp
lea
inc
xor
aas
adc
push
push
stos
mov
xor
jp
mov
daa
movl
dec
push
test
and
in
cltd
mov
mov
nop
jmp
gs
xor
nop
data16
push
pushf
pushfw
inc
xlat
adc
aam
mov
pop
mov
test
rcl
mov
or
inc
push
mov
lock
pop
add
pop
ret
insb
mov
mov
mov
cmp
pop
pop
bound
repnz
push
pop
cmp
push
jne
addb
mov
in
rorb
in
sbb
imul
insb
mov
cwtl
mov
mov
adc
inc
adc
xchg
ret
loop
jne
cmpb
jo
inc
out
ds
aad
enter
frstor
add
xor
pop
sub
mov
in
or
add
push
cmp
cmp
and
aaa
and
aaa
push
addl
and
cmc
negl
push
loopne
add
xchg
and
in
je
lock
mov
adc
call
daa
add
adc
mov
inc
dec
inc
xchg
ss
subb
cmp
test
jl
add
push
xor
jae
movsb
mov
dec
push
clc
test
cli
shlb
test
sahf
xchg
sub
movsl
dec
push
scas
sub
mull
addb
push
push
mov
xor
test
or
add
inc
cld
sbb
pop
lock
cmp
xor
cmp
mov
sub
rcll
shll
cmp
testl
pop
jae
push
movsb
sbb
sbb
push
aas
add
vmovaps
orl
orb
xchg
cmp
pop
push
clc
or
sub
dec
push
push
rsqrtps
dec
insb
add
int3
or
add
adc
pop
add
nop
push
mov
lahf
hlt
lods
mov
orb
jge
enter
adc
sbb
out
xadd
insl
lea
cmp
jne
mov
inc
pop
pop
mov
lcall
and
mov
lea
loop
mov
inc
inc
inc
lcall
adc
or
sbb
rcl
sahf
push
pop
and
aas
xchg
inc
xlat
rcll
int
jbe
xlat
cmpsl
adc
adc
jno
and
ficoms
inc
cli
push
cld
mov
add
mov
push
aam
pop
cli
test
pop
adc
inc
insb
shr
sarb
test
popa
and
adc
repnz
adc
adc
das
cmp
sbb
xor
stos
pusha
insb
std
mov
ret
mov
icebp
decb
adc
fucom
xchg
push
add
pop
jb
and
lcall
lock
js
lods
lock
dec
pop
add
cmpsl
bound
clc
jne
xor
loop
out
movsb
push
sbb
push
pop
adc
es
ja
sub
rcl
xchg
jmp
hlt
add
jns
pop
xchg
pop
dec
jnp
js
push
push
in
testl
cmp
mov
insl
adc
notb
aas
push
push
or
sbb
and
xor
or
shrb
into
cmp
inc
mov
add
shl
fisubl
xlat
or
jns
sub
adc
push
mov
out
movsl
addl
ret
movsl
insb
sbb
loope
or
jg
call
in
mov
inc
add
and
push
add
inc
xor
out
loop
or
xor
je
pop
lods
add
adc
mov
sub
daa
ss
jl
adc
dec
adc
add
stos
das
push
mov
push
push
sub
push
pop
mov
aaa
push
lea
mov
or
inc
xor
cmp
xchg
inc
aaa
jbe
fimuls
mov
dec
push
mov
sub
or
push
mov
adc
popl
mov
mov
jo
push
fwait
sbb
mov
xor
mov
addb
nop
sbb
pop
jge
jo
out
xchg
jmp
cmp
inc
adc
sub
mov
lods
mov
push
mov
push
xchg
pop
adc
sbbb
cwtl
mov
xchg
clc
push
jmp
out
cmp
xor
pop
cli
adc
add
mov
jae
push
inc
shr
and
aam
popl
dec
cmp
lea
mov
lock
inc
push
dec
dec
cmp
xchg
sub
xchg
push
push
rclb
and
inc
push
dec
lret
lcall
inc
sub
xlat
aas
mov
movsb
pop
cmp
or
push
or
xor
pusha
out
xor
incl
xor
imull
lock
fs
dec
sbb
cmpsl
out
pop
test
cld
adcb
pop
in
inc
pop
shrb
fiadds
out
aas
sahf
mov
lahf
cmpb
push
push
add
inc
mov
cmp
xchg
jbe
and
cmpb
loope
or
or
xchg
aaa
sbb
xor
outsl
sbb
jmp
or
xchg
sub
dec
sub
mov
dec
ret
lret
add
insb
nop
nop
adc
fnsave
shll
les
lock
mov
mull
xchg
nop
sub
xor
mov
push
adc
int3
add
jae
rorl
in
adc
mov
cmp
and
insb
dec
add
imul
or
or
or
mov
mov
bnd
push
into
std
xchg
pop
es
jl
movl
pop
pop
push
push
jl
or
insb
or
add
data16
xor
sub
xchg
sbb
mov
in
dec
mov
lods
or
sbb
push
gs
fwait
mov
and
push
loopne
clc
push
testl
mov
iret
jae
imul
dec
push
mov
push
rorb
adcl
or
jge
mov
pop
lods
adc
fstl
mov
jge
and
mov
sbb
pop
sub
add
adc
sahf
test
dec
lds
in
mov
mov
shrl
jo
in
xchg
xorb
cmp
orps
push
cmp
testl
int
add
or
push
xor
jo
lcall
or
scas
inc
push
push
in
sub
dec
loop
pop
dec
xchg
sbb
jbe
push
push
and
sbb
rolb
mov
pop
icebp
outsl
das
insb
shl
add
ret
div
push
cmp
lods
imul
push
cmpb
loop
push
and
mov
out
push
push
jbe
add
adc
add
mov
sti
dec
ja
je
or
je
or
sub
sub
scas
adc
adc
cmp
stos
jl
add
adc
push
or
add
fists
sbb
lcall
mov
sbb
cli
push
jmp
cmp
movsl
test
bound
sub
cmp
roll
inc
mov
dec
mov
push
sti
scas
movzwl
addl
push
call
fdivrs
adc
ret
and
mov
ret
and
jmp
mov
test
gs
add
je
loope
mov
ret
movsb
push
add
or
adc
push
dec
dec
cmp
das
ret
test
movsl
and
es
mov
faddl
add
push
mov
and
pop
filds
mov
pop
test
insb
loop
jp
cmpl
aad
and
hlt
add
push
inc
push
adc
in
mov
or
ds
out
daa
or
push
adc
lods
loopne
das
inc
pop
xchg
push
pop
jo
inc
imul
not
imull
fisttpll
jge
inc
or
push
inc
aas
ja
imul
imul
sub
in
and
mov
or
push
add
loop
push
mov
dec
paddsb
pop
out
test
mov
mov
into
hlt
rorl
pop
test
adc
pop
fcoml
pop
add
pusha
xor
stc
sti
je
inc
bound
mov
inc
push
inc
mov
shlb
pop
loopne
sbb
fs
fs
aam
stos
fsub
nop
sbb
enter
ss
inc
inc
or
push
push
jecxz
inc
data16
ficoms
call
mov
loope
mov
pop
stos
mov
loope
clc
ds
jbe
mov
inc
dec
add
pop
das
xchg
les
je
test
and
push
push
and
test
jns
sbb
sbb
dec
add
jo
nop
data16
sbb
xchg
push
lock
out
push
xor
push
push
call
fdivr
outsl
inc
push
mov
add
jge
scas
mov
sbb
sbb
enter
faddl
in
mov
pop
subl
mov
add
push
mov
imul
movsl
aam
int3
inc
mov
nop
sub
addl
sbb
mov
mov
adc
cmp
add
and
xchg
mov
cwtl
lcall
xchg
cmc
mov
fisubl
mov
sbb
rclb
fwait
cmc
inc
sub
or
popa
push
mov
jnp
icebp
mov
adc
or
dec
test
jmp
xor
imul
jmp
jle
xchg
xchg
movsb
sub
xchg
mov
inc
shll
nop
sahf
je
push
xor
xor
addr16
xchg
fisubl
push
mov
xor
mov
les
pushf
orb
lcall
fldt
daa
icebp
xlat
fwait
adc
xor
inc
enter
in
cmp
inc
push
jne
jle
sbb
or
lahf
dec
in
ss
imul
in
nop
sahf
cmp
test
sub
adc
and
mov
nop
orl
push
subb
push
and
mov
je
and
fucomip
add
add
or
mov
lds
pop
movw
cmp
or
pop
stos
pop
adc
dec
inc
dec
adc
inc
lea
cmp
cmp
in
sbb
push
cmp
fs
das
cmpsl
xor
or
push
push
mov
mov
add
cli
cmp
xor
mov
dec
push
fsubrs
add
cmp
sahf
mov
test
add
jg
inc
aam
fmull
int
call
xor
push
in
add
mov
mov
sbb
add
incl
jb
or
in
les
gs
xor
inc
pop
stos
pop
shrl
add
pop
xor
mov
mov
add
xchg
dec
cli
jne
pop
jp
inc
mov
push
mov
lret
nop
dec
cld
pop
xor
mov
daa
call
xor
sbb
test
cli
les
cmpb
adc
mov
lock
push
add
xchg
stos
lcall
rorl
cmp
aam
fdivs
das
and
pushf
int3
push
add
xchg
push
xchg
sbb
dec
cwtl
pop
fs
or
pushf
loopne
add
push
pop
jg
dec
jne
mov
in
adc
loopne
shlb
push
filds
add
call
dec
xchg
xchg
cmpl
cmp
adc
in
xchg
lock
jg
xor
cmp
in
mov
sti
cs
sub
jne
es
push
cltd
pop
sub
aam
or
imul
ret
mov
mov
cs
rcll
ja
push
movsb
sbbl
push
jns
or
mov
js
je
xchg
js
cmpsl
push
jg
mov
or
inc
loope
cmpsl
outsb
sarb
sbb
xchg
inc
int
push
inc
fcoms
add
sbb
pop
add
ret
inc
jecxz
lea
scas
dec
adc
and
add
or
adc
pop
add
xor
and
mov
fcoms
add
push
or
adc
jae
sbbb
inc
cs
movb
push
jecxz
cwtl
sbb
inc
mov
add
jo
xchg
sub
les
inc
jle
push
push
adc
rcll
jne
add
mov
mov
sbb
fcoms
adc
fcoms
adc
pop
sbb
cmp
sub
push
push
inc
xor
rclb
sti
add
fchs
inc
inc
add
sub
add
notb
sbb
out
cmp
sub
mov
adc
hlt
sbb
pop
and
push
out
sub
test
rorb
or
in
aaa
stos
mov
adc
xchg
mov
call
je
into
hlt
je
sub
sub
mov
or
cli
call
dec
fadds
pop
movsb
jmp
sbb
jnp
sbb
xchg
pop
add
xchg
or
punpcklbw
sub
mov
mov
mov
aam
fstps
sti
and
add
lock
and
push
push
dec
dec
out
es
and
lock
push
cmp
add
and
arpl
addl
stos
jo
mov
adc
inc
dec
movsb
test
cld
mov
bound
dec
sahf
sub
or
jo
inc
cmp
mov
stos
fs
sbb
pop
jmp
dec
adc
movsb
xchg
fsin
in
add
outsl
pop
inc
mov
aam
inc
add
inc
push
add
stos
add
mov
sbb
ja
add
adc
and
mov
push
je
lods
sbb
out
int3
adc
push
cld
push
cmp
cmp
fdivrp
mov
scas
pop
nop
add
repz
nop
lret
and
pop
inc
loope
mov
push
jae
push
jg
sub
repnz
jl
jb
xor
adc
fcmovbe
mov
in
pop
xor
dec
or
ficomps
dec
push
push
xor
mov
cmp
and
pusha
mov
pop
mov
inc
sbb
xchg
out
xchg
push
pop
inc
xor
and
and
or
adc
enter
push
fs
jb
sub
inc
pop
sub
clc
or
hlt
xchg
cmc
ja
clc
push
fisubs
add
mov
leave
test
push
xchg
xlat
xor
adc
sub
xor
jns
xlat
pusha
and
adc
or
sbb
lret
push
inc
cmp
or
add
test
ret
xchg
xlat
dec
jo
mov
cs
inc
lret
pop
inc
xor
inc
fwait
inc
subl
inc
faddl
sub
or
inc
xor
dec
dec
in
cmp
xor
dec
imul
push
mov
jb
sub
addr16
mov
out
jmp
insl
pop
adc
fnstenv
xchg
and
push
imul
and
mov
cmp
aaa
inc
cmp
frstor
cmp
call
push
dec
ljmp
call
sbb
movsl
push
test
push
call
add
mov
in
loopne
movsl
les
push
sbb
insb
movsb
dec
mov
jmp
pushl
dec
inc
test
add
mov
inc
add
pop
lret
dec
loopne
inc
js
xor
add
push
or
cmp
or
lock
push
sbb
cwtl
push
movsl
shll
xor
sbb
ret
push
sbb
cmp
adc
cmp
cmp
add
dec
fmuls
or
jecxz
dec
shrb
xchg
dec
loopne
lret
jl
clc
sub
pop
or
dec
jno
je
xchg
in
divsd
les
adc
mov
lret
enter
scas
in
push
imul
gs
jns
cmp
pop
mov
je
add
inc
sbb
cmp
out
in
popa
add
or
jo
mov
lock
jle
sbb
out
int
cmp
lea
push
aaa
repz
jl
or
out
pop
push
loopne
push
pushf
lock
and
iret
lahf
pop
add
push
or
test
mov
adc
int3
jns
xchg
add
out
mov
jne
cwtl
sub
nop
add
pushf
loopne
push
aaa
in
dec
dec
xchg
js
mov
das
sub
int3
or
sub
push
dec
rcrb
pop
fmull
dec
or
loope
push
test
or
in
cmpsb
cmp
and
jmp
sbb
in
mov
scas
jmp
add
test
mov
lret
xchg
push
mov
mov
loopne
repz
cld
add
mov
xchg
cld
jge
lds
add
jns
jne
neg
xor
xor
jecxz
mov
andb
mov
ficoms
add
out
aam
or
iret
jns
dec
cmp
cli
sbb
xor
jg
adc
jne
push
push
add
lcall
xchg
jp
mov
pop
pushf
jb
sub
inc
inc
push
mov
jae
scas
pop
nop
pop
and
scas
push
jl
mov
fs
mov
or
shl
mov
pop
cmp
jne
sub
stos
fldl
adc
lock
imul
dec
dec
popf
inc
jp
sbb
push
sbb
push
jo
and
mov
mov
xor
cmp
in
or
inc
popa
mov
jl
bound
sbb
mov
jp
in
fbld
enter
jns
sbb
cmp
or
je
aam
cs
mov
je
loope
or
mov
rolb
out
pop
and
es
int3
call
popf
or
mov
inc
pop
stos
jle
jb
cmp
mov
sti
push
push
mov
cmp
pop
and
and
nop
push
jl
fidivrl
imul
loopne
outsl
sbb
js
jbe
mov
fidivrs
push
or
in
xchg
push
out
push
add
decl
and
push
xchg
and
or
dec
add
xor
pop
sbb
stos
add
push
and
cmp
sub
shr
push
inc
xchg
push
sub
pop
adc
mov
cmp
ja
inc
lahf
add
mov
call
jbe
push
xlat
push
fsubrs
cmp
stc
sbb
xlat
adc
into
cmc
scas
adc
jmp
lods
fnstenv
fsubrs
pop
sbb
fnstenv
dec
sbb
adc
vmovshdup
sub
dec
test
adc
imul
or
cmp
roll
push
xchg
xor
stos
in
xor
addl
jle
add
or
test
mov
cmp
sbb
cli
add
rorb
and
inc
push
sub
das
sub
adc
xor
cmp
adc
int
fwait
cmp
sub
xor
or
push
push
jmp
lock
adc
jmp
sbb
jb
dec
dec
inc
cmp
xor
jmp
aad
ljmp
in
dec
push
adc
push
xor
mov
adc
stc
iret
iret
and
add
cmp
mov
leave
add
sbb
out
jnp
push
and
jae
lock
loope
inc
or
out
popa
or
js
rolb
and
lahf
pop
push
xchg
add
lret
out
sub
xchg
inc
ret
adc
or
push
jns
xlat
jb
cltd
pop
enter
add
adc
enter
enter
mov
inc
jg
and
adc
out
repz
jmp
hlt
and
or
in
test
mov
push
add
mov
push
push
mov
cmp
jb
lea
cmp
mov
shrl
push
mov
rdmsr
or
sub
loope
aaa
cmp
add
mov
add
jle
sbb
cs
sub
or
jmp
ficompl
or
inc
loopne
push
je
push
or
inc
or
lock
add
mov
dec
fdivs
andl
lea
push
push
and
xchg
push
or
pop
inc
xchg
or
mov
fcomp
test
test
jns
mov
fcmove
push
jb
jecxz
jns
jo
xchg
xchg
ret
dec
lea
mov
dec
adc
xchg
or
sub
adc
pop
add
ret
pop
or
out
in
enter
aaa
xor
gs
int
add
inc
adc
jne
inc
mov
jle
or
cmpb
or
sub
push
stos
inc
adc
lods
mov
adc
jp
dec
lret
mov
pop
ret
lcall
scas
and
xor
imul
dec
sbb
imul
xchg
dec
pop
and
jne
mov
test
or
xchg
xchg
add
movsl
mov
stos
xchg
mov
jmp
pop
mov
mov
add
nop
leave
lret
jg
xor
dec
xchg
loop
mov
mov
icebp
movsb
mov
nopl
push
les
dec
fdivr
pop
rcrl
pusha
clc
push
add
and
pushf
dec
imul
adc
inc
popf
jp
push
adc
push
sbb
push
loopne
pop
push
pop
mov
rep
std
mov
je
and
sub
mov
insb
fs
adc
movl
mov
dec
xor
pop
fisttpl
push
sbb
sbb
add
lea
mov
rolb
cmp
enter
popa
dec
mov
ss
xchg
icebp
aas
inc
pop
ret
push
mov
ficoml
pop
movsb
sub
adc
add
test
xor
loope
in
mov
ds
sbb
inc
xchg
jecxz
jb
in
mov
dec
and
mov
xlat
mov
clc
xor
inc
dec
roll
rclb
push
and
fcompl
andps
cmp
mov
addl
sub
je
cltd
cmp
fsubr
adc
mov
add
leave
fadds
push
xor
ret
fcmove
ljmp
outsb
push
clc
sti
add
rcrl
mov
fisubs
push
call
clc
imul
xor
lods
mov
mov
repz
cmp
and
clc
lea
ret
push
push
shlb
sbb
push
inc
inc
cmp
jb
in
loope
loopne
jg
dec
jb
mov
xchg
fs
hlt
lcall
imulb
cmp
pop
fadds
lret
out
lea
or
les
or
xor
push
cld
push
xor
xchg
int3
cmp
mov
inc
je
add
test
movsl
rcr
fiaddl
mov
mov
cmp
cltd
push
mov
inc
std
pop
add
sbb
gs
mov
imul
mov
lret
inc
push
pop
sbb
out
adc
imul
mov
jb
inc
inc
or
dec
std
inc
je
or
ret
mov
aam
inc
and
or
leave
push
lahf
cmp
inc
lods
jle
dec
add
jmp
mov
test
push
push
aas
popf
into
mov
out
and
divb
push
shll
push
xor
dec
scas
pop
lret
sub
lcall
jl
or
pop
inc
in
aaa
faddl
das
das
das
mov
sub
xor
xor
xchg
xchg
xchg
xchg
sbb
cmp
inc
push
xchg
mov
cmp
push
cmp
sbb
rorb
mov
jno
ljmp
insl
std
lods
rolb
cld
cltd
test
mov
into
sub
decl
jno
mov
mov
scas
or
add
lods
ficoms
js
loopne
xor
mov
ljmp
add
adc
push
mov
ss
iret
fidivrs
jns
pop
sub
icebp
mov
cmp
pop
or
js
insb
insl
inc
push
sbb
imul
scas
test
inc
sub
add
push
jp
xor
or
xchg
xor
add
sbbl
inc
add
and
pusha
jl
loopne
pushf
add
mov
cmpsb
add
push
xor
les
movsl
xor
sahf
xchg
je
or
je
xor
je
cmp
cmp
jb
mov
or
sti
push
outsl
adc
cmp
insl
inc
xor
mov
adc
aad
sbbl
sub
lret
and
pop
cmp
add
aas
sub
dec
pop
ja
aam
pop
jecxz
rep
roll
inc
xor
or
paddq
int
or
sbb
cmp
jae
nop
idivl
pop
popa
lock
add
sbb
call
arpl
mov
jnp
and
jne
push
push
push
xor
adc
push
les
dec
or
cltd
rep
add
fwait
int3
loopne
adc
js
fnsave
data16
inc
sub
lcall
les
add
cmp
inc
mov
xchg
sbb
shll
testb
jbe
sbb
aam
xchg
mov
xorb
pusha
dec
jg
xlat
xchg
sarb
push
xor
cmpsb
sub
mov
xor
xor
lock
inc
and
xchg
and
add
xchg
adc
lret
arpl
arpl
or
inc
sbb
mov
addb
mov
or
cmp
sete
xor
mov
jmp
mov
and
push
inc
adc
js
ja
and
cld
sub
cltd
add
ds
cmpb
into
mov
repnz
mov
mov
mov
clc
pop
das
xor
test
xor
add
sbb
add
jnp
add
push
push
aas
or
rcrl
mov
pop
adc
sbb
in
mov
insb
nop
lcall
push
adc
mov
cmpsb
orb
mov
push
mov
outsl
mov
and
pusha
sub
int3
add
jge
jo
push
cmp
icebp
imul
dec
rclb
imull
clc
fcmovbe
mov
adc
pushf
sbb
mov
add
adc
xor
push
add
outsb
bound
lcall
mov
leave
lea
sbb
and
sarb
ret
add
and
mov
inc
sbb
add
movl
push
roll
xchg
dec
xchg
xchg
xchg
jo
inc
cmp
aas
pop
pop
jp
push
lahf
mov
add
push
and
je
inc
fisubs
js
testl
clc
je
pop
cltd
cmp
jl
pop
sbb
dec
and
gs
jo
stos
push
jo
sub
icebp
ss
push
sub
cld
add
dec
sub
sbb
xor
sarb
adc
lods
fisttpl
sub
xor
call
aad
mov
add
dec
mov
leave
adc
inc
dec
jb
inc
mov
mov
subl
clc
adc
pop
sub
mov
adc
dec
adc
inc
insl
jge
shrb
inc
pop
nop
sub
js
dec
inc
add
add
pop
pop
add
push
add
ljmp
adc
add
nopl
movsl
add
es
xor
mov
lret
dec
sub
daa
movsb
loope
insl
push
adc
xchg
push
and
shrl
push
cmpl
orl
test
cmp
pusha
lea
mov
outsb
cmp
je
and
cmp
shrb
aas
sub
sar
cmp
jbe
or
add
shlb
jo
call
inc
pusha
in
adc
push
and
sub
ss
push
leave
addl
movsl
ficoms
movsb
inc
cmp
or
lahf
pop
sub
and
shrb
js
fiadds
add
lock
sbb
pop
push
lea
mov
fdivp
test
mov
push
imul
or
push
aam
jb
jo
mov
loopne
cmp
lock
jnp
in
mov
aad
test
and
lea
xchg
mov
or
push
or
dec
xchg
or
xchg
nop
shll
xor
push
aas
imul
cmp
cmpsb
iret
pop
lods
add
mov
inc
pop
pop
sbb
or
inc
imul
call
loopne
leave
or
cmp
or
xor
mov
push
inc
sbb
enter
ljmp
dec
add
jne
sub
outsb
negb
add
cmp
lahf
addb
add
cmp
jb
into
xchg
call
mov
pop
icebp
or
ret
or
pop
jmp
xor
jae
sub
push
push
add
add
xchg
and
sbb
add
rclb
or
in
xlat
add
test
push
cs
test
fwait
sbb
cmpsl
je
jmp
pop
xchg
push
pusha
jnp
js
cmpb
adc
shld
jle
sub
rolb
push
or
sub
into
add
daa
xor
mov
xor
ret
pop
lock
pop
movsl
lods
pop
xor
jmp
test
sub
or
movsl
push
xor
adc
inc
and
mov
push
gs
movsb
mov
dec
add
pop
jne
jo
or
rol
pop
cmp
enter
push
pop
mov
sbb
push
rcl
sub
cli
jbe
test
sub
or
jecxz
mov
pushl
push
jmp
fimuls
sub
sbb
mov
aam
outsb
roll
call
xchg
imul
and
mov
inc
mov
cmpsb
out
mov
pop
mov
ret
ljmp
fisubl
or
cmp
sbb
or
popf
dec
push
add
dec
iret
mov
dec
outsb
pop
in
pop
mov
insb
mov
mov
or
adc
and
addr16
mov
sub
mov
cmp
mov
ja
mov
add
and
dec
inc
movl
pop
xor
rorb
mov
inc
std
push
mov
pop
sbb
notl
xor
xor
mov
inc
int
push
adc
add
movl
dec
cmpsl
pop
aad
cmp
imul
sbb
test
cmpsb
mov
and
mov
and
push
or
inc
aas
and
nop
inc
fsubl
enter
lock
pop
enter
sub
and
enter
enter
pop
sub
mov
and
enter
in
add
adc
pop
or
jmp
push
mov
pop
xor
lret
inc
push
pushf
mov
xor
or
xor
mov
mov
fsub
pop
stos
or
stc
adc
xor
jmp
cmp
fadd
in
sarb
cld
or
int
or
pusha
push
test
add
shll
adc
inc
inc
add
adc
sbb
mov
sbb
xor
adc
xchg
clc
add
mov
ja
pop
adc
inc
adc
sbb
test
test
adc
jae
pop
movb
sub
out
and
dec
pushf
sub
outsb
push
inc
adc
adc
lret
les
mov
sub
xor
cmpsb
rorb
jae
add
clc
rolb
dec
and
ja
hlt
add
jnp
adc
pop
out
dec
sub
push
jae
jne
jge
lea
mov
int3
pusha
mov
hlt
test
add
out
les
ds
cmp
and
filds
pop
push
mov
inc
and
sbb
and
or
pop
mov
push
sub
dec
out
and
rolb
and
iret
cmpsl
test
out
pop
ljmp
cmp
cmpsb
bound
add
lea
mov
addb
sub
push
in
shlb
ds
pop
test
jno
add
lock
stos
lea
or
and
leave
ret
push
adc
push
add
or
les
cli
add
out
lea
hlt
xor
jne
push
loop
popa
add
mov
repnz
fistps
mov
inc
sub
add
sbb
and
or
and
mov
or
bound
push
jo
pop
adc
stos
lock
subb
rorl
dec
sbb
fnstsw
pop
xchg
adcb
cmp
shl
pop
call
dec
repz
xchg
push
pop
lcall
push
test
or
je
cld
dec
cltd
loopne
and
clc
jnp
das
test
pop
push
into
mov
push
cmpb
cltd
ret
imul
jae
outsb
js
insl
mov
jae
xor
mov
test
jg
cmp
jecxz
lods
mov
xor
add
test
cmp
mov
je
insb
lock
push
inc
jmp
add
adc
loop
add
call
fisttpl
push
in
jle
mov
xor
sbb
in
cmp
jg
aaa
and
lea
andl
and
dec
add
inc
inc
dec
test
loop
add
aaa
inc
add
adc
call
mov
add
jo
pusha
popa
leave
in
inc
mov
pmulhuw
jo
or
lcall
add
imul
jmp
push
sub
aad
xchg
mov
xor
lock
or
pop
inc
loopne
sbb
leave
add
inc
mov
mov
outsl
pop
cmpl
test
dec
inc
jg
jmp
sbb
and
sub
lock
scas
aam
pop
or
push
test
push
or
dec
mov
xchg
lret
inc
xchg
xchg
fdivl
pusha
lock
or
mov
sub
ret
xchg
leave
jmp
mov
es
add
push
orl
data16
add
fistpll
roll
pop
push
xor
mov
mov
cmpsb
je
pop
out
push
fs
dec
mov
mov
cmp
andl
adc
push
jb
ret
xor
jnp
jmp
jl
fs
movsb
fwait
movsb
mov
cld
xchg
ds
mov
sbb
xor
mov
xchg
test
and
inc
ret
gs
fmuls
arpl
push
jns
adc
add
cmp
out
inc
push
cwtl
mov
orl
sbb
ds
sub
and
gs
shll
and
mov
std
jg
dec
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
push
jae
ret
aas
stos
mov
sar
bound
js
cmp
mov
jns
fcompl
sbb
xor
je
cmp
je
ret
js
pop
push
push
mov
decl
sbb
push
imul
rcrl
ret
imul
pop
inc
sub
add
push
leave
or
sbb
and
jmp
add
cld
gs
hlt
mov
cmp
jl
pop
mov
xor
jle
cmc
das
mov
ss
jge
decl
data16
pusha
dec
ret
das
jne
fwait
mulb
mov
mov
andb
lods
sbb
mov
mov
inc
add
sub
add
cld
lock
push
or
xchg
or
push
add
mov
pop
and
mov
dec
xor
orl
lock
mov
pop
outsl
xchg
pop
movsb
add
jge
xor
test
popa
clc
or
mov
jne
pusha
sbb
xchg
and
scas
sub
push
lock
push
push
in
mov
mov
sbb
jle
cmp
iret
lock
sbb
jne
leave
cmp
mov
rorl
jo
push
mov
frstor
test
out
dec
sub
lret
mov
fmuls
or
push
mov
in
and
shl
xchg
inc
add
sbb
in
dec
xchg
adc
mov
lea
arpl
dec
or
push
pushl
add
pop
adc
mov
hlt
jg
inc
sbb
pop
popa
inc
mov
jp
adc
xchg
fisttps
sbb
movsb
shlb
or
jne
xchg
pop
mov
add
xor
adcb
sbb
push
mov
jb
adc
rolb
adc
push
push
pop
insb
push
sahf
out
pusha
fs
push
lret
test
xor
ljmp
xchg
int3
jge
and
sbb
repnz
in
sbb
mov
ja
shll
dec
adc
add
add
adc
jne
mov
pop
and
cmp
mov
sbb
sbb
sub
add
pop
and
cmovle
jp
push
xor
xor
mov
imul
je
loope
cmpsl
or
jne
inc
mov
jmp
cmp
lock
jl
iret
add
call
jle
in
in
stos
call
int3
mov
sub
jle
and
push
xor
sub
jb
icebp
loopne
aam
test
xor
popa
pop
mov
and
and
jo
sub
add
cmp
dec
and
push
or
leave
inc
jle
mov
pop
mov
subb
icebp
movq
xor
add
cmp
enter
roll
adc
xchg
cld
pop
lcall
inc
push
lds
jmp
inc
shrb
jmp
cmp
dec
sti
insl
lds
popa
or
mov
orb
sbb
repnz
dec
mov
arpl
arpl
push
xchg
xchg
in
sub
push
push
add
cmp
push
test
sbbl
push
pusha
gs
pop
je
sbb
lods
adcb
push
dec
sub
push
imul
fs
icebp
sti
loop
arpl
movb
cmp
loopne
sub
les
pop
stos
loope
mov
hlt
dec
dec
xor
xchg
push
inc
pop
cmpsl
test
xchg
pop
fmull
lea
nop
or
jg
mov
mov
cmp
je
or
je
cmp
sub
adc
and
sub
clc
rolb
cmp
push
pop
and
pop
mov
lea
hlt
movl
arpl
xor
and
or
and
mov
roll
dec
add
inc
and
pusha
jne
or
adc
in
mov
and
push
or
push
inc
repnz
mov
and
mov
shll
fnstenv
pusha
shlb
adc
add
or
call
cmp
inc
rcrb
jno
add
or
ficompl
lock
mov
mov
push
dec
inc
and
pusha
pop
push
adc
fs
inc
xor
jo
stc
es
jns
or
repz
mov
adc
arpl
loope
or
mov
aaa
ret
pop
fadd
xor
dec
repnz
dec
fmull
fdivs
mov
cwtl
mov
add
or
or
pushf
pop
xchg
sbb
addl
cld
mov
pop
lret
cmp
ss
or
dec
mov
iret
push
arpl
int
fildll
and
sub
sub
inc
jo
xor
andl
add
push
cmp
lahf
mov
sub
push
mov
pop
xor
into
xor
int
lcall
sub
ret
fcomps
jl
daa
inc
adc
lods
pop
cwtl
adc
push
pop
inc
pop
sub
push
cs
jmp
mov
sub
push
mov
fimuls
clc
push
add
dec
ficomps
ret
test
hlt
sahf
fisttps
add
cmp
inc
nop
sbbl
into
xor
jae
jg
movsl
jne
mov
mov
jg
aam
stos
push
mov
rclb
sub
sbb
fistl
shrl
ds
add
into
mov
in
cmp
int3
fisubs
fdivs
xchg
adc
dec
add
mov
insb
add
or
rcrb
pop
data16
jle
pop
lret
scas
jmp
pusha
mov
popf
dec
sahf
scas
mov
adc
jle
insb
ret
sub
fldl
cmp
or
int3
push
jb
fdivr
add
stc
cwtl
mov
cwtl
and
cwtl
cwtl
fadd
es
jmp
push
popa
popa
jae
negb
lret
inc
pushf
mov
ret
loopne
inc
add
add
pop
inc
jb
jmp
andl
lret
add
xchg
mov
inc
xchg
add
mov
adc
jmp
fiaddl
inc
push
or
ss
cmpsb
push
out
in
sbb
sub
push
add
add
add
jb
xchg
ret
adc
loop
add
sbb
jae
sahf
push
mov
cltd
leave
xchg
dec
sbb
sahf
lret
push
inc
sbb
test
enter
divb
dec
sub
ret
sub
ret
sub
lock
inc
jns
or
hlt
push
xor
mov
inc
loope
cmpsb
jle
dec
je
push
inc
and
pop
dec
mov
jo
sub
stos
add
fsubrs
scas
outsl
dec
mov
push
fldl
pop
add
fstpl
add
fistl
cld
adc
cmp
adc
cld
cmp
iret
jne
push
divb
or
jne
add
repz
jne
or
push
ss
rorl
out
or
pop
andl
mov
inc
and
icebp
push
inc
dec
adc
sbb
imul
and
dec
or
mov
int
in
aam
arpl
in
pop
sub
or
or
jbe
mov
in
pop
aam
dec
sbb
cmp
mov
mov
or
rolb
cmpsl
mov
insb
lds
add
fdivs
test
sti
dec
push
dec
add
jne
movsl
test
push
pop
push
sbb
bound
daa
aam
popa
mov
push
sahf
pusha
mov
pop
cmp
add
aam
pushl
inc
repnz
repnz
or
sti
jbe
mov
fmul
movsl
pminub
jp
stos
aam
or
push
pusha
pop
mov
lock
jnp
nop
andl
xchg
imul
sub
add
push
pop
mov
mov
jmp
outsb
and
or
movsb
push
jbe
mov
inc
add
fcmovbe
daa
pop
in
sbb
cs
jge
and
aad
dec
mov
stos
fldt
pop
push
push
cmp
push
and
cmp
enter
xchg
add
jl
sbb
push
pusha
inc
pop
pmulhuw
xchg
add
and
jo
iret
jmp
jns
or
incl
std
inc
fiadds
jno
mov
and
add
pop
test
ret
push
inc
dec
sbb
push
push
mov
push
shl
nop
push
push
adcb
adc
sub
push
stc
lock
add
inc
xchg
arpl
test
imul
mov
or
mov
lods
pop
pusha
daa
sbb
shlb
mov
outsl
dec
dec
test
loop
shlb
inc
jno
add
in
add
faddl
or
imul
and
push
push
les
mov
add
stc
cld
mov
mov
or
xor
enter
or
insb
xchg
adc
imul
and
fmuls
and
dec
enter
jo
loopne
mov
nop
orb
adc
pmulhuw
adc
nop
and
or
adc
in
shlb
test
daa
sub
les
daa
daa
daa
sarb
mov
test
pop
mov
mov
push
loope
jb
mov
xor
mov
and
in
push
push
push
fildll
xchg
js
push
adc
push
xor
pop
popf
push
rolb
xlat
pop
ret
icebp
lret
in
add
ret
jge
arpl
cmp
bound
loop
daa
cwtl
sbb
fwait
adc
pop
mov
cwtl
or
add
js
add
add
sbb
ljmp
or
aam
push
jae
cmp
jp
push
push
add
push
cs
push
icebp
scas
or
sub
mov
add
lea
jmp
inc
push
jb
push
xchg
push
pop
enter
addb
lods
mov
call
shl
popf
push
and
pop
add
ljmp
push
push
or
or
mov
ds
shlb
mov
xor
test
mov
mov
push
mov
xchg
xchg
push
call
cmp
push
aad
data16
sbb
add
daa
enter
stc
push
enter
or
hlt
dec
jl
pusha
mov
cmp
dec
xchg
mov
jbe
mov
mov
cmp
flds
mov
add
cld
mov
rolb
pushl
add
adc
xor
and
inc
inc
jnp
push
shld
cmp
push
dec
and
sub
pop
dec
adc
out
mov
test
dec
inc
ja
mov
rcrl
ja
ss
cmpsb
sbb
adc
fs
fdivrl
xchg
dec
push
pusha
addl
cs
dec
mov
inc
out
sub
push
jge
int3
adc
pop
jle
cmp
je
shrb
inc
pop
cmp
pop
rolb
mov
cld
pop
xchg
pushf
mov
push
jmp
xor
loope
jns
mov
stos
sbb
xchg
adc
mov
les
xchg
jne
loope
push
dec
movsl
xchg
inc
sbb
jge
cs
mov
mov
pop
shlb
in
and
inc
repz
jge
mov
lret
pop
mov
sub
gs
stos
rolb
or
fdivrs
ljmp
push
fisubl
iret
jecxz
pop
popf
aaa
clc
sub
mov
jle
mov
outsb
dec
cmp
add
inc
push
rolb
and
adc
and
ljmp
dec
cmp
fwait
call
inc
or
cwtl
mov
mov
cmpsb
mov
shll
add
cmp
iret
in
lcall
push
mov
daa
daa
ret
add
aad
add
shrl
clc
into
inc
or
loope
or
mov
add
sbbb
test
pop
fcomps
pushf
jae
push
mov
jl
adc
jmp
ror
adc
in
jbe
or
xorl
icebp
mov
bound
sbb
or
test
and
mov
push
jmp
clc
inc
xor
xchg
loope
ljmp
mov
inc
and
jecxz
nop
sub
ds
or
xchg
push
mov
or
sub
xchg
xchg
popf
mov
mov
imull
pop
movsl
popa
mov
adc
sbb
xchg
nop
add
pop
add
push
mov
int
mov
jmp
dec
test
push
loope
stos
dec
xchg
push
hlt
setne
mov
add
in
cmp
jo
jbe
fldt
int
pusha
dec
dec
pusha
in
jmp
sbb
insb
dec
loop
rolb
jp
mov
cld
jbe
pop
xor
and
shrb
jp
rcl
loope
adc
aad
adc
cs
mov
push
mov
or
sub
inc
jbe
and
add
dec
loopne
adc
js
add
movl
rcrb
xchg
jp
fistpll
ss
mov
sbb
jo
fs
and
mov
ret
pop
pop
popa
push
xchg
mov
mov
rcr
sbbl
aaa
ret
fisttpl
mov
inc
sbb
add
inc
leave
rorl
roll
pop
ret
in
mov
shr
and
loopne
lret
inc
test
ret
cltd
and
fisubrl
mov
not
aaa
jno
jns
mov
adc
push
xor
push
sub
pop
ret
repz
add
xchg
popf
xor
mov
subb
sti
inc
push
mov
mov
dec
jl
push
fdivr
adc
mov
lret
incb
sub
add
dec
jge
in
adc
cmpsb
inc
adc
push
mov
jnp
sbb
or
das
shll
sbbb
mov
jne
mov
cltd
je
loopne
or
mov
mov
or
add
push
pop
adc
mov
cmpsb
inc
xor
xor
xor
xor
pop
inc
push
cmp
lock
enter
mov
cmpl
in
push
ss
lea
or
xchg
add
cs
push
je
and
mov
rcll
mov
sub
sbb
jne
les
dec
pop
xchg
movsb
ljmp
adc
mov
pusha
jge
popa
jnp
xor
loop
xchg
ljmp
sbb
jg
inc
mov
xchg
flds
xor
outsl
add
fcoml
and
sahf
sbb
jne
cmpsl
clc
jno
in
cmp
ret
xor
clc
pushf
addb
mov
fstl
sbb
add
shlb
iret
or
stos
push
rcrl
and
ret
sbb
outsb
clc
or
mov
scas
or
fnstcw
jo
dec
cmc
sarl
or
and
insl
jns
call
push
orb
lahf
dec
mov
lea
loopne
jne
loope
adcl
push
jns
and
push
jo
mov
jbe
or
sub
xchg
inc
mov
pop
popa
sub
clc
or
adc
js
inc
xlat
xchg
ret
inc
insb
stos
out
jns
rorl
repz
inc
call
testl
pop
aaa
addb
call
push
xchg
insl
pop
arpl
sbb
stos
dec
adc
dec
fs
jns
mov
and
movsl
addr16
and
leave
adc
sbb
sub
xchg
out
scas
add
xchg
xorb
sbb
inc
sbbb
cwtl
cmp
xchg
dec
push
cmp
pop
pop
cmp
cwtl
cmp
lods
or
and
mov
xchg
lret
enter
sub
xchg
xor
inc
shrb
movsb
or
cmpsb
loope
ja
orb
inc
push
cld
sub
push
mov
xchg
mov
cmp
pop
hlt
mov
bound
jecxz
cltd
ljmp
mov
jp
dec
cld
sahf
lcall
faddl
fwait
sbb
push
sub
dec
add
mov
and
cmp
lahf
push
inc
push
inc
fcoml
add
sbb
das
fs
dec
add
mov
push
xor
rolb
dec
popl
cmp
mov
addr16
push
and
and
xor
jne
jbe
xor
pop
out
dec
ret
add
bound
nop
push
in
mov
int3
std
sbb
in
roll
and
cmp
sub
sbb
lcall
cmp
scas
pop
fldcw
mov
ja
and
lret
xor
sub
sahf
mov
cmp
popf
adc
and
daa
and
gs
nop
inc
and
movl
adc
or
aam
ret
mov
inc
and
mov
jle
sbb
insb
nop
and
mov
pop
sub
imul
cmp
and
sbb
js
aas
scas
shlb
inc
int
push
inc
add
push
jnp
adc
jle
push
rcr
sbb
push
pop
out
sbb
sbb
add
in
mov
mov
std
mov
adc
and
mov
mov
xor
push
add
inc
mov
add
test
add
push
sbb
daa
cmp
jmp
es
add
or
aas
xor
push
sub
add
lds
mov
xchg
out
xor
rorb
and
sub
int3
and
aaa
insb
pop
push
sbb
ljmp
inc
stos
or
inc
inc
hlt
jg
add
in
or
jg
int3
or
add
jnp
xor
pop
lock
repz
mov
int3
dec
push
sbb
nop
notb
adc
outsb
in
dec
lock
imul
xor
mov
fwait
jne
aam
out
sbb
jnp
or
or
cs
add
in
rolb
push
pop
adcb
in
stos
sub
int3
xchg
fstps
dec
or
fstps
sbb
adc
shrl
adc
push
leave
or
mov
xchg
and
sub
leave
in
xor
popa
les
push
hlt
mov
mov
popl
aas
mov
leave
push
loopne
xchg
sahf
incl
mov
rol
loope
xor
fcoms
cmp
jne
rolb
cmpsb
pushf
ja
ljmp
out
jae
clc
rorb
pop
test
icebp
pop
xchg
lret
adcb
cs
mov
mov
and
pop
inc
incl
je,pt
pop
jle
bound
lock
push
movsb
sbb
pop
mov
ror
sti
mov
mov
lcall
dec
inc
cmp
jb
pop
pop
pushl
int
movsb
inc
or
mov
out
loop
orl
and
xchg
mov
es
xor
push
xor
adc
mov
xchg
jle
push
or
clc
shll
ss
or
dec
jp
loop
and
cld
das
push
test
pop
pop
xor
mov
clc
pop
adc
inc
cmp
jae
inc
lea
push
cltd
or
lcall
or
das
jecxz
cld
test
jne,pt
std
loopne
popf
push
pusha
cmp
rorl
push
je
inc
cmp
mov
vxorps
cmp
fildll
fisttps
pop
adc
mov
fisttpl
jecxz
popa
add
add
xchg
jle
fdivs
xor
addb
inc
lds
mov
xor
out
pop
lcall
mov
mov
enter
imul
movsbl
add
inc
mov
jb
dec
jge
add
or
jmp
xor
je
cmp
or
insl
pusha
or
dec
ljmp
push
push
ljmp
xchg
pop
les
fnstsw
jne
and
cmpsb
daa
mov
fidivrs
cmp
ds
loop
inc
add
mov
sbb
cmpl
add
dec
ja
push
inc
and
pop
jmp
xchg
outsb
test
xor
loopne
daa
rcr
add
aam
call
incl
adcl
bswap
push
push
or
cmp
adc
xor
faddl
jbe
cmp
or
sbb
push
nop
jmp
xlat
dec
lahf
push
or
jne
dec
popa
dec
pop
icebp
add
add
xchg
mov
les
adc
nop
add
mov
test
inc
add
sbb
xor
jp
mov
fnstsw
adc
sub
sti
xor
fsubrl
push
mov
push
adc
enter
jnp
xchg
hlt
fcompl
jmp
pop
fsub
pop
fsubrp
ja
push
stos
lcall
and
sbb
jp
jl
pusha
movsb
inc
jg
cmp
icebp
xor
dec
add
sbb
sahf
call
insb
and
es
ds
imul
int3
cmp
je
add
es
shlb
adc
mov
fsubrs
or
and
sbb
repz
lock
sub
fdivrl
repnz
sub
push
push
push
movsb
adc
sbb
adc
js
adc
mov
pop
push
and
fcoms
movsb
imul
add
cmp
lret
push
movsb
jge
notl
outsb
lcall
add
push
in
jo
mov
sbb
cmp
xchg
clc
push
push
push
lds
xor
push
imul
lea
ja
repnz
xor
repnz
and
sbb
lock
and
sahf
movhps
adc
adc
jns
enter
mov
dec
adc
stc
and
and
adc
push
jo,pn
imul
pop
and
sbb
and
sbb
iret
vmwrite
sbb
add
mov
push
xor
mov
push
jecxz
in
xor
cmpsb
pop
pop
sub
aas
in
and
and
push
nop
out
push
push
push
pop
repnz
push
jo
repz
push
ret
xchg
mov
lret
sbb
cmp
or
movsl
sbb
pop
or
or
sbb
and
xor
dec
push
xchg
sub
or
jle
repz
sbb
or
or
iret
prefetch
push
jo
and
or
shll
cmpxchg
xchg
out
and
movsb
sbb
mov
push
or
loopne
and
cmp
sbb
add
fstpl
and
clts
jns
sbb
push
xor
cwtl
and
push
inc
xchg
push
lcall
add
dec
mov
int3
mov
testb
dec
repz
adc
gs
repz
xchg
out
repnz
sahf
out
pop
imul
pushf
lods
mov
iret
sarl
adc
repz
push
test
mov
and
aam
add
addl
jmp
test
or
cmpl
int3
xlat
lods
push
movsb
inc
or
push
lret
mov
icebp
rclb
popf
adc
les
orb
dec
in
jno
and
arpl
or
push
jb
mov
adc
loopne
stos
call
sub
insb
jne
movl
push
xor
fwait
pop
jo
filds
cmp
mov
jl
ret
xchg
or
cmpb
daa
add
pop
test
shl
jns
lock
sub
sbb
mov
add
int
sub
add
push
mov
jp
mov
push
inc
call
add
jb
jl
mov
or
stc
or
loop
out
call
add
sub
sbb
mov
cmp
roll
push
arpl
and
xor
ret
push
lods
jge
push
push
push
in
fwait
adc
cwtl
aas
mov
sbb
fcmovnu
mov
and
and
dec
hlt
mov
mov
nop
pop
mov
fldcw
or
add
and
add
loop
pop
sub
mov
push
cmp
flds
adc
add
nop
xchg
mov
in
loopne
inc
scas
sub
icebp
add
call
call
in
mov
pop
mov
sub
adc
lods
push
in
push
je
push
fwait
mov
in
test
lock
push
or
nop
or
or
imul
dec
pop
and
dec
add
adc
call
or
stc
push
scas
xchg
and
test
pop
leave
shrl
mov
add
and
movsb
mov
mov
out
or
mov
loopne
pusha
xchg
or
pop
jl
inc
push
in
or
pop
les
repnz
pop
or
inc
xor
cmovge
mov
roll
xchg
fwait
mov
lock
mov
repnz
repz
xchg
push
push
mov
enter
mov
lahf
adc
aaa
fdivrl
push
push
test
push
enter
sbb
add
push
enter
add
xor
mov
js
mov
push
push
or
and
push
leave
or
push
adc
add
mov
sbb
adc
pop
dec
push
fs
adc
in
pop
xor
xor
stos
mov
add
stos
pop
and
inc
lock
xchg
bound
push
inc
dec
xchg
pop
mov
sub
repnz
add
and
fmul
and
push
adc
xor
push
sub
jo
popa
inc
sub
icebp
sbb
bound
adc
add
mov
test
fmuls
sbb
add
mov
icebp
daa
add
testb
jb
xor
mov
or
jns
push
or
or
pushf
jb
loope
sub
or
cmp
add
dec
or
adc
xchg
xor
adc
aam
sbb
add
xor
test
inc
adcb
cltd
ret
inc
jns
pop
push
jecxz
and
inc
hlt
add
outsl
jno
fs
pop
adc
xchg
movsb
add
dec
xor
and
jne
cmp
xor
jo
push
scas
std
push
dec
dec
fnstsw
das
cmc
arpl
call
icebp
inc
dec
pop
and
enter
add
mov
scas
lahf
addb
and
push
es
stos
lods
xor
mull
or
outsl
cmp
mov
adc
roll
xrelease
cmp
hlt
add
xchg
add
sbb
or
or
mov
sbbb
or
pusha
adc
test
push
test
test
inc
dec
or
xor
adc
or
int
push
mov
ds
push
loope
ds
add
cmp
push
stos
inc
inc
pop
movsb
cmp
cmp
inc
xor
addr16
mov
ret
loopne
pop
cmp
daa
push
rcll
adc
add
popa
add
scas
adc
insl
push
mov
or
cmpsl
adc
or
pusha
inc
gs
sub
mov
les
add
in
arpl
out
mov
cmpsl
aaa
push
cmp
repz
adc
mov
popf
test
in
or
mov
adc
push
clc
jle
push
adc
pop
shl
je
inc
orb
or
testl
push
insl
adc
inc
or
adc
jle
lods
push
filds
sub
push
xchg
add
sbb
add
stos
dec
bound
xorl
mov
out
sbb
popf
clc
and
add
xchg
push
push
jp
je
mov
jns
rcrb
outsl
test
push
and
dec
dec
outsl
sub
push
and
pushf
sbb
into
fistpll
mov
notb
dec
push
popa
xor
cmpl
mov
into
lea
sub
fwait
je
push
icebp
test
sub
cwtl
lods
insb
xchg
add
xor
int3
cmp
fldcw
sub
cs
dec
pop
push
pop
insl
jne
xor
sub
and
ss
les
sub
push
or
add
loopne
pop
insl
adc
fcompl
or
mov
dec
pop
or
movsb
xchg
adc
loope
mov
sbb
xchg
xor
jl
add
mov
mov
and
push
push
inc
ret
popa
dec
push
popa
sbb
adc
adc
mov
jo
dec
cmp
cmpsl
adc
add
pop
mov
mov
sti
pop
inc
lret
aas
jp
cmpsl
addl
outsl
or
inc
xor
in
mov
jo
iret
dec
sbb
mov
loop
jl
lds
inc
shlb
add
xor
adc
es
adc
pushf
push
xchg
cwtl
fiaddl
mov
mov
push
sbb
push
jmp
loope
sub
rolb
add
movl
jbe
mov
jecxz
cmc
or
adc
dec
jbe
cmpb
in
sbb
mov
inc
test
adc
sub
inc
subl
dec
pop
sbb
cmp
push
add
and
mov
mov
ret
sub
bound
adc
aas
pop
mov
xchg
sub
pop
pop
call
sbb
add
leave
sbb
jmp
or
fcomps
mov
mov
pusha
aam
dec
fwait
shll
imulb
ret
outsb
decb
adc
jl
xor
jmp
cmp
jl
or
sbb
popa
decl
movsl
mov
add
cmp
je
mov
mov
mov
inc
jmp
movb
mov
push
and
idiv
mov
stc
jne
sub
cmpsl
pusha
xchg
adc
inc
push
in
inc
push
insb
and
pusha
cmp
loope
je
and
ljmp
movsl
pop
pop
mov
lods
lret
mov
push
inc
cld
std
rcll
inc
nop
lahf
sub
mov
xor
mov
xor
jmp
orl
dec
add
lret
shr
dec
inc
push
in
in
dec
testl
xchg
into
inc
sahf
call
nop
jl
add
xchg
out
mov
dec
aam
push
sbb
lods
cmp
aam
jg
imul
dec
adc
inc
push
inc
test
rorb
idivl
cmp
pop
int
sbb
cmpsl
pop
xchg
and
jnp
rolb
pop
cmp
adc
mov
or
adcb
mov
dec
or
mov
outsl
shl
fistpll
push
clc
les
or
test
or
dec
mov
push
sub
push
fwait
rcll
sbb
cmpb
push
shll
xchg
test
add
add
lds
pop
loop
ljmp
push
sub
xchg
adc
pushf
stos
mov
andb
or
pop
push
push
mov
sar
adc
xor
pop
push
pop
cmp
xor
outsl
mov
push
in
adc
fnstenv
push
cmp
js
push
cmp
and
loopnew
push
test
ret
sbb
xor
and
push
add
popf
jo
sbb
or
adc
bnd
sbb
leave
and
loopne
sbb
push
push
xor
aam
loopne
aam
ficompl
push
leave
fimuls
cwtl
sbb
int3
sahf
dec
es
push
mov
int3
repz
jo
les
shrb
fdivs
enter
jmp
jbe
out
xchg
icebp
fcomps
xchg
out
mov
jns
les
mov
pop
fwait
nop
and
icebp
xorb
pop
push
imul
push
lods
outsl
pusha
adc
into
jae
jge
test
xchg
push
fwait
jo
push
out
daa
and
xlat
jns
jne
fs
fists
lahf
sub
mov
enter
push
enter
pop
outsb
test
loope
and
xchg
fsubl
xor
leave
cwtl
pop
nop
inc
daa
xchg
pushf
dec
mov
cmp
dec
repnz
dec
jo
ss
and
push
jb
jb
movsb
pushf
xchg
cltd
in
jb
test
dec
es
push
cwtl
call
stos
mov
call
call
mov
push
add
xchg
inc
or
push
sub
stos
cmp
mov
cmpb
je
out
mov
mov
or
daa
loopne,pn
mov
xchg
adc
sbb
shl
das
push
and
add
int3
push
push
dec
mov
push
add
rclb
inc
mov
insl
mov
cmpsb
pop
fldz
lea
mov
pop
mov
sbb
dec
inc
mov
or
xchg
clc
mov
or
cmp
xchg
and
lcall
mov
mov
sub
pusha
test
ds
push
pop
add
push
in
call
mov
adc
iret
sub
sarb
jl
aad
push
pop
mov
push
out
pop
push
fsubrs
es
data16
and
outsb
sbb
push
pop
push
inc
inc
addb
add
or
arpl
in
cmp
adc
scas
xchg
loopne
jg
rorb
or
out
inc
in
sub
xchg
mov
rolb
std
rorb
cs
and
cmp
shr
inc
rcll
shl
ljmp
mov
and
jecxz
xchg
inc
leave
inc
cmpsl
push
inc
dec
bound
dec
xor
push
ljmp
jb
je
jne
dec
dec
rcr
mov
pusha
fs
jnp
fs
repz
lock
movsb
mov
adcb
cmp
inc
imul
adc
jmp
fstl
lock
dec
push
je
mov
xor
repz
fsubrs
sub
ds
sbb
sub
ss
bound
push
imul
out
and
sub
test
and
pop
lret
and
push
enter
pop
arpl
cltd
aaa
sbb
mov
sbb
lods
and
daa
inc
sahf
add
mov
sbb
sbb
push
das
inc
adc
pop
inc
imul
xor
sbb
insb
dec
cltd
and
loope
pop
call
sub
add
ss
lods
mov
push
mov
fnstsw
filds
xor
inc
adc
add
inc
sbb
rorl
dec
ja
addr16
pop
sub
insl
out
or
pusha
addr16
add
xorl
and
add
mov
nop
daa
and
add
cli
dec
rolb
xlat
nop
les
jecxz
mov
gs
fsubrs
cmp
ja
adc
or
and
movsl
lods
fwait
dec
loop
in
sbb
pop
stos
iret
mov
pushf
push
fildl
cmp
sbb
outsl
mov
mov
std
inc
and
js
dec
into
adc
loopne
push
add
into
push
aas
ss
leave
ss
pop
adc
cs
push
pop
adc
or
xchg
jmp
roll
je
jp
loop
and
push
inc
push
test
add
das
icebp
xor
loope
add
inc
out
cs
jg
mov
xchg
es
cmpsb
and
mov
sahf
adc
mov
cmp
mov
ret
aaa
xor
test
out
fcomps
pop
or
call
mov
sub
sub
push
sbb
daa
lcall
xor
in
es
add
gs
sbb
xor
adc
mov
sbbl
iret
push
add
je
shlb
jae
aam
fmull
cmc
in
cmp
mov
xchg
movl
mov
dec
xchg
add
enter
repnz
adc
test
add
icebp
xchg
adc
jmp
fcoms
adc
adc
pop
adc
scas
xlat
jmp
sub
pop
divps
adc
mov
inc
enter
jns
adc
das
add
orb
push
pushl
jle
rorb
mov
dec
icebp
lea
pop
mov
jo
cltd
sub
test
add
add
xchg
fs
fmul
jo
add
aam
ljmp
or
cmp
or
rolb
push
faddl
in
ss
in
push
cmp
sub
and
rcl
int3
mov
xor
dec
and
inc
cmp
push
lea
ss
add
jmp
sbb
sub
lahf
aad
push
daa
xchg
vmptrld
aam
mov
sbb
adc
dec
xor
mov
test
mov
leave
mov
mov
jnp
test
mov
jge
mov
push
adc
popa
cmpsb
or
lock
mov
aas
cmp
cmp
lret
cmp
iret
or
push
jp
rorl
mov
shll
aam
cmp
xchg
sub
push
cmp
inc
cmp
in
cmp
sub
cmc
lahf
push
scas
pop
pop
cmp
adc
xor
xchg
xchg
pop
shrb
hlt
out
pop
jl
loopne
cmp
xor
add
cltd
xchg
adc
xchg
pop
mov
leave
cltd
mov
pushf
jne
cs
sbb
lods
inc
sahf
inc
pop
or
xor
fiaddl
imul
neg
fimull
cli
inc
mov
call
scas
leave
cmp
into
aam
jae
ja
sarb
inc
xchg
sub
clc
in
aas
je
es
cmp
jne
cmp
roll
mov
add
ret
sub
test
sub
or
mov
call
loop
sub
or
push
jno
add
jo
push
test
lock
mov
sbbl
rorb
adc
pop
outsl
lea
cwtl
add
xchg
pop
mov
adc
add
or
xchg
je
lea
or
or
int
test
dec
add
add
lock
aad
enter
leave
push
add
in
pop
mov
add
mov
and
adc
test
push
inc
xchg
test
mov
sbb
lods
xchg
test
push
pusha
dec
mov
cmpsl
stc
lock
ja
push
dec
xchg
xchg
pop
in
stc
in
fadd
pop
inc
or
mov
jmp
pop
sub
xchg
or
sbb
or
popa
xor
inc
stc
inc
cs
or
pop
or
outsl
inc
hlt
cmp
jmp
jg
andl
dec
sub
mov
adc
push
dec
push
mov
lock
and
imul
sbb
add
dec
rorl
pop
aam
add
sbbl
jne
jne
lret
aam
jo
mov
ret
into
xchg
adc
dec
ss
xchg
or
enter
fcom
mov
lcall
add
xchg
xchg
xor
push
or
fildll
or
pusha
addr16
mov
adc
pop
and
mov
out
add
cwtl
adc
fcoms
and
add
sub
icebp
jns
add
xor
sbb
fisubs
xchg
in
mov
mov
xchg
lock
lahf
push
push
push
dec
repz
rol
adc
es
addb
xchg
fcmovbe
in
mov
loope
push
or
rol
test
shlb
add
or
ss
sti
fldt
xor
push
add
jno
ret
cli
dec
mov
pop
sub
in
insb
sbb
jo
repz
enter
pushf
sbb
dec
add
add
xchg
adcb
popa
sbb
and
sub
das
add
std
xor
inc
ds
clc
xor
out
sbb
push
push
mov
mov
ljmp
push
lods
mov
mov
cmp
inc
fisubl
adc
add
pop
adc
int
mov
push
add
pop
mov
cltd
jb
or
inc
nop
jbe
movsl
sbb
inc
pop
push
inc
pop
add
cmpb
mov
loopne
xor
filds
jmp
shrb
or
addl
ret
pop
shll
lods
addr16
clc
push
dec
clc
or
sub
cmp
rcll
sub
incl
jae
mov
xor
rcrl
loopne
or
sub
cld
lds
mov
movsl
and
cmp
jne
and
cmp
cli
push
faddl
add
dec
jmp
roll
sub
lods
enter
pop
and
jge
push
pop
pop
pop
in
sub
cltd
pop
dec
mov
je
xchg
push
enter
add
je
ret
and
leave
jg
adcl
cmc
mov
jmp
mov
mov
scas
pop
adcb
cmp
loope
inc
cmp
pop
addl
xchg
stos
push
inc
pop
imul
fisttps
cli
mov
or
outsb
daa
cli
test
inc
add
jb
add
je
cmp
jge
dec
push
dec
add
test
add
push
popa
cmp
xor
or
jnp
xchg
iret
or
sub
add
xchg
outsb
sub
and
xor
lock
popf
xchg
or
int
jmp
sbb
pop
push
cmp
rcpps
adc
xor
mov
or
dec
mov
add
pop
pop
pop
fildll
xor
or
adc
xchg
or
adc
and
and
js
mov
push
jge
stc
sti
and
jne
add
jns
jmp
adc
testb
jo
dec
xchg
out
std
je
push
sbb
pusha
or
add
shl
mov
inc
cltd
nop
test
insb
ss
jne
dec
push
bsf
adc
add
pop
sub
stc
mov
sbb
cmp
in
cmc
push
fcomps
hlt
and
sub
add
fs
sub
sbb
push
sti
inc
pop
pop
sbb
add
jb
fcmovbe
xchg
jne
das
jbe
and
cmp
and
xor
adc
inc
adc
lds
dec
push
in
sub
sbb
adc
jge
adc
mov
ret
xor
int3
and
addl
add
mov
dec
pop
add
gs
rcrb
loopne
jg
sub
sbb
xor
jp
sbb
gs
adc
or
jmp
or
jns
push
sbb
mov
add
and
cmp
pop
mov
and
mov
orl
cmp
addl
stos
adc
push
mov
dec
into
lahf
stos
pop
lods
lahf
movsl
push
stos
je
mov
mov
jmp
mov
js
mov
aam
popl
ret
dec
and
lock
sbb
add
adc
mov
test
lock
pop
test
mov
or
cld
sub
aad
dec
jae
bound
mov
inc
test
or
sub
and
inc
and
nop
pop
or
call
or
imul
stos
mov
mov
ret
adc
subl
dec
or
and
mov
xchg
mov
pop
and
xchg
or
pop
in
xor
or
inc
and
sbb
inc
inc
and
invlpg
pop
mov
mov
xchg
rorl
inc
or
dec
cmpsb
inc
dec
dec
mov
nop
inc
mov
pop
rcll
pushl
ljmp
sub
sub
jb
add
dec
xchg
rorb
fisubrs
sti
and
cmpsb
sbb
out
ret
insb
adc
and
or
repnz
mov
mov
mov
rorb
pop
sub
xor
add
loopne
xor
or
and
sbb
mov
sub
adc
sub
punpckhbw
sub
es
daa
push
call
and
pop
or
ret
mov
pop
pop
cmp
add
mov
das
fwait
sbb
roll
xor
dec
dec
roll
push
xor
inc
shlb
push
rorb
xor
adc
or
adc
add
test
js
adc
xor
fs
andb
xchg
xor
lock
adc
or
inc
sbb
push
or
lock
out
and
mov
adc
loope
sarl
cmp
inc
sub
or
sub
adc
in
sahf
sbb
adc
and
mov
sbb
mov
sbb
push
inc
fcompl
push
movsl
nop
jae
xchg
pushf
jns
jne
sbb
gs
shrl
les
dec
js
dec
int3
adc
pop
ret
call
adc
test
iret
adc
and
jmp
adc
rcll
inc
xor
adc
ret
ret
sub
inc
and
adc
sbb
push
inc
ljmp
stos
mov
adc
push
fwait
xchg
sub
or
mov
xor
or
jmp
sub
pop
sbb
mov
popf
adc
fdivl
dec
xor
adc
jecxz
adc
mov
cwtl
movsb
dec
pop
jo
sarb
and
outsl
lcall
sahf
push
add
jl
pop
dec
hlt
jecxz
adc
push
mov
stc
clc
sub
xchg
ror
cmc
add
jl
cmc
inc
push
je
or
and
pop
mov
pop
in
xor
and
rolb
loopne
push
call
daa
dec
faddp
test
scas
out
sbb
mov
dec
push
dec
iret
add
pop
inc
into
inc
push
xchg
cmp
dec
lcall
add
repz
and
xor
add
into
in
int
addb
lds
cmp
adc
jmp
xlat
mov
in
push
shrb
adc
test
push
add
xchg
ja
rclb
adc
in
dec
xchg
lock
push
or
jg
pop
mov
pop
pop
in
fsts
jmp
or
add
lea
push
das
pusha
adc
and
nop
xchg
cs
in
xor
movsb
push
inc
call
mov
adcl
sar
pop
and
lds
les
pop
notb
cmp
pop
sub
dec
mov
or
and
or
sub
popf
cmpsb
xor
cmp
push
inc
add
or
or
or
jne
lock
mov
xor
add
mov
sbb
xor
out
or
add
or
xor
mov
movsb
sti
lods
cld
add
sbb
adc
movsl
mov
aam
add
out
push
loope
add
sahf
lods
mov
and
scas
int
add
and
mov
sahf
loope
push
mov
fisubrs
add
mov
into
sbb
rolb
mov
sti
fcmovnu
outsb
mov
jne
gs
cmp
mov
push
int
punpcklwd
jnp
sbb
push
movsb
div
lock
lock
push
or
repnz
decl
add
scas
sub
repnz
push
and
scas
enter
mov
cmp
test
je
sbb
out
and
xor
mov
push
ja
pop
add
jg
sbb
dec
add
add
out
adc
or
mov
adc
jl
inc
or
cltd
push
or
loop
mov
sub
inc
lret
push
push
adc
dec
pop
psubw
out
or
inc
ja
xchg
xchg
xlat
cmp
sar
shrb
or
adc
and
sti
mov
cltd
ret
stos
stos
vmread
loopne
cmp
jmp
aas
test
xor
xor
xchg
push
lea
loopne
jp
cli
bound
daa
in
cmp
xchg
jmp
mov
notl
or
push
or
loop
ret
dec
pop
push
jne
sbb
adc
mov
add
mov
std
jb
or
mov
cmp
mov
add
jecxz
test
ljmp
rclb
sub
xor
lea
sbb
clc
mov
add
dec
cwtl
and
je
movsl
leave
mov
pop
adc
xor
repnz
and
dec
test
inc
sahf
xchg
dec
jae
push
sub
dec
sub
sahf
adc
faddl
push
push
mov
push
push
push
mov
add
mov
fmuls
inc
sbb
mov
push
xchg
into
pushf
icebp
pushf
adc
es
or
loopne
decb
cmp
sti
adc
popa
inc
stos
add
popa
push
xchg
imul
cld
cmp
into
leave
xchg
inc
dec
pop
call
pop
or
xchg
jne
es
mov
pop
pop
je
in
jnp
or
xor
movsb
test
sbb
or
add
iret
sub
pop
scas
add
push
push
hlt
daa
xchg
sbb
test
loopne
jbe
xchg
adc
jo
lret
sbbl
dec
ds
ss
insl
test
lock
addb
lock
sbb
adc
cmpsb
and
loopne
call
jle
inc
pop
adc
sbb
sbb
out
or
or
out
sarl
test
mov
or
test
pushf
lods
repz
incl
insb
push
push
mov
jo
aaa
into
in
cmp
popf
les
enter
rorb
adc
or
or
xor
lea
fcoml
push
or
push
dec
arpl
adc
nop
mov
push
iret
out
dec
rorl
mov
cmp
lock
inc
lea
mov
or
lea
and
out
adc
mov
cmpl
loopne
and
rcr
decb
lods
mov
mov
scas
es
dec
shrl
pushl
xchg
aas
push
or
xchg
popa
lea
movsb
mov
movsb
or
test
pop
aam
rol
cmovle
mov
adc
or
mov
push
mov
mov
leave
jno
adcl
rcll
adc
mov
push
sub
loopne
out
lock
cmc
je
mov
push
pop
cltd
pop
and
xchg
push
cmp
cmp
pop
dec
lods
clc
das
add
cmc
incl
in
sub
imul
orl
mov
jnp
aam
scas
mov
or
mov
jp
insb
adc
mov
or
pop
pop
sbb
pusha
pop
call
pusha
jnp
mov
inc
mov
ret
mov
lea
mov
jb
aam
imul
pop
sub
dec
lret
les
loopne
and
or
xor
sub
xor
sbb
pop
push
sub
jb
xchg
or
pop
hlt
je
cmp
jbe
nop
sbb
jmp
mov
mov
ret
pop
add
jmp
and
push
into
adc
jns
imul
leave
mov
insb
dec
in
sub
and
sbb
add
loopne
sub
push
jnp
outsb
inc
sahf
add
fs
andb
call
sub
enter
or
and
add
pop
rorl
and
xchg
push
or
inc
adc
dec
or
xor
vrcpps
loope
mov
mov
add
enter
imul
xchg
aaa
and
sub
dec
in
xor
ror
std
fcmovnb
or
and
inc
jle
adc
adc
out
mov
popf
rcrb
or
fadd
xchg
xor
jecxz
adc
mov
and
mov
and
adc
mov
cmp
outsb
sub
xchg
sbb
pop
scas
das
fwait
adc
leave
jae
sub
and
enter
in
add
inc
push
sub
and
sbb
outsl
in
pop
push
xchg
hlt
fimuls
scas
pop
setge
jo
jge
je
insl
add
xor
xchg
lret
dec
aam
or
mov
repz
push
xchg
sarb
cmp
mov
push
adc
add
daa
es
nop
fdiv
xchg
sahf
dec
lock
andb
test
push
es
addb
xchg
test
push
arpl
or
xchg
jle
in
outsb
mov
sarb
sub
movsl
inc
dec
sti
inc
push
push
push
movzbl
push
or
lret
in
jmp
nop
jb
test
out
sbb
pop
and
faddl
cmp
push
shrb
jo
jb
push
imul
insb
and
push
mov
ret
ret
push
push
jne
push
mov
sub
sub
add
sub
lock
dec
hlt
mov
adc
aad
stos
pop
push
cmpsl
lds
lret
popa
lds
sbb
cmpsb
add
movb
dec
call
adc
xchg
pop
push
inc
push
addr16
aam
inc
sub
inc
out
push
lea
stc
push
fistl
or
mov
push
jle
pop
jmp
outsl
imul
dec
or
mov
addr16
add
xlat
js
adc
cmp
mov
xor
dec
out
call
cmp
cmp
jbe
cmp
jbe
mov
sbb
roll
xor
jnp
sbb
pop
sarb
mov
iret
popa
add
sub
push
or
fincstp
mulb
ja
mov
fs
adc
mov
nop
ljmp
sahf
jnp
add
jne
push
or
je
lret
in
inc
and
in
push
mov
cmpsb
pop
jmp
push
sub
ret
xchg
cmpl
jmp
ljmp
sbb
ret
out
insl
movsb
sbb
das
or
push
cmp
loope
mov
mov
addb
mov
fsts
pop
add
add
sub
inc
push
in
mov
daa
or
and
adc
enter
mov
in
pop
rcrb
mov
sar
movsl
mov
add
insl
cmpsl
xchg
jo
add
or
jmp
mov
inc
rclb
and
push
mov
inc
dec
mov
mov
dec
or
mov
sub
fs
pop
ret
push
mov
bound
sbb
mov
or
addr16
rcll
mov
xchg
adcl
ljmp
mov
imul
adc
adc
push
in
sbb
cld
adc
lock
shll
loope
xor
sbb
loope
lcall
push
pop
loopne
inc
dec
and
sbb
dec
pop
fstps
pop
or
push
fcom
out
add
adc
and
out
fistl
and
mov
jecxz
jl
push
sbb
stos
lock
into
shlb
pop
mov
popa
adc
dec
inc
pop
pop
out
pop
add
mov
lea
cmp
dec
outsl
mov
sub
adc
loopne
jnp
dec
imul
and
jle
loopne
cmp
movsl
or
repz
push
push
loopne
add
ljmp
je
rorb
gs
sahf
movsb
push
nop
add
xor
sub
add
mov
cs
ss
pushf
xchg
or
pop
cs
cmpsb
loope
xor
lods
mov
xor
xchg
out
in
lahf
enter
or
int3
add
int3
int3
cs
call
jecxz
xchg
test
mov
adc
jge
sub
incl
pop
test
cmp
mov
mov
fldl
adc
mov
jno
mov
shl
xchg
hlt
popa
daa
popa
xlat
movsb
jmp
fnclex
or
sbb
mov
test
loope
xchg
or
add
mov
inc
push
mov
or
out
mov
mov
or
ds
sbbl
popf
sub
scas
mov
inc
roll
or
movsb
int3
inc
adc
dec
ret
pop
xorl
sbb
stc
fdivrs
divps
out
je
rorl
jae
adc
dec
or
mov
rolb
andl
push
add
and
mov
es
sti
mov
hlt
push
mov
int3
push
adc
mov
jmp
mov
add
cmp
sbbl
pop
mov
sbbl
scas
ds
lcall
lods
popa
mov
jns
push
add
mov
pop
push
jl
es
push
add
ret
loopne
add
movsl
loopne
cmpsl
xor
test
mov
sub
fsubl
fistps
pop
sbb
xor
rorb
fs
mov
aam
pop
cltd
rorb
stc
neg
pop
sbb
pop
inc
inc
inc
sub
shrb
or
aad
imul
add
jns
test
std
pushl
xor
xchg
pop
pushl
dec
mov
sbb
outsb
gs
dec
fsubs
jp
lds
jbe
stos
mov
dec
insb
rclb
ret
mov
xlat
dec
or
push
dec
cmp
nop
mov
mov
sbb
mov
adc
or
mov
in
jne
rcll
mov
pop
arpl
in
lods
mov
add
stos
add
dec
fdivrs
xlat
mov
sub
jle
sub
sbb
es
sbb
adc
push
sbb
fsubl
cmp
mov
pop
loopne
ss
aam
lahf
je
rolb
pop
clc
jne
loopne
lock
push
iret
xor
jmp
cmpl
mov
sub
or
sub
rclb
aad
add
cmc
jns
and
push
sub
add
arpl
adc
aam
or
test
stos
test
add
fwait
pushf
int3
pop
ljmp
sbb
push
push
push
mov
enter
cmp
ss
and
fiaddl
imul
scas
sarb
fiaddl
cs
xchg
and
push
rorb
xchg
mov
sub
ret
pop
sub
sahf
divb
aam
les
lea
pop
or
dec
jmp
jae
jle
add
pop
mov
icebp
pop
mov
lds
ret
daa
add
loopne
ret
mov
mov
fisubs
xor
mov
aam
fisttpl
xor
jp
and
loopne
dec
arpl
cwtl
xor
cs
jp
sub
fdivr
mov
xor
cmp
pop
pop
jo
adc
add
mov
sbb
mov
pusha
sub
insb
test
xchg
add
mov
mov
push
mov
shl
add
jge
aam
fwait
push
xlat
fnstsw
sti
cmp
jbe
mov
call
adc
mov
mov
add
icebp
mov
sub
js
xchg
mov
dec
fsub
jl
fistpll
or
insl
shl
push
stc
fidivrl
fmul
pop
dec
jae
mov
aam
push
bound
adc
adc
cmp
lock
fisttps
sahf
pop
jp
rorl
mov
mov
aaa
mov
mov
cmpl
call
dec
arpl
cmpsl
aam
fsubrs
dec
pop
mov
mov
jl
mov
sbb
cmp
pop
adc
adc
lds
add
add
and
loopne
cmp
inc
cmp
ror
movb
push
loop
hlt
or
cmp
mov
arpl
jbe
adc
stc
inc
cmp
xchg
jl
mov
inc
sbb
pop
sar
repnz
das
pushf
and
add
js
lods
addb
jmp
cld
sti
rep
movsw
push
push
gs
movsb
mov
lcall
mov
shr
mov
fdivrl
or
mov
inc
inc
cmp
jle
movb
sbb
pushf
mov
into
in
push
inc
ret
mov
mov
cmp
movsbl
movsl
flds
ss
push
fbld
adc
and
push
cld
xor
in
je
push
push
xchg
test
scas
or
or
xor
mov
jl
pop
pop
jge
xchg
add
push
or
mov
jmp
addb
jmp
or
add
push
mov
sub
outsl
dec
mov
cmp
cmp
pusha
or
pushf
sbb
and
cmp
jl
add
mov
cmp
mov
int
sbb
add
sbb
inc
mov
inc
ja
imul
ss
push
gs
add
xchg
push
cmp
add
data16
jo
mov
pop
inc
test
rorb
or
add
cmpb
mov
flds
add
and
dec
push
mov
adc
add
add
pushf
pushf
pushf
pushf
push
pop
or
outsb
outsb
outsb
lahf
or
jnp
or
jbe
jmp
or
outsb
outsb
push
jmp
por
jmp
adc
pop
outsb
outsb
outsb
outsb
adc
push
adc
dec
adc
dec
adc
outsb
outsb
push
jmp
pop
jmp
sbb
xor
outsb
outsb
outsb
sbb
sub
jmp
sbb
and
outsb
outsb
push
jmp
pop
jmp
and
or
movq
jmp
and
pop
hlt
out
inc
push
cvtdq2ps
jmp
lea
test
pop
xchg
adc
imulb
imul
push
out
and
idiv
iret
repz
push
and
push
push
es
repz
cmp
dec
repz
repz
push
pop
pop
arpl
repz
push
cmpl
nop
xchg
lcall
test
mov
add
and
or
or
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
test
cmp
mov
repz
and
lds
mov
ret
push
pop
andl
dec
sbb
es
cmp
add
idivl
mov
enter
inc
jmp
and
shl
cmp
cld
jo
stos
popa
loope
in
jae
sub
pop
push
jne
popa
push
sti
sbb
pop
cmc
xchg
sbb
xchg
sarl
or
pop
pop
dec
leave
jl
loopne
sub
clc
test
inc
ss
mov
inc
cmp
jbe
sbb
arpl
xchg
push
mov
js
push
push
out
lret
add
push
add
push
push
mov
fwait
subb
test
sbb
pop
ret
mov
add
adc
xor
or
cmp
add
adc
insb
test
xorb
test
sub
lahf
cmp
pusha
xchg
aam
sub
pop
cmpsl
sub
lods
ret
add
push
dec
push
dec
cwtl
in
test
push
and
jbe
push
cwtl
clc
and
das
adc
rclb
xor
insb
adc
fisttpl
iret
lahf
add
push
add
adc
push
call
push
and
push
mov
pop
adc
lods
adc
bound
inc
add
js
jns
cmp
push
pop
mov
fdivrl
bswap
mov
add
adc
add
cmp
test
mov
xor
add
xor
rcrl
fcmovu
sub
pop
arpl
ljmp
rorl
inc
adc
cli
mov
sbb
mov
outsl
add
or
inc
adc
dec
movsl
sbb
call
pushf
ds
cmpsl
cmc
lret
push
fmul
add
sbb
xor
ljmp
movsl
push
push
sbb
pop
ficompl
add
cmp
orl
shll
nop
push
cmp
sub
out
loopne
rclb
and
loopne
push
shlb
inc
js
adc
add
or
jo
inc
nop
call
loopne
arpl
jne
stos
sbb
sbb
cmc
or
inc
inc
cmp
aaa
inc
add
xor
xor
test
insb
pusha
mov
adc
jge
and
adc
test
aaa
mov
pop
fwait
cmp
jmp
test
mov
jg
jno
lds
inc
adc
or
mov
je
popa
dec
cltd
loop
xor
dec
jbe
aaa
js
rolb
lret
lock
pop
or
adc
mov
cmp
pop
hlt
or
outsb
dec
stos
enter
or
jp
mov
adc
ljmp
sbb
or
rcr
in
fstl
jnp
inc
movsb
dec
mov
nop
cmpsb
jae
dec
je
dec
sbb
lock
dec
jge
xchg
xchg
insb
int3
mov
jbe
dec
push
shll
in
pushf
pop
push
xchg
push
jno
push
xchg
notl
dec
shlb
xchg
icebp
sub
enter
or
and
lds
and
and
sarb
cmp
jl
lock
cs
push
dec
pop
adc
adc
mov
clc
or
sub
cmp
adc
dec
iret
mov
sbb
stc
loopne
fidivs
xor
push
jne
es
stos
pop
push
inc
scas
test
iret
shrl
loopne
sub
rorb
cmpsb
jge
xchg
fmul
stc
faddl
mov
imul
xor
lcall
fcompl
testb
xchg
push
fimuls
cmpsb
add
in
xchg
divb
popa
jb
jnp
push
lock
jbe
dec
and
pop
mov
ljmp
aas
sbb
inc
xor
cmp
lods
xchg
movb
cmp
cmp
jmp
bndldx
ss
fdiv
imul
sub
pop
repnz
and
jns
popa
mov
or
sbb
sbb
pop
push
xor
cmp
call
add
add
inc
cmp
cmpb
or
insb
cld
cmpsb
pusha
add
xchg
sbb
cmp
dec
push
cltd
nop
loopne
loopne
sub
xor
sahf
enter
push
sbb
dec
jae
int3
or
inc
sbb
idiv
add
enter
das
sti
std
sbb
cmpsb
xchg
dec
shl
sub
cmp
or
rolb
push
sbb
cmp
pop
push
test
adc
push
mov
inc
push
xor
pop
mov
mov
popf
pusha
rclb
cs
int3
out
mov
pushl
lock
cld
movsb
adc
cmp
addb
cmpl
push
mov
jp
lahf
dec
arpl
or
sub
mov
sub
mov
push
lret
dec
or
call
push
rolb
xor
adc
push
mov
shll
cmc
bound
push
or
inc
orl
incl
call
fsubl
bound
dec
jp
hlt
loop
adc
int3
enter
sub
jp
arpl
pop
ljmp
ret
movsb
aad
or
in
pushf
sbb
mov
jnp
repz
push
cmc
pop
jno
xchg
popa
and
xor
aas
fsub
shll
dec
adc
pop
and
add
cltd
in
sub
out
ds
dec
mov
aaa
add
or
sub
in
daa
sub
add
in
mov
je
cmp
ljmp
aam
inc
pop
or
xor
sub
es
dec
sub
mov
cmpb
push
cmp
std
add
xchg
mov
push
or
add
xchg
or
test
jmp
loopne
jmp
pop
xor
cmp
gs
in
mov
add
lcall
aam
or
mov
xchg
push
mov
ret
sbb
pop
lock
test
mov
dec
inc
sbb
cwtl
mov
and
es
inc
call
dec
cmp
jne
lods
jg
add
jmp
cmp
je
push
fwait
mov
mov
ficompl
pminsw
xor
jl
into
sub
adc
adc
pop
aas
xchg
and
push
sbb
mov
jne
xchg
xchg
sarb
in
or
xor
add
stos
js
add
sbb
adc
arpl
dec
push
fdivrl
mov
inc
mov
xor
roll
cmp
xor
xorl
mov
cwtl
data16
hlt
jns
push
cmp
sub
push
add
testb
rcrl
aas
cmp
xchg
shlb
ret
cmp
mov
loope
sbb
pop
rol
jo
add
and
in
fs
add
adc
inc
pop
xchg
cmpl
fsubs
rol
and
cmp
and
cmp
loopne
lea
xorb
cmp
dec
push
mov
insl
push
push
add
jecxz
loope
femms
test
add
iret
pusha
or
jns
inc
push
xor
enter
mov
or
mov
push
xor
and
enter
push
adc
test
xchg
pop
and
cmp
adc
outsb
adc
popa
xlat
ret
xchg
cmpsl
fsubrs
jmp
add
addl
add
popf
add
nop
inc
and
movzbl
js
fadds
loope
cmpsl
adc
adc
inc
xor
xor
shl
inc
add
cmp
aaa
lea
pushf
cmp
inc
xor
addl
inc
jbe
push
aas
and
push
pop
jb
lret
xor
pusha
cmpl
inc
push
xor
insb
xor
je
jg
movsb
fwait
movsb
fwait
jl
lock
cltd
movsb
fwait
mov
mov
dec
cwtl
pushf
mov
insl
or
mov
mov
cmp
into
psrld
paddq
incl
or
dec
test
dec
js
sbb
add
or
xchg
int3
sahf
lret
adc
and
nop
or
fmul
je
jl
and
cmp
or
incl
cmp
jl
sub
cwtl
cmp
mov
cmp
in
in
push
jne
inc
cmp
xor
stc
xor
inc
sti
je
out
xor
xor
mov
push
das
bound
mov
adc
leave
jmp
imul
sub
add
xchg
sub
adc
fs
push
push
push
iret
or
mov
cmp
jne
divb
sub
je
repnz
xchg
mov
mov
insl
jns
into
jmp
inc
sbb
hlt
push
jl
fisttpl
push
in
sti
and
jmp
xchg
clc
addl
shr
xor
mov
mov
sbbb
loopne
fwait
test
xor
lds
jge
mov
pushf
incb
das
sbb
or
or
push
pushf
movsb
xchg
cmpsb
popa
jo
xlat
shlb
add
xchg
aam
xchg
push
pop
cmp
jge
je
fcmovb
pop
lret
jl
jle
lock
rcr
add
sub
pop
mov
neg
pop
pop
sbb
xor
scas
pop
adc
and
inc
bound
mov
movsb
stos
sbb
incb
pop
add
inc
sub
sub
adc
or
push
hlt
cmp
cmpb
mov
js
add
and
sbb
pop
jne
push
inc
pop
inc
insb
push
out
adc
add
pop
xchg
stos
hlt
jo
push
push
cld
mov
pusha
cmp
jge
mov
ljmp
mov
dec
or
push
lcall
movb
lods
sub
ret
test
jmp
fwait
or
orl
xor
push
mov
fdivs
imul
xchg
xchg
inc
ret
sbb
shrb
jne,pn
insb
mov
xchg
out
add
cmp
add
jle
cmp
sub
pusha
call
call
add
je
pusha
pop
jecxz
dec
cs
aaa
nop
push
imul
std
adc
test
mov
jo
popa
dec
mov
pop
inc
rol
sub
and
fnstcw
pop
pop
es
xor
rcll
idivb
jo
push
scas
dec
add
pusha
cmpsl
push
mov
ljmp
test
out
sbb
add
fdiv
xor
ret
out
fst
or
xchg
and
enter
cmp
mov
call
mov
bound
mov
add
xchg
decb
mov
add
pop
filds
adc
adcb
xchg
shll
lret
push
inc
cmpb
lds
xchg
rorl
xlat
inc
jge
inc
or
sub
dec
lcall
repnz
dec
cs
xchg
out
mov
add
insl
adcl
xor
add
mov
jecxz
add
rcll
shrl
xor
pop
xchg
mov
mov
xlat
push
shlb
lcall
out
sbb
int3
sub
jno
std
scas
push
enter
pop
pop
gs
push
ds
icebp
sbb
outsb
adc
inc
lahf
pop
sbb
stos
mov
mov
dec
cltd
pop
popa
or
push
mov
adc
cmp
movb
aas
in
imul
ret
jmp
push
js
xchg
or
sbb
subl
mov
jo
jo
imul
loopne
adc
pop
mov
push
add
mov
movups
ja
add
lret
cmp
push
push
jmp
and
dec
mov
je
add
ret
lret
inc
out
add
ret
sub
aam
cltd
loopne
insl
adc
add
or
or
mov
xor
add
or
loope
dec
jle
sbb
cmpsb
movb
push
lcall
iret
aam
or
shll
enter
add
dec
or
inc
test
xlat
mov
jmp
push
popa
or
jg
nop
jno
and
push
pusha
setle
dec
xchg
leave
in
inc
push
and
loope
or
xor
mov
lock
add
sarb
scas
ret
cmpl
test
pop
movsl
lcall
push
orl
in
push
fists
js
mov
sarl
addr16
push
inc
push
jg
aam
push
xchg
iret
add
push
cmp
mov
push
or
repz
sub
or
sbb
push
jne
jno
cld
fsubl
outsb
sbbb
cmp
dec
jb
jne
pop
cmp
pop
mov
xor
je
xlat
or
fiadds
call
orl
push
fcmove
addb
mov
xor
test
into
cld
add
or
push
xor
daa
push
mov
push
dec
push
ret
lea
xor
js
ds
mov
fs
xor
cmp
dec
push
push
mov
cmp
arpl
sbb
iret
ds
andb
inc
push
xor
setg
push
xor
add
aas
push
test
pop
jmp
xchg
out
or
imul
stos
adc
inc
cmpsl
test
add
clc
lea
orb
test
mov
pop
mov
mov
inc
cmp
mov
jl
mull
out
fs
cmp
cmp
out
jo,pn
pusha
sub
mov
pop
mov
xor
sub
movzbl
outsb
fsubs
adc
mov
pop
cwtl
xor
mov
mov
pop
xor
xchg
mov
xchg
rorb
shll
and
or
mov
mov
add
inc
or
in
xchg
add
add
mov
mov
adc
aam
pop
das
pop
daa
mov
inc
push
jmp
push
and
jmp
fwait
push
rorb
adc
shrl
pop
sub
sar
xor
mov
cmp
sub
push
jp
out
adc
jo
or
xlat
add
testl
mov
push
pop
fs
push
push
das
jge
or
cltd
push
xchg
call
push
sub
bound
test
or
in
movsb
xchg
hlt
out
mov
sahf
fisubrl
imul
add
mov
jmp
jnp
fisttpll
jmp
js
and
dec
icebp
movsb
adc
and
lea
mov
mov
cld
jl
jmp
je
pop
popf
nop
push
push
iret
mov
mov
push
xchg
push
mov
inc
imul
or
adc
jmp
push
cs
cmp
inc
cmp
jl
daa
push
mov
jne
mov
mov
cmpsb
push
fstpt
adc
and
mov
jle
push
lcall
xor
mov
jl
test
fcom
adc
and
sahf
sub
add
adc
inc
movsb
sbb
mov
in
cmp
push
cs
lods
xor
fimuls
xchg
dec
leave
in
cmp
push
push
dec
ret
icebp
pop
cmp
inc
pop
sbb
rol
push
fcmovnu
subb
ret
add
shll
xchg
sub
aam
aam
add
adcl
add
pop
cmc
jmp
aad
inc
mov
popa
xchg
add
loopne
cmp
shlb
adc
fisttps
ljmp
mov
test
not
fcom
pop
or
sbb
pop
cmp
repz
push
out
aam
xchg
mov
je
or
adc
in
das
jne
push
mov
inc
sbb
adc
mov
or
mov
pop
lret
mov
jl
mov
mov
mov
add
jmp
add
add
or
decl
shr
shl
add
and
shl
xor
mov
mov
jo
idiv
jne
movsw
movsb
mov
lahf
inc
mov
js
mov
adc
fists
push
pusha
inc
cmp
cmp
inc
cmp
sbb
dec
lcall
push
mov
cmp
outsl
pop
or
jl
fisubrs
dec
sbb
inc
jecxz
cmp
mov
sbb
push
dec
pop
add
add
aaa
pop
cmp
inc
inc
dec
es
add
add
ljmp
rorl
add
adc
fldz
fcomp
aas
scas
fwait
fnstsw
aaa
add
or
or
jmp
data16
push
dec
cmp
mov
js
mov
adc
outsl
inc
push
test
hlt
imul
adc
mov
sub
outsb
xor
sub
cmp
stos
rorb
xor
pop
cmp
sub
sub
test
inc
pop
push
sub
dec
outsb
xor
in
xchg
mov
cmc
push
iret
jge
cmp
add
push
int3
mov
fisttpl
call
jmp
inc
adc
sub
es
pop
pop
xor
xchg
add
adc
in
aas
mov
xchg
ret
jne
cmp
lock
xor
aaa
sbb
or
adc
scas
cmp
loope
mov
test
jmp
fldl
push
ja
lcall
push
add
cmpsl
jns
push
xor
shr
jge
loop
fimuls
enter
repz
jae
xor
loopne
in
ret
aam
mov
jne
mov
in
sbb
faddl
pop
outsb
cmp
xchg
pop
add
pop
cmp
cmp
xchg
pushl
daa
mov
fdivrs
mov
test
mov
or
pop
outsb
and
je
add
inc
dec
pushw
jo
sub
push
les
adc
lock
jo
mov
push
push
xor
or
xchg
lret
ror
push
xchg
dec
push
icebp
pop
sbb
jae
pushf
mov
sbb
xchg
ljmp
insb
xor
cwtl
add
scas
aaa
test
mov
cld
push
xor
ja
and
or
call
cmpl
addl
rorb
add
arpl
mov
add
jmp
sbb
shll
loopne
rol
jmp
push
adc
xchg
dec
xorl
and
test
jne
movsb
mov
inc
cld
out
add
ss
pop
mov
aaa
pop
ss
cmp
pop
mov
pop
xor
fnsave
push
push
add
mov
and
and
push
adc
jne
xor
dec
dec
dec
mov
mov
mov
cmp
lret
rcll
mov
push
mov
movsb
xor
inc
add
pop
add
cs
and
mov
jne
imul
je
jge
adc
dec
add
sbb
mov
adc
inc
cwtl
or
das
add
cltd
cmp
pop
add
mov
sub
push
cmp
cwtl
pop
xor
push
lock
loopne
movb
test
pusha
xor
adc
cwtl
inc
adc
arpl
add
jbe
mov
xchg
jne
ret
daa
dec
repnz
mov
das
jno
cli
and
nop
aad
mov
mov
nop
jbe
mov
adc
adc
push
enter
pop
adc
push
insl
jl
xchg
cmp
add
sub
add
add
dec
push
add
xchg
les
xchg
push
xchg
pop
push
nop
push
sbb
push
xor
push
jmp
cmp
cwtl
jne
outsb
cmp
pop
add
cmp
or
nop
nop
fidivrs
das
xor
push
cmp
rolb
sbb
xchg
ffree
fdivs
adc
fcoml
es
nop
lret
inc
movsb
aaa
add
push
jo
add
loope
adc
test
mov
fbstp
sbbl
xor
test
jnp
aam
mov
push
xor
mov
inc
popa
push
movsl
adc
insb
pop
xor
icebp
push
inc
xchg
add
leave
inc
insb
add
jae
wrmsr
pop
push
and
and
xor
push
push
push
dec
pop
or
pop
arpl
push
dec
jbe
inc
and
add
inc
xchg
push
and
sarl
or
movsl
cmp
push
shll
cs
ja
or
inc
sarl
or
out
sbb
add
jp
push
test
lret
fsts
ljmp
pop
idivb
and
mov
cmp
testl
or
mov
xor
adcl
cmpsl
push
jb
push
sub
rcrb
xchg
lods
leave
and
dec
popf
xor
enter
jecxz
insb
jg
insb
shlb
jl
xchg
cmc
sbb
inc
and
pop
push
sbb
mov
test
mov
cmpsb
icebp
sub
jo
dec
push
bnd
lods
cmp
inc
das
js
aad
decl
cmp
sbb
sete
or
pop
dec
adc
xchg
lock
pop
push
arpl
dec
rolb
repnz
or
shl
test
and
xor
inc
mov
pop
das
int
js
add
fcoms
test
mov
push
jne
xor
pop
repnz
pop
aam
in
mov
cmp
fildl
and
rcrl
and
adcl
mov
ss
add
dec
lahf
add
sbb
mov
jne
sub
ret
leave
mov
int3
das
in
leave
insb
aas
or
and
call
aam
xchg
mov
and
in
inc
mov
movsb
dec
test
testb
aas
add
dec
or
adc
inc
dec
mov
mov
inc
add
sbb
into
xchg
mov
sbb
pusha
in
cmpsl
test
test
add
xchg
arpl
pop
xor
add
inc
push
rorl
mov
jbe
mov
shll
test
or
xor
pop
add
mov
add
out
mov
adc
lock
push
xchg
sbb
dec
pop
das
sbb
or
sub
fwait
cli
cmc
test
cmpsb
subl
in
je
push
push
sbb
hlt
shr
inc
imul
add
push
xchg
ljmp
daa
jg
xor
je
push
jecxz
ss
je
lret
fadds
cmc
std
sub
lock
test
rol
add
xor
pop
inc
and
movsb
or
or
arpl
sbb
cld
fnstsw
pop
pop
test
adc
dec
push
mov
add
sbbb
shrl
inc
mov
or
sub
aad
xlat
movsl
and
outsl
out
xlat
push
andl
mov
out
push
push
jecxz
mov
mov
test
push
clc
icebp
cmp
and
mulb
push
sbb
adcb
lret
push
ret
addr16
adc
pop
movsl
gs
dec
xor
or
roll
jbe
add
pop
or
loopne
jnp
in
movsb
cmp
jns
popa
sbb
xor
push
push
shrl
add
xor
inc
push
mov
pop
xor
popf
movsl
out
xchg
xor
outsb
loopne
stc
push
jp
push
mov
add
sbb
pop
ror
jnp
add
iret
call
pop
sti
gs
das
sahf
call
mov
mov
inc
pop
dec
jg
enter
jb
jae
ljmp
inc
ret
pop
dec
push
sbbb
dec
inc
aaa
test
xor
jl
test
dec
loopne
push
push
add
in
test
cld
das
sub
jl
mov
movsl
mov
lds
rorb
scas
lret
incb
or
ljmp
addr16
rcl
loopne
les
or
inc
sbb
adc
xchg
pop
pop
pcmpeqw
and
and
add
and
dec
mov
sub
fsub
or
or
cmp
adc
les
sbb
mov
bound
or
insb
outsb
and
mov
inc
push
pop
inc
push
push
aam
or
pushf
and
loopne
out
xchg
cmp
xor
shrb
dec
or
les
add
or
ret
xchg
enter
or
lret
or
mov
pop
sub
leave
inc
imul
cmp
rclb
mov
enter
clc
pop
je
xchg
push
adc
inc
sbb
inc
xchg
xchg
sbb
std
cmp
aas
sti
cmp
pop
or
movsb
cmp
in
fstl
xchg
adc
sbb
adc
adc
shr
dec
cmp
sbb
xorb
adc
fldcw
cmp
rol
ficompl
out
or
and
icebp
les
push
insb
leave
nop
js
xchg
and
fincstp
and
out
sbbl
lea
dec
js
mov
dec
outsl
loopne
pop
push
and
mov
xor
or
jle
pop
enter
fs
pusha
shlb
icebp
adc
jmp
addb
mov
add
fldcw
loopne
sbb
push
push
sbbb
add
jg
ret
xchg
jmp
sbb
test
fdiv
movsb
push
fisttpl
inc
and
or
out
and
sbb
xchg
xchg
dec
add
mov
push
pop
jle
rolb
cmp
adc
sti
sub
sbb
pop
cli
shl
or
xchg
push
add
push
jae
xor
sub
fs
out
dec
ret
fcomps
fadds
jo
ucomiss
sbb
inc
and
ja
mov
filds
push
push
outsb
mov
shrb
sbb
loopne
and
je
test
pop
scas
cmpsl
push
jns
bound
xor
mov
push
or
or
jo
lds
mov
sbb
loopne
jne
test
fmuls
mov
or
mov
mov
xor
cmc
add
or
xchg
loopne
ja
cmp
push
mov
inc
pop
movsb
cmp
jl
mov
stc
and
je
test
loope
dec
push
push
cmp
je
xor
push
push
inc
mov
aas
push
and
es
mov
in
or
adc
ret
inc
pop
ficompl
call
and
js
sbb
lods
adc
sahf
xchg
cli
mov
je
fwait
les
add
push
cwtl
sbb
popl
or
jns
das
pushaw
in
and
pop
push
jl
sub
lea
test
mov
push
xor
mov
inc
and
add
sahf
add
add
int3
adc
loop
out
or
jb
outsb
dec
lock
movzbl
cmp
and
jmp
clc
inc
sub
jge
push
mov
loop
lock
jl
mov
scas
inc
or
flds
add
out
bound
dec
jo
test
mov
dec
dec
fcmovb
mov
idivl
add
inc
pusha
push
sub
sti
jge
inc
mov
aam
xor
movsl
add
adc
sbb
push
test
inc
test
add
xchg
mov
jecxz
and
popf
dec
cmp
xor
dec
enter
test
xchg
pop
test
and
movb
mov
lcall
hlt
sub
ds
jno
add
xchg
inc
shrb
andl
repz
push
aaa
inc
inc
cmp
enter
push
je
jl
add
and
dec
scas
jne
cmpb
inc
xchg
mov
ss
jne
mov
incb
xor
cmp
nop
push
adc
ficoml
out
push
adc
and
push
xchg
jp
loopne
push
mov
cmpb
and
xchg
pop
mov
dec
mov
jne
sub
scas
xchg
lds
push
pop
lahf
out
enter
std
ficompl
je
nop
mov
fidivl
push
add
inc
add
std
add
jb
aas
pop
dec
add
adc
push
pushf
push
mov
cmp
nop
sbbb
xchg
cmp
insb
sbb
push
xrelease
fdivp
jns
adcl
loope
into
add
lahf
adc
lret
ret
mov
ljmp
xchg
push
mov
movsl
push
inc
jl
fwait
das
pop
pop
fwait
adc
clc
test
sbbl
roll
xor
pop
stc
incl
push
sti
loopne
add
pop
cmpb
xor
es
cwtl
leave
adc
adc
jge
add
mov
das
xchg
mov
xchg
rolb
jo
shlb
popf
mov
pusha
add
adcb
iret
loopne
push
pop
sbb
aaa
sti
mov
xor
popf
and
push
insl
mov
js
jg
xchg
pushf
movsb
jg
movsl
pop
pop
or
mov
dec
fs
test
xchg
mov
loope
sub
mov
pop
mov
test
cld
cld
or
sbb
mov
inc
icebp
or
xchg
idivb
sbb
adc
inc
adc
rolb
pop
enter
jns
dec
or
lcall
les
jl
push
stos
ret
fiadds
xchg
push
add
jb
outsb
stos
adc
xor
sbb
push
inc
pushf
lea
jns
dec
mov
adc
inc
lea
mov
lods
cmp
inc
add
lods
mov
jmp
test
pop
ja
pop
inc
pop
cmp
stc
cs
out
xor
je
ja
add
mov
adc
push
jns,pn
xor
adc
mov
mov
scas
xchg
mov
push
xchg
xchg
adc
pusha
lods
or
inc
sbb
push
cmp
addr16
dec
aam
xlat
sbb
and
jae
nop
dec
nop
cwtl
sub
fldenv
mov
jne
xor
push
popf
inc
mov
mov
andl
adc
leave
movsb
cwtl
mov
test
std
and
push
inc
mov
lret
aaa
or
mov
inc
mov
or
pop
andb
mov
or
daa
cmp
in
dec
rorl
mov
or
mov
xchg
pop
mov
pop
cwtl
push
xchg
out
pop
adc
xor
xor
arpl
enter
test
daa
inc
jae
cs
out
call
pop
xor
rorb
or
inc
cmp
xlat
mov
or
imul
mov
xor
push
fadd
dec
add
dec
mov
xchg
mov
int3
xchg
and
or
daa
das
push
add
sbb
mov
sub
loopne
loop
in
cs
mov
push
pop
mov
sub
enter
cmp
add
xchg
and
sbb
xor
jae
add
loopne
jne
enter
mov
cmp
add
sub
push
and
push
jo
aas
mov
mov
push
fmull
cmp
dec
xor
dec
ret
cmp
dec
inc
dec
dec
aaa
roll
ss
or
mov
lret
lret
lock
andl
test
xchg
mov
cmp
xchg
in
mov
xchg
mov
test
loopne
and
inc
in
cmp
add
cmp
enter
and
xor
add
jge
jnp
mov
insl
jno
xor
jmp
sub
inc
sub
inc
call
lret
popa
jecxz
sbb
add
dec
inc
mov
inc
mov
adc
lods
and
xchg
pusha
aaa
fimull
add
mov
and
pusha
dec
sub
jmp
push
pop
mov
in
dec
xor
sbb
cwtl
stos
test
adc
xor
xor
ret
xchg
mov
cmp
scas
call
lret
xor
add
and
cmp
jle
mov
xor
mov
or
jmp
adc
adc
cmp
je
xor
cmp
and
sbb
inc
add
cmp
jg
mov
mov
cmp
or
inc
pop
add
test
mov
adc
pop
movsb
mov
push
in
pop
ljmp
xchg
lea
pusha
dec
hlt
cmp
jle
pop
jle
jl
imul
sbb
movsl
jns
xchg
insb
jle
rcrb
sub
push
or
leave
std
fs
ljmp
or
fnstenv
inc
inc
jmp
inc
fs
and
sbb
cmpsb
outsl
sub
mov
pop
repz
int3
sbb
rol
and
dec
mov
adc
xchg
fisttps
mov
jne
mov
sar
or
enter
mov
add
dec
push
scas
push
mov
add
xchg
push
aam
pop
in
lahf
jl
clc
xchg
xor
xchg
and
rorl
and
inc
movsb
pop
ret
aam
pop
in
mov
inc
mov
and
in
or
pop
dec
fwait
outsb
out
dec
jnp
xor
roll
test
xchg
mov
out
add
lods
fcomip
push
scas
adcb
pop
push
rorb
inc
mov
les
add
add
cmp
test
mov
test
call
push
pop
jae
add
push
pusha
xor
fcoml
fmuls
cmp
xchg
ds
les
sbb
into
xor
and
jnp
and
outsb
and
adc
jp
inc
test
repz
movsl
loope
adc
mov
jno
je
mov
and
cltd
fiaddl
ljmp
push
out
aam
ret
sarb
sub
xor
test
or
mov
jae
cmpsb
jo
xchg
in
sbb
jmp
push
mov
push
mov
dec
not
repz
xor
and
sbb
js
sahf
test
push
push
lods
test
push
mov
sbbb
fstl
fiaddl
repnz
ret
mov
xchg
xor
mov
adc
sub
in
loope
aas
ljmp
adc
push
mov
scas
dec
sub
or
pop
rclb
add
adc
push
call
test
cltd
rcrb
stos
cmc
add
pop
in
push
dec
jmp
push
dec
jne
mov
rorb
aam
fldt
jmp
dec
sub
in
repz
push
out
and
enter
or
dec
rol
inc
or
jnp
add
sub
stc
cmc
inc
ret
xlat
es
xchg
test
mov
psubsw
or
xor
or
inc
inc
xor
ss
cltd
test
jbe
mov
xchg
xchg
pop
leave
xchg
cmp
or
push
jae
sub
sub
push
mov
add
cs
mov
jo
adc
jnp
add
and
enter
nop
and
and
daa
lea
mov
fld
stos
jl
bound
jge
xchg
je
sub
mov
lcall
cltd
fnstcw
fcomps
jo
adc
inc
loop
jno
xlat
push
cli
jge
mov
pushf
sbb
add
cmpl
pop
les
dec
stos
mov
mov
inc
ret
lds
mov
mov
sub
mov
jge
or
mov
mov
mov
pop
shlb
fcmovb
jmp
clc
xor
adc
push
lock
fcompl
lea
cmp
test
test
add
jo
sbbl
xchg
cmp
pop
cmp
jbe
add
jmp
add
mov
cmp
and
mov
add
inc
push
imul
add
add
add
sbb
adc
daa
icebp
xor
pop
insl
es
adcb
add
or
int
subb
stos
int
push
fsubrs
lea
mov
add
inc
fisubrs
add
cs
sbb
sbb
add
pop
jnp
add
lahf
xor
push
stc
add
and
jecxz
iret
rcrb
and
jge
pop
sub
mov
ds
push
aad
cld
nop
cld
in
push
sbb
or
loopne
jne
and
mov
lcall
or
add
push
sub
add
xchg
in
push
rcrb
jmp
lds
inc
sbbb
add
adc
cmp
movsb
sub
stos
add
or
adc
jge
inc
mov
dec
hlt
insb
mov
mov
nop
stos
sub
cmp
inc
loopne
push
adc
dec
int
jle
mov
popa
dec
daa
lock
pop
sbb
pop
jae
add
addl
insb
leave
add
and
push
jb
push
mov
cmp
xchg
insb
or
mov
inc
enter
mull
jge
cmp
lea
lret
movsb
rol
xor
sub
sbb
sbb
sub
jae
rolb
out
nop
icebp
lahf
and
test
jp
adcb
add
adc
or
pop
and
mov
das
push
adc
orb
pop
cmp
cmp
and
xor
sub
call
ljmp
das
add
xchg
cmpl
push
add
pop
cmp
push
push
cmp
mov
add
iret
fists
pop
cmp
inc
adcb
jno
test
mov
and
pusha
push
in
push
push
push
cwtl
je
adc
jb
dec
push
inc
inc
xor
push
outsb
inc
mov
mov
daa
inc
addl
push
jp
push
fs
xlat
rolb
cltd
sub
sub
ret
sub
rorb
xlat
dec
xlat
push
xor
imul
jns
icebp
ds
or
daa
cmpb
cld
or
pushf
cmp
adc
adc
sar
sbb
aaa
xor
fs
jge
adc
pop
add
pop
xor
inc
mov
test
aam
push
inc
or
ret
mov
pusha
bnd
fnstcw
push
push
aas
shll
and
and
mov
push
loopne
add
push
lcall
pop
cmp
adc
mov
jl
jns
test
sahf
das
sbb
inc
je
mov
sub
rclb
test
push
test
or
xchg
cmp
pop
pop
push
movsb
adc
or
dec
xlat
and
mov
fistpl
aad
sub
arpl
ret
test
adc
and
push
cmp
fs
das
jp
inc
push
fiadds
xchg
adc
sbb
sbb
mov
and
or
sub
dec
inc
push
sbb
rorb
and
pop
cmp
rcrb
lock
mov
push
dec
sub
xorb
or
push
dec
adc
or
push
cmp
es
and
enter
mov
add
push
test
hlt
dec
mov
push
dec
and
in
inc
lods
mov
cmp
mov
pop
xor
daa
add
and
cld
mov
sbbb
adc
mov
xor
in
mov
push
insb
add
scas
mov
adc
das
jmp
adc
ss
mov
mov
les
bound
pop
add
iret
jnp
je
mov
sbb
inc
mov
xor
sbb
dec
pop
dec
or
fs
shrb
adc
inc
xchg
lret
jae
mov
cmp
cmp
mov
push
xchg
sub
jb
pop
cs
dec
or
sub
pushf
imul
outsl
push
mov
in
in
jbe
es
mov
leave
lods
push
mov
fdivs
pop
mov
in
cmpl
sarb
mov
test
push
cltd
or
xchg
mov
add
fwait
enter
mov
fwait
and
into
je
xchg
xor
andb
sub
ljmp
pusha
jle
fnsave
inc
iret
ja
and
inc
repnz
pusha
sub
pop
stos
ja,pn
push
sbb
or
cmp
and
enter
xor
addr16
inc
and
rol
mov
rcrl
mov
xor
sub
or
ss
enter
inc
lock
sbb
and
fidivs
cmp
jb
push
je
add
mov
ljmp
and
dec
lods
mov
arpl
add
cli
test
ss
push
pop
int
jl
mov
add
rolb
push
adcl
lock
sbb
xor
not
sbbb
push
sbb
mov
mov
sbb
xchg
and
add
or
out
ret
mov
loop
xchg
test
and
lahf
pop
mov
xchg
sbb
push
cmp
push
add
gs
and
rcll
scas
inc
xlat
lods
iret
adc
in
push
dec
push
fstpl
nop
das
in
jmp
push
inc
or
lfs
movsb
xchg
push
jmp
xchg
mov
ljmp
shlb
pop
add
je
add
jmp
ss
test
or
ret
lock
cmpb
test
jno
dec
jp
jno
adc
aas
fs
cmp
xchg
cmp
push
adc
pop
movsl
pop
pop
jnp
adc
mov
mov
push
inc
push
pushf
cmpsl
add
cs
aad
sbb
in
mov
inc
seta
adc
movsb
out
subb
imul
test
loopne
xor
push
test
aas
fwait
movsb
fsts
dec
repnz
outsb
jecxz
pushf
call
mov
test
daa
sarb
lea
in
sahf
aam
sub
push
cmpsb
subb
test
inc
xchg
lret
or
or
pop
aam
aam
cli
push
push
mov
xor
add
xor
fiaddl
add
push
push
sbb
movsb
adc
into
cmp
and
jge
stos
fstl
mov
sub
lock
push
popf
ficoms
testb
ljmp
test
stos
nop
dec
andb
ja
or
xchg
or
push
xchg
push
shrb
jbe
jl
or
lret
jo
ret
cmp
subl
xchg
loopne
les
movsl
mov
out
push
insl
insw
enter
aas
adc
add
pop
lcall
jge
shlb
and
pop
pop
jle
push
cmp
dec
add
push
leave
sbb
dec
insl
fisttpll
inc
adc
jmp
icebp
mov
jge
mov
xchg
addb
xorb
clc
mov
push
add
sub
pop
stc
jmp
fadds
outsl
and
add
repz
sar
add
sub
sub
inc
lea
add
push
add
add
pop
mov
pusha
and
rorl
cli
xor
mov
pop
jo
adc
pop
xor
lods
pop
imul
mov
inc
insl
mov
add
cmp
pop
sub
push
cmc
es
adc
jg
out
sbbb
test
xchg
lock
dec
jl
adc
loope
adc
jl
mov
sbb
sarl
loopne
jnp
cmp
sub
xchg
xor
or
push
dec
pop
clc
popa
push
test
nop
aaa
lock
add
or
add
or
fwait
jae
addl
ss
xor
jle
push
nop
jo
rolb
pop
je
xor
aaa
mov
push
rorl
pushf
faddl
dec
cld
pop
or
shll
mov
pop
lret
clc
ret
mov
or
je
bound
sub
mov
je
jo
es
cld
mov
add
push
jne
jecxz
out
sub
xor
lcall
push
or
nop
or
dec
cli
mov
jmp
in
adc
push
mov
insb
mov
sbb
inc
sub
jmp
cld
push
push
mov
and
add
test
push
nop
addr16
repnz
or
xor
mov
xchg
jno
das
nop
out
pop
jo
add
sub
dec
sbb
out
movb
call
ss
inc
or
add
pop
inc
push
add
push
mov
dec
inc
cmp
jns
and
push
lock
inc
hlt
inc
cs
push
inc
xlat
pop
popa
jmp
add
add
adcb
jl
out
jge
xchg
ret
inc
adc
pop
clc
mov
inc
lock
es
or
int
sarb
xchg
sub
push
cmp
or
sbb
gs
cmp
out
mov
xor
push
add
out
lods
fidivrs
into
nop
jmp
inc
sub
push
loop
add
frstor
out
add
pop
ss
loopne
shlb
push
aas
sub
push
out
and
cmp
popa
dec
push
fadds
jbe
addr16
dec
xchg
or
cld
cmpsb
push
pushl
xchg
cs
add
mov
rolb
shl
mov
adcl
inc
mov
ja
jl
mov
or
xchg
or
shrb
or
fs
and
lret
je
push
inc
xchg
fcmovne
aas
cwtl
push
mov
add
movups
fmuls
jmp
out
or
packsswb
in
or
sbb
loop
insb
push
loop
jecxz
jmp
sub
ds
mov
nop
xchg
test
pop
mov
sahf
cmp
js
in
jecxz
mov
jb
cld
push
fcoml
mov
cs
mov
push
lcall
lock
push
repz
xorl
push
or
mov
ss
xor
push
ds
sub
addr16
add
inc
sub
pop
mov
jno
add
mov
jno
cld
adc
push
fcompl
inc
fmuls
je
push
push
dec
add
or
mov
fisttps
xor
orb
pop
dec
adc
jb
mov
xchg
adc
mov
dec
rorb
popa
sub
lret
mov
orb
adc
sarl
dec
pop
fldenv
bound
add
pop
pop
sbb
lahf
lods
push
jo
or
pop
mov
xchg
std
ror
add
aaa
test
ljmp
cmp
in
dec
clc
mov
xchg
jle
cli
loopne
lahf
subps
or
jno
add
push
or
jnp
dec
xor
mov
mov
sbb
adc
mov
fwait
icebp
imul
cwtl
lock
icebp
ret
xor
push
hlt
dec
cmc
ret
int
xchg
imul
adc
fsts
mov
bound
lock
cltd
add
enter
ret
or
aam
test
cmp
push
movsb
add
fsub
cmp
or
add
enter
cmp
bound
pop
mov
pop
jno
inc
dec
arpl
inc
cwtl
mov
add
pushf
sub
loope
inc
dec
mov
incl
sub
xor
pusha
mov
adc
push
mov
ror
xor
shr
xor
xor
jnp
xor
sar
repz
xor
add
add
add
mov
mov
fs
or
cli
push
jge
jae
or
and
fiaddl
sti
add
in
mov
outsb
sub
jge
jl
lods
loop
inc
sub
repnz
cli
fisubrs
iret
xlat
test
or
add
xor
and
and
xchg
push
or
xor
push
cmpsb
in
push
fs
test
push
sub
fmull
mov
push
or
xlat
ret
jo
lods
sbb
rolb
testl
hlt
add
cmpsb
inc
push
xor
fsubr
or
push
cmp
aam
call
push
xor
sub
int
out
ljmp
rol
out
add
cli
push
xor
pop
inc
lcall
xorb
sbb
in
shl
in
push
sub
bound
inc
push
push
inc
push
bound
pop
add
pusha
mov
pop
aaa
jno
or
fadd
les
call
loopne
cmp
shl
call
xor
loopne
xor
pop
cmp
aam
in
cmp
pop
xor
adc
sti
mov
repnz
mov
or
push
xor
and
dec
sti
or
or
lods
mov
hlt
xor
add
dec
xchg
pusha
pop
inc
adc
adc
or
inc
jo
pop
subl
ficoms
adc
mov
dec
push
sub
xor
adc
call
jne
mov
filds
cltd
int3
scas
leave
fimull
inc
fadds
pop
jbe
call
add
lret
push
clc
jp
jle
pusha
xor
xlat
add
gs
fdivrs
dec
xor
rolb
call
in
rcl
mov
popa
jle
inc
mov
push
sub
adc
clc
jo
cli
push
and
popf
stos
adcb
or
aaa
cmp
inc
lcall
pop
push
cmp
aam
shr
mov
add
cli
stos
mov
and
xor
rolb
rclb
rorb
dec
shll
add
loopne
cld
add
dec
add
xor
xchg
inc
push
and
dec
xor
and
fmull
add
dec
xorb
mov
jb
push
xor
adc
dec
pop
dec
cmp
or
movsb
mov
and
stos
inc
stos
fs
mov
xchg
out
sahf
push
add
rorb
inc
pop
test
add
pop
xor
rcrb
inc
xchg
lret
adc
lock
ret
mov
in
rorb
adcl
and
in
xorl
hlt
fs
sbb
icebp
stc
stc
xor
icebp
sbb
mov
adc
jns
mov
es
imul
dec
ljmp
adc
adc
sbb
fisubrl
loopne
or
and
add
and
add
dec
mov
jbe
cli
push
dec
aam
out
and
aas
pop
add
sub
mov
sbb
jg
js
lcall
inc
aaa
mov
pop
add
sub
subb
lea
pop
xor
insb
adc
or
clc
sub
test
xchg
lock
mov
lcall
jo
lock
rorb
shrl
jl
jae
mov
push
and
sub
aaa
pop
xor
aas
lea
jmp
rcll
push
out
mov
pop
lcall
mov
lahf
mov
mov
dec
jne
pop
add
loope
lock
fcoms
inc
leave
jl
sub
mov
out
sbb
adc
or
imul
mov
outsl
mov
inc
add
jae
push
pop
fadds
adcl
sub
stos
or
mov
inc
lods
cli
cmpsb
ljmp
std
fldt
push
pop
loopne
ror
mov
js
stos
call
mov
addr16
inc
adc
int3
mov
and
cmp
leave
pop
add
jb
cmp
ja
inc
sub
jns
xchg
cmpsl
sbb
inc
aaa
popa
data16
cmp
push
xor
dec
je
add
push
or
sub
cmp
cltd
cmpsl
std
insb
or
push
inc
adc
push
insb
mov
lock
mov
addb
xchg
mov
mov
mov
movsl
jno
testl
das
je
or
movsb
loopne
or
popa
cmp
jne
sbb
in
dec
test
mov
push
dec
inc
lea
inc
mov
pop
dec
xor
rolb
testb
add
imulb
adc
in
or
loop
adc
add
pop
add
inc
cmp
fs
dec
inc
push
inc
and
inc
clc
adc
mov
xor
bound
pop
mov
add
sbb
sbb
cwtl
xchg
clc
lahf
outsl
imul
ss
sbb
mov
lea
and
push
mov
call
shlb
add
outsb
fnstenv
lods
or
jbe
sahf
lods
shll
outsl
pop
cmp
jne
notb
mov
sbb
dec
cmp
clc
je
adc
sub
jno
jge
inc
in
xchg
in
ja
pushf
push
inc
push
inc
ss
pop
cmp
push
add
inc
int
jne
pop
inc
stos
push
pusha
adc
xchg
fildl
sub
popa
loop
jne
dec
push
pushf
dec
mov
clc
out
adc
xchg
inc
movzwl
xchg
fstps
sahf
jb
aaa
jb
cmpsb
mov
rcrb
cmp
inc
sti
add
fsubr
adc
aas
les
sti
int
push
inc
orl
adc
test
jne
xor
and
sub
test
mov
or
or
unpcklps
pop
jae
mov
jmp
dec
rcr
inc
dec
mov
test
dec
push
sub
push
push
mov
mov
sbb
push
inc
call
mov
push
push
xadd
mov
fwait
imul
stc
inc
jg
or
jge
and
aaa
aaa
aaa
and
es
sub
sub
and
insl
jmp
cmp
jl
pop
jle
pusha
jo
subl
inc
test
roll
iret
and
jbe
mov
test
fwait
jle
daa
mov
adc
je
test
jne
je
imul
outsb
and
push
sbb
xor
dec
mov
into
dec
daa
dec
fdivrs
rolb
loop
xchg
push
daa
jb
or
push
popa
sahf
inc
push
sbb
call
fdivs
outsb
xchg
ret
push
mov
scas
call
inc
es
xorl
inc
stos
xchg
mov
lahf
lahf
imul
push
mov
mov
cmp
xchg
push
jg
jle
mov
or
xor
push
xchg
mov
ret
xchg
push
add
adc
cmc
insb
or
sbb
mov
bound
and
mov
test
jmp
xlat
loope
adc
sbb
push
fiadds
test
inc
mov
inc
jnp
xor
cli
sub
push
jno
cld
or
push
push
push
pop
add
pop
cld
xorl
inc
cmpl
push
mov
out
out
lret
adc
xor
mov
or
xchg
sbb
imul
xor
add
lahf
inc
mov
stos
dec
daa
mov
add
xchg
iret
outsb
mov
arpl
dec
fadds
dec
shrl
inc
and
jae
mov
fcompl
jne
cmp
je
xchg
ret
test
call
inc
popf
movsl
lahf
adc
sti
mov
pushf
mov
fs
testl
mov
dec
in
and
push
and
or
add
and
cmc
in
ret
cwtl
movb
dec
lods
xchg
push
and
fs
sbb
mov
in
scas
scas
jl
add
cmp
adc
stc
push
sbb
add
mov
inc
jmp
add
sahf
and
popf
push
cmp
lock
popa
add
pop
pop
add
hlt
inc
xchg
xchg
stos
cmp
add
roll
data16
jmp
add
inc
mov
mov
mov
lock
movsl
int
je
clc
sub
pusha
jb
cs
push
fisttps
fcomps
fwait
es
add
inc
fisttpl
mov
shll
sub
pushl
shrl
add
out
pop
push
mov
push
adc
sbb
or
cmp
pop
cmp
fmull
jmp
xchg
pushf
lods
sbb
jne
lahf
jne
addl
xchg
xchg
xchg
xchg
push
fwait
pop
fs
xchg
jbe
das
or
jne
iret
leave
xchg
or
push
leave
mov
adc
or
and
cmp
or
sbb
and
or
movsb
xor
test
addr16
movb
push
dec
icebp
mov
sbb
cmp
jge
xchg
movb
sahf
rcrb
les
add
jnp
fbstp
mov
rorb
clc
mov
insb
sahf
mov
fmuls
loopne
jne
fnstsw
mov
in
sub
fs
sbb
and
and
pusha
testb
adc
push
pop
insb
in
adc
je
cmp
das
nop
or
inc
add
bound
in
add
into
cmpl
adc
xchg
inc
cmpl
add
xor
mov
shlb
sbb
and
cmp
je
mov
cmp
jmp
add
inc
int
sub
in
cmpl
and
inc
mov
das
lods
ss
les
lcall
out
popf
dec
imul
cld
inc
shlb
fsubr
cmp
imul
push
push
rclb
fwait
adc
in
mov
dec
sbb
jmp
insb
jne
jl
sub
pushf
arpl
fwait
rorl
jae
jo
sub
ss
inc
push
jo
test
inc
dec
shr
pop
cmp
jne
les
aam
adc
jmp
cmp
cmpsb
or
mov
inc
cmp
call
and
dec
mov
push
jmp
test
movsb
push
adc
in
out
jb
sub
lret
loope
cmp
cmpl
xor
and
mov
fadd
jae
push
jns
nop
mov
lods
test
add
out
loope
enter
aas
add
lds
nop
jmp
inc
push
jnp
sub
sbb
cmp
je
pop
or
lock
add
rcrl
cs
adc
inc
mov
add
jne
cwtl
mov
push
mov
xchg
mov
sub
and
lcall
xor
cmp
or
sub
movsl
jns
or
test
pusha
ret
push
mov
push
cmp
add
xchg
ficoml
xchg
add
das
mov
rcll
imul
xchg
cmpsb
pop
xchg
pop
lcall
imul
and
out
xchg
inc
and
mov
fadds
mov
xor
cs
lret
in
xor
cmp
or
inc
dec
sub
pop
mov
inc
mov
jl
rorb
push
sbb
data16
imul
push
cmp
rorl
and
inc
mov
push
std
push
add
es
movsl
in
mov
fsubs
aam
loop
mov
push
inc
lret
movsl
cmp
je
cltd
inc
gs
int3
sbb
add
cmp
jmp
movsb
mov
leave
inc
clc
pop
dec
ret
jbe
nop
inc
push
je
jno
loopne
add
dec
xor
fs
sub
pop
stos
xlat
sahf
or
or
push
repnz
add
fiadds
push
cmpl
ljmp
dec
xor
clc
and
ss
xchg
notb
jne
sbb
dec
rolb
movsb
out
dec
vpsubusb
movb
lahf
push
push
movzwl
loopne
rolb
add
jmp
add
cmp
dec
inc
jnp
sbb
mov
je
call
sti
subl
repz
jmp
hlt
xchg
mov
xor
jae
pop
inc
shll
push
dec
jmp
cmp
dec
int3
mov
jno
and
fiaddl
mov
xor
dec
jo,pt
lock
dec
sbb
push
jno
addb
sbb
cmp
push
jbe
data16
call
mov
les
pop
lods
sbb
mov
mov
orb
icebp
adc
dec
sbb
xlat
dec
cmp
or
dec
mov
stos
sbb
sub
cld
push
sahf
notb
data16
mulb
adcl
push
test
in
repnz
aam
or
pop
adc
xor
mov
bound
adc
jl
mov
arpl
mov
sbb
xchg
adc
cmp
or
cmpsl
movsb
add
orb
or
inc
inc
pop
and
js
dec
mov
orl
loopne
push
test
test
movsb
dec
repnz
jne
imul
jge
cld
or
and
and
or
ret
push
jns
popa
adc
pop
or
scas
aaa
js
mov
cld
aam
inc
notb
mov
jbe
push
and
imul
push
pop
sbb
pop
pusha
sbb
lods
inc
jne
pop
xchg
pushl
repz
mov
mov
xor
or
add
and
add
imul
push
adc
dec
sbb
push
mov
cmp
and
add
pop
repnz
dec
hlt
push
inc
adc
pusha
cmc
add
push
and
adc
mov
fdivl
ja
mov
mov
pop
test
mov
cmp
fs
cld
xorb
int
into
inc
add
test
jno
fistpl
pop
pop
dec
sub
cmpsb
pop
pop
sub
rorl
mov
mov
mov
aas
pop
cmp
mov
icebp
sahf
pop
inc
das
add
mov
sub
sbbl
lds
mov
or
adc
jae
and
pop
jae
pop
fistpl
pushf
push
out
mov
dec
popa
faddp
sti
add
and
sbb
daa
int
jle
pop
mov
push
or
pop
dec
fimull
dec
add
insb
jo
shll
daa
insl
imul
push
sbb
cwtl
mov
add
pusha
lret
inc
push
cmc
inc
add
add
mov
loope
xor
pusha
ljmp
js
and
sub
xor
pop
inc
jle
inc
jg,pn
mov
adcb
mov
xchg
or
adc
and
mov
shlb
cwtl
clc
inc
dec
test
stos
and
cmp
mov
jbe
or
push
aam
rolb
sbb
and
clc
clc
mov
and
add
mov
and
push
sub
or
sub
ret
js
cmp
or
mov
leave
je
xor
sub
xchg
sti
cs
rcrb
adc
in
enter
add
jnp
dec
mov
fwait
or
xchg
rorb
js
mov
inc
or
add
adc
xor
mov
inc
inc
push
pop
arpl
imul
push
push
adc
sbb
es
pop
lcall
sbb
rep
add
mov
mov
mov
mov
pop
js
add
inc
and
or
fidivs
scas
addr16
inc
jnp
and
adc
jmp
xor
push
inc
adc
and
dec
adcb
jge
push
adc
push
xor
mov
dec
and
and
dec
sub
push
js
mov
pop
adc
push
mov
inc
movsb
inc
pop
movsl
je
jnp
sub
mov
cmp
xchg
loopne
or
imul
out
subb
pop
inc
rolb
adc
inc
stos
rorb
testb
sbb
jne
mov
pusha
inc
mov
rolb
inc
popa
inc
pop
and
ss
pushl
inc
cmp
adc
jmp
sbb
push
sub
jne
xchg
xor
or
das
pushl
lahf
bound
lahf
lods
fmull
and
add
sub
lahf
mov
mov
inc
or
ss
cmp
dec
rclb
pop
add
pop
repnz
cwtl
mov
add
pop
stos
fidivs
xor
scas
hlt
xor
sbb
addl
dec
in
jne
and
mov
inc
imulb
add
pop
bound
sbb
leave
fadds
adc
sub
lods
ret
data16
inc
and
fadds
cmp
jbe
lds
jbe
mov
xor
xorl
jnp
enter
push
push
jp
stc
pop
ret
dec
in
insl
xor
and
adcb
inc
push
divl
mov
jnp
test
repz
add
sbb
js
jl
nop
movsb
orl
aam
mov
push
push
lea
les
inc
gs
andb
dec
or
sbbl
add
sbb
cmp
out
repnz
subb
pop
adc
push
push
dec
xchg
sub
cmp
push
cmp
add
hlt
clc
pusha
cmp
lcall
insl
mov
sub
lahf
or
in
add
out
mov
mov
mov
add
adcl
aas
imul
mov
cld
or
and
jae
push
inc
fs
add
jmp
xchg
test
sahf
jl
gs
jle
lcall
shll
outsb
dec
push
scas
loopne
dec
loopne
inc
mov
inc
mov
loopne
push
push
jg
cmp
hlt
enter
cltd
cltd
xorb
es
fidivrl
push
and
mov
ljmp
mov
push
xchg
fs
push
out
int3
adc
mov
adc
cmp
jbe
iret
or
ret
adcb
pusha
sbb
loopne
mov
loop
repz
jbe
add
add
mov
and
lods
mov
and
jle
adc
or
inc
jae
rcrb
adc
lock
orl
mov
sbb
and
sub
aam
pusha
lret
cmp
jbe
sub
add
fadds
das
sahf
push
mov
pop
push
pop
fisubrl
add
push
pop
push
adc
inc
negb
sub
adc
clc
pop
test
or
mov
js
dec
flds
ret
add
mov
inc
movl
and
or
sub
ret
push
aad
inc
xor
push
scas
rcrl
mov
clc
dec
cmp
or
pop
out
inc
cmp
shrb
je
mov
clc
add
push
enter
sub
and
push
and
add
repnz
push
cmp
cmp
imul
cmp
mov
adc
je
or
das
xchg
mov
xor
jmp
adc
les
pop
ret
sub
dec
pop
mov
nop
dec
movb
push
pop
leave
insl
sbb
xchg
mov
in
inc
push
jmp
int3
jnp
sbb
mov
jne
ds
mov
into
push
mov
cmpsl
pushl
outsl
ss
sti
ret
test
cmc
add
mov
adc
ss
in
xchg
mov
and
or
aas
adc
inc
add
inc
int
pop
ljmp
xor
sbb
inc
fsubl
pop
cmp
dec
sti
shll
outsl
cmp
or
pop
jge
clc
inc
inc
lea
push
sbb
push
pop
jb
mov
sbb
dec
jecxz
inc
sub
cmp
jl
pop
scas
sub
lods
frstor
scas
lcall
test
fstpl
xorl
loopne
packsswb
stc
ja
and
jne
adc
mov
iret
jb
sbb
clc
addl
mov
jle
mov
ror
mov
inc
push
mov
add
loope
add
pop
push
jmp
psrlq
sbb
push
stos
xchg
hlt
pop
rorb
lea
fadds
test
inc
mov
xchg
outsb
daa
cli
fcoml
xchg
mov
lea
sbb
ljmp
xorl
xchg
aas
and
rcll
pop
sub
dec
cld
jge
cmp
shlb
adc
or
sar
aaa
jmp
fwait
add
mov
sub
movsb
push
adc
push
push
inc
mov
inc
xor
fsubrs
rorb
fisttpll
push
dec
pop
add
arpl
mov
sbb
dec
jg
mov
push
ret
or
bnd
add
lock
bndstx
int3
xchg
mov
cmp
jne
jbe
sub
adc
push
rcrl
pop
cmp
jmp
iret
mov
ret
pop
cmp
xor
dec
stos
mov
dec
cmp
cwtl
ss
loop
int3
jmp
flds
push
pop
mov
addl
rolb
sbb
mov
mov
adc
stos
cmp
nop
mov
push
xor
or
jle
cld
or
int
dec
mov
xor
loope
inc
das
pop
xchg
jb
js
testb
mov
inc
addb
bound
xchg
add
ret
adc
add
mov
add
and
push
cmpsl
and
fcmovb
mov
in
inc
scas
rclb
stos
inc
movsl
dec
shrb
icebp
and
ljmp
cld
add
popa
rclb
mov
pushf
arpl
sub
xchg
das
lock
ret
cmp
cmp
cmp
cltd
fistpll
add
push
lock
and
and
pop
mov
mov
xchg
pusha
mov
cmp
aad
cld
push
push
iret
add
sbb
mov
lcall
or
enter
inc
cwtl
mov
dec
loope
add
scas
mov
push
sbb
flds
mov
mov
jno
add
sub
add
rolb
js
or
add
clc
dec
push
cmp
or
daa
jo
mov
inc
xor
clc
mov
lahf
push
cmp
call
subb
pop
sub
inc
rcr
mov
xchg
add
notb
pop
pusha
mov
mov
cmp
je
add
xor
push
adc
out
pop
mov
jmp
popaw
push
mov
ret
mull
push
add
dec
lea
data16
mov
fwait
mov
es
call
mov
inc
shl
mov
lahf
loopne
pushf
add
pop
sbb
mov
sbbb
loopne
sbb
inc
scas
xchg
adc
test
loop
pushf
lea
add
dec
das
inc
adc
dec
sbb
and
pop
sub
add
and
mov
add
rol
inc
fnsave
mov
flds
push
and
add
push
call
add
mov
mov
inc
pop
dec
addr16
cmp
lock
cli
add
or
les
and
pop
jne
and
adc
push
fsubp
push
imul
sub
lcall
xor
mov
pop
fstl
test
dec
mov
cmp
jo
ret
or
inc
stos
push
shrb
andl
ss
xchg
mov
mov
adc
xor
push
adcb
xlat
inc
push
shl
mov
xor
and
sbb
xchg
sbb
ret
mov
leave
ret
pop
mov
jno
sub
cmc
mov
pop
lods
fwait
shlb
push
mov
or
call
dec
add
add
pop
in
andl
or
sti
out
addr16
aas
mov
or
and
adc
mov
pusha
dec
jbe
stos
stc
adc
add
cmp
jmp
clc
jmp
sbb
stos
sub
fisubrl
es
data16
cmp
jbe
jecxz
ret
das
sub
lret
adc
mov
cmp
fstpl
aaa
call
adc
sub
jnp
addr16
cmpsl
mov
mov
mov
int3
xor
in
adc
mov
jp
inc
cmp
lea
mov
jge
sbb
mov
sub
sub
add
shrl
loopne
sbb
push
sahf
sbb
mov
jne
lods
adc
push
xchg
xor
inc
push
clc
cmp
jo
das
mov
pusha
mov
loope
js
mov
lock
inc
cmp
push
popl
add
popa
std
sti
ds
jmp
push
add
inc
mov
mov
je
xor
inc
cwtl
inc
test
rol
ja
push
cmp
call
outsl
arpl
lea
sub
int
cmc
inc
out
popa
imul
add
out
cmp
lcall
inc
or
aam
shrb
cwtl
adc
mov
and
adc
sub
inc
or
addb
pop
dec
xchg
inc
or
lock
and
pop
cmp
les
mov
push
mov
add
and
insb
inc
xchg
pop
clc
dec
cmp
push
or
cltd
cmp
loop
add
jp
in
and
jl
jmp
mov
sbb
xor
sub
mov
adc
popf
je
jns
and
dec
je
dec
mov
push
sbb
mov
ret
mov
jp
stos
daa
sti
lods
mov
lea
mov
icebp
sti
pop
sbb
loop
dec
adcb
jmp
cmpl
xchg
push
jo
and
repz
mov
jne
cmp
and
jp
test
fbstp
mov
cltd
js
mov
xlat
sub
adc
sbb
xchg
out
sbb
inc
lret
xor
and
jbe
jno
adc
adc
out
dec
sub
xchg
mov
inc
div
push
push
fsubrl
rcrb
insb
cmp
sub
lods
ret
fs
call
inc
mov
cmc
into
shll
fs
push
adc
lds
popf
add
or
cmp
int3
push
sub
jge
out
js
lret
int3
jb
add
jns
push
lods
xchg
call
dec
popa
call
mov
out
adcl
test
mov
pop
sbb
sbb
add
sbb
or
inc
fcomi
and
xor
clc
sbb
cmp
cmp
faddl
add
aam
mov
xchg
iret
mov
push
inc
lods
lea
shll
lea
stos
setge
ss
push
lahf
mov
loopne
or
mov
pop
add
gs
sub
fcmovne
in
cmp
je
shlb
add
orb
adc
lods
shrb
in
in
push
xor
jle
ret
bound
divl
nop
sbb
call
outsb
test
or
xchg
pop
ljmp
adc
in
pop
sbb
sbb
pop
mov
lods
jae
dec
ret
test
sub
std
loop
jb
xor
add
outsb
adcb
sbb
add
cmp
je
dec
xchg
push
xchg
pop
add
daa
or
inc
add
xor
sbb
std
pop
bound
push
add
jo,pn
or
pop
adc
or
lock
test
push
enter
or
imul
data16
and
inc
jns
add
mov
lock
push
cmp
cmp
cmp
dec
aas
mov
xor
testb
rol
add
push
lret
or
gs
jmp
jnp
sti
sbb
mov
push
or
mov
insb
in
cmp
sub
sbb
jns
xchg
cmp
clc
jne
mov
push
test
out
add
nop
sub
push
movsb
cmp
stos
mov
sbb
mov
dec
and
xchg
nop
xchg
sbb
xchg
mov
hlt
sbb
scas
xchg
hlt
jns
or
inc
loopne
pusha
ret
rcrb
dec
xor
outsb
and
rclb
cmp
jae
in
scas
and
lret
fxtract
jne
and
fistl
dec
rorl
cld
loopne
fnstenv
mov
push
mov
fcomps
add
or
lcall
lret
adc
pushl
inc
call
bound
mov
shrb
mov
daa
mov
daa
sbb
iret
lret
movsl
popf
rolb
or
xor
ds
xchg
cmp
xchg
pop
cmp
cmp
pop
dec
mov
mov
hlt
mov
iret
rcrb
loop
sub
or
jge
lea
or
pop
lret
mov
inc
and
dec
fimuls
aaa
sbb
adc
inc
inc
aaa
out
shlb
test
or
cmp
mov
nop
adc
add
jmp
data16
push
adc
es
push
adcb
or
adc
outsl
inc
in
call
mov
divl
cmp
cmp
popf
pop
jne
push
jns
sahf
add
sub
ljmp
and
ja
loopne
pushf
sub
pop
imul
sbb
add
popa
lds
and
push
push
pop
in
lret
rorb
in
inc
das
mov
imul
lock
inc
sub
bts
xorl
sub
movsb
inc
insl
bound
pop
andb
loopne
sub
mov
out
movsl
and
sbb
add
lcall
in
or
xchg
mov
sbb
inc
adc
ds
jecxz
mov
push
in
xor
pop
pop
sti
jne
mov
mov
fdivrs
pushf
or
int
lock
push
push
inc
out
sbb
leave
frstor
sbb
pop
sub
dec
fnstenv
testl
cltd
addr16
pop
pop
inc
cli
cmpsb
rolb
or
clc
or
negl
add
nop
scas
pop
xchg
cli
jecxz
loop
xchg
pop
call
int3
leave
adc
xlat
pop
pop
mov
addr16
add
ds
inc
inc
adc
dec
test
lods
add
adc
sub
test
xor
xor
rcrb
jo
adcl
inc
test
jmp
dec
inc
mov
jge
mov
test
mov
imulb
fwait
call
ret
test
cs
mov
add
cmpb
test
adc
fwait
loop
cwtl
addb
jl
jmp
or
xchg
mov
mov
pushf
icebp
mov
mov
jmp
ret
imul
mov
adc
fsubs
leave
adc
sbb
sbb
orb
es
push
lds
add
fs
mov
push
in
stos
add
fimull
push
ret
sbb
jne
jg
in
xchg
mov
and
push
mov
jb
dec
push
jbe
addr16
or
mov
sahf
adc
cmpl
mov
rolb
fdivrs
xor
cwtl
orb
cs
loopne
xlat
sub
cmp
cli
cmpsb
mov
add
push
jae
stc
sbb
ret
mov
loope
fcmovnb
jp
outsb
int3
outsb
sahf
inc
lods
or
dec
out
aaa
divb
mov
inc
jmp
enter
lea
lods
pshufw
mov
popf
aaa
xchg
mov
adc
cmc
mov
test
mov
aad
popf
dec
adc
add
sub
push
pop
loop
adc
int3
pop
int
fiaddl
insl
shl
add
into
lods
es
push
push
adc
inc
sbb
aam
clc
pop
gs
cmp
jmp
xchg
dec
cmc
jp
push
dec
jns
iret
call
pop
add
frstor
push
adc
loopne
push
pop
jno
mov
call
subl
add
movsb
xor
call
jbe
addl
cs
inc
and
ljmp
cltd
lret
enter
cmp
es
scas
mov
out
in
jl
cmp
test
mov
sbb
decb
enter
sbb
inc
xchg
aad
sbb
sub
bound
xchg
sub
out
mov
popl
pop
in
mov
fdivr
clc
add
clc
jno
mov
add
or
sub
mov
icebp
or
sub
jne
sbb
or
cmp
sub
sbbl
or
sti
mov
arpl
dec
inc
adc
popl
lea
call
pop
into
iret
popf
rol
test
leave
popf
fmuls
out
cmpsb
sbb
popf
loopne
or
aas
adc
pcmpeqw
add
dec
fsubrl
push
movups
jnp
mov
and
loopne
js
verr
inc
stos
sub
outsl
fidivs
movsl
popa
or
test
mov
not
mov
mov
shll
fwait
sub
sbb
push
insb
xchg
mov
jb
mov
test
adc
xor
jmp
mov
popl
popl
popf
xor
in
push
sbb
mov
dec
and
ficomps
imul
xor
lea
mov
dec
pop
xchg
mov
shll
notb
add
sbb
das
sub
adc
xlat
xchg
mov
cmp
in
cmp
movsl
or
fdivs
dec
xor
mov
lret
lret
in
dec
or
sbb
inc
loope
add
je
dec
adc
xchg
lods
mov
movsb
adc
repz
jo
jg
inc
and
adc
icebp
mov
sbb
mov
xchg
xchg
xlat
mov
fdivrl
sbb
ss
ret
sub
add
sbb
pop
das
mov
test
mov
shl
jmp
sarl
sbb
mov
mov
int
or
enter
ljmp
bound
xor
repz
and
dec
push
pop
jl
mov
add
lds
fwait
gs
mov
incb
mov
xor
jle
pop
leave
cmp
push
daa
repz
push
fcomi
mov
mov
iret
into
es
enter
push
mov
xchg
pop
mov
jo
lea
push
cmp
lea
xchg
aas
or
rcll
rorb
add
xchg
lcall
cld
pop
test
or
inc
popa
lds
add
sub
fildl
push
push
adc
sbbb
push
add
xor
cmp
dec
add
outsb
insl
dec
test
subb
inc
push
dec
jbe
int3
adc
ret
add
in
cmc
je
test
inc
mov
sbb
aaa
stos
test
mov
cmpsb
jge
jmp
cwtl
repz
mov
imul
cmpsl
scas
xor
or
jmp
and
xchg
add
adc
in
mov
clc
inc
push
jmp
pop
mov
sub
mov
jge
inc
cld
or
and
inc
lret
jmp
movsb
push
fs
mov
ficoms
cmp
pushl
cmc
stc
movl
gs
push
jo
push
out
add
enter
pusha
dec
or
bnd
adc
xchg
push
orb
js
repz
push
jae
lea
push
sub
sbb
fsubrs
xchg
subb
shll
sub
xchg
or
xlat
or
popa
jo
insl
ja
or
call
mov
icebp
add
fldln2
push
pop
insb
ss
rorl
push
cmp
jae
ja
testl
jp
sub
xor
cmpsl
insb
lea
xchg
ret
cmp
test
sbb
sub
imul
call
clc
andl
and
mov
outsb
mov
lret
xchg
pop
imul
add
push
adcb
push
push
adc
push
push
jne
sbb
movsb
add
push
and
sbbb
mov
fs
dec
mov
arpl
or
hlt
fstps
mov
jl
loopne
out
bnd
sahf
inc
xor
imul
mov
mov
mov
add
push
push
and
fdivrs
mov
push
add
mov
cmpsb
sub
xor
sbb
or
or
rorb
inc
cmp
lcall
or
dec
sbb
imul
add
imul
inc
cmp
ja
jmp
cmp
xchg
pop
mov
xor
sbb
pop
jecxz
sbbl
pop
inc
dec
in
add
ds
push
sbb
cmp
clc
invd
enter
sub
jmp
pop
stos
lods
sub
push
inc
or
mov
dec
adc
bnd
das
inc
jo
sub
cwtl
dec
inc
add
and
xor
aaa
jmp
mov
adc
shlb
lea
cli
or
adc
ret
push
ljmp
daa
lock
add
mov
mov
add
iret
aam
test
push
scas
pop
test
dec
cmp
fisttpll
addb
cmpsb
imul
imul
add
add
movsl
or
inc
and
in
inc
lods
and
adc
repnz
fwait
sbb
daa
cld
outsb
pop
inc
and
and
hlt
pop
pop
imul
or
subl
je
cwtl
stos
es
pop
mov
cmp
testb
sbb
str
jne
negl
js
cmpsb
aad
sub
mov
dec
popa
hlt
lea
push
adc
push
and
xor
test
cmp
jmp
aam
jecxz,pt
movl
dec
aad
mov
or
adc
jle
sbb
sub
dec
es
adc
xlat
push
mov
xor
cs
or
fisubrs
mov
test
xchg
outsb
out
adc
xorl
xorl
and
inc
addl
jne
pushl
inc
scas
subl
cltd
adc
push
cmp
addr16
mov
adc
andl
repnz
jge
cmp
add
orb
inc
test
push
push
jbe
cmp
rorb
xlat
ljmp
add
jmp
push
cmpsl
adc
dec
push
fcoml
sub
or
pop
inc
adc
imul
sbb
dec
jne
mov
les
outsl
sub
cmc
imul
ja
int3
mov
lret
cld
mov
sbb
rorb
mov
pop
sbb
pop
sbb
sub
cmp
adc
mov
inc
shrb
mov
mov
push
push
or
cmp
mov
adc
adc
mov
or
mov
jmp
clc
cmpsb
mov
out
fs
js
jge
jo
xor
stos
cmp
mov
jnp
pop
mov
loope
cmpsb
mov
test
pop
adc
cmp
add
adc
test
stos
cmp
add
xchg
pop
insb
lea
pop
repz
push
cwtl
icebp
dec
fstl
js
xor
and
orl
push
jle
mov
pop
nop
fstl
fiaddl
mov
cmc
nop
fidivs
mov
adc
scas
in
xchg
jae
hlt
cmp
push
les
add
mov
add
nop
or
pusha
loope
jo
mov
jne
xchg
cmpsb
push
or
imul
jmp
ds
lret
call
incl
dec
sbb
sti
divl
xchg
pop
xor
or
cmp
lock
inc
xchg
inc
or
andl
mov
pop
lods
jbe
mov
mov
push
ret
aaa
mov
cmpsb
jno
adc
dec
sub
shlb
sbb
ss
aas
add
enter
das
lods
or
pop
push
cmp
ss
imul
pop
jmp
push
js
jbe
mov
jmp
das
adc
xor
jle
int
fwait
lret
inc
or
dec
adc
loope
pop
adc
jp
add
adc
and
cltd
push
sub
dec
lret
cmpb
aas
pusha
jecxz
push
sysret
push
ret
mov
mov
add
sub
inc
cmpsb
popf
mov
cmp
jne
clc
or
mov
out
and
or
es
imul
das
mov
mov
or
add
vdivsd
inc
and
jp
fimuls
adc
xorb
inc
ficompl
sbb
mov
popa
and
aad
jo
adc
fcompl
mov
or
andl
rorb
inc
or
xor
cmp
inc
jo
sub
xor
push
and
loop
push
push
ret
push
xor
cmp
jae
fsubrs
aam
and
push
adc
dec
pop
lock
adc
mov
mov
adc
arpl
or
enter
adc
loopne
and
sub
inc
into
sti
jmp
aam
mov
or
jmp
adc
mov
jns
fadds
add
or
xor
inc
cmp
mov
or
or
push
fidivs
jb
mov
and
aam
cwtl
enter
push
push
gs
in
and
notl
lods
ds
bound
dec
inc
mov
cmp
in
jae
jbe
dec
inc
mov
cmp
out
push
mov
mov
or
sbb
mov
jecxz
scas
push
mov
sbb
mov
cmp
sahf
outsl
and
sbb
mov
test
dec
push
push
popa
or
gs
lock
push
das
push
push
fcoml
aas
test
loope
pop
icebp
cmpl
int3
or
out
inc
add
in
or
pop
push
mov
jecxz
roll
mov
pop
push
jmp
push
push
push
adc
jb
inc
out
push
cwtl
push
fdivl
addl
inc
loopne
pop
adc
incb
push
and
mov
repnz
jb
repnz
or
sub
loop
cmp
cmpl
jne
sbb
pop
or
pop
inc
cmpsb
or
add
push
rorl
rolb
inc
or
mov
cld
int
repnz
cmp
jle
push
test
out
and
add
jnp
mov
mov
inc
cmp
in
mov
sbb
and
shrl
sbb
jne
push
in
xor
push
xor
mov
fcoml
adc
pop
push
inc
ret
stos
xor
movsb
pop
cmp
and
or
adc
inc
sub
in
add
and
sub
mov
push
dec
insb
mov
or
push
push
insb
rorl
mov
jo
out
das
xor
dec
dec
sbb
pop
add
clc
dec
adc
int3
aas
or
jno
call
sub
inc
jo
jne
addl
inc
mov
imul
mov
pop
inc
stos
loopne
in
stos
hlt
add
or
jne
pop
cmp
cltd
sbb
mov
out
push
call
sub
gs
add
add
add
xor
xor
idivb
or
jo
sub
clc
mov
sarl
sbb
incl
lock
testb
je
cmp
mov
aad
data16
push
cmp
je
dec
or
jmp
sub
jb
lahf
cmpsb
mov
add
add
daa
and
sub
cltd
jge
roll
imul
or
mov
loope
add
aas
mov
push
pop
mov
push
add
mov
adc
jae
fldl
pop
data16
jmp
mov
popa
sbb
cli
dec
cltd
loope
mov
fisttps
jne
jg
sub
jo
dec
xorb
add
cmovl
sbb
inc
outsb
cmp
ficomps
insl
pop
addr16
jo
and
push
pop
pop
add
push
movsb
xor
cmp
cli
sub
mov
dec
or
or
inc
mov
rorb
adc
leave
jno
adc
jbe
xchg
fstpl
adc
push
push
mov
repz
xchg
add
mov
mov
cli
pop
mov
sbb
int
rol
lock
rorl
sbb
sbb
imull
or
inc
fiaddl
pop
cmpb
leave
jmp
rorb
adc
and
and
inc
sbb
jne
adc
sbb
pushf
push
lods
mov
lret
into
jne
data16
popa
shrl
cmp
pop
out
adc
stc
jmp
mov
testb
lret
jmp
push
xchg
pushf
mov
pop
pop
xor
dec
ss
xor
sbb
icebp
push
xor
inc
loopne
cwtl
dec
or
cwtl
inc
inc
or
xor
xor
mov
adc
imul
push
mov
es
jo
jno
inc
jp
repz
jg
jne
cmp
jne
push
imul
or
push
cmp
lods
pushf
mov
add
cmp
jg
xchg
jo
jp
rorl
out
aaa
les
fimuls
push
repnz
loop
inc
push
test
not
and
inc
nop
push
or
roll
xor
sbb
xlat
xchg
inc
jno
dec
movl
mov
ja
mov
sub
sub
sti
sub
jbe
push
or
into
cmp
mov
mov
lea
jp
push
and
and
push
pop
int3
insl
add
or
mov
je
inc
nop
orb
call
clc
sbbb
cs
jmp
adc
sarl
mov
sbb
lcall
adc
movl
pop
dec
adc
and
cmp
add
dec
out
add
ja
push
mov
sub
dec
bound
xchg
loopne
jae
sub
mov
test
jo
jo
loopne
mov
mov
bound
sbb
leave
add
pusha
es
adc
sar
pop
inc
pop
fisubs
adc
cmp
jbe
push
adc
adc
outsb
mov
add
add
cmp
insl
loopne
and
or
jmp
inc
adc
push
xchg
nop
rdmsr
lock
add
gs
mov
jae
fisttpl
sub
aad
in
or
lret
popf
out
xchg
xchg
lock
pop
cmpsl
xor
sti
push
and
mov
cmpsl
add
loop
scas
jl
sti
mov
adc
cmp
pop
dec
and
stos
stc
cmp
ffree
stos
lahf
xorl
mov
xchg
ss
sbb
stos
or
subl
sbb
lret
js
insb
mov
xchg
pusha
cmp
adc
push
addr16
cltd
inc
pop
pop
fstps
aas
addb
pop
cmp
add
ficomps
outsb
pop
in
sbb
sub
scas
xor
dec
dec
pop
dec
in
shrb
xchg
xor
cmp
cmp
in
jmp
cmpb
aam
push
xchg
and
or
inc
fidivrl
out
int
and
mov
jnp
xchg
aaa
in
decb
cmp
and
testb
jo
push
inc
adc
testl
or
fisubrs
dec
loopne
clc
out
add
ja
ljmp
push
ds
jae
mov
pop
dec
lock
jo
jmp
add
data16
inc
je
sar
mov
cwtl
repz
mov
push
inc
sbb
insb
xor
push
scas
mov
test
ss
pushw
xor
and
mov
out
sub
sbb
ret
es
int3
adc
or
adc
loope
add
movsl
lds
in
cmpsb
je
dec
add
out
push
scas
addl
outsb
popa
out
xchg
sub
cmp
hlt
cmpb
sbb
pop
gs
sahf
mov
inc
push
out
jb
cmpsl
or
adc
sub
push
in
push
push
pop
lods
scas
pop
out
bound
pop
xchg
jno
add
or
shlb
inc
push
fmuls
sbb
pop
push
lock
jo
test
mov
jge
xor
dec
movsb
jbe
rorb
or
cmp
fdivrl
movsb
sub
cmp
in
pop
clc
das
loopne
lods
xor
or
shll
sub
xchg
add
inc
nop
xchg
mov
mov
mov
sbb
sub
ljmp
mov
add
adc
call
arpl
mov
je
sub
stos
mov
jne
repnz
cs
mov
push
andl
add
sub
popa
or
jmp
dec
push
add
adc
fsts
pusha
mov
push
movsb
jmp
pop
sbb
lahf
daa
jne
je
jmp
or
push
dec
dec
xchg
and
push
dec
rclb
repnz
cs
xchg
or
in
inc
sbb
imul
jg
jmp
loopne
adc
jecxz
mov
insb
jecxz
sbb
lcall
and
jnp
mov
shll
bound
dec
mov
inc
test
aaa
and
push
and
out
pushf
es
sbb
mov
dec
inc
aaa
mov
pop
pop
and
add
sbb
or
mov
pop
fistl
or
cs
and
sub
or
adc
mov
sub
dec
inc
mov
dec
icebp
pusha
add
lret
int3
rcrb
sbb
cltd
outsl
or
nop
cmp
xor
xor
jb
mov
ljmp
push
cs
pushf
push
jge
cmp
rcll
xchg
push
push
push
xchg
or
test
push
xchg
adc
mov
cmpsl
and
loopne
adc
add
adc
xor
test
mov
mov
sbb
arpl
inc
bound
insl
fs
inc
jne
and
adc
ja
sarb
push
ja
loopne
sbb
dec
je
xchg
jno
add
push
test
dec
inc
xor
dec
sbb
pusha
push
loop
int
roll
nop
repz
mov
mov
je
movl
or
sub
mov
repnz
pop
mov
scas
ret
cltd
test
rcrb
inc
js
js,pt
xor
dec
arpl
inc
add
add
cmpsl
and
jnp
push
inc
clc
xchg
mov
hlt
push
xchg
jp
stmxcsr
dec
push
jmp
sbbb
fisttpll
or
or
cmp
add
mov
loopne
clc
jg
sarl
xchg
jo
movq
movaps
out
push
enter
shlb
jle
xor
cmc
or
das
cli
rcl
lret
je
in
dec
mov
repz
or
jg
sub
or
pushf
fstl
dec
fwait
xor
jnp
mov
pop
jg
sbb
adc
or
add
adc
or
pop
lock
xchg
pop
add
ffree
roll
add
scas
std
imul
enter
push
sub
xchg
cmpsl
mov
adc
dec
sbb
mov
in
ret
cmp
sub
ja
loop
adc
daa
inc
jo
mov
popa
scas
iret
xor
push
addl
pop
decl
rcll
pop
repnz
movsb
adc
repnz
push
ret
jge
mov
xchg
push
loop
ret
xchg
push
movsb
leave
or
lds
xchg
fwait
icebp
ret
sarb
inc
jbe
call
rcrb
inc
sbb
dec
daa
mov
movsl
pop
and
and
popa
adc
into
bound
cs
dec
pop
rorb
push
mov
push
arpl
xchg
cltd
adc
sahf
lods
inc
add
ja
jle
mov
cmp
mov
subb
mov
mov
cmp
jne
jb
sbb
subb
lds
xor
xchg
xor
lock
js
mov
cmpsl
and
jnp
out
mov
scas
or
mov
popa
pop
pop
or
add
dec
push
stc
aam
sbb
cli
add
ljmp
sub
hlt
fcomi
add
jp
pop
sub
js
stc
arpl
jmp
push
test
push
mov
push
pop
add
rclb
xchg
inc
push
popa
frstor
mov
mov
aad
mov
adc
inc
cmp
jne
inc
cmp
pop
inc
movsl
mov
bound
and
nop
mov
and
inc
xor
insb
out
push
adc
adc
and
xchg
jmp
clc
loop
mov
nop
or
inc
inc
cmp
jb
add
cmp
add
sahf
lret
adc
dec
adc
push
add
push
push
lret
pop
mov
adc
or
push
shrb
or
add
cwtl
sub
cli
push
mov
pusha
mov
cs
and
inc
or
jg
les
inc
hlt
cmp
jecxz
pushf
shll
dec
inc
outsl
push
fiadds
xlat
enter
rcrb
xchg
mov
shl
shlb
dec
leave
shll
daa
hlt
sbb
stos
or
inc
pop
cmp
dec
shl
mov
mov
mov
inc
inc
cmp
aam
pop
pop
mov
lret
jne
sbb
js
loope
jg
jmp
jnp
and
sti
xor
test
or
dec
mov
inc
ss
add
jmp
mov
popa
cmp
insl
xchg
sbb
seta
sbb
or
or
add
sub
sub
js
sbb
jae
jo
shrb
or
out
cmp
dec
bound
mov
iret
or
push
and
cmpsb
cmp
stc
jne
and
cmc
push
dec
xor
xchg
fiaddl
mov
push
jne
lcall
lea
stos
mov
dec
mov
je
dec
or
cmp
lock
jmp
fsubs
orl
and
and
or
mov
jne
idivb
and
pop
sub
xchg
cs
jle
loopne
rolb
or
cmpsb
addb
mov
add
cmp
cwtl
pop
lods
loopne
mov
add
and
sub
sbb
dec
pop
and
inc
pop
inc
insb
xor
cmpsl
inc
testb
js
pop
popa
push
xor
push
push
out
adc
mov
add
adc
sub
fisttps
test
jl
jg
mov
pop
mov
inc
xchg
jbe
push
add
adc
rol
int3
xchg
test
mov
loopne
rcrb
icebp
shlb
daa
in
inc
or
imul
adc
adc
dec
jb
xchg
cmp
jecxz
lcall
add
jae
adc
fidivs
sub
pop
ret
or
imul
push
fwait
into
add
mov
add
sub
add
ds
pop
pop
test
inc
push
sbb
pushl
dec
push
popf
call
subl
xchg
adc
xchg
fwait
jle
push
fstpt
xchg
add
sti
and
repz
aam
ret
adc
lock
add
inc
push
sbb
lds
pusha
jb
iret
mov
sbb
xchg
push
jnp
cmc
movsl
inc
rorl
in
pop
cmp
clc
fmull
push
sbb
mov
lods
lds
adc
out
repz
clc
bound
mov
push
aam
push
push
mov
xor
fcoms
inc
mov
out
pop
lock
movsl
popf
nop
adc
mov
jle
or
or
mov
pop
dec
cmp
pusha
fisttpll
lea
mov
js
cmp
mov
mov
pop
push
fadd
inc
xchg
hlt
fsubr
ficomps
add
cmp
jb
xor
pop
in
sbb
ss
jp
divb
daa
or
sub
xchg
bound
push
cmpsb
loope
xor
fcompl
push
cs
mov
adc
or
loop
add
add
sub
loopne
in
idivb
stos
ds
mov
add
jge
sub
xchg
je
into
sbb
pop
sbb
pop
fistpl
mov
push
shll
xchg
push
pop
pop
lods
leave
mov
ret
adc
or
mov
inc
adcb
add
push
je
hlt
push
cmp
dec
scas
insb
cmpl
inc
and
mov
mov
xor
push
pop
test
orb
mov
dec
jmp
mov
adc
inc
push
pushf
in
fstpl
push
aas
push
sbb
dec
adc
out
add
cmpsb
je
adc
and
scas
jecxz
jb
push
aad
stos
lock
xlat
xor
push
dec
jl
jbe
push
lcall
mov
adc
mov
adc
add
and
mov
and
mov
add
ret
pop
addr16
add
ffree
int
dec
fldl
inc
stc
inc
ja
mov
pusha
repnz
push
add
and
push
imul
push
gs
pop
lods
mov
pop
mov
mov
push
jp
out
cmp
push
ljmp
mov
sbb
mov
mov
js
call
push
dec
shlb
cmp
sbb
cmc
outsl
add
sbb
adc
dec
inc
and
test
jb
xchg
xor
push
mov
mov
mov
or
mov
mov
or
or
mov
pop
push
inc
adc
pop
mov
test
dec
mov
dec
enter
and
mov
stos
inc
xor
jne
adc
jbe
add
popl
sahf
fcoml
pusha
dec
or
imul
ljmp
add
sub
test
add
and
clc
pop
adc
lea
and
imull
xor
fcoms
mov
push
jne
or
cwtl
dec
mov
pop
imull
pop
in
test
je
sbb
shrl
sub
bound
or
or
ret
lea
repz
imul
ss
push
pop
add
jb
cmp
add
daa
arpl
iret
xor
add
pop
test
jp
add
iret
sub
sarl
jno
jle
add
add
pop
push
flds
add
sahf
xchg
mov
or
sbb
push
pop
jb
cmpb
or
or
pop
enter
or
sub
cmp
or
pop
xchg
inc
enter
loop
or
enter
or
or
in
jns
add
push
nop
addr16
push
ja
jae
inc
push
push
rsqrtps
jb
fimuls
pop
adc
fwait
sub
fdivs
adc
inc
or
mov
adc
add
lcall
adc
xchg
add
pop
adc
adc
xor
mov
push
iret
enter
push
push
pop
pop
movsl
mov
sbb
cmp
sbb
cmp
pop
enter
sbb
jb
jb
sbb
sbb
dec
in
mov
jb
sbb
pop
and
add
cmp
sbb
sbb
and
pop
pop
cs
add
add
sub
cmp
rolb
movl
xchg
movups
aaa
cld
and
sti
sub
inc
push
pslld
in
push
in
jno
repnz
sub
sarb
sarl
aad
cmp
inc
sahf
add
xor
out
flds
inc
fmulp
dec
call
nop
adc
dec
dec
cwtl
jmp
xor
ljmp
jmp
jmp
incb
in
in
cltd
sbb
out
repnz
sahf
enter
out
out
jge
inc
enter
out
pop
lock
imul
in
icebp
icebp
ud1
sahf
repnz
std
repz
hlt
hlt
cmp
pushf
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xor
cmp
pop
testl
cmp
clc
clc
inc
push
fsubs
clc
cltd
adc
iret
in
repnz
stc
lock
cli
cli
sbb
sbb
iret
sti
sbb
jb
jns
stos
cld
cld
cld
je
sbb
xchg
aaa
cld
push
setle
jns
inc
ss
xor
sbb
inc
or
jns
adc
clc
fisubl
or
mov
sbbl
fimull
lcall
cmpsb
sbb
es
lret
add
sti
sub
mov
pop
inc
scas
mov
inc
mov
xor
xchg
sti
out
out
cmp
out
outsb
call
add
sub
mov
pop
jmp
add
movsb
jmp
cltd
mov
adc
in
add
leave
popf
cli
sbb
nop
cmpsb
out
out
out
cltd
push
xchg
inc
pop
and
add
cli
and
sbb
jmp
cltd
add
push
xlat
xchg
mov
cs
in
pop
stc
div
divl
fwait
xor
repnz
add
stc
out
clc
test
lret
enter
sti
sti
cltd
mov
cld
inc
cld
cmpl
cli
mov
sbb
inc
scas
xchg
sbb
cli
cld
sub
mov
in
sbb
mul
pop
leave
mov
adc
imull
popa
jg
mul
enter
sbb
out
bound
pop
inc
divl
pusha
leave
and
sbb
xchg
cmpsb
ljmp
shl
pop
mov
adc
xchg
pop
xchg
negb
insb
out
out
jno
mov
pop
and
add
pop
and
negb
repnz
xchg
xchg
mov
jae
imul
cmc
div
popf
add
jne
jns
and
pop
add
clc
clc
push
scas
lret
add
hlt
stc
popa
cmp
mov
xchg
inc
pop
jno
hlt
pop
dec
pop
and
jne
push
hlt
push
cmp
add
das
pushw
data16
pop
ja
and
hlt
idivl
jo
pop
int3
jbe
sti
lahf
lock
add
adc
test
loope
loope
push
jno
es
scas
repz
test
imul
push
jno
inc
repz
cmp
repz
sbb
bnd
leave
and
cmc
mov
leave
mov
jo
int
mov
dec
in
in
leave
and
cmc
and
leave
mov
loope
mov
mov
lea
inc
xlat
mov
xchg
icebp
jb
test
les
sub
mov
dec
push
cmc
cmc
cmc
mov
inc
jb
icebp
jecxz
or
lock
popf
lock
stc
popf
dec
push
jno
jne
push
lock
pop
je
xor
sbb
push
lock
test
ss
ljmp
stc
adc
sub
out
ret
mov
mov
cmovno
push
add
enter
add
stos
fsubl
and
dec
add
push
add
sub
lods
loopne
dec
adc
or
dec
add
jmp
popl
dec
add
or
jp
mov
pop
add
and
insb
mov
push
pushf
pop
inc
add
mov
stc
cmp
jmp
or
push
outsl
fnstcw
jnp
popf
sub
loopne
in
and
or
jle
lcall
and
and
sub
lahf
out
xor
pusha
rcrb
movsb
xchg
push
rcrb
add
roll
mov
add
xchg
and
add
dec
xchg
or
jle
rolb
add
ret
add
xorl
test
mov
xor
imul
lcall
imul
add
and
pop
push
in
popa
js
lret
inc
or
cld
insl
test
hlt
rorl
xor
popa
xchg
mov
xchg
lock
clc
adc
test
jge
push
imul
mov
clc
push
or
pop
pop
add
sbb
cs
or
adc
mov
sub
lea
lea
mov
jo
pop
push
inc
fmuls
and
add
sub
in
mov
inc
mov
insb
inc
adc
inc
mov
mov
add
dec
mov
sbb
ljmp
imul
adc
and
cmpl
mov
push
fdivp
add
xor
fsts
sub
sub
mov
add
enter
push
pop
add
or
dec
cltd
mov
rep
mov
dec
ljmp
andl
and
shrb
loope
cmp
push
rcl
xchg
add
mov
inc
insl
mov
test
dec
pushf
out
loopne
in
push
push
mov
xor
and
cld
add
jno
out
and
and
insl
out
repz
adc
cmp
jb
nop
data16
ja
add
sbb
pop
or
mov
aam
out
adc
lock
enter
ja
mov
jbe
mov
push
inc
in
xchg
js
jl
add
iret
hlt
mov
adcl
mov
sbb
nop
cmpsl
pusha
jne
cmpsb
or
mov
mov
repnz
je
pop
roll
sub
inc
inc
pop
cmp
enter
inc
in
inc
rolb
or
push
sbb
xchg
pop
fistpl
sbb
mov
lea
xor
xchg
bound
and
pop
cli
add
stos
xor
or
add
and
lods
push
mov
repz
sub
lea
mov
and
pushf
add
fcompl
out
xchg
mov
std
jg
rcll
jmp
cmp
jne
orl
mov
sub
sub
imul
cs
xchg
xor
and
cmp
or
jge
sub
mov
xor
xor
pop
sub
cmp
and
or
int
adc
dec
add
add
lds
sbb
and
outsb
or
lret
or
div
or
imul
mov
je
mov
sub
cmp
cs
scas
shrl
leave
cmp
jae
push
dec
insb
jb
movsb
repnz
add
and
dec
mov
and
add
inc
mov
and
neg
nop
inc
aad
fdiv
mov
sbb
or
mov
clc
or
ja
lret
push
es
mulb
ljmp
or
loopne
pop
add
mov
sbb
ret
test
or
sbb
mov
pop
in
inc
adcl
push
and
pop
push
dec
xor
add
and
sub
popa
bound
push
inc
dec
lock
cli
cld
fildl
mov
sti
or
push
pop
out
lea
or
mov
rolb
push
cmp
jne
mov
outsb
sahf
out
push
cmp
jne
es
jne
popa
insl
out
call
ljmp
fsubrs
push
or
jns
fimuls
repz
adc
jmp
std
fs
xor
push
sub
frstor
adc
adc
xchg
inc
inc
mov
jb
ljmp
xor
mov
jmp
mov
mov
and
aas
mov
repz
adc
cs
gs
pusha
cmp
adc
or
pusha
test
jns
lds
std
or
sub
leave
inc
or
gs
push
and
adc
nop
adcl
adc
cmp
xchg
xchg
and
arpl
mov
add
sbb
fimull
push
sub
jne
jo
mov
sub
xchg
sbb
shll
aaa
xor
push
jb
adc
sbb
push
stc
push
pop
mov
push
jmp
fdivrl
shr
push
pop
pushl
jne
or
inc
roll
push
push
jmp
sbb
lods
mov
out
jns
mov
dec
mov
xor
lahf
out
mov
push
lcall
es
cwtl
inc
push
movb
mov
add
inc
add
add
popw
loop
popf
ret
sbb
dec
subl
popa
push
dec
pop
fdiv
mov
push
pop
cli
std
testb
pop
hlt
jb
xchg
push
jae
ret
jmp
lret
clc
test
pop
rcrb
call
adc
stc
imul
inc
shrl
stos
add
testb
popf
les
xchg
adc
orb
pop
mov
mov
test
cli
jp
jne
mov
mov
xor
jns
inc
adc
add
push
iret
cmpsl
icebp
dec
sbb
ljmp
xor
das
int3
add
sarl
add
cmp
jbe
cmp
daa
icebp
pusha
andb
fsts
insl
pop
and
cmovs
scas
sbb
pop
test
mov
adc
mov
rep
jmp
add
dec
imul
push
ss
dec
add
xor
push
push
stos
out
out
cmp
xchg
push
mov
add
mov
or
scas
cmp
mov
mov
add
movsl
push
dec
add
movl
cmpsb
inc
add
add
jnp
push
mov
or
push
and
sbb
lahf
out
adc
add
cmp
out
in
inc
in
call
sahf
out
lock
hlt
clc
push
xor
cld
pushf
lea
add
add
fldcw
pop
inc
sbb
jl
inc
mov
lods
sbb
out
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
cld
out
loopne
neg
adc
inc
jno
lea
jae
sub
nop
hlt
movups
push
fiaddl
jl
mov
outsb
dec
gs
add
outsl
sub
push
add
nop
dec
dec
addr16
add
ljmp
fwait
xchg
or
push
movsb
lods
mov
pop
jl
mov
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
inc
lock
sub
cmp
add
pop
sldt
inc
pusha
daa
ja
lahf
lcall
push
xchg
hlt
idivl
mov
incl
inc
decl
jne,pn
pop
pop
push
push
iret
nop
outsb
inc
inc
outsl
ja
xor
jbe
push
cltd
pop
idiv
add
mov
pusha
or
adc
add
cmp
aaa
dec
mov
mov
out
test
xor
shl
jmp
cmp
jae
dec
xor
pop
jae
pop
jbe
mov
dec
les
pusha
add
sub
push
call
hlt
mov
cmp
out
or
mov
mov
aaa
dec
sbb
out
gs
or
adc
dec
or
sbb
dec
dec
jb
les
and
xlat
je
imul
negl
xor
mov
xor
pop
decb
sti
inc
shrb
mov
xor
xchg
out
movsb
sbb
push
das
arpl
and
mov
jo
xchg
add
or
enter
push
jl
mov
test
push
pop
addb
add
adc
sub
xor
test
cmp
imul
pop
dec
adc
lods
pusha
mov
stos
or
mov
arpl
aam
pop
cmp
enter
ja
insl
loopne
fnstsw
or
aas
jge
lock
mov
pop
idiv
cmp
inc
cs
cmc
jge
int
push
xchg
inc
out
cmp
cs
shrb
jmp
or
xchg
xchg
push
rcrb
test
mov
imul
mov
ret
jl
mov
sbb
call
or
xchg
mov
sub
sbb
shll
repnz
sbb
and
outsb
mov
out
sbb
mov
mov
jns
adc
cmp
cmp
sbb
sti
cmp
fwait
mov
mov
mov
push
adc
jae
inc
loopne
fidivrs
faddl
push
dec
dec
daa
adc
jg
shll
xor
mov
jge
pop
je
sbb
mov
jecxz
jl
fs
sti
sub
xor
mov
int
int3
dec
jo
push
pop
je
dec
inc
mov
jne
mov
scas
mov
or
sub
lcall
pop
popl
call
lods
push
and
out
ja
push
fs
or
in
mov
push
aaa
orl
adc
cmp
pop
stc
add
push
adc
lcall
push
inc
jmp
push
pushf
in
leave
test
adc
pop
dec
xor
mov
gs
mov
fldt
ret
push
je
mov
push
enter
movsb
xchg
outsl
cmpl
sub
and
fldt
or
push
cld
arpl
lock
adc
pop
or
sub
inc
iret
repz
push
out
call
popa
push
mov
cli
or
pop
pushl
adc
call
add
fstpt
cmp
xchg
rorb
mov
sub
pop
pop
clc
push
loop
out
sub
inc
cld
mov
or
and
adc
adc
aam
xor
icebp
mov
mov
add
ret
pop
sub
adc
aam
or
mov
pop
mov
das
lock
fisubl
mov
adc
dec
inc
inc
cmp
je
xchg
mov
fs
orb
adc
add
fidivrl
dec
dec
mov
and
mov
or
mov
mov
pushf
add
push
adc
mov
incl
jmp
push
outsb
pusha
push
mov
push
inc
sbb
jae
inc
xor
adc
pop
les
dec
or
bound
sub
or
dec
jmp
mov
das
dec
push
add
sbb
lret
add
add
push
or
mov
addr16
pop
dec
std
add
test
adc
clc
rorl
out
ret
and
cmp
je
inc
xor
or
cmp
fsubrp
adc
xor
lock
mov
pop
inc
ror
dec
int
shll
sub
push
cs
and
repnz
lods
sbb
dec
movsb
jb
jmp
add
or
lret
lret
mov
xchg
adc
fiaddl
dec
dec
mov
jl
and
ss
lea
popa
bound
mov
mov
popa
dec
or
pusha
pslld
xor
cs
dec
jmp
ljmp
repz
imul
jne
adc
xor
rorl
mov
ret
sbb
dec
and
cmp
aaa
mov
gs
xor
mov
xor
inc
cltd
ret
in
inc
cld
xor
or
dec
adc
lea
hlt
mov
push
xchg
cmp
je
push
mov
mov
add
push
adc
push
mov
push
mov
dec
or
and
lcall
inc
push
shrl
jmp
cmp
ja
or
sbb
jg
and
inc
inc
call
push
lcall
outsl
inc
inc
cli
push
push
insb
ja
or
out
inc
push
fisubrl
jge
cltd
pop
stos
call
adcb
lock
and
pusha
js
imul
es
inc
jmp
aas
sbb
pop
movsb
jl
push
xor
nop
add
inc
push
enter
nop
inc
lcall
dec
push
in
add
and
mov
fstps
imul
push
push
pop
pop
sbb
and
notl
ljmp
inc
fldt
inc
rcr
xchg
sub
dec
insb
push
je
sbb
mov
or
loope
sub
stc
and
and
pop
cmc
xor
test
movb
lea
or
or
stc
enter
out
movsb
push
add
jmp
push
adc
mov
or
aad
adc
push
cld
jb
mov
xlat
fs
mov
dec
js
add
pop
inc
clc
push
adc
ret
mov
or
jne
dec
rolb
add
or
cmp
std
jne
ret
fistpll
xor
dec
les
subl
adc
cmp
pop
je
inc
out
xchg
or
adc
cmp
jg
add
or
push
in
std
cmp
adc
lods
and
sub
clc
xor
and
test
loope
push
cmp
fbstp
ror
out
fdiv
and
xor
cmp
jle
xchg
mov
jb
rclb
mov
loopne
clc
add
loopne
mov
lods
mov
sbb
pop
push
les
adc
movsb
push
outsb
cmp
adc
sub
mov
sub
adc
jp
call
jno
adc
insb
imul
xor
cmp
popa
ret
mov
mov
inc
inc
data16
mov
out
nop
dec
sar
dec
xor
cs
pop
adc
dec
mov
icebp
lea
push
adc
push
pop
dec
ss
pop
inc
ficoml
add
enter
add
js
lret
xlat
out
jecxz
aam
cwtl
mov
es
and
mov
mov
pop
dec
test
jne
or
push
addb
or
inc
outsb
adc
das
or
add
fldpi
or
add
mov
fcom
int3
rorb
lock
push
pop
call
in
pop
sub
cmp
sbb
sbb
ds
xchg
or
sbb
mov
cwtl
or
mov
add
ljmp
push
jmp
call
pop
jmp
leave
push
add
sub
std
add
notl
jo
push
cmc
add
and
add
addb
add
or
xlat
sub
push
inc
cmc
adc
lahf
mov
ja
dec
loopne
cli
rolb
pushl
clc
popf
insb
push
lea
or
sub
jmp
cwtl
lds
mov
sbbl
ret
stos
fwait
test
xor
imul
jae
lahf
incb
push
sbb
cmp
hlt
aas
das
xchg
sbb
add
iret
lcall
imul
mov
ljmp
mov
ljmp
push
call
pop
cmp
mov
rcll
sti
sbbb
fildl
xchg
adc
pop
or
xchg
dec
jmp
add
push
aaa
jl
jg
xchg
lock
pop
lret
into
cltd
and
je
and
add
jb
hlt
pop
jp
sbb
jmp
mov
push
shl
fisttpl
jne
fdivr
icebp
and
cmpsb
pop
xchg
and
popa
inc
sbbl
rcrl
clc
movsb
push
arpl
or
addr16
adc
sub
jbe
clc
xor
push
or
imul
sarl
aas
inc
pop
sub
sub
sub
mov
sbb
and
das
mov
push
or
add
das
and
popl
adc
lods
cmp
add
inc
mov
mov
adc
add
sbb
add
xor
sarb
popa
and
test
xorl
movsb
adc
loope
sarl
xor
clc
lds
and
call
inc
xchg
fsubrl
sti
pop
dec
cmp
xor
pop
fisubrs
bound
or
push
jns
cltd
add
adc
or
dec
inc
or
jo
mov
sbb
pop
adc
cs
rcll
or
dec
sub
loope
or
add
test
mov
sub
mov
and
mov
inc
dec
jne
lea
ja
or
rclb
add
pop
test
cli
aad
xor
outsl
add
test
dec
ljmp
out
push
movb
sub
jecxz
popf
out
lds
ja
sub
popf
rcr
push
int3
xchg
or
outsl
push
jle
rolb
fsubr
fisubrs
bound
cld
ficoml
push
inc
les
hlt
lock
push
cmp
and
cld
fbld
and
decb
push
jo
push
push
orb
mov
lods
jmp
and
je
and
mov
push
jle
add
mov
mov
lahf
jge
idiv
lods
leave
sub
mov
cmp
and
imul
ret
push
clc
push
fiaddl
ljmp
add
rol
add
xchg
std
pop
or
inc
push
test
arpl
mov
mov
and
insb
add
and
sub
test
and
mov
or
mov
xor
gs
ss
clc
push
push
jg
mov
cmp
cmp
mov
fstl
or
insb
push
cld
add
jno
pop
inc
out
jmp
adc
sub
fs
inc
mov
sub
cmpsb
add
mov
cmpsb
push
sub
dec
cmp
aam
inc
sti
or
in
cmp
std
jne
fsubr
fldt
mov
dec
cld
stos
inc
add
jmp
adc
cs
sarb
or
or
sbb
inc
lret
adc
mov
push
jnp
inc
dec
mov
mov
rol
nop
xchg
repz
push
lock
sbb
cmp
or
add
in
in
push
jmp
mov
push
popf
xchg
ss
push
and
xor
xor
sub
test
cld
dec
adc
or
cmp
jbe
pop
fwait
in
lea
mov
cmpsl
push
mov
inc
pop
jle
fadds
lea
xor
sub
call
aad
pop
mov
adc
sti
sti
inc
jmp
loopne
adc
or
lcall
xor
int3
inc
inc
or
lds
jne
outsb
incl
mov
add
jb
mov
xor
mov
cs
jmp
out
adc
mov
inc
mov
imull
inc
cld
inc
dec
jne
mov
inc
mov
inc
das
or
add
out
and
mov
mov
in
jo,pt
mov
inc
dec
jne
mov
jnp
lret
mov
ljmp
push
inc
enter
jmp
cmp
mov
push
xor
sub
loopne
add
movsb
dec
adc
mov
movsl
sub
mov
ret
loop
push
bt
and
mov
inc
sbb
xchg
lods
mov
add
dec
jns
je
rorl
out
mov
push
sbb
sahf
cmp
xor
push
and
xchg
and
popa
xchg
lock
aas
cwtl
dec
movsl
lods
xor
in
pop
xor
fs
and
pop
or
add
jnp
mov
pop
sub
jmp
xor
mov
dec
sbb
mov
add
jmp
push
bound
ret
rolb
and
jno
ljmp
fwait
inc
mov
jmp
xchg
sub
mov
push
xchg
les
out
jl
leave
cmpl
std
xchg
loopne
xchg
pop
and
xor
psllw
pop
lret
lret
in
mov
or
push
movsb
adc
mov
adcb
pushl
mov
mov
int3
pop
and
lahf
das
jnp
mov
inc
inc
sbb
sub
ss
jae
xchg
subb
and
nop
mov
shlb
aam
pop
cmp
push
push
cwtl
sub
inc
lds
mov
out
jle
or
push
and
clc
rolb
adc
bound
pop
cld
sahf
inc
add
add
decl
jne
sbb
push
xor
xchg
push
mov
push
sbb
mov
lea
inc
outsl
sbb
or
out
pusha
fsubrs
ret
jo
cmp
or
in
xorl
clc
add
sub
sub
test
cmpsb
dec
xor
je
push
sub
dec
pop
pop
mov
push
adc
xchg
inc
push
in
pop
add
cmp
add
jbe
dec
and
ret
cmp
jle
sbb
jo
loope
lea
add
inc
shl
les
ficomps
addb
rcll
or
or
mov
mov
and
stos
add
mov
rol
xorb
mov
jmp
mov
cmc
loopne
pusha
pushf
sbb
pop
push
jns,pn
sbb
sbb
adc
out
ljmp
cld
fisttpll
jns
add
cmp
lret
call
jns
and
filds
shll
sub
out
fucomp
stos
pop
or
aas
push
inc
push
cs
sub
pop
dec
and
pop
sub
loope
xchg
and
jle
cwtl
and
sbb
je
sti
lret
fmul
cmp
inc
push
cld
push
jo
arpl
pop
orl
mov
push
adc
movsb
xchg
dec
jb
cmp
push
or
insb
push
jno
push
mov
push
cmp
fnstcw
adc
or
outsl
mov
dec
test
xchg
addl
sub
rclb
adc
test
jbe
dec
test
cmp
or
imul
dec
mov
jnp
push
sbb
xor
not
aam
add
les
jae
iret
adc
or
nop
arpl
ljmp
and
mov
fcomps
sbb
sbbl
enter
dec
pop
cmp
xchg
and
jle
xor
cmpsl
bound
jmp
repz
andb
jbe
lret
mov
mov
adc
pop
aaa
push
hlt
test
rol
xchg
cmp
mov
jge
subl
adc
cmp
mov
ficompl
ja
bt
jnp
mov
cmpl
cmp
push
lods
mov
pushf
add
and
daa
fstpl
mov
jno
pop
inc
xor
jae
xor
xchg
mov
out
mov
xchg
mov
fwait
popf
je
xchg
ss
mov
es
cmp
loopne
aaa
pop
mov
push
sbb
push
xchg
mov
mov
je
inc
add
pop
das
pusha
sbb
pop
mov
jmp
add
mov
cmp
insb
roll
das
mov
sub
xor
sbb
or
fcoml
fcomps
int3
data16
clc
or
test
movsl
adc
lahf
xchg
shrb
mov
fs
sarl
enter
dec
cld
adc
mov
pop
aam
xchg
orl
ljmp
lea
jb
js
mov
and
sbb
push
dec
in
test
and
jmp
jge
mov
inc
cmp
fbld
sbb
dec
and
xchg
add
insb
or
xchg
mov
push
or
mov
push
insb
test
lcall
arpl
arpl
mov
or
and
push
push
mov
repnz
arpl
jnp
fadds
ror
sarb
test
pop
repz
push
jmp
sub
sub
pop
nop
sub
xchg
fs
pop
nop
movsb
push
enter
pop
and
inc
dec
nop
gs
gs
fstl
mov
or
push
push
pop
and
iret
rep
je
fimuls
and
mov
loop
push
mov
xor
lea
mov
icebp
cmp
jo
mov
push
roll
scas
add
shll
sbb
inc
jmp
fs
add
movl
and
or
xchg
shlb
jne
add
subb
push
rorl
jge
inc
mov
leave
cmp
pusha
into
insl
popa
test
mov
and
push
add
mov
call
scas
and
adc
rcrb
and
add
or
and
subl
mov
aaa
lea
in
sbb
mov
adc
imul
xlat
adc
je
fwait
xor
pop
and
enter
dec
xor
or
inc
or
je
into
dec
cmpsb
xchg
sbb
dec
adc
adc
jae
mov
subl
or
xchg
push
and
addl
imul
sbb
pushl
mov
adc
push
movl
add
jmp
adc
add
fidivrs
data16
stc
jbe
push
lahf
add
je
fcompl
imul
and
das
xor
mov
pop
in
outsb
cmp
in
lret
xchg
xor
out
mov
add
outsl
push
leave
cmp
pushf
or
out
aam
loope
imul
loope
notb
cmp
sbb
cmp
sub
inc
ds
pop
sub
clc
movsl
rcrl
jp
mov
in
lds
adc
jecxz
or
dec
add
and
push
mov
push
inc
and
add
or
ret
pop
sbb
jl
ljmp
mov
pop
xchg
mov
test
adc
inc
pop
mov
mov
or
pop
and
adc
push
loope
les
add
and
rclb
addr16
mov
lea
inc
stos
sbb
ror
add
push
pop
popf
leave
push
add
pop
shl
inc
imul
inc
adc
xchg
mov
adc
jmp
push
jbe
inc
ret
out
lret
mov
and
out
push
pop
or
sub
mov
daa
pop
or
jmp
fmuls
incb
pop
test
aam
ret
or
adc
push
nop
jp
cmp
aaa
jecxz
addb
and
and
test
xchg
test
pop
icebp
fdivl
mov
adc
jbe
push
inc
hlt
test
test
mov
loopne
and
xor
push
or
inc
ret
icebp
pop
and
pop
divl
in
cmovns
inc
xor
sbb
clc
dec
xchg
outsb
add
out
jle
push
inc
out
sahf
add
adc
add
sub
out
jbe
orb
inc
loopne
testb
das
xor
add
add
inc
push
jp
mov
es
or
and
lock
xchg
int3
andb
orb
pop
add
push
add
lock
test
jmp
aam
push
or
dec
dec
or
push
jns
inc
gs
sbb
fdiv
das
add
add
push
mov
push
push
mov
nop
xchg
dec
pop
into
lcall
sub
jg
sbb
mov
faddl
ret
lea
sti
sub
or
in
mov
mov
fadd
outsb
loop
idivl
mov
mov
push
mov
mov
into
popa
je
mov
addr16
xchg
jo
dec
leave
movzwl
test
in
mov
mov
clc
mov
lods
or
pop
ret
sarl
stos
jl
scas
mov
lea
ss
sbb
pop
ja
mov
movsbl
psubsw
divb
xor
test
call
clc
sub
mov
pop
lea
pop
dec
vmread
shl
lea
loopne
cs
aam
clc
fcomps
mov
dec
or
je
lcall
jne
jmp
pop
or
jb
in
push
pop
add
xor
sbb
adc
pop
nop
cli
sub
mov
or
aam
out
mov
xor
mov
mov
or
push
imul
lret
or
cmpsb
xor
movsl
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
xor
mov
cwtl
je
or
inc
insb
je
adc
into
pusha
lock
test
outsb
loope
insb
cmp
sub
adc
sbb
pop
fcmovnu
pop
mov
mov
pop
or
xor
mov
inc
outsb
jg
dec
xor
cwtl
nop
push
inc
movsl
jg
jmp
iret
in
jb
or
imul
xor
cmc
jne
js
movsl
loope
and
je
ret
pusha
loope
mov
mov
push
jbe
movsb
dec
jecxz
pop
mov
cmp
jnp
push
sbb
cmp
cmp
adc
or
add
mov
ret
add
hlt
sbb
loop
fdivr
xchg
stos
push
cmp
dec
nop
and
lahf
mov
jae
pop
testl
in
mov
xchg
popa
dec
aaa
jne
das
mov
cmpl
mov
and
cmp
in
xchg
lock
enter
mov
mov
test
xor
mov
mov
ljmp
mov
add
push
test
scas
jl
xor
push
addl
dec
negl
out
faddl
dec
lret
inc
imul
sbb
cmp
xchg
jae
pushf
je
mov
push
mov
push
jg
movb
cmpsl
lods
iret
xor
push
pop
mov
mulb
jge
lcall
mov
inc
mov
dec
mov
pop
xor
inc
dec
in
jecxz
movsb
push
sbb
mov
or
cmp
fistpl
out
pop
push
test
icebp
adc
outsb
jo
add
add
add
mov
mov
pop
push
outsb
je
mov
test
jae
sub
insl
out
je
aas
add
xor
ret
ret
mov
or
or
mov
je
add
adc
xchg
xorb
sbb
or
add
andl
fiadds
ret
fidivl
mov
jne
mov
fnstsw
cmp
jle
insl
cmpl
incl
lock
xor
in
sbb
adc
push
mov
call
push
sub
inc
cld
adc
xchg
dec
sub
es
mov
or
xor
popf
test
aaa
xlat
cmpsb
push
lea
stc
lcall
pop
add
cwtl
inc
call
sbb
dec
add
ds
inc
andl
popa
push
push
bound
push
mov
mov
push
cmp
addr16
decb
test
test
dec
mov
push
cltd
movsl
loope
pop
data16
push
sub
mov
inc
jecxz
jne
push
jne
adc
inc
fbstp
inc
inc
xchg
orb
mov
inc
jmp
or
pop
lea
int3
je
cltd
mov
fisubrs
jl
mov
sbb
push
fcoml
rcr
neg
jecxz
nop
mov
mov
pop
fimull
mov
or
cmp
mov
lret
out
test
pop
mov
or
jne
and
lea
mov
das
sbb
orl
sub
push
inc
or
clc
jg
icebp
cltd
push
arpl
mov
stc
cmp
shrb
clc
sahf
add
mov
dec
jmp
add
xchg
sub
inc
cmp
bts
je
and
sub
and
mov
movb
inc
jmp
bswap
push
sahf
stos
aaa
mov
loope
or
add
xchg
ret
inc
mov
adc
sar
roll
je
gs
sub
add
sub
sub
repnz
je
push
test
cmpsb
and
scas
push
sub
sub
mov
shl
push
push
xchg
mov
xor
dec
data16
fdivrl
les
idivb
stos
ja,pt
jns
pop
daa
test
movsb
adc
push
jbe
jno
or
dec
sbbl
jne
add
inc
jno
aaa
cmp
mov
lock
call
add
nop
in
push
sub
popa
jle
sbb
leave
cmp
lods
add
cmpsb
sbb
push
sub
or
push
and
or
jl
testl
push
xchg
jo
adc
push
or
daa
pop
mov
in
mov
mov
add
idivb
movsb
cmp
adcb
pop
pop
fbld
adc
mov
lods
push
cmp
ljmp
xchg
mov
sbb
ss
rol
and
push
add
push
pop
mov
xchg
mov
ret
xor
mov
das
cmp
fmull
pushf
push
lea
push
push
cmp
cvtps2pd
ss
sbb
scas
stc
movl
and
pop
xor
lcall
pop
aam
daa
sub
add
lcall
mov
ret
rol
or
ja
inc
fistpll
pop
lahf
push
add
jae
add
out
cmp
xor
pop
in
js
negl
mov
cmp
push
les
push
sub
cmp
add
push
inc
js
arpl
push
xor
cmp
lcall
xor
cmp
rorb
adc
dec
or
aad
push
dec
js
into
std
or
shll
sbb
xorb
test
pop
adc
sub
xor
jl
sahf
sub
mov
pop
jbe
push
or
adc
enter
popa
cmpsb
mov
es
fadds
rclb
pop
sbb
xchg
push
mov
stos
cmpb
sub
cld
shr
inc
insb
xorb
mov
int3
add
dec
or
push
add
jbe
xor
lds
push
lea
mov
loop
push
cld
dec
sub
dec
ljmp
divb
sar
dec
cmp
jbe
push
pop
in
sbb
mov
dec
or
subb
inc
loop
pushl
mov
shr
lea
not
and
decb
jne
scas
jp
and
adc
mov
pusha
cmp
pop
push
mov
push
push
sbb
dec
pop
add
add
cmpsb
and
push
or
lods
mov
jmp
clc
and
std
decb
sub
and
sti
add
mov
dec
pop
cmp
out
lret
pop
test
clc
imul
push
lea
inc
or
jno
mov
cmp
shr
testl
add
xor
filds
adc
loopne
mov
sub
push
jle
pop
dec
add
cmpsb
gs
adc
lock
stos
and
outsl
outsl
test
mov
mov
inc
adc
dec
xchg
jns
or
dec
pusha
mov
sbb
inc
mov
mov
js
push
xchg
ds
call
inc
push
fisttps
dec
or
jmp
dec
adc
push
mov
or
movsb
mov
add
je
xchg
adc
jp
add
and
test
pop
mov
negb
loope
add
scas
jp
icebp
mov
aas
gs
push
or
push
andl
lahf
cmp
dec
adc
cmc
mov
and
pushl
push
push
mov
imul
and
xor
sbb
add
mov
fildll
enter
arpl
push
jl
add
sub
cmp
decb
or
mov
sbb
das
mov
pushf
pop
mov
test
lock
and
adc
test
push
ja
add
js
add
dec
adc
les
or
mov
ljmp
or
xor
adc
xor
js
adc
sar
fwait
orl
incl
lds
mov
pusha
pop
or
andb
test
shlb
aaa
rolb
inc
ljmp
rorb
pop
xchg
or
rolb
repz
sub
or
hlt
or
add
sub
popa
sbb
popa
outsl
add
movsb
adc
jl
pop
xchg
inc
sub
shr
out
paddb
clc
incl
nop
cld
or
ja
mov
cld
lock
jne
fldl
iret
dec
jne
je
test
movsb
or
xor
dec
sbb
test
sub
fs
inc
push
jge
cmp
mov
mov
lock
ljmp
jne
or
lds
ljmp
mov
ds
or
adc
sbb
sub
pop
shr
and
inc
jb
cld
sub
dec
cmp
add
add
jle
or
inc
jl
test
sub
fnstcw
repz
stc
add
mov
add
pop
xor
mov
pop
inc
stc
sbb
clc
and
nop
es
test
in
add
cmp
nop
inc
inc
jae
dec
or
push
jns
popa
aas
push
dec
sub
add
dec
dec
mov
sub
adc
push
incl
mov
cs
fst
xor
fwait
pop
hlt
lea
lcallw
adc
jle
mov
jns
cmpsb
imul
xor
push
pop
lcall
iret
mov
pop
add
and
and
cmp
test
or
sbb
adc
cwtl
stos
insb
xor
mov
mov
sub
cmp
clc
jl
loope
or
mov
sub
pop
xor
adc
add
dec
jp
movsb
adc
push
mov
mov
push
cmp
xor
xor
cmp
dec
mov
sbb
xchg
fisttps
mov
mov
ja
add
dec
ficoms
out
sbb
fiaddl
fimull
or
mov
mov
sahf
jbe
lock
or
mov
xchg
xchg
cmp
lods
decb
into
mov
out
cmp
xchg
xor
jns
dec
cli
sbb
cs
movb
add
mov
and
add
lods
pop
and
inc
cmp
push
sbb
xchg
clc
push
push
jge
shr
adc
aas
mov
dec
in
or
scas
pusha
inc
fsubrl
push
je
fldcw
push
nop
cmp
and
decb
xlat
or
adc
out
or
push
jne
mov
lahf
or
fnstenv
jb
in
jbe
or
jae
xor
aaa
jno
popf
outsb
arpl
clc
insl
and
push
and
and
icebp
gs
leave
cmp
dec
dec
push
ret
nop
loopne
adc
or
mov
dec
sbb
and
loope
and
mov
dec
lock
outsb
pop
iret
jne
mov
or
mov
lods
mov
adcb
mov
dec
mov
fiadds
jne
mov
push
pop
outsb
leave
inc
test
adc
xchg
push
pushf
mov
sub
icebp
and
jbe
fdivrl
rcl
call
dec
add
aad
push
pop
xchg
sbb
iret
push
and
dec
sbbb
sbb
inc
mov
decb
jne
cwtl
popf
pop
lock
repnz
jmp
jp
mov
adc
and
jne
aaa
pop
sbb
dec
push
and
shll
jp
mov
inc
call
push
or
das
pop
imul
jle
push
push
or
mov
cld
or
sbb
inc
or
push
mov
inc
inc
mov
ja
jle
push
mov
call
add
shrl
aaa
lods
lods
test
lea
ds
sbb
mov
into
cmp
and
call
add
and
idivb
mov
sbb
loopne
push
sbb
pop
jb
or
xorl
jp
pop
arpl
fdivl
jge
and
movb
fcompl
xor
push
icebp
push
mov
jp
or
insl
test
scas
jp
fldcw
and
add
and
lret
xchg
std
ss
shlb
int3
mov
add
divps
dec
jnp
jmp
pop
lock
inc
cmp
cmp
sub
add
push
mov
or
add
ja
pop
es
adc
or
inc
push
and
in
add
dec
push
mov
xchg
inc
fisttpl
or
push
sub
add
aam
insb
sti
ficompl
fcomp
imul
subl
adc
push
daa
xlat
lock
je
out
pop
jne
imul
adc
push
std
pop
or
pop
mov
sbb
ret
mov
les
jno
es
mov
fcoml
js
push
or
or
jmp
iret
inc
test
or
int
inc
fisubrs
clc
hlt
and
fisttpl
push
add
mov
pop
adc
or
jae
cld
loopne
fdivrs
xor
sbb
ret
add
pop
push
hlt
inc
inc
dec
test
js
jne
daa
into
sub
aas
xor
nop
pusha
push
or
jns
into
shlb
jae
orl
push
jo,pt
popf
call
jp
mov
popa
push
jns
xor
jecxz
shlb
and
mov
fwait
insb
add
adc
jge
jmp
lcall
or
push
push
mov
int3
cmp
xchg
and
add
cmp
mov
cmp
rorl
subb
mov
cs
test
dec
jl,pn
pushf
mov
sub
jbe
stc
sbb
mov
xchg
push
xchg
push
and
add
loopnew
dec
add
es
adc
ret
adcb
lods
or
insl
push
ret
pop
add
imulb
xchg
arpl
fsubrl
mov
pop
rol
lea
add
leave
sub
nop
fistl
repnz
sbb
fidivrs
add
mov
inc
sahf
push
inc
pushf
fistps
xor
adc
sbb
pop
and
popf
mov
or
adc
and
sbb
or
cmp
lcall
xor
and
loope
adc
and
les
std
xchg
push
lcall
aaa
int
ret
test
shll
enter
jle
leave
jl
xchg
sbb
inc
call
xor
test
sub
aaa
sbb
nop
sub
lahf
call
enter
inc
leave
adc
mov
enter
pusha
call
add
pop
sbbl
fmulp
call
inc
sub
pusha
push
xchg
call
xchg
inc
push
jns
mov
shl
xchg
addr16
add
mov
mov
andb
or
sub
push
ds
test
mov
cmp
mov
in
rep
popf
or
push
hlt
xchg
xchg
push
sub
and
and
jle
nop
add
or
mov
ret
push
enter
and
enter
or
xchg
xchg
in
mov
les
add
in
xchg
add
ljmp
lahf
call
cld
insb
js
cmpsl
enter
cmp
rolb
mov
sysret
pusha
cmc
or
push
push
xor
cli
and
mov
iret
roll
dec
test
xor
aas
ss
jne
mov
mov
sub
jbe
push
mull
adc
lea
cltd
js
mov
push
jmp
mov
push
xor
sbb
or
xchg
pop
rcrb
je
lock
decl
xor
je
mov
or
adc
data16
sbb
popa
imul
sbb
add
fisttpll
lods
inc
jno
decb
push
mov
mov
lea
dec
jo
add
es
push
jnp
adc
push
imul
mov
shr
lds
inc
push
fincstp
ret
clc
cmp
cmp
add
add
push
cmp
sbb
bound
dec
add
shrb
adc
add
xchg
sbb
push
das
mov
push
sub
js
cmp
sub
mov
mov
out
add
add
mov
mov
js
add
add
add
pop
mov
in
jnp
or
adc
fwait
lcall
inc
std
jne
popf
push
call
or
fidivs
inc
cld
push
ds
sbbb
add
jmp
cmp
add
add
push
adc
das
fnstenv
mov
int3
in
mov
inc
int3
and
not
and
inc
mov
or
and
adc
adc
sub
push
dec
loope
inc
loopne
add
cmpsb
imul
sub
enter
mov
pop
pop
mov
push
dec
adc
cmpsb
inc
lret
outsl
jmp
je
pop
sbb
add
in
shrl
fwait
outsb
cmp
sub
sbb
dec
mov
ljmp
movsl
xchg
je
push
or
aam
fadd
clc
and
enter
fnstsw
fsubs
call
dec
jae
lock
jns
dec
sub
icebp
cwtl
push
or
lret
sti
insl
leave
pop
jmp
jo
push
mov
jge
mov
mov
xlat
das
mov
sbb
outsb
dec
sti
je
dec
je
add
and
sbb
push
cltd
xor
lcall
insl
insl
ljmp
dec
mov
into
add
int
push
jbe
sub
sbb
iret
out
jo
fwait
add
das
sbb
inc
test
stos
cmp
aaa
xchg
adc
dec
fmulp
jl
push
je
push
jo
sub
insb
pop
push
or
fstl
push
shl
push
icebp
inc
push
inc
aaa
jne
mov
cmp
repz
lock
mov
and
sub
lahf
aas
lret
mov
push
push
sub
iret
jnp
push
imul
fwait
mov
jecxz
fdivrl
pop
pop
sub
test
or
sti
inc
push
push
mov
mov
push
xorb
insb
jl
xchg
in
jle
push
jle
inc
out
jge
adc
pop
push
inc
std
adc
or
in
mov
push
ja
xchg
jmp
inc
faddl
pop
subl
or
aas
pop
lods
sub
test
fmull
shlb
pop
enter
cmp
test
push
add
jne
push
push
sbbl
imulb
add
sub
and
mov
adc
cmpl
fcmovnb
outsb
sbb
add
push
pusha
cltd
andl
out
ret
into
adc
lods
adc
out
cltd
js
xchg
push
or
and
pop
cmpsb
mov
fdivl
pop
push
test
add
in
sarb
and
pusha
cltd
mov
lods
std
jge
inc
lock
mov
mov
dec
cmpsl
push
clc
mov
rorb
inc
add
pop
inc
pop
jecxz
movsl
jnp
jg
xchg
dec
sbb
pop
sar
cli
fldt
arpl
and
repnz
add
xchg
inc
cmp
stc
mov
aas
xchg
mov
mov
mov
ds
inc
pop
push
inc
push
or
std
pushf
lea
mov
or
mov
mov
mov
mov
cltd
cmpsb
mov
mov
leave
rorb
sbb
lock
adc
dec
xchg
fldpi
xchg
push
pop
or
add
inc
lret
in
subl
in
adc
test
mov
cmp
hlt
lahf
pop
imul
or
mov
pop
std
cs
sbb
ljmp
or
mov
mov
sub
je
or
inc
pusha
lcall
mov
or
jne
inc
sub
pop
aad
pop
cs
pop
and
ss
xor
lea
inc
jne
movsl
pop
mov
xor
or
adc
xchg
cmpsb
rclb
out
cmp
push
int
lds
movsl
test
pop
lods
jl
cmp
movsb
dec
rorl
dec
push
leave
inc
dec
xchg
fwait
test
inc
mov
push
lea
lret
cs
sub
xor
test
add
clc
mov
imul
xchg
icebp
je
lcall
dec
adcb
inc
push
inc
cmp
jl
lods
jne
in
mov
push
inc
jne
and
inc
mov
cwtl
add
and
push
and
jne
xor
in
jno
stc
mov
rcr
jg
testl
mov
mov
sbb
xchg
jns
pop
in
sbb
daa
mov
sahf
add
ret
cmp
dec
adc
std
loopne
fisubl
in
mov
call
jmp
mov
fs
notb
loopne
sub
ret
pop
and
scas
leave
sbbb
mov
adc
lea
pop
insb
add
rorl
mov
std
dec
sub
jecxz
xchg
xor
xor
mov
shrl
std
dec
mov
or
addr16
in
dec
sahf
lods
lock
fdivr
adc
sbb
ret
sub
lods
out
and
shr
push
nop
xchg
je
in
or
insb
add
mov
jle
push
andb
pop
cmp
lahf
cmc
pop
call
aas
mov
dec
mov
cs
cmp
mov
std
fsubrs
jns
mov
fdivrs
fwait
gs
mulb
in
mov
inc
fxch
pop
aad
sub
movq
or
lea
mov
mov
ja
cmpsb
and
mov
jmp
mov
mov
mov
cmp
inc
daa
mov
and
mov
xchg
sbbl
mov
mov
cs
xorl
mov
push
movb
xor
imul
xchg
xchg
push
clc
popa
xor
roll
mov
inc
into
inc
inc
adc
mov
xchg
jl
push
cmp
cmp
mov
sbb
std
xor
and
std
lock
push
sub
xor
mov
mov
test
xchg
push
loopne
mov
dec
std
inc
repz
lods
push
ja
push
mov
popa
lods
mull
mov
fdivrp
or
and
out
mov
dec
cs
pusha
aad
outsb
sub
test
sub
inc
push
popa
enter
pop
das
rcrb
add
movsl
mov
sar
lock
xor
int3
jp
or
jmp
int3
sbb
jmp
sub
lods
pop
adc
and
out
in
ds
cmp
jne
loopne
int
test
xchg
lahf
int
testl
and
xchg
mov
mov
lock
dec
into
mov
enter
roll
push
xor
bound
mov
lret
xchg
mov
movsb
adc
add
or
js
inc
push
inc
lret
push
pusha
jp
jne
cmp
xchg
sbb
cmovge
or
fnstcw
das
or
pop
jno
push
enter
je
inc
cmp
movsb
dec
std
std
std
sub
sub
loope
sub
fsubrl
test
mov
jno
add
mov
adc
aad
popf
jg
loope
out
sar
ss
and
push
xor
mov
or
push
iret
shll
adc
sbb
gs
aas
aam
xchg
lock
pop
pop
leave
fs
lret
mov
subl
sarb
and
cmp
and
loopne
add
jae
sahf
lret
adc
adc
sub
cmp
ja
fimull
scas
add
or
add
jo
mov
loope
jecxz
mov
mov
ret
subl
ljmp
xlat
jo
lock
in
and
dec
dec
lods
inc
pop
gs
lock
rep
aad
cmpsb
pop
add
xor
add
enter
out
test
mov
inc
scas
movsl
call
xchg
or
mov
xchg
inc
test
inc
in
adc
adc
and
cmp
inc
mov
enter
mov
mov
lods
sbb
iret
xor
stos
fs
outsb
add
xchg
sub
push
cmp
ja
subl
xchg
cltd
stos
xchg
or
sti
pushf
pop
xchg
pop
push
inc
sahf
sbb
push
and
es
es
mov
fdivrs
sti
mov
sbb
std
mov
jb
loope
xor
pause
lret
mov
cmc
sbb
mov
mov
mov
and
pop
pop
and
or
nop
pop
xor
inc
cs
xor
sbb
sbb
imul
xchg
cpuid
stc
pushf
loop
aaa
xchg
stos
mov
ds
mov
mov
and
cmp
inc
dec
add
aad
lahf
std
push
inc
es
pushf
movsb
bound
sbb
dec
push
xor
adc
test
enter
test
test
adc
pop
jb
adc
leave
enter
pushf
and
push
subb
or
push
mov
addr16
mov
je
stc
outsb
movsb
data16
xchg
jg
aaa
fidivl
pop
add
inc
add
iret
sarl
jns
lret
sti
shlb
ret
cmp
mov
loopne
and
xor
xchg
or
add
pop
outsl
or
mov
ljmp
ljmp
add
jecxz
mov
test
faddl
loop
inc
sbb
xor
popa
cmp
push
mov
mov
into
mov
subb
add
jne
push
xchg
mov
mov
dec
or
xor
or
test
addb
push
into
cmp
mov
or
cltd
movb
pop
mov
inc
pop
or
mov
lahf
and
dec
push
lret
jle
jge
jno
test
je
mov
xor
bound
ret
push
mov
sbb
addr16
add
repnz
in
ret
and
mov
jmp
add
sub
add
les
mov
push
mov
shll
fucomip
lock
mov
bound
scas
jb
or
or
inc
ret
cs
lcall
out
pop
movb
and
add
add
clc
mov
movl
cmp
lock
push
xchg
xor
icebp
gs
addl
lods
mov
addr16
push
xor
cwtl
lahf
or
xor
mov
mov
fistps
das
dec
mov
push
add
je
and
clc
inc
push
inc
jle
shr
sbb
jae
testl
outsl
add
sub
pushf
pop
subl
inc
jp
adc
mov
and
inc
cmpsb
gs
and
cmp
movsl
movsb
and
pop
push
adc
or
inc
cltd
add
xchg
sub
xchg
shll
add
mov
pop
jae
and
rorb
sahf
lea
gs
mov
mov
add
xchg
jbe
dec
pop
jmp
or
inc
add
movb
or
mov
mov
xchg
call
ret
bound
and
inc
mov
in
push
and
jno
add
addr16
lea
adc
dec
mov
mov
mov
jo
and
xor
mov
xlat
fsubs
iret
add
inc
pop
movl
push
jns
test
add
sbb
stos
add
push
adc
cmc
dec
test
push
inc
imul
fwait
imul
out
jo
int
rorl
fmulp
cmp
sub
fnsave
dec
push
add
je
js
adc
and
xchg
pop
push
cli
mov
mov
out
inc
cmp
lret
imul
push
pop
sub
and
push
pop
push
clc
add
dec
je
repz
gs
xchg
aas
fcmovb
lea
and
cld
add
les
loope
mov
inc
rcrb
adc
add
adc
shr
lcall
mov
daa
shr
rcr
shr
rcr
or
sub
div
mov
fs
inc
mul
add
mov
push
cmp
or
cmp
add
or
and
addl
jmp
or
jae
pop
adc
icebp
and
mov
xchg
dec
push
pop
sub
mov
or
add
dec
xor
cmp
add
jb
inc
add
stos
and
test
inc
cmp
and
loop
cmpl
dec
daa
and
push
imul
pop
xchg
rorb
bound
push
mov
jno
push
jp
shlb
cmp
ret
fimuls
pop
or
or
or
adc
push
dec
or
lahf
ret
pop
enter
imul
sbb
pop
ja
push
cs
leave
mov
push
and
sbb
movsb
adc
and
pop
jbe
inc
scas
aad
pop
hlt
invd
mov
mov
push
pop
mov
or
add
add
fcmovnu
or
dec
pop
or
fidivl
out
imul
or
adc
or
xor
mov
test
dec
mov
adc
les
dec
mov
int
mov
je
pusha
rclb
inc
add
test
test
lods
movsb
mov
cmp
rcl
data16
jge
imul
jle
pop
pop
stc
out
cmp
xor
and
sarl
or
loop
lock
fs
arpl
cli
inc
sbbl
in
mov
pop
orl
sbbl
test
cmp
sbbb
popl
sub
push
pop
das
jbe
dec
aam
fs
rorl
pop
leave
add
pop
push
sbb
xor
mov
dec
or
xor
shrl
out
push
sub
dec
arpl
mov
loopne
adc
in
hlt
add
sub
cmpb
xlat
mov
adc
push
mov
add
sti
or
mov
int
mov
and
or
xor
xor
andb
or
shl
cli
jmp
pushl
push
dec
lods
out
mov
rclb
pop
xchg
jg
pop
sub
sub
fisttpll
jmp
mov
push
mov
pop
dec
or
rorb
in
xchg
pop
xchg
pusha
iret
xchg
les
pop
es
add
jae
scas
or
or
je
idiv
arpl
clc
mov
aam
inc
pusha
jne,pn
sbb
call
movl
fwait
outsb
ja
lods
sub
adc
cmp
jge
mov
ffreep
or
adc
jb
js
jmp
fnsave
scas
lahf
mov
sbb
push
push
test
sub
insb
in
test
nop
or
xor
sub
adc
fs
pop
or
and
sub
push
inc
out
cltd
insl
loop
insb
in
das
jg
fldenv
push
data16
xor
addr16
es
lret
jo
cltd
sub
popa
loope
je
scas
mov
inc
xchg
test
rorl
pusha
xor
jp
es
loop
cmpsb
adc
add
lret
je
xor
pop
test
ja
jmp
fsubs
shl
push
adc
mov
lret
clc
rol
cmp
xor
add
xor
mov
xchg
push
and
insl
mov
in
or
out
inc
clc
or
jne
push
icebp
and
sub
cli
ss
push
jecxz
es
cmp
je
push
out
repz
repnz
faddl
aam
xchg
pop
xor
out
add
inc
outsb
or
cld
pop
xorl
les
repnz
mov
sbb
cmp
jo
les
and
scas
cld
pop
pop
subb
adc
sub
push
hlt
cmp
hlt
cmp
and
icebp
les
cmp
add
xchg
inc
dec
dec
pusha
and
jno
mov
dec
inc
repz
adc
int3
and
jo
lret
test
and
jo
imul
daa
subb
test
jmp
into
js
jge
pop
inc
jb
cmc
fcoms
mov
stos
cmpsl
lods
andb
sbb
int3
cmp
jmp
mov
lahf
bound
jge
sbb
imul
push
xchg
mov
jnp
js
mov
jmp
les
xchg
xchg
popa
inc
cmpb
pop
je
pop
loope
fcomp
pop
push
cmp
or
filds
popa
ss
or
lcall
daa
xchg
add
add
testb
pop
mov
sbbl
aad
adc
stc
aam
dec
push
out
mov
push
icebp
adc
add
cwtl
or
in
fcomps
adc
cld
mov
inc
push
push
adc
call
inc
or
pop
inc
mov
push
jl
and
xchg
adc
and
jae
or
inc
sub
rcr
mov
sub
push
decb
jne
xchg
add
popa
push
sbbb
fcoms
sub
sar
popa
mov
jecxz
rolb
push
dec
inc
inc
adc
mov
mov
inc
lods
enter
pop
je
sti
xor
push
pop
es
pop
int
push
push
mov
or
and
push
xchg
test
pop
fcmovnb
loopne
mov
jmp
add
add
test
mov
xchg
lock
or
je
loopne
and
sarb
or
mov
add
movsl
sarb
inc
add
sarb
pop
mov
pop
add
add
arpl
sub
adc
and
pop
pop
cwtl
sbb
insl
cmp
xchg
dec
adc
sbb
mov
sbb
lods
mov
mov
outsb
mov
test
or
push
aas
aad
aaa
in
jge
mov
cmpsl
mov
aaa
and
fcmove
sbb
inc
dec
shl
setle
push
ljmp
sub
push
push
sbbl
mov
or
inc
fldenv
insb
or
loope
add
push
xor
inc
inc
cmp
call
jo
andl
rolb
inc
mov
insl
sahf
cmp
dec
inc
inc
mov
fmull
jne
repnz
addl
jl
hlt
mov
std
xchg
xor
and
mov
dec
dec
inc
clc
movb
sub
add
pusha
jb
jo
hlt
ret
jmp
testb
lcall
jb
fadd
push
xchg
aam
or
into
faddl
cmp
shlb
pop
mov
adc
shlb
sbb
jbe
dec
xor
icebp
push
push
shlb
pushf
xchg
add
push
pop
push
dec
aam
andb
mov
roll
mov
xor
or
or
or
push
and
sub
cmp
xor
inc
mov
insl
mov
js
into
mov
into
add
mov
mov
adc
push
adc
es
sub
jl
pop
pusha
jo
or
sbb
cmp
jo
cmp
rorl
add
nop
and
sub
andb
and
push
cmp
daa
adc
movsl
test
mov
sar
sarb
jg
popf
or
or
adc
inc
and
mov
add
mov
push
mov
mov
fiaddl
pop
or
xchg
cmp
mov
add
out
add
and
pusha
sub
and
int3
xchg
mov
mov
mov
or
inc
adcl
jl
mov
xchg
pop
repz
and
or
orb
jb
xchg
adc
std
adcb
ret
mov
cmc
push
push
inc
dec
sub
clc
or
test
pusha
add
xor
ds
test
add
mov
adc
adc
sub
cmp
and
sti
add
push
ret
xor
loope
pop
sbb
notb
stos
or
mov
aad
or
jbe
test
jb
out
mov
cli
add
mov
xor
out
push
imul
pop
cmc
lock
cmpsb
cmp
push
rcrb
imul
xor
and
ret
mov
test
adc
loopne
or
dec
jo
adc
not
push
rorl
add
enter
andb
les
jb
sbbl
dec
add
ret
sub
loope
jge
sub
jmp
nop
out
cmpsb
sar
fiaddl
nop
sbb
jg
adc
and
xchg
dec
movsl
xor
pusha
jo
mov
and
popf
xchg
xor
add
push
pop
cmp
cli
pop
cmpl
inc
jnp
mov
adc
lret
xchg
jo
addb
push
mov
cmpsb
jge
lods
mov
stos
ss
neg
pop
cmp
or
lock
push
dec
mov
mov
xchg
fimuls
sarb
cmpsb
mov
push
dec
xlat
and
cwtl
popa
mov
insb
loope
not
in
sbb
test
and
push
dec
add
aad
add
jp
jae
test
stos
pusha
pop
js
mov
jmp
insl
in
add
jmp
lret
jle
jo
push
add
xor
jnp
cmp
push
jae
jmp
arpl
xor
mov
ret
mov
xchg
rcl
je
add
inc
mov
call
test
or
hlt
clc
inc
dec
adc
in
mov
test
shrb
xor
push
pop
mulb
in
cmp
add
or
pop
verw
push
pop
adc
fsubrs
push
dec
adc
push
and
out
cmpsl
push
mov
outsl
inc
or
ds
push
jbe
jle
sahf
outsl
sbb
push
test
sub
out
sbb
hlt
call
adc
ror
ja
dec
dec
lret
loope
or
jecxz
mov
ret
test
into
and
call
sub
or
mov
sub
ja
cmc
addr16
add
sub
jge
imul
add
sub
lock
in
lock
rep
sbb
jne
mov
xchg
in
in
mov
sbb
mov
or
and
jne
push
adc
pop
cmpsb
dec
add
stc
add
add
sbb
hlt
pop
test
cmp
push
sub
lea
jno
lcall
or
inc
mov
mov
inc
mov
fsubl
sub
fadds
adc
sar
pop
in
add
push
test
test
jno
xlat
add
sbb
mov
mov
out
or
fcompl
sub
popa
nop
sarb
and
scas
insl
lock
orb
or
sahf
push
xor
push
push
mov
xor
xchg
xor
push
push
and
jne
faddl
xchg
mov
add
inc
pop
mov
and
pushl
pop
xor
mov
or
mov
cmpb
pop
and
xor
sbb
enter
mov
orb
imul
fiaddl
sub
aam
sarb
ret
xor
cs
sbb
sub
inc
xor
adc
mov
push
sbb
ds
adc
adcb
push
jns
fists
xor
jne
decl
and
xlat
adc
outsl
jo
push
sub
mov
jae
adc
inc
add
movsb
je
imul
mov
imul
fldl
inc
movsl
fsubr
dec
lahf
mov
mov
lcall
aaa
movsb
push
popa
cmpsb
inc
adc
movsl
jge
xchg
adc
repnz
imul
fsubl
cmp
adc
cld
outsl
push
xor
cmp
inc
jmp
fs
popa
mov
mov
sub
cmp
imul
ret
jmp
aas
sbb
movsb
add
add
addl
fsubs
popa
push
mov
adc
xchg
jle
inc
push
mov
cwtl
dec
sub
xor
fadd
xor
mov
mov
clc
idivb
xor
jle
insl
outsl
ja
cld
and
add
sbb
pushf
mov
mov
lcall
xlat
ret
add
sbb
or
test
pop
sub
roll
push
leave
and
sbb
or
sarl
add
adc
push
int3
and
or
pop
pop
sbbb
adc
lsl
jmp
sbb
adc
push
push
inc
sbb
adc
or
cmp
or
daa
test
xor
or
pop
mov
ficoml
scas
push
addb
jmp
sbbl
stos
imul
popa
addl
scas
push
inc
leave
out
pop
clc
inc
in
jne
mov
ret
repz
lock
adc
dec
rcll
or
rcrl
inc
pop
dec
sbb
rorb
rcl
cmp
jo
cmp
pop
add
std
cmp
add
lea
loopne
or
push
jae
fwait
and
mov
and
jae
sub
inc
jp
test
ret
mov
mov
add
dec
inc
sahf
testb
and
sbbb
mov
lock
les
xchg
add
mov
pop
popf
ss
sbb
movsl
adc
into
pop
inc
jb
pusha
jl
mov
orl
push
pop
loop
sbb
mov
ret
sub
pop
add
or
mov
js
test
hlt
aam
add
inc
jmp
mov
ret
push
aas
test
sbb
filds
push
je
xchg
cli
adc
lea
lea
or
cmpsl
mov
orb
xor
mov
or
mov
mov
popl
or
jl
out
add
mov
mov
push
sahf
mov
sbb
lea
adc
ja
push
je
pusha
inc
mov
or
mov
mov
mov
jno
add
sub
pop
xor
clc
xchg
ds
sbb
call
pop
sbbl
shrl
ficoms
sahf
mov
out
dec
jl
adc
fwait
aad
xor
mov
test
push
mov
aam
inc
adc
movsl
adc
cld
push
jl
and
inc
leave
aaa
push
or
dec
dec
dec
adc
cmp
mov
and
sub
cmp
cmp
xor
cmp
dec
cmp
inc
and
jb
jb
inc
cmovs
pop
jo
push
pop
add
pushf
pushf
fs
pushf
pushf
je
jl
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
sub
inc
push
sub
sub
ret
cmp
cmpsb
mov
inc
mov
and
shlb
movsb
mov
data16
dec
adc
dec
int
xor
adc
sbb
xor
sbb
pop
and
int
xor
and
and
inc
imul
mov
pop
push
pop
mov
adc
enter
cmp
inc
xor
push
leave
ret
cmp
sar
mov
add
dec
jne
out
cmp
adcl
push
lret
inc
sbb
mov
cmp
dec
add
mov
cli
fsubrp
add
adc
cmp
and
push
cmp
add
aam
pop
rolb
add
dec
int3
cmp
pushf
repnz
add
xor
rcl
inc
jge
scas
shlb
xor
jge
addb
pop
or
inc
pop
sahf
xor
inc
pop
clc
les
nop
cltd
mov
lock
inc
sub
xor
xchg
ret
dec
push
lea
shrb
jl
je
sub
mov
push
xor
mov
lret
imul
sub
sbb
out
mov
add
fmuls
in
lcall
scas
mov
inc
pop
int3
pop
sbb
fisubs
cmp
pop
adc
sbbl
sbb
cmpsb
aam
add
or
sub
pushf
jne
xchg
idivb
out
inc
push
dec
and
loopne
jge
or
ret
dec
sbb
es
popa
sahf
add
stos
mov
push
enter
push
popa
shl
xor
ret
inc
cmp
pop
mov
int3
nop
cmp
xchg
mov
or
push
jae
push
pop
cmp
jne
ret
mov
dec
jg
mov
xlat
aad
clc
cmp
mov
or
lock
adc
pusha
les
xchg
jmp
cmpsb
dec
or
pusha
jmp
jle
cmpsl
push
dec
xchg
add
loopne
cmp
pop
add
dec
dec
loop
pop
mov
lcall
or
gs
lcall
hlt
xor
dec
cmp
mov
pop
pop
add
cmpl
mov
jle
pushl
push
mov
push
add
jp
or
sbb
xor
and
inc
and
push
lods
stos
enter
and
adcl
ret
add
negb
sub
fwait
icebp
jp
cwtl
lret
ficoms
lods
insl
push
js
sbb
cmp
mov
cmpsb
jge
mov
in
sbbb
push
mov
repz
in
cmp
xor
andl
mov
das
inc
sub
pop
cmp
addl
xchg
inc
ret
and
out
mov
add
sar
mov
or
push
mov
jle
insb
mov
popa
lret
aad
sbb
inc
iret
lods
add
insb
or
push
adc
aad
pop
popf
add
cld
mov
cltd
add
pusha
inc
add
test
outsl
adc
inc
pushl
mov
cltd
sub
sub
ret
roll
inc
roll
ret
fiadds
rcrb
ss
imul
cld
or
pop
cmp
in
shlb
sub
adc
adc
push
hlt
mov
lods
test
sar
add
loope
cmpsl
cmc
fstps
out
lret
add
xchg
pusha
cwtl
push
mov
xchg
loope
lret
cmp
inc
inc
mov
ds
sbb
inc
or
dec
loope
add
push
insl
rcrb
lea
mov
lods
xor
std
push
mov
jne
xchg
cmp
ja
test
add
xor
dec
sub
shl
shl
cmp
mov
or
sbb
scas
test
rolb
jno
mov
mov
sbb
scas
mov
roll
cmp
cmp
jne
movzwl
or
popa
xchg
sbb
shl
inc
into
sbb
out
inc
int
popf
ficomps
push
jmp
inc
stc
insb
ljmp
jl
insb
iret
test
stos
cmp
add
js
pusha
and
sahf
cmp
sbb
mov
jb
ds
adc
push
sysenter
sbb
enter
dec
add
sub
loop
jo
movsb
lahf
mov
jnp
jmp
xchg
mov
addl
pop
mov
aaa
xor
xlat
mov
cmp
mov
icebp
pop
scas
sub
or
dec
mov
adc
cmpl
fmuls
scas
loop
stos
push
and
inc
xchg
cmp
push
pop
inc
add
mov
daa
jmp
loopne
cli
or
inc
xor
mov
dec
add
js
add
xchg
mov
xor
adc
lods
push
subl
fisttps
or
inc
inc
sbb
or
sub
mov
cmpsl
in
bound
pop
add
fs
aas
mov
lods
adcb
push
inc
sbb
adc
into
int3
push
xchg
push
xchg
sub
and
addl
push
loop,pn
sbb
push
pop
lock
scas
xor
fs
std
add
add
jno
push
sbb
mov
fstp
es
outsb
out
data16
test
je
add
jmp
add
repz
clc
mov
mov
sub
sbb
lea
mov
dec
ret
ret
mov
lods
adc
dec
mov
mov
dec
push
cs
ljmp
insb
cmp
adc
xor
jle
xchg
fidivrs
xor
filds
inc
cmpb
outsb
lods
mov
sti
and
sbb
addr16
das
or
mov
cmp
pop
pop
pop
test
or
cmp
mov
mov
nop
cwtl
leave
je
xlat
test
int
pop
inc
sbbl
in
aad
add
incl
jo
push
add
inc
push
mov
sbb
and
sbb
test
and
push
push
or
pop
jmp
lods
loopne
cmp
adc
fdiv
and
push
lahf
or
das
loope
jmp
push
adc
sub
outsl
repz
orb
xor
adc
and
ljmp
mov
add
mov
mov
call
sub
ja
mov
or
inc
sbb
scas
xorl
or
shll
ret
insb
movsb
fiadds
pminsw
pop
inc
nop
movsl
adc
icebp
push
mov
out
pushf
cli
mov
pop
mov
iret
imul
inc
pop
add
lock
hlt
pop
adc
mov
cmpb
in
mov
sbb
or
jne
mov
push
mov
dec
mov
lret
xchg
into
sub
sub
pop
add
orl
cs
into
loopne
pusha
vunpcklps
mov
dec
sub
push
ret
cs
mov
sbb
jo
xchg
gs
jle
stos
jecxz
pop
cmp
lods
jg
cs
fstp
rclb
xchg
dec
sub
adc
adc
jge
addr16
test
sbb
mov
rorb
movsl
inc
leave
mov
push
cltd
push
mov
mov
popa
cmp
and
mov
adcb
push
pop
lods
pop
pop
cltd
js
dec
pop
pop
or
inc
and
fadds
and
cmp
call
dec
lcall
sub
je
xor
nop
push
movb
inc
into
lcall
push
dec
cli
lock
cwtl
js
test
jecxz
cs
cmp
orb
push
test
push
sub
je
inc
cmp
shlb
test
mov
js
add
js
pop
sbb
push
add
ja
mov
push
popa
add
mov
and
loop
sbb
add
loopne
inc
cmp
pop
adc
push
add
insl
mov
add
push
or
inc
fsts
dec
mov
push
dec
jns
jmp
ret
sbb
xor
jecxz
jo
dec
popl
mov
loop
jle
adc
push
fwait
mov
cmp
ret
push
rcrb
cmp
inc
dec
mov
gs
cmp
sahf
sbbb
out
fcoms
addl
add
and
sbb
es
dec
lock
inc
push
out
push
cmp
mov
orb
pop
insb
sub
cmp
cmp
movsb
lea
jmp
sub
jns
lods
sub
jmp
sub
adc
adcb
cmp
sub
ljmp
dec
xor
mov
mov
das
push
mov
push
inc
ja
inc
dec
cmp
das
lock
pop
sbb
pop
adc
sub
sub
inc
inc
arpl
sbb
push
xchg
sbb
xor
mov
in
push
rolb
jne
orl
and
dec
scas
xor
mov
sbb
adc
dec
sbb
xchg
int3
cmp
ret
mov
fidivrs
aas
repnz
das
adc
mov
rcrb
inc
and
rorl
jl
or
or
call
mov
in
sub
or
pop
mov
popf
inc
push
cmpsl
popf
mov
mov
and
jne
dec
sbb
or
data16
cltd
push
inc
xchg
xor
sub
in
addps
pop
das
out
xchg
sbb
fs
and
inc
popf
test
pop
pop
jecxz
push
mov
ror
pop
sub
xchg
push
mov
pushf
leave
std
jmp
fwait
mov
loopne
sbb
mov
or
push
imul
inc
push
incl
cmc
nop
cmp
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
mov
cmp
lods
mov
mov
push
data16
pop
divl
mov
je
push
dec
and
adc
inc
rorb
pop
shlb
add
xorb
or
or
shll
or
adc
push
pop
fsub
jge
dec
add
and
test
and
mov
and
ret
adc
out
and
shll
dec
xor
adc
or
dec
push
jb
shr
add
xor
in
shr
and
and
arpl
adc
test
adc
dec
pslld
adc
test
xor
cmp
and
add
and
addl
mov
jg
popa
jmp
jp
incb
jmp
sbb
std
or
jmp
inc
and
mov
and
inc
jl
and
jecxz
jge
add
jmp
xchg
jmp
push
cld
or
sub
pop
xor
sub
jbe
test
mov
jle
and
push
fbstp
out
sbb
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
pop
gs
and
and
mov
repnz
adc
fnstsw
sbb
pusha
insl
jae
hlt
orb
adc
sbb
pop
or
xchg
cmpsl
repnz
xchg
adc
sti
add
adc
scas
cmp
out
test
fisttps
aam
xor
sbb
icebp
or
sub
lock
orl
mov
xchg
inc
or
testl
cmp
and
subb
xorb
sbb
jmp
push
and
jnp
and
inc
add
adc
mov
inc
push
flds
fmuls
sub
pushf
fimuls
or
out
and
arpl
pop
xchg
clc
cmp
pop
jl
inc
fistpl
pop
sub
fsubp
leave
adcb
xchg
add
ret
adc
xor
lret
mov
mov
or
pop
xchg
push
and
inc
inc
aaa
sbb
out
add
sbb
aaa
negb
rolb
les
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
lock
psubusw
inc
test
int3
adc
inc
push
or
div
add
push
dec
or
mov
add
cmp
stc
in
add
les
fstpl
mov
imul
stc
into
jbe
or
xor
fmull
faddl
subl
add
enter
enter
add
xchg
xor
push
test
inc
sti
sbb
in
sbb
jp
mov
jno
dec
in
jbe
lock
pushf
or
jp
push
adcb
push
sahf
jmp
pop
movsb
adc
aam
bound
adc
test
and
out
pusha
pop
aam
add
sub
jbe
and
push
add
aaa
inc
lcall
sub
sub
mov
xchg
sbb
pop
or
inc
icebp
dec
xchg
out
insb
cltd
pop
push
pop
add
and
pop
sbb
test
and
cwtl
mov
les
fs
jl
push
dec
rcrb
or
call
lock
sbbb
adc
or
inc
lret
inc
add
jo
sub
hlt
xorl
filds
jo
dec
out
loop
pop
clc
or
data16
add
or
call
jno
mov
xlat
inc
and
cmp
dec
negb
or
or
dec
inc
shrl
ficoms
pusha
jmp
dec
loopne
or
imul
imulb
pop
sarb
mov
and
lahf
adc
mov
add
cli
cmp
and
xor
mov
or
jbe
sub
xor
ds
loop
es
rcrl
out
jecxz
mov
or
adc
mov
mov
jecxz
in
sarb
xor
pop
mov
add
adc
imul
iret
sub
cs
shrb
in
cmpps
lods
mov
rcrl
icebp
stos
shl
jne
repnz
in
ret
gs
lock
add
mov
fdivp
mov
adc
call
cmp
push
pop
fadds
into
sub
mov
xchg
hlt
sub
addl
cwtl
out
mov
jl
dec
js
ret
imul
dec
in
stos
pop
or
mov
movsb
push
icebp
sbb
or
insb
cmp
mov
dec
xchg
adc
xor
push
out
mov
je
mov
loopnew
push
cld
push
add
fidivl
sub
ljmp
mov
ljmp
mov
fstpl
sbb
add
adc
xchg
imul
inc
lock
and
xor
push
or
insl
or
push
mov
iret
addb
sub
shrl
enter
fwait
int3
and
sub
cs
fwait
sbb
and
pushf
loopne
xchg
jle
call
jb
fsubrl
mov
or
inc
mov
inc
iret
not
je
mov
xor
inc
xchg
inc
and
repnz
test
fsubl
pop
call
jmp
and
cmp
repz
cmp
jbe
out
add
fld1
and
or
popf
jno
jbe
imul
push
pop
inc
popa
pusha
push
sub
inc
mov
adc
ss
add
je
or
or
lea
pop
lahf
insl
push
push
stos
test
mov
sub
jns
add
loopne
jbe
lret
mov
jnp
push
adc
cltd
add
fwait
pop
es
and
in
add
cltd
jp
pusha
push
jo
std
push
in
call
je
pop
nop
stos
and
mov
sub
psubsb
xchg
xorl
in
out
cmpl
filds
pop
in
adc
enter
in
popa
adc
loope
or
mov
lods
inc
add
xchg
in
orb
nop
mov
mov
dec
jle
mov
dec
cmpw
add
es
hlt
mov
ret
sub
movsb
loopne
sbb
gs
in
xor
xor
push
dec
or
push
xchg
dec
andb
mov
or
cmpsb
add
jle
xchg
shr
sub
add
mov
jg
test
add
scas
cwtl
pop
test
jne
leave
mov
hlt
mov
outsl
shrl
stos
repnz
pop
pop
jl
add
leave
push
jge
loope
addl
dec
jo
pop
add
mov
cltd
and
add
push
inc
or
jns
dec
xchg
loopne
lea
push
jmp
sub
inc
shl
les
xchg
add
test
mov
aam
xor
sti
loop
rolb
adcl
outsb
inc
aas
or
jmp
dec
cltd
insb
pop
and
mov
out
pop
hlt
int
mov
inc
push
into
inc
mov
lea
xor
repnz
cs
or
jb
cmp
sbb
lahf
imul
sub
adc
fldt
dec
bnd
incb
jae
or
dec
mov
adc
orl
push
xorb
test
and
jge
push
pop
mov
add
loopne
mov
inc
mov
cmc
loope
cmp
dec
dec
stos
inc
in
xor
pusha
mov
addps
push
aam
xor
cmp
push
imul
movsl
xor
ret
inc
hlt
pushl
out
dec
sahf
out
and
push
cld
not
inc
pop
lock
into
and
push
adc
sahf
push
ds
push
or
jne
shl
shrb
mov
xor
and
shl
sbb
test
mov
sub
sarb
lcall
fs
aam
adc
mov
pop
pushw
lds
dec
mov
lds
adc
push
or
leave
adc
or
cmp
jbe
sub
mov
cli
mov
adc
dec
scas
data16
clc
pop
add
js
lcall
sub
or
jns
inc
lock
nop
inc
inc
add
inc
jo
pop
ret
jecxz
sbb
loope
mov
loopne
dec
jae
cmp
mov
out
addl
mov
or
lea
push
jge
pop
sbb
js
andl
xchg
push
cmpsb
into
out
outsl
xchg
push
loop
lea
and
movl
sbb
ret
jge
xor
add
es
and
jecxz
or
sbb
or
dec
and
cmpsb
enter
mov
loop
stc
and
and
jl
rcrb
pop
pop
xchg
in
mov
pusha
fs
jb
and
and
fs
sub
fstpt
sbb
dec
gs
insb
repz
mov
movsl
cmpl
add
pop
inc
xor
adc
mov
or
shll
and
lds
cmpb
nop
cli
xlat
inc
push
sub
and
lods
mov
or
mov
jae
sub
or
jmp
xor
rcrb
xchg
add
call
xchg
dec
fcmove
sub
cmp
ja
inc
add
mov
fs
fwait
mov
mov
add
xor
push
call
or
fisttpll
aaa
jmp
pop
ds
pop
pop
mov
adc
jmp
adc
push
lock
mov
or
or
negl
test
ds
mov
cmp
cmpb
cmp
jle
cmp
push
xor
xor
int3
push
jmp
dec
push
hlt
fcoml
sbb
mov
int
and
push
callw
jo
add
push
jmp
faddl
add
inc
repnz
jae
mov
ret
mov
jmp
adc
pop
mov
mov
add
mov
nop
add
jne
clc
dec
jae
and
sbb
mov
jmp
and
outsb
mov
call
incb
out
push
sub
out
adc
gs
orl
test
push
and
scas
mov
xor
sub
mov
stos
sub
mov
andl
je
mov
mov
jge
mov
mov
fldcw
pop
cmp
adc
add
inc
testl
shlb
rcr
repnz
mov
jle
outsb
add
shr
mov
or
cli
and
sub
fdivr
es
dec
xor
cmp
or
jecxz
sub
push
push
out
pushf
jmp
push
cwtl
xchg
mov
aam
icebp
xor
xor
dec
loopne
loopne
fiaddl
in
mov
add
rolb
idivb
dec
push
cwtl
jge
neg
add
mov
outsl
lcall
xlat
test
cmp
adc
cmp
adc
lock
jmp
push
mov
jge
jle
push
adc
xor
sbb
les
lods
inc
in
dec
test
adc
mov
sarl
popf
into
lcall
popf
mov
dec
outsb
test
stos
decb
cmp
jb
mov
dec
mov
add
dec
or
add
es
pop
icebp
inc
mov
mov
mov
push
and
and
adc
nop
jbe
sub
rolb
aas
out
jle
iret
sbb
ja
pop
or
or
jae
mov
movb
testl
mov
enter
mov
or
into
jne
outsl
add
gs
or
cmp
cmp
jne
xchg
data16
sub
or
pop
mov
rolb
cwtl
or
sbb
rcrb
xor
pop
add
ss
or
add
add
scas
sbb
cld
lock
out
shl
dec
lock
inc
push
and
mov
fdivrl
subl
sahf
sub
sub
popa
lcall
stc
jg
add
add
mov
cs
test
js
mov
mov
xor
adc
aam
mov
fildll
jmp
push
idivl
or
in
mov
jg
or
sub
push
pop
movb
je
mov
movsb
dec
fcom
insl
fadd
and
shr
or
mov
sahf
dec
or
popf
loope
jne
insb
mov
mov
push
inc
add
test
and
inc
mov
lcall
add
ficompl
mov
push
lcall
inc
jmp
call
push
sbb
mov
mov
pop
jle
jb
ljmp
mov
rorb
orb
insl
xor
jmp
test
or
lods
or
add
lret
push
outsl
push
push
into
jmp
scas
test
out
int
ljmp
jno
les
int3
xor
and
int3
test
bound
lret
das
sub
add
sarb
jns
sub
nop
cltd
lds
adc
aam
sbb
shlb
inc
mov
inc
or
xor
mov
repz
jno
mov
add
jns
iret
fists
push
sub
sahf
lock
lods
addb
mov
out
push
lret
iret
je
or
sbb
push
test
pop
jne
cmp
and
ret
inc
scas
sbb
mov
or
mov
rorl
jo
cmp
in
push
or
popa
dec
adc
xchg
adc
fidivl
lret
cs
or
jmp
or
stc
gs
or
out
mov
dec
cmpb
je
lcall
add
sbb
sbb
add
or
mov
fbld
add
out
call
jp
gs
jne
push
pusha
cmc
pop
mov
orb
adc
push
or
pusha
movsl
insl
add
jmp
xor
adc
loope
mov
popf
xor
push
and
mov
je
xor
testl
jl
pop
jno
or
leave
sti
pop
and
xchg
sbbb
jp
testb
add
xchg
mov
scas
add
imul
aam
xor
jbe
or
add
or
stos
gs
mov
icebp
dec
in
je
setg
ljmp
push
cmpl
in
clc
add
mov
mov
jg
addl
add
adc
sbb
test
mov
xorb
mov
es
sahf
fwait
pop
cmp
add
add
ljmp
lret
mov
lret
pop
adc
shlb
sbb
fucomi
mov
sarb
dec
add
pop
xchg
jb
inc
out
cs
jne
inc
dec
jns
les
sub
call
pop
mull
xchg
xlat
movsb
cld
xor
push
or
add
adc
add
mov
add
cmpsb
outsb
xor
lea
test
jo
mov
mov
adc
mov
aam
inc
lock
dec
inc
push
adc
insb
js
adc
push
xchg
out
andb
mov
loope
clc
dec
shlb
adc
jge
mov
rcll
mov
lods
mov
xor
shlb
enter
les
sbb
shlb
cltd
popf
rorb
cld
leave
inc
pusha
imul
jl
cmp
push
inc
jl
ljmp
ret
sbbl
icebp
movsl
call
sbb
scas
cmp
jmp
arpl
cwtl
test
int
add
adc
add
sbb
mov
push
dec
roll
clc
add
mov
cmp
enter
test
orl
rcll
aad
jnp
dec
sar
sub
and
lea
jno
sub
add
enter
cmpsb
jo
push
push
inc
roll
or
xchg
add
push
xor
push
push
add
btc
and
add
cld
loope
repnz
scas
mov
dec
je
push
xor
jg
dec
and
add
mov
and
sti
add
gs
je
movsb
or
dec
fwait
pusha
fwait
sub
inc
neg
sbb
jecxz
fdivr
das
jle
lock
ret
daa
xor
or
jne
pop
cmp
inc
inc
adc
sahf
add
mov
or
mov
pop
int
xor
push
xor
nop
inc
sub
sbb
sub
or
bound
mov
ja
sub
in
cmp
dec
xchg
sub
adc
test
insb
or
out
push
movswl
popa
cld
loope
les
lods
data16
lods
add
mov
mov
rcrl
add
mov
add
dec
shrd
nop
add
add
jle
cmp
imull
jge
sbb
aaa
pop
pop
add
mov
or
cmp
call
stc
inc
add
dec
jmp
ret
cs
clc
sub
fs
cmp
or
ret
jo
and
incb
rolb
push
mov
xor
push
and
aad
rol
lock
mov
mov
mov
das
pop
inc
out
and
decb
dec
push
pop
sbb
js
jg
pop
jl
mov
inc
jmp
cmp
adc
clc
fidivrl
rorl
sbb
lahf
inc
shll
xchg
mov
jbe
xlat
jg
add
mov
test
jl
jg
lods
jb
lods
cmp
dec
inc
dec
mov
mov
sbb
cmpsb
adc
nop
add
daa
rorb
add
mov
stc
mov
add
sub
mov
add
lods
or
jnp
je
int
adc
add
adc
loopne
test
or
lds
and
sub
or
sub
inc
ss
enter
push
lock
inc
sub
xchg
aam
push
cltd
test
jge
mov
jne
push
shlb
adcb
push
mov
pop
xor
xor
ficompl
out
into
mov
pusha
bound
pushf
out
add
mov
xor
enter
je
push
shlb
and
cmp
int
xchg
js
add
ficoms
dec
lods
xor
inc
test
lea
sbb
or
mov
sbb
enter
push
insl
xchg
pusha
mov
insl
cmp
cld
cld
jl
sub
add
shrb
mov
xor
add
fwait
mov
inc
shr
fsubs
sbb
sbb
call
jge,pt
fldt
nop
jle
gs
or
pop
data16
jo
xchg
lock
mov
sub
add
inc
je
fsubrs
ss
add
jmp
xor
inc
and
movsb
enter
add
stos
xchg
pop
or
xchg
test
cmp
fildl
and
es
and
add
jbe
call
call
dec
add
push
pop
clc
fstps
mov
mov
or
mov
push
shl
inc
inc
mov
add
mov
ret
das
add
or
je
arpl
insb
pop
arpl
js
std
sarb
or
je
dec
pop
aas
push
mov
inc
add
adc
cmp
loopne
rcrl
jecxz
mov
push
cmpb
jne
jp
pop
and
dec
sub
pop
in
shrl
xchg
mov
jmp
int3
adc
sub
adc
add
jmp
lods
fnsave
imul
push
xor
ficoml
jno
jne
push
jne
pop
addl
sub
jmp
add
mov
andb
lret
int
or
cmp
add
lea
jmpw
push
pop
inc
mov
rol
or
inc
jmp
insl
lds
cmp
lret
mov
cmpl
pop
or
or
push
jge,pt
pop
sbb
dec
push
mov
mov
fcmovnbe
mov
imul
dec
pop
add
adc
ret
repz
mov
mov
xchg
add
lret
mov
and
enter
pusha
jnp
imul
popa
loop
cmpb
mov
sarb
sbb
int
lock
or
das
out
pop
cmp
push
pusha
push
mov
sbb
pop
out
mov
xor
ja
add
xor
add
sbb
lcall
push
push
jmp
or
jmp
mulb
outsb
jecxz
ja
or
incl
adc
test
addb
sbb
jb
xor
mov
cmp
jne
xchg
aam
pop
or
xorl
mov
mov
mov
xchg
rorb
or
or
mov
xlat
shrb
push
sbb
or
ror
incl
pusha
mov
and
stos
lea
cmp
jg
fnstcw
cmp
add
adcl
sub
aad
add
jno
xchg
jns
js
sbb
dec
dec
mov
xchg
lods
or
cmp
lea
jp
jo
push
inc
sbb
jo
xchg
xor
jns
jne
int
fisubs
int
mov
cmp
cltd
fwait
or
fs
jecxz
mov
aam
push
mov
je
mov
rcl
js
lea
mov
add
mov
and
gs
insl
add
in
xlat
call
jge
cmp
inc
push
nop
inc
in
jno
cmp
adc
je
fdivr
orb
sbb
push
lock
push
xor
adc
sub
les
inc
fucomip
and
xor
adc
loop
lcall
inc
jmp
or
or
add
or
inc
aas
in
dec
fdivs
inc
inc
test
inc
inc
in
outsl
xor
xchg
sub
adc
push
testl
outsb
bnd
std
mov
jmp
or
lret
cld
jo
mov
or
pop
arpl
inc
js
or
das
adc
adc
inc
in
adc
push
pop
fs
jl
lds
fisubrs
int3
mov
push
sbb
ret
fsubl
popa
inc
mov
xchg
in
mov
adc
pop
mov
add
mov
xor
fists
cmp
mov
adc
or
push
jecxz
aam
mov
adc
push
rcrb
pop
sahf
ljmp
mov
adc
pushf
mov
add
or
or
adc
sub
sbb
sbb
popa
es
loope
fwait
jo
notb
ljmp
xor
push
adc
adc
or
cmp
aaa
addl
cwtl
inc
sbb
lret
xor
xor
cmp
push
les
sbb
adc
adc
pop
add
pop
or
jmp
pushf
xor
sti
and
fwait
dec
or
in
mov
ret
and
loop
inc
les
adc
inc
enter
sbb
xor
aaa
push
mov
test
adc
push
jo
push
xchg
out
mov
lret
icebp
pop
and
lea
or
fdivp
shr
add
or
idivl
fxch
jns
das
clc
shr
or
mov
add
add
or
bound
scas
push
loopne
sub
in
push
sub
push
or
mov
pushf
cltd
fildl
push
add
int3
cld
push
mov
adc
fnstcw
sub
sub
popf
pop
adc
inc
add
lea
sbb
or
mov
shr
cmp
mov
icebp
or
fimuls
add
push
jp
adc
or
jae
adc
orb
mov
inc
dec
adc
iret
adc
pop
or
inc
movsb
addb
adc
addr16
or
jmp
cmp
ficoms
add
adc
iret
shl
andl
push
mov
mov
and
ss
test
add
decl
in
mov
shrb
push
sysret
xchg
test
test
adc
scas
subb
lret
je
dec
call
test
sbb
addr16
das
cmp
and
imul
out
push
dec
leave
hlt
cld
jo
shl
push
lock
fldt
negb
add
idivl
pop
call
subl
cld
sub
jne
add
call
scas
push
ljmp
adc
dec
out
and
xchg
aam
dec
cmp
mov
jmp
adc
pop
adc
fucomp
mov
jle
push
xorl
ja
les
pop
adc
jle
add
lret
out
leave
inc
xor
dec
dec
cmp
lock
jl
fdivl
cmpb
jl
xor
cmpb
idiv
add
xor
addb
xchg
adc
orb
jo
adcl
cmpsl
scas
subb
loopne
iret
inc
and
mov
inc
adc
rol
ljmp
adc
xchg
or
cmp
sub
jmp
in
adc
dec
add
add
call
fildll
stc
and
aas
sub
ret
enter
out
or
test
jne
cmp
flds
mov
or
mov
dec
pusha
mov
loope
dec
jo
or
hlt
scas
or
ds
aam
jno
and
and
jg
xchg
aam
adc
jl
push
inc
jne
movsw
xor
pop
leave
xor
outsb
rorb
or
les
or
xchg
out
xor
or
pop
mov
stos
xor
in
sub
inc
inc
out
sahf
loopne
out
neg
neg
sbb
sub
dec
repnz
sbb
cwtl
sub
adcl
push
lods
int
lods
push
inc
and
fsts
xor
xchg
fcomi
sbb
nop
mov
sbb
int3
pop
pop
test
mov
mov
dec
jne
pop
pop
pop
nop
nop
movb
js
mov
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
or
jmp
lods
test
call
lock
je
xabort
pop
inc
bnd
mov
adc
cli
daa
cmp
inc
out
cwtl
ficoms
xor
insb
pop
cmp
subb
ret
gs
xchg
dec
push
push
jne
push
inc
jno
shl
pop
and
gs
int
add
into
jbe
jns
xchg
add
jmp
and
adc
and
push
fldcw
mov
out
mov
push
or
adc
sbb
xor
orb
jbe
aaa
adc
or
mov
or
cmp
inc
push
cltd
xor
xor
pushf
jp
xor
aam
popa
mov
cld
and
les
pushl
dec
ss
push
sub
sub
mov
andl
cmp
add
sub
jne
mov
inc
jmp
dec
xchg
or
je
jmp
lods
dec
jnp
inc
mov
mov
xchg
push
decb
es
mov
je
and
out
jg
mov
push
cmp
ja
add
cmp
adc
popa
pop
inc
cli
cmp
jne
shll
leave
adc
hlt
mov
jb
idivl
pop
xlat
nop
jp
mov
add
in
dec
add
rcl
push
mov
cmpsb
ret
cmp
orl
lea
je
pusha
mov
mov
and
add
mov
or
sbb
or
fidivl
not
je
push
cmpl
push
xor
mov
sbb
ljmp
mov
test
pop
sub
xor
dec
or
imul
xchg
fwait
add
dec
sahf
push
push
ret
cmp
cltd
outsl
mov
add
das
sub
lods
add
push
xor
mov
inc
std
out
outsb
fdivl
mov
test
jns
and
dec
test
add
cmpsb
sub
mov
mov
cmp
popf
push
lcall
test
fwait
and
xchg
and
hlt
or
jnp
sub
dec
and
or
daa
in
or
cmpl
push
adc
inc
arpl
cmp
or
sub
mov
andb
mov
inc
and
inc
mov
push
shl
cmp
repz
aam
mov
cmp
xlat
fcomp
fstpt
mov
aaa
nop
data16
adc
movb
jmp
or
or
nop
xchg
data16
adc
ss
jno
push
jbe
mov
jbe
inc
push
or
mov
add
sbb
test
inc
fsubrs
jl
and
daa
cmpsl
sub
pop
dec
nop
mov
insb
maskmovq
in
lock
mov
icebp
adc
in
stc
mov
das
or
push
loopne
and
nop
push
inc
add
adc
cmp
push
or
insb
pop
in
flds
xor
sub
sar
lahf
stos
sbb
dec
lea
sar
inc
sbb
jecxz
dec
movswl
aam
sub
fndisi(8087
mov
ljmp
loop
or
pushf
shlb
sti
mov
sub
loopne
push
mov
rol
sti
leave
shrb
fisubs
addr16
pushf
push
jp
mov
clc
jb
test
fildl
outsb
or
dec
fwait
push
or
andl
test
sbb
popa
shll
and
and
lea
pop
sbb
xor
sub
mov
xchg
push
sub
and
ja
lock
or
add
and
test
loopne
inc
negl
repnz
push
loope
loopne
dec
icebp
lret
mov
inc
inc
or
cmp
add
inc
mov
mov
jne
mov
rcrb
xchg
rol
test
sub
add
mov
ds
mov
xchg
dec
xchg
mov
cmpsl
rorb
or
dec
push
insb
enter
lret
push
mov
ret
movsb
xor
sub
lds
addl
mov
cmpl
mov
insl
inc
test
rol
add
lret
jle
jle
jne
dec
inc
test
aaa
out
add
rolb
shl
loopne
cld
or
rorb
dec
je
negl
push
lret
adc
xchg
fs
push
lods
jge
push
call
clc
mov
add
jmp
ffree
ret
rolb
lock
iret
and
lock
cmpsb
repnz
cli
adc
lret
cli
div
xor
outsl
loope
mov
mov
dec
dec
loopne
mov
outsl
mov
adc
pop
xchg
aaa
mov
mov
rorl
ja
test
leave
mov
xor
mov
rolb
jecxz
clc
mov
mov
dec
rolb
pop
xor
mov
xchg
add
mov
out
stos
mov
push
repnz
pushw
sub
cmpsb
or
clc
out
jge
les
mov
and
inc
xchg
nop
add
sbb
inc
xor
call
mov
and
shlb
add
cmp
ss
inc
test
nop
and
jge
mov
cld
lods
dec
xor
int
pushf
adc
xor
call
lret
lock
jns
mov
mov
mov
adc
flds
les
rolb
cltd
add
sahf
idiv
sbb
mov
sbb
idivb
mov
test
push
push
sbb
mov
out
and
jge
adc
enter
jecxz
rcll
in
movsb
adc
cmp
sub
add
jne
in
cmpsb
jne
xchg
fnsetpm(287
loopne
lock
hlt
push
inc
into
mov
repz
jge
dec
cwtl
jno
ja
sub
insb
sbb
out
inc
add
inc
mov
pop
hlt
popa
mov
add
push
nop
cmp
push
call
mov
adc
out
decb
sub
into
pop
loop
popa
pop
shr
and
or
push
shll
test
jne
sbb
neg
and
sub
sub
call
imul
imul
addr16
pusha
call
push
pop
add
pop
ret
and
sbb
cmpsb
mov
shl
push
adc
sti
les
daa
push
jo
and
push
xor
or
xchg
mov
ljmp
subl
mov
add
cmpsl
out
into
or
adc
nop
lret
add
jge
xor
cmp
xabort
pop
cmc
mov
lcall
xor
xor
notb
jae
add
out
adc
roll
outsb
jne
cmp
sbb
testb
lock
inc
ljmp
push
xor
ja
decb
dec
mov
dec
cmp
jge
pop
cmc
cmpsl
push
sub
cmpb
or
add
dec
cmp
jae
jb
add
dec
add
add
fadds
add
adc
inc
pusha
ret
pop
lock
jmp
add
or
dec
xor
mov
adc
and
add
push
add
cwtl
jbe
add
or
add
add
jne
test
and
ret
dec
out
fidivs
enter
lret
mov
xchg
lret
xchg
and
insb
loope
push
je
pop
or
lret
sub
test
scas
or
int3
pop
fisubl
nop
push
je
push
add
or
push
test
add
adc
push
ret
mov
xorl
add
push
ret
xchg
dec
lret
ficomps
add
mov
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
xor
jmp
mov
rcrl
add
int3
sahf
mov
ret
cmp
mov
cmp
xor
sub
inc
push
pop
imul
or
or
jo
dec
push
add
add
inc
or
add
mov
cmpsl
inc
or
mov
jle
in
xchg
adc
xlat
jp
mov
add
je
jl
jne
and
fsubs
test
jge
sbb
mov
mov
data16
add
pop
sub
push
push
pusha
xor
aas
movsb
add
cld
cld
adc
xchg
xorb
add
and
inc
stos
jg
cmpb
sub
into
xchg
and
loopne
sbb
jge
dec
cld
or
mov
stmxcsr
pop
dec
pusha
xorb
pop
test
push
ss
or
add
or
adc
xchg
sbb
mov
mov
iret
je
and
sbb
inc
jg
push
xchg
xchg
xchg
into
into
into
mov
test
pusha
inc
pop
sub
fsubp
or
pop
cwtl
pop
imul
or
shlb
or
pop
std
daa
movsb
cmp
mov
popa
lock
or
pop
lcall
add
leave
lahf
pop
test
xor
adc
add
add
bound
and
flds
test
sbb
je
and
push
test
and
lcall
sbb
lret
inc
mov
lret
pop
or
xor
xchg
jo
xor
push
scas
adc
fidivl
xor
dec
xchg
sub
sub
sub
mov
fmul
cmp
pop
adc
push
mov
sbb
cmp
and
add
test
sub
jmp
es
pop
movsb
pusha
push
fisubs
mov
jne
xlat
jle
and
daa
or
je
or
jge
inc
add
cmp
jl
shl
cmpsb
pop
or
fdivrs
movsb
mov
xchg
rorl
loopne
jp
xor
aas
je
dec
sbb
xor
or
jmp
cltd
subl
cwtl
orb
adc
sub
jmp
mov
fmull
rorb
add
mov
out
je
add
call
rorb
lret
inc
inc
inc
lret
sahf
call
jle
inc
xchg
imul
xor
outsl
adc
or
cmp
loope
jmp
loope
into
pusha
and
js
push
stc
push
ss
push
loope
adc
mov
frstor
stc
repz
mov
mov
test
and
rclb
xchg
loopne
insl
dec
jmp
or
sbb
sbb
and
adc
pusha
out
clc
movsb
xor
stos
cmp
add
sbb
jle
cld
inc
sbb
je
sti
test
xchg
test
push
xor
mov
out
je
and
clc
cmp
fcoms
addl
cmpsb
mov
and
xor
jmp
jge
sbb
shrw
adc
or
je
mov
test
push
rclb
fcoml
cmp
lret
xchg
push
cltd
in
inc
sbb
clc
fsubr
sub
jge
pusha
or
and
mov
insb
lock
pusha
push
pop
push
imul
movsl
lea
shrb
add
add
dec
leave
jae
lods
push
shrl
sub
inc
outsl
inc
push
dec
cmp
mov
jae
mov
inc
aas
outsb
add
pop
loop
sub
lods
imul
sbb
sub
add
xchg
sbb
stc
jmp
xchg
lock
push
mov
sub
neg
insl
push
adc
xchg
sub
inc
addb
sub
jmp
adc
xor
adc
push
mov
iret
dec
inc
cmp
jl
mov
inc
mov
push
inc
add
add
lods
inc
push
loope
rclb
jmp
xchg
xor
mov
negl
cmp
rol
add
xchg
icebp
or
imul
fsubr
loope
xor
aaa
test
cwtl
and
push
pop
add
std
xchg
lret
sbb
dec
add
mov
clc
mov
loopne
or
adc
mov
dec
les
and
inc
pop
ret
je
shll
xchg
addb
test
cmpsl
push
test
sbb
xor
nop
sar
lock
inc
push
add
push
pop
jl
mov
lea
adc
test
int3
lock
push
xchg
stc
adc
shlb
daa
and
sbb
pop
nop
mov
jae
fsubs
mov
mov
push
jmp
and
cmovg
out
out
rcrb
add
mov
or
js
xchg
mov
inc
aas
fs
mov
je
aad
loopne
sbb
inc
js
fmull
inc
add
push
sar
fcompl
mov
sub
movsl
movl
add
rorb
dec
in
inc
je
inc
pop
and
push
repnz
or
lret
and
ljmp
push
and
add
adc
mov
pop
cmpsb
inc
hlt
xor
mov
subl
rolb
push
mov
sub
addb
or
dec
testb
add
mov
push
push
mov
pop
adc
sbb
xchg
mov
or
xor
pop
jbe
mov
shlb
mov
push
pop
inc
xlat
add
and
inc
data16
jns
add
dec
sarb
add
inc
add
xor
popa
jecxz
les
test
cli
int
sahf
sub
imull
cmp
push
or
mov
cmpsl
or
sbb
sbb
ja
outsb
or
loop
xor
mov
and
shr
adc
and
jl
and
sub
popa
stos
outsl
cmpsb
mov
cvttps2pi
mov
or
fs
por
out
test
lods
fld
push
xchg
fildll
push
mov
push
cmp
jmp
fsts
or
icebp
add
add
lahf
jnp
enter
jno
add
sub
das
fdivrs
adc
test
cmpsb
inc
mov
loop
rcrl
cld
mov
add
mov
loopne
fcompl
xchg
add
fs
sub
lahf
inc
or
clc
in
add
hlt
jmp
insb
sub
les
cmp
mov
frstor
popa
lock
cld
adc
mov
adc
stc
inc
insb
test
or
adc
loope
andb
xchg
fldt
jbe
adc
adc
or
adc
mov
fdivr
adc
cmpsl
inc
les
add
add
add
fmull
inc
sahf
stos
xchg
xor
sub
nop
lret
mov
in
paddq
lock
arpl
pop
sbb
and
add
popf
sub
lret
adc
xor
lcall
pushf
enter
pusha
mov
sub
jb
mov
pop
mov
cmp
cltd
mov
in
push
sti
dec
or
dec
cmp
insb
imul
out
ss
and
insb
jmp
out
add
pop
testb
or
sbb
cmpsl
ss
inc
js
shlb
mov
sti
adc
xor
add
sbb
mov
sub
jo
arpl
imul
rclb
or
pusha
sub
sbb
mov
pop
loopne
adcb
add
or
lret
xor
pop
inc
add
push
jge
cmp
jle
inc
or
add
xorb
ror
push
inc
mov
sbb
ja
push
dec
sbb
pusha
lds
fdivl
sbb
xor
mov
lods
das
pop
mov
mov
repnz
dec
test
jg
adc
or
fsubl
xchg
or
icebp
roll
adc
pop
rorl
fstpl
xor
sub
call
adc
lock
fadds
add
pop
insb
mov
popa
push
mov
pop
pop
ss
in
pusha
popa
loope,pn
cmp
sub
rorl
push
cmp
sub
mov
mov
lahf
cmp
sub
sbb
push
imul
imul
pop
movsb
aad
fcomip
sbb
push
movsb
mov
in
int3
dec
stos
add
iret
les
scas
lods
mov
inc
inc
daa
push
fstl
rol
push
add
add
pop
mov
popa
sbb
sbb
adc
or
pop
xchg
cmp
int
mov
push
or
test
sub
pop
gs
push
mov
insl
outsb
das
dec
inc
test
sbb
in
or
sbb
sub
mov
cmp
add
inc
loopne
adc
add
mov
sub
mov
xor
and
sbb
ret
pop
mov
xlat
xor
and
sarb
jg
dec
shrl
out
out
xorb
jne
je
push
push
stos
gs
cmp
insl
push
je
shl
dec
or
jbe
dec
add
lods
loopne
mov
adc
sbb
pushl
leave
cli
scas
add
xchg
sub
cmp
xchg
rcrb
or
out
jmp
popf
cmp
jmp
sahf
mov
in
adc
or
ret
in
pop
and
xor
xor
cmp
out
adc
and
or
push
and
inc
sbb
lret
jmp
add
fs
pop
xchg
cs
push
mov
and
inc
push
call
es
cmpsb
mov
pop
bsf
mov
jo
scas
cmp
cwtl
lret
test
sbb
push
sbb
mov
push
jl
aas
insb
cmp
les
jmp
lret
and
jg
inc
sbb
inc
aas
iret
jle
notb
sbb
pushf
sbb
add
sub
add
call
sub
add
iret
add
or
jg
jmp
ljmp
cmp
jl
stc
and
lods
sbb
mov
leave
xchg
or
fstl
and
call
fneni(8087
test
test
mov
fnstcw
loop
dec
xchg
gs
or
mov
inc
dec
loope
dec
push
push
mov
xor
imul
mov
sbb
movsl
shl
shl
aaa
loope
rcl
fsts
fdivs
aaa
inc
dec
push
xor
iret
fmul
mov
test
mov
in
xor
sbb
gs
pop
cmp
cmpsb
sbb
cmpl
adc
ret
ja
inc
or
sbb
push
popa
and
sarb
add
shlb
fnstcw
ja
in
aam
jo
cmp
cmp
call
cmpsl
and
sub
outsb
fcomps
pop
xchg
sub
pop
mov
rcl
lcall
jle
mov
push
mov
movsl
and
inc
xchg
leave
mov
out
sarb
ret
sbb
ret
fwait
mov
test
int
jb
cltd
and
mov
push
cmc
xchg
jbe
cmp
int
push
add
test
and
mov
xchg
roll
or
gs
lea
mov
push
pushl
inc
mov
jbe
data16
sbb
dec
adc
cmp
push
mov
js
into
cmp
pop
jnp
mov
pop
je
int
cltd
aam
stos
mov
adc
or
jg
sub
mov
stos
out
jl
jae
mov
push
mov
sbb
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
and
addb
iret
cmp
std
add
testb
int
xor
xchg
orb
jno
shll
add
in
xchg
cmp
xchg
shl
sar
inc
dec
test
add
sbb
les
xchg
adc
sbb
leave
cmp
push
test
or
add
ja
fcoms
inc
mov
jmp
xor
inc
xor
je
adcl
dec
mov
add
lcall
aaa
push
icebp
roll
cli
fildl
or
mov
or
push
add
cmp
or
mov
jns
and
mov
test
mov
xchg
out
bnd
filds
in
lss
je
pop
cmc
rcrl
test
cmp
pop
mov
rorb
add
cli
jp
pop
mov
push
test
fdivl
ljmp
loope
addr16
pop
push
cmp
jl
lock
adcb
jg
sub
adc
les
xchg
movsb
dec
hlt
scas
idiv
dec
add
lock
jne
clc
mov
jmp
rcr
sarl
mov
push
ljmp
mov
cmpsl
movsl
sub
cvttps2pi
cmp
add
pushf
xor
cmpsb
or
mov
add
mov
mov
stos
mov
mov
fwait
push
mov
push
adc
or
lods
and
add
lods
mov
bound
or
dec
jb
jle
sbb
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
pop
mov
sbb
dec
into
pop
jle
add
push
andl
or
or
jecxz
mov
nop
mov
subl
adc
jg
hlt
fsubs
mov
and
jle
sbb
add
xchg
in
lret
clc
dec
test
push
popl
cmp
and
xchg
adcb
mov
jl
nop
cmpsl
fs
ret
sub
insb
aam
je
dec
dec
mov
and
cld
addb
jnp
retw
sbb
cmp
mov
sbb
dec
jg
adc
orl
call
lret
pop
hlt
cmp
ret
aad
cmp
movb
add
rolb
cmp
or
push
dec
std
std
loopne
inc
pop
cld
pop
std
jb
shll
jg
icebp
adcb
push
pop
test
or
cmp
popa
ret
notl
repnz
add
mov
call
pusha
adc
dec
or
lock
lock
out
jbe
pop
andb
sub
mov
push
pop
clc
cmp
cmc
push
pop
pop
dec
cmp
xor
shrb
test
mov
sbb
and
incl
incb
adc
xlat
je
cmp
adc
cmp
fidivs
jb
testb
xchg
testb
cmp
hlt
or
mov
daa
jmp
inc
movb
popf
test
pop
je
data16
mov
divb
cmp
jbe
mov
push
or
xchg
cwtl
lret
pop
xor
shr
sti
xchg
mov
jmp
das
xor
aas
out
cmp
loop
adc
test
push
imul
and
fstpl
push
pop
xchg
cmp
es
jmp
push
cli
jne
jbe
push
inc
pop
pop
inc
mov
mov
add
ret
inc
lea
and
dec
in
mov
sbbl
enter
sbb
cmp
int3
add
mov
andl
enter
dec
adc
jns
pop
lcall
pop
fcmovbe
sahf
push
push
or
shlb
and
call
in
test
add
push
jge
test
or
nop
arpl
xor
jns
inc
in
adc
imul
adc
aam
inc
dec
subl
nop
inc
subb
loope
add
mov
sub
sub
jo
inc
imul
inc
je
leave
iret
mov
inc
jne
xlat
or
and
jmp
mov
enter
insb
adc
sbb
jne
cmp
lret
insl
xchg
lret
xchg
sbb
inc
adc
repnz
mov
std
or
cld
sti
push
jmp
xchg
shrl
pop
adc
fimull
pop
xor
jo
insl
orl
push
cmp
cmp
dec
fsubrs
leave
adc
push
addr16
imul
sbb
or
insl
fwait
cmpsl
mov
adc
mov
xchg
sbb
sub
outsb
xor
test
call
dec
xchg
daa
int
mov
cmp
movsb
sub
test
outsb
or
xor
movups
jo
outsl
movsl
fadds
jmp
iret
jo
popa
imul
sub
fsubl
mov
int
mov
mov
lock
pop
hlt
add
push
and
call
mov
mov
loopne
or
xor
adc
fnstsw
arpl
adc
repnz
sbb
add
xchg
outsl
ds
sbb
test
shr
fidivl
insl
cmp
inc
shlb
push
loopne
and
cmp
sbb
mov
or
aaa
aam
cmp
sbb
jg
dec
push
fdivrs
js
and
jno
jl
fcompl
ss
sbb
cltd
xor
cltd
aam
mov
bound
and
cmp
cmp
inc
out
shrb
insb
dec
insb
fcoms
jbe
test
adc
adc
xchg
dec
es
and
dec
es
xor
es
fs
cmp
inc
dec
fs
dec
fs
int
insb
add
sbb
ja
in
jnp
inc
add
mov
fsubl
rol
add
jbe
sbb
int3
cmp
add
rcl
loopne
pop
imul
je
scas
imul
pop
jb
inc
mov
lock
add
add
shl
cmp
fisubrl
fcoml
repnz
push
cmp
and
faddl
mov
jmp
sub
cltd
in
aam
addr16
and
fsubl
call
xchg
cmp
or
rcrb
or
jbe
inc
inc
inc
xchg
inc
pushf
cmpsb
movsl
and
subl
cmpsb
rcrb
cmpsb
add
loope
push
movsb
rclb
sarb
xor
das
sbb
ja
cwtl
popa
push
pushf
bound
push
mov
and
fistpll
jb
dec
hlt
pop
js
or
imul
adc
leave
or
pop
call
lods
mov
dec
cs
in
inc
xchg
adc
fcomp
xorl
loope
add
jne
aaa
cmpsl
sub
adc
fisubl
outsl
in
in
nop
sub
call
xor
jp
pushf
xor
in
call
inc
adc
jp
dec
fisubrs
pop
hlt
or
scas
mov
cmp
sbb
and
call
jnp
mov
orl
fadd
call
jnp
push
mov
lods
jnp
adc
mov
dec
add
out
lock
sbb
mov
jl
xor
sub
stos
pop
and
insb
jl
stc
xor
loopne
subl
ret
int3
push
call
inc
stc
add
rcr
and
dec
adc
shrb
int3
xor
cmp
and
test
mov
out
inc
dec
ss
add
or
sbb
out
stos
jmp
inc
lock
fcomps
dec
les
pop
nop
out
add
fstp
push
repnz
fcom
sarb
sub
shrl
pop
jle
cmp
sbb
aas
lods
in
sbb
xchg
test
jg
pushf
pushf
fmull
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
enter
adc
ret
push
push
and
movsb
fisttpll
mov
add
mov
cmpsl
lock
dec
add
mov
andl
pusha
cmpl
in
sub
push
push
int3
enter
cld
add
sti
xor
inc
pop
aas
xchg
sub
nopl
nop
or
adcb
subb
fsubl
add
negl
addl
cmp
insl
inc
subl
add
ret
lds
ss
aam
unpcklps
inc
adc
call
outsl
adc
add
xor
mov
loopne
inc
gs
mov
pop
cwtl
pop
inc
mov
test
jmp
sub
imul
rolb
sbb
test
inc
es
or
dec
imul
mov
mov
adc
scas
pop
jo
and
pusha
xchg
mov
jo
mov
gs
dec
mov
adc
mov
icebp
sub
dec
mov
pop
cltd
fisubl
add
jbe
je
jb
lcall
xor
orb
rorb
xchg
fs
movaps
sbb
mov
addb
mov
jne
roll
ljmp
add
jecxz
pop
lock
stos
adc
push
dec
lds
xchg
or
sbb
movsb
jg
inc
add
pop
fldcw
cmp
sub
xchg
cld
cmp
pop
jno
mov
and
lock
popf
scas
add
jmp
sbb
call
cmp
xor
xor
dec
dec
call
insb
or
push
int
clc
xorl
and
lods
pushf
loopne
sub
pop
sub
lcall
cmpb
xchg
xor
popl
push
or
xor
je
jnp
mov
pcmpgtb
rclb
sbb
and
or
mov
enter
or
enter
or
or
adc
mov
enter
in
aaa
call
call
push
pusha
mov
pop
aam
cmp
pop
arpl
and
mov
fs
addl
mov
dec
repnz
xor
push
inc
pop
leave
mov
xlat
insb
mov
mov
shl
push
xor
and
test
fmuls
es
add
jmp
stc
cmp
push
and
enter
sub
lea
mov
mov
add
mov
xor
mov
nop
cmp
rolb
movsb
mov
lds
dec
or
mov
inc
test
dec
pop
mov
lock
or
or
mov
or
ret
cs
add
adc
xchg
stc
push
stos
or
push
adc
add
insb
jg
dec
adcb
andl
sahf
js
mov
loopne
push
inc
pop
and
fdivl
mov
xchg
adc
rolb
nop
rolb
fwait
nop
inc
sbb
pushf
mov
sub
aas
or
inc
or
imul
imul
add
cmp
push
mov
push
cmp
mov
lods
leave
leave
leave
insl
nop
bswap
enter
leave
leave
sarb
mov
cwtl
mov
pushf
sti
mov
je
xchg
pop
shlb
test
aaa
stos
cltd
cmc
test
popa
xor
insl
inc
inc
lds
push
mov
das
and
in
fadd
mov
and
push
jb
xchg
popa
mov
lods
xchg
movsb
enter
xchg
nop
sub
or
mov
lret
ficoml
mov
mov
fdivrl
mov
dec
and
push
shlb
inc
dec
sbb
in
jne
or
xchg
jo
push
fsubrl
sbb
mov
xchg
jae
in
or
stc
addl
jp
xchg
lahf
outsl
sbb
push
jg
dec
or
iret
pop
sbb
inc
or
sbb
mov
sub
test
mov
adc
movsb
jnp
sbb
pusha
pop
call
cmp
xchg
sub
mov
push
lcall
xchg
inc
test
or
or
xor
fimuls
adc
add
ret
int
pop
movsb
imul
push
mov
push
sub
inc
xchg
aam
es
shlb
lods
sub
loopne
es
dec
xlat
jmp
pop
fsubl
insb
add
nop
mov
test
ror
lock
add
imul
lcall
shrl
push
pop
ret
les
popa
arpl
xor
std
int3
enter
jae
inc
sti
nop
in
outsl
movsl
or
and
sub
xchg
hlt
inc
repnz
idivb
shlb
sti
add
and
adc
add
stos
xchg
mov
jnp
mov
mov
dec
outsb
cmp
repz
shl
jbe
xor
lods
mov
pushf
adc
dec
ret
call
pop
fcoml
push
insb
adc
inc
sub
inc
lock
mov
push
mov
outsb
in
mov
dec
popf
addl
xchg
fidivl
lcall
jno
adc
xor
adc
push
ficoml
cmp
adc
pop
cmc
cld
imul
dec
pop
andl
adc
pop
adc
jns
lds
push
inc
arpl
dec
sub
add
cmp
sar
int3
sti
cmpl
lds
jns
in
push
pop
or
push
push
outsb
push
loope
imul
imul
mov
sbb
pushf
rorb
aaa
test
fsub
mov
adc
stos
pop
call
arpl
int3
ret
push
xor
mov
dec
shll
cmpb
mov
inc
mov
or
loopne
xlat
or
ljmp
pop
mov
and
push
movsb
adc
inc
pushf
pop
enter
cwtl
adc
sbbl
js
push
repnz
pop
push
jmp
loope
mov
mov
orl
dec
stos
adc
out
jg
sub
dec
push
movsb
pop
inc
dec
pop
jo
outsl
mov
cwtl
movsb
mov
in
in
movsb
lcall
push
sub
fs
movsl
xchg
push
test
mov
lea
ret
movsl
sub
mov
fisubl
cmp
mov
add
insb
cwtl
movsb
xchg
xchg
pop
pushf
mov
or
and
jle
add
or
xor
pop
movsb
add
lock
push
add
lret
insb
mov
imul
dec
xor
ja
sub
fs
lock
adc
dec
dec
and
mov
xchg
test
or
push
xor
mov
xchg
xor
mov
xor
xor
lea
and
in
je
or
add
push
push
sub
test
lahf
push
fs
or
sbb
push
fcmovu
arpl
test
pop
mov
mov
rclb
pushl
lods
lods
out
das
dec
pop
mov
xchg
push
test
push
xor
test
add
push
sbb
push
out
fistps
xor
pop
shlb
mov
aam
sub
aas
in
jb
decb
sbb
cs
add
inc
fcom
mov
sarb
sbb
inc
mov
adc
out
or
xchg
or
add
dec
add
test
fneni(8087
mov
push
mov
decb
adc
xchg
test
out
inc
mov
jo
dec
fs
pop
insl
nop
out
adc
xchg
pusha
out
out
lods
and
sbbb
loopne
mov
testl
and
push
mov
ficoml
pop
rorb
mov
stos
shll
loopne
ss
pop
mov
xchg
push
ret
sub
cmpl
arpl
imul
int3
adc
stos
lods
cmpsb
in
add
jecxz
icebp
sub
pusha
scas
pop
call
fisttps
lahf
in
std
enter
test
aas
mov
lock
add
pop
adc
adc
dec
mov
lock
add
dec
out
jl
mov
int3
jg
cmpsl
cmpsb
pop
das
sar
adc
pop
adc
sub
int3
inc
sbb
dec
pop
cmovne
dec
bnd
and
mov
test
jne
insb
xchg
mov
rorl
and
pop
fstp
add
aad
mov
mov
or
mov
adc
stos
or
and
fadds
dec
mov
lds
fists
adc
xchg
fmuls
sub
mov
iret
nop
addb
mov
fcoms
and
sub
mov
lods
xlat
dec
aam
fsubs
pop
adc
les
adc
fdivs
cmpsb
stos
mov
inc
test
lahf
inc
faddl
jns
aad
mov
jnp
ds
mov
data16
sub
pop
mov
insb
js
mov
aaa
and
int
cltd
add
orb
clc
pushf
cmp
int
rorb
testl
out
xor
adc
nop
and
sbb
cmpsb
mov
fwait
dec
inc
test
mov
mov
lock
and
aad
cmova
add
pop
xor
xchg
mov
inc
sub
add
pop
mov
push
xchg
or
aad
iret
or
cs
sub
adcl
jl
cwtl
in
test
jo
add
cmp
or
sub
add
or
stos
push
lahf
add
pop
ret
jmp
les
mov
add
jb
inc
test
and
out
fsubr
push
mov
jl
inc
xor
xchg
repz
or
push
xchg
or
push
stos
xchg
imul
mov
ret
imul
xor
lock
or
mov
jne
shll
add
add
adcl
dec
and
pop
insb
test
test
mov
imul
xor
imul
cmp
and
mov
leave
and
inc
nop
pop
loope
jb
cwtl
cmp
or
cltd
xchg
pusha
inc
pop
ret
jno
cltd
in
fmul
inc
push
pop
leave
sar
nop
mov
enter
popf
or
jbe
shrl
mov
push
dec
test
mov
jg
xchg
mov
lahf
inc
aam
mov
int3
inc
push
stc
xchg
add
add
nop
or
fs
or
adc
and
sub
xchg
inc
inc
mov
jae
sysenter
add
jge
int3
mov
add
or
mov
and
nop
cmp
std
mov
ja
add
sub
xchg
add
incl
test
cmp
push
in
gs
out
xor
fildll
popa
and
and
sbb
inc
stos
add
gs
in
and
add
mov
xchg
fsubrs
dec
invd
pop
das
sahf
add
or
jo
mov
xor
daa
sub
pop
test
cmp
test
das
push
mov
sbbl
add
scas
pop
inc
or
pusha
mov
pusha
mov
mov
inc
or
add
and
hlt
shrl
nop
xchg
in
in
addl
stc
jb
add
adc
push
in
cld
cltd
mov
mov
lock
lds
adc
lock
orl
sub
mov
andl
sbb
sub
push
in
jl
cmp
cmpsb
aam
stc
sub
popf
push
jmp
and
pop
sub
mov
enter
mov
shrb
sub
pop
dec
adc
add
roll
and
adc
xor
xchg
and
leave
or
cmp
ret
ljmp
xor
mov
insb
or
gs
insl
pop
shll
lds
insb
push
lods
cld
xchg
sub
mov
inc
les
adc
test
adc
bound
clc
or
adc
js
stos
mov
mov
loopne
es
inc
adc
call
sbb
fcoms
sti
mov
xor
push
nop
mov
cmp
xchg
dec
pusha
xor
add
insb
jno
add
xor
insl
mov
mov
lods
shrb
xchg
bound
test
push
mov
adc
mov
les
jo
leave
mov
pop
insl
pusha
push
enter
pop
dec
inc
push
push
xlat
push
cltd
cmpb
dec
lret
mov
lea
and
cmp
clc
fmuls
jno
pop
leave
shlb
cld
or
sub
les
xchg
dec
es
in
mov
movsb
lods
mov
jecxz
cmp
adc
push
mov
iret
fs
aam
xor
dec
cmp
lea
aam
and
lahf
pop
insl
lea
push
nop
xchg
cmp
mov
inc
add
xor
adc
incw
clc
adc
inc
sahf
sbb
pushf
dec
xor
mov
pop
outsl
mov
dec
ljmp
mov
lock
lcall
or
xchg
test
fsubs
iret
fwait
adc
pusha
inc
sarb
add
test
mov
xadd
mov
pushf
in
adc
movsb
or
test
and
and
in
push
loopne
fwait
loopne
fsubr
call
or
jns
push
into
push
fdivs
aam
in
add
and
clc
add
mov
shl
cltd
enter
sub
fstpt
imul
lock
sub
mov
ret
sbb
test
sbb
or
iret
imul
add
pop
leave
jae
rolb
std
sub
in
jo
les
add
cmp
cli
xchg
inc
xchg
xor
mov
das
cmp
push
mov
mov
leave
call
cltd
mov
aam
add
loopne
fadd
inc
sahf
in
sbbb
add
int3
cmp
lock
jo
aam
fildl
daa
filds
enter
mov
in
mov
cmp
jmp
adc
xchg
jno
inc
add
lahf
adc
add
xchg
imul
or
xor
pop
popf
incl
mov
ljmp
add
or
aad
jae
xor
cmp
rclb
fadd
and
adc
jae
lods
jne
dec
jl
add
dec
adc
in
add
stc
test
xor
es
ss
sub
and
mov
xchg
sbb
in
lock
cltd
pusha
cmp
dec
xor
dec
dec
push
dec
in
fisubl
inc
scas
js
ficoml
mov
insl
inc
push
rcrl
dec
clc
cli
insb
inc
test
add
push
cltd
add
hlt
cli
repnz
stos
pop
and
pop
sbb
xchg
xlat
add
into
xor
loope
cli
call
or
cwtl
aad
stos
adc
pop
mov
xorb
in
bswap
add
mov
jne
iret
lods
pop
xor
add
mov
nop
pop
mov
mov
rcrb
adc
add
es
fcomp
add
lret
iret
call
pusha
das
loopne
xchg
add
push
inc
and
push
rolb
rol
and
movb
pop
out
rcrl
rolb
push
test
negl
dec
and
nop
out
pop
add
or
pusha
and
pusha
shll
push
inc
mov
xchg
scas
scas
sub
imul
cmpb
jno
cmc
incb
inc
fidivs
xor
idivb
mov
mov
or
push
push
roll
push
pop
inc
or
jle
adc
add
jbe
out
shlb
and
pop
push
loopne
xchg
jl
je
out
in
push
mov
add
inc
push
enter
xor
xor
mov
mov
and
mov
imul
jno
and
push
nop
mov
lea
movsb
add
add
rclb
sbb
xor
in
out
addr16
sbb
aaa
adc
fidivs
sbb
cmp
xchg
ret
push
lods
sub
ds
stc
stos
jmp
xlat
mov
test
add
push
lds
pop
ds
repz
sub
inc
add
test
out
and
add
jae
mov
rcl
out
mov
lahf
notb
sarb
incb
notl
add
cltd
push
pop
out
jnp
add
lahf
rolb
out
decl
or
cmp
dec
mov
fistpl
or
jnp
mov
sbb
mov
or
and
daa
pushl
adc
mov
rcll
xchg
adc
or
cmp
shl
adc
jnp
jns
mov
out
ds
push
mov
divl
jmp
lock
xchg
jmp
cmp
outsb
je
jb
outsl
arpl
fs
outsl
jo
in
sbb
sbb
push
dec
imul
push
sbb
jb
gs
xor
cs
insb
push
bound
and
pop
in
pop
popa
je
outsl
outsb
push
inc
inc
add
aas
push
jnp
popa
rdpmc
add
pushl
sub
or
mov
mov
outsl
jb
js
je
jb
gs
cmp
or
outsl
add
jg
push
mov
cli
add
push
gs
push
roll
inc
jne
jb
stos
inc
outsb
cmpsl
pop
imul
dec
xor
xor
out
xlat
movsb
pop
cmp
cmp
sub
dec
and
jns
add
das
das
push
jl
ja
add
push
inc
inc
gs
insl
fmull
dec
outsl
jbe
dec
arpl
fucom
ret
push
push
jo
sub
addr16
dec
jne
out
sbb
xchg
xchg
roll
jb
insb
and
pop
stc
dec
popa
jb
push
inc
pushf
jae
sahf
insb
adc
xchg
jae
cmp
jns
jg
xor
cwtl
inc
push
jne
xor
xor
daa
push
mov
sti
sub
sbb
dec
andb
jne
into
cmp
insb
xchg
pop
dec
inc
push
mov
jbe
push
popa
das
jo
or
cmp
sub
fcomip
mov
push
test
push
sub
mov
adc
inc
mov
dec
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
out
test
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
mov
pop
pop
pop
pop
pop
adc
popa
bound
gs
addr16
insl
outsb
sbb
js
fs
jle
ja
movsb
jnp
jge
jg
add
inc
mov
imul
mov
dec
xchg
xor
jnp
fcoms
insb
jae
out
push
dec
mov
push
jne
inc
dec
adc
cmpsl
inc
jge
lock
in
pop
mov
insl
and
jb
ss
dec
push
push
sbb
or
fimuls
inc
and
or
xor
xor
sbb
cltd
push
scas
xor
insb
imul
mov
mov
je,pn
xor
inc
and
test
xorb
and
add
cld
jo
out
imul
sti
mov
push
insb
xorb
inc
popa
cltd
insl
xlat
sahf
and
daa
mov
jne
pop
fidivs
insl
and
insl
push
xchg
inc
cs
xor
lock
or
dec
rolb
jne
lcall
dec
and
jbe
and
mov
mov
sbb
lock
movsl
add
or
fs
popf
jmp
jbe
je
or
flds
and
push
ds
xor
mov
shlb
push
mov
pop
xchg
sub
movsb
inc
add
sub
arpl
cmp
ss
dec
popa
sub
negb
fiadds
inc
xchg
xchg
pop
pop
push
sub
imul
xor
or
cmp
push
ret
add
sbb
popa
or
sbb
pop
xor
dec
jno
mull
push
push
filds
push
sarl
nop
aaa
xor
mov
fs
xor
hlt
inc
and
cwtl
pop
dec
add
xor
fisubl
outsl
ss
sub
and
fs
xorl
imul
sarb
xor
pop
pop
ficompl
gs
das
mov
mov
lds
test
outsl
push
or
outsl
mov
cmp
cmp
xor
inc
aaa
and
jecxz
insl
in
ljmp
imul
pop
shrl
or
stos
jmp
add
leave
nop
xchg
lds
inc
insl
imul
push
cltd
cmp
xorl
or
insb
popa
and
and
pop
pop
adcb
push
cmp
addr16
popf
mov
xor
fsubrl
pop
pop
pusha
jo
sub
add
sub
push
sub
lret
inc
sub
jne
jo
pop
dec
jmp
mov
pop
cmp
push
and
cmp
mov
mov
cwtl
ja
ds
inc
inc
and
jbe
and
ud0
sahf
pop
fisubl
add
mov
in
push
rol
das
lret
outsl
dec
mov
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
adc
imul
jle
fisttpl
xchg
add
add
xor
in
adc
jae
outsb
js
mov
addr16
dec
pop
add
add
icebp
jne
and
xor
imul
rcrb
add
add
adc
test
add
add
add
add
jns
cmp
pop
or
aaa
ds
push
pop
hlt
and
in
pop
or
pusha
add
js
or
sub
pushl
data16
sbb
addb
cmp
push
xchg
test
add
fisubs
pop
daa
push
cmpb
in
popf
fnstenv
xor
int3
push
lods
pop
into
jo
add
sub
dec
adc
lods
mov
push
stos
push
mov
push
jge
mov
pop
push
movsb
add
jo
sbbl
or
cmp
lea
mov
nop
inc
xchg
xchg
lods
pusha
inc
cs
lret
pop
xchg
push
inc
mov
adc
push
inc
or
test
xchg
pop
pop
add
adc
adc
adc
loope
dec
pop
dec
cmp
test
adcb
pop
cmp
in
and
sub
xchg
scas
xchg
and
adc
and
adc
add
push
inc
stos
ljmp
and
add
cmpsb
sbb
add
push
mov
inc
ja
dec
pop
stos
pusha
incl
adc
fadd
sbb
add
andb
pop
shr
ja
test
addb
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
hlt
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
adcl
decl
nop
push
call
pop
sbb
add
xchg
push
sbb
xor
ja
sbb
push
jae
jb
push
call
dec
stos
inc
sbb
ja
ss
popa
mov
bnd
mov
daa
pop
lea
dec
mov
popa
addr16
outsl
js
push
push
inc
push
push
dec
out
es
dec
and
insb
gs
mov
mov
jne
dec
jl
daa
add
insb
outsl
aas
lret
scas
in
dec
imul
mov
imul
ds
and
inc
jb
test
insb
jns
daa
pop
enter
mov
jo
mov
sbb
lcall
addr16
cmp
outsb
adcb
pushw
mov
inc
movsl
jns
imul
pusha
inc
jbe
push
rorb
jns
sbb
shlb
lret
push
clc
popl
test
clc
mov
pusha
gs
stos
loopne
and
or
test
mov
cwtl
xchg
pop
pop
pop
push
push
jae
insl
mov
jp
aas
cmp
mov
shrb
imul
xor
outsb
gs
mov
data16
xchg
xchg
les
push
push
push
dec
testl
aam
cwtl
repnz
js
mov
cmp
mov
arpl
xchg
mov
imul
mov
fistpll
xchg
inc
outsl
jae
pop
cmp
in
xchg
jg
addr16
shlb
adcl
push
pop
aaa
mov
pusha
push
or
aad
sbb
je
outsl
xchg
or
arpl
daa
xchg
mov
data16
jns
arpl
pop
cmp
cmp
add
idivl
xor
sub
sysexit
dec
jl
jle
dec
fstpt
addr16
sub
sub
push
cmp
dec
in
jp
and
cmp
fst
mov
dec
pop
pop
xor
lods
lret
addr16
push
jb
imul
adc
xor
lret
ret
xor
push
xor
in
add
es
cmpsb
inc
out
jo
sub
fucomip
jo
lahf
sub
mov
inc
add
out
pusha
push
dec
inc
mov
sub
hlt
dec
xchg
jmp
fs
iret
repz
sub
lock
jnp
xor
adc
adc
or
lahf
out
cmp
add
out
lock
imul
jl
test
xor
jl
in
and
cmp
out
iret
pop
loopne
push
push
aam
neg
repz
enter
cmp
repz
iret
lods
test
movsb
push
xchg
mov
cmp
repz
out
lcall
pushf
int
jns
js
cmp
lock
aam
iret
repz
sarb
repz
pusha
inc
and
iret
repz
cld
in
pop
push
lods
andb
out
repz
jmp
push
test
cmpsl
pop
push
cmpsl
and
ds
mov
mov
outsb
push
xor
add
jne
data16
xchg
cmpsl
pop
push
movsl
fdiv
push
push
insb
fs
sbb
jns
jno
je
or
sti
push
ljmp
sub
add
sarb
inc
incl
dec
jae
mov
adc
mov
mov
push
inc
dec
xor
repnz
inc
dec
dec
dec
push
push
push
and
inc
dec
add
dec
dec
inc
add
out
xor
adc
sub
adc
add
fs
call
rclb
mov
decl
test
jnp
inc
loop
mov
ds
jnp
rcrl
adc
clc
lret
sbb
jb
pop
repnz
aas
xchg
jge
arpl
cmp
adc
dec
scas
jp
das
in
sti
adc
fisubrs
and
cmp
dec
repz
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
ljmp
pop
jns
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
lcall
outsl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
ljmp
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
decl
out
fcoml
cmpsl
xor
ds
dec
mov
lods
aas
cld
mov
push
xor
sbbb
or
test
repnz
jmp
mulb
and
es
mov
jle
add
shll
sbb
outsl
xchg
sub
out
scas
insb
push
mov
out
leave
ljmp
jg
test
fucomi
dec
push
push
push
inc
inc
or
outsb
jbe
and
addb
shrb
cs
ljmp
push
into
mov
and
daa
or
inc
add
cs
push
inc
sub
incl
add
add
adc
sbb
add
sub
cmp
pop
pop
cmp
dec
and
ficompl
xor
dec
pop
inc
add
pop
jbe
in
sti
mulb
sbb
ss
push
or
inc
xchg
add
cmp
inc
sub
sbb
pop
push
daa
pop
add
xor
push
push
push
adc
insl
out
sbb
pop
aas
adc
cmp
xor
pop
sub
lods
inc
mov
push
ret
push
inc
dec
adc
ljmp
cmpsb
out
dec
sub
cmp
sub
inc
dec
jmp
jnp
adc
out
inc
inc
push
fildll
pop
cmpsb
sub
dec
pop
sub
pop
adc
sub
and
adc
sub
sbb
sbb
sub
push
sbb
outsl
insl
ret
andb
sbb
pop
scas
mov
mov
pop
aad
daa
add
inc
push
inc
pop
pop
daa
es
add
je
lea
pop
dec
add
fwait
cmp
push
daa
pop
or
pop
pop
mov
xor
fnstsw
add
xor
adc
sbb
sbb
pop
fidivs
pop
sbb
fisubrl
sbb
pusha
imul
and
dec
inc
or
int3
push
sub
outsl
je
sub
inc
adc
xor
adcl
adc
push
add
sub
cmp
mov
cwtl
pop
mov
arpl
cmp
jecxz
jg
es
pop
push
gs
out
mov
push
xor
push
cmp
inc
or
xor
aas
push
dec
inc
dec
fimull
and
sub
adc
or
sub
ja
loope
pop
push
or
mov
cmp
movsl
push
filds
mov
jnp
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
xchg
pop
adc
lock
push
adc
xchg
out
xor
jns
dec
push
jo
mov
jnp
shlb
push
inc
outsl
jg
ja
fidivs
push
inc
add
shlb
mov
andb
mull
add
pop
scas
daa
xor
int3
hlt
adc
xor
adc
push
popa
push
clc
or
pop
and
test
mov
mov
or
push
popa
ret
popf
fildl
mov
push
xor
rorb
and
aaa
jb
outsl
outsb
push
rclb
push
xor
int
jns
jo
mov
adc
cmp
repz
mov
jnp
and
push
jo
rclb
jl
sub
inc
nop
cmp
ds
mov
rcrl
adc
add
sub
adc
pusha
sbb
scas
xchg
cmc
call
daa
xlat
push
add
ret
and
adc
ss
pop
adc
aad
lods
pop
pop
js
inc
jbe
mov
dec
pop
or
push
aaa
inc
mov
adc
mov
push
fisttpll
and
push
out
out
push
adc
pop
xor
and
push
jmp
jb
pop
arpl
inc
and
sbb
xor
or
sbb
mov
jno
insb
push
push
inc
and
shlb
aas
sbb
push
fildll
sub
sub
ds
or
or
adc
pop
in
dec
jno
push
inc
xor
mov
mov
cmp
xor
adc
ja
push
fstl
push
add
xchg
out
pop
daa
push
and
cmp
jecxz
pop
add
mov
mull
or
scas
inc
dec
ret
imul
pop
test
add
fs
daa
pusha
popa
push
cmp
ret
dec
and
jae
daa
dec
or
mov
cs
ss
adc
push
inc
and
push
add
push
cmp
cs
sub
pushf
add
mov
cltd
mov
xor
sub
cwtl
gs
or
daa
and
inc
in
push
xchg
stos
pop
mov
pop
and
adc
cmp
push
mov
sub
inc
scas
adc
or
rcrl
add
outsl
add
xchg
loop
adc
loope
inc
mov
dec
push
add
sbb
and
fistps
enter
xor
xchg
adc
inc
xor
inc
xor
pop
sub
add
out
in
inc
pop
pusha
mov
mov
push
push
mov
pop
sbb
push
out
cmp
test
mov
cltd
into
scas
daa
out
loope
int
xor
in
cmp
mov
mov
add
and
enter
jmp
xor
subl
iret
pop
and
add
mov
cmp
sbb
pop
lcall
add
mov
pop
cli
push
ret
or
hlt
push
or
cmp
cmp
push
mov
cmpsb
adc
push
aas
es
mov
insb
jne
jle
out
addl
or
movsb
sub
stos
inc
mov
pop
shrb
mov
out
lock
in
sbb
add
test
mov
lcall
cwtl
push
jne
or
pop
push
ret
bound
xchg
clc
aaa
inc
cmp
ret
push
mov
xchg
jbe
lea
fs
into
mov
pop
push
jbe
push
add
incb
sbb
push
or
add
jae
mov
add
add
dec
icebp
push
ja
xchg
sub
mov
pop
add
je
and
or
dec
int
shll
inc
adc
loopne
push
adcl
pop
jle
incl
sbb
xor
inc
sbb
pop
pop
sub
xlat
and
push
dec
xor
call
fwait
push
jns
xor
imul
or
out
mov
lods
into
xor
fists
sub
xchg
dec
pop
int3
lcall
mov
add
add
inc
addl
cmp
and
cmp
pop
fimull
fsubrl
add
das
pop
pop
or
or
iret
cmc
xor
push
sub
add
xchg
shrl
rorl
push
imul
in
xor
mov
xlat
mov
mov
data16
xor
cmp
rorb
push
dec
xor
push
inc
dec
test
sub
xchg
das
or
aaa
out
and
and
sbb
jae,pn
in
cmp
add
je
cmp
sbb
int3
add
sub
mov
cmpsl
into
add
sbb
or
mov
xchg
xor
jmp
insb
outsl
jb
bound
es
push
out
addr16
and
movsl
arpl
loopne
push
pop
andb
aas
jb
push
sub
fsubs
outsb
das
mov
and
stos
ret
pop
add
add
push
inc
inc
fmuls
push
xor
inc
mov
inc
jl
push
andb
mov
mov
inc
add
xor
sub
jbe
xor
pop
mov
dec
dec
jg
and
dec
push
adc
push
cmp
push
mov
push
inc
mov
or
inc
inc
and
sub
sbb
mov
push
mov
and
jb
sbb
insb
add
aas
sub
repnz
mov
insb
pop
sbb
jle
push
cs
pop
pop
subl
pop
mov
ljmp
cmp
adc
adc
or
cmp
inc
leave
push
and
shll
jbe
sbb
cmp
inc
daa
inc
xor
pop
fidivrl
imul
inc
into
add
lcall
jnp
roll
inc
adc
cli
push
add
push
inc
fsubrl
mov
mov
inc
sbb
push
adc
xchg
add
sub
or
adc
add
cmp
push
jl
or
mov
out
adc
mov
dec
xor
push
scas
xor
daa
popf
sub
push
sbb
xchg
push
xchg
sbb
bound
add
lahf
shlb
sub
sbb
mov
insb
fidivs
push
jo
repz
mov
daa
mov
pop
std
daa
mov
push
push
hlt
mov
sub
lret
test
push
xor
in
push
jo
cmp
stos
jo
ds
pop
dec
cmp
cmp
add
enter
outsb
pop
xchg
mov
or
pop
cmp
dec
jle
pop
push
dec
enter
pop
sub
mov
out
xor
sbb
jo
test
jo
mov
loop
push
ss
js
jnp
mov
inc
xor
jg
cmp
cmp
push
das
enter
mov
and
push
add
pop
adc
cmp
or
sbb
xchg
fmuls
push
pop
dec
or
or
inc
mov
xor
push
rcrb
inc
and
xor
xchg
jo
pop
cmpsl
test
adc
mov
sbb
iret
cmpl
les
testb
xchg
pop
jno
and
inc
daa
es
xchg
dec
sub
pop
cltd
inc
xor
mov
dec
sbb
mov
mov
push
rol
aaa
mov
push
and
lahf
sub
xchg
aaa
adc
and
popa
inc
daa
imul
adc
adc
push
sbb
dec
insl
into
mov
and
add
mov
fsubs
pop
sub
adc
test
push
mov
add
dec
xor
dec
push
push
pop
xor
aaa
lods
in
dec
sub
add
cmp
xor
insb
or
mov
cmp
xchg
aas
shll
ficompl
sub
idivb
or
add
pop
das
xor
and
sub
inc
add
sbb
sub
adc
add
fistps
dec
das
sbb
inc
pop
sub
pop
mov
daa
sub
data16
test
add
sbb
pop
pop
or
out
cmpsb
inc
hlt
lds
adc
push
and
or
pop
inc
shrb
ret
and
push
outsl
sti
mov
add
adc
xor
adc
mov
sbb
inc
and
adcl
jae
sbb
inc
push
imul
cs
xchg
addl
cmp
push
lea
pop
imul
add
clc
pop
add
pop
sub
push
out
sbb
and
sub
xor
jecxz
sub
push
andl
inc
pop
movsl
pop
aaa
adc
jge
cmpl
sbb
adc
adc
and
mov
ss
sbb
inc
jo
push
arpl
mov
sbb
fwait
aad
and
and
cmp
mov
in
insl
and
dec
pop
or
pop
inc
repz
and
adc
aaa
xorl
cwtl
xor
jo
sub
movsb
push
loop
adc
das
out
movsb
jmp
adc
dec
lods
rorl
pop
cli
aas
loope
loop
cmp
das
pop
sbb
sbb
jmp
add
or
sub
filds
pushf
pop
dec
jg
or
jg
lock
xor
dec
ja
xor
or
fidivrl
adc
or
xchg
mov
outsl
test
daa
push
jmp
imul
xor
and
add
test
cs
inc
dec
inc
push
loope
icebp
inc
or
dec
and
pop
sbb
out
fisttpl
pop
xor
loop
push
addr16
dec
pop
mov
xchg
pop
pop
sbb
push
dec
inc
xor
arpl
cmp
inc
adc
call
adc
pop
jns
inc
clc
out
sbb
push
dec
sub
dec
inc
or
dec
iret
aas
aam
dec
insb
and
or
sbb
inc
fadds
icebp
scas
fistl
sub
mov
xchg
add
sub
aaa
mov
lods
mov
es
adc
sub
push
and
cmpsb
iretw
ja
fs
gs
gs
sbb
add
push
mov
fs
inc
add
pop
shlb
add
pop
cmpsl
add
das
push
fsubrs
mov
hlt
lods
dec
inc
cld
outsb
sbb
cmp
jecxz
adc
cmp
repz
and
cmp
repz
andl
sahf
out
add
or
xchg
int
xor
dec
sbb
jmp
sbb
mov
xchg
adc
adc
mov
insb
jns
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
sbb
fldcw
sub
add
or
fwait
dec
mov
adc
pop
add
mov
insb
adc
push
push
dec
verw
int
mov
and
das
imul
incl
inc
cmpsl
inc
jb
push
mov
ds
xor
mov
rolb
ror
jge
jo
ds
into
cmp
fldcw
iret
inc
rcl
push
nop
mov
mov
loopne
dec
fbld
inc
mov
negb
jmp
inc
cmp
mul
pop
add
inc
test
dec
push
ds
push
aaa
shlb
mov
mov
lcall
push
and
mov
add
adc
mov
mov
lods
pop
out
decl
out
dec
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
jle
sub
mov
sbb
mov
ds
pop
sbb
cmpsb
add
jle
jo
fsubs
das
addb
xor
dec
xchg
movl
mov
cmp
pop
in
pop
cmp
adc
jmp
aaa
aaa
mov
and
lock
pop
sbb
fisttps
sbb
hlt
rolb
pop
push
and
jb
mov
arpl
outsl
push
and
fidivs
dec
clc
adc
pop
fsubrs
enter
dec
dec
mov
daa
iret
in
cltd
cwtl
xor
mov
jae
pushf
cmp
push
leave
leave
dec
dec
cmp
add
sub
insb
inc
js
jae
in
scas
cmp
pop
add
mov
dec
pop
int3
repnz
pop
or
or
clc
push
push
dec
lcall
test
ss
cmp
xor
sub
adc
inc
sbb
sub
xor
inc
push
xor
lds
adc
mov
cmpsl
or
jnp
insb
push
outsb
add
addb
dec
mov
sub
les
das
js
dec
mov
mov
jb
inc
arpl
dec
jp
push
shll
pop
push
jb
jo
cld
jg
arpl
bound
je
bound
imul
psraw
adc
mov
jecxz
fbld
or
fsubl
out
test
sub
mov
outsb
pusha
jecxz
in
inc
mov
xlat
inc
movd
outsb
movsl
inc
dec
es
push
cmp
or
out
mov
pop
and
aaa
sbb
push
pop
fiadds
ret
daa
sbb
testl
outsl
fbstp
push
and
dec
sbb
daa
out
loopne
fidivrs
insb
aam
loope
sbbb
mov
push
aaa
ret
or
cmp
jno
mov
inc
pop
xor
pop
jns
adc
aas
sbb
push
or
add
scas
add
rcrl
adc
inc
imul
mov
add
hlt
pop
adc
in
mov
mov
out
add
testb
arpl
add
pop
jecxz
or
cmp
and
loope
pop
in
out
div
mov
xor
clc
push
inc
jns
pop
int
inc
imul
sahf
pop
js
insl
bound
push
aas
in
repz
push
push
push
pop
cmp
inc
ja
fisubs
in
stos
sub
nop
mov
pop
in
push
ds
push
push
idivb
sbb
push
es
cmpsb
mov
jns
cmpsl
push
aad
cs
imul
inc
xchg
pop
test
loope
outsb
in
jns
mov
mov
and
cmp
cmpsl
divl
dec
inc
push
cmpsl
fldcw
push
lahf
pop
push
sbb
aaa
mov
mov
mov
rclb
ja
sahf
adc
fiadds
out
test
sahf
out
xor
out
or
jns
xor
pop
and
inc
pop
pop
fistps
stc
xor
out
sbb
sahf
push
adc
mov
repz
adc
pop
in
pop
idivb
out
jne
mov
push
dec
push
pop
lcall
scas
sbb
cmpsb
sbb
mov
rcrb
push
lock
add
stc
cmp
xor
sub
ret
mov
nop
push
cld
inc
test
jl
repz
adc
pop
mov
and
xlat
call
push
sti
sahf
cmpsl
stc
inc
push
dec
repz
or
dec
in
push
push
sbb
sahf
xor
or
and
fs
push
add
push
jnp
enter
dec
cwtl
inc
xorl
iret
repz
fsts
or
in
cmpsl
stc
cmp
sbb
cmp
mov
lods
repnz
push
cld
dec
adc
int
test
dec
imul
in
into
adc
push
repz
out
scas
iret
lock
iret
repz
xor
mov
insb
and
push
cmp
jo
iret
repz
cmpsl
push
iret
repz
push
jle
lock
inc
cmp
xchg
aad
pop
dec
sbb
scas
sub
cld
add
cs
adc
stc
add
adc
jg
push
push
mov
xor
adc
mov
lds
mov
scas
int
mov
jbe,pn
aas
leave
loop
and
push
pop
mov
mov
loopne
mov
dec
sti
das
jbe
pop
int3
push
and
pop
sbb
enter
das
in
sub
xchg
inc
repnz
iret
pusha
or
daa
or
add
push
push
cmpsb
add
add
outsl
pop
scas
or
pop
lret
dec
push
mov
cmp
dec
popa
lahf
aas
jns
inc
faddl
stos
in
imull
sbb
or
pop
loope
addr16
push
mov
jnp
dec
mov
jae
fisubl
mov
and
mov
fidivrs
out
add
dec
lcall
je
push
ljmp
cmpsb
dec
add
lods
xor
mov
pop
push
aam
pop
push
dec
pop
je
in
ffree
mov
aaa
push
fisttps
jp
das
add
sbb
repnz
gs
sarl
outsb
push
inc
imul
xchg
ret
dec
test
or
mov
ja
mov
pop
sub
add
add
in
fstps
pop
xchg
cmp
pop
cmp
in
rorb
adc
cwtl
es
insl
jo
es
insb
je
push
addr16
jo
jae
es
in
cmp
xchg
outsl
and
cmpb
sub
sub
push
cmpsb
mov
aad
push
or
cmp
xor
xor
xor
fwait
jge
xor
xor
xor
xor
cmp
push
add
add
pop
pop
or
pop
or
into
pop
sti
sub
sub
dec
outsb
add
bound
xor
add
inc
adc
add
mov
dec
mov
cmp
imul
sub
cmp
push
cmp
or
daa
pop
ret
add
sub
adc
das
or
push
mov
cmpsl
inc
pop
and
xchg
imul
outsl
outsb
aas
push
negb
push
sbb
inc
sarb
and
xchg
lock
ret
pop
push
inc
cmp
sbb
xchg
into
inc
adc
out
pop
ret
sahf
loop
adc
pop
sbb
nop
mov
mov
mov
int3
cmpsw
sub
int3
sbbl
daa
push
pop
dec
test
call
testl
mov
add
or
jge
cmp
push
push
push
jbe
or
testl
sbb
dec
fldl
add
ret
and
cmpsb
pop
cmp
pop
xchg
das
xor
add
mov
sbb
pop
movsb
das
sub
inc
sbb
push
sbb
fcoms
dec
and
out
sbb
xor
fcoms
sahf
loopne
inc
aaa
and
mov
daa
jecxz
xor
adc
jno
hlt
pop
inc
adc
push
mov
sbb
das
sbb
and
iret
mov
push
scas
pushl
ficompl
add
insl
and
mov
stos
add
shlb
dec
daa
lods
daa
jge
adc
push
das
divl
jle
rclb
adc
mov
xor
or
or
pop
jno
mov
mov
imul
popa
daa
pop
sub
add
push
das
dec
pop
and
dec
add
test
inc
pop
push
repnz
xor
movsb
arpl
icebp
mov
or
inc
mov
aaa
add
das
mov
outsl
pop
pop
mov
pop
cltd
daa
sbb
xchg
outsb
ficoml
orb
fmulp
pop
addr16
stos
adc
jg
jno
sbbb
mov
or
arpl
add
arpl
pop
shrl
insl
and
mov
subl
mov
shll
add
outsl
lret
into
inc
dec
jecxz
xor
fs
sbb
push
xor
jmp
mov
add
sub
mov
and
push
pop
adc
out
and
add
inc
mov
dec
js
fisttpl
jo
outsb
ja
clc
adc
shll
fwait
lret
shll
loopne
stc
orb
in
sub
dec
push
add
loop
or
sbb
inc
inc
sbb
or
sahf
loopne
push
das
das
mov
lods
jo
xor
pusha
dec
xor
push
test
aam
pop
ja
notl
xor
or
das
lahf
or
inc
fsubl
or
pop
sub
dec
jnp
ds
sub
push
mov
sbb
xchg
cmp
add
pop
jb
sbb
cmp
nop
fisttpll
ret
and
cmp
push
in
aam
add
ret
scas
xor
adc
je
push
push
push
pop
dec
test
and
xchg
sub
popa
clc
mov
pusha
jg
outsl
push
mov
rcrb
das
xchg
dec
sub
xchg
mov
adc
movsb
pop
ret
and
insl
push
xor
and
mov
daa
lock
xor
das
and
pushf
or
adc
adc
daa
les
and
gs
sub
fcmovbe
mov
inc
push
and
popf
or
or
adc
mov
pop
push
sub
scas
adc
pop
or
push
mov
push
add
mov
push
sbb
lret
rcrl
mov
pop
push
push
inc
add
add
push
push
jnp
fs
les
sbb
xor
dec
popa
or
push
mov
int3
dec
lods
pusha
push
adc
fcoms
fs
pushf
add
push
xor
cltd
and
push
push
enter
push
cwtl
pop
or
adc
es
data16
push
inc
lret
dec
popa
lock
dec
nop
jecxz
or
inc
or
and
imul
sbb
test
mov
scas
mulb
push
das
push
mov
mul
dec
pop
mov
cs
push
pop
inc
or
jle
dec
ja
pop
pop
inc
push
std
or
call
cmp
in
pop
aad
inc
in
je
idivl
cmp
pop
pop
dec
pop
jecxz
fildll
pop
jmp
pop
xor
cmp
xchg
sub
inc
xchg
xor
mov
fsubl
adc
in
push
aaa
push
pop
cmpsl
jmp
inc
push
lahf
sbb
aas
jge
xor
rcpps
imul
sub
inc
push
mov
mov
roll
add
rorb
push
dec
pop
sbb
pop
inc
lahf
test
jo
lcall
les
fsubl
mov
xor
add
lock
push
pop
dec
adc
test
pop
adc
imul
adc
inc
dec
pop
add
inc
inc
add
push
mov
dec
add
dec
and
adc
dec
pop
xorb
or
and
cmpsb
incl
or
sbb
xor
dec
add
push
pop
sbb
dec
sub
call
push
push
dec
adc
aas
pop
xor
inc
sbb
pop
xor
inc
push
and
and
inc
xor
pop
in
dec
pop
dec
and
xor
shr
lcall
out
adc
dec
sub
xor
add
inc
mov
std
cmp
incl
dec
and
or
adc
push
xor
sbb
sub
pushl
add
dec
pop
pop
push
dec
dec
pop
ss
sub
das
sbb
cmp
pop
sub
sub
inc
movlps
push
inc
adc
sbb
and
push
and
sub
les
mov
cmpb
or
adc
and
dec
ficoms
mov
pop
push
jne
hlt
mov
mov
sbb
inc
aas
adc
or
subb
add
loop
add
or
or
test
les
lock
xor
out
aas
dec
js
push
cmp
subb
sbb
stos
adc
xchg
inc
and
xchg
push
push
dec
cmpsb
nop
clc
cs
push
outsl
inc
mov
or
and
mov
dec
insb
jne
adc
push
lret
add
sbb
inc
pop
sub
push
xlat
test
xor
inc
jb,pt
cld
jmp
push
push
pop
ljmp
push
inc
push
dec
inc
dec
push
dec
call
add
add
inc
sub
mov
xchg
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
jg
insb
std
sbb
cwtl
stos
pop
fsubs
and
jge
decl
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
cmp
and
sub
sub
fsubrl
stc
jbe
lock
call
cwtl
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
incl
lcall
adc
or
cs
insl
sub
cmp
jae
gs
lcall
leave
ret
sub
xchg
mov
data16
mov
call
xchg
shll
cltd
test
push
push
shll
dec
daa
mov
std
mov
sbb
dec
stos
fmuls
lret
rep
cs
arpl
cmc
adc
enter
mov
mov
movsb
mull
jno
addr16
cli
ljmp
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
dec
aam
cmpb
mov
decl
data16
or
jae
jne
dec
and
sub
jb
sub
dec
ljmp
pop
imul
inc
jbe
xor
jnp
and
xor
xor
pop
fs
cmp
push
cld
jmp
inc
je
and
pop
or
push
jno
ds
inc
pop
inc
and
cmp
cmp
push
outsl
inc
and
xor
pop
loope
clc
out
jg
push
dec
inc
inc
dec
inc
cmp
push
sub
insl
dec
xchg
sub
jnp
or
push
cmp
aas
addr16
mov
push
inc
addb
sub
push
inc
das
out
mov
mov
daa
pop
daa
and
mov
fisttpl
push
dec
aas
dec
and
out
dec
cmp
and
inc
mov
jns
sub
push
aaa
push
xor
fisubl
xor
xor
popf
in
inc
push
xor
xor
and
fstps
jbe
aaa
inc
push
inc
cs
inc
cmc
mov
scas
ss
cmovb
pop
ss
lahf
ss
sub
test
add
mov
ret
imul
outsl
aas
insb
sbb
adc
inc
dec
lret
mov
outsb
sub
ss
mov
xlat
adc
sub
mov
movsb
scas
bound
into
jle
adc
cmp
aam
mov
or
int
fsubrl
ja
fldt
out
nop
arpl
xchg
roll
faddp
or
jo
out
daa
sbb
fs
push
mov
xchg
popa
or
push
pop
push
push
sub
mov
mov
daa
sahf
pop
push
out
xor
xor
sub
daa
sbb
or
push
sbbb
mov
adc
les
pop
jp
xchg
cmc
aam
call
cmpsl
aas
lods
and
push
mov
test
add
mov
jp
pop
mov
jo
pop
insb
push
sbb
stos
xorl
or
sahf
and
mov
or
pop
mov
or
pop
cmp
scas
pop
mov
mov
leave
andb
lds
lret
rcll
jge
pop
pop
cmp
mov
add
dec
mov
adc
or
pop
add
aaa
add
mov
shl
push
fidivl
mov
push
jb
jg
fldcw
cmpsl
dec
pop
or
mov
sbb
or
add
inc
sbb
icebp
sbb
sub
add
sahf
and
mov
enter
pop
inc
adc
jne
adc
test
adc
add
stos
sbb
pop
outsb
outsb
push
pop
mov
je
xor
js
xor
test
jbe
mov
jo
into
cmp
je
pop
out
or
outsb
and
sub
sbb
inc
aad
cmp
xor
insl
loop
adc
pop
push
lea
out
mov
fwait
jno
jp
outsl
insb
loop
popa
je
fs
insl
js
cmpl
push
and
adc
testb
aas
pop
or
pop
push
gs
or
and
dec
and
and
sbb
pop
adc
scas
push
insl
inc
aas
sub
sbb
rol
bound
pop
dec
lods
pop
mov
gs
add
add
cmc
test
and
push
fsubs
push
cmp
push
adc
out
shlb
divb
aas
inc
jnp
loope
mov
das
pop
inc
stos
add
movsb
adc
or
mov
ss
mov
jo
push
push
faddp
inc
inc
sbb
lret
rclb
pop
ja
cld
sbb
and
aas
sub
push
pop
nop
sub
inc
aaa
push
add
sbb
sub
dec
popa
dec
or
push
xor
push
outsb
ja
jb
pop
mov
cld
add
jne
jp
lea
outsl
adc
pusha
push
sbb
push
and
das
test
imul
push
bound
dec
ds
push
test
or
testb
pop
das
pop
sub
fiadds
adc
sbb
mov
and
call
fcoms
sub
or
add
fs
jo
xor
nop
mov
stos
or
stos
push
outsl
imul
sub
stos
push
adc
test
dec
lret
xlat
xchg
dec
xor
jmp
rolb
or
pop
or
scas
aam
and
push
inc
arpl
and
and
mov
and
pop
in
adc
cli
test
aam
sub
dec
ja
and
mov
sbb
cmp
andl
pop
inc
or
sbb
push
ja
cmpl
dec
lcall
and
or
std
rcll
xor
fstpl
inc
ja
imul
pop
sub
dec
xor
mov
into
lds
add
imul
dec
and
jnp
bndldx
or
aam
shlb
test
test
adc
es
add
xlat
ficomps
adc
lods
xchg
jbe
xchg
jbe
pop
pop
pop
or
mov
or
daa
fcomps
dec
xchg
enter
dec
pop
movsl
mov
pop
and
je
insb
daa
imul
aad
mov
inc
xor
pop
std
push
adc
pusha
mov
add
insb
and
dec
push
rorb
loopne
sub
aas
dec
cld
retw
sub
sub
inc
dec
mov
add
jo
out
inc
and
inc
add
push
sbb
in
or
add
cmp
add
fstl
dec
push
aaa
adc
gs
add
adc
pop
gs
mov
std
movsl
mov
dec
and
addr16
popa
pop
pop
xor
cli
outsl
dec
outsl
sbb
imul
cmpsb
punpckhwd
ss
lea
push
je
scas
and
mov
pop
scas
jl
cmp
rcll
cltd
cli
pop
ds
inc
pop
push
dec
inc
dec
inc
push
pop
test
xlat
fisttpl
gs
icebp
daa
adc
es
inc
xchg
gs
pop
or
push
mov
jb
add
inc
bound
and
test
dec
mov
inc
lcall
push
fldenv
jle
or
jle
lahf
inc
jl
add
mov
cltd
add
dec
or
push
or
pop
xorl
jns
jb
jnp
inc
pop
push
adc
push
pushl
inc
add
push
xchg
or
fildl
dec
insb
sbb
jae
ja
xor
pop
addr16
loopne
jl
push
iret
cmp
js
inc
pop
fisubrs
outsl
adc
jns,pt
out
outsl
cs
pusha
add
mov
pop
push
out
out
insb
ja
pop
cmp
dec
xlat
les
outsb
clc
sbb
dec
or
mov
or
lods
cmpl
xchg
xchg
mov
jle
push
pop
daa
mov
sbb
dec
dec
dec
shll
pop
int3
cmc
dec
add
jge
test
and
adc
mov
add
nop
adc
xor
mov
add
or
bound
jne
or
lods
add
cmc
pop
pop
sarb
push
pop
loopnew
add
cmp
movsl
nop
sbb
jbe
stos
arpl
stos
loopne
or
pop
adc
inc
push
inc
outsb
test
insb
adc
outsl
and
or
pop
xlat
das
loopne
or
fimull
scas
push
icebp
dec
adc
push
rorl
fiaddl
xchg
aas
xlat
outsl
jbe
xor
jg
outsl
mov
and
push
push
ror
inc
loopne
xor
jbe
and
into
cmp
mov
call
das
add
outsb
jg
out
sub
inc
outsw
insl
pop
xor
dec
jnp
iret
scas
and
xor
push
mov
jnp
jge
dec
dec
dec
inc
mov
outsb
xlat
setbe
mov
push
out
gs
fwait
insb
outsl
imul
push
mov
insb
push
hlt
mov
test
in
and
in
sub
ljmp
sbb
orb
out
testb
xadd
sbb
inc
popl
out
insb
mov
inc
mov
lock
adc
cmpb
aas
lods
fbstp
rorb
pop
inc
mov
cmp
push
lods
inc
inc
scas
cmpsl
addb
rcrl
add
aaa
daa
idivb
add
add
je
inc
mov
cmp
ds
data16
sbb
popa
addr16
imul
dec
and
daa
add
dec
sahf
xchg
negl
fcoms
mov
iret
adc
ficompl
cmp
inc
lahf
add
iret
lds
push
jg
push
daa
aas
out
dec
scas
fs
aaa
pusha
sbb
dec
inc
dec
scas
in
inc
cmp
dec
scas
in
xor
in
scas
sub
out
adc
dec
add
rcll
sbb
adc
inc
and
or
cmpsl
fnstcw
pusha
push
mov
repz
jnp
sbb
cld
dec
test
out
sahf
out
dec
xchg
js
inc
out
repz
in
dec
rolb
or
dec
repz
repz
dec
dec
push
jl
stc
cmp
pusha
inc
sub
xor
js
adc
inc
out
dec
inc
sbb
xchg
sub
sahf
es
js
adc
in
ret
pop
dec
out
dec
fisttpl
test
sbb
dec
fadds
dec
lcall
loop
aaa
in
add
sti
sahf
out
nop
rcrb
out
pop
inc
mov
add
mov
jg
jg
adc
and
xor
sbb
xchg
dec
repnz
push
mov
insb
pop
fs
dec
inc
enter
mov
das
cwtl
dec
mov
push
mov
lods
fs
or
add
in
xchg
inc
in
mov
and
or
dec
and
es
dec
in
dec
cmp
testb
outsl
cmp
push
mov
add
xor
scas
push
adcb
adc
xchg
enter
xor
xor
cmp
cwtl
dec
test
out
dec
enter
push
mov
jl
pop
adc
sbb
ret
push
sbb
add
dec
xchg
xor
xor
dec
push
lods
fs
fisubl
fildll
testb
sub
and
test
push
rolb
push
dec
loopne
adc
das
fs
sbb
int3
dec
shl
aaa
fcompl
jo
hlt
push
xor
push
lahf
sub
xchg
scas
and
add
pusha
dec
ja
stos
loope
jg
int3
bound
scas
in
sub
out
out
mov
fsubp
dec
xchg
fbld
enter
outsl
and
inc
xor
sub
push
adc
outsl
and
test
jo
pop
and
mov
add
pushf
outsl
out
mov
add
cmpsl
add
sbb
xlat
cmpsl
lcall
aaa
push
lock
repnz
in
sbb
pop
insb
push
je
pop
leave
mov
add
mulb
push
mov
mov
mov
push
mov
push
jo
push
jg
push
cmp
dec
lcall
push
xchg
xchg
lcall
sub
sbb
add
loop
cwtl
faddp
sbb
arpl
les
push
divl
sbb
enter
cmp
popa
push
push
outsl
jg
cmpxchg
pop
sub
jge
je
daa
testl
lahf
data16
insb
push
jl
pusha
enter
fst
dec
xor
adc
push
out
or
mov
dec
cmpsl
bound
inc
sbbb
xlat
mov
xchg
and
fcmove
pop
xlat
and
add
xlat
dec
shl
or
cwtl
push
xchg
sbb
loopne
jo
dec
push
lahf
insb
and
inc
jno
pop
mov
pop
les
xor
add
inc
mov
and
add
aam
add
loopne
push
scas
js
cs
rorb
xor
xor
aaa
leave
adc
hlt
outsl
add
daa
cmp
and
pusha
cmp
out
outsl
mov
add
pop
leave
jae
jg
add
int3
ja
mov
insl
fsub
push
clc
jg
addr16
adc
add
push
xchg
or
dec
cmp
push
add
sub
das
and
and
push
jb
jge
js
das
outsl
add
ss
xor
pushf
sub
call
adc
push
cmp
and
aaa
add
movsb
or
leave
test
js
insb
insl
pusha
pop
iret
movsb
xlat
jo
push
xor
sahf
iret
in
xor
daa
and
xor
jb
mov
daa
or
pop
shlb
xchg
inc
sarl
out
loope
mov
fcompl
shlb
xor
les
xchg
stos
or
dec
or
push
add
or
dec
jno
scas
or
and
or
daa
in
cld
push
or
sub
movsb
push
pop
outsl
add
dec
pop
or
dec
sahf
andl
add
xchg
dec
adc
repz
loopne
clc
pop
add
xor
push
pop
pop
scas
add
sbb
push
popl
leave
push
lock
clc
add
mov
cwtl
lahf
addr16
mov
or
jbe
xchg
push
xor
out
daa
in
scas
in
add
es
sub
pop
cmovl
xorb
das
sub
xchg
pop
mov
addr16
xchg
out
add
mov
lcall
sarb
push
mov
dec
and
fsubl
fwait
cmp
and
inc
les
pop
dec
ja
pop
pop
outsl
xchg
mov
xchg
test
enter
pushfw
xlat
mov
cmc
loopne
filds
pop
out
iret
lds
sub
xbegin
fistpl
addr16
out
adc
mov
mov
pop
push
fwait
sbbb
int
in
outsl
outsl
mov
push
xor
add
out
xor
inc
mov
push
sahf
out
sahf
inc
jl
ret
cmp
push
cmp
iret
cmp
adc
mov
lahf
out
add
push
push
pop
lcall
pop
pop
inc
jge
out
jo
repnz
mov
fisubrs
push
bound
int
jns
pop
pop
andb
repz
test
xor
out
addr16
ret
inc
sti
cmp
repz
js
lret
sub
lcall
fisubrs
bound
lahf
out
mov
push
dec
repz
mov
test
loope
gs
cmp
repz
pop
data16
inc
jbe
lcall
int
stc
cmp
repz
imul
xchg
jl
iret
out
imul
xor
out
insl
fstps
outsb
jnp
repz
out
outsl
dec
mov
jl
dec
popa
add
sub
cmpsl
stc
cmp
js
into
push
jae
iret
repz
lret
add
les
repz
jne
roll
inc
insb
sahf
out
cmp
out
ja
xchg
inc
js
jns
loop
iret
sarl
sar
jnp
ds
repz
cmp
cmp
jl
out
jg
enter
xor
cmpsl
flds
jg
jnp
xorb
dec
xor
lcall
dec
cmpb
xchg
push
sbb
lcall
and
mov
sarl
dec
push
mov
jl
cmpsl
stc
or
outsl
mov
ds
rorl
roll
lea
int
fucom
mov
enter
iret
shrl
nop
sub
out
lcall
pop
sahf
cmpsl
stc
cmp
xor
sarl
cmp
add
jns
mov
xchg
xchg
aas
lcall
out
fwait
rcrb
pushf
push
sahf
test
iret
sarl
shl
mov
jns
mov
clc
sbb
sarl
mov
adc
outsl
cmp
out
mov
scas
jl
out
stc
xor
ja
dec
stos
jns
iret
rcll
jl
cmp
out
adc
out
jl
mov
mov
rorb
mov
adc
insb
ss
mov
mov
mov
mov
dec
mov
mov
mov
in
add
bswap
inc
jnp
pop
push
stc
inc
aas
shll
in
pop
sarb
sti
int3
pop
fidivrl
ds
sti
sahf
dec
dec
and
jg
inc
out
add
pop
xchg
or
pop
bound
push
test
daa
out
fcmove
dec
jg
inc
aaa
inc
mov
insb
jns
xchg
adc
je
pop
jb
movsl
push
ss
and
das
inc
lds
mulb
int3
jg
fimull
pop
aas
jo
das
jbe
mov
pop
jg
dec
xor
mov
and
push
jns
fistpl
or
aas
fimull
xchg
xchg
aas
xlat
pushf
bound
int
mov
repnz
iret
rcrb
adc
mov
mov
adc
mov
aas
mov
movsb
nop
pop
mov
movsb
or
xchg
fnstsw
fisttpl
cmp
mov
mov
decl
divl
push
idivl
enter
pop
sbb
int3
in
je
pop
loop
pop
scas
iret
push
sub
aas
cwtl
test
pushf
loop
mov
pushf
cmp
subps
js
lahf
mov
or
inc
nop
jp
jns
push
push
add
out
add
int
negl
aam
clc
add
xor
les
in
jns
pop
mov
xchg
incl
addr16
xchg
and
sbb
cmp
adc
fmulp
and
pop
repnz
out
xor
inc
lods
in
xchg
movsb
xchg
mov
xlat
push
jno
xchg
mov
sti
push
inc
sbb
mov
xchg
xchg
aaa
out
push
sbb
push
sub
add
sahf
pop
das
push
pop
push
xchg
cmp
mov
mov
jl
push
and
sarb
cmpsl
movsl
in
out
cmp
daa
xchg
sbb
popf
cmp
jb
xorb
xchg
sub
enter
in
cs
and
add
pop
pop
push
cmpsl
mov
insb
scas
cmp
mov
jb
inc
dec
iret
mov
arpl
enter
inc
push
cmc
inc
outsl
leave
xor
addb
sbb
add
test
sub
mov
ljmp
imul
inc
test
imul
adc
xchg
lock
adc
in
add
push
jns
aaa
jb
push
dec
push
add
out
sahf
out
add
icebp
jns
pop
orl
push
fisttps
dec
sahf
and
dec
insb
xchg
inc
and
repnz
insb
mov
pushf
xchg
adc
leave
add
in
insl
xor
in
lds
into
cmc
insb
push
mov
insl
xchg
inc
sbb
push
inc
sbb
jb
pop
pop
dec
pop
push
pop
pop
xchg
pop
leave
jae
int3
test
xchg
popf
cmpsb
add
add
push
adc
jb
xor
fsubp
out
xchg
pop
jb
idiv
fs
mov
and
pop
xor
pop
xor
xchg
and
dec
pop
mov
insb
pcmpeqb
fucomi
test
mov
pop
outsb
pop
leave
adc
mov
and
out
mov
pcmpgtd
jo
mov
pop
cvtps2pd
add
xchg
aas
pop
loopne
xor
iret
sbb
inc
das
and
jo
jo
jo
sbb
mov
mov
popf
nop
inc
mov
xchg
dec
jo
scas
pop
stos
adc
and
mulb
lock
xchg
pushf
and
sub
fdivrl
push
jno
cmp
daa
imul
adc
mov
xchg
pop
in
push
adc
mov
adc
dec
repnz
sahf
test
push
jb
jb
aam
inc
fs
xchg
out
mov
clts
pop
push
pop
mov
leave
dec
pushf
jb
pop
xchg
inc
mov
enter
pop
push
xchg
cmpsl
in
leave
call
jae
rcr
and
push
daa
dec
out
cmp
add
xchg
lahf
jo
pop
iret
fcomps
out
xchg
xchg
xchg
xchg
pop
stc
pop
add
minps
out
xchg
xchg
pop
and
cmp
inc
or
pop
jns
out
or
out
sahf
out
adc
jns
adc
jns
out
adc
xor
sahf
out
sbb
sbb
adc
sbb
fisubrl
lods
je
push
leave
dec
cs
fcoms
cmp
les
inc
pop
dec
int
stc
fcomp
inc
push
fldl
daa
fdivrl
jbe
add
push
mov
push
push
js
jg
pushf
in
hlt
pop
les
lea
pop
pop
pop
pop
daa
push
xchg
js
stc
or
das
pop
int3
movb
lea
aas
add
push
and
incl
leave
and
pop
pop
jbe
or
xchg
imul
lahf
jo
cmp
mov
in
popf
faddl
filds
hlt
popf
in
mov
pusha
and
ja
xchg
adc
pop
je
fsubr
into
mov
fs
test
std
push
int3
mov
fcoml
in
adc
rclb
jbe
cmp
lock
enter
popa
or
adc
fsts
and
pop
je
jae
dec
push
push
add
xor
and
aaa
inc
push
leave
pop
sub
inc
cmp
pop
leave
lret
sub
jns
popa
pop
mov
addr16
iret
lret
leave
jae
repnz
pop
leave
mov
out
bound
in
in
ss
pop
push
ljmp
xchg
and
inc
or
bnd
and
in
js
push
pop
enter
push
sarb
insl
xchg
push
in
jb
jns
aad
jnp
arpl
xchg
dec
inc
push
arpl
fisubl
mov
xchg
movsb
iret
push
push
inc
dec
jb
loopne
sarb
jns
push
lock
mul
jnp
push
fs
movhps
fs
das
xchg
add
fs
in
das
xchg
nop
jne
xchg
jge
jbe
inc
fwait
mov
addr16
leave
inc
mov
repnz
and
inc
repnz
inc
push
jge
cmp
add
jns
push
gs
gs
cs
out
jge
add
mov
out
sub
out
push
inc
push
rorb
repnz
cmp
mov
jle
adc
adc
jle
popf
bnd
and
jle
scas
add
cmpsl
loopne
pop
data16
cmp
dec
scas
dec
xchg
push
fs
push
insb
xchg
jae
mov
stc
sbb
outsl
data16
out
sbb
jns
jmpw
addr16
jns
pop
addr16
addr16
addr16
addr16
jns
aaa
addr16
addr16
addr16
addr16
jns
push
addr16
addr16
pop
daa
daa
daa
fisttpll
femms
or
daa
or
or
daa
daa
daa
daa
pop
push
add
daa
add
add
xchg
cmp
mull
mov
in
jbe
addr16
xchg
ss
jl
xchg
add
pop
das
xchg
out
pop
or
pop
test
jae
push
ja
mov
and
daa
lea
in
inc
scas
jne
mov
mov
in
outsl
push
fcmovnbe
jecxz
xchg
jmp
divb
push
ud2
sahf
out
mov
push
or
or
xor
lahf
or
dec
imul
xchg
pcmpeqd
jle
add
iret
mov
mov
iret
add
push
out
es
scas
popf
testb
push
push
mov
decb
mov
push
push
movd
wrmsr
or
dec
cmovo
sahf
sbb
push
aas
movsl
add
pop
jns
pop
or
mov
es
adc
sbb
cmp
xor
leave
repz
dec
add
pop
out
jns
popa
push
add
add
jg
xchg
cld
outsl
popf
push
test
popf
pushf
pushf
fsub
into
fsubp
rorb
adc
enter
imul
das
push
add
imul
push
iret
enter
pop
popa
imul
dec
dec
es
test
jns
scas
add
in
iret
mov
lods
add
and
insb
adc
sahf
aaa
jb
sub
aas
push
push
dec
jns
out
pop
push
or
out
sahf
out
or
orl
insb
pcmpeqd
push
shl
xchg
shr
addr16
das
xchg
out
movsb
adc
push
leave
sub
insl
outsl
fadds
outsl
outsl
jns
jno
cmp
fistl
push
test
mov
mov
iret
pop
dec
shrl
or
and
add
push
inc
outsb
cmp
inc
cmpsl
dec
outsb
push
outsb
pop
outsb
mov
outsb
enter
dec
and
adc
rcr
mov
call
cmp
xchg
jae
add
outsl
call
outsl
push
lock
das
lods
and
and
outsl
mov
xchg
cmp
xchg
outsl
cwtl
xchg
jecxz
jb
ror
ja
leave
leave
inc
repnz
sbb
jo
ret
popa
mov
pop
addr16
inc
jo
lea
dec
jo
jo
push
stos
repnz
ja
mov
int3
jb
pusha
mov
mov
negl
stos
mov
inc
jo
jb
enter
jo
jo
jo
jl
cmp
jo
or
mov
jno
sub
jno
jb
enter
jno
jno
jno
inc
mov
jno
jno
jno
leave
xor
xchg
jno
jno
or
daa
daa
daa
push
mov
daa
daa
daa
in
sti
push
inc
ds
adc
sbb
in
pop
leave
adc
fsubrl
xchg
out
test
add
inc
repnz
jb
pop
mov
shufps
xchg
iret
add
mov
jmp
add
dec
xchg
or
jae,pt
push
jae
jae
test
ss
outsl
add
jae
pushf
jmp
das
xchg
jae
nop
push
push
out
jb
das
repz
mov
leave
sub
add
je
mov
xchg
xlat
outsl
sub
cmpsb
aaa
push
pop
mov
mov
mov
scas
push
add
shr
lea
bnd
xchg
xchg
aaa
lds
jne
or
add
pop
inc
jle
out
adc
and
es
mov
xor
or
sahf
out
or
dec
jne
mov
movaps
mov
pop
mov
les
mov
jae
out
addr16
outsb
daa
adc
adc
dec
xor
jg
leave
and
das
xor
cmp
repnz
daa
pop
pop
fs
lods
leave
leave
leave
inc
xchg
jbe
ja
enter
adc
add
add
nop
xchg
sbb
xchg
add
ja
leave
jae
push
xchg
in
scas
pop
dec
ja
ja
es
mov
ja
fwait
dec
push
fnsave
mov
fucomi
jbe
mov
rcrl
inc
mov
out
ja
and
add
fisttps
mov
xchg
cmp
insb
js
push
js
js
js
in
sbb
mov
push
js
jp
pop
pop
pop
pop
cmpb
xchg
js
js
pop
pop
pop
mov
js
js
pop
pop
pop
ret
js
pop
bswap
leave
leave
dec
or
or
leave
leave
leave
leave
pop
push
add
leave
add
sbb
sbb
cmp
repz
ljmp
sbb
pop
cmp
sahf
or
and
sbb
out
and
and
loope
cmp
fsub
in
pop
pop
data16
movsb
cmp
leave
cmp
cltd
pop
repnz
out
outsl
ret
push
lret
outsl
jb
jns
pop
inc
repnz
or
jns
inc
mov
and
int3
sahf
adc
in
in
in
jp
pusha
push
into
jo
push
fbstp
push
addb
cmp
repz
nop
or
mov
test
prefetch
push
and
pushf
cmp
adc
xchg
iret
in
in
loopne
lock
aam
xor
and
jnp
xor
xor
jnp
stc
int3
xor
or
xchg
mov
outsl
sub
mov
pushf
fsubrl
mov
mov
jne
aas
xchg
sub
or
pop
aas
or
push
push
aad
rcr
js
daa
shl
pop
xor
in
jnp
xchg
inc
jl
in
pushf
jl
xor
xchg
xchg
mov
jo
add
bnd
daa
jmp
test
mov
pushf
pushf
pop
loopne
testb
adc
and
jge
mov
cltd
mov
lock
and
inc
push
jge
jge
push
xor
and
inc
int
pop
stc
dec
test
pop
and
xchg
xchg
popf
jmp
pop
mov
and
iret
add
cld
popf
xchg
add
lds
adc
add
push
cwtl
inc
lds
jecxz
mov
in
jle
jle
jle
xchg
xchg
pop
sub
jle
cmove
jns
dec
dec
push
or
dec
sahf
or
je
repz
cmp
jl
test
mov
xchg
pushf
jle
inc
dec
and
mov
jb
jle
jbe
pusha
pop
clc
aas
jns
jmp
sbb
pop
lcall
or
in
in
sub
xor
cmp
inc
add
dec
aaa
jns
push
das
push
jg
mov
pushl
jb
inc
dec
push
xchg
setle
sahf
ja
push
add
xchg
pop
jb
loopne
nop
mov
sub
sbb
inc
mov
outsl
dec
imul
push
add
jno
aas
aad
fmulp
nopl
repnz
lcall
adc
aaa
or
sbb
js
into
popf
xchg
add
fcomps
cvtps2pi
repnz
loopne,pt
call
dec
mov
clc
add
out
or
inc
push
mov
cmp
push
scas
inc
adcl
mov
subl
je
pop
test
dec
sahf
out
add
jbe
leave
pushf
movsb
pop
lods
pop
mov
or
repz
or
or
popf
aam
faddl
fnstcw
in
cmpl
addb
pop
adcb
addb
mov
pushf
adcb
pushf
jnp
push
push
fsubrl
fidivl
iret
add
daa
leave
xchg
cmpb
inc
mov
add
sbb
adc
hlt
cld
cmpb
in
scas
pop
adcl
dec
ja
pop
adc
jns
mov
push
outsl
jo
and
add
add
inc
enter
fsubrs
leave
enter
subl
fstpt
xor
fs
push
and
adc
je
stos
add
and
enter
test
test
test
cmp
repz
inc
ds
out
int
fadds
test
lahf
pushl
shrl
cmp
test
test
enter
das
addb
cmp
cwtl
test
push
add
sbb
add
out
cmp
sbb
ss
dec
jb
adcb
testb
jns
xchg
xchg
xchg
xchg
lds
sub
push
pop
xor
cmp
push
fwait
pop
out
pop
xchg
mov
seto
jmp
test
lock
lods
repnz
inc
dec
push
add
into
or
sbb
packsswb
inc
enter
lahf
sub
or
fstp
es
scas
dec
push
pop
dec
call
out
in
add
push
add
repz
orb
in
xchg
fsub
stc
out
mov
or
addr16
xor
outsb
ja
pop
push
aas
push
pop
leave
jae
cmpsl
push
enter
daa
daa
js
addb
mov
nop
pop
daa
daa
adc
sbb
mov
ret
mov
daa
lret
out
xchg
enter
mov
push
add
ficoml
jns
pop
mov
mov
cs
push
cmovp
dec
mov
xchg
movsl
outsl
mov
push
fisubs
ja
mov
cmp
mov
cs
xchg
pop
verr
das
das
mov
mov
jb
pop
das
sub
mov
dec
sbb
mov
or
in
jle
xchg
and
mov
adc
outsl
mov
shll
pop
in
int3
sahf
fdivrl
add
xchg
add
lods
daa
mov
mov
jbe
cmp
mov
cmova
dec
fucom
jns
add
add
cmp
or
addr16
mov
xchg
mov
jae
dec
je,pt
mov
pop
leave
mov
iret
call
pop
and
iret
fsubl
addr16
outsb
mov
daa
ss
xchg
test
jp
xchg
push
mov
inc
mov
ja
mov
addr16
lock
int3
and
dec
add
and
cmpsl
pop
lea
pop
pusha
lea
pshufw
movsb
fwait
mov
add
mov
pushf
lea
jns
mov
and
movsl
in
outsb
fimuls
cmp
aas
clc
add
dec
sahf
out
adc
sbb
add
dec
dec
dec
add
and
sub
inc
das
dec
sahf
ja
insl
dec
adc
push
adc
out
pop
adc
adc
cmp
js
fistps
rclb
or
or
sub
stos
and
mov
out
pop
movsb
adc
outsl
pop
push
add
sbb
ss
pop
iret
repz
sub
pop
xor
cmp
sahf
out
cmp
dec
push
or
xchg
out
jns
pop
push
pusha
repz
push
adc
add
popl
mov
out
jns
add
andb
loopne
out
repz
repnz
or
or
nop
cmp
jg
setp
cmp
mov
leave
repz
mov
lret
dec
mov
nop
lahf
lret
lret
lret
lret
mov
ficoml
loop
ljmp
iret
adc
xchg
or
mov
xchg
pop
sbb
lods
xchg
push
pop
es
iret
lods
dec
ja
xchg
lods
jo
in
dec
js
pop
adcb
cmp
pop
mov
ja
push
or
jns
or
or
or
ja
rorb
or
shlb
daa
pop
add
fwait
iret
les
add
scas
pop
pop
push
and
xchg
cmp
repnz
dec
xchg
push
das
movntq
mov
pop
or
bound
inc
subps
notl
cmp
inc
xchg
imul
sub
out
jg
adc
repnz
call
out
pushf
dec
ror
enter
sahf
add
in
dec
inc
add
cmp
cmovs
jb
sbb
xchg
inc
mov
add
daa
iret
cmp
loope
iret
repz
jmp
push
repz
call
repz
add
xchg
sahf
pushf
cmp
and
xchg
in
bnd
adc
pop
in
xchg
pop
add
add
inc
dec
repnz
jb
mov
ret
iret
mov
in
or
mov
xchg
jmp
and
xor
xchg
xchg
mov
xchg
xchg
in
or
adcl
mov
fcmovne
fwait
xchg
mov
xchg
out
mov
mov
pop
rcrl
mov
lock
addr16
addr16
xchg
sbb
and
mov
dec
es
pop
punpcklbw
mov
xchg
add
mov
inc
insb
pop
rclb
mov
and
adc
pushf
cmp
repz
add
add
inc
sahf
xchg
out
pop
pop
push
adc
out
stc
add
pop
jb
rorl
jp
scas
adcb
xchg
scas
clc
mov
xchg
xchg
or
xchg
xchg
xchg
xchg
enter
pcmpeqd
adc
bndstx
pop
ucomiss
push
pushf
pushf
pushf
pushf
je
mov
inc
sahf
pushf
pushf
fprem
sbb
inc
repz
mov
nop
sbb
sbb
bnd
iret
push
lock
push
and
lcall
push
push
and
pop
movsb
ds
jae
push
jne
mov
push
add
xchg
mov
cld
mov
sub
mov
push
fsubrl
pop
test
das
fcoml
repnz
setnp
fwait
sbb
inc
mov
fwait
sub
dec
xor
daa
pop
leave
xor
mov
daa
daa
xchg
mov
outsb
daa
lret
add
cmp
sbb
or
iret
lret
and
add
cmp
ss
ds
cmp
repz
or
push
out
in
iret
or
mov
push
push
gs
cmp
ucomiss
das
xchg
int
pusha
mov
pushf
mov
xchg
inc
pushf
pushf
pushf
pushf
fists
mov
xchg
pushf
repz
pushf
push
popf
push
xchg
xchg
xchg
xchg
popf
push
popf
and
xchg
xchg
xchg
popf
aas
popf
inc
popf
dec
popf
push
xchg
xchg
xchg
xchg
popf
pop
popf
addr16
outsl
popf
jp
aas
mov
nop
popf
fwait
xchg
xchg
xchg
xchg
popf
cmpsb
popf
mov
mov
out
push
pop
int3
and
and
jns
out
and
and
dec
repz
and
and
inc
shl
cmp
sbb
outsb
sahf
mov
sub
cvttps2pi
jns
inc
cs
sahf
outsb
stos
mov
dec
jno
jae
insb
in
vmwrite
jmp
push
das
cltd
sahf
test
sahf
mov
in
les
in
iret
dec
dec
mov
add
add
jns
std
sahf
mov
jmp
lahf
mov
setg
rcl
jns
mov
cmp
jns
mov
out
cmp
minps
daa
iret
cmp
insl
dec
adc
dec
dec
dec
outsb
jne
in
dec
std
mov
push
add
sub
jns
leave
repz
cmp
and
in
cmp
xchg
xchg
in
dec
sahf
es
sub
and
add
push
sub
daa
das
getsec
push
das
dec
sahf
out
aas
inc
xor
enter
maxps
mov
mov
adc
enter
mov
pop
aad
mov
inc
das
pop
push
sbb
xchg
and
xchg
mov
leave
out
cmp
dec
mov
rcr
xchg
mov
test
in
push
add
xor
inc
add
cmp
leave
push
cmp
cmpsl
or
daa
iret
jae
stos
mov
jae
cmp
ftst
adc
sbb
cmp
cli
push
add
jns
ficomps
push
sbb
sbb
in
dec
sahf
sbb
cmp
inc
jns
sahf
out
pop
pop
push
in
jle
fbld
pop
xchg
movsl
lahf
movsl
stos
movsl
cmp
ss
das
sub
mov
xchg
xchg
adc
push
mov
repz
add
cs
out
jns
pop
push
pusha
pop
cmp
jo
or
in
xchg
dec
out
cmpsb
push
or
sahf
out
fisttpll
push
ds
push
adc
iret
cmp
mov
adc
jns
adc
lar
outsl
or
repz
fmuls
scas
add
pop
mov
inc
sbb
pop
mov
pop
rcrb
mov
push
sahf
negl
cmpsl
iret
push
call
push
add
pop
fimuls
and
aas
xor
repnz
in
push
imul
mov
imul
cmpsl
push
outsb
xchg
mov
cmpsl
ud1
pushf
fmull
xchg
leave
add
inc
in
hlt
paddb
in
enter
test
lods
push
or
fldt
addr16
pmaxsw
pop
dec
xorps
xchg
cmp
dec
test
or
pushf
pop
jo
mov
fs
pop
ret
and
in
in
aad
add
cltd
lea
or
test
pop
popa
jb
cmp
ret
mov
outsw
outsb
pcmpeqd
repnz
iret
add
add
mov
push
sahf
cmpsb
test
pushf
pusha
ret
leave
xlat
shr
in
in
loope
icebp
cmpsl
inc
pop
and
push
int3
adc
sbb
dec
ret
xchg
and
sub
xchg
les
cltd
test
inc
stos
xchg
dec
sahf
out
pop
add
out
and
xchg
lcall
stos
mov
mov
add
shrb
mov
jg
shrb
xchg
stos
stos
fistps
sbb
into
leave
repz
xor
fwait
dec
sub
outsl
or
push
mov
stos
pop
adcb
jae
testl
mov
ret
lret
daa
pop
leave
and
int
outsb
paddd
fimuls
push
lods
iret
xor
negl
repnz
cmp
push
je
daa
pop
leave
jae
les
daa
cmpsl
pop
scas
ja
pop
mov
add
jb
inc
repnz
add
rorl
xor
lods
lds
outsl
lods
pop
lods
dec
xor
daa
cmp
nop
movl
lods
lods
ja
daa
daa
pop
leave
je
leave
add
syscall
jg
enter
scas
adc
das
das
das
sub
dec
scas
fisubrs
das
das
push
scas
pop
scas
push
jne
repnz
jo
scas
repnz
scas
ret
repnz
fsubrs
repnz
scas
add
imul
scas
fmull
in
and
das
sbb
sbb
pushf
pushf
pushf
pushf
push
adc
iret
repz
sub
ja
push
das
pop
daa
fucom
out
rdmsr
aas
addr16
leave
rep
push
mov
out
sahf
cmp
sahf
out
mov
out
sahf
aad
loopne
jmp
cmp
out
testb
inc
or
jns
testl
out
jns
sub
sahf
out
xchg
dec
cmovp
pop
dec
fs
repz
dec
test
iret
repz
push
fwait
push
cmpsb
cmp
mov
shlb
cmp
push
call
jb
repz
mov
xchg
and
cmp
push
ds
test
enter
sbb
sahf
out
add
mov
fmull
pop
mov
addr16
jo
cmp
in
push
add
shrb
mov
rcr
pavgb
adc
iret
repz
and
setle
mov
push
sub
fidivs
mov
add
lret
jle
enter
mov
pop
js
iret
repz
addb
jns
pop
cwtl
or
int3
push
leave
add
mov
or
daa
mov
dec
mov
mov
mov
daa
daa
daa
iret
push
adc
push
pop
sub
mov
pop
push
add
xor
mov
leave
inc
pop
dec
mov
int3
pop
sbb
and
adc
pop
mov
pop
push
add
aaa
jp
xor
int
mov
mov
in
lcall
cmp
add
pop
leave
into
cs
cmp
push
add
mov
out
outsb
daa
pshufw
sahf
out
sahf
or
pushf
pushf
fmull
pop
mov
enter
pushf
rcr
adc
lahf
sahf
xchg
imul
or
adc
out
sahf
out
sbb
sbb
rorb
sbb
push
popf
cmp
leave
push
bound
insl
js
mov
out
and
fcmovne
rep
outsl
scas
push
daa
mov
xor
shlb
jns
movsb
pop
mov
add
aam
sbb
add
mov
cmp
and
dec
mov
pop
mov
xchg
xchg
test
nop
cmpb
xchg
mov
cmp
cmp
push
push
fiadds
jmp
syscall
or
in
mov
mov
or
fildl
pop
movups
adc
out
adc
dec
cmp
out
push
push
bound
repnz
jae
sbb
xchg
outsb
movhps
sahf
cmpsl
fwait
mov
and
lds
and
pop
out
icebp
mov
out
mov
push
pop
mov
jns
sub
add
dec
sar
push
call
inc
add
daa
sub
and
rcl
fcmovne
sub
pusha
mov
pop
ja
repnz
xchg
movsl
cs
in
sahf
push
mov
mov
fwait
loopne
mov
in
adc
jae
in
hlt
push
idivl
outsl
mov
dec
jle
or
push
mov
and
mov
add
daa
iret
repz
or
xchg
outsb
sysret
ret
sahf
or
repz
pmaxub
mov
out
icebp
mov
popa
sub
adc
xor
enter
pop
xor
mov
xchg
dec
sahf
out
cs
add
mov
add
mov
mov
cmp
cltd
dec
loopne
idivb
mov
add
add
sub
mov
aas
cmp
xchg
and
mov
pop
mov
fs
outsl
dec
sysret
adc
test
in
pop
cmpsb
mov
sbb
aas
aad
loopne
aad
out
jmp
testb
out
sahf
aaa
femms
and
and
pop
xor
cs
repz
adc
insl
jns
leave
repz
scas
sub
sub
addr16
das
cld
inc
loopne
sarb
mov
and
push
mov
in
in
or
cs
pop
jns
xchg
xchg
ds
dec
orps
jns
out
pop
adc
insl
in
inc
out
outsb
mov
in
mov
xchg
jle
jns
out
sbb
cmp
nopl
out
sahf
and
and
out
jns
fisubs
out
sbb
lds
push
mov
cmp
and
sub
es
out
jns
sub
mov
inc
dec
orps
pop
outsb
mov
out
data16
pcmpeqd
repz
cmp
sahf
jbe
cmp
cmpsb
cmp
stc
int3
icebp
mov
aad
adc
pop
cmp
jo
mov
dec
es
aad
out
sub
in
in
push
inc
dec
test
nop
cmp
dec
inc
pushl
xchg
xchg
pop
xor
mov
dec
add
jl
outsl
sub
in
ljmp
in
pusha
repz
outsl
mov
popa
ftst
fldl
push
inc
imull
inc
inc
mov
and
xlat
aam
movsl
aas
mov
aas
inc
push
xor
adc
inc
aas
cmp
ja
or
push
xchg
xchg
inc
aaa
xor
cmp
rcll
call
jns
in
loopne
fcom
sarb
out
enter
mov
cwtl
pop
mov
iret
repz
je
insb
push
fs
pop
push
dec
out
daa
iret
inc
cmp
push
sub
dec
repz
adc
add
xlat
lock
mov
repz
int3
rorb
ja
loop
das
jo
pop
repz
push
push
add
sbb
repz
add
or
popf
pushf
cmp
or
aaa
or
in
sub
scas
adc
in
movsb
fwait
mov
and
leave
inc
inc
push
addr16
das
push
jo
push
mov
insl
popf
cmp
jae
and
jb
mov
andb
cmpb
in
cmp
leave
in
in
movsb
fbld
in
into
aas
xlat
sbb
data16
arpl
jp
sbb
inc
call
xchg
and
and
add
and
call
inc
or
cmp
cmpb
jp
add
add
movsb
add
cmpb
cmpsb
fisttps
mov
stos
mov
jle
test
shll
fldenv
cmp
jg
pop
inc
mov
iret
mov
in
call
popf
inc
jle
adc
push
ficompl
mov
pop
fisubrl
xor
fcomp
loopne
jb
jle
jecxz
jno
in
inc
lahf
es
mov
add
pop
add
test
pop
cmp
inc
mov
jle
ja
or
fdivrs
jne
incl
xchg
add
or
xchg
test
insl
aas
pop
aas
or
int3
ja
mov
pop
inc
xor
out
push
or
or
iret
repz
adc
add
jns
iret
adc
fstpl
pushf
sbb
sbb
add
mov
mov
mov
fsubrl
fildl
jns
rorb
jp
cmp
jns
cld
jl
incl
push
add
cmp
fsub
outsb
loopne
add
inc
mov
js
and
test
add
lahf
fsubr
push
cwtl
jbe
xorb
push
push
push
push
mov
inc
dec
or
orb
andl
out
cli
mov
pop
mov
cs
dec
lcall
add
pop
and
xchg
or
sgdtl
pusha
lea
add
xor
xchg
lods
test
fsts
loopne
cmp
mov
sbb
mov
adc
sahf
js
ds
push
test
and
lods
out
adc
cmp
adc
insb
and
out
jns
out
or
or
pusha
jnp
out
sbb
je
pop
adc
iret
repz
push
sbb
inc
pop
cmp
repz
and
xor
cmp
repz
and
cmpsb
into
sbb
clc
popa
adc
jnp
jg
outsb
xchg
movsb
adc
mov
lods
inc
cld
xorb
inc
cmp
and
and
cmp
cmp
pop
js
mov
lahf
cmpsl
stc
cmp
adc
xor
add
movsb
imul
xor
xor
mov
jae
adc
cli
mov
add
jns
mov
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
fcomip
ljmp
loopne
jmp
xchg
test
mov
cmp
mov
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
incl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
push
mov
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
adc
cli
ljmp
leave
fwait
xchg
and
and
addr16
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
cli
incl
gs
std
orl
pop
ficomps
frstor
mov
popl
out
inc
ret
dec
mov
pop
xchg
adc
xchg
lret
fnstsw
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
ljmp
mov
sbb
dec
jno
repz
test
ficompl
jmp
pushl
roll
shrb
std
in
leave
mov
add
insb
push
arpl
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
jmp
incl
or
insb
cwtl
mov
leave
mov
insb
fdivs
jne
pushl
filds
or
shrl
push
ficoms
push
xlat
enter
mov
push
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pop
mov
push
movsl
in
lahf
xor
mov
js
lcall
xchg
sbb
push
sub
insb
fs
add
hlt
call
imul
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
pop
fcomip
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fdivr
ljmp
shll
jmp
outsb
xor
mov
sarb
add
in
lcall
or
cmp
add
daa
adc
or
and
incl
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
decl
mov
shlb
mov
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
jmp
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
push
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
cli
inc
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ljmp
push
xchg
ja
int3
add
mov
das
es
lds
or
add
push
pop
cmpsl
call
ret
shlb
ljmp
ret
es
pushf
mov
insl
add
ss
jmp
addr16
pushl
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
xor
cmpsl
notl
pusha
rorb
imul
scas
aad
adc
fcompl
fldenv
filds
aaa
mov
mov
fidivrs
mov
jmp
jg
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jmp
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
outsl
dec
rorl
sub
sub
mov
add
or
add
in
popf
cmp
out
push
pop
int3
loop
adc
push
in
aad
sahf
out
cmp
push
xlat
fcomp
jns
out
fsubp
jns
dec
sahf
jecxz
in
jmp
ljmp
jns
hlt
cmc
div
clc
stc
push
mov
cld
pop
adc
hlt
or
aas
iret
adc
sbb
sbbl
pop
and
mov
jae
dec
xor
jmp
jbe
inc
vfrczps
sub
inc
insl
bound
push
into
popa
je
push
in
mov
and
cmp
adc
xor
inc
jno
xor
pop
inc
in
decl
bound
xor
xor
popa
arpl
cmp
arpl
in
mov
sub
xor
xor
xor
scas
cmp
inc
jbe
pop
insb
imul
inc
insb
gs
and
push
dec
inc
leave
aam
xor
inc
or
or
sub
popa
or
adc
gs
mov
or
je
ss
jbe
sbb
enter
or
inc
aas
xor
mov
add
inc
push
loope
mov
push
add
or
add
pop
aaa
adc
add
pop
xor
add
xchg
insb
popa
jns
push
mov
orb
insb
mov
add
aaa
je
aaa
rcl
pop
aas
inc
push
bound
add
sarb
add
pop
insl
dec
mov
and
jae
sub
add
daa
push
mov
aas
sbb
mov
inc
fisubrs
inc
sbb
inc
aas
pop
add
pop
je,pt
jo
inc
push
add
ds
mov
scas
add
call
iret
int
push
dec
mov
inc
mov
xor
lods
fistpll
enter
outsb
jne
push
fistl
stos
pop
pop
in
jge
mov
adc
arpl
add
out
mov
push
clc
xchg
in
imul
pop
jo
in
pop
cmp
test
jg
or
aas
aaa
jb
jmp
cltd
dec
jl
sub
addb
pop
ss
adc
pop
mov
lahf
dec
aam
sbb
fwait
mov
mov
push
mov
jmp
mov
jb
sub
andb
inc
and
popa
jo
lahf
test
sahf
xchg
mov
rorb
pop
in
mov
stos
cmp
push
mov
xor
pop
in
jno
cwtl
sbb
test
pop
cmp
adcb
sub
mov
or
mov
pop
jo
push
sub
test
insb
jns
add
inc
jb
push
push
shrl
ss
inc
call
arpl
insb
lfs
push
bound
ja
pop
dec
push
inc
jbe
xor
jg
push
dec
sbb
les
fldt
movl
or
push
inc
push
sub
jg
dec
and
pop
add
popa
pop
or
dec
mov
adc
mov
loope
mov
sbb
push
xor
sbb
sbb
push
mov
inc
push
inc
dec
mov
pop
bound
outsb
arpl
je
data16
adc
push
jo
sub
pop
lret
sub
and
dec
xlat
out
orl
push
daa
add
push
adc
mov
adc
and
inc
or
add
push
mov
pop
rorb
adc
stos
inc
scas
mov
call
inc
jmp
test
mov
sbb
lret
cmc
xchg
adc
rolb
dec
jecxz
fdivrp
dec
pop
jo
push
pop
stc
in
loopne
ja
popa
lret
push
jmp
sub
test
pop
sbb
jmp
inc
imul
cs
enter
add
push
jle
aas
pop
shr
lcall
lahf
cmp
jno
sbb
clc
cli
mov
cmpsl
sbb
xchg
sbb
dec
or
int
sar
push
int
jnp
xor
cmpb
mov
dec
jo
rcrb
pushl
push
cmp
into
shlb
pop
pop
or
popf
dec
pop
sbb
xchg
daa
leave
and
xor
in
mov
cmp
inc
or
inc
mov
jg
loop
cmp
es
pop
or
cltd
or
cmpsb
xlat
scas
adc
pop
sar
pushl
shlb
dec
adc
in
mov
push
jno
test
jb
or
jecxz
add
movb
outsb
lea
aad
incl
xor
sub
xlat
add
in
inc
das
dec
push
loop
cmp
push
fwait
dec
cmpl
mov
sbb
mov
mov
sbb
fcmovne
jmp
xchg
mov
lret
lret
jmp
rcll
pop
imul
orl
cmp
jecxz
jmp
repnz
out
pop
inc
out
jne
sbb
and
call
or
xor
mov
decl
testl
and
add
lret
aam
mov
mov
jns
sbb
cs
call
int
ds
nop
xchg
push
insl
and
mov
pop
mov
jle
daa
cli
incl
aam
leave
lea
jne
mov
mov
ja
data16
cwtl
rol
mov
icebp
dec
xchg
mov
push
insb
jge
repz
decl
add
imul
push
cmp
in
hlt
scas
adcl
mov
add
ds
dec
test
mov
adc
xor
adc
call
xlat
add
inc
orl
aaa
sub
jo
mov
movb
ljmp
rorb
inc
add
xchg
xlat
out
mov
addr16
dec
jge
mov
jge
cmpsb
add
xchg
lock
lcall
dec
jge
mov
or
loope
cli
dec
call
fbld
insl
idiv
lcall
adc
rorl
lea
movsl
cmp
push
push
insl
mov
pop
daa
loope
outsl
xchg
jge
xchg
mov
sti
clc
dec
clts
loopne
sbb
jnp
jge
push
dec
cmpsl
push
ret
call
cmp
add
mov
mov
jle
mov
and
frstor
jg
shll
inc
jmp
sbb
imul
xor
mov
mov
dec
mov
dec
mov
incl
shll
inc
je
inc
cmpsb
popa
jmp
jmp
pop
aam
mov
xchg
mov
daa
jno
jmp
imul
pushl
lahf
ret
push
push
mov
xchg
leave
into
arpl
cltd
pop
pop
gs
cmpsl
loopne
pop
int3
ljmp
mov
cld
adcl
out
or
mov
bound
je
adc
call
jbe
je
jp
and
jbe
dec
add
push
inc
test
lods
in
enter
xor
call
and
dec
jmp
das
inc
rcrb
mov
leave
mov
jecxz
mov
incl
xor
clc
inc
jbe
mov
add
add
pop
cmp
push
xor
dec
push
xchg
jmp
sbb
inc
insb
sub
xor
test
ror
lret
mov
push
jmp
iret
clc
inc
jb
dec
or
call
jl
test
xor
fst
pushl
push
lods
mov
jno
call
shlb
je
lret
int
into
enter
adc
scas
dec
hlt
sarb
sbb
call
sub
xorl
sub
mov
shll
loopne
call
into
cltd
mov
jmp
bnd
in
add
lods
jp
push
jmp
xor
dec
pop
cmc
sub
shll
dec
in
popf
test
in
jle
in
xchg
mov
fldt
push
push
stos
imul
lock
jmp
fistpl
cmp
push
or
ret
enter
cmp
push
push
jle
rcrl
mov
push
or
je
jle
pop
cmp
mov
jno
ljmp
int
dec
jge
push
nop
lret
push
das
js
xchg
inc
rol
loop
xor
jnp
inc
push
std
flds
sbb
iret
push
rorl
pop
sti
int3
fldenv
pop
je
mov
decb
dec
cmp
pop
inc
popf
mov
cli
jg
push
movsb
add
decb
adcb
xor
out
rol
mov
fldcw
mov
xor
ljmp
mov
shlb
adc
and
or
cmp
lcall
jge
ja
daa
arpl
mov
mov
pusha
pop
pop
js
and
ljmp
add
mov
dec
adc
imul
les
in
inc
mov
orb
jns
push
inc
xchg
pop
push
adcl
and
ljmp
aam
jmp
mov
dec
in
push
mov
jle
dec
add
mov
jmp
loope
push
add
push
sub
daa
sbb
xchg
xchg
std
add
pop
ja
inc
mov
mov
jmp
mov
sar
adc
enter
xlat
push
loope
lock
lcall
or
add
jo
push
jbe
mov
iret
std
sbb
jge
mov
inc
lock
out
in
ret
cwtl
mov
fmulp
jl
cli
pop
sbb
decl
lea
test
insb
sub
lds
jno
xor
push
adc
imul
jnp
sub
inc
shl
cltd
jae
lds
rcrb
dec
adc
cmp
lret
std
push
cmp
insb
jp
jmp
jnp
cmp
mov
idivl
xchg
cwtl
fincstp
loope
add
ljmp
pop
or
dec
arpl
daa
imul
cmp
incl
filds
pusha
mov
hlt
mov
hlt
cmp
fnsave
lcall
sti
sub
imul
ret
push
jae
pushf
shlb
stos
dec
mov
test
out
inc
mov
lahf
ret
dec
inc
into
js
jmp
push
or
setno
fsub
xchg
jle
fs
test
hlt
or
jl
lock
outsl
repz
sub
shll
pop
cld
cmp
xchg
scas
lret
decl
push
push
test
out
inc
push
mov
sub
jo
and
lcall
mov
and
xor
fsubrl
jbe
imul
fsub
lret
xchg
push
addl
sbb
xor
fcoms
test
das
or
jg
cmpsb
aad
mov
data16
mov
inc
sbb
call
add
push
jb
mov
aam
testl
ja
loopne
gs
out
cmp
xor
jge,pt
cmp
add
mov
mov
add
pop
cmp
or
andb
leave
int
mov
jl
fs
movsb
mov
jne
js
mov
adc
xor
ficomps
pop
loope
and
insl
enter
test
inc
cmc
lahf
push
out
imull
cmc
loop
pop
cltd
std
aas
mov
dec
stos
mov
and
jl
loope
ljmp
bound
cwtl
incl
imul
dec
mov
mov
leave
cltd
sbb
aad
cmc
js
cmpsb
push
mov
shl
jg
enter
or
push
pop
adc
out
pusha
test
jno
pop
pop
pushl
outsb
iret
cmpsl
imul
int3
or
popf
enter
faddl
aam
sahf
mov
das
cs
js
mov
cli
fbld
xchg
push
fimull
in
rcrb
lds
push
jge
mov
call
sbb
dec
push
out
imul
xchg
mov
stos
sbb
test
mov
inc
call
jnp
loopne
test
inc
jg
mov
aad
mov
ds
aas
std
ljmp
shlb
fst
daa
or
sub
addl
sar
pushl
push
shll
adc
jl
out
add
jne
or
jo
bound
enter
ljmp
xchg
shl
and
xchg
or
imul
ds
pushl
adc
sti
in
pop
cmp
adc
into
push
xor
or
js
push
push
inc
mov
jmp
jl
xchg
jp
lahf
scas
xchg
pop
jp
mov
inc
pop
mov
pop
movsb
out
divb
in
xchg
mov
loopne
xchg
mov
or
das
jns
mov
mov
xchg
fwait
stos
mov
js
or
or
jl
stc
in
ja
pop
jg
jae
xchg
mov
dec
aas
fidivrl
fmull
lahf
sbb
aaa
cld
clc
jg
cmp
ja
and
or
add
mov
xlat
call
test
loopne
inc
add
or
xchg
ljmp
inc
xchg
jmp
xor
lret
mov
lock
arpl
jg
or
cmp
fmull
decl
mov
jbe
lahf
or
dec
sbb
insb
loopne
out
or
push
sbb
xor
sub
and
pop
jmp
xchg
sub
mov
sub
decl
jbe
xor
out
push
arpl
inc
push
ret
outsb
testb
shll
mov
xchg
dec
adc
flds
add
popf
mov
inc
cld
and
incl
mov
repnz
jb
lret
fistps
mov
sub
lods
ljmp
movsl
push
das
lcall
sbb
nop
dec
test
fnstcw
jno
adcl
cli
mov
lods
mov
and
dec
fwait
pop
ret
xor
cli
lods
mov
test
push
sub
xor
dec
pop
push
loopne
repnz
movsb
mov
jecxz
cmp
incb
xchg
sti
aaa
test
enter
cmp
cmp
int
fildl
push
sub
decl
fmul
xchg
jae
xchg
mov
out
cwtl
xor
lock
push
enter
mov
test
jmp
repnz
insb
repnz
cmp
sub
aad
enter
mov
pop
icebp
into
cs
sub
das
dec
sbb
inc
xorl
clc
call
shrb
inc
xor
mov
pop
mov
jmp
loopne
repz
aaa
add
in
xor
lods
or
ljmp
sbb
jmp
idivl
inc
mov
lods
inc
xor
lock
fwait
jl
push
std
adc
ljmp
cmp
lods
adc
and
jg
lock
pop
xor
aam
das
shr
push
pop
cld
decl
mov
cmp
adc
adc
cwtl
das
push
xorl
pushl
pop
sti
aas
lds
hlt
mov
jge
mov
sbb
xchg
aas
cmpsl
xchg
and
and
xchg
out
repnz
out
and
daa
xchg
jbe
shll
cmp
call
pop
in
mov
mov
cmpsl
add
cmp
mov
jg
in
addr16
repz
mov
cmpsl
or
or
ss
inc
div
mov
jmp
lret
ljmp
xchg
xor
cmc
aad
xchg
into
popa
ljmp
int3
push
ljmp
inc
lods
xchg
mov
ds
xchg
bound
cmp
stc
movl
in
push
mov
mov
decl
out
push
add
pop
lock
xchg
das
and
push
subb
xor
idiv
jecxz
fdivrp
mov
addr16
and
lret
in
outsb
hlt
cmpsl
jns,pt
les
or
or
xchg
call
sub
subb
cmp
imul
test
add
mov
decl
jmp
xor
inc
lcall
mov
insl
jnp
sti
cwtl
jecxz
mov
lds
inc
push
sub
lods
mov
cltd
lret
fnsave
push
nop
push
sbb
sti
jmp
enter
mov
daa
add
xchg
lods
std
add
lods
popl
xor
jg
dec
and
push
loope
std
cmp
and
sbb
or
rol
mov
cmp
jmp
out
add
ja
pusha
mov
mov
std
pop
lcall
pushf
popa
aas
sbb
decl
int3
test
inc
or
xchg
jns
lods
pop
out
aas
stc
imul
cmp
addr16
ret
daa
jne
sbb
cs
add
lods
mov
imul
incl
fwait
mov
stos
push
clc
add
inc
dec
fcomps
in
mov
test
mov
addr16
rcl
imul
nop
mov
xor
lods
jno
call
shrb
filds
sbb
lods
fildl
ljmp
cwtl
xor
cli
inc
aaa
dec
addr16
push
popa
push
push
ficomps
sahf
add
fidivrs
mov
std
out
lea
out
xlat
aas
jmp
lret
push
icebp
cmpsl
xor
push
ficoml
pop
push
cmp
leave
xchg
xchg
test
dec
jmp
cmp
xchg
fmuls
inc
jle
jg
decb
popa
out
and
ficoml
mov
test
movsb
lock
mov
ja
rolb
lcall
jg
mov
mov
cmp
frstor
fadd
inc
cmc
stos
scas
dec
lods
cld
ds
push
decl
out
popa
adc
cmp
sub
and
movsb
arpl
clc
lcall
xchg
orl
jmp
push
fs
fisttpl
cmp
outsl
pusha
addb
add
or
push
mov
aaa
or
pushl
add
inc
add
lds
incb
jmp
cmp
aaa
or
pop
sbb
leave
pop
icebp
push
adc
out
add
jg
add
testb
or
pop
insl
jle
vmovshdup
repz
ret
int3
ja
mov
fisubrl
fwait
pushf
jmp
xor
mov
add
push
mov
outsb
clc
ljmp
loope
sbb
sysexit
dec
in
and
or
outsb
cmp
xchg
sub
cltd
fbld
and
jg
fsubrp
jb
pop
call
jmp
inc
add
jmp
and
es
xor
ljmp
out
outsl
jmp
test
ljmp
lea
out
mov
and
stc
imul
std
rorl
cwtl
fcoml
out
pop
div
idiv
lcall
mov
push
push
push
mov
bswap
xor
ficomps
repz
cmp
divl
pushl
ja
adc
stos
stc
push
call
xor
xchg
xlat
and
lcall
cmpsb
fwait
or
mov
and
shlb
into
inc
lea
ljmp
divb
ret
jg
fnstsw
or
push
hlt
sti
fcomip
mov
inc
cltd
jno
rorb
sti
es
or
ljmp
cmp
jo
pop
aam
cli
or
pop
ret
incl
adc
arpl
lcall
cli
mov
pop
push
jge
inc
mov
test
das
fdivl
sbb
inc
sub
shlb
inc
xor
ljmp
fistl
loopne
scas
out
sahf
push
es
test
mov
inc
movsl
xor
push
ja
pop
bound
xor
and
or
decl
cmpsb
pop
push
xchg
data16
nop
shll
pop
adc
inc
test
pop
pop
push
pop
outsl
jmp
jle
imul
lds
aaa
fistpl
iret
or
dec
sahf
mov
scas
call
sub
dec
xchg
push
sub
push
fwait
push
add
lcall
outsb
or
pop
push
ficoml
mov
jne
leave
popa
jl
mov
imul
ljmp
outsl
mov
popa
test
movb
in
cmp
jnp
sbb
fwait
dec
std
incl
add
les
adc
lods
cmpl
sti
sub
pop
pop
xchg
add
or
lret
pushf
jne
insl
inc
subl
jg
leave
ja
xchg
lahf
cmp
push
adc
jb
test
xchg
push
push
jge
mov
sbb
lahf
mov
aaa
sub
jne
test
loop
gs
les
lcall
js
push
ljmp
mov
mov
sbb
adc
xor
cmp
ljmp
dec
std
jg
es
xchg
mov
out
fsubl
xchg
push
and
push
sub
out
clc
pop
cmp
push
sbb
mov
cwtl
mov
dec
cmp
fildl
das
data16
lea
lcall
sub
pop
xor
xor
pusha
add
sub
sub
ret
or
decl
iret
xchg
xchg
andl
mov
xchg
pushl
mov
dec
xor
jns
jg
aam
jae
cmp
push
aas
push
xchg
jo
dec
ds
loopne
jmp
sti
ds
out
sbbb
dec
imul
xlat
mov
jge
ss
lcall
sub
orb
testl
and
mov
call
lods
xchg
xchg
aam
or
pop
into
adc
cmp
inc
inc
jg
push
les
out
scas
int3
imul
sbb
push
fldenv
xlat
stos
push
lcall
shlb
scas
mov
push
xchg
xlat
decb
mull
movb
pushl
clc
push
mov
aas
cmc
mov
pop
sti
mov
incl
imul
ret
sub
stos
insb
stos
adc
xchg
pop
sbb
cltd
inc
mov
cmp
jmp
movd
out
inc
ret
ficomps
jns
pop
xchg
inc
sbb
push
push
addl
inc
int3
in
out
ljmp
inc
in
mov
mov
pop
cmp
mov
aam
std
fisubrl
aad
push
fistps
jb
mov
bound
cmp
ja
pop
pop
fdivrs
mov
repz
decl
iret
test
mov
retw
inc
mov
imul
shr
mov
sbbl
jg
daa
test
test
insb
fiadds
mov
add
jmp
add
cwtl
adc
scas
push
ljmp
xor
add
outsl
icebp
std
decl
aam
test
shl
iret
aaa
pop
sbb
mov
call
js
cmpl
dec
in
add
arpl
fstl
decl
scas
jmp
jg
jg
mov
loopne
xchg
repz
fildl
xor
pushl
jle
sarb
stos
fcomi
push
repnz
jl
out
mov
mov
test
sbb
dec
testl
inc
adc
adc
push
loopne
scas
clc
mov
mov
stos
lods
lods
sub
add
jns
jp
std
js
jns
fstl
adc
or
arpl
inc
cmp
xor
hlt
xchg
jg
jecxz
lock
into
mov
push
test
mov
call
std
ljmp
scas
pop
sub
mov
add
sysenter
push
js
push
rcrb
xor
xchg
test
xor
fwait
testb
ret
pushl
outsl
aam
xor
mov
hlt
cmp
in
mov
push
add
cli
rolb
jg
push
push
mov
adc
scas
xor
sahf
pushf
nop
pop
repz
aaa
mov
dec
aaa
mov
cmp
addr16
adc
xorps
dec
pushf
lds
mov
je
int
mov
loope
shr
pushl
shlb
data16
sbb
cmp
dec
pusha
jmp
add
incl
pop
fstl
sbbl
or
leave
dec
or
insb
lcall
mov
or
aaa
out
repz
repnz
rcrl
insb
das
ljmp
mov
mov
ljmp
out
or
or
pop
pop
outsl
dec
in
ljmp
pop
dec
fs
inc
jp
pop
xchg
push
notl
dec
negb
dec
cwtl
out
lcall
into
data16
mov
and
pop
lret
aad
mov
gs
je
fs
pop
xor
imul
xchg
iret
ds
jmp
cmp
jle
lods
js
mov
xchg
mov
hlt
inc
xchg
or
cmpb
dec
and
or
push
inc
jno
fimuls
sar
pushl
repnz
push
shll
pop
mov
mov
mov
pusha
and
clc
decl
adc
xchg
push
call
cmpb
dec
adc
loop
jno
enter
pop
ljmp
arpl
cli
or
xor
int3
adc
lahf
adc
decl
ret
lcall
jp
outsb
stos
or
jge
incl
lock
nop
push
xchg
in
in
or
aas
mov
and
sti
mov
ret
xlat
fstps
cmp
pop
hlt
call
stc
jns
xchg
or
mov
pusha
imul
lock
bound
ljmp
rorb
movsl
mov
in
iret
mov
cmp
adc
hlt
or
scas
mov
ret
decl
mov
int3
jno
jae
enter
jmp
mov
cmp
out
add
xor
aad
or
inc
daa
aad
adc
popf
loope
test
push
inc
inc
cmpsl
and
mov
dec
aas
push
ret
adc
adc
push
data16
decl
jle
pushf
dec
mov
bound
or
sbb
stc
mov
push
inc
incl
mov
mov
jge
insb
sub
stos
sahf
pop
adc
cmp
adc
ljmp
into
sub
lock
ja
jl
push
push
jg
pop
inc
mov
push
movsl
jb
push
jmp
mov
xchg
jp
js
in
xchg
sub
mov
jle
dec
dec
jmp
or
decl
lds
push
sub
stos
or
incl
sbb
jle
xchg
sub
dec
inc
cld
shll
call
cmp
and
fmuls
leave
xor
dec
push
int3
lahf
fs
repnz
jne
inc
into
inc
push
inc
pop
push
push
jmp
xchg
mov
or
or
xchg
gs
call
out
call
dec
cld
out
aam
and
ljmp
data16
mul
and
xor
xor
mov
shlb
xchg
test
decl
mov
fcoms
pop
push
cmp
repz
cltd
int3
dec
decl
cmp
out
push
pop
mov
dec
fadds
roll
popf
call
cmpsb
xor
dec
xchg
ja
outsl
test
test
xchg
clc
mov
loope
lret
lahf
pushf
jg
inc
rcr
outsb
movsb
fs
outsl
push
loope
inc
push
pushl
cmp
fsubrp
clc
xor
sti
add
pop
imul
andb
push
adc
setno
dec
xor
lret
push
sbb
sar
cmp
dec
out
fidivs
aam
pop
enter
insb
jg
sbb
lret
xor
xlat
or
mov
in
paddd
mov
xor
adc
cmp
ret
jle
mov
cmc
and
jle
xor
into
movsb
sub
jo
push
jnp
pop
or
jmp
and
leave
cli
loopne
ja
push
mov
scas
jns
nop
fs
sbb
add
shrb
jg
inc
mov
gs
out
sub
jmp
cmp
cmp
insb
xchg
ljmp
shll
test
mov
sub
sbb
data16
inc
ja
pop
lods
push
pop
rorb
jae
sti
sub
and
cmp
cwtl
xchg
les
ljmp
ljmp
mov
inc
out
jmp
push
jns
dec
dec
aam
jmp
xchg
cs
ret
push
lods
and
ret
xlat
add
jo
push
xlat
in
call
pop
and
lods
roll
or
daa
js
popf
xor
iret
es
dec
call
enter
faddl
and
bound
leave
sbb
inc
mov
movsl
xchg
push
sti
jbe
dec
pushf
scas
mov
ret
jae
leave
shrl
mov
push
fstl
mov
stc
repnz
jmp
pop
shlb
xor
loop
dec
add
ljmp
or
sub
dec
das
out
outsb
jne
sbb
mov
das
shll
inc
arpl
mov
hlt
push
sti
jno
inc
add
lcall
aad
cwtl
mov
xchg
push
je
inc
and
sub
jl
jno
test
std
shl
pusha
xor
fwait
mov
sbb
dec
das
das
cltd
fst
xchg
add
lcall
aaa
push
rcl
imulb
lds
and
mov
out
incl
pop
mov
mov
repz
pop
add
scas
push
or
xor
decl
and
pusha
aaa
lret
clc
testl
jecxz
decl
xchg
jb
fwait
seto
xchg
int3
imul
dec
jno
lods
lock
mov
add
mov
inc
xlat
xchg
incl
pushf
sbb
mov
jle
mov
mov
shll
data16
adc
xchg
adc
imul
cmp
cli
sub
jbe,pn
shrl
push
cmp
pop
aam
out
mov
in
mov
jne
fs
fcomip
inc
push
pop
negb
mov
push
loop
jne
fwait
jmp
loopne
adc
jmp
cmpsb
xor
cmc
les
sub
or
fdivrp
xlat
xlat
jae
aam
jnp
and
dec
hlt
mov
pushl
cmp
dec
mov
mov
arpl
push
enter
mov
loop
in
mov
add
xchg
pusha
lds
in
mov
jo
cltd
dec
hlt
push
jg
or
dec
inc
push
mov
fidivs
jne
push
push
movsb
mov
push
xchg
outsb
mov
add
cmpsl
dec
pop
lret
or
andl
jg
fs
mov
test
push
insl
lcall
std
aaa
pop
test
inc
sbb
push
mov
cmpsb
xchg
mov
decl
sbb
jmp
xor
pop
xchg
dec
push
int
pop
push
jle
idiv
fsubrs
cmp
jg
add
cmp
dec
out
inc
pop
cmpsb
inc
push
int
aad
sbb
mov
mov
fstps
push
pop
ja
daa
test
nop
in
popf
aaa
or
cmp
sbbl
mov
ljmp
dec
jb
pop
int
insl
pop
pop
fprem1
sbb
push
lret
push
rclb
sub
ljmp
jb
lds
cmpsb
push
dec
iret
jmp
pusha
iret
rolb
inc
mov
call
mov
movsb
sti
sub
daa
push
daa
fsubrs
inc
mov
push
je
push
jno
add
xchg
lea
addr16
cmp
jecxz
jae
aam
push
or
decl
outsl
mov
mov
addr16
dec
dec
adc
push
xchg
dec
enter
incb
and
add
push
pop
lock
in
pop
fldl
xor
scas
jne
lcallw
jae
call
insb
movsb
ds
fnstsw
jb
xchg
xor
sahf
enter
sub
flds
pop
jmp
xchg
or
jo
sti
sub
test
lods
sbb
cld
sbb
or
mov
pop
outsl
lods
xor
in
mov
fcmovb
in
js
pop
shrl
add
add
mov
sub
mov
inc
adcl
xor
pop
or
fwait
jecxz
push
push
mov
ficoml
imulb
lcall
ret
jne
out
add
adc
cltd
mov
inc
push
jge
test
mov
xlat
add
mov
aad
addl
pop
addr16
loope
jmp
or
iret
aas
adc
jmp
loopne
fstpt
lock
out
scas
xor
sub
adc
neg
lcall
imul
out
cld
test
mov
sbb
repnz
cmp
sub
into
add
pushl
sbb
push
cmp
test
add
inc
ljmp
mov
add
jl
mov
pop
pop
insb
repz
ljmp
jno
sarb
aam
sub
inc
sbbb
sbb
arpl
stos
pop
xor
stos
rclb
jbe
lcall
sub
cmp
mov
minps
mov
lods
dec
mov
out
in
aad
lcall
stos
ljmp
fs
cmp
outsb
dec
imul
push
hlt
ljmp
out
mov
and
sbbl
out
outsb
mov
xor
aad
jae
ljmp
add
stc
add
pop
shl
cli
add
lock
test
incl
jle
cmpsb
pop
pop
orl
aaa
lahf
cld
in
jbe
add
pop
int3
pop
mov
xchg
xor
jle
stos
cmp
ficoml
xchg
scas
aad
inc
mov
mov
dec
mov
pop
je
push
lcall
inc
xor
xor
mov
aam
inc
das
scas
ffreep
out
sub
pop
les
pushf
lds
mov
jmp
sub
mov
jecxz
call
shrb
inc
jnp
add
insl
sarb
scas
cmp
in
jnp
scas
jae
pop
insb
adc
enter
jmp
mov
push
push
out
sub
xlat
xchg
insl
xchg
inc
aad
mov
cmp
push
mov
arpl
imul
je
insb
mov
roll
cmp
add
cmp
mov
mov
jg
fidivrs
rorl
mov
std
fstpl
lret
inc
xchg
int3
mul
jecxz
cmp
mov
sbb
mov
cmc
jmp
scas
sub
pop
xor
mov
rcr
xchg
xchg
cld
pop
out
add
mov
and
dec
call
fwait
push
xor
lcall
ss
push
lcall
stos
jmp
jae
mov
test
loopne
incl
les
pop
or
pop
aaa
xlat
mov
xchg
fnstcw
in
inc
ret
add
nop
xchg
sbb
lahf
adc
hlt
orl
sti
cmp
fs
xchg
sub
insb
lea
pop
jno
add
loope
mov
call
sbb
push
les
cmp
xchg
repnz
incl
sub
push
or
iret
iret
jge
insl
addb
lea
lret
pop
cmp
aas
pop
pop
loope
pop
ret
mov
or
sbb
dec
jg
rcl
mov
cmp
sbbb
xor
aaa
enter
and
fsubs
test
divl
lcall
idivb
inc
jo
int3
dec
outsb
pushf
xchg
or
pushl
insl
mov
push
adc
xor
mov
jns
or
adc
incl
fists
in
sbb
test
xor
addr16
popf
aam
les
sub
pop
cld
out
stc
xchg
divb
sub
mov
int
leave
enter
add
jle
jecxz
les
nop
aad
mov
outsb
enter
mov
call
push
xor
arpl
pop
cmp
test
push
cmp
lahf
pop
ljmp
xchg
ret
jbe
cwtl
cmp
mov
out
adcb
mov
cmp
mov
xor
add
loop
jmp
mov
xor
sub
jecxz
jne
mov
lcall
mov
cli
push
ss
call
inc
pop
sahf
fldl
mov
jecxz
xor
pop
sbb
out
cmp
hlt
jnp
jl
stos
int
fcompl
jo
sahf
or
adc
decl
inc
adc
mov
popl
out
push
mov
mov
test
dec
data16
mov
pushl
inc
lods
push
gs
adc
xlat
ret
xorb
in
icebp
cli
outsb
std
not
add
in
dec
rcll
mov
pop
clc
push
cld
into
sbb
jbe
testb
inc
inc
dec
out
push
jno
lods
xor
push
mov
decl
mov
or
es
pop
xchg
insb
xchg
mov
inc
xor
inc
movsl
cli
sub
add
ljmp
aas
stos
push
lea
and
loopne
add
popa
arpl
jg
pushl
jb
push
xchg
outsb
mov
sub
mov
fldt
lods
mov
call
cld
repz
shr
les
mov
mov
rol
int
daa
decl
xchg
xchg
cmp
mov
test
and
sub
jp
sti
ljmp
mov
sbb
dec
pop
push
cli
inc
bound
and
push
sbb
mov
and
inc
mov
inc
ljmp
lcall
mov
mov
ljmp
mov
mov
movsb
fsubrs
loop
mov
aam
mov
inc
lret
aam
lcall
mov
sbbb
cmp
gs
mov
test
add
xor
xchg
daa
add
incl
cmp
mov
lahf
and
jg
jge
mov
fsin
in
ja
xor
incl
adc
fldcw
sub
adc
mov
add
dec
test
decl
filds
mov
add
xchg
lods
mov
dec
in
push
mov
or
cltd
daa
push
sti
imul
push
add
fistl
mov
inc
incl
dec
xchg
daa
movsl
sub
add
cmp
imull
dec
push
call
filds
sbb
or
out
add
lret
dec
ss
and
scas
pop
out
aaa
filds
xor
sbb
aaa
jmp
jnp
add
and
call
cs
fistpll
push
out
ljmp
cmpsb
int3
mov
imul
jns
incl
cmpb
aaa
adc
inc
test
or
incl
dec
inc
adc
xchg
and
xchg
popa
jae
xor
imul
sub
pushf
test
and
call
xor
loopne
cmp
inc
sbb
inc
loopne
ljmp
pop
mov
ss
test
inc
ljmp
pop
js
call
outsb
push
in
xor
pop
outsl
and
push
jbe
es
lea
jmp
decl
jle
dec
add
dec
pop
adc
enter
mov
sar
dec
insb
adc
mov
sarl
lods
push
test
pop
and
jg
fcoms
pushl
in
in
imulb
adc
ljmp
sbb
jae
and
cmp
sbb
ljmp
cli
daa
sub
push
repnz
scas
push
add
mov
dec
cltd
js
jg
in
scas
enter
scas
cmp
and
push
cmp
fldcw
dec
lret
ror
push
mov
inc
pop
aas
jnp
aaa
or
clc
pusha
repnz
sahf
xor
or
cld
add
push
lretw
decl
mov
sbb
mov
mov
notb
sbb
jb
ds
data16
decl
pop
jecxz
sub
insb
ss
imul
outsl
mov
mov
jl
cmp
push
pop
dec
adc
decl
lret
lods
and
xor
mov
mov
cmp
xor
jge
mov
push
mov
into
fcomip
lcall
fldl
mov
imul
test
jb
pop
in
jg
call
dec
mov
xorb
scas
xor
mov
divl
test
sar
jg
lcall
popf
leave
xor
or
add
es
mov
sar
ljmp
inc
sbb
cmp
xor
fcompl
pop
cmp
jecxz
fs
mov
pop
push
lahf
fwait
popa
fstl
cmc
ljmp
sbb
inc
pop
lret
stc
push
mov
sub
mov
pop
in
incl
lsl
push
rclb
mov
fwait
and
cmp
fdiv
fdiv
stos
and
call
test
je
push
push
out
and
dec
push
xor
dec
pushl
lock
dec
push
jne
pop
es
outsl
cmp
sbb
repnz
pop
push
fisttpll
clc
incl
movsb
mov
cwtl
push
xchg
insl
jmp
inc
mov
push
clc
popa
subl
cmpl
imul
in
lahf
js
es
ljmp
call
push
loop
int
lcall
dec
inc
clc
and
popl
adc
decl
push
das
cmp
mov
je
sub
dec
inc
in
cmc
push
add
sub
call
dec
add
push
sub
adc
sbb
jle
fmulp
adc
push
dec
inc
fdivrl
and
sub
push
std
inc
cmp
sahf
jmp
adc
fdiv
adc
mov
call
iret
test
dec
mov
push
stos
pop
test
push
inc
sub
mov
and
add
add
mov
leave
clc
out
notl
sub
fucomip
push
scas
and
mov
sti
push
scas
or
add
sti
xchg
push
mov
pop
cmp
das
scas
insl
icebp
call
dec
addb
and
xor
push
out
hlt
loop
movsb
dec
fbld
fsubl
adc
xchg
mov
icebp
dec
fstl
sbb
nop
cmp
js
inc
mul
fistpll
cmp
sarl
xor
mov
test
xchg
outsl
jmp
mov
mov
sbb
and
inc
and
loop
inc
imul
idiv
adc
push
and
inc
in
adc
sub
xchg
xchg
jge
scas
idivb
cli
incl
or
testb
mov
cmc
pop
mov
pushl
sbb
and
pushf
pusha
dec
sub
cmp
icebp
test
stc
les
daa
loop
add
mov
sbb
scas
xchg
adc
sbb
aam
std
psadbw
addr16
lcall
jne
cmc
hlt
dec
adc
cmp
into
sbb
push
and
xlat
push
call
dec
xlat
test
jns
dec
daa
cmp
fnstsw
cmp
mov
out
mov
push
pushl
std
jmp
jne
and
aas
daa
xor
enter
pop
sbb
sbb
movsb
mov
in
mov
adcb
lret
mov
push
xchg
int
sbb
jg
xchg
rcrl
orb
sub
pop
imul
mov
cld
or
mov
outsb
and
push
lds
xchg
scas
pushl
mov
stos
repnz
jmp
iret
pop
mov
sbbb
negl
add
or
or
dec
jmp
cmc
icebp
mov
pushl
or
into
test
subl
mov
jno
cmp
or
je
dec
sub
adc
cld
icebp
adcl
add
test
mov
into
mov
outsl
stc
aas
out
sbb
mov
and
subl
clc
loopne
std
test
cmpsl
and
ss
adc
lock
mov
imul
adc
dec
out
jmp
xchg
cmp
adc
pushf
imul
fs
add
inc
in
call
push
fincstp
fsts
sub
test
sub
xchg
xchg
jg
inc
aad
jo
cmp
cmc
mov
lock
out
and
imul
pop
icebp
mov
lcall
cmp
add
add
jle
add
inc
xor
mov
sub
jmp
push
and
out
adc
lods
repnz
push
pop
insl
gs
ficompl
out
jg
dec
rcll
ljmp
clc
push
or
adc
mov
scas
stc
or
xor
xor
jg
or
pop
adc
push
adc
lods
sub
mov
sub
xor
or
loopne
push
sub
pushf
and
call
aam
lret
lcall
sbb
outsb
lods
and
je
dec
cmp
je
xor
mov
dec
mov
cmpb
adc
fwait
lock
sub
or
imul
lock
push
fisttps
repz
gs
push
xchg
movlps
and
push
jmp
sub
cmp
xchg
push
sub
add
add
or
fsubrl
daa
sub
fidivl
pop
pop
sti
shll
std
iret
movb
dec
sbb
pusha
inc
adc
lock
mov
ljmp
push
cmp
jb
sahf
add
mov
out
inc
int
dec
push
or
inc
add
in
lahf
xor
out
push
pop
xchg
jp
xchg
ljmp
dec
les
insb
fiaddl
jg
xchg
pop
mov
cmc
xor
dec
mov
test
repnz
xchg
incl
push
scas
repz
pop
fidivrs
mov
outsb
imul
cmp
icebp
mov
decl
adc
pushf
cmp
lret
call
scas
ret
inc
inc
pop
and
mov
mov
mov
push
loope
xchg
mov
int
xor
xor
and
fsubs
push
jbe
out
push
jecxz
mov
outsb
dec
xchg
ljmp
lret
xorb
jecxz
mov
outsl
xchg
and
aam
jae
imulb
ljmp
mov
pop
cmp
jmp
cmc
pop
jae
mov
scas
mov
subb
lock
xor
push
lcall
xchg
in
xlat
jg
and
adc
loop
out
out
test
push
jg
pop
mov
cmp
dec
adc
pop
test
or
jg
xor
ljmp
dec
dec
andb
push
loop
jmp
mov
adc
je
jmp
shl
mov
dec
fdivrl
out
int
mov
ljmp
repz
xchg
mov
incl
xchg
in
mov
jae
out
stc
push
stos
pop
fbstp
or
add
sbb
repz
das
xor
mov
incl
pop
scas
sbb
mov
mov
dec
daa
pop
lret
cmpsl
cs
ds
mov
lea
shrb
mov
or
adc
xchg
std
fwait
add
mov
adc
jle
pop
hlt
pushl
movsl
cs
mov
lret
jo
in
stos
push
rcrb
pop
pop
arpl
jnp
xor
sti
insl
sub
xchg
arpl
jecxz
fwait
cmp
jno
cvtps2pi
jmp
ds
lcall
jno
xchg
jae
xchg
sub
cmpsl
lods
cmp
mov
jmp
push
in
cmp
xor
xchg
mov
pop
adc
int
rolb
ljmp
and
dec
cmp
or
jo
fcmovu
mov
ljmp
inc
iret
sbb
mov
and
pop
sbb
or
call
push
outsb
mov
test
cmc
jle
aas
xor
out
lods
mov
xor
mov
push
cmc
inc
mov
pop
jg
andb
leave
subl
mov
xchg
repz
inc
xchg
dec
mov
xor
cmpsl
xchg
popf
in
loop
push
jge
cmpsb
test
es
add
jne
ljmp
scas
and
ja
shlb
push
stos
dec
mov
ret
sub
xchg
icebp
pushl
lds
dec
lea
push
aaa
fidivl
jnp
insb
mov
lock
and
push
inc
lcall
xchg
in
sbb
cmp
fisttpll
inc
dec
stos
mov
out
lcall
adc
outsl
mov
inc
adc
test
incl
ret
fcmovne
xchg
dec
jbe
je
pop
daa
sahf
outsl
insl
jl
mov
mov
jae
shrl
fnstcw
test
sbb
fildll
jbe
dec
add
jns
pop
call
insb
mov
rorb
mov
mov
or
fistl
call
xchg
cld
insl
in
mov
cmpsl
rolb
or
cs
inc
adc
stc
fiaddl
stos
inc
push
mov
sub
jne
dec
shrl
addb
mov
aas
xor
pop
jmp
or
lcall
imul
shlb
pushl
push
fiaddl
mov
in
inc
mov
stc
cmc
push
mov
mov
mov
incl
jb
or
pushf
mov
push
add
imul
cltd
xchg
int3
or
cmp
jl
fdivr
mov
and
sarb
ljmp
sub
xor
sbb
mov
cs
cltd
xor
adc
add
pushl
bound
jmp
mov
add
cld
mov
out
cmp
hlt
push
ret
pop
ja
mov
pop
outsb
xchg
sbb
std
movsb
lods
inc
sbb
pop
cmp
pushf
call
mov
add
aaa
dec
call
cmp
es
faddp
nop
add
jge
icebp
fwait
jg
xor
daa
call
sbb
je
cwtl
andl
pop
jmp
pop
test
push
mov
add
out
aas
mov
sub
test
cmp
or
cmp
xor
fcomip
ljmp
cli
arpl
and
stos
adc
xchg
aas
jb
xchg
shll
adc
lcall
sarl
outsl
hlt
jbe
sub
test
adc
cwtl
iret
mov
ljmp
xchg
mov
sbb
mov
push
enter
test
cmp
out
xchg
rorb
aaa
fld
decl
in
jge
sub
scas
scas
cmp
call
push
popf
popa
add
cmpsb
cli
jl
push
dec
pop
dec
mov
jge
orb
jl
cmp
or
out
jb
jmp
lcall
testl
scas
test
leave
cmp
pop
loopne
dec
insb
nop
add
ds
int
icebp
cs
lcall
pushf
cs
xchg
jmp
fidivrl
adc
mov
pop
stc
xchg
lds
pop
push
imul
movsb
pushl
cld
out
and
and
lods
sub
push
jle
cmp
mov
imul
inc
xchg
incl
mov
mov
pop
xor
xchg
mov
adc
sbbb
jmp
test
push
push
fwait
mov
mov
addl
cli
iret
aaa
mov
loopne
incl
int3
ds
in
arpl
cmp
and
lods
stos
loopne
mov
out
popf
insl
ljmp
xchg
or
les
jg
inc
mov
cmp
aas
loope
push
and
jnp
enter
inc
shl
xor
sbb
in
sbbb
std
js
xchg
call
xlat
lods
sub
adc
xchg
mov
push
xchg
xchg
sbb
inc
jge
mov
inc
jnp
mov
es
fmuls
imul
out
dec
in
pop
and
and
add
test
add
jmp
jne
ljmp
je
mov
das
gs
je
xlat
pushl
xlat
sub
clc
or
mov
xchg
pop
je
out
mov
pushl
jg
lret
jb
fcmovu
push
repz
nop
cltd
inc
push
or
adc
lods
stos
jmp
and
jb
icebp
in
jo
xchg
data16
xchg
add
cltd
or
ja
call
xor
int
scas
sub
adc
cmp
push
inc
fdivrp
xchg
sub
inc
fimuls
decl
inc
adc
mov
in
js
ljmp
jp
xchg
and
and
mov
sub
push
inc
push
cmpsb
fcoms
in
mov
mov
dec
mov
arpl
push
lds
dec
loopne
fisubrs
mov
adc
and
sub
cmp
out
mov
cwtl
dec
rclb
insb
pop
jge
jno
mov
sar
jo
fstps
mov
bound
pop
lock
jnp
mov
cmp
mov
jmp
cmc
mov
dec
xor
dec
push
add
loop
test
sub
xor
ljmp
push
and
insl
js
jecxz
mov
dec
xchg
mov
mov
xchg
fldcw
in
leave
addr16
mov
mov
inc
out
mov
inc
aas
clc
cwtl
leave
jnp
insl
mov
fistpll
xor
repz
jle
pushf
mov
jle
inc
cmp
shrl
fisttpl
loop
xor
pushl
addl
pop
fisubl
push
arpl
sub
or
xor
mov
xor
jne
ret
ljmp
dec
and
push
xor
jg
scas
clc
lcall
jge
mulb
mov
fsubrl
popa
lea
ljmp
cmp
enter
test
cmp
mov
pop
cmpsb
arpl
test
ljmp
add
add
inc
sti
push
mov
pop
neg
xor
dec
cmp
call
mov
mov
jp
add
es
pop
xchg
dec
loope
mov
xor
mov
push
or
inc
pop
mov
cmpsl
xlat
test
mov
jo
pushf
or
xor
gs
mov
sbb
xchg
lret
mov
dec
fidivrl
ficoml
mov
xchg
xor
int
inc
mov
dec
sti
popf
call
jns
daa
pop
pushf
push
sti
adc
push
jmp
sbb
xor
sub
mov
sbb
dec
movsb
mov
pop
jne
and
das
enter
mov
rol
daa
add
dec
pop
sub
ljmp
rorb
mov
ss
inc
sbb
sbbb
mov
jo
arpl
in
adc
loopne
push
ret
sbb
dec
xlat
arpl
push
add
inc
decl
fsubs
mov
cmpsb
sbb
jmp
pop
je,pt
pop
mov
lock
arpl
and
push
enter
adc
popf
sbb
pop
pop
out
adc
outsb
paddsb
push
iret
mov
xor
push
xor
ret
leave
cmpb
mov
cmc
pushf
xchg
dec
or
xor
and
js
pushl
stc
mov
outsb
cmp
mov
stos
cmp
mov
inc
push
adc
fidivs
sahf
push
pusha
fcompl
sqrtps
jno
or
xor
push
out
ret
cmpsl
ljmp
in
dec
or
xor
mov
rcrb
lods
dec
adcl
sbb
pop
xchg
adc
lcall
ja
test
pop
mov
popa
outsl
call
jns
jns
xor
out
sahf
push
es
jl
add
mov
sbb
icebp
xor
cmp
repnz
pop
hlt
ljmp
sbb
incl
iret
mov
fwait
test
cs
pop
iret
notb
repz
ja
stos
jnp
stos
pop
mov
scas
fsubl
sti
push
mov
push
inc
and
jl
and
adc
cmp
fisubs
decl
pop
mov
sub
mov
jb
shlb
ljmp
sub
sbb
ljmp
test
pop
bound
lods
adc
lods
loope
jp
pop
jae
out
mov
ljmp
add
test
repnz
xchg
add
inc
mov
dec
pushf
pop
inc
jns
xchg
or
sub
or
gs
dec
rorl
push
jmp
and
dec
cmp
and
sub
lods
cwtl
and
movsb
dec
into
setb
mov
lcall
data16
adc
arpl
icebp
loope
xchg
rclb
insb
test
fistps
pop
pop
ljmp
inc
push
adc
mov
xor
add
fwait
dec
or
ljmp
sub
imul
lcall
test
add
add
jb
sub
fstpt
movsl
lcall
xchg
lahf
xlat
sbb
lods
call
push
cwtl
and
mov
decl
lcall
test
subb
push
scas
jl
cld
fs
pop
cld
jle
or
push
dec
scas
bound
dec
ud0
lds
pop
hlt
mov
lahf
fisttpl
mov
das
lahf
xchg
push
out
ja
jnp
and
decl
fistpl
int3
or
ficoms
mov
inc
or
gs
and
repz
mov
sbb
imul
push
pop
lock
cmpsl
mov
in
push
adc
es
sub
insl
std
jmp
mov
inc
mov
lret
stc
xor
test
and
dec
push
xor
add
mov
aas
push
adc
sbb
sbb
inc
shrb
repz
or
cmp
sub
mov
add
call
mov
lock
push
xchg
cmp
and
cmp
push
xlat
pop
aas
cmp
loopne
xchg
aas
cmp
cmp
or
mov
cmp
ljmp
mov
arpl
call
mov
bnd
sti
dec
push
mov
test
ror
pushf
stc
aas
pop
and
dec
nop
decl
lock
clc
mov
push
ret
pusha
mov
dec
jl
call
arpl
inc
sbb
jecxz
xchg
ret
pop
push
ds
add
push
shr
add
or
inc
cmpsl
ss
incl
dec
or
push
push
test
mov
jno
adc
pop
aad
add
incl
mov
imul
sub
outsb
push
push
dec
popa
mov
cmpsb
or
cli
in
addb
dec
into
ljmp
ljmp
inc
js
repz
lret
dec
test
pushf
adc
js
adc
imul
scas
mov
jns
mov
mov
inc
aaa
push
scas
scas
inc
inc
mov
cmc
call
addr16
jge
jno
or
xorps
adc
dec
ss
out
mov
jmp
push
fldl
shlb
adc
jnp
or
pop
call
test
or
mov
or
jae
mov
xchg
sbb
es
adc
jnp
sub
sbb
mov
insb
stos
jno
filds
xchg
sbb
call
push
dec
cmp
dec
sti
inc
jne
jb
xor
shlb
lret
iret
push
inc
imul
adc
and
sub
call
fsts
mov
cmpsl
cmp
mov
sbbb
lds
jl
inc
dec
lcall
mov
in
dec
jmp
pop
push
loopne
ja
jns
rorb
or
jl
pushw
pop
mov
pop
sahf
fsub
repz
in
iret
cwtl
push
movsl
inc
sti
lock
mov
je
pushl
dec
push
jge
push
shrl
sbb
push
shlb
jge
add
jae
xchg
add
pushl
mov
pop
pop
imul
pop
enter
cmp
and
adc
lea
xlat
jle
dec
cmp
xor
and
push
xorb
rcl
int3
insb
lods
adc
stos
pop
ret
push
or
mov
or
addr16
repnz
mov
mov
pusha
fwait
adc
jnp
cmpsb
sub
lahf
cmp
xor
sbb
xchg
jns
mov
scas
sarb
cmc
adc
inc
movsb
mov
pop
ja
or
das
rclb
ficoml
inc
mov
sub
add
or
mov
fiadds
fmul
jmp
lret
scas
sub
jb
mov
jg
iret
insb
jbe
jle,pn
mov
stos
scas
push
sub
clc
mov
lcall
sbb
addr16
iret
pop
out
dec
pop
cmp
adc
xchg
adc
ret
sbb
popa
xor
adc
call
popa
fidivs
push
mov
daa
shll
mov
or
and
cmp
jnp
push
or
jnp
jns
out
aad
dec
dec
push
leave
negb
iret
fdivrp
mov
inc
mov
frstor
iret
testb
sti
pop
mov
cmp
pushl
stc
out
lret
jno
pop
xchg
jo
std
lods
lret
movsb
or
push
pop
ja
xlat
cmp
mov
lcall
push
cmp
pop
jbe
pop
scas
sub
test
inc
adc
jb
adc
mov
sub
call
lea
mov
imul
cmpb
lret
inc
fsubs
pop
dec
shll
jae
pop
loopne
cmpsl
inc
inc
and
popf
out
or
daa
push
sbb
jecxz
mov
sub
xor
pop
aaa
call
aad
lret
aad
clc
adc
sar
fbstp
xor
aaa
or
adc
pop
jo
cs
inc
out
mov
pop
inc
mov
cmp
mov
dec
decb
xchg
add
adc
in
jle
jmp
enter
or
dec
test
push
cmpsb
mov
outsl
aaa
incl
testb
xor
hlt
lods
in
add
fistps
cmpsl
mov
repz
test
pop
jecxz
ljmp
lock
ljmp
xchg
pop
fnstsw
adc
stos
sub
fwait
adc
jo
sub
mov
adc
push
mov
sub
sbb
xchg
lret
ljmp
dec
mov
aad
pop
jno
jbe
test
lock
decl
inc
nop
pop
frstor
stos
ud0
push
and
decl
stmxcsr
mov
or
cmp
ljmp
mov
jb
mov
enter
xchg
incl
sahf
xchg
mov
inc
rcr
fsubl
out
jne
cmpl
cmpsb
outsl
xor
adc
insl
cld
pushl
ljmp
hlt
xchg
movsb
pop
sbb
icebp
out
in
adc
xchg
cmpsl
pusha
jecxz
sub
cld
lret
in
incl
in
cwtl
inc
cmp
or
jge
mov
insl
call
ljmp
fwait
push
in
xor
dec
adc
loop
decb
mov
and
int3
xor
mov
adc
sbb
jp
add
incl
pusha
xchg
loope
mov
dec
test
mov
inc
faddp
js
dec
outsb
adc
pop
or
or
sbb
pop
fstpl
int3
loopne
sar
decl
dec
mov
inc
mov
lea
ljmp
mov
mov
mov
das
addr16
in
dec
xchg
and
jmp
dec
jno
push
xor
outsl
loop
arpl
inc
mov
pop
mov
dec
shll
shlb
mov
outsl
pop
xchg
aad
scas
pop
stos
je
pop
fs
xchg
mov
adc
fbld
add
jge
stc
jne
mov
jmp
ret
addr16
dec
scas
sti
add
mov
decl
stos
rcrb
adc
das
aaa
lahf
pop
add
mov
aam
cmp
cli
decl
fbld
mov
adc
mov
je
shl
addr16
add
shr
mov
sbb
sbb
dec
test
loopne
test
fsubs
imul
xor
ret
enter
sub
std
dec
pop
pop
aaa
and
dec
sar
pop
push
fldt
arpl
out
jl
xor
mov
dec
and
pop
mov
das
iret
jp
in
push
popw
or
add
jo
pop
addr16
mov
inc
imul
iret
cmc
icebp
sbb
lods
mov
hlt
push
mov
and
xor
push
out
jae
icebp
inc
xor
and
ficoml
mov
ror
aas
lock
mov
lds
or
ja
mov
stos
bound
lcall
xchg
and
or
mov
pop
mov
idiv
incl
gs
lods
adc
cmp
rcll
adc
mov
or
out
xor
out
dec
dec
xor
out
shr
call
imull
cmp
push
sub
xchg
mov
std
roll
mov
or
out
push
dec
arpl
add
movsl
aam
and
popa
push
xchg
and
pusha
std
cmp
mov
in
insl
cmp
inc
inc
inc
adc
cli
aam
mov
jg
bound
sti
cmp
loopne
mov
jge
or
test
or
pop
cmp
push
cmp
mov
fldcw
mov
sub
push
hlt
dec
adc
xor
pushl
mov
insl
int3
imul
mov
jnp
popf
jmp
addr16
push
popf
fists
insb
ja
imul
daa
testb
lods
out
xchg
fimull
ljmp
enter
or
mov
daa
add
xchg
dec
loopne
cmp
push
inc
int
stc
data16
inc
dec
dec
xor
push
mov
adc
scas
gs
rclb
icebp
imul
mov
mov
mov
cli
cmpsb
aas
es
daa
fcomps
inc
jge
xchg
and
jg
pop
jo
jle
pop
xor
and
ss
clc
lcall
addb
jp
xchg
stc
pop
inc
imul
xor
and
add
incl
in
pop
cmp
cmc
out
cmp
mov
int3
les
sbb
mov
inc
push
pusha
xor
pop
cmp
lcall
insb
out
cmp
cld
jno
leave
ds
inc
xor
shlb
cmp
sbb
dec
push
xor
mov
adc
xlat
mov
pushl
lea
mov
rorl
cld
pop
and
inc
mov
dec
out
jo
scas
sahf
repnz
fcomip
incl
mov
add
pop
mov
es
test
jmp
xchg
addl
push
cmp
mov
andl
aam
iret
and
ljmp
sub
ja
xchg
sbb
add
jae
mov
cmp
ljmp
movsb
std
rolb
std
pushf
and
jge
xchg
jg
jp
aaa
pop
adc
push
jae
lcall
sub
dec
and
cwtl
rcll
cmpsb
insb
daa
cmpsl
lods
xor
adc
fs
push
fadds
adc
xchg
xchg
in
xchg
xor
fldl
popa
leave
faddl
fdivrs
pushl
cmp
sub
lods
fnstcw
pusha
adc
lock
je
xor
jns
push
call
cwtl
fadds
adc
mov
mov
mov
cltd
fadd
adc
lahf
mov
incl
fisubl
or
lret
inc
xchg
adc
pop
addr16
sub
cmp
bound
push
xor
js
cmp
mov
push
and
inc
cmp
xchg
faddl
js
push
data16
cmpsb
jno
imul
mov
dec
out
fistpll
lcallw
adc
outsl
mov
xor
mov
je
xchg
push
mov
xor
addr16
test
fisttps
jg
dec
mov
int
add
shrb
lret
ds
and
fimuls
div
cmp
sub
xchg
imul
sbb
sub
lcall
repz
popa
gs
push
and
daa
xchg
out
jb
push
push
imul
adc
sar
xor
inc
pop
push
dec
jne
push
xchg
sub
insl
push
addr16
lahf
sub
call
cld
inc
ds
js
add
adc
sub
dec
mov
popa
pop
xchg
mov
mov
mov
addr16
xor
and
sbb
push
stos
push
lock
neg
jo
fdivs
pop
outsl
in
decl
test
cltd
sbb
xchg
cmpsl
add
bound
scas
sub
lcall
sub
mov
subl
pop
mov
aaa
mov
cld
dec
in
loop
push
nop
push
fstp
xlat
mov
xchg
je
xor
pusha
xlat
mov
mov
jno
lcall
pop
xchg
scas
test
jb
mov
stc
movsb
insb
pop
outsb
cmp
mov
push
cmpsb
jmp
push
leave
and
insl
call
shlb
sbb
mov
stos
lahf
push
ss
test
lcall
ljmp
leave
pop
sbb
pop
cmp
adc
fcomip
adc
jg
adc
fwait
add
jno
ja
enter
mov
incl
adc
xor
enter
dec
mov
shll
push
insl
mov
cmpb
scas
sbb
decl
lret
mov
or
or
popl
hlt
popf
fmuls
mov
fsubl
decl
pop
dec
movsl
xchg
mov
jg
gs
jno
daa
jecxz
add
es
dec
mov
cmp
dec
aad
jl
stos
movsb
loope
imul
jp
cli
mov
fs
fwait
insb
bound
ljmp
decl
pusha
push
cmp
mov
jmp
leave
rcrl
into
and
mov
inc
decl
lret
xlat
lcall
dec
pusha
outsl
mov
push
daa
xor
and
in
dec
popf
pop
cmp
pop
and
insl
jg
fistpll
pushf
enter
pop
inc
enter
sub
dec
je
lcall
sub
dec
ret
dec
cs
xlat
mov
or
lret
lret
xlat
jns
ljmp
je
ja
pop
jle
jno
push
dec
and
or
mov
fimull
lret
mov
repz
les
push
dec
jo
fdivr
mov
jle
fldenv
ja
jge,pn
testb
loopne
sub
inc
pop
shll
add
daa
mov
cmpsl
and
xchg
ja
lock
stc
aaa
jb
stos
sub
mov
inc
or
stc
add
js
mov
shlb
div
call
and
inc
in
scas
movsl
insb
test
daa
mov
mov
out
ss
fisttps
pop
cmp
pop
gs
in
mov
aas
inc
xchg
nop
xchg
clc
filds
mov
in
popa
aaa
xchg
repnz
incl
subb
pop
jb
lods
popa
iret
addl
fwait
ljmp
xor
aas
xor
in
jne
fdivrp
ret
sub
xchg
testb
jo
mov
popf
lcall
dec
add
or
inc
cmp
aad
cmp
or
jmp
sbb
mov
or
sbb
fmull
sub
dec
cs
lds
imul
outsl
mov
incl
jmp
rcr
jmp
movsb
icebp
jmp
jge
mov
add
fwait
out
mov
pop
sahf
jmp
xchg
or
inc
mov
jbe
std
movsl
xor
xorl
pop
out
jp
imul
fsubl
incl
inc
push
mov
fisubrs
mov
push
les
fld
rcrb
mov
lcall
jle
inc
xor
pop
sti
pop
jge
sub
out
dec
cmp
js
cmpsb
andl
mov
orb
jle
lea
in
repz
cmp
mov
sub
outsl
inc
scas
jmp
rcr
mov
leave
in
push
jl
fcompl
xchg
aas
mov
xchg
push
pop
adc
jno
pop
loope
mov
out
cs
ss
insl
lods
mov
add
push
jnp
inc
mov
cmp
jns
call
add
into
push
lcall
xor
lahf
adc
sahf
loop
clc
xor
xchg
add
call
jns
xor
testb
lock
cli
out
jl,pn
lcall
sub
fcmovb
inc
gs
mov
mov
jmp
pop
push
and
add
jmp
mov
xor
out
cmp
das
std
test
call
sbb
ljmp
mov
push
das
xor
mov
shlb
sub
pop
adc
xor
pushf
mov
lcall
sbb
dec
jp
mov
jmp
mov
bswap
jno
inc
and
mov
call
push
frstor
shll
cli
call
jl
stos
or
scas
inc
mov
incl
pop
fwait
lds
and
xor
mov
rol
loop
arpl
scas
cwtl
cmp
dec
loop
inc
cmp
fs
push
push
clc
mov
fldenv
and
ljmp
and
jb
xchg
pop
ret
shl
sub
push
sbb
xor
and
jg
test
or
std
jle
ljmp
cmp
insl
xor
jmp
jne
inc
pop
xchg
sarl
xchg
aam
or
imul
xor
dec
lock
cld
sbb
arpl
xchg
adc
fbld
lock
xchg
daa
in
mov
rorb
pop
and
cmpb
imul
repz
scas
pop
adcb
mov
inc
outsb
mov
into
lds
call
rorl
push
lcall
add
fs
inc
call
mull
dec
sbb
fldl
out
xchg
push
out
mov
cmpsb
adc
xlat
inc
pop
inc
shrl
pop
pushl
mov
xchg
pushf
pop
ljmp
test
xchg
aas
cmp
fildll
sahf
sbb
fs
gs
cmpsb
in
cmpsb
cmp
ljmp
cwtl
mov
sti
ljmp
sub
push
cltd
sbb
je
fcomip
imulb
xor
mov
mov
loop
push
mov
incl
jge
popf
pop
cmc
aas
dec
sahf
test
or
pop
bound
lds
fcomip
incl
mov
mov
nop
jns
inc
pop
push
jbe
jb
loope
push
sub
sub
add
ljmp
cmc
nop
out
int
xchg
pop
xchg
mov
push
add
test
scas
decl
fwait
xor
inc
adc
mov
jg
dec
push
dec
in
jle
call
fimull
lcall
cmpsb
add
cmp
pop
out
sar
dec
loope
push
and
dec
nop
sub
fisubl
pop
ficoms
push
fstp
in
ja
add
dec
push
in
int3
dec
inc
cmp
pushl
push
pushf
adc
sbb
in
gs
pushf
jb
pop
mov
loopne
dec
inc
test
mov
aas
mov
pushl
fnsave
mov
cld
hlt
ja
push
jo,pn
inc
dec
sarb
lods
mov
sub
xchg
aad
jg
scas
cmp
ret
mov
loopne
notb
mov
rorl
leave
mov
add
mov
cmc
sub
out
mov
xchg
aam
jb
insl
in
jmp
stos
fidivrl
imul
lcall
jb
pop
add
cmp
mov
pop
call
flds
jle
shrl
lods
mov
pop
add
dec
shll
out
arpl
add
adc
jp
in
movsl
sahf
jo
sbb
test
or
ret
or
jg
push
insl
push
pop
cli
leave
mov
fcmovnbe
loop
data16
mov
push
imul
lcall
dec
mov
imul
sbb
in
ss
jp
pop
das
les
pop
sahf
mov
lcall
inc
rcrb
rcrl
mov
cmp
push
mov
dec
stos
and
call
test
push
push
mov
stos
push
mov
jge
xchg
adc
cmp
mov
mov
cwtl
sub
cmp
add
xlat
out
arpl
push
clc
pop
cmp
fcomip
add
xchg
mov
in
push
sbb
lcall
jmp
rcrl
je
xor
in
stos
std
xchg
mov
adc
or
jns
sbb
and
inc
mov
jge
pop
mov
sarb
or
inc
popf
xchg
inc
push
and
lods
and
pop
sbb
sbb
scas
movsb
lods
dec
rclb
add
dec
out
cwtl
aad
mov
pop
cmc
pop
push
xchg
cmp
cli
pop
mov
sbb
jmp
shrb
out
lods
lock
arpl
mov
rorl
icebp
andl
call
cld
call
pop
lret
data16
fisubs
pop
into
pusha
lea
cltd
jno
cmc
pop
hlt
incl
lret
les
dec
fcmovne
jne
fwait
int
dec
icebp
enter
fcomip
pop
jb
stos
add
gs
pop
lea
fisubrs
add
adc
lcall
xor
inc
icebp
andb
xor
and
adc
fimuls
cld
ljmp
inc
xor
movsl
mov
sbb
mov
es
int3
xor
shl
leave
call
cwtl
stos
push
int
xchg
insb
inc
dec
mov
out
aas
inc
cli
stos
loope
mov
sub
mov
enter
jecxz
leave
imul
in
fbld
pushf
in
outsl
movsb
cmp
cmp
daa
jp
hlt
dec
jbe
cmp
pushl
in
add
or
and
lods
aas
dec
mov
mov
insb
inc
decb
mov
pushl
nop
mov
jbe
js
scas
loopne
in
out
mov
and
jg
aad
sbb
sti
mov
out
fldenv
dec
pop
cmpsb
stc
imul
inc
inc
add
into
jmp
sub
mov
xchg
rol
popf
sub
fs
jbe
sbb
cli
lcall
iret
adc
cltd
loopne
repz
fisubs
sbb
out
dec
cmp
jmp
mov
push
cs
adc
cmc
dec
mov
in
cld
iret
lcall
imul
inc
stc
iret
rorb
push
mov
mov
sbb
cld
ficoms
dec
push
mov
jg
push
outsb
lock
sbb
sarl
sub
xchg
stc
shlb
cmp
and
aad
incl
xor
scas
fmul
je
stc
mov
xchg
mov
push
dec
test
jg
lret
jne
in
gs
inc
jbe
adc
lock
addr16
lcall
jbe
mov
xchg
jp,pt
inc
call
faddp
xlat
push
scas
mov
repz
sti
repz
push
sbb
sub
mov
fstl
inc
aad
sub
pop
imul
cmp
pop
mov
lcall
jl
add
mov
add
sub
mul
notb
ja
dec
int3
cli
ss
out
nop
in
pop
test
jmp
fistpl
movsb
icebp
mov
pushf
sub
adc
and
push
movsl
xor
iret
xchg
push
jmp
outsb
push
xchg
in
xchg
mov
and
pop
js
inc
mov
in
pop
std
cmpsb
inc
sub
inc
sub
xlat
lods
cwtl
mov
fcompl
jbe
jns
xchg
call
pushl
jp
xchg
stc
sti
rolb
outsb
sub
or
test
mov
mov
cmp
in
mov
mov
insl
adc
xchg
repnz
or
lahf
movsb
inc
mov
mov
repz
ficoml
sarb
icebp
cmpb
repz
jns
movsl
fiadds
jbe
inc
enter
pop
leave
cmpsl
adc
les
ljmp
movsb
cwtl
push
xchg
jne
xor
jg
sbb
jg
jne
stos
movsl
pop
add
nop
inc
fdivrp
lcall
cwtl
add
outsl
int3
outsb
dec
inc
dec
shl
pop
cwtl
dec
imul
adc
push
cmp
addr16
jmp
xor
insb
cmp
push
dec
inc
aam
sub
aaa
outsb
neg
adc
pop
push
pop
aas
mov
dec
loopne
mov
lret
dec
cmpsb
icebp
cli
mov
cmp
mov
jge
sbb
fisttps
ljmp
subb
int
test
mov
sub
clc
stos
fsubrs
inc
push
xchg
cmc
push
dec
popa
xor
arpl
adc
inc
idivb
shrl
loop
sub
xchg
incl
filds
mov
fcoml
sahf
push
mov
cli
clc
decl
add
pusha
mov
add
mov
adc
outsl
jp
pop
test
jo
call
ret
mov
call
aam
jno
cmp
inc
enter
xchg
push
nop
aad
incl
lods
punpckhbw
test
aam
pop
jmp
xor
pop
sub
decl
xchg
pop
sbb
and
clc
cltd
fs
cli
in
jno
xchg
hlt
fwait
cmp
decl
shrb
jle
jnp
test
and
jge
dec
cmp
out
jno
pop
xor
mov
call
std
inc
or
movl
adc
mov
cmpsb
dec
movb
lds
cld
jmp
push
jo
fnsave
adc
jl
and
jg
ja
inc
adc
dec
inc
mov
sub
jg
rcrb
cmpsb
fwait
push
daa
cmpsb
aad
shlb
ljmp
arpl
xlat
lock
std
mov
or
lea
sbb
push
pop
jnp
add
inc
into
dec
and
fbld
testb
shrb
xchg
pop
hlt
incl
jns
sbb
scas
xor
repnz
cmp
dec
adc
test
cmpsb
mov
or
pop
add
icebp
jb
addb
shll
mov
ljmp
cltd
jecxz
mov
test
mov
daa
lcall
dec
sbb
lcall
xchg
rorb
or
add
mov
dec
fnstcw
mov
dec
xchg
cmpsb
cmp
scas
jae
xlat
fildl
mov
frstor
pushf
cs
aam
sbb
mov
push
stc
jp
lcall
adc
in
int
push
in
scas
sbb
jbe
popa
jecxz
mov
and
xchg
dec
out
jmp
sbb
mov
and
outsb
mov
xchg
cwtl
ss
mov
in
and
call
das
lret
hlt
pop
jne
test
js
call
pushf
or
adc
inc
leave
leave
sbb
call
adcl
sbb
adc
xchg
incl
xor
mov
in
inc
mov
out
in
push
jge
pop
pushf
notb
sbb
jge
sbb
or
add
outsl
sti
pushl
or
rcrl
mov
mov
xor
mov
mov
stos
inc
out
scas
clc
call
insl
sub
xor
adc
jmp
push
es
jle
fdivr
mov
mov
add
stc
icebp
mov
mov
loopne
pusha
mov
sar
jmp
mov
cld
lock
mov
js
into
pusha
ds
add
pushf
test
and
jmp
mov
push
pop
aad
je
sub
push
pop
push
repnz
mov
imul
call
or
mov
insl
cltd
jle
pop
xor
or
repnz
push
nop
mov
call
imul
jae
jmp
pop
shrb
mov
and
outsl
ljmp
mov
repz
loop
xchg
in
shl
js
aaa
or
and
mov
cmp
xor
lret
cmp
cmp
cltd
xor
pop
dec
ljmp
jmp
jl,pn
jg
or
aas
mov
lcall
cmpsl
les
sub
fisttps
dec
mov
test
fisubrs
sub
xchg
jp
lea
mov
and
xor
jns
sbb
mov
add
xor
in
call
jp
popa
movswl
shll
pop
shll
jno
pop
filds
cmc
xor
sbb
jle
inc
xchg
push
pop
mov
dec
push
mov
or
adc
dec
push
lcall
pushf
adcb
andl
cltd
adc
call
push
ljmp
cmp
or
fstp
push
push
sahf
mov
push
cli
lcall
fnstcw
adc
and
push
jo
das
lock
sbb
jmp
ljmp
xchg
cmc
mov
sbb
jb
mov
add
decl
mov
dec
jo
sbb
cmp
addl
adc
aas
and
push
addr16
ljmp
incb
je
xchg
cmp
mov
lea
call
jne
mov
std
pushl
dec
cltd
repnz
nop
mov
shrb
xchg
lods
mov
jbe
push
js
mov
push
lret
add
mov
sub
cltd
jnp
jno
pop
adc
sbb
loopne
fidivs
or
fnsave
lret
lcall
shll
sbb
pop
daa
sbb
js
sbb
inc
pop
adc
pop
inc
xchg
jmp
ja
neg
fnstcw
out
mov
mov
sbb
mov
stos
push
or
out
sub
pusha
dec
pop
jmp
in
mov
cli
fwait
ret
outsl
pop
leave
and
mov
call
add
jl
outsl
fidivl
sbb
sbb
gs
call
cli
jae
lret
ljmp
call
popa
subl
fbstp
int
xor
add
mov
pushl
out
bound
scas
jbe
mov
push
int3
mov
test
imul
mov
call
inc
sbb
loopne
fidivs
mov
out
xchg
je
movsl
rol
push
xchg
shl
cmp
sbb
push
inc
push
lret
mov
lcall
mov
xchg
mov
xchg
cmp
jg
shr
push
fisubrl
or
fdivs
push
adcb
dec
icebp
mov
cmp
jg
jmp
out
sahf
scas
insl
cld
loopne
adc
inc
adc
sbb
or
cmpb
cmpsl
inc
push
sbb
and
movsb
fsubrl
mov
bound
movsb
add
mov
add
call
sbbb
jns
xor
aad
or
data16
js
mov
incl
cmpsl
je
xor
jns
test
jp
rclb
aaa
add
mov
mov
pop
ja
icebp
lcall
pop
and
pop
insb
fistpll
notb
jmp
je
pop
aaa
sub
cmp
stc
and
insb
mov
pop
sbb
sahf
roll
call
loopne
fsubl
int3
sub
adc
jmp
jb
dec
mov
fsub
mov
cwtl
mov
mov
jg
mov
lret
inc
ljmp
iret
push
pop
jae
push
mov
cmc
scas
clc
mov
aam
sbb
icebp
inc
inc
inc
cmp
incl
dec
cmp
js
fwait
lods
cmp
orb
xor
mov
xchg
mov
push
sbb
std
aaa
insl
mov
sbb
mov
sub
fcomip
lcall
pop
dec
sarb
sub
mov
fcompl
outsl
test
mov
std
jg
jmp
jns
adc
mov
test
sbb
add
jne
pop
in
in
xchg
xor
pushl
stos
insl
cli
sub
out
sbb
setl
dec
sahf
adc
xchg
jecxz
sub
dec
fwait
movsl
mov
test
fcomip
bound
or
jl
push
cmp
pop
pop
push
jecxz
jge
ja
fwait
cli
dec
add
fsts
jg
mov
je
outsb
xor
pop
mov
push
shr
sbb
mov
fisubs
pop
add
add
loop
movsb
ffreep
lahf
mov
mov
cmc
mov
loope
and
push
mov
sub
inc
dec
cmpsl
mov
out
sub
in
cmp
mov
int3
jl,pt
mov
mov
push
int
lods
sbb
adc
into
sarl
cs
fadd
push
mov
jb
stos
jg
ds
mov
adc
imul
jbe
in
roll
nop
stos
or
lcall
add
sbb
cwtl
mov
cmpsl
cltd
add
outsl
incb
addr16
fstp
mov
sbb
mov
fidivrl
testb
insl
call
or
je
imul
rolb
movsb
inc
fcmovnb
out
loopne
mov
scas
xor
lahf
pushw
and
dec
repz
xor
jo
repz
lods
fists
int
push
sbb
jno
xor
sbb
or
repz
and
cld
iret
or
popf
adc
cmpsl
push
dec
adc
mov
test
or
ljmp
mov
ret
dec
push
fstpt
pop
sbbb
mov
nop
add
insl
mov
jg
jmp
xchg
push
or
jno
inc
call
decl
sar
xchg
adc
add
addl
lods
and
xchg
outsb
int
and
jno
inc
das
sub
mov
xchg
add
mov
les
pop
and
jns
bound
pop
gs
push
dec
adc
mulb
in
push
fcomps
sub
fcoms
jns
push
xor
decl
mov
xchg
cmc
pop
scas
mov
mov
mov
sbb
mov
ljmp
cmp
sahf
jae
cmp
push
loopne
push
insl
out
lock
adc
test
decl
xchg
jb
pop
lret
xor
loopne
out
mov
cmp
cli
movsb
lea
or
stc
mov
lret
je
ljmp
push
fdivl
adc
pushl
push
xor
in
add
popf
adc
pusha
pop
in
jo
jne
cmp
test
jp
int
dec
shrl
mov
inc
popf
cmp
xor
scas
repz
mov
inc
cmc
push
outsl
in
or
cmp
mov
push
test
jecxz
add
pop
int
dec
or
jmp
imul
xorl
pop
jg
lcall
enter
mov
mov
sbb
in
mov
test
mov
popf
iret
cmc
xchg
adc
stos
stc
pop
xchg
sub
xchg
mov
pushl
out
cmp
add
int
mov
fcomps
ljmp
fisttpll
nop
in
xchg
movb
adc
sub
mov
mov
iret
cmp
mov
movsl
sti
fmull
leave
cmp
add
inc
lods
pop
into
xchg
shlb
je
dec
jle
mov
push
xchg
les
popf
cmc
cmpsl
pop
push
cli
sti
aaa
sub
ja
xchg
xchg
xchg
cmp
cmp
call
std
aaa
dec
dec
dec
pop
push
push
scas
sbb
jge
cmp
sub
mov
push
cwtl
dec
pop
fisubl
inc
inc
scas
push
test
inc
adc
js
inc
lods
call
stos
lcall
jle
xor
sbb
dec
ds
push
scas
imul
jno
cmp
jb
das
sub
inc
xlat
in
movsb
and
decl
xlat
push
and
stc
movsb
scas
nop
fsubrl
xchg
addb
and
lcall
push
lret
sub
mov
jg
pushf
cld
or
xor
lret
pop
pop
cs
sub
rcrl
mov
adc
xor
jmp
mov
sbb
pop
hlt
loopne
push
clc
in
pop
cmc
sbb
decl
int3
push
push
aad
xor
icebp
xchg
sti
cmp
push
aam
lcall
mov
sub
mov
ret
sbb
sarl
mov
pop
incl
jl
add
out
pop
fadds
fnstcw
pop
sbbb
je
cmp
fsts
and
pop
xor
pop
adc
or
push
push
mov
and
sub
jmp
outsl
lods
out
xchg
adc
adc
pop
push
mov
jp
sarl
mov
or
inc
call
icebp
fwait
outsl
and
shrb
xchg
cs
jmp
cli
out
aaa
int3
sbb
mov
xor
inc
adcb
outsb
sub
sbb
ret
sbb
stos
pushl
in
inc
lret
inc
rcrb
mov
cmpsl
mov
outsb
xchg
mov
and
in
add
stc
shl
inc
jne
and
ja
mov
outsb
cs
je
ljmp
push
out
mov
xchg
dec
pop
dec
push
clc
pop
fcoms
loop
nop
jne
mov
fldcw
data16
cmpsb
mov
lcall
in
cmp
lret
lahf
mov
jno
jb
out
mov
sarl
mov
push
add
or
xor
mov
mov
inc
xlat
inc
das
fdivrl
je
call
cwtl
testb
xor
decl
test
cmp
xor
test
cltd
pusha
ljmp
pop
inc
jnp
cld
fidivs
cltd
pop
mov
and
decl
pushl
or
bound
add
or
lcall
outsb
and
int
or
mov
int
rcl
xor
pop
sub
mov
outsl
xchg
jbe
fistpll
shrl
movb
mov
jo
outsl
cmp
in
scas
out
mov
jecxz
imul
mov
call
adc
push
dec
inc
xchg
pop
push
or
push
sub
enter
pop
inc
push
jae
arpl
jmp
gs
daa
rcll
inc
fcmovnbe
fs
pop
sbb
mov
cmpsb
fldl
repz
int
cmc
and
mov
ss
js
cmpsb
decl
jge
inc
dec
dec
mov
add
push
jbe
scas
mov
arpl
imul
inc
mov
aaa
lahf
iret
dec
push
ret
mov
pushl
aas
mov
sahf
push
adc
inc
loopne
outsb
std
inc
sub
cmp
leave
xchg
ror
shll
xchg
je
or
jp
rcl
shrl
imul
aam
xor
scas
call
call
in
xchg
xor
dec
scas
popf
outsl
std
lods
add
mov
ljmp
cmpsb
mov
sbb
cmpsb
add
pop
xor
push
stos
cmp
sar
mov
out
shlb
ja
or
lcall
xor
jae
iret
inc
jecxz
pop
lods
xlat
bound
sbb
in
fdivs
push
xchg
jge
js
ljmp
pop
loopne
stos
test
dec
add
or
jl
mov
push
int
mov
mov
xchg
cmc
das
clc
decl
lret
iret
mov
sbb
repnz
sbb
lcall
cmpsb
rcrb
dec
orb
loop
rcll
pop
push
fistl
pop
mov
call
dec
and
sbb
mov
ljmp
pushf
mov
mov
xor
lcall
cltd
in
mov
mov
cmp
sub
movsb
mov
lret
out
cli
test
sub
shll
jnp
fbstp
dec
pop
in
daa
cmp
push
lcall
sub
dec
repnz
aas
sub
sbb
es
mov
adc
mov
out
ret
mov
pushl
prefetch
or
incb
mov
fcomps
add
adc
xchg
scas
and
mov
fcmovnbe
push
adc
lcall
inc
jp
push
out
mov
icebp
lret
dec
outsl
movsb
xchg
mov
lds
mov
not
push
sbb
or
add
mov
sub
cwtl
fcmovbe
fucom
and
fwait
loopne
xchg
in
adc
test
lods
add
in
icebp
mov
jmp
jg
jbe
jns
push
push
shl
imul
jb
daa
add
adc
jmp
inc
out
sub
repz
js
mov
jbe
fiaddl
mov
sub
int
hlt
cli
adc
jmp
stc
adc
sbb
xor
idivl
jbe
adc
mov
cwtl
xchg
ret
push
imul
out
jbe
unpckhps
or
push
jp
xchg
in
sub
stc
pop
ret
sbb
jl
adc
ljmp
test
pop
push
pop
sub
cmp
pushf
and
pop
mov
mov
jmp
pop
std
out
psrlw
or
cmpsl
dec
cmp
js
xorl
clc
dec
push
shrl
sbb
dec
aam
inc
mov
add
out
stos
loop
fs
mov
nop
mov
add
mov
lods
xchg
and
mov
mov
mov
loopne
push
inc
push
stc
hlt
stc
push
inc
iret
adc
mov
or
push
lret
addr16
mov
push
in
jg
popf
xchg
fyl2x
sbb
cli
lret
xchg
cmc
sub
dec
fldt
xchg
les
mov
popl
adc
pop
dec
aad
or
ret
shlb
movsb
cmp
sub
jbe
jnp
pop
mov
xchg
and
lcall
inc
xchg
push
rorb
xchg
repnz
sahf
jo
mov
scas
mov
int
or
dec
add
pushl
fidivrl
in
stc
clc
lods
cmp
mov
xchg
lea
dec
mov
mov
incl
iret
pop
aas
sub
daa
jno
test
inc
in
adc
ficoms
jmp
xchg
imul
lret
sbb
lods
mov
cmpsb
sbb
inc
lods
push
cmpsb
data16
stos
inc
mov
outsb
inc
sub
cld
call
incl
pop
xor
jnp
lods
xor
sbb
dec
fistpl
mov
cmp
sbb
pop
lcall
add
jmp
sbb
xchg
hlt
ja
fistl
push
xchg
out
stc
lcall
jno
jl
xchg
xor
xor
loop
imul
stc
cld
stos
mov
pushl
add
push
cmc
sbb
pop
mov
pop
push
or
jns
ret
lcall
aam
pop
ljmp
mov
subl
cmc
adc
mov
incl
lahf
xor
in
aad
lea
xlat
int
xchg
sub
pop
inc
jl
outsl
clc
jmp
cmpsb
movsl
sbb
push
pop
sbbb
cmpsl
in
iret
pop
and
das
decl
inc
test
cmc
fisubl
enter
mov
sarb
push
arpl
incl
jnp
dec
xchg
adc
leave
imul
mov
push
xor
aaa
mov
add
jg
out
mov
dec
sbb
lods
aas
shlb
fisttps
dec
jg
lcall
mov
sub
test
pop
insl
fucomi
cmp
pop
mov
gs
push
adc
cmp
or
fsubrp
nop
mov
imul
inc
lret
lret
sbb
fwait
jnp
std
fildll
push
and
call
push
faddp
push
mov
sbbl
add
and
ljmp
adc
dec
shlb
cmp
call
xlat
fists
in
mov
push
call
js
or
loopne
clc
ljmp
fdivrl
rcll
leave
pop
mov
sbb
pusha
and
jg
adc
jge
jno
bound
insb
and
mov
sbb
lret
fsubrs
inc
popa
jb
add
push
sar
xchg
xchg
lret
jp
call
adcb
sub
mov
shlb
jae
cmp
sbb
call
out
adc
nop
fimuls
lcall
mov
push
insb
ljmp
jp
ljmp
int
push
cltd
and
inc
in
mov
lret
lods
mov
jae
arpl
xor
dec
das
inc
jl
push
fisttpl
mov
jmp
shlb
jno
mov
push
cmp
pop
repz
mov
pop
aaa
mov
xor
add
cmp
loop
bound
pop
add
dec
jnp
call
fisubs
lcall
int
xchg
lea
leave
lcall
scas
dec
pop
dec
stos
cli
ret
lods
adc
adc
in
in
lds
inc
mov
and
jmp
stos
lea
jg
scas
cmpl
and
dec
roll
imul
or
push
and
cs
int
cmp
adc
fisttpll
sbb
ljmp
and
loop
xabort
and
mov
cmp
or
mov
call
fwait
adc
add
inc
aaa
rcrl
push
mov
and
fstpt
into
cmp
mov
test
push
jge
mov
sbbb
das
cli
cwtl
sarl
dec
out
sbb
jno
lcall
loopne
mov
sbb
es
cmp
out
cmp
mov
sub
es
mov
pushl
mov
negb
pop
into
cmp
fsubs
shr
xchg
call
inc
sahf
stc
pop
jge
xchg
xor
pop
loopne
cmpsl
pop
xchg
mov
sub
mov
and
sub
rcrl
loop
loopne
outsb
lahf
mov
incl
mov
xor
cs
xchg
sub
sub
inc
cld
add
sahf
in
pusha
sbb
jmp
sub
add
dec
mov
adcl
xlat
aam
call
jge
mov
push
int3
adc
mov
aad
dec
int3
xor
fldenv
les
xor
pop
lcall
cmpsl
pop
loop
cli
call
mov
cmpsl
xor
adc
scas
aas
mov
in
xorb
lcall
dec
ja
pop
inc
dec
push
enter
dec
outsl
imul
dec
outsb
scas
pop
push
icebp
fildl
lea
adc
sub
cmpsl
lcall
into
push
cwtl
add
push
xchg
jae
add
gs
aas
int
inc
xchg
and
xor
dec
jns
stos
push
ficoml
sahf
subl
mov
fsubl
scas
jg
inc
inc
mov
pop
add
incl
outsl
push
scas
push
ret
lahf
pop
jne
loop,pt
jnp
ds
mov
jg
addr16
decl
jo
push
pushf
fdivs
cmp
lods
cmp
cld
lods
mov
mov
test
test
jg
test
jp
es
lock
call
test
into
mov
pop
jb
sub
mov
scas
es
add
mov
mov
push
jns
mov
jnp
lds
inc
jbe
add
push
xor
loopne
shr
mov
fnstenv
or
ljmp
jae
jle
push
pop
mov
lock
in
push
adc
outsb
sbbl
add
dec
dec
jb
lock
lcall
arpl
xchg
pop
xchg
popf
add
mov
sbb
mov
inc
jg
mull
cmpsl
das
mov
aas
xchg
mov
sbb
decl
pop
aad
test
loopne
and
and
mov
clc
fistps
lcall
or
jmp
jmp
test
std
jmp
mov
xchg
lods
sbb
arpl
and
and
fnsave
orl
inc
jmp
sahf
xor
pop
insb
adc
and
retw
clc
push
jg
add
std
push
mov
int
mov
insl
pop
loopne
pop
inc
mov
insb
cmp
movsl
sbb
inc
jno
sub
lcall
or
pusha
repnz
and
xor
mov
dec
xor
xchg
out
mov
mov
sub
add
ljmp
xor
addr16
fucom
pushf
shll
ret
mov
add
mov
pushl
jg
push
out
andl
ljmp
lods
ss
inc
add
pusha
push
or
lods
cwtl
sub
lret
mov
push
fsubrs
fsubrl
or
jp
in
fistps
adc
fdecstp
cltd
push
pop
sbb
aas
pushf
loop
push
mov
mov
mov
bound
ds
in
jle
mov
lods
leave
mov
jge
jmp
xor
call
inc
cwtl
dec
jbe
pop
arpl
hlt
mov
cmpsl
jbe
and
clc
dec
adc
jge
je
je
icebp
pop
mov
jg
sarl
in
xchg
dec
mov
mov
mov
inc
jecxz
xchg
call
dec
enter
std
pop
rcrl
sub
insl
xor
out
pusha
test
stc
pushf
mov
mov
jns
outsl
clc
call
pop
mov
insb
cmp
push
pop
out
xchg
add
iret
pop
adc
es
lret
and
mov
mov
adc
jne
int3
dec
pop
jp
push
pushf
roll
nop
cmp
sti
xor
leave
cmp
cld
jmp
notl
or
xor
in
xor
xor
cwtl
jbe
pushl
lock
pop
pop
aad
fsts
leave
jl
push
lret
iret
cmc
jnp
stos
push
cli
fidivrs
mov
lcall
mov
sbb
lds
enter
ret
inc
jae
push
dec
stc
push
push
leave
es
movsb
and
pushf
lret
enter
sti
data16
jbe
mov
je
cmpsb
daa
cwtl
mov
mov
adc
xchg
sbb
and
and
aas
xchg
jg
cwtl
fistpl
pop
jmp
sbb
add
push
sbb
ljmp
and
push
cmpl
inc
call
ljmp
dec
pop
out
cmp
aad
out
addl
adc
lds
out
sbb
dec
fucom
cmpsl
mov
decl
jle
cmp
fstpt
cmp
xchg
sub
dec
sub
adc
lcall
out
sahf
sbb
or
mov
jmp
into
push
cmp
or
stc
pop
mov
ljmp
sbb
fwait
mov
xchg
sbb
scas
push
lret
pop
das
push
sub
shrb
pop
xor
call
jp
mov
sbb
adc
mov
clc
icebp
pop
mov
xchg
jecxz
icebp
dec
dec
push
cmp
je
push
into
jns
push
aaa
out
negb
jne
add
pusha
ret
fcomip
ljmp
push
inc
aas
xchg
mov
push
mov
push
jno
into
mov
mov
and
pushl
xorb
mov
daa
sbb
or
or
or
lcall
and
addb
mov
fwait
outsb
lcall
xor
cwtl
xchg
jle
and
mov
mov
lds
adc
aaa
jle
lods
test
decl
add
jnp
xchg
push
ds
cmp
scas
ret
fbld
lahf
inc
fstpl
inc
cmpsb
add
call
dec
aam
or
sub
inc
xchg
xchg
jo
push
int3
inc
push
inc
adc
imul
mov
or
movsb
imul
adc
mov
leave
cli
call
dec
mov
mov
cmp
test
mov
push
lcall
cmpsb
pop
dec
xor
sbbl
repnz
dec
hlt
cltd
mov
ljmp
sar
sbb
pop
and
sub
push
fs
fs
mov
popa
bound
and
xor
ret
sub
add
jle
adc
jne
test
push
call
aam
cmc
add
pop
mov
popa
and
bound
in
mov
dec
adc
adc
sub
push
nop
push
ljmp
xchg
sub
sub
sahf
and
xchg
mov
adc
mov
pop
xchg
repz
mov
pop
shlb
das
rolb
push
les
pop
pop
mov
cld
mov
mov
inc
jl
dec
addr16
in
out
sbb
movl
xchg
jle
xchg
and
sbb
inc
fildl
adc
pop
test
dec
jg
das
mov
pop
xchg
fidivs
fistpll
xchg
bound
mov
ds
dec
jg
push
cmp
jmp
loop
and
push
mov
xor
mov
cmp
sub
push
mov
or
fstl
outsl
cld
jno
subl
dec
dec
inc
sahf
je
xchg
xchg
test
or
fucomi
pop
inc
icebp
enter
xchg
push
push
imul
clc
mov
sbbl
sub
sub
cld
adc
popl
aaa
mov
iret
xchg
mov
in
sub
pop
inc
test
xchg
test
gs
in
pushf
and
mov
dec
decl
push
inc
insb
pop
jecxz
and
and
inc
inc
testl
cld
push
sbb
movsb
std
out
gs
in
push
adc
int
push
cmc
hlt
sbbl
data16
in
jns
dec
adc
decl
xchg
imul
inc
int
xchg
and
push
mov
cmc
or
jmp
loopne
sbb
arpl
mov
or
es
mov
jbe
addr16
std
pop
xchg
cmp
mov
ret
insl
popf
mov
pop
into
jnp
nop
and
or
push
mov
xor
dec
dec
lock
call
mov
repnz
pop
imul
push
clc
out
clc
or
shrb
out
icebp
push
push
repnz
ret
stos
loop
xchg
push
fdivr
jg
incl
lret
pusha
lcall
mov
lea
push
mov
lcall
bound
imul
dec
xchg
or
dec
push
arpl
dec
mov
jle
lcall
ljmp
mov
add
aaa
adc
lret
daa
and
push
pushl
xor
push
sub
jmp
fcompl
mov
adc
stos
popf
dec
add
mov
jmp
push
aam
fwait
pusha
int
pop
clc
repnz
dec
inc
movsb
arpl
push
decl
pop
mov
add
incb
adc
cmc
scas
jg
jae
out
shr
leave
pop
mov
inc
jo
lcall
inc
out
mov
fildll
mov
mov
testb
fsts
ljmp
push
outsl
je
mov
and
lea
mov
insl
jbe
test
xor
leave
xor
call
adc
mov
jno
lret
mov
push
pop
fidivrs
int
xchg
enter
sbb
jg
outsb
jmp
std
clc
mov
cmp
cmp
and
xchg
adc
and
out
ret
xchg
ja
call
ret
mov
lret
push
lods
pusha
arpl
or
hlt
faddl
inc
test
lret
repnz
in
mov
or
repz
shl
sar
cs
clc
sub
ss
dec
out
or
ljmp
cmc
jle
and
scas
adc
xchg
loope
rcr
rclb
in
mov
pop
mov
bound
or
and
ljmp
cmp
mov
or
ds
jmp
leave
jmp
test
sbb
mov
outsl
aam
add
sbb
clc
jmp
pop
jne
push
sub
int
dec
adc
sub
mov
scas
in
pop
leave
arpl
incl
mov
inc
mov
movsl
pop
outsb
sbb
xchg
fistpl
pushl
add
mov
sbb
rorb
sbb
ljmp
pushl
mov
aaa
out
negl
call
test
jecxz
rorb
push
xchg
mov
adcb
gs
xchg
xchg
or
xor
scas
nop
iret
fmull
sbb
ljmp
hlt
mov
pop
fnstcw
pop
xchg
les
mov
popf
and
decl
adc
push
rolb
inc
mov
jnp
pop
mov
and
clc
pushl
cmp
push
movsb
in
mov
jmp
cmc
mov
fildll
mov
fisubrl
xchg
and
pushl
sbb
jns
inc
xor
insl
test
into
inc
dec
push
mov
jmp
sbb
xor
pushf
pusha
lods
outsb
enter
mov
adc
inc
int3
push
push
call
xchg
adc
nop
jbe
xchg
and
je
scas
outsl
push
hlt
int3
sarb
imul
xchg
adc
je
mov
pop
sub
dec
dec
das
dec
mov
incl
xlat
or
mov
sub
or
xor
xor
in
push
mov
lcall
mov
outsl
jns
jne
xchg
hlt
xor
enter
ficoms
mov
jns
dec
pop
inc
pop
stos
jo
ret
sbb
jbe
pop
mov
dec
out
xorl
cmpsb
sarb
ss
pop
xor
call
push
xchg
dec
pop
push
je
outsl
stos
sbb
and
fisubs
add
les
loopne
xor
sub
push
pop
or
aas
add
dec
xchg
cmp
adc
dec
ljmp
lcall
std
aas
push
arpl
cld
rcll
les
and
and
ret
aad
std
daa
into
push
rcrl
lret
xchg
push
inc
das
insb
pop
lret
lds
mov
and
add
popf
push
sub
mov
jno
inc
sub
mov
out
cmp
daa
jb
aad
nop
ja
mov
cs
mov
adc
in
push
sub
xchg
jl
inc
or
daa
in
sbb
lcall
xor
dec
pop
repz
aad
loop
push
inc
mov
pushf
icebp
xchg
xchg
sbb
push
mov
loope
jg
mov
aas
sub
sbb
cmpl
mov
je
daa
xchg
test
sub
inc
xor
jmp
dec
and
fwait
jae
xor
inc
ja
out
fisubrl
xor
push
dec
sbb
out
dec
mov
ja
call
push
push
inc
shr
xor
sbb
mov
adc
pop
inc
mov
push
pop
cmpsl
and
out
popa
xor
addr16
jno
std
lcall
bound
mov
jo
in
and
xchg
mov
stc
xchg
aaa
lret
clc
pushl
ds
pop
lds
sbb
iret
xor
nop
pop
push
jmp
xchg
add
sbb
ja
jg
je
dec
hlt
mov
push
das
push
push
pop
mov
pusha
mov
ljmp
clc
fldenv
pop
sub
mov
ds
xchg
sbb
xchg
xchg
cmp
and
dec
js
push
test
daa
sbb
andl
std
adc
xchg
push
jmp
lods
cltd
push
jnp
push
xchg
loopne
mov
or
and
pop
ss
xchg
aad
jg
decl
and
sbb
movsb
negl
add
addr16
sbb
in
call
sbb
adc
and
stos
sbb
inc
outsl
jecxz
test
lahf
pop
pop
lahf
std
out
xor
mov
mov
xchg
cld
cmc
clc
sbb
inc
jo,pn
and
movsl
fs
add
adc
clc
ljmp
mov
cmp
dec
ljmp
push
inc
lahf
incl
jb
cmc
lds
dec
sub
outsb
scas
sbb
mov
cmpsl
lock
incb
push
test
lret
mov
icebp
push
or
pop
mov
and
and
xchg
lea
jge
dec
sbb
cli
lds
add
cmp
sahf
lods
cmp
call
cmc
loop
pop
push
fmuls
rcll
pusha
inc
dec
pop
cld
sub
pushl
adc
inc
or
cmc
mov
decl
cli
cmc
das
cmp
rclb
jnp
sub
lcall
pop
repz
ljmp
shl
xchg
jbe
sub
sub
imul
stos
incl
jecxz
xor
ret
jle
push
popf
cwtl
push
jp
cmpsl
dec
sub
push
into
sub
jmp
pop
mov
dec
call
jne
sbb
jmp
inc
cmc
out
sar
mov
push
sub
push
jbe
sbb
fwait
loope
movsl
inc
aam
cltd
mov
hlt
enter
daa
adc
testb
jns
xor
xchg
jae
fisttps
mov
in
mov
mov
and
inc
lds
pop
loope
adc
clc
pop
cmc
inc
mov
and
mov
or
mov
inc
sbb
daa
incl
nop
std
xchg
inc
or
fldenv
lds
dec
decl
test
test
xchg
jl
mov
into
je
push
mov
mov
dec
icebp
ret
mov
call
pusha
add
or
jmp
push
cmp
mov
in
pop
scas
jnp
mov
inc
imul
aaa
inc
sti
or
mov
je
decl
sbb
imul
ret
outsb
cld
cmp
jbe
decl
jecxz
lret
dec
testw
data16
sbb
idivb
mov
cmc
xlat
pop
es
jbe
aam
or
je
add
mov
fnstsw
cltd
int
mov
cmp
ljmp
int3
jb
dec
jge
adc
sbb
mov
and
fsubrl
sar
lcall
push
or
movsb
ss
mov
cwtl
lods
imul
in
ret
int3
divb
pushl
sahf
jl
mov
mov
jo
xchg
int3
stos
mull
mov
or
inc
es
pushl
mov
pop
fucomp
hlt
dec
adc
sub
cmp
inc
cmpb
pop
push
ss
mov
or
fcmovne
xchg
cmp
decl
std
out
ja
jbe
add
ja
cmp
mov
mov
call
mov
push
movsl
lods
es
idivb
or
pop
add
cmp
nop
fidivrl
mov
test
hlt
adc
mov
and
add
test
push
aaa
fcoml
out
push
pop
jb
cli
loope
inc
cmpsb
sub
ja
jnp
jb
pushf
das
xor
outsl
xlat
insl
hlt
pop
pop
rcr
stos
sbb
and
jmp
pop
nop
cmp
out
lcall
pop
cmpsb
mov
xlat
xchg
call
xchg
arpl
dec
inc
inc
mov
sbb
inc
xchg
in
lea
push
inc
adc
push
inc
xchg
in
enter
nop
jno
arpl
sub
and
cmp
or
inc
cmp
movsb
and
jb
rcrb
push
add
insb
call
outsb
loope
lcall
clc
shr
scas
fwait
mov
aaa
pop
dec
jne
pop
push
jg
in
out
cli
pushf
adc
int
mov
lods
jg
jmp
xchg
test
popa
cld
cmp
cmc
fcoml
ds
sub
test
cmp
mov
mov
xchg
push
icebp
xor
mov
fdivrl
inc
sbb
mov
pop
sbb
sub
xor
mov
fbstp
add
icebp
sub
sub
jecxz
div
xchg
push
push
sti
mov
stos
adcb
decl
and
daa
addl
mov
fildll
jmp
adc
or
cltd
mov
pushl
in
cmp
repz
sub
dec
icebp
ljmp
data16
adc
ljmp
jg
or
mov
cmp
push
mov
and
divl
imul
add
mov
mov
loopne
xor
inc
xchg
mov
out
test
call
jo
cwtl
call
cwtl
jb
push
call
jecxz
repnz
xchg
mov
push
dec
mov
test
ret
popf
jno
mov
jmp
jp
imull
sarb
dec
pop
and
xchg
or
push
bound
and
xlat
call
xor
pop
mov
aad
mov
jg
out
pop
mov
mov
sub
scas
pop
lds
jge
stos
ss
add
inc
sub
call
insl
add
jne
cli
xchg
or
fsubrp
add
pmaxsw
sahf
and
or
xchg
xchg
push
and
test
call
adc
shlb
jp
ss
sbb
jecxz
sbb
sbb
lahf
xchg
and
jmp
cmpsb
mov
and
sub
mov
aam
rorb
xlat
adc
mov
inc
mov
outsb
les
in
mov
and
push
push
adc
sbb
jl
jp
repnz
addr16
xchg
sahf
imul
pop
jae
jecxz
ljmp
incl
shr
fsubrl
nop
faddl
add
subb
jb
pop
xor
xor
fidivl
clc
cli
jb
sub
jne
mov
push
fcomps
mov
push
mov
pushf
mov
xor
xor
pushl
sbb
or
arpl
push
push
push
into
pop
out
iret
jb
xchg
fimuls
leave
mov
ljmp
sbb
jne
jae
stos
sarl
jmp
call
jo
cld
inc
test
cmpsb
inc
xchg
mov
jmp
sub
mov
call
dec
cmpsl
xor
nop
dec
inc
jge
lods
cwtl
add
test
jo
rorl
mov
lret
inc
jmp
fstpl
shl
adc
sbb
or
push
arpl
pop
outsl
push
xchg
inc
cmc
jg
ljmp
out
xor
dec
dec
arpl
dec
dec
sbb
mov
fistl
lret
cs
and
xchg
and
cltd
cmp
into
push
push
add
xchg
lock
mov
int
or
imul
cmp
in
sahf
mov
or
std
in
or
and
push
loop
fadds
ljmp
push
sbb
stos
cmp
or
xchg
sar
sti
xchg
int3
mov
jo
orb
and
and
call
inc
int3
jnp
test
mov
jecxz
jl
or
std
mov
imul
inc
jle
add
cs
jg
mov
jmp
movsl
mul
repz
inc
adc
pushf
ror
pop
xchg
mov
mov
xor
cmp
jmp
fsubr
adc
inc
adc
mov
jge
jle
adc
pop
push
and
jmp
ret
inc
repz
or
sbb
std
int3
loope
ret
fcomip
jmp
loope
mov
into
sbb
add
xchg
mov
bound
mov
jp
jle
mov
and
call
loopne
pop
and
adc
jb
mov
sarb
mov
fs
mov
cmpsl
cmp
out
push
insl
insl
into
fstpt
lcall
push
into
xchg
aam
adc
cmp
daa
leave
call
xchg
sbb
sbb
shll
js
vmovsd
adc
mov
aam
mov
inc
or
pushl
test
add
cwtl
cmpsl
loope
cwtl
inc
mov
or
adc
pop
mov
lea
cmpsb
int
icebp
sub
enter
test
decl
mov
jge
adcb
xlat
cld
aas
adc
mov
jmp
jp
sub
dec
es
int
jge
fxch
das
stos
ljmp
push
icebp
ds
rolb
in
ljmp
std
mov
test
leave
pop
repnz
iret
popa
mov
jg
or
push
mov
mov
or
aad
mov
lds
inc
pop
mov
push
lods
adc
gs
pushl
shll
enter
icebp
mov
cmp
or
push
lret
push
ds
incl
scas
loopne
pop
movl
loopne
dec
repz
lock
pushl
icebp
mov
and
mov
xor
aad
mov
jmp
loop
outsb
bnd
lods
dec
lahf
ret
call
dec
pop
in
rorb
mov
test
xchg
push
or
icebp
inc
mov
jbe
test
add
in
cmp
xchg
in
jb
push
sub
jmp
repnz
loopne
adcl
mov
bnd
lcall
dec
aad
pop
fists
inc
aam
stos
mov
jno
jge
dec
imul
dec
and
jg
ljmp
jmp
adc
dec
inc
mov
xorb
insl
dec
and
jno
jno
push
lcall
jmp
pop
xchg
sbb
add
pop
add
adc
push
cld
incl
xlat
cmc
and
shrb
cmp
in
shr
das
adc
fstpt
ljmp
movl
add
divl
add
and
rolb
adc
jb
imul
push
xor
pop
pop
cmp
loope
arpl
and
xchg
cmp
ljmp
popf
sbb
fidivs
dec
fldl
outsb
mov
adc
xchg
dec
out
imul
das
lahf
push
jno
jmp
fnstcw
mov
loop
je
or
inc
lds
fcomip
ds
mov
mov
daa
dec
orb
push
xor
pop
push
cmp
mov
in
xchg
hlt
push
cld
pop
mov
mov
jnp
cmpsb
loop,pt
inc
cmp
insl
fmuls
sar
out
dec
lret
pusha
aas
test
push
aad
dec
pop
or
jmp
cli
pop
add
es
insb
adc
pop
pushf
ss
shlb
xor
adc
inc
pushf
mov
or
aad
push
and
push
movl
cmpsl
lods
test
jnp
call
jne
cmp
clc
jle
lahf
cmpsl
xchg
enter
fbstp
add
pop
aam
iret
cmp
mov
je
jle
pop
fcomip
fildll
and
aaa
or
dec
or
mov
pop
xchg
addr16
xchg
pop
inc
mov
scas
int
int3
test
jmp
je
push
fdivs
sub
in
or
add
incl
inc
dec
mov
fwait
sahf
std
mov
addr16
or
test
mov
dec
mov
jmp
fdivl
out
repnz
push
bound
fcomip
push
in
and
adc
lock
sub
or
push
pop
mov
ret
jno
test
mov
vpsadbw
cmp
daa
mov
dec
mov
mov
pop
push
or
fcoms
add
clc
sti
subl
dec
jno
xor
addr16
out
jmp
jae
adc
daa
push
out
incl
mov
lahf
cmp
cmp
push
mov
and
or
mov
popa
or
popf
ljmp
into
les
aam
jg
jp
mov
test
insl
adc
pop
ret
les
lds
imul
mov
bound
dec
decb
mov
pop
hlt
add
iret
outsl
pop
test
fwait
push
and
mov
outsb
or
hlt
pop
pop
xor
add
pop
call
jnp
dec
pop
adc
pop
arpl
pop
jae
sbb
xchg
jbe
mov
fmuls
ljmp
push
cmp
shll
dec
insl
notb
insl
inc
gs
mov
sbb
and
outsl
clc
ljmp
mov
in
repz
int
xor
xchg
in
test
in
call
or
js
repnz
aaa
ljmp
adc
xchg
je
test
lcall
lahf
jne
and
pop
pop
jl
xor
pushl
or
mov
ja
mov
aaa
rcl
xchg
out
adc
out
decl
lods
push
inc
mov
xchg
push
jns
xor
mov
mov
sub
test
jg
call
inc
popf
mov
or
xor
call
or
cmp
outsb
pop
mov
outsb
cmp
pop
pop
jp
sub
test
sub
lcall
test
fists
insl
incb
sahf
sbb
fucom
xlat
add
leave
pushf
sbb
mov
in
inc
inc
mov
adcl
sbbb
xor
jmp
inc
popa
lret
arpl
ljmp
decb
pop
hlt
data16
test
out
adc
sub
mov
cmp
xchg
lods
pop
ja
rclb
bound
data16
mov
rolb
pop
jnp,pn
movsb
or
and
fbstp
or
ljmp
insb
orl
dec
callw
lock
push
imul
xlat
jl
cmpsb
outsl
scas
lcall
js
ret
pop
shll
lahf
push
or
xor
xchg
add
inc
ret
mov
call
push
and
pop
xchg
and
sbb
aas
xor
pop
cmp
jo
out
dec
sub
push
jecxz
call
and
js
cmp
movsb
fcomps
int
pushl
inc
jae
pushl
sbbb
fs
test
call
outsb
pushl
and
addr16
imul
or
mov
inc
ss
adc
sbb
mov
pop
mov
push
shrl
call
mov
jg
sbb
icebp
cltd
hlt
sbb
ret
pop
sti
mov
decl
adc
idivb
and
movsb
push
inc
movsl
xor
addr16
pop
cmp
xlat
mov
fldcw
add
xor
ljmp
mov
ja
jmp
sbb
push
sub
adc
sbb
and
or
push
jnp
mov
lcall
pop
jg
mov
jae
fistpll
jl
push
aaa
jmp
or
loop
bnd
rcll
decl
sub
sub
repz
mov
fisubl
and
jmp
push
mull
ljmp
jnp
fwait
into
and
lret
push
sub
ds
test
sti
and
test
inc
sub
les
pusha
mov
fldcw
cmpsb
jmp
add
adc
aaa
sbb
push
jg
xor
xor
pop
mov
pop
push
sbb
mov
ljmp
push
std
jnp
pushf
rcll
pop
or
xchg
adc
push
dec
fstps
lret
bnd
mov
int
xchg
sahf
jne
cli
sti
xchg
jle
ficompl
pop
lcall
movsl
adc
jno
mov
dec
mov
jo
pop
or
inc
and
push
cli
mov
lcall
popa
test
inc
cld
adc
rorl
xchg
xor
jns
pop
sbb
mov
popf
in
arpl
call
imul
lret
cli
aam
frstor
mov
mov
lcall
xchg
inc
jl
inc
call
pushf
or
xor
adc
mov
mov
call
push
adc
outsl
xchg
add
or
dec
movsl
inc
mov
push
addr16
pop
mov
sbb
cmp
nop
mov
hlt
sarl
outsb
push
xor
add
out
aam
push
cmpsl
and
mov
push
xchg
int3
xchg
xor
mov
adc
sbb
ja
movsb
fists
cltd
sub
das
fimull
xchg
mov
loopne
imull
fldcw
jno
pop
sar
sbb
cmp
insl
push
leave
decl
shl
inc
dec
pop
mov
jo
push
fidivrl
in
jg
sbb
jmp
jae
imul
push
sahf
nop
lods
fstpl
xlat
xchg
add
and
loop
jmp
mov
outsb
popf
push
add
and
rcrl
mov
decl
gs
daa
shl
jns
lock
dec
push
pop
mov
sub
call
cmc
cmp
test
inc
xor
adcl
xor
pop
aaa
pop
dec
lods
ret
inc
mov
outsl
mov
push
out
ret
add
xchg
cli
incl
lret
outsl
cmpl
or
push
pushw
rcll
test
push
push
les
cmp
popf
idivl
push
mov
push
mov
adc
mov
mov
rcll
lock
jg
push
cmp
lods
adc
pushf
cmp
mov
into
fnstsw
pushl
shlb
adc
add
lods
or
lcall
cmpsl
lret
cld
test
mov
mov
imul
cltd
leave
cld
pop
pop
cmc
ljmp
je
ret
out
call
mov
int3
sub
mov
sbb
test
test
or
sbb
pushl
cmp
adc
push
and
inc
sub
xchg
scas
cmp
mov
and
ficoms
dec
or
add
inc
nop
mov
cmp
in
jge
ja
pop
lods
dec
inc
mov
cwtl
int3
push
cmp
xchg
imulb
jg
stc
scas
cmp
xchg
cmp
mov
jp
mov
xchg
mov
movsb
cmp
dec
daa
lcall
push
gs
xchg
xor
subl
xor
mov
sbb
add
lea
or
mov
les
fs
jg
lds
faddl
pop
xchg
mov
jns
lahf
or
cmpsl
imull
or
mov
std
dec
cmc
inc
insl
sti
mov
xor
ficoms
dec
dec
pop
sbb
repnz
mov
call
and
into
lcall
repnz
dec
ror
ds
mov
inc
std
and
lcall
mov
jb
push
xor
shll
adc
into
xor
fdivrl
fisubl
mov
addr16
pop
jb
xchg
push
dec
test
ficoml
lock
outsl
clc
fidivs
adc
aas
loop
jno
leave
repz
lods
in
mov
inc
xor
cmc
test
ljmp
repz
adc
sub
sub
sub
aaa
js
lahf
jns
dec
in
jle
jmp
cmc
sbb
test
xchg
jg
mov
push
inc
mov
cs
adc
add
jg
push
cmp
push
outsb
hlt
cmpsb
inc
push
pushf
arpl
mov
pop
xchg
jmp
xchg
add
aad
cmc
out
test
mov
addr16
pop
xlat
cmp
jge
aad
push
shll
aad
lret
repnz
xchg
fisubs
pushl
dec
iret
lret
push
inc
aam
ljmp
lea
sti
mov
mov
ja
andb
fnstsw
sbb
and
pop
xor
mov
repz
aas
lds
insb
mov
adc
mov
push
mov
mov
decl
insb
aas
es
out
xlat
xor
int
cld
psubw
cmp
jne
add
das
inc
cmp
jb
or
mov
add
jle
imul
push
imul
sub
subl
shlb
decl
je
in
or
mov
lds
rclb
shrb
enter
lods
test
lock
lods
mov
or
mov
out
dec
jno
jo
icebp
inc
pop
ss
xor
dec
dec
test
or
test
push
pop
fidivs
cmp
lcall
or
mov
push
jp
dec
jle
inc
popa
xor
mov
out
mov
int
inc
int3
xchg
sbb
xor
cmp
inc
fs
lds
lcall
dec
clc
xchg
inc
je
aas
add
jo
dec
out
pop
nop
or
outsl
ljmp
decl
and
adc
jb
outsb
xlat
or
cmc
dec
fiaddl
out
pop
in
inc
pushl
es
mov
jno
push
jmp
cli
xchg
cmp
stos
inc
dec
int
mov
cmp
dec
outsl
mov
sbb
add
pop
repnz
lds
call
jne
xor
aad
out
sbb
ret
pop
inc
aas
into
xchg
js
push
adc
clc
call
dec
test
fistps
sub
stos
in
adc
jmp
ds
push
mov
inc
imul
xchg
scas
mov
dec
lods
loope
pop
fs
mov
call
loop
cmp
mov
sbb
test
or
xchg
out
fnstsw
incl
movsl
repnz
cmc
mov
or
rcrb
mov
out
gs
mov
pop
mov
pop
mov
incb
jg
fistpl
xchg
cmp
fildll
mov
xchg
in
push
mov
call
pop
inc
or
jbe
out
push
inc
mov
dec
jb
mov
cmp
out
xorb
dec
adc
ljmp
mov
in
or
jo
jmp
xchg
lcall
inc
scas
in
test
inc
aam
sbb
in
fstps
aas
aam
mov
jmp
enter
pusha
push
cmpb
mov
jns
fdivs
inc
mov
es
std
pushl
pusha
movsl
lret
adc
std
and
pop
push
adc
xor
ljmp
in
xchg
bound
sub
mov
pop
shll
call
out
mov
jl
jnp
ds
movsb
cmp
movsb
cwtl
test
cmp
inc
cli
cmp
fimull
dec
cmp
decl
call
ljmp
arpl
loope
mov
sub
add
mov
call
cmp
xchg
cli
xchg
repnz
sbb
mov
push
xor
int3
cmp
mov
movsb
jmp
jg
jecxz
clc
jmp
popf
and
jno
mov
fsubs
sbb
out
or
sti
out
and
adc
cmp
mov
and
mov
and
sbb
jmp
xchg
push
cli
jnp
and
fstp
push
xor
das
clc
call
fdivrl
pop
outsl
lcall
push
clc
cmp
push
cli
and
movsb
fbld
shl
pop
icebp
lcall
inc
xchg
imul
ss
mov
mov
mov
mov
dec
pop
push
or
mov
stos
addr16
stc
pop
push
leave
jmp
cmpsb
icebp
cld
jle
cs
jb
fsts
jne
cmc
mov
xlat
pop
scas
cs
movl
stc
stc
leave
das
cli
push
repz
mov
inc
js
jne
call
sarb
nop
pop
loop
sbb
lods
ss
cld
dec
xchg
ds
sar
ljmp
xchg
addb
das
frstor
shll
nop
push
push
rclb
ljmp
push
mov
imul
incb
mov
out
fstpt
and
sub
lcall
jecxz
cmpsl
xlat
daa
ret
mov
int
xor
inc
and
xlat
incl
mov
add
lea
push
mov
push
push
sbb
sbb
jg
jg
cmpsl
mov
outsb
mov
and
cltd
mov
pop
js
cmpl
adc
call
xlat
or
arpl
push
xor
cld
ljmp
fsubr
pop
ficoms
cmpsb
dec
not
pop
mov
daa
mov
push
test
ret
aaa
mov
std
xlat
movsl
hlt
lcall
das
add
dec
cmp
andb
fistpll
lcall
pop
arpl
adc
dec
insb
add
outsb
rorl
jne
xchg
dec
push
pop
into
mov
jg
decl
fucomp
push
mov
in
fcoml
loopne
push
or
jo
cld
or
mov
jmp
insl
cmc
jecxz
loopne
sbb
out
iret
ret
in
lds
pop
lgs
dec
adc
mov
mov
repnz
lods
mov
xor
push
shr
daa
std
nop
daa
push
mov
sbb
pop
repz
scas
pushl
jg
sub
lea
call
mov
or
dec
in
call
cld
rolb
jnp
mov
shrl
pop
div
add
xlat
mov
scas
call
inc
cltd
out
fstpl
add
inc
loop
out
and
std
call
lock
push
add
fs
hlt
out
sub
fucomi
dec
out
orl
cmp
push
es
pusha
testl
lcall
sub
dec
mov
fmuls
push
call
cld
pushl
mov
mov
ss
xchg
fcmove
test
cmpsb
pushl
scas
test
aam
repz
mov
jle
mov
ss
jg
ljmp
jb
insl
mov
jns
das
mov
sbb
call
and
push
xor
jp
pusha
shrl
aad
or
mov
pushl
jp
out
enter
mov
lret
pop
xchg
jmp
aas
sub
lret
sbb
cld
in
call
inc
movsl
or
push
fnstsw
lret
outsl
mov
push
cld
add
decl
jmp
dec
ss
andl
insb
shll
dec
pop
scas
ljmp
jb
push
sbb
sbb
pop
dec
pop
sbb
mov
sbb
call
sbb
inc
outsb
test
mov
mov
fsubrl
insl
pushl
cld
pushl
daa
dec
sub
gs
inc
mov
xchg
jno
dec
adc
jge
aam
xchg
je
mov
sub
scas
test
addr16
lret
insb
pop
shll
call
push
sbb
mov
clc
scas
stos
lods
dec
xor
lods
sub
jle
cs
dec
mov
push
fwait
mov
fsubrs
enter
adc
add
xchg
pop
mov
sti
cmp
pushl
negb
ds
cmp
push
inc
or
and
or
dec
adc
nop
test
out
in
stc
ljmp
cmp
decl
sti
push
leave
cmp
or
inc
stos
out
sarl
mov
imul
lods
and
add
xchg
mov
addr16
repnz
out
out
or
rcl
ljmp
scas
or
fstl
dec
mov
and
push
scas
lods
pop
sarl
faddp
insb
xlat
and
add
pushl
cld
cmp
pop
ficoms
das
dec
cmpsl
add
jbe
subb
in
cmp
dec
lock
jbe
jo
loope
adc
xchg
adc
pop
mov
faddp
pop
icebp
pushl
mov
cmc
sub
clc
jo
mov
jg
jle
mov
inc
push
lcall
out
adc
insb
or
ljmp
test
add
mov
dec
jns
sahf
repnz
pop
mov
stos
dec
mov
inc
cmpsb
lea
inc
mov
in
testl
leave
pop
cs
andl
call
push
in
lret
lahf
mov
cltd
imul
aaa
adc
xchg
jg
jbe
mov
call
movsb
or
mov
dec
mov
cld
adc
mov
int3
aad
incl
mov
or
xchg
inc
mov
mov
jg
pop
dec
mov
jmp
xchg
cmpb
inc
ss
imul
jmp
fisubrs
hlt
divb
fs
loopne
push
imul
iret
add
ja
dec
jl
mov
loop
push
es
aaa
jle
dec
jg
jge
cmc
adc
push
call
push
scas
cld
pop
dec
pop
inc
insb
jle
cltd
stos
lea
out
or
sbb
mov
inc
ja
dec
xor
decl
repnz
rorb
mov
mov
xchg
add
jmp
xor
lds
or
notb
mov
xchg
fildl
stc
dec
add
lcall
cmpsl
sub
ljmp
mov
pop
push
xchg
outsl
push
scas
ret
jmp
incl
dec
inc
or
adc
and
xchg
lods
add
jmp
pushl
std
push
dec
int
orl
pop
or
lds
cmp
inc
push
nop
cli
in
scas
jbe
jnp
jl
cltd
jecxz
cmpl
jl
and
mov
imul
xlat
push
fbstp
pop
xchg
inc
shll
jp
stc
fs
inc
fisttps
call
pusha
jne
bound
jns
mov
add
ds
cmp
loop
out
pop
pushl
addb
lods
dec
fcmovb
iret
scas
adcl
xchg
sarl
dec
dec
mov
or
pop
xchg
cmc
mov
pop
mov
jb
mov
mov
js
xchg
ljmp
cli
orl
sbb
in
mov
imul
insb
sbb
sar
mov
cmpsb
test
lcall
mov
pushf
sti
push
fisttpll
repnz
lret
aad
fst
cmp
add
daa
cmp
pop
lcall
daa
mov
xchg
out
mov
dec
pop
imul
pop
flds
sbb
dec
dec
in
ja
xor
mov
mov
jp
cltd
xor
lds
xchg
push
xchg
les
or
into
inc
xchg
cmp
fsubrp
das
mov
arpl
pop
inc
out
dec
ja
clc
outsb
pop
bound
enter
pop
test
or
addr16
out
sbb
mov
ret
sarl
mov
mov
hlt
rcr
dec
push
sar
pop
cmp
movsb
mov
pop
lock
mov
jle
stos
fildll
test
pop
aad
sti
cwtl
scas
inc
sub
lcall
cwtl
popl
ret
sbb
xchg
fadd
or
leave
fcoms
pop
adc
inc
xchg
ja
sahf
jb
sub
mov
addb
shll
push
mov
not
mov
ja
aaa
fidivrl
das
pop
adc
cli
aam
stc
decl
mov
cmpsl
test
xchg
jge
add
ds
xchg
mov
and
push
inc
xor
and
push
movsl
out
lahf
aam
imul
and
out
insl
cmp
cld
xlat
mov
lret
hlt
sbb
mov
test
cmc
cmp
arpl
adc
int3
xor
movsl
xchg
hlt
sahf
shll
pop
sbb
jge
cmpb
pop
fisttps
dec
popf
cmp
repnz
fdivrl
sahf
in
js
ud0
jle
cmp
cmp
dec
add
cwtl
clc
add
cmc
inc
push
xor
jmp
fistpl
xchg
clc
inc
cltd
aaa
in
dec
out
dec
push
enter
inc
shl
insb
push
imull
add
or
js
adc
and
lds
mov
clc
mov
andb
push
inc
dec
and
pop
jne
into
jmp
inc
mov
pusha
movsl
dec
ficoml
cmp
xor
mov
loopne
cmp
loopne
adc
in
nop
jle
mov
fildl
add
add
ljmp
pop
pop
push
or
fcomi
mov
or
or
adc
adc
push
adc
scas
std
fwait
pop
jo
or
pop
sbb
adc
adc
adc
in
cmpsb
fldl
add
or
adc
pop
adc
xor
add
addb
mov
and
add
sahf
add
les
add
push
mov
jb
adc
jge
add
and
mov
cmpsb
cli
jmp
and
xor
inc
mov
adc
xor
js
add
notl
pop
imul
ss
fimull
mov
mov
adc
or
add
test
addb
or
add
add
cmp
xor
add
and
pushf
into
add
adc
cmp
mov
adc
push
adc
pop
popa
jno
and
xor
stc
or
xchg
mov
lock
loope
roll
mov
sbb
xorb
scas
fiaddl
or
js
pop
add
and
sub
rcr
push
ret
xchg
ljmp
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
out
pop
les
fsts
dec
mov
jg
mov
cmp
subb
sti
push
in
and
fistpl
inc
mov
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
sub
stos
pusha
xchg
pusha
add
jp
sub
pop
incl
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
dec
pop
inc
mov
test
mov
movsl
jecxz
xchg
aas
test
push
jg
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
cmp
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
add
sbb
int3
lcall
fs
scas
mov
pop
pop
mov
pop
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
incl
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
call
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
jg
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
in
mov
mov
int
arpl
push
out
or
push
pushl
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
call
mov
jmp
sbb
add
lock
out
pop
jb
mov
mov
mov
sub
pop
mov
jl
mov
dec
jp
push
gs
jg
sti
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
ljmp
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
subl
jb
adc
push
lock
lods
jp
testb
sbb
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
imul
ljmp
aaa
xchg
in
add
inc
adc
loope
fisttpll
ror
rcrl
cli
push
push
push
idivl
ljmp
dec
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
inc
sar
cmp
sti
punpckhbw
cmpsb
orb
mov
push
sarl
inc
push
sub
xchg
pop
clc
pop
hlt
jg
push
sub
movsb
add
lea
jg
jmp
std
xorb
jg
aad
adc
ret
das
pop
pop
mov
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
jmp
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
jl
sbb
cmpsl
sahf
imul
fisttpl
insb
stos
arpl
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
loopne
ficoms
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fildl
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
ljmp
icebp
ja
xor
cmp
xchg
mov
cwtl
pop
xchg
fcos
jmp
jbe
xchg
and
add
jae
shrb
shlb
out
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
repnz
jg
adc
loopne
sar
adc
paddsw
lahf
xor
imul
dec
sahf
cmpl
mov
aas
mov
fsubrl
orb
and
jg
ret
push
clc
xchg
pushf
mov
repnz
dec
push
adc
pop
in
loope
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
pop
lock
data16
pop
nop
mov
call
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
push
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
das
ss
stos
pop
add
dec
mov
sub
jge
jbe
ds
xor
lahf
les
sbb
sbb
cld
addl
clc
incl
in
stc
mov
lahf
outsl
int3
push
sbb
pop
imul
pop
test
bound
xchg
cmpsl
out
outsl
xchg
inc
test
in
jge
popa
push
test
aaa
cld
jg
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
and
daa
out
lcall
icebp
push
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
call
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
decl
inc
lds
push
pop
adc
imul
or
lcall
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
lcall
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
lock
insb
test
mov
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
hlt
je
ret
jl
icebp
or
lods
out
jne
or
ljmp
mov
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
outsl
pop
bound
dec
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
mov
xchg
imul
pop
in
cmp
cld
int
mov
fidivs
clc
adc
sbb
jg
dec
mov
cmp
psadbw
xlat
inc
aas
mov
jg
mov
sub
mov
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
nop
cmp
das
incb
lock
pop
inc
orb
div
cld
idivl
xlat
outsb
or
sbb
or
jae
jmp
idivb
fbstp
out
xchg
add
out
sbb
xchg
mov
loope
mov
cmpsl
popf
sbb
xchg
mov
fbstp
push
daa
outsl
das
outsl
ss
cmpsb
cmp
call
pop
mov
decb
adc
mov
or
adc
call
fisubrl
add
bswap
and
inc
add
xor
aaa
std
fisttps
sbb
and
sbb
xchg
cmpl
jle
icebp
ret
ror
sbb
mov
or
inc
adc
icebp
push
jno
shrb
mov
pop
clc
loope
loope
mov
std
push
rorb
jp
dec
add
xlat
mov
jb
jmp
xor
mov
iret
fdivrl
xchg
lcall
pop
repz
adc
cmp
into
nop
mov
sarl
pop
out
jg
jno
ret
jmp
cmp
inc
sti
andb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
or
mov
std
mov
daa
jmp
faddl
sbb
xchg
aaa
inc
test
sar
ljmp
lock
stc
push
dec
out
fstpt
mov
enter
add
lcall
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
jmp
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
std
adc
push
sti
pop
inc
dec
push
leave
dec
lods
push
mov
push
cmp
xchg
push
iret
and
js
adc
add
orb
nop
sbb
lock
xlat
dec
ljmp
xchg
push
out
mov
test
insb
push
inc
or
pop
dec
push
filds
push
xor
in
pop
xor
push
stos
addb
inc
mov
jae
bound
stc
ds
fwait
adc
and
repnz
jo
imul
or
mov
or
ds
add
adc
push
inc
push
mov
mov
icebp
and
test
add
insl
adc
imulb
push
lds
rcrl
add
push
jns
mov
cmp
inc
gs
gs
and
fistpl
mov
push
outsl
outsl
insb
push
fucomi
push
xchg
jo
push
and
gs
insl
sub
jo
outsb
imul
jae
push
into
adc
imul
sub
ficoms
mov
js
stos
pop
push
push
inc
fists
inc
inc
frstor
push
stc
outsb
out
jbe
lea
jns
push
imul
andl
inc
loope
and
add
test
movsb
mov
testl
inc
test
addb
sub
sub
cmp
mov
sub
inc
jae
or
bound
cmpl
imul
sbb
dec
inc
mov
mov
into
mov
into
ret
pop
or
jp
xorl
loop
adcl
pop
adc
jo
outsl
mov
and
inc
or
cmp
insb
jne
mov
jne
data16
add
mov
or
sbb
jo
inc
push
mov
push
in
fildl
aaa
fsubs
mov
push
pop
clc
loopne
sbb
jne
arpl
mov
aaa
js
ja
popa
push
add
pop
push
dec
mov
lods
push
push
sahf
ret
and
int
push
pop
movsb
or
jle
pop
ret
jnp
adc
or
shll
or
pusha
popa
pop
inc
pop
adc
subb
or
dec
pmaxub
mov
dec
push
pop
mov
outsb
mov
dec
inc
dec
sbb
lods
lea
fnsave
mov
jns
jae
arpl
subb
das
sarl
sbb
and
inc
cltd
or
in
pop
push
push
xchg
jecxz
add
in
mov
sub
or
outsl
insw
cmp
jb
mov
arpl
fdivp
jge
xor
scas
cmp
push
jne
cmpb
xor
bound
sbb
sub
jbe
dec
jae
enter
mov
jecxz
xchg
dec
iret
adc
inc
test
xchg
xor
fimull
mov
mov
push
cmp
push
xchg
lods
xor
inc
pusha
aaa
jne
inc
dec
sbb
push
sub
popa
sarl
int
sub
add
les
es
jp
mov
xchg
imul
in
popf
in
jae
adc
push
sbb
mov
or
fdiv
or
loop
pushf
daa
mov
jp
insb
pop
aas
int3
outsl
jns
int
push
stos
pusha
stos
push
int3
fldenv
and
jne
lods
lods
out
repz
aaa
xorl
xor
fildl
inc
inc
iret
jbe
push
fs
loope
add
and
pop
fcmovu
and
insl
adc
push
xchg
or
mulb
shrl
xor
push
adc
arpl
test
inc
loope
sbb
loope
xor
cltd
sub
cmp
sbb
jmp
jae
pop
bound
adc
fisubl
or
push
adc
adc
push
adc
adc
lea
xchg
gs
in
loope
subb
inc
in
inc
xchg
mov
out
pop
inc
scas
mov
and
jo
int3
xor
jl
ds
loopne
in
cmp
and
loopne
pop
mov
daa
jecxz
loope
andb
lret
xor
mov
popa
filds
cmpsb
jbe
dec
outsl
rcrl
inc
lods
and
pop
sub
inc
xchg
popf
lods
in
push
outsl
pop
out
xor
cmc
dec
sbb
mov
test
dec
into
xchg
jo
push
add
sbb
jmp
les
mov
leave
push
mov
jo
mov
adc
add
add
or
stos
sarl
shlb
sub
arpl
cli
mov
jge
dec
cmpsl
adc
cmp
xchg
add
jg
out
sub
inc
lahf
addr16
pop
pusha
test
inc
sbb
aaa
lret
into
loope
dec
adc
sarl
and
xor
sbb
lods
or
jmp
sub
add
scas
sub
jp
ja
in
add
mov
mov
out
ret
popa
ffreep
lcall
and
cs
mov
mov
cmp
push
outsl
jns
popf
push
push
inc
jb
and
inc
lea
in
inc
push
into
jo
int
aam
inc
inc
lds
arpl
loope
std
inc
imul
sbb
add
mov
xor
push
js
insb
out
lock
insb
dec
xor
ja
out
punpckldq
inc
lcall
mov
jp
je
jae
jno
or
cmp
nop
test
xchg
adc
leave
addr16
js
enter
and
dec
inc
cmp
sbb
push
mov
push
loopne
add
cmpsb
adc
test
sub
loop
rcl
xor
xor
push
pop
xor
das
or
shlb
add
cmc
or
mov
push
push
adc
or
pop
and
push
icebp
ja
bound
je
insl
dec
outsb
dec
jno
or
stc
xor
aam
jnp
ret
add
cmpsb
imul
add
mov
xchg
cmpsb
imul
sub
lods
imul
cmpsb
xor
add
pop
adc
push
jmp
ret
fiadds
pop
jecxz
mov
and
pop
outsl
inc
fs
in
jmp
jo
sbb
adc
incb
add
std
push
jb
inc
jae
jo
add
and
jb
pop
pop
sbb
gs
xor
push
shll
push
das
imul
adc
lock
rclb
sarb
adc
push
or
and
and
cmp
ret
pop
push
loope
mov
scas
rcrl
test
push
pop
and
push
adc
je,pn
aaa
pop
insl
insb
push
mov
jo
jo
ss
nop
scas
arpl
imul
imul
in
mov
test
icebp
icebp
pop
mov
xchg
pop
lcall
sbb
fs
outsl
ljmp
adc
jmp
dec
mov
cmp
xchg
cmp
sahf
clc
dec
and
jns
insb
fdivp
sbb
pop
and
insb
cld
popa
imul
das
lds
xchg
mov
xor
adc
dec
movsb
push
hlt
and
jmp
and
or
add
mov
sub
sbb
shrb
sub
mov
sbb
popa
rcll
xchg
adcb
or
loope
mov
pop
push
dec
test
mov
inc
std
imul
and
cltd
aam
push
insl
pop
insb
orb
pop
inc
mov
mov
mov
push
jbe
inc
inc
cmp
pusha
push
daa
outsb
aas
adc
or
sub
or
mov
xor
pop
popf
sahf
add
mov
jo
outsb
mov
subl
call
dec
insb
ret
xor
mov
inc
mov
imul
or
inc
lds
sub
ret
outsl
add
xchg
popa
mov
jmp
push
fwait
push
stos
mov
scas
outsb
adc
data16
shrl
fs
inc
cmp
cwtl
inc
outsl
rcrl
dec
dec
test
addr16
adcb
icebp
push
subb
add
push
jg
call
inc
xor
sbb
mov
mov
lret
push
push
inc
out
adc
cmp
repz
sub
and
jnp
fdivrl
sbb
sub
les
inc
mov
push
jne
fnsaves
or
cmp
ffreep
jo
cmp
add
sub
mov
ds
es
imul
dec
nop
enter
das
add
or
push
add
sbb
dec
and
or
testb
add
mov
push
add
rolb
mov
xor
addr16
or
xchg
jbe
jb
mov
prefetch
or
gs
push
add
pusha
pop
add
shrb
mov
pop
cwtl
bound
dec
addb
decw
mov
and
add
aad
mov
sub
jb
popa
adc
addb
es
mov
sbb
push
pop
mov
or
push
dec
rcrb
arpl
cmp
addb
lock
cwtl
js
xor
or
xchg
and
xchg
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
