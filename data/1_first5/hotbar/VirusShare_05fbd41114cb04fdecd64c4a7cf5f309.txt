divb
in
mov
mov
mov
inc
add
add
ror
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
cld
add
jmp
test
jne
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
pop
push
fcmovnb
les
mov
push
mov
xor
pop
mov
mov
mov
call
pushl
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
addl
add
sbb
lock
fcomi
sub
dec
shlb
in
or
mov
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
insl
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
xor
push
dec
and
add
dec
inc
pop
xlat
push
sbb
test
or
sbb
fildl
scas
bound
sahf
add
stos
lcall
push
fst
popf
jp
fdivrs
fs
mov
jge
jl
add
pop
add
mov
jge
push
push
sub
jnp
push
dec
pop
push
insl
sbb
add
loopne
lds
iret
bound
das
pop
mov
pop
pop
ljmp
mov
mov
cmp
or
jge
lcall
add
mov
mov
xor
mov
inc
sub
pop
ret
arpl
sarl
dec
lock
sar
pop
jo
popf
pop
inc
sub
inc
clc
sub
enter
inc
add
in
orb
jmp
fs
pop
or
movsl
push
xorl
sbb
in
incl
adc
jg
mov
adc
add
or
dec
cmp
add
cs
movsl
add
jmp
enter
push
jmp
dec
sub
push
mov
sar
imul
cld
aad
jge
ja
adc
pop
dec
clc
add
push
fimull
ret
pop
in
inc
andl
sahf
leave
les
pushf
add
loop
lds
js
mov
mov
cmpl
or
push
fucomp
sub
cmp
jge
dec
cmp
add
or
add
pop
cltd
sub
shr
enter
mov
or
inc
ret
cwtl
and
push
test
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
adcl
rolb
inc
add
lea
add
adc
lea
xorl
xor
insl
int3
pop
hlt
into
mov
aam
sbb
jnp
sub
push
cmp
cmp
cmpsl
mov
pop
adc
cld
fsubrs
mov
sbb
jmp
lock
or
test
jle
cmp
mov
inc
xor
rcrl
ret
or
inc
icebp
and
sbbl
push
push
xchg
jno
sbb
aas
adc
jle
jmp
loope
mov
inc
sbb
inc
push
pop
sub
xchg
or
cli
insb
andl
fucom
fadds
ret
and
adcb
inc
xor
and
inc
enter
push
inc
push
orb
xchg
mov
push
xor
push
push
hlt
inc
push
sbb
out
cmp
jle
mov
loop
or
out
add
push
mov
mov
or
and
cmp
sub
pop
lret
or
addr16
add
jb,pt
pop
add
xchg
and
enter
ret
lea
mov
cmp
je
cmp
aaa
cmp
clc
push
push
push
jg
xor
rcrb
ja
jmp
xchg
rolb
call
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
jo
inc
sub
adc
add
out
ret
aad
aaa
fcompl
loopne
loope
mov
or
pop
lods
cli
or
or
cmp
push
mov
int
in
decl
jne
push
push
push
push
andb
js
push
mov
mov
or
push
lods
push
sahf
pusha
pop
pop
push
imulb
sarb
jne
cmp
in
mov
and
add
nop
adc
into
dec
jne
scas
cld
stc
out
mov
adc
mov
out
fisttps
lods
fstpt
stc
jae
mov
sub
mov
xlat
cmpsb
std
jns
jnp
mov
clc
cwtl
push
jge
in
adc
sbb
lret
in
or
and
dec
lahf
in
dec
out
push
icebp
cmpsb
ffreep
ja
stos
or
push
mov
lock
pop
and
jl
movl
or
add
push
lea
dec
jnp
and
push
xor
js
pop
xchg
insb
sahf
dec
push
out
cmp
add
imul
push
add
inc
ret
imul
dec
inc
or
clc
push
dec
dec
xchg
push
aas
int3
popf
jns
cli
out
lea
push
add
push
mov
leave
loope
loope
sub
mov
loop
push
mov
mov
loopne
scas
push
bound
mov
in
add
push
jmp
cmp
loope
aas
add
pusha
cmp
je
xorl
mov
or
jne
imul
cmpsb
mov
pop
mov
cltd
leave
fadds
imul
insl
push
jb
cmp
test
ficomps
and
pop
ds
loope
test
cmpsb
in
out
aam
ja
push
pop
dec
or
movsl
mov
jle
pop
shll
mov
jbe
mov
cmp
adc
enter
jge
xor
iret
mov
or
inc
sbb
in
fmull
movsbl
sub
add
or
sub
mov
push
ret
push
adc
jle
mov
mov
push
imul
jne
add
sbb
int
lock
push
xchg
and
sbb
mov
jl
sub
push
int3
les
xor
aad
add
lcall
adc
sub
adc
mov
inc
aaa
push
lock
inc
lods
push
inc
and
mov
xlat
sbb
je
dec
je
push
adc
aam
fsubrp
or
adc
inc
shll
mov
lret
or
nop
pop
fs
sahf
adc
push
mov
xor
aad
call
mov
push
mov
sub
push
cmp
mov
xor
fcomps
mov
inc
and
mov
aam
and
mov
cmp
pop
cmc
andl
sbb
test
xchg
mov
test
mov
stos
jae
out
test
mov
ss
roll
or
scas
aad
mov
add
jnp
cmovge
shr
sbb
lret
push
push
movsl
or
or
movzbl
js
and
adc
popa
add
retw
push
in
dec
call
jl
pushl
ljmp
shrb
andb
testl
test
lea
pop
fldcw
mov
notb
add
xchg
pop
movsl
push
jle
push
fcomps
popf
sub
adcl
clc
repnz
sub
adc
cwtl
mov
sbb
or
out
add
sbb
adc
inc
shll
pop
sbb
and
sub
insl
sbbl
jl
ret
pop
loopne
mov
adc
test
out
add
adc
mov
pandn
mov
sub
or
fnstsw
mov
dec
jle
mov
push
pop
mov
nop
cmp
les
in
repnz
or
into
shl
push
or
mov
je
inc
mov
xor
scas
mov
or
push
xor
mov
ficomps
sub
add
inc
repnz
push
adc
or
jmp
push
xchg
fdivrs
out
cwtl
dec
adc
adc
and
cmp
adc
lahf
xor
lea
adc
negb
xlat
push
push
or
mov
xor
dec
sub
dec
bnd
xchg
inc
subl
or
xchg
xor
xchg
sub
pop
sbb
add
pop
mov
in
or
out
scas
mov
ljmp
push
and
out
mov
xor
mov
push
cwtl
sarl
cmp
jne
push
pop
movsl
push
cmp
or
inc
pop
or
in
or
lea
mov
in
inc
loopne
jp
add
in
mov
addl
push
pop
imul
pushl
imul
inc
adc
loope
pop
orl
xchg
xor
jo
cmp
les
fstl
sbb
inc
pop
pop
add
cmp
xchg
pushf
cmp
xor
mov
jnp
aam
jge
decl
inc
movb
je
out
out
add
in
xchg
lock
lock
mov
faddp
add
aam
imul
cmpsl
mov
je
mov
cmpl
icebp
loopne
adc
adc
xchg
in
push
and
push
loopne
mov
or
and
add
add
fldt
pop
sub
testb
int3
in
jnp
mov
and
test
add
icebp
push
arpl
xor
push
cmc
les
je
filds
jp
test
mov
pop
in
push
and
fistpl
fistpl
in
ffreep
jae
ret
je
push
out
and
mov
sahf
inc
and
mov
mov
mov
cwtl
cwtl
xchg
out
lret
lods
mov
mov
push
xor
mov
nop
xchg
lock
inc
pop
sub
nop
add
xchg
add
adc
lods
or
lods
lods
add
mov
mov
nop
sub
dec
pop
add
pop
adc
inc
jns
jecxz
outsl
mov
mov
mov
popf
popf
negb
adc
sub
cld
push
mov
lcall
outsl
stc
push
fcoml
dec
out
xor
out
sti
loopne
dec
imul
ss
pop
push
imul
fidivl
xchg
shlb
adc
enter
adc
movsb
leave
jae
pop
rclb
cmpsb
dec
rol
les
pushf
pushf
clc
cmpsb
in
in
pop
mov
xchg
sbb
leave
xchg
xchg
in
int3
leave
xchg
cmp
sbb
int3
fs
aaa
clc
arpl
ret
sbb
inc
sub
enter
fwait
fs
sahf
sbb
shrb
inc
xor
mov
cmp
les
in
mov
pop
test
dec
inc
mov
jle
data16
out
pop
pusha
xchg
and
mov
mov
cmp
dec
pop
mov
pop
pop
testl
cwtl
arpl
test
shrb
inc
inc
jo
pushf
push
sbb
insb
sub
xchg
out
sbb
shlb
jne
mov
loope
test
mov
imul
push
hlt
push
addb
sub
mov
push
xor
sbb
rolb
add
push
add
or
enter
lock
imul
pop
or
jle
inc
push
jl
insb
add
in
andb
pop
mov
nop
and
outsb
and
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
loope,pt
mov
mov
or
jl
or
lea
push
leave
aad
lock
or
push
jmp
push
fldenv
pop
jmp
adc
adc
jle
imul
test
scas
cmc
inc
or
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
sbb
lea
or
or
xor
push
lock
mov
in
lret
adcl
fdivs
aaa
adc
test
adc
inc
adc
leave
orb
jno
shll
loope
add
sbb
repnz
into
adc
pushf
cmc
ss
adc
push
sbb
xchg
mov
push
cmpsl
add
add
cmc
gs
cmpb
rolb
fs
lret
insl
or
add
pop
push
lock
movsl
mov
mov
fistpl
jne
loopne
add
add
stc
shr
push
ds
push
sbb
push
in
push
dec
pop
push
out
cwtl
sar
mov
lret
adc
cmp
pop
add
push
sahf
les
rolb
and
nopl
xchg
je
stc
ret
push
scas
xor
testl
sbb
and
clc
add
scas
std
fisttps
add
rclb
cmp
or
pop
push
adc
xchg
mov
pushw
mov
inc
jb
sub
and
xchg
addb
mov
add
sbb
or
testl
push
push
call
mov
xorb
cld
adc
and
fstpt
sbb
push
test
hlt
je
push
push
enter
pop
ljmp
push
or
mov
movsl
lock
add
cld
int3
inc
sbb
clc
adc
std
mov
mov
jne
or
add
sahf
sub
dec
push
push
cmp
add
push
dec
add
and
mov
leave
adc
and
bound
adc
dec
xlat
and
pop
sub
pusha
jo
mov
and
scas
movsb
std
daa
cmp
mulb
sub
add
incb
xchg
in
js
push
cmp
and
sbb
fsubrs
int
icebp
aam
stc
scas
sub
pop
and
push
sub
push
ljmp
sub
push
test
pop
pusha
cwtl
xorl
xor
ret
test
movsb
ljmp
outsb
sti
in
or
stos
add
imul
xchg
inc
pop
add
sbb
cmp
fadds
rorb
rclb
lods
sub
and
aaa
sub
stos
mov
mov
aas
loope
leave
pop
mov
inc
sbb
xchg
inc
cmp
test
cmp
lret
push
test
cmp
outsl
xchg
ficomps
mov
test
add
jl
mov
or
sbb
mov
je
lock
push
mov
sti
lahf
mov
mov
mov
cmp
mov
push
add
rolb
loopne
sahf
xor
cmp
out
jmp
mov
ljmp
sub
mov
jg
stos
dec
mov
jo
pop
enter
enter
xchg
idivl
fadds
inc
das
daa
pop
dec
mov
cmp
insl
sbb
xor
xchg
mov
testb
inc
xchg
inc
xchg
addl
mov
xor
out
sbb
sub
cmp
inc
cmp
gs
and
testb
xor
stc
nop
pushf
or
pop
hlt
xor
bound
xor
push
adc
sbb
add
push
orl
repnz
adc
pop
rcrl
cmp
cmp
sbb
and
xor
add
or
and
mov
and
hlt
push
stos
clc
lret
mov
xchg
js
bound
in
adc
sbb
jns,pt
cwtl
dec
mov
push
adc
mov
imull
test
pop
pusha
and
push
pushl
clc
dec
push
inc
xchg
out
sub
scas
mov
and
sbb
mov
xor
ret
push
je
ss
mov
sub
adc
adcb
cmpl
push
push
lea
pop
cmp
mov
add
mov
adc
fiadds
adc
add
cltd
sub
mov
lock
sub
movsl
push
mov
test
or
cmpb
cmp
jne
xor
movb
mov
loopne
jmp
cmp
push
mov
mov
pusha
cmp
add
jle
or
jge
mov
bswap
sub
add
adc
xchg
adc
loopne
adc
mov
outsb
outsl
push
add
add
add
scas
ret
inc
repz
cmpsl
adc
outsl
clc
cmpb
push
push
adc
test
xchg
add
aam
lods
push
or
jne
or
sub
cmp
adc
dec
cmpl
call
cmpsl
lds
or
into
loopne
adcb
clc
or
movsb
mov
mov
cmp
mov
das
xchg
setne
or
jmp
mov
mov
pop
negb
adc
pop
out
jne
or
pop
in
out
je
subb
push
in
sti
loope
fsub
add
ret
pop
inc
das
mov
xor
loopne
mov
pop
in
faddl
sbb
loopne
and
push
xchg
int
xchg
out
cmpsb
push
jne
or
ret
fcoml
inc
shrb
mov
pop
mov
mov
not
add
incb
cs
lahf
je
and
sarl
insb
xchg
inc
in
sbb
mov
loop
out
inc
out
inc
je
adc
xchg
push
add
imul
xchg
mov
mov
mov
xor
lock
test
jno
mov
leave
jmp
sbb
dec
sub
jecxz
mov
clc
jg
mov
or
aad
fwait
add
or
enter
inc
int3
cmp
mov
or
jle
push
add
les
mov
mov
cmp
pusha
cli
test
movzwl
jnp
or
jge
push
dec
dec
je
sub
jmp
jge
imul
push
mov
mov
ret
jmp
push
xorb
int3
int3
ror
sti
mov
dec
xor
adc
dec
mov
push
pop
push
add
loope
insb
fs
ljmp
dec
jae
ljmp
lock
sbb
mov
xor
inc
mov
sarl
push
push
pop
or
cmp
in
sub
aaa
popa
cmp
jle
cmpsb
jae
ret
ret
and
sbb
pop
mov
add
cld
fstl
mov
pusha
ds
mov
ja
add
cmp
pop
mov
mov
push
test
mov
cwtl
xor
mov
testb
push
mov
sub
outsb
loopne
xor
xor
push
add
push
jns
inc
fbld
jne
ds
jecxz
xchg
loopne
xchg
in
shrb
fcoml
jne
jo
jo
sti
or
push
adc
cmc
or
in
jb
out
insl
inc
push
pop
in
stos
add
mov
xor
pop
ficoms
js
bound
add
mov
jne
fisttpl
ss
add
jns
add
int3
mov
bound
adc
dec
mov
fmul
ds
ds
inc
cmp
std
xchg
xchg
mov
and
call
mov
mov
nop
es
dec
call
add
and
daa
jo
fmull
jle
faddl
mov
mov
push
loopne
pop
xchg
adc
scas
cld
loopne
andb
addr16
ljmp
in
call
xor
out
and
aam
enter
or
rcrb
push
cmove
and
add
loopne
aaa
enter
mov
loopne
in
sub
in
mov
dec
add
dec
rcll
fidivrl
scas
dec
cmpsb
jbe
mov
movsl
push
pusha
insl
mov
mov
scas
jecxz
les
in
add
fisttps
arpl
inc
mov
and
clc
dec
push
adcl
setle
jb
ds
test
push
push
cmpsb
sbb
rcll
mov
jp
je
fs
iret
or
ffree
add
popl
repnz
in
call
push
inc
fisttpl
mov
loopne
icebp
jge
repz
mov
or
push
add
shll
mov
and
pop
mov
adc
or
dec
fisttpl
movhps
sub
push
nop
mov
push
and
mov
adc
and
sub
rolb
sbb
mov
popf
dec
mov
adc
int3
pop
pop
pop
mov
cmp
adc
aam
fcoms
fcompl
or
mov
insl
shlb
mov
jbe
je
pushl
call
mov
and
shr
movzbl
push
adc
push
ret
push
sbb
icebp
aaa
xchg
dec
cmc
mov
imul
outsl
mov
pop
jae
xchg
cmpsl
jle
sbb
popf
cmp
xchg
fdivrs
xchg
add
sbb
fidivs
sub
sbb
xchg
xor
xchg
push
xor
data16
imull
je
push
add
mov
mov
cli
cmp
out
xor
loop
add
jle
push
cli
dec
enter
inc
push
push
mov
cmp
jg
mov
lret
clc
inc
adc
aaa
dec
enter
inc
add
ret
pop
xchg
cmp
mov
sbb
push
enter
call
aas
jb
sbb
mov
ds
ss
push
sbb
xor
aaa
outsb
sub
fsubrl
addl
in
sub
jl
mov
push
jne
sbb
sub
sbb
push
fcompl
pop
jmp
mov
push
std
add
inc
ret
outsb
insl
in
and
sbb
ss
shlb
mov
add
sub
jne
fmull
imul
fmul
test
js
xor
mov
les
cmp
jae
mov
add
push
inc
hlt
lea
ja
dec
test
in
pop
push
call
push
mov
je
insb
rcr
add
fiaddl
pop
std
or
mov
cmpsb
lock
imul
add
loopne
fnsave
jl
in
cmp
jg
aam
subl
sbb
sbb
roll
popf
jecxz
test
shll
into
popa
nop
add
add
fisttpl
pop
xor
add
fwait
adc
cli
lea
ljmp
xor
testb
push
test
adc
cmp
pop
xor
jo
mov
insl
fcmove
add
mov
mov
addl
aam
mov
test
lahf
inc
js
adc
adcb
out
test
mov
pop
pop
push
inc
pop
std
mov
leave
js
inc
dec
hlt
jg
js
mov
hlt
or
je
inc
mov
shrl
pop
movb
daa
push
inc
inc
push
xchg
add
xor
add
inc
add
push
jno
mov
push
xor
ret
jl
inc
mov
fmuls
xchg
daa
rorl
lock
jns
idiv
cmp
jl
repz
sahf
fldpi
push
or
ljmp
adc
ret
pop
xor
xchg
popa
movl
jae
adc
mov
mov
pop
adc
or
xchg
bound
les
mov
mov
mov
sarl
mov
testl
and
je
aaa
mov
xor
mov
ret
je
mov
js
mov
jbe
leave
mov
pusha
mov
push
aaa
push
mov
sub
mov
js
or
popa
mov
adc
add
inc
and
sti
and
dec
call
jl
xor
push
adc
adc
inc
popf
mov
mov
pextrw
or
fadd
je
push
and
movb
xor
xchg
xor
nop
fcmovne
jae
dec
dec
sbb
jb
jnp
mov
sbb
adcb
xchg
jmp
adc
jb
mov
imulb
clc
jne
cmp
je
jbe
movb
xor
mov
or
and
sbb
mov
push
mov
add
data16
xor
out
test
sbb
or
jo
daa
inc
insl
xchg
sarb
cmp
xchg
or
mov
mov
adc
insb
jp
or
test
imul
push
push
adc
js,pt
push
movl
lods
xor
inc
push
ss
or
or
push
mov
push
lods
subb
sbbl
push
push
roll
js
push
leave
cmp
daa
js
or
inc
lret
jmp
mov
mov
add
dec
sar
fldpi
sahf
fbstp
nop
dec
sub
push
cmp
add
incl
add
ficoms
test
push
lods
clc
mov
jb
lret
push
enter
add
inc
jo
pop
push
test
inc
mov
dec
cmp
fdiv
call
pop
hlt
sub
or
std
mov
lcall
je
scas
mov
divb
shrb
enter
orl
ret
insb
cld
cmp
lea
or
add
push
test
adcb
mov
adc
int
add
or
faddl
mov
push
jno
push
ret
sub
xor
popf
dec
add
cmp
inc
add
mov
insl
mov
xlat
xchg
adc
shl
mov
cwtl
pop
adc
jnp
and
fs
cmp
dec
add
xor
mov
jle,pt
or
and
sbb
adc
fdivrs
push
das
push
cmp
andl
shll
inc
or
imul
lods
sub
pop
or
sub
jb
add
jns
xchg
rolb
xor
or
xchg
and
aaa
insl
add
and
movsb
push
in
ss
jno
sub
pop
enter
sub
and
jno
shlb
xlat
dec
mov
sbb
stc
or
scas
popf
call
cltd
mov
movsl
jb
fsubrs
lret
hlt
jno
add
lods
mov
cmpsl
in
mov
inc
push
and
push
or
adc
lods
jno
pusha
cmp
mov
mov
dec
xchg
pop
clc
mov
push
repz
sbb
sub
mov
pop
pop
mov
shr
push
loopne
mov
xchg
sbb
inc
jmp
push
jmp
push
and
xor
pop
and
ljmp
in
xor
push
jne
outsl
and
mov
mov
shll
enter
adc
scas
icebp
pop
mov
test
dec
push
push
xchg
fcoms
xchg
bound
sub
fldl
xchg
add
inc
out
mov
in
inc
xor
into
lcall
mov
movsb
inc
pop
mov
jmp
push
loop
adc
jbe
xchg
inc
dec
add
mov
sub
loope
lret
cmp
mov
nop
cmpb
lock
test
cwtl
gs
mov
scas
and
add
leave
jae
cmp
lret
adc
mov
dec
ljmp
dec
adc
fidivl
push
lea
mov
add
iret
dec
clc
imul
and
adc
or
sbb
pop
xchg
lods
mov
mov
iret
mov
add
int3
cmp
sbb
pusha
fldt
stos
jns
inc
pop
pop
dec
mov
pop
push
push
in
push
pop
adc
lea
fisttpll
xchg
or
cmp
in
adc
pop
inc
sbb
cmp
sbb
sbb
sbb
aaa
add
pusha
inc
cltd
push
jmp
pop
cmp
shll
or
xchg
push
cmp
push
mov
sbb
enter
test
dec
mov
adc
shrb
cmp
out
fwait
popf
cmpl
cmp
push
sbbb
in
sbb
clc
sub
ret
jne
clc
mov
add
cmp
mov
jle
push
adc
pop
inc
outsb
stos
sbb
mov
ja
test
sub
pop
js
add
popa
pop
sbb
push
jbe
es
pop
or
jmp
cmp
jg
mov
lret
pop
mov
jne
sub
dec
je
ret
or
sub
test
ret
sbb
dec
ss
hlt
std
std
or
dec
jl
adc
mov
shlw
dec
aaa
push
or
xchg
loopne
dec
adc
pop
jne
lods
xor
mov
jmp
push
add
push
mov
xor
push
mov
push
inc
xchg
adc
fildl
sub
mov
pop
push
test
mov
icebp
xchg
xchg
pop
sbb
dec
mov
shl
loope
xchg
js
and
push
or
add
daa
pop
pushl
shlb
sbb
rcrb
dec
lea
adc
mov
push
sub
mov
sarb
jmp
cmp
je
cmp
pop
imul
lods
shlb
adc
cli
fucomip
out
mov
sbb
fstpl
imul
jmp
sbb
and
jmp
and
jmp
xchg
mov
pop
scas
test
rcrl
sahf
out
bound
and
jns
out
test
jns
pop
push
aas
aaa
cltd
inc
sbb
mov
mov
add
pushw
and
dec
cmc
scas
shrl
insb
fstl
lea
enter
adc
sub
in
jecxz
mov
fmuls
mov
popa
movb
in
cwtl
inc
lahf
push
push
or
xchg
dec
sub
ficoms
ljmp
inc
push
mov
mov
adc
push
lea
push
push
push
push
add
push
lea
sbb
dec
cmp
jmp
inc
cmpsb
add
dec
mov
inc
test
cltd
imul
lahf
sahf
mov
push
inc
enter
lea
movl
push
xor
add
imul
adc
inc
pop
inc
and
jns
jecxz
ficoml
mov
dec
ficoml
jmp
lods
popa
cmc
dec
pop
push
push
loopne
jl
inc
xor
add
lods
mov
or
cld
xchg
cld
adcl
or
lods
pushf
arpl
add
aas
lret
inc
sub
stos
xorl
push
loopne
pushf
push
push
xchg
jp
xchg
adc
jno
jle
ss
and
pop
iret
sub
and
mov
cmp
adc
negl
ss
or
testl
idivl
sarb
mov
pusha
add
xor
dec
and
ret
adc
inc
repz
xchg
pop
daa
sub
adc
rcrb
call
call
jno
adc
xor
loope
xorb
sarb
push
loop
xor
mov
test
aas
mov
xor
pop
sub
mov
mov
scas
aam
cmp
push
push
push
cmp
js
cmp
fnstenv
icebp
pushf
jl
sbb
pop
dec
pop
rolb
mov
lea
pop
pop
sub
jl
lcall
push
jg
xor
adc
lret
adc
fisubs
xchg
pop
stos
clc
push
add
push
aam
das
test
mov
in
clc
loop
popa
and
jne
int3
push
imul
aam
jl
mov
xchg
or
add
jle
outsb
pop
lock
sbb
inc
and
push
push
add
cmp
sub
stc
fdivr
ret
xchg
ret
repz
adcb
add
xor
adc
jne
push
sub
xor
pop
clc
or
adc
jo
xor
mov
iret
je
lea
push
loopne
add
mov
aaa
lret
jo
or
lcall
mov
jne
call
push
or
add
dec
xor
sub
clc
mov
rcll
es
shrb
les
rcl
mov
ficomps
dec
loopne
or
mov
push
adc
dec
lea
ffreep
cli
push
dec
push
push
sub
cmp
fisubrs
sub
sub
in
cmp
jmp
sub
cwtl
push
sub
in
cmp
push
mov
insl
fstpt
add
mov
inc
adc
dec
cmp
dec
and
inc
shll
dec
insb
add
cmp
sub
mov
js
mov
push
xchg
cmpsb
adc
pop
inc
sbb
xchg
fcomps
jns
cs
lock
sub
jno
fistps
cmp
dec
inc
and
add
jp
dec
dec
mov
lock
bswap
in
and
dec
dec
cmp
pop
mov
adc
push
push
fdivs
mov
shrb
lock
cmpsb
push
fimull
leave
and
push
push
inc
pop
mov
sub
fbstp
sbb
push
aaa
enter
cmp
ljmp
mov
adc
sub
aaa
add
je
push
mov
or
aaa
and
es
inc
test
dec
cld
adc
pop
xchg
jo
pop
jo,pt
outsb
stos
and
rcll
in
adcl
sbb
ljmp
pop
ret
jl
mov
mov
adc
adc
ja
push
jo
int
sbb
push
cs
push
int
xchg
lds
xchg
cwtl
popf
cld
adc
rcrl
dec
mov
std
push
les
add
int3
ss
cli
xor
cmp
je
cmp
mov
pushf
in
sti
sbb
repz
pop
add
and
xchg
inc
lret
mov
pusha
inc
ja
and
shll
loop
test
xor
aas
add
sbb
push
jne
mov
std
test
jmp
or
pop
repz
xor
push
fs
movsl
fldz
xor
push
mov
movb
test
lock
cld
aas
mov
cmpsl
mov
xchg
or
sub
add
sbb
lock
hlt
mov
adc
jge
fisttpll
mov
mov
push
cmpsl
popf
scas
dec
or
adcb
fsubl
enter
leave
push
adc
fcoml
push
test
or
sub
push
adc
enter
jp
rcrl
jp
push
imulb
mov
mov
xlat
cmpsl
shlb
add
add
mov
mov
loope
inc
sub
xor
cwtl
imul
or
into
sbb
push
push
pusha
push
mov
lea
and
mov
stc
mov
pop
push
sbb
sbb
cmp
mov
push
lret
jl
mov
andb
jbe
movsb
pop
sbb
xor
in
adc
and
jge
int
push
rcrb
mov
das
test
sub
sub
jmp
inc
fldl
ret
cmc
fmull
lods
cmpb
int3
dec
ret
push
push
push
add
mov
movsl
mov
add
popf
sbb
inc
xchg
cli
popf
cmp
dec
inc
fiadds
out
mov
sti
add
lods
int3
sub
jno
insb
inc
idivl
lcall
ds
sbb
and
addr16
sbb
pushf
outsb
int
adc
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
and
rorl
pop
test
adc
sub
cmpb
loop
jg
xor
je
push
pop
cmp
push
mov
push
xor
jmp
ljmp
sub
sub
push
push
jnp
iret
decb
adc
xor
and
pusha
aad
mov
pop
mov
inc
lock
add
sbb
push
cli
or
push
icebp
jo
pop
gs
lcall
pop
xor
jnp,pn
push
call
jmp
fsts
popa
push
sbb
xchg
inc
sub
fbld
adc
xor
sbb
jo
daa
out
jo
sbb
out
shrb
add
adc
inc
xchg
pop
sbb
mov
js
push
jge
orl
pop
jl
mov
cltd
mov
mov
cmp
push
or
dec
adc
sbb
sub
dec
push
add
sbb
jge
mov
ljmp
idiv
push
mov
mov
mov
aaa
outsb
lea
xor
idiv
cs
mov
add
jg
mov
mov
xor
jo
or
dec
mov
mov
xlat
dec
cmc
inc
xchg
or
out
inc
cmp
xchg
add
sbb
fstpl
push
pop
insb
xor
clc
arpl
sub
sub
clc
je
popf
hlt
pop
add
lea
cltd
idivl
fistl
jp
xor
mov
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movsl
fisubrl
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outsb
sti
pop
xchg
sub
cmp
or
or
js
decl
out
insb
mov
hlt
testl
test
jns
faddl
xor
lock
sub
xor
mov
fdivrp
mov
sub
mov
icebp
xchg
out
mov
test
int3
mov
mov
out
push
pop
cmpsb
inc
idivb
xchg
pop
jl
jmp
cmp
or
mov
and
clc
fidivl
jmp
add
movsl
shrl
cli
aaa
out
mov
push
pop
mov
pop
jne
loopnew
jg
pop
movb
push
or
loope
dec
outsb
mov
inc
pop
mov
decb
rcll
stos
movsl
aad
shlb
inc
hlt
adc
push
ds
adc
je
addr16
push
mov
sbb
bound
mov
and
jne
pop
jmp
out
aad
xchg
loopne
bound
and
sub
pop
pop
into
pop
leave
pop
clc
inc
movsl
mov
cwtl
xchg
adc
pusha
stos
sub
shlb
lods
add
add
imul
xor
sbb
mov
xor
fdivs
fcompl
sbb
loope
pop
iret
shll
imul
jns
aaa
jnp
and
cmp
loope
jne
sti
mov
push
std
lea
adc
push
fldenv
pop
leave
pop
xor
loope
push
movsb
dec
jne
loopne
push
mov
xchg
push
pushf
lea
push
mov
push
adc
mov
lea
add
or
fnstsw
push
rcll
or
add
xchg
imul
jecxz
dec
adc
dec
imul
andl
push
setp
sbb
or
push
add
lcall
adc
popa
add
push
and
roll
scas
sbb
leave
add
push
sbb
lahf
sub
sbb
fs
and
int3
pop
and
into
mov
pop
in
out
pop
cmpl
dec
sbb
xchg
orb
mov
and
inc
cli
inc
repnz
inc
push
roll
cmp
das
sbb
leave
or
and
xor
add
mov
ss
pusha
dec
cmp
pop
scas
xchg
pop
adc
fdiv
inc
cmp
aaa
add
add
push
mov
add
mov
clc
setb
test
rorb
outsl
in
adc
xor
dec
adc
data16
pop
or
aaa
mov
fmull
push
fldenv
negl
gs
add
imul
mov
ss
mov
hlt
jno
cmpsl
mov
call
sub
lods
fwait
scas
sbb
rcl
scas
jge
fldt
inc
scas
xlat
das
push
jp
push
inc
mov
int
add
in
arpl
rorb
push
js
lods
test
sbb
ja
push
mov
cli
out
adc
clc
mov
sub
pusha
sbb
mov
sar
bound
xchg
add
sub
jecxz
int
add
fstpt
jmp
test
mov
xchg
adc
xor
mov
movl
dec
cld
pop
loop
add
cmp
cmc
add
out
insb
sbb
pop
pop
dec
push
or
nop
and
xchg
pop
das
inc
xor
shrb
sbb
xchg
pop
leave
mov
push
add
and
inc
in
push
dec
jp
push
mov
std
int3
sti
mov
add
mov
push
push
and
int
pusha
pop
add
xchg
jne
add
lret
in
les
call
xchg
test
insb
push
push
ror
or
add
imul
les
pop
fmuls
jo
rcrl
dec
lcall
sbb
mov
insb
aam
inc
xlat
or
aam
add
aaa
pushl
dec
push
movsb
std
add
push
cmp
les
test
fcoml
rorb
rcrl
sub
test
add
test
cmp
jle
and
mov
lret
call
sub
and
push
mov
and
push
mov
mov
das
jno
adc
loopne
push
scas
push
notb
mov
add
and
cmp
push
push
mov
outsb
ljmp
jp
push
hlt
push
pop
push
jb
xchg
push
or
push
add
push
mov
pop
push
push
add
adc
sti
pushf
inc
call
mov
loope
pop
sbb
fimuls
lods
add
xchg
clc
jmp
mov
push
cmp
enter
and
or
mov
and
adcb
push
adc
push
xchg
pop
pushl
push
cmp
mov
pop
fadds
cmp
aas
mov
xor
xor
ret
je
lahf
mov
mov
test
je
std
ja
or
loop
dec
mov
jmp
dec
mov
sub
pop
dec
insb
js
push
mov
mov
jae
dec
add
ss
pusha
shlb
mov
int3
xchg
sub
mov
sub
lcall
cmp
jge
mov
mov
mov
cmp
sbbb
jl
or
cmp
jle
call
jne
inc
mov
push
iret
add
fsubr
sbb
sarb
fcomps
or
je
insb
nop
mov
aam
jne
and
sbb
push
adc
xor
enter
dec
dec
mov
cmp
in
mov
adc
in
jo
sub
inc
sete
adc
loope
dec
sbb
mov
xorb
push
xor
outsl
or
push
xchg
stos
push
or
sti
xchg
fdecstp
cmpl
dec
out
mov
mov
jge
add
rclb
enter
sub
or
mov
scas
push
bnd
imul
xchg
adc
shl
dec
add
sbb
fcompl
add
pop
loop
cmp
add
push
js
das
sbb
pop
cmp
lods
pop
pop
jl
pop
aaa
adc
push
dec
lock
add
jmp
ret
movsl
inc
outsl
xor
adcb
xor
mov
push
sbb
jl
adc
movsb
bound
cld
test
sub
mov
out
fcoms
ss
inc
ror
rcr
mov
push
jmp
test
mov
xchg
mov
add
mov
ret
sti
add
jmp
mov
push
or
and
mov
mov
jne
repnz
xchg
in
sbb
pop
pop
or
pop
adc
clc
mov
int
andl
ret
jmp
lock
xchg
or
in
repz
in
push
lret
adc
dec
xor
fdiv
in
and
mov
xorl
cmp
arpl
xchg
cmpsb
sub
adc
add
and
lock
loop
dec
jle
mov
mov
add
xchg
jle
jge
or
add
adc
shlb
inc
jge
xchg
popf
xchg
or
sbb
adc
in
xor
xchg
les
mov
xchg
daa
push
test
test
mov
imul
aam
dec
or
clc
sub
or
dec
cmp
lea
mov
cli
xor
push
hlt
add
fsubl
adc
dec
clc
cmp
leave
sub
shrb
pop
inc
dec
push
add
add
inc
lret
inc
cld
sub
lock
cmp
add
jge,pt
cmp
in
mov
aaa
hlt
mov
divl
xchg
sub
add
into
push
push
add
push
outsl
inc
aaa
jo
or
and
or
xchg
fstpl
dec
jp
add
add
in
negb
dec
call
jge
adc
test
inc
in
jg
lock
cmpb
fstpt
das
aad
shrb
pop
clc
jg
mov
cwtl
add
lsl
sub
xchg
ret
inc
aas
or
idivl
sub
jbe
or
stc
xor
or
sbb
push
or
cmpsb
xorb
pop
movsl
rol
push
push
mov
inc
incl
or
push
xor
xor
icebp
mov
in
stc
jbe
movzwl
mov
add
push
lods
cli
pop
test
push
lea
push
mov
in
push
in
pusha
gs
push
rcll
push
cmp
in
jbe
pop
push
mov
subb
sbb
jo
mov
pop
mov
jo
roll
fistpl
mov
xchg
loop
ret
xor
cmpsb
nop
add
xchg
push
ffreep
xor
add
cmpsl
mov
pop
rolb
loop
mov
iret
in
cmp
dec
or
mov
cmovne
mov
ror
int
adc
pop
adc
mov
add
mov
ljmp
xor
add
xor
push
sub
call
ljmp
int3
outsb
pop
imul
xchg
push
leave
ret
xchg
push
test
push
or
inc
inc
aad
icebp
cmp
xchg
cld
lea
andl
mov
adc
dec
mov
xchg
pop
sub
or
or
pop
inc
pop
sbb
out
addr16
movl
fnstcw
xchg
dec
sub
adc
mov
andl
push
mov
hlt
push
xchg
arpl
dec
xor
int
mov
mov
cmpsb
ret
xchg
push
push
add
repnz
push
movsb
pop
mov
or
jns
cwtl
xor
adc
notl
cmc
xor
ss
loopne
inc
and
jbe
xchg
test
xchg
adc
inc
add
mov
adc
int3
jmp
push
push
pusha
inc
and
add
shl
sbb
movsb
out
ss
add
not
mov
mov
fisubrl
sbb
mov
ljmp
inc
sbb
mov
adc
sbb
push
xorb
rorl
cmp
sub
jae
sbb
inc
pop
jns
stos
and
mov
or
bnd
aas
xor
jns
in
aad
dec
jo
jg
call
stos
adc
push
adc
or
pop
push
xchg
out
mov
dec
dec
aad
jne
cmpb
lret
mov
jnp,pn
jmp
dec
inc
mov
jle
cmp
mov
mov
inc
push
mov
add
mov
or
cltd
rorb
adc
ss
inc
in
aaa
push
or
sub
mov
lea
cmpsl
adc
dec
and
fptan
inc
cmp
cmpsl
sub
inc
cwtl
movl
sti
loopne
mov
cmpsl
add
test
inc
adc
lahf
repnz
dec
jl
pop
sarb
lea
movsb
sub
test
orl
push
xchg
add
sub
ja
pop
add
jl
dec
sbb
pop
shl
fstps
push
cld
push
jae
sbb
mov
gs
sbb
inc
or
lcall
or
sub
sub
add
int3
push
dec
shll
mov
addb
lea
test
mov
mov
adc
adc
and
movsb
pop
lea
lea
jmp
int
cmp
jae
sbb
mov
addr16
mov
xchg
test
or
mov
in
sbb
or
addb
lret
sahf
lods
pop
nop
cmp
cmpsb
movsl
pop
lahf
cmp
mov
int3
test
lret
xchg
mov
rorb
aaa
rcll
leave
lea
nop
xchg
or
nop
or
mov
adc
inc
divl
nop
sbb
aad
movsl
lods
nop
push
rcll
jo
xchg
cltd
mov
fists
or
or
push
shrl
jg
sbb
push
mov
insl
cwtl
std
jecxz
jno
pop
mov
push
push
sahf
mov
xor
popf
push
dec
xchg
add
add
test
int3
add
jne
repz
or
aam
les
adc
lods
pop
sbb
fistl
or
lret
fwait
mov
ret
and
or
ljmp
mulb
incb
loopne
mov
pop
call
jae
pop
pop
push
cmpsl
mov
xchg
mov
push
cwtl
sub
js
pop
loopne
imul
out
push
hlt
lret
in
lea
loope
sub
add
push
mull
mov
pop
popa
xchg
xor
repnz
push
rcrb
dec
js
and
dec
inc
nop
xchg
pop
push
add
and
mov
or
xor
mov
lahf
dec
orb
roll
pop
jl
jne
ljmp
push
cmp
push
and
add
pop
rcll
or
xor
rcl
mov
and
or
xchg
mov
add
call
ret
mov
add
sub
push
push
mov
pop
repz
mov
sub
mov
pop
push
dec
into
mov
mov
dec
jbe
adc
movzwl
outsb
mov
pop
pop
mov
fsubl
xchg
mov
mov
lods
xor
xchg
ret
adc
mov
fisubrs
mov
test
push
jle
dec
adc
rorl
push
adc
inc
or
and
cmpsb
stos
push
and
mov
adc
jo
popa
xor
add
test
test
cmpsl
push
arpl
pop
ljmpw
pop
outsl
mov
jae
loope
cmc
mov
cmp
inc
add
cmpb
outsl
in
movsb
fdivrs
fbld
sbb
adcb
fists
test
adc
xchg
in
loopne
clc
add
movsl
jbe
js
mov
sbb
mov
adc
hlt
cmpsl
xor
lea
fs
mov
ljmp
lea
push
mov
adc
rcr
in
sbb
add
pop
aam
aaa
pushl
fcomps
ss
mov
mov
xchg
cmp
fiadds
ljmp
inc
mov
xor
adcl
mov
loopne
mov
mov
sahf
mov
sahf
adc
dec
pushw
sarb
test
or
cli
xchg
ret
lea
adc
mov
jbe
mov
pop
jg
lret
xlat
mov
add
iret
push
mov
ss
pop
cmp
cltd
dec
fsub
add
pop
mov
gs
movsb
xchg
shl
push
les
rclb
push
mov
sbb
daa
pop
loopne
loopne
and
fimuls
orb
shll
out
lret
test
mov
xchg
pop
int
or
clc
stos
lods
mov
scas
rorb
mov
and
mov
pushf
ja
or
lret
loopne
add
lods
cvtdq2ps
jmp
push
arpl
jb
dec
call
enter
gs
andb
jns
insb
jmp
jno
and
imul
je
inc
mov
add
xchg
xchg
lret
pushf
lea
into
mov
imul
add
aam
dec
in
mulb
mov
insl
stos
adc
fmull
push
movsb
notb
inc
cli
add
stos
xor
iret
add
insb
inc
cmp
jne
pop
push
or
cmpsl
hlt
mov
cmp
arpl
inc
pop
in
push
jl
outsl
dec
or
mov
jg
dec
and
sarb
cmp
dec
push
cmp
fidivrs
mov
mov
fdivrl
mov
inc
adc
mov
outsb
jo
movsl
or
inc
lds
orb
sahf
loopne
and
inc
ffree
add
push
jne
pop
xchg
shlb
aad
lahf
icebp
mov
and
shlb
andb
push
jg
dec
fcomps
mov
cltd
pop
jae
or
leave
pop
stos
push
and
dec
faddl
imul
xchg
inc
popf
pop
pop
or
mov
push
push
mov
or
and
sti
xchg
jmp
push
iret
sub
xor
fcoml
rcrl
inc
aad
rcrb
or
or
inc
icebp
sbb
sbb
stc
divb
imul
pop
pop
or
rcrb
jno
jge
sub
cmpl
lcall
add
push
pop
cmp
je
cwtl
orl
xor
xorl
or
sbb
xor
dec
clc
cwtl
xchg
xchg
xor
test
and
pop
add
push
test
jne
cmp
and
enter
aam
jge
mov
xchg
outsb
dec
and
add
sbb
and
pop
rcll
push
mov
sbb
fdivr
pop
sub
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
adc
mov
mov
or
test
sbbl
sub
loopne
sub
push
fcoms
aas
aam
xor
sbb
das
mov
sbb
xchg
das
jo
es
jns,pn
icebp
and
sub
pusha
sub
inc
aaa
mov
stos
fwait
cmp
insl
into
int3
xor
lds
cmpsb
dec
or
push
cld
jp
dec
hlt
push
xor
mov
add
pop
insl
faddl
rclb
sbb
and
mov
imul
add
mov
enter
push
sbb
call
cmp
leave
mov
or
or
mov
jne
add
push
push
pop
pop
adc
cltd
mov
sub
mov
xchg
scas
sbb
sbb
add
xor
inc
cmp
fistps
cld
outsl
fadd
in
jp
fidivs
pop
pop
fdivl
mov
mov
sti
inc
or
fs
mov
or
sbb
mov
push
inc
and
xchg
outsl
pushf
loop
inc
fcompl
cmp
cmp
mov
inc
in
push
xchg
cmp
push
out
cmp
cmpsl
sbb
and
jmp
jae
les
jmp
bound
scas
or
movsb
mov
sbb
xchg
pop
out
mov
cmp
jge
or
or
pop
fsubs
sbb
test
xor
add
dec
test
jbe
mov
js,pn
push
jnp
or
ret
imul
in
xchg
popf
cmp
cli
fisttpl
rclb
xor
and
into
sub
aad
pop
orl
les
fidivl
das
sete
push
push
movl
dec
jb
jge
daa
push
pushw
mov
das
add
mov
dec
orl
or
add
fnstenv
gs
jb
shlb
pusha
cmpb
lock
xor
loopne
bound
inc
flds
loopne
cli
push
sti
mov
push
mov
lret
jg
rcrb
aad
push
sub
mov
pop
gs
or
lret
repz
sbb
or
sub
lret
ds
push
incb
aad
mov
fwait
xor
mov
push
dec
hlt
sub
push
arpl
or
add
mov
pop
jb
push
pop
jne
push
adc
imul
rol
popa
push
in
xchg
ljmp
inc
dec
mov
outsl
xor
repnz
cs
clc
punpcklbw
scas
and
cmp
ja
add
adc
add
xchg
or
dec
stos
into
ret
jb
mov
lret
cwtl
clc
out
sub
push
iret
int3
lcall
bound
mov
push
ret
pusha
repnz
mov
mov
lds
push
pop
std
iret
and
popa
mov
mov
or
rclb
push
add
icebp
inc
inc
ret
in
movsl
loop
mov
cltd
xchg
fimuls
or
mov
int3
xchg
add
or
call
jne
jne
popf
lds
and
ret
rcr
sub
scas
sub
pop
push
xorl
shlb
mov
cmovle
fldl
das
dec
xchg
fiadds
mov
push
lods
add
push
xchg
add
inc
push
mov
or
add
aad
or
leave
test
rcrb
adc
sahf
or
or
pusha
adc
scas
fadds
or
cmpb
addr16
ds
ret
push
mov
xchg
nop
loope
xor
push
clc
je
cs
xchg
jg
mov
sub
lea
push
lea
push
inc
push
leave
enter
fwait
push
bswap
je
and
or
push
dec
fisubl
jmp
outsl
xchg
lret
cmp
jl
push
mov
mov
int3
xor
sarl
pop
sub
lcall
and
cmp
jne
repz
add
pop
cmp
add
push
shll
mov
out
sub
lock
jle
cmp
je
sub
pushf
sbb
mov
push
jns
push
fmull
add
fnstenv
loope
sahf
adc
push
sar
addl
jecxz
mov
sub
pop
ret
jmp
sub
adc
cmpsb
dec
jmp
push
mov
lahf
in
xor
mov
fldcw
fisttps
js
dec
or
in
push
mov
xorl
dec
adc
mov
push
or
in
or
sbb
cmp
neg
and
or
movb
inc
stos
xor
call
mov
pop
inc
or
adc
inc
add
popa
mov
pop
bound
rcrl
fwait
add
divl
subl
or
or
push
jl
ret
or
jne
xchg
fwait
inc
or
inc
pushf
xchg
pop
add
sbbl
cmp
je
sbb
aas
cmp
or
push
mov
fbstp
pop
insb
jne
mov
xchg
mov
repnz
popa
cld
fildl
xchg
add
inc
or
pop
pushl
add
cmp
mov
mov
out
in
inc
out
pop
push
push
xchg
add
daa
add
test
push
sub
dec
and
or
ret
cmpl
cmpsb
dec
or
push
shrb
push
sbb
cmpl
jb
loope
mov
cmp
pop
adc
adc
ss
inc
cmc
scas
cltd
push
stos
jne
loope
js
popa
adc
cmpsb
and
mov
cmc
das
mov
notb
cltd
das
clc
push
push
leave
push
cmp
adc
leave
fs
mul
seto
out
jecxz
xor
enter
imul
and
push
jmp
jae
cmpsl
mov
push
xor
test
push
dec
mov
ficoms
orl
or
mov
inc
mov
add
jns
fadds
or
fnsave
loopne
pusha
sub
mov
lcall
add
dec
adc
mov
je
rcll
pushf
fcmovb
cmc
cmp
cmp
lds
cld
sub
inc
or
jno
and
adc
pop
jbe
lods
cltd
push
and
adc
and
rol
data16
mov
adc
js
test
outsb
sbb
mov
icebp
inc
inc
add
js
cmp
cld
cmp
std
lcall
jmp
adc
add
and
sbb
callw
mov
mov
pop
test
loop
cmp
scas
adc
push
je
adc
or
daa
xchg
lock
and
lock
cmpsb
jbe
cs
lock
jne
ds
xlat
daa
inc
into
js
push
jb
jb
jo
add
test
lock
sub
loope
pop
add
jne
or
cltd
aad
add
aaa
cld
jmp
lock
ret
out
push
test
je
cli
jmp
fidivs
jmp
jno
cmp
push
inc
cmp
jae
and
push
subl
xor
cmp
xor
pop
sub
or
subl
loop
jne
and
adc
orb
jge
mov
pop
push
ss
push
fucomi
jb
mov
xor
adc
cwtl
ss
test
mov
sbb
push
mov
mov
shl
inc
adcl
cmp
xor
dec
movsl
or
or
lret
je
add
aas
and
or
mov
cmc
in
jo
insb
or
and
addb
fwait
xor
mov
jne
mov
and
ja
jp
lds
dec
mov
mov
dec
mov
inc
shl
jmp
push
jle
test
dec
jns
mov
mov
fistpl
fcomps
or
or
inc
and
jae
xor
pop
enter
ja
cwtl
incb
mov
jmp
mov
or
mov
hlt
cmpsl
fisttpl
push
mov
xchg
inc
sbb
jg
mov
push
push
icebp
adc
sub
pop
pop
adc
mov
shlb
and
dec
sub
adcl
mov
fs
mov
mov
adc
sub
dec
add
js
push
pop
stos
pusha
add
push
or
push
add
inc
aad
xor
cmp
lea
or
clc
add
mov
jl
inc
cltd
mov
int3
add
mov
shl
push
clc
je
movsl
popa
xor
xchg
push
push
xchg
jmp
and
adcb
out
rclb
push
jl
icebp
mov
mov
sub
test
mov
jnp
jne
lar
and
dec
js
push
push
xchg
adc
insb
loope
imul
mov
add
and
mov
inc
jp
push
bound
push
in
inc
loopne
dec
adc
push
push
jbe
insb
mov
neg
push
mov
ret
mov
adc
pop
out
jne
rclb
testl
inc
mov
dec
inc
jmp
mov
int
enter
xor
dec
push
inc
cwtl
add
fs
xchg
add
aaa
xor
loop
aad
sti
faddp
pusha
and
out
adc
ret
xchg
push
jp
push
cmp
nop
inc
les
movsb
xchg
in
xor
xchg
popf
pop
pop
imul
jns
mov
and
jns
shrb
push
orb
xchg
inc
repnz
ud1
mov
dec
orl
xor
mov
or
rcll
push
sub
lock
add
movl
int
inc
out
sarb
add
mov
push
or
lods
dec
add
ret
lods
pop
inc
adc
testb
push
jae
mov
dec
imul
sbb
pop
add
mov
and
fcmovb
push
push
movsl
sbb
in
adc
aam
sbb
dec
js
jl
andl
cmpsl
jge
repz
mov
lds
and
add
bound
fs
or
andl
pusha
mov
cmp
push
xor
pop
mov
fwait
and
push
pop
or
mov
push
aam
dec
orl
pop
sub
in
cmp
push
je
jo
and
popf
leave
in
subb
sub
ret
adc
mov
inc
push
add
test
aad
mov
mov
repz
or
mov
dec
lret
test
dec
xlat
mov
pop
add
js
test
sub
or
je
orl
xchg
call
adc
pop
bnd
fimull
push
jmp
je
sbb
xlat
mov
js
push
cmp
or
cmp
pop
fs
and
je
rclb
sub
sbb
repnz
popf
dec
fldl
add
mov
cmp
add
sbb
add
jno
push
jb
jp
xor
dec
or
mov
rolb
insb
sub
cmc
adc
dec
lahf
cld
lea
fldl
mov
mov
mov
sub
and
xor
push
and
ret
sub
xor
add
inc
fidivs
add
adc
insl
imul
inc
push
cmp
xchg
lea
pop
push
faddp
xor
cmp
stos
push
popf
jg
or
dec
and
sub
clc
push
iret
mov
inc
sbb
pop
xchg
pusha
lock
add
push
mov
repz
adc
xchg
inc
or
push
mov
pusha
inc
lea
pop
insb
xor
pop
das
xchg
fsub
pop
xchg
or
sub
sub
rcll
sub
dec
sub
leave
lea
xorl
mov
adc
addr16
or
mov
sub
push
dec
xor
js
and
sub
sub
cmpsl
fadds
push
cmp
aaa
cmp
mov
pushl
lods
mov
add
add
mov
jg
movsb
sti
adc
pop
sub
sbb
jmpw
xor
lcall
inc
dec
popa
jo
loopne
sub
mov
xchg
cmc
popf
addr16
repnz
lea
push
cmp
jnp
cltd
sbb
insl
aaa
xor
cs
inc
mov
loop
incb
pop
jns
jns
rolb
or
hlt
dec
and
inc
or
cmpsb
mov
cltd
push
mov
arpl
cmpl
rdtsc
push
adc
mov
sub
push
mov
rol
mov
test
lea
push
push
pop
push
lock
cltd
in
pop
push
xchg
sub
mov
lock
or
mov
nop
int
sbb
stos
je
sbb
in
addr16
sbbl
loope
xchg
loope
mov
mov
ret
mov
inc
insb
inc
test
add
pop
sbb
mov
mov
xchg
pop
aad
rolb
mov
lahf
xchg
inc
mov
pop
jnp
es
xor
daa
std
cmp
outsb
subb
loopne
test
inc
add
ret
in
add
and
addr16
or
mov
inc
cmc
daa
stos
cld
jmp
mov
rolb
and
call
jl
pushl
mov
test
inc
and
xor
adc
add
scas
lock
cmp
test
adc
jbe
out
jae
sbb
adcb
imul
add
jae
arpl
inc
mov
daa
mov
add
mov
add
scas
adc
or
inc
inc
add
mov
jb
ja
popa
dec
jnp
push
stc
test
push
in
and
xchg
jo
pop
adc
movsb
inc
cmp
mov
pop
divb
pop
sub
dec
fisttpl
icebp
sar
js
adc
in
movb
cld
cmpsl
test
inc
hlt
inc
hlt
arpl
sub
js
pop
mov
adc
pop
push
ret
pop
jmp
rcll
xchg
cmp
inc
jo
shll
and
or
or
int
sub
dec
dec
push
rcll
imulb
pusha
pop
dec
scas
mov
xor
xor
sbb
insb
add
jmp
notl
jo
inc
insb
pop
dec
jno
mov
bts
movb
rorl
mov
inc
or
xchg
sub
mov
loope
inc
inc
push
fadds
test
sub
lock
dec
sbb
adc
pop
add
mov
lcall
cwtl
cmp
les
mov
inc
mov
loopne
cmp
mov
mov
xchg
rolb
roll
or
pop
sbb
lods
sbb
jne
and
push
mov
cmpsb
in
jae
or
xchg
pop
pop
imul
int3
mov
pushf
ds
jae
in
and
pop
ss
aaa
mov
clc
push
lea
shrb
lret
hlt
adc
cmp
loope
pop
cmp
inc
mov
and
add
push
imul
inc
dec
mov
push
icebp
xor
mov
jle
sbb
mov
mov
movsb
mov
adc
dec
xchg
inc
loope
ja
add
nop
inc
incl
test
sbb
nop
out
lods
sarl
clc
inc
push
sahf
cs
pop
or
sbb
mov
out
negb
fadds
shl
adc
mov
rol
inc
cmp
lock
daa
in
add
add
xchg
or
xor
xchg
push
xchg
cmpsb
pop
neg
xchg
and
sbb
loope
es
xchg
in
push
cwtl
xor
xor
jmp
ss
push
xor
or
cmp
loopne
xchg
xor
stc
lcall
mov
or
jo
test
mov
xor
xor
addr16
insl
and
fimull
cltd
mov
xlat
push
adc
mov
dec
sub
adc
and
rcl
sub
pop
adc
scas
mov
mov
rcrl
pop
cwtl
or
jno
mov
jmp
xor
push
pop
jecxz
test
addl
js
cmpsb
jmp
js
add
jg
in
cmpb
xor
sti
add
xchg
jle
xor
dec
or
sbb
jl
ud0
shlb
notb
inc
je
or
test
xor
pusha
cmp
mov
mov
jne
inc
mov
push
cmp
pop
sbb
adc
or
lcall
fsts
pushf
pop
and
pop
test
cmp
push
test
pop
bound
popf
icebp
add
cmp
js
jo
int
push
andl
pop
push
inc
or
push
icebp
add
test
jno
push
pushf
cmp
sub
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
mov
push
jno
and
aam
out
shlb
adc
jne
push
dec
scas
lods
enter
std
push
or
jns
xor
push
aas
cld
mov
outsb
out
add
test
daa
mov
mov
aas
adc
nop
cmpsb
cmp
dec
rclb
dec
cmp
cld
insb
push
push
push
cmc
inc
sahf
dec
pop
xchg
sbb
xor
dec
adc
add
cmpsb
arpl
push
das
xchg
sbb
sbb
sbb
pop
mov
adc
mov
movsl
jge
push
inc
inc
sbb
xor
push
out
lods
pop
push
adc
inc
add
das
pop
or
adc
popf
jmp
and
push
lods
or
sbb
add
or
mov
roll
nop
cld
ljmp
aas
sub
jo
mov
adc
add
or
and
std
mov
mov
mov
jbe
push
push
movsl
je
enter
and
nop
sbb
rorl
sbb
cmpsl
and
call
inc
fiaddl
cmp
mov
rolb
lods
popl
roll
mov
add
mov
dec
data16
les
pop
inc
enter
ja
fistps
push
ljmp
xchg
xchg
sbb
sbb
add
out
push
cmp
aaa
sub
push
add
shlb
inc
xor
mov
adc
push
push
pusha
pop
and
mov
mov
add
mov
mov
pop
fisubs
lret
inc
add
fisubs
inc
adcb
dec
fmuls
sbb
pop
add
dec
rcrl
add
push
cmp
scas
mov
xchg
sbb
xlat
dec
in
jno
lea
lea
push
mov
ret
test
and
pop
imul
and
cmpsb
imul
leave
int3
imul
loope
jno
mov
test
mov
shlb
push
aas
mov
test
mov
andl
and
inc
daa
jo
xchg
je
xor
or
test
ret
pop
mov
mov
and
sub
sub
es
or
incb
inc
inc
xchg
and
mov
push
jl
into
mov
fs
repz
cmp
xchg
mov
out
je
lods
call
add
daa
int3
and
mov
stc
popa
or
repnz
sbb
xor
add
mov
sub
loopne
xor
adc
or
out
dec
sbbb
push
sti
setge
xchg
jg
outsb
mov
xchg
mov
shlb
aas
pop
in
pop
sbb
xor
pop
fiaddl
fidivs
pop
cs
fstl
cmp
dec
xlat
scas
sub
jno
jl
popf
jb
adc
ja
dec
popl
mov
sbb
dec
push
movl
stc
inc
inc
inc
adc
daa
es
js
inc
xorl
aad
in
inc
out
dec
cmp
ljmp
add
add
xor
sarl
adc
add
sbb
xor
jecxz
cmpsb
fiadds
add
ss
push
jp
mov
or
jnp
shl
or
inc
adc
outsb
mov
xchg
test
arpl
xor
push
icebp
xor
jo
xor
dec
jne
pusha
mov
mov
clc
adc
sbb
shr
and
jmp
adc
test
pop
mov
dec
mov
aam
dec
insl
and
jp
int3
pop
aaa
lock
push
xor
repz
mov
in
mov
das
xchg
sub
mov
xchg
jge
sub
arpl
or
js
cmp
movl
xchg
daa
xor
std
sub
enter
push
lea
cli
jb
mov
or
or
ret
faddl
mov
jmp
lea
repnz
sbb
pop
ja
xchg
push
mov
xlat
je
jp
push
out
dec
orl
add
xchg
test
ja
push
nop
xchg
or
push
jns
cmp
and
jl
aas
mov
inc
stos
imul
rolb
cmc
push
push
lods
or
sub
cmpsb
cmpsl
xor
aad
or
jb
pusha
icebp
and
cmp
testb
jle
mov
fmul
data16
test
out
je
pop
clc
lods
sbbb
push
xor
mov
mov
sbb
nop
and
sub
xorb
sub
jno
and
fmuls
and
jmp
inc
cmp
inc
lea
push
cmp
cmp
mov
adc
test
cmp
dec
push
fcomps
push
lods
adc
xchg
jns
pop
cwtl
aaa
push
iret
into
cld
push
std
mov
fcmovnbe
jmp
cmp
je
loopne
mov
aaa
js
rol
sub
inc
jae
and
inc
add
adc
cld
inc
add
add
jmp
xor
adc
jnp
and
dec
lcall
lea
sarb
fs
add
ret
popa
add
cmp
incl
inc
adc
mov
mov
sbb
mov
iret
push
pop
aaa
jne
jmp
mov
xor
dec
mov
rcll
push
loop
mov
stos
adc
notb
push
or
movsb
and
lret
loopne
sub
inc
mov
cmp
scas
add
push
loope
ss
les
jae,pt
inc
sub
mov
test
mov
pop
add
dec
movl
add
inc
sub
push
push
and
sub
incb
mov
lret
ja
mov
adc
bound
dec
pop
enter
imul
push
mov
pop
test
mov
ret
adc
push
dec
loopne
adc
adc
sbb
and
ret
fdivrs
ja
jge
mov
divb
inc
cmp
jl
pop
test
lods
and
movl
nop
out
dec
add
jno
lods
ja
xor
addr16
mov
push
pop
mov
inc
decl
loopne
sti
dec
jo
enter
insb
mov
xor
xchg
aam
xorl
sbb
mov
mov
cmp
imul
or
add
js
sub
cmp
aad
arpl
inc
mov
add
fmull
out
clc
movsl
insl
pusha
xchg
push
incl
fimull
popf
mov
inc
cmp
cmp
cmp
je
push
mov
xor
es
cmpsl
data16
leave
jo
andl
sbb
and
push
inc
imul
movsb
pop
cmp
in
mov
in
xchg
test
call
xor
or
dec
push
movsb
jns
or
mov
test
sub
imul
mov
shlb
push
es
cmpl
and
movsl
mov
mov
jae
int
push
push
push
imul
inc
sub
daa
mov
test
add
cmp
add
and
adc
or
int3
aam
inc
dec
aaa
lods
or
shrl
xchg
fmull
sbb
sub
fs
mov
inc
dec
mov
push
mov
outsl
lock
cmpsb
mov
test
je
sub
cmp
js
cmp
test
push
inc
pop
adc
pop
pop
dec
je
mov
sbb
sbb
inc
enter
pop
fcoml
mov
jbe
cmp
mov
dec
aam
dec
inc
ljmp
inc
or
rorb
adc
sub
pop
push
test
in
cmp
push
adc
and
push
sub
data16
lea
cli
sbb
or
sbb
adc
pop
adc
sub
xor
adc
shrb
outsl
ja
pushf
mov
mov
dec
and
ja
cmp
cmp
push
adc
roll
adc
push
and
sbb
ljmp
jecxz
xor
adc
in
mov
and
aad
inc
imul
lock
dec
cwtl
stos
and
sub
sub
push
fsubrp
sub
inc
xchg
jns
je
pop
mov
aas
leave
mov
filds
stos
mov
xor
cli
insb
cmp
pushf
dec
ss
mov
orl
sub
add
xor
mov
jne
jb
jl
push
out
cmp
jge
xchg
stos
inc
xchg
movsb
lea
pop
cmp
aaa
xchg
cmp
stc
subb
add
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
sbb
or
insl
sub
pop
andb
adc
xchg
mov
inc
rcll
jecxz
pop
xchg
inc
fidivrs
dec
out
pop
or
adc
je
mov
dec
push
xchg
adc
cmpl
addw
inc
pop
loopne
mov
add
and
aaa
fistps
lcall
dec
add
push
sub
sub
js
mov
fwait
vpcmpgtb
add
nop
addr16
pop
xor
or
dec
pop
add
sbb
leave
and
pop
add
push
test
pop
faddp
stc
pop
test
and
pop
fcomps
push
dec
sub
pushf
adcl
mov
sbb
jnp
xchg
push
arpl
adcb
sub
aad
push
aaa
xchg
data16
jl
sub
xchg
add
xlat
xchg
pushl
enter
cld
pusha
mov
lock
int3
js
pop
das
jmp
xor
sbb
jge
or
aaa
das
adc
sub
adc
cld
sub
fstps
or
cmp
and
dec
aad
inc
mov
jp
mov
subl
mov
mov
lret
mov
je
out
mov
adcb
xor
adc
xor
xor
sbb
nop
out
xchg
sub
cmp
lea
in
xor
and
push
loop
or
or
and
popf
adc
xor
sbb
leave
xorb
inc
xor
ljmp
and
cmp
sbb
mov
cmp
int3
jno
xlat
and
nop
inc
sub
adc
mov
xlat
out
mov
lret
call
pop
loop
cwtl
imul
orb
push
les
rcll
sbb
inc
das
jecxz
bound
pop
or
notl
mov
adc
outsl
mov
pop
add
push
adc
je
lret
push
cmp
mov
cld
xchg
adc
rcrb
pop
sub
or
xor
mov
ja
sub
jae
sub
lret
iret
test
add
out
jae
or
lret
mov
cli
pop
inc
push
and
mov
jbe
adc
outsl
loop
push
jmp
sub
pop
and
inc
test
xor
jbe
ja
hlt
sub
popf
dec
testl
mov
loopne
add
cli
push
sub
lahf
pop
cmovle
adc
fnsetpm(287
jb
and
jae
or
add
adc
fldl
inc
pop
mov
and
or
mov
xchg
jne
jnp
mov
ljmp
loopne
cmpl
xor
daa
xchg
inc
push
in
lea
xchg
testb
repz
pop
xchg
xchg
stos
shll
adc
dec
test
shlb
fildl
test
jo
cltd
push
xchg
or
and
in
sbb
jnp
sub
dec
mov
xlat
notb
popf
push
dec
imul
xor
cmp
dec
push
dec
or
popf
xchg
mov
sub
ljmp
and
add
xor
sahf
lea
aad
mov
push
outsl
ret
push
test
inc
or
popa
adc
sbb
iret
mov
jno
movsl
dec
and
add
test
mov
xor
cwtl
pushf
sbb
mov
movsl
pop
sub
sbb
mov
cmp
add
popf
sub
cmp
in
cli
push
repz
in
divb
mov
hlt
adc
ss
or
mov
lcall
outsl
pop
xlat
test
jbe
rcrb
pop
jge
hlt
pop
testl
adc
push
cmpsb
or
shrl
hlt
dec
xchg
or
or
aam
mov
pop
or
icebp
jno
jns
mov
and
push
xor
mov
fadd
ljmp
sarl
shl
push
cmp
repnz
push
sbb
into
clc
push
push
push
pop
push
xchg
mov
xor
lds
sahf
or
push
imul
jg
lock
in
sbb
push
cmp
lea
cmp
mov
pop
pop
lret
mov
nop
andl
fs
add
sbbl
leave
pop
rcrb
inc
push
xchg
add
and
xchg
and
and
and
push
mov
ret
cmp
es
cmp
lds
sbbl
leave
adc
daa
xchg
sbb
pop
mov
jmp
stc
andb
test
and
mov
shrb
inc
cs
inc
push
pop
sub
sub
cmp
sub
push
xor
sub
icebp
or
insb
pop
mov
xchg
aaa
arpl
pop
fcomps
repnz
mov
push
push
sbb
xchg
jl
inc
imul
test
push
xor
pop
and
in
fcoml
xor
icebp
fs
inc
out
mov
sub
outsl
xchg
xorl
jle
dec
mov
pop
adc
dec
adc
pop
rcl
jo
ja
push
or
pop
movsb
jns
lcall
jns
and
fidivrs
push
adc
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
out
pop
imul
mov
inc
pop
or
aad
inc
pop
or
push
loope
xlat
sbb
or
iret
ss
push
mov
push
push
inc
add
je
testb
or
and
fisttps
cmp
les
lret
pop
popa
or
push
les
push
rclb
mov
lock
add
adc
jmp
shl
std
xor
pop
insb
or
icebp
fcmovu
push
pop
clc
loopne
add
push
push
fadd
lds
add
mov
jl
lcall
fsts
pop
adc
mov
dec
add
jne
pop
pop
cwtl
pop
or
data16
dec
lock
test
out
mov
data16
push
hlt
dec
sub
gs
call
or
pop
pop
dec
cld
dec
push
pop
push
xor
pop
push
push
xchg
xchg
mov
dec
adc
test
shlb
adc
xor
xor
mov
xor
pop
les
adc
or
icebp
or
or
or
and
es
sti
mov
sbb
push
out
or
cmp
cmp
je
inc
xlat
adc
hlt
dec
stos
cwtl
xor
sarl
mov
dec
add
add
sub
into
cmp
push
inc
icebp
mov
int3
lcall
inc
add
cs
js
add
ja
dec
nop
xor
in
lahf
ret
je
daa
loop
or
add
test
popa
call
mov
orl
imul
mov
pop
push
cmpsb
inc
fisubl
fcomps
fs
lret
enter
sbb
mov
rol
rorl
add
in
mov
les
fisubs
inc
fidivrl
push
pushf
shll
mov
or
pop
xor
jbe
popa
pop
orl
add
daa
push
clc
jle
dec
rclb
ja
adc
iret
xor
fdivs
push
ds
push
addb
inc
ljmp
push
inc
or
repnz
jo
addb
hlt
inc
add
bound
adc
nop
xchg
push
call
jnp
inc
jne
push
loopne
shr
out
subb
jge
mov
mov
clc
pop
adc
push
sbb
hlt
add
aaa
add
scas
in
add
adc
jle
push
add
push
andl
movl
mov
push
pusha
mov
pop
sbb
adc
pop
jp
lds
dec
xor
lods
push
sbb
pop
dec
adc
in
push
lea
movsb
mov
rep
adc
xchg
mov
lods
adc
inc
dec
daa
xchg
stos
jmp
adc
xchg
movsl
mov
mov
scas
mov
push
ret
add
pushf
fstpt
lret
arpl
ffreep
mov
mov
jne
or
int3
sbb
adc
daa
jecxz
and
lea
rolb
add
aas
lret
dec
adc
incb
cs
cmp
mov
push
dec
jo
adc
sbb
mov
and
dec
sub
inc
inc
inc
in
cmp
rorl
mov
scas
insl
ja
dec
push
inc
jmp
mov
and
dec
insb
aaa
or
shll
bound
pop
pop
mov
mov
lahf
test
mov
add
add
push
add
jl
scas
movl
xchg
xchg
sbb
mov
jg
sahf
or
add
add
sbb
stos
mov
xor
pop
inc
mov
mov
jae
and
mov
adc
sbb
sbb
mov
mov
mov
mov
and
mov
mov
cmp
or
cmc
nop
pop
add
or
je
and
adc
sbb
loope
pop
push
test
pop
cmp
mov
dec
fs
dec
in
ja
jecxz
aas
imul
or
pop
or
loope
test
into
ret
pop
mov
add
in
inc
or
clc
jg
adc
cmp
jle
cld
jae
inc
add
outsb
mov
subb
ret
and
adc
cmp
loopne
ret
cmp
add
mov
faddl
outsl
rorl
sub
cmovle
stc
xchg
sub
add
fldcw
pop
mov
lret
jp
cltd
push
mov
sbb
jmp
xor
lock
mov
js
scas
pop
xchg
and
outsb
push
loopne
mov
repnz
dec
inc
push
mov
dec
sub
mov
lods
add
sub
leave
cmpsl
stos
pop
cwtl
sub
mov
aam
stos
xor
mov
test
add
cmp
rcrb
add
mov
push
arpl
add
pop
xor
dec
add
adc
sub
mov
fimuls
call
shll
fldt
add
pop
mov
add
test
mov
lea
fistl
mov
and
pop
or
xchg
xchg
inc
or
mov
sbb
das
or
sbb
lret
adcb
insb
sti
push
ficoms
pop
jmp
scas
jo
inc
scas
enter
mov
jno
movsl
push
push
push
push
addb
dec
inc
push
push
cld
jno
adc
pop
dec
andl
add
lods
out
rcrl
mov
and
cmpsl
pop
mov
xor
popa
repnz
lea
jmp
loopne
stc
or
data16
adc
subl
cld
add
or
aaa
adc
adc
loopne
mov
sbb
mov
sbb
jne
and
call
pop
xchg
adc
push
xor
cmp
fimuls
mov
mov
mov
mov
xchg
sbb
out
xor
mov
push
loopne
inc
inc
mov
enter
clc
popa
adc
sbb
adc
inc
lea
iret
pop
dec
inc
bound
xor
es
or
call
adc
or
mov
inc
js
pop
mov
dec
jnp
push
inc
daa
adc
outsl
lret
popl
add
fidivl
jo
daa
cwtl
sbb
jo
sbb
movb
dec
popf
inc
jnp
xchg
cltd
mov
mov
stos
nop
bound
sub
scas
cmp
pop
and
pop
in
dec
xchg
cmp
lea
pop
push
push
xor
fcmovnb
push
test
push
daa
push
stos
orl
sbb
xchg
stos
sub
call
scas
je
sahf
incl
sbb
xchg
push
sbb
lds
iret
leave
push
fsubl
inc
push
jl
sbb
inc
cmp
mov
and
add
int
test
shlb
nop
inc
pop
or
or
inc
movsl
adc
mov
lahf
xor
in
or
push
sub
stc
test
add
dec
dec
dec
xor
add
std
sub
xor
icebp
test
and
stos
nop
popf
insl
adc
mov
or
das
je
fmuls
and
imul
pop
jb
aas
add
lods
xor
data16
in
fidivrl
adc
aas
pop
dec
test
fisttpll
cmp
insb
andl
mov
js
dec
add
fistpll
fistpll
jmp
mov
data16
adc
xor
rcrb
sub
inc
js
sub
mov
pop
loop
movsl
out
or
inc
lea
jbe
imull
and
push
mov
test
xor
mov
loopne
js
fcmovu
cmp
dec
fisubrs
adc
xor
lea
xor
mov
fs
inc
dec
jo
cs
or
sbbb
push
inc
out
loop
cmc
adc
lods
dec
sub
mov
pop
fs
push
inc
push
fldcw
add
cmp
loopne
xor
or
pop
dec
int
adc
lds
or
orb
nop
mov
push
push
ja
sbbb
cld
or
sbb
add
dec
pushf
outsb
mov
adc
in
imul
xor
jmp
mov
add
cmp
push
push
sub
ss
inc
icebp
push
inc
lcall
sbb
fs
bound
push
xor
ret
push
pop
and
push
outsb
pop
mov
add
jo
fwait
mov
addl
cmp
shlb
je
js
add
outsl
movsl
jns
mov
outsl
into
adc
push
movl
cwtl
popa
cmp
or
push
mov
xor
movsb
arpl
test
gs
pop
adc
rcl
insb
pop
je
sbb
xorl
add
sti
mov
push
sbb
aas
sbb
adc
scas
mov
add
test
and
cmpsl
loop
ljmp
mov
xorb
jne
in
push
cmpsb
mov
in
aaa
add
pop
cmp
insb
js
rcrl
push
sbb
mov
add
push
jge
push
and
push
mov
add
stos
in
outsl
int
lds
je
je
adc
dec
dec
fs
cs
add
dec
add
or
dec
add
enter
add
xchg
inc
jo
xchg
adc
outsl
pop
push
pop
sbb
testl
mov
les
rcll
sbb
repz
sbb
mov
add
adc
jno
cltd
arpl
mov
mov
inc
xor
adc
nop
dec
nop
dec
xchg
rorb
add
aam
push
xorl
imul
lea
sub
push
inc
test
inc
mov
mov
add
pusha
mov
xchg
mov
int
pop
dec
jmp
rorl
stos
mov
or
or
clc
inc
outsb
hlt
int
test
add
or
adc
adc
enter
movl
in
jo
shr
repnz
pusha
icebp
or
mov
aaa
int
movb
jno
xor
mov
or
sub
push
adc
jle
fs
or
pusha
dec
push
mov
sarb
jge
mov
sub
xchg
push
or
sbb
jp
test
loopne
sub
lea
jb
jle
cmp
or
pushl
dec
mov
cmp
inc
jno
insb
arpl
dec
mov
add
mov
add
dec
xchg
sbb
mov
sub
sub
dec
sbb
push
mov
mov
cmp
lods
jnp
loopne
and
adc
je
adc
cli
or
push
ret
push
and
lds
inc
and
and
ljmp
or
add
les
lea
pop
dec
or
push
imul
and
je
adcb
jnp
dec
add
movsbw
inc
jg
xchg
mov
cmp
jne
xchg
fucomi
and
or
or
fwait
dec
add
xor
inc
adcb
sbb
mov
pop
add
inc
hlt
mov
hlt
push
inc
rol
out
push
jg
rolb
pop
pusha
roll
dec
cmp
adc
jo
dec
lods
pop
js
je
and
ficoms
fidivrl
sbb
imul
lret
xor
xchg
mov
push
aas
ljmp
inc
fucomi
add
cmpsl
push
repz
add
leave
sbb
or
les
cmpsl
and
xor
sahf
add
dec
mov
inc
popf
or
jb
mov
shll
inc
gs
jnp
outsb
ret
push
sub
xchg
addr16
jp
dec
sbb
je
std
lock
dec
mov
test
inc
or
mov
test
neg
mov
test
and
add
or
pop
push
popa
sub
movsb
neg
out
popa
sarb
in
add
push
jecxz
leave
xchg
pushl
push
push
add
mov
ret
mov
bound
mov
sbb
and
inc
ret
xorl
sub
dec
push
call
sub
push
pop
jg
sbb
fs
xchg
sbb
sub
xor
dec
and
add
mov
dec
xlat
cli
mov
daa
jne
cwtl
xchg
mov
outsl
xor
das
push
jg
and
adc
mov
test
rcrb
xchg
aam
mov
sbb
jecxz
jb
inc
xor
mov
dec
in
adc
mov
imul
add
bound
hlt
leave
and
scas
wbinvd
repz
sbb
sub
clc
cmp
adc
or
xchg
leave
inc
or
test
pop
fnstcw
pop
pop
and
jae
call
mov
cmp
andb
push
mov
repnz
push
in
test
mov
mov
mov
pop
mov
jle
sub
scas
mov
add
movl
mov
mov
pop
scas
xchg
lock
rorb
pop
js
popf
xchg
or
int3
out
xchg
icebp
add
push
push
push
nop
pop
jp
push
out
mov
add
mov
inc
cmp
adc
pusha
fbld
insb
and
mov
and
stc
imul
xor
call
cwtl
mov
movl
jo
inc
or
cmp
inc
dec
inc
adc
mov
sbb
dec
xchg
mov
shrb
add
pop
adc
test
addl
addl
icebp
sub
sbb
das
jmp
and
sub
cld
or
jne
movsl
add
and
and
add
sarl
or
adc
mov
in
subb
jp
push
push
and
movsb
mov
aam
hlt
adc
sub
lret
jmp
aam
clc
sub
dec
stc
add
push
add
push
push
push
push
es
and
jne
pop
xor
mov
push
mov
cmc
push
cmp
add
icebp
push
jne
mov
nop
call
sub
aas
nop
xor
cmp
jne
and
jnp
push
mov
push
rolb
bound
cmp
fsubl
cmp
mov
cmp
and
push
gs
rclb
jo
pushf
push
mov
mov
repnz
xchg
xor
ficoml
adc
lret
mov
push
fiaddl
dec
jmp
and
in
inc
inc
jmp
cld
jmp
push
test
fadds
xchg
testb
push
movsl
cs
xor
jbe
inc
cwtl
cmpsl
popf
add
lcall
adc
aas
pushf
lea
inc
add
je
pop
add
fs
mov
lods
fnstsw
mov
or
sbb
pushf
cmp
jle
addl
js
add
xor
jo
jp
xchg
xchg
jbe
icebp
mov
mov
popf
enter
adc
aam
dec
sbb
jnp
push
nop
pop
dec
push
outsl
mov
loopne
dec
sbb
adc
cmp
lds
cmp
push
test
loop
xchg
popa
add
push
fs
mov
mov
sti
mov
lcall
sub
dec
xor
pop
add
movsb
rclb
add
inc
fsts
dec
cmpsl
or
cmp
int3
push
rol
or
pop
push
push
stos
into
cmpsb
mov
mov
mov
xchg
pop
or
push
inc
mov
lahf
addr16
out
negl
and
lds
push
arpl
cltd
adc
adc
adc
push
xchg
mov
mov
add
das
mov
std
push
cli
pop
shll
ljmp
lahf
lock
jb
xchg
inc
jne
lcall
ja
les
mov
add
dec
fists
jo
and
push
sbb
ss
mov
sbb
in
lea
adc
cmp
and
iret
loopne
cmpsb
push
push
mov
and
jo
xor
jg
push
xor
sbb
pop
or
mov
clc
jo
arpl
mov
scas
xor
mov
pop
mov
mov
orl
mov
adc
pop
add
adc
ds
leave
push
add
test
orl
mov
xchg
test
in
lock
roll
or
enter
or
pop
hlt
jmp
and
dec
ljmp
adc
sub
jl
mov
sub
addb
xor
outsl
mov
add
xchg
mov
mov
scas
add
pop
dec
pop
xor
and
les
mov
cld
jmp
sbb
es
lahf
add
cmp
je
inc
push
int3
pop
jl
and
push
cmp
lods
sub
dec
out
lock
dec
out
jmp
jae
rolb
je
gs
outsl
loop
das
cmp
or
insb
push
inc
push
sub
pop
daa
xchg
cmpsl
push
push
out
cmp
jbe
cmpsl
mov
or
jnp
loopne
adc
lcall
fiaddl
js
xchg
or
adc
mov
ret
cmpsb
push
stos
and
aas
mov
andl
lods
pop
inc
nop
lret
lret
or
stos
jnp
xor
inc
mov
loope
dec
add
lods
ret
xor
das
dec
mov
add
xchg
clc
into
cld
add
es
xchg
jae
lea
shll
add
dec
popa
add
jmp
test
adc
push
loopne
or
imul
loopne
rcll
sub
fiaddl
and
stc
pop
pop
sub
push
sbb
adc
xchg
mov
adc
cmp
push
jo
jle
add
cmpw
sbb
cmpb
sub
push
pop
add
in
scas
jmp
pop
push
pop
mov
add
sar
inc
jmp
push
je
sbbb
mov
jns
and
pop
jns
call
add
xor
adc
orl
test
jne
xchg
dec
jl
int3
test
jl
sub
jmp
std
outsl
jg
out
cld
lcall
dec
movzwl
cmpl
push
enter
adc
rorl
out
and
gs
add
add
imul
pop
and
sub
pushf
lock
mov
and
jae
xchg
dec
in
cmc
dec
push
inc
pop
pop
in
inc
xchg
add
push
ret
adc
pop
mov
sysret
or
dec
loopne
pop
and
leave
movb
and
stos
bound
dec
cmp
jne
jb
fs
push
loope
lock
add
add
cli
pop
dec
pop
push
pop
push
dec
lods
sbb
add
shl
and
dec
es
jle
mov
js
sbb
sbb
repnz
loop
and
movsb
or
push
imul
icebp
add
popf
dec
out
inc
add
adc
or
xor
addl
sub
imul
add
push
mov
scas
clc
fldl
xchg
jne
adc
movsb
and
stc
jo
or
pop
add
adc
movsb
push
nop
xchg
xor
dec
add
lock
into
mov
aaa
mov
adc
xor
xor
push
data16
or
fwait
mov
lret
in
out
mov
inc
iret
mov
lock
test
jle
sub
jmp
fiadds
mov
cld
jmp
push
mov
dec
nop
and
add
mov
mov
shll
xchg
mov
xor
push
outsl
pusha
sub
xor
adc
popa
dec
repnz
and
push
add
sbb
jne
inc
pusha
xor
and
add
push
add
dec
mov
pop
dec
daa
rcrb
add
jp
cmpl
pop
je
or
in
aaa
in
adc
test
hlt
imul
mov
and
shl
push
cmp
mov
test
jecxz
sbb
mov
adc
sbb
jl
jne
dec
sub
inc
hlt
ret
call
lea
out
pusha
push
ret
pop
inc
lret
test
pop
jne
imul
dec
movsl
shrb
or
cmp
push
and
and
scas
push
sbb
icebp
and
cmp
movsl
aad
lods
adc
push
or
scas
xor
xchg
sbb
idiv
fists
dec
pushf
nop
mov
cmp
jnp
and
loopne
dec
scas
and
xchg
mov
lock
inc
pop
sbb
aam
lock
inc
dec
or
mov
psubw
or
das
mov
push
lds
jle
lods
or
cli
dec
inc
fnstenv
stos
xor
adc
shlb
lock
nop
aaa
lahf
in
or
adc
addb
inc
mov
push
leave
push
xor
sub
jmp
push
ret
test
inc
sti
dec
xchg
test
add
dec
jmp
dec
ja
clc
ret
dec
or
jae
sub
lea
jle
xor
push
inc
aaa
mull
pop
lea
jmp
push
push
das
mov
inc
inc
pop
pop
push
sbb
test
testl
sbb
xor
adc
pop
dec
fisttps
sub
ljmp
pop
in
inc
fimull
xlat
push
inc
push
dec
or
sub
pusha
adcl
jl
pusha
add
xchg
xor
inc
add
mov
inc
mov
add
push
sbb
daa
add
or
mov
push
sbb
mov
sub
adc
dec
nop
lods
inc
mov
xor
nop
cmp
pop
sub
push
ficompl
mov
dec
clc
push
dec
mov
loope
sub
push
or
inc
add
jmp
repz
sbb
dec
inc
fcmovbe
fimuls
sub
mov
mov
pop
dec
mov
sbb
inc
inc
shrl
in
push
scas
xlat
pop
xchg
js
repz
cmp
xor
xlat
sbb
push
push
xorl
push
stos
sbbl
or
and
push
test
jecxz
pop
pop
fwait
ljmp
dec
test
push
dec
mov
add
push
cmp
push
fdivrp
push
sbbb
jmp
movsb
xor
pop
jae
pop
cmpb
cmc
insl
adc
add
xor
pop
jge
clc
mov
add
rolb
int3
into
rclb
add
xchg
push
pusha
add
push
push
iret
push
clc
mov
pop
mov
sub
pop
dec
mov
dec
pop
clc
push
mov
repz
cmpl
jo
pop
sahf
movsl
inc
mov
or
loop
movsb
adc
or
push
insb
xchg
sub
dec
xorb
push
int
ret
fmuls
dec
shr
inc
fisubl
es
mov
sahf
data16
push
fidivrs
inc
mov
jo
mov
or
push
adc
fdivl
push
sub
enter
push
icebp
fistps
sbb
ficoms
repz
movsb
lret
cmp
xor
jle
cld
out
dec
cld
out
jmp
add
loop
and
movsl
sub
dec
es
xor
pop
pop
in
fisubs
lea
xchg
mov
sub
add
jae
push
and
and
faddl
push
xor
ret
sub
cmpsb
cmp
cmpsb
cld
daa
test
leave
in
or
xor
mov
lods
jno
mov
dec
mov
mov
push
push
push
pop
repz
push
xor
pop
mov
adc
rclb
cmp
pop
rcrb
cmc
cmp
and
xchg
call
adc
mov
cwtl
jmp
push
jg
lods
clc
repz
cmp
outsb
or
out
pop
arpl
aaa
add
rolb
bound
ret
push
out
mov
pop
sub
arpl
xor
mov
ljmp
outsb
push
or
add
leave
cmpsb
cmp
test
or
xor
push
inc
or
cmpsl
jns
jns
xor
and
in
sbb
pushf
and
cmp
test
ret
dec
adc
mov
xor
xor
shrl
xor
jne
adc
mov
dec
mov
dec
pop
cltd
mov
inc
ja
test
xchg
or
cmp
dec
pushf
inc
inc
dec
dec
xor
sbb
or
jns
cmp
or
adcb
adc
pop
and
test
xor
dec
sub
subb
mov
or
enter
mov
lret
lea
xor
nop
jo
insl
push
cli
and
mov
mov
stc
addr16
cmp
or
pop
popa
mov
scas
and
in
push
orb
push
pop
or
jae
aaa
ljmp
call
push
fcom
push
fs
test
lock
addr16
xor
les
inc
add
pop
test
das
je
push
sub
insl
iret
rclb
and
into
sub
lods
xchg
inc
rorl
int
loopne
lock
mov
lods
fs
push
test
rorl
lea
addl
insl
sbb
inc
lods
sbb
mov
lea
jae
push
jb
sub
sub
leave
xor
xor
or
sub
sahf
lods
es
mov
imul
mov
shll
push
add
mov
cld
cltd
pop
shlb
push
cmpsb
out
cwtl
mov
popf
or
push
or
mov
adc
inc
daa
push
mov
insl
pusha
add
xorb
int
push
and
icebp
or
les
mov
add
movsl
dec
sub
push
push
nop
xor
lea
movsb
or
or
in
adc
loope
pushf
xor
inc
mov
adc
cmp
push
or
xor
inc
mov
inc
add
pop
adc
mov
cld
bound
shrb
push
xchg
adc
cmc
rolb
or
adc
jg
popa
stos
enter
and
movb
xchg
push
es
adc
cltd
xchg
or
sub
or
leave
xchg
mov
and
testl
test
test
ds
shlb
mov
fsubrs
sbb
in
xor
pop
pop
test
or
addl
out
lods
or
imull
div
add
movsb
sbb
add
insb
dec
sbb
jns
test
jecxz
inc
xor
jp
xchg
xchg
push
sub
loop
jne
lea
mov
movsl
pop
cmpsl
add
orl
xchg
sub
dec
and
push
mov
int3
insl
lahf
sub
lahf
hlt
push
xor
rcll
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
inc
lock
adc
repnz
ss
outsl
and
sbb
fucomp
pop
cmp
mov
and
shlb
inc
pop
jae
jne
nop
sub
fstps
dec
cmpsb
and
push
dec
lcall
aam
inc
cmp
xchg
jp
hlt
jge
in
popf
cld
icebp
mov
cs
sub
stos
in
in
mov
mov
enter
inc
aas
movsl
sbb
mov
lods
cltd
xchg
xchg
mov
or
rol
push
jo,pt
add
fdivrs
rcrb
imul
test
mov
insl
inc
rcrb
dec
flds
test
jb
or
pusha
mov
test
insb
int
cs
pop
xor
and
das
mov
mov
sub
push
dec
sub
pop
dec
sbb
movsb
sub
lret
shl
push
sub
xchg
fisubs
cmp
push
xchg
popf
orb
movsb
scas
jecxz
les
pop
push
xchg
bound
sub
inc
hlt
adc
or
add
pop
sub
sub
loope
mov
in
inc
mov
outsl
bnd
inc
out
adc
lcall
mov
stos
jecxz
rcll
in
cmp
add
push
xor
add
addl
xor
and
dec
mov
mov
imul
push
pop
inc
jo
push
pop
dec
movsb
push
or
mov
mov
dec
add
add
lds
movsb
xor
ret
xchg
add
lret
sti
pop
aaa
ret
push
pop
rcrb
adcl
sets
push
lods
or
js
or
inc
cli
xchg
out
push
push
or
jno
cmp
int
cmp
inc
pop
and
inc
jns
jp
add
push
and
mov
sarb
sbb
lods
sub
or
out
dec
push
ret
pop
adc
xor
outsl
stos
ret
cmpsl
add
lcall
test
loope
add
movzwl
add
pop
dec
movsl
loopne
pop
sbb
mov
movsb
shll
fstp
pop
aaa
or
inc
sbb
inc
or
jae
lret
pushl
rcrb
jnp
xchg
push
fisttpl
xor
lods
jns
cmp
jne
sbb
popa
mov
push
cmp
insb
push
jnp
or
adc
jo
cltd
push
push
jp
mov
insl
mov
xor
jno
popf
add
xor
bound
mov
add
mov
mov
sbb
inc
jg
cmpsl
data16
xor
insb
les
or
or
mov
movaps
movsl
imul
or
insl
out
gs
xlat
sbb
push
xor
outsl
or
sarl
rol
push
inc
pop
mov
mov
mov
jb
adc
loopne
repnz
cmpsb
int3
sbb
pop
jle
loopne
nop
repz
in
pop
loope
inc
clc
inc
loop
mov
xchg
sub
inc
ret
add
or
insl
adc
in
and
lcall
les
mov
aam
outsb
inc
clc
xor
jbe
jno
push
mov
mov
pop
pop
movnti
mov
adc
sbb
adc
aam
scas
cmp
and
pop
xor
pushf
pop
add
faddp
push
mov
xor
mov
das
xlat
pop
jo
sub
jae
cltd
insb
xor
arpl
aam
dec
mov
and
ss
push
or
repnz
test
pop
insl
sbb
bound
out
adc
sbb
inc
jmp
cmpsb
outsl
push
pop
add
repnz
lahf
inc
add
sbb
adc
and
pusha
push
lds
cwtl
xor
adc
adc
daa
stos
jno
jecxz
test
pop
popa
add
sub
xchg
sub
loop
jl
es
lods
jb
out
adc
sub
scas
jns
das
mov
sbb
icebp
push
xor
xchg
sbb
rorl
sbb
cli
inc
sub
dec
sub
daa
pop
pop
push
nop
popa
xchg
xor
xor
popf
arpl
xchg
loop
filds
sbb
stos
das
pusha
stos
dec
ds
inc
es
push
mov
sbb
ja
xchg
ss
mov
aaa
hlt
insl
pusha
or
xchg
movsl
pusha
inc
loop
push
dec
adc
cmp
icebp
lea
push
jmp
aaa
add
out
mov
jns
dec
inc
sbbl
mov
sub
cmp
sbb
out
and
add
aad
cmp
inc
push
outsb
sbb
xorb
outsb
pop
push
outsb
xchg
pop
nop
stos
and
or
or
or
ds
jo
jmp
and
mov
and
add
mov
add
insl
xchg
sbb
sarl
out
add
pop
push
or
nop
xchg
add
clc
in
push
pop
mov
push
icebp
add
subb
rcll
inc
mov
jge
fucomip
pop
nop
or
push
push
mov
mov
mov
into
add
aas
movsl
xor
out
push
xor
push
mov
or
ss
scas
jp
int
inc
push
adc
push
and
stos
movsl
push
sbb
enter
jmp
xor
add
and
sbb
enter
adc
je
xchg
dec
dec
mov
das
mov
inc
and
mov
sub
adc
sti
add
ret
xchg
add
sbb
dec
cmp
testl
sub
or
mov
cmpsb
sbb
xor
lds
mov
stos
mov
test
cmp
pop
mov
mov
shr
push
sbb
and
js
mov
inc
inc
or
pop
or
cs
ret
adc
inc
xor
lahf
mov
in
jne
and
or
loope
sub
test
xchg
sbb
adc
inc
dec
mov
jg
aam
inc
in
push
adc
mov
aam
or
pop
in
add
inc
mov
add
fcmovbe
adc
pop
inc
frstor
adc
and
or
sti
push
icebp
jl
jmp
jecxz
aaa
sbb
nop
mov
adc
incl
mov
mov
pusha
and
inc
or
into
inc
push
popa
ss
or
or
mov
cmp
sbbl
outsb
push
adc
fisttpll
dec
xor
inc
mov
je
cs
sbb
dec
mov
mov
and
loopne
add
call
popa
push
mov
xchg
enter
cmpl
stc
or
or
dec
pop
stos
in
mov
push
jae
in
jnp
les
xchg
out
inc
cmp
es
hlt
adc
sbb
je
or
and
or
pop
add
push
jle
jne
sub
out
das
fcomps
mov
push
adc
sub
adc
jg
mov
cmp
int3
rcrb
pop
dec
sbb
test
scas
ss
mov
sbb
add
push
shl
xor
cmp
je
or
adc
push
pop
loop
popa
pop
ret
mov
add
and
mov
insl
fs
icebp
or
into
nop
sahf
imul
jnp
mov
lods
mov
mov
jnp
jbe
sub
sub
or
adcl
add
push
pop
push
push
push
sub
ds
pop
lret
fs
mov
cmpxchg
inc
push
push
fnstcw
out
inc
sbbb
sub
pop
andl
mov
xor
ret
pop
sbb
jecxz
lret
cwtl
pop
mov
testb
inc
jl
xchg
sahf
pop
subb
daa
push
or
inc
stc
jb
inc
xor
and
mov
rclb
outsb
in
sub
setp
pop
aas
push
add
xchg
or
sbb
or
call
and
cltd
into
cmp
call
mov
outsl
aam
pusha
add
das
fnsave
and
das
mov
sbb
or
rorl
lock
mov
pop
xor
iret
push
sub
lea
push
lods
or
add
sbb
sbb
adc
sbb
push
leave
ret
fwait
cs
hlt
inc
add
xchg
adc
mov
add
test
push
roll
mov
cmp
sbb
mov
cwtl
push
fucom
pop
fcoml
fcom
adc
mov
ret
adcl
outsl
es
ret
mov
test
or
fwait
lret
dec
pop
mov
fisubs
jmp
into
test
push
aas
and
addr16
stos
jne
pop
adc
ret
xchg
loop
add
push
and
lahf
fistpl
sarb
fbld
jbe
dec
push
pop
or
or
aam
xchg
or
add
xor
mov
ret
popf
dec
les
cmpsl
xchg
xor
xor
xor
mov
inc
adc
bnd
mov
pop
in
pop
ret
adc
jne
and
sbb
or
clc
xchg
fwait
sbb
cltd
or
add
pop
popf
adc
cmp
pusha
push
pop
mov
xor
in
jb
inc
and
test
jmp
push
jbe
movl
lods
inc
push
ja
inc
movl
call
adc
pop
sti
push
and
add
and
scas
jge
pop
cmp
and
sub
cmp
fiadds
test
push
cmp
fidivl
adc
sbb
push
mov
mov
sbb
or
xchg
lds
adc
adc
loopne
push
cmp
outsl
adc
sub
adc
push
mov
push
rcrb
add
pop
adcl
in
fisttpll
int
mov
pop
in
data16
insb
pop
add
lea
fsubs
data16
mov
sbb
pusha
stos
cmpsb
xor
adc
mov
pop
decl
fstl
sbb
shll
rcrl
mov
jle
push
mov
and
jmp
xchg
xor
jle
vmovddup
adc
cmp
push
cmp
jle
cmp
fisttps
push
cmp
cmp
cmp
mov
mov
and
inc
jmp
repnz
movw
xchg
ljmp
hlt
sahf
cld
les
dec
fwait
inc
or
fs
pop
idiv
xchg
test
rolb
adc
xor
mov
sbb
lods
ficoml
cmpsb
or
bound
cmp
in
jnp
icebp
test
mov
add
test
sub
dec
outsl
call
mov
popa
or
hlt
repz
lea
mov
xorl
arpl
sub
and
aaa
dec
xlat
or
mov
movsl
or
cmp
jb
adc
and
xchg
lret
adc
inc
sub
push
xor
mov
cmp
push
cmp
mov
int
xor
xchg
xor
sarb
mov
add
orb
insl
lock
dec
jb
push
dec
jb
popf
rorl
dec
or
pop
mov
pop
pop
pop
pop
or
roll
or
mov
pop
leave
and
shlb
or
add
dec
and
daa
and
ss
push
push
rclb
insl
or
in
or
jno
jbe
andb
je
mov
add
sarl
xor
pop
mov
pop
adc
adc
mov
dec
xor
pushf
xchg
bound
sbb
arpl
data16
inc
nop
mov
push
sub
rclb
and
xchg
and
or
xchg
shlb
pop
cwtl
push
lcall
rcl
dec
and
dec
add
xchg
popa
and
push
pusha
push
sahf
popa
ret
mov
fs
rcr
jne
push
or
jecxz
rcl
adc
int3
add
inc
subb
ficompl
push
lock
and
sbb
fdivrs
and
sbb
sub
sub
sbbl
test
jg
ss
mov
sbb
stc
adc
in
pop
test
push
outsb
and
xchg
sub
loopne
mov
push
fstl
and
ljmp
push
inc
pop
mov
sub
dec
adc
bound
push
fsub
cmpsl
std
cmp
mov
test
hlt
mov
cmp
push
add
add
orb
je
popf
adc
add
adc
or
orb
leave
adc
and
mov
pop
add
adc
pop
add
or
add
hlt
inc
or
adc
test
mov
xchg
sbb
dec
test
loopne
push
inc
push
shrl
cmp
dec
insb
pop
mov
and
xchg
jge
xor
lret
mov
jo
adc
loope
mov
stc
fwait
inc
repnz
jae
pop
xor
out
stc
add
push
rol
je
mov
sbb
push
mov
mov
pop
push
and
sbb
sbb
push
add
js
add
push
adc
sbb
icebp
or
add
fimuls
enter
jne
lea
add
cmc
add
xor
push
icebp
xchg
fsubl
mov
lock
repnz
shrb
lods
mov
cmpsl
cmpsl
cmp
or
aam
lds
adcl
add
push
stos
das
in
add
sub
lock
enter
fistl
sbb
pop
or
and
or
cmp
or
in
mov
add
ljmp
jbe
lea
mov
add
outsl
add
jp
sbb
add
pop
sub
arpl
addr16
sub
popl
repz
and
sub
shlb
and
pop
add
sbb
sar
inc
push
call
push
fsubs
mov
out
cmp
adc
stos
push
js
lock
aad
pop
push
loopne
adc
pusha
or
pop
les
sbb
in
aad
mov
push
popa
stos
out
ret
cmp
jne
stc
push
insl
lea
ret
adc
into
push
popa
xchg
mov
subl
add
adc
pop
xlat
and
fildl
lea
cltd
xchg
xor
loopne
adc
inc
push
icebp
pop
adc
daa
fadds
sub
xor
enter
add
repz
pop
clc
or
push
xchg
dec
add
push
adc
dec
cmp
stos
loopne
pop
pop
adc
test
add
push
imul
or
adc
xor
notl
out
je
adc
aaa
inc
xchg
inc
push
fdivl
mov
add
mov
loop
mov
inc
and
push
pop
fldcw
and
shl
add
sub
inc
add
inc
inc
jl
dec
loop
test
xchg
testl
sub
das
add
push
mov
inc
push
ss
inc
inc
push
std
ret
out
and
popf
push
mov
xor
mov
aaa
je
mov
out
sarb
add
jge
js
jne
sub
insb
movsb
pop
inc
sbb
or
xchg
movsl
sub
push
dec
call
mov
dec
fldl
loopne
les
clc
inc
fidivl
enter
movl
pop
push
push
fldl
push
sbb
mov
add
fstpl
and
fsubrl
in
mov
fstpl
xor
pop
cmc
decb
fbstp
mov
jo
jnp
xchg
add
and
add
dec
clc
loope
fsubrp
pop
aaa
push
cmp
push
inc
repz
insb
jns
repnz
sbb
mov
in
ret
jb
dec
ss
test
iret
and
cwtl
jbe
mov
dec
add
dec
pop
ss
lods
outsb
testb
or
xor
fwait
scas
aam
nop
mov
ss
sub
adc
or
shll
jbe
imul
mov
jge
or
neg
subb
clc
add
test
pop
loop
pusha
pop
xor
insl
dec
mov
popa
bound
popa
movsl
jo
xorb
shrb
add
jnp
ja
and
lock
mov
js
bound
fcmove
ret
and
dec
pop
push
rcrb
sbb
jp
add
add
push
pop
cltd
push
pop
fnsave
jnp
sbb
add
or
add
ret
push
daa
and
mov
jb
pop
add
leave
shld
add
ja
jb
clc
lahf
add
ss
push
inc
mov
push
add
push
je
lods
roll
or
add
mov
std
ds
leave
adc
mov
push
adc
push
push
pusha
pop
addb
int3
or
or
cli
adc
push
push
push
fiaddl
dec
pop
pop
dec
leave
adc
dec
arpl
dec
pushf
push
mov
fmuls
dec
push
sub
cmp
mov
shlb
shlb
push
testb
notb
add
adc
sub
pusha
call
sbb
sub
dec
inc
cmpw
jne
mov
cld
mov
adc
inc
inc
cld
cmp
sti
mov
jmp
push
push
jl
mov
mov
aad
repnz
cmp
or
push
loopne
enter
push
cld
mov
push
push
push
clc
jmp
push
push
pop
in
jnp
mov
xor
xlat
int
mov
push
orb
inc
xor
jb
roll
sbb
ds
mov
ret
lcall
add
sbb
insb
aaa
jle
sbb
inc
add
cmp
sbb
mull
jnp
fwait
jp
std
and
je
mov
add
enter
jbe
xchg
ja
xor
movsl
adc
push
movsl
jnp
fld
sub
cmp
loopne
cld
rcll
pop
js
sbb
fxch
pop
movsl
sahf
pusha
adc
dec
adc
test
pop
pop
and
xor
pushf
shr
jmp
push
or
movsb
std
mov
test
pop
xchg
xchg
lock
xor
movsb
xchg
pop
nop
in
aaa
mov
pop
sub
rcrl
pop
js
test
or
rolb
pushf
stc
es
push
test
mov
lret
xchg
add
lock
pop
xlat
andl
add
inc
sarb
push
add
push
lods
mov
adc
pop
sbbl
fisubl
pop
je
arpl
ds
fwait
pop
ret
pop
add
dec
cmpsb
add
aam
mov
ja
jne
nop
xchg
sbb
cmp
push
rclb
xor
push
xor
or
jno
aaa
fwait
repnz
mov
xchg
xor
int
fs
ret
test
mov
jb
xchg
push
ja
in
or
and
mov
sbb
pop
fidivl
xor
sbb
fstpt
pop
sbb
cmc
loopne
repnz
cmpsb
repz
in
push
je
imul
or
test
pushl
sbb
add
jecxz
push
rep
nop
push
int3
test
add
movsl
push
sbb
or
loopne
subl
push
jo
hlt
dec
push
sbb
mov
adc
pop
movsl
pop
aam
int
orb
loopne
cli
movsl
psrad
aas
icebp
xor
movsb
ret
mov
or
std
push
lods
inc
pop
rclb
test
push
ja
xor
add
mov
push
jmp
pusha
jmp
jno
outsb
daa
mov
jge
ljmp
icebp
and
xor
out
jle
inc
mov
fs
add
add
sub
jg
je
dec
je
add
sbb
dec
jne
dec
mov
push
push
in
push
xchg
or
dec
pushf
or
jge
cmpsb
push
push
sarl
or
mov
sub
push
test
in
mov
push
xchg
out
cmp
jnp
cmpl
mov
inc
mov
cmp
hlt
push
push
push
in
inc
push
andb
adc
push
cmp
nop
fs
enter
leave
inc
or
push
pop
push
push
stos
mov
out
sub
push
adc
fs
xchg
or
nop
inc
push
cmp
xchg
inc
push
cmp
lods
enter
xor
or
dec
fs
enter
sarb
xchg
call
inc
push
cmp
subb
lock
and
mov
call
fs
xlat
insb
loope
jmp
decl
gs
repz
adc
cmp
repz
pop
orl
mov
iret
repz
rcr
out
sti
add
nopw
sub
jns
dec
push
pop
imul
jge
fwait
xchg
sbb
stos
jo
inc
aaa
push
pop
aam
call
imul
xchg
shl
lret
ret
dec
dec
lock
mov
and
pushf
xor
nop
sti
fwait
ret
dec
je
xchg
int3
repz
cmpl
pop
int3
hlt
fisubs
rol
jno
or
xchg
xorb
mov
aam
fwait
jmp
jl
mov
shrb
lcall
test
es
push
and
out
fcompl
test
test
mov
fmull
fisttpll
add
lods
pop
faddl
dec
or
push
mov
pop
movsb
and
xor
sbb
loope
int
sbb
in
fs
test
adc
mov
test
and
mov
adc
pop
roll
sbb
mov
dec
mov
cmp
cmp
cmpb
jge
jge
movsb
pop
push
cmp
push
push
hlt
cmpsl
sub
shl
add
dec
out
dec
mov
adc
fcompl
xchg
fistpll
mov
shll
sub
ja
or
and
insl
xchg
lea
daa
jns
or
push
xchg
je
push
add
cmovnp
enter
add
cmp
sarb
sub
adc
cltd
fadds
shrb
pop
dec
cmpsb
cwtl
nop
xchg
adc
rclb
or
mov
pop
jnp
cmp
or
mov
orl
test
cmp
cmp
xlat
pop
push
adc
imul
mov
jge
cmpb
or
mov
xchg
pusha
mov
pop
xchg
mov
push
inc
xchg
and
stos
pop
enter
out
in
mov
mov
mov
pop
adc
xor
jp
rcll
hlt
adc
mov
push
lea
fildl
push
mov
dec
leave
sub
int3
mov
mov
dec
mov
mov
add
cmp
mov
add
icebp
push
dec
jp
jmp
fisttpl
fidivl
imul
cwtl
fwait
dec
mov
out
cmpsb
xor
push
cmp
push
and
cmp
push
das
mov
fisubrs
insb
push
pop
jl
rcrb
jp
mov
cmpsb
and
mov
dec
inc
mov
insb
mov
push
jle
icebp
xor
es
and
mov
xor
sbb
dec
lcall
dec
lcall
dec
lcall
dec
lcall
ss
sbb
add
popa
mov
add
popf
mov
test
jl
mov
hlt
stos
mov
test
into
mov
addl
push
insb
xlat
incb
mov
mov
sbb
repz
sbbl
cmpsl
cmp
enter
or
push
pop
ret
in
vmread
ljmp
pop
decb
loopne
rolb
imul
mov
sbb
gs
add
fs
stos
ror
sbb
in
push
cltd
sbb
and
mov
mov
or
dec
jns
sbb
js
lea
inc
rcrb
sub
sbbl
sbb
es
test
xor
test
and
jge
or
xor
addl
cmp
inc
mov
push
mov
cmp
pop
push
mov
cmpsl
mov
mov
mov
xchg
push
xchg
sahf
xor
rcrl
xchg
sbb
add
popf
pop
rorl
mov
lea
test
rorl
pop
test
adc
sub
cmp
int3
lods
addr16
xchg
cmp
mov
sub
xor
movsb
jo
jp
aas
push
adc
inc
test
es
imul
es
and
bound
in
aaa
loope
orl
dec
enter
ss
push
cmp
nop
adc
push
sbb
push
inc
or
pop
sbb
inc
and
ret
inc
mov
in
adc
sbb
push
push
outsl
into
ret
sub
xchg
jo
scas
movsb
adc
add
jno
pusha
and
inc
inc
mov
dec
pop
pop
mov
test
and
xlat
shlb
inc
adc
lock
adc
outsl
mov
jmp
push
sub
ljmp
stos
mov
in
sub
mov
dec
fcoml
movsb
mov
dec
dec
popf
and
and
and
push
cmp
pop
sbb
push
mov
test
sbb
iret
ja
lods
mov
lret
and
movsl
shlb
sbb
pop
sub
test
jne
or
pusha
mov
xor
clc
test
push
popa
or
mov
sbb
xor
push
nop
pop
and
or
xor
mov
fimull
aam
or
xor
and
jl
sbb
and
add
loop
call
imul
pusha
nop
sbb
push
and
push
xchg
ret
push
arpl
push
in
in
mov
jne
inc
aas
jo
and
mov
or
cltd
outsb
dec
repnz
mov
cmp
mov
js
gs
jl
add
enter
scas
jne
test
or
dec
sahf
inc
sahf
nop
push
call
lcall
dec
sahf
fsubl
adc
adc
inc
repz
or
add
xor
add
and
pop
mov
jns
adc
push
inc
test
adc
push
mov
pop
push
enter
fidivl
sbb
mov
in
push
adc
int
negl
lods
fwait
push
mov
scas
pop
xchg
lods
sbb
test
mov
pop
imul
enter
push
mov
imul
cltd
nop
data16
mov
mov
and
mov
orb
ret
adc
imul
inc
cmp
mov
nop
dec
dec
fs
pop
cmp
mov
inc
test
sbb
nop
adc
push
outsl
inc
sbb
cwtl
xor
int
pop
pop
push
inc
popa
sub
pop
int3
adcl
inc
mov
addr16
dec
adc
adc
mov
movsb
pushf
xchg
pusha
nop
jno
mov
lods
shlb
test
out
mov
and
je
movsb
cltd
or
add
or
pop
sbb
leave
inc
sbb
popa
push
fwait
popa
xor
xor
or
sbb
and
les
inc
pop
lret
xor
pop
inc
mov
addb
inc
xor
loopne
outsl
imul
or
push
rorl
repnz
test
push
and
cld
icebp
sbb
inc
xor
jo
out
adc
dec
cs
roll
sub
sbb
jge
faddl
add
mov
or
lahf
movb
lods
add
mov
shlb
cmpb
adc
outsl
or
aad
sub
sbb
divl
adc
sub
inc
or
push
mov
or
data16
sbb
adc
mov
or
imul
mov
test
jle
sbb
setb
inc
icebp
push
popf
sub
push
mov
xor
loop
mov
dec
sub
pop
fmuls
xor
leave
push
mov
ret
cmp
fdivrl
and
push
mov
arpl
inc
ret
loope
mov
mov
adc
enter
adc
mov
inc
pop
dec
repnz
sub
mov
mov
or
rcrl
aam
sbb
fstpl
or
fs
fiaddl
imul
pushl
in
popa
add
push
xchg
mov
xchg
cltd
aaa
cmpsl
xor
jl
ror
mov
sahf
jge
pop
dec
xchg
orb
nop
pop
and
fwait
and
mov
adc
and
push
sub
test
and
and
movsl
pop
and
jl
andl
sub
push
pop
es
sub
pop
daa
push
fs
sub
mov
sub
and
lods
enter
xor
pop
insb
sub
dec
dec
movsl
pushf
shrb
dec
movsl
pop
loopne,pn
dec
cmp
mov
lea
mov
in
dec
dec
xlat
addb
and
je
dec
pop
adc
insb
mov
notb
clc
pop
inc
push
cs
or
popa
xor
fisttpll
loop
dec
popf
das
cmp
rorl
or
shlb
inc
lcall
movsb
cltd
sub
or
mov
movsb
cltd
nop
fs
push
and
movsb
cltd
nop
and
lcall
mov
pop
cwtl
push
or
movsb
nop
sbb
sbbb
sbb
xor
shlb
sbb
mov
int
sbb
pop
mov
dec
dec
rclb
movsb
loop
sbb
sahf
cmp
adc
rorb
mov
rcr
push
js
in
orl
add
les
andb
stos
pop
shll
mov
aaa
gs
xor
cld
rcl
int3
movsb
adc
icebp
fdivrs
sbbb
jle
cmp
or
and
bndstx
dec
cwtl
mov
jns
push
imulb
pop
jecxz
repnz
pop
and
scas
aam
xor
shll
sbb
pop
or
and
pop
jg
test
cmp
xor
fimull
and
push
jmp
xchg
cmp
cmpsb
adc
sub
and
sub
inc
inc
fnstenv
cmovns
ret
ss
dec
inc
and
pop
mov
inc
cmp
popf
mov
push
inc
or
cmp
shlb
cmc
xchg
pusha
jl
mov
push
movsl
daa
xchg
lock
decb
call
jae
cmp
lcall
cmp
adc
inc
dec
test
cmp
rcrl
stos
add
popf
ljmp
push
jo
fs
add
test
repz
lods
imul
outsb
addr16
mov
movsl
ja
test
cmp
sub
test
aam
mov
std
add
addr16
jmp
in
add
mov
stc
aad
mov
ror
pop
lret
mov
add
jl
fidivrs
test
arpl
pop
inc
adc
mov
je
inc
xor
repnz
cmp
inc
andl
sub
push
cmp
cmp
outsl
sarl
push
push
clc
or
push
jbe
add
sub
ret
or
call
xchg
mov
mov
lcall
jb
adc
and
xor
pushf
lea
and
inc
cmp
loopne
cmp
sbb
push
lock
jbe
mov
xchg
cmp
jne
inc
add
mov
jl,pt
dec
lods
or
push
addb
mov
mov
test
push
or
iret
jne
mov
sub
add
pop
shl
cmp
jae
inc
adc
cmp
loopne
sub
call
jmp
rorl
add
or
scas
in
cmpsb
adc
mov
ret
adc
inc
and
test
jecxz
inc
add
sbb
adc
daa
inc
add
dec
jnp
roll
xchg
mov
mov
or
jne
mov
xlat
aad
pop
inc
js
dec
or
ds
jne
call
mov
push
loopne
sbb
imul
adc
rcll
add
in
ds
pop
adc
lret
jo
sbb
push
sbb
and
mov
add
dec
pop
inc
jbe
xchg
pop
push
jo
jl
sbb
cmpsb
sbb
sub
fmuls
xchg
data16
daa
ret
xchg
sbb
pop
push
jmp
shl
adc
inc
enter
imul
xchg
jae
sti
decl
add
ds
jl
or
je
adc
jg
je
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
aaa
pop
mov
and
mov
nop
inc
mov
addl
xchg
clc
mov
test
jo
cmp
pop
cltd
ret
inc
pop
nop
bound
mov
mov
loop
cmp
test
push
mov
hlt
pop
adc
fiadds
pop
dec
push
mov
jnp
adc
shrb
lods
rorl
orl
in
mov
push
xor
outsb
inc
ss
add
mov
pop
cmc
ss
mov
sbb
xchg
lock
pop
addb
cmpb
je
dec
fisttps
in
add
in
push
mov
pushf
inc
lret
popl
wbinvd
jae
xchg
inc
pop
pop
cmp
sbb
fadds
xor
adc
jne
stos
lret
pusha
push
jnp
push
add
enter
je
cmp
cmp
addr16
dec
and
jecxz
outsl
loop
add
mov
sbb
mov
push
mov
mov
add
sbb
data16
xlat
fildll
outsl
test
ficomps
testb
pop
jp
inc
xchg
imul
inc
mov
jbe
xor
jno
xchg
dec
arpl
int3
push
dec
loopne
rorb
mov
flds
loopne
xor
sub
dec
imul
nop
sbb
sbb
mov
loope
push
push
dec
push
xor
bnd
jne
out
scas
mov
cmp
or
adc
popf
xchg
aad
orb
fistpll
ret
pop
lock
xchg
rolb
pop
add
pop
sbb
sub
or
jg
outsl
sub
jle
dec
sub
mov
xor
xor
cli
call
sbb
mov
xor
and
jmp
cmp
add
lret
xor
mov
sbb
flds
xor
fs
ss
loop
mov
dec
add
dec
loope
xchg
jl
cmp
lea
cmp
add
pusha
adc
xchg
roll
in
insl
orb
pop
clc
fnstenv
inc
mov
pop
popl
sub
dec
pop
dec
sub
or
nop
lods
dec
add
sbb
test
xchg
sbbb
leave
cmp
adc
jbe
sub
sbb
fadds
sbb
aad
xchg
sar
test
inc
mov
or
add
aam
inc
mov
out
mov
sub
cmp
inc
gs
sub
or
sbb
dec
add
pop
loope
sbb
jbe
test
fcomps
cmp
aas
cvtdq2ps
xorb
shrb
movsb
es
adc
pop
stos
fstpt
jecxz
cwtl
cli
jne
dec
mov
xchg
or
fmuls
xchg
cld
or
xchg
test
inc
rol
xchg
fldl
out
out
out
pop
push
test
fistps
lea
aaa
xchg
and
jle
cmc
xchg
jno
in
movsl
adc
sub
loope
dec
add
out
dec
pop
jl
or
addl
fcoms
adc
andb
dec
fmull
and
sub
cmp
rorb
dec
in
popa
fmuls
inc
dec
hlt
push
inc
sbb
add
add
and
stos
add
nop
add
fsub
or
cmc
inc
movsl
js
fstpt
mov
pop
stos
int3
enter
lock
sbb
cmp
lea
sarl
xchg
int3
repz
roll
mov
aaa
add
add
dec
push
add
and
cltd
or
add
or
bound
fistl
clc
jge
nop
test
adc
cmp
andb
sbb
sbb
xor
add
cmp
dec
xor
or
push
jne
pusha
push
jmp
inc
push
stos
add
and
dec
loopne
mov
mov
cmp
cmpsl
je
stos
mov
aas
pop
aaa
push
enter
push
rorb
cmp
notl
push
sub
and
add
jns
inc
sub
mov
cmp
enter
je
push
les
push
adcl
sub
call
adc
shl
shrb
in
mov
inc
or
in
loopne
add
or
test
push
add
sarb
mov
jmp
add
aam
dec
xor
sub
test
clc
loope
add
je
in
dec
add
sbb
xor
dec
adc
fistps
sub
cli
mov
xor
jne
je
mov
jbe
sarb
sarl
out
test
js
out
xlat
sub
sti
clc
jne
mov
adc
push
fadds
adc
cmpsb
xor
fsubs
adc
mov
sbb
jmp
cmpl
dec
adcl
enter
nop
rolb
add
push
enter
xor
mov
xor
xor
rclb
nopl
ds
notb
lea
dec
je
in
cmp
inc
jne
nop
sub
imul
pop
fsubrs
add
push
dec
xchg
add
cmp
daa
cmp
mov
or
scas
dec
shrb
xor
or
dec
popf
shll
xchg
call
rdtsc
xor
enter
fst
loopne
sbb
mov
xor
lods
bnd
or
aad
or
lret
clc
inc
das
je
aad
xchg
mov
dec
lea
lea
jns
jnp
and
into
outsl
das
mov
push
sahf
fcompl
lcall
cs
idivl
cmp
test
jne
es
pop
mov
pusha
clc
jb
jne
jno
ret
jle
add
mov
sbb
or
add
dec
or
dec
subl
lret
pop
sub
push
push
andb
cmp
sub
mov
addr16
sbb
icebp
mov
lea
jmp
call
add
rclb
mov
adc
in
decl
cli
mov
push
js
push
cmp
dec
mov
cmp
jle
test
arpl
pop
les
sahf
mov
enter
pop
pop
inc
add
inc
or
xchg
mul
cmp
push
xor
pop
jecxz
or
add
seta
movl
pop
out
jl
jle
mov
pop
jecxz
in
ret
ret
pop
pop
adc
mov
xor
stos
jo
fists
add
dec
je
int
pop
pop
push
fldl
hlt
dec
es
mov
fildl
hlt
cmp
adc
jne
out
jns
daa
bnd
adc
hlt
jne
or
sbb
out
jne
or
push
mov
sbb
xor
popa
subb
mov
and
mov
aad
loopne
adc
inc
sbb
add
popa
imul
xchg
adc
clc
int
inc
cld
mov
push
jl
mov
lea
fstpl
mov
dec
hlt
pop
lea
add
es
mov
sti
push
lcall
push
aaa
aam
sub
daa
mov
xchg
xchg
stc
sub
sub
shrb
hlt
int3
jae
mov
jnp
xlat
or
cmc
int3
dec
dec
sbb
lea
mov
pop
aas
or
clc
adc
in
les
or
add
sub
fdivr
add
shrb
loopne
data16
jb
adc
mov
add
jl
pop
mov
cli
and
shrl
imul
ss
xor
mov
inc
loopne
or
sbb
add
lea
adc
xchg
insl
mov
movsl
pop
call
jne
jmp
orl
dec
popa
cmp
pusha
pop
enter
xchg
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
xor
adc
and
pushl
pop
add
icebp
sub
out
mov
fsubp
xchg
xchg
mov
jo
js
scas
mov
jg
data16
js
data16
jae
mov
mov
loopne
or
fmuls
or
fldl
ror
inc
sbbb
pop
sbb
sbb
inc
test
lods
xchg
or
shlb
test
sarb
sahf
and
sub
or
push
enter
outsb
jmp
push
or
jb
clc
nop
adc
xor
mov
push
mov
rcr
inc
sbb
xor
lods
or
lcall
data16
and
imul
push
xchg
movsb
push
loope
mov
cmp
imul
insb
orl
mov
jnp
pop
cmp
push
in
push
adc
push
cmp
ret
bound
xorl
pop
sbb
fildll
cld
adc
dec
test
bound
mov
pushf
mov
or
add
pop
jns
pop
ret
dec
xorl
out
inc
xor
mov
test
pop
jnp
das
adcb
sbb
xor
int
push
dec
ror
inc
out
pop
fs
sbb
cmp
sbb
xchg
inc
adc
mov
mov
pop
inc
adc
push
sbb
loope
leave
and
lds
sub
xor
adc
push
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
push
inc
and
sbb
sbb
mov
adc
pop
cmp
dec
pop
movb
lods
mov
and
inc
arpl
and
cmpsl
daa
and
add
fiadds
aaa
cmp
enter
push
lea
ret
das
add
push
dec
imul
mov
mov
inc
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
xchg
pop
xor
dec
push
out
sbb
imul
rcl
push
mov
inc
inc
add
jo
shl
shll
or
mov
js
xor
and
js
inc
scas
jae
jg
dec
cld
jae
je
push
xchg
xor
mov
lea
mov
xchg
inc
mov
push
fmul
loopne
into
xchg
ds
sbb
adc
cld
inc
jns
js
adc
negb
adc
mov
test
leave
mov
push
or
or
test
sub
out
sub
add
adc
xchg
jge
repnz
hlt
fld1
mov
push
shrb
popf
cmp
add
rorb
xchg
mov
adcl
jne
jno
in
adcl
pop
loope
mulps
pop
inc
rorb
arpl
addl
fbstp
test
es
jecxz
inc
pop
mov
mov
pop
push
lock
inc
add
fmull
test
pop
inc
std
xor
sbb
and
cld
sbb
pop
popa
mov
roll
idivl
mov
sbb
dec
inc
fcomp
push
lcall
dec
adc
fisttpll
mul
pop
pcmpeqd
rolb
mov
rcrl
sbb
cmp
dec
jnp
out
sub
xchg
add
aaa
push
rorb
dec
sbb
orb
int
fs
aaa
mov
test
addl
push
xchg
sub
jne
pop
adc
iret
shrb
or
mov
push
jne
mov
incl
mov
jle
xor
int3
pop
cmp
imul
pop
pop
lock
xor
and
push
pop
lret
adc
lret
inc
cmpsb
pop
add
daa
fcoml
and
mov
and
jne
ja
xchg
adc
xorb
out
and
or
cld
ja
inc
je
push
ret
je
adc
insl
cmpsb
fisubl
stos
cmp
add
jle
addb
or
sub
adcb
xchg
mov
jecxz
sbb
out
push
pop
add
cmpsb
or
inc
jecxz
test
aam
add
loope
push
add
jbe
sub
mov
and
bndstx
cmc
mov
das
cltd
pop
jmp
out
je
je
lods
xor
call
adc
fisubrl
mov
xor
rcll
inc
sub
xchg
jne
inc
popa
sub
push
fnsave
inc
or
or
and
or
xlat
shr
xchg
mov
mov
lods
adc
xor
push
jno
arpl
aam
xor
xchg
shrb
test
pop
aad
inc
std
push
sub
mov
or
mov
sbb
popf
add
adc
mov
add
pop
mov
sub
adc
mov
pop
inc
or
es
push
or
dec
aad
xchg
fiadds
sub
or
fnstsw
add
push
mov
and
lret
mov
pop
adc
ds
cmp
in
add
lret
test
aaa
and
lea
and
sarb
dec
xchg
jno
push
push
popa
mov
ret
fisubl
js
push
je
movsl
ja
mov
fisttpl
xor
cmp
je
or
and
jb
rolb
sbb
sete
mov
clc
adc
int3
push
cmpb
ret
mov
jne
jae
movsbl
mov
add
sbb
mov
add
sbb
aaa
sbb
pop
jmp
enter
incl
jg
lea
and
dec
inc
sub
dec
jmp
shl
mov
incl
or
add
inc
cmp
jl
cmpl
test
scas
xor
cltd
and
add
sar
add
xor
xchg
adc
clc
jl
jae
xor
ss
cmp
jecxz
ds
add
jne
enter
cli
lret
shr
xor
mov
mov
dec
jne
add
mov
xchg
or
scas
cmp
lods
cmpsl
mov
add
push
mov
inc
lret
ljmp
jbe
enter
jo
shld
lea
jmp
sub
inc
adc
roll
push
and
idivb
cs
push
inc
ljmp
cs
jle
insb
aas
mov
fcmovnb
pop
pop
pop
mov
test
addr16
testl
add
dec
jne
imul
enter
test
loope
rcl
cmp
pop
aam
repnz
xor
repnz
add
movsb
dec
push
ret
or
inc
adc
notb
dec
mov
movsl
fs
es
dec
orb
sub
or
adc
or
movsl
mov
scas
ficompl
sbb
push
cmpsl
push
xor
in
push
xor
pop
or
andl
leave
or
repnz
in
sbb
fs
add
sbb
loop
pop
repnz
sub
and
add
push
sub
bound
mov
sahf
jecxz
lock
pop
push
jmp
imul
pop
mov
cs
or
inc
or
lods
cmp
lods
jmp
fmull
mov
in
pop
add
jmp
push
in
nop
in
add
in
dec
dec
add
call
les
pop
add
push
sbb
dec
mov
and
xchg
sub
loopne
dec
jnp,pn
inc
pop
call
sbb
pop
pop
mov
cmp
xchg
adc
lds
ss
jns
lret
jg
push
jnp
cmpsl
add
lds
fldcw
out
push
and
inc
ds
sub
push
jmp
add
mov
add
in
insl
mov
and
shl
shl
dec
je
push
pushl
scas
inc
pusha
xor
push
push
mov
fwait
cmp
mov
cmpsl
xor
jnp
mov
fistl
in
in
cmpsb
mov
adcb
loopne
and
lcall
pusha
mov
push
inc
mov
xor
nop
test
rorb
dec
or
rolb
push
dec
push
xchg
inc
ret
out
mov
mov
test
mov
add
int3
dec
bound
xchg
scas
pop
mov
loop
mov
mov
rolb
or
xchg
sbb
xlat
push
shll
adc
aad
lret
mov
ret
add
jno
in
ss
mov
push
pop
aam
jle
lcall
shrl
push
std
jne
loop
sbb
or
aaa
mov
daa
adc
add
mov
sub
jmp
cmp
sbb
ret
xchg
pop
mov
fwait
adc
add
add
int3
pop
mov
dec
int3
add
fwait
cmp
add
sti
icebp
aas
push
pop
cmp
mov
mov
jecxz
pop
lock
je
dec
fdivr
adc
cmpsl
call
out
pop
roll
das
rcl
adc
bound
sti
push
bound
xor
and
sbb
in
mov
mov
pop
mov
test
gs
mov
sub
iret
xchg
cmc
mov
xor
xchg
and
adcb
sbb
dec
aam
add
insb
and
mov
testb
cmp
jl
cwtl
loopne
fdivrl
pop
jge
inc
call
add
xor
mov
sbb
mov
push
daa
movsbl
add
sbb
insb
call
cli
or
scas
push
decl
mov
aas
inc
test
mov
sbb
test
sbb
lret
movb
mov
push
test
repnz
or
add
sbb
shlb
cmp
dec
cmp
mov
xchg
mov
repz
xchg
je
dec
push
roll
jg
inc
and
test
add
test
aaa
cli
test
aas
cld
les
jp
jmp
xor
lock
mov
js
jge
mov
sub
test
adc
add
cmc
add
enter
mov
sbb
inc
mov
lret
sbb
call
mov
rcrb
cmp
je
pop
int
add
fcos
mov
pop
sbb
or
xchg
mov
xlat
std
lock
mov
loopne
loopne
or
cmp
mov
adc
das
xchg
nop
imul
mov
or
add
jle
jl
hlt
mov
inc
push
dec
mov
mov
mov
push
xor
adc
add
movzbl
mov
roll
sbb
js
jl
dec
cmp
addl
insb
ljmp
iret
push
std
scas
mov
incb
mov
add
out
pop
or
mov
nop
bound
nop
add
or
jmp
pushl
xor
mov
inc
call
jne
pop
push
stc
icebp
and
stc
lret
pop
fwait
jb
sub
pop
ljmp
add
inc
mov
xor
mov
sbb
cmp
and
test
arpl
or
push
adc
test
add
in
test
in
icebp
jae
mov
sub
insb
xchg
sub
cmpsb
ds
inc
cmp
adc
inc
in
jecxz
adc
push
enter
popa
aas
and
ja
pushf
jne
call
lret
push
scas
fadd
pop
clc
and
mov
and
push
popa
imul
push
rorl
loopne
xor
adc
xor
in
lods
das
mov
jae
push
inc
mov
and
adc
add
jno
or
mov
and
fadds
add
cmpl
push
shrl
cmp
in
lds
mov
push
jns
add
xchg
mov
xor
shll
lcall
cwtl
pusha
aaa
sbb
mov
stc
sub
ss
rcr
lret
lea
enter
iret
jbe
xchg
aad
mov
jbe
mov
inc
xor
add
ret
imul
and
insl
mov
pop
pop
mov
mov
das
push
cli
sbb
adc
mov
lea
mov
sbb
test
jno
ret
or
cmp
ja
jp
push
add
lea
imul
push
call
push
push
pop
pusha
cmp
push
jmp
cmpsb
or
and
push
test
sbb
adc
mov
jmp
ret
and
enter
inc
int
cltd
jbe
add
xchg
jne
fldcw
inc
or
pop
sbb
push
fcmovnb
call
push
js
push
call
xchg
xchg
cmpsl
mov
lcall
or
sub
pushf
popa
xor
push
cmp
dec
ds
xchg
in
cmp
push
std
pop
adc
inc
cmpsb
mov
fists
add
rorl
or
int
mov
test
out
nop
pop
fcomps
mov
add
inc
fwait
or
jb
movsl
sub
addr16
add
movb
adc
jnp
cmp
int3
sbb
xchg
pop
movsb
notl
cmp
inc
sbb
inc
adc
adc
cs
sbb
and
loope
jp
insb
jae
add
mov
add
and
nop
adc
stos
sub
movsb
fsubrp
jecxz
mov
int3
loopne
mov
pop
shrl
cmc
sub
out
test
subb
xor
iret
pop
add
mov
inc
or
push
mov
shrb
inc
nop
pop
push
adcb
pop
xor
in
adc
fmull
mov
adcl
cmp
sbb
mov
loope
mov
adc
loopne
insl
cmpsb
cld
and
dec
sti
cmp
dec
mov
mov
push
je
sbb
call
add
jnp
test
data16
scas
add
push
aam
push
and
inc
loope
shrb
sbb
adc
jno
cmp
test
out
lock
outsl
fdivl
mov
je
inc
pavgw
hlt
nop
mov
dec
add
cmp
in
push
test
jl
mov
mov
mov
xchg
movsl
shlb
out
jg
cmp
mov
jge
loope
jp
push
push
dec
fwait
movl
aas
push
stc
xchg
rolb
or
cmp
rorb
in
faddl
js
pop
fdivl
test
inc
add
push
or
testb
in
or
sub
add
cmpsl
int3
sarb
mov
adc
xchg
mov
test
mov
lcall
add
add
test
sti
addr16
inc
ljmp
and
into
and
push
lcall
popf
dec
lea
pop
jns
out
int3
test
inc
or
jmp
sub
loopne
lcall
inc
loopne
rcrl
and
add
enter
inc
aad
dec
jmp
ja
pusha
fs
dec
jmp
push
dec
mov
adc
inc
scas
push
imul
sbb
movsl
sarb
xor
push
push
cmc
and
out
mov
dec
add
xchg
jne
xor
popa
aad
push
sbb
psrlq
into
mov
push
pushl
mov
dec
cmp
jle
pop
cmp
jbe
out
xor
ljmp
jmp
push
pop
push
sbb
mov
pop
cmp
add
sub
adc
mov
nop
cmpsl
or
push
mov
data16
std
mov
xor
sbb
pop
clc
jne
mov
push
cmp
adc
shrb
gs
jmp
pop
mov
leave
xchg
movsl
xchg
addb
test
rclb
xor
fcomp
cmp
jmp
push
imul
dec
ss
and
adc
push
call
cmp
sbb
and
and
add
add
fwait
jno
and
call
xchg
popf
mov
jns
pop
es
add
mov
testl
cmp
jae
inc
jmp
stos
mov
cmp
and
enter
lock
testl
xor
shrb
loopne
subl
bound
fisttpl
rcrl
pop
mov
mov
xchg
stos
push
sarb
push
pop
adc
xchg
mov
cmp
add
andl
sub
xchg
jge
fs
xor
add
xchg
and
add
insb
dec
cvttps2pi
sub
call
out
mov
xor
sbb
inc
testl
jae
in
pusha
inc
shlb
mov
jmp
sti
xor
icebp
into
mov
es
adc
xchg
pop
sub
iret
andb
mov
and
mov
sbb
ds
pop
jne
or
pushf
adc
xor
test
push
push
jo
mov
loope
adc
mov
insl
push
cs
shrb
sub
xchg
lock
adc
push
cs
or
adcb
push
fimuls
mov
xchg
sub
sahf
add
sub
cmpsb
dec
xor
xchg
push
push
or
lahf
movsl
jae
aaa
and
and
sbb
stos
or
rcll
mov
xchg
mov
shrb
mov
lea
sbbb
sbb
or
add
cmp
sub
or
rorb
dec
testl
mov
popa
push
or
push
push
xchg
imul
jno
push
xchg
dec
pop
sbb
lds
add
fstl
sbb
mov
or
and
jnp
mov
xor
dec
or
mov
jne
cmp
test
test
or
les
into
mov
push
daa
call
lahf
fistl
sarl
lea
or
jb
adc
mov
xchg
aam
fcompl
or
push
gs
aam
xchg
xchg
in
sub
in
ret
ret
mov
in
ret
ret
sbb
rcr
sbb
cmpsb
push
sbb
outsb
popa
mov
insb
cmp
pop
jp
xchg
mov
stos
cmp
loope
jo
jb
sub
add
or
mov
sub
adc
cs
inc
mov
lock
sub
mov
aaa
or
or
ror
shll
sbb
shlb
mov
pushl
or
jl
push
inc
push
push
je
xchg
add
xchg
adc
fcoml
and
aam
jle
fsubrl
popa
das
jmp
pop
jecxz
sub
pop
fsubrl
call
mov
adcb
mov
xchg
repnz
mov
cwtl
mov
les
xchg
or
fisttpl
iret
movsb
dec
cli
xor
stos
nop
lock
pop
movsb
das
cld
dec
cmp
mov
push
stos
or
jl
cwtl
cmp
dec
adc
pusha
outsb
mov
imul
insb
lock
push
cmp
jb
cmp
xchg
cmpsl
popf
push
adc
cmp
lcall
jnp
dec
lods
push
push
dec
je
add
push
lock
je
insl
pop
mov
stos
or
adc
cmpsl
push
inc
adc
add
mov
movb
je
mov
imul
in
xor
sti
mov
filds
or
mov
cmp
repz
fists
cmp
je
cmp
jne
mov
sbb
add
mov
push
inc
mov
pop
dec
cmp
jns
or
cmpsb
push
jmp
testb
je
negl
js
or
sbb
aam
in
cmp
jbe
loopne
pop
adc
cmp
je
sub
inc
jmp
inc
and
pop
push
xor
pop
mov
cld
push
adc
add
xchg
hlt
test
jp
add
js
sbb
add
les
cltd
add
push
jl
push
xor
pusha
sub
mov
pop
cmp
add
sti
cmp
imul
cmp
bound
pop
les
clc
je
mov
arpl
sub
mov
test
xchg
sub
xor
gs
jge
mov
add
inc
cld
rorb
sub
je
pop
pop
dec
or
xor
add
arpl
and
and
jno
dec
push
mov
pop
mov
mov
aaa
jae
movl
pop
inc
shrb
shl
add
jmp
shlb
mov
sti
and
cmpsb
and
or
or
adc
push
test
jns
test
jne
xor
lock
subl
dec
push
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
out
ss
xor
sub
mov
mov
or
mov
push
add
or
xor
jbe
lsl
xchg
inc
jg
or
scas
or
cmp
push
xor
and
outsb
fsubl
jle
sub
sub
and
pop
or
jl
popa
adc
jle
pusha
bound
cmc
add
pop
aam
cmp
jbe
sbbb
push
and
pop
arpl
pop
add
and
adc
je
test
jne
pop
and
dec
adc
mov
clc
add
push
xor
mov
mov
adc
movb
inc
in
xor
push
sub
sahf
and
xchg
test
xchg
mov
data16
mov
inc
and
dec
add
adc
fsubr
daa
addb
mov
or
inc
fs
clc
loopne
add
daa
sbb
call
inc
push
lcall
jbe
clc
push
call
inc
popf
push
mov
insb
and
push
push
mov
mov
dec
aam
mov
or
push
fcom
int3
mov
inc
subb
and
insb
mov
popf
mov
lea
data16
mov
sub
dec
sarb
movsl
lods
fdivl
mov
mov
inc
sahf
rorb
push
push
imul
test
pop
sbb
imul
jg,pn
pop
push
jecxz
fidivs
cmp
push
xchg
jbe
push
stc
inc
xor
mov
add
or
cltd
test
jecxz
addl
jp
mov
ja
sbb
cmp
mov
jns
jno
imul
add
imul
dec
xchg
xchg
ja
fcmovu
add
mov
sbb
imul
lahf
xrelease
dec
sbb
and
nop
mov
jecxz
push
int3
loope
faddl
iret
orb
xchg
pop
cltd
or
jp
inc
test
cltd
lods
xor
fisubl
pop
stos
in
insl
push
push
inc
iret
ret
out
mov
es
hlt
pop
push
movl
push
adc
jmp
pop
mov
xor
push
lahf
mov
add
jbe
inc
add
lods
push
ss
mov
enter
mov
mov
xchg
aam
add
int3
add
xor
mov
cmpsl
add
lds
nop
cmpsl
andl
jecxz
or
push
add
pop
sbb
push
outsl
outsb
je
pushl
std
loopne
adc
mov
cmp
add
jnp
outsb
fsubr
jae
pop
push
xor
or
push
mov
dec
sbb
add
cmp
pop
ljmp
dec
lea
xorl
jb
pop
sub
lcall
inc
xchg
out
cmp
fbld
ficompl
mov
mov
icebp
add
inc
inc
mov
popa
jo
cmp
pop
and
push
into
test
cmp
or
or
out
and
fcoms
movsl
rorl
adc
outsb
cltd
mov
aaa
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
call
adc
cmp
pop
or
inc
push
fdivrs
shl
and
inc
push
sarb
rorb
xor
sbb
sbb
inc
push
mov
lock
in
mov
xor
mov
loop
inc
and
stc
je
fdivs
aaa
les
add
add
leave
add
pop
xor
call
mov
mov
add
das
push
ret
and
pusha
loop
jp
pusha
jb
loopne
decl
in
adc
roll
btc
daa
push
adcl
rcl
mov
mov
xchg
sbb
das
push
and
push
mov
orb
add
or
push
ljmp
push
clc
mov
mov
jl
push
cmp
mov
arpl
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
sbb
sbb
xchg
or
and
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
enter
mov
pushf
sbb
loope
mov
idivb
faddp
add
cmp
pop
cs
insb
loopne
fmul
insb
gs
sub
push
sbb
push
pop
lret
cmp
add
test
jmp
testl
mov
cwtl
cmpl
dec
push
cmp
ficomps
push
lret
test
and
jne
add
pop
jecxz
ret
jb
mov
out
xor
insl
jnp
das
das
mov
sbb
loopne
and
mov
dec
arpl
enter
cmc
cmp
cmpl
loopne
mov
sub
xchg
fcmovu
mov
or
xchg
lret
jmp
bound
and
sbb
push
cmp
mov
add
lret
ljmp
fmuls
jne
mov
daa
shrb
push
cmp
mov
sbbl
dec
jno
mov
loope
xchg
xor
repnz
test
dec
cmp
adc
lret
push
push
adc
mov
leave
repnz
ficoms
roll
jnp
pop
mov
fcmovnb
mov
xchg
jne
mov
icebp
cmpsl
inc
dec
movl
insl
ret
in
loopne
fsubs
sub
dec
xlat
push
shlb
aas
je
cmp
push
pop
jne
aam
flds
cmpsb
and
enter
imul
jne
pop
call
sbb
imul
in
stc
jbe
adc
jle
pop
jne
jmp
xor
sub
mov
sub
or
jmp
dec
and
xor
xchg
push
mov
lea
xor
add
je
pop
in
and
addb
pop
jo
pusha
pop
je
sti
lds
jno
and
shl
imul
adc
insl
into
mov
jae
scas
jg
mov
and
xor
adc
mov
enter
xchg
leave
jecxz
sti
mov
sub
decb
adc
cmpl
andb
pop
fimuls
sub
mov
sbb
jb
pop
pop
pop
fs
add
or
inc
bound
or
or
clc
adc
rorb
push
add
sbb
pop
ret
lahf
adcl
pop
loopne
mov
lcall
dec
adc
fildl
aas
add
inc
sbbb
push
mov
xchg
dec
in
out
adc
or
add
jno
xchg
xlat
push
push
push
push
pop
in
mov
pusha
or
xchg
lret
pusha
or
sub
adc
add
cmp
sub
loopne
addb
adc
xor
or
add
cld
test
mov
push
shll
dec
cmpsb
out
sarb
in
aas
jmp
push
inc
mov
adc
push
adc
insl
adc
push
add
push
popa
mov
push
in
push
or
inc
adc
sub
cmp
int
adc
sub
and
test
fsubrs
push
insb
or
or
cmpsl
or
add
daa
mov
lret
push
dec
cmp
es
xor
cs
lret
in
scas
sbb
ljmp
fisubrs
mov
scas
mov
pop
cli
sub
sub
pop
jmp
or
stos
mov
je
into
or
xor
or
sti
and
add
inc
popa
or
sbb
and
push
and
xor
insl
test
jbe
cmc
sti
sbbb
mov
or
xor
sti
mov
add
es
sti
pop
stos
mov
out
addr16
pop
push
mov
mov
pusha
jae
sub
loopne
rep
dec
push
in
cmp
test
sbb
sbb
cmp
adc
pop
xor
lret
je
xchg
dec
sub
in
and
push
mov
je
rorb
cmp
jne
ss
pop
fwait
mov
in
in
mov
add
adc
adc
shlb
adc
and
cmpb
sbb
out
out
test
nop
mov
cmp
je
push
and
mov
pop
cmpsb
pop
adc
orb
cmp
inc
cmp
test
pop
add
inc
jecxz
sub
std
adc
or
add
xchg
dec
sbb
push
sbb
adc
ds
add
movb
lea
dec
imul
add
in
jecxz
mov
xor
shlb
or
or
push
rclb
sbb
cmp
out
mov
ret
mov
out
sub
mov
je
or
inc
ds
cs
int
int3
jae
js
imul
push
bound
addl
add
add
nop
out
add
adc
ret
push
adc
rorl
mov
mov
and
cmpsl
jno
scas
insb
cmp
negb
mov
mov
pop
jno
mov
dec
cltd
mov
pusha
ljmp
jne
push
scas
mov
add
push
inc
cmpsb
in
inc
add
in
pop
jo
addb
movsl
sbb
push
add
jne
xchg
leave
inc
cmp
lea
pop
loope
adc
inc
hlt
mov
lock
clc
cli
hlt
aad
arpl
push
aas
test
loop
inc
inc
mov
cmp
ljmp
hlt
mov
enter
jne
je
pop
jb
daa
and
imul
add
scas
mov
jecxz
mov
mov
pop
call
mov
ret
and
int3
cli
add
pop
jg
loopne
pop
jmp
popa
lea
test
test
xchg
outsl
orl
sarl
and
push
pop
cmpsb
imul
mov
jne
shrl
mov
push
rclb
hlt
pop
add
test
xchg
add
inc
mov
push
or
jle
out
fisubl
loope
adc
pusha
lods
xor
jb
xchg
push
cmpb
mov
add
fnop
adc
add
pop
filds
lahf
notb
fsubl
xor
xchg
and
sub
or
sbb
cld
mov
sub
icebp
cmp
fdivrs
dec
push
in
push
adc
pop
sbb
mov
sbb
push
fcmovnbe
nop
ja
in
push
test
pusha
es
sbbb
adc
bound
and
xchg
mov
mov
jge
testl
sub
push
push
out
adc
push
popa
cmp
adc
add
dec
push
adc
ljmp
test
nop
inc
bound
mov
loope
jmp
mov
adc
sbb
sbb
mov
orb
add
mov
icebp
je
mov
or
dec
jne
jns
jo
adc
add
jmp
jb
dec
inc
in
sbb
lahf
or
jg
jbe
push
sbb
ja
jmp
mov
xchg
in
xchg
cmp
cmpl
test
out
sbb
adc
stos
fiadds
repnz
aam
loope
dec
cld
mov
fsubrl
and
jg
push
cmp
ja
lock
lock
call
ds
push
out
mov
mov
add
subl
push
test
xlat
push
fwait
es
mov
mov
or
pop
dec
test
icebp
je
fdivs
loope
mov
incb
jl
jmp
push
pusha
pop
pop
orb
enter
jmp
add
sbb
lret
lds
mov
cmpl
mov
insb
movl
sbb
sbb
test
push
xchg
sarb
sub
xor
daa
push
lea
mov
push
js
fsubs
and
mov
int3
add
jg
fadds
cmp
mov
and
jmp
add
lock
inc
push
xor
mov
jns
and
inc
ds
call
test
push
push
xor
inc
jbe
mov
jne
jmp
push
mov
cmp
add
lea
add
push
lret
movsb
mov
int3
or
test
ret
or
ret
pop
pop
adc
aas
sbb
mov
cmp
push
sbb
je
cwtl
hlt
sub
push
clc
xchg
jno
aas
in
pop
outsl
sbb
out
adc
pusha
xchg
pop
xor
mov
push
lods
add
and
inc
mov
cmpb
inc
push
sahf
inc
add
test
inc
ljmp
add
daa
insb
movsb
xchg
lea
or
jae
sbb
add
leave
sub
notl
stc
cmp
mov
cmp
ret
cs
push
or
popf
sbb
ja
add
pushf
pop
imulb
jnp
add
and
push
loopne
sar
adc
mov
cmp
repnz
fwait
mov
xor
add
adc
jge
pop
lock
jle
jne
nop
mov
jne
inc
dec
nop
push
add
rcl
adcb
mov
jle
dec
add
mov
xchg
fidivrl
test
push
and
pop
ret
pushl
push
iret
jmp
pop
ja
cmpsl
sub
testl
or
in
rolb
or
movsl
add
loopne
xor
xchg
js
ljmp
add
stos
fs
or
inc
inc
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
mov
add
sub
jns
sbb
call
push
push
push
dec
es
cmp
or
mov
xor
scas
sub
xchg
jne
ja
pop
push
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
ficompl
cmpsb
add
cwtl
add
cmpsb
or
cmc
ret
insb
jbe
add
push
sub
sub
stos
sub
jns
loopne
adc
add
xchg
pop
xor
cltd
xchg
divps
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
jne
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
out
push
mov
add
cld
rcrl
pop
inc
sub
and
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
pushf
and
mov
inc
add
sbb
xor
sahf
xchg
mov
das
arpl
arpl
add
xlat
or
mov
add
jo
in
cltd
test
mov
cltd
test
lea
jbe
in
pop
pop
loope
or
xchg
pushf
and
enter
sub
test
movsl
stos
mov
lret
rol
and
popf
or
loope
inc
and
push
adc
popa
dec
aam
sub
pop
push
rclb
inc
in
outsb
std
out
adc
dec
popf
fadds
outsl
aaa
xor
jns
push
fcoms
jo
in
sub
jo
xchg
jne
mov
sub
test
hlt
lret
jge
fnsave
pop
sarb
add
push
in
hlt
xchg
mov
pop
leave
mov
clc
sbb
mov
lds
and
fstpl
inc
push
and
lea
or
movsb
mov
adc
inc
cli
and
dec
shl
cmp
push
mov
addr16
and
icebp
pop
sbb
inc
sbb
mov
push
mov
jmp
sub
push
mov
inc
movsl
jmp
or
cwtl
cs
and
sarl
and
int
add
inc
mov
ret
or
pop
mov
sarb
adc
repz
and
and
sub
loop
push
or
dec
push
shrl
cli
popf
sub
and
fsts
ret
insl
mov
mov
xchg
mov
sub
mov
xchg
jnp
inc
cmp
dec
adcl
inc
or
and
nop
jbe
sahf
sbb
xchg
pop
push
add
ja
push
sub
dec
aam
mov
and
and
rclb
aaa
sbbb
inc
aam
out
sahf
xchg
je
inc
scas
push
push
adc
rclb
sbb
mov
sbb
gs
aaa
ret
outsb
insb
lret
fisttps
pushl
repz
push
jnp
pop
sahf
jmp
jge
push
jecxz
jmp
push
push
sarl
jbe
mov
xor
inc
push
xchg
jle
repz
push
rclb
sub
mov
mov
jo
xor
out
cmpl
pop
adc
or
push
lods
inc
mov
jo
sbbb
inc
mov
pushf
mov
cmpl
fdiv
adc
jne
adc
imulb
mov
mov
and
add
lea
mov
pushf
dec
xchg
add
xchg
jne
mov
dec
in
je
add
dec
lods
or
mov
data16
inc
shlb
loop
or
push
xor
xchg
mov
dec
inc
pop
inc
cltd
jmp
nop
or
nop
xchg
push
xchg
add
fcoml
mov
sub
loopne
outsl
add
daa
out
push
cli
mov
dec
xor
push
fiaddl
jg
jmp
adc
push
xchg
call
clc
adc
mov
lods
scas
jge
bound
xchg
mov
mov
adc
cmp
xchg
adc
ror
add
add
sbb
adc
hlt
push
inc
jbe
xchg
ds
mov
and
std
insb
jle
pop
add
pop
aas
mov
push
sahf
inc
loopne
mov
push
popf
inc
rcrb
bound
xor
fistpll
cmc
ror
aam
sahf
pop
jbe,pn
test
neg
jne
ret
mov
nop
push
fdivrs
add
clc
je
mov
jo
ror
add
sub
push
mov
dec
adc
jno
cmp
sbbl
mov
cmp
jne
cmp
push
inc
mov
inc
fsubr
adc
call
adc
xor
loopne
sbb
les
add
rcrl
je
cs
test
inc
mov
add
and
and
inc
imul
stos
mov
out
es
push
xor
and
mov
incl
cmp
pop
cld
fs
dec
cmpl
adc
add
jb
jmp
mov
inc
insb
jl
hlt
adc
hlt
xchg
cltd
push
jo
fmull
sbb
cltd
pop
push
inc
mov
dec
movzbl
fs
add
out
dec
loop
cltd
push
or
xlat
push
or
push
repz
enter
imul
je
sub
aam
or
push
mov
mulb
jg
push
or
stos
iret
adc
ljmp
jle
pop
fidivl
jmp
test
fwait
lock
inc
sbb
and
ret
xchg
popl
out
pop
es
test
mov
xchg
jne
jge
popf
das
or
pop
push
mov
scas
add
jle
test
and
test
push
jl
or
adc
scas
mov
sarl
mov
pop
jbe
sub
pop
xor
addb
mov
sub
mov
movsb
push
pop
or
add
fstl
ljmp
inc
push
inc
push
rorb
push
fbstp
cmp
jb
mov
push
dec
jae
pop
mov
dec
cwtl
cmp
dec
cmpsb
jbe
push
cs
cmp
shrl
xchg
sub
jp
adc
jp
inc
inc
cwtl
push
and
hlt
shl
xor
mov
mulb
fdivs
je
hlt
sub
dec
lods
push
roll
out
xor
mov
dec
add
push
test
cld
ja
shlb
dec
pop
shll
sbb
popa
aas
pop
sbb
and
sbb
daa
mov
mov
push
aas
inc
pop
jmp
cmp
loop
cld
jne
ret
outsb
pop
dec
sub
xchg
pop
push
test
jg
mov
adc
test
push
add
je
xchg
inc
xor
adc
mov
adc
adc
dec
xor
insl
jmp
in
add
lret
xchg
rcr
mov
out
cmp
ss
ds
cmp
cs
shll
add
xor
ficoms
mov
icebp
ds
dec
clc
mov
pushl
aas
test
inc
jb
xor
adc
nop
xchg
inc
push
jmp
gs
push
adc
adc
dec
jb
adc
cltd
fs
lret
adc
adc
mov
xor
sbb
or
das
addb
add
les
add
enter
pop
fcompl
cmpw
je
or
lret
icebp
rolb
out
fstl
adc
js
mov
std
or
xor
add
leave
lret
out
sbb
int3
pop
pop
call
stos
sti
movsl
imulb
jo
cltd
push
mov
ror
mov
pop
inc
inc
mov
test
lret
push
sbb
bnd
in
add
jl
inc
and
das
jmp
cmp
mov
sub
dec
sti
jge
cld
cmp
bound
rcll
adc
cmp
fmuls
movsb
cmpb
jb
adc
popf
push
in
mov
lea
mov
and
dec
rorl
mov
cmp
sbb
xor
adc
sub
adc
pushf
out
loope
mov
sub
pop
jnp
xor
add
xor
add
sbb
aaa
cmpsb
cld
imul
jne
sub
xor
movb
pop
mov
addl
sbb
std
and
subb
pop
adc
lret
mov
xor
pushf
jmp
inc
add
popl
lods
ss
push
popf
xor
mov
in
push
fidivs
aam
jne
sub
jmp
fcoms
clc
push
stos
push
mov
movsb
add
adc
add
jns
aam
jg
out
adc
mov
inc
or
adc
push
loope
fcmovnbe
pop
mov
fnsave
testb
push
js
mov
push
inc
sbb
mov
mov
clc
xchg
test
aam
adc
loop
xor
push
adc
rcl
aas
pop
jne
jl
jnp
ret
inc
test
in
jns
inc
fwait
stos
mov
mov
adc
decb
mov
in
or
scas
mov
out
pop
loope
xor
xor
cmp
test
cs
jg
icebp
outsl
js
add
iret
pop
xchg
repnz
pop
loop
mov
xchg
pusha
or
dec
push
je
or
movsb
push
inc
sbb
mov
imul
or
arpl
movsl
jl
mov
fstps
sbb
dec
popa
test
mov
pop
loopne
and
push
push
dec
pusha
stc
idivl
inc
jo
add
test
orb
test
cmp
or
sbb
jmp
inc
sbb
push
jmp
mov
push
lcall
aam
push
lahf
hlt
rorb
xchg
into
out
and
add
les
clc
jno
mov
or
jecxz
es
sub
adcl
les
imul
ss
lock
sub
push
cmp
sbbl
or
lea
push
int
lret
repnz
cmp
nop
popa
jmp
js
nop
mov
adc
and
jno
mov
inc
test
pushf
into
mov
xchg
repz
add
jg
out
push
test
dec
adc
roll
push
push
mov
mov
jp
ljmp
sbb
into
add
jo
jb
sub
and
fadds
mov
outsl
pop
rorl
mov
adcb
insb
loope
sbb
std
jo
xchg
decb
pop
jae
les
scas
jp
xor
adc
inc
sub
std
jbe
mov
stc
mov
inc
pop
sub
xchg
lret
scas
dec
aad
bound
mov
ljmp
lahf
mov
inc
xor
cltd
not
xor
in
push
or
movsl
xor
and
adc
imul
shll
cmp
ret
sbb
or
adc
mov
shl
mov
add
jo
sub
add
shll
lods
mov
xor
mov
lds
mov
xor
mov
cmp
mov
push
xchg
shl
push
add
push
shrb
dec
mov
adc
imul
stos
add
adcl
mov
xor
inc
imul
out
pop
adc
cmp
add
fwait
adc
fisttpll
aad
test
cltd
mov
mov
mov
mov
lock
loope
cltd
pop
cwtl
stos
lock
xor
push
push
sbb
xchg
jns
xorl
into
inc
sub
jae
mov
adc
test
bound
add
das
sub
xchg
push
subps
daa
xchg
mov
cmpsb
pop
ds
repnz
jne
std
push
mov
mov
push
mov
ss
sub
ret
hlt
insb
jecxz
les
adc
daa
dec
or
lcall
insl
loop
adc
clc
pop
add
adc
ret
test
push
add
xchg
add
addl
cld
and
adc
lea
rcrb
push
and
pop
roll
lahf
fs
jmp
or
test
es
xor
add
jmp
mov
int
or
push
mov
adc
sub
mov
or
inc
jmp
enter
inc
orl
mov
shlb
ret
ljmp
repz
lret
adc
or
cmp
inc
cmp
jbe
fimull
push
adc
idiv
push
aam
push
fs
aaa
gs
fmull
fcoms
shrb
sbb
mov
xor
pop
add
add
test
and
jl
dec
fistl
fs
xchg
cmc
in
sarb
les
out
hlt
movsb
or
inc
lcall
push
and
and
pop
pusha
add
notb
stos
or
loope
xchg
xor
out
dec
inc
mov
std
add
jb
or
dec
add
push
or
pop
shll
xchg
pop
lods
sti
add
xchg
or
das
lods
or
leave
pop
add
mov
jb
repnz
mov
movsb
lea
cmp
rorb
add
cmpl
and
mov
and
dec
jb
xadd
mov
mov
mov
movsl
xchg
pusha
pop
fistpl
mov
push
cltd
jecxz
push
and
or
xor
addb
cwtl
xchg
add
out
sbb
and
mov
sbb
or
repz
add
xchg
movsl
mov
xchg
lds
lods
xor
test
add
shll
sbb
cs
rcrl
sub
mov
inc
sub
into
pop
dec
ja
test
add
mov
cmp
je
cmp
xchg
insl
outsb
or
pushf
sbb
mov
sbbl
subb
adc
cltd
insb
sub
and
cmc
std
cmp
sbb
sub
pop
adc
and
in
daa
je
push
cmp
adc
push
or
cltd
mov
fldenv
add
jb
xchg
push
pushf
sbb
jae
push
xchg
dec
sbb
andb
jl
sbb
jae
sub
jmp
in
lea
test
xchg
push
fsubrs
add
sti
mov
add
xor
shl
adc
push
inc
push
mov
xchg
cs
outsl
insb
push
ficomps
adc
pop
or
fidivrs
je
cmpb
lret
adc
push
or
cmp
arpl
dec
test
dec
int
imul
mov
push
test
xor
sub
or
sub
cmpsb
xchg
add
xor
add
add
js
mov
dec
movsb
and
enter
jbe
fs
lret
clc
hlt
hlt
inc
cmp
xchg
jns
or
push
pop
mov
nop
pop
pop
push
and
push
cmp
add
cmp
call
jae
pushf
or
lods
and
inc
pop
sbb
push
js
fldt
clc
shl
cld
loopne
fnstenv
mov
add
sbb
xor
repz
cld
fsubs
inc
popa
cs
dec
inc
mov
scas
out
or
inc
push
cmp
add
inc
mov
push
in
cltd
lahf
into
clc
es
or
lock
inc
in
imul
xchg
adc
xchg
incl
dec
sub
mov
hlt
neg
sbb
and
sti
mov
bound
mov
push
sub
push
adc
push
icebp
inc
mov
xchg
in
into
adc
popa
xchg
pushf
test
js
inc
add
add
adc
and
test
je
faddl
inc
push
loopne
addr16
fildl
lods
jnp
and
leave
test
insb
fistpl
xor
aam
add
cmpl
jne
cmp
jbe
out
in
adc
or
jne
push
lds
dec
add
dec
push
lock
cmp
fwait
aad
std
lret
shrb
das
data16
push
fbld
popa
inc
cmc
jmp
rcl
mov
jno
adc
sahf
jecxz
inc
pop
or
sarl
sbb
cmc
dec
fists
push
shr
sbb
cs
in
inc
imul
mov
call
add
jge
lods
das
lea
push
push
xchg
je,pn
pop
jl
xchg
fisubs
pminsw
mov
js
and
cmpb
testb
ss
cltd
outsl
push
cmp
loop
add
xor
data16
mov
gs
add
cmpsb
sbb
xchg
push
pushf
mov
jnp
lock
test
add
or
mov
adc
inc
mov
adc
or
sbb
dec
adc
inc
pushl
andl
leave
ret
pop
or
xchg
fidivrl
movsl
clc
nop
aam
mov
push
push
ja
cmp
paddusb
add
daa
inc
fsts
push
inc
add
aas
arpl
mov
andb
dec
popf
mov
sbb
pop
xor
or
adcl
add
call
xor
jnp
sub
out
lods
mov
cmp
push
inc
cld
push
test
lds
push
icebp
cmp
test
imul
or
jne
pop
sub
pop
mov
lock
inc
or
mov
es
push
lahf
xor
movsl
repnz
adc
xchg
adc
inc
cmp
mov
jmp
je
mov
hlt
dec
mov
fs
andl
push
and
or
xor
adc
loopne
cmp
aam
scas
mov
or
movl
push
jae
and
stc
mov
pop
jbe
add
mov
jp
in
or
dec
or
cld
xchg
push
inc
cmp
dec
loopne
int3
add
aam
cmp
cmpsl
push
push
cmp
pop
add
xchg
popf
push
sar
push
add
push
jmp
xor
fadds
mov
add
aas
add
sahf
adc
push
out
mov
icebp
dec
sub
sbb
sbb
repnz
test
int3
ds
mov
scas
adc
mov
test
cmp
add
mov
dec
hlt
imul
lea
bound
mov
or
dec
add
jle
pop
lock
faddl
cmp
add
xchg
shr
sarl
jge
dec
mov
call
pop
iret
loop
arpl
test
cmpsl
cmp
fdivl
or
xor
out
pusha
cmp
faddl
cmpsl
pop
lcall
add
sbb
push
je
roll
ficompl
mov
gs
push
jge
leave
enter
cmp
add
or
and
xorb
add
adc
and
sub
mov
pop
push
mov
mov
push
push
and
ret
or
insl
les
mov
mov
int
inc
dec
push
xor
dec
sub
in
sub
mov
mov
add
push
aam
je
mov
loopne
sbb
or
lods
pop
fsubs
popf
sbb
faddl
cwtl
dec
adc
jle
enter
ja
mov
adc
jb
mov
or
or
mov
roll
xor
add
push
fisttps
push
or
pop
fdivrs
cmp
leave
fldenv
push
push
add
or
icebp
pushl
dec
pop
xchg
pop
fisttpll
sub
or
and
push
push
sahf
rorl
loopne
add
fisttps
jne
cmp
sbb
mov
repnz
sub
sbb
sti
jb
mov
xchg
out
mov
pop
or
fsub
add
lea
mov
pop
add
pop
jo
into
xor
test
sbb
add
popf
pushf
outsl
jno
mov
xor
sub
into
adc
jns
and
test
sbb
je
dec
adc
add
lea
ja
cmpb
jne
jp
imul
jne
out
add
or
loopne
adc
faddl
jb
stc
push
daa
or
ja
mov
lea
lods
inc
dec
sbb
pop
push
push
jnp
addr16
or
dec
mov
test
je
iret
lea
aaa
add
dec
mov
jge
cs
jae
leave
jmp
push
inc
sub
xchg
mov
ss
xor
push
sar
push
xchg
or
sbb
cmp
lsl
sarl
mov
dec
jp
xchg
jmp
dec
mov
enter
pop
push
push
dec
jno
sbb
adc
loopne
out
mov
je
mov
sbb
xor
decl
sbb
adc
pop
sbb
adc
jp
mov
inc
mov
mov
call
filds
pop
mov
xchg
enter
fcomps
sahf
jne
lret
cmc
inc
popw
push
lea
cmp
jle
xchg
repnz
xor
ss
pop
popf
pop
ja
fimuls
or
mov
jmp
and
or
cmp
fsub
add
sub
add
add
xor
push
fcoml
mov
inc
pop
lahf
mov
test
add
xor
mov
mov
outsl
mov
je
lea
dec
or
adc
inc
cmpl
dec
jmp
movsb
pop
xchg
data16
movsl
pushl
xor
pop
fcmovbe
inc
and
data16
shlb
aaa
push
sbb
add
dec
inc
aaa
adc
jns
adc
ret
sub
inc
clc
jmp
push
je
dec
lods
imul
in
les
orl
xor
dec
adc
repz
incl
add
rclb
adc
add
outsb
xchg
movsl
incl
mov
xor
mov
ror
or
add
mov
dec
mov
push
mov
daa
bnd
mov
lcall
inc
cmp
cmpb
ret
push
jae
lea
daa
fidivs
push
sub
sbb
inc
push
lds
mov
xor
loope
test
inc
dec
pop
es
dec
and
push
or
cmp
sub
cmc
loopne
jge
cmpsb
jge
sbb
leave
pusha
pop
cld
cs
mov
cmpb
xor
fnstenv
ja
testl
cmp
cmp
sub
sbb
sbb
lret
xor
mov
dec
xlat
movb
adc
cltd
mov
lcall
fdivs
sub
sub
out
mov
sti
sub
pop
ret
push
out
insb
adc
dec
imulb
divb
dec
dec
shl
imul
lods
jmp
mov
rorl
lcall
jge
pop
and
jne
mov
jbe
mov
push
cs
add
test
cli
repz
lock
lea
jbe
or
lret
js
sbb
out
int3
or
xlat
push
scas
mov
push
aad
xor
or
jge
mov
jnp
inc
mov
adc
adcl
movsb
shl
fimuls
sub
int
or
xor
jp
je
xor
popf
mov
xchg
cmp
push
jmp
gs
and
xor
mov
cmp
jb
inc
mov
adc
movsb
mov
jo
sahf
mov
mov
cmp
sub
push
inc
or
mov
hlt
ds
es
xchg
or
jo
jns
mov
xchg
popa
xor
sahf
mov
add
clc
js
mov
std
cmc
imul
xor
push
enter
enter
stc
push
out
adc
arpl
jb
nop
xchg
enter
push
imul
adc
and
movsl
sub
sbb
pop
in
lea
xor
outsb
or
jbe
xor
in
setb
std
push
testb
add
push
rcrb
mov
add
or
xor
aad
shlb
cli
jo
lds
cmp
cmp
and
mov
push
call
roll
lcall
sbb
fcoml
cmp
orb
or
fsubrp
mov
sbb
dec
cmp
cmp
push
rcl
out
adc
out
ret
shlb
cmp
divb
sbb
ret
dec
sub
aas
testb
je
divb
pushl
xchg
dec
scas
ljmp
sbb
sub
pusha
jo
adcl
xchg
xchg
ss
or
inc
es
das
in
and
movsl
pop
adc
add
and
lea
popa
push
push
cmp
call
jecxz
dec
and
cwtl
push
lret
cwtl
and
xor
sub
mov
mov
mov
inc
sub
push
add
xor
pusha
sub
jle
fmuls
sbb
in
mov
lods
out
movsb
jne
mov
orl
test
mov
imul
pop
adc
or
mov
dec
sub
mov
sbb
push
push
pop
add
fadds
xchg
shlb
mov
test
or
in
add
sbb
lods
cmp
sub
xchg
mov
aas
add
pop
xchg
lret
in
mov
lahf
mov
mov
mov
test
fcmove
insl
int
into
shrb
push
dec
add
inc
das
jb
lcall
and
and
push
jge
cmp
shlb
adc
test
mov
mov
mov
push
iret
add
jne
or
inc
xchg
arpl
mov
out
adc
mov
popa
shlb
lret
add
dec
lock
mov
clc
ret
sub
dec
rcl
out
xor
xchg
push
adc
add
mov
cmp
jl
es
xchg
jmp
push
ja
lcall
push
scas
cmp
fimuls
cmpl
mov
stos
adc
adc
push
out
mov
push
or
or
dec
or
ja
ret
push
sbb
or
incl
pop
push
mov
dec
dec
pop
cmp
ret
or
leave
push
cmp
sub
jmp
cmovge
imul
jb
movb
dec
pop
xor
push
cwtl
pop
dec
jnp
cmpsb
out
ss
add
xor
or
idivb
test
push
addl
pop
push
hlt
out
jo
int
insl
lahf
add
pushf
inc
daa
jae
unpcklps
pop
fwait
ret
mov
popf
movsl
inc
push
pusha
pushf
jo
push
out
fistpll
xor
push
push
or
enter
pop
jp
or
movzwl
test
je
test
lahf
add
or
jo
jo
jo
rorb
mov
mov
xchg
ret
dec
xlat
mov
sbb
push
cmpl
push
add
inc
dec
std
mov
and
das
jmp
cmp
lcall
shl
push
push
clc
push
push
pop
std
inc
adc
js
fdivrl
sub
push
mov
mov
mov
lds
cmp
fidivs
jne
es
mov
sbb
or
pop
mov
js
and
jl
rclb
jle
js
fisttpl
push
push
loope
jl
cld
sbb
push
push
mov
stos
add
aam
add
ds
mulb
loopne
or
popf
in
pusha
pop
pop
and
jno
int
push
lahf
xchg
aad
xchg
and
mov
add
jle
mov
mov
xor
or
sbb
xchg
xchg
and
in
sub
addb
loopne
sub
sub
in
xchg
push
pop
sub
sub
inc
mov
pop
or
inc
rdpmc
dec
pop
inc
stos
or
ret
push
mov
dec
push
out
sub
shl
daa
inc
outsl
mov
cmp
and
movsb
add
call
dec
cwtl
call
xchg
sbb
repz
push
addr16
jl
cld
push
adc
cld
js
mov
mov
mov
add
and
clc
or
push
sbb
test
or
add
inc
out
sub
dec
roll
and
loopne
aad
jne
mov
and
rcll
sbb
popa
in
xchg
mov
lret
icebp
mov
xor
loopne
and
and
loope
out
jge
mov
add
mov
movsl
jne
mov
sarl
scas
cmp
inc
adc
mov
adc
out
ds
lods
sbb
inc
addr16
std
into
sbb
gs
mov
lea
mov
cli
jne
cs
and
pop
jmp
jg
xor
cltd
jo
lahf
roll
xlat
inc
mov
lock
sub
push
std
mov
add
inc
or
mov
mov
jle
adc
cmpsl
or
push
ja
fimuls
sbbb
loop
push
jbe
gs
push
push
clc
scas
xor
and
push
mov
jbe
xchg
push
push
dec
push
cmp
inc
add
mov
adc
inc
loope
repz
add
dec
pop
pop
in
and
mov
mov
into
jmp
fidivrl
into
out
push
loope
roll
dec
xor
pop
mov
lock
cld
push
cmp
cmp
mov
xor
outsb
das
outsl
push
xor
icebp
rorb
sti
and
mov
adc
jl
mov
mov
jle
rorb
je
lea
shl
subb
cmpsb
jg
xlat
or
jmp
cmp
adc
lret
iret
push
aad
aam
shrb
mov
xor
es
add
jmp
and
jne
push
and
add
hlt
mov
sbb
mov
mov
popf
dec
data16
in
xor
jg
or
cs
inc
jb
adc
add
or
or
xor
add
adc
sub
inc
jle
add
aam
outsl
add
mov
xchg
xor
jbe
jmp
and
sbb
adc
add
push
sub
pop
mov
adc
xchg
mov
lahf
in
sbb
imul
pusha
fs
add
test
push
add
inc
movsb
inc
setl
sub
sbb
dec
sbb
cmp
jo
lret
cmc
addr16
mov
pushl
sub
push
pop
mov
sbb
shl
push
dec
shlb
and
roll
push
cmp
rol
push
xchg
inc
in
mov
sub
mov
push
lds
sarl
xchg
jp
adc
movsb
push
push
xchg
push
dec
enter
sbb
jecxz
xor
mov
daa
es
mov
in
inc
sbb
pop
loop
mov
cld
push
and
cmpsb
out
adc
xor
sti
add
mov
cltd
xchg
daa
mov
rcll
jne
andb
pop
stos
inc
and
popf
fdivrs
or
inc
mov
push
and
jne
sti
movsl
stc
rclb
or
sub
mov
or
jne
or
jne
std
pop
push
cs
nop
cmp
cwtl
dec
add
mov
mov
add
mov
lock
cmp
outsl
add
add
lea
sbb
lret
ds
clc
inc
sbb
xchg
fcoms
loopne
repnz
cld
test
pushf
notb
popa
inc
add
in
mov
js
dec
add
xchg
sarb
push
je
xchg
push
ret
or
movsb
inc
mov
sbb
cmp
push
xor
xor
cmp
sub
adc
jmp
mov
inc
inc
adc
pop
push
push
jo
mov
test
mov
pop
lea
or
adc
or
rcrl
mov
sbb
addr16
imul
jmp
scas
lcall
xchg
fbstp
dec
lock
mov
jg
and
pop
lea
pushf
pop
sbb
data16
mov
mov
cmp
orb
enter
inc
mov
insl
cmp
daa
mov
mov
ja
pop
sub
loop
dec
jb
addl
rorl
push
rol
adc
rorb
andl
andb
dec
xchg
sub
cli
rolb
push
jne
dec
fldt
dec
cli
or
pop
sub
sbb
push
lcall
push
in
mov
xor
outsl
sbb
test
or
sbb
pop
sub
scas
aaa
jo
jg
dec
push
mov
aam
push
inc
and
xor
cwtl
inc
or
cmp
je
cmp
add
in
push
or
cmp
or
jne
addb
xchg
test
test
fsubs
sbb
xor
jmp
loopne
xchg
cmp
shlb
aad
push
jnp
push
imul
mov
pop
mov
cmp
jl
mov
mov
es
out
push
xor
arpl
pop
sbb
in
push
mov
and
cmc
push
sahf
cmp
mov
and
sbb
aam
faddl
or
mov
clc
subb
mov
imul
adc
or
lea
clc
pop
sub
jno
mov
mov
push
ja
mov
mov
adc
mov
pop
ds
bound
cltd
sbb
adc
out
fcoms
shl
nop
mov
add
jbe
mov
mov
push
xor
xchg
xchg
pushf
insb
adc
inc
dec
rorl
mov
es
cld
or
sub
js
push
inc
mov
sbb
mov
dec
push
xor
bound
roll
sbb
mov
aam
adc
cmp
push
pusha
dec
shll
je
int
push
ss
xor
fdivl
or
outsb
andl
cmpsl
mov
sub
insl
mulb
aad
mov
sub
sub
xor
sbb
pop
cmp
loopne
push
pop
nop
in
jle
movb
sbb
mov
adcl
subl
jae
popf
nop
xchg
push
fadds
sbb
je
sbb
add
nop
add
movsl
mov
mov
in
pop
mov
sahf
inc
test
lret
jo
movsb
or
push
test
cmp
push
push
mov
sbb
push
adc
push
mov
inc
sbb
cmp
jo
adc
mov
lods
mov
sub
xor
pop
adc
xor
add
xor
add
mov
test
test
stos
insl
cld
xor
xchg
add
xchg
cli
inc
mov
pusha
lcall
add
jne
push
add
movswl
adc
sbb
sti
sbb
xchg
test
ret
pushl
sbb
or
push
test
adc
push
imul
xor
push
lock
je
repz
push
cmp
push
clc
in
mov
fcoms
insl
repnz
clc
inc
sub
push
push
push
inc
add
shl
ret
imul
add
xor
dec
add
je
das
mov
xor
das
xorl
ficomps
jl
insl
addl
jne
orl
mov
adc
imul
int
xor
test
mov
xchg
add
jge
or
test
das
add
lods
push
test
stc
fldl
in
cmp
sar
lds
add
lods
cmp
cltd
std
fwait
loope
sub
sub
mov
sbb
out
inc
xchg
les
mov
movsl
sti
dec
sub
xchg
sub
jnp
push
jne
mov
sub
sbb
sarl
mov
and
push
cmp
pop
sub
xorl
inc
xchg
ja
fwait
pop
jle
or
hlt
cld
cmpsb
imul
jbe
or
add
cltd
add
cmp
mov
and
add
push
testb
inc
rcl
dec
bound
push
sub
mov
sbb
into
dec
and
cmp
push
inc
movsb
sbb
cmp
cmp
push
popf
lock
mov
dec
xor
cli
out
fidivs
test
cmpb
lods
pop
mov
push
cwtl
add
sbb
xchg
dec
push
xchg
mov
pop
dec
push
adc
jle
or
movsb
jns
adc
or
push
xchg
fdivrl
sti
insl
adc
adc
xor
aad
stos
mov
and
fldcw
inc
xchg
enter
in
pop
nop
repnz
push
js
mov
outsb
outsb
rorb
dec
jb
sbb
lea
je
mov
gs
sar
xor
and
mov
and
push
and
mov
adc
pop
out
orb
int3
lock
push
mov
inc
inc
lock
inc
rcr
notl
and
ret
jne
or
cmp
je
je
enter
pop
fs
orl
inc
mov
out
adc
aaa
movsb
xor
sbb
jnp
call
push
xchg
inc
jne
in
inc
pushf
cmp
cli
je
popf
add
xor
mov
scas
pop
repnz
inc
adc
lea
xchg
push
push
hlt
sti
push
sub
inc
adcb
and
orb
or
dec
add
inc
xchg
add
adc
outsb
dec
adc
enter
jnp
lock
and
cld
lock
iret
sub
dec
jmp
push
adc
push
pop
adc
loope
ja
adc
sbb
push
pop
jg
test
sarb
in
push
mov
jg
leave
add
add
push
and
xchg
mov
aaa
sub
sub
xor
stos
dec
movsb
cmp
xor
pop
add
push
flds
push
push
aam
pop
jle
mov
and
test
or
inc
and
shlb
inc
sbb
sbb
pop
pop
mov
lock
sbb
je
and
jbe
clc
mov
cmpsl
adcb
and
push
sbb
xor
jns
in
insb
outsl
pop
mov
jno
test
popa
cmp
add
inc
lcall
add
adc
std
jle
std
je
push
aas
jne
outsb
fmul
mov
add
add
stos
mov
fldt
pushf
and
add
out
jbe
sub
sub
mov
cmp
sbb
test
adc
push
and
add
loopne
dec
push
lea
or
adc
out
adc
pop
sbb
adc
dec
push
or
out
add
xor
lock
jl
rorb
fcoms
add
les
xchg
negl
add
pop
popa
add
or
xchg
add
addl
clc
pop
arpl
mov
push
inc
aad
es
ret
sbb
and
dec
xchg
fdiv
or
cmpsl
sbbl
pushf
or
outsb
push
das
out
cmp
push
pop
add
push
xlat
cltd
pop
pop
push
or
jne
xchg
jne
cmp
fdivs
xchg
test
ljmp
dec
movsb
push
ret
jge
int3
mov
jg
sbb
xchg
in
mov
sbb
adc
inc
call
jge
dec
ljmp
or
es
orb
or
pop
out
xchg
mov
jmp
pop
movsb
xchg
xchg
in
adc
push
movsl
mov
dec
mov
pop
sbb
pushf
dec
adc
int
push
aam
push
adc
xor
inc
stos
sub
xchg
adc
dec
and
jo
push
lea
and
push
push
cli
sub
sub
test
pushf
xchg
inc
xor
dec
inc
in
sub
mov
push
push
push
out
mov
jbe
cmp
adc
fiadds
mov
pop
ret
mov
cmpl
cltd
hlt
inc
or
hlt
sub
mov
sbb
pushf
mov
rolb
je
push
les
testl
pop
jo
mov
rcrb
adc
push
jae
jbe
lcall
xor
xor
xchg
ret
cmovge
or
pop
mov
movsl
add
mov
jl
mov
dec
mov
jecxz
xorl
and
push
movsb
loopne
adcl
add
jl
add
xchg
std
cmp
pop
dec
dec
or
repnz
sub
mov
mov
mov
xor
lret
sub
out
mov
popa
aaa
cmp
and
sbb
cmp
repnz
movsl
push
mov
hlt
sub
mov
outsb
jne
jae
out
push
dec
sub
dec
repz
and
aam
fimull
divl
push
xor
popf
out
insb
in
adc
mov
lea
cmp
movsl
cs
gs
mov
cmpsl
ja
sub
sahf
cwtl
push
aam
jp
hlt
insl
es
mov
sbb
and
or
pop
jnp
and
or
push
fstpt
push
test
and
imul
stos
sbb
or
push
and
pop
mov
rolb
popf
mov
jg
adc
mov
lret
adc
add
lret
push
or
sbb
sbb
jo
sbb
out
xor
mov
out
inc
mov
sbb
mov
push
cs
inc
inc
das
pop
or
pop
mov
push
and
daa
addl
ss
xor
push
xchg
pop
pop
in
dec
push
adc
je
or
or
loopne
mov
imul
and
inc
and
inc
addb
xor
call
add
sahf
push
mov
mov
daa
loopne
push
xor
sub
ja
scas
xlat
fnsave
xchg
test
and
xor
push
or
or
inc
push
or
push
dec
push
pop
cmp
mov
adc
add
push
cltd
xchg
or
sbb
lods
add
pop
inc
add
aam
fldt
sbb
xchg
jnp
push
nop
sub
add
test
push
outsb
ss
int
mov
inc
xor
xor
push
xor
sub
adc
jg
lock
add
fwait
xchg
cmp
pop
cmp
dec
loop
add
adc
xor
pop
sub
lret
push
xor
mov
push
push
push
sbb
roll
sbb
add
cmpsl
std
decl
jnp
cmp
cwtl
lret
ss
aas
mov
inc
push
dec
pop
fcmovb
sbb
sub
sub
inc
in
adc
jmp
cmp
mov
aaa
lods
jle
cmp
inc
cmc
js
aas
outsl
and
es
pushl
mov
loopne
jne
cmp
pop
add
push
orb
push
fmull
or
dec
push
inc
xor
cmp
nop
ret
int3
dec
ret
or
es
pop
pop
mov
inc
negb
dec
push
sub
mov
jl
andl
push
adc
in
ret
iret
insb
sub
mov
cltd
adc
jne
jl
outsb
inc
jae
daa
xchg
dec
jnp
jecxz
cmp
mov
push
push
call
adc
test
inc
xor
stos
xchg
adc
fistpll
ret
icebp
add
mov
popf
scas
test
mov
adc
adc
stos
les
xchg
cmpsb
shrb
sbb
push
ret
jp
adc
cmpsl
dec
jl
and
or
mov
xor
icebp
jne
je
push
pop
fisubrs
mov
xor
js
push
add
inc
push
jbe
pop
ljmp
aaa
cmp
das
pop
bound
xor
or
xchg
or
fsubrs
add
add
mov
movsl
add
pop
pop
sub
movsl
divb
aam
orl
pop
lock
push
sub
inc
xor
je
and
jle
mov
mov
cmp
cmp
cmp
dec
ja
imul
ret
inc
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
and
scas
mov
adc
rolb
adc
mov
lods
push
push
leave
ds
test
pop
adc
xchg
cmc
lods
mov
mov
dec
fstl
sub
add
enter
mov
aas
mov
inc
bnd
leave
add
push
pop
lods
in
push
popa
add
sarl
aaa
add
adcl
imul
push
push
pop
and
adc
adc
or
or
adc
and
cld
push
addb
xchg
test
clc
add
scas
nop
cmp
add
push
cmovle
mov
pop
fcoms
rolb
mov
pop
and
mov
or
push
xchg
xor
jnp
or
mov
mov
cmovo
inc
mov
jns
sub
fcomip
fcoms
mov
add
fsubrl
jmp
mov
ret
or
mov
mov
jp
es
mov
imul
push
push
jg
mov
rolb
jge
mov
cmpb
jbe
mov
fstps
mov
ljmp
mov
push
lahf
mov
enter
or
add
or
cmp
iret
pop
jmp
jecxz
push
xor
andl
push
movsl
push
leave
scas
add
jl
dec
xor
mov
add
inc
sbb
add
subb
xchg
fcoms
adc
inc
mov
or
rolb
sub
daa
js
lock
push
sarb
adc
or
mov
jmp
adc
js
adc
add
outsb
jo
xor
inc
aam
je
sub
mov
mov
shrb
or
add
sbb
test
stos
cmp
and
popa
arpl
bound
fcoml
mov
mov
cmpsb
sbb
push
mov
cmpsl
testl
pop
jae
fsts
add
push
insb
js
or
inc
ret
orl
cwtl
sbb
call
cmp
data16
mull
movsl
fsts
aas
je
xor
add
imul
or
add
pushf
inc
xchg
mov
enter
movsl
std
mov
adc
sbb
lea
sbbb
jle
pop
mov
mov
scas
jne
pop
add
push
add
cmpsb
fcoms
insb
xchg
mov
add
add
and
repz
cmp
aas
pop
xchg
sub
es
jbe
or
cmpl
cli
push
lea
test
mov
jmp
jge
mov
xor
shr
inc
add
gs
pusha
pop
call
loopne
adc
cmp
pop
out
add
cmc
xor
mov
insb
std
popl
push
inc
call
sub
or
adc
add
and
mov
mov
out
in
mov
jae
movsl
mov
movsl
dec
mov
es
sbb
jne
pop
jnp
popa
sbb
push
arpl
jecxz
jne
pop
adc
inc
lock
shl
push
xchg
adc
pop
jns
add
inc
and
lret
push
int
push
ja
testb
sbb
xor
shrl
or
push
mov
or
ljmp
int3
xchg
cmp
or
xor
sub
in
xor
bound
xor
loopne
push
adc
test
orl
jmp
push
fisubrl
pop
out
mov
adc
int
insb
or
mov
int
adc
xchg
pop
imul
loopne
add
inc
scas
fadds
out
or
xor
sbb
jle
out
mov
je
cmp
add
imul
push
jne
ss
call
add
cmpb
jl
add
jmp
push
jnp
xorb
push
push
pop
mov
inc
push
out
lds
dec
xor
cmpb
jle
add
inc
xor
dec
push
push
idivb
addr16
pop
push
xor
or
in
js
ret
jbe
es
js
js
mov
cmpsb
add
or
cmp
jo
cmp
nop
test
dec
jnp
mov
adc
inc
jo
into
sub
sahf
xchg
lock
mov
or
push
or
xchg
lret
push
lea
addr16
add
pusha
or
rorl
dec
jle
cmp
add
xor
cmp
call
jne
cmp
es
pop
sahf
notb
push
mov
push
and
lea
cwtl
add
sbb
sub
push
xchg
and
and
sbb
inc
fcomps
ret
and
int
mov
fistpl
or
insl
shlb
fisubrs
dec
jl
dec
dec
mov
push
adc
xor
int3
imul
lods
les
xchg
sbb
test
ficoml
movb
push
xchg
adcb
into
adc
loope
testl
jo
cmp
dec
es
fldenv
enter
dec
mov
test
sbb
dec
pop
ljmp
pop
pop
sbb
pop
or
adc
mov
sbb
ret
mov
mull
std
js
add
and
inc
adc
addr16
lret
add
add
sbb
mov
mov
je
add
inc
sub
adcl
fwait
sub
testb
in
rorl
jle
xor
or
loope
neg
ret
pop
xchg
jle
jmp
mov
cmpsb
add
mov
adc
imul
mov
xlat
scas
jno
xchg
pop
and
lock
jo
push
mov
es
mov
sti
js
movl
enter
inc
or
rcr
orb
add
pop
fwait
add
les
push
xor
sbb
cmp
sbb
addr16
adc
cmp
sahf
jb
testl
xorl
lret
add
add
fcoms
jbe
and
sti
inc
clc
pop
sub
daa
inc
insl
xorl
sbb
cmp
call
fidivrs
adc
add
mov
xor
mov
femms
fisubl
rcl
adc
fcomps
lds
aaa
sbb
aad
mov
mov
xchg
inc
push
lea
loopne
cmpsl
shr
and
adc
pop
das
in
adc
daa
jp
add
lret
mov
test
arpl
cmp
call
fsubrl
sub
xchg
pop
add
loop
cmp
jge
test
pop
cs
mov
push
addl
daa
adc
add
shl
jg
fisttps
ret
cltd
adc
inc
mov
bound
or
and
push
and
test
push
sbb
lea
jp
cmpsb
jne
ret
outsl
mov
xorb
sti
dec
ja
je
or
test
jbe
je
or
sub
sub
sti
das
adc
pusha
mov
push
or
pushf
stos
das
cmpl
movsb
xchg
mov
js
jne
sahf
popa
pop
inc
push
arpl
xor
jmp
int
cmp
je
push
adc
adc
push
xor
fnstcw
pusha
inc
mov
int3
lds
add
push
mov
mov
push
lcall
cmp
xor
push
andl
mov
mov
lret
icebp
and
sahf
dec
sub
lcall
inc
mov
fs
sar
sbb
push
sub
adc
in
xchg
mov
or
xchg
and
leave
inc
gs
jmp
ljmp
pop
inc
or
call
pop
or
ret
cmpsb
sbb
sub
dec
je
sub
adc
rorl
xor
sbb
adc
adc
cld
inc
outsb
fcmovnbe
pop
inc
or
in
mov
call
daa
or
xchg
fisttpll
ret
push
adc
inc
push
mov
nop
inc
dec
mov
sbb
fnstcw
insb
adc
pusha
jmp
dec
pusha
xor
or
divl
add
fs
pop
jp
and
push
mov
sub
adc
movsb
cmp
nop
aam
loopne
inc
jo
mov
jne
cmp
fldl
rol
inc
sbb
dec
inc
lds
mov
test
imul
fsubl
dec
or
ret
pusha
mov
ds
icebp
clc
and
orl
scas
and
or
push
add
movb
sbb
push
xchg
out
pop
pop
add
dec
imul
aad
mov
push
jg
dec
sub
je
push
push
lret
adc
or
mov
imul
fcompl
add
les
inc
xchg
xor
dec
mov
cmpl
cmp
cmp
xlat
xchg
pop
repnz
scas
inc
add
add
add
sub
adc
add
mov
push
dec
leave
test
enter
lahf
dec
xor
faddl
in
add
pop
mov
and
jecxz
iret
sub
inc
sbb
push
scas
js
lods
mov
jae
cmpsl
ret
push
sub
in
dec
sbb
nop
push
xor
int
testl
pop
cmc
dec
lcall
dec
sbb
pop
sub
out
jp
clc
xchg
push
inc
mov
je
out
loopew
mov
dec
fidivrs
xor
leave
add
pop
aas
and
adc
roll
sahf
push
dec
aam
movntps
pop
mov
sbb
xchg
pop
adc
in
xchg
push
dec
lret
pusha
xchg
dec
adc
pusha
adc
inc
sbb
mov
test
int3
lods
or
sbb
sbb
int
jne
iret
sar
dec
arpl
stos
std
decl
or
scas
mov
push
cmp
mov
or
adc
rol
fidivl
jge
clc
push
movsb
push
icebp
jle
add
sahf
and
or
mov
xor
js
inc
sub
cmpb
loope
cltd
insb
loopne
and
jb
data16
push
daa
push
mov
xor
add
es
jl
in
push
xchg
jge
xor
xchg
and
call
adc
idivb
hlt
or
scas
mov
data16
inc
pop
mov
xor
jo
sbb
push
dec
push
movsb
inc
jns
and
test
outsl
shlb
adc
xchg
xchg
jb
mov
mov
sbbl
insb
movl
stc
adc
xchg
or
lea
loope
sbb
sub
loope
ja
mov
mov
sub
sub
aas
mov
fs
add
pop
andb
sub
mov
and
push
or
inc
ja
or
jo
imul
ret
fistl
test
jl
pop
adc
or
add
js
mov
mov
in
fld
add
mov
int3
cmpsl
jp
popa
and
pop
add
inc
jp
adcb
push
mov
push
inc
mov
je
rcl
add
and
rcll
mov
daa
in
subb
xchg
push
insl
icebp
add
sub
dec
sahf
imulb
repz
pop
movsl
cltd
inc
xor
xor
aaa
push
xchg
loope
pop
aaa
in
mov
xchg
dec
cmp
inc
movsb
xor
push
mov
ret
pop
mov
movsl
mov
mov
lret
clc
add
pop
push
mov
test
sbb
mov
ficomps
add
mov
jo
xchg
mov
and
out
sbb
mov
test
adc
cmp
xor
push
and
pusha
popa
mov
bound
push
sub
adc
cmp
adc
push
dec
mov
repz
sub
xchg
push
mov
adc
jne
cmpsl
cmpsb
jo
xchg
jp
mov
mov
outsb
mov
iret
inc
push
inc
pcmpeqb
add
and
mov
pop
pop
or
cmp
mov
sub
or
mov
sbb
pop
push
xchg
ds
xor
jnp
test
movsb
or
sub
add
push
push
xor
lahf
fld
pusha
sub
pop
pop
jl
pushf
insb
enter
jne
xor
adc
mov
imul
adc
dec
inc
push
pop
and
and
popa
imul
test
in
or
inc
mov
cmp
mov
je
sti
jge
xor
cs
idivl
sti
or
jl
adc
test
cmp
comiss
inc
xchg
jmp
cmpl
push
imul
sbb
mov
add
rolb
sbb
cmpsb
pop
in
adc
pop
cmp
imul
add
inc
out
xor
adcb
jnp
cmc
add
push
shr
xor
xchg
inc
sti
push
mov
pop
push
js
xor
ja
jno
jg
ret
xchg
into
jle
sti
push
inc
stos
add
mov
dec
stos
and
lcall
mov
fwait
jmp
aam
notl
sub
cli
test
rcr
in
add
and
lret
sub
or
rcrl
imul
push
das
xor
dec
dec
push
mov
ljmp
sbb
add
and
je
mov
or
and
jle
por
dec
mov
cmpsl
loope
push
in
pop
les
xor
dec
ja
int
in
addr16
cmp
lods
repz
inc
add
insb
jp
loope
lock
mov
loope
jmp
push
loop
push
fcomp
mull
or
or
in
xor
or
lock
add
lret
mov
xchg
jge
or
add
or
and
or
punpckhwd
daa
subb
jg
xor
push
lret
cmp
je
ljmp
mov
popf
icebp
fcomps
fnstcw
dec
pop
addb
mov
xlat
jo
stos
dec
adc
push
or
sti
and
cmpsl
mov
jbe
pop
inc
sub
mov
pop
je
roll
mov
je
cmp
enter
imul
or
inc
subl
div
into
fsubs
cld
jae
mov
mov
sub
arpl
adc
or
call
scas
ret
mov
push
fstpl
inc
fsubrl
push
cmp
dec
and
sti
xor
mov
jnp
cmpb
xor
movb
jbe
xchg
orb
fsub
inc
mov
stos
loop
jp
cld
ss
inc
adc
and
gs
or
lea
dec
cmp
add
add
cmc
lret
and
cltd
push
nop
pop
orl
adc
cltd
loop
gs
push
sbb
in
adc
or
push
fisubl
dec
or
je
adc
incb
or
xchg
out
xor
push
inc
adcb
fwait
mov
nop
data16
and
sbb
xor
sub
mov
xlat
sub
add
lea
fwait
rcrb
xchg
sub
jae
inc
mov
cmp
add
jge
xchg
sub
jae
mov
xor
xor
lods
xor
dec
xor
les
fs
cmp
inc
shlb
jle
mov
cmp
mov
ss
inc
jne
movl
ret
ror
ja
jns
cmp
jle
fs
jg
jmp
push
das
inc
push
movsb
xor
js
add
cltd
int
cltd
jg
push
inc
and
jge
and
fiaddl
dec
insb
cwtl
jno
rolb
or
mov
loopne
sbbb
push
testb
mov
push
mov
mov
rclb
pop
rorl
call
addb
add
rcll
mov
adc
mov
push
popf
jno
test
and
imul
ret
jo
pop
pop
push
sub
push
mov
loope
arpl
jb
jbe
adcb
mov
mov
movsl
movsl
push
sbb
push
sub
jb
sbb
mov
imul
lea
cmp
sarb
push
loope
sub
push
movsb
cld
and
push
loope
sbb
pop
call
jle
pushf
inc
cmp
dec
jns
or
add
orb
stc
mov
add
fdivl
pop
push
into
loop
cwtl
icebp
test
mov
imul
push
push
xchg
call
mov
stos
in
jle
dec
aaa
and
in
push
testb
mov
mov
sbb
cmp
mov
push
negb
and
xor
loopne
add
push
ja
mov
js
ds
loop
cmp
xor
mov
jne
cmc
add
cmc
pop
imul
xchg
push
cltd
std
ljmp
sbb
push
sbb
popf
add
sub
dec
pop
sub
adc
or
jne
fs
push
int3
mov
add
call
popf
pop
pop
mov
aaa
add
or
loopne
and
scas
pop
mov
push
pop
in
int3
inc
dec
movsb
inc
add
add
or
rcrb
sub
imul
mov
shl
pop
rolb
pop
out
jne
mov
or
shl
cmp
in
or
add
cs
loopne
sub
ret
add
add
xor
push
xchg
push
fidivrs
mov
add
leave
arpl
mov
pop
push
push
cmp
add
add
je
popa
das
xchg
out
lahf
adc
jl
mov
and
test
mov
add
dec
or
fstl
stc
add
pop
cmp
jne
sbb
push
push
aaa
add
and
mov
lods
sbb
scas
mov
add
add
jp
add
push
xlat
push
push
jbe
push
jns
lock
pop
add
mov
push
xor
orl
adc
jns
lahf
mov
or
push
xchg
scas
in
inc
js
dec
sub
push
and
or
cmp
pop
jae
subl
nop
pop
rcl
push
jp
or
sbb
je
lods
cmpb
test
in
jo
jnp
mov
adc
subb
call
les
cmpb
adc
push
mov
sbbl
jns
inc
mov
and
ret
lock
xlat
sub
jge
adc
lret
decl
sbb
xchg
cmpl
andl
das
notl
movhps
nop
fs
or
call
loop
adc
mov
pop
and
mov
ja
lock
mov
lcall
lods
test
sub
gs
test
cmpsb
adc
sub
push
add
sub
jne
shlb
push
push
enter
jge
xor
adc
push
xor
pop
push
or
mov
mov
jmp
mov
cmp
jbe
shll
cmp
push
xor
cmpb
rcr
push
imul
push
shll
je
stos
jno
mov
xchg
inc
lock
add
bound
add
jns
mov
xchg
and
adc
adc
inc
sbb
xchg
add
mov
push
inc
add
mov
add
mov
cmp
sub
jo
add
mov
sbb
mov
cmp
push
cmp
push
pop
rol
bound
lods
add
jle
mov
mov
xchg
jno
adc
mov
clc
inc
or
sub
add
addl
xor
nop
pop
dec
nop
pusha
and
push
aad
push
nop
adc
stos
pop
fildl
add
repz
add
lods
and
lock
dec
or
scas
pop
enter
std
aaa
aas
ja
push
sbb
inc
add
mov
or
ljmpw
cltd
and
jg
loop
xor
fisttpl
and
add
inc
and
add
or
scas
les
or
rol
test
push
cmp
mov
stos
aam
je
sbb
jbe
jb
lock
mov
arpl
push
push
roll
fwait
sarl
insb
fstl
xor
repnz
mov
push
jbe
mov
fwait
sub
es
inc
adc
ret
sub
iret
cmpsb
jno
jl
push
adc
sbb
adc
int3
mov
rol
inc
enter
popf
loopne
xor
dec
mov
aas
push
push
pop
mov
xor
ss
jo
daa
inc
jmp
dec
leave
mov
sbb
addr16
push
pop
sbb
adc
add
pop
ret
jne
scas
inc
or
cmp
adc
sbb
jae
or
jecxz
and
cmp
adc
addl
sub
push
mov
pminub
adc
rorb
jne
aad
add
in
lods
xchg
push
push
dec
stos
or
sbb
jp
jmp
sub
sti
push
adc
sub
sub
lock
push
test
or
sti
and
pop
xlat
mov
fs
adc
cmp
icebp
es
pushf
add
inc
add
stos
jo
fmull
adc
cwtl
loope
cld
addb
jae
call
fcoml
pushf
mov
add
sub
addl
add
stc
hlt
test
sbb
sub
or
test
sbb
sub
aaa
ljmp
adc
mov
dec
test
adc
je
repnz
aaa
mov
dec
push
js
sbb
sbb
add
push
jge
mov
xchg
jo
dec
dec
pusha
lock
xor
pushl
and
adc
hlt
dec
xchg
xchg
mov
sbb
js
push
hlt
test
in
inc
imul
xor
scas
icebp
push
out
push
dec
push
enter
xchg
adc
inc
add
sarb
cwtl
and
push
push
and
or
pop
and
or
test
adc
or
pop
or
and
bound
add
je
dec
mov
adc
mov
inc
push
add
cmpsl
in
test
jl
push
clc
adc
lock
xor
jge
mov
push
cs
cld
adc
adc
mov
cld
sub
pop
pop
mov
fldl
pop
loopne
and
jbe
sub
lea
jle
push
shlb
cmp
jb
popa
push
pop
pop
cmp
inc
outsl
je
cmp
lock
cmp
popa
outsl
xchg
adc
leave
nop
sbb
cmp
or
dec
hlt
mov
pop
mov
jg
dec
in
loopne
inc
xor
dec
inc
dec
jle
inc
or
push
add
inc
push
inc
inc
sti
jl
test
xor
xchg
jg
cmp
jg
nop
das
faddp
jg
mov
sub
mov
push
cltd
pop
adc
test
clc
outsl
fcmovnb
push
inc
incb
sarb
and
rcl
sub
push
imul
xor
and
es
cmc
andl
xor
push
icebp
inc
inc
xchg
sbb
imul
push
inc
add
in
movsb
stos
arpl
int3
in
sub
sub
xor
cmpsb
repz
sbb
xor
dec
movsb
or
and
mov
sbb
cmp
add
rcl
jg
jno
movl
movsb
add
jae
inc
movsl
imulb
add
loopne
and
decl
jno
jne
jl
xor
or
push
bound
sub
dec
ret
or
xchg
push
xor
xchg
mov
pushf
push
mov
repz
add
popf
add
test
movl
push
mov
lret
inc
sub
shll
push
pop
jns
jmp
iret
inc
adc
movl
xor
pop
mov
daa
xchg
fwait
jmp
sbb
push
and
jnp
cmp
push
gs
movsb
ds
cmp
adc
add
cmp
pop
inc
sbbl
inc
cmp
out
and
inc
in
scas
jl
lcall
push
mov
mov
xchg
insb
add
inc
dec
add
shlb
mov
mov
xchg
or
popf
xchg
and
or
xchg
xor
jge
xchg
fstl
je
pop
cmp
sub
daa
sbb
push
push
push
cmp
mov
sbb
cmp
icebp
sti
rep
inc
inc
xor
fnstsw
or
sbb
cmp
jae
or
sbb
add
cmp
sbb
andl
outsl
xor
sub
jne
push
push
in
cld
jae
push
push
mov
cmpsb
xlat
jge
xor
push
and
push
mov
clc
pop
loopne
adc
pusha
sub
inc
xor
loop
pop
sub
sub
and
push
jecxz
aas
mov
inc
lock
mov
mov
or
les
adc
loop
fists
xor
sub
or
into
add
mov
nop
and
mov
repnz
cmp
inc
scas
push
iret
test
xor
das
mov
lret
xchg
mov
jae
sbb
mov
push
push
push
mov
add
sub
xor
mov
cmp
and
mov
add
push
xor
dec
adc
hlt
lock
inc
pusha
cld
addb
or
dec
gs
popf
push
push
test
movsl
sub
call
fdivrl
call
adc
decl
mov
xchg
push
push
xchg
dec
daa
lock
xchg
push
in
xor
in
scas
lods
sbb
mov
adc
adc
add
loopne
add
push
rolb
and
roll
sbb
push
mov
sarb
dec
jne
lcall
mov
jg
in
cmc
add
push
loope
sbb
jb
js
add
nop
dec
and
add
cmp
dec
ss
mov
pushf
sbb
or
jns
incl
sub
mov
stc
sub
pusha
loopne
dec
sub
js
es
or
clc
adc
and
inc
xor
adc
add
or
jnp
call
fwait
jb
inc
and
shlb
add
add
and
add
test
adc
jnp
xor
and
inc
stos
inc
loope
or
push
mov
and
sbb
mov
cmpsl
add
xor
dec
adc
xor
sub
in
inc
cmp
xorb
test
cmp
jbe
pop
les
adc
popl
hlt
sub
sar
divl
mov
add
rcrb
cmp
mov
or
xor
ret
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
fstpt
sahf
ja
test
mov
insb
sub
rcr
or
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
and
icebp
mov
ret
and
shr
loop
jo
xor
stos
or
jl
adc
dec
xorb
pop
fwait
push
ret
notb
outsb
int3
aam
je
push
cmpsl
sub
or
lcall
lcall
andl
push
mov
inc
or
sbb
sti
sbb
pop
add
ret
and
aaa
int3
add
jne
pushf
sbb
lret
adc
and
lods
in
dec
pop
or
push
pop
mov
dec
or
inc
pop
enter
pusha
mov
sbb
adc
fisubrs
orb
push
shll
mov
stc
jne
loopne
ret
fsubrs
incb
inc
mov
pop
cmp
and
sbb
jae
jb
jae
das
inc
cmpl
inc
rcrb
jae
mov
add
pop
push
pop
push
cmp
ret
push
push
push
dec
icebp
sbb
push
xchg
mov
and
inc
test
inc
inc
test
adcl
or
dec
sub
in
jo
cmp
add
adc
jbe
and
inc
sbb
cltd
mov
cltd
ljmp
jnp
mov
add
push
fwait
and
xchg
or
jne
fs
or
jg
sbb
or
insb
and
dec
push
jmp
adc
daa
or
jbe
cmp
add
dec
ja
mov
add
sbbw
dec
outsb
xchg
adc
pop
enter
dec
and
adc
or
pop
fwait
dec
mov
mov
fsubs
or
sbb
fwait
lods
dec
mov
jae
jmp
mov
sbb
cmp
xchg
lret
add
xchg
daa
je
dec
adc
xlat
or
cld
or
test
sbb
push
inc
mov
pop
pop
fsubs
sub
cmp
cwtl
jne
cmp
or
dec
pop
mov
add
add
sbbb
mov
nop
xchg
mov
push
add
mov
test
movsb
mov
cmpsb
or
sti
pop
and
lods
mov
push
or
nopl
mov
and
xchg
and
mov
and
and
jg
sub
and
sbb
xchg
xchg
sub
cs
into
bound
or
push
cmp
xchg
mov
mov
xor
push
pop
jb
add
and
js
add
aas
xor
or
xor
mov
mov
xchg
rcrl
lea
mov
rol
leave
fnstsw
or
or
in
pusha
cmp
pop
add
in
inc
or
sbb
adc
xor
add
sbb
daa
or
add
sbb
int
cmp
in
fidivs
loope
jne
xchg
adc
push
ds
nop
jae
rorb
sub
jne
mov
push
inc
inc
cmp
insb
mov
or
pop
jge
aam
mov
ja
dec
cmp
mov
and
xor
adc
daa
dec
push
sbb
xchg
scas
dec
repz
inc
mov
shl
dec
sti
xor
fimuls
enter
cmp
roll
int3
loopne
in
mov
mov
mov
test
add
push
shrb
movsb
pusha
lcall
mov
xchg
dec
jne
xor
inc
pop
pop
hlt
mov
aas
pop
mov
divb
push
push
jns
push
cmp
mov
xor
push
push
cmp
addr16
push
jmp
mov
add
cmp
push
inc
or
loopne
sbb
dec
sub
inc
in
imul
sub
icebp
cmpsb
ss
dec
pop
lock
sub
or
push
lock
sub
divl
push
push
movb
iret
inc
loopne
lahf
enter
and
jns
mov
dec
arpl
inc
jecxz
sub
jns
xchg
popl
je,pt
and
shlb
loopne
lcall
mov
es
or
adc
and
xorb
inc
push
mov
cmp
sti
lods
cmc
xor
or
out
jno
push
add
pop
adc
xchg
adc
lock
add
fwait
or
jne
push
cmp
and
insb
sbb
mov
xchg
sbb
jl
xor
fs
popf
jmp
xor
out
lret
adc
push
inc
add
mov
test
sbb
insb
test
bound
xchg
or
cmp
mov
jb
mov
sbb
sub
loope
or
pop
loop
test
or
pop
sub
lcall
xor
add
mov
lret
add
popa
sub
sbb
andl
mov
and
pop
lock
movsb
imul
lock
sbb
mov
add
rcll
xor
pop
push
push
pop
adc
xor
std
inc
push
mov
loope
arpl
or
push
lods
andb
mov
pop
mov
mov
add
stos
popf
cmp
sti
in
sub
push
pop
and
adc
loopne
or
sbb
fmuls
call
add
xchg
push
les
push
adc
rclb
jne
xor
mov
nop
inc
scas
in
push
push
cli
aam
push
lret
mov
jl
jo
jnp
dec
push
cwtl
rclb
lods
or
inc
and
imul
push
sub
cli
aam
xchg
stos
sarb
fcomp
fwait
addl
xchg
cld
mov
imul
stos
xlat
aad
mov
push
add
push
jge
cmp
and
push
push
push
dec
sbb
or
loop
cli
jb
or
pusha
sub
push
push
pop
clc
jl
mov
xor
pop
hlt
adc
cli
clc
mov
test
jbe
jmp
es
setg
outsl
subb
and
movsl
push
addb
add
rolb
insb
sbb
mov
and
pop
test
scas
pop
imull
inc
and
ljmp
jo
rolb
movq
cld
sub
push
xor
adc
or
fldl
mov
cvttps2pi
fsubrl
loopne
sbb
xchg
data16
mov
or
inc
pop
mov
lea
sub
add
xchg
pop
push
cwtl
std
clc
lods
push
mov
adc
or
or
dec
ja
cmp
stos
mov
mov
sub
inc
add
dec
mov
lods
arpl
divl
adc
jb
push
cwtl
add
call
call
push
es
push
mov
into
xor
sarb
fnstenv
push
outsl
inc
push
fs
outsl
clc
orl
push
push
lds
fwait
outsb
jnp
mov
in
push
and
inc
ja
pop
mov
in
in
xchg
push
movsl
outsb
dec
ret
sub
aad
and
pusha
arpl
repnz
mov
or
lock
cmp
loopne
ret
push
jmp
loopne
and
popa
dec
icebp
xor
add
int
inc
sbb
loopne
dec
lcall
and
add
pusha
pop
ss
xor
inc
out
enter
ss
les
aam
int3
test
dec
sub
xchg
imul
push
insl
push
push
lea
pop
adc
test
mov
dec
inc
push
mov
test
aaa
into
push
out
xchg
je
mov
jo
dec
push
mov
or
mov
repz
jo
xchg
ret
xor
sbb
test
aam
out
and
bound
xchg
sub
push
loope
sbb
cs
sbb
or
pusha
ret
sbb
cwtl
arpl
das
xor
cmc
out
loope
cltd
push
addl
rclb
movsb
outsb
sbb
jno
lods
into
scas
or
push
xchg
or
mov
lock
mov
mov
loopne
data16
push
xor
imulb
push
aam
icebp
pop
push
mov
push
outsl
mov
mov
movsb
ds
push
adc
add
push
lahf
mov
xor
xlat
gs
pop
outsl
insl
jp
das
inc
jb
mov
ds
fadds
adc
xchg
pusha
lahf
movsb
dec
jmp
and
rorb
sub
mov
cmp
pop
pushf
mov
or
lahf
mov
jo
in
adc
xchg
lds
add
mov
pop
lahf
and
nop
addb
int3
inc
push
test
insb
push
dec
inc
lret
add
sbb
xor
scas
gs
movsb
int
and
or
cmpsl
add
pushf
addl
insb
xor
fmuls
sti
add
adc
adc
xlat
push
push
inc
cmpsl
stos
xor
mov
repz
popa
shll
addb
jnp
cli
push
jo
aas
xor
jo
mov
and
add
push
mov
test
fimuls
sub
and
add
divl
mull
or
ds
fs
rclb
push
and
hlt
inc
mov
sub
adcb
add
mov
xor
outsl
mov
push
cmpsl
imul
push
sbb
mov
add
les
lock
movsl
das
inc
out
add
shr
ss
push
es
sbb
enter
xlat
sbb
mov
mov
in
mov
fistl
mov
adc
mov
enter
fdivrs
stos
iret
add
imul
movsl
test
insb
and
test
cli
sub
adc
in
xor
adc
push
xchg
add
pop
sub
loopne
xor
xchg
lcall
sti
push
push
sub
mov
data16
xchg
stos
loope
dec
add
in
cmpb
cmp
clc
pop
push
or
dec
in
pop
or
call
add
insl
jno
test
dec
lret
xchg
xchg
imull
cmp
inc
clc
mov
ss
xor
nop
ljmp
jbe
popa
cmp
dec
and
xor
sub
pusha
imul
sub
xor
or
lret
out
mov
enter
or
rolb
jo
mov
and
int
popf
pop
in
inc
imul
mov
sub
lods
adc
das
add
outsl
inc
clc
and
adc
adc
xchg
inc
pushf
pop
out
jne
push
pop
sub
or
inc
jbe
xchg
movsb
test
lret
in
xor
add
adc
lahf
jp
pusha
cld
mov
adc
sub
push
stos
popf
pop
mov
scas
fmul
inc
test
and
adc
clc
mov
sub
rorl
fnstcw
popf
mov
enter
je
movsb
sarb
pop
lock
sbb
lea
nop
jo
movsl
cwtl
xor
inc
in
lods
jmp
data16
xlat
sahf
mov
mov
bound
mov
pop
sbb
jle
aaa
je
jnp
sub
mov
js
sahf
sti
mov
mov
rcll
jne
fmuls
sub
sub
pop
mov
xor
ljmp
scas
outsl
push
pop
out
pop
ret
cmpsl
mov
pushf
xchg
mov
and
dec
add
negw
xorb
sbb
push
dec
outsb
xor
cmp
lcall
or
mov
xchg
mov
sbb
incl
push
inc
mov
adc
loope
addb
pop
add
sar
insl
mov
xor
push
jbe
and
dec
outsl
shl
cmp
jno
jmp
cld
test
xchg
lods
mov
or
loopne
sub
adc
push
ud1
incb
sbb
add
adc
and
push
pop
cmpsb
push
adc
and
pop
popf
cmpsb
outsl
xlat
push
push
repz
adc
mov
push
lea
or
mov
adc
sub
push
movsl
dec
lock
and
dec
mov
enter
pop
lods
mov
sbb
add
andl
push
fisubs
push
ret
push
lods
pusha
sbb
xlat
adcb
fwait
and
mov
call
mov
jge
jbe
mov
loopne
xchg
test
incb
ret
sub
mov
fsubr
pop
xlat
lret
lret
xchg
data16
out
rorb
pcmpeqw
mov
mov
xor
fnsave
int3
test
movsl
fldcw
push
ret
adc
dec
and
jno
xor
lea
mov
incl
dec
jg
adc
mov
inc
inc
inc
push
jl
loop
jmp
push
js
jae
inc
stos
dec
cmp
jb
cmpsl
pop
sub
mov
lods
or
jb
xchg
lock
subb
jge
and
dec
xor
in
repz
push
cmpl
add
xor
mov
add
out
jo
mov
and
push
mov
mov
mov
pop
and
mov
xchg
je
js
xchg
or
add
sti
mov
mov
je
or
jecxz
stos
push
mov
rorl
pop
fsubl
rcrl
loope
jp
pop
hlt
lock
repz
ds
jle
xor
or
sbb
cmp
cmpb
mov
pop
stc
push
call
pop
or
cmpl
adc
andb
pop
ss
outsl
xor
cmp
jbe
push
stos
sti
lea
cltd
gs
push
and
cltd
ret
cmp
jb
add
xchg
lods
adc
cmp
push
cmp
movsb
scas
sbb
push
aaa
ret
ljmp
jne
scas
dec
jno
pop
pop
sub
dec
or
xchg
pop
call
loope
int3
mov
jae
insb
arpl
mov
push
adc
xchg
xor
fcmovbe
sub
in
in
push
jo
loope
in
push
push
xchg
rcl
sbb
or
add
fsubrs
push
xor
popa
push
pop
add
loopne
add
mov
or
lahf
push
push
and
mov
xchg
add
loop
fdivl
out
push
loop
inc
lods
adc
bnd
ss
adc
mov
shr
filds
add
push
rolb
push
mov
and
jb
xor
dec
jno
mov
adc
mov
addb
scas
cltd
mov
scas
popf
mov
jp
or
cmp
push
or
inc
pop
rolb
push
jns
cmp
sarl
mov
pusha
add
xorl
ja
mov
push
lcall
adc
jg
jae
mov
and
xor
xor
add
sbb
std
pusha
mov
and
mov
movsb
test
decb
cmpsl
adc
inc
mov
aaa
clc
jge
divb
outsb
lock
sub
repz
xor
xchg
adc
cmpsb
mov
jb
pop
leave
sbb
iret
sub
or
adc
daa
cmp
lock
mov
mov
lods
push
rcrb
jo
push
das
aas
movsb
mov
out
cmp
xor
not
pop
std
sub
out
pop
xchg
jp
je
cli
ljmp
je
data16
sub
push
aam
dec
scas
jle
call
cmp
jg
outsb
adc
int
add
cmp
or
outsb
add
inc
sub
jge
push
jle
cmp
jns
xchg
push
ficompl
jp
outsb
and
mov
lock
mov
daa
pop
clc
pusha
xor
inc
test
fisttpl
jb
jmp
notb
jge
cmpsb
dec
cmp
cmp
xor
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
or
cld
lock
pusha
iret
add
ret
xor
and
movsl
push
or
cmpb
add
jae
inc
or
adc
sub
jge
lret
jmp
pop
cmpsb
xor
add
dec
fs
or
push
sbbb
pop
pop
jge
mov
sub
mov
dec
seta
jle
mov
mov
cmp
movsl
outsl
push
out
sbb
andl
and
adc
push
mov
scas
add
push
sarl
imul
lret
xchg
lret
mov
xchg
les
aam
in
add
je
fldcw
adc
add
mov
insl
adc
jo
jl
push
inc
movsb
adc
mov
add
stos
pop
push
push
inc
adcb
in
jns
adcb
test
add
mov
add
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
jge
push
test
adc
rorb
int
rclb
divl
jo
xchg
rcl
push
add
and
je
das
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
mov
iret
cmp
lea
add
cmp
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
dec
std
add
mov
xchg
mov
or
test
xlat
mov
pusha
and
dec
add
push
pop
push
pushf
xchg
nop
push
scas
cwtl
scas
mov
mov
xlat
clc
cmc
dec
insb
mov
xchg
push
jg
xorl
fsts
mov
rol
add
lahf
push
xchg
mov
mov
adc
orb
xchg
jae
xchg
add
xchg
movsb
sub
fistpl
fcomps
push
aas
mov
test
push
and
test
add
mov
mov
cwtl
add
push
hlt
push
into
dec
cmc
xchg
or
loope
les
push
xor
imul
xchg
imul
or
sarb
decl
inc
ss
mov
incl
adc
je
cltd
test
scas
test
gs
pop
cmp
loope
xor
js
loopne
shrb
lea
pop
out
int3
xor
popf
sub
mov
inc
push
stos
push
add
cmp
push
test
inc
sbb
xor
and
rclb
push
sbb
or
jp
loopne
pop
ljmp
or
inc
dec
jmp
mov
sub
mov
pop
fadd
dec
jnp
mov
or
sbb
mov
mov
call
nop
or
inc
add
cmp
testl
cmp
jno
xor
insl
lea
mov
mov
rolb
aaa
jl
rol
call
aad
mov
adc
mov
mov
add
or
inc
test
outsb
nop
lcall
mov
shr
cmp
jbe
add
jmp
add
fcompl
cltd
sar
add
add
add
inc
xchg
and
mov
test
mov
adc
dec
mov
xchg
inc
in
fistps
push
int3
xor
pop
mov
push
mov
loope
mov
cwtl
stos
das
mov
test
add
cmp
add
sub
push
das
fisubs
pop
scas
and
push
pop
or
les
leavew
int3
add
dec
cli
aad
add
sbb
filds
mov
jl
mov
shrb
or
cmp
repnz
test
xor
sub
lahf
shlb
fmull
ror
sub
or
xor
aaa
orl
jb
push
mov
push
xor
sub
sbb
cwtl
arpl
and
pop
xorl
aas
jg
and
stos
inc
sbb
jl
aaa
je
leave
mov
jmp
mov
popf
rclb
loop
sbb
call
insb
mov
ds
add
popf
in
inc
jge
add
inc
rcrb
int
inc
mov
push
sbb
xchg
xchg
or
test
or
add
and
dec
cmp
inc
fisubrl
ja
les
xor
dec
mov
scas
sub
xchg
mov
push
mov
aas
mov
add
mov
ret
call
repz
push
sbb
or
push
lcall
mov
pop
xchg
adc
outsl
lods
dec
loopne
inc
clc
jle
in
push
add
dec
cs
fnsave
push
add
jmp
insl
inc
rorb
add
stos
dec
jne
add
fsubrs
xchg
or
rsqrtps
dec
negb
cmp
sbb
or
int3
stc
fmuls
arpl
mov
cs
notb
je
mov
sbb
int3
add
ret
lock
sbb
push
femms
sarl
inc
sbb
out
popa
clc
pop
mov
inc
xor
adc
enter
jmp
pop
dec
adc
out
rorb
pop
mov
dec
inc
adc
je
adc
dec
sub
test
test
enter
nop
sbb
int
push
pop
js
dec
in
adc
xchg
sbb
jle
dec
mov
in
inc
xchg
push
push
lock
ds
mov
push
ds
pop
mov
pop
adcl
shrl
enter
push
sub
fsubrs
mov
jne
push
or
jno
dec
test
test
add
or
bound
fcom
sub
push
mov
pushf
pop
jmp
aaa
xchg
ret
icebp
xor
scas
jb
push
dec
movsb
roll
cmp
dec
xchg
ja
and
sbb
xlat
mov
es
add
filds
mov
mov
push
push
xor
clc
sub
mov
sbb
push
push
pop
imul
stos
incl
adc
out
pop
insb
mov
mov
negb
pusha
lret
mov
cltd
mov
in
arpl
loop
or
add
xchg
dec
je
push
jns
arpl
insl
lock
xor
into
dec
scas
mov
push
jno
push
movsl
adc
int3
ret
pop
stc
sbb
mov
fistps
addl
cltd
push
popa
enter
lcall
vpshab
jmp
mov
push
call
xchg
dec
ds
inc
jge
add
add
pop
jg
into
push
sti
push
add
xor
popa
dec
imul
pop
test
dec
jne,pn
inc
push
sbb
or
inc
or
ret
lret
push
add
aam
jmp
das
cmp
pop
cwtl
cli
or
ljmp
cli
xor
cli
cmpsb
mov
add
test
testl
lock
pop
mov
push
and
lret
mov
push
stos
add
adc
popf
adc
cld
push
mov
push
push
xchg
aaa
add
fsubs
je
lods
rcll
inc
xor
insl
add
add
fistpll
subl
insl
enter
add
adc
repnz
dec
push
mov
mov
mov
push
rcll
sub
mov
rdmsr
mov
sbb
add
or
popa
jl
movsl
sub
jnp
arpl
out
pop
sbb
ret
add
pop
cltd
mov
addr16
sbb
push
in
and
inc
sahf
mov
or
add
sub
inc
fwait
sub
cmp
and
imul
xchg
cmp
sbb
pop
inc
pop
lea
mov
jmp
mov
clc
push
cmpb
adc
dec
mov
jns
es
js
push
bound
xchg
and
adc
pop
mov
sub
xchg
lods
lea
lcall
cmp
pop
je
aaa
add
dec
inc
cmp
cmp
push
rolb
pop
shlb
jne
les
pushf
idiv
repnz
mov
mov
ficoml
mov
repz
mov
mov
or
sbb
inc
or
cwtl
roll
mov
mov
sbb
adcb
sub
sub
cltd
sbb
cli
testl
rolb
push
add
or
push
jl
push
xchg
mov
arpl
dec
adc
or
adc
aaa
inc
dec
adc
loopne
xor
call
lret
cmpl
hlt
jle
push
pop
sti
mov
push
jne
jo
sub
push
cmp
cmp
in
dec
jbe
push
mov
ds
and
pop
cmp
shrb
sbb
xor
pop
pusha
leave
lret
or
addl
xor
and
and
sub
loope
test
xchg
cmp
inc
js
dec
ds
xor
in
add
mov
pop
mov
cltd
push
mov
lret
push
cmp
hlt
xor
and
add
pop
imul
push
fildl
add
or
mov
add
push
loop
rcrl
sbb
and
push
stos
dec
lea
add
orl
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
cmp
push
dec
test
pusha
mov
nop
xchg
subb
in
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
cmpb
xchg
inc
lea
cwtl
andl
mov
mov
jl
mov
popa
stos
subl
das
push
mov
add
lcall
mov
dec
aad
ss
mov
and
aas
mov
pusha
xchg
mov
add
icebp
inc
adc
ss
sbb
mov
dec
xchg
push
mov
xchg
jl
xchg
dec
enter
in
je
popf
add
fs
js
adc
adc
shlb
sub
divb
add
jae
inc
or
mov
xchg
addr16
dec
inc
mov
mov
imul
test
mov
push
cmp
jmp
or
push
jge
je
sbb
cld
lahf
jae
scas
aas
cmp
jne
push
mov
fcmovnb
cltd
pusha
loopne
cmpsb
fs
sbb
sub
xlat
imul
jmp
outsb
ss
addl
mov
add
ljmp
movsb
mov
inc
push
iret
mov
add
sbb
jmp
xor
push
inc
sub
mov
inc
addb
lds
jo
sub
into
movsb
adcl
mov
subl
adc
aaa
cmp
push
push
test
sarb
inc
sub
jne
test
rcrb
mov
jg
or
jo
push
mov
cmp
jno
or
ret
sub
loopne
cmp
lods
push
adc
mov
dec
shlb
popf
push
add
dec
lock
lret
sub
in
mov
clc
cmp
and
das
jge
dec
inc
or
jl
out
test
pop
clc
js
sbb
add
dec
and
pop
sbb
imul
dec
push
xor
jmp
jge
add
push
dec
loop
fwait
mov
cmp
pusha
inc
jo
ret
mov
and
rcl
push
inc
hlt
jmp
mov
push
mov
sbb
mov
loopne
cmc
rcrb
or
movsl
loop
push
add
lods
adc
sub
cmp
repnz
sub
pop
lret
sbb
inc
inc
mov
adc
inc
mov
jl
or
mov
rclb
gs
pop
icebp
out
adc
imul
sbb
xchg
add
pusha
push
push
xlat
inc
mov
repz
iret
xchg
iret
push
push
ja
and
inc
push
sub
or
clc
mov
add
insl
fsubrl
test
in
xchg
jmp
stos
inc
loop
pop
xor
pop
jg
or
subl
sbb
cltd
pop
leave
fldenv
addb
pusha
or
les
ss
jnp
dec
cmpsb
dec
sti
in
repz
stos
in
mov
add
add
leave
jne
loopne
mov
mov
sahf
imul
add
popf
les
jo
les
inc
xor
cmpsl
adcl
mov
rcll
sbb
imul
aas
scas
je
xchg
push
push
xchg
mov
mov
inc
mov
repz
dec
or
nop
cmpsl
mov
cltd
sbb
lret
andl
or
add
aaa
test
xor
enter
hlt
mov
icebp
lock
faddl
adc
sub
add
aaa
add
cmpsb
movsl
push
push
movsl
mov
inc
hlt
fstl
cld
xor
loopne
arpl
xor
fldl
pop
fistpl
fsubr
pop
faddp
andl
sbb
mov
adc
popf
sub
mov
cs
and
inc
insb
adc
add
xchg
lods
and
nop
jne
sbb
mov
cmp
lret
sbb
mov
leave
pop
test
pop
les
adcl
push
add
fdivrs
sub
mov
clc
xor
out
mov
add
filds
sub
sub
add
sbb
push
or
lds
add
mov
cmp
or
and
sbb
clc
dec
xlat
fsubs
vphsubbw
mov
xor
aaa
cmp
call
push
cmp
mov
int3
dec
sbb
cmp
lock
push
xor
jnp
mov
jne
push
fistps
in
sub
mov
add
ret
fimuls
divb
jmp
mov
cmp
jge
and
xor
clc
movsl
movsb
dec
sbb
es
xchg
inc
int
push
insl
cmpsb
mov
adc
inc
mov
gs
and
adc
cwtl
cltd
pop
aaa
push
imul
sbb
mov
pusha
popf
cwtl
insl
test
jg
cmp
add
cmp
loopne
stos
sbb
adc
push
pop
pusha
xchg
pop
mov
loopne
or
imul
inc
add
adc
push
pop
xchg
add
ficompl
or
jns
mov
mov
wrmsr
mov
adcb
cld
mov
bound
pop
dec
mov
mov
pop
bound
leave
inc
pop
arpl
xchg
jmp
pop
sub
push
insl
mov
sbb
nop
fisubrl
adc
mov
pop
ret
dec
cwtl
add
pushl
add
ljmp
dec
or
jne
pop
mov
rcrl
mov
aam
test
mov
mov
inc
adc
mov
movsb
sub
mov
imul
and
lock
adc
push
loop
fcomi
mov
ja
jle
loopne
xchg
test
add
fisttpll
in
and
and
pop
fmuls
push
adc
adc
das
faddl
test
cmp
mov
add
adc
xchg
rorb
or
dec
ret
inc
stos
out
cmpsb
xorl
fsubs
mov
test
fcoms
les
push
push
js
push
outsb
rcll
add
dec
sbb
scas
fnstenv
insb
add
push
fmull
popa
xchg
cmp
adc
and
loope
fsubl
push
xlat
sub
or
push
lods
fildl
dec
inc
mov
rolb
pop
dec
sub
sub
mov
xor
enter
jle
inc
cmpl
adc
sbbb
mov
fisubl
je
bound
adc
cmp
pop
fcoml
adc
push
pop
dec
add
push
mov
sub
call
pop
das
push
rclb
test
pusha
mov
push
cs
clc
pmuludq
loop
dec
adc
pop
and
add
repnz
jg
xchg
repz
sub
shrb
arpl
sbb
icebp
lock
or
iret
fwait
stos
aad
rorb
jle
int
add
ret
mov
jne
mov
xchg
add
out
enter
mov
in
sub
shrl
jl
ss
mov
ret
inc
arpl
mov
mov
xchg
sub
clc
mov
mov
mov
jmp
mov
xchg
or
shld
push
add
or
inc
push
pop
je
subl
push
lods
jmp
aam
bound
addr16
mov
mov
add
mov
pop
add
cmp
es
clc
xor
inc
rolb
movb
push
pop
scas
adc
adc
clc
add
rcrl
scas
leave
add
pushl
dec
xchg
adc
lods
mov
adc
sub
adc
mov
sub
push
sbb
int
pop
push
dec
pop
stos
aas
cmp
jo
ret
push
xchg
push
or
mov
inc
lods
mov
pop
dec
dec
shll
in
cmp
sub
push
add
pop
or
sub
enter
adc
xchg
sbb
or
xor
jecxz
lods
xor
loopne
or
or
test
popa
mov
imul
sbb
jle
shlb
movb
and
mov
in
xor
sbb
jmp
cmpl
ljmp
sbb
int3
or
subb
inc
adc
mov
cwtl
sub
push
mov
fs
or
cmpxchg
sub
in
and
cmpb
sbb
xchg
dec
lea
push
popa
inc
add
pop
lea
sbb
pop
sbb
jl
jl
nop
adc
loopne
adc
push
mov
push
enter
add
inc
push
inc
xchg
xor
inc
sub
and
ljmp
push
pop
imul
push
fdivrl
sub
lds
dec
jno
jno
ljmp
inc
ds
push
ds
jl
cmp
mov
xor
mov
dec
xchg
mov
in
aas
or
xor
inc
cmp
shlb
push
imul
push
cmp
xor
jne
dec
rcll
enter
clc
cltd
sbb
cs
cmpsl
outsl
pop
sbb
sbb
add
or
popa
cmp
pushf
dec
or
cmp
lock
add
dec
push
test
lret
mov
rclb
test
out
and
movsb
inc
sub
adc
push
mov
and
mov
insb
lahf
into
sub
loope
jno
cmpsb
dec
js
aam
in
push
fisubs
imul
dec
cmp
lods
les
inc
xor
loope
test
icebp
les
cwtl
inc
fs
loopne
in
in
les
or
jbe
inc
or
mov
add
add
stc
insl
sub
icebp
jne
es
sbb
ds
sahf
xchg
xor
fadds
lods
xchg
leave
daa
in
testl
adc
sahf
pop
mov
ret
enter
and
shl
xchg
jbe
lds
push
stos
mov
pop
jmp
xchg
mov
mov
jb
and
add
push
push
test
xor
sbb
sbb
rcrb
loopne
xchg
cwtl
xchg
rolb
xor
xchg
leave
loopne
inc
push
addr16
cmp
inc
sahf
add
xor
mov
add
cmpsl
testl
sti
sbb
or
dec
shrl
std
lcall
mov
dec
aaa
sarb
xchg
adc
imul
and
pop
stc
push
and
jp
xor
pop
stc
pop
push
push
jne
push
push
sub
stos
cmc
mov
in
or
dec
orl
pop
dec
xchg
pop
call
movsb
inc
add
testl
push
inc
sub
jmp
jp
jo
add
adc
dec
js
test
sub
push
add
jle
jge
inc
test
stos
test
stos
dec
pusha
cmpsl
dec
pusha
add
incb
pop
push
lods
or
cltd
call
jo
or
xlat
ror
push
push
sbb
xor
sbb
or
hlt
sub
xchg
loope
or
fdiv
lods
mov
in
in
or
call
dec
test
jo
stos
pop
inc
in
cmp
in
mov
adc
les
push
jecxz
adc
add
roll
sub
jmp
and
rolb
jb
in
scas
jecxz
fld
mov
roll
dec
add
test
leave
sub
jg
sbb
ss
cmpsl
imul
mulb
mov
shlb
cmp
push
arpl
cmpsl
sub
lahf
push
lret
cli
pop
loopne
nop
lock
push
dec
je
sub
inc
loopne
jbe
fisubrs
sbb
push
mov
ss
and
mov
cwtl
dec
pop
loopne,pn
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
add
addb
add
mov
cltd
es
add
fld
adc
and
inc
rcrl
or
push
xor
imul
loop
inc
mov
adc
push
jl
inc
inc
add
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
xlat
mov
aam
mov
imul
imulb
dec
test
push
mov
idivl
and
popa
mov
in
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
cmp
mov
jnp
dec
xor
loopne
cmp
push
add
dec
and
jl
lahf
jge
sub
push
xor
add
jne
adc
mov
testl
cmp
inc
inc
cmpsl
shlb
dec
push
sub
xchg
xor
adc
pop
sbb
insb
push
and
jbe
inc
xchg
pusha
pop
clc
andl
dec
xchg
aaa
dec
xchg
add
pop
lea
inc
les
loopne
push
fsubp
mov
push
lcall
push
mov
push
popa
leave
sub
pop
or
xor
mov
cmp
dec
add
lods
xorb
mov
and
add
testb
adc
and
adc
add
cmp
ret
dec
lahf
or
sub
mov
or
pop
aaa
adc
push
push
dec
cmp
xlat
xor
push
enter
cli
std
sbbl
jge
or
jns
dec
sub
cmp
jo
sbb
fdivs
sahf
adc
or
add
or
sub
add
je
add
adc
and
add
sbb
sub
adc
fisttpl
jecxz
adc
je
stos
test
int3
pop
adcl
pop
jno
enter
inc
xchg
lock
cmpsl
flds
cmp
pop
test
inc
aaa
add
cmp
movsl
mov
lock
aaa
or
mov
sar
add
test
push
andl
pop
loope
pop
adc
add
cmp
or
adc
enter
push
sub
jl
sbb
sbb
add
in
and
push
sub
sbb
leave
push
inc
fbstp
scas
dec
push
jecxz
inc
mov
xlat
mov
dec
fadds
pop
and
imul
cmp
mov
movsb
push
ds
xor
xor
pop
rolb
mov
inc
pusha
xchg
mov
lea
mov
xor
add
data16
je
sub
inc
or
add
je
js
and
mov
pop
cmp
jl
xor
lret
into
dec
inc
cmp
jns
dec
fadds
rorb
cmp
pop
in
aaa
shll
dec
push
cmpb
es
push
out
push
punpckhdq
jl
shrl
pop
cli
icebp
dec
mov
loope
ret
sbb
or
std
dec
xchg
mov
push
pop
je
push
mov
cmp
pop
jae
pop
xorb
inc
cmp
or
push
iret
mov
xchg
xor
loopne
cmp
inc
and
pop
jne
add
jge
sbb
scas
sti
push
jmp
push
sbb
aaa
inc
shll
dec
int
xchg
ret
xchg
stos
xor
bound
pop
push
jne
jl
jo
faddp
inc
mov
dec
push
inc
jecxz
lds
lret
xor
push
mov
jbe
lea
shl
lods
rcll
pop
sub
movsl
xchg
sahf
push
rorb
les
xchg
and
mov
add
sbb
pop
mov
xor
or
stc
jbe
loopne
scas
pop
push
pop
sbb
nop
imul
adc
js
add
xorl
loopne
pop
mov
and
aaa
inc
andl
mov
inc
fs
or
mov
nop
push
fldl
lods
or
and
ret
sub
pusha
push
rorb
je
inc
mov
dec
and
subl
sub
cmpsw
aas
mov
adc
push
mov
mov
jle
std
add
mov
je
mov
aas
ret
xchg
mov
adc
ds
lock
adc
je
js
cmp
in
je
lret
mov
lock
sub
sbb
or
xor
insl
popa
lods
les
out
insb
dec
sbb
cmp
lods
or
sbbl
inc
adc
sub
add
addl
sub
mov
xchg
adc
mov
cmp
push
xor
push
cmp
and
data16
aam
jbe
aas
jne
xor
xchg
test
mov
testl
push
or
fisubl
push
cmpsl
ret
out
mov
adc
add
push
dec
cmpsl
test
inc
aaa
mov
add
sbbl
pop
fdiv
je
shl
rcrl
ret
add
in
add
mov
jmp
adc
cmpb
jne
movsb
aad
add
push
mov
ss
xchg
mov
dec
sub
add
adc
mov
in
je
adc
or
hlt
mov
mov
dec
inc
push
imul
add
loopne
and
push
adc
xchg
shrb
xchg
and
adc
mov
in
aad
cmpsb
shl
clc
push
dec
jge
jl
add
pop
push
and
call
cld
mov
and
mov
movl
dec
or
dec
in
mov
cmp
rorb
sbb
aaa
fiaddl
and
and
dec
sub
mov
inc
add
fs
mov
shlb
jne
inc
or
mov
lods
xchg
test
and
jl
movsl
out
pop
and
adc
mov
push
adcl
mov
arpl
add
fs
stos
ljmp
fwait
rcl
mov
dec
push
jecxz
pop
xor
nop
cmp
lods
int
mov
icebp
jnp
or
movsl
popf
inc
mov
sti
ss
addl
aad
cmp
test
cmp
and
adc
pop
bound
cmp
dec
rcr
sub
lock
push
or
xchg
shlb
mov
adc
shrl
cmp
dec
push
push
mov
imul
fiaddl
xor
jle
rcrl
lock
push
adc
mov
sub
adc
xor
jae
ljmp
add
xlat
into
popa
jmp
fstps
out
push
scas
dec
inc
stos
loopne
loop
push
dec
in
adc
inc
inc
or
loope
mov
add
fwait
jo
or
and
mov
insb
mov
xchg
jmp
dec
add
or
ja
add
movsl
adc
xchg
add
sub
adc
mov
ret
jp
pop
push
cmp
mov
test
or
and
add
fsubrs
ffreep
addb
fucomi
add
test
js
aam
je
mov
xchg
mov
inc
jle
adc
add
call
add
dec
clc
mov
push
mov
ss
out
or
sub
and
or
sbb
test
inc
in
sub
or
jg
cmpl
add
outsb
loope
test
and
jecxz
jecxz
adc
dec
pop
add
jl
movl
mov
popa
ret
cmpl
mov
gs
lahf
sub
sub
sub
fcmovnbe
and
xchg
enter
scas
ds
or
adc
cmp
sti
jmp
loop
jmp
inc
lahf
mov
aas
rorb
add
xchg
cmp
sahf
and
push
push
aad
mov
sub
adc
xchg
push
ret
mov
push
or
pop
jno
push
test
popf
daa
xor
dec
mov
cli
lea
add
adc
dec
inc
mov
mov
mov
outsb
loope
add
cs
cmp
in
bound
imul
push
dec
test
jecxz
push
mov
dec
push
xchg
or
mov
lods
in
or
pop
addl
inc
xor
dec
mov
pop
jne
add
push
pop
xchg
jno
fs
scas
sti
jne
shl
jb
push
push
sub
addb
cwtl
xchg
inc
inc
or
jo
mov
enter
loopne
xor
xorb
movsl
int
lock
or
inc
push
xor
xchg
test
inc
sbb
nop
push
mov
icebp
iret
clc
xlat
daa
sbb
dec
bound
jns
and
in
inc
fwait
pop
or
loopne
push
inc
adc
mov
sarb
loope
mov
dec
add
adc
xor
pop
sbb
push
fistpl
scas
sbb
xor
mov
push
push
ss
add
lea
jmp
push
mov
movb
imull
push
in
add
inc
mov
inc
mov
pusha
add
add
push
push
pop
leave
and
push
enter
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
sbb
dec
or
push
or
push
sbb
add
push
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
adc
push
add
inc
or
or
sbb
sub
je
xor
jp
or
sarb
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
popa
mov
sbb
mov
orl
mov
dec
mov
push
scas
fs
scas
push
test
inc
mov
cmc
clc
lock
add
jae
or
aad
add
jbe
enter
hlt
fstp
push
xor
add
inc
or
adc
xorl
pop
adc
es
nop
mov
mov
mov
or
mov
push
imul
in
push
lock
jl
push
dec
jmp
push
shl
testl
lock
data16
jg
inc
sbb
sarl
shlb
mov
nop
inc
or
xor
adc
cmp
lock
scas
push
stc
and
jge
movsb
adc
leave
bound
mov
lods
scas
adc
push
xor
adc
test
dec
in
inc
push
iret
jo
and
jne
insb
sbb
dec
mov
test
dec
call
mov
movsl
fwait
subb
mov
test
cmp
in
in
lret
add
jo
and
inc
sub
test
jno
jbe
cmp
add
jmp
in
push
enter
lea
adcb
push
in
shlb
inc
push
mov
rcrl
jmp
push
pushf
cmp
or
pop
enter
scas
fsubrs
dec
mov
add
xchg
sub
adc
ljmp
clc
iret
push
ret
mov
fsubrl
xor
mov
mov
mov
mov
mov
mov
lea
imul
add
rclb
mov
ljmp
jb
outsb
push
out
xchg
out
imul
test
mov
int
jno
xor
add
lods
loopne
jg
mov
adc
mov
fsubs
mov
cmp
jno
xor
or
xorl
cmp
shrb
sub
add
je
xlat
add
jb
rcrb
xor
sub
add
mov
mov
xlat
cmp
or
mov
stos
mov
xor
or
int3
or
mov
lret
push
pop
push
rorl
sub
push
pop
mov
adcb
hlt
stc
shrb
test
xlat
mov
push
into
inc
pop
adc
sbb
push
xor
or
pushl
inc
imul
fsubl
mov
jnp
jnp
mov
shl
push
fsubs
jl
dec
xorb
or
and
rorl
sub
adc
rep
push
subb
xchg
lahf
mov
test
loopne
sub
ss
sub
pop
or
test
pop
in
mov
sbb
in
je
stos
cmp
xchg
push
push
sahf
mov
jo
inc
into
repnz
xor
mov
jns
ds
pop
jns
pop
cld
mov
test
push
pop
push
mov
fidivrs
inc
mov
sbb
mov
or
or
rcl
sar
call
and
push
or
push
shl
push
mov
movsb
mov
mov
or
mov
stc
stos
add
adc
cmp
mov
enter
lfs
sub
shl
push
in
add
push
faddl
notl
daa
in
js
lret
pop
add
jecxz
shlb
cmp
scas
push
push
scas
inc
sub
clc
sar
pop
repnz
in
dec
jo
push
and
xchg
popa
js
enter
clc
push
add
clc
sbb
nop
rcl
enter
ret
dec
inc
cmp
xchg
cmp
scas
mov
adc
mov
add
mov
mov
repz
push
jne
clc
sbb
sbb
movsb
cmp
pushf
pop
or
sarb
mov
shr
nop
and
and
ja
data16
scas
or
or
adcb
rcrb
add
mov
imul
insb
or
mov
dec
rclb
out
int3
jne
movsbl
dec
sub
xorl
std
clc
adc
jbe
push
paddb
cmp
cmp
mov
adc
or
lret
mov
cwtl
jo
jo
les
inc
cmp
dec
xor
or
push
push
cmp
loope
inc
rorl
and
pop
sub
inc
add
jle
test
test
mov
cltd
pop
sbb
mov
cmp
jl
icebp
pop
add
pop
xchg
pushl
sub
movsb
push
fs
push
fildl
add
xchg
sbb
pop
cmp
out
cmp
push
add
hlt
push
inc
addl
and
pop
and
push
mov
pop
dec
ja
dec
add
pop
cmp
xor
add
sarb
cmp
stos
lcall
jb
add
jb
or
or
jnp
mov
jmp
or
jno
jmp
push
jmp
mov
jmp
adc
pop
adc
pop
adc
push
mov
jmp
adc
dec
adc
aas
mov
jmp
sbb
xor
jmp
mov
jmp
sbb
and
pop
xchg
mov
mov
jmp
and
int3
imul
inc
and
inc
verw
loopne
xchg
mov
dec
adc
repz
cmpsl
jge
mov
mov
fnstsw
in
cmc
std
add
sahf
out
adc
sahf
out
sahf
xor
cmp
dec
jns
out
dec
push
pop
pop
arpl
jns
out
insl
jb
jl
out
sahf
addl
pop
into
add
add
push
pop
or
and
idiv
jg
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
xchg
mov
arpl
mov
add
test
rcrb
lods
cmp
in
and
mov
or
cmp
cmp
xchg
out
imul
or
shlb
aam
stos
shr
sub
out
pop
mov
fsubs
addl
push
xor
dec
mov
lods
jbe
aaa
xor
mov
or
decl
sbb
adc
pop
mov
cmp
loope
pop
inc
xor
xchg
inc
cmp
mov
lea
and
sub
sbb
cs
lret
and
adc
adc
movsl
mov
fsub
jbe
cmp
cmpsb
xor
mov
test
call
xor
inc
jmp
xchg
fadds
add
pop
or
iret
and
sbb
loop
faddl
add
adcl
jns
mov
test
mov
dec
rcrb
cmp
jae
sbb
ljmp
pop
das
inc
mov
inc
jge
push
adc
data16
sub
inc
pop
push
push
push
rclb
xor
pop
xor
fisubrs
xchg
loopne
sbb
insb
pusha
pop
in
pop
cld
add
push
outsb
add
adc
pop
add
sbb
xchg
sbb
call
stos
mov
add
xchg
jno
shll
adc
fbld
adc
pop
mov
pop
xchg
aaa
in
mov
call
add
jb
movsb
ret
push
push
movsb
and
dec
adc
rorb
pop
push
inc
push
xchg
mov
xor
je
pusha
xchg
push
mov
ror
jg
lcall
xor
fld
ret
or
call
xor
add
add
add
jne
jne
fsts
pop
iret
or
insl
push
and
and
not
and
xor
add
add
div
ds
sub
jge
fsubr
add
or
mov
ror
mov
sti
jg
data16
aam
cli
and
and
mov
push
rcrb
test
xor
or
add
fs
fcmovbe
lcall
mov
movsl
or
push
or
xlat
and
mov
into
add
add
dec
roll
call
jb
rcl
call
pusha
nop
xor
fwait
xchg
subl
sub
ljmp
rol
rcll
add
movsb
imul
fsub
in
mov
cmpsb
in
aam
xor
dec
in
shl
in
sub
dec
fwait
push
cmp
data16
add
or
cmp
loopne
cwtl
mov
aaa
fadd
xor
call
rorb
add
call
enter
cmp
dec
shll
pop
cmp
aam
jl
pop
xor
test
inc
jl
or
cmp
cmp
pusha
cwtl
cmp
add
sahf
xor
test
jge
and
call
xor
or
add
and
xor
pusha
xor
push
xchg
lock
and
xor
add
push
ret
push
jo
ficoms
or
les
pushf
xor
or
filds
sbb
addl
jne
mov
pop
pop
dec
inc
sbb
lods
dec
fadds
pop
fs
lcall
insl
and
ficompl
aas
outsb
lret
push
clc
jl
push
and
add
shlb
and
cmp
xor
fs
call
test
mov
mov
out
aam
xchg
fisubrl
arpl
add
cli
and
xchg
mov
rcl
cmp
and
call
in
mov
shl
rolb
subb
ss
or
push
xor
inc
or
inc
or
cmpsb
sub
dec
loopne
or
loopne
call
or
or
imul
lcall
adc
add
sub
inc
sbbb
js
scas
pushf
and
pop
add
xor
fs
and
nop
out
push
pop
inc
mov
cmp
enter
xchg
pop
ret
ficoms
scas
push
add
or
and
scas
inc
pop
inc
push
cmp
int3
pop
cltd
add
pop
fs
leave
in
movsb
pusha
shlb
or
xchg
sub
or
mov
mov
lds
add
aam
dec
xchg
dec
shll
or
fxch
pop
in
adc
pop
push
mov
ucomiss
inc
dec
xor
dec
shll
loopne
mov
or
adc
mov
sbb
and
push
mov
es
mov
dec
xor
cld
aaa
popa
out
pop
add
sub
mov
and
inc
inc
add
lret
jb
xchg
cli
add
lea
scas
add
insl
or
cld
sub
pop
xor
pop
stos
rcl
sbb
decl
outsl
ss
scas
mov
stos
lret
loop
lods
add
add
rorb
or
or
adc
push
popa
jne
add
pop
jbe
imulb
or
test
mov
pop
movsb
sub
loopne
lea
push
rolb
mov
subl
sub
pop
mov
ja
lret
dec
mov
jne
pop
cmpsl
and
das
scas
loope
mov
jl
test
or
enter
clc
aaa
jbe
or
or
fs
fists
mov
add
jae
push
in
add
mov
rolb
rep
or
add
in
mov
sbb
lret
fs
ret
ja
mov
fdivp
ror
mov
hlt
push
shr
xchg
or
mov
cli
pusha
loope
add
lea
push
inc
push
stc
shlb
movb
mov
rol
add
movl
jl
faddl
cmpsb
cmp
jbe
adc
notl
add
push
fadds
sbb
jge
sub
cmp
es
xor
inc
jl
push
add
gs
stc
ja
inc
ljmp
rolb
cmp
ja
and
les
cmp
add
xchg
dec
sbb
sbb
lock
inc
rclb
inc
inc
xchg
xor
add
adc
push
and
sbb
add
pop
gs
or
or
or
cmpsb
scas
mov
xchg
xchg
pop
mov
aas
cmp
xor
and
test
pop
pop
and
mov
mov
push
mov
mov
inc
fcmovnb
cmp
push
rcr
inc
pop
cmp
aaa
stos
xchg
icebp
adcl
insb
stos
insl
out
sahf
push
jbe
je
adc
call
push
pop
test
xorb
lock
lret
xchg
and
adc
push
cmp
lcall
mov
mov
shll
mov
xlat
mov
add
sbb
cmp
hlt
lret
out
fists
lret
sbb
add
push
mov
adc
ds
iret
cmp
sbb
test
cltd
leave
inc
jle
and
cmp
xchg
add
sbbb
mov
xchg
les
and
loopne
jno
xchg
push
jbe
adc
push
inc
jnp
and
add
cmp
inc
ret
xchg
adc
sbb
jle
adc
adc
jo
mov
jl,pn
arpl
inc
dec
inc
rcr
mov
mov
and
jle
mov
cmp
add
cli
es
lea
cmp
fdivrs
or
jne
or
js
shlb
dec
xor
adc
sahf
js
sbb
inc
push
aad
pop
pop
hlt
mov
inc
mov
or
std
push
outsl
or
icebp
jl
dec
sub
mov
jge
test
jae
ds
jb
xor
nop
pusha
and
cmpsb
dec
daa
lods
test
push
test
mov
mov
jge
add
daa
and
adc
js
sbbb
sbb
pop
mov
pop
call
inc
in
ss
or
sbb
ret
mov
inc
mov
and
mov
sub
or
xchg
lahf
cltd
ja
fs
jne
push
cmp
jbe
mov
add
fwait
and
mov
ret
sub
add
push
imul
imul
or
dec
les
jbe
ss
es
pop
add
ficomps
sub
mov
dec
test
push
sbb
adc
push
sub
mov
mov
bound
push
test
xchg
add
ljmp
and
push
pusha
jo
cmp
pop
add
jecxz
rcll
mov
scas
push
lcall
jo
fwait
clc
popa
adc
out
mov
dec
aas
push
add
mov
out
pop
rolb
dec
jmp
adc
inc
mov
mov
add
jnp
dec
or
jo
inc
sbb
lahf
fs
cmc
fldl
and
enter
sbb
imul
cmp
dec
andl
ja
loopne
movsb
mov
nop
push
ljmp
push
jmp
push
adcl
sete
jle
push
popl
mov
pop
js
dec
hlt
mov
fsubrs
sub
xor
add
clc
je
xor
ss
loopne
xor
adc
adc
push
or
fsubrp
lods
fs
push
dec
dec
scas
insb
push
out
xor
lods
enter
lds
sbb
in
testb
mov
lods
cmpl
adc
mov
push
mov
push
insb
adc
or
mov
push
aam
mov
fcmovnb
or
fsubrl
push
adc
push
or
xchg
cmc
repz
adc
lea
cmp
dec
jo
je
dec
ret
push
add
pop
clc
xchg
mov
pushf
jle
push
push
push
cmc
adc
repz
pop
adc
cmp
push
cmp
aam
push
mov
jg
adc
rorb
sbbl
mov
dec
cli
push
xchg
sub
mov
jnp
mov
sub
or
cwtl
mov
inc
and
inc
daa
rcrb
push
scas
dec
or
inc
pop
jmp
xchg
push
orb
mov
and
test
daa
stc
sub
lods
mov
orl
mov
sahf
adc
scas
jg
mov
mov
and
and
gs
mov
ss
cmp
and
data16
cli
add
adcb
aas
adc
aam
or
lock
xor
xor
lods
cmp
call
or
pop
shll
inc
inc
pop
inc
inc
cmpsl
imul
sub
and
or
stc
push
or
add
mov
cld
mov
jo
adc
jbe
divl
dec
nop
jb
fnstenv
das
out
enter
out
adc
ds
sub
fstl
shll
lret
adc
pusha
and
cltd
jae
adcb
sbb
cltd
cld
cmpl
test
aam
push
adc
and
insb
sbb
lds
push
xlat
nop
mov
inc
inc
pop
pop
xor
fsts
sbb
pop
push
jl,pt
cmp
mov
adc
je
inc
mov
data16
cmp
or
cmpsb
inc
bound
push
lock
pusha
je
scas
sub
in
ficompl
push
hlt
jecxz
inc
push
ss
push
push
or
notb
xor
mov
pop
xchg
popf
xchg
add
ljmp
daa
nop
mov
sub
adc
xor
and
xor
mov
inc
jle
lret
jae
mov
scas
mov
xor
or
push
dec
adc
inc
in
pop
jnp
sub
js
push
pop
xchg
pop
lcall
call
cmpl
das
cmpb
inc
xchg
add
inc
lret
dec
clc
inc
mov
ret
mov
pop
cmp
bound
stc
xchg
inc
pusha
sbb
cmp
ds
xor
cmpsb
pusha
lds
pop
or
mov
mulps
jmp
cmp
mov
or
movsbl
div
mov
push
xor
sub
dec
sbb
loope
cmp
inc
dec
imul
int
mov
xor
imul
and
mov
dec
scas
push
xor
scas
fs
pusha
je
roll
cmp
pcmpeqd
jge
jnp
test
push
test
and
push
mov
or
out
sub
mov
and
and
push
outsl
mov
jg
mov
xor
and
das
cmp
mov
cmp
push
enter
scas
jb
mov
sub
xor
je
push
or
push
out
sbb
rcll
in
add
add
or
xchg
add
mov
inc
and
inc
xor
je
dec
je
hlt
inc
dec
sbb
jmp
push
and
and
andl
icebp
sub
dec
pop
loopne
in
cld
inc
fidivs
xchg
cmp
fistpl
cmp
xchg
outsb
lcall
ret
lods
push
sbb
xchg
jne
lock
jl
inc
push
cltd
or
mov
jle
out
mov
out
sbb
or
ja
inc
js
jle
jecxz
lea
nop
lods
cwtl
les
cld
outsl
cli
lahf
lea
push
mov
nop
and
test
xchg
push
movsb
xchg
or
mov
fildl
icebp
sbb
jne
xchg
fstl
js
rorl
or
mov
arpl
sbb
jle
cmp
fisubs
cmpb
mov
adc
mov
ret
cmp
je
cmp
push
xchg
xorb
or
push
push
xchg
sbb
sbb
jge
sub
xor
xor
mov
sbb
fimull
sbbl
std
and
scas
sub
or
add
mov
jp
fcomp
add
or
pop
lea
add
ret
std
scas
add
mov
pop
fidivrs
mov
push
push
or
inc
lods
lretw
xchg
lods
cmp
lods
cmp
movsb
xchg
mov
inc
push
lods
xchg
test
push
in
repnz
xchg
push
xor
ret
pushf
add
js
in
push
adc
movzbl
push
push
xorb
je
ds
pop
repnz
test
push
inc
pusha
cmp
xor
add
pop
cmp
inc
push
mov
test
aaa
pushf
les
adc
hlt
pop
clc
mov
lea
daa
jmp
push
jg
je
cmp
lods
shrl
push
cmp
jge
add
adc
mov
push
inc
cmp
lea
cmp
mov
adc
xor
mov
aam
mov
in
repnz
add
lock
clc
jg
xor
cld
fbstp
mov
add
push
add
add
repnz
push
aaa
add
lcall
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
xor
inc
icebp
adc
xor
ljmp
dec
or
cmp
and
cli
sub
sub
adc
je
dec
je
push
add
out
loop
sarl
adc
repnz
movsl
out
aas
mov
inc
add
jmp
sub
in
pop
push
cld
incl
push
mov
test
je
cmp
jne
sbb
fimull
mov
adc
shrb
mov
jmp
or
inc
inc
adc
clc
xor
inc
sbbb
inc
jmp
sbb
cmp
incl
imul
cmp
addb
add
push
adc
xchg
or
fiadds
mov
add
or
cmp
mov
stc
push
or
add
adc
push
aam
inc
or
lock
cmp
je
cmpsb
mov
pop
jbe
inc
test
jmp
daa
pop
pop
push
or
cmp
add
mov
or
mov
mov
and
mov
outsb
gs
jae
bound
ficompl
jmp
mov
sub
pop
dec
testl
arpl
adc
cmp
je
cmp
push
cmp
je
cmp
jne
inc
jne
clc
into
add
adc
sub
inc
pop
or
pop
inc
mov
add
mov
je
ret
mov
lea
cmp
jne
add
loop
cmp
jne
adc
cmp
or
loopne
inc
add
pop
push
push
inc
sbb
call
mov
mov
jp
jl
or
jg
push
ficompl
mov
jmp
and
push
jmp
sub
aaa
aaa
inc
jl
inc
jg
aaa
jp
add
int
fld
out
dec
mov
sub
mov
dec
je
sahf
mov
jle
scas
les
outsl
adc
test
mov
and
mov
pop
or
mov
lcall
sbb
xlat
xorb
push
out
mov
add
and
adc
outsb
xor
push
call
mov
jl
pusha
mov
jg
jbe
mov
push
fs
imul
mov
inc
mov
roll
adc
sub
aaa
lcall
xor
dec
sub
gs
loopne
pop
inc
xor
jne
push
jge
adcl
mov
imul
xor
xor
fsubs
inc
cmpb
push
xorb
mov
ret
adc
cmp
in
inc
inc
push
out
jmp
xor
les
sub
xor
mov
push
add
dec
jb
andl
fisubrl
in
ja
pop
ucomiss
or
fdivrs
push
cmp
out
adc
xor
mov
in
adc
enter
cmp
adc
je
roll
cmpsb
pcmpeqb
add
mov
mov
push
clc
int
mov
arpl
mov
pop
or
ja
loop
adc
cld
sub
sti
or
or
stos
sbb
mov
mov
sbb
imul
adc
cmp
sbb
xor
leave
or
sub
in
fadd
xchg
mov
sbbb
adc
xchg
add
add
test
sbb
and
adc
sub
inc
dec
or
jp
stos
mov
les
mov
xor
mov
mov
cwtl
or
icebp
inc
pop
mov
je
push
mov
adc
fucomip
add
push
push
lock
sub
jge
jne
add
push
int
je
add
push
and
rclb
sbb
loopne
or
adc
loopne
movsl
mov
adc
xor
inc
dec
push
sbb
in
sub
mov
movsb
sub
sub
and
pushw
mov
cwtl
adc
leave
rcrb
pop
inc
aad
xchg
xchg
push
adc
data16
mov
jmp
push
rolb
mov
fdivl
mov
lds
out
jl
ss
and
nop
dec
jge
mov
sahf
adc
push
jo
imul
mov
mov
jmp
sbb
add
add
mov
int
movsb
xor
or
inc
call
push
movb
xor
and
dec
std
dec
xor
arpl
push
cmp
ljmp
lcall
cmp
lods
aam
pop
inc
imul
jmp
sti
push
add
push
out
xor
pop
sub
fldcw
cmp
inc
ret
and
push
ds
cmp
outsb
mov
sahf
xchg
inc
or
push
or
xchg
or
adc
lahf
and
push
push
push
mov
lea
enter
sub
or
jle
leave
or
jmp
shlb
jmp
rolb
push
jmp
std
add
jns
cmpb
jne
mov
cmp
or
test
test
dec
sbb
push
sbb
icebp
mov
scas
jmp
or
ja
dec
movsb
xchg
or
ret
sbb
or
mov
aas
add
lods
ret
test
xlat
mov
inc
adc
rcrl
mov
rcr
dec
cmp
mov
insl
dec
and
xchg
test
mov
jb
lods
push
add
enter
es
adc
call
add
adc
inc
lock
mov
xor
push
jb
aad
mov
pop
repnz
cmp
add
ret
pop
adc
sub
push
addb
shll
repz
xchg
in
mov
insb
jl
jnp
mov
dec
pop
lret
dec
and
popa
es
clc
mov
sub
sub
test
shlb
inc
pop
rorl
push
adc
ret
jns
insb
outsb
ss
je,pt
inc
jo
push
jecxz
sbb
scas
fistps
shlb
cmp
hlt
add
xorl
push
es
cltd
and
mov
jl
fisttps
xor
imul
sbb
scas
test
jbe
movb
cmp
xchg
jne,pt
inc
jo
cmp
or
push
fimuls
push
or
jl
or
jns
cmp
das
mov
rclb
in
sbb
cmp
inc
dec
call
cli
std
mov
enter
call
out
popa
int3
roll
xchg
loop
inc
xchg
sbb
addr16
les
mov
xchg
jmp
sbbb
aam
pusha
pusha
mov
xor
cmp
or
mov
cltd
xor
popa
push
inc
test
leave
and
push
fwait
xchg
lret
sahf
or
ret
adc
xchg
jle
mov
push
jae
cmp
add
xor
lea
lcall
xor
mov
push
jmp
push
sbb
add
mov
jbe
shlb
ret
push
sbb
adc
xor
push
or
fsubrl
push
mov
inc
movsl
xchg
hlt
pop
mov
pop
mov
xchg
iret
xchg
jmp
adc
aas
push
xchg
mov
mov
lea
jne
dec
and
and
xor
inc
je
dec
adc
adc
and
arpl
shlb
dec
inc
push
dec
cld
minps
mov
mov
cmpb
add
imul
pop
inc
push
scas
push
inc
mov
mov
das
dec
sub
jg
fmul
or
dec
pusha
add
in
xchg
push
and
pusha
js
test
push
dec
add
push
mov
subl
push
or
jmp
ret
mov
filds
mov
je
and
xchg
lods
xchg
adc
mov
jne
jg
inc
jne
fimuls
push
add
movsb
push
pusha
inc
rorb
in
pop
dec
aas
add
xchg
dec
mov
add
add
into
int3
iret
incb
out
add
sbbl
add
mov
pop
add
inc
fsts
repnz
xchg
pop
add
add
jmp
cmp
jne
xor
jbe
sbb
jecxz
xor
movsl
xor
jns
dec
cmp
sbb
bound
out
data16
inc
dec
or
iret
sub
mov
je
mov
add
jns
enter
pop
scas
adc
xchg
push
sub
aas
mov
pop
sbb
pop
js
jb
push
test
mov
enter
pop
sub
pop
push
adc
jp
dec
xchg
mov
inc
or
in
jmp
dec
dec
dec
inc
mov
in
call
jnp
ret
rcrb
addr16
stos
pop
js
adcb
fadds
imul
cmc
in
sbb
cmc
jno
sbbl
into
or
add
fists
mov
fwait
xor
or
xorl
sbb
je
bnd
lods
jecxz
gs
dec
dec
jecxz
dec
xor
je
push
clc
adc
push
sub
or
ret
mov
int
lret
push
dec
stos
mov
xor
mov
sub
mov
in
into
add
outsb
xor
pop
mov
cmpsl
xor
lock
loop
or
jmp
bound
mov
mov
push
mov
mov
dec
cmp
pop
mov
xchg
insb
lock
fldl
enter
add
or
mov
jno
or
pop
or
mov
push
sahf
fs
aaa
int
mov
movsb
xchg
movsb
push
out
xlat
test
call
xchg
jo
adcb
int
cwtl
or
icebp
push
push
dec
cmp
cmp
sbb
push
int
test
push
and
shll
cmp
stc
inc
add
loopne
rcl
movsl
or
movl
mov
ret
mov
push
or
or
sub
and
adc
test
adc
push
inc
mov
sub
fwait
or
enter
popa
das
mov
mov
and
jno
lea
ss
cmp
orl
fdivl
js
idivl
aam
loopne
in
cltd
sub
sbb
jns
out
sbb
push
imul
or
sbb
sub
leave
call
sbb
sub
pop
pop
test
add
cmp
mov
or
jo
dec
test
add
ret
or
out
adc
jmp
sub
inc
adc
arpl
fmul
addb
out
dec
jmp
adcl
pop
pop
ds
cs
loope
add
ss
xchg
dec
add
sarl
sub
call
xor
pusha
and
sub
mov
xor
jmp
mov
dec
mov
loopne
and
cmp
cmp
add
iret
insb
inc
sub
fs
jo
inc
arpl
mov
imul
sarl
andl
ret
outsl
mov
xor
or
jnp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
out
or
inc
xchg
adcb
loop
cmpsb
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
les
inc
subb
and
pop
jmp
mov
lcall
sbb
push
or
popf
xchg
adc
add
inc
sbb
ss
lock
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
xor
dec
or
cmp
inc
or
ror
pshufw
push
jns
add
or
aaa
cmp
aam
sub
jo
sbb
int
and
mov
dec
mov
ja
pop
rcll
cmc
arpl
outsb
nop
loopne
iret
fwait
xchg
or
fmull
inc
leave
lret
push
dec
sub
subl
add
pop
sub
adc
js
int3
fstl
ret
adc
ja
popf
mov
adc
add
addr16
mov
sbb
xor
mov
jg
cmp
pop
dec
inc
mov
or
inc
jo
xor
lea
cmc
mov
dec
aad
test
xor
jne
pop
pop
mov
dec
pop
mov
push
pop
daa
sub
inc
jne
pop
push
sahf
pop
shrl
lods
mov
adc
adc
mov
movb
inc
or
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
push
in
pop
dec
cmp
mov
cmpl
mov
mov
fisubl
hlt
dec
and
jne
in
add
orb
push
add
dec
add
and
or
lock
in
insl
popa
and
cmp
and
adc
loopne
mov
js
add
push
arpl
sub
addb
loopne
call
add
dec
aad
adc
cmp
jecxz
in
mov
ds
mov
or
lock
jmp
jne
repz
adcl
xchg
mov
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
or
jo
mov
loopne
sbb
push
push
xor
aaa
nop
stos
add
sbb
xor
add
and
jge
xchg
fidivrl
ret
rep
adc
data16
and
sub
arpl
dec
sbb
in
adc
sbb
ds
push
jmp
out
mov
xor
mov
pop
add
scas
stos
pop
jg
jbe
das
pop
sub
sar
icebp
sub
movsb
cmpsl
pop
sbb
mov
cmp
ja
xor
and
sub
daa
push
leave
sub
or
js
decl
xchg
jbe
xchg
jle
je
lods
stos
push
rcll
rcrl
pop
adc
hlt
sub
jo
pop
mov
test
or
inc
jmp
inc
daa
cmpsl
loopne
js
sub
lock
xor
cmp
mov
ret
lds
out
mov
sub
xchg
jne
mov
js
adc
sub
cld
or
adc
push
and
add
mov
loopne
cmp
insl
loopne
jle
add
cld
add
jb
orb
call
sarb
push
xchg
scas
cld
data16
fisttpl
sub
aad
dec
dec
pusha
lock
inc
jg
into
mov
pop
jo
movsb
or
out
and
inc
xor
cwtl
pop
add
push
cmp
movsl
xchg
pop
adc
or
or
mov
out
and
test
jbe
cmp
dec
mov
inc
dec
xor
popa
pavgb
dec
and
inc
rclb
add
aas
xor
mov
xor
inc
sbb
pushf
stos
imul
add
js
data16
cmp
addr16
es
lds
and
aas
pop
out
ret
cmp
pop
in
mov
pop
add
inc
jle
or
push
lods
mov
adc
aam
add
pop
es
scas
inc
jmp
inc
push
stos
stos
gs
xchg
inc
ss
aam
fs
clc
notl
test
loope
adc
inc
inc
test
lea
add
mov
inc
sbb
clc
dec
xor
inc
pop
adc
or
shrb
mov
cld
sbb
rolb
add
adcl
sti
aam
pushf
in
mov
jb
and
inc
push
jmp
jae
aaa
adc
push
lret
cwtl
add
les
dec
test
add
or
push
inc
adc
ds
pusha
cld
inc
je
sar
xor
out
jecxz
inc
in
add
jge
xor
sub
pop
lock
dec
imul
and
mov
pop
cmpl
subb
clc
stos
and
je
loopne
mov
ret
push
stos
lret
inc
inc
ds
cmpsl
push
xor
mov
pop
movsb
mov
ret
push
mov
inc
and
aaa
pop
jae
enter
test
popa
push
jl
pop
dec
push
adc
rclb
es
pushf
dec
enter
mov
sub
mov
sub
or
mov
add
or
fs
test
add
push
je
cmp
jbe
push
popf
pusha
rorb
stc
call
loop
push
lret
sbb
pop
push
movl
pop
ret
mov
lcall
mov
or
or
ss
cli
pop
inc
daa
or
test
lods
jbe
inc
inc
adc
inc
cs
inc
adcb
filds
push
test
data16
add
push
push
push
cmp
inc
das
lock
xor
jne
mov
jmp
xor
dec
aas
scas
push
cld
or
inc
jo
ljmp
add
pop
add
and
lea
push
cmpsl
loop
shlb
jno
jmp
inc
push
adc
push
popf
jp
lods
lods
xchg
outsb
data16
test
dec
cli
sub
push
mov
ficoml
pusha
xchg
pop
or
popf
std
xchg
insl
dec
shll
mov
sbb
push
and
and
mov
cmpsb
mov
fwait
mov
cwtl
outsb
mov
jne
mov
adc
fiadds
xchg
jae
jmp
jge
inc
shlb
push
xor
pop
div
hlt
add
movsb
mov
or
dec
jbe
mov
lea
divps
xchg
jmp
lods
push
dec
addl
inc
cmpsl
aaa
cmp
jo
adc
rcpps
add
in
in
and
mov
pop
sub
outsl
stos
sub
push
mov
cmpsl
sbb
push
dec
jb
fsubrl
mov
and
inc
push
pushf
mov
testl
lock
sbb
sub
add
or
imul
fdivrs
nop
shrb
fucomp
and
shrl
ret
jo
shlb
hlt
fwait
scas
adc
sub
sub
jne
bound
adc
out
adc
cmpsl
cmp
mov
test
rorl
jp
clc
int3
add
add
imul
incl
jb
cmpl
pop
add
push
cli
add
xor
fld
outsl
mov
sub
mov
mov
jne
hlt
sarl
add
or
xchg
fsincos
xor
stos
mov
dec
ljmp
ret
or
push
jg
dec
inc
add
shrb
xchg
mov
push
cmc
out
mov
daa
mov
adcl
inc
push
shlb
icebp
out
imul
or
test
test
xor
xor
or
add
mov
jb
pusha
cmp
ficomps
lds
jno
and
sbbb
psubusw
cs
fwait
pop
add
and
clc
jg
fs
jno
add
movd
movaps
jnp
push
enter
shlb
jle
xor
add
lret
je
or
jge
repz
or
jg
mov
ljmp
and
in
fisubs
mov
aam
ret
or
adc
push
hlt
adc
mov
pop
ficompl
xchg
repnz
addr16
ret
mov
add
ljmp
addps
int
add
out
adc
loopne
push
dec
sbb
cmp
pop
pop
test
inc
lds
shr
and
ret
mov
lea
aam
pop
sarb
xor
xor
pop
add
add
xorl
fdivs
mov
lret
or
popf
lcall
lret
sub
nop
inc
fcmovb
ret
adc
std
cld
gs
shl
inc
hlt
gs
lods
pop
and
stos
mov
add
mov
arpl
shlb
push
inc
dec
pusha
ret
pop
or
adc
mov
test
loope
jb
pop
incb
ficoms
cs
lods
ds
inc
sub
sbb
in
clc
ja
mov
jbe
lcall
inc
cmp
jne
inc
cmpb
out
addb
or
xor
rorb
inc
and
adc
insb
addr16
fimuls
push
or
mov
arpl
ret
daa
sub
loope
xchg
andb
mov
addr16
ret
imul
mov
or
mov
xchg
int3
jo
nop
xchg
xor
xor
sbb
mov
or
mov
sbb
cli
add
dec
xchg
xor
rol
add
push
mov
test
adc
adc
cmp
xchg
push
rcrl
shrb
jns
add
push
xor
mov
inc
pop
sbb
push
jne
inc
adc
ret
mov
push
push
movb
les
ret
sbb
pushf
pop
addr16
lock
sbb
sbb
ret
push
sbb
pop
test
mov
sub
mov
shlb
or
inc
xor
adc
mov
addr16
movsb
jnp
out
jbe
je
jp
leave
icebp
sub
into
movl
loopne
xchg
imul
pushf
push
or
mov
dec
fwait
inc
fwait
pop
cmp
jmp
jae
add
out
idivb
cs
add
jl
mov
or
cmc
add
daa
call
test
push
dec
add
or
popa
rorl
jle
xor
ja
and
int3
stos
push
sbb
xor
sbb
ret
sub
inc
cmp
or
jmp
arpl
cmp
int3
sbb
add
ja
imul
loopne
lock
or
fists
sbb
or
movsb
fldt
fidivs
dec
movsl
or
sarb
shlb
aas
pushw
add
mov
xor
inc
data16
push
xor
das
jnp
push
ret
add
je
jae
adc
pushf
push
enter
sub
jecxz
lock
jne
das
jo
pop
inc
adc
dec
pop
ret
add
jmp
in
jae
pop
aaa
pop
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
adc
cwtl
xor
packsswb
pop
movsb
pop
inc
inc
push
sub
adc
or
cld
jne
and
pop
cld
aad
and
jo
hlt
les
out
outsb
jne
out
jmp
add
ljmp
int3
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
cmpsl
dec
es
jl
or
lret
jne
inc
aaa
push
lds
mov
mov
loope
jne
adc
adc
mov
push
push
pop
xchg
hlt
push
call
dec
push
rolb
or
loop
std
int3
mov
mov
mov
roll
cmp
cli
xlat
and
mov
cmp
mov
repz
pop
and
arpl
fdivl
jne
test
or
sbb
out
into
cmp
jb
rep
jmp
mov
cmp
jb
jnp
jae
outsb
add
cs
fs
loopne
push
mov
mov
and
inc
push
and
ficoml
adc
sub
inc
add
add
pop
shr
lods
adc
sbb
push
dec
add
dec
cmpsb
nop
inc
xor
xchg
sbb
or
push
lods
repz
repz
movsb
pushf
xchg
mov
inc
mov
mov
call
jns
in
lock
hlt
clc
bound
out
clc
cld
shlb
mov
clc
sbb
mov
xlat
jmp
and
or
or
into
nop
inc
pop
pusha
sbb
and
loop
mov
sbb
lea
jl
cld
jl
daa
mov
cld
out
insb
addr16
lods
neg
adc
sbb
daa
in
xchg
xchg
xchg
stc
sub
pop
nop
xorb
cmp
push
movsb
push
int3
fiaddl
jl
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
addr16
dec
mov
fs
iret
repz
mov
or
push
xor
inc
repz
cmp
push
arpl
sbb
repz
sbb
sbb
adc
repz
or
or
dec
enter
inc
jl
adc
push
xchg
test
aaa
sub
xchg
cmpsb
push
add
pop
punpckhbw
xchg
daa
ja
daa
dec
aaa
pop
push
pop
jbe
push
sbb
gs
mov
pop
inc
cmc
sub
push
fimuls
dec
orb
mov
and
iret
insl
xchg
adc
fidivs
sub
in
outsl
inc
cmp
fists
popl
mov
dec
movsb
pop
cmp
push
lcall
test
inc
iret
mov
dec
es
jmp
lea
mov
or
cmp
inc
and
popf
push
lea
xchg
daa
fildl
mov
pop
outsb
aad
and
inc
cmp
pop
or
xchg
cmp
xor
popa
imul
adc
xor
imul
add
enter
jp
dec
pop
outsl
out
pop
jmp
punpckhbw
or
test
movsl
inc
mov
aam
sbb
xchg
inc
and
pop
sub
cltd
pop
std
jb
and
and
jp
dec
cmp
pop
pop
cltd
mov
jecxz
push
sbb
js
dec
adc
fcoml
dec
push
jle
xchg
insb
sbb
arpl
fndisi(8087
add
push
jbe
sub
inc
aaa
pop
shrl
xchg
cmp
pushf
mov
cmp
into
lea
cmp
andb
add
jmp
sub
dec
jnp
and
sbb
push
adc
or
add
out
mov
jne
pop
fcompl
call
jns
jl
jle
push
or
add
imul
and
push
or
add
aam
adc
les
jne
fldenv
pop
adc
pop
push
xchg
stos
shlb
inc
cmp
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
shr
mov
adc
pop
sub
sahf
adc
imul
jb
jle
pop
dec
pop
and
push
fistpll
xor
clc
fwait
ss
pop
das
mov
aaa
ss
loop
nop
fidivs
or
repnz
and
add
xchg
push
or
push
xchg
adc
inc
fstpt
inc
les
orb
call
fsubrs
cmp
xor
push
push
sbb
jne
xchg
ljmp
mov
push
mov
insl
mov
fimull
inc
rorb
repnz
dec
pop
mov
add
add
mov
in
js
xchg
mov
cmp
rcrb
std
jne
scas
add
repz
or
add
jg
sub
sub
loopne
js
push
ljmp
in
insb
cltd
testl
adc
jmp
push
sub
push
fmull
mov
dec
jecxz
fs
or
lahf
inc
mov
or
pop
cmp
xor
fs
pop
sbb
sbb
roll
ja
add
inc
dec
mov
dec
fists
mov
push
sub
push
negb
pop
add
or
or
shrb
ja
jp
rorb
cmp
out
push
sbb
or
pusha
xchg
cld
jb
jp
sub
push
clc
jbe
add
pop
cmpsb
pop
add
adc
addl
popa
jmp
push
mov
add
jmp
test
jne
test
scas
adcb
cmp
xorl
orb
lods
cld
jbe
jle
mov
cmc
je
cmpsb
notl
mov
pushf
pop
hlt
pusha
push
dec
lock
ret
xor
negl
cld
rolb
pop
out
inc
and
testb
les
xor
add
arpl
lods
mov
into
adc
nop
in
mov
popa
call
ljmp
mov
pusha
dec
sti
mov
orb
adc
dec
or
aas
pop
and
or
shlb
or
pop
data16
outsl
push
xlat
pusha
sub
pusha
insl
xchg
roll
mov
or
hlt
or
mov
or
leave
inc
dec
push
rolb
jns
xor
push
test
shl
inc
adc
cwtl
rcr
outsb
jl
mov
pop
adcl
dec
test
jmp
cmc
or
rclb
jge
xor
pop
rclb
aam
insb
xchg
push
pop
add
fs
frstor
rcl
js
mov
ret
rorb
repnz
and
pop
rolb
cs
dec
jne
jmp
add
push
xchg
adc
cs
cmp
dec
cmpsb
dec
jne
ret
jmp
cmp
es
pop
pop
inc
sahf
xchg
push
pop
and
pop
mov
mov
data16
mov
movsl
stos
ds
test
pop
andb
push
shlb
decb
into
lock
and
neg
sub
cmp
jne
mov
push
mov
std
jne
es
jne
outsb
stos
cltd
cmpsl
call
aam
mov
icebp
cmpsl
add
jb
jmp
push
inc
incl
dec
mov
jns
pop
inc
adc
jmp
std
push
out
jle
xor
cld
cld
jmp
fldt
mov
in
adc
adc
inc
inc
inc
ss
add
inc
ljmp
pop
ret
mov
lcall
in
xchg
aam
and
xorb
shrb
dec
and
mov
pushaw
sbbl
push
jp
popa
xor
inc
cmp
or
xchg
roll
addb
inc
add
adc
adc
mov
lahf
or
and
or
leave
adc
in
push
pop
pop
loopne
and
pop
pop
lds
es
or
pop
or
mov
lods
and
mov
pop
add
xlat
add
push
cli
push
mov
pop
jne
fwait
dec
loope
fmuls
add
or
and
add
mov
push
and
mov
mov
ret
sub
push
push
push
push
inc
test
and
lret
loope
or
add
push
divb
out
fs
jno
add
dec
add
lea
push
inc
frstor
add
cmp
mov
adc
add
and
arpl
add
sar
sbb
or
lret
ret
loope
cld
and
push
jb
daa
call
adc
jmp
mov
push
xchg
movb
gs
push
fbld
push
mov
mov
xor
jns
ss
and
xchg
test
int
cs
hlt
mov
test
dec
mov
xor
stc
push
mov
push
fimull
pop
xchg
call
or
adc
push
xchg
clc
or
add
add
push
xor
shl
fmuls
cs
sti
jge
not
and
sub
add
pop
mov
sbb
out
mov
lock
rcrb
adc
imul
adc
dec
inc
pop
mov
add
test
xchg
sub
xor
pop
push
ja
jne
xor
cltd
insb
pop
mov
push
lcall
xchg
jmp
add
icebp
jg
incb
mov
inc
je
mov
lea
neg
mov
lock
mov
or
add
jmp
or
mov
inc
inc
cmpsl
mov
loope
sbb
roll
mov
pop
add
mov
sbb
fdivr
inc
cmp
jb
jno
jge
orb
add
data16
pop
pusha
add
cmp
ret
cs
sbb
adc
clc
lods
subl
xchg
adc
add
add
sbb
add
jmp
fsubs
mov
mov
mov
divl
lret
in
imul
stc
addl
xor
jo
xchg
fst
rolb
or
mov
shl
jne
pop
fiaddl
push
ficoml
and
ljmp
jecxz
daa
repnz
repz
mov
aam
xchg
pop
dec
cmpsl
add
inc
mov
inc
lret
sbb
mov
loopne
mov
pop
ljmp
ret
in
mov
iret
dec
lea
jl
and
outsb
sahf
sarb
fbld
cld
rclb
pop
dec
mov
and
inc
arpl
xor
pop
mov
imul
inc
jmp
cmp
sbb
jmp
adc
jne
sub
sbb
xlat
ret
cmp
adc
fimull
and
cmp
movsl
lret
adc
clc
js
inc
jns
out
or
and
adc
adc
pop
mov
fidivrs
pop
lods
adc
mov
push
aam
xor
or
mov
and
je
lret
or
dec
pusha
je
lea
push
sbb
sub
jo
inc
leave
and
orl
push
jp
push
jbe
push
add
and
dec
movsb
and
call
jecxz
push
lea
in
aad
push
adc
shl
cld
std
mov
nop
dec
inc
cltd
sbb
mov
push
adc
add
sbb
push
popa
insl
xor
dec
in
xor
cmp
insb
les
jmp
push
in
push
stos
mov
lds
sub
sbb
push
pushf
adc
jmp
aaa
ja
inc
loope
add
add
lock
and
hlt
mov
inc
mov
dec
jne
fs
add
add
bound
iret
add
push
inc
pop
insb
xor
adc
xor
add
xlat
lds
push
inc
push
inc
lods
sub
push
adc
orl
cmp
andb
sbb
sbb
dec
mov
je
adc
mov
push
or
imul
inc
cmpsl
fisttpll
xor
jno
enter
mov
xchg
and
push
adc
cwtl
sub
movsb
pop
outsl
inc
mov
jno
or
int
mov
adc
mov
pop
nop
jb
lea
push
adc
or
in
mov
xchg
adc
add
cmp
mulb
dec
js
clc
gs
xor
push
clc
mov
es
imul
inc
mov
mov
xor
jg
mov
lret
daa
or
pop
jne
or
jno
sbb
inc
dec
lds
or
pop
jmp
iret
movsb
mov
dec
xor
pop
or
mov
mov
push
xchg
es
or
in
in
outsl
inc
stos
mov
int3
movsl
xorl
test
push
mov
pcmpgtb
push
outsl
mov
push
shrb
add
jmp
mov
clc
xor
jo
stos
push
mov
fistpl
or
push
inc
sar
hlt
push
in
inc
xchg
insl
xor
inc
jecxz
inc
sub
pop
test
xor
or
inc
fdiv
lret
cmp
add
incl
ss
inc
mov
pop
fisubrs
xchg
fcomps
rcrl
clc
or
sti
or
gs
out
inc
xor
adc
and
sahf
data16
adc
add
or
push
into
dec
clc
ljmp
adc
loop
and
or
dec
in
mov
xlat
jle
mov
les
ja
cmpxchg
jp
mov
pop
or
mov
js
pusha
mov
and
push
push
dec
xchg
dec
pop
cld
dec
add
imul
jge
arpl
popa
orb
add
outsb
sub
in
inc
mov
imul
or
mov
pop
dec
add
insb
push
inc
loopne
push
jne
pop
addl
xor
das
decl
cmp
pop
imul
sbb
mov
jbe
sbb
push
mov
sti
ljmp
pop
mov
aad
xchg
sbbb
popa
push
rcll
mov
pusha
adc
shll
ret
and
and
dec
ficoml
or
std
push
dec
loopne
dec
test
test
push
pop
sub
mov
inc
mov
jne
and
mov
adc
fdivrl
into
add
add
sbb
inc
adc
jnp
out
or
repnz
add
ja
sbb
adc
clc
mov
es
fldl
and
sub
pushl
sbb
rolb
dec
dec
inc
imul
aaa
popf
fcoms
mov
jg
sub
mov
mov
jle
adc
inc
adc
adc
cmp
adc
adc
cmp
dec
xchg
fcom
pop
iret
sub
sub
je
loopne
js
mov
mull
pop
add
clc
adc
fs
mov
adc
inc
je
testb
mov
mov
stos
cmp
push
or
call
movsl
jmp
dec
je
add
or
jmp
cltd
rcrb
fstp
jnp
outsl
jno
push
sbb
add
jmp
push
xor
push
push
fisttps
or
adc
cmp
jg
test
push
stos
push
lea
push
inc
cmp
vcmpunord_sss
rcll
add
xor
arpl
xchg
cmp
shlb
push
push
push
addr16
sub
mov
addr16
add
dec
or
loopne
call
mov
xchg
popa
jb
push
repnz
push
test
je
mov
add
cmp
and
dec
sub
iret
mov
cmovp
mov
popa
dec
or
mov
pop
pusha
mov
mov
add
dec
loopne
mov
ds
rol
filds
iret
or
js
xchg
push
setb
leave
add
ja
rcr
xchg
add
jmp
rorb
add
dec
jno
xor
jae
push
jmp
sub
push
push
pop
dec
loopne
scas
adc
or
push
fsubrs
adc
inc
js
imul
jae
pop
daa
lods
orb
jae
sub
inc
add
pusha
jne
adc
sbb
jp
ret
push
push
test
lock
js
fs
pop
adc
loop
pop
lea
add
sub
rolb
in
xchg
cmpsb
dec
or
test
or
fst
fsubrl
add
xor
je
mov
mov
sbb
dec
and
add
cmp
mov
pop
jle
call
aaa
push
pusha
ss
cli
or
lea
cs
xchg
and
dec
js
movsb
mov
push
scas
mov
cmp
add
mov
push
decl
das
ds
dec
cmpsb
pushl
sub
xchg
je
push
add
adc
push
inc
xor
lcall
dec
push
pop
sub
repz
mov
cli
push
push
dec
outsl
out
fs
pop
rcrb
imul
cmp
popf
rcl
lret
push
push
add
sbb
jmp
inc
lods
movsl
stos
in
push
or
insl
or
cld
dec
xor
sarl
ret
adc
add
dec
jmp
push
out
inc
in
data16
push
inc
cmp
je
imul
mov
stc
xchg
clc
push
mov
stc
mov
stos
xor
fs
cmc
mov
notb
imul
add
sbb
jge
insl
xchg
mov
imul
pop
mov
jle
inc
dec
or
je
xorb
ret
add
push
xchg
mov
out
jbe
mov
jmp
dec
or
mov
cltd
pop
inc
mov
push
dec
movsb
adc
ja
rcll
clc
or
stos
xlat
je
cmc
push
in
test
sub
jb
insl
push
jbe
sub
dec
pop
sets
inc
imul
push
ret
cmp
push
mov
nop
jae
in
push
add
jnp
or
sarl
mov
add
mov
dec
inc
mov
movsb
lret
inc
dec
inc
xorb
add
xchg
add
clc
mov
pushf
out
lds
jbe
jmp
push
add
cmpsb
sbb
xorb
scas
dec
and
mov
mov
adc
or
add
js
dec
ss
add
popa
rol
pop
es
push
test
cmc
jmp
dec
and
ss
mov
aam
push
push
mov
jl
jge
cli
loop
lods
or
icebp
adc
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
daa
mov
fmul
outsl
jne
push
push
and
sbb
inc
aam
sbb
sub
in
call
clc
push
and
dec
or
cmp
pop
jns
jbe
add
imul
fadds
insb
dec
ret
div
lcall
push
xchg
pop
sarb
stc
and
jge
jnp
sbb
cld
jmp
adcb
loopne
mov
jge
sahf
adc
in
push
test
mov
push
jae
test
lcall
dec
lcall
or
mov
ret
clc
cmp
cmp
daa
dec
inc
pop
pop
pop
inc
adc
lock
test
push
popf
lea
dec
jmp
pop
jae
and
mov
in
add
jl
cmp
stc
xlat
repnz
jle
pop
xor
or
cs
fsubrl
mov
clc
xchg
add
inc
ja
xor
in
xor
xor
into
je
fcmovne
lea
pop
jne
mov
fdivrs
xchg
jnp
enter
popa
jp
lea
pop
jnp
add
lds
out
repnz
jnp
scas
orb
dec
and
sbb
mov
xchg
repnz
push
jne
mov
mov
and
push
cmpsb
sahf
push
in
xchg
push
push
leave
jl
and
mov
negl
push
lea
in
nop
je
and
push
les
test
sub
incl
lahf
out
sahf
sub
sbb
or
mov
sbb
ds
sar
push
cmp
stos
loop
in
pushf
mov
mov
add
and
inc
pop
icebp
push
dec
lcall
mov
mov
push
outsb
add
jne
mov
out
sahf
testl
enter
lahf
shl
clc
mov
xchg
or
push
adc
nop
inc
lods
orb
ret
push
pop
nop
adcl
pop
cmp
add
hlt
sub
jecxz
dec
push
or
je
mov
movsb
mov
out
jmp
testb
sbb
pop
lock
sbbl
mov
rol
cli
add
pop
dec
add
add
inc
mov
and
sub
push
sbb
stc
xchg
dec
xor
lret
add
popa
adc
xchg
mov
and
test
add
jne
out
js
mov
dec
adc
mov
cmp
pop
pop
mov
xor
xor
repz
lock
pop
popf
push
ret
or
push
andb
jmp
negb
je
movsl
cmp
push
lods
cld
in
push
fstl
mov
aad
sub
sub
lret
sbb
xor
or
sbb
cmpb
xchg
insl
fsubs
mov
inc
mov
add
fadds
add
pop
cmc
rolb
cmpb
aam
push
rcll
aam
cmc
imul
test
or
push
std
adc
sbbl
pop
mov
add
sbb
movsb
hlt
add
inc
cmpb
lock
sub
add
rcrl
ss
mov
les
je
rolb
dec
jb
push
mov
ss
sbb
pop
jmp
loope
fucompp
insl
xor
sub
std
add
jo
add
sbb
add
or
adc
mov
xchg
push
and
clc
mov
sbb
sbb
or
dec
stc
repnz
or
jo
repnz
and
ret
mov
rolb
in
add
add
push
pushf
or
aas
sub
xor
mov
das
das
das
das
sbb
subb
pushf
popl
mov
jno
mov
testl
mov
ja
sbb
cwtl
cltd
sub
aad
jge
inc
enter
adc
subb
sbb
fsubr
dec
js
std
push
lcall
push
int3
adc
popa
or
push
xor
push
in
or
add
rol
add
xchg
ss
mov
pusha
decl
test
andl
ljmp
ret
sub
xchg
iret
xchg
rorb
fcoml
fcomps
int3
mov
xchg
clc
or
test
mov
mov
mov
cmp
mov
add
hlt
fistpll
insl
xlat
sbb
aam
aaa
dec
cld
xor
loopne
rclb
ror
pop
in
xchg
int3
jno
insl
push
jne
push
and
test
jecxz
in
das
adc
sbb
push
add
test
sub
pushl
pop
cli
add
mov
mov
inc
push
leave
sbb
adc
add
add
and
push
push
or
das
lock
dec
or
xchg
xchg
push
mov
and
shrb
lahf
jge
pop
imul
mov
mov
adc
jbe
push
lock
stos
rolb
push
jne
imul
or
or
clc
or
sbb
push
scas
movsb
jbe
add
push
adc
or
or
loopne
pushf
mov
xchg
insl
test
dec
push
shlb
loopne
jbe
push
push
jne
xchg
pop
call
dec
ljmp
sbb
stc
shl
add
pop
mov
mov
addb
outsb
mov
mov
push
pop
stos
and
cmp
sbb
add
and
cld
out
jmp
push
frstor
or
cmp
adc
mov
mov
test
push
or
pop
push
in
sbb
add
lret
gs
shl
sarb
test
in
mov
cmp
and
or
test
ror
xchg
sbb
sarb
leave
xchg
call
addr16
xchg
loopne
cmp
out
or
sbb
lahf
mov
mov
cmp
sar
lahf
lea
pusha
and
pop
ja
or
mov
xchg
xorb
push
sarb
add
sar
pop
lods
movsb
add
jbe
xchg
push
sub
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
mov
lcall
or
sbb
into
dec
pushf
mov
or
add
setg
jb
sbb
or
push
add
xor
sti
mov
adc
push
sti
add
or
mov
clc
adc
push
imul
cs
dec
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
xor
test
insl
and
jo
test
test
ds
jle
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
adc
out
inc
fs
sbb
sbb
imul
sub
js
rolb
add
pop
and
dec
and
btc
in
lods
dec
arpl
add
or
fdiv
sub
pop
jle
inc
je
xlat
add
or
add
fcmovb
and
ret
ret
adcl
mov
mov
adc
cmp
mov
push
arpl
push
or
nop
jbe
xchg
mov
ljmp
push
or
dec
and
in
subl
mov
mov
es
add
xchg
mov
adc
es
push
xchg
or
addr16
cmp
sub
inc
inc
push
insl
cmp
jl
xor
jmp
xchg
pushf
sub
sbb
dec
mov
repnz
sub
and
clc
cmp
dec
mov
test
cmp
or
pop
pusha
or
aaa
pop
sub
lds
dec
sub
aaa
inc
cli
inc
stc
jo
xlat
mov
mov
cmovns
sbb
dec
ret
inc
seta
stos
mov
ret
lea
cmp
pushf
mov
sbb
movsb
imul
dec
shrl
add
pop
gs
inc
mov
mov
add
addr16
insl
je
hlt
xchg
pusha
je
or
sub
cmpsb
or
ss
ss
jo
pop
lret
xor
mov
fildll
mov
xor
sbb
xchg
daa
sub
adc
xchg
mov
sbb
or
and
mov
add
jp
fcoms
mov
mov
adc
jge
movsb
addr16
mov
jmp
cmp
jle
mov
out
mov
cmp
scas
jo
jno
cmpsl
ja
pop
fs
stos
pusha
and
insb
adc
mov
sar
push
shr
push
push
insb
dec
lods
or
or
inc
cmp
adc
adc
insb
mov
loope
jne
push
push
xchg
sub
inc
sbb
cmpb
mov
mov
push
xrelease
imul
dec
add
cmp
call
enter
cmpb
jne
xor
cmpsb
adc
stos
mov
lea
hlt
sub
and
jae
pusha
cld
xlat
add
jo
inc
pop
adc
lods
push
adc
fwait
dec
loope
popa
roll
sub
mov
cmp
inc
mov
rcll
mov
adc
ss
dec
dec
sub
push
cltd
je
sbbl
add
jo
fcoms
push
push
add
fidivrl
jno
xor
pop
mov
jnp
or
sbb
push
lock
and
mov
or
or
and
jnp
fmul
lea
or
or
and
push
inc
les
cltd
push
popf
call
sbb
shll
clc
repnz
loop
mov
sahf
add
mov
xchg
add
jmp
in
mov
test
pop
inc
into
adcb
sub
rorb
mov
add
inc
jmp
movsb
mov
rclb
jmp
dec
out
mov
add
repnz
sar
or
imul
std
push
sub
add
sub
mov
push
sub
adcb
mov
sbb
or
decl
inc
fcomps
inc
sbb
in
jle
cmp
cmpb
sub
std
or
push
cltd
cmpb
nop
mov
inc
mov
dec
test
xor
add
xor
lcall
addl
add
jle
aam
mov
add
sbb
jl
dec
adc
cltd
push
jge
jle
sub
cmc
hlt
loope
lret
in
jg
jmp
add
es
aas
jmp
pop
int
out
adc
fldenv
sbb
addl
outsb
push
xchg
xchg
movsl
pushf
cmp
les
std
out
mov
mov
mov
pop
sbb
and
cmp
xlat
inc
movsb
adc
mov
dec
jne
rorb
xchg
mov
mov
testl
xor
lcall
out
lcall
dec
mov
mov
es
xor
mov
pop
mov
or
or
adc
mov
arpl
stc
pop
popa
xchg
addr16
adc
int3
int3
sti
or
mov
adc
xchg
negb
les
pop
aad
or
lods
cld
add
cmpsl
or
movsb
add
aas
push
xor
mov
sbb
inc
scas
in
pop
notb
fwait
cmp
test
push
es
je
add
and
clc
adc
pop
or
test
cs
idiv
add
fmuls
shrb
and
pop
movsl
and
mov
jb
into
mov
add
pop
add
add
and
rclb
cmp
pusha
lods
dec
test
cmp
sahf
les
lock
mov
pusha
add
mov
inc
cmp
arpl
xchg
ljmp
cmp
es
addl
fsub
push
rolb
or
mov
ljmp
and
out
pop
call
lahf
xchg
test
jp
add
sbb
mov
ljmp
cld
push
cmpl
dec
or
adc
adc
outsb
mov
add
out
loopne
push
loopne
loopne
mov
dec
loopne
xchg
aad
xor
ljmp
imul
or
xchg
xchg
inc
mov
cwtl
mov
jl
add
pop
or
and
rol
rolb
pop
mov
test
dec
jmp
clc
pop
inc
mov
mov
jb
mov
ret
push
inc
inc
push
cld
add
sbb
data16
xor
call
dec
insb
add
add
jmp
push
cmc
pop
and
mov
ret
mov
mov
pop
hlt
cmp
xor
push
mov
clc
pop
push
das
push
ret
test
xchg
lock
mov
or
pop
push
xor
sbb
ss
add
dec
mov
lahf
jge
cmp
sub
lea
into
rorb
mov
sar
jge
fstps
adc
mov
sbb
je
jne
clc
pusha
push
add
in
xchg
push
pop
mov
pusha
sub
sarb
push
add
pop
adc
js
cmpsb
rcl
lock
inc
xor
cmp
lods
sti
inc
mov
sbb
inc
and
out
jb
rcrb
jnp
shl
test
std
and
mov
xlat
xlat
push
xchg
imul
jo
pop
leave
inc
sub
mov
aam
mov
shrl
add
icebp
add
popa
sbb
icebp
pop
or
sub
lahf
inc
push
fpatan
mov
inc
push
loopne
cmp
sahf
pop
push
ret
xchg
call
ret
in
nop
jmp
xchg
xchg
adc
mov
dec
sub
lock
push
imul
ret
push
test
and
lahf
notb
mov
sub
add
pusha
mov
xor
push
mov
sbb
popf
icebp
xchg
cmc
dec
mov
test
lock
push
or
dec
push
arpl
stos
subl
inc
mov
xor
xchg
and
outsl
inc
inc
or
out
pop
jmp
pop
add
xor
aas
sbb
lcall
sarl
mov
xchg
pop
sub
push
cld
mov
adc
dec
in
sti
sbbb
ss
decb
xchg
and
dec
sub
inc
mov
mov
mov
jg
in
test
mov
into
and
leave
addb
nop
dec
add
or
or
subps
push
andb
adc
and
rcrb
sbb
pop
in
or
popf
jmp
mov
addb
lock
sub
subb
jae
mov
loop
mov
lret
test
push
mov
sbb
pop
aam
pushf
xor
jg
add
add
add
add
add
mov
pop
fxam
mov
test
cmc
xor
push
jmp
mov
pop
jp
and
dec
ret
xor
pushf
rol
lcall
cmpl
jne
push
fdecstp
mov
cmp
iret
das
nop
outsb
sbb
or
test
xchg
push
imul
les
into
lcall
shlb
mov
jne
adc
push
cmpsl
sub
je
jb
pop
sub
or
mov
enter
test
fiadds
popf
fwait
out
ja
cmp
jbe
cli
pop
adc
or
addr16
pop
orl
lods
sub
test
mov
cmovo
scas
sahf
pop
shl
jmp
adcl
lahf
pop
mov
jns
and
fistpll
out
dec
pop
shrl
xor
and
in
push
push
adc
mov
push
sub
pop
add
fdivs
mov
xor
sub
inc
adc
fs
cltd
leave
cltd
imulb
and
hlt
adc
mov
push
jns
xchg
push
inc
shl
xchg
loop
fistpll
insb
jne
jbe
jne
jbe
or
pop
and
mov
mov
shrb
cmp
mov
xchg
xor
jg
pushf
pushf
je
jb
inc
cmp
es
push
add
jb
jmp
pop
leave
dec
rorl
mov
xor
and
int
imul
insl
pop
mov
and
and
cmp
lret
movsl
and
and
sahf
test
lods
push
das
push
mov
xor
call
push
mov
adcb
dec
ud1
cltd
jg
fsubs
sbb
push
daa
iret
fidivrs
in
test
insl
and
mov
ja
call
inc
inc
push
mov
push
leave
cmpsb
fildl
cli
mov
mov
mov
repnz
inc
mov
shrb
lret
ja
dec
sahf
lret
call
and
xchg
mov
cltd
add
or
inc
adc
popf
cmpsl
shll
lods
pop
ja
gs
addr16
mov
lahf
inc
sub
lods
lret
xchg
sbb
das
mov
inc
jb
faddl
lods
and
enter
lods
mov
dec
fmuls
loopne
inc
and
shlb
enter
sub
fcompl
aam
in
or
mov
fdivrl
push
enter
mov
fdivs
outsb
lods
inc
and
adc
aam
sti
es
in
jne
in
push
inc
dec
bound
xchg
lods
xchg
jbe
jne
pop
mov
lods
dec
call
addl
jp
pushf
mov
or
inc
xor
add
fistps
pop
dec
in
icebp
scas
inc
add
lods
push
and
cmp
sbb
adc
add
inc
cmp
jbe
jbe
fisttpl
and
sub
xchg
aam
mov
ror
dec
lea
mov
aas
clc
xchg
ret
xlat
gs
add
fwait
repnz
push
mov
mov
jne
mov
pop
sti
push
and
adc
mul
das
mov
or
ret
jle
or
or
test
js
dec
add
jp
enter
xor
int3
jp
aad
cmovno
jmp
mov
and
lods
pop
add
dec
dec
xchg
ss
scas
movsb
add
jbe
cmp
jne
or
or
je
cs
out
ljmp
rcrb
xchg
or
push
nop
sbb
sarl
add
xchg
sbb
jbe
out
add
add
mov
mov
inc
clc
pop
add
jmp
sub
xor
or
and
js
push
or
or
adc
call
outsl
xor
inc
push
shr
sbb
and
or
sbb
mov
fsubl
aam
or
inc
pop
xchg
or
adc
ja
test
sub
mov
mov
inc
out
pop
inc
push
add
dec
popa
sahf
or
out
inc
ret
add
mov
mov
andb
test
jmp
out
cli
cmp
xchg
and
adc
add
movzbl
add
and
pop
mov
push
mov
andb
pop
mov
dec
bound
xor
mov
jbe
loopne
ficoms
push
pop
rclb
ljmp
ucomiss
sub
push
push
mov
inc
cld
mov
dec
and
int
decl
dec
push
sbb
lods
jmp
adc
and
dec
nop
mov
adc
mov
lahf
aam
lret
int3
leave
sub
mov
or
rorb
sbb
mov
fwait
les
or
inc
jmp
jmp
cmpsl
roll
jb
push
jo
push
pop
pop
clc
mov
in
jo
jg
xor
mov
push
lret
xchg
jnp
mov
mov
cltd
inc
mov
xor
outsl
repnz
push
or
sbb
jno
loopne
movl
push
subb
jmp
mov
shll
cltd
or
cmp
jne
movl
inc
or
in
outsb
mov
adc
sahf
adc
sti
jmp
sub
or
cmp
les
add
dec
rolb
mov
cmp
inc
push
fisubrl
notb
cmp
test
sbb
push
mov
mov
lock
incl
cmp
into
jb
or
movsl
cltd
je
jmp
loop
call
mov
push
and
pop
popf
xchg
enter
js
aaa
les
rolb
cmpsl
mov
jae
cmp
jbe
and
shl
jne
jmp
and
inc
push
leave
inc
imul
imul
and
mov
aaa
jmp
outsb
setge
enter
sbb
fs
test
cmp
or
lcall
push
ljmp
fadd
shlb
inc
in
jge
inc
cmp
xorb
ja
movsl
adc
sti
dec
sbb
enter
or
out
std
xchg
xchg
out
dec
jne
mov
rolb
xchg
stos
lods
sbb
sbb
shll
mov
mov
xor
push
mov
inc
dec
jne
cld
cmp
stos
mov
jmp
adcb
lret
jnp
cmpsl
cmp
adc
push
enter
jle
push
adc
jo
addl
mov
adc
mov
push
pop
xor
cmp
sbb
mov
imul
or
inc
push
cmpsb
pushf
sub
xor
out
pop
add
mov
cmp
adc
insl
test
push
mov
fidivrl
and
add
inc
inc
mov
lods
add
sbb
das
mov
andb
les
or
pop
popfw
push
cmp
clc
add
andl
inc
cmp
inc
jmp
xor
or
mov
fwait
xlat
add
cmp
out
jno
adc
jno
es
mov
jmp
mov
int3
sbb
cmp
sub
add
mov
or
fsubs
std
and
mov
ljmp
xchg
ret
xor
xor
faddp
sub
cmp
sbb
mov
lea
push
test
lock
mov
enter
jnp
ret
and
adc
subb
add
movsl
sub
cmpsl
rolb
pusha
inc
add
pop
test
push
scas
rclb
repnz
ret
je
sarb
andl
and
pop
sbb
adc
dec
mov
mov
adc
int3
inc
mov
das
inc
mov
xor
sbb
xor
jno
inc
inc
sbb
sub
fwait
xchg
add
sub
and
add
sbbl
mov
cmp
cmp
add
mov
aam
inc
mov
lea
jg
pop
mov
or
pop
cld
js
bound
mov
aad
adc
mov
adc
dec
jge
cmp
xor
and
bound
fisubrs
push
mov
mov
mov
addr16
stc
test
sbb
push
sbb
mov
sbb
sbbl
and
js
add
push
sbb
jo
adc
add
dec
jecxz
add
leave
mov
pop
add
lods
fsubrp
mov
rorl
ret
or
or
cwtl
testb
test
sub
adc
and
pushf
arpl
in
xorl
xchg
push
push
push
pusha
out
cmp
mov
fdivrl
push
mov
cs
push
aas
mov
mov
or
inc
movl
inc
add
aad
mov
inc
or
add
jo
sbb
jg
sahf
mov
pushf
mov
push
mov
shlb
push
bound
repnz
mov
imul
dec
sbb
orb
faddp
call
mov
pop
dec
pop
sbb
cwtl
ss
cmpsl
mov
sub
js
imul
mov
pop
push
mov
aad
push
mov
and
sbb
lock
dec
sti
cs
pop
sti
iret
push
adc
jns
xor
jns
mov
or
sbb
pop
jb
cmp
js
pop
jb
dec
pop
cmp
dec
and
jle
add
sbb
jmp
cwtl
pushf
mov
push
dec
mov
jmp
jbe
and
popf
or
sbbl
jp
add
xchg
mov
mov
insl
jg
mov
push
xorl
mov
sbb
enter
out
mov
in
mov
push
ljmp
and
push
xchg
xchg
lret
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
push
and
fsubr
hlt
cmp
add
fiadds
and
add
cmpsb
mov
js
or
stos
cmp
xchg
mov
xor
sub
fistpl
js
push
xor
cmc
jge
inc
pop
xchg
arpl
lds
jne
push
rcll
cmp
add
and
xchg
sbb
or
mov
xchg
and
pop
sub
and
adc
jnp
inc
fisttps
scas
add
mov
punpcklbw
js
cmp
inc
adc
mov
adc
pop
pop
hlt
mov
pop
popl
mov
push
mov
inc
or
mov
rcr
lsl
sbb
or
and
in
sub
bswap
pop
pxor
push
push
sarb
jg
loop
fists
pop
je
mov
inc
adc
and
inc
push
sbb
loope
pusha
jo
mov
dec
jne
rcr
sub
int3
je
andb
mov
jg
adc
divb
xor
cmp
dec
push
sbb
add
jne
ss
mov
inc
inc
cli
pop
pop
ret
sub
sub
push
mov
bound
push
inc
dec
cli
shr
add
outsl
or
sbb
push
insl
out
pop
loop
test
ret
decb
neg
loop
dec
sub
or
pop
testb
dec
popf
adc
adc
or
xor
inc
dec
subb
mov
mov
push
or
shll
enter
pop
and
push
fistpl
or
push
jo
icebp
orb
mov
popl
mov
push
test
mov
pop
cli
sbb
nop
mov
lock
add
sub
jmp
mov
mov
fmull
enter
xorl
add
or
sbb
faddl
add
inc
jb
inc
adc
mov
mov
push
fldl
or
add
rcl
inc
repnz
adc
sub
mov
mov
in
jno
ja
imul
xchg
cmpsb
ss
jl
popa
xchg
pop
inc
fs
jns
sbb
mov
and
pop
stc
sbb
dec
pop
pusha
mov
add
and
sbb
push
jns
outsl
adc
adc
test
add
push
push
sahf
mov
sarl
fld
dec
sbb
cld
and
jl
rcrl
stc
cmpsl
subl
int3
test
adcb
fwait
xchg
jmp
decl
iret
hlt
jmp
mov
mov
jne
pop
pop
adc
aam
lahf
in
pop
js
and
push
mov
push
pop
or
lock
push
xorb
or
cmp
add
loop
nop
sbb
out
fisubrs
push
cmp
ror
pop
repz
idivl
test
outsb
push
ja
adc
cmpsb
jge
mov
and
movsb
out
aam
mov
and
inc
push
and
mov
ss
xor
js
add
push
sahf
sub
arpl
js
fildl
mov
sti
adc
inc
inc
sbb
push
cltd
inc
sbb
inc
faddl
out
insb
adc
popa
push
jmp
lea
adc
clc
in
arpl
inc
ficompl
jmp
xchg
mov
lahf
clc
and
ret
and
push
push
test
jmp
adc
inc
mov
sub
or
mov
adc
pusha
inc
sbb
mov
test
mov
xor
data16
sub
je
mov
in
rcrb
jo
pop
xor
jne
lea
mov
mov
jle
add
les
mov
push
mov
shll
fucomip
stos
rclb
iret
bound
mov
iret
add
xor
pop
or
jne
sub
xchg
popf
fstpt
fadds
mov
inc
mov
jb
enter
pop
jb
mov
lods
std
leave
faddl
jne
movsl
pop
mov
mov
test
lods
and
and
mov
add
hlt
and
push
shr
lea
cmpsb
outsb
jno
mov
mov
idivb
mov
or
out
or
mov
xchg
out
enter
xor
or
in
mov
js
dec
and
sarb
mov
lods
pop
lret
or
repnz
mov
or
sar
jo
lock
pushf
mov
jne
int3
pop
cmpsl
pop
or
add
xlat
dec
pop
sbbl
subb
jno
add
mov
inc
loopne
pop
cld
fnstsw
add
add
sub
sub
add
loope
mov
pusha
push
add
call
xchg
shl
call
pop
dec
or
inc
xor
orb
mov
cmp
jne
inc
sub
pop
aad
pusha
mov
outsb
lahf
mov
push
cmpb
movl
testl
pop
pop
jnp
pop
inc
push
fimull
mov
imul
cmpsb
shl
jne
js
ds
mov
andl
orb
add
ret
gs
js
mov
outsl
stc
xor
lea
lret
pop
test
scas
sub
arpl
push
clc
mov
jns
pop
mov
or
out
ret
push
jle
push
or
movb
test
push
inc
lea
xor
in
pushf
sub
ret
inc
dec
dec
lock
int
push
dec
lds
sub
inc
icebp
mov
cwtl
add
pop
cmp
jne
xor
shll
stc
mov
jecxz
mov
add
jle
push
push
cmp
or
xor
mov
out
mov
rcl
jns
daa
mov
stos
pop
and
add
xor
mov
cld
roll
add
push
push
push
lahf
mov
push
arpl
enter
mov
mov
dec
aaa
dec
nop
jno
or
mov
or
mov
inc
out
add
imull
and
push
xlat
inc
loopne
mov
adc
mov
mov
jbe
fisubrs
into
nop
cmp
mov
lcall
std
and
or
push
mov
into
adc
cmp
jnp
add
mov
xlat
push
xor
addb
xor
in
or
push
add
push
mov
arpl
jp
in
mov
dec
mov
mov
mov
add
add
aaa
movsl
pop
pop
sub
pop
mov
or
jl
fwait
repnz
stos
dec
push
mov
mov
pushl
fistpll
bound
roll
add
imul
es
mov
inc
fildl
cmpsl
add
cmp
add
clc
push
les
sub
add
mov
xchg
mov
daa
add
daa
push
mov
sbb
add
sti
xor
aad
aas
shlb
push
ret
movsl
jb
hlt
sbb
mov
adc
mov
xor
outsb
adc
adc
ss
lock
repz
and
xchg
mov
jp
paddw
xchg
adc
adc
fwait
cmovne
or
add
sub
pop
js
bound
push
jns
xchg
aas
dec
add
cs
rorb
lret
xor
inc
jl
jmp
dec
xchg
add
jns
cmc
roll
sbb
push
pop
lcall
cltd
inc
pop
imul
sbb
or
inc
mov
jg
int3
cmp
jnp
sub
test
jne
pop
mov
test
cmpsl
rcrb
fisttps
add
dec
shrb
call
lods
sbb
jle
mov
adc
mov
mov
dec
lahf
jl
or
fstpt
sbb
mov
je
in
push
push
push
push
mov
xor
inc
or
mov
lcall
sub
enter
dec
aas
inc
jp
jmp
int
fs
lret
inc
sbbl
dec
add
adc
scas
add
xchg
mov
adc
pop
mov
sub
or
mov
mov
in
adc
lea
push
mov
push
dec
pop
sub
das
push
sub
roll
fmul
push
or
push
jl
repz
pop
cs
testb
ror
fstpt
inc
adc
adc
push
lcall
push
clc
nop
mov
jecxz
or
out
in
push
les
pop
dec
sub
int
cmp
out
out
popa
mov
xor
loop
or
movsl
mov
inc
xor
mov
push
mov
outsb
sub
mov
aaa
lods
lods
pop
fsubs
xor
lods
push
cmpsl
or
inc
ret
and
shrb
out
push
pop
pop
aam
or
fxch
stos
imul
xor
int3
mov
xor
xlat
popa
push
add
stos
daa
ret
or
jbe
aaa
sahf
or
jmp
xor
add
add
xchg
arpl
sub
test
movsl
mov
int3
cmp
xlat
scas
mov
xlat
int
mov
mov
xlat
jge
rorl
xlat
xchg
adc
and
sub
xlat
sbb
jmp
in
sbbl
sbb
int
inc
nop
loope
getsec
add
mov
cltd
inc
cmpsb
test
inc
xchg
adc
ljmp
sbbl
testl
and
mov
xor
fistpl
cltd
movsb
repnz
int3
es
pushf
add
sub
xchg
or
fcmovnbe
pop
pop
push
sbb
sahf
pushf
push
cmp
incb
fisttpll
mov
dec
and
cmp
out
add
mov
mov
shll
xor
lods
mov
jb
sbb
mov
mov
mov
int
xchg
mov
inc
je
cmpsl
and
in
cmp
sahf
add
push
and
and
dec
xorb
xchg
leave
jne
iret
lea
arpl
push
jb
leave
iret
movsb
test
push
leave
inc
test
sbb
xchg
pop
outsb
ret
lret
loope
rorb
sbb
hlt
adc
out
pop
dec
imul
add
push
jns
and
sub
jae
ss
pop
sub
or
sbb
push
out
daa
loope
faddl
pusha
popa
test
je
or
sbb
jnp
js
loopne
add
fadd
xor
and
adc
push
inc
or
pop
pop
push
shlb
aaa
or
mov
or
movb
in
mov
push
sbb
icebp
push
scas
sti
or
or
sbb
lahf
add
sti
mov
push
jmp
jg
mov
add
push
mov
icebp
mov
sub
dec
xlat
xor
dec
add
dec
cmc
dec
push
divl
dec
movsb
or
add
movsl
xchg
mulb
testb
sar
adc
inc
cltd
cmp
and
inc
ret
cld
aaa
dec
dec
mov
push
cmpsl
je
mov
sbb
shlb
adc
inc
sbb
sbb
sub
push
mov
add
jmp
pushf
add
or
repz
pop
xchg
ja
or
shr
je
cld
fwait
loope
jge
std
outsl
push
push
dec
adc
push
and
out
lcall
adc
lahf
out
outsl
inc
or
jbe
jle
iret
lahf
out
dec
outsl
ja
jo
mov
push
mov
adc
dec
jne
pop
dec
in
jnp
pusha
ficoms
pop
ffreep
and
sar
lea
lea
inc
out
mov
mov
fidivl
add
dec
cli
add
sahf
xor
jp
jle
lahf
ljmp
ret
mov
ljmp
shrb
lret
ret
mov
shr
push
push
ret
fadds
icebp
mov
sbb
sbb
in
pop
inc
loope
or
jae
jns
shll
jmp
jmp
or
addr16
es
bound
or
sarl
pop
jmp
ds
inc
mov
push
bts
jmp
mov
inc
xor
sbb
cmpsb
stc
add
xor
sbb
and
call
or
inc
jne
cmpl
in
incl
cmp
je
cmp
and
shll
ret
notl
or
ljmp
loope
inc
cmpsl
test
dec
pop
push
lock
outsl
fadd
push
cmp
lret
mov
and
add
test
mov
test
mov
add
pop
daa
cld
and
aas
adc
mov
pusha
sbbb
sbb
repnz
pop
or
shrl
pop
andl
or
stc
mov
mov
mov
adc
inc
fs
popa
aas
jle
nop
pop
subl
xor
cmp
and
leave
sub
mov
cmp
or
pop
pop
mov
and
mov
add
sbb
orb
pop
loop
mov
rolb
adc
mov
scas
sub
lock
test
rolb
stos
xchg
jmp
inc
or
sbb
push
sbb
pop
pop
ljmp
cmp
mov
xchg
fiaddl
out
mov
add
fsubr
inc
js
imul
lods
gs
jmp
outsl
xchg
mov
sub
push
jbe
add
gs
sbb
mov
lock
out
jne
mov
add
incl
inc
and
sbb
mov
pop
jne
out
add
out
dec
adc
add
xor
add
std
adc
popa
mov
out
cs
adc
repnz
add
xor
push
mov
push
xor
push
xchg
sub
and
jp
imul
mov
xchg
je
or
jne
dec
xchg
pop
sbbb
xor
call
dec
add
sub
mov
aas
movsl
adc
fildl
inc
cs
je
adcl
jne
jnp
mov
and
and
sbbl
push
ljmp
outsb
or
xchg
jne
push
insl
and
cld
add
sbb
subl
push
or
push
push
popa
idivb
test
es
push
aas
adc
push
cli
push
ss
and
ja
inc
std
jb
sbb
xor
sub
xor
jle
idivb
mov
lods
or
clc
sub
or
pop
clc
insb
pusha
arpl
int3
mov
sub
push
je
jb
xor
and
sar
cmp
lea
add
add
and
mov
sub
push
daa
orl
mov
in
rcrb
shlb
xor
sub
mov
out
shlb
into
js
push
je
lods
add
lock
sub
lea
adc
fldenv
or
push
cmp
or
or
out
dec
mov
and
mov
ljmp
push
pop
push
int
sarl
loope
lea
daa
mov
or
dec
jg
out
mov
incl
or
movb
xor
out
xchg
pop
dec
inc
cmpsl
sbb
cmpl
push
push
mov
out
push
pop
call
imul
add
mov
push
out
jl
fimuls
or
fnstsw
sbb
movsb
or
aas
ss
push
or
add
arpl
scas
add
faddl
add
cmp
mov
xor
aas
cmp
or
rolb
roll
cmp
jb
scas
daa
les
out
nop
cmp
pminsw
jle
insb
stos
pop
add
jp
orb
push
or
fmuls
mov
or
pop
ret
add
addr16
add
push
pop
nop
movsb
inc
out
mov
cmp
or
add
add
sbb
adcb
dec
jmp
inc
jne
mov
xor
out
push
testl
sub
mov
dec
push
pop
jmp
lea
lods
inc
push
xchg
cmc
push
jnp
lock
ds
aaa
xor
mov
mov
jne
sub
ret
aam
adc
daa
dec
in
insb
lock
push
mov
movl
xchg
xchg
add
jmp
push
pop
aam
mov
test
pop
js
mov
push
outsb
addb
inc
aam
xchg
dec
and
cwtl
cwtl
jge
or
maxps
dec
out
mov
stos
inc
adc
test
not
mov
adc
jmp
push
stc
push
sub
xor
inc
and
mov
mov
dec
lock
repnz
adc
jne
xchg
and
mull
dec
mov
pop
mov
out
repz
mov
or
mov
add
push
lret
mov
pusha
dec
imul
mov
jae
dec
aam
dec
jb
ret
mov
sbb
push
sbb
lea
pop
pop
push
sub
push
lock
nop
popa
cmp
jecxz
or
sub
xchg
int
dec
jbe
pop
mov
add
or
xchg
fistl
imul
sub
or
xor
arpl
in
xchg
xchg
das
push
push
jb
pop
iret
and
sbb
addr16
lret
push
add
jnp
incb
insb
fs
enter
loopne
daa
jg
cmpsb
push
cmp
xor
xor
add
into
jnp
xor
or
or
fwait
gs
xor
push
xor
idivb
inc
adc
stos
in
cs
cmp
inc
dec
ds
inc
ja
sub
dec
inc
js
dec
push
sahf
lret
push
push
outsl
adc
and
in
aaa
popa
inc
adc
fnclex
sub
dec
mov
in
adc
movsb
dec
sbb
inc
popa
xchg
ja
pop
sub
adc
xchg
adc
ret
cmpl
shlb
jne
mov
pop
add
xchg
jbe
leave
and
das
inc
mov
push
nop
rcll
mov
adcb
push
shr
jmp
loopne
push
es
movb
andb
push
clc
stc
aad
or
or
xchg
push
pop
lea
fisttpll
lock
xchg
sbb
sbb
mov
lock
and
pushf
add
aad
mov
insb
mov
adc
ja
jo
loope
sarl
pop
out
pusha
bswap
dec
cmp
cli
sbb
adc
not
sbb
mov
cmp
jge
inc
push
sbb
clc
outsb
scas
cmp
jne
test
js
addr16
int
arpl
sub
add
jo
sbb
insb
data16
push
cmp
out
inc
inc
scas
adc
mov
add
jo
inc
adc
lods
sbb
in
out
jecxz
out
inc
fcmovnbe
loopne
xor
lret
sahf
mov
mov
test
dec
test
andb
fwait
loopne
sub
sbb
push
or
mov
inc
jns
clc
xchg
mov
dec
ja
sub
sub
sbb
pop
sub
adc
or
mov
adc
les
ds
sahf
clc
lock
loop
pusha
mov
insb
pop
lods
and
or
push
dec
rcll
dec
mov
xor
loopne
andb
adc
pop
lea
adc
test
or
xchg
add
aad
mov
sbb
addr16
je
mov
sbb
add
fdivs
or
enter
add
lock
je
jb
mov
pop
xchg
fadds
ret
sub
cmc
add
jmp
neg
jle
rcl
add
out
sub
or
fcoms
jnp
out
fisttps
push
lock
mull
lsl
jmp
push
loopne
ficomps
push
inc
shr
rcr
shr
rcr
or
sub
jno
mov
repz
dec
fs
outsb
lahf
jo
out
jb
cmp
or
cmp
or
cmp
add
sbb
adc
push
push
sub
or
ficoml
aam
test
fxch
pop
ret
adc
xchg
stc
je
sbb
inc
rdmsr
sbb
pcmpeqd
insb
add
and
inc
jmp
das
xor
in
sub
sbb
repz
mov
cwtl
pavgw
into
rolb
xchg
or
inc
jp
mov
lock
jb
sarl
sarb
pop
mov
rcrl
xlat
sahf
stos
in
loope
cmp
jecxz
scas
sub
add
and
and
inc
pop
les
les
inc
imul
xlat
mov
mov
xchg
jne
add
mov
push
jae
or
js
inc
clc
into
jmp
insl
loopne
push
push
outsl
xor
sbb
cmp
xchg
shlb
clc
loop
and
test
jmp
dec
and
push
pop
ret
mov
nop
lret
stos
mov
inc
and
add
xor
jmp
pop
push
dec
inc
aaa
sub
push
pop
lret
js
xor
jo
add
cmp
sub
sub
inc
adc
out
ja
mov
and
jmp
push
mov
sbb
mov
pop
xor
pop
inc
cmp
mov
add
pusha
push
and
cmp
lock
fiaddl
sbb
roll
dec
inc
decb
dec
adc
mov
loope
shrl
fs
adc
xchg
push
or
add
add
rcr
and
jo
ret
push
ficoms
enter
sub
or
add
add
rolb
test
pop
cs
dec
fcoml
lods
fadds
lock
mov
mov
sub
loop
sub
mov
movsb
add
sar
imul
jno
inc
push
movb
cwtl
jne
add
je
mov
push
push
mov
les
pop
lcall
cmp
push
loop
mov
cmp
xor
dec
out
inc
in
add
stos
mov
xorl
or
or
cmp
or
add
push
imul
inc
cmp
xchg
es
adc
add
sub
sbb
sbb
adc
cmp
sub
push
fisttpl
sbb
add
push
sub
push
push
or
pandn
rorb
or
pop
and
adc
outsl
push
dec
in
sbb
or
fdivrl
adc
sbb
push
rclb
arpl
imul
dec
movsl
fsubs
xor
int
add
inc
inc
fidivl
dec
xor
push
jnp
mov
pop
roll
movb
sub
out
lock
out
cmpb
jecxz
aam
push
sub
outsl
mov
cmp
jg
inc
jmp
mov
ds
or
lds
jbe
in
and
cmp
imul
fisttpl
jge
aas
sbb
enter
mov
in
sarb
fmuls
sbb
clc
xlat
sub
dec
je
mov
mov
inc
pop
fadds
xor
icebp
xor
shll
inc
jne
push
xor
test
jne
push
adc
cld
and
add
jo
out
or
pop
mov
push
adc
outsl
dec
js
stc
gs
cmp
jge
inc
mov
xor
jae
add
jae
addr16
push
and
mov
popf
and
sbb
scas
add
sub
add
and
stc
xor
aas
sarl
pop
inc
rclb
mov
dec
psubd
push
sbb
pushf
xor
and
or
sti
test
test
jl
js
mov
xchg
ljmp
lcall
loop
push
push
gs
and
ja
mov
sub
adc
dec
mov
test
cltd
add
push
dec
or
pop
lock
push
pop
enter
insb
orl
add
arpl
add
addl
cmp
or
sub
shlb
xor
insb
xchg
lock
ja
pusha
imul
sub
and
lods
mov
pop
imul
inc
mov
test
mov
or
adc
adc
adcl
cmp
mov
mov
in
clc
pop
or
sbb
in
mov
je
xchg
cli
adc
mov
pop
subb
xor
lea
or
out
andl
cmp
out
cmp
jmp
popl
inc
xor
ljmp
out
mov
pop
xor
loopne
push
js
xor
xadd
push
mov
jl
adc
sahf
lock
inc
mov
div
xchg
and
pushl
add
jno
pop
sub
mov
loop
mov
test
pop
push
push
xor
test
movsb
pop
inc
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
push
push
inc
sbb
out
pusha
ss
insb
enter
push
rcll
push
or
adc
push
les
xor
aad
jp
shld
popf
sub
or
mov
stc
dec
xchg
cmp
cmp
jmp
mov
jne
arpl
pop
mov
add
sbb
aas
cmp
mov
cmpl
sbb
dec
mov
sub
push
pop
out
xchg
dec
out
andl
xlat
sub
pop
pop
pop
aad
or
xor
addb
test
or
cmp
push
sub
int
loopne
push
les
jae
push
jmp
clc
movd
adc
cmpl
movups
lods
cmpsb
jl
femms
push
or
or
into
add
xor
sahf
push
popf
mov
gs
adc
push
sbb
lods
movl
mov
call
shrb
xor
inc
cmp
ret
xchg
adc
inc
xchg
adc
push
push
lea
or
dec
push
push
pop
and
jle
sarl
lret
inc
das
adc
push
test
sbb
xchg
or
aam
or
sbb
sar
insb
xor
xor
inc
jmp
adc
popf
inc
and
leave
lcall
mov
pusha
bound
jo
add
sub
jl
mov
adcl
mov
mov
inc
push
push
nop
imul
mov
test
imul
and
daa
test
jecxz
dec
cmp
mov
mov
cmp
push
push
or
push
mov
cs
mov
hlt
add
sbb
dec
popa
or
inc
jne
sub
adc
pop
ret
orb
dec
shlb
ss
cmp
mov
push
push
hlt
add
test
loop
je
push
inc
stos
pop
and
sbb
sub
mov
adc
adc
jmp
mov
stos
popf
or
xchg
scas
mov
mov
adc
mov
das
cwtl
cmp
jle
sub
cmp
xor
add
decl
push
jmp
dec
push
in
and
sbb
jbe
pushf
add
jl
ret
loopne
out
negl
lock
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
cmp
add
movsb
fstpt
mov
movsb
jne
enter
out
dec
jae
imul
sbb
sub
push
jmp
and
scas
shr
outsb
mov
dec
decb
lods
leave
pop
push
sub
and
cmp
dec
cwtl
in
pop
aaa
es
pop
cs
and
or
pop
stc
sub
cmp
mov
push
movsl
jbe
sub
mov
push
inc
stos
loopne
je
mov
mov
jge
in
mov
cmpsl
mov
pop
sub
inc
inc
cmp
testl
testl
sbb
inc
jmp
sahf
dec
dec
or
cmp
xor
pop
es
repnz
and
or
insb
decl
stc
push
adc
jg
cmc
jecxz
ds
inc
jmp
cmp
and
push
pop
pop
xor
push
div
dec
mov
dec
test
jno
mov
mov
xchg
cmp
ljmp
dec
adc
adc
clc
mov
sbb
xlat
test
cmp
out
fwait
or
mov
add
lods
pop
call
jnp
jle
inc
ret
sub
xor
jne
add
ret
adc
inc
pop
adc
jmp
call
add
mov
je
lock
pushf
imul
mov
mov
push
sarb
add
test
lea
enter
les
lods
mov
out
xchg
inc
movsl
cmpsb
or
jne
mov
addr16
out
mov
and
xchg
jo
inc
imul
jae
lret
sti
mov
push
or
mov
sub
ja
mov
out
inc
jg
or
inc
testl
out
jne
out
or
mov
ljmp
pop
cmp
inc
add
push
scas
addr16
mov
test
add
jbe
pop
push
or
clc
cwtl
xchg
test
push
pushf
fstpt
inc
add
test
mov
loope
in
push
lock
cld
sub
add
dec
inc
imul
add
mov
ja
shlb
sub
in
incl
cmpl
insl
mov
pop
xchg
sbb
or
mov
test
jg
add
sbb
lahf
nop
mov
sub
or
shll
shr
aam
or
shr
sbb
test
or
push
sahf
pop
idivl
or
jg
or
and
mov
mov
movb
je
xchg
and
or
jl
mov
out
jg
insl
fadd
loopne
shr
or
mov
sahf
dec
mov
mov
outsb
mov
fistl
mov
mov
adc
andl
or
shrb
lock
js
xchg
jo
ficoml
pop
sbb
loopne
pop
ljmp
jmp
out
jmp
or
lods
mov
fldenv
and
lds
pushf
mov
mov
mov
loope
jl
dec
hlt
loopne,pn
int3
int3
jmp
xchg
or
cmp
mov
and
outsl
push
dec
into
jmp
lods
jne
imul
and
inc
int
sbb
mov
push
sbb
pop
adc
jne
push
lret
das
sub
test
sbb
repnz
sub
movups
and
hlt
jo
mov
mov
mov
inc
mov
inc
mov
mov
add
out
inc
fldl
inc
add
pop
ds
repz
movsb
std
call
out
pop
or
jo
sub
push
mov
or
add
testb
adc
sbb
mov
movsb
icebp
ss
push
push
idiv
add
xor
sbb
cmp
ficomps
cmp
mov
sbb
int
or
inc
int
pop
test
test
adc
push
cmp
pop
or
add
in
xor
push
mov
aas
jne
add
pop
stos
mov
adc
cld
dec
sbb
dec
sub
popa
in
ret
rolb
or
rcl
repz
jb
push
push
or
push
or
xchg
mov
in
pop
pop
imulb
es
lea
jno
and
mov
loopne
cld
in
or
lea
shlb
fwait
mov
in
jbe
imul
gs
push
push
call
pop
mov
add
insl
mov
inc
mov
mov
xor
mov
psubsb
sbb
xlat
jmp
sar
or
inc
ljmp
mov
pusha
stos
cmp
iret
jmp
sbb
faddl
dec
cs
xor
mov
dec
push
rcrl
adc
mov
loope
mov
add
and
lock
int
dec
xor
push
adcl
std
es
and
jmp
ret
scas
push
xchg
loopne
gs
decb
xor
dec
pop
xchg
mov
mov
push
inc
pop
push
add
in
loopne
cmovp
or
or
mull
sbb
enter
cmp
or
jne
inc
loope
push
lea
call
dec
cmp
leave
sar
mov
xor
aam
aas
or
testb
add
movsb
dec
adc
fstp
call
mov
subl
dec
nopl
xor
cmp
cltd
lods
loop
dec
push
xor
pop
ret
test
ret
insb
pusha
dec
outsl
or
ljmp
mov
and
cmp
pop
pusha
rorl
lcall
push
push
divl
mov
inc
xor
and
xchg
push
sub
cmpsl
mov
jp
and
inc
mov
andb
iret
mov
testl
mov
mov
sub
unpckhps
hlt
mov
inc
or
cmc
andl
push
fcmovb
lea
test
pop
xor
xlat
add
xor
jle
fsubs
in
push
or
sti
sbb
js,pt
inc
call
jmp
push
pop
cmp
lret
dec
inc
outsb
cmp
adc
hlt
in
inc
xor
or
inc
pusha
jns
cmp
pusha
enter
inc
mov
lea
rcll
add
je
dec
or
or
mov
pop
add
lea
mov
and
fstps
jl
mov
int
lods
pop
sbb
test
loopne
out
sbb
mov
inc
mov
out
add
fcoml
xchg
mov
rol
cs
enter
add
pxor
mov
repz
push
jmp
sub
mov
mov
pusha
and
mov
dec
je
rcl
or
sbb
add
fcompl
xor
loope
sbb
jb
fldcw
mov
inc
mov
sbb
inc
dec
xor
imul
mov
mov
shll
dec
std
xchg
lret
ss
loope
enter
xor
jae
subb
mov
cmp
jne
bts
adc
add
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
loopne
imul
cmp
ret
sub
sub
add
add
add
dec
dec
dec
int
andl
jbe
fs
jl
or
pop
jns
adc
fiadds
into
sub
adc
sbb
mov
pop
pushfw
std
aam
jle
add
test
sub
and
pushf
xchg
inc
and
popa
add
mov
push
mov
push
lea
or
inc
push
add
shlb
test
stos
in
and
mov
push
or
add
lods
mov
push
es
inc
xchg
adcl
in
mov
es
call
mov
add
jmp
pop
pop
mov
pop
mov
movl
stos
and
xchg
aas
push
jae
adc
movsb
mov
adc
ja
xchg
add
lcall
jne
adc
sub
pop
adc
mov
fimuls
shrl
cmp
cmp
je
xor
dec
inc
and
sbb
js
in
cmpsb
or
jmp
and
push
and
push
mov
push
loopne
fdivr
xchg
cmp
pop
adcl
push
mov
add
cmp
mov
ret
call
or
orl
sbb
dec
jecxz
add
xor
add
out
or
cli
adc
add
or
mov
adc
mov
xchg
or
pushw
ss
int3
add
mov
push
inc
mull
add
mov
bound
cltd
push
mov
inc
pop
mov
pop
pushf
push
xchg
and
out
pop
fcompl
pop
mov
loopne
mov
and
cmp
xchg
dec
jae
fstpt
add
inc
andb
loop
sub
test
lea
jmp
xor
rolb
sbb
fdivrs
mov
mov
mov
inc
mov
jmp
lahf
push
test
sub
cmp
jg
insb
pop
jl
jmp
addl
js
pop
fs
add
sbb
or
stos
popa
add
push
push
adc
push
jo
add
add
adc
xchg
aam
sub
mov
pop
adc
inc
or
mov
sub
jl
pop
adc
push
lds
leave
cwtl
pusha
cmp
jno
xlat
and
sub
dec
add
sbb
push
dec
test
lock
lret
xor
outsl
stos
popa
jge
mov
add
add
inc
xor
loopne
push
stos
adc
movsb
push
pop
pop
pop
icebp
fisttps
inc
adc
gs
cmp
push
pushf
imul
sub
mov
push
or
add
sarl
sub
push
bound
add
data16
pop
jmp
push
or
or
adc
idivb
pop
les
and
pop
mov
adc
adc
sbb
or
and
rcrl
jo
cmpsl
testl
jle
fwait
arpl
data16
push
mov
or
scas
cmpl
gs
or
or
or
cwtl
movsl
cwtl
data16
push
jne
push
aas
out
mov
pushl
leave
inc
push
or
enter
or
dec
arpl
inc
mov
xchg
jno
shlb
sub
jmp
push
std
js
ss
jne
push
push
clc
mov
dec
jnp
jne
pop
push
xchg
add
popa
pcmpeqw
loope
loopne
movsb
mov
or
rolb
pop
mov
in
arpl
jo
and
lea
mov
std
lods
pop
adc
lcall
movsl
stos
mov
mov
or
movsb
cmp
cmp
cmpb
or
outsb
outsl
mov
push
sub
imul
dec
or
fcoml
and
cmp
imul
js
mov
imul
outsb
movsl
fadd
or
cmpb
pop
sub
cmp
ror
or
jne
mov
clc
push
or
scas
rcll
or
or
push
xor
jbe
push
mov
or
outsb
dec
xchg
jbe
into
jmp
nop
or
or
xor
pop
cmpl
dec
je
jae
mov
push
mov
mov
mov
ret
or
and
or
loopne
mov
sbb
pop
lds
in
xchg
mov
cwtl
add
adc
sbb
pop
or
mov
loop
pusha
jne,pn
sbb
rol
inc
mov
xor
jo
adc
add
cmp
mov
mov
pop
popf
lcall
ja
jle
push
icebp
or
int3
cmp
pop
jmp
cwtl
les
test
dec
sub
test
aaa
sub
ljmp
cmp
add
orl
loope
jg
loopne
dec
adc
dec
adc
add
cmpl
cs
shlb
dec
sbb
cmpw
add
dec
bound
inc
loop
jno
push
push
sub
pop
push
out
mov
dec
mov
jb
sbb
sub
ljmp
adc
sbb
add
mov
test
lahf
push
push
push
movups
xor
add
or
add
xor
mov
dec
adc
in
mov
or
daa
push
push
ljmp
mov
add
inc
and
imul
cmpsl
mov
jmp
adcl
mov
stos
popa
jmp
test
shlb
ret
neg
push
add
lret
cmc
cmp
mov
clc
call
or
xor
add
push
push
xlat
gs
mov
push
cmpb
cmpsl
cli
rclb
in
movsb
mov
mov
mov
sbbl
mov
notl
push
and
gs
or
stos
inc
cmp
or
xor
sub
clc
or
sub
and
stos
cmpsl
push
fsubrs
mov
jno
push
mov
lock
imulb
or
mov
mov
inc
andb
mov
dec
mov
in
ja
mov
aaa
and
cmp
lahf
daa
pop
rcrb
xchg
cmp
mov
out
sbb
jo
addl
dec
jl
out
rcr
or
in
add
inc
cwtl
pop
popf
add
call
or
adc
xchg
ljmp
and
arpl
stos
or
rcrb
sbb
test
adc
inc
mov
cmp
inc
dec
pop
dec
or
xor
or
mov
and
push
push
addr16
mov
adc
enter
jns
daa
xor
jae
dec
in
and
mov
cmp
add
sub
add
fists
xchg
sbb
push
or
push
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
pop
add
cmp
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
idivb
and
sbb
cltd
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
and
mov
xchg
dec
enter
xor
sarb
leave
and
loopne
call
in
aam
and
dec
xor
clc
cld
add
cmp
add
add
add
shll
adc
leave
sbb
and
xor
and
sub
xor
and
xor
cmp
leave
adc
inc
gs
dec
fs
imul
xchg
dec
es
pop
pop
pusha
lods
add
je
rcrb
adc
push
adc
cmpsb
dec
mov
and
test
xor
mov
xor
imul
movsb
mov
and
xor
sbb
sbb
and
and
cmp
cmp
mov
xor
inc
rorb
dec
enter
mov
mov
pop
mov
sbb
xchg
adc
xorl
bound
rolb
or
pop
adc
push
mov
xor
lahf
push
or
nop
aam
or
pop
push
outsl
enter
pop
add
fcoms
fsubrp
xorl
lret
and
xchg
add
or
or
and
pop
out
jb
aas
mov
shll
dec
xor
adc
or
inc
outsb
and
shr
add
es
and
cmc
xorl
test
js
or
mov
in
test
adc
push
jae
bound
jo
fcmovbe
aam
insl
insl
loop
mulb
shll
and
or
sub
adc
clc
incb
bound
or
jmp
inc
cmp
outsb
and
mov
and
aaa
out
jae
jecxz
sbb
add
or
cwtl
or
adc
pusha
xchg
lock
or
mov
out
aaa
jge
je
cmp
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
or
xor
inc
jecxz
test
fstp
jne
push
movsb
ds
pusha
fldl
cmp
not
xchg
sbb
outsl
mov
ret
setbe
testb
sahf
lret
mov
adc
sti
add
mov
out
test
fistpll
push
dec
cmp
xchg
sub
mov
rclb
shl
mov
or
sub
push
and
and
or
into
adc
testl
mov
add
xor
icebp
lcall
jmp
push
and
or
push
or
arpl
aaa
inc
flds
fstps
jmp
fisttpll
xlat
adc
fsubp
inc
push
hlt
adc
fildl
movsl
jbe
in
pop
sub
jl
push
divl
or
mov
adc
xor
hlt
ds
or
lock
mov
aaa
sbb
and
cmp
add
or
mov
mov
hlt
dec
jmp
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
call
imulb
cld
sub
mov
rorl
mov
push
nop
mov
inc
mov
mov
and
inc
or
cmp
xchg
jge
ffree
repz
add
push
add
pop
push
push
in
inc
shll
cli
bnd
imul
mov
repnz
dec
push
movsl
jge
test
scas
imul
insl
in
call
jbe
dec
cmp
sbb
nop
loopne
fchs
mov
push
push
pop
ss
nop
pop
jmp
pop
cs
icebp
pushf
nop
adc
pop
scas
sbb
loopne
cmpsb
mov
es
sub
cmp
aam
add
filds
push
add
sbb
and
pop
mov
lret
add
xchg
inc
outsb
inc
lods
mov
adc
loop
shrb
xor
ret
or
aam
cmp
je
or
sbb
sbb
or
mov
cld
sbb
add
hlt
hlt
pop
cltd
and
jmp
sub
pop
or
stos
and
inc
sbb
or
mov
ret
cmp
sbb
pop
fstpl
jp
lahf
mov
cmpb
and
ret
fidivs
lock
add
xor
push
or
fisttpll
mov
or
hlt
mov
pop
xchg
push
sub
cmp
pusha
in
fwait
dec
cmp
lock
mov
add
or
ret
call
jae
fadd
mov
or
sbb
mov
jbe
push
das
adc
outsb
dec
add
int3
mov
pop
pushf
arpl
arpl
out
sbb
mov
xor
nop
mov
or
sbb
jnp
xchg
hlt
and
add
andl
sbb
mov
sbb
dec
lret
into
sbb
mov
xchg
mov
call
clc
xor
sbb
xor
stos
push
fcmovbe
or
mov
jge
adc
or
sbb
rcll
cltd
and
decb
mov
clc
push
and
pop
cmpb
add
or
adc
ret
imul
enter
or
cli
out
fld
fucomp
pop
fldcw
pop
mull
loopne
out
mov
xor
test
outsl
jne
orl
mov
icebp
das
pop
pushf
ficoml
gs
or
shl
pop
and
or
push
or
jmp
loop
push
out
mov
push
sahf
jge
push
pop
je
aad
xor
push
ficoml
nop
cld
es
adc
push
push
push
movsb
imul
push
sub
aam
loope
ljmp
jo
fstsw
movswl
sbb
loop
or
inc
xor
icebp
and
rorb
data16
or
insl
or
and
fsts
dec
cwtl
or
sub
call
test
fcoms
pop
and
sbb
adc
pop
mov
nop
call
je
jo
movsb
fldpi
xor
loopne
lcall
add
mov
je
sbb
sbbb
shll
xsaveopt
dec
sbb
mov
mov
ret
loope
inc
popl
or
movsl
pop
mov
and
jno
iret
test
pusha
dec
rclb
clc
or
add
pop
jnp
jo
sub
icebp
xor
js
inc
cmp
cmp
subl
mov
cmpsb
es
mov
xor
inc
add
rcrb
add
mov
and
add
test
cld
sub
inc
mov
pushf
xlat
int3
pop
inc
add
in
inc
notl
add
adc
fiadds
imul
subl
lret
je
test
add
mov
sub
adc
jbe
sbb
insb
xor
js
adc
aas
mov
or
push
or
jle
or
or
add
loope
push
or
or
int
add
dec
test
push
rcrb
and
insl
pop
inc
or
push
mov
mov
pushf
pop
dec
imul
dec
push
or
sub
or
outsb
add
mov
aas
dec
push
mov
loope
adc
daa
testb
mov
loopne
test
jbe
jl
mov
rcr
jne
xchg
lock
stos
jp
pop
pop
dec
insb
jmp
sub
cli
clc
and
sbb
mov
inc
and
lret
pop
add
xor
scas
cmp
add
inc
lea
pop
mov
lret
inc
movb
rolb
ljmp
not
test
andps
or
pop
repz
outsb
inc
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
dec
cmp
mov
loopne
insb
jmp
sub
push
orl
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
add
or
add
add
xor
mov
or
adc
jge
inc
stos
inc
es
movsb
sar
popa
or
adc
dec
xor
cmp
mov
cmp
ss
loopne
mov
daa
push
iret
rcl
sub
sub
pop
pop
or
bound
mov
jno
push
shlb
push
ds
push
or
test
xor
out
mov
xchg
test
push
mov
cmpsb
pop
in
sub
js
push
and
sbb
mov
mov
dec
jns
mov
pop
dec
lea
or
ret
movsb
push
rcr
inc
lods
and
sbb
test
jmp
push
lods
sub
dec
pusha
push
aas
xor
dec
or
inc
rcrl
dec
xor
push
aam
add
cli
mov
mov
jb
pop
pop
push
push
jb
mov
repnz
incb
mov
xor
cmp
and
scas
shll
shl
hlt
push
sub
lock
aas
mov
mov
mov
mov
and
mov
cmp
dec
push
or
ss
test
inc
add
inc
popa
sbb
push
push
mov
roll
pcmpeqw
daa
andl
rcll
out
je
add
in
lea
push
jecxz
mov
and
mov
and
lea
dec
and
inc
xchg
inc
sti
rorl
jecxz
enter
pop
in
dec
or
fiaddl
bound
xchg
xchg
ficoms
lret
jne
fcoml
mov
jae
jns
or
mov
push
cmp
xchg
test
adc
adc
sbbb
mov
push
mov
in
dec
je
pop
and
add
sbb
adc
dec
jp
addr16
lret
loopne
xor
and
sub
add
jbe
jne
cmp
enter
jb
mov
xor
mov
sub
inc
mov
mov
rcr
or
pop
xor
mov
sub
pop
sti
scas
push
xchg
cmp
insb
inc
cs
jg
xchg
or
ss
cmp
je
or
decl
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
shll
inc
divb
xchg
ss
and
fcompl
filds
cltd
arpl
add
xchg
mov
outsb
push
inc
jmp
inc
adc
mov
add
adc
or
movaps
push
xor
bnd
mov
push
add
adc
les
sub
add
adc
xchg
icebp
mov
fadds
mov
shrb
xlat
rcrl
add
fdivs
or
jle
aad
sub
inc
pop
ret
sahf
dec
loopne
push
pop
sbb
rorb
sub
dec
xor
popa
lock
les
sub
mov
popf
rol
outsl
xor
cmpl
mov
hlt
sbb
push
push
add
jle
push
cmp
pushf
cld
mov
adc
or
sbb
xchg
add
lods
ja
add
fiadds
daa
add
and
cld
loopne
icebp
push
jmp
es
je
loop
inc
sub
das
pop
insb
loopne
mov
fadd
inc
add
push
xor
mov
xor
or
add
xor
jp
testb
pop
lock
fimull
imul
adc
sub
loope
cmp
mov
adc
dec
das
ficompl
pusha
inc
lahf
shlb
fs
and
jg
ret
jmp
xchg
jmp
push
or
add
adc
bound
and
push
inc
or
adc
shlb
ret
inc
cmp
pop
push
add
sbb
shll
push
jmp
addb
lods
jne
xor
add
data16
push
fadd
pushf
insl
shrb
jge
mov
add
jl
nop
stos
inc
fcoml
lret
shl
inc
and
lea
xchg
xor
mov
fdivs
call
dec
mov
enter
sbb
xchg
sahf
dec
jl
inc
mov
cld
push
and
dec
out
rorb
lret
andl
imul
inc
lea
loope
or
xor
ret
nop
js
mov
jmpw
xor
cmpb
jbe
sub
push
inc
xor
add
mov
pop
sbb
js
inc
popf
push
dec
sub
leave
and
add
insb
lahf
mov
push
xchg
scas
and
adc
enter
inc
inc
mov
fistpl
fstpt
test
jg
ret
mov
or
jne
bound
xor
aam
es
icebp
sub
cli
in
call
xor
mov
mov
sbbb
je
fisubs
or
mov
xor
shlb
mov
push
hlt
nop
or
call
dec
scas
and
pop
xchg
and
inc
xor
pushf
ret
inc
sbb
xor
add
dec
jge
daa
inc
fs
cld
add
add
cmpsb
clc
hlt
shrd
sbb
fs
cmp
jge
sbb
shlb
xor
xor
inc
es
cmc
pop
and
xor
out
and
mov
cmp
cmp
or
rorl
pop
rcpps
insb
xor
add
fcmovb
push
nop
lcall
nop
sbb
dec
pop
in
mov
imul
or
js
jg
jb
xor
out
xor
mov
vaddsd
shl
fimull
jl
push
push
shll
pusha
cmpsb
outsl
dec
xchg
inc
cmp
mov
push
lock
pop
push
or
sarb
add
mov
jns
pop
jnp
inc
dec
pop
or
or
dec
and
or
cmp
cmp
add
in
add
lods
ja
dec
frstor
es
hlt
nop
mov
fwait
adc
adc
sbb
movw
add
add
inc
rcrl
jle
in
push
sbb
push
push
jmp
lock
and
sahf
and
bound
adc
xor
neg
call
inc
or
or
ret
loopne
push
hlt
aaa
push
lods
lds
js
xor
inc
mov
push
mov
push
add
add
xchg
mov
repnz
je
loopne
roll
and
add
lret
cmpsl
jl
into
roll
or
insb
cmp
sbb
mov
or
mov
sub
clc
sbbb
xchg
or
cmp
nop
dec
adcl
xchg
pop
aam
and
or
test
or
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
adcb
popa
push
mov
inc
push
add
add
sub
popf
jmp
xor
lea
sahf
clc
gs
push
xor
or
pop
data16
daa
aaa
in
add
movb
sti
lds
inc
je
dec
ss
xor
ret
add
dec
jmp
mov
sub
add
int
inc
aaa
je
sbb
or
pop
inc
hlt
jb
popa
cmp
or
inc
sub
rcrl
xorl
sbb
arpl
add
xchg
repnz
mov
inc
xchg
rcll
push
aaa
lock
test
and
imul
sbb
pop
fldenv
push
adc
cmp
adc
mov
sti
and
testl
pusha
push
xchg
sarl
push
fwait
lea
mov
jmp
jbe
or
cs
push
into
mov
add
add
loopne
cmp
notl
add
mov
inc
mov
test
or
and
mov
sbb
push
and
xlat
aam
jecxz
sti
adc
lea
xchg
cmc
cmp
loope
adc
daa
lods
sub
dec
inc
add
mov
push
ljmp
sub
push
push
and
leave
test
int3
inc
shll
std
lcall
push
add
and
cltd
nop
cli
inc
data16
mov
xchg
mov
cmp
fistpl
or
cmp
dec
test
or
mov
ljmp
mov
inc
mov
lock
xchg
adc
test
xor
rcr
mov
cmpl
rcll
push
or
push
or
mov
push
mov
sbb
or
mov
cld
ja
inc
adc
imul
jge
rcrb
sar
pop
add
adc
or
enter
mov
jb
dec
and
test
xor
sub
and
out
cli
mov
lret
je
dec
je
dec
push
push
jmp
add
mov
or
jmp
cmpb
mov
or
lcall
rclb
fistps
and
insl
lods
sub
jp
icebp
pop
ret
shll
add
sbb
push
jo
sub
int
adc
push
sub
cs
add
es
pop
mov
adc
das
jne
adc
fistpl
cmp
je
mov
cmp
mov
pusha
and
or
roll
test
lahf
and
add
pop
mov
adc
xor
lret
adc
fiaddl
into
test
or
xor
bound
jnp
dec
inc
sarb
xor
pop
sbb
lods
imul
sub
adc
xchg
sbb
loopne
cwtl
sbb
or
addb
call
add
or
or
or
les
movsl
xchg
adc
push
clc
shr
add
loop
or
or
cmp
leave
shr
or
mov
icebp
in
pop
jae
push
adc
test
and
add
mov
fwait
mov
add
add
fs
mov
xchg
jp
push
add
fidivrl
dec
inc
sbbl
inc
jl
in
sbb
cmp
movsb
leave
les
or
dec
pop
pop
adc
scas
sbb
and
aam
push
out
dec
fidivrs
ja
mov
adc
xor
repnz
into
clc
or
xor
mov
lea
add
xchg
push
pushfw
stc
test
fxch
push
insl
mov
nop
sub
sub
decl
mov
cmp
sub
and
xchg
xor
addr16
push
fiaddl
xlat
lock
cli
ficomps
adc
xchg
xchg
xor
push
insb
adc
xor
mov
mov
fsubrl
add
lret
dec
sti
xor
dec
push
call
incl
insl
mov
xchg
or
mov
pop
call
data16
sub
mov
scas
sbb
outsb
cmp
std
fs
dec
sub
loope
xor
bound
sbb
add
je
repnz
jp
cltd
bound
fwait
mov
inc
enter
outsl
stos
pop
loop
dec
inc
aaa
xchg
inc
push
xor
adc
pop
add
test
xchg
jne
inc
push
sbb
dec
leave
inc
jbe
decl
xor
js
aas
xorl
push
jns
and
gs
add
add
test
rclb
and
bound
mov
mov
jo
mov
stos
jb
pusha
sbbb
loope
or
mov
subl
or
rcrl
pop
mov
movq
clc
add
push
outsl
inc
mov
or
cmp
clc
and
xor
push
stos
sbb
mov
test
clc
sbb
inc
mov
xchg
mov
scas
mov
pop
out
add
aam
sbb
add
pop
je
add
bound
ret
mov
xor
str
cs
js
mov
push
lds
hlt
mov
mov
pop
inc
jno
mov
sub
push
add
sub
sarl
call
inc
ds
push
jbe
fcomps
add
call
ss
rcrl
nop
into
xor
and
add
push
int
sbb
cltd
dec
sarl
lock
stos
rol
call
pop
in
mov
cmp
jle
inc
rolb
jmp
dec
loope
sbb
aaa
adc
dec
cmpsb
sbb
mov
es
mov
jge
cmpsb
jmp
adc
cmp
cmpb
je
insl
pop
subb
push
incl
adc
push
pusha
push
fstl
and
or
push
mov
push
insb
jmp
add
push
sub
ficoml
push
xchg
fidivl
orb
and
aaa
jne
cmpsb
cmp
lret
sub
jmp
enter
std
jne
cmp
jne
gs
negb
jmp
dec
add
iret
add
jbe
into
adc
rorb
xor
cltd
or
adc
out
roll
leave
add
jl
js
je
mov
iret
adc
sbb
xorb
movsb
and
mov
jge
or
popl
xchg
pop
sahf
jne
movsw
and
int
or
push
mov
add
add
lahf
and
dec
or
adc
nop
add
clc
or
or
lea
mov
push
mov
lcall
jmp
dec
jge
inc
inc
push
neg
neg
sbb
jns
add
sub
inc
addl
mov
addl
sbb
and
push
adc
rcr
mov
xor
shl
sbb
adc
push
divb
adc
sbb
or
dec
jns
mov
dec
jne
pop
pop
pop
fildl
jp
or
adc
mov
rcl
ljmp
shr
add
test
cmpsl
jg
rclb
jmp
enter
andl
cld
je
outsb
xor
push
repz
add
addr16
dec
or
aaa
icebp
inc
into
add
push
pop
lods
jae
aam
dec
adc
adc
dec
lahf
push
enter
incl
jo
mov
je
push
xor
sarl
jbe
cli
sbbb
xor
xchg
push
xchg
pop
dec
and
push
daa
aam
or
push
rcrb
inc
sub
outsb
cmp
add
cmp
js
jg
sarb
mov
or
cmp
jo
pop
gs
or
push
add
cmp
dec
fst
jb
and
inc
ss
mov
aaa
dec
sub
pop
rolb
sub
inc
jns
push
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rcr
popf
push
inc
mov
mov
sbb
or
or
or
imul
sbb
or
mov
je
adc
fdivrp
mov
cmp
jb
cmp
ja
add
cmp
adc
notb
loopne
or
shll
leave
adc
pop
adc
add
jl
les
je
adc
mov
mov
shll
push
push
and
push
mov
sub
aam
fcmovu
mov
sti
aas
cmpsb
mov
mov
push
movb
jmp
or
inc
sbb
aaa
scas
dec
shrb
pop
sub
sub
mov
or
popf
inc
push
inc
add
xor
add
mov
xchg
and
js
xor
pop
mov
ljmp
mov
push
sub
push
mov
jbe
inc
jb
mov
fdivrl
dec
push
andb
sbb
cmp
into
push
add
add
add
cmp
add
fwait
mov
xchg
cmpsb
push
imul
jmp
lcall
inc
imul
pop
pop
xchg
lea
sar
dec
ja
ja
dec
movswl
xchg
inc
stos
cltd
lods
fildl
es
dec
mov
lods
mul
mov
cmp
mov
je
inc
call
rcrl
adc
adc
jmp
sub
addr16
xor
and
mov
push
loope
stos
or
jb
jl
pop
mov
decl
jle
repnz
mov
adc
adc
mov
mov
mov
and
scas
std
and
lea
inc
xor
lods
push
cmpsl
add
into
sahf
cmpb
mov
js
cmp
idivl
hlt
xchg
icebp
iret
leave
out
mov
inc
call
jnp
ljmp
loope
rorl
add
and
lea
rolb
loop,pn
sub
sahf
inc
mov
push
lea
xor
sub
pushf
or
outsb
stos
fcoml
imul
add
movsb
pop
sahf
push
pop
xor
cmp
lods
shll
inc
insl
pusha
shrw
cmpsl
insb
xchg
mov
mov
pop
push
lcall
and
cmpsl
jne
rorb
addl
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
js
mov
jle
int3
jg
neg
shrl
loope
shr
or
mov
cltd
rcrl
dec
mov
jp
mov
lock
dec
and
jnp
repnz
jb
div
add
inc
pop
sahf
cmpsl
cli
div
rcrl
pop
js
jbe
mov
lcall
fcmovb
test
pop
test
add
or
cli
adc
and
sub
scas
mov
dec
aas
sbb
cmp
mov
push
fidivl
aad
mov
fldenv
enter
jg
or
lret
enter
rcrl
mov
in
sbb
push
sbb
dec
scas
inc
repnz
push
push
sbb
loop
out
inc
arpl
sahf
jge
out
mov
add
enter
imul
fwait
sbb
aam
daa
adc
mov
push
cli
or
jp
jae
dec
mov
shlb
fdivrs
aam
xor
jbe
dec
test
xchg
jge
adc
push
mov
ret
add
mov
adc
dec
xor
fmull
or
sub
add
add
mov
add
add
insl
test
sub
int3
jg
add
out
add
xchg
add
add
inc
adc
xor
adc
jg
or
xor
enter
lock
inc
mov
stc
jge
add
mov
nop
mov
movsb
jmp
add
pop
add
jne
jae
xchg
pop
fnsetpm(287
loopne
sub
and
pusha
mov
test
add
sbb
sub
xor
insb
sbb
div
mov
adc
inc
add
inc
mov
stos
ljmp
add
pop
outsb
call
xchg
sub
mov
mov
mov
and
rcrb
jb
cli
pop
inc
sarl
fsubrl
fdivs
mov
and
imul
mov
imul
cs
dec
loopnew
fmuls
leave
outsb
pusha
lea
push
and
mov
push
in
out
add
neg
movsl
out
jbe
in
pop
sti
add
lock
sar
sub
ja
into
inc
les
enter
xor
push
sbb
rclb
jbe
movsb
clc
lock
inc
dec
enter
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
inc
mov
call
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
jne
or
hlt
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
pop
and
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
pop
cwtl
cli
mov
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
add
push
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
cmc
or
ret
imul
jns
inc
push
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
xchg
lock
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
pop
or
cwtl
insl
test
or
sbb
stos
push
jmp
and
and
push
fs
mov
pushf
hlt
add
leave
sti
cmp
out
adc
push
into
enter
movsb
and
mov
into
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
aad
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
cmpsl
cmp
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
cs
add
test
jle
rclb
sbb
push
nop
insb
jno
aaa
xchg
clc
das
sbb
je
dec
mov
mov
jb
outsb
cmp
je
mov
or
mov
repnz
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
push
lods
add
push
leave
mov
mov
mov
ret
mov
into
das
add
stos
les
and
in
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
cltd
fsubs
fmul
orb
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
pushf
push
rclb
cmpb
or
aam
loope
movsl
ljmp
insb
or
fisubrs
sub
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
stos
add
popa
in
sub
mov
clc
xchg
pop
aaa
test
cmp
lock
pop
stos
sahf
mov
cs
mov
les
bound
dec
sub
adc
fwait
in
in
fsubp
adc
xchg
mov
loope
aaa
ljmp
lods
xchg
push
pop
mov
add
call
xor
push
ret
or
mov
push
jge
pushf
inc
push
dec
adc
inc
cmp
pop
test
adc
or
mov
in
jge
cmp
adc
icebp
mov
dec
loope
gs
sbb
popa
in
je
in
push
push
add
clc
cli
sbb
add
jg
mov
jp
fadd
js
movsb
xchg
sti
jo
mov
addl
pop
mov
push
lods
dec
loop
rol
xor
addr16
xchg
enter
insl
cmpsl
mov
add
loopne
push
pop
nop
out
push
out
mov
test
cmpsb
mov
push
jle
push
jmp
dec
fs
movsb
fisttps
fucomp
add
jp
cmp
jmp
int
subl
push
js
push
adc
add
push
sbb
adc
xchg
aam
loopne
sbb
inc
insl
push
test
pushf
iret
pop
cmp
push
cmp
push
mov
sub
add
loop
sub
sbb
add
push
es
dec
xor
shl
decl
jno
lods
push
jg
scas
sbb
or
sbb
out
btc
aas
pop
cmp
pop
mov
xchg
add
push
iret
imul
pop
mov
cs
inc
and
test
inc
fs
and
repnz
loop
cmp
pop
inc
push
sbb
mov
cmpsb
js
pop
syscall
push
or
sub
fcomps
xchg
gs
jmp
lods
loope
mov
cld
ret
add
in
pop
dec
pop
js
les
invd
loope
nop
sahf
test
push
sub
and
movsl
loopne
call
cmp
and
jmp
loopne
pop
mov
sbb
pop
clc
addr16
xor
outsb
pop
rorb
dec
in
push
push
xlat
mov
inc
jle
mov
test
push
jmp
inc
adc
popf
mov
push
xor
add
clc
cltd
mov
push
add
or
jnp
mov
sar
xor
sbb
dec
pop
push
inc
sub
pop
and
mov
and
pop
mov
adc
xchg
pop
inc
sub
rol
push
sarl
stos
aas
test
ret
cmpsl
or
add
mov
es
sub
sahf
xor
shlb
insb
add
jecxz
shrb
and
adc
test
dec
or
cltd
push
or
add
push
inc
rcrl
test
pusha
mov
lods
push
mov
sbb
push
stos
test
int
add
shlb
ds
jmp
mov
sub
pop
jecxz
sbb
mov
push
sub
or
insl
cld
mov
loopne
movsl
jnp
rcrl
xor
and
andl
jo
jo
mov
roll
pusha
imul
inc
add
jmp
stos
sub
cld
mov
inc
or
or
adc
add
pop
or
jmp
in
mov
cmp
arpl
adc
scas
sub
fstps
adc
mov
inc
das
cmp
and
sbbb
pop
adc
pusha
mov
push
mov
xchg
mov
mov
xchg
sahf
adc
in
sub
sbb
mov
call
or
cltd
push
mov
aas
push
sbb
jo
popf
inc
push
xchg
xchg
xchg
rolb
sbb
pop
addb
add
aam
pusha
loopne
dec
enter
bound
push
popa
sub
mov
xor
subb
push
mov
or
xchg
shr
std
data16
xor
inc
and
push
and
nop
insb
jmp
push
pop
loope
pop
mov
adc
imul
xor
stos
pusha
jne
pop
sub
xor
or
popa
xor
sub
push
arpl
imul
fidivrl
flds
ja
mov
jo
fsubrp
sub
add
inc
imul
add
jb
xchg
jge
cmp
sbb
loopne
les
jg
sub
inc
mov
sbb
cmp
ja
jbe
inc
pusha
or
jge
das
push
aaa
pop
in
xlat
cwtl
xchg
lret
pushf
xchg
pop
add
mov
pop
sbbl
push
call
jp
repnz
test
jg
adc
in
ds
shl
lcall
xchg
icebp
imul
shll
inc
jmp
mov
cmpl
lock
mov
fadds
add
jbe
mov
mov
lret
push
cwtl
inc
clc
rcrb
adc
in
ljmp
and
jmp
adcb
inc
lea
subb
stos
inc
or
push
outsb
sub
or
fs
cmpsl
and
pop
fs
int
sub
test
or
xchg
mov
dec
xlat
sub
cld
push
inc
inc
loopne
pop
cmp
cmp
cmp
mov
data16
jmp
mov
mov
sbb
cmpsb
mov
hlt
xor
adc
jg
mov
push
cld
jae
push
cmpsb
xchg
or
imul
cmp
bound
mov
jp
ja
ret
inc
xor
mov
mov
dec
testl
imull
and
xchg
mov
in
sbb
es
cltd
and
jmp
testl
ret
or
inc
loop
sub
mov
ret
arpl
cmpsb
loopne
test
popf
ds
movsl
mov
adc
and
and
adc
inc
sbb
push
mov
test
lds
std
data16
rcll
sbb
sub
mov
mov
push
add
sbb
test
pusha
inc
stos
bound
mov
adc
or
popf
xchg
add
js
sub
addb
push
add
add
push
pop
cmp
stc
inc
dec
sbb
cmp
loop
es
sbb
sbb
lcall
mov
loopne
test
push
in
push
sbb
fistl
push
mov
push
or
pop
jg
cli
mov
sub
jmp
pop
jl
or
mov
repnz
mov
xchg
addl
rolb
mov
loopne
and
add
sbb
test
sbb
int3
add
pop
stos
test
jp
les
sahf
sbb
scas
mov
mov
shl
aaa
loope
fsubs
insl
cmp
pop
inc
rclb
js
test
push
lods
push
xchg
sbb
jmp
loope
mov
and
cltd
ret
cmpl
dec
cmpsb
pop
adc
cmp
jae
inc
mov
lret
cmp
adc
cmp
shlb
or
out
mov
xor
cmp
insb
arpl
hlt
add
mov
jmp
pop
pop
push
xor
nop
inc
outsb
fadds
jae
push
pop
outsb
pop
mov
shl
movsl
push
inc
cmpl
sub
cmp
femms
pop
push
dec
ret
movsl
and
out
rcrb
sbb
lods
lock
inc
scas
inc
fisttpl
sub
data16
and
fcomps
or
xlat
inc
in
jmp
inc
dec
add
adc
or
push
test
mov
dec
fiaddl
or
xchg
addb
shrb
ja
clc
add
fnsave
sbb
push
add
mov
sub
and
adc
insb
inc
data16
push
xorb
cmp
test
je
cmp
aam
adc
lods
fnstenv
push
xchg
and
lds
cmpsl
test
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
movsl
xor
arpl
add
inc
jb
pop
mov
push
ss
ss
add
jno
push
popa
sbb
std
repnz
sar
sbb
rolb
push
adc
and
cmp
aas
xor
xor
dec
sbbb
icebp
jne
push
mov
jo
fcoms
jmp
xor
pop
add
cmp
add
pop
je
adcl
push
xchg
lret
hlt
or
push
sub
mov
std
pushl
lds
enter
or
inc
mov
icebp
mov
cli
arpl
mov
and
add
sbb
stos
add
xlat
xchg
jle
in
xchg
orb
lea
lahf
lock
or
inc
aam
or
je
inc
movsb
add
insb
inc
mov
rolb
pusha
hlt
push
rorb
cli
push
jb
bound
mov
cs
mov
loopne
jl
mov
adc
fwait
orl
cmp
cwtl
sub
add
and
rcrl
into
sbb
pop
and
mov
jb
addl
pop
sbb
or
adc
and
sub
jle
stos
insl
inc
push
jl
enter
xor
cmp
ret
sub
ljmp
sub
scas
xor
mov
insl
cltd
das
or
add
adc
add
mov
ror
enter
pop
jecxz
rorl
stc
jbe
sbb
mov
es
add
add
and
or
mov
push
mov
jnp
mov
mov
mov
mov
outsb
aam
lods
lahf
ss
adc
jle
lahf
jbe
xchg
les
sub
es
data16
adc
sub
sbb
xor
jmp
js
or
and
jg
dec
inc
in
jg
add
mov
add
adc
imul
inc
pop
add
repz
test
mov
or
negb
dec
hlt
adc
jnp
pop
jle
out
call
lea
add
in
clc
and
lods
mov
and
sbb
pop
add
push
jge
call
sbb
adc
orl
jg
jmp
adc
lods
pusha
add
mov
and
es
or
adc
cmp
loopne
push
popf
out
dec
fadds
cmpsl
push
jnp
setle
gs
lret
pop
pushf
and
mov
jle
push
jae
scas
addb
or
push
mov
push
inc
or
lock
inc
nop
gs
sub
stos
add
mov
inc
lret
pop
xchg
sub
sti
imul
loop
insb
and
lcall
add
sub
fidivrl
sbb
cwtl
arpl
pop
mov
pop
clc
aaa
enter
je
cmp
adc
cmp
jb
ret
iret
mov
testb
out
inc
push
rcrb
add
sub
pop
mov
jnp
fmuls
jmp
inc
sbbl
je
cmp
jo
inc
aad
jns
jb
cmp
jbe
clc
adc
js
push
push
or
outsb
cmpsb
lock
in
push
rcll
xor
rcl
call
and
ljmp
shrb
cmc
and
or
push
mov
push
je
mov
add
fidivrl
shlb
pop
es
sbb
sahf
test
imul
pop
lret
imul
mov
pop
sti
subb
push
xchg
mov
mov
xlat
in
push
mov
sbb
sub
add
add
fstl
hlt
lods
arpl
aad
cli
mov
sbb
pop
shll
and
inc
stc
aas
add
adc
add
add
aas
xchg
bnd
jne
add
xchg
sbb
in
add
and
aas
xor
pop
enter
fisubrl
aaa
pusha
xor
adc
mov
cmp
adc
push
dec
shlb
mov
add
lcall
andb
je
pop
and
fld
fnstenv
fists
fildll
mov
dec
lock
jbe
pop
idivb
jmp
cwtl
mov
xor
push
inc
rolb
popa
loop
jmp
cmp
enter
fidivrl
adc
ret
fstps
int3
adcb
inc
pop
or
mov
and
in
pusha
xchg
inc
adc
xchg
mov
xchg
nop
mov
mov
mov
loope
clc
cmp
pusha
leave
xor
xchg
xor
jne
ret
jg
or
add
fcompl
adc
addr16
or
insb
mov
dec
sarl
xchg
lock
pop
lock
insb
push
les
nop
sub
das
nop
mov
jo
add
xchg
or
adc
mov
sbb
or
dec
xchg
mov
dec
jnp
xchg
call
dec
push
cltd
fmuls
jne
shlb
sbb
bound
cld
fmuls
fs
int3
pusha
cld
xchg
cld
push
cmp
push
jne
add
fcmovb
sub
mov
sub
int3
push
ljmp
popa
in
adc
add
pop
setne
or
dec
xchg
mov
je
roll
xchg
push
jae
rcrl
enter
add
inc
lahf
iret
inc
push
jb
xor
dec
in
or
enter
loopne
adc
ljmp
jge
or
lock
jp
mov
ret
jnp
adc
add
push
sbb
mov
dec
lock
insb
adc
pop
in
or
xchg
cwtl
repnz
stos
mov
clc
adc
ret
fsubr
inc
in
bound
dec
pop
mov
call
add
adc
xchg
adc
rorl
inc
push
js
or
sub
cli
xor
lods
jbe
fcomps
xor
popa
out
or
sbb
inc
fadds
cld
xor
inc
cwtl
inc
push
movsb
call
in
fadds
mov
int3
movsb
lcall
js
add
mov
movsl
cmp
pop
enter
pop
cmp
jg
rorl
mov
call
cmp
nop
adc
les
xchg
jbe
test
and
rclb
stos
in
jb
lcall
stos
push
ret
jb
cmc
inc
adc
xor
adc
sbb
mov
pusha
fs
dec
es
push
cltd
fs
jl
mov
addl
adc
jo
xor
fstpt
lea
xchg
out
mov
sub
adc
mov
xchg
shlb
roll
popf
mov
push
adc
icebp
jmp
xor
push
lods
xchg
fxch
sahf
mov
sbb
xchg
inc
cli
sub
ja
and
mov
xor
pop
shll
add
sti
push
and
jl
push
push
fcmovnb
add
jle
cmp
mov
cwtl
add
les
cmp
jbe
clc
add
xor
sub
and
or
int3
orb
icebp
outsb
inc
sbb
cmpb
enter
add
sbb
aam
push
jo
insb
adc
xchg
in
sbb
or
jge
sub
fidivl
insl
mov
popf
lock
lea
out
scas
or
sub
mov
sbb
orl
mov
in
sbb
jp
and
adc
dec
or
mov
fs
sbb
inc
cmpsb
in
sub
in
sbb
and
dec
rorb
inc
jbe
fsubrl
jle
jne
jne
test
in
push
jne
xlat
sbb
cltd
imul
fsubr
aam
and
mov
sub
inc
and
dec
mov
clc
pop
in
adc
adc
add
sbb
dec
push
andb
ljmp
in
jnp
push
pop
push
cmp
and
imul
je
fadds
imul
roll
cmpsb
push
xchg
fisttps
pusha
jp
push
incl
adc
ret
fists
pop
cmpsl
push
call
jl
lahf
inc
test
movsb
fs
pop
xchg
adc
push
es
cmp
dec
pop
dec
fsubl
aas
pop
add
mov
push
sub
mov
and
dec
fs
hlt
mov
or
or
clc
lods
add
mov
cwtl
adc
push
jno
mov
jne
jg
int3
and
and
popf
jge
cmpsl
ss
popf
push
and
dec
adc
popa
mov
xchg
add
lods
add
stos
and
sbb
in
add
loopne
push
adc
adc
aad
and
or
mov
sbb
adc
insb
and
and
loopne
insb
mov
or
in
or
dec
jb
or
add
and
sub
dec
push
ljmp
pop
dec
pop
sub
out
lea
test
fisubrs
sbb
fiaddl
mov
push
je
fdivr
add
mov
pop
shll
or
test
stos
push
jb
push
pusha
and
xlat
faddl
dec
mov
jns
movsbl
xlat
and
clc
inc
mov
ret
test
jns
pop
fcompl
jbe
pusha
add
cmp
pop
cmp
and
adc
in
pop
shll
fadds
add
sbb
fcomp
aam
fs
es
fmull
inc
cmpsb
fmuls
das
faddl
or
jns
sti
call
sub
es
aam
fs
inc
fcom
sub
movsb
mov
xchg
sbb
inc
mov
or
jl
sbb
mov
cwtl
je
sti
daa
jnp
ret
fsubrl
scas
fwait
sbb
leave
sbbb
sub
movsl
test
sti
adc
jbe
mov
loop
pop
or
movsl
aam
xchg
push
insb
sub
xor
sbb
dec
or
or
pop
jb
and
or
pop
leave
and
cmp
jo
loopne
enter
jb
xor
or
outsb
push
adc
add
and
test
cmp
sub
or
or
sub
or
mov
adc
insb
int
inc
cwtl
and
cwtl
adc
sub
nop
test
testb
adc
push
ror
xor
aaa
adc
imul
mov
popa
in
jnp
cmp
sub
sbb
ret
sbb
push
dec
push
dec
sub
mov
and
sub
sti
fadds
fdivs
movsl
movsb
adc
inc
push
pusha
sub
les
and
push
movsb
sub
add
adc
test
rclb
sti
mov
call
insb
mov
xchg
aam
jnp
movsb
in
sub
and
sbb
leave
ret
adc
adcl
pop
pop
sub
jge
das
rcrb
ljmp
mov
sbb
test
sbb
mov
test
arpl
leave
push
pushf
or
jno
insb
adc
sub
jmp
push
lds
push
mov
push
mov
scas
xchg
shrb
pop
cld
inc
cmpsb
or
jmp
nop
ret
ja
das
sbb
iret
fs
mov
addb
das
and
xchg
ljmp
jno
dec
pavgb
xor
push
mov
arpl
enter
orl
xchg
test
inc
or
adc
sbb
cmp
or
or
fs
adc
cmp
dec
adc
push
jb
xor
pusha
xor
or
xor
mov
lods
in
pop
and
dec
inc
xor
test
mov
fisubrl
cs
aad
cs
stc
xchg
mov
loopne
mov
sarl
inc
fs
push
and
fmuls
dec
xor
mov
je
mov
roll
jne
mov
push
test
mov
xor
es
pop
into
mov
repnz
add
mov
mov
inc
xor
cmpsb
add
insl
lock
dec
inc
fmul
jne
or
adc
and
or
and
add
orb
xor
mov
push
mov
pop
cmpsl
mov
cwtl
in
scas
nop
lock
inc
dec
mov
pushf
aaa
and
cmp
stc
cwtl
and
lea
sbb
leave
adc
or
lock
sub
ss
add
loope
jno
aam
inc
adc
mov
imul
mov
sbb
and
fimuls
int3
pslld
enter
in
mov
test
sbb
inc
int3
and
maxps
iret
enter
adc
mov
and
mov
in
fistpl
jmp
adc
and
adc
and
add
fsubl
insb
mov
add
lods
push
loop
push
fadds
inc
jmp
enter
out
adc
repz
push
and
pop
cmp
sbb
in
loopne
xor
call
xorps
ljmp
ret
and
cmp
loop
lcall
xor
movaps
fcoms
aam
adc
sub
mov
les
rcrl
mov
call
inc
rcll
cmpb
mov
cmp
cwtl
adc
xchg
nop
pushf
adc
nop
mov
lret
test
inc
adc
fcmovb
mov
xchg
sub
enter
inc
clc
xor
dec
push
faddl
aaa
test
test
sbb
mov
inc
mov
dec
popf
and
lods
mov
scas
sbb
push
and
movsb
fdivr
loopne
movsl
xor
rcrl
sub
mov
fnstcw
repz
shl
fsubs
inc
sub
sbb
imul
call
in
aam
orb
fldt
mov
or
inc
testl
stos
pop
fcoml
pop
add
pusha
jmp
lock
aas
dec
add
mov
loope
enter
sbb
inc
push
mov
cmp
sub
repnz
adc
jp
add
cwtl
testl
adc
or
xchg
xor
xchg
mov
dec
mov
jo
xchg
cmp
ret
dec
inc
ss
adcl
lea
adc
mov
cmp
lea
mov
cli
notb
cmp
xchg
mov
or
inc
pop
das
test
das
mov
mov
mov
leave
cmp
lock
dec
jns
shrl
dec
or
arpl
push
mov
xor
enter
mov
jnp
sub
jne
dec
lock
pop
popa
test
test
sbb
rorb
popf
cmp
sahf
xor
add
mov
cmp
loope
nop
inc
data16
sti
or
aad
daa
movsb
pop
push
call
dec
inc
sbb
mov
mov
popa
adc
inc
cmc
mov
sbb
or
sbb
adc
fwait
mov
mov
jb
test
call
push
in
or
flds
and
pusha
cmp
jl
inc
sub
add
nop
and
insb
and
icebp
inc
and
inc
in
movsb
sbb
lahf
call
dec
xchg
imul
adc
insl
int3
inc
aam
or
pop
mov
addb
push
aam
pop
or
pushf
and
inc
push
mov
jnp
dec
inc
push
jb
in
loopne
inc
adc
xor
test
cmp
dec
repz
enter
rorb
and
jbe
popf
ja
push
adc
clc
rolb
xor
movsb
lea
adc
fdivrl
add
add
bound
insl
add
shrb
pop
fisubrl
shlb
push
pop
int3
gs
sub
adc
pop
in
cltd
test
jge
daa
in
inc
aad
aam
dec
rcrb
and
mov
in
dec
push
cwtl
gs
ret
les
mov
shlb
les
lds
rol
xor
divl
lock
nop
inc
in
pop
gs
adc
pop
sbb
stc
adcl
rorb
add
push
xchg
pop
rclb
push
xor
or
addb
in
sub
in
mov
ja
inc
adc
push
push
cmpsl
aad
pop
dec
insl
sbb
jne
and
fiaddl
mov
lods
in
test
jne
cmp
test
lds
aas
mov
mov
ret
push
shll
dec
xchg
or
fiaddl
in
sbb
cltd
pop
sub
test
and
aam
add
or
push
lods
fs
and
gs
mov
dec
outsb
pop
add
sahf
xor
fsubl
rcrb
push
and
mov
dec
test
and
sbb
aad
enter
in
scas
in
int
leave
pushf
cwtl
xor
fsubs
cmp
inc
lcall
mov
pushf
mov
sbb
dec
insl
cmp
adc
stos
push
iret
testl
or
and
xchg
add
mov
lods
fadd
lods
sbb
mov
or
rcl
leave
push
roll
xor
inc
and
mov
js
adc
push
fbstp
add
adc
mov
inc
mov
cmpsb
pop
xchg
adc
mov
js
pop
or
add
sbb
adc
sub
imul
mov
gs
and
jo
adc
leave
and
push
jb
xor
push
or
lods
push
adc
jno
lods
enter
pop
int3
xor
push
jns
xor
sub
mov
movsb
jge
add
mov
adc
mov
test
aam
iret
or
jl
mov
call
push
rcl
dec
push
shlb
je
leave
aad
sub
scas
fsub
mov
iret
fcoms
or
push
inc
push
mov
push
sbb
sar
sub
pop
js
cmc
push
lods
call
xor
rorl
inc
outsb
and
fs
sbb
insb
xchg
cli
jo
adc
mov
jge
ficoms
add
push
fs
fnstsw
xor
insl
add
mov
push
pop
push
out
push
movsb
adc
jae
rcll
and
mov
lret
pop
inc
adc
test
or
dec
jno
jo
push
pop
rcrb
push
pop
enter
and
shlb
mov
jp
idivl
subb
xchg
jp
or
leave
add
insb
adc
mov
sti
fs
and
adc
cltd
push
cltd
fs
sbb
cltd
fs
and
cmpsb
pusha
xchg
dec
sub
xor
daa
fmuls
push
adc
and
mov
inc
ret
or
cmp
shrl
jne
mov
fwait
inc
enter
push
sbb
jbe
movsb
cmp
inc
or
stos
inc
pop
add
scas
mov
dec
and
mov
dec
je
lea
inc
add
movsb
add
mov
pop
pop
sbb
and
inc
pop
or
or
jne
inc
or
jge
adc
inc
fs
outsb
push
in
lods
test
xor
sbb
push
or
ret
sub
int3
ja
adc
fiaddl
bound
in
pop
in
mov
jle
add
and
sub
push
es
and
mov
cmpsb
movsl
sbb
enter
jle
add
ret
cmp
add
sbb
pusha
mov
aas
or
inc
int3
dec
les
les
int3
rcl
pop
stc
mov
cs
jecxz
push
mov
daa
fsubs
repz
xor
sbb
jns
imul
inc
mov
and
shrl
ret
stos
movb
rcrb
adc
mov
or
inc
lcall
sbb
jmp
mov
cmpsb
inc
in
fildll
jbe
lods
xchg
mov
or
call
nop
add
jecxz
je
or
popl
and
mov
loopne
mov
cmp
movsb
ja
mov
aaa
addr16
fdivs
rorl
dec
mov
sub
fs
cs
ja
dec
xor
scas
mov
inc
ret
mov
or
mov
test
test
lcall
int
imul
mov
shll
xchg
mov
ret
push
mov
mull
xor
add
mov
enter
das
push
inc
call
xchg
out
add
aam
cwtl
lods
and
sti
sti
ret
pop
push
addr16
scas
or
fdivl
cwtl
cwtl
and
sbb
insb
jbe
mov
fdivs
push
daa
adc
mov
pop
lods
jo
push
leave
fcoms
sub
mov
sbb
enter
xchg
lea
or
pusha
inc
xchg
clc
push
sbb
sub
addr16
xorb
test
fisubrl
in
inc
mov
jmp
dec
push
cwtl
sbb
leave
xor
in
jns
inc
sub
andb
add
lea
pop
nop
pusha
rcr
mov
je
lock
ret
sbb
xor
push
dec
xchg
add
lods
in
ja
add
imul
rorb
aad
push
add
inc
mov
and
inc
arpl
xor
jg
sub
in
mov
cmp
add
lods
loopne
sbb
mov
roll
inc
add
mov
or
and
pop
or
repnz
daa
jg
call
or
leave
mov
sbbb
fsubr
pop
mov
das
aam
movsb
shrl
mov
stos
sbb
out
lahf
in
mov
mov
adc
pushf
jo
int3
rcrl
inc
add
mov
insl
mov
inc
gs
movsl
mov
shlb
fcoml
inc
aam
mov
imul
push
notb
sbb
outsb
das
push
dec
pop
dec
adc
dec
imul
bnd
mov
pop
rorb
ret
or
add
test
sbb
or
xor
mov
fcomp
adc
lahf
pop
or
and
rorb
or
cmpb
adcb
add
cwtl
mov
add
and
xor
push
test
and
xor
add
and
lods
insb
pushf
or
xor
dec
movsb
lods
add
orb
inc
inc
es
ss
pushf
cltd
fs
dec
insb
lods
push
fs
dec
mov
dec
es
push
jl
dec
es
fs
mov
cwtl
nop
mov
fs
dec
mov
dec
and
cmp
sub
in
decb
imul
out
test
fcoms
mov
enter
mov
ljmp
cltd
bndldx
mov
mov
stos
sbb
add
mov
sbb
pop
xor
jl
test
mov
enter
movsb
jb
and
and
cmc
push
cmp
aam
sub
fs
fsubrs
in
mov
adc
leave
mov
mov
gs
lods
mov
in
addb
and
pushf
js
pop
xchg
xchg
xchg
fcmovnbe
bswap
les
lods
movsb
pushf
sub
mov
xchg
mov
test
and
fcoml
pop
sbb
pop
imul
xchg
mov
pop
mov
cmc
push
jbe
xor
push
in
orb
imul
sub
dec
inc
test
xchg
push
lods
xchg
inc
jmp
cmp
stos
inc
sti
xor
or
pop
ja
inc
lea
gs
aam
adc
and
dec
adc
ret
inc
jo
jmp
sbb
mov
pop
add
movsb
and
cs
xchg
sub
xchg
shlb
sub
cmpsl
test
sbb
add
pusha
adc
into
fwait
movsb
pop
stos
imul
mov
pop
dec
push
lods
push
add
pop
sub
and
ror
enter
mov
inc
mov
xlat
lret
xor
and
movsl
dec
repnz
idivl
fs
push
movsb
dec
adc
sbb
adc
cmpsb
or
int
jecxz
in
dec
dec
dec
dec
mov
or
push
mov
dec
loopne
shll
sub
dec
dec
mov
fsts
shll
sub
adc
flds
mov
and
adc
push
insl
dec
add
adc
mov
cmpl
push
fildl
pop
shlb
push
adc
sub
mov
adc
fnsetpm(287
clts
and
xchg
fidivrl
outsl
fadds
push
loop
adc
dec
rol
ret
mov
and
rcrl
push
adc
sub
sbb
addr16
sub
jb
nop
mov
nop
ja
or
icebp
add
cltd
ss
fiadds
mov
pop
pop
push
mov
imul
das
xchg
add
fadd
sbb
xor
sbb
sbb
cltd
mov
adc
and
rclb
fmul
les
mov
stc
les
or
mov
enter
test
add
and
fs
imul
ja
and
rolb
aas
xchg
xor
aas
mov
orb
inc
mov
scas
sub
dec
mov
or
pop
mov
ja
jle
fwait
sbb
stos
sub
and
movsb
add
imul
or
push
les
in
nop
inc
add
mov
and
repz
sub
jno
adc
mov
das
insb
mov
imul
jl
or
jge
mov
xchg
nop
movsb
xor
pop
lods
adc
pop
sahf
pop
inc
mov
xchg
subb
mov
std
push
mov
adc
jo
lock
adc
sub
pop
adc
or
movsb
add
add
in
int
movsb
mov
lea
fwait
sbb
dec
or
sub
repnz
fisubl
adc
mov
sub
shrb
rol
sub
cmp
jg
push
dec
outsb
test
in
sti
jo
popa
dec
leave
fists
dec
jb
and
and
adc
sub
movsb
addb
les
push
sub
clc
mov
push
pop
scas
cltd
add
icebp
mov
clc
xor
xor
repz
adc
cmpb
mov
lea
rorb
pop
cwtl
mov
adcl
insl
nop
inc
jo
sub
ret
in
dec
sbb
push
bound
add
cmp
jo
enter
imul
int3
pop
call
insl
inc
push
push
sub
movsb
lods
sub
jno
inc
pop
mov
mov
or
sbb
pusha
inc
fcmovbe
out
mov
pop
cltd
aas
out
sbb
or
sbb
or
jns
ljmp
rorl
mov
sbb
pop
dec
and
mov
test
sub
rorl
cmp
inc
shrb
and
cltd
mulb
adc
and
xor
xor
pop
xchg
mov
and
orl
or
push
jno
push
inc
mov
jb
adcb
inc
int
call
or
inc
push
fistl
xchg
in
pop
mov
adc
mov
adcb
mov
sub
mov
enter
pop
mov
sub
lods
imull
push
jo
pop
dec
push
cmp
xor
addb
adc
adc
pop
and
dec
adc
inc
insl
test
adc
mov
lods
inc
sub
lds
and
xor
add
subb
and
dec
pop
add
test
xor
and
ret
test
mov
add
nop
repnz
push
mov
xchg
jge
adc
sbb
ret
xor
std
add
xor
xor
fsubrl
arpl
sub
add
xchg
adc
push
inc
push
and
insl
mov
push
mov
lcall
lods
jbe
add
dec
cli
inc
adc
sbbb
sbb
inc
dec
ljmp
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
xchg
inc
add
in
lcall
pop
push
xor
push
add
leave
je
js
add
xchg
or
leave
and
mov
jns
xor
lds
nop
mov
out
popf
dec
stos
mov
orb
mov
mov
xchg
sub
xchg
loopne
or
add
ret
int
sub
ret
movsb
mov
bound
sbb
sbb
fidivl
lea
dec
and
cmp
dec
inc
nop
test
mov
fstpl
add
ret
adc
dec
test
sbb
xchg
int3
adc
je
jae
dec
mov
and
sarb
les
add
lods
adc
cltd
cwtl
mov
icebp
adc
mov
andb
lea
xchg
mov
jmp
rolb
stos
dec
cmc
or
or
cmp
fstps
mov
inc
or
mov
add
push
adc
pop
imul
pop
cmp
cmp
and
pop
bound
jge
mov
mov
lock
pop
dec
push
push
and
inc
inc
push
pop
mov
clc
sti
xlat
fisubl
iret
dec
dec
push
cld
in
inc
jo
in
hlt
icebp
inc
ds
jb
add
jecxz
sahf
or
lods
xor
inc
or
lods
or
mov
dec
jb
mov
shrl
sub
addb
add
inc
adcb
sbb
movb
fisubrl
scas
xchg
and
cmp
push
ret
jl
subb
push
rclb
rorb
adc
in
jmp
popf
je
call
pop
mov
and
pushf
stc
loop
pop
mov
mov
daa
add
fs
push
icebp
lock
jecxz
add
xchg
test
rcll
nop
xor
nop
imul
add
hlt
sub
or
out
and
push
xchg
in
sbb
dec
sbb
cmp
in
mov
loop
inc
jmp
cmp
es
xchg
es
or
insl
push
int
mov
jl
std
mov
pinsrw
adc
inc
std
add
add
orb
add
add
out
push
out
or
sahf
out
jl
cltd
scas
rcrb
add
push
aaa
push
jae
jg
jns
add
push
inc
add
push
mov
aas
jbe
fprem1
int3
push
ljmp
inc
aas
dec
pop
inc
add
and
add
incl
orb
jnp
mov
add
adc
mov
rcll
xchg
mov
or
outsl
cmp
adc
jp
lret
pop
mov
incl
nop
add
into
pop
adc
test
dec
testb
push
mov
mov
dec
cld
sahf
or
mov
or
enter
push
jnp
popa
pop
lock
rdpmc
add
invlpg
mov
incl
sub
pusha
mov
pushl
popa
and
insb
outsl
arpl
imul
mov
xorb
sub
popa
arpl
jne
jb
outsb
sti
fisubrl
je
add
das
ss
insl
adc
jnp
subb
inc
outsl
jb
js
je
mov
mov
jae
or
outsl
add
add
add
jge
add
jne
les
inc
cs
mov
jb
and
add
pusha
pusha
daa
add
aaa
or
jl
dec
add
xor
fdivr
mov
inc
push
add
aas
push
add
pop
dec
add
sub
mov
insl
xchg
je
je
and
idivl
dec
fisttpl
out
loopne
mov
insl
push
push
shr
loopne
or
bound
repz
sbb
popa
idivb
xor
insb
jp
fndisi(8087
fisttpll
or
mov
frstpm(287
arpl
lret
aas
rcrb
fisubs
out
outsl
jmp
jo
mov
pop
xor
stos
insl
sub
adc
push
imul
push
cmp
jne
inc
push
data16
xchg
mov
ds
jp
sub
sub
jnp
popa
pusha
sbb
daa
lahf
popa
into
jecxz
adcb
arpl
pop
jnp
inc
or
daa
dec
enter
jbe
fbstp
jge
ja
bound
jnp
ficomps
ficompl
ret
arpl
mov
or
push
xor
sub
mov
xlat
xor
filds
push
jo
scas
das
jb
ret
fiaddl
cs
movaps
pop
or
add
fs
mov
imul
jg
popa
sub
cmp
or
outsl
xchg
pop
push
sbb
lahf
aaa
jg
rclb
pop
dec
iret
push
fists
in
xor
loopne
divl
jb
jne
and
jg
out
sub
xor
stos
bnd
icebp
jbe
push
das
rcrl
jae
shrl
mov
cmp
push
cmp
fistps
outsl
aas
or
arpl
sbb
push
mov
inc
jb
push
xlat
aaa
jge
shrb
jecxz
stos
fs
fidivl
imul
shll
sbb
rdtsc
cmpsl
outsl
loopne
sbbb
sub
pop
xchg
sbb
mov
pop
add
pop
out
jnp
in
pop
insl
lret
je
mov
cmp
addr16
mov
loop
subb
ja
jecxz
push
push
sub
lock
cmp
xor
mov
fldenv
pop
add
mov
or
push
inc
imul
insb
jecxz
push
inc
inc
mov
sahf
adc
das
sbb
testl
fcomps
int
jns
mov
sbb
test
sbb
cmp
das
push
pop
sahf
push
sbb
sbb
repz
cmp
jns
jp
push
cld
js
sahf
out
outsb
incl
clc
mov
addr16
jp
ja
pop
sub
sub
push
push
push
out
mov
fucom
xchg
add
pop
mov
jl
insl
out
xchg
push
or
pop
mov
pop
pop
sti
mov
and
jge
fdivrl
push
xor
mov
and
jns
in
repnz
add
das
das
and
ret
pop
mov
out
dec
ljmp
loope
and
decb
cmc
pop
ret
ret
dec
repnz
jnp
jns
aas
dec
inc
out
pusha
xor
mov
mov
sbb
ds
daa
outsl
jo
mov
dec
and
add
inc
inc
das
pop
mov
ss
imul
iret
jns
rcr
mov
out
and
outsb
sti
adcb
inc
pop
xlat
mov
inc
jae
push
imulb
dec
and
sub
pop
jbe
scas
push
dec
fbld
ds
insl
arpl
mov
mov
xor
es
cmp
cmp
ficompl
sub
fs
dec
and
popf
scas
imul
dec
testb
arpl
bound
dec
outsl
jbe
popa
or
arpl
inc
jo
sub
jne
jne
xor
insb
xchg
outsb
xchg
call
jo
imul
fnstsw
adc
into
mov
jae
xchg
popl
jge
into
jg
addr16
popa
je
jb
xor
mov
jae
push
gs
sbb
idivb
push
jne
dec
outsl
outsb
and
jbe
ja
pop
dec
inc
aas
add
imul
out
dec
or
adc
fistpll
dec
add
insb
jae
push
dec
mov
push
popa
insb
jne
inc
add
mov
add
mov
jmp
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
or
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
insb
jl
test
xchg
pop
pop
pop
pop
pop
or
lcall
arpl
addr16
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
dec
adc
fs
lcall
loopne
pop
ret
mov
orb
sar
lret
repz
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
pop
loope
lds
shrb
outsl
fs
xor
imul
aas
daa
mov
gs
xor
cmp
outsb
bound
add
negl
dec
pop
sbb
icebp
cmp
ret
sub
int3
adc
adc
test
add
add
add
add
adcb
and
push
pop
push
sbb
sbb
hlt
and
add
pusha
fidivrl
into
push
add
inc
add
or
fucomip
into
add
sbb
addb
add
xchg
test
add
neg
cmpsb
flds
push
cmpb
push
and
sub
jb
int3
push
je
fcmovne
jo
add
nop
push
js
and
das
push
outsb
imul
mov
push
jo
add
add
aam
pop
adc
fcmovnb
lock
sbb
add
lea
leave
and
nop
and
xchg
xchg
repnz
in
add
outsb
pusha
sub
hlt
inc
scas
jmp
lret
stos
aad
aad
add
lods
mov
enter
pop
scas
xlat
jmp
push
sbb
cmp
cwtl
xchg
pop
sbb
push
inc
sub
cmp
rdtsc
ss
jmp
dec
inc
je
test
adc
notl
fs
push
mov
xchg
je
cs
jae
rcr
add
xchg
je
outsb
data16
push
add
mov
ss
out
je
xor
xchg
outsl
push
push
xchg
daa
pop
lea
inc
sti
iret
mov
outsl
js
push
xchg
fstpt
xchg
push
and
insl
jo
jo
and
and
ficoml
shlb
aaa
insb
les
dec
imul
mov
mov
inc
cmp
dec
inc
jb
jns
daa
fwait
ret
cmpsb
and
ss
jns
lahf
mov
pusha
je
and
imul
mov
and
cmp
mov
inc
pusha
fsubrl
push
jbe
mov
fcmovnu
cmpsb
fdivl
or
jb
and
mov
xchg
pusha
inc
jbe
push
mov
lahf
fs
insl
es
adc
and
lods
jp
pusha
xchg
sbb
mov
pushw
popl
sbbb
mov
jp
cmp
push
pop
or
push
jo
sbb
daa
mov
dec
adc
or
mov
outsb
mov
lods
mov
push
push
jae
or
cltd
shlb
pusha
insb
call
push
clc
addr16
add
fdivrl
adc
insb
adc
cmp
sti
dec
push
push
push
push
dec
testl
pop
mov
aam
enter
pop
or
loope
or
and
imul
lock
sub
pusha
cmp
mov
enter
das
pop
xor
gs
sbb
ret
mov
lea
or
mov
je
outsl
xchg
daa
xchg
mov
popw
insl
sti
cmp
pop
cmp
cmp
ds
and
push
das
push
sub
ret
frstor
push
addr16
jle
cmp
sahf
imul
add
mov
sub
pop
or
sbb
or
cmp
das
push
jb
aaa
in
mov
outsb
cmp
mov
xchg
xchg
pop
pop
jne
push
xchg
stos
addr16
push
jbe
add
das
jo
ss
gs
imul
mov
sbb
fdivl
dec
sbb
sahf
inc
int3
cmp
fs
jo
sub
mov
jl
out
sub
cmp
repz
push
push
dec
cmp
and
ds
repz
or
sub
mulb
push
cwtl
orb
fdivrs
out
push
aam
int3
enter
sahf
out
mov
lods
test
movsb
repz
cmp
mov
mov
idivl
xchg
adcb
push
sahf
out
dec
jl
push
jo
cmp
repz
fs
pop
pop
repz
repz
push
dec
inc
xor
stc
cmp
sub
or
sub
sahf
out
sahf
enter
dec
and
dec
repz
in
les
jo
fs
xor
sbb
lock
lahf
out
sahf
test
pop
sub
in
sub
jl
ja
push
pushf
jo
sub
pusha
lcall
lock
faddl
add
jb
test
and
mov
ss
addl
mov
addb
push
sbb
add
xchg
sub
inc
or
jbe
addl
imul
push
adc
movl
add
add
mov
jnp
or
jnp
push
pop
fildll
or
cmp
or
test
mov
call
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
rcl
call
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
test
std
push
repz
cmc
div
clc
stc
cli
sti
cld
std
jmp
or
sub
call
sub
push
test
push
adc
js
popa
data16
add
cmc
pusha
pop
shlb
cmc
out
xor
add
fiaddl
data16
daa
fidivs
add
push
arpl
jecxz
sti
sub
fs
sbb
jns
je
xor
jp
mov
jne
iret
decb
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
xor
test
cmove
push
shrl
mov
adc
adc
pop
dec
rolb
popa
into
mov
mov
out
xor
jnp
inc
loop
mov
ds
pop
adc
call
or
cli
jb
jge
arpl
pop
in
dec
scas
jp
jno
in
fstl
nop
mov
and
cmp
dec
imul
jmp
iret
lret
add
inc
mov
mov
sub
pusha
pop
imul
ds
xor
mov
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
mov
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
call
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
addr16
leave
or
insb
mov
out
leave
ljmp
add
loopne
dec
test
shrl
leave
hlt
std
aas
jl
adc
xchg
dec
add
scas
lods
dec
lock
xor
adc
fistps
into
or
icebp
pop
pop
repnz
fistpl
sub
lret
es
sbb
or
and
shlb
dec
or
daa
and
xor
inc
jmp
fistpl
fdivrs
sub
sub
mov
inc
inc
loopne
and
mov
inc
out
clc
xchg
dec
xchg
pop
and
sti
and
out
into
inc
cmp
outsb
addr16
es
repnz
jae
lret
cmp
and
or
sbb
mov
sub
loope
xlat
bound
jg
aas
fldt
je
aaa
pcmpeqw
sti
sub
rorl
ja
popa
daa
sub
cmp
add
je
jmp
jae
insb
add
push
sub
addr16
sub
jmp
xchg
lret
xchg
cmpsl
lock
fstpt
shll
inc
jb
add
or
pop
jae
xorl
push
stos
add
outsl
test
inc
imul
sbb
divl
jae
insl
div
outsb
js
mov
mov
mov
and
add
sub
jmp
addl
adc
out
fbstp
push
test
aaa
adc
jno
mov
shll
mov
inc
pop
rol
jnp
cmpsl
int3
push
lds
loopne
fdivs
inc
jecxz
or
out
sti
arpl
jns
out
mov
xchg
jg,pn
jg
imul
push
push
or
adc
jmp
pop
hlt
push
out
js
sub
push
lods
mov
cmpsl
out
add
push
mov
cmp
pop
ret
jge
ret
jne
adc
xorl
dec
push
out
mov
shll
imul
add
xchg
cmp
divl
cmp
out
rorb
inc
xchg
mov
sub
insl
ret
dec
dec
fisubrs
and
push
loope
xchg
gs
test
jmp
dec
jp
xchg
or
pop
xorb
jecxz
mov
mov
dec
adc
ja
out
push
cmp
cmp
jle
out
xlat
addr16
je
imul
aas
shlb
pop
arpl
add
movsl
sbb
pop
gs
jne
xor
cmp
and
and
andl
filds
rol
pop
stos
pop
inc
cs
mov
mov
add
outsl
fiaddl
mov
mov
xor
aas
arpl
sub
inc
aad
pop
lret
sub
inc
sub
ja
lods
and
ss
jne
or
cmp
aas
mov
adc
into
mov
pop
aas
pop
jecxz
addr16
push
ds
mov
push
arpl
call
test
and
mov
add
sub
dec
popa
jae
sbb
test
data16
or
dec
add
xor
icebp
jle
or
shll
push
mov
pop
dec
aaa
pop
xchg
jbe
fmuls
pop
jnp
sbb
push
and
jecxz
pop
aad
stos
outsl
subl
sub
pop
sbb
dec
aas
jecxz
test
push
inc
pop
daa
jne
aas
dec
sbb
outsl
dec
push
movlps
fwait
push
sbb
lcall
adc
shl
inc
push
ret
js
clc
mov
idivl
xchg
mov
push
loopne
inc
outsb
out
imul
jb
sub
shll
xor
add
jecxz
mov
out
pop
push
fiaddl
mov
mull
bound
jae
push
pop
mov
addr16
sti
and
xor
bound
pop
js
push
or
outsl
out
dec
inc
mov
outsl
sub
shrl
daa
lahf
mov
mov
ja
jcxz
and
outsl
cmpsl
cs
loope
jmp
add
in
mov
dec
mov
insl
mov
out
inc
push
inc
mov
imul
mov
push
outsb
clc
dec
insb
xchg
inc
inc
add
sbb
jmp
outsb
xor
mov
shrl
ss
mov
dec
sbb
daa
addb
xchg
je
pop
dec
push
jl
jo
jmp
insb
aas
pop
sti
pop
adc
addr16
cmp
sti
sub
sub
cmpsl
cmpsl
pop
pcmpgtd
pop
pop
sbb
mov
and
cwtl
inc
jle
inc
mov
mov
mov
inc
jl
jl
mov
fsubl
imul
push
xchg
cmp
inc
pop
out
mulb
and
addr16
bound
pop
mov
push
das
fnstsw
mov
in
subb
cmp
jns
jae
ja
pop
gs
jl
push
ja
jno
adc
jl
mov
pop
pop
jnp
sbb
jmp
repz
es
ja
into
xor
mov
imull
outsb
cs
push
mov
arpl
lock
mov
jae
jno
negl
insb
sub
shl
dec
outsl
lret
jl
jo
call
cmp
mov
mov
pop
mov
push
mov
roll
imul
push
imul
xchg
jl
repnz
orl
xchg
pop
adc
clc
fdivs
push
add
and
jne
mov
mov
mov
outsl
push
jo
pusha
inc
jle
fistl
fisttps
xlat
aaa
sbb
movsb
adc
inc
divl
jnp
jnp
pop
inc
jns
jae
data16
fs
inc
lock
pop
fisttps
add
jg
sbb
cli
add
jecxz
sbb
mov
test
pop
pop
pushl
pop
std
xorl
pop
data16
rolb
jnp
aaa
push
or
inc
pusha
cmp
mov
popa
popl
je
aaa
es
pop
fildl
adc
xchg
addr16
js
mov
push
add
sub
push
add
push
sbb
dec
push
in
jnp
dec
sub
sbb
ss
in
cli
lcall
jge
in
mul
lret
ss
inc
pop
cwtl
ss
push
imulb
mov
add
outsl
sbb
stc
mov
mov
rcll
cmp
push
out
int
movsl
push
stos
add
pop
push
mov
push
inc
push
inc
jg
push
mov
es
jl
scas
fnstcw
test
push
and
or
fcomp
sarl
add
aas
pop
mov
into
dec
pop
out
push
pop
jns
sub
adc
fisubs
je
and
fistpl
lods
push
int3
sahf
xlat
mov
inc
outsl
jg
push
loope
jnp
sarl
sbb
push
mov
pop
push
push
outsb
dec
fdivp
mov
iret
pop
aaa
dec
and
push
adc
aam
add
insl
ja
outsl
jo
jns
push
mov
pop
sbb
sub
cmpsb
dec
push
add
add
lret
les
sti
aas
mov
popa
push
jae
xchg
xchg
pop
fs
and
ret
sbb
push
gs
insl
pusha
push
popa
jne
or
dec
pop
and
dec
bound
xor
pop
sub
and
imul
jae
push
loop
decl
iret
repz
sbb
push
and
jnp
mul
clc
cmp
add
dec
push
pop
push
lahf
out
sahf
bound
shl
jbe
lahf
divl
popa
or
mov
cmp
aaa
clc
dec
xor
cmp
gs
sub
cltd
pushf
je
cmp
push
push
or
push
push
jo
jb
into
jb
pushf
mov
add
and
jae
sbb
subl
xor
and
and
and
arpl
les
sti
xor
cmp
fs
adc
adc
adc
imulb
mov
outsb
je
adcl
imul
dec
outsw
sub
ja
or
cmp
sbb
aaa
push
movsl
xchg
out
mov
inc
popf
adc
daa
imul
add
sub
sub
push
scas
fdivl
inc
push
ja
push
mov
scas
ltr
jbe
rcrb
cmpl
insl
or
pop
pop
inc
or
insl
xlat
cmc
insb
inc
cli
mov
push
and
mov
aaa
add
xchg
cmpsl
add
sahf
mov
inc
ds
dec
cmp
rclb
mov
idivb
sbb
or
add
rclb
faddl
sub
or
push
push
or
xor
or
push
cmp
mov
ja
out
mov
imul
add
fcomps
mov
ja
and
fs
clc
and
fs
bound
jle
out
enter
aaa
inc
or
sbb
lahf
scas
push
rcrl
mov
scas
pusha
imul
inc
cmp
ret
mov
or
jmp
pop
mov
sub
mov
pop
jo
cmpsl
mov
cmp
mov
outsb
fcoml
ss
sti
mov
loop
mov
mov
dec
pop
add
push
xchg
ret
fs
mov
or
lea
dec
inc
inc
add
push
mov
mov
mov
or
mov
stos
scas
imul
xor
xlat
scas
pop
push
shlb
ret
push
lea
cmp
ret
add
add
shlb
add
and
sub
gs
pop
int
imul
lods
lods
jp
jp
pop
pop
fidivrl
add
mov
iret
aaa
cmp
push
pop
bound
and
rolb
nop
aas
jb
fs
sub
dec
push
add
clc
inc
lods
icebp
lcall
mov
inc
pop
iret
jle
adc
pop
iret
repz
sbb
push
cmp
repz
andl
or
cltd
or
xchg
pop
pop
dec
or
in
xor
or
stos
mov
add
das
adc
mov
insb
jns
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
add
shrb
ret
insb
ss
cltd
sub
shrb
xchg
pop
adc
fsts
and
add
fldcw
xchg
rclb
lret
verr
loopne
lea
shlb
push
dec
jl
stc
das
incl
pusha
into
mov
ds
icebp
imul
sub
pop
mov
xor
clc
out
repz
in
cmpsb
pop
xchg
fidivl
inc
push
call
ret
add
das
xchg
push
nopl
push
dec
into
sub
in
adc
sti
ja
and
mov
sti
iret
add
pop
and
sbb
add
pop
or
push
inc
outsl
inc
push
fiaddl
sbb
outsb
mov
arpl
xchg
adc
jne
inc
pop
pop
mov
sub
push
jmp
stos
fs
fnstsw
mov
outsl
cmpsb
sub
jns
sub
jo
movsb
or
mov
mov
pop
xlat
cmpsl
dec
stos
pop
push
jae
popa
insl
dec
shlb
es
mov
mov
das
xchg
hlt
or
addr16
push
push
mov
adc
cmp
or
dec
lods
iret
xlat
mov
sub
arpl
divl
pusha
das
and
cmpsl
push
sub
ljmp
cmpsb
mov
lea
ds
sub
sarl
xchg
stos
out
or
add
imul
add
sbb
jno,pt
jbe
or
aaa
push
add
rolb
fwait
imul
inc
inc
push
aad
fldl
sti
cmpsb
aas
rcrl
sbb
inc
jae
mov
xor
jbe
aaa
fwait
sub
pop
ret
and
and
mov
cmp
or
js
imul
xchg
pop
inc
and
shrl
push
loope
pop
outsl
es
push
add
nop
lcall
sub
mov
mov
mov
ret
lret
fistpl
arpl
scas
bound
pop
push
xchg
data16
sbb
mov
pop
xor
pop
mov
inc
outsb
cmp
outsb
cmp
ficomps
push
sub
push
xchg
inc
jmp
insb
mov
ret
push
add
lahf
sti
test
cmc
add
insb
cmp
add
inc
push
pop
xchg
mov
jnp
jb
aad
aad
xlat
pop
push
ficoms
xor
inc
fstpt
lahf
adc
xor
add
sbb
addr16
jo
cmp
je
lahf
xorl
notb
jbe
add
pop
es
scas
ja
jo
pop
inc
outsl
daa
jl
mov
repz
push
cmpsl
sub
or
pop
xlat
sbb
movsl
xor
inc
dec
pop
clc
fnstcw
and
mov
aaa
dec
iret
mov
adc
scas
fbld
fcoms
adc
mov
aad
ljmp
mov
or
cmp
adc
arpl
imul
push
inc
lahf
bts
aaa
loope
fadds
inc
sbb
inc
mov
add
xor
sub
aaa
es
enter
insl
push
outsl
xchg
pop
das
or
cs
outsl
push
inc
dec
bound
cmp
ss
add
sub
pop
sbb
out
xor
out
call
outsb
adc
add
out
xor
jnp
stos
add
mov
rcll
sahf
xor
add
mov
frstor
fsubrs
mov
les
rcrl
push
jmp
aad
mov
mov
ss
cmp
adc
mov
mov
push
or
xchg
and
adcl
push
mov
fsubs
pop
aas
ja
adc
jae
or
out
lcall
outsb
and
dec
bnd
sub
dec
cmp
es
mov
cs
lret
sub
mov
add
sub
adc
jno
or
inc
cmp
inc
lar
xchg
jb
stos
push
mov
push
mov
push
xor
aas
push
or
push
sbbl
add
jl
orl
jmp
pop
pop
fildl
and
repz
push
stos
adc
scas
lods
mov
push
or
ret
sbb
gs
mov
iret
jp
pop
call
dec
jmp
jae
insb
je
mov
jnp
push
sbb
mov
mov
xchg
aas
nop
inc
push
mov
mov
fists
push
stos
shlb
wbinvd
mov
and
iret
sub
fcomps
nop
push
in
pop
jae
jl
or
gs
int
daa
adc
mov
jl
iret
shll
pop
sbb
iret
sarl
xchg
add
clc
add
inc
call
add
fwait
mov
icebp
outsb
push
and
and
inc
dec
fwait
icebp
fisubrs
push
push
mov
outsb
bound
adc
out
xor
pop
inc
das
mov
sbb
cmpsl
loop
loop
arpl
lret
mov
xchg
imul
inc
inc
lods
aas
add
add
jmp
out
xchg
orb
dec
sub
adcl
sub
pop
xor
xchg
mov
sbb
aas
add
dec
add
lcall
pop
pushf
ret
jge
int3
jbe
mov
sbb
ret
adc
or
repz
push
fistpl
pop
or
test
dec
lds
jnp
aaa
add
das
sbb
adc
enter
iret
outsl
inc
lods
push
adc
lahf
das
shrb
and
sahf
mov
inc
sub
mov
or
or
push
add
pop
push
rcr
xlat
and
xchg
push
addl
mov
daa
movb
pop
addb
repz
addr16
vcvttps2dq
ficomps
xor
std
adc
out
jnp
jge
jbe
sbb
enter
inc
push
and
mov
rcr
cs
add
xor
fists
pop
mov
scas
add
push
insl
pop
push
or
sub
jae
aam
orl
add
sti
xchg
lgs
arpl
bound
ja
js
mov
pop
mov
pop
mov
in
negl
mov
fidivs
cli
push
push
sti
lcall
cs
jecxz
pop
and
fsub
in
cltd
dec
mov
loope
sub
pop
dec
hlt
loopne
xchg
stos
movsb
push
add
xchg
mov
xchg
push
leave
push
or
cmpsb
fs
leave
push
repnz
sbb
dec
pop
and
stos
in
sub
fistl
xor
sub
fimull
in
xchg
in
jb
inc
in
fmuls
xchg
test
xchg
mov
and
mov
in
cltd
dec
pusha
or
push
leave
stos
mov
xchg
pop
adc
push
xchg
dec
and
in
enter
mov
rcll
push
xor
movsl
xchg
shr
loop
cmp
les
mov
xor
jg
shlb
add
and
mov
xor
pop
aaa
jmp
rorl
je
cmp
movsb
insl
and
inc
shlb
loope
ret
je
or
mov
insb
xor
fadds
pop
das
inc
xlat
adc
adc
xor
sbb
out
dec
or
es
pop
inc
adcb
sbb
xchg
jae
mov
test
sbb
push
adc
mov
mov
repz
or
mov
inc
xchg
xor
jne
mov
dec
cmpsl
inc
xorl
mov
mov
add
xor
pusha
aam
aas
push
inc
dec
xchg
out
pusha
jmp
or
push
das
sub
sub
aaa
inc
mov
inc
sti
pop
push
scas
addr16
int
es
inc
lds
lea
inc
adc
pop
adc
hlt
push
scas
cmpsl
lahf
add
xchg
mov
pop
inc
sub
mov
push
and
and
and
popa
and
mov
mov
sbb
aaa
push
call
cmp
das
out
aaa
and
xchg
inc
iret
loope
mov
fadds
rorl
adc
sub
aaa
outsl
sub
shll
sti
push
aas
mov
les
gs
inc
sarb
das
mov
pushl
xchg
mov
mov
sbb
mov
mov
fwait
lret
call
push
sbb
aam
repz
cmp
add
call
mov
jg
jbe
mov
mov
popa
xor
add
arpl
loopne
xchg
xlat
mov
fisttpl
popa
xor
mov
arpl
mov
inc
inc
orl
mov
sub
jnp
add
sub
or
pop
sub
and
push
xchg
fdivrs
inc
es
and
add
xchg
out
aaa
sbb
sti
cmp
addr16
mov
sub
adc
je
or
push
rorb
insl
je
jnp
mov
dec
sub
mov
les
cmp
movsb
pop
sbb
mov
imul
xchg
jae
pop
inc
mov
push
ja
scas
add
add
loope
divl
imul
mov
mov
push
out
mov
xor
xor
mov
loopne
daa
outsb
xor
xorl
dec
bound
sarb
ja
adc
faddp
xorl
popa
jae
js
outsl
jae
imulb
js
fs
pop
daa
sbb
xchg
push
adc
push
clc
fucomip
push
loopne
int3
sbb
add
sbbb
jne
repz
dec
or
add
jae
xorl
in
popa
inc
adc
rorb
les
mov
dec
push
adc
imul
outsb
or
stc
cmp
sbb
addr16
fcmove
rclb
pop
push
pushf
push
inc
or
push
pop
inc
mov
xor
sub
pop
lods
add
xchg
pop
jb
xchg
rolb
adcl
push
jae
imul
pusha
je
imul
das
jmp
xor
scas
push
cs
fsubs
loop
push
fistps
jmp
mov
add
gs
out
mov
cmp
xor
stos
movsb
xor
xor
lock
adc
stos
mov
dec
cmovno
or
pop
cmp
mov
out
add
add
mov
aas
mov
bound
insb
adc
out
cs
inc
sbb
cmpsl
movsb
inc
mov
xor
push
mov
pop
movsl
jno
add
inc
lods
mov
addb
arpl
sbb
imul
xchg
shrb
xchg
cltd
push
jecxz
xor
scas
dec
insl
lock
loop
outsb
sub
in
sahf
cs
cs
cmp
mov
push
sahf
cs
xor
push
repnz
out
es
and
loopne
push
jae
xor
adc
in
fidivrs
inc
xchg
cmp
inc
pop
ret
cmp
jnp
fs
dec
sub
into
xchg
fcmovb
xchg
jmp
jecxz
pop
pop
in
pop
scas
dec
shlb
or
inc
or
loopne
stos
jle
js
xor
fucom
jmp
inc
cmp
xchg
ficomps
dec
or
inc
push
mov
out
inc
and
ss
push
dec
repz
push
fimull
pop
incb
mov
xor
ret
lds
outsb
jb
loop
pop
mov
push
cmpsb
xchg
ja
pop
das
jge
ret
pop
lret
inc
popaw
sub
pop
mov
xor
stos
inc
mov
arpl
sub
arpl
fs
sub
ds
mov
cmp
xchg
dec
dec
daa
jge
fidivs
mov
scas
jnp
out
inc
push
packssdw
inc
jnp
sbb
push
sbb
dec
ss
outsb
jnp
fidivrs
daa
dec
jb
das
xor
pop
dec
es
das
add
pop
out
mov
and
or
xchg
jne
sysexit
mov
cs
sahf
xchg
push
push
mov
mov
push
scas
push
in
mov
insl
push
inc
ja,pn
xor
push
jns
lds
jp
jp
ds
fucomi
loope
fiaddl
jg
dec
das
xor
fisttps
jp
pop
fstpl
mov
dec
xor
loopne
push
into
xor
cmp
push
dec
cs
push
dec
outsl
push
dec
and
pop
data16
add
lcall
sub
dec
dec
out
mov
imul
sbb
lret
fistps
insb
cmpsl
jo
jnp
adc
jnp
add
jbe
jnp
js
aas
add
fldt
dec
lea
test
jae
pusha
adc
xchg
mov
mov
mov
mov
xor
out
scas
mov
sahf
add
ret
xchg
mov
mov
cmp
data16
shlb
dec
adc
pusha
mov
mov
mov
pop
in
pop
push
addl
and
arpl
andb
mov
arpl
pop
shrl
repz
add
mov
addl
push
cmp
dec
dec
daa
jbe
scas
add
sbb
dec
lret
inc
jo
add
sbb
scas
cmp
dec
push
je
mov
mov
shrl
insb
xor
mov
sbb
adcl
xor
pop
mov
mov
and
mov
call
outsl
popa
fs
outsl
mov
test
lods
push
add
pop
je
in
add
inc
fs
or
aas
sub
sbb
andl
sbb
adc
out
scas
js
sub
inc
sbb
push
add
sbb
mov
xchg
push
xor
addr16
xor
push
xor
icebp
arpl
xlat
add
aaa
jb
repz
int3
dec
ja
pop
imulb
mov
jl
fsub
xchg
pop
and
lods
or
push
jo
sahf
out
outsl
jle
fs
pop
mov
mov
inc
insb
xlat
pop
xor
pop
mov
cmp
jo
arpl
xor
notl
push
jae
pop
xor
punpckhbw
cmc
push
stos
adcb
and
pop
sub
pop
repz
inc
lea
xlat
jae
dec
adc
cmp
xor
push
daa
mov
add
lahf
lea
add
xchg
inc
dec
insb
sbb
add
or
xorb
push
sub
inc
fldt
mov
outsl
ret
outsl
adc
sub
pop
adc
sub
push
sub
lahf
sub
test
xlat
add
das
jecxz
shrb
rolb
push
inc
sbb
mov
lcall
mov
mov
and
dec
push
popa
les
arpl
iret
inc
das
mov
and
lahf
popa
sbb
and
imul
movsb
pusha
add
or
repz
xchg
test
push
push
lret
pop
and
push
pop
xor
call
inc
pop
dec
dec
orl
daa
jns
add
das
mov
aaa
iret
fbld
dec
lods
xchg
outsb
dec
arpl
jae
daa
test
dec
xorl
inc
testb
pop
jae
push
das
repz
push
pop
mov
outsl
pop
xor
aaa
sub
rcll
xor
push
fs
mov
add
movsl
fildl
cmp
push
lods
jp
sub
adc
loopne,pn
adc
push
pop
mov
lock
inc
jmp
std
fisubrl
mov
sbb
or
cmp
xchg
mull
imul
lahf
sub
subb
xlat
and
xchg
loopne
or
popa
out
data16
jmp
pop
outsl
clc
out
leave
jmp
sub
inc
das
pop
mov
dec
xchg
push
in
inc
dec
add
daa
sar
dec
nop
and
mov
mov
mov
sbb
ljmp
mov
mov
call
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
or
jle
jo
fsubs
sbb
decl
cmp
dec
pop
dec
xchg
jge
mov
push
pop
add
pop
inc
jbe,pn
adc
adc
outsl
call
hlt
or
xchg
dec
sub
nop
ss
push
ss
pop
jmp
push
insl
pop
pop
dec
inc
mov
rolb
inc
mov
rolb
lds
xchg
cmp
sbb
ret
push
dec
sub
cmp
cs
or
cld
fwait
dec
cmp
in
fdivrl
das
int3
xor
mov
xor
cmp
mov
and
jns
pop
inc
outsl
xorb
mov
or
lcall
ds
inc
mov
inc
cld
pop
dec
xchg
aaa
imul
dec
xchg
fmuls
dec
ret
or
pop
fwait
add
je
pop
xor
shll
cmp
ss
jge
mov
sub
adc
xchg
or
cmp
adc
loopne
inc
mov
jecxz
cmpsb
jp
mov
inc
cwtl
adc
xchg
adc
add
nop
stos
aaa
inc
dec
push
jp
es
mov
data16
aas
daa
bound
je
bound
imul
xor
add
pop
scas
sbb
sub
add
add
aas
aaa
daa
dec
shrb
aas
fsubs
je
aaa
push
out
cmp
jae
inc
mov
adc
xchg
xor
scas
pop
mov
push
xor
rcll
xchg
stos
pop
dec
push
test
mov
scas
cmc
fidivs
sub
and
xor
pop
addr16
jmp
lcall
push
mov
xchg
mov
xchg
jne
jmp
call
bound
and
cmpsb
fst
mov
add
insb
inc
dec
and
xlat
adcb
out
test
lock
sbbl
pop
data16
cmpsb
test
repz
cmp
sarl
cmp
add
bound
dec
adc
je
add
pusha
mov
jbe
daa
xchg
pusha
fsubrs
pop
xchg
dec
ljmp
bound
dec
imul
cmpsb
dec
push
add
cli
xchg
pop
jae
add
cltd
pop
adc
es
xchg
lahf
test
repz
pop
mov
lret
ficomps
inc
xlat
and
sarl
push
push
jbe
cld
xor
jl
sbb
hlt
cwtl
adc
or
cmc
cmpsl
pop
mov
int
fwait
pop
adc
ds
mov
push
daa
mov
fs
es
leave
xchg
inc
out
add
xchg
aam
jnp
cmp
inc
cld
pop
add
sysret
mov
mov
aaa
push
pop
mov
xchg
fnstcw
scas
call
cmpsl
imul
shl
lcall
into
xchg
das
es
push
lea
pop
mov
stc
mov
ds
mov
cs
lods
inc
ds
repz
add
mov
dec
pop
push
push
adc
sbb
push
or
push
fists
out
mov
daa
xor
jg
aad
xor
idivl
sub
pop
push
lea
popf
ficoms
sti
xor
notb
pop
mov
sub
dec
push
pop
push
jae
mov
mov
push
dec
pop
out
out
ret
pop
outsl
push
and
mov
aas
sbb
fiadds
xchg
xchg
xchg
pop
push
fistpll
xlat
or
loope
push
cmp
cs
imul
pop
clc
call
hlt
sahf
idivb
push
std
out
imul
das
push
jmp
es
pop
pop
jnp
fst
push
jg
inc
popa
sbb
repz
shll
mov
xor
sahf
dec
mov
imul
add
lahf
out
fldl
test
mov
nop
sbbl
std
xchg
dec
or
jns
out
dec
jle
ret
in
cmp
repz
push
jge
repz
iret
roll
dec
pop
push
subb
negl
push
cs
out
sahf
push
insb
xchg
mov
clc
pop
xor
jl
push
das
das
iretw
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
fimuls
xor
adc
mov
mov
pop
push
mov
das
jbe
jg
loopne
mov
jbe
inc
mov
and
pop
sbb
ljmp
in
enter
adc
or
adc
aas
pusha
or
bound
pop
mov
pop
adc
dec
mov
movsb
push
dec
cmp
mov
lock
xlat
mov
add
clc
push
adc
iret
or
push
imul
jp
xor
push
js
mov
imul
cmp
xor
dec
addr16
dec
xchg
cmpsl
jp
xchg
mov
and
lods
xchg
pop
fildll
stos
cltd
fisubrl
add
dec
jo
js
rcrb
push
push
dec
dec
inc
outsl
and
test
je
and
adc
fadds
lahf
clc
push
or
push
mov
data16
mov
out
pop
push
ret
mov
cs
decl
mov
fisttpl
es
adc
cmpsl
push
pop
fisubrs
push
rorl
sub
inc
sub
mov
lahf
pop
sub
mov
pop
out
push
hlt
lock
addr16
mov
subl
aaa
outsb
loopne
notb
or
pop
cmp
xlat
cmpsl
jo
pop
pop
daa
fwait
push
jo
inc
lret
sbb
dec
jno
push
mov
inc
push
mov
jecxz,pt
outsb
insl
mov
in
frstor
push
cmp
push
sbb
xchg
fs
arpl
jae
imul
imul
sub
sub
pop
out
mov
data16
jns
mov
sub
push
adc
xor
jae
push
add
mov
add
leave
add
xor
daa
or
lods
sub
daa
xchg
ss
xchg
add
pop
cmp
xor
arpl
push
push
decl
fs
jo
xor
imul
pop
loope
bound
outsb
push
jnp
or
dec
dec
adc
inc
inc
sbb
lods
cmpsl
inc
ret
mov
inc
dec
and
add
lock
clc
ja
addr16
cs
jecxz
pop
fdivs
push
cmp
stos
sub
ret
inc
mov
sbb
or
bound
inc
and
sbb
aaa
mov
mov
push
adc
shrb
or
lea
movsl
test
sub
push
call
push
das
and
pop
mov
cmpsb
sbb
pop
addr16
arpl
testb
jae
and
sub
fs
mov
das
and
pop
or
fisttpl
jo
pshufw
das
or
out
data16
shll
lods
dec
lret
dec
mov
shll
sub
shlb
pop
pop
dec
mov
rcll
mov
icebp
popf
cs
popw
outsl
aaa
lea
mov
inc
jmp
push
xchg
das
ss
cs
inc
das
push
clc
sub
pop
popa
imul
xorb
popl
sbb
test
imul
bound
xchg
fiadds
push
popl
pop
xchg
sub
add
add
repz
lret
jecxz
out
inc
into
inc
inc
pusha
dec
sbb
or
cmpsl
lahf
imul
mov
dec
cmpsl
sub
dec
add
aas
cmp
pop
adc
sbb
cmp
lods
iret
pusha
sub
pop
sahf
and
xchg
add
sub
sub
aas
push
mov
mov
xlat
pop
add
mov
stos
xchg
add
ja
add
push
test
mov
pop
imulb
push
inc
daa
sbb
in
in
cli
cmp
dec
push
or
loop
inc
cmp
ljmp
pop
inc
ss
mov
dec
dec
inc
shrl
inc
aaa
or
addl
jmp
xor
pop
notl
add
and
jnp
pop
fistpl
sbb
loope
jg
add
push
jne
inc
cmpsl
push
call
pop
icebp
push
adc
inc
inc
clc
outsb
add
inc
pop
pop
pop
or
inc
pop
push
or
add
jns
je
add
movsb
mov
icebp
pop
push
xchg
das
push
sbb
repnz
and
rclb
out
cmpsl
cmpsl
es
insl
jo
je
pop
out
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
xadd
push
xchg
xchg
adc
insb
pop
sub
or
pop
out
jns
je
jne
or
bound
mov
xor
ja
out
mov
jae
lret
sub
out
ds
movb
mov
mov
mov
je
adc
imul
dec
orb
clc
gs
push
test
jbe
inc
and
xor
mov
push
arpl
nop
mov
testl
out
pop
stos
add
rolb
bound
cmp
dec
jecxz
jg
mov
adc
pop
pusha
mov
push
push
adcb
jmp
test
push
mov
cmpsl
pop
dec
jne
push
pop
daa
fwait
sub
push
test
bound
loop
inc
cmpsl
in
aam
jns
jb
add
sahf
iret
mov
add
mov
push
ret
pusha
or
xor
adc
out
inc
push
inc
fldt
or
aaa
inc
insb
addb
jp
pop
daa
out
pop
mov
sbb
pop
sbb
jb
out
or
mov
jmp
les
add
push
pop
nop
cmp
aaa
incl
dec
inc
dec
push
xchg
add
rcll
je
pop
dec
fidivs
fidivrl
jg
ret
movl
add
pop
adcb
add
add
push
lahf
incl
add
call
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
incl
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
incl
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
ljmp
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
decl
sbb
mov
call
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
ljmp
movsl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
incl
rep
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
ret
js
sbb
mov
pusha
dec
pop
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
push
or
and
dec
or
or
inc
pop
lahf
ss
sub
pop
gs
subb
fistpll
push
push
mov
inc
popw
push
sbb
aaa
push
cld
xchg
sub
add
daa
push
mov
sbb
outsl
adc
sub
sub
lods
mov
and
xor
inc
pop
xchg
inc
lahf
int
mov
push
pop
mov
mov
int
int3
mov
xlat
jl
sbb
adc
xor
xor
jbe
scas
sar
mov
push
push
inc
cmp
inc
cmpsb
cs
mov
out
sub
jne
sub
and
pop
mov
adc
outsl
pop
or
mov
jae
sub
pop
testl
push
inc
dec
jbe
in
dec
imul
xor
push
cmp
xor
and
xor
dec
jb
rcr
adc
ja
out
push
imul
inc
enter
mov
out
and
bound
mov
test
push
imul
shlb
cmp
or
mov
movsb
outsl
je
mov
popa
stos
rcrb
mov
out
testl
sub
push
loop
rolb
js
ret
dec
inc
sti
int3
int3
or
and
push
fnsave
add
push
add
outsl
fs
out
xchg
gs
jo
jns
iret
inc
mov
and
adc
pop
dec
les
outsl
insl
jne
shrb
jnp
fiadds
les
add
cmp
and
push
inc
je
bound
clc
or
aam
inc
insb
aas
jbe
jg
mov
pop
inc
popa
imul
inc
sahf
loop
outsb
mov
xor
fidivrl
pop
add
gs
fcoms
jnp
ret
orb
inc
or
inc
mov
outsb
xadd
sbb
inc
cmovo
addb
adc
cmpb
aas
js
insl
pop
nop
jo
maxps
loopne
mov
mov
mov
inc
movups
xchg
mov
dec
adc
or
xor
test
das
sbb
dec
insb
dec
add
sbb
jbe
lret
out
hlt
daa
ds
mov
shlb
testl
enter
push
inc
push
jmp
jmp
pop
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
enter
sub
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
sub
fs
push
mov
push
fcompl
adc
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
jl
inc
mov
mov
outsl
jle
pop
lods
pop
jb
mov
and
mov
lret
jno
outsl
adc
outsl
add
mulb
in
lret
dec
add
out
dec
mov
rep
negl
push
sbb
cmpsb
pop
and
jle
inc
mov
lret
in
adc
inc
cs
movl
filds
xor
xchg
rep
sub
js
repnz
enter
js
pop
jb
pusha
movsb
lods
enter
mov
and
lods
sar
or
outsb
addr16
aas
add
nop
int
mov
int3
sbb
pop
push
movsb
das
inc
daa
repnz
in
push
outsb
xchg
xor
aas
es
pop
add
dec
sahf
or
in
iret
lds
nop
push
aam
mov
sahf
mull
cmpsb
int
xor
inc
push
nop
enter
dec
aas
ja
pop
repnz
lahf
aam
cmp
add
test
nop
int
movsb
inc
sub
cs
scas
hlt
ja
inc
cs
aam
lock
fsubrs
cmp
inc
daa
lock
pop
pop
addr16
inc
enter
fstpt
testl
mov
mov
xchg
pop
add
add
bound
adc
insl
shrl
push
sub
push
sahf
outsl
mov
inc
cs
xchg
jo
pop
jnp
mov
mov
daa
add
mov
pop
mov
mov
jae
in
cld
add
das
in
sbb
in
and
jnp
inc
ss
inc
push
test
push
xchg
dec
in
add
jl
stos
shrb
cmp
jnp
jo
pop
int3
mov
mov
sbb
add
roll
dec
in
dec
add
pop
enter
rorb
inc
sahf
or
imul
lret
inc
sahf
or
sbbb
lahf
or
or
xor
pop
enter
cmp
nop
mov
lahf
pusha
enter
ja
mov
lods
mov
iret
test
faddl
cld
mov
fsub
sub
pop
xchg
sbb
pop
cmp
push
shl
fcompl
xchg
fcoms
jg
negl
or
adcb
pop
frstor
test
cmp
in
pop
and
jae
cmpsl
cmp
fwait
nop
iret
test
aam
push
or
dec
push
dec
fisubs
imul
jl
and
repnz
in
mov
iret
test
rcrb
hlt
nop
fbstp
in
and
adc
fiadds
loopne
in
repz
pop
and
and
enter
js
pushf
fadds
cmpsl
js
jae
iret
dec
int3
fdiv
jl
add
fiadds
xor
inc
pop
and
sti
push
and
cmpsl
js
mov
mov
push
mov
dec
add
and
aam
and
repnz
les
adc
and
insl
orl
jae
int
lahf
and
fs
mov
enter
fs
iret
test
les
pop
enter
fwait
sub
pop
js
fadd
adc
stos
jo
ljmp
sahf
jg
test
pusha
push
shl
push
cmpsl
inc
sahf
or
inc
sahf
out
rcr
loopne
mov
into
add
xchg
lcall
addr16
ficomps
insb
xor
push
push
shl
inc
fs
addr16
sahf
or
test
bnd
addr16
out
scas
jbe
lahf
test
and
or
sbb
jbe,pn
xor
iret
test
pop
jo
aas
subb
out
lcall
and
in
push
push
cmpsl
mov
pop
hlt
add
ds
nop
or
and
inc
icebp
mov
pop
sahf
push
and
nop
addr16
rcrb
mov
jns
out
call
and
or
ja
out
and
and
loopne
dec
dec
fcompl
push
inc
jbe
dec
mov
xor
fwait
or
push
mov
pop
pop
pop
add
mov
jns
inc
js
lock
pop
jb
jo
inc
loopne
js
inc
ds
inc
push
push
push
movsb
imul
and
jg
mov
jl
int3
test
addr16
lahf
mov
and
cs
inc
lock
clc
or
aam
fs
sbb
sub
cmp
mov
pop
push
dec
inc
ja
or
or
mov
pop
push
pushf
fdivrp
push
sbb
insb
inc
jmp
mov
jo
and
sbb
loopne
les
sub
inc
fists
addb
int3
shl
push
imul
fiaddl
inc
lcall
lods
lods
add
push
inc
jg
nop
out
pushl
shl
loopne
mov
loopne
dec
inc
ja
enter
pusha
fs
sbbl
inc
pusha
enter
jg
nop
mov
enter
adc
mov
loope
or
loope
mov
sub
daa
and
frstor
lahf
in
inc
dec
repz
inc
adc
lods
sbb
pop
mov
pop
insb
inc
mov
cmpsl
inc
movsl
jbe
clc
add
inc
adc
lahf
imul
fs
sahf
or
pusha
jo
nop
or
fs
mov
jns
in
mov
out
cs
mov
nop
lock
adc
out
cs
mov
dec
enter
pusha
in
pop
pop
and
adc
push
repnz
dec
nop
mov
in
dec
lahf
nop
inc
es
pop
enter
in
inc
lahf
or
in
mov
pop
testl
pop
outsl
aas
js
sub
lcall
testb
ror
fiaddl
cmp
out
clc
or
pushaw
cmp
push
xchg
inc
outsl
enter
xchg
clc
inc
in
leave
repz
push
pusha
enter
push
outsl
jg
lds
or
aad
jl
jb
lock
iret
add
jmp
out
sahf
adc
fxam
out
js
and
inc
call
adc
inc
mov
sub
fwait
push
push
pop
daa
aas
daa
add
mov
data16
pop
mov
daa
nop
xchg
testl
fcmovb
cs
call
scas
mov
mov
xlat
mov
inc
lcall
negb
call
mov
hlt
call
ljmp
or
lods
inc
pushf
or
mov
outsl
mov
fstl
dec
aam
in
push
xlat
data16
xchg
sbb
xchg
push
in
dec
in
pop
dec
cmp
dec
push
push
daa
ret
pusha
stos
mov
orb
or
add
jns
ja
daa
sbb
test
dec
push
jb
push
inc
inc
cmp
xor
push
jb
sub
popa
and
mov
mov
out
ljmp
dec
push
xor
icebp
mov
negl
clc
add
es
push
cmpsl
stc
xor
and
lock
out
mov
mov
clc
out
sahf
ja
out
dec
xor
ds
push
push
jl
in
movsb
mov
sahf
cmpsl
stc
je
pop
cmp
add
push
test
add
repnz
es
xchg
pushf
in
dec
test
xchg
mov
aas
imul
xchg
cmp
sub
nop
add
dec
sahf
out
jmp
add
fidivrs
mov
jg
push
xor
mov
fdivp
push
inc
out
cld
inc
mov
push
push
xor
add
or
push
in
ja
add
sbb
jns
xchg
inc
dec
outsl
xchg
sti
inc
inc
xor
dec
sbb
push
add
add
rcr
in
dec
ret
push
xor
add
inc
or
and
dec
test
in
fbstp
outsl
fisttps
mov
outsl
cmp
or
cmp
pop
and
pop
ret
lods
pop
scas
add
outsl
out
mov
xor
fnstsw
and
fbstp
cmp
add
aam
test
call
sbb
out
scas
add
sbb
ljmp
pusha
and
xor
xor
xchg
in
nop
out
out
out
outsl
xchg
popa
sub
add
sub
or
sub
xor
jbe
into
js
aaa
js
cwtl
repnz
repnz
mov
push
hlt
out
movl
sahf
sbb
lock
leave
add
dec
jg
or
ja
adc
jg
mov
sub
or
mov
or
repnz
cld
fimuls
icebp
outsl
add
mov
fbld
bound
and
mov
fiadds
and
insb
add
cwtl
pop
scas
sbb
push
xor
pop
outsl
js
ret
push
out
dec
fisubs
jae
pusha
cmpsl
or
daa
add
je
orb
cmpsl
in
or
xor
push
aaa
stc
out
pusha
xchg
sub
add
fwait
test
call
and
es
xorb
call
loopne
subb
mov
loope
fimuls
xchg
push
cwtl
aam
jg
push
adc
push
call
addr16
and
xor
aaa
inc
repz
push
xor
pop
sbb
loopne
xchg
mov
ss
js
test
or
repz
mov
pcmpeqd
mov
leave
xchg
lock
outsl
js
in
xchg
outsl
jg
sub
xchg
loop
hlt
jge
jne
daa
testl
cmpsl
jge
scas
push
movsb
clc
push
mov
hlt
scas
mov
testb
and
and
dec
cmpsl
bound
loope
adc
cmc
push
pusha
mov
dec
xlat
or
decl
idivb
add
pop
jne
daa
xlat
or
shl
pushf
xchg
dec
inc
divl
add
test
fdiv
add
fimull
xor
popa
xor
outsl
and
sub
push
mov
xchg
cmp
nop
imulb
mov
divb
subl
stos
pop
nop
divb
call
aaa
sbb
outsl
loopne
and
jecxz
and
pushf
pusha
divl
scas
es
pop
mov
add
mov
call
jg
hlt
ja
loop
fisttpl
sbb
and
jg
in
dec
scas
addr16
add
xchg
or
fs
add
sub
das
and
and
push
jb
jge
mov
inc
aad
lods
aaa
pop
in
jl
sub
sub
pop
cmp
ss
cmp
dec
stc
aaa
add
movsb
or
leave
test
mov
pop
iret
int3
xlat
jo
push
xor
sahf
iret
aad
sub
daa
loopne
xchg
pop
leave
in
pop
cli
daa
or
add
repz
pop
cwtl
push
xchg
add
call
dec
int3
js
or
outsl
mov
xchg
aas
add
decb
cli
cmpsl
sbb
and
mov
decl
xlat
xchg
push
inc
sti
das
outsl
add
or
inc
cs
xchg
movsb
inc
outsb
rclb
push
test
mov
add
cld
push
xchg
mov
pop
andl
push
xor
outsl
out
add
or
inc
lcall
inc
dec
loopne
or
jb
arpl
out
daa
or
add
addb
cmp
std
addr16
or
negb
jl
aas
addr16
fisubs
daa
lods
int
lds
iret
movsb
in
sahf
aam
addr16
gs
in
hlt
std
push
mov
push
dec
divl
mov
push
inc
inc
add
decb
imul
incb
nop
decb
or
rol
pop
repnz
shl
rclb
adc
orl
lahf
fsubl
arpl
clc
out
mov
jl
les
clc
sub
xchg
or
std
lods
push
mov
addr16
test
mov
add
add
jb
test
cmpsl
stc
cmp
stos
shr
and
push
dec
repz
mov
pusha
ds
repz
mov
mulb
mov
out
inc
xchg
dec
repz
mov
pop
mov
arpl
lahf
out
mov
pop
add
or
lea
call
adc
cs
insb
xchg
nop
iret
repz
push
pop
mov
imul
xchg
xlat
out
fidivrs
xchg
es
mov
xor
sti
push
xchg
inc
mov
mov
push
ljmp
ja
jne
push
xchg
push
out
cmp
xchg
fucom
jns
aas
push
ret
add
out
jne
loopne
cltd
jb
imul
lcall
in
fwait
push
imul
pushf
cmp
incb
mov
sbb
push
push
mov
out
sahf
out
lahf
dec
ja
into
out
cmp
add
mov
das
push
mov
inc
subb
xor
out
jmp
out
ds
fistps
cmpsb
jns
out
xor
sarl
push
and
pop
flds
xor
mov
stos
out
addr16
lahf
out
stos
icebp
pop
lods
xchg
fdiv
jns
out
lods
pop
fdiv
cmp
xchg
test
test
sahf
out
mov
mov
pop
mov
stc
cmp
pop
test
pop
mov
dec
repz
mov
mov
cmpsl
stc
cmp
and
sarl
adc
mov
out
ds
pop
mov
mov
xor
in
xor
iret
cmp
out
popa
mov
mov
cmpsl
stc
push
mov
inc
imul
lock
out
hlt
dec
sarb
jns
iret
lock
push
xorl
push
ret
xor
ja
fiadds
outsb
push
out
movsb
lahf
cmpsl
stc
pop
xor
push
int3
jl
out
out
inc
enter
leave
jge
out
push
add
data16
outsb
push
pop
xchg
hlt
int3
cmp
iret
sarl
xlat
add
sub
out
ds
ds
outsl
stos
out
repz
out
shlb
sarl
push
sarb
adc
pusha
out
iret
pushf
fcom
aam
movsb
out
xor
fbstp
iret
sarl
mov
xlat
mov
pop
dec
repz
fmuls
sbbb
ficoml
into
imul
imul
shl
fiadds
xchg
or
stc
xor
dec
aam
jmp
in
aad
lock
dec
mov
repnz
jo
dec
pmaddwd
push
jl
int
mov
mov
repz
flds
insb
add
push
insl
or
add
lahf
int3
cvtdq2ps
or
push
inc
aas
sarl
cmpl
pushf
sbb
pusha
push
scas
rorb
ficomps
push
xor
mov
popf
mov
loopne
aaa
int
mov
lahf
out
pop
mov
cltd
nop
insb
shlb
inc
dec
mov
pop
xchg
aas
cmp
rcr
fdivrs
lds
test
or
pop
call
mov
das
bound
cmp
frstor
aas
movntq
out
inc
leave
and
pop
testb
xchg
pop
mov
fbstp
test
add
mov
stos
or
outsl
out
mov
or
push
inc
outsl
dec
ds
das
push
inc
mov
inc
imul
or
mov
dec
mov
leave
gs
daa
dec
jg
dec
mov
pushf
int3
aas
in
mov
ss
push
inc
pop
sub
ds
jmp
outsl
addr16
and
add
aam
rorb
daa
in
loopne
adc
xchg
das
sub
inc
pop
push
push
fists
adc
adc
iret
or
inc
dec
shlb
mov
lahf
dec
enter
jbe
jno
dec
ja
xchg
pushf
dec
xchg
or
mov
filds
mov
push
pop
int
fs
outsb
jp
jb
pop
jnp
add
je
das
je
or
psubw
jg
jmp
cs
add
fiadds
mov
xchg
pop
inc
leave
xchg
lret
iret
les
push
sbb
jo
push
mov
dec
movb
scas
hlt
add
fisttpll
inc
pop
xor
jmp
push
daa
inc
scas
xlat
fldl
push
xchg
push
push
dec
sbb
mov
in
ja
data16
ja
jne
leave
aas
inc
fbstp
leave
leave
in
insl
fbstp
call
cmpsb
scas
and
sarl
pop
pop
push
js
pop
jb
test
es
and
pop
xor
enter
pop
xchg
mov
jnp
adcl
movsb
mov
imulb
dec
je
insb
push
out
lret
push
cwtl
adc
les
xchg
ss
xchg
adc
mov
mov
addr16
sbb
mov
inc
insl
mov
inc
xor
and
daa
xchg
add
inc
xchg
pop
mov
in
mov
jp
jl
mov
mov
scas
dec
adc
scas
addb
sbb
push
scas
dec
das
inc
dec
cmp
das
cmp
scas
or
add
mov
es
mov
inc
sahf
sub
mov
add
add
adc
in
inc
scas
aam
xor
or
out
fs
jb
inc
jb
mov
leave
inc
mov
mov
pop
push
pop
jmp
push
add
add
mov
or
filds
mov
and
cmpsl
and
jmp
push
daa
xor
ret
outsb
in
dec
mov
addr16
adc
jle
xchg
fildl
daa
push
movsb
mov
in
daa
shl
and
add
fbstp
adc
data16
fmul
je
add
mov
iret
test
dec
scas
add
mov
push
adc
lock
stos
daa
mov
lahf
pop
ja
mov
sahf
pushf
pushf
dec
fucom
in
cmc
mov
std
mov
in
add
mov
sbb
cmp
jo
xchg
dec
mov
jbe
fisttpll
setae
fwait
pop
mov
adc
addr16
into
out
in
in
in
cli
push
add
add
sbb
jns
out
or
or
or
les
cmp
dec
xchg
push
lea
cmp
das
push
push
mov
xchg
xchg
add
add
pop
adc
inc
fstl
push
je
inc
adc
stc
add
jns
push
je
out
xchg
push
xchg
sbb
sub
jb
fmul
in
jg
in
and
push
mov
inc
mov
imul
xchg
and
mov
inc
repnz
dec
or
pop
fsub
mov
std
pop
or
pushf
pushf
pop
addb
call
dec
pop
or
dec
pop
psubsb
xlat
sbb
popl
insb
sbb
cs
xchg
sub
add
cltd
popa
mov
xchg
int
add
add
sub
lds
xorps
and
push
bound
repnz
filds
pop
popl
or
add
in
sbb
sub
mov
dec
mov
nop
jmp
in
xchg
ja
call
mov
xchg
pop
enter
mov
dec
ja
cmp
sbb
daa
js
stos
push
xchg
pop
and
into
aam
and
adc
scas
rcrb
xchg
xchg
in
inc
jb
sbb
push
xor
movsb
sbb
push
leave
cmpsl
add
sbb
nop
xchg
pushf
xchg
xchg
push
dec
iret
mov
scas
mov
mov
push
pop
push
jg
push
add
hlt
cld
xchg
add
push
cltd
jmp
or
adc
das
add
jb
cmp
pop
cmpsl
xchg
sbb
js
dec
test
daa
movsb
mov
loopne
aaa
outsl
pop
jp
scas
icebp
in
orb
cmp
fcompl
xchg
sbb
daa
and
cmpsb
scas
and
adcl
bound
xchg
push
mov
mov
scas
pop
and
outsl
jg
in
adcb
sbb
pop
into
testl
inc
rclb
mov
fdivrl
pop
add
mov
xchg
add
cmpsb
out
daa
pop
in
xchg
stos
in
addr16
sub
daa
aam
pop
jg
mov
xchg
incl
jns
dec
dec
and
add
test
pop
mov
dec
dec
add
pop
scas
inc
es
in
mov
cmpsl
jo
leave
sbb
jl
daa
jns
cltd
mov
lcall
movsl
aaa
push
add
repz
movb
loop
mov
mov
xchg
subb
and
cmp
and
cmpsb
inc
add
lock
and
pusha
and
popf
inc
cmp
ja
and
xor
adc
ja
pop
movd
pop
push
pushf
dec
ds
popl
mov
cmp
xor
rcll
mov
fs
pop
jb
pop
nop
jmp
xchg
or
call
mov
aaa
xchg
jmp
push
pop
jmp
inc
pop
add
dec
mov
mov
push
xchg
mov
xchg
stos
test
dec
lds
popl
and
pop
fwait
dec
pop
push
sub
scas
out
mov
mov
add
xchg
imul
push
in
popf
out
push
cvtps2pd
bound
push
jb
sbb
push
fisttps
sub
push
jo
cli
popl
daa
inc
lcall
inc
pop
ja
pop
pop
cmpsb
mov
mov
aaa
lods
push
iret
aam
mov
jmp
ret
shrb
es
jno
xchg
fwait
or
push
mov
pop
push
pusha
es
jne
mov
mov
mov
aam
test
add
xlat
push
xchg
push
daa
cmp
inc
mov
fnsave
push
add
in
sahf
add
and
flds
daa
test
sbbb
scas
arpl
movsl
adc
fsts
pavgw
jne
xchg
xor
es
pop
add
sub
pop
ja
daa
insb
push
daa
jns
pop
xlat
pop
ja
push
cmpsl
push
scas
lcall
js
push
mov
push
mov
mov
repz
cltd
jo
cmp
es
push
mov
cmp
aas
add
cmp
or
push
daa
lret
ds
pop
sub
push
out
push
fildll
test
dec
dec
add
popf
ja
sub
push
xlat
push
dec
aad
in
sti
fcomip
unpcklps
es
iret
aaa
sahf
dec
push
pop
ja
jae
pcmpeqb
push
add
nop
das
lcall
dec
lods
or
aaa
cltd
loopne
sahf
xchg
scas
faddl
add
lahf
adc
insl
jbe
push
xor
in
loop
mov
scas
sub
jo
xchg
daa
and
pop
mov
push
mov
fsubrs
pop
jmp
ja
mov
push
mov
cmp
sub
fs
sub
xchg
push
inc
repnz
ja
nop
fwait
jecxz
leave
icebp
iret
xlat
mov
repnz
jo
addr16
in
mov
in
popf
je
push
pop
ja
inc
pop
movsb
add
jae
mov
cmpsb
push
leave
mov
out
subb
hlt
iret
cld
pop
add
xchg
cltd
std
xchg
pop
adc
cs
andb
aas
arpl
pop
push
cmpsl
jae
cmp
pop
imul
jns
daa
iret
push
mov
in
add
lods
inc
mov
xchg
out
jns
in
cmp
sahf
out
adc
add
repnz
adc
xchg
inc
loope
mov
inc
pushf
xlat
mov
xor
fwait
mov
pop
addr16
das
scas
iret
pop
fcmovne
in
into
fiadds
push
xchg
add
sbb
mov
push
ljmp
pop
xor
leave
repz
inc
dec
xchg
subb
push
movsb
addr16
mov
xlat
orb
jl
cmp
mov
push
xlat
xor
loope
movsb
pop
dec
mov
push
rcl
pop
xlat
daa
adc
daa
movsl
sarb
jg
xchg
dec
xchg
or
movsl
cmpsl
adc
add
sub
xor
mov
xor
sbb
sbb
daa
daa
ret
scas
movsb
add
mov
das
mov
cmp
adc
cs
push
pushl
push
daa
xor
adc
ror
ja
cmpsb
adc
cs
push
outsl
adc
in
xor
cmp
leave
inc
dec
push
add
cmp
fcmovnbe
jg
jno
or
push
xchg
jg
xchg
dec
mov
push
mov
xor
xchg
xchg
test
out
iret
in
xcrypt-ctr
cmpsl
pop
pop
add
pop
add
daa
das
cmpsl
aas
aaa
cmpsl
jo
adc
or
pop
cmpsl
jmp
xchg
xchg
mov
cmp
adc
shll
cmpsl
cmpsl
cmpsl
cmc
pop
sahf
pop
scas
cld
or
nop
cmp
pop
or
test
mov
sbb
inc
test
test
xchg
lods
push
xchg
cmp
pop
ja
mov
test
pushf
mov
test
lret
lock
push
ljmp
inc
fwait
xor
xchg
xchg
or
sbb
cmp
in
test
pop
adc
mov
push
call
test
xor
sti
push
stos
jns
shll
ja
sub
push
stos
cmp
out
pop
mov
mov
iret
subb
loop
iret
xchg
setp
movl
push
aad
add
xlat
popf
fisttpll
push
ss
movsl
in
jle
stos
pop
out
jns
or
sbb
sahf
and
out
jns
cmp
pop
aaa
jns
push
adc
adc
in
push
insl
jne
xlat
sbb
inc
repnz
cwtl
push
outsb
and
push
stos
out
mov
cmpsb
add
push
xor
mov
and
sbb
jb
push
mov
ret
addr16
and
cmp
mov
inc
adc
das
daa
daa
pop
insb
xor
add
cmp
fiaddl
cmp
mov
mov
jl
test
dec
ja
or
mov
sete
movsb
dec
or
lods
cmp
and
mov
lods
aam
les
cmovle
add
push
jns
das
push
in
cmp
jg
push
aas
test
xchg
jnp
les
or
aas
pop
pop
mov
cmp
or
push
mov
adc
adc
dec
popf
cmpsl
ret
ja
mov
inc
mov
lahf
cmp
pushf
and
vmwrite
cmp
cmp
cmp
sbb
pop
adc
out
push
outsl
sub
add
out
in
mov
ss
lahf
enter
jo
pop
inc
cmp
or
test
imul
jl
xchg
pop
mov
add
scas
push
pop
jb
mov
pop
enter
mov
inc
sbb
leave
mov
jo
cmp
xchg
aas
lock
scas
aaa
sub
cmp
in
push
add
dec
scas
pop
push
add
jmp
mov
iret
test
mov
cmp
or
mov
sub
mov
sbb
shl
decl
mov
push
iret
repz
add
add
add
cmp
push
pop
addr16
cmp
repz
xchg
xchg
mov
sub
or
mov
inc
cmp
shll
fwait
jecxz
outsl
xchg
mov
or
hlt
movb
ror
sub
inc
filds
mov
in
sbb
mov
mov
mov
daa
cmp
je
xor
divl
call
pop
pushl
mov
out
incl
jbe
pushf
cmp
hlt
test
leave
leave
leave
in
mov
mov
sub
iret
iret
in
addb
add
add
testb
xor
mov
push
mov
mov
jne
jge
pushl
rorl
inc
addr16
mov
mov
mov
cs
out
into
push
push
dec
cld
mov
mov
jb
mov
mov
aas
push
outsl
inc
jae
outsb
mov
add
sarb
stos
pop
pop
push
or
stc
sub
or
inc
sbb
jbe
xchg
fwait
mov
fadds
sbb
out
sbb
inc
xor
xchg
inc
pop
in
pop
in
or
nop
pop
scas
hlt
fstps
xor
addr16
lcall
mov
mov
mov
dec
ja
or
push
iret
jae
into
pop
out
addr16
outsl
add
and
outsb
daa
jg
xchg
or
pop
and
mov
inc
push
mov
inc
lahf
int
xor
loopne
lock
add
ja
mov
adc
mov
cmpsl
push
mov
mov
dec
ja
mov
mov
xchg
fwait
in
out
in
mov
mov
jg
mov
inc
cmpb
and
mov
mov
ret
jmp
inc
mov
fldt
and
ja
daa
daa
pop
je
test
out
fisubrs
add
add
xlat
pop
in
mov
inc
fwait
dec
incl
jb,pn
inc
jb
push
cwtl
jae
into
inc
xchg
add
in
in
lods
aas
jl
and
push
call
popf
fadds
adc
inc
cmp
sbb
in
fdivl
aaa
cvttps2pi
jg
mov
jmp
aaa
mov
cltd
mov
cmpsl
mov
andps
leave
dec
int3
xlat
loop
in
stos
pop
leave
inc
adc
mov
mov
inc
leave
in
jbe
mov
arpl
add
test
cmp
cmp
sldt
cs
fmulp
repz
jns
outsb
cmp
das
femms
rorl
out
lock
out
out
adc
inc
bound
outsb
cvtpi2ps
xor
jns
xchg
cmp
dec
push
das
stc
dec
jno
cvtps2pd
sahf
fldt
scas
xlat
xchg
setle
sbb
jns
xchg
mov
lock
xchg
ljmp
sahf
out
xchg
push
add
add
iret
rep
fstpl
pop
inc
or
mov
or
and
sbb
mov
lcall
mov
mov
mov
xchg
mov
decl
cmp
jnp
mov
addr16
out
in
add
xchg
leave
jae
popf
mov
inc
inc
jb
pop
loopne
mov
adc
and
sub
dec
push
add
fmull
dec
dec
mov
add
decl
dec
addr16
aaa
loopne
insl
pop
pop
mov
push
aas
jnp
mov
mov
fsub
paddsb
add
sub
mov
mov
getsec
mov
cmpsl
aas
xchg
dec
mov
mov
mov
outsl
jns
out
test
mov
sahf
xchg
out
pop
rolb
rolb
fsub
mov
cmp
loopne
aaa
or
daa
iret
sbb
push
add
sub
popf
xor
xchg
dec
push
and
leave
in
pop
xchg
cmpb
popf
pop
mov
mov
test
fcmovne
int3
aam
fsub
jb
loop
in
xchg
adc
xadd
nopl
add
das
mov
cmp
inc
rcr
repnz
pusha
dec
push
inc
xor
mov
addr16
addr16
jb
xchg
das
popf
movsl
lods
xchg
xchg
out
clc
rcr
sbb
loopne
xchg
xchg
xor
es
rorl
shrl
ja
addr16
jb
pop
jmp
dec
ja
jno
xchg
jbe
addr16
outsb
push
sarb
fwait
sub
dec
sub
daa
iret
fbstp
fdivl
xchg
aaa
push
je
out
jg
push
add
clts
repnz
repz
lock
inc
inc
ret
cmp
fnstsw
ja
movq
daa
xchg
leave
in
ss
mov
mov
leave
leave
into
loopne
push
push
sbb
or
testl
cmovs
ret
mov
pop
test
data16
mov
mov
iret
inc
mov
mov
repz
push
ret
fbld
jo
xchg
or
js
mov
mov
or
and
les
je
pop
les
hlt
mov
outsl
ja
push
pop
outsb
daa
mov
xchg
jg
test
or
daa
lds
iret
les
pushf
cmp
insl
xlat
out
fisttps
out
jae
dec
ds
adc
vunpckhps
ss
lds
pop
push
in
insl
div
fbstp
cmovno
out
dec
xorps
out
sahf
xlat
popf
insl
idivl
or
mov
mov
push
int3
push
dec
popf
call
out
sub
incl
das
xchg
sub
add
xchg
addr16
jne
lret
add
ja
outsl
pop
mov
add
gs
pop
clts
repz
repz
jne
jge
test
outsb
daa
iret
or
or
pop
iret
leave
mov
push
into
xlat
es
and
cli
jns
inc
jg
daa
push
add
xor
dec
cmp
cmp
aaa
movsb
jl
adc
mov
inc
popf
out
xchg
addr16
daa
rcrb
dec
pop
scas
add
stos
push
aam
add
movsb
fildll
fildll
push
xlat
mov
fistpll
iret
xbegin
test
push
or
jp
leave
pop
inc
enter
enter
dec
pop
xor
orb
add
out
in
pop
addr16
addr16
in
cltd
pop
mov
fucom
mov
test
ror
incl
out
or
add
leave
fcmovne
pop
cmp
pop
dec
cmova
pusha
mov
jle
popf
fsubl
movsl
mov
je
out
add
cmp
xrelease
out
or
iret
repz
or
or
lret
out
or
or
push
lret
xchg
iret
push
xor
lret
xchg
jno
punpcklwd
sahf
add
test
mov
pushf
mov
setl
mov
pop
paddd
lret
pop
cmpsl
cmp
outsb
add
xchg
ljmp
lret
add
xor
pushf
pop
outsl
je
pop
rolb
fistpll
mov
cld
mov
add
or
pusha
stos
dec
aad
lret
scas
inc
inc
push
sub
jbe
addb
lret
cmp
mov
iret
leave
lods
psraw
add
neg
in
enter
int3
or
or
out
and
or
repz
dec
push
or
iret
push
pshufw
cmp
repz
xchg
xchg
adc
cmp
repz
adc
adc
iret
push
mov
es
repz
ficomps
jmp
prefetcht1
push
adc
adc
adc
cmp
cmp
adc
push
or
mov
test
ret
add
pusha
adc
cmpsl
inc
js
inc
mov
or
push
cmp
je
push
notb
dec
or
int
push
imull
nop
push
dec
ja
lahf
aaa
xchg
pop
xorl
dec
fsubs
or
call
pushf
xor
mov
iret
int
mov
inc
jb
pop
repnz
addr16
gs
jg
pop
iret
into
addr16
xor
and
sbb
ret
fisttpl
popa
into
jg
into
jno
jns
inc
mov
or
in
in
or
rorb
mov
rclb
pop
dec
jb
and
iret
xor
pushf
scas
icebp
jbe
push
addr16
iret
jmp
cs
xchg
iret
ja
xchg
xorl
xchg
pop
xchg
into
iret
in
in
push
add
out
add
and
rclb
push
sub
sar
ja
test
rcrb
xchg
xchg
xchg
xchg
rcrb
insb
sarb
mov
je
rorb
dec
movsl
xlat
or
fcomps
jbe
cmp
fsubp
out
psadbw
negl
in
push
rcrl
push
pop
push
push
mov
push
push
or
es
or
cmp
repz
push
xchg
outsb
mov
fisttpll
popa
push
add
add
jns
pop
outsb
pop
xor
cmpsl
call
push
add
or
iret
rcl
pop
or
inc
pop
xor
popa
add
add
inc
popa
lahf
nop
popa
sahf
xlat
pop
rorb
dec
push
push
add
cmp
in
add
cs
add
fwait
push
fistpll
cmovbe
subl
enter
js
pop
mov
xor
add
and
dec
ja
daa
insb
popf
pushf
pop
adc
cmp
les
int3
and
jns
dec
rcll
rcr
or
lea
shll
roll
dec
ja
inc
mov
xchg
add
xor
cmpl
leave
leave
add
xchg
mov
mov
iret
sti
push
je
xor
adc
nop
jmp
cmp
xchg
aam
pop
aam
fs
cltd
push
pushf
aam
cwtl
cmpsb
pop
jmp
mov
movl
xlat
pop
inc
jl
push
imull
adc
mov
rolb
clc
es
inc
into
test
add
mov
sbb
xchg
aad
sbb
and
sub
aad
xchg
push
pop
punpcklbw
push
pop
ja
lock
scas
push
lahf
sbbb
xchg
pop
aaa
jns
pop
add
jns
sahf
or
iret
shll
out
xchg
cmp
aad
js
inc
push
in
in
cmp
icebp
or
pop
iretw
adc
mov
test
cmp
fsubl
sahf
sarb
divl
outsb
inc
leave
mov
addr16
jg
xchg
dec
cmp
push
cmp
in
push
add
clts
decb
inc
sahf
push
xlat
adc
and
in
dec
sub
cmp
push
icebp
in
dec
xlat
aas
push
pop
mov
add
xlat
xlat
push
or
pushl
jb
ja
movsb
lods
in
in
jbe
pop
mov
push
loope
in
scas
push
jecxz
and
pop
not
add
pop
push
mov
fsubrs
pop
push
and
scas
fadd
fildl
cmovg
aas
mov
sbbb
fsubrs
addl
push
leave
imul
pop
mov
add
loopne
mov
cmp
ltr
pop
jb
packsswb
sub
or
xchg
rcrl
or
mov
nop
push
xor
sarl
push
cmpsl
and
hlt
nop
outsb
add
push
ja
sbb
push
mov
pshufw
jae
jp
push
lods
popf
push
jo
add
pop
add
ja
cli
ficompl
cmp
fisubl
xchg
mov
cmp
js
xchg
mov
xchg
jb
scas
fnstsw
add
jno
leave
push
scas
loopne
jmp
xor
stc
add
dec
sahf
out
aaa
or
xchg
adc
add
aaa
jns
pop
add
xchg
xchg
add
or
or
xor
cmp
or
das
or
incb
dec
fstpt
insb
ds
adc
insb
insb
fisttpl
icebp
push
out
ja
leave
leave
add
xchg
jo
rcrb
mov
jb
clts
fsub
add
in
or
lock
add
fistpl
or
insl
inc
cmp
mov
fsubrl
aaa
push
cmovbe
dec
sahf
out
aaa
pop
push
add
push
iret
repz
scas
push
mov
dec
jbe
jne
pop
iret
into
dec
jnp
out
outsb
cs
push
pop
iret
repz
push
adc
repnz
sahf
movups
leave
in
xchg
push
pop
fsubp
fwait
cmp
leave
out
negb
decb
in
xchg
scas
sbb
push
pop
push
push
out
cmp
mov
es
and
jns
xchg
cs
ds
es
sahf
out
fisttpll
sub
sub
jns
out
pop
sub
outsb
out
sahf
out
jbe
jle
stc
mov
setbe
lahf
xor
js
mov
insl
mov
fadds
stc
addr16
pop
gs
das
mov
mov
aas
push
mov
or
int
outsl
add
rcrb
ficomps
xlat
pop
fiadds
mov
insl
ss
jb
jg
add
adc
pop
fbld
mov
daa
mov
jns
outsb
jmp
rcrb
sysret
fisttps
fucomi
in
in
stc
das
add
dec
pi2fd
daa
push
xor
jae
mov
jp
test
adc
adc
jns
test
mov
out
sahf
out
sbb
sbb
sahf
out
sahf
sbb
sbb
sbb
jp
ds
sbb
and
and
and
jns
out
dec
and
and
out
je
subl
mov
fwait
sub
jns
sub
sub
out
fsubrl
jmp
xchg
hlt
add
aas
or
pop
pop
loope
aad
and
lahf
sub
filds
aas
iret
repz
push
daa
pop
es
outsl
and
and
and
repz
cmpsb
pop
mov
mov
cmp
sbb
sbb
repz
repz
sbb
pop
out
ds
adc
loop
adc
iret
repz
sub
fwait
cmp
repz
inc
dec
dec
bswap
jmp
scas
push
dec
pop
pop
push
jle
pushf
pushf
fdivrl
adc
outsb
daa
iret
repz
jg
das
xchg
jns
out
dec
mov
mov
add
loop
loop
fcmovne
stos
in
pop
jecxz
movntq
xchg
wrmsr
add
add
cmp
popf
inc
xlat
push
push
inc
jle
sbb
jg
jecxz
jns
out
or
jg
repnz
sahf
mov
or
repz
push
movzwl
rcll
iret
repz
adc
adc
push
adc
loop
std
pop
jle
in
push
sahf
out
sahf
sbb
sbb
sbb
sbb
sbb
sahf
out
pop
pusha
and
fisttpll
and
das
mov
outsl
mov
in
jbe
movsb
scas
lods
iret
mov
mov
xsaves
rorb
pop
fidivrl
out
push
in
in
adc
js
out
adc
adc
add
lea
sbb
push
pop
in
or
jns
out
or
js
or
dec
pop
in
in
cmp
and
jl,pt
es
nop
das
dec
push
or
xor
xor
pop
sti
jno
mov
push
fildl
out
out
pop
cmp
negb
add
filds
out
push
out
repz
repz
nopl
adc
fcmovne
cs
adc
jae
jb
push
pop
pop
pusha
push
lea
iret
sbb
out
sbb
and
mov
inc
xor
out
je
xlat
pop
push
daa
rorl
add
movsb
sahf
fwait
and
in
in
mov
sbb
leave
leave
leave
leave
and
xor
repz
leave
inc
dec
xorps
cmp
leave
bound
adc
pmulhuw
jbe
mov
in
in
mov
ret
sahf
out
in
rcr
pop
out
out
jns
icebp
cld
and
cmpsb
xchg
iret
enter
test
sub
mov
push
add
inc
pop
dec
sahf
out
dec
push
add
in
pop
insb
je
jl
or
dec
aaa
jns
mov
push
pushf
movsb
dec
lods
push
adc
cmp
mov
sub
pop
scas
push
lock
movsl
adc
in
pop
jmp
out
add
add
add
xor
out
mov
or
push
or
jns
cmp
repz
test
adc
adc
dec
outsb
daa
iret
adc
out
repnz
int3
mov
sahf
or
adc
pop
push
cmp
leave
repz
xor
aas
iret
leave
repz
dec
pop
push
pusha
and
repz
cmp
jbe
xor
and
xchg
fcmovne
lods
mov
sahf
xchg
xchg
ftst
out
cs
cltd
loop
out
add
xor
fstl
jns
pop
add
and
sbb
pop
jmp
cmp
repz
add
add
cmp
addl
or
sahf
or
or
pushf
pushf
cmp
ret
lret
shl
pushf
pushf
pushf
fninit
jmp
pop
loope
leave
repz
add
das
or
fucom
jns
pop
adc
sbb
sbb
jns
and
sub
sbb
xor
dec
cmp
and
push
leave
cmpb
vmread
leave
leave
leave
orb
leave
mov
in
mov
inc
lds
int
or
jl
cmp
xchg
fcmovne
pop
pop
or
push
mov
mov
in
filds
or
push
in
jns
out
push
or
jnp
dec
pop
aaa
prefetch
mov
jbe
jg
lahf
mov
mov
jns
out
aad
loop
in
out
jns
clc
syscall
out
ficompl
repnz
sahf
out
hlt
sbb
add
scas
fwait
mov
push
sbb
and
sub
out
pop
ds
jg
out
lahf
push
mov
mov
sbb
jnp
sub
sub
sub
out
out
mov
jg
cs
out
sahf
das
jne
xorb
repz
xor
mov
leave
lods
mov
les
sahf
rclb
cmp
cmp
cmp
aaa
jmp
out
aas
mov
cmp
cmp
iret
mov
sahf
out
rol
iret
pminub
jns
out
inc
lock
std
inc
aaa
cmp
repnz
pop
lock
and
dec
sub
sahf
adc
add
pop
shrb
in
cmp
dec
mov
jge
sbb
cmpsb
into
mov
lock
jecxz
push
mov
outsl
xchg
push
iret
repz
add
add
ja
cmp
or
test
in
or
cmc
jns
fwait
push
push
push
sbb
out
sahf
out
adc
aas
iret
repz
sahf
adc
adc
adc
outsl
jp
pop
sbb
mov
nop
fwait
pop
mov
fsubrp
in
sbb
push
and
jns
jns
stc
repnz
dec
cmp
bnd
call
rcpps
xlat
pop
repnz
mov
and
ja
mov
push
add
out
mov
ror
xlat
fdivrl
cmp
loop
repnz
iret
jnp
mov
add
push
push
or
cmp
and
dec
xor
cmp
jg
outsl
cmova
pop
push
repz
fistpl
unpckhps
push
cmp
pop
jle
mov
sbb
sbb
ror
inc
hlt
iret
repz
mull
push
loope
push
in
and
out
cmpsb
sub
push
daa
daa
iret
repz
sbb
and
cmp
rep
cmovg
sub
movaps
mov
xor
mov
mov
out
push
add
add
add
jns
out
add
mov
in
out
aas
idivl
lahf
pop
cmc
inc
xchg
out
and
xor
xor
jmp
int
ficomps
dec
cmc
iret
push
cmc
out
pusha
push
push
out
mov
imul
push
or
or
sahf
out
cmp
ficompl
pmulhw
jl
out
lock
adc
idivb
testl
jl,pt
cmp
sub
xor
fsubrp
idivb
out
aas
push
sbb
out
sahf
out
fs
outsl
pop
jns
xchg
xchg
jl
xchg
and
and
outsb
mov
ror
fmul
jecxz
stc
les
loopne
notl
test
pop
and
inc
jg
sbb
pop
dec
test
sub
daa
fldl
mov
lahf
aas
je
outsl
jmp
add
push
cmp
mov
push
add
jbe
sahf
out
addl
out
out
or
push
or
pop
jle
negl
or
jb
adc
in
div
testl
femms
adc
daa
push
adc
xor
push
sbb
sbb
jno
clc
jg
push
test
add
clc
bswap
leave
pushf
fidivrl
clc
dec
sahf
pop
cltd
aas
clc
push
pop
std
mov
or
adc
inc
sbb
sub
cmp
inc
cmovnp
adc
iret
repz
pop
push
adc
adc
popf
jbe
cmp
sahf
out
xchg
sbb
xchg
out
test
jns
out
pop
les
int3
and
aam
and
lret
enter
stc
decl
cli
cli
das
shrb
push
cli
push
add
ds
dec
pop
push
repnz
cmp
bound
ds
fwait
cmp
sub
movntq
cmpsl
push
cltd
shld
cmp
scas
adc
mov
rcr
das
out
nop
popa
jb
jg
cli
cld
cli
enter
or
adc
sbb
cmp
fisubrs
push
pop
xor
out
cltd
mov
popa
sahf
out
sahf
and
and
sbb
dec
lea
cwtl
sti
out
add
addr16
es
inc
inc
decl
mov
mov
sti
inc
sti
add
sbb
cld
das
dec
cld
cmp
mov
cld
and
push
mov
cld
fcmovne
shrl
syscall
cwtl
mov
sahf
scas
or
pushf
je
add
mov
das
lock
sbb
adc
sub
xor
out
sahf
out
dec
push
mov
sahf
lods
sbb
mov
sbb
sbb
daa
stc
std
iret
sbb
cmp
sahf
aaa
pop
push
and
and
sahf
out
orb
sahf
out
sub
jbe
das
sub
sub
cmp
push
das
fdivs
jecxz
mov
xor
out
xor
pop
call
aas
ud0
sbb
or
fmull
cmp
ds
std
pop
in
mov
lahf
push
jne
cmp
out
aas
scas
xchg
std
inc
shrb
loope
xchg
mov
mov
xchg
add
aas
seto
out
outsb
test
mov
push
jns
mov
mov
loope
jmp
out
in
testl
jne
comiss
push
adc
sahf
ja
cmp
cmp
adc
mov
imul
in
jbe
cmp
mov
iret
leave
leave
lods
mov
out
popf
fisttpl
out
icebp
ja
jmp
sidtl
dec
cld
cs
popf
mov
punpcklwd
xchg
out
sahf
insb
sub
sbbb
scas
das
cld
cs
add
sbb
xor
adc
sbb
repnz
xor
lea
mov
cwtl
movsb
lahf
scas
btrl
jb
rcr
dec
mov
aaa
inc
add
popa
test
xchg
mov
mov
add
sahf
add
pop
xchg
in
in
push
pop
lahf
cmpsl
mov
jns
shlb
mov
imul
add
add
fwait
mov
add
sti
pop
repz
xchg
jo
push
aaa
in
shll
jle
inc
iret
test
sbb
adc
push
adc
push
mov
mov
outsb
fisttps
das
testl
jmp
mov
data16
add
es
push
or
add
dec
lods
push
inc
stos
stos
lahf
add
pusha
dec
add
dec
pop
ss
add
lock
pushf
mov
cs
inc
push
adc
push
iret
or
sbb
aad
out
inc
pushf
adc
outsb
pop
inc
or
or
dec
aaa
xlat
push
ficoml
aaa
xlat
add
insl
inc
outsl
das
pop
mov
jbe
push
out
sahf
adc
pop
fmull
sahf
or
or
aaa
or
jbe
xchg
scas
or
daa
in
pop
test
leave
leave
in
xor
addr16
das
push
xorps
cmp
jae
insl
push
and
jb
cs
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
das
cltd
pop
shlb
xor
dec
loope
sbb
adc
adc
xchg
adcb
mov
add
jno
and
push
imul
imul
pop
mov
loope
sbb
testb
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
test
shll
mov
mov
add
mov
in
call
nop
pop
jle
adc
push
ficompl
fisttpl
pop
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
andb
movsl
jns
xchg
nop
out
sahf
out
mov
sahf
insb
pusha
push
dec
inc
cmp
sahf
out
cmp
sub
out
sahf
out
and
adc
sarl
or
and
in
and
iret
repz
push
faddl
aam
shlb
mov
nop
into
je
iret
repz
push
pop
push
dec
repz
jns
inc
cmp
sbb
sahf
out
out
and
aam
mov
jns
mov
repz
jo
pusha
push
fmulp
repz
xor
push
or
iret
sarl
call
cmp
mov
pushf
push
je
pusha
sub
add
icebp
and
pop
outsb
pop
fisubrl
cmpb
lock
js
clc
mulb
lret
incl
dec
hlt
xor
jecxz
addr16
sbb
es
push
stos
loope
mov
out
or
imul
adc
xchg
aam
popf
loopne
jo
lock
call
push
mov
push
inc
jg
mov
mov
call
add
mov
inc
sgdtl
push
mov
jg
xor
adc
mov
addb
adc
add
int3
or
in
ror
test
mov
xor
ss
outsl
popl
inc
insl
add
xchg
xor
adc
cs
in
add
jg
adc
outsb
add
stc
pop
mov
jl
out
repnz
adc
es
sbb
into
xchg
sbb
jns
sbb
sbb
push
xor
pusha
and
int
mov
push
adc
ds
and
cmp
fisttps
out
iret
sbb
adc
aam
sahf
out
sahf
rorb
or
adc
pop
inc
sbb
fcompl
cmp
repz
sub
and
jns
repnz
push
and
pushf
out
sahf
adc
and
sbb
clc
aaa
inc
out
subl
pop
outsb
ret
popa
ret
imul
mov
xchg
cld
xor
aas
orb
xorl
fcmovnbe
repz
repz
pop
js
mov
mov
jnp
repz
xor
dec
insl
add
out
fidivrs
push
pop
ja
mov
js
xor
jae
das
push
dec
insb
inc
or
sub
dec
push
repnz
mov
enter
cli
or
or
ret
movnti
adc
inc
lods
dec
push
pop
and
sbb
mov
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
push
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
incl
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
jmp
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
decl
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
jg
lcall
pop
cmpsb
lock
mov
popa
sar
mov
sbbb
xchg
xor
clc
repz
mov
subb
fwait
xchg
and
sti
iret
int3
jbe
add
int3
add
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
cmc
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
decl
rolb
jne
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
jb
into
or
inc
add
notb
fmull
xlat
pop
push
add
nop
mov
inc
inc
push
dec
aam
filds
pop
dec
dec
inc
push
dec
inc
aaa
xor
mov
mov
jg
mov
imul
inc
aad
mov
jo
popa
push
outsb
jbe
imul
mov
sub
outsl
js
mov
mov
sbb
and
stos
dec
push
push
cwtl
mov
add
sub
dec
push
and
xor
add
push
inc
dec
push
inc
push
nop
sbb
jo
jb
push
lea
inc
test
lods
xor
gs
gs
mov
cmp
ds
arpl
and
mov
dec
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
add
je
out
xorb
test
adc
das
pusha
add
push
fs
adc
xchg
xor
aas
roll
dec
mov
inc
or
dec
daa
daa
inc
hlt
out
fisttpl
imul
xor
inc
jg
fdivs
jl
inc
jns
dec
lahf
push
xor
les
push
cmp
mov
data16
jns
add
push
test
or
dec
in
inc
pop
and
sbb
sbb
out
dec
push
dec
dec
and
jae
jbe
push
push
or
dec
test
push
mov
xchg
rclb
mov
mov
popf
and
popa
jne
arpl
or
sbb
outsl
dec
dec
pop
xlat
out
add
push
sbb
add
pop
or
or
inc
xchg
push
stos
jbe
add
rcl
fnstsw
cli
dec
sub
mov
insl
shlb
das
addr16
pop
mov
divl
push
negl
imul
push
arpl
outsl
push
jb
or
or
lds
sarb
push
xlat
push
mov
jp
lock
push
aad
and
gs
push
inc
dec
pusha
push
xacquire
sbb
xor
push
push
stos
mov
inc
arpl
push
push
sub
mov
pusha
out
test
pop
jg
stos
pop
insb
outsl
xchg
insl
add
pop
xchg
loopne
rolb
mov
mov
data16
mov
outsl
xchg
insl
add
outsl
ja
inc
xor
ja
add
xor
ja
xor
inc
mov
push
pop
cmp
bound
push
xor
mov
add
icebp
ja
pop
dec
mov
adc
stos
sub
push
and
fiaddl
stos
enter
push
and
jb
leave
dec
sbb
sub
mov
inc
jg
mov
inc
or
iret
aas
incl
pop
dec
push
lahf
adc
enter
and
movsl
stos
inc
out
xchg
dec
mov
jge
es
dec
dec
xchg
sbb
sub
js
xchg
push
dec
lea
cmpsl
mov
adc
dec
outsl
push
shrb
push
dec
push
push
rorl
push
jne
les
outsl
loopne
loopne
loopne
push
sub
outsl
addr16
cmpsb
iret
ss
lea
push
rol
insl
pop
arpl
outsb
sbb
das
xlat
pop
insl
mov
cwtl
jns
daa
adc
push
jl
dec
repz
out
or
iret
repz
mov
jl
sub
aaa
int3
test
inc
insb
push
out
jns
add
js
nop
add
jns
push
and
lahf
incl
inc
addb
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
mov
fcompl
shrl
cmp
ficoms
push
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
dec
call
test
gs
mov
inc
cmpsl
outsl
inc
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
popf
testb
mov
xchg
push
outsl
ja
mov
js
inc
insl
bound
inc
out
sub
aad
mov
inc
inc
js
in
bound
push
dec
orl
jno
fistl
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
imul
pop
popa
arpl
cmp
arpl
or
xor
dec
popa
add
bound
popa
add
jbe
pop
sbb
jnp
icebp
xor
inc
xchg
notb
inc
or
insb
add
lock
fmull
sub
fbld
inc
rorl
ss
jbe
jnp
push
arpl
popl
add
sbb
ret
lcall
fadds
sub
sub
xchg
inc
sbb
inc
and
xor
inc
fstl
push
rcrb
dec
insb
xor
adc
aaa
je
aaa
push
inc
push
mov
add
ljmp
pop
cltd
and
jae
mov
adc
push
dec
push
mov
nop
lods
stos
aaa
inc
or
fisubrs
xor
ficomps
add
jo
inc
inc
add
ds
jnp
add
mov
iret
int
push
dec
dec
sub
xchg
pop
fistpll
xchg
ja
outsb
jne
lods
mov
and
mov
lret
pop
xor
jne
xor
or
add
ss
push
mov
or
mov
aas
jle
stos
pusha
aaa
cltd
dec
jo
add
mov
dec
or
inc
mov
inc
outsl
pop
mov
add
lahf
mov
fwait
incl
or
xchg
imul
adc
rorb
lds
dec
sbb
adc
push
push
js
popa
jo
lahf
or
add
push
outsl
outsl
test
mov
cmp
jno
lds
and
sub
sub
in
nop
test
pop
cmp
aam
pop
ljmp
xor
sarl
jo
test
xchg
pop
adc
insb
jns
das
mov
xor
popa
jb
test
addr16
adc
push
nop
adc
insb
or
cs
test
clc
inc
push
bound
adc
xor
ret
test
ja
pop
adc
xor
xor
add
adc
mov
aaa
pop
pusha
jl
adc
loopne
push
pop
pop
orb
scas
addr16
sub
and
mov
scas
xchg
fisubl
xchg
movsl
sahf
aas
mov
popa
adc
jg
push
outsl
rcll
and
aaa
hlt
mov
insb
mov
push
loop
aaa
pushf
and
cwtl
mov
adc
dec
lds
daa
push
inc
lds
aas
pop
inc
and
and
and
add
push
inc
sbb
push
fisubs
aaa
adc
adc
sbb
dec
pop
nop
inc
or
push
or
pop
mov
int
mov
shlb
pop
and
pop
add
add
mov
add
mov
jne
pop
dec
lcall
inc
dec
push
and
cs
inc
popa
jmp
sub
pop
lea
out
lahf
es
mov
out
ud0
ds
jmp
repnz
in
push
pusha
ljmp
lret
cli
add
dec
pop
push
cld
push
imul
sbb
push
inc
es
add
dec
or
add
and
add
adc
push
stc
mov
cmp
adc
adc
add
mov
test
mov
decb
inc
sbb
add
popf
or
movb
and
mov
mov
mov
push
pop
subb
or
loop
das
inc
dec
sbb
pusha
push
add
pop
add
fiadds
and
and
lods
add
shlb
jb,pn
lcall
xor
in
lret
cs
mov
fs
dec
or
xor
mov
jb
push
xlat
out
test
lahf
jb
adc
sahf
or
jo
pop
sub
xlat
nop
icebp
add
test
aam
adc
push
fs
pop
inc
jmp
add
jmp
mov
sub
lea
gs
lret
ljmp
icebp
paddsw
jecxz
sbb
jp
dec
xchg
in
out
mov
sbb
rol
lahf
inc
xchg
jp
mov
xor
xor
shll
jno
int3
fucomi
gs
inc
xor
add
or
jmp
mov
mov
movsb
bound
into
jl
or
call
push
aam
mov
add
int3
loope
add
lret
jnp
cmp
add
xor
mov
es
jne
or
hlt
and
jb
es
add
dec
test
mulb
or
push
cmp
push
add
push
insb
sbb
sbb
cmp
lds
aad
sti
imul
and
push
sbb
push
movzbl
or
rcll
sbb
call
ffreep
adc
adc
add
fcompl
adc
cmp
jbe
mov
adc
ja
push
sub
pop
xchg
add
add
inc
nop
inc
inc
mov
mov
jp
in
push
mov
dec
or
push
mov
sub
push
cmp
inc
call
je
loope
and
addb
pop
xor
add
outsb
jge
test
ficoml
and
mov
sub
aad
or
lods
repz
mov
jne
push
inc
imul
add
adc
sub
push
bound
push
sti
orb
rcl
outsb
imul
popa
inc
and
jne
or
mov
push
inc
insb
and
adc
int3
mov
loop
loopne
rcr
loopne
adc
adc
add
movsl
mov
jl
hlt
cld
add
mov
inc
mov
leave
fs
jmp
add
add
cmc
push
or
stc
dec
jnp
in
push
leave
push
sbb
pop
mov
into
int3
pop
pop
add
xchg
ficomps
push
push
cwtl
add
xor
xchg
inc
cmpsl
mov
xchg
ret
test
je
sahf
or
inc
fidivrl
dec
pop
push
ret
test
jno
jge
dec
vpcmpeqw
push
nop
sbb
or
test
sahf
lea
pusha
sub
and
sbb
push
cmp
dec
push
test
sbbb
add
sbb
aam
decb
test
movb
dec
adc
or
ficomps
add
push
mov
aam
mov
mov
or
lret
xchg
out
add
pop
pop
push
jmp
push
hlt
add
and
pop
cmp
xor
mov
test
in
push
je
rcrl
sub
dec
in
in
fimull
add
and
or
andb
and
adc
add
cmpsl
or
cmp
shrb
hlt
or
and
mov
mov
mulb
mov
push
and
dec
xor
cmp
push
jmp
jae
aas
adc
fistl
or
mov
push
dec
and
xor
inc
ljmp
imul
and
dec
call
sbb
inc
push
push
insb
fdiv
dec
inc
ror
sub
sar
lahf
push
mov
xchg
xchg
sbbb
sub
mov
and
sbb
or
cmp
push
add
jl
dec
xor
fcompl
psrlw
arpl
fsubs
push
sbb
jp
cmc
rcrb
jbe
push
lea
clts
add
mov
les
jbe
je
or
inc
or
loopne
dec
pop
or
neg
and
pop
xchg
sbb
test
push
push
cltd
inc
ja
mov
rolb
xchg
or
roll
xchg
ja
push
jnp
int
or
mov
loope
xor
das
push
insl
push
pop
call
adc
cmc
add
and
cmp
in
add
add
pop
repz
mov
and
add
cmp
push
pop
inc
push
adc
xchg
pop
sub
sub
enter
push
push
sbb
movsb
shl
xchg
fdivs
mov
pop
push
clc
and
call
push
ds
push
call
call
xchg
sub
xchg
lea
xor
mov
lret
pop
ret
and
rorl
and
nop
in
cmpsl
imul
inc
out
or
aaa
add
push
or
cmp
sarb
loope
call
and
mov
or
sub
call
fnop
mov
insb
sarb
or
mov
xchg
xchg
push
sbb
dec
call
js
in
dec
outsl
enter
inc
int
cmpsb
cmpsb
push
or
sub
shrl
fs
sbb
dec
inc
sbb
sbb
mov
and
pop
mov
mov
cmp
lock
hlt
xor
push
psrlq
inc
push
xor
clc
sbb
iret
ss
js
mov
lea
xchg
add
add
ret
sub
mov
mov
loopne
mov
push
jecxz
inc
push
add
movzbl
aaa
xor
dec
loop
inc
insl
adc
daa
add
bound
mov
fcmovnu
pop
ret
aas
inc
mov
cmp
or
lds
pop
sti
sub
sbb
pop
lahf
mov
movsl
xor
shlb
shrb
or
arpl
xor
hlt
push
sub
xor
xchg
cld
push
jge
cltd
dec
jns
push
adc
pop
loop
xor
adcl
nop
pop
ss
lret
ret
mov
mov
push
mov
push
nop
test
push
jbe
repz
jne
ds
imul
sbb
push
sbb
sbb
sbb
in
andl
pop
shlb
push
cltd
mov
xchg
cmpsb
jmp
fdivrl
inc
stos
lock
sbb
out
xor
les
lcall
int3
call
push
sbbl
addr16
mov
das
mov
mov
std
outsb
add
jb
add
xor
adcl
stc
and
mov
fcompl
jb
call
sahf
les
aas
std
sub
je
cmp
cmp
test
push
adc
push
lea
data16
mov
jbe
test
pop
cmp
sbb
ret
add
or
or
or
sub
rorb
rorb
cmp
fildl
or
lcall
xchg
add
out
adc
cmpsb
imul
add
imul
ret
mov
fwait
hlt
fdivrp
xor
fdivr
pop
pop
lds
pop
loop
addb
sub
sbb
xor
rol
je
sar
mov
jecxz
xchg
fildl
pop
mov
push
xchg
das
aaa
add
ds
arpl
decb
or
mov
or
int3
or
mov
adc
jbe
push
add
mov
loopne
outsl
imul
mov
negl
lea
and
mov
add
rol
icebp
test
fcompl
movsb
pushf
xchg
int3
and
mov
rcl
fldenv
je
ss
rcll
idivl
and
adc
hlt
iret
push
dec
adc
cmp
jne
and
sub
xor
pop
mov
jbe
adc
inc
test
push
pop
lahf
rorb
addr16
shlb
jnp
js
enter
popa
dec
xor
push
push
jnp
and
dec
ret
ret
loope
outsl
push
jb
je
push
popf
jo
ljmp
inc
push
stos
je
xchg
inc
or
popa
pop
add
push
fidivrl
repz
dec
movsl
je
cmpb
adc
cmp
scas
sbb
mov
xchg
or
push
add
add
cmc
lds
movsb
repnz
xchg
ret
sub
adc
push
iret
movsl
or
in
lea
sbb
and
into
cmpsb
mov
fiaddl
mov
divb
leave
push
imul
loopne
pop
cmpsl
cmp
jne
rorb
sbb
mov
aas
js
mov
cmpsb
cmpsl
xor
je
ficoms
or
mov
push
dec
add
push
or
shlb
dec
adc
cli
mov
push
loopne
andl
xchg
sbb
adc
daa
add
cmp
push
mov
jmp
adc
fimuls
xor
shlb
loopne
adcl
dec
in
push
xlat
in
int
push
and
pop
daa
xchg
or
xor
pop
dec
sub
out
sti
and
in
xor
pop
mov
jne
push
or
in
or
in
fldenv
xchg
in
cmpsl
repnz
enter
pop
push
or
xchg
enter
or
jbe
insb
or
pop
adc
leave
sub
mov
jne
mov
clc
or
lods
inc
rcr
movl
pop
mov
pop
mov
cmp
add
ret
mov
inc
inc
mov
sub
jmp
in
and
mov
jns
in
in
in
in
and
push
add
mov
popl
fdivrs
fcomps
les
addb
ljmp
imul
es
cmpsl
mov
insl
pop
adc
push
fists
ret
xor
dec
jp
fimuls
out
adc
mov
adc
cmp
lods
pop
enter
cmp
ficomps
into
xor
mov
inc
push
cwtl
xor
add
dec
mov
xchg
dec
int3
mov
xor
fwait
mov
adc
jmp
push
fdivs
or
inc
test
inc
pop
xor
enter
adc
hlt
xor
add
mov
fistl
enter
out
into
mov
lods
lret
and
push
jecxz
je
aad
repz
mov
push
jg
pop
add
lret
call
inc
shrb
rcr
fnstenv
or
and
add
jo
cmp
test
in
add
andb
push
mov
lods
adc
shlb
in
sbb
pop
in
ret
mov
sahf
in
add
cmp
subb
pop
sbb
scas
jns
xchg
test
pushf
sbb
mov
inc
push
icebp
or
xchg
cmpsl
fxch
mov
add
out
enter
mov
mov
jl
cmpl
ds
inc
fiadds
add
push
push
nop
xchg
mov
ss
inc
and
pop
cmp
pop
dec
popa
inc
dec
pop
and
je
sti
adc
pop
je
mov
inc
test
jmp
cmovp
call
inc
mov
inc
xor
sub
push
sbb
xor
bound
jmp
mov
fs
push
test
loopne
mov
adc
movsl
mov
xor
sbb
mov
push
cld
lcall
iret
xlat
cli
dec
add
cltd
insb
cld
adc
mov
nop
add
or
push
mov
push
mov
sub
dec
add
mov
movsl
xchg
orb
mov
jne
iret
mov
pop
xor
not
nop
push
add
into
jae
mov
adc
mov
mov
mov
sbb
pop
cmp
push
loopne
jge
loopne
ja
push
mov
mov
outsl
push
xchg
push
inc
add
push
loopne
add
aam
repnz
adc
pop
dec
insl
dec
inc
inc
xor
mov
or
or
shr
lods
fstp
pushw
or
jnp
fcomip
mov
call
imul
iret
push
xor
cmp
sbb
pop
cli
sarb
and
push
cmp
mov
pop
inc
sbb
and
enter
mov
dec
out
mov
push
xor
inc
adc
adc
mov
in
inc
dec
mov
jo
cld
and
fsubrl
fsub
add
pop
dec
adc
std
adc
xor
and
push
push
xor
inc
fs
add
add
addl
outsb
inc
push
cmp
in
add
pop
add
mov
loopne
add
mov
cmp
or
push
add
and
mov
mov
cmp
adc
fsubr
pop
outsl
sub
subl
push
pop
testl
int
mov
xchg
and
or
sub
dec
mov
jmp
jbe
cmp
push
xor
clc
add
sbb
jae
lock
lods
je
mov
loopne
aam
inc
xchg
and
push
adc
daa
jl
adc
xchg
adc
sub
push
cmp
jne
shlb
call
and
pusha
mov
sub
or
cwtl
inc
jecxz
push
mov
mulb
push
push
call
pop
fmull
pop
sub
inc
adc
ret
push
xor
push
sbb
les
xchg
xchg
shlb
push
cld
clc
push
jbe
std
push
or
enter
outsl
pop
and
jne
xor
flds
sbb
sbb
pushl
xchg
mov
add
in
lods
pop
cmp
js
xor
lea
push
sahf
orl
xor
frstor
push
cli
mov
sub
loopne
cmp
mov
ret
or
arpl
jg
pop
sub
dec
jno
mov
or
pop
sbbb
lods
subl
dec
adc
sub
dec
and
fnstenv
fiaddl
cmp
stos
adcl
imull
cmp
adc
jne
mov
jmp
or
or
pop
shll
fmuls
or
or
push
or
push
or
mov
dec
pop
push
xor
pop
xor
dec
cmp
mov
shrb
sbb
push
adcl
mov
mov
inc
inc
push
add
addl
es
push
loope
xchg
ljmp
sbb
push
call
jg
imul
push
fldt
add
call
enter
nop
popl
shrl
mov
out
aam
inc
mov
aam
push
mov
lea
mov
mov
stos
fldt
push
fucomip
cmp
je
cmp
jbe
inc
push
movsb
xchg
jne
mov
and
mov
nop
clc
push
and
std
cmp
test
xchg
xor
sbb
pushf
cmpb
in
xchg
xor
shrl
hlt
pushf
cli
bound
rclb
push
cmp
movsb
jae
pop
pushf
loop
xor
or
cmp
shr
andl
aaa
loopne
and
or
add
xchg
test
lock
jb
adc
mov
mov
pop
or
sbb
or
mov
add
fwait
jmp
push
hlt
adc
inc
mov
loop
pop
fsubr
jo
push
sbb
ret
cltd
adc
pop
mov
pusha
mov
cmp
call
or
lea
adc
inc
adc
add
xchg
pop
dec
je
lods
stos
loopne
sti
push
add
je
lock
add
das
sbb
jle
test
pop
out
mov
push
pop
loop
push
add
sub
test
das
push
lock
js
pop
push
lea
pop
xchg
push
mov
push
test
enter
jne
xchg
push
sbb
push
and
push
push
cmpsb
aam
xor
push
and
pop
pop
fdivrl
cwtl
popa
fsubrl
call
popa
jecxz
add
shll
movsb
rcrl
mov
fsub
xor
mov
int
dec
je
jae
js
push
push
loopne
rcr
mov
sub
les
xor
mov
add
or
push
sete
sub
adc
aam
sbb
xlat
jmp
sahf
popa
sbb
mov
dec
inc
adc
xor
cltd
imul
mulb
mov
jmp
xorl
push
xlat
and
ja
cmp
mov
repz
movsb
das
roll
sbb
mov
push
lock
dec
push
hlt
xchg
es
add
hlt
rep
lret
mov
ss
clc
and
cmp
jns
add
pusha
test
or
mov
inc
inc
std
mov
andb
andb
xorl
subb
ffreep
movsl
jecxz
or
and
xor
sbb
dec
hlt
call
jmp
lock
iret
call
push
fdivrl
push
add
jne
mov
or
js
outsb
jne
addr16
sbb
shll
negb
push
int3
out
fistpl
dec
cld
jne
into
cmp
push
mov
das
jmp
ss
cmp
jo
add
pop
jae
shll
or
je
xor
dec
decb
enter
outsl
sbbl
mov
aaa
jmp
nop
xor
add
jae
jne
add
sbbl
icebp
call
shlb
inc
call
push
das
and
push
push
test
dec
setb
push
out
cmp
jmp
call
movsb
sbb
sbb
xchg
sub
pop
jb
movb
push
dec
jl
js
mulb
mov
sbb
push
fistpll
push
dec
xor
fxtract
lahf
and
jmp
pop
xorb
movsb
sbb
jne
inc
or
mov
inc
leave
mov
cs
xchg
add
add
mov
and
pop
mov
lret
and
xchg
jne
idiv
cmc
sbb
push
call
in
movsb
jmp
cmp
in
js
sbb
fptan
aad
test
or
mov
push
call
call
cwtl
xchg
and
int3
jbe
lods
or
sbb
mov
dec
ret
sub
jle
rorb
mov
push
stc
xor
fcompl
shl
sub
insl
out
push
push
jge
test
add
or
or
mov
mov
cmp
pushf
or
cmp
lldt
cld
test
push
and
push
cmp
push
fs
inc
mov
add
hlt
inc
mov
pop
sbb
push
jg
push
dec
lea
pop
call
call
gs
jbe
test
aas
mov
sbb
lea
jl
add
jl
ss
push
decl
or
inc
inc
dec
add
or
jne
movzbl
add
je
sbb
push
aam
nop
pop
mov
outsb
test
test
and
jge
pop
lea
incl
nop
sbb
sub
outsb
shr
in
aas
add
insb
jmp
and
adc
cli
add
jno
sub
sbb
xor
fistl
and
ja
mov
sbb
fists
rolb
jae
inc
pop
rorb
sub
jecxz
or
fs
inc
shlb
xor
cmc
test
in
mov
movsb
mov
sub
inc
jecxz
fs
cltd
pop
inc
call
leave
adc
xchg
outsb
dec
push
push
rcll
rorb
push
call
sub
dec
aam
aaa
or
movb
dec
inc
xchg
cmp
je
aad
adc
clc
cmp
pop
inc
xchg
jne
ss
mov
nop
je
mov
and
aas
enter
adc
ds
xchg
aas
js
add
mov
repnz
call
adc
pop
inc
add
sub
xchg
cli
add
cwtl
nop
pop
push
adc
push
add
subl
xchg
adc
xchg
or
add
fistl
imul
sbbl
inc
adc
or
lds
jp
adc
mov
pop
mov
xor
add
add
shlb
and
xchg
cltd
dec
adc
pop
xchg
push
adc
or
and
aam
mov
fs
pop
popa
pusha
inc
nop
adcb
push
dec
inc
inc
and
push
pusha
popl
or
or
jp
pmaddwd
jle
mov
callw
mov
call
call
sti
push
jmp
js
dec
aam
inc
adc
iret
cmpsb
jns
cmp
call
and
pop
dec
adc
je
pop
int3
pop
outsl
cmpsl
outsl
sub
sarb
out
outsb
fs
or
cmp
or
movzbl
mov
or
neg
ljmp
call
clc
repz
push
pop
jmp
jne
xchg
mov
dec
leave
mov
ret
jmp
dec
add
xchg
sbb
les
into
ret
shlb
xchg
out
cmpsl
mov
xor
rcr
mov
loopne
pop
push
into
cmp
xor
push
mov
dec
dec
jmp
sub
inc
add
rorb
add
xchg
adc
sbb
ljmp
push
inc
mov
cmp
int
push
or
adc
test
and
pop
xor
dec
mov
test
mov
mov
and
inc
fiadds
shlb
arpl
incb
and
push
push
es
cmpsb
add
aaa
int3
adc
movsl
push
and
jo
fs
into
inc
sti
pop
adc
nop
cmpsb
sbb
lods
sbb
xor
es
xor
mov
mov
add
cmpsl
mov
dec
push
cmp
jle
movsb
push
or
in
ficomps
sbb
or
xchg
int3
cs
pop
add
js
sbb
js
dec
add
sbb
push
imull
or
and
push
jae
fs
dec
rorl
adc
inc
dec
cmp
sub
push
scas
and
lea
call
mov
pop
aaa
mov
pop
cmp
movsl
addb
adc
mov
cmpsl
adc
cmpsl
rcrb
and
ds
push
cwtl
cmpsl
push
push
and
push
test
mov
mov
rcrl
orb
shr
aaa
and
les
pop
or
adc
sbb
cmpsl
xor
adc
adc
cmpsl
sub
adc
cmpsl
pop
andb
sub
inc
jbe
adc
mov
popa
cmpsl
lods
lret
call
or
dec
cmp
add
daa
add
sbb
lods
daa
cmpsb
and
or
dec
je
sbb
daa
inc
cs
pusha
out
jge
xor
sbb
je
mov
dec
cmp
test
xchg
pop
mov
fmull
sahf
out
pop
xchg
xor
sub
sbb
popf
out
adc
add
sbb
add
sbb
xchg
into
repz
push
lea
xchg
or
sbbb
mov
or
dec
add
call
sbb
push
out
fldl
adc
mov
or
push
mov
iret
repz
ror
jecxz
or
jmp
ret
inc
cld
or
push
adc
add
inc
shlb
faddl
xchg
fmul
add
test
addl
lahf
xchg
adc
movl
xor
mov
jo
inc
inc
insb
and
dec
or
pop
jmp
cmp
je
scas
fildl
xchg
mov
add
sub
cs
or
lahf
ret
lea
adc
in
inc
xor
push
pop
add
iret
add
in
add
xor
std
cmovb
jo
cmp
je
sbb
add
add
leave
add
and
enter
pop
fisubs
or
xchg
or
or
pop
leave
jae
cld
add
or
nop
inc
lock
or
jns
cmpsb
jb
add
or
or
adcl
scas
in
mov
in
jns
rdmsr
push
jnp
int
adc
pop
adc
and
adc
dec
sahf
adc
int
lcall
add
inc
scas
in
adc
adc
adc
push
adc
mov
pop
mov
sbb
sbb
sbb
mov
xor
fcompl
sbb
sbb
sbb
add
je
push
sbb
iret
sub
inc
jo
xor
sbb
pop
push
push
aas
inc
sahf
aaa
inc
negb
pop
jne
add
lods
adc
sub
clc
add
mov
sbbb
xchg
or
lahf
pop
jmp
cwtl
xchg
mov
in
push
in
imul
rcl
jns
movsl
test
xor
sub
sub
sahf
mov
inc
outsb
fiaddl
jne
adcb
and
pop
maxps
jmp
ljmp
add
add
or
mov
lcall
sbb
in
mov
push
inc
scas
in
xchg
out
or
dec
jae
inc
je
lock
scas
ss
dec
icebp
cmp
sub
and
jnp
or
adc
repz
std
cmp
hlt
imul
lret
stos
xchg
std
cmc
cmc
cmp
cmpsl
div
mov
add
mull
push
shll
clc
clc
clc
or
and
stc
and
jb
iret
cli
cli
add
aaa
xchg
pop
enter
cld
cld
je
fisubrs
and
push
push
nop
shlb
mov
in
push
repnz
sbb
ja
inc
mov
add
jmp
call
sub
jb
dec
das
gs
lahf
shr
inc
dec
sub
push
or
rcl
ljmp
jecxz
xchg
ja
adc
cmp
scas
jbe
mov
popa
pop
push
mov
movsb
sub
out
xchg
pop
push
and
call
or
sti
adc
imul
jmp
aad
aad
jmp
daa
in
cltd
leave
and
or
jmp
pusha
or
pop
insl
nop
out
out
xchg
mov
push
cltd
cmp
or
stos
or
sbb
and
push
cli
stc
daa
mov
imul
mov
das
test
scas
xchg
clc
cltd
jb
or
push
and
stc
sbb
xor
sti
sti
sti
and
or
cmp
pop
in
push
jmp
mov
mov
inc
push
adc
ljmp
push
jne
mov
loop
pop
insl
nop
loop
shll
cmp
pop
push
loope
clc
and
xchg
dec
add
or
out
out
fdiv
and
jne
loope
negl
or
movsb
test
push
xchg
pop
push
and
loope
testl
testl
xchg
das
test
adc
mul
scas
testb
and
testb
repnz
inc
repz
leave
and
testb
xchg
cmpsb
jb
mov
imulb
xchg
mov
int3
scas
mov
pop
or
and
jmp
xor
cmc
cli
cli
xchg
pop
push
sub
sbb
or
or
xlat
inc
ljmp
add
add
push
or
sti
mov
mov
loope
jp
mov
pop
hlt
dec
xor
cmp
mov
hlt
loopne
rclb
pop
jns
mov
repz
repz
and
test
jmp
mov
adc
rorb
cs
or
in
jne
cmp
in
repnz
rorb
cmpsl
repnz
test
cmp
icebp
icebp
mov
xchg
pop
adc
and
ds
repnz
adc
and
test
mov
nop
or
cmp
pop
repnz
icebp
or
jae
stc
mov
dec
icebp
xor
setge
pop
repnz
or
stos
jne
mov
test
sub
jecxz
jp
jmp
jbe
out
push
sub
fists
out
rclb
loope
stos
jge
aaa
inc
cmp
cmp
sahf
add
mov
adc
mov
imul
minps
jne
stc
xor
lahf
icebp
dec
add
movsb
xchg
dec
add
xchg
xchg
jno
ss
jge
dec
xor
mov
sbb
pop
xorl
push
adc
aaa
fwait
dec
repz
repnz
add
cmpsl
stc
xor
jp
sub
push
jecxz
imul
mov
mov
sahf
insb
sbb
push
push
aad
in
jnp
out
xchg
gs
dec
outsb
or
xchg
or
sbb
add
lea
mov
jmp
mov
jns
inc
cmp
and
lret
push
popf
xchg
aam
pop
or
pop
mov
bound
adc
jle,pn
jbe
and
fists
push
je
sarb
addb
dec
sarl
push
pop
or
lea
mov
ficoms
adc
mov
cmp
inc
sarl
div
int3
sub
in
xlat
pop
mov
test
lea
push
mov
adc
pop
call
loopne
popa
ret
lods
mov
pop
jmp
dec
and
or
xor
in
sbb
and
es
xchg
cmp
adc
mov
cltd
xor
pop
insl
adc
and
adc
dec
add
xor
insb
xor
dec
xor
push
int3
xchg
in
xor
and
movsl
xor
adc
mov
cmp
adc
mov
push
push
xchg
push
adc
add
cmp
movsl
and
data16
sub
jmp
inc
imul
pusha
cmp
and
xor
jns
call
sub
mov
sbb
js
sbb
add
add
orb
pop
xchg
pop
ret
movb
js
pushw
xchg
and
push
xor
push
and
xor
add
sub
or
cmp
or
dec
xchg
icebp
cltd
sbb
xorb
adc
dec
nop
in
adc
adc
push
add
add
or
push
or
add
add
sub
rolb
inc
add
rol
in
or
pop
inc
fidivs
aaa
lret
je
scas
lcall
push
lods
clc
add
fistl
fnsave
xchg
popf
mov
pushf
adc
nop
jno
mov
push
jg
in
push
iret
daa
xchg
and
add
dec
add
inc
je
cmc
sub
sti
iret
sbb
or
add
dec
push
cmc
dec
es
add
cld
mov
sbb
mov
xchg
push
dec
pop
jno
cmc
in
adc
mov
cmc
int
and
fwait
rcll
jmp
mov
lcall
adc
in
dec
cmc
outsl
pop
es
inc
mov
pop
ss
xchg
sub
inc
cmc
push
xchg
and
nop
inc
les
pusha
push
orb
lds
cmc
test
mov
pushf
pop
ljmp
cmc
call
dec
cmc
je
sarb
pushf
pushf
pushf
pushf
xor
and
cmp
pushf
sysenter
cld
and
or
in
adc
xorb
mov
pop
cmc
pop
push
xor
xchg
and
adc
adc
pop
cmc
pop
xor
fcomip
cmc
and
jo
inc
imul
dec
shll
mov
in
sbb
movsl
aam
push
mov
pop
and
aam
into
mov
vucomisd
in
nop
hlt
push
stc
in
cmc
rclb
add
cmc
ds
mov
dec
nop
cmc
call
cmc
dec
nop
adc
xor
adc
adc
xchg
sbb
call
inc
je
cmc
ds
cmc
inc
sbb
pop
adc
mov
outsb
leave
inc
pop
xor
or
test
xor
xor
mov
push
mov
jl
imul
je
and
add
mov
aam
dec
nop
xchg
in
repz
das
inc
jb
repnz
inc
cmp
rclb
repz
movsl
loop
adc
push
xor
xor
clc
dec
data16
data16
loope
mov
or
fldenv
iret
dec
or
bound
out
push
cmp
ret
inc
inc
xlat
aas
cmp
mov
xchg
movsl
sub
mov
or
jns
es
mov
and
es
loopne
sbb
jge
inc
adc
xchg
and
cmp
jns
xchg
nop
push
int3
jns
into
pop
dec
xchg
lds
sub
push
daa
dec
mov
ret
fs
jns
pusha
xor
hlt
cwtl
scas
jb
nop
xchg
sahf
xor
mov
mov
dec
ja
repz
and
je
repz
cs
movsb
int
xor
or
mov
movsb
movsb
mov
movsb
jmp
mov
sbb
movsb
xrelease
imulb
push
sbb
and
rorl
push
loopne
sub
cmpsb
mov
test
and
outsb
sbb
dec
mov
or
mov
mov
sub
lret
sbb
js
je
loopne
inc
push
sar
mov
aad
sbb
lahf
call
jge
mov
aaa
mov
mov
add
jno
js
imul
pop
mov
mov
push
loope
into
xchg
mov
fwait
mov
aas
sbb
mov
fwait
xchg
add
jne
inc
pop
xchg
mov
push
pop
shl
mov
or
mov
add
or
mov
xor
jae
call
rcll
leave
loopne
mov
jno
test
jo
rcll
imul
imul
enter
mov
nop
mov
icebp
movsl
xlat
ss
sbb
fs
push
mov
jmp
adc
sarb
lods
outsl
sarl
orb
out
mov
inc
aaa
or
je
nop
pop
stos
xorl
dec
mov
sbb
mov
dec
orl
dec
dec
sbb
fadds
mov
stos
rorl
or
sub
push
lret
insl
jo
addl
mov
out
mov
or
sbbb
orl
aaa
out
imul
in
scas
fwait
jno
sbb
xchg
xor
test
cmp
push
ds
outsb
sbb
pop
orl
das
daa
rcl
fwait
xchg
xchg
jb
adc
adcl
and
sub
sbb
or
sbb
movb
sub
addl
jb
mov
adc
add
outsb
sbb
pop
movsl
sub
sbb
xchg
adc
jae
and
imul
xorl
loop
pop
sbbl
xchg
out
dec
cmp
aam
or
mov
add
addl
subl
or
sbb
xor
xor
sbb
addl
or
jns
sbbl
dec
inc
dec
mov
add
adc
add
insb
or
jnp
xchg
or
int
jl
cmp
dec
push
in
add
js
addl
in
out
test
mov
sbb
xor
or
lods
fimuls
addl
mov
cmp
ss
sbb
sbbb
roll
imul
or
mov
fwait
xorl
jmp
mov
cld
add
lods
imul
fbstp
sub
lods
andb
addl
cmp
addb
lahf
xchg
sarb
cmp
and
pop
enter
adcl
mov
arpl
call
sbb
xchg
xor
jp
out
inc
cli
xchg
push
dec
push
inc
call
add
je
mov
fiaddl
sub
xor
test
cmp
aaa
or
inc
or
adc
and
dec
adc
mov
rolb
mov
mov
sub
andl
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
push
pop
push
inc
inc
inc
dec
dec
pop
cmp
je
cmp
jne
adcl
enter
push
call
inc
aaa
or
lods
mov
rolb
daa
adc
loop
sbb
subl
or
jno
call
pop
aas
xchg
icebp
leave
jmp
xor
mov
les
mov
xor
xor
repz
mov
in
pop
xchg
sbb
xlat
or
orb
out
push
cwtl
rolb
dec
pop
ret
sub
jbe
inc
push
mov
inc
push
pushf
loopne
inc
cmp
jbe
nop
push
addr16
mov
fcomps
or
pop
dec
pop
jl
jge
popf
test
jbe
out
rolb
xorl
mov
sbb
pop
int3
add
pop
push
into
sub
inc
jb
enter
pop
adc
push
push
pop
movsb
mov
hlt
out
push
pop
nop
ret
xor
xchg
add
lahf
es
xlat
jae
mov
and
xor
or
adc
out
lock
push
mov
mov
dec
mov
lret
push
pushf
or
sbb
lret
cmp
scas
mov
pop
add
lret
and
push
xchg
scas
mov
imull
dec
out
mov
pop
dec
mov
addr16
int3
xor
sbb
push
mov
mov
sbb
fmull
push
stos
xlat
jb
jae
popf
push
rcll
xchg
inc
cmp
add
push
mov
movsb
xor
ljmp
dec
mov
shr
push
adc
add
sub
aam
in
cli
mov
mov
fsubl
jg
and
mov
inc
push
dec
jo
outsb
xchg
and
fs
ja
and
movsb
adc
mov
loopne
mov
add
fiaddl
add
xchg
arpl
dec
hlt
out
or
loope
dec
adc
push
clc
add
and
mov
inc
lcall
cltd
int
sbb
or
dec
cmp
das
jmp
push
ret
adc
xchg
test
sub
fiadds
dec
push
fisttps
call
sti
into
jmp
and
inc
mov
addb
push
cwtl
testl
mov
dec
sub
ret
push
inc
xchg
ret
aam
into
add
mov
pop
push
dec
or
add
add
adc
fcmovnbe
pop
add
inc
sub
pop
xor
aaa
xor
push
jnp
add
aam
dec
and
sbb
jmp
cld
push
sbb
xor
loopne
movsb
sbb
jmp
add
sbb
leave
pusha
jmp
mov
imul
mov
jecxz
nop
clc
cs
call
inc
xchg
arpl
dec
arpl
pushf
dec
call
sub
rolb
mov
test
xchg
push
int3
dec
inc
jne
and
xlat
dec
inc
jne
xorl
pusha
rorb
mov
jne
xchg
nop
sbb
frstor
inc
fnsave
daa
insb
jo
inc
call
sti
es
and
push
jne
lea
jb
jne
jne
shlb
nop
fs
enter
jmp
jne
push
enter
adcl
sub
sbb
jne
call
daa
cmp
dec
jne
les
cmpsl
push
test
aam
loopne
mov
sbb
and
mov
cwtl
mov
inc
add
mov
add
fwait
stc
dec
daa
jb
cli
xchg
movsb
add
incl
jl
je
leave
cmp
sahf
xchg
sbb
xchg
andl
sarb
mov
adc
jp
push
sub
dec
pop
loopne
mov
cmp
dec
call
jmp
pusha
addl
pop
or
pop
push
jns
push
cmp
rolb
inc
sub
repz
or
sub
push
or
push
arpl
add
dec
jo
nop
pop
adc
jp
out
push
inc
xchg
mov
add
ljmp
clc
add
pop
adc
push
fwait
stos
repnz
cs
mov
into
push
hlt
xlat
nop
inc
and
cmp
pop
xor
add
jb
xor
sbb
jge
push
inc
call
mov
insl
sbb
lods
ss
pushl
add
faddl
or
mov
es
cmp
or
jne
ljmp
dec
pop
xor
cmp
add
ret
outsl
cmp
inc
jmp
dec
jmp
xor
andb
lock
inc
inc
adc
pop
sub
inc
jmp
inc
inc
inc
pop
dec
adc
es
in
roll
adc
sbb
jb
clts
addl
jmp
fs
stc
add
mov
xchg
xorb
push
push
inc
or
je
lahf
loope
cmp
and
cmp
leave
pusha
or
ss
jbe
fistl
into
call
xor
jae
fsubrp
inc
jmp
add
lret
cli
enter
push
popf
pop
pop
push
or
std
adc
mov
es
sbb
sbb
mov
add
add
loop
pusha
popa
rcrl
push
mov
mov
movsl
dec
xchg
push
fiaddl
lock
rol
pop
sub
mov
jo
or
mov
addl
inc
inc
shl
dec
sbb
jb
cmp
repz
fisubrs
jge
sti
add
push
push
or
inc
jecxz
sbb
cmp
jne
and
roll
cmp
sub
mov
xor
adc
add
mov
sub
push
sar
inc
push
adc
dec
fidivrl
xchg
cmp
mov
loopne
repnz
push
hlt
dec
fcoml
fcomip
inc
fimull
out
cmp
pop
dec
cmp
adc
mov
and
sbb
xchg
movsb
fwait
and
arpl
push
out
sbb
ret
inc
xor
inc
and
test
sbb
test
sbb
add
pop
adc
popa
add
rorl
xchg
mov
jo
add
sahf
in
popa
mov
je
mov
out
out
dec
push
push
out
jp
lock
jnp
movups
adc
mov
movsl
or
add
lret
popf
xor
popa
rcrl
les
mov
xor
pop
sub
mov
rorb
sbb
xor
jg
jne
loopne
add
sub
mov
aad
mov
mov
stos
loopne
push
nop
in
xchg
ret
cmc
fists
bound
add
dec
inc
push
xlat
sbb
add
xorb
inc
sbb
add
pop
jb
dec
daa
cmp
imul
pop
xchg
push
data16
nop
xorb
xchg
insb
fsubs
sbb
jbe
pop
or
jmp
popf
dec
daa
and
add
aaa
leave
adc
and
sbb
rorb
cmp
dec
jmp
push
call
add
shrl
pop
pop
push
mov
call
xor
add
or
pop
sarl
or
jmp
call
imul
andb
div
and
and
ljmp
and
xchg
jb
testl
stos
notl
sti
and
cltd
mov
xor
cmp
je
mov
dec
das
and
loop
xor
add
jns
sub
add
cmp
leave
movsl
ret
or
add
test
dec
shl
ljmp
fbstp
sarb
and
bound
jmp
jno
mul
add
or
imul
mov
cmp
sbb
cmp
testl
dec
pop
and
add
or
sbb
je
rol
sbb
add
push
mov
testl
mull
lret
cwtl
loop
sub
mov
stos
jne
mov
insl
adc
add
jb
ds
or
push
xlat
mov
rcll
sti
aam
push
fstl
and
push
pushf
int
pop
and
push
push
add
jb
mov
push
jmp
jne
cmp
and
call
jb
cli
mov
mov
dec
call
add
stc
outsb
push
dec
ja
add
test
inc
pop
xor
add
xchg
test
nop
push
stc
or
xor
xchg
mov
pop
mov
inc
lea
je
push
mov
gs
idivl
mov
inc
daa
adc
scas
lea
repz
mov
add
push
sbb
mov
push
movsb
add
adc
sbb
mov
lret
add
andb
cmp
sbb
cltd
daa
mov
push
call
add
xchg
mov
test
pop
jo
testl
loope
adc
cmp
mov
addr16
jno
rcrb
cmpsb
mov
popa
mov
cmp
fwait
sub
sarl
push
stos
dec
push
std
fstp
inc
sub
pushf
rclb
sub
mov
adc
stos
dec
push
jb
mov
dec
dec
jmp
dec
inc
sub
sub
sub
jl
ss
pop
sbb
or
xor
imul
sub
cmpsl
and
insb
call
sub
lret
inc
pop
xchg
sbbl
add
adc
addr16
test
xchg
loopne
jb
outsb
cmp
mov
push
cmpb
and
cwtl
inc
or
mov
aam
xor
call
jge
xchg
dec
hlt
push
sbb
xchg
xchg
and
test
adc
movsb
xor
xchg
cmp
and
add
push
xchg
nop
pop
cmp
dec
adc
cmp
cmp
loope
xchg
test
loopne
cltd
movsb
pop
stos
cmp
add
inc
and
and
fistps
cmp
sbb
aad
dec
adc
xchg
cmp
loop
mov
dec
push
call
dec
inc
cmp
loope
xchg
test
rorl
rclb
dec
inc
pop
pop
jp
into
mov
cmp
mov
cmp
movsb
ljmp
lds
pop
xor
dec
enter
or
rolb
call
jo
int
shlb
test
and
jecxz
arpl
adc
int3
mov
cmpsl
cltd
popa
mov
dec
in
loope
cmp
dec
push
xchg
nop
mov
sub
inc
cmp
cmp
or
mov
enter
hlt
cmp
cmp
fldl
cmp
inc
inc
and
and
dec
inc
cmp
cmp
cmp
and
das
test
sbb
xchg
cmp
sarb
xchg
test
or
cmp
shlb
lcall
inc
addl
push
inc
dec
cmp
cmp
cmp
adc
or
test
test
lods
aaa
mov
mov
ffreep
and
sbb
mov
adc
adc
cmp
push
mov
cmpsl
pusha
pop
sub
rclb
sbb
adc
sbb
fnstenv
fwait
or
call
inc
sbb
add
dec
sub
lds
cwtl
dec
push
and
and
and
je
mov
mov
and
cmp
add
cltd
aad
pushf
sbb
sub
cmp
xor
in
cmp
pusha
or
cmp
cmp
sbb
call
inc
out
les
mov
cmp
mov
mov
mov
add
xor
jnp
and
insl
pop
mov
jbe
xchg
sbb
call
push
xchg
scas
gs
sub
sbb
dec
lret
sub
test
push
xchg
push
sbb
sub
mov
dec
les
dec
sbb
cmp
ss
sub
adcb
lret
sub
sete
fs
sbb
cmp
sbb
cmp
dec
sbb
cmp
movsl
or
add
pop
sbb
dec
lret
push
gs
or
dec
sbb
loope
mov
or
xchg
push
push
lret
fiaddl
sub
rcrl
mov
fucomi
dec
sbb
inc
xorl
mov
mov
loop
push
aas
mov
xchg
push
push
or
out
fs
jb
xchg
jns
pop
dec
cmp
rcrb
lahf
sbb
inc
cs
xor
movsb
add
push
int3
out
pop
cmp
bound
out
sarb
int
fs
sti
mov
arpl
and
cmc
adc
sbb
mov
out
inc
mov
push
and
cmpsb
push
movsb
rolb
shlb
int3
and
bound
mov
in
add
pop
inc
mov
or
cmp
pop
mov
mov
push
sbb
fisubs
andl
cwtl
inc
inc
addr16
mov
pop
sbb
shlb
sbb
inc
pop
ss
and
add
add
xchg
and
fnop
mov
loop
mov
lret
xchg
pop
test
add
fcomi
shrb
sbb
movups
jmp
and
je
fcmovne
xchg
add
call
ss
mov
and
xchg
push
inc
dec
arpl
cmp
mov
roll
push
imul
ret
mov
loop
pop
in
mov
scas
mov
js
jmp
dec
sbb
mov
mov
push
gs
push
inc
in
test
xchg
or
inc
adc
lret
nop
dec
push
es
push
scas
mov
pop
loopne
mov
daa
pop
cmpsb
scas
xor
cmp
push
fcoml
or
inc
stos
loopne
pop
ret
or
addr16
and
dec
xchg
test
mov
xchg
pop
add
mov
adc
push
bound
call
cmp
in
outsl
nop
and
inc
subl
enter
push
mov
test
pop
adc
sub
mov
jge
push
aad
je
fnstenv
sbb
fnsave
inc
cs
xchg
stos
sub
and
mov
aaa
xchg
or
and
adc
rcrb
inc
and
lods
out
dec
ret
repnz
aam
or
inc
or
aas
xor
lret
pop
aaa
unpcklps
das
shlb
call
jge
and
mov
adc
call
mov
call
lock
repnz
call
cmp
fdivrs
adc
call
mov
dec
call
push
call
pop
pop
call
pusha
call
in
call
insb
call
popf
das
pop
mov
call
ficompl
sbb
in
mov
mov
dec
es
sbb
cwtl
add
sub
in
mov
unpckhps
in
mov
enter
dec
lods
int3
mov
push
mov
adc
xchg
dec
in
jae
push
push
pop
call
xchg
dec
inc
aam
lock
push
mov
mov
adc
add
pop
cli
leave
or
leave
gs
xchg
out
shlb
loope
adc
jb
pop
sbb
sbb
pop
sub
lahf
sub
movsl
jb
xchg
sub
xor
xor
cmp
lret
cmp
inc
push
inc
inc
sub
cmp
rcrb
dec
xor
push
adc
xchg
dec
sbb
pop
add
add
jo
xchg
and
test
aam
movsb
sbb
ret
xchg
xchg
data16
xor
test
jbe
dec
inc
mov
insl
in
adc
js
adc
mov
enter
xor
push
xor
daa
int
mov
mov
pop
sahf
cli
cmp
xor
inc
test
xor
daa
les
pop
sahf
adc
dec
cli
mov
dec
test
shlb
inc
and
push
adc
and
mov
and
add
inc
daa
dec
adc
sub
ljmp
cmpb
adc
and
sub
mov
dec
inc
pop
pop
mov
mov
mov
pop
mov
mov
dec
inc
das
mov
and
shlb
iret
adc
faddl
mov
lods
pop
inc
mov
dec
sub
nop
or
add
sbb
dec
xlat
inc
fisttpll
outsb
mov
or
adc
aam
sti
cli
and
pop
adc
xchg
inc
cld
ja
adc
outsb
mov
imul
xor
jae
sbb
aaa
inc
sti
xchg
das
inc
dec
outsl
mov
xor
inc
shlb
call
or
push
pop
adc
adc
sahf
mov
push
call
sbb
push
jecxz
pusha
xchg
mov
inc
xchg
xchg
xchg
mov
sbb
mov
shlb
inc
add
rcll
pop
orb
push
mov
cmc
push
mov
stc
mov
mov
mov
push
and
or
lods
adcb
xchg
nop
push
insb
dec
add
stos
pusha
enter
add
xchg
mov
inc
add
sbb
js
mov
lods
add
fbld
fs
or
in
bound
sbb
push
ret
xchg
pusha
xor
mov
push
stos
movsl
inc
cmp
movsl
movb
pop
pop
xchg
adc
outsb
test
push
dec
adc
sub
fld1
dec
mov
inc
cmp
jne
sbb
mov
in
mov
mov
mov
ffree
inc
mov
cli
and
bound
mov
push
in
push
push
out
movsb
pop
mov
movsl
inc
sub
test
add
dec
cmp
pop
mov
pop
lcall
sbb
pop
lods
pushf
xchg
sbb
dec
pop
fwait
and
lcall
cmpsb
pop
je
fstl
cmovge
ljmp
mov
pop
mov
cmpsb
pop
stos
dec
push
sbb
pop
inc
shlb
mov
pop
or
sub
sar
or
add
sub
mov
cmp
pop
pop
lcall
fldl
adc
sub
daa
sbb
jnp
sub
push
pop
push
push
dec
dec
insb
pop
cmp
pop
cwtl
or
sub
xor
pop
and
in
pop
push
and
test
sbb
fwait
shlb
xchg
ret
add
xchg
or
and
pop
loop
stos
rorl
pop
sti
and
aam
mov
call
call
mov
jno
and
sti
je
rol
lods
sti
jo
rcrb
inc
sti
mov
ret
push
out
addl
sti
dec
js
jmp
mov
xchg
leave
lods
adc
shll
push
ret
movsl
add
pop
rolb
xor
mov
es
pop
dec
movsl
add
pop
pop
mov
addl
stos
xchg
mov
adc
mov
aas
mov
inc
aas
or
rolb
sbb
sub
jmp
xchg
xor
aam
xchg
dec
adc
adc
adc
mov
or
inc
shrb
adc
and
and
or
xlat
add
int
jmp
jge
insl
xor
and
gs
les
and
testl
dec
push
mov
int3
lea
mov
jecxz
xor
add
and
sarb
adc
and
pushf
insl
inc
xchg
test
je
adc
aad
not
out
mov
xor
lret
fiaddl
add
adc
fsubrs
loope
jl
popa
pop
push
adc
ret
mov
in
ss
inc
cmp
enter
mull
push
test
mull
in
idivb
xchg
jb
divl
fs
notl
add
insl
inc
ja
jbe
and
shl
adc
aam
mov
push
loopne
pop
div
jmp
mov
mov
stc
push
sbb
enter
jl,pt
in
jo
negb
push
je
mov
jb
sbb
shr
sub
sbb
dec
push
add
push
and
cmp
test
inc
push
cmp
add
cmp
adc
mov
loopne
les
adc
mov
xor
sub
add
or
js
rolb
andb
xchg
pop
sub
daa
rorb
into
jle
je
or
loopne
mov
and
cwtl
and
movsb
inc
daa
fwait
or
ret
xchg
adc
je
daa
lea
daa
inc
xorb
daa
dec
xor
adc
das
xor
daa
or
mov
adc
xchg
ret
xchg
popf
mov
jae
add
jp
push
and
loopne
push
addb
push
loopne
mov
fstpt
pop
sahf
cmp
push
inc
xor
or
add
outsb
add
jbe
fcompl
xchg
adc
movsb
flds
jno
mov
push
fistl
popa
or
shll
out
add
sbb
cmp
pop
mov
push
movsl
shrl
xor
test
cli
push
test
addr16
pop
in
and
fldcw
inc
adc
mov
in
pop
add
push
out
cmp
adc
hlt
sub
fadds
mov
push
push
frndint
sahf
jg
push
mov
test
xchg
je
shlb
mov
sarl
inc
mov
add
pop
pop
stos
mov
call
mov
mov
adc
push
xor
and
cmp
and
push
ja
lret
or
cltd
sub
daa
mov
or
xor
inc
fwait
mov
push
sub
movsl
mov
mov
inc
push
or
push
sub
lahf
nop
loope
add
sbbl
pop
sub
jno
xor
sub
cmpl
ljmp
stos
sahf
sbb
inc
mov
test
mov
push
fstps
in
mov
fistpl
adc
xor
jg
mov
sub
cmp
addr16
arpl
mov
lods
xchg
in
outsl
mov
or
pop
je
push
call
mov
mov
push
xchg
sub
push
jb
pop
fstl
mov
movsl
cmp
enter
inc
loope
dec
mov
movsl
hlt
les
inc
sub
sbb
inc
or
sub
cmp
add
add
fistpl
adc
test
or
mov
call
xchg
mov
aam
subb
or
jo
imul
add
sti
fwait
repz
adc
inc
fdivl
repnz
xlat
fwait
push
push
out
gs
add
imul
mov
fsub
mov
adc
xchg
fwait
loop
jb
jge
adc
jb
adc
sbb
insl
adc
adc
or
mov
cmp
lock
test
mov
cmp
lcall
jne
pusha
xlat
ret
rcl
dec
inc
icebp
in
push
andb
and
mov
movsb
inc
mov
xchg
inc
movsb
repz
mov
lret
shrl
push
inc
add
xrelease
movb
inc
adc
jb
add
cltd
mov
fildl
mov
cmp
cltd
inc
pop
push
xorb
push
or
mov
inc
cmp
enter
adcl
mov
and
xchg
and
adc
jo
xor
int3
or
add
incb
jbe
push
mov
push
inc
or
iret
repz
adc
pop
cmp
add
and
out
lcall
scas
sahf
out
sahf
sahf
mov
push
ds
out
sub
or
sbb
insl
ja
repz
push
mov
pushf
pop
push
lods
jnp
out
push
mov
inc
mov
push
sub
push
nop
movsb
push
repz
roll
xchg
jl
push
inc
cmp
jnp
cmpb
push
push
iret
repz
sbb
repnz
out
sahf
cmpsl
fmulp
mov
out
mov
pop
into
sbb
incb
add
imul
push
loop
sbb
out
mov
xor
outsb
pusha
sbb
pushf
scas
lcall
or
and
out
sub
pop
data16
jns
out
nop
sahf
lods
mov
out
sahf
rcr
in
decb
test
out
inc
push
shr
cwtl
jge
shll
push
sahf
mov
daa
shr
jnp
jnp
loop
clc
adc
sub
cmp
aaa
out
faddp
je
fs
push
cmp
out
outsl
lds
daa
pop
mov
jbe
pop
jne
add
push
cwtl
cmpsl
rcr
imulb
add
das
out
iret
dec
test
cmpsb
jno
repz
add
jbe
push
scas
test
or
mov
push
lock
add
fildl
pop
xor
mov
bound
pop
jne
fcmovu
movsl
xchg
pop
jle
sub
mov
pop
push
arpl
gs
dec
push
je
push
fmull
jecxz
icebp
push
cwtl
sarb
ja
or
add
pop
add
mov
negl
es
mov
out
js
xor
xor
fndisi(8087
mov
fwait
pop
jae
outsl
ss
in
test
xor
sbb
mov
addr16
stos
mov
les
push
out
ss
lahf
mov
inc
mov
mov
or
das
pop
fisubrs
dec
imul
mov
xchg
xchg
les
add
jle
inc
mov
and
testl
lds
jbe
and
imul
and
orl
cmpb
jecxz
fwait
or
loope
outsl
xor
data16
add
mov
das
cmp
mov
jg
clc
xchg
je
add
and
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
dec
cltd
aaa
xchg
rorb
cmp
add
cmpsb
mov
fmuls
xor
jg
jmp
jae
pop
dec
imul
ret
pop
dec
jae
inc
jne
outsb
je
fwait
mov
lcall
jg
inc
les
jnp
inc
xor
sub
pushl
cmp
sub
inc
inc
xor
xor
xor
jge
outsl
call
inc
xor
xor
ss
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
sbb
cltd
pop
aas
lret
punpcklbw
jo
mov
push
jo
or
icebp
loopne
push
fidivrs
cmp
movsb
ss
xor
or
xorl
cmp
aaa
adc
xor
inc
pop
and
ret
ret
jl
inc
jo
pop
push
arpl
xor
fcomip
inc
push
dec
and
cmp
ss
pushf
xor
or
and
dec
dec
outsl
or
push
xchg
gs
push
clc
mov
push
pop
inc
dec
hlt
push
mov
arpl
adc
push
call
push
stc
mov
add
xor
sub
out
fldenv
sahf
cmp
in
mov
lods
insb
mov
movd
pushf
xlat
cmpsb
push
hlt
inc
aam
dec
xor
icebp
sahf
adc
pop
pop
and
outsl
xor
aam
lock
fsubrl
inc
je
push
push
ficompl
push
inc
mov
pop
int3
cmp
add
sbb
cmp
outsb
add
sub
mov
jmp
sub
inc
arpl
insb
fwait
js
lock
xchg
and
outsb
ret
loop
or
lret
bound
inc
xor
cmp
add
mov
inc
push
insb
sbbl
pop
add
or
mov
out
adc
in
stos
jnp
push
push
and
dec
popa
jae
and
push
shrl
imul
xsha256
cmpsb
push
imul
pusha
int
js
daa
scas
scas
je
dec
outsl
das
dec
fs
imul
push
dec
or
xor
add
orb
push
inc
enter
aaa
dec
movsb
jmp
hlt
dec
jae
outsl
push
pop
arpl
inc
roll
repz
dec
push
push
push
add
ja
inc
push
bound
shlb
outsb
mov
add
popa
imul
aam
incb
sbb
sbb
fdivl
outsb
pop
add
and
call
sbb
or
loopne
push
and
dec
inc
rolb
rcrb
movb
push
and
aaa
negb
push
adc
jbe
sbb
push
mov
dec
sbb
andl
inc
leave
or
or
movsl
sub
sbb
cltd
sub
orb
cmp
loopne
adc
iret
das
push
adc
xchg
adc
repz
das
push
sbb
sbb
decb
jns
sbb
call
ds
cmp
nop
cld
and
push
and
jns
jns
stc
cld
stc
jp
push
cld
fmuls
cmpsl
sbb
adc
sbb
push
out
les
int3
ja
pop
mov
and
adc
mov
adc
inc
bound
ja
ficoms
ds
cmp
fcoms
or
inc
xor
add
mov
adc
push
cld
or
out
sahf
out
fmul
les
movsb
xor
xchg
call
mov
jl
insb
push
fs
pop
mov
jns
push
dec
dec
inc
inc
cmp
cmp
push
push
xor
sub
iret
repz
and
sbb
adc
ds
repz
or
cld
or
out
clc
hlt
call
sahf
out
mov
nop
jo
repz
push
xor
lock
int3
mov
iret
repz
insb
inc
sub
jns
iret
repz
cld
push
fcom
out
sahf
out
mov
js
iret
sarl
add
add
loope
cmp
sbb
add
call
fmulp
push
mov
sbb
iret
inc
mov
xchg
dec
dec
pop
dec
pop
and
insl
adc
outsl
mov
ret
push
out
xchg
dec
adc
mov
sub
adc
mov
xor
pop
push
inc
dec
cmp
aaa
xor
mov
int3
adc
adcb
ja
insl
cmp
push
jecxz
adc
rcrl
mov
mov
jo
mov
out
pop
bound
jmp
dec
xor
les
push
fsubrs
jmp
and
pop
xor
inc
mov
imul
pop
push
punpcklbw
adc
and
mov
mov
stos
xchg
icebp
or
mov
pushf
andb
rolb
add
cs
out
dec
inc
push
ljmp
push
xor
xchg
cld
inc
inc
mov
cs
pop
push
jnp
out
mov
inc
cmp
pop
jne
pop
shlb
dec
ret
push
mov
push
je
imul
pop
xchg
pop
dec
loop
sbb
push
int3
inc
cld
and
or
inc
clc
lds
mov
inc
fs
cmp
xor
fists
neg
inc
push
push
push
insb
das
inc
in
stos
dec
iret
outsl
jl
add
scas
mov
adcb
add
das
loopne
outsb
repnz
insb
xchg
loopne
mov
insb
shl
push
mov
movsb
inc
jo
mov
insl
or
add
inc
sub
and
repnz
jg
fdiv
xchg
or
cmp
mov
ss
movsl
fadd
cmp
sete
int3
loopne
jnp
data16
ljmp
add
xchg
sbb
dec
xlat
jns
pop
jbe
jns
rcr
cmp
ss
push
lcall
lret
jecxz
push
test
adc
aaa
or
push
popf
jl
in
adc
aas
sbb
adc
cmpsb
jg
mov
jbe
push
xor
mov
enter
aam
cmp
mov
sbb
cmpsl
mov
outsl
daa
xchg
inc
add
iret
fcmovnbe
cmp
dec
and
sarl
jbe
fstps
movsl
mov
adc
aam
mov
cwtl
mov
adc
fs
loopne
mov
mov
push
sahf
loopne
daa
jbe
xlat
fdivp
dec
enter
mov
ss
bound
push
xor
push
mov
xchg
xchg
pop
pop
add
cmp
push
dec
imul
add
pop
aas
adc
ltr
insb
cmp
push
jnp
lcall
dec
xchg
inc
push
es
pop
adc
add
push
outsl
ja
xor
bound
sub
mov
push
add
pop
pusha
add
out
daa
movsb
and
pop
mov
and
add
inc
repnz
mov
jns
inc
lods
mov
ret
fucomip
cmc
inc
dec
fidivrs
jno
sbb
leave
push
jb
mov
adc
inc
add
insl
jo
lock
add
outsb
push
add
mov
dec
add
xchg
add
push
lods
or
mov
jae
nop
push
adc
sbb
sub
jo
rorb
pop
inc
roll
lret
out
adc
add
jecxz
inc
jecxz
xchg
xchg
sbb
pushf
push
push
add
and
add
es
mov
inc
push
mov
xchg
pop
ret
adc
mov
test
cmp
push
jo
jb
jns
jge
pop
xchg
mov
movsl
and
imul
cmpsl
xor
push
inc
scas
loope
sbb
imulb
push
in
loope
sbb
adc
push
inc
and
mov
pusha
inc
and
cmp
cmpsl
and
inc
imul
jge
xchg
xor
inc
mov
add
dec
inc
add
pop
sbb
fbld
jne
cli
mov
lods
gs
or
mov
notb
rolb
ljmp
mov
push
scas
shll
xor
xchg
and
xchg
jmp
in
shrb
pop
ds
fs
fstl
push
dec
xorl
dec
and
ret
inc
sti
mov
gs
push
adc
and
das
and
push
rorl
jb
xor
and
inc
mov
inc
xchg
push
mov
dec
add
rcll
sbb
aas
das
pop
outsl
mov
mov
inc
loopne
push
fldl
xchg
stc
dec
ficompl
add
push
lcall
orb
mov
push
xor
xor
dec
dec
pop
mov
adc
add
inc
jns
push
fs
lds
lret
mov
lret
mov
outsl
inc
push
outsl
cmp
xchg
pop
roll
add
inc
push
sbb
std
xor
lds
sbbb
sbb
lock
in
js
cs
rolb
insl
imul
push
mov
add
add
adc
arpl
jne
sub
das
push
xchg
out
dec
aaa
dec
inc
dec
pop
or
aas
sbb
sbb
adc
out
jnp
push
rcrb
sbb
sbb
add
add
push
mov
stos
mov
add
jo
add
add
loopne
add
dec
sub
xor
cs
lods
jo
sub
rorb
int3
lock
jo
jno
fs
insb
in
cmp
add
cmp
pop
roll
daa
add
in
xchg
cmpsl
dec
sub
xchg
add
mov
cltd
sbb
imul
add
iret
xor
int
xchg
into
out
outsl
inc
pushf
mov
push
push
push
mov
or
pop
sbb
ret
push
and
popa
xchg
or
jns
insb
cli
adc
jle
inc
jae
adc
add
je
push
xor
divb
add
add
jno
xor
and
into
add
bound
pop
xchg
cmp
cmp
into
insb
sbb
xor
sub
cmp
dec
jle
adc
push
sub
xchg
xor
sbb
and
and
fbld
pop
mov
sbb
adc
fwait
xchg
scas
sub
inc
cwtl
aam
je
les
or
push
mov
push
pop
in
aam
das
or
sbb
jae
sub
adc
mov
add
shl
mov
insb
push
sbbb
test
xchg
push
punpcklbw
imull
mov
and
add
or
push
std
mov
enter
sub
add
adc
and
push
jo
push
mov
mov
dec
add
dec
mov
gs
cmp
inc
xor
adc
sub
fsubrl
movsb
push
or
ss
stos
stos
ret
xor
pop
pop
adc
out
inc
mov
dec
adc
push
mov
and
pop
xchg
add
stos
adc
cmp
adc
leave
adc
lcall
mov
adc
adc
stc
cmp
or
clc
out
lock
out
sahf
call
mov
mov
lods
test
pop
iret
repz
mov
mov
iret
repz
js
push
jns
pop
push
inc
cmp
repz
out
and
cld
in
scas
push
add
daa
call
push
loopne
fcom
enter
jns
mov
pusha
jns
out
push
cmp
sub
repz
out
adc
add
in
iret
repz
hlt
in
in
int3
mov
lods
mov
mov
js
cmp
inc
sub
and
out
jl
sbb
loopne
push
and
sub
insb
dec
adc
loopne
sbb
push
push
popf
mov
mov
push
mov
loop
lcall
pop
hlt
out
shrb
scas
push
jns
rcrb
dec
add
aaa
or
shlb
push
aaa
pmuludq
or
imull
lret
xchg
addb
jbe
addl
push
in
mov
inc
dec
pop
jg
fs
adcb
inc
dec
pop
mov
rolb
cmpsl
mov
bound
and
pop
xlat
scas
jmp
or
ud0
mov
and
mov
inc
lcall
and
dec
andb
repz
pop
jo
add
in
cmp
pop
and
pop
push
or
inc
outsb
inc
inc
and
push
cmp
cmp
insl
xor
sbb
sub
jbe,pn
and
xor
lret
lahf
xor
xor
ds
je
jbe
inc
sub
xor
jae
pop
cwtl
shll
outsb
and
gs
stos
mov
xchg
imul
or
cmp
dec
or
inc
sub
and
pop
pop
rorb
adc
jbe
jb
jne
in
addl
es
popaw
insb
into
sub
jns
sub
cmpsb
stc
das
sti
ss
sbb
fcompl
insl
out
push
ds
inc
add
inc
pop
pop
adc
adc
add
xor
xor
decl
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
jmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
outsl
xor
test
enter
ljmp
ss
es
dec
aaa
push
lcall
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
inc
pop
cld
outsl
ret
add
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
incl
xor
xor
xor
mov
xor
xor
pop
pushl
jae
xor
out
xor
xor
xor
xor
xor
xor
incl
pop
fidivl
scas
xor
shlb
jecxz
call
gs
divl
jno
cltd
ss
ss
paddd
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
pushl
cmpsb
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
push
call
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
out
xchg
ds
jo,pt
test
mov
jmp
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
jg
pusha
andl
xor
mov
xor
xor
jl
mov
mov
xor
xor
xor
xor
pop
xor
cld
jns
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
mov
pushl
pop
xor
jo
xchg
xor
xor
mov
cmp
xor
xor
xor
xor
xor
push
aaa
push
sub
jmp
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
lcall
mov
xchg
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
test
add
ja
pusha
pop
cld
inc
push
or
cmp
pop
xor
push
xor
lcall
jbe
xor
xor
xor
xor
xor
xor
ret
incl
xor
pop
xor
lcall
clc
xor
xor
incl
xor
cwtl
xor
lock
clc
xor
insl
std
xorl
xor
cmp
pop
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
adc
call
cmp
std
cmp
cmp
push
decl
and
cmpb
ds
aas
jmp
xchg
outsb
xor
xor
mov
xor
sbb
xchg
cmp
cmp
mov
mov
decl
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
dec
aas
push
mov
aas
js
cmpb
aas
sarl
aas
in
out
out
jo
icebp
mov
je
loop
xor
xor
xor
xor
cmpl
leave
xor
xor
loop
xor
xor
stos
cmp
xor
mov
xor
xor
scas
std
xor
mov
jmp
xchg
ss
add
or
aaa
and
ljmp
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
pop
hlt
fcomip
xor
cmp
xchg
outsl
cmp
xor
pusha
cmp
fistpll
jmp
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
inc
inc
cmp
cmpb
cmp
push
stos
cmp
hlt
inc
cmp
or
cmp
cmp
cmp
cmp
cmp
repnz
cmp
sub
xor
cmp
cmp
dec
cmp
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
cmp
push
cmp
jae
mov
cltd
cmp
jp
jg
cwtl
ds
mov
data16
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
cmp
lock
mov
rclb
xor
mov
push
sahf
xchg
les
ljmp
inc
jmp
xor
cli
or
adc
and
sub
cmp
jmp
test
xor
xor
xor
xor
xor
outsl
sar
mov
jl
cmpsl
xor
xor
scas
jno
xchg
xor
cmc
or
xor
cmpsb
pushl
xor
xor
jmp
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
mov
decl
scas
cmp
fbstp
jp
cmp
fdivrl
aaa
cmp
mov
mov
data16
dec
cmp
cmp
mov
push
cmp
sbb
add
or
xor
cmp
bound
lcall
loopne
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
decl
or
sbb
ds
xor
xchg
aas
add
mov
insl
xor
mov
decb
xor
xor
xor
xor
jl
fdivrp
push
cld
inc
andl
jmp
repnz
decl
cmp
cmp
pop
cmp
jge
mov
scas
sar
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
out
jmp
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
cli
decl
jg
mov
fwait
xor
xor
loopne
loopne
dec
or
repnz
aas
xor
cli
xchg
divl
pop
xor
fsub
adc
es
decl
ss
outsb
notb
ss
in
and
cmp
cmp
cmp
mov
test
pop
adc
cmp
pop
cli
add
inc
push
imul
cmp
test
mov
ret
decl
cld
scas
cmp
dec
cmp
cmp
jae
aam
fnstsw
jecxz
pop
icebp
call
cmp
cmp
cmp
cmp
pop
sarb
inc
cmp
mov
mov
pop
and
push
cmpb
or
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
xor
outsl
mov
push
xor
aad
out
cmp
or
xor
aad
pushl
xor
xor
xor
mov
xor
push
lcall
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
jg
pop
xorb
clc
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
call
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
aas
sbb
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rorb
pop
cld
les
sub
jne
adc
xor
xor
xor
jg
xchg
xor
xor
xor
cmp
mov
add
ljmp
jmp
pop
adc
adc
sbb
sbb
sub
sub
nop
cmp
cmp
test
enter
sarb
aam
in
ljmp
push
out
xor
aaa
ret
adc
cmp
inc
xor
xor
add
jl
mov
jmp
cld
jg
xor
mov
mov
xor
xor
filds
inc
shlb
xor
cmp
sub
sub
xor
jmp
cmp
inc
cmp
dec
cmp
push
mov
pop
xor
add
pop
fidivs
cmp
cmp
mov
mov
mov
cmp
mov
cmp
cmp
pop
jge
add
lock
dec
cld
mov
pop
push
add
or
adc
sbb
aas
rolb
and
and
sub
sub
xor
cmp
inc
cmp
clc
jecxz
inc
xchg
dec
cmp
pop
cmp
cmp
mov
cmp
je
jl
cmpb
push
mov
fistpll
cwtl
mov
sub
pushl
loope
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
rolb
or
aam
fdivrs
loopne
clc
jbe
cld
shr
adcb
pop
bound
clc
xor
xor
inc
xor
xor
cwtl
xor
xor
xor
xor
loope
or
cmpsb
cmp
or
xor
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
aas
std
es
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
jecxz
hlt
ss
call
ss
ss
incl
cld
stos
mov
or
or
adc
adc
aaa
sbb
and
and
sub
call
aaa
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
and
inc
pushl
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
sbb
popf
clc
nop
aaa
xchg
aaa
cwtl
into
mov
dec
mov
icebp
lcall
mov
mov
aaa
enter
shlb
aam
fdivs
fsub
and
sub
in
out
aaa
hlt
pop
mov
push
xor
aaa
hlt
add
or
adc
adc
sbb
cmp
fdivrl
call
mov
cmp
pop
decl
pop
sahf
jl
cwtl
cmp
cmp
sub
cmp
cmp
cmp
scas
cmp
mov
add
insb
cmp
jl
test
jg
mov
mov
cmp
mov
mov
movsb
mov
loope
loopne
movsl
imul
adc
incl
shlb
pop
repnz
inc
test
push
pop
sub
xchg
push
push
push
push
add
jl
xchg
push
inc
mov
cltd
push
inc
push
or
sarb
jl
movsl
xchg
push
inc
mov
xchg
pop
out
fildll
int
daa
sbbl
dec
loope
addb
jns
inc
add
mov
add
cmc
test
pop
fbld
sub
jne
add
lods
mov
fistpll
and
addb
shrl
mov
sub
add
insb
repnz
and
or
sbb
mov
mov
xor
sbb
or
cmpsb
dec
add
sub
xchg
sub
inc
add
pop
cmp
mov
add
sbb
test
lods
ret
xor
aas
gs
sbb
add
inc
or
pop
sbbb
pusha
or
gs
push
fimull
xchg
mov
imul
adc
imul
mov
mov
xchg
sbb
ljmp
and
sub
je
jae
xor
pop
sub
push
pop
sub
add
jl
or
incl
jb
push
or
hlt
cmpsb
xor
mov
jmp
add
sub
dec
or
adc
fsubs
cmp
add
cmpsl
xchg
mov
mov
fnstenv
call
add
popl
sbb
rcrb
mov
lods
pop
mov
cmp
mov
jb
push
cmc
and
xchg
jp
mov
cmc
sbb
xchg
and
or
jo
mov
push
test
push
and
xchg
pop
pop
in
pop
mov
lods
push
and
push
es
jo
mov
andl
clc
sbb
in
and
sbb
ret
xchg
mov
leave
add
xor
js
std
sahf
add
lret
dec
cmp
mov
mov
inc
jle
and
dec
insl
xor
inc
cmp
jne
and
or
loop
test
add
jle
jmp
push
cmp
call
adc
call
inc
nop
ljmp
mov
adc
jne
imul
mov
fistps
inc
imul
push
lea
sarl
xor
pop
add
inc
nop
pusha
insl
sahf
push
or
dec
fdivs
inc
loop
sbb
inc
and
adc
xchg
or
in
jbe,pn
mov
cmp
cmp
les
loope
sub
into
xor
xchg
fisttpl
mov
sbb
lea
sbb
cmp
or
pop
clc
fnsave
sbb
mov
cmp
dec
repnz
add
dec
test
and
pop
ret
and
adc
movsl
mov
pusha
imul
addr16
add
mov
rclb
adc
clc
movl
js
jecxz
pop
add
es
push
mov
push
xchg
inc
add
lret
shrl
mov
cmpsb
stos
sub
sub
pushl
push
mov
test
mov
pop
xor
mov
add
jne
aad
pop
pop
push
sbb
cmp
pusha
dec
or
xchg
jo
pop
mov
or
stos
shrb
ret
inc
std
mov
push
lods
cmp
std
sub
sarb
push
xor
push
inc
jmp
std
sbb
inc
jmp
mov
and
lods
in
cmpsb
mov
sbb
mov
and
std
pop
int3
sbb
mov
xchg
or
popl
dec
std
ror
inc
push
or
ja
cmp
xor
mov
or
std
cmp
adc
xchg
cmp
cmp
leave
lds
or
fildl
and
inc
call
xor
xor
adc
push
pusha
cltd
jl
pop
enter
push
addl
dec
or
dec
cmpsb
adc
adc
dec
int
gs
dec
xor
dec
add
inc
testl
loope
or
cmp
inc
push
mov
cmp
inc
lahf
cmp
sbb
jmp
jne
jecxz
add
fldt
lret
xor
adc
add
mov
lds
fistpl
adc
loope
aaa
inc
dec
loope
xchg
push
aaa
les
xorl
or
lods
add
sarb
ret
sbb
inc
jmp
jmp
add
jmp
aas
mov
pop
pop
add
xor
and
xlat
pop
xor
adc
cmp
cmp
fs
mov
mov
mov
leave
cmp
sub
in
push
sbb
inc
dec
sub
adc
fisubrl
pop
cli
sbb
and
dec
jge
push
std
pop
xor
push
ds
jl
dec
lahf
int
jl
sbb
call
mov
adc
dec
call
call
push
pop
sahf
jbe
outsl
es
pop
mov
and
add
xchg
lods
xchg
pop
cwtl
and
mov
or
dec
mov
lcall
pop
and
mov
pop
test
sbb
call
add
add
rcr
fimuls
sub
ss
gs
mov
pop
mov
and
pop
je
ja
add
inc
fsubs
push
add
cmp
sub
sbb
sbb
or
inc
gs
add
dec
cmp
gs
bound
mov
jo
and
add
pop
fistps
adc
add
fstpt
mov
mov
or
sbb
add
ficoml
in
in
or
sbb
sbb
adc
dec
or
cld
pop
add
cmp
add
inc
sub
add
jbe
iret
ljmp
sbb
jnp
add
add
pop
fistl
add
adc
sub
shll
insb
push
push
push
and
sahf
inc
hlt
jl
push
cmp
out
pusha
and
pop
ret
pop
mov
cmp
nop
pusha
jecxz
fadd
mov
es
jno
fistpl
sbb
mov
dec
cmpsl
jae
cmp
xlat
pop
jne
mov
jg
jnp
cmp
nop
push
and
mov
mov
add
dec
pop
aaa
andb
cmpsl
dec
jg
imull
xchg
fs
out
pop
push
dec
inc
and
les
sbb
jmp
popf
sub
cmpsl
sub
sub
add
lret
and
xor
pop
nop
push
push
out
inc
push
fs
mov
xchg
jne
pop
cmpsl
lret
push
cmpsl
mov
loopne
call
mov
clc
cmp
or
add
gs
and
inc
cmp
inc
push
push
push
cmpsl
sub
jmp
xlat
inc
xchg
mov
and
xchg
cwtl
sbb
stc
and
test
pop
fs
and
and
sbb
popa
hlt
or
fs
in
ds
pop
inc
cltd
xchg
push
stc
adc
inc
push
call
mov
mov
dec
aad
leave
repz
push
ja
stos
jnp
add
fisubl
mov
dec
push
pusha
lcall
xchg
lret
add
daa
es
add
daa
andl
xor
daa
daa
daa
daa
daa
daa
add
shll
daa
daa
imul
inc
push
and
sub
pop
mov
sub
sub
or
pop
and
sub
sub
lcall
sub
sub
sub
adc
sub
stos
in
inc
cmp
xchg
sbb
push
or
push
cmp
cmp
adc
ljmp
adc
mov
add
inc
stos
pop
push
lock
cltd
push
xor
fs
pusha
lods
subl
data16
ss
sbb
pop
cmc
fldenv
push
jnp
lock
jp
or
clc
fs
lret
push
dec
sbb
pop
mov
adc
outsb
sub
psubsb
cwtl
and
or
es
xor
or
loopne
or
inc
mov
mov
or
add
addr16
adc
je
pop
add
or
addr16
or
hlt
jle
movhpd
push
out
push
rorb
nop
adc
mov
pop
push
mov
inc
pop
iret
addr16
test
mov
or
ficomps
or
xchg
push
adc
xor
push
push
data16
repz
adc
cmp
cmp
add
sub
jmp
daa
adc
adc
ret
call
out
add
push
xchg
cltd
mov
sub
add
or
or
sbb
sub
shl
mov
pushf
dec
mov
add
pop
ds
jo
sbb
cltd
inc
in
aad
loop
cltd
xchg
mov
icebp
xchg
and
cwtl
pop
push
call
jb
cwtl
lret
pop
jge
cwtl
rol
inc
mov
subb
jne
dec
outsl
cltd
nop
cmp
mov
xor
sbb
xor
add
cvtdq2ps
pop
adc
fiadds
sub
arpl
cltd
add
sub
sbb
test
loop
adc
and
rcrl
jb
pop
ljmp
inc
bound
pop
cltd
sbb
and
imul
jns
mov
push
add
test
aam
inc
rorl
sub
addl
outsb
adc
dec
fs
mov
insb
cmp
stos
roll
mov
add
fidivrl
out
dec
mov
mov
sub
lods
inc
shrl
push
repnz
enter
mov
cmp
mov
mov
pop
xchg
sbb
into
stos
mov
adc
imul
jo
test
test
nop
push
push
pop
xchg
and
popa
ja
push
jne
rorl
rcll
in
fimuls
lods
push
rcl
dec
inc
push
mov
mov
lret
add
push
loopne
inc
pop
outsb
push
mov
rcr
cmp
sub
add
inc
call
test
fsubrl
push
jne
test
mov
cwtl
test
adc
inc
push
pop
or
inc
aad
roll
roll
orl
sbb
shrl
sub
push
cmpsl
cmp
push
xchg
nop
sub
inc
roll
xchg
pop
daa
or
adc
popf
mov
or
pop
push
inc
cmp
adc
icebp
mov
pop
mov
movsb
add
adc
fcoms
or
jg
push
inc
pop
test
cs
icebp
adc
push
hlt
xor
andb
pop
enter
cmp
inc
inc
mov
or
pop
and
jmp
push
push
or
les
loop
and
mov
add
das
pop
and
xor
add
pop
shl
push
ds
dec
ja
pop
mov
pop
and
sub
not
mov
ja
sub
hlt
inc
xor
movsl
hlt
pop
sbb
imul
xchg
sbb
sbb
push
sbb
sbb
pop
inc
dec
dec
rcrl
sbb
cmp
in
movsb
pop
mov
push
and
call
movsb
mov
mov
je
outsl
adc
fdivs
lds
cmp
stos
loop
xchg
rolb
cmp
inc
pop
call
dec
or
xorl
pushf
cmovbe
outsl
mov
int3
jo
nop
rorb
movsl
addb
in
cmp
cmp
push
roll
dec
into
orl
lahf
test
ss
and
jae
addr16
call
lock
lods
jl
xor
push
or
pop
fistpl
add
filds
push
jmp
pop
push
xorb
stos
mov
imul
and
add
cwtl
mov
push
push
mov
or
pop
cmpsb
int3
cmpsb
pop
xor
pop
fstpl
cmpsb
dec
push
dec
ffree
loop
sub
jns
dec
push
int3
fdivl
mov
cmpsb
jle
mov
call
cmpsb
pop
inc
das
pop
push
xchg
or
ss
int3
in
cmp
pop
inc
fdivl
fdivl
mov
xchg
mov
pop
lods
lret
call
sbb
pop
jecxz
popa
rorl
push
cmpsl
sbb
inc
or
mov
adc
and
mov
dec
push
mov
dec
lock
cmpsl
fmull
lret
adc
pop
test
push
int3
dec
faddl
rclb
in
or
pop
sbb
or
add
or
bound
leave
repnz
loopne
je
or
fs
or
clc
pushf
or
push
adc
loopne
movb
loopne
sub
sbb
loopne
add
xor
inc
nop
scas
addr16
in
and
sub
rclb
add
add
sub
rolb
in
xchg
lcall
sub
cmp
andl
add
cltd
loopne
push
and
sub
adc
mov
les
mov
iret
push
push
mov
inc
mov
fcoml
push
adc
and
lea
mov
loopne
stc
xchg
xor
cltd
xchg
sbb
push
cld
push
push
inc
mov
mov
and
cmp
adc
popf
cmp
xchg
sets
dec
leave
sub
mov
dec
outsl
and
ljmp
mov
fdivr
or
and
popa
adc
repz
sub
fldenv
sub
out
or
ds
inc
sbb
xchg
add
nop
iret
dec
push
sub
fcompl
inc
inc
lea
inc
cmpsl
rolb
dec
add
sbb
mov
adc
sub
scas
outsl
adc
inc
adc
jns
jp
call
xor
ret
xor
mov
pop
cmp
pop
ret
add
in
cmc
stos
fcomi
sti
imul
ret
call
push
adc
mov
xchg
and
imul
jge
push
sbb
subl
sbb
mov
jns
adc
add
mov
sbb
sbb
inc
push
mov
inc
or
icebp
inc
mov
or
fld
mov
cmpb
dec
push
sub
pop
jl
mov
cmp
inc
jno
add
mov
in
or
sbb
sti
pop
pushf
xchg
pop
lret
adc
or
push
inc
add
xchg
mov
arpl
mov
outsl
adc
movl
mov
xchg
mov
or
test
xchg
filds
inc
sbb
inc
inc
aam
mov
push
inc
filds
jno
sbb
jecxz
xchg
sub
xchg
inc
xchg
push
fsubs
add
xor
jne
es
jae
mov
mov
pop
adc
adcl
adc
imul
daa
mov
imul
mov
fdivl
dec
mov
test
pop
xchg
sbb
shrl
stos
test
test
cmp
into
xchg
lret
add
aam
cmp
inc
cmp
mov
rcll
sub
sbb
shrl
xchg
sbb
cmp
sbb
cmc
rorb
mov
xchg
add
push
es
add
inc
push
push
rclb
pop
rcrb
adc
pop
add
sbb
dec
mov
xchg
inc
mov
xchg
xchg
jg
je
push
push
inc
jge
xchg
movsl
xchg
inc
and
mov
imul
add
fs
mov
push
ljmp
pusha
xchg
mov
fwait
es
aaa
ret
mov
pusha
inc
xchg
movsl
xchg
add
dec
shrd
int3
dec
jmp
call
xchg
mov
shlb
sub
and
icebp
add
pusha
bound
cltd
sub
lret
xor
sbb
inc
in
jnp
in
dec
add
or
sub
push
cmpsb
test
fcoml
cmpsl
cmp
pop
adc
mov
in
ds
dec
adc
adc
mov
loope
clc
pop
jmp
add
mov
ljmp
adc
push
xorb
jb
mov
adc
pop
mov
fmulp
pop
insb
push
fprem1
shrb
pushf
loopne
mov
ss
pop
dec
mov
pop
pop
dec
inc
addl
mov
cmp
inc
fst
fdivs
inc
aas
inc
pushf
mov
push
inc
insb
push
and
sbb
inc
mov
adc
dec
sahf
in
mov
loopne
jne
adc
cmp
xor
inc
xchg
call
mulb
and
fstpt
push
cmpb
and
add
xbegin
outsb
fnsetpm(287
cmp
inc
pop
gs
push
ja
mov
inc
cmpsb
dec
fistl
cli
xorb
jns
ret
pop
and
inc
fldcw
inc
fisttpl
adc
and
fistl
xchg
orb
pop
dec
or
pop
or
je
loopne
mov
inc
fisttpl
fisttpl
or
sub
pop
sbbb
fidivrl
push
or
fldt
fcmovnu
mov
ficompl
mov
scas
jecxz
jns
adc
cmp
rcrl
fildl
fldt
call
adc
jecxz
mov
fs
sub
shlb
jno
fnsave
push
out
cmpsb
fimuls
add
and
xchg
add
adc
arpl
push
jo
xor
fnstsw
mov
add
adc
inc
sub
in
iret
leave
xchg
jno
inc
sar
lock
je
mov
repnz
xchg
inc
les
shrb
sub
dec
pop
repnz
mov
adc
cld
mov
hlt
mov
fdivrl
aam
int3
mov
pop
pop
push
repnz
test
mov
xchg
mov
jns
pop
pop
pop
pop
jno
imul
push
mov
cmp
xor
sbb
and
or
mov
in
mov
pop
cmp
inc
lret
mov
sbbl
stos
mov
push
jb
mov
and
cmp
jo
gs
sbb
dec
mov
enter
cs
in
pop
cmp
mov
in
mov
cmp
dec
push
lret
mov
sbb
and
cmpsl
mov
push
jb
addl
pop
cmp
inc
gs
sbbl
inc
mov
push
jb
mov
and
cmp
or
sbbl
mov
or
test
lcall
and
inc
dec
mov
xor
or
and
inc
pop
mov
or
inc
lcall
xor
cmp
dec
push
sbb
or
repnz
sbb
cli
mov
xchg
and
and
sbb
imul
data16
cmp
inc
inc
inc
dec
lcall
imul
jl
dec
dec
movsl
adc
cmp
mov
dec
and
addb
inc
and
add
dec
push
test
rolb
sub
add
xor
inc
and
and
dec
int3
mov
pop
test
insb
inc
push
stc
push
repnz
mov
stc
jb
dec
mov
push
test
mov
cvtpi2ps
inc
enter
inc
inc
pop
mov
call
and
dec
leave
inc
mov
icebp
or
or
scas
test
or
sub
sub
xchg
push
push
rolb
test
test
mov
decl
mov
push
sub
aam
sub
push
mov
pusha
cwtl
xchg
leave
inc
inc
sub
push
push
add
ret
sub
cmp
dec
scas
mov
outsb
push
or
movsl
gs
hlt
push
mov
cs
scas
lret
les
xchg
and
mov
scas
xor
push
shrb
scas
jl
stos
pop
xchg
scas
mov
jbe
mov
sbb
xor
mov
sarl
sub
adc
scas
push
sbb
cmp
mov
push
lds
ja
scas
add
mov
scas
repz
scas
xchg
movsl
rcll
push
xchg
movsl
inc
sub
sub
inc
lds
bound
pop
mov
dec
or
add
add
add
or
cmp
repz
pop
push
adc
and
pop
pop
jle
cmpsb
xchg
shrl
pusha
xchg
and
sub
stos
cmp
scas
test
inc
fdivl
pushf
jmp
sbb
loop
shrb
and
test
leave
aam
and
cwtl
gs
test
test
mov
mov
add
in
mov
fisubrs
andl
dec
into
xchg
movsl
sbb
mov
xchg
dec
jbe
cmp
push
jno
mov
test
cmp
stos
mov
pop
test
mov
test
sub
call
sub
xor
test
hlt
xorb
ljmp
xor
pop
cld
jp
lahf
gs
adc
jno
lret
shrb
and
test
pop
jp
subl
or
pop
xchg
scas
mov
jbe
int
hlt
mov
xor
aaa
dec
adc
aam
dec
test
sub
test
fisttpll
pop
cmp
pop
cmp
daa
shrb
mov
add
push
call
sub
test
int
test
fsubrl
arpl
adc
and
inc
int
movsl
shl
sub
pusha
insl
add
sbb
sub
in
sub
mov
movsl
and
lret
xor
xor
shrl
and
xchg
movsl
test
xor
test
xorl
nop
jbe
cmp
sbb
mov
and
xchg
sub
xchg
sti
test
and
mov
lock
scas
cld
mov
mov
outsb
or
test
pop
xchg
test
xchg
movsl
jne
xchg
or
adc
mov
add
push
xor
push
or
pusha
xchg
movsl
xor
sbb
test
mov
mov
cmp
rcl
cmc
or
mov
js
int3
mov
add
test
data16
and
pop
mov
mov
flds
jbe
xor
sbb
je
or
stos
shlb
int3
mov
mov
xchg
and
in
cmpsb
or
test
cmp
jmp
inc
push
xor
add
pop
xchg
dec
das
test
add
je
mov
and
jmp
add
test
test
int3
mov
test
inc
sahf
aaa
dec
jp
mov
loop
andb
xchg
enter
shrl
mov
pop
fldcw
mov
sub
lahf
lods
rclb
test
xor
test
stc
xor
mov
test
or
les
adc
or
test
pop
test
pop
xchg
test
shrb
loope
sub
add
les
adc
test
dec
lods
cmp
sbb
sub
sub
and
mov
test
jae
test
add
bound
int
cmpsl
movl
add
call
xchg
inc
jb
shlb
mov
out
mov
xchg
out
adc
and
adc
mov
jmp
sub
call
push
dec
andb
dec
fstl
cli
iret
jmp
leave
fbstp
rorb
inc
cs
fadds
xor
shlb
lahf
adc
ja
dec
sbb
data16
pusha
jp
and
add
repnz
mov
adc
or
sub
insl
addr16
cmpsb
ljmp
jmp
mov
or
xor
mul
cmpsb
push
testb
push
sub
repz
cmp
sahf
out
ds
sbb
ss
jns
out
push
pop
outsb
adcb
mov
or
sahf
out
test
jb
jns
out
mov
sahf
out
push
stos
adc
cs
repz
push
pusha
jbe
sti
cmp
repz
into
call
iret
repz
ds
mov
insb
addb
cmp
fsubs
push
dec
add
adc
and
mov
push
lea
orb
pop
jno
pop
sbb
stc
cmp
push
push
push
mov
out
jns
mov
add
push
clc
mov
imul
mov
xor
aaa
inc
adc
out
add
and
mov
jns
sarl
or
out
mov
test
adc
adc
push
adc
xchg
sbb
cmp
repz
call
cmpsl
xor
repz
mov
dec
imul
cmpb
imul
cmp
repz
cmp
bound
out
subb
aas
pop
adc
and
add
es
mov
outsl
or
inc
push
rorb
pop
iret
sub
adc
push
cmp
repz
and
add
cmpsl
stc
clc
xchg
in
loopne
fsub
jns
out
int3
enter
out
sahf
mov
mov
pushf
cwtl
xchg
nop
mov
jns
out
test
jns
je
insb
push
out
pop
pop
push
push
dec
out
sahf
out
inc
inc
cmp
sahf
out
sahf
xor
sub
adc
cmp
repz
call
repz
xrelease
sub
jns
out
pop
movsb
jl
sahf
out
sahf
push
dec
inc
xor
or
sarl
in
shlb
repz
cmp
int3
xor
test
push
xor
jg
and
out
jnp
add
lock
mov
subl
or
mov
xchg
add
adc
inc
pop
add
push
aaa
xor
push
push
add
fs
xor
pushw
mov
es
enter
shlb
jbe
xor
add
fisubs
loopne
pop
or
iret
lds
sbb
daa
add
daa
aas
icebp
xchg
insb
xchg
push
ficoml
lods
push
daa
mov
xlat
push
mov
inc
add
outsl
sarb
and
mov
insb
jle
push
pop
cmpb
inc
pop
jbe
int
shll
jbe
add
sbb
cmpsl
jb
jno
mov
push
nop
adc
add
and
rol
fcomp
cmp
test
aaa
inc
pop
rorl
fsubl
xchg
xchg
push
pop
nop
cmp
push
scas
inc
fisttps
fmul
aas
inc
lahf
popa
jae
pop
inc
jg
dec
jle
enter
pop
xor
aas
sti
push
arpl
test
push
sbbb
mov
fsubl
push
clc
push
dec
int3
jbe
shll
pusha
loop
daa
movsb
inc
sbb
fisttps
and
fimuls
ret
imul
outsl
test
jl
xorb
sub
mov
xor
shl
push
enter
push
inc
insb
pop
jne
bound
scas
outsb
cs
lahf
dec
outsl
adc
sub
imul
push
pop
rorl
aas
je
lock
data16
rclb
jnp
daa
dec
cmpsl
mov
leave
addb
lret
scas
test
lret
mov
jb
push
pop
xor
push
arpl
add
outsl
insb
add
mov
and
jb
cmpl
sbb
sbb
lret
add
push
add
lret
xor
lds
arpl
outsl
and
or
lret
or
fwait
jo
pop
adc
xor
sub
shrl
int
incl
dec
add
sub
or
rcrl
lods
mov
xchg
lcall
push
test
addr16
or
sbb
or
xchg
xor
push
imul
lahf
mov
pop
xor
push
sub
sub
sbb
sbb
and
arpl
add
or
adcb
sbbb
data16
mov
push
orb
pop
pop
mov
or
rcrl
or
sbb
xor
add
insl
loop
mov
insl
push
add
test
cwtl
popa
sub
addr16
sub
add
mov
inc
sahf
daa
adc
xchg
movsb
xchg
jle
pushf
cwtl
jns
out
xchg
nop
mov
je
pop
push
pop
dec
inc
cmp
repz
cmp
xor
repz
repz
and
sbb
stc
cmp
sbb
add
xchg
hlt
xchg
iret
repz
push
enter
repz
lods
test
mov
mov
jl
je
repz
push
insb
push
fs
push
dec
mov
repz
adc
in
xchg
cmp
repz
mov
repz
repz
sahf
out
fidivrs
jo
pop
inc
cmp
iret
cmp
and
adc
lock
jns
out
loopne
mov
sahf
out
insb
pop
dec
add
and
mov
pusha
pop
cmpsl
dec
push
xchg
outsl
add
test
loope
fwait
or
sahf
neg
mov
stos
or
orl
and
add
push
roll
and
ja
dec
lds
pop
pop
cs
clc
mov
mov
jg
cld
pop
enter
or
lcall
xchg
sub
xor
inc
push
ret
aas
fildll
xchg
add
adcl
jns
add
cmp
call
fnstenv
fiaddl
sti
inc
xor
rcr
xor
xor
cmpsb
dec
sar
dec
cmp
ss
ss
nop
ss
test
icebp
aaa
sub
ss
jg
ja
sbb
cmp
cmp
aas
cmp
fstpt
push
ret
icebp
cmp
xchg
push
es
lret
cmp
cmp
cmp
int
dec
test
ret
mov
cmp
add
adc
xor
cmp
cmp
pushl
ljmp
enter
aad
fmull
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
into
ljmp
popa
push
data16
jbe
jnp
cmpl
loopne
xor
movsb
aas
mov
sarl
div
dec
add
inc
fistps
jl
xchg
cmpsb
mov
xor
add
xor
rcrb
xor
xor
mov
mov
xor
xor
into
das
xor
faddl
scas
cmp
xchg
mov
cmp
xor
inc
rcr
add
xor
xor
jmp
outsb
cmp
mov
pushf
xor
xor
xor
xor
xor
or
jmp
xor
xor
xor
dec
mov
ss
mov
ss
lods
ss
pushl
sbb
xchg
mov
pop
ret
loop
cmp
cmp
add
out
xchg
cmp
xchg
sarb
das
xorb
mov
sub
aaa
leave
clc
xor
xor
cmp
cmp
cmp
sarl
push
outsl
cmp
cmp
shlb
aaa
mov
cmp
cli
outsb
cmp
popa
cmp
cltd
idivb
adc
clc
fdivrl
in
cmp
dec
push
add
ja
jle
test
push
mov
inc
cmp
hlt
cmp
inc
ds
ds
ds
and
jg
cwtl
xchg
xor
xor
xor
xor
loope
xor
push
xor
pushl
std
xor
xor
xor
xor
inc
lds
xor
xor
sub
mov
repnz
dec
ss
bound
xorl
ss
es
or
ss
jecxz
cmp
ss
ss
aaa
or
push
add
fbld
push
xor
aaa
addr16
push
sarb
adc
push
cmp
push
out
xchg
jno
cmp
pop
cmpsb
test
mov
mov
dec
sarl
fdivrs
cmc
outsl
push
in
jmp
repz
cmp
and
or
jg
cmp
cmp
pop
push
jecxz
dec
sbb
jno
jns
jle
xchg
mov
xchg
outsb
sbb
dec
lahf
cmp
push
add
push
add
insb
outsb
sbb
cmp
cmp
cmp
cmp
cmp
cmp
push
push
jno
mov
push
mov
pop
shrl
jg
mov
inc
cmpl
aas
ret
aas
iret
arpl
sbb
ds
js
xor
into
xor
lcall
lea
xchg
xor
xor
xor
xor
xor
clc
or
xor
jo
in
pop
xor
xor
bound
fldl
or
cmp
insb
and
jmp
ret
xor
xor
adc
push
fs
aad
ss
ss
arpl
stos
add
ss
ss
add
sbb
outsb
adc
jne
jle
sbb
pop
decb
sbb
sub
ret
clc
in
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
aas
cs
dec
cmp
arpl
outsb
ret
gs
cmp
cmp
scas
in
inc
or
pop
adc
or
cmp
sub
mov
leave
clc
aas
push
fbstp
divb
data16
mov
ss
xor
xor
xor
xor
xor
fbld
sbb
xor
xor
xor
xor
xor
xor
pushl
xor
xlat
xor
ja
mov
pushf
ss
mov
push
add
into
and
xor
leave
test
pop
loop
cmp
pop
cmp
lcall
cmp
mov
jmp
std
cmp
mov
ds
imul
mov
lret
aas
inc
xor
jl
jecxz
or
xor
or
out
sub
jg
cmp
cmp
dec
cmp
bound
stos
cmp
aad
dec
pop
sbb
cmc
xor
cmp
push
xor
xor
js
cmpsb
ss
adc
sbb
daa
xchg
icebp
pop
jge
xor
ss
aaa
dec
aaa
pop
aaa
fs
or
jae
pop
pusha
out
rcl
scas
cmpsb
xor
xor
and
cmp
test
repnz
adc
mov
pop
cmp
ret
jb
dec
sbb
adc
mov
mov
popa
je
call
call
cld
cmp
push
int3
mov
add
jno
xchg
insb
jb
xor
push
adc
sub
push
orb
ja
push
mov
fsubrp
xor
fbld
jo
or
or
adc
adc
sbb
sbb
rclb
mov
cmp
inc
xor
mov
adc
xor
push
pusha
xor
xor
push
lret
es
lock
lret
mov
mov
nop
xor
sahf
popa
sub
xchg
mov
cmpl
fdivs
fmuls
xor
ss
lock
xchg
xlat
jbe
xor
test
jp
cmp
push
xor
fs
sbb
sahf
outsb
jo
bound
sarb
jo
push
add
dec
add
pusha
jo
fmull
mov
out
shl
ljmp
sub
sbb
pop
rclb
xor
xor
xor
xor
xor
dec
fcomip
push
add
xor
push
sbb
std
xor
fs
xor
arpl
cmpsb
sbb
pusha
xor
xor
aas
mov
in
call
xor
xor
add
xor
loop
add
lahf
adcl
sbb
xor
aam
pop
hlt
cmp
inc
xor
xor
xor
xor
xor
pop
xor
mov
pop
jo
je
js
jl
andb
paddd
jge
pushf
xor
bound
xor
xor
xor
xor
into
shlb
addl
inc
orl
mov
lods
ljmp
sbb
mov
movb
or
push
call
sahf
and
fdivr
add
andb
inc
xor
pop
pop
pusha
cwtl
fcmovnu
mov
add
add
or
pop
jp
incl
push
or
or
or
or
or
adc
adc
push
adc
imulb
inc
les
or
pop
sbb
adc
adc
mov
jbe
adc
add
data16
or
mov
inc
add
ss
inc
loop
xchg
mov
adc
cmc
mov
add
xor
fs
or
jb
imul
es
mov
adc
xor
adc
jmp
and
xor
inc
mov
adc
xor
cmpb
pushf
or
adc
inc
sbbl
or
cmpsl
dec
xorb
movsb
mov
xchg
or
adcb
imul
popa
add
add
cmp
add
adc
mov
ja
adc
push
or
call
inc
push
pop
popa
jno
and
adc
mov
or
sbb
xor
adc
loope
icebp
mov
adc
sbb
mov
mov
xor
test
roll
stos
js
pop
adc
aad
std
or
add
aaa
cld
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
adc
incl
pop
lahf
mov
movsl
jecxz
cli
pop
mov
ljmp
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
call
data16
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
lcall
mov
orb
int3
lcall
mov
push
pop
mov
pop
pushl
inc
pop
movb
xchg
sbb
scas
adc
mov
xor
ljmp
lods
scas
xchg
test
aam
and
sbb
sarl
and
roll
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
outsl
or
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
cmpsb
call
lea
pop
cwtl
int
arpl
push
out
or
mov
inc
mov
sahf
pop
clc
sti
jg
jno
lock
push
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
shrl
add
jg
dec
mov
or
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
negb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
mov
stos
imul
scas
fadds
in
sub
aam
pushl
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
lcall
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
lcall
dec
popf
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
es
in
add
inc
adc
loope
fisttpll
out
je
hlt
icebp
aas
std
cli
push
push
push
idivl
cmp
sub
jg
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
decl
sbb
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cli
je
scas
cmpsb
orb
mov
mov
pop
push
cmp
js
jmp
xchg
pop
clc
pop
hlt
lret
fistpll
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
das
rcr
out
sarb
sbbl
jno
or
sarb
jg
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
jmp
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
ljmp
sbb
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
mov
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
jg
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
adc
xchg
and
push
push
jo
pusha
imul
add
mov
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
pushl
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
lock
cmp
fmull
enter
jecxz
scas
incl
in
pop
mov
sub
mov
dec
incb
fisubrl
loopne
sti
lds
mov
or
cld
inc
or
bound
repnz
jg
mov
aad
jbe
test
mov
mov
iret
push
out
jbe
push
sbb
stos
icebp
pop
incb
jno
outsl
sti
ljmp
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
mov
sar
xorl
push
fisubrl
imul
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
fistpll
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
decl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
fistpl
insl
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
mov
insb
sbb
cwtl
inc
mov
lock
jo
aas
repz
sbb
lock
in
jmp
test
or
out
sbb
aaa
clc
push
std
mov
jmp
test
mov
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
fisttpl
out
rolb
pop
or
or
fidivrs
les
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
mov
mov
hlt
dec
mov
xlat
inc
incl
fdiv
jg
mov
jg
mov
sub
addr16
fucomi
call
jp
std
adc
cltd
or
mov
ret
loop
cmc
mov
add
lock
pop
pop
div
cld
testl
sbb
scas
stc
adc
insl
xlat
lahf
loope
jae
jmp
sub
jg
mov
jg
incb
into
out
icebp
mov
loope
mov
cmpsl
popf
in
pop
and
mov
fbstp
nop
xchg
test
das
ss
out
cmp
pop
mov
js
data16
decb
adc
cmc
decb
dec
adc
call
imul
popf
dec
add
cmp
mov
cmp
int
add
push
pop
aaa
std
ffreep
cmp
dec
inc
sbb
jnp
jg
xchg
fimull
ret
rorb
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
or
cmp
or
jp
dec
add
push
xor
xor
outsl
adc
iret
fdivrl
xchg
lcall
jo
and
pop
gs
sub
jo
sarl
pop
movsb
and
jno
ret
fs
or
sbb
jmp
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
mov
std
lcall
int3
xchg
imul
lods
add
jmp
std
mov
daa
jmp
faddl
or
inc
push
jae
mov
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
mov
fsts
mov
or
add
clc
or
push
sti
pop
inc
add
outsb
nop
cltd
push
push
nop
mov
incl
test
and
add
lcall
cmp
pushf
push
lret
mov
call
pop
sahf
int3
dec
aam
in
mov
arpl
mov
mov
inc
cltd
push
testl
mov
pop
jmp
aad
aas
sub
enter
cmpsb
ljmp
fildl
fwait
in
shll
pop
mov
mov
jge
push
xor
ret
sahf
mov
sbb
sbb
je
sbb
adc
lcall
inc
cmp
mov
mov
pushf
mov
fcmovnb
clc
nop
int
push
jne
adc
add
lods
ljmp
shlb
and
lcall
sub
pop
push
fidivrs
cmpsb
mov
aas
bound
mov
push
rorb
dec
les
mov
movsb
dec
std
ljmp
rclb
aas
iret
in
hlt
push
icebp
mov
cltd
add
adc
enter
mov
push
sti
sub
movsl
mov
insb
scas
lcall
or
adc
pop
push
mov
xrelease
dec
dec
ljmp
cli
scas
imul
sub
cld
pop
lcall
jg
mov
and
adc
clc
mov
pop
mov
jb
pop
xchg
lcall
sub
jecxz
shlb
andl
mov
incl
inc
nop
dec
addr16
sub
sahf
add
in
cmpsl
mov
mov
and
call
jo
lahf
mov
adcb
cs
pop
out
adc
inc
fstps
call
ljmp
push
lret
frstor
and
and
stos
add
mov
pop
pop
push
ljmp
inc
out
and
xchg
in
pop
in
pushl
jl
xorb
sbb
in
mov
lret
adc
pop
outsl
and
cmp
jns
mov
mov
cmp
sub
cli
pop
lcall
push
nop
stc
xor
mov
cmp
je
sbbl
dec
data16
fcmovne
mov
int3
mov
test
shll
cmp
ljmp
daa
out
out
cmp
movsb
adc
sbb
jg
call
adc
push
daa
outsb
pop
push
hlt
inc
fstl
pushf
stc
pop
jmp
lsl
fidivrl
nop
xchg
das
pop
xchg
test
xorb
in
data16
xchg
cmpsb
dec
decl
mov
test
scas
arpl
ljmp
fisubl
pop
inc
mov
popf
sbb
call
add
lcall
rcll
lods
cmp
sub
push
fistpll
repz
fldt
fisubrs
mov
data16
cld
mov
dec
gs
outsb
push
xor
pop
cmc
lahf
test
dec
cmc
cmp
pushl
sbb
jae
stos
or
pop
pop
push
sub
push
add
std
int3
cmpsl
dec
inc
adc
ret
sarl
mov
les
inc
jnp
xor
add
lret
jle
cmp
sahf
div
call
adc
jbe
out
adc
sub
mov
xchg
xor
pop
daa
jnp
ret
stos
sub
mov
dec
or
je
bound
inc
pop
aaa
mov
ja
push
jmp
hlt
sub
aas
lea
test
mov
mov
xchg
push
sti
shll
xor
incl
and
sbb
mov
lret
mov
sub
pusha
mov
daa
insb
mov
lcall
xchg
inc
js
cltd
pop
sub
mov
shr
cmpsb
dec
adc
stos
rep
outsb
fsubs
inc
xchg
sarb
fcomip
jmp
dec
filds
sub
cmpsl
shl
inc
int3
jb
dec
push
gs
incl
inc
push
xchg
iret
roll
ds
jp
or
sub
call
movl
idivb
inc
addr16
or
pushl
std
ljmp
inc
test
jb
stc
fldcw
ljmp
decl
fcmovnu
mov
xchg
lods
pop
pushf
fisubl
ret
adc
in
mov
rclb
jg
xchg
int3
or
std
ljmp
add
xchg
xchg
cmpsb
push
dec
incl
mov
test
test
pop
sbb
add
mov
testb
push
mov
iret
pop
ret
pop
mov
into
dec
sti
pop
je
adc
out
cli
nop
pop
mov
ds
push
mov
or
lcall
push
popf
lcall
push
fnstenv
xchg
mov
inc
cwtl
mov
jecxz
sub
jg
decl
jmp
test
sbb
fwait
pop
std
or
mov
pushl
loopne
clc
mov
mov
aad
mov
out
ret
xor
out
clc
ja
or
dec
in
cs
sub
hlt
pop
mov
jp
add
inc
sbb
lcall
pop
repz
adc
adc
sbb
cltd
jno
fwait
sub
mov
xchg
ljmp
mov
outsb
inc
cmp
fisubrs
cld
mov
sub
test
popa
test
mov
cmp
jbe
decl
jae
cmp
xlat
sbb
cmp
shr
jle
pop
xchg
incl
xchg
cmc
mov
idivb
decb
pop
jmp
addr16
mov
fistpll
mov
mov
js
fwait
ds
jno
sahf
repnz
pop
sbbb
mov
lcall
pop
cmp
lods
jo
out
cmp
insb
mov
in
addr16
xor
fistpl
mov
int
or
movsb
push
enter
incl
cltd
in
aam
pop
dec
sbb
inc
in
in
subl
adc
xor
decl
xchg
js
sti
mov
stc
xchg
and
stos
and
sbb
loopne
rcl
jmp
adc
xchg
div
jae
and
fsubs
iret
pushl
inc
in
nop
pop
shlb
sbb
es
fcoml
push
leave
insb
mov
xchg
ret
push
and
and
rorl
divl
pushf
sbb
incl
in
and
cmp
jmp
adc
cmp
dec
push
and
xchg
mov
jmp
cmp
push
call
imul
lea
loope
sbb
mov
test
add
rcrb
mov
enter
pop
mov
fnstenv
std
push
fwait
inc
out
sub
mov
lds
xchg
jb
jl
inc
les
repnz
repz
cmp
push
push
dec
call
jmp
es
adc
leave
shl
pop
xor
push
sub
jmp
ljmp
loop
mov
jmp
ret
mov
outsl
int
jg
out
and
and
mov
and
je
out
push
pushf
lcall
incl
mov
cltd
movsl
xor
sub
je
in
fldenv
push
xchg
jbe
inc
into
testl
shlb
loop
in
cmp
lea
int
push
jp
rorl
lods
imulb
movsb
lcall
mov
cltd
sbb
repz
add
je
imul
push
into
adc
cmp
dec
fdivrp
pushl
add
mov
in
pop
sbb
cmc
jle
sbb
mov
lcall
incl
xor
push
out
in
dec
inc
es
sbb
jno
cmpsb
adc
pop
dec
call
cmp
outsb
dec
addr16
in
mov
cmp
call
sar
adc
das
push
jle
xor
jae
sub
imul
ljmp
push
push
popf
jle
loope
push
jns
or
add
nop
mov
enter
out
pop
add
or
sbb
xor
cmp
dec
jl
decl
cmp
test
daa
clc
xchg
aas
push
clc
fimull
in
dec
push
xlat
mov
mov
lcall
adc
ret
lret
aad
jle
sub
sbb
xor
jne
or
dec
ljmp
add
aaa
je
idivl
movsb
mov
or
and
add
imul
push
add
ret
ds
jbe
lock
decl
mov
in
jo
movsb
test
xor
lea
adc
into
fcomip
push
push
mov
cltd
sbb
pop
jle,pt
pop
lods
fsubrl
push
lahf
lea
incl
popf
jo
xchg
jle
mov
mov
xlat
mov
ret
lods
mov
scas
ljmp
jecxz
aas
inc
aam
test
sbb
cli
and
scas
inc
out
jp
pop
clc
je
adc
mov
call
aam
scas
inc
dec
sub
jmp
movsb
jmp
dec
or
dec
jmp
xchg
inc
push
cmp
pop
mov
in
aam
pop
mov
insb
fs
into
std
decl
gs
es
jle
sbb
add
inc
sub
and
or
push
inc
in
das
clc
mov
lods
in
inc
cld
dec
notb
jbe
int3
adc
mov
ljmp
jle
xchg
out
sbb
dec
xchg
or
dec
je
or
decl
inc
xor
add
shll
push
clc
lds
jne
pop
push
fidivl
ljmp
cli
xor
out
mov
sub
popa
sbb
jg
pop
sub
inc
sbb
pop
jle
jae
adc
add
outsb
sub
mov
adc
ljmp
mov
cmc
and
out
rcll
adc
pop
pop
test
add
adc
std
fnstenv
add
cmp
in
inc
jge
aam
sahf
fcompl
pop
scas
inc
ja
inc
jnp
out
fnsave
jne
out
add
cmp
jae
scas
ljmp
mov
cltd
ja
pop
mov
push
push
ja
insl
bound
andb
mov
ds
decl
sar
inc
insl
ja
cmp
xchg
aaa
mov
jb
dec
shll
jbe
call
notb
and
imul
out
sbb
rcrb
shll
add
push
ret
idiv
jmp
cmpsb
add
pop
call
mov
fnsave
fwait
xchg
jmp
xchg
mov
imul
cmp
sbb
mov
stos
jl
sub
jnp
shlb
andb
push
push
iret
addb
arpl
push
mov
jmp
inc
repnz
sbb
lahf
lods
mov
push
pop
xchg
shll
inc
mov
fbstp
in
add
xchg
mov
enter
cli
jo
ss
pop
les
ds
mov
ljmp
xchg
inc
or
lret
sub
lods
jbe
and
es
in
into
lds
outsl
std
unpcklps
gs
or
cmp
xchg
mov
xor
ds
outsl
inc
jle
mov
cmpl
lcall
cs
jmp
push
mov
lcall
out
lods
pop
ja
xchg
push
shll
enter
xchg
ljmp
sbb
mov
data16
int3
test
pop
sub
sub
call
gs
add
push
test
ret
add
mov
lds
or
shlb
mov
adc
add
bound
pushf
xchg
jae
mov
pop
vsqrtss
pop
mov
lret
jle
xchg
popa
adc
pop
call
mov
or
scas
dec
incl
fdivl
fdivrl
imul
cld
jle
push
clc
cli
mov
jg
pop
out
mov
mov
mov
inc
aam
cltd
je
push
cmc
cltd
cwtl
nop
addr16
mov
inc
movsl
inc
ss
and
leave
ja
js
nop
aad
loopne
mov
dec
icebp
add
scas
jle
int
movsl
push
loope
out
mov
out
aad
pop
adc
inc
pop
cmp
stos
ljmp
or
sbbl
lcall
pop
and
bound
jmp
pushl
and
pop
mov
jne
cwtl
insl
mov
roll
fsubrs
adcb
cltd
jge
lcall
out
sbb
stc
aad
push
and
lret
test
cmp
fistps
lret
and
imul
lods
xlat
push
out
mov
pop
call
jmp
daa
sub
movsl
pusha
pusha
icebp
aad
popa
lds
push
lcall
cld
test
loopne
push
scas
xchg
sbb
cmp
sar
or
dec
push
aam
hlt
xchg
shlb
xchg
xor
dec
and
in
dec
pmaxsw
cli
push
lea
cmovg
dec
data16
arpl
push
in
fs
ljmp
cld
outsb
mov
mov
jb
mov
fildll
loopne
sub
in
int
dec
cmp
cmp
or
lcall
js
push
fs
testl
lock
mov
xchg
push
in
xchg
cmpsb
incl
cld
fxtract
mov
push
lcall
inc
pop
outsl
mov
fs
sti
and
lcall
sub
xchg
movb
jnp
popa
aad
daa
cltd
adc
dec
sbb
mov
repz
push
fwait
push
xchg
mov
cmp
cmp
mov
scas
mov
std
loop
fsubs
xorl
pop
std
jg
jb
data16
addr16
shrb
sbb
jbe
cmp
ljmp
jge
pop
and
or
ljmp
jne
inc
inc
pop
enter
ljmp
jne
and
push
enter
shl
inc
xchg
fistl
sbb
lds
std
jne
inc
sub
incl
lahf
test
scas
push
das
loop
enter
movsb
pop
shl
repz
hlt
or
inc
popa
sbb
emms
je
insb
and
cmp
mov
push
dec
xchg
std
lcall
call
ret
sahf
fwait
jle
sbb
jl
mov
push
lret
pushl
testb
dec
jecxz
jno
pop
in
movsl
mov
add
jbe
xchg
rorb
lcall
bound
dec
lahf
adcb
mov
pop
inc
repz
test
out
call
iret
or
pop
mov
fucomp
xor
aam
sub
add
cmp
je
lea
adc
fiadds
pop
xchg
pop
sub
lcall
add
push
outsl
icebp
inc
fiaddl
mov
cmp
adc
lea
bswap
enter
lcall
and
jnp
inc
test
jae
mov
out
cmp
mov
xchg
fdivrl
push
decl
jg
jecxz
rcr
cmp
mov
movsl
out
mov
out
test
xchg
mov
iret
fnstcw
sub
int
adc
cmp
mov
adc
xchg
sbb
jne
xor
push
adcl
add
incl
xchg
call
popa
idivb
and
ljmp
rcrb
fimuls
xchg
sti
cmp
daa
xchg
repnz
mov
push
sbb
mov
or
mov
pop
jo
movb
mov
lods
cs
incl
and
int
jbe
int3
cltd
test
popf
lods
test
call
mov
ret
ficomps
jmp
ljmp
jae
arpl
hlt
mov
lea
enter
mov
mov
sbb
aam
sub
inc
jp
xchg
movsb
lret
inc
inc
fistpl
idiv
decl
pop
mov
aad
insb
sub
fildl
xor
lahf
mov
mov
incl
lock
movsb
inc
and
movsb
mov
loop
and
dec
jp
push
loopne
cmc
mov
mov
mov
push
push
outsl
bound
pusha
stos
jmp
push
xor
jl
sbb
test
xchg
sbb
inc
sbb
cmc
sbb
adc
mov
insb
stos
push
jg
pop
outsl
pause
outsb
mov
psrlq
addl
add
cmc
nop
sbb
incl
dec
lret
mov
fs
pop
push
in
lods
je
outsb
adc
or
loop
cld
sbb
call
inc
xchg
flds
and
fnstcw
cmp
ljmp
mov
mov
mov
pusha
fadd
push
ja
push
xor
int3
xor
dec
call
and
xchg
mov
adc
dec
ficoml
xor
pushl
jnp
sbb
xchg
push
ret
out
insb
inc
pop
and
jge
mov
xchg
cs
test
decl
inc
out
mov
dec
push
mov
xchg
xchg
mov
sbb
popa
push
push
pop
adc
aad
loopne
aaa
pop
sub
into
fimuls
mov
pop
pop
mov
push
stc
mov
and
gs
ljmp
shlb
stc
jg
push
data16
lea
jno
push
into
push
lahf
cmp
popf
jmp
sarl
js
adc
adc
jle
pusha
mov
test
loope
add
aaa
std
pushl
mov
pop
negb
jmp
inc
mov
cmp
cli
out
mov
xchg
adc
movl
out
bnd
sahf
and
sar
shrl
leave
dec
mov
testb
nop
jo
movsl
mov
inc
jle
mov
popf
sub
imul
andb
mov
add
ret
jmp
cli
sub
mov
xchg
test
scas
scas
sbbb
imul
into
mov
mov
push
push
icebp
outsb
scas
int
xor
and
cmc
test
adc
loopne
lods
int3
sbb
ds
jp
sub
leave
popa
lret
adc
mov
xchg
dec
mov
mov
xor
push
push
dec
push
pusha
leave
aaa
cltd
sti
iret
ja
test
cli
loop
pop
subl
incl
pushf
jge
imul
or
ds
int
movb
dec
xchg
gs
fstpl
adc
in
cmp
dec
jecxz
icebp
mov
dec
pop
fisubs
dec
mov
and
dec
mov
jmp
cmp
cmpsl
sarl
test
addr16
jg
call
mov
fs
in
hlt
pop
data16
stc
aad
ss
push
xor
ljmp
ffreep
fs
cmp
test
cmp
and
lret
push
xchg
sar
jg
fisubrl
adc
lahf
stos
movsl
shll
shll
and
fisttps
cld
loope
arpl
pop
jo
test
cmp
shlb
and
jge
movsb
call
jo
add
pusha
int3
loope
into
adc
std
mov
or
jae
mov
pop
int
aam
test
loop
cmp
push
xor
mov
call
pop
out
fsubrl
pop
movsl
pusha
lock
sub
pop
push
pop
inc
mov
ljmp
movsl
addl
xor
in
xchg
ja
mov
push
push
add
cli
incl
and
out
shll
out
push
iret
xchg
pop
jno
and
xchg
aaa
or
cs
out
xor
push
aam
out
mov
add
dec
mov
mov
lods
xchg
and
pushf
sub
pop
nop
jmp
imul
in
mulb
mov
xchg
mov
out
ljmp
or
jecxz
mov
mov
jo
xchg
xchg
leave
mov
xor
aaa
std
inc
sbb
and
pop
push
pop
sub
mov
jle
sbb
dec
dec
std
inc
test
lcall
mov
test
dec
movsl
test
pop
cmp
sub
fimuls
out
clc
decl
pusha
dec
jg
or
lcall
and
pop
mov
icebp
insl
pushl
pusha
sub
nop
sbb
adc
xlat
jge
out
daa
mov
or
push
xchg
decl
daa
inc
in
daa
pop
les
scas
fs
lcall
mov
subl
dec
pop
enter
mov
cli
jg
jmp
sub
mov
stc
mov
insl
cmpb
jmp
pop
xlat
call
pop
mov
lret
and
clc
je
bound
mov
inc
loope
cmpsl
sub
movsb
jmp
pop
repz
xorb
mulb
rsqrtps
add
inc
cmpsl
shlb
xlat
inc
popf
mov
pop
ret
sbb
push
les
sbb
adc
lret
mov
incl
stos
adc
adc
int
stos
test
bound
inc
stc
cltd
orl
xbegin
int
mov
pop
pop
in
popf
adc
pop
sbb
and
pop
cs
ret
std
insl
fwait
std
or
scas
ljmp
inc
dec
inc
sti
call
imul
ljmp
sbb
fistl
addl
xchg
imul
push
push
xor
incl
cli
pop
lahf
mov
xor
loopne
xchg
iret
fstpt
call
in
xor
imull
out
inc
xchg
repz
pusha
fldenv
mov
out
outsl
xchg
xor
clc
sti
cmp
or
mov
sub
adc
rolb
imul
mov
je
inc
add
test
jmp
xlat
cmpsl
sbb
mov
adc
mov
ljmp
imul
pop
in
test
mov
xchg
mov
adc
arpl
loope
xchg
adc
inc
fmul
jbe
std
sub
decl
jecxz
inc
out
ror
push
rol
cltd
push
mov
loope
loop
push
jmp
adc
rclb
pop
inc
test
jp
jo
cmpsb
add
and
pop
insl
pop
int
ss
fimull
jge
in
cmp
mov
pop
ljmp
sub
mov
icebp
int3
sub
lahf
movsb
fisubl
mov
adc
jg
mov
dec
inc
sbb
outsb
outsl
das
push
inc
adc
into
sti
pop
jae
loopne
sahf
sar
dec
jmp
fwait
ljmp
repnz
outsb
mov
inc
adc
lret
mov
dec
dec
and
push
out
jmp
sub
icebp
jmp
stc
pop
inc
sbb
insb
and
adc
adcl
out
xchg
aam
inc
aas
jae
sbb
insb
test
xchg
add
jns
jbe
lds
imul
push
stos
pushl
lea
mov
fwait
push
test
pop
xchg
sub
cmpl
call
cmp
mov
and
adcb
push
test
dec
mov
mov
mov
push
jnp
cmp
mull
mov
add
inc
lods
sar
call
bound
adc
fidivrs
xchg
jecxz
fsub
out
push
add
dec
fdivrp
jg
jmp
or
xor
int3
ja
test
mov
dec
and
jg
xchg
mov
add
and
push
out
jne
nop
jge
jmp
in
test
sub
stos
push
sbb
data16
mov
call
cld
jmp
lock
xchg
jns
test
stos
repz
pop
mov
push
pop
lock
lods
pop
test
push
adc
mov
pavgw
js
mov
call
rcr
lcall
cmc
sbb
movsb
pop
add
ret
inc
xchg
notl
xchg
xor
ljmp
rolb
mov
adc
cmp
dec
bndldx
xor
stc
pushl
mov
pop
xor
xchg
aaa
in
or
mov
jne
inc
pop
hlt
and
in
or
adc
jg
lret
xor
or
xchg
pop
adc
jae
push
clc
push
in
aad
in
add
cmpsb
dec
mov
pop
push
sahf
fcomip
jmp
pop
clc
sbbb
mov
out
into
or
dec
xor
decl
rcrb
jmp
enter
rol
and
cmp
out
cmpl
xchg
incl
jbe
repnz
pop
and
jb
out
bound
cmpsb
jmp
mov
mov
loope
int3
bnd
call
add
divb
movsb
xchg
subl
je
push
loope
ficomps
mov
call
push
adc
adc
dec
dec
push
xchg
mov
pop
sbb
xor
incl
mov
mov
cltd
adc
jns
call
out
xor
lods
mov
or
pop
icebp
cmp
lea
lods
xchg
adc
scas
jbe
and
jmp
test
loop
and
xchg
movsb
popf
in
fstps
or
inc
mov
incl
cmp
aaa
jecxz
jae
inc
and
cltd
std
ret
mov
dec
call
das
push
cmp
test
es
arpl
jnp
jge
sti
xchg
iret
jl
sti
jl
sub
lock
imul
mov
xchg
push
mov
mov
push
lods
fwait
lret
pop
cltd
aas
push
cmp
js
sub
mov
aam
ret
stos
push
test
jmp
push
std
mov
stc
sub
pushf
adc
fbld
dec
icebp
sar
aas
sub
decl
xchg
mov
fldcw
sub
fistps
and
subb
ja
and
js
adcb
jo
xor
mov
lret
inc
cmovbe
jbe
or
incl
aad
outsl
rcl
imul
cmp
test
mov
in
icebp
ljmp
pusha
repnz
adcl
fistpll
fld
mov
mov
lcall
xorb
lods
pushl
xchg
mov
push
pop
mov
ljmp
adc
sbb
inc
pop
push
inc
mov
shrb
push
idivb
xor
incl
sti
push
dec
jecxz
and
pusha
add
in
shlb
popf
adc
hlt
or
inc
cli
fisttps
in
push
insl
xchg
sub
jmp
xchg
xchg
xor
ljmp
test
inc
cmp
inc
loope
flds
lds
daa
mov
test
mov
add
cltd
outsb
pop
sub
or
sub
sub
fcompl
shl
push
push
jge
adc
call
push
mov
fidivrl
test
pop
sub
aad
mov
iret
mov
pushl
out
mov
add
mov
mov
jne
sub
or
pop
dec
lret
and
ljmp
pop
mov
jbe
push
clc
mov
and
decl
pushf
mov
mov
cmp
repnz
xchg
shlb
mov
mov
insl
and
mov
add
fs
xchg
negb
jns
inc
jne
repz
mull
mov
jmp
das
jg
push
jbe
pop
adc
or
fwait
mov
pop
sub
dec
mov
imul
inc
lea
cli
jmp
push
inc
and
imul
mov
cltd
and
lods
and
mov
ljmp
push
adc
lcall
push
xlat
ds
aaa
nop
pop
inc
sub
call
loopne
jg
addl
and
fisubrs
decl
out
pushf
mov
lods
mov
test
cmp
dec
sub
cmpb
jnp
xorl
lret
fcomip
ljmp
mov
xchg
xchg
mov
stos
dec
test
sub
ss
and
lcall
outsb
xchg
dec
cmc
inc
fdivrl
lods
jae
pop
iret
xorl
inc
rorl
dec
cmp
imul
aam
push
les
or
mov
loopne
mov
and
cli
and
cmp
mov
andl
pop
jb
outsb
mov
insl
sbb
cld
mov
sbb
add
outsb
and
pop
in
lods
das
dec
fs
lcall
lcall
inc
xor
jb
test
inc
pushf
pop
test
or
call
enter
xchg
and
fsubl
cmp
dec
scas
sarl
popf
jge
movl
pushl
lcall
adc
stos
sub
sub
icebp
adc
xchg
movsl
lcall
test
fmul
sub
sahf
adc
jnp
scas
jg
sbb
movl
or
cmp
dec
outsb
lahf
test
mov
and
dec
pop
popa
adc
or
sbb
jo
jnp
ds
test
cmp
sub
mov
mov
dec
aaa
mov
test
lret
xor
mov
sbb
jmp
add
mov
cmp
je
inc
out
and
bound
mov
mov
fdivr
rcl
das
push
xor
fs
insb
xor
sub
xor
pusha
mov
xor
cli
sub
data16
mov
mov
dec
lret
add
mov
repnz
fs
test
pop
dec
jmp
mov
sbb
hlt
push
pop
icebp
incl
testb
inc
pop
sub
push
int3
imulb
cmp
out
inc
jmp
pusha
sub
and
into
sti
scas
dec
mov
jne
xchg
insl
lods
sti
sbb
mulb
out
decl
dec
iret
iret
and
mov
repz
int
sbb
decl
xchg
movsb
mov
aaa
pop
nop
push
mov
sub
xchg
adc
cwtl
sub
push
outsl
rcl
ljmp
shrb
int3
ret
and
and
in
push
in
ljmp
pushl
push
mov
mov
jne
sub
xchg
outsl
xor
ret
lock
mov
xor
xchg
cmp
xchg
or
mov
paddsb
dec
movsb
pop
cmp
lcall
es
pop
ja
ret
sti
cmp
and
adc
shrl
hlt
lcall
in
lock
mov
lds
xor
dec
dec
or
pop
scas
jae
adc
sub
xchg
jno
repz
or
daa
jl
call
push
cmp
sbb
mov
mov
push
out
add
out
inc
pusha
mov
sbb
mov
ret
sub
scas
mov
pop
dec
pop
fdivr
dec
out
arpl
xor
jle
sarl
sub
lds
jmp
inc
adc
xchg
xchg
shrb
mov
stc
push
and
xor
fisubrl
sbb
sbb
jmp
xor
pop
rcl
icebp
les
push
cmc
ds
ja
mov
and
lcall
cmp
shl
mov
lahf
inc
imul
iret
call
les
lcall
pop
jle
push
rol
out
sbb
nop
xchg
mov
add
out
cld
push
jp
mov
mov
jle
add
adc
jp
jae
or
xor
add
dec
dec
pop
fwait
cmp
icebp
addr16
and
cwtl
add
pop
push
cmp
dec
mov
xchg
loope
ljmp
and
add
out
sbb
xchg
jne
in
fimuls
decl
xlat
lcall
test
jbe
in
mulb
add
xchg
sti
lret
std
or
mov
xor
jbe
cs
aad
mov
inc
mov
in
mov
cld
imul
mov
mov
ror
sar
pushl
mov
jbe
mov
push
sub
je
out
jg
out
icebp
xchg
lods
cmp
mov
cmp
push
daa
cld
mov
decl
bound
out
js
mov
arpl
inc
mov
mov
lcall
out
dec
or
in
dec
scas
mov
mov
fidivs
push
mov
ljmp
out
sti
ret
xchg
dec
scas
dec
aam
jp
mov
mov
jbe
lret
clc
mov
mov
enter
mov
lods
pop
pop
aaa
ret
out
jmp
xor
add
enter
sub
decl
push
pop
push
or
pop
andb
cmc
dec
pop
fbstp
into
xchg
inc
mov
inc
decl
cmpl
sbb
cld
sub
std
lcall
pusha
sbb
ljmp
cli
out
movsl
xor
dec
cltd
outsb
sbb
push
inc
divl
imull
stos
mov
sbb
nop
mov
inc
and
pop
les
inc
cmp
sbb
cmp
jmp
aad
outsl
push
jle
fstpt
popa
push
mov
scas
mov
jae
push
add
pop
decl
clc
or
in
loop
mov
cmc
std
and
jns
jae
pop
mov
pop
cwtl
enter
ljmp
xchg
or
cmp
xlat
push
cli
jl
xlat
mov
adc
dec
add
lods
dec
idiv
pushl
scas
inc
loop
popl
sbb
pusha
loopne
ret
std
je
loopne
insl
adc
mov
mov
sub
fucom
xor
jp
vmread
sbb
mov
fidivrl
push
ficoms
jmp
mulb
sub
or
cmp
lods
xlat
iret
fwait
ljmp
mov
mov
popf
ja
enter
and
imul
jb
cs
lcall
lods
inc
xor
fwait
mov
notb
inc
fprem1
es
ds
sti
mov
in
mov
movsl
dec
mov
fisubrs
cmpsb
jecxz
icebp
test
cmp
daa
mov
sahf
fcomps
ret
imul
jg
jo
push
or
loop
mov
out
aam
shl
mov
add
ljmp
cmp
cmp
push
or
mov
push
push
insb
mov
faddl
or
out
test
mov
pop
pop
repz
popf
incl
lods
fbld
stos
ficompl
push
int3
mov
roll
psignb
fists
jg
mov
pop
cmp
pop
cli
rclb
or
and
xchg
aas
dec
push
jmp
sbbb
xchg
mov
add
cmp
and
adc
stos
ja
add
inc
push
add
ud0
jno
pop
xchg
cwtl
dec
daa
adcb
dec
pop
add
inc
in
xlat
push
pop
sub
enter
sbb
or
inc
jns
add
jno
jmp
sar
mov
insb
out
lock
popa
pop
stos
test
setno
jg
lock
aas
test
jge
push
or
dec
cwtl
sti
cmp
aas
incl
dec
mov
jmp
dec
sub
push
mov
push
pop
lds
jge
pop
adc
out
cli
call
cmp
in
sub
repnz
in
cs
data16
mov
out
jmp
or
fxam
or
mov
insl
push
jnp
ljmp
nop
mov
lahf
into
in
xchg
and
cmp
sub
ds
mov
adc
out
cmp
fsts
adc
xchg
xor
or
jnp
lahf
adc
das
sarb
jae
ret
ljmp
out
ss
dec
pop
sub
shlb
testb
push
push
aam
inc
add
pushf
sbb
cli
pop
std
cmp
xchg
xchg
dec
mov
cmpsb
push
push
incl
jle
pop
xchg
add
test
clc
pop
icebp
pop
inc
addl
and
icebp
ficompl
jmp
enter
cmp
lahf
mov
insb
mov
outsb
or
mov
pop
sbb
xchg
lea
ljmp
test
lret
adc
clc
sahf
add
fcompl
daa
std
jle
imul
fwait
lret
push
pop
sbb
lock
xor
ds
cld
pop
dec
subl
and
mov
ljmp
push
dec
dec
xor
mov
push
cmp
je
hlt
mov
push
pushf
jb
jns
in
jg
pushl
fs
lahf
iret
lea
icebp
mov
ds
outsl
sbb
adc
push
popa
repnz
incl
inc
sti
mov
push
in
or
test
fdivrs
and
dec
cmpsl
mov
add
in
into
call
fs
xchg
sub
stos
dec
pop
and
roll
imul
jg
incl
mov
outsl
sti
jl
hlt
test
ret
jnp
jne
decl
pop
pop
das
xchg
pushl
cmp
and
pop
dec
or
mov
cmp
es
and
aad
jae
adc
and
sbb
pop
in
addr16
xor
ficoml
sbb
lods
ljmp
lret
add
cmp
loopne
xchg
xchg
popf
push
out
cmp
incl
adc
arpl
mov
imul
mov
pop
mov
ljmp
and
adc
int
pop
mov
inc
jae
lods
add
adc
jb
mov
inc
in
cmp
mov
mov
and
dec
sbb
shrl
nop
inc
shlb
push
es
mov
fucomi
shll
jg
leave
sub
lods
in
mov
mov
cmp
mov
mov
push
add
incl
inc
pusha
mov
push
push
ret
sub
cmc
iret
add
cmp
jns
mov
je
aas
cld
loope
pop
ds
js
lahf
rcll
inc
and
lds
jmp
in
xor
call
xor
and
dec
fldcw
lods
xorb
aad
nop
mov
call
sbb
cli
jp
or
dec
mov
shrl
je
mov
repnz
push
jbe
shlb
adc
dec
and
xchg
lods
stos
rcrb
stos
dec
pop
clc
decl
mov
sub
pop
pushf
ret
fs
lea
cmp
insl
arpl
mov
mov
icebp
into
pop
jle
xlat
push
arpl
lret
loopne
leave
cs
out
pushl
xchg
stos
stos
sub
insl
bound
cmp
lret
lods
aas
mov
sbb
stos
adc
pushl
sub
inc
sbb
or
cmpsl
dec
bound
aam
dec
pop
inc
out
iret
mov
mov
jmp
aad
test
sbbl
sbb
add
and
test
sbb
and
jmp
sbb
fnstcw
sbb
test
dec
rcrl
test
xchg
ret
nop
adc
sarb
loopne
fistpl
fcomip
std
cmpsl
cmc
shlb
icebp
and
subb
repz
mov
mov
mov
out
in
sub
xor
fildl
sub
call
or
shl
dec
xchg
out
into
cmp
sbb
std
cmp
mov
sar
lcall
inc
mov
cld
jmp
insb
xor
sub
xchg
movsl
xlat
and
adc
mov
mov
xor
sbb
pushl
imul
xchg
fcmovnu
mov
sarl
test
insb
xchg
lods
fucom
mov
das
fdivrs
pushl
popf
mov
add
xchg
add
daa
and
or
pushf
add
mov
pop
add
shl
lock
sub
lea
scas
in
xchg
test
in
ja
fs
fwait
loopne
dec
je
xor
xchg
xchg
mov
jne
negb
call
out
mov
cmp
pusha
jle
iret
div
hlt
lcall
xchg
pop
lcall
jbe
lcall
pushl
cmp
push
stos
adcl
mov
jp
movsb
or
daa
jbe
pop
or
popf
adc
mov
sub
mov
js
int
icebp
mov
pop
daa
add
mov
daa
sbb
mov
adc
nop
addr16
lret
std
pop
dec
push
lcall
lock
scas
push
fwait
push
jp
adc
addr16
lcall
fucomp
int
mov
arpl
data16
jp
outsl
xchg
fdivr
xor
ljmp
int3
mov
pop
repnz
cltd
sub
inc
fcompl
imul
jg
dec
call
sbb
sub
dec
xchg
mov
cld
stc
fbld
shll
rcr
adc
dec
xor
ljmp
into
or
dec
repnz
adc
lcall
test
mov
sbb
mov
jnp
call
imul
sub
sbb
mov
sti
cld
call
pop
psllq
or
cmpsl
add
jg
std
pop
outsl
jp
fucomip
flds
mov
decl
pop
outsl
fcmovnu
imul
je
push
cmpsl
lahf
mov
fistpl
mov
incl
in
cs
aam
add
push
js
xor
push
jle
cli
ljmp
dec
inc
shrb
or
push
lock
dec
or
push
xor
sub
inc
dec
shlb
incl
into
lock
and
cmp
scas
stc
push
pop
mov
imul
pop
aas
xor
adc
or
add
movsl
xor
push
mov
jle
cmpsl
sarl
pop
pop
sbb
push
fs
sub
sub
jmp
cld
repnz
clc
mov
xor
pop
ret
mov
jb
mov
jecxz
ret
inc
ljmp
push
icebp
mov
gs
inc
mov
imul
loop
cmp
ja
push
jns
adc
in
push
cmpl
push
mov
lcall
int3
mov
mov
ss
sti
cmp
lret
loope
out
inc
inc
cld
dec
inc
movsl
sar
lcall
jbe
xor
mov
in
shll
xlat
call
aam
pushl
xchg
jbe
inc
imul
out
ljmp
clc
ljmp
decl
sbb
mov
xchg
dec
fiadds
fsubs
mov
test
adc
mov
adc
ficomps
mov
js
mov
push
fs
cmp
pop
es
negl
mov
push
adc
je
sarl
mov
push
pop
call
decl
push
out
push
call
ss
insl
sbb
test
js
pop
incl
mov
xchg
lcall
cltd
fcoml
test
decl
mov
sbb
xchg
fbld
adc
fisubl
fldenv
decl
push
out
lret
ss
fnsave
and
aas
pop
mov
cmpl
out
fcomip
decl
aam
jl
add
scas
movsw
fstl
xchg
push
inc
xchg
outsl
int3
jb
push
in
mov
incl
xor
xchg
push
push
std
int3
xor
pop
out
test
shll
into
lret
lcall
xchg
orb
es
dec
mov
call
in
fisubrs
lret
call
jbe
out
jl
adc
daa
fmuls
es
cmc
das
orl
lcall
xchg
mov
jno
inc
arpl
stos
pop
jmp
loope
pop
lock
rcrb
cmp
bound
fwait
sbb
imul
test
lcall
push
xchg
mov
add
sub
cmp
xor
dec
bound
test
test
shl
call
loop
int
insl
pop
leave
inc
lock
push
cli
dec
scas
mov
clc
mov
mov
ljmp
and
adc
fldl
call
or
mov
int
inc
outsl
sbb
mov
iret
mov
mov
lahf
push
or
shll
mov
cmpsl
xor
jmp
aad
sahf
dec
aas
adc
popa
mov
adc
pop
and
mov
jnp
gs
xor
inc
rorb
or
pop
ljmp
add
sbb
aam
dec
lods
pop
notb
sbb
mov
lret
inc
or
test
mov
and
aas
and
or
xchg
lcall
decl
sub
and
pop
cmpsb
test
je
add
movsb
sar
fs
fxch
call
jne
aad
mov
push
stos
xor
mov
ss
hlt
and
dec
mov
cmc
ljmp
xchg
movsl
pushf
mov
push
enter
inc
mov
mov
jge
sahf
pop
sbb
insb
jg
mov
stos
xchg
sahf
jl
jecxz
js
xor
popa
outsl
jno
jno
push
xor
ret
lcall
sbb
pop
add
mov
mov
dec
jns
hlt
ja
pop
test
cmpsb
aam
das
jo
call
ljmp
push
mov
aaa
mov
in
je
push
in
addr16
jae
cmp
inc
es
ljmp
out
icebp
xor
push
mov
pop
sbb
sbb
sbb
outsl
lea
sub
xchg
imul
std
iret
mov
arpl
cmp
ss
push
std
ret
rcr
mov
scas
sbb
in
pop
out
cmp
jg
pop
in
divps
cmp
pop
shl
inc
sub
inc
jl
aad
repnz
mov
roll
or
lcall
dec
dec
or
inc
mov
clc
repnz
lea
insl
inc
pop
std
fbld
sub
shrb
sub
push
mov
sub
in
call
xor
jle
gs
push
inc
xchg
jle
push
movsb
in
mov
jne
clc
or
call
nop
imul
jbe
mov
in
shrl
add
cmc
ljmp
inc
aas
mov
arpl
sbb
sbb
jne
push
fisttpl
outsb
cltd
xchg
mov
lcall
mov
leave
sub
jno
in
lcall
jne
stos
inc
jg
lods
outsl
es
cmp
mov
and
jno
aas
decl
pushl
mov
ss
sub
cmpsb
decl
pop
faddl
call
hlt
ret
adc
mov
clc
cmpsb
lods
popa
out
int3
std
push
cs
cltd
repz
cmp
push
sbb
nop
add
mov
cmpb
jno
push
jns
ficoml
pop
dec
jg
call
mov
mov
ljmp
in
mov
jp
mov
jmp
jmp
adc
jp
repz
push
inc
shl
xor
incb
jp
push
icebp
cmc
popa
es
jmp
shll
cmp
cs
loope
pop
test
jecxz
jmp
and
xor
push
ds
cld
shrb
in
and
or
cwtl
ror
lcall
gs
xchg
rolb
xlat
cmp
dec
out
andl
cmp
cld
mov
decl
js
push
push
mov
push
or
mov
pop
pop
filds
clc
pop
mov
fisubl
scas
pop
or
cmc
mov
sub
xor
dec
testb
pop
dec
jmp
push
sub
dec
xchg
pushf
and
insl
xchg
inc
push
sub
flds
push
enter
xor
jmp
test
inc
or
mov
fstps
cmp
shlb
pop
int3
repnz
fsub
push
icebp
decl
dec
sbb
ljmp
pop
or
stos
aam
fnstsw
out
lods
jno
fldt
adc
pushf
mov
aaa
sub
cmpsl
sub
cmpsb
or
mov
jno
pushf
mov
mov
insb
inc
ja
sets
fldenv
xchg
push
ficomps
lcall
and
jne
int
mov
movsb
mov
in
fsqrt
mov
mov
test
shr
or
leave
sbb
pop
cli
add
ljmp
lret
push
jge
ja
stos
or
mov
mov
data16
sbb
dec
insl
idiv
call
cmp
in
sbbl
mov
push
ds
enter
sbb
adc
incl
xlat
add
xchg
dec
adc
in
sub
jmp
fadds
jb
mov
lret
in
jg
or
sub
jg
call
jmp
mov
push
mov
push
or
or
dec
mov
insb
outsb
mov
cmp
mov
aad
xchg
fsts
mov
dec
fisubrs
ss
jp
test
xchg
jg
mov
decl
lds
ror
arpl
inc
pop
dec
fsubrp
pop
pop
scas
shll
call
outsl
pushl
loop
aaa
fiadds
xchg
jne
push
int
fidivrs
xchg
mov
add
pushl
loope
push
pop
push
add
push
in
rolb
or
mov
sbb
repnz
xor
ss
push
cmp
cwtl
pop
push
inc
outsb
cmpsb
sbb
rep
push
or
xchg
imul
cli
mov
je
adc
xlat
std
enter
sbb
push
lahf
cmp
ljmp
sbb
sbb
out
inc
pop
jne
xor
sar
out
cmp
std
sahf
and
stc
xchg
jmp
pushl
push
push
cmp
cmpsb
add
mov
dec
mov
sar
ljmp
in
mov
push
lods
xor
insb
jge
inc
jmp
stos
jge
cmp
std
adc
sahf
lea
push
push
jl
push
fdivrs
out
jl
push
shlb
pop
sbb
cwtl
cli
int3
pop
or
in
sub
jb
xor
inc
cli
push
cwtl
mov
dec
test
aas
mov
mov
sahf
gs
rcl
mov
sbb
int
jmp
shlb
sub
mov
aam
push
bound
cmpsb
sahf
inc
dec
incl
fs
test
push
mov
and
mov
mov
inc
pop
add
jns
jmp
ljmp
ljmp
test
push
test
xor
ljmp
shlb
int
adc
pop
lret
sbb
add
fxch
push
arpl
out
mov
dec
sbb
in
xchg
stos
xchg
in
and
sub
sbb
jmp
repz
insl
ss
add
jne
imul
sub
adcl
and
jmp
es
shll
push
outsl
xchg
xchg
add
dec
mov
aaa
ret
mov
call
fisttps
lret
lods
aas
push
hlt
std
daa
adc
inc
or
popf
adc
not
dec
fcomp
sbb
pop
fcomip
ljmp
sbb
shrb
scas
push
insb
push
int
dec
dec
mov
lea
fdivr
lds
mov
fcompl
add
and
out
scas
int3
sbb
lcall
mov
inc
jnp
sub
mov
mov
jno
jb
push
insb
shl
incl
sbb
out
sbb
mov
int3
cmp
test
in
sbb
pushl
cmp
stos
rcll
or
jp
jbe
dec
pop
xor
loop
mov
jmp
add
movsb
test
jb
inc
scas
es
pop
and
sub
cwtl
fbstp
icebp
loopne
mov
push
add
sbb
adcb
mov
sub
cmp
xlat
sarl
and
push
sahf
cmp
mov
xchg
clc
leave
add
outsl
test
pusha
push
mov
mov
into
loop
inc
mov
mov
fiaddl
out
ss
sub
outsl
sti
add
js
ret
ljmp
inc
pop
jg
cs
mov
xchg
scas
dec
aas
push
dec
call
ljmp
push
stos
inc
mov
pop
es
cmp
mov
cli
mov
mov
ja
ljmp
shl
fistpll
adc
out
cli
bound
jg
mov
xchg
dec
subl
rolb
test
jmp
jmp
lods
in
adcb
test
in
ljmp
fnstcw
lcall
jmp
loop
clc
jns
jmp
addr16
mov
stc
nop
int3
cmp
jmp
or
incl
popf
loop
sti
adc
insb
sub
and
mov
icebp
imul
test
xor
inc
inc
xchg
pop
and
lcall
ss
ja
sbb
fdivs
test
incl
push
sarl
add
ds
test
lock
dec
mov
jmp
out
pop
mov
pop
mov
xchg
hlt
jmp
icebp
cmc
pop
stos
stc
or
ljmp
push
and
popa
add
imull
dec
and
push
movsl
movlps
icebp
sahf
hlt
jae
decl
out
jo
cltd
nop
out
lret
xchg
xor
add
sub
mov
enter
adc
rcrl
push
adc
mov
sub
arpl
sub
or
mov
mov
jl
jmp
mov
and
pushl
xchg
sbbl
jns
ja
lret
push
aas
call
lcall
fidivrs
test
xchg
fcomps
inc
add
mov
jg
pushl
mov
aas
mov
ss
xchg
leave
fcomps
ret
call
and
stos
hlt
add
pop
outsl
lcall
popf
out
xchg
pushl
cmp
addb
jle
and
mov
or
or
or
pop
loopne
inc
repz
pop
jno
and
add
sbbb
out
clc
push
cmpsl
in
stc
into
mov
and
cli
lret
int3
in
or
jbe
scas
stos
jb
add
xchg
aas
xor
fcompl
xor
and
decl
sbb
xorb
dec
int3
xchg
in
jl
fnstenv
test
jmp
bound
mov
lahf
mov
xchg
xchg
jge
dec
mov
int
ljmp
or
mov
jp
xchg
mov
cli
inc
inc
popf
mov
ljmp
mov
repnz
lea
mov
int
xor
jmp
fists
adc
insb
ljmp
cmp
jecxz
xchg
stc
popa
xchg
xlat
adc
pushl
xor
ds
mov
aaa
push
add
and
push
cmp
adc
ljmp
inc
imul
pushf
and
stos
jmp
popf
dec
fstpt
jg
call
jb
mov
ret
mov
sub
dec
jae
popf
xchg
mov
jmp
imul
jl
adc
ds
test
das
sub
inc
mov
in
loopne
push
add
outsb
leave
cli
decl
push
lret
add
cmp
push
mov
xchg
jo
jg
ljmp
xchg
dec
dec
dec
and
movsl
bound
sbb
jg
decl
ret
inc
clc
les
adc
push
enter
fidivl
test
sub
xchg
mov
pop
mov
sbb
jp
adc
fdivrl
imul
sbb
rolb
lcall
call
push
int
cld
lds
push
ficoml
ds
test
add
call
imul
pushf
mov
jno
int
push
loopne
cld
testl
xlat
ljmp
sub
aaa
loop
or
cs
decl
ss
in
mov
xchg
xchg
into
bound
lods
hlt
or
mov
mov
call
stc
adc
add
ret
out
cs
mov
aas
jp
fucomi
adc
outsl
push
xor
pushf
lcall
fs
clc
dec
out
sub
dec
add
test
clc
xor
cld
mov
decl
addr16
icebp
stos
xor
xchg
jb
jbe
arpl
out
stos
ja
icebp
call
pop
cmp
xchg
in
push
aad
mov
stos
adc
lret
lock
jbe
incl
lret
xor
out
mov
push
xchg
mov
jbe
cs
je
sub
sarb
jbe
incl
xchg
stos
xchg
loopne
push
add
ds
stos
inc
pop
test
outsl
add
jmp
inc
pop
dec
fsts
arpl
ljmp
push
std
insl
rcll
iret
clc
mov
cmp
test
insb
or
xor
add
sbb
out
mov
ljmp
and
scas
cli
or
inc
loop
or
jmp
insl
lahf
stc
jmp
mov
je
push
ss
push
test
pop
por
incl
test
add
dec
mov
std
in
xorl
cmp
aad
adc
pop
mov
or
sub
insb
and
call
or
stos
push
add
aam
inc
push
insb
xor
dec
sbb
push
cltd
icebp
ret
loopne
decl
mov
xor
mov
jecxz
in
cmp
js
xchg
lcall
add
push
sti
sub
mov
cmp
std
into
out
inc
cmc
test
sbb
aaa
arpl
ljmp
sub
add
shrb
ret
xor
push
mov
cli
jnp
adc
int3
and
mov
out
cli
call
fwait
hlt
inc
rcrl
test
mov
mov
or
int3
mov
mov
lods
and
icebp
or
jno
dec
xor
jp
lcall
fdivrs
xchg
std
lods
bound
ds
mov
je
sub
mov
aam
jmp
ljmp
mov
ret
fld
cld
int
lods
cmc
iret
xchg
or
xchg
cmc
mov
add
xlat
ficomps
lret
lcall
mov
xchg
adc
xchg
xor
addr16
stos
jg
lock
rolb
jle
and
mov
inc
jle
cmp
lods
mov
test
push
dec
arpl
mov
inc
push
jne
pop
les
jmp
enter
arpl
dec
cli
sub
jmp
sub
jp
jae
mov
adc
incl
mov
and
nop
add
dec
sbb
push
cmp
decl
jge
stc
sti
xor
clc
jnp
inc
sahf
add
or
xchg
and
incl
bswap
xor
cmp
and
rorl
sub
addb
dec
mov
push
pop
rcl
mov
lcall
fcomps
xchg
daa
xchg
xchg
lods
add
adc
and
outsb
shll
push
jge
sar
call
stos
movsb
hlt
cwtl
add
adc
xor
sahf
pop
movsb
daa
cmp
decl
push
pop
mov
ret
adc
xor
push
nop
jns
icebp
xor
pushl
add
dec
push
mov
jb
and
mov
mov
xchg
sbb
call
add
jmp
jns
jle
lret
jge
lcall
lock
and
arpl
pushl
mov
mov
mov
fmull
sbb
hlt
xor
jb
pop
sahf
push
daa
aas
mov
and
ljmp
adc
cli
pinsrw
lock
push
outsb
sub
cmp
ret
fistpll
cmp
out
xorb
dec
xchg
bound
cwtl
adc
xchg
dec
jg
out
test
cli
dec
sub
mov
lret
push
xchg
lods
cld
add
ljmp
add
popf
mull
sbb
daa
jns
outsl
enter
fnstenv
sbb
lret
mov
loopne
pushl
mov
cmp
push
stos
mov
movsb
out
pop
adc
push
fstps
incl
test
imul
cmpsl
push
mov
loope
mov
jg
mov
xor
ljmp
sub
test
xor
and
das
push
clc
int3
jbe
cs
sbb
incl
ret
int
pushf
adc
sub
jle
enter
lods
int
cmp
out
xchg
xchg
and
lcall
mov
jg
rorb
pop
add
mov
xchg
daa
mov
sub
and
dec
data16
sub
les
les
jb
pushl
or
mov
mov
arpl
mov
lcall
push
add
shr
mov
pusha
bound
pop
call
fstl
gs
les
jl
jecxz
aam
seta
jbe
ja
push
cli
decl
or
ds
mov
fimuls
xlat
pop
mov
inc
sbb
mov
fbstp
jb
push
sbb
jmp
cmp
push
imul
adc
cmp
lcall
fistpll
les
xor
sbb
and
dec
loope
aam
decl
add
in
sub
out
sbb
inc
loope
in
dec
push
cmp
lea
mov
cli
ljmp
mov
out
jmp
ja
xor
mov
fs
stos
pop
adc
std
ljmp
push
adc
leave
jl
xchg
movsl
add
jp
inc
mov
cmp
jmp
xchg
push
cs
dec
mov
cs
inc
call
call
pop
xlat
jae,pn
push
inc
sub
mov
cli
sub
mov
sbb
enter
mulb
jnp
loop
and
xchg
ljmp
cmp
test
push
lret
outsl
push
push
es
and
pop
jecxz
callw
subb
cmp
cwtl
shll
cmpsb
dec
sub
adc
lcall
mov
xchg
dec
dec
mov
adc
repnz
pushl
lahf
shrl
sarl
cmp
mov
push
in
call
fisubl
fwait
sti
jmp
in
outsl
dec
xchg
out
loope
inc
add
inc
loopne
pandn
sbb
inc
mov
inc
mov
cld
adc
out
ja
mov
std
xchg
mov
mov
test
mov
jg
call
fs
inc
inc
pop
cmp
jge
sub
lods
out
adc
decl
js
mov
aaa
cmp
sub
nop
pop
subl
jno
jo
popa
or
mov
add
ljmp
rol
mov
enter
xchg
inc
add
inc
movq
aaa
sbb
sub
and
ljmp
push
inc
das
mov
lea
outsl
inc
sbb
jl
cmp
cmpsl
inc
xlat
int
lock
stos
movsl
call
cmp
lret
pop
ss
dec
pop
mov
psrlw
sbb
dec
out
inc
je
mov
ljmp
sarb
sub
sbb
jmp
mov
mov
mov
cmp
jbe
ljmp
adc
fcomp
xchg
or
mov
movsl
dec
inc
jge
pushl
cld
pop
add
dec
mov
sbb
adc
es
pop
jmp
cli
xor
hlt
outsl
lds
dec
jmp
dec
fcoms
stos
lds
xchg
sbb
cs
jne
inc
popa
sar
ljmp
lret
dec
add
pusha
push
mov
in
cmp
pop
cmp
jns
aad
pop
incl
aas
and
mov
movsb
int
les
xchg
mov
inc
cs
mov
sbb
aaa
fistps
shlb
cmp
rcr
mov
push
push
lcall
hlt
and
scas
inc
jl
lahf
cmpsl
pusha
cltd
push
sahf
mov
jecxz
fisttps
push
cwtl
sbb
cmp
repz
xchg
push
int
and
or
pop
and
testl
out
ret
gs
mov
cli
popf
call
jg
or
lcall
imul
push
jno
pop
mov
jo
mov
sub
dec
xor
lds
repz
xor
dec
xor
lcall
xchg
subb
pop
loope
xchg
lcall
cld
jl
and
mov
mov
pop
dec
fbld
inc
shll
xlat
ret
fnstenv
outsb
fwait
push
pushl
lcall
mov
leave
adc
inc
jle
iret
push
pop
cmpsl
out
idiv
cli
adc
lret
ret
fnstsw
call
aam
fisubl
test
std
call
dec
lock
rol
jge
pop
cmp
fs
xor
movsl
out
cs
bound
pop
nop
bound
inc
movsb
jno
sub
fbld
xchg
or
aad
loopne
fsubl
shll
jg
es
sti
dec
fldt
inc
arpl
add
mov
or
daa
movsl
jg
lock
fcmovnu
iret
fs
push
sbbl
test
inc
es
popa
pushl
test
mov
ja
testl
pop
hlt
rorl
jno
ljmp
xchg
mov
pop
sbb
push
mov
mov
bound
xor
pop
mov
movaps
dec
cmp
nop
movsl
inc
push
sti
push
in
or
mov
dec
js
ret
xchg
jo
ljmp
rol
call
mov
test
dec
loop
push
cli
push
call
scas
mov
repz
jae
jl
jo
push
lods
push
enter
adc
ret
inc
pop
or
mov
lds
or
nop
adc
je
mov
in
test
jmp
dec
test
nop
cld
mov
jno
popf
jns
sub
sub
cwtl
cmp
jecxz
jb
push
xchg
test
fldenv
in
ljmp
cmp
filds
faddl
mov
xchg
mov
add
or
cli
push
pop
outsb
ja
mov
or
push
xchg
cs
ljmp
repz
sahf
ljmp
and
mov
adc
or
xlat
incl
shrb
push
jns
in
mov
or
pop
dec
xlat
fwait
addr16
jns
int3
cmpsb
in
mov
call
dec
hlt
mov
inc
movsb
addb
lcall
xchg
out
cs
dec
jmp
jp
and
enter
pop
mov
push
jmp
push
pushf
cmp
enter
xor
adc
enter
push
in
or
pop
ljmp
incl
cmp
jmp
xor
or
insl
xorl
jmp
stos
es
in
ds
fstpt
jns
aad
sbb
adc
fldenv
mov
in
decl
sbb
clc
push
inc
int3
outsb
jmp
js
add
add
cmp
outsb
jne
out
push
fnstenv
fidivs
xchg
test
xor
xchg
mov
or
nop
fwait
les
cltd
outsl
and
mov
pushl
out
pop
outsb
or
fwait
inc
push
les
pusha
ret
dec
mov
adc
cmp
push
push
incl
sarb
fiaddl
xchg
enter
lret
fildll
xchg
lock
aas
dec
mov
ret
xchg
jecxz
js
call
in
pushl
std
pushl
pop
mov
std
push
push
ss
out
or
fidivs
mov
lcall
lock
jnp
mov
jl
addr16
sti
xor
dec
dec
push
add
cltd
jns
cmpb
jnp
ret
aam
into
jnp
leave
inc
pop
imul
and
inc
gs
add
movl
xchg
inc
or
lahf
add
or
or
pushl
dec
out
xor
test
xchg
cmc
aad
pop
sbb
mov
push
adc
outsl
dec
push
std
mov
pushl
and
jmp
movsb
xor
aad
mov
call
mov
pop
adc
add
sahf
popa
jmp
xchg
pop
jae
jl
add
roll
cli
lret
pop
pop
mov
sahf
xlat
cmp
sub
mov
pushl
iret
mov
faddp
pop
push
inc
push
nop
sti
mov
repnz
mov
lea
xor
ljmp
ljmp
mov
mov
loopne
sub
sub
xor
decl
ret
popf
clc
xor
subl
les
xor
call
lcall
push
xchg
push
mov
fcompl
push
shld
pushl
push
adc
cmp
adc
add
pop
xchg
sub
xchg
std
lds
hlt
movsb
ljmp
add
pop
push
sahf
pop
aas
cli
call
loopne
inc
jecxz
mov
jno
push
call
inc
fwait
lret
push
mov
adc
imul
sbb
pushl
out
mov
jo
mov
sub
sbb
repnz
inc
cmp
dec
mov
mov
bound
ret
push
and
frstor
lret
xchg
jbe
xlat
nop
call
call
jmp
loope
scas
popa
fimuls
jle
dec
outsl
inc
test
sbb
pusha
jg
test
jp
inc
sub
inc
pushf
and
and
idiv
call
add
inc
loopne
imul
in
xchg
dec
ja
mov
lret
pushl
cmp
mov
arpl
jg
jle
push
and
insb
int
and
rorl
fdivr
jmp
movsl
adc
push
mov
cmc
xor
lea
jne
stos
decl
mov
sarl
pop
or
push
testb
loopne
mov
jle
jge
loopne
adc
call
call
xor
dec
fcmovnb
dec
and
sti
outsl
push
enter
xchg
xchg
mov
lods
ljmp
loop
jo
scas
mov
les
out
xchg
cli
pushl
fdiv
adc
inc
push
push
mov
movups
mov
jo
xchg
mov
ljmp
mov
mov
pop
sbb
push
jns
pop
incl
cld
jg
bound
cmpsl
scas
mov
call
test
in
iret
js
clc
lcall
mov
sub
aad
add
xorl
iret
mov
insb
cwtl
aas
xchg
jecxz
cmpxchg
sub
jnp
cltd
xor
jp
inc
and
mov
cwtl
popa
jmp
call
jmp
cltd
adc
lret
mov
cwtl
xchg
mov
jns
in
or
jg
sti
cmp
mov
ljmp
push
lock
negb
mov
rcrb
inc
das
loop
dec
jne
lahf
or
repnz
std
pushl
push
cltd
and
call
stos
pop
popf
xchg
push
lahf
movsb
jle
lods
push
add
aad
ss
call
movsl
jmp
cli
aas
ret
cmp
adc
xchg
stos
cmp
or
pop
jne
ljmp
jecxz
adc
xor
inc
movsb
or
jp
shlb
pop
fdivr
pop
dec
xor
or
ljmp
mov
dec
loopne
lods
lds
repnz
xchg
sysenter
dec
adc
pop
cld
lcall
sub
mov
sbb
jbe
ljmp
incl
or
push
push
sar
test
jg
jmp
dec
sub
sub
sub
mov
mov
dec
imul
mov
fstl
dec
xchg
jmp
or
cltd
cwtl
int
std
dec
nop
icebp
fdivs
jb
fisubrl
push
pop
jmp
push
inc
arpl
dec
std
lret
push
inc
call
out
push
add
pushl
mov
icebp
push
data16
pusha
call
sbb
add
addr16
pop
add
cmpsl
jns
and
ret
test
cmp
pop
adc
test
ljmp
lds
cmpsl
xchg
or
rorb
or
jae
push
mov
jg
daa
stos
cmpsb
add
push
les
popf
push
cmp
push
adc
lret
sbb
jg
cltd
call
test
xor
xlat
into
lods
ja
pop
iret
pop
pop
shl
xchg
mov
lcall
adc
mov
movsl
xor
addr16
and
or
pop
scas
mov
aas
sub
insl
pop
or
jecxz
inc
jb
xor
fwait
sub
clc
call
push
addr16
aad
mov
and
mov
sti
jnp
or
mov
adc
je
call
loopne
test
jp
std
mov
stos
pop
fbld
test
aam
pop
dec
pop
loop,pn
call
movsl
das
pop
pusha
bound
lret
dec
dec
mov
lods
mov
mov
idivl
addb
and
leave
jb,pn
ljmp
cwtl
clc
jmp
adc
mov
mov
pushl
and
xchg
test
rcrb
xchg
add
imul
or
mov
hlt
push
mov
loope
mov
xchg
hlt
orl
rol
out
ljmp
jbe
pop
sbb
push
cmpsl
mov
push
push
scas
pushw
push
incl
jmp
es
add
fisttps
rcl
or
adc
pushl
cld
jbe
stos
and
add
mov
xor
or
scas
lret
mov
sub
and
shrb
decl
add
xor
xchg
ds
pop
lret
sti
incl
sarb
leave
cwtl
ja
cltd
inc
cmp
xchg
mov
in
mov
jg
sub
push
lret
xor
test
rorb
packssdw
cmpsb
test
daa
mov
and
dec
push
xor
hlt
lods
push
repz
lods
hlt
cld
inc
add
pop
and
fcomip
ljmp
lods
jnp
dec
sbb
dec
pushf
mov
jg
cld
mov
aam
outsl
aaa
add
stc
loop
je
lea
outsl
call
sbb
or
dec
shll
cmpb
xchg
sub
dec
push
imull
jb
pop
jg
add
or
hlt
mov
push
sbb
ds
mov
pop
pop
inc
lock
outsb
popf
stos
mov
shl
cmpsb
push
mov
leave
xorl
cld
lock
aaa
push
hlt
iret
or
push
push
ja
sbb
add
scas
xchg
test
mov
push
inc
out
mov
jg
ljmp
inc
add
xor
lds
jns
adc
out
xor
or
fnstenv
inc
fnsave
decl
add
ficoms
xor
pop
jo
sbb
pop
cld
test
push
stos
jns
aam
aad
xor
lcall
xchg
ja
notl
popa
lea
xor
test
sar
mov
sar
push
xchg
add
cld
outsb
xor
sub
loopne
or
outsl
repz
jg
aam
nop
sbb
clc
xorl
loop
push
lret
adc
addb
xor
mov
adc
mov
inc
out
in
aad
decl
lret
pusha
mov
and
gs
clc
push
adc
jbe
jecxz
dec
ror
pop
inc
or
stc
loope
fmuls
in
dec
or
adc
pop
jnp
pop
loop
push
jge
insl
mov
popf
add
shl
inc
mov
je
jns
jbe
aas
mov
cmpsl
test
jecxz
xor
jge
call
fcoml
fcmove
xor
xor
push
inc
and
sub
ljmp
jl
ret
dec
cmp
and
xchg
cld
or
pop
imul
jmp
ss
pop
add
and
or
sub
mov
mov
test
iret
lcall
push
stos
xchg
sub
es
int
pop
loop
outsb
addl
adc
cs
pop
mov
out
inc
push
idivl
jp
inc
adc
test
mov
das
repnz
and
aaa
mov
movsl
nop
pop
pop
in
repnz
jge
cs
decl
jne
insb
or
mov
int
stos
push
xor
sbb
or
xor
movsl
lcall
in
and
xor
pop
ficomps
cmp
int
jno
mov
das
xchg
xor
cld
ds
in
cs
cmpsb
inc
into
aaa
rorb
xor
cmpsb
dec
push
add
ja
sub
out
movsb
movsb
out
inc
das
arpl
push
sti
adc
or
int
mov
out
push
dec
imul
lcall
enter
xor
push
push
push
sub
add
in
xor
sahf
enter
cld
out
std
xor
fistps
adc
mov
push
pop
js
enter
test
jmp
jle,pn
ja
lret
cltd
inc
imul
adc
mov
and
mov
dec
push
stos
incl
bound
sbbb
pop
add
cwtl
cmp
loopne
outsb
push
mov
pop
cwtl
mov
shll
mov
sub
push
dec
lahf
jge
push
clc
cld
xchg
daa
push
mov
insb
ljmp
decl
jne
xor
cmp
and
push
lods
mov
ljmp
sahf
sti
mov
pop
cmp
ret
inc
loopne
dec
mov
and
sub
jo
inc
stos
sub
ljmp
jmp
popa
mov
jp
jl
mov
push
ljmp
xchg
or
arpl
sub
aas
fdivrs
and
xchg
inc
fcmovnbe
cmp
push
jecxz
mov
mov
int3
sub
mov
sbb
ljmp
jne
shlb
dec
lea
jge
bswap
push
add
sub
mul
mov
cld
and
mov
xchg
mov
insl
mov
xor
inc
sbb
cli
adc
sbb
and
cmp
cmc
arpl
decb
and
inc
lret
daa
pop
fbstp
fstpl
call
push
fstpt
shld
mov
xchg
imul
cmp
bound
and
or
adc
sarl
pop
xor
jg
or
stos
push
cmp
rcrl
test
bound
pop
dec
sti
adc
daa
mov
jnp
std
jg
data16
incl
cld
rol
idivl
rcrb
clc
jp
mov
js
cmp
pusha
fbstp
inc
or
iret
call
decl
test
mov
shlb
and
ss
pop
das
xor
pop
xchg
pop
mov
pop
jg
out
sbb
leave
xor
data16
sbb
mov
bound
andl
sbb
call
ret
cwtl
adc
mov
movsb
andb
insb
inc
dec
bnd
mov
xor
lcall
xchg
std
fadds
fisubrs
pop
in
outsb
shrb
test
jg
jmp
sbb
sub
or
mov
mov
data16
xchg
sbb
mov
decl
add
insb
in
jle
cmp
aaa
push
lahf
shlb
inc
je
xor
aad
ret
daa
add
lret
or
mov
aad
cmp
scas
pop
ljmp
xchg
xor
movsb
cmp
into
shlb
inc
jns
push
out
fucomip
fistl
jno
lds
addl
xor
adc
xor
je
cmpsb
pushf
dec
shrl
aad
adc
cli
pop
bound
hlt
lcall
filds
sub
aaa
lcall
mov
cwtl
in
out
fidivrs
pop
lods
jno
mov
mov
push
push
jo
loope
icebp
data16
xchg
ja
or
sbb
das
cli
cltd
jae
inc
in
lret
push
mov
int
dec
push
mov
call
mov
xorl
arpl
mov
int
adc
mov
or
decl
loop
aas
les
test
xchg
sub
jle
sbbl
pop
pop
test
jl
jmp
cld
push
orb
in
jnp
ret
sub
insl
es
sub
push
cmp
or
push
addr16
dec
adc
dec
loope
andb
push
cmp
and
lock
add
or
inc
imul
jmp
outsb
jp
dec
popf
add
xlat
fildll
sar
lcall
cs
das
mov
clc
scas
mov
enter
out
stc
push
sbb
call
aas
pusha
addr16
sti
sub
mov
mov
push
xchg
mov
stc
out
pop
fwait
inc
or
fcomip
out
mov
adc
cmp
frstor
and
arpl
in
lcall
adc
cmp
cmp
push
add
lret
sub
lds
call
mov
in
pop
sub
ficoml
mov
bnd
popf
into
sub
idiv
ljmp
inc
in
xchg
fsubs
mov
xchg
out
dec
adc
and
jne
pop
jp
incl
add
out
add
or
adc
jecxz
push
mov
incl
pop
ud0
repnz
lods
mov
push
sbb
cld
iret
jg
mov
repz
cmp
push
fsubs
stos
dec
in
imul
repz
fisubrl
sarl
sbb
lcall
dec
push
add
hlt
rolb
dec
into
scas
add
fisttpl
pop
sub
les
adc
xchg
inc
add
sbb
add
out
or
out
mov
push
ljmp
pop
je
orb
jmp
jmp
insl
adc
mov
pusha
shrl
insl
cld
cmp
cmc
cmp
sub
mov
addl
push
test
je
xor
xor
les
in
cmp
sbb
sub
dec
ret
dec
lret
das
rclb
cltd
cs
pushl
pop
shll
lret
and
or
leave
lock
vaddsd
popa
test
aas
dec
cltd
pusha
lret
push
sbbl
jmp
mov
movsl
mov
in
push
stos
std
hlt
aaa
adc
ds
cli
cmp
stos
in
das
jecxz
add
mov
xlat
imul
decl
push
mov
or
add
fnop
mov
movl
sar
jmp
es
jecxz
jl
jecxz
sbb
sbb
hlt
and
ljmp
scas
stos
mov
out
push
push
cwtl
sbb
mov
ja
mov
jne
fwait
mov
aad
jmp
jecxz
mov
and
jae
adc
clc
add
cli
loop
fisubl
test
cmp
adc
sub
scas
inc
pop
in
jl
int
imul
xchg
pop
adc
fcomip
mov
cld
popa
xchg
jmp
or
jb
mov
scas
lock
dec
ljmp
inc
push
xor
stos
jge
sub
push
sub
mov
mov
testl
lret
mov
stc
inc
cmp
in
pusha
test
add
decl
arpl
mov
mov
test
aas
movb
or
xchg
push
pop
outsb
cmp
roll
inc
mov
add
xor
incl
push
xchg
and
inc
xchg
mov
out
sbb
std
aam
ret
mov
enter
lcall
divb
sbb
cmpsb
pop
sbb
cld
mov
outsl
fcompl
movsl
in
xor
jmp
pushf
xchg
xor
jge
lcall
popa
pop
mov
and
inc
adcl
or
xor
lret
ss
sbb
sbb
cltd
into
inc
pop
test
or
dec
sbbl
xor
lock
iret
in
inc
mov
ret
mov
dec
scas
push
loopne
push
xorl
and
mov
bndldx
rcr
dec
sar
ljmp
and
push
push
adc
xchg
pop
iret
cmp
cmp
inc
cmp
pop
or
ljmp
mov
push
push
dec
aam
sub
movsb
aad
stc
pextrw
pop
cmp
pop
loopne
decl
pop
add
dec
lods
dec
pop
dec
ret
cld
dec
adc
stc
dec
dec
add
add
pop
and
sti
adc
mov
fwait
stos
decl
ja
leave
pop
xchg
mov
xchg
and
push
imul
add
arpl
loope
imul
decl
sub
je
insb
xchg
xor
jbe
fsts
xlat
jmp
mov
cmc
mov
or
fcomps
into
dec
mov
sub
inc
cmp
aaa
ret
outsb
dec
repnz
sub
lcall
pop
or
cmpsb
jg
fwait
sarl
ret
mov
incl
pop
mull
stc
gs
inc
sbb
pop
ljmp
jl
sub
and
push
jp
data16
incl
pop
sub
jmp
sbb
mov
push
movsl
pop
lea
xchg
mov
stos
lcall
rcrb
mov
cmpsb
ja
lea
fdiv
cmovb
add
call
aas
sbbl
loope
int
icebp
xchg
inc
imul
pop
call
sbb
jmp
fwait
add
cmpb
in
mov
pop
mov
in
scas
xor
fsubrl
ds
aaa
decl
jmp
popa
xchg
aaa
aad
sub
xor
sub
sub
call
push
pop
rcrb
rorl
pop
or
je
punpcklbw
decl
cmp
cmpsb
cmp
sahf
loope
aas
pop
ret
imulw
jmp
pop
mov
dec
std
rolb
mov
inc
xor
adcb
xchg
xor
jb
repz
call
mov
lret
cli
stos
stc
shll
test
jecxz
loop
or
int3
or
loope
fcomip
xchg
sti
test
bound
xchg
mov
loop
mov
fcomip
pushl
imul
leave
sbb
hlt
mov
or
out
aas
adc
sar
inc
popf
jmp
add
repnz
mov
add
push
push
adc
adc
ljmp
shlb
gs
fxch
lret
and
leave
andl
decb
out
sbb
lods
cmp
aas
inc
jae,pt
jns
out
sub
aaa
call
cmp
lcall
cli
ffreep
mov
lds
fldt
mov
decl
inc
jb
cmp
mov
scas
ds
pop
into
jns
rol
idiv
pushl
int
adc
test
lods
and
cmp
or
jmp
pushf
adc
sub
add
cs
cmp
xchg
cwtl
rolb
push
mov
ljmp
dec
shl
cltd
fnstenv
enter
insl
jge
out
xchg
and
je
push
call
push
and
adc
pop
fiaddl
push
pop
mov
or
mull
mov
lcall
out
and
outsl
imulb
xor
int3
out
sbb
leave
adc
cs
call
mov
add
or
lret
xor
dec
lea
jno
in
out
in
xor
decl
lret
imul
or
dec
lret
adc
scas
and
xchg
test
decl
cmp
incl
rol
imul
or
ret
push
fs
sar
mov
sbb
sbb
dec
jp
imul
cld
mov
xchg
jmp
lock
push
xchg
scas
xchg
adc
ja
xchg
cmc
sub
mov
mov
incl
aam
in
inc
xor
xchg
and
std
jg
jns
cmp
xchg
bound
jo
adc
mov
fwait
cli
mov
inc
dec
cld
lds
lods
je
outsb
cld
cli
pop
lods
sar
jmp
das
sub
data16
ss
ret
insl
push
jnp
mov
xchg
jo
xor
mov
or
lahf
loop
test
int3
dec
lahf
js
out
ljmp
addr16
aam
scas
adc
mov
or
dec
daa
pop
xor
or
and
jecxz
mov
push
in
lea
push
js
fs
sti
and
jmp
addr16
mov
fcomip
add
inc
mov
and
sbb
xchg
int3
jae
std
mov
inc
pop
mov
bound
push
stc
xchg
xchg
pop
mov
in
fmull
cmp
sbb
in
push
gs
loope
loope
or
jl
push
fucom
and
fsubr
or
fisubrl
out
inc
loope
cmp
loop
or
iret
stos
aaa
lcall
cmp
sahf
push
and
mov
xor
jge
repnz
std
xlat
rorl
lcall
aam
scas
subb
fisubrl
leave
sbb
and
call
push
scas
mov
push
mov
push
push
cmp
aas
mov
pop
mov
push
mov
outsb
out
stc
or
popf
cmc
incl
cld
inc
pop
in
les
sbb
xchg
shrl
loope
outsb
push
in
rol
or
sbb
add
mov
lcall
xor
das
pop
mov
mov
cli
mov
shrb
adc
jg
inc
mov
neg
push
mov
pushl
sahf
xlat
push
outsb
popf
cs
mov
rcl
fcmovbe
addr16
cmp
inc
and
jmp
and
xor
test
xchg
mov
push
stc
incl
jp
leave
or
imul
xor
lds
mov
dec
cli
push
movsl
mov
xchg
lcall
jae
dec
lock
sub
xchg
inc
lret
aas
mov
mov
lods
add
incl
sbb
mov
add
mov
mov
lods
lret
inc
push
loop
mov
int
inc
scas
or
xchg
add
inc
and
add
jg
ss
lret
cmp
sbb
mov
sub
jmp
mov
push
cltd
jbe
jle
jmp
imul
push
inc
pop
xor
out
mov
pop
xlat
fldl
and
das
sar
daa
mov
jle
mov
mov
and
push
and
push
call
push
in
jns
adc
cli
cld
cmp
sub
add
jp
popa
pop
cmpsb
or
mov
nop
std
lcall
ds
lahf
repz
pop
push
xchg
cltd
jecxz
pop
pushf
inc
jg
jmp
loopne
mov
fwait
mov
jno
icebp
mov
cwtl
push
sub
jnp
sub
fistps
call
push
pop
sbb
insl
jmp
or
sahf
nop
dec
or
inc
adc
adc
xchg
mov
movsl
mov
push
adc
outsb
dec
bound
xchg
dec
xor
fsubrp
ret
int
mov
pop
xor
fstpl
xchg
or
shll
sbb
out
mov
jmp
jb
mov
push
aas
addb
pushf
lret
jp
mov
sbb
cmc
jno
test
or
insl
test
ror
sar
ljmp
inc
push
bound
jo
aaa
fsubs
sbb
outsl
ss
cmc
iret
enter
push
incl
xor
lea
insb
xor
lahf
push
mov
inc
inc
xchg
roll
pop
iret
cld
xchg
xlat
incl
inc
sahf
pop
lret
addb
popa
push
jo
and
adc
mov
pop
icebp
jg
mov
dec
or
mov
and
inc
xor
fwait
les
cmp
lcall
pop
cmp
mov
push
xor
bnd
fcoml
pushl
test
dec
and
cmc
mov
add
push
jmp
loopne
xor
ljmp
in
sub
ret
das
pop
gs
dec
and
add
call
cmp
faddl
push
stos
filds
cmp
and
push
add
jecxz
mov
lock
jge
pop
pop
call
pop
sbb
ljmp
inc
or
cmp
call
mov
cmp
sub
push
mov
mov
jmp
push
leave
cmp
inc
xchg
fdivs
jp
outsl
call
aas
mov
xor
sar
cmpsb
fs
mov
inc
inc
mov
jnp
push
iret
cmc
std
push
mov
pop
test
push
or
std
jecxz
incl
nop
jbe
xor
cmpsb
adc
pop
loopne
and
jnp
std
lcall
inc
xchg
inc
inc
jno
sub
shl
and
das
clc
pushl
ljmp
xchg
jecxz
mov
lods
cmp
stc
mul
stos
cmc
dec
shrb
pop
out
pusha
clc
movsl
push
cwtl
out
mov
cltd
ret
movsl
out
call
inc
pop
sub
push
jns
push
push
xlat
mov
ret
notb
imul
fucom
pop
inc
xchg
lods
xchg
pop
adc
mov
mov
push
roll
sub
cmp
ss
ljmp
rcl
mov
jle
mov
inc
inc
pop
hlt
repnz
incl
pop
mov
cmpsb
sbb
push
mov
in
pop
int
add
std
leave
xchg
push
arpl
and
inc
ljmp
xlat
push
leave
inc
notl
call
or
shll
xor
aas
hlt
iret
sti
rorl
pusha
inc
loope
cmp
ljmp
cmpsb
push
mov
stos
icebp
loop
xor
cmp
scas
mov
lds
stos
enter
rcr
cmc
stc
paddsw
sub
adc
mov
test
enter
pop
mov
mov
movl
push
mov
call
push
addr16
pop
inc
in
icebp
cmp
out
push
aam
lea
adcl
xchg
mov
out
loopne
test
js
jno
and
adc
sub
and
mov
cs
popf
add
add
sbb
pop
andl
fiaddl
jmp
les
subb
loopne
xor
repnz
imull
add
daa
cltd
stos
call
dec
popl
adc
sub
lret
lcall
movsl
leave
fucomi
sar
push
jmp
lods
and
fs
or
fnsave
incb
incl
into
push
jbe
cmp
dec
mov
hlt
dec
lcall
incl
or
or
or
in
data16
ds
pop
lods
fildll
sub
lret
jmp
or
xor
jno
adc
fadds
test
adc
es
xchg
xchg
in
mov
mov
jmp
and
out
out
dec
cltd
sbb
lock
mov
adc
push
cmp
decl
cmc
fs
jbe
mov
sbb
adc
add
ret
lods
std
call
lret
jbe
out
sbb
mov
psubd
mov
idivb
jae
cli
pop
mov
call
mov
mov
sbb
cwtl
nop
sbb
jl
adc
jg
fwait
scas
in
jne
hlt
enter
mov
loope
inc
add
mov
in
fstps
lcall
lret
adc
sub
jl
push
stos
mov
cmp
cmc
mov
xorl
jle
jg
mov
test
pop
lea
insl
ja
sub
mov
decl
adc
inc
dec
fwait
or
pusha
sbb
inc
fstpl
pop
daa
ficoms
jmp
movsb
shlb
fwait
aam
pop
and
add
fadd
lret
inc
movsl
mov
insl
mov
push
idiv
jmp
mov
mov
pop
mov
cmc
andl
xor
mov
clc
incl
or
mov
push
dec
mov
dec
push
push
or
clc
lcall
pushf
ss
mov
add
aaa
punpckhdq
push
inc
es
call
add
dec
pop
sahf
sbb
movsb
jmp
sti
pop
pushf
out
or
mov
adc
pushl
es
cwtl
in
pusha
mov
loopne
cli
roll
xchg
mov
or
pushl
adc
inc
and
mov
pop
insb
jl
and
jmp
xor
jbe
adc
in
movzwl
mov
jnp
lret
ss
xor
call
in
movsl
lahf
iret
mov
xor
mov
pop
jae
out
mov
pop
jg
loop
lcall
loopne
or
sbb
mov
add
inc
stos
mov
int
mov
and
jns
stos
sahf
sub
out
mov
inc
std
sti
jmp
pusha
into
mov
and
pop
lds
inc
cmpsb
mov
mov
mov
pop
jg
imul
addr16
into
ds
or
inc
arpl
lcall
je
popf
es
shll
outsl
outsl
sub
pop
in
pop
xchg
ss
jns
out
dec
add
ljmp
fidivs
enter
lock
jle
testb
mov
jb
pushf
nop
clc
mov
lcall
cld
imul
fcomip
adc
xlat
mov
push
sbb
lock
jecxz
inc
fdivr
xor
pop
testb
test
repnz
call
inc
push
dec
sbb
ja
and
mov
mov
jmp
adc
fsts
cli
aas
mov
ret
js
pop
xchg
fld
fdivr
mov
sub
lret
push
stos
leave
xlat
push
mov
leave
lods
sub
cmp
jmp
ret
stc
rol
js
lahf
call
daa
scas
xchg
sbb
subb
loopne
insb
pop
push
lcall
cmp
ja
pop
jne
mov
jb
add
decl
incl
push
inc
sub
jecxz
arpl
sbb
push
in
cmp
fdivrl
xor
push
leave
pushf
push
sub
movsl
out
xchg
mov
cmp
cmp
jg
jns
pop
xor
repnz
dec
jae
pop
inc
pcmpeqd
rclb
lods
xor
pop
xor
xchg
movsl
es
pop
ds
pop
popa
xchg
mov
stc
jnp
mov
rorl
push
inc
repz
stos
test
and
out
insl
ljmp
in
jae
enter
in
outsl
std
mov
mov
das
xor
inc
jl
push
pop
push
jmp
inc
pop
mov
sub
mov
lods
in
jns
inc
insb
je
push
add
mov
dec
jmp
mov
into
jp
je
clc
push
in
pop
out
das
and
movsl
das
add
loope
out
mov
jmp
inc
dec
cmp
add
jns
scas
test
lods
sub
imul
mov
ficompl
jmp
mov
nop
lret
das
xor
lahf
js
cmp
cmp
icebp
call
pop
xchg
jne
jmp
out
ret
stos
icebp
mov
leave
sbb
jmp
jecxz
pop
int3
ret
adcl
outsb
pop
mov
xor
mov
aam
push
daa
xor
addr16
pop
std
sub
loope
inc
adc
call
repz
in
test
push
xchg
adc
xchg
push
xchg
mov
ds
mov
test
rcrl
dec
jmp
mov
inc
mov
mov
fimull
aad
sbb
decl
pop
pop
jbe
xlat
dec
out
loope
movsb
push
jbe
lret
sub
in
pushl
testb
ljmp
or
jne
cmpsl
add
mov
mov
scas
icebp
movsb
loope
fldl
jmp
fwait
pop
sub
gs
xlat
inc
mov
cmp
add
lea
shr
dec
sub
int
lock
incl
arpl
inc
mov
aam
xchg
sub
mov
jmp
call
mov
add
or
sub
dec
imul
push
test
ljmp
mov
fwait
aas
daa
int3
cmp
outsl
test
in
xchg
negl
sbb
repz
lcall
lods
mov
jnp
sbb
mov
jl
dec
stc
push
out
add
incl
in
xchg
mov
mov
dec
dec
inc
sub
mov
cmp
lcall
mov
lods
sub
pop
or
lcall
or
mov
lcall
dec
ret
and
or
mov
adc
jp
sub
xor
xor
decl
or
or
mov
lock
adc
rolb
dec
lahf
jle
js
ljmp
and
sbb
call
xchg
repz
sbb
and
sti
rorb
shlb
cmpsl
adc
mov
incl
xchg
xor
dec
iret
pop
or
in
add
mov
fnstenv
call
push
into
dec
and
sub
xchg
das
sub
mov
ret
movb
es
call
jge
out
ja
inc
xchg
xor
or
push
dec
fcomps
sub
or
lcall
adc
fildll
inc
xor
das
pop
mull
rclb
cmp
sbb
incl
jecxz
sti
and
mov
sbbb
fstpt
mov
cmp
sub
xor
cmp
xlat
push
sub
add
dec
cld
lods
jbe
scas
test
jmp
pop
sbb
loopne
or
test
cmp
nop
mov
pop
sti
repz
leave
xchg
xchg
lcall
jno
mov
fs
in
into
mov
negl
jae
mov
push
mov
call
aas
or
movsl
fisubl
stos
pop
imul
jmp
jne
aaa
push
mov
cmp
push
add
lods
mov
xbegin
and
lock
xor
stos
dec
inc
and
xchg
adc
lcall
call
pop
iret
sbbb
pop
mov
mov
into
and
stc
fisubs
add
pop
jmp
fnsave
pop
cltd
mov
pop
fmuls
pop
sbb
out
pop
sbb
add
lahf
dec
fwait
mov
inc
cmp
mov
scas
inc
dec
hlt
adc
and
fldl
pop
cmp
rorl
subb
cli
addb
std
lret
cmp
mov
sub
and
je
flds
mov
cmp
adc
or
cmc
mov
movsb
pusha
cs
add
das
roll
ret
lods
repnz
dec
int
adc
fwait
aad
orb
in
ss
push
pop
out
aaa
adc
loope
mov
stc
mov
add
fwait
fs
fmuls
push
clc
push
fists
adc
cmp
lcall
xor
xchg
cli
sbb
inc
mov
fidivrs
or
fsubs
dec
xchg
mov
aas
rclb
and
jne
repz
adc
lea
ljmp
sub
lret
cmp
out
ret
dec
das
jbe
andb
shll
daa
ljmp
dec
ss
int3
std
or
test
fmull
ficoms
es
mov
shr
fisubrl
push
fwait
mov
into
cmpsl
incl
les
add
loope
repz
mov
ret
mov
shlb
jmp
xchg
fs
mov
sub
jb
in
ja
sbb
inc
sbb
pushl
push
stc
pop
mov
ret
aas
pop
add
fs
in
test
pop
cld
jmp
jle
fmull
lcall
or
add
add
jns
insb
leave
pop
mov
push
fabs
inc
loop
sti
sub
fs
notl
xchg
aad
pop
xchg
sbbb
imul
shlb
jge
fstps
sar
mov
jp
jmp
jno
push
shrl
leave
lret
decl
push
test
imul
test
mov
pop
mov
xchg
xchg
or
lahf
js
pop
xor
sbb
sbb
mov
or
jbe
out
mov
add
pop
ret
dec
inc
fninit
and
sbb
push
push
dec
mov
jmp
aam
das
add
lcall
mov
stos
scas
fnstenv
xchg
push
fwait
mov
incl
pop
mov
xor
cmc
pop
cmp
push
and
leave
mov
cmpsb
jle
sbb
pop
sub
jmp
and
ret
in
xchg
aas
jns
cltd
pop
sub
movsb
sbb
cmp
jmp
lock
in
mov
cmp
mov
fnstenv
int3
push
or
pop
mov
push
addr16
or
fistps
cld
into
shr
insl
leave
out
out
bound
stos
pop
mov
mov
insl
repnz
ljmp
sbb
cld
sbb
push
adc
lods
push
xchg
jmp
jae
imul
jmp
push
sbb
pop
inc
push
or
cmc
push
dec
jb
pop
pop
mov
sub
mov
mov
arpl
cli
mov
push
sbb
je
cltd
and
sub
pop
dec
ljmp
or
mov
xchg
popa
cld
sbb
xchg
outsl
sub
mov
mov
add
in
jl
and
iret
xor
inc
test
adc
jmp
js
mov
mov
les
dec
bound
mov
mov
xor
jo
in
nop
xor
sti
pushl
lds
inc
sub
add
and
data16
pop
daa
lahf
mov
popf
dec
xor
jg
shll
inc
or
pop
mov
dec
xor
sbb
mov
sub
mov
ljmp
cli
lret
lods
mov
loope
mov
adc
mov
stos
inc
insb
xchg
xlat
and
lcall
mov
add
cmp
sub
js
dec
or
mov
ret
mov
or
mov
scas
mov
movsb
loopne
mov
cmp
push
and
push
test
addb
pop
mov
cld
shlb
js
push
pop
rorl
std
ljmp
xor
pop
pop
stc
gs
pop
les
int3
or
pop
pop
hlt
bound
mov
call
js
stc
cmp
test
xor
mov
in
sub
mov
imull
test
inc
push
cmp
xor
jmp
sbb
mov
push
cli
shl
inc
adc
adc
fidivrs
mov
jae
mov
out
lcall
cmp
in
xchg
mov
sbb
mov
movsb
xchg
cmp
out
push
pop
dec
scas
jg
call
rcr
mov
iret
sarl
xchg
in
add
fwait
mov
std
jg
movsb
out
mov
xchg
mov
mov
jl
adc
xchg
xchg
imul
incl
jbe
in
addr16
pop
xor
aam
jmp
add
lock
lcall
inc
loop
xchg
jbe
add
pop
pushf
adc
mov
pop
pop
notl
aas
cmp
cwtl
int3
push
lea
add
cld
loop
jle
cmc
in
dec
aad
mov
inc
xchg
xchg
lret
outsl
jbe
jecxz
mov
orb
xor
lret
shrb
aas
fsubrl
lcall
test
or
jmp
xor
pop
mov
ret
inc
popa
into
outsb
incb
jbe
sarl
inc
ret
cs
jg
jb
push
xor
pusha
fst
lock
cmp
add
test
inc
pop
lahf
sub
jne
call
cmpsb
push
es
adc
push
add
jmp
fcomps
cmp
jge
xor
push
pop
push
xor
dec
ljmp
adc
in
nop
adc
xlat
and
scas
mov
mov
or
incl
xor
je
inc
frstor
inc
je
jne
jp
push
cli
mov
popf
mov
imul
incl
out
ret
mov
xchg
inc
stc
fisubl
addr16
jo
pop
ds
jg
mov
bound
cmp
mov
lds
adc
cld
rcl
sbb
aas
jmp
push
sbb
push
movsl
mov
shrb
cmc
ficomps
jbe
shrl
dec
incl
or
aam
test
cmc
ret
ret
xor
jns
js
or
fstp
fisubl
push
add
mov
xor
mov
dec
imul
push
cmp
stos
push
aad
push
jnp
fimuls
out
enter
fwait
arpl
and
dec
mov
push
imul
subl
mov
clc
ja
lcall
jmp
jp
dec
jecxz
inc
aam
call
dec
cmp
xchg
mov
ficomps
loopne
scas
xor
mov
mulb
iret
push
push
mov
and
inc
aad
call
xlat
dec
inc
xchg
iret
adc
ljmp
fidivrs
lods
mov
gs
push
daa
dec
jl
jg
sbb
pop
dec
push
mov
mov
shlb
add
lret
pop
sahf
mov
test
addl
call
jle
outsl
cmpsb
lret
jb
sub
aas
mov
negb
js
decl
lock
fbstp
mov
test
lahf
sub
imull
push
into
jbe
int
ds
call
les
inc
fisttps
out
sbb
jle
cmp
lock
fsubrl
xchg
dec
xchg
enter
fwait
call
mov
aad
mov
pop
sbb
pop
shll
xchg
pop
scas
sarb
sub
std
bound
jmp
pop
mov
dec
lcall
xchg
and
mov
xchg
jmp
jmp
aaa
lahf
daa
aaa
repz
mov
addr16
mov
sbb
cmp
sar
pushl
rorl
mov
hlt
ss
mov
xor
jle
mov
cmc
pop
dec
inc
mov
decb
jmp
xor
inc
arpl
push
and
adc
adc
fidivrs
hlt
sar
decl
or
and
arpl
in
in
incl
cwtl
sbb
jb
jae
out
dec
jg
pusha
jb
fbstp
test
pop
std
call
jecxz
fs
mov
stos
ljmp
push
nopl
add
fs
decl
sub
inc
int
add
fst
mov
js
cmp
inc
rclb
insl
enter
cwtl
inc
jb
stc
xchg
inc
mov
jp
cld
xor
lcall
push
jle
and
sbb
inc
sbb
rcl
ret
dec
lahf
das
nop
clc
filds
test
test
inc
insb
mov
or
repz
enter
jle
mov
incl
stc
xor
or
sub
lea
enter
stc
or
pop
xchg
outsl
cmp
inc
cmp
sti
call
notl
fildll
loope
das
iret
sbb
cmpsl
ss
cltd
xor
xchg
out
loopne
call
icebp
mov
inc
pop
incl
inc
xchg
arpl
sarb
push
pop
pusha
aam
jns
loopne
test
incl
inc
in
cld
sti
enter
bound
clc
out
dec
shl
or
pop
stos
icebp
jp
push
ret
xchg
cmp
or
js
call
gs
cld
sbb
in
addr16
leave
mov
out
call
cld
push
mov
ljmp
sahf
inc
imul
inc
mov
imul
jnp
adc
std
inc
js
stos
lret
xor
dec
pop
dec
adc
sbb
mov
jl
ja
mov
lret
shr
test
das
clc
dec
int3
jp
or
movsl
fldenv
xor
or
test
mov
pop
aas
cld
fs
push
mov
cmpsl
mov
decl
jnp
iret
xchg
xor
xorl
pusha
les
mov
and
push
xor
incl
pop
mov
jg
imul
sbb
inc
bound
cmp
aas
mov
hlt
pushl
mov
adc
lock
and
xor
xor
call
pop
decl
pop
lods
xor
repnz
pop
pop
in
loope
xchg
out
aaa
push
pushl
cvtps2pd
je
out
loope
popa
adc
add
add
and
pop
mov
decl
daa
sbb
call
push
mov
js
jo
jo
mov
inc
incb
subb
out
cli
jecxz
push
imul
xor
or
cwtl
pop
out
leave
aam
scas
add
enter
decb
dec
arpl
into
mov
cld
mov
stos
pop
in
mov
and
pop
sar
jg
cmp
ss
mov
inc
ljmp
adc
push
pushf
jl
cmpsb
rcrb
jmp
cmp
xchg
gs
inc
sub
lahf
mov
fsubr
pop
cmpsb
push
push
push
adc
mov
and
jg
insl
xor
fidivl
sub
sarb
cmp
inc
cmpsb
or
pushf
test
dec
jne
sub
loopne
pop
cmp
mov
lcall
inc
pop
cld
test
mov
sub
jo
stos
xchg
jno
ja
xchg
adc
ljmp
xchg
jp
mov
or
popa
mov
mov
inc
push
push
repnz
out
lret
outsl
leave
stos
inc
mov
nop
sbb
out
pop
dec
mov
std
sar
dec
fmull
ljmp
in
add
push
pop
mov
jecxz
jo
push
pop
add
jb
lahf
dec
aam
insl
stos
jmp
lcall
push
sbb
push
cmp
sbb
and
ja
nop
mov
call
push
sti
pop
or
dec
dec
dec
je
pop
pop
jno
jmp
jns
and
fs
lock
sbb
sbb
mov
repnz
jg
js
jne
shl
test
fcmovbe
enter
sti
lcall
mov
add
mov
cltd
mov
add
jb
jp
inc
and
ljmp
sub
arpl
iret
adc
adc
xchg
mov
leave
cmpb
sub
inc
in
out
aad
adcb
adc
lods
jg
leave
fiadds
push
adc
cmpb
jmp
pop
cmpsl
sub
scas
pop
vorps
or
sbb
sbb
jge
into
aam
dec
adc
pushf
int3
imul
sub
push
mov
repz
add
mov
rol
push
ljmp
push
dec
incl
cmc
jmp
pop
or
or
icebp
leave
ds
push
or
dec
lcall
nop
loop
orb
daa
push
stos
xchg
push
pop
xchg
cmp
jb
inc
fucomp
xchg
inc
add
clc
lcall
stc
negb
mov
je
loope
test
adc
cmpsl
jecxz
ljmp
cmp
dec
push
push
cld
pop
bound
inc
adc
cmp
sti
or
and
mov
jmp
dec
insb
std
sub
sbb
aaa
jmp
cmp
pushl
inc
ds
push
test
mov
stos
pusha
mov
insl
jnp
decl
jmp
mov
test
rclb
or
fwait
lods
call
subl
aad
lock
add
push
mov
push
in
das
mov
pushf
icebp
sub
movsb
out
ret
adc
sbb
dec
jno
pushf
clc
jbe
out
and
dec
fcoms
fildll
mov
lcall
out
cmp
jle
das
je
xlat
out
push
mov
jne
clc
insl
pop
fcos
lcall
sub
mov
shrb
je
aaa
pop
and
call
push
xchg
decl
sbb
movsl
es
jge
int3
adcl
jg
xchg
ds
les
faddp
cli
incl
or
fwait
dec
push
cmpsb
insb
in
fiaddl
adc
push
dec
movsb
and
ljmp
jp
jecxz
pusha
in
push
pop
test
adc
mov
mov
add
jns
pushl
in
lahf
loopne
add
cmp
jecxz
pop
jl
and
lret
jg
pushl
pop
mov
inc
fdivl
cmp
aad
repnz
lahf
aaa
data16
sub
insb
sub
call
imul
xor
rcr
mov
dec
icebp
repnz
sbb
out
out
insl
sar
jmp
sbb
mov
jmp
fmulp
mov
repnz
mov
xchg
push
incl
adc
into
mov
icebp
mov
sar
mov
mov
test
adcb
fstpt
dec
sub
jg
inc
sarl
out
dec
fs
shrb
mov
or
decl
xor
mov
and
shll
lcall
sbb
bound
mov
push
icebp
push
in
mov
das
inc
mov
lret
cs
iret
sub
orl
sub
lcall
adc
imul
push
xor
popf
sahf
adc
clc
jmp
xchg
cli
mov
loopne
in
adc
test
mov
xor
ret
push
dec
mov
jnp
stos
lock
lock
or
lcall
mov
shlb
movsb
fidivl
pop
mov
xlat
and
dec
js
push
dec
cmp
mov
jmp
jnp
cmpsb
pusha
or
fisttpl
mov
jnp
add
and
jmp
insb
into
lret
inc
fs
or
scas
mov
mov
sbb
mov
pushl
sub
enter
sub
inc
xchg
dec
es
shll
enter
cwtl
test
ljmp
mov
fcoms
mov
or
xchg
les
lods
push
ret
add
decl
inc
xchg
and
cmp
jl
fcoms
out
dec
out
jns
flds
and
inc
adc
mov
dec
pop
xor
test
movsb
pop
lods
out
fdivrs
xorb
lock
jmp
loope
add
movsl
popa
mov
in
test
enter
dec
jge
shlb
cmpsb
out
mov
or
aam
icebp
inc
insl
aam
out
mov
sbb
or
push
push
xchg
jle
dec
out
das
jns
gs
bound
xchg
popf
scas
loope
int3
pop
fisubl
icebp
jmp
mov
push
out
rcl
fs
enter
int
push
xchg
pop
sbb
fbld
cmpsl
inc
xor
testl
popf
xor
loopne
push
imul
pushf
dec
jp
cmp
call
stos
push
les
ss
mov
mov
jbe
inc
iret
out
dec
push
int
dec
jo
adc
mov
das
xor
cli
fldl
push
int
decl
jb
lcall
jns
outsb
movsb
outsl
in
mov
scas
or
ja
fdivrp
push
std
dec
dec
mov
mov
rcrl
cmc
pop
cwtl
pusha
mov
xor
inc
xor
push
mov
repz
divl
imul
aaa
lret
sbb
mov
popf
mov
inc
inc
and
fdivp
mov
cmp
push
add
xchg
adc
push
add
xchg
add
sub
pop
ss
xchg
arpl
push
ds
insl
jo
sub
mov
repnz
sbb
inc
inc
cmp
pop
and
or
mov
bound
mov
shlb
cltd
pop
ljmp
shr
movsb
loopne
in
cli
mov
xor
dec
add
fisubs
ljmp
ss
movsb
addr16
mov
mov
mov
fldl
xchg
fucomi
bound
mov
hlt
mov
and
jmp
adc
lds
mov
test
xchg
ss
shl
mov
test
jmp
mov
sti
jbe
jl
mov
testl
loopne
icebp
das
xchg
loop
icebp
dec
pushl
jno
lds
jle
xorl
shr
lret
aas
mov
or
jnp
jmp
sbb
mov
sbb
jmp
mov
jl
adc
mov
and
sub
push
cmp
fldl2e
mov
or
test
lcall
js
lds
or
test
cmpsl
push
ss
fidivl
push
subl
inc
nop
jmp
dec
jle
incb
xchg
xchg
jmp
call
int
ret
xchg
and
push
or
jp
push
jmp
aad
movl
nop
aam
mov
push
inc
aam
sub
inc
popf
scas
pushf
jge
testl
inc
call
aas
add
dec
ljmp
cli
sub
push
sbb
push
or
ds
or
and
scas
dec
jecxz
fistl
jmp
and
ljmp
iret
inc
aas
shr
mov
dec
cmp
in
popf
jecxz
push
shrb
sbb
cmp
pop
lret
stc
ds
push
jnp
mov
incl
adc
popf
ja
jns
stc
cmp
cmp
icebp
mov
jg
arpl
sub
lcall
fisttpl
jno
cwtl
shll
dec
inc
cmp
xchg
testb
ljmp
and
sub
stos
stos
xchg
aad
lcall
daa
push
into
xor
ret
inc
mov
jecxz
sbb
sub
lods
clc
cs
adc
call
sbb
xorb
xrelease
gs
push
jmp
mov
push
cltd
jno
or
clc
rolb
sub
in
lods
loope
jp
push
pushl
scas
inc
xchg
or
push
pop
pop
fisttps
test
scas
push
mov
call
push
jae
ljmp
and
insb
sub
sbb
pushl
dec
add
lcall
rcr
jno
addr16
rclb
daa
gs
xchg
push
daa
jb
aam
mov
and
call
push
cmc
cltd
leave
hlt
in
scas
jecxz
repnz
inc
jl
sarl
fdivl
out
clc
lcall
fldl
jbe
push
adc
cmp
cmpsb
push
popf
rcr
out
test
call
shlb
mov
xlat
or
jno
mov
or
in
aad
int3
enter
out
fiaddl
xchg
popa
enter
mov
or
cmp
sar
ljmp
mov
popf
arpl
push
stc
jg
pop
test
testb
in
cmp
lahf
push
mov
jae,pn
mov
call
xchg
push
stos
xchg
icebp
push
std
jg
mov
adc
cld
xor
mov
mov
mov
call
and
sub
adc
xor
adc
lret
adc
push
sti
cmp
ljmp
pushf
mov
rolb
outsl
movsb
lret
je
pop
fcmovb
js
rcrl
sub
mov
mov
lods
ficoml
xchg
jge
sbb
rorb
gs
pop
pop
xor
fisubs
xchg
repz
inc
add
cli
movsb
into
fwait
movsl
dec
aas
mov
out
jl
ljmp
add
adc
pop
xchg
xor
ret
add
cmc
push
sub
add
cmp
xchg
sahf
add
inc
adc
clc
leave
mov
or
sahf
pop
mov
test
jae
enter
incl
rcll
sti
adc
jne
xchg
mov
loop
jb
or
sbb
lock
push
mov
push
orl
or
lcall
mov
faddl
push
xchg
jmp
pop
mov
inc
pushf
jbe
ror
jle
jecxz
xor
out
cmc
incl
cmp
jns
test
stos
or
fiaddl
lcall
sub
out
sbb
insb
pop
stos
cmp
into
insl
push
cltd
add
xor
adc
inc
ljmp
fcoml
mov
sbb
mov
adc
inc
pop
pop
sti
inc
or
pushl
xlat
and
add
mov
sbb
addl
and
cs
loope
adc
or
call
mov
sbb
add
sub
mov
ljmp
sub
adc
movsb
out
fbstp
add
loop
ljmp
xor
or
je
xor
iret
xor
pop
ss
test
jmp
scas
and
jbe
sahf
cmc
sub
sarl
repnz
cli
push
adc
cmc
xor
mull
jle
mov
mov
jmp
jg
add
rclb
dec
pop
xor
popf
push
and
fs
cltd
adc
insb
jns
rclb
dec
add
cld
sbb
dec
mov
or
scas
add
lods
data16
mull
imul
ret
inc
push
jmp
dec
loopne
loop
icebp
pop
dec
aam
jo
aas
cld
cmp
jo
mov
dec
mull
das
scas
stos
aam
sbb
outsb
xchg
xor
cmp
jb
faddl
pushl
les
xchg
jp
shlb
push
dec
sub
sbb
mov
lcall
movsb
jns
cmpsl
int3
rcll
repnz
insl
adc
pushl
xchg
rcrl
pop
jae
jp
fisubrs
inc
stc
jl
or
push
add
decl
daa
fldt
inc
testl
clc
add
push
movsb
jle
xor
pushl
lea
jnp
jbe
xchg
loope
in
sub
nop
pop
mov
rcrl
stos
xchg
scas
ljmp
pushl
mov
jp
or
push
pop
ja
mov
push
das
ljmp
jmp
or
add
or
dec
mov
arpl
and
cmp
inc
loop
jle
lcall
or
call
outsb
out
cmovbe
shrb
xor
mov
push
pop
repz
pop
pop
push
pop
testl
stos
sbbb
incb
inc
cmc
rol
movsl
les
decl
jge
in
cmp
ret
cmpsl
imul
jp
jl
shll
push
adc
lds
subb
daa
nop
stc
cs
std
lahf
sbb
mov
pop
push
ljmp
gs
mov
adc
gs
and
sti
subb
fcomip
adc
cmp
jns
fbld
and
incb
push
decl
pop
stc
test
shl
or
add
sub
iret
xor
sbb
adc
jmp
cmpsb
test
shlb
inc
cmp
dec
xchg
jns
inc
aaa
aas
push
mov
scas
mov
fisttpl
mov
or
pushl
and
outsb
add
adc
addr16
push
mov
fistpl
cmp
mov
stos
sti
pop
xchg
cli
cmpsl
mov
decb
dec
or
mov
pushf
dec
dec
pushl
cmp
fistps
jns
arpl
lcall
nop
out
cmp
lock
incl
rorb
ret
push
popa
lret
mov
mov
push
push
lock
cltd
pop
loop
xchg
pushf
mov
inc
push
popa
fdivl
pop
insb
inc
push
jno
jg
mov
mov
bound
inc
leave
insw
ss
fcoml
cld
incl
pop
test
sbb
xor
incl
push
roll
ret
mov
or
mov
icebp
test
ss
call
cmp
dec
add
into
sub
xchg
fs
pop
mov
jl
mov
lcall
call
cmpsl
push
xchg
sub
mov
dec
test
mov
inc
push
jmp
sahf
arpl
cmp
and
scas
fimuls
outsl
add
push
mov
lret
mov
ljmp
call
dec
out
lcall
add
lods
sub
mov
ret
mov
xchg
movl
std
lret
adc
je
ret
les
idiv
fs
jg
mov
sub
push
gs
sysexit
stos
in
decb
lds
xchg
decl
push
insb
lea
ficoms
popa
aad
ljmp
or
xchg
mov
cmpsb
dec
incl
jmp
inc
fsubrs
mov
inc
jecxz
lahf
pop
push
lods
xchg
decl
ret
or
leave
jb
stos
push
pop
fld
out
mov
xchg
cmp
xchg
pushl
cld
lds
jl
cwtl
iret
call
adc
pop
loopne
xor
loop
push
stos
inc
adc
mov
daa
in
mov
cwtl
push
ljmp
lcall
xchg
add
jne
imul
cmpsl
lods
xlat
mov
outsl
push
fisttps
adc
mov
push
or
call
add
aam
add
lcall
imul
pop
push
or
cmpsl
loopne
lods
hlt
ljmp
pop
cli
call
push
pop
mov
cmp
jl
adc
cmp
and
sar
out
add
stc
lret
cmc
sbb
in
push
lcall
inc
dec
lahf
mov
fwait
dec
stc
popa
clc
sbbl
cmpsl
out
out
or
pushl
mov
test
fldcw
mov
sarb
pop
test
xchg
fwait
ds
and
add
jge
xor
dec
xorb
push
inc
dec
cmpsb
xor
dec
lods
inc
outsl
shll
push
jmp
adc
sbbl
ljmp
xor
xchg
fsts
test
mov
stos
lahf
inc
lock
insb
adc
sub
je
ds
ljmp
jg
jnp
aas
mov
shlb
add
dec
data16
push
in
push
push
int
push
dec
inc
jne
call
js
sub
cmp
xchg
mov
xchg
ljmp
sarl
xchg
jg
mov
mov
jge
adcl
outsb
scas
add
in
por
or
xor
inc
daa
bound
aad
xchg
ficompl
mov
dec
repnz
jg
lahf
repnz
les
les
dec
and
pusha
sbb
testb
fldcw
push
pushl
call
ret
negb
sub
clc
xchg
nop
fcoml
jo
mov
incl
dec
jmp
enter
mov
data16
out
cltd
ficomps
jmp
mov
insb
mov
mov
lret
ss
push
mov
call
xchg
fisttps
xchg
lret
or
mov
lods
sti
inc
push
pop
out
imul
test
pushl
mov
inc
ja
mov
and
jg
mov
mov
dec
jle
jb
and
mov
mov
fs
pop
out
je
pushl
incl
fistpl
sbb
lods
push
lock
xor
repnz
jb
pop
clc
incl
mov
mov
cmp
or
dec
mov
test
mov
ljmp
int3
in
jecxz
pop
clc
pop
lock
mov
lahf
fsubrs
add
pusha
es
add
ret
or
cmpsb
test
jmp
inc
addb
mov
pop
sbb
pop
xlat
sbb
scas
and
ficomps
test
sub
dec
subl
mov
repz
adc
cmpsb
jg
mov
scas
xor
out
xor
ret
les
outsl
movsb
pop
jecxz
or
arpl
es
and
scas
daa
pop
jmp
push
inc
lea
cmp
sub
or
fistps
mov
hlt
xor
lds
setbe
inc
popf
inc
push
in
incb
inc
xor
inc
outsl
ret
out
subl
xor
test
shll
push
mov
adc
decl
adcb
movsb
pop
mov
icebp
std
pop
mov
sub
mov
add
dec
scas
std
mov
cmp
pushf
push
sbb
pop
clc
cmp
mov
scas
mov
push
lods
adc
out
xor
add
pusha
mov
jle
subb
or
inc
scas
enter
dec
jl
inc
cmp
cmp
pop
push
int
int
pop
icebp
dec
outsb
mov
and
pop
add
pushl
std
fistps
xchg
xlat
xorb
dec
insb
es
inc
and
cmp
call
mov
aas
shrb
clc
sbb
movsl
shll
out
fisttpl
xor
loopne
adc
popa
out
sub
or
inc
movsb
pop
sbb
ljmp
pop
imul
dec
push
and
mov
sub
out
mov
fcmovu
fidivrl
dec
mov
mov
in
cld
cmp
les
lock
xor
lcall
test
mov
rcrl
fldl
mov
std
ret
cmp
divb
shl
cld
mov
repnz
lcall
fnstenv
gs
push
js
enter
incl
lock
in
fs
popa
ja
repz
cmp
scas
out
repz
outsl
lahf
inc
outsl
lcall
jecxz
andl
cmp
adc
cmp
inc
sbb
jno
outsl
mov
jle
out
dec
or
pop
movsb
add
imul
incl
cmp
lock
out
push
or
cmp
jne
rcr
cmp
xor
xchg
incl
loopne
inc
pop
cld
lods
rorl
in
pop
imul
xchg
sub
lret
mov
lret
mov
inc
outsl
int3
adc
jb
xchg
mov
adc
xchg
pushl
std
fstpt
xor
lea
push
pop
xchg
xchg
push
jbe
jo
sbb
movsl
push
xchg
sbb
inc
cmpsb
sub
xorb
insl
negl
xor
inc
stos
xchg
or
mov
imul
movsl
jnp
jb
mov
rorl
mov
pop
or
mov
pop
mov
loop
adc
outsb
imul
mov
pop
push
jecxz
mov
sub
pushl
notl
lock
pop
gs
in
adc
add
stos
aam
in
push
aam
add
call
ljmp
lret
outsb
fidivs
arpl
fstps
xchg
adc
ljmp
push
iret
xchg
aaa
in
outsl
rcll
mov
adc
icebp
dec
push
int3
stos
call
add
pop
push
mov
jnp
xor
push
or
mov
jmp
or
fisttps
mov
push
pop
pop
cltd
es
roll
xchg
jecxz
incl
adc
jnp
mov
xchg
cmp
and
sub
mov
ja
sub
mov
fdivp
dec
xchg
loopne
pop
inc
sub
lcall
imull
xor
sti
mov
lods
cmp
add
fildll
or
ret
shll
dec
aas
push
pop
or
cmp
add
push
mov
xorps
xor
lcall
ljmp
xor
dec
jne
mov
bswap
aas
jne
and
notl
clc
aaa
stos
adc
mov
loope
loope
sbb
movl
lret
pop
jecxz
nop
mov
inc
mov
jmp
int3
jp
int
inc
mov
frndint
in
adc
sub
arpl
jno
pop
fistps
lret
cmp
pop
stos
dec
sbb
lock
mov
xchg
dec
shl
cwtl
movsb
scas
lcall
ret
jmp
and
mov
xchg
pop
shrb
sbb
cmp
mov
mov
ja
mov
fbld
shl
and
sahf
dec
jp
pop
jb
mov
testb
mov
jne
pushf
sub
mov
call
xor
jnp
xchg
mov
xlat
subl
mov
testl
dec
jecxz
sbb
ds
xchg
sub
jge
mov
lods
test
js
xor
testb
and
sti
adc
lea
int3
leave
daa
cmp
dec
je
jne
aas
cmp
mov
jmp
jl
add
out
jp
xor
xlat
inc
addr16
adc
xor
inc
xchg
push
xor
stos
mov
pop
cmp
push
and
test
cs
push
xchg
lret
xchg
das
jbe,pt
dec
leave
shll
leave
arpl
sbb
mov
xor
ja
and
mov
rorb
das
inc
cmpsl
inc
roll
cwtl
sub
ss
jbe
or
adc
gs
hlt
mov
cmp
push
insl
push
push
test
std
adc
push
xchg
data16
leave
jb
or
pushl
xchg
test
push
mov
lret
rcll
jg
sub
mulb
mov
dec
jns
push
loope
cmp
add
jp
or
clc
and
fucomip
jns
data16
fists
xor
fbld
dec
and
pop
scas
push
mov
mov
outsl
add
das
pop
lock
dec
xor
scas
cmpsl
rorb
imul
rorl
push
jecxz
xchg
sbb
push
mov
jp,pt
aad
mov
in
push
push
sbb
addr16
aad
ds
fwait
mov
lock
xor
mov
mov
clc
sahf
lcall
inc
subl
pushf
push
push
mov
and
test
pushl
cwtl
push
call
mov
jl
lcall
dec
jo
jle
repnz
sub
out
sub
in
pushl
pop
mov
loop
insl
cmpsl
and
insl
cwtl
shl
test
sbb
xchg
ljmp
cltd
sub
jns
test
out
sbb
mov
pushl
nop
cmp
and
inc
inc
xchg
lcall
xchg
adc
jmp
add
int3
xchg
adc
adc
pushl
mov
mov
fdivrl
pop
and
cmpb
jae
pop
jge
ret
jg
into
push
jb
test
stc
dec
std
xor
sbb
das
mov
mov
adc
inc
pushf
call
sbbl
pushl
jl
repz
inc
lods
push
outsl
jg
mov
repnz
dec
mov
insl
jno
dec
dec
mov
fdiv
mov
mov
test
jl
xor
xchg
mov
into
add
xchg
or
pushl
or
push
mov
xlat
mov
add
adc
xchg
insb
or
sahf
out
dec
shrl
mov
jns
jg
incl
xor
mov
mov
push
repnz
ret
shl
adc
fdivr
call
rolb
int3
jbe
les
pop
sbb
repz
pop
push
scas
dec
testl
jmp
je
stos
or
imul
mov
movsl
fstpt
pop
pop
enter
jmp
mov
fbstp
sbb
in
push
js
arpl
lock
repz
inc
int3
test
inc
fildl
mov
add
cltd
cli
cmpsb
in
mov
mov
dec
in
lcall
stos
mov
mov
xor
dec
jge
sbb
inc
or
jl
fstpt
lock
popa
jl
jne
sub
lods
jno
fwait
lahf
repz
ljmp
inc
dec
mov
and
fisttpl
mov
cmpsb
je
sbb
inc
rcrl
scas
clc
loop
jg
or
add
sarl
cmc
out
inc
sbb
pop
jl
lcall
call
insb
insl
mov
and
xchg
outsb
lret
pop
push
push
or
cmp
call
jle
fistps
je
push
fisttpll
mov
sbb
jb
hlt
int3
cmp
push
mov
mov
mov
ljmp
enter
sub
adc
clc
mov
imul
scas
mov
adc
sbb
scas
clc
pushl
flds
pop
sub
push
mov
imul
aam
ljmp
inc
xchg
jecxz
sbb
or
lcall
mov
adc
xchg
movsb
push
xchg
pop
fcomp
mov
or
jmp
outsb
inc
and
xor
jb
sbb
mov
xor
or
inc
jnp
jae
mov
cli
frstor
ss
pop
push
mov
loop
mul
fidivrs
dec
jae
add
push
mov
incl
sbb
inc
and
in
lods
mov
xor
ja
push
stos
xchg
insl
sti
in
jbe
xor
repz
sub
shlb
sub
orl
scas
sbb
iret
pushl
cmc
lock
fdivl
push
out
cmpsl
or
jle
add
movsb
lods
jne
sub
call
xor
outsb
add
cmp
pop
pop
mov
jmp
es
jb
leave
fdivrp
ljmp
mov
adc
push
sahf
push
pusha
jmp
mov
daa
mov
movsb
ret
push
fisubl
sbb
int
ljmp
and
cmp
mov
xor
mov
cs
xchg
jp
xlat
jp
in
xchg
inc
mov
in
orl
inc
lock
pop
lahf
push
pop
xchg
filds
sub
xlat
mov
lret
sub
incl
shlb
scas
fdivs
imul
in
inc
enter
inc
or
jmp
loop
add
mov
xor
lret
idivl
mov
or
push
inc
jge
xor
incl
add
repnz
out
test
in
sbb
es
xchg
xor
pop
mov
fistl
mov
dec
xor
or
loopne
lcall
stos
inc
mov
popa
jmp
cltd
addb
call
lret
out
pusha
out
outsl
clc
jg
adc
jge
mov
xor
pop
in
bswap
mov
push
jl
mov
ljmp
adc
cwtl
mov
xchg
pop
movsb
jg
push
loopne
icebp
mov
jg
in
mov
mov
insl
test
inc
rclb
sbb
mov
cmp
in
jecxz
cmp
cmp
out
cli
andb
inc
outsl
dec
int
mov
call
cmp
sub
ror
dec
enter
mov
dec
cld
lds
popa
inc
loop
rcrb
in
pushl
xchg
repnz
mov
sub
insl
addr16
outsb
jle
cmp
shrb
je
mov
lahf
lcall
jmp
ficompl
popa
cli
fidivrs
mov
xchg
mov
xchg
xor
lcall
repnz
fmul
ja
mov
rcl
and
cmpsb
in
repnz
loop
ret
and
mov
mov
sahf
sub
arpl
adc
cmp
push
inc
fyl2x
fdivrl
aas
ss
pop
stos
or
xchg
xor
stos
jno
ljmp
shlb
or
ja
outsl
call
ljmp
outsb
fdivr
add
sbb
xchg
out
jne
xchg
out
lods
movsb
imul
into
decl
jmp
out
ret
out
stos
mov
or
std
ss
mov
add
ljmp
in
mov
push
push
mov
roll
aad
sub
je
sbb
and
movsl
dec
jg
inc
decl
cli
mov
stc
or
mov
out
outsl
dec
js
pop
clc
sub
mov
std
fdivs
cwtl
stc
lods
xchg
push
cmc
pop
test
lea
test
xor
inc
cli
jg
mov
pop
xchg
aaa
mov
mov
push
call
in
mov
ja
push
mov
cmp
je
pop
mov
mov
enter
call
sbb
add
jo
push
adcl
cmpsl
and
shlb
jg
in
cmp
jb
mov
jbe
minps
cs
or
sbb
add
jae
add
mov
add
ss
push
decl
adc
testb
cmpsb
aad
xchg
xor
clc
mov
mov
push
or
xor
cmp
jno
test
adc
mulb
adc
add
jge
mov
lret
mov
out
fbld
push
inc
jmp
sahf
inc
test
mov
or
pushl
pop
sbb
jmp
andb
movsl
mov
xchg
orl
loop
cmpsl
and
imul
mov
popf
sbb
lcall
inc
scas
gs
sub
outsl
lock
ljmp
clc
inc
pop
xchg
aam
cmp
repz
outsb
push
and
out
je
xor
call
lea
test
cli
clc
repz
push
hlt
pop
cmp
dec
pop
cs
mov
mov
test
cmp
aas
jns
and
rcr
add
dec
call
adc
scas
dec
fnsave
push
push
cmpsb
imul
ret
scas
cmc
std
xor
add
jp
sub
inc
fildll
sti
lods
sbb
fdivl
sar
call
imul
out
and
xchg
ss
ror
ljmp
jl
jg
lahf
push
xchg
out
or
fwait
les
sete
jg
push
mov
jmp
outsl
xorps
and
mov
mov
or
movsl
cs
cmp
jle
mov
in
scas
shll
pop
cmpb
push
or
ret
incb
ss
call
sbbb
outsl
inc
lret
aaa
cwtl
pop
js
dec
into
and
or
ljmp
je
mov
insl
inc
cmpsb
push
into
jbe
fldl
icebp
nop
sub
dec
pop
and
mov
fs
loope
in
call
stos
add
cli
mov
into
gs
leave
sub
and
mov
sbb
ss
adc
ljmp
jb
jmp
pop
adc
int
dec
inc
xor
ss
js
mov
std
push
int3
bnd
call
es
imul
mov
dec
inc
outsb
jne
inc
mov
out
lcall
aaa
push
aad
mov
int3
fscale
nop
jmp
arpl
insl
ja
inc
xor
cmpsl
into
xchg
es
lcall
pop
pop
add
mov
sub
push
out
rcll
push
jns
ljmp
out
xchg
and
lea
adc
inc
ret
insl
sub
mov
or
call
mov
jecxz
jp
mov
mov
cmpsl
sbb
lock
push
jo
add
ljmp
mov
add
test
movsl
sbb
xor
mov
jmp
pushl
lahf
xor
add
pop
int
or
sbb
dec
aaa
pop
dec
rcrb
gs
loop
insb
inc
and
test
dec
test
push
push
mov
push
insb
adc
out
adc
decl
mov
notl
mov
pop
rcll
push
push
cld
and
adc
rcll
mov
push
inc
mov
cmp
leave
sub
lcall
mov
fidivl
int
sbb
cmpsl
imul
ss
inc
mov
leave
pushl
cld
cmpsb
ja
aas
mov
xchg
es
ljmp
mov
sarb
mov
adc
jmp
jecxz
orb
mov
lea
xchg
call
add
js
inc
and
fcomip
mov
adc
or
shr
je
xchg
mov
jecxz
es
aam
jmp
or
mov
data16
shl
xor
jne
stos
insl
push
fbstp
into
aad
ljmp
pop
sub
ja
or
mov
mov
lock
movsl
inc
mov
or
sbb
lcall
dec
inc
out
dec
rol
leave
push
mov
cmp
sbb
and
popl
jmp
rsqrtps
das
cltd
adc
imul
push
ficompl
iret
clc
das
adc
shl
ss
stc
stos
adc
mov
cmp
fs
pop
ljmp
cmp
decl
push
mov
push
xor
jb
hlt
ljmp
jne
ljmp
clc
outsl
xor
sub
int
mov
popf
inc
adc
mov
or
push
xor
lret
jnp
repz
int
mov
outsb
pop
and
imul
jg
cmp
push
pop
dec
outsl
stos
out
fiadds
rcr
shrl
test
or
mov
out
mov
int
mov
sbb
in
loop
mov
fisttps
add
nop
push
rolb
xorb
test
incl
movmskps
and
sub
sub
lock
pop
sbb
out
shrb
call
mov
push
repnz
outsl
add
jae
dec
jmp
ret
sub
out
loope
add
fldenv
jbe
scas
mov
sbb
fbstp
cli
fwait
loope
mov
les
fidivrs
jmp
pop
push
xor
fcompl
cmp
lcall
popa
imul
scas
cld
call
aam
xor
sbb
dec
fnstenv
mov
pop
mov
call
scas
push
mov
mov
imul
movsb
add
movsl
mov
cmp
pop
shl
sahf
lods
cmp
mov
xor
outsl
lahf
sub
out
and
subl
add
dec
jo
sbb
in
add
cld
mov
push
sub
arpl
xorb
ljmp
mov
std
test
icebp
or
pop
dec
lcall
push
cmc
mov
roll
add
sub
add
sub
cmp
fistps
push
add
sahf
cli
movsl
clc
dec
sub
push
lock
dec
ljmp
lcall
fdiv
mov
pushl
jb
mov
fadds
push
or
popf
lret
out
push
xchg
inc
das
jmp
dec
js
mov
gs
jle
mov
push
fs
jno
decl
cs
ficomps
psubusb
and
adc
pop
pop
push
push
dec
or
pushl
xor
repnz
jg
or
adc
pop
nop
pop
in
push
pop
cmpsl
daa
enter
ljmp
daa
xchg
ffree
or
insl
add
sub
push
and
jmp
dec
push
scas
jnp
insl
je
daa
dec
pushl
enter
sbb
cmp
push
fwait
lahf
scas
insl
and
jns
push
sbbl
int
or
pop
lcall
aaa
jge
loopne
lcall
hlt
inc
xor
outsl
sbb
loopne
cmp
pop
icebp
incl
push
push
or
and
clc
fldenv
mov
and
dec
jne
decl
es
incl
fimull
pop
mov
xlat
jecxz
mov
pop
lods
popa
dec
and
dec
in
clc
dec
cmp
jmp
sbb
lcall
movsb
imul
shrl
push
stos
lock
in
shl
fs
cmp
ret
add
inc
lahf
add
test
call
sbb
js
jl
pop
add
push
les
dec
mov
pand
pushl
sbb
mov
sub
jmp
jnp
aaa
mov
sbb
stos
dec
mov
lcall
jbe
and
or
jg
cmp
jmp
xchg
adc
pop
adc
xchg
lret
jge
aam
jae
test
sub
lret
jbe
jno
jmp
jne
or
neg
testb
and
arpl
fs
incl
push
cs
movsl
out
mov
jbe
or
adc
aad
sub
incl
fsubrl
sub
pop
inc
adc
rorb
lahf
cld
cli
or
call
in
and
pusha
xlat
pop
shrb
adc
dec
jb
xlat
pop
das
mov
jp
popa
decl
inc
stos
lea
in
or
mov
call
shlb
xchg
in
ljmp
push
adc
sahf
jne
jbe
jecxz
loope
xor
mov
movb
or
inc
shlb
aad
negb
outsl
push
dec
pop
ljmp
ljmp
mull
cmp
xchg
loop
push
sub
adc
mov
and
in
inc
call
lahf
pop
mov
scas
les
adc
imul
std
andl
lcall
dec
push
das
inc
xor
es
sbb
fwait
push
xlat
sbb
adc
repnz
mov
jmp
sub
push
cmp
call
sbbl
test
movsl
push
lret
cmp
ljmp
js
les
mov
pop
jge
repz
push
xchg
cmpsb
mov
int3
dec
out
clc
jmp
stc
inc
into
inc
cli
adc
mov
test
cmp
test
xor
mov
dec
adc
jo
ljmp
mov
sbb
incl
sub
std
xchg
imul
jo
mov
fstps
dec
ret
aam
outsb
and
adc
add
jg
aas
adc
movsl
shrb
mov
ljmp
dec
hlt
pushl
daa
int3
sub
ljmp
pop
xorl
pop
sbb
out
inc
cmpsb
movsb
cld
xor
fucom
xchg
shll
ja
push
fs
outsb
dec
cwtl
aam
jbe,pt
lcall
mov
fnstcw
jns
xlat
das
mov
cmp
mov
ficompl
call
mov
pushl
sub
jp
jge
mov
pusha
mov
xchg
sbbb
pushl
pop
pop
repnz
ds
mov
dec
dec
pop
imul
mov
dec
cmp
movsb
out
pop
imul
xchg
shlb
sub
add
mov
mov
mov
jmp
movsl
add
push
clc
mov
jb
mov
lahf
jp
mov
jp
std
sti
std
jg
jmp
push
and
je
fsub
daa
dec
mov
mov
test
adc
jmp
fidivl
xorl
jnp
mov
pop
sub
mov
fmull
cmp
loope
mov
dec
iret
test
mov
pop
mov
mov
clc
sub
shr
pop
push
hlt
std
pop
call
aam
mov
or
cmp
jns
lea
mov
xchg
scas
dec
dec
rclb
lcall
mov
popf
jo
xchg
sub
scas
xor
stos
adc
cmpsl
aad
decl
popa
sub
fidivrl
xor
cmpsb
mov
ret
xor
test
out
cld
jg
movsl
jecxz
lds
xchg
cmpsb
xchg
ja
fdivrl
lock
cli
hlt
jg
movsb
add
jg
sub
in
ds
lds
incl
xchg
cwtl
push
cmc
call
lahf
rclb
sub
int
addb
cmp
mov
cltd
sub
cmp
sti
nop
sbb
push
pop
pop
movq
and
decl
pop
add
jns
adc
mov
adc
sub
lds
cld
repz
das
sbb
mov
cmp
packsswb
sbb
add
ljmp
pushl
cwtl
inc
sahf
dec
popf
inc
inc
dec
dec
jg
ljmp
stos
lcall
jge
clc
divl
dec
call
and
push
mov
out
aaa
lock
outsl
mov
dec
and
sub
cltd
adc
sbb
icebp
dec
in
stos
jno
popa
insb
leave
mov
cltd
push
mov
decl
pop
push
adc
popa
cwtl
shl
repz
cmpl
jne
jp
mov
lcall
push
adc
cmp
cmpsl
loope,pn
pandn
cmp
decl
pop
jbe
sub
xchg
inc
push
call
cmp
pop
cmc
cwtl
dec
cld
mov
and
lret
xor
rcrb
hlt
filds
lcall
xchg
jb
and
sbb
pushf
movsl
cmp
cmp
adc
cmp
ljmp
mov
sbb
sti
fs
push
pop
addb
sbb
sbb
xchg
rclb
jbe
test
mul
jg
jmp
jb
pop
sub
xor
das
adc
jns
ret
jns
clc
lcall
sub
outsl
lcall
stc
mov
xor
fstl
xor
xor
adc
clc
xchg
xchg
incl
in
inc
nop
cmp
out
int3
sbb
lods
adcb
shrb
scas
pusha
jl
ljmp
loop
push
aad
add
adc
popf
adc
je
xchg
dec
add
mov
popf
and
out
clc
cmp
xlat
lock
mov
adcb
dec
sub
mov
pop
cmpsl
jmp
mov
ret
es
inc
jecxz
and
or
rorb
jns
popa
fdivr
sti
cmp
add
rolb
cmp
mov
mov
fldln2
leave
xchg
pop
sarb
les
lcall
lds
repz
mov
xchg
and
dec
pop
sti
xchg
stc
mov
push
sarl
sbb
idivb
arpl
jne
jne
jle
mov
popf
push
mov
adc
jle
lock
jg
cmp
mov
in
ret
imul
cltd
push
push
mov
push
js
xchg
shlb
stc
loope
stos
dec
or
cmp
lea
enter
std
cli
push
pusha
inc
mov
lcall
mov
inc
aad
adc
notb
dec
add
test
shlb
xchg
jmp
in
inc
lret
lahf
jo
dec
imul
jae
xchg
hlt
sbb
test
mov
xor
lcall
fisubrl
adc
jmp
hlt
xor
sub
push
cmp
call
cli
daa
pop
xchg
imul
pop
dec
cmp
or
jmp
adc
push
jmp
inc
cmp
lock
cs
cmpsb
mov
dec
out
mov
mov
push
test
push
sbb
xor
sbb
dec
xchg
repz
sbb
movsl
jbe
decl
inc
aas
cmp
hlt
add
dec
sarl
out
cmpsb
mov
jbe
ret
js
add
mov
clc
inc
pop
scas
les
sbbb
out
push
out
mov
call
out
out
xor
fdivrl
sahf
mov
loopne
xor
mov
pushl
sub
pop
pop
mov
jnp
movsl
aas
stc
dec
and
xorb
cmpsl
jo
push
and
cmp
dec
out
nop
ret
sub
push
ss
int3
mov
filds
outsb
inc
movsl
ficomps
add
push
inc
jns
enter
ret
test
mov
hlt
fists
jmp
icebp
sar
sahf
cmp
dec
cmp
lcall
mov
xchg
cld
test
lds
dec
fcomip
jmp
fdivr
lods
cmpsl
cmp
push
loopne
int3
fsubrl
ss
pop
jbe
ljmp
xchg
jbe
mov
adc
mov
jnp
jo
outsl
insb
jmp
inc
add
popf
cmpsb
call
sbb
xlat
insl
sbb
xor
fdivl
push
mov
pop
dec
lahf
out
lea
mov
sbb
xor
scas
jmp
loopne
data16
push
pop
mov
mov
and
pop
pushf
adc
sbb
mov
cmp
adc
xor
pushl
add
mov
or
push
pop
xchg
ret
push
xor
flds
loop
pushl
xor
or
and
inc
xchg
add
lahf
dec
dec
addr16
mov
cld
pop
loopne
loop
cmp
jle
push
sahf
push
test
mov
sub
add
incl
out
les
lods
fisubl
mov
in
adc
sbb
cmc
call
out
cmp
adc
lds
mov
fs
mov
incl
dec
je
ljmp
leave
shll
lea
iret
int
movsb
mov
mov
pop
std
decl
push
mov
xor
leave
mov
or
mov
inc
lods
push
mov
lcall
in
xor
call
stos
and
jns
sub
dec
das
pop
arpl
aam
std
icebp
cmp
lcall
jecxz
jecxz
or
aam
loop
mov
cmp
pop
dec
cmp
in
mov
cmpb
xchg
out
rcrb
imul
and
sub
popf
fiaddl
pop
out
clc
incl
sahf
scas
mov
push
lcall
fadds
mov
mov
lods
xor
fists
push
jp
push
mov
cmp
incl
jp
jge
pusha
movsl
xchg
cmc
test
push
sbb
pop
aaa
inc
test
fcomps
add
ds
cld
clc
leave
or
out
jns
mov
mov
or
rcll
jns
xor
incl
jle
mov
rolb
push
cmp
pop
xor
or
ja
mov
nop
rcr
adc
inc
mov
rorl
jl
out
les
andl
mov
stos
fists
xchg
inc
nop
dec
cmp
pop
incl
xor
pusha
mov
shll
dec
pop
imul
xor
mov
std
jl
inc
in
cmp
lea
push
sub
pop
push
repz
jmp
popf
sar
fbld
loopne
mov
inc
pop
aas
inc
addl
cmc
fs
decl
in
pop
insb
std
test
jb
es
ja
rcrl
enter
ficomps
imulb
int3
and
jbe
inc
outsb
mov
leave
ret
sahf
cmp
adcb
cmp
decl
shlb
mov
xor
loop
imul
jp
fdivl
lcall
fs
sbb
lret
pop
outsb
cmp
add
les
daa
sub
cltd
pop
lcall
in
jo
dec
stos
stos
insl
fstps
std
lret
dec
out
sbb
dec
and
in
mov
rcrb
incl
popa
inc
xchg
pop
add
push
xchg
mov
sbb
decl
xor
push
fidivs
adc
nop
stos
aaa
xchg
in
sbb
call
inc
cmp
test
push
mov
mov
push
mov
ret
add
adc
lock
mov
mov
add
jbe
inc
inc
xor
inc
loope
fldt
mov
subl
daa
or
mov
test
mov
or
add
adc
addr16
xchg
mov
mov
mov
or
loop
or
or
xor
cwtl
je
mov
xchg
pop
adc
cmc
ljmp
fmull
jns
xchg
push
addr16
stos
repz
mov
leave
pusha
or
ss
xor
dec
sub
pop
lock
pushl
dec
inc
ret
sub
push
scas
inc
shlb
push
cwtl
inc
sti
ret
xor
rcl
call
rorl
pop
rcrb
xor
insl
lods
ret
mov
sahf
std
jg
sti
xchg
out
int3
insb
cld
mov
adc
outsl
mov
pop
pushf
sub
aas
cmp
js
jg
and
jg
imul
bt
jg
ljmp
fldt
cmp
xor
cmp
repnz
bound
repz
incl
adc
mov
je
ret
mov
adc
nop
gs
cmp
jg
cwtl
ljmp
in
arpl
sbb
dec
repnz
fnstsw
test
aad
call
loop
push
aad
repnz
stc
mov
int
mov
mov
popf
mov
fnstenv
decl
cmp
fisubl
pop
push
dec
cmc
es
mov
adc
icebp
mov
leave
ret
mov
inc
cmp
cs
enter
inc
lock
pop
mov
and
pop
push
sub
ficoms
clc
adc
out
dec
pop
pushf
pop
mov
xor
push
mov
mov
std
jmp
xchg
mov
and
orb
in
lea
mov
or
xchg
aas
out
cli
call
cli
ror
mov
fists
sbb
or
insb
push
add
xchg
lret
rclb
pop
movsb
and
mov
cmp
scas
ss
xor
sahf
icebp
stc
pushf
push
repnz
repz
xchg
out
mov
movsl
testl
fistl
mov
add
arpl
call
popf
mov
cmpsb
cmp
lds
adc
notb
xchg
pop
and
sbb
push
add
loop
dec
jmp
cltd
push
ja
test
insb
fldcw
insb
mov
scas
pop
xchg
dec
add
or
fsubrl
xor
cli
or
ret
ljmp
insl
jmp
xlat
dec
push
cmc
dec
sub
jecxz
mov
jae
lcall
mov
jns
sbb
das
lea
pop
in
and
inc
mov
inc
jmp
mov
shlb
and
pushf
jbe
fwait
popa
icebp
hlt
lcall
aad
daa
fnstcw
jns
mov
stc
mov
xchg
mov
sbb
rorb
scas
rolb
cld
pushl
push
aaa
jecxz
test
and
nop
cmp
fs
adc
jg
ljmp
fmull
mov
add
lret
xchg
mov
incl
cwtl
mov
xrelease
fidivs
xchg
test
xor
faddl
or
ljmp
dec
adc
aaa
lods
test
loop
mov
pop
jne
fisubs
incl
inc
mov
and
mov
cltd
pusha
int3
cs
inc
cld
addr16
cmp
jge
xchg
icebp
decl
inc
addr16
test
out
and
push
mov
mov
push
sti
incl
int3
rol
and
lock
xor
ja
mov
jno
dec
leave
rcrb
call
lahf
sub
scas
cmp
outsb
sub
fcoms
jo
test
lahf
adc
adcl
sub
push
pop
insl
xchg
push
shlb
xor
cltd
push
dec
mov
orb
das
lods
das
add
mov
lea
roll
aad
push
fucom
push
outsl
sub
push
or
or
cld
xorb
xlat
mov
sbb
nop
pushl
std
in
mov
mov
dec
xor
or
mov
cmc
testb
aaa
ljmp
adc
aaa
sub
xchg
icebp
lods
and
stos
mov
test
ss
lahf
mov
push
in
and
popf
mov
cs
aam
les
ret
ret
xchg
insb
js
insl
stos
sbb
dec
xor
dec
cld
movl
movsb
pushf
mov
mov
or
cmp
lahf
test
bound
ds
int3
pop
mov
leave
pop
dec
popa
out
push
jle
push
dec
fbld
imul
push
sub
ds
lcall
jmp
ja
mov
fadds
fisttps
test
or
bound
fidivl
adc
jg
jmp
negb
mov
sub
inc
cwtl
cmc
cmpsb
or
stos
xor
lcall
mov
ljmp
mov
or
pop
cmp
in
call
cmp
jecxz,pn
cwtl
jle
adc
inc
pop
pop
push
imul
xchg
mov
test
xlat
pop
cmc
push
cld
clc
insb
jp
push
push
or
out
sub
cmp
jb
add
pop
jnp
xor
xchg
hlt
xchg
repnz
mov
fiaddl
rol
mov
in
jmp
leave
mov
test
test
das
push
sti
pop
jnp
pusha
mov
cli
xorb
xchg
add
cmp
mov
mov
lahf
push
mov
and
lock
movsb
sbb
push
loope
push
test
jmp
ljmp
mov
cmp
inc
ds
movsb
push
cmp
dec
movsl
sub
rcl
clc
jb
jmp
pop
out
rdpmc
or
cli
mov
pushf
leave
push
cmpsb
in
and
xor
jmp
aaa
inc
sub
or
fisubs
out
fisubrs
dec
cmpsb
cwtl
fiadds
mov
call
ret
scas
dec
das
jmp
repnz
insb
cltd
mov
mov
repnz
aaa
push
push
data16
mov
test
and
call
add
imul
out
into
dec
es
aam
xchg
jo
xor
and
push
in
add
cwtl
mov
mov
lcall
dec
into
addb
aam
push
xchg
lcall
fdivs
ja
push
dec
cmp
dec
sub
and
inc
repnz
leave
call
sbb
mov
call
insb
lods
ja
cmp
test
outsl
push
je
in
iret
fsubs
pop
sub
xrelease
and
mov
scas
mov
fiadds
outsb
stc
repnz
pop
mov
repnz
int
jg
sbbb
jmp
inc
inc
mov
cmpsb
sub
mov
shll
add
push
rcll
sar
fstpl
sub
es
jg
ljmp
mov
mov
aaa
sub
shll
sti
call
ljmp
sbb
mov
pop
inc
js
loope
jg
inc
shlb
call
xchg
dec
jo
pop
out
jne
jle
ss
cmp
aad
clc
mov
dec
mov
call
or
stos
add
cwtl
das
fmull
out
stc
mov
stos
add
sti
sub
js
lcall
cmp
daa
xorb
leave
jbe
icebp
jae
add
sbb
add
jns
mov
loopne
pusha
adc
sub
push
arpl
inc
mov
jl
je
pushf
or
enter
jp
sahf
hlt
movsl
jns
repnz
jmp
xlat
push
push
call
int3
subl
stos
into
iret
sub
pop
data16
int
out
lea
mov
push
xchg
xchg
adc
rolb
mov
call
dec
cmpsb
adc
mov
in
mov
arpl
dec
lcall
stos
lahf
mov
or
push
ljmp
pop
sub
sbb
dec
lret
push
mov
clc
jno
fadd
es
inc
inc
xlat
lret
cmp
cld
shrl
add
xchg
sub
xor
inc
jle
xlat
xchg
insl
das
or
mov
aas
js
call
and
jno
decl
push
rcr
cmp
push
scas
mov
out
xchg
fwait
aaa
loop
jo
lods
popf
and
call
sar
ljmp
nop
sbb
scas
cld
fsubl
add
add
push
pusha
rorl
xor
fidivl
inc
inc
ljmp
add
jnp
jnp
pop
jno
div
mov
add
shrl
ljmp
call
lea
fwait
cmc
das
mov
enter
jmp
jmp
imul
adc
out
xchg
das
mov
push
ja
in
mov
mov
xchg
adc
xor
sub
call
jbe
jge
cmp
lods
mov
jl
xchg
pop
mov
fcoms
mov
xlat
arpl
push
mov
incl
mov
enter
loope
mov
jo
lea
xorb
ret
jg
outsb
rclb
cmpsb
xchg
pop
ds
iret
push
call
xchg
xor
daa
je
sbb
sbbb
lock
xchg
xlat
lret
aas
lods
inc
scas
imul
pushl
xchg
cwtl
daa
pop
mov
cmpsb
int3
pop
jae
out
jg
pop
or
sbb
ljmp
ljmp
ja
or
cmp
jb
lahf
js
shll
fdivrl
xor
sbb
and
mov
imulb
sub
pop
mov
out
pop
add
jge
call
inc
outsb
repnz
and
adc
lcall
push
nop
icebp
je
or
daa
scas
dec
dec
sbb
fists
inc
movsl
jb
outsb
incl
xchg
lcall
xchg
je
cmp
std
push
imul
inc
inc
push
sbb
cmp
jo
mov
add
mov
sub
adc
data16
add
xchg
idiv
ljmp
sbb
mov
inc
mov
lock
cmpsb
push
xchg
jp
imul
repnz
fwait
push
mul
mov
adc
addr16
lret
sub
fdivs
movsl
jmp
ret
call
cwtl
pop
dec
cs
fidivrl
sbb
cmp
cmpsl
sbb
cmp
cltd
adc
push
notb
jecxz
add
decl
adc
in
popf
rep
mov
cmp
in
and
nop
jp
arpl
and
and
cmp
bound
stos
dec
rorb
and
xlat
clc
ljmp
pop
mov
test
cmpsb
mov
out
push
sub
mov
mov
sbb
ds
xor
xchg
int
repnz
ja
out
ficompl
push
or
sahf
sbb
bswap
sub
adc
or
jno
and
sar
mov
add
jb
sub
xor
aad
ss
jmp
jp
xchg
rcrl
pushf
cmpsl
gs
jecxz
mov
pop
adc
pop
aad
mov
ljmp
clc
in
ret
nop
push
mov
jb
adc
daa
inc
xchg
lcall
call
dec
aam
enter
mov
or
mov
rol
xchg
adc
orl
es
and
in
mov
call
je
push
out
lock
and
pop
adc
add
mov
incl
mov
int3
sbbb
push
fdivrs
jae
movsb
lret
jo
lret
or
xor
adc
into
inc
adc
jg
push
nop
int
scas
decb
loop
push
jg
sub
cmp
push
sahf
mov
push
xchg
std
gs
dec
iret
sar
push
ret
cs
inc
or
xor
test
fwait
divl
ret
ja
xchg
mov
fsts
jge
shr
or
fcomip
stos
call
cmpsl
mov
dec
jge
sub
and
ds
and
decl
insl
outsb
icebp
and
das
in
fcomps
int3
ds
dec
xchg
jl
mov
sub
fsubrl
add
sub
ljmp
lcall
push
cwtl
popa
xlat
dec
ljmp
pop
push
lret
mov
cs
jle
add
fmuls
cmp
cmp
push
mov
dec
jmp
outsl
jbe
xor
sub
adc
and
xchg
gs
stos
xor
decl
lock
add
xrelease
inc
imul
in
lds
arpl
ljmp
cmp
pop
repz
incl
mov
mov
jae
dec
pop
jnp
icebp
cltd
test
aaa
imul
mov
jmp
loop
jns
outsb
scas
jbe
xor
cmovle
cs
int3
dec
cmp
pushl
insb
cltd
dec
aas
cmp
xchg
pop
adc
sahf
adc
fdivrp
add
dec
decl
sti
inc
movsl
push
stos
jns
push
js
push
int3
enter
bound
pop
pop
pop
ret
pushl
gs
je
adc
mov
or
lret
sbb
shl
inc
xor
mov
or
fdivs
fcmovbe
jmp
push
mov
outsb
mov
mov
mov
pop
add
aad
push
and
andl
in
cmpsb
fcmovbe
stos
in
mov
pop
pushf
std
mov
push
sub
cmp
push
repnz
sub
mov
mov
fnstenv
test
loope
add
jmp
push
pop
xchg
jge
movsb
mov
push
data16
mov
cmpsb
cmp
xchg
clc
mov
cmp
lcall
fistps
mov
std
and
or
stos
scas
pavgb
adc
push
adc
jle
pop
jl
outsb
and
mov
cmpsb
jae
ret
mov
jl
ja
imul
dec
shll
ljmp
ja
test
mov
inc
add
insl
push
pop
loop
push
js
movsl
push
mov
lcall
test
sub
test
icebp
push
fimuls
fidivl
ja
pop
ljmp
mov
mov
imul
push
jmp
and
cli
faddl
dec
leave
incl
fstl
faddl
dec
addr16
lods
fcmovne
mov
adc
pushl
mov
pusha
and
xchg
repz
cmc
mov
loop
inc
out
mov
jle
lcall
xor
sub
aaa
xchg
imul
cmc
outsl
ret
scas
insl
push
out
cmp
mov
lcall
xchg
dec
cmp
lret
into
xchg
xor
idivb
mov
call
jmp
rcl
sahf
and
xchg
popf
cmp
sahf
jmp
subl
cli
inc
mov
cs
enter
inc
xchg
lods
int
cmp
inc
xchg
nop
push
xor
jmp
das
in
push
xor
xor
cmpl
pop
pushf
mov
xchg
rolb
sbb
dec
aas
adc
fsub
pop
aam
ror
sbb
dec
lds
xor
mov
int3
jp
rcrb
mov
pop
sub
sub
and
shrw
insl
scas
xor
add
ficoms
mov
mov
pop
dec
mov
popa
pop
adc
icebp
xchg
sbb
dec
testb
sahf
mov
imul
jg
xchg
ret
pushf
pushf
pop
dec
and
and
sub
popf
mov
ja
cmp
mov
xchg
call
xor
sub
ret
sub
pop
mov
fwait
add
out
ljmp
add
cmc
aad
or
xchg
in
xchg
jns
jle
xchg
xchg
incl
sub
inc
cmp
cmp
xchg
cmp
inc
dec
xor
cmpsl
nop
adc
cs
push
inc
mull
lcall
stos
jb
xchg
cmpsb
mov
pop
sbb
lret
mov
lret
popa
and
xor
ficoms
repnz
mov
adc
mov
psrad
pop
cmp
dec
or
lcall
enter
sbb
test
call
sti
inc
daa
aam
ret
std
xor
incl
out
je
push
aam
gs
mov
inc
popa
incl
fdivrl
cmp
es
aam
cwtl
mov
fcompl
xlat
sbb
mov
xchg
negb
sbb
or
ljmp
pop
mov
mov
stos
sbb
lds
push
dec
aaa
hlt
out
iret
jmp
ret
sub
mov
inc
xchg
xchg
xor
lods
fwait
lock
lock
mov
cld
call
aad
cmc
mov
push
xor
pop
mov
stos
jg
stos
sar
subl
add
daa
rolb
pop
jns
sahf
add
jp
addl
fmull
sub
mov
push
jo
cmp
cmp
mov
test
adc
sti
out
sub
add
xor
std
idivb
insl
cld
mov
mov
push
insl
inc
jp
fcompl
sbb
das
test
xor
mov
inc
enter
in
nop
xor
ja
repnz
lock
call
inc
outsl
cmp
ret
lods
lcall
out
cmc
iret
or
mov
mov
fwait
jmp
cs
inc
iret
jl
fiaddl
pop
mov
adc
sub
ret
sbb
push
dec
mov
aad
es
mov
add
jge
repz
in
ds
adc
xchg
ljmp
stos
jno
lds
jno
mov
jmp
lods
cld
mov
ljmp
xchg
and
lds
inc
pop
pop
dec
in
mov
in
or
aaa
lods
mov
add
iret
xor
inc
rcrb
call
mov
push
jle
xchg
xchg
stc
dec
dec
ficoml
insl
jno
nop
out
sbb
jno
sub
incl
mov
xor
cmp
pop
flds
andb
cltd
dec
adc
pop
aaa
std
ljmp
cmp
xor
xchg
and
outsl
decb
jbe
ljmp
pop
jne
sbb
movsl
add
arpl
repnz
inc
xchg
hlt
outsl
lcall
cld
jmp
xor
shrl
in
xchg
ja
push
cmpsb
rol
test
mov
cli
mov
lds
inc
arpl
adc
mov
cltd
mov
jb
mov
adc
push
jae
rorb
dec
addb
cmp
lods
jmp
sub
pusha
popf
fsave
cmp
fs
dec
sub
ja
sub
adc
movzbl
test
movsl
add
test
fwait
add
mov
fcoml
push
movsb
mov
std
ret
inc
daa
ds
xlat
push
decl
pop
sub
out
jne
sbb
jle
dec
imul
dec
or
adc
stos
lcall
fistps
leave
or
sbb
popf
adc
cmp
jle
pop
cmp
divl
ds
jge
jb
dec
push
jns
into
add
sub
sub
dec
int
fwait
aas
mov
xchg
nop
xchg
jle
in
adc
lret
xor
jl
mov
dec
fists
loopne
mov
in
fwait
popf
mov
out
cmpsb
dec
and
pop
push
shl
out
jl
insl
xchg
arpl
add
enter
and
add
jmp
add
jle
jmp
adc
outsl
mov
mov
and
ljmp
dec
inc
lea
in
fstl
and
and
arpl
xor
xchg
loop
adc
call
xchg
test
scas
push
jg
cmp
add
rcll
sub
adc
mov
ja
call
in
in
rclb
cld
mov
ret
test
adc
out
xchg
jo
std
mov
psrld
push
fstpl
lret
subl
cmp
lods
insb
xor
inc
mov
je
mov
rcrl
dec
lds
inc
test
testl
push
insb
loopne
add
outsl
xor
inc
push
sbb
addr16
lcall
and
pusha
fwait
push
flds
cmp
push
pop
call
insl
ljmp
repnz
subl
xchg
insb
std
int
sub
jge
stos
cmc
imul
pushl
repnz
rcrb
movsl
jp
xchg
push
or
pop
xchg
decb
ljmp
outsb
jmp
int
int3
decl
push
leave
fidivrs
and
flds
mov
loope
adc
fldl
test
or
cmp
jecxz
add
aad
cmpsl
and
jecxz
aaa
std
mov
add
cltd
push
enter
fs
pop
mov
mov
inc
push
fcoml
nop
add
push
xchg
mov
cwtl
sub
mov
pop
lea
popf
cli
jne
lcall
sub
jg
adc
and
jecxz
mov
cmpsb
jge
fisttpll
jmp
adc
dec
lcall
scas
xchg
cmc
push
leave
imul
cmp
sbb
cmp
shl
push
inc
mov
ljmp
clc
sub
or
cli
or
or
mov
popf
popf
in
pop
xchg
jmp
push
das
fmuls
inc
mov
mov
cmc
orb
mov
and
adc
push
sahf
add
mov
push
nop
mov
jne
sub
aaa
xor
mov
faddp
stos
fsub
scas
not
out
aaa
mov
jl
ljmp
push
shrl
in
sahf
out
add
lods
or
mov
ss
adc
iret
adc
decl
mov
mov
out
fistps
inc
popf
fisubrl
sbb
aas
inc
nop
xor
jmp
stc
jmp
pop
in
and
rcr
bound
add
mov
lods
mov
mov
sub
in
xchg
in
cmpsb
cmc
push
pusha
loope
xor
add
pop
loop
ss
in
fnstsw
add
pop
jns
in
call
decl
adc
addr16
stos
cmp
and
shrb
adc
pushf
cmpsb
in
nop
mov
mov
add
sub
test
and
and
jmp
scas
lcall
mov
dec
cmp
les
int
inc
aam
pop
sti
mov
insl
jmp
sar
lcall
sar
out
test
pop
fs
pop
lds
xchg
push
shlb
js
test
lods
incl
cld
jg
xchg
outsl
jl
imul
out
int
xchg
popa
ret
ljmp
loope
cmc
cwtl
in
lock
pushf
int
xor
shlb
and
clc
cli
incl
add
sub
cmp
mov
repnz
jl,pn
sub
dec
outsl
stos
adc
sbb
call
cmp
or
mov
scas
inc
loope
hlt
insb
xchg
jo
jg,pt
add
out
fs
repnz
lret
xchg
sbb
outsl
cmp
incl
std
mov
ret
int
jp
je
lret
and
xor
aaa
decl
push
lea
std
sbb
mov
xor
mov
push
mov
incl
shr
aaa
mov
leave
test
and
les
pushl
test
adc
imul
in
lahf
jge
aad
push
sti
ficompl
movsl
imul
push
sub
jl
or
dec
push
repnz
xchg
push
and
stos
jecxz
mov
cmc
test
xor
into
insb
cli
lock
cmpb
cltd
cmp
inc
add
push
and
xor
push
loop
inc
mov
dec
xchg
cli
jne
ret
jmp
ret
mov
cmp
out
adc
rcrl
sub
fwait
jmp
xchg
mov
idivl
xor
repz
fisubrs
mov
addr16
xorl
sbb
sbb
jge
adc
mov
push
sub
imul
dec
push
pop
inc
in
out
ljmp
xor
pop
test
mov
mov
pop
pop
push
call
jbe
cli
xor
sahf
mov
adc
xchg
in
push
mov
mov
push
add
dec
call
push
mov
mov
push
aaa
lahf
test
mov
test
in
dec
or
lcall
push
adc
push
ljmp
mov
push
push
fcmovne
inc
lock
and
inc
xor
xor
fidivrs
or
notb
lcall
add
cmpsb
js
sbb
rorb
pushl
cld
jg
xchg
mov
adc
in
xor
xor
push
mov
xlat
lcall
jns
fnsave
fs
or
imul
data16
mov
sub
xor
pop
aam
jg
inc
ficoml
sbb
enter
lods
int
adc
subl
push
shlb
pop
pop
aaa
cmc
jecxz
jmp
stc
adc
push
push
pop
or
sub
sub
sub
mov
jmp
and
in
xor
cmp
nop
or
sub
dec
jmp
sbb
ljmp
clc
sub
mov
loope
xor
ljmp
enter
dec
outsb
cmp
xchg
xorl
mov
push
pop
pop
loop
dec
cmp
out
mov
pop
push
push
mov
adc
pusha
repz
repz
mov
out
pushf
xor
mov
clc
xchg
xor
ljmp
bound
stos
bound
xor
js
adc
jg
dec
mov
or
je
adc
andl
pop
jnp
xchg
clc
xlat
push
dec
jmp
repz
mov
or
jne
in
inc
sub
lcall
pusha
push
mov
rcr
mov
add
pop
pop
jno
sbb
jns
dec
imul
cltd
movsb
out
mov
psrld
and
push
mov
fsubs
adc
pushl
mov
mov
cltd
idiv
mov
loop
rcr
sar
lcall
scas
and
pop
sahf
or
insb
sti
in
dec
sbbl
int3
adc
hlt
outsb
into
leave
fistpll
fbld
mov
or
dec
mov
jg
orb
ja
scas
push
sbb
aam
cld
pushl
clc
mov
xchg
aad
sbb
lret
std
cli
gs
out
lcall
cmp
cltd
sub
mov
xchg
shlb
test
dec
jmp
sub
ss
stos
jecxz
shrb
add
sar
mov
dec
xchg
pushl
int
add
adc
test
out
add
jge
ljmp
mov
out
add
ja
jnp
out
cmpsb
or
mov
push
push
mov
dec
sub
mov
mov
popf
jp
orb
xchg
pop
lock
ljmp
mov
aam
inc
mov
in
test
sbb
dec
es
add
add
sbb
incl
mov
push
pushw
mov
rcl
lahf
adc
fdivs
xchg
incl
pop
xchg
fbstp
push
dec
jecxz
mov
mov
add
push
mov
inc
icebp
incl
pop
iret
fsubrs
sbb
sbb
xor
adc
mov
lcall
movb
pusha
adc
xchg
xchg
xchg
in
mov
insl
mov
push
sub
std
test
outsl
rcll
std
mov
or
std
xor
lcall
roll
mov
jmp
les
lahf
stos
stos
cmpsl
mov
push
mov
daa
add
xchg
repnz
inc
xchg
aas
incl
fcoms
daa
mov
jp
mov
dec
dec
or
mov
or
test
mov
imul
mov
fwait
loopne
call
mov
add
pop
mov
and
lcall
call
xor
stos
scas
push
loope
shl
shlb
popa
mov
cs
pushl
sub
mov
sbb
xchg
push
adc
mov
pop
mov
sbb
test
mov
sub
sbb
insl
std
hlt
into
inc
ss
ljmp
scas
xchg
lea
loope
and
xor
dec
lcall
test
fsubs
and
psllq
mov
shll
cmpb
icebp
xlat
outsl
adc
pop
adc
sub
pushf
xor
jecxz
jmp
sbb
scas
cli
inc
in
loop
sti
imul
mov
subl
incl
leave
cmpsb
dec
mov
fs
cltd
and
xlat
xor
idivl
mov
jl
or
xchg
stos
push
push
dec
fwait
cs
ss
pop
jb
jmp
fsts
dec
out
pop
add
mov
out
cli
cmp
mov
jno
outsb
aaa
mov
mov
jns
inc
repnz
fwait
sub
stc
and
test
js
aad
je
or
jo
cmp
push
test
outsb
xlat
fbld
xlat
int
mov
jmp
sbb
mov
iret
xor
or
scas
test
jle
cmp
lock
mov
mov
dec
sub
lret
out
mov
push
lcall
mov
rcrl
ljmp
in
das
test
add
add
mov
decl
push
cli
dec
sar
cmp
leave
jae
or
or
xor
jp
outsb
inc
dec
mov
mov
filds
jecxz
push
in
sub
sahf
js
loop
xchg
xchg
lock
jmp
cmp
cltd
xchg
sbb
insl
add
mov
fcomi
dec
out
push
aad
in
mov
pop
xchg
cmp
fnstenv
lods
dec
fidivs
mov
jle
repz
ret
mov
aaa
adc
mov
jge
and
fisttps
loope
inc
mov
mov
int3
mov
outsl
push
ljmp
push
lods
xor
lods
je
jp
mov
cmpsl
mov
mov
bound
pop
cmp
sub
and
xchg
sub
movsl
mov
add
imull
pop
xor
jb
test
mov
mov
es
mov
mov
adc
inc
and
push
adc
push
cmpsb
and
mov
mov
das
hlt
add
nop
bound
mov
push
lods
add
into
jae
outsl
clc
mov
pusha
cld
or
mov
mov
and
incl
test
dec
xchg
pushf
mov
xchg
out
xchg
cli
nop
pop
fwait
aad
xchg
cmc
adc
or
clc
ljmp
jmp
jbe
push
jp
mov
or
sbb
mov
sub
cmp
push
mov
pop
fsub
outsl
out
out
loop
xchg
pushl
push
sbb
mov
iret
scas
pop
jb
aam
imul
ljmp
push
sbb
xchg
addl
iret
call
jmp
xor
lods
xchg
ss
ss
dec
pop
aaa
cmp
test
or
inc
rcrb
ret
leave
outsl
pushf
andb
mov
ljmp
clc
test
pop
push
data16
dec
and
scas
inc
shlb
out
dec
out
sub
lds
cli
jmp
inc
fsubrl
and
sbb
shll
jg
and
or
xchg
mov
xor
nop
xchg
and
scas
jbe
pop
or
pusha
pop
dec
adc
decl
in
or
loop
xchg
mov
mov
jg
scas
cmp
sub
movsl
sbb
enter
test
test
leave
jmp
rcr
clc
jg
sub
mov
jno
popf
pop
push
les
add
add
jmp
jl
or
mov
cmp
dec
mov
frstor
pop
insl
lcall
xor
incl
jne
sub
dec
enter
out
int3
mov
add
popa
adc
push
mov
mov
scas
movsb
mov
cld
fcoml
fstpl
into
dec
mov
add
cld
add
adc
dec
mov
js
and
call
mov
ds
ficompl
jo
mov
mov
xchg
imul
fldt
ficoms
xor
stos
fbstp
sti
out
sub
jmp
mov
hlt
das
cmp
lock
sarl
out
loope
cmpsl
xor
xlat
sti
fwait
inc
mov
mov
sub
jmp
xchg
adc
sub
lcall
sbb
push
push
mov
sub
pushl
adc
xlat
inc
mov
pop
sub
shrb
mov
insl
xchg
add
xor
call
mov
stos
arpl
daa
inc
add
movsl
fimull
flds
or
adc
out
ss
int3
insl
ss
stc
fidivl
cs
outsb
and
xchg
rorb
movsl
push
iret
pop
call
test
xor
shrb
jae
in
movsb
pop
popa
add
pop
test
ss
out
lods
mov
xor
push
dec
fmul
cld
jne
jle
pushf
or
ret
cmp
push
lahf
push
jl
adc
call
lods
cmc
rcl
bnd
and
jle
divl
jg
cmpsl
in
xor
js
das
jmp
jmp
dec
inc
ljmp
nop
scas
mov
or
cmpsb
std
mov
and
jge
jmp
pop
imul
jecxz
aas
fimull
dec
das
mov
ds
xor
sbb
xlat
jo
add
jmp
ss
mov
mov
mov
into
cmpsl
lods
js
mov
test
dec
mov
sub
jg
mov
out
fdivp
inc
setl
addr16
mov
mov
test
sahf
mov
lcall
push
pop
adc
jns
in
lahf
and
enter
dec
jl
xchg
adc
add
flds
pushf
dec
sub
fldt
jmp
push
and
leave
ss
push
xor
pop
mov
shlb
decl
inc
or
xor
xchg
bswap
adc
fmull
bound
cmp
mov
xchg
mov
mov
decl
mov
jmp
lcall
repnz
das
adc
cmp
jns
imul
test
loop
dec
rcll
xchg
dec
push
ljmp
mov
jmp
cmp
add
inc
stos
adc
jle
in
and
insb
incl
xchg
dec
loope
xchg
scas
pop
mov
push
aas
pushl
xchg
divl
cltd
out
adc
or
jno
mov
xor
nop
gs
xlat
jns
xchg
adc
mov
pop
sbb
jle
ud0
decl
lretw
dec
xor
inc
lcall
rolb
lods
pop
jmp
cli
decl
subb
sbb
out
dec
mov
jnp
dec
mov
fidivs
nop
daa
jo
pusha
cmp
cli
push
mov
inc
movsb
repnz
pop
in
cli
lods
data16
jb
jmp
in
shlb
mov
or
mov
jecxz
lret
inc
mov
aaa
or
movsb
push
cmp
dec
aaa
and
and
xchg
cmp
iret
mov
jg
push
test
dec
xor
sub
insl
das
dec
pop
and
daa
fisttpll
out
pop
data16
ljmp
adc
sti
xchg
out
cs
test
aas
jbe
push
lret
mov
mov
sub
gs
test
mov
cmp
push
mov
fwait
mov
and
or
idiv
ljmp
pop
fdivrl
lods
jno
rorb
cs
push
adc
and
sbb
jge
cmp
loopne
fwait
ljmp
add
ds
mov
sbb
sub
incl
jmp
sub
addr16
in
jno
adc
sub
cmpsb
sub
bound
loope
or
fucomp
pop
stc
ret
shlb
movsb
mov
or
cwtl
sbb
out
sub
in
fidivs
call
out
or
rcl
dec
and
stos
sbbb
fwait
mov
sub
mov
sub
or
nop
adc
aaa
std
pushl
repnz
xor
jb
add
cmp
fisubl
pop
and
jne
mov
incl
lea
mov
leave
filds
jnp
pop
insb
aam
xlat
mov
push
mov
xor
jae
gs
scas
icebp
cmp
shrb
fimuls
enter
fnstsw
movsl
cmp
arpl
push
xchg
jae
scas
leave
int3
pop
pop
cmp
mov
mov
out
jns
or
cli
icebp
outsl
inc
cltd
xorb
jnp
mov
ror
fnstenv
mov
and
clc
insb
jmp
ret
pop
shr
es
lock
add
ds
jg
shlb
jmp
or
insb
ret
or
push
ja
nop
sub
aas
repnz
adc
jmp
pop
sub
int
sub
fiaddl
mov
les
cs
jmp
jg
roll
int3
scas
jo
xor
out
das
jmp
push
sbb
shrb
gs
inc
add
fcoms
decl
je
idiv
leave
gs
jmp
sbb
xor
mov
scas
xor
inc
hlt
sbb
daa
xchg
rol
push
or
push
out
mov
pusha
rcrl
je
iret
push
push
loope
ds
mov
je
test
pushl
in
xchg
aas
push
mov
stc
push
out
or
scas
enter
sub
mov
aas
fwait
xlat
inc
xor
cld
pushf
fstpl
daa
adc
jnp
cli
daa
ljmp
mov
popf
add
pusha
fmuls
push
hlt
repnz
mov
decl
pop
es
or
dec
mov
sbb
insl
int3
ss
cmpsl
adc
fnsetpm(287
pop
arpl
gs
ljmp
idiv
sub
jmp
adc
int
jg
mov
ja
xchg
or
or
cmpl
rcrl
jmp
pushf
inc
mov
nop
pusha
mov
jp
jae
and
inc
dec
and
ja
mov
jmp
cmp
fcoms
add
repz
minps
js
jb
and
pop
insl
xchg
jmp
mov
outsb
pop
pop
pop
jb
test
out
adc
sbbb
or
sub
call
int
popa
negl
nop
shlb
sarl
and
dec
fstps
xchg
mov
inc
lods
inc
call
cld
call
dec
icebp
mov
mov
or
fcmovbe
lea
imul
fcomip
adc
bound
stos
cs
xorb
mov
mov
mov
add
shrb
rcll
xor
lods
xor
popa
push
pushf
lods
ljmp
add
mov
dec
mov
mov
push
adc
decl
jno
adc
stos
in
addr16
dec
in
mov
push
cld
pushl
stos
mov
test
loop
jge
mov
out
pop
roll
mov
ja
mov
repz
iret
mov
cld
pop
push
pop
sahf
test
lcall
mov
lods
aas
aaa
scas
mov
adc
xor
inc
cltd
jns
add
aad
xor
push
mov
xor
push
push
sub
rorl
mov
sbb
lods
dec
into
jae
cmp
and
call
sub
shl
xor
push
out
push
fucom
jecxz
add
sbb
movsb
lock
jle
jne
xchg
lds
or
cltd
cmp
filds
loop
pop
into
lcall
or
pop
xchg
mov
pop
cmpsl
loope
and
jb
ds
divl
jmp
inc
leave
mov
push
jnp
pop
incl
jp
jb
push
loopne
aas
xchg
out
lret
cld
in
std
cmpsb
jg
or
inc
push
or
adc
cmp
pop
xor
pushl
inc
pop
sti
mov
mov
mov
subb
fiaddl
mov
cli
jbe
gs
cmp
or
push
rcll
mov
inc
repnz
xchg
dec
sar
cmp
mov
push
push
aam
js
aas
inc
sub
leave
scas
jp
jno
jae
xor
clc
ljmp
mov
insl
adc
scas
cli
ja
into
dec
pop
inc
ficompl
mov
push
addb
mov
and
popa
andb
imul
sub
lds
cmpsb
lahf
adc
jp
and
adc
enter
decl
lods
push
dec
jo
les
mov
lods
jae
repz
inc
or
std
mov
popf
bound
mov
mov
test
sub
jmp
and
fcmovnu
mov
xchg
jl
or
xchg
bound
into
pop
lahf
push
push
xor
sbb
push
outsb
jmp
fldenv
lcall
and
dec
sbb
push
test
xlat
push
mov
lcall
inc
xchg
fsts
sub
or
decl
ficoms
lret
stc
loopne
aaa
cltd
fscale
js
jecxz
jg
mov
daa
mov
mov
inc
add
inc
sub
lock
mov
movsb
cld
fmulp
das
inc
aas
ds
inc
xor
mov
pushl
lcall
dec
aad
pop
add
adc
loop
lock
push
dec
jb
test
lcall
xchg
movsl
sub
js
inc
mov
jnp
push
add
jle
dec
lret
xor
ljmp
dec
inc
fstpl
inc
xor
ljmp
xchg
or
push
rorb
pop
push
jge
add
adc
mov
cmc
push
mov
and
call
jnp
movsl
pop
imul
dec
pop
stc
bound
pop
push
insb
out
jmp
and
xchg
xchg
jmp
or
imul
decl
dec
cld
inc
fwait
mov
adc
xchg
adcb
jmp
jl
mov
add
call
jmp
mov
mov
aas
and
test
jo
jno
push
fstpt
out
divb
data16
jb
xchg
and
outsl
jo
dec
add
imul
ud0
lcall
inc
sbb
xor
outsb
push
mov
pop
out
jno
mov
adc
std
push
inc
jecxz
and
cli
mov
pop
stos
in
arpl
dec
movsl
cwtl
xor
xor
jg
pop
mov
cltd
movsl
popf
aaa
xchg
and
ret
cmp
push
mov
xor
inc
or
push
scas
leave
cmpsl
mov
fwait
fwait
mov
pushl
push
push
ret
leave
hlt
sti
push
test
rclb
add
roll
std
or
hlt
xlat
and
adc
jmp
and
int3
fdivrs
in
or
inc
call
mov
sub
xor
pushl
mov
dec
push
cmpsb
fmul
lds
scas
inc
inc
in
xor
lahf
cmp
ljmp
mov
daa
test
xlat
nop
jb
mov
inc
incl
ss
or
lods
cli
push
push
clc
int
adc
mov
mov
inc
stos
xchg
lods
stos
enter
cs
shrb
jns
cld
repz
cmp
gs
std
lcall
mov
push
andb
repz
mov
or
imul
hlt
mov
icebp
rol
xor
and
das
cmc
jg,pt
or
or
lcall
and
xchg
cmp
pushf
inc
mov
or
sub
gs
push
fs
insl
sbb
enter
orb
lods
lods
adc
je
or
pop
es
call
mov
mov
les
xchg
jmp
flds
mov
adc
fs
xor
lcall
and
xchg
inc
xor
jge
add
in
inc
push
mov
lcall
adc
scas
pop
adc
mov
out
lret
mov
mov
pop
mov
out
add
mov
or
adc
sbb
inc
sub
jmp
add
jge
js
sub
cwtl
jle
jmp
testb
incl
scas
xor
push
push
jmp
insb
imul
orl
or
inc
shll
sub
mov
in
inc
stc
stos
lods
jle
pop
loopne
subl
filds
sti
sub
pop
clc
mov
testb
mov
or
pushf
xchg
lea
jno
xchg
mov
adc
pop
incl
or
test
rcll
out
add
movsl
xor
imul
push
jmp
mov
stos
cmp
mov
push
in
xor
fldt
xlat
negb
inc
jno
jbe
decb
ror
and
js
out
jne
jo
pop
and
pop
mov
cld
mov
call
sahf
add
std
aam
inc
aad
mov
inc
adc
jmp
push
aaa
sbb
ret
je
lret
stos
mov
mov
popa
lods
scas
cli
decl
bound
les
jno
jbe
cmpsb
cmp
lcall
cmp
mov
add
fwait
or
dec
mov
call
pop
push
xchg
in
sbb
sbb
mov
insl
mov
or
jmp
or
decl
mov
loop
jp
mov
dec
mov
dec
mov
sarl
fmul
push
cli
call
loope
xor
mov
cs
cld
inc
lea
cmpsl
add
call
je
aaa
pop
pop
xor
xor
jmp
xor
lret
incl
and
cwtl
dec
jnp
mov
cmpsb
js
mov
xchg
sahf
mov
insl
push
push
lock
shrb
jmp
cmp
leave
jo
sub
inc
dec
nop
in
inc
dec
aam
sbb
out
call
cld
jp
push
cs
test
push
and
xor
call
insb
dec
stc
shl
xor
push
pop
xchg
adcl
outsb
popa
ud2
lock
ljmp
mov
adc
add
cmp
jg
test
inc
enter
dec
lret
adcb
xchg
incl
push
xchg
pop
fstl
xor
push
outsb
push
bnd
mov
lcall
sub
or
adc
test
add
in
adc
or
or
lcall
push
shl
xor
les
ret
sbb
call
or
mov
push
xor
sub
into
sub
nop
jl
add
ljmp
cwtl
loopne
arpl
jo
stos
lcall
imul
pop
ljmp
fsubr
stos
fwait
jle
sti
push
inc
sub
dec
jge
fstpl
mov
lea
sbbb
jg
jl
fs
repnz
test
or
lret
in
rorb
addb
or
lret
call
cld
lcall
and
xchg
daa
xor
sbb
sub
jno
add
scas
push
out
adc
shlb
lcall
xchg
cld
mov
mov
sbb
adc
call
inc
incl
popf
xchg
inc
lcall
shl
lcall
sbb
pushl
fbld
repnz
cltd
mov
ret
mov
dec
stos
sub
jge
mov
pop
pushf
sbb
pushl
push
hlt
fbld
fmuls
std
lds
and
jbe
into
dec
js
mov
rclb
rol
stc
call
xchg
sbb
scas
dec
pop
cmp
ljmp
jp
into
mov
loop
mov
inc
shl
mov
mov
or
sub
push
movsl
adc
lcall
xchg
sub
jnp,pn
push
dec
push
pop
push
fisubrl
cld
decl
sbb
cmp
movsb
jg
adc
cmp
pop
and
shll
aad
movsb
outsl
lods
push
push
pop
orb
test
jno
test
lret
push
sub
mov
push
daa
fldenv
jno
push
mov
ljmp
cmc
mov
push
and
jl
xchg
pop
or
pushf
sub
jno
sbb
adc
mov
popf
imul
sbb
outsl
sub
mov
inc
pop
pop
or
sub
lods
popf
mov
jns
adc
nop
jmp
adc
sub
shrl
push
mov
in
idivl
rcl
rcll
mov
int
das
mov
imul
mov
decl
mov
sbb
int
jne
or
and
xchg
sub
pop
decl
sbb
mov
push
test
cld
and
xchg
or
cmp
mov
and
aam
xlat
das
cmpsb
push
mov
cmpsl
mov
mov
decl
stc
pop
cmp
ficompl
insl
cwtl
leave
sahf
lods
shl
insb
outsb
rcrl
mov
outsb
inc
or
stos
aam
sub
inc
shr
xchg
out
and
cmc
out
jle
push
gs
aaa
ds
cmc
andb
pop
call
xor
fbld
pop
lods
insb
jnp
fdivr
in
push
dec
bts
pop
es
movsl
mov
jmp
inc
insl
fadds
loop
inc
lock
push
mov
mov
int3
inc
int
aam
xlat
mov
inc
mov
pop
iret
nop
pop
bnd
out
loopne
in
pop
mov
pop
rorl
dec
cltd
stos
das
movsb
cmpsb
iret
ficoms
fnstcw
and
je
pusha
inc
cmp
jg
jmp
pop
mov
scas
pop
xchg
les
pop
jno
adc
out
xchg
stos
xchg
mov
mov
inc
daa
dec
jnp
push
sbb
pop
or
lcall
inc
lret
adcl
jb
push
mov
mov
mov
sbb
in
mov
pop
divl
or
sub
faddl
cmp
ljmp
lods
popa
scas
pop
push
roll
pop
sarb
fwait
mov
call
mov
sub
leave
dec
sub
cmc
rol
push
xchg
pop
aaa
fldt
sub
incl
sahf
mull
xchg
aaa
call
test
xchg
mov
mov
or
inc
scas
jge
mov
std
sub
mov
cmpl
int3
call
pop
bound
add
adc
nop
cmp
sub
jp
inc
das
int
andb
popf
jb
lods
pop
loopne
mov
ds
neg
incl
mov
xor
mov
cmp
sbbl
ret
mov
imul
ljmp
dec
leave
sbb
inc
mov
adc
pop
out
addl
aam
test
cli
ljmp
stc
shrl
jb
dec
mov
mov
and
decl
in
insb
add
aam
stos
xchg
ss
jns
push
xor
ficomps
pushl
aas
adc
xor
fisubrs
mov
and
push
mov
cli
push
pop
movsl
push
ja
stc
fs
cld
lock
pop
pop
ret
sub
incl
mov
add
inc
dec
and
mov
fisubs
push
cmp
lock
ljmp
mov
outsb
insb
push
icebp
pop
mov
repnz
pop
es
push
movsb
inc
loop
mov
in
fcoml
test
lods
xchg
les
stos
aad
lcall
in
jno
xchg
jle
lods
cmp
fbstp
and
je
movsl
sub
decl
repz
or
mov
aad
xchg
out
imul
adc
jmp
loopne
pop
cs
pop
and
cli
data16
and
sbb
out
or
cli
mov
test
push
inc
ja
ret
mov
jnp
pop
testl
pop
pop
jne
sets
fcomip
incl
inc
xchg
pop
inc
push
clc
xchg
mov
mov
nop
cltd
aas
mov
xor
outsb
sti
lcall
xchg
sbb
xlat
push
add
movsl
das
icebp
int
sub
pop
mov
adc
dec
mov
lods
lds
xchg
in
loope
mov
das
stos
push
dec
pop
es
add
cwtl
fwait
inc
fisubrs
ljmp
sahf
stc
mov
aas
mov
adc
decl
and
sar
lret
or
enter
inc
mov
adc
sbb
pop
sbb
ret
pop
jbe
xor
in
dec
mov
lcall
xor
and
sub
jo
lods
xor
gs
sbb
inc
cld
xchg
push
int3
mov
or
pushl
mov
testl
xor
push
xchg
call
fmuls
cmp
pop
imul
testb
mov
inc
sbb
fisttps
loope
out
daa
xor
inc
pop
cmp
stos
mov
loopne
push
push
cld
jecxz
dec
arpl
adc
pushl
xchg
pop
push
jecxz
imul
xchg
mov
fwait
nop
xor
xchg
mov
fwait
mov
sub
aad
sti
dec
ljmp
or
push
fs
adc
xlat
les
addr16
outsb
decl
or
or
dec
mov
add
push
xor
pop
insb
mov
add
jmp
xor
outsl
mov
jns
movsl
cmp
out
xchg
xchg
cmp
repnz
dec
mov
int3
insb
dec
out
jmp
out
sub
mov
or
pop
testb
pop
pushf
adc
mov
shrl
sub
jle
or
ja
ror
pop
rorw
push
inc
popf
stos
lahf
adc
pop
pop
mov
sar
dec
pop
mov
or
xor
sahf
in
jae
cmp
test
or
cmp
jne
testl
jle
cmp
xchg
and
mov
and
fisubl
fistpll
stos
ljmp
roll
jb
dec
test
orl
das
dec
lcall
jmp
addr16
adc
lds
push
ja
ret
incl
mov
cmc
or
lea
repz
outsl
xor
dec
imul
inc
push
push
fstl
jge
repz
hlt
mov
ret
lock
pushl
cli
pop
insl
inc
ret
pop
and
mov
mov
mov
mov
cmpsl
fsubs
or
popa
gs
cld
pusha
ret
cmc
cmpsl
push
aam
jecxz
dec
pop
ja
xchg
xor
mov
movsl
sub
cmc
xchg
pop
xchg
or
adc
in
jge
xchg
push
pop
aaa
das
mov
call
add
in
incl
dec
idivb
pop
scas
sbb
pop
inc
inc
mov
mov
icebp
stos
ljmpw
rorl
push
inc
jp
jmp
or
inc
std
lcall
pop
pushl
hlt
pop
arpl
mov
jg
cli
roll
fidivl
or
in
pushf
adc
outsb
add
idiv
decl
out
add
nop
sub
std
fadds
cmpl
out
outsb
out
in
scas
cmp
cld
mov
pop
outsl
pop
adc
xchg
out
ret
pop
ds
mov
incl
popw
cmp
jno
outsl
out
and
rcrl
jae
jl
mov
push
push
push
mov
dec
iret
jno
sbb
dec
outsl
or
push
adc
and
jle
mov
cmp
outsl
adc
xor
push
pop
out
jae
jle,pt
outsl
fimull
ljmp
adc
pop
xor
dec
in
out
mov
mov
xchg
pop
cltd
subb
loope
call
shll
cmpsb
fsubl
or
xchg
mov
xlat
pop
repnz
dec
mov
stos
xchg
mov
jne
les
adc
les
xchg
nop
inc
pop
int3
mov
call
push
and
test
and
mov
jp
push
jb
push
dec
inc
shll
jg
and
cltd
sarl
jl
iret
push
sub
pop
paddsw
clc
sub
insb
cwtl
rorl
adc
mov
imul
cmp
cmpb
mov
fcos
call
es
ret
xchg
nop
and
movsb
or
roll
xor
mov
xchg
popa
pop
inc
hlt
jg
int3
cmp
cld
fbstp
dec
inc
inc
rcrl
idivl
xchg
xor
inc
adc
loope
mov
pop
jmp
subl
xchg
outsl
lock
cltd
cmp
loop
xor
sub
test
pop
out
les
sar
sub
in
loop
pop
mov
dec
sub
mov
mov
stos
pop
pop
fwait
jmp
cli
mov
fs
movsl
mov
lcall
xor
pop
fsts
add
aas
sub
vmovdqu
leave
sti
test
and
inc
ljmp
mov
jle
mov
pop
or
mov
add
inc
add
out
push
xchg
repz
jmp
sub
test
pop
xor
test
sub
inc
jecxz
clc
lret
out
push
ret
enter
ljmp
lock
popa
inc
test
fbstp
cmp
call
insb
clc
outsl
mov
mov
aas
in
push
adc
mov
fistl
iret
inc
leave
cmc
jl
inc
pop
outsb
lock
decl
mov
leave
popa
fimull
or
adc
xor
repnz
pop
in
shll
pop
les
int
aas
call
sbb
push
sbb
pop
push
add
idivl
jg
rcl
inc
das
add
xor
insb
sarb
addr16
jmp
cmp
sub
and
pop
jge
call
fimull
rorl
jns
xor
push
cli
repnz
add
mov
mov
jl
mov
adc
lods
fnsave
push
xor
loope
ja
in
mov
and
lods
out
xor
in
pop
mov
ljmp
punpckhdq
cmp
push
call
xor
in
push
mov
aas
dec
push
xor
sub
cmpsl
adc
movsb
je
sbb
xlat
andl
nop
mov
xor
push
push
sti
and
mov
fwait
dec
loop
cltd
in
mov
push
cmp
idiv
push
nop
xchg
clc
mov
mov
mov
cmp
inc
popa
js
push
jne
push
mov
je
dec
mov
pushl
jne
js
pop
daa
hlt
stc
in
lods
add
das
and
outsb
insb
xchg
aam
mov
mov
push
push
inc
sarl
je
pushf
xchg
je
fildll
aas
imul
call
andb
stos
test
clc
js
xchg
test
inc
mov
sti
ljmp
fcoml
pop
pusha
mov
or
or
test
fdivrs
mov
lcall
or
and
insb
inc
jl
mov
sub
push
sub
fisttps
cmpsb
sub
adc
ljmp
lahf
out
aam
jge
cli
mov
sub
lahf
scas
clc
cmp
inc
push
aaa
lock
xor
cmp
push
stos
rcrb
jmp
mov
das
ss
push
test
mov
and
and
mov
sub
cmp
lock
cmp
inc
pop
mov
jbe
test
pop
dec
clc
mov
xchg
or
rorl
xor
sub
je
incl
xchg
adc
xchg
clc
mov
pushf
jno
out
xchg
test
adc
jmp
inc
pusha
cwtl
xor
pop
cmp
fwait
aad
mov
sbb
jo
dec
repz
push
js
cmp
adc
mov
sti
cli
jne
push
int3
pop
dec
xorl
sub
pop
xchg
aaa
or
and
xchg
pop
push
dec
push
sub
decl
push
and
lret
or
loope
pop
lods
ret
decl
in
shlb
fwait
jge
cli
stos
in
scas
push
clc
mov
gs
lods
sbb
cmp
dec
add
insb
loop
mov
test
inc
cmp
leave
call
js
cmp
out
or
jecxz
sahf
pop
lds
or
jmp
add
dec
cli
pusha
mov
fisttpl
into
dec
cmp
aad
adc
pushl
stos
testb
add
mov
js
das
out
outsl
cmp
mov
cmp
push
in
or
mul
dec
fs
ds
out
pop
dec
loopne
cld
fs
adc
push
or
fistps
pop
xchg
aad
mov
int3
lret
sbb
xchg
cs
es
jmp
dec
add
ljmp
mov
or
add
scas
call
in
fxch
xor
repnz
push
cli
push
sarb
pop
outsb
ret
sahf
jg
xorl
out
xchg
xchg
fs
mov
add
mov
mov
mov
adc
je
push
imul
orb
test
cmpsb
or
jle
and
pop
mov
lods
aaa
dec
rcl
or
jecxz
adc
jne
cmpsl
or
jp
sbb
jns
dec
aad
jmp
movsl
sub
pushl
sbb
pop
push
sti
test
pop
leave
or
xchg
out
incb
lcall
and
int
and
ss
icebp
and
jecxz
push
addl
das
out
popf
adc
std
call
sbb
aam
aaa
pop
ss
push
in
cmp
push
js
cltd
out
stos
call
add
mov
arpl
and
xchg
pop
jg
cmpsl
scas
cmc
push
stos
outsb
nop
xchg
lcall
js
movsl
cmp
pop
xchg
in
push
dec
mov
imul
sub
call
dec
push
sub
mov
cs
mov
pop
scas
iret
mov
cs
pusha
mov
cmp
mov
lret
js
loop
mov
gs
addr16
leave
loop
jmp
dec
iret
insl
sbb
mov
and
adc
aas
jo
push
ds
sti
sub
adc
add
sbb
mov
xchg
jecxz
jnp
daa
ljmp
adc
sahf
mov
imul
sub
push
push
ljmp
jmp
mov
popa
sub
mov
dec
notrack
inc
outsb
mov
repnz
incl
fxch
sub
mov
push
inc
addr16
jecxz
mov
lahf
imul
int
lcall
mov
cmpsb
fidivs
or
imul
outsb
sbb
jp
loope
popa
nop
cmpsb
incl
mov
outsl
nop
or
inc
xor
std
sti
push
lds
cmp
mov
jo
dec
cli
cld
popa
ret
into
movsl
push
sub
int3
out
test
daa
into
leave
push
ljmp
cmp
rorl
aam
mov
adc
in
int
out
ffreep
and
testb
pop
popf
mov
pushf
mov
jmp
dec
pop
les
lret
or
mov
or
mov
subb
add
dec
addr16
xor
in
fisubrl
jecxz
add
pop
push
addr16
add
incl
sub
jbe
data16
push
imul
pop
imul
ljmp
pop
rep
xchg
imul
pop
stos
jb
jmp
stc
sbb
xor
mov
les
popf
dec
stos
mov
es
push
inc
lods
orb
cltd
or
decl
sub
test
out
dec
movsl
add
outsl
aas
addr16
pop
lahf
mov
jb
insl
xchg
xchg
imul
add
scas
xor
mov
xor
dec
mov
add
fwait
push
pusha
cmpl
dec
into
ds
cmp
ljmp
enter
mov
push
cltd
or
lcall
sbb
jnp
int
pop
inc
xchg
imul
rolb
dec
js
mov
pop
sar
fisubrl
xchg
cmp
call
push
mov
push
pushl
lock
ficompl
xlat
dec
aaa
je
fsubr
mov
addr16
and
ljmp
sub
cmc
jo
add
ret
xor
cltd
clc
decl
scas
in
push
movsb
test
xchg
xrelease
pushl
ds
xchg
out
adc
fiadds
push
cmpsl
cld
cmpsb
xor
lock
decl
insl
loopne
aad
mov
push
cmpsl
outsb
fisubs
pop
mov
sar
call
pop
fnsave
mov
pop
add
sbb
emms
xchg
loope
js
fcoml
push
leave
imul
decl
xchg
jae
lcall
dec
mov
lret
dec
fidivs
mov
stos
and
or
dec
jne
es
sub
movsb
cmpsb
dec
mov
rclb
inc
push
call
add
and
lea
adc
push
aas
xlat
xor
inc
jno
add
popa
jle
incl
and
cmp
push
xor
rcrb
in
arpl
mov
cmpsb
idivb
inc
stos
lcall
fildll
movsb
pop
mov
aam
imul
inc
fcmovb
shr
xchg
adc
sar
xchg
and
mov
lret
arpl
addb
and
scas
mov
or
xor
ljmp
nop
or
rorl
mov
outsl
jmp
incl
mov
push
cmpsb
fistl
inc
mov
sahf
mov
test
rcl
leave
insl
xchg
clc
inc
daa
popf
lea
rcrl
adc
push
mov
cli
xchg
jmp
add
bound
enter
xor
mov
in
std
repz
fdivl
push
cmp
test
loop
xchg
dec
jmp
mov
stos
mov
mov
popf
push
xchg
sub
cmp
push
std
and
mov
lcall
stc
fsub
pop
add
xchg
jne
lods
pop
out
sbb
ljmp
mov
push
popf
popl
or
data16
pop
repz
jno
pushl
mov
jmp
cmp
aad
push
cwtl
sar
aaa
push
dec
flds
xchg
mov
mov
out
xchg
sahf
cli
cmpsb
mov
int3
in
out
or
cwtl
bound
ljmp
fistpll
xchg
or
push
pusha
push
mov
pushf
outsl
jecxz
data16
stos
decl
ss
push
pop
cltd
arpl
and
mov
inc
pusha
ja
and
pushf
outsb
push
sub
mov
sub
push
lcall
mov
cmp
mov
cmp
cmpb
loop
push
shlb
lcall
mov
out
mov
shr
pop
shrl
repz
fadds
lods
and
insb
lock
incl
push
or
and
sbb
ffree
push
cmp
int
roll
mov
cmp
mov
sub
test
push
pushf
sbb
pop
dec
or
shrb
sti
or
inc
subl
or
cs
arpl
or
popf
je
xchg
lds
call
test
sbb
lock
sub
mov
inc
inc
pop
rcll
xlat
push
mov
incl
pusha
jmp
out
loope
cwtl
iret
adc
arpl
cli
lea
jmp
das
ds
sub
dec
cmp
and
pop
xchg
out
mov
jl
mov
mov
ret
into
adcl
jae
rorb
cmp
sbb
filds
call
mov
adc
in
lock
dec
mov
decl
or
das
sub
repz
scas
pop
fildll
push
mov
adc
in
mov
or
mov
insb
insl
mov
xchg
mov
cld
stos
and
fldcw
out
nop
or
aaa
jmp
das
or
sarl
fldenv
push
mov
sbb
push
sarl
call
loopne
repnz
in
push
lret
aas
sbb
pop
push
call
mov
adc
xor
add
jno
shl
aas
sbb
pushl
and
mov
mov
pop
sbb
scas
lea
add
lahf
dec
icebp
push
add
cmpsl
leave
jl
ljmp
jno
push
mov
dec
pop
xchg
testl
xor
shrb
std
incl
mov
push
rclb
stos
xor
add
cmp
xchg
jo
scas
xor
push
pushl
cmp
sbb
fadds
inc
push
push
cltd
pop
daa
mov
xor
mov
inc
lods
sub
jno
cli
jnp
popf
ret
mov
add
mov
fidivrl
stos
aaa
ljmp
jp
daa
pop
mov
adc
inc
lock
mov
xor
test
ja
icebp
ss
xchg
sub
pop
lret
inc
test
pop
mov
aas
mov
add
mov
std
cmp
and
cmpsb
pusha
add
push
cs
stos
sbb
xchg
xchg
stos
push
mov
cld
pushl
data16
inc
fmul
call
and
mov
and
jns
xor
test
push
test
sbbl
add
sub
jmp
sub
cmp
and
dec
call
mov
cmp
mov
inc
cs
aam
push
decl
sub
rcrb
sub
push
and
leave
and
mov
push
add
pushf
mov
sti
and
sbb
inc
cld
pushl
int3
icebp
fidivrl
mov
pop
out
outsb
or
jecxz
mov
mov
jp
push
aad
jge
xchg
jmp
sar
int
dec
out
sbb
mov
ljmp
test
divb
pop
and
in
mov
xchg
jle
xchg
adc
aam
inc
xor
imul
mov
stos
push
ds
fisubrs
jno
data16
mov
push
jg
call
or
mov
pushf
call
xchg
mov
sar
call
cmp
push
dec
sub
jp
std
mov
scas
sbb
sbb
xchg
test
cli
ja
repnz
repnz
mov
int
or
pushl
mov
ret
push
add
cltd
ffreep
mov
jo
mov
mov
inc
pop
jo
iret
shll
div
jecxz
repz
sub
mov
call
push
into
daa
dec
loopne
or
push
outsb
cli
pop
pop
cmp
jb,pt
push
pop
or
mov
or
cmp
loop
xor
gs
addr16
xor
ds
movl
sbb
lds
lret
dec
adc
jbe
mov
xor
pushf
pop
dec
movsb
sti
mov
or
stos
lcall
test
cmp
and
shrb
out
into
cmpl
mov
pop
push
scas
movsb
fisubs
es
lcall
es
cmpsb
push
push
adc
sub
lcall
jo
cmp
inc
push
lea
insl
popa
adc
jge
daa
ftst
call
clc
mov
sbb
outsl
dec
rcrl
jb
loopne
mov
push
push
push
outsl
clc
in
push
ret
pop
jo
enter
cmp
jmp
pop
push
pop
sbb
mov
jne
ljmp
mov
lock
mov
andb
cli
mov
clc
icebp
sub
incl
ret
fisttpll
push
mov
mov
ljmp
mov
test
xor
jno
sarb
mov
mov
stc
cmp
pop
mov
xor
jg
jmp
or
mov
jb
push
fimull
mov
cld
pushl
in
repz
frstor
je,pt
jl
daa
inc
add
mov
xchg
nop
pop
out
jmp
js
mov
push
pop
leave
add
clc
cmp
shrb
sbbb
inc
fwait
add
decl
xchg
cvtpi2ps
mov
outsb
mov
inc
fnstcw
dec
adc
cmp
xchg
out
add
lahf
xchg
fbld
cmp
int3
lcall
fldt
mov
mov
dec
das
jb
jp
dec
stc
leave
push
xor
ljmp
daa
popf
sahf
stc
or
outsb
xchg
repz
cpuid
adc
imul
lret
inc
out
push
icebp
fstps
insb
xlat
out
lds
repnz
fstpt
decl
divb
jo
mov
in
push
jl
into
cwtl
call
cld
lcall
push
insb
xchg
push
ret
ret
mov
insl
loopne
pop
jno
lock
sahf
mov
test
and
insl
push
cwtl
mov
data16
sti
out
aaa
cmp
int
repz
test
pop
mov
mov
cmp
hlt
xor
subb
jmp
push
jp
outsb
xchg
add
pushl
or
popf
je
ret
test
push
dec
mov
inc
out
test
mov
inc
loope
or
decl
rclb
xchg
movsl
lods
mov
mov
xchg
mov
jmp
testb
pop
repnz
pushl
xchg
cmpsl
or
mov
rol
adc
lahf
and
sub
push
mov
xor
xchg
sar
jmp
and
dec
dec
jle
xchg
adc
pop
cld
jmp
pop
cmp
push
jge
add
shlb
incl
xchg
xorl
pop
pop
ret
std
call
enter
dec
pop
mov
push
jg
sar
xchg
lock
sub
addb
mov
call
mov
lods
xchg
in
adc
xlat
call
jnp
inc
cmp
jbe
mov
js
arpl
ret
cmp
out
ds
scas
fldenv
loope
mov
mov
xchg
pop
je
cwtl
xchg
push
mov
mov
mov
in
mov
rorl
push
fcmovu
rcll
dec
ljmp
and
int3
cmp
lods
jge
lods
decl
jp
popa
push
out
and
enter
xor
jno
roll
xor
mov
sub
xchg
or
mov
push
shlb
fs
dec
push
pop
and
sbb
jne
mov
pop
push
int
jecxz
sbb
xlat
hlt
mov
jmp
adc
xor
sbb
fldenv
xchg
inc
and
adcl
pushl
jmp
stc
repz
es
jnp
enter
and
sbb
dec
inc
cmpsl
decl
mov
fs
mov
mov
add
fadd
dec
xchg
andb
cmp
call
sbb
scas
sbb
adc
xor
ja
ds
in
xlat
into
fadds
sarl
pop
incl
add
mov
push
int3
jecxz
mov
lret
js
lcall
mov
fbld
jp
inc
push
cmp
mov
mov
jmp
int
adc
outsl
pusha
pop
aas
cmpsl
imul
push
test
pop
mov
ljmp
pop
jns
insl
xchg
xor
or
adc
inc
cmp
in
clc
icebp
incl
pop
jae
popa
cld
and
mov
dec
es
sahf
daa
int3
pop
fdivs
pop
push
int
jge
or
mov
or
mov
fbld
lea
adc
lret
outsb
ds
fsubl
clc
sbb
mov
mov
push
ds
iret
push
jecxz,pn
cs
push
ss
add
xchg
imul
lods
adc
dec
out
pop
arpl
xlat
inc
leave
adcl
es
jmp
call
je
adc
dec
pop
sbb
pop
aam
or
mov
jmp
jmp
mov
pop
testl
data16
ss
jge
sub
repnz
je
push
dec
decl
or
shl
dec
loop
xchg
pop
sub
cmpsl
or
adc
lods
les
sar
lcall
jge
repnz
pop
inc
fwait
jae
or
jl
insb
mov
mov
call
aam
lods
xchg
push
xchg
fnstcw
cmovg
popa
stc
and
ljmp
mov
incl
cmp
add
jp
or
movl
jecxz
adc
fisttpll
xor
push
xlat
dec
sbbl
sbb
pop
lock
fnstenv
lret
lahf
mov
adc
fsubrp
or
xchg
imul
aas
mov
icebp
mov
push
mov
dec
dec
jo
jl
jecxz
fldt
dec
inc
in
test
shrb
jle
and
xor
ret
out
mov
inc
enter
lahf
mov
adc
incl
xchg
sbb
or
insl
in
push
adc
lods
pop
repz
aad
fistpll
jnp
adc
xchg
mov
incl
test
aad
insb
push
pop
mov
adc
jmp
mov
shll
push
popa
cmc
into
cmp
adc
nop
and
mov
sub
fdivs
addr16
jb
push
sbb
adc
mov
incl
out
jo
in
hlt
mov
loopne
push
repnz
cwtl
popa
inc
inc
pop
push
adc
add
sar
call
test
lahf
das
loope
out
xchg
ss
lods
pushf
mov
inc
aaa
mov
les
push
decl
dec
mov
into
and
mov
push
cmp
loopne
sti
out
mov
ss
mov
icebp
cmc
shll
jo
repnz
mov
push
push
mov
xchg
dec
dec
stos
add
xlat
add
fbstp
leave
push
or
hlt
ljmp
je
adcl
or
inc
js
imull
jno
movsl
imul
andl
sbb
dec
jmp
lcall
or
movsb
or
incl
push
aam
xor
mov
jl
sub
push
hlt
lret
sar
mov
sahf
lcall
xchg
arpl
insl
dec
gs
ljmp
das
add
push
stos
pop
adc
jg
sbb
mov
cmpsb
ud0
je
push
sub
inc
adc
or
add
decl
xchg
rorb
cmp
pop
hlt
in
out
addr16
push
jo
xchg
push
sti
fstps
fadds
in
call
jl
popf
out
lahf
loopne
cmc
loope
arpl
inc
ret
ret
mov
daa
xor
sbbb
incl
mov
scas
and
icebp
push
mov
nop
push
gs
mov
or
idivl
ret
jmp
es
lcall
incl
cmpsl
cmc
int3
xchg
xchg
inc
mov
sarl
mov
fwait
dec
imul
mov
add
jmp
mov
push
sub
jns
pushf
enter
loop
ftst
and
lcall
cwtl
outsl
js
add
sti
mov
pop
pop
addr16
out
pop
outsb
popf
aam
andb
dec
ret
ret
xchg
mov
cld
call
inc
lahf
push
or
pop
mov
adc
inc
repz
arpl
and
bound
ds
stos
push
push
mov
adc
push
out
fidivrs
dec
lret
icebp
jmp
insb
jnp
rclb
loop
jmp
cmc
cld
mov
scas
sbb
and
cltd
mov
or
mov
in
js
imul
pushl
or
cmp
popa
imul
push
push
cmp
icebp
aam
jp
roll
gs
pushf
lods
and
jne
push
ljmp
sbb
std
sti
repnz
or
push
mov
cmpb
mov
inc
xorb
jg
jmp
repz
je
cmpsl
lcall
std
sub
call
or
addl
incl
fstl
imul
mov
inc
sub
roll
cs
fdivr
dec
push
outsb
sub
adc
jle
mov
stc
cmp
ljmp
xchg
rclb
test
pop
dec
outsb
pop
or
mov
cs
popa
test
pop
jp
dec
mov
jns
jp
push
cmc
sub
shl
nop
mov
jge
and
lea
incl
adc
adc
aad
push
push
imul
mov
xchg
mov
je
jnp
incl
xor
aaa
std
sub
push
or
or
lds
incl
and
es
test
jge
sarb
mov
dec
cmp
decl
inc
mov
push
movb
aam
adcl
mov
rcll
idiv
jg
dec
pop
addr16
cld
fbld
lods
out
aaa
addb
out
imul
xchg
int
adc
and
sub
mov
sbb
inc
dec
add
clc
lcall
jmp
inc
mov
aad
push
mov
xchg
push
jmp
and
leave
andb
insl
ffreep
adc
jno
xor
jg
mov
or
imul
loopne
pop
jno
mov
fdivrs
mov
mov
cmp
into
sbb
push
jl
mov
push
inc
cmc
test
jl
or
xchg
lods
mov
ljmp
inc
pusha
ficoml
adc
andl
das
call
or
xor
insl
scas
pop
cltd
ret
clc
dec
or
mov
ljmp
js
in
loop
push
xchg
arpl
sub
xchg
cmc
outsb
fistpl
sub
cli
dec
cwtl
fsub
and
movsl
mov
int3
add
dec
popf
dec
imul
fisubrl
idivl
or
mov
pushl
push
fdivs
mov
xlat
inc
cwtl
mov
dec
ja
jno
and
mov
mov
pushl
ret
std
movsb
std
pop
pusha
das
and
cld
sbb
scas
mov
push
leave
testl
sahf
aad
cmp
lcall
push
mov
enter
sbb
cwtl
pop
icebp
into
popf
xchg
or
add
ljmp
mov
movsl
push
jbe
inc
das
jp
mov
iret
jmp
dec
ficomps
cmc
sub
cld
lods
push
cld
leave
loopne
insl
inc
pop
push
data16
incl
push
nop
add
call
lods
je
lods
lcall
pop
pushf
cmp
rcrl
decl
fndisi(8087
xchg
mov
stos
mov
cmp
mov
xchg
shlb
call
mov
xchg
mov
std
pop
fsts
add
popf
xor
or
jnp
inc
loope
mov
push
subb
lods
push
incl
pop
sub
adc
cli
scas
adc
mov
and
mov
mov
mov
sti
fisubrs
shl
add
pushl
mov
js
loop
xor
mov
and
jns
into
push
fsubrl
pop
xchg
lock
jmp
incl
mov
ljmp
sub
push
lods
rdpmc
cs
nop
clc
push
sub
mov
cmp
pushl
rclb
int
in
cmp
mov
scas
jmp
shll
decl
daa
or
xor
ljmp
sbb
lock
test
pushf
loop
dec
push
inc
orb
lds
addr16
xchg
add
and
dec
into
pushl
pushf
mov
lods
mov
mov
addr16
sbb
lret
jg
lock
call
fs
fs
lret
imul
inc
clc
sub
inc
mov
xor
cli
jg
in
pop
xor
push
mov
add
call
mov
out
push
push
xor
xor
push
hlt
jmp
pop
je
cmp
mov
outsl
mov
push
cld
in
jecxz
pop
fdiv
jns
lret
repz
inc
test
sbb
outsb
jmp
jge
dec
testb
jmp
xor
icebp
gs
scas
push
add
sub
call
xchg
out
cltd
pop
push
adc
jl
jg
adc
push
jb
dec
or
pushl
jecxz,pn
pop
rcrl
mov
cmp
dec
dec
flds
test
scas
and
jmp
outsl
dec
pop
stos
dec
jp
mov
adc
add
es
jo
cmp
lcall
mov
sub
out
pusha
ficomps
scas
aam
test
cs
test
adc
shrl
jmp
mov
out
pop
xor
lcall
jbe
dec
imul
pushl
ret
push
pop
sub
repz
sub
test
pop
sbb
xor
aas
dec
jnp
insb
loope
jno
ficoms
cmp
decl
pop
insl
aaa
adc
xlat
jno
push
or
addr16
add
and
gs
ds
decl
or
mov
stos
mov
stos
es
mov
jg
incl
push
out
lods
pop
inc
lcall
lret
mov
mov
in
pop
and
pop
pop
pop
xchg
insb
xchg
and
cmp
jbe
sti
call
das
aas
in
enter
xchg
mov
mov
addr16
sahf
loop
fldt
lcall
in
sub
inc
loop
mov
cwtl
mov
pusha
pop
and
mov
mov
lcall
mov
fwait
jg
mov
mov
outsb
stos
mov
lret
sub
jg
call
sub
inc
ret
lods
jo
or
push
jmp
push
iret
sbb
xor
cmp
sbb
pusha
jmp
lahf
add
xchg
or
or
in
mov
aaa
cmp
fbld
jmp
stc
mov
test
xor
mov
pop
in
fstpl
insb
add
lcall
aam
or
bound
subl
rolb
repz
loope
jg
cmc
jmp
mov
mov
mov
or
idiv
mov
in
mov
mov
in
mov
in
cmc
pop
mov
jb
cmpsb
pop
in
std
sbb
cmp
icebp
cmp
cwtl
xor
xor
mov
pop
push
outsl
in
push
lock
jp
push
mov
inc
dec
decl
insb
pop
pop
cmc
mov
lock
fidivl
cltd
dec
stos
rcrb
sub
xor
mov
incl
movsl
fiadds
jae
in
jnp
insb
call
lds
ljmp
push
inc
pop
hlt
call
sub
in
popf
pushf
adc
test
pop
pop
push
addr16
sti
jmp
inc
call
inc
inc
dec
insl
cld
mov
fiadds
jno
xchg
push
out
push
lret
dec
call
jo
mov
popf
mov
push
cmp
out
mov
xchg
pop
mov
jb
dec
mov
mov
add
mov
fistpl
pushf
push
or
stc
mov
lcall
jge
stos
pusha
std
jne
iret
fdiv
jns
cmp
int
adc
add
icebp
or
std
fs
mov
loopne
xor
inc
xchg
or
cltd
push
mov
xchg
test
ljmp
cmp
push
imul
xchg
rcl
adc
pop
and
sbb
scas
add
mov
std
pushl
sbb
pushf
pop
xor
fldt
dec
fwait
scas
jp
mov
adc
xchg
adc
ljmp
mov
or
stos
insb
push
aad
je
xorb
cld
dec
add
repnz
add
lock
ljmp
insl
sub
adc
arpl
inc
push
inc
jae
aas
push
add
fcompl
call
inc
repz
lret
jg
lcall
push
stos
adc
adc
int
je
sbb
mov
add
push
fcomip
cmp
sbb
outsb
mov
add
inc
lds
lret
test
call
outsl
fstpl
stos
inc
stos
scas
sub
cmp
push
mov
dec
mov
sbb
cmp
mov
decl
loope
shrb
mov
and
cmp
aad
out
xchg
or
repnz
incl
jmp
popa
pop
push
inc
xchg
enter
decb
ljmp
mov
call
jb
mov
pop
bound
orl
scas
dec
cmp
jno
popa
cmp
push
rcll
xor
popf
hlt
and
es
mov
pusha
xchg
outsb
cmp
fiadds
mov
orl
movsl
push
decb
in
data16
push
adc
mov
les
shll
sarl
outsb
xchg
fimuls
xor
scas
out
jge
push
mov
xor
add
repnz
decl
mov
mov
cli
leave
fstp
iret
dec
stc
jns
shl
ret
js
out
push
inc
sub
ss
mov
mov
push
xor
inc
sbb
decl
lods
scas
mov
rcrb
sub
sarb
jg
insb
ss
jmp
movsb
test
cmpsl
push
fimuls
fdivp
das
push
or
and
int
int3
mov
shrb
jge
push
or
jne
xor
loope
sub
pushl
arpl
sbb
cmc
mov
rolb
cmp
repnz
push
aas
pop
dec
test
cli
jecxz
or
std
addb
aam
sbb
jg
ljmp
push
pop
jge
out
xchg
fsubs
ret
loopne
mov
jl
outsl
es
rolb
lcall
xor
mov
push
fs
sbb
push
jle
pop
test
jmp
dec
cmp
sbb
push
push
adc
cmc
out
xor
and
outsl
push
les
push
or
xor
int
xchg
cmp
sub
pusha
mov
nop
inc
mov
rcrb
sbb
into
mov
subb
sub
rcrl
incl
outsl
pusha
adc
mov
add
mov
sbb
dec
rorl
aas
sbb
push
rorl
dec
mov
incl
dec
mov
or
xor
cmpsl
aas
add
in
jno
xchg
xor
aaa
std
fidivs
dec
inc
cmp
pop
aam
out
addl
js
mov
dec
outsb
mov
sub
int3
ljmp
cli
rorl
call
and
xor
mov
jno
ret
sbb
das
push
jb
dec
imul
inc
mov
mov
cmp
andl
sub
pop
mov
xchg
jo
lds
ljmp
aam
inc
adcb
jg
inc
inc
push
out
in
es
xchg
ret
std
sbb
inc
test
in
jg
imul
fists
clc
mov
insb
scas
lock
mov
mov
cmp
sub
inc
call
cmp
sbb
std
xchg
sub
ss
das
js
sub
mov
loopne
test
ljmp
hlt
test
stos
cwtl
or
and
in
cmpsb
mov
pushl
cmp
xchg
adc
push
pop
shlb
int
stos
fistps
push
lods
mov
incl
lods
sub
lcall
lea
sbb
push
xor
xchg
shlb
arpl
ljmp
xchg
xorb
lret
mov
or
pop
sbb
test
pop
or
popf
ss
aaa
fadd
inc
out
inc
daa
inc
and
adc
mov
decl
lahf
iret
repnz
in
cmp
or
push
xchg
call
push
sahf
jne
dec
mov
jmp
xlat
sbb
push
jecxz
jecxz
dec
dec
sub
cmc
mov
daa
add
divb
incl
jne
mov
fsubrs
mov
mov
arpl
lds
jno
sarw
push
mov
sub
out
js
jb
aad
lret
or
fidivrl
xlat
out
cmpsb
lock
push
mov
out
push
addr16
ljmp
imul
add
ret
inc
add
sbb
push
jmp
push
sbb
xchg
mov
pop
ja
mov
pushf
mov
scas
addr16
incl
daa
in
hlt
sub
jno
pop
sbb
or
lret
mov
shll
lea
mov
sarb
out
mov
xchg
fsub
ja
lcall
aam
pop
icebp
lcall
mov
or
pop
sbb
add
mov
in
callw
les
pop
cmc
lcall
bnd
sbb
jno
pop
pop
dec
or
mov
lea
sub
fnsave
rcll
push
inc
cs
out
dec
scas
sub
mov
mov
mov
xchg
xchg
fcomip
roll
cmp
pop
insb
jp
in
xor
mov
cwtl
inc
xchg
cmc
xchg
lock
push
xchg
rcrl
or
mov
adc
pushl
rol
ja
aaa
push
rcll
loop
lock
sahf
xchg
cmp
hlt
sbb
jbe
mov
hlt
sbb
sbb
push
jno
imul
xor
call
popa
mov
mov
push
jne
cli
ss
xlat
pop
fs
loopne
fimull
mov
xchg
mov
push
mov
cld
pushl
and
sbb
dec
jne
inc
push
adc
lods
or
call
aaa
cld
pushl
sbb
push
pop
in
fldenv
fst
dec
and
lcall
fcomps
mov
jl
pop
loopne
add
adc
fwait
imul
loope
lcall
lcall
aad
icebp
cltd
push
decl
lds
xchg
sbb
clc
xchg
imul
xchg
jmp
push
je
je
mov
xor
fnstcw
or
aam
mov
pop
xchg
arpl
call
loopne
enter
aas
sbb
dec
xchg
xchg
mov
ljmp
lock
inc
jle
sub
ja
jge
push
xlat
test
push
mov
sbb
push
and
ja
jp
iret
clc
mov
test
mov
stos
inc
ret
lcall
stc
xor
mov
sub
imulb
insl
add
clc
ds
jle
pop
jmp
add
jg
or
pop
mov
lcall
imul
cli
jmp
setle
outsl
scas
stc
test
push
cmp
mov
test
lcall
sti
out
loopne
gs
xor
cmc
mov
adc
mov
loope
add
ljmp
out
push
adc
pop
loopne
inc
adc
dec
cmp
adc
push
xchg
fs
das
lock
sub
std
push
std
jg
enter
test
cwtl
mov
loop
mov
mov
subl
mov
scas
test
jecxz
sub
incl
cld
jmp
xor
inc
pop
mov
or
fnstenv
out
mov
dec
push
scas
xlat
les
cmp
test
cmp
cld
jg
icebp
adc
or
adc
fsubrl
fldl
sbb
cltd
jb
ja
mov
pop
lock
jecxz
stos
pusha
xor
les
jae
cmp
push
cmpsl
sbb
or
jg
sub
pop
mov
sub
and
xchg
scas
roll
fildl
out
sbb
xor
aam
xchg
mov
jmp
test
inc
push
in
sbb
sbb
ss
decl
dec
int3
pop
push
sub
sar
pop
mov
jmp
xchg
sub
xchg
loopne
loope
icebp
ja
jno
sti
mov
call
mov
decl
int3
sub
or
stos
inc
pop
push
push
add
cltd
sub
arpl
pushl
or
jns
dec
aam
popf
outsb
mov
out
sub
adc
xchg
int
ds
fisubrl
lcall
jb
sahf
sub
sub
ljmp
fisttpl
and
ljmp
int
incl
push
dec
pop
lods
jns
add
sub
ficompl
gs
jg
popa
jo
int
sub
and
or
lcall
inc
js
mov
sbb
xchg
xchg
jl
aas
xor
xchg
push
std
or
adc
lods
push
mov
sar
ljmp
frstor
mov
add
jmp
mov
in
xchg
lcall
adc
xor
enter
loop
out
fistpll
cmp
mov
inc
out
push
push
cld
mov
lret
add
insb
aaa
jl
adc
cmp
sub
lods
fildll
push
fiaddl
mov
fisubl
lea
aas
incl
cmpsl
gs
push
cs
jp
jae
add
adc
fdivrs
jo
mov
adc
sub
mov
lret
shlb
pop
lods
xchg
mov
mov
pop
adc
pop
call
std
dec
repnz
mov
or
imul
pop
or
test
sar
call
and
pop
iret
push
mov
stc
mov
mov
add
cmp
pop
mov
inc
pop
fbld
ljmp
ljmp
pusha
mov
clc
incl
push
adc
pop
cmp
sbb
cli
and
or
adc
mov
stos
stos
jns
jns
mov
push
daa
push
pushf
mov
sub
aad
scas
jmp
push
notl
aas
pop
js
stos
fs
insl
push
xor
add
and
pop
insl
std
mov
mov
ljmp
mov
or
ja
sub
xor
enter
adc
mov
mov
adc
enter
push
popa
and
stos
mov
in
out
sbb
pop
xor
jne
out
out
adc
outsb
mov
fcomip
cmp
sub
jmp
stc
clc
loope
insb
in
dec
inc
pop
out
lods
out
jmp
iret
enter
cld
pop
pop
clc
mov
fisubs
repnz
add
cmp
das
cmp
je
xlat
mov
mov
rcr
int3
jecxz
add
push
test
fcmovnbe
cld
pop
test
jne
or
fisttps
adc
imul
fdivs
jg
cwtl
scas
pop
adc
fildl
arpl
fisttpll
inc
aam
pushl
hlt
inc
mov
mov
cmp
jp
xor
int3
cmp
add
loop
movsl
push
loope
push
cmp
popf
and
movsl
cmp
pusha
addr16
fs
pop
lea
and
das
xor
pusha
inc
or
cmc
jno
jne
aaa
cld
lcall
or
addr16
pop
fadds
jle
sti
call
iret
adc
loopne
fistpl
into
jo
pop
sbb
insb
sbb
lret
test
int
daa
ljmp
decl
dec
pop
out
stc
and
lahf
adc
ss
in
push
mov
stc
rorl
repz
push
pop
push
mov
dec
nop
push
iret
stc
inc
mov
int3
jg
popf
inc
decl
insb
lock
xchg
sub
cmc
les
xchg
sbb
fwait
xchg
stc
call
shll
or
ljmp
enter
enter
incl
subl
jne
out
lcall
scas
mov
pop
jo
dec
repnz
clc
mov
lock
jp
xchg
push
lods
jmp
ljmp
incl
fs
mov
mov
cmpsb
orl
outsl
adc
mov
mov
mov
ljmp
pop
loop
out
mov
mov
sbb
or
or
mov
in
hlt
pushf
gs
lcall
je
daa
xchg
cmp
sbb
ret
imul
mov
out
xor
imul
sbb
in
lods
cmp
mov
mov
test
cld
push
sti
test
and
cwtl
xor
stos
aaa
insl
mov
xlat
test
in
clc
xorb
jns
mov
jmp
adc
cmp
adc
shll
xchg
lds
ret
add
xor
xchg
mov
push
sub
es
aaa
push
push
pop
lods
call
jbe
clc
pop
incl
lret
cld
and
mov
mov
sar
testb
xor
ljmp
popf
rcl
shrl
cmp
sbb
adc
into
lea
jp
icebp
lds
or
incl
testl
push
sub
mov
lods
xchg
movsb
xchg
xchg
mov
mov
push
shlb
addl
outsb
into
pushl
cmp
mov
mov
movsl
scas
testb
loop
dec
xchg
xchg
cmp
call
sbb
push
test
jle
or
mov
gs
outsb
in
lret
add
pop
cmp
incl
xchg
inc
ja
imul
nop
aas
lret
cmp
sarl
pop
outsl
repnz
jnp
cmp
imul
mov
jl
xchg
popf
push
fisubl
cs
ljmp
shl
xlat
adc
pop
ljmp
fdivp
ja
xchg
xor
sbb
stc
or
ljmp
incb
jle
mov
lods
pslld
cmp
imul
call
ficoms
and
test
rorb
popa
inc
popa
negl
cwtl
call
inc
sbb
mov
incl
pop
lcall
xchg
jnp
xchg
or
lods
bound
out
test
int3
repz
decl
addr16
loop
sti
aaa
mov
xor
inc
mov
cmp
inc
jg
push
decb
push
cmp
fstp
int
out
and
jp
js
push
sbb
ljmp
xlat
push
mov
adc
stc
and
pop
jno,pt
daa
enter
xor
or
mov
adc
push
xchg
push
frstor
jmp
push
ret
stos
lods
out
add
cmp
xchg
and
lret
loopne
ret
add
cmp
cld
f2xm1
pop
mov
jmp
sub
dec
push
mov
rol
and
repnz
mov
mov
mov
xchg
and
decl
std
repz
lods
mov
stc
sahf
cmp
lock
pushl
daa
mov
push
sahf
les
ret
dec
test
mov
xchg
xor
adc
loopne
push
fwait
incb
inc
loopne
rclb
clc
jg
push
inc
adc
fldenv
movsl
leave
mov
int
out
adc
out
push
lds
mov
jo
mov
xlat
cmc
sbb
paddb
dec
dec
cmpsl
sbb
adc
les
push
les
incl
jecxz
frstor
sbb
data16
pushf
repnz
sbb
and
pop
or
jg
sbb
dec
shr
enter
loop
clc
in
out
popf
insl
jmp
pop
sub
pop
das
outsl
les
jecxz
bound
inc
shrb
mov
push
push
or
sub
fisttps
and
mov
push
mov
std
pushf
or
sbb
adcl
adc
loopne
add
pop
jmp
fdivrp
adc
jmp
fimull
pop
arpl
out
aam
mov
pop
xchg
push
xor
ljmp
add
or
fisttpl
pop
clc
jge
daa
push
dec
sahf
ja
in
aad
aad
inc
std
sti
insl
dec
inc
pop
xor
push
dec
mov
mov
cmp
or
push
and
rol
push
push
or
xchg
push
or
dec
arpl
adc
cld
push
inc
fs
mov
jg
lcall
decl
dec
mov
stc
fcomi
cmpsl
and
sbb
mov
test
ljmp
stos
lret
or
push
lret
daa
dec
adc
jb
jns
insb
or
sbb
fcomip
inc
lret
add
push
clc
xlat
xchg
cmpsl
pop
pop
or
iret
movsl
es
mov
mov
cli
je
cli
js
rcl
add
mov
es
pushl
mov
fwait
push
xor
test
test
pop
aam
cmovle
lcall
vmovhps
jp
pop
mov
loopne
mov
jns
lret
mov
cmc
jmp
mov
ja
push
out
cltd
gs
jb
loopne
sub
jne
shlb
scas
add
and
pop
loopne
dec
push
push
mov
fisubrl
outsl
and
clc
ljmp
and
sahf
mov
inc
cmp
dec
ljmp
pop
dec
cmp
mov
cltd
xchg
loope
cmpsl
xor
adc
pop
jnp
push
cmp
push
and
pop
and
sbb
inc
pusha
inc
xor
and
lret
xchg
sub
ljmp
ds
xchg
sti
push
sbb
cld
ret
and
jb
inc
sbb
popf
pop
xchg
fisubrs
loope
ljmp
xor
mov
test
mov
xchg
pop
repz
sub
pop
repnz
add
dec
sub
pop
sarb
or
pop
clc
test
sub
and
nop
inc
jmp
clc
mov
mov
inc
push
xor
outsl
push
roll
sbb
jne
xchg
outsb
out
nop
or
mov
push
dec
jmp
sbb
inc
push
test
xchg
clc
lcall
or
adc
mov
sub
pop
lcall
inc
mov
sti
push
pop
incl
push
jnp
mov
lods
push
mov
mov
push
mov
mov
stc
xchg
jae
push
stos
add
outsl
rcl
pavgb
bswap
je
insl
mov
jmp
jg
test
dec
xor
xor
mov
adc
stc
lds
cmp
adc
jns
inc
pop
xor
imul
mov
mov
aam
in
stc
mov
or
dec
cs
test
std
pushl
sub
lcall
test
cmp
push
push
xchg
xor
cmp
mov
iret
xor
add
das
mov
push
xchg
dec
into
and
mov
dec
das
fs
pop
int
ljmp
imul
push
adc
dec
dec
pop
incl
jb
bound
rorb
cmp
les
inc
push
mov
idiv
call
xor
jo
imul
sbb
inc
push
jle
inc
adc
and
jge
fdiv
fs
dec
mov
in
cmp
arpl
sahf
cwtl
inc
dec
andb
rclb
dec
mov
xor
push
js
sbb
pop
pop
cmp
cmp
js
push
data16
mov
mov
out
adc
popf
fadds
mov
xchg
or
ds
sbb
scas
fistps
xor
adc
inc
sbb
xor
movsb
or
push
cmp
decl
mov
cmpsl
mov
inc
xor
lods
out
sub
test
ret
aam
lock
dec
xchg
lods
add
ljmp
push
or
xchg
pop
stos
arpl
and
mov
lds
and
js
leave
push
ljmp
outsb
ss
hlt
mov
subb
inc
cmp
in
add
push
out
push
mov
stos
cmp
pop
sahf
mov
nop
pop
es
inc
push
cltd
shlb
lcall
testb
cmc
or
sbb
cli
aas
out
fidivl
adc
sti
sbb
mov
lahf
mov
cli
jne
cmp
sbbl
pop
test
xchg
jmp
jge
mov
xor
mov
insb
jbe
mov
std
iret
scas
xor
cmp
mov
mov
cld
push
mov
stc
test
call
pop
jp
cmpsl
adc
inc
cmp
push
xchg
dec
pop
jp
stc
push
add
nop
mov
adc
les
push
das
gs
xchg
flds
ljmp
aad
xchg
mov
fwait
jl
push
bnd
pop
pop
push
dec
jo
iret
xor
inc
fidivrs
std
pushl
adc
mov
mov
sub
xchg
and
mov
mov
bound
xchg
loop
stc
dec
ljmp
clc
mov
push
add
mov
nop
or
ficomps
jnp
inc
movsb
fs
cmp
inc
je
xchg
and
mov
call
insl
ficompl
iret
xchg
pusha
pop
jl
ljmp
dec
sub
imul
push
gs
xorb
jecxz
in
decl
pop
hlt
add
insl
xchg
or
add
dec
dec
stos
lret
ljmp
std
lret
jnp
shlb
fsubp
test
pop
call
xchg
or
push
loopne
daa
div
push
pop
and
or
test
out
jl
arpl
or
in
inc
fs
push
push
shr
add
pop
fbld
pushl
addb
sbb
pop
pop
mov
imul
scas
out
cli
jg
xchg
mov
outsl
mov
lods
sub
negb
ljmp
push
add
test
sahf
dec
xorl
xchg
es
jb
mov
jmp
lahf
rclb
repz
frstor
xchg
aad
loop
shrl
inc
divl
push
std
ljmp
mov
aas
pop
scas
xchg
or
adc
jmp
shr
insb
cmpsl
push
data16
mov
or
es
jb
jg
scas
inc
add
mov
aas
les
inc
data16
fdivrs
xor
js
dec
mov
sub
decl
jle
pushf
mov
jae
mov
pop
test
scas
mov
arpl
loope
js
xor
mov
scas
add
mov
xchg
mov
dec
lahf
cld
addr16
dec
call
pop
jmp
adc
int3
pop
add
repz
dec
sbb
mov
add
fimuls
add
mov
jmp
lcall
insb
mov
xchg
jl
mov
mov
loopne
rorl
inc
adc
decl
in
fdivs
daa
and
fcomip
pop
mov
inc
adcl
inc
loope
mov
test
adc
fildl
in
sub
jns
inc
das
frstor
push
out
outsb
push
pop
call
cli
call
in
scas
dec
enter
sub
data16
ficoms
inc
or
and
xor
ljmp
gs
sub
mov
cld
sub
lods
fs
mov
sub
sub
lds
std
cmp
insb
mov
sbb
adc
movsb
jmp
inc
mov
clc
decl
mov
dec
sbb
mov
jo
cs
inc
and
jle
out
lods
push
push
xor
jne
mov
xor
mov
push
or
push
fnstcw
xor
push
lods
add
in
lcall
fldl
and
mov
jnp
push
pushf
icebp
bound
call
in
mov
jle
xlat
xchg
sub
sbb
out
adc
leave
jge
xor
cmp
fs
leave
mov
mov
ss
pop
jae
in
orl
add
lea
loope
aam
cmpsb
mov
pop
and
test
arpl
or
jl
aas
imul
incl
inc
jp
xor
inc
add
call
scas
inc
popf
out
ds
dec
pop
das
push
scas
mov
cmpsl
sub
out
mov
decl
enter
ret
outsb
jns
dec
lods
cmpsb
and
adc
hlt
aam
or
jg
enter
jmp
dec
or
and
mov
cld
mov
mov
pop
out
inc
aam
stos
inc
cld
cld
fistpl
das
or
or
int
xchg
out
xchg
jne
push
in
ljmp
dec
mov
dec
ret
xlat
outsb
int
and
cmp
mov
dec
jle
xchg
test
inc
fldcw
je
cmpsb
addr16
adc
loop
mov
imul
leave
add
orb
notl
adc
outsl
test
jge
pop
lea
dec
mov
lret
sbb
xor
mov
pop
std
dec
fwait
scas
mov
ds
push
push
jmp
pop
test
fldt
iret
inc
mov
pop
call
rcl
divb
dec
mov
jmp
mov
xchg
inc
xchg
pop
cli
mov
push
and
xor
mov
fidivl
ds
ret
mov
or
ja
bound
decb
dec
imul
push
push
div
fldcw
ret
ja
out
dec
xchg
cmc
popa
dec
aas
xchg
call
scas
int3
xchg
fucomi
leave
mov
cld
jne
sbb
out
mov
pop
aad
sti
and
es
adc
adcl
in
pushf
push
add
jmp
call
mov
jecxz
inc
xor
add
mov
sahf
cwtl
and
xchg
xchg
sbb
adc
hlt
mov
xchg
xchg
mov
xchg
push
shll
jg
pop
xor
mov
lods
mov
cli
je
imulb
push
cli
add
lret
mov
lcall
add
sbb
movsb
xor
dec
pushfw
cmp
scas
sti
imul
mov
mov
mov
mov
jbe
jmp
int3
dec
cmpsb
pop
movsb
sub
fsubs
or
call
sbb
aad
incl
cmp
ss
std
lods
pop
jns
and
sbb
and
rol
cmp
decl
add
mov
das
test
dec
mov
add
fdivs
jmp
inc
ss
arpl
fwait
adc
xor
push
jbe
ds
pushl
mov
repz
jo
jle
in
mov
or
out
cmp
test
xchg
mov
mov
nop
jne
pushf
ret
xchg
hlt
cmpsl
push
stos
inc
pushl
cld
mov
mov
imul
subl
mov
incl
mov
cmp
or
dec
jg
lret
shl
scas
xchg
cs
mov
sub
push
and
outsb
outsl
dec
mov
or
in
mov
les
add
xlat
push
lret
cwtl
xchg
pusha
inc
dec
cmp
sub
js
hlt
pop
mov
lds
sub
mov
mov
cli
or
in
mov
aaa
cmpl
fcomip
mov
mov
xor
hlt
dec
aad
std
daa
xchg
dec
ret
aaa
movsb
lods
repz
call
enter
push
icebp
rcrl
cmp
and
dec
adc
imul
add
imul
mov
ljmp
leave
lcall
sub
das
fdivrs
pop
mov
imul
mov
call
mov
dec
mov
and
sbb
adc
xor
idiv
decl
sub
scas
cmp
xchg
push
cmp
adcb
push
aaa
adc
or
mov
sub
push
pushf
iret
xor
or
and
mov
xor
add
mov
and
ljmp
cmpsl
scas
pop
pusha
popf
inc
cmp
int3
dec
cwtl
enter
sbb
xchg
gs
dec
pop
ljmp
mov
lahf
jp
push
cmp
aas
inc
mov
cmp
in
jecxz
lcall
mov
fnstcw
sub
mov
jle
fwait
mov
test
sbb
js
cs
mov
into
xchg
xchg
pop
test
stos
pop
int
sti
add
scas
cs
mov
jno
loop
inc
sbb
std
aad
mov
push
add
jge
lcall
and
outsb
adc
dec
dec
aaa
inc
cmp
repnz
hlt
test
dec
xor
pop
lcall
push
lods
xchg
cmp
cmova
sub
call
shrb
mov
imul
ds
add
adc
inc
and
inc
cmc
inc
shrb
xor
insl
mov
sti
movsb
outsb
add
pop
adc
xor
sub
test
inc
scas
jecxz
xor
xor
pusha
mov
lea
inc
sub
testl
and
idiv
incl
fsubp
in
in
cmp
jae
jno
adc
xchg
xor
out
and
pushl
int
push
not
inc
popa
lret
add
jb
scas
cmp
pop
sbb
xchg
fisttpl
std
cmp
incl
lea
in
dec
mov
aaa
into
rcrb
flds
sub
loopne
pop
loopne
lock
es
cmpsl
lds
jmp
add
loop
ljmp
loopne
dec
xchg
mov
mull
icebp
outsl
enter
outsb
cli
mov
mov
pop
or
mov
pusha
in
iret
fmuls
sarb
dec
sar
jecxz
mov
in
or
dec
es
add
cmp
pop
sbbb
mov
insb
jnp
fidivl
pop
mov
push
mov
in
mov
mov
iret
pop
mov
jg
fisubl
mov
push
sbb
outsb
out
js
cmpsb
xlat
sbb
repnz
decl
adc
xchg
test
sub
hlt
scas
daa
pop
pop
inc
mov
cmp
pushl
cmc
dec
xchg
sbb
inc
mov
push
insl
ret
enter
cld
sub
leave
loope
aaa
ret
cmp
add
cmp
outsb
push
push
mov
mov
lahf
mov
decl
mov
cmp
xchg
insb
enter
xor
and
mov
outsb
sbb
adc
sti
adc
jp
mov
das
pop
xchg
lcall
movsl
jle
mov
mov
imul
incl
dec
dec
push
mov
nop
sbb
push
sbb
aas
daa
fld
scas
movsb
outsl
cli
call
int3
jge
test
loop
push
jmp
xchg
das
sub
add
lcall
mov
inc
and
loopne
call
inc
xor
xlat
push
inc
sub
std
cmp
scas
mov
ffreep
sub
sub
xchg
mov
idivl
aad
inc
jb
cmp
sbb
mov
mov
stos
into
adc
mov
dec
insl
data16
sub
cmpb
xchg
pop
dec
ss
shrb
shrl
push
and
mov
pop
std
cli
and
sub
inc
xchg
out
dec
scas
ss
inc
fdivl
mov
mov
std
inc
mov
jo
ficomps
fldt
xorps
pop
cld
or
outsl
ss
push
sbb
pushf
js
sub
jbe
jg
into
pop
loope
sti
xchg
lds
cmpsb
mov
mov
push
xor
fs
gs
xor
xchg
sahf
xchg
lods
pop
push
test
lcall
mov
lock
mov
cs
sarb
xchg
adcb
data16
cmc
pop
decl
fwait
pop
mov
iret
call
cmp
jns
outsb
cs
nop
jbe
scas
insb
push
fdivr
call
and
cmc
inc
sbb
inc
mov
or
xchg
cltd
adc
outsb
inc
pop
in
and
add
inc
shr
fldcw
adc
inc
fcoms
lods
mov
jmp
push
pushl
inc
cld
jnp
adc
mov
jb
pop
ret
mov
decl
imul
cmovnp
shrl
pusha
mov
push
mov
imulb
dec
dec
fisttps
je
sub
cmp
jb
fwait
cld
pushl
pop
xlat
xor
jb
lahf
xchg
icebp
int
and
movsl
mov
sbb
fisubrl
aad
repnz
fldt
and
push
add
enter
lcall
out
inc
stos
fidivrl
bound
jns
andl
inc
add
cmp
iret
das
fdivrp
lcall
mov
xor
shlb
ja
pusha
int3
cmp
mov
inc
adc
clc
or
fcoms
adcb
jmp
clc
pop
cmp
aaa
in
push
inc
loopne
cli
pushl
hlt
inc
mov
mov
pop
sbb
lods
and
push
in
xchg
dec
pop
xchg
pop
and
ljmp
outsl
jae
mov
std
daa
stos
dec
rorl
call
pop
int
and
lcall
and
jl
dec
cs
inc
nop
jg
xchg
and
addr16
das
cli
out
clc
jg
fists
fcoml
enter
dec
scas
aas
push
sar
ljmp
in
sub
fstpl
sbb
mov
ljmp
or
loop
add
mov
daa
mov
adc
cmp
sub
lahf
es
incl
mov
xchg
popa
aas
or
in
sub
ja
es
subl
pop
adc
ljmp
sar
clc
dec
fwait
xchg
xchg
jbe
lods
sub
stos
sbb
xchg
es
jmp
sar
std
mov
out
mov
pushf
fwait
int3
test
push
xchg
or
in
fs
decl
lock
and
mov
nop
mov
push
adc
jns
push
in
pop
roll
sahf
fisttps
mov
and
mov
mov
pop
movsb
pop
cmp
call
pop
insb
jno
sahf
mov
dec
cmp
sbb
adc
cs
decl
mov
call
add
push
xor
pop
pop
xor
and
loop
decl
ljmp
jge
mov
cli
cli
fisttps
pop
inc
ja
adc
fucomp
in
pop
push
insl
arpl
dec
cmp
jmp
inc
outsl
mov
mov
int3
mov
aam
call
pop
imul
test
repz
lcall
pushl
outsl
and
xchg
dec
or
adc
sbb
iret
lcall
dec
pop
in
sti
fs
cmp
pop
shlb
sbb
add
pop
xchg
int
aas
mov
or
fucomip
ret
imul
dec
jb
add
cwtl
and
cmc
jg
es
out
jb
pop
dec
push
inc
pop
rcrb
adc
adc
cli
mov
rep
jp
fildl
pop
add
shll
mov
jbe
lahf
out
lret
outsl
pushl
xchg
out
movsl
fadd
inc
int
mov
mov
mov
pushl
xchg
mov
ret
jno
lret
aaa
cld
call
jecxz
pop
mov
fdivrp
daa
push
lea
loop
cmc
mov
inc
repnz
fdivr
aaa
fwait
clc
ss
fstl
add
xor
nop
lahf
decl
mov
pop
pop
mov
movsb
push
faddl
and
push
pop
adc
stos
and
and
xor
sub
dec
ljmp
pop
sahf
fisubs
ret
mov
ret
add
pop
adc
xor
fsubl
repnz
test
ljmp
jnp
sbb
es
inc
into
or
test
rcll
xchg
divb
push
out
incl
jecxz
cs
pop
add
push
add
xchg
movsb
dec
mov
inc
es
movsl
into
xchg
jmp
and
imul
or
test
mov
jmp
inc
add
arpl
js
aad
lock
je
fcoms
adc
and
fsubrl
incl
out
sub
sbb
push
sub
popf
xchg
pop
xchg
lret
hlt
jmp
dec
jle
push
adc
add
test
pop
ljmp
jl
fildll
push
jbe
cld
push
sbb
lret
dec
dec
cmc
inc
shl
mov
jmp
cltd
jnp
addl
cli
or
fistpll
or
lods
jge
sub
mov
mov
cs
mov
mov
popl
push
and
test
and
push
sbb
pop
std
test
incl
jp
dec
cld
jo
mov
jb
adc
mov
pushl
push
imul
loope
sub
pop
mov
lea
push
and
jb
insb
stc
popa
addr16
pushl
dec
stos
int
iret
mov
dec
sbb
cmp
dec
insb
pop
pop
mov
mov
lods
ljmp
mov
das
cmpsb
mov
pop
incl
outsl
daa
dec
lea
xor
shrb
cmp
cmovne
or
dec
scas
ret
sub
or
call
lcall
mov
jmp
mov
data16
push
jle
lds
or
jg
or
mov
sbb
mov
adc
mov
jge
fcomip
pusha
ja
insl
je
out
adc
xor
aaa
adc
inc
jns
inc
leave
and
clc
pop
jmp
int
sbb
push
cmp
jb
mov
cld
jb
ljmp
mov
xor
and
popa
mov
add
ljmp
shl
mov
xorb
push
shrb
bound
aaa
xchg
bound
shlb
cmp
cli
mov
cmpsb
xchg
and
xchg
out
mov
push
cmp
into
decl
leave
test
xor
add
adc
nop
xor
lods
dec
push
loop
sbb
pop
loopne
loopne
xchg
testb
fsubrl
add
adc
shl
inc
inc
or
incl
add
and
lock
xor
imul
outsb
add
sbb
movsl
mov
ss
decl
jmp
fidivs
xchg
push
outsb
cltd
insb
sar
popf
lcall
xor
not
outsl
pop
jnp
enter
stos
lcall
rclb
sbb
decl
ljmp
and
aaa
jne
lea
dec
std
jnp
mov
dec
dec
and
mov
sbb
fadd
test
inc
cli
or
xlat
push
add
add
pop
lahf
or
incl
jecxz
lods
sub
mov
inc
jge
in
xor
sbb
jecxz
pushf
lea
incl
std
sub
loop
orb
mov
loop
mov
xchg
mov
dec
cmp
sbb
fldenv
ret
push
pop
push
dec
mov
lods
aas
nop
shrb
adcb
lcall
mov
movsl
inc
into
bound
jne
fmul
call
pushl
test
outsb
adc
or
and
aas
insl
pop
mov
aas
push
mov
inc
cmp
add
and
ss
loop
aam
idiv
mov
loope
lds
es
repnz
testb
inc
xlat
repnz
imul
ljmp
xor
lcall
outsl
inc
cltd
bound
pop
pop
or
out
adc
cmp
adc
jne
xchg
jmp
mov
push
dec
cmp
xor
inc
mov
mov
neg
out
daa
andb
divl
mov
mov
xchg
push
mov
icebp
call
std
add
ljmp
int
ret
dec
sub
mov
pop
decl
adc
push
vpperm
jle
mov
pop
add
dec
push
js
inc
in
scas
sarl
mov
mov
sbb
inc
xchg
jne
ljmp
dec
and
lods
jmp
orb
and
cltd
jle
outsb
and
dec
jl
dec
jnp
add
sbb
and
insl
cltd
pop
mov
gs
dec
aam
pop
push
enter
mov
jmp
push
insl
mov
adc
jge
sub
mov
gs
outsl
cli
pop
std
sub
add
lahf
loop
popf
xor
pusha
dec
lret
mov
pop
mov
pop
enter
fidivrl
stc
xchg
sub
shl
lcall
incl
sbb
inc
enter
jp
mov
xor
mov
decl
pop
ret
stos
je
movsl
push
add
lods
pop
inc
push
sbb
imul
xchg
loopne
or
pop
dec
adc
pop
pop
subb
push
dec
repz
daa
and
xor
out
aaa
pop
adc
cmp
ret
xor
or
lock
xor
mov
outsl
clc
mov
movsl
and
xor
lret
aaa
dec
or
inc
test
adc
mov
lcall
mov
fsubs
xchg
imul
popa
jns
xchg
or
jg
and
dec
xor
push
movsl
aas
rcrl
xlat
nop
out
push
and
push
xchg
sbb
pop
enter
or
mov
mov
or
cmp
lcall
push
lods
or
xchg
xlat
mulb
shlb
sbb
sahf
or
push
daa
call
call
data16
ret
push
mov
insl
xchg
insl
mov
cltd
inc
call
lods
inc
pop
xchg
inc
sub
push
ficomps
fs
pop
rcll
clc
incl
xor
jbe
sbb
bnd
mov
scas
xor
ljmp
bound
divb
and
sub
imul
sbb
lock
push
in
out
cmp
add
mov
xchg
shlb
leave
jnp
fsubrp
inc
out
call
pop
push
push
push
mov
cmpsl
repnz
or
lret
iret
push
je
xchg
fistpl
push
mov
stc
ds
loope
bound
adc
ds
dec
lret
dec
push
sbb
test
cmc
div
push
loopne
decl
movsb
repnz
xchg
fwait
je
cmp
mov
gs
push
xchg
xchg
frstor
mov
sub
cmpsb
lock
push
decl
sub
inc
lret
inc
stos
aad
adc
lret
fstl
out
push
add
aaa
in
mov
lods
icebp
filds
rolb
mov
and
decl
out
mov
movsl
lea
pop
sub
fcomip
pushl
aam
mov
adc
arpl
jecxz
or
pop
fwait
inc
popf
cmp
lods
call
push
lock
jmp
pop
add
add
fistl
jo
mov
jg
fcmovne
jmp
mov
cld
out
xchg
push
mov
and
outsl
add
decl
orb
rol
sub
jnp
ficoml
push
inc
mov
call
dec
shlb
jp
fisubrs
test
sbb
pop
pop
mov
repnz
fiadds
jbe
test
cmp
pop
pop
incl
pusha
insb
mov
jg
out
mov
inc
idivl
sbb
xchg
enter
test
nop
movsl
xchg
stos
push
inc
movl
incl
cli
rol
movsb
sbb
adc
pop
cmp
add
mov
notb
push
or
repnz
pop
cltd
fwait
jmp
sub
push
in
xor
lahf
cmc
out
std
jmp
cmp
and
call
xchg
push
mov
pop
pop
jnp
mov
add
push
mov
jmp
pop
mov
xchg
mov
aam
outsl
push
pop
sub
loopne
clc
sbb
xor
ja
mov
ja
rcr
push
mov
cmpsl
icebp
fidivl
mov
addr16
push
xor
arpl
mov
cmpsb
mov
mov
pop
cmc
subl
ljmp
jno
dec
pop
xchg
hlt
ljmp
inc
jne
mov
aad
push
mov
cmp
out
repz
lret
push
xor
lcall
adc
sahf
mov
pop
cmp
mov
nop
mov
pop
and
mov
inc
fbld
push
xchg
cmp
js
push
cmc
call
lret
sub
mov
adc
adc
ljmp
inc
lock
xchg
sbb
dec
or
pushl
mov
adc
ret
out
mov
sbbl
lods
aaa
push
negl
add
ss
jae
loop
sbb
call
loope
call
das
filds
mov
lret
push
fldl
ja
iret
cmp
les
pushl
or
mov
pop
inc
xchg
into
fistpll
mov
mov
daa
mov
ret
or
incl
in
sbb
cmp
sahf
les
pop
dec
cltd
out
lret
and
test
fdivs
or
andb
adc
hlt
add
mov
decl
jmp
loope
sub
out
sub
outsb
scas
mov
incl
lret
sbb
negb
xchg
push
and
pop
and
mov
adcl
push
lods
test
ja
jmp
gs
cltd
test
ds
mov
icebp
lods
add
imul
ljmp
sbb
imulb
es
in
mov
cli
call
das
pusha
out
lret
jns
push
fcoml
in
mov
jg
sub
mov
pop
xchg
and
sbb
int3
pop
push
shll
ljmp
add
cmp
dec
inc
int3
arpl
mov
repz
stc
rcrb
mov
sti
lret
test
sub
into
dec
jl
jp
jmp
or
mov
repz
inc
and
cmp
js
testb
scas
xchg
pusha
mov
bound
dec
mov
lcall
adc
xchg
xchg
lods
mov
jae
popf
aam
aam
push
aad
int
add
mov
inc
xchg
pop
pushl
lods
in
jmp
push
jbe
addb
sbb
pop
jne
lahf
pusha
and
push
out
mov
jnp
idiv
addr16
push
fs
or
inc
sbb
xchg
test
mov
push
inc
xchg
adc
xor
xchg
xchg
dec
dec
sub
lods
cmp
mov
cmc
push
cmp
xchg
out
outsb
subl
idivl
test
aas
lahf
jmp
insl
out
test
js
lods
pusha
cmp
rolb
add
cld
cmpsb
xor
cmc
adc
aam
mov
add
inc
and
out
idivl
push
call
pushl
cld
ljmp
nop
test
mov
clc
js
aam
push
or
loopne
call
sub
adc
xchg
jnp
ficoml
jl
mov
icebp
pushl
mov
jo
filds
loope
inc
ret
jnp
lahf
jno
mov
mov
lcall
pop
fwait
int
mov
add
jo
pop
jno
sahf
popf
daa
imul
jl
mov
lcall
je
mov
fwait
pop
mov
or
and
insb
pop
fidivs
sbb
sbbl
or
mov
nop
jno
xor
negl
push
outsl
pusha
jnp
mov
mov
imul
inc
enter
pop
ss
in
add
jo,pt
cmp
pop
test
sbb
lcall
addr16
xor
sti
out
addl
scas
and
pushf
push
test
push
decl
cmp
xor
inc
mov
sbb
bound
xchg
loopne
inc
pop
xor
add
fidivl
adc
incl
lahf
inc
sub
sbb
ret
jg
pop
pop
leave
pop
inc
or
inc
stos
xchg
mov
dec
mov
push
stc
xor
inc
add
lea
and
pop
jns
or
divl
jle
icebp
insl
jecxz
jbe
incl
scas
inc
dec
dec
leave
ss
nop
add
std
adc
sub
repz
loopne
dec
sub
and
inc
jno
pop
pop
mov
rcrb
mov
adc
sbb
push
pop
insb
add
lock
xlat
mov
aam
ljmp
xchg
out
setno
fsubrl
mov
lock
sub
int
cli
ljmp
fstps
movsl
bnd
push
push
inc
push
test
fwait
jle
in
xchg
add
push
mov
rolb
pop
cmp
rcll
aam
insb
mov
in
lock
rolb
lret
adc
push
and
js
es
out
hlt
jb
and
out
jmp
add
in
cld
mov
loope
out
mov
je
adc
mov
incl
js
test
fs
push
dec
popf
xor
int
dec
je
xchg
sbb
call
mov
lds
sbb
push
lods
xor
mov
push
push
shrl
imul
push
sub
sub
and
pop
cld
push
cmp
inc
pop
jg
aam
mov
sub
jmp
and
mov
repz
jne
mov
test
rcl
adc
enter
pusha
cli
mov
mov
ret
aad
mulb
dec
daa
pushf
popf
sub
mov
mov
pop
inc
mov
adc
aaa
sti
xchg
loope
mov
sbb
adc
lcall
xchg
cwtl
mov
jne
inc
daa
loop
jmp
mov
das
lcall
adc
mov
test
pop
sub
ds
inc
dec
insl
jne
sub
jle
xor
je
xchg
imul
and
rolb
aas
mov
decl
sub
xchg
out
pop
sub
ljmp
or
je
orb
lret
daa
insb
sbb
test
cmc
pusha
sub
ljmp
jecxz
jns
pop
pop
fistpl
add
cmpsb
hlt
fwait
or
lcall
mov
pushf
fstpl
imull
adc
mov
les
inc
mov
decl
or
jbe
sbb
jp
mov
mov
cmpb
inc
mov
iret
inc
movsl
out
scas
pop
push
pop
dec
outsl
scas
sti
pop
mov
stc
aad
jne
scas
insl
ljmp
sar
jb
jns
adc
movsb
fidivrl
xchg
add
cld
dec
ljmp
clc
icebp
fstpt
fucomp
pop
push
test
sub
dec
and
dec
aad
inc
mov
int
faddp
push
mov
mov
cwtl
jecxz
into
clc
xchg
xlat
sbb
call
rolb
pop
std
sbb
jbe
cmpsl
pop
sbb
enter
icebp
xchg
xchg
stos
ds
je
push
dec
incl
and
jmp
in
push
push
pushf
inc
cmp
stc
pop
mov
decl
pushaw
call
cmpsl
add
les
ja
or
pop
lret
or
incl
in
in
imul
ss
lcall
loopne
les
dec
sbb
mov
xchg
add
jl
sbb
scas
pushl
adc
jp
rcll
orl
sahf
push
icebp
loope
mov
mov
mov
in
ljmp
cli
lcall
mov
stc
mov
jne
mov
adc
pop
pop
sub
call
sbb
mov
mov
jnp
sti
pop
add
decl
les
jecxz
out
js
popf
cmpsb
inc
cmc
insl
pop
out
gs
cli
sub
movsb
std
mov
incl
add
cmpsb
jg
pop
inc
test
hlt
lahf
ljmp
push
cmpb
push
fcomi
push
jo
cmp
push
or
rorl
xchg
jge
cmpsl
jbe
pusha
movsb
icebp
push
das
lods
cld
call
mov
mov
loop
rolb
movsl
xchg
sbb
sbb
sbb
jnp
and
cmp
mov
ds
rclb
neg
repz
incl
cltd
xor
out
pop
cli
shl
jle
jbe
inc
mov
sti
sbb
fidivs
dec
pushl
fstl
sub
mov
mov
outsl
jbe
ret
add
cmpsl
push
lret
ja
sarb
xchg
adc
dec
dec
ljmp
inc
les
lds
es
fwait
jmp
push
sbb
and
inc
sub
push
jnp
enter
inc
adc
neg
mov
loop
imul
incb
into
jg
popf
iret
and
jb
or
ja
or
mov
push
es
mov
mov
ret
add
dec
or
sbb
mov
jg
ljmp
pop
mov
mov
arpl
xor
cli
call
or
mov
sub
aaa
xor
lods
inc
or
jmp
sbb
xchg
fwait
aam
repz
or
mov
testl
inc
jmp
mov
jg
sub
push
xor
inc
test
fmul
sub
pop
sahf
mov
push
aas
xchg
mov
data16
call
mov
xchg
cmp
lahf
mov
adc
mov
test
js
jg
ljmp
mov
xor
pop
xchg
push
jbe
out
es
xor
shl
scas
loop,pt
popf
jae
insl
sbb
out
adc
fwait
adc
hlt
cmp
and
cmp
outsb
cmovb
cs
dec
adc
inc
mov
mov
mov
shlb
cltd
push
jnp
dec
inc
dec
mov
iret
add
pop
mov
imul
jg
and
mov
push
movsl
call
pop
adc
insb
inc
adc
jae
inc
sahf
adc
jg
decl
insb
int
ds
or
push
inc
mov
and
ds
das
lds
incl
ror
je
rcrb
mov
and
push
mov
jle
addb
ud0
inc
imul
lret
jbe
loope
xchg
pop
sub
or
mov
das
jge
xorl
adc
incl
pop
dec
or
push
pop
jg
and
push
dec
shll
mov
inc
cltd
dec
pop
push
pushl
mov
xor
pop
add
out
lods
xlat
cmpsl
or
lcall
mov
ljmp
outsb
jns
push
js
dec
dec
inc
cmpsl
movsb
in
push
in
pop
adc
add
xchg
ljmp
rcll
and
das
sbb
inc
inc
popf
add
das
in
add
dec
push
jg
lcall
mov
mov
aam
aam
loope
jb
ret
adc
mov
cld
pushl
std
push
cmc
addl
lock
lret
xor
jno
mov
jb
cld
add
mov
sbb
call
loop
hlt
jl
decl
ds
xor
clc
mov
cli
cmp
ljmp
xchg
shr
and
test
push
das
inc
dec
clc
popa
adc
sub
es
decl
and
jmp
add
mov
xchg
xchg
mov
sbb
ljmp
jmp
inc
popa
mov
aad
mov
inc
mov
push
sub
decl
hlt
movsl
jno
dec
push
adc
in
jns
sub
ret
mov
les
sub
push
sbb
test
dec
mov
scas
aam
dec
insb
repz
lods
or
mov
jmp
mov
jg
push
push
fmuls
mov
decl
push
adc
imul
mov
call
mov
push
push
scas
inc
rorl
cmp
addr16
inc
cmp
ret
jecxz
push
mov
fildll
or
rol
ja
mov
jl
xchg
imul
jne
mov
stos
fsubs
adc
ss
insb
and
push
or
sbb
sbb
cli
ljmp
cwtl
mov
cmp
dec
push
repnz
adcb
lahf
pop
fistpl
or
jns
pop
lods
mov
test
loop
mov
adc
je
sbb
hlt
push
lcall
clc
push
fiaddl
enter
stos
adcb
mov
daa
xor
das
cli
pushl
pop
inc
mov
arpl
mov
loopne
ljmp
sar
fisttpll
ljmp
cmp
loopne
fcomps
arpl
dec
pop
ljmp
scas
sbb
xchg
xchg
sub
mov
ss
loope
decl
or
push
mov
int
or
inc
call
sbb
pushf
pushl
psadbw
out
and
orb
mov
sti
push
enter
xor
lods
in
mov
sahf
lcall
xchg
sbb
loop
xor
fistpl
pop
rcl
sbb
je
mov
xor
arpl
inc
rcll
stc
lret
and
fcmovnu
mov
movsl
dec
xchg
pop
inc
xlat
sub
mov
mov
arpl
push
scas
call
clc
rclb
mov
repz
iret
lds
mov
es
jge
lods
out
pop
mov
mov
mov
fs
stos
mov
push
cli
cmp
inc
loopne
push
pmullw
mov
ljmp
push
nop
mov
cmp
cmpsb
stos
fwait
mov
xchg
jle
lret
call
jmp
jo
push
stc
popf
jge
xchg
mov
or
sbb
sahf
mov
xchg
lret
lcall
xchg
pop
push
pop
or
int3
es
outsl
push
xlat
mov
pop
xor
loop
ljmp
mov
sbb
and
pop
push
mov
jno
repz
mov
mov
sub
out
pop
sbb
xchg
or
cmpb
lock
loop
and
lcall
ss
insb
push
mov
ss
inc
adc
jmp
xor
mov
pop
movsl
sarl
imul
pusha
fdecstp
decl
in
sbb
adc
jge
in
jo
stos
shrl
test
outsl
and
jo
jmp
sub
sarb
sahf
addb
dec
mov
xchg
mov
pushl
dec
leave
and
mov
inc
cltd
fmul
xchg
xchg
adc
or
jmp
add
fisubrs
lcall
arpl
push
push
sahf
and
fdivl
mov
fsub
push
subb
lahf
roll
ljmp
dec
stos
sbb
lret
daa
daa
pop
mov
shlb
push
xor
mov
ret
inc
fisubrl
or
jne
cld
jno
aas
cmpsl
sub
ret
shll
sbb
popa
outsl
add
jmp
pop
cmc
jnp
cmpsb
adc
sub
cld
fstpl
incb
movsl
jg
inc
mov
dec
sub
cmp
inc
and
pushl
fs
insl
cmp
fldcw
pop
dec
xor
inc
arpl
imul
aaa
scas
dec
pop
stos
xlat
lods
mov
or
in
add
call
movsb
jo
sarl
cmp
lds
in
xlat
fstpl
dec
int
aaa
mov
pushl
mov
pop
std
nop
and
data16
mov
inc
out
pop
pop
sub
xchg
mov
xchg
adc
adc
stos
movsl
dec
jg
mov
pop
cli
adc
push
lret
push
aaa
xor
pop
dec
or
bnd
js
jge
into
outsl
inc
rorb
cmp
icebp
lret
pusha
xor
cltd
add
dec
mov
stos
call
aaa
or
sbb
adc
call
out
add
pop
jp
stos
xchg
popf
xchg
mov
decl
pop
sub
cmp
stos
jp
jb
into
mov
and
pop
imul
call
xor
ret
pushw
jg
xor
lcall
lds
mov
fs
cli
bound
inc
in
lock
and
fldenv
and
xor
jg
lahf
cmp
pop
dec
mov
aas
jge
fsubs
bound
adc
addb
xchg
fs
pushl
data16
imul
ljmp
xchg
int
std
fstpt
push
js
mov
clc
adc
gs
shr
movd
rcrl
das
dec
pop
pop
push
sub
call
pusha
mov
xchg
mov
test
adc
cmp
ja
fmuls
mov
mov
fwait
in
lock
dec
addr16
xlat
repz
cmpsb
movsl
jns
jle
mov
out
cmc
fcmovnbe
scas
jno
test
xor
adc
int3
mov
push
jb
sbb
and
popa
inc
sar
enter
adc
repz
adc
mov
xor
adc
dec
das
cmp
jg
dec
fnstcw
sbb
iret
pop
les
daa
shr
mov
ljmp
xchg
inc
lret
imul
sbb
neg
and
inc
clc
loope
adc
rcr
cmc
int3
stc
pop
aam
ja
cli
xlat
pop
lods
scas
mov
cld
jo
sub
mov
xor
out
daa
nop
call
fwait
push
test
fldcw
mov
incl
jmp
test
aas
loop
dec
loop
je
xchg
enter
or
or
sub
std
lcall
mov
dec
cmc
into
ljmp
add
lock
xchg
and
sarl
out
sbb
aam
push
mov
or
pop
lock
das
xor
in
lcall
cmpsl
sbb
add
xor
dec
daa
fiadds
out
lods
push
nop
out
ror
cmp
and
dec
ja
decl
dec
dec
mov
add
test
in
pop
jecxz
pop
movsl
push
jl
stos
and
incl
sub
xor
jbe
int3
jmp
push
pop
adc
or
aad
icebp
jecxz
call
jmp
cwtl
stos
mov
test
xchg
and
inc
stos
mov
push
sbb
xlat
inc
jp
and
es
mov
rcrl
xchg
outsl
cmp
insl
fsubrs
adc
outsl
lcall
push
fmull
stc
push
pop
cmp
movsb
xchg
sahf
inc
xchg
pop
mov
push
loope
lahf
idivb
aad
mov
mov
in
push
fsubrs
xchg
in
in
jg
jge
loopne
cmp
test
jmp
ja
jno
push
pop
lret
push
sti
xor
sbb
pop
mov
int3
das
pop
xor
mov
es
sbb
and
int
in
scas
mov
sarb
or
pop
test
in
push
arpl
sbb
fsubs
add
outsl
dec
xor
inc
les
mov
push
mov
insl
ss
pop
shrl
fs
pop
push
pop
clc
imul
pop
add
ss
test
lea
pop
xor
in
sti
sub
xor
jg
loope
cmp
xchg
jecxz
cmp
xor
incl
and
adc
sub
cli
mov
add
inc
pop
cmp
sub
fstl
loope
mov
mov
call
testb
inc
shll
cld
popa
cmp
push
or
mov
mov
adc
xchg
decb
into
push
xor
out
aad
clc
ljmp
pop
popa
mov
mov
ret
add
faddl
jmp
inc
repz
inc
push
pop
lret
mov
loop
out
fdivs
lock
stc
dec
lahf
lret
ljmp
and
push
lea
mov
xor
out
jne
xchg
cmp
inc
test
fwait
push
outsl
cli
pop
or
or
lret
xor
jns
fs
decl
inc
sbb
ror
dec
lock
dec
mov
jae
mov
fldt
insb
ljmp
ds
enterw
mov
cmp
outsl
mov
imul
cmp
cmpsl
push
lcall
mov
aaa
adc
test
mov
ret
repnz
jmp
in
sbb
mov
sahf
ds
scas
cmp
mov
enter
push
jae
adcb
decl
sarb
mov
cmp
push
jns
xchg
push
test
jmp
call
inc
xor
incl
fmuls
shl
std
add
sti
pop
bound
insb
jmp
icebp
or
dec
movsl
inc
call
push
enter
inc
lds
rcl
dec
out
mov
mov
xchg
aaa
mov
ret
dec
sub
jg
hlt
pop
outsb
sub
push
cmp
pop
mov
cwtl
bound
push
dec
add
fidivrl
sbb
orb
adc
push
and
mov
test
add
jbe
ljmp
rcrb
mov
sub
xor
jecxz
mov
fisttps
push
outsb
cwtl
mov
mov
decl
xchg
add
iret
xchg
fdiv
icebp
ret
mov
lahf
lret
test
or
clc
or
incl
jnp
pop
pop
addb
inc
push
and
dec
mov
xor
pop
sarb
adcl
adc
cli
in
clc
cli
push
je
sbb
cmp
orl
sbb
loope
push
out
inc
popa
mov
imul
jg
inc
mov
xor
mov
pop
mov
icebp
in
push
stc
xchg
mov
test
push
movsl
mov
nop
pop
std
int
scas
ljmp
push
sbb
rcll
ss
in
cmp
adc
mov
mov
and
insl
stc
push
in
call
push
roll
xor
pushf
xchg
adcl
push
or
iret
mov
fmuls
mov
clc
imul
pop
shlb
shll
mov
adc
lds
push
lods
int3
mov
ftst
xlat
cmp
mov
push
pop
xor
shrb
stc
add
and
mov
dec
add
decl
sbb
adc
dec
notb
mov
cmp
ljmp
cmc
adc
fisttpl
fsub
inc
xchg
out
or
dec
dec
inc
jg
lods
pop
cmpsb
cmpsb
push
xchg
mov
hlt
mov
test
pushl
add
sub
fidivrs
push
pop
sarb
test
xchg
mov
lock
clc
or
popa
jp
insl
pop
mov
jg
jle
lock
out
lahf
sbb
aam
outsb
xchg
loop
test
ljmp
push
mov
cmpsl
rol
sub
stc
mov
jno
inc
adc
addl
ljmp
xchg
mov
mov
fsubs
shl
jnp
imul
decl
aaa
add
and
jge
mov
pop
cmc
sub
scas
cli
ljmp
popa
repz
aam
push
jae
cmp
clc
jb
int3
jmp
ja
decl
mov
test
lahf
add
pop
fcompl
mov
cmpb
loopne
jge
jl
clc
ja
mov
cltd
and
imul
lret
xchg
sbb
or
adc
jae
test
and
fwait
mov
add
pushf
mov
add
or
add
incl
jnp
add
fildl
fdivs
jo
mov
jg
dec
add
pop
ret
pusha
jg
inc
add
stc
imul
mov
addb
push
test
push
mov
or
and
push
movsl
bound
push
pop
cmp
add
nopl
push
or
adc
or
jno
mov
jnp
xchg
movsl
push
daa
add
xchg
xlat
mov
cld
dec
and
cmpsl
push
and
cs
push
movsb
push
mov
inc
scas
push
stos
push
and
in
cld
pop
push
push
test
and
imul
sbb
pop
add
push
dec
lods
push
mov
pop
sbb
add
imul
push
add
push
ds
les
push
jg
adc
fs
mov
insb
or
lret
imul
imul
imul
push
stos
dec
jecxz
add
fld
fdivs
cmpsl
fldcw
pop
stos
pop
stos
mov
call
jbe
add
jo
mov
fdivl
jno
add
outsl
push
shll
fidivrl
iret
outsb
or
out
adc
ja
ret
je
fidivrs
mov
cs
mov
xorb
ljmp
pushl
in
movsb
push
add
mov
sbbl
push
mov
pushw
arpl
push
push
push
add
insb
pop
roll
jne
push
aam
push
ret
gs
or
mov
push
pop
dec
ficompl
pushf
addb
jbe
push
data16
jne
notl
inc
xchg
cs
xlat
cmp
out
shlb
lret
stos
aas
jmp
cmp
add
ja
push
push
xlat
jne
add
pop
jbe
fdivs
push
aad
push
xlat
ja
outsb
fiaddl
mov
or
jns
push
jp
jp
mov
or
push
fidivrl
sarl
ja
pop
mov
les
je
jmp
fisttpll
cs
ljmp
xchg
in
xchg
sub
rolb
cs
xchg
xor
xchg
push
setbe
fstpt
dec
fisttpl
push
sahf
in
jge
lcall
push
cmp
pushf
cmp
iret
push
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
std
scas
fst
lahf
mov
mov
push
negb
pop
movl
repz
add
lock
hlt
clc
stc
iret
repz
cli
sti
cld
std
incb
pop
and
jo
add
mov
jae
add
imul
popa
push
add
pop
add
mov
insb
add
pop
add
add
mov
xchg
out
out
add
mov
or
outsl
aas
fldt
or
or
test
test
lods
stos
stos
cmpsl
or
push
sbb
or
pop
pop
adc
int3
pop
pop
adc
lods
add
pop
add
add
pop
mov
insb
pop
mov
add
scas
insl
adc
pop
lods
pop
pop
adc
and
adc
sbb
repnz
sbb
scas
scas
scas
scas
sbb
sbb
mov
and
mov
movsb
imul
mov
add
mov
shlb
and
mov
lock
and
mov
mov
pop
and
movsb
mov
and
or
sub
pop
sub
mov
or
in
pop
sub
xchg
mov
sub
das
or
es
dec
repz
aas
cmp
pop
insl
push
mov
cmp
pop
aaa
cmpsb
mov
mov
pop
xor
pop
or
xor
xor
or
add
pop
mov
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
mov
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
jmp
dec
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
and
incl
movsb
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
decl
xchg
nop
xchg
xchg
sub
dec
ja
jns
dec
mov
sub
js
imul
cmp
je
nop
shrb
jg
xor
push
repz
or
add
inc
or
push
inc
pop
mov
dec
jle
jns
fbstp
mulps
add
push
mov
cmpsb
push
mov
movsb
push
sub
js
xor
xor
ja
push
ja
jb
shll
xor
mov
pop
fstpt
and
jbe
dec
sbb
shr
and
mov
xchg
jo
or
in
pop
push
inc
mov
cmp
mov
inc
aas
outsl
push
mov
enter
xchg
jp
inc
push
popf
inc
mov
aaa
add
addr16
xchg
jno
lret
push
bound
mov
mov
mov
lahf
inc
inc
push
sahf
mov
insb
data16
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
add
push
movsb
jae
add
jb
shll
jg
addb
mov
aad
imul
add
add
lcall
outsb
mov
mov
push
add
ja
sahf
jbe
fistpl
imul
mov
stos
push
add
and
sti
inc
cli
jp
add
js
mov
data16
shrl
jns
jns
insb
pop
outsb
push
outsl
rorb
jle
push
ds
jno
add
jge
push
jg
subb
fiadds
call
subl
mov
in
add
es
bound
out
arpl
push
loopne
iret
sahf
mov
mov
add
xchg
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
xor
outsl
push
fildl
adc
push
adcl
addb
sbb
test
mov
sarb
test
in
mov
push
xchg
outsb
push
insb
addr16
and
out
xchg
in
xchg
lock
sub
cwtl
add
push
sub
imulb
mov
mov
cltd
xor
cwtl
push
cmc
sahf
xor
mov
push
icebp
fwait
cmpsb
pop
cmp
mov
aam
jle
push
inc
inc
clc
add
test
sahf
mov
pop
jbe
stos
into
shll
mov
lgs
int
mov
mov
ds
mov
sarb
sarl
rcl
mov
into
add
add
mov
push
dec
and
dec
out
je
dec
daa
nop
add
add
mov
mov
femms
or
or
or
es
push
adc
cmp
push
add
add
ds
cmpsb
std
inc
incb
mov
mov
mov
xor
ds
xchg
push
mov
and
sbb
mov
shrb
push
add
and
loopne
out
pop
jnp
cs
mov
aas
and
sub
xor
jns
stos
or
aas
aas
cmp
cmp
aaa
add
push
roll
scas
cmp
fcmovbe
out
mov
jle
cmp
ja
lock
mov
dec
in
sti
insb
in
aas
adc
ds
xor
dec
mov
test
mov
scas
sbb
add
out
decl
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
mov
movsb
movsl
mov
lcall
dec
xor
sub
sub
sub
sub
ljmp
mov
sub
dec
and
inc
mov
sar
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
nop
das
xchg
lcall
xchg
xchg
mov
nop
test
decl
je
xchg
jns
jle
addl
stos
cli
jno
outsl
outsb
pushf
sti
lds
daa
mov
loopne
shr
and
push
addb
add
add
or
jg
ja
push
push
add
cmc
repz
dec
xor
bound
jae
aas
add
xchg
pop
cmp
test
add
mov
add
ljmp
mov
push
mov
fnstsw
repnz
inc
add
addr16
add
mov
popf
add
ret
push
in
lcall
or
mov
fdiv
push
or
jae
js
pop
into
xchg
add
mov
mov
test
rorb
sub
es
out
pop
add
push
xchg
push
sub
fcmovne
insb
push
nop
sub
xchg
xor
xchg
xor
insl
lcall
leave
jbe
idivl
mov
sahf
in
fidivrl
shlb
iret
push
lret
mov
xlat
push
std
into
and
out
fldcw
xchg
add
test
jg
jle
jge
and
cmp
push
xchg
and
mov
dec
mov
gs
adc
add
cmp
add
mov
adc
dec
or
add
push
adc
add
enter
inc
or
pop
pop
cmovg
inc
push
dec
aas
in
lcall
and
adc
outsl
jmp
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
and
push
add
push
sti
stos
lods
mov
addb
mov
pop
mov
mov
pop
mov
mov
ss
add
outsb
or
fnstenv
add
add
pop
sbb
addb
add
push
cmpsl
inc
jo
and
or
incl
dec
add
mov
loope
xlat
sbb
incl
shll
outsb
sysret
mov
es
lcall
cltd
fdivrs
data16
pop
stc
sysret
in
mov
stc
hlt
inc
sub
sub
push
push
mov
ja,pn
or
pop
aaa
outsl
cwtl
test
rcrl
xor
pop
lahf
inc
mov
ret
into
jg
jmp
mov
cli
mov
cli
fbld
inc
or
and
inc
and
jle
sub
jns
cli
push
sbb
mov
mov
mov
loopne
and
das
sti
mov
add
mov
jle
inc
dec
push
mov
cmp
jg
xchg
add
inc
mov
jg
or
sbb
jg
pop
mov
push
cld
jg
inc
add
push
fadds
sarb
std
mov
or
ja
jg
xor
and
jg
pop
inc
enter
sbb
jg
xchg
adcl
jg
xor
or
and
push
pusha
jmp
or
decl
cmp
sub
incl
or
add
or
inc
cmpsb
or
sub
and
arpl
mov
or
sbb
push
jbe
and
mov
test
jmp
sbb
scas
incl
add
addl
jmp
lods
jle
lret
imul
and
push
add
addl
lcall
sub
rorl
and
add
add
xor
scas
mov
jg
push
adc
push
jg
adc
mov
add
xor
jg
subb
pop
lret
and
add
jle
fistl
pop
fdivrp
cmpsb
ljmp
out
mov
xor
pop
pop
pop
add
mov
insl
arpl
aas
aaa
pop
pop
mov
xchg
addl
nop
imul
push
inc
test
or
test
jle
sbb
mov
test
jle
push
dec
xchg
into
imul
push
mov
outsb
in
push
comiss
daa
push
arpl
mov
addr16
pop
push
mov
arpl
out
cmpsl
test
mov
dec
mov
lcall
sub
jmp
and
scas
dec
outsb
push
jle
jle
sbb
out
mov
idiv
fnstenv
add
fs
repz
jne
pop
push
jbe
sub
ss
push
jnp
push
jp
mov
inc
decb
js
dec
jbe
pop
scas
jmp
in
add
mov
mov
inc
ja
push
push
outsb
mov
ljmp
jmp
iret
dec
call
or
cmp
ss
pushl
dec
and
call
mov
mov
jns
fiadds
and
lahf
mov
push
mov
outsl
mov
sahf
inc
out
test
mov
mov
xchg
int
scas
cs
aas
popf
inc
push
pushf
cmp
or
ss
push
xchg
xor
sub
insl
fucomi
nop
sub
nop
daa
ss
cs
jbe
cmpsl
test
outsb
aam
xor
decl
incl
jg
inc
int
aas
pop
fnsave
xor
decl
and
sahf
xor
fs
pop
xchg
add
cmpsl
es
pop
ja
dec
mov
pushw
movb
push
hlt
dec
pop
ja
aam
cld
xor
push
ja
add
pop
push
out
inc
add
inc
addb
push
subb
add
add
pop
add
adc
push
adc
pop
push
orl
lea
aas
outsl
sub
inc
and
cmp
movsb
stc
push
lock
cmp
cmp
jg
jb
icebp
imul
push
inc
out
add
mov
adc
pop
aam
decl
out
mov
mov
mov
sub
out
in
inc
rol
push
push
sbb
xor
jb
mov
inc
xor
negl
jmp
syscall
mov
lds
mov
ss
incb
xchg
mov
lcall
or
mov
sub
daa
cld
pop
das
xorb
jp
subl
insb
lahf
or
std
out
push
inc
loopne
jg
lcall
or
sub
sti
sysret
and
ds
imul
push
pushl
jmp
pushl
sub
lcall
decb
adc
or
jmp
lcall
sub
lea
and
or
mov
and
add
mov
mov
or
fwait
and
adc
mov
out
setp
or
lcall
incb
lods
inc
or
and
sysret
mov
es
or
mov
dec
and
sub
rolb
leave
sbb
push
std
lcall
movsb
insl
and
xor
fcoms
pop
stc
jg
push
call
jg
adc
es
cli
sub
jmp
mov
inc
and
adc
incl
nop
cmp
jle
test
fcmovbe
jnp
mov
pop
pop
inc
xorps
test
mov
imull
push
shll
sbb
push
dec
sahf
ret
xchg
fisubrs
movsb
incl
fidivs
test
lahf
inc
inc
push
inc
mov
xlat
dec
inc
pop
inc
pop
mov
mov
pop
sahf
movsb
dec
push
stos
push
xchg
jns
popfw
inc
cmpsb
dec
dec
inc
into
pop
rcll
dec
mov
dec
or
push
shlb
mov
mov
push
rcl
outsb
shrb
movsb
xor
push
jb
movsb
enter
das
push
iret
insl
xor
cltd
test
imul
notb
push
dec
push
xchg
push
ljmp
call
aam
lcall
mov
pop
add
repnz
and
popfw
cmp
push
pushf
cmp
aas
decb
cwtl
xor
push
inc
push
xchg
fldt
push
push
aaa
push
lcall
dec
rclb
xchg
xchg
xchg
notb
sub
es
call
xchg
lcall
cs
mov
retw
push
add
or
xchg
js
std
faddl
jge
push
jnp
imul
or
fwait
dec
mov
jge
jg
es
aaa
xor
add
fidivrl
push
dec
push
dec
repnz
ss
sti
push
repnz
jae
pop
fidivrl
push
mov
jnp
scas
loope
out
add
in
add
int3
outsb
nop
testl
addb
xchg
lods
sbb
ljmp
out
lods
inc
pop
or
imul
repz
cmpb
jnp
stos
cld
decl
dec
es
addl
orb
fst
jmp
xchg
out
push
sub
iret
out
mov
mov
cli
pushl
clc
push
idiv
mov
repnz
push
jb
sub
jg
fldl
mov
dec
pop
cld
ja
pop
pop
daa
jno
sub
jg
mov
push
pop
inc
test
jg
dec
outsb
xorb
fidivs
push
enter
xchg
cld
jp
push
in
dec
es
xchg
aaa
nop
mov
jge
and
fs
and
jg
dec
pop
push
dec
jo
sarb
ret
push
push
ja
dec
and
jge
push
test
and
decl
incl
push
fsub
pop
inc
cli
adc
push
inc
push
int3
mov
jle
mov
fidivrl
arpl
clc
pop
xchg
and
mov
push
cmp
pop
push
pop
sbb
ljmp
and
dec
ds
lcall
xchg
test
push
jns
mov
int3
data16
pop
push
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
insl
or
or
testb
push
aad
fiadds
add
inc
or
movsb
xlat
push
cmovno
loope
and
fisubs
dec
fwait
adc
xchg
mov
arpl
push
mov
or
add
mov
subb
lock
adcl
push
dec
aad
lret
adc
call
sbb
adc
sub
pushf
inc
inc
test
pop
push
mov
popf
insl
sbb
push
sbb
push
or
and
adc
fisttpl
push
sbb
outsb
or
test
push
xchg
incl
mov
push
addl
nop
mov
jbe
mov
xchg
mov
mov
invlpg
dec
fyl2x
inc
push
gs
jo
js
add
add
add
std
and
add
sub
das
jo
mov
jl
dec
sbb
aaa
xchg
mov
mov
add
dec
test
addl
lods
and
xchg
inc
jmp
lahf
jo
das
sbb
dec
push
popf
sbb
inc
sub
imul
ss
std
pusha
insl
adc
inc
aas
add
jno
sub
add
imul
jno
dec
les
add
jno
aad
mov
add
lea
jno
xchg
adc
cmp
sbb
jno
adc
adc
lods
add
adc
dec
les
cmp
popa
pop
popf
in
fistpl
rcll
popa
bound
inc
xchg
mov
je
sub
jae
add
jno
or
push
fiaddl
sbb
add
filds
das
adc
pop
mov
test
jno
gs
roll
add
sbb
and
and
mov
xchg
mov
pop
loop
lcall
lahf
push
lea
rcll
mov
pop
cmpl
scas
jo
xor
dec
push
outsl
loop
imul
push
and
sub
cs
fwait
cmp
xchg
bound
arpl
mov
dec
insb
out
inc
imul
sbbl
sub
adc
xor
mov
jne
or
adc
in
push
inc
and
mov
or
add
sbb
jecxz
movsb
lea
add
inc
sbb
movsb
push
and
arpl
in
mov
pop
arpl
cmp
pushf
mov
add
bound
fiaddl
imul
pop
push
sbb
xchg
aad
rcll
mov
jne
inc
dec
adc
sbb
sbb
cmp
jo
xchg
push
mov
in
push
dec
in
xchg
xchg
mov
sbb
pop
or
mov
xor
pop
sbb
sub
or
adc
cmp
mov
and
iret
jecxz
xchg
pop
subl
mov
push
scas
sbb
push
inc
cltd
push
push
jb
dec
xchg
mov
jmp
or
imul
shl
inc
je
pop
xlat
pop
test
mov
mov
and
xor
pusha
adc
adcb
pop
test
add
cmp
icebp
and
xor
add
add
insl
xchg
add
insb
adc
mov
mul
sub
cmp
dec
fbstp
es
xor
movsl
add
push
fisubrl
mov
out
sub
sbb
sbb
ja
sbb
xor
inc
test
jg
mov
or
bswap
mov
je
jne
inc
mov
sub
outsl
jae
pop
xchg
and
outsl
mov
loope
sub
mov
add
push
add
xchg
dec
fldenv
pop
fisubs
loopne
clc
insb
mov
inc
arpl
mov
pop
adc
ds
sub
aas
sub
xchg
pop
sub
mov
imul
mov
ss
shlb
jnp
push
inc
insb
fwait
shll
dec
fstpt
inc
pop
sbb
arpl
inc
movsl
insl
insb
jae
inc
push
fistl
sbb
es
lds
stos
mov
insb
xlat
and
sbb
cmp
inc
sbb
pop
mov
int
sbb
jne
adc
fs
or
push
adcb
popa
rcpps
js
push
or
fimuls
xchg
dec
jne
mov
add
inc
imul
fisubrl
insb
push
or
sbb
push
or
daa
push
and
mov
xchg
push
cld
sub
fs
mov
push
neg
fwait
push
mov
loope
xor
repz
insl
arpl
xchg
add
or
mov
push
jg
jns
or
and
popf
lods
xor
cwtl
test
cmp
sub
inc
xor
xor
push
not
and
mov
arpl
outsb
inc
sbb
inc
sbb
sbb
pop
and
es
mov
outsb
dec
std
lea
jge
shlb
in
xor
sub
push
push
js
add
add
add
sbb
mov
cmpsb
imul
sub
cmpsb
imul
cmpsb
imul
dec
inc
mov
push
es
pop
inc
push
daa
pushf
add
mov
or
add
mov
and
adcb
jp
push
and
shlb
popa
sub
out
test
lods
test
popf
stos
lcall
subb
cmp
push
imul
push
mov
adc
lods
add
inc
insb
scas
movsb
dec
mov
mov
sbb
mov
nop
xorl
add
or
xchg
nop
jns
sub
jo
inc
sbb
push
push
dec
in
add
sarb
sbb
test
out
mov
or
and
andl
js
lods
dec
mov
arpl
push
mov
nop
push
jge
sahf
imul
out
pushf
xor
mov
hlt
and
push
dec
cmp
imul
mov
inc
insb
sub
rclb
inc
shr
push
pop
lret
inc
lock
shrl
hlt
mov
xchg
mov
fcoml
ss
xlat
adc
das
test
xor
inc
fadds
xor
mov
mov
mov
and
push
cmp
and
mov
inc
aaa
outsl
mov
mov
mov
jno
ret
lods
outsb
jbe
mov
add
cmpsl
adc
stc
adc
es
insl
add
mov
pop
mov
dec
je
sbb
insl
dec
inc
push
dec
inc
adcb
rclb
test
shrl
cld
addr16
adc
arpl
enter
test
pop
xor
adc
les
jmp
nop
adc
test
sbb
imulb
pop
adc
nop
fs
mov
cmp
jns
stos
xor
and
cmp
jbe
sub
out
mov
cmp
mov
fiaddl
xchg
or
inc
scas
inc
sub
fidivl
aaa
mov
add
mov
add
or
call
adc
jns
mov
inc
out
mov
incl
sub
lods
xchg
sbb
sbb
adcl
xor
lcall
mov
out
inc
test
sub
cmpsl
dec
dec
ja
imul
shll
add
aaa
or
movsb
pop
sub
sub
leave
add
out
rcl
call
dec
mov
ja
gs
dec
roll
and
push
or
das
divl
insb
add
add
jo
jbe
rorl
mov
and
mov
add
cmpsb
add
lock
lock
jno
movl
insb
mov
mov
adc
inc
sbb
adc
call
push
cld
push
scas
mov
ja
sarb
or
xor
cwtl
push
xlat
imul
push
pop
ja
jp
pusha
push
sahf
mov
xor
xor
inc
cmp
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
