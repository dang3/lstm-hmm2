divl
in
mov
mov
cwtl
js
add
add
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
xor
inc
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
mov
andl
push
push
sbb
push
aam
jg
sti
repz
punpckhwd
add
add
mov
mov
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
je
ds
incl
sti
inc
add
add
call
jle
add
mov
mov
jmp
push
mov
lock
add
sahf
or
sbb
pop
inc
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
sub
outsb
sub
sbb
push
push
cwtl
in
add
mov
add
loop
mov
fchs
fsubrs
cmp
cld
mov
sbb
push
push
lods
or
pop
inc
add
fdiv
fistpl
fldt
inc
add
test
mov
ds
je
pop
add
pop
mov
push
cmp
loopne
cmp
shlb
js
pop
add
sbb
sbb
mov
aad
add
cmp
mov
xchg
nop
cmpsb
jae
dec
add
sub
in
out
dec
push
cmp
call
pop
int
addr16
or
popa
call
sbb
adc
inc
jmp
push
push
cld
hlt
ja
mov
in
inc
inc
mov
dec
pop
and
mov
pop
jge
mov
jmp
push
or
cmp
inc
inc
sahf
imul
mov
fistpll
js
jmp
sahf
cmp
mov
mov
adc
xchg
int3
push
pop
mov
pop
subb
jb
mov
stc
lcall
sub
push
and
inc
cmp
mov
sub
cmp
push
stc
mov
neg
out
mov
add
and
sbb
add
jae
sub
mov
mov
out
cmp
lock
adc
enter
add
sbb
jle
sbb
cmp
cmc
loope
add
cmp
or
je
or
push
sbb
dec
lock
cmpsl
add
call
cmp
loop
cld
jb
inc
push
popf
sbb
push
into
es
insl
jo
dec
push
incb
inc
and
pop
and
test
shrb
mov
jle
xor
test
iret
sub
jo
push
rolb
push
fimuls
sub
stc
add
in
inc
push
xchg
and
loope
xor
add
subl
and
or
push
or
enter
inc
and
pop
nop
xlat
cmp
and
std
repz
mov
push
fwait
je
bound
add
xchg
lods
jae
adc
mov
in
cmc
insl
mov
int3
push
xchg
mov
or
inc
jmp
push
cmp
loope
jnp
aad
push
xchg
lret
stmxcsr
adc
pop
ja
push
xchg
loop
mov
lret
shlb
adc
sbb
jns
es
push
sub
push
outsb
push
shrb
add
xor
cmp
sbb
test
movsl
jns
roll
scas
inc
pmulhw
xchg
jbe
repz
jmp
jo
in
adc
scas
in
jns
and
add
or
adc
inc
mov
or
iret
out
jo
sbb
sbb
inc
mov
push
pop
pop
in
in
cmpsb
xlat
dec
and
pop
int3
aam
mov
cmp
adc
mov
lods
sbb
xor
or
or
jle
pop
adc
jmp
pusha
sbb
movsb
push
mov
cmpsl
inc
jmp
repz
clc
pop
push
jae
push
mov
mov
pop
pushf
xchg
cld
cmp
mov
in
inc
pop
and
push
push
push
cmp
jle
or
loopne
test
push
ja
mov
push
push
push
shl
cmpsb
call
lock
add
mov
add
and
pusha
push
mov
scas
sti
loope
jl
push
xchg
or
insb
out
sti
or
mov
sub
ror
lcall
adc
mov
pop
pop
jle
movsl
cltd
mov
loop
and
push
mov
push
xor
out
lret
inc
mov
jns
jbe
ss
rclb
mov
jno
stos
mov
lea
ret
movsb
inc
mov
hlt
je
sbb
mov
lea
mov
mov
aaa
je
add
fidivrl
adc
cli
mov
popf
mov
js
jno
ficoml
imul
push
adc
sbb
out
mov
xchg
pop
pushf
js
mov
push
cmp
push
adc
or
mov
xor
jae
or
mov
jge
mov
xchg
and
jo
adc
es
sbb
or
pop
push
das
push
xchg
cmc
push
stc
pop
pop
mov
mov
mov
and
mov
xchg
popa
push
and
mov
sbb
gs
in
xor
popw
dec
ret
push
mov
push
fcomps
jbe
fidivrl
dec
insl
icebp
sbb
jns
adc
or
push
ljmp
mov
cmp
ja
xchg
cmp
jne
pop
mov
shl
mov
pop
js
icebp
stos
jle
or
je
sub
dec
pushl
pop
in
and
mov
adc
xchg
inc
sub
adc
mov
in
pop
mov
mov
lds
xor
push
push
mov
cmp
mov
sub
or
add
sbb
sub
sub
call
mov
test
jne
fdivrp
push
sbb
inc
cmp
jl
jmp
pop
xor
jns
push
push
pop
add
pop
push
pop
jmp
sub
add
cli
jl
pop
mov
ret
pop
test
mov
icebp
mov
inc
out
push
push
xlat
test
shl
sbb
or
mov
mov
mov
pushl
out
add
add
push
ss
andl
icebp
dec
or
add
cmp
shlb
jl
push
mov
and
sti
adc
adc
mov
pop
pop
ret
push
push
inc
cmp
jo
sbb
rcl
popf
fucomp
pop
or
repnz
dec
mov
mov
and
sub
jne
pop
arpl
sub
push
cs
shlb
xor
cld
in
scas
jge
push
mov
sub
pop
js
sub
pop
cmp
mov
jge
or
xchg
out
test
inc
or
or
jle
mov
mov
add
aaa
inc
jl
pop
lea
push
mov
imul
push
clc
sti
add
lock
mov
push
adc
faddl
mov
push
xor
ret
ss
icebp
cmp
cmp
push
add
cs
popa
mov
cmp
std
adc
adc
data16
xor
addb
mov
or
stc
jne
mov
xor
in
adc
popf
pusha
lock
pop
mov
lds
push
ja
lea
decb
pushl
cmp
push
sub
pusha
mov
pop
popaw
fadd
add
gs
pop
pop
arpl
adc
mov
cmp
pop
xor
or
enter
je
pop
push
or
cwtl
rcl
mov
ljmp
movsb
pop
cmp
push
mov
jle
je
scas
shll
push
cmpsl
jbe
jo
test
pusha
lret
ss
push
push
popl
adc
mov
pop
xchg
mov
loopne
je
pop
imul
loopne
mov
sysenter
test
jecxz
mov
sbb
xor
leave
test
frndint
add
add
addl
push
sub
push
loop
fistps
mov
int3
cmp
or
lds
mov
js
out
adc
into
je
jnp
push
ret
cmpl
inc
adc
push
jne
push
push
jge
js
and
ret
nop
pop
pop
jmp
ss
int3
fcomps
fwait
movsl
mov
dec
dec
xor
mov
inc
sub
inc
or
sbb
adc
call
flds
roll
clc
jg
inc
ficomps
movb
sbb
jae
rcrl
data16
stc
cmp
or
inc
inc
or
shlb
adc
xchg
cmc
xchg
mov
mov
je
pop
cmpsb
je
fadd
das
inc
pop
and
jl
dec
xchg
sbb
sub
divb
adc
push
test
pop
pop
adc
dec
push
push
call
outsl
sub
daa
dec
into
cs
and
ss
pop
sbb
push
cli
pushf
mov
ds
enter
mov
mov
mov
mov
cld
and
out
lods
mov
mov
ret
inc
or
scas
push
in
dec
adc
pop
lret
aad
cmp
loop
add
clc
sub
xchg
roll
cmp
xlat
cmp
xor
cmpl
jle
push
daa
sbb
test
mov
mov
jle
ret
in
xor
shlb
push
out
xor
mov
cmp
push
sub
push
and
mov
shll
loopne
jmp
imul
add
test
das
mov
adc
adc
inc
test
ret
pop
push
jmp
ljmp
pusha
les
or
bound
hlt
mov
cmp
mov
lock
cltd
add
fs
cmp
in
pop
push
ret
push
lds
jns
popa
jge
sarb
jo
out
cmp
xlat
mov
dec
sub
pop
xchg
xor
inc
mov
dec
mov
cmp
daa
or
in
js
mov
rol
push
aam
cs
filds
decl
js
add
iret
or
or
and
loope
ffree
adc
lea
push
mov
mov
pop
jmp
test
je
sub
mov
xchg
les
repnz
call
out
pushl
movsl
test
push
mov
jg
ret
push
mov
mov
inc
ret
push
push
cmp
sbb
cwtl
insb
ret
scas
pop
ds
cli
mov
aaa
and
negb
add
repz
int3
bound
pop
iret
js
mov
dec
shlb
xchg
in
enter
add
mov
xor
fwait
add
mov
and
mov
adc
add
nop
cmp
add
mov
mov
inc
and
pop
add
arpl
sbb
das
or
shll
add
push
push
pop
enter
add
fptan
inc
adc
sbb
iret
fstpl
sub
sbb
test
sti
outsb
das
sbb
sbb
add
push
roll
or
push
or
pop
cwtl
xor
or
into
adc
pop
lcall
jo
push
adc
test
or
add
imul
pop
inc
test
dec
or
lock
divl
enter
je
movups
sbb
and
stc
adc
cmp
popf
addl
lds
pop
sbb
test
icebp
mov
mov
push
cltd
pop
mull
mov
addb
push
jge
push
rcrl
adcb
push
pop
mov
dec
sbb
pop
adc
and
add
jmp
jecxz
push
push
jbe
call
push
in
mov
je
and
jmp
sub
mov
je
insb
adc
in
jge
adc
push
addr16
mov
dec
ss
dec
fs
loopne
sbb
jmp
sub
aas
or
xchg
jecxz
adc
int
jp
jecxz
fcomip
inc
addr16
jne
jp
sub
sbb
rorb
insb
xor
xchg
jo
lea
add
mov
scas
jmp
std
stos
adc
out
sub
mov
daa
jp
push
xchg
adc
push
mov
or
loope
push
mov
push
sbb
mov
mov
jg
cld
adc
loopne
push
or
sti
sbb
push
push
sub
jo
js
pop
jecxz
scas
and
in
in
aas
push
in
daa
adc
xchg
mov
divb
jmp
cmp
je
cmp
adc
mov
leave
jle
movsl
imul
andl
or
in
and
jmp
sbb
in
xchg
push
push
and
jp
sbb
je
inc
mov
mov
sbb
mov
sub
push
inc
push
push
sub
jns
out
lret
shl
cmp
scas
push
mov
stos
xchg
push
mov
lock
cmpsb
cld
mov
ficoms
push
push
pusha
aaa
outsl
or
adc
and
in
mov
out
or
clc
movb
pop
xor
dec
push
or
adc
movsl
repnz
add
xchg
xor
push
and
ret
cmp
pop
push
lea
push
cmpl
xor
xchg
cmp
mov
cmp
and
jb
inc
les
call
pop
or
pop
dec
push
and
xchg
cltd
jge
mov
pop
dec
or
jnp
fcomps
push
pop
ja
push
sbb
xchg
sahf
mov
testb
jbe
jp
adc
jo
xchg
xchg
xchg
xchg
call
inc
notb
and
ja
ja
mov
cwtl
movl
lret
aad
mov
test
mov
loopne
ljmp
jmp
inc
pop
nop
imul
inc
out
ret
push
add
andl
adc
iret
arpl
cmp
imul
mov
out
adc
dec
mov
js
jb
fstpt
adc
jmp
rcrb
push
sub
push
push
cmp
dec
rclb
mov
fmuls
and
mov
rclb
add
xor
push
pusha
push
or
jbe
cmp
nop
into
addr16
jg
push
push
push
push
mov
loope
pushf
cli
push
inc
mov
push
push
sahf
ja
cmp
jbe
lds
lods
and
adc
fcoml
mov
pop
daa
lea
stos
lock
je
mov
jo
mov
mov
ss
ret
in
and
outsl
mov
faddl
sbb
mov
rclb
push
push
cli
hlt
push
ret
dec
pusha
adc
out
rorb
outsb
xor
xchg
push
ljmp
pop
cmp
lret
clc
push
xor
in
mov
pushl
mov
adc
dec
adc
mov
or
fistl
dec
lea
or
idiv
lods
insl
mov
je
dec
call
cltd
sub
sar
add
dec
lcall
dec
in
mov
fldt
jmp
mov
add
mov
inc
adc
test
aaa
dec
dec
cmp
pop
leave
mov
xor
or
sbb
insb
addl
push
mov
dec
and
xchg
sub
pop
jl
add
xor
inc
clc
cmp
sub
push
xor
sbb
mov
adc
call
sub
dec
test
sbb
and
and
cs
in
out
mov
fs
inc
cmc
insl
lcall
dec
inc
cmp
ret
jno
mov
rol
lahf
push
insb
xchg
jns
dec
mov
sub
push
pusha
icebp
jg
mov
sbb
and
test
or
inc
cmpb
sbb
mov
inc
adc
mov
call
mov
cmp
ljmp
sbb
xor
add
sahf
ret
inc
push
sbb
jge
je
push
iret
in
sbb
or
push
dec
popl
add
pop
and
jge
ret
daa
sbb
imul
cli
add
in
jmp
cmpl
je
insl
sarb
ret
pop
mov
or
in
dec
je
mov
xchg
sbb
cwtl
pop
push
cmp
sbb
jg
jmp
mov
sbb
mov
mov
mov
and
pop
sbb
sbb
push
sbb
or
adc
lods
xchg
push
shlb
mov
lcall
gs
push
push
sbb
je
ret
or
inc
pop
hlt
movb
jge
dec
clc
or
fldz
dec
adc
rorl
pop
test
scas
loope
lret
test
ret
dec
aas
mov
xor
mov
dec
popf
adc
lea
push
and
xchg
pop
fs
popf
pop
xchg
incl
test
test
mov
pop
loopne
mov
and
popf
push
daa
mov
pop
adc
xor
addr16
out
mov
test
popf
mov
popf
and
and
pop
lea
mov
dec
push
push
outsb
add
fildl
push
sub
cmp
or
mov
ror
outsb
cmpsl
mov
int3
push
sub
add
rclb
xor
out
lret
jb
jl
add
rcll
je
ret
inc
inc
or
daa
cmp
jo
push
test
adc
cmp
or
dec
pop
insb
lock
xchg
pop
sbb
jne
and
sub
sarl
ficomps
daa
addb
xor
cli
or
cwtl
cmpl
pop
push
cmpsl
inc
mov
lcall
ret
mov
lret
out
faddl
sub
pop
lcall
std
or
xor
fldl
fmull
gs
and
fs
xor
pop
push
cmp
ret
rcrl
push
jo
ror
xchg
adc
or
testb
pop
or
loop
cmp
xchg
sbb
popa
rorb
inc
adcl
pop
andb
shll
pushf
scas
lock
cmp
fidivs
push
lods
arpl
testb
or
push
add
push
addl
sti
sub
sub
scas
add
ret
push
mov
xlat
stos
fcoms
repnz
dec
or
shrl
es
out
rorl
js
ret
cmp
sbb
ss
daa
jne
das
adc
xchg
cltd
inc
or
or
xchg
imul
addb
adc
pop
mov
xchg
or
insl
cmpb
cmp
cli
cmp
sub
pop
rcll
popf
mov
jmp
clc
mov
cs
sub
push
push
add
ss
pop
adcl
repz
dec
call
es
push
orb
test
shlb
test
mov
adc
insb
push
mov
push
fcoms
mov
call
push
inc
fisttpll
and
sbb
cmp
inc
ret
xchg
xchg
stc
or
cmp
dec
fsub
in
mov
cmp
inc
insb
andb
or
xchg
jp
cwtl
mov
mov
out
add
dec
mov
aas
mov
cltd
mov
add
sar
push
push
js
or
adc
or
sbb
sub
scas
out
in
lock
adc
in
add
mov
idiv
push
pop
push
mov
dec
jmp
xor
idiv
jle
mov
jg
mov
fwait
sub
test
jg
mov
outsb
nop
mov
cmp
push
jbe
adc
dec
xor
frstor
pop
icebp
or
cmpsl
int
jp
jne
inc
jge
test
adcl
jmp
add
adc
cmp
out
inc
or
pop
pusha
push
ljmp
movsb
sti
sub
xchg
mov
je
test
pop
lea
cltd
idivl
jg
add
cli
xor
fisttpl
pusha
jl
xlat
jge
jg
fs
or
xchg
sti
xchg
scas
arpl
mov
test
or
jbe
lahf
jl
fldt
sub
sbb
add
bnd
cltd
push
fstpt
add
pop
inc
pop
xchg
imul
fdivr
sub
cmp
or
jmp
dec
jge
jmp
mov
mov
xchg
mov
fildl
pusha
or
sarb
faddl
clc
push
inc
ss
mov
inc
orb
fdivrp
mov
mov
cmp
rolb
pop
add
pop
add
lock
or
fdivp
or
xchg
pop
jl
jmp
mov
mov
pop
mov
jge
je
into
clc
fidivl
jmp
outsb
push
pop
ljmp
lods
jle
aam
jmp
jne
pop
add
cld
mov
fdivrl
call
mov
lea
fmull
test
lea
jecxz
jp
push
or
lock
cld
push
adc
and
push
ret
adc
mov
mov
pop
push
lahf
je
aam
mov
imul
push
inc
pop
and
jl
jp
sbb
cld
addb
jle
add
aas
mov
adc
daa
adcl
cmp
xor
mov
or
and
test
call
cwtl
outsl
out
cmp
cld
gs
mov
inc
pusha
mov
or
mov
xchg
pop
jne
rcll
aam
mov
pushf
loopne
pop
scas
jmp
leave
push
leave
xchg
pop
fldl
pop
add
pop
push
add
fdivrl
loopne
mov
lea
push
mov
push
adc
jae
fnstcw
mov
cmp
call
pop
stos
ret
mov
sub
dec
sbb
out
mov
push
or
or
loop
cmpsl
scas
xchg
aas
loope
mov
pop
enter
add
ret
push
jg
loopne
push
push
jg
popa
push
sub
std
and
push
jb
jnp
and
enter
ret
or
mov
mov
ds
dec
push
fs
dec
mov
add
mov
pop
pop
sbb
js
cmp
movnti
mov
movd
mov
repz
lret
sbbb
xor
pop
mov
push
or
sbb
and
and
daa
xor
push
or
iret
subb
shlb
std
xor
xor
mov
loope
ret
pop
pop
mov
pop
add
mov
add
push
leave
add
fbstp
clc
lods
sub
clc
setb
test
jne
mov
shl
sbb
dec
sub
sar
xor
and
adc
ds
lea
push
pop
adc
and
fwait
and
mov
je
sub
pop
mov
pop
jmp
mov
mov
push
or
push
nop
lock
hlt
mov
test
push
dec
and
pusha
je
arpl
jg
cltd
cmpsl
push
inc
sbb
shrl
add
pop
lcall
out
fcomi
lcall
xlat
imull
jo
inc
mov
or
adc
movsb
add
sub
push
ret
divb
ds
shr
notl
in
cs
add
adc
pop
xor
push
aad
test
pop
cs
xor
sub
clc
or
and
push
je
and
je
sbb
jnp
std
cs
inc
pusha
inc
in
or
pop
rorl
xchg
jg
or
rolb
shlb
and
gs
clc
movl
imul
movl
mov
inc
fdivl
mov
lods
sbb
or
insl
ja
mov
test
lods
les
iret
fs
mov
leave
pop
lods
pop
pop
add
push
mov
rcll
popf
mov
int3
xchg
pop
push
in
sbbb
xchg
ret
test
je
lret
clc
push
lcall
fsubs
inc
jne
push
and
lret
testb
divb
dec
fscale
jo
fdivr
push
inc
or
cmp
bound
fwait
mov
mov
push
and
sbb
pop
jg
inc
shll
or
sbb
dec
packsswb
test
ficomps
or
xor
or
lea
push
add
loop
dec
adc
in
inc
or
xor
push
pop
enter
adc
cs
sub
out
cmp
sub
jg
cmpsl
xchg
lods
lock
push
jg
xor
mov
inc
jg
shrl
lcall
xor
jns
jns
decl
call
mov
pusha
enter
add
in
push
push
ret
dec
dec
lea
shlb
sbb
cmp
cltd
dec
iret
fadds
pop
push
inc
fsubs
insb
hlt
or
push
xor
xor
popa
enter
enter
repz
xchg
and
outsl
adc
xchg
add
or
jge
or
add
adc
mov
cmp
and
es
mov
mov
mov
dec
adc
push
pop
or
stos
loope
movsb
jb
adc
and
add
stos
and
inc
fiadds
add
lret
push
stc
clc
in
push
mov
jne
push
test
pop
mov
orl
pusha
scas
add
jns
push
add
xchg
das
add
cwtl
movsl
mulb
cs
popf
inc
arpl
scas
mov
call
mov
nop
add
dec
outsb
lock
push
sbb
push
sub
push
sub
subb
lea
test
and
aam
cmp
and
sub
inc
mov
nop
int
or
mov
test
fstpt
popa
leave
mov
dec
xchg
mov
adc
add
or
shrb
push
and
shl
daa
add
add
pushl
fdivl
in
in
fdivrl
sbb
inc
adc
add
std
adc
jge
jl
bound
adcb
adc
mov
nop
aam
in
mov
jg
outsl
clc
call
mov
test
sbb
mov
push
aam
pop
scas
mov
xor
mov
fdivl
adc
dec
push
sbb
adc
pop
addr16
or
incl
cmp
repnz
push
fadds
mov
xchg
cltd
inc
imul
or
push
cmp
cmp
adc
adc
rolb
add
push
push
scas
rolb
push
js
out
or
insb
in
xor
ret
neg
sbb
outsl
sbb
call
movl
jo
jno
call
and
or
add
hlt
dec
ret
aaa
sbb
aam
push
lods
lahf
fs
adc
addl
sub
jge
lahf
das
movsb
cmp
push
mov
push
add
or
jo,pt
jns
cmpsl
mov
mov
das
frstor
sbb
mov
bound
jo
dec
sub
mov
out
lahf
outsb
push
lahf
call
bound
inc
and
pop
add
addr16
or
or
pop
push
rcrl
fsubr
sbb
cwtl
je
sbb
mov
jmp
loope
inc
in
ss
add
lds
add
loopne
dec
inc
or
stc
sbb
push
andl
lcall
loope
jmp
movsb
inc
adc
cmp
repnz
jne
pushf
fdivp
push
mov
inc
inc
aaa
adc
out
jno
jae
into
push
lcall
push
loope
mov
repnz
sub
lock
push
mov
push
scas
shrb
stos
dec
aad
mov
add
stos
je
push
mov
push
xchg
sbb
push
rclb
cwtl
sub
adc
adc
es
sbb
push
push
outsl
add
mov
fnstsw
pop
fistl
and
bound
push
stos
sahf
xchg
imul
andl
sbb
nop
mov
push
adc
dec
sub
cmp
xchg
lcall
loopne
test
lret
and
das
dec
inc
cmp
mov
loop
inc
lret
jno
in
cmpsb
in
and
mov
lods
xchg
ljmp
adc
xlat
out
mov
cmp
xor
in
sahf
or
repz
add
push
inc
adc
nop
xchg
add
add
push
enter
daa
sldt
cmp
outsl
adc
and
or
iret
repz
push
push
sub
pop
sub
xor
or
mov
and
movsl
scas
sub
hlt
xchg
cmp
dec
cmp
subl
sub
jmp
push
push
cld
inc
filds
cmpl
mov
in
jne
ds
pop
push
jo
iret
std
push
sbb
push
sub
add
or
and
mov
push
or
jo
dec
jb
les
or
shlb
cmp
popf
mov
jecxz
add
cs
addl
pcmpeqb
add
add
fistpl
mov
js
adc
adc
or
insl
dec
sbb
sub
repnz
clc
pop
push
sub
push
mov
dec
add
in
dec
mov
push
outsl
movsb
xchg
loop
push
inc
js
jo
xchg
fidivrs
test
inc
push
xor
adc
rorb
imul
pop
jl
jo
lods
insb
or
push
or
mov
push
fldl
ret
cmp
or
mov
mov
xor
cmp
jle
sti
xchg
incb
and
pop
mov
cwtl
cmp
je
ja
jae
clc
ja
cli
aaa
rorb
add
lcall
aas
push
outsb
sub
pop
int3
loope
t1mskc
inc
pop
jae
fwait
ret
mov
jne
or
sub
cmp
and
push
xlat
jne
orl
mov
imul
outsl
outsl
testb
test
in
andl
lret
orb
test
dec
inc
bound
cmp
scas
insl
in
test
and
cmp
mov
inc
pop
dec
xchg
movl
int
xor
cli
inc
xor
add
add
repz
jns
xor
pushf
or
arpl
mov
and
lock
or
lea
xor
add
sti
std
leave
and
pop
push
sub
in
xlat
sub
jl
or
cli
lret
fbstp
pusha
leave
rorl
xchg
inc
sahf
sub
mov
adc
dec
call
movsb
sbb
sbb
call
out
enter
and
daa
xchg
inc
inc
or
xor
and
inc
in
fnstsw
lcall
pop
add
pop
inc
adc
js
cmpsl
dec
xor
sbb
add
add
cld
push
outsb
mov
mov
sbb
mov
in
or
or
cmpsl
sbb
adc
adc
roll
inc
mov
cmpl
jns
imul
adc
loope
sahf
inc
adc
push
cmpsl
mov
jbe
jne
fildl
cmp
leave
decb
or
sahf
out
add
inc
add
add
std
sbb
and
test
cmp
inc
iret
leave
cmp
mov
cs
insb
jmp
cmp
xchg
mov
and
mov
pop
or
adc
les
loopne
pop
sbb
ss
and
fsubl
lock
test
mov
adc
lret
and
push
sarl
dec
enter
or
pop
and
pop
adc
jmp
fsubrl
mov
imul
adc
xor
cwtl
cs
rorb
adc
cmp
cmp
cmp
sbb
push
inc
xchg
movsb
shl
insl
jnp
notl
pop
negb
out
lea
andl
mov
sbb
xor
addr16
fwait
push
pop
gs
cmp
fnstsw
out
jge
je
movsb
outsb
or
mov
fs
clc
xchg
pop
add
xorl
or
mov
sbb
dec
mov
adcl
adc
push
cld
xchg
insl
inc
fsub
std
jge
jbe
push
jmp
stc
jne
push
and
sbb
sbb
in
and
mov
inc
sti
mov
nop
movsb
dec
jb
and
sbb
rolb
jne
push
rcr
mov
int3
cmp
test
jge
push
outsl
dec
sahf
add
aas
jl
movl
ja
mov
push
dec
rcrl
dec
adc
push
pusha
fsub
adc
mov
test
shlb
sti
mov
push
push
jl
mov
lcall
jl
test
push
inc
dec
enter
push
xchg
cmpsb
inc
sahf
js
js
pop
cwtl
fs
arpl
and
mov
and
lds
cmp
xor
scas
movsb
out
dec
sarb
xor
rcl
mov
cmp
jns
sbb
push
std
cmp
sti
xor
sub
cmp
inc
pop
add
inc
push
testb
inc
jb
sbb
mov
std
push
fs
add
sarb
mov
xor
test
pop
out
add
xchg
jne
inc
add
ljmp
int3
movsb
cmpsl
test
sub
or
push
xchg
inc
dec
mov
pop
or
in
xchg
icebp
in
test
jbe
push
fiaddl
pop
out
inc
sub
pop
call
inc
mov
sbb
xchg
ljmp
push
jp
sbb
mov
add
lret
repnz
and
jecxz
in
xchg
pop
push
in
add
inc
dec
lock
into
pop
sub
testb
popa
xchg
test
mov
push
xchg
shrl
add
xor
loop
sbb
push
dec
push
lods
into
sub
sub
out
mov
jmp
mov
cmc
and
insl
sub
or
repnz
pop
out
or
pop
test
pop
sub
sub
sub
imul
pusha
pop
adcl
repz
cmp
icebp
mov
push
test
push
scas
add
inc
inc
sub
push
stos
sbb
mov
pusha
dec
pop
movsl
rol
cwtl
or
test
push
push
add
addr16
gs
inc
test
pop
hlt
setne
in
filds
je
loopne
pop
repz
sti
aas
push
push
push
jp
iret
and
adc
hlt
jne
push
push
push
push
orl
pushf
test
inc
or
je
and
mov
adc
push
gs
xor
mov
sub
imul
fdivrl
dec
sbb
jle
push
and
lea
mov
stos
std
or
adc
fnsave
cmovne
adc
sbb
mov
lock
jb
inc
sub
adc
ljmp
and
jne
push
jne
mov
in
jb
aas
pop
inc
jo
adc
adcb
add
push
js
hlt
je
les
iret
jge
mov
sti
lcall
mov
jl
movzbw
shl
cwtl
adc
or
dec
je
pusha
push
adc
cmp
add
jmp
lcall
les
mov
jp
push
push
or
in
add
mov
push
pop
pop
inc
pop
sbb
arpl
popf
test
mov
sub
in
in
pusha
and
xchg
lods
mov
test
mov
inc
and
push
lret
mov
push
mov
add
pop
insb
hlt
jp
push
mov
and
xchg
adc
scas
jne
push
mov
add
push
sbb
dec
add
in
pop
and
push
repz
push
lock
in
sahf
and
add
xchg
sub
or
inc
loope
mov
inc
add
push
add
mov
sbb
add
lods
inc
pop
mov
xchg
and
pushf
mov
or
mov
push
push
imul
jnp
and
jge
xchg
or
cmp
leave
and
and
lods
mov
or
xor
mov
repnz
daa
dec
and
mov
pop
or
and
sbb
and
add
ss
mov
and
aaa
dec
xor
push
pop
out
pop
inc
enter
jo
mov
mov
ret
sub
nop
add
push
or
imul
xor
push
xchg
jbe
mov
test
ret
mov
mov
repnz
test
scas
xchg
xor
xchg
add
sbb
das
cld
push
sub
cld
in
out
outsb
movsl
test
aad
fdiv
push
pusha
mov
call
add
sub
pop
cmp
movsb
scas
add
jmp
push
push
loopne
cmp
mov
or
sbb
repz
out
fistpll
or
push
movzwl
pop
movswl
add
sub
cmp
setge
dec
rcrb
add
into
dec
push
pop
pop
add
jge
addb
cmp
xchg
stos
in
scas
dec
andb
pop
mov
lret
fmuls
lea
in
mov
push
add
hlt
push
out
movsl
lds
xchg
sbb
or
add
push
push
push
jnp
mov
mov
jb
mov
sub
in
in
push
shrl
repz
push
jmp
lds
daa
mov
xchg
cmpsl
add
pop
push
mov
pop
inc
dec
not
or
into
inc
push
mov
mov
pop
pop
mov
hlt
pop
ror
insl
jle
xor
add
js
push
mov
test
insb
cmp
cmpsb
inc
faddl
pop
cli
or
stc
stos
sbb
sbb
imul
pop
cmp
or
aam
roll
push
push
xor
push
lahf
pop
xor
dec
jge
jecxz
ret
or
rorb
leave
enter
decb
jns
out
push
add
sbb
ss
push
pop
lods
ja
shlb
fimull
clc
jb
repz
pop
pusha
sbb
sub
clc
repz
add
aaa
inc
mov
xor
loope
dec
ds
jne
loopne
xchg
mov
subb
lds
dec
cmp
add
sub
adc
mov
cmp
add
lea
loopne
scas
js
push
inc
add
arpl
cmp
mov
test
push
adc
cmpsl
sahf
sub
mov
movl
shrb
adcb
add
xchg
pop
rcll
test
add
fiaddl
movsl
lea
inc
ret
cmp
into
lock
sbb
push
adc
shll
add
cmp
je
push
mov
mov
fbstp
push
cmp
sbb
fcomps
shl
and
daa
es
push
add
scas
pop
jp
push
ret
push
add
test
imul
dec
cmp
dec
hlt
jge
mov
clc
cmp
popf
mov
ss
mov
outsb
adc
or
xchg
or
xchg
adc
rorb
ljmp
test
andb
incl
call
jecxz
and
cmp
jg
loope
xor
in
push
inc
add
push
jmp
mov
mov
hlt
cld
inc
push
insb
mov
xchg
pushf
pop
dec
rorl
push
add
push
jno
inc
hlt
sub
and
sbb
push
push
sbb
or
inc
cs
pop
or
cld
lock
mov
nop
mov
inc
jo
loop
enter
jae
sub
mov
es
xorb
jne
xchg
jae
push
sbb
icebp
and
int
mov
cmp
ret
popa
insb
pop
iret
xor
mov
push
cmp
clc
loope
cmp
clc
sub
and
rcl
sbb
push
cmpsb
cmp
aam
inc
jge
or
cli
or
add
stos
inc
popf
sub
in
inc
roll
js
add
sub
imul
cmp
dec
mov
ljmp
lret
jne
mov
push
outsl
loopne
out
adcl
push
ds
nop
fdivl
divb
mov
sub
push
pop
xor
ffreep
adc
push
jge
cltd
sub
arpl
sbb
or
mov
push
ficomps
or
ds
es
or
pop
push
lods
and
cmp
cmp
mov
cli
data16
inc
nop
fimuls
mov
call
inc
sub
lds
es
scas
xor
jne
leave
pcmpeqw
sub
jmp
mov
mov
add
ret
repnz
rorb
pop
and
shrb
ret
pop
test
orb
sbbb
push
and
rorb
jmp
inc
pop
adc
inc
push
and
or
adc
adc
xchg
dec
movsl
sbb
pusha
lods
mov
adc
adc
stos
popa
add
ret
mov
mov
xchg
mov
cmp
pushf
inc
cli
js
adcb
pusha
mov
sub
lock
test
push
fs
in
lcall
jne
sbb
or
jmp
fdivl
pop
or
in
push
push
popa
scas
leave
push
mov
test
imul
loopne
add
test
push
lods
pusha
and
ret
inc
cltd
adc
mov
nop
fdivrs
push
push
pusha
mull
add
or
hlt
sbb
ret
push
push
pop
mov
sahf
adc
jne
xchg
js
mov
or
nop
mov
adc
lret
push
sti
adc
and
or
dec
push
sbb
leave
icebp
shrb
not
push
mov
shrb
pop
xchg
je
adc
mov
in
xchg
add
push
xor
and
cmp
and
cwtl
sbb
push
xor
or
push
sub
dec
insl
mov
xchg
je
cmpb
jbe
pop
mov
inc
xor
sbb
aam
cwtl
adc
jl
mov
pop
call
out
cltd
aad
ret
dec
add
iret
iret
mov
test
icebp
inc
inc
mov
jns
push
dec
in
cmp
lock
sbb
shr
mov
or
enter
sbb
imul
fbld
add
adc
lods
popf
mov
out
mov
cmp
in
call
hlt
or
test
movsb
sbb
lea
mov
arpl
add
or
in
loope
enter
adc
mov
cmc
jle
clc
xor
mov
aam
ja
fs
jne
fstpt
outsb
sbb
jmp
inc
cs
sub
or
sbbb
add
pop
pop
test
xchg
testb
push
and
jmp
xchg
jb
pop
in
mov
pop
repnz
fiadds
ja
sub
xor
cmpsl
lret
ss
push
add
mov
loopne
pop
daa
or
leave
or
push
rcrb
pusha
mov
sub
int3
push
sbb
or
xor
test
loopne
movb
mov
cmp
or
pop
jle
fwait
xor
or
fidivrs
push
call
lock
shlb
movl
adc
add
push
leave
push
fwait
in
mov
cmp
mov
mov
scas
jecxz
pop
jmp
push
loopne
enter
jno
mov
mov
pop
pop
pushf
cmp
jl
add
lcall
dec
adc
jge,pn
or
or
stos
mov
inc
arpl
mov
add
pop
pop
pop
je
test
leave
xor
sub
scas
add
or
jmp
cmp
aam
pop
leave
sbb
aas
insb
cmc
add
xor
fsubrs
cmpl
push
scas
jmp
add
nop
or
lods
xchg
push
jne
fs
in
pop
sub
sbb
adcl
fst
ficompl
shlb
mov
push
mov
sbb
nop
mov
in
pmaxub
int3
imul
ss
or
add
and
mov
dec
dec
data16
pop
cmp
out
pushf
mov
rclb
xchg
ljmp
or
test
add
leave
pop
call
lea
rorl
nop
dec
jno
or
popf
scas
pop
mov
xchg
mov
sub
mov
pop
push
push
push
xor
xchg
or
adc
mov
push
adc
add
xchg
inc
or
and
add
inc
dec
mov
dec
out
sbb
add
sbb
iret
or
push
test
lods
sub
cmp
push
dec
sti
mov
add
jne
xor
push
imul
adc
cld
cld
add
mov
out
jge
push
lock
insb
popa
gs
addl
cli
clc
mov
push
int
inc
add
xchg
testb
lea
push
lock
add
cld
sub
mov
imul
add
fimuls
ficompl
lock
call
sbb
in
loop
or
hlt
shr
adc
or
add
imull
icebp
add
iret
push
push
add
push
fcoml
xlat
fstl
or
js
jp
mov
add
add
jp
xchg
or
push
mov
add
test
mov
cmp
jb
or
or
xor
pusha
dec
cli
mov
mov
imul
push
or
inc
sbb
insl
xchg
sbb
movsl
and
mov
inc
xchg
mov
cwtl
dec
cwtl
rcll
movsb
movsl
insb
into
jo
push
xchg
test
sub
insb
dec
out
mov
xchg
add
loopne
or
push
mov
push
call
ret
mov
lock
push
add
push
mov
ficomps
push
push
sbb
movzwl
cli
jmp
push
xor
into
pop
and
cmp
iret
jle
lret
inc
jbe
adc
push
sub
sub
jno
js
ljmp
mov
cmp
in
mull
push
sub
jecxz
fsts
mov
jno
xor
mov
push
dec
mov
jg
mov
mov
mov
cmp
je
push
lea
push
jae
push
cmp
arpl
cmp
sub
push
sbb
andb
fstps
xlat
in
jno
xor
sub
sarb
cmp
loop
xlat
push
aas
push
inc
add
rcll
js
rcrb
or
jmp
je
sbb
dec
nop
clc
push
clc
add
hlt
push
in
inc
dec
inc
mov
in
inc
mov
neg
push
add
add
test
or
push
fwait
rorb
loope
in
jl
push
push
mov
popa
push
dec
aam
call
or
shlb
fidivl
xchg
mov
in
push
push
cmp
add
fcmovbe
push
push
xchg
push
xor
add
fiadds
mov
mov
cmp
je
push
push
pop
push
adc
lock
int3
sub
lret
jmp
js
test
push
push
cltd
sub
fdiv
mov
loope
outsb
pusha
and
push
sub
xor
test
loopne
in
call
out
cli
insb
cmp
call
into
gs
scas
in
decb
sbb
mov
sbb
push
and
lock
imul
push
mov
xor
out
ja
test
cltd
lcall
je
ret
pop
sbb
jae
inc
cmp
inc
adc
andl
ret
sub
sbb
pop
add
nop
push
shlb
mov
adc
mov
push
and
jb
fisttps
js
lea
or
das
je
cmp
je
cmp
jne
add
cmpsb
add
push
ja
cmc
je
sbb
outsb
or
fists
or
jmp
outsl
outsb
pop
mov
cmp
or
add
ret
adc
mov
pop
jo
clc
lret
pop
popa
mov
mov
add
jmp
enter
sub
adc
hlt
cmp
jne
xchg
push
and
sbb
mov
mov
push
cmp
push
lea
and
mov
adcb
sub
sub
ds
adc
pop
shlb
xchg
mov
aam
leave
ret
push
jo
into
loop
lods
add
or
sbb
xor
cmp
ja
lcall
xor
inc
aaa
popa
int
cmp
push
ret
mov
ja
mov
pop
push
sbb
add
mov
cmp
addr16
push
inc
adc
adcl
add
ret
fdivrp
ss
cmpl
in
xor
jg
lods
loop
cmp
add
mov
cmp
gs
je
cmp
mov
mov
sbb
add
push
dec
inc
in
jns
jne
inc
mov
pop
dec
xor
push
movsb
jne
ret
lock
testb
lcall
add
inc
sbb
cli
cmp
jbe
fistl
data16
lea
mov
cmp
fs
dec
loopne
shl
jmp
inc
and
or
shrl
pop
mov
ret
pop
mov
or
test
mov
jb
lahf
or
fwait
int
lea
lock
je
mov
lea
sbb
cmp
or
or
xor
nop
inc
cmp
cld
pop
sahf
jne
cmp
notb
mov
pop
cmpb
insb
test
in
and
clc
je
sub
or
cmp
or
ja
shrb
enter
test
cmp
push
scas
out
xor
cmp
push
movsl
cmpl
clc
dec
jb
cmpsb
inc
sub
popa
loop
jne
lock
lds
or
ja
inc
inc
jo
movzwl
data16
mov
jb
cmp
dec
rcrb
add
fsubr
adc
aas
les
js
mov
inc
orl
stos
ret
fdivs
test
jne
xor
outsb
decb
push
test
jg
push
call
cmp
push
fsubr
cmp
pop
cld
jbe
test
les
xor
push
sar
jle
cwtl
rorb
lcall
pop
sub
push
mov
fadd
lret
cmp
jg
or
jge
aaa
aaa
mov
add
or
jle
es
sub
loopne
aaa
sub
and
pop
cmp
jl
pop
jle
pusha
mov
pop
add
clc
sar
jp
jb
jbe
mov
test
iret
out
add
fwait
and
or
je,pn
test
jne
loopne
iret
lds
and
xchg
jae
adc
sub
dec
cli
inc
jg
jae
movb
inc
mov
push
sub
push
sbb
push
add
sarb
xchg
inc
sub
mov
ficomps
inc
and
je
adc
imul
mov
ja
jae
add
inc
es
jbe
enter
dec
inc
fwait
jge
insb
add
shlb
push
movl
sub
mov
lods
fs
push
add
push
cmpsb
outsb
stos
push
pop
or
mov
push
data16
lcall
fcmovb
mov
icebp
clc
inc
shlb
out
add
sub
add
mov
hlt
push
sub
sbb
dec
mov
movb
push
orl
inc
lea
mov
cmpsb
push
sub
add
pop
jb
sbbl
cmpl
pop
cmp
mov
lret
adc
das
mov
or
mov
out
lea
pop
cwtl
xor
insl
int3
cmp
mov
xchg
mov
mov
add
inc
cs
frstor
push
push
xchg
cmpsb
fcmovnb
inc
and
jae
mov
aaa
cmp
insl
and
cmp
sahf
js
fbstp
xchg
adc
das
jbe
add
add
icebp
sti
mov
push
mov
jbe
pop
mov
add
add
test
push
and
inc
ss
mov
or
xor
inc
pop
inc
js
jg
pop
xor
pop
mov
popa
push
mov
inc
dec
dec
pop
push
or
add
inc
inc
out
sbb
imul
add
cmp
add
mov
adcl
mov
cmp
pop
push
or
lret
rorl
cmp
lock
popa
hlt
jmp
imul
cmp
add
inc
xchg
xchg
addb
inc
sbb
jno
cld
loop
mov
push
movsb
sbb
push
pusha
sti
pusha
jb
cs
xor
cwtl
int
jo
jbe
add
inc
fisttpl
std
imul
lea
sbb
sahf
push
adc
cwtl
outsb
cltd
jmp
shrb
fadds
mov
pop
jo
ror
push
mov
add
and
dec
sub
jnp
in
jmp
xchg
jne
insb
in
mov
add
daa
cmpsl
addb
xchg
adc
add
popa
push
ret
pop
inc
xchg
or
sub
push
push
leave
add
and
mov
pop
leave
or
xchg
dec
push
test
and
fs
mov
aam
and
add
pop
pop
sub
jle
or
jle
setne
inc
mov
sub
rorb
cmpl
sub
ljmp
jl
cld
xor
mov
xor
lret
pop
and
ljmp
lcall
stos
jmp
hlt
sub
and
sbb
test
cmpb
adc
hlt
push
fdivl
jne
sbb
pop
mov
add
movl
add
das
bound
into
cmpl
dec
adc
add
mov
add
stos
jge
or
jnp
mov
jo
imul
xchg
shr
cmp
je
je
cli
sarl
inc
mov
inc
inc
inc
xchg
in
ret
jne
cmpl
and
aaa
sbb
and
cwtl
imul
mov
xorl
jmp
jle
ret
dec
mov
test
jo
push
push
dec
sub
test
add
call
xor
or
sub
jge
mov
incb
sbb
pushl
jmp
pop
inc
cmp
je
lea
fnstsw
jl
cmpb
cmp
jne
les
aam
adc
jno
mov
cmp
mov
dec
lds
mov
inc
incl
fnstenv
mov
data16
mov
test
movsb
push
adc
cltd
test
jge
cmp
sbb
xor
fdivp
je
jmp
add
add
js
add
and
push
or
ljmp
or
lahf
jns
das
jl
cmp
nop
jmp
inc
push
sbb
dec
popa
in
adc
pop
sbb
imul
push
faddl
cmpsl
push
xor
pop
xor
incb
adc
add
int
add
mov
pop
cmpsl
jo
jne
jecxz
push
add
xchg
add
in
orb
or
in
mov
add
pop
lahf
inc
mov
cmpsb
mov
lcall
lock
sbb
push
push
push
xor
lock
push
sbb
add
addb
jmp
push
xchg
cmpsb
pop
xchg
mov
inc
cmp
jbe
imul
inc
and
or
cs
mov
sub
xor
xor
cs
lret
xor
cmp
popf
test
sbb
pop
add
mov
cmp
in
sub
fwait
dec
add
in
add
ret
adc
jle
xor
inc
or
ds
xor
call
ljmp
jge
mov
sbb
movsl
adc
test
pop
ret
bound
push
push
jbe
sub
movsb
push
mov
lock
adc
sahf
insl
pop
jmp
cmp
mov
leave
push
call
inc
sub
mov
xor
add
and
loopne
lock
adc
mov
dec
movl
dec
cmp
shll
mov
pusha
mov
inc
inc
xor
lock
inc
cs
xor
fucom
test
jnp
cmpsl
gs
dec
test
or
jmp
repnz
or
add
lcall
or
add
xor
pushl
add
loopne
in
cmpsb
xor
out
jne
cld
aam
xor
add
fs
stc
or
jmp
fildll
fadds
add
push
lcall
hlt
cmp
ljmp
inc
dec
rclb
jnp
sub
cmp
sarl
jg
adc
pushl
push
std
adc
subb
lret
mov
jnp
ret
faddl
pop
xchg
shlb
shll
in
mov
dec
bound
or
cmp
lea
and
or
sarl
dec
add
nop
sbb
daa
push
xchg
rclb
imul
pusha
jo
in
in
jo
xchg
mov
out
mov
xor
sbb
out
xchg
mov
cmp
orb
addb
or
add
sbb
stos
sbb
push
adc
mov
data16
idiv
push
adc
loopne
sub
pop
daa
rcr
repnz
mov
enter
sbb
ja
mov
push
in
or
sahf
sub
mov
shrb
cwtl
lea
cmc
add
cmp
in
cmpsl
hlt
add
js
sub
push
cmp
pop
cmp
mov
jns
cmp
or
loopne
add
sub
mov
push
cs
jne
imul
repnz
or
call
in
cltd
inc
in
sahf
add
pop
mov
push
dec
or
scas
dec
cld
mov
inc
notb
aaa
sub
push
out
xchg
call
out
mov
pop
sbb
cmpsl
add
sbb
mov
js
inc
jmp
decb
mov
mov
or
adc
add
mov
push
adc
dec
sbb
lcall
cmp
and
xchg
hlt
mov
mov
add
mov
inc
mov
cmp
sti
or
pop
ret
xchg
ss
push
decb
mov
pusha
les
andl
push
mov
rolb
cmp
add
add
mov
mov
or
xor
pop
jmp
dec
cmpb
or
or
out
sub
add
popf
mov
xor
pop
faddl
lcall
in
lock
movsl
add
jo
push
xchg
pop
shrb
inc
pop
out
stc
ds
clc
cmp
pop
or
std
sub
adc
in
leave
shl
and
push
lock
dec
cmp
loopne
adcb
push
jmp
jecxz
data16
popl
in
nop
push
inc
mov
dec
push
aaa
icebp
or
dec
inc
out
or
push
jl
adc
mov
mov
jmp
test
sbb
rolb
xor
mov
push
xor
xchg
andl
mov
jmp
pop
cmp
dec
subb
mov
dec
in
test
and
clc
pop
sub
incl
xchg
xchg
lcall
in
out
push
je
clc
xchg
cmpsl
sub
lret
scas
inc
cwtl
xchg
movsb
shl
push
push
je
andb
cmp
cmp
stos
mov
cmp
jecxz
add
insb
test
in
rcrb
icebp
mov
shll
mov
adc
cmp
fildl
js
mov
out
icebp
jp
dec
inc
push
insl
inc
cmp
cmp
pop
inc
push
or
loop
or
push
jecxz
lds
xchg
fstpt
je
lcall
clc
daa
mov
cmp
mull
cmp
enter
mov
cmp
dec
push
add
push
jne
or
jge
imul
fldenv
out
pop
hlt
or
dec
mov
xchg
mov
icebp
imul
rorb
mov
add
out
or
and
sbbl
push
jbe
rcll
push
ds
test
pop
jae
push
sbb
cmp
mov
je
in
pop
adc
pop
pop
test
or
jb
push
and
pop
rorb
fucomi
mov
addl
jnp
or
addl
cltd
dec
cmp
enter
int
xchg
xor
pop
ret
sub
or
xchg
sub
or
clc
jg
pop
repz
push
xchg
roll
jb
sahf
push
sub
or
jmp
jbe
mov
cld
cli
ja
adc
mov
dec
pop
push
imulb
bound
lea
das
xchg
pushf
das
daa
test
add
and
pushl
cli
mov
mov
jp
dec
or
pop
lods
cmc
enter
rsm
mov
shrb
cmp
xor
add
cli
mov
adc
add
sbb
adc
xor
sub
aam
dec
je
mov
jecxz
sub
cmc
mov
movsl
adc
ds
add
nop
push
add
inc
in
inc
adc
and
dec
scas
loopne
icebp
cmp
jne
adc
inc
sub
pop
pushf
sbb
mov
mov
adc
loope
mov
jnp
leave
cmpsb
sbb
or
add
pop
mov
pop
xor
pop
add
inc
push
adc
inc
lods
mov
sbb
addr16
mov
sbb
rolb
stos
mov
adc
mov
or
add
xchg
inc
mov
sbb
and
sbb
mov
jb
dec
repnz
sbb
adc
sub
sub
or
lret
sub
or
fisubl
jge
xor
push
push
cmc
pop
aas
iret
xchg
sbbb
insb
movb
dec
pop
sarb
push
sbb
rolb
stos
sub
sbb
pop
sbb
and
stos
pop
je
pop
movsb
and
xchg
cmp
leave
popf
pushf
xor
inc
push
pop
pop
add
out
add
push
push
and
pop
push
push
les
dec
and
clc
pop
lds
sbb
popa
xchg
and
sbb
loope
leave
dec
lock
xor
ljmp
push
dec
xor
push
dec
mov
or
shl
rorb
xor
adc
pop
push
adc
test
xor
xor
mov
dec
and
jo
jge
popa
sub
xor
sbb
jle
insl
adc
mov
fs
rclb
inc
fmuls
pop
jle
pop
xchg
push
cmp
add
mov
insl
iret
loopne
loopne
xchg
cmp
test
cli
xor
xchg
sub
cmpsl
cmc
in
mov
es
or
push
pop
shrb
push
xchg
adc
cmp
xor
xor
pop
sub
mov
pop
fistl
jmp
sbb
add
inc
sub
sub
dec
xchg
sub
adc
add
mov
in
cltd
jmp
mov
push
push
mov
push
les
mov
sahf
add
mov
or
jecxz
jno
xchg
push
and
xchg
sub
das
jae
sti
mov
cmpsl
inc
push
push
jl
push
adc
add
mov
xor
xor
inc
movsl
jge
inc
and
xchg
add
sub
jnp
aad
insb
call
mov
jo
dec
aas
in
mov
pop
xchg
or
in
imul
push
xor
cld
push
sbb
movsb
and
sub
stos
jae
in
js
dec
dec
les
pop
adc
pusha
xor
sbb
inc
pushf
or
mov
xlat
mov
dec
dec
cmc
rclb
mov
fadds
out
xor
add
stos
addr16
push
loope
inc
out
inc
cmp
jne
mov
jmp
loop
es
mov
daa
add
sbb
popf
pusha
movsl
js
dec
push
lcall
add
xchg
or
ja
xor
push
adc
add
fxch
cmp
dec
inc
xor
xchg
je
inc
push
ss
push
or
pop
jp
enter
rol
and
jne
rol
repz
fdivrl
ret
repz
push
mov
xor
cmpsl
ljmp
push
add
les
test
pop
xor
or
xor
push
cltd
shrb
and
fistl
sub
pop
hlt
jne
sbb
xchg
mov
popa
mov
jbe
jl
in
mov
xor
lods
jl
or
loope
mov
jl
and
dec
mov
xchg
mov
aaa
scas
mov
popa
movb
cmp
push
xchg
lods
fsubrs
dec
cmpsl
enter
cmp
or
adc
in
or
sub
in
xchg
sub
pop
in
fsubrs
test
pop
jbe
cmp
das
sub
shlb
in
jge
sahf
dec
in
fs
sub
fldcw
fcomi
push
call
adc
add
in
adc
pop
pop
das
mov
pop
add
dec
inc
mov
inc
push
add
inc
or
hlt
rolb
lods
push
cmp
push
mov
jecxz
in
dec
push
push
mov
rorb
lret
jle
and
sbb
adc
sbb
mov
mov
mov
and
adc
xchg
out
or
fdivr
pop
add
mov
mov
fcmovnu
add
ret
sbb
bndstx
push
xor
shlb
cmp
enter
mov
imul
add
or
es
arpl
adc
fmuls
adc
lock
add
or
push
rcrl
scas
hlt
mov
cwtl
aam
pop
iret
and
or
sub
imul
cmpsb
or
or
adc
popa
test
pop
ja
aaa
lock
dec
lds
add
ja
enter
and
mov
sub
pop
xchg
std
lret
push
pop
lcall
fsubrp
enter
xor
leave
aad
ljmp
push
outsb
xor
pop
xchg
add
rclb
push
push
push
frndint
shll
adc
or
rclb
ja
mov
sbb
out
movsl
xor
in
cmp
xor
mov
jg
fisttpl
movsl
dec
add
in
cmp
pop
imul
into
pop
inc
rep
or
and
mull
push
out
or
mov
or
stos
cmp
inc
xchg
shl
adc
xor
popf
mov
aam
loop
call
push
sub
push
clc
mov
sti
pusha
adc
push
data16
inc
add
int
xor
sub
mov
or
lods
aas
xor
outsl
sub
sbb
adc
sbb
adcl
or
or
push
jle
push
and
movsl
cmp
sahf
xchg
and
inc
adc
sbb
out
push
mov
jmp
and
out
popf
ret
rclb
push
rcr
sahf
in
inc
fs
jae
jbe
fucomip
jmp
push
push
or
jg
and
out
add
ret
mov
lock
lea
push
add
orb
and
and
jbe
cmp
lea
outsl
push
daa
xor
and
nop
shlb
pop
mov
add
adc
cmpl
push
iret
bound
adcl
pop
mov
stos
dec
aam
hlt
fs
xchg
dec
nop
inc
lahf
mov
add
dec
adc
fidivs
insl
call
push
mov
jne
je
insl
shlb
cmp
das
mov
mov
adc
lods
in
or
cld
push
xchg
pushf
shll
jns
test
add
push
mov
sar
push
cmpsl
aaa
xchg
xor
jge
jae
rclb
std
add
push
andl
aaa
mov
je
divb
fdiv
xor
mov
bound
and
mov
dec
repnz
je
sub
inc
lcall
push
jmp
jnp
arpl
and
add
mov
sbb
fsubrl
lock
add
jnp
jl
insl
cld
decl
push
add
adc
push
inc
push
jg
mov
xor
add
push
and
or
xor
jb
out
xorl
shlb
sub
sub
pop
ret
mov
mov
xor
fmuls
mov
mov
and
cmp
xchg
xor
stos
sti
testl
sub
jmp
movl
cmp
push
mov
mov
jns
mov
jge
mov
add
jb
cmp
incl
inc
in
jge
cmp
jne
push
pop
push
std
xchg
push
xchg
mov
divb
outsl
xchg
xor
jmp
or
adc
popf
add
cmpb
adc
xor
mov
loopne
insl
and
inc
cmp
xchg
test
inc
cmp
jnp
xchg
push
push
push
and
pusha
mov
into
push
mov
or
jl
mov
push
imul
ret
daa
jge
adc
cli
insb
repz
push
imul
mov
ret
push
add
aas
mov
addl
mov
xchg
fs
sub
or
jno
stc
dec
in
imul
pop
mov
lea
push
or
movsb
stos
call
out
je
inc
jns
jno
dec
jecxz
lcall
mov
add
enter
iret
jbe
mov
sbb
mov
mov
push
mov
xchg
inc
ja
mov
lret
push
sbb
inc
pop
add
add
mov
and
xor
push
ds
inc
jl,pn
and
mov
and
sbb
mov
stc
mov
push
adc
out
lea
popl
mov
add
ja
sahf
mov
cmp
call
inc
pop
adc
sbb
adc
lock
mov
and
loopne
pusha
movsl
ret
nop
shrl
fadds
mov
sub
test
sub
ss
movsb
or
push
bound
imul
cmp
xlat
or
in
mov
add
cmp
adc
pop
stc
fadds
or
insb
cmp
sahf
jnp
add
sbb
jne
mov
icebp
fcomps
je
loop
push
or
mov
sbb
or
icebp
jmp
push
and
add
and
fcomps
add
cwtl
sbb
and
push
cmp
sbb
clc
sbb
sub
imul
pop
ljmp
xchg
jl
pop
dec
sub
add
push
stos
cmp
mov
inc
rorl
or
gs
arpl
sbb
push
or
add
shll
adc
dec
sbb
cmp
push
inc
mov
adc
lods
add
adc
sbb
and
test
xlat
pop
sub
mov
adc
sbbl
gs
mov
adc
add
add
or
cmpsl
push
fsubrs
je
inc
sub
insl
subl
mov
pop
xlat
add
pop
mov
loop
icebp
mov
push
push
std
and
dec
xor
lea
idivb
cmp
test
in
jb
nop
jb
mov
xchg
xchg
xor
daa
je
mov
mov
rol
sbb
lcall
xchg
ror
or
andb
mov
pop
fdivrl
mov
test
push
notb
xor
das
loopne
cld
outsb
jl
inc
fdivrs
push
subl
push
je
hlt
inc
je
call
inc
frstor
sbb
sbb
lods
sbb
push
rolb
movsl
fiadds
and
mov
add
xchg
cmp
dec
arpl
ret
out
inc
imul
add
pop
xor
cmp
xchg
pop
cmp
jne
punpckhdq
adc
into
sahf
mov
cmp
cmp
xorl
js
jb
notl
xchg
mov
movsl
or
sbb
or
and
mov
leave
mov
or
xchg
inc
mov
sbb
cmp
test
or
lea
shrb
mov
inc
push
mov
addl
cmp
jnp
xorb
loope
lds
inc
inc
das
out
cmpb
loopne
pushf
es
faddl
adcb
mov
aaa
push
adc
sbb
adc
mov
out
insb
and
into
jo
stc
jmp
or
xorb
mov
inc
sahf
cmpsb
jge
data16
adc
dec
and
repnz
arpl
int
leave
mov
lea
mov
add
ss
or
mov
jle
clc
hlt
mov
xchg
jg
cmp
cmp
pop
jl
cmp
add
jg
clc
add
testb
pushf
lods
xor
pop
aaa
adc
into
sbb
push
je
add
or
or
push
popa
and
lahf
pusha
fldenv
push
cmpsb
push
mov
ret
xor
out
mov
addb
inc
xor
or
loope
dec
into
jae
or
jmp
pop
lock
mov
lods
pushf
popf
cmp
jmp
std
xor
test
jl
aaa
jmp
xchg
lods
ds
jge
xor
adc
mov
out
std
or
add
pop
pop
sbb
js
outsb
cld
jmp
dec
jge
mov
xor
xchg
jmp
outsl
gs
je
test
testb
adc
pop
mov
adc
inc
and
andl
push
cwtl
in
test
and
pop
push
push
or
movsb
ret
push
dec
ss
mov
push
fstpl
push
aas
les
mov
sub
xchg
fst
jmp
push
lahf
or
push
inc
pop
dec
push
aad
add
push
cmp
push
mov
push
xchg
inc
mov
lock
push
push
push
daa
pop
inc
add
movsl
cltd
mov
push
push
lods
js
push
push
ret
inc
pop
pop
sbb
or
pop
add
mov
xchg
rclb
pop
pop
dec
fisttpll
and
hlt
mov
rolb
lock
mov
push
incl
xor
je,pt
add
jle
jbe
adc
fstl
mov
je
aam
jnp
test
dec
rcrb
ljmp
sub
int3
ja
and
sahf
mov
cmp
adc
push
jle
inc
or
mov
mov
mov
mov
pop
imul
sub
add
lcall
lea
in
in
jo
adcb
cmp
push
mov
push
popa
sub
rclb
mov
mov
and
push
mov
mov
insb
mov
or
jmp
jge
push
call
movsb
push
addl
or
mov
scas
lcall
adc
orb
lret
xor
mov
add
sub
mov
adc
pop
lock
push
in
or
lds
sbbb
or
fldcw
push
psubw
decb
enter
xor
and
pop
mov
pop
std
pop
pop
ret
fidivrs
mov
loop
jno
jbe
adc
notl
add
adc
in
dec
lods
sti
mov
sbb
fistpll
xor
and
sbb
sarb
mov
or
lret
pop
fisubrs
jle,pt
mov
jp
add
jmp
dec
sub
cmpsl
in
push
int3
sbbl
jae
je
mov
add
add
dec
stos
call
sti
adc
mov
cld
cmc
je
mov
mov
xchg
mov
cld
push
imulb
sbb
push
sub
or
cmp
mov
or
dec
xchg
and
icebp
xchg
test
dec
mov
insb
mov
ds
xor
adc
rcrl
add
xchg
and
mov
mov
add
push
out
mov
or
mov
xchg
adc
loopne
sti
or
aam
mov
xchg
and
fcomps
mov
mov
pop
or
data16
loopne
testb
push
orl
pusha
hlt
out
pushl
pop
sub
inc
hlt
insb
sub
mov
cmp
frstor
into
rorb
inc
or
add
clc
xorl
pop
dec
inc
cmp
inc
div
imul
adc
rorl
rclb
cmc
jnp
sub
jg
sbb
jne
mov
inc
sbb
mov
scas
xchg
xlat
and
push
ret
xor
loopne
pop
mov
pop
xchg
push
std
mov
adc
adc
jmp
call
add
inc
adc
sub
jno
call
or
mov
in
rclb
pop
fs
cmp
je
mov
push
mov
lret
sbb
adc
jne
adc
jo
fstpt
flds
jmp
ret
cmp
sbb
jecxz
hlt
cmp
je
nop
shlb
xor
imul
jne
add
in
lock
mov
outsl
rclb
cmp
or
cmp
test
pop
or
js
sahf
call
lea
orl
sarb
cltd
add
mov
decl
adc
sarb
jae
lea
jmp
sbbl
or
inc
inc
cmp
jbe
cwtl
in
sbb
pop
or
and
orb
outsb
mov
stos
in
shrb
adc
sub
sub
inc
movsb
mov
xor
jo
add
cwtl
jo
outsl
pusha
call
in
xchg
mov
mov
hlt
push
push
in
cmpb
and
subb
pop
les
and
mov
push
pop
add
imul
orb
stc
and
rcr
pop
inc
pushf
addl
sbb
sarl
adc
sub
mov
xchg
repz
mov
add
lock
in
add
dec
sub
cmp
mov
xchg
mov
ss
cwtl
fcomps
sbb
cmpl
les
pop
add
and
add
mov
push
repnz
inc
fcompl
adc
mov
cmp
mov
ret
scas
xchg
jge
sub
sahf
shlb
mov
cltd
rorl
push
sahf
mov
sub
xchg
dec
mov
jle
or
std
loope
lahf
ja
test
dec
test
mov
rol
pop
cld
pop
gs
push
je
jo
xchg
inc
loopne
mov
in
jmp
js
xchg
imul
sbb
loopne
jae
mov
xchg
pop
add
jecxz
in
jns
xchg
call
mov
repnz
adcl
shll
fstpl
mov
fwait
adc
and
or
mov
add
or
jp
clc
orl
ss
fsubrs
or
or
mov
adc
adc
or
mov
dec
inc
cmp
cmpb
inc
mov
leave
pop
sub
pop
add
mov
nop
sbb
lds
jne
or
orb
xor
sub
sbb
push
push
adc
insb
in
inc
sub
clc
lea
inc
cmp
lea
xor
dec
jns
pop
rorb
rorb
inc
cwtl
push
push
xchg
ret
and
cmp
es
negb
int
lahf
in
lret
or
jnp
movb
aam
fsubrs
mov
test
jmp
cmp
jbe
mov
sbb
jp
inc
jns
int
imul
mov
push
test
dec
mov
sti
cmp
dec
or
sub
lea
pop
add
pop
js
xor
stos
and
and
lahf
inc
inc
mov
mov
xor
clc
hlt
sbb
scas
xchg
hlt
jns
or
inc
pop
mov
add
mov
dec
pusha
cmp
cmp
jae
mov
cmp
sbb
flds
jne
push
js
fisttpl
jle
mov
fnstenv
mov
inc
lods
push
mov
xchg
ljmp
sbb
add
ficoml
pushl
cmp
dec
add
int3
push
mov
adc
orl
data16
or
sbb
rol
xchg
pop
add
cmp
push
mov
adc
je
mov
sub
or
fs
cmpsl
mov
dec
mov
lea
cmp
mov
orl
inc
inc
adc
mov
jge
pusha
jle
push
adc
fxch
xor
sub
daa
sahf
push
jne
test
dec
arpl
pop
dec
mov
pusha
xor
pusha
sub
or
mov
inc
mov
xchg
insl
out
mov
jne
cmp
imul
adc
fcmovnu
push
ljmp
idivb
dec
hlt
inc
or
sti
rolb
das
hlt
sbb
pusha
jne
lea
xorl
ja
inc
loop
inc
jne
sub
das
or
jmp
cmpsl
mov
imul
hlt
nop
xor
ret
sub
dec
jnp
fstpt
mov
adc
gs
loopne
in
push
adcb
lods
push
cmpsl
lahf
addb
shll
data16
cltd
bound
dec
dec
lock
push
adc
mov
adc
dec
push
leave
mov
dec
add
mov
outsl
loopne
sub
push
mov
add
fcom
mov
sbb
mov
sarl
adc
mov
sbb
sbb
add
push
cli
adc
data16
xchg
add
push
and
push
test
mov
imul
mov
push
hlt
and
mov
adc
seto
aam
pop
movsb
test
or
jnp
mov
add
adc
mov
jae
fdivrs
dec
or
shl
jp
loopne
ljmp
stos
ret
push
pop
and
test
out
or
dec
push
aaa
dec
or
jns
lea
xchg
mov
mov
iret
jbe
cmp
add
lret
test
test
mov
add
jne
dec
push
or
add
jbe
and
or
pop
cmp
jbe
xor
or
clc
and
pop
js
pop
sbb
adc
lods
inc
loop
call
or
add
shll
shlb
mov
push
out
mov
inc
shrd
ss
dec
xchg
pop
or
pop
jp
sarb
clc
cmpl
insl
mov
inc
orb
inc
test
jg
stos
pop
jge
xor
mov
jo
scas
aam
insb
decl
sarb
jbe
mov
mov
sarl
cmpb
mov
cmp
adc
cmpl
inc
cmpsb
dec
sbb
mov
mov
clc
xchg
stos
xor
jmp
sbb
add
mov
mov
sub
popf
inc
sub
xor
shll
pop
cld
xchg
pop
sub
shrl
bound
push
std
push
dec
movsb
sarb
into
jmp
push
out
cmp
cmp
dec
xor
jbe
mov
outsl
sub
wbinvd
inc
cmp
leave
ror
jae
cmp
push
jo
testl
and
mov
pop
xchg
lret
clc
and
mov
mov
or
inc
jg
jb
pop
add
xor
add
mov
daa
xchg
sub
push
sbbb
hlt
inc
cwtl
xchg
out
lock
stos
mov
fdivs
pop
sbb
inc
movsl
loope
mov
push
dec
push
push
dec
push
inc
sahf
sti
in
jp
lea
sahf
mov
int3
mov
jbe
or
sub
stc
or
add
adc
enter
mov
push
les
add
aad
dec
shlb
push
lock
xor
jmp
mov
mov
xchg
push
mov
sbb
cwtl
arpl
pop
repnz
add
iret
cmpsb
loopne
cmp
dec
xor
icebp
or
cwtl
int
out
rcrb
xorl
movsb
mov
jle
jecxz
adc
jge
or
mov
cmp
dec
cmpsl
push
adc
xor
sbb
cltd
lret
enter
call
cmp
adc
jne
in
in
jl
cmp
out
jbe
mov
sbb
fisubl
adc
enter
sbb
jl
stos
sbb
bound
push
out
out
popl
or
push
pop
clc
add
clc
jno
pusha
add
mov
cmp
or
repz
sbb
mov
sub
lcall
je
sti
xor
test
repnz
or
push
cmp
les
inc
aas
xor
lea
lret
and
les
popf
rol
test
push
ret
jmp
mov
out
and
or
punpckhbw
pcmpeqw
fsubr
shlb
imul
cmc
negl
scas
xchg
in
xchg
and
cltd
out
push
and
push
mov
ss
bound
jb
push
sbb
and
hlt
ret
adc
rorl
sahf
repnz
mov
mov
mov
jle
push
int3
in
test
adc
and
mov
aam
xor
push
jmp
fwait
test
and
faddp
push
or
mov
sti
or
outsb
sbb
fisubrl
roll
int
dec
add
je
jo
pop
lea
in
and
jmp
js
xor
add
movsl
jecxz
insb
loope
inc
mov
xor
sub
dec
jne
add
test
or
popf
loope
sub
adc
push
lods
outsb
pop
lea
lods
mov
lret
push
push
cmp
push
cwtl
jbe
movl
shrl
jge
outsl
popa
leave
repnz
inc
cmpsb
and
js
fimuls
imul
jb
sbb
xchg
rclb
addr16
mov
inc
setns
int3
cmp
insb
out
ret
jae
sub
loopne
adc
or
int3
adc
ljmp
dec
mov
cmc
xchg
rcrb
enter
mov
sbb
dec
adc
cmp
js
nop
add
lahf
and
incb
mov
xor
push
pop
mov
nop
loopne
movsl
or
sti
leave
xchg
jmp
pop
or
jb
xor
je
push
push
xor
push
add
xchg
jle
sub
enter
cltd
jl
std
jg
gs
int3
add
pushf
mov
add
add
cld
es
mov
stc
call
cld
pop
insl
enter
cwtl
scas
sub
cmpsb
loopne
cmp
inc
nop
or
add
add
stos
cmp
sbb
aad
pusha
lea
movsl
push
jmp
mov
xor
and
je
mov
rorb
cmpl
cmpl
fs
adc
adc
dec
repz
sub
lea
xor
jmp
or
add
add
cmp
xor
aas
or
adc
cmp
jp
add
inc
mov
jmp
rorb
mov
pushl
jmp
add
adc
sbb
insl
jle
in
pop
loop
push
cmp
aas
mov
mov
fcoml
mov
adc
mov
xchg
testb
outsl
mov
push
push
mov
mov
ja
jg
nop
adc
cmpb
ret
push
dec
mov
lea
push
sub
sbb
dec
cli
mov
stc
pop
push
cwtl
outsb
loope
push
xchg
clc
fimuls
add
mov
js
push
or
or
enter
mov
shrl
inc
sbb
mov
ljmp
shrb
cmp
push
cmp
jae
inc
jmp
push
or
js
sub
mov
stos
and
ret
movb
add
add
push
pop
dec
fcom
sub
and
mov
add
lahf
xchg
jmp
into
or
jbe
aas
jne
and
adc
push
dec
in
and
jne
mov
xor
cmp
jle
in
js
in
dec
aaa
or
rolb
clc
jne
or
sbb
sbb
add
popa
fnstenv
cmp
add
fisubrl
dec
dec
pop
mov
cltd
adc
fwait
or
imull
adc
pop
dec
mov
mov
xchg
or
or
and
and
outsb
push
ret
jae
xchg
add
mov
xchg
repnz
jb
or
xchg
inc
add
mov
jbe
fnsave
dec
mov
rclb
cld
je
mov
cmp
adc
ja
cmpb
mov
push
mov
push
or
or
xor
sbb
add
nop
push
mov
daa
adc
cmp
jb
inc
sbb
mov
pushf
cmpb
fadds
cli
or
jl
data16
shrl
mov
push
pop
push
inc
or
fcmovnu
js
add
es
jl
cmpsb
push
cmp
popa
or
adc
movb
aaa
jmp
mov
adc
shlb
lea
cli
ja
push
test
flds
ret
push
and
inc
pop
pop
xchg
data16
xor
and
or
aad
push
adc
or
inc
ljmp
xor
cs
xchg
push
addr16
push
sbb
imul
lods
mov
sub
stos
pop
adc
mov
pop
in
mov
mov
sbb
or
add
out
sbb
mov
divb
jns
jg
adc
dec
add
jnp
push
or
mov
stos
mov
mov
pop
aam
mov
pop
sub
cmp
ja
inc
movb
jo
cmp
jmp
dec
mov
mov
shl
dec
cmp
lea
jl
mov
mov
aaa
adc
xor
jns
mov
xchg
aas
lods
push
repz
jne
jmp
or
test
cli
push
pop
dec
mov
adc
lea
add
mov
adc
or
adc
orl
add
mov
rorb
dec
mov
dec
or
xor
add
cmp
jbe
pop
and
cmp
cld
push
rorl
add
fstl
xor
in
dec
push
sub
xor
and
mov
push
dec
sub
es
add
leave
sbb
or
imul
leave
or
mov
clc
movl
pop
dec
std
push
stc
cld
push
mov
push
popf
dec
mov
sub
aam
add
fdivr
ss
add
ret
and
or
lods
addr16
cli
in
test
inc
in
add
xlat
cmp
cmpb
pushl
push
mov
or
addl
data16
dec
pop
cmpsb
and
cmp
or
jmp
push
mov
or
lock
pavgb
xchg
movsl
mov
add
cmp
jl
add
hlt
adc
in
sub
aas
xor
pop
ret
add
mov
cmp
or
push
adc
mov
cmp
jne
push
les
add
add
test
daa
or
or
inc
fwait
push
addr16
add
pusha
mov
cmp
xlat
repnz
das
addb
adc
pop
push
jo
daa
or
push
mov
push
cmp
inc
push
cwtl
sbb
test
rorl
ss
icebp
jb
dec
js
inc
or
lea
jne
cmpb
pop
iret
leave
xor
and
jl
out
les
out
fnstsw
sarb
out
dec
adc
adc
lock
out
push
and
aad
or
adc
adc
into
call
pop
sub
and
pop
inc
adc
jns
sub
xor
inc
sahf
xchg
ja
add
enter
int3
add
or
test
aas
sub
inc
jl
or
sub
lahf
je
push
adc
push
and
rolb
push
or
insl
sbb
sbb
test
sub
jno
xor
xchg
cmpsl
fadd
lods
in
or
orl
jge
jmp
inc
mov
or
pop
dec
pusha
enter
nop
clc
push
ja
mov
andl
das
test
add
sub
ss
daa
or
ret
push
push
pop
stc
xor
ja
imul
rorl
pop
push
ret
push
add
pop
insb
add
add
pop
cld
inc
pop
divb
insb
cmp
inc
fldcw
mov
dec
dec
dec
mov
cmp
push
jge
push
add
int
outsb
mov
push
leave
mov
xor
dec
inc
cs
pushl
xchg
rorb
arpl
pop
jmp
ret
lret
add
dec
inc
dec
sahf
popf
fs
and
out
cmpsl
and
adc
push
rcrb
inc
femms
imul
imul
or
pop
lods
call
mov
rorb
decl
jl
or
jg
add
test
pop
call
inc
out
push
jb
xor
out
or
add
mov
mov
mov
dec
fsub
push
xchg
xchg
push
inc
pop
inc
dec
or
mov
stc
or
push
mov
sub
cmp
lock
add
jge
jp
add
les
xchg
mov
cmp
jne
es
inc
push
add
xor
int3
sbb
inc
sbb
nop
mov
jno
popa
lret
clc
dec
or
rclb
decl
mov
and
dec
add
repz
adc
faddl
mov
or
fwait
pop
xorl
loope
xchg
sub
push
inc
subb
stos
and
mov
push
jle
xchg
mov
mov
je
cmp
or
cli
lahf
adc
aam
or
pop
inc
and
adc
in
or
pop
push
inc
sub
call
and
adc
icebp
in
mov
outsb
call
lock
cmp
outsl
lds
ret
mov
add
push
adc
imul
mov
cmc
cmpsl
xor
and
sbb
pop
and
leave
arpl
popf
mov
mov
cltd
out
push
add
outsb
sbb
into
push
add
sbb
jge
pop
sbb
jge
jns
sbb
jmp
cld
push
mov
push
lods
xchg
fisubs
cmpsl
nop
sbb
cmp
pop
adc
pusha
and
sub
cld
int3
jb
test
loope
mov
lods
push
std
movsb
stos
mov
jmp
mov
mov
pop
xor
push
mov
cmp
adc
mov
push
or
mov
in
inc
sbb
mov
pop
cmp
push
sbb
js
mov
jns
roll
xchg
and
gs
mov
repz
je
lcall
mov
sbbl
js
dec
sbb
jns
scas
loope
scas
out
sub
pop
and
pop
enter
mov
mov
testl
or
xchg
lea
mov
sub
fidivrs
lar
mov
fwait
cmp
sub
push
xorl
arpl
inc
push
jae
push
sarb
orl
or
dec
outsb
ljmp
icebp
sub
or
fstps
aaa
daa
cld
cs
ret
push
aas
push
push
enter
xchg
pop
inc
push
inc
add
clc
pop
cwtl
dec
popa
test
fdivl
lea
ss
mov
lea
or
inc
call
das
add
inc
mov
or
or
mov
popa
or
adc
and
jne
adc
inc
push
imul
pop
sarl
mov
shlb
adc
jle
push
sbb
pop
call
cmpsl
jp
hlt
cmp
jl
jb
sarb
stos
or
sub
push
loopne
push
add
or
test
addl
and
loope
mov
xchg
aaa
std
fmull
pop
outsl
dec
loop
push
cwtl
jne
xor
pop
add
out
or
jne
cmp
inc
or
inc
or
ret
xor
pop
dec
loopne
mov
cmpl
call
xchg
xor
mov
out
sub
cmp
call
rclb
or
or
push
mov
mov
push
lock
mov
jno
dec
sub
test
popf
lret
cmp
jmp
aam
add
add
fimuls
inc
std
inc
jne
jae
jecxz
dec
fdivl
imul
sbb
add
test
xlat
push
call
xchg
mov
aam
dec
iret
pusha
lds
adc
lds
inc
add
fmull
jge
add
xlat
add
aam
mov
repnz
mov
push
xchg
into
leave
add
xchg
test
sub
inc
loopne
mov
scas
xchg
pop
in
lock
adc
mov
fcomps
dec
mov
inc
stos
cmpb
je
nop
ja
mov
xor
adc
rcll
push
mov
cs
outsl
jne
rorb
lret
adc
cs
pop
cmp
in
dec
sbb
arpl
ret
jl
rorl
mov
das
aad
shlb
dec
pop
push
sub
adc
test
pop
in
roll
lret
ljmp
repz
mov
mov
data16
jg
mov
bound
enter
fidivl
mov
pop
ret
xchg
add
adc
and
add
jmp
push
add
push
cmp
dec
push
push
pop
mov
push
push
int
cmp
incb
imul
push
clc
lahf
ret
xchg
hlt
repnz
pop
jmp
mov
lea
push
push
mov
mov
sub
fmuls
mov
notb
pop
pop
jg
shrb
jle
push
das
dec
add
fisubl
call
jl
setb
dec
cs
mov
pop
shll
mov
inc
or
xor
xchg
adc
add
shll
sbb
push
and
mov
dec
in
mov
push
sbb
push
orl
in
add
sbb
adc
stos
cs
cmpb
cmpsl
adc
push
in
jbe
mov
add
jecxz
out
das
mov
push
loopne
loope
jne
dec
movups
mov
divl
jecxz
inc
sub
mov
in
inc
cmpsb
loopne
andb
and
add
push
aaa
or
push
inc
mov
mov
mov
movsl
loopne
push
addr16
daa
lea
xchg
sbbb
test
fadd
cmpsl
xor
cmp
adc
outsl
das
jp
rorb
or
popf
pop
cmp
jae
push
jb
mov
mov
fs
add
cwtl
add
hlt
bound
mov
mov
jo,pn
xor
jb
test
mov
mov
mov
and
push
pop
or
pushf
or
fwait
xchg
adc
xchg
mov
repnz
test
jnp
cld
cmp
mov
mov
js
loope
arpl
out
push
pushf
in
mov
xchg
xchg
xchg
push
ss
movsl
inc
jmp
xlat
shll
jb
dec
loopne
shl
movsb
orb
test
lahf
setns
sqrtps
xor
fsub
int3
aas
js
jo
fildl
sbb
popf
cli
shll
bound
mov
es
adc
jg
stos
pop
pop
push
fidivs
out
pop
mov
mov
push
sbb
loopne
inc
inc
sbb
sub
jmp
sub
xor
jb
loop
push
pop
push
sub
cltd
fisubrl
fcompl
out
fdivl
cld
je
and
fisubrs
sub
fsts
sbb
clc
xchg
es
sbb
adc
and
cmpsl
or
and
mov
jns
outsl
fs
dec
push
sub
push
xlat
sbb
add
test
add
in
jb
add
xchg
lret
xor
xor
push
dec
sub
cmp
cmp
push
cmp
lret
movsb
or
and
inc
insb
push
pop
sarb
movsl
pop
adc
idivb
add
les
outsl
test
push
mov
fmull
mov
mov
or
sahf
fsubrs
xchg
push
rcll
dec
aam
push
movl
in
inc
pusha
add
pop
mov
ss
es
call
jns
add
dec
and
cmp
jg
or
movsb
icebp
xchg
and
sbb
xchg
mov
and
rcrb
int3
imul
or
sub
pop
push
xchg
enter
pushf
mov
adc
andb
mov
jg
fs
inc
push
cmp
inc
inc
push
cmp
cmp
xor
cmp
nop
xor
and
in
inc
sbb
insl
nop
inc
push
or
or
pop
sub
xchg
movsb
add
gs
lds
push
pop
in
fidivrl
push
sbb
xchg
jl
add
cmp
lahf
ret
in
jmp
push
or
jae
xor
or
aaa
cltd
cmc
iret
cs
test
mov
push
adc
imul
movntps
mov
rorb
repz
cmpsl
push
pop
jle
or
cld
pop
sub
pop
subl
add
add
ljmp
push
and
sub
inc
add
push
push
sbb
cmp
or
shlb
or
and
leave
mov
pop
push
xor
sbb
outsl
rorb
push
sbb
cmp
ja
mov
jge
sbb
mov
insb
or
or
or
out
orl
push
cli
push
push
sbb
or
mov
cli
ljmp
pop
stos
jge
add
dec
and
inc
or
jmp
lea
inc
in
pop
outsl
adc
filds
jo
dec
mov
add
inc
popf
mov
adcb
shll
jecxz
rcl
add
xchg
in
add
leave
and
daa
add
push
or
add
rcrb
mov
shl
pop
in
in
mov
or
pushf
cwtl
push
xchg
and
xchg
sub
jecxz
jp
xchg
repz
mov
mov
out
mov
mov
test
pop
add
pop
ret
xchg
mov
mov
and
cwtl
fwait
and
aam
pop
jo
pop
xor
stos
cmc
or
mov
xchg
pop
xchg
add
mov
sbb
imul
fmull
ss
push
cmp
add
sti
inc
add
pop
push
jo
push
loop
add
fstpl
sti
insb
sbb
cmpsb
xchg
add
pop
mov
ud2
inc
lock
call
xchg
js
jns
lods
push
rcrb
lcall
pop
fcoml
xchg
add
sub
leave
repnz
add
sbb
or
or
shlb
out
push
jns
inc
aam
mov
mov
pushf
popa
lret
je
sub
les
push
shrl
xchg
js
and
cmp
jne
imul
xor
adc
xor
fwait
andl
and
mov
xchg
cld
adc
movsl
scas
cmpsl
inc
adc
std
pop
cmp
add
xchg
loope
or
ljmp
adc
jne
pop
in
mov
call
xor
dec
and
pop
jo
mov
or
adc
cld
mov
popf
mov
pop
push
idiv
mov
shlb
cmp
jae
push
imul
incl
sti
jmp
mov
push
repnz
xchg
mov
pop
mov
dec
sbb
pop
add
mov
push
dec
test
mov
xor
dec
adc
ror
sbb
int3
inc
mov
sbb
push
push
insb
add
lahf
or
dec
mov
or
or
mull
in
movsl
add
fmulp
inc
pop
pop
enter
and
sub
xchg
dec
adc
or
and
sbb
fwait
ja
fisttpll
fs
pop
aam
addl
lea
inc
or
shrl
fiadds
dec
pusha
mov
push
mov
subl
mov
sbb
lea
pop
xor
inc
repz
ja
fbld
push
pop
shrb
decb
das
add
mov
add
repnz
ja
jno
ficoms
in
dec
add
xchg
loope
adc
mov
test
pop
repnz
out
popf
and
cmpps
sbb
jne
mov
adc
inc
mov
loope
dec
lods
repz
add
inc
pusha
mov
aad
add
fisttps
adc
adc
jne
jno
mov
xor
adc
lcall
push
je
sbbl
scas
aas
xchg
push
mov
movsb
jl
or
aad
add
dec
lret
push
outsb
add
pop
inc
pop
mov
mov
pushf
push
int
mov
dec
faddl
jo
or
xor
mov
add
push
aad
sbb
notb
lea
xor
adc
mov
cmc
mov
jnp
add
sbb
sbb
jmp
push
xor
jp
and
dec
sbb
shll
add
xor
andps
movb
js
or
in
popa
xor
test
std
push
push
adc
or
mov
and
fcomps
dec
push
adc
addb
add
shll
repz
mov
popa
adc
outsb
rclb
mov
dec
ret
ret
or
pusha
push
jl
imull
cmp
pusha
sbb
push
inc
and
lret
pop
mov
nop
add
add
add
sbb
popa
xor
sub
xchg
in
cmp
into
in
xor
cltd
mov
mov
inc
push
mov
mov
pop
orl
mov
inc
cmp
js
or
pop
mov
jp
mov
nop
nop
pop
adc
jae
push
jae
cmc
stos
inc
subb
and
shll
or
inc
xchg
in
leave
jg
lds
cmp
jge
jle
shl
dec
scas
add
mov
ss
jo
cmp
addl
sub
sbb
cmp
movsb
mov
adc
and
inc
sub
vmovlps
nop
lock
popf
fisubrs
loopne
adc
adc
icebp
pop
sbb
pop
das
popl
pop
popa
mov
leave
add
mov
jl
jge
repz
mov
or
cmpsb
lock
adc
pop
xchg
popf
xor
push
cmp
out
loope
cmp
add
ds
jo
mov
mov
inc
cmp
xor
or
add
add
aas
xor
mov
divl
pop
insb
xchg
dec
sahf
popf
sbbl
push
lret
push
jmp
push
xchg
lock
aam
loope
and
mov
cmpsl
repnz
orl
mov
dec
mov
inc
and
or
or
mov
test
sbb
sbb
insb
xor
out
pop
sub
cmc
movsb
jecxz
sbb
sbb
adc
add
add
mov
adc
cld
jns
push
jo
out
add
iret
das
mov
dec
loopne
outsl
push
cmpsl
lods
cmp
les
fdivl
xorb
jecxz
hlt
xor
jnp
mov
in
lock
push
rclb
ficomps
push
mov
insl
and
cmp
cmc
fwait
movsb
fiaddl
scas
nop
addr16
push
sbb
inc
sbb
mov
and
pop
and
call
adc
xchg
cltd
ret
jle
out
mov
sbb
stc
je
jp
pop
push
es
repz
mov
ds
xor
and
in
adc
nop
inc
or
mov
push
enter
inc
mov
sub
or
add
and
adc
sbb
jbe
stos
adc
fcomps
into
jnp
pop
dec
jne
dec
das
aaa
sub
jbe
jae
cmpl
dec
mov
idivb
scas
mov
jg
mov
sti
pop
xchg
test
pop
mov
xchg
cmp
mov
les
js
mov
scas
sarb
enter
fisttpl
lea
pop
int3
cltd
mov
pushf
mov
xchg
out
dec
pusha
in
fcmovnb
mov
mov
and
cs
and
inc
xchg
sub
xchg
mov
test
roll
mov
loope,pn
iret
jmp
lcall
je
cmp
jle
push
movsb
loopne
cmp
pop
and
in
xchg
adc
shr
mov
pop
inc
cmp
mov
rcrb
push
xlat
leave
sbb
mov
dec
pop
lahf
xchg
cmp
sbb
xchg
mov
rclb
decl
sbb
popa
mov
repz
in
or
loop
jecxz
mov
jle
enter
jmp
fldl
push
roll
pop
mov
rclb
dec
xor
test
or
dec
sbb
mov
add
lea
add
dec
aas
add
lahf
mov
xchg
jbe
loopne
pusha
mov
pop
mov
jmp
mov
iret
cmp
jg
test
xor
dec
push
je
dec
jne
leave
imul
arpl
push
xor
adc
ficoml
and
cmp
inc
mov
xor
dec
sub
jp
insl
adc
jmp
cmp
pop
shrb
sarb
or
xor
cmp
leave
dec
xor
inc
dec
aas
sbb
scas
push
xor
movsl
mov
jp
cwtl
or
lcall
add
repnz
push
mov
mov
ja
push
and
cmp
inc
push
cmp
sub
adcb
dec
adc
add
or
insl
mov
and
mov
or
push
xchg
add
and
das
andb
sub
ljmp
or
jb
inc
mov
pop
inc
in
dec
dec
jl
or
lcall
or
adc
sbb
add
mov
lret
pusha
mov
lock
and
and
inc
loop
pop
call
pusha
xor
add
push
sbb
pop
mov
add
sub
or
bound
xchg
aas
mov
sub
sti
je
adc
push
inc
out
enter
or
iret
mov
dec
inc
pop
and
add
rorb
jnp
push
test
minps
sahf
mov
out
insl
pop
rclb
and
xor
sub
xor
jae
jb
xor
cmp
xor
push
pop
pop
in
lret
pusha
push
gs
dec
cmp
or
orb
sbb
jl
or
movsb
xor
sbbb
test
in
or
or
pop
mov
lods
adc
push
aas
mov
and
or
and
in
or
and
sub
fidivrl
add
movb
xor
addb
mov
adc
xor
push
dec
inc
push
cmpsb
adc
lods
adc
mov
inc
out
add
or
xchg
jg
adc
lea
mov
mov
xor
or
xor
add
jns
push
adc
inc
out
dec
inc
push
add
jns
pop
mov
jle
pushf
jl
sbb
xlat
clc
int3
pop
sub
sub
jbe
cmp
andb
sbb
cmpsb
adc
mov
enter
lahf
pop
cltd
ret
int3
mov
inc
dec
adc
mov
fistpl
push
sbb
in
cwtl
ds
and
adc
xor
adc
and
dec
in
add
push
sub
mov
inc
or
mov
mov
adc
push
adc
inc
mov
push
scas
fsubrs
ret
jecxz
mov
test
add
jmp
jecxz
testl
dec
xor
mov
push
inc
mov
jge
mov
lea
xchg
pop
xchg
push
xchg
nop
shl
test
fdivrl
inc
xor
adc
enter
int3
push
test
nop
xchg
ficomps
popa
int3
test
test
cmc
or
jb
or
push
cmpsb
mov
loopne
xor
xor
push
std
rorb
dec
mov
aad
adc
push
xor
popf
mov
dec
aas
or
jne
sbb
adc
add
and
cmp
std
add
orl
lock
stc
and
jle
enter
fiadds
pop
popa
jo
cmpsb
jmp
push
cwtl
xlat
pop
mov
adc
push
mov
and
repz
jnp
cmpb
xchg
mov
scas
jge
sub
cmp
jle
jecxz
add
cmp
sub
jmp
push
jmp
xor
sub
aaa
sub
sub
jae
mov
add
push
push
mov
es
adc
jmp
sbb
gs
aad
rclb
decl
xchg
cmp
faddl
aam
cmp
loop
cmp
iret
pop
es
jp
add
enter
lods
fdiv
jno
scas
inc
insb
bound
inc
lock
jle
mov
jbe
add
mov
fiaddl
dec
rcrb
icebp
jne
cmpl
adc
mov
push
pushl
dec
pop
jmp
testl
sbb
sbb
jae
sub
cs
test
mov
sbb
cld
lcall
out
pushl
test
adc
pop
jne
out
ret
dec
and
call
inc
lods
push
in
cmp
loope
lock
xorb
les
je
nop
cmp
stc
push
lock
mov
sub
pop
shl
in
in
xor
movsb
popa
and
or
dec
sub
cmp
push
add
and
testb
dec
movsb
clc
xchg
inc
loopne
cmp
xchg
lods
out
xchg
shrb
mov
push
xor
cmp
addb
adcb
sub
orb
ret
mov
push
ret
rcll
ret
push
sbb
pop
xor
arpl
or
fcomps
inc
pop
ret
ret
inc
bound
sub
xchg
or
push
pop
and
adc
and
sbbl
sahf
out
out
lock
mov
sbb
mov
jns
iret
in
mov
and
or
ret
arpl
jo
mov
sbb
pop
adc
push
call
or
add
insb
sub
mov
dec
or
nop
push
mov
cltd
sbb
leave
jno
mov
or
pop
mov
xchg
sar
loope
and
mov
inc
outsl
sub
cmp
movsl
aaa
test
xor
cltd
add
sbb
dec
xchg
pop
test
stc
mov
sbb
sub
xor
stc
jnp
inc
mov
pop
pop
daa
add
rorb
imul
push
and
out
cld
add
ljmp
lahf
scas
mov
testb
aaa
popl
jbe
xor
ss
mov
inc
sub
or
jbe
mov
push
pop
xor
cli
sub
mov
push
pop
adc
out
jo
pop
out
inc
mov
dec
push
test
daa
enter
arpl
les
xlat
cmp
jg
ja
jo
cmpb
mov
fs
aaa
movsb
pusha
test
dec
sub
jbe
jecxz
fiadds
add
or
push
and
cmp
addr16
xor
sbb
push
or
dec
sbb
imul
add
add
leave
add
push
mov
jae
inc
inc
mov
inc
mov
or
inc
dec
pop
lock
dec
xor
scas
mov
mov
sbb
cmpsl
fsubrs
pop
jns
shlb
mov
and
adc
mov
hlt
sub
and
jne
pop
lock
and
xor
adc
out
dec
mov
sbb
and
or
and
or
push
xor
xchg
add
push
lret
or
nop
cmp
adc
xor
jb
sbb
mov
or
es
negl
sbb
push
mov
fcoms
adc
rclb
pop
lock
enter
xchg
sbb
lds
pop
inc
inc
test
adc
in
loop
xchg
cmp
add
sbb
cmpsb
add
jne
sbb
cmp
xchg
pop
push
pop
pop
and
and
mov
sub
adc
test
in
fsubl
xchg
jb
lea
mov
sub
in
cmp
jne
mov
xor
push
mov
xchg
lcall
cmp
loope
dec
iret
lods
out
pop
roll
and
icebp
xchg
push
sbb
xor
es
and
xchg
lcall
add
xor
add
push
cli
dec
jl
ret
jmp
sub
or
scas
jno
lock
dec
js
pop
adc
jmp
and
add
cmp
add
clc
outsb
add
fwait
xchg
mov
or
mov
movb
or
add
adc
sbb
mov
jne
push
fmuls
mov
jmp
sahf
mov
pusha
rorl
mov
push
test
pop
ret
dec
dec
notl
adc
cmpsb
ds
sub
mov
and
adc
mov
clc
pop
mov
pop
lret
stos
push
cltd
test
push
push
sbb
jl
xor
add
push
call
and
push
test
dec
sub
sub
dec
pop
dec
gs
or
cmp
pop
sbb
push
cmp
out
add
or
pusha
outsl
sbb
dec
pop
xchg
mov
cmp
pop
or
and
and
sub
and
pop
cmpsl
lock
sahf
enter
outsb
popa
js
inc
shll
sahf
rclb
sub
mov
loop,pn
pusha
loopne
xor
jae
call
push
ss
inc
lock
nop
push
xor
inc
movsl
fs
xor
loopne
nop
push
mov
adc
mov
pop
jb
sbb
test
fcompl
in
sbb
rcrl
mov
int
jmp
push
or
loope
xchg
dec
sbb
jle
sar
xor
fistpll
pop
jbe
sub
cmp
mov
shl
dec
xlat
inc
stos
xor
mov
sarb
jne
cmp
pop
jb
add
adc
xchg
sbb
test
xlat
es
mov
fwait
xorb
cwtl
nop
mov
leave
adc
sbb
cmpsb
xchg
ret
cmpl
or
or
sub
ds
fdivrl
rolb
pop
xor
push
daa
and
and
push
sbb
xor
js
push
inc
push
cmp
shrl
pop
mov
push
add
sub
push
xchg
xor
enter
popf
jbe
mov
jmp
and
sbb
pop
adc
add
mov
dec
pop
sbb
pop
xchg
inc
lods
jmp
jg
es
sub
subl
xor
jno
lock
adc
js
cmp
xchg
and
repnz
and
sbb
repnz
les
imul
cmc
lahf
repnz
lock
adc
movsb
xchg
xchg
es
shlb
add
shll
or
or
lea
sbb
mov
push
mov
mov
jns
cltd
lea
pop
sub
in
jnp
mov
subl
ficoms
rcrb
sub
pop
jb
repz
sub
cmp
inc
or
shlb
jecxz
push
in
mov
cs
add
pusha
or
adc
and
pop
push
pop
aaa
pop
test
mov
das
or
inc
lcall
xor
fbld
pop
lea
dec
mov
lea
pop
insl
xor
xor
and
lock
sub
sbb
int3
jmp
jbe
xor
dec
dec
and
sbbb
pop
xor
dec
test
and
xor
mov
movsl
xor
cmpsl
nop
addr16
or
sub
sahf
sub
sub
jge
hlt
fst
or
xor
sub
sbb
pop
vpslld
adc
sbb
sub
dec
ss
loopne
lret
cmp
nop
mov
sbb
dec
pop
shrl
aaa
sbb
push
sub
loopne
push
loop
xlat
inc
js
dec
mov
adc
cmp
les
push
adc
mov
push
cmpl
orb
cmp
sbbl
xchg
sub
push
push
es
sbb
and
jbe
xchg
inc
xor
hlt
push
shlb
xorb
fs
lock
repnz
pop
jmp
fchs
mov
das
push
sbb
dec
imul
enter
xlat
aaa
and
jl
or
adc
mov
dec
fdivl
imul
mov
shlb
mov
or
jns
popa
orl
sbb
inc
jo
inc
cmp
sbb
dec
test
push
andb
sbbl
mov
adc
cmp
test
mov
sub
mov
jne
pop
movsb
sbb
stc
inc
aam
inc
and
ds
cmp
jmp
enter
and
dec
cmp
pop
push
dec
mov
push
insb
loope
in
aam
adc
cmp
push
cmpsb
and
inc
cwtl
inc
sahf
int3
pop
sub
lods
roll
dec
add
adc
pop
cli
insl
or
add
push
add
hlt
mov
push
cmp
cmp
lods
and
cltd
clc
rolb
jnp
push
sbb
xchg
or
sbb
inc
adc
xor
aam
mov
dec
test
out
and
ljmp
roll
ljmp
shlb
and
xchg
loopne
xchg
jae
aaa
add
and
add
pop
push
cld
in
sub
pushl
push
adc
nop
call
aam
adc
sub
push
add
fcomps
popl
fadd
fs
add
fs
imul
and
aam
pop
loopne
add
loop
and
popf
inc
jno
repnz
and
add
add
mov
dec
loopne
adc
push
sbb
in
nop
add
js
mov
lea
dec
xlat
or
rolb
movsb
inc
and
ret
pusha
jns
mov
stc
pushf
mov
or
cld
cli
push
xor
jmp
pusha
xlat
repnz
or
paddsw
ss
pushl
xchg
ffree
sbb
aaa
push
sub
sub
or
rorb
xchg
xor
int
in
sbb
sub
dec
movsw
push
popf
imul
adc
xchg
imul
inc
out
das
sbb
sbb
pop
xor
xchg
and
pop
or
sub
lock
add
shlb
fnstenv
mov
popf
jnp
insb
adc
add
into
adcl
repnz
in
xchg
mov
movsb
add
sub
in
fdivs
jnp
lds
lahf
push
bswap
xor
or
nop
xchg
inc
pusha
push
and
xor
push
mov
popf
jb
xor
xor
cmc
jnp
xchg
cwtl
sbb
rolb
xor
pop
sub
inc
sbb
enter
dec
sarb
shrb
fnsave
sbb
inc
in
push
push
cmp
cmp
fists
sarb
pop
sub
or
xor
and
and
sbbb
xchg
popa
lret
in
jne
scas
xchg
loopne
cmp
and
cmp
popf
mov
std
and
test
sub
pop
shll
cmp
ds
popf
icebp
or
std
ja
push
adc
sbb
inc
pop
mov
add
or
aam
jns
inc
mov
xor
adc
jb
test
cmp
daa
push
push
push
and
cmp
and
add
aaa
cmpsl
add
inc
dec
push
add
xchg
push
add
add
add
gs
dec
mov
sbb
adc
lea
movsb
pusha
adc
cmp
mov
dec
mov
insl
cmp
mov
sbb
mov
adc
inc
std
fldl
sub
bndldx
cmpb
pusha
ret
xor
sub
and
push
fisttpl
lea
pop
cmp
mov
sbb
jb
xor
das
push
aad
mov
adc
scas
push
mov
and
pop
dec
ljmp
pop
mov
and
in
or
pop
leave
dec
fisttpl
pop
daa
mov
cmp
inc
xor
xor
sub
repnz
jle
xor
andl
enter
and
sbb
adc
jmp
nop
add
nop
sub
adc
adc
lret
out
xor
in
out
cmp
xor
lods
jg
adc
and
xchg
outsl
int3
adc
mov
stos
sbb
imul
loop
adc
das
lea
imul
pop
test
xor
sub
aam
adc
orl
addr16
jp
cmpb
outsl
xor
push
push
mov
and
mov
push
jg
pop
mov
dec
sbb
sub
es
hlt
push
pop
add
sbb
adc
xchg
movsl
adc
cld
xor
mov
das
daa
and
mov
push
loopne
cmp
sbb
mov
mov
aas
pop
int
jmp
push
aam
cmp
nop
add
lahf
lods
stos
lret
lcall
sub
shrb
pop
inc
xchg
mov
push
pusha
cltd
xor
pop
mov
in
push
movsl
xchg
movsb
sub
jmp
add
xor
sub
test
nop
xor
add
add
push
xchg
aam
int
lds
fildl
adc
mov
or
mov
shlb
jb
add
or
push
pop
adc
cmp
jmp
add
js
xorb
icebp
das
sbb
push
mov
sub
lock
fistl
push
adc
mov
inc
jmp
test
jl
cmp
and
lea
mov
pop
dec
mov
fsubl
dec
gs
test
adc
adc
arpl
enter
xchg
pop
or
ja
dec
in
dec
out
lea
cmpl
pusha
cwtl
or
mov
push
or
inc
test
add
or
inc
sbb
lcall
pusha
fnsave
jmp
adc
sbb
std
inc
je
push
xor
jge
sub
pusha
stc
stos
and
or
js
xchg
or
add
int
push
mov
push
jecxz
loope
or
sub
xchg
loopne
dec
add
sub
enter
cli
mov
mov
add
inc
jbe
repnz
je
and
sub
pop
adc
xchg
add
aam
push
dec
rorb
ret
mov
push
pop
or
add
add
add
adc
pop
insl
arpl
movsb
ret
push
mov
adc
or
encls
call
shr
sbb
dec
fdivrl
cmpsb
sbb
adc
fsubr
mov
mov
sbb
cmp
lods
inc
adc
jecxz
adc
sub
and
jnp
std
mov
sub
pop
enter
inc
pushf
or
jne
adc
adc
inc
mov
adc
jb
inc
inc
into
pop
or
pop
insb
mov
roll
fsubs
lods
sub
cltd
jo
inc
add
cwtl
or
sbb
and
pop
mov
mov
sarb
gs
fidivl
sbb
xor
js
adc
or
mov
je
or
mov
mov
mov
ret
adc
dec
jnp
mov
pop
aas
xor
xor
pop
adc
xor
test
jnp
add
js
in
mov
not
pusha
mov
pop
pop
movl
cltd
push
mov
cwtl
idivb
jae
add
xchg
xor
pop
cmp
pop
cmp
inc
lcall
add
sbb
pop
clc
cmpb
aaa
lods
mov
insb
jo
pop
mov
sti
dec
sbb
sbb
jecxz
add
sbb
adc
loope
or
add
sub
lock
or
xor
mov
and
sub
enter
sub
mov
cmp
fdivrs
inc
insb
sbb
outsb
jae
call
mov
add
adcl
add
xchg
movb
mov
jg
push
dec
add
scas
adc
ljmp
xlat
mov
dec
insb
sub
push
push
sbb
fdivp
and
sahf
fildl
and
imul
jbe
dec
pop
sub
enter
dec
dec
loopne
dec
pusha
push
fs
cmpsl
add
push
subb
jo
mov
movsl
mov
add
sub
movsb
or
imul
mov
and
mov
add
lea
push
movsb
fstl
cltd
jp
ja
xor
push
or
or
add
cmpsl
pop
inc
addr16
movl
pushf
nop
and
push
inc
cmp
addr16
push
jb
or
int
mov
mov
ljmp
xchg
lret
push
pushf
adc
sbbb
enter
mov
add
xchg
cmp
nop
dec
sahf
iret
das
loop
sbb
add
adc
rclb
push
mov
test
sarl
movb
fldl
add
fcompl
andb
add
mov
sub
push
mov
sbb
ret
xor
adc
ljmp
pop
sbb
mov
std
pusha
dec
cmp
jbe
inc
dec
sub
cmpl
pop
mov
ljmp
je
cmp
je
cmp
je
cmp
je
push
aas
mov
pop
fcompl
xlat
cwtl
xchg
ret
hlt
mov
push
push
fisubl
jecxz
xor
add
xlat
lock
and
mov
pop
adc
adc
shl
cmc
lock
mov
mov
xchg
into
lret
dec
mov
add
cmp
or
push
jne
dec
rorl
lods
daa
clc
xchg
mov
dec
adc
lret
mov
add
inc
je
cmpsl
sbb
lock
xor
push
push
aam
ror
dec
dec
add
jne
sbb
jb
addb
lea
adc
out
push
fisttpl
icebp
sbb
int3
mov
test
adc
dec
fmuls
inc
fiadds
pushf
add
je
add
push
shlb
xlat
or
pop
sub
add
sub
sub
jecxz
add
shl
fs
push
rclb
or
fiaddl
xor
fiaddl
sarb
or
enter
xchg
loop
mov
push
push
add
and
pop
rol
iret
cmp
fwait
rcl
pushf
add
xchg
push
rcrb
insb
aad
or
mov
fsubrs
popf
inc
inc
sbb
call
or
and
ss
sub
sub
sub
es
push
xchg
adc
pop
repz
hlt
daa
adc
shl
lea
pop
sub
add
mov
push
adc
int3
clc
enter
push
sub
test
mov
push
pop
pop
push
sahf
iret
lret
mov
mov
sub
push
sub
adc
pop
test
and
push
dec
push
sub
sub
punpcklwd
adc
sbb
and
or
mov
sbb
pusha
test
jb
in
sbb
mov
stos
pop
sub
fsts
mov
lods
aam
movsl
test
arpl
into
fadd
aam
inc
movsb
add
adc
aam
cs
push
jge
inc
in
push
sbb
test
in
sub
mov
test
int3
dec
repz
xor
fdivs
mov
jo
push
int3
js
and
lahf
sbb
mov
loop
xor
cld
sbb
and
cmp
hlt
fbstp
xchg
xor
loope
pop
xor
xor
or
lahf
sbb
dec
ret
ficompl
jo
mov
andb
pop
and
repz
cmp
adc
aad
psrld
or
ds
nop
hlt
iret
push
mov
push
sti
imul
xchg
fwait
rcl
jl
sub
gs
mov
sbb
sbb
pop
movsb
fnsave
in
fistl
movsb
mov
rolb
mov
sub
xchg
add
mov
sub
shl
es
jl
mov
ret
push
cmovns
lea
xor
clc
fwait
dec
cld
aas
iret
cmp
je
push
sub
adc
js
insb
xor
ret
inc
adc
jb
gs
push
mov
pop
movsl
adc
sbb
fisubl
adcb
inc
xchg
adc
stos
dec
std
ss
jbe
mov
ret
les
mov
in
pusha
test
outsb
cwtl
mov
adc
and
xchg
xor
and
xchg
sbb
sub
xchg
icebp
addb
sub
jne
or
mov
fimull
push
push
mov
xchg
add
push
push
loopne
rol
add
in
cmp
hlt
aaa
jle
dec
push
aam
cld
sub
adc
movsl
mov
cmc
test
jo
push
movsb
iret
or
aam
incb
and
xchg
movsl
pop
sbb
adc
mov
lea
movsl
add
movsl
out
pushf
push
xchg
push
je
and
outsl
ja
or
jne
push
push
jbe
pop
sbb
sbb
leave
lcall
jge
xchg
ss
lahf
addb
sbb
sar
adc
pop
movsb
add
push
add
push
out
aas
inc
sbb
or
mov
movsb
mov
mov
test
pop
leave
inc
mov
test
add
out
xchg
inc
add
cmp
jne
add
pop
jg
mov
mov
jo
pushf
stos
cmp
pop
adc
xchg
pushf
aam
fistpll
pushf
ret
inc
inc
xchg
cld
add
inc
shrl
mov
xor
popf
test
push
loopne
push
call
or
pushl
aam
dec
arpl
movsl
nop
mov
mov
mov
lea
or
out
ret
pushl
mov
cmp
jmp
or
and
fadds
mov
test
inc
dec
add
add
stos
mov
mov
or
dec
dec
test
push
movl
xor
aad
mov
adc
jno
and
adc
je
or
jle
mov
mov
jb
cmp
jle
push
cmp
cmp
cmp
jne
pop
mov
jbe
js
jb
or
popf
mov
divb
pushf
jecxz
dec
push
dec
fistps
push
sub
jecxz
ja
jl
andb
loope
inc
add
jmp
test
pop
or
pop
push
ret
ficompl
jns
jl
push
pop
cmpsb
push
addb
cltd
sub
jmp
push
dec
jb
lods
cmp
in
mov
cmp
fisttpll
sub
xchg
pop
mov
lea
adc
nop
and
lods
sub
push
jp
ret
push
sbb
lret
add
sbb
nop
popa
sbb
jl
icebp
fstpt
in
inc
int
mov
dec
mov
add
mov
adc
lahf
xchg
sub
xchg
jno
out
dec
cli
mov
mov
pusha
or
jecxz
push
or
sub
add
push
roll
insb
cli
add
mov
mov
push
es
jge
add
jmp
push
add
cmp
xor
push
push
pop
leave
push
fldenv
push
push
adc
pop
outsb
sbb
imul
dec
cmp
mov
fwait
mov
ljmp
dec
xchg
sbb
jmp
dec
xchg
dec
dec
fsub
mov
testb
rol
dec
in
xchg
xorb
std
in
ja
in
jp
push
push
dec
xor
pop
popa
pop
imul
and
out
or
lret
push
xor
and
or
xchg
test
sbb
lods
add
lea
jne
sbb
shrl
call
cmp
aam
or
int3
mov
or
push
push
mov
cmp
fsubp
add
add
loopne
inc
in
mov
fldt
mov
xchg
pop
inc
sub
or
adcb
lock
add
pop
push
pop
inc
add
and
add
and
fstps
iret
pop
dec
add
inc
cmp
movsb
or
xor
jge
orb
xor
daa
add
push
push
xor
mov
mov
repz
mov
push
pop
test
xchg
cmp
mov
fmull
push
push
mov
cltd
cmp
cmp
pushf
and
loop
push
push
pop
add
out
clc
xchg
sbb
push
xor
scas
mov
les
sbb
out
dec
or
mov
ss
daa
xor
mov
xor
jle
sub
inc
push
or
mov
inc
mov
shr
sbb
jns
jne
jl
sub
xchg
call
pop
or
adc
mov
pop
or
jno
pop
adc
push
jbe
push
mov
test
ret
stc
fiaddl
pushf
rolb
jo
or
ret
int
inc
ds
in
add
mov
adc
mull
and
popf
adc
dec
cmp
xor
stos
or
cmp
xor
in
ret
and
adc
lock
gs
mov
test
popf
or
mov
sub
or
and
push
or
sub
push
imul
inc
inc
or
sarb
fwait
into
and
fwait
inc
lcall
cmp
add
adc
cmp
dec
push
ror
sub
ja
popf
cmp
or
xor
mov
ret
and
lock
inc
adc
or
xchg
lahf
sbb
and
push
fnstenv
and
jns
mov
je
push
jle
adc
inc
inc
pop
push
enter
xorl
xor
mov
or
add
es
mov
rcl
or
pop
cmp
adc
or
xor
dec
pop
je
or
and
or
or
and
pop
pop
pop
iret
or
xchg
sub
loopne
mov
test
mov
lret
sbb
push
push
faddl
roll
xchg
pop
loope
das
sub
mov
inc
pop
fsubrl
jne
mov
sub
add
push
xchg
jmp
sub
movsl
cs
sbb
insb
sub
sub
dec
cmpsl
push
shlb
push
sbb
push
and
scas
repnz
xor
call
sbb
cmpsl
adc
bnd
lahf
push
mov
stos
int3
lret
in
dec
add
and
jno
mov
ret
pop
insl
insl
stos
shll
or
xchg
push
ficompl
fmull
dec
dec
fadds
push
push
push
dec
or
int3
xor
inc
call
mov
push
scas
js
and
mov
add
cmp
je
or
or
js
push
dec
in
addr16
loopne
je
mov
aam
jne
mov
xor
xor
push
movb
push
pop
aaa
mov
mov
pop
jo
hlt
pop
xor
in
jno
fmull
add
bound
and
adc
cmpsl
push
subl
inc
mov
stc
in
imul
rorb
mov
mov
aaa
and
pop
push
push
mov
test
add
xchg
push
fcoms
xchg
daa
sub
cmpb
inc
mov
cmp
mov
and
and
mov
sbb
in
adc
adc
test
mov
mov
add
fcomip
mov
popl
jle
lea
cmpb
jne
jle
push
fists
add
jecxz
daa
and
inc
clc
movb
push
idivl
jae
sub
cmp
pop
jl
pop
je
push
xor
add
dec
jo
mov
push
inc
fdivl
mov
fidivl
mov
bnd
prefetcht2
ret
cmp
in
add
aam
cmp
and
inc
sti
inc
push
inc
lea
or
pop
dec
or
aad
sub
add
jae
push
in
stos
out
jne
sti
inc
ljmp
mov
pop
xor
jnp
movsl
ret
movsl
push
test
loopne
popa
shl
push
or
and
enter
pusha
dec
adc
mov
or
insb
dec
adc
pop
push
cmp
or
test
xchg
jl
add
and
lds
sbb
xchg
gs
test
stc
xor
in
and
cltd
les
lods
sbb
jnp
mov
test
sbb
and
cmp
jb
pop
pop
sbb
dec
pop
jbe
dec
loop
sbb
sbb
divl
incl
and
iret
rclb
add
xor
and
jmp
sbb
push
cmp
jne
xor
inc
lret
out
test
jbe
stos
push
mov
push
mov
fildl
testb
pop
movsb
pop
and
inc
mov
mov
adc
inc
cmp
test
ja
mov
jb
push
std
sbbb
add
jg
push
jne
and
bound
incl
in
clc
jmp
ror
xchg
test
test
leave
fmull
and
ret
ja
leave
adc
or
adc
sub
lret
pop
int
push
daa
test
das
test
les
sahf
leave
dec
cmpl
fisubrl
and
push
adc
in
mov
fcmovb
mov
imulb
and
test
sub
shlb
cmpl
jne
add
adc
adc
sub
push
add
push
or
add
loop
dec
dec
or
dec
xchg
sub
fdivs
jbe
mov
icebp
adc
cmp
in
out
adc
nop
jns
sub
gs
int3
jecxz
adc
fcomps
push
test
fdivrl
mov
add
ss
dec
push
mov
and
std
test
mov
lds
fisttpl
int3
into
data16
pop
clc
dec
mov
jne
and
or
xchg
dec
icebp
push
bound
and
dec
and
inc
les
and
in
xchg
popw
push
push
lea
mov
fwait
ret
and
add
push
sahf
xor
mov
jmp
cmpsb
xchg
or
subb
les
push
lea
in
jbe
dec
clc
jl
or
fcmovnb
sbb
fsubl
gs
dec
cmp
js
push
xor
loop
cmp
xor
cmp
repnz
pop
pusha
orw
stos
sub
adc
test
je
test
adc
mov
xchg
les
push
loop
ficomps
mov
fmull
pop
cs
mov
push
mov
jmp
call
jne
cmpl
xor
or
iret
add
pop
xor
cmp
popa
xor
mov
push
jno
mov
sbb
lahf
push
mov
or
test
pop
xor
test
push
in
jmp
mov
inc
push
lock
lahf
cmc
and
push
push
jl
sbb
pop
add
mov
and
out
sub
adc
add
adc
sbb
sbb
inc
jmp
and
push
lret
push
jb
jecxz
sbb
fcoms
adc
xor
jp
js
jb
xchg
in
cmc
pop
cltd
test
aam
and
pop
sbb
inc
mov
jl
scas
inc
mov
in
pusha
pop
push
pop
cmp
je
mov
int
fs
sub
push
adcl
outsb
and
push
mov
js
mov
mov
jb
ret
mov
sub
sbb
inc
or
ss
push
xor
mov
push
mov
inc
insb
in
ret
jno
or
repnz
or
je
ja
or
rolb
sbb
das
es
mov
xor
call
lods
sbb
hlt
and
icebp
in
dec
pop
push
in
xor
jge
ds
mov
pop
cmp
das
sbb
and
add
pop
in
pop
add
jbe
es
push
lock
xor
add
and
pop
or
cmp
pushf
push
lock
notl
inc
in
nop
pop
xor
sbb
outsl
inc
shr
add
push
push
icebp
jge
stos
rcr
push
loopne
push
mov
mov
testl
inc
or
dec
inc
and
mov
js
cli
lahf
jl
subl
je
lods
mov
sbb
mov
pop
lret
add
lcall
dec
push
cwtl
call
sub
jne
xor
call
fwait
in
sbb
pushl
pop
sbb
cltd
push
sub
pop
aam
add
hlt
and
pop
and
sbbb
loop
inc
jg
inc
pop
popa
or
idivb
mov
decl
or
sub
push
sub
push
mov
in
call
adc
movb
mov
cwtl
xchg
cmpsb
loope
push
into
pushf
xchg
push
push
jle
jl
lsl
mov
push
scas
fs
sbbb
fadds
push
ss
pop
test
jnp
sub
adc
add
mov
mov
push
int
subb
les
push
adc
push
in
inc
inc
out
pop
pop
ret
rol
mov
mov
fwait
int3
fst
or
push
rorl
and
pusha
inc
dec
rcrb
sbb
add
cmp
jge
je
push
push
fdivs
not
bound
das
push
aam
jne
bound
sbb
add
xor
cld
sub
test
adc
dec
add
ljmp
add
pop
pop
and
or
sub
subb
dec
sub
idivb
mov
add
cmpsb
sub
jo
imul
inc
push
xlat
aad
push
sub
pusha
jmp
cmp
movsl
pushf
dec
bound
xor
dec
sbb
inc
sbb
shlb
enter
pop
mov
mov
clc
fcompl
loop
cld
insl
inc
inc
inc
inc
mov
lock
sbb
nopl
fldenv
outsl
pop
int3
test
sbb
mov
add
add
add
inc
push
mov
frstor
inc
dec
jns
jmp
adc
ljmp
js
jne
fs
popa
lock
aad
mov
mov
xchg
push
cwtl
mov
or
faddl
pop
push
add
adc
jp
bound
push
add
movaps
sahf
int
adc
inc
push
xor
push
and
xor
xchg
push
rorl
mov
pop
ret
inc
test
cmp
push
dec
insb
push
push
sub
cmp
and
nop
shl
jbe
mov
dec
inc
or
call
mov
adc
jp
fadd
sarb
lea
aaa
dec
push
xchg
dec
fldt
pop
inc
adc
adcb
test
mov
xchg
cmp
sub
push
lea
loop
int3
pusha
xchg
lds
ds
loopne
lock
int3
add
jne
jl
xor
lods
pop
in
cs
or
mov
fs
or
cli
cmp
jb
shll
sbb
mov
or
xor
lahf
and
mov
rorl
mov
inc
clc
or
lahf
push
clc
inc
push
mov
movups
dec
jge
inc
xlat
adc
js
sarl
xor
xchg
push
mov
sti
add
inc
in
dec
xchg
into
jle
pop
jno
cmp
sbb
mov
mov
jmp
inc
popa
mov
mov
adcb
int
jmp
mov
pop
sbb
outsl
pop
paddsb
adc
jl
pop
push
arpl
pop
sahf
jo
aad
adc
bound
inc
test
jecxz
aam
stos
push
in
jb
push
mov
mov
dec
sub
dec
mov
pop
add
insb
cmp
lock
lock
push
xor
push
shrb
push
push
call
mov
and
inc
jmp
es
sub
lcall
pop
lret
mov
xor
aam
icebp
pop
stc
mov
jb
sbb
xchg
cmpsl
xor
push
shlb
insl
xor
xchg
mov
enter
pop
sbb
fistpl
lock
popf
jmp
js
push
fisttpll
pusha
dec
in
push
or
sub
jnp
fcmovbe
or
mov
inc
jg
fsubrs
or
pop
out
mov
adc
icebp
mov
mov
aam
push
cld
add
fidivs
cmp
inc
or
jae
xchg
push
or
add
push
jae
arpl
push
cmp
je
inc
or
push
or
fistpll
jle
cmp
push
push
and
cld
sub
sbb
cmp
call
sub
rclb
push
cmp
sar
add
sub
cmp
add
mov
test
and
leave
or
or
push
mov
mov
push
or
jecxz
cmp
nop
cwtl
repnz
dec
xchg
sbb
sbb
fwait
sub
popf
test
xchg
jmp
push
iret
dec
sub
pop
or
loope
push
push
jbe
jb
sahf
mov
cmp
ss
xchg
je
cmp
aas
stos
fcomp
push
push
rcrb
shrb
and
jl
mov
adc
mov
xor
and
push
test
mov
jae
pop
pop
sbb
sbb
into
mov
xor
or
cwtl
or
dec
loopne
adc
insl
cld
sbb
inc
fdivrl
mov
daa
shrb
pop
outsb
sub
mov
and
add
mov
or
inc
or
xor
push
in
add
sbb
pop
fisubrl
in
imul
pop
inc
rorb
daa
xchg
add
add
js
mov
push
mov
pop
mov
adc
inc
and
add
cmp
pusha
imul
sbb
jl
mov
pushf
lahf
lahf
call
cmpsb
cwtl
sahf
push
ret
sti
or
and
int
movsb
roll
nop
inc
mov
xor
addr16
scas
sub
fidivrl
push
and
pop
idivb
rcrb
rorl
xchg
int
adc
and
add
mov
pushl
popf
nop
xchg
push
xchg
push
fadds
add
nop
sbbl
sbb
nop
add
fs
push
cmpsb
mov
jbe
mov
adcb
sbb
add
nop
test
sarb
mov
and
adc
and
and
test
pop
push
xor
test
dec
pcmpeqw
or
or
dec
adc
jno
test
sbb
inc
jb
add
sub
popa
leave
int3
add
push
fbstp
mov
jmp
cmp
sbb
rorl
imul
sbb
cld
push
add
or
or
sub
ja
fnstenv
loopne
jg
jne
mov
jb
mov
xchg
imulb
jmp
push
adc
xor
cmp
dec
lcall
inc
cmp
inc
or
and
das
xor
mov
insl
jns
inc
test
in
cmp
pop
rclb
mov
movsl
inc
sbb
jg
add
mov
push
rol
ljmp
sbb
ja
add
repz
imul
orl
testb
dec
xlat
popa
lds
jne
adc
cmp
shrl
notb
mov
out
test
popa
andl
cltd
xor
cmp
mov
adc
add
xchg
lret
in
rcll
or
mov
add
repnz
out
add
iret
cmp
shrl
ljmp
stc
leave
mov
inc
xchg
out
push
mov
add
ret
roll
mov
dec
cmp
imul
pop
mov
cmovns
stc
lock
or
pmuludq
push
stc
je
fisubrl
push
icebp
jne
xor
jb
inc
xchg
ja
fwait
mov
mulb
cld
mov
or
pop
jne
add
cmpsb
mov
push
inc
inc
popf
mov
jge
scas
iret
js
and
xchg
lods
outsb
aaa
or
ret
adc
shrb
mov
inc
ret
mov
jne
lret
clc
imul
cmp
mov
or
jmp
cmp
adc
cwtl
dec
cmpl
loopne
xor
pusha
push
ret
in
dec
or
andl
push
add
add
sbbl
adc
and
mov
adc
outsl
push
cmp
sub
js
lods
insb
divl
data16
enter
pop
dec
roll
push
lock
push
pop
xchg
sub
sbb
xchg
push
aam
add
repnz
jo
jbe
push
insb
out
and
pop
loope
mov
adc
or
sahf
fdivl
push
cmp
pop
pop
mov
out
cmp
xchg
and
loope
add
sbb
lods
int3
push
pushf
add
mov
je
fs
or
inc
push
sbb
insb
decb
xchg
xchg
push
mov
adc
jp
pop
movb
adc
xor
xchg
jmp
mov
je
cmp
je
mulb
aam
and
push
cmp
loope
jl
cwtl
and
iret
je
xor
or
dec
sub
lock
mov
push
sub
inc
pop
xchg
add
pop
lea
add
or
push
add
add
lock
adc
leave
enter
cld
lock
cmp
addb
out
and
in
loope
pushf
out
adc
sbb
popf
add
dec
ss
mov
pop
sahf
movsb
push
jbe
xor
into
add
push
mov
lahf
adc
pop
add
xchg
pop
cs
pop
out
movsb
pop
add
leave
inc
into
shll
cli
shlb
mov
movsb
jl
testb
lds
inc
sub
add
sub
cmp
loope
jb
inc
orl
test
fadds
jl
ljmp
adc
pop
adc
jle
addr16
push
ret
push
sbb
mov
adc
mov
popa
nop
insb
clc
outsb
push
jge
xor
jo
jne
hlt
xchg
or
sbbl
cs
mov
test
popa
push
jae
mov
pop
repnz
addr16
pop
mov
xchg
fsubs
cltd
mov
insl
lds
xchg
stos
or
xchg
addb
cwtl
fidivrs
sbb
lods
sub
pop
test
sub
pop
loopne
sbb
jnp
fwait
sbb
add
fimuls
sahf
lret
pusha
xchg
push
and
xorb
dec
push
lea
add
jo
aam
xchg
test
sbb
fcmove
push
or
sbb
xor
add
adc
pushf
jl
sarb
stc
fcoms
and
push
les
out
mov
adc
add
push
aas
insl
nop
cs
adc
fs
dec
pop
addb
dec
aam
inc
jp
push
pop
arpl
adc
sbb
mov
cmp
push
push
jmp
mov
ja
in
inc
std
mov
mov
adc
push
add
dec
cmp
pop
cmp
or
int3
add
or
add
or
mov
adc
ret
mov
mov
xchg
sti
mov
stc
and
sbb
or
lret
adc
test
outsb
cmpb
dec
inc
dec
inc
adc
add
push
popa
xchg
pusha
gs
push
cltd
inc
ljmp
push
mov
adc
add
cli
and
pop
clc
sbb
push
push
or
adc
xchg
into
jecxz
popl
cs
pop
xchg
sbb
loopne
cmp
cmp
jmp
adc
xchg
lret
jl
ret
verr
dec
xor
xor
cmp
cmp
push
sbb
das
jecxz
pop
inc
push
sbb
enter
fildl
fsubr
movsb
cmc
outsb
pusha
mov
add
mov
jne
pop
sub
add
pop
aam
mov
or
fcmovu
in
sahf
and
and
adc
fs
sbb
and
mov
cs
cltd
mov
xchg
add
xor
stc
mov
sub
dec
je
hlt
add
cld
mov
loopne
sbb
sbb
fsts
out
jo
jmp
or
mov
xor
sahf
cmp
push
xchg
popa
cwtl
bound
sub
lock
sbb
andl
mov
mov
dec
or
push
push
stos
sub
lret
aaa
faddl
pop
imul
or
movzwl
and
push
aad
aas
jne
xchg
movsb
jmp
dec
push
push
push
push
je
xor
das
fildl
jne
leave
or
jnp
std
pmaddwd
lea
push
push
sub
cmp
insl
dec
xchg
rolb
adc
daa
and
push
push
in
movsb
xor
xor
add
mov
xorl
dec
or
test
jp
jp
pushf
sahf
sahf
xchg
aas
adc
mov
imul
stos
test
add
cmp
inc
dec
and
mov
popa
add
and
imul
test
cmp
adcb
and
pavgb
dec
nop
xchg
jmp
movsb
pusha
sbb
push
cmp
mov
ret
push
mov
hlt
xor
loopne
adc
fbstp
sahf
adc
pop
data16
or
jg
push
pop
push
pop
sub
loopne
or
push
pop
dec
lret
daa
rcll
xor
mov
sub
lret
sbb
pop
cmp
rdmsr
sarb
stc
dec
stos
jmp
inc
mov
jp
and
add
mov
adc
pop
mov
pop
ret
fldenv
ret
jmp
test
mov
xor
sub
push
or
jo
push
push
jo
mov
push
and
dec
xchg
call
xchg
push
mov
or
insb
xor
std
push
and
sbb
mov
sub
xchg
sub
jle
test
neg
sbb
push
cmp
ret
and
dec
xor
sub
cmp
and
jb
ret
pop
adc
sbb
nop
add
cmpl
outsl
inc
xor
cmc
sub
es
inc
lock
rcr
ret
mov
inc
lcall
insb
xor
pusha
inc
data16
pop
inc
xchg
dec
rorb
daa
inc
jne
xor
mov
int
jo
push
or
fdivrs
sub
pop
xchg
cwtl
loop
lods
push
aas
inc
lea
and
fsubs
cmp
cmc
ss
push
inc
add
and
rcr
int
pop
inc
repz
or
sub
ret
pop
pop
pop
pop
loope
mull
jns
or
shr
or
mov
jl
andl
inc
push
add
rorl
and
pop
pop
pop
cltd
add
loope
les
int3
pop
adcb
mov
xor
pop
sahf
push
xchg
jecxz
xor
fists
push
lock
lahf
add
or
scas
adc
xchg
inc
cmp
xchg
imul
test
inc
mov
stos
push
add
mov
cs
pushf
push
mov
jl
xor
cmp
adc
jl
or
dec
cmpsl
call
adc
push
outsl
shll
shr
pop
add
push
dec
insb
dec
dec
jecxz
xchg
adc
pop
inc
push
xchg
loope
inc
adc
inc
push
or
sub
xchg
ret
stc
mov
add
pop
mov
fbstp
mul
inc
push
es
push
dec
mov
adc
xchg
sbb
or
sub
jbe
aas
sbb
mov
cmp
cmp
lods
jmp
jne
mov
xor
add
lea
lock
testb
xchg
clc
fdivrs
xchg
jge
mov
daa
shl
xor
and
xor
mov
or
fdivrs
pushf
mov
dec
loopne
inc
dec
pop
mov
push
js
ss
mov
mov
mov
fmuls
scas
push
mov
fbld
int
lahf
sbb
cwtl
jl
shlb
adcb
mov
mov
xchg
dec
mov
mov
mov
push
lea
add
shll
add
add
sub
sbb
mov
fstpt
xchg
push
push
test
scas
pop
inc
je
aaa
loopne
or
mov
jne
mov
cmpsl
ljmp
cmpsl
mov
lods
cmp
xchg
pop
loop
test
cli
cmp
mov
mov
or
imul
cmp
push
xor
addr16
push
mov
lret
mov
mov
test
mov
and
add
inc
cltd
and
inc
mov
or
into
lods
ret
sarb
dec
mov
push
pushf
cmpsb
inc
xlat
adc
fcmovbe
or
aad
test
mov
mov
add
mov
inc
push
mov
pop
sub
mov
pop
dec
or
mov
or
js
std
mov
pop
andb
clc
cmp
dec
and
int3
popf
aad
mov
lods
sbb
push
mov
push
mov
adc
fsubs
cltd
negl
cwtl
inc
inc
ret
movsb
xlat
push
mov
in
aam
clc
loop
je
mov
push
xlat
pop
loop
cwtl
add
xor
adc
xlat
adc
movsl
or
aas
mov
xor
addr16
push
fldl
xor
add
and
push
jecxz
cwtl
push
in
in
cmp
xor
out
and
inc
leave
aaa
inc
lods
push
addl
or
and
xchg
test
xor
mov
jo
gs
push
jns
movsb
adc
mov
incb
daa
add
or
inc
sbb
lods
or
adc
es
add
dec
mov
add
xchg
xor
sub
clc
sti
inc
cmp
or
sahf
mov
insl
xchg
into
movsl
aam
scas
sub
out
aas
shlb
or
inc
adc
mov
stos
mov
pushf
mov
enter
je
es
and
dec
cmpsl
and
pop
clc
xor
cmp
rcr
and
pop
cmp
je
mov
mov
push
pop
add
dec
mov
or
jae
mov
leave
cmp
push
bound
fdivrs
ljmp
dec
insb
xor
stos
adc
data16
divl
dec
ljmp
notl
pop
subb
mov
paddq
mov
xchg
sbb
mov
insl
pop
cmp
clc
int
jge
or
jge
adc
sbb
rcrb
push
cltd
mov
and
mov
dec
pop
imul
pop
call
pop
push
mov
add
push
mov
fmuls
push
subb
sbb
repnz
and
mov
adc
cmovae
or
call
pop
xor
and
repz
pop
movb
inc
in
cli
test
movl
and
rep
shr
inc
add
and
xor
dec
adc
cmp
sbbb
pop
ret
out
mov
sub
std
mov
sarl
sbb
mov
fimull
adc
fstpl
pushf
insb
insb
out
js
aad
xor
lock
xchg
push
mov
rcrl
fimull
and
sbb
inc
cmpsl
jl
lock
push
pop
adc
cmp
dec
push
inc
hlt
sarb
push
mov
add
rcl
mov
leave
jnp
pop
pop
push
jge
je
cmpsl
enter
dec
insb
or
mov
pop
xchg
fisttpl
cmp
rorb
sbb
mov
or
orb
rcrb
jne
adc
xor
mov
or
stc
cld
jecxz
adc
push
sbb
out
movsl
addl
insb
xchg
out
sbb
in
fists
call
lahf
cmp
xor
testb
adc
movb
cs
push
add
xchg
sub
je
adc
cmp
sub
test
mov
orb
xor
mov
sub
sbb
pop
sbb
pop
mov
inc
dec
push
mov
clc
fistl
push
sub
leave
mov
cmp
call
aaa
jbe
in
and
mov
outsl
int3
dec
sub
cmpsl
xchg
fnsave
add
push
push
xchg
jge
add
testb
in
dec
in
pop
mov
mov
out
sbb
inc
jo
addr16
xchg
pop
jle
jmp
into
sbb
dec
xchg
dec
scas
scas
add
adc
jb
sub
push
xor
jle
pop
or
adc
out
loope
or
mov
jp
mov
pavgw
addl
dec
mov
sbb
test
sbb
lock
push
push
cmp
xor
in
push
jns
dec
xor
lahf
adc
push
jmp
int3
and
adc
add
out
xchg
adc
and
fs
mov
test
sub
in
inc
pusha
jg
or
mov
adc
jnp
pop
pushf
sub
out
pop
and
pop
pop
xor
movsl
stos
or
loopne
pop
testl
ljmp
push
push
mov
or
add
mov
dec
or
dec
or
lcall
cmp
or
aaa
cltd
dec
push
cmpsb
sbb
or
jmp
or
push
dec
mov
and
jo
push
movsb
ss
into
addb
movsl
sarl
nop
push
pushf
popf
add
bswap
xorl
cltd
shl
inc
adc
lock
add
aad
and
mov
pop
add
sbb
adc
add
imul
and
dec
xchg
insl
jne
setnp
or
popa
in
xchg
mov
push
lret
aaa
rcrb
jae
push
push
push
cwtl
scas
pop
fstpt
jl
movl
xor
push
push
int3
or
rcrl
fmuls
dec
in
call
imul
sbb
dec
push
pop
inc
xlat
lds
test
scas
pusha
es
pinsrw
testl
fsts
lret
xor
movb
adcb
pop
push
rclb
and
sbb
xchg
loopne
xor
mov
popw
dec
pop
lods
push
pop
ret
xlat
idivl
ljmp
add
and
sub
repnz
jnp
popl
add
mov
loope
add
sub
xor
adc
mov
sub
xchg
cmp
or
sahf
aam
sub
adc
andl
mov
in
push
popf
out
xor
xor
push
mov
loopne
inc
insl
rolb
in
pop
and
add
fisubs
jo
cld
push
xorl
dec
pop
add
out
ror
clc
mov
dec
add
ret
divb
xor
lods
les
pop
scas
test
dec
sub
pop
bound
push
pushfw
adc
jecxz
stos
notl
dec
sbb
andl
out
ret
outsl
fdiv
mov
cmp
ja
je
or
je
or
sub
sub
mov
scas
cmp
or
nop
pop
push
adc
xchg
or
add
jnp
js
jne
lcall
ror
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
cmpsb
pop
ss
inc
jo
add
in
cs
sbb
jne
dec
imul
mov
shr
jno
out
fdivrs
adc
add
ljmp
and
xchg
test
dec
inc
imul
mov
mov
je
shlb
push
mov
aas
adc
jmp
daa
daa
inc
mov
cmp
add
and
rolb
test
add
lret
add
rorb
mov
aaa
or
add
fwait
or
jp
cmpl
movsb
add
dec
xor
adc
add
nop
add
xor
xor
fsubrs
lds
shll
or
push
adc
inc
inc
mov
dec
add
out
mov
aas
repz
push
inc
mov
dec
push
mov
inc
or
clc
cmpsl
test
dec
sbb
add
int3
sub
fidivs
lea
and
pop
stos
and
lods
aam
adcl
xor
jp
mov
inc
push
push
pusha
rorl
fistps
xor
adc
fdivrl
test
add
cmpsl
int
divl
add
push
mov
sub
or
jg
mov
inc
push
inc
push
push
push
xor
aaa
nop
mov
sub
test
mov
push
call
int3
movb
sbb
push
aaa
loopne
test
lods
xchg
inc
cmp
fcomp
repnz
leave
inc
clc
xor
push
push
les
or
lcall
cmp
out
dec
sub
cmp
movb
in
roll
mul
mov
xchg
xlat
insb
std
fdivrl
xchg
mov
jmp
je
adc
push
and
addb
jo
pop
or
fwait
out
les
or
xchg
jg
div
jge
and
inc
leave
jecxz
push
enter
mov
push
xchg
and
fs
cmpsb
mov
ret
ret
add
xchg
mov
push
lret
leave
xchg
negb
cmp
ret
sahf
dec
xor
sbb
clc
fildl
push
imul
mov
es
loopne
loopne
rorb
push
jnp
pop
xchg
push
pop
jge
ljmp
hlt
mov
mov
cmp
in
add
aam
aam
cs
dec
cmp
ret
inc
cmp
push
test
or
in
inc
dec
mov
clc
aaa
sbb
pop
test
test
ret
fs
lcall
xchg
xor
mov
jnp
sar
clc
inc
adc
or
fdivl
loop
sub
xor
pushf
jge
inc
js
adc
mov
jl
push
cmp
and
xchg
pop
icebp
cmp
sti
adc
add
and
push
adc
jge
and
jg
mov
push
movsb
dec
and
sbbl
adc
add
mov
ret
xor
dec
cmp
or
jmp
jle
add
push
or
test
rorl
test
push
push
push
dec
jl
xchg
hlt
enter
out
sub
jl
pop
and
cmpsb
xor
call
mov
cs
mov
mov
dec
adc
mov
out
mov
pop
jge
xor
inc
enter
cld
mov
insl
push
jne
add
or
into
xchg
sbb
mov
lahf
jno
in
insb
dec
in
sub
xchg
lret
and
gs
shlb
lea
mov
fcoms
xorl
sub
sub
shll
shrl
mov
sub
and
hlt
aaa
js
inc
cmp
pop
hlt
aas
das
mov
add
sub
mov
adc
adc
mov
sbb
dec
and
and
sbb
and
sbb
roll
xor
dec
push
mov
lret
xorb
xchg
lret
sbb
add
pop
lods
xor
mov
scas
add
or
push
dec
jae
xor
xor
xor
cld
dec
in
cmp
call
clc
fmul
dec
pop
incl
cs
mov
pop
leave
lcall
fs
xor
inc
push
mov
addr16
xchg
dec
and
push
mov
sbb
mov
and
movsb
xchg
dec
xchg
movsl
pop
loopne
pop
fcompl
in
dec
and
dec
or
sbb
pop
clc
aaa
xchg
ja
neg
sbb
mov
or
jg
push
and
ret
add
cmp
nopl
dec
data16
add
pop
jp
rolb
scas
pop
sarl
fdivr
push
nop
pop
lea
int3
dec
jb
add
cmp
push
pop
mov
in
mov
sub
cmp
stc
jae
mov
call
inc
jo
adc
shl
jl
cmp
pop
add
mov
aas
rorl
sbb
add
jg
mov
cmp
xchg
daa
sub
xorb
pop
jg
sti
je
popf
push
shrb
mov
cmp
mov
hlt
add
jg
jnp
xorb
mov
push
sbb
push
or
lock
xor
dec
cmpsl
lock
adc
adc
sbb
inc
adc
inc
xchg
test
fdivl
or
and
dec
mov
dec
cld
and
sbb
call
test
pop
test
xchg
sub
mov
fmulp
dec
popf
xor
loopne
mov
lea
sbb
xchg
inc
mov
jo
jbe
sbb
mov
out
in
mov
pop
jmp
and
cmp
sbb
sbb
and
mov
and
leave
sbb
cmpsb
push
inc
xchg
adc
cmp
jmp
or
mov
inc
adc
mov
mov
movsb
xor
pop
push
push
inc
cmc
pop
int3
arpl
mov
imul
lahf
pop
sbb
test
push
push
push
int
dec
xchg
mov
jb
in
add
or
jge
cmc
jl
lea
sbb
cmpsl
jne
mov
sbb
push
sbb
adc
sbb
js
fidivrs
cmpsb
test
or
jmp
add
adc
jge,pn
xchg
xchg
mov
push
push
repz
es
into
hlt
je
xor
dec
or
and
fsubrp
pop
sbb
mov
lock
adc
stos
xchg
fnstcw
add
sub
push
mov
adc
clc
je
or
das
aam
push
mov
loope
dec
pusha
xchg
pop
imul
in
cmp
iret
ret
inc
add
fwait
add
testl
fnstcw
insl
add
jmp
inc
dec
dec
dec
hlt
add
mov
je
or
push
cmp
or
fldl
jo
hlt
es
mov
loop
inc
add
mov
cmp
cld
push
add
cmc
lock
es
or
mov
adc
shlb
sbb
clc
jne
sbb
mov
les
mov
add
fdivrl
pop
and
mov
nop
shrl
inc
push
add
mov
dec
push
add
jle
jmp
push
xor
adc
subb
lea
push
add
or
fs
mov
adc
push
nop
add
fisttps
dec
in
mov
mov
add
add
nop
dec
mov
cmp
mov
je
addr16
dec
sub
lock
mov
pop
mov
mov
lods
movsl
mov
out
dec
or
je
dec
repnz
add
int
adc
mov
and
sbb
sub
fcmove
push
popa
rcll
out
xchg
and
cmp
and
and
pop
pop
sub
daa
iret
lret
and
adc
sbb
mov
lods
mov
or
mov
add
lea
jg
add
ja
test
jle
sub
mov
cmp
push
xor
stc
mov
jo
mov
adc
inc
scas
xchg
cmp
and
in
xchg
push
push
xchg
cmp
lahf
xchg
xchg
cmp
cwtl
addr16
cmp
mov
mov
or
mov
inc
xchg
les
or
mov
enter
xchg
cmp
or
jns
in
pusha
or
sub
add
xor
inc
mov
push
dec
jmp
push
aad
and
adc
shlb
push
mov
pop
xor
push
movd
imul
pop
mov
repz
mov
pop
or
mov
pop
sub
push
ret
push
dec
sub
jne
push
add
add
and
cwtl
add
aam
or
xor
add
dec
or
loop
sbbb
pusha
add
imul
lcall
mov
pop
sub
das
pop
cmp
shrb
cmpb
mov
jno
and
or
mov
dec
and
je
es
dec
enter
mov
int3
fadds
loopne
je
das
add
jecxz
push
addb
in
mov
mov
mov
pop
call
in
and
and
adc
nop
or
mov
or
inc
or
add
inc
mov
mov
and
mov
sub
push
mov
jg
jnp
jae
push
dec
mov
push
shl
add
or
jne
jg
ret
dec
adc
jbe
dec
xor
daa
jne
adc
mov
mov
ret
xor
pop
xchg
add
inc
jmp
push
ljmp
imul
lea
sbbl
xor
call
ds
movsb
or
sub
enter
xor
xchg
ret
xlat
jge
jl
adc
fwait
jge
mov
or
addr16
adc
rclb
dec
jbe
mov
sbb
push
mov
test
shrl
or
or
in
call
push
sarl
jbe
mov
fsubl
enter
push
mov
and
jns
paddsb
xor
xor
xor
hlt
push
push
sbb
faddl
push
mov
adc
imul
push
pop
push
testl
mov
sbb
mov
sub
pusha
sbb
sub
push
ss
or
push
add
pop
mov
push
mov
mov
cmp
mov
imul
xor
push
ficoms
ret
add
xlat
sub
adc
and
mov
sub
mov
js
xchg
dec
pop
lock
jns
add
and
jge
mov
adc
stc
dec
in
and
repz
push
jo
dec
nop
test
mov
mov
cmp
jbe
shll
cmp
leave
push
xor
in
ret
test
push
cwtl
push
es
push
xor
imul
pop
or
inc
mov
push
lock
lock
add
les
mov
pop
sbbb
xchg
pop
sbb
add
repnz
push
push
jb
movsb
push
push
enter
push
or
jo
jl
push
dec
pusha
xchg
popa
mov
test
lds
cli
adc
jnp
lea
add
mov
cmp
push
loopne
mov
inc
lock
push
and
push
jge
sub
cmp
leave
inc
jp
ret
mov
test
xor
adc
push
lea
in
push
inc
xchg
mov
sbbl
sbb
inc
outsb
or
cmp
inc
mov
or
es
mov
data16
adc
rol
push
jb
inc
ud1
mov
incl
aas
ja
push
insb
dec
push
dec
nopl
pop
add
inc
test
or
cmovb
dec
push
push
ret
push
rolb
jae
les
loop
bound
loopne
adc
testl
inc
adc
adc
push
jmp
inc
jne
sbb
lret
mov
cmpb
or
sbb
cmp
js
or
andl
xor
add
jne
cs
sub
mov
loope
pop
mov
int3
inc
lahf
enter
or
and
je
dec
adc
enter
or
cmp
jmp
dec
leave
mov
xchg
das
movsb
dec
and
and
push
adc
dec
adc
and
aad
sbb
enter
pusha
out
dec
insb
cltd
dec
xor
add
arpl
mov
push
adc
jl
stos
mov
or
in
imul
mov
packsswb
sub
iret
adc
inc
cmp
or
adc
pop
jae
mov
mov
gs
imul
lods
xchg
xchg
add
sbb
sbb
or
pop
xchg
repnz
xor
push
aas
push
lds
andl
pop
fnstenv
push
icebp
mov
test
mov
pop
or
fs
mov
and
iret
add
sbb
mov
add
loopne
mov
xchg
test
insb
lea
add
cmpsl
or
push
enter
sti
inc
push
add
adc
loop
fcmovnbe
push
xchg
test
adc
and
mov
push
mov
outsb
add
mov
xchg
outsl
push
push
sub
mov
xchg
xor
pop
mov
mov
add
and
mov
or
xor
or
xchg
daa
cmpl
mov
mov
mov
dec
pusha
dec
adc
pushl
rolb
or
icebp
dec
xorb
pop
movsb
and
adc
pop
xor
insl
in
jmp
xchg
push
test
add
ret
inc
imul
cld
sub
or
inc
or
rclb
and
mov
adc
orb
push
sbb
insb
xorb
test
xchg
mov
jg
int
push
xlat
mov
nop
popf
add
sub
stos
xchg
pinsrw
clc
or
cs
push
or
push
jle
xlat
popf
clc
sarl
pop
inc
dec
pushl
jmp
lock
call
sbb
add
and
arpl
xchg
pop
movsl
inc
and
cwtl
jbe
sub
lea
testb
dec
push
cmp
repnz
mov
pushf
inc
into
push
aaa
mov
mov
nop
push
lea
pop
loop
or
negb
cwtl
pop
repnz
ret
jmp
xchg
dec
cmpl
push
push
cld
push
xor
jb
push
fdivrp
sar
sbb
jl
je
imul
loope
jne
testl
mov
mov
lods
mov
inc
pop
leave
ret
pusha
andl
out
dec
jno
push
sub
testb
cmpsl
flds
pop
int3
push
mov
mov
imul
cmp
adc
jmp
or
ret
mov
ss
or
mov
mov
cmp
mov
jle
dec
add
jmp
ret
insb
cwtl
cmpsb
gs
aas
jne
sbb
out
add
das
xchg
and
shll
push
xor
arpl
sub
dec
mov
mov
cwtl
sub
out
lret
outsl
movsb
cli
fs
sub
in
push
sub
cmp
in
inc
enter
cmp
mov
cmp
or
or
mov
jge
add
xchg
add
jge
cmp
aaa
icebp
ret
add
lods
int3
push
test
mov
addr16
ja
dec
ret
add
jno
stos
or
cmpb
adc
fisubrs
add
xchg
mov
sub
daa
call
mov
xchg
jmp
arpl
mov
test
push
mov
and
jecxz
jnp
sub
icebp
pop
or
mov
xchg
test
inc
push
mov
cltd
push
add
adc
push
and
movb
xor
aad
adc
inc
andl
loopne
inc
lea
push
xchg
sub
pop
ljmp
sub
test
popa
jg
sarb
push
ret
ret
roll
mov
jmp
cmp
cmp
cld
xor
ficoms
adc
sbb
jno
dec
xor
or
adc
pop
or
push
xor
pop
push
sub
cs
jle
jne
pop
cmp
dec
loope
clc
sub
xor
in
adc
pop
pop
pop
pop
lea
fwait
std
sub
sti
rep
bound
dec
cmp
or
adc
jmp
sub
jae
xor
add
shlb
add
pushf
push
roll
addl
insb
mov
adc
pop
mov
and
and
inc
mov
and
push
mov
or
push
mov
push
push
sub
push
and
inc
sub
cmp
fisubl
mov
xchg
push
fwait
or
or
lock
inc
mov
xchg
xor
mov
mov
add
mov
pop
enter
mov
xor
adc
adc
sub
cmp
inc
outsb
mov
and
add
cs
xacquire
fidivs
mov
ret
hlt
add
lcall
js
push
mov
or
hlt
dec
inc
add
xor
dec
adc
xchg
orb
pop
sarl
loopne
lret
shlb
cld
sub
mov
sub
ds
add
xor
inc
repnz
sbb
mov
sub
inc
rclb
pop
sbb
pop
test
inc
xor
add
lret
loop
xor
cld
xchg
jnp
pop
adc
push
push
sbb
ja
rcrl
push
or
mov
jmp
rolb
add
push
ficompl
rclb
mov
push
movsb
push
mov
mov
es
sarl
ret
adc
ljmp
stos
lea
and
aas
dec
rclb
addb
cmp
negl
mov
adc
arpl
pusha
popf
mov
and
add
popa
data16
imul
dec
push
sbb
add
xor
cmp
cmpsl
add
mov
lods
add
addl
add
cmp
dec
ret
arpl
jge
sbb
or
jo
and
js
adc
jno
loope
inc
push
sub
add
and
je
mov
sub
dec
rolb
dec
mov
cltd
pusha
push
push
outsb
push
push
movaps
loopne
pushf
stos
inc
outsb
push
icebp
cmp
xor
sbb
ret
inc
out
adc
mov
iret
dec
adc
or
inc
xor
jmp
jo
dec
mov
sub
and
jge
jmp
cmp
mov
adc
into
and
xor
mov
sub
pop
ret
xchg
clc
adc
cmp
data16
adc
add
jge
rorb
xchg
add
orl
xor
sub
add
and
cmc
or
inc
adc
inc
xchg
sub
ds
inc
movsl
add
or
add
xchg
add
sbb
mov
adc
arpl
or
cmp
clts
adc
dec
adc
and
or
dec
pop
add
outsb
cmp
je
inc
xchg
add
dec
push
nop
sub
sar
cmp
jbe
or
add
sbb
test
dec
inc
jnp
xor
inc
ret
pop
sub
lret
add
jecxz
fmul
and
push
repz
call
add
lahf
shlb
sahf
mov
imul
xchg
push
rolb
adc
inc
or
and
ja
lea
orb
add
outsl
icebp
sub
push
movsl
inc
inc
imul
pop
sahf
or
jne
loopne
in
mov
lods
repz
lea
mov
mov
rorl
or
push
aas
testb
insb
jne
or
mov
and
or
push
sbb
add
subb
iret
pop
in
jo
faddl
pop
aad
xor
mov
sub
je
mov
adc
mov
sbb
xor
test
push
adc
xchg
sbb
enter
arpl
inc
jnp
orl
jne
sub
icebp
sar
dec
jp
cmp
sub
mov
add
and
jae
jb
pushl
mov
jl
xor
es
cmp
xor
jae
adc
or
xchg
cmp
and
rol
sub
add
icebp
imul
dec
dec
xor
pop
into
movl
out
mov
sbb
xchg
push
sub
lcall
adc
push
repz
inc
and
cs
rcrl
test
jmp
mov
add
jns
stos
imul
enter
mov
repnz
sbb
or
sarb
dec
push
dec
daa
or
cmp
push
test
or
ret
mov
mov
cmp
jb
fdivl
fisttpl
fsubrs
dec
or
rcll
sub
adc
fldt
dec
or
in
or
add
sbb
jmp
outsb
xchg
test
mov
in
and
adc
daa
push
and
cmpsl
add
mov
xlat
addb
or
xor
dec
adc
sub
lods
js
jne
mov
cmp
je
pusha
test
mov
xchg
pop
jecxz
test
push
adc
inc
push
nop
movsl
mov
std
mov
pusha
adc
sbb
mov
xor
xor
mov
and
inc
push
or
inc
aas
and
and
xchg
xchg
and
sbb
xchg
lods
sub
daa
add
inc
push
nop
das
sub
mov
pusha
or
cwtl
loopne
cs
mov
and
push
lods
xchg
pop
cmp
and
enter
iret
xor
or
xor
mov
mov
jae
mov
dec
xchg
lea
pusha
pop
rcrb
je
ss
in
cld
or
lahf
pusha
push
cli
push
add
fsubp
fisttpll
push
or
shr
lret
pop
inc
add
adc
pop
sub
cld
lret
add
mov
fidivs
or
movl
lods
addl
xor
dec
push
or
xchg
add
insl
pop
adc
lea
push
adc
repnz
pop
adc
adc
hlt
popf
movsl
jge
mov
or
pop
pop
inc
adc
mov
jmp
push
push
and
aam
push
sbb
call
pop
sbb
push
mov
jae
pushf
jmp
cmpb
loop
pop
fwait
or
in
xor
xchg
mov
sub
adc
mov
fstpt
mov
push
push
dec
adc
je
adc
adcb
data16
mov
bnd
ds
ficomps
sbbl
btr
fsubrl
or
and
dec
or
push
clc
or
addr16
bound
aas
gs
pop
xor
add
lods
add
loope
mov
push
add
and
pop
sbb
push
and
pop
scas
js
adc
and
in
mov
popa
and
pcmpeqd
lcall
adc
add
movsl
lods
clc
sub
or
cmp
jne
xlat
test
sub
mov
pusha
sub
je
daa
add
pop
orb
inc
pop
test
mov
in
dec
push
arpl
adc
je
mov
add
cmp
and
inc
pop
or
mov
xor
sub
mov
test
inc
pop
jg
mov
add
sub
dec
outsb
fucomi
fmuls
or
pop
dec
inc
jl
add
enter
scas
imul
add
inc
pop
pusha
sbb
xchg
pop
lock
sub
pop
sti
push
push
dec
cmp
jg
idivb
or
mov
bnd
in
int3
ret
add
add
adc
inc
dec
das
roll
mov
mov
jg
stos
test
ds
lods
shrl
mov
outsb
push
and
or
dec
loope
fnstenv
or
jnp
or
add
mov
mov
cwtl
push
mov
loopne
pandn
dec
cmp
jmp
add
or
push
dec
mov
in
outsl
clc
test
push
adc
or
fsubrl
mov
mov
xchg
lret
pop
or
mov
push
adc
and
add
bound
or
call
sbb
rorl
mov
mov
xor
and
mov
mov
mov
cwtl
les
add
int3
sub
test
xchg
pop
push
in
clc
xor
xchg
pop
dec
mov
pop
cmpsb
add
ja
int
add
fisttpll
dec
gs
mov
outsb
pop
cs
std
aam
xchg
ret
lahf
xchg
dec
push
nop
iret
or
jge
lock
sbb
jmp
and
ss
aaa
dec
mov
fidivl
and
lock
rcrb
mov
mov
mov
pusha
xor
repnz
add
test
sbb
and
idiv
or
cmp
jl
cmp
jle
cmp
push
jp
or
pop
stos
fldl
add
je
stos
mov
cmp
sub
mov
fcmovnb
cmp
jge
mov
pop
and
pop
enter
xor
je
cmp
je
sarl
xchg
push
mov
pop
loope
inc
test
or
cs
rolb
outsl
sbb
loope
and
testl
loopne
cmpsl
push
or
imul
push
aas
cmp
nop
mov
cmp
jl
add
inc
adc
pop
mov
seto
inc
or
adc
add
jl
fadds
test
fidivrl
in
rolb
outsb
adc
inc
adc
adc
fwait
loopne
cmpb
mov
adc
push
dec
adc
push
inc
sarb
mov
xchg
ds
jge
cmc
popa
xor
ds
insb
dec
movsl
rol
mov
xor
xchg
or
adc
cmp
mov
movsl
insb
stos
in
or
add
mov
jne
in
clc
filds
mov
add
sub
dec
or
sbb
and
lcall
aam
sbb
mov
shlb
sbb
add
cs
cmp
pop
mov
mov
xor
test
dec
push
mov
mov
dec
or
xor
cmp
arpl
cmp
pop
fcompl
test
mov
pop
arpl
orl
dec
mov
inc
stc
push
push
test
sahf
xchg
push
or
movsb
lahf
lock
dec
xchg
dec
in
sbb
cwtl
in
sti
insb
lret
add
mov
outsl
or
or
push
pop
insb
add
out
pusha
fs
dec
loopne
iret
push
js
and
cmp
jno
pop
mov
ja
lods
or
lea
sub
xor
dec
lds
cmp
xor
xor
push
jle
rcll
xchg
dec
inc
insb
adc
add
jne
jo
push
sub
lds
push
adc
push
movl
adc
push
dec
repnz
and
and
jl
rorb
add
dec
xor
leave
fstpl
sub
inc
pop
inc
ret
cmp
ret
push
test
and
fidivs
or
push
or
ficompl
fs
pop
rclb
ret
sbbb
jmp
bound
and
mov
fidivl
inc
push
and
cmp
test
xlat
loope
mov
les
xchg
add
dec
xor
pop
adc
mov
xor
fildl
sbb
outsl
por
pop
jb
sbb
rol
adc
and
sarb
adc
loopne
cmp
jecxz
xchg
jl
fucomi
mov
gs
xor
adc
lea
xchg
or
std
bound
xchg
in
push
sub
movsb
adc
stos
das
adc
stc
and
dec
pop
inc
sub
or
aaa
dec
or
xchg
xor
or
jbe
rorl
stos
test
out
and
icebp
lahf
jl
subb
xchg
add
cmc
or
fists
les
pop
fmull
dec
enter
js
pop
test
push
mov
fildl
mov
mov
clc
and
daa
je
inc
or
adc
and
or
inc
push
pop
push
mov
push
push
push
js
jl
cwtl
inc
cmp
fsubrs
jne
xor
mov
je
mov
jle
dec
add
and
lods
xor
add
xchg
mov
jne
mov
pop
push
push
repnz
jmp
and
loopne
popa
jne
jg
je
xchg
shll
enter
or
insb
addr16
xlat
lcall
jnp
add
pop
mov
fildll
daa
push
es
xchg
clc
xor
in
sbb
cmp
inc
rorl
leave
aam
inc
add
mov
in
mov
jno
inc
jnp
sbb
or
xor
push
and
mov
pushf
test
sbb
and
test
fdivrs
out
mov
rolb
adc
stos
push
xor
nop
push
add
or
std
jl
xor
push
mov
jb
repz
cmp
cmp
aam
sbb
and
inc
popa
popa
mov
push
push
push
pop
mov
adc
dec
cltd
cmpsl
test
aas
or
mov
pop
scas
push
decb
jmp
clc
sarb
push
hlt
jg
mov
xchg
cmp
movsl
and
and
inc
popa
add
sbb
mov
movsl
orps
push
mov
sbb
or
xor
jg
ret
cli
mov
sub
lods
or
sub
lea
push
mov
mov
add
mov
imul
push
cwtl
pop
inc
adc
jno
cld
out
dec
jae
and
rorb
jbe
sar
mov
inc
adc
repnz
add
add
cmpsb
dec
scas
cmpsb
xorb
insb
add
jb
pop
orb
add
xchg
cmp
fwait
sbb
xor
loop
dec
out
xchg
pop
sbbb
push
inc
and
or
ds
adc
push
or
or
in
xor
jae
add
jns
sbb
cwtl
ret
fstl
jmp
les
xchg
lods
jae
imul
out
mov
pop
push
mov
pop
and
add
fldl
jmp
mov
pusha
adc
mov
xchg
mov
inc
mov
dec
and
or
cmp
or
xorb
adc
fst
or
sub
in
add
cmp
jl
pop
bnd
or
pop
int3
cmp
pushl
jae
cs
test
sbb
add
dec
in
inc
sbb
push
sarb
je
sbb
daa
sub
and
insb
incl
nop
sub
adc
in
ficoms
mov
decl
pop
testl
sub
int3
sbb
mov
shll
movsb
and
mov
mov
push
fldl
shrl
cmpsl
mov
dec
in
stc
insl
fildl
sub
aaa
adc
adc
jne
sahf
lahf
out
push
divb
or
jne
or
jns
cli
jne
or
lock
addl
fstl
addr16
das
mov
and
cmp
movsl
and
dec
inc
xchg
sahf
insl
lret
inc
std
mov
inc
inc
ficomps
out
clc
pusha
cmp
ds
add
aam
arpl
test
mov
jnp
fstl
jecxz
fdivrs
into
add
mov
xchg
decl
push
xlat
imul
and
repnz
mov
xadd
add
in
dec
imul
orb
ret
cmp
rolb
sbb
sbb
imul
movsb
jbe
push
xchg
add
pand
sbb
test
sti
jbe
adc
loopne
sti
movsl
pmaxub
cld
dec
movsl
fcmovbe
lcall
sub
and
add
ja
sub
or
fcomip
push
dec
add
movsb
out
aaa
fmull
or
dec
xchg
call
in
cmp
aam
jmp
push
jbe
xor
cs
push
or
rol
dec
inc
and
or
nop
shlb
imul
nop
movb
pop
lea
add
jno
pop
push
add
clc
push
jo
daa
xchg
pusha
js
xchg
cmp
xor
or
iret
in
add
pusha
and
leave
mov
insl
push
pop
mov
rcrl
mov
and
inc
imul
adc
sub
pop
fistl
test
cltd
vsubps
orl
push
lods
outsb
sbb
mov
es
or
or
test
imul
cwtl
mov
add
sahf
cmp
fwait
lods
cld
je
xchg
pop
add
xchg
mov
jbe
or
jno
add
mov
pop
add
enter
push
clc
xor
in
ds
and
pop
les
pop
lods
or
fstl
inc
jo
faddl
fs
or
rorb
inc
imul
ret
imul
push
arpl
or
adc
xchg
sub
inc
jo
loopne
out
and
lock
add
es
daa
sub
xor
add
inc
xor
xchg
dec
add
dec
rclb
mov
mov
mov
lods
xchg
and
cwtl
and
mov
inc
scas
xor
mov
mov
xor
cmp
adc
add
out
xor
add
mov
loope
or
push
and
dec
or
cld
fadds
adc
push
out
ret
fidivs
cli
or
mov
push
int
xchg
call
pop
sub
fcompl
or
xchg
jns
fildl
add
mov
cmp
jmp
add
ss
push
repnz
loopne
cld
add
add
hlt
shrb
xchg
je
and
or
jge
outsb
frstpm(287
adc
xchg
cmp
jl
enter
add
lea
adcb
popl
dec
loopne
add
jmp
sub
sbb
add
add
add
push
fwait
push
out
jns
mov
test
sarb
movsl
cli
push
push
mov
jmp
or
sub
lret
push
mov
or
and
es
adc
rorl
jmp
pop
dec
in
mov
scas
inc
shrl
adc
fldl
sbb
push
test
xchg
gs
into
sbbl
mov
mov
dec
test
mov
or
fildl
lods
movsb
jl
adcb
ljmp
cwtl
pop
sbb
arpl
push
inc
mov
adc
sbbb
das
jne
adc
pop
jge
fldcw
push
pmulhuw
xchg
lods
testb
mov
adc
cwtl
and
pop
inc
lret
mov
arpl
ss
outsb
jmp
cmp
int3
nop
insb
dec
ja
clc
inc
add
lcall
inc
xchg
sbb
ljmp
loopne
xor
add
sbb
add
mov
pop
jle
push
lods
add
mov
mov
test
cmp
fisubs
dec
cmp
cmp
adc
jg
sub
add
sti
push
in
sub
push
es
mov
les
scas
mov
xchg
movsl
add
cmp
sbb
cmpsl
add
jle
xchg
lea
push
jbe
dec
test
loopne
out
enter
sbbb
sub
fwait
mov
hlt
push
dec
sub
sbb
jb
stos
add
inc
bswap
pop
sub
vmovss
adc
add
dec
cmp
rorb
aad
adc
xor
inc
imul
xchg
outsb
or
outsb
bound
les
std
or
rorb
das
pusha
enter
jge
outsb
sub
push
xlat
push
jo
clc
pop
mov
pop
inc
dec
jl
mov
ljmp
jb
popf
pushf
popa
rclb
ret
shrb
mov
jno
lods
hlt
adc
and
pop
sbb
jmp
xlat
jns
and
inc
mov
call
mov
loop
adc
xor
pop
pop
xorl
filds
jmp
gs
mov
mov
inc
movsl
dec
dec
cltd
add
nop
cmp
sbb
xchg
or
push
outsl
stc
sub
mov
out
lods
pop
and
lods
rclb
or
popf
mov
push
xchg
icebp
jne
shrb
test
sbb
or
mov
movsl
add
fsubrs
push
adc
movsl
xchg
outsb
adc
sub
xchg
mov
shlb
jns
mov
push
insl
lods
sub
jmp
ljmp
scas
adc
stc
jno
lods
pop
xor
mov
shll
inc
jecxz
push
repnz
jo
cmp
or
insl
popf
cmp
cmpb
popf
mov
inc
ret
jnp
jns
or
and
mov
cmp
fstpt
mov
lock
adc
lock
sbb
test
mov
imul
xor
scas
call
adc
dec
lods
lods
lret
idivb
sub
in
and
dec
ret
inc
ret
scas
das
and
sbb
jge
shrl
repnz
iret
push
add
outsb
jle
push
sbb
rorb
dec
mov
leave
inc
mov
mov
dec
popf
ja
shrb
add
xor
xchg
and
orl
add
decb
inc
std
cs
xor
flds
push
addl
cmp
in
pop
mov
test
dec
lcall
das
add
xor
push
mov
rclb
clc
cmp
xor
test
sti
pushl
cmpsl
leave
mov
mov
movsb
pusha
pop
adc
sbb
and
sbb
popf
testl
call
dec
xchg
jbe
adc
hlt
mov
out
add
xlat
fs
addb
sbb
cltd
enter
lahf
loope
dec
add
push
add
sub
dec
dec
jl
mov
daa
insl
in
xchg
fstpl
ljmp
or
and
mov
sarb
enter
dec
test
mov
pop
push
pop
lods
dec
shr
fcompl
add
cmpb
or
movsb
and
jne
add
or
dec
clc
or
or
or
jmp
seto
push
icebp
sub
inc
shr
addr16
insl
pop
aam
mov
cmp
dec
lods
pop
das
add
adc
add
into
inc
adcb
mov
mov
and
mov
jp
push
daa
out
gs
jne
and
mov
push
sbb
mov
or
xchg
sahf
loope
mov
int
mov
idivb
cmp
cld
or
cmc
and
push
add
jne
xchg
or
inc
ret
xor
popa
movsl
or
pop
test
pop
mov
arpl
add
mov
pop
aas
mov
sahf
push
shlb
inc
and
push
repnz
sbb
add
add
cmp
push
add
push
aam
add
jmp
fistps
push
repz
loopne
test
leave
jmp
sbb
mov
pop
mov
sub
mov
mov
in
or
xchg
andl
push
clc
or
pushl
add
icebp
inc
mov
inc
es
adcl
aam
pusha
pop
pop
inc
adc
sbbb
xor
hlt
and
xchg
sbb
mov
push
adc
inc
add
xchg
add
int3
movsl
sub
mov
sub
pusha
add
add
push
lds
je
test
push
and
mov
push
mov
daa
add
rorb
cld
ds
sub
cmp
and
or
mov
and
fucom
xor
imul
sbb
jmp
mov
daa
xor
sbb
inc
push
jne
adc
inc
add
add
lahf
or
cmp
outsb
inc
adc
sub
cmp
insl
xor
push
or
and
dec
cmp
shrb
sbb
ret
lahf
jmp
jg
adc
scas
imul
add
xlat
sbbb
add
addl
jo
inc
add
pop
shll
iret
movsl
rolb
fld
lret
scas
movl
and
cld
add
sub
addl
jbe
cmc
into
cmpb
imul
sbb
in
add
fistpll
jo
mov
xor
sbb
pop
dec
daa
lea
adcl
or
pusha
cltd
loope
lret
addr16
ret
add
sbb
adc
orl
cltd
lahf
add
or
push
shrb
repz
xchg
rolb
dec
jge
movsl
mov
mov
dec
std
enter
sti
add
loopne
std
cmp
or
and
decl
adc
iret
xor
cmp
fldlg2
pushf
fdivl
jmp
add
xor
les
jmp
ljmp
push
sbb
js
dec
add
xchg
jbe
pusha
in
sub
enter
inc
push
adc
out
stc
mov
out
add
push
adc
jp
xor
or
mov
sub
mov
sub
xor
xchg
inc
stc
int
lock
inc
sub
bound
jmp
mov
hlt
fs
pop
jb
add
push
add
arpl
xchg
jo
inc
js
xor
pop
adc
pop
add
push
mov
std
push
push
std
lock
outsl
push
mov
add
or
sbbb
js
or
fmull
xchg
daa
aam
rclb
sub
movsb
pop
lock
shll
mulb
test
pop
add
or
push
add
lret
in
test
sbb
xchg
repz
cmp
jae
sbb
fstps
insl
in
and
call
aaa
loopne
sbb
dec
or
mov
fwait
test
ret
cmp
loope
add
jle
adc
or
sbb
jecxz
push
sub
add
add
cmp
push
add
xchg
jmp
shll
sbb
imulb
nop
sbb
push
inc
mov
pop
cld
in
rolb
xchg
xchg
xchg
test
pop
pop
adc
pop
adc
pop
sub
adc
push
cwtl
push
mov
push
pop
inc
sub
mov
adc
in
std
std
pcmpeqw
or
add
out
call
mov
rol
jmp
imul
std
pop
call
mov
jl,pt
or
pusha
mov
nop
jno
icebp
mov
call
inc
cmp
lea
decb
mov
sub
int3
sub
insl
sub
and
dec
push
cmc
loopne
icebp
mov
ss
jnp
test
jmp
pop
pop
dec
xchg
and
sbb
cmp
pop
push
adc
adc
cmp
pop
dec
lret
popa
and
std
push
xchg
icebp
sub
and
mov
dec
imul
or
lret
je
sar
and
cli
pop
xor
lret
xchg
loopne
sarb
ficompl
pop
mov
arpl
sti
mov
frstor
popa
push
sbb
add
cwtl
cli
fdivl
loopne
les
jmp
and
add
ljmp
or
bound
pop
adc
add
xchg
pusha
pusha
or
lock
insb
imul
div
insl
and
fstpl
and
insl
clc
push
mov
pop
mov
fldz
out
cmp
push
inc
sti
add
in
and
pop
fsub
pop
fsubrp
test
sbbl
sub
pop
mov
stc
xor
or
pop
lcall
or
sub
xchg
loope
dec
sar
jge
jge
int3
xor
je
add
and
movb
sbb
add
fucomp
push
mov
push
push
daa
fiadds
mov
jmp
push
in
sbb
push
adc
lret
cmp
jg
lods
or
nop
aaa
js
clc
or
scas
mov
push
sbb
iret
movsb
imul
xor
insb
push
cmp
in
outsb
adc
stc
fsts
addr16
adc
add
sbb
sbb
and
in
xchg
into
faddp
aaa
or
je
mov
clc
in
std
mov
cmp
sub
lea
aas
or
or
sbb
sbb
cmp
push
sub
out
pop
jns
push
pop
pop
in
add
push
fstl
in
inc
jo
xchg
add
in
inc
sahf
sbb
pushf
and
adc
enter
popa
or
enter
fstps
sub
mov
push
lock
xor
test
xor
xchg
mov
add
mov
dec
and
sbb
lea
pop
popa
pop
es
lret
sub
pop
push
lods
add
dec
sub
xor
outsb
push
cwtl
cmp
testl
push
mov
pop
jns
push
repnz
and
adc
push
clc
or
and
or
je
sub
enter
sbb
sbb
out
ss
push
mov
pop
inc
pop
cmp
std
fmuls
insl
jl
enter
mov
lret
add
enter
cmp
addr16
iret
outsb
nop
ffree
pop
mov
pop
getsec
add
and
or
mov
push
bound
bound
pop
test
in
inc
sahf
or
and
xor
cmpsl
sbb
outsb
sub
push
pop
sbb
sbb
adc
ja
pop
sub
or
repz
push
mov
stc
cmp
iret
loopne
add
adc
cmp
imul
mov
lahf
out
stc
or
push
and
xor
push
pusha
insb
jnp
iret
repz
cltd
stos
mov
repz
stc
or
pop
add
xchg
out
inc
xor
lods
js
inc
push
pop
int
pusha
mov
mov
int
pop
xor
cmpsl
rcl
lcall
leave
mov
test
ds
push
mov
push
insl
fnstsw
aas
adc
sti
sub
inc
cmp
test
push
add
andb
ja
mov
addr16
pop
addr16
es
jp
addl
or
add
and
scas
arpl
in
fs
insl
xor
dec
mov
aaa
jb
repnz
rclb
sub
pop
rcrl
push
ret
sub
push
out
js
xor
fists
add
cmp
push
enter
pop
add
push
xor
lds
xor
mov
push
lods
daa
xor
adc
iret
rolb
sub
adc
mov
pop
cltd
mov
and
mov
inc
adc
sti
dec
mov
adc
push
addr16
and
adc
les
pop
cmp
aaa
leave
inc
push
stos
jmp
dec
ds
pop
add
ljmp
out
add
cmp
bound
int
push
dec
inc
lock
jbe
pop
xchg
inc
loop
jle
mov
jno
xorb
pop
push
push
add
pop
jmp
cs
test
jle,pt
jnp
xor
add
aaa
xor
arpl
xor
and
pop
loop
add
shlb
call
pop
add
dec
pusha
mul
scas
push
leave
pop
mov
and
cmp
movl
sub
enter
sbb
push
xor
nop
cmp
and
ret
pop
inc
pop
movsl
lock
cmp
inc
arpl
mov
jne
push
and
sub
xchg
push
in
add
pop
popa
test
or
sub
mov
out
dec
sahf
iret
add
aaa
add
or
mov
or
push
xchg
cmp
pop
lock
push
or
and
or
push
add
andb
sbb
dec
ffree
shl
push
xor
inc
push
movsbl
popa
push
jnp
cld
push
aam
lret
cwtl
push
scas
in
inc
xchg
add
xchg
dec
sbb
lods
sub
jge
fistl
mov
adc
push
roll
test
ja
xor
ja
shrb
fimull
movsl
or
adc
mov
xchg
les
sbb
or
push
stos
ret
mov
or
xor
cmpsb
rol
add
adc
lock
imul
sub
mov
cmp
add
cltd
mov
jecxz
mov
jge
pop
test
cmpsb
mov
adc
adc
cmpsl
jo
enter
icebp
inc
jle
cmp
adc
add
sub
add
cmp
cmp
adc
dec
test
rclb
or
xor
cwtl
add
dec
mov
es
cmp
bound
mov
das
add
ss
cmpsl
xor
adc
lds
fldt
or
push
xchg
pop
call
pop
sbb
aas
in
and
rolb
and
cmp
pop
inc
sahf
lods
cmpsb
cmp
cltd
pusha
mov
pop
enter
fs
adc
xchg
dec
and
xchg
or
sub
or
sbb
xchg
sbb
popf
int
dec
and
add
mov
inc
inc
int
icebp
add
adc
add
pop
add
sub
stc
and
stc
inc
addl
iret
lret
decb
add
dec
lea
add
and
mov
or
dec
imul
sub
std
adc
inc
and
pop
sub
mov
or
cmp
enter
adc
mov
mov
mov
add
pop
adc
push
stos
cmp
cmp
nop
addr16
stos
stos
push
jge
das
push
sbb
pop
scas
add
inc
sahf
fldl
xor
or
in
dec
adc
inc
push
cmpsb
xchg
add
add
mov
mov
inc
add
add
lea
lea
mov
push
nop
pop
xchg
iret
or
or
sub
mov
inc
loope
imul
lret
cltd
dec
add
adc
in
stc
orb
in
mov
and
mov
sub
push
push
push
push
jg
mov
sub
adc
and
xchg
sub
addr16
mov
push
mov
push
pop
or
sub
test
add
inc
xchg
popa
jge
pop
subl
mov
roll
adc
adc
pop
inc
ret
cmp
push
add
add
xor
add
mov
pusha
imul
sub
mov
add
or
decb
shll
mov
in
adcb
mov
outsl
inc
scas
pop
xor
pop
fldt
mov
cmp
sub
adc
repz
jnp
add
sub
test
daa
inc
fidivl
add
mov
push
add
jns
jge
inc
add
mov
add
subb
in
cmp
out
inc
add
or
add
sahf
loopne
fwait
sub
xchg
adc
mov
or
mov
inc
aad
jp
repnz
mov
adc
dec
clc
cmp
push
insb
cwtl
dec
movsb
inc
int
fists
mov
je
data16
inc
dec
push
ss
xchg
shrb
xor
sbb
movb
verw
subb
xor
rcrl
jl
cmp
jne
xor
movsl
inc
loopw
mov
mov
add
pusha
inc
fdivl
ret
fmull
ja
xor
fildl
sbb
inc
rorb
pop
push
mov
mov
shlb
jp
add
xchg
xor
scas
inc
loopne
dec
xor
add
xchg
push
outsl
call
push
lcall
cmp
push
lea
ret
adc
xchg
je
add
es
sbb
add
dec
loope
pop
push
push
fsubs
xor
ret
inc
push
movsb
inc
imul
adc
add
sbb
xchg
lods
or
fdivrs
roll
and
push
sbb
push
ret
xchg
add
add
test
cs
adc
dec
inc
gs
lea
mov
add
sbb
xchg
repz
out
mov
shrb
add
pop
inc
loopne
and
movsb
mov
jp
loopne
sbb
mov
and
inc
dec
aaa
adc
movsb
lret
mov
lock
or
xor
fcompl
push
sbbb
cs
mov
dec
or
ds
inc
dec
add
cmc
push
jo
sbb
adc
notl
lods
test
xor
or
push
mov
add
movsb
adc
mov
sti
lcall
jo
cmp
mov
jl
xor
jmp
cmp
jl
or
int
jbe
jle
adc
jle
xor
jle
mov
je
mov
mov
push
add
inc
jmp
movb
mov
add
pop
xchg
push
pop
cltd
idiv
xchg
mov
jbe
repnz
lret
pop
pop
jno
les
sbbl
enter
mov
shr
pop
sbb
push
mov
add
pushf
lds
sbbl
pop
mov
jae
inc
mov
in
or
add
mov
faddl
add
inc
decl
xchg
lret
shr
dec
inc
dec
in
xchg
lret
xchg
cmp
sub
lock
lret
xchg
cmp
pop
in
in
pushf
int
cmp
or
add
into
cmp
add
mov
enter
cmpsl
mov
daa
lock
pop
addb
or
jmp
inc
sub
outsl
lods
jmp
and
movsl
jne
cmc
repnz
pop
push
rorb
mov
add
xor
mov
xchg
xchg
popa
push
sub
in
or
icebp
jbe
bound
fs
sub
aam
sbb
int
cmp
lcall
es
add
dec
in
les
jbe
sbb
mov
nop
adc
and
or
inc
mov
cmp
dec
sahf
addr16
and
cmp
adc
pop
mov
adc
outsl
xchg
and
or
int
adcl
cmp
pop
leave
mov
jmp
push
outsl
adc
jns
mov
sbb
dec
push
imul
pop
dec
in
std
cmpsl
js
push
push
pop
push
sub
in
enter
shlb
jae
dec
in
fs
in
loopne
sbb
inc
push
jns
loopne
jl
mov
cmp
dec
out
sbb
jb
mov
rcrb
fsubrs
imul
dec
lcall
dec
xor
pop
and
pop
leave
and
inc
movsb
pushf
insl
sbb
jae
mov
nop
dec
sahf
mov
test
xor
xor
mov
sbbl
jns
out
aad
lods
and
shlb
in
cmp
xor
sbb
and
and
pushl
call
cmp
add
in
mov
and
test
push
or
and
and
mov
test
loopne
inc
iret
jb
add
fcomps
sbb
notl
mov
jo
push
call
sub
loopne
call
and
or
hlt
lods
lock
xchg
cld
inc
sub
mov
jne
mov
movsb
push
jne
fnstcw
fadds
add
test
movsl
push
in
cmp
ret
inc
add
lods
test
push
xchg
pop
add
into
in
cmp
out
data16
jb
or
add
mov
cmp
mov
sub
push
adc
sub
sbb
and
push
popa
insl
jl
cmp
lahf
mov
xor
dec
add
lods
sub
push
in
js
add
fmul
leave
pmulhuw
xchg
mov
xchg
push
inc
inc
dec
sahf
push
adc
mov
fdiv
mov
mov
fsubrl
hlt
xchg
adc
rolb
pop
popf
insl
fadd
dec
add
push
cmp
rolb
insl
fcoms
imul
adcl
rclb
push
dec
sahf
addr16
and
pop
and
jo
aam
push
add
enter
add
push
cmp
xor
orb
addl
pop
and
pop
or
ret
and
nop
cmp
ds
inc
and
push
or
jo
add
fstpt
and
cmp
sub
adc
cmc
cli
imul
adc
add
mov
aam
cmp
sahf
inc
jmp
ss
sub
ds
add
ss
xchg
and
in
inc
test
and
add
pop
pop
sub
mov
add
sbb
add
rorb
push
dec
lods
push
jns
mov
and
sub
add
jne
sub
cmc
add
push
roll
sbb
xchg
jo
jmp
push
sub
gs
scas
pop
jg
std
inc
sbb
pushf
xor
or
or
xor
je
pop
cmp
or
push
mov
add
push
mov
mov
cmpsb
push
sbb
shll
repz
pop
adc
xchg
addb
xchg
and
cmp
sbb
sub
mov
add
jge
ds
mov
xchg
fsubrs
cmp
ja
fcoms
sbb
dec
addb
or
push
js
adc
jb
xlat
mov
cs
sarb
jecxz
add
mov
push
mov
add
push
adc
mov
shrb
and
dec
mov
xor
push
icebp
sbb
or
and
push
dec
pop
inc
call
xchg
repz
xchg
inc
sub
shll
ljmp
loop
jg
xor
sete
adc
faddl
xchg
mov
ret
or
cmpl
and
addl
add
add
femms
jne
mov
lods
stc
xchg
je
push
loopne
push
sub
cmpsl
test
cli
or
add
xor
jge
test
or
sbb
push
and
and
mov
add
add
inc
add
and
cs
inc
insl
js
or
add
jecxz
sub
or
inc
sub
into
loopne
movl
aam
or
bound
leave
les
in
push
pop
xorb
mov
adc
popa
adc
xchg
es
add
call
int3
adc
sub
or
add
je
pop
pop
and
xor
add
into
f2xm1
mov
nop
cmp
popa
cltd
lods
add
mov
or
or
addb
lds
sbb
push
orb
push
ret
adc
mov
adc
push
mov
in
ja
inc
xor
xchg
cmp
inc
jl
add
mov
je
insl
mov
add
push
inc
pop
add
or
or
out
aad
sbb
nop
movsb
in
bound
dec
inc
add
sbb
and
rorb
mov
dec
test
in
add
in
adc
mov
stos
adc
mov
arpl
cmp
xchg
push
mov
inc
adc
mov
xchg
add
aaa
jnp
adc
sub
nop
je
popa
lea
loope
pushf
and
adc
add
fisttpl
jmp
daa
stos
push
push
push
cmp
stos
pop
sub
cmp
adc
lods
jp
rorl
cmp
in
cmp
push
cmp
sub
pop
dec
cmp
cmp
in
xchg
ljmp
pop
cmp
mov
cmp
pop
ret
mov
mov
sbb
cmp
es
add
sti
mov
sbb
sbb
jl
sbb
add
adc
add
add
mov
cmp
push
pushf
mov
dec
add
test
les
sbb
imul
mov
mov
jle
push
scas
addb
mov
add
outsb
jl
stos
lods
mov
cmp
jne
mov
adc
add
adc
mov
xchg
adc
add
ret
push
cmp
lea
stos
jb
or
inc
pop
xor
mov
add
movsl
sub
and
lret
pushf
insb
fdivs
mov
movsl
jno
stc
ljmp
adc
or
in
or
out
xchg
add
lret
jo
lea
outsl
imul
cmc
pop
mov
rorl
mov
add
cmp
dec
inc
pop
mov
or
push
into
add
leave
lahf
in
add
push
ss
xchg
cmp
loopne
inc
adc
mov
jp
mov
push
inc
sahf
out
push
bound
lahf
push
adc
test
mov
comiss
fsub
shlb
pop
pusha
in
outsl
sbb
lds
pop
data16
cmp
jl
xor
mov
cltd
lock
ds
cmp
lahf
not
xchg
xor
mov
js
es
or
leave
add
sub
mov
push
jo
pop
aam
xor
xor
daa
mov
sub
xchg
psrlw
ret
cmovae
js
icebp
out
movsl
pop
dec
ret
rcrb
adcb
mov
lock
adc
push
xor
test
add
and
stc
inc
call
mov
int
ret
out
or
push
inc
ljmp
in
loop
xchg
inc
add
aam
ror
or
lret
pusha
inc
cmpsb
in
mov
inc
and
test
dec
push
push
push
and
mov
lea
adc
es
sub
or
pusha
pop
repnz
not
lods
push
or
loop
add
xchg
mov
inc
sbb
xchg
lods
rorb
shrb
push
mov
or
fs
pop
mov
sub
mov
pop
gs
adc
jmp
xchg
push
push
mov
les
mov
add
push
inc
or
push
pop
or
cmp
cmp
push
mov
in
adc
mov
pusha
mov
cmp
jne
dec
xchg
scas
nop
mov
add
sub
pusha
ljmp
test
gs
adc
rcrl
push
adc
imul
mov
jne
fcomp
jnp
mov
push
add
push
cltd
jb
cli
add
cmp
adc
pop
lock
inc
mov
in
inc
pop
mov
cmp
push
cmp
jg
lods
rclb
or
addl
sbb
add
xchg
into
in
dec
fs
popa
pop
mov
lret
and
mov
sub
scas
cmpsb
fdivl
cmp
jae
mov
pop
adc
cmc
aaa
call
pop
mov
add
jmp
clc
mov
cmpl
scas
std
dec
jno
inc
inc
imul
jne
xchg
pop
mov
push
fdivl
mov
movsl
sbb
loopne
lods
or
xchg
jns
jecxz
sub
sub
mov
movsl
fdivs
or
dec
jne
call
int
dec
inc
js
ret
insl
inc
add
add
movl
mov
and
outsw
ljmp
mov
mov
and
jge
push
lret
repnz
pusha
add
or
in
and
sub
mov
xor
js
push
jbe
mov
inc
in
mov
mov
subb
shr
xor
inc
push
addb
loope
pop
push
sbb
dec
sub
out
je
popf
inc
cmp
in
mov
in
popf
ljmp
xchg
and
mov
ret
push
mov
cmp
cmp
xor
pushf
imul
call
sub
xor
ret
xchg
out
mov
aas
add
sub
mov
incb
stc
into
or
test
or
and
pop
nop
mov
test
mov
andb
push
loope
cwtl
add
xchg
mov
sub
je
pop
or
test
push
add
stos
xchg
mov
and
jo
or
pusha
or
push
push
xchg
test
sbb
dec
repnz
pop
fwait
mov
inc
orb
cmp
mov
lock
add
shlb
adc
orl
int
div
push
pop
popf
das
movl
sub
mov
inc
mov
pop
xchg
push
cmp
push
pop
xchg
push
xor
es
pop
add
orl
icebp
lods
jnp
xor
ficoml
mov
mov
xchg
push
push
pop
je
or
lock
out
dec
cmpsb
leave
pop
dec
movsb
or
dec
pop
imul
data16
push
es
add
or
in
pop
loop
xchg
rolb
push
add
inc
cmp
int3
movsbl
lods
aaa
push
push
adc
das
and
nop
test
xor
add
sub
mov
dec
xchg
scas
shll
les
pop
shrb
push
mov
or
andb
push
xchg
inc
ljmp
sbb
leave
adcl
or
adc
xchg
or
ja
mov
xchg
test
pop
lret
add
and
sbb
pop
inc
repz
pop
arpl
aad
outsb
push
adcl
sbb
mov
cmp
dec
adc
ret
sbb
outsl
inc
push
or
loop
pop
out
mov
jp
out
sarl
test
push
sub
adcb
test
adc
adc
push
inc
out
ret
sti
test
dec
push
mov
sbb
daa
cs
outsl
sbb
sbb
lods
or
insl
adc
arpl
mov
jge
mov
stos
mov
mov
fadds
pop
andb
cmp
sbb
dec
sti
shlb
shrb
xor
jbe
ja
in
add
add
sbb
mov
cmp
push
inc
sbb
cltd
fsts
xor
cmp
sub
jo
sbbl
lret
pop
xchg
push
cmp
push
clc
xor
into
jo
lcall
cmp
push
jno
shlb
je
fiaddl
sahf
sub
jo
scas
adc
lods
imul
aaa
les
popa
insl
gs
aam
das
sbb
inc
add
int
push
or
inc
mov
aaa
jmp
sub
mov
jmp
inc
cmp
mov
xchg
jno
leave
or
and
mov
pop
sub
xchg
xor
fs
add
add
push
in
and
leave
add
and
incl
dec
adc
and
or
xor
rorb
cmp
stos
leave
and
and
adc
aad
inc
adc
xchg
fsts
jne
sub
mov
and
icebp
lea
data16
sbb
or
and
fcmovnb
stos
mov
sbb
xor
xlat
es
sub
xchg
jmp
addb
sub
sub
jno
lret
mov
daa
aad
push
pop
mov
enter
fsubr
sbb
sbb
aad
sbb
daa
int
call
jne
clc
mov
lret
fcomi
cmpsl
jo
xchg
sub
dec
je
push
mov
sbb
and
shll
add
and
adc
imul
add
pop
andl
repnz
mov
mov
add
push
pop
fs
pusha
popf
lock
cltd
movl
movsb
push
fisubrs
inc
mov
add
icebp
sub
sbb
cld
push
shl
cmp
mov
add
lods
xchg
mov
inc
je
mov
jmp
sub
adc
roll
cmpb
push
inc
and
sbbl
stos
mov
mov
lcall
mov
cmp
add
or
test
sbb
lock
in
cmpb
mov
or
ljmp
mov
dec
test
sub
lahf
xor
icebp
mov
fimull
push
push
adc
movb
out
in
les
sbbb
dec
dec
cmpsl
xor
jge
shll
popf
mov
lods
xor
jmp
cs
pop
lahf
cmpb
arpl
adc
outsb
push
lods
cld
dec
mov
adc
test
sbb
out
inc
rorb
sbb
fs
loope
add
pop
addl
and
andl
jae
leave
shrb
mov
dec
sarl
inc
daa
add
incl
xor
out
push
jb
mov
and
in
sub
lock
test
mov
cmp
pop
addr16
cmp
sbb
ret
push
insl
jne
movsb
rol
push
or
or
rclb
lcall
sub
shrb
ds
cmpsb
cmpsb
mov
pop
mov
cmp
xchg
cmp
clc
mov
ja
aaa
and
fnstenv
add
pop
rorl
in
cmpsb
in
repz
mov
or
adc
jb
lea
push
stc
into
into
stc
leave
ret
mov
add
adc
fwait
add
dec
pop
pxor
or
ja
push
sub
mov
or
sub
loopne
pop
fwait
leave
cltd
add
clc
cmp
jb
dec
rol
aaa
push
popf
sub
pop
cmpl
xor
or
xchg
jle
xor
into
out
stos
inc
cmp
or
int
cmpsl
xchg
cmp
notl
inc
fdivs
mov
aas
ret
dec
mov
imull
push
jne
push
ljmp
xchg
dec
and
ret
and
xor
adc
sbb
mov
xor
pop
popa
sub
jae
sub
mov
pop
push
push
dec
add
sub
add
das
or
ficomps
movsl
mov
adc
jl
or
insl
rclb
pusha
lock
push
das
dec
test
and
in
dec
mov
pop
xchg
rorl
add
xchg
dec
add
and
sub
mov
xor
mov
pop
mov
adc
insb
mov
je
mov
pushf
adc
inc
jmp
bound
std
mov
adc
cs
enter
xchg
nop
movsl
adc
mov
xchg
sub
mov
xchg
fs
ljmp
or
pop
or
mov
adc
ja
bound
push
sarb
xor
pop
call
pop
add
push
cmp
int3
push
ja
pop
lock
mov
pop
inc
xchg
addr16
sbb
push
add
xor
nop
xchg
fwait
and
std
push
inc
add
pop
dec
push
leave
cli
xor
adc
pop
add
xchg
std
add
sbb
incb
push
xchg
add
mov
jmp
int3
dec
cmp
pop
shlb
aam
mov
xchg
add
imul
pop
or
or
mov
push
in
push
add
pop
rclb
iret
iret
dec
push
mov
and
out
cmp
lea
cmp
cwtl
xor
push
je
mov
cmp
jne
push
test
movsl
cmp
rcrb
je
jae
jl
cmp
ret
pop
pop
scas
cmpl
push
rcrb
inc
jmp
popa
adc
cmp
inc
mov
rorb
mov
ret
mov
test
dec
fs
dec
dec
add
ret
iret
andl
enter
and
add
popa
push
or
add
orb
cmp
andl
xchg
ss
ds
xor
or
and
add
fdivl
cmpsl
mov
aam
js
es
jl
or
leave
pop
or
fwait
dec
enter
jb
fisttps
mov
jp
pop
fwait
ret
sahf
inc
mov
adc
cmpsl
js
sub
mulb
lods
dec
stos
push
lret
movsl
das
or
and
in
sbb
cmp
mov
add
push
mov
cmp
mov
imul
pop
pop
pop
inc
imul
add
out
addr16
cmpsl
adc
inc
add
cmpsl
mov
add
cmp
or
jns
call
add
lret
call
or
or
das
fisubs
loope
inc
jp
mov
sbb
xor
pop
sub
cmp
xor
rclb
adc
sbb
inc
or
arpl
adc
push
pushf
add
dec
mov
mov
push
jb
xor
jo
push
jl
sahf
daa
aam
xchg
mov
push
sbb
ret
dec
push
adc
das
cwtl
fldenv
daa
mov
mov
xor
pop
ds
adc
and
mov
adc
fdivl
popf
xchg
mov
outsl
mov
sbb
pop
push
inc
or
sub
or
dec
push
push
out
push
push
inc
or
push
inc
pop
jbe
mov
das
cwtl
dec
call
add
int
sbb
sbb
push
dec
add
and
or
xchg
out
decl
add
mov
loopne
mov
adc
xor
xchg
shll
orl
pop
adc
insb
test
and
add
add
test
jecxz
xor
ret
push
push
pusha
adc
ret
or
adc
scas
jmp
mov
hlt
adc
stos
movsl
inc
sbb
dec
mov
ret
je
adc
xorb
test
ljmp
mov
out
push
fsubrl
mov
dec
and
outsl
dec
lea
fld1
mov
stos
mov
ret
add
test
into
push
js
jge
push
rolb
or
xlat
push
or
mov
or
xor
test
dec
mov
fildll
outsb
out
adc
inc
push
sahf
insb
inc
or
mov
mov
and
sbb
les
cmp
mov
call
add
sbb
js
lea
in
sub
xchg
cmp
mov
add
sbb
adc
repnz
push
push
int3
shlb
add
add
xor
sbb
pop
sub
dec
and
xchg
pop
cmp
jne
or
mov
pop
push
and
sub
jg
jno
std
add
sub
xorl
fcomip
jne
cmp
cmp
or
or
rcrl
or
push
inc
in
cmp
movsb
push
push
xor
push
inc
cmpsb
adc
or
cmp
push
out
pop
adc
js
push
popa
ficompl
out
adc
or
shlb
sbb
sbb
pop
repnz
mov
adc
lar
stos
or
inc
movsl
test
out
stc
pop
mov
or
xchg
xchg
insb
sbb
push
and
adc
and
mov
ja
and
sbb
add
push
dec
cs
loopne
or
xor
sbb
js,pn
loop
into
aas
aaa
mov
or
js
out
sub
out
les
cmc
pop
xchg
popf
push
cmp
push
and
dec
test
adc
cmp
push
push
push
or
xchg
aam
call
adc
pushf
xchg
cli
mov
jecxz
scas
inc
sbb
pop
fs
xor
pop
inc
dec
jnp
ds
rep
popa
std
ss
add
dec
shlb
enter
adc
fdivrs
push
imul
and
lret
push
jo
adc
movb
aam
test
je
ja
sub
cli
cwtl
clc
or
clc
add
test
mov
sub
push
jmp
pop
dec
repz
or
mov
or
jge
fldcw
mov
rclb
rorb
sub
jmp
out
fistps
ja
je
js
xchg
jle
ja
ficoms
test
or
loope
add
andl
pushf
cmpsb
add
xorl
jno
and
and
cltd
icebp
movsl
mov
add
dec
add
sti
and
add
nop
dec
mov
fmull
mov
and
mov
push
psubusb
aam
neg
mov
test
out
call
add
lcall
fdivs
rorb
je
cmp
dec
dec
cmp
leave
push
loope
push
test
out
dec
or
push
xor
add
sbb
ret
cld
push
ret
in
and
push
addb
xchg
in
mov
repnz
push
stos
fnstsw
jmp
call
mov
cmp
in
ljmp
mov
out
xchg
aam
pop
int3
sub
rclb
es
scas
xchg
les
sti
loop
jg
xorl
aam
pop
sbb
lcall
inc
add
les
outsb
addb
dec
or
js
push
add
int3
dec
out
lock
sub
inc
mov
js
sbb
les
lods
push
sarl
pop
mov
outsl
cmpl
xor
push
xchg
clc
in
jp
xor
jmp
push
dec
mov
les
mov
add
or
mov
mov
sub
xlat
adc
pop
sahf
push
es
int3
cmp
ljmp
dec
cmp
jmp
subl
adc
aaa
jl
mov
xor
inc
xchg
cmp
mov
scas
shrb
cld
and
in
mov
jl
ret
cmp
test
stos
scas
test
out
fdivrs
lahf
or
pop
out
outsl
xchg
add
dec
out
loop
jns
test
push
in
lret
sbb
mov
and
inc
dec
mov
dec
fdivrp
cmp
add
push
adc
push
push
push
call
cmp
inc
push
push
addr16
mov
rorl
clc
xor
adc
jmp
mov
loop
incl
xor
jae
sbb
shlb
aad
mov
or
push
mov
aaa
outsl
dec
add
test
cs
pop
pusha
inc
mov
cmp
shrb
xchg
cmc
dec
popf
les
mov
mov
aam
xlat
pusha
push
enter
or
mov
in
or
jge
clc
sub
push
dec
mov
mov
cmpsl
xor
rclb
aas
xchg
fistl
push
rclb
sbb
cwtl
xchg
lock
cmc
int3
mov
shr
push
push
and
mov
xchg
and
add
mov
push
fidivl
adc
mov
mov
mov
fimull
js
push
mov
dec
or
hlt
xchg
loopne
in
mov
push
or
insl
shl
mov
cmc
mov
fisttpll
fcom
pop
faddp
dec
addr16
sub
sub
xorl
mov
adc
adc
fcmovnu
or
push
jl
cmp
jnp
pop
jp
adc
xchg
cmp
outsb
sahf
jne
mov
push
sbbl
push
cwtl
cmc
adc
ret
add
dec
mov
sub
mov
lea
in
and
mov
sub
aam
lret
sbb
data16
dec
in
stc
adc
in
add
add
dec
and
inc
vmovaps
mov
push
scas
push
and
flds
hlt
rcrb
outsb
ret
pop
sub
test
push
hlt
popf
hlt
or
push
push
dec
std
cmp
inc
and
fdivs
mov
jmp
mov
xchg
push
dec
rolb
cmp
jns
mov
and
or
pop
jl
shrl
mov
movsl
movsw
push
sbb
movsb
int
or
std
lcall
adc
mov
mov
nop
sti
jg
inc
cmp
jle
movb
xchg
lea
cmpb
loopne
add
test
jg
push
mov
in
push
push
mov
fdivrs
mov
jmp
ss
push
and
push
adc
and
push
cld
or
leave
je
push
push
rolb
popa
insl
cmp
test
sbb
mov
sbb
push
jnp
mov
pop
sbb
or
inc
add
sbb
sub
xchg
sbb
add
subl
fistpll
fs
push
and
je
mov
or
cmp
mov
pop
add
lahf
xor
int3
shrb
or
dec
dec
pop
mov
inc
aaa
jo
lret
adc
adc
addb
or
or
fiaddl
sub
scas
mov
adc
enter
mov
jo
movsb
insl
andb
push
push
add
in
in
add
push
sti
in
in
or
or
jnp
jae
jae
or
jbe
jmp
or
addr16
jae
por
jmp
adc
pop
adc
push
jae
jae
adc
dec
adc
dec
adc
aas
jae
jae
pop
jmp
sbb
xor
jmp
jae
jae
sbb
es
and
pop
jae
jae
pop
jmp
and
or
jmp
imul
fimull
push
loop
pop
fdivrl
mov
adc
cmp
mov
cmp
inc
pop
cld
nop
lea
cwtl
mov
iret
mov
ror
fdivrs
repz
loop
in
icebp
jns
iret
repz
add
sahf
out
adc
push
and
sub
jns
out
inc
dec
push
push
pop
fnstcw
or
add
and
or
or
push
movups
test
call
adc
sbb
sbb
push
pop
and
and
aas
or
or
lock
orb
mov
push
mov
or
or
js
out
fbld
add
idivl
mov
adc
jne
mov
repz
xor
mov
jae
mov
push
shr
xchg
sbb
pop
loope
aas
xchg
push
xchg
shll
mov
adc
inc
mov
sub
sub
mov
cli
pop
adc
inc
cmp
jbe
pop
pop
outsl
int
or
add
add
cmc
sbb
cmp
jge
fwait
xor
jmp
inc
push
push
and
pop
pop
iret
in
les
jne
mov
scas
outsl
sbb
cwtl
inc
mov
test
fwait
lods
in
lods
insb
pop
ficompl
pop
push
dec
je
adc
dec
or
int3
out
mov
adcb
mov
fcoms
clc
xor
dec
aam
call
sub
or
add
inc
rorb
enter
dec
je
push
add
iret
lret
push
imul
jbe
jmp
inc
out
out
into
lea
pop
mov
add
add
push
or
add
rolb
sub
inc
or
mov
cmp
cmpsb
popl
cmp
or
sub
cmp
adc
dec
adcl
aaa
mov
mov
xchg
push
out
push
lock
popa
cmp
mov
add
jns
insb
sub
xor
in
add
xorb
and
pushw
shl
jno
pushl
mov
lds
dec
insb
fstl
sub
movsb
push
mov
xorb
ljmp
add
push
mov
add
test
sahf
ss
lahf
jmp
xchg
push
inc
pop
loopne
sbb
jnp
in
adc
js
outsb
mov
and
ss
ja
inc
ja
in
and
jmp
mov
jne
and
insb
adc
test
jno
add
idivb
jo
ss
pusha
add
movl
movsb
loopne
sbb
inc
loope
push
orl
sbb
cld
push
mov
pop
cli
shll
jl
xor
je
dec
sahf
dec
adcl
cld
push
clc
lock
mov
dec
je
xchg
clc
push
jbe
jae
in
push
xor
rcrl
adc
cmp
cmp
pop
and
jno
sub
inc
xchg
dec
rcl
xchg
xchg
sbb
jp
subb
push
outsb
pop
test
add
inc
dec
loop
push
mov
fwait
js
mov
push
subb
ss
adc
roll
xchg
cmc
and
out
pusha
sbb
push
push
sbb
add
mov
clc
out
or
push
or
ds
xor
push
out
bound
loope
mov
jecxz
loopne
mov
push
sbb
leave
adc
pop
xchg
sbb
mov
or
shr
jne
test
and
and
hlt
lcall
cmc
cmp
cwtl
orb
js
popa
push
jp
cmp
jo
push
push
cwtl
or
mov
jge
mov
ja
pop
add
mov
or
sarb
xor
xchg
incl
dec
nop
push
ljmp
adc
inc
push
adc
cmp
dec
xchg
addr16
in
movsb
push
cmpsb
push
jo
filds
add
inc
leave
scas
rclb
je
scas
pop
push
loop
xlat
sub
jecxz
out
imul
pop
ljmp
sbb
shrl
cmp
lret
popa
or
into
xor
mov
mov
fadd
sbb
add
rcl
mull
mov
or
dec
addb
jne
mov
in
and
add
movb
mov
push
hlt
or
push
mov
dec
xchg
sbb
xor
push
mov
pop
add
pop
add
xchg
fcomps
ss
or
add
in
int
sbb
sbb
inc
add
or
add
mov
lods
xchg
pop
mov
fs
loopne
mov
cmp
adc
push
sbb
sbb
xorb
mov
xchg
std
loopne
fst
movhps
sbb
add
push
aam
xchg
inc
push
push
xor
inc
jp
or
dec
cmp
jo
xchg
inc
sbb
sub
popl
jne
and
mov
cmc
dec
sahf
pop
cmp
or
jmp
push
mov
imul
push
addb
push
sub
ss
xor
jne
aad
jae
cmp
cmp
jl
inc
rsqrtps
cmpsl
scas
inc
xor
adcl
leave
jmp
pop
in
sbb
add
push
push
xor
lret
push
push
add
mov
push
incb
mov
or
ds
inc
add
fadds
and
inc
push
lock
inc
dec
inc
push
inc
aaa
dec
ja
push
aas
dec
push
cmp
pusha
fs
pop
insb
jo
cmp
and
mov
js
jmp
jl
sbbb
mov
inc
push
mov
dec
mov
cwtl
pop
pushf
lret
dec
mov
outsb
xchg
lods
mov
mov
cmpl
lret
cmp
inc
push
js
rcrb
das
pop
lahf
mov
loopne
inc
mov
lea
push
enter
push
pushf
fs
insb
imul
sub
or
jbe
or
pusha
nop
or
push
cmp
jl
sub
lea
cmp
mov
add
push
ja
sbb
or
inc
mov
push
and
push
sub
decb
push
repnz
rol
call
and
sbb
lods
nop
and
sti
adc
mov
pop
jl
jmp
out
push
or
popa
or
sbb
lea
mov
or
decl
and
and
outsb
push
jbe
and
nop
out
arpl
jmp
rcrl
sbb
mov
in
roll
or
sub
aaa
xor
das
sub
lds
js
xchg
int
pop
push
jbe
sbb
push
fwait
das
cltd
dec
lds
or
xchg
xchg
sub
scas
andb
jecxz
xchg
sbb
jl
subb
shl
cmp
jge
fs
add
sarl
xlat
jle
and
sub
ret
popa
xchg
cmc
movsl
add
pop
inc
mov
mov
out
sub
loope
sbb
in
xor
mov
mov
add
fstpl
lock
adc
iret
sub
ds
mov
push
push
cmpsl
pop
pop
mov
cmpb
jne
add
and
adc
add
pop
rclb
pop
imul
cmpsb
push
pushfw
push
cli
jbe
cs
test
push
bound
mov
cmp
cmp
test
lods
sqrtps
sub
adc
adc
xchg
in
or
adc
lahf
add
pop
pop
jne
test
pop
inc
aaa
pop
sbb
or
mov
cmp
ret
lret
push
xchg
push
ret
push
mov
pop
call
and
lods
dec
xchg
js
mov
jle
adc
pop
and
add
push
js
pop
nop
xor
push
imul
adc
das
es
call
adcl
adc
adc
xor
pop
mov
pop
xor
je
xor
dec
sbb
clc
aas
jne
push
movsl
insl
inc
lock
mov
adc
mov
cmc
or
mov
imulb
add
mov
add
popf
lods
test
or
loopne
in
or
movsb
jmp
mov
push
rorl
les
push
xor
jno
je
mov
and
xor
repz
xchg
push
or
lret
rcrb
pop
xchg
loop
push
dec
adc
inc
inc
fbstp
jmp
testb
jmp
inc
xor
test
clc
or
lds
aam
nop
rolb
or
cmp
add
and
dec
or
add
mov
push
dec
loop
adc
divb
cld
xchg
repz
mov
push
scas
cltd
insl
jbe
jb
adc
mov
adc
mov
sbb
lods
xchg
push
jo
aas
push
push
xor
nop
lea
outsl
xchg
or
loop
pop
in
add
jno
loopne
mov
arpl
popa
mov
ss
pusha
xchg
push
or
or
xor
outsl
adc
add
inc
pusha
loope
inc
mov
adc
mov
pop
inc
clc
adc
add
pop
and
movzbl
and
inc
pop
xor
pop
add
in
push
lahf
pusha
sbb
jmp
pop
push
inc
jmp
scas
or
testl
mov
add
test
mov
jae
xchg
cmp
cmc
cmp
xor
into
xor
push
or
stos
or
fwait
xchg
repz
mov
inc
into
popf
ljmp
inc
scas
jle
jmp
pop
jbe
rcr
adc
mov
or
and
mov
add
mov
jl
pop
popf
or
add
pop
push
cwtl
mov
or
add
sub
adc
imul
sub
and
ljmp
lds
push
hlt
arpl
mov
stos
adcl
mov
adc
mov
ficomps
jle
sarl
out
push
in
arpl
lcall
push
imul
adc
add
in
shlb
rorl
jp
dec
call
mov
pop
jne
inc
fcoms
or
lds
cmc
add
pop
iret
lret
aam
cmp
imul
or
pop
add
sub
push
push
dec
pop
mov
cmc
out
jbe
rclb
ret
clc
popf
dec
sahf
and
mov
mov
enter
cmpl
in
sbb
sub
add
cmp
mov
les
loope
popa
and
aad
lock
call
andl
inc
push
push
sub
aaa
add
pop
adc
and
addr16
xor
mov
iret
dec
lret
in
inc
movsb
enter
sbb
fwait
sahf
adcb
das
adc
dec
imul
rolb
xor
mov
cs
incl
mov
pop
hlt
xlat
aas
in
inc
hlt
pop
hlt
jl
sbbl
movsb
es
push
xorb
or
push
loop
sbb
loope
jne
dec
sbb
addb
add
add
mov
push
icebp
xchg
mov
mov
aaa
nop
mov
fsubrs
or
xchg
pop
movl
pop
enter
mov
push
jnp
rcr
or
push
xor
inc
sahf
and
mov
dec
mov
lea
ja
jno
popf
ss
adc
mov
shll
in
jne
push
lods
rolb
test
xor
add
push
ss
cs
loop
jnp
mov
and
adc
xor
jns
test
jp
mov
mov
cs
mov
out
mov
cmp
push
enter
rclb
mov
push
int3
loopne
shr
dec
insb
cmp
sub
jo
test
lock
ror
leave
clc
mov
std
call
sarb
jb
jle
push
adc
pop
adc
inc
loop
dec
loopne
and
int3
mov
mov
pop
jg
je
aas
push
rolb
and
ss
and
gs
cmp
sbb
arpl
enter
ficoml
push
aam
jmp
insl
push
adc
icebp
jno
inc
out
or
outsb
add
jne
xchg
xchg
xlat
dec
mov
outsb
xchg
movsb
fistl
sbb
mov
add
push
fstl
or
inc
inc
cmp
cmpl
sub
test
faddl
dec
ljmp
push
aad
mov
mulb
cld
popf
mov
jge
sti
and
adc
pusha
ss
imul
sub
add
and
dec
fisubrs
cwtl
add
jb
or
aaa
push
mov
faddl
popa
push
push
je
nop
shrb
sbb
inc
jg
outsl
push
add
push
dec
sub
xor
and
pop
jb
sahf
push
imul
insb
add
push
lock
repnz
imul
fs
fmuls
rclb
js
int3
out
xor
adc
pop
cmp
cmp
and
adc
insb
les
cs
hlt
inc
testl
sbb
movsb
inc
sbb
add
sub
cld
mov
lcall
mov
lods
sbb
xlat
fcoms
inc
or
cmp
push
out
cmp
je
cmpsw
lods
dec
hlt
pop
or
push
inc
or
sbb
jmp
or
mov
pop
or
add
add
lods
sahf
pop
mov
push
pop
ret
cmpsl
adc
in
pandn
cmp
and
lret
out
lcall
int3
adc
or
mov
pop
push
dec
add
pushf
push
mov
xchg
loope
pop
dec
loopne
lock
cmpl
add
pop
or
cmp
mov
pop
xor
push
jmp
add
push
pop
in
clc
test
and
push
repnz
or
ret
mov
dec
adc
mov
adc
adc
fcomp
test
mov
push
out
fstpt
and
scas
adc
mov
inc
lods
nop
jo
or
roll
notb
hlt
das
push
pop
push
das
xor
divl
pop
push
push
jmp
popa
pop
jbe
shr
and
push
xor
xchg
push
push
out
mov
mov
push
in
inc
add
mov
xor
jl
rcll
push
push
push
dec
inc
or
push
add
or
mov
mov
mov
push
outsl
popl
aaa
in
test
or
xchg
andl
adc
dec
mov
ljmp
cmpsb
lods
and
xchg
xor
xchg
movsb
and
sub
add
add
inc
push
mov
jle
loop
xchg
add
add
and
push
call
inc
or
movsl
loope
fistps
mov
mov
dec
je
mov
insl
add
mov
mov
pop
icebp
xor
mov
xor
mov
ret
mov
pushf
in
jbe
and
dec
push
iret
or
pop
adcl
push
mov
insl
aaa
shlb
call
call
movsb
xchg
cmp
orl
loopne
test
or
mov
stc
adc
sub
leave
inc
insb
pusha
stos
test
add
lock
nop
push
push
pushf
add
adc
jb
dec
jg
dec
shrl
mov
xor
enter
push
js
mov
test
push
pop
push
and
in
xchg
push
add
mov
lock
mov
pop
je
cmp
fs
lea
imul
xchg
or
adc
pop
mov
popa
shll
adcl
add
pop
je
clc
loope
or
cwtl
and
loope
fs
add
popa
jno
xlat
lcall
aas
xchg
mov
movsl
xchg
mov
sub
call
cld
clc
push
ss
inc
cmp
add
enter
lret
loop
mov
mov
jge
cmp
xor
push
inc
or
jmp
test
push
imul
mov
aam
jbe
or
int3
inc
call
dec
cmpl
rolb
mov
mov
cmpps
mov
cmp
and
mov
fldenv
jbe
cmpsb
mov
jge
push
shl
fiaddl
sub
and
add
lret
cmc
or
dec
jae
push
xchg
mov
fisubrl
xchg
pop
test
or
nop
mov
push
add
sub
pop
inc
jns
lret
inc
pop
push
adc
push
mov
jmp
add
and
cmp
cld
sub
lret
pusha
xor
jb
add
pop
or
shll
cwtl
rorb
lock
or
xchg
sbb
sub
popf
sarb
test
push
lock
push
jae
lds
dec
and
test
cmc
push
adc
jnp
fldenv
push
lea
hlt
push
and
cmp
pop
or
sub
int
add
pop
or
or
jb
adc
pop
lret
sbb
cmp
push
or
adc
xchg
mov
mov
js
cltd
inc
insl
pop
xchg
sgdtl
add
je
mov
pop
sub
test
push
sahf
inc
xchg
inc
adc
pop
cmp
mov
cmp
add
lds
mov
add
mov
and
aam
jns
add
jae
adc
nop
add
cmp
call
enter
mov
shlb
mov
in
or
je
js
rorb
inc
xlat
push
bound
or
pop
add
sbb
push
cmp
jle
sahf
rclb
add
popa
xchg
lret
xor
lods
cli
in
or
mov
shl
add
dec
clc
fsubrs
es
into
test
push
or
in
lods
and
int3
test
loopne
int3
sbb
cmpsl
inc
sub
call
push
mov
and
pop
out
clc
push
stc
push
push
and
cmpsl
dec
js
das
pop
inc
rolb
js
jae
jns
xor
dec
hlt
cmpsb
mov
adcb
sub
mov
call
int3
cmp
add
or
push
adc
js
cmp
add
in
or
mov
int3
inc
or
out
popf
add
imul
push
or
add
and
mov
xor
mov
pusha
adc
sbb
dec
sub
or
sub
push
mov
dec
rcll
xchg
adc
shlb
push
mov
sbb
push
xor
or
mov
cmpsl
inc
jmp
ljmp
je
sub
adc
out
xchg
inc
or
cmp
pop
xchg
fs
push
fs
pop
jo
imul
sahf
xlat
pop
aaa
and
sub
sbbb
xor
cmp
mov
loop
cwtl
pushf
pop
pop
nop
jecxz
cmp
push
add
enter
or
mov
xchg
and
dec
mov
pop
or
add
shlb
clc
dec
push
stc
js
jo
adc
jo
add
xor
inc
dec
scas
ja
js
adc
mov
into
rorb
push
shl
jmp
cmp
add
movsl
sub
push
push
test
mov
testb
jo
jl
pop
mov
jne
pop
dec
stos
fisubrs
bound
mov
pusha
xchg
pop
push
in
lock
idivb
es
mov
popf
pop
xor
mov
push
push
movsl
add
push
add
mov
lods
std
or
add
and
fisttpl
enter
mov
push
xchg
lret
xchg
ret
repnz
mov
mull
int
fdivs
xor
test
inc
or
imul
inc
fisttps
push
sbb
mov
sahf
ljmp
push
andb
xchg
dec
jno
loopne
and
in
and
sub
out
mov
cmp
pop
sbb
movsl
stos
lock
je
or
sahf
gs
jne
js
push
loopne
in
fs
push
push
sbb
push
je
push
add
sub
loopne
xor
adc
into
in
fwait
push
pop
inc
xchg
call
dec
xor
fdivr
test
jo
mov
clc
es
mov
mov
mov
je
popf
mov
rclb
cmp
fcompl
call
in
mov
sub
ss
and
out
jl
test
sub
enter
or
les
shll
dec
pop
or
cli
push
ret
mov
mov
je
push
mov
movzbl
ss
sbb
out
or
add
adc
outsl
cmp
jge
or
scas
ljmp
ret
pop
mov
or
test
or
dec
pop
push
inc
sub
mov
adc
xorl
or
jnp
inc
or
ja
outsl
loop
inc
or
icebp
or
sub
push
insb
add
or
fsubl
popa
cmp
mov
xor
xchg
push
xchg
in
xor
test
loopne
cmp
sbb
je
push
movsb
test
dec
push
loop
pop
push
sbb
and
call
push
dec
xlat
hlt
or
mov
or
and
bound
hlt
or
jecxz
dec
pop
aaa
fstl
fiaddl
test
xchg
mov
or
and
jne
push
lea
or
adc
mov
fidivrl
in
and
cmpl
adc
mov
adc
or
or
test
mov
ds
mov
cld
xorl
pop
pop
mov
and
sbb
adc
std
mov
lea
sarb
js
js
pushf
fxam
aaa
idivl
mov
lock
js
inc
int
adc
gs
push
pop
sbb
xor
or
sbb
adc
nop
scas
push
mov
insb
orb
je
fs
or
movl
ljmp
push
out
sti
pop
mov
lea
stos
mov
inc
rolb
nop
fmulp
add
mov
xor
test
mov
mov
loop
fcmovnbe
cmp
popf
adc
and
pop
es
mov
int
out
jle
incl
sub
pushl
out
fldl
pop
cmpb
es
xchg
or
pop
and
push
enter
jns
pushf
outsb
and
loop
jns
fiadds
ss
push
cwtl
sub
cmp
xor
jno
add
pop
outsl
push
xchg
divb
cmp
cmpsb
mov
stos
in
adc
pop
pop
pusha
lret
cmp
adc
jbe
jne
rcrl
jne
mov
cwtl
xchg
clc
mov
mov
ja
xorb
pop
jns
stos
push
cld
cld
xor
sbbb
inc
xchg
mov
mov
mov
inc
les
adc
cmp
inc
movzbl
and
pop
jle
or
lret
inc
mov
inc
mov
fsubrs
lea
push
sti
and
adc
je
xorb
sub
adc
and
mov
cmp
jbe
enter
popl
adc
mov
jbe
fimuls
xor
and
pushl
pop
pusha
ja
testl
mov
xor
in
sbb
lods
adc
jo
jmp
push
pusha
pop
lcall
xchg
xlat
or
notl
lods
pop
adc
rcll
pop
or
punpckldq
xor
outsb
test
mov
sbb
jnp
nop
inc
test
jl
push
out
in
icebp
jbe
test
in
add
mov
cmc
jp
push
mov
push
imul
push
xchg
pop
paddq
lret
imul
outsl
lods
mov
movb
test
test
test
or
test
lea
fwait
leave
lock
adc
lock
inc
adc
or
xchg
pop
je
or
adc
popa
les
test
push
stos
inc
in
mov
push
adc
hlt
test
mov
xchg
pop
rol
mov
enter
add
daa
repz
mov
inc
add
arpl
add
sbb
push
fsubrs
sub
movsl
fdivl
jg
lods
dec
push
bound
iret
push
and
popa
les
pop
dec
xchg
mov
push
mov
insl
dec
or
add
inc
je
mov
fwait
mov
push
fwait
adc
add
loopne
dec
cmp
and
jae
loopne
add
loopne
cmp
fcomps
jg
adc
add
push
shrl
je
call
sub
adc
in
mov
fmull
in
cld
dec
xor
xor
xchg
nop
push
ret
push
pop
pop
xchg
addr16
ljmp
ja
mov
mov
pop
sbb
stos
add
test
dec
sbb
es
pop
sbb
lahf
mov
jne
push
pop
or
dec
dec
movsb
pop
imul
jne
dec
dec
out
ret
jns
sub
push
sub
pushf
nop
xlat
jne
fists
scas
andb
mov
push
mov
or
cmp
outsb
sbb
adc
mov
in
outsb
cs
or
pop
iret
xchg
adc
xor
xchg
sbb
xor
jp
lock
mov
or
shrb
sbb
adc
pop
daa
mov
xor
aas
xor
pop
pop
add
cmp
sub
rcl
test
movsl
inc
mov
imul
xor
das
int3
push
mov
push
sbb
ret
bound
scas
cli
inc
std
sub
mov
mov
iret
data16
fdivr
popf
inc
addr16
cmp
jg
mov
fwait
mov
test
or
into
pop
or
repnz
jmp
mov
insl
jle
pop
and
aaa
sub
popa
add
pushf
jge
fildl
jg
adc
shrb
adc
mov
push
pushf
xor
sti
imul
lods
data16
bound
shll
inc
inc
jmp
inc
fs
xchg
jb,pn
sub
pop
inc
cmp
and
icebp
add
mov
adc
add
rorb
insb
xor
sub
or
sub
clc
jle
jp
mov
jmp
arpl
cmpsl
mov
mov
add
add
fstl
mov
push
or
dec
je
sahf
jge
mov
mov
sub
xor
orb
cs
fmull
mov
dec
mov
test
dec
and
xchg
xchg
xchg
cmpsl
dec
loope
aaa
aam
pop
in
mov
inc
cli
ss
in
and
dec
sbb
xor
ror
mov
fcoms
sub
inc
ljmp
adc
pusha
and
mov
xor
mov
jne
out
or
fsubrl
xchg
rcll
push
xor
add
mov
push
rorb
adc
sub
and
stc
rol
pop
les
enter
fwait
mov
and
adc
test
rcl
sub
aam
insb
and
push
in
pop
les
je
or
mov
sub
push
nop
fisubl
cld
je
inc
add
sbb
je
dec
fwait
xchg
jmp
jle
push
fcomps
hlt
sub
enter
mov
nop
xchg
xor
fisttpl
es
cltd
push
mov
enter
popf
sti
fnstsw
xor
sub
push
push
mov
adc
or
mov
mov
and
jge
movb
sbb
addl
inc
inc
jl,pn
jge
dec
sub
inc
add
movsl
and
clc
mov
sub
test
lret
push
cmpsb
leave
xor
clc
lahf
je
sbbb
sub
in
adc
das
dec
jne
ljmp
xor
test
gs
pop
cmp
test
adc
pusha
or
push
int3
insb
icebp
push
mov
xlat
jnp
adc
and
test
repnz
addl
sub
sub
pop
push
dec
mov
data16
in
dec
mov
sub
push
mov
ret
jne
jbe
inc
cli
xchg
orb
insb
inc
jle
sbb
xor
imul
jle
test
push
nop
adc
arpl
mov
ljmp
mov
cmp
mov
loopne
lcall
lret
or
rorb
add
leave
fsubl
sar
rol
out
or
cmp
test
xor
jb
lock
pushf
push
not
dec
sbb
loop
test
mov
movl
fmull
cmp
jbe
add
jmp
add
mov
sbb
movsl
xor
or
out
and
enter
data16
add
ja
cmc
xor
insl
test
dec
inc
or
fwait
stc
lahf
ss
or
sbb
or
add
pop
faddl
adc
lcall
push
call
push
ljmp
push
add
sub
cmp
and
test
or
test
sbb
out
jp
sbb
je
in
and
adc
sbb
mov
int
or
jb
push
or
lock
outsl
loopne
enter
xor
xor
xchg
push
or
fisubrs
and
or
aam
movsb
repnz
or
insl
enter
or
xchg
ret
dec
mov
sub
add
and
mov
add
and
fucomi
push
rcrb
shrl
or
out
leave
add
add
or
pop
cli
cltd
dec
addb
iret
test
dec
movsl
ja
sbb
and
loope
mov
mov
cmc
or
test
cmp
xor
cmp
sbb
arpl
cmpb
mov
add
sbb
and
add
adc
adc
add
add
shlb
insb
add
leave
mov
push
lods
fimuls
sbb
sub
dec
pop
pop
add
or
pop
mov
lock
or
push
push
add
and
ret
push
cmovg
jmp
and
xchg
adc
cmp
sub
jns
and
adc
and
call
dec
add
and
xchg
inc
xchg
push
or
push
cmp
xchg
mov
push
scas
pop
add
pop
andb
jo
cmp
and
or
nop
xchg
sub
or
inc
aas
and
mov
push
sub
inc
or
mov
or
filds
mov
shlb
sub
push
jb
or
mov
mov
das
dec
push
adc
ljmp
test
push
xor
das
xor
icebp
xor
int3
and
dec
mov
popa
popf
cltd
or
pop
mov
or
mov
nop
cwtl
push
fadd
pushf
pop
inc
jb
and
mov
ret
adc
pop
xchg
xor
daa
xchg
adc
mov
push
cmp
clc
and
ret
or
jl
leave
fisttps
inc
adc
cmp
lds
mov
xchg
inc
pusha
mov
push
and
adc
js
sbb
ds
les
add
sbb
pop
push
outsb
mov
cmp
test
push
rorl
popf
mov
mov
in
and
and
dec
xchg
cmc
test
je
push
inc
cmp
add
sbb
xorl
ljmp
inc
andb
lret
fistpll
xchg
xor
mov
inc
cmp
mov
nop
daa
cltd
mov
xchg
dec
inc
and
outsb
sbb
and
and
sub
mov
insl
movsb
test
lret
into
pop
test
adcb
lods
dec
nop
cmpxchg
in
mov
pushf
inc
mov
xor
js
mov
mov
out
mov
pop
or
lcall
xor
int3
sarb
mov
adc
sub
lea
flds
jge
addr16
add
cmpb
pop
adc
call
push
and
dec
lock
push
push
or
gs
cmp
add
push
ds
sub
add
rorl
mov
in
outsb
mov
push
add
lcall
pop
add
and
dec
mov
push
mov
ds
fs
add
add
push
ja
push
pop
cmovp
adc
fwait
add
sti
push
jecxz
cmp
mov
imul
mov
pop
jb
leave
popa
and
and
aaa
nop
fwait
dec
int3
jb
mov
hlt
push
xorl
mov
and
jo
and
sub
pop
mov
cmp
dec
mov
xchg
sahf
sub
sarb
mov
das
push
lds
inc
rcrb
mov
mov
insb
outsl
sahf
or
adcl
mov
mov
imul
and
mov
mov
test
xor
cmp
push
add
xchg
mov
inc
adc
and
pushl
push
ret
push
adc
xor
pop
outsb
and
or
movl
dec
jnp
inc
xchg
outsb
call
inc
xchg
js
shlb
insl
mov
pop
sbb
dec
ljmp
test
pop
dec
pop
fsubrs
aas
mov
push
adc
xchg
adc
movsl
jno
cmp
aas
cmp
je
jp
movsl
or
or
inc
dec
and
cmp
je
jbe
inc
mov
jge
arpl
je
sbb
inc
cld
or
and
shlb
imul
test
jb
test
cmpsl
sub
nop
dec
inc
into
mov
adcb
pop
add
nop
cmpsl
jno
movsl
push
in
push
icebp
stos
sarl
mov
xor
imul
adc
test
or
pop
push
insb
fsubr
and
pop
es
push
fstpl
jnp
and
jb
jecxz
call
mov
add
inc
call
adc
dec
rcr
popa
addb
in
cmp
inc
movsb
cwtl
popa
mov
xchg
les
or
push
rcrb
in
scas
inc
pushf
push
pop
sbb
iret
loopne
inc
push
push
mov
rorl
adc
pusha
rolb
or
adc
xor
xor
cmp
jbe
push
fcomp
fnstsw
movsb
decl
je
pop
int3
fldl
pop
fsubr
pop
faddp
lock
ljmp
and
adc
sub
repz
test
sbb
flds
push
cmp
mov
rcrb
shrb
jmp
inc
adc
push
cmp
add
inc
aas
lock
hlt
orl
lods
add
push
push
outsb
mov
lret
inc
test
push
add
push
enter
bound
sbb
sbb
das
sub
js
push
adc
dec
jmp
and
sub
fldl
mov
add
sub
insb
das
add
adc
sub
out
lods
xlat
or
imul
dec
cmpl
adc
test
ss
pop
adc
xchg
scas
jmp
pop
stos
add
push
jb
js
cmpsb
daa
stos
sbb
adcl
dec
add
inc
adc
cmp
xor
adc
or
loop
mov
decl
mov
xor
pushf
or
dec
xor
in
or
and
push
jecxz
mov
pcmpeqw
cmpsl
addl
or
push
xor
mov
jp
push
movsb
sbb
push
pop
mov
or
mov
loope
mov
sub
pop
scas
insl
loopne
add
fisttps
js
mov
jmp
test
ds
repz
lcall
iret
nop
mov
movsb
popf
ror
add
test
je
xchg
push
mov
mov
pop
inc
add
popa
adc
xchg
ljmp
mov
and
arpl
mov
pop
sub
pminub
xchg
sub
loopne
pop
out
dec
or
pop
scas
add
jnp
stos
add
popa
adc
imul
xor
mov
orb
xor
test
and
mov
inc
cld
sub
inc
push
orb
cmpb
push
adc
je
adc
dec
or
xchg
adc
push
pop
repnz
in
add
pop
cmc
or
inc
loopne
mov
mov
or
or
movb
xor
inc
adc
popa
xor
push
or
push
sub
pop
add
push
idivl
push
out
call
lock
mov
add
lret
jge
jae
cmp
int3
addr16
add
insb
dec
lcall
inc
int3
mov
movl
mov
inc
mov
or
cmp
es
dec
cmp
add
sub
les
scas
outsl
xor
xorb
hlt
dec
movsb
flds
sbb
inc
push
loop
dec
or
out
jmp
dec
sub
mov
add
sbb
and
push
xor
dec
jo
hlt
pop
pushw
push
fisubrl
imul
add
push
aam
push
imul
pop
sarl
lcall
adc
jb
mov
inc
mov
aam
ret
aas
jl
mov
idivl
add
imul
xchg
orb
mov
add
je
push
inc
dec
and
adc
push
shl
jne
sbb
push
or
adc
and
cltd
jmp
sbb
sub
movsl
jmp
inc
mov
cmp
stos
adc
dec
and
push
mov
adc
adc
dec
add
fs
js
mov
loopne
inc
daa
cmp
pusha
enter
push
xor
stc
data16
in
add
je
push
das
push
push
stc
pusha
or
std
andb
jns
sub
sbb
mov
sbb
mov
cmp
cmp
pop
adc
push
xorb
add
sbb
stc
call
test
push
cltd
add
jo
or
adc
jo
movl
int3
call
mov
dec
inc
push
fwait
add
clc
mov
lahf
enter
ret
shr
xchg
add
nop
and
testb
or
test
lea
add
movsb
movsb
outsb
and
jge
in
lods
add
adc
pop
xchg
add
iret
mov
iret
xor
push
shll
aam
jo
test
or
bound
or
pusha
loopne
andb
rclb
push
popf
and
add
add
mov
out
or
sbb
loop
in
or
mov
pop
xor
int
pop
mov
adc
adc
mov
jge
imul
push
lock
ret
adc
push
cmc
ret
mov
out
pop
mov
push
rcrl
cmp
lods
adc
mov
shlb
mov
dec
leave
rcl
lods
adc
add
test
fstp
cmc
cmp
add
sub
or
pop
cmp
fdivs
addl
add
lret
mov
cmp
das
and
adc
lea
shlb
outsl
orl
mov
ror
ljmp
xor
shr
xor
es
mov
rol
xor
shr
xor
add
add
dec
add
mov
shrb
fs
or
jae
or
and
not
and
xor
add
add
aam
sub
push
mov
add
stc
lcall
into
or
testl
jge
xor
and
and
xchg
push
aam
xchg
mov
xor
xchg
lret
ljmp
sub
fmull
pop
push
mov
and
not
ret
rcl
add
add
push
ss
add
call
fsubr
rcl
add
call
jl
jb
dec
xor
ljmp
mov
shr
add
push
push
mov
fsub
imul
push
nop
cmpsb
aam
in
shl
adc
mov
in
push
cmp
bound
push
or
enter
pop
mov
pop
aaa
mov
xor
fadd
cs
call
push
xor
cwtl
loopne
in
inc
sub
call
adcb
sub
cmp
aam
pop
xchg
sbbl
cmp
and
and
add
sti
in
in
mov
clc
and
and
out
iret
or
dec
or
add
and
xor
add
popa
pop
push
test
cmp
or
mov
pop
subl
push
jo
ficoms
add
mov
sbb
fucomip
loop
dec
adc
push
loop
mov
fimull
mov
filds
cltd
and
fadds
pop
jbe
xor
scas
push
call
lretw
mov
clc
jp
push
and
add
gs
fdivs
add
push
cmp
test
clc
popa
jle
sub
inc
mov
adc
mov
xchg
clc
and
popf
push
jo
cli
stos
adcb
aam
aaa
cmp
lcall
call
in
sub
or
add
mov
and
jge
rclb
shlb
rorb
shll
sub
dec
loopne
add
xor
xchg
cld
jo
add
push
nop
add
sahf
dec
push
and
and
push
rorb
dec
xor
mov
jb
cmp
and
xor
cmp
add
and
push
push
pop
and
inc
stos
fs
inc
pop
xchg
out
stos
mov
push
add
xchg
aaa
xadd
or
xor
pop
inc
pop
add
pop
test
lret
adc
inc
pusha
dec
adc
xchg
movsl
mov
mov
or
mov
rolb
dec
sahf
mov
xchg
fs
cmpl
dec
fs
dec
dec
icebp
stc
ljmp
fsts
xor
xchg
inc
dec
bndldx
testb
out
shll
adc
sbb
jo
adc
in
add
and
clc
sub
sub
outsl
add
dec
sub
dec
outsl
out
pop
add
ja
clc
shrl
mov
add
incl
adc
fcomps
lea
pminsw
mov
pop
cld
sub
lds
xchg
pop
xor
and
dec
lea
sub
add
push
jmp
or
loop
adc
rorb
or
or
mov
or
dec
clc
adc
dec
loop
mov
inc
jae
mov
sub
inc
xor
orb
repnz
lea
jmp
lea
int
std
jl
sub
out
mov
add
out
mov
or
mov
dec
jne
pop
adc
dec
sub
loope
lock
idiv
pushf
xchg
sub
mov
cmp
jbe
or
lcall
ljmp
sub
push
jae
push
pop
fadds
pop
adc
stos
or
mov
scas
cli
cmpsb
ljmp
inc
fs
pop
stos
call
ror
mov
notl
add
mov
push
leave
inc
fwait
adcl
movsl
inc
cmp
test
out
push
sub
daa
xchg
out
push
inc
add
mov
add
dec
lea
add
sub
stc
stc
mov
shlb
ss
push
lods
in
cltd
add
aam
dec
sbb
cmc
aas
push
insb
or
and
and
mov
adc
inc
jmp
mov
or
xor
sub
adc
or
jo
inc
pop
loope
adc
cmpsb
push
stos
add
push
adc
sbb
addl
stos
jns
sub
mov
xchg
pop
cs
or
jmp
and
inc
flds
test
test
xchg
or
addr16
add
dec
add
xor
shr
inc
or
cmp
push
push
jns
loope
inc
sub
fs
sbb
faddl
adc
xchg
test
test
ret
xor
or
repz
ljmp
xor
roll
sub
and
dec
and
xchg
pop
xchg
sub
ret
dec
or
iret
jnp
adc
and
sub
add
dec
adc
mov
fwait
mov
andb
clc
or
rclb
push
jg
xchg
jnp
push
mov
clc
lock
adc
sbb
mov
cmp
mov
cmp
sub
cmp
cmpsl
lods
dec
scas
pmaddwd
notb
sub
std
add
daa
mov
xchg
loopne
xor
xchg
fildl
and
jle
es
rorb
push
faddl
pop
lods
aad
push
pop
push
pop
es
enter
loope
push
inc
xchg
jno
and
mov
emms
movsb
loopne
cld
adc
mov
ret
add
xor
notb
mov
mov
cmp
add
sbb
int3
adc
xchg
xor
mov
xor
or
and
push
nop
bound
pop
inc
cmpsb
fidivrs
push
mov
push
inc
pusha
test
popa
add
pushf
rcrb
push
jmp
mov
test
lea
cmpsl
in
add
mov
and
bound
lock
addl
and
jae
push
movsb
fisttps
cmp
test
push
hlt
lahf
add
pop
jge,pt
jns
test
adc
movsl
push
xchg
pinsrw
es
or
or
testb
jbe
and
pop
push
mov
and
imul
pop
inc
xchg
push
inc
loopne
inc
pop
inc
mov
adc
test
jmp
fstpl
cmp
jne
push
and
pop
adcl
mov
imul
out
add
mov
pop
add
add
cld
sub
movsb
rorl
lock
mov
mov
enter
mov
andl
cs
stc
ss
fcomp
cmp
push
push
xchg
xor
and
mov
mov
and
je
adc
jbe
adc
sub
push
mov
inc
add
cmp
cmp
xchg
pushf
es
and
outsb
insb
or
xor
inc
movsl
pop
push
ret
rorb
js
inc
in
in
cmp
xchg
lods
and
mov
sbb
dec
dec
push
dec
out
jge
int
gs
xor
and
iret
lret
out
cs
add
enter
cli
scas
add
jbe
mov
sbb
cld
dec
dec
mov
repnz
scas
ret
sbb
pop
mov
sub
cmp
mov
jns
cs
mov
or
and
cmp
addl
pcmpgtd
push
cmp
sbb
or
mov
dec
in
xchg
repnz
sbb
inc
add
mov
test
in
mov
sbb
fsts
cli
sti
jge
or
push
push
nop
mov
or
jo
mov
dec
push
adc
cmp
jmp
pop
dec
aas
xchg
aam
and
push
je
adc
stos
loopne
jbe
repz
or
sbb
repz
mov
xchg
fidivl
lods
ds
movsl
jecxz
dec
pop
mov
push
insl
or
loope
xor
xchg
xor
mov
inc
sti
cmpl
idivb
mull
aam
add
mov
int3
popa
jl
jmp
in
push
jne
cmpsb
cmpsl
mov
inc
xchg
push
and
sarl
mov
push
mov
mov
mov
inc
sub
push
subb
das
inc
and
jne
push
add
mov
lcall
and
pop
mov
adc
or
sbb
cmpsl
inc
inc
push
insl
pop
nop
add
inc
mov
in
pop
lods
mov
jb
ss
sub
cmp
pop
inc
or
lret
jbe
sub
add
jne
mov
pop
cli
push
int3
data16
ljmp
loope
sub
jbe
shlb
jmp
ds
dec
mov
mov
add
push
cmc
dec
bound
mov
dec
stos
negl
add
inc
push
push
scas
loope
cli
adc
pop
pushl
movsb
pop
sub
pushf
push
cwtl
xorl
lret
add
jmp
data16
movb
push
sub
sub
lock
hlt
sub
clc
push
xor
and
scas
push
les
sub
mov
ljmp
or
sub
push
and
inc
mov
xchg
add
xchg
add
sarl
sbb
xor
dec
add
adc
xchg
and
add
sti
adc
mov
inc
lea
inc
cld
loop
push
mov
push
dec
xor
insb
pop
jb
lea
cmp
cmp
add
bound
and
push
adc
dec
inc
inc
jl
adc
pop
inc
aaa
inc
push
mov
or
stc
ja
ja
add
push
cmp
jb
mov
push
mov
or
push
sub
jns
jp
or
mov
inc
outsb
sahf
push
mov
and
push
lret
or
mov
push
jmp
mov
mov
add
int3
inc
jne
scas
mov
jno
int
mov
cmp
sub
dec
lahf
mov
dec
xor
mov
scas
add
push
push
pop
cmpsl
insb
mov
dec
xor
aas
cmp
jmp
lods
xchg
mov
cmpsb
mov
leave
mov
add
pop
ret
add
add
xchg
lock
shrb
stc
mov
shrb
adc
mov
inc
cmp
sbb
cmp
mov
add
xorb
mov
push
loopne
sub
ret
ds
movzbl
pop
cwtl
xor
mov
add
aaa
xchg
mov
sub
out
incb
rorl
in
mov
dec
pop
out
adc
xor
pop
push
dec
xchg
add
imul
sbb
incl
add
jge
je
fisubrs
jg
or
pop
push
dec
rclb
add
and
push
inc
cmp
jl
pop
cs
pop
aam
or
aaa
ret
push
xor
mov
sahf
add
aam
xchg
xor
test
imul
and
sbbl
sbb
jecxz
push
ss
xchg
add
int3
or
add
mov
popa
push
cld
sti
or
push
jl
flds
bound
mov
inc
jbe
loop
jbe
ret
mov
fldl
add
les
fiaddl
and
jp
sbb
repz
ljmp
add
es
cmp
xchg
sbb
dec
bound
comiss
jbe
inc
pop
movsb
xchg
adc
pop
fs
dec
repnz
xor
mov
ret
jo
loop
mov
clc
es
jb
in
mov
call
inc
loope
and
add
mov
enter
shl
add
loope
shl
xor
mov
mov
clc
pop
sub
mov
mov
mov
test
rclb
pusha
sub
jge
pusha
pop
inc
mov
fidivrs
stos
add
call
cmc
push
fwait
loope
shl
fisubrs
dec
les
sub
pushl
add
lock
sub
dec
xchg
repz
loop
add
sbb
add
or
inc
jb
lock
push
adc
bnd
mov
add
push
call
push
jo
mov
sbb
mov
xor
jmp
fmull
ret
cmpsl
mov
xor
sub
inc
fwait
lods
adc
and
icebp
test
mov
shlb
jle
push
xor
jl
imul
stos
xlat
ss
add
fsubrl
xor
scas
pop
testb
icebp
cmp
inc
push
es
sub
aam
cmp
sbb
adc
test
and
push
xchg
divb
or
mov
xchg
xchg
add
push
jo
sub
and
and
xchg
dec
sub
jo
stos
add
test
or
inc
add
or
sbb
xchg
in
mov
ficoms
and
lods
lcall
jo
pop
and
popa
movsl
cvtps2pd
mov
dec
mov
loop
or
xchg
inc
subl
and
jo
inc
xor
test
xor
and
inc
adc
fwait
js
mov
push
out
ret
jbe
fdivs
adc
push
and
enter
pop
push
pop
sbb
out
mov
or
jmp
push
js
test
testl
cmp
mov
jmp
add
popf
push
imul
or
lahf
or
out
cmp
or
dec
pop
stos
add
push
dec
hlt
pop
push
push
sub
adc
in
jno
jecxz
add
fidivrl
loopne
cmp
pop
or
lods
in
aam
xchg
and
or
push
sbb
sbb
pop
int3
xchg
fbstp
loope
loop
hlt
add
inc
jge
or
inc
mov
mov
and
xchg
xor
xchg
or
loopne
nop
mulb
push
sbb
mov
popa
jb
dec
pop
and
adc
pop
mov
sub
ret
sbb
pop
jmp
rorb
jecxz
xor
sub
cmp
sbb
sbb
inc
cltd
rclb
adcb
mov
stc
cmc
insl
imul
sub
clc
push
data16
or
add
mov
fildl
jae
sti
push
pop
or
fisttpll
add
sbb
sub
push
inc
mov
loope
mov
stos
jno
push
push
push
xor
into
repz
mov
inc
or
mov
and
jmp
inc
mov
adc
aam
adc
ja
aam
push
gs
adc
out
cwtl
js
mov
out
es
and
clc
or
xor
mov
add
jge
jmp
mov
or
sbb
loope
loope
mov
mov
inc
push
inc
xor
je
xor
inc
adc
or
rorl
clc
xor
adc
je
jle
lahf
inc
mov
sub
push
dec
in
push
das
ret
cwtl
pop
sbb
addb
insl
icebp
add
cmp
push
packssdw
arpl
lods
loopne
push
out
pop
lea
dec
xchg
mov
pop
push
xor
shr
popf
push
push
push
adc
xchg
aaa
cwtl
push
es
cmp
bound
hlt
push
adc
faddl
push
cmpsl
pop
adc
fcomps
ficoms
test
or
in
pop
xchg
add
pop
sbb
shl
out
mov
sub
hlt
sbb
xchg
xor
xchg
add
push
inc
add
shll
dec
inc
shrb
insl
pop
mov
and
sbb
cmp
mov
jecxz
jle
shlb
mov
testb
movsb
pop
inc
cmp
loopne
jmp
in
adc
pop
dec
jl
daa
sub
jne
push
inc
outsb
jb
popf
sub
mov
dec
sub
adc
stos
jno
jmp
or
add
popf
push
add
sub
cwtl
shlb
dec
insb
mov
or
cld
test
insb
inc
or
or
adc
fmull
inc
jb
sbb
add
cmp
sub
cltd
sarb
or
nop
stos
jmp
inc
jo
jne
addl
into
or
add
out
and
insb
js
xchg
push
push
lock
or
xchg
adc
add
sbb
lahf
sub
or
ret
mov
and
movsb
mov
add
xor
mov
inc
cmp
mov
and
out
jo
aas
subb
imul
dec
push
decl
hlt
nop
or
mov
testb
je
cmp
fwait
fwait
shrb
push
add
push
add
push
cmp
sub
mov
add
in
sbb
aam
adc
add
add
add
sub
fldcw
cwtl
dec
xor
mov
push
sbb
dec
adc
adc
pop
jl
js
inc
loop
subl
pop
mov
push
add
sub
jae
dec
and
orl
jecxz
mov
insb
dec
ret
adcl
in
push
jl
xor
jg
add
sbb
test
dec
hlt
add
pusha
or
mov
clc
test
fsubrs
cmp
insl
testl
sub
xlat
mov
pop
xor
movsl
popa
insl
loop
hlt
push
push
mov
insb
data16
sbb
push
icebp
inc
mov
mov
or
cmpb
cmp
rorl
or
ss
or
add
push
push
sbb
add
pop
xchg
lods
jmp
pop
cmp
push
cltd
shll
xlat
pop
mov
fistl
scas
rcrl
std
add
mov
aaa
xlat
ds
or
testb
or
fisttpll
add
repnz
or
inc
fiaddl
pop
cmpb
leave
sub
lea
push
sbb
mov
sbb
dec
adc
enter
inc
add
cmp
jne
data16
andb
lds
or
mov
test
add
pusha
outsl
clc
xor
lret
jmp
push
dec
and
test
or
aas
fs
imulb
shll
adc
hlt
push
outsl
loopne
dec
aaa
into
cmp
std
cwtl
nop
inc
adc
xchg
add
push
sbb
fstpt
push
fsts
pop
aas
xor
repnz
dec
jb
fdivs
cmp
scas
push
je
jne
push
xchg
sbb
mov
repnz
subb
jl
adc
jb
lahf
fcomi
jae
imul
les
loopne
xchg
shll
es
or
push
test
shl
cmp
bound
push
or
mov
inc
pop
and
push
add
sbb
pop
dec
stos
sbb
dec
jg
fdivr
sub
cmp
pop
lcall
and
sub
sahf
mov
cmp
popf
adc
hlt
jo
mov
rcrl
push
or
jg
jo
or
pop
push
or
or
fwait
pusha
fwait
mov
inc
mov
and
xlat
fildl
mov
cmp
int
cmp
and
or
xor
aaa
out
jmp
dec
roll
mov
icebp
shld
and
add
cmpsb
aam
and
add
and
xchg
xchg
mov
mov
add
adc
ret
test
add
andl
mov
push
lcall
xor
jmp
mov
jb
xor
push
scas
mov
inc
adc
push
and
adc
fisttps
call
push
ret
icebp
push
scas
cmp
push
movsl
and
push
lods
ret
clc
pop
or
or
or
out
or
pusha
sarb
or
sbb
and
push
filds
or
adcb
test
add
aam
adc
pushf
add
or
adc
in
divb
mov
push
in
mov
cmp
insl
loopne
ljmp
mov
adc
sub
enter
adc
mov
add
add
int
cmp
sub
aad
das
cli
adc
pop
mov
add
push
sbb
fistpl
add
sbb
test
int3
and
scas
xchg
adc
sub
mov
cmp
pop
push
das
add
mov
dec
imul
or
pop
pop
pop
mov
push
xchg
aad
xchg
sub
push
rol
xchg
add
in
or
mov
adc
or
adc
je
leave
and
dec
insl
jmp
clc
and
lods
shr
cmpps
sub
or
and
pop
arpl
adc
adc
add
sbb
xor
xchg
dec
ja
scas
dec
shr
in
jmp
pop
push
push
les
push
shlb
add
pop
pop
clc
jecxz
and
stos
or
test
mov
adc
cmp
and
jae
adc
push
leave
js
xor
das
mov
or
fisubrs
out
add
jbe
shll
sub
mov
push
ds
jae
dec
loopne
add
adc
add
cmovge
or
cmpl
xor
sti
cmp
jbe
stos
xor
repz
mov
cmp
mov
aad
aaa
fiadds
push
flds
jmp
push
xchg
movsl
inc
loop
pop
xor
sbbl
or
pop
ret
icebp
cmp
ss
addl
sbb
sbb
enter
push
adc
xor
test
pop
dec
jnp
sbb
popf
or
insl
adc
dec
pop
imul
out
jb
enter
inc
iret
jmp
in
dec
xchg
and
xchg
push
push
pop
inc
test
adc
sub
sarb
adc
push
mov
mov
lods
push
mov
loope
lahf
ret
and
mov
mov
jl
jl
movsb
jbe
leave
sbb
jo
cmp
inc
push
inc
mov
inc
inc
les
or
or
pop
jb
cmp
inc
xorl
xchg
lahf
sbb
mov
call
push
popa
mov
or
xchg
dec
adc
sarl
jge
adc
adc
and
inc
inc
mov
xlat
jo
sbb
fstpl
mov
adc
fcoms
mov
test
lret
lods
xchg
add
and
jne
enter
fisubrs
jmp
add
push
mov
int
jmp
push
andb
repz
push
dec
pusha
add
insb
sbb
adc
push
cmpl
outsl
sbb
sbb
lahf
pop
je
jmp
or
push
dec
cmp
xchg
sub
out
sub
push
jns
add
xor
jno
pop
js
cmp
add
xchg
adc
sbb
sbb
cmp
pop
icebp
jnp
negl
imul
inc
cmp
mov
jbe
sub
sub
pusha
aaa
and
pushf
es
push
loop
jo
mov
dec
inc
pop
pop
and
pop
mov
add
or
inc
cwtl
adc
push
inc
rolb
aas
add
pop
insl
or
dec
test
xchg
and
add
js
pop
in
add
push
js
dec
sub
dec
push
adc
cmp
aad
dec
fdivrl
ret
push
jmp
aas
stos
mov
ss
jb
test
pop
in
adc
mov
xor
push
sub
adc
add
xor
mov
les
add
pop
xchg
je
xor
test
xor
jb
add
les
push
roll
mov
adc
mov
xchg
mov
shll
popf
cmp
add
orl
and
jmp
adc
daa
mov
add
push
pop
xor
cmp
ret
sbb
sub
sbb
lret
jle
and
mov
cld
shlb
add
or
jns
lods
fsubl
sbb
sub
or
inc
xchg
mov
testl
inc
js,pt
xor
aaa
dec
repz
add
shrb
mov
scas
arpl
lods
dec
int3
add
and
lods
xor
clflush
outsb
dec
cmp
and
movsb
inc
cmp
cmp
mov
and
mov
jg
fs
test
movd
pcmpeqd
fsubp
sub
push
clc
jae
xor
test
xor
cli
rcl
lret
mov
dec
mov
jl
and
dec
sbb
test
xor
jg
fsub
outsl
out
or
jnp
mov
mov
pop
and
add
adc
push
add
adc
ja
fdivrp
add
repnz
divb
mov
mov
mov
or
pop
enter
mov
jle
ret
adc
dec
sbb
push
fistpl
rorb
nop
and
fcmove
xor
loop
adc
daa
or
jb
sub
lds
push
mov
adcl
xor
aam
movsb
adc
mov
push
push
ret
jge
mov
jge
push
loop
ret
jge
pop
push
inc
lret
aad
mov
mov
mov
cwtl
inc
add
cli
dec
mov
incb
xorl
lret
cmp
jb
neg
mov
je
sub
mov
adcl
lahf
out
sbb
add
or
ficomps
push
rep
mov
dec
ljmp
add
jge
int3
add
shl
push
int
pusha
test
adc
roll
enter
fisubs
jb
push
pop
fnstenv
insl
push
pop
and
cmovs
scas
rolb
test
mov
inc
adc
sub
stc
or
rep
jmp
push
jbe
scas
sub
cmp
or
xor
xor
movsb
clc
fisubrs
es
or
and
frstor
dec
ds
push
mov
repnz
scas
adc
stc
rcrb
lea
dec
add
in
dec
movl
mov
add
repz
push
jo
push
sahf
out
aas
mov
mov
call
out
in
lock
hlt
sub
out
clc
cld
adc
lret
add
fldcw
jmp
lods
push
mov
mov
int
mov
and
or
roll
push
xchg
sub
lea
jl
cld
or
lret
or
xor
scas
enter
fimuls
divl
lret
cs
nop
inc
push
push
popf
nop
fiaddl
jl
mov
outsb
dec
gs
add
outsl
sub
push
add
nop
dec
dec
addr16
add
pop
sbb
mov
in
in
push
hlt
cld
add
cmp
ds
or
daa
das
aaa
sbb
repz
repz
adc
adc
repz
adc
or
add
xchg
dec
sub
jns
pop
insb
das
aaa
push
add
pop
setge
pusha
daa
ja
rclb
js
inc
xor
ret
jl
bndldx
call
js
test
adc
push
daa
mov
in
or
fistps
or
pop
cmc
notl
cmp
lcall
pop
ljmp
sbb
add
cmp
or
cmp
push
inc
and
mov
push
inc
inc
adc
mov
add
in
cs
jp
je
mov
dec
cld
jbe
mov
cmp
jne
mov
pop
push
movsb
sbb
xlat
mov
add
xorb
les
fs
cmp
adc
cmp
je
cmpsl
dec
mov
mov
add
inc
pop
sbb
sub
testb
and
hlt
in
sbb
into
xor
outsb
or
pusha
and
or
scas
hlt
fcomi
mov
lock
sub
in
iret
jne
xchg
nop
adc
jmp
push
aam
adc
xor
add
push
xchg
inc
insl
loope
sbb
xchg
aas
mov
jg
sbb
cmp
jmp
mov
or
adc
addb
jne
inc
cmp
xor
add
sahf
mov
or
sub
cs
adc
push
adc
push
and
jmp
and
push
das
and
js
sub
dec
or
inc
jg
scas
pop
inc
inc
cmp
cmp
cmp
or
jns
lret
adc
dec
adc
push
add
push
push
lret
dec
mov
adc
or
xchg
shrb
or
add
jp
add
add
push
mov
pusha
mov
cs
and
and
mov
inc
hlt
cmp
je
into
mov
and
adc
add
stos
add
rcr
cmp
ret
outsl
out
mov
adc
loope
ror
jle
fmulp
sbb
or
or
inc
pop
cmp
mov
out
inc
cmp
mov
ret
cmp
aam
lret
jne
pop
rolb
imul
jg
jmp
jnp
or
xchg
xor
mov
sbb
add
inc
or
pop
movl
setbe
dec
sub
inc
mov
cmp
xchg
and
rclb
mov
pop
pop
add
out
testb
inc
add
orl
mov
stc
adc
mov
ja
sub
daa
mov
inc
xor
test
aad
pushf
xchg
orl
and
and
jecxz
jge
pop
nop
jno
aaa
lahf
add
mov
daa
and
jnp
ja
and
gs
or
mov
rolb
dec
pop
jle
loop
inc
and
rolb
ja
ret
mov
movb
cwtl
xor
loopne
mov
fmuls
or
add
sbb
in
push
jmp
or
mov
inc
bnd
xchg
push
cld
jb
fstpt
lock
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lret
ret
inc
sub
lds
mov
add
inc
mov
inc
and
mov
cmp
or
in
push
cmp
pop
arpl
arpl
sbb
mov
push
dec
fildll
sub
jb
lea
mov
mov
cld
addb
jne
mov
rcr
mov
jne
decb
and
adc
or
mov
ret
adc
out
jns
push
dec
jmp
adc
jmp
std
popf
cmp
cld
cld
ret
insb
adc
adc
pop
pop
push
jb
push
push
movsb
sub
or
shr
stc
hlt
or
add
xor
negl
sbb
jle
scas
popf
shlb
sub
je
or
push
mov
testb
adcb
jle
adc
fimull
adc
pop
inc
fidivl
movsl
fcmovbe
sub
std
or
dec
scas
or
cwtl
dec
sbb
mov
shrb
cmpl
and
enter
or
or
sub
leave
shll
jne
mov
cmp
arpl
sub
and
sub
ficoms
and
decl
pop
jg
add
mov
mov
cmp
push
in
dec
sub
jno
cmp
fimuls
ret
push
push
push
add
and
xchg
js
sahf
test
repz
cmc
push
jmp
in
pop
fcoml
jle
push
mov
div
jb
cmp
pop
or
jecxz
cltd
jo
pop
pop
clc
lock
movsl
inc
mov
data16
lods
pop
sub
pop
adc
dec
sub
inc
clc
push
mov
cltd
xchg
push
or
push
sub
mov
push
xchg
test
gs
cmp
adc
mov
and
mov
pop
or
or
sub
pop
nop
dec
shr
loope
pop
cmc
loope
add
lds
add
push
mov
shl
inc
mov
adc
out
data16
or
jl
or
lods
adc
jo
mov
adc
jle
cmpl
sbb
cltd
jmp
inc
fstl
xor
decl
cmp
jne
orl
jmp
adc
jne
sub
push
or
nop
orb
loopne
pop
daa
mov
jo
adc
cmp
push
insl
rcll
fmull
mov
repnz
inc
or
and
adc
neg
sub
insb
adc
pop
jne
dec
add
loopne
push
fldl
lds
fists
sub
lret
or
test
daa
adc
dec
inc
mov
jmp
xchg
ficoms
xor
cmp
ja,pn
xor
mov
push
leave
cmp
jae
push
dec
js
xchg
scas
add
lret
and
mov
adc
sbb
lods
mov
in
es
cld
cmp
sbb
inc
cmc
mov
nop
test
jne
test
jne
push
addl
push
jnp
jne
jbe
inc
mulb
inc
xlat
xchg
add
sub
mov
mov
fcoml
test
cmp
sbb
mov
pop
push
xchg
aaa
mov
inc
push
mov
jmp
mov
movl
sub
popa
push
sub
popf
dec
mov
pop
nop
xor
popa
cld
pop
insb
loopne
data16
jge
stos
mov
shr
inc
xchg
leave
jle
stos
mov
pop
ljmp
jmp
and
aad
or
add
pop
int
or
push
xor
mov
stos
data16
jne
divb
imul
rcll
push
popa
pop
xchg
mov
and
jg
nop
cs
mov
inc
inc
jno
stos
mov
sar
dec
mov
mov
xor
hlt
or
cmp
mov
inc
mov
testb
mov
mov
mov
or
lret
jo
pop
call
dec
or
sbb
fimull
dec
push
aas
push
add
push
jmp
scas
das
inc
adc
mov
jb
push
test
stos
lock
xor
dec
out
push
mov
daa
dec
push
movsb
ret
and
jge
and
adc
mov
adc
and
fs
add
pop
mov
inc
dec
ret
pop
add
sbb
push
xchg
adc
add
lock
sub
sub
or
pop
jae
fwait
or
xor
dec
adc
sahf
mov
mov
sbb
push
fsubrl
xor
adc
repz
add
push
js
pop
and
mov
orl
mov
je
int3
stc
sub
in
push
adc
popf
jbe
inc
cmp
in
jmp
pop
fidivs
adc
cmp
lcall
push
je
push
mov
xlat
into
lcall
das
xor
mov
adc
jg
mov
mov
ja
in
xlat
jne
push
out
cmp
in
pop
or
test
rep
xchg
adc
pop
pop
jmp
pop
popa
sti
xor
lea
jno
xchg
adc
nop
push
push
addb
inc
mov
inc
jb
jb
outsl
dec
or
xor
loopne
int
iret
jae
push
mov
xchg
pop
add
xchg
adc
mov
pop
test
xor
stos
cmp
ret
daa
xchg
ss
xor
or
and
dec
adc
mov
add
imul
cld
mov
adc
incb
sub
lahf
jne
insl
leave
sub
std
add
xchg
push
dec
sbb
push
push
pop
pop
pop
push
insb
stos
and
fisttpl
test
aad
push
ror
adc
or
sbb
stc
xlat
rorl
cmp
sti
pop
adc
lds
sbb
loopne
sub
xor
xor
arpl
add
sub
dec
xchg
ja
ficomps
out
insb
pop
jmp
int3
inc
cmpsl
outsb
add
fwait
shrb
les
xor
sbb
lods
mov
xor
popf
xor
or
fistps
pop
decl
int3
push
jg
xor
cs
push
imul
jb
pop
add
dec
loop
bswap
setae
outsl
nop
inc
rorl
in
xor
iret
jne
mov
mov
xlat
imul
pop
mov
repz
rcrb
daa
sbb
or
xchg
mov
inc
push
mov
sbb
pop
inc
movsb
fstpl
push
test
shl
inc
ss
sbb
aad
push
or
cmp
adc
in
sbb
mov
push
mov
mov
cmpsb
and
xlat
ret
pop
pop
fmuls
imul
mov
sub
push
andl
and
push
xor
scas
adc
sbb
ss
jp
and
mov
mov
xlat
test
out
xchg
mov
cmp
je
cmpsb
fmull
neg
ret
adc
or
mov
pop
push
rcrb
in
ss
mov
sub
rcll
or
xlat
aas
sub
push
push
imul
sbb
pop
sbb
add
mov
sahf
hlt
or
mov
sub
or
cltd
in
ffreep
lds
outsl
scas
push
and
daa
jbe
mov
add
dec
pop
test
cmp
jne
or
mov
adc
pop
push
inc
jo
dec
aam
sub
add
add
add
jne
and
sbb
rcrl
add
xchg
mov
add
mov
pop
push
movsl
add
mov
mov
lds
mov
push
mov
add
jl
push
pop
push
push
mov
mov
pop
aam
pop
mov
fdivl
cmp
cmp
push
push
daa
outsl
mov
out
mov
sbb
mov
aam
aam
adc
mov
adc
inc
and
mov
in
jmp
nop
insl
jg
cmp
xchg
ret
ja
and
cmpsb
std
test
inc
xor
mov
test
lock
loopne
mov
push
or
jb
and
or
pushf
testb
push
inc
jns
pop
add
enter
and
mov
and
push
push
xchg
cli
pop
scas
cmp
add
mov
xor
mov
jbe
test
ds
bound
inc
pop
push
mov
mov
jmp
cmpsb
push
and
inc
popa
jmp
xchg
adc
push
mov
lret
lcall
int
jg
cmp
dec
mov
and
jle
testl
add
sub
je
fisubrl
clc
or
lahf
ret
lea
repz
pop
mov
test
mov
inc
cmpb
dec
add
and
xor
add
adc
add
jge
or
jno
je
lcall
flds
add
enter
push
test
sbb
pop
push
pop
sahf
dec
push
jns
add
or
or
sbb
inc
dec
or
inc
sahf
xchg
add
or
and
sbb
pop
or
in
lcall
lcall
add
xor
push
push
ja
and
and
push
rsqrtps
movsl
mov
pusha
adc
sub
adc
push
and
and
ds
add
adc
pop
adc
ret
repnz
adc
adc
adc
inc
fmulp
cltd
adc
add
sbb
push
push
push
pop
mov
sbb
out
rcrb
sbb
in
sbb
call
sahf
sbb
sbb
sbb
cmp
sbb
jb
sbb
add
repz
pusha
roll
cmp
push
inc
push
pop
and
pop
pop
jne
add
add
sub
cmp
push
xchg
dec
jg
insl
mov
iret
cmp
xchg
sbb
lcall
call
push
in
jno
repnz
sub
rol
lea
add
aad
cmp
mov
out
fwait
out
ret
xor
enter
add
call
adc
dec
dec
cwtl
jmp
jb
sub
and
or
sbb
or
in
in
in
and
repnz
add
mov
out
out
inc
enter
out
sbb
pop
inc
push
imul
in
cmp
icebp
icebp
cmp
sahf
xchg
pslld
out
std
lret
mov
pusha
iret
pushf
lcall
fwait
pop
in
sbb
mov
jb
cmp
div
pop
in
repnz
cmp
cmp
push
fsubs
dec
clc
clc
clc
cltd
adc
add
inc
stc
inc
stc
lock
mov
iret
cli
cli
iret
sti
push
jns
sbb
sti
stos
cld
cld
aam
aaa
jb
je
cld
push
cmovl
jnp
cmp
mov
xor
sbb
iret
repz
adc
test
mov
sub
add
xor
rcl
ljmp
inc
es
inc
xor
jecxz
std
sti
inc
push
nop
ja
inc
in
stos
enter
inc
mov
xchg
xchg
sti
out
and
insb
nop
out
cltd
outsb
call
add
sub
xchg
and
cmp
xorl
cltd
xchg
cmp
mov
push
adc
popf
cli
sbb
rclb
out
cltd
repnz
push
lock
cli
inc
mov
inc
push
cli
sbb
jmp
cltd
and
add
stc
push
pop
xor
sbb
fstpl
div
inc
push
cwtl
xlat
negl
fwait
xor
pop
and
mov
clc
xchg
inc
or
cmp
pusha
xorl
cltd
mov
cld
inc
cld
adcl
pusha
sbb
adc
sbb
inc
pop
sbb
loop
subb
pusha
xchg
pop
insb
nop
loop
mul
das
xchg
inc
pop
pop
shl
scas
test
mov
pop
insb
nop
and
out
cltd
bound
pop
inc
mull
andb
pop
lcall
mov
pop
mov
add
pop
and
negb
insb
out
out
loop
push
jno
inc
negb
jns
cmp
testb
rclb
sbb
mov
loop
jno
cmc
repnz
pop
xchg
cmc
jae
test
dec
cmc
testb
xlat
movsl
div
jns
and
pop
add
clc
mov
jecxz
stc
popa
imul
hlt
cli
cli
pop
push
jno
jno
hlt
jns
cmp
pop
jne
push
hlt
lock
sub
das
data16
and
and
hlt
idivl
pop
xor
jns
push
sti
lahf
xor
push
iret
movsl
imul
loope
loope
mov
repz
dec
pop
and
scas
repz
xor
inc
or
imul
mov
mov
and
push
sub
bnd
jmp
je
dec
xchg
repnz
inc
add
sbb
arpl
cmc
and
pop
je
dec
add
and
xchg
inc
add
sbb
outsb
sub
js
divb
dec
and
xchg
icebp
jb
test
xchg
fcompl
lret
cmc
cmc
cmc
and
icebp
jecxz
mov
aam
ffree
lock
push
jns
sbb
inc
jb
sbb
jne
pop
repnz
xor
scas
jne
and
test
xchg
fldl
inc
cli
imul
fadds
sub
out
ret
mov
inc
ds
add
repnz
add
ja
int
stos
add
jp
push
addl
sub
adc
jne
or
loopne
cmp
dec
add
sahf
sbb
dec
add
dec
pop
inc
ljmp
mov
incb
fucomip
push
inc
add
push
push
call
repz
insl
push
dec
pop
jp
ficoms
xor
int
push
leave
pop
jmp
dec
fldcw
cmp
dec
lahf
push
stos
push
repz
mov
pop
xor
sbb
xor
int
mov
push
scas
pop
push
push
loop
div
push
push
or
push
or
mov
gs
push
jle
aam
shlb
loope
lods
mov
mov
push
push
jnp
pop
cs
cld
jge
sbb
loopne
push
sub
fmul
adc
aad
pop
pop
dec
movsl
iret
xor
rcrb
or
shlb
xor
or
sub
pop
and
je
add
js
fcom
mov
inc
cwtl
fmuls
and
add
xor
and
insb
sub
mov
sbb
or
add
fdivl
mov
jecxz
push
sub
enter
fidivs
sahf
jge
test
mov
add
mov
outsb
rclb
in
adcl
inc
stc
push
add
add
fsub
mov
mov
xchg
cld
add
jmp
and
pop
insl
and
adc
aas
add
jne
popa
inc
jb
pop
dec
inc
sub
subb
movsl
xor
inc
inc
inc
inc
pop
fwait
and
pop
push
cmp
enter
or
push
sbbb
and
gs
test
mov
in
popa
outsl
loope
push
sub
xor
inc
outsl
cmpsb
or
inc
dec
loopne
sbb
sub
pop
roll
sub
pusha
rcrl
inc
pop
cmp
enter
mov
xor
orps
push
test
flds
pop
xorb
dec
jp
inc
ja
mov
insb
xor
repz
pop
inc
outsl
or
jmp
mov
add
xchg
cltd
in
adc
sahf
jne
jo
sub
dec
or
inc
shl
xor
mov
fldt
inc
loopne
mov
inc
push
outsl
ret
stc
aad
loop
test
cld
mov
scas
pushl
jne
mov
mov
inc
inc
cmp
push
push
jmp
sbb
xor
xlat
outsb
out
jns
mov
dec
mov
mul
pop
sarb
pop
pop
push
inc
cwtl
les
sbb
ja
stos
add
and
popa
mov
clc
add
mov
aaa
sbbb
movsb
dec
mov
rcll
es
lods
add
adc
enter
sahf
test
mov
push
stos
add
testb
add
push
sahf
fimuls
lret
mov
fucom
inc
or
hlt
mov
push
cmp
mov
mov
in
hlt
pop
jo
call
add
sbb
ror
push
xchg
xor
das
stos
xor
jle
bnd
mov
mov
mov
mov
incl
adc
mov
inc
decl
jne,pn
loop
cwtl
ljmp
cmp
mov
add
or
push
or
mov
push
add
add
mov
mov
mov
mov
xor
jo
jmp
pop
and
sub
outsl
xor
lods
xchg
pop
jae
pop
jbe
mov
dec
or
mov
pop
outsb
aad
test
inc
adc
cmc
mov
push
and
jg
das
repz
sbb
add
inc
push
stos
call
mov
mov
sbb
dec
dec
je
rol
mov
push
push
jne
adc
pop
int
imul
clc
mov
xor
pop
loopw
sub
or
pop
inc
lcall
mov
cmp
rorb
ret
addl
cmp
xchg
filds
fs
mov
stc
mov
inc
rol
xor
add
pop
jo
cmp
and
push
adc
ficompl
mov
inc
sbb
lret
stos
fnsave
cmp
sbb
dec
je
pop
cmp
inc
enter
ja
insl
mov
aas
jge
ss
cltd
pop
idiv
push
mov
ds
pushw
push
xchg
inc
out
cmp
push
mov
adc
xchg
or
mov
sbbl
fs
add
sub
imul
sub
jl
mov
sbb
pop
adc
rorl
je
insb
sub
movsb
loope
jecxz
repnz
sbb
jae
mov
cli
sbb
or
and
inc
nop
adc
and
pop
out
jo
incl
pop
inc
pop
jl
push
sti
cmp
pop
sub
loopne
fisubl
mov
xor
loopne
in
mov
out
je
mov
mov
push
mov
fisubrs
xor
mov
jge
pop
je
sbb
add
movl
pop
das
mov
ud2
lcall
jno
mov
fnsave
test
mov
jo
sbb
je
dec
inc
add
dec
jne
mov
jmp
mov
bound
adc
lretw
test
adc
ret
insb
lahf
pop
popl
xchg
mov
lods
sti
ficoms
bound
pop
xchg
or
or
cmp
call
sub
cmp
rcl
sbb
stc
pop
push
adc
lcall
mov
pushf
dec
add
push
add
jne
and
mov
ret
push
mov
fldcw
test
push
movsb
xchg
rol
add
cmpl
cli
and
cmp
and
mov
push
hlt
mov
ret
push
adc
ja
push
outsb
push
loopne
adc
adc
or
cmp
or
add
jmp
push
jae
sbb
bound
pop
pushl
push
int3
dec
ljmp
pop
imul
ficoms
dec
jg
push
pop
jo
sbb
fmuls
sbb
and
push
test
loop
into
ds
pop
insl
bound
mov
add
decl
inc
jg
cmp
je
gs
xchg
xor
rolb
xor
cmp
bound
inc
cmp
je
xchg
mov
enter
cli
orb
or
fadds
inc
fidivrl
xchg
push
dec
popa
ret
push
inc
sbb
push
dec
sbb
mov
pushf
movsb
scas
test
mov
mov
dec
nop
dec
aam
jmp
hlt
push
adc
rcr
or
inc
sbb
icebp
or
pop
int3
lret
pop
fidivrs
lcall
shlb
xchg
xor
mov
sbb
lret
mov
add
dec
push
push
outsb
adc
and
add
sub
cld
mov
mov
addr16
test
ror
lret
test
incb
jg
sarl
pop
cmp
je
mov
push
shll
and
mov
js
push
shll
pop
jo
or
rcll
add
push
pop
inc
int
and
xor
roll
pop
add
inc
fdivr
frstor
lret
lods
sbb
dec
movsb
jb
pop
add
daa
iret
es
mov
sub
fcoml
ficoml
or
loope
orl
xchg
inc
push
iret
add
shr
push
mov
bound
jne
jmp
dec
or
sub
push
jmp
das
xlat
jmp
push
dec
sbb
dec
into
mov
push
mov
pop
xlat
push
mov
pop
iret
rol
inc
or
sbb
clc
ret
inc
pop
xchg
in
xor
dec
pop
call
addl
cmpsb
dec
out
xchg
lock
sbb
inc
orb
addl
ret
push
push
jns
aam
lock
je
push
pop
movsl
sub
je
sub
call
inc
sbb
mov
mov
int3
jae
and
sbb
mov
push
jmp
cmp
std
add
or
inc
inc
ss
jp
sar
mov
outsl
inc
or
orl
sbb
sub
cltd
pop
scas
and
add
push
mov
xor
clc
and
mov
es
inc
adc
ret
jmp
aas
pop
fimull
lods
nop
push
push
pop
cli
jns
nop
push
inc
mov
push
enter
jmp
or
add
xchg
in
add
cmc
inc
jge
and
mov
mov
jmp
push
out
mov
add
push
movb
sbb
ret
mov
cmp
adc
lret
divb
pusha
hlt
add
add
jmp
sbb
loopne
daa
test
pop
cli
cltd
mov
mov
add
mov
insl
push
arpl
jmp
pop
pop
cltd
sbb
arpl
xchg
push
jno
inc
dec
pop
outsb
fs
outsb
cld
mov
fstl
cli
add
sub
data16
les
cmp
lock
insl
arpl
scas
invd
movsb
cld
adc
mov
mov
pop
daa
or
pusha
into
ds
insb
add
sbb
cld
sbb
xor
popa
in
push
in
add
outsb
jbe
js
adc
cmp
pop
mov
push
mov
js
adc
sub
pop
xor
fmull
jae
xchg
sbb
js
xor
pop
dec
xor
or
call
sbb
and
rcrl
jp
xchg
cs
mov
out
icebp
push
ficoms
xor
test
adc
stc
mov
adcb
into
dec
mov
and
loop
cmpsb
pushf
enter
fcompl
aaa
push
mov
jmp
mov
lcall
dec
pop
out
inc
pusha
lcall
adc
je
xchg
inc
and
sub
scas
add
sbb
adc
in
adc
pop
adc
sbb
stc
popa
jb
mov
jmp
xchg
pop
int3
push
cmp
arpl
imul
or
lcall
outsl
loop
push
mov
andb
lahf
ja
pusha
imul
push
add
sbb
mov
add
or
test
mov
lret
mov
sbb
sbb
pop
or
in
mov
lods
ret
iret
js
ret
out
mov
fistl
push
sbb
imul
inc
test
add
cmp
jle
cmp
inc
mov
xchg
push
jg
adc
das
xor
pop
lcall
xchg
cmp
test
fldl
sub
push
pop
or
or
shrl
loopne
insb
mov
cmp
fadds
xor
dec
sbb
clc
fs
sbb
mov
sbb
imull
sub
push
jmp
and
inc
in
fs
lret
sub
mov
sub
inc
and
int
lods
sub
gs
sub
add
inc
in
sarb
clc
jns
ret
jnp
add
mov
mov
jecxz
mov
push
lea
loopne
out
into
add
adc
push
in
test
call
inc
and
add
add
push
sbb
xchg
or
jecxz
je
add
iret
xor
push
dec
or
push
mov
mov
sarb
sbb
js
xor
repz
mov
mov
dec
lea
dec
xchg
sub
bound
push
and
inc
cwtl
xlat
mov
ljmp
inc
jg
pop
sahf
and
adc
and
add
push
dec
hlt
sub
push
mov
cmp
fdivr
push
mov
add
js
push
and
cmp
frstor
push
call
dec
jg
cmpsl
stc
sbb
pop
or
sbb
and
dec
shll
je
xor
test
or
pop
or
add
mov
add
mov
push
pop
das
fsubrp
adc
xor
push
ret
sub
pop
pop
fstps
xor
adc
sub
std
pop
cmp
push
or
cld
jns
jns
sbb
sbb
dec
je
lcall
mov
and
test
push
movl
cmp
xor
mov
sub
cmp
inc
push
add
mov
mov
adc
sbb
sbb
xchg
mov
lock
jo
sub
loopne
call
add
and
loope
add
push
push
cltd
pop
cld
sub
nop
icebp
testb
or
jns
cltd
pop
sub
adc
or
or
push
adc
es
jmp
add
inc
andb
jle
push
shl
or
or
insb
add
cmp
sbbl
adc
jne
stc
jle
testl
push
sbb
lret
dec
call
lcall
mov
adc
mov
add
mov
and
mov
lea
xchg
loopne
push
ja
sub
adc
or
inc
adc
inc
out
enter
cmp
out
popf
cld
ficoml
push
push
ficoms
popa
pushf
dec
aad
inc
sub
push
loopne
imul
push
enter
cld
mov
dec
and
int
jg
sbbb
dec
push
sbb
fcmovne
movsb
lods
jmp
and
je
and
les
nop
mov
xor
adc
aad
jmp
mov
jmp
lahf
imul
mov
pop
mov
cmp
and
decb
sub
ja
lret
add
jmp
cmp
push
add
ljmp
push
mov
cwtl
jl
lock
or
loopne
pop
rolb
mov
pop
mov
mov
sbb
xchg
or
imul
outsb
inc
dec
xor
jnp
sbb
lock
wrmsr
push
test
cmp
or
mov
inc
or
ja
push
hlt
ret
imul
and
fucomip
mov
or
pop
sahf
cmp
push
fwait
lods
mov
out
fsts
cmpsb
push
sub
aam
popf
jl
jb
cmp
std
jne
xchg
imul
cmp
enter
add
adc
sbb
add
xor
mov
adc
cmp
mov
nop
fildll
push
shlb
lock
out
ja
addb
push
jmp
fs
shrb
das
stos
mov
loope
add
fdivl
dec
sahf
subb
ss
add
adc
dec
push
mov
jbe
cmc
incl
lea
mov
test
push
mov
pop
leave
inc
insl
in
adc
imul
push
mov
jno
mov
aaa
jmp
loopne
sbb
ds
jmp
loopne
inc
or
filds
cmp
push
or
ljmp
fadd
jne
outsb
incl
loopne
movb
mov
xor
inc
lahf
and
rol
push
push
inc
adc
out
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
mov
adc
cmp
add
notl
jle
jle
fwait
and
push
mov
inc
dec
jne
std
sahf
shlb
add
add
inc
add
hlt
gs
scas
dec
adcb
test
xor
sbb
rclb
or
dec
lahf
sub
add
call
mov
cmc
mov
ret
mov
fisttpll
pusha
movsl
or
and
mov
push
out
add
sub
xorl
insb
fs
add
mov
imul
or
inc
push
in
aam
mov
int3
cmp
ljmp
ljmp
je
and
cmp
andl
mov
cmp
adc
sbb
enter
or
pop
sub
jmp
jmp
cmp
dec
sbb
mov
xor
jns
inc
sbb
bound
ret
inc
jo
mov
pusha
push
out
arpl
rcrl
xchg
jno
es
outsl
stos
jmp
xchg
mov
in
loop
and
add
jae
movb
outsl
and
cmp
std
and
pop
movl
rcll
fcmovnb
cmpsl
mov
cmp
es
jne
js
pop
insb
pop
sbb
pop
adc
pop
sbb
ds
sub
xor
jno
sahf
xchg
lret
rolb
call
inc
xchg
int3
mov
sub
and
push
pop
fs
mov
dec
call
push
cwtl
mov
jne
or
xor
out
jle
sahf
jg
dec
or
push
cmpl
or
or
cmp
lds
fcmovnbe
inc
add
adc
jo
sub
dec
or
sbb
xor
push
stos
test
xchg
sub
and
rcrb
mov
or
pop
sub
aaa
ret
inc
inc
jp
jnp
or
jo
jns
jo
add
or
sbb
out
xorl
adc
clc
xor
or
xor
mov
push
push
je
push
mov
dec
or
jle
cmp
push
adc
mov
or
pop
jbe
or
mov
push
sub
jle
loope
or
sbb
jo
loope
and
add
jb
mov
jae
jmp
push
sub
jno
shll
mov
fldl
xchg
xchg
mov
add
jmp
push
cmp
rcl
andb
std
mov
jmp
mov
jns
std
add
xor
pop
add
dec
ljmp
shlb
jns
cld
scas
add
enter
jae
xchg
call
sbbl
cwtl
sub
loopne
jp
inc
mov
lea
push
push
push
mov
or
aas
push
incb
js
pop
nop
call
pop
inc
jge
sbbb
test
inc
pop
cmp
and
xchg
inc
cmp
cwtl
and
sbb
into
xchg
lret
insb
push
or
into
cld
push
jo
jns
testb
or
inc
mov
xorl
loope
xor
cmp
sbb
jno
mov
jg
push
cmp
push
aaa
ret
outsl
mov
cmpb
sub
inc
push
xchg
subl
dec
add
ret
dec
push
fisubrl
stos
movsl
scas
cmp
lret
bound
movsb
pushf
xchg
filds
push
pop
jns
loope
dec
add
inc
test
xor
xchg
rol
jns
movsb
lea
imul
adc
add
push
push
pop
or
clc
mov
push
pop
lds
sub
sbb
xorl
inc
inc
dec
adc
cmp
scas
add
pop
sbb
cmpsl
bound
jmp
repz
lods
and
jbe
lret
mov
mov
adc
cld
mov
mov
jmp
insl
jg
lds
sbbl
xchg
push
and
in
ljmp
mov
in
jb
test
ljmp
es
or
lahf
aad
mov
fiadds
test
dec
ja
les
mov
cmp
je
test
xchg
es
pop
pushf
cwtl
mov
pushf
loopne
inc
jg
and
push
xchg
adc
sub
adc
sbb
mov
das
push
cld
dec
out
xor
mov
movsl
xchg
mov
movsl
dec
or
and
dec
lea
dec
mov
das
mov
popf
and
sub
sub
or
fcoml
aas
sub
mov
mov
clc
or
das
das
popf
enter
shrb
pushf
popl
mov
sarl
insl
ja
aaa
dec
cld
adc
sub
push
popl
push
adc
mov
adc
cmp
addl
inc
or
sub
add
lods
dec
ret
pop
popa
dec
ret
mov
movsb
add
js
jmp
jge
js
rorb
add
adc
add
add
popa
cmp
mov
bts
jmp
mov
or
mov
pop
jbe
js
nop
adc
and
sub
clc
mov
aas
push
js
shlb
jnp
xor
pop
mov
in
in
iret
repz
fisttpl
push
sarb
test
cwtl
mov
push
rcrb
xlat
jmp
pushf
mov
orb
lea
mov
add
mov
and
add
lea
xor
cmp
inc
dec
push
inc
shl
pop
fs
sbb
sub
lahf
inc
cwtl
xchg
test
lea
mov
les
sub
les
les
sbb
or
call
fwait
es
inc
sbb
lea
sbb
and
and
cwtl
add
adc
popa
adc
adc
jo
jne
data16
jns
push
sub
dec
cmp
jge
inc
mov
add
lods
mov
movsb
stos
test
cmp
and
sbbb
mov
xlat
xchg
adc
cld
pusha
sub
loopne
lds
inc
test
xor
or
pop
xlat
decl
idivl
inc
inc
aas
dec
mov
insl
cmp
hlt
fdiv
mov
jmp
hlt
call
pop
and
mov
xor
inc
pop
xor
jo
push
enter
fdivr
push
or
inc
or
je
cmp
pop
xchg
dec
dec
adc
sbb
sbb
pop
add
jg
jl
and
xlat
or
loopne
movl
add
sub
mov
movl
add
jmp
adc
js
push
mov
int
add
add
pop
mov
test
adc
andl
lock
mov
int3
and
push
xchg
and
fisubrs
xor
sub
xchg
mov
push
out
out
pop
cmpsl
loope
aam
add
sub
testl
loopne
cmp
sub
stc
lock
je
movl
popa
popa
clc
rclb
fcoms
outsl
pushf
mov
and
add
mov
movsb
subl
inc
and
lahf
xor
js
lock
and
lret
jo
push
ljmp
daa
dec
lock
xchg
adc
jno
jg
ret
cmp
and
loopne
dec
fwait
or
adc
or
sbb
jge,pt
push
pop
add
mov
mov
outsl
daa
jecxz
inc
nop
sbb
lea
xor
push
in
cmp
dec
adc
add
ficompl
pop
aad
and
xchg
lds
jmp
inc
enter
inc
or
mov
xor
hlt
or
push
incl
lea
sbb
sbb
add
shrb
mov
js
loopne
inc
ss
or
lea
push
or
test
or
addb
dec
loopne
or
addl
dec
jecxz
inc
add
ss
adc
test
or
rorb
mov
cltd
adc
jbe
push
inc
xlat
mov
enter
ficompl
add
in
in
or
inc
jge
mov
js
sbb
adcb
inc
pop
divl
in
sub
ds
or
or
mov
call
jle
push
push
jne
shrb
xchg
dec
ljmp
jns
dec
adc
push
cld
scas
adc
cli
add
add
and
or
or
mov
and
movsb
les
loop
jecxz
add
and
addb
ljmp
xchg
push
push
aaa
add
lock
or
or
arpl
mov
mov
js
push
or
mov
das
add
push
pop
mov
pop
sarl
nop
xchg
dec
test
mov
mov
out
stos
inc
lret
clc
lcall
and
mov
xor
add
jmp
test
mov
xchg
je
inc
jns
lock
sub
pop
lods
cmpsb
fnsave
idivl
je
or
in
pusha
jecxz
test
rorb
popf
pop
cs
xchg
in
mov
out
mov
or
jne
sbb
sbb
mov
sarl
test
cmp
sub
leave
test
xor
xchg
out
in
or
add
dec
or
dec
or
sub
dec
cmpsb
xchg
mov
lea
mov
mov
jle
ja
mov
movsbl
xor
pusha
loopne
push
sbb
sub
pop
sar
pop
mov
mov
repnz
mov
pop
push
lea
les
clc
fdivs
clc
push
pusha
in
sub
dec
or
je
or
sub
je
sbb
scas
pushf
pop
or
add
mov
sbb
jnp
adc
cmpsl
cmp
mov
adc
cmp
aas
mov
sub
arpl
mov
fbld
lea
ja
movsl
mov
dec
enter
es
out
pop
enter
movsl
hlt
hlt
out
sub
stc
cmp
push
or
inc
rcrl
out
je
lock
test
adc
ds
loopne
push
mov
add
sti
loop
in
adc
and
pop
or
enter
add
orb
enter
movsl
jg
jmp
cltd
sbb
or
imul
outsl
cmc
jne
pushf
data16
sbb
pop
xlat
inc
jge
xor
movsb
mov
sub
sbb
cmp
pop
jecxz
jl
mov
or
sbb
jle
out
ja
inc
je
pop
push
or
xor
and
push
hlt
fdivr
sbb
loop
mov
push
cmp
je
or
jae
mov
jbe
sahf
and
lock
ret
adcl
pop
mul
pop
sbb
dec
and
in
dec
adcw
sub
out
and
cltd
rcr
sub
mov
push
mov
add
push
insl
cmp
cmp
scas
jl
xor
push
xor
negl
loopne
pushf
sub
sbb
div
dec
lret
rolb
aam
add
mov
sbb
aas
cmpsl
xor
mov
inc
insl
lock
mov
pushl
imul
xor
add
jno
jge
lcall
mov
inc
mov
dec
mov
pop
mov
cmp
mov
push
cltd
jecxz
mov
call
cmp
rcrb
ds
sbb
mov
jo
add
sub
loop
gs
into
add
mov
mov
push
outsb
je
mov
test
jae
mov
aas
add
xor
pop
ret
mov
or
sbb
or
lret
adc
enter
pop
sbb
or
xorb
or
push
add
xlat
sbb
into
ret
lea
arpl
hlt
jmp
cmp
jle
insl
cmpl
incl
sahf
sbb
xlat
mov
xor
pop
xor
int
or
lcall
cmp
fmuls
inc
cld
adc
push
add
mov
sub
jl
mov
or
push
jnp
jecxz
aaa
xlat
cmpsb
push
lea
stc
lcall
pop
xchg
cwtl
inc
call
sbb
dec
nop
push
int
jg
ds
inc
add
loop
push
push
mov
hlt
outsb
inc
sbb
call
jo
xchg
cld
decb
pop
or
daa
add
jg
adc
adc
push
pop
iretw
hlt
sub
in
push
lret
test
inc
cmp
jne
adc
inc
fbstp
inc
sbb
mov
mov
dec
out
or
je
cltd
fidivs
sub
sbb
push
pop
jl
cmp
pop
inc
jae
adc
mov
jecxz
nop
pop
fimull
data16
mov
or
sbb
call
lret
pop
popf
lock
mov
or
jne
and
lea
negl
das
sbb
lret
push
fwait
jo
jle
mov
cwtl
aam
push
ja
lcall
stc
cmp
xchg
clc
sahf
add
dec
icebp
pop
lret
mov
dec
jmp
pop
xchg
sub
inc
cwtl
loop
mov
ljmp
ret
xor
into
mov
dec
shlb
xor
ss
fisubs
sbb
loope
das
lcall
inc
fldcw
test
repz
ftst
mov
sti
lahf
inc
mov
add
mov
jmp
rorb
sub
push
test
dec
mov
outsl
inc
and
mov
jmp
popf
fcoml
or
pop
inc
negb
shl
push
jp
cltd
fdivl
dec
fdivrl
lea
stos
aas
cmpl
mov
cltd
mov
add
push
jbe
dec
andl
adc
fdivs
out
add
jno
aaa
cmp
aaa
pusha
xor
fistps
rcll
jnp
movsl
push
sbb
mov
xchg
lods
add
cmpsb
lcall
pop
sti
push
adcb
and
and
dec
mov
jb
je
mov
pop
adc
adc
movsl
daa
pop
cmp
clc
mov
sahf
pusha
shrb
in
sub
movsb
cmp
nop
loope,pn
test
add
adc
cmpsl
fnstcw
push
sbb
push
sub
mov
xlat
jl
loop
xchg
cmp
psubusb
push
test
js
push
xor
inc
inc
or
or
jo
movsl
mov
adc
mov
or
lahf
mov
push
push
lea
add
cmp
push
or
mov
leave
ja
test
xor
rolb
and
lcall
mov
xchg
push
mov
cmp
push
or
movsb
mov
rcll
or
inc
shlb
dec
or
ret
jne
push
aas
out
out
xchg
pop
es
ret
pop
dec
nop
xchg
sub
dec
jge
subb
or
dec
or
popa
cmp
cmp
jmp
push
xor
jne
out
and
xor
jmp
push
fstl
or
fiadds
mov
subb
imul
xor
sbbb
xchg
adc
pop
jb
insl
or
lea
das
mov
scas
sub
or
mov
jbe
xor
imul
dec
cld
leave
adc
enter
sub
push
ss
mov
rorb
mov
cmp
inc
jge
ljmp
loopne
sub
cld
shr
mov
imul
out
mov
inc
and
or
sbb
pusha
jecxz
hlt
xor
adc
adc
inc
add
or
jne
rorl
loop
cli
add
cmp
jbe
push
pop
pusha
cmp
mov
loopne
jne
rolb
mov
shr
lea
mov
shll
pop
mov
and
and
adc
aaa
push
push
pushf
mov
add
mov
push
or
cltd
out
cmc
cld
add
pop
and
push
or
dec
add
data16
jmp
add
jecxz
mov
idivb
jne
and
sti
add
out
imul
dec
pop
cmp
fimuls
mov
and
fs
jno
jno
mov
sti
test
out
mov
and
jne
ja
std
push
sub
jmp
lea
das
mov
xor
push
jle
pop
dec
add
gs
out
mov
cmp
loopne
add
movsb
ficoms
mov
cmp
rorl
dec
or
adc
or
dec
pusha
mov
mov
decb
cmp
rorl
js
and
push
out
add
pop
mov
jmp
dec
xchg
imul
push
mov
rorl
addr16
pop
inc
inc
xor
call
push
repz
cmpsb
jecxz
adc
xor
adc
shl
in
pop
testb
dec
or
jp
push
call
aas
gs
test
mov
sbb
iret
cmp
sub
dec
inc
adc
lock
pusha
add
and
pushl
push
push
mov
loopne
mov
jp
ror
add
mov
sbb
clc
dec
adc
inc
cmp
sbb
jl
push
cmp
push
jbe
insl
or
mov
mov
cmp
sub
mov
shl
mov
and
jne
data16
outsl
push
xchg
push
pop
test
pop
int3
cmpsl
xchg
out
js
add
notb
sahf
ss
pop
push
push
inc
jg
adc
test
inc
loope
and
push
insl
cmp
cs
movsb
adc
inc
push
out
push
fucomi
fwait
orl
pop
mov
jmp
add
and
push
pop
push
mov
and
push
outsb
jno
enter
ja
add
inc
ljmp
test
add
loopne
dec
xor
dec
jne
xchg
jns
push
or
imulb
xchg
add
aas
lret
xchg
inc
lea
lods
adc
sub
shr
das
adc
incl
adc
adc
or
adc
out
mov
cld
lock
call
jmp
add
je
clc
add
dec
sbb
jo
xchg
add
adc
dec
popa
push
sub
fs
mov
sahf
scas
mov
inc
inc
mov
lock
testb
push
add
and
sbb
and
not
and
les
xorps
adc
jl
fwait
xor
mov
add
ror
jb
cld
sti
or
and
movsb
mov
and
clc
scas
inc
adc
ret
int3
inc
imul
cmp
push
jl
icebp
mov
stc
add
add
stc
int3
push
pop
sbb
lock
pop
mov
or
test
add
es
add
cmp
nop
dec
or
sti
or
sbb
jns
sub
add
pop
adc
movsl
adc
pop
sti
xchg
adc
xor
fstl
fsubl
jmp
sti
jbe
cltd
sbb
jle
lcall
pop
pop
push
xor
in
pop
adc
lcall
add
js
mov
jmp
aaa
js
pusha
test
loopne
imul
pop
adc
xchg
test
inc
inc
mov
and
in
adc
jl
and
add
out
or
mov
mov
pop
dec
inc
dec
insb
pop
xor
push
sar
dec
and
jp
movsb
pop
cmp
orl
cmp
dec
popa
fdivrs
mov
fistps
sub
orl
cmp
ja
ja
sbb
rclb
dec
ficoms
add
mov
scas
call
or
mov
fadd
jo
inc
jbe
add
mov
mov
push
mov
imul
xchg
dec
in
cmp
setb
xor
jns
dec
movsl
or
sbbb
ja
nop
or
jp
insb
ja
jge
push
add
loope
hlt
dec
test
inc
cmp
push
push
push
jge
loopne
addl
mov
popa
mov
pshufw
out
fyl2x
mov
or
push
nop
cmp
and
decb
xlat
adc
ret
adc
jnp
mov
cmp
push
jne
mov
cwtl
inc
jne
jmp
jnp
xchg
out
or
jae
xor
aaa
mov
jo
arpl
jb
jo
and
fsubs
ret
iret
les
popf
or
inc
pop
lcall
cmp
sbb
in
sbb
insb
clc
loope
in
cli
and
mov
dec
sbb
sbb
iret
jne
inc
jno
sbb
dec
push
cli
add
fcoms
ja
push
cmc
dec
mov
and
jne
push
cld
mov
mov
push
pop
outsb
leave
inc
test
mov
push
pushf
mov
sub
icebp
mov
jno
sbb
mov
inc
add
pushf
stos
push
popf
xchg
sbb
iret
push
push
icebp
test
inc
cmp
pop
lea
mov
decb
jne
push
ret
xor
or
sub
dec
mov
cltd
sub
pop
pusha
dec
bound
dec
mov
and
lcall
jp
adc
mov
pop
mov
das
pop
xor
sbb
jge
jle
call
push
or
mov
cld
or
sbb
inc
or
push
mov
inc
inc
mov
add
mov
call
aad
fiadds
shrl
js
aaa
test
lea
ds
jne
cmp
sbb
push
call
and
inc
add
shll
outsb
sub
not
cmp
jecxz
or
or
addl
dec
shlb
and
or
test
jbe
and
or
fs
cmp
sar
push
rol
pusha
and
or
sub
test
xorb
mov
mov
loopne
mov
add
testl
cmp
push
shlb
xchg
pop
mov
cmp
cmp
pusha
ret
sub
add
push
mov
adc
mov
and
inc
push
pop
test
or
das
cmp
push
and
sti
loope
push
in
shlb
or
and
mov
aas
mov
jmp
push
dec
test
or
fcomps
sub
lahf
pushl
lds
testb
in
pop
ret
divl
pop
outsl
or
push
adc
std
pop
and
adc
movsl
inc
xchg
pop
cmp
psllw
inc
jnp
mov
mov
js
push
or
loopne
mov
jmp
push
inc
lods
dec
cwtl
shr
cmpsl
pop
jl
mov
sub
shl
and
insb
int3
push
or
mov
inc
iret
mov
push
lea
mov
call
pop
add
hlt
mov
adc
push
aad
xor
aas
rol
in
and
mov
fldenv
adc
jge
jmp
movzwl
rcrb
int3
in
iret
shrb
test
cmp
add
cmp
mov
aas
enter
mov
cwtl
mov
test
mov
or
pop
lcall
xor
ja
frstor
inc
mov
push
mov
ljmp
dec
xor
jo
popa
mov
xchg
shll
add
pop
add
sti
or
sbb
xchg
arpl
add
mov
sub
adc
push
sbb
stos
ljmp
ljmp
hlt
fidivs
fistps
in
push
push
icebp
sbb
mov
cmp
jp
xchg
add
or
pop
ficomps
mov
nopl
jg
jnp
outsb
adc
mov
add
xor
cmp
notb
or
decl
enter
loope
dec
jae
int3
les
xchg
bound
add
out
jae
ret
jne
lcall
jns,pn
cmpsb
lcall
mov
add
sbb
cmovo
lcall
mov
call
sti
mov
enter
test
enter
in
test
push
jb
dec
test
jb
test
rcll
dec
push
mov
movq
call
push
pusha
inc
push
jb
repz
ret
daa
nop
in
fimuls
cld
test
inc
push
mov
stc
mov
test
dec
sub
call
mov
enter
mov
sahf
pop
in
movsl
arpl
hlt
xchg
repz
lods
test
shrb
xchg
cmpsb
adc
call
in
inc
scas
in
add
mov
scas
inc
xchg
les
shlb
loop
in
pop
enter
in
and
les
test
popa
xchg
ret
fwait
mov
inc
test
mov
ret
adc
mov
dec
add
cmc
or
xor
nop
out
sahf
dec
popa
adc
fidivs
int
jns
icebp
aaa
mov
ss
test
lea
arpl
daa
cmp
pop
jl
pop
push
pop
lea
mov
addr16
js
lret
cmpsb
lock
ret
mov
pop
or
ret
lods
adc
in
jbe
inc
inc
or
fwait
shrl
mov
xor
xchg
and
rorb
std
or
adc
test
and
mov
movsb
xor
lods
clc
aaa
or
inc
cmp
mov
cmp
cmpsl
dec
dec
arpl
dec
adc
add
inc
movlps
inc
adc
jmp
mov
ss
andl
testb
or
or
out
fsubs
push
adc
cmpsb
inc
add
ret
in
jne
fstpt
lods
jle
mov
stc
mov
cmp
ja
inc
cld
push
cs
mov
nop
jp
fstps
cmp
mov
adc
movsl
add
pop
pop
and
test
or
pusha
jo
lret
sbb
push
or
shll
enter
sbb
pop
pop
movsl
pop
sbb
add
xor
dec
cmp
cmp
imul
cld
jno
lcall
sbb
lods
test
int
push
in
fcoml
scas
mov
je
push
insb
xchg
pop
sbb
add
dec
pop
add
sbb
dec
inc
fisubl
add
push
inc
je
dec
xchg
push
or
push
push
ret
fmul
ss
sbb
out
fldl
dec
in
testb
add
call
movsl
fwait
cmp
ja
mov
jle
mov
push
pop
jmp
jo
mov
rorl
in
mov
sbb
inc
pop
sub
das
sub
xchg
dec
je
add
and
sub
or
sti
fldenv
rorb
sub
push
mov
sbb
jbe
ja
cmp
sub
add
add
ja
cmp
adc
inc
add
and
test
xchg
adc
lock
jns
hlt
test
scas
mov
push
in
inc
adc
fdivrl
push
fdiv
fsubrl
fstl
or
and
pop
icebp
inc
add
aaa
jne
das
and
inc
lock
jns
push
cmp
cmpsl
sahf
out
sahf
xor
pop
inc
stos
jnp
pop
and
dec
out
adc
mov
sarl
pop
add
inc
sbb
or
push
cltd
insb
mov
xor
inc
add
jecxz
mov
xchg
inc
jp
pop
les
int3
and
inc
pop
pop
clc
adc
add
test
pusha
mov
push
xchg
jmp
inc
faddl
int
test
frstor
popa
push
mov
aas
test
fmull
aas
mov
push
cmp
test
outsb
push
push
push
adcl
mov
cmp
sub
mov
ret
int3
add
mov
or
xor
and
mov
js
aad
adc
in
push
and
jb
lods
in
or
int3
add
shlb
push
inc
lods
jno
std
lods
std
gs
and
into
jne
xchg
fs
xchg
pop
mov
cmp
clc
mov
aaa
add
incb
movsl
sti
out
fs
add
jg
xchg
dec
sbb
sub
dec
adc
pop
sar
lea
dec
dec
clc
ret
and
repz
or
and
out
adc
adc
add
out
xchg
out
test
inc
cmpsb
xchg
les
push
add
iret
push
std
push
or
fsubs
add
mov
call
cmc
int
inc
cli
loope
lea
mov
mov
or
int3
shl
enter
jo
mov
mov
push
pop
cs
int3
pop
add
xorl
xor
sub
or
cmp
pop
fildl
fmull
stc
or
ljmp
ret
xor
mov
es
mov
call
mov
push
or
inc
pop
pop
cmpsb
pop
loop
cli
arpl
jecxz
cmp
inc
sub
lret
mov
pop
pop
aad
pop
and
cmp
jne
pop
xor
jl
fcoms
inc
jne
cmp
inc
xor
sbb
movsl
in
movsl
in
push
mov
aad
cmp
push
int
imul
mov
dec
mov
lods
cmp
lock
and
jbe
push
leave
jae
in
nop
shll
test
pop
jb
mov
jne
rorl
repz
cmpsb
shlb
inc
stc
lods
jno
push
inc
call
in
bnd
xchg
add
pushf
dec
js
mov
mov
dec
adcb
sti
push
inc
cmp
pop
das
popf
lea
dec
popf
in
mov
cli
cli
dec
mov
in
mov
lds
cmp
cwtd
and
cmp
in
jno
push
adc
mov
mov
add
mov
gs
add
loop
xor
dec
fcmovbe
jns
daa
mov
stos
pop
and
add
cmp
out
cld
and
xchg
std
sub
cmpb
enter
xchg
neg
adc
loopne
cwtl
adc
adc
or
pop
cli
cmp
jp
lods
into
je
divl
add
in
jp
mov
jb
mov
std
mov
cmp
mov
lret
insl
pop
xor
sub
jns
xor
mov
std
ja
mov
adc
fbstp
mov
fdivrs
rol
ret
mov
rolb
add
jno
out
sbb
xchg
gs
mov
pop
cmp
shr
call
je
mov
rol
xchg
or
test
insl
mov
popf
bound
fdivs
xor
daa
les
dec
inc
mov
mov
xchg
std
lds
sub
cmc
arpl
mov
arpl
and
mov
cmpb
mov
mov
data16
ds
icebp
push
push
mov
inc
scas
mov
mov
mov
jb
mov
std
out
lcall
add
inc
pop
mov
out
test
aad
int
repnz
cmpsb
mov
push
mov
xchg
adc
cmpsb
sbb
adc
sub
cmp
and
cmp
mov
popa
mov
std
call
push
lock
xor
mov
adc
pop
fwait
test
and
in
std
mov
sbb
inc
repz
cmp
jp
mov
popa
mov
out
jp
decl
mov
dec
cs
xor
sub
add
or
fnsave
dec
pop
add
cmc
and
lcall
push
lock
xor
push
sub
lods
sbb
adc
mov
int3
sbb
jge
int3
cmp
loopne
sub
pop
addl
inc
dec
dec
test
enter
mov
aam
sub
movsl
lock
dec
inc
cwtl
dec
dec
cmpl
xor
data16
bound
cmp
sbb
adc
jge
clc
add
push
inc
lret
jne
cmp
sub
cmovge
addr16
push
or
pop
out
enter
push
dec
pop
xchg
and
je
xchg
or
and
add
nop
std
std
loope
lods
and
in
sub
xchg
nop
enter
das
pop
movsb
bound
test
mov
inc
jp
iret
repz
push
xor
dec
dec
call
inc
mov
inc
or
or
into
fidivs
mov
and
jmp
and
push
ror
dec
roll
pop
inc
out
enter
adc
lea
out
loope
sbb
test
cmp
or
lret
cmp
arpl
loopne
cltd
mov
push
in
push
pop
cld
aas
push
jecxz
out
adc
sub
cmp
ja
adcb
imul
repnz
clc
add
icebp
or
inc
sbbb
in
dec
aaa
jle
pop
pop
or
fisubl
ds
mov
ret
int3
lock
and
ljmp
ret
push
or
arpl
xor
or
add
pop
inc
dec
jo
test
leave
test
scas
movsl
call
pushf
dec
call
push
sub
les
test
sub
xchg
adc
and
leave
test
inc
inc
inc
int3
les
out
xor
dec
jns
enter
aaa
jbe
adc
mov
xchg
lret
repz
xchg
lret
push
and
pushf
cmp
test
mov
mov
xor
dec
in
call
add
and
push
and
enter
mov
jo
enter
dec
in
aaa
adc
xchg
xchg
xchg
loope
xor
outsb
pushf
xchg
mov
inc
mov
aaa
adc
leave
lea
clc
mov
or
pop
xor
scas
sbb
pop
repz
cmpxchg
and
inc
repnz
mov
lock
fdivrl
adc
dec
mov
dec
aaa
push
or
mov
xchg
imul
dec
xchg
and
mov
add
and
pushf
movsb
mov
push
aas
dec
jecxz
pusha
sub
adc
mov
incl
cmpsb
or
add
nop
nop
nop
in
or
jecxz
cmp
jmp
dec
push
sub
pop
je
jmp
dec
mov
in
sbb
mov
rolb
cmp
loope
xor
arpl
lods
xor
imul
shrl
xchg
and
ret
cmp
sub
out
xchg
out
xlat
pop
stc
nop
sbb
jg
adc
and
pop
test
pusha
jo
inc
sbbb
dec
mov
xchg
adcl
inc
or
xor
sub
or
gs
je
and
xorl
lret
lret
dec
shll
faddl
shrl
inc
add
adc
add
adc
jae
lods
xor
jmp
neg
pop
mov
stos
xor
lock
push
add
inc
dec
add
mov
rclb
xchg
test
movsl
mov
pop
xlat
adc
repz
or
xchg
push
dec
adc
push
and
xor
dec
push
pop
push
ds
out
outsl
inc
or
jbe
jle
sbb
push
test
mov
cmpb
and
sbb
jo
cmpsl
hlt
inc
daa
mov
pop
mov
enter
inc
lret
prefetch
shlb
and
adc
test
add
loope
call
jecxz
sub
push
lret
and
iret
xchg
sub
ja
mov
out
mov
mov
add
sub
adc
fidivl
lcall
mov
es
jp
xor
in
and
xor
in
cli
adc
rcr
jp
or
mov
dec
mov
push
push
ret
cmpsl
jmp
pop
jae
or
pop
in
sbb
cld
adc
and
mov
mov
loopne
loopne
inc
sub
insl
lret
sbb
sub
jne
mov
imul
or
icebp
pusha
mov
jne
xchg
sbb
pusha
lods
pop
xchg
ja
ret
or
dec
stc
xor
clc
cld
cmp
and
xchg
push
adc
mov
and
push
mov
fsubrs
dec
fwait
or
push
xor
adc
xchg
test
stos
and
loopne
test
into
lock
add
fistpll
mov
mov
inc
mov
mov
test
dec
and
adc
mov
and
jne
test
outsl
mov
test
je
divl
adc
pop
add
rcrb
pop
aaa
mov
sbb
or
pop
inc
mov
adc
jle
popa
add
pop
xchg
cli
sub
mov
sbb
sub
jmp
bound
test
adc
aad
mov
sbb
loop
inc
cs
add
mov
jg
mov
movl
sbb
mov
adc
in
inc
mov
add
pushl
mov
jmp
push
js
xchg
sarl
rcll
call
adc
dec
sbb
fistps
cmp
out
int
push
add
je
hlt
daa
clc
inc
push
ret
xor
pushl
testl
es
ss
jecxz
or
sub
les
scas
cltd
aam
and
inc
dec
bound
scas
inc
push
andb
mov
push
push
or
hlt
ds
sahf
pop
adc
or
mov
pop
nop
scas
push
pushf
sbb
lods
dec
mull
bswap
jnp
mov
inc
push
pop
push
push
out
fcos
out
inc
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
inc
fnsave
mul
pop
jb
cmp
or
cmp
or
jns
pop
divb
sbb
adc
add
fcmovu
fcmovu
lret
mov
inc
adcb
inc
mov
addb
inc
add
xor
add
jmp
add
mov
repnz
int
cli
or
movb
cmp
adc
push
jbe
call
lahf
sub
inc
mov
adc
adc
push
and
cmc
mov
push
lea
push
dec
sarb
xor
add
sbb
or
mov
clc
in
sub
pop
xchg
mov
ret
adc
mov
jge
jae
nop
pusha
andl
out
leave
std
jne
mov
call
js
xor
lock
adc
shrb
dec
push
inc
adc
rsm
sbb
insb
lcall
aam
movsb
dec
sbb
mov
inc
cmp
jg
adc
jne
lea
les
jb
pop
mov
aas
push
in
lods
or
push
or
jae
push
sub
test
and
ret
jne
sbb
fucomip
add
lea
xchg
adc
jbe
and
pusha
icebp
and
loopne
cmp
and
add
adc
jne
daa
enter
pusha
mov
inc
lcall
into
add
jl
mov
push
mov
cld
sbb
adc
sahf
lds
add
push
mov
xchg
pop
push
sub
add
adc
adc
inc
fs
stc
inc
xor
mov
adcb
sbb
push
dec
lcall
add
mov
add
jbe
iret
add
add
add
jns
test
adc
sbb
or
stos
add
push
add
out
push
push
mov
add
push
jge
or
ret
in
roll
insl
popf
cli
cmp
or
add
movsb
shlb
insb
or
xchg
adc
shlb
push
pop
lahf
movsb
and
add
sbb
xor
cltd
cmpsl
mov
insl
mov
lret
test
add
imul
jae
cld
fidivl
gs
and
pop
test
outsl
shll
les
adc
and
jbe
lea
fs
movsb
dec
sbb
mov
add
orl
or
jge
insl
loop
iret
jle
sub
or
fisttpl
adc
mov
mov
into
loopne
xor
sti
mov
mov
jmp
iret
xor
jo
jo
jno
and
push
add
jo
jo
fmuls
aaa
jne
int3
jo
jecxz
pop
inc
adc
inc
je
mov
je
ss
sahf
cmpsl
shlb
xchg
inc
ficomps
outsb
or
cld
sub
test
mov
andl
or
pop
out
add
sbb
xor
add
xor
cld
dec
push
mov
adc
rclb
movsb
test
setl
iret
lock
lods
hlt
icebp
repnz
cmp
inc
add
push
or
call
jae
xchg
sbb
cmp
jb
inc
fists
mov
inc
pop
filds
or
add
orl
orb
mov
pop
inc
push
pop
test
mov
jne
insl
push
data16
push
dec
sbb
fimuls
push
sarb
pop
or
ja
mov
sub
or
pushf
add
push
xor
jo
movsl
inc
mov
or
scas
arpl
clc
cmp
push
sbb
sbb
sbb
in
push
cs
push
push
sbb
lods
insb
mov
pop
mov
and
movsl
pop
daa
adc
dec
inc
roll
cmp
cmp
divl
sub
add
clc
xchg
add
mov
mov
mov
push
lret
inc
test
test
imul
es
push
or
fisubrl
add
dec
enter
adc
sub
xor
inc
adc
and
sbb
scas
test
xchg
fsts
aaa
and
xchg
into
or
dec
pusha
out
adc
out
in
js
xchg
pop
add
or
sub
rorl
mov
and
leave
and
andl
cmp
sbb
sbb
sub
cmp
arpl
cmp
jb
orl
xchg
xor
xchg
inc
test
cmp
push
mov
push
cmp
ret
jp
sbb
or
lock
leave
push
sbb
int3
pusha
sbb
data16
or
dec
int
dec
mov
dec
or
xor
call
push
cmp
adc
divb
mov
mov
test
or
fs
rcl
aad
scas
ss
movsb
outsl
adc
dec
sub
loopne
or
lock
shll
fs
fxch
js
and
scas
shll
movsl
mov
pusha
cmp
sbb
mov
lods
mov
add
shll
pop
xchg
clc
je
aam
aas
dec
jbe
dec
je
cmp
xchg
out
inc
jmp
mov
mov
loope
sub
mov
push
es
push
xchg
std
mov
mov
cmp
or
in
or
add
imul
dec
push
or
je
add
dec
mov
mov
jne,pn
sbb
inc
fs
mov
cs
sub
adc
mov
sbb
jge
mov
mov
sbb
adc
or
loop
mov
jnp
fldt
pop
sbb
push
xchg
jmp
stos
insb
pop
adc
sarb
and
add
xor
sub
adc
mov
mov
pop
scas
push
fidivrs
add
push
inc
call
insb
in
das
add
cmp
sbb
addl
inc
sbb
bound
add
add
dec
jne
cmpl
sbb
cmp
bound
test
test
adc
and
sub
rclb
aam
in
inc
mov
add
push
cmp
dec
outsl
jecxz
dec
dec
jecxz
xor
inc
cmp
xor
ja
jmp
test
and
adc
out
pop
rorb
jmp
push
pop
or
xchg
test
cmc
sbb
add
jmp
ss
and
mov
cmp
mov
inc
inc
sub
jge
push
jmp
fimuls
push
lea
dec
cmp
iret
adcl
popa
inc
sbb
mov
sbb
mov
ret
dec
mov
pop
sub
repz
mov
sub
mov
adc
inc
ss
daa
mov
xor
ret
dec
add
sub
imul
stc
sbb
push
out
in
adc
loopne
add
push
push
ss
mov
add
adc
push
orl
cld
mov
and
jmp
incl
dec
or
push
jb
push
xchg
pusha
jo
inc
mov
cltd
add
or
cmpsb
in
sbb
leave
push
dec
mov
xor
adc
or
lahf
xchg
add
inc
jge
stos
pop
cmp
stos
ja
cmp
out
adc
dec
jmp
xor
js
loopne
add
adc
add
ret
jo
mov
add
xchg
sbb
stc
pop
es
jb
addr16
cmp
je
test
addb
or
and
jmp
outsb
adc
add
push
or
xchg
inc
or
dec
inc
inc
xorb
pop
and
dec
xor
inc
mov
xchg
add
into
inc
add
xor
repz
test
pop
fiadds
push
add
sub
pop
dec
nop
dec
adc
cwtl
ss
or
cmp
mov
roll
insb
xor
mov
mov
je
inc
or
dec
js
sub
pop
jle
lds
inc
jecxz
sbb
stos
push
aas
jae
mov
in
dec
push
stos
dec
rol
out
push
sbb
mov
ss
stos
pusha
pop
and
xor
andl
clc
or
addl
add
mov
mov
loope
lea
pop
jne
pushf
dec
and
and
sub
add
jo
andl
out
jb
fldt
cmp
pop
dec
inc
inc
or
jne
call
fidivrl
jb
rcl
jo
inc
cmp
das
mov
jo
fbstp
and
rcrb
xchg
dec
jb
subb
cld
gs
call
pusha
cwtl
ret
jmp
xchg
jbe
xor
addb
dec
or
sbb
or
enter
sti
or
adc
cmpsb
inc
pop
stos
lock
or
push
data16
xor
or
jg
xchg
dec
or
pop
and
scas
push
dec
add
jl
jle
mov
or
clc
in
jmp
add
or
or
or
fwait
or
push
and
xor
outsb
ja
xchg
inc
mov
in
shll
or
in
sbb
mov
pop
inc
xchg
pop
dec
cli
push
mov
push
jl
push
add
ljmp
pop
sbb
sbbl
mov
sbb
inc
sub
jo
lea
loopne
lock
and
adc
mov
mov
pop
sar
sarb
jg
iret
inc
popa
jl
ficoms
push
dec
inc
arpl
push
and
fidivs
lahf
push
push
mov
dec
and
push
or
mov
decl
cmp
mov
add
out
add
and
pop
or
inc
add
and
inc
dec
and
idiv
inc
or
inc
adcl
dec
jmp
xorl
or
push
addb
jb
xchg
xchg
cmpsb
or
testb
dec
xor
cmc
push
or
inc
in
push
fnstcw
rorl
test
inc
idivb
add
into
push
cmpsl
orb
je
and
movl
mov
in
loop
add
loope
pop
push
sbbl
adc
adc
lcall
lea
aaa
sub
sub
dec
out
mov
mov
or
mov
push
xchg
push
xlat
cs
push
xor
mov
xchg
xor
push
xchg
es
lret
dec
lock
mov
xor
and
dec
mov
cmp
das
in
or
adc
lock
not
xchg
add
fists
sub
pop
enter
add
ret
xor
enter
pop
xchg
dec
add
ret
sub
scas
sbb
pop
pop
or
cmpl
dec
dec
or
sbb
das
in
mov
xchg
and
rcl
or
data16
popa
and
stos
xlat
push
mov
xchg
or
pusha
dec
clc
dec
jecxz
push
mov
mov
cmp
fs
clc
add
ret
pushl
add
lcall
jae
sbb
and
lods
xlat
add
aas
pop
mov
adc
sub
inc
mov
je
push
inc
inc
adc
repnz
sahf
js
jl
subb
pop
test
adc
lock
daa
xchg
mov
pusha
bound
sub
push
hlt
push
mov
fistpl
add
stos
fdivl
push
dec
sbb
std
imul
or
sbb
or
mov
fcmovnb
push
cs
mov
scas
out
pop
and
shl
sub
sub
mov
adc
push
add
in
add
loopne
pop
push
mov
test
insl
dec
mov
jmp
test
or
inc
leave
xor
in
stc
push
jb
fmul
mov
mov
int3
mov
mov
push
pushf
or
inc
adc
push
xor
sbb
or
push
and
push
test
or
add
push
push
cmp
or
adc
mov
js
push
or
ds
add
fisttpl
cmpl
fistpl
call
and
mov
push
lods
xor
and
dec
decb
leave
subl
sahf
sbb
mov
xor
add
sub
xor
sbb
sub
dec
icebp
fsubr
push
and
aas
jmp
test
jecxz
push
mov
xlat
fnstenv
pop
ljmp
sub
adc
ljmp
fdivs
jne
fbld
or
imul
in
inc
sbb
out
push
fcoml
inc
inc
imul
xor
jmp
mov
push
push
mov
aaa
lret
enter
adc
enter
jle
mov
iret
sub
cmp
sub
xor
sub
fbstp
jl
cmp
jg
inc
jmp
mov
ret
sbb
jne
imul
add
add
shrb
jge
aas
sbb
aad
push
movsb
pop
push
cmovge
rcr
fsubs
rorb
pop
popa
mov
fildl
pop
adc
mov
mov
xchg
testb
mov
adc
cmp
push
pop
imul
idivb
xor
push
ja
cld
and
or
incl
mov
mov
and
or
xor
jmp
add
adc
movl
xchg
pop
or
or
pop
sub
push
lea
mov
adc
cmp
lock
pop
and
push
add
pop
or
popf
adc
pop
sbb
or
test
push
loopne
mov
fucomi
cmp
cmp
mull
sub
pop
movsb
and
jle
sbb
je
cmp
loope
adc
mov
push
add
mov
or
or
cmp
xchg
cmp
jl
mov
rcrb
add
mov
fs
or
mov
inc
push
pushl
imull
test
jmp
and
or
ljmp
jmp
adc
sahf
sub
push
sbb
ret
das
cmp
pop
inc
sub
xor
push
and
in
rcll
jne
inc
sbb
jl
cs
cmp
or
popa
daa
adcl
sbbl
adc
xor
pop
les
sbb
adc
and
or
push
and
jg
inc
fisttps
rclb
xor
mov
inc
or
lret
cmp
pop
sbb
pusha
add
add
push
jl
js
mov
xor
or
add
push
dec
xor
adc
loopne
or
jg
aas
add
sub
fsubrl
pushf
sbb
pop
push
fstpt
stos
and
fwait
pusha
pusha
pop
bound
push
push
adc
cmp
inc
sbb
inc
dec
xor
test
xchg
add
hlt
cmp
jl
mov
sub
ret
movsb
fwait
inc
inc
leave
xchg
mov
pusha
test
sbb
mov
mov
xchg
xchg
cmp
and
arpl
fscale
fs
int3
add
jbe
jl
or
sub
cld
cs
mov
mov
aaa
mov
loope
fdivs
aaa
movsb
add
push
clc
subb
xchg
push
rclb
outsl
mov
leave
push
or
fisubrs
hlt
rcrb
jle
dec
lock
or
inc
or
sbb
je
fcoml
fmuls
inc
sahf
jg
dec
imul
mov
sub
enter
or
data16
push
addr16
jbe
pusha
cmp
inc
cmpsl
and
inc
xor
sbb
pop
cmpl
mov
jle
mov
xor
movsl
and
jge
push
fs
ret
imul
or
in
inc
icebp
sub
push
ret
sbbl
or
testl
mov
dec
sub
mov
or
popl
and
mov
sarb
or
cld
push
and
das
push
push
inc
icebp
mov
out
ja
xor
repnz
mov
dec
shl
mov
mov
add
repz
arpl
popa
vmread
dec
xor
in
sbb
test
aam
push
filds
inc
cli
cmpl
imul
inc
lods
dec
jl
push
jmp
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
add
pop
add
inc
movb
cmp
inc
subb
add
xlat
or
fcoms
sub
call
or
mov
jo
aam
subb
jno
leave
out
in
xorb
push
ja
add
inc
jno
push
or
sbb
orb
lcall
or
icebp
imul
filds
jo
sahf
sbb
add
and
jb
aaa
mov
icebp
lcall
inc
fildl
data16
andb
mov
sbb
int
push
sub
xchg
jns
push
test
or
inc
add
pop
mov
lea
pop
je
pop
cmc
and
push
mov
push
insl
rorb
js
test
mov
push
ss
sub
fcomps
push
jmp
movsl
mov
sub
jae
push
insl
adc
inc
mov
inc
dec
push
or
hlt
dec
adc
orb
jmp
testb
jne
clc
push
mov
adc
into
adcl
cmpsl
in
add
mov
lcall
sbb
jo
in
dec
xor
insl
adc
and
enter
push
rclw
ds
mov
ss
mov
push
sub
or
aaa
pushf
mov
dec
incl
sbb
adc
lods
mov
xchg
inc
sub
xchg
lods
jl
mov
or
and
xchg
mov
fstpt
jne
jmp
frstpm(287
loopne
out
or
push
arpl
loope
insb
jl
sbb
lock
in
mov
jno
lock
dec
xchg
pop
jle
xchg
add
xchg
sub
xchg
lock
or
je
sub
inc
loope
mov
clc
subl
push
ss
lock
inc
push
or
mov
jne
and
push
mov
mov
clc
dec
inc
push
lock
add
add
lods
push
mov
push
hlt
outsb
subb
fnstcw
aam
adc
and
inc
adc
mov
and
mov
jmp
test
sbb
decl
mov
adc
orl
mov
hlt
into
add
icebp
push
loopne
cmp
push
xchg
cmp
or
rolb
and
ss
push
push
pop
loopne
add
pop
push
push
aam
std
jb
push
adc
mov
mov
lock
or
dec
xor
and
notl
xor
sub
rclb
mov
or
ss
inc
xor
xor
jnp
es
lret
push
scas
xor
mov
push
mov
add
jl,pn
and
inc
test
jno
aad
push
or
or
mov
push
jae
mov
adc
loop
pop
cld
xlat
je
cmp
adc
cmp
jb
testb
push
push
add
inc
loopne
and
add
inc
or
mov
jbe
push
movb
fldcw
test
cmpl
adc
divb
cmp
fcoms
orb
push
or
lahf
inc
or
flds
call
imull
repz
cmp
mov
rcll
jecxz
inc
or
mov
xchg
aam
jno
mov
xor
adc
les
pop
mov
pop
add
mov
xchg
push
inc
pop
pop
pushf
or
pusha
cltd
pop
mov
je
sub
aad
push
push
pop
or
imul
and
pop
sub
sbb
outsb
je
push
xor
cli
adc
xor
lea
or
adc
ljmp
cltd
cmp
repz
pop
jo
fcoms
sbb
jmp
popl
sbbl
in
and
dec
je
into
inc
xlat
cmpl
push
dec
sbb
sbbb
sbb
mov
mov
divl
and
or
sub
mov
push
mov
xlat
add
mov
shlb
rcl
pop
ret
ljmp
je
cmp
xor
out
loope
enter
xor
inc
jnp
sub
cmp
mov
xor
rorl
xor
sbb
push
test
cmpsb
int3
mov
in
movsb
push
or
adc
fldt
sbb
sbb
xchg
xchg
xchg
sub
xor
test
and
mov
ss
and
inc
cmovs
daa
daa
push
push
pop
add
pop
pusha
fs
insb
jo
js
and
jl
sbb
cltd
movsb
adc
mov
xchg
cwtl
pushf
cltd
fs
dec
mov
mov
sub
test
and
test
add
lock
and
and
imul
mov
or
clc
insb
movsb
dec
adc
cld
adc
or
sbb
inc
push
dec
dec
or
sbb
and
or
test
inc
insb
pop
pop
adc
mov
pop
cmpsb
xchg
xchg
sbb
ret
cmp
add
sbb
mov
inc
dec
inc
and
xorl
nop
inc
adc
sbb
sub
mov
cmp
mov
xchg
mov
add
add
xchg
fs
and
insb
es
xchg
push
jle
mov
push
pop
das
add
int3
lcall
repnz
sub
push
adc
out
add
pop
int
sbb
dec
push
pop
fadds
jne
jns
push
xor
or
and
push
outsb
cltd
jne
mov
and
fcomp
pop
pop
dec
mov
pop
cmp
add
mov
sub
push
push
je
jne
ret
scas
rol
arpl
incb
mov
sub
add
fmuls
addb
push
popf
push
push
int3
sbb
outsb
sbb
inc
lcall
pusha
pusha
xor
sbb
or
xorl
pushf
mov
in
sub
mov
loopne
inc
jmp
jge
inc
adc
pop
sub
dec
push
add
gs
push
popa
in
popf
add
jmp
repz
enter
cmp
mov
inc
add
call
add
jmp
sbb
push
xor
push
test
fwait
mov
inc
push
mov
test
adc
add
xor
adc
jo
lods
xchg
jmp
je
in
and
dec
xor
idivl
adc
push
lock
xor
loopne
addb
shl
push
pand
add
and
push
push
inc
inc
dec
mov
xor
pushl
xor
test
outsb
or
inc
mov
pop
les
int3
add
and
or
or
push
push
in
mov
push
outsl
jmp
lea
jp
pop
lea
adc
mov
cvttps2pi
adc
and
sbbl
xor
inc
add
and
or
and
mov
push
insb
imul
mov
push
push
fcmovnb
movsb
push
test
mov
rcr
xchg
insl
jmp
jle
sbb
aas
add
pop
shlb
cmp
xor
jne
add
add
lret
push
ja
push
jecxz
jp
pop
mov
xchg
cs
lea
push
and
in
out
addb
add
sar
mov
aas
mov
add
cs
pusha
neg
pusha
ret
xchg
adc
and
cmc
nop
rorb
ficomps
xchg
and
push
adc
jnp
popf
add
mov
inc
sbb
push
inc
insb
push
dec
ljmp
add
push
inc
pushl
mov
popf
mov
cmp
sbb
sarb
xchg
xchg
add
aas
cmp
sbb
ret
popf
pop
addl
pop
outsb
xchg
sbb
jns
sbb
mov
outsb
pop
pop
inc
adc
mov
pop
cmp
mov
call
mov
xchg
dec
inc
adc
push
hlt
mov
cmp
rorb
test
jmp
ljmp
mov
fdivs
cmp
fsubs
icebp
adc
inc
push
xchg
push
mov
movl
daa
xchg
or
add
jo
pop
xchg
push
es
add
out
inc
loop
lods
jnp
xor
cmp
pusha
xchg
sbb
xchg
cmp
inc
cmp
inc
dec
lea
jl
shll
xchg
or
jns
jg
xor
sarl
cmp
test
mov
or
add
test
push
or
push
add
jo
inc
mov
cltd
cmp
aaa
sbb
cmp
jne
movd
popa
xchg
cmp
rorl
add
inc
int
popf
ficomps
push
jmp
inc
movsl
jae
outsb
pusha
lock
iret
test
add
sub
sahf
stos
cmp
fcomps
decl
push
test
fisttps
cmp
sub
ds
test
inc
mov
sbb
movsl
call
xchg
sbbb
rolb
or
out
mov
mov
in
jbe
popl
xchg
mov
andl
fs
pop
push
cmp
cli
pop
divl
mov
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fmuls
mov
sub
and
out
loopne
sbb
inc
add
test
daa
jmp
cmp
nop
pop
gs
or
xor
push
cwtl
sub
rclb
inc
lods
push
subl
out
pop
push
or
inc
inc
sbb
repnz
mov
and
mov
or
xor
xchg
add
push
sarl
dec
mov
lcall
mov
add
jbe
add
xchg
push
xchg
sub
inc
out
or
xor
les
pop
and
or
sub
ss
rcrb
fs
std
adc
pop
gs
subb
fisttpll
sbb
jns
sub
mov
jo
lret
jmp
or
or
repz
fiadds
jl
lea
and
mov
pushl
lods
lret
xchg
xchg
ja
lcall
insb
ljmp
pop
cmp
sbb
xor
jnp
jbe
ret
mov
aas
pop
leave
nop
push
cmpb
cwtl
fdivrl
sbb
shll
cmp
pop
and
or
test
and
or
pop
push
and
leave
je
aaa
mov
xor
stos
or
push
mov
sub
roll
xchg
sbb
scas
cs
test
inc
clc
mov
lods
inc
clc
or
outsl
push
push
adc
add
pop
ja
add
dec
adc
popa
add
jmp
or
mov
adc
and
add
int
ljmp
push
fimull
add
inc
dec
cli
fstpt
xor
adc
add
add
jge
lea
add
movsl
hlt
aas
and
dec
push
and
mov
stos
and
data16
fstl
mov
fwait
pop
push
lock
ret
pminsw
daa
jle
pop
inc
inc
push
mov
out
lods
mov
pop
inc
fimuls
lods
add
add
fnstcw
or
push
cmp
inc
xchg
cmpb
push
inc
pushl
xor
sub
popf
in
and
sbb
sub
mov
or
dec
or
sub
cmp
ss
adc
push
xlat
pop
into
mov
dec
pop
inc
out
nop
xchg
or
arpl
stos
jecxz
and
sbb
fstp
rorb
ja
in
stos
add
dec
out
stos
jge
sbbb
orl
xchg
push
test
or
adc
cmpsl
faddp
es
clc
push
jne
in
xchg
fmuls
and
pop
pop
out
loop
adcb
push
pop
lods
pop
push
xor
pop
lods
pop
pop
mov
inc
and
jg
add
sub
push
push
scas
mov
je
xor
loopne
dec
add
xor
pop
daa
and
jle
mov
js
mov
mov
cld
stos
popf
jbe
pop
jmp
push
and
outsb
lahf
and
je
inc
cmp
shlb
addr16
xor
test
add
js
pop
sbb
add
push
push
add
push
adc
inc
pushf
test
mov
clc
add
fistps
adc
and
push
jmp
xchg
pop
add
test
lret
jae
dec
inc
sarb
mov
loopne
test
xor
dec
cmp
mov
mov
test
loop
jle
mov
pop
addb
sbb
mov
pop
movsl
cmp
and
mov
add
sbbb
push
and
fs
sbb
pop
or
adc
rclb
xchg
mov
cmp
mov
pop
shrl
inc
std
mov
pushf
and
push
loope
sub
inc
insb
movsb
je
sti
mov
std
sub
xchg
sub
int3
jne
adc
mov
cs
sub
dec
and
dec
sbb
sub
les
or
sbb
dec
test
mov
xor
gs
pop
clc
mov
cmp
push
push
jb
dec
xor
dec
dec
loop
roll
mul
push
pop
sub
dec
jbe
jbe
mov
mov
mov
fldenv
loope
insb
cld
cmp
push
xchg
adc
aas
sbb
mov
repnz
das
adc
inc
fdivl
dec
inc
insb
nop
mov
jle
add
and
neg
bnd
or
or
add
sub
mov
ror
lcall
sbb
xchg
add
mov
movsb
data16
xlat
lcall
in
movsl
add
adc
xchg
mov
push
mov
mov
jne
and
mov
mov
mov
dec
or
ror
sbb
xor
lret
mov
jmp
add
add
in
adc
or
add
adc
dec
inc
adc
inc
push
repz
lcall
adcl
dec
push
popf
pushf
pop
sub
je
push
popf
daa
adc
insl
ds
cmp
test
xor
mov
pop
pop
sub
je
lcall
adc
and
and
jo
push
push
imul
inc
clc
cmp
fisttpll
test
push
or
and
nop
push
lock
sti
or
push
mov
xchg
test
and
add
or
or
jns
or
nop
fcmovnu
lea
add
shll
dec
xor
adc
divb
leave
and
shr
xchg
fildl
add
gs
sbb
test
outsb
les
lock
test
adc
enter
test
add
mov
xlat
out
pop
add
push
inc
lret
sbb
fs
or
or
sub
sbbl
pop
clc
incb
leave
add
std
or
jmp
inc
and
mov
adc
dec
mov
aaa
jecxz
mov
cltd
pushf
jge
add
or
daa
lret
pop
mov
loope
mov
mov
jge
jge
je
sbb
loope
mov
adc
add
shl
out
aas
pusha
mov
pusha
loope
pop
sub
or
pop
mov
adc
fnstsw
pusha
cmp
push
pusha
fldl
cmp
sbb
sbb
fadd
add
lret
std
inc
testb
push
es
adc
mov
add
add
test
ret
clc
fisttps
push
jg
mov
adc
or
sub
push
es
mov
or
push
mov
cmp
and
sbbb
xorb
sbb
jmp
push
and
inc
add
adc
pop
xchg
movb
push
fld
add
or
pop
push
adc
mov
mov
adc
inc
sub
std
adc
jbe
in
dec
or
sub
ficoms
popa
fstpl
jne
push
mov
sti
lret
sub
mov
or
xchg
sahf
inc
aam
xchg
push
xchg
cmc
mov
fsub
jl
fcompl
mov
std
testb
add
sub
sub
and
pop
jbe
xor
jp
push
shrb
jae
mov
dec
repz
inc
test
int3
adc
rcll
repz
es
sub
lods
clc
mov
adc
fstpl
xor
mov
imul
std
add
repz
or
mov
inc
movl
jle
imul
or
repnz
mov
test
iret
or
insl
in
or
pop
orl
mov
jle
or
push
sahf
jmp
pop
rol
test
pusha
aam
cld
xchg
and
decb
push
and
mov
pop
and
add
out
lret
loopne
mov
push
add
add
cmp
sbb
pop
inc
or
push
test
jle
sub
pop
or
out
xor
or
xchg
xchg
add
mov
outsb
or
cs
adc
mov
je
jno
test
jl
mov
adc
inc
movsl
add
adc
add
adc
hlt
adc
rol
and
and
pop
mov
push
pop
sbb
test
mov
push
sbbl
sub
lds
mov
dec
inc
add
lods
or
pop
loope
cmp
add
or
inc
orl
insb
dec
push
in
fdivl
mov
cmp
mov
fsubrl
mov
in
add
imul
sub
add
sti
pop
in
cmp
and
or
adc
and
sub
or
test
sarb
xchg
dec
or
popa
push
mov
jae
and
out
dec
jb
fnstsw
adc
jns
mov
xor
data16
pop
std
mov
mov
sbb
pop
cld
push
popa
mov
data16
and
sub
cs
mov
cmpps
sahf
stos
xchg
or
movsl
xchg
icebp
lock
or
popf
mov
in
gs
xchg
movsl
lcall
jmp
lds
adc
push
and
push
inc
adc
cmp
add
into
mov
fsubrs
mov
sub
mov
cwtl
sbb
push
xor
test
cmpsl
push
dec
in
dec
pop
or
mov
sub
icebp
sbb
das
mov
or
or
inc
inc
add
or
push
out
mov
and
mov
mov
cld
push
add
sbb
sub
call
ljmp
lock
jb
aad
push
fstpl
sbb
adc
mov
imul
loop
inc
flds
or
addl
jnp
sbb
mov
or
cld
mov
adc
fldt
add
adc
int3
and
sbb
mov
and
jle
call
test
jb
mov
inc
dec
out
jo
push
cli
mov
je
mov
loopne
test
cli
call
push
mov
xchg
and
and
xchg
jo
test
and
clc
inc
outsl
ljmp
adc
add
push
mov
cmp
test
inc
jbe
dec
adc
mov
sbb
std
cli
mov
fidivrs
iret
push
inc
shlb
push
pusha
xchg
adc
out
insl
and
cmp
xor
mov
push
outsb
jo
ja
mov
jnp
and
and
clc
or
sub
xor
dec
adc
add
cmp
jo
push
add
push
dec
push
mov
je
mov
push
push
mov
mov
psubq
xchg
inc
fisttpll
lods
ror
imull
jmp
add
or
adc
enter
jno
filds
loope
add
sahf
lods
or
cltd
lret
add
les
xor
adc
dec
push
dec
call
jle
mov
dec
cmpw
int
push
adc
mov
or
ret
xchg
addl
mov
push
mov
orb
mov
loopne
subb
push
dec
push
or
add
ljmp
out
sub
add
adc
mov
dec
push
add
daa
mov
pop
test
jne
xchg
jno
or
jl
mov
pop
mov
push
stos
stos
test
js
sub
inc
xor
aam
xor
loope
dec
mov
loop
add
rcrb
pop
inc
imul
loopne
mov
jl
push
subb
inc
shl
xchg
push
ret
test
pop
inc
dec
ja
pop
aam
loop
rolb
adcl
aas
xor
repz
push
cltd
insb
pop
and
pop
hlt
int
mov
out
mov
inc
insb
sub
mov
jbe
dec
mov
add
scas
test
dec
orb
and
lahf
imul
cli
sbb
dec
cmp
jmp
jb
or
jb
incb
jae
insb
scas
adc
dec
mov
adc
mov
roll
movsb
aaa
pop
test
pop
and
or
test
aad
loopne
push
add
hlt
ljmp
sti
cmp
dec
dec
stos
inc
and
popa
xchg
or
psraw
jmp
dec
xor
push
imul
mov
movsl
cmpb
xor
or
sub
sub
adc
mov
sub
not
in
popf
je
rolb
pop
and
pop
ds
push
or
lock
mov
or
mov
jl
mov
shl
sbb
pop
sub
sarb
je
mov
cltd
xchg
aam
movsb
jge
sbb
xchg
test
pop
in
addr16
dec
mov
hlt
test
pop
push
jl
lea
adc
sub
inc
ljmp
add
cli
int3
push
inc
lret
cmovg
sub
pop
xor
pop
icebp
movaps
divb
mov
dec
jns
lock
push
inc
lock
inc
jo
inc
mov
sbb
mov
jecxz
loopne
xor
sbb
mov
xchg
inc
mov
add
dec
xor
mov
pop
andl
xor
mov
push
mov
iret
and
mov
out
and
jle
popa
push
pop
add
inc
lcall
sub
shl
or
mov
add
mov
or
sbb
inc
fs
mov
nop
inc
outsl
stos
in
loop
aam
add
stc
and
bound
enter
pop
pop
xchg
jne
repnz
push
daa
jne
adc
xchg
push
or
adc
adc
adc
adc
daa
je
sbb
lahf
adc
or
push
and
mov
cmp
sbb
xchg
and
sub
jle
add
in
leave
push
adc
lcall
add
movsb
mov
pushf
icebp
xchg
adc
pop
imul
jo
push
ret
jne
mov
lcall
aad
or
jmp
xor
sub
or
cwtl
das
add
test
mov
sub
cmp
ja
add
adc
push
dec
jmp
fs
jecxz
fisubrl
mov
rolb
or
jle
sub
cli
xchg
mov
ret
jp
adc
jmp
ljmp
jmp
andl
pop
sar
jmp
cmpsl
mov
mov
lods
push
sub
mov
or
inc
setne
pop
mov
inc
jle
cmp
push
xor
mov
add
orl
js
sub
jbe
push
lods
out
push
xlat
in
sub
sub
mov
sbb
mov
jae
mov
ret
mov
jo
dec
sbb
xorl
push
pop
jge
pop
cmp
fucomp
sahf
mov
nop
add
jne
jns
push
xchg
dec
dec
jae
imul
sbb
jb
cmp
mov
outsb
sbb
dec
jo
call
decb
jae
sti
pop
push
sub
rorb
cmp
in
orl
mov
fisttpll
pop
aas
push
and
inc
ret
daa
or
sub
cmp
mov
pop
shlb
stos
sub
mov
aaa
shr
pushl
mov
shll
test
mov
add
mov
xor
mov
pop
cmp
sbb
ret
mov
add
inc
testl
hlt
inc
xor
fdivp
pop
push
dec
addl
jmp
cld
push
sbb
and
dec
or
imul
mov
stc
push
adc
lahf
mov
jecxz
add
int3
push
adc
push
cwtl
pop
mov
sbb
sbb
into
dec
in
and
inc
jne
jmp
inc
dec
pushf
xor
test
incl
or
jge
neg
add
mov
orb
movsb
sub
cmp
dec
les
cmp
adc
mov
sbb
ret
popl
enter
mov
sbb
jle
jne
das
mov
lods
inc
out
dec
test
dec
cld
add
cli
push
jne
imul
mov
sbbl
rorl
push
mov
orb
test
mov
pop
je
sub
cmp
or
mov
sbb
mov
jg
icebp
mov
ret
and
mov
into
nop
fs
imul
mov
std
mov
mov
mov
or
gs
es
scas
movb
testl
mov
adc
les
test
int
cmovbe
jne
inc
or
cmp
lods
mov
jne
hlt
int3
add
jne
add
jmp
mov
mov
jp
test
rcrl
pop
insl
inc
imul
cmp
mov
mov
jp
orl
add
lock
sub
in
push
add
sahf
sub
sub
xor
stc
jg
add
mov
fcoml
hlt
dec
push
test
js
les
outsb
mov
shll
hlt
push
add
mov
lock
add
shl
js
push
out
mov
push
cld
fnstsw
or
adc
inc
mov
les
aaa
add
notb
data16
pop
mov
ss
idiv
dec
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
inc
or
jne
insb
mov
ret
push
push
pop
movsb
cmpsb
mov
and
mov
mov
jge
cmp
add
fcmovb
sahf
mov
sti
pop
cmpb
or
call
or
scas
fidivl
jl
fidivrl
jb
sbb
inc
jno
push
fmull
pop
nop
dec
ja
cmp
add
cmp
mov
mov
xor
into
jmp
scas
xlat
jge
mov
xchg
rolb
add
xor
loope
xor
mov
cmp
int3
mov
xorb
lret
das
mul
popf
adc
negb
jns
sbb
movups
cmp
and
ret
or
adc
inc
push
xchg
xchg
add
inc
push
sbb
stos
repz
repz
add
xor
out
sahf
out
cmp
mov
inc
lcall
lahf
inc
sbb
push
jmp
inc
loope
jmp
inc
add
mov
dec
pop
pop
jne
cmp
and
inc
push
add
scas
inc
mov
mov
mov
mov
mov
aaa
adc
adc
mov
movsl
push
or
test
imul
adc
xchg
xchg
adc
inc
cs
cmc
or
ss
cmp
je
or
pop
or
out
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
out
ficoms
adc
add
mov
sbb
sub
pop
mov
je
out
clc
arpl
inc
or
sbb
xor
add
add
mov
das
rcll
es
add
push
das
pusha
xchg
notb
pop
jno
cs
or
in
and
cmp
dec
sbbb
xchg
sub
pop
xchg
mov
cmc
jmp
xchg
and
adc
rorb
or
add
outsl
and
test
rorl
mov
shll
test
dec
setg
sub
out
clc
add
mov
and
sbb
loopne
aas
sub
movb
lea
sarb
mov
cmp
jecxz
iret
sbb
xorb
mov
insb
dec
xlat
xchg
es
les
cmp
jmp
sub
add
add
je
pop
push
pop
xor
ret
fs
add
mov
dec
inc
out
cs
jae
and
dec
jns
les
sub
xchg
fs
ficomps
dec
in
test
or
mov
jne
add
testb
inc
add
popa
mov
lea
push
push
pop
daa
push
or
inc
or
sub
inc
or
xor
adcl
adc
loopne
call
adc
or
ja
add
add
push
ret
jbe
lock
dec
adc
jge
ja
sub
sub
adc
lahf
adc
or
cmp
xor
and
xchg
push
sbb
lmsw
pop
push
jo
je
and
enter
daa
mov
bound
pop
jo
fldl
rcll
and
jle
imul
lcall
xor
call
adc
jmp
pop
xchg
fldl2t
out
lret
in
in
xor
jge
ret
adc
rorb
and
push
fcoml
add
mov
icebp
and
add
mov
pop
push
inc
add
int3
movsl
test
add
or
sar
push
ss
lea
faddp
std
add
mov
or
adc
add
xorl
negb
cmp
xor
push
je
and
dec
loopne
js
dec
push
clc
push
mov
pushf
imul
cmpsl
cmc
aaa
js
loope
add
mov
xchg
and
popf
and
adc
mov
pop
or
inc
neg
sbb
jecxz
loopne
jg
mov
jg
ret
daa
xor
or
jne
pop
cmp
daa
cmp
and
ficoms
jnp
scas
test
cmp
or
xor
push
mov
sbb
xlat
or
in
bound
xor
sub
fsts
and
push
sub
adc
dec
adc
and
je
inc
pushf
push
movswl
les
loopne
pop
dec
pop
data16
aaa
cmp
inc
mov
ret
mov
cld
add
dec
shrd
push
leave
xchg
add
cmp
std
mov
jge
sbb
jecxz
stos
imul
xor
incl
xlat
xchg
stc
inc
add
dec
jmp
pusha
mov
sub
xorl
sub
pop
push
dec
data16
inc
call
rolb
push
mov
add
and
mov
cmp
adc
sbb
je
inc
out
and
add
pop
sbb
js
jg
jb
mov
push
sub
or
fidivrl
rorl
jl
add
lcall
nop
addb
jbe
add
push
xchg
not
mov
mov
push
jg
lods
jb
lret
ss
dec
inc
dec
pop
pop
xor
or
sbb
add
mov
mov
cmpsb
stc
mov
daa
aam
and
es
sbb
js
int
scas
aaa
es
int
push
daa
inc
std
sbb
call
loop
call
loope
or
and
inc
rclb
pusha
inc
sub
dec
push
cwtl
or
sbb
lock
inc
sub
mov
call
es
jne
orb
stos
mov
mov
push
mov
add
or
pusha
daa
out
into
mov
adcb
xor
filds
sbb
test
or
pop
or
add
pop
push
nop
dec
ds
shl
jne
cmp
dec
mov
inc
lret
jbe
sbb
mov
inc
rorb
push
push
lea
mov
stos
sub
icebp
cmpsb
sti
and
adc
push
insl
push
jmp
insl
cmp
cld
cld
jl
fmull
mov
mov
push
clc
adc
pop
incb
mov
loop
mov
push
jmp
xor
jle,pt
inc
pop
jge
clc
gs
lock
fstp
or
pop
data16
lea
pop
aaa
out
aaa
sub
push
pusha
fs
je
dec
out
xor
adc
aas
xor
jmp
dec
mov
and
cmp
inc
cmpsl
sbb
or
sub
cmp
adc
bound
inc
jl
add
idivb
adc
call
jne
fmull
insl
push
pop
clc
flds
or
or
inc
leave
push
aaa
outsl
push
push
pop
mov
inc
dec
rolb
ret
xor
and
or
pop
mov
pop
adc
xor
dec
out
test
add
rolb
mov
mov
int3
add
xchg
clc
jmp
pop
decl
mov
cmpb
jne
jp
adc
pop
cmpsb
sahf
xor
les
cmp
jmp
and
jp
cmp
add
fcoms
aam
jo
movl
mov
je
lahf
xor
dec
cld
fisubrl
cmpsl
lahf
dec
push
sub
and
leave
sub
push
hlt
sbb
dec
popf
ret
mov
mov
dec
fmull
add
aaa
mov
add
mov
or
sub
pop
fcmovu
or
cmp
sub
das
fwait
push
sub
mov
jp
xchg
cs
inc
mov
sbb
xor
in
jmp
insl
pop
cmp
cltd
shll
pusha
mov
or
pop
cmpl
js
push
or
push
data16
or
dec
push
mov
dec
adc
popa
pop
push
jbe
and
scas
imul
movsl
xchg
call
jne
or
add
pop
les
and
add
fmull
jnp
mov
sbb
add
jbe
jge
pusha
js
dec
mov
lock
test
testb
or
je
add
jnp
aas
int
lock
push
dec
repz
pop
cmp
lea
push
mov
icebp
daa
xorb
mov
in
adc
xchg
xor
nop
add
ja
clc
or
xchg
sbb
jle
fmuls
dec
cmpsl
test
hlt
jmp
or
jmp
testb
je
push
ljmp
inc
aam
add
negl
ss
sbb
and
dec
shrl
les
fldl
arpl
add
mov
imull
adcl
rcll
xchg
js
gs
cmp
mov
dec
push
jecxz
das
jne,pt
ljmp
mov
inc
data16
or
jns
dec
or
into
push
leave
test
jbe
fdivl
push
push
mov
frndint
cwtl
adc
fs
or
add
mov
jecxz
push
push
jbe
mov
addr16
jns
jne
test
mov
loope
cwtl
mov
mov
push
xor
add
mov
mov
adc
push
push
sbb
mov
mov
faddl
movl
rorb
insb
pusha
xor
xlat
rorb
cmp
jge
notl
jecxz
enter
cmp
push
pop
mov
or
push
dec
mov
sbb
das
add
jle
or
dec
fiadds
arpl
and
xor
cmp
sbb
inc
jmp
arpl
dec
lods
bound
xor
ss
es
stc
inc
inc
test
data16
sub
sub
aam
sbb
push
push
es
outsl
call
outsb
and
mov
mov
jmp
test
clc
push
dec
mov
xor
cltd
test
sar
mov
inc
mov
or
fcomi
sarb
mov
inc
in
adc
and
dec
sub
repz
add
push
lock
dec
jmp
jge
dec
push
loope
mov
dec
and
movups
push
dec
jle
mov
popa
adc
lods
cld
sub
leave
clc
push
xchg
mov
dec
movsb
cmp
pop
jbe
and
jmp
cmpsb
mov
adc
mov
sbb
sysexit
outsl
ret
int3
jp
ljmp
inc
jmp
test
adc
leave
jae
add
test
fimuls
nop
adc
sub
adc
movsl
sbb
sbb
test
loope
pop
fmull
movsb
lea
and
adc
inc
push
and
pop
mov
mov
xchg
add
lret
and
setno
insb
mov
cmp
mov
inc
mov
orl
mov
out
pop
dec
push
subb
sbb
sbb
cmpsb
ja
sti
and
sbb
or
cs
adc
test
adc
xchg
cmp
jge
adc
or
sbb
rcl
inc
pop
push
push
ss
add
cmpl
cmp
pop
adc
jg
mov
cmp
lea
or
dec
add
lahf
and
shr
add
or
fildll
aad
shr
shr
mov
loopne
or
mov
add
add
or
bound
scas
push
andl
xor
mov
cmp
add
fildl
xchg
into
pusha
and
ljmp
jp
add
cmp
fnstcw
inc
testb
add
ds
lock
dec
add
lea
mov
shr
sub
mov
adc
mov
cs
sub
mov
mov
repnz
add
dec
dec
lret
enter
stc
out
or
sar
inc
jbe
sbb
push
outsb
and
sub
cmp
shr
adc
xchg
or
shl
andl
adc
aad
dec
lret
sbb
sarb
ds
clc
loopne
sbbl
int
loope
test
adc
ficoml
dec
call
dec
sbb
shrb
sbb
inc
xchg
cmp
movsb
ficoml
mov
in
add
mov
call
push
je
pop
mov
push
add
jns
pop
call
cmpsl
push
cld
fidivrl
aaa
sub
jne
add
call
sub
in
or
into
adc
inc
push
adc
je
sbb
adc
xchg
mov
aam
test
add
adc
push
mov
push
push
mov
mov
jle
adc
push
fs
mov
ja
les
adcb
or
pop
cmp
cmp
leave
inc
xor
mov
or
cmp
lock
aaa
pop
lret
adc
xor
cmpb
idiv
or
cmpsb
inc
add
mov
push
test
push
roll
loopne
stos
push
adc
inc
scas
orl
push
push
and
movsl
nop
iret
ds
inc
adc
aad
inc
lret
jne
sub
pop
or
sbb
stos
inc
cmp
sub
and
add
inc
adc
pushf
push
lock
mov
jbe
dec
add
xchg
shl
or
or
push
out
or
test
adc
pop
lods
out
push
fcmovu
add
shll
mov
je
mov
dec
jo
or
cmc
dec
adc
daa
jge
rdpmc
mov
or
pop
pop
mov
aaa
and
sub
pop
mov
ljmp
mov
push
popa
xor
mov
hlt
aam
push
jp
les
fs
jmp
cwtl
add
imul
ret
enter
test
sub
inc
inc
mul
fstl
cld
neg
neg
sbb
sub
sahf
dec
ficoms
sbb
test
faddl
mov
adc
sbb
push
or
out
inc
and
fsts
fcomi
sbb
xchg
gs
sbb
and
test
dec
repnz
jbe
test
pop
pop
sub
sub
adc
xchg
mov
adc
lods
rcl
ljmp
dec
and
shr
test
stc
jecxz
cmpsl
test
push
idiv
and
not
cld
lock
je
mul
sub
jb
or
add
pop
or
dec
mov
inc
je
mov
fcmovu
pop
jecxz
lods
add
pop
movsl
es
inc
in
jle
sbb
and
jne
xchg
lds
or
mov
or
into
jbe
jns
cmp
loop
aas
mov
test
movsl
jae
pop
mov
add
push
jb
sub
jo
iret
cmp
pop
cld
sbb
add
push
mov
sahf
push
sbb
and
push
or
jo
and
mov
pop
lea
popa
mov
adc
or
push
iret
or
push
int3
push
fwait
cltd
mov
ss
dec
pushl
add
dec
fidivs
jg
add
mov
in
jge
ret
push
dec
loopne
and
leave
jne
sub
push
sbb
lock
mov
leave
je
lcall
ret
mov
mov
mov
out
es
mov
je
dec
xor
mov
push
cmpsb
jns
cmp
ja
add
cmp
adc
cmp
jne
push
shll
leave
adc
mov
xor
idivl
pop
ss
xor
mov
push
sbb
push
orl
xor
and
insl
or
lahf
mov
sub
cmp
es
sbb
sbb
clc
or
or
jmp
neg
je
mov
push
push
fs
mov
arpl
dec
pop
push
nop
cmp
jecxz
push
pop
dec
or
and
sbb
mov
pop
mov
movsl
xchg
cmpsl
clc
jne
mov
dec
loope
xor
insb
add
les
dec
cmp
arpl
in
jmp
mov
dec
aaa
pop
mov
js
sbb
test
jg
std
scas
mov
xlat
mov
jno
test
femms
gs
xor
adc
mov
sub
xchg
cmp
sbb
mov
aam
push
xor
and
mov
sti
cltd
mov
add
call
sbb
mov
xor
or
adc
orl
jle
dec
mov
movb
push
rcl
rcl
lahf
out
sahf
aad
xlat
fcomp
add
and
fstpt
mov
xor
add
lcall
mov
sub
jne
cmp
test
or
test
filds
mov
mov
add
push
adc
and
inc
push
add
jnp
outsl
aas
jne
mov
push
divb
push
mov
fs
call
jmp
icebp
adc
cmp
das
pusha
jnp
scas
or
push
push
add
add
adcl
add
push
sbb
push
popa
lcall
mov
imul
or
mov
lea
imul
lea
sar
inc
sbb
fsubs
push
insb
inc
or
fisttpl
mov
ljmp
loop
or
pushf
mov
adc
sub
push
push
adc
mov
add
adc
fisubs
sub
movsb
mov
aaa
jle
or
inc
into
es
mov
decl
cmp
inc
add
hlt
bound
and
ljmp
testl
mov
and
and
lea
pop
sbb
loop
lods
or
jae
psubw
ja
arpl
sbb
jno
push
push
pop
mov
pop
les
in
ljmp
loopne
inc
or
sbb
les
sbb
lret
xchg
pop
mov
jne
rol
sub
mov
repz
test
rolb
push
mov
pop
fildll
or
mov
mov
mov
cwtl
or
int
push
mov
movsb
sub
cmp
sub
shll
out
repz
addl
mov
jge
jl
insl
orl
sub
stc
jle
jle
test
cs
dec
enter
add
or
or
and
negl
cld
hlt
rorb
push
push
push
lret
mov
inc
call
clc
push
push
call
lods
ss
shrl
insl
add
in
out
xchg
mov
push
lret
dec
iret
and
add
lock
cmpsb
jb
repnz
sahf
lret
cli
cli
inc
cli
mulb
push
xor
or
ljmp
sub
lret
sbb
adc
js
lret
or
mov
clc
xchg
and
sbb
inc
leave
fnstenv
mov
and
clc
mov
mov
dec
rolb
pop
xor
mov
xchg
add
mov
out
stos
mov
sbb
repnz
pushw
sub
cmpsb
or
clc
out
jge
les
mov
and
xlat
sub
mov
sbb
xor
outsb
das
cli
or
sub
jne
add
cmp
ss
inc
test
nop
and
jge
test
and
lods
dec
xor
lahf
and
dec
mov
xor
call
fisubs
push
cmp
cld
lea
fiaddl
jns
mov
les
sub
je
adc
lods
lods
rolb
cltd
je
dec
les
mov
inc
sbb
mov
negb
movb
jns
test
mov
enter
out
or
jge
adc
xorl
lock
jmp
add
and
sbb
in
cmc
xor
jp
push
mov
into
mov
adc
je
cwtl
jno
ja
sub
insb
sbb
adc
inc
add
inc
mov
sbb
popa
mov
add
push
nop
cmp
cmp
cli
es
adc
push
out
adc
or
dec
cmpsl
sub
mov
call
pop
add
or
push
hlt
cmp
shll
pop
adc
fcomps
xor
fiadds
negl
inc
imul
jmp
outsl
and
imul
loopnew
dec
jbe
movsb
fadds
lea
push
and
inc
ja
or
cltd
into
in
out
adc
pushf
rorl
or
xchg
mov
repnz
mov
add
lahf
stos
xchg
or
out
enter
jl
or
inc
sbb
inc
js
stos
jbe
push
movsb
xabort
mov
add
enter
test
ja
cmp
push
shlb
add
testl
jne
incl
mov
add
in
into
or
mov
inc
hlt
rcll
inc
in
rcl
and
dec
nop
dec
mov
dec
cmp
jge
pop
cmc
cmpsl
push
sub
cmpb
or
add
dec
cmp
jae
mov
add
add
fadds
add
adc
inc
pusha
repnz
jmp
add
or
dec
xor
mov
adc
and
add
push
add
cwtl
jbe
ret
adc
fisubl
enter
or
push
fcoms
test
out
sub
mov
mov
sub
inc
xchg
add
rclb
or
fisttps
jmp
shll
xor
xchg
push
or
and
push
or
or
pop
scas
add
adc
jo
dec
mov
inc
jo
pop
mov
pop
dec
xor
les
adc
or
jae
fcmovnb
push
aas
test
lret
lret
shll
cmp
xor
into
jne
xchg
xchg
pusha
inc
mov
call
add
rcrl
mov
add
ret
jne
or
cmpl
rorb
sbb
inc
push
pop
jae
or
movsl
test
adc
and
mov
or
mov
mov
push
je
dec
pop
or
jmp
aaa
mov
or
dec
pop
lahf
imul
cmp
push
test
and
and
or
and
imul
ret
add
jecxz
or
jg
nop
jp
push
push
xor
inc
rcrb
cld
cld
testl
inc
out
adc
push
stos
jg
sub
dec
or
xchg
xchg
adcb
enter
jge
mov
in
stmxcsr
cmp
loopne
bound
cltd
ss
or
add
xor
int
or
adc
sub
into
xchg
jle
cmp
mov
xor
inc
dec
dec
sahf
pop
jg
into
into
into
lea
and
aaa
js
outsb
pop
sub
push
pop
nop
pop
xchg
xor
cwtl
pop
mov
movsb
mov
or
pop
dec
mov
pop
add
push
aas
movsl
mov
dec
popf
pop
lcall
add
leave
lahf
pop
test
out
adc
add
adc
repnz
adc
repz
sub
or
je
test
dec
and
sbb
or
sub
jmp
mov
lret
xor
push
xor
rcl
sbb
out
push
push
add
pop
lret
push
jbe
test
inc
sbbb
cmp
xchg
test
mov
test
push
mov
xor
push
dec
loopne
adc
and
mov
jno
jle
xor
fwait
pop
movsb
ret
ficomps
adc
sbb
cmp
rcrb
and
daa
pcmpgtb
dec
or
and
adc
lea
sarb
addr16
ljmp
ljmp
xor
mov
or
inc
rorl
push
aad
mov
xor
adc
push
adc
scas
in
cwtl
orb
shlb
push
lock
dec
sub
shlb
push
jb
add
ds
je
cs
sarb
rorb
lret
in
daa
loop
inc
inc
int3
call
jle
xchg
lds
out
xor
inc
mov
push
adc
jbe
dec
loope
jmp
or
shll
xchg
push
or
icebp
shll
incb
ffreep
mov
movsl
into
inc
push
repz
sbb
xor
mov
add
test
xchg
adc
lods
test
leave
sahf
inc
xor
jmp
sub
mov
sbb
sbbl
mov
pushl
and
in
inc
test
je
test
frstor
das
push
xor
mov
aam
pop
pop
and
jb
inc
push
fcoms
add
pop
mov
and
jge
mov
push
adc
add
fs
cli
shlb
cs
pop
xchg
fcoml
and
rclb
ds
xchg
dec
sub
in
cmp
pop
and
jge
or
xchg
sbb
pop
push
sub
jae
add
xchg
jl
dec
stos
and
xchg
xor
add
jns
push
lods
push
sarl
xor
add
adc
cmp
adc
dec
es
ret
mov
out
aas
jo
rcr
ret
push
mov
add
add
lds
rorb
loop
jmp
push
push
xlat
xchg
mov
and
push
es
mov
scas
and
popa
sar
lea
add
lock
mov
xor
mov
inc
add
addb
push
inc
push
jne
push
inc
test
lock
das
lods
movsb
cmp
test
push
or
mov
xchg
fs
jmp
lock
fisubrl
mov
inc
das
push
and
inc
sub
rolb
sub
push
and
mov
and
push
sbb
std
add
rolb
fsubs
jle
pop
add
add
sbb
sti
add
cmp
or
sub
and
sbb
xchg
sbb
dec
rorl
aam
notl
lret
outsl
pop
add
addl
or
clc
adc
xor
push
lock
adc
sbb
jl
add
mov
pop
jl
nop
dec
lea
sub
add
enter
sbb
aad
js
fimull
loopne
xor
lock
dec
mov
pop
nop
push
push
mov
fcoml
imull
lock
jmp
dec
loop
push
sub
inc
add
ss
pop
xchg
outsl
push
sub
js
or
or
or
mov
mov
cld
sbb
inc
js
xor
jo
sbb
fiaddl
jae
inc
sar
fcompl
push
xchg
jle
rcl
sub
add
mov
mov
les
sbb
es
lret
lcall
push
and
lods
adc
inc
hlt
fcoms
pop
xor
sub
add
push
sub
adc
sub
mov
xchg
pop
testb
or
inc
inc
ds
add
and
sub
xchg
cwtl
shr
lret
or
cmp
add
mov
and
xorb
or
or
loop
pop
xlat
nop
int
push
pop
int3
pop
js
push
enter
push
shlb
daa
arpl
test
push
enter
mov
and
test
aam
es
imull
add
or
mov
inc
and
cmc
cmp
arpl
adc
js
mov
dec
add
add
push
mov
or
loope
bound
shlb
dec
xor
loopne
clc
out
or
cvttsd2si
mov
test
popa
sbb
rcll
add
pop
cs
lods
xchg
fildll
sbb
idivb
dec
adc
jmp
fstps
icebp
popa
arpl
xchg
and
add
mov
inc
data16
fcomp
adc
test
adc
pop
sbb
mov
dec
ja
xchg
je
and
pop
in
sub
dec
movsb
jno
imul
xor
outsl
xchg
or
dec
in
iret
mov
xchg
jo
popa
sub
mov
sbb
fdiv
add
fdivrl
in
add
imul
xor
cltd
nop
in
loopne
mov
insw
leave
and
jg
in
aad
xchg
adc
and
adc
les
jbe
adc
sub
mov
fcoms
fs
outsb
dec
add
in
cltd
bound
in
lock
cmp
inc
inc
nop
inc
mov
inc
sub
rcll
jo
and
dec
xor
sbb
jnp
xor
mov
xor
adc
ret
in
jle
add
adc
or
shrl
insl
add
ret
and
adc
jl
jge
dec
repnz
sbb
out
fisttpl
dec
sub
mov
jo
jmp
dec
in
insl
pop
dec
dec
push
stc
test
fs
jne
mov
orb
pop
xor
call
mov
fmull
cmp
dec
cmpsb
fcomp
je
dec
mov
jge
mov
sub
dec
sub
mov
mov
sbbl
mov
sbb
jg
adcl
push
pop
jl
call
aam
mov
xchg
fdivl
mov
adc
stos
push
sarb
or
pop
dec
outsb
push
in
movups
movsl
cmpsl
cmp
or
imul
pop
dec
nop
fdivs
mov
rcll
mov
pusha
add
mov
xor
push
cmp
sar
lock
pop
hlt
add
mov
and
andb
push
shr
and
and
mov
in
or
add
in
es
jb
pop
mov
add
in
inc
in
xorb
push
lds
or
inc
lock
clc
call
negl
cmp
pop
push
mov
loopne
cmp
movsl
int3
or
movsb
cltd
aam
mov
push
xor
daa
call
and
and
pop
or
xor
adc
or
adc
xor
dec
es
cmp
dec
es
fs
dec
fs
fwait
xchg
push
push
add
ficomps
xor
pusha
add
add
nop
outsl
sbb
int3
adc
nop
rcr
mov
test
call
and
fdivl
insb
outsl
fwait
mov
cwtl
inc
jne
inc
dec
in
sti
stc
or
fcmove
fwait
aam
nop
scas
and
in
push
adc
xchg
xchg
adcl
bound
lock
shll
roll
pop
inc
cmpsl
sbb
jns
arpl
xchg
pop
call
mov
test
cmp
add
and
add
push
repnz
sbbb
mov
iret
mov
movsl
aam
jp
gs
mov
or
pop
rcrb
cmp
mov
pop
sbb
mov
dec
aam
mov
pusha
mov
nop
andl
jmp
in
cwtl
fs
orb
inc
pop
fdiv
push
aam
sbb
mov
repz
stos
adc
mov
jo
out
lock
mov
daa
mov
xchg
popa
jg
gs
push
mov
cmc
adc
test
inc
mov
mov
or
enter
jge
shlb
xor
pop
fidivl
sub
movsb
cmp
adc
insl
dec
rcrb
xchg
mov
sub
test
clc
inc
mov
frstor
mov
xchg
out
fcomp
aam
pop
jb
mov
dec
or
inc
jb
lock
in
jbe
popa
test
lods
mov
in
in
mov
in
enter
dec
sub
scas
inc
movsb
push
lods
jmp
mov
movsb
mov
and
movsl
rorl
xchg
out
ret
sbb
cwtl
fimuls
push
aam
xchg
inc
aad
popl
das
nop
mov
mov
jns
gs
xchg
or
push
pushf
scas
mov
mov
das
push
test
out
popa
jmp
push
lock
nop
imul
inc
fiaddl
gs
push
jp
pop
mov
jnp
jl
mov
das
unpcklps
sahf
jno
aas
inc
adc
pop
fdivrs
test
and
repz
and
sbb
dec
jge
mov
inc
or
or
aaa
faddl
jle
nop
cmp
push
mov
mov
xchg
jl
lcall
adc
stc
test
mov
cwtl
cmpsb
or
fcompl
leave
mov
loope
dec
push
pop
leave
in
ss
cltd
fs
xchg
cmp
cwtl
ss
jl
cmpb
pusha
add
fidivs
lods
jns
inc
push
pop
xchg
dec
push
enter
mov
faddl
mov
xor
shrl
nop
lock
dec
jne
add
cmpsl
inc
xchg
ss
test
aas
test
cmc
cmpsl
push
test
xchg
lret
nop
push
mov
sub
fcmovb
xor
movsl
call
mov
cmc
daa
inc
dec
mov
xchg
xchg
jne
mov
push
or
jmp
mov
xchg
and
dec
insb
add
push
and
adc
loopne
and
test
clc
xchg
cmp
and
cmc
in
stos
jo
pop
xchg
jmp
dec
xchg
gs
push
jb
fmull
xchg
cmp
sbb
fs
insb
dec
jb
sbb
sbb
cwtl
xor
xor
dec
popa
dec
or
enter
or
and
inc
xchg
sbb
lea
enter
inc
leave
inc
es
test
std
shlb
add
or
hlt
push
lcall
lock
or
add
rolb
arpl
cwtl
sbb
xlat
pop
mov
push
ds
adc
inc
pop
leave
loope
ret
int
xlat
sbb
adc
inc
jp
add
fwait
and
ss
push
mov
jmp
leave
or
push
sub
adc
jmp
sbb
add
movsl
adc
nop
mov
in
aam
add
mov
mov
fcoms
cwtl
movsb
adc
insl
xchg
nop
incb
mov
std
xchg
push
cmp
lds
lcall
popf
orl
and
or
enter
pop
mov
inc
cld
popf
sub
mov
fwait
loopne
add
cmc
fs
push
adcl
fcompl
arpl
sbb
push
rorb
xchg
lahf
shlb
test
mov
lods
sbb
fmuls
mov
int3
sub
lcall
enter
sbb
add
push
das
xchg
test
xor
int
cltd
testb
cwtl
cmc
hlt
fcomi
push
jbe
or
je
movsb
xchg
and
iret
fsubl
or
xorl
lahf
inc
push
orl
inc
mov
in
cwtl
mov
and
jbe
xchg
test
mov
es
sbb
add
or
sbb
xor
or
inc
insb
enter
out
or
or
lock
jns
cmp
std
mov
mov
dec
je
push
movsl
sub
ficoml
mov
mov
xor
aad
popa
mov
cltd
inc
push
pop
pop
fsubl
in
call
pop
fsub
ret
push
in
addr16
shrb
loopne
add
movsb
into
in
or
adc
mov
loopne
in
adc
sub
movsl
inc
fcoms
mov
jnp
xor
dec
adc
dec
adc
test
incb
push
mov
adc
or
jns
std
clc
inc
cld
pop
leave
or
enter
dec
xor
and
and
fsubl
sbb
mov
sub
dec
cmp
or
out
and
rorb
inc
enter
mov
add
les
sti
dec
fwait
or
lock
test
and
mov
fs
and
inc
repnz
fcmovnb
test
push
xchg
push
loope
test
sub
test
xchg
mov
test
stos
mov
mov
inc
xor
out
mov
aad
mov
sub
xor
sub
test
add
add
push
test
jns
mov
pop
mov
jmp
mov
mov
aad
inc
shlb
add
add
lods
inc
mov
lods
dec
lds
or
push
aam
fisubrs
faddl
adc
sub
repnz
je
stos
or
or
stos
or
repnz
mov
adc
push
sbb
scas
lret
mov
pushf
std
movsb
mov
adc
and
add
mov
push
mov
xchg
cltd
fisubl
adc
dec
movsb
test
mov
loopne
cltd
popa
xor
mov
in
xor
xchg
sbb
sbb
xorb
daa
inc
ret
push
push
inc
add
jne
cmp
ss
mov
push
sub
lea
jbe
jmp
xchg
xchg
cwtl
xchg
cs
cltd
lcall
mov
loopne
mov
sub
push
and
pop
sub
mov
fdivs
lcall
dec
add
popa
sbb
out
jg
cs
test
int3
test
jns
mov
adc
in
orl
xorl
xor
filds
sbb
xchg
fists
les
enter
sarb
or
shrl
push
popa
push
adc
pop
fists
fsubrs
scas
js
mov
dec
adc
jb
sar
mov
test
xchg
mov
or
xchg
out
outsl
arpl
adc
movsb
add
out
hlt
push
sbb
in
lock
stc
pop
loopne
or
mov
data16
jns,pn
mov
or
mov
cmpsb
les
sbb
adc
cmp
mov
cs
lcall
lcall
stos
imul
or
pop
in
xor
add
add
or
push
xor
and
xchg
js
inc
sbb
paddusw
push
call
push
add
roll
mov
repnz
insl
rcpps
adc
mov
aad
jns
mov
xchg
fisttpll
ficoml
enter
mov
jae
mov
xchg
mov
imul
jne
jns
jns
push
adc
les
mov
out
adc
shl
or
ljmp
pop
inc
les
or
pop
adc
inc
pop
xchg
adc
test
leave
dec
pop
rcr
add
enter
mov
les
enter
inc
stos
add
add
loop
sbb
pop
dec
or
jae
inc
sub
push
push
mov
dec
add
xor
mov
sti
lock
imul
cmpps
and
filds
jae
dec
jae
inc
mov
sub
xor
pushf
movsb
in
aaa
cmp
add
enter
adc
inc
cs
add
xor
adc
fdivs
xchg
idivl
adc
out
xor
push
xor
pusha
xor
xor
sub
and
adc
add
mov
dec
xchg
les
mov
cmp
cmp
aad
out
test
pop
mov
inc
push
rolb
inc
mov
inc
jb
test
out
rorb
dec
push
sbb
lock
aam
in
imul
pushf
fmull
test
mov
pushf
pushf
pushf
mov
sarl
aas
jo
sbb
xchg
xchg
xor
push
in
mov
xchg
add
roll
mov
adc
pop
les
mov
mov
stos
add
daa
mov
inc
test
mov
mov
pop
mov
ret
add
movsb
popf
fsubrs
lock
pop
push
mov
adc
in
sub
lahf
fsubs
sahf
cmp
mov
or
sub
out
adcb
sbb
jnp
adc
lock
pop
in
decl
and
mov
inc
sub
pop
xlat
dec
es
push
and
inc
dec
sbb
and
popf
dec
adc
push
sbb
fildl
arpl
roll
adc
movb
add
adc
call
pop
adc
in
gs
dec
adc
nop
add
cmpsb
loopne
in
outsl
cltd
loopne
fdivs
add
add
fs
push
cltd
or
adc
nop
or
out
and
jb
pop
adc
mov
cmc
in
jge
mov
inc
paddsw
mov
pop
in
aam
add
nop
or
add
xchg
or
nop
or
orb
jmp
mov
adc
shlb
cmp
xchg
inc
xor
sbb
pop
mov
pusha
xchg
jg
ret
inc
pop
jb
add
jo
movsl
fdivs
sbb
jb
or
add
in
dec
movsb
stc
cmp
enter
inc
sub
stos
push
inc
or
mov
mov
mov
in
or
push
leave
outsl
mov
push
mov
and
xchg
lcall
adcb
xchg
movsb
sub
dec
roll
sub
and
lods
call
cmp
lret
adc
mov
sbb
or
movsl
ficoml
or
int3
addb
pop
mov
add
stos
movsb
adc
add
int
rcll
adc
mov
dec
xchg
jbe
xchg
pop
adc
sub
lds
call
imul
xor
dec
push
sbb
add
fs
or
and
sbb
sbb
cmp
inc
mov
xchg
pop
test
jge
lcall
and
pop
popf
and
shlb
cltd
jbe
add
adc
xchg
dec
adc
fdivr
jbe
scas
add
scas
clc
push
pop
enter
sub
pop
dec
shrb
mov
sub
pop
insl
xchg
js
dec
mov
sub
fs
imul
fadd
in
es
fs
enter
mov
mov
mov
scas
cmp
rcrb
jbe
jge
adc
xor
adc
push
dec
je
mov
add
shll
xor
adc
xor
and
fs
ss
and
addb
mov
outsl
js
pop
enter
pop
push
adc
dec
cmpsb
or
hlt
call
xbegin
add
push
stos
loopne
jecxz
cld
push
mov
fiaddl
insb
icebp
push
adc
mov
mov
push
mov
adc
js
lds
test
pop
and
repnz
nop
bound
imul
test
fsubs
pop
cmpsl
sub
xor
or
sub
movsb
mov
test
xlat
test
in
mov
or
fdivs
push
minps
fadds
adc
jo
les
xorl
fistl
rcr
fnsave
xchg
pop
sbb
push
cwtl
out
enter
cmp
nop
je
out
fistl
pusha
mov
mov
mov
dec
arpl
or
xor
pop
inc
inc
ficoml
xlat
leave
adc
or
ss
adc
stc
add
notl
xor
dec
inc
add
xchg
add
cmp
and
shrl
stc
mov
push
dec
cmp
xchg
icebp
hlt
ss
pusha
adc
loopne
mov
inc
cmpsb
pusha
mov
test
sbbl
scas
in
inc
sbb
test
insl
pop
rorl
dec
loop
lods
in
inc
adc
sbb
dec
pop
nop
clc
pusha
fdivrl
ret
aam
or
clc
xor
repz
pusha
test
hlt
cltd
loopne
mov
sbb
cmp
cmp
sub
mov
int3
xor
push
xor
cwtl
test
sub
mov
jo
mov
outsb
mov
dec
pop
push
sar
inc
fucomip
add
jo
fildll
ret
movsb
pop
or
adc
adc
push
in
pop
ljmp
mov
adc
sub
cltd
fisubrl
jl
jo
add
scas
mov
pop
sub
mov
or
nop
nop
dec
pop
pusha
mov
sub
dec
cltd
subb
cltd
mov
scas
andl
adc
mov
pusha
sbb
push
enter
js
xchg
and
js
jl
inc
pop
inc
faddl
mov
loopne
and
mov
idivl
push
and
xor
xchg
push
and
imul
rolb
in
adcb
loop
mov
dec
loope
cmpb
or
jns
in
std
mov
inc
mov
out
dec
jb
call
push
add
ds
sub
stos
and
rorb
std
pop
in
pop
adc
add
xlat
ds
test
mov
mov
sub
dec
jb,pt
push
push
sbb
pop
clc
and
popf
outsl
pop
cmp
fsubr
mov
movsb
sbb
mov
push
nop
push
and
daa
and
out
adc
cmp
iret
xchg
add
and
sbb
pop
adc
call
loopne
push
outsl
push
ja
pop
fchs
add
jl
out
adc
add
lahf
inc
add
out
mov
push
xlat
rcl
insb
pusha
idivl
add
add
pop
sub
push
push
data16
pop
jns
inc
xchg
inc
shl
ds
and
in
and
outsl
in
inc
adc
sbb
jg
jmp
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
sbb
mov
or
and
sar
lahf
and
jnp
or
adc
out
leave
ljmp
adc
fisttps
pop
push
iret
repz
dec
cmp
sub
stos
add
ss
inc
inc
inc
dec
dec
dec
dec
dec
dec
orb
push
adc
popa
bound
gs
imul
jo
jb
je
jbe
pop
pushl
jns
xor
xor
xor
ss
cmp
sub
mov
das
mov
gs
pop
sub
xchg
adc
clc
push
or
cmp
rclb
cmpl
mov
adc
push
sbb
out
mov
and
jecxz
sti
push
sahf
icebp
call
add
je
jb
outsl
arpl
fs
out
in
in
pop
inc
sbb
push
dec
imul
push
cmp
jb
gs
xor
cs
adc
bound
and
popa
je
outsl
outsb
push
adcb
xchg
aas
rdpmc
add
jnp
pop
in
incl
sub
cwtl
xor
filds
inc
outsl
jb
js
je
jb
gs
stc
testl
jb
add
add
or
clc
fildl
push
gs
push
je
mov
cmp
popa
jb
mov
outsb
dec
aas
add
arpl
cmp
cmp
sahf
lahf
ja
add
dec
and
jns
sarl
das
das
adc
push
dec
push
inc
in
into
mov
inc
gs
insl
bound
daa
dec
outsl
jbe
pop
mul
jle
arpl
push
jo
sub
addr16
pusha
out
push
orl
loopne
aas
inc
jo
imul
bound
testl
into
mov
pushf
cmpsl
xchg
popl
ret
jg
addr16
push
jne
xor
mov
daa
xor
lds
clc
sbb
dec
cmp
dec
js
push
jne
xchg
xor
dec
inc
ds
popa
das
jo
inc
adc
pop
fcomip
or
jb
mov
in
pop
push
test
jp
pop
in
inc
enter
pop
loop
or
add
arpl
dec
adc
es
sub
sub
sub
cs
movsl
loope
aad
cmp
cmp
ds
inc
das
pop
pop
aas
inc
push
push
jl
jle
cmp
arpl
test
sbb
dec
and
push
pop
or
in
jecxz
inc
adc
push
inc
insb
jae
rorl
fs
mov
pop
inc
inc
mov
dec
mul
or
jo
insl
and
jb
je
mov
jbe
dec
push
push
sbb
inc
fistps
dec
dec
inc
and
add
stos
push
insl
xchg
add
inc
outsb
push
jo
imul
push
pop
mov
je,pn
jnp
inc
inc
jo
xchg
idivb
mov
inc
and
fs
push
orl
insb
gs
cltd
xorb
inc
popa
and
shr
mov
mov
jne
pop
xor
and
adc
insl
push
xchg
push
jo
xor
mov
mov
dec
rolb
les
adc
add
push
fisttpll
xchg
and
or
imul
add
or
fs
into
hlt
xor
bound
in
add
dec
in
pushf
add
test
int3
fidivrl
popf
jb
loopne
outsl
mov
ret
or
sub
dec
addb
das
arpl
orb
cmpl
xchg
dec
popa
sub
pop
push
fwait
outsb
mov
addl
insb
imul
lret
int3
or
add
or
gs
or
and
insb
popa
pop
xor
gs
push
shrb
fistps
push
and
pop
aaa
xor
in
xchg
shll
adc
add
pop
dec
add
add
insl
push
fcoms
adc
jae
lods
call
jne
jbe
add
jmp
xchg
push
mov
or
gs
or
lds
scas
inc
out
inc
jle
outsl
push
mov
imul
lcall
bound
cmp
aaa
insl
in
mov
fwait
or
adc
imul
pop
or
pop
cmc
jecxz
add
push
push
leave
cmp
wrmsr
nop
inc
insl
imul
cmp
sbbl
popa
in
xor
rclb
inc
and
sbb
fstpl
cmp
mov
push
jae
xor
rcl
push
pusha
jo
sbb
loopne
sub
ret
jb
push
sub
lock
sub
pop
dec
push
imul
dec
or
jo
and
jno
pop
mov
ja
ds
inc
and
pop
imul
push
dec
cmp
jmp
ud0
loopne
dec
cmp
mov
push
rol
cld
sti
mov
das
lret
jno
icebp
pusha
inc
mov
clc
ret
lock
outsb
movsl
add
xorl
shrl
push
loop
imul
lock
gs
popa
dec
aaa
push
loope
add
xor
jg
js
pop
pop
jle
jae
je
pop
dec
pop
inc
xor
xchg
js
add
xchg
in
cltd
sbb
sub
xor
sub
push
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
pop
int
xchg
pop
hlt
and
or
pusha
add
js
addr16
add
pop
sub
add
sbb
mov
outsl
mov
addl
ret
int
test
add
orb
sti
outsb
push
cmpb
push
and
sub
jb
insl
int
adc
push
jo
add
push
cld
les
dec
push
inc
add
xlat
push
stos
fisttpl
jo
dec
and
or
sbb
daa
iret
lea
mov
nop
xchg
xchg
bound
js
xchg
jno
adc
or
and
ds
pop
dec
cmp
mov
adc
loope
adc
cs
test
dec
dec
pop
les
dec
cmp
xchg
pop
insl
mov
std
mov
sti
push
into
xorb
push
and
stc
sub
sub
dec
add
inc
scas
in
test
mov
add
or
add
mov
and
sub
sub
rorl
mov
add
add
sub
push
and
cmpsl
or
incl
adc
in
pusha
imul
add
inc
mov
mov
shr
call
inc
pop
and
add
test
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
or
subl
test
xchg
je
aas
lcall
or
sbb
outsl
ja
push
mov
push
jae
jb
bound
dec
sbb
inc
ss
popa
mov
jbe
movsb
arpl
mov
cmc
neg
pop
lea
dec
mov
outsl
js
push
push
inc
push
fwait
mov
mov
and
insb
gs
cltd
sbb
mov
dec
mov
sub
dec
frstor
add
insb
in
dec
imul
pop
jns
inc
mov
imul
in
insb
and
inc
jb
jns
daa
pop
testb
sub
and
mov
nop
xchg
cs
aad
push
lods
sbb
xchg
cmp
addl
mov
xchg
or
arpl
addl
decb
aaa
push
jns
dec
add
fisubl
dec
clc
popl
shlb
and
push
and
pop
es
dec
xor
dec
lahf
lock
push
push
cwtl
xchg
dec
movsl
or
jae
cmp
dec
add
mov
pusha
insb
call
movsl
jae
addr16
subl
gs
add
jp
mov
xchg
xchg
inc
push
push
push
push
dec
add
in
testl
dec
mov
outsb
mov
sub
fildll
dec
jge
jg
sahf
push
sub
sub
inc
call
or
jg
nop
shll
inc
in
subl
insb
dec
xor
les
push
jns
pusha
push
mov
push
pop
or
das
pop
in
push
je
outsl
xchg
daa
xchg
imul
push
jl
xlat
cld
out
cmp
cmp
push
das
push
sub
sub
inc
jl
push
jle
insl
out
data16
sub
addr16
sub
xor
int3
cmp
inc
xchg
iret
jmp
jmp
cmp
inc
and
dec
inc
dec
pop
pop
loopne
sub
fs
jb
fstpt
shl
imul
push
iret
or
ror
push
lods
sbb
pop
or
jo
sub
cltd
aam
push
lahf
sub
cld
sahf
out
inc
push
hlt
push
call
sahf
out
mov
add
dec
add
inc
sti
push
aam
cwtl
lcall
push
insb
inc
push
test
out
js
jo
pusha
cmp
pop
pop
add
out
ds
mov
push
push
hlt
adc
repz
push
dec
dec
push
inc
inc
dec
xor
push
cmp
xchg
idivl
sub
sub
push
lahf
out
sahf
sbb
adc
add
push
cmp
imul
lods
lahf
idivl
mov
inc
or
repz
cmp
test
pusha
inc
out
cmp
xor
sub
hlt
std
sahf
out
sahf
in
loopne
mov
insb
cmp
out
inc
sbb
cld
aam
loope
iret
repz
sbb
adc
aam
lcallw
shlb
jns
push
xor
data16
add
push
pop
push
sti
lods
cmpsb
bound
fs
sbb
jae
jb
xor
aas
movsl
ficoms
shrd
sub
or
sarb
insb
dec
test
jo
inc
dec
jae
das
mov
sub
inc
push
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
loop
mov
push
dec
inc
dec
add
dec
dec
inc
add
jg
lock
imull
adc
incl
popa
into
dec
sti
mov
mov
adc
outsb
mov
ds
sahf
jg
pop
push
pop
clc
lret
sbb
jb
cld
dec
jg
jge
arpl
cmp
adc
dec
scas
jp
stc
jno
in
fstl
mov
and
aas
repnz
xchg
cmp
dec
imul
lret
add
inc
mov
notb
mov
push
test
sub
fwait
ss
sbb
pop
lcall
ds
xor
incb
int3
dec
dec
xor
dec
popf
pavgb
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
decl
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
pop
push
cld
mov
xchg
push
pop
popa
push
or
scas
int
mov
pop
leave
loop
cs
cld
outsb
mov
xchg
dec
mov
lods
jmp
cld
xchg
jb
xor
out
mov
std
insb
jg
pop
and
es
sbb
sbb
and
clc
add
imul
dec
push
push
inc
inc
or
outsb
jbe
add
hlt
and
nop
das
out
push
adc
gs
sbb
daa
adc
imul
fstpl
push
dec
push
std
push
sub
mov
daa
dec
ds
ss
cmp
adc
ret
push
std
adc
or
js
ds
inc
or
add
xor
adc
jg
add
pop
push
dec
and
push
dec
xor
xor
dec
dec
inc
jge
mov
xor
cmp
jbe
pop
cmp
or
pop
or
out
jbe
notb
daa
cmp
push
push
pop
or
xor
idiv
dec
ss
sub
or
push
xor
dec
aas
mov
jge
fimuls
es
add
and
lods
add
cmp
movhps
adc
add
sub
ds
add
xor
or
decb
xor
or
cmp
cmp
adc
cld
mov
or
xor
inc
sbb
sub
sbb
sub
outsb
sti
mov
sbb
xor
sbb
or
dec
pop
or
inc
pusha
add
mov
mov
dec
dec
pop
push
pop
push
or
mov
dec
pop
pop
cmp
push
or
adc
xor
adc
insl
xchg
push
sub
pop
sbb
outsl
mov
mov
adc
push
pop
ds
dec
notb
sub
pop
dec
pop
dec
lretw
jnp
sbb
xor
sub
push
adc
and
cmp
test
mov
int3
cmp
cmp
pop
jle
outsb
lock
insl
xor
adc
addr16
jo
push
sub
or
cmp
push
push
or
mov
jb
push
sbb
and
gs
mov
push
aaa
or
push
xor
adc
pop
xor
jg
or
xor
xor
or
dec
sbb
dec
xor
imulb
loope
shll
ja
or
pop
mov
push
adc
cmp
and
pop
adc
pop
xchg
decl
dec
cwtl
in
push
cmp
nop
daa
push
cmc
imul
push
movsb
test
ds
imul
mov
icebp
into
outsb
jg
imul
adc
pop
sub
and
adc
mov
pop
xor
mull
hlt
pop
pop
push
jo
scas
or
cwtl
dec
mov
pop
sub
iret
lock
jp
cmp
outsl
insl
mov
jae
and
inc
push
push
popa
sub
loop
shll
popl
call
fsubp
ja
push
xor
cvttps2pi
insl
fildl
idivb
xor
push
iret
repz
insb
jo
mov
imul
fs
sahf
out
jl
popf
roll
inc
repz
rorl
mov
jmp
lahf
in
cs
pop
ds
xor
les
push
and
call
pop
ss
scas
cs
or
mov
cmc
xlat
or
cmp
and
ss
pop
fisubrl
dec
js
inc
jbe
mov
or
push
dec
cmp
imul
adc
or
jmp
or
push
push
and
push
xor
sbb
mov
sub
fcoms
jb
push
xor
cmp
add
mov
push
pop
jb
sub
sub
push
sub
inc
and
pop
sbb
rcrl
fildll
xor
pusha
sub
adc
inc
shll
jp
xor
or
mov
sub
or
lock
push
iret
or
dec
cmp
rclb
pop
ja
ja
push
sti
jae
ss
cld
sbb
fs
xor
out
pop
or
dec
jecxz
dec
or
mov
scas
jge
or
mov
fs
cmp
shll
dec
add
dec
sub
ret
mov
add
cwtl
push
xchg
popa
test
mov
adc
fs
or
add
dec
cs
int
xor
out
add
mov
cmp
pop
orb
push
add
cmp
push
cld
jbe
inc
xor
sbb
ret
add
jne
push
ret
loope
cmp
pop
dec
and
push
loopne
pushf
dec
push
push
push
xlat
jle
push
and
test
aaa
and
xor
imul
lock
and
ds
adc
add
push
or
outsl
xchg
cmp
rolb
pop
idivl
clc
xor
and
insl
and
cwtl
or
pusha
pop
es
hlt
ss
push
icebp
in
xor
dec
push
jbe
push
dec
outsl
jle
push
into
pop
mov
aaa
daa
push
sbb
add
add
mov
xchg
addr16
into
adc
pop
xchg
mov
dec
cmp
pushf
fdivl
dec
mov
add
pop
pop
in
ficompl
add
xor
xor
add
cmp
sbb
loop
fs
and
lods
mov
dec
cmp
and
add
sbb
aaa
jl
insb
jne
pop
add
pop
adc
dec
cmp
pop
mov
cld
pop
sbb
push
into
stos
dec
mov
cmp
pop
or
addr16
loopne
jmp
xor
aad
dec
fstpl
or
cmpsb
dec
mov
adc
out
mov
inc
mov
into
call
push
bound
shlb
pop
and
sbb
sub
push
push
xor
add
pop
or
push
or
add
jae
pop
or
dec
ja
cmp
dec
lods
daa
or
push
aaa
push
pop
mov
xchg
adc
sti
aas
push
insb
pop
sbb
pop
sub
sub
sbb
jge
ret
sub
push
adc
dec
inc
add
mov
dec
xor
sub
add
and
or
sbb
movsl
outsb
mov
add
dec
jle
jl
int3
js
add
fwait
aam
popa
pusha
decb
ja,pt
and
addb
jae
insl
popa
imul
xchg
sbb
push
mov
outsl
jo
into
data16
inc
les
lahf
push
ja
push
mov
push
je
pop
ds
repz
fs
aaa
imul
mov
cmp
jg
xchg
js
das
or
aaa
arpl
or
pop
mov
inc
jnp
pop
je
sub
mov
mov
cli
cmp
cmp
push
mov
adc
dec
fs
sbb
dec
aaa
inc
and
sub
into
loop
daa
pop
dec
push
ret
push
and
push
dec
mul
int3
mov
pop
and
and
adc
or
sub
aaa
cmp
xor
les
je
push
adc
add
add
out
sub
in
test
test
fwait
push
push
dec
push
pop
mov
or
sbb
bound
daa
xchg
add
out
out
pop
int
xchg
add
pop
nop
or
pop
sbb
mov
pop
aaa
dec
pop
mov
and
nop
lcall
sbb
sub
out
clc
mov
inc
add
addr16
xor
popf
imul
into
cmp
sub
pop
cmp
push
push
das
xor
xor
js
adc
and
fisubrs
sub
xor
ja
pusha
notl
and
out
les
or
pop
sub
sti
das
cmp
xor
je
data16
push
or
enter
arpl
call
jb
nop
cmpsb
pop
aaa
mov
jb
outsl
imul
xchg
pop
lahf
notl
addb
mov
xor
jns
xchg
push
les
pop
inc
add
sysret
xchg
dec
xor
and
push
add
lret
fdiv
idivb
add
or
dec
or
or
call
ss
aas
adc
lcall
dec
cmp
dec
xor
xor
ss
lods
jo
mov
mov
and
cmp
pop
mov
pop
dec
xor
int3
pop
push
sti
mov
or
cmpsb
dec
dec
sub
dec
xor
xor
insl
add
les
shlb
lret
mov
adc
xchg
or
push
es
leave
jp
and
mov
shll
sub
inc
sbb
push
xor
mov
add
gs
mov
inc
test
out
push
xchg
dec
jnp
adc
mov
call
or
dec
cmp
add
push
jp
jp
lcall
std
or
jp
pop
pop
aaa
das
cmp
sub
add
jmp
sub
cmp
mov
dec
sub
ja
mov
imul
pop
lahf
mov
add
sub
sbb
pop
pop
jmp
adc
adc
es
arpl
xchg
or
cmc
pop
rol
mov
test
inc
sub
sub
cmp
jl
or
repnz
add
test
inc
or
addb
lods
fistpll
adc
hlt
imul
loop
and
fldenv
push
data16
out
xor
or
mov
push
sub
rcrb
dec
mov
loop
dec
push
sub
jmp
add
fs
sarl
adc
dec
pop
sub
adc
dec
pop
adc
int
jo
inc
inc
jo
dec
rorb
jb
nop
pop
dec
outsb
fiaddl
cwtl
jnp
enter
dec
dec
cmp
sbb
cmp
or
pop
daa
and
pop
push
jo
cmp
cs
inc
pop
ss
jp
jno
aad
pop
and
xor
adc
cmp
or
dec
xchg
into
mov
mov
es
dec
int3
xor
cmc
and
xor
sub
into
jo
insl
and
es
cmpsl
pop
mov
adc
mov
push
cmp
das
popf
mov
push
mov
jecxz
mov
arpl
sbb
dec
shll
jecxz
sub
test
mov
sbb
lea
mov
push
in
adc
push
jns
and
mov
or
mov
pop
cmp
pop
mov
ds
inc
lcall
and
push
out
pop
jns
lock
push
mov
cmp
pop
xor
dec
das
cs
inc
andb
es
pop
xchg
pop
cmp
and
xor
int3
inc
enter
int3
inc
sub
cmp
add
or
data16
shl
push
jmp
push
xchg
loope
subb
dec
sub
ds
jg
aaa
xchg
xor
xor
add
add
sub
aas
or
or
sub
sbb
loopne
mov
mov
add
dec
sbb
dec
sbb
sub
xor
negb
or
pop
xchg
xor
sub
or
pop
pop
mov
fs
bound
je
dec
icebp
sub
jg
sub
lret
adc
data16
add
cmp
fisttpl
push
pop
shlb
adc
push
dec
sbb
sti
lcall
dec
sbb
add
dec
es
mov
sbb
call
int
fcoms
les
push
or
inc
das
adc
xchg
push
adc
mov
cmp
insl
mov
sub
fwait
sub
cmpsb
mov
sbb
mov
cmp
and
loopne
repz
inc
cmp
cmp
mov
cmp
dec
enter
mov
pop
add
jno
jnp
jbe
inc
mov
xor
loopne
out
sub
dec
mov
ja
and
xchg
lods
call
lss
push
dec
and
mov
inc
aas
jo
adc
and
pushf
or
out
pop
inc
cmp
push
std
and
xor
sti
mov
and
sub
adc
sbb
movl
xchg
and
inc
push
addb
xchg
sti
scas
inc
xchg
or
inc
fistps
test
adc
sub
gs
sub
into
adc
sbb
in
fcmovnu
and
fidivs
xor
sbb
insb
mov
pop
xor
mov
orl
cmp
or
and
shll
and
and
insl
mov
lods
jno
and
sub
sahf
cmc
xchg
mov
mov
xor
cmpsb
loope
inc
lods
das
int3
push
insl
push
aam
mov
mov
push
lcall
inc
cmpsb
adc
adc
mov
imul
ret
inc
push
dec
and
adc
bound
mov
je
adc
and
sub
mov
imul
ja
sarl
cmpb
cmpsl
cmpsb
and
movsl
jge
xchg
pop
xor
cmp
inc
inc
jecxz
mov
aas
out
dec
dec
lea
mov
cmp
jbe
pop
daa
mov
pop
call
adc
js
push
loopne
dec
push
add
or
icebp
sbb
fdivrs
add
or
pushf
sbb
lock
hlt
and
push
lcall
hlt
cmp
pop
scas
cmp
push
xchg
mov
xor
adc
xor
mov
pop
cmpsl
add
push
flds
aaa
jbe
test
add
aaa
daa
out
mov
fldenv
sub
mov
inc
movsl
xorl
jbe
dec
push
das
dec
ret
test
dec
ja
or
in
pop
sub
and
jns
out
pop
sbb
jns
out
push
andl
lahf
roll
add
or
jnp
ss
xchg
add
push
movb
jl
or
adc
mov
insb
out
and
sub
xor
inc
mov
sti
out
mov
mov
mov
ss
int
popa
xchg
sbb
sub
add
fldcw
xchg
pop
adc
insb
ss
and
add
add
push
dec
str
fldcw
add
inc
stc
das
incl
add
aas
jno
inc
add
push
push
push
push
lret
inc
push
int
movsb
fsts
mov
cmpsl
stc
xor
pop
dec
pop
testb
lahf
out
pop
pop
pop
aaa
dec
and
imul
xor
push
test
pop
jmp
inc
testb
daa
cs
dec
dec
mov
shlb
mov
mov
outsl
out
and
sbb
ljmp
mov
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
pop
sti
mov
mov
sub
sub
mov
xchg
mov
mov
ds
pop
sbb
idivb
jle
jo
fsubs
sbb
mov
xor
dec
xchg
pop
shl
dec
push
jbe,pn
or
adc
incl
xor
aaa
aaa
xor
cmp
inc
mov
out
call
ret
jbe
fcoms
enter
addl
inc
jb
pusha
sbb
cli
iret
outsl
push
dec
in
jne
imul
jae
pop
mov
mov
leave
sub
push
xchg
pop
xor
daa
iret
leave
jae
cmp
inc
sbb
or
and
and
call
inc
js
jl
pop
mov
xor
pop
add
push
dec
pop
fadd
dec
int
ficoml
pop
mov
push
dec
cmp
cmp
xor
sub
sti
xor
inc
sbb
sub
xor
inc
xor
inc
xchg
jo
mov
bound
mov
cmp
insb
push
outsb
add
dec
adc
inc
shll
push
jb
jo
mov
bound
je
bound
imul
test
ds
add
push
and
push
xor
jo
cmpsl
and
scas
push
xchg
test
push
ja
jne
das
jecxz
xchg
mov
das
sti
pop
shr
add
pop
cmp
push
subl
xorl
loopne
jbe
sub
sarb
pop
sbb
dec
xor
xor
xor
dec
or
dec
js
iret
pop
sub
jnp
xchg
adc
dec
test
or
subb
lret
pop
jnp
outsb
push
push
aaa
dec
and
inc
dec
xor
adc
sbb
jns
orb
dec
dec
in
push
push
mov
xor
inc
cmp
jp
into
cmpb
nop
sub
outsl
pop
or
das
push
pop
sub
pop
pop
ljmp
out
dec
shl
dec
imul
mov
jnp
addr16
mov
pop
push
stos
fxch
ss
jl
lcall
push
or
inc
mov
inc
pusha
aad
jnp
dec
cmp
push
mov
iret
repz
pushf
pushf
mov
imull
jns
imul
xchg
pop
int
fwait
mov
pop
ds
leave
fcomi
mov
push
call
es
jbe
stc
mov
daa
add
push
ds
jne
xchg
jbe
pop
jecxz
rorl
sahf
ja
push
pop
mov
xchg
int3
test
xor
mov
mov
inc
pop
mov
jb
xor
out
out
dec
lock
push
mov
mov
cmpsb
mov
lods
leave
mov
push
mov
popa
xor
cmpsl
stc
xor
jb
cmp
test
mov
jl
jle
xchg
dec
push
mov
cmp
xchg
daa
jl
mov
sbb
pop
xchg
push
cmp
jnp
out
xchg
mov
repz
xchg
push
lods
xchg
push
faddl
out
sarl
sbb
cltd
test
cltd
nopl
aad
jle
shr
hlt
jb
xchg
in
push
repz
pop
fists
lcall
jns
jnp
scas
xor
cmp
loope
ss
or
xchg
inc
push
inc
in
jnp
cmp
inc
push
cmp
mov
iret
repz
pop
push
lcall
lcall
out
insb
mov
add
ds
rep
lret
ljmp
out
mov
mov
lods
cli
mov
repz
push
adc
ret
push
stc
sar
lahf
adc
bound
repnz
xor
mov
lahf
loop
mov
roll
xchg
sub
jge
out
jne
mov
out
sahf
out
out
xchg
push
inc
push
fdivr
pop
pop
js
and
jg
dec
sbb
scas
sub
sbb
cs
adc
stc
add
push
iret
adc
adc
push
mov
xor
adc
mov
add
mov
pop
jb
mov
loopne
mov
xor
mov
repnz
std
push
and
pop
sbb
enter
adc
inc
repnz
iret
pusha
or
in
pop
adc
add
cmp
je
xor
mov
addr16
mov
push
jae
popa
inc
fdivl
push
test
pop
push
sbb
fdiv
sub
or
aaa
push
dec
mov
pop
and
aas
jae
inc
jnp
dec
fisubl
push
ret
adc
das
out
add
dec
fst
inc
int
dec
je,pn
push
adcl
cmpsl
ljmp
or
push
inc
cmpsb
push
insb
inc
mov
dec
pop
je
cmp
aaa
push
fisttps
jp
nop
aaa
shrl
push
mov
cmp
jbe
iret
mov
mov
ret
pop
mov
testb
mov
push
pop
push
cmp
add
cmp
cwtl
fists
push
ds
ja
das
adc
testl
jo
dec
pop
insb
je
push
jle
push
addr16
jo
jae
es
outsl
and
aas
cmpb
sub
and
imull
lods
push
or
pushl
aaa
xor
xor
xor
xor
cmp
xchg
pusha
imulb
xor
xor
xor
cmp
push
add
xchg
jbe
aas
sub
inc
push
or
lahf
pop
cmp
dec
xor
out
push
dec
sub
add
or
add
push
mov
inc
xor
or
push
fcoml
adc
sub
out
cmp
push
aaa
jae
and
pop
or
inc
rolb
adc
addr16
or
pop
and
and
mov
jle
dec
mov
fcomps
cmp
aaa
aaa
push
ss
sub
aaa
adc
or
mov
iret
sahf
mov
adcb
and
adc
out
and
pushf
shrl
push
or
mov
pop
cmp
add
xchg
cmp
or
mov
pop
pop
jbe
pushf
cmpsb
daa
adc
nop
or
add
mov
pop
adc
test
add
cmp
xor
pop
lods
xchg
addb
mov
push
js
mov
dec
mov
pop
adc
or
and
das
insb
or
das
sub
sub
movsl
xor
adc
xor
popf
xorl
push
mov
popf
xor
xchg
enter
or
mov
add
sub
xor
stos
das
add
lea
fiaddl
aaa
lahf
insl
or
or
mov
sbb
daa
mov
cmp
loopne
stos
iret
push
jbe
lods
mov
data16
jge
pusha
mov
bound
das
adc
aaa
iret
dec
js
lahf
repz
xchg
test
pop
ret
daa
test
push
push
imul
daa
outsl
shll
xchg
dec
and
cmp
inc
mov
sbb
repnz
adc
or
add
nop
mov
dec
rorl
add
das
insl
rcr
mov
scas
pop
mov
daa
lahf
pop
xor
outsb
adc
outsb
pop
jnp
push
pop
push
pop
int
lods
inc
adc
addr16
add
loope
jg
sub
xchg
pop
mov
das
dec
sub
mov
jecxz
insl
sub
pop
and
push
inc
xor
inc
imul
es
add
or
lret
dec
inc
cmp
dec
or
ja
orb
adc
push
sub
sarb
mov
es
inc
xorb
push
pop
dec
shrb
cmp
mov
cmp
inc
mov
add
outsl
add
andb
fistpll
inc
ds
or
add
insb
adc
cmp
pop
adc
xchg
inc
lock
dec
mov
adc
or
and
add
mov
or
push
cmpsl
adc
inc
mov
sahf
es
adc
xchg
mov
scas
jae
jo
les
es
in
dec
mov
jo
loopne
xorl
enter
adc
pop
add
inc
adc
and
xchg
and
gs
jno
test
pop
adc
cmp
adc
pop
xchg
pop
enter
adc
data16
mov
add
daa
adc
adc
mov
lds
bound
pop
or
xor
and
dec
dec
add
dec
xchg
add
adc
add
mov
ret
xchg
dec
cmp
xor
or
inc
cmp
inc
test
mov
in
adc
pop
mov
pop
cmp
pushf
push
xchg
loope
xchg
sub
inc
jb
cltd
xor
or
add
sub
adc
popa
addb
cmp
push
add
rorl
adc
loopne
and
push
or
aas
imul
add
jbe
gs
imul
ret
je
add
dec
loopne
fildl
cmp
cmp
inc
mov
data16
filds
or
inc
add
pushf
push
inc
call
and
sbb
bound
push
and
or
sbb
cmp
add
aad
sub
fwait
mov
adc
bound
sbb
xchg
fs
pop
loop
push
mov
adc
xor
xchg
dec
pop
push
push
or
cld
inc
xchg
mov
not
inc
orb
or
push
mov
mov
adc
and
add
hlt
test
add
pop
fsubrs
jp
inc
xor
xorb
or
and
rolb
sub
xor
mov
push
inc
push
cmp
jb
mov
rcrb
xor
fnstcw
inc
push
adc
add
les
pop
xor
dec
ja
sub
mov
lahf
ror
adc
xor
cmp
mov
orb
or
push
es
pop
aaa
das
mov
movl
orl
xchg
xor
add
leave
jo
xor
push
in
dec
fsubl
adc
push
outsl
add
push
pop
add
xor
pop
pop
cs
dec
adc
inc
add
out
adc
and
das
addb
lock
mov
lea
testl
jb
jo
jb
pop
or
movsb
push
xor
pop
sub
pop
add
add
testb
and
add
ss
or
inc
and
adc
dec
rorb
push
shlb
cmc
cltd
ljmp
xor
xor
adc
push
dec
jo
push
sbb
push
push
add
pop
lcall
sub
sub
cmp
xor
pop
sbb
or
add
ds
sub
push
add
xor
cmc
ljmp
or
cmp
dec
or
or
sub
adc
mov
add
lret
out
in
decl
xor
adc
add
sub
xor
add
das
mov
add
cmp
adc
ja
cmp
pop
or
xchg
mov
sub
sub
pushl
sub
push
cmp
push
dec
dec
sub
inc
pop
sbb
add
das
pop
pop
add
cmp
and
cmp
cmp
adc
add
pop
xlat
and
push
and
or
cmp
insl
pop
push
or
out
sub
push
ret
adc
xchg
pusha
push
mov
cmpsl
sub
aaa
pop
cmp
or
and
insb
in
lcall
sbb
sbb
dec
call
outsb
sub
pop
ss
inc
insb
gs
adc
jnp
andb
out
pop
adc
sbbb
xchg
push
dec
inc
les
mov
push
dec
lea
xchg
les
add
inc
mov
or
pop
les
cwtl
pop
bound
add
rol
xor
cwtl
jle
jle
add
xor
mov
mov
push
push
mov
sbb
push
push
inc
push
es
push
dec
iret
add
outsl
cmp
aas
inc
rclb
sub
incl
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
jmp
xchg
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
lcall
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
jg
test
mov
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
cld
pushl
mov
data16
mov
call
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
mov
dec
dec
lret
rep
cs
arpl
test
add
decl
insb
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
jmp
mov
fwait
stos
flds
pop
pop
push
bound
jnp
and
cmp
jns
aas
sub
es
outsl
push
jno
jne
cmp
push
dec
pop
or
sub
inc
xor
jge
cmp
jg
call
inc
xor
inc
insb
pop
push
dec
jae
pop
data16
inc
or
sub
jo
mov
and
dec
aaa
daa
cs
je
push
outsb
or
dec
push
cs
ja
aas
sbb
or
sbb
aaa
add
or
pop
jns
push
jnp
or
or
sub
and
lcall
fisttpll
daa
std
daa
daa
push
pop
push
xor
fs
fstpl
and
scas
xchg
cmpsb
push
sub
sbb
push
aaa
push
xor
inc
add
xor
xor
scas
cmp
push
inc
add
inc
pop
inc
inc
xor
and
aaa
inc
push
inc
mov
pop
mov
ss
cmovb
pop
ss
cmpsl
pop
int
jmp
jbe
and
add
loope
fsubrs
stos
and
daa
int3
inc
lods
mov
loopne
dec
stos
pop
xor
cmc
xorb
iret
pop
push
pop
dec
add
add
lahf
std
in
scas
bound
push
adc
ret
sub
cmpsl
fistpl
dec
mov
arpl
shll
sbb
pop
inc
or
or
and
mov
shlb
pop
cmpb
xor
lods
mov
mov
push
inc
les
in
roll
sub
sbb
orb
add
aad
ss
frstor
jp
lahf
call
cmpsl
out
xchg
lret
push
push
xor
popa
add
sbb
ss
cmpl
mov
mov
push
stos
fmuls
sbb
arpl
int
mov
sbb
mov
gs
and
and
or
adc
or
cmp
popa
stos
imul
mov
dec
jmp
in
add
orb
loop
sbb
xchg
pop
inc
nop
and
mov
aaa
xor
adc
push
popa
push
adc
sub
insl
hlt
pusha
cmp
js
push
jecxz
mov
in
push
mov
fs
sbb
inc
pop
xor
mov
sbb
push
sbb
pop
push
xchg
inc
pop
outsl
in
sahf
pop
push
and
sbb
int3
enter
push
faddl
cmp
adc
or
add
pop
add
push
xchg
or
in
push
push
imulb
outsb
je
xor
inc
mov
xor
jae
popa
insl
gs
cmp
addr16
cmp
mov
add
push
xchg
sub
sbb
pushl
insl
loop
pop
push
ss
and
lret
testb
mov
insb
dec
push
popa
je
xor
add
push
popf
insl
mov
pop
das
or
cmp
adc
idivb
pop
add
or
push
add
shrb
adc
or
sub
rorb
cmp
jl
int3
lods
push
insl
lret
movsb
add
add
add
lahf
cli
add
push
adc
and
jae
mov
inc
ret
scas
sbb
inc
aad
and
jo
pop
push
push
dec
inc
cmp
dec
ds
shr
and
ds
xor
addr16
or
lds
add
pop
lret
jge
mull
sub
mov
pop
fcompl
pop
pop
xor
cmpsb
inc
daa
scas
dec
nop
bound
fadds
outsb
dec
popa
dec
lret
mov
rclb
ja
jb
pop
repz
push
nop
loopne
and
mov
xchg
outsb
xor
fistl
pop
movb
xchg
xchg
cmp
mov
test
or
test
test
push
sub
insl
pusha
arpl
adc
sbb
push
sbb
cmp
call
mov
pop
enter
lahf
pop
xor
inc
jo
or
test
mov
mov
outsl
imul
push
jle
mov
dec
in
push
aam
pop
outsb
mov
pushf
outsl
call
mov
inc
push
das
scas
adc
stos
sbb
push
pop
pop
sub
xor
inc
and
dec
mov
fs
cmp
fdivrp
pushf
and
cmp
push
xor
push
iret
test
adc
dec
xor
movsb
push
mov
jmp
inc
outsl
sbb
ljmp
dec
xor
xchg
scas
pop
inc
rclb
lods
or
push
push
inc
push
add
add
mov
rclb
popf
pushf
insb
and
push
lret
jle
pop
pop
jecxz
pop
pop
aas
pop
push
add
fiadds
aas
xchg
pop
add
loopne
pop
or
loop
int
pop
push
inc
jle
pop
jae
mov
dec
pop
movsl
repz
out
pusha
insl
outsl
pop
repz
push
adc
daa
test
test
cmp
test
icebp
popa
xor
and
xor
add
lds
pop
inc
adc
xor
addl
sub
scas
out
jle
movsb
aas
add
sub
inc
dec
nop
or
shl
sbbb
and
repz
dec
cmp
add
in
out
test
cmpsb
out
dec
aaa
jmp
andb
out
fisttps
pop
lods
mov
sub
jb
call
dec
and
addr16
popa
lods
lods
cwtl
xchg
and
or
test
mov
or
mov
inc
push
punpckhwd
rolb
dec
outsb
push
je
scas
pop
or
push
insb
lods
out
sbb
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
movsb
and
xlat
jb
gs
inc
sbbb
sub
sub
pop
daa
dec
push
lods
adc
dec
jb
adc
addl
inc
sbb
adc
adc
roll
nop
or
xor
inc
test
sbb
add
cs
adc
loope
sbb
push
inc
std
mull
xorl
nop
rolb
push
sub
inc
notb
sub
inc
iret
or
push
fiaddl
or
xor
push
pop
rolb
sub
out
adc
data16
xor
dec
sub
subl
dec
add
adc
sbbb
subb
and
add
push
inc
xchg
pop
loopne
push
inc
rcrb
xor
and
inc
mov
and
sbb
mov
sub
inc
xor
lds
add
cmp
sbb
xchg
fimull
imul
xorb
adc
stos
add
or
pop
adc
pop
outsl
jmp
xchg
xlat
daa
jbe
jmp
pop
mov
and
push
lds
xor
push
and
push
sub
xlat
js
mov
outsl
or
fdivrs
add
push
xor
mov
mov
push
sbb
add
bound
ds
mov
das
mov
xchg
adc
inc
btr
sbb
inc
movsbl
push
adc
mov
cs
dec
mov
cmpb
aas
mov
mov
imul
dec
add
pop
pop
adcb
xchg
sbb
mov
test
xchg
push
inc
pop
cmp
movsb
push
lods
daa
ds
mov
and
movsb
mov
daa
add
push
clc
xchg
adc
jne
jns
movsb
add
in
inc
lock
push
aaa
inc
push
lahf
pop
imul
jg
daa
ficompl
jo
sbbb
xchg
daa
outsl
mov
sbb
add
aas
jg
dec
sub
sbb
xchg
sub
mov
xor
mov
fwait
push
mov
loopne
int
rorb
adcb
pop
xchg
fucom
repz
xor
adc
repz
out
dec
movsb
pop
mov
jl
out
pop
and
pop
int3
sahf
push
jns
mov
push
inc
pop
sahf
pop
pop
iret
repz
mov
inc
in
imul
push
mov
mov
lahf
out
push
sbb
and
es
adc
xchg
mov
adc
repz
cmp
dec
inc
jbe
imul
ss
lcall
or
add
out
sbb
add
ret
mov
fdivs
pop
arpl
jnp
add
inc
mov
adc
mov
add
sub
dec
scas
jbe
ja
pop
xor
jne
insb
ja
add
dec
mov
dec
outsl
fsubrl
pop
enter
sbb
adc
adc
das
sbb
and
dec
or
leave
mov
add
inc
cs
adc
inc
js
xchg
out
mov
fistpll
xor
testb
cmp
ss
add
inc
icebp
dec
add
dec
adc
pop
pop
leave
mov
pop
pop
scas
add
and
push
outsl
out
adcb
nop
xchg
sub
jb
mov
int3
mov
addr16
pop
pop
in
pop
scas
sbb
sbb
ljmp
and
in
dec
xchg
xor
xor
pop
pop
leave
mov
rcrb
out
int3
pop
les
outsl
sub
fidivrl
mov
lock
rcrb
add
out
xorb
repz
cmc
cmp
dec
push
loopne
sbb
fs
mov
sub
nop
jg
xchg
or
ja
out
adc
shlb
add
adc
ja
pop
test
pop
xchg
popa
imul
fildll
mov
sbb
and
loopne
and
cwtl
sbb
and
mov
and
pop
cs
dec
or
loopne
cld
ret
push
mov
out
js
jo
shlb
out
add
mov
and
push
aaa
mov
pop
sbb
mov
jns
sbb
mull
xchg
fcompl
in
add
push
repnz
nop
ss
push
push
mov
dec
pop
cmpsb
pusha
mov
add
pusha
loopne
in
int
sbb
jg
push
test
mov
rolb
pusha
and
pop
sbb
and
or
cmp
pusha
add
fimull
divl
sbb
cmp
popa
outsl
push
lds
in
push
outsl
jg
mov
cwtl
xchg
daa
insb
int
je
or
test
bound
fsubl
cmpsl
fldlg2
sarb
bound
mov
push
test
jo
out
in
sub
clc
mov
shl
adc
pop
push
bound
and
or
xlat
cwtl
nop
push
ret
or
popa
rcl
jbe
mov
xlat
or
pop
push
inc
xchg
or
shrl
pushf
and
fimull
pop
xor
mov
testl
and
jae
outsl
loopne
add
add
pop
jb
jle
and
arpl
insb
jo
jnp
jo
cld
arpl
mov
cwtl
push
xor
aaa
sub
or
add
adc
xor
fs
adc
scas
fs
and
nop
fs
mov
movsb
cwtl
in
xchg
cld
pop
leave
jae
jg
add
mov
add
insb
jb
push
or
mov
cs
lods
mov
cwtl
inc
outsb
rorb
mov
pushw
and
leave
mov
push
call
xor
ss
fs
adc
cmpsb
jo
pop
andb
sbb
clc
inc
mov
xchg
data16
add
or
test
int3
xchg
fcompl
call
pusha
pop
iret
adc
xlat
jo
push
xor
sahf
iret
aad
sub
daa
push
out
push
jb
pop
shlb
xchg
mov
cmp
sub
push
fsubrl
dec
xor
cmp
out
shrb
xor
pop
jp
xchg
mov
addl
push
adc
and
in
insb
push
and
push
dec
pop
pop
or
jns
in
in
clc
cs
add
leave
adc
popl
addl
in
add
lahf
fsub
push
xchg
imul
add
xchg
mov
or
sbb
lahf
addr16
adc
sub
or
movsb
addr16
sub
add
repz
push
sbb
mov
mov
pop
and
in
add
lods
lods
in
test
xlat
ret
mov
inc
imul
pusha
iret
push
push
sub
mov
fcmovnu
aas
or
inc
subb
fimull
rolb
lods
pop
mov
outsl
lods
and
xchg
hlt
pop
insl
leave
testb
xchg
sbb
push
adc
dec
or
pop
pop
insb
push
jo
xor
ss
aas
out
sub
pop
out
pop
jb
add
jae
fildl
or
fmull
push
jbe
jns
iret
repz
sbb
jns
out
mov
iret
repz
inc
pop
jbe
jmp
add
pop
stos
loope
iret
sarl
xor
jl
out
push
mov
repz
shrl
shl
out
sahf
out
jge
push
xor
idivb
jle
stos
jg
iret
repz
add
in
sahf
out
sbb
cmp
sarl
push
xchg
sti
push
andl
jns
aad
sahf
out
lcall
ds
sarl
pop
call
repz
test
sahf
out
roll
mov
mov
xchg
out
mov
jecxz
mov
mov
mov
push
out
ds
movsl
rclb
mov
cmpsl
stc
xor
lds
cmc
adcl
xchg
imul
aad
xchg
pop
sahf
cmpsl
stc
cmp
xor
repz
cmp
xchg
cmp
out
fwait
decl
cmpsb
int3
cmpsl
stc
mov
push
cmpsl
push
cltd
inc
iret
repz
cli
push
lcall
jl
fwait
xchg
and
jns
pop
jge
hlt
out
or
push
jne
mov
dec
repz
dec
popf
adc
push
jecxz
mov
out
adc
xor
int
jns
call
xor
out
mulb
jl
test
jl
iret
repz
rcrb
test
ds
rorl
insl
repz
out
in
pop
lods
xchg
mov
jns
out
lods
dec
jns
pop
scas
out
ds
push
adc
lcall
jns
mov
cmp
fs
mov
out
ds
insb
enter
mov
mov
push
mov
lods
idivl
mov
cmp
or
rorb
sahf
bound
sbb
out
lcall
js
out
cmp
fiadds
mov
out
xor
leave
das
lret
sbb
fidivl
mov
jbe
into
rolb
mov
out
jge
sar
shrb
xchg
aad
add
jbe
add
sbb
push
push
add
push
inc
jno
in
popf
fsubl
outsb
push
add
mov
mov
cmp
ja
int
aad
fucom
inc
repnz
add
or
jbe
ja
adc
divb
aam
fistps
aas
test
pop
sbb
in
pop
int3
xorl
fidivrl
incl
and
and
mov
sysenter
jae
lock
sbb
mov
xchg
ja
sbb
adc
aaa
neg
inc
pop
enter
pop
push
inc
mov
dec
or
mov
sub
in
dec
outsb
dec
inc
lds
lock
out
jnp
mov
leave
jg,pn
jg
cmpl
xchg
arpl
test
outsl
fmuls
mov
cs
filds
mov
dec
scas
inc
push
sub
dec
mov
lahf
mov
mov
test
mov
or
pop
call
adc
insl
jmp
ss
mov
xchg
aas
dec
and
fs
stc
lea
lods
cld
outsb
pop
cmp
out
push
js
push
std
cs
push
inc
insl
and
stos
cmp
inc
mov
sbb
pop
xor
inc
popl
cmp
push
daa
push
mov
lahf
out
or
in
decb
mov
sub
cmp
hlt
ds
adc
cmp
xchg
push
lahf
add
adc
or
mov
inc
pop
sub
aas
pusha
repnz
sarb
sbb
add
and
into
sub
inc
shll
dec
dec
mov
mov
and
pop
pop
iret
and
adc
pop
aas
xchg
je
adc
jne
or
add
je
mov
pushf
sbb
daa
xchg
lahf
or
push
add
or
les
outsl
dec
repnz
jb
dec
in
js
js
sub
scas
cmp
adc
xchg
adc
xor
scas
mov
in
in
pusha
mov
pushl
jle
jg
stos
lock
mov
jns
jnp
pusha
push
mov
inc
repnz
add
mov
fistpll
push
sbb
mov
push
xchg
fisubl
push
les
scas
mov
fs
in
or
daa
jns
dec
jmp
inc
jnp
pop
and
fs
addr16
add
data16
ficompl
or
mov
jo
iret
enter
xlat
call
lods
xchg
xchg
jnp
mov
pop
sub
dec
jl
nop
and
jl
pushf
sbb
or
inc
scas
mov
adc
int
add
in
clc
call
pushf
jmp
jns
jns
repz
repz
add
jno
iret
repz
jl
xchg
xchg
or
out
inc
in
sbb
jno
les
jb
and
jge
jge
in
cmp
adc
jle
jle
cltd
inc
mov
cld
add
fwait
dec
ds
add
push
mov
leave
jae
cwtl
push
jp
jae
cmp
jp
jp
xchg
daa
pop
leave
les
daa
lods
jp
mov
mov
out
or
in
xchg
daa
daa
daa
cmc
std
add
leave
or
jae
cmp
jnp
jnp
xchg
imul
xchg
add
orl
das
xchg
pop
jbe
cmp
fwait
mov
hlt
mov
rcll
adcb
adcb
jl
jl
sbb
int3
mov
jl
jl
add
test
jl
repnz
and
lcall
xor
ss
push
mov
iret
ljmp
xchg
out
js
mov
sbbl
mov
call
cmp
pop
push
add
mov
cmp
adcb
leave
jl
insb
orb
pop
jge
mov
mov
push
lock
inc
in
fs
xor
xchg
frstor
push
daa
inc
xchg
rcll
fidivrs
scas
xchg
sbb
out
out
jge
subl
in
mov
jle
jle
jle
shll
cmp
jle
xchg
and
adc
test
das
test
das
das
das
aas
dec
jnp
cmpl
cltd
jle
das
das
das
movsb
jle
jle
jle
jle
repz
sarb
push
or
or
iret
repz
or
or
jg
sahf
out
or
out
sahf
out
adc
adc
sahf
out
sahf
adc
push
adc
jns
out
adc
icebp
and
sbb
nop
cmp
lds
in
and
int
pop
test
push
into
pop
mov
fists
cmpb
dec
mov
push
xor
test
aaa
dec
and
jns
subb
orb
lcall
jbe
jb
rcrl
cmp
daa
lods
scas
dec
iret
repnz
sub
in
xchg
add
fisubs
xchg
xchg
push
fcmovne
jo
js
addb
ja
nop
mov
push
mov
add
inc
in
add
into
adc
push
iret
add
hlt
out
pop
add
add
xchg
jns
add
mov
out
or
aaa
add
fmul
xchg
adc
orb
push
push
push
vorps
push
pop
jb
ja
shll
mov
add
xchg
push
mov
inc
dec
sbb
decl
scas
push
xor
dec
les
add
mov
leave
mov
and
dec
push
cmc
xchg
jno
mov
mov
enter
mov
mov
cs
or
pusha
mov
mov
syscall
test
test
les
test
cmp
mov
iret
arpl
mov
leave
sub
sbb
mov
sbb
imul
jns
or
icebp
test
test
test
xor
adc
sbb
test
ja
mov
xchg
fstpt
xchg
cmp
stos
push
add
ljmp
mov
mov
mov
decl
cs
xchg
das
das
das
das
dec
xchg
pop
xchg
das
das
das
das
outsb
xchg
jle
xchg
mov
cmpsb
xchg
cs
das
scas
xchg
in
in
femms
or
in
or
or
in
in
push
add
in
add
xchg
xchg
out
mov
dec
dec
dec
in
stc
push
xchg
adc
lods
mov
push
dec
cs
out
clc
pop
jb
inc
shll
nop
xchg
mov
and
dec
ja
lret
add
idiv
xchg
ja
mov
add
push
push
mov
es
int3
mov
mov
or
dec
and
add
sub
movsb
aaa
and
mov
scas
fbstp
outsb
cwtl
push
loop
iret
out
das
idivl
sahf
fmull
incl
mov
push
pop
jns
jns
or
or
xchg
imull
comiss
pop
push
cmovle
or
mov
pop
lahf
iret
fcomps
aas
rolb
js
mov
out
in
js
inc
pop
or
out
cmp
daa
adc
daa
cwtl
and
xor
mov
push
in
xchg
mov
jp
in
xor
addl
mov
shr
add
jbe
xchg
out
divb
or
add
cmp
enter
mov
aas
mov
cmp
sbb
add
add
iret
push
imul
or
or
iret
repz
int3
jo
xchg
mov
mov
fimull
inc
repnz
mov
in
adc
xchg
aas
mov
pop
jb
mov
xchg
mov
sahf
xchg
out
pop
mov
mov
cmp
rorl
fisttpl
fwait
or
xchg
ja
mov
sbbb
pop
fcompl
add
xchg
push
add
test
inc
pop
xchg
xchg
outsb
fistpl
add
in
inc
inc
push
adc
inc
mov
in
mov
and
jae
xchg
pushf
iret
push
xchg
jns
add
pop
xchg
lcall
push
lds
daa
iret
pop
mov
jmp
repnz
stos
or
outsl
icebp
in
enter
testl
das
call
lea
cmp
lea
add
in
pop
aas
bound
lcall
pushf
in
stc
mov
lea
dec
jb
xchg
lea
mov
mov
mov
inc
repnz
ja
jl
mov
xchg
inc
add
leave
inc
repnz
pop
in
xchg
jl
ja
mov
addr16
outsb
push
loopne
jmp
mov
jns
aas
add
and
sub
push
call
jo
in
in
jg
mov
in
stos
mov
int3
xchg
out
in
in
or
or
lock
outsl
sbb
cmp
mov
nop
push
nop
pop
nop
push
mov
pushf
mov
mov
add
cltd
dec
ds
mov
cmp
fnstsw
bnd
add
js
adc
fmull
fimull
popa
leave
inc
repnz
add
test
jmp
insl
stos
loop
fnstcw
xchg
mov
xchg
xchg
pop
or
jb
xchg
sbb
and
push
daa
xchg
iret
enter
inc
fwait
dec
xchg
repz
push
mov
leave
xchg
add
mov
or
push
std
mov
out
roll
mov
aas
cmp
iret
pusha
iret
sbb
mov
ds
dec
push
add
push
cmp
pushf
das
lea
xchg
popf
push
add
mov
leave
rep
and
int
out
mov
fstl
leave
xor
in
ja
fcoms
daa
cmp
xchg
mov
xchg
sub
push
cmp
jg
xchg
xchg
adc
push
lcall
mov
out
inc
mov
pop
xchg
inc
mov
xor
in
jns
pop
pusha
addr16
mov
mov
xchg
push
and
pmaxsw
pop
syscall
mov
cmp
lahf
lock
push
das
out
fcomip
call
incl
xchg
setbe
add
pop
push
daa
invd
pop
call
aas
xchg
aas
inc
xchg
cmp
das
dec
xchg
push
xchg
das
jo
dec
mov
xchg
dec
ja
fimull
addr16
mov
xlat
xchg
lahf
out
pop
flds
xchg
outsb
lar
notl
xlat
sbb
faddl
xchg
inc
xchg
lret
inc
repnz
cmpsl
push
lods
lds
imul
push
pop
rcrb
repnz
xchg
sub
ljmp
das
and
mov
aad
jmp
xchg
xchg
mov
cmp
and
or
pop
fwait
in
xor
push
sbb
mov
inc
pop
aas
cwtl
mov
and
cwtl
cwtl
idivl
repnz
flds
inc
mov
adcl
out
push
mov
xchg
cwtl
sbb
bound
dec
dec
cs
ja
out
cwtl
push
jbe
adc
add
inc
fisubrl
fidivl
push
aad
mov
psllq
jae
add
andb
daa
iret
add
xchg
lcall
stos
or
outsb
pop
ret
or
jns
fcmovu
adc
mov
ljmp
in
adc
cmp
xchg
lcall
pop
cmp
add
inc
sahf
jl
push
ds
pusha
movsb
or
movsb
jo
jle
cmp
in
jbe
fisttps
pushf
in
fwait
push
mov
lcall
leave
push
add
in
xor
mov
pop
aas
fwait
mov
dec
fwait
push
push
add
pusha
imul
jbe
subl
jns
cs
in
add
fsubs
add
das
mov
pop
push
add
ja
iret
xlat
push
add
ja
jo
lar
cs
mov
or
or
adc
jl
pop
or
outsb
daa
iret
sbb
add
pop
pop
dec
sahf
out
add
add
rorl
pop
jae
push
or
mov
xchg
ds
or
mov
scas
mov
pushf
ret
pushf
cmpsl
adc
and
pushf
lcall
femms
add
add
pop
popf
mov
and
popf
insb
cmpsl
mov
dec
popf
push
push
pop
push
ja
jbe
das
xchg
enter
test
add
daa
mov
ljmp
ja
mov
xor
out
out
fs
push
int
cmp
popf
out
add
das
das
xchg
test
sahf
pop
sahf
and
sub
sahf
dec
sahf
das
das
das
das
pop
sahf
fs
outsl
sahf
jp
cmp
repz
or
iret
repz
dec
mov
outsb
enter
ficomps
call
inc
push
leave
add
or
test
movsb
push
daa
int3
scas
mov
lret
lret
and
das
lahf
cmp
jo
lahf
aaa
push
lahf
testl
add
test
inc
push
xchg
inc
stos
push
js
adc
nop
stos
nop
lahf
cwtl
lahf
mov
jb
lahf
scas
lahf
mov
xchg
and
lahf
ficompl
jb
lock
sti
lahf
push
mov
inc
mov
daa
mov
cmp
cmp
push
mov
daa
jns
add
mov
sbb
shl
int3
mov
enter
mov
add
lea
mov
bound
mov
mov
add
sbb
jmp
repnz
add
das
das
aaa
mov
dec
push
adc
cs
xchg
iret
pop
pusha
lods
test
jbe
or
jge
test
pop
adc
in
lea
xchg
mov
jns
cmp
lods
invd
loopne
xor
rol
ljmp
jnp
xor
pop
leave
push
imull
push
aas
push
aas
or
movsb
cmpsl
sub
xor
out
in
fs
cmp
mov
inc
repnz
cmp
pop
clc
fcmovne
leave
leave
outsl
ja
xchg
add
scas
stos
ret
xchg
cmpsl
fwait
pushf
lret
lsl
roll
cwtl
cmpsl
mov
js
jnp
mov
das
dec
ljmp
jns
mov
ja
mov
scas
jecxz
insl
or
ja
mov
fisttps
enter
mov
cmp
cld
mov
pop
movsb
cmpsl
or
inc
dec
cmp
mov
jl
dec
movsb
push
pop
push
jae
rorl
jge
popf
fdivrl
xchg
xchg
add
pop
pop
mov
lahf
rcrb
psubusb
loopne
je
out
call
repnz
sbb
or
pushf
ljmp
sub
and
dec
push
add
in
and
jno
jns
add
iret
mov
leave
mov
mov
cmpsb
or
and
repnz
inc
pop
add
into
leave
inc
jge
daa
fistps
pop
test
fwait
push
iret
lds
mov
aad
push
push
out
mov
add
dec
adc
sbb
and
add
add
out
mov
add
cmp
in
sahf
or
dec
sysret
loop
and
push
push
cmpsl
pop
cmpsl
push
nop
insb
testl
fstpl
aam
daa
hlt
cmp
and
out
xchg
lahf
iret
cmp
cmp
shll
iret
repz
flds
loope
daa
pop
loopne
outsl
jmp
rcr
cmpsl
add
adc
xor
sub
daa
push
inc
dec
leave
mov
in
mov
int3
mov
pushf
inc
mov
mov
test
test
icebp
faddl
xlat
ja
mov
repnz
psllw
sahf
pop
xchg
lahf
or
xor
lret
pop
xchg
test
in
dec
and
fcmovne
push
test
pop
daa
mov
leave
loopne
cmp
cmp
test
test
sahf
ja
into
push
orl
mov
jbe
xchg
mov
shufps
fcmovne
leave
into
ficomps
fmulp
repnz
jle
pop
mov
pop
inc
inc
pusha
jb
aaa
test
mov
push
stos
push
stos
xchg
out
pop
es
adc
out
jns
ds
dec
push
stos
mov
push
pop
pcmpgtd
add
nop
mov
push
inc
xchg
shr
xchg
mov
push
daa
movsb
fdiv
repnz
movsb
stos
lods
stos
paddsw
jns
scas
fdivl
pushf
loop
stos
stos
out
outsl
sub
push
jb
mov
pmulhuw
adc
sub
add
das
xchg
or
das
in
cmp
cmpsl
pop
jnp
les
add
repnz
or
or
pop
mov
push
xchg
sub
push
scas
jmp
pop
jo
dec
mov
mov
xchg
jbe
popf
mov
paddusb
ja
das
xchg
out
pushf
pop
lods
push
lds
decl
lods
mov
outsl
cmp
push
lods
iret
repz
pop
arpl
add
sidtl
jnp
dec
lock
mov
mov
fists
daa
pop
pop
jmp
and
in
lds
jmp
xchg
add
pop
and
lods
insl
and
leave
inc
lods
or
imul
cmpsl
ja
push
leave
jae
dec
xchg
iret
add
mov
outsb
xchg
lods
pop
xlat
add
in
mov
fisttpll
push
cs
out
pop
xchg
pop
mov
testl
mov
cmpsl
and
add
arpl
leave
cmp
jg
scas
pushf
je
gs
pop
pop
add
dec
jle
or
scas
cmp
test
out
popf
into
add
jns
add
pushf
xchg
out
int
pop
out
sarb
or
mov
inc
scas
inc
sbb
mov
cmpb
outsb
jg
lahf
dec
scas
lahf
mov
cmpsl
aas
scas
repnz
mov
push
or
pusha
xchg
das
outsb
push
das
iret
scas
shl
in
stos
pslld
add
or
jb
jb
cmp
jb
jb
cwtl
mov
sbb
jb
jmp
mov
iret
jae
cmp
das
imul
push
jnp
pop
in
sahf
out
sbb
sbb
inc
mov
mov
fnstcw
jmp
pop
mov
or
shrl
mov
iret
sub
xchg
pushf
pushf
pop
and
test
sahf
mov
fistpl
push
icebp
or
jb
stc
sbb
adc
sbb
and
sbb
mov
mov
mov
dec
sahf
fsts
pop
jl
cmp
mov
add
leave
fdivs
jnp
xor
pop
mov
scas
push
mov
mov
mov
es
mov
mov
mov
inc
mov
mov
mov
mov
data16
mov
mov
mov
xchg
repz
adc
scas
jl
pop
cmp
sbb
jno
cmp
cs
mov
pop
in
out
hlt
xchg
pop
fmull
pop
cld
out
sbb
enter
mov
mov
mov
inc
mov
mov
jb
enter
mov
mov
mov
mov
jge
mov
repz
stos
push
sbb
sbb
iret
shl
sbb
pop
xchg
out
cmp
out
push
and
mov
and
push
mov
push
repnz
push
scas
push
mov
ret
rcr
xor
mov
dec
add
and
jle
pop
mov
mov
ret
sbb
jb
popl
mov
outsb
mov
pop
sidtl
adc
and
mov
pop
insl
stos
fimuls
add
daa
insb
ja
xchg
cmp
mov
addr16
add
arpl
ja
mov
push
add
enter
fidivs
pmuludq
or
aaa
adc
or
leave
in
in
ss
inc
dec
adc
repz
cmp
adc
pushf
cmp
jp
test
leave
fwait
cmpsb
sbb
repz
leave
repz
jo
repz
and
mov
out
jmp
lds
adc
mov
jb
call
mov
mov
mov
enter
pushf
loope
adc
dec
inc
dec
data16
jns
dec
mov
sahf
adc
xchg
xchg
fstpt
cmp
leave
push
cmp
sbb
in
in
push
pop
pop
sbbb
mov
into
out
jns
in
and
cld
jns
and
mov
jbe
dec
pop
pop
sub
and
mov
sub
pop
daa
mov
jae
mov
cs
shll
iret
push
leave
pop
rcr
ja
cmp
or
or
icebp
push
jns
dec
sahf
or
femms
add
or
adc
iret
cmp
sub
adc
jo
out
lar
pop
inc
push
aam
inc
sbb
dec
jmp
movsb
test
sbb
leave
push
nop
xchg
int
pop
enter
fcmovne
repz
add
jl
out
loopne
jb
mov
mov
and
out
movsb
mov
repz
xchg
iret
xchg
add
jns
mov
fbstp
push
in
repnz
mov
xor
sub
cmp
daa
mov
mov
pcmpgtw
xchg
imul
xchg
test
mov
pushf
fadd
mov
rcr
leave
rorb
pop
repz
sarb
sti
add
inc
push
and
mov
mov
in
in
popa
imul
fidivrl
mov
push
mov
xchg
lret
mov
iret
xlat
out
jns
pop
out
add
pushl
cmp
ja
das
rcr
xchg
push
jg
int3
xor
jns
iret
mov
dec
push
cmpsb
add
xchg
out
pop
push
movsb
jge
dec
dec
dec
test
ret
int3
das
xchg
xchg
xchg
or
ror
leave
add
pop
call
xchg
iret
or
adc
sbb
enter
shrl
xor
in
mov
cmpsl
pop
ja
ja
into
data16
outsb
pop
jbe
add
in
dec
xchg
dec
sahf
pop
sahf
or
jbe
mov
rorl
outsl
mov
in
loope
jmp
filds
ret
out
popw
or
out
ret
test
mov
push
leave
rep
mov
inc
pop
dec
xchg
add
and
add
pushf
pushf
pushf
xchg
es
iret
mov
jb
mov
loop
jb
pop
leave
jl
ret
aas
or
cmp
cmp
fmull
jg
dec
pop
push
add
pusha
add
sarl
rclb
fwait
add
jae
mov
cs
out
add
stc
loope
repnz
in
sbb
dec
mov
pushf
les
pop
lsl
out
les
push
pop
push
sahf
out
sahf
pop
pop
imul
out
jg
mov
xchg
rclb
les
pop
pop
rol
xlat
dec
mov
in
pop
movups
clc
rclb
push
sbb
pop
pop
pop
ds
cmp
inc
lds
lds
and
jns
out
jno
jl
xchg
repz
out
xchg
and
in
in
daa
mov
sub
cmp
aam
sub
ljmp
sahf
or
push
xor
in
in
sahf
xor
aaa
inc
pop
iret
leave
leave
leave
dec
pop
arpl
xchg
cmpsl
fwait
cmp
test
lcall
cmpsb
popl
shr
xchg
xchg
scas
mov
xlat
stc
movb
in
xor
add
and
inc
xor
aas
cmp
inc
jns
jns
push
pop
addr16
jb
jns
jns
jge
mov
xchg
sahf
jns
jns
test
lret
sahf
ja
aad
loopne
pop
jmp
in
out
sbb
enter
sbb
jb
enter
push
push
cmp
iret
repz
inc
and
jns
out
push
and
and
in
in
jp
nop
das
fwait
repz
cmp
cmpsb
sub
cmp
mov
fucom
jns
out
call
mov
xor
leave
adc
out
cmp
cmp
jns
xchg
dec
dec
cmp
jb
je
popa
insb
ja
jae
jb
lea
mov
scas
leave
lahf
inc
pop
rcll
leave
xchg
leave
arpl
lret
out
scas
movhps
pop
pop
lret
vmwrite
lret
fisubrs
lahf
pop
push
add
bound
add
jb
lret
leave
pop
adc
out
outsl
in
inc
cmpsl
mov
jl
daa
pushf
daa
daa
inc
add
mov
cmp
rolb
cs
shrl
clts
call
leave
clc
add
das
or
dec
xor
fcom
lahf
xor
add
repnz
lret
inc
lret
das
repnz
lret
push
lret
pop
lret
arpl
xchg
aad
sub
xlat
outsb
fnstsw
sahf
cmpsb
fmull
dec
scas
mov
mov
jb
inc
repnz
loope
in
cld
jnp,pn
testl
or
lea
mov
or
out
cmp
inc
or
jb
cmp
gs
sub
xchg
adc
cmpsl
mov
adc
popf
cmp
rcrl
sbb
sbb
out
jmp
xchg
iret
dec
aaa
nopl
or
iret
cmp
adc
and
fisttpll
daa
inc
cmovl
bound
daa
insl
js
or
xchg
push
leave
sub
fadd
int
iret
repz
add
add
ja
in
cmc
push
add
push
cmp
cmp
lea
jb
into
xor
pop
into
gs
sahf
out
add
add
jns
xchg
xchg
syscall
pop
ds
or
into
mov
into
mov
jns
out
rcll
fimuls
jns
jns
outsb
jmp
into
outsb
and
adc
cmp
repz
ss
sbb
fwait
nopl
out
es
and
and
leave
repz
sahf
and
cltd
sahf
out
fisubs
sub
out
lds
adc
pop
pop
push
loope
outsb
out
icebp
iret
cld
iret
pop
push
sbb
sarb
sar
inc
lods
rorb
push
xor
mov
enter
nop
fildl
mov
add
add
fcmovne
repz
xchg
xchg
pop
mov
mov
add
add
fstpt
xchg
or
jecxz
add
daa
out
lea
rorl
add
iret
repz
sub
xchg
outsb
repnz
sysret
repnz
rcrl
shll
cmp
repnz
sarl
adc
into
nop
adc
cmp
add
pop
pop
push
add
popf
dec
lock
rorl
xor
sti
lsl
fisttps
sbb
xchg
jl
frstor
shrb
shrb
jl
sahf
rcrb
bswap
repz
sahf
add
dec
push
push
push
pop
out
fwait
cmp
or
xchg
xchg
data16
jbe
cmpl
xchg
pop
pushf
adc
iret
jae
movsb
lods
adc
pinsrw
sahf
out
jns
in
in
sbb
loope
jns
cld
sbb
push
leave
xor
shrb
pushf
jecxz
mov
cmovnp
scas
push
ror
repz
mov
insb
push
push
ja
iret
leave
repz
or
popf
cmp
scas
push
or
daa
daa
daa
mov
bswap
lock
scas
daa
daa
sti
push
aam
adc
adc
push
sbb
daa
in
sahf
out
xor
cmp
fucomi
push
dec
pop
punpckhwd
push
je
cmp
jae
and
mov
dec
sahf
outsb
mov
mov
cmp
stos
es
shl
cmp
int3
sub
loop
sarl
in
clc
push
sub
repz
push
sbb
push
jbe
jns
cmp
xor
comiss
dec
sahf
out
pop
data16
jno
es
sub
ja
ficomps
or
sub
xchg
sahf
mov
aas
cmpsl
mov
xor
cmp
jg
out
add
inc
push
mov
pop
cmp
inc
aas
into
pop
in
push
xchg
sub
inc
aaa
mov
pop
or
fcmovne
repz
cmp
push
add
setle
jns
add
add
xchg
out
pop
or
or
mov
or
xchg
ja
scas
adc
adc
adc
and
cmp
inc
push
addr16
in
jbe
das
push
xorps
jns
outsb
das
insl
push
and
fildl
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
sbb
or
dec
sbb
cmp
push
rol
add
jmp
out
xor
lahf
out
sahf
and
sbb
or
call
lock
cmp
repz
enter
out
iret
mov
lods
movsb
mov
nop
mov
iret
repz
pop
push
inc
iret
repz
inc
cmp
sbb
or
jg
add
dec
xchg
adc
mov
inc
push
mov
adc
add
xchg
adc
popa
mov
std
inc
pop
push
sbb
daa
mov
cmp
mov
cmp
jl
das
inc
ss
movsb
add
lret
sahf
cmpsb
fisttps
mov
cld
adc
inc
jle
test
shll
leave
in
cmp
and
mov
iret
mov
in
call
std
dec
jle
adc
push
ficompl
mov
xor
mov
xchg
rcr
fsubp
stc
jb
jle
idivb
inc
pop
adc
or
push
roll
add
rolb
or
and
push
clc
ja
add
push
add
xlat
incl
xchg
add
or
xchg
test
insl
aas
pop
aas
or
les
xor
shl
out
mov
out
cmp
or
out
adc
jns
out
adc
sahf
out
sbb
in
iret
repz
sbb
iret
repz
sub
enter
lcall
jmp
clc
ljmp
jns
jp
mov
pusha
call
xor
jns
mov
mov
loope
xchg
dec
icebp
xchg
push
add
fcoms
mov
inc
pop
pop
loop
or
js
and
in
jle
adcb
cmp
jae
xorb
inc
inc
lock
addr16
push
push
mov
es
pop
jle
adc
push
movb
aas
pop
mov
xor
daa
idivl
mov
and
pop
call
stos
insl
stos
pop
jg
out
push
cmc
mov
sub
mov
test
daa
mov
es
loopne
fisubs
icebp
cmp
sbb
sbb
addb
icebp
clc
add
lock
out
iret
and
push
and
out
sbb
cld
lock
add
sahf
fcomps
pop
adc
fsubl
das
cmp
or
or
adc
pop
rcrb
in
enter
out
push
rcrb
push
mov
jns
out
test
movsb
and
and
and
aam
mov
nop
xor
clc
mov
xor
inc
out
xor
adc
xorb
jl
incl
xorl
push
cmp
sahf
out
sahf
pop
js
mov
repz
sarl
xor
add
out
fidivrs
push
pop
ja
mov
jns
xor
jae
das
push
dec
insb
mov
add
xchg
cmp
mov
inc
pop
enter
psubw
push
ret
enter
hlt
adc
mov
repnz
add
leave
sbb
into
sbb
rorl
and
sahf
mov
ljmp
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
push
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
incl
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
jmp
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
incl
int3
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
pushl
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
lcall
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
jne
int
add
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xchg
add
mov
loop
mov
cmpsl
rcrb
adc
pushl
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
adc
in
decl
std
orl
pop
ficomps
frstor
ret
pop
push
pop
pop
jmp
inc
je
inc
inc
push
dec
call
xchg
lret
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
fdivrl
jmp
rclb
mov
sub
mov
call
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
jmp
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
jmp
ljmp
mov
leave
mov
insb
fdivs
jne
filds
or
pushl
shrl
push
ficoms
push
xlat
enter
mov
and
mov
cltd
call
mov
sub
mov
and
or
adc
stos
lcall
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
or
lahf
xor
mov
js
stc
inc
ljmp
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
pushl
test
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
lock
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
outsl
pop
fistps
je
mov
aam
movsl
fisttps
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
jl
fnstsw
add
daa
adc
or
and
test
or
mov
jmp
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
ljmp
and
mov
add
inc
aad
scas
ja
popf
adc
call
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
lcall
shlb
add
inc
push
imul
xorb
sbb
incl
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
scas
decl
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
cli
out
mov
jns
imul
andl
shrb
rclb
or
clc
dec
add
mov
das
es
lds
or
add
push
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
sar
incl
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
std
cmp
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
scas
and
inc
imul
scas
fcompl
fldenv
filds
push
popa
adc
aaa
pusha
mov
jg
add
fidivrs
mov
jmp
mov
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
test
inc
add
push
sub
mov
or
sbb
add
sub
inc
pop
and
scas
xor
adc
add
jmp
repz
aad
push
iret
repz
xlat
fcomp
fcmovu
fdivrl
repz
fsubp
jecxz
iret
repz
in
jmp
repz
in
repz
cmc
repz
repz
clc
stc
cli
push
cmpsb
sbb
sti
cld
pop
adc
sarb
rcrb
adc
sbbl
push
sbb
jae
mov
push
dec
bound
cmp
mov
dec
xor
inc
insl
bound
inc
push
mov
inc
dec
popa
test
inc
inc
inc
in
fistpll
and
dec
aam
dec
cmp
inc
jno
push
push
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
divb
xor
or
xor
bound
aam
push
je
push
inc
jbe
clc
shl
pop
insb
imul
xchg
xor
inc
ljmp
or
leave
and
shl
mov
and
insl
pop
or
or
push
je
ss
dec
pop
push
jbe
imul
fcoms
mov
gs
push
inc
push
sub
push
fdivl
add
cmp
xor
insb
popa
jns
imul
mov
insb
pop
addb
popa
xchg
cmp
je
loope
subb
push
popl
in
and
add
cltd
and
jae
out
inc
daa
int
mov
or
inc
aas
xor
push
mov
mov
inc
jbe
inc
sbb
imul
jae
addr16
jo
inc
inc
add
ds
sub
push
mov
sbb
iret
int
push
andb
dec
cmp
inc
mov
or
pop
mov
fs
ja
outsb
jne
insl
inc
push
andl
dec
jge
fwait
cmp
add
add
or
mov
xor
addr16
clc
xchg
adc
jns
mov
mov
jg
sub
aas
aaa
lret
pop
cltd
dec
cld
push
lods
mov
pop
adc
outsl
pop
mov
mov
add
lahf
sub
xchg
popa
cmp
dec
mov
mov
and
movsb
mov
add
inc
jb
cmpsl
and
popa
adc
lahf
mov
push
outsl
outsl
test
xchg
outsl
xor
andb
jno
stos
loop
push
mov
rclb
in
lds
pop
inc
push
andb
or
mov
mov
add
out
sarl
jo
push
stos
shlb
jns
adc
inc
jb
push
dec
inc
stos
dec
mov
je
inc
outsl
arpl
adc
mov
jle
adc
inc
push
bound
ja
outsl
push
cmp
jbe
xor
xchg
push
lods
jg
push
dec
bound
cltd
xor
out
nop
add
loopne
int3
inc
repz
adc
add
jg
sub
clc
dec
lods
xor
xchg
movsb
sbb
inc
dec
sahf
dec
cmc
adc
inc
fs
sbbb
jle
jo
sbb
push
sbb
jg
sub
inc
dec
pop
je
jmp
bound
outsb
arpl
je
xor
pop
pusha
in
or
sub
flds
repnz
pop
inc
add
lods
xchg
fildl
nop
cmp
mov
sub
adc
dec
test
adc
add
adc
inc
add
lahf
inc
fdivr
loopne
adc
dec
fs
fsubrl
fstpt
add
add
jg
add
or
pop
pop
push
or
or
or
or
or
adc
outsl
push
outsl
adc
push
adc
mov
or
pop
sbb
adc
adc
adc
add
data16
or
aas
mov
inc
add
ss
int
lock
add
add
adc
fiadds
add
add
dec
fst
inc
mov
subl
imul
mov
add
push
adc
pop
and
xor
inc
mov
add
inc
adc
xor
cmpb
loopne
adcb
xchg
pusha
xchg
sbbb
add
fsubs
sbb
jecxz
add
xor
test
add
mov
stos
add
xor
lahf
xchg
xor
into
add
adc
mov
ja
adc
cld
out
incl
adc
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
inc
roll
xorb
scas
fiaddl
or
sub
inc
stos
js
lock
jg
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
imul
lcall
pop
fdivrl
add
mov
mov
loopne
mov
fsts
cld
mov
loope
mov
cmp
pop
ret
ret
ja
out
cmp
pushl
xchg
sti
push
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
stos
addb
inc
inc
xchg
std
or
std
or
ljmp
mov
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
aaa
std
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
adc
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
call
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
jg
sar
lcall
fs
scas
mov
pop
pop
mov
popl
movb
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
imul
out
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
lcall
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
sti
ljmp
push
out
or
push
sahf
pop
clc
sti
in
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
mov
xchg
outsl
xchg
add
pop
lock
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
stc
in
div
mov
sbb
mov
sar
andl
aas
icebp
testb
mov
inc
push
pop
xor
jns
mov
in
repnz
jno
pop
mov
jg
jg
scas
cld
or
push
inc
sbb
paddb
incl
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
push
lcall
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
in
aaa
fldln2
fildl
stos
es
or
dec
fisttpll
out
aas
std
push
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
fwait
dec
ljmp
jns
enter
or
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
xor
jmp
not
mov
xchg
pop
clc
pop
hlt
sub
movsb
add
xlat
call
lea
jg
gs
std
xorb
jg
aad
adc
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
ljmp
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
incl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
dec
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
or
xchg
sub
mov
outsl
inc
call
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
fcmovu
ds
cmpsl
scas
popa
in
pop
or
pushl
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
das
push
shr
jae
shrb
shlb
out
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
repnz
jg
adc
loopne
sar
adc
paddsw
lahf
xor
imul
dec
sahf
cmpl
mov
aas
mov
fsubrl
orb
and
jg
ret
push
clc
xchg
pushf
mov
repnz
loope
cld
push
and
mov
adc
inc
aas
push
rcrl
lahf
loope
pop
rolb
pop
inc
jb
fistpl
adc
call
jno
repz
fbld
nop
mov
inc
sti
arpl
daa
std
or
sbb
lock
jg
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
ds
fistps
lds
fidivrl
jg
stos
pop
ds
ljmp
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cld
addl
sbb
mov
lahf
outsl
imul
clc
int3
push
sbb
pop
xchg
incl
test
bound
pop
outsl
xchg
inc
test
jg
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
pushl
jp
adc
lahf
mov
or
out
lcall
jle
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
mov
or
and
xchg
fidivrs
mov
insb
test
aas
repz
outsl
lock
outsl
push
paddsw
pop
stc
out
mov
clc
push
std
mov
je
icebp
or
mov
lcall
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
outsl
pop
bound
dec
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
mov
xchg
imul
pop
in
cmp
cld
int
mov
fidivs
clc
adc
jmp
pop
inc
clc
jg
dec
mov
xlat
inc
incl
out
clc
aas
aas
mov
jg
mov
sub
addr16
in
idivb
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
icebp
scas
cli
inc
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
sbb
scas
or
loope
jae
jmp
adc
je
jge
fbstp
out
incl
jg
stc
add
out
icebp
mov
loope
mov
cmpsl
jb
das
xchg
popf
sti
mov
fbstp
enter
push
pop
aam
jge
out
cmp
or
test
call
xor
decb
adc
outsl
decb
dec
adc
call
movsb
out
cltd
add
loope
mov
or
xchg
inc
add
push
pop
aaa
std
fisttps
dec
inc
sbb
lock
jg
xchg
fimull
ret
ror
cmp
rcrl
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
sub
ja
and
dec
add
xor
pop
inc
xchg
fldenv
iret
fdivrl
xchg
lcall
sbb
dec
sbb
lahf
dec
or
jo
sarl
pop
imul
jno
ret
fs
sub
inc
arpl
out
iret
incl
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jmp
outsl
jmp
std
mov
addb
faddl
mov
sbb
outsl
pushl
inc
pop
add
pop
stc
push
dec
out
fstpt
mov
enter
lahf
mov
jmp
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
aam
dec
fildll
fsubrl
dec
add
push
repnz
add
dec
lods
or
sti
push
sti
pop
inc
dec
push
mov
xchg
push
mov
int3
pop
mov
and
add
jg
add
mov
inc
nop
rclb
jne
popa
int3
out
js
loopne
call
jne
mov
enter
jae
pop
pop
outsl
outsl
sahf
lret
push
js
into
mov
mov
add
jmp
push
scas
sarb
pop
dec
or
fs
sarb
cmp
or
int3
loopne
cmp
mov
int
adc
mov
and
jae
pop
mov
pop
cwtl
ret
inc
cli
pop
xchg
push
sub
or
mov
outsb
es
xchg
leave
mov
ret
arpl
js
cmp
out
adc
incl
sub
clc
lret
sbb
add
xchg
in
dec
or
cmp
adc
das
jno
call
sub
in
mov
loope
fs
in
subb
pop
into
test
call
pushf
sub
data16
lea
loop
ja
fcompl
dec
push
mov
xlat
incl
adc
jmp
lret
lret
sbb
pop
int3
lahf
out
mov
xchg
push
or
jmp
notl
lods
inc
movsl
test
add
out
pop
stc
xchg
fildl
mov
inc
iret
pop
mov
in
add
iret
xchg
ret
cmp
sub
int
lods
pop
cld
incl
iret
inc
rorb
popa
mov
pop
push
imul
popf
mov
cltd
adc
inc
xlat
lret
mov
cmpsb
out
add
mov
and
cwtl
jge
xchg
pushl
pop
js
lret
bound
scas
push
movsl
daa
idiv
jmp
sbb
or
fdivs
in
imull
cwtl
les
xchg
lds
jp
adc
fcoml
gs
loop
rcl
fsubrl
jo
lret
push
addr16
push
hlt
jp
in
add
daa
sub
std
xor
add
dec
andl
loop
call
in
daa
xor
mov
jg
ljmp
enter
add
popa
and
aam
fmulp
int3
icebp
mov
cltd
aam
inc
xchg
xchg
rcrl
cmpsl
jl
imul
mov
cmp
decl
adc
add
sbb
daa
fbld
lcall
mov
jecxz
in
imul
test
scas
jns
cmp
dec
xchg
adc
mov
lock
xor
ret
popa
adc
jb
or
lcall
into
in
mov
test
iret
sbb
push
push
mov
xchg
sbb
ficoms
adc
mov
xchg
sbb
pop
mov
push
xor
mov
mov
aas
ja
lock
push
mov
jnp
add
inc
adc
lds
jecxz
mov
pushaw
push
lret
testb
push
pop
lds
mov
scas
xor
fisttps
sub
adc
test
mov
jne
sbb
push
mov
out
imul
sub
cli
pop
add
icebp
xor
cltd
rcrb
cli
fucomip
cs
xchg
dec
orl
push
fnstsw
xor
int3
daa
cmp
js
mov
pop
mov
sub
jne
sub
mov
lret
frstor
call
jmp
jle
mov
lahf
test
mov
test
nop
mov
mov
or
sbb
add
dec
adc
roll
sub
call
push
jmp
ret
test
pushf
xchg
ss
ljmp
dec
pop
mov
push
pop
dec
jnp
mov
or
lret
fmuls
inc
cmpsb
stos
xor
outsb
sarb
or
fwait
imul
ja
fsts
add
lods
mov
xchg
aas
fstpt
dec
call
cmp
mov
pop
repnz
divb
push
pop
dec
cmpsb
outsl
fstpl
jmp
popf
inc
icebp
fmul
addr16
loopne
sub
mov
std
mov
cmp
test
js
and
cmc
ljmp
and
call
xchg
loope
loope
js
xchg
or
push
add
mov
or
inc
bound
pop
xor
inc
mov
clc
lcall
mov
xlat
bound
addl
xor
icebp
jmp
jle
xchg
xchg
mov
test
jg
jno
inc
mov
or
adc
dec
and
test
jb
mov
cmp
es
and
fcomip
dec
ret
mov
xchg
arpl
or
or
mov
ljmp
mov
pop
dec
jmp
jecxz
es
pop
imulb
outsl
jg
fcomps
mov
cmpsb
mov
cmpsb
inc
mov
or
cld
incl
enter
arpl
outsb
clc
inc
jp
pop
cmc
test
xchg
push
push
out
loopne
mov
fwait
in
outsl
stc
negl
jns
xor
sarb
cvtdq2ps
push
mov
and
sahf
out
and
fstpt
pop
cld
pop
aam
enter
fistps
and
jg
inc
dec
sub
lret
and
sbb
or
mov
add
decl
sub
gs
out
inc
add
cld
lds
dec
mov
popf
in
cmc
mov
pusha
cmp
imul
sbb
and
call
arpl
sub
lahf
repnz
insl
inc
lods
xchg
mov
dec
mov
lcall
pop
es
mov
xchg
test
dec
inc
nop
push
and
ret
cli
insb
std
mov
scas
in
cmp
pushf
mov
test
lcall
pop
aaa
mov
sub
scas
cmc
rorb
jmp
adc
je
sbb
jbe
or
mov
imul
out
or
push
icebp
add
or
xchg
ss
scas
call
imul
lret
sarb
sysret
inc
xlat
adc
sar
sub
mov
insb
pop
mov
hlt
int
adc
inc
push
mov
xchg
cli
push
int
jg
std
int3
mov
push
jecxz
and
lret
mov
dec
xchg
pop
nop
icebp
xchg
lock
cli
call
mov
aaa
orb
mov
pop
and
decl
push
insb
call
cs
push
shll
and
js
test
dec
mov
cmpb
jecxz
in
loop
outsb
sub
pop
mov
adc
fcomip
pushl
dec
popa
push
mov
xor
roll
xchg
mov
call
loopne
lahf
or
or
cwtl
xor
dec
ja
loopne
jno
decb
call
out
gs
mov
scas
sbb
leave
pop
jmp
imul
ljmp
xor
mov
inc
gs
xchg
inc
lret
dec
lods
ret
dec
pop
sahf
add
ljmp
lret
mov
outsl
jae
decb
cmp
sahf
mov
movsl
adc
sub
lcall
shrb
jmp
push
pop
or
mov
add
test
cmp
mov
mov
xchg
jmp
push
aad
das
test
cmp
mov
inc
idiv
out
cli
ljmp
or
dec
xchg
and
xor
pop
in
into
cmp
pop
pop
inc
mov
mov
cmp
sti
pop
cmp
push
cld
pop
lcall
push
cmp
inc
loopne
push
pop
sub
fstpt
repz
mov
test
incl
xor
add
and
push
arpl
data16
mov
cmp
push
imul
aas
mov
shll
xor
test
test
dec
pop
scas
movsb
or
cwtl
adc
mov
and
and
aaa
testb
mov
test
inc
outsb
repz
add
ljmp
mov
insl
nop
adc
cld
les
call
hlt
enter
cmpl
inc
push
mov
push
int3
push
ds
ja
jecxz
or
inc
scas
dec
lds
lret
pushf
mov
mov
mov
push
test
xchg
cmpsl
inc
fistpl
or
mov
ficompl
push
xchg
test
inc
test
sbb
loop
lock
mov
adc
mov
pusha
pop
jmp
mov
fsubl
jnp
cmp
imul
shll
jmp
and
cmpsl
jmp
test
call
hlt
popa
fs
cmpsb
mov
mov
or
pop
and
xor
add
jge
sbb
jno
pop
arpl
call
mov
call
push
xchg
sbb
jae
pop
in
jg
incl
xchg
dec
or
jo
aad
pop
jne
mov
push
std
pop
loopne
or
jns
add
ret
jle
testb
mov
jmp
faddl
sbb
inc
shlb
push
dec
mov
sub
out
cltd
mov
xor
push
pusha
std
add
scas
mov
xor
fsubrl
jg
push
jecxz
mov
mov
dec
ret
push
divl
jns
fnstsw
incb
pop
in
adc
mov
icebp
mov
dec
int
shrl
pop
push
cwtl
mov
stc
ret
dec
push
fwait
jecxz
mov
lcall
insb
xchg
mov
bound
incl
push
add
inc
pop
roll
sub
push
nop
mov
movsb
ret
inc
mov
aam
mov
mov
mov
xor
cmp
idiv
mov
cs
das
push
fdivrs
pop
mov
std
xchg
movsl
sbb
sub
ljmp
adc
mov
fcoms
enter
pusha
push
push
jg
xor
out
xchg
push
lcall
scas
mov
aad
sub
or
push
inc
and
add
les
cmp
jmp
cmp
adc
inc
daa
cld
mov
sti
jle
fsubrl
and
cltd
xor
incl
push
repnz
mov
out
aam
out
test
fisubrl
cmp
mov
ljmp
lds
outsb
push
dec
fldenv
and
pop
decl
addr16
in
inc
or
jl
inc
and
xchg
or
arpl
mov
rol
pop
adc
jmp
or
les
fists
mov
ljmp
push
cmc
pop
clc
mov
es
lret
mov
lcall
sbb
cltd
fbld
jmp
xchg
push
xlat
push
xchg
incl
cli
fcoms
mov
andb
sbb
xlat
imul
xchg
mov
test
fcomip
sub
fsubrs
dec
arpl
pop
and
adc
mov
mov
das
dec
jbe
sbb
add
lret
shrl
loope
gs
mov
dec
xor
sbb
aas
out
lret
cwtl
cmpb
shl
clc
addb
fildll
icebp
mov
pop
lret
and
fisubrs
faddl
js
insb
and
lcall
xchg
fstl
hlt
and
xlat
add
mov
xor
pop
je
loopne
call
dec
lods
aaa
hlt
insl
xor
mov
jecxz
test
xor
int3
pop
jmp
sbb
incl
mov
aam
mov
add
js
push
icebp
and
dec
push
fwait
movsl
addr16
aas
das
mov
incl
lret
mov
pop
and
sub
scas
pushl
pop
push
movl
and
and
aam
jne
xchg
cmp
cmpsl
jl
jmp
loop
sub
add
lcall
out
test
mov
and
in
push
cmp
mov
fsts
xchg
adc
add
dec
mov
incl
jb
cmp
sbb
mov
stc
lds
fimuls
icebp
mov
add
pushl
rclb
fcomi
mov
lea
call
int
loop
push
rclb
clc
add
nop
stos
rcll
and
xor
dec
test
call
adcl
in
jbe
ret
out
xchg
xchg
cmp
sbb
jbe
into
sbb
ljmp
and
inc
cmc
sub
fimull
or
and
xchg
xchg
in
lds
shrb
imul
jb
data16
mov
cli
pushl
in
adc
dec
jg
jmp
popa
sbb
loope
out
loope
mov
xchg
js
xchg
stc
push
mov
jl,pt
cmp
mov
in
nop
mov
repz
adc
iret
pop
mov
mov
decl
sti
inc
sub
cmp
sub
jne
jge
push
push
jge
or
and
inc
mov
ljmp
imul
adc
pop
lea
mov
inc
inc
sub
cli
in
test
incl
sub
jnp
xchg
xor
iret
pop
imul
test
filds
push
add
push
jg
mov
jo
in
cmp
xor
and
popf
push
rorl
rorb
lock
inc
xchg
rclb
fsub
repz
insb
jg
test
aas
ficoms
pop
ljmp
xor
cmp
xlat
mov
xchg
sub
ret
rcll
pop
ret
cld
sbb
lock
cmc
aad
movsl
or
adc
and
and
stc
lret
jmp
pop
clc
test
cmp
fimull
test
inc
out
adc
icebp
mov
in
jmp
lock
push
push
sbb
pop
pop
cmp
jns
pop
insw
jo
jo
lods
mov
ljmp
lcall
add
adc
imul
inc
mov
sbb
test
cmp
push
neg
out
arpl
call
test
jp
frstor
loopw
scas
xchg
je
or
mov
jg
xchg
nop
jne
pop
jl
push
fcmovnbe
sub
add
mov
pop
fisubs
arpl
pushl
cmpsb
clc
hlt
rorb
jne
add
std
mov
xchg
jae
imull
js
dec
push
repz
mov
sbb
mov
pusha
lret
bound
xchg
aam
mov
ds
cmp
repnz
popf
lock
out
das
or
daa
adc
test
sar
fiaddl
cmc
fstp
mov
mov
push
xchg
jl
sub
aaa
in
push
inc
sbb
cmp
pushf
jo
out
mov
xchg
mov
out
push
pop
insl
xlat
mov
sbb
bound
mov
xchg
xchg
insb
imul
loopne
nop
in
fcomip
call
push
shrb
xchg
push
lret
mov
incl
shll
mov
sub
cmc
mov
mov
mov
sbb
or
shlb
mov
lock
pusha
clc
je
adc
adc
adc
aad
mov
jne
cwtl
imul
dec
jge
mov
shl
or
addl
cs
sahf
pushf
xor
dec
mov
imul
mov
sub
pushl
pusha
or
lcall
or
arpl
xchg
mov
decl
dec
add
push
pop
shrl
mov
out
jp
and
pop
adc
sbb
mov
cmp
pop
dec
out
or
sub
push
sub
ret
xor
cmc
cmpsl
repz
lcall
inc
loop
lcall
pushl
sbb
add
int3
push
xor
fwait
jno
stos
iret
shlb
xchg
stc
push
dec
mov
ljmp
aad
xor
ss
push
les
sbb
dec
sub
rcll
pop
pop
out
sbb
inc
int3
push
lcall
bound
cwtl
adc
insl
push
ljmp
sbb
idivb
loope
test
std
call
add
arpl
fbstp
cld
xchg
rol
insl
ja
cmp
cmp
mov
ds
mov
pushf
or
int
lret
xchg
jno
shr
enter
pop
es
sti
push
cmpsl
mov
jns
add
stc
in
xor
mov
test
testl
inc
outsl
call
cld
incl
popa
add
test
mov
mov
inc
stos
ljmp
mov
mov
dec
cmp
and
add
xlat
test
call
sbb
lods
jnp
ljmp
push
into
inc
pop
mov
cmp
incl
in
mov
add
or
xchg
stos
lcall
out
jbe
xor
cmp
jmp
adc
dec
es
shl
mov
ja
and
mov
xor
lcall
insl
push
das
sub
lcall
or
inc
hlt
hlt
lds
xor
mov
mov
push
hlt
ret
pusha
js
xchg
dec
xchg
aas
fcoms
ss
jae
sub
mov
mov
cmpsl
push
iret
sub
xor
insb
xchg
dec
out
std
jmp
loopne
mov
into
xorl
push
orl
jl
jg
pushl
sbb
ds
push
pop
rclb
mov
cmp
sub
bndldx
lcall
popf
mov
ret
fsubp
mov
mov
mov
test
mov
arpl
xchg
lret
jbe
pushl
xor
cmpsb
xor
pusha
push
shrb
sqrtps
pop
aam
pop
adc
clc
flds
rol
sbb
add
cmpsl
or
pop
lods
dec
loopne
andl
ljmp
push
add
pop
cmp
pop
mov
xchg
in
jno
xchg
inc
in
ja
push
dec
iret
cmp
ja
ljmp
movb
out
movsl
pop
and
and
sti
mov
sub
cld
in
sbb
jo
jne
loop
repnz
lods
push
sub
pop
jno
and
das
mov
cmpsb
cmpsl
jns,pn
cmpb
jecxz
push
adc
mov
dec
sub
cmpsl
js
inc
inc
xor
jge
push
aaa
lods
pop
mov
lock
fidivl
aam
sub
sub
add
lret
idiv
pop
mov
ret
sbb
cmp
pop
test
movsb
pushl
movsb
test
sbb
cwtl
xchg
mov
mov
hlt
loope
sbb
jns
mov
in
xchg
js
jmp
adc
mov
dec
into
mov
pop
rcrb
out
jle
mov
xor
cmpsb
insl
jmp
call
dec
stos
cmpl
decl
sub
hlt
push
pop
sbb
arpl
fstpl
adc
andl
push
or
or
stos
mov
mov
mov
stc
lcall
test
incl
daa
repnz
aad
rcrl
out
inc
wbinvd
movaps
popa
mov
sbb
fisttpl
pushl
cltd
and
pop
dec
mov
jne
mov
iret
or
lret
fbld
data16
lods
sbb
jecxz
pop
mov
repnz
int3
bound
jmp
xchg
dec
orb
pushl
push
dec
and
pop
adc
scas
cltd
sub
push
mov
ficompl
jg
ljmp
pop
lcall
sbb
add
mov
nop
mov
les
or
incl
fldenv
mov
scas
sub
lcall
xchg
push
cmp
in
out
cld
adc
cmpsl
mov
ljmp
clc
adc
nop
adc
sub
repz
in
or
fldt
inc
adc
incl
scas
aaa
scas
mov
inc
mov
xor
add
mov
mov
or
pop
in
les
jle
inc
fstl
jns
ret
add
push
nop
lcall
shrb
ds
jne
andl
mov
adc
pop
add
movsl
add
ret
shrl
mov
sub
ljmp
jo
or
and
push
loope
stos
adc
sub
out
in
rcrl
lret
nop
movsb
insl
mov
pushl
cltd
mov
stos
aad
jmp
adc
test
xor
in
xor
mov
xchg
dec
daa
lods
xchg
sbb
mov
mov
out
stc
mov
subb
dec
jo
and
or
enter
cmpl
femms
mov
sub
int3
mov
int3
inc
cmc
mov
pop
or
xor
ljmp
add
addr16
enter
lret
inc
out
popf
leave
loope
lcall
jmp
je
clc
mov
or
aam
xor
jo
pop
sbb
mov
enter
in
sbb
jmp
lret
insb
pusha
dec
mov
jnp
mov
fistpl
scas
repnz
and
lret
sarb
ljmp
aam
popa
lret
xor
pop
mov
test
loop
scas
ja
push
pop
pop
xlat
and
in
fwait
call
mov
out
bound
dec
mov
cmp
mov
je
ret
xor
rolb
loop
fstl
push
inc
lcall
ja
shlb
into
xchg
or
adc
jmp
out
xor
add
call
cwtl
std
cltd
push
js
xchg
iret
jle
movsb
in
xor
outsl
je
icebp
push
mov
jle
test
decl
fwait
jg
dec
mov
cltd
mov
mov
xor
cmp
push
jg
sub
aaa
add
pop
pop
mov
int3
xor
xchg
jo
mov
int3
mov
mov
mov
pop
sar
cmp
xchg
add
or
xor
sarl
pushl
cmpsb
xor
das
pop
pop
in
sub
cmp
lods
out
cmc
out
jp,pn
dec
fdivrp
call
jmp
sbb
and
pop
inc
lods
adc
dec
adc
insb
xorl
and
sub
ss
push
in
or
lcall
fstpl
pop
push
sbb
je
and
xor
jge
jmp
sub
ljmp
cli
cmp
push
xlat
ret
ja
mov
ds
jg
xor
sarl
adc
jno
push
sub
lret
mov
and
jno
push
out
add
fmuls
aaa
adc
mov
ja
fisubrl
mov
incl
adcb
push
adc
cmc
pop
mov
cmp
mulb
test
and
cs
or
sub
sub
ljmp
subl
push
jl
leave
adc
call
js
dec
dec
movsb
pop
push
adc
mov
sar
mov
jecxz
fisubs
popa
shll
push
mov
cwtl
fs
pushl
add
sbb
out
ljmp
and
mov
sub
dec
nop
jne
pop
loopne
pushl
push
pop
xchg
in
callw
gs
adc
jmp
jge
test
loope
xchg
lea
or
fs
jl
or
aas
mov
lea
scas
decl
xchg
mov
pop
xchg
in
add
or
add
jmp
test
lds
lods
imul
rcr
jecxz
pushf
mov
lods
out
loopne
fwait
mov
mov
xchg
aam
adc
dec
dec
divb
incl
out
jl
js
inc
data16
sbb
and
das
xchg
push
cmpsl
rcrl
pushl
mov
jbe
sbb
fidivrs
add
ret
add
add
outsl
div
jbe
loop
cmc
pop
cmp
xor
dec
inc
cs
cltd
mov
jp
cld
lcall
popa
cs
scas
xchg
push
dec
push
jae
pop
xchg
xchg
rorl
mov
adc
aas
stos
jmp
ret
loope
rorl
rorb
push
mov
inc
hlt
mov
xchg
shrl
repnz
mov
push
fmull
sbb
fists
mov
sbb
jecxz
call
cs
xor
lcall
insl
xchg
gs
add
cli
arpl
push
jae
xor
push
xchg
xchg
mov
cwtl
add
push
fldt
orb
push
stos
adc
mov
shrl
fmulp
inc
mov
call
mov
jmp
notb
sbb
push
cld
fbstp
mov
and
shrl
in
cmp
decl
insl
out
rcll
push
movsb
into
rorb
sub
loope
fisttps
lods
push
or
jo
mov
jae
aam
ljmp
pushl
inc
sbb
outsl
out
rcll
stos
cmpsl
ret
sbb
add
adc
decl
pop
or
icebp
push
mov
rcrb
mov
shlb
scas
xchg
inc
sar
ljmp
fdivrl
int3
ja
into
mov
jle
mov
xchg
jg
popf
mov
adc
or
call
sub
test
lahf
sbb
or
sub
sti
xor
fwait
push
add
pop
lock
decl
frstor
adc
mov
leave
sbb
xor
sbb
inc
loop
decl
lahf
add
jns
inc
xlat
sbb
or
or
pop
nop
cmpsb
jp
jg
cmpsl
in
mov
lahf
sub
imul
dec
aam
cmc
add
popf
je
dec
test
jae
xor
inc
dec
and
lea
push
imul
add
insl
jne
or
rol
test
mov
cmp
xchg
fsts
sub
jg
mov
add
or
ljmp
push
in
sar
ljmp
xchg
pop
mov
sub
push
sbb
mov
pop
and
gs
jmp
popa
push
stos
xor
data16
mov
enter
and
cmc
in
pop
jg
shrb
imul
in
jecxz
aam
hlt
scas
div
repz
sbb
mov
mov
js
xor
lea
out
das
cs
out
sub
pop
lea
inc
stc
cs
das
cli
dec
mov
pushf
scas
enter
inc
push
sbb
out
mov
iret
sub
incl
fiadds
fidivs
cmp
jb
lds
incl
in
movsl
inc
addb
push
jmp
imul
dec
push
jl
pop
mov
ja
in
jg
and
faddl
test
dec
lds
ljmp
mov
inc
arpl
outsl
nop
out
fisttpl
addr16
jb
pop
or
push
xor
enter
fldenv
imul
stos
push
push
mov
and
aad
pop
fsubs
pusha
imul
xlat
mov
mov
cmpsb
mov
jbe
faddl
sub
jge
lcall
pop
pushl
or
mov
mov
cmp
sti
jl
enter
imul
decl
cmp
dec
xchg
cli
lods
dec
jle
push
sbb
jbe
iret
cld
dec
or
pushf
inc
mov
fists
push
out
xchg
stc
mov
mov
loop
out
or
mov
sub
decl
adcl
lahf
jne
out
sub
push
pop
sub
add
xor
cld
outsb
sub
cmpsb
sbb
xchg
push
pop
sti
mov
outsl
cmc
pop
and
or
mov
jne
call
movsb
aad
add
pop
pop
push
pop
jge
jmp
cmp
lret
jbe,pt
out
call
jge
arpl
sub
out
lods
mov
mov
andl
incl
pop
pop
push
cmp
in
gs
lods
icebp
mov
nop
xchg
call
aaa
std
lcall
aas
mov
mov
in
push
aad
movsl
and
mov
inc
stos
decl
jno
repnz
addr16
sbb
in
add
push
add
ret
enter
pop
mov
mov
fimuls
nop
adc
and
bound
xor
out
push
imull
sub
movsl
ss
shll
mov
mov
sahf
fcmove
pop
fwait
shlb
cltd
add
add
ds
repz
pop
arpl
mov
add
rcrb
push
out
push
aam
outsb
pop
pop
in
push
adc
ljmp
push
push
mull
in
jmp
mov
mov
cmp
sbbl
sbb
sbb
decl
nop
and
jp
out
jecxz
andb
pop
cmc
or
sub
das
sub
test
and
fnstenv
cmp
loope
xchg
xlat
xor
lock
test
mov
or
xchg
call
xchg
std
push
mov
push
scas
cmpsb
dec
test
cmp
cwtl
cli
out
pop
pop
push
xlat
inc
fs
iret
jbe
movsl
add
adc
das
rorb
jl
mov
lcall
dec
fldl
sub
idivb
xchg
jmp
jge
add
pop
lahf
mov
jge
insb
addl
mov
loope
cli
decl
cmovo
fs
xchg
xor
shrl
mov
ret
mov
jl
mov
fcmovbe
pop
xchg
test
call
std
sbb
mov
shll
sbb
mov
ja
inc
scas
call
push
fcomi
and
test
call
cmp
cmp
add
pop
pop
fstps
test
popf
fidivrs
dec
or
add
jo
aaa
fsub
cmp
test
insb
jb
addr16
or
push
rclb
xor
jecxz
xchg
push
incl
and
sub
daa
out
sbb
icebp
subl
fdivrp
xor
jge
icebp
and
mov
or
mov
das
jmp
mov
mov
mov
and
aam
push
mov
repnz
jle
cmp
lcall
xor
in
fcompl
leave
in
out
sti
pop
add
mov
sbb
enter
inc
sqrtps
inc
imul
xor
xchg
jb
clc
lea
test
mov
mov
inc
lahf
filds
and
sbb
dec
scas
or
pop
out
rclb
sbb
fld
int
loope
call
jne
stos
jb
decl
sub
outsl
jae
lcall
or
pop
mov
hlt
popf
mov
inc
jl
scas
cli
lcall
repz
mov
dec
xchg
shll
divl
xor
loop
fwait
sub
addr16
cmp
flds
sub
adc
stos
xlat
mov
fldt
pop
decl
jno
pushf
dec
cwtl
mov
in
pop
sbb
fisubrs
inc
ret
hlt
mov
adc
movsl
imul
push
sub
mov
jmp
and
das
rcl
lret
mov
mov
push
dec
pop
pop
mov
xor
ljmp
fsubrs
mov
loop
addr16
movsb
mov
in
xor
jns
loopne
and
adc
lcall
jg
into
enter
das
insl
push
inc
xor
dec
shll
ljmp
stc
lods
lret
lcall
jno
or
pop
std
ret
rolb
lret
pop
xchg
jge
hlt
add
pop
imul
cmp
inc
pop
shl
outsl
lods
dec
repz
pushl
cmp
aaa
cli
ret
movsb
xor
or
push
xor
mov
pop
jo
in
adc
sub
in
std
xchg
hlt
stc
xchg
mov
loope
push
push
add
insl
ds
fsubrs
es
dec
mov
out
addr16
pushl
lock
lret
mov
scas
movsb
std
ljmp
inc
mov
sbb
das
test
incl
out
or
mov
xrelease
insl
lock
lock
jl
jle
mov
enter
mov
sub
xlat
dec
movsl
push
lahf
inc
pop
mov
xchg
xchg
sub
das
dec
add
mov
lock
sbb
insl
add
repz
xchg
es
jmp
out
push
xchg
adc
inc
movl
icebp
cmp
adc
mov
push
sub
jp
pop
test
movsl
dec
lods
mov
decl
popf
cld
rcrb
xchg
dec
mov
inc
stc
sbb
jnp
add
or
and
clc
jae
cmpsl
or
incl
movsb
sbb
mov
sbb
jb
popf
lea
aaa
outsb
int3
insl
mov
imul
xchg
cwtl
bound
push
add
ss
dec
sub
jmp
cmp
xchg
xchg
aam
adc
mull
hlt
filds
test
push
adc
pushl
sbbl
inc
xchg
into
sbb
pop
icebp
and
in
adc
stc
iret
int3
mov
es
add
clc
out
fidivrl
or
and
sbb
sahf
mov
aam
mov
mov
imulb
push
and
xor
aas
scas
xchg
xchg
das
or
cld
mov
std
int
or
lock
jg
lods
push
hlt
dec
lea
or
lret
push
mov
jg
jmp
inc
incl
sbb
aas
fucomp
xchg
cmp
sub
ljmp
jmp
lock
xor
add
jne
icebp
or
gs
push
pop
stc
ljmp
pushl
dec
rorb
cwtl
les
pushf
lods
in
movsb
outsb
int
mov
lods
call
into
repz
pop
cmpl
inc
cmp
movl
adc
sbb
sahf
jmp
cmpsl
inc
fisubrl
fucom
cmp
cmp
js
jbe
add
jo
cmp
xchg
std
mov
sub
scas
rcrl
sub
xor
cmp
call
cmpsb
call
outsl
mov
mov
add
inc
ret
xchg
jmp
jne
test
jmp
inc
mov
sub
daa
jle
cmp
iret
pmulhuw
jo
sarl
inc
inc
push
xlat
decl
or
je
je
adcb
and
cld
mov
arpl
inc
pushl
cld
push
xor
dec
dec
fdivrp
lods
movsb
or
xor
data16
inc
scas
push
ficompl
dec
jnp
js
loope
xor
mov
mov
insl
cld
aas
push
fs
scas
ljmp
inc
movsb
or
xor
outsl
stc
and
shlb
inc
jl
pusha
clc
test
fucomp
sub
call
in
jp
out
adc
in
mov
test
fistpl
ljmp
ss
ficompl
dec
pop
sbb
jle
lret
in
mov
push
scas
xchg
in
shr
dec
inc
lcall
mov
mov
rorl
ds
fistps
clc
lret
sub
adc
lock
loop
add
cwtl
pop
int
aam
aad
xor
pop
out
cwtl
int3
xchg
out
xchg
mov
mov
xlat
push
mov
and
mov
push
movsl
or
push
test
ror
test
rcrb
add
pushl
add
imul
or
dec
cld
cpuid
aas
fisubrs
in
push
and
decl
mov
lds
dec
xchg
data16
popf
adc
mov
add
xor
dec
adc
and
pop
pusha
shl
xor
test
pop
jbe
incl
jnp
in
push
repnz
push
icebp
out
shl
add
pop
insl
xor
out
lcall
jmp
mov
sbb
jmp
mov
mov
orl
mov
xor
cs
clc
mov
sub
mov
ds
jl
inc
pop
add
decl
sbbl
add
push
test
cmp
incl
dec
push
scas
es
mov
xchg
movsb
in
aam
dec
jl
or
sub
sbb
pop
fadd
dec
xchg
mov
dec
jg
pop
icebp
xorb
sub
outsl
xchg
popa
rcl
mov
pushl
inc
dec
jns
ja
inc
mov
sbb
stos
xchg
inc
bound
push
ljmp
decl
idivl
ror
mov
mov
jge
xchg
in
loop
mov
jl
pushl
std
ljmp
bound
mov
sahf
in
inc
aaa
sbb
push
iret
fucomp
dec
push
stc
push
push
aam
jle
jecxz
or
inc
mov
dec
xor
xchg
push
mov
pushl
fimuls
mov
jns
lahf
into
in
test
addb
adc
call
adc
test
les
add
cmpb
stc
add
cmp
fs
jmp
mov
lods
loope
sbb
mov
mov
into
adc
jb
lret
pushl
push
and
mov
sub
mov
jns
push
jne
cwtl
mov
and
jmp
jb
rcll
inc
loopne
leave
xlat
shlb
call
les
popf
movsl
mov
arpl
fnsave
sbb
inc
inc
jle
js
jg
lcall
or
add
sub
xor
mov
lods
enter
shlb
pushf
xor
decl
xchg
pop
lods
dec
lock
push
pushf
stos
movsl
push
push
in
jg
cmp
pop
sub
cltd
sar
decl
cmp
cltd
js
sbbl
pushl
inc
sub
cmp
and
ja
test
test
push
inc
mov
inc
pop
movsl
mov
inc
or
inc
jmp
stos
dec
mov
jo
jns
call
std
pop
sbb
dec
scas
pushf
adc
ds
or
add
out
repz
pop
aas
jg
pop
cld
mov
dec
pop
mov
xchg
ss
outsb
ffreep
push
inc
jbe
xchg
lret
imul
xchg
jecxz
divl
scas
and
pop
lcall
pushl
mov
sub
lret
or
push
mov
sub
push
les
sbb
das
rorb
cld
mov
pop
jb
add
jne
jge
lcall
xchg
popa
stos
add
imul
gs
push
pop
scas
pop
fistpll
das
lcall
cmp
ja
test
enter
jmp
cld
and
xchg
jg
pop
cltd
push
int
pushf
ja
sar
push
dec
test
xchg
hlt
gs
mov
xor
or
and
pop
out
cmc
les
xchg
xchg
fldenv
xchg
sub
lcall
add
and
inc
mov
sub
jp
mov
sti
decl
fnsave
mov
mull
inc
jb
outsb
and
arpl
and
push
incl
loop
dec
or
in
pop
test
or
in
hlt
push
push
pop
test
jmp
gs
cld
stos
pop
add
dec
pop
lcall
into
clc
insb
out
mov
je
roll
mov
cmp
decl
mov
rcrb
ljmp
cld
mov
cltd
cli
push
addr16
aaa
out
mov
jmp
sub
sub
jge
jae
adc
mov
xor
mov
cmp
fnstcw
out
cmp
shll
pushf
add
aam
dec
fwait
jmp
jo
daa
call
cwtl
mov
jl
cvttps2pi
in
loope
movsb
lcall
mov
loopne
xchg
pop
cmp
xor
adc
adcb
aam
dec
mov
pop
xor
lods
scas
fwait
lcall
incl
mov
mov
in
add
out
jge
mov
sbb
pop
loope
out
pusha
ljmp
cmpsl
jmp
mov
andb
xchg
nop
sbb
jnp
stc
movl
out
and
cmc
fcmove
mov
movsb
pushl
incl
pop
cld
xor
inc
repnz
xchg
push
mov
add
add
stos
ljmp
jmp
jmp
pushf
xor
xlat
or
fs
enter
adc
gs
ljmp
mov
fimull
mov
shll
clc
inc
mov
call
and
push
cwtl
push
sarb
imul
mov
and
cs
mov
mov
or
rcrb
lret
dec
dec
mov
xchg
lahf
mov
xor
mov
mov
iret
std
push
or
xor
rcrb
dec
incl
pop
dec
cmp
lds
pop
fwait
xchg
into
jp
mov
mov
pusha
scas
inc
nop
popf
push
sub
decl
es
repnz
call
and
enter
iret
fs
sahf
jns
repz
notb
lcall
stos
cwtl
shld
jge
mov
cmp
jmp
mov
mov
jle
cmp
jge
mov
jmp
fwait
bound
cmp
popf
jno
fs
cld
cmc
gs
inc
dec
inc
mov
push
repnz
loope
inc
imul
cld
lcall
dec
jo
mov
popf
int3
mov
ret
ljmp
push
jge
or
mov
and
cmp
int
cmp
pop
bound
cvtdq2ps
push
lcall
mov
xlat
push
cmp
mov
dec
inc
jmp
cmp
sbb
cmp
cmp
loope
lret
shll
mov
mov
lret
and
int
pop
sub
hlt
hlt
xchg
rcll
pushl
leave
pop
int
sbb
aaa
in
call
and
fidivrl
or
sbb
outsl
fcompl
ret
call
daa
adc
aad
aam
shrl
sbb
loope
sbb
jmp
jo
and
das
icebp
xchg
xchg
loope
xchg
dec
insb
and
sbb
adc
daa
shlb
inc
shlb
mov
stos
or
sub
and
repnz
aam
cmc
incl
add
test
lcall
pushf
dec
sub
inc
mov
jle
mov
add
pushl
jl
jb
or
ret
pop
jle
xchg
jl
mov
pop
mov
outsb
inc
fsubl
pop
and
sbb
push
mov
fnsave
flds
inc
ret
push
dec
insl
mov
sub
inc
shlb
stos
cmp
ljmp
fisubl
fbstp
xor
out
push
inc
mov
movsl
cmp
adc
aaa
lea
ror
xchg
jmp
xchg
and
mov
mov
testl
loopne
mov
and
xchg
ss
inc
jp
andl
ljmp
cli
jg
stos
std
outsb
inc
iret
push
inc
or
push
push
or
dec
daa
daa
or
cld
stos
sbb
rcrb
jne
je
cld
pushf
fs
mov
push
adc
insb
test
ss
cld
nop
jecxz
jge
mov
icebp
xchg
xor
sti
ljmp
or
inc
sub
push
ficoml
dec
test
pushl
and
jno
repnz
insb
imull
pop
fistpll
test
nop
adc
enter
lcall
mov
int3
aaa
fstpt
push
xchg
pop
test
adcl
fs
ljmp
xchg
imul
jnp
data16
cwtl
lahf
adc
cmp
add
in
aas
daa
std
ljmp
mov
push
shr
rcrb
pop
jmp
push
sub
mov
cmp
sub
into
add
inc
ret
or
mov
decb
outsl
call
sbb
outsl
pop
push
dec
mov
cwtl
add
orl
pop
sbb
pop
jne
call
test
mov
jmp
sahf
add
jle
jns
xchg
lret
dec
incl
ljmp
inc
imul
data16
in
mov
call
les
pop
sbb
push
popf
and
pop
cld
ljmp
in
in
xchg
jo
out
sbb
inc
or
enter
jg
sub
xchg
mov
popa
mov
and
out
outsb
sbb
pop
push
pop
cli
out
xor
int
lcall
scas
mov
xchg
cli
aas
push
xchg
or
cltd
jmp
ljmp
movsl
fisttpll
inc
test
sub
int
sub
insl
inc
pcmpeqb
mov
cmp
jmp
cli
decl
lahf
scas
mov
out
mov
xchg
pop
xchg
test
push
push
cli
mov
lcall
mov
or
in
xchg
arpl
xchg
popf
es
imul
or
insb
loop
jle
pushf
leave
xor
fcom
mov
jg
cmp
call
enter
cmp
mov
mov
shrl
repz
mov
insl
dec
sub
loop
xchg
jae
fnstenv
jmp
mov
cmc
call
mov
cmp
es
div
mov
lret
je
lret
dec
dec
mov
mov
xorb
lock
pop
iret
ljmp
push
mov
xor
push
insb
mov
pusha
sbb
xchg
scas
cli
mov
xor
sbb
pop
adc
mov
ljmp
sti
cmp
jmp
dec
outsl
jns
inc
inc
in
ret
xchg
sbb
xchg
mov
push
fcomip
call
addr16
jns
mov
push
dec
mov
xchg
add
pop
aas
sbb
daa
xchg
push
in
pop
pop
scas
aas
jae
enter
outsb
push
cmpsb
jecxz
add
xchg
and
inc
jg
lock
dec
cmc
xchg
and
jl
push
xor
test
test
cmp
filds
incl
call
shlb
pushl
pop
push
lods
xchg
out
mov
mov
jl
movsl
inc
push
pop
aaa
lahf
cmp
dec
mov
insb
jb
cmp
add
lcall
push
push
push
stos
or
fwait
sub
out
pusha
dec
clc
incl
push
mov
lret
in
sbb
data16
sub
push
mov
incl
insb
pop
mov
ror
inc
mov
jb
cmp
ds
cmp
lcall
pop
inc
or
bswap
or
xor
lahf
sti
les
pop
scas
pushl
insl
out
xor
repnz
rclb
in
pushf
js
push
pushf
lret
xchg
repz
adc
sti
inc
mov
rcl
fdivrl
adc
push
je
cld
xchg
stos
loope
ret
mov
push
imul
ds
rclb
sub
push
and
cmp
loopne
fcompl
push
xchg
fsts
ret
jmp
or
loop
test
mov
call
decl
lock
rclb
mov
push
iret
sbb
popf
jnp
lcall
adc
out
push
mov
and
inc
lret
repz
shrl
dec
sti
int3
xchg
int
push
cwtl
pop
mov
int
push
sub
mov
and
dec
mov
dec
adc
cmp
lods
sti
pop
leave
pop
testb
add
bound
mov
in
sbb
mov
push
icebp
adc
add
gs
sbb
clflush
cld
ds
stos
fs
sar
mov
cmc
test
out
and
mov
dec
clc
adc
pop
imul
rorb
rcrl
mov
stos
call
inc
cmpsl
xor
pop
cmp
adc
dec
jle
push
sarb
lock
mov
sub
ja
test
idivb
push
jle
push
xor
insb
insb
cmp
sarb
fnstenv
mov
cmp
jns
sbb
push
sahf
outsb
mov
xchg
mov
lcall
mov
fcoml
notl
mov
cld
shlb
or
cmp
jl,pt
pop
dec
lahf
mov
out
cli
add
mov
sbb
cmp
add
mov
lcall
cld
lcall
pop
pop
mov
pop
pushf
cmc
outsl
std
lret
push
or
aam
das
inc
push
sub
push
loopne
popa
out
daa
push
xchg
outsl
lcall
rolb
sbb
cmp
div
dec
push
push
or
int
push
aam
dec
jmp
or
pushf
arpl
mov
mov
gs
daa
mov
int3
mov
mov
out
push
rcrl
scas
fsubrs
pop
xchg
pop
scas
les
sbb
add
sub
push
sub
sub
imul
or
repnz
mov
cs
cli
push
xor
inc
inc
iret
test
or
mov
incl
inc
mov
or
stc
cmpsl
add
adc
push
push
out
push
lcall
imul
mov
inc
pop
mov
and
cld
fwait
bound
lea
ljmp
dec
inc
repz
leave
mov
fidivs
add
mov
mov
lcall
insb
push
mov
mov
sbb
rol
mov
inc
xor
repz
push
mov
test
fstp
in
push
nop
js
test
repz
clc
pop
hlt
jb
clc
push
mov
pop
ret
pop
xchg
dec
jmp
sbb
lret
xchg
sub
mov
xorl
cmp
ljmp
adc
add
sub
pushf
pop
jl
int3
out
fmuls
stos
cmp
das
add
cmp
xor
xor
cltd
das
cmpl
loopne
and
jp
add
adc
aaa
std
dec
cmp
popf
dec
aad
jp
popa
push
ficompl
sbb
std
jmp
scas
mov
aaa
bound
ret
xchg
pop
rol
pop
mov
enter
xor
mov
call
and
mov
sti
sub
sub
adc
pop
movsl
push
in
pop
xchg
inc
ficompl
mov
int3
pushl
imul
and
sbb
jne
int
pop
fistpl
push
jp
adc
jns
sub
pushl
pushf
in
sub
out
pop
xchg
popa
jmp
aad
dec
cmpsl
stos
fimuls
rorl
adc
in
pushl
xorb
popl
imul
cmpsl
call
jae
jl
imul
leave
loope
insb
inc
sub
jl
inc
scas
mov
mov
jecxz
pop
ljmp
mov
mov
push
insb
ret
jae
daa
iret
pavgb
stos
mov
mov
cmp
pop
push
aaa
mov
push
pop
sbb
pop
mov
ljmp
or
adc
cmpsl
pop
adc
add
mov
incl
mov
or
stc
outsb
cld
out
fimull
push
or
ficompl
mov
ret
sub
or
in
subb
sarb
sti
loopne
cwtl
fwait
andl
rorl
mov
pop
js
mov
outsl
dec
dec
xlat
arpl
sbb
les
cmp
mov
es
sub
int
push
out
sbb
stos
inc
cltd
lcall
jmp
leave
inc
jns
es
jecxz
jle
shll
mov
repz
fidivl
ss
push
test
mov
lods
insb
or
xorb
sbb
inc
sti
push
pushf
jmp
dec
divl
mov
dec
out
or
mov
mov
call
gs
in
fbstp
int3
frstor
mov
push
jae
adc
xor
cmp
jno
rolb
jnp
pop
push
call
mov
ret
adc
scas
xor
jecxz
repz
jp
xchg
decl
jp
ficoms
xor
lcall
mov
cli
jle
mov
push
jo
decl
daa
mov
jbe
and
popa
das
mulb
ds
std
lcall
insb
testb
icebp
jb
sbb
arpl
adc
jg
mov
movb
jne
pop
jg
sbb
or
scas
inc
pop
out
fs
call
shlb
nop
xchg
in
int3
add
aaa
push
bound
mov
lcall
inc
aad
add
fs
ljmp
cmpsl
lcall
scas
popa
push
xchg
je
add
ljmp
iret
fisubl
and
into
stc
mov
or
add
lds
lcall
or
aas
loopne
mov
cwtl
movsb
fcoms
roll
add
mov
decl
cld
aaa
push
pop
sti
mov
and
dec
insb
mov
adc
addr16
ljmp
mov
repnz
cld
ret
imul
imul
sti
decl
in
jl
rcrb
les
and
cmp
call
lock
jnp
mov
stos
mov
stos
sbb
mov
mov
pop
inc
mov
and
fsubrl
pop
cmp
sub
int3
filds
inc
fsubs
data16
mov
call
ljmp
mov
push
sahf
sbb
mov
push
js
mov
clc
jmp
cmpsl
mov
pop
aaa
pop
xchg
ja
jg
call
push
adc
sahf
xchg
shll
and
pop
bound
sbb
jnp
stos
cs
call
push
stos
ds
inc
jae
leave
add
icebp
pop
out
sub
lcall
dec
lock
jmp
jne
out
add
or
mov
out
clc
lcall
mov
inc
sub
sbb
jbe
add
inc
jnp
push
jg
jmp
and
popf
push
xchg
fidivrs
xor
dec
cmp
loop
pushl
sub
loop
sub
cmp
fisubrs
mov
pop
sub
stc
aad
mov
les
pop
jns
lret
or
ficoms
or
in
iret
jae
fmulp
push
nop
ss
adc
ljmp
jmp
pop
pop
add
out
fldcw
mov
imull
xlat
mov
or
jmp
movsb
mov
add
add
testb
push
sbb
adcl
cld
jmp
popf
jno
jle
adcl
out
xchg
sti
mov
xchg
cmp
jmp
adc
rolb
mov
xchg
test
imulb
loopne
out
push
test
xchg
mov
cli
je
cwtl
addr16
jno
dec
or
jo
bound
push
mov
mov
cmp
das
push
xor
sbb
fucom
pop
sub
sahf
repnz
mov
pop
xchg
leave
mov
lcall
xchg
xchg
mov
insb
adc
jg
cmc
push
out
out
sub
out
mov
mov
imul
cltd
repnz
mov
cltd
inc
xchg
std
ljmp
pop
int3
jb
das
mov
jae
mov
scas
add
mov
out
dec
lcall
movb
dec
stc
sub
sarb
lds
sbb
mov
movsb
push
mov
call
jns
cmp
inc
cltd
xor
xor
int3
clc
pop
jge
arpl
inc
testl
decl
dec
js
dec
xor
cmp
push
push
mov
jne
movsb
in
sbb
push
test
decb
xchg
lds
fsubs
decl
pop
sub
cwtl
xchg
xlat
lahf
adc
mov
pop
addr16
jmp
jmp
repnz
rcrb
xchg
leave
es
sbb
xor
fsubl
mov
fisubl
inc
out
test
jmp
negb
pop
popf
xchg
aam
sti
arpl
cltd
out
fadds
add
mov
inc
lock
testb
fldl
sub
jge
call
add
sub
sahf
cmp
mov
mov
je
mov
mov
les
add
sub
mov
repnz
mov
fisttps
mov
es
inc
pop
sbb
pop
jecxz
or
push
call
inc
mov
dec
scas
fistl
fidivrs
add
call
std
jns
jmp
test
xchg
adc
add
and
mov
xchg
pushf
push
xchg
pushl
add
ret
add
or
lret
sub
loopne
mov
call
push
mov
jecxz
lret
dec
pop
dec
das
popl
xor
xchg
mov
pushl
push
mov
dec
insl
mov
rclb
imulb
mov
inc
or
ret
incl
pop
cmp
rorb
mov
dec
or
xor
cmp
in
addr16
push
call
pushf
mov
pusha
lds
jae
push
mov
pushw
mov
jg
lcall
test
ret
cs
gs
enter
ret
adc
loop
mov
pop
fisubrl
or
push
jle
cs
sahf
ret
ss
jg
lcall
xchg
in
ret
shrb
xchg
pop
rcrb
lea
ljmp
dec
pushf
ljmp
cltd
xor
aam
adc
push
fcompl
xor
pop
inc
cli
lcall
ljmp
sbb
pusha
or
fildl
or
scas
mov
cmc
lods
flds
and
jg
int
ja
ds
lods
cwtl
out
fisubl
sti
or
push
or
and
sbb
inc
cmp
insl
pushl
std
call
or
jle
xchg
jb
fimull
cmc
adc
dec
rorl
enter
adc
mov
jle
mov
dec
js
popf
xchg
bound
popf
jge
js
aas
scas
pop
insb
fwait
xor
icebp
cltd
test
cmp
dec
data16
lock
hlt
data16
mov
xlat
test
pop
stos
sbb
or
lcall
dec
push
adc
test
cli
xor
ret
cmpsl
out
dec
stos
loop
mov
push
dec
orb
dec
bound
mov
jecxz
movsl
sbb
int3
fisttps
pop
jns
fwait
cmp
decl
xchg
pop
push
jb
popa
push
pop
push
insl
lods
adc
mov
imul
add
call
test
push
mov
push
xchg
cmp
add
lret
outsb
jb,pn
add
stos
mov
fucom
int
loopne
push
xchg
sub
adc
pushl
ja
xor
or
cmpsb
fldenv
repz
mov
mov
insl
push
dec
mov
leave
cmpsl
lock
mov
leave
sbb
mov
mov
rorl
loopne
ret
pop
and
ljmp
rclb
sbb
mov
jnp
xchg
dec
push
pop
or
leave
cmp
icebp
jae
ljmp
sub
push
dec
cmp
add
jmp
inc
or
stos
fcoml
stos
testl
push
xchg
jge
inc
xor
pop
mov
call
fldl
dec
or
mov
loopne
and
rcll
cmp
push
inc
push
aam
or
jmp
cmp
or
mov
xor
push
mov
loop
mov
icebp
jl
popa
shll
test
mov
dec
pop
mov
test
mov
jp
imul
adc
cmc
or
dec
inc
sub
rorb
fadds
and
hlt
rolb
dec
mov
hlt
mov
inc
in
pushl
cwtl
and
adc
mov
mov
add
lret
insb
pop
mov
lock
cmp
inc
cli
add
adc
rcll
push
push
loope
out
ja
sbb
incl
adc
mov
dec
mov
xor
ret
push
inc
and
lods
lcall
push
daa
es
xchg
shrb
inc
sub
iret
jb
bound
inc
mov
ljmp
cld
pushl
mov
sbb
sbb
sets
mov
sbb
jmp
mov
jle
mov
jle
decl
adc
movsw
repnz
lds
faddl
xor
decl
aaa
mov
xor
lods
pop
lods
pop
push
pop
lcall
sub
ljmp
mov
aad
aad
adc
jb
out
in
jecxz
andl
inc
aas
pop
lcall
lret
add
mov
movsl
push
xchg
js
xorl
iret
cmp
pushl
testl
gs
in
into
dec
fistl
or
cmp
out
adc
xchg
dec
cld
in
gs
js
stos
mov
stos
jmp
cmpsb
add
fs
mov
sbb
xchg
fcomip
jns
fwait
xchg
cmp
sub
inc
ljmp
adc
cmp
call
aaa
rol
xchg
stos
dec
in
lcall
inc
mov
push
push
and
mov
jle
add
andl
mov
sbb
adc
xchg
lods
mov
call
pop
cmpsb
xor
jp
pop
les
xchg
xor
mov
fwait
xchg
or
mov
call
fs
push
adc
sbb
sbb
mov
fstpt
cmpsb
rcrb
test
mov
daa
dec
inc
flds
xor
js
movsb
mov
outsb
mov
nop
out
jecxz
add
orb
lds
sbb
incl
cld
fstp
pop
ss
and
mov
xor
in
adc
adc
push
mov
mov
lcall
ljmp
xchg
fsubl
sbb
inc
mov
push
push
ret
and
jmp
pop
incb
xchg
cmp
jp
push
scas
jmp
mov
mov
and
jmp
push
lods
in
sti
mov
fdivl
jnp
outsl
dec
xchg
dec
sbbb
cld
enter
cltd
scas
xchg
xor
movd
inc
and
mov
iret
dec
cmpsl
sar
fistps
mov
mov
and
pop
xor
lcall
jmp
cli
mov
pop
shl
xchg
lcall
mov
jle
jge
scas
out
fs
sbb
push
shlb
outsb
fdivrp
sbb
out
imul
gs
inc
xor
repz
out
stc
lcall
hlt
jne
mov
add
imul
js
imul
gs
jmp
push
push
mov
insb
pusha
inc
mov
pop
dec
movl
sbb
popf
add
ljmp
pop
hlt
push
stc
inc
insl
ret
or
stos
jmp
sbb
adc
dec
cld
lcall
pusha
cmc
leave
mov
add
loope
scas
xchg
fs
push
xchg
xchg
xor
mov
decl
cmp
std
cltd
fstps
sub
dec
push
push
add
cmc
sti
rorb
pop
pop
setno
call
xchg
test
inc
sub
fildl
push
push
push
xchg
push
fldenv
inc
mov
outsl
ja
enter
call
and
jmp
inc
xchg
shrb
iret
lcall
xor
in
xchg
lret
xor
cmp
int3
fldcw
ljmp
shrl
mov
pop
shld
mov
lret
and
add
pop
movsb
xchg
xchg
adcb
pop
inc
xchg
dec
cld
dec
pop
mov
inc
mov
inc
hlt
dec
pop
xor
adc
fidivl
xchg
xchg
cmp
mov
pop
xor
ljmp
mov
and
cld
sahf
stc
push
scas
pop
mov
jg
rorl
call
out
mov
lods
out
mov
jns
add
pop
movsl
imul
call
xchg
ja
mov
or
mov
xchg
loope
mov
pop
xchg
jmp
sbb
mov
aad
pop
sbb
mov
sub
dec
insb
mov
fmull
incl
push
mov
lret
repz
rcr
jb
push
pop
lret
pop
push
pop
cli
data16
jmp
call
mov
mov
xchg
pusha
mov
dec
rorb
xchg
xor
xor
stc
or
aad
dec
cld
insb
cmpl
inc
jno
push
das
clc
sahf
sbb
jmp
pushf
ret
xchg
das
mov
shrb
push
adc
scas
fcoms
stos
sub
xchg
shrl
repnz
pushl
inc
adc
jno
ljmp
add
daa
jo
loope
rclb
dec
je
jg
scas
mov
pop
cwtl
dec
ror
dec
stos
and
fsubs
mov
lcall
jae
shlb
iret
and
arpl
subl
scas
cmp
daa
aaa
das
dec
jb
cmp
loop
pushl
aam
in
sub
shlb
daa
lahf
shll
cmp
fdivrs
or
lods
scas
or
mov
mov
lods
shlb
jg
test
inc
sub
addl
sbb
sub
cmp
pushl
cmpb
inc
xor
ja
add
dec
popf
call
dec
dec
lret
xchg
push
mov
loop
ret
cmp
xchg
or
out
mov
jmp
fildl
jg
or
adc
cmp
test
sub
jbe
sub
out
mov
fimull
pop
cld
jmp
cld
call
cltd
xchg
cmp
pusha
das
jl
repnz
movsb
fwait
sti
jg
inc
mov
data16
scas
cmpsl
xchg
mov
imul
and
jmp
stos
xor
cmp
jge
int3
xchg
or
jg
dec
daa
loopne
ss
jle
out
jmp
push
jge
ss
mov
ljmp
pop
mov
add
xor
pusha
js
ljmp
jg
cmp
mov
pop
push
lods
mov
dec
rclb
decl
push
add
or
sti
cmp
inc
ror
sbb
hlt
push
mov
mov
out
inc
iret
cs
ljmp
mov
fcomp
or
jmp
mov
inc
mov
push
cwtl
mov
pushl
shr
cmpsl
out
rorl
or
and
mov
cmp
ljmp
loopne
arpl
jo
and
and
xlat
mov
lret
mov
and
inc
mov
ljmp
sbb
jle
imul
xor
mov
adc
dec
cmp
pop
cmpb
call
stos
adc
push
clc
push
cs
cmp
push
test
mov
or
cmc
fwait
inc
in
outsb
repnz
in
lret
out
int3
addr16
xchg
xlat
pop
imul
pushl
jno
pushf
dec
roll
add
loop
loopne
and
fisttps
jmp
cmc
cmp
outsw
lahf
sub
sub
dec
mov
aaa
sbb
call
int
shlb
push
lods
out
shrl
jns
pop
cmc
fldl2e
and
call
push
loope
js
jecxz
cmp
add
lcall
adc
imulb
in
out
dec
add
mov
outsl
inc
loop
pop
movsb
xchg
and
sbb
xor
js
ds
call
mov
lods
cmpsl
inc
int3
adc
mov
cld
les
cmp
pop
lcall
jmp
std
push
pop
jecxz
in
jecxz
sbb
pop
adcb
cmp
pop
enter
test
mov
xchg
sbb
and
repz
clc
sti
mov
repz
pop
push
lcall
jnp
mov
push
inc
dec
es
cwtl
inc
sbb
test
xor
dec
mov
ljmp
cli
sahf
imul
ja
data16
pop
inc
cmp
cmp
pop
cmp
pop
fidivl
mov
sbb
add
data16
ror
cltd
idivb
ljmp
dec
aad
scas
ja
dec
sub
test
push
mov
pushf
aam
sbb
outsl
cmpsl
popa
lcall
xchg
sbb
and
rcll
add
mov
cmp
decl
in
loopne
xor
ja
mov
cmp
pop
icebp
ss
add
dec
mov
ljmp
jecxz
fcoms
push
in
xchg
iret
mov
inc
mov
mov
inc
push
test
jnp
cmpsb
ljmp
ret
sarb
xchg
aam
jg
int
call
pusha
inc
xor
jle
sbb
and
jno
lea
cwtl
or
mov
jne
mov
xchg
pop
incl
ds
test
inc
pop
xchg
into
xchg
ds
cli
sub
jmp
sbb
and
rorl
adc
out
and
cmp
call
scas
jnp
dec
int
and
fs
cmp
push
xor
decl
ljmp
loop
xchg
adc
jbe
test
cltd
pop
jle
dec
imul
stc
add
sarb
or
and
pop
cwtl
fstl
sbb
adc
add
mul
cmp
lds
sbb
loope
aam
sbb
insl
fprem1
push
repnz
decl
icebp
xchg
push
mov
aad
fnsave
sbb
fimuls
push
fimull
push
scas
cmp
decl
sbb
adc
sbb
out
and
jae
sbb
loope
adc
xor
ljmp
jmp
insb
mov
test
mov
cli
jecxz
jne
call
es
lock
mov
lret
push
mov
mov
mov
lods
pushf
ljmp
mov
ljmp
push
dec
jne
push
sub
xor
jge
and
clc
aaa
push
jp
insl
ds
xlat
cmp
cld
decl
fs
outsb
loop
aam
sub
dec
cmp
sbb
pop
and
push
sub
pop
jl
add
push
sbb
mov
xchg
mov
inc
ret
xchg
imul
out
fmuls
mov
ds
push
add
pop
outsl
sarl
out
dec
or
test
xlat
or
pop
mov
dec
xchg
and
out
xor
insb
push
inc
or
pop
sbb
add
fsubr
pop
adc
stos
addb
inc
scas
fldl
bound
imul
je
aaa
and
jne
mov
inc
imul
or
ds
rcrb
add
add
mov
test
adc
nop
es
test
into
js
or
roll
sahf
insb
push
add
inc
sgdtl
pop
fmuls
adc
add
imul
sub
xor
inc
imul
dec
jo
daa
sbb
out
imul
push
dec
gs
outsl
add
outsl
outsl
insb
push
outsb
popa
jo
add
lock
outsl
je
sub
mov
jmp
sbb
cmp
sub
push
or
dec
sbb
push
js
or
cmp
scas
ret
and
mov
adc
outsb
adc
cmp
add
push
incb
popa
jb
cmp
hlt
gs
add
push
es
ljmp
dec
add
outsl
insl
insl
bound
pushf
adcl
adc
int3
insb
mov
adc
loopne
dec
push
int3
and
dec
outsb
imul
dec
xchg
pop
add
sub
outsb
xchg
inc
sub
iret
or
outsb
out
pusha
popa
aas
flds
sub
inc
push
insb
imul
mov
cli
arpl
push
sbb
mov
inc
push
pusha
cmp
push
fisubs
add
inc
mov
mov
push
pop
ds
insb
jne
mov
sarl
inc
jne
xchg
dec
push
xor
imul
insl
adc
jo
inc
push
fildl
sbb
inc
and
pop
push
mov
sarl
inc
mov
popa
subl
mov
int3
pop
jb
sbbl
jns
mov
inc
mov
fdivrl
repz
shl
push
push
push
hlt
fs
js
inc
flds
hlt
std
popa
or
cmp
xor
xor
xchg
andb
fsts
or
dec
nopl
push
pop
pop
sub
push
cmpsb
mov
push
adc
sbb
sub
loope
insl
adc
orl
add
jns
imul
sbb
and
mov
or
int
push
inc
sbb
jo
xor
pop
and
popw
adc
shlb
lret
mov
mov
push
inc
xchg
popa
and
fldl
ss
ljmp
jecxz
pushf
inc
or
pop
dec
inc
dec
out
or
inc
mov
sub
imul
cmp
fs
xchg
pop
popf
bound
lods
xor
js
cmp
loopne
fs
test
stos
pop
push
add
cmp
ja
and
and
inc
popa
push
dec
cmp
es
jp
ret
fcoms
push
push
jg
sbb
insl
sbb
or
xor
in
cmp
aam
aas
or
loop
outsb
adc
outsl
jns
adc
int
push
or
sbb
enter
gs
and
xlat
adcl
pop
pop
outsl
jns
inc
je
mov
inc
inc
out
pop
sub
push
inc
inc
push
nop
pusha
sbb
and
pop
sbb
mov
insl
ja
jo
adc
or
pop
push
stc
mov
add
xor
daa
sbb
add
sahf
rol
stos
loope
xor
roll
mov
xchg
mov
ret
pop
dec
or
test
test
sub
xchg
and
pushf
mov
jne
inc
fmuls
add
xchg
aad
fbld
jecxz
pop
sbb
nop
adc
jbe
inc
or
add
test
lea
popa
inc
addr16
outsl
sbbb
cmpl
adc
inc
adc
imul
sbb
inc
scas
pop
xor
and
outsb
push
outsl
add
add
sbb
loopne
pop
and
daa
and
insl
aad
rcl
dec
js
int3
cmp
dec
gs
jne
fs
nop
insl
pop
fmul
or
arpl
pusha
adc
sub
fs
pop
sub
cs
adc
and
xchg
mov
sbb
jmp
jbe
and
jl
add
mov
push
pop
imul
shll
insb
sbb
in
imul
dec
shr
pop
mov
jno
cmp
dec
mov
add
push
ficomps
cmpsl
popa
add
scas
cmp
push
je
and
shlb
jb
and
loope
or
jl
inc
shrl
jo
inc
inc
and
arpl
cmpsl
popf
pop
inc
imul
sti
push
xor
sahf
mov
mov
insb
notl
inc
insb
jle
cmovnp
inc
es
sbbl
lcall
jae
xor
adc
nop
iret
pop
jne
push
mov
push
lds
jo
add
call
nop
sbb
jnp
dec
bound
adc
or
or
movsb
push
push
xor
pushf
jge
dec
push
push
pop
xor
rcrb
mov
idivl
imulb
push
push
adc
and
xchg
fcomps
jnp
cmp
arpl
pop
jnp
or
dec
outsb
dec
adc
jnp
ss
pop
mov
fcom
lcall
cmp
or
sub
imul
popf
cmpsb
xor
push
xchg
mov
inc
push
addb
pop
adc
lock
in
inc
rcrl
inc
jb
and
or
out
dec
and
jl
outsl
bound
popa
or
dec
movsb
bound
add
or
add
inc
jb
push
incl
inc
push
jb
inc
jae
inc
mov
mov
leave
inc
shll
or
imul
aad
repz
jo
sbb
jo
insb
and
or
rclb
movsl
add
icebp
push
icebp
and
imul
mov
pop
jbe
or
push
jo
roll
mov
lret
or
and
push
cmp
mov
push
adc
inc
pop
mov
sbb
mov
fstpl
or
and
push
test
xchg
or
add
push
fisttps
inc
pop
xor
mov
add
jmp
sbb
dec
push
mov
adc
push
jo
or
pop
sbb
outsl
push
ss
jl
pop
inc
sub
pusha
mov
xlat
xor
dec
lock
popa
mov
jae
cmp
and
enter
adc
cs
push
dec
sub
inc
cwtl
dec
push
adc
sbb
add
cmp
push
outsb
push
push
fsubl
sbb
mov
lret
shll
test
mov
imul
dec
and
and
lock
insl
jecxz
test
ret
add
cmp
xor
pop
or
and
push
aam
nop
dec
aas
int
dec
lds
or
fcomi
ficomps
jb
scas
push
push
test
movsl
outsb
out
push
xor
or
mov
jno
sub
jecxz
add
das
sbb
roll
cmp
and
cmp
cmpsl
mov
addr16
int3
add
pop
pop
mov
or
iret
jns
imul
cmpsl
insl
int
mov
inc
push
loop
mov
cmp
lea
push
dec
push
sub
lds
or
xchg
lahf
xchg
aam
ret
ret
cmc
mov
aaa
js
add
cmovno
mov
jne
popa
or
push
push
inc
out
insb
add
sub
jmp
xor
pop
xchg
dec
push
ja
imul
and
pop
pop
out
int3
rclb
add
add
push
movsb
rcll
mov
jo
add
jmp
jg
dec
mov
pop
sbb
sbb
les
jp
add
pop
inc
mov
les
fwait
add
and
les
mov
or
cs
cld
insb
call
add
add
cmpsl
mov
add
lock
inc
fbstp
cmp
movsl
fldl
or
aas
in
add
add
in
cmp
pop
dec
pop
add
cmpsb
cs
call
xor
and
jb,pn
dec
jo
sbb
adc
add
push
push
int3
push
or
dec
out
inc
cs
pusha
push
fcmovnbe
ss
sub
add
jb
out
mov
dec
adcb
adc
insl
ss
es
jg
repz
add
dec
incl
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
