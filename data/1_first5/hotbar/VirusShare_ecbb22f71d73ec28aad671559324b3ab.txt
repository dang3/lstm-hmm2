fcomp
decl
pusha
jns
add
mov
or
push
add
or
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
sbb
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
testl
pmaxub
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
mov
insb
and
push
push
mov
push
subps
das
dec
sbbb
sbb
rorl
xchg
adc
xor
notl
sbb
push
and
push
cmp
push
add
fstpl
sub
bound
test
rclb
je
pop
mov
push
xchg
dec
add
cmp
je
sbb
jle
add
push
adc
lock
dec
add
mov
add
xor
xor
sub
in
mov
push
and
cltd
or
adc
mov
shrb
push
mov
adc
data16
mov
mov
inc
lock
lret
lds
test
sbb
int
add
loopne
ret
fbstp
sbb
nop
xchg
and
push
adc
mov
xor
push
and
xchg
push
roll
mov
add
cmpsl
push
push
idivb
mov
outsl
mov
jb
iret
aaa
jl
jbe
add
xor
sbb
sete
sub
push
push
into
lds
and
nop
or
leave
mov
dec
in
sub
xlat
cmp
outsb
pmaxub
les
add
push
push
pop
sub
cmp
lds
inc
add
ror
and
add
add
lahf
inc
add
divps
and
add
popa
sti
xor
mov
push
daa
out
push
int
sbb
inc
aam
xor
push
push
dec
mov
dec
dec
push
mov
lea
or
sti
push
pop
mov
dec
jl
ret
test
cs
dec
add
sbb
add
add
mov
cmpsl
and
xor
negb
and
jbe
pop
sub
jae
aas
push
mov
and
mov
dec
aas
mov
lea
cmp
clc
insl
nop
idivl
mov
movsb
pop
pop
cmpsb
mov
pop
ret
xor
push
cmp
push
dec
dec
push
sub
push
insb
insl
push
add
outsb
in
jno
faddp
jl
jmp
push
les
incl
clc
mov
jae
jnp
out
outsl
clc
mov
sub
push
mov
dec
lea
mov
insb
mov
or
repnz
scas
inc
and
add
push
mov
xor
pop
cmpsl
xchg
sub
push
in
push
int
pop
cmpsl
add
push
push
pop
pop
xor
lret
mov
call
iret
je
cmpsl
sbb
lods
fildll
out
adc
add
dec
in
dec
xchg
orl
inc
mov
andb
xchg
iret
mov
jne
lods
add
push
push
push
xchg
insb
or
pop
cld
mov
inc
hlt
nop
test
jg
dec
mull
dec
hlt
mov
or
dec
push
lds
adc
add
pusha
daa
out
push
pop
inc
xor
mov
stos
and
repnz
or
inc
repnz
dec
or
inc
inc
and
loope
and
ret
cwtl
lret
test
ret
push
lea
push
mov
fistps
ds
xor
dec
add
push
jge
subb
dec
mulb
or
test
push
adc
addb
inc
lock
andl
mov
pop
mov
jb
sub
insl
pop
pop
sbb
xchg
lret
and
pop
and
adc
add
loop
test
add
xchg
xor
push
clc
mov
inc
add
push
push
in
mov
or
mov
inc
sbbl
dec
jbe
popf
sub
sete
test
test
push
mov
or
sub
arpl
sub
and
sub
xor
dec
mov
pop
insb
pop
aad
or
and
sbb
cmp
inc
stos
pop
inc
sub
pusha
lds
punpckhbw
jne
mov
js
addb
jne
push
xor
cmp
je
adc
jne
in
xchg
or
push
push
mov
addr16
sbbl
or
leave
dec
mov
inc
push
push
pop
add
popa
push
or
xor
std
sub
cmpsb
jo
push
ljmp
aam
ret
mov
fs
scas
dec
push
cmp
cmpsl
sbb
and
sbb
loopne
or
add
in
sbb
std
add
jmp
push
inc
cmp
pshufw
sub
xor
mov
push
pslld
test
sbb
xor
add
mov
mov
dec
cmpsl
movsl
sbb
sbb
cmp
mov
mov
popa
lds
mov
push
adc
mov
fstp
fdivrp
adc
leave
mov
test
mov
mov
mov
test
or
push
mov
jg
loop
xor
fmull
pop
test
add
mov
push
jmp
and
mov
xlat
int3
xor
push
mov
cmp
mov
adc
cmp
pop
jno
xor
push
test
dec
inc
imul
fs
pop
push
mov
or
movlhps
mov
sbb
data16
or
sub
mov
js
or
rolb
test
xchg
jl
ljmp
push
mov
pop
rcrb
adc
push
je
aaa
ljmp
icebp
add
push
mov
cmp
outsb
sub
testl
mov
push
inc
mov
mov
xchg
sbb
aaa
mov
sbb
daa
add
adc
into
shll
adc
das
xchg
sarl
das
insb
or
insb
sti
clc
jae
mov
cmp
and
mov
mov
mov
leave
in
push
mov
xorb
adc
inc
movsb
ret
aaa
push
in
cs
jae
in
jecxz
mov
pop
pop
icebp
jns
mov
or
inc
lods
and
sbb
mov
mov
sub
and
xchg
jne
mov
dec
push
push
lods
mov
addl
jg
xchg
sbb
fmuls
outsl
mov
and
pop
sub
mov
les
xchg
lret
inc
movsl
daa
adc
jne
lods
mov
pop
sub
sub
outsb
pop
xchg
dec
fs
cmp
and
xchg
add
bound
mov
les
cmp
mov
inc
add
sar
test
cmp
jne
mov
mov
insb
sub
test
daa
mov
inc
lods
sbb
repz
push
pop
cmp
je
sub
cmp
je
ljmp
ja
or
sbb
and
or
mov
mov
add
or
adcl
inc
cltd
mov
mov
jg
cmp
push
movl
push
add
sbb
sub
add
ss
push
dec
ds
and
cmpsl
call
pavgb
pop
adc
adc
call
inc
cmp
jl
xlat
sti
dec
shl
add
pop
push
push
xchg
or
or
cmp
jbe
add
arpl
sub
jle
js
mov
xor
inc
push
dec
mov
inc
push
jp
dec
sub
mov
loope
mov
or
rcll
mov
and
loopne
loopne
test
movzwl
and
mov
cmp
je
push
cli
into
sbb
jmp
lcall
or
jmp
mov
lea
add
inc
test
jne
sub
and
sbb
push
inc
sbb
adc
js
push
mov
adc
xor
or
pop
aad
lds
push
ds
mov
insb
jne
adc
add
pop
dec
es
lea
fcmovnu
addl
sub
test
add
jge
xor
and
push
mov
cmp
jl
xor
mov
lock
xchg
pop
insb
pop
pop
ret
mov
push
xchg
inc
das
fwait
adc
jg
adc
pop
rcrl
or
or
fists
loope
lock
lcall
ficomps
or
test
clc
mov
mov
push
loopne
fs
adc
pop
cmp
add
orb
out
test
jg
or
mov
sub
test
jge
push
call
fcmovnb
inc
push
test
pop
nop
lahf
mov
iret
mov
sti
jle
mov
mov
cmp
pop
mov
jecxz
clc
mov
lea
push
or
cmp
loopne
mov
add
cld
adc
cmp
ja
add
pop
shr
jmp
insb
fcoml
add
push
aam
fadd
fists
sub
cwtl
jl
inc
jo
jg
mov
and
or
movb
pop
pop
pop
pop
ret
pop
clc
and
icebp
mov
test
inc
lock
inc
mov
cmp
or
insb
jge
sub
add
call
movl
adc
mov
pop
addr16
test
mov
out
push
clc
or
add
sub
adc
sub
or
jge
pop
movsb
loop
sbb
push
and
shl
and
sbb
shlb
pop
iret
sbb
in
test
in
repnz
sbb
inc
clc
or
lret
paddd
or
adc
cmp
ja
add
lock
push
xchg
cs
adc
push
rcrl
arpl
push
movsl
shlb
adc
add
jns
add
mov
and
adc
inc
hlt
push
jle
mov
or
subb
push
push
push
sbb
xchg
stc
xor
push
push
push
or
cmp
push
pop
push
push
js
lods
sti
lea
sbb
outsb
enter
jbe
jl
mov
or
sbb
push
mov
das
inc
sbb
adc
push
repnz
mov
cmp
push
cmpsl
jge
sbb
add
pop
xlat
loop
orb
mov
dec
data16
les
je
addl
push
lea
jl
mov
push
jne
push
or
sbb
roll
dec
test
push
mov
sbbb
scas
pop
mov
push
hlt
push
push
frstor
mov
mov
or
rcl
adc
mov
les
jo
mov
mov
loop
adcb
add
push
lcall
ret
add
test
xor
jp
add
shl
dec
movsb
push
and
xor
pop
adc
loope
mov
loope
mov
fdivs
sub
mov
push
stc
add
or
cmp
dec
inc
movsb
fsub
pop
push
push
dec
mov
cwtl
test
or
stos
push
cmp
mov
rorb
xor
mov
sub
clc
mov
pop
andb
fnstsw
jmp
inc
add
fmuls
lods
mov
lea
and
add
jo
jp
add
jmp
das
cmp
jo
cmp
jp
hlt
mov
mov
jmp
ret
push
in
mov
pop
add
shlb
in
or
pop
ret
pop
int3
movsl
addl
dec
loopne
jmp
push
into
decb
push
fsubp
xor
stc
ret
mov
enter
or
and
add
inc
add
or
or
add
ret
push
in
jno
pop
jae
push
aad
or
fwait
xchg
push
in
cli
subl
push
jle
scas
cmp
or
cli
inc
jb
mov
je
push
push
or
xor
stc
push
hlt
cmp
sbb
sbb
add
pop
repnz
out
lock
cmp
and
cmp
mov
mov
aas
les
shlb
lock
sub
push
fnstsw
je
mov
inc
sub
or
inc
insl
adc
pop
sub
fistps
push
lea
or
and
dec
cmp
push
bsr
in
enter
lods
pushf
add
fs
pushf
in
mov
into
insb
xor
rcll
addps
add
mov
pop
xor
mov
pop
aaa
xchg
cmp
pop
fistps
fildll
mov
or
movl
jno
mov
cmp
addb
dec
cmp
dec
movsl
adc
dec
or
jbe
movzwl
mov
ss
aam
mov
clc
loopne
pop
add
cld
test
pop
int3
mov
adc
jg
inc
adc
pop
sbb
mov
rolb
repz
das
xor
or
xor
mov
adc
rclb
dec
pop
outsb
fisttpl
mov
add
jl
xlat
push
lea
add
cmp
pop
inc
cmp
cwtl
mov
lds
fs
or
or
mov
jle
rcll
aam
inc
inc
pop
mov
icebp
push
inc
paddsb
lea
bound
loopne
pop
sbb
insb
jg
mov
mov
movsb
pop
repnz
stos
pop
repnz
leave
and
sbb
cmp
scas
pop
sbb
sbb
add
jg
daa
sub
into
push
sbb
pop
or
loop
pop
inc
scas
outsb
adc
push
mov
pop
call
or
inc
cmp
push
dec
ja
add
int
clc
and
je
or
mov
sbb
test
imul
push
add
in
fnsave
jo
into
jl
adc
sbb
pop
mov
cmp
push
sub
cld
cmp
std
repz
cmpl
and
jle
lock
clc
jg
push
outsl
dec
or
jmp
ret
pop
add
cmpb
push
adc
sarb
rcr
cwtl
imul
push
sahf
jecxz
arpl
jmp
cmpb
xor
adc
clc
inc
je
pop
subl
imulb
mov
mov
push
mov
jecxz
xchg
daa
stc
or
jne
jle
jl,pt
mov
test
or
sub
ret
jnp
add
inc
or
loope
je
push
inc
dec
adc
ds
jne
addl
jg
mov
cmp
dec
je
loopne
aam
jmp
dec
dec
mov
and
xchg
sbb
in
pop
push
mov
dec
cmp
lcall
cmp
or
enter
leave
and
or
addb
cmp
inc
push
mov
or
cmp
cmp
cwtl
push
lea
xor
stos
and
ficoml
inc
sbb
adc
cmpsl
loope
fcomps
cmpb
mov
pop
adc
mov
xchg
jbe
testl
sti
cli
add
push
mov
xchg
add
divl
sahf
or
mov
stc
sbb
sub
lods
scas
sub
mov
into
daa
je
in
jne
scas
dec
sbb
cmc
push
ss
mov
inc
ds
repz
jb
out
sbb
imul
test
or
repz
sbb
pop
and
sub
jg
sbb
xchg
mov
jae
out
jno
mov
or
clc
int3
rcrl
adc
lret
in
ljmp
cmp
xchg
scas
mov
xchg
sahf
mov
push
icebp
jg
dec
dec
mov
pop
push
lea
push
ficoml
add
sti
gs
mov
xlat
dec
cmp
repz
aam
and
pop
inc
les
sub
dec
or
or
enter
sbb
push
push
sbb
sbb
in
add
xorb
jo
jl
stos
aas
push
fiaddl
cld
xchg
mov
nop
xchg
pop
add
test
add
fs
addl
mov
cwtl
movl
andl
pop
mov
insb
bound
fisttpll
fbld
les
out
sub
sbb
dec
es
ja
jle
or
sbb
popf
push
jne
and
stos
add
scas
push
adcb
xchg
sbb
sub
loope
mov
call
in
adc
out
jno
sbb
xchg
or
movsb
lods
pop
mov
js
cmp
sbb
out
dec
and
and
imul
dec
jne
lock
andl
add
cmp
shrb
push
clc
dec
and
push
add
xor
jecxz
lcall
stos
dec
pop
pop
dec
ljmp
enter
rcpps
add
lea
cmp
je
lea
pop
jo
push
add
loopne
inc
add
mov
repnz
pushf
push
mov
sub
push
jle
sahf
pop
mov
repz
test
or
ret
pop
addl
cmpl
xor
adc
scas
jl
aad
adc
test
in
ret
or
aam
xchg
mov
sub
loopne
xlat
xchg
jecxz
push
lea
int
adc
pop
ss
int
dec
data16
push
mov
mov
insb
push
mov
dec
mov
push
push
xor
xchg
inc
dec
adcb
je
scas
sub
icebp
mov
ljmp
sub
cltd
sub
sar
add
push
mov
lcall
cmp
push
mov
aaa
mov
sahf
inc
add
mov
cmp
mov
mov
insb
es
call
xor
push
push
inc
jbe
fsubp
imul
push
push
sbb
cmp
jge
push
adc
xor
cmc
jl
cmp
inc
or
jle
xor
sub
ret
jl
sbb
filds
sbb
mov
mov
add
inc
neg
sbb
cltd
jge
pop
add
push
add
cmp
mov
sbb
pop
jg
addb
adc
adc
push
xor
ret
adcb
je
fnstsw
pushf
loop
sub
test
add
imul
add
movzbl
in
repz
out
sbb
mov
push
lret
jns
or
loop
xchg
push
movsb
cmp
addr16
push
pop
pusha
lock
out
aas
mov
inc
pop
xchg
adc
lahf
std
lods
inc
or
adc
jnp
out
push
cwtl
add
jmp
lret
xor
push
push
adc
loope
push
and
push
add
cwtl
aas
cmp
cmp
cs
jo
lret
push
mov
mov
lods
mov
jo
and
loop
xchg
xchg
sarb
mov
mov
inc
jg
mov
cmp
inc
pusha
pusha
add
out
and
adc
aad
cmp
cld
jb
jg
jmp
pop
cld
stos
fnsave
xor
cmp
aad
push
pop
cmpsl
adc
shlb
mov
call
mov
sbbl
xchg
rolb
jb
dec
mov
call
pop
daa
dec
je
enter
clc
sahf
push
mov
ret
scas
xchg
aaa
mov
mov
push
dec
pop
jecxz
add
push
xchg
lret
sub
incl
jne
push
mov
dec
sub
inc
and
rcrb
pop
or
or
loopne
jb
pop
in
mov
sbb
pop
push
fstpl
jecxz
pop
out
orb
push
fwait
imul
sti
nop
pop
mov
or
out
cmp
jno
mov
inc
mov
test
lods
and
xchg
or
pushf
and
cmpsl
jnp
sbb
ficoms
outsl
movb
adcb
fldcw
push
dec
sbb
dec
lret
mov
push
sub
addb
fmul
js
inc
inc
lahf
push
rolb
xor
pop
push
pusha
mov
sarb
or
add
sbb
scas
mov
adcb
pop
sub
push
push
lea
aam
fcoms
fsubrl
jp
add
sub
pop
push
or
jae
fnstcw
or
jg
jae
sarb
addl
loope
pusha
push
push
test
sub
je
mov
pop
es
dec
addb
cmp
inc
xor
dec
xor
add
lea
std
call
mov
add
ficompl
and
jo
xchg
in
jns
sbb
xor
adc
je
push
mov
bound
xor
jge
aaa
faddl
jb
faddl
sub
inc
int3
xor
push
imul
sarb
inc
pusha
fmull
pop
cld
push
testb
iret
inc
jle
push
sub
sbb
xchg
push
lahf
xchg
out
nop
push
mov
adc
dec
shll
adc
sub
es
shll
scas
add
add
pop
les
dec
ds
xor
sub
dec
and
add
push
lds
mov
adc
mov
sbb
mov
jp
inc
daa
mov
or
dec
add
push
add
push
mov
scas
loopne
adc
out
inc
into
and
jp
loop
lock
xchg
sub
dec
or
or
shll
es
cmp
push
add
xorb
jno
xchg
adc
pusha
adc
nop
or
push
inc
adc
popa
ret
xorl
xchg
ret
xor
push
cmp
jne
xchg
push
push
lds
or
cmp
scas
pop
push
cld
cld
add
mov
dec
mov
jge
xchg
or
call
push
stos
subb
adc
sub
sub
push
pop
inc
test
and
or
jmp
fsubp
sbb
lea
lds
stos
xchg
test
bound
add
iret
add
shlb
adc
mov
mov
fmull
sbb
cmp
push
jo
ljmp
push
mov
rcll
or
leave
add
fstpl
sub
inc
push
sbb
mov
dec
pop
push
clc
movsl
mov
ret
pop
dec
mov
dec
xor
add
add
gs
add
enter
jno
incl
leave
add
sbb
imul
xor
pop
loope
or
scas
test
ljmp
or
loop
add
ret
sar
in
enter
dec
fldenv
fstpl
dec
gs
fwait
daa
jl
dec
add
add
xlat
adc
add
jmp
bound
mov
dec
bound
imul
sar
mov
shr
add
pop
add
mov
imul
push
lahf
hlt
inc
shrl
jle
lea
imul
pop
dec
fdivs
jbe
cmc
sub
mov
or
cs
add
ja
add
push
push
enter
dec
inc
repz
jo
cmp
divl
jg
pop
sbb
pop
pop
push
cmp
jne
push
xor
fsubrs
jno
push
adc
ret
imul
adc
jae
pop
mov
es
lea
or
mov
sti
test
stos
add
insb
test
popa
hlt
arpl
fimull
jge
inc
dec
push
dec
movsb
pop
xor
lea
movsb
add
test
add
and
jle
call
out
data16
push
ljmp
loope
fisubrl
int3
incb
adc
fstpt
pop
outsl
sub
cltd
idivl
push
aaa
roll
lods
cmpb
or
jo
mov
mov
sbb
loope
xlat
cmc
push
add
jl
insl
sti
or
mov
fidivrs
cmp
nop
add
xchg
sbb
and
adc
ljmp
lods
pop
lea
cmp
or
out
or
idivl
jge
jmp
mov
andb
mov
sbb
fisttps
add
pop
or
rorb
sbb
stc
shll
mov
test
mov
into
sbb
mov
mov
mov
sbb
add
push
fcoms
or
rol
add
adc
in
mov
fmuls
out
ficompl
add
add
pop
inc
fcomps
inc
idiv
inc
clc
in
push
pop
movb
dec
js
mov
jge
ret
dec
cmp
adc
call
shll
pop
mov
in
cmc
xor
insl
fdivrl
mov
cwtl
adc
sbb
xchg
in
jae
or
xor
je
mov
xchg
xchg
dec
loopne
aam
mov
inc
insl
pop
xchg
mov
adc
ja
pop
fisttpll
shlb
xchg
and
sbb
xor
icebp
rcr
dec
mov
mov
inc
lcall
sub
cmp
sub
sarb
or
sub
xorb
add
push
pop
fmull
xchg
mov
push
mov
cltd
pop
inc
outsl
loopne
pushf
test
or
adc
pop
add
or
test
jne
and
movsb
loope
push
enter
push
into
add
xor
pop
sbb
pushf
inc
adc
dec
add
mov
fmuls
add
push
ljmp
test
je
or
mov
mov
popf
push
out
xchg
aas
xor
decl
or
mov
sbb
mov
pop
inc
jg
xor
jo
shrl
fstpl
inc
rolb
push
xor
scas
or
sbb
rcrb
xor
jo
sbb
add
stc
xchg
imul
mov
sbb
sbb
jp
and
adc
scas
test
push
in
nopl
push
and
push
pop
xor
add
add
push
add
xchg
xor
dec
mov
repnz
jle
inc
push
jle
arpl
mov
and
or
sbb
mov
pop
sub
or
faddl
mov
rolb
or
ret
cli
add
push
clc
jg
icebp
sub
sub
clc
setb
or
mov
sub
cmp
xlat
jno
sub
xchg
rcrb
push
adc
add
js
lret
mov
sbb
movsb
sbb
pop
adc
sbb
mov
inc
or
test
lea
push
adc
cmp
fs
aad
push
movsl
call
es
pop
pop
les
dec
aaa
loopne
lock
stos
mov
push
or
loope
leave
push
pop
cmp
aam
adc
adc
test
jbe
sbb
insb
pop
mov
add
xor
ds
adc
ss
push
test
push
push
dec
mov
jns
sbb
jg
in
std
mov
pop
jmp
inc
sub
sub
jge
iret
xor
sub
pop
sub
sahf
mov
jg
clc
push
ja
movzbl
push
imul
outsl
jno
or
mov
lcall
sti
cmp
jne
movsl
dec
xchg
xchg
fwait
add
add
mov
adc
sub
add
adc
adc
adc
dec
nop
push
adc
or
add
dec
rcrb
mov
pushf
ret
ret
ds
inc
jb
adc
adc
mov
movl
cmpsb
int3
insl
xchg
pop
jmp
jns
int
pusha
mov
add
das
sbb
xchg
inc
cmp
test
xor
incl
xor
lret
sbb
sbb
mov
cmp
add
cmp
xchg
mov
xor
jg
dec
push
sbb
adcl
mov
and
add
push
sub
dec
rolb
mov
pop
fidivs
inc
mov
clc
sahf
add
push
in
push
int
xor
cli
mov
adc
xchg
jne
mov
mov
cli
push
push
or
dec
sbbb
or
out
mov
and
and
ss
sbb
cld
push
and
or
sahf
sub
lds
jmp
ror
rcrl
subps
push
pop
nop
dec
mov
jge
int
jge
mov
cmp
dec
add
push
movsb
inc
xchg
sub
movsl
push
pop
pusha
js
loop
rcrl
adc
mov
cmp
add
clc
or
js
lods
je
xor
es
shrl
mov
je
jne
lods
lret
adc
mov
sub
mov
or
push
lock
push
movsb
cmpl
andb
outsl
int
xchg
out
add
or
pop
push
xchg
cmp
inc
dec
push
stc
push
or
or
jmp
movsl
fnstcw
push
dec
pushf
shll
push
mov
sub
or
lods
jp
dec
daa
jg
mov
sub
mov
push
test
inc
sbbb
dec
and
jae
push
cmp
xor
cmp
and
lea
jle
mov
pop
push
lea
add
push
gs
pop
loopne
add
push
xchg
loopne
insb
cld
insb
cmp
inc
xchg
aam
ret
insl
jns,pt
inc
fiadds
mov
rorb
add
add
add
pop
mov
in
add
fcmovnu
int
out
or
inc
sahf
and
repz
or
inc
pop
push
fisttpl
dec
jo
sub
dec
or
xchg
nop
or
add
fbld
xorb
movsb
fwait
in
cmp
and
inc
xchg
or
jne
adc
mov
das
enter
push
aam
cmp
dec
cltd
fs
pop
call
movsl
add
inc
test
inc
adc
jno
inc
enter
sbb
js
loopne
dec
add
roll
mov
sbb
pushf
or
add
roll
leave
cmp
add
mov
incl
pusha
out
mov
mov
inc
es
pushf
jae
pop
movl
jne
push
sub
sub
push
rcl
push
xchg
add
dec
mov
or
mov
pop
sub
pop
lds
insl
repnz
and
or
mov
cmc
jbe
into
leave
or
inc
enter
push
dec
jb
adc
jmp
sti
movsb
pop
push
mov
shlb
mov
out
cmp
xchg
sbb
mov
mov
into
rclb
xor
dec
adc
push
inc
sbb
cmp
jae
imul
pop
loop
cmpsl
lahf
in
mov
rclb
das
add
dec
adc
js
or
jmp
push
popf
xor
xchg
or
fdivl
mov
ficompl
push
adc
dec
test
xor
pop
movsb
sub
adc
mov
xor
push
add
and
mov
adc
xor
lret
ret
roll
pop
fisubrs
mov
adc
mov
adc
and
sbb
test
in
mov
ja
and
add
pop
mov
int3
add
push
jl
sub
mov
push
std
stc
cs
test
jl
jg
jno
push
push
popa
lea
adc
sub
push
test
jmp
and
into
movl
mov
jne
mov
push
lret
inc
pop
mov
jb
andps
jb
sub
jo
pop
add
js
iret
adc
mov
push
aam
xor
inc
jne
bound
das
shll
je
and
es
add
stc
pop
push
push
inc
jae
cmp
sbb
sub
or
xchg
add
out
mov
jb
out
inc
sbb
arpl
sbb
add
pop
adc
add
nop
test
jne
sahf
jo
fildll
push
push
out
adcb
sbb
in
es
or
add
popa
adc
test
xor
push
fmull
pavgw
pusha
adc
imul
push
sbb
sbb
mov
sub
out
out
mov
adc
xor
ret
and
aam
adc
shlb
xchg
mov
sbb
mov
and
cmp
sbb
mov
xor
es
or
and
mov
cmp
aam
pop
sbb
add
and
push
mov
cmc
jbe
pop
dec
mov
cmp
clc
xor
mov
add
sti
sub
mov
pop
jne
rolb
xlat
pop
add
jmp
sbb
jne
test
adcb
shr
mov
add
data16
add
push
stc
bound
sub
mov
loope
xor
and
adc
add
pop
lods
inc
es
push
push
mov
sbb
icebp
testl
push
pushf
mov
jmp
adc
xorl
dec
test
outsb
pop
stos
and
nop
test
insl
push
cmc
nop
and
pop
xchg
mov
cmp
xor
mov
inc
clc
or
add
dec
sbb
or
push
pop
sub
xchg
je
and
cltd
xchg
fimuls
scas
xor
les
pop
inc
fbstp
lods
stos
xchg
test
push
xor
mov
and
outsl
dec
cmc
add
mov
notl
sti
jecxz
add
mov
lock
inc
scas
and
push
adcb
xchg
pop
sarb
push
pop
xchg
and
mov
add
sbb
sbb
repnz
dec
in
push
or
sar
add
push
push
mov
scas
addl
sbbb
jnp
add
xor
and
sbb
pop
sub
fdivs
les
das
push
fildl
or
pop
leave
sbb
std
add
xor
stc
inc
and
push
repnz
push
pop
or
cs
cmpsl
or
pusha
or
test
shlb
dec
and
add
jns
sbb
sbb
insb
add
xor
sub
pop
ljmp
dec
ss
push
repz
addl
lahf
inc
sahf
sbb
aaa
push
and
cmp
loopne
out
or
pop
adc
or
cmpsl
push
pop
pushf
sbb
sub
gs
cmp
bnd
push
ds
fidivl
pop
sbb
clc
add
lahf
mov
xchg
cmp
andl
xor
ss
nop
sub
adc
xchg
sbb
cmp
test
aad
iret
inc
cmp
push
mov
stos
dec
cmp
inc
rolb
push
sub
aaa
or
jns
add
mov
and
sub
popa
xor
into
in
xchg
push
icebp
pop
xor
mov
pushf
jmp
push
sbb
insl
push
sub
and
or
or
hlt
add
inc
sbb
adcl
in
dec
cs
cmp
lods
nop
xchg
mov
adcl
insl
addr16
cmpsl
lahf
mov
mov
mov
movb
or
pop
lock
inc
pusha
pop
add
inc
mov
pop
mov
stos
jo
sub
sub
movsl
arpl
push
or
add
mov
inc
movb
cmp
and
add
lods
inc
fistpll
inc
outsl
add
sti
out
adc
xchg
jl
aad
xor
mov
push
aad
hlt
ret
jnp
adc
test
push
rorb
mov
adc
call
and
add
or
add
sub
addr16
push
mov
sbb
dec
sub
fcompl
loope
cmp
xchg
ret
test
xchg
jp
pop
cmp
enter
sub
inc
xor
aam
mov
xor
movsb
push
adc
or
jmp
hlt
push
popf
mov
lods
inc
adc
movsb
cmpsl
test
adc
ficoms
in
pusha
mov
push
sbb
mov
add
shll
je
outsl
sbb
clc
mov
mov
and
cltd
push
into
xchg
jns
sarb
push
jp
add
dec
jno
inc
cmp
sbb
popf
popa
mov
mov
fwait
int
xor
cld
adc
lds
inc
pop
mov
add
adc
pushf
insl
and
xchg
test
add
roll
stc
roll
cwtl
pop
push
inc
mov
iret
shll
inc
out
mov
test
sub
pop
xor
jno
mov
iret
test
or
adc
or
loope
push
jno
rcll
int3
popa
mov
jge
shlb
mov
outsl
movsb
adc
pop
mov
testb
push
loopne
and
pop
enter
cmp
mov
or
test
adc
dec
push
xchg
or
inc
jb
add
push
nop
out
adc
add
testb
lds
xlat
cmp
push
inc
scas
xor
push
rorb
mov
enter
jp
xchg
and
or
ret
in
or
pop
pop
pop
mov
add
je
mov
sbb
sub
clc
or
imul
or
mov
pop
sti
repnz
inc
jno
dec
add
sub
nop
push
adc
adc
or
jne
push
push
xchg
jl
cmp
sub
nop
testl
and
in
dec
mov
dec
add
adc
sbb
push
stc
xor
sub
cs
inc
movsb
pop
sub
xor
nop
dec
cwtl
adc
and
adc
daa
pop
sub
xchg
dec
enter
cmp
jo
nop
dec
shlb
adc
sub
push
leave
insb
inc
cmp
into
ror
leave
add
mov
adc
inc
and
leave
andl
loope
mov
inc
cmc
jecxz
andb
add
adc
rcr
adc
data16
subb
dec
je
mov
popa
aam
sbb
and
cmp
cwtl
add
push
pop
repnz
push
and
add
or
inc
xchg
xor
jb
iret
das
push
push
in
and
adcb
jl
adc
pop
pop
jl
mov
adc
sub
sbbb
mov
adc
nop
add
mov
je
sti
mov
test
loop
loop
push
addr16
outsb
cmpb
add
dec
xor
test
imul
mov
roll
sbb
loop
js
lcall
out
les
mov
cs
mov
dec
loopne
cmp
sbb
daa
sbb
inc
mov
repnz
mov
sbb
loop
lods
ja
mov
mov
mov
mov
leave
jmp
movsl
nop
inc
pop
ja
xchg
mov
inc
idivl
cltd
cwtl
jb
push
add
lea
adc
in
xorb
out
cmp
es
or
mov
push
push
lret
adc
push
lea
mov
push
ret
cs
inc
adc
or
pop
jb
cmpsb
dec
pop
imul
imul
sbb
mov
inc
cmp
imul
and
pop
push
mov
mov
inc
mov
or
cmp
add
mov
add
repz
sub
jl
call
mov
mov
call
adc
add
hlt
popf
test
into
mov
and
or
loopne
mov
sub
add
gs
test
xchg
push
pusha
sub
mov
and
mov
imul
cs
pusha
adc
out
lea
je
push
xor
xor
addr16
mov
and
insb
sub
mov
sti
push
dec
aam
jmp
arpl
movsb
cltd
inc
sbbl
and
jo
mov
lret
push
adc
cmp
xchg
xor
mov
enter
jle
mov
pop
mov
mov
mov
add
je
or
lods
je
int3
iret
fstl
mov
outsl
add
and
cli
lds
add
out
adc
mov
adcl
negb
jo
stos
and
clc
and
sub
sub
or
jge
fsubrs
loopw
loop
lcall
push
adc
and
push
pop
fcompl
jle
jg
or
add
add
into
or
or
dec
fsubrs
jl
and
cmp
int
pop
cltd
rorb
shlb
adc
lcall
push
rcl
inc
jns
movsb
push
or
xor
pop
shrb
xchg
push
dec
inc
cmp
test
pop
sar
fwait
push
xchg
mov
and
sub
or
fstl
xor
aas
and
add
loop
or
lods
aam
jb
inc
add
or
cmp
negl
add
addb
mov
push
push
cmp
cmp
stc
in
mov
sbb
push
mov
push
push
or
xor
xor
or
xchg
add
ret
lcall
shlb
sbb
add
jle
push
ficoml
inc
dec
xchg
int3
popa
inc
fildl
nop
imul
or
sarl
cmp
mov
icebp
sbb
fisttpl
int3
mov
pusha
cmp
adc
mov
pop
add
out
pusha
add
mov
jno
dec
and
push
cmp
test
out
addr16
cmc
dec
sbb
inc
jecxz
insb
inc
data16
and
mov
sub
fstl
add
or
dec
pop
or
add
mov
mov
js
and
mov
push
test
and
jo
mov
mov
xchg
xlat
jecxz,pn
int3
ret
xlat
orl
adc
fcomps
incb
jle
mov
add
xor
call
push
add
or
pop
add
adc
jno
cmp
adc
lret
hlt
jg
xor
mov
jae
mov
sub
cld
cltd
adc
cmc
mov
sub
cmp
test
fcomip
stc
inc
add
pop
mov
inc
andl
pusha
pop
pusha
ja
add
xchg
and
sbb
push
pop
mov
jp
jle
sarb
js
js
mov
cld
jae
dec
cld
lea
sub
mov
cmpsl
jp
pop
jo
sbb
fimuls
mov
adc
rcrb
xor
test
sub
sub
mov
mov
aad
pusha
add
mov
sub
dec
xor
dec
and
inc
xchg
jp
add
xorb
xor
aaa
insb
pop
pop
or
ljmp
push
add
out
or
push
jmp
mov
xor
scas
inc
cmp
icebp
int
pusha
dec
push
cwtl
test
aaa
mov
test
sbb
repz
subl
push
leave
adc
mov
rorb
adc
jmp
sub
popa
daa
jo
and
jmp
push
dec
xor
sub
sbb
sub
push
repz
sbb
int3
inc
das
dec
xchg
inc
mov
lret
outsb
cmp
cmp
xor
jns
cmp
sbb
inc
xchg
orl
or
pop
hlt
add
ret
je
adc
or
repz
aas
push
push
outsb
sub
cld
dec
lock
cmp
test
sbb
jo
adcb
enter
mov
cmp
add
pop
ljmp
adc
dec
ljmp
mov
jno
sub
and
and
test
inc
pop
inc
lods
xor
adc
push
loope
mov
jb
lods
fdivs
inc
clc
sbb
jne
xchg
inc
add
jns
js
jle
icebp
and
xchg
ret
aam
push
push
out
in
sbb
sbb
dec
or
pop
jo
push
dec
adc
add
repz
outsl
mov
test
or
dec
sarl
adc
addr16
ss
and
lock
dec
ret
clc
incl
sub
push
add
or
sbb
clc
subl
ljmp
nop
xor
add
in
cmc
pop
ljmp
xchg
adc
aas
test
sub
pop
add
and
mov
mov
pop
push
mov
or
nop
aaa
inc
dec
cmp
scas
push
xor
fwait
out
and
fdivs
out
call
jno
pop
or
insb
xor
leave
or
aaa
inc
add
pop
out
lock
mov
ja
xchg
adc
sub
cs
nop
les
mov
push
hlt
orl
setge
sub
xchg
pop
xor
xorl
mov
and
movsl
inc
jle
jl
sub
fmuls
sub
cs
xchg
and
into
adc
mov
and
leave
cmp
lret
std
adc
pusha
sbb
shll
scas
popf
inc
push
ss
jo
inc
or
or
push
jno
xchg
subb
push
test
inc
inc
sub
shlb
enter
push
cmp
dec
mov
sub
add
or
clc
test
mov
or
insl
xor
jmp
add
dec
aaa
push
and
add
mov
aad
mov
bound
mov
sbb
add
popa
cwtl
and
pop
or
push
xchg
fcompl
in
mov
sub
or
xor
mov
stc
shrb
icebp
faddl
and
sbb
jbe
test
push
push
leave
xchg
cmpl
sbb
sub
inc
es
adc
push
jno
and
or
inc
pop
adc
adc
push
std
jno
adc
push
imul
inc
outsl
or
sub
mov
sbb
jbe
adc
testl
dec
rcrl
mov
dec
cmpsb
and
ret
mov
push
add
mov
mov
negl
scas
or
shlb
adc
outsb
je
lods
and
mov
sti
cmp
xchg
sbb
mov
dec
je
sbbb
xor
loope
push
mov
push
sti
movsb
dec
mov
mov
jo
xor
jnp
dec
mov
aam
push
loope
ret
fists
je,pn
push
jg
xchg
rorl
lods
add
nop
inc
repnz
add
push
dec
push
jg
dec
out
mov
mov
imul
hlt
cmp
jne
sbb
inc
jl
cmp
les
into
ja
xchg
cmpl
sub
push
dec
jmp
cmpsl
pop
or
mov
loope
insb
aas
daa
scas
aaa
testl
cmpb
sar
adc
xchg
sub
mov
cwtl
sbb
jmp
cld
mov
sbb
outsb
add
or
lea
jge
push
push
and
movsb
push
imul
cmpsl
or
inc
push
add
ds
mov
sbb
fidivrs
mov
icebp
arpl
pushl
mov
or
dec
mov
sub
jg
mov
sbb
sbb
sbb
dec
ja
push
jmp
mov
fsubr
or
add
out
pop
sbb
int
dec
and
or
mov
and
cwtl
aaa
dec
cs
int
jb
inc
sbb
lds
adc
pop
rcr
inc
dec
aam
sar
lret
ret
xchg
hlt
cmpsb
xor
je
cmpb
pop
mov
add
cmp
push
jnp
ds
push
push
mov
jge
add
sub
inc
idiv
push
shlb
add
addl
or
clc
iret
mov
pop
pop
mov
dec
hlt
jge
out
push
sbb
add
add
int
lahf
inc
sbb
sbb
xchg
add
mov
fmul
adc
xlat
mov
sub
push
es
ret
sub
aaa
sbbb
jae
add
rcr
sahf
jl
mov
push
jg
push
add
push
jne
icebp
sub
add
push
ret
enter
mov
dec
jecxz
pop
cmc
dec
cld
sub
loope
lea
pop
xchg
sub
mov
nop
dec
adc
mov
ret
out
jno
cmp
adc
sub
push
test
inc
xor
adc
ds
jbe
inc
fmuls
pop
inc
fisttpl
mov
aam
mov
mov
push
jo
repnz
mov
and
hlt
push
adc
push
fwait
repz
mov
add
ret
jg
nop
sbbl
adc
sub
sub
rolb
leave
outsl
lods
adc
andl
lds
andl
lods
push
sbb
roll
push
dec
ret
inc
jecxz
addr16
imul
inc
jle
fs
pop
inc
pop
pop
mov
ret
aas
cmp
adc
cmp
cwtl
add
andl
ljmp
sbb
sbb
outsb
add
in
mov
outsb
ret
pop
pop
leave
push
jg
mov
push
cwtl
xchg
subb
ss
xlat
arpl
xchg
push
adc
imulb
push
loope
ret
xlat
mov
je
push
sbb
jecxz
or
add
sbb
or
jge
dec
decl
testb
fiadds
or
icebp
aaa
cmp
jle
lock
inc
or
push
addb
cmp
jne
loop
push
sbb
arpl
or
decb
sbb
loopne
jge
lret
or
sbb
iret
push
add
or
add
call
xor
rcrb
movsb
xlat
jno
or
fmuls
loope
push
push
mov
push
push
into
js
sbb
jp
push
movsl
mov
outsb
push
add
and
jmp
test
rcll
xchg
ja
lods
ror
pop
adc
insb
cmpsl
mov
pop
hlt
xchg
jae
lea
mov
je
mov
sbb
sub
insl
pop
xor
shrb
mov
out
or
rol
inc
add
and
addr16
aas
outsb
aas
mov
push
mov
sbb
add
shlb
or
cmp
pop
enter
inc
jae
mov
cmp
jg
push
flds
push
mov
dec
lcall
dec
ret
add
mov
add
or
cmp
loop
jp
stos
xchg
rorl
pop
test
add
pop
sbb
subl
mov
pop
mov
sub
je
and
lret
add
fistl
mov
movb
int3
or
aas
iret
addb
sar
mov
push
mov
xor
jns
arpl
cs
orb
inc
pop
mov
jge
std
movsb
xchg
pop
push
push
cmp
sbb
test
lods
or
adc
push
xor
and
and
add
push
lds
add
xchg
ror
or
rcrb
lea
dec
add
sbb
xor
popf
push
iret
xor
xchg
push
call
test
insb
ret
imul
icebp
setge
add
cmp
add
adc
jmp
sub
out
roll
pop
xchg
xlat
dec
scas
inc
ljmp
sti
popa
xor
sub
adc
add
jmp
lock
push
js
lahf
dec
shlb
call
dec
cs
cmp
and
cmp
or
or
pop
sub
push
push
xchg
or
mov
movsl
lahf
or
push
push
inc
xchg
aad
dec
push
add
sub
add
lea
nop
cwtl
dec
inc
int
jl
mov
cmc
adc
dec
xchg
mov
cmp
xchg
push
scas
test
jo
or
imul
dec
popa
pop
inc
add
or
movsl
pop
cmp
adc
push
in
adc
bound
push
sub
js
incl
push
inc
sbb
xor
int
cmp
pop
cmp
sbb
jl
call
in
push
ds
adc
dec
xchg
loopne
inc
sub
das
cmp
push
fidivrs
or
push
add
sarl
idiv
je
iret
dec
mov
es
pop
aas
add
add
loop
xchg
fwait
sbb
addb
dec
cmp
and
adc
add
sub
lods
hlt
xor
std
jmp
push
cmp
xchg
mov
add
pop
fldenv
push
inc
jmp
out
mov
push
pop
and
sbb
mov
out
jnp
pop
mov
mov
push
out
jb
pop
js
push
cmp
add
jne
cld
cmp
mov
lds
ja
add
mov
test
cmp
sub
pop
push
je
inc
adc
pop
xlat
add
fs
push
dec
or
faddl
and
cmp
cmp
stos
or
lret
sbb
mov
sbb
adc
sti
int
mov
sub
test
out
add
and
int3
sub
push
cltd
int
imul
pop
jne
mov
dec
insl
or
dec
js
pop
repnz
cld
mov
mov
arpl
add
or
movl
gs
dec
xor
pop
add
push
add
inc
sahf
pop
adc
push
push
add
dec
pop
pop
xchg
lahf
add
repz
push
ds
cld
or
adc
or
adc
sahf
push
sbb
cmp
add
and
out
test
sub
lods
push
popa
stc
adc
add
movsb
cmpb
jb
adc
sbb
inc
stos
and
rorl
jns
sbb
add
aaa
adcl
adc
jo
push
jl
sub
decl
jne
and
adcl
add
fstpt
push
test
stos
je
jb
xchg
orl
xor
ss
adc
dec
mov
sbb
lock
insl
in
push
bound
mov
movsb
and
add
push
rorb
jle
inc
push
push
je
in
push
mov
dec
add
shll
or
and
inc
stos
add
add
mov
or
dec
ret
enter
xchg
push
xor
push
lret
and
js
pushf
pop
das
rolb
daa
add
jmp
adc
add
xor
shrb
mov
fsts
inc
sub
mov
int
cmp
inc
data16
popf
pushf
or
lea
int
add
inc
add
xchg
jnp
dec
cmp
adc
mov
popa
xor
stos
mov
xchg
mov
pop
xor
add
jge
loop
jl
lock
popf
xor
jl
lcall
mov
adc
movsb
insl
fisubrs
add
push
inc
push
push
push
fwait
pop
les
push
push
mov
add
test
and
test
popa
stos
sti
and
scas
add
jecxz
push
cmp
mov
lahf
mov
mov
mov
js
bound
and
or
in
sbb
fbstp
mov
mov
xlat
lret
or
cmc
xchg
out
add
scas
or
je
dec
fdivs
cmp
pop
inc
nop
cmpsl
cmp
adc
push
es
push
mov
adc
inc
xor
jmp
inc
xor
or
scas
std
xor
push
jno
mov
rcll
push
inc
dec
add
cltd
xchg
or
sbb
daa
es
push
test
mov
adc
xchg
mov
xchg
lahf
or
and
pop
xchg
mov
mov
or
or
push
dec
inc
sar
sbb
ret
cmp
test
je
lea
push
xor
test
fldz
fisttpl
test
xor
idivl
xor
pop
cmp
jb
pop
pop
js
xor
pcmpeqb
imul
sub
inc
sub
add
push
jns
dec
stos
sti
mov
pop
add
jl
fiaddl
mov
jle
orb
xchg
mov
sub
imul
add
in
add
add
jmp
dec
clc
sub
or
jge
lret
mov
fidivl
or
push
fbld
cmp
sahf
pop
or
daa
fists
and
or
bound
sti
push
std
loopne
imull
xor
jp
pop
push
push
push
push
inc
and
fwait
add
push
push
push
push
test
outsb
test
xchg
push
add
popf
mov
incb
notl
add
add
xor
mov
inc
int
insb
sub
add
xor
lock
js,pn
jg
ja
js
sbb
pop
add
sub
push
je
imul
jp
add
sbb
dec
and
fisubs
push
pop
inc
dec
test
cld
adc
sub
hlt
daa
pop
push
xchg
lcall
in
mov
pop
xchg
add
add
sbb
test
lcall
and
jmp
mov
sbb
dec
sub
mov
mov
ret
lock
jecxz
sbb
add
out
jbe
adc
andl
fwait
cmpb
or
adc
test
pop
or
in
mov
adc
add
push
nop
in
mov
add
dec
inc
add
out
add
pop
dec
add
jbe
or
add
ret
add
cmp
push
fs
call
js
sub
movzwl
and
lock
add
mov
loope
arpl
icebp
push
push
lcall
push
ds
sub
push
es
push
test
cmp
and
add
jae
dec
cmc
inc
in
into
adc
sbb
push
les
sub
jge
xor
push
inc
jl
mov
pop
das
sub
sbb
push
push
cmp
adc
into
inc
pop
xor
adcl
call
push
mov
cmp
je
push
sahf
mov
add
pop
or
les
mov
inc
push
xor
sbb
cwtl
mov
pop
push
xlat
push
push
or
mov
xlat
jge
in
inc
push
js
cmp
sbb
sub
fildll
sub
mov
sbb
pop
in
mov
sarl
mov
xor
notb
cmp
add
lock
inc
sbb
ret
or
out
pop
ja
dec
jmp
xor
cmc
fiadds
mov
push
xor
in
xor
sub
xor
ret
loope
and
fimull
mov
pop
or
rclb
ret
mov
fs
shlb
lods
fs
dec
jbe
mov
push
adc
push
js
out
mov
or
in
loopne
add
push
or
cld
test
sarb
inc
call
add
hlt
es
es
adc
push
cmp
push
bnd
mov
adc
dec
dec
popf
rcrb
sbb
dec
sarl
mov
stos
or
or
jg
ss
ljmp
push
xchg
jbe
mov
add
loop
xor
xor
push
sbbb
pushl
gs
mov
enter
mov
cld
sarb
addb
ret
mov
testb
dec
lock
les
sbb
jo
dec
popa
inc
aam
lods
inc
cmpsl
sub
stos
mov
int
push
movb
fnstenv
lock
or
jnp
jae
mov
dec
jo
add
push
pop
out
sub
mov
add
jb
pop
lea
jne
push
xchg
pop
aam
pop
inc
sub
mov
cmp
and
inc
and
sub
jb
sbb
mov
pop
pusha
mov
xor
movsl
push
test
mov
stc
lahf
and
add
sbb
mov
mov
mov
add
dec
imul
loope
rclb
lahf
rorl
inc
adc
xchg
or
cmpsb
xor
push
cmp
lea
jne
push
mov
cld
push
xchg
mov
jl
cmpsb
mov
mov
jecxz
mov
test
rclb
loop
hlt
push
insl
mov
or
cli
pop
movl
or
notl
sbb
or
pop
movl
aam
ss
jb
jmp
cmp
mov
add
pop
add
dec
loope
adc
mov
mov
shrl
movsb
fs
xor
adc
hlt
xchg
out
movl
mov
shl
pop
ja
adc
inc
rcr
fbld
test
cmp
jb
or
add
ret
ss
push
add
or
or
xor
and
mov
lahf
sbb
clc
pop
ja
and
mov
or
push
mov
jne
jo
mov
enter
cmp
fcmovbe
jmp
xlat
in
dec
mov
jecxz
sbb
fistps
fadd
mov
enter
mov
and
push
aad
outsb
xor
cs
das
je
or
loopw
test
je
out
ret
or
jne
mov
inc
je
mov
lea
mov
cs
sahf
inc
int
negb
dec
dec
cmp
or
ret
cmp
jns
test
mov
or
inc
cmp
jbe
lea
lea
mov
add
pop
sub
inc
jmp
inc
and
icebp
add
arpl
roll
add
sbb
lock
and
sub
cmp
mov
and
sbb
aam
adc
icebp
iret
push
mov
mov
cmp
pusha
jo
sbb
mov
pop
inc
pop
push
mov
and
mov
ds
sub
cmp
adc
cmp
sbb
mov
negl
test
xorl
adc
xchg
sub
movsb
cmp
imul
xchg
les
ja
inc
cli
popa
and
mov
cmp
jne
addr16
push
jge
or
mov
and
adc
inc
push
or
push
xchg
lock
fs
mov
cli
and
add
insb
loopne
adc
push
outsb
cli
inc
cmp
jb
cmp
ja
pushw
shlb
cld
aaa
out
pushl
jmp
cmp
jb
cmp
ja
and
ljmp
cmp
int
insb
push
xor
add
cmp
fsts
or
xchg
mov
mov
outsl
mov
add
mov
lods
mov
aas
xchg
notl
inc
add
jmp
outsb
mov
or
jne
lcall
leave
add
mov
je
add
aam
xchg
stos
jne
ret
push
test
mov
and
inc
imul
scas
incl
jae
mov
jmp
push
pusha
aas
and
loope
adc
jo
jne
adc
dec
test
lea
push
mov
cld
or
insb
and
xor
leave
jne
jmp
xchg
lret
cmp
or
dec
adc
add
adc
and
gs
adc
je
test
jne
into
clc
adc
shrl
jb
xor
dec
dec
push
sub
cmp
and
fisttps
add
add
inc
ss
testb
rcll
setno
movb
jnp
and
push
inc
and
and
and
cmp
and
mov
lods
out
dec
negl
adc
push
jae
add
outsl
aam
pop
jbe
push
pop
mov
fdivs
ret
lahf
or
mov
mov
repnz
push
aad
and
cli
pusha
sub
mov
xor
adc
aam
ret
and
push
pushf
ret
es
shrb
mov
pop
add
mov
mov
push
jbe
sahf
add
cmpb
xchg
or
sbb
xchg
shll
test
scas
sbb
mov
pop
add
repz
add
cwtl
cmp
mov
adc
mull
push
das
mov
or
mov
mov
fimull
mov
push
cmp
inc
and
cmpsl
inc
pop
cmp
inc
fistl
cmp
dec
out
add
jg
test
xorl
mov
sub
lea
cmp
aam
test
xor
das
sbb
fimuls
and
add
adc
cmc
or
xchg
out
xchg
adc
das
je
cmp
je
xchg
jae
jecxz
add
je
sub
es
das
fwait
pop
mov
or
inc
and
mov
nop
mov
int3
inc
cld
mov
dec
mov
les
push
push
jno
mov
fisubrl
sbb
je
add
cmp
jmp
lock
addl
in
in
or
mov
ja
hlt
pop
leave
outsb
daa
pushf
or
pop
mov
push
adc
sub
test
cmp
je
push
rcl
mov
jo
add
add
iret
repz
push
adc
and
push
pop
jge
push
sbb
mov
inc
push
xor
xor
mov
push
adc
jb
ljmp
mov
inc
cmp
jb
mov
movl
jb
mov
add
jbe
pop
pop
stos
out
inc
clc
pushf
cmp
je
lea
mov
add
mov
dec
mov
mov
into
repnz
mov
clc
push
push
lahf
mov
test
stos
mov
add
popf
pop
mov
fsub
mov
jb
mov
lea
inc
int
sub
outsl
in
nop
mov
adc
sti
push
push
les
lods
jge
cmp
jg
cmp
sahf
and
lds
fadds
hlt
sahf
cs
inc
push
push
lea
inc
xchg
mov
popf
pop
lahf
addl
push
xchg
xchg
inc
movsl
xor
mov
inc
jb
mov
inc
es
mov
xchg
jne
fstl
sbb
jle
lea
or
xchg
or
xchg
stos
loopne
out
inc
jg
inc
enter
and
popa
and
jb
es
add
jne
add
ret
xor
sbb
popa
fmuls
testl
add
inc
inc
leave
xchg
cmp
sub
push
lahf
and
mov
push
adc
in
inc
inc
dec
cld
sub
rolb
jge
cwtl
mov
mov
xor
mov
mov
xor
pop
sub
cmpsb
pop
out
stos
pop
cmp
cwtl
cmp
out
gs
loop
test
and
rol
inc
sbb
cli
jne
mov
sti
cmpsb
mov
add
fstl
cmp
jne
or
iretw
cmpsb
add
mov
call
inc
mov
cmp
cmp
add
mov
cmp
add
jns
jmp
push
shlb
xor
and
add
inc
je
ficoml
cmp
divb
add
inc
inc
jne
or
xorb
dec
jne
cmp
mov
lds
adc
andl
sbb
inc
xor
xor
or
out
ljmp
xor
leave
and
jmp
sub
jnp
jle
push
xchg
shll
push
das
clc
stos
cmpsb
sti
mov
stos
insb
push
push
lret
nop
xchg
push
jb
inc
adc
mov
jl
mov
jmp
lock
cmp
je
cmpb
mov
pop
jne
pusha
sbb
adc
gs
cmp
cmpl
inc
inc
inc
inc
adc
sbb
push
icebp
shl
mov
push
test
jecxz
les
xchg
scas
call
ret
sahf
add
xchg
mov
add
mov
xor
clc
mov
jae
cmp
or
out
bound
inc
lret
inc
mov
int
lock
test
mov
sarl
and
mov
rorb
xchg
jecxz
push
xchg
and
in
cmp
imul
mov
cli
and
in
lret
clc
add
cmp
and
push
pop
or
cmp
lcall
push
outsb
mov
je
or
je
push
pop
jne
shlb
sbb
rorb
pop
not
adc
sub
xchg
dec
adc
shrb
movl
xor
out
mov
or
xor
cmp
or
xchg
jno
mov
rcrb
sub
lea
cmpl
cmp
xor
mov
out
repnz
cmp
mov
mov
xchg
jb
push
loop
inc
cmp
jae
or
push
mov
pop
xchg
sub
mov
lret
lds
jb
pop
fiaddl
xor
cmp
xchg
lret
in
cmp
hlt
je
call
adc
jmp
and
loopne
jmp
push
cmp
pop
adc
in
sub
lock
or
push
jge
add
test
mov
fldt
outsb
das
and
imul
pop
pop
mov
inc
inc
jnp
cld
sub
sub
popf
pop
push
push
push
lock
pop
addr16
push
or
inc
inc
or
add
sbb
bound
gs
lahf
loop
and
enter
test
or
push
adc
push
nop
or
xor
mov
push
push
cmp
dec
sub
adc
xor
pop
or
in
push
inc
or
fisttps
test
sub
dec
cmp
fists
ss
add
mov
add
data16
pop
cmpsl
pop
rcll
push
jb
adc
mov
and
movsl
in
call
xlat
xor
sbb
or
push
testb
pop
cmp
scas
cs
xchg
inc
inc
orl
orb
dec
xor
test
ds
sub
scas
out
mov
or
les
push
dec
dec
ljmp
add
mov
cmpb
push
je
mov
or
leave
cmp
and
hlt
pushf
or
mov
ret
cmp
inc
dec
data16
push
pop
or
cmpl
dec
add
jne
push
nop
les
xor
adc
loop
mov
lds
dec
sbb
imul
pop
inc
out
push
fistpll
sub
jle
js
adc
or
push
stos
xor
pushf
push
mov
test
addl
dec
mov
cmp
add
mov
cld
les
loop
ret
sub
sub
clc
sub
insl
push
dec
inc
jno
or
jb
js
pusha
shl
mov
sub
add
cltd
cltd
mov
cmp
ljmp
into
fimull
and
pop
jg
sarl
jbe
adc
push
lea
push
popf
and
loopne
sbb
sbb
hlt
push
xchg
pop
dec
pusha
ljmp
xchg
or
stos
pop
push
data16
adc
or
mov
ret
lret
data16
add
adc
js
gs
rcrl
sbb
loopne
sub
push
fidivl
fstp
jo
add
and
adc
add
out
jne
xor
roll
xchg
adc
and
in
mov
sbb
movsl
add
xchg
mov
jecxz
int3
inc
mov
in
add
addb
jne
jl
test
pop
xor
or
or
jno
xchg
imul
pop
popa
push
pusha
fisubrl
test
dec
sbb
xlat
mov
div
push
inc
push
push
adc
test
jnp,pt
mov
pop
add
and
push
fsubrl
lods
push
insb
cli
and
pop
ret
xor
sbb
add
cli
sub
frstor
leave
mov
sub
push
cmp
fldt
aad
push
push
lret
call
xor
shlb
push
adc
dec
sbb
lcall
cmp
nop
add
mov
ret
ljmp
xchg
clc
adc
sbb
repz
push
xor
adcb
sti
and
mov
or
jg
dec
adc
in
push
sbb
mov
mov
mov
rolb
and
mov
push
jg
push
and
mov
loopne
or
mov
adc
and
xchg
cs
mov
pop
repz
outsl
or
push
jecxz
mov
and
testb
repnz
sbb
pop
pop
jns
push
out
icebp
xor
xor
test
mov
test
rcr
pop
sub
fdivl
jb
push
ret
rcll
aam
mov
pop
add
inc
inc
jnp
pop
fsubs
in
sbb
push
insl
or
or
hlt
in
std
ret
add
ret
cmp
and
jle,pn
mov
dec
inc
fdivl
lods
pop
lods
jg
inc
js
imul
sahf
hlt
sbb
rcrb
xchg
pop
bound
dec
ror
jmp
lods
and
test
push
jae
and
mov
sbb
pop
clc
push
push
add
cmp
pop
pop
inc
jecxz
in
clc
or
out
mov
sub
push
add
jecxz
lds
dec
mov
push
and
rol
mov
mov
jae
clc
sbb
pop
loopne
mov
mov
test
mov
or
jg
xor
push
and
mov
cld
sbb
mov
inc
cmpsb
adc
mov
inc
push
jle
and
xor
fisubs
dec
adc
sbb
and
call
ljmp
iret
sbb
jmp
pushf
or
add
ret
clc
or
cld
lods
mov
inc
ja
mov
add
mov
xor
jecxz
xchg
add
dec
in
addr16
add
enter
pop
cmp
mov
push
aam
sarl
or
jl
inc
cmp
lock
clc
stos
nop
shlb
pop
add
and
je
add
daa
icebp
lock
push
push
or
sub
outsb
das
or
ds
adc
pop
jp
adc
push
push
shlb
dec
xchg
aas
mov
inc
jae
add
mov
scas
mov
dec
into
arpl
or
pop
andl
mov
xor
rolb
jl
dec
sbb
lods
jp
jl
inc
pop
sub
cmp
scas
xchg
out
xor
inc
mov
testl
and
adc
mov
loope
adc
xor
or
jb
or
xor
inc
daa
icebp
sbbb
lods
sbb
mov
and
adc
dec
ds
or
aaa
mov
mov
xor
mov
insb
sahf
in
dec
mov
fnstenv
mov
popf
add
push
iret
insb
pop
mov
je
and
sbb
adc
xor
ret
movsl
or
mov
neg
add
fs
aam
push
addr16
jbe
sbb
dec
or
mov
and
fs
sbb
fldl
or
sete
mov
cmpsl
repnz
xor
movsb
lock
lock
pusha
fsubl
xor
push
add
jnp
ficoms
pop
pushf
mov
dec
subb
mov
cltd
jle
pop
push
roll
std
ljmp
mov
mov
je
add
cmc
fwait
ja
mov
sub
or
movsb
dec
lods
pop
pop
push
into
mov
int3
pushf
out
in
cmp
pushf
clc
add
pushf
add
jbe
jnp
push
and
leave
addl
or
pop
outsl
loope
add
fmull
or
adc
pop
push
push
nop
and
xchg
fs
or
movsl
shlb
cmp
inc
push
xor
xor
stos
pop
push
and
mov
add
mov
adc
sub
push
into
push
adc
push
dec
adc
daa
cmp
xor
xchg
dec
sub
dec
pop
je
dec
inc
sbb
mov
lods
test
popf
lahf
xor
sub
jp
dec
arpl
sbb
inc
faddl
adc
imul
cld
inc
pop
js
pushf
push
pop
xchg
add
sbb
ret
add
movsb
lea
pop
xor
add
dec
add
push
mov
pusha
cmp
xchg
ss
negb
mov
roll
push
lods
sbb
sbb
repz
jo
cmpsl
and
sbb
arpl
nop
stos
rcrl
sbb
and
cmp
dec
mov
or
ljmp
xchg
xor
sbb
sbb
fmul
leave
mov
mov
jns
leave
dec
push
fs
sbb
xchg
fcoml
push
sbb
repnz
xor
pusha
push
xchg
aad
jb
and
jae
cmp
cli
or
shl
incl
mov
aaa
addl
sub
and
adc
sbb
sub
dec
das
push
shll
mov
jmp
push
cmp
and
in
jno
repnz
rcr
cmp
adc
inc
mov
pushf
or
xchg
adc
dec
cmp
mov
mov
rorb
fisttps
mov
add
mov
add
and
jnp
xor
mov
hlt
clc
aam
mov
lds
inc
push
cmp
mov
dec
jo
xor
into
xor
add
jmp
repz
in
pushf
xor
cmp
pop
sete
or
adc
fnstsw
pop
ljmp
out
xor
andb
jns
mov
xor
cmp
cli
sub
cli
add
cld
xchg
mov
adc
aaa
and
xchg
pop
or
ja
xor
rcll
mov
mov
sbb
leave
daa
sub
and
sub
mov
pop
lea
sub
and
sub
add
out
jnp
pop
leave
sub
stc
out
add
inc
sub
mov
mov
dec
jmp
sub
and
loopne
jno
jo
sub
push
mov
arpl
add
sbb
lahf
xchg
jne
test
dec
sbb
sub
push
pop
jne
mov
dec
pop
dec
in
mov
ja
test
lock
add
and
add
in
xchg
setl
sub
sbb
mov
mov
push
pop
inc
ja
ja
sub
sbbl
movsb
xor
sbb
aaa
mov
aad
mov
sbb
insb
and
mov
in
sub
ja
adcb
sbb
sbb
cmp
xor
mov
scas
dec
imull
pop
test
add
sub
js
cmc
fcmovnu
mov
push
adc
add
sbb
pusha
ret
js
or
and
sbb
fdivl
ss
lds
pusha
inc
dec
add
mov
iret
mul
add
pushf
dec
pop
add
or
dec
cmp
or
jecxz
adc
dec
mov
adc
andb
mov
add
add
aaa
dec
or
outsl
sbb
fnstenv
sbb
mov
push
adcb
mov
mov
push
and
inc
adc
adc
loope
es
pop
dec
sbb
mov
inc
shl
add
lea
ss
roll
or
cmpsl
adc
dec
testb
mov
cmpl
imull
loopne
sbb
pop
cmp
or
adc
out
add
mov
push
and
and
add
dec
xor
and
push
pop
or
mov
fstpl
dec
test
push
test
mov
pop
xor
daa
cmp
test
mov
or
xchg
popf
dec
or
and
inc
or
test
mov
mov
es
imul
and
mov
mov
negl
ss
xor
and
pop
inc
dec
mov
or
fidivrs
add
inc
add
pop
mov
mov
pusha
cmp
add
cltd
imul
fwait
clc
insb
mov
cmp
push
xor
test
pop
push
xorb
mov
cmp
fadds
add
jns
in
in
rolb
push
and
or
add
add
sbb
push
outsl
mov
andl
xchg
subb
mov
add
push
lods
pop
ljmp
imul
or
add
repnz
mov
adc
pop
push
nop
sub
push
pop
dec
adc
pop
push
scas
lods
movsl
hlt
pop
xchg
inc
adc
or
sti
loopne
xor
or
mov
push
clc
loopne
push
pop
arpl
loop
repnz
nop
das
nop
mov
arpl
mov
sub
ret
data16
sub
or
push
lea
cmp
rorb
clc
jge
xor
and
sub
js
dec
cmp
loope
jnp
lea
jl
pusha
push
xchg
pop
faddl
mov
add
shrb
lock
push
jmp
sub
push
push
stc
stos
pop
cmp
xchg
or
or
push
aad
xchg
and
push
sub
xor
mov
sbb
sbb
dec
or
jns
and
fisubs
scas
shlb
in
dec
inc
pop
lret
and
mov
pop
jne
inc
mov
or
fldl
out
inc
sahf
pop
sub
and
push
dec
push
inc
mov
roll
popa
fldt
adc
push
adc
jbe
add
pop
cltd
push
icebp
mov
stc
mov
pop
pushf
out
pop
stos
add
push
jmp
sahf
add
dec
sahf
mov
sahf
mov
and
jp
stos
fs
ja
dec
call
push
js
xchg
cmp
and
arpl
mov
or
jae
or
data16
lcall
or
andl
fisttpll
add
mov
or
ss
loopne
fdivrl
xor
adc
in
xor
and
sbb
jg
fs
add
jp
push
cltd
pop
xor
inc
jne
cs
add
push
inc
or
adcb
scas
call
outsl
movsl
aaa
dec
lea
lds
movsl
into
cmpsl
or
xor
push
add
stos
mov
xor
mov
or
adc
xor
dec
and
mov
lahf
dec
cmpsb
movsb
or
push
push
shlb
jmp
adc
test
ret
aad
push
mov
mov
hlt
sbb
dec
lock
inc
add
lock
inc
pop
dec
insl
mov
add
mov
or
and
mov
cmp
xchg
sbb
pop
mov
push
mov
push
add
xor
sbb
push
das
mov
fwait
mov
jo
xchg
andb
and
add
decl
jno
je
or
push
lea
inc
scas
add
rcrl
add
cld
cmpl
inc
out
adc
addr16
xchg
xor
rcr
sbb
mov
fucomi
mov
lea
mov
aam
jb
call
adc
loopne
or
jge
adcl
decb
pusha
and
call
pop
inc
and
sbb
stos
sub
adc
jno
or
cmp
testb
push
mov
ret
or
pop
push
or
or
test
cmp
pop
xor
mov
mov
push
stc
and
and
pop
sub
fnstsw
and
sbb
popa
jmp
or
je
xor
int3
xchg
sbb
out
mov
sub
arpl
mov
js
inc
add
mov
repnz
pop
lock
push
inc
loopne
push
std
push
mov
test
add
out
adc
inc
iret
out
sub
sbb
test
adcb
loopne
bound
push
sub
adc
gs
shlb
outsl
and
and
jo
push
or
dec
stos
and
pop
xor
in
jg
adcl
adc
mov
movsb
dec
rolb
call
push
add
inc
cmp
sub
dec
or
lar
aas
xchg
pop
adc
dec
jns
push
movsl
pop
mov
sbb
xor
adc
std
push
mov
shrb
jnp
cmpsb
jnp
cmp
cmp
jb
dec
cmp
aas
cmp
pop
inc
adc
inc
mov
jo
or
sarb
adc
push
push
test
pop
xor
lea
push
adc
mov
lock
in
jecxz
fdivr
xchg
mov
mov
lods
and
or
add
mov
out
push
push
sarb
xor
push
aam
ret
pusha
xor
mov
xor
or
outsl
sbb
cmp
sbb
dec
sub
repnz
movb
dec
mov
mov
pusha
sbbl
es
mov
adcb
test
xchg
stos
or
add
es
ret
fistps
in
rol
push
dec
cmp
aas
movsb
push
xchg
or
faddl
push
and
in
add
pop
ret
stos
jl
pop
push
iret
out
push
jg
add
or
movb
cmp
ret
mov
jg
pop
int
jnp
jp
inc
jg
push
or
and
or
dec
dec
scas
stc
dec
and
and
or
rolb
add
or
mov
das
or
mov
out
or
adc
push
xlat
fimuls
adc
or
dec
loop
dec
xor
pusha
sarl
cmp
hlt
inc
arpl
dec
in
lcall
jmp
ret
add
jmp
daa
mov
clc
rclb
sbb
fldcw
xchg
cmp
xchg
sbb
inc
push
lea
je
push
add
mov
movl
inc
sub
fmull
push
add
pop
mov
les
or
jg
rclb
popl
dec
je
lock
loopne
icebp
lea
cmp
je
cmp
cmp
pop
add
push
sub
adc
add
aas
jo
call
test
test
sbb
loopne
add
mov
jo
pushl
xor
pop
lret
push
xchg
or
in
mov
push
sbb
pop
movsl
es
clc
mov
cmp
push
xlat
mov
mov
add
lret
xor
fisubrs
inc
lock
pop
mov
insl
fiaddl
pop
mov
rorl
cmpsb
inc
push
lods
pop
ret
aaa
loope
cmp
clc
mov
cmp
sar
shll
jbe
and
sbb
xchg
cmp
mov
push
sub
inc
mov
inc
mov
cmp
lret
ss
ret
addb
xor
xchg
lret
pop
or
jge
pop
aas
jb
das
sub
xchg
inc
pop
or
lret
push
pop
add
fsub
mov
enter
add
and
xor
xchg
lea
pop
daa
lea
test
push
push
adc
mov
jge
sub
inc
xchg
sbb
add
dec
roll
sbbl
int3
adc
add
into
jbe
push
or
mov
sbb
test
lcall
and
lock
dec
inc
and
xchg
sub
je
jp
xchg
shrb
pop
xlat
push
xchg
fsts
addr16
jl
mov
push
lcall
xor
and
aaa
in
sbb
cs
push
test
adc
inc
stos
jne
je
les
lock
or
push
mov
lock
or
sub
insb
add
adc
push
inc
push
or
arpl
sub
cmp
pusha
xorl
stc
push
jg
add
and
in
xchg
dec
add
mov
jl
pop
mov
clc
inc
cmp
push
xchg
jne
push
mov
mov
sbbb
or
stos
push
pusha
mov
jbe
pop
test
jge
pop
stos
xchg
adc
and
pop
xchg
pop
enter
jle
cmp
jae
mov
movsl
xchg
add
inc
pop
xchg
push
adc
lret
xchg
jp
push
mov
addl
lods
push
outsb
pushl
rclb
fistps
test
inc
outsb
add
inc
mov
mov
nop
add
js
inc
add
enter
inc
sbb
jge
mov
pop
or
sbb
sub
push
or
mov
inc
inc
inc
cmp
sub
fsubrl
sub
aad
push
add
push
mov
js
out
cmpsl
cmp
or
je
fistl
mov
in
push
jo
sbb
out
ja
pop
add
inc
or
sub
and
and
sub
add
pop
ja
into
jmp
mov
mov
jge
mov
loopne
lahf
aas
or
rol
lock
mov
lods
xor
sub
test
aam
cltd
test
lds
nop
lcall
mov
rcrb
and
imull
sbb
pop
pop
or
xchg
sub
pop
jne
mov
and
xchg
add
addl
sbb
push
les
pop
jbe
mov
push
push
cmp
adc
mov
and
inc
lea
cld
cmpsb
lock
scas
xchg
inc
mov
out
or
adc
push
mov
push
and
dec
xchg
sub
mov
sbb
cmp
xor
xor
test
aas
lea
punpckhwd
mov
leave
cmpb
and
jg
cwtl
dec
xor
pop
pop
fmull
clc
inc
xchg
test
cmp
mov
mov
or
sbb
outsl
daa
loope
jl
mov
sub
or
loope
sti
insl
or
icebp
pop
aas
aad
mov
call
xlat
mov
push
mov
adc
dec
shlb
mov
lea
push
loopne
inc
shlb
xor
dec
movsb
and
pop
bound
in
fnstenv
jle
add
into
push
jp
inc
jbe
fdivrp
dec
in
mov
add
lret
mov
lret
cli
adc
in
cmp
sar
mov
bound
in
addr16
js
sub
cmpl
add
cmp
xchg
dec
insl
inc
hlt
cmpsb
imul
xor
sbb
adc
ss
jo
fwait
mov
fsubrp
pusha
and
or
or
pop
or
or
mov
imul
mov
xchg
dec
jae
jne
mov
aas
movsb
jle
push
push
cmpl
push
mov
je
xor
out
sti
jge
push
pusha
jo
cmp
mov
push
xchg
mov
jmpw
dec
fidivrs
pop
clc
jg
mov
lea
aaa
lea
inc
fcom
js
inc
adc
fsubl
push
fcoms
lret
or
mov
insb
mov
dec
add
add
inc
cmp
imul
outsb
inc
mov
or
and
push
cmpsb
add
xor
stos
out
jmp
mov
dec
popa
xchg
int3
mov
jl
fisubrl
ret
jmp
push
mov
fwait
inc
shlb
setb
or
add
outsb
mov
lcall
xor
std
lds
pop
incl
xchg
add
pop
push
push
dec
in
or
push
test
push
xchg
push
lea
and
cli
adc
int3
rolb
add
add
jl
xchg
adc
aaa
imul
aam
cmp
pop
loop
mov
sbb
mov
inc
rolb
jne
sub
or
jo
push
mov
sbb
jo
scas
push
fiadds
out
incb
mov
or
push
lds
add
inc
lret
loope
lahf
cmc
imul
or
repnz
mov
xor
je
cmp
mov
push
push
testl
or
imul
and
jbe
xor
sub
lahf
sbb
cmp
shll
stos
mov
push
jge
cmpl
rcl
mov
jp
adc
sbb
mov
mov
dec
add
cmp
jo
nop
push
flds
pop
jns
daa
test
jb
int
jp
leave
push
dec
add
add
jl
sub
push
or
xorb
lock
push
shlb
clc
dec
mov
daa
and
popf
popf
add
or
or
iret
aaa
cmpsb
gs
cld
adc
xchg
xchg
jle
adc
int
pop
lret
jae
sti
outsb
sub
inc
inc
adc
fists
and
or
arpl
lock
adc
jb,pt
mov
lock
or
and
ds
dec
sub
push
add
lock
movsb
or
push
sarb
sar
inc
lea
lea
push
push
cs
test
adc
jp
jp
sbb
pushf
bound
inc
push
inc
stos
and
push
into
mov
and
pop
or
pusha
cmp
mov
mov
rorl
add
jl
repnz
cmp
imul
xlat
jb
sahf
roll
int
aaa
dec
iret
sarb
cmp
jne
scas
xchg
xchg
ljmp
gs
add
lods
mov
jp
dec
mov
lds
mov
cmp
and
and
cmovo
add
add
jg
test
pop
fdivrl
lcall
lahf
js
jge
je
cmc
xchg
roll
je
mov
les
movsb
mov
sarl
adc
jl
mov
xor
mov
add
in
int3
dec
add
pop
jo
lea
mov
out
jle
or
orl
cld
mov
lea
mov
mov
add
pop
rcll
js
shll
adc
repnz
jmp
inc
cld
jne
dec
rorb
cmpsl
out
push
sub
add
add
les
mov
mov
sbb
aaa
fcoml
inc
or
adc
dec
icebp
adc
or
lret
cmpsb
adc
inc
mov
xlat
nop
sbb
inc
xor
add
jl
lods
mov
shll
mov
adc
fiadds
hlt
adc
add
test
sbb
pop
sbb
es
xor
addr16
loop
jg
int3
jmp
test
cmp
cmp
loopne
xchg
ljmp
xor
push
push
les
je
hlt
add
lock
or
jl
add
jno
in
lods
mov
or
sbb
and
insb
sbb
push
sub
inc
loope
and
cmp
cwtl
imul
sub
push
test
push
int
rol
jbe
jmp
push
mov
ret
dec
ja
outsb
push
xchg
cmpl
fistpll
les
mov
fidivrs
loopne
cmp
xor
xor
scas
adc
pop
mov
loop
sbb
mov
rcll
aam
jae
jp
mov
cmpsl
pop
jg
or
or
xchg
cmp
cmpsb
es
adc
int3
lea
add
mov
aaa
lret
and
enter
and
mov
xor
js
push
dec
lcall
push
push
mov
pop
test
test
jmp
inc
in
je
xor
add
and
push
ficoml
clc
jmp
pop
mov
add
inc
in
fsubrl
in
bswap
lret
pop
mov
in
adc
stos
push
jno
in
mov
mov
cmp
ret
and
jge
dec
in
and
ds
aam
jp
jecxz
fdivrs
idivb
adc
inc
lea
test
das
ljmp
pop
call
loop
sub
sub
int3
rolb
xor
push
loopne
int3
lock
ss
insl
addl
xchg
inc
jmp
or
cmpb
ret
std
adc
push
lcall
push
or
scas
and
fcmovbe
inc
add
add
mov
cmpsl
mov
clc
push
add
mov
jnp
push
sub
mov
fs
sub
add
dec
fcompl
adc
lods
push
repz
shll
call
adc
ret
mov
or
inc
stos
push
jae
scas
lock
push
fidivrs
cmp
pop
and
imul
negb
mov
adc
mov
shl
add
mov
add
mov
dec
dec
or
ret
pop
jo
pop
add
cmp
or
push
cwtl
push
mov
mov
sub
scas
popa
enter
mov
loop
nop
shl
or
push
das
nop
jns
pop
stos
cmp
and
sahf
pop
push
mov
je
scas
or
push
push
jmp
or
push
mov
imul
sbb
pop
cmp
push
incl
sub
dec
or
dec
pop
clc
sub
mov
aas
icebp
inc
sbb
adc
lsl
lcall
daa
xchg
sbb
lahf
pop
ret
movntps
pop
ret
lock
xor
shl
xchg
cs
jbe
mov
faddl
shlb
dec
lds
and
push
xor
test
loop
jmp
sbb
or
inc
ror
sarb
xchg
push
push
push
pop
fdivs
sarb
mov
mov
xchg
or
sbb
sbb
mov
sub
inc
jge
pushf
push
ret
mov
enter
fsubl
sbb
jg
ret
loope
or
adc
jle
jmp
inc
ret
fs
inc
push
push
aas
cmp
cmp
outsb
cmp
imul
or
inc
cmp
shlb
push
push
sbb
fldl
cmp
dec
pushf
jnp
sub
adc
inc
cmp
inc
push
std
add
sti
jmp
das
sub
lea
movl
sub
aas
pop
das
lret
lea
jno
mov
push
and
jnp
test
inc
mov
push
adc
mov
cmpl
xor
xor
fucom
sar
es
iret
jbe
mov
call
jp
adc
jbe
push
daa
cmp
pop
cli
cli
jge
aad
cld
movsb
and
sub
cwtl
xor
repz
rolb
out
add
xchg
out
sub
int
sbbl
dec
pop
dec
add
in
lea
add
push
fdivs
movsl
pop
push
xor
mov
sbb
xor
pop
ret
pop
ss
xor
loop
push
mov
and
jb
and
cwtl
pop
sbb
pop
test
fwait
adc
mov
es
mov
aas
add
xchg
and
jecxz
icebp
pop
js
sub
jge
adc
xchg
cli
lock
test
sbb
and
add
add
push
cmp
and
adc
dec
stc
cmpsb
inc
cwtl
sbb
enter
jmp
xchg
jge
cmp
je
or
stc
push
push
loopne
jmp
lea
fdivr
cmpsb
and
pop
in
inc
hlt
push
push
shll
inc
push
jbe
mov
inc
or
mov
es
cwtl
cld
ss
sahf
mov
hlt
adc
sti
jp
lahf
sarb
sbb
and
adcb
push
cmp
xchg
lds
inc
push
cwtl
xchg
and
jne
sub
outsl
cmp
mov
test
sub
hlt
inc
lock
sbb
cld
adc
rcrb
pop
pop
mov
pop
dec
std
sbb
xchg
es
dec
inc
or
inc
cmp
inc
add
sbb
pop
mov
xor
pop
mov
js
pop
add
js
dec
mov
inc
test
xor
filds
add
mov
pop
pop
push
aad
rclb
jp
xchg
add
dec
and
or
subb
imul
aam
fiaddl
mov
cmp
adc
pusha
mov
cmp
icebp
es
dec
and
cwtl
inc
xchg
cmp
imulb
outsl
mov
imul
push
xor
imul
sahf
xchg
adcb
inc
adc
in
testl
mov
mov
mov
out
mov
xchg
mov
push
daa
sub
ss
mov
je
jns
insl
sub
adc
push
cli
inc
push
loopne
scas
push
cmc
aad
cmp
jne
push
hlt
mov
adc
and
cmp
lret
je
inc
add
add
jne
mov
sub
dec
mov
data16
lock
xor
sbb
push
and
pop
daa
xchg
xchg
fldenv
sub
leave
dec
sbb
push
xchg
jbe
pop
and
xorb
sti
add
rorl
add
out
jae
js
sti
push
xor
js
cmp
jae
add
add
std
pop
jle
loope
add
ljmp
add
push
adc
call
ret
adc
adc
xchg
xor
decb
mov
cli
push
imulb
test
loop
or
push
mov
or
and
mov
daa
adc
gs
jp
fisubl
adc
push
or
sbb
inc
xlat
and
xchg
mov
enter
cmpl
push
jle
out
push
adc
jne
push
mov
addr16
je
data16
and
scas
jo
dec
mov
ja
loope
std
mov
mov
mov
xchg
xchg
adc
mov
mov
xor
or
lret
in
inc
cmp
test
punpckhbw
stos
push
mov
push
roll
mov
lea
add
js
sbb
mov
mov
cmp
mov
dec
jbe
xchg
dec
inc
rolb
inc
adc
dec
enter
icebp
cvtps2pi
and
call
inc
loopne
and
pop
sarb
adc
mov
or
popf
sub
pop
ret
lea
fisttps
pop
add
lods
or
sbb
arpl
pop
icebp
mov
int
and
xor
jbe
adc
add
add
or
xchg
mov
das
in
in
loope
pop
mov
jne
add
jecxz
mov
loopne
fcmovu
sbb
push
insl
fldt
push
mull
lea
add
add
or
call
xchg
loope
popw
pop
push
and
push
push
inc
loopne
and
lods
aam
or
dec
cmpl
sbbl
lods
daa
clc
int
dec
popf
bound
cmp
jle
adc
xchg
mov
pushf
shr
call
inc
dec
jne
cmp
aam
ret
rcrl
dec
sub
jo
in
push
add
sub
or
fmul
repz
loop
mov
sti
cs
repnz
push
jne
popa
sub
add
sbb
nop
outsl
inc
dec
cs
push
addb
or
sbb
add
lock
jae
into
mov
add
sub
sub
cmp
pop
lods
dec
sub
test
xchg
jne
shrl
fwait
push
or
xor
xorl
dec
aad
rolb
xor
dec
and
or
fs
mov
into
or
bound
add
cmp
jl
xchg
sarb
insb
pop
xor
jb
js
pop
bound
lret
mov
mov
out
adc
jg
fstpt
and
fadds
inc
lock
flds
flds
cmp
insb
pusha
rcrl
or
lret
mov
leave
fldcw
jl
jnp
sti
ja
push
sbb
sub
fmuls
push
push
dec
dec
jnp
stc
or
inc
sbb
adc
adc
aaa
add
add
sbbb
test
lret
repnz
clc
mov
lret
or
pop
fwait
sbb
adc
sbbl
fstpt
in
xchg
fnstsw
mov
es
push
jns
test
into
je
jge
xchg
push
push
inc
push
into
push
mov
pop
sbbb
xchg
stc
jbe
dec
inc
push
sbb
fildl
pop
ret
stos
cld
lock
test
and
je
call
push
push
add
sbb
shlb
add
xor
test
mov
mov
sub
add
push
outsl
aam
inc
sbb
lahf
sbb
mov
pop
dec
lahf
add
ret
mov
into
mov
push
fisttpl
test
sbb
cmpsb
adc
mov
xor
inc
ret
sbb
mov
ja
adc
scas
inc
adc
or
adc
sti
add
mov
xor
push
lea
sub
or
ret
jmp
jl
pop
decb
enter
or
es
sbb
lret
cmp
orl
mov
xchg
add
dec
cli
jg
push
lea
cmp
ja
lahf
xchg
mov
mov
or
inc
es
ds
iret
xor
pop
ljmp
mov
mov
ret
push
cmp
add
lock
or
cwtl
xchg
arpl
push
xchg
test
fists
int3
push
mov
inc
pusha
inc
cmp
push
cmc
adc
std
push
mov
push
xor
sub
add
loop
shlb
and
cwtl
pop
arpl
add
adc
sub
and
jne
in
dec
adc
push
movsb
lret
push
and
inc
sbb
add
js
outsl
repz
jecxz
xor
fcmove
mov
push
mov
push
movzbl
sbb
add
inc
cmp
inc
jb
jae
push
push
je
mov
dec
push
mov
xor
push
rolb
or
addr16
cmp
aaa
adc
pop
mov
and
sahf
repnz
cmpb
ljmp
jb
sbb
inc
outsb
loop
xchg
and
jg
pop
push
push
stc
test
sub
jns
movsl
imul
push
test
ret
or
add
push
cmp
add
je
inc
inc
shll
pop
xchg
jp
jns
js
sbb
dec
fsubl
xorl
sarb
mov
push
pop
add
leave
sti
js
sub
inc
push
xor
mov
dec
dec
sub
popf
aam
out
fistps
add
mov
mov
loopne
mov
fmuls
icebp
jmp
mov
iret
or
arpl
lods
xlat
decl
inc
notl
add
lea
xor
mov
mov
jmp
out
add
xchg
shl
int
arpl
dec
inc
jae
xchg
mov
adc
and
push
sbb
add
push
ffree
test
push
sbb
aas
dec
cmovle
jae
add
lea
push
xchg
mov
sbb
and
mov
aam
adc
sbb
jge
mov
int3
inc
pop
dec
jo
sbb
sbb
cmp
and
xor
lea
loopne
pop
pusha
cmp
mov
sub
pause
dec
cmp
adc
pop
pop
push
push
push
call
loopne
xor
test
pop
int
or
sarb
cmp
sub
adc
popf
adc
aaa
loopne
jmp
js
pop
loope
pusha
addl
loope
adc
in
push
cld
cmp
jge
mov
xchg
sub
mov
cwtl
movsb
mov
fadds
jo
cmp
sub
shrb
sbb
fistpll
or
sub
sbb
dec
xchg
pop
pop
and
add
mov
cmpb
jo
aad
pusha
inc
enter
xchg
cmp
mov
aam
jle
push
xchg
inc
imul
js
dec
sub
daa
push
push
jl
nop
call
ds
push
std
lods
or
adc
jg
inc
xor
sbb
push
jns
push
test
push
jne
mov
in
jae
cmp
test
adcb
cmp
xchg
mov
mov
andl
popf
daa
push
inc
xchg
orl
je
and
movsl
xchg
adc
add
gs
xor
jae
in
adc
inc
add
in
pusha
insb
jb
add
lret
sbb
push
movsb
lea
push
ret
xor
mov
imul
push
inc
jecxz
add
jmp
or
mov
dec
lds
loope
out
mov
push
sahf
cs
sbb
push
mov
adcl
sub
inc
pop
sbb
jle
rcrb
push
mov
push
je
jne
rclb
inc
decl
in
mov
xchg
cwtl
mov
jmp
fsubrs
std
add
rcll
push
cld
and
cmc
lods
sbb
fcoml
inc
pop
mov
sub
xchg
or
xor
pop
dec
dec
cmp
out
jb
mov
mov
idivb
fsubrs
rclb
adc
push
ss
out
xchg
push
jl
je
add
shrl
mov
mov
flds
jp
and
les
loopne
or
je
pop
pop
and
stc
jno
xor
and
ss
sbb
addl
repnz
fdivrp
add
add
and
jbe
xor
std
jmp
mov
cmp
sub
push
add
mov
insb
push
cltd
loope
or
test
jmp
sti
sbb
pop
enter
fcmovb
pavgb
jbe
adc
jb
cmp
cmp
push
add
int3
jns
jle
mov
dec
xor
clc
popf
addl
outsb
mov
add
sub
call
scas
fcmovnbe
out
inc
cmp
jae
mov
xor
addl
add
mov
popa
add
inc
inc
nop
outsb
nop
inc
jmp
call
mov
clc
jae
lea
push
cmpb
jne
xchg
out
lock
jne
lds
sti
sarb
lock
ljmp
neg
sbb
sbbl
mul
incb
out
pushf
movsb
stc
jb
sbb
or
cmp
add
test
cmp
jbe
xor
inc
add
adc
inc
pop
sbb
inc
adc
and
cmp
pop
repnz
test
sbb
imul
cmp
aaa
add
and
inc
aad
push
nop
shll
dec
pop
shr
loop
cli
xchg
data16
jmp
xor
or
jmp
or
xor
push
clc
lret
push
ljmp
pop
inc
imul
mov
inc
adc
or
cmp
sarl
mov
pand
pusha
es
sti
push
adc
xor
roll
scas
fcoms
and
imul
adc
sub
jne
adc
adc
add
add
adc
xchg
in
cmpl
sbb
mov
cmp
test
dec
jge
ret
pop
movsl
push
inc
loopne
pop
add
sbb
fsub
mov
pop
push
xlat
or
push
lea
mov
jne
stos
mov
xor
push
pop
arpl
dec
jg
pop
aaa
push
int3
jmp
or
mov
sahf
xchg
xchg
and
bnd
mov
test
je
addr16
cmp
inc
jb
push
jae
mov
add
sub
sbb
pop
push
daa
mov
pop
push
std
std
mov
ja
insb
push
lea
sbb
test
in
ret
lahf
add
hlt
testb
xchg
cmpsl
stc
pop
leave
or
adc
adc
sbb
adc
cltd
jo
add
or
add
fcmovne
cwtl
lock
je
outsb
inc
mull
add
hlt
push
and
lock
sub
cmp
enter
mov
push
mov
test
push
lock
add
cmc
add
ljmp
mov
xchg
pop
push
lea
mov
mov
scas
push
sub
xchg
aad
push
loopne
push
mov
mov
inc
in
sti
test
cs
lea
sub
stc
inc
push
loop
sub
cmp
and
lea
jnp
fldl
jge
mov
push
andb
mov
lea
push
push
addl
xor
call
sti
sbb
cs
push
pop
add
adc
adc
push
push
loopne
jns
add
jmp
add
je
pop
test
pop
insl
mov
inc
jge
mov
aas
pop
imul
xchg
push
pop
push
cmpb
ja
pop
ret
inc
ret
add
mov
sub
shrl
push
loopne
jno
lret
hlt
jmp
or
mov
push
lahf
fdivrs
insb
jmp
iret
lea
push
aas
filds
or
pop
jno
jo
mov
or
sub
add
xchg
dec
ja
rcrb
push
cld
adc
fmul
cs
adc
xchg
in
or
test
rorb
push
ret
dec
xchg
xor
shll
les
and
movsb
je
sbbl
pop
jae
xchg
shlb
cmp
ja
cmp
sar
push
mov
or
or
jae
loope
push
ljmp
lahf
adc
shlb
cmp
in
mov
xchg
inc
movsl
pop
and
cmp
mov
out
daa
push
ds
hlt
adc
jns
adc
inc
add
je
mulb
jbe
mov
xchg
jnp
dec
into
xor
mov
add
pop
push
or
js
adc
mov
xchg
fsubs
daa
sub
push
daa
mov
fmuls
push
ud0
inc
sub
or
adc
int
imul
cmpl
cmpb
xchg
xchg
sbb
jecxz
jle
cli
push
or
cmpsl
add
push
into
call
outsl
or
push
test
mov
es
inc
mov
push
and
aad
inc
mov
hlt
and
add
shlb
add
push
mov
or
inc
push
or
mov
push
cmp
call
cmpsb
push
ljmp
mov
scas
inc
mov
pop
and
add
pop
pop
or
add
into
or
xlat
arpl
ret
faddp
pop
push
inc
push
add
or
sbb
leave
pop
xor
out
pop
shll
dec
mov
rorb
je
mov
daa
loop
or
insb
or
pop
clc
sbb
adc
fisubrl
js
add
sarl
popa
in
mov
clc
push
or
mov
and
xchg
add
jle
add
inc
and
pushl
mov
loope
gs
mov
xchg
in
cli
add
push
xchg
insb
xor
dec
sub
inc
sub
and
shl
mov
js
ficoms
mov
sub
leave
mov
jmpw
out
mov
unpcklps
xchg
lds
lea
imul
rclb
fs
out
inc
rcll
lods
push
outsb
add
cmp
add
add
test
or
sbb
sbbb
fwait
xor
or
sarb
mov
cli
or
mov
dec
into
or
mov
jae
sub
mov
outsb
dec
or
xchg
dec
lea
push
sbb
test
lret
adc
cwtl
xor
je
cltd
fldl
imul
sub
lods
and
cmp
or
leave
test
pop
je
fucomip
mov
sbb
mov
sbb
aaa
int
xor
cmpsl
pop
push
pop
mov
pop
push
xchg
add
pop
je
push
and
js
aas
add
mov
lods
ja
pop
ficomps
add
movsb
sub
add
ljmp
stos
pop
and
xor
and
sub
lods
pusha
insb
add
or
dec
push
jge
mov
jge
rclb
shlb
sub
push
push
or
push
push
rcrl
popf
inc
mov
mov
cmpsl
xchg
js
add
mov
div
fbstp
jl,pt
push
jg
cmpb
mov
lock
xor
daa
das
cmc
dec
or
or
jns
mov
pop
hlt
popf
stos
mov
and
rorl
addl
or
pop
sub
jno
jecxz
sbb
add
mov
push
in
push
xchg
xor
les
fs
jmp
push
outsb
test
mov
pop
sub
sbb
xchg
test
sbb
push
outsb
mov
sbb
push
aas
adc
xor
popa
mov
fcoml
inc
movsl
cmp
add
lds
pop
and
rcrl
cmp
int
or
test
adc
leave
in
add
adc
or
cmp
xor
stos
or
loope
add
jmp
orb
add
mov
loope
push
lea
out
push
call
adc
and
adc
push
pop
dec
xor
mov
fiaddl
pop
repz
or
rclb
push
dec
enter
mov
lock
push
push
xchg
xchg
add
test
cmp
enter
sbb
imul
sub
sbb
and
out
sbb
incb
pop
push
pop
enter
lock
or
testb
push
adc
movsl
mov
es
ja
sub
movsb
addb
leave
or
sahf
xor
stos
out
add
inc
push
push
cmpb
mov
repnz
push
xor
lods
insb
or
scas
out
pop
push
mov
dec
iret
add
in
cmp
mov
hlt
lods
test
and
sub
dec
cmp
clc
xor
in
sub
orl
sub
leave
enter
or
and
adc
popa
push
add
cmp
lcall
shlb
movsb
leave
shlb
rcrb
xor
inc
and
inc
or
push
lahf
andl
xchg
jle
test
movsb
inc
xchg
or
mov
test
fldl
xor
fwait
popa
and
imul
inc
cli
outsl
mov
cmp
jne
cmpl
pop
add
inc
add
rclb
push
cmpb
loope
or
jecxz
mov
add
fsubl
mov
push
stos
mov
adc
cmc
pop
mov
mov
imul
pop
daa
add
jle
cmp
lock
inc
jmp
mov
fcmovu
repnz
inc
adc
mov
mov
xchg
push
xlat
push
push
sbb
sbb
xchg
cmp
and
arpl
and
jmp
and
js
loopne
ljmp
ja
mov
mov
and
xchg
inc
mov
stos
or
int
outsl
rorl
imul
jmp
mov
imull
mov
iret
push
dec
sub
es
jne
pop
lods
in
jle
adc
js
or
sub
mov
push
pusha
cmovns
push
dec
push
inc
sub
cmp
dec
push
cmp
aam
sbb
push
sub
cmp
adc
mov
mov
adc
xor
push
and
inc
add
sbb
jmp
pusha
orl
xchg
pop
cmp
movl
sbb
adc
pop
add
adc
lock
imul
int
cltd
dec
cs
xchg
mov
adc
add
mov
sarb
mov
add
dec
add
adcl
pusha
add
out
ja
push
in
and
fs
xchg
cmp
into
sbb
jno
xchg
sub
add
push
xchg
add
push
sahf
jbe
cmc
int3
lahf
cmp
faddl
add
mov
aad
xor
and
inc
test
cmp
and
movsl
sub
push
dec
push
or
mov
into
xor
rclb
lahf
xchg
mov
sbb
dec
jbe
pop
dec
push
and
fnstsw
add
fidivrs
cmp
or
sbb
add
sub
pop
inc
push
mov
mov
mov
or
mov
jle
add
cld
ja
inc
js
push
shlb
js
jne
adc
push
subl
popa
xchg
add
mov
out
adc
push
imul
aaa
cmp
lods
or
add
sub
and
and
ret
jb
adc
lods
in
ss
inc
insb
rcll
fwait
inc
cs
daa
push
jns
mov
adc
push
add
daa
adc
add
mov
imul
sbb
test
or
cmp
jno
push
push
sub
xor
cmpsl
mov
inc
push
cltd
adc
sbb
push
adc
and
sbb
in
loopne
ret
mov
mov
sub
sub
popa
and
and
loope
fisubl
sbb
add
loope
add
inc
mov
out
repz
xchg
sbb
adc
mov
sub
inc
add
movsl
dec
sbb
xchg
pop
orl
call
and
jge
push
mov
adc
popf
rol
mov
cmpb
sbb
push
sbb
cld
pop
daa
adc
mov
orb
and
test
and
jo
insl
ss
divl
xchg
lea
add
test
mov
jbe
out
call
push
dec
notl
add
or
cmp
ljmp
and
scas
repz
enter
push
xchg
out
pop
xchg
mov
dec
sarl
mov
test
and
enter
cmp
imul
fildll
loopne
add
and
mov
jmp
imul
aam
push
enter
pusha
test
add
xchg
jne
dec
jmp
fistl
or
push
das
mov
dec
je
push
or
push
add
dec
enter
inc
xor
rcr
mov
andb
sub
add
popf
ret
xor
push
sbb
int3
test
push
adc
adc
imul
mov
xchg
dec
and
xor
push
lsl
adc
jnp
shrl
fmull
push
sub
or
dec
mov
mov
add
inc
stc
xchg
int
and
xor
stc
or
fcoml
mov
adc
shlb
mov
adc
loopne
imul
gs
push
and
int3
mov
jno
and
sbb
mov
sbb
test
es
je
cwtl
adc
nop
pop
push
enter
adc
clc
and
test
je
cmp
pop
mov
shlb
lods
test
ds
dec
rolb
pop
pop
and
xchg
add
fnstenv
and
cmp
jne
cmp
aaa
lea
sbb
pop
add
loop
add
xor
mov
rclb
les
or
pusha
mov
sbb
add
inc
xlat
jae
addr16
lea
sub
push
jl
push
dec
cmp
gs
adc
lcall
push
mov
or
mov
xchg
sahf
jle
xchg
pushf
xor
inc
adc
sbb
fdiv
in
dec
mov
mov
je
nop
add
or
ds
sub
mov
dec
and
inc
bnd
cmp
mov
jmp
sbb
sbb
pop
cmp
add
and
mov
add
adc
mov
xor
stos
mov
dec
cmp
add
shr
jo
sbb
add
push
inc
mov
or
roll
cs
ret
movsl
push
aam
repnz
push
je
push
das
and
cmp
lcall
add
in
out
sub
sbb
jne
imul
sub
loopew
je
sub
test
or
mov
lds
cmp
xor
adc
or
xor
sar
xchg
sub
pop
xor
jmp
leave
shlb
pop
aas
int3
gs
push
push
call
pop
mov
and
add
add
sub
subl
xchg
push
in
push
in
mov
pop
in
loope
test
mov
pop
insb
add
jl
sub
cmp
int3
and
xchg
popa
rolb
call
divl
adc
add
or
dec
loope
mov
mov
faddp
js
sub
sub
sbb
and
in
dec
rorw
js
sahf
add
xlat
and
sbbl
sbb
js
xorl
jmp
in
xchg
sbbb
mov
dec
lea
jbe
pushf
push
sbb
push
dec
push
mov
pop
int3
add
adc
and
and
push
xchg
dec
lcall
test
aas
and
push
test
mov
bswap
aad
push
adc
or
adc
ret
mov
push
sub
sbb
or
pop
sub
inc
das
adc
repnz
aaa
pop
sub
inc
aam
push
mov
popa
xor
mov
xchg
push
out
pop
iret
ja
call
adc
adc
xor
scas
sbb
mov
es
dec
add
adc
xor
mov
dec
and
cmp
dec
add
cltd
jl
push
mov
mov
insl
adc
mov
sbb
sbbb
and
pushf
sub
push
add
mov
inc
or
jne
sbb
mov
stc
jb
sbb
add
cmp
jae
clc
mov
jno
add
or
adc
xor
ja
push
adc
iret
je
sub
sbb
pop
insb
dec
sub
add
pop
sub
jecxz
add
or
je,pn
hlt
outsb
add
das
push
mov
pop
or
xchg
cmovae
add
aad
pop
xchg
jg
jnp
pop
mov
mov
add
mov
sbb
or
cwtl
dec
adc
pop
sbb
lds
pop
or
movb
nop
sub
mov
mov
xchg
cltd
xchg
and
test
add
xor
mov
lods
and
adc
aaa
outsl
or
or
mov
or
add
add
cmp
mov
add
and
sahf
ret
mov
enter
add
add
dec
add
das
iret
inc
sub
lods
insb
pop
loopne
loope
and
mov
add
xor
inc
add
jge
adc
mov
adc
cld
aam
add
push
sahf
cmp
dec
and
sub
dec
insl
jecxz
cmpsl
add
dec
mov
add
add
stos
adcb
mov
icebp
add
mov
add
repz
inc
pop
insl
dec
or
lret
rorb
shrl
dec
loopne
push
icebp
or
cmp
push
adc
jns
rolb
sahf
mov
xor
sbbb
popa
fldl
or
dec
or
push
rolb
add
sbb
adc
xchg
repz
stos
sbb
seto
in
sbb
adc
dec
sahf
or
xchg
jno
aas
in
stos
add
pop
pop
add
sbb
add
aam
xor
or
pop
add
push
pop
addr16
je
or
xlat
jbe
dec
or
fistl
mov
pushf
dec
test
push
pop
movsb
loope
clc
popf
cwtl
imul
insl
lods
filds
fsubrs
lock
cmp
sbb
sub
mov
mov
inc
hlt
adc
fisttpll
out
dec
cs
fcom
negl
or
xchg
mov
add
or
jns
or
fcmove
loope
sbb
add
imul
and
push
add
in
jmp
inc
push
lret
lret
shrb
sbb
xchg
cmp
ret
dec
aas
xor
stc
cmpsl
pop
mov
sbb
ret
nop
and
push
mov
add
mov
push
dec
insb
jo
mov
popl
mov
pop
in
mov
push
sub
inc
push
subl
pop
mov
mov
inc
push
movsl
sub
push
leave
jae
dec
adc
adc
jo
cmp
adc
dec
shll
xchg
bound
inc
shrb
sbb
jecxz
cmp
add
sbb
lcall
mov
dec
fmuls
mov
dec
sbb
data16
ficomps
movsl
sti
adc
push
and
sub
add
dec
cmp
mov
dec
movsb
stc
adcb
inc
inc
in
mov
add
sub
popa
push
xchg
je
add
scas
es
sub
fs
dec
mov
add
push
cltd
mov
test
and
pop
sbb
or
test
add
add
adc
adc
add
inc
sbb
and
and
add
or
xchg
xor
xor
add
add
or
sbb
or
or
inc
push
dec
movsb
xor
test
push
add
and
inc
add
fmull
cmp
and
mov
bound
rcrb
inc
xchg
xchg
xor
int3
nop
and
aam
in
xor
add
mov
or
fsubl
dec
adc
jbe
dec
outsl
sub
pop
aas
inc
pusha
add
orl
pop
mov
mov
push
add
lret
jbe
repnz
push
leave
fstpt
test
out
push
daa
sbb
andl
insl
jbe
sub
mov
push
ret
cmp
sbb
xchg
dec
roll
aam
xchg
xor
pop
rclb
xchg
xor
dec
int3
adc
jae
les
mov
nop
jmp
std
or
push
lea
setne
dec
and
inc
xchg
or
inc
or
data16
or
sub
xchg
cmp
xor
xchg
sub
xchg
data16
and
xchg
data16
add
data16
add
sub
xchg
adc
or
add
add
jl
xor
imul
adc
xchg
xchg
insb
or
sar
add
inc
repnz
add
add
orl
adc
and
ds
rcll
mov
dec
push
stos
push
sbb
sub
jp
adc
inc
jmp
and
or
pop
out
loope
or
mov
and
sbbl
jne
orl
xchg
pop
je
stos
fbstp
shl
stc
cmp
add
push
lret
add
push
ja
lea
xor
ficompl
sbb
pushf
mov
xor
cmp
inc
push
cmp
push
adc
add
or
sub
data16
xor
mov
addr16
add
mov
push
sub
push
mov
push
cmp
push
lret
inc
inc
or
cmpsb
add
pop
call
sub
or
xchg
sub
or
xor
pop
xor
inc
mov
add
mov
mov
jl
dec
sub
sbb
push
mov
jge
push
push
sub
inc
mov
pop
pushf
stos
insb
cmp
jp
and
add
add
and
add
mov
mov
or
sbb
int
iret
fwait
push
mov
test
sub
push
shlb
dec
lods
mov
enter
or
pop
and
pop
lock
push
sub
jns
int3
jl
jne
adc
push
enter
scas
add
pop
push
mov
and
sbb
cmpsb
adc
push
xchg
mov
sub
or
adcl
push
sbb
testl
or
add
sub
adc
clc
add
fsubl
aaa
orl
mov
pop
gs
loope
loop
je
ds
hlt
dec
pop
jbe
add
dec
adc
add
push
and
pop
and
sub
int3
and
es
xchg
adc
mov
dec
lea
push
push
imul
mov
addl
imul
pop
cld
cmc
pushf
xchg
mov
ss
stos
rorb
ljmp
mov
sub
das
dec
inc
sbb
pop
cli
insb
adc
and
inc
xchg
add
or
jo
xchg
in
ret
sbb
mov
dec
test
or
xchg
aas
pop
mov
sub
mov
jnp
adc
test
dec
dec
add
shrb
add
dec
imul
cmpsb
mov
iret
jmp
cmpb
push
xlat
lods
call
adc
push
loopne
loope
or
mov
dec
out
inc
out
dec
in
push
push
sub
adc
inc
in
js
pushf
test
cmpsl
and
mov
fdiv
lret
pop
lea
add
lods
dec
test
rclb
push
sub
fistpl
push
inc
push
dec
and
add
pop
call
jb
lret
add
subl
movsb
xchg
ret
jle
sbb
cmpsl
inc
adc
pop
add
xchg
mov
int3
inc
iret
mov
sbb
notb
mov
addr16
pop
adc
inc
push
pop
lds
mov
or
or
fimull
xor
cmp
and
jne
lea
mov
sub
jo
adc
cmp
fsubr
adc
xchg
and
lahf
orl
pop
aas
inc
dec
pop
in
pop
shrb
add
sbb
mov
inc
sub
add
aas
mov
movsl
in
cmp
sbb
jge
cli
or
or
adc
lsl
jmp
mov
loopne
stos
dec
loope
fs
test
jmp
xchg
add
aad
icebp
adc
inc
mov
clc
push
add
add
push
inc
cmp
lea
addr16
jb
push
mov
insb
xchg
imul
dec
rorb
mov
cmp
subl
jo
push
push
pop
icebp
mov
or
and
push
cmpl
cltd
dec
insb
adcl
push
fsubs
lcall
fisubrs
or
shl
insb
jmp
or
push
test
xchg
add
daa
sub
mov
in
insl
orb
or
daa
adc
push
dec
ud2
pusha
dec
push
leave
add
adc
push
mov
pop
mov
push
bswap
leave
inc
xor
dec
adc
leave
lds
dec
push
leave
lds
lods
nop
add
and
and
and
dec
dec
pop
ljmp
lcall
lret
jp
adc
sbb
mov
ret
jl
inc
dec
inc
mov
ja
jmp
fidivrs
mov
jno
enter
cmp
inc
xlat
jo
sbb
outsw
js
add
jb
or
je
lret
cmp
daa
push
cld
jo
or
adc
sbb
adc
sbb
jmp
cs
jo
fs
inc
fs
jg
jo
mov
fidivrl
sub
jl
mov
or
arpl
mov
dec
rcl
test
push
fimull
dec
sbb
jno
inc
add
mov
xor
dec
add
loopne
movsl
sbb
lods
int
in
add
pop
pop
sbb
mov
cmp
xchg
push
sub
andl
dec
sub
sbb
mov
and
sbb
add
or
out
mov
ret
inc
rcr
adcb
addb
pop
leave
xor
daa
sbb
cmp
add
add
jne
dec
sahf
push
ficomps
push
sbb
jns
fdivl
push
movsb
repnz
filds
sub
xchg
pop
pusha
xchg
lret
mov
sbb
xor
xchg
sbb
push
enter
cmp
and
add
cs
stos
dec
push
pusha
pop
inc
mov
cltd
sub
in
cmp
adc
pop
cli
test
test
cmp
jp
out
cmp
lahf
lds
xor
lods
notb
jo,pt
imul
cmp
dec
insb
push
and
push
dec
mov
ret
mov
dec
jmp
cltd
shlb
adc
mov
mov
jl
xchg
mov
stos
cmp
push
sbb
push
and
dec
or
add
push
je
or
cmpsl
out
jb
mov
mov
arpl
enter
adc
stos
xchg
in
cwtl
dec
add
rolb
sub
dec
cmp
ret
add
in
xor
ljmp
adc
insb
loope
pop
lods
mov
dec
cmp
push
sbb
out
push
clc
jl
mov
fiadds
js
add
test
push
dec
in
dec
jne
jmp
or
add
and
push
and
or
sbb
arpl
dec
adc
or
xor
xor
sbb
lahf
and
add
lea
stos
mov
sub
sub
and
dec
pop
sbb
cmc
nop
sbbl
call
dec
add
push
mov
mov
popa
andb
jle
mov
pop
shlb
nop
rolb
jl
jmp
aam
push
nop
out
pop
fdivrs
cmp
je
or
adc
jns
push
inc
jo
add
ret
adc
and
sub
xor
adc
and
push
mov
add
inc
and
popa
pop
push
add
mov
lcall
jge,pn
mov
cmpsb
cmp
mov
jp
adc
jo
fisttpl
or
cmp
enter
jbe
adc
dec
dec
sbb
cmpb
je
or
jmp
mov
mov
xor
adc
push
pop
dec
sub
lock
xchg
lea
xlat
pop
nop
add
add
and
sti
aam
sub
jae
adc
ljmp
inc
inc
mov
mov
push
test
mov
or
jns
cmpsl
xor
shrl
pop
push
push
or
xor
fsts
pop
or
add
andl
movsb
imul
or
add
movsb
out
mov
inc
mov
pop
push
sbb
rcrl
and
mov
mov
adc
sub
in
hlt
popa
mov
jp
test
cmpsb
xchg
lods
add
and
xchg
or
sbb
pop
xchg
jno
push
add
dec
mov
cmp
bnd
jl
jmp
and
xchg
in
adc
and
or
mov
pop
outsl
or
out
push
adc
mov
sub
into
xor
test
inc
add
add
pop
push
add
and
insb
xorb
sbb
pusha
cwtl
cmp
sbb
pop
adc
mov
push
sahf
enter
mov
sbb
je
and
cmp
fcompl
add
repnz
adc
jmp
mov
cltd
or
jecxz
sub
jbe
cld
shll
push
dec
push
imul
sbb
mov
cli
inc
adc
dec
pusha
jp
or
jp
and
cmc
pusha
add
dec
nop
mov
adc
xor
pop
mov
adc
cli
and
andb
fwait
incl
and
fs
mov
or
and
push
stos
bswap
mov
jb
sub
inc
xorl
push
ret
test
add
adc
mov
aam
or
adc
or
dec
cs
adc
cmp
cs
stos
sub
push
adc
add
icebp
nop
cmp
xor
add
sub
push
je
nop
sbb
sbb
jae
js
cmp
inc
jg
pop
jno
xchg
xor
dec
dec
cld
mov
xor
inc
inc
inc
adc
sbb
addl
and
xchg
add
add
add
push
add
inc
dec
jae
outsl
nop
pop
nop
inc
xor
xor
sbb
mov
sub
pop
jmp
nop
mov
jb
lcall
and
mov
jmp
fistpll
or
dec
cs
rcrb
mov
xchg
add
repnz
or
sub
sbb
mov
pop
es
pusha
outsb
cwtl
dec
inc
lahf
sbb
in
mov
je
sub
or
or
subl
cmp
sbb
xchg
cmpl
fs
push
or
or
jl
sub
xchg
mov
sbb
into
mov
adc
sub
mov
dec
lahf
inc
push
adc
test
jp
mov
mov
aas
jmp
fstl
jae
lret
wrmsr
enter
jmp
jp
les
xchg
and
mov
lods
mov
mov
mov
inc
pop
aaa
and
add
pusha
lret
xchg
test
sub
cmp
movsb
push
mov
sbb
out
mov
lea
sub
inc
pop
sbb
mov
repnz
dec
mov
push
imul
sbb
mov
pop
cmpb
add
inc
sbb
pop
negb
shlb
dec
adc
cmp
mov
dec
stos
movsl
pop
and
xchg
push
jmp
push
inc
cmp
test
xor
enter
daa
push
shrl
rcrb
add
insb
add
jo
pop
imul
stos
mov
mov
nop
mov
add
mov
pop
sbb
adc
xor
loopne
inc
mov
das
add
loope
jo
pusha
sbb
in
push
add
sub
lret
push
mov
sub
jns
dec
loopne
add
hlt
mov
mov
and
jo
nop
nop
add
push
xor
and
add
add
andb
xor
sti
addr16
pop
add
sbb
cmp
pop
test
xor
jl
sahf
push
cld
idivb
and
mull
aas
dec
sub
add
mov
mov
or
mov
or
adc
jp
mov
movsb
cs
mov
inc
pop
mov
mov
imul
add
xor
daa
cli
or
mov
mov
jns
sarl
jae
push
test
add
mov
bound
fistpll
push
sbb
mov
xor
cmp
mov
into
adc
dec
stos
xor
cli
jno
sbb
and
push
mov
in
test
std
mov
pop
xor
and
fidivs
push
std
push
shrb
outsb
mov
adc
aam
test
add
invd
iret
stos
jle
fwait
add
push
push
shlb
test
add
pop
out
xchg
mov
ljmp
nop
cltd
add
bound
mov
jno
push
fstps
cmpsb
xchg
call
jo
adc
lahf
and
movsb
ret
stc
push
pop
repnz
fstl
xor
and
sbb
test
mov
fs
cmp
mov
sbb
and
push
mov
inc
dec
arpl
or
pop
sub
fs
or
test
or
and
nop
lret
jae
or
adc
inc
or
push
inc
rcrb
inc
fildl
mov
pop
outsl
fcomi
adc
push
add
loope
aaa
sbb
or
loop
push
sbb
push
dec
je
xchg
ficompl
mov
fcomp
adc
inc
add
ret
sub
add
sub
and
ljmp
xor
push
filds
push
rolb
mov
test
sbb
mull
push
mov
idivl
repz
lock
pop
xor
movsb
scas
adc
dec
pop
sar
xlat
mov
insb
loope
push
sbb
push
in
sbb
mov
cmp
add
xor
xchg
fildll
xchg
cmpsb
pop
ret
pop
push
xor
add
and
add
mov
add
pmaxub
popa
cld
pusha
dec
fmuls
imul
shrb
add
jb
aas
sub
dec
movsl
pop
adc
hlt
pop
lods
mov
bound
sub
cmp
jae
push
jne
test
jae
sbb
and
push
push
dec
inc
lock
mov
scas
pop
xchg
jg
push
add
pop
dec
adcl
mov
xchg
sbb
dec
les
jge
or
push
adc
adcl
mov
adc
adc
imul
add
movsl
leave
inc
add
cmpsl
xor
ljmp
cmp
in
test
rclb
dec
pop
jmp
fwait
sbb
pop
and
cmpl
fstl
and
adc
in
dec
cmpsb
push
int
lock
cwtl
mov
in
cmp
add
add
inc
pushf
adc
jg
popa
pop
cmp
jne
cmp
int3
pusha
add
dec
inc
inc
sbb
in
push
push
sbb
pop
add
inc
push
push
lcall
adc
adc
insl
inc
sub
adc
fwait
inc
es
mov
pop
cs
incl
push
sbb
or
push
inc
pusha
mov
cmpsb
aas
leave
rol
data16
xor
xor
stc
mov
pop
adc
adc
jmp
cmp
cld
and
sbb
lea
call
in
sub
mov
add
jns
jmp
loop
test
adc
inc
and
inc
cltd
mov
loopne
add
xor
jmp
sarb
xchg
cmp
mov
fisttps
push
aad
cmpsl
cmp
jne
pushf
xchg
or
push
clc
insb
cmpsb
rorl
fsubl
jecxz
xchg
jb
arpl
shrb
push
fcoml
sbb
add
cwtl
inc
jno
arpl
add
fs
cmp
jne
mov
sub
test
or
sbb
jo
enter
adc
push
imul
cmp
fwait
sub
mov
xor
out
mov
dec
mov
xor
push
jno
adc
add
dec
sub
jb
dec
mov
cld
pop
cmpsl
int
and
inc
xchg
test
push
mov
and
xor
xchg
sub
lret
or
pop
pop
in
add
outsb
or
cmp
push
les
aaa
push
add
push
mov
push
cmp
jae
mov
test
ret
mov
lea
icebp
or
cmp
add
push
add
sti
push
pop
cwtl
jns
mov
test
pop
adc
add
or
rol
orl
push
dec
push
inc
dec
cmp
cmpsl
rorb
dec
sbb
lods
inc
fcomip
and
ret
or
pop
mov
lods
pushf
loopne,pt
xorl
aaa
mov
ficompl
addb
mov
inc
popf
sbb
inc
add
push
fwait
pop
jnp
movsb
xchg
dec
test
cmp
test
adc
or
xor
adc
dec
enter
sbb
mov
loopne
jl
inc
xchg
push
add
add
jns
inc
add
outsb
push
sbb
addl
aas
mov
test
mov
call
sub
dec
outsb
jle
xor
mov
movsl
pushl
loopne
ja
cmp
fimull
push
push
xchg
mov
test
sbb
mov
movsl
out
push
sub
aaa
jmp
push
push
jb
and
inc
js
cmp
je
out
cmp
insl
or
int
push
mov
jbe
pusha
pop
push
sub
adc
push
pushl
or
xchg
subb
movsl
int3
call
or
cmp
cmpsb
rorl
sbb
push
movsb
jns
test
add
cmp
jle
push
aad
decb
stos
add
cmp
pop
repnz
xor
aas
jno
adc
sbb
test
push
cltd
rorb
ja
out
add
mov
fidivl
jg
jae
mov
mov
pop
test
mov
push
iret
std
cs
cmp
add
push
push
add
push
inc
cmc
nop
rolb
pop
enter
jmp
and
nop
cld
dec
cmp
in
ds
xchg
pop
xor
sbb
or
or
jae
lcall
nop
outsb
lds
jno
add
lcall
add
xor
pop
in
insl
dec
mov
cmp
pop
xor
pop
add
pop
pusha
pusha
add
lods
icebp
and
fcmovnu
jbe
add
mov
inc
sbb
jl
add
sarb
cmp
xchg
je
scas
imul
call
loope
or
sbb
movsb
sahf
mov
movsl
mov
nop
mov
inc
add
dec
mov
and
mov
push
pop
inc
dec
and
mov
js
pop
inc
cmp
mov
sbb
dec
or
inc
lods
pop
or
jl
sbb
js
pop
subl
sub
or
mov
mov
ret
push
inc
pop
jb
xchg
mov
int3
pop
dec
push
or
or
int
and
dec
sub
inc
and
rorb
push
enter
mov
cwtl
ss
sbb
adc
incl
sub
add
pop
pop
or
inc
adc
or
imul
xchg
add
loope
dec
nop
adc
movsl
cmp
cmp
push
xchg
adc
in
adcb
dec
and
add
or
or
pushl
push
stc
addb
test
dec
das
add
cmp
jns
nop
mov
push
sub
cmp
dec
xor
dec
add
cmp
add
and
xor
push
or
inc
testb
das
test
push
iret
int3
adc
sub
adc
jbe
xor
xor
sub
sub
sbb
pop
mov
dec
loope
pushf
cmp
repz
lods
pushf
add
jae
testl
add
and
aad
ret
ljmp
add
pop
mov
gs
mov
push
jbe
in
sub
pop
adc
or
dec
movsb
fldenv
dec
cmp
cli
mov
inc
lods
nop
test
and
test
enter
inc
mov
jae
xchg
push
mov
cmp
arpl
pushf
shlb
mov
jle
xor
cmp
inc
movsl
or
or
dec
push
nop
or
or
insb
lahf
push
cmp
add
mov
rorw
rclb
mov
lahf
roll
add
add
push
ret
push
sahf
adc
or
inc
repnz
xchg
cs
add
cmpsb
lcall
mov
cmpsl
stos
adc
cmp
pop
xor
xchg
pop
fimuls
jnp
int
sub
dec
add
imul
dec
add
test
push
inc
ret
adc
sub
movsb
loope
pop
popa
push
mov
inc
add
jl
inc
or
mov
aam
add
xor
js
int3
xchg
cmp
incl
mov
dec
adcb
mov
pop
sub
adc
inc
ficompl
movb
adc
cmpl
xchg
add
jl
adc
xor
or
lods
daa
add
arpl
test
aas
ds
mov
pop
lods
add
mov
dec
loopne
sbb
je
fsubrs
mov
mov
mov
push
cmp
xchg
rcr
insb
xor
sub
je
push
jne
lea
xor
xchg
popa
and
hlt
ja
add
pop
fsubs
sub
jo
fs
cmp
jg
mov
xor
pop
lock
adc
push
push
cmpsl
or
pop
insb
cmpl
test
sbb
mov
adc
cmpsl
enter
bts
mov
sub
inc
push
and
pop
sbb
mov
pop
aam
add
add
or
dec
adc
aam
mov
mov
pop
add
add
mov
sub
loop
xchg
add
add
test
xchg
pushf
and
mov
push
add
sub
adcl
xchg
cmp
pop
sbb
add
addl
cmp
pop
fs
popa
clc
cmp
pop
add
mov
jo
dec
fs
mov
dec
push
mov
dec
push
inc
push
hlt
jecxz
pop
add
cmpb
mov
lahf
das
call
mov
shrl
push
cmp
hlt
sub
push
aaa
and
lock
adc
push
xor
mov
mov
fwait
int3
inc
add
sbb
les
mov
in
xchg
and
lret
or
add
aad
dec
sbb
jmp
add
cli
int3
mov
adc
aaa
test
cmp
jmp
push
repnz
jl
push
push
test
arpl
xchg
jo
int3
dec
lea
int
jo
add
adc
shl
inc
or
shll
rorl
pop
or
xchg
sub
add
pusha
mov
push
sbb
enter
add
xchg
push
ds
and
arpl
shll
fistps
xchg
xchg
xor
enter
add
lock
ljmp
sub
push
inc
xor
add
sbb
mov
outsl
loopne
lea
data16
mov
sbb
or
jmp
dec
adcb
xchg
lods
test
inc
push
sub
cmp
push
jl
sbb
rcll
push
dec
push
nop
test
xlat
inc
hlt
test
xchg
or
mov
test
sub
mov
ret
or
in
orl
and
dec
leave
repz
cs
adc
pop
mov
and
push
pop
pop
enter
and
ret
xor
and
dec
push
leave
push
and
out
push
dec
adc
movl
inc
xchg
cmp
mov
dec
push
nop
and
inc
ret
and
testb
je
sbb
in
mov
push
cmpb
or
fiaddl
lea
mov
sbbb
lea
mov
imul
orb
adc
xor
inc
daa
jb
lods
sub
leave
sbb
stos
and
jge
cmpl
les
xchg
push
xchg
test
lock
and
pop
cmpsb
sbb
lds
jo
xchg
push
inc
aad
push
rcll
xor
jg
xchg
jmp
push
cli
pop
inc
call
and
push
gs
daa
sub
pop
sbb
sub
cmp
pushf
in
subl
mov
pop
adc
stos
dec
jne
push
adc
push
add
call
iret
aas
dec
push
and
push
lret
enter
push
inc
push
cmp
dec
push
sub
adc
push
push
sub
xor
inc
cs
data16
sub
rol
add
lods
sub
insb
insb
and
jne
stos
in
pusha
leave
xchg
je
or
iret
notb
sub
add
or
xor
lea
add
adc
pop
and
cmpsl
add
icebp
dec
cmpsb
push
jecxz
jbe
in
neg
jp
cmpl
cmp
push
ds
cmp
enter
sbb
test
inc
je
add
inc
sbb
mov
test
sbb
shrb
ss
jmp
sub
notl
mov
add
push
xchg
dec
xorb
adc
inc
xor
sub
pop
aam
adc
pushf
lods
jecxz
insl
add
iret
pop
orb
lea
sbb
adc
call
sub
or
and
xor
push
lea
cmp
in
adcl
lods
mov
xchg
jnp
xor
mov
xchg
cs
mov
loopne
push
dec
mov
insl
cmp
cmp
aaa
or
dec
je
adc
sbb
movsl
icebp
mov
or
jb
xlat
lods
add
or
subl
and
add
adc
mov
mov
xchg
push
inc
ret
insl
xor
mov
cmc
out
test
or
dec
jo
inc
add
xchg
clc
mov
or
insl
or
out
sub
push
sbb
or
xor
fisttps
or
mov
imul
pop
or
add
dec
xor
xor
mov
and
bound
add
and
push
add
mov
adc
xadd
add
mov
je
outsb
push
mov
cmpb
cmc
lret
clc
inc
cwtl
das
sub
test
fistl
fwait
mov
jle
push
sbb
and
pop
add
fnop
dec
sbb
xchg
insl
int3
dec
mov
mov
pusha
dec
xchg
mov
push
leave
xor
or
or
inc
pop
cmp
lods
push
and
xor
adc
push
and
in
pusha
xchg
push
sbb
fcmovbe
stos
add
adc
addb
cwtl
cmp
inc
enter
adc
add
push
test
pop
xchg
out
and
push
jmp
sbb
push
jb
lea
sub
mov
jne
rcrb
pop
popf
sti
and
dec
aam
jbe
shrl
jbe
dec
adc
and
jo
imul
ja
mov
aam
pop
test
xchg
fimuls
xor
pushf
ficomps
push
xchg
cmp
pop
add
mov
rorl
push
and
leave
dec
adc
push
xor
mov
push
jecxz
or
icebp
add
xchg
push
dec
dec
push
add
sbb
add
rorl
mov
inc
and
mov
inc
pusha
or
movsl
popf
fs
sub
lods
lea
shrb
sbb
test
push
fbld
repz
push
cmpb
insb
cs
cmp
nop
lret
and
or
aaa
or
push
mov
fmull
and
xchg
cmp
daa
test
es
test
push
jmp
add
je
cmp
jo
adc
imul
sbb
mov
fnsave
imul
sbb
jp
js
flds
push
mov
loopne
insb
in
test
lea
aam
push
cmp
mov
out
sbb
xchg
add
xor
call
fstl
add
jbe
mov
push
enter
movsb
adc
inc
push
add
orl
daa
push
jp
ss
adc
adc
jne
xchg
fistl
pop
jo
push
das
add
movsl
xor
loopne
push
pop
add
push
cmpsb
pusha
jo
add
add
and
pop
push
add
rorb
arpl
sub
dec
add
jbe
adc
jl
mov
rcl
dec
and
adc
fldcw
movsb
dec
mov
fcoml
xor
adc
out
sbb
dec
sbb
mov
pop
mov
xchg
aam
xchg
repnz
je
aam
add
test
add
xchg
lods
mov
incl
push
and
pop
addb
jo
dec
imul
mov
in
pop
cmp
xor
in
push
pop
add
or
adc
push
sub
cmp
je
pop
mov
pop
push
xor
addb
jmp
adc
jbe
incl
cmp
nop
pop
inc
or
adc
leave
iret
test
loop
dec
adc
inc
sub
or
xorl
mov
loopne
scas
fwait
ret
lds
push
or
push
jl
jnp
or
dec
clc
mov
push
push
mov
mov
xchg
movsb
test
xchg
push
or
sbb
adc
ss
push
test
xchg
lea
ljmp
int3
push
enter
sbb
or
pop
dec
or
cmp
leave
sub
push
add
jae
sub
cvtpi2ps
add
or
fs
dec
or
xor
xchg
xor
jl
pusha
popa
add
cmc
mov
adc
sub
dec
iret
xor
lret
adc
mov
cs
sub
insl
xchg
aad
adc
xchg
push
sti
or
cmp
jne
mov
call
xchg
push
xchg
or
pop
adc
sbb
jb
push
rclb
cmp
jb
add
xchg
fcom
roll
es
sbb
xchg
sbb
jl
add
pop
es
push
stc
je
sbb
scas
rcrb
push
xchg
cmp
pop
xchg
dec
jae
pop
and
mov
repnz
push
and
and
and
dec
es
and
add
fsubrl
enter
adc
test
leave
xor
repnz
mov
bound
dec
es
sub
pop
sub
pop
fs
dec
andl
jb
pop
pop
mov
cmp
mov
add
pusha
pop
inc
mov
cwtl
jae
je
pusha
push
fsubrs
aam
dec
or
call
test
insb
add
es
sbb
dec
test
sbbl
or
and
xor
in
cmpsb
xchg
pop
add
cmp
std
adc
sbb
or
jl
jno
sarb
and
test
and
pop
push
add
push
pop
andl
and
or
and
nop
jmp
adc
xchg
sbb
mov
leave
push
mov
mov
enter
cmp
sub
dec
loope
push
cmc
dec
cmp
fsubl
lea
sub
data16
int3
and
shlb
adc
es
aas
cmpsl
fwait
push
and
cmp
hlt
xchg
out
nop
inc
cld
inc
nop
push
jns
fcomps
bound
push
repz
or
inc
xchg
jns
ja
lret
pop
sbb
adc
sub
inc
jl
inc
mov
inc
bound
mov
in
out
outsb
push
and
ret
enter
xor
cwtl
sbb
ss
ret
stos
addr16
add
cmpsb
and
addl
in
inc
push
rorb
inc
fadds
xor
repnz
iret
add
lods
ds
push
sbb
push
dec
cmp
and
sub
cmp
push
cmp
xor
cmp
mov
in
fwait
add
or
fwait
sahf
inc
lea
mov
sbb
ret
sbb
icebp
test
cltd
int
into
loop
shrb
lea
lret
insl
add
adc
rorb
xor
rolb
sub
push
adc
mov
inc
xchg
inc
cmp
cmpsl
add
inc
pop
cmp
int3
rorb
push
cltd
in
jnp
mov
add
fs
imull
dec
push
test
loopne
jl
imul
je
sub
pop
or
or
aam
cmp
enter
mov
lods
enter
jmp
pop
jnp
cmp
push
inc
aaa
mov
adc
and
inc
jnp
add
add
add
mulb
inc
push
jmp
sbb
dec
sbb
inc
outsl
and
mov
xor
and
jb
ljmp
inc
mov
arpl
cmp
in
push
mov
sub
sti
or
dec
sahf
ss
sbb
cld
and
adc
adc
cmp
jns
push
sbb
push
xchg
inc
lea
out
sbb
mov
mov
adc
clc
adc
test
mov
jbe
inc
es
cltd
add
lods
mov
in
push
ret
inc
in
fmul
dec
mov
dec
pop
insl
or
insb
mov
add
add
pop
push
fs
lock
cmc
or
push
dec
xor
add
pop
and
dec
leave
add
nop
and
test
and
pop
dec
dec
pop
ret
inc
push
call
sbb
or
sbb
scas
sbb
add
push
mov
fldl
xchg
sub
mov
xlat
lods
push
dec
test
mov
jno
cmpb
add
mov
cli
sbb
fsub
or
and
ret
jp
daa
pop
mov
sub
push
dec
sub
inc
enter
and
and
xor
test
push
int
insl
mov
sbb
jmp
mov
xor
test
out
push
sub
xor
sbb
xor
mov
cmp
and
enter
imul
push
or
sbb
in
or
in
fsub
dec
adc
xor
lods
test
pushf
push
push
cltd
xor
fists
orl
sbb
test
mov
sbb
add
adc
lret
adc
and
adc
cmp
mov
sub
xor
or
aas
in
addl
in
inc
push
mov
and
xor
mov
inc
mov
cld
adc
add
aam
lea
mov
adc
addl
leave
jne
aam
xchg
jle
sbb
aad
lods
imul
or
push
lret
jo
dec
and
pop
mov
ja
add
sbb
mov
stos
or
push
push
jmp
pop
push
mov
cmp
xchg
push
out
push
test
rclb
mov
mov
mov
and
dec
insb
push
loope
in
das
js
cmpsb
adc
fildl
insb
mov
and
add
xor
pop
sahf
or
pop
and
es
adc
stos
xchg
add
adc
addr16
rorb
adc
dec
sub
cmpb
int3
pop
cmp
in
push
jns
addl
lahf
ret
insb
cmp
dec
and
and
ret
ss
cs
jb
lds
or
adc
mov
cmpb
push
pusha
call
xchg
add
pop
push
das
in
or
add
subl
pop
fcmovb
add
out
push
test
xchg
dec
lods
or
jmp
pop
jb
xor
and
call
mov
mov
mov
dec
fs
pop
cmp
lret
mov
push
pop
inc
ret
jnp
jne
mov
das
add
push
fildll
xor
jmp
les
mov
sbb
pop
ja
jp
jnp
push
lea
adc
and
inc
add
stos
mov
test
add
sbb
popa
ljmp
xor
inc
or
arpl
jle
jmp
push
adc
addb
shll
dec
jecxz
incb
push
push
mov
inc
cmp
xchg
test
mov
rclb
pop
sub
pop
lret
arpl
add
mov
ret
mov
cmpsl
mov
ljmp
add
sbb
push
lahf
dec
xchg
and
add
sbb
sub
and
or
pushf
add
rcrb
push
leave
push
xor
inc
mov
int
or
imul
jg
or
and
push
out
mov
sub
add
adc
adc
rorb
arpl
sbb
es
sbb
xorb
pop
test
mov
lods
lock
fiadds
add
test
or
jne
cmp
outsb
sbb
jmp
sbb
push
and
mov
mov
mov
imul
cmp
add
add
popf
add
roll
push
and
sub
ss
adcb
sub
jmp
adc
inc
cmp
repnz
subl
outsb
or
cmpsb
and
divl
xor
or
xor
test
mov
push
cmp
xchg
pusha
ljmp
cmc
sub
inc
adcb
inc
je
push
addb
xor
sub
or
xchg
lret
and
adc
sbb
sbb
cli
cltd
addr16
or
mov
and
aas
add
push
insl
add
and
inc
mov
test
inc
dec
and
adc
pushf
or
mov
adc
or
push
or
rcrl
xchg
push
and
push
dec
imul
bound
stos
mov
shlb
mov
adc
lods
sbb
inc
ret
inc
add
pop
test
adc
loope
fs
mov
mov
push
roll
jle
cmp
jae
mov
cmpsb
adc
cmp
int
incb
stos
mov
cmp
jl
mov
lret
rolb
xchg
inc
sti
std
pushl
pop
mov
cmp
push
and
std
push
orb
push
dec
inc
lahf
aas
sarb
lods
push
mov
or
mov
push
sub
add
add
jp
enter
xchg
hlt
bound
lahf
inc
in
adc
fisubrl
sti
fidivrs
and
inc
daa
inc
xorl
je
cld
in
js
mov
pusha
insl
adc
sub
lahf
mov
sbb
nop
test
dec
imul
push
push
sbb
in
add
add
adc
and
lret
add
add
mov
mov
pop
pop
push
imul
movsl
pusha
shr
jo
add
dec
dec
push
int
pop
inc
pop
add
sub
imul
push
cwtl
insl
sub
or
cmp
in
movlps
push
inc
js
and
pop
inc
or
pop
push
xchg
mov
imul
dec
iret
jb
cmp
push
pop
mov
push
pusha
cmp
push
push
pop
inc
insb
cmp
les
pop
or
enter
pop
add
lods
loopne
or
test
lds
adc
popf
push
cs
mov
push
sbb
pop
lret
insb
mov
push
or
add
ljmp
adc
and
or
stos
mov
cmp
inc
orb
pop
pop
or
inc
lahf
in
and
call
inc
out
mov
decb
inc
xchg
adc
mov
push
jbe
mov
or
mov
adc
inc
push
pusha
sti
test
cmp
push
pop
and
xchg
dec
dec
sbb
rorl
lea
adc
test
sar
or
test
push
jnp
add
cmp
lock
add
fcompl
adc
shll
movsl
xchg
adc
test
mov
aas
mov
pop
repz
mov
jge
dec
mov
das
jne
or
mov
popf
xchg
sysenter
movsb
dec
faddl
js
mov
jge
pop
cmpsl
pusha
roll
mov
and
push
cwtl
dec
test
pusha
hlt
out
mov
testl
xor
jae
orl
mov
inc
jl
push
decl
fisubl
cwtl
dec
lcall
add
scas
scas
out
out
xor
mov
lock
add
mov
rolb
xchg
loopne
aam
pop
shl
mov
pop
push
mov
mov
lahf
push
loopne
push
mov
ret
push
sbb
lock
sbb
push
arpl
inc
cmpsl
pop
mov
imul
dec
lock
testl
mov
or
adc
je
cmp
mov
test
or
je
push
fwait
xlat
gs
pushw
push
mov
das
adc
fwait
mov
mov
lea
lock
mov
loope
out
add
sbb
push
sbb
jns
jnp
inc
and
dec
inc
hlt
inc
sbb
sub
rorl
gs
adc
loop
pop
mov
je
insl
pop
ss
data16
aam
sbb
sub
add
icebp
mov
pop
stos
cmp
xor
and
cmovno
sub
out
adc
sbb
cwtl
pushf
nop
shll
sub
sbb
mov
cmp
adc
sub
sbb
mov
adc
xchg
fcoml
push
movsb
sbb
sub
sbb
adc
movsb
push
mov
inc
inc
mov
push
stos
mov
xchg
push
mov
xchg
pushw
sbb
xchg
inc
mov
or
addl
arpl
xlat
inc
mov
cmpb
jmp
mov
push
sub
adc
mov
imul
pop
sub
jne
and
xchg
adcb
mov
sub
push
mov
mov
pop
pop
aaa
add
dec
icebp
mov
in
mov
addl
or
xchg
xchg
pop
cmpsb
mov
adc
sub
sbb
dec
inc
ds
fisttpll
xchg
nop
sbb
push
into
test
jge
mov
cld
sbb
sbb
ret
rorb
and
pop
push
movsb
xchg
int
xchg
pop
fwait
lret
sbb
cld
psubb
cld
rclb
add
arpl
les
mov
lock
adc
and
andb
xor
enter
xchg
scas
xor
cld
ret
pop
test
enter
fdivs
out
pop
pop
nop
push
jl
sub
push
xor
adc
mov
enter
inc
les
sub
and
and
out
sbbb
inc
arpl
push
mov
outsl
xor
push
jno
dec
lock
aad
sbb
cltd
add
push
xor
sbb
rorb
ret
xchg
add
jp
stos
xor
mov
enter
dec
push
nop
push
lock
fdivrl
or
test
es
inc
xchg
pop
pop
jo
fdivs
test
sub
sti
adc
stos
mov
mov
aam
push
push
dec
fwait
stos
and
push
xor
test
pop
lret
lea
data16
adc
xchg
rclb
test
cmp
inc
mov
inc
icebp
outsb
push
call
jb
shlb
hlt
or
mov
adc
loopne
movsb
je
jno
xchg
inc
test
inc
rorb
sub
push
repz
dec
push
dec
and
mov
push
add
ret
rclb
inc
jns
inc
pop
add
jns
inc
or
dec
jge
je
pop
aas
mov
std
mov
pop
mov
push
dec
jg
cwtl
dec
xor
je
inc
add
xor
lods
mov
mov
shlb
in
gs
sub
mov
dec
call
shrd
inc
shlb
jne
mov
dec
add
add
sbb
mov
int3
push
adc
outsl
inc
xor
xor
dec
incl
mov
mov
push
jb
icebp
insl
mov
xchg
mov
scas
cmpsl
shlb
xchg
adc
je
sbb
jne
dec
dec
xor
sbb
inc
fwait
xor
sahf
outsb
pusha
mov
int
or
cmp
cmc
pop
xor
dec
enter
rol
inc
xchg
xchg
je
xor
jno
sbb
fistl
scas
sbb
cmp
add
inc
gs
mov
rorl
push
push
mov
and
pop
sub
or
add
rol
or
sbb
iret
aad
add
xchg
push
imul
sbb
inc
sub
stos
xor
jbe
dec
or
rorl
nop
js
sub
or
out
pop
dec
add
mov
dec
in
inc
shlb
fs
inc
sbb
ficoms
inc
sub
adc
push
push
lcall
loopne
inc
mov
inc
inc
repz
add
or
push
jnp
mov
or
mov
xchg
dec
ret
and
add
stos
sahf
clc
test
or
in
loope
push
add
in
push
cmpsl
or
xchg
out
sub
loopne
push
sub
inc
sbb
pop
addl
cmpsl
pop
loop
adc
add
sub
push
js
mov
fildll
inc
mov
fisttpl
adc
pop
and
popa
rclb
sbb
sti
dec
add
sub
adc
xor
jmp
sar
jmp
fcoms
stc
push
outsb
insb
xchg
rorb
nop
dec
jle
fistps
push
jl
leave
mov
movl
sbb
xor
cmp
jne
jnp
push
pop
inc
adc
mov
test
xchg
adc
mov
push
push
lock
push
jbe
sub
ja
add
xor
xchg
add
mov
daa
out
cld
lcall
push
fld
mov
mov
hlt
jecxz
adc
add
mov
cli
mov
push
gs
lret
xor
or
push
mov
sbb
and
pop
cs
ja
ret
dec
addr16
test
jecxz
cmpsb
push
push
jo
js
inc
stos
jo
lret
pop
and
sub
jl
icebp
or
add
mov
pop
push
pop
push
sub
pop
add
rclb
add
mov
adc
cmp
mov
pushf
pop
adc
push
sbb
es
fwait
push
inc
or
nop
sub
sbb
push
ss
mov
mov
mov
pop
out
mov
stos
shll
mov
dec
inc
lcall
sbb
je
mov
pop
cmpl
mov
ss
icebp
push
push
push
test
out
out
mov
mov
push
push
inc
add
les
movb
mov
shrb
mov
push
or
mov
adc
add
mov
nop
xchg
mov
enter
push
xor
into
dec
ja
push
clc
or
mov
inc
cmp
inc
add
lods
mov
push
inc
shrb
cmovle
js
je
fbld
icebp
or
inc
dec
add
rolb
cs
sbb
sub
adc
cmp
test
inc
adc
or
dec
mov
cmp
add
jecxz
adc
test
paddq
or
push
js
ds
pop
addb
push
cld
dec
add
testl
dec
cmp
jo
and
jnp
sbb
aam
aas
icebp
rcrl
push
sub
fisttpll
mov
test
cmp
repz
mov
xchg
mov
xlat
mov
hlt
popf
lret
mov
cmp
adc
sbb
adc
es
xor
add
mov
or
xor
xor
push
mov
inc
or
or
repz
idivb
inc
add
and
xor
pop
sub
das
jno
or
pop
dec
dec
add
add
int
or
pop
xchg
icebp
add
dec
sub
call
and
scas
jne
loop
loope
push
das
jmp
hlt
lea
orl
sbb
lfs
test
add
ficomps
nop
jmp
jno
popf
add
and
push
out
inc
cmp
push
inc
xlat
sbb
xchg
push
das
adc
stos
dec
call
ja
and
bound
add
xchg
cmc
addr16
dec
jo
xchg
mov
scas
mull
aas
and
add
or
cli
inc
pop
movsl
add
inc
mov
dec
pushf
lock
or
cltd
aad
nop
or
hlt
mov
add
xchg
inc
sub
inc
test
sbb
add
and
mov
sub
pop
out
shlb
dec
mov
into
xchg
mov
mov
lds
push
add
imul
js
or
or
xchg
add
dec
pop
shll
mov
pop
jns
dec
or
sub
jle
sbb
loope
jmp
pushf
jl
inc
mov
or
and
jl
and
push
push
nop
add
and
inc
xchg
rolb
jle
mov
out
and
sub
test
sub
in
sbb
jp
pop
and
fadds
icebp
mov
int
shll
push
adc
inc
xor
xchg
sub
ss
or
add
bound
add
psubsb
movb
in
cmp
dec
bound
shlb
push
push
mov
cs
xor
sub
dec
push
or
push
jo
push
and
bound
test
lock
dec
roll
push
xor
and
pop
daa
sbb
or
leave
lds
bound
push
ret
sahf
lret
adc
sbb
in
fsubrs
or
ja
ret
add
stc
mov
add
inc
pop
push
adc
pushf
mov
iret
clc
lahf
inc
add
stc
jno
xor
adc
adc
adc
adc
imul
jb
mov
pop
sbb
aaa
dec
scas
mov
mov
push
add
push
mov
adc
xchg
sbb
add
xor
out
or
mov
int
jg
mov
jne
cmp
jb
sub
jmp
push
dec
movzwl
dec
rcl
pop
icebp
pop
cmpl
push
setl
movzbl
loop
cmp
test
sub
lahf
nop
shlb
or
add
fisubs
and
dec
shll
add
test
pop
mov
lds
ljmp
in
add
xchg
out
cltd
dec
push
push
push
rcll
xchg
mov
mov
push
lahf
pop
pop
or
jmp
push
jne
pop
push
jle
push
xchg
out
inc
jne
or
push
or
push
fs
inc
lods
iret
test
mov
adc
dec
add
sbb
mov
dec
add
or
push
mov
xor
adc
xor
and
js
mov
mov
and
mov
pop
and
aas
loope
push
push
jmp
ffreep
xchg
or
jo
sub
pop
push
sub
fsubrs
popa
adc
adc
or
add
inc
mov
mov
mov
aad
movsl
xor
sbb
adc
subb
movsl
add
mov
or
mov
mov
and
and
push
push
cmc
xor
jle
jp
lds
rcrl
sbb
pusha
dec
les
add
mov
mov
mov
pop
icebp
loop
xor
and
push
nop
or
ss
or
adc
adc
test
das
xor
popa
test
cmp
push
xor
lds
mov
and
sahf
sbb
jb
fnstenv
shlb
inc
mov
pop
imul
dec
cwtl
mov
lahf
push
pop
mov
data16
test
sbb
and
push
dec
push
sbb
jns
bound
push
dec
xor
pop
and
pop
adc
add
lock
cmp
js
mov
scas
lods
inc
pusha
xor
push
or
les
in
mov
jg
mov
and
daa
in
nop
xchg
movsl
push
adc
push
test
pushf
pop
jl
adc
nop
mov
adc
lcall
nop
push
sbb
shlb
loopne
cmpb
dec
je
cs
imull
cs
inc
mov
sti
add
inc
test
sub
hlt
add
push
cmpsb
sbb
test
aaa
mov
pop
add
push
ret
add
les
lcall
jmp
mov
inc
jo
and
cltd
inc
test
roll
pop
mov
shr
or
adc
xor
cmp
or
adcl
and
sbb
mov
loop
decb
ja
dec
hlt
mov
pop
lea
sub
and
repz
or
push
cmpb
jne
push
cmp
push
fstps
test
add
push
inc
subl
inc
nop
lahf
sbb
add
lock
push
stos
lds
jbe
inc
je
push
mov
jg
add
mov
je
jo
pushf
and
mov
or
ficoms
mov
pop
and
hlt
jb
and
push
add
daa
sbb
inc
push
or
inc
test
shlb
pop
cmp
push
push
sub
xor
xchg
dec
movsl
or
jl
dec
jns
std
decl
lock
add
inc
inc
shll
adc
sahf
fdivs
pop
dec
or
jge
test
jnp
sbb
push
lcall
and
sub
adc
and
push
in
add
movsl
test
js
inc
add
mov
sub
adc
into
or
pop
jge
stos
je
mov
push
dec
ret
cmp
xor
push
push
push
push
adc
notrack
dec
sbb
or
xchg
or
sbb
and
xchg
push
cli
jmp
inc
call
pop
push
inc
cld
xor
pop
jne
mov
inc
iret
add
mov
push
nop
adc
repz
sub
pop
mov
cmpl
sub
push
imul
jae
adc
jg
cmpsb
sbb
mov
inc
sub
jo
sahf
fidivs
sub
inc
mov
push
aam
sub
mov
mov
adc
js
aaa
push
sbb
add
adc
xchg
push
dec
inc
pushf
pop
xor
push
dec
test
scas
adc
imul
jl
js
mov
js
and
xchg
lcallw
xchg
mov
jbe
popa
repnz
pushf
jmp
sbb
cmpsb
pop
cltd
pop
jne
xor
js
inc
mov
sti
and
stos
and
xor
cs
add
sbb
daa
jl
and
pusha
js
adc
andl
and
call
xchg
mov
es
ret
shll
movb
dec
loope
dec
pop
add
or
js
aaa
sub
enter
inc
or
cwtl
inc
dec
or
xor
pop
mov
and
cmp
and
sub
enter
cmp
pop
dec
inc
daa
sbb
push
addl
mov
lcall
sbbb
pop
pop
sbb
dec
mov
cmp
sahf
mov
xchg
cmp
cmp
mov
dec
and
and
jmp
jbe
sub
jae
xchg
dec
adc
fwait
test
test
adc
jmp
enter
fwait
add
inc
enter
add
jns
add
xor
ret
inc
push
or
add
daa
sahf
sarl
jae
cmp
scas
sub
and
jne
std
nop
push
js
push
pop
aam
sti
out
aaa
lods
mov
dec
pop
shrb
jns
jns
push
pop
fs
add
addr16
or
xor
int
es
rcrl
sub
cmp
add
mov
add
cmp
sbb
pusha
sub
xor
lods
adc
xchg
adc
or
aas
adc
add
lret
clc
jo
mov
pusha
and
sbbl
nop
xchg
setno
ret
adc
cmp
rorb
mov
jp
icebp
addr16
movsl
dec
xchg
push
jmp
and
or
inc
in
xchg
and
pop
add
jo
inc
jge
add
push
aam
add
mov
loopne
add
sub
out
data16
inc
nop
scas
adcb
mov
and
dec
add
adc
mov
push
xor
push
mov
psrad
nop
xlat
inc
pop
enter
mov
xor
or
add
hlt
push
sub
dec
adc
or
daa
xor
jo
push
mov
pop
sbb
xchg
or
and
xor
add
adc
pop
pop
adc
dec
pusha
or
add
cmpb
je
scas
mov
adc
and
adc
and
jp
popa
push
or
bound
pusha
and
jb
js
pop
xchg
arpl
adc
into
call
cmpsl
clc
mov
jecxz
cmp
push
sbbl
sbb
outsl
jle
mov
cmp
fimuls
test
fstl
push
aad
lret
xorb
mov
mov
jmp
xchg
add
pop
sub
push
fisttps
mov
je
dec
or
in
push
push
insb
test
sti
mov
mov
std
mov
clc
xorb
dec
dec
jo
cli
push
mov
mov
lret
xchg
push
pop
rorb
stos
imul
dec
jo
jb
pop
fcomps
lea
aam
sub
repnz
pop
scas
ret
pop
xchg
hlt
dec
or
or
shr
fiaddl
mov
inc
scas
push
sub
fisttpl
push
fsubl
mov
dec
cld
cmp
ret
push
es
cs
jns
push
or
xlat
xor
adc
sub
sbbb
je
div
stos
dec
xchg
push
test
scas
clc
adc
pop
mov
dec
push
or
and
mov
or
sbb
cmp
into
fcmovnbe
fiadds
hlt
pushf
dec
rorl
mov
xor
test
pushl
jae
dec
cld
gs
push
and
mov
mov
add
jg
pop
movsb
out
adc
fildl
arpl
jno
cli
mov
add
fidivl
loopne
push
sbb
adc
jbe
mov
pop
cmp
shrb
or
shrb
stos
mov
and
pop
pop
orl
mov
std
jl
push
inc
loop
je
imul
xchg
insb
push
mov
lcall
sub
sub
xor
pushl
cli
push
flds
popa
or
add
xchg
jg
inc
add
mov
jo
add
add
icebp
add
adc
or
ret
xchg
or
popa
pop
sbb
ficoml
inc
cmpsb
sbb
orb
cmp
imul
jl
pop
cmp
rcl
insl
clc
pop
jp
or
pop
xor
pop
lcall
push
cld
add
mov
mov
sarl
jl
mov
or
mov
dec
cvtpi2ps
les
shr
and
std
ja
and
or
mov
cwtl
inc
add
add
fwait
or
int3
iret
lock
bound
add
shr
cmp
jne
add
cwtl
adc
cli
in
into
push
push
push
and
adc
pop
or
dec
jo
pop
orb
lcall
inc
pop
push
call
and
mov
ds
xlat
out
loopne
mov
es
add
push
jecxz
jmp
shrb
ja
xchg
scas
sub
mov
je
inc
lea
icebp
lods
rorl
jecxz
mov
lea
lds
xchg
dec
cld
xor
into
stc
leave
ficoml
loopne
cmpsl
dec
push
ret
push
punpckhdq
pop
int3
dec
mov
pop
or
pop
test
aaa
xchg
xor
sbb
cmp
sbb
or
stos
push
sub
imul
pop
or
cmp
inc
mov
test
jne
mov
cld
mov
cmp
je
outsb
aad
inc
push
lahf
clc
inc
mov
adc
mov
aas
mov
cmp
jg
adc
ljmp
add
mov
or
outsl
cmp
pop
jmp
xor
inc
sbb
ja
mulb
fstl
push
inc
in
sbb
addr16
pop
icebp
mov
pushf
cli
xor
mov
push
rcrl
push
adc
and
inc
push
jne
ss
pop
or
popf
add
mov
les
addr16
dec
or
inc
xor
lods
pop
sub
insb
clc
push
push
push
mov
jg
and
sarb
cld
data16
and
push
and
xchg
sbb
popa
lock
mov
add
imul
push
orl
mov
push
fiadds
ljmp
call
or
push
jmp
cmp
mov
dec
add
push
cmpl
xlat
xor
or
fcoms
shrb
lock
push
jbe
loopne
mov
scas
sub
clc
jnp
rcrb
jb
mov
mov
je
jge
hlt
nop
ficoms
sbb
popa
mov
clc
clc
clc
das
mov
push
loopne
lea
push
push
adc
sti
xchg
xchg
jl
mov
ds
push
xor
lret
adc
adc
shlb
adc
sub
adc
test
leave
stos
jmp
pop
and
push
jb
push
push
jecxz
sbb
adc
or
js
je
mov
ret
adc
scas
and
mov
cmc
jo
mov
add
push
cmpsb
mov
roll
mov
lea
out
push
mov
in
pusha
aaa
mov
jne
add
fs
sbb
push
js
xlat
sub
popa
outsb
push
push
add
xchg
rcrb
mov
dec
pop
pop
aad
sub
or
jge
and
inc
cmp
mov
inc
scas
and
mov
popa
inc
mov
sub
push
mov
and
scas
lock
scas
inc
loop
xor
pop
pop
adc
out
in
shlb
ljmpw
pop
push
mov
pop
and
inc
or
sbb
sub
sub
andl
mov
and
mov
inc
and
or
lods
cmp
mov
stos
xor
repnz
loopne
sub
push
and
pop
das
add
inc
push
imul
add
out
push
arpl
std
jne
push
lock
xor
shl
ds
dec
jne
mov
add
movl
lock
orb
or
cmp
lret
dec
inc
sbb
stc
rcll
mov
out
mov
outsl
ljmp
int3
stos
sub
aam
cmp
mov
sbb
mov
jbe
inc
mov
cmp
lahf
dec
lock
subl
je
mov
mov
lock
jb
jp
roll
inc
fnstsw
loopne
mov
sub
jne
xor
sbb
xchg
call
add
xchg
mov
sbb
pushl
or
mov
xchg
int3
jbe
daa
xchg
inc
shlb
push
and
ret
movsl
inc
inc
xchg
adc
fidivrl
iret
stos
and
sti
mov
cli
bound
hlt
sub
out
or
fwait
xchg
add
add
inc
or
mov
cwtl
pushf
pop
sbb
mov
or
inc
lods
mov
or
lahf
mov
push
push
lds
cwtl
adc
push
ss
js
push
push
inc
adc
xchg
shrb
inc
lods
loope
add
jae
pusha
push
jns
lock
push
mov
mov
dec
mov
ret
shrl
stos
in
jnp
xchg
fxch
fst
or
push
sarl
adc
sbb
cmp
inc
dec
pop
lret
shr
sarb
popa
jne
cmpsl
inc
mov
into
jg
mov
out
das
push
lret
inc
mov
pop
loop
push
sub
imull
mov
imul
fsubrs
rorl
adc
dec
or
ret
jle
add
rolb
mov
test
and
out
push
idivb
push
rolb
scas
mov
mov
clc
sub
cmpsb
pusha
jo
imul
mov
dec
adc
jo
cmp
outsb
fwait
pop
cs
push
dec
daa
add
stos
test
adc
pop
inc
movsl
movzwl
mov
mov
sub
jg
insb
stos
mov
loop
cld
pop
inc
add
insb
dec
mov
mov
xchg
shlb
xor
inc
sub
add
inc
cmpsb
imulb
andb
add
push
pop
pop
dec
inc
inc
push
dec
jns
rcr
cmp
or
dec
cmpsb
mov
push
lret
and
and
mov
adc
call
push
sbb
scas
mov
xor
addb
call
xor
sub
dec
mull
add
loopne
lods
xor
xor
movsb
in
jno
push
jl
loop
jge
inc
rorl
sahf
dec
mov
faddp
pop
mov
test
imul
inc
push
dec
sbb
push
sbb
pop
cmp
scas
adcl
mov
push
jns
mov
pop
mov
inc
or
jle
push
insb
data16
sbb
lea
ffree
rol
aaa
dec
popl
mov
rolb
sub
inc
adc
mov
inc
ss
add
add
xlat
jb
jle
sub
sbb
shlb
stos
imul
add
add
inc
sbb
test
addb
xor
push
push
in
jnp
inc
roll
lret
jnp
mov
mov
leave
mov
out
sbbb
loopne
and
iret
cli
pop
cli
cmp
adc
adc
loop
or
dec
xor
xor
fcmovnb
shlb
cmp
dec
cs
ror
push
daa
ds
jl
pop
lock
or
mov
jmp
mov
aaa
adc
pop
cmp
pushf
push
daa
mov
xchg
loopne
cmp
push
jmp
mov
rorb
cmp
mov
fadds
sarl
pop
lcall
mov
push
lock
sub
bound
jl
push
test
arpl
fs
in
ljmp
xor
lock
xor
mov
in
insl
ffree
mov
pop
stos
int3
inc
add
pop
sar
cmpsb
cmc
pop
push
ljmp
fwait
pusha
or
and
andl
rolb
mov
mov
in
clc
mov
cmp
jg
outsb
divl
pop
ja
test
xchg
adc
and
test
add
popf
addb
out
inc
push
mov
stos
shl
pop
mov
bound
jno
pusha
push
enter
cmp
xor
insl
jne
cs
add
push
jl
sahf
das
jae
arpl
push
lret
repz
push
je
inc
or
jge
fidivs
push
or
and
jle
cmp
dec
add
add
sbb
sbb
cmp
ret
dec
mov
call
cmpb
popf
pop
cmp
je
sbb
adc
cmp
test
mov
adc
push
push
fidivs
test
adcb
fwait
sub
cmp
add
out
dec
jne
sub
mov
jb
cmp
push
in
push
movb
mov
sbb
pop
mov
dec
test
or
jnp
sti
push
hlt
rclb
dec
jb
push
push
push
fimuls
jl
mov
neg
aam
js
fcoms
xor
push
loopne
inc
pop
jae
and
pop
inc
sbb
nopl
push
sub
loopne
mov
mov
xor
ja
sbb
jnp
rolb
push
jae
add
xor
adc
stc
jmp
and
cmp
jne
in
out
hlt
mov
or
mov
mov
je
leave
or
loope
add
testb
add
xchg
test
lahf
add
mov
dec
mov
hlt
and
ds
add
insb
fisubrs
pop
jne
inc
xorl
cltd
dec
jnp
mov
aam
sbb
jmp
imul
lcall
add
dec
shll
push
xor
je
aas
xchg
data16
or
call
adc
aas
andl
popf
dec
mov
add
mov
inc
int3
std
in
mov
xor
xor
addr16
scas
xor
dec
in
and
pop
divl
push
xchg
add
xchg
int
lea
xor
loopne
add
xor
push
adc
mov
popf
rcl
pusha
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
jbe
aam
xor
push
add
lods
stos
or
pop
adc
jo
subl
mov
dec
sbb
test
fmulp
clc
adc
and
loop
or
jo
bound
mov
or
das
lock
pcmpeqw
dec
movsl
icebp
das
notl
data16
push
lcall
sub
popa
add
and
gs
lret
sbb
and
mov
adc
add
sbb
ror
inc
inc
repz
or
push
shrb
xchg
cli
push
ja
inc
sub
ja
adc
mov
inc
shll
mov
dec
jnp
xor
xor
mov
dec
dec
jne
outsb
cmp
or
push
pop
inc
add
add
adcb
xor
cli
incb
shl
mov
adc
sbb
or
je
inc
or
pop
mov
inc
shll
jo
xchg
jbe
call
shr
and
test
add
inc
enter
test
ljmp
js
xor
testb
mov
jne
adc
scas
lret
lret
notb
or
ret
inc
sbb
inc
fdivrs
cld
mov
adc
add
cs
int3
or
or
in
pop
mov
pop
repnz
cltd
in
cmp
das
add
iret
push
mov
or
push
pop
sahf
fnstcw
pop
lea
inc
xor
insl
jmp
rclb
out
movsb
add
mov
imul
mov
sub
or
clc
loopne
xchg
and
pop
jecxz
call
insl
mov
psllw
xor
jb
inc
xchg
ja
fldenv
push
add
push
test
pop
dec
jmp
into
scas
sub
and
push
jb
pop
pop
in
add
je
ret
stc
int3
outsb
jne
push
mov
aad
jne
mov
inc
mov
cli
jne
lret
clc
cmc
dec
cmp
decl
or
shrb
cmp
mov
or
jmp
cmp
subl
outsb
inc
aad
mov
dec
jmp
mov
push
push
adc
dec
inc
aam
or
push
cli
add
adc
shlb
or
jmp
clc
fidivrs
push
push
or
loope
fisttpl
loop
mov
sbbb
or
mov
and
mov
jl
add
cmp
sub
adc
pusha
push
add
int
mul
insb
cld
jo
pushl
fstl
sbb
sub
ljmp
and
ret
stc
rcrb
jnp
push
sbb
mov
add
nop
gs
je
push
cltd
test
fs
xchg
inc
insb
insb
push
push
dec
cmp
insb
sbb
pop
lcall
pop
mov
pop
divl
mov
je
cmp
je
mulb
add
xchg
push
clc
and
cmp
je
lods
nop
jbe
adc
imul
push
sub
inc
dec
add
lds
xchg
jmp
lea
loopne
fimuls
orl
push
add
lock
mov
lock
in
in
lock
cmpsl
negl
sahf
addb
push
outsb
rclb
push
jo
add
dec
jo
or
push
mov
nop
fistpll
jbe
mov
into
add
push
mov
mov
into
lea
mov
sub
cld
adc
cs
push
pop
mov
cmpsb
mulb
inc
push
je
aam
cmp
mov
push
jl
testb
mov
inc
sub
add
add
add
mov
push
and
mov
stos
test
lock
sbb
adc
jbe
or
scas
rclb
iret
aam
add
leave
ret
push
sbb
and
int
int
insb
clc
push
push
jge
int
jno
jne
enter
add
adc
out
mov
mov
movsb
call
xchg
aas
jne
outsb
out
fsubrs
sbb
jl
clc
data16
pop
cltd
addr16
add
mov
pop
fildl
pushf
cwtl
fidivrs
sbb
lods
sub
or
sub
jo
cmp
or
jnp
fwait
sbb
add
fimuls
sahf
lret
js
push
and
xorb
dec
push
lea
add
jo
aam
add
pushl
and
lret
push
or
sbb
lods
or
lods
add
adc
xchg
or
movl
mov
pop
xor
pop
sbb
stos
add
lock
sub
fs
adc
sub
enter
mov
pop
arpl
push
and
sbb
pop
sbb
or
clc
ja
pop
mov
std
mov
andb
and
xorl
je
push
sbb
aad
mov
and
out
mov
cmp
je
aaa
aaa
lock
add
jg
sbb
sbb
or
lret
adc
test
inc
adcb
mov
ret
pop
roll
pusha
pop
dec
sbb
ljmp
mov
adc
and
push
and
push
dec
push
jbe
or
pop
sbb
pop
inc
fistl
into
or
lock
data16
xchg
adc
test
data16
in
cmp
fnsave
cltd
cmc
insb
mov
xchg
lret
push
inc
clc
aad
push
out
pop
add
fistps
pushf
nop
cmp
cmp
push
fistl
insb
sbb
loope
xchg
ljmp
jmp
mov
lock
xor
push
test
testl
xor
push
pop
shlb
sub
cmc
add
fimuls
pop
mov
or
lret
mov
cmp
xor
mov
stc
movsl
add
idivb
je
mov
sbb
mov
push
sbb
es
out
jo
push
cli
cltd
js
test
mov
push
pop
sarl
aaa
outsl
shlb
push
lock
test
jb
xor
jmp
inc
cmp
loope
push
mov
mov
jne
rcrb
cwtl
insl
aaa
ret
stos
jae
and
xor
sti
movzwl
push
sbb
jne
inc
lcall
dec
cs
dec
jae
push
push
push
je
add
imul
out
mov
jbe
adc
cmp
push
pop
cs
push
repnz
push
sbb
push
mov
dec
sbb
mov
mov
sub
ja
sbb
pop
xchg
int3
pop
sub
in
je
xchg
or
xor
dec
jne
dec
or
das
mov
pushf
jo
hlt
sub
cmp
jmp
sub
fisubrl
sbb
arpl
or
or
or
sbb
pushf
addr16
sbb
sti
and
cli
cmpsb
mov
fnstcw
push
add
orb
or
ret
mov
sub
test
add
sbb
adc
call
movsb
and
test
push
add
inc
popf
push
mov
adc
adc
inc
ret
push
or
inc
movsl
cmp
sbb
enter
dec
inc
xchg
and
cs
into
jnp
xor
mov
scas
xchg
scas
jmp
inc
stos
xchg
dec
push
addl
call
mov
or
shlb
sub
bound
pop
jle
lret
stc
xor
xor
test
sbb
push
or
push
or
push
and
mov
inc
adc
fmull
jbe
pushf
adc
jae
sub
xchg
lret
sbb
mov
lret
std
push
and
xor
ficoms
sub
sub
dec
lods
pusha
xchg
xor
in
and
push
cmp
ret
inc
es
xor
and
adc
lock
fcoml
sbb
sbbl
insl
inc
insb
js
pop
adc
pop
push
xor
lea
inc
add
jo
and
inc
and
addb
test
xor
mov
rcrb
dec
outsl
hlt
andl
pop
lea
inc
ds
dec
adc
outsb
jl
aas
sbb
jmp
outsl
outsb
inc
jmp
pushl
aad
push
pop
mov
lea
in
out
test
fs
fcomps
jl
cltd
or
xor
ret
les
xchg
xor
pop
sub
gs
mov
mov
mov
jl
andl
icebp
dec
lods
enter
jl
inc
or
cld
and
jmp
ret
push
add
xor
or
jl
dec
rep
fistpll
jl
dec
xor
pop
push
pop
push
dec
outsb
mov
push
test
adcl
rcrb
add
dec
adcl
adc
aad
outsb
or
add
add
sub
sub
mov
fdivrl
adc
test
push
mov
push
add
jle
jl
dec
cmp
pop
int
sbb
jl
adc
push
mov
adc
sbb
in
xlat
js
add
add
cmp
insb
dec
dec
adc
mov
push
inc
adc
sbb
and
cmp
add
push
add
or
sbb
addl
push
repnz
pop
fisttpll
cmp
test
test
lock
out
jns
movb
test
loop
or
mov
incl
test
add
jne
outsl
sarb
add
sbb
lock
testb
adc
jle
add
xchg
jno
mov
add
mov
jl
loope
xor
xchg
push
sbb
sbb
inc
mov
out
dec
clc
sub
adc
push
out
mov
insb
push
xor
loopne
lret
out
inc
push
mov
dec
ds
outsl
sbb
add
insl
adc
dec
es
sub
mov
jge
fisttpll
mov
and
cmp
dec
add
fadds
shll
push
jb
jb
add
mov
add
push
add
push
out
mov
mov
test
test
je
fs
sbb
insl
notl
lods
cmp
fbstp
add
mov
movsl
mov
cmp
lret
add
xor
pop
mov
call
movhps
dec
frndint
mov
sarb
orl
scas
or
push
dec
or
and
dec
xor
mov
aam
fdivr
nop
jmp
pop
mov
fcompl
fmuls
pushfw
inc
xlat
adc
out
or
aad
mov
rcl
mov
test
test
and
xchg
std
add
cmp
in
mov
imul
xor
push
mov
pop
pop
pop
in
xchg
lret
push
push
pop
cmp
aaa
mov
cltd
idiv
lret
inc
mov
cwtl
int3
mov
mov
cwtl
andl
pusha
add
fcoms
mov
xorl
loopne
mov
out
stos
and
leave
inc
mov
add
mov
dec
icebp
mov
inc
push
mov
leave
movsl
fsubs
mov
sub
add
xchg
outsl
mov
push
addl
cmp
inc
cmc
les
add
inc
fiaddl
cmp
cmpb
add
adc
shrb
andl
adc
mov
mov
insl
es
xor
xchg
outsl
inc
or
test
jle
into
add
iret
cwtl
push
jae
mov
xor
or
clc
sti
jge
rol
adc
aaa
aam
dec
xchg
sub
movsl
daa
mov
cmp
scas
scas
sub
jmp
rolb
inc
push
push
mov
push
or
inc
je
mov
jbe
or
mov
and
sbb
sbb
sbb
sbb
mov
xchg
in
push
or
jae
push
cmpsb
mov
add
mov
sbb
xchg
dec
insb
lods
jbe
push
in
jp
add
data16
negl
pop
iret
scas
lock
push
push
sub
dec
insb
add
add
xor
cmp
lcall
sbb
sbb
andb
testb
adc
add
aas
xchg
icebp
popa
fucomi
pop
cmp
cmp
and
loope
gs
lcall
and
jle
rclb
test
mov
add
push
mov
aaa
or
test
pop
add
movsb
cmpsl
cmp
xchg
int3
jbe
xlat
dec
fs
add
leave
jne
lock
lods
addl
cld
xchg
clc
add
mov
out
hlt
push
pop
jge
movl
shr
xchg
jno
faddl
test
push
ret
dec
fcomps
adc
and
sbb
mov
insb
std
mov
sub
mov
int3
adc
int
push
mov
out
test
mov
jb
or
dec
inc
jge
test
cmp
push
mov
add
mov
sbb
push
fisttps
and
push
push
pop
cmp
les
adc
sub
sarb
dec
shrb
xchg
jne
add
jns
dec
outsb
push
dec
shl
mov
outsl
out
icebp
dec
imul
dec
insb
or
mov
adc
pop
xchg
movsb
dec
push
inc
xchg
inc
sbb
or
scas
xorl
jnp
call
adc
insl
pop
ret
and
add
loope
loopne
cmp
imul
jmp
adc
mov
movsl
add
je
cltd
insb
insb
jno
jo
daa
adc
jge
and
fistpl
xor
ud0
mov
test
add
movb
or
lcall
push
inc
xor
je
sbb
dec
jno
add
fs
xor
xor
pop
adc
adc
xorl
mov
inc
inc
or
push
aad
ret
jnp
push
and
push
pop
mov
lea
sbb
imul
dec
xor
xchg
je
aaa
jbe
mov
pusha
ja
jo
push
sub
or
shlb
bound
add
xchg
sub
mov
mov
jge
xchg
adc
dec
out
xchg
shl
xor
mov
jge
jo
push
jbe
jb
fmuls
or
inc
adc
xlat
inc
push
iret
fdivl
mov
ret
arpl
loope
popa
je
aad
inc
jecxz
jg
push
mov
push
jmp
xor
je
dec
sbb
inc
mov
pusha
xchg
inc
push
jbe
pop
add
and
aam
inc
inc
dec
fs
lea
sbb
addl
fldcw
lock
inc
mov
lock
mov
push
adc
aam
push
in
mov
mov
or
pop
fs
orb
and
fisttps
mov
or
andl
pusha
inc
adc
sarb
xor
push
cmp
mov
shl
sub
cmpsl
stos
dec
les
pop
pushf
pop
xchg
xchg
stos
push
out
mov
dec
inc
shrb
pop
imull
add
test
push
fmul
lret
mov
rolb
call
inc
mov
inc
or
dec
or
ret
or
lods
inc
lcall
jmp
leave
jo
sbb
andl
add
or
xchg
cwtl
pop
adc
sub
cmovno
into
cli
add
daa
loop
out
in
test
hlt
jl
imull
lds
loopne
jno,pt
shl
inc
mov
testl
test
xor
mov
add
mov
decl
ret
inc
and
rorl
adc
mov
cmpsb
add
inc
nop
push
insl
jne
pop
adc
imul
xchg
push
mov
jl
push
inc
lods
jae
push
push
pusha
cwtl
in
pop
es
mov
mov
pop
lods
jmp
pop
pop
xor
nop
pop
push
push
hlt
or
add
les
aas
mov
pop
lea
add
add
xchg
in
mov
mov
mov
shrb
aas
pop
adc
jne
test
mov
xchg
adc
mov
js
rclb
jae
cmpl
mov
push
rolb
push
addl
mov
dec
lods
inc
and
dec
pop
lods
push
or
mov
ds
mov
xor
shlb
add
jns
adc
cmp
xchg
or
sti
sub
xchg
add
sub
sub
loopne
in
test
in
pop
xchg
xchg
lock
push
xchg
push
xor
sub
das
mov
in
mov
ds
mov
xor
or
loopne
or
push
push
fmuls
in
rcr
mov
dec
sti
sbb
jbe
push
push
xchg
mov
stc
je
mov
dec
mov
mov
inc
cld
fcmovnb
loopne
add
ret
imul
add
or
les
pop
daa
movsb
into
dec
pop
add
inc
popf
adc
pop
mov
jbe
mov
adc
outsl
test
mov
aas
add
sti
dec
ja
je
or
je
or
sub
sub
mov
scas
cmp
rclb
sbb
pop
fiaddl
add
and
jne
lcall
cmpsb
mov
clc
push
push
jmp
cmp
adc
dec
movsl
stc
jbe
adc
inc
push
imul
add
push
push
push
lds
test
out
mov
dec
lods
or
adc
push
sub
xor
mov
mov
mov
es
sub
inc
mov
gs
lds
mov
shlb
pop
or
rolb
or
push
pusha
mov
daa
sub
push
mov
adc
or
add
test
fiaddl
push
mov
cmp
es
fsubl
mov
sbb
mov
andl
arpl
data16
add
push
pop
inc
push
adc
pop
lea
cmp
fnsave
or
push
adc
xchg
and
jle
xchg
push
pop
jno
loopne,pt
test
pop
in
jnp
cmp
fisttps
push
lea
or
ja
inc
mov
sbb
sbb
mov
or
xor
cmp
inc
adc
xadd
jge
dec
xchg
rorb
cmpsl
and
das
jge
cmp
adc
pop
faddl
sub
xchg
aaa
add
sub
and
sti
je
subb
lcall
sbb
xchg
fimuls
pop
loopne
mov
push
push
xor
add
cmp
xchg
mov
loopne
test
in
push
push
mov
and
in
popa
mov
stos
xor
push
xchg
xchg
sti
jo
xor
xchg
xchg
inc
movsb
imul
mov
inc
and
dec
je
pop
push
fildl
inc
repnz
ja
or
leave
cltd
mov
imul
mov
rolb
mov
mov
call
out
sbb
cmp
call
lcall
xor
push
call
xchg
outsw
inc
movsl
push
aaa
jnp
push
sbbl
scas
and
in
sbb
mov
ret
pop
mov
fcoml
enter
in
pop
pop
push
rcrb
add
push
mov
xchg
xor
aam
int3
xchg
rcl
cmpl
push
inc
and
push
inc
push
fisttpll
iret
push
mov
jbe
cmp
add
add
jl
cmp
jmp
sbb
loope
dec
test
mov
loopne
test
dec
fidivl
mov
sbb
cmc
popf
mov
mov
sbbl
adc
or
add
push
or
sbb
into
xchg
or
jmp
jle
sbb
and
loop
pusha
lock
rorl
or
hlt
adc
push
mov
xchg
rorb
dec
loop
mov
mov
mov
les
adc
push
xor
les
inc
and
push
shrl
in
cmp
xor
inc
enter
outsl
xchg
inc
push
jne
inc
sub
cmp
jne
sbb
dec
in
fimull
popf
push
sbb
in
cmp
faddl
mov
cmp
out
mov
pop
jmp
mov
push
jo
jnp
sub
pusha
sub
daa
orb
sbb
je
and
sub
sbbl
shlb
inc
or
or
in
out
mull
inc
or
mov
add
lods
stc
fwait
aaa
adc
dec
sub
and
sbb
daa
cmp
mov
pop
push
or
push
lret
add
push
xchg
mov
add
dec
stos
inc
adcl
test
in
push
movsl
inc
add
inc
adc
out
dec
loope
add
push
cmp
xor
outsb
and
add
sbb
add
sbbl
add
hlt
call
xor
cmp
incl
pop
mov
xchg
faddl
cmc
mov
mov
inc
inc
inc
dec
dec
pop
jae
ret
in
adc
add
cmpsl
adcb
dec
mov
xchg
cmp
xchg
xchg
mov
mov
push
or
scas
mov
or
add
shlb
xor
pop
inc
loope
dec
nop
in
pop
or
push
sub
mov
cmp
push
add
cmp
inc
adc
fiaddl
lods
shlb
push
xor
cli
pop
xchg
and
pop
insb
push
push
pop
loopne
xchg
push
xchg
rolb
test
or
jbe
loopne
sbb
mov
out
jae
mov
cmp
push
cmp
push
filds
xor
adcb
enter
inc
dec
jecxz
jb
dec
lods
rorb
lret
jg
add
add
pop
push
xor
sbb
in
loopne
or
sti
pop
pop
jne
adc
call
sub
in
or
enter
pusha
mov
mov
call
cli
stos
sbb
mov
ja
push
movsb
or
shl
arpl
push
or
ja
out
daa
icebp
jg
out
dec
dec
sbb
or
clc
add
mov
sti
sarb
sbb
xor
inc
or
adc
add
test
dec
scas
pop
out
popa
shll
push
arpl
xchg
and
pop
sbbl
sbbb
pop
push
minps
cli
adc
mov
outsb
or
bound
imul
faddl
add
pop
movb
stos
jb
push
sbb
push
mov
adc
sub
or
pop
ret
jle
jbe
inc
jmp
mov
les
mov
mov
nop
pop
sti
mov
outsb
scas
fmull
dec
adc
movsl
ret
pop
sbb
bound
in
test
push
sub
dec
xchg
push
sub
loopne
and
adc
and
add
sti
sub
fisubs
testl
out
xor
sub
add
sbb
pop
in
jecxz
fisubrs
push
test
pop
mov
in
aaa
stos
mov
clc
clc
or
push
fs
xchg
mov
xchg
mov
aad
je
les
daa
push
or
sub
das
test
jb
add
jmp
adcb
call
lea
add
adc
sub
movsl
es
cmp
sbb
cmpsl
push
fcoms
sbb
and
loopne
mov
add
cmpb
setb
dec
dec
cli
add
pop
je
add
jnp
or
push
cmp
pop
adc
ljmp
outsb
mov
sbb
xchg
inc
adc
inc
popa
adc
ret
bound
pop
xchg
push
mov
cmp
lcall
add
add
mov
in
fs
sbb
inc
pop
jmp
cmp
cli
fiadds
or
mov
sub
mov
cmp
cmp
push
pop
jmp
push
sahf
sbb
lea
dec
and
pushf
push
adc
and
shrb
stc
cltd
pop
lods
sti
inc
pop
les
inc
clc
push
cld
push
dec
or
sbb
add
xchg
add
notb
imul
jmp
jmp
jb
sbb
mov
pop
add
test
push
pop
and
arpl
cmp
push
sbb
mov
rcrb
xor
lahf
adc
sahf
je
dec
out
add
push
das
add
xor
enter
andl
pusha
sbb
xchg
and
xchg
push
and
mov
push
push
inc
shlb
or
iret
addr16
or
add
mov
xor
xor
and
push
pop
jns
std
mov
add
lea
or
ja
lods
mov
cmp
mov
inc
enter
push
movsb
bnd
adc
sbbl
xor
push
test
sub
inc
scas
xor
push
mov
push
xor
cmp
in
or
dec
inc
iret
add
cmp
or
adc
mov
jns
sbb
or
xchg
or
loop
dec
and
add
sahf
xchg
out
mov
push
aam
sbb
sbb
sub
addr16
push
mov
cmc
push
xor
jmp
push
fisttps
nop
and
dec
clc
mov
jecxz
push
mov
rol
out
fisubl
and
sub
xchg
jne
mov
cmp
or
push
test
in
test
jp
xchg
pop
mov
lock
ret
dec
into
adc
test
pcmpeqw
mov
cs
push
inc
sbb
imul
les
sbb
jmp
and
jmp
pushl
sub
sub
mov
lods
xor
icebp
push
xor
mov
xor
mov
mov
fdivr
mov
or
lock
push
sbb
push
push
movsl
shll
xor
adc
shl
push
stc
fdivr
cmp
or
cmp
cmp
add
fmuls
or
jecxz
dec
shrb
jae
loopne
lret
jl
clc
sub
pop
or
inc
ret
adcb
xor
xor
mov
mov
out
iret
inc
xor
loopne
filds
in
push
in
in
and
scas
jb
mov
xchg
call
cmp
jo
add
sti
sarl
or
mov
adc
scas
mov
fdivp
or
cld
adc
push
mov
adc
add
pushf
pop
dec
or
daa
pop
call
daa
mov
jne
pop
orl
mov
adc
mov
daa
or
adc
mov
or
xchg
add
xor
js
inc
push
cmp
xchg
mov
pop
fcoml
cli
or
rcrl
or
jne
fnstcw
push
rcrb
pop
dec
or
xchg
mov
xor
add
mov
addr16
xchg
in
popa
jge
xor
mov
lea
cltd
xor
inc
pop
cmp
roll
push
jbe
inc
mov
sbb
imul
push
add
mov
mov
cmovl
inc
jns
mov
sbb
rclb
push
rclb
mov
pop
inc
inc
dec
fstps
int3
mov
pop
cmp
or
xchg
out
push
in
inc
adc
stos
and
xchg
or
add
cmp
push
mov
mov
or
push
pop
mov
lock
cmp
adc
jl
cmp
jae
mov
inc
mov
and
out
pop
cmp
push
jne
pop
adc
add
pop
adc
or
loopne
cmp
hlt
ret
add
stos
inc
jmp
inc
icebp
sbb
addb
test
loop
or
or
add
and
pop
testb
out
hlt
loopne
jl
repnz
sbb
popf
mov
or
add
call
mov
add
or
push
sti
ret
mov
cmp
sahf
or
test
xlat
add
add
loope
or
aad
and
movsl
cmc
rolb
xchg
dec
add
jnp
push
dec
or
in
inc
lahf
shrb
pusha
lock
inc
dec
repz
cld
loopne
mov
fs
inc
inc
nop
movsb
scas
sbb
and
lret
inc
mov
pop
or
jp
fcompl
pop
mov
psadbw
mov
pusha
push
push
lret
push
or
and
lret
hlt
ja
test
sahf
add
aad
xor
icebp
in
test
fs
jnp
sbb
adc
sub
or
jl
jg
inc
test
cmp
mov
rcrb
jge
je
andl
cld
inc
ficoml
test
push
nop
fisubrl
mov
test
mov
cmp
jbe
loopne
lcall
push
xor
or
mov
dec
sbb
pop
cmp
pop
and
icebp
loopne
xchg
andl
jno
mov
fs
fs
dec
dec
repnz
add
dec
pop
lcall
mov
push
push
pop
cld
add
or
or
lahf
inc
lock
dec
stc
add
test
dec
repz
push
sbbl
jo
add
mov
cmp
push
sbb
ss
sbb
push
pop
adc
out
pop
stc
sahf
sbb
sub
leave
inc
mov
xor
push
mov
or
cwtl
rolb
and
jo
pop
mov
repnz
shlb
nop
adc
iret
mov
pop
rcll
lods
xchg
and
add
pop
dec
sbbl
mov
fadds
add
sbb
xor
pop
or
mov
ljmp
push
mov
inc
push
cmp
jb
cmp
cmp
jge
sub
sub
xor
inc
jmp
std
out
sub
cmp
push
push
push
imul
jle
pop
jo
cmp
mov
add
sub
lock
add
push
add
je
push
or
clc
push
clc
fiadds
jo
lret
testl
or
adc
pushw
js
sbb
jmp
ror
pushf
mov
test
andb
inc
add
and
or
cmp
cwtl
xor
in
fmuls
sub
and
dec
push
subb
dec
clc
dec
mov
lahf
xchg
lock
iret
or
cmp
aas
mov
in
xchg
cld
movsl
add
adc
enter
enter
enter
jo
dec
lea
push
sbb
mov
mov
inc
rorl
adc
push
mov
std
insb
xor
test
mov
out
dec
push
xor
add
ds
cmp
leave
stos
xor
in
mov
in
dec
mov
movsb
nop
test
leave
rolb
inc
adc
test
pop
sub
pop
ja
loope
dec
mov
sbb
in
imul
dec
push
push
lods
sbb
sub
rclb
sub
lods
add
shrd
or
add
shlb
pop
xchg
jnp
lret
mov
lret
fidivs
adc
pop
outsb
pop
sub
fisubs
shl
cld
xchg
xchg
repnz
test
sbb
push
pop
xchg
mov
jmp
adc
aad
xor
shlb
adc
fwait
dec
dec
fdivr
pop
js,pn
ss
add
inc
popa
adc
pop
dec
inc
adc
xchg
nop
jmp
adcb
inc
pop
mov
rep
mov
mov
sbb
cwtl
add
add
push
xor
ja
hlt
mov
cld
cmp
and
push
xchg
sbb
cmp
test
mov
andb
subl
mov
jle
in
leave
jo
ret
push
mov
xor
or
mov
dec
les
daa
xor
adc
inc
mov
jb
xor
jmp
sahf
and
mov
add
and
rcrb
add
mov
jg
loope
out
cmpsl
push
andb
andps
sbb
xor
pop
in
add
mov
or
xchg
or
push
je
mov
or
push
nop
stos
xchg
dec
insb
hlt
add
les
cmp
xor
shll
sbb
jl
push
clc
rcll
das
lock
push
std
ljmp
cld
or
icebp
dec
int
call
clc
iret
lods
mov
inc
jno
jmp
push
inc
xchg
jae
test
repz
lods
jbe
sub
lea
pop
add
add
push
push
loopne
pop
mov
cmp
jb
enter
cld
and
test
dec
dec
and
iret
jne
mov
push
or
divb
imul
lret
sbb
les
and
cmp
add
cld
loope
mov
xor
adc
ficomps
testb
xchg
mov
sub
jne
fwait
inc
mov
and
mov
fcomps
rol
push
test
cmp
int
sbb
jecxz
sbb
inc
cltd
in
shlb
mov
inc
pop
xlat
pushf
add
inc
push
pop
inc
sti
jl
test
jg
push
cmp
inc
mov
or
jo
mov
ret
mov
adc
or
xor
rorl
fbld
shr
not
shlb
push
adcl
xchg
mov
xor
push
xor
add
inc
jbe
je
lock
xlat
addr16
ja
mov
inc
pop
stos
mov
jl
or
pop
pop
push
mov
xchg
cmp
pop
pop
inc
loopne
add
dec
push
dec
xchg
adc
and
add
cmp
ljmp
in
lcall
jno
inc
add
mov
add
cmpsb
ljmp
mov
fs
decl
push
cmp
add
scas
or
aad
and
push
xchg
push
lods
ficoms
lock
or
mov
adc
test
add
adc
push
mov
add
cltd
mov
jns
push
sub
or
es
or
in
mov
xor
inc
into
inc
pop
jo
lock
sbb
sbbb
out
or
hlt
push
lds
pop
pop
mov
adc
or
push
inc
mov
arpl
mov
mov
stc
adc
xchg
dec
hlt
cwtl
cmp
call
ret
mov
aam
cmp
or
je
cmp
jae
sub
xor
and
out
shlb
adc
mov
scas
mov
dec
sub
or
xchg
or
cmp
scas
adc
subb
push
ret
ja
xlat
mov
pop
cmp
subl
add
rep
bound
mov
or
adc
jmp
movsl
mov
sub
jae
mov
sub
jno
roll
sbb
outsl
xor
mov
arpl
and
adc
pop
clc
jne
push
push
push
push
pushf
cltd
xchg
sbb
jae
xlat
mov
mov
push
adc
mov
loopne
adc
popaw
and
insb
je
inc
sub
sbb
and
adc
xchg
add
and
add
addl
xor
addb
ljmp
popa
xchg
pop
mov
jne
pop
popf
adc
cmp
xor
shrb
xor
xor
xor
pop
pop
push
sub
dec
add
add
mov
out
push
pushf
jo
dec
clc
push
mov
clc
insb
pop
cmp
inc
hlt
cmp
ss
sub
movsb
lcall
xor
mov
jl
aaa
adc
push
inc
popa
shlb
mov
out
cld
sub
addl
xor
shlb
adc
repnz
pop
les
push
cmp
aam
imul
cld
clc
pop
xchg
into
add
lret
loop
pop
scas
mov
jnp
pop
adc
push
xor
and
dec
jmp
adc
or
ficoms
andb
xchg
dec
inc
add
loop
sub
cld
orb
fisubrs
push
mov
movb
xchg
or
mov
dec
jne
mov
xchg
ret
adc
jno
incl
xchg
sarl
add
aam
dec
rclb
mov
xchg
mov
add
mov
adc
jne
push
jae
push
push
and
add
xchg
jle
pop
mov
bound
cwtl
xchg
dec
push
lods
push
sbb
in
sub
cmp
add
decb
sub
pop
sbb
jmp
rcll
xchg
and
or
int3
add
movsl
iret
shl
push
jmp
mov
jge
je
mov
dec
rol
rorb
mov
testl
and
pop
cltd
cmp
add
loopne
jl
subb
gs
add
push
push
jo
cwtl
push
or
sub
subb
xchg
les
ret
es
push
test
inc
pushf
lods
cli
or
inc
sbb
ret
jae
add
push
pop
mov
into
call
icebp
call
adc
mov
lds
int3
xchg
bound
pop
ljmp
or
adc
int3
adc
rorb
jge
fs
mov
sub
int
and
fs
adc
or
mov
std
add
testb
movsb
dec
aad
sub
add
loop
and
or
dec
pushf
dec
dec
dec
xchg
ret
popa
insb
loope
test
push
adc
rorl
or
cmp
adcl
mov
test
pushf
or
cmpsl
das
add
outsb
cmp
je
mov
shll
jecxz
imul
sar
cmp
jbe
sarl
clc
inc
or
add
jmp
ud2
int3
push
ret
inc
mov
or
in
adc
mov
faddl
xchg
sbb
inc
xchg
push
xchg
nop
popa
sub
cmp
movsb
add
mov
imul
mov
add
les
push
cmp
xor
sbb
push
add
pop
insb
and
ja
lea
mov
fdivp
inc
xchg
subl
jmp
adc
rolb
pop
push
stos
aad
mov
std
cmp
jmp
bnd
pop
in
aad
test
mov
and
lea
lea
mov
or
imul
notb
testb
add
rorb
mov
xor
push
aas
nop
mov
sub
cmpsb
imul
pop
or
cmp
pop
daa
sbb
mov
enter
adc
loopne
add
loope
pop
sti
or
jb
and
xor
jecxz
test
dec
jnp
lods
ljmp
arpl
dec
push
mov
jne
sub
lea
arpl
int
pop
cmp
adc
or
push
cmp
jb
pushl
ja
inc
adc
sbbb
pop
jmp
xor
jae
xchg
or
mov
inc
in
and
scas
mov
rol
adc
xor
in
andb
pusha
cmc
jnp
std
xchg
xorb
xor
cltd
movsl
out
adc
mov
sub
mov
jo
mov
or
inc
and
dec
push
or
xchg
adc
xchg
mov
mov
add
mov
mov
push
push
inc
ret
cmp
cmp
push
scas
lret
sbb
mov
scas
repz
daa
or
mov
sub
and
jb
in
add
daa
fldt
mov
mov
js
ja
leave
insl
jb
fninit
arpl
nop
arpl
adc
add
sub
cmp
dec
enter
add
mov
lahf
jmp
das
and
adc
pop
and
mov
fwait
daa
mov
movl
pop
cmp
mov
or
cmpsb
push
pop
arpl
cmp
add
and
mov
mov
add
popa
das
enter
inc
mov
sub
push
dec
jno
sbb
cmp
mov
inc
mov
sbb
and
outsl
mov
xchg
sbb
xchg
push
xchg
and
sbb
aam
xchg
xchg
daa
sub
inc
push
nop
sub
nop
inc
push
sub
inc
movsb
or
in
add
jmp
push
push
add
inc
push
mov
out
das
xor
or
xor
mov
mov
cli
dec
pop
push
adc
add
jmp
in
loope
int3
in
sarb
cld
shl
pushf
or
out
pusha
push
call
push
add
mov
aas
pop
mov
dec
aaa
shl
or
adc
adc
sbb
repnz
rcrb
jnp
pop
insb
loope
lods
cld
cli
inc
add
test
dec
or
push
adc
orl
sbb
dec
adc
dec
xlat
mov
sti
adc
pop
adc
add
sti
push
adc
push
add
adc
adc
shrb
lret
cmp
imul
ja
inc
addb
inc
cmp
mov
sar
dec
sub
xor
add
mov
and
dec
push
inc
mov
push
clc
test
out
les
or
or
jno
mov
fldt
insl
jge
and
fcoms
and
sarl
sbb
inc
sbb
sbb
fiaddl
pushf
outsb
mov
ret
data16
push
cwtl
sbb
pop
add
js
ds
pop
jge
aad
adc
int
lcall
fstps
lods
movaps
insb
pop
out
fistps
push
imul
scas
icebp
addr16
add
xchg
push
cmpsb
fwait
jl
xor
mov
push
push
lcall
es
mov
push
jmp
xor
in
inc
pop
call
sub
jmp
rorb
je
iret
pop
rolb
add
jns
jne
cmp
int3
push
dec
das
scas
adc
pop
test
and
sbb
sbb
rol
call
and
in
test
in
or
jno
inc
call
lock
je
les
inc
cs
xchg
sbb
cld
mov
or
mov
push
cmpb
int3
loope
push
jae,pn
outsb
sbb
xchg
rcrb
xor
sbb
sbb
mov
or
jl
push
add
pop
push
inc
adc
cmc
test
je
imul
js
jo
in
mov
js,pn
fildl
lock
pop
mull
int3
push
push
mov
andl
nop
cmp
in
loopne
push
loop
in
inc
add
out
ret
sub
push
or
add
jo
lret
mov
jne
call
or
mov
pop
inc
sbb
sub
pop
jmp
cmp
xchg
shlb
xor
add
inc
push
push
or
mov
add
sbb
dec
mov
pop
jne
mov
push
addl
repz
pop
add
push
loope
in
ret
lock
push
repnz
sbbl
loopne
inc
rcll
pop
or
cmp
ljmp
dec
inc
or
nop
ja
icebp
adc
or
adc
clc
sarb
movsl
mov
imul
or
mov
sbb
sbb
xchg
lods
mov
stc
data16
lock
sahf
clc
push
popa
iret
cltd
shrb
push
add
loopne
enter
sub
adc
adc
mov
xor
ret
push
ljmp
xor
xchg
inc
mov
xor
call
shl
outsl
cmp
insb
mov
xchg
pop
std
sbb
iret
xchg
inc
sbb
dec
push
nop
jae
lock
adcl
pushf
daa
pop
lcall
or
data16
push
ret
and
push
xchg
pop
popf
lock
mov
inc
dec
add
xor
add
mov
adc
inc
insb
mov
xlat
mov
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
push
sbb
cmp
aas
lods
mov
sti
mov
cmp
mov
pop
cld
out
jb
sbb
xor
je
cmp
je
or
pop
sbb
pusha
lds
lcall
iret
jae
or
mov
test
sbb
sbb
pop
pop
mov
testl
ror
and
mov
xchg
inc
dec
dec
inc
xlat
or
or
test
add
jl
leave
lock
dec
inc
lods
aam
lcall
mov
pop
add
push
hlt
jge
xchg
aaa
sub
sarb
movl
or
mov
sub
lret
andb
mov
loope
les
aam
add
test
cmpsb
jbe
je
add
cld
lock
int3
imul
mov
mov
mov
inc
xchg
mov
and
jne
sahf
add
cmp
xchg
cmp
lods
sarl
pop
gs
cmpsb
push
aam
mov
adc
inc
into
fst
fadd
or
testl
inc
push
dec
sub
stc
fsubl
sub
push
fcomp
push
adc
subb
mov
pop
mov
mov
cmpsl
jne
push
push
shlb
call
out
pop
xchg
shl
std
loopne
ret
cmp
sbb
leave
fcomps
test
lea
mov
fisubrl
aas
jo
sub
lods
popl
jnp
mov
inc
in
ja
mov
xchg
je
xor
push
popa
pop
dec
and
mov
mov
sub
fsubrs
sub
sbb
in
xor
xchg
add
repz
lret
push
push
pop
or
iret
pop
pusha
fs
push
and
and
cmp
lret
test
mov
mov
mov
lea
sub
push
and
mov
adc
and
xchg
sbb
pop
sbb
enter
adc
aas
dec
dec
adc
loopne
insb
aas
dec
je
adc
mov
push
jne
push
sub
out
xor
inc
aas
mov
push
xchg
mov
and
cmp
lahf
add
xchg
add
imul
aaa
pop
and
dec
adc
je
cmp
mov
xchg
shrl
xlat
push
scas
adc
push
pop
or
loop
rclb
jecxz
notb
inc
cmp
inc
pop
inc
add
fnstsw
and
pusha
push
push
jo
pusha
imul
push
cmp
mov
xchg
dec
sbb
pop
mov
push
push
out
xor
pop
or
cwtl
jbe
jmp
push
enter
por
sub
pop
jb
and
mov
sar
in
pop
xchg
dec
sbb
pop
rol
loope
sbb
add
out
pop
fildl
sarl
mov
test
xchg
xlat
mov
test
adc
cwtl
sbb
sbb
in
pushf
jnp
xor
dec
or
and
pushf
jnp
jmp
cmc
sbb
mov
lahf
adc
sub
mov
inc
or
mov
inc
sbb
mov
les
in
add
pop
rcll
jg
imull
xchg
mov
fwait
movb
fsubrl
adc
dec
pusha
pop
cld
in
movsb
push
mov
testb
add
xor
lods
scas
dec
jecxz
adc
lock
mov
test
je
or
je
mov
push
aaa
cmp
adc
jg
mov
punpckhbw
push
fiaddl
pop
xor
push
xchg
inc
sar
incb
xchg
cmp
mov
add
xor
and
repnz
add
fs
push
jle
dec
daa
stos
lock
jne
and
jne
adc
inc
mov
popa
sbb
or
push
inc
int
insl
inc
repnz
mov
sub
jne
shlb
sub
ficomps
and
fisttpll
push
or
fs
inc
int
add
push
lods
add
test
and
clc
dec
fnsave
or
sbb
mov
lds
adc
lock
mov
mov
mov
in
jg
pop
imul
adc
mov
arpl
or
and
cmp
jmp
frstor
cmp
mov
inc
sub
add
fsub
or
add
or
cltd
or
orb
loope
sbb
xor
cld
mov
cmpb
fildll
pop
or
jle
enter
push
fisttpll
stc
or
add
push
lea
push
dec
cmp
xchg
inc
inc
cld
inc
test
fsubrs
sti
push
pop
xchg
inc
hlt
pop
and
inc
ja
cli
nop
push
mov
pop
cmp
sub
hlt
jg
mov
sub
popa
das
xchg
add
jo
imul
js
push
ret
orps
dec
mov
xor
xor
xchg
call
clc
push
sub
sbb
sub
lea
xchg
das
inc
xor
jo
sbb
lret
pop
ret
cmp
adc
pop
movsb
cmp
lods
xchg
mov
es
mov
aaa
pop
ret
out
int
dec
adc
push
mov
loopne
imul
add
push
xchg
dec
add
add
or
jns
jb
adcb
push
sub
adc
inc
push
sti
add
mov
insb
add
or
add
xor
fcmovbe
dec
jmp
popa
popf
inc
je
aaa
cmovle
sbb
jbe
pop
mov
mov
or
mov
gs
mov
in
push
pushf
add
faddp
arpl
cs
and
mov
cmp
cld
sub
jmp
add
xor
adc
sub
xor
sarb
js
rorb
pop
push
sub
mov
es
mov
mov
jmp
lds
jo
mov
lea
clc
pop
cmp
dec
or
or
mov
sbb
xor
xor
lret
sub
adc
and
out
jmp
in
cmp
je
sbb
cmp
push
xchg
or
xchg
out
push
inc
sbb
dec
out
xchg
jl
divb
nop
jp
xchg
and
sub
sbb
inc
sbb
setp
ret
dec
mov
xor
push
dec
pop
inc
pushf
or
xor
pop
jle
add
adc
dec
push
cltd
aaa
sti
jae
sub
push
mov
fsubrs
cltd
push
pop
je
fldl
das
dec
sti
pop
rcll
fstpl
dec
cld
ss
data16
inc
jne
adc
adc
jne
jns
sahf
sub
or
jne
add
cli
jne
or
scas
aas
insl
add
out
into
fstpl
andl
in
jne
mov
mov
fdivrs
cltd
and
fstpt
jmp
mov
push
jg
fildl
xchg
aam
arpl
test
mov
jnp
fstl
jecxz
scas
mov
ljmp
dec
sbb
push
and
insb
jl
cld
scas
push
pop
les
sub
inc
cmp
pop
ss
add
js
enter
mulb
outsb
mov
pop
adc
fmulp
loopne
imul
push
lods
and
or
mov
jge
jne
cmp
inc
in
out
lret
pop
loop
or
fimuls
outsl
neg
mov
movsl
pminub
push
push
pop
add
insb
xor
or
arpl
daa
and
xchg
adc
je
and
ja
cmovnp
fmull
add
push
mov
test
pushf
xchg
cmpsl
hlt
xor
dec
jno
jbe
jo
js
add
push
dec
and
dec
sub
cwtl
cmp
repnz
jge
and
aad
mov
push
mov
add
sbbb
xorb
push
insb
xor
sub
jmp
xor
add
and
rolb
aam
lahf
inc
sub
testl
push
mov
cmp
push
and
and
js
stos
or
addl
fcomps
add
repz
xor
sbb
cmp
add
or
popa
sub
clc
pop
test
ret
push
loop
jo
pop
xor
mov
ja
lods
push
addr16
jmp
mov
add
xchg
mov
ret
push
rcll
mov
jno
inc
xchg
xchg
mov
nop
mov
add
lcall
cmpl
shll
add
add
sbb
cltd
nop
inc
cs
rolb
push
jo
inc
dec
add
xor
fmuls
sarb
test
loopne
or
enter
mov
cmpsb
add
push
or
adc
and
add
sub
jb
rolb
push
ror
enter
jb
sarb
mov
test
mov
mov
dec
and
xor
lods
sti
mov
fidivl
xchg
out
dec
add
push
or
push
jmp
or
cmp
push
xor
pop
jae
pop
add
pop
push
xchg
cwtl
mov
ret
sti
pop
inc
xor
mov
pop
add
xchg
and
adc
xchg
fidivl
inc
xchg
add
or
fwait
cli
shl
add
add
mov
fistps
vmread
add
sbb
or
add
xor
adc
xchg
inc
gs
jbe
leave
fucomi
and
cld
cmp
jl
add
dec
lret
cmpsl
pop
das
sub
mov
lods
pop
adc
push
call
sub
xor
or
xchg
dec
inc
test
mov
adc
push
jns
push
dec
dec
pop
frstor
push
pop
call
push
pop
mov
xchg
call
push
call
sub
inc
adc
mov
xchg
cmc
push
les
test
sub
mov
cmp
jmp
into
orl
add
xor
lds
popf
fsubl
and
hlt
mov
adc
add
andl
jl
pop
call
js
orb
xchg
inc
loopne
sbb
adc
bound
inc
jne
xor
push
xchg
cmp
cmp
push
add
add
mulb
jmp
lock
inc
mov
xchg
call
add
out
in
inc
add
iret
movsl
leave
push
inc
sub
push
and
jbe
frstor
cmpsb
lock
popw
jno
fprem
mov
add
pop
jle
pop
rolb
lret
or
fldl
fcoml
inc
cmp
scas
pop
add
inc
lea
or
pop
shlb
dec
cmp
mov
loope
mov
pop
push
div
inc
add
sub
mull
pop
in
inc
lods
or
stos
xor
jo
add
sti
daa
lcall
fsubs
cli
xor
ret
imul
ljmp
pop
in
sub
cmp
push
dec
inc
adc
arpl
sub
xor
subb
push
mov
sub
adc
mov
lea
sub
loop
insl
rcrb
fisubrs
push
idivl
int3
cld
outsb
add
mov
push
pop
iret
pop
sbbl
push
test
rclb
inc
ret
clc
ja
outsb
rcrb
enter
add
mov
pop
in
testb
outsb
test
mov
xchg
popf
pushf
mov
pop
sbb
push
js
and
lcall
outsl
dec
adc
sub
aam
pop
repnz
or
jb
leave
ret
pop
push
jle
cmc
dec
mov
and
pop
push
cmpsb
or
hlt
or
in
xor
jne
xchg
mov
in
imul
dec
icebp
or
pop
inc
inc
cmp
lods
push
push
mov
cmp
cmpsl
in
mov
lahf
sub
fistps
lea
lcall
fimull
ficoml
pop
xchg
ret
xchg
adc
pusha
imul
add
lahf
and
adc
lahf
mov
add
imul
lds
cmpb
movsl
movsb
push
in
andb
jmp
inc
lahf
and
bound
lahf
xor
pop
lods
pop
daa
dec
cmpsl
jo
scas
push
into
leave
mov
test
dec
fwait
in
push
mov
js,pt
jo
inc
xlat
jae
push
out
or
mov
pop
xor
les
push
shll
sub
imul
mov
cld
lods
cmp
pusha
add
cltd
and
ret
test
test
fidivl
sbb
leave
pop
jp
mov
or
add
sub
addr16
rcrb
xchg
sbb
ss
test
imul
xor
fsubrl
mov
sbb
pop
cmpsl
and
adc
arpl
mov
rolb
addr16
ret
jo
in
and
and
mov
xlat
xchg
mov
adc
aam
xchg
sub
inc
daa
loope
mov
push
mov
fidivl
xlat
sbb
out
jl
jmp
aaa
repnz
popa
jne
mov
fcoml
mov
shrb
mov
jecxz
test
popf
or
call
jmp
sti
int3
sub
push
rorb
aaa
mov
sbb
es
mov
add
ss
pushf
push
mov
adc
test
neg
and
lahf
and
inc
add
fnstsw
adc
shrl
adc
js
andl
push
inc
mov
sub
sbb
dec
mov
dec
inc
push
enter
leave
sbb
jl
ret
sbb
mov
dec
jo
xor
add
mov
push
sub
into
out
stos
rol
and
in
lock
push
jb
lock
aam
cmp
cmp
dec
sub
addr16
dec
jl
movsb
lds
sub
fucomp
mov
xchg
jb
lahf
daa
bound
ljmp
jle
std
test
leave
sub
in
jnp
mov
cmp
andl
adc
shrl
icebp
aam
mov
inc
and
test
mov
icebp
inc
jp
and
lahf
pop
adc
faddl
sbb
jne
popf
clc
xchg
fsubrs
outsb
jno
fimull
and
je
add
lea
dec
divps
sub
ja
nop
sbb
and
sub
stos
push
rcll
push
pushf
daa
adc
or
mov
push
test
addb
dec
jp
fldenv
scas
jp
dec
test
mov
mov
jne
mov
cld
fs
clc
xor
xorb
add
jne
loope
mov
inc
mov
push
add
or
inc
push
push
mov
test
shlb
or
jmp
lds
mov
pushl
pop
jle
add
sub
shrb
sti
pop
in
xchg
jl
decl
jae
pushl
jb
lods
dec
out
popa
push
jo
xchg
pop
and
push
add
in
out
push
mov
popl
and
xorl
add
in
push
mov
pop
loopne
and
dec
loop
adc
push
dec
mov
push
movsb
shlb
push
test
or
xor
add
xchg
ret
xchg
es
pop
xor
push
add
adc
loope
push
stos
or
push
enter
cmp
push
pushf
pop
pop
dec
sahf
xchg
lret
lods
or
mov
stc
cmpb
jo
pop
enter
xor
dec
aas
jb
mov
outsl
or
movsb
inc
movsb
or
xchg
mov
mov
push
adc
xchg
sub
inc
dec
sbb
leave
cmp
xchg
out
inc
inc
dec
iret
cmp
xchg
dec
push
pop
hlt
mov
jl
dec
fs
pop
pop
pushf
sbb
mov
mov
shl
sub
and
dec
adc
subb
add
adc
jbe
sbb
inc
lock
inc
push
cmp
sbbl
add
push
push
fstpt
and
daa
pop
xchg
fs
and
clc
adc
xor
pop
dec
sbb
pusha
inc
jl
cmp
and
pop
subl
add
ret
or
leave
xchg
sbb
out
test
pushf
je
cmp
ja
sub
add
daa
sbb
and
sbb
and
push
or
push
mov
repnz
sub
and
dec
mov
in
shll
and
push
popa
inc
call
rorb
mov
cmp
dec
cmp
lea
shrl
test
xchg
mov
pop
fsts
cmpsb
sub
xor
or
and
subb
adc
adc
mov
add
add
imul
xchg
jge
scas
add
pop
sbb
push
pop
jo
or
cmp
xor
lock
push
enter
das
into
mov
pop
cwtl
pop
xor
adc
loop
sub
stc
jns
testb
add
add
or
arpl
xchg
mov
enter
ss
push
pop
mov
ja
xlat
add
nop
jo
mov
mov
sbb
sub
lds
mov
mov
and
push
jp
push
xor
cs
mov
popa
pusha
movsl
adc
sub
iret
fsubl
jnp
push
es
add
bound
or
test
data16
add
arpl
imul
and
dec
mov
push
xchg
outsb
in
inc
jl
imul
clc
rclb
inc
mov
in
loop
inc
cld
mov
in
sub
or
ds
xor
add
adcb
and
fsts
orl
data16
fstps
sbb
rclb
xchg
aaa
fs
stc
sbb
and
shlb
mov
mov
pop
js
loope
hlt
ss
mov
enter
hlt
push
push
jge
sbb
jmp
fcmovnb
cmp
add
filds
sbb
test
and
leave
clc
xchg
ret
sbb
sbb
cmp
fsubr
push
xor
jno
mov
popa
mov
js
inc
adc
gs
dec
adc
je
or
jle
jbe
push
outsb
push
pop
pop
sbb
into
dec
sti
mov
push
popa
in
gs
pop
out
repnz
inc
jno
std
adc
loope
pop
pushl
test
jge
and
push
jl
jo
insb
push
adc
dec
mov
jle
sbb
push
inc
lods
adc
rcr
stos
fs
cmpsb
repnz
mov
push
orl
fcoms
aam
jb
sbb
adc
mov
xor
mov
and
aas
adc
repz
cmp
jae
and
pop
cmp
inc
in
xor
or
jmp
inc
sub
inc
loopne
dec
push
xor
sbb
xor
lret
aas
dec
push
jb
test
add
xor
out
fldenv
inc
fnstcw
cmp
movb
out
shrl
imul
push
stos
loope
in
inc
imulb
nop
dec
rorb
test
in
insl
xchg
push
and
andb
cmp
je
push
pop
rcrb
pop
mov
jnp
and
jecxz
sbbl
jecxz
inc
sbb
and
xchg
rcrl
inc
or
dec
xor
and
add
ja
xchg
add
jo
pop
xchg
mov
stos
xor
or
or
adc
sarl
sub
sbb
ss
add
push
push
adc
inc
aad
xor
push
or
or
push
data16
mul
or
push
sbb
in
lahf
popa
inc
repnz
xor
icebp
incl
jmp
imul
movsbl
add
inc
mov
js
shrb
add
or
das
ljmp
mov
adc
or
jmp
and
cmp
jne
add
and
xlat
mov
and
jne
jmp
mov
scas
outsb
dec
int
inc
pop
or
test
test
or
mov
into
or
mov
mov
shr
adc
or
cmp
les
int3
mov
dec
cmp
movsl
pop
or
xor
out
mov
cmp
je
cmp
testl
icebp
lret
loope
inc
cmc
xchg
fs
jno
mov
dec
shrl
jecxz
aaa
jecxz
push
pop
jge
sub
push
aam
cmp
dec
loop
inc
aad
add
mov
inc
lahf
mov
push
cmp
sub
or
jmp
fiadds
cmpsl
scas
or
into
movl
push
popl
mov
inc
xor
loopne
jle
paddd
insb
jecxz
shll
test
inc
sbb
lret
dec
movsl
lcall
push
jno
xchg
sbb
fildl
jnp
push
dec
fnstenv
flds
fsubr
add
daa
test
in
roll
jae
sbb
shrb
push
test
sbb
add
loopne
les
pop
rclb
add
cmp
shll
xor
ret
sub
ret
sbb
pop
mov
push
sarl
sub
cmp
fstpl
and
insl
clc
push
sub
bound
mov
out
out
fildl
cmpl
or
and
mov
std
pop
fsub
pop
fsubrp
mov
push
inc
pop
jns
and
and
jno
movsb
pop
add
and
xor
push
rorb
add
sub
adc
sub
dec
je
add
imul
sub
or
adcb
cmpsl
bnd
fsubrs
push
or
pop
push
mov
or
and
and
push
mov
fistl
int3
jmp
push
add
ss
push
jns
push
dec
sub
xor
pop
dec
jne
repnz
test
xor
int
mov
adc
adc
ljmp
fucomip
enter
fisttps
in
sbb
push
lods
sbbl
lea
stc
adc
clc
int3
adc
xor
nop
mull
enter
push
and
pop
repnz
adc
daa
jl
push
enter
push
push
vmwrite
adc
xor
aam
negl
adc
mov
lret
jns
enter
and
sbb
and
stc
and
nop/reserved
and
inc
adc
xor
in
inc
or
enter
sub
out
enter
push
jecxz
cmpsl
pusha
addr16
add
adc
lods
aaa
add
mov
pop
jns
enter
and
adc
push
sbb
or
push
sub
adc
jl
jns
push
add
and
fimuls
xchg
pop
bswap
inc
xor
jnp
repz
or
adc
jo
or
jns
enter
sub
nop
icebp
sub
iret
vmwrite
push
shll
enter
xor
xchg
out
or
and
repnz
or
cld
or
out
and
dec
subb
inc
sub
push
sub
dec
repnz
pop
add
push
stc
fcom
int
lret
sbb
nop
and
cmpl
push
cwtl
adc
xchg
leave
stos
push
pushf
shlb
icebp
mov
pushl
or
push
out
or
iret
repz
sbb
cmp
pop
outsl
cmp
repz
xchg
leave
jns
out
cld
or
out
sahf
out
bound
xchg
sahf
out
sahf
cmpsb
mov
fldl2e
sti
cmp
sarl
sbb
cmp
repz
jb
movsl
xchg
push
mov
cmp
inc
movb
adc
ds
loop
add
push
push
loopne
pop
ljmp
inc
iret
das
inc
lock
sub
adc
movsb
lods
add
mov
mov
push
xchg
add
pop
call
in
imul
sub
shrl
push
je
add
jo
pop
push
xchg
pop
jp
cwtl
stc
fcmovu
popa
add
shll
daa
lds
pop
daa
mov
fsub
push
mov
sbb
add
sub
or
and
pop
icebp
cmp
js
push
dec
and
xlat
inc
sbb
mov
int
and
cmpsl
add
push
xor
adc
loopne
imul
adc
add
nop
sub
shl
push
shl
add
repz
loop
je
in
call
in
les
sar
jno
adc
and
adc
xor
inc
push
aam
test
and
filds
and
lds
or
push
in
inc
xchg
in
mov
sbb
popa
sbb
push
hlt
mov
pop
adc
and
icebp
add
iret
xor
push
mov
sub
jle
jo
add
arpl
jns
lea
ja
loopne
push
add
shl
popa
add
call
sub
add
cmp
lret
add
push
add
frstor
xor
push
lods
in
add
sub
in
mov
pop
test
inc
loope
push
and
loopne
push
pop
mov
es
add
mov
adc
out
lock
rolb
fwait
or
adc
faddl
daa
add
dec
movl
scas
add
add
rcl
pop
inc
ss
in
inc
shll
sub
int
stc
cld
add
out
or
sub
sbb
in
or
nop
out
xor
or
cmp
sbb
dec
es
sub
mov
test
popa
mov
inc
fisubl
mov
adc
pop
or
out
aaa
and
cmp
cmp
cmp
enter
lock
movsl
cmp
test
add
sbb
add
shrl
xor
subl
push
push
add
and
xchg
aaa
push
inc
dec
add
hlt
mov
push
push
cltd
or
dec
adc
repnz
mov
adc
cmpsb
fs
or
lock
sahf
movsl
clc
and
into
and
inc
enter
jg
add
xchg
and
mov
addr16
test
call
xchg
push
fdivs
sub
cmp
or
pop
cmpsb
adc
and
and
mov
cmp
mov
setle
lret
add
cmc
add
pop
pop
add
sarb
pop
add
push
pusha
sub
fiaddl
adc
add
outsl
add
inc
or
outsb
adc
or
addr16
fs
add
imul
aam
insb
mov
lret
or
sbb
cmc
mov
call
cwtl
sbb
ret
mov
sub
adc
jo
popa
xor
stos
pusha
jg
add
inc
ret
mov
or
sbb
jne
pop
push
insb
add
pop
mov
and
xor
ss
xor
imul
xchg
adc
dec
inc
lcall
fnstenv
xchg
or
push
std
pop
cmc
dec
fstl
xchg
push
or
mov
push
aad
ljmp
insl
and
add
jmp
addl
ds
orb
push
push
mov
nop
inc
jg
mov
mov
in
add
test
scas
test
out
in
test
mov
sub
sbb
pop
sbbb
adc
push
xor
mov
inc
or
mov
add
stc
sub
add
dec
ret
and
adc
add
add
ret
adc
lret
add
ret
adcb
jl
mov
stos
mov
add
adc
adc
sbb
xor
scas
adc
cli
sbb
jno
inc
or
test
pop
push
cmp
aaa
push
mov
les
ret
mov
or
imul
push
inc
cmpb
adc
ret
add
adc
push
bound
or
and
add
xor
push
xor
shl
pop
add
loopne,pn
lret
add
jne
push
push
shrl
add
and
enter
mov
in
cld
push
nop
pop
cmp
cmpl
add
push
movl
pop
push
in
js
adc
fisubrl
nop
iret
daa
adc
aaa
arpl
jge
test
test
jnp
xor
xor
xor
rorl
fsts
lret
inc
add
xchg
mov
pop
dec
cmp
imul
popa
xor
rorl
mov
int3
cmpsb
pop
adc
aam
add
clc
or
dec
push
test
gs
inc
cmp
adc
imul
int
pusha
sbb
arpl
pop
cmp
jecxz
inc
nop
lret
shlb
shrb
mov
je
jmp
mov
mov
or
mov
sbb
push
movsl
inc
inc
popf
mov
or
mov
adc
or
sub
int
and
jne
fldl
andb
pop
lcall
insb
pusha
aaa
addr16
or
dec
lret
rcrb
ds
add
inc
stos
add
daa
cmp
xor
adc
push
movsb
adc
jl
push
mov
pop
ret
push
mov
lods
stc
dec
add
test
pop
and
sbb
pop
lret
mov
sub
push
push
or
xor
xor
pop
mov
rcrb
xor
xlat
jmp
fiaddl
push
aad
mov
std
lahf
xor
in
sbb
add
loope
test
mov
pop
rorb
pop
add
mov
jne
mov
popa
lret
enter
aaa
and
xchg
aad
sbbl
adc
pushf
syscall
mov
mov
add
cmp
gs
adc
or
add
push
pushf
push
xor
and
push
push
jecxz
pushf
mov
cs
jne
sbb
add
lea
push
dec
data16
ret
xorb
sbb
stos
int
call
sub
lret
pop
call
push
adc
xchg
cmp
and
dec
push
jge
inc
add
sub
mov
xchg
aas
pop
imul
ret
or
adc
push
jl
xor
jmp
cmp
jl
or
sbb
popa
jp
adc
scas
xor
cmp
cmp
je
mov
mov
push
add
inc
jmp
call
add
mov
push
cltd
pop
idiv
shrl
in
stos
mov
out
xor
and
cmpsb
sub
js
inc
loop
test
push
and
or
loopne
cs
push
push
test
mov
inc
mov
mov
loopne
mov
xor
jmp
orl
dec
pop
push
dec
or
dec
inc
push
lock
in
hlt
incb
push
in
sbb
mov
jo
iret
cmp
mov
xchg
xchg
sarb
dec
add
cmp
xor
lock
push
cmp
push
movsb
or
movl
mov
pop
lahf
adc
xchg
jecxz
iret
movsl
cltd
mov
mov
in
test
dec
out
rolb
in
lea
push
sbb
adc
mov
or
loopne
inc
in
ljmp
fcomp
xchg
rorb
or
test
or
dec
mov
push
sub
ret
xlat
mov
push
or
and
push
leave
pop
and
mov
ljmp
or
mov
inc
enter
add
movsb
adc
rcll
push
push
lods
adc
adc
pop
inc
mov
lret
or
mov
jbe
xchg
fs
inc
push
push
pop
enter
movsb
adc
push
xor
and
jo
push
jl
and
push
pop
jns
xchg
jg
js
es
push
sbb
sbb
sbb
sbb
push
sbb
push
fs
pusha
sub
cmp
jns
call
dec
sbb
insl
insb
or
mov
sbb
sbb
inc
sahf
dec
es
pop
les
push
push
pop
xor
xor
dec
imul
enter
and
mov
jbe
jae
enter
pusha
rorb
leave
dec
mov
fs
xchg
sub
imul
mov
sub
shll
cmp
loopne
jno
shr
aad
dec
in
mov
popa
mov
es
pop
jb
out
icebp
daa
jns
dec
jle
test
sub
and
push
stos
push
inc
fwait
or
dec
fisubs
push
dec
cmp
dec
in
xchg
xchg
nop
pop
mov
cltd
or
js
dec
es
cmp
xchg
xchg
fcmovnbe
in
lods
shld
test
leave
je
dec
in
xchg
dec
test
mov
push
stc
fsubs
mov
xchg
sub
iret
leave
pop
pop
jmp
lock
or
sub
xchg
mov
pusha
and
pop
cmpsl
movb
inc
xor
mull
stc
xor
cs
cmpsl
iret
adc
lea
addr16
push
inc
sti
xor
or
push
lcall
sub
mov
imul
int3
sub
in
mov
inc
push
data16
fcompl
int3
clc
add
inc
movsb
fmull
lods
and
negl
repnz
push
mov
mov
or
fbstp
push
pushf
sbb
mov
out
pop
sub
arpl
inc
mov
sbb
adc
jb
int
pop
add
and
popa
xchg
icebp
sbb
in
in
pushf
push
enter
mov
insl
call
xchg
mov
xchg
pop
or
add
rcrb
roll
popf
mov
popf
add
pop
add
fcoms
lcall
outsl
xor
bound
mov
push
stc
or
test
add
jo
sub
addr16
repz
dec
pop
mov
jle
repz
xchg
mov
jle
prefetchw
or
into
adc
cmc
roll
mov
xor
push
andps
movsl
mov
push
and
scas
sub
sub
mov
cmp
push
jmp
pusha
fs
add
idivl
sbb
and
or
push
adc
adc
and
fdivrs
sahf
jecxz
add
ds
fstl
outsl
jae
lock
jmp
neg
sub
push
jo
testb
ss
sub
mov
shlb
loopne
cmp
xor
js
sbb
rorb
fwait
dec
xor
inc
popf
and
adc
add
push
je
or
xor
insl
mov
push
sub
or
dec
lods
push
sub
and
mov
fisubrs
leave
cs
sub
xchg
insb
or
test
subb
les
fwait
sub
mov
mov
sub
pop
mov
mov
stc
and
in
adc
push
xorb
int3
push
and
jle
loop
cli
stos
cmp
sub
and
jl
in
sbb
mov
pop
aas
or
call
fisttpl
mov
lea
iret
lods
mov
or
imul
ja
fcomps
cmp
lock
mov
xor
outsb
aaa
lea
inc
push
push
rorl
movsbl
adc
cmpsb
clc
dec
sbb
ret
add
insb
leave
sub
insb
inc
outsl
rorb
aam
hlt
mov
subb
es
add
ss
shrb
xor
or
add
jns
movd
loopne
xor
sbb
xchg
jbe
test
sbb
adc
loope
imul
jmp
or
or
cli
andb
cmp
add
pop
and
mov
or
and
aaa
aaa
cmp
add
dec
call
sub
mov
add
pminub
xor
sti
or
loopne
push
sarb
sbb
jl
cli
imul
or
sub
out
es
pop
cli
test
add
sbb
or
cmp
les
push
fidivs
fisttpll
dec
iret
push
shrl
xchg
dec
xor
aam
loopne
pop
sbb
xor
xchg
data16
push
test
and
xchg
rcrb
inc
cmpb
or
and
adc
mov
mov
loopne
adc
add
xor
pop
in
roll
mov
ljmp
rorb
cmp
notb
pop
push
sub
clc
into
insb
sub
adc
adcl
aaa
mov
push
jno
sub
loope
add
push
les
lea
dec
pop
mov
xchg
call
or
ja
push
pop
fadds
iret
pop
ljmp
fcmovne
fmulp
add
xchg
aad
mov
push
in
aaa
mov
pop
or
and
fwait
rcll
je
cmp
iret
or
mov
enter
cmp
shr
popa
outsb
dec
lret
inc
add
and
rol
loopne
out
and
cmp
mov
std
nop
add
jmp
ds
or
or
pusha
and
push
xchg
enter
cmp
dec
dec
cli
xor
sub
mov
fiaddl
sub
lds
pop
xchg
inc
sub
and
daa
shlb
mov
jne
ja
xor
jnp
sub
pop
pop
in
hlt
cs
test
cmp
adc
cmp
shrb
push
scas
pop
mov
cmp
push
cmp
sub
loope
cmp
scas
pop
mov
sub
cmc
pop
cmp
push
sbb
adc
cmp
dec
add
push
and
addr16
adc
cs
dec
xor
pop
xorb
jle
pop
jecxz
inc
stos
mov
mov
movsb
repnz
push
jmp
push
pusha
or
dec
add
sbb
jb
inc
jge
dec
push
or
push
test
mov
adc
cmp
subl
adc
pop
sbb
add
ds
dec
clc
jl
mov
je
outsb
jmp
es
and
bound
cwtl
pop
sar
push
push
push
shl
jns
adc
xor
lods
adc
pop
int3
add
sbb
add
add
adc
sub
sarb
pushf
add
lods
push
adc
dec
ret
xchg
inc
cmpsb
push
rcll
insl
stc
cmp
pop
or
inc
lret
outsb
add
pop
ljmp
sub
outsb
out
lods
and
add
sbb
mov
cltd
sbbl
and
mov
out
loopne
sub
xchg
clc
push
cmp
jne
and
test
mov
outsl
cltd
or
add
pushf
rcrb
scas
dec
mov
mov
int
lods
and
jne
inc
xchg
in
sbb
call
in
lock
or
test
aaa
push
insb
mov
sbbl
push
and
mov
icebp
lea
push
mov
dec
shl
or
adc
add
inc
and
and
sti
in
insl
imul
inc
div
scas
push
and
ucomiss
sub
xor
cmp
and
jno
nop
xchg
mov
aam
in
add
aaa
andl
mov
pop
mov
sub
xchg
lods
aad
push
add
popf
aam
and
arpl
test
push
inc
ds
aad
lea
adc
and
pusha
cmpsl
xor
xrelease
les
inc
push
and
add
adc
adc
push
or
cli
es
ret
dec
push
out
mov
mov
lcall
push
test
mov
or
xorb
adcb
pop
out
cmpl
jnp
fisttpll
lret
add
int3
cmp
test
mov
popa
es
jo
jecxz
jmp
les
pop
lcall
jo
add
addr16
adc
movsb
rorb
in
adc
add
mov
and
push
inc
jp
mov
push
push
roll
push
ljmp
sbb
subb
push
mov
dec
pop
lret
or
adc
add
xchg
pop
jbe
loope
mov
dec
shr
push
add
push
cltd
jb
or
test
dec
or
jg
push
and
inc
fistpll
add
xchg
jle
pop
push
cmp
sub
mov
adc
push
jecxz
shrl
inc
jecxz
stos
push
dec
xor
cmpsb
mov
fildl
add
jl
jne
std
dec
dec
adc
cmp
jae
mov
bound
bound
cli
add
jmp
push
movl
insl
mov
mov
jne
or
cmpsb
lea
push
xor
push
faddl
fistpll
shll
mov
push
pop
clc
and
push
pop
pop
dec
js
pop
stos
sbb
xor
sbb
mov
test
xchg
popf
jae
and
repz
and
sub
push
popf
push
mov
loope
pushf
adc
out
mov
or
paddq
bound
add
sub
mov
push
in
idiv
pusha
push
xchg
pop
push
push
xchg
lcall
mov
rcr
sub
loop
jo
inc
push
insb
sub
imul
push
sbb
or
iret
mov
xchg
imul
dec
jp
les
mov
or
ror
enter
xor
adc
or
and
push
xchg
push
cld
add
add
xchg
push
btr
jnp
push
fadds
pop
push
jb
add
fists
inc
shll
adc
dec
adc
mov
add
xor
and
mov
js
mov
xlat
jge
push
scas
inc
mov
insl
addb
add
pushf
test
je
inc
sahf
xchg
adc
add
xor
push
xor
mov
andb
cmp
xchg
adc
add
or
or
fs
into
sahf
add
lds
sub
repz
out
nop
rcrb
enter
sbb
sbb
fmuls
sub
fs
scas
lods
sbb
inc
fcmove
and
add
and
hlt
fldenv
dec
and
js
mov
sbb
or
and
arpl
sbb
popa
out
bound
dec
shll
pop
pop
adc
cmc
xor
sbb
xchg
leave
cmpps
sub
mov
int
movsb
test
imul
mov
addl
inc
xorb
jno
add
into
fimull
sbb
jl
pop
pop
data16
jno
daa
lret
or
pop
jg
push
movl
lcall
das
inc
cmpsl
je
ljmp
sbb
test
add
orl
add
mov
cs
mov
popf
push
movsb
lret
xchg
pop
inc
mov
pop
mov
push
cmp
cmpsl
or
hlt
dec
ljmp
pop
mov
add
enter
es
pop
pop
das
add
jp
sti
dec
js
fs
popf
and
jno
popf
out
sub
dec
daa
push
rorb
fwait
in
insb
cmp
add
add
cmpl
fisttpl
and
xor
or
je
ret
mov
lods
add
testb
xor
icebp
insl
pop
icebp
xor
and
and
inc
enter
outsl
lea
inc
out
and
add
bound
insb
dec
and
add
out
cmp
or
into
and
jbe
xor
dec
add
inc
dec
cltd
inc
adc
or
cmp
nop
mov
add
sbb
mov
dec
xchg
test
xor
shlb
sub
out
scas
fsubl
jns
les
movsb
jns
cmp
sbb
inc
xlat
pop
ljmp
or
sbb
or
cwtl
shll
mov
or
mov
add
sub
jo
pop
jp
shl
punpckhbw
sbb
jl
dec
sbb
leave
push
jo
pop
mov
push
and
pushf
inc
or
cmpsl
add
icebp
mov
or
sbb
pop
jo
jb
cmp
scas
jo
outsl
jb
scas
push
inc
sbb
cmp
shrl
adc
dec
add
or
jae
push
inc
movsb
lcall
sbb
ss
jne
mov
loope
or
and
rcrl
or
scas
cmp
orb
sarl
and
xor
sub
lods
mov
insb
sub
mov
xchg
pop
out
add
loopne
sbb
das
daa
sub
push
sar
pop
and
movsb
xchg
sub
enter
sub
sbb
imul
add
sbb
xorl
aam
mov
xchg
adc
mov
test
add
xlat
push
pop
mov
xchg
loopne
iret
test
frstor
mov
push
movsl
and
aam
xor
sub
pop
inc
cmp
sub
outsb
pop
shll
insl
cmc
dec
iret
bound
pop
and
mov
jb
ljmp
or
xor
adc
ja
cmp
cmc
fbstp
add
sub
mov
mov
jno
daa
leave
sub
jb
stc
mov
movsl
lss
fwait
dec
shll
fwait
daa
xorl
nop
testl
pop
lcall
dec
shl
pop
jb
push
mov
movl
cmp
sub
in
and
mov
je
push
loope
adc
sbbl
stc
sbb
cmc
sub
shlb
mov
pop
push
mov
loopne
or
negb
dec
xchg
or
mov
inc
dec
inc
dec
jo
in
sbb
cmp
xchg
pushf
inc
add
or
pop
in
add
mov
stos
push
dec
push
or
cmp
push
aad
jp
in
dec
adc
adc
test
or
aaa
mov
adcl
xchg
int
add
lret
and
adc
jmp
loope
xlat
jo
and
js
push
cltd
mov
xor
and
sbb
pop
dec
mov
and
fiadds
rolb
mov
subl
xor
ds
add
inc
cmp
dec
jne
mov
or
add
jne
xchg
lock
js
loope
mov
ss
fs
or
xor
xchg
cwtl
xor
int
cld
enter
sar
push
add
add
leave
cmpsl
rolb
or
cld
daa
add
and
and
emms
iret
xchg
fidivrs
add
inc
add
push
sbb
xor
mov
and
insb
push
push
push
in
int
bnd
dec
loopne
push
xchg
mov
xchg
or
fstl
incl
sbb
inc
sbb
mov
insb
test
adc
jbe
test
aaa
add
inc
cmp
pop
mov
pop
nop
andb
scas
movsb
shrb
or
fwait
xchg
rclb
cmp
data16
ja
nop
or
sbb
movsb
hlt
ds
cmp
mulb
std
out
pop
test
mov
clc
mov
add
ja
or
sbb
dec
mov
mov
lock
lret
lea
push
mov
mov
rcrb
xchg
outsb
xchg
add
jge
rol
ret
pop
psubw
jecxz
imul
or
sarb
push
ret
add
and
out
inc
loope
xor
cmp
loope
cmp
stos
ja
and
sarb
pop
or
adc
xor
adc
xchg
bound
inc
adcb
in
cmp
aaa
jl
icebp
jb
jmp
adcb
mov
inc
vmovntps
push
jne
mov
int3
add
adc
test
mov
into
add
lret
mov
nopl
xor
pop
and
add
dec
inc
push
push
jo
in
xor
or
data16
pop
pop
sbb
push
mov
add
call
int3
jo
pusha
mov
arpl
das
cmp
pop
in
test
xchg
insb
jae
das
insl
andb
add
sbb
and
cs
sub
loopne
clc
or
inc
jno
pusha
leave
inc
fmuls
idiv
sbb
push
xor
pop
xlat
pushf
adc
inc
sbb
dec
xor
add
std
cs
cmp
ret
jb
inc
sbbb
dec
adc
push
pop
push
adc
cltd
fisubs
add
and
sti
push
inc
dec
into
add
bound
mov
ffree
pop
bound
pop
sarb
or
xor
push
mov
dec
xlat
jge
repz
int3
and
sbb
scas
add
lea
notl
hlt
dec
pop
sbb
jae
push
add
add
fwait
sub
std
xor
inc
inc
shrb
sbb
test
insb
popa
dec
cmp
add
test
pop
mov
mov
jle
mov
les
popf
enter
in
test
xchg
add
out
mov
or
jge
out
sti
ret
adc
push
or
lea
ficompl
mov
lcall
rclb
fdivl
pop
out
fs
jb
inc
lea
fnstsw
ret
adc
xlat
cmp
cmpb
mov
jb
enter
mov
les
clc
push
rorb
cmp
xor
jb
lea
subb
clc
pushl
fldl
mov
popa
fwait
ds
or
or
inc
adc
push
add
addl
push
ret
fstpl
lea
mov
nop
pop
xor
popa
adc
jl
lea
test
orl
sbb
iret
adc
jae
inc
lock
mov
jmp
pushl
mov
mov
fcompl
pop
adc
pop
and
inc
xchg
push
push
stos
inc
aam
fisubl
cld
test
pop
sbb
cli
cltd
pusha
inc
sub
push
mov
mov
nop
or
test
and
rcr
xchg
out
out
xchg
shrb
or
adc
adc
rcrb
add
adc
and
les
sub
sti
scas
mov
aas
push
mov
mov
cmp
ret
popa
fnsave
xchg
rolb
loopne
in
dec
add
push
cmp
imul
inc
and
adc
loopne
daa
fisubs
popf
cwtl
nop
fsubs
mov
adc
xor
sbb
fisubrl
xchg
cmp
loope
mov
sbb
mov
xor
mov
xor
mov
jae
insl
adc
cmp
push
test
push
inc
xchg
adc
gs
and
push
scas
pop
loope
or
rorl
mov
mov
mov
fadds
imul
add
andl
mov
rolb
sbb
les
es
push
adc
push
pop
and
std
push
cld
jl
lcall
ljmp
pop
mov
dec
negl
daa
and
push
cmp
inc
push
xor
sbb
or
sub
repz
jbe
test
out
push
push
add
cmp
inc
mov
dec
rol
push
pop
jge
inc
js
pop
xor
jbe
push
in
cwtl
add
sbb
or
add
sbb
push
loop
orl
and
jns
xchg
pusha
or
dec
and
add
mov
sarb
inc
sbb
pop
add
popa
leave
xor
push
or
popa
jb
test
add
pop
pop
inc
and
or
js
jmp
adc
les
add
mov
outsb
mov
rcrl
mov
cmp
xor
adc
aam
mov
out
push
or
in
push
test
ljmp
mov
out
shr
and
loopne
fadd
cmp
push
pop
lret
fildll
and
push
pop
push
inc
xor
cld
jp
imul
xchg
lds
scas
shrb
cs
ds
cmp
mov
in
ds
pop
clc
ss
test
inc
add
push
sbb
or
negb
mov
push
inc
push
jle
sar
jbe
adc
cltd
leave
pop
xchg
mov
push
add
pop
or
pop
outsl
xchg
sbb
mov
mov
add
sub
inc
test
xlat
mov
ss
push
dec
and
out
adc
mov
add
pop
repz
jge
or
movl
dec
movsl
and
adc
dec
les
push
xchg
ret
out
xchg
lods
dec
sub
add
nop
mov
lods
cmpsl
add
xchg
imul
or
xchg
outsb
mov
jno
mov
adc
push
and
inc
cmp
dec
das
mov
or
ds
jge
push
movntps
repz
dec
pop
ret
jbe
and
or
mov
jl
mov
sbb
sbbl
pushf
mov
pop
addb
push
mov
push
and
push
push
test
and
sbb
dec
and
or
leave
sbb
adc
lret
sbb
cld
sahf
push
mov
jmp
mov
arpl
sub
push
aaa
mov
adc
xor
adc
mov
xchg
adc
xchg
out
cmpsb
in
adc
cmp
fmuls
xchg
aam
push
or
loop
jmp
jle
out
loopne
data16
dec
sarb
dec
hlt
jne
mov
dec
lea
mov
push
negl
pop
sbb
rorl
adc
add
and
or
pop
jb
xor
mov
nop
or
outsb
int3
jo
es
mov
inc
pop
divl
fistpl
test
jmp
imul
in
lcall
incl
into
insl
loope
test
stos
jmp
and
and
sub
add
pop
dec
add
jno
xor
or
pop
adc
pop
cmp
add
movsl
out
xchg
dec
fisubrl
int3
and
aam
inc
popa
icebp
and
bound
xchg
mov
das
sbb
inc
xor
loopne
mov
mov
dec
movb
int
clc
test
mov
je
mov
push
push
hlt
or
pop
pop
shrl
adc
fcmovnb
mov
jge
pop
lods
adc
ret
lock
mov
xor
data16
movsl
out
lea
mov
shll
add
pop
jne
and
adc
testb
adc
dec
jmp
jne
inc
cli
cmp
repnz
jmp
adc
dec
or
aaa
push
pop
mov
call
mov
inc
test
inc
movsb
lahf
sbb
inc
iret
aaa
or
aas
add
or
inc
mov
jo
in
shr
dec
mov
xor
dec
sahf
negb
adc
sbb
mov
sbb
testb
and
test
shlb
pop
push
mov
repnz
push
mov
arpl
xchg
or
in
mov
les
popl
test
sub
add
lahf
mov
add
jg
xlat
neg
pop
sbb
pop
inc
inc
pushf
test
loopne
test
push
adc
dec
incl
shl
pop
push
fwait
cmp
mov
pushl
mov
mov
call
or
push
rcll
jae
shr
add
ret
jp
push
cmc
repz
cmp
jecxz
fimuls
adc
adc
sbb
ret
sbb
ret
add
fsubr
fiadds
test
fdivs
mov
sub
xor
aas
add
adc
fwait
pop
shrb
mov
xlat
and
nop
clc
ds
push
divb
jle
add
push
hlt
xor
jmp
and
and
push
sbb
js
add
jbe
mov
adc
and
hlt
xor
dec
mov
push
adc
pop
clc
jne
loopne
clc
push
jns
imul
add
insb
jge
push
dec
test
mov
ljmp
clc
cmp
subl
shlb
cmp
mov
imul
jl
jb
and
and
xchg
or
jg
dec
rcrb
push
push
addr16
push
mov
jl
cmp
inc
das
inc
inc
sbb
mov
lods
mov
sarb
movsb
ficompl
cmp
mov
cmp
push
imul
orl
imul
sbb
fidivrl
mov
sub
or
sbb
add
add
jb
pop
icebp
and
or
clc
test
add
inc
js
jp
fcom
xor
rolb
out
and
sbb
mulb
les
inc
mov
and
pop
loopne
mov
ljmp
sub
xchg
xor
dec
setnp
mov
aaa
sbb
cmp
jp
push
dec
repz
mov
lock
add
push
mov
dec
jb
xor
popf
mov
movsl
push
push
xchg
push
daa
push
jge
enter
cmp
ud1
push
filds
mov
call
adc
test
mov
in
mov
mov
cmp
push
vmread
push
mov
nop
push
outsl
imul
notb
leave
cli
insl
shl
push
iret
xlat
out
mov
pop
dec
popa
and
mov
push
movzwl
inc
fdecstp
dec
loopne
adc
cmp
out
cmp
in
dec
fldt
pop
jp
adc
pop
cmp
sub
xor
push
pop
pop
mov
test
cmp
repz
adc
pushf
mov
mov
ror
pop
mov
mov
fnstsw
stos
in
mov
push
cmp
pop
adc
push
stc
push
adc
in
add
movsb
push
dec
cli
add
lods
mov
and
gs
cmp
rolb
test
push
clc
xor
xchg
popf
hlt
or
cmp
addr16
cmpsl
xor
mov
mov
mov
inc
jl
mov
subb
enter
mov
out
cld
mov
add
inc
cmp
add
outsb
lock
pop
addb
mov
sti
lret
xchg
outsl
rep
movsw
push
cld
mov
sbb
movsb
mov
cli
decl
mov
adc
ljmp
or
or
adc
movb
and
sbb
pop
dec
or
in
push
addr16
enter
mov
pop
out
lret
add
movsbl
xor
lret
push
push
in
cmpsb
and
aad
adc
and
das
stc
push
jbe
push
cld
je
push
xor
test
pop
sbb
push
movsb
xchg
cld
jecxz
adc
jno
and
xchg
and
mov
das
adc
fbld
jl
mov
outsl
jle
mov
lods
jge
inc
add
movl
jle
or
subl
insl
sbb
mov
and
or
push
in
adc
sbb
or
out
int
xor
mov
clc
sbb
push
mov
gs
sub
out
pop
cmc
ss
mov
or
add
sub
out
push
push
lods
stos
scas
lock
and
sarb
lea
mov
jmp
test
clc
fninit
pushf
popl
dec
fiaddl
jno
push
add
add
dec
dec
dec
add
mov
dec
or
jmp
or
jmp
or
jno
aaa
aaa
aaa
or
por
jmp
aaa
aaa
aaa
aaa
adc
pop
adc
push
adc
dec
adc
dec
aaa
aaa
aaa
aaa
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
aaa
aaa
aaa
sbb
pop
pop
jmp
and
or
and
or
jmp
and
pextrw
pop
xchg
push
push
fwait
push
mov
sub
je
or
cmp
rcrl
cld
addb
je
test
cmp
repz
cmp
mov
mov
iret
repz
aam
fsubp
repz
repz
out
sahf
out
addl
out
sahf
sbb
and
cs
in
mov
add
and
or
or
push
movups
adc
adc
push
pop
sbb
inc
in
lcall
sbb
sbb
push
pop
and
and
aas
int
and
and
out
sub
add
fs
inc
or
or
mov
dec
loop
jmp
add
testl
xor
inc
pop
insb
mov
mov
adc
push
or
adc
lock
cli
mov
movsb
jno
ja
xchg
mov
sbb
mov
jmp
rcll
add
fstpt
dec
add
push
sub
or
xchg
adc
push
sub
and
jns
push
add
and
inc
cmp
adc
or
jb
cmp
test
xor
inc
sahf
jecxz
stos
dec
nop
jne
inc
sahf
ret
dec
push
inc
pushf
cmp
sbb
push
cwtl
xchg
movsb
sub
mov
hlt
outsb
int3
test
loopne
xor
mov
add
adc
hlt
xor
pop
add
jmp
or
pop
and
loopne
dec
jge
les
aad
xor
jno
pop
push
push
cmp
rorl
sub
dec
ja
dec
add
push
adc
mov
add
fdivp
fmuls
push
nop
adc
mov
popf
jns
push
xchg
inc
xor
push
pop
adc
xor
rclb
rcrb
sbb
mov
sbbl
shrb
ds
xor
dec
sbb
or
push
mov
fcmovbe
sbbl
mov
mov
adc
test
arpl
push
push
pop
loopne
or
pop
ret
jne
sbb
inc
lods
mov
rcll
or
out
add
sbb
mov
or
ja
imul
aas
inc
lret
xor
mov
inc
mov
es
loopne
sbb
test
inc
add
push
insb
loopne
scas
pop
mov
gs
adc
sub
mov
sub
stos
jno
or
mov
cld
push
mov
je
lret
adc
fs
lock
push
mov
lock
clc
adc
cmp
lods
cmp
cmp
fimull
push
push
sub
jbe
and
or
jnp
adc
adc
lock
inc
clc
dec
sub
add
les
xchg
jbe
xchg
xchg
scas
push
es
dec
push
add
cmp
mov
ffreep
or
push
push
popl
inc
xchg
je
push
mov
add
push
push
rcll
or
pusha
add
sbb
adc
sub
leave
cmp
or
mov
inc
mov
add
movsb
clc
push
shll
lock
push
cmp
fwait
mov
fld
rcrb
adc
mov
pop
pop
rcl
scas
subb
in
ret
pop
lahf
cmp
jl
dec
xchg
mov
pop
repz
mov
adc
mov
les
nop
scas
les
add
xor
loop
push
inc
lods
xchg
stc
and
inc
add
or
cltd
rclb
enter
orl
in
faddl
shl
ror
rep
xor
add
cmp
sbb
mov
mov
int3
mov
mov
jb
icebp
orl
add
add
xor
push
mov
fmull
xchg
mov
add
mov
cmp
inc
pop
clc
push
mov
cmp
jne
pop
loope
jp
enter
movsl
push
add
push
sti
ror
ret
int
inc
cmp
mov
mov
push
push
mov
sub
pop
push
popa
cmpsl
imul
pop
jno
bnd
ret
movb
add
roll
pop
sub
mov
in
push
xor
xorl
enter
shl
pop
xor
iret
leave
repz
add
add
imul
or
or
div
add
adc
lret
add
ret
negl
aam
xchg
dec
rcr
mov
cmpb
mov
adc
rolb
push
fwait
lods
add
pop
push
cltd
push
or
adc
push
mov
rcrb
movsl
or
mov
add
sahf
cltd
fnstsw
movsb
sub
stos
push
shll
ljmp
xor
flds
push
cmpsb
xchg
cmp
pop
rol
fmuls
and
inc
pop
jmp
es
fs
pop
ret
test
orl
inc
sbb
hlt
add
inc
or
pop
ret
inc
fwait
pop
pop
and
outsl
leave
adc
pop
loopne
jle
cmp
mov
mov
sub
sub
pusha
push
add
jmp
faddl
and
sbb
shl
add
int
inc
roll
movsl
pop
or
xor
pusha
jne
loope
movsb
cmpb
loope
in
jmp
movsb
pusha
pop
and
roll
fisttpll
or
sub
adc
daa
in
add
in
xorl
gs
test
cmp
imul
test
in
push
add
and
nop
mov
call
xor
inc
invd
mov
push
pop
loope
add
xlat
je
iret
dec
rclb
lret
call
push
or
pop
ja
je
in
adc
popl
jmp
lret
fmull
add
lahf
subl
sbb
lea
inc
jnp
aad
push
xchg
aaa
sub
movsb
adc
push
push
sbb
and
imul
cld
adc
xchg
or
cmp
jne
push
mov
cpuid
jmp
cmp
je
add
js
inc
mov
jl
mov
sbb
inc
scas
bound
inc
inc
cmp
pop
mov
sbbb
in
in
xchg
cli
sbb
push
in
or
add
mov
sub
aaa
hlt
lock
push
xor
mov
test
or
and
add
subl
jne
cmp
ds
jp
cmp
and
push
add
rcll
adc
sub
shr
jp
push
xchg
sahf
sbb
pop
dec
xor
jl
pop
nop
cli
sbb
dec
mov
nop
dec
add
cs
lods
addb
xchg
sbbl
fmuls
xchg
stos
xchg
sbb
ret
pushf
and
and
iret
out
inc
bound
pop
mov
or
jp
push
or
mov
push
adc
test
add
testl
jo
pop
xor
test
xchg
sbb
mov
push
push
sbb
or
leave
xchg
xchg
xor
sbb
jmp
xor
in
sbb
or
adc
rcrb
lea
fistpl
loope
dec
adc
pop
cmpb
dec
dec
sbb
add
or
or
addl
inc
dec
ja
jg
and
or
xor
cmp
pop
stos
sti
idivl
mov
or
pop
push
clc
negb
fdivrs
xor
test
push
sub
push
js
leave
sbb
imul
jo
scas
imul
jns
dec
test
ljmp
clc
movsbl
mov
pop
icebp
imul
and
ljmp
insl
shrl
xchg
push
push
dec
popa
bndldx
mov
push
movsb
inc
or
dec
cld
fidivs
ds
inc
add
cmp
inc
cmp
push
sbb
push
push
enter
push
inc
push
es
adc
nop
or
cmp
nop
rolb
push
sbb
cwtl
inc
fs
dec
ja
lahf
mov
rorb
cmp
test
pop
mov
push
es
enter
or
and
jge
push
das
leave
push
inc
mov
je
cs
sbb
popf
inc
test
out
add
filds
and
test
std
add
mov
aaa
mov
das
cltd
sub
jbe
sti
pop
in
or
jne
incl
cmp
jl
sub
xchg
add
and
add
xor
inc
push
or
andl
mov
xor
cmp
cld
push
ficoms
mov
lods
sub
pusha
mov
cmp
jne
in
or
cmp
pop
jl
jmp
out
push
jo
push
jbe
fsubrp
jge
xchg
sbb
dec
mov
sar
cmp
je
sbb
push
and
pop
push
xchg
dec
call
outsb
inc
mov
js
loopne
or
push
jp
rolb
and
js
sub
or
js
les
in
and
outsb
sbb
push
fwait
xor
aas
sub
mov
and
je
mov
lds
inc
xor
call
cli
pop
mov
hlt
push
pop
cmp
pusha
loopne
push
int3
cli
mov
push
repnz
es
lea
loopne
inc
test
add
push
fistpl
sbb
mov
inc
or
daa
dec
mov
cli
xor
sbb
mov
mov
fistpl
lock
pop
sub
test
cmp
xchg
js
ljmp
stos
adc
adc
je
cmp
jne
push
inc
pop
nop
les
sahf
inc
push
inc
push
dec
jp
out
pusha
cli
push
push
sub
mov
add
and
sahf
add
mov
mov
insl
pop
or
inc
mov
xor
cltd
in
mov
mov
cmpsl
dec
or
cmp
or
push
xorb
push
sbb
dec
cmp
sub
pop
adc
push
testl
test
push
dec
pop
push
xchg
jge
or
jmp
mov
mov
or
icebp
xor
inc
cmp
mov
xchg
or
divl
gs
jge
ss
mov
push
icebp
adcl
pop
jno
pop
inc
ds
dec
int
lret
mov
add
pop
sub
jne
push
loopne
leave
or
inc
clc
adc
add
pop
xchg
mov
xchg
pusha
mov
mov
mov
inc
dec
xchg
or
loopne
jmp
cmc
in
cltd
ss
sub
insl
sbb
jp
push
outsb
rcrl
fstpt
jo
add
adc
sbb
add
icebp
sbb
jmp
bound
or
xor
add
push
jmp
or
je
ret
int
testb
jne
inc
popa
lds
jnp
rorl
popa
pop
jge
imul
push
mov
xchg
mov
xor
into
xor
dec
push
cltd
push
or
add
mov
dec
mov
andl
aad
pusha
mov
int
push
mov
test
outsl
xor
pop
testl
adc
into
pop
bound
and
loope
je
or
sbb
push
mov
jbe
or
mov
add
pushl
add
enter
popf
add
inc
sbb
xor
inc
divps
sub
popf
andl
push
and
jmp
jmp
loope
add
jle
sub
mov
jae
movzbl
jmp
movsb
mov
dec
mov
push
or
sbb
sub
dec
rolb
dec
push
punpcklwd
jmp
push
dec
inc
sub
xor
xchg
pop
cmp
mov
sub
loopne
jo
inc
pusha
xor
cmp
repnz
add
sub
call
dec
adcb
and
andb
in
inc
xchg
jl
aam
jae
insl
dec
mov
in
inc
popf
cltd
pop
cmp
loop
push
insb
cmp
xchg
lock
or
shlb
adc
add
adc
mov
jle
add
imull
imul
cmp
sbb
dec
arpl
or
xchg
inc
or
loope
or
ss
ds
icebp
jne
jp
pop
dec
adc
lock
sbb
mov
sub
cltd
pop
adc
mov
sub
aad
dec
and
inc
dec
lods
mov
outsl
dec
inc
aaa
jle
push
subl
mov
loope
sub
test
adcl
jmp
inc
mov
add
jne
sub
xor
fdivl
sarb
out
insb
dec
rorl
sbb
lock
add
push
inc
sub
test
mov
leave
sti
dec
scas
adc
xchg
test
sub
dec
mov
lea
in
or
in
push
leave
add
enter
push
inc
jno
test
enter
add
and
sub
in
repnz
mov
add
push
leave
sti
cs
daa
push
cmpsl
xchg
je
push
adc
sbb
nop
call
xchg
imul
loopne
int3
or
sahf
or
mov
add
or
push
or
add
ljmp
faddl
fstl
fldz
fcomp
fnstsw
loopne
loopne
jae
in
pop
fsubr
pop
faddp
adc
pop
je
push
insb
repz
dec
jno
inc
cwtl
jne
sbb
hlt
xor
mov
xor
pusha
and
adc
lock
xchg
orb
sub
cmp
dec
and
shl
jo
push
pop
movsl
mov
sbb
xor
in
adc
dec
shld
fnstsw
cmp
add
or
sub
mov
jo
inc
addl
mov
popf
clc
or
test
stos
movsb
or
lea
mov
lret
xchg
xchg
lods
movb
jp
xor
decb
adc
sbb
call
mov
mov
loopne
imul
xor
pop
cmp
adc
fs
lea
dec
clc
into
mov
repz
in
loop
les
fimuls
enter
lods
loop
int
xor
loopne
in
push
cmp
mov
mov
mov
push
mov
inc
leave
and
or
push
xlat
nop
in
outsb
push
add
dec
ret
xchg
adc
cli
jmp
movb
loop
mov
jp
rcr
adc
pop
cmp
sbb
and
cwtl
jmp
xor
jmp
aaa
xchg
mov
jne
mov
call
roll
popf
xchg
out
loope
adc
adc
sbb
repz
shlb
pop
mov
imul
cli
push
xchg
push
mov
sub
push
fcoms
and
enter
adc
mov
mov
sub
sti
or
stos
dec
mov
push
jnp
ret
mov
rolb
xor
mov
add
add
or
aaa
add
popa
cmpsl
sub
ljmp
push
pop
inc
call
cli
sbb
jb
push
sub
dec
or
dec
pop
jb
cmp
shlb
or
test
adc
or
pop
lock
in
and
xchg
add
inc
ret
loopne
adc
push
mov
dec
add
loop
or
pushl
sbb
shlb
testb
sub
aad
sub
das
sbb
stos
fadd
jecxz
clc
and
icebp
sub
sbb
test
jns
lock
in
ja
or
push
clc
les
aad
test
pop
inc
jle
mov
fistl
daa
or
sarl
dec
pop
cmpsl
xorl
enter
inc
in
mov
rorb
das
jl
dec
nop
xchg
add
or
popa
cmp
xor
in
test
mov
imul
popa
subb
push
es
sub
ja
test
pop
adc
adc
je
js
mov
mov
movsl
cmpsb
mov
lods
adc
mov
add
cmp
sahf
push
adc
xchg
fwait
inc
je
push
push
jns
test
insb
sub
add
call
ja
lsl
fs
xlat
adc
mov
test
out
pop
xor
ret
dec
fwait
clc
push
jmp
cmc
inc
mov
clc
and
cs
sarb
cld
add
mov
xlat
in
sub
fnsave
or
data16
mov
jb
add
cmpsb
rclb
aam
mov
test
ljmp
lret
mov
mov
sti
mov
ror
repz
adc
je
cmp
jb
push
arpl
sahf
std
jg
and
add
popa
pop
jbe
divl
dec
push
jno
movsl
lods
push
dec
repnz
xor
test
sbb
push
inc
imul
pop
pop
das
push
push
sub
dec
stc
or
push
adc
pop
sbb
lcall
or
movsb
jnp
lret
cld
xchg
adc
mov
inc
enter
or
inc
cmp
pop
insb
sub
pop
or
pop
mov
push
pop
pop
xchg
xchg
loop
pop
daa
mov
jno
push
rcrb
mov
or
imul
hlt
dec
push
cmp
loopne
inc
leave
rorl
call
push
ret
test
arpl
adc
push
push
pop
push
xor
setae
mov
jecxz
and
xchg
jp
cmp
mov
add
bts
ja
mov
call
cwtl
add
pop
fldcw
xchg
xchg
test
sete
shlb
or
int
fsts
stos
pop
outsl
mov
jne
fiadds
test
gs
lock
push
jp
in
push
clc
daa
int
pop
or
mov
pop
out
addb
or
jmp
lods
inc
and
mov
fildl
jns
mov
mov
sub
mov
sahf
mov
and
hlt
inc
dec
xor
jp
lock
push
clc
xor
xchg
dec
ret
into
add
and
or
xchg
popa
dec
rorb
mov
cmp
stc
push
inc
stos
cwtl
fstl
ret
pop
cli
xlat
imul
mov
aam
aam
imul
mov
push
in
test
add
push
mov
aam
or
sub
movsl
call
push
in
in
in
sbb
call
jno
inc
ss
rolb
cmp
roll
lahf
and
cmp
mov
es
mov
or
fisubs
fsubrl
add
sub
dec
add
subb
sub
insb
add
loope
movsb
imul
outsb
lods
mov
fiadds
cmp
mov
jge
scas
sub
adc
nop
xor
or
stc
jbe
repnz
jmp
push
in
mov
push
fwait
mov
push
sub
dec
in
add
xchg
fcoms
or
push
add
inc
push
cmpsb
jb
hlt
fbld
push
push
mov
mov
call
add
jne
imul
xor
mov
xor
mov
and
xchg
pop
adc
sbbb
lds
dec
or
aas
jne
icebp
sbb
fstpl
inc
and
mov
out
test
add
lcall
pop
add
ja
pusha
sub
fwait
add
push
mov
enter
mov
push
adc
inc
push
push
pop
push
and
insl
jae
mov
cmp
dec
sahf
pop
shll
push
push
jno
xor
adc
iret
icebp
adcb
call
add
stos
stos
mulb
mov
sub
jno
and
cmpsl
mov
jne
cmp
add
add
mov
mov
mov
mov
push
insb
leave
jo
rolb
cmp
sbb
push
js
stos
loope
pop
cld
mov
pusha
loopne
daa
mov
mov
adc
movsb
in
push
cmpsl
inc
and
add
in
imul
sbb
mov
pusha
mov
addb
pop
xor
sbb
dec
jnp
sub
xchg
add
or
mov
mov
loopne
iret
or
or
bound
movsl
shr
sub
dec
int3
sub
insl
jge
push
fdivrl
dec
ffree
dec
cld
push
push
xor
in
xchg
mov
push
sub
adc
pop
adc
insl
ss
xor
add
xor
or
es
test
mov
cmpsl
mov
repz
xchg
pop
mov
sub
pop
mov
push
mov
push
fiaddl
add
js
mov
shr
or
lret
adc
add
into
je
or
or
leave
sbb
and
cmp
inc
mov
push
and
hlt
mov
inc
adc
adc
in
jbe
rorb
or
sbb
jno
fisubl
rcrl
or
fnstcw
xchg
test
mov
fcoms
enter
xchg
sbb
pop
sub
movsb
xchg
mov
mov
jmp
sti
inc
or
sub
inc
loop
cld
and
mov
and
pop
jo
mov
sbb
movsb
xor
pop
add
or
test
add
es
sbb
xchg
xor
in
pop
dec
mov
into
pop
pop
scas
jo
or
dec
pop
mov
clc
rclb
pop
adc
pusha
js
ss
adc
adc
mov
add
adc
std
dec
aam
xchg
push
leave
icebp
jmp
cmp
sub
or
sub
push
jbe
cmpsb
fcomps
xor
xor
inc
xor
fstl
gs
pop
add
jb
cli
insb
loopne
cld
pop
push
out
push
add
loope
cmc
inc
loop
cmpsb
adc
adc
movl
adc
sub
dec
adc
dec
mov
push
mov
cwtl
std
add
scas
movsl
fs
cmp
pop
jmp
cld
and
and
iret
jb
in
les
movsl
cwtl
dec
rcrl
inc
jne
mov
mov
push
or
inc
push
hlt
inc
push
fwait
sbb
dec
insb
jp
xor
test
cmpsl
push
sub
sub
mov
add
mov
dec
jnp
xchg
loopne
xor
test
sub
into
aam
gs
dec
xor
dec
lret
mov
xchg
imul
push
pusha
loopne
popa
xchg
in
je
nop
pop
pop
add
sbb
push
pop
sbb
inc
shrb
and
adc
xor
mov
sub
hlt
and
rcl
mov
clc
movsb
mov
mov
xchg
cs
out
or
cmpsl
xlat
lcall
cmp
je
mov
pushf
in
mov
sub
inc
das
and
adc
xlat
or
ss
sub
fcoms
jnp
andb
fistl
pop
es
aaa
gs
loopne
adc
pop
ret
jmp
in
add
loop
push
cmp
test
fsubs
cmp
loop
cmp
sti
lds
lods
cmp
mov
cmp
and
xor
ret
pop
mov
pop
test
sub
push
add
add
jp
mov
or
push
inc
and
rcll
lods
fbstp
sarb
or
adc
dec
outsb
test
adc
add
adc
xchg
adc
sbb
scas
adc
xor
or
bound
xchg
aaa
xchg
in
sarb
cmp
add
dec
addr16
orl
add
inc
pop
gs
xor
dec
jecxz
test
jl
push
mov
lea
lret
pop
mov
mov
sub
out
hlt
rorb
shlb
enter
jne
fstpl
adc
sbb
je
mov
or
and
jne
inc
cltd
jge
mov
inc
add
mov
ss
jne
mov
clc
push
pop
mov
add
xchg
mov
enter
pushf
std
mov
adc
loope
repnz
repnz
cmpb
mov
push
cmp
test
mov
cli
push
addb
test
lea
sbb
fxam
bound
jmp
sti
fwait
insb
or
sub
nop
mov
push
nop
lcall
nop
popa
inc
jo
xor
push
setge
movsb
rol
addr16
and
arpl
divl
mov
mov
aaa
or
pushf
mov
loopne
addb
cmp
testl
xchg
push
mov
cltd
or
or
das
ficompl
mov
push
dec
loop
mov
aaa
mov
sti
ficoms
mov
in
cld
pop
cmpb
jp
imul
insb
dec
nop
cmp
xor
sub
push
push
aam
xorb
jl
adc
ret
xchg
enter
mov
adc
and
js
mov
sbb
xchg
jl
aam
mov
shl
xor
dec
or
cmpl
aam
ja
std
fcoms
mov
pop
shr
lock
or
push
or
and
rolb
add
cld
jo
lock
clc
rep
mov
inc
mov
sbb
adc
push
inc
inc
jle
faddl
add
lret
xor
pop
mov
les
jl
push
in
lea
add
pusha
pop
jns
in
cmp
xor
in
xchg
push
lea
or
xor
xor
enter
dec
mov
xor
pop
cmp
mov
nop
fnstsw
xor
pop
inc
pop
cmp
ffree
rorb
lea
sbb
sbb
add
mov
jp
pusha
push
or
adc
sub
imul
pop
stc
pop
or
pop
shrb
lods
or
sbb
fwait
aaa
mov
pop
adc
cmp
in
mov
test
mov
int
rorb
enter
pop
pop
mov
pop
fucomi
ret
or
sub
and
xchg
stos
jb
xor
mov
adc
add
or
pop
jecxz
mov
adc
sti
or
pushf
jp
popa
sbb
pop
cmp
arpl
hlt
dec
bound
push
xchg
or
sbb
sbb
or
or
mov
clc
jp
inc
sub
lds
pop
lret
fmuls
adc
into
push
notl
and
push
push
adc
push
cs
mov
and
jp
cmp
test
dec
sbb
add
xor
loopne
in
shrl
jno
scas
and
rolb
add
or
loope
les
pusha
push
mov
out
test
push
mov
lods
nop
fsubrl
cmpsl
and
or
dec
cli
mov
mov
or
loop
mov
dec
push
add
or
jecxz
popf
push
push
push
sbb
sbb
fisttpl
sti
call
loopne
add
adc
add
jmp
mov
xchg
adc
gs
aad
inc
stos
and
clc
pop
add
or
sub
and
pop
and
and
sub
fimull
test
inc
sbb
ret
sbb
xor
or
testl
hlt
pop
cmp
jecxz
in
nop
jne
cmc
add
push
dec
mov
addl
fs
sub
addr16
mov
mov
pop
sub
dec
movsb
pop
jge
push
cmpb
dec
fs
fsts
or
add
insb
repnz
jmp
jo
or
jnp
add
sbb
push
or
jnp
scas
je
sub
xor
sete
outsl
or
add
jb
daa
sbb
jo
lock
xor
les
inc
or
jge
and
xor
sbb
fucomi
sub
leave
xor
pop
ja
adcb
lret
add
and
cmp
jl
dec
call
pop
hlt
rclb
sbb
out
mov
add
or
ret
mov
push
mov
jecxz
dec
sbb
sbb
jl
cmp
movsb
and
stos
iret
inc
add
sbb
inc
cli
push
xor
cmp
jg
mov
stos
cmp
mov
push
or
push
add
and
cmpsl
sbb
scas
pop
adc
pop
cmpsl
xlat
and
mov
pushf
jbe
adc
xor
sub
cmp
jge
hlt
mov
out
push
jg
pop
xchg
out
adc
sarb
rcrb
imull
std
push
arpl
sub
jne
inc
inc
jmp
inc
fs
push
mov
pop
aas
cmp
mov
icebp
add
clc
ret
add
pop
lods
aam
xor
push
test
add
add
repnz
jle
sub
or
sub
pusha
loope
cltd
aam
xchg
scas
arpl
lcall
in
push
enter
rorb
shrb
pop
xchg
in
dec
je
imul
js
or
dec
cmp
pop
and
aaa
inc
push
bound
jae
pop
inc
inc
loope
pop
in
mov
lcall
loopne
and
ficomps
adc
roll
lods
pusha
in
mov
mov
xchg
inc
inc
test
inc
push
mov
push
xchg
or
inc
jne
rclb
adc
push
push
cwtl
fcoml
adcb
addb
add
push
pop
dec
stos
add
dec
and
imul
shr
out
je
ja
and
adc
and
aam
or
mov
jo
sbb
add
mov
es
fs
add
ret
inc
add
cli
xchg
fwait
mov
push
imul
in
js
dec
mov
test
mov
jmp
stc
clc
aad
and
jne
loopne
push
cmc
push
mov
push
push
pop
or
pop
push
sbb
bound
rorb
cmpsb
scas
pop
adc
jmp
mov
jecxz
sub
ret
push
nop
hlt
mov
push
in
fisttps
enter
sub
fdivrs
mov
lret
xchg
movb
add
inc
cmp
lahf
adc
rolb
nop
add
mov
aad
add
jo
insb
add
imul
in
lock
and
cmp
ja
push
dec
pop
xor
and
imul
out
stos
sbbl
add
or
pop
cltd
aad
or
mov
xor
movsl
popa
mov
sub
cmc
xor
setne
or
mov
adc
mov
cmpsb
push
jne
ja
imul
jle
fdivs
dec
pop
cmp
rcr
enter
jns
daa
add
bound
and
or
jmp
scas
hlt
out
int3
mov
or
add
cmp
test
popa
fcoms
nop
sbb
dec
sub
inc
mov
and
call
mov
xor
sub
push
jbe
add
rcr
jle
pop
int
fcomp
sbb
adc
frstor
aad
mov
cltd
lea
add
sbb
loope
in
mov
push
push
mov
mov
inc
cmp
or
jl
mov
loope
sub
lret
cmpsb
xor
mov
cld
fistps
call
jmp
cwtl
and
adc
jb
mov
and
not
cld
lea
test
cmp
lods
xlat
movl
fmull
cmp
jbe
add
jmp
add
mov
jb
jmp
cmp
pop
and
jmp
add
inc
push
out
adc
cwtl
inc
pusha
test
adc
lock
xchg
or
xor
addb
pop
mov
daa
dec
lea
cmp
jg
fimull
aad
cli
push
push
dec
dec
mov
aaa
mov
adc
inc
dec
cmp
jle
adc
imul
jne
jne
push
pop
adc
js
pop
fistps
and
add
pop
jecxz
jb
add
mov
xor
repz
xor
add
xchg
inc
jle
and
and
mov
insl
bound
adc
inc
daa
jne
mov
idivb
xor
sub
pop
and
mov
sub
pop
sbb
dec
pop
mov
iret
jo
xchg
cmp
cwtl
inc
push
lods
inc
lods
addb
ret
add
mov
or
sbb
push
pop
les
and
stos
fs
dec
adc
xor
pop
dec
int3
std
and
imul
nop
mov
xchg
pushf
add
or
and
ljmp
sbb
inc
mov
push
lcall
test
xlat
sbb
aaa
add
and
sub
add
loop
test
add
fcomps
push
push
pusha
cmc
push
jecxz
pop
push
push
lods
scas
inc
pop
adc
cmc
add
in
outsl
push
or
and
ss
xchg
shl
pop
jmp
sbb
or
cmp
sbb
add
in
daa
mov
sbb
xor
shrl
or
mov
add
pusha
mov
xchg
mov
and
ret
loopne
dec
add
inc
xor
push
arpl
inc
and
dec
mov
xor
inc
mov
jns
mov
add
nop
xor
sub
jns
mov
lahf
addr16
and
ds
fidivrs
jmp
ret
hlt
mov
call
and
sub
push
adc
jns
mov
pop
sub
or
loope
mov
in
ss
dec
mov
push
out
or
adc
sbb
add
insl
jecxz
xor
mov
dec
inc
push
jns
mov
dec
popa
inc
imul
das
jg
mov
arpl
out
push
les
dec
out
jmp
and
adc
push
gs
aad
ret
test
in
adc
aas
sub
xchg
sub
add
mov
inc
cmp
jne
inc
add
mov
xor
scas
cmc
rclb
sub
mov
add
and
adc
add
dec
enter
mov
dec
push
add
push
dec
and
mov
sbb
or
push
jecxz
or
dec
orl
xchg
or
fmull
nop
xor
dec
sub
xlat
xchg
adc
or
mov
cs
xor
pop
pop
add
or
pop
cmp
insb
jp
adcb
dec
add
pusha
test
lcall
mov
dec
push
mov
add
and
mov
movsb
or
push
rolb
xor
popa
push
push
add
push
add
dec
pop
lds
subb
jmp
pop
shlb
pop
rorb
cmpsl
in
cltd
cmpsl
mov
fldenv
lock
cmp
ret
jle
xchg
push
sub
andb
movsl
popf
or
push
lret
outsb
roll
adc
xor
test
pushf
nop
daa
fisubrl
push
sarb
cwtl
inc
or
xchg
dec
cld
pop
push
mov
sbb
mov
sub
xchg
ja
test
mov
es
dec
fwait
add
hlt
mov
mov
inc
push
and
add
in
push
and
ss
lret
or
dec
xor
sbb
fidivrl
dec
xchg
or
stos
movsl
les
cmp
stos
andb
and
jge
add
xor
arpl
or
pop
mov
mov
mov
cld
push
faddp
xchg
and
adc
and
orb
jbe
push
push
dec
test
adc
dec
adc
dec
mov
cmp
mov
xchg
nop
lds
xchg
nop
mov
in
dec
shlb
mov
mov
add
add
lret
mov
push
movsb
mov
in
or
jbe
lods
pop
adc
jbe
cmp
scas
pushf
test
add
loopne
mov
add
add
shrb
mov
and
pop
call
test
push
add
mov
loope
test
jo
adc
sub
adc
lock
hlt
stos
or
jg
sub
outsl
adc
push
and
iret
sub
ret
sub
push
fnstsw
jp
sbb
jmp
push
pop
push
adc
pop
mov
and
lock
add
jmp
cmp
std
outsb
or
pop
dec
pop
xchg
add
jbe
lock
into
icebp
rclb
pop
leave
mov
test
sub
xchg
loope
jne
lods
xchg
stos
xchg
xchg
jno
and
cmpsl
inc
adc
mov
test
xchg
mov
jl
test
jle
in
sbb
and
add
dec
jmp
xlat
fsubrs
sub
add
movsl
mov
loopne
repnz
xchg
inc
daa
imul
add
pop
inc
push
incb
push
call
sub
js
mov
mov
repnz
loopne
int3
jb
je
or
and
jmp
mov
mov
xchg
cmp
dec
mov
xor
call
nop
lea
push
sbb
push
imul
imul
fmuls
xor
jmp
out
nop
pop
add
and
jne
push
inc
and
push
int3
popa
push
fstpl
mov
inc
jmp
sbb
xor
and
adc
xchg
cmp
or
adc
popf
adc
add
rorb
lock
mov
or
rcrl
fcom
outsl
adc
dec
dec
xchg
cmp
jns
movsl
and
or
push
sub
push
addr16
sub
inc
add
jno
adc
sub
inc
outsb
jge
mov
sub
shrl
xchg
data16
adc
js
negl
dec
and
or
jne
popa
jecxz
adc
sbb
xchg
cltd
mov
sbb
int3
lcall
or
cmp
push
movsb
shl
insb
bound
dec
mov
es
push
add
push
sti
das
aam
jns
mov
into
sub
inc
lea
push
sub
pop
dec
jp
push
add
fstl
push
mov
or
adc
adcb
lea
pop
out
hlt
das
mov
push
xor
nop
fcoml
mul
in
jbe
mov
shll
push
mov
inc
sub
ss
in
pop
inc
inc
fsubl
repnz
cmpsb
or
xchg
dec
lods
ret
loopne
stc
add
fwait
bound
mov
std
or
adc
adc
or
push
or
mov
addb
add
xchg
orb
mov
lahf
pop
push
les
ret
dec
mov
mov
xor
and
push
bound
and
mov
stos
sbb
shlb
inc
dec
sti
cmpsb
or
aad
out
mov
adc
arpl
mov
adc
mov
inc
and
push
inc
enterw
dec
cld
push
sbb
dec
cmp
pushf
jb
cmp
xor
clc
push
xor
out
sub
and
inc
cmp
xchg
and
dec
cld
push
push
jecxz
adc
fistpll
call
addl
mov
push
insl
scas
inc
jge
lcall
insl
test
jmp
mov
out
sub
mov
roll
cmp
pop
rorb
and
aad
mov
add
jo
shlb
jmp
cld
pop
pop
xchg
xchg
pushf
add
push
push
add
xor
mov
stos
inc
pop
aad
lcall
out
and
add
imul
xor
popa
pop
inc
mov
and
ret
mov
fadd
and
push
lock
and
push
inc
xlat
pop
mov
cltd
jmp
sub
and
mov
cwtl
shll
mov
push
adc
dec
adc
mov
or
or
and
lcall
inc
dec
cmp
inc
cmc
and
lahf
pop
jne
pop
xchg
push
sbbb
je
dec
enter
add
outsl
out
int
xchg
rcrl
mov
add
sbb
popa
in
out
ja
xchg
pop
push
outsl
push
push
xchg
sbb
je
dec
loop
rolb
inc
cmpsb
jbe
xchg
xor
jo
adcl
jbe
in
or
mov
push
mov
pop
mov
loopne
pop
xchg
push
sahf
inc
mov
add
lds
ljmp
in
addl
cmpsb
imul
or
clc
and
rolb
mov
mov
inc
push
daa
sub
or
add
adc
inc
imul
lods
add
cltd
jmp
aaa
mov
xor
adc
cmp
scas
loop
test
push
or
sbb
inc
mov
sub
aas
rol
push
mov
outsb
mov
adc
shl
cmp
adc
push
xor
dec
rol
in
add
imul
fs
stc
movsb
or
pusha
or
or
dec
lret
imull
lods
ret
mov
shl
jge
cmp
cs
fdivl
mov
push
js
xor
xor
std
call
pop
orl
test
shr
mov
mov
xor
pop
int3
call
cld
and
push
dec
inc
push
sub
inc
cmp
call
xchg
jmp
les
sbb
adc
sub
jecxz
push
lea
popa
or
inc
push
push
cmp
shrb
xchg
adc
inc
popa
mov
adc
push
fbstp
and
lea
push
inc
es
xchg
push
xchg
pop
les
xor
jecxz
cs
dec
or
test
and
dec
jmp
nop
iret
pop
scas
loopne
sbb
push
xor
incb
cmp
xlat
push
push
mov
aad
fistpl
inc
int
push
fiadds
in
pop
mov
or
mov
push
pusha
sub
jecxz
lds
ret
xor
inc
rolb
dec
pop
arpl
xchg
imul
jge
mov
in
sbb
mov
int
mov
adc
mov
roll
mov
jo
mov
mov
xor
xlat
cmp
loopne
or
xor
insl
cmp
mov
pop
in
pop
test
add
and
loopne
jecxz
loopne
dec
dec
dec
fistpl
dec
jne
aam
or
rcr
push
in
fisttps
out
xor
pusha
mov
rol
mov
ror
xor
shr
mov
sub
jnp
xor
shr
xor
add
add
add
or
fsubrs
mov
mov
out
mov
or
jae
or
jmp
pop
call
add
aam
sub
jge
xchg
or
scas
pop
lds
repnz
cli
fisubrs
lahf
add
xor
and
and
xchg
push
aam
sbb
popa
xor
push
movsl
sbb
repnz
push
imul
pop
pop
inc
sti
outsb
push
or
xlat
ret
rcl
add
subl
add
jb
xor
call
sbb
call
and
push
sub
ljmp
int
ret
shr
add
push
xchg
or
cmpsb
mov
xor
in
imul
shl
in
push
cmp
bound
rorb
cwtl
add
pop
aaa
mov
lock
sbb
cltd
call
xor
loopne
loopne
in
movsb
jb
call
cmp
loopne
xor
imul
fdivs
pop
xor
out
push
testb
cmp
test
add
fidivrl
push
in
push
xor
and
and
stc
mov
cli
loopne
or
xor
pusha
test
shlb
inc
adc
mov
inc
jo
call
push
jo
ficoms
dec
cmpl
addb
adc
push
loopne
cs
loop
mov
add
add
std
inc
fadds
pop
jbe
call
push
and
fisubl
add
dec
in
or
xlat
add
gs
fdivrs
inc
shll
and
and
in
shr
lret
popa
mov
out
mov
imul
adc
nop
pushf
aam
nop
cmpsb
rcl
cmp
and
call
in
in
inc
shr
rolb
subb
xor
sub
push
sub
jge
shlb
adc
dec
rorb
adc
dec
loopne
leave
das
ror
lock
jo
add
dec
ret
adc
cmp
sub
xor
inc
jb
push
dec
inc
and
add
push
clc
adc
dec
cs
xor
xor
rorb
push
xchg
inc
xchg
push
es
lcall
add
add
pusha
push
dec
xchg
mov
cmpsb
rcrb
push
add
or
push
or
pop
and
xchg
pop
pop
rorb
fs
pusha
push
push
cmp
inc
pusha
pop
mov
mov
or
adc
add
mov
in
cmpl
lret
or
fs
dec
xchg
xchg
dec
rorl
stc
stc
add
fsts
add
xchg
inc
mov
testb
add
fsubrl
loopne
loopne
or
sarl
push
sbb
jno
mov
pusha
lret
sbb
or
mov
push
add
mov
add
sub
mov
pop
add
scas
and
aam
incb
sub
pop
cmp
popa
ljmp
xor
lcall
enter
sub
sarb
and
or
sbb
mov
jne
inc
xlat
data16
push
push
inc
inc
jae
mov
sub
in
stos
jne
mov
dec
adc
add
sub
jl
sub
out
mov
add
out
mov
or
mov
dec
jne
pop
adc
dec
sub
loope
lock
idiv
les
jl
sub
mov
cmp
jbe
or
adcl
fs
in
inc
push
pop
adc
sub
xchg
pusha
jnp
jae
push
pop
fadds
rep
or
aad
xchg
sahf
mov
or
mov
mov
dec
pusha
outsl
pop
loopne
rcrl
mov
notl
jle
mov
mov
mov
mov
adc
clc
push
and
cmc
data16
sbb
dec
fiaddl
dec
sbb
ja
adc
inc
loop
jo
add
dec
lea
out
inc
mov
sbb
fadd
mov
inc
in
push
repnz
inc
in
in
in
pusha
xchg
mov
pop
dec
pop
pop
pop
pop
scas
addb
push
sub
xchg
cmp
pop
inc
fstpt
dec
or
adc
pusha
in
pop
aam
cmp
xchg
pop
mov
inc
sub
sbb
add
push
pop
add
aad
andb
pop
xorl
jo
fstpt
sub
mul
ret
cmp
mov
and
adc
inc
dec
mov
sub
push
or
add
dec
or
mov
fs
orl
lds
outsb
movsb
inc
movb
dec
jb
adc
adc
and
jo
push
adc
push
sbb
fimuls
pusha
ljmp
imul
and
movaps
fwait
dec
fxch
fdivrs
inc
add
addb
push
pop
jl
adc
cmp
sub
push
and
ret
pop
test
dec
jb
mov
cmp
jno
into
mov
sbbb
dec
imul
dec
add
nop
lcall
adc
adc
adc
pop
pop
push
ds
pop
movsb
jnp
or
cmp
add
or
cmp
pop
fimuls
mov
adc
test
sub
cmpsb
mov
incl
and
adc
mov
in
lock
xchg
dec
fsubs
lock
or
dec
jle
es
mov
inc
sbb
or
mov
xor
mov
mov
push
xchg
push
push
lret
in
and
lods
xor
inc
mov
or
test
pop
in
mov
mov
inc
out
das
mov
sbb
push
loope
jno
cmp
test
adc
sub
gs
xor
aaa
and
mov
and
push
mov
and
push
pop
xor
pushfw
call
jb
repz
dec
cld
xor
push
or
pop
adc
and
xchg
lea
push
rcrl
xchg
jo
sbb
cld
mov
call
aaa
sbb
jnp
enter
adc
mov
movsb
filds
or
je
insb
inc
test
ret
aas
enter
aam
mov
mov
jmp
inc
xor
enter
pop
cs
imul
or
inc
xor
scas
or
testb
xchg
mov
ja
dec
mov
and
insb
loopne
cld
inc
sarb
pop
push
xchg
jae
jne
push
pusha
xor
imul
inc
jmp
mov
mov
sub
in
and
and
mov
aaa
and
arpl
or
mov
add
lods
mov
and
std
sti
xor
push
cmp
push
push
jnp
jne
xor
or
jl
xchg
push
jnp
push
leave
aam
fwait
clc
movsb
add
in
jmp
mov
sub
dec
dec
push
pusha
into
adc
sub
push
or
mov
cli
push
jl
fildll
cmp
jbe
jns
pop
sub
orl
or
and
shlb
or
cmp
repz
xchg
and
and
mov
cmpl
jbe
cmpl
pop
clc
repz
insb
mov
movsb
jmp
push
in
xor
aaa
sub
movsb
inc
mov
xchg
test
jbe
mov
aad
mov
shrb
dec
push
jbe
dec
fisubrs
sbbl
add
push
cmp
sbb
cmp
lcall
mov
shlb
adc
push
push
fsubrl
in
adc
cmp
imul
or
mov
pop
add
or
stos
pusha
aaa
rorl
ss
sub
push
adc
lods
pop
ss
in
cli
lock
jo
push
push
add
push
add
stos
int
mov
pop
cmpsl
out
mov
sub
push
jae
push
xchg
dec
mov
jmp
test
les
scas
aad
sub
pusha
push
mov
gs
cmp
add
out
fisubrs
inc
hlt
sbb
xor
sbb
dec
and
dec
push
add
push
arpl
mov
imul
push
mov
add
inc
adc
aad
cs
push
js
in
xor
xchg
scas
sti
add
sahf
mov
push
sti
andl
jmp
and
ja
add
xor
rol
jbe
jmp
inc
jg
or
subb
inc
and
or
scas
mov
daa
add
adc
push
mov
and
stc
adc
daa
and
inc
shl
loope
add
inc
scas
sar
out
test
sub
sarb
sub
add
mov
das
jno
add
push
int3
inc
test
push
mov
sbb
loopne
mov
fdivrl
jbe
shlb
pop
pop
mov
or
iret
ficoms
push
inc
push
ret
jl
or
xchg
lret
dec
cmp
add
add
push
ret
push
or
test
jl
add
xorl
lea
and
lea
xchg
jo
xchg
mov
or
xor
push
and
jp
in
mov
push
dec
ja
test
andb
testb
add
sbb
rorb
cmpsl
popa
cmp
and
and
int3
dec
rorb
mov
add
pop
cmp
xchg
push
fsubrs
mov
outsl
sub
lea
push
rol
sbb
push
jl
mov
dec
cmp
jbe
call
push
lcall
loope
aam
cmp
pop
jb
pop
push
icebp
scas
cld
inc
push
add
sub
push
pop
jecxz
sub
pop
inc
ss
cmp
or
stc
data16
insl
and
cmp
ja
dec
popa
cmp
jae
ss
jb
loopne
lahf
test
push
test
loope
out
pop
sti
add
mov
sub
into
mov
inc
mov
lods
sahf
push
loope
mov
pop
push
jmp
mov
in
push
loope
xchg
and
adc
xor
or
out
cmp
xchg
sbb
adc
sbb
rolb
sbb
fdivs
hlt
dec
xor
xchg
lahf
mov
sbb
dec
mov
test
insb
fistps
pop
inc
dec
xor
adc
jmp
enter
lods
fsub
jp
mov
xor
mov
mov
pop
add
xchg
jno
stos
aaa
and
mov
hlt
mov
stc
add
pop
mov
mov
cmp
mov
sbb
cmp
mov
jp
fstpt
sub
fidivs
clc
xchg
adc
dec
nop
sub
jae
in
out
mov
adc
mov
rcr
inc
dec
mov
jne
pop
add
fidivl
pop
push
imull
add
inc
lcall
xchg
or
adc
xor
pop
pop
repz
mov
add
imul
mov
mov
cmp
adc
psrad
mov
jle
pop
push
adc
daa
adc
pop
xor
inc
cmp
adc
push
mov
or
bound
shlb
push
xor
or
rol
and
lcall
cmp
mov
xchg
adc
push
pop
out
or
and
or
sub
aas
add
mov
fcomps
popa
push
fdivl
mov
push
jl
std
xor
bound
imul
and
push
das
push
add
pop
enter
mov
jg
push
or
sbb
addb
data16
jp
and
dec
mov
mov
incl
cmp
push
lea
stos
mov
movntps
fldcw
jae
imul
inc
daa
fnstenv
sub
jae
scas
push
pop
repnz
xor
mov
sbb
mov
mov
stos
mov
mov
push
in
pushl
loope
and
add
mov
enter
shl
add
inc
cld
out
and
shl
xor
mov
mov
faddl
lock
mov
test
bound
aaa
movsl
out
mov
jp
jge
hlt
mov
mov
rcr
jl
rorl
sub
adc
adc
add
dec
nop
rclb
icebp
sub
or
imul
shlb
outsl
insb
push
or
jge
jno
or
mov
pop
lahf
dec
clc
jl
sar
lods
call
mov
aas
jns
lock
icebp
dec
femms
add
fbld
popf
popa
pop
test
and
sarl
int
xor
jo
jecxz
cmp
jl
rorl
pop
je
cmp
add
pop
and
lods
adc
shll
mov
jle
test
jno
xchg
fwait
push
push
jb
or
lock
stos
bound
icebp
gs
cmp
xor
mov
fidivl
inc
push
hlt
movsb
fsubrp
js
mov
add
adc
arpl
sbb
movsb
jge
pop
test
or
in
pusha
mov
push
pop
pop
mov
xor
aad
daa
mov
inc
inc
sbb
lods
mov
in
adc
and
and
xchg
or
ljmp
ficoms
inc
in
rclb
jo
popa
and
roll
icebp
pop
push
gs
inc
push
es
test
sbb
sub
imul
es
or
xchg
inc
add
mov
jecxz
lock
dec
scas
mov
rolb
xor
insb
and
into
int
add
sahf
insb
stc
dec
sub
push
loope
notb
adc
pand
push
cmpsl
add
push
mov
fisubrs
outsl
jbe
ss
jmp
push
js
jbe
mov
jmp
sbb
insl
das
pop
sub
cmp
mov
loopne
cld
inc
add
gs
sub
add
adc
out
dec
sub
pop
dec
jo
xchg
xor
cmp
hlt
cmp
dec
int3
pop
push
ret
pop
or
jno
jbe
mov
or
das
or
cltd
add
cmp
pop
jmp
mov
fldcw
or
sbb
sub
dec
inc
jmp
jae
xchg
mov
cmp
ss
or
negl
jmp
or
ror
fiadds
or
test
jecxz
mov
imul
movsb
std
imul
or
mull
lods
fmull
pop
pop
ret
jbe
and
mov
sbb
pop
jmp
rorb
xchg
aam
or
sarl
aas
in
mov
and
outsb
push
stos
add
or
sub
adc
mov
into
lods
mov
jl
in
sub
or
xchg
add
ret
adc
dec
lods
sub
inc
jb
cmp
cmp
mov
or
and
sub
fisubrs
movl
push
int
mov
dec
mov
stos
inc
xchg
cmpsb
test
xchg
lds
rclb
inc
or
or
hlt
push
ret
jmp
and
push
cmp
mov
arpl
ljmp
or
sub
data16
mov
xchg
xchg
push
sub
add
test
add
lret
xor
and
mov
or
sbb
scas
mov
push
mov
mov
adc
inc
xor
jne
mov
bound
jno
rcll
loopne
je
xchg
ret
and
push
xchg
sbb
xchg
add
das
xchg
push
aas
mov
mov
pop
icebp
or
inc
fs
rorl
inc
add
pop
push
decl
xchg
pop
out
nop
pop
pop
fistpl
pop
pushf
mov
pop
push
rcll
push
mov
test
sub
push
pushf
xchg
or
adc
pop
out
adc
cmp
push
jecxz
pop
sub
int3
inc
push
jb
add
testl
adc
das
lods
adc
mov
mov
cmpl
jne
sbb
je
movsb
add
mov
sbb
inc
add
sbb
and
bndstx
leave
int3
out
std
pushw
aas
xor
out
cmp
jle
pop
pusha
xchg
and
and
lea
movzwl
rcl
in
inc
cmp
in
xor
cld
mov
test
shr
shl
rcrl
jne
push
add
add
xchg
xor
push
pop
rorl
das
sub
out
xchg
pop
add
pop
loope
and
or
pop
add
inc
das
enter
in
push
arpl
es
jb
or
movsl
in
insb
mov
or
push
push
insb
xor
inc
daa
test
jg
or
jo
add
add
mov
cmp
mov
or
or
push
sub
inc
jo
adc
mov
add
xor
and
imul
insl
lods
mov
inc
and
cld
sahf
insb
lock
pop
pop
movsl
mov
jne
jo
call
and
push
add
add
add
popa
outsb
mov
inc
xor
jo
inc
pusha
jo
sub
jp
jmp
jbe
sarl
sbb
push
sub
adc
testb
je
cmp
mov
daa
lods
imul
push
jbe
rol
add
xchg
cmpsl
imul
lcall
or
pop
sub
ror
pop
add
test
mov
jl
push
js
dec
ss
adc
jl
clc
js
cmp
sbb
add
pop
subl
add
rolb
shlb
or
dec
and
icebp
jmp
popl
ss
sbb
dec
int3
jo
ret
adcl
mov
das
jg
add
and
hlt
xchg
bound
or
insl
add
dec
jo
and
pop
inc
or
pop
ja
sbb
sbb
clc
jg
inc
hlt
xor
push
push
push
mov
xchg
or
inc
mov
add
pusha
mov
push
push
jno
add
push
and
fdivs
dec
push
push
sbb
lcall
in
pop
subb
push
mov
jg
shll
mov
sbb
add
sbb
sar
int3
lock
mov
sbb
rorl
sbb
sbb
inc
imul
roll
add
cmpb
leave
jmp
xor
inc
lock
push
sbb
push
nop
and
dec
adc
mov
bswap
lret
outsb
subb
sub
les
mov
incl
or
cmp
sbb
or
sbb
jmp
push
and
pop
pop
xor
mov
into
sub
mov
shr
cmp
js
adc
and
repz
jg
int3
sub
cmp
jne
push
leave
ljmp
jno
je
mov
subb
xchg
sub
mov
ret
jmp
mov
les
jae
adc
cmpsl
movsb
add
xor
or
rcl
push
fstps
je
add
add
sbb
or
lock
and
xor
sbb
in
xor
mov
sub
push
pusha
jnp
loopne
xchg
mov
jl
or
sub
xchg
test
add
cli
or
fimull
int
imul
add
add
or
mov
or
add
inc
or
inc
into
adc
out
xlat
add
cs
adc
cmp
pop
fwait
jmp
sbb
xor
cmp
rorb
jl
dec
add
fidivl
andb
imul
jnp
add
or
jmp
cltd
inc
xchg
orb
push
xchg
loopne
or
push
or
or
dec
adc
sub
scas
mov
xchg
xor
sbb
mov
sub
fnstenv
push
push
out
pusha
fnstenv
adc
ja
pusha
dec
adc
mov
pop
popa
or
push
or
adc
in
cmpsb
out
inc
add
mov
jle
cmc
out
cmpl
push
sbb
and
ret
push
outsl
orl
dec
enter
xor
sbb
adc
fisttpl
sub
enter
aad
imul
xchg
dec
adc
mov
and
add
xor
int3
and
scas
jl
push
xor
add
subl
pop
loop
inc
add
hlt
push
sub
or
push
cmp
inc
loopne
inc
add
cmp
shrl
sub
push
popa
loope
es
inc
enter
mov
shrl
or
mov
cmp
pusha
push
pop
ja
mov
aas
mov
mov
pop
cmp
jb
rcrb
add
rcrl
add
dec
dec
or
ds
pusha
pop
sbb
push
aas
push
pop
sub
int
push
xchg
push
or
or
scas
mov
jne
push
andl
cmp
push
clc
imul
daa
pop
push
roll
aaa
xor
mov
cs
aaa
cmp
je
xor
adc
popa
xchg
adc
ds
jne
push
push
testl
sub
cmp
jmp
jb
sub
mov
jbe,pt
xorb
dec
das
adc
into
test
movl
subl
jecxz
mov
leave
rorb
sub
xor
sti
pusha
push
add
mulb
ja
sbb
xor
jo
push
mov
xor
jno
xor
mov
lds
adc
jmp
sbbl
push
pop
pop
ret
add
int3
sub
loopne
aam
add
add
or
mov
ss
dec
jnp
sub
les
test
adc
gs
inc
mov
out
jb
add
pushf
outsb
add
jmp
in
pop
mov
adc
lods
scas
pop
xchg
xchg
or
adc
sbb
add
bnd
shlb
and
mov
push
sbb
mov
sti
addb
jbe
push
push
cmp
sub
fidivs
pop
inc
inc
push
or
mov
jb
cmp
sub
lahf
icebp
daa
shll
jp
outsb
mov
mov
wbinvd
fdivs
push
pop
aam
mov
pop
pop
out
mov
sub
lret
add
mov
push
ret
mov
xor
cld
cmp
push
bound
push
dec
sarb
mov
add
and
jne
movsb
das
mov
les
in
push
cmp
and
int
push
jg
sbb
or
jmp
js
adc
push
dec
adc
or
xor
and
enter
clc
cmp
inc
or
pop
je
jmp
or
push
cmp
loope
sub
pusha
xchg
inc
out
add
dec
sub
mov
inc
sbb
clc
and
sbb
add
cmp
cli
jg
jmp
push
jne
pop
push
ljmp
xor
icebp
mov
imul
inc
cmp
push
pusha
mov
mov
fadds
adc
mov
fdivl
push
mov
dec
inc
pop
pop
or
mov
sbb
add
push
gs
mov
xor
or
sbb
icebp
leave
add
and
add
cmp
adc
add
jo
icebp
es
mov
dec
les
add
divl
dec
push
inc
mov
adc
jmp
or
sub
shlb
add
push
xchg
js
push
pop
in
pushf
push
jge
lret
fs
jl
repnz
push
push
js
call
adc
movsw
push
jmp
cmpsl
and
sbb
mov
adc
add
or
or
jne
jno
mov
cmp
sbb
sbb
cmp
arpl
lret
cmp
jne
push
jno
sarb
xor
out
fcom
mov
ja
cmp
adc
jmp
adc
pusha
jne
inc
xor
xchg
js
sbb
jbe
adc
shll
lahf
movsb
xchg
and
jle
adcl
push
movl
xchg
mov
inc
adc
inc
mov
fdivs
insb
jle
rcrb
popa
nop
or
js
inc
repz
pusha
mov
xchg
pusha
push
jne
aas
pop
add
movsb
or
sar
ret
inc
xor
lcall
stmxcsr
aam
and
or
jae
cltd
xor
mov
and
mov
push
dec
test
sti
jmp
movq
movaps
push
clc
repz
outsb
jae
xor
jle
xor
cli
rorb
push
lahf
jo
lret
je
lods
or
jge
repz
or
jg
cmpl
ret
adc
jnp
mov
xor
or
repnz
ret
jns
notl
or
add
adc
clc
movsb
cmp
fwait
ja
add
mov
mulb
xor
pop
idivl
mov
int
add
sbb
push
pop
rcll
mov
inc
cmpsl
jmp
imul
inc
jle
or
xchg
std
mov
popa
scas
adc
adc
sub
mov
inc
roll
movsb
adc
pop
loopne
jp
mov
dec
xor
push
les
cld
ret
jge
mov
jne
leave
or
push
jne
pop
push
movsl
and
mov
sbb
out
daa
mov
aaa
cwtl
xor
xchg
dec
dec
xchg
mov
mov
mov
lea
cmp
cvtps2pd
and
jbe
mov
outsb
fisttpll
pop
sbb
pop
sub
or
mov
cwtl
add
ret
imull
mov
mov
mov
mov
testb
rol
xchg
add
push
and
or
cmp
inc
je
cmp
mov
inc
inc
int3
jle
cmp
call
sub
xchg
pop
jmp
mov
mov
cmp
jne
add
cmp
shll
or
loop
leave
and
mov
ja
xchg
icebp
cwtl
or
or
adc
and
out
mov
dec
addb
call
std
push
or
popf
addb
mov
inc
ds
insb
cmp
adc
sub
jp
push
inc
hlt
fcomi
arpl
rcl
sub
outsl
and
jae
sbb
adc
push
mov
imulb
pop
add
push
loope
and
xchg
inc
out
push
mov
ja
cli
dec
ficoml
rclb
adc
stc
jg
inc
cmp
jne
inc
cmp
inc
xor
jl
dec
adc
loope
inc
inc
lods
push
pop
mov
push
adc
pop
test
inc
pusha
and
sbb
adc
push
dec
mov
int3
sub
inc
inc
aad
insb
lea
hlt
cmp
rcrl
add
int
arpl
out
sbb
adc
lcall
push
lret
cmpsb
cmp
adc
or
xor
out
add
add
add
add
mov
sub
mov
pop
adc
and
pop
and
or
or
cld
imul
cmp
aam
stos
sbb
in
insb
adc
jp
out
imul
sarl
sub
fistpll
ret
jnp
shl
shlb
dec
leave
clc
imul
or
inc
pop
cmp
mov
fisttpll
loopne
xchg
shl
shlb
std
xor
cmp
aam
lret
jne
jo
popl
in
cmp
jmp
jnp
insb
inc
mov
mov
or
int3
in
lock
adc
sub
cmp
or
xchg
push
add
or
add
fs
shr
cmp
cmp
or
push
mov
sbb
mov
ret
pop
cmpsl
or
imul
jae
sub
aam
aad
xchg
mov
xor
xchg
inc
and
jns
pop
push
push
sub
mov
lds
mov
cmc
add
add
popa
push
insb
ja
pusha
pop
inc
adc
pusha
mov
cmpsl
nop
pop
and
cmp
adc
jmp
cli
or
cmp
ja
mov
pop
call
movb
dec
xchg
icebp
or
stc
fdivs
cli
or
add
jmp
or
mov
inc
ds
ret
js
lret
test
cld
jb
test
sub
add
jmp
mov
dec
cwtl
js
dec
mov
mov
dec
dec
mov
inc
fidivl
jo
repnz
ret
adc
dec
push
mov
adc
pop
lcall
sbb
dec
cld
enter
push
push
imul
mov
sub
call
scas
sbb
pushf
adc
add
jne
jnp
outsb
mov
sub
jg
outsb
push
cmp
jne
mov
test
cmp
jne
dec
jae
xor
es
jne
call
or
xor
or
jnp
icebp
fidivs
jmp
adc
push
dec
jmp
adc
iret
iret
jmp
std
std
jmp
cld
lock
int3
icebp
cld
ret
pmaxub
xor
inc
pop
fidivs
test
jp
push
push
movb
and
lock
hlt
or
rolb
pop
xorb
adc
add
loope
or
dec
mov
testb
orb
adc
cmp
movsb
or
push
fcomps
subb
sbb
or
or
dec
or
dec
cltd
dec
cs
push
inc
push
add
add
and
add
adc
cmp
je
les
stos
jmp
sbb
stos
add
arpl
adc
or
into
clc
push
adc
cli
out
insb
pop
or
jg
add
mov
mov
inc
rcll
dec
sbb
push
adc
lock
sub
add
dec
repz
movsl
mov
fcoml
stos
mov
pop
jle
push
push
pop
div
jb
pushf
push
loopne
or
imul
mov
imul
fmull
data16
sub
pop
adc
push
insb
js
sub
xchg
push
mov
cld
xchg
jbe
sub
adc
push
xlat
xor
pop
mov
and
shrb
imul
jge
pop
xlat
in
or
enter
and
enter
sub
sbb
test
add
orb
rolb
insl
mov
leave
push
xor
neg
sbb
fimuls
add
and
pushf
adc
movsl
outsb
lods
push
mov
in
sbb
in
into
cmpl
es
in
dec
rcrl
fstl
aas
jne
mov
inc
jmp
cmp
jne
orl
jmp
inc
shlb
sub
jecxz
ljmp
adc
jg
fisubl
or
in
add
or
and
adc
insb
adc
pop
jne
dec
add
add
and
inc
lds
mov
clc
sub
lret
or
call
mov
jmp
test
add
je
mov
sub
cmp
ja,pn
xor
add
cmp
xchg
mov
sbb
loopne
daa
movsb
cmp
inc
push
sbb
xchg
and
dec
test
push
je
mov
adc
adc
scas
pop
adc
flds
mov
pop
bound
jne
test
jne
push
jle
or
or
sub
mov
inc
mulb
xchg
xchg
fimull
mov
pop
xchg
add
cs
adc
das
in
rolb
jmp
inc
xor
mov
aaa
push
push
xchg
cmp
in
cmpb
jmp
push
xchg
add
mov
push
sub
and
mov
sub
sbb
mov
inc
or
add
jbe
loopne
adc
pop
jp
jge
stos
mov
add
movb
shll
jo
and
jno
jbe
or
aad
out
add
enter
iret
data16
push
push
jnp
jne
idivb
shr
or
hlt
xchg
rcrb
sub
or
or
adc
adc
rcrb
mov
pop
aad
adcb
je
hlt
push
loopew
xor
out
test
inc
add
sub
dec
cld
cmpsb
testb
inc
mov
mov
shrb
not
pop
or
inc
and
dec
jmp
dec
push
cltd
or
in
es
adc
push
aas
push
xchg
fmul
xor
pop
push
jmp
xchg
pop
arpl
sbb
sub
test
cmpsl
inc
jno
jns
pop
stos
lock
lods
js
and
jo
xor
push
inc
pop
adc
cwtl
lret
js
xor
ret
cs
jbe
xor
jmp
and
add
push
cmp
ret
pop
in
inc
and
movsl
and
xor
jp
out
int3
fwait
sbbb
sub
xchg
or
fwait
or
inc
js
push
add
insb
pushf
sbb
mov
xchg
mov
or
adc
fidivs
ret
orb
jle
or
fisttpl
dec
lods
and
int
out
mov
or
je
inc
cmp
jb
lea
push
adc
push
pop
dec
mov
in
add
and
cmp
jb
gs
andb
xchg
xchg
xor
pusha
in
es
addb
nop
dec
clc
add
cmp
add
pop
add
and
or
lods
mov
into
adc
and
test
cli
jmp
pop
sbb
cs
lcall
pusha
pop
jecxz
test
push
aas
add
inc
mov
inc
pop
add
inc
mov
cmpsb
xor
call
push
fidivrs
pop
adc
add
fs
popa
sbbl
xchg
and
mov
pop
mov
and
ret
daa
or
dec
push
mov
aam
test
out
mov
and
sbb
or
decb
std
movb
sub
outsb
fcmovb
dec
leave
sub
std
add
mov
cmpsb
arpl
push
push
rcr
aaa
in
and
xorl
popa
popa
rclb
mov
xlat
rorl
adc
pop
loope
push
fcmovu
je
lahf
sbb
loopne
cmpl
and
dec
push
daa
and
xchg
mov
add
ja
ret
jl
pop
pop
outsl
orb
mov
adc
or
insl
test
js
jle
push
push
pop
fists
into
imull
inc
pop
jmp
pop
clc
add
loopne
or
lock
aad
loop
inc
je
lock
add
cmovp
xchg
das
outsl
and
inc
rorl
in
iret
insl
mov
xor
repnz
mov
mov
pop
or
and
lock
dec
cmp
and
mov
xchg
mov
inc
cmpl
mov
pop
je
push
adc
and
add
int3
inc
je
das
mov
inc
mov
cmp
mov
dec
xchg
mov
inc
add
adc
popf
xchg
xor
add
add
xlat
fmuls
or
jecxz
sub
push
cmp
jb
xor
in
sbb
ss
jp
insb
insl
aad
call
test
or
xchg
dec
add
push
cmpsb
fmull
lret
jp
mov
jmp
push
push
mov
fnstcw
add
inc
jno
and
jb
sub
inc
movsl
in
imul
add
ror
or
adc
imul
sbb
pop
shrb
lret
loope
pop
xchg
mov
jbe
and
add
push
xchg
lds
jns
mov
sbb
inc
mov
sub
add
and
fcomps
pusha
push
sahf
stos
mov
cmpsb
cwtl
add
loope
test
push
pop
js
pop
mov
add
cmp
aam
js
subl
mov
push
jbe
mov
sbb
je
push
jbe
adc
adc
loope
add
push
add
sbb
aaa
push
mov
jl
jge
pop
xchg
insb
push
and
leave
shlb
adc
aam
jge
icebp
xor
pop
dec
mov
dec
cmc
shrl
and
dec
shlb
pop
and
cmp
out
ds
inc
pop
push
inc
iret
flds
adc
sub
xorb
push
xor
cmp
faddl
xchg
pushf
xor
mov
push
jle
cltd
pushf
mov
arpl
and
popf
ret
les
fs
inc
push
je
add
mov
out
dec
or
mov
inc
inc
pop
dec
or
cwtl
dec
mov
xor
push
pop
jle
orb
jo
mov
add
sub
xchg
sbbb
xor
movsb
ret
lea
push
loopne
mov
add
jo
pop
add
xor
inc
dec
add
repnz
pop
daa
add
adc
add
or
mov
jno
je
lcall
flds
add
cmp
push
push
nop
adcl
jae
sub
or
pop
enter
or
xor
sub
or
or
or
or
or
ja
cmpb
jns
push
cwtl
push
push
and
pusha
in
nopl
in
lods
xor
push
adc
pop
adc
fwait
cmpb
inc
add
popa
in
adc
adc
sahf
lret
out
adc
ret
fisubs
lcall
adc
and
and
push
push
push
lret
adc
mov
pop
xor
in
lcall
cmpb
add
pop
enter
sbb
pop
push
sbb
out
sbb
jb
sbb
add
aaa
dec
jge
sbb
addr16
push
push
inc
decl
in
push
pop
pop
jne
add
add
sub
in
ja
clc
cmp
jae
add
cmp
xchg
lock
movsl
fiaddl
inc
add
xor
push
in
push
in
jno
repnz
sub
shr
jns
push
ret
adc
aad
cmp
enter
mov
cmp
fwait
out
rcll
sbb
add
fmulp
dec
call
nop
adc
dec
dec
cwtl
jmp
xor
ljmp
jmp
jmp
incb
in
in
cltd
sbb
out
repnz
sahf
enter
out
out
jge
inc
enter
out
pop
lock
imul
in
icebp
icebp
ud1
sahf
repnz
std
repz
hlt
hlt
cmp
pushf
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xor
cmp
pop
testl
cmp
clc
clc
inc
push
fsubs
clc
cltd
adc
iret
in
repnz
stc
lock
cli
cli
sbb
sbb
iret
sti
sbb
jb
jns
stos
cld
cld
cld
je
sbb
xchg
aaa
cld
push
packuswb
jnp
mov
xor
sbb
add
adc
add
add
pop
sub
add
lahf
cmc
xchg
js
in
mov
or
movsb
imul
jecxz
enter
mov
in
stos
and
fdiv
inc
adc
push
in
stc
daa
ss
inc
in
sti
out
out
cltd
and
add
xchg
pop
leave
dec
sti
sub
sbb
pop
jmp
jno
push
mov
cltd
in
add
cli
popf
cli
imul
cli
out
out
xor
cltd
push
lock
add
cli
push
cli
test
jmp
sbb
dec
cs
stos
push
stc
push
jno
sbb
fstpl
int3
jmp
push
div
negl
fwait
inc
pop
and
xor
add
xchg
clc
cmp
lret
sti
in
sbb
sti
cltd
mov
pop
xchg
add
sub
sbb
cmp
and
ret
test
inc
or
loop
push
jno
push
icebp
mul
pop
shl
sbb
jg
or
xchg
jno
sbb
out
out
xchg
mov
and
imul
imul
ljmp
idivb
cmp
pop
mov
xchg
idivb
insb
out
cmp
test
inc
repnz
and
cmp
add
sbb
dec
push
repnz
adc
jb
cmc
pop
xchg
cmc
mov
mov
pop
pop
xchg
cmpsb
jb
cmc
div
idivb
xlat
cmp
and
flds
clc
clc
jecxz
cmp
lock
hlt
les
jno
mov
xchg
hlt
pop
jne
inc
mov
inc
push
hlt
sbb
das
pushw
data16
out
jne
hlt
idivl
jo
sti
dec
sub
adc
ds
loope
dec
push
cmp
jns
cmp
subl
xor
imul
shl
repz
repz
mov
and
sbb
pop
repnz
sbb
movsl
test
jne
cmp
or
sub
jo
sbb
mov
jne
cmp
repnz
orl
sub
loope
sbb
je
icebp
js
divb
xchg
cmp
xchg
icebp
jb
sbb
icebp
cmp
sub
cmc
cmc
pushf
dec
push
jno
add
jecxz
xchg
push
pop
xchg
ffree
lock
in
rcrl
and
cmc
jne
leave
mov
xor
jne
pusha
sbb
icebp
dec
mov
ss
jmp
push
stc
outsb
sub
out
ret
cli
xor
in
cmovno
push
add
xor
inc
int3
add
and
and
stos
add
jp
sub
jnp
loopne
dec
add
adc
jge
mov
add
jmp
inc
ja
test
and
jmp
sti
and
sbb
rorb
addr16
push
jae
imul
clc
inc
push
fadds
add
imul
aas
repz
insl
mov
out
dec
sub
insb
ds
ss
mov
inc
repz
mov
dec
sub
sbb
mov
cmp
dec
popa
and
jg
sub
call
mov
dec
sub
dec
and
loop
inc
orb
mov
mov
add
adcl
inc
push
les
ret
sti
insl
nop
aam
cmpl
in
cmp
cmp
push
loope
inc
inc
je
int
lret
cmp
nop
push
cmp
adc
std
cld
add
add
adc
orb
mov
push
shlb
movsb
xor
aam
or
jg
fiaddl
mov
mov
adc
lock
es
cmp
je
push
xchg
ret
pop
mov
inc
testb
mov
cmp
sarb
sbb
lea
lea
fdivs
pop
or
adc
fdivs
mov
mov
add
insb
sub
inc
add
leave
mov
mov
or
add
sub
sbb
mov
nop
cld
add
imul
push
insb
or
push
xorl
dec
xor
jp
push
ljmp
neg
les
icebp
stos
and
mov
add
mov
testb
adc
dec
add
and
je
rep
mov
push
les
dec
ljmp
test
nop
push
inc
lods
loopne
repnz
or
inc
test
outsb
push
dec
jbe
sbb
jmp
movl
inc
mov
inc
cmp
xchg
enter
sbbl
sbb
add
inc
enter
or
insl
daa
inc
mov
cmp
movsl
add
or
shlb
das
movsb
mov
pop
inc
inc
inc
inc
add
xchg
sbb
xor
data16
ja
pop
enter
jbe
mov
popf
imul
ss
into
gs
or
cmpsb
das
icebp
inc
and
nop
cmpsl
mov
or
push
lock
loopne
repnz
je
pop
shrl
mov
sub
inc
inc
pop
cmp
or
lods
enter
add
add
mov
cmp
adc
add
xchg
inc
xor
cmp
pop
loopne
and
or
xorl
mov
jmp
mov
int3
fimuls
mov
jo
es
outsb
enter
sbb
push
and
xor
into
adc
scas
lcall
icebp
xor
sub
mov
ss
mov
or
cmp
push
jnp
mov
push
jmp
sbb
pop
stos
les
out
jns
mov
dec
mov
bound
bound
fmuls
pop
pop
inc
in
ja
adc
je
jge
push
es
push
dec
add
push
into
addl
test
xor
in
popa
inc
sbb
add
insb
mov
repnz
inc
sub
add
popa
mov
or
push
js
je
fdivr
testl
push
stos
add
testb
or
sahf
mov
mov
leave
orl
das
popa
roll
test
push
add
push
or
mov
inc
adc
stos
add
add
sbb
mov
sub
inc
push
xor
das
mov
and
notb
cwtl
mov
roll
cmp
loopne
rolb
inc
fisttpl
adc
push
pop
and
popa
mov
mov
dec
pop
pop
mov
push
clc
fisubl
arpl
push
hlt
enter
push
mov
pop
inc
pop
inc
shr
mov
int
shlb
enter
push
lea
stc
xchg
fs
call
push
enter
ljmp
add
lcall
mov
mov
jge
jb
movsb
mov
movl
fiadds
mov
cmp
jns
testl
sbb
iret
repz
lahf
or
inc
in
call
cmp
lock
hlt
dec
cmp
repz
clc
cld
sub
insb
add
add
fldenv
push
sbb
insb
push
js
and
or
or
test
pusha
sbb
and
loop
mov
lea
jl
cld
or
std
cld
out
lock
neg
xchg
mov
mov
in
xchg
xchg
sub
pop
pop
nop
add
sub
push
outsb
xor
fiaddl
jl
mov
fstl
sahf
inc
xchg
push
ficoms
push
add
imul
pop
add
pop
cmp
ljmp
aaa
movsb
or
push
mov
int3
repz
pop
aaa
sbb
iret
repz
sbb
adc
adc
cmp
repz
or
or
inc
add
adc
sbb
aaa
push
add
xor
pop
shufps
cmp
cmp
jbe
push
sti
pop
out
push
mov
mov
incl
inc
decl
jne,pn
pop
pop
mov
repnz
push
cld
cmp
jg
cltd
ds
jbe
push
cltd
pop
idiv
xchg
adc
scas
push
pusha
or
pop
inc
add
ja
jb
std
mov
dec
mov
mov
xor
inc
ret
push
bnd
cmp
jae
dec
lea
imul
jbe
fwait
les
les
jmp
ret
sub
adc
mov
mov
jne
or
clc
pop
incb
jg
mov
test
sbb
mov
gs
add
test
lcall
sbb
dec
dec
je
push
push
cltd
adc
push
push
xor
mov
add
dec
and
mov
decb
push
movsb
stc
xor
dec
mov
enter
cmp
das
sbb
inc
pop
addb
scas
add
jb
xor
jge
cli
add
push
push
ret
shl
test
push
pop
add
pop
out
mov
bound
xor
adc
fcmovb
dec
jmp
pop
pop
jo
sbb
pop
mov
out
fsubs
xor
pop
cmp
sbb
ja
pop
shlb
mov
jge
or
clc
add
pop
idiv
add
push
xchg
inc
out
fdivl
pop
fistpll
es
inc
ljmp
push
or
add
mov
pop
jle
pop
imul
inc
mov
imulb
push
notb
imul
add
jmp
jl
mov
sub
adc
sub
push
or
je
insb
sub
dec
ret
pop
jecxz
repnz
in
js
jae
and
mov
mov
push
mov
inc
pop
incb
inc
jns
adc
cmp
inc
pop
ffreep
add
sti
cmp
pop
sub
repnz
rolb
inc
adc
dec
les
clc
sbb
cmp
push
mov
daa
push
pop
xchg
push
cmp
sbb
inc
push
jmp
jge
pop
jecxz
int3
icebp
je
sbb
jl
xchg
pop
or
out
dec
mov
mov
out
sbb
dec
jo
mov
je
fildll
pop
or
rorl
or
push
mov
inc
inc
lretw
adcl
lcall
pop
popl
fstl
or
and
push
je
or
es
aaa
addl
inc
sub
pop
stc
add
int
push
adc
lcall
xchg
inc
jmp
push
pushf
syscall
in
mov
inc
push
fwait
sbb
and
mov
aam
test
ret
push
je
mov
cmpb
ret
add
sbb
xchg
adc
push
sub
or
or
js
jne
push
or
adc
push
add
adc
adc
push
loopne
mov
inc
adc
or
out
xor
pusha
iret
call
fcoms
push
mov
add
fwait
mov
push
push
fisubl
lcall
ja
rorb
or
xchg
push
mov
lock
and
jbe
movsb
mov
or
add
lods
add
push
inc
jg
movsb
pop
xchg
inc
sbb
gs
xchg
les
in
pop
sahf
add
mov
cld
fimull
clc
mov
inc
inc
cmp
je
xchg
xchg
dec
cmp
cli
orb
insb
in
sbb
adc
add
sub
mov
fidivrl
dec
je
popa
or
shll
push
mov
pushf
push
jmp
mov
push
push
mov
incl
fdivr
push
pusha
dec
popa
dec
clc
push
inc
sbb
movhps
repnz
dec
cmpsb
sub
test
or
lods
mov
push
sti
mov
or
cmp
mov
sbb
or
xchg
add
das
dec
push
sub
sbb
fcmovnb
mov
rol
add
imul
jo
ror
cld
add
test
adc
test
cmp
lock
and
cmp
je
mov
nop
sarl
mov
int3
push
fwait
inc
or
add
push
and
jl
pop
inc
int
imul
imulb
add
je
sbb
dec
frstor
sbb
push
movsb
jb
jns
xor
shl
lret
mov
mov
add
fildl
jl
mov
add
sti
sub
push
rclb
lea
popa
bound
cmovge
popa
dec
or
push
repnz
fs
jmp
das
dec
jmp
inc
scas
roll
dec
sbb
loopne
mov
mov
adc
dec
cli
rcl
insb
or
loop
loopne
insl
pushf
pop
pop
ret
call
cmp
xor
out
gs
addl
cmpsl
in
dec
clc
add
or
sbb
lahf
push
fbld
jns
and
push
dec
sbb
pop
stos
outsb
mov
call
sub
push
xchg
mov
add
xchg
dec
stos
jb
xor
pop
xchg
and
inc
push
jo
sub
jmp
cmp
inc
add
pop
or
inc
inc
dec
sahf
push
push
xor
inc
hlt
mov
or
jecxz
mov
sbb
push
and
mov
clc
xor
pop
add
push
and
jmp
add
scas
call
aas
or
adc
sbb
and
sbb
pop
fisttpl
repnz
sub
sbbb
jne
add
xor
sbb
and
dec
sahf
jmp
jle
dec
jnp
add
push
xchg
jmp
test
hlt
lcall
mulb
adc
stos
gs
lcall
adc
add
mov
push
rorl
loopne
fs
add
add
xor
inc
sbb
mov
cld
jmp
pop
arpl
xchg
dec
cmp
push
jno
fs
lods
cld
shll
call
cli
add
std
add
inc
add
xchg
add
ffree
cmp
sub
or
fld1
push
lea
and
cmp
in
sahf
sub
add
inc
lret
sbb
outsb
jbe
in
push
push
js
adc
cmp
jge
and
sbb
inc
lock
add
and
add
andl
mov
outsl
jmp
mov
imul
sbb
push
and
pusha
and
lret
mov
arpl
or
bound
xorl
loope
ficomps
sbb
pop
sub
or
rclb
scas
lret
pop
cmp
lcall
pushf
enter
push
enter
fmuls
jne
mov
mov
adc
dec
lcall
std
data16
pop
add
daa
mov
jmp
lret
xlat
xchg
ret
aaa
sbb
adc
xor
stos
mov
inc
js
or
push
xchg
push
add
push
lahf
pop
push
dec
sbb
cld
arpl
imul
rcrl
arpl
push
ja
mov
jmp
inc
mov
xchg
inc
into
add
or
aam
rclb
xor
pop
in
add
js
fiadds
shlb
add
gs
outsb
test
mov
sbb
pop
or
ficoms
add
imul
jl
mov
fildl
and
mov
pop
or
cmp
cs
xchg
jle
repnz
inc
adc
dec
out
mov
adc
dec
sbb
push
imul
cmpsl
add
shrl
jmp
push
pop
xor
rorb
rcll
call
shl
hlt
adcl
and
mov
mov
hlt
mov
or
push
or
call
in
or
incl
iret
sub
fs
aam
mov
sub
cmp
test
das
gs
add
ret
inc
adc
or
adc
ret
inc
pavgw
rol
pop
nop
add
mov
lret
jecxz
shlb
lea
loopne
loope
adc
cld
push
rcrb
add
call
xchg
sbb
lahf
or
adc
xor
push
dec
test
sub
sbb
arpl
je
add
xor
pop
jae
push
push
dec
or
pop
cmp
push
lods
jo
inc
mov
pop
xor
pop
rep
cmpsl
pop
jae
sti
sbbb
add
dec
ret
arpl
mov
mov
lods
cwtl
or
std
add
out
stos
call
mov
fdivrs
mov
and
add
push
cmp
jmp
jo
leave
and
jne
cmpl
xorb
repz
loopne
std
nop
and
adc
aam
add
fcmovu
pop
or
lcall
sub
mov
and
lock
stos
add
adc
lods
pop
das
fmulp
test
sub
cwtl
mov
pop
pop
pop
adc
sub
std
data16
sbb
cld
jns
and
popl
lcall
inc
jbe
hlt
shrl
dec
pop
test
push
movl
cmp
xor
dec
stos
mov
sarb
push
sbb
sti
mov
out
mov
adc
cmp
or
cld
sub
je
clc
push
add
add
xor
jp
cld
sub
je
pop
or
dec
imul
mov
sbb
subl
add
add
inc
sbb
bound
xchg
les
fmuls
or
or
loope
or
mov
add
and
insb
and
into
mov
pop
add
testl
daa
or
es
ret
clc
sbb
dec
xor
popf
push
call
sub
ret
ljmp
test
pusha
in
insl
je
out
push
movb
xor
xor
inc
mov
push
sub
push
dec
ja
dec
xchg
or
cltd
inc
xor
inc
popf
jnp
mov
cld
ficoml
adc
test
xchg
lcall
push
cmp
js
push
pop
inc
inc
cld
dec
cmp
add
and
loopne
or
cld
cwtl
push
orb
mov
jge
in
je
and
les
icebp
into
xchg
adc
arpl
aaa
aad
jmp
mov
negl
mov
mov
out
lea
mov
shr
sub
ja
lret
add
jmp
cmp
push
add
test
jmp
xor
push
ret
mov
jne
shrb
mov
mov
lds
idivb
or
ja
inc
xchg
sub
mov
push
sub
outsb
int3
insl
inc
cli
cmp
dec
ss
lahf
add
stos
or
jno
xchg
lret
add
dec
mov
pop
mov
out
insb
push
or
pusha
xchg
jo
sbb
mov
rorl
cltd
imul
or
shll
cmp
mov
movsl
shll
fwait
cmpsb
push
cmp
in
sbb
push
outsb
inc
cmp
std
jne
ret
iret
lock
sub
stos
sub
lret
add
bound
sarb
cmp
loope
push
sub
or
xor
scas
jle
xchg
push
sbb
mov
daa
arpl
sub
adc
mov
xchg
lock
xchg
inc
cmp
outsl
cmp
or
jbe
mov
push
jmp
xchg
int
mov
loope
add
aad
imul
sbb
mov
xchg
mov
les
dec
dec
or
std
cmp
jbe
adc
in
lea
mov
add
loopne
mov
inc
pop
leave
inc
add
das
mov
imul
lea
push
into
shlb
sub
jmp
loopne
adcb
cmp
inc
cmp
ljmp
inc
or
std
dec
shrb
incl
loopne
push
fstps
cld
xorb
xor
fisttpl
dec
sbb
or
adc
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
rorl
sub
ds
mov
add
push
mov
mov
push
xor
cld
push
decl
inc
push
mov
inc
dec
jne
aam
out
cmp
test
or
add
hlt
gs
mov
icebp
lret
test
xor
aam
enter
cmp
or
enter
jmp
and
mov
xor
das
push
test
fisttpll
pushf
loop
push
and
mov
push
test
inc
sub
inc
sbb
daa
xchg
rolb
xor
test
orb
loopne
cld
xor
jbe
inc
xor
ret
cmp
and
ss
bound
push
cmp
pop
pop
cmp
rolb
cltd
dec
repnz
out
insl
mov
mov
mov
or
test
add
jl
sbb
lret
pop
sub
jmp
xor
add
mov
adc
scas
add
bound
ret
ss
push
ljmp
insl
adc
mov
sbb
inc
cmc
test
xor
pop
inc
and
scas
add
add
jae
pop
ror
leave
cmpl
imul
and
pop
movl
mov
mov
cmp
es
push
inc
js
pop
jl
sbb
pop
adc
mov
mov
lock
inc
mov
push
dec
int3
cltd
sbb
mov
sbb
sub
lret
xchg
int3
andb
insl
fsubrs
and
fucom
aaa
mov
mov
pusha
lret
and
push
cwtl
mov
jne
push
sbb
sti
out
adc
aaa
call
or
into
cmpl
fs
mov
js
pop
cmp
xchg
inc
add
loopne
or
decl
jne
arpl
push
push
sbb
pop
enter
mov
fucomp
push
sbb
mov
lea
test
sub
aaa
cmpl
lea
ret
shld
repz
movsl
sub
or
cmp
loopne
dec
sub
fs
dec
xor
pop
ret
je
push
add
and
sbbb
adc
push
rcrb
sbb
pop
jbe
cmp
mov
inc
and
dec
jle
dec
cmp
sbb
jo
loope
in
mov
rolb
fs
xchg
dec
out
add
rcll
dec
and
sbb
inc
pop
add
xchg
cmp
and
push
cmp
lods
push
sar
roll
ljmp
jne
ja
jmp
out
mov
push
add
or
out
sbb
adc
sub
mov
lods
imul
xor
out
call
mov
and
loope
add
add
push
push
push
mov
ret
jmp
inc
aas
push
fsubrs
adcl
test
mov
jb
orb
pop
pop
rorb
dec
xor
dec
cwtl
and
adc
shlb
push
sbb
into
cld
push
jo
aaa
inc
pop
mov
lret
or
inc
mov
adc
lods
add
movsb
or
mov
leave
icebp
xchg
add
cmp
insb
jg
pusha
xor
jno
fnstcw
mov
mov
add
inc
sub
sbb
mov
ret
dec
push
adc
xchg
rorl
mov
pop
xor
push
push
movsb
pushf
mov
lret
bound
dec
shlb
jmp
mov
xor
not
shlb
push
iret
ss
xor
xchg
push
push
popa
rep
xchg
shl
jle
inc
and
in
push
movsb
sbb
cmp
in
push
inc
inc
dec
xor
inc
pop
cmp
sbb
daa
jle
mov
xor
jmp
adc
xlat
cmpsl
sub
push
mov
xchg
jge
je
jle
or
or
out
adc
fsubrl
pushf
jg,pn
jge
rolb
inc
rclb
dec
fcomps
imul
xchg
and
cwtl
movsb
pushf
cmpsl
dec
out
cmpl
shlb
es
es
adc
cmpsb
and
daa
test
mov
jno
jns
insb
lcall
out
scas
dec
adc
cmpl
mov
xchg
push
scas
int
inc
inc
mov
inc
sub
mov
addr16
push
xchg
mov
sub
mov
add
add
das
jo
mov
mov
fisubs
movsl
das
sub
dec
lea
insb
xor
sbb
mov
xor
sub
sbb
or
fcoml
fcomps
int3
data16
clc
or
test
movsl
pop
lahf
xchg
shrb
mov
pop
add
sarl
enter
dec
cld
adc
mov
pop
aam
xchg
add
push
test
in
roll
fcomps
in
add
inc
inc
or
mov
dec
ret
cmp
dec
ret
in
js
jmp
push
add
shrb
mov
push
mov
add
and
addl
inc
and
mov
or
mov
jae
call
popa
das
js
pop
lods
pushf
inc
dec
add
sbb
xlat
mov
push
push
js
pop
and
addl
xchg
out
push
loopne
jns
out
ror
sarb
pop
fsts
dec
jl
add
sbb
sub
jb
push
inc
pop
mov
cmp
adc
fadds
enter
add
and
add
sahf
out
push
or
push
fs
je
add
pop
jl
fwait
popa
inc
mov
mov
adc
pop
xchg
inc
dec
adc
mov
test
cmp
adc
sbbb
push
xchg
lock
xchg
test
inc
jmp
and
add
mov
and
pusha
cld
cli
dec
mov
xor
and
lret
jne
mov
insb
rorl
jge
inc
mov
imul
mov
mov
sbb
add
or
dec
push
xor
pop
sahf
in
inc
loop
rcl
and
or
icebp
cli
adc
mov
xchg
mov
mov
cmp
inc
xor
clc
imull
mov
aas
adc
sbb
mov
hlt
mov
mov
inc
daa
loop
daa
fwait
xor
andl
daa
jo
enter
pop
fdivr
or
inc
or
je
lcall
cmp
dec
dec
adc
addr16
sbb
pop
nop
jne
jl
or
mov
push
push
add
imul
sbb
fbstp
push
inc
xor
movl
add
jmp
adc
and
lock
add
add
push
jnp
inc
jbe
push
push
sbb
or
test
cmp
push
mov
and
lea
or
test
cmp
add
dec
jecxz
and
mov
dec
cwtl
outsl
push
pop
xchg
inc
adc
mov
aam
push
sub
loope
mulb
cmp
sub
call
in
movl
addr16
outsl
push
mov
fmuls
push
mov
mov
add
and
cmp
and
and
push
add
xor
and
int3
loopne
mov
lock
cmp
adc
jno
icebp
popl
sbb
xor
or
shll
adc
popa
ret
mov
test
adc
pop
out
mov
xchg
mov
stc
fcmovnu
cmp
mov
lea
inc
cmp
icebp
add
push
mov
stos
js
pop
push
pop
dec
stos
push
push
add
int
push
das
ss
inc
inc
add
or
inc
es
inc
mov
dec
hlt
adc
inc
shr
add
push
push
leave
in
mov
fimuls
pop
ret
mov
lea
bound
orb
test
or
dec
or
jo
test
and
into
rolb
aaa
jecxz
test
stos
mov
call
adc
jno
pop
lret
rclb
call
jbe
push
inc
repnz
lahf
sub
ljmp
push
xor
inc
ret
std
outsb
cmp
dec
pop
cmp
add
jbe
adc
lock
ds
mov
dec
cmp
rcll
add
xchg
and
dec
ljmp
jns
add
add
cmpsb
or
push
sub
pop
pop
cmp
shl
add
mov
add
or
and
cld
inc
xchg
inc
xchg
cmc
fsubs
inc
mov
and
mov
push
fs
cwtl
lock
add
and
aas
inc
or
testb
ret
shrb
fnstenv
jg
movsl
inc
rcrb
jmp
shr
call
add
mov
cmpl
pop
outsb
or
cmpl
les
xor
adc
rorb
adcb
sahf
or
repnz
xor
sti
and
jb
lods
in
or
aam
xchg
lret
in
fadd
fmuls
in
ds
xor
out
push
inc
mov
sti
mov
out
mov
test
and
test
leave
test
lods
jl
loopne
or
movl
inc
adc
xor
imul
cld
jbe
rcrb
jl
pop
icebp
mov
fstp
loopne
sbb
test
js
push
sar
pop
mov
cmp
cmc
or
aaa
bound
xchg
inc
movsl
jnp
jo
lea
les
xchg
lret
aam
clc
fmul
lods
loop
pusha
test
dec
or
je
or
nop
out
adc
adc
int3
pop
addr16
pop
or
add
loope
pop
addl
out
int
nop
cli
xchg
sub
notb
clc
or
aam
fsubs
add
sub
test
mov
rorb
lea
ja
movsl
mov
jns
and
mov
hlt
out
jo
dec
sbb
cmpsb
inc
stc
nop
je
or
inc
insb
je
xor
mov
test
data16
insb
xor
pop
icebp
cmpsb
pusha
sub
in
mov
mov
pop
and
pop
or
and
mov
dec
xor
cmp
and
movsl
addr16
int3
add
fs
or
sbb
fwait
imul
lcall
pop
xlat
cmc
test
mov
add
push
jno
lock
lret
pop
lods
fs
jb
or
sbb
je
cmp
adc
or
push
dec
add
mov
ret
add
hlt
mov
test
fdivr
scas
inc
jmp
test
test
mov
je
push
jae
push
test
imul
xchg
stos
out
jbe
jle
aaa
jne
das
mov
adcl
xchg
add
dec
and
and
or
lock
es
mov
or
sti
nop
mov
daa
or
imul
dec
cmp
stos
cmp
loopne
js
pusha
int3
negl
in
aam
rolb
pushf
dec
dec
lret
insb
pusha
xor
fidivrs
cmpsl
add
test
jnp
test
sti
test
push
mov
or
insl
inc
pushl
icebp
push
pop
jge
add
lret
notb
mov
setp
hlt
mov
inc
cli
inc
cmp
mov
or
cmp
mov
add
lea
ds
in
cmp
movsl
sbb
rcrb
test
mov
cli
add
add
scas
fldenv
mov
adc
xchg
mov
push
outsb
je
test
ret
mov
sbb
jae
movl
mov
fistps
test
ret
xor
lret
or
adc
add
test
xorb
jecxz
push
stos
add
fisttpl
ret
and
ficompl
addr16
mov
jmp
cmp
jle
sbb
out
pop
insl
cmpl
lock
lds
int
or
mov
adc
call
cld
adc
and
cmc
mov
outsl
inc
hlt
dec
sub
cmp
adc
sbb
faddl
and
mov
fstpl
push
pop
test
adc
inc
call
push
cld
sbbl
and
xor
jg
push
inc
sbb
add
push
push
jne
jae
addr16
decb
mov
mov
bound
add
adc
push
or
pop
data16
test
iret
hlt
push
sub
lret
repz
shl
loop
adc
inc
filds
fs
popf
je
adc
fisttpll
add
cmpsb
jmp
out
or
cld
mov
int3
je
cltd
nop
rorb
xorb
je
sarb
jl
jae
mov
adc
rolb
pop
pop
fcoml
in
pop
fimull
adc
add
clc
popa
test
adc
push
and
lea
lods
outsb
das
sbb
or
cmc
ret
pop
push
inc
je
mov
cltd
push
lods
sub
aas
in
ret
dec
add
cmp
push
nop
xchg
clc
ja
call
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
adc
mov
aas
and
add
je
aaa
into
cmp
pop
mov
dec
shlb
xor
ss
movsb
add
dec
mov
loope
mov
dec
data16
inc
inc
xor
lods
push
mov
clc
roll
je
gs
cmovo
into
daa
mov
jmp
and
sub
push
test
sahf
mov
outsl
inc
and
mov
jmp
popf
fcoml
or
pop
inc
negb
shl
push
jp
cltd
fdivl
dec
fdivrl
lea
stos
jns,pt
jns
xchg
mov
cltd
add
add
push
jbe
dec
andl
adc
fdivs
out
add
jno
aaa
cmp
aaa
pusha
xor
fistps
rcll
jnp
movsl
push
sbb
mov
xchg
lods
je
cmpsb
popa
sub
cmp
cmp
and
push
and
and
cmp
add
push
cmp
push
das
xchg
enter
icebp
jnp
movsl
daa
pop
mov
fiaddl
in
sub
movsb
cmp
adc
add
jp
movsl
add
xlat
pop
push
nop
mov
sub
push
mov
mov
push
or
push
mov
lods
repz
sbb
or
rolb
imul
loope
not
iret
adc
cmpsb
inc
mov
cmp
and
idivb
pop
sbb
clc
lidtl
test
cld
dec
cmp
push
inc
sbb
mov
fptan
iret
sub
and
shl
ds
test
and
test
pop
mov
mov
add
mov
jbe
aam
add
push
push
xchg
xor
dec
imul
js
sar
mov
inc
jl
push
pop
push
adc
cltd
mov
aas
out
aas
mov
pop
inc
xor
pop
outsb
pusha
push
sbb
ret
in
jle
xchg
pop
pushf
jge
mov
ror
les
dec
xor
fsubrl
hlt
cmp
ss
outsb
push
or
jne
mov
push
push
xor
add
cmpsb
xor
adc
adc
adc
add
xchg
int
xor
xchg
inc
or
inc
arpl
dec
jl
xchg
xor
xor
xchg
mov
insl
or
pop
jbe
push
or
adc
enter
pop
movsl
xchg
and
addb
xchg
fdivl
rclb
popa
je
jmp
addb
fnstcw
xchg
sub
cld
shr
mov
imul
les
push
dec
or
incl
lea
mov
mov
mov
bound
jbe
loop
inc
loop
ja
out
jne
sar
dec
cmp
jbe
push
pop
sbb
cmp
jne
subb
mov
mov
shr
lea
not
and
decb
jne
fcoms
push
and
adc
mov
pop
cmp
pop
add
cmp
dec
pop
add
add
pop
and
add
xor
push
or
xchg
pusha
jmp
clc
and
imul
notl
add
clc
and
sti
add
inc
ljmp
fdivrp
sti
mov
fimuls
and
cmp
je
gs
lock
jno
jno
mov
sti
pop
mov
shr
not
and
add
pop
push
je
sub
mov
cmp
das
mov
xor
push
imul
mov
xchg
xor
add
pop
mov
ficomps
mov
int3
inc
or
jnp
or
dec
or
adc
out
aas
insb
pusha
mov
mov
inc
mov
mov
inc
mov
pxor
cmp
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
sub
inc
xor
adc
xchg
dec
jb
js
mov
and
add
imulb
in
pop
lret
add
loope
add
scas
jp
push
jecxz
jnp
call
aas
gs
push
or
sbb
andl
paddd
adc
inc
pop
add
add
and
push
mov
mov
pop
int
insb
hlt
repnz
mov
adc
test
mov
sbb
adc
cmp
push
jbe
insl
or
mov
out
or
inc
cltd
test
fwait
dec
mov
je
shrl
push
ret
mov
outsl
test
mov
imul
mov
negb
test
cmp
sbb
lea
aad
inc
adc
bound
xor
test
sahf
push
and
jge
fucomi
fwait
orl
add
lds
mov
push
push
mov
xor
aad
jecxz
cli
add
inc
ljmp
mov
xchg
repnz
incb
pop
adcb
es
cmp
dec
jne
or
sti
mov
sub
int
or
inc
popa
mov
lea
dec
adc
cli
ja
sub
shr
push
clc
push
push
adc
orl
orl
orb
adc
out
scas
mov
cld
lock
call
dec
loope
ljmp
add
add
add
jb
adc
push
jnp
aaa
fs
inc
pop
mov
sub
mov
lock
xor
inc
jne
or
clc
aad
js
lds
not
and
jl
push
dec
les
mov
repz
xlat
sub
inc
lcall
sbbl
cld
add
icebp
fists
pop
and
pushf
jle
mov
inc
mov
cmp
jno
jl
cmp
jbe
add
pop
pop
push
push
mov
int3
push
pop
imul
mov
test
clc
rolb
pop
test
add
cmp
movsb
add
nop
dec
or
sbb
adc
sub
add
ljmp
adc
pushf
sar
dec
mov
jmp
repz
fstpl
lea
add
jg
or
mov
cmpsb
imul
rcll
sbb
iret
insl
add
js
and
and
movsb
jmp
js
test
insl
test
sub
and
push
xor
out
popa
jmp
sbb
push
sub
jl
add
mov
lea
mov
sub
pop
xor
push
sar
dec
loope
pusha
push
jp
movsb
pop
mov
movsl
jl
push
fidivrl
xor
cmp
out
push
mov
fists
push
or
mov
insb
rcr
fbstp
loopne
fnstenv
dec
ficoms
add
mov
ja
data16
dec
lea
mov
and
test
js
test
xchg
dec
ret
push
lods
decb
into
mov
sub
into
rdmsr
xchg
sbb
mov
jns
dec
sub
dec
sbb
push
add
popa
jp
ret
jmp
mov
mov
pop
and
inc
cmp
push
sbb
jge
into
shr
adc
sysret
add
subb
dec
jp
dec
or
out
fldcw
push
nop
cmp
and
decb
fstpt
or
fdivs
push
jne
cli
jae
fmull
fnstenv
jmp
cmp
outsb
lods
jnp
add
xor
aaa
adc
ret
push
rorb
jno
stc
xchg
aad
mov
or
inc
rcrl
movsb
cmp
je
mov
xor
xchg
in
cli
and
loope
sbb
mov
dec
pop
iret
jne
mov
jno
mov
xchg
les
mov
jmp
fisubrl
mov
repz
mov
and
jne
mov
out
clc
test
and
leave
inc
test
inc
push
push
and
mov
sub
icebp
sbb
fdivrl
inc
add
xor
add
xchg
and
push
cmp
push
fisttps
out
and
mov
decb
jne
inc
repnz
test
jmp
dec
mov
push
pusha
dec
bound
dec
push
and
jne
sarl
adc
jp
imul
mov
mov
js
or
pop
xor
add
sbb
cmp
inc
aas
jge
dec
ret
out
or
dec
hlt
pop
adc
jl
push
inc
push
inc
or
push
mov
mul
mov
mov
mov
mov
adc
sbb
push
shrl
push
lea
or
ds
push
sbb
into
push
call
and
push
sbb
sub
gs
imulb
cmp
loopne
or
in
jb
or
xorl
jne
jo
lock
adc
lods
and
push
adc
xchg
or
cli
pop
test
mov
inc
add
jp
or
enter
push
sti
insl
repnz
mov
and
inc
mov
push
movb
enter
es
addl
aas
sti
loopne
xchg
inc
inc
cmp
cmp
sub
add
mov
mov
ja
fcoms
test
add
adc
or
cmp
pop
fcoms
icebp
mov
xchg
jl
dec
push
popa
adc
push
add
mov
repz
add
jmp
push
or
or
sub
adc
and
pop
fsubrs
xor
lahf
pushl
loop
inc
sti
adcl
scas
loope
divl
pop
mov
cmp
push
push
inc
mov
pop
adc
movsl
addr16
lods
inc
insl
mov
cmp
mov
pop
out
rorb
js
push
or
cwtl
or
pop
iret
inc
xor
shlb
push
in
mov
xchg
cwtl
hlt
mov
lahf
insb
int3
push
loopne
xchg
dec
aas
inc
or
je
lea
push
or
jl
int
xchg
sarb
mov
and
xchg
adc
adc
xor
xchg
mov
addb
mov
orl
xor
enter
adc
popf
call
xor
test
inc
sbbl
jmp
mov
mov
dec
push
pop
inc
adc
jge
jmp
shld
dec
xorb
lahf
or
in
rdpmc
jo
lret
pop
add
cmp
mov
cmpsl
dec
inc
rorl
cmpb
xchg
imul
test
fsubrs
dec
shrb
inc
test
sub
and
or
inc
push
xchg
xchg
xchg
lret
iret
fs
mov
xor
mov
xor
adc
sbb
adc
popa
mov
or
shll
lret
pop
add
sbb
lret
sbb
xchg
arpl
push
push
pop
add
pop
xchg
pushf
xchg
ja
rorb
mov
cmp
mov
adcl
mov
in
push
push
inc
pushf
add
insb
jne
jp
mov
adc
and
sbb
cmpw
lret
enter
cmp
xor
mov
add
jns
adc
or
test
jmp
int3
add
push
pop
std
and
xor
ret
jne
inc
and
in
jb
jns,pn
mov
pop
xor
call
dec
sbb
sub
sahf
jo
sub
aaa
mov
dec
cmpsl
call
enter
dec
xchg
test
push
sahf
push
push
inc
dec
dec
sub
lret
and
push
jns
scas
dec
leave
add
loopne
lahf
call
push
pusha
lahf
xor
inc
push
mov
loop
cmp
incl
fimuls
cld
popf
ss
push
sbb
testb
inc
inc
test
leave
dec
in
mov
shr
pop
enter
pop
in
inc
enter
push
hlt
xchg
xor
lods
pop
lahf
push
test
ret
jns
test
xchg
orb
fwait
xor
leave
push
orb
in
and
lods
add
inc
xchg
mov
es
rol
cmp
int3
shlb
inc
and
enter
xchg
ret
sub
mov
mov
ret
adc
pop
cld
enter
cmp
push
mov
pop
into
cmc
xor
xchg
add
push
cli
xor
sarl
cmpsb
push
pop
mov
scas
jno
push
push
lea
or
add
outsl
jecxz
daa
cmp
push
cltd
add
xchg
movsb
add
pop
dec
inc
xor
sbbb
dec
js
cltd
ret
xchg
and
sub
je
or
xor
and
mov
xchg
mov
add
and
cmp
movsb
xor
mov
push
lods
inc
les
mov
or
jecxz
sub
xor
dec
push
dec
add
cltd
pop
dec
jnp
adc
cmpsb
inc
imul
xlat
inc
not
scas
shr
lds
sub
sbb
jecxz
aaa
cmp
add
add
push
cmp
and
or
je
xchg
cmp
lcall
push
out
add
xor
xchg
and
nop
sbb
rcl
sbb
ret
xchg
ljmp
mov
push
add
cs
xchg
add
mov
fstpl
jmp
add
add
add
insl
lock
or
dec
call
int
adc
cmc
test
and
pop
add
mov
or
call
push
ds
push
add
add
outsb
add
push
adc
das
mov
fcmove
and
fsubrl
mov
pop
aam
push
or
shll
enter
and
movsl
pop
fstpt
add
dec
mov
sub
dec
stos
mov
add
cli
xor
cld
std
lcall
loop
enter
dec
stos
mov
dec
adcl
push
gs
or
gs
incb
jg
sbb
mov
jmp
shll
sub
sbb
dec
mov
sti
xchg
xchg
mov
add
jno
je
push
cld
addb
mov
fisubrl
sbb
fstpl
push
fldl
or
fldl
or
sarb
push
xor
test
lods
push
mov
leave
outsb
mov
cltd
jo
push
dec
push
fidivs
xor
dec
xlat
std
push
cs
das
dec
pop
xchg
dec
je
sbb
cmpsb
add
and
sbb
sti
mov
stos
int3
flds
adc
xchg
insl
out
mov
ljmp
pop
add
in
sbb
sub
ret
jmp
rcrl
stc
pusha
or
fstps
inc
add
push
ficoms
mov
xchg
adc
jns
scas
repnz
call
jns
or
cld
lock
sbb
mov
cmp
push
push
inc
adc
inc
shl
push
ja
mov
or
and
inc
lock
or
push
xor
ds
repz
cmp
pop
lahf
idivl
jo
jns
and
std
add
repz
cmc
sahf
fnstcw
sbb
or
les
xchg
leave
push
int3
lock
push
call
loop
push
ds
mov
xchg
jle
push
jle
lahf
mov
pop
push
inc
or
mov
push
push
xchg
jmp
add
add
popf
pop
push
adc
and
or
aas
test
sub
clc
push
fmull
loopne
jae
inc
jp
cmp
test
jne
push
push
sbbl
cltd
jle
xchg
lret
or
dec
mov
adc
mov
enter
push
mov
xor
mov
rolb
aad
add
sub
jo
divl
sub
jmp
in
rol
and
xchg
add
xorl
mov
inc
into
jne
cmpsl
pop
mov
mov
decb
push
pop
add
sbb
lcall
mov
mov
testb
jne
lret
clc
push
jmp
pop
sar
lcall
testb
fisubl
push
add
cmp
loope
adc
movsl
pop
dec
fisttpll
loopne
mov
out
test
inc
pop
ds
sub
popf
lret
pusha
push
push
or
ss
and
adc
mov
push
inc
push
leave
xchg
std
pop
mov
lods
popf
ret
jb
adc
or
or
rcrb
mov
into
gs
lds
push
mov
or
add
mov
push
xor
jno
les
iret
mov
cmp
fcompl
stc
or
and
aaa
mov
mov
xor
mov
xchg
mov
fcmovnbe
push
jb
mov
push
or
xor
cwtd
inc
repnz
fidivrs
dec
cmp
inc
sub
mov
hlt
outsl
pop
scas
pop
and
ss
cmpb
and
xchg
adc
jne
pop
lret
cmp
inc
xor
hlt
inc
cld
aad
push
imul
int
lds
push
lcall
loopne
test
and
ret
adcl
test
pop
jne
shrl
lea
mov
adcl
jno
cmpsb
mov
push
cmp
in
push
call
addb
lods
gs
js
shll
orb
add
nop
push
sti
and
into
push
inc
cmp
jle
pop
popf
in
mov
push
inc
pop
scas
and
vminsd
cmp
jne
xor
in
jno
stc
mov
rcr
jg
testl
sub
or
xchg
jno
sub
jns
pop
in
sbb
daa
mov
sahf
add
ret
mov
in
jl
hlt
std
sub
lods
cmp
mov
ds
mov
sub
jno
outsb
nop
and
or
mov
pop
sti
fisubrl
into
je
testl
insb
mov
shlb
stos
mov
xor
scas
rorb
outsl
in
xchg
dec
in
mov
sti
jecxz
or
xchg
mov
enter
insl
outsl
lock
shrl
das
jnp
daa
sub
std
fdivr
adc
push
xor
das
add
cli
cmp
test
lods
test
adc
push
fs
jo
popf
ds
cmc
jle
pop
cmp
shr
std
call
inc
aas
mov
rol
push
cmp
mov
mov
std
imul
jno
jge
mulb
aam
std
enter
inc
mov
ja
outsl
fnstenv
std
lds
sub
lea
aad
lock
ja
cmpsb
lret
imul
mov
cmp
mov
or
inc
cltd
cmp
jbe
mov
mov
xchg
pop
sbb
mov
mov
pop
sbb
std
scas
stc
lods
push
out
imul
mov
dec
aad
int
cmp
scas
lcall
jmp
push
inc
mov
inc
adc
mov
ja
sub
inc
inc
cmp
cmp
mov
sbb
or
enter
std
lock
pop
mov
insl
cmp
test
inc
loopne
mov
xchg
std
inc
repz
jmp
sbb
push
popa
jmp
fnstenv
fwait
push
fdivrp
or
dec
data16
mov
hlt
sub
test
sub
dec
jmp
dec
mov
add
pop
test
pop
lock
xor
mov
loop
push
sub
sub
imul
or
xchg
iret
mov
or
or
mov
test
cmp
addr16
in
dec
test
sti
and
dec
and
aam
mov
lock
dec
into
mov
enter
roll
push
xor
pusha
mov
push
ds
sbb
inc
xchg
test
addb
sti
jne
cmp
xchg
sbb
pushf
dec
hlt
or
xchg
iret
jne
fdivr
das
push
inc
xor
jl
je
inc
inc
sub
cmp
or
and
std
std
pop
shrl
out
mov
enter
das
dec
lds
into
test
mov
and
test
imul
push
fnstenv
mov
out
aam
mov
jmp
inc
adc
int3
adc
pop
fadds
sub
mov
dec
inc
adc
cwtl
mov
adc
sar
or
mov
add
jno
arpl
pop
loope
movsb
xor
and
mov
mov
or
sarb
cmp
loopne
inc
lea
in
push
pop
out
sbb
adc
sub
cmp
ja
repnz
cmp
sub
add
leave
or
js
mov
iret
shl
loope
add
xchg
popa
enter
lock
or
push
push
ljmp
sbb
push
or
xchg
imul
mov
jb
sbb
push
push
jns
adc
ja
fs
call
and
mov
or
test
push
arpl
pop
and
push
mov
repnz
les
imulb
or
das
xor
lea
mov
mov
test
adcl
dec
test
adc
mov
stos
xchg
xor
push
pop
mov
push
and
and
inc
xchg
int3
fdivrs
adc
jo
pop
adc
cmp
test
jns
in
fwait
mov
or
xchg
cmp
xor
and
push
cld
or
xchg
nop
and
pop
inc
sbb
mov
lods
push
sbb
scas
adc
mov
aaa
ss
jecxz
push
leave
mov
dec
sub
pop
jno
mov
enter
or
lret
imul
dec
outsb
pushf
xor
cmpb
xchg
movsb
bound
xchg
leave
push
aas
dec
add
sbb
ljmp
in
pop
test
test
in
cltd
mov
mov
cmpsb
fs
nop
pushf
in
xchg
sub
add
sub
je
fbld
je
stc
dec
mov
sbbb
sbb
dec
lahf
testb
scas
lds
loope
cwtl
iret
repz
xchg
fisttpl
enter
and
fmuls
in
scas
cmp
or
pop
shlb
inc
and
jbe
pop
mov
arpl
es
enter
add
inc
je
add
enter
bound
sbb
cmc
dec
add
js
sbb
adc
and
lahf
rcr
mov
push
adc
push
inc
add
ret
jne
push
int
push
sbb
mov
sub
mov
test
nop
loopne
or
pop
and
inc
out
cltd
fimuls
jl
dec
movb
adc
icebp
pop
mov
push
mov
and
add
add
xor
bound
ret
mov
je
cmpsl
mov
sbb
or
adc
int3
xchg
and
jle
popa
add
sti
ja
pop
sub
mov
sbb
push
nop
shll
fucomip
stos
bound
mov
jb,pt
repnz
or
les
les
or
pop
dec
pop
inc
into
and
add
stc
movl
incl
mov
inc
push
adc
gs
or
arpl
jmp
push
sarb
pop
out
dec
jecxz
inc
pop
and
xchg
cwtl
lahf
or
mov
dec
fs
fisttps
aaa
add
jmp
lret
mov
inc
push
inc
jle
shr
sbb
jae
testl
outsl
add
sub
pushf
xor
test
nop
dec
cmc
les
adc
inc
add
mov
jae
add
lahf
insb
jae
rolb
push
icebp
or
insb
or
out
or
fisttpll
cs
cltd
neg
lsl
jmp
push
pop
push
push
inc
shr
rcr
shrl
mov
ljmp
div
pop
dec
adc
inc
mul
in
std
std
mov
dec
ja
jb
cmp
or
xor
and
repz
insb
adc
or
fiaddl
sbb
fsts
arpl
iret
fcompl
lock
add
sub
add
adc
loop
mov
incl
inc
fprem
mov
movb
sbb
xchg
ret
inc
stc
adc
sbb
nop
jecxz
icebp
adc
shll
push
out
mov
or
pop
adc
inc
andb
and
je
xchg
mov
andb
testb
sbb
or
xlat
mov
pop
or
ret
dec
icebp
add
inc
add
cmp
xor
push
addb
aas
rcrl
xor
arpl
push
adc
clc
int3
sbb
je
xor
cmp
xchg
cmova
pop
mov
dec
sbb
xchg
dec
add
das
ss
popf
dec
lock
jne
lea
adc
sbb
aas
inc
movsb
in
and
loop
sub
test
ret
push
push
mov
cmc
jne
enter
bound
lea
xchg
mov
sbb
adc
adc
pop
add
leave
mov
mov
enter
push
ret
push
pop
mov
inc
movb
and
fs
adc
push
testb
adc
cld
sbb
sbbb
mov
test
push
xchg
nop
sbb
adc
andl
lret
mov
xchg
test
jmp
add
lds
movsb
stc
xor
pop
mov
out
add
movl
call
push
test
or
add
cmp
aam
xor
js
mov
push
xchg
or
dec
lea
mov
mov
jp
xchg
xchg
mov
sbb
ret
lock
mov
sbb
sbb
jne
sbb
and
loopne
pusha
mov
cmp
aas
cmp
cs
fcoml
sbb
call
stos
in
lods
cmc
lea
aas
inc
imul
sub
and
sub
jge
mov
lds
mov
loopne
adc
call
or
js
fdivrp
iret
push
negb
or
push
ret
shl
push
adc
popa
dec
loope
or
lret
movsb
lock
inc
stc
xor
sub
mov
ss
dec
xor
or
in
and
cmpsl
and
ja
push
sub
push
out
cmp
je
jns
mov
ss
and
or
out
aam
xchg
pop
addr16
outsb
popa
add
in
std
cld
pop
test
add
sahf
and
scas
xchg
push
dec
inc
and
pop
insb
ret
or
sbb
pop
je
inc
add
out
cmpsb
lock
mov
insb
add
sbb
xor
je
sbb
icebp
repnz
dec
mov
repz
add
fmull
mov
sbb
out
mov
ljmp
jb
inc
fistps
and
fnstcw
jmp
inc
cmp
roll
int
xor
sbb
pop
jne
add
jg
bound
inc
inc
aad
fwait
xor
jno
push
mov
and
jp
hlt
data16
mov
pushf
sti
jb
inc
lods
pop
or
sub
or
popf
nop
pop
mov
jne
inc
sub
loopne
lock
push
and
push
xor
sub
and
pop
or
xor
sbb
sub
fcoms
push
inc
add
and
push
pop
mov
lea
arpl
mov
mov
or
or
ficoml
ret
sbb
or
cmpb
shl
xchg
sub
subb
add
lods
movsb
push
imul
add
xchg
or
imul
lock
push
rorl
xchg
leave
pop
sub
and
cmp
xor
pop
push
mov
fbld
cmp
jl
mov
or
xorl
mov
push
xchg
fmull
inc
sbbl
pop
orl
and
sub
sbbb
popl
push
cmp
outsb
xor
dec
fs
sbb
sbb
pop
leave
push
sbb
pop
jb
popf
int3
pusha
mov
test
cmp
rorl
xchg
push
push
inc
aad
fsubl
dec
xchg
push
cmp
hlt
icebp
imul
sbb
mov
mov
in
hlt
add
pop
dec
inc
fstl
cmp
adc
scas
add
mov
jne
add
mov
dec
fiadds
sahf
shll
xchg
dec
mov
fs
f2xm1
push
xor
jne
iret
add
imul
jmp
pushl
mov
aam
pop
add
imul
pop
xchg
add
cmp
push
je
dec
je
push
mov
scas
mov
mov
je
dec
or
xchg
xchg
cmpsl
addr16
sub
jge
ja
daa
popa
mov
push
les
in
mov
and
cmp
repz
rolb
je
dec
sti
mov
mov
aam
inc
pusha
jne,pn
sbb
jb
test
and
fwait
sub
adc
mov
add
cmp
jge
mov
ret
call
or
dec
sbb
cwtl
fildl
jne
iret
mov
sbb
push
mov
push
sub
sbb
inc
ret
insb
jl
add
repnz
and
inc
push
sub
adc
jno
xchg
shll
or
pop
pop
add
or
or
lret
test
int3
adc
jmp
inc
pop
shrb
dec
pop
orl
pop
pop
es
imul
adc
xor
jmp
sub
lods
fsubr
clc
cmp
bound
and
cmp
mulb
inc
add
filds
pop
dec
and
dec
aam
dec
mov
add
mov
fwait
inc
jns
xor
ja
jmp
test
and
adc
out
inc
rcrb
movl
pop
or
test
cmc
sbb
data16
rcll
enter
sbb
cld
cmp
sub
test
jbe
dec
pop
enter
data16
adc
pop
jmp
lds
enter
lret
adcl
popa
imul
or
xor
jo
arpl
cs
xor
nop
push
sub
fimuls
add
mov
out
movsl
xor
sbb
fisttpll
insb
mov
shlb
sti
or
dec
add
insb
cmp
stc
pop
lea
out
mov
jo
add
mov
cwtl
or
jg
or
adc
cld
mov
and
clc
xor
call
adc
mov
inc
mov
js
inc
mov
add
fisubrl
movb
mov
xchg
or
cmc
test
xor
inc
dec
inc
mov
lock
movb
fcom
cs
or
ja
cmp
testl
dec
jmp
xor
cmp
mov
jo
inc
adc
add
cmp
jle
inc
dec
lea
mov
inc
pop
je
pop
es
cwtl
xchg
lods
popf
jb
je
imul
xchg
inc
push
or
adc
icebp
sti
pop
push
shr
ret
add
xor
push
pop
fdiv
xchg
xchg
cmp
sbb
add
dec
inc
daa
stos
es
clc
cmp
mov
pop
or
mov
sti
shr
mov
xor
inc
pop
shl
shlb
int
add
adc
scas
push
mov
ret
inc
cwtl
aaa
dec
sub
leave
mov
les
jg
push
insb
inc
shl
inc
aaa
sbb
mov
jl
xchg
mov
mov
adc
jge
dec
jecxz
rcl
inc
stos
or
aas
jae
mov
incb
shl
subps
pop
dec
aam
push
sub
xchg
jge
push
push
addl
clc
or
or
adcl
sbb
je
lds
or
cs
and
or
inc
inc
jns
lea
inc
adcl
sahf
jne
mov
popf
mov
cmp
dec
inc
inc
or
jne
pop
mov
enter
push
sar
xchg
gs
inc
les
or
je
mov
call
and
lock
lods
and
dec
jb
jecxz
or
sub
cwtl
ret
dec
xor
mov
jp
and
loope
sbb
int3
jb
or
sti
or
sub
out
int
movsb
xor
lock
dec
subb
pop
or
mov
sub
push
push
xor
mov
xchg
inc
push
pop
push
dec
adc
xor
test
sub
loopnew
mov
add
fstpt
or
or
or
push
and
sbb
cmp
xor
inc
mov
insl
mov
js
into
mov
into
add
and
pop
bound
test
jl
xor
mov
test
pop
pop
cwtl
scas
sbb
loopne
sarb
sbbl
add
nop
and
pop
lock
sub
andb
and
loopne
add
adc
sub
sar
sarb
jg
popf
add
dec
dec
adc
mov
add
lock
mov
dec
stos
or
dec
sbb
cmp
call
add
out
add
or
pop
dec
inc
add
and
jge
inc
cwtl
stc
fmul
lcall
hlt
inc
adcl
ret
lcall
push
mov
lods
or
orb
add
add
xchg
addl
dec
inc
cmp
cmp
adc
aas
push
aaa
push
fnstcw
mov
jne
adc
test
test
adc
sub
into
push
cmpsl
je
and
mov
jl
jo
loope
jo
adc
push
adcl
fsts
jbe
dec
cmpsl
das
and
out
mov
mov
fs
mov
not
mov
xlat
or
fs
xor
out
jg
push
shlb
dec
dec
lock
jge
and
or
test
loopne
or
xor
not
push
xor
add
pop
nop
ret
scas
enter
orl
adc
jb
rcrl
inc
nop
jle
add
ret
sub
mov
add
mov
add
jo
shlb
test
jg
adc
and
inc
rol
dec
movsl
push
pusha
jo
sbb
aam
dec
push
xchg
scas
insb
sub
inc
loopne
or
cli
sub
dec
mov
push
cmp
das
mov
roll
lret
sub
or
xlat
mov
jo
xchg
scas
subb
inc
add
out
outsb
adc
shlb
stos
ss
xor
sti
cs
add
lock
add
or
imul
adc
bound
stc
and
push
dec
cmovle
sub
in
mov
clc
nop
test
roll
add
add
xchg
add
jp
js
and
fiadds
add
jg
push
mov
add
jmp
and
jno
add
sarb
mov
jae
adc
jo
js
xlat
add
mov
xchg
fcompl
movl
xchg
xlat
jne
xor
jo
xor
pop
je
movsb
jl,pt
pushf
cmpsl
repnz
adcb
xor
je
jo
and
fstps
mov
out
ficoms
mov
pop
dec
fnclex
mov
or
popf
pop
pop
adc
fbstp
push
dec
adc
push
and
jle
xchg
cmp
push
pop
outsl
inc
in
repz
or
jbe
jle
pushf
addr16
dec
outsl
ja
mov
jmp
ret
test
sbb
mov
setl
adcl
mov
enter
sbb
ret
sub
or
jmp
decb
in
and
mov
lret
icebp
std
pop
and
fisttps
dec
ja
test
shrl
shll
scas
imul
inc
repz
and
xor
pop
rcll
in
in
dec
and
mov
and
or
mov
fisubl
sbb
mov
idivl
movsb
ja
xchg
pop
add
mov
hlt
push
imul
push
sub
or
clc
fsubl
and
mov
rorb
clc
lock
mov
hlt
pop
and
faddl
sub
js
enter
inc
leave
or
inc
add
loopne
pop
mov
push
cmp
pop
xchg
and
xchg
mov
or
enter
dec
fadds
mov
jnp
and
jl
loopne
dec
cmp
push
and
sbb
pop
mov
jb
xor
xor
push
push
fisubl
jmp
push
xor
and
mov
jmp
push
mov
cmp
outsb
dec
mov
xor
mov
or
dec
jmp
adc
or
adc
lods
inc
push
pusha
out
pop
sub
sbbl
imul
fadds
ljmp
cmp
ret
inc
jbe
data16
sbb
sub
mov
jge
adc
push
push
test
inc
push
push
xchg
sarb
call
jne
data16
aas
jmp
adc
pop
xchg
test
outsl
jo
mov
jae
pop
test
inc
add
or
sbb
dec
movsl
std
insb
mov
cs
fmull
cmp
dec
popf
fsubrp
ss
mov
rorb
inc
test
aaa
jge
nop
sub
jecxz
ret
divb
nop
jmp
sbb
pop
imul
in
and
inc
mov
dec
sub
jl
cmp
jg
inc
jmp
in
not
xchg
hlt
pop
sub
jne
imul
add
mov
fnsave
shrb
aas
sbb
sub
sub
fs
mov
popa
mov
pop
adc
cmp
add
inc
push
mov
adc
aam
inc
xor
fmul
adc
addr16
xor
sbb
sub
xor
mov
or
incl
shr
lret
mov
mov
xchg
and
lock
xor
in
fs
push
sub
movl
fwait
add
repz
movsb
pop
adc
add
ficoml
mov
push
add
ficoms
xorb
ds
cmp
lcall
add
pop
or
mov
ret
pop
int3
sbb
in
sub
lods
fcmovnb
cmp
cmp
vorps
sub
int3
sarl
andl
push
or
or
add
add
out
mov
outsl
push
jg
sarb
jae
mov
sub
sarb
jne
adc
out
jo
inc
jle
cmp
jl
xchg
movsb
test
sbb
fisubrl
xor
add
mov
cmpsl
push
pushl
in
insb
pop
pusha
dec
rclb
jo
xor
or
pushf
out
jmp
adc
addr16
das
shll
sahf
sub
sub
sub
loope
xor
pop
xor
cmp
jge
dec
and
and
inc
sbb
psubusb
cmp
xor
in
les
arpl
and
dec
and
add
xchg
and
pop
or
pushf
push
addl
cmp
push
inc
incl
push
mov
cmp
inc
lret
test
sbb
inc
adc
add
js
mov
xor
or
add
push
dec
aaa
addl
loopne
or
jg
aas
mov
adc
hlt
jmp
sbb
pushf
sbb
or
xor
cmp
or
fsubl
cli
ret
roll
push
adc
inc
loopne
int3
inc
dec
adc
lock
jg
hlt
addr16
mov
jl
mov
movsb
leave
add
adc
jb
leave
xchg
or
fstl
cs
fisttpl
mov
negl
and
sub
xlat
ret
lret
add
es
addr16
test
aaa
test
rorl
mov
aaa
mov
in
je
ss
inc
inc
push
adc
roll
or
lods
test
jp
mov
inc
loop
sbb
test
ficomps
cmpl
dec
or
test
cmp
jae
or
add
pop
mov
sarb
sbb
shrb
add
fcoms
mov
mov
push
loope
or
lock
xor
or
cmpsl
and
sbb
xor
test
lea
aam
rcrb
lea
jle
mov
mov
pop
cmp
jb
jo
push
push
scas
out
shrb
ret
dec
out
inc
and
loop
sbb
aaa
ds
lret
std
mov
dec
or
test
and
mov
xor
xor
cld
jp
mov
ret
sahf
ja,pn
add
xchg
je
dec
add
mov
inc
sbb
jmp
lcall
pop
fcmovb
test
je
fwait
popf
and
add
mov
adc
push
loopne
xor
jl
pop
mov
pushf
cmp
or
je
out
mov
xchg
je
mov
sbb
cmp
cmp
jecxz
mov
iret
shl
add
or
dec
adc
dec
cs
push
popa
inc
test
cmp
xchg
ja
mov
orl
adc
adc
loop
loope
popa
leave
in
aam
imul
add
adc
or
or
sbb
sub
pop
add
inc
xor
sbb
subl
out
fsubrl
and
jne
mov
mov
aaa
loop
hlt
dec
addr16
icebp
enter
sub
cli
inc
cs
arpl
mov
or
adc
rcrl
mov
adc
ficompl
jp
push
filds
repnz
sub
and
nop
dec
inc
add
lahf
rorb
lcall
outsl
inc
mov
ss
ret
mov
jb
pop
lds
push
loope
pop
inc
cmp
jae
push
cmp
jl
mov
inc
sbb
sbb
lcall
in
adc
jns
aaa
cltd
xchg
jle
testb
xchg
mov
clc
push
mov
in
loopne
pop
popa
mov
push
ljmp
jb
cmp
movsb
sub
and
rorl
push
addr16
jle
fsubrp
dec
dec
out
adc
or
enter
ss
mov
icebp
cmp
scas
stos
push
outsl
dec
xor
mov
add
push
lret
xchg
mov
or
out
dec
sbb
sbb
or
and
pop
pusha
shll
movsl
test
ss
jns
jne
jmp
mov
mov
frstpm(287
or
push
js
sbb
arpl
adc
dec
and
add
inc
pop
jle
adc
add
push
fnsave
or
jne
sub
inc
aam
xchg
clc
subl
or
push
inc
push
or
mov
push
jle
jecxz
test
push
jbe
or
addr16
icebp
sbb
clc
dec
inc
push
lock
jl
nop
ss
lock
inc
sbb
pop
jo
jl
hlt
outsb
or
insb
aam
mov
cmpsb
adc
in
dec
or
pusha
jbe
add
xchg
test
decl
push
cmp
fstl
orl
in
jno
jmp
lret
pop
hlt
outsl
add
js
loopne
sbb
lret
sbb
or
ljmp
sbb
mov
scas
into
or
xchg
pop
and
fmull
std
jb
xchg
ret
push
pop
adc
lds
test
out
xchg
or
cmp
notl
hlt
cmp
ljmp
push
pop
push
push
dec
or
mov
mov
out
xor
fs
inc
lret
push
scas
xor
mov
push
mov
or
inc
push
push
push
or
adc
mov
push
jae
mov
adc
jecxz
pop
cld
xlat
je
cmp
adc
cmp
jb
testb
push
or
add
data16
and
or
or
mov
jbe
push
movb
fldcw
pop
xor
fcomip
jb
cmp
jbe
mov
push
or
xchg
sbbb
mov
notl
sub
call
and
ret
jmp
cmp
push
push
push
test
daa
xchg
push
push
inc
js
mov
cld
mov
test
and
mov
es
jmp
hlt
jmp
xorb
add
lock
xchg
push
mov
and
jbe
push
dec
loope
xor
inc
es
push
xor
pop
sub
sbb
addl
mov
xchg
dec
cld
jbe
lea
lea
or
add
dec
dec
cmp
arpl
testl
popl
sub
xlat
jne
sub
or
xor
mov
mov
push
insb
sbb
inc
xorl
int3
in
mov
mov
mov
pop
dec
lods
imul
add
sub
loopne
push
loop
mov
ds
inc
dec
xor
pushf
call
pop
aam
test
rorl
cmp
xor
out
jbe
cmp
int3
push
ljmp
push
xor
mov
adc
xchg
jo
pusha
stos
dec
arpl
pop
push
or
jb
jb
adc
ss
and
and
sub
leave
leave
leave
xor
cmp
xchg
ret
inc
and
xchg
xchg
xchg
fildl
dec
push
in
adcb
in
in
fs
in
je
jl
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
sub
movsb
push
insb
lds
je
xor
ret
add
cmpsb
dec
add
loopne
inc
mov
and
shlb
movsb
mov
data16
call
test
adc
sbb
adc
and
clc
and
and
sbb
mov
pop
dec
jns
push
xor
mov
and
adc
inc
ret
aam
dec
and
or
dec
jne
out
sbb
or
and
mov
inc
ljmp
movsb
push
mov
cli
jbe
add
bound
cmp
and
dec
cmp
jb
sbb
fisubs
dec
lret
adc
dec
insb
xor
jne
int3
jmp
loopne
mov
inc
lahf
and
mov
cmp
cld
xor
mov
cmp
sub
add
lods
or
and
and
jmp
jb
or
cmp
pop
inc
test
cmp
ret
push
lea
je
or
fisubl
sub
add
loopne
outsb
add
int
dec
mov
add
cmp
or
jo
jp
add
fmuls
in
movsb
push
mov
loope
vminss
ljmp
xchg
stos
add
sbb
lcall
mov
aas
pop
je
push
pushf
sub
lds
inc
push
dec
and
cmp
or
xlat
test
add
xchg
xchg
inc
inc
push
and
add
adc
gs
push
adc
pop
stos
cmc
ss
mov
cmp
jb
dec
fldl
add
xchg
cmp
int3
cmc
push
cmc
and
aad
push
xor
ds
xlat
mov
jbe
sbb
aam
bound
dec
inc
or
and
dec
xor
fwait
push
jmp
orb
in
sub
adc
cmpb
adc
insb
and
in
loopne
lea
and
mov
and
sub
ja
mov
cmpsb
into
mov
loop
jp
dec
adc
movsb
push
pusha
push
mov
xchg
outsl
inc
loope
or
dec
jb
push
mov
push
add
sarb
jmp
sbb
sbb
mov
xor
jle
shrl
add
loope
es
push
push
cmpl
add
xchg
push
mov
loopne
lea
xor
or
sbb
xchg
sbb
gs
mov
jnp
add
cmp
lods
sbb
pop
xchg
shlb
add
xor
data16
cli
jl
xor
jne
decb
int
adcl
pop
lock
test
push
push
mov
inc
loope
push
roll
and
outsb
add
out
mov
add
sar
or
not
mov
or
add
or
stos
testl
fisttpll
lods
popa
or
and
push
cmp
popf
adc
add
ret
mov
inc
sbb
xchg
lea
ljmp
add
push
inc
pushl
mov
out
adc
push
jns
dec
sub
mov
into
xchg
cmp
push
int
addl
inc
cwtl
xchg
loop
lret
mov
jbe
js
push
or
or
adc
sub
push
ja
adc
push
hlt
mov
cld
push
pusha
jge
test
jmp
rorl
cli
add
cmp
add
ja
xor
cmp
fsubs
dec
in
icebp
cs
xchg
add
ret
lock
sbb
adc
xchg
dec
inc
lea
push
out
dec
jo
push
fimull
add
mov
jnp
out
test
subps
insb
mov
movsl
xchg
cmp
inc
mov
push
xchg
cmp
sub
jns
xor
sarl
cmp
fistps
cmpl
add
out
lods
pop
push
or
push
js
loopne
add
ljmp
sub
pop
cmp
cmp
mov
rclb
dec
xor
cmp
loopne
lock
loopne
add
sub
int
push
jmp
and
mov
gs
ds
icebp
dec
pusha
push
or
adc
in
lcall
jnp
inc
sbb
cmp
push
clc
push
mov
out
in
mov
inc
mov
sbb
dec
push
mov
pop
mov
or
fdivrp
sahf
cmp
lret
and
jmp
outsb
ja
xchg
mov
andl
sahf
dec
cld
push
cmp
mov
cmp
jne
adc
cli
or
icebp
movb
inc
mov
adc
cmpl
fmuls
stos
mov
sub
and
call
pop
inc
add
jo
daa
jmp
and
incl
mov
xor
gs
ds
add
xor
enter
xchg
in
mov
inc
lods
push
sbbl
pop
mov
inc
inc
sbb
or
and
mov
and
pop
add
aas
mov
jl
xchg
dec
dec
stc
mull
shlb
add
pusha
add
xchg
push
xchg
sub
inc
push
or
mov
mov
push
ss
lods
pop
lock
scas
fstps
test
std
inc
dec
pusha
xchg
jno
rorb
mov
fstl
cmp
dec
lea
mov
mov
jo
lret
jmp
or
or
repz
mov
arpl
mov
lea
mov
pushl
push
push
push
mov
ja
imul
insb
popf
adc
imul
insb
sub
push
inc
jne
divl
icebp
or
std
rorb
cmpb
popa
jb
add
jg
cs
or
cmp
lock
and
inc
in
add
js
sbb
es
dec
repz
jb
leave
je
lock
xor
icebp
aad
imul
add
sub
and
mulb
sbb
ret
and
mov
or
scas
lret
sbb
mov
sbb
fdivs
pop
dec
sub
add
jmp
push
jo
cmp
adc
xchg
sbb
or
daa
jno
jne
xor
aam
adc
sub
mov
sub
and
push
push
pop
mov
add
jge
or
push
push
sahf
insl
or
dec
push
and
mov
inc
dec
push
sbb
scas
mov
mov
sub
and
dec
cld
mov
pop
inc
xor
ret
insl
sub
pushf
cli
sbb
cmp
js
mov
inc
shlb
js
sbb
cmp
aaa
push
cmpb
aaa
xor
lods
adcl
sub
xchg
dec
and
inc
jns
js
ja
into
sub
aam
test
cli
pop
orl
push
ljmp
pop
pop
notl
orb
dec
xchg
jge
gs
inc
out
push
arpl
jno
repz
pop
cmp
jecxz
andl
add
ja
dec
fadd
notb
adc
jge
addr16
pop
sub
dec
adc
pusha
leave
or
adc
jns
clc
rclb
lock
jne
inc
sti
mov
insb
and
and
subb
push
pop
lods
pop
std
imul
faddl
pop
nop
mov
and
cmp
sbb
nop
call
movsb
mov
pop
mov
xor
dec
lods
add
fsubl
jns
lcall
xchg
lock
clc
lock
jo
cwtl
clc
outsb
push
mov
dec
cmp
sbb
sbb
inc
mov
jmp
jge
lods
jbe
and
je
inc
cmp
mov
xchg
test
push
js
icebp
insb
js
pop
sbb
push
add
or
mov
aaa
pop
filds
cmp
add
add
or
adc
fwait
push
adc
inc
pushf
dec
pop
icebp
pop
push
jp
aaa
leave
outsb
test
mov
pop
dec
rorb
dec
xor
pusha
push
in
jmp
icebp
xor
mov
push
push
jecxz
push
mov
mov
and
xchg
sub
scas
sub
ret
push
pop
jo
popw
pop
pop
movsl
scas
push
clc
scas
cmp
and
pop
add
sbbb
sbb
fcoms
sbb
jmp
lea
inc
sbb
cmp
sub
rclb
test
in
jp
xor
sub
pusha
adc
das
loope
xchg
sub
ret
sub
sti
mov
cmp
and
push
or
nop
mov
mov
dec
mull
pop
mov
imul
mov
loopne
inc
dec
cmp
dec
je
push
or
inc
inc
sbb
push
xchg
jno
sub
sub
sbb
xor
push
pop
dec
mov
inc
sub
adcl
scas
xor
mov
insl
sub
in
mov
fsubrs
sarb
repnz
das
adc
jmp
ss
pop
out
rorl
jl
into
jle
adc
push
and
adc
adc
sti
cmp
mov
pusha
pop
pop
icebp
dec
roll
jbe
inc
gs
and
jne
lea
add
or
and
data16
je
hlt
jmp
arpl
add
push
and
push
fildl
hlt
push
std
jne
and
adc
push
test
dec
or
ror
adc
cmp
daa
inc
adc
cmp
imul
inc
cltd
test
or
les
xor
rolb
mov
sub
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
loopne
loopne
stos
es
and
data16
pop
not
clc
xor
dec
add
push
mov
sbb
sub
inc
push
dec
mov
add
lretw
fistl
or
lock
pop
adcb
pop
add
mov
cmpsl
mov
notl
scas
jl
mov
xchg
test
or
je
and
add
or
sbb
repnz
adc
pushf
and
shll
dec
xor
adc
cmp
in
or
add
and
shr
and
pop
cmp
jmp
inc
fmul
add
mov
push
sahf
lock
test
adc
or
add
xor
xlat
es
adc
je
sbb
push
sahf
mov
and
or
sub
inc
jmp
push
scas
insl
jmp
jmp
sbb
testl
and
mov
and
xor
cmp
aaa
jecxz
jge
popa
cwtl
out
add
or
mov
jnp
rorb
and
xor
xor
sub
or
sbb
loope
flds
clc
mov
pop
adc
pusha
mov
pusha
loope
pop
sub
rorl
dec
and
mov
xchg
adc
fnstsw
pusha
ljmp
mov
pop
je
push
insl
inc
pop
rolb
cmpsl
repnz
es
adc
sti
add
and
scas
cmp
out
test
fisttps
pop
pop
ret
repz
das
dec
je
add
dec
jne
orl
lods
stos
sbb
mov
fsubrs
pop
testl
mov
xchg
inc
outsl
pop
xorb
in
imul
inc
add
adc
add
inc
flds
fldcw
pusha
stos
mov
pop
push
push
insl
popa
xor
stos
mov
lea
inc
insb
call
adc
add
dec
loop
push
adc
push
icebp
mov
or
adcb
xor
fs
shlb
sti
hlt
cs
or
or
mov
aaa
sbb
gs
cmc
xchg
fcompl
std
testb
incb
les
pop
jbe
lea
pop
sub
jmp
sub
dec
jae
daa
push
or
psubusw
rcll
dec
int3
adc
pop
testb
repz
mov
adc
jnp
push
mov
pop
mov
push
pop
in
repnz
add
mov
jge
fstp
aaa
and
shl
or
fdivrl
test
mov
div
pcmpgtw
mov
mov
dec
fbld
cmpsb
test
inc
sti
test
insl
in
sbb
jp
mov
jno
dec
in
jo
lock
pushf
or
jp
push
mov
loope
sahf
jmp
pop
movsb
inc
or
aam
bound
adc
xchg
and
mov
decb
push
and
pusha
pop
aam
dec
pop
sub
jbe
and
add
aaa
inc
lcall
sub
sub
mov
xchg
mov
popa
jno
das
out
nop
jne
ds
push
mov
fisubs
movzbl
add
movb
mov
sbb
sbb
pop
and
mov
jl
xchg
je
icebp
js
or
add
fwait
test
mov
mov
or
pushf
subb
mov
test
adc
pusha
mov
inc
pop
mov
outsl
inc
push
or
jno
ficompl
inc
and
push
adc
cmp
or
fimull
or
xchg
adc
or
roll
idivb
scas
adc
mov
or
in
fiaddl
xor
or
mov
inc
pushl
lea
push
or
mov
popa
dec
jae
inc
and
sub
andb
repz
ds
or
mov
out
xor
add
xorb
jns
sbb
lret
add
andl
and
xor
xchg
mov
pop
cld
pop
test
data16
cmc
mov
jbe
loopne
mov
rcrl
xchg
rolb
jne
int3
ds
outsb
adc
and
mov
xchg
mov
sbb
ljmp
adc
mov
add
push
pop
fcomps
jmp
ja
mov
cmp
cwtl
paddusw
sub
test
push
mov
pop
or
mov
aad
icebp
sbb
and
xchg
shll
push
or
dec
rcll
stos
inc
add
or
push
out
jle
loope
mov
push
pop
pop
imul
adc
inc
sbb
xor
push
in
sbb
pop
add
sbb
xor
pushf
jbe
sub
ljmp
cmp
sub
dec
aad
mov
or
push
adc
mov
or
sbb
loop
flds
mov
jae
mov
mov
push
or
insl
or
push
mov
add
mov
ja
or
adc
sbb
les
inc
adc
and
push
loope
outsl
jle
call
mov
cmp
xor
push
inc
dec
popa
in
call
je
sbb
and
ldmxcsr
test
or
and
mov
mov
and
jmp
and
and
sti
jbe
jnp
clc
inc
out
add
pop
addb
xor
cld
sbb
cmpsb
mov
jmp
inc
pop
adc
std
jp
add
fidivrs
ret
shlb
mov
inc
add
pusha
adc
sub
lods
das
insl
push
mov
sub
aaa
dec
and
jns
ja
mov
iret
sbb
pop
jnp
add
sub
repz
subb
push
push
dec
adc
mov
pop
and
testl
adc
test
dec
jmp
mov
lret
xor
pop
rclb
xchg
push
adcl
jns
mov
idivl
call
or
or
loope
xchg
sub
xor
adc
stos
stos
stos
pop
xor
sbb
mov
test
inc
inc
les
cli
sbb
loop
inc
push
es
cs
sub
dec
out
pop
lea
or
scas
mov
lods
add
add
push
or
or
add
jmp
aas
sub
xor
mov
inc
add
push
daa
mov
test
clc
pop
test
jne
or
jl
mov
roll
push
stos
stos
test
xchg
inc
xor
jp
jmp
inc
aam
xor
cmp
cltd
and
add
mov
cltd
roll
push
jo
dec
jns
dec
xchg
loopne
pop
ficompl
push
inc
sub
inc
shl
mov
pop
dec
je
jg
inc
aam
loop
rolb
adcl
add
outsb
push
cltd
insb
inc
out
pop
and
mov
out
mov
inc
into
mov
dec
mov
enterw
repnz
or
mov
and
cli
sbb
mov
add
cmp
inc
mov
jae
mov
mov
adc
rolb
imul
push
loopne
and
or
push
mov
loopne
imul
adc
inc
mov
sbb
sti
cmp
dec
dec
stos
inc
pop
mov
int3
lar
mov
addr16
movsl
cmp
rorl
nop
mov
adc
jae
dec
popa
cmp
sub
das
js
std
sub
not
movsb
pop
popf
je
mov
and
pop
dec
mov
push
or
mov
andb
push
push
jl
inc
jo
mov
mov
jl
xor
cld
adc
xchg
aam
and
popa
int3
mov
dec
mov
clc
adc
iret
inc
and
aam
and
lcall
xchg
add
cli
psllw
mov
pop
push
push
sbb
pop
add
pop
loop
mov
dec
jns
inc
lock
in
ret
xor
jecxz
xchg
mov
sbb
shrb
mov
or
inc
mov
sbb
pop
out
push
scas
ret
jl
pop
andl
cmpb
out
xor
lea
iret
and
mov
inc
jno
cmp
scas
cld
sbb
add
ret
jge
jmp
pop
scas
shl
loopne
adc
loop
call
xor
and
stc
lea
addb
in
push
dec
or
jg
outsl
and
and
pop
pop
jns
scas
mov
pop
inc
leave
or
and
add
and
sarb
add
lods
cld
push
sbbb
and
lret
clc
or
add
mov
nop
pop
add
or
dec
mov
jl
dec
ljmp
add
stos
std
clc
xor
push
adc
xor
imul
or
xor
aad
xlat
xchg
and
cmp
jne
cmpsl
pop
test
push
nop
out
fcoml
repnz
mov
pop
or
cmp
add
or
jmp
xor
or
xchg
add
inc
rcrl
lods
mov
sub
cmp
ja
push
dec
jmp
fs
jbe
inc
and
mov
fisubs
test
adc
inc
loopne
je
inc
or
outsl
mov
jmp
pusha
and
mov
fnstcw
sbb
mov
jmp
cmpsl
mov
mov
mov
inc
xchg
pusha
sub
inc
call
cmp
jle
std
cmp
jle
cmp
push
xor
into
and
push
mov
xor
jno
xchg
xor
sub
sarl
and
push
jmp
xor
jge
sbb
mov
mov
push
es
mov
pop
jge
pop
mov
mov
nop
add
jmp
jno
jne
mov
je
jmp
pop
push
in
mov
or
jge
jmp
loopne
adc
and
outsb
mov
call
test
xchg
xor
pop
push
sub
je
adc
gs
orl
cmp
and
adc
test
stc
sub
cmp
mov
jo
test
mov
fnstenv
call
mov
mov
stos
mov
mov
fadds
pop
cmp
or
loope
adc
add
inc
testl
jo
sbb
fdivp
mov
xor
xor
jmp
cld
mov
in
sbbl
and
sub
or
push
adc
or
jecxz
add
mov
jmp
push
cwtl
pop
mov
xor
push
mov
dec
xchg
mov
pop
fdiv
pop
xor
xor
xchg
rolb
jge
neg
add
xor
aam
mov
sub
cmp
xlat
test
cmp
lods
scas
mov
sbb
inc
imul
jo
jge
jle
lock
xor
jne
lea
lods
inc
out
and
add
mov
sarl
xor
inc
mov
sbbl
adc
test
add
repz
cmpb
pop
mov
or
xor
call
aas
mov
push
xor
and
and
and
xorl
adc
nop
shlb
andl
adc
sbb
std
mov
or
or
mov
clc
les
add
inc
int3
jne
in
es
inc
enter
les
test
into
dec
iret
inc
into
jne
inc
or
cmp
imulb
add
xor
hlt
int3
add
adc
dec
jne
mov
mov
rcrl
push
mov
push
xor
rorl
imul
mov
movsb
push
and
dec
cld
outsb
icebp
ds
cmpsl
inc
dec
lock
ja
pop
or
js
out
orb
mov
pushf
xchg
sbb
stc
push
mov
mov
add
mov
inc
aaa
cmp
jne
or
mov
aam
lods
fldenv
jg
testb
shr
ret
push
sti
sbb
outsl
out
mov
jg
or
mov
jge
mov
les
add
notb
mov
or
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
inc
or
jne
insb
mov
ret
movsb
mov
or
mov
and
mov
mov
xchg
cmp
add
fcmovb
sahf
mov
sti
pop
cmpb
or
in
fiadds
push
call
or
outsb
fidivl
jl
fidivrl
jb
into
cs
jno
push
fmull
pop
nop
dec
ja
cmp
add
cmp
mov
mov
jne
lret
into
jmp
scas
out
xor
dec
and
mov
movsb
int3
mov
test
int3
or
push
xchg
pop
out
lods
fcomp
jmp
sub
add
negb
mov
movups
add
mov
and
ret
mov
inc
mov
inc
and
das
inc
add
push
dec
push
cs
and
jl
shl
repz
cmp
jo
dec
pop
test
in
push
lods
cmpsl
lea
int
or
jo
or
jmp
inc
out
xorb
add
inc
pop
jne
dec
aas
pop
cmp
add
dec
shrb
push
mov
mov
mov
rorl
jle
cmp
adc
in
or
cwtl
dec
dec
pop
push
xchg
xchg
mov
mov
cmp
insb
inc
cs
or
ss
jnp
or
gs
or
jmp
clc
jg
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
clc
push
testl
mul
pop
add
out
call
xchg
add
movsl
pop
notl
arpl
out
clc
sbb
cmp
les
or
lcall
lods
cmp
jl
cmc
and
inc
ficoml
xchg
mull
mov
jnp
pop
jno
and
ja
pusha
xor
jecxz
sub
sbb
mov
test
sub
xor
addr16
xchg
mov
xlat
add
pop
mov
rcrb
jbe
daa
mov
jbe
or
add
dec
push
cli
adc
mov
cmp
setg
ljmp
push
cmpl
out
clc
add
mov
mov
aas
adc
mov
jne
movb
pop
add
fcoms
jle
add
push
clc
lds
xor
mov
fcmovnbe
mov
es
pop
add
add
icebp
pop
inc
shufps
lret
jmp
sub
add
sbbl
push
imul
rorl
aaa
push
push
out
lcall
jns
les
sub
andb
scas
dec
mov
pop
idiv
xor
push
or
xor
testb
mov
add
add
or
movsl
push
addr16
and
mov
mov
sub
or
jmp
xor
xor
push
add
or
mov
test
addr16
add
cmp
sub
out
ret
jbe
test
ljmp
dec
enter
aam
sub
adc
mov
adc
dec
xor
shlb
enter
sub
shlb
aaa
or
bound
movl
jno
and
ret
jl
mov
daa
xchg
mov
cmp
push
lahf
pusha
xor
sbb
push
test
and
call
jecxz
add
imul
pop
xchg
pop
or
fldl2t
call
cs
sub
cmp
inc
or
xchg
testl
movsb
fcoml
adc
ds
inc
movups
adc
sub
jle
lret
lret
imul
mov
nop
fwait
mov
outsb
repz
mov
imull
fsubr
lea
add
popf
jnp
add
enter
mov
cld
push
cs
add
lock
push
xor
push
mov
jl
add
jecxz
push
mov
push
repz
dec
dec
push
dec
inc
xor
leave
and
ror
jmp
shll
inc
and
jp
gs
je
dec
mov
dec
fwait
cld
inc
imull
jle
fistpl
sub
loopne
lock
ret
daa
inc
adc
std
xor
or
jne
pop
cmp
sahf
punpcklwd
add
int
loop
scas
test
movb
inc
cmp
xor
ret
add
fmul
and
or
add
jg
ja
addl
mov
push
sub
adc
int
inc
or
pop
faddl
les
sbb
and
lea
cmp
clc
xchg
ret
mov
add
inc
icebp
ss
shrd
push
jle
cmp
ss
fistpll
sbb
clc
mov
fisubrl
or
cmp
xchg
stc
inc
xor
xor
out
xchg
clc
sub
mov
mov
sub
loopne
js
inc
call
test
clc
sub
mov
mov
rorb
push
sete
adc
ja
loope
inc
out
scas
push
je
and
in
sbb
js
lods
or
or
push
jb
push
sub
or
loope
gs
fidivrl
rorl
push
jle
xor
shll
mov
ds
xor
inc
popf
add
jbe
mov
mov
jge
or
sbb
jg
lods
jb
ficoml
dec
inc
dec
sahf
sub
dec
pop
or
or
pop
rcrb
ret
daa
jge
dec
loopne
mov
mov
mov
xor
and
push
sub
test
inc
jmp
mov
mov
jne
loop
test
jb
loopne
ja
les
mov
and
sub
clc
cwtl
mov
add
inc
enter
mov
cmpsl
mov
push
lock
imul
dec
and
mov
or
adc
mov
fwait
pop
xchg
popaw
push
mov
add
mov
xor
or
ret
add
mov
and
adc
add
sub
nop
adc
mov
lock
mov
repz
cmp
cs
inc
lret
adcl
adc
inc
inc
push
cmp
sbb
or
enter
jg
adc
push
insl
push
jmp
insl
cmp
dec
xor
lock
cld
jl
shlb
mov
sbbl
inc
sahf
mov
or
sbb
inc
shr
loop
mov
mov
sbb
jns
pop
dec
je
jge,pt
clc
pop
aam
in
gs
or
pop
data16
fwait
aaa
in
add
sub
inc
popa
je
sti
lds
inc
je
dec
sub
or
stc
add
sub
xchg
dec
shrl
mov
clc
or
and
cmp
nop
adc
adc
mov
mov
dec
adc
adc
call
jne
fmull
insl
loop
xor
sbb
out
dec
imulb
push
pop
repnz
loope
add
push
pop
cmp
rol
ret
xor
mov
push
in
imul
push
cmp
lods
push
clc
incb
push
inc
or
cmp
or
addr16
xchg
gs
sbb
std
cmpb
jne
jp
inc
xchg
xor
ss
xor
hlt
xor
hlt
pop
stos
movsl
xchg
add
add
dec
das
cmp
xchg
inc
jo
rclb
dec
jmp
cmpsl
hlt
enter
lahf
sub
outsb
dec
push
sub
scas
add
cltd
fstpl
xchg
inc
push
add
scas
or
imul
sub
shll
out
andb
push
cmp
cmp
int
mov
push
dec
mov
pop
sub
mov
pop
loopne
iret
rolb
adc
shrb
lock
xor
mov
cmpl
lret
or
push
test
push
les
dec
push
mov
dec
push
jle
pop
or
mov
sub
push
jp
pop
call
xor
dec
int3
imul
mov
test
bound
jmp
dec
cli
and
lret
mov
and
jbe
jge
and
add
pusha
mov
push
adc
mov
jne
fs
mov
or
ficoms
ret
jg
sub
mov
and
mov
or
add
lret
js
mov
mov
mov
lods
nop
add
dec
les
sub
adc
dec
jne
push
push
jmp
or
jmp
sahf
jle
test
or
ljmp
addl
test
xchg
shl
push
sbb
fs
and
test
jae,pn
cmp
dec
shll
or
les
add
sbb
js
sub
popf
mov
cmp
insl
ss
xor
ret
sbb
push
push
mov
push
hlt
mov
fidivs
rol
jns
push
dec
add
jbe
insb
pushf
dec
add
mov
push
cld
mov
dec
dec
and
in
shll
add
js
sarb
mov
pop
mov
add
into
sub
jns
jne
xchg
mov
mov
int3
mov
dec
xorb
hlt
push
or
xchg
dec
mov
test
push
je
adc
jecxz
dec
repz
add
and
cwtl
add
xlat
xchg
cmp
cmp
and
adc
sbb
sbb
fisubrl
jb,pn
orps
mov
add
adc
sub
stc
insl
xor
push
arpl
and
pop
inc
xor
cmp
sbb
enter
inc
jmp
lret
add
pop
jb
sbb
outsb
lds
and
cmp
fldcw
popa
inc
test
jecxz
dec
fdivs
sbb
push
pop
and
cmp
and
scas
dec
rorb
outsb
test
jns
aam
pushf
mov
jmp
xlat
push
dec
cld
jo
mov
scas
xorl
or
ss
jmp
adc
insl
movswl
testl
jge
in
pop
lret
repnz
js
mov
push
movsl
jo
mov
test
jge
cmp
test
inc
and
add
mov
sbb
mov
dec
movsb
cmp
push
pop
inc
das
sub
jmp
add
daa
jecxz
adc
sysexit
insl
cwtl
pop
iret
inc
ljmp
inc
jmp
js
adc
test
or
mov
cwtl
cmp
dec
fimuls
nop
push
outsb
and
and
xor
sbb
push
loopne
xlat
sbb
int
dec
pop
dec
jmp
jns
loope
in
xor
adc
xor
add
int3
dec
cli
pop
or
out
cmp
inc
addl
lret
xchg
icebp
xor
in
icebp
dec
jo
xchg
sbb
dec
icebp
adc
es
sub
mov
sbb
cmpsl
imul
or
xchg
or
and
testb
jno
inc
sbb
jge
adc
adc
cmp
inc
pop
push
movsb
pop
and
stos
sub
xchg
adc
sub
mov
daa
mov
ljmp
inc
dec
cmp
lea
or
xor
shr
add
or
hlt
sub
mov
shr
shr
or
mov
int3
imul
testb
or
bound
scas
push
cld
add
sar
in
stos
mov
cmp
sbb
inc
pusha
lock
fildl
rolb
add
int3
cld
push
cmpsb
out
jne
adc
fnstcw
inc
clc
push
or
ds
out
in
orb
lea
mov
shr
sub
cli
mov
adc
or
mov
cs
inc
or
jp
adc
repnz
or
dec
popf
xchg
addl
iret
adc
out
adc
mov
lret
sbb
and
ss
lret
jmp
cmp
insl
call
cli
push
or
adc
iret
shl
andl
adc
xchg
lods
mov
add
clc
shl
cmp
icebp
test
mov
lret
test
je
push
mov
mov
or
cmp
mov
pop
cmp
cmp
aam
popa
js
movsb
ficoml
fcomps
sbb
ret
cmp
push
sub
push
xchg
out
sub
add
dec
cmp
cmpsl
es
push
cld
sub
pmulhuw
jne
add
call
and
add
dec
and
and
xor
cs
inc
cli
iret
mov
cwtl
cmp
push
adc
push
cs
mov
sbbb
or
add
inc
nop
ja
in
pusha
xorb
or
sub
mov
cmp
mov
lret
cmpsb
mov
fst
add
dec
cmp
lock
jl
cmpb
loopne
dec
fnstcw
mov
incb
aad
sub
mov
xchg
and
push
xlat
xor
stos
mov
adc
inc
push
push
mov
push
aam
shrb
push
iret
ds
inc
adc
fnstenv
lret
jne
xchg
inc
and
or
pop
add
sub
and
pop
inc
or
add
add
fs
mov
lock
adc
enter
out
or
inc
jecxz
loope
into
jne
inc
fldenv
and
shll
out
and
push
je
mov
adc
or
xor
dec
adc
mov
mov
cmp
pop
pop
adc
adc
jl
rol
jne
movsw
xor
int
es
push
outsb
rorb
or
les
sbb
test
and
inc
out
pop
addr16
push
mov
cli
arpl
jmp
adc
iret
mov
fiaddl
sbb
sbb
and
mov
sbb
sbb
adc
sbb
push
sbb
out
push
inc
and
fldenv
xchg
dec
rcll
icebp
sbb
push
lret
enter
sbb
inc
clc
data16
jns
inc
xor
dec
jne
pop
pop
pop
pop
insl
jg
inc
cmp
jae
or
jae
lods
rcl
adc
orb
loope
shr
test
movsb
push
ret
adc
jbe
mov
and
cld
je
hlt
xchg
les
adcl
or
push
int3
jmp
add
fsubrs
mov
add
mov
adc
rsqrtps
es
sbb
xor
xchg
inc
xchg
or
gs
int
or
into
jbe
and
mov
jns
aas
mov
dec
adc
pop
daa
movsl
push
push
mov
add
sub
movsb
aas
push
or
adc
rclb
mov
es
loop
setle
mov
dec
test
insl
test
add
mov
jle
xchg
ret
adc
gs
mov
add
aam
or
cmc
cs
int3
push
cld
mov
test
dec
pushl
dec
cmp
test
fidivs
jg
rol
sahf
adc
jge
mov
sbb
dec
in
mov
mov
sbb
testb
pop
clc
lds
sub
leave
je
pop
adc
and
inc
mov
mov
scas
data16
or
mov
je
test
mov
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
mov
shll
leave
adc
mov
xor
idivl
pop
add
and
test
fimull
push
je
and
push
sbb
mov
pop
fbld
mov
pop
pop
ljmp
sbb
pop
jo
mov
ret
jmp
testb
in
fdivs
push
pop
pop
mov
pop
mov
movsb
into
sarb
xchg
sbbl
mov
pop
lcall
cmpsl
dec
shlb
inc
dec
loope
add
cltd
fstpl
mov
pusha
adc
pop
cmpsl
test
mov
cli
fucomp
aad
dec
negl
add
adc
adc
inc
mov
scas
pop
cmpb
mov
jb
jno
cmp
push
xchg
xor
inc
jmp
sub
xchg
xor
pop
push
inc
mov
adc
push
sbb
sahf
push
inc
in
or
les
jns
cltd
add
xor
jge
sbb
add
sub
or
pusha
sub
sarb
dec
enter
insl
ror
push
rcl
rcl
aad
iret
repz
xlat
fcomp
or
insb
fstpt
mov
pop
nop
data16
inc
add
ss
or
dec
into
data16
je
xor
sub
adc
fwait
std
shlb
mov
mov
add
sub
pusha
push
inc
push
add
loope
movsl
aas
js
cmp
or
divb
movb
mov
insb
sub
out
ja
mov
es
push
stc
mov
sub
jo
push
add
bound
add
add
push
imul
xor
imul
or
outsl
pop
dec
sbb
lea
sar
mov
js
mov
arpl
or
fstpt
mov
mov
mov
mov
popf
out
push
inc
pushf
sub
or
push
adc
mov
jo
loopne
rol
sti
add
bound
sub
push
jp
mov
add
jb
inc
xor
fildl
imul
or
movb
push
mov
lock
add
ja
and
and
lea
pop
sbb
movsb
subl
lcall
xchg
ja
mov
pop
mov
mov
and
pmulhuw
lret
mov
dec
lods
loopne
inc
or
adc
or
mov
mov
dec
sbb
and
inc
pop
mov
sarb
dec
test
rolb
enter
push
mov
sarb
pop
sub
mov
or
or
inc
push
ds
sub
cmp
mov
sub
sub
xchg
cwtl
mov
jge
insl
test
inc
test
sar
fdivl
mov
cmp
jne
nop
mov
enter
aaa
out
mov
add
cld
or
and
pop
dec
cld
or
push
push
mov
jg
or
ljmp
xchg
call
or
add
push
dec
shrl
in
out
xchg
ret
insl
mov
or
dec
inc
and
add
lods
lock
jb
iret
lock
xchg
div
cli
cli
inc
add
sahf
cli
div
add
xchg
loopne
fmuls
dec
add
xor
mov
mov
pusha
outsl
mov
adc
mov
test
mov
sbb
clc
insl
xorl
xchg
mov
xor
mov
rolb
mov
clc
mov
xor
cmpsb
mov
mov
lock
mov
pop
inc
cmpsl
add
dec
fisubl
repnz
pushw
sub
loop
pop
cmp
pop
xchg
mulb
les
and
sbb
pop
inc
cmpsb
and
repnz
xchg
pusha
adc
xor
in
mov
dec
fldl
jne
fsubr
push
sbb
cmp
ss
inc
test
dec
xor
push
mov
out
sub
xor
mov
test
adc
call
sub
push
cmp
cld
lea
fcmovu
xor
int
mov
push
push
pusha
adc
inc
add
adc
dec
lods
rolb
cltd
add
sbb
clc
sbb
xchg
add
sbb
negb
cmp
sbb
sbb
notb
fs
lock
or
and
or
jge
pop
and
inc
lock
inc
ret
inc
sbb
cmp
jne
jne
rolb
in
rol
rolb
int3
pop
mov
adc
fstl
pop
sub
adc
push
les
inc
add
inc
fildl
add
add
push
nop
cmp
adc
push
adc
or
cli
out
adc
sub
outsb
cld
mov
stos
pop
shr
stos
fisttpl
mov
push
rcrl
mov
jne
sbb
neg
mov
data16
inc
imul
and
imul
pop
jl
and
adc
add
and
lea
jecxz
adc
addl
pop
lcall
add
push
std
cmpsl
repnz
mov
add
sub
clc
ds
sub
out
enter
sbbb
sbb
jbe
mov
mov
clc
js
add
enter
inc
fs
cmp
push
shrb
xchg
push
mov
and
dec
int3
negl
jnp
add
add
decb
lock
lock
inc
ljmp
inc
pushf
stos
mov
sub
nop
adc
cmp
jge
xorb
bound
movb
dec
cmp
cmp
mov
add
add
fadds
dec
jp
pop
add
dec
test
repnz
mov
add
or
mov
lods
pushf
adc
lret
or
add
push
add
sub
add
dec
movsl
jge
mov
add
add
add
and
mov
mov
vorps
les
je
xor
aam
fiaddl
or
mov
shr
add
jmp
or
add
or
pop
pop
scas
add
push
je
cmp
addb
pop
push
add
add
xor
sub
adc
or
xor
ret
fimuls
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
clc
scas
add
pop
and
pop
pop
fdivs
sbb
mov
in
add
prefetchw
push
dec
fisttpll
mov
loope
hlt
test
push
pop
jae
or
or
add
add
roll
push
lahf
add
mov
xor
pop
out
xchg
or
dec
pop
lahf
jnp
pop
ljmp
mov
and
and
or
mov
test
cmp
or
pop
loopne
aam
push
dec
icebp
xor
sub
xorb
subb
sbb
inc
jo
push
xor
pusha
dec
inc
xchg
xchg
add
dec
pop
inc
cmpsb
dec
aam
out
mov
or
pop
mov
inc
fiaddl
mull
test
adc
data16
sbb
add
add
jae
xchg
jle
out
stc
mov
je
and
sbb
inc
jae
repnz
lret
into
into
into
adc
and
inc
pop
sub
push
pop
nop
and
cwtl
pop
mov
cmpb
rcl
adc
notb
add
jg
punpckhwd
cmp
pop
lcall
add
jo
test
add
shl
adc
and
enter
add
mov
test
and
sarb
ret
je
and
pop
mov
add
sub
jmp
lea
lret
ret
pop
or
out
and
jo
push
scas
xor
push
push
or
dec
xchg
ret
sub
sub
lods
and
pop
fcompl
mov
mov
fwait
ss
aam
cmp
cmp
mov
mov
sub
add
jle
jle
mov
push
cs
sbb
xlat
jle
cwtl
sub
and
daa
or
and
cli
xor
jge
scas
mov
bnd
or
push
xor
add
mov
leave
push
mov
add
fmuls
push
mov
xlat
aas
les
hlt
cmp
jb
cltd
mov
push
scas
orb
push
lock
shr
sbb
hlt
push
or
mov
add
add
inc
dec
ds
je
mov
test
mov
cmp
icebp
fwait
popa
pop
cmp
jbe
inc
inc
int3
xchg
and
imul
jmp
pop
sbb
mov
and
fiadds
imul
fwait
notl
or
xchg
jns
jmp
mov
dec
jl
push
aaa
push
sbb
lret
push
cmp
sbb
clc
imul
mov
push
sbb
roll
and
mov
movsl
push
lods
test
sbb
inc
sub
xchg
fs
push
pusha
scas
loopne
rcrb
mov
scas
fldl
mov
cmpb
pushl
repnz
pop
in
pop
xchg
inc
test
push
xor
mov
out
je
and
call
fcoms
cs
cmp
cwtl
pop
mov
outsb
out
nop
push
and
jge
sbb
adcb
sbb
inc
and
test
sub
je
or
test
fcoml
in
mov
imul
mov
dec
xchg
xor
xor
inc
sbb
clc
mov
dec
stos
pushl
inc
loope
inc
sbbb
or
cmp
pusha
push
jp
lret
push
imul
add
adc
push
adc
xchg
stos
addl
cmp
add
sub
xchg
push
cmc
push
cmc
xorb
or
std
adc
adc
popa
add
call
sub
mov
jae
addb
lds
jmp
push
push
xlat
xchg
inc
adc
jb
test
push
sbb
jle
insl
push
adc
jb
fsts
add
popa
sar
sub
sbb
roll
iret
dec
insl
mov
or
js
push
jl
push
jne
push
inc
loope
cmp
das
lods
movsb
into
popa
ljmp
xchg
lods
or
add
fwait
mov
pop
fisubrl
lods
pop
rorb
icebp
or
xor
inc
imul
outsb
outsb
loope
adc
mov
and
das
inc
cwtl
lock
push
push
rolb
xor
insb
inc
popa
pop
add
clc
mov
add
or
daa
loop
in
and
pusha
jns
cmp
dec
sbb
dec
sarl
add
pop
add
fdivs
filds
jg
xor
inc
ret
call
xadd
mov
movsb
jecxz
or
push
push
xor
push
jbe
or
ret
xchg
enter
sub
adc
pop
mov
xchg
pop
fistpl
pop
nop
lds
sti
out
push
and
movsb
mov
loopne
jmp
dec
loop
fiadds
outsl
xchg
fisttps
xor
outsl
push
sub
rorl
sub
adc
cli
add
adc
pop
lahf
xchg
sbb
mov
cmpl
clc
inc
and
pop
push
das
cmp
shrl
sub
add
shlb
cwtl
sbb
add
es
push
mov
adc
xchg
xor
dec
hlt
lcall
xor
mov
cmpsb
inc
hlt
xor
in
sub
mov
push
adc
lock
push
mov
pop
insl
pop
testb
lock
push
testb
push
push
or
cltd
inc
mov
xor
sbb
xchg
movsb
or
cmp
mov
dec
cli
xor
or
popl
add
data16
and
or
dec
push
daa
pop
or
sub
mov
pop
dec
jl
or
test
and
jg
data16
cmp
shlb
pusha
push
xchg
lods
dec
loope
pop
inc
pop
sbb
mov
and
push
xchg
adc
rorb
xchg
int
fs
sbb
jne
mov
mov
loopne
clc
out
cvttps2pi
test
push
ljmp
mov
lods
ja
je
pop
subb
scas
cs
jne
fbld
push
fnstcw
fcmovb
cmp
jmp
fstps
nop
xor
inc
cmp
mov
adc
dec
xchg
jmp
cmp
pop
mov
adc
test
adc
pop
sbb
push
or
pop
pop
mov
sbbl
andb
cltd
js
lea
lock
dec
outsb
push
out
xchg
mov
sbb
ret
fsubl
sub
lock
in
leave
test
gs
loopne
mov
adc
fsubrs
aad
call
jecxz
ja
sbb
push
in
fdivrs
jp
add
ss
test
xor
bsf
jp
loopne
add
lea
push
or
shlb
cmp
call
in
test
push
inc
xchg
ss
push
jge
xor
roll
lock
mov
orb
scas
add
xor
pop
mov
add
dec
pusha
repnz
inc
mov
pusha
ret
repz
or
fsubrs
stc
push
nop
jo
add
mov
inc
jne
repnz
mov
int3
add
dec
add
aas
in
adc
lods
in
add
sub
jg
adc
sbb
jne
cmp
in
add
add
cs
lret
out
pop
lahf
dec
mov
lock
xor
inc
jo
mov
rclb
nop
and
shll
or
ret
push
cmp
insb
insl
ljmp
jb
and
and
shl
and
dec
fwait
and
sub
sarl
addr16
insl
mov
or
lret
nop
and
mov
mov
nop
fadds
xchg
int3
mov
dec
lret
les
stos
enter
xchg
xchg
aam
xchg
in
xchg
and
pop
jg
orb
fcmovnbe
pop
in
movups
orl
fstpt
inc
aam
addb
mov
test
cmp
add
xchg
fsubl
in
imul
sbb
dec
jle
and
add
xorl
mov
inc
push
cltd
out
inc
loopne
enter
push
add
add
add
jp
ljmp
pop
popf
or
push
cwtl
test
imul
jmp
dec
xchg
and
xchg
or
aaa
lock
fs
sbb
stos
lods
dec
mov
pop
pop
loopne
daa
shll
cltd
aam
fs
cmpsb
sub
inc
or
loopne
cmp
xchg
cmpsl
in
sbb
sub
inc
addb
cs
leave
mov
add
adc
xchg
dec
adc
and
dec
xor
xor
cmp
dec
xor
and
dec
outsb
and
add
addr16
test
inc
add
cmpl
les
in
int3
shlb
inc
push
aam
add
clc
hlt
pusha
xchg
mov
jmp
nop
xchg
lock
xlat
stos
mov
imul
inc
in
orl
fwait
mov
mov
aam
adc
xor
shlb
xchg
popa
xchg
push
xchg
mov
mov
mov
xchg
cwtl
xor
mov
fisttps
test
mov
subl
add
jne
mov
and
mov
and
movsl
lea
and
out
std
clc
pushl
sbb
int3
loopne
cmpsl
arpl
pop
sbb
enter
mov
out
in
lcall
ret
ret
pop
mov
jne
pusha
test
pusha
enter
push
mov
xor
test
xchg
mov
or
sbb
mov
in
jp
push
loope
sub
mov
stos
xor
ss
in
insl
xchg
dec
add
call
dec
call
inc
dec
mov
stos
inc
imul
test
cmpsl
in
mov
loopne
loopne
inc
out
lock
dec
repnz
add
add
mov
inc
movq
lods
loopne
in
mov
enter
mov
inc
mov
insl
adc
mov
xchg
cli
adc
jge
ficoml
insb
mov
add
dec
sbb
push
lods
int3
out
sub
xchg
out
adc
rcrb
cmpsb
lahf
lahf
mov
add
mov
or
jno
in
mov
mov
lods
dec
pushf
and
pop
mov
lea
xchg
sbb
lods
or
and
test
lea
call
lods
mov
dec
dec
dec
mov
mov
dec
enter
xor
aaa
xchg
movsb
sub
jns
daa
mov
fildll
pop
clc
and
sbb
sbb
mov
rcrl
sarb
inc
pop
dec
pop
and
sub
xchg
inc
scas
cmp
inc
adcb
int
or
test
int3
xchg
imul
xchg
test
leave
add
in
fimull
or
cmpsl
and
lods
scas
or
adc
sbb
adc
imul
gs
pop
in
lods
ja
xchg
ss
mov
dec
dec
insb
push
int3
xor
adc
inc
adc
lods
rolb
and
in
es
push
faddl
mov
mov
push
mov
xchg
add
std
frstor
push
in
or
sti
sbb
enter
xchg
fstps
jmp
add
nop
adc
dec
mov
lahf
and
jmp
push
xor
faddl
mov
xor
mov
int
push
lods
jg
dec
jg
sub
insb
mov
pusha
cld
add
or
test
out
xchg
fildll
lods
shr
adc
mov
sub
adc
pop
push
pop
pop
cltd
pusha
cmpsb
dec
jb
inc
add
and
mov
stos
and
xchg
jg
xchg
fs
lds
outsl
in
mov
xchg
jle
inc
mov
cmc
mov
lods
lods
adcb
jno
dec
jmp
mov
lock
dec
add
inc
popa
loopne
andl
mov
cwtl
pop
or
aam
push
cmp
mov
and
adc
fcom
xchg
adc
insb
in
roll
adc
mov
test
sub
and
push
adc
int3
lcall
clc
sbb
sahf
hlt
sbb
dec
movsb
fisubrs
cmp
add
jb
dec
add
fbstp
nop
pop
adc
lock
pushf
fwait
add
dec
loop
leave
add
std
push
and
mov
pop
insl
xor
pop
aas
call
in
cmp
enter
loopne
fdivr
push
mov
sub
dec
ficomps
pop
cmp
xchg
sub
sub
and
sbb
jo
in
add
cmpsl
inc
and
sbb
imul
xchg
or
and
or
or
or
mov
cwtl
adc
push
daa
in
aaa
call
and
rcrl
rorb
int3
push
mov
ds
fdivr
inc
inc
or
dec
xor
sub
lahf
cmp
or
pusha
arpl
add
and
repnz
leave
flds
shlb
inc
cli
and
pop
adc
xchg
rcrb
popa
xor
sbb
xchg
bound
andb
xor
dec
xlat
sub
adc
adc
mov
clc
inc
int3
mov
and
pop
add
sbb
sub
xor
inc
vorps
add
popf
nop
decb
adc
mov
dec
in
xor
mov
call
cmpsb
adc
mov
adc
inc
stos
mov
or
mov
push
add
mov
mov
pop
adc
jo
lock
adc
test
xor
scas
in
shll
cmp
push
push
sub
inc
in
push
imul
int3
jae
and
push
add
sti
movsl
or
push
xchg
inc
mul
insl
mov
jb
mov
scas
dec
or
push
push
fs
je
loopne
inc
pop
lods
or
pusha
movsb
jb
fwait
nop
lods
mov
int3
enter
jb
sarb
mov
cwtl
dec
jb
mov
nop
popa
mov
movsb
push
das
mov
rorb
test
leave
enter
push
and
sbb
sub
es
in
fadds
cmpsb
and
jl
sarb
push
mov
sbb
out
movsb
xchg
nop
mov
pop
pushf
mov
lods
popa
insl
fmull
push
in
ret
and
mov
mov
lds
pop
pop
xchg
andb
jae
push
pop
cmp
jne
and
aas
pop
or
inc
mov
adc
imul
sbb
jo
in
movsl
and
rcll
in
mov
mov
addr16
xor
and
lea
imull
imul
push
nop
stos
add
orb
sub
and
or
dec
sbb
insb
mov
mov
push
loope,pn
in
call
lock
dec
and
lea
outsl
xor
jo
outsl
in
sub
scas
ret
les
mov
mov
or
jo
jge
stos
push
imul
lods
jns
stos
sbb
pop
xorl
les
mov
pop
jo
and
movups
inc
rolb
int3
fadd
jo
shlb
push
or
and
jns
shlb
fsubr
in
push
test
in
inc
lock
rclb
adc
mov
js
pushf
std
jb
inc
pop
imul
dec
sbb
shrb
mov
fs
mov
mov
cld
mov
adc
in
push
inc
pusha
adc
or
repnz
jno
adcb
in
movsb
or
loope
scas
xchg
dec
test
fdivl
in
rclb
rolb
das
adc
out
aam
nop
push
aaa
adc
orb
mov
cltd
adc
mov
je
or
cmpsb
aam
mov
fmull
sbb
mov
add
mov
push
loop
dec
fcoms
inc
fmuls
scas
leave
adc
dec
shlb
pop
mov
pop
icebp
call
add
push
fnstenv
xchg
fiaddl
pusha
add
hlt
or
xor
adc
cmp
mov
sbb
push
xchg
out
push
adc
mov
xor
enter
xchg
mov
adc
es
sbb
cmp
sti
sar
or
jg
icebp
adc
adc
push
inc
fcoms
cmp
push
pop
orl
movsl
sub
sub
aam
and
mov
gs
mull
movsb
cwtl
jne
pushf
add
aaa
adc
leave
test
fsub
cmp
jae
fsubr
int
dec
scas
mov
xor
sub
shlb
out
in
cltd
fcmovnu
and
cmp
xchg
add
mov
add
adcb
ret
es
mov
lea
scas
inc
fs
imulb
mov
out
lea
mov
and
out
out
cmp
mov
xchg
rcl
adc
and
call
fcomps
rorb
mov
mov
jp
gs
lahf
fs
dec
dec
enter
xor
aam
jns
or
or
mov
pop
jp
movsl
dec
mov
mov
pcmpgtw
ret
sbb
xor
adc
lock
adc
inc
inc
ficoml
gs
and
mov
xchg
ret
mov
mov
or
add
mov
popf
or
pushf
sbb
cmp
or
mov
sbb
pop
pop
xchg
inc
test
lea
movsb
adc
push
arpl
popa
rorl
push
mov
nop
scas
pop
cmp
inc
lock
shrb
lods
mov
or
les
enter
addl
push
sub
nop
cmc
push
or
test
add
mov
cwtl
pop
xor
sub
scas
mov
mov
aam
xlat
mov
or
and
dec
ss
fs
jg
lahf
enter
pop
add
bound
push
and
scas
inc
pop
sarb
add
movsl
mul
push
adc
and
adc
neg
or
fsubr
add
scas
jne
push
and
cmpl
mov
mov
test
ret
push
push
pop
test
dec
jno
pop
sub
adc
loope
insb
sub
dec
inc
push
imul
fs
xchg
test
pop
push
push
xor
sbbb
icebp
aam
aas
dec
jle
pop
pop
mov
and
ret
pop
cmpsb
push
mov
out
int3
fcmovbe
test
xchg
dec
clc
inc
popa
add
xor
sub
xor
or
out
int3
cwtl
mov
jg
cmp
add
lahf
add
dec
pop
test
lds
movsl
rclb
shll
adc
push
mov
lcall
or
aad
pop
add
push
jo
les
lock
sub
or
push
imul
push
push
xchg
cs
or
add
rol
cmp
in
sbb
loop
jns
jae
mov
sbb
jo
inc
add
and
fildll
and
dec
lock
pop
push
fidivl
push
jne
dec
and
fmuls
mov
mov
mov
dec
and
sub
rorb
subb
repnz
cmpb
bound
mov
jmp
pop
pushl
insb
js
in
adcb
movsb
out
mov
sub
movsb
les
add
pushf
inc
lcall
imul
andb
ret
inc
cmpsl
add
nop
lods
inc
mov
mov
and
jno
cmpl
dec
dec
in
aam
cltd
nop
lret
mov
or
int
lcall
pop
enter
negl
adc
out
leave
adc
mov
in
test
insb
mov
les
int3
mov
push
dec
lods
adc
bound
leave
test
stos
push
pop
mov
pop
cmp
call
dec
shlb
das
in
xchg
out
fsubr
out
xchg
adc
xor
mov
inc
xor
add
aad
xchg
add
nop
or
or
sbb
loopne
add
dec
mov
mov
hlt
push
mov
pop
push
popf
lock
pop
roll
nop
add
push
lods
movsb
adc
in
scas
sbb
sti
mov
es
cmp
lods
in
dec
xor
cmp
xlat
push
orb
mov
in
xchg
xchg
nop
dec
cwtl
pusha
xor
push
dec
push
fmuls
jae
iret
lock
push
mov
decb
sbb
aam
loope
les
imul
mov
and
and
ret
fsub
int3
test
sbb
enter
pop
pop
and
lock
cmp
dec
into
lock
mov
add
and
jb
add
add
xchg
or
enter
adc
and
icebp
je
mov
inc
test
cmp
inc
mov
int
sysenter
xorl
push
cltd
leave
cs
xor
fsubrs
cmp
in
imul
xor
add
add
in
add
inc
cmp
add
xor
pusha
adc
sub
call
mov
das
aam
xchg
inc
in
adcl
pusha
leave
cmpb
repnz
cmpb
test
fcoml
mov
cmp
xchg
invd
cltd
movsl
fsubrs
das
fildl
inc
sahf
add
or
or
or
xorb
mov
dec
enter
add
enter
test
push
sbb
or
or
push
pop
dec
movsl
sub
or
nop
call
push
xor
or
cld
adc
dec
lock
dec
add
call
push
adc
sarb
clc
cltd
mov
rolb
sbb
jbe
xor
in
sub
fidivs
mov
dec
cmp
std
call
rcll
mov
shrl
nop
arpl
sbb
dec
inc
call
xor
popa
jne
aam
sbb
leave
lds
outsb
pop
inc
pop
add
mov
and
enter
lods
mov
lea
mov
rcl
mov
sub
adc
and
mov
mov
jo
mov
add
subb
cmpsb
addb
add
and
mov
push
cwtl
or
pop
cmc
fwait
sbb
mov
lds
xchg
xchg
dec
sub
and
or
xchg
leave
xor
inc
dec
mov
adcb
mov
sbb
adc
jo
shlb
fldcw
addl
or
call
orl
popa
test
cmpsb
ss
xlat
jns
add
jmp
push
jno
inc
and
rolb
xchg
xchg
or
jle
mov
movsl
push
mov
fwait
and
jg
fcmovne
mov
push
sar
adc
sahf
mov
fs
and
dec
xor
hlt
xchg
dec
xor
pop
push
js
add
leave
and
inc
sub
mov
cwtl
push
daa
imul
xor
nop
inc
rolb
les
push
cmc
les
in
jecxz
loopne
mov
addb
addb
pop
or
dec
addr16
es
fs
dec
je
aam
fs
dec
int3
enter
test
mov
sbb
cmp
mov
mov
lea
jbe
push
mov
shll
jecxz
mov
adc
fidivl
inc
sub
push
cmp
cwtl
push
mov
or
outsl
subb
mov
scas
mov
push
mov
jmp
mov
arpl
add
loopne
mov
push
adc
adcb
jecxz
adc
aam
inc
adc
fwait
mov
dec
shll
mov
fs
push
bound
das
pop
xchg
push
inc
jo
movsb
test
aas
fcompl
dec
pop
mov
push
mov
popf
in
adc
lds
mov
stos
sub
fcom
mov
sbb
adc
pop
enter
mov
xor
jmp
or
adc
rolb
fidivl
rolb
mov
sbb
lock
sub
pop
or
repz
lods
test
jecxz
enter
or
push
mov
add
gs
in
jo
inc
jne
sub
mov
sbb
pusha
cwtl
ret
pop
test
mov
push
or
out
add
sbb
sub
push
orb
adc
pushf
shlb
clc
stc
lock
xor
scas
arpl
enter
sub
mov
add
shlb
adcl
adc
mov
adc
jno
adc
adc
lret
ficompl
das
nop
lock
outsb
dec
add
cld
repz
xor
mov
and
jns
mov
and
decl
and
out
ret
mov
or
je
stos
ret
sti
inc
repnz
add
sbb
lea
sbb
sti
mov
adc
push
daa
cltd
sbb
cli
mov
arpl
cld
cli
scas
fs
nop
dec
es
cmp
dec
jbe
dec
push
cmp
add
adc
js
inc
mov
daa
imul
in
sti
and
adc
shll
xor
and
xchg
adc
xorb
fisubrl
roll
push
repnz
leave
in
cli
call
aam
push
adc
rcll
mov
dec
xor
adc
dec
cmp
js
pop
cwtl
mov
test
mov
jo
rolb
mov
cltd
add
inc
or
push
ss
fcomps
sub
loopne
test
xchg
jne
mov
addb
addl
subl
mov
orb
mov
inc
mov
pop
dec
mov
pop
lock
dec
sahf
push
and
adc
nop
adc
repnz
fldt
dec
sti
cmp
inc
xchg
jbe
and
lahf
add
imul
cmp
adc
add
insl
sbb
rorl
nop
idivb
mov
scas
mov
jge
or
sub
notl
and
add
jbe
and
pop
adc
add
aaa
in
fcmovu
or
int3
mov
sub
inc
cs
stc
mov
xlat
mov
addr16
adc
shrl
pop
popf
xchg
jne
sub
mov
lds
das
push
andl
and
ja
popf
inc
and
push
push
inc
push
push
or
rol
xor
in
lret
xor
gs
inc
mov
xor
mov
push
lcall
aaa
es
mov
fstpt
sub
or
outsl
sahf
jmp
stos
cmp
loopne
pusha
lahf
or
mov
jne
mov
sarl
push
pop
jne
add
adc
cmp
inc
jo
mov
out
roll
call
insl
mov
dec
push
inc
add
jne
out
mov
pop
pop
bound
inc
rclb
adc
aas
push
std
mov
mov
ljmp
add
fistpl
or
jnp
cs
in
mov
add
and
sar
dec
and
jnp
or
adc
out
leave
ljmp
jmp
jle
test
push
sahf
out
sahf
jo
push
call
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
ljmp
inc
fwait
ss
push
ljmp
fs
jmp
push
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
out
subl
adc
mov
rcll
xchg
adc
push
or
cmp
in
cld
outsl
cmp
adc
pop
jl
test
icebp
sub
inc
stc
push
mov
pop
or
aam
xlat
dec
outsb
je
popf
jge
pushl
outsl
arpl
fs
out
sbb
push
dec
imul
xorl
jae
cmp
jb
gs
xor
cs
out
ret
fs
adc
popa
and
popa
je
outsl
outsb
push
inc
mov
inc
loopne
push
sbb
lock
mov
xor
insl
mov
fdivr
pop
sub
aam
leave
shrb
in
mov
inc
js
je
jb
gs
cmp
or
outsl
add
ret
out
jb
add
add
add
je
push
roll
inc
jne
jb
mov
pop
imul
dec
xor
ja
adc
cmp
lahf
fs
dec
and
jns
add
das
loopne
mov
push
dec
push
inc
inc
gs
into
mov
insl
bound
daa
dec
outsl
jbe
dec
arpl
pop
mul
adc
jo
sub
addr16
lock
pusha
out
dec
jne
xchg
mov
inc
jo
imul
shll
jb
into
fstl
fs
insb
adc
out
jae
xchg
popl
or
jg
addr16
push
jne
xor
mov
daa
push
adc
clc
sbb
dec
js
pushf
insl
aas
and
jbe
fmul
cmp
ds
popa
das
jo
or
push
mov
mov
mov
pop
inc
mov
mov
and
sti
xchg
adc
aas
inc
in
and
sub
sub
cs
movsl
mov
cmp
cmp
ds
inc
das
pop
pop
adc
xor
jnp
jge
jg
loopne
fs
cmp
inc
test
ja
lds
dec
and
push
pop
or
jl
jnp
dec
xor
inc
insb
jae
inc
aaa
xor
cs
fs
mov
dec
xchg
jl
inc
inc
mov
fstps
insl
and
jb
mov
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
sbb
push
jo
imul
push
pop
mov
je,pn
in
xchg
adc
and
mov
js
mov
and
fs
inc
add
je
or
subb
inc
popa
and
daa
pop
mov
xor
and
insl
inc
lock
adc
inc
cs
loopne
ror
sub
mov
testb
scas
mov
lcall
jo
out
mov
dec
jne
xchg
and
or
imul
popa
add
or
fs
cmp
xlat
and
xchg
mov
je
mov
add
and
push
jo,pt
or
int3
fidivrl
popf
jb
loopne
outsl
mov
push
aaa
fcmovu
push
daa
sub
dec
addb
das
arpl
cmp
es
push
arpl
jnp
insb
outsb
mov
cmp
push
stos
in
inc
xchg
insb
imul
jae
int3
or
pop
cmp
xor
jo
gs
mov
insb
popa
pop
xor
jns
push
inc
mov
cmp
cmpsb
cs
ja
and
mov
cmpl
fs
xor
inc
xor
or
pop
dec
add
add
mov
popa
push
ja
outsl
outsl
push
enter
jae
fs
jo
cli
jbe
add
movsb
jnp
test
xor
push
mov
pop
push
gs
xchg
out
out
test
outsl
push
fidivs
mov
arpl
lcall
bound
cmp
aaa
insl
in
ljmp
imul
pop
mov
imul
push
pop
in
inc
jno
stos
jle
add
push
push
leave
nop
mov
call
jbe
fucomip
mov
adc
adc
cmp
fadd
inc
and
and
add
movsb
cmp
cmp
pop
mov
addr16
jae
xor
or
mov
out
sub
test
loopne
jb
push
sub
adc
sbb
inc
sub
pop
dec
jmp
dec
or
jo
and
cmp
imul
inc
inc
and
cmp
push
dec
cmp
jg
mov
leave
in
lcall
loopne
add
cmp
sub
rol
das
lahf
jg
lret
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
or
sub
jae
push
and
mov
imul
cmpsb
gs
popa
dec
add
es
enter
popa
js
lock
imul
imul
mov
js
add
xchg
sub
cmp
xchg
adc
fwait
pop
add
adc
add
add
add
add
xlat
adcb
cmp
pop
or
aaa
ds
push
pop
scas
fnstcw
or
pusha
add
js
or
out
int3
mov
xor
sbb
jnp
idiv
addb
add
xchg
test
insl
lcall
push
orb
cmp
push
push
and
sub
jb
int3
pop
mov
fldcw
lods
pop
into
jo
add
test
loop
adc
rclb
fbld
ror
js
jo
dec
rorb
cmp
pop
sbb
cmp
mov
nop
xchg
xchg
xchg
adc
dec
shr
pop
add
dec
sub
xor
test
ds
pop
jo
or
add
ret
pushf
and
cmp
daa
pushf
jo
pop
and
ret
nop
out
xor
fistpl
lret
repnz
lods
mov
jns
jb
push
and
sub
push
leave
and
dec
add
pop
jb
pop
test
or
adc
pop
jb
add
adc
and
push
add
add
add
add
mov
ja
cmp
cmp
adc
or
add
or
out
lcall
add
test
outsl
adc
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
push
test
std
cli
sti
cld
std
inc
add
mov
push
add
dec
mov
xor
sbb
push
pop
xor
pop
outsl
ja
inc
push
call
gs
bound
dec
stos
imul
ss
popa
mov
xchg
mov
jne
daa
pop
lea
std
ja
dec
mov
outsl
js
push
push
inc
push
mov
inc
dec
dec
and
insb
gs
jne
out
mov
dec
mov
daa
add
aas
lret
scas
push
insb
in
dec
imul
sbb
jb
jo
ds
and
dec
dec
insb
cmp
inc
jns
daa
pop
mov
mov
mov
aad
lcall
addr16
cmp
adc
mov
mov
arpl
pop
pusha
push
pusha
inc
jbe
push
lea
or
push
and
or
push
sbb
popl
clc
mov
sti
cmp
push
loopne
push
and
inc
es
dec
adc
mov
lock
ret
test
push
insl
mov
test
aas
cmp
insb
call
loope
xor
subl
gs
push
adcl
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
mov
cmp
and
mov
sarb
jg
xchg
aam
imul
call
sub
jg
jae
xor
xchg
addr16
pop
jg
popa
jl
fistl
or
mov
cmpl
push
or
lods
sbb
pop
das
je
xlat
arpl
outsl
xchg
daa
xchg
mov
fisubl
daa
popw
pop
cmp
out
xor
add
ds
sub
insb
dec
imull
inc
jl
push
jle
sub
dec
fstpt
dec
sub
sub
push
cmp
dec
in
jp
and
cmp
fst
mov
dec
pop
pop
xor
lods
lret
addr16
push
jb
imul
adc
xor
lret
ret
xor
push
xor
in
add
es
cmpsb
inc
out
jo
sub
fucomip
jo
lahf
sub
sbb
inc
add
or
cmp
repz
add
in
ror
fdivrl
iret
les
cld
inc
push
hlt
jge
jns
sti
aam
mov
test
mov
cmp
cmpsl
push
movsb
mov
cmpsl
stc
cmp
nop
test
negb
dec
data16
das
push
je
adc
repz
aam
loopne
insb
int
jns
push
mov
pop
cmp
repz
push
push
dec
dec
iret
repz
repnz
mov
cmp
aas
iret
repz
sbb
add
incl
repz
add
int3
lods
mov
out
cmp
or
dec
test
sahf
out
andb
repz
out
adc
add
std
iret
repz
aam
mov
sahf
out
ds
cld
shrb
jns
cmpsl
pop
aam
push
sub
lcallw
sarl
jns
push
xor
jb
movsb
push
cmp
add
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
iret
jns
fcompl
je
mov
push
jg
lods
pcmpgtw
xor
add
jle
push
ja
adc
dec
jae
pop
xchg
or
insb
inc
mov
lcall
push
sbb
dec
inc
dec
xor
stc
sti
sbb
dec
dec
dec
push
push
mov
and
inc
dec
add
dec
dec
inc
add
pushl
inc
push
das
adc
sub
adc
push
outsb
fdivr
incl
popa
into
mov
mov
adc
in
xchg
mul
outsb
mov
ds
pop
adc
clc
lret
pushl
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
mov
and
in
fstl
mov
and
cmp
inc
xchg
cmp
dec
imul
lret
add
adc
inc
inc
mov
mov
sub
fwait
out
cmpl
jns
ds
xor
incb
decl
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
and
xchg
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
incl
or
loopne
cmp
inc
mov
xchg
push
pop
mov
ds
dec
mov
scas
lods
cwtl
push
xor
in
aas
test
push
pop
pop
repnz
adc
xor
and
es
or
lock
mov
jle
add
jbe
dec
scas
push
dec
push
push
adc
or
outsb
jbe
mov
and
nop
fldl
je
inc
cmp
add
gs
imul
inc
sbb
push
dec
jg
push
sub
mov
dec
xor
dec
pop
cmp
xor
add
xor
adc
dec
pop
xor
cmp
sbb
pop
mov
idiv
adc
adc
cmp
xor
dec
xor
and
sti
mov
pop
jbe
xor
ss
or
cmp
ja
aaa
inc
adc
or
pop
or
sub
sahf
fstp
outsl
xor
sub
or
and
pop
xor
and
adc
inc
fnstcw
inc
and
lods
cmp
sbb
and
mov
ljmp
cmp
jbe
pop
adc
mov
inc
push
pop
and
pop
out
xor
mov
daa
push
inc
inc
das
push
inc
das
push
sbb
and
push
dec
pop
and
daa
push
push
and
pop
in
or
and
dec
sub
push
daa
inc
jge
inc
pusha
fildl
dec
or
push
pop
inc
pop
jnp
ja
mov
pop
aad
dec
or
shlb
cmp
fiaddl
push
test
or
lock
cmp
adc
pop
dec
xor
mov
fsubrp
mov
pop
inc
xor
adc
add
add
sti
or
inc
and
xor
das
sbb
xchg
push
jo
xor
cmp
call
dec
and
sub
lods
sbb
into
or
or
sbb
or
add
push
inc
pop
push
sub
stos
inc
imul
stos
inc
xchg
lret
in
cmp
hlt
out
out
and
gs
push
out
clc
pushl
inc
pop
push
adc
sbb
push
pop
sbb
add
inc
mov
push
add
and
sub
push
cmp
push
push
push
push
aaa
jo
sbb
aas
cld
sub
and
xor
cmp
fildl
push
sub
inc
pop
adc
dec
nop
dec
cwtl
in
jmp
cld
in
cmp
and
push
pusha
xor
in
repz
xorb
push
nop
imul
mov
loopne
push
lock
dec
pop
andb
jg
xchg
cmp
mov
mov
jle
and
cmp
dec
add
pop
scas
dec
sbb
int3
hlt
adc
sbb
jp
cmp
outsl
insl
xor
pop
and
outsb
insb
test
jmp
popa
setp
loop
add
imul
outsb
push
xor
cvttps2pi
aaa
fadds
mov
push
scas
inc
push
outsl
or
addb
rclb
xor
pusha
lcall
adc
ja
iret
jnp
push
pusha
rclb
push
neg
ja
xor
push
add
mov
push
sub
sub
lds
les
xor
cmp
dec
add
or
or
divl
jbe
cmp
ss
push
jnp
xor
sub
pop
mov
in
out
ja
inc
pop
or
adc
inc
dec
cmp
and
sbb
xlat
repz
sbb
sahf
or
push
inc
sahf
mov
cmp
adc
sbb
inc
stos
data16
ret
fcoms
jb
push
arpl
jbe
clc
ds
add
jb
mov
mov
xor
push
inc
cmp
pop
and
xor
insb
pusha
lods
sub
out
sub
add
dec
minps
push
pop
jp
sub
mov
sbb
in
pop
shll
out
dec
xor
push
faddp
cmp
add
and
leave
test
jae
ss
ret
test
sub
xor
loope
sbbl
push
xor
xor
scas
jge
xor
hlt
outsb
scas
sbb
pop
inc
pop
add
inc
test
mov
cs
rclb
out
jl
or
enter
jae
dec
inc
pusha
sub
pop
fwait
sub
and
push
push
jnp
aam
inc
das
push
cmp
cmp
push
daa
inc
xchg
jae
cmp
cs
adc
jecxz
cmp
cmp
popf
mov
push
sub
or
or
popa
xchg
daa
and
in
cmpsl
sbb
and
mov
negl
or
push
mov
scas
cmp
pop
sbb
adc
and
cmp
loope
cmp
or
mov
lcall
adc
inc
xor
and
sub
push
pop
je
das
mov
cmp
or
cmp
xor
imul
jnp
ret
xor
es
push
sbb
jle
mov
sbb
push
xor
pop
sahf
adc
add
inc
cs
in
pop
xor
or
jo
jno
lods
sub
lods
pop
or
pop
popa
mov
or
cmp
divb
or
or
pop
adc
les
push
call
mov
sbb
xor
sbb
adc
sub
sub
jmp
and
inc
jne
push
adc
push
lahf
and
out
andl
adc
imul
testb
inc
ret
push
lret
inc
repnz
ljmp
in
sbb
adc
sub
mov
pop
mov
cs
int
data16
jne
dec
xchg
ret
adc
push
mov
inc
jnp
inc
cmp
pop
adc
bound
rolb
sub
mov
inc
cmp
or
xor
jb
movsl
jae
mov
adc
add
cmp
into
sbb
push
ja
imul
lods
dec
daa
cmp
int
roll
imul
and
adcl
push
sti
inc
das
or
movsb
adc
cmc
inc
pop
cmp
adc
jo
sub
loopne
cmp
or
sarl
xchg
jg
pusha
push
mov
sub
imul
inc
sahf
repz
add
push
xchg
stc
scas
into
jae
insl
popa
imul
xchg
outsl
push
push
pop
outsl
jo
js
mov
outsb
data16
push
ja
or
in
adc
push
in
iret
repz
add
aam
movsb
stc
cmp
mov
ja
mov
pop
les
mov
or
lahf
and
add
dec
pusha
das
in
and
sahf
or
ds
fs
pop
je
sub
push
xor
sbb
push
cmc
pop
sub
mov
push
push
mov
xor
nop
call
push
fidivl
out
cmp
dec
pop
push
and
dec
push
aaa
pop
addr16
hlt
sbb
aas
dec
hlt
inc
sbb
xor
scas
jo
push
fs
das
or
or
clc
pop
xchg
pop
fwait
cmp
cmp
add
push
fmuls
push
push
fcoms
test
pop
pop
add
or
xor
push
dec
add
push
push
sub
fs
outsb
or
scas
shlb
cmp
jp
xor
add
xor
aaa
adc
sub
inc
popf
xor
sub
xor
or
lock
jl
xor
adc
push
cs
adc
js
or
out
xor
or
ret
out
std
mov
sti
cs
outsl
jb
bound
idivb
outsb
outsb
pop
push
push
je
add
jae
popa
movb
aas
in
and
push
inc
cmpsb
mov
das
and
xor
js
sahf
adc
popa
aas
aam
dec
jg
push
pushw
or
fsubrl
inc
loop
aaa
and
push
orb
cs
dec
inc
ret
es
fiadds
pop
mov
mov
sbb
sub
add
lods
sub
test
mov
addr16
sti
push
les
push
dec
sub
xor
je
mov
jae
push
push
or
aad
cltd
jb,pn
or
cmp
imul
scas
xor
movb
adc
xor
sti
jp
fldenv
pop
inc
add
pop
sbb
outsl
xor
or
dec
pop
insb
jp
lahf
dec
cs
and
inc
push
adc
dec
push
push
push
adc
hlt
imul
es
dec
pop
push
sbb
sti
mov
aaa
ds
ss
xor
push
or
mov
aam
pop
loope
lcall
sub
pop
cmp
xor
jle
adc
xor
fdivrs
jbe
jno
mov
sub
pop
cmp
xor
add
xchg
leave
ljmp
popa
dec
sub
cmpsb
cs
adc
loope
dec
inc
push
pop
dec
daa
pop
adc
ror
mov
adc
adc
dec
or
push
not
dec
test
sbb
pop
push
aas
xchg
cmpsb
sbb
pushf
push
xlat
mov
push
dec
ds
xor
dec
pop
add
insb
aam
in
push
loopne
lods
adc
fsts
mull
fs
lea
jg
faddp
add
push
pop
inc
out
out
mov
inc
sub
fsubs
or
sub
adc
fidivrl
adc
inc
lock
add
incl
inc
cld
cmpsb
and
pop
out
push
dec
push
aas
dec
sbb
adc
sub
adc
xchg
ret
dec
or
inc
mov
adc
inc
outsl
mov
test
mov
push
push
adc
push
ds
imul
push
andb
jo
mov
push
pop
daa
nop
push
test
ficomps
aas
push
daa
xor
sbb
jo
xchg
sbb
ljmp
clc
add
xor
clc
xchg
add
sub
lea
push
test
notb
inc
shlb
dec
outsb
mov
rcll
clc
xorb
cmp
push
sbb
fs
cmp
push
dec
daa
pop
mov
pop
mov
push
adc
sub
inc
call
sbb
xchg
in
xchg
sub
out
or
pop
mov
inc
inc
cmp
jbe
sbb
push
mov
push
movsl
xchg
movsl
and
loope
push
loop
adc
cmp
and
xchg
insb
or
pop
cmpsl
or
lret
mov
paddsb
cltd
cmp
in
and
inc
daa
pop
mov
rcll
mov
repz
imul
mov
add
ficompl
sub
mov
xor
inc
mov
lods
inc
and
iret
bound
cmp
es
adc
jp
sub
subb
mov
aad
pushf
sbb
dec
xor
nop
sub
inc
add
andl
scas
fldt
adc
pop
mov
sbb
sahf
sbb
pop
push
int3
inc
xchg
sbb
sub
inc
sub
or
add
cld
pop
outsb
mov
or
nop
add
or
subb
xchg
fs
push
xchg
test
sub
sbb
jg
cli
push
add
inc
sbb
sub
and
sbb
sub
sub
mov
inc
inc
xor
daa
dec
inc
daa
das
sbb
sbb
subb
daa
dec
sub
test
push
loope
xor
mov
and
lods
fistps
push
push
das
inc
das
mov
mov
mov
cmp
push
or
fdivrs
pop
inc
cmp
pop
shll
sub
xor
insl
pop
divb
adc
sbb
adc
push
sbb
add
pop
call
adc
js
or
imul
repz
xchg
cltd
or
es
insl
cmp
sbb
fcmovnbe
shl
sub
divl
sbb
and
sub
das
sbb
inc
xor
inc
mov
mov
pushf
pop
xor
das
add
mov
pop
aaa
adc
popf
sbb
fs
and
jno
insl
mov
xor
xor
pop
xchg
pop
adc
jno
and
push
divb
inc
push
jae
in
cmpsb
in
inc
das
cs
add
xor
call
push
rcrl
and
pop
insl
shll
adcl
cmp
inc
js
and
cmp
sbb
out
or
jg
aam
push
fucomip
aaa
inc
push
pop
pop
cmp
cmpsl
pusha
lods
ljmp
sub
sbb
jo
fs
das
xadd
jge
or
scas
into
xor
ficompl
pop
dec
push
cmpsb
aaa
push
and
lret
mov
push
repnz
cmpsl
xchg
repnz
cs
cmc
fnsave
adc
cld
scas
rolb
adc
dec
pusha
pop
pop
arpl
push
gs
dec
cs
loop
dec
outsb
and
sbb
pop
outsl
pop
dec
pusha
repz
or
sub
pop
cmp
sub
aas
lret
ss
mov
aam
add
mov
sub
out
sbb
cmp
inc
and
jecxz
fdivs
inc
adc
inc
cmp
lods
imul
push
add
xor
fadds
icebp
aaa
cmpb
xchg
add
aaa
inc
mov
lock
mov
xor
je
jo
insb
gs
call
imul
and
or
jo
das
push
in
ret
cmova
shlb
insb
push
xor
andl
sub
add
sub
sub
fstpt
mov
sub
sub
xor
mov
mov
cmp
fidivrs
sarb
es
push
mov
int
sahf
out
lock
loopne
inc
dec
push
push
mov
hlt
aas
or
add
inc
testb
adc
push
dec
dec
pop
int3
test
std
divb
shlb
pushl
aam
adc
and
mov
add
adc
aaa
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
and
subb
add
lahf
jo
fsubs
sbb
cld
lcall
mov
pop
dec
xchg
pop
shl
dec
push
fadd
push
testb
add
jg
pop
leave
cld
or
aaa
aaa
xor
mov
sbb
and
mov
fimull
sub
stos
mov
push
hlt
inc
jb
mov
insl
inc
out
leave
leave
sbb
push
dec
imul
pop
push
sub
in
xchg
sub
and
adc
add
iret
dec
repz
loopne
sarb
pushf
cmp
shlb
mov
inc
js
aaa
lret
cmp
out
pop
add
mov
dec
pop
int3
add
or
sbb
enter
lcall
inc
jns
cmp
xor
xor
sub
mov
inc
sbb
sub
inc
ret
adc
enter
out
push
or
adc
sbb
imul
dec
loop
cmp
js
push
or
adc
sub
dec
xchg
pop
popa
dec
jp
push
push
jb
ret
cmp
mov
mov
bound
je
bound
mov
inc
sub
add
adc
stos
and
sub
lahf
and
mov
adc
cmp
adc
xchg
add
pop
fstpt
push
cmp
pushf
adc
out
cmp
subl
lea
pusha
ret
shll
pop
push
add
or
dec
mov
pop
adc
out
sbb
fwait
rcrb
sbb
and
rorb
or
sbb
jo
ljmp
mov
outsb
adc
cmp
xor
pop
xor
ficoml
das
cwtl
lock
or
outsl
push
orb
add
pusha
into
movsb
inc
mov
sbb
push
mov
in
cli
inc
dec
shrl
pop
and
add
xor
dec
rcll
pop
leave
push
out
add
addr16
inc
add
pop
inc
sahf
fsubl
push
lret
outsb
ss
mov
cli
int3
xor
push
int
mov
sti
outsl
enter
int3
pop
xchg
iret
jb
jbe
jns
push
mov
iret
xchg
out
iret
xchg
mov
leave
mov
les
mov
test
xlat
insb
mov
pushf
mov
shlb
insb
es
add
mov
shll
fucomi
add
bound
mov
sbb
mov
loopne
imul
dec
andnps
imul
fisttpl
daa
aaa
pop
pop
in
scas
cmp
mov
inc
mov
pop
jno
jl
dec
mov
in
jnp
push
test
push
jae
and
mul
cmpsb
sbb
inc
outsb
inc
shlb
fdivp
push
push
add
pop
push
out
push
idiv
out
xor
ja
js
std
sub
push
icebp
jns
dec
movsw
lock
inc
mov
cmp
cmp
mov
fmull
je
push
jns
ret
mulb
mov
push
mov
mov
sbb
inc
out
mov
int
mov
push
imul
mov
mov
sub
out
xchg
cmpsl
inc
push
enter
push
cmp
sti
cs
xchg
insb
xor
xchg
mov
xlat
mov
adc
dec
fsubrs
mov
jns
out
cs
xor
push
cmpsb
jnp
fstpt
mov
push
add
xchg
cld
lret
xchg
es
and
int3
stos
mov
repz
fs
pushf
dec
jbe
xchg
cmp
pop
jle
pop
push
outsl
into
out
sahf
mov
aaa
cmpsl
stc
push
jo
mov
sahf
sahf
out
sahf
into
jle
adc
iret
sarl
mov
repz
movb
test
imul
xchg
mov
mov
in
sbb
cmp
mov
lret
jle
push
or
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
fmuls
icebp
rclb
test
mov
mulb
pop
popa
push
or
scas
int
mov
leave
loop
and
mov
pop
mov
lds
sbb
mov
imul
hlt
pop
sbb
enter
adc
repnz
xchg
inc
repnz
iret
pusha
or
stc
bound
adc
add
push
pop
mov
or
outsl
pop
inc
mulb
shrb
push
jae
popa
adc
insl
mov
ljmp
inc
sbb
idivb
or
aaa
push
adc
push
mov
aas
jae
rcr
and
xlat
push
imull
sub
and
divb
dec
cmp
bound
je
mov
cmp
push
ljmp
cmp
push
inc
cmpsb
ljmp
push
dec
pop
je
loope
and
jns
push
fisttps
mov
fs
push
repnz
gs
pop
fiadds
outsb
iret
inc
lds
push
pop
retw
jmp
ret
inc
dec
or
dec
mov
mov
dec
in
push
shrb
in
adc
int3
mov
add
mov
or
and
jne
adc
popa
insl
jo
lahf
mov
insb
je
push
addr16
jo
in
jnp
mov
jne
and
aas
cmpb
sub
sub
push
cmpsb
mov
aam
push
or
outsl
mov
mov
aaa
cmp
cmp
push
xor
xor
and
mov
ds
add
pop
sbb
mov
gs
or
pop
aaa
pop
or
mov
dec
sbb
add
sldt
or
lret
or
pop
jo
push
adc
cld
cmp
push
sub
sbb
push
lds
pop
xor
inc
jp
cmp
xchg
jp
pop
inc
cmp
sub
adc
ljmp
mov
aas
cmp
xor
or
pop
jbe
or
pop
fsubs
lock
mov
cmp
mov
and
cmp
pop
js
cmpsl
xchg
or
pop
adc
cmp
xor
vmread
or
lods
jne
mov
int3
xorl
daa
cmp
pop
or
pop
pop
call
pop
aas
cmp
sarb
pop
push
adc
test
and
or
or
dec
and
jecxz
out
xchg
cmp
push
mov
or
adc
inc
pushf
imulb
mov
inc
and
pop
fsubs
xor
pusha
in
pusha
das
mov
pop
pop
adc
add
daa
popa
pop
or
aaa
mov
pop
sarl
xchg
les
mov
daa
push
push
jo
outsl
lods
test
adc
insb
mov
scas
inc
push
and
insl
mov
mov
stos
adc
pop
movq
jge
dec
push
or
insl
add
mov
clc
lods
inc
pop
iret
and
faddl
xchg
mov
pop
nop
fisubrl
sub
xor
daa
fadds
jbe
daa
imul
popa
daa
pop
xchg
dec
push
sbb
sbb
cmp
repnz
add
pop
adc
ja
roll
daa
pop
fimull
ficoms
cmp
mov
mov
pop
cltd
daa
outsb
adc
adc
imul
popl
cmp
adc
pop
jnp
pop
loopnew
lods
inc
addr16
jg
jge
cld
xor
test
inc
in
in
adc
pop
inc
mov
mov
push
imul
add
outsl
inc
js
inc
push
xchg
xchg
js
dec
or
dec
outsb
or
push
xorb
js
jl
subb
cmpsb
jl
shrb
imul
adcl
sub
sbb
outsb
sbb
and
or
mov
cmpsl
xchg
cs
insl
ja
mov
pop
popa
inc
jecxz
adc
les
add
loop
add
mov
in
sub
dec
mov
or
sbb
es
adc
daa
bound
das
jle
test
add
inc
pop
adc
or
xchg
pop
mov
sahf
or
lods
orl
out
xor
or
pop
es
inc
adc
jo
jp
xor
xchg
js
pop
mov
mov
sub
dec
pop
jo
push
dec
sub
pop
and
sub
popa
xor
roll
or
je
xchg
push
shrl
add
adc
inc
daa
dec
push
jecxz
push
clc
adc
test
push
mov
cmp
pop
sbb
or
pusha
or
or
in
inc
daa
inc
repnz
mov
and
push
sbb
xchg
loope
push
sub
sub
sub
loopne
sbb
xor
loopne
into
test
into
adc
ret
pop
dec
rorl
add
aas
aam
adc
fisubl
cmp
mov
xor
adc
shr
jmp
xor
inc
pop
inc
lea
jbe
jo
or
mov
pop
sbb
sub
inc
push
cmp
call
xor
test
mov
in
pop
test
or
cmp
pop
inc
cltd
adc
and
jnp
mov
sbb
outsl
or
dec
or
pop
pusha
add
mov
fmuls
cmp
or
xor
cmc
and
adc
mov
js
adc
sbbl
movl
xor
add
add
inc
or
or
sbb
daa
xchg
mov
xor
es
push
or
stos
das
push
aas
icebp
les
rorl
adc
sub
inc
pop
js
add
addr16
pop
dec
sbb
std
adc
and
dec
cmp
inc
out
fldt
adc
out
cmp
adc
pop
cwtl
mov
dec
fildll
inc
out
leave
mov
push
add
push
loop
jnp
in
adc
sub
mov
push
mov
in
push
out
adc
xlat
icebp
adc
sbb
repz
andl
add
dec
cltd
or
fwait
int
roll
or
insb
ss
or
adc
neg
data16
adc
sbb
and
sub
xor
fidivrs
fwait
inc
mov
mov
mov
fldcw
mov
popa
xchg
sbb
int
mov
sub
add
or
repz
add
int
adc
push
push
dec
str
data16
lea
and
pop
jb
lcall
xchg
jmp
arpl
ss
pop
cs
and
inc
dec
test
fisubrl
not
inc
popa
push
xor
lods
arpl
sbb
xchg
rcrb
sub
jo
inc
or
addl
insb
push
adc
imul
bound
fiadds
jl
out
repz
sub
add
or
add
adc
adc
push
jne
rcr
add
and
pop
inc
out
clc
mov
inc
and
push
and
pop
xor
add
cmp
and
jmp
push
push
add
pop
daa
inc
push
or
getsec
push
cld
ljmp
cmp
mov
ds
push
pop
cmp
sub
xor
push
and
sub
push
xor
les
add
adc
incl
sub
and
cmp
pop
sbb
es
jg
dec
pop
cvttps2pi
pop
sbb
add
and
add
sub
xor
push
push
dec
sub
pop
add
push
add
xor
adc
xor
cmp
add
incl
xor
and
sbb
push
adc
pop
cs
jno
and
leave
add
bound
jo
push
enter
mov
cmp
pop
mov
fsubrs
add
ds
adc
ds
inc
push
xor
dec
es
xor
and
adc
mov
cmc
dec
lods
rcrb
inc
sbb
test
cmp
out
cmp
xor
lea
adc
jmp
stos
sub
mov
and
push
push
dec
sbb
add
inc
outsl
mov
das
adcl
inc
push
repnz
sub
lret
add
or
mov
inc
pop
dec
or
insb
push
push
dec
loope
dec
inc
dec
xor
push
inc
sbb
cld
push
dec
inc
dec
push
dec
outsl
add
mov
cwtl
mov
sub
xchg
lock
call
inc
and
ds
or
iret
or
push
sbb
inc
repnz
inc
addr16
ja
pop
mov
aaa
pop
and
daa
pop
daa
dec
pop
dec
push
sbb
sbb
jl
shl
aas
cmp
and
jmp
add
cwtl
das
mov
inc
aaa
jno
sti
shlb
cmc
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
call
scas
adc
jge
push
je
mov
andb
fwait
shrl
inc
imul
addps
sub
ljmp
test
test
stc
jbe
ds
insl
xor
jg
lcall
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
cmp
jae
gs
leave
ret
sub
xchg
mov
data16
mov
ljmp
call
cltd
test
push
push
shll
ja
daa
mov
pushl
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
inc
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
out
jbe
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
push
pop
dec
pop
cmp
jl
mov
inc
jo
sub
jae
ds
or
fs
or
pop
and
and
inc
ja
ljmp
daa
cmp
cmp
arpl
push
xor
and
addr16
aas
push
inc
outsl
jb
push
ljmp
cmp
push
inc
bound
popa
inc
pop
sub
dec
dec
xor
pop
dec
js
xchg
cld
sub
outsb
pop
xor
jo
out
test
aam
and
aaa
pushf
in
bnd
xor
inc
add
xor
xor
cmp
inc
xor
ja
inc
xor
and
aaa
inc
push
inc
mov
push
inc
ss
cmovb
mov
ss
lahf
ss
rorb
sub
es
call
testl
or
repz
adc
test
icebp
call
cmp
cmp
or
insb
push
mov
aad
neg
lcall
adc
xor
jle
orb
fucomip
or
push
jl
mov
adc
pop
leave
jle
adc
push
aaa
cmp
fsubrs
ret
jl
dec
sahf
pop
push
mov
cmp
xor
cwtl
cmp
js
or
mov
inc
adcl
adc
push
or
lods
sbb
pop
jb
pop
and
or
push
and
int
jnp
mov
sub
xor
lods
pusha
adc
sbb
into
push
inc
jnp
cmp
je
loope
mov
add
loop
sub
push
cmp
movsb
inc
mov
inc
mov
cmp
pop
mov
pop
sbb
or
sbb
xor
push
scas
out
sub
pop
push
lret
iret
push
push
mov
xor
jge
xor
add
xchg
mov
sbb
xchg
insl
add
jle
push
popf
add
or
hlt
sub
adc
lods
pop
xchg
aam
mov
sub
es
outsb
pop
pop
or
pop
mov
fs
pop
adc
mov
icebp
icebp
mov
fsubs
pop
inc
and
mov
or
setle
mov
add
or
test
inc
xchg
push
sub
lds
or
adc
mov
mov
addb
or
fstps
je
xor
mov
js
xor
jae
popa
insl
gs
cmp
xor
je
xor
add
lods
adc
and
sub
into
inc
aad
cmp
xor
insl
loop
and
cmp
push
dec
and
mov
stos
inc
outsl
insb
push
popa
je
jae
jecxz
adcb
hlt
dec
xor
sbb
adc
js
add
inc
or
pop
push
sbb
mov
mov
je
jmp
cmp
cmp
or
mov
aaa
imul
ljmp
jl
adc
add
sti
add
addb
popa
mov
push
jae
or
xor
int3
movsl
cmpsb
fmull
inc
jnp
popa
data16
inc
das
and
push
sbb
mov
popf
fmulp
cmp
orl
out
stos
lds
cmp
and
and
sub
xchg
and
and
aaa
xor
dec
sbb
fsubs
pop
dec
popa
dec
or
add
ja
jb
pop
adc
cld
pop
xor
pop
inc
jne
movsl
lds
sbb
cmpsb
outsl
cmp
lds
aaa
loop
das
cwtl
push
dec
add
push
test
test
xor
lods
test
mov
ja
mov
pop
adc
and
sbb
sub
push
out
pop
roll
sub
pop
aaa
sbb
les
aam
sub
jo
scas
pop
xchg
dec
xchg
sbb
lds
sub
push
inc
push
aas
jbe
pop
mov
pop
add
push
or
das
aaa
pop
and
add
hlt
adc
incb
scas
jne
adc
cmp
ds
insl
xchg
sbb
add
pop
insb
add
hlt
push
mov
ja
or
sahf
outsb
add
and
outsl
int3
cmp
and
je
or
cmp
out
mov
je
or
sub
push
sbb
sbb
call
andnps
mov
ja
xor
inc
bound
scas
pop
mov
dec
movsl
lahf
sbb
sahf
cltd
lds
lahf
orb
cmp
jnp
push
fmull
loopne
or
add
xor
ljmp
cli
xor
or
jb
xlat
es
and
xchg
push
movsb
adc
mov
out
pop
pop
pop
or
push
inc
adc
cmpsb
dec
fdivs
dec
pop
dec
pop
in
insl
xchg
enter
pop
repz
lods
aas
cs
sbb
mov
add
sub
add
cmpl
movsl
mov
ljmp
dec
js
orl
mov
cmpl
pushf
aas
add
sub
dec
loop
inc
dec
rorb
inc
mov
and
add
cmp
lret
cwtl
xor
add
fstl
push
jne
or
pop
gs
add
mov
push
mov
js
xor
jae
push
popa
pop
outsl
lods
push
pop
pop
dec
outsl
and
mov
mov
movzbl
fimuls
punpckhwd
dec
outsb
push
je
and
fadds
adc
insb
add
inc
dec
push
inc
sahf
adc
dec
inc
dec
inc
push
pop
fmuls
jb
gs
movsb
dec
inc
fldenv
inc
das
add
pop
daa
jne
addl
mov
shll
mov
popa
pop
mov
lcall
add
add
jle
add
adc
orb
push
clc
jge
xchg
or
orb
cs
jb
out
or
xchg
adc
add
mov
add
cwtl
push
or
pusha
orb
test
cmp
loopne
in
fucomi
sbb
push
cmp
inc
mov
mov
cmp
push
mov
mov
sbb
inc
and
sub
push
jmp
fstl
and
dec
adc
jo
xchg
cmpsl
pushf
adc
pushf
in
stos
sbb
cmp
and
cmc
pop
push
mov
js
push
inc
shl
adc
add
mov
jb
pop
sbb
insl
mov
arpl
mov
dec
sbb
adc
mov
test
push
mov
cmp
ret
mov
lods
cltd
pop
mov
incl
fadds
inc
mov
fistps
adc
push
sbb
dec
jmp
ret
or
sti
rolb
mov
jns
mulb
rcl
js
aaa
repz
rolb
inc
daa
xchg
fadds
insb
dec
add
popa
adc
inc
xadd
sbb
inc
enter
mov
inc
mov
cmp
out
jnp
cmpb
aas
mov
jo
pop
adc
mov
pop
inc
dec
add
dec
in
shll
and
adc
push
inc
pop
cmp
push
cmp
ret
ret
incl
mov
dec
movsb
cmp
leave
jnp
sbb
push
pop
xchg
je
outsb
and
ror
push
aas
lahf
xorl
daa
in
nop
out
sbb
loopne
das
cmpl
ss
pop
sub
xor
in
fsubrs
jo
jg
dec
outsl
mov
sub
inc
sub
xchg
sub
mov
and
aaa
orl
pop
daa
dec
pop
pusha
mov
push
sbb
loopne
adc
hlt
pop
push
fdivrs
out
xchg
xor
loopne
jns
data16
call
repz
repz
sub
out
jns
in
mov
pop
pop
pop
ds
repz
repz
pop
pop
push
dec
out
ds
xor
pop
sbb
int
ds
pop
enter
push
jns
cld
push
add
pop
adc
push
pop
xor
or
out
dec
dec
inc
es
pop
push
xor
out
add
fsubrs
add
cld
add
outsl
fdivrs
add
out
faddl
pusha
mov
mov
sbb
inc
mov
add
ja
pop
lods
pop
jb
mov
xchg
and
xchg
dec
das
jbe
and
imul
sub
lock
push
dec
xchg
outsl
add
scas
fs
inc
or
inc
cmp
jb
fsubr
hlt
dec
scas
notb
jb
xchg
cmp
cmp
pop
ss
add
and
lods
es
pop
pop
and
mov
add
mov
out
xchg
sub
orb
nop
xor
pop
lods
xor
fwait
nop
pop
sub
cmp
test
dec
pop
push
xor
sub
out
xchg
or
dec
pushl
test
leave
enter
enter
pop
enter
xlat
fildll
xor
push
cmpsl
pop
mov
out
xchg
or
fnstenv
pop
or
jns
and
loopne
sub
pushf
pop
ds
mov
xchg
les
add
lods
fs
or
cmp
lock
jg
push
adc
sbb
out
pop
sub
adc
jg
xchg
push
xor
sub
filds
movsb
fidivs
and
add
nop
fistl
and
adcb
cs
sub
and
fiadds
pop
push
js
inc
pop
mov
popa
sub
scas
add
mov
inc
insb
outsl
out
mov
xchg
mov
nop
loopne
sbb
xlat
or
cmpsl
xor
push
aaa
addr16
or
mov
daa
pop
sub
sub
mov
cmp
inc
daa
addr16
mov
movl
pop
lahf
addr16
lcall
pop
push
inc
jl
dec
jnp
or
and
or
mov
jbe
fcoml
in
in
pusha
pop
sbb
push
repnz
push
add
inc
jbe
nop
adc
pop
popa
insb
popa
daa
nop
ja
divl
sub
and
mov
pop
fcmovu
add
xchg
daa
idivl
iret
sub
or
or
cmp
data16
icebp
imul
push
in
or
push
cmpsb
mov
dec
mov
cmp
hlt
or
pop
mov
or
bound
bound
clc
popa
mov
push
mov
add
xlat
or
push
jb
add
fs
add
andb
pop
test
mov
arpl
testl
and
add
pop
leave
repz
add
fs
jo
jnp
dec
push
rolb
pop
fs
cwtl
push
xor
aaa
or
mov
add
xor
pop
leave
adc
call
and
or
gs
push
repnz
outsl
xchg
dec
cltd
pusha
mov
jg
jne
scas
in
mov
stos
ja
add
jb
insl
fdivrs
addr16
mov
and
cld
or
adc
aaa
pusha
and
cs
dec
and
jmp
sti
pop
inc
push
test
dec
addr16
outsl
push
repnz
in
mov
sbb
popw
jl
pop
daa
loopne
adc
cltd
inc
push
es
add
and
add
xchg
cltd
nop
out
pop
cmpsb
dec
add
or
je
xlat
add
mov
dec
sahf
iret
mov
daa
dec
out
add
mov
or
outsl
adc
push
mov
inc
push
cmp
imul
out
and
ss
outsl
and
sbb
ljmp
and
push
push
jb
xchg
xor
or
cmp
das
int3
push
movsb
xchg
or
outsl
add
test
pop
or
lcall
negl
add
and
call
xchg
add
imul
scas
add
adc
xchg
pop
add
add
subl
sbb
pop
addr16
pop
or
test
pop
scas
in
outsb
daa
or
xor
jl
imul
mov
pop
push
sub
push
xor
dec
inc
outsl
add
jl
lods
lods
in
xlat
mov
rcll
mov
scas
mov
mov
push
cmp
sbb
sub
imul
rcl
lock
popf
fmuls
sub
outsl
movsb
xor
xchg
push
scas
fs
push
xlat
data16
push
filds
pop
das
repnz
in
mov
rol
pop
add
ss
imul
pop
sbb
insb
mov
das
and
sub
mov
dec
out
lcall
insb
push
jg
iret
repz
ljmp
sahf
cmpsl
stc
cmp
or
das
push
js
sahf
out
xchg
scas
leave
negb
outsl
jns
out
cmp
outsl
nop
mov
repz
repz
jo
xchg
shl
jl
out
jno
adc
out
ds
xchg
pop
jae
push
int
jns
jae
ret
jmp
iret
repz
mov
jbe
iret
repz
leave
in
pop
ja
jl
out
xchg
mov
clc
sub
ds
rorl
sbbb
jp
push
insb
pushf
sarb
sarl
dec
insb
xchg
jns
cmpsl
stc
or
mov
or
cmpsb
shr
sarl
pop
jle
std
push
jg
out
ds
lods
fistps
addb
sarl
cld
das
adcl
lcall
mov
lcall
stc
sub
push
jo
rcrb
sarl
inc
fwait
enter
repz
iret
cmpsb
add
out
lcall
mov
repz
out
mov
pop
lea
jns
dec
xchg
adc
out
ds
mov
out
nop
lahf
or
cmpsb
int
stc
cmp
mov
mov
popa
xchg
fwait
lock
sahf
out
xor
lock
repz
sub
ds
sarl
jae
loope
fwait
lcall
jecxz
popf
jb
fucom
jns
enter
push
cmpsb
cmpsl
stc
xor
sarb
nop
mov
mov
movb
mov
mov
movsb
ja
xor
imul
imul
repz
imull
sub
stc
cmp
xor
iret
sarl
push
mov
lea
pop
lods
dec
fidivrs
mov
scas
jo
ja
out
repz
push
cmpsl
stc
xor
call
mov
repz
dec
mov
jl
data16
sarl
and
shlb
inc
roll
dec
dec
mov
ss
jno
repz
mov
les
out
sahf
inc
mov
in
inc
movb
sbb
mov
loopne
ds
ds
int3
jo
int
push
ret
mov
iret
data16
sahf
adc
in
mov
xor
insb
mov
jmp
loopne
icebp
adc
push
ffree
or
out
or
iret
in
movsb
sbb
cmp
cmp
mov
ja
jns
jae
addr16
in
add
loop
fadds
cmp
pop
paddq
adc
in
aas
mov
repnz
int3
push
ss
xchg
add
ds
fistl
mov
addr16
dec
and
sbb
and
cld
jae
pop
das
or
mov
lcall
sti
and
push
shlb
rolb
test
into
rcrl
mov
ss
pop
ja
adc
push
out
mov
xor
je
cmp
cmpb
mov
mov
fmuls
jl
inc
in
es
push
xchg
cmpsb
fdiv
push
sbb
rorl
jl
movsb
pop
addr16
out
cmp
sarb
iret
or
adc
int
das
cltd
fdivs
fbstp
fistpll
mov
out
cltd
or
out
aas
mov
lea
ljmp
and
gs
push
xor
mov
repz
push
inc
push
push
insl
pop
jne
cmc
cld
jbe
or
inc
daa
sbb
in
xor
mov
sub
jae
hlt
cmpsb
hlt
dec
adc
inc
add
div
in
and
in
inc
dec
lahf
int3
ja
ja
sbb
adc
arpl
pop
jmp
inc
mov
cli
push
inc
mov
push
adc
outsl
mov
ss
push
dec
mov
inc
aas
xor
inc
inc
inc
je
pop
add
sbb
xchg
inc
in
iret
in
push
sbb
push
and
rorb
cmp
outsl
pop
pop
pop
nop
sub
cmp
inc
inc
jo
push
jg
mov
push
das
outsl
les
xchg
cmp
dec
mov
movsb
jns
inc
dec
leave
les
fisttpll
cmp
inc
cmpsl
or
cld
jns
shrl
pop
cmpsb
and
pop
aas
push
out
and
inc
popa
xor
xchg
test
adc
pop
push
jg
mov
dec
push
repnz
mov
jp
push
or
mov
leave
xor
sbb
es
jb
cld
add
pop
leave
jae
dec
daa
push
add
dec
int3
insl
cmp
leave
and
and
jl
sbb
popf
out
push
daa
inc
scas
movsb
or
leave
xchg
mov
xchg
jl
mov
adc
mov
jbe
out
outsb
inc
inc
pop
jo
int3
gs
outsl
add
jge
xchg
dec
mov
pop
jge
dec
add
sbb
lods
or
in
mov
dec
dec
lds
div
jge
xor
xor
push
daa
and
scas
aad
test
mov
or
shrb
mov
sbbl
jg
jg
and
cmp
outsl
inc
imulb
jo
iret
repz
add
add
sub
inc
or
out
orb
arpl
orb
es
jns
xchg
sbb
or
out
add
insb
lods
movb
and
xchg
mov
movsb
sbb
mov
mov
jno
int3
mov
or
jno
jno
add
fs
add
inc
dec
repz
in
pop
cmpsb
add
pop
and
leave
jo
dec
xchg
pushf
pushf
pushf
pushf
sahf
cmpsb
scas
mov
and
pushf
mov
pushf
pushf
jmp
pop
leave
and
or
sub
xchg
dec
ja
sysenter
pop
pop
mov
cmovl
pop
and
xchg
inc
incb
jb
out
pop
mov
scas
add
jb
jb
jb
out
add
int3
lcall
sbbl
pop
fists
leave
lret
inc
inc
andl
orl
sub
inc
iret
inc
dec
sahf
leave
adc
outsb
jae
cld
mov
add
xchg
pushf
mov
jb
nop
adc
jg
test
leave
dec
fidivrs
mov
push
call
or
lea
rcr
and
push
daa
cmp
je
enter
push
je
je
and
dec
dec
addr16
je
test
daa
mov
pushf
xchg
movsb
lods
mov
and
outsb
xchg
rolb
mov
add
daa
dec
push
sbb
out
cld
test
leave
pop
xchg
jne
cmp
mov
dec
jne
jne
jne
mov
jp
test
push
iret
repz
or
cmp
repz
mov
cmp
repz
fstl
call
adc
adc
adc
out
lcall
jns
out
xor
repnz
shl
sbb
mov
fildl
push
xlat
xchg
and
dec
mov
in
pop
and
faddl
ja
mov
mov
cmp
popf
xor
push
add
jb
dec
jle
jbe
mov
or
call
scas
lods
daa
int3
leave
xchg
sbb
incl
mov
add
jb
mov
popf
dec
pop
jb
pop
mov
js
mov
xor
nop
mov
hlt
ss
pop
js
js
das
jo
sbb
inc
into
addr16
xorb
jb
mov
mov
or
inc
pop
jp
sbb
ds
inc
or
inc
xchg
lahf
out
cmp
pop
add
jl
mov
push
push
mov
and
pushf
or
jns
pop
ljmp
pcmpeqw
pop
aas
rclb
cmp
adc
add
into
pop
push
das
push
daa
inc
and
leave
add
mov
mov
ficoml
xor
leave
inc
xor
push
add
sub
and
into
hlt
and
inc
jnp
pop
mov
mov
fs
add
inc
push
leave
add
xlat
dec
jb
cmp
lea
je
dec
push
psubb
xchg
addr16
ja
xchg
and
in
aas
sub
pop
js
leave
dec
pop
add
addr16
inc
repnz
in
repnz
jns
nop
cmp
mov
jl
jl
jnp
jns
jl
jl
jge
add
mov
repnz
pop
punpckldq
push
inc
lea
push
pop
enter
lret
jge
ja
cmp
or
leave
subl
pop
nop
mov
dec
lock
loopne
add
push
jle
cmp
pushf
cmp
jle
addr16
sahf
pop
gs
jle
jne
repnz
test
jle
jle
repnz
jle
jle
jle
jle
repnz
jle
jle
repnz
jle
jle
pop
dec
dec
dec
mov
or
dec
dec
dec
or
or
dec
dec
dec
dec
pop
push
add
dec
add
add
jns
cmp
add
repnz
push
aaa
jg
leave
dec
dec
je
jg
dec
jg
xchg
xchg
jl
adc
add
xchg
jo
pop
xor
popf
pop
inc
iret
xlat
ja
ja
xchg
mov
adc
out
mov
ds
fidivs
add
fcmovne
xchg
and
jns
cmpl
mov
xchg
push
push
cltd
mov
or
test
sahf
jns
sub
cs
xchg
mov
xor
mov
cmp
or
xlat
jg
push
dec
cmp
aas
xchg
push
scas
popf
pushf
cmp
xchg
lahf
dec
or
repnz
mov
fnstsw
das
scas
push
cmovle
add
mov
xchg
aas
fmuls
pop
mov
pop
pop
mov
fmul
jnp
xchg
inc
pop
or
fnstsw
das
adc
xor
sbb
repnz
add
or
add
and
sub
cmpsl
adc
and
incl
xchg
pop
daa
and
and
cmpb
jns
daa
xchg
add
in
fabs
jmp
shl
add
add
in
push
pop
adc
jns
adc
add
add
addl
xchg
sbbl
mov
sub
pop
sahf
fcoms
leave
leave
call
jns
aaa
jb
test
push
push
sub
out
sahf
out
or
dec
sahf
out
sahf
or
popa
or
ss
adc
test
cmp
data16
add
in
jns
lock
inc
dec
xor
inc
test
outsb
mov
and
imul
leave
repz
addl
mov
pop
mov
inc
mov
and
or
xchg
in
test
xchg
add
mov
xchg
xchg
add
dec
inc
cmp
test
cltd
dec
cltd
iret
in
dec
push
or
scas
add
nop
je
add
fcompl
or
xlat
ljmp
inc
mov
ja
sbb
add
lcall
dec
cmp
lock
xchg
and
pop
add
pushl
mov
mov
leave
jae
jo
lcall
adc
fwait
lock
pop
jo
jns
fwait
pusha
xchg
xchg
xchg
jle
lea
dec
fwait
push
fcomip
in
rcll
out
clc
add
or
sbb
and
rorb
shlb
or
pop
leave
jae
out
fwait
add
in
andb
mov
pop
and
add
and
mov
mov
rclb
ret
jo
setle
popf
fbld
repnz
cmpps
repnz
out
mov
mov
dec
ss
lock
inc
mov
mov
push
mov
enter
mov
mov
sbb
jb
mov
out
cmp
or
dec
scas
rcr
out
xchg
and
std
or
in
push
mov
mov
nop
insb
pop
decl
dec
sahf
pop
mov
mov
mov
pop
mov
mov
xchg
mov
pmaxub
and
ja
dec
add
test
xor
fiaddl
inc
mov
pop
enter
mov
repz
cs
add
daa
rorl
xchg
pop
adc
mov
mov
lea
nop
addr16
xor
inc
insl
lea
loope
lea
stc
addl
mov
in
mov
jne
pop
cmpsb
lahf
lea
mov
push
lahf
mov
dec
mov
str
pop
mov
outsb
das
jbe
or
ud2
xchg
dec
cmp
mov
dec
lock
shl
mov
xchg
sub
ja
add
inc
or
out
jns
add
add
arpl
outsb
fdivrs
cmp
cmpsl
leave
out
cmp
mov
adc
fisubl
pop
addr16
push
sub
out
or
mov
nop
daa
dec
nop
mov
nop
mov
mov
and
mov
leave
add
jecxz
add
pop
jo
jmp
pop
repz
mov
sbb
ds
nop
add
repnz
cs
push
add
cmp
add
fimuls
cmp
xchg
pop
xchg
data16
outsb
xchg
jbe
or
xchg
push
or
ud2
pop
or
or
in
in
push
add
in
add
sahf
sbb
out
cmpsb
sbb
sahf
out
mov
bnd
into
mov
fdivp
cmp
jae
and
and
shll
es
xchg
sub
adc
xchg
cmp
jmp
gs
jl
push
add
mov
outsb
lar
sahf
xchg
cmp
aas
ror
dec
outsb
daa
iret
add
jmp
inc
repnz
test
cmp
xchg
and
fsubrl
scas
xchg
pop
iret
lods
inc
cmovs
cs
xchg
cmp
repz
or
cmp
jbe
jo
pop
jo
mov
nop
cwtl
xchg
orb
rolb
pop
out
scas
cmpsl
add
leave
inc
repnz
cmpsl
xchg
xchg
sahf
out
ficoms
push
add
add
add
sahf
out
xor
aas
push
dec
xchg
outsb
mov
add
or
adcb
mov
jmp
xchg
push
daa
jl
add
xlat
das
leave
out
iret
jbe
jb
shrl
jne
xchg
mov
inc
mov
add
scas
mov
mov
adc
iret
xchg
out
outsb
jb
push
das
sub
jmp
add
inc
push
or
cmp
dec
dec
xchg
push
xchg
dec
test
add
xlat
mov
push
jb
sub
test
mov
mov
shrb
fnstsw
call
cmp
ss
adc
xchg
mov
ja
ja
pop
pushw
add
out
pop
xorb
mov
rcr
fistl
push
daa
mov
dec
dec
xlat
call
xchg
jnp
dec
out
pop
xchg
pop
push
aas
push
dec
jb
sbbl
xor
mov
cmp
mov
mov
leave
jae
xchg
xchg
mov
es
daa
rcr
lsl
xchg
loopne
xchg
and
cwtl
inc
movlps
dec
and
loopne
cwtl
das
je
dec
cwtl
jns
and
cwtl
pop
punpcklwd
in
sahf
out
add
add
in
mov
in
or
iret
leave
repz
push
rol
ror
cmp
adc
flds
adc
ss
push
cld
cwtl
adc
jns
out
add
stos
inc
outsl
in
push
mov
shrb
push
daa
rcr
jae
xor
jge
add
lahf
mov
pop
outsl
int
fcomps
add
push
ltr
cltd
seta
add
fisttps
lcall
and
or
push
scas
arpl
jb
cmp
mov
daa
sahf
pop
cmpsb
add
push
ja
lcall
fsts
insb
lea
fwait
or
adc
xor
loop
add
sbb
add
fldcw
add
push
pusha
packssdw
pcmpeqd
pushf
out
pop
orl
repnz
pop
in
imul
nop
xchg
int
mov
call
or
mov
pop
loopne
iret
iret
xlat
push
add
cwtl
je
fisttps
add
fwait
mov
and
fwait
negl
js
mov
setl
xor
xorb
mov
pushf
arpl
imul
fwait
cmp
repz
add
xchg
cmpsl
pop
mov
out
fisubs
mov
sahf
ja
jns
ret
mov
insb
cs
jp
pushf
adc
mov
mov
popf
pop
call
add
add
add
es
cmpsb
aaa
popf
aas
popf
in
loopne
sbb
popf
push
xchg
int
dec
add
mov
add
pusha
rorb
daa
mov
jns
push
ds
inc
out
mov
imulb
push
mov
out
rclb
testb
and
mov
add
pop
mov
sahf
jbe
sahf
lret
vmread
outsl
xchg
sahf
pusha
xchg
cmp
sahf
or
negl
cld
jl
loope
xchg
inc
mov
or
and
js
lock
xbegin
enter
lahf
sbb
iret
repz
push
cmp
inc
repz
repz
pop
or
repz
or
jl
dec
iret
repz
push
xchg
popf
pushf
in
xchg
lahf
test
mov
dec
mov
sub
add
and
xchg
mov
mov
push
xchg
push
mov
das
pop
mov
sub
enter
mov
repnz
push
mov
xor
adc
pusha
mov
or
dec
test
cmp
mov
cmp
cmp
repnz
pop
push
in
xchg
das
pop
add
and
mov
add
stc
fisttps
mov
cmp
cmp
mov
inc
push
pop
int3
in
xchg
xchg
mov
mov
fcmovne
or
push
sbb
xchg
fsubrl
cwtl
mulb
call
mov
adcl
mov
lahf
jne
inc
nop
mov
cmp
pop
xchg
xchg
xchg
test
pop
dec
outsb
xchg
mov
lahf
dec
adc
fdivs
jbe
jg
psrld
inc
mov
push
out
or
insl
and
pop
clts
add
mov
mov
and
mov
dec
sahf
out
inc
dec
adc
pop
loop
in
push
bound
jb
in
repnz
sbb
xchg
mov
popf
push
pop
push
out
mov
lods
pop
femms
push
xor
push
sbb
dec
cmpsl
out
call
cmc
pop
mov
push
pop
movsb
xchg
and
pop
adc
outsb
repnz
mov
mov
movsb
in
in
daa
pop
movsb
movsb
outsl
movsb
in
mov
xchg
lcall
rsm
movsb
mov
scas
jne
das
pop
or
ret
cmp
lret
insl
inc
pop
jo
cmp
shrb
add
xchg
jg
xchg
int
loop
jg
jo
lock
or
cmc
mov
add
push
add
sbb
dec
pop
or
sub
lea
in
inc
ja
mov
or
clc
cmpsb
sub
jbe
cmpxchg8b
iret
and
inc
jb
cmp
cld
cmpsb
pop
leave
jae
pusha
xor
jb
cmpsb
push
jmp
push
mov
dec
ds
mov
mov
loopne
inc
rcrl
adc
lahf
dec
sub
mov
or
cmovo
daa
fucom
fistps
lsl
mov
pushf
or
fildll
xchg
ret
mov
cmpsl
xchg
clc
repz
push
out
test
add
cmp
sbb
and
add
bound
push
test
pop
pop
pop
xor
dec
test
outsb
mov
pop
ud2
iret
repz
sahf
adc
push
cmp
repz
sbb
out
nop
push
sbb
lds
push
xlat
mov
repnz
pusha
xchg
pop
enter
mov
jmp
test
inc
pop
ja
xchg
add
sbb
jg
sbb
inc
pushf
xor
pop
adc
daa
and
subb
push
xlat
cwtl
push
add
mov
add
dec
sahf
pop
mov
test
daa
or
mov
push
and
cltd
push
push
test
xchg
inc
push
stos
stos
stos
sahf
mov
ja
cli
inc
xor
shll
das
mov
or
pop
push
pop
clc
leave
leave
in
mov
clc
repnz
daa
and
sub
jo
fnstsw
js
daa
pop
leave
mov
pushl
daa
rorb
loope
xor
mov
ds
jns
pop
icebp
add
add
sbb
or
dec
sub
cmp
adc
je
pop
dec
pop
mov
mov
pop
lsl
sub
movsb
ret
test
fucomi
mov
lret
fcomip
cmp
in
add
add
les
in
pop
lods
pusha
push
loope
jb
inc
mov
xchg
aam
pushf
daa
js
orb
pop
fsub
jns
add
in
xchg
and
lods
inc
fldt
aas
ret
pop
lret
lods
outsl
shrl
inc
push
mov
in
and
or
pop
ja
daa
cmp
inc
outsl
dec
add
cmp
pop
push
add
iret
repz
syscall
mov
cmp
or
adc
ret
lds
dec
scas
scas
das
enter
cmp
out
add
loopne
sbb
scas
mov
mov
ud2
push
or
bndstx
and
cmp
xchg
insb
sbb
data16
inc
repnz
add
nop
repnz
mov
daa
pop
leave
jae
clc
loopne
jb
call
adc
js
pop
inc
mov
insl
in
xchg
mov
mov
mov
jns
leave
xchg
push
jae
cmp
or
pusha
mov
call
prefetch
ret
cmp
mov
dec
adc
push
mov
dec
outsb
xchg
xchg
mov
adc
and
fucom
in
push
dec
push
add
mov
cvtdq2ps
movd
dec
dec
dec
xchg
mov
repnz
daa
and
mov
cmp
daa
daa
andb
sbb
sbb
mov
sahf
fsubl
adc
pop
in
sahf
out
add
dec
mov
push
and
dec
je
int
jl
jg
xchg
push
repnz
add
loopne
inc
mov
mov
mov
mov
fisubrs
sub
daa
or
xchg
xlat
xchg
xchg
xchg
pop
outsl
jge
jg
mov
mov
leave
inc
cmp
push
ror
leave
leave
leave
lock
xchg
in
jmp
mov
jb
enter
push
mov
mov
mov
data16
mov
jle
pop
pop
mov
mov
mov
add
mov
scas
mov
adc
in
mov
mov
cmp
je
into
mov
out
sbb
pop
icebp
stc
add
add
in
xchg
aam
push
add
fmull
jle
mov
mov
mov
push
mov
mov
mov
mov
jbe
jle
xchg
mov
cmpsb
mov
in
mov
mov
mov
jns
in
mov
push
sbb
sbb
sbb
sbb
and
push
and
sbb
cmp
repz
and
and
repz
repz
and
cmp
push
daa
pop
sub
mov
sub
sub
loop
jns
mov
dec
xchg
mov
push
leave
xor
enter
jb
add
out
pop
sarb
leave
repz
push
das
loopne
stos
jecxz
inc
call
iret
sbb
jb
mov
add
outsb
repnz
cmp
add
das
mov
out
fmul
mov
inc
into
das
test
fcmovne
leave
mov
rorb
leave
leave
enter
mov
leave
leave
push
pop
ja
repz
leave
popf
movsl
shrd
cmp
leave
mov
dec
adc
int
out
es
jae
adc
daa
mov
sti
aas
add
dec
sahf
out
cs
sbb
pushf
fmull
orb
iret
cwtl
and
xchg
out
aas
mov
maskmovq
divl
daa
daa
incl
mov
jns
sahf
addr16
cs
push
xor
xor
mov
xcrypt-ctr
cmpsl
push
xor
repnz
mov
cmp
fistpll
mov
sub
jl
dec
mov
in
push
add
ja
daa
mov
xchg
cmp
loopne
fisubrl
js
mov
xor
dec
mov
xchg
mov
cmp
jae
mov
out
jbe
ret
fsub
iret
rorl
or
ud2
stc
or
dec
inc
ds
bndldx
sub
leave
repz
adc
leave
repz
push
adc
push
leave
repz
cmp
sbbb
leave
repz
mov
xchg
sbb
lods
sbb
cmp
leave
int
and
out
das
das
sub
add
mov
or
sbb
repnz
or
addb
cmpl
cmovge
adc
mov
mov
enter
daa
iret
repz
fsub
mov
aas
call
mov
repz
movups
mov
sbb
push
adc
rorl
ja
push
adc
lar
pop
dec
sbb
push
pop
cmp
sub
sub
inc
call
sbb
push
scas
divl
iret
mov
test
rorb
xor
movsl
ja
aas
sahf
rol
leave
out
push
or
repz
and
mov
psadbw
ss
and
sub
shll
rcl
leave
leave
in
fs
fs
je
mov
fidivrl
lahf
in
rcll
mov
iret
push
xlat
or
in
jns
cli
add
and
leave
or
repnz
xor
inc
daa
pop
leave
jae
subb
xlat
dec
outsb
vmread
daa
daa
pop
mov
pop
ja
pop
ret
lret
xlat
roll
repnz
jns
jecxz
or
cmp
inc
push
ret
push
ret
push
ret
sbb
ret
es
cs
call
cmpsl
push
pop
sarl
xchg
jb
xchg
xchg
pushf
movsb
xchg
jl
sahf
add
jae
iret
xlat
add
out
ja
daa
out
pop
negl
cmp
pop
les
ss
test
xor
fistpll
les
repz
cmp
dec
push
add
add
bound
jb
jp
or
or
enter
mov
imull
knotb
mov
call
lock
add
or
sbb
dec
nop
sub
xor
cs
out
cmp
fcompl
pushf
fmull
movd
jle
iret
leave
add
jns
es
leave
inc
mov
addr16
leave
popl
cs
pop
out
repnz
xchg
pop
pop
pop
add
andb
jae
add
or
aaa
jo
js
and
pushf
add
out
push
out
cmpsl
cs
and
daa
xchg
shlb
lock
cwtl
scas
les
jns
out
dec
push
add
popa
xchg
das
pop
push
jg
jg
in
outsl
cwtl
das
das
das
das
mov
mov
das
iret
ficompl
outsl
repnz
sti
movl
repnz
daa
enter
enter
repnz
enter
enter
repnz
jg
mov
xchg
pop
fmull
mov
aas
sbb
pop
push
repz
pushf
pushf
adc
repz
sub
sub
in
daa
int3
push
xor
jl
push
inc
popa
xor
shrb
aas
xchg
popf
psrad
fdivp
cmp
cmp
cmp
cmp
add
cmp
jnp
push
push
cmp
cmp
and
das
inc
cmp
iret
repz
inc
push
inc
pop
cmp
testl
repnz
iret
inc
mov
dec
leave
leave
repz
aam
fcomip
and
dec
jno
iret
repz
push
or
push
and
outsb
daa
sub
aaa
inc
dec
fucom
jns
pop
pop
arpl
pop
pushf
pushf
pushf
cmp
jns
popf
lcall
push
sub
jns
lret
xor
lret
lret
mov
das
push
add
ret
or
lret
in
cltd
fimuls
cwtl
lret
pop
mov
jns
insl
mov
mov
lret
fcmovne
xchg
xor
lret
dec
lret
push
aas
sahf
ja
mov
push
mov
sbb
inc
push
sbb
in
repz
dec
fmul
and
inc
leave
xor
out
int3
fstl
sbb
int3
int3
pop
test
iret
jae
push
add
or
loopne
inc
push
leave
pop
imul
cmpsl
mov
nop
or
daa
cwtl
mov
dec
int3
outsl
mov
dec
sahf
push
ror
int
out
jns
shrb
fsub
das
das
cmp
lock
clc
int3
shlb
int
push
pop
scas
cmp
inc
int
int
enter
out
pop
int
pop
and
js
int
shl
jae
into
in
mov
mov
stos
mov
mov
pop
xor
jg
jns
popf
pushf
hlt
lcall
pushl
js
adc
sub
outsb
mov
lret
ss
inc
into
dec
xorps
bound
dec
dec
insl
js
mov
mov
jns
cltd
shld
adc
iret
repz
sbb
sbb
es
repz
sbb
nop
xor
cmp
pop
iret
adc
sbb
sub
and
pslld
pop
push
daa
push
int3
icebp
jbe
das
or
sub
sub
iret
pop
ror
cmp
repnz
push
add
add
dec
test
aad
sarb
in
inc
rcr
inc
mov
sarb
shlb
insl
out
sahf
out
add
add
jns
mov
cltd
syscall
pop
sbb
fisttpl
mov
insl
in
cltd
scas
mov
pop
sahf
out
mov
out
cmp
loop
icebp
adc
cld
rolb
shl
in
sbb
nopl
sub
fucom
jns
sbb
sbb
push
aaa
jns
and
emms
repnz
and
jne
push
iret
repz
sahf
and
xchg
push
mov
pop
fisubrs
out
sahf
out
ret
sub
loop
pop
test
test
inc
inc
or
in
mov
in
out
inc
dec
xor
jg
shlb
pop
xor
jns
out
add
inc
push
cmp
push
repnz
sarb
orb
mov
mov
add
mov
rorb
jns
xchg
fsub
add
mulb
jge
add
out
pop
pop
shll
jb
add
and
sub
jecxz
fisttpll
pop
inc
ror
dec
sarl
fiadds
push
rcrl
ror
cmp
enter
roll
adc
shr
sbb
fchs
out
shll
push
aam
mov
aam
das
sub
jg
xchg
jl
outsl
aam
or
out
mov
pusha
aam
aam
adc
mov
aas
lods
mov
invd
mov
cmp
repz
or
or
jnp
cmp
or
aad
pushf
cmp
fisttps
or
adc
iret
repz
pushf
xor
cmp
xchg
out
cmp
push
push
sbb
repz
imul
sbb
sbb
cmp
xchg
movsl
and
and
jns
outsb
pandn
and
ficoml
sub
sub
sbb
aad
and
das
cmp
pushf
dec
ds
das
cs
call
int3
add
mov
pushf
cmpsl
mov
push
repnz
repz
in
sahf
ja
push
or
or
mov
das
or
pop
adc
jae
jb
ss
adc
repz
push
adc
loope
dec
insl
xlat
xlat
sbbl
dec
lds
cltd
push
sbb
dec
movsb
pop
scas
and
mov
fistpl
and
sahf
out
out
icebp
es
cmp
push
cmp
fsubrs
adc
pop
sbb
repnz
cs
sub
dec
push
push
das
pop
jne
mov
out
xor
push
in
dec
mov
fs
loop
fsubr
cmp
jmp
adc
stos
add
add
imul
arpl
or
icebp
cmp
std
add
jl
ljmp
inc
push
or
sbb
jno
repnz
dec
inc
sub
inc
or
push
xchg
jbe
aaa
push
mov
mov
aaa
cmp
push
add
bound
or
fs
wbinvd
outsb
fstl
scas
or
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
insl
push
and
in
sbb
jb
pop
andb
jns
xchg
fildl
xchg
push
sub
insb
loop
sahf
mov
jo
cmpsl
mov
into
aas
xlat
stc
ss
pop
sbb
addr16
inc
cmpsl
mov
fiaddl
pop
jmp
jns
push
dec
dec
inc
inc
cmp
out
xor
sbb
or
cmp
repz
call
iret
repz
call
aam
sahf
idivl
int3
pop
les
in
mov
iret
repz
jl
fs
pop
push
es
cmp
xor
add
outsl
push
push
ds
adc
test
sti
mov
mov
push
and
jb
and
andb
dec
sbb
subb
cmp
xor
pop
test
sub
xchg
das
clc
adc
or
andb
stc
enter
pop
movsl
sbbl
mov
fisubl
add
cltd
cmovo
pushl
mov
sbb
in
call
mov
push
add
mov
xor
inc
mov
rcr
fsubp
stc
jb
jle
notb
daa
xlat
inc
pop
sbbb
mov
fcompl
inc
hlt
pop
test
push
mov
pop
mov
jle
pmovmskb
pop
sub
fadds
xchg
mov
and
push
das
aas
push
arpl
inc
das
movsb
add
out
ficompl
aam
push
or
sahf
adc
in
adc
nop
adc
imul
sbb
in
sbb
jns
out
sbb
push
dec
das
and
lea
dec
call
stc
sahf
jnp
inc
sbb
js
push
jns
hlt
ljmp
cmp
jecxz
pop
mov
pop
mov
call
rcrb
inc
pop
push
push
ja
scas
js
or
lahf
fldt
cbtw
dec
push
xorb
push
inc
iret
icebp
addr16
push
push
lcall
add
mov
jnp
inc
push
xchg
aas
pop
stos
movb
push
aad
inc
idivb
imulb
add
ja
dec
ds
sub
add
out
test
mov
es
repz
push
icebp
pop
push
sbb
pop
cmp
add
aas
cmp
push
and
push
ds
or
push
cmp
sbb
add
clc
add
pop
adc
out
gs
lock
push
or
or
or
repz
notl
add
call
adc
loopne
fcoms
out
sahf
out
pop
enter
out
sahf
and
and
and
jns
test
inc
into
test
in
nop
xor
orb
jge
mov
jmp
dec
movsb
xor
add
outsl
and
jg
out
cwtl
pop
cmp
pop
js
xor
out
mov
repz
xor
xor
repz
insl
add
inc
lcall
mov
jne
testl
insb
add
das
and
jns
mov
add
pop
repnz
pushf
or
ret
mov
adc
xchg
cwtl
push
and
std
jg
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
jg
inc
into
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
push
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
lcall
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
sbb
popa
sar
mov
and
addr16
ljmp
mov
subb
fwait
xchg
and
and
pop
add
aas
jno
or
mov
lcall
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
inc
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
xor
fisubs
xchg
cmp
push
mov
xchg
aas
sub
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
lcall
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
adc
gs
std
orl
pop
ficomps
frstor
faddl
pop
pop
inc
inc
je
xchg
insb
inc
inc
push
dec
jnp
mov
dec
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
jmp
aad
mov
rclb
mov
sub
mov
sbb
repnz
repz
test
ficompl
jmp
mov
hlt
movl
inc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
or
shrl
jmp
fldenv
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
decl
movsl
mov
sub
mov
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
jg
pushl
aam
call
xor
nop
or
lcall
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
frstor
sub
rorl
popa
mov
into
pop
cmp
cmc
pushl
mov
inc
movsl
fisttps
fadd
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
dec
or
cmp
pushl
push
stos
inc
add
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
incl
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
decl
arpl
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
call
or
inc
push
imul
xorb
sbb
push
imul
lcall
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
decl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jmp
imul
andl
shrb
rclb
or
add
pop
cmp
mov
das
es
lds
or
add
mov
pop
cmp
cmpsl
call
ret
shlb
scas
ficomps
ret
es
in
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
push
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
sar
mov
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jg
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
mov
shrl
or
inc
lcall
adc
aaa
pusha
mov
fidivrs
mov
pop
sbb
inc
jmp
mov
xor
call
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
clc
lcall
sub
aaa
mov
or
sbb
add
sub
movsb
out
pop
push
dec
sahf
imul
mov
add
inc
repz
repz
xlat
fcomp
fcmovu
iret
repz
fsubp
jecxz
repz
and
iret
repz
jmp
in
repz
cmc
cmp
repz
idiv
stc
cli
test
repz
cld
daa
adc
add
aas
xlat
adc
or
mov
push
les
inc
inc
push
cmpb
push
dec
bound
movsb
mov
add
bound
inc
push
cltd
rol
mulb
arpl
pop
sub
push
in
cltd
out
and
pop
xchg
test
inc
jns
in
cmpsl
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
in
mov
cmp
xor
xor
bound
and
push
inc
jbe
adc
sub
fs
orb
paddsb
gs
push
dec
inc
aam
jae
mov
inc
aam
xchg
leave
sub
sub
leave
rorb
popa
or
fs
sbb
push
and
push
je
scas
sbb
enter
sub
dec
in
fldl
mov
add
xor
jle
gs
push
bound
add
aaa
add
xchg
insb
popa
jns
je
sbb
mov
jne
popa
xchg
cmp
push
fisubrs
sub
aas
inc
push
or
push
cmpsb
add
pop
adcb
jae
jp
add
insb
daa
int
xlat
mov
das
pop
inc
aas
inc
and
xchg
xchg
mov
inc
jbe
inc
sbb
push
xor
push
je
gs
jo
inc
inc
add
ds
push
scas
add
sbb
iret
int
push
andb
dec
cmp
inc
mov
or
pop
mov
fs
ja
outsb
jne
insl
inc
push
xor
push
xchg
pop
dec
jge
fwait
cmp
add
add
or
mov
xor
addr16
clc
xchg
adc
jo
dec
pusha
in
sbb
rorl
pop
sbbl
gs
lods
dec
adc
add
mov
push
xchg
popa
aam
cmp
mov
mov
and
movsb
sub
arpl
xchg
or
frstor
or
jo
lahf
xor
adc
inc
sub
popa
mov
adc
jno
loop
push
xor
stos
lds
xchg
pusha
jb
in
nop
test
pop
cmp
inc
insb
mov
arpl
cmp
mov
add
push
cmpsl
xchg
and
jns
inc
xor
popf
das
inc
jb
stos
gs
je
or
dec
inc
outsl
arpl
insb
jle
adc
bound
pop
cmp
lods
ja
inc
jbe
xchg
push
lods
cmpsb
xor
ja
adc
jecxz
sbb
xor
es
incl
inc
add
or
jg
add
adc
adcl
gs
sbb
dec
pop
inc
dec
adc
dec
xchg
dec
dec
cld
or
cmc
adc
mov
jo
sbb
incl
rclb
inc
push
inc
dec
popa
jmp
sbb
bound
outsb
arpl
arpl
je
pusha
in
lods
testb
aaa
sub
inc
jne
push
pop
mov
nop
sub
or
inc
lds
daa
sub
inc
push
adc
or
sub
jmp
add
push
add
cmp
filds
mov
fdivr
loopne
adc
xor
fs
neg
scas
frstor
fstpt
add
add
jg
add
or
pop
pop
push
or
or
or
or
or
adc
outsl
push
outsl
adc
push
adc
push
add
pop
sbb
adc
adc
adc
add
data16
or
aas
mov
inc
add
ss
int
push
add
add
add
adc
fiadds
add
add
dec
fnsave
mov
subl
imul
mov
add
push
adc
pop
and
xor
inc
mov
add
inc
adc
xor
cmpb
loopne
xorb
push
pusha
xchg
sbbb
dec
or
and
inc
rolb
loope
xor
daa
sbb
or
add
xchg
adc
dec
push
cmp
shlb
into
add
adc
push
ja
adc
stc
out
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
push
xor
shll
sbb
add
js
filds
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
mov
jmp
lods
loopne
ja
fdivrl
add
mov
mov
loopne
mov
fsts
sub
mov
mov
cmp
movsb
mov
pushf
ret
ja
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
stos
pusha
inc
mov
incl
sub
pusha
add
sub
decl
bound
add
lds
cld
cli
and
mov
fiaddl
jg
fisttpll
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
aas
inc
jmp
clc
cmpl
incl
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
push
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
fdivp
pushl
int3
lcall
fs
scas
mov
pop
pop
mov
popl
incl
mov
sbb
scas
adc
mov
xor
lods
scas
xchg
test
decl
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jge
ljmp
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
decl
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
ljmp
lods
leave
mov
jp
push
out
or
push
sahf
pop
jg
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
incb
mov
jmp
sbb
clc
or
dec
out
pop
jb
mov
mov
mov
xor
dec
sub
pop
mov
jl
rorl
adc
in
call
stos
hlt
push
add
stc
loope
mov
sar
andl
and
adc
icebp
idiv
dec
imul
jg
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
lea
or
push
inc
es
andb
subl
jb
adc
push
lock
lods
jp
testb
sbb
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
imul
ljmp
aaa
xchg
in
add
inc
adc
loope
fisttpll
ror
rcrl
cli
push
push
push
idivl
ljmp
dec
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
inc
sar
cmp
sti
punpckhbw
cmpsb
orb
mov
push
sarl
inc
push
sub
xchg
pop
clc
pop
hlt
jg
push
sub
movsb
add
lea
jg
jmp
std
xorb
jg
aad
adc
ret
das
pop
pop
mov
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
jmp
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
jl
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
inc
in
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
sbbb
mov
stos
dec
lods
xor
jg,pn
cmpsl
scas
in
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
decl
idivb
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
lods
sub
jae
shrb
sar
pushl
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
rol
cld
addl
adc
and
iret
imulb
fmull
enter
jecxz
scas
sub
pop
decl
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
fucomi
xchg
adc
inc
or
pop
jg
add
mov
mov
jg
mov
aad
test
mov
fsubr
lock
mov
iret
push
jbe
push
sbb
addl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
idivl
sbb
mov
lods
loopne
sar
addl
lahf
xor
imul
scas
fidivrl
or
add
mov
faddl
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
lock
testb
pop
rolb
pop
inc
jb
fistpl
adc
call
outsl
mov
data16
pop
nop
mov
inc
sti
arpl
clc
mov
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
pop
cld
jg
xor
fsubr
fistps
lds
fidivrl
jg
stos
call
sbb
add
dec
mov
sub
jge
xor
lahf
les
inc
mov
sbb
cld
addl
adc
cld
lcall
mov
lahf
outsl
int3
push
sbb
sti
incl
mov
jle
xchg
popa
out
out
outsl
xchg
mov
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
lcall
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
xchg
cmp
shl
cld
mov
adc
icebp
outsl
js
pop
jg
pop
shrb
rcl
jg
adc
xor
inc
sti
lcall
fisttpl
sub
jmp
lea
jp
jnp
jecxz
jg
add
ds
pop
adc
imul
or
inc
pop
xor
in
inc
nopl
xor
subb
iret
mov
lock
inc
cmpsl
enter
clc
in
pushl
xchg
movsb
insb
or
and
xchg
ficomps
aam
jp
clc
insb
test
aas
repz
aaa
fistps
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
ljmp
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
adc
lcall
ret
faddl
xchg
lcall
mov
mov
or
dec
ss
lods
lock
mov
or
repnz
mov
pop
adc
call
cmpsl
lret
stos
fisttps
pop
in
cmp
jmp
mov
and
outsl
insl
pop
lock
jmp
hlt
dec
mov
ja
pop
in
xlat
inc
aas
mov
jg
mov
sub
addr16
mov
out
daa
jp
std
adc
cltd
or
and
leave
mov
ret
nop
cmp
das
incb
lock
pop
pop
addl
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
add
mov
fbstp
out
xchg
add
out
icebp
mov
loope
mov
pop
leave
xchg
cmpsl
popf
sti
mov
fbld
mov
outsl
das
push
in
jge
out
ret
cmpsb
cmp
call
xor
decb
jbe
add
decb
dec
adc
sbb
jo
call
popf
iret
jb
jo
or
mov
cmp
int
add
push
pop
aaa
std
ja
test
dec
inc
das
js
xchg
xchg
fimull
ret
and
pusha
dec
ror
sbb
aaa
inc
push
pushf
jecxz
adc
shrb
adc
aas
pop
clc
loope
loope
mov
lahf
jp
pop
inc
push
jg
jmp
lods
mov
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
add
movsb
loop
dec
sarl
pop
out
jg
jno
ret
shll
cmp
jmp
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
inc
mov
in
sbb
xchg
imul
jmp
outsl
jmp
add
mov
daa
jmp
faddl
mov
inc
push
jae
lcall
push
imul
pop
stc
push
dec
adc
jmp
cmp
mov
mov
enter
inc
add
decl
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
incl
mov
mov
fildll
fsubrl
dec
add
or
inc
or
add
jle
sti
push
sti
pop
inc
dec
push
mov
fs
push
cmp
call
dec
int3
pop
iret
and
add
sub
xlat
gs
test
imul
mov
push
iret
dec
pop
addr16
dec
ret
les
js
test
add
adc
cli
es
ja
cmp
out
add
push
cmp
scas
loop
dec
add
sbb
shlb
xchg
mov
jmp
xchg
cmp
inc
out
imul
mov
loop
cmc
adc
ljmp
xchg
loop
or
stc
mov
scas
and
test
jl
dec
ljmp
and
push
add
pop
test
xchg
fcompl
es
fimuls
daa
leave
mov
xlat
aas
cmp
fimull
jo
cmp
fwait
jae
cmp
adc
cmp
lods
adc
aad
inc
lret
ja
hlt
mov
stos
jle
add
pop
cmp
mov
shlb
push
sub
lods
aad
sub
rorl
mov
arpl
shll
ljmp
sahf
cmp
stos
push
push
fwait
jg
cmp
stc
roll
loop
test
cmpsl
call
in
cmp
rorb
dec
mov
hlt
pop
arpl
jae
sub
add
jmp
cmp
js
inc
les
lds
mov
and
add
call
add
out
push
jno
out
and
push
xorl
jl
lods
lret
das
xor
arpl
push
cmp
das
cmpsb
pop
minps
aad
jmp
popa
test
mov
pop
lret
pusha
lock
roll
sbb
into
push
push
fidivrs
call
or
daa
inc
sub
push
add
ljmp
push
mov
dec
mov
call
loop
or
rcr
imul
fnstcw
sub
sub
pop
cwtl
adc
fdivrl
push
mov
repz
mov
ja
daa
aaa
sub
pushl
xchg
add
xchg
xchg
popf
scas
arpl
push
out
movsl
fldl
cltd
gs
shlb
mov
jmp
fiaddl
shlb
sub
je
ljmp
jge
std
int
je
pop
jp
pushl
pusha
or
jecxz
inc
cmp
dec
xchg
loop
nop
fs
dec
adc
jecxz
push
cwtl
pusha
xchg
dec
movsl
mov
jg
incl
fisubs
mov
inc
and
sub
inc
xchg
nop
xchg
stos
out
mov
popf
push
cmp
test
fisttps
aad
arpl
cwtl
sub
loopne
test
or
or
ljmp
mov
xor
and
sbb
or
stos
call
push
lcall
xorb
or
pop
int
xchg
xchg
repz
sub
call
mov
cmp
daa
inc
testb
and
ficoml
imul
mov
dec
mov
decl
in
dec
dec
xor
test
into
outsl
mov
fs
pushl
jae
aas
out
jbe
call
stos
lss
cmp
jmp
and
jbe
mov
sbb
test
lret
push
hlt
out
or
sub
into
test
and
adc
bound
lret
xchg
negl
mov
loop
and
inc
inc
mov
lcall
cmp
ret
xlat
in
std
es
mov
push
ss
jmp
add
sti
mov
bound
or
jmp
imul
jb
mov
in
mov
call
jge
jmp
movsb
sub
pop
call
inc
pop
sub
daa
subb
push
call
dec
iret
scas
ljmp
mov
and
loopne
push
stos
das
push
imul
rcrb
into
aas
add
cltd
cmp
sbb
sti
push
data16
xor
sub
lcall
mov
add
cwtl
out
outsb
fstpt
fisttps
mov
mov
jg
or
dec
pusha
adc
pop
pop
dec
push
sti
test
arpl
add
mov
arpl
fdivrl
ljmp
data16
inc
lcall
xorb
roll
icebp
pushl
cld
inc
dec
in
jae
pop
enter
add
mov
mov
imul
jmp
cs
clc
or
cmp
mov
lods
les
test
fcomip
decl
push
push
ja
dec
dec
mov
ljmp
mov
push
xchg
mov
mov
shlb
daa
sbb
adcl
into
cld
es
int3
sbb
lcall
fwait
inc
shll
dec
insl
iret
fidivrl
imul
mov
int3
test
mov
loope
pop
mov
and
mov
jp
xchg
dec
repz
sarl
pusha
sub
mov
cwtl
push
pop
xchg
xor
loopne
inc
sbb
mov
sbb
sub
pusha
std
xchg
loop
gs
sti
jge
std
in
lret
stos
jg
adc
ss
cmp
push
adc
in
in
add
stos
pop
push
es
or
in
push
sub
xlat
lds
pop
cmp
mov
shrl
iret
int3
mov
jno
jns
idivb
ljmp
xchg
loopne
pusha
hlt
mov
fiaddl
mov
dec
mov
and
in
jg
push
fstps
es
das
sub
sub
or
movsb
loop
cmp
or
aaa
repnz
les
popa
inc
scas
cmp
es
jp
add
femms
dec
xchg
and
movsb
and
loope
scas
cwtl
mov
cmp
sbb
mov
sbb
popl
hlt
ja
and
jmp
mov
xchg
mov
jb
shrb
int3
mov
mov
aas
ss
int3
shlb
sub
push
sbb
sub
add
imul
dec
in
lahf
outsb
clc
aam
lods
pop
inc
cmp
cwtl
pop
pop
mov
mov
cmp
loopne
or
jb
imul
incl
cmpsb
fwait
sub
ret
es
ds
rolb
out
jp
mov
inc
ds
add
inc
pushf
push
insb
cli
add
lods
or
jnp
add
aaa
xor
sti
aam
push
mov
adc
decl
pop
fdivrl
ret
jmp
fdiv
lea
adc
lea
pop
test
and
outsl
nop
call
aas
cmp
jo
call
dec
lret
mov
addr16
jg
xor
sub
push
cld
pushl
std
sbb
jge
sub
pop
mov
pop
push
add
push
mov
cltd
movsb
sbb
popf
lods
pop
sub
mov
add
mov
cmpsb
xor
or
call
inc
cmp
inc
ljmp
push
sub
insl
cli
sti
lcall
arpl
adc
lcall
out
mov
or
inc
adc
pusha
lds
loope
daa
out
pushl
jge
sub
sbb
divl
dec
inc
ret
xor
adc
rol
addr16
stc
repnz
xchg
pop
std
pushl
das
ss
lret
cwtl
cwtl
jb
into
xchg
and
aas
testb
shlb
xchg
mov
hlt
clc
outsb
mov
aas
xchg
leave
popa
jno
jo
arpl
adc
push
sbb
and
gs
decl
fcomi
imul
jne
xchg
pop
rcrb
call
aaa
cmpsb
imul
cmpsl
rclb
cld
icebp
and
rcll
inc
jnp
sti
jmp
or
ficoml
aad
nop
in
xlat
nop
fistpll
push
add
push
movsl
test
sar
ljmp
pop
rcrl
mov
adc
ja
mov
enter
jg
incl
add
imul
adc
jbe
call
loopne
mov
cmc
inc
sub
push
jecxz
xchg
adc
decl
jmp
sub
ja
pushf
adc
pop
and
stos
mov
imul
mov
add
lods
jge
adc
out
pop
clc
jg
xor
fwait
cmp
mov
cmp
incl
aad
dec
sub
xlat
inc
imul
mov
scas
clc
call
sbb
rolb
or
lcall
mov
push
xchg
stc
mov
jmp
xor
add
mov
cld
call
fs
push
push
sbb
xchg
imul
xor
dec
add
test
cmp
scas
leave
cmp
add
negb
lahf
stos
jg
stos
mov
and
aad
addr16
test
pushl
sub
mov
xor
sbb
mov
aam
rol
lret
cmpsl
aas
fcomip
pushf
jnp
and
ljmp
xchg
lods
mov
into
ljmp
clc
push
dec
xchg
rorb
add
adc
jmp
sub
shlb
insl
aam
mov
jae
stc
and
mov
dec
xchg
jl
mov
or
inc
dec
movsb
xor
addl
repnz
push
shrl
decl
jmp
fstl
mov
mov
push
jb
imul
jle
mov
cmp
in
sbb
cmc
lods
pushf
push
mov
xor
mov
iret
xchg
scas
out
lcall
sub
sub
les
sub
sti
push
mov
roll
mov
lcall
shlb
push
mov
jp
xor
add
cmp
sbb
call
loopne
cmp
sbb
xchg
repnz
out
pop
jb
dec
jecxz
xor
jnp
mov
xchg
insb
fsubrl
flds
fisttps
lcall
ret
jne
xchg
mov
stc
push
ret
sbbl
lret
xchg
movsb
xor
loopne
out
aaa
cmp
pop
call
cld
inc
in
shl
push
out
xchg
xor
test
cmp
movsb
mov
ficoms
clc
outsl
fdiv
sbb
addr16
jecxz,pn
pop
push
cltd
in
dec
sti
rcr
pop
ljmp
push
add
fmuls
xlat
dec
add
sbb
mov
test
cmp
pushl
pop
sbb
mov
repz
sbb
sbb
fisttpl
pusha
lcall
jg
std
mov
cmp
in
fistps
sti
jno
xchg
push
sbb
push
sub
pushl
out
inc
test
gs
push
pusha
popf
mov
and
xchg
jl
cmpsl
popf
jg
call
dec
mov
popf
loopne
cltd
fdivrp
out
rcr
jns
push
mov
adcl
adc
cmp
js
test
aas
adc
popf
mov
fsubrp
sbb
mov
xor
mov
aaa
add
or
aas
loopne
mov
in
xchg
mov
cli
loop
jmp
xor
and
mov
dec
or
int
lods
pop
cltd
outsl
push
push
lcall
ret
std
jge
ljmp
xor
jmp
int3
pop
push
cmp
mov
sahf
jp
pop
xchg
incl
cmp
pop
jecxz
dec
inc
jmp
jl
and
mov
mul
pop
mov
mov
lcall
hlt
xor
mov
mov
add
into
inc
cld
mov
jmp
test
or
cmc
outsl
xchg
into
sbb
stc
fcom
fistpl
decl
mov
jp
mov
push
test
mov
push
iret
mov
out
sbb
mov
push
popa
mov
pushl
pop
aas
iret
sbb
fists
int3
bound
push
cltd
cmp
jns
xor
xchg
jmp
or
adc
test
lahf
ds
fisubs
aas
rorb
filds
jae
test
out
aas
and
xchg
aas
xor
jl
lods
movsl
cld
sar
outsl
clc
lea
push
fwait
push
js
addr16
loop
ljmp
fsts
daa
sbb
out
push
xor
pop
add
ficomps
inc
ror
xor
lods
and
arpl
lock
ljmp
fnstenv
cmpsb
fstpt
je
sbb
ret
dec
dec
ljmp
push
gs
cmp
int3
hlt
icebp
incb
in
mov
das
rcr
popa
in
lret
jmp
cltd
icebp
inc
rclb
clc
lcall
jmp
jmp
in
jge
call
dec
int3
repnz
cli
js
xchg
ret
pop
popf
in
decl
int3
and
xchg
pop
mov
outsb
cmpsl
ljmp
pop
mov
cltd
loope
cltd
iret
mov
and
aam
fiaddl
arpl
loope
int3
and
pop
push
das
aas
sahf
xorl
das
enter
in
push
scas
nop
jmp
mov
or
stc
call
mov
dec
xchg
adc
cld
jns
stos
mov
xchg
jge
test
dec
fsts
hlt
xor
fcomip
lret
imul
xor
fldt
pop
push
ror
mov
xchg
shll
repz
pop
add
mov
mov
jecxz
jne
inc
xchg
sub
adc
pop
add
dec
xchg
fnstsw
pop
iret
sbb
cltd
test
pushl
dec
aas
mov
push
sti
inc
pop
xchg
rorl
mov
dec
aad
call
cs
xlat
cmp
stc
dec
sub
test
add
jns
dec
das
cmp
dec
and
sbb
sbb
lods
sub
out
dec
mov
add
xchg
mov
mov
or
dec
or
fsubrl
lods
popf
pop
mov
aam
add
pushl
fwait
fucom
push
paddusb
aas
xor
mov
aaa
incl
sarb
inc
pop
mov
cmpsl
and
out
fxch
jo
je
sbb
cmp
lcall
test
push
xor
cmp
cmp
int
rcr
push
std
nop
and
nop
incl
cs
fisttps
mov
mov
data16
fisttps
loope
mov
mov
lcall
lods
sub
pushf
adc
add
pop
test
in
cmp
popa
leave
xchg
sahf
clc
jmp
adc
inc
dec
sti
std
mov
repz
xor
aad
call
push
jecxz
loope
add
mov
jo
fiadds
nop
jmp
mov
mov
jg
sub
jl
cmp
add
adc
mov
jl
sahf
jle
mov
mov
adc
mov
aad
push
xchg
jb
cmpsb
jbe
add
loop
xor
insb
add
in
std
fidivs
push
inc
lds
mov
filds
insl
sub
ljmp
lods
mov
sub
jns
or
jns
in
or
call
push
lcall
sub
test
repnz
idiv
sahf
leave
stc
mov
jb
out
xchg
pushl
pushl
mov
xchg
sti
ljmp
in
jnp
test
pop
lock
pushf
jg
cmp
push
push
movsb
lock
xchg
enter
push
mov
sub
incl
add
mov
mov
ret
sbb
lods
nop
dec
push
or
lcall
pusha
int3
or
sbb
sbb
and
sbbb
repnz
cmpsb
fistps
pop
scas
sti
fadds
int
xchg
jb
movsb
outsb
mul
dec
cmp
bound
loopne
add
call
jns
mov
pop
adc
iret
xor
adc
inc
popa
pop
pushf
mov
pop
cmpsl
call
enter
int
sbbb
loopne
jp
xlat
cmp
add
inc
jo
jg
call
pop
lcall
push
dec
and
xchg
jb
pusha
pushf
stc
frstor
push
push
in
sub
or
add
insb
jnp
jae
cmp
or
ljmp
adc
add
push
xchg
mov
add
ss
or
out
xchg
cs
int
sar
ljmp
or
mov
xchg
std
dec
mov
js
rorb
and
call
adcb
push
negb
and
repz
sub
pop
adc
in
data16
cmp
fwait
mov
lret
pop
insb
shll
mov
add
mov
fdiv
cltd
jbe
out
xchg
ds
cmp
xlat
aas
fnstsw
add
sub
add
mov
popa
hlt
rcl
sub
loope
xor
ljmp
push
vcmpsd
sahf
adc
sbb
gs
in
jbe
stc
sub
mov
inc
add
mov
lahf
test
mov
jle
xor
adc
dec
scas
test
or
cmpsb
adc
sar
mov
cmpsb
bnd
xchg
std
pop
sub
incl
xor
mulb
test
push
loop
imulb
xor
sub
pop
pop
xor
fldl
push
daa
and
dec
push
mov
in
sbb
mov
lret
dec
in
jg
mov
stos
push
jnp
out
addr16
in
cmp
outsb
sarl
lock
inc
pop
repz
mov
jbe
outsb
pop
stc
out
mov
shrl
in
push
or
out
mov
pop
fstpt
ss
fstpl
dec
sbb
or
and
xchg
lods
pop
lcall
xor
mov
xlat
leave
add
and
xchg
pop
pop
dec
xchg
ja
mov
mov
or
pop
mov
pop
iret
fistpl
popf
or
pop
mov
cmp
bound
stos
lcall
sarl
jecxz
jmp
imul
imul
mov
xorb
inc
inc
lcall
rcll
cmp
ljmp
dec
or
mov
pop
xchg
and
lcall
add
out
jmp
jno
loope
jmp
pop
pop
push
mov
sbb
inc
xor
jmp
dec
into
cwtl
ret
mov
add
loopne
filds
sahf
test
pop
dec
sub
data16
jge
call
xchg
dec
in
cmpsb
fisubs
lahf
mov
loope
repz
enter
mov
jecxz
cwtl
add
lcall
int3
movb
rclb
addr16
mov
push
adc
std
xchg
enter
data16
push
pop
jmp
call
adc
dec
nop
ret
je
push
mov
jmp
push
add
fidivl
jnp
push
incl
outsl
shlb
lahf
mov
jecxz
mov
xchg
mov
lcall
cmpsb
or
outsb
cmpb
int
add
out
mov
adc
aam
ljmp
mov
mov
ljmp
inc
sahf
fdivrl
jmp
jne
notl
jmp
mov
adc
jb
aam
aas
scas
inc
jg
mov
ja
cmp
daa
sub
adc
ljmp
loope
ret
xor
push
les
jnp
push
test
iret
test
filds
gs
decl
lock
or
mov
inc
pop
xchg
out
jg
jmp
and
mov
icebp
xchg
cli
ficoms
icebp
aad
mov
popf
mov
rorb
incl
ja,pt
arpl
xchg
daa
push
popf
adcl
outsl
jg
out
jno,pn
testb
aaa
jmp
movsl
push
stos
xchg
fldt
mov
xchg
inc
movsb
sbb
xor
loope
inc
add
fmuls
cltd
dec
pop
mov
mov
aam
out
enter
mov
aam
adc
mov
sti
inc
mov
dec
ljmp
aaa
adc
xor
outsl
lock
sbb
popa
pop
mov
ret
jmp
in
shl
xchg
lret
mov
push
call
mov
mov
pushl
ds
dec
inc
arpl
je
inc
mov
dec
test
jnp
and
leave
outsl
cli
jg
push
aad
xchg
scas
repnz
repz
ljmp
sbb
dec
xor
xchg
pop
mov
add
ret
cmp
aad
ret
push
pop
mov
cmp
test
xchg
jmp
or
mov
and
dec
or
push
stc
push
loopne
mov
std
insb
jp
pop
in
daa
adc
jmp
sbb
roll
aad
outsl
mov
mov
in
lock
int3
xchg
call
and
mov
daa
ret
or
cmp
mov
shll
hlt
mov
aaa
adc
scas
sti
xchg
cmc
out
sar
add
stc
daa
fcoms
xor
ret
cmp
jmp
mov
lret
cmp
sub
out
cmp
cs
fcomip
incl
inc
inc
pop
shll
mov
sar
dec
fsub
sbb
dec
add
inc
xlat
mov
lret
adc
cmp
sbb
jno
mov
sbb
pop
test
mov
decl
inc
mov
xchg
jmp
xchg
repnz
enter
add
stos
pusha
mov
and
pushl
mov
in
inc
aad
cmp
jno
mov
imul
imul
loopne
cld
dec
add
jmp
std
sub
addr16
xchg
xchg
outsl
xchg
xor
mov
mov
neg
mov
or
cmpsl
mov
orb
movsl
cmpsb
mov
push
lcall
adc
call
std
lret
cld
gs
aad
add
jp
clc
ss
push
pop
enter
mov
inc
dec
xor
jg
ja
jg
pop
fnsave
sub
or
push
xor
adc
insl
mov
and
js
push
test
outsl
repz
xor
push
jo
push
in
cmp
cld
ljmp
xor
push
ficompl
test
xlat
push
mov
cmp
pop
sbb
push
ficompl
and
pop
call
mov
push
ljmp
orb
mul
jg
add
dec
sub
lods
pop
andl
cmp
scas
mov
sub
cwtl
gs
rcrl
pop
or
mov
adc
rclb
aaa
xor
popf
mov
pushl
jle
push
mov
adc
cli
orl
pop
bound
scas
jns
call
jle
out
out
sbb
mov
xor
pop
sbb
dec
xchg
sbb
mov
shrl
leave
xor
cmp
out
mov
adcl
sub
nop
jg
cmp
ljmp
insl
jge
rcll
rolb
clc
mov
stc
dec
sub
sub
pushl
jae
add
lret
out
loopne
rol
jae
or
xor
add
decl
movntq
cmc
push
mov
cmpsb
repz
jae
cmp
test
mov
xchg
push
rorb
xchg
sub
out
jo
cmp
jge
out
push
pop
movsb
pusha
push
sub
add
cmc
pop
push
mov
add
lret
cmp
faddp
xchg
push
sub
add
stos
sbb
inc
cmp
push
sbb
push
std
pushl
insl
sub
sbb
pop
insb
cmp
loop,pn
xor
mov
push
pushl
std
decl
scas
iret
rolb
xor
loopne
lods
xchg
push
inc
mov
jle
test
icebp
and
xor
jle
test
xchg
jb
dec
jae
jle
outsb
cmp
cltd
inc
mov
bswap
jb
movsb
jmp
pop
imul
aad
cmp
jnp
jmp
xor
push
mov
addr16
and
push
mov
fistl
ja
jno
lcall
mov
mov
push
movl
loopne
aas
adc
mov
xor
incl
daa
dec
xorb
jg
sub
pop
out
push
mov
data16
test
mov
pop
call
dec
and
fs
mov
mov
cld
loop
fdivrl
cs
ds
cmp
mov
push
test
movsb
xchg
cmp
mov
lea
notrack
stos
negb
inc
lds
cli
add
and
ljmp
outsb
inc
add
mov
add
lret
incl
pop
orl
cmp
xor
adc
inc
aam
fldcw
sub
je
and
outsb
mov
dec
rorb
sub
and
dec
sub
sbb
mov
inc
cs
fisttpll
hlt
mov
lcall
xor
pop
fmulp
fdiv
xor
sbb
mov
rolb
ljmp
push
sub
mov
in
lock
dec
fcompl
aaa
jle
je
ret
cwtl
lcall
arpl
ret
inc
xchg
leave
inc
ja
or
pop
cld
les
dec
mov
and
xchg
fimull
pushf
jge
mov
dec
lret
rcrb
xchg
and
mov
pusha
mov
cmp
out
ds
sbb
ret
fcoml
roll
sbbl
fdiv
out
ljmp
in
xchg
aad
std
ds
xchg
cli
aam
jp
xchg
xchg
lret
fldt
mov
pushl
call
ficoms
mov
xchg
inc
imul
inc
sbb
cmp
mov
sub
cmp
ret
into
hlt
push
fdivl
cltd
call
popf
inc
xchg
mov
push
or
fisubl
mov
xor
popf
add
jp
or
dec
xor
call
cli
ss
in
icebp
jo
sbb
fwait
out
sub
sbbl
sahf
nop
sbb
pop
out
mov
nop
or
mov
shrb
mov
outsl
aas
lods
and
jge
cltd
aad
arpl
push
sti
dec
inc
jecxz
iret
icebp
mov
iret
sahf
sub
jns
shl
fisubl
ljmp
sub
lea
jg
lea
add
js
xor
mov
push
imul
loop
test
stos
mov
cs
data16
aaa
or
or
rolb
call
loopne
mov
lods
inc
mov
push
jno
ja
in
mov
in
add
out
cli
ja
fs
sbb
mov
adc
cmp
arpl
incl
call
xchg
sbb
adc
jnp
jne
mov
cld
lret
fisubrs
js
push
jae
or
inc
dec
ds
mov
jp
lret
and
mov
inc
ret
insl
adcl
add
pop
int
fiaddl
fcoms
add
std
cmp
mov
pushf
insb
sti
jmp
js
xor
xor
or
mov
in
loope
fimuls
push
sbb
lcall
mov
rorb
les
ds
xlat
push
or
decb
dec
ss
xchg
stos
in
jle
decl
lret
jbe
push
incb
and
sbb
rcll
decl
push
lods
rolb
pop
and
inc
ja
adc
mov
and
ds
sbb
scas
jle
ret
mov
mov
dec
sub
call
decl
mov
jmp
mov
dec
push
cmp
fisttpl
jb
cwtl
mov
ljmp
cli
sbb
fdivrl
pcmpgtb
jns
pop
fadds
jmp
cmp
xor
xchg
filds
out
mov
addb
into
inc
fidivrl
cmpsl
mov
pop
xor
xlat
dec
adc
add
enter
lcall
in
jno
gs
and
ja
pop
aam
pushl
mov
cmp
mov
mov
dec
jg
jmp
dec
mov
adc
mov
scas
outsl
sbb
mov
aas
imul
or
or
pushl
mov
scas
cmp
repz
inc
rclb
xchg
cmp
adc
fisttpll
scas
push
mov
not
je
call
std
jg
push
out
dec
sbbl
jge
aad
add
jp
es
cli
mov
cmpsl
mov
pop
pushf
mov
mov
fwait
pop
ret
sub
adc
imulb
mov
test
push
out
inc
fdiv
js
clc
push
and
outsb
jae
inc
ljmp
jg
je
xor
add
pop
loop
es
negl
decl
out
push
fwait
mov
and
jo
nop
cmp
adc
mov
setle
aad
xchg
xchg
mov
in
pop
fstps
ljmp
inc
std
push
mov
and
lahf
dec
les
and
add
dec
push
xchg
or
addr16
and
dec
inc
cmc
es
cmp
int3
push
aam
call
push
jnp
adc
stos
stc
pop
adc
push
mov
jl
cmpsl
jmp
mov
xor
inc
mov
stos
cmpsl
loope
sub
sub
adc
inc
test
mov
sbb
hlt
iret
sub
push
add
adc
dec
paddusw
adcb
aaa
lock
inc
pop
arpl
or
lcall
mov
cmp
stos
iret
mov
lods
adc
add
sti
cmp
mov
xchg
add
es
push
insl
fbld
xor
lock
and
shr
test
mov
leave
and
les
jb
xchg
pop
add
js
mov
test
pop
mov
add
or
or
xor
sbb
scas
or
push
lock
mov
and
pop
call
inc
scas
xchg
lcall
or
lcall
adc
scas
xorl
xor
aas
and
pop
ffree
lods
out
pushl
xor
mov
jae
xchg
bound
mov
nop
fists
jbe
jle
jmp
xchg
pop
dec
les
mov
cmp
aas
push
stos
pop
mov
sbb
cwtl
sbb
lret
dec
jns
pushl
xchg
push
inc
add
ja
jge
lcall
or
push
and
cs
ljmp
sbb
rcrl
mov
lock
adc
cmp
imul
jmp
divb
sahf
pop
cmpsb
inc
mov
mov
mov
repz
xor
cmp
mov
lcall
call
in
mov
fcom
scas
orl
sbb
jg
lcall
lcall
mov
jecxz
iret
mov
ds
jo
mov
mov
decl
xchg
pushf
mov
xlat
adc
sti
jo
inc
ss
sbb
push
mov
outsb
lea
in
cmp
mov
out
inc
cmp
adc
push
aas
sbb
xchg
xor
adc
xor
ja
rclb
test
push
aad
nop
pop
mov
and
ljmp
mov
adc
pop
or
minps
sbb
lcall
std
add
roll
fstp
sub
push
cmp
scas
mov
dec
arpl
push
ffreep
or
fwait
add
jecxz
lock
inc
cmpsb
enter
jmp
and
xchg
mov
mov
and
movsl
inc
cmpsb
stos
sbb
flds
and
push
daa
shll
pushl
andl
sub
pop
push
mov
leave
mov
xchg
pop
pop
rolb
push
xchg
xor
mov
mov
dec
mov
mov
sbb
imul
xor
cwtl
adcb
and
cmp
mov
sbb
mov
jo
rclb
push
in
push
mov
sub
out
lcall
mov
mov
shl
ljmp
sub
inc
pop
jbe
rol
xchg
movsl
outsl
lock
mov
jo
out
aad
inc
call
cmc
inc
bound
cli
in
cmp
dec
mov
pop
xor
decl
sbb
xchg
fistl
enter
ljmp
jg
mov
lds
in
insl
daa
orb
insl
or
ljmp
xlat
lret
pushf
xchg
push
mov
pop
xor
jge
sbb
adc
shlb
imul
sub
adc
subb
les
cld
call
mov
add
cmp
xchg
mov
mov
lea
mov
ds
gs
or
mov
cmpsl
add
add
jnp
lret
sub
dec
ja
dec
jmp
xor
sbb
jg
push
sbb
adc
mov
test
mov
jg
jbe
mov
loope
xlat
int
xor
dec
adc
mov
pop
jecxz
das
cmp
ud0
ja
out
int
push
inc
sbb
lods
xlat
xlat
sbbl
test
or
dec
adc
inc
cmp
scas
test
cmp
and
sbb
push
cltd
cmc
das
jbe
and
xchg
and
mov
dec
mov
mov
pop
sti
jge
das
sbb
daa
lock
lods
es
mov
fbstp
data16
inc
adc
imul
sub
mov
pop
jne
cmc
mov
ret
add
ljmp
data16
sub
fisubl
int3
xor
adc
lcall
call
or
mov
xor
jl
or
jno
jp
call
and
and
and
jae
out
clc
jo
adc
shrb
in
lcall
loope
lea
jmp
icebp
push
or
loope
nop
xchg
mov
shrb
rcl
inc
cmc
sahf
mov
mov
mov
xchg
outsb
rorb
xor
lcall
rdpmc
mov
mov
popf
push
in
adc
aas
push
push
pop
nop
loope
sbb
add
lods
jmp
push
lock
mov
lcall
cli
flds
outsb
inc
push
jl
push
int3
sahf
dec
out
popf
aad
ficompl
jbe
pop
add
cmp
call
xchg
lock
cld
and
xor
sub
cmpsl
mov
mov
adc
jg
lods
mov
xchg
jbe
or
sti
xor
and
push
scas
push
lcall
sbb
rcrl
inc
push
ljmp
push
popa
lret
push
loop,pn
mov
mov
mov
outsb
shr
loop
dec
adc
outsl
push
insl
xchg
aam
mov
and
test
push
outsl
enter
sar
imul
test
lcall
pushf
push
or
loopne
xor
ds
lcall
fxch
mov
mov
cmp
dec
xor
mov
mov
incl
call
mov
repnz
xor
loopne
push
sahf
inc
pop
and
add
icebp
ljmp
rcl
push
mov
fstpl
call
int
push
xorl
push
and
dec
sub
push
mov
pop
inc
lock
jo
dec
cld
xor
test
gs
pop
xor
sbb
inc
xor
inc
out
lods
cmpb
jno
mov
cmp
in
and
inc
stos
and
adc
out
hlt
call
repnz
push
fadds
ret
aaa
sbb
cmovno
pop
mov
fistpll
sbb
fdivrs
pop
jns
popa
pop
lods
or
scas
ljmp
scas
mov
push
inc
decl
inc
jmp
inc
mov
lea
insl
bound
icebp
adc
push
fbld
leave
addl
in
jo
jns
lods
test
pop
pushf
sub
out
pop
dec
les
icebp
les
outsl
xchg
add
and
gs
xor
ljmp
out
out
fdivl
xchg
push
inc
push
fsubs
int3
jnp,pt
out
sbb
scas
and
xchg
xor
les
fstl
pop
mov
xchg
dec
stos
sub
decl
pop
cli
mov
push
imul
adc
add
pop
fidivs
mov
and
call
jo
decb
mov
inc
in
out
sub
cli
dec
jb
or
push
stos
dec
pop
fisubrl
pushl
test
jbe
lcall
popa
ffree
test
out
add
shrl
stos
ficoms
pop
out
lea
imul
push
into
add
lcall
mov
or
xchg
test
enter
push
add
dec
andl
js
jb
mov
jmp
repnz
mov
mov
pop
mov
stos
mov
sub
push
imul
fldl
pop
mov
jle
sub
dec
jnp
cltd
cwtl
jmp
outsb
idiv
fwait
call
adc
adc
lds
mov
mov
inc
imul
pushl
cmc
pusha
mov
jbe
je
pop
ficompl
in
sub
and
pop
cmp
into
xorb
mov
inc
gs
pusha
dec
mov
imul
mov
je
rol
repnz
decl
sbbb
sbb
insl
arpl
pop
inc
add
jb
mov
cmp
stc
cltd
jg
inc
cmp
ljmp
pop
mov
aad
mov
shrl
imul
and
pop
ljmp
push
ret
sub
or
xlat
cmp
jge
sbb
jg
pop
adc
ret
or
xlat
push
aas
in
scas
xchg
cmp
add
jge
pushl
into
inc
or
movsb
dec
iret
jmp
rol
sar
or
dec
or
cli
sarl
test
lock
jmp
popa
mov
ret
nop
jmp
lea
sbb
rsqrtps
subb
ss
pop
ljmp
out
cli
or
sub
pop
out
inc
jecxz
cmp
mov
negb
pushl
bound
int3
ss
inc
lret
rolb
sarl
aad
ljmp
xor
in
mov
push
jg
test
mov
mov
dec
aam
stc
adc
mov
cli
data16
mov
push
adc
pop
mov
int3
fisttps
jge
lahf
pop
in
pop
adc
cli
pop
stc
sbb
fs
pop
jb
testb
decl
xchg
push
je
jecxz
xchg
ret
and
in
sub
mov
cmpl
cmp
ret
mov
mov
jp
cmp
nop
sbb
cmp
stos
sbb
inc
std
pop
loopne
sahf
jge
ja
fstl
and
mov
aaa
mov
ret
call
test
gs
sbb
add
xchg
out
icebp
inc
repz
xor
jle
lcall
mov
pop
mov
xchg
or
inc
mov
out
incl
leave
or
add
push
dec
fcmovb
lods
test
push
scas
xorps
inc
jg
pop
push
sbbl
bound
pop
es
bound
test
or
push
sub
cmpsb
pop
mov
jmp
arpl
push
pop
or
scas
xchg
xor
out
fnstenv
out
sub
xor
aad
out
inc
lods
sbb
enter
mov
mov
repnz
lret
add
add
out
int3
mov
test
pop
add
incl
sbb
or
insl
hlt
clc
pop
es
mov
mov
cmp
jle
fists
jb
xlat
inc
jbe
arpl
pop
sub
dec
xor
mov
jmp
lcall
xchg
fdivs
and
push
pushf
jle
ljmp
lret
pushl
cld
pushl
cmpsl
xor
dec
cmp
ficoms
das
rol
mov
pushl
fcomps
les
mov
jns
fs
ret
xchg
and
mov
jmp
stc
jno
outsl
mov
add
mov
subb
call
cmp
or
ret
cli
cld
jae
cltd
into
mov
and
leave
inc
fsub
ficoml
test
ljmp
push
hlt
mov
mov
rolb
movsl
mov
pushl
test
cmp
cmpsb
sub
xchg
dec
mov
sbb
sub
outsb
ret
inc
negb
push
fldl
mov
jae
je
jno
jmp
jg
cs
int
test
mov
rcrb
iret
sub
jmp
lods
and
push
jp
dec
mov
cmp
enter
dec
test
cmp
push
stos
inc
mov
jp,pn
and
xor
and
add
push
adc
lcall
mov
outsl
lcall
push
aam
dec
xchg
xchg
out
aas
add
cltd
mov
popa
push
cmpsl
fdiv
aad
ljmp
push
cs
push
ja
call
mov
push
aaa
inc
fwait
push
push
dec
sbb
das
xchg
loope
pop
push
mov
jmp
fisubrl
popf
jno
int
pop
mov
jnp
data16
sbbb
iret
add
sti
popa
xchg
pusha
sub
add
mov
das
dec
push
xchg
scas
pop
loope
lcall
pop
fdivrs
hlt
jmp
mov
enter
lret
js
hlt
xchg
dec
inc
outsb
sbb
sub
loopne
adc
je
push
mov
cs
imul
insb
stos
xor
incl
rcrb
aam
xor
push
cmp
pop
and
sub
and
xchg
mov
lcall
mov
sbb
imul
xorl
cmp
lret
mov
push
pushl
cmp
test
add
imul
xor
movsl
or
ja
xchg
jecxz
lcall
add
add
and
jmp
mov
jl
test
lcall
decl
adc
push
popa
stos
lods
jne
lret
jp
lahf
lahf
sbb
jp
pusha
outsl
inc
mov
std
adc
push
outsb
mov
hlt
mov
mov
mov
mov
popa
mov
shrb
gs
dec
jb
dec
xorl
out
rol
cmp
pop
and
lret
or
insl
sub
fsubrs
les
repz
loope
ljmp
in
popf
push
dec
mov
addl
insb
int3
jmp
lret
mov
pop
cmc
shlb
jne
push
xor
or
or
mov
jmp
clc
shl
sub
dec
imul
sti
sbb
loop
fcoms
sub
incl
arpl
push
fnstenv
in
mov
out
loope
cmpsb
mov
cmp
fisttps
and
push
jmp
sub
ficomps
adc
mov
adc
decl
mov
test
aas
hlt
sub
insl
push
dec
jae
lcall
cld
in
jp
dec
sub
scas
xchg
xchg
lea
fnstsw
push
mov
rolb
dec
or
sub
mov
dec
sbb
jg
cld
dec
mov
pop
xchg
inc
pop
repz
jle
sahf
add
push
addl
cli
jns
rorb
adc
rcrb
xchg
xchg
lret
test
and
out
movsl
cmp
incl
outsb
jb
push
pop
lods
dec
aaa
cmp
std
insl
sub
into
pop
mov
sbb
aas
in
incl
ss
inc
imul
scas
jle
je
sub
leave
dec
insl
loope
decl
negb
inc
test
xor
and
lods
jae
repnz
ljmp
mov
xchg
inc
push
xchg
icebp
push
push
lcall
inc
sub
mov
mov
sub
decl
push
sub
pop
out
adc
ucomiss
and
ror
add
je
incl
or
cmc
xor
mov
mov
pop
cld
ljmp
lcall
dec
aad
push
out
cmpsb
mov
cmp
inc
test
incl
lahf
ret
shl
xor
movsb
mov
sbb
loop
out
mov
inc
outsl
pushl
or
shrl
push
sbb
xchg
sahf
mov
push
ret
hlt
sub
orb
cld
or
adc
lidtl
push
imul
lcall
pop
sti
movsl
in
leave
lds
loop
mov
call
jp
ficomps
call
pmaxsw
stos
mov
sub
cmp
add
xor
xchg
test
jecxz
mov
incl
idivl
mov
push
pusha
inc
inc
push
xchg
call
ret
push
push
push
add
jmp
cltd
imul
jmp
xchg
xor
and
inc
sub
dec
stos
xorb
adc
pop
loop
fcmovbe
push
pop
outsb
jmp
lcall
mov
sbb
sub
sub
outsb
out
push
mov
incl
ds
dec
xchg
inc
ret
jae
dec
add
pushf
in
out
pop
fldcw
sbb
xchg
jg
call
jge
inc
in
test
mov
lret
lods
idiv
cmp
pop
in
add
pop
push
hlt
mov
jmp
pop
mov
negl
outsl
push
dec
ljmp
xchg
xor
pop
aam
xchg
ss
sbb
pushl
iret
loope
or
loop
scas
xchg
ret
leave
rcl
lods
popa
cmp
pushl
div
adc
dec
int
xor
sbb
sbb
jb
jns
clc
int3
push
xchg
mov
and
jecxz
xor
jno
aaa
cmpsl
std
mov
fldt
out
out
mov
iret
into
in
adc
inc
jns
mov
pop
dec
adcb
js
cmpsl
mov
jmp
mov
scas
mov
pop
sub
fcoml
sbb
sub
fisttpl
push
lcall
lcall
loop
mov
xchg
dec
rorl
mov
sbb
fsubr
inc
xor
cmpsb
jae
pushl
shl
lret
jl
scas
pusha
loopne
jo
in
inc
lds
out
dec
int3
xchg
add
adc
and
mov
popf
decl
ret
fidivl
in
pop
xchg
popf
push
in
and
int3
movsb
mov
xchg
add
rorb
sub
popf
in
popf
in
pop
repnz
incl
cmp
stos
mov
and
and
jbe
in
jp
inc
dec
xor
enter
fcomip
bound
mov
xchg
negl
out
inc
addr16
and
mov
shr
cmp
mov
js
lods
sbb
outsb
mov
decl
or
xchg
adc
sub
lahf
iret
icebp
jb
adc
sub
adcb
ud0
call
divps
jmp
test
mov
jbe
inc
pop
pop
std
and
lds
push
cmp
xlat
lods
xchg
call
loopne
scas
dec
and
push
lret
das
push
sub
add
pop
mov
xchg
jmp
sub
inc
cmp
xchg
jb
sbb
flds
clc
pushl
adc
imul
scas
dec
or
or
or
jge
and
inc
scas
pop
pop
mov
xchg
decl
cli
mov
rcll
add
imul
sbb
jno
notl
or
faddl
cld
inc
jecxz
cmp
mov
pushf
dec
ja
push
das
add
movsb
sbb
push
test
lcall
jns
sub
jnp
je
roll
jecxz
or
lds
lcall
test
jne
sahf
aam
clc
mov
into
jg
sbb
xchg
arpl
rcll
pusha
mov
jg
pushl
adc
popf
xchg
pop
dec
data16
and
test
call
mov
push
push
int
cmc
push
ljmp
aas
mov
mov
add
js
stos
lcall
in
and
mov
mov
ror
dec
xchg
dec
outsl
inc
jl
es
decl
aaa
rep
and
test
fsubl
incb
jp
and
movsl
repz
incl
or
dec
xor
ja
mov
adc
es
incl
mov
jmp
orl
or
repnz
mov
lcall
or
add
or
mov
fstl
outsb
add
into
or
incl
lret
inc
ficoml
mov
sahf
xchg
imulb
cmp
sbb
sub
dec
or
xor
mov
jg
push
mov
bound
jnp
ljmp
push
mov
fildll
hlt
divb
cmpsl
fwait
cmpsb
aaa
and
repz
lret
roll
out
sbb
int
mov
sti
and
lea
mov
bound
xlat
push
sbb
sub
loope
in
jle
mov
jmp
popa
mov
testb
popf
stos
call
addb
cmpsb
jno
mov
js
ljmp
rcl
mov
jno
jno
sub
push
jge
inc
sarb
mov
shl
adc
into
sbb
in
das
add
imull
xor
ja
cmpsl
movsb
pop
cmp
mov
insb
jl
mov
hlt
dec
shl
fists
or
sub
pop
pop
pop
mov
cmc
in
testb
xchg
xor
icebp
lcall
cmp
xor
rolb
test
mov
sahf
push
fisubrs
pop
mov
ss
popa
jbe
xor
das
or
daa
mov
out
insb
pop
outsb
aam
decl
int
sar
xor
inc
push
mov
stos
xchg
gs
dec
aaa
pop
jl
enter
cli
pop
add
jmp
jae
or
imull
leave
stos
int
cld
pop
fbld
sub
dec
lcall
or
sbb
xor
popa
call
and
mov
ljmp
decl
push
orl
mul
mov
inc
dec
cmp
and
sub
call
loopne
mov
adc
jo
pop
push
or
mov
call
ss
push
add
out
push
mov
sub
xchg
and
ljmp
ficomps
add
and
push
bound
lcall
or
cmp
pop
mov
cmpl
sbb
icebp
cwtl
sbb
sub
decl
data16
xchg
sbb
xchg
cli
inc
and
ja
clc
sub
cwtl
dec
pop
cmp
mov
fstpt
fisttpll
xchg
loopne
into
fcompl
idiv
add
orl
sbb
inc
sbb
ljmp
cmp
xor
push
push
pop
mov
jbe
mov
inc
mov
adc
pop
jo
outsb
dec
loope
scas
cli
sub
or
mov
xchg
aam
pop
push
imul
mov
dec
sbb
lods
cltd
xchg
divb
sub
lret
das
lock
fnclex
bnd
cmp
loope
pop
pop
repz
hlt
adc
add
cmpsb
jmp
aam
lcall
insl
mov
outsl
arpl
sbb
pushl
add
mov
stos
sahf
test
jp
shll
and
mov
jb
or
add
jns
push
lret
mov
fisubl
nop
mov
dec
add
jae
scas
aaa
out
ljmp
adc
mov
and
sbb
int
sbb
cmpsl
out
imul
xchg
ss
fnstsw
cmpsb
rcll
call
call
in
bnd
mov
test
fsubl
loop
pop
test
xchg
lret
sub
scas
ret
ljmp
stc
or
int
or
push
push
inc
imul
and
mov
push
je
ljmp
cmp
shll
lea
jb
arpl
incl
es
rcrl
imul
xchg
jno
adc
int
mov
lcall
arpl
imul
mov
push
inc
stos
jle
adc
mov
negl
inc
lcall
call
ret
fwait
js
xor
mov
mov
adc
mov
mov
jb
lods
mov
fimuls
and
into
xchg
ljmp
xlat
cmp
mov
xlat
push
and
mov
xor
lret
sub
dec
ljmp
push
cmp
cmp
popl
mov
dec
scas
push
out
out
pushl
cmp
pop
cmp
dec
dec
adc
popf
pop
jo
pop
loope
stc
lea
enter
out
or
imul
and
push
loop
mov
lret
inc
test
jnp
scas
flds
sub
mov
insb
subb
or
cmp
ds
in
lahf
sub
add
rorb
xor
jl
call
mov
jae
mov
pop
push
mov
gs
or
sbb
pop
in
jmp
dec
adcl
dec
mov
mov
jae
mov
stos
add
mov
pop
outsb
add
lcall
jmp
shrb
mov
fstps
push
jno
insb
aad
ljmp
ljmp
mov
cmpsl
push
scas
stos
push
popf
jno
sbb
out
and
sarb
lcall
jp
push
out
shll
mov
xchg
mov
pop
lahf
lock
fcompl
jmp
in
in
popf
xor
sub
mov
add
call
loopne
xchg
movsl
call
mov
lret
scas
inc
ret
test
icebp
jmp
dec
pusha
sub
jno
push
out
sbbb
jns
pop
sti
jb
inc
cmp
sub
cmp
test
aad
mov
add
pop
jmp
dec
adc
es
mov
pushl
mov
xchg
adc
idivb
sub
mov
adc
adc
xchg
ret
lock
jmp
mov
orl
dec
pop
sub
or
fcomip
subb
push
or
push
mov
clc
xchg
and
scas
out
pop
sbb
jg
decl
data16
jnp
pop
out
outsl
shlb
sbb
push
imul
scas
push
test
cld
lea
rol
std
sbb
jbe
mov
lcall
hlt
loope
mov
push
add
leave
mov
jg
test
push
cld
decl
scas
imul
leave
mov
mov
xor
xchg
shrb
mov
push
mov
inc
lahf
lret
or
or
xor
ljmp
jb
fstps
push
mov
in
std
test
lea
jge
cmpsl
mov
jmp
hlt
sbbb
hlt
push
std
outsl
clc
inc
cwtl
icebp
sub
add
jno
xchg
pop
lock
sbbb
inc
sarb
xor
xor
pop
insb
dec
ljmp
repz
mov
call
pop
xlat
test
mov
mov
mov
jp
or
ret
sub
cmp
add
dec
xor
push
inc
adc
push
sbb
push
jnp
addps
xchg
insb
jge
decl
movntq
sti
xchg
ret
mov
jle
dec
fsubl
xchg
jmp
mov
scas
add
pop
push
sbb
sub
xor
repz
xchg
pop
jmp
cwtl
xchg
cmpsb
scas
cmp
out
dec
cs
outsl
adcb
mov
cmc
stc
ja
ds
adc
xor
mov
lret
nop
nop
hlt
test
repnz
aad
cmp
ljmp
jge
call
add
iret
popa
or
imul
push
fucomip
jg
into
cli
mov
jg
inc
pop
scas
adc
popw
leave
add
cmpsl
mov
jg
rcrl
loope
jae
adc
ds
mull
dec
pop
nop
pop
ror
hlt
test
fwait
bound
mov
lcall
test
int3
mov
fwait
pop
cli
cld
lock
cltd
jb
stc
sbb
fiaddl
add
xor
push
mov
mov
or
xchg
aas
xor
sbb
or
imul
pop
loope
std
push
iret
adc
dec
cmp
test
mov
adc
mov
lret
lret
mulb
pop
je
dec
jne
jg
push
lcall
push
sub
out
jg
xchg
jecxz
loopne
ss
popa
mov
inc
call
cmc
dec
sbb
xor
pop
jl
ljmp
sahf
xchg
cmpsb
mov
pop
pushf
ret
pop
imul
inc
xchg
jecxz
test
neg
fisubrl
inc
push
dec
mov
push
sahf
push
push
insl
fdivr
xchg
xorb
and
je
or
sub
dec
loop
jmp
std
jmp
xchg
cmp
fbld
les
aam
and
outsl
push
icebp
and
into
dec
ja
leave
push
cmp
cmc
xor
aas
in
shll
pop
mov
rcl
dec
xchg
cmp
test
call
jbe
xchg
int3
push
sbb
aaa
inc
sub
lods
mov
sbb
jg
lahf
adcl
mov
in
mov
sbbb
xorl
xchg
inc
insl
cmc
call
cmpl
hlt
int
movsb
inc
mov
xchg
sar
sar
pushl
inc
test
dec
sub
popf
dec
xor
add
jg
xorl
scas
pop
push
aaa
ds
push
add
cmpsb
icebp
loope
mov
es
cmp
lcall
dec
test
add
scas
sub
sti
mov
mov
sti
aaa
cmpsl
jb
and
hlt
lret
inc
cltd
sti
lcall
in
clc
in
xchg
lds
das
jmp
testl
xlat
sar
ljmp
roll
mov
lock
cmp
pushf
sbb
adcb
test
ljmp
fdivrp
xor
cmp
mov
jmp
mov
push
add
xorl
int3
in
jmp
int
inc
popa
decl
out
mov
ret
test
push
inc
rcll
fdiv
push
push
jno
fists
movsb
lret
mov
imul
scas
add
cmc
lock
ljmp
mov
push
dec
mov
les
int3
sahf
pusha
shlb
andb
cmpsb
popa
imul
fimuls
dec
out
into
mov
testl
add
lcall
xor
push
xchg
ret
lcall
ja
xchg
sub
mov
ficoml
ljmp
mov
je
mov
xchg
xchg
sbb
mov
push
mov
adc
into
lahf
lcall
insb
adc
sar
lret
mov
imul
mov
jmp
jp
cmp
pop
call
fidivl
repnz
jne
outsl
andb
push
push
das
popf
inc
fstpl
xchg
test
jmp
mov
fcoms
movsl
sub
lahf
xor
and
gs
xchg
incl
stos
sbb
lods
add
dec
sar
es
xor
lret
leave
jnp
lret
mov
jb
sub
mov
fisttpl
fisubs
adc
and
mov
inc
ret
idivl
pushf
pop
add
pop
mov
jge
pushl
mov
jle
fcompl
pop
dec
push
pop
pop
and
add
jg
cld
xor
scas
push
in
fildll
xor
orl
hlt
sbb
movsb
or
in
negl
sub
mov
sub
xor
sub
mov
sbb
push
pushf
pop
sub
fld
les
xor
nop
inc
cmp
pop
dec
lret
adc
jne
stos
outsb
dec
cwtl
cmp
filds
addl
push
insb
clc
add
leave
scas
inc
jb
stos
cmc
loope
aas
sbb
call
mov
jmp
mov
imul
or
fwait
pusha
adc
xor
jg
mov
mov
push
sbb
and
add
jae
inc
mov
cmp
incl
sbb
inc
repz
outsb
xor
je
lea
sahf
inc
shll
mov
sub
test
es
dec
das
or
push
into
ds
push
daa
pop
js
lahf
inc
cli
fidivl
sbb
adc
clc
nop
aas
leave
popf
clc
push
inc
cmp
push
mov
decl
cmc
lcall
pop
lods
dec
xchg
out
fld
fmul
sar
incl
dec
mov
fdivl
in
or
push
jne
inc
jg
lock
dec
sub
xor
inc
mov
jp
xchg
rcll
dec
stos
int3
jbe
ljmp
mov
and
popa
mov
add
lcall
cmp
adc
mov
std
out
lods
int3
mov
mov
mov
sub
pop
je
sbb
xor
mov
fildll
dec
jb
ds
cwtl
sbb
xor
idiv
in
xlat
pop
sbb
push
andl
lcall
ja
xchg
and
out
ret
mov
add
add
decl
loope
rcrl
jae
sbb
dec
icebp
mov
sti
lahf
pop
scas
sti
mov
mov
test
inc
popa
mov
les
pushf
inc
pop
sub
and
jmp
repnz
push
stos
gs
mov
sahf
or
mov
testb
cmp
int
orb
xchg
stc
cmp
xchg
loop
incl
adc
cs
lea
xlat
pop
imul
cmp
mov
scas
clc
xchg
ljmp
es
ljmp
mov
loope
ret
mov
shll
sub
pushl
inc
lret
into
inc
js
xchg
andl
and
mov
pop
sub
movl
push
icebp
jg
adc
adc
pop
arpl
xchg
xor
clc
movsb
movsb
mov
call
loop
clc
inc
pop
inc
cmp
test
push
aad
repnz
pop
jb
cltd
push
mov
ljmp
cli
incl
subl
xchg
popa
add
rclb
movsl
mov
stos
lret
lcall
outsb
dec
pop
push
sub
lods
sbb
adc
xchg
stos
ret
out
xchg
mov
incl
and
mov
and
es
adcl
fldcw
pop
ds
decl
cs
shll
clc
xchg
mov
mov
testb
test
mov
cmp
shrl
loop
push
xchg
inc
adc
mov
sbb
pop
push
ljmp
xchg
jge
cli
or
ret
mov
jne
inc
rcl
loop
xor
mov
jb
cmpsl
jl
add
push
cltd
xor
test
iret
subb
jns
mov
or
lcall
insl
repnz
mov
xchg
nop
sarb
je
test
fucom
pop
aaa
inc
mov
outsl
in
cmpsl
daa
fwait
adc
pusha
mov
push
push
fldl2e
cmp
test
mov
jle
test
sbb
and
mov
mov
scas
and
jg
call
je
cmp
push
call
call
or
mov
sbb
pop
cmp
mov
lahf
jle
add
repz
call
incl
add
fpatan
mov
push
push
imul
xchg
adc
dec
dec
in
call
pop
and
mov
sbb
jecxz
push
xorl
outsb
out
std
int3
fidivrl
pop
popf
jns
cmp
out
ret
in
pop
data16
mov
ljmp
mov
jge
mov
add
idivl
push
push
or
ret
inc
sub
mov
cli
daa
into
rorb
mov
test
inc
addl
and
addr16
and
jbe
mov
adc
pushf
sbb
jg
cld
xchg
in
lret
mov
add
push
stos
jmp
or
inc
js
cmp
pop
mov
mov
icebp
jbe
cmp
mov
xchg
and
mov
mov
pop
dec
roll
xchg
fcom
aam
mov
jle
jmp
call
stc
lret
push
repnz
add
sub
or
pop
and
push
jge
pushl
push
pusha
imul
cltd
test
and
sub
push
std
xchg
cmp
in
push
cld
or
inc
pop
sub
lcall
call
int3
daa
dec
ret
dec
jge
push
stos
es
add
and
xorl
push
add
movsb
xchg
dec
pop
push
lock
xchg
decl
pop
or
repnz
in
cmp
pop
xor
das
jp
sub
dec
cld
pop
and
fnstsw
add
incl
mov
push
outsb
rcr
inc
xchg
ud1
daa
sbb
inc
cli
cwtl
fdivl
pcmpgtw
call
sbb
cmp
les
pop
sbb
gs
push
insl
fdivrs
pop
outsl
adc
mov
cmp
jp
adc
pop
push
or
shll
inc
out
or
lcall
push
add
jp
cwtl
inc
das
cli
mov
movsb
jmp
xlat
xchg
sub
and
dec
add
pushl
stos
push
adc
repz
dec
pop
mov
pop
enter
push
pusha
js
bound
ds
cmp
je
pushl
scas
sbb
ljmp
das
cmp
fdivrl
loopne
out
jae
jbe
jmp
movsl
add
xchg
jns
sub
push
xchg
in
sub
fwait
xchg
jmp
mov
call
lcall
xchg
jae,pt
enter
lods
dec
adc
mov
jmp
sub
movsb
clc
push
ret
cmp
je
stos
add
mov
xor
cmp
out
or
inc
daa
iret
test
cmpsb
cmc
int
sbb
out
pushl
mov
dec
sti
movsb
push
test
mov
int
inc
ss
cmc
push
sub
jmp
out
icebp
aam
push
mov
jge
movsl
cmovs
mov
xchg
call
std
or
movsl
sub
mov
ljmp
nop
mov
jae
and
pop
es
pushl
jl
testl
jo
stos
lret
push
ret
sar
int
push
clc
pop
jmp
cmp
mov
mov
sub
push
mov
jmp
pop
cmpsb
outsl
cmp
shll
lods
cmp
adc
jns
or
pusha
ficoms
sbb
stos
pusha
cmpsb
pop
mov
lret
adc
cld
and
lods
repz
inc
pop
push
xor
jo
int3
adc
daa
out
test
ljmp
cli
lcall
fbstp
xchg
or
and
es
mov
adc
das
sub
dec
jge
pop
loop
jmp
dec
fwait
rcl
or
mov
push
sub
rcrb
xchg
mov
sar
std
stc
push
cmpsl
scas
mov
jecxz
lea
xchg
push
lret
mov
stos
aam
lahf
scas
ljmp
hlt
mov
setbe
lahf
sarl
dec
pushl
push
repnz
dec
lcall
push
ss
inc
int
sbb
les
cltd
aad
add
stos
out
into
jg
xchg
cltd
mov
subl
sbb
fildll
mov
sbb
xchg
movsb
jge
decl
pop
cmpsb
leave
movsl
mov
fmull
shrl
addr16
jg
and
and
inc
imul
inc
cli
xor
popf
adc
int
mov
push
ljmp
xchg
dec
andl
mov
add
xchg
cmpsl
dec
inc
into
arpl
sbb
jmp
xchg
xchg
inc
cld
stos
mov
bound
xchg
test
nop
ss
mov
decl
cwtl
xchg
in
and
sub
lret
jns
daa
pushl
mov
jae
and
pop
pop
xchg
mulb
jmp
cltd
or
jbe
dec
pop
fdiv
cli
jno
pop
pop
push
push
jb
mov
out
or
mov
and
push
push
sbb
xchg
mov
lods
lods
or
cmp
aaa
mov
fildll
gs
movsb
pop
stc
push
lcall
cltd
gs
push
mov
outsl
and
gs
insb
add
mov
inc
mov
lcall
cs
jecxz
mov
ja
add
in
inc
inc
psubsw
push
cmpsb
jmp
adc
pop
xchg
jae
or
es
dec
jle
cmp
sub
lods
and
lcall
aas
push
and
jno
push
enter
lds
dec
jne
ds
into
mov
mov
jl
sar
aam
mov
test
pop
js
orb
sub
add
mov
call
pushl
inc
ja
std
nop
popaw
test
dec
and
pushf
mov
dec
in
pop
call
rorb
insb
cmp
sub
add
lret
stos
sbb
jmp
mov
inc
js
aas
xchg
mov
push
jmp
and
push
scas
xchg
jmp
push
int3
jae
ret
fcomps
mov
adc
dec
xchg
int3
jmp
push
dec
inc
lcall
loopne
into
mov
adc
or
jno
xor
sar
push
push
jae
and
jl
jmp
arpl
mov
xor
mov
cmp
mov
mov
cmp
ljmp
xor
add
and
dec
test
dec
mov
pop
leave
or
into
lcall
xor
xchg
test
mov
fcomps
fisubl
mov
mov
pop
test
popf
jecxz
mov
push
lods
icebp
push
int
cli
shll
xor
xor
cmp
subl
lcall
mov
push
mov
daa
rolb
fs
pop
sbb
repz
adc
mov
lret
adc
pop
inc
mov
adcl
adc
decl
std
hlt
pusha
ljmp
push
out
pop
dec
dec
cld
dec
mov
fldenv
test
inc
clc
sbb
jmp
int3
insl
adc
xchg
ljmp
xchg
push
xchg
mov
or
mov
push
pop
test
repnz
je
int
ljmp
mov
subb
and
push
mov
sbb
stc
xchg
pop
xor
cmpsb
mov
cld
out
push
push
imul
jmp
jg
addr16
dec
sub
or
test
fdivp
out
mov
shll
push
in
mov
or
in
lcall
sub
pop
enter
sub
inc
stos
fiadds
xchg
lret
in
ljmp
pop
shl
cmc
stc
out
aam
pop
inc
sbb
push
sbb
repnz
filds
sbb
out
xor
cmpsb
or
jmp
xchg
or
cmpl
push
call
daa
sbb
sub
jg
jg
xchg
fnsave
sbb
xlat
stos
cmpsb
into
push
adcl
andl
ss
in
jmp
stos
xchg
imul
lahf
sub
cmp
out
ljmp
sbbb
inc
rolb
xor
add
push
cmp
jmp
ud0
push
cmp
push
or
jno
ret
fs
outsl
push
inc
into
jo
jmp
repz
outsl
popf
jl
test
xchg
cmp
test
jno
cwtl
decb
pusha
sub
pop
fs
in
xchg
jp
ljmp
icebp
std
insb
lods
add
decl
inc
lods
xor
pop
sub
jle
das
xor
ljmp
jl
mov
arpl
rorb
mov
xlat
mov
les
cmpsb
jmp
enter
push
jge
and
jmp
lcall
faddl
pusha
arpl
adc
dec
shl
cwtl
sbb
xlat
rol
in
mov
jmp
dec
repnz
add
xor
push
jb
lods
int
rcrb
mov
stc
xchg
ja
xlat
out
cli
sbb
insb
pop
jns
pusha
mov
mov
std
test
decl
cmp
test
rcll
dec
je
mov
and
insb
dec
andb
aas
or
adc
hlt
outsl
adc
lret
push
je
pop
mov
jns
xlat
popf
jle
call
cmp
push
inc
out
mov
sub
fadd
sub
js
movl
mov
outsb
push
popa
jno
inc
cmp
push
adc
je
fnsave
and
orb
test
pop
mov
dec
xor
enter
fs
cmp
adc
push
iret
mov
add
jno
xor
test
mov
xchg
pop
popa
into
gs
stos
adc
jmp
cwtl
sbb
lock
mov
add
xor
loopne
and
add
loopne
decl
outsl
in
push
or
xchg
jnp
insb
mov
jl
in
cmp
repnz
inc
push
adc
sti
adc
inc
imul
push
mov
call
ss
fidivrl
xchg
bound
jge
jecxz
cmpsb
nop
or
pop
lahf
fisttps
and
dec
fidivrs
adc
cs
call
dec
xor
jae
int3
inc
fadds
inc
gs
in
pop
aaa
or
fisubs
loop
sbb
push
pop
xor
out
jb
mov
int3
nop
push
outsl
in
clc
pop
inc
lods
into
ret
shlb
mov
lret
icebp
push
sbb
aaa
mov
aam
sub
lcall
rorb
add
mov
jecxz
xlat
push
cmp
push
dec
push
hlt
lea
pushl
std
pushf
add
les
cmp
mov
dec
sub
call
or
fstl
push
pushf
add
push
sarb
int
sarb
ja
jnp
and
pushl
mov
push
push
push
push
sbb
cmpb
test
mov
cmp
repnz
incl
sahf
sub
cs
pop
cmp
pop
fstp
insl
fwait
fwait
and
addb
clc
ljmp
sub
cli
nop
ja
pushf
add
push
jl
xor
or
dec
decl
es
jp
mov
push
xor
mov
icebp
ss
ljmp
add
xlat
stos
out
ja
test
in
push
push
xchg
and
cmp
adc
and
push
jmp
daa
lea
lock
mov
xchg
xchg
mov
mov
add
stos
inc
fcomip
jmp
sub
pop
das
jl
adc
test
fstpl
popf
repz
ljmp
fcompl
daa
arpl
jle
jno
mov
ret
jo
mov
jmp
xor
adc
cli
int
dec
mov
gs
sub
mov
call
lahf
les
dec
jmp
or
dec
add
jno
or
jl
scas
test
ss
fadd
or
ljmp
sub
jmp
fs
mov
out
cmp
ds
mov
push
xor
push
push
lret
sub
pushl
push
mov
cmpsl
add
inc
dec
fistpl
out
repz
call
fiadds
sub
pop
pop
xchg
imul
js
clc
mov
pop
cmpsl
pushl
insl
dec
ljmp
bound
mov
sub
sub
js
push
fmul
mov
out
outsl
movsb
xlat
jp
jns
leave
cs
dec
xchg
mov
pmaxsw
add
loop
adc
jbe
pop
insb
cmp
inc
add
jae
mov
push
adc
lcall
and
xor
dec
push
jb
in
cmp
mov
xchg
dec
iret
fcomip
pop
cmc
push
je
bound
mov
sbb
jo
mov
call
aas
jae
ud2
inc
cmp
lods
scas
add
es
add
sbb
fildl
cmp
lock
and
push
mov
daa
sub
add
adc
add
pop
cmp
out
jmp
scas
ljmp
mov
jmp
data16
test
add
xorl
xor
push
js
ja
mov
incl
jmp
sahf
and
jo
mov
sub
loope
lock
dec
mov
mov
jne
out
jbe
xlat
mov
gs
mov
or
fstpt
mov
push
int
lods
mov
loope
adc
mov
shll
dec
iret
jp
jns
loopne
sbb
mov
ljmp
inc
or
mov
out
mov
mov
cmp
add
jmp
incl
mov
sub
push
sub
bound
out
stos
mov
mov
ficomps
jns
or
inc
loopne
out
mov
fsubrp
and
sti
dec
sbb
adc
popw
add
out
sbb
scas
dec
mov
jbe
mov
or
jb
mov
call
and
inc
or
aaa
push
ljmp
or
sbb
fcompl
lods
dec
aam
sub
loope
pop
xor
rorl
mov
mov
pop
orl
jg
and
nop
jmp
add
adc
push
roll
pop
stc
call
cmp
push
mov
push
test
and
or
pop
pop
movsl
adc
pop
cmpb
cld
gs
in
sub
shrb
mov
ret
jmp
or
enter
es
push
adc
flds
cmp
mov
sbb
pusha
adc
jno
sbb
pushl
or
in
cmp
test
lock
add
leave
inc
jge
incl
xchg
fildl
mov
iret
stos
fbld
or
mov
mov
jge
mov
repnz
lret
mov
mov
pop
cld
incl
test
adc
xchg
pop
movsl
inc
sbb
stos
lock
cli
push
std
call
pop
lcall
mov
mov
push
shlb
jp
ljmp
imul
and
jl
cmp
jne
shlb
loopne
repz
mov
cmp
loope
lods
mov
jnp
mov
add
mov
outsl
call
xor
int
add
pop
insb
fmull
mov
sub
mov
inc
xchg
inc
xor
pop
in
andps
jl
or
ret
add
push
cmp
das
fs
sub
inc
stos
std
push
adc
adc
aaa
movsl
or
loopne
and
mov
jmp
jo
and
jmp
test
test
ss
push
cld
add
dec
out
jl
in
or
cmp
mov
xchg
xchg
add
mov
sub
scas
or
jmp
add
in
mov
jae
xlat
jl
add
lods
subl
sbb
dec
or
mov
xor
pop
push
push
lock
jmp
inc
pop
movsl
push
xor
rclb
std
movsb
lahf
repnz
sbb
lcall
pop
popa
notl
sub
popa
jns
and
decl
add
cmp
aam
lcall
push
push
sahf
mov
call
sbb
push
dec
xlat
fwait
jb
push
cmp
push
sbb
xor
cld
decl
push
fidivrl
add
dec
dec
mov
pop
movb
pop
sbb
inc
icebp
decl
out
inc
out
data16
sbb
jns
cmpsb
int
mov
stos
mov
pop
lret
imulb
scas
lcall
xor
inc
hlt
leave
xchg
test
out
lock
out
icebp
xbegin
hlt
pop
dec
fdivl
shll
std
stc
and
xlat
pop
movsb
inc
mov
outsb
sbb
adc
fwait
or
clc
pop
xor
adc
sub
cmp
jg
testl
push
movsb
pop
add
xchg
shrb
jl
xchg
cli
in
pushl
jp
insl
lea
bound
pushl
movsb
pop
lcall
jle
dec
lods
arpl
sbb
movsl
mov
fsubrl
cmp
lcall
pusha
jl
add
xchg
adc
inc
out
mov
lods
aaa
cmp
ljmp
enter
lock
imul
addr16
loop
inc
dec
jno
xlat
decl
sbbl
insl
xor
ror
and
out
mov
jg
repnz
xchg
not
jmp
cmp
cwtl
mov
lea
mov
mov
loop
pop
fstpt
jne
outsb
jl
fisubl
xchg
pop
jg
push
cmp
dec
xor
pop
mov
shrb
mov
mov
popa
inc
cltd
incl
aam
cmpsl
les
jl
je
mov
ja
lret
mov
push
popf
dec
mov
aas
out
pushl
mov
mov
pop
lds
adc
push
cmpsb
incl
shrb
add
shl
dec
fcmovb
pop
loop
jbe
add
xchg
xor
push
sti
lret
xor
ljmp
mov
push
adc
dec
adc
pop
movsb
jp
pusha
cmp
pop
sub
mov
xchg
pop
add
fimull
fs
add
jle
jnp
mov
call
mov
xor
mov
xlat
sbb
cwtl
sub
scas
rcll
mov
sarl
xor
cli
adc
aas
lahf
sub
mov
mov
int
mov
push
dec
cmp
sarb
test
add
dec
lock
incl
shrb
or
stos
xor
jmp
stc
xor
sbb
std
ljmp
ja
inc
mov
or
jge
or
or
jo
dec
mov
pushf
mov
pop
gs
ljmp
stos
sbb
mov
push
stos
push
cs
pushl
inc
jecxz
jp
lret
cli
cmpsl
mov
mov
lret
insb
or
inc
push
bound
les
out
stos
jmp
stos
rcl
dec
pop
push
in
cld
pop
repnz
sub
push
out
inc
xchg
lcall
call
inc
push
pop
rcll
jne
fwait
push
dec
sar
pushf
ja
and
sub
or
jp
xor
sti
stc
mov
cs
lret
inc
pop
icebp
decl
cmp
and
in
cmpsl
xor
add
cs
jg
call
rclb
xor
pop
loope
xchg
inc
lret
jg
aaa
mov
testb
and
test
jl
rorb
adc
push
and
out
ljmp
and
lea
aaa
jb
in
repz
push
or
insb
add
pushl
jo
stc
out
das
cltd
inc
lods
int3
enter
addr16
in
adc
rolb
push
fsubr
inc
jbe
lcall
in
rolb
inc
mov
adc
push
mov
ret
sbb
mov
out
sbb
lock
mov
daa
enter
mov
pop
outsl
je
dec
shlb
add
shl
pushf
repz
cmp
mov
test
and
sbb
popf
mov
jp
xor
mov
idivb
xchg
xor
frstor
adc
cli
xchg
data16
lret
sub
pop
add
cs
movsb
push
jae
add
in
jnp
fs
ljmp
ss
clc
dec
inc
cmpl
or
rcrb
rcrl
mov
inc
cmp
pop
decb
leave
cmp
mov
push
inc
and
and
and
fwait
in
adc
sub
dec
mov
mov
out
les
fcoml
cmp
sub
orl
fimuls
jmp
fidivrs
sbb
lcall
lods
mov
divb
xlat
push
imul
popa
sbb
jmp
push
cmp
dec
jo
imul
dec
jmp
cmp
mov
fisttps
std
scas
mov
sub
lcall
jmp
movsb
call
std
decl
jne
out
add
add
xchg
daa
or
call
jmp
push
sub
adc
rcll
ds
push
stos
inc
mov
dec
pop
and
mov
lock
enter
jae
std
mov
cmc
jae
movsb
add
lock
lcall
lock
sub
inc
jne
mov
rcr
add
in
in
lcall
push
ficompl
lea
out
dec
incb
inc
out
dec
push
push
out
pop
sbb
ljmp
mov
ja
cmc
pop
sbbl
sbb
popf
fsubrs
pop
pop
adc
lock
ds
sbb
in
mov
add
inc
and
in
xlat
mov
pushl
ljmp
or
jp
jl
lea
cmp
sub
call
cwtl
pop
xchg
shlb
pop
jb
jo
scas
js
mov
insl
jmp
into
dec
xlat
mov
push
outsb
push
test
cli
lret
imul
push
mov
popa
adcl
dec
cli
or
xor
ljmp
jmp
pop
push
mov
out
arpl
fs
bound
clc
mov
jnp
fnsave
lea
push
dec
sbb
aaa
add
xchg
int3
add
inc
fdivs
aas
sub
push
push
push
adcb
cmp
inc
stos
mulb
aaa
fidivs
sti
ds
cli
in
insb
out
adc
inc
xor
scas
pop
fwait
add
dec
in
cs
jbe
aas
mov
mov
add
sub
call
cmp
imul
jle
fisubrl
push
xchg
pushl
movsl
mov
mov
movsb
in
insb
test
sub
cmp
inc
lcall
sub
sbb
test
cmpsb
mov
or
cwtl
frstor
sti
cli
lcall
push
fs
aas
inc
adc
addr16
push
faddp
jle
popa
aam
sti
mov
outsb
mov
icebp
pop
hlt
pusha
push
lret
mov
das
lret
dec
or
lcall
jecxz
rcrl
dec
dec
inc
jno
mov
iret
out
push
stos
sbb
sar
inc
add
or
addb
push
jg
and
jge
lret
shr
mov
ja
inc
call
jg
icebp
xchg
cmc
mov
jnp
fldl
xchg
rclb
and
mov
decl
imul
out
xor
xor
sbb
push
subb
out
xor
xor
fincstp
fldenv
movsb
imul
cmp
xor
je
cmc
in
jmp
daa
sbb
inc
scas
add
test
inc
jb
loopne
cwtl
lret
xor
and
lcall
lret
cli
and
addr16
es
mov
or
loope
sbb
mov
rcrl
jle
jno
or
sti
pushl
ja
pushaw
lea
mov
xlat
sbb
out
stc
pop
outsl
aam
sbb
aam
decl
addr16
inc
pop
cmp
leave
sbb
movsb
test
stos
pop
adc
ljmp
scas
icebp
mov
mov
aad
and
incl
mov
jecxz
fsub
gs
sahf
add
inc
xchg
inc
enter
outsl
cli
decl
mov
jl
dec
leave
stc
inc
nop
js
sub
movsb
iret
out
dec
lcall
icebp
jge
mov
xor
pop
xor
stc
push
lock
cld
fimull
in
cli
xor
xchg
pop
roll
and
rcrb
out
lods
rcll
sar
jg
std
ds
adcb
ja
adc
shrd
mov
push
cmp
das
cmp
xor
jo
outsl
in
jns
fldl
xor
inc
jl
or
sar
mov
pop
movsb
mov
jle
outsl
lcall
jmp
cld
dec
and
jbe
inc
lret
aam
mov
add
jg
test
xchg
cld
sub
cmpb
incl
scas
mov
or
call
mov
inc
xchg
hlt
decl
jnp
out
into
push
repz
pop
or
sbb
fbstp
movsl
aaa
repnz
push
sbbl
scas
xchg
ds
lods
out
mov
cmp
jecxz
out
add
cli
sbb
aad
fdivp
mov
and
cwtl
fimuls
mov
cmp
jmp
add
dec
aaa
xchg
sub
pop
outsl
lcall
cld
mov
scas
adc
add
pop
iret
fildll
xor
repz
clc
test
fstl
mov
bound
mov
push
pop
xchg
shlb
jmp
lods
ficomps
inc
mov
test
add
fisubrs
gs
ds
pop
and
imul
push
hlt
decl
jp
fisubrl
rorb
adc
xchg
stc
add
add
fwait
xchg
lcall
or
push
rclb
push
jmp
lcall
jecxz
inc
adc
rclb
ret
xchg
and
aam
cmc
sbb
mov
jmp
jmp
push
inc
add
jmp
stos
dec
xchg
cmp
scas
xchg
testb
jg
andb
add
enter
sbb
add
ljmp
pop
data16
mov
shll
cmp
nop
aam
sub
add
push
stos
adc
inc
shrb
pushl
daa
mov
cli
pop
xchg
or
dec
mov
dec
jmp
test
sar
cmp
daa
mov
sub
adc
adc
pop
int3
aas
jg
incl
es
mov
nop
ds
inc
mov
sbbl
ret
mov
mov
cmpl
xchg
or
mov
xor
xor
imull
inc
ljmp
inc
fsubrs
icebp
sbb
enter
les
test
jge
loop
xchg
mov
das
ret
xor
jnp
xor
pop
inc
rcrb
shrl
xor
cmp
aam
lret
in
insl
cmp
in
data16
jnp
jecxz
cli
jbe
shrb
cmc
push
sub
aas
cli
cmp
incl
jns
mov
xchg
jns
sub
fildl
aam
jo
and
mov
jb
jae
call
sbb
rcll
lock
and
out
shrl
mov
les
andb
decl
test
and
mov
sbb
sbb
cmp
push
insb
xor
arpl
lcall
inc
or
test
stos
add
mov
push
out
jnp
inc
mov
jmp
js
out
fmuls
add
dec
fldenv
cmp
ret
leave
hlt
mov
incl
and
daa
ficoml
cmp
aas
dec
outsl
imul
rol
int3
pop
addr16
pushl
and
jecxz
sbb
push
inc
sbb
imul
imul
incl
or
xchg
jl
repnz
xlat
push
mov
mov
inc
aaa
cld
aas
gs
mov
push
jb
popa
mov
mov
mov
xor
mov
lcall
push
cs
mov
push
cmp
data16
jmp
ret
movb
icebp
pop
mov
push
lret
inc
je
sbb
mov
outsl
lock
fisubrl
call
pop
in
das
pop
xor
jnp
push
xor
addr16
lods
mov
jge
and
mov
push
lcall
cmp
aaa
rcll
mov
mov
or
cmp
push
outsb
test
sar
decl
lret
or
or
stos
aas
mov
push
clc
jnp
xor
jnp
and
das
faddl
jmp
and
push
out
data16
notl
sahf
pop
cld
xchg
call
dec
pop
sbb
mov
sbb
ljmp
clc
aad
stos
push
leave
lcall
aad
sub
push
dec
loope
dec
xchg
les
cmp
mov
inc
sbb
mov
dec
and
daa
aaa
mov
call
fcmovnu
xlat
mov
dec
leave
ja
test
rorl
mov
mov
popf
stos
inc
jmp
sti
in
hlt
loope
mov
or
sub
lret
ret
les
aad
js
xor
outsl
in
es
add
cs
cwtl
jg
and
sub
pop
icebp
stos
mov
out
ljmp
sbb
fstps
xor
outsl
and
ljmp
xchg
insb
pop
test
add
adc
cmpsb
cmp
lcall
xchg
jp
mov
xchg
int3
xlat
movsb
int
ljmp
out
and
imul
sub
and
mov
sub
pop
cwtl
mov
dec
js
push
mov
mov
les
jns
ljmp
and
cli
cmc
mov
outsb
xlat
add
leave
ror
jbe
nop
popf
jle
sub
rorl
jae
sbb
cli
add
in
add
lock
aam
out
inc
jno
gs
imul
clc
xor
sbb
in
rclb
lret
lods
add
into
ljmp
xor
sub
scas
push
lods
clc
mov
mov
adc
fidivs
ljmp
sbb
mov
mov
aad
bound
repz
movsl
jg
inc
cmp
add
iret
push
mov
insb
popa
aas
lcall
xor
addr16
stc
mov
mov
push
mov
movsb
scas
icebp
sbb
pop
cmp
bound
lods
push
out
jmp
cmc
fcmovu
cmc
incl
sbb
adc
mov
mov
dec
shlb
adc
add
push
or
cmp
outsl
clc
call
inc
pusha
leave
stc
jge
inc
or
pop
fiadds
sti
pushl
inc
dec
imul
out
or
aad
sub
dec
sbb
imul
jg
pop
push
stos
loopne
arpl
loope
jns
push
pop
adc
cli
mov
jnp
fwait
adc
out
xchg
jne
jb
dec
or
je
ja
pop
xchg
outsl
clc
jnp
rolb
scas
shlb
roll
and
cmp
lcall
prefetchw
or
cltd
jge
xor
sub
cmp
jnp
fdivrs
rclb
jmp
pop
dec
xor
fldcw
pop
jae
es
mov
add
inc
clc
addl
inc
lods
mov
dec
into
mov
pmaddwd
or
scas
je
mov
xchg
pop
adc
ljmp
test
int3
mov
mov
jne
incb
fisubrl
je
ljmp
cmp
stc
xor
push
pop
rcrl
xor
dec
adc
cli
mov
inc
sub
cwtl
clc
xchg
dec
lea
inc
ljmp
faddl
loope
dec
and
je
movsl
out
shlb
fwait
lahf
icebp
fcomip
push
loope,pn
dec
sbb
lahf
adc
mov
daa
test
push
hlt
in
jecxz
mov
add
pop
movsb
push
movsl
push
imull
pop
les
out
cmpsb
ljmp
or
sub
sub
mov
stos
push
fdivrl
stos
pop
ds
dec
lock
cltd
jbe
or
inc
lds
or
addr16
mov
lret
xor
clc
xchg
fcompl
add
aad
cwtl
jge
xor
and
sbb
mov
ljmp
mov
jmp
mov
dec
xor
and
inc
xor
xchg
push
pushl
jb
call
mov
push
inc
sarl
mov
mov
mov
in
movsl
sub
inc
faddl
ss
xchg
popf
xor
jg
loop
and
mov
testb
pop
sbb
xchg
jge
popf
es
jg
pushl
jp
dec
jp
imul
mov
popf
std
scas
in
aad
cmp
inc
sbb
ljmp
dec
call
mov
cmp
push
push
mov
pusha
jmp
rorb
and
call
jl
data16
scas
mov
inc
jecxz
adc
push
sarl
xchg
and
pop
dec
andb
fisubl
push
jl
fs
mov
jns
adc
inc
mov
sahf
cmpsb
push
jb
ja
in
cwtd
mov
test
dec
mov
pushl
out
xchg
mov
loope
inc
mov
fwait
mov
push
fsubrs
enter
sarl
std
in
imul
insl
lcall
sub
fs
jae
jbe
cltd
sub
daa
mov
mov
mov
fs
jmp
adc
xor
xchg
mov
cwtl
neg
xchg
adc
loopne
cmp
inc
aad
lret
fs
push
jg
adc
inc
stc
lods
lcall
out
push
xchg
shrl
popf
out
test
mull
outsl
iret
pop
jns
int
daa
ja
xchg
unpckhps
jg
cltd
inc
sahf
out
lea
jl
adc
test
push
jl
mov
rorb
in
aad
mov
jle
xchg
xchg
lcall
mov
push
bound
fsubl
jbe
outsb
pop
push
cmp
decl
xchg
test
xchg
popa
int3
xchg
and
jmp
mov
leave
aas
out
cmpsl
dec
add
pop
add
decl
int3
push
or
test
in
lds
push
rorb
scas
xchg
call
cld
xchg
xor
push
mov
test
into
xchg
jecxz
and
push
cs
fisubl
inc
iret
movsb
mov
xor
hlt
fcoms
jle
fisttps
push
fiadds
adc
decl
dec
inc
cmp
mov
fcompl
sbb
xor
fcoml
movl
dec
shll
pop
sbbb
inc
dec
jg
stc
inc
ret
stos
adc
mov
lcall
lret
jmp
test
jp
or
ss
ds
je
pushf
aam
pop
add
sbb
xor
adc
icebp
sub
iret
mov
leave
xor
add
jp
inc
leave
cld
jbe
mov
out
mov
or
in
lods
push
inc
cwtl
jno
bound
mov
std
push
or
jp
aas
out
cmp
dec
cld
rcll
outsl
xor
addr16
addr16
imul
ljmp
adc
aam
xchg
pop
sbb
cmp
cmp
mov
dec
scas
push
mov
clc
pop
jge
shrl
movsb
hlt
enter
fs
imul
jecxz
scas
push
pushl
std
xor
int3
loopne
out
xchg
cmc
lret
mov
ret
cld
mov
and
leave
movsb
or
add
push
cmpsb
sbb
pop
pushl
cld
in
ja
and
lea
aad
fsubl
outsl
ret
cmp
ret
push
jmp
inc
xchg
dec
ret
fisttpl
rcrb
outsb
test
mov
adc
mov
decl
add
push
bound
push
fildl
or
cmp
mov
inc
add
fmull
insb
xor
pop
lcall
fs
ljmp
add
shr
jo
mov
pusha
or
movsl
lock
rol
adc
mov
cli
call
xchg
sar
xor
xor
add
mov
and
popf
and
adc
push
in
and
sub
incl
mov
jo
mov
mov
nop
shlb
jl
dec
movsb
sar
pop
std
pushl
test
movsl
mov
lcall
lret
push
dec
stc
xor
lcall
pushl
add
int3
repnz
ds
dec
jae
bnd
decl
add
add
data16
fnstenv
sar
insl
shl
decl
in
jecxz
sub
cmpsb
sub
hlt
insl
push
jno
nop
fwait
shrb
out
inc
pusha
loope
lcall
out
sub
mov
ret
dec
bound
jle
cmp
divl
test
mov
ret
repz
js
fstpt
repnz
lcall
out
or
cmpsl
add
je
cld
idiv
call
pop
push
mov
aaa
xor
jle
xchg
jns
jl
shr
lock
jg
sub
fiaddl
sub
jnp
xor
call
iret
push
out
repz
pop
cltd
cmp
in
mov
mov
pushl
outsb
pop
sbb
push
cs
std
add
andl
ljmp
xor
cli
hlt
pusha
ret
push
add
sbb
lods
adc
inc
inc
movsb
mov
into
xchg
sti
cmp
jmp
jp
or
mov
test
lock
and
mov
aad
push
out
mov
mov
push
fdivr
ljmp
cmp
mov
sbb
mov
and
inc
mov
jecxz
jl
cmp
mov
iret
outsb
xchg
add
cmp
sarb
orb
pop
icebp
sbb
mov
jl
push
add
sahf
arpl
push
push
testl
or
and
sbb
pushl
test
pop
fucomip
jg
mov
sub
call
add
pop
jle
lcall
test
add
out
sbb
mov
and
push
pushl
mov
mov
cmp
nop
fucomi
pop
adc
loope
and
addr16
call
mov
fwait
jb
cmp
jmp
and
arpl
stos
pop
ljmp
out
cmp
in
dec
iret
sbb
inc
nop
sbb
enter
jmp
movsb
adc
sbb
fldl
bound
pop
or
fisttpll
out
int3
dec
lods
sti
lods
int3
adc
sbb
aam
mov
mov
push
out
daa
pop
cmp
in
lock
mov
or
xor
dec
dec
pop
rcrb
leave
ret
cmc
pop
lret
fnsave
imul
lret
add
pop
testb
pop
push
stc
pop
ljmp
jmp
into
xchg
add
mov
cwtl
fcomp
scas
inc
ljmp
pushl
fisttps
or
pop
pop
jp
jp
sbb
add
dec
jmp
jmp
rcrb
and
mov
dec
jmp
push
xchg
out
inc
xor
or
cld
jne
aad
pop
jmp
mov
test
mov
mov
xor
xchg
inc
fdiv
pop
cmp
ret
and
popa
cwtl
push
cmp
call
mov
dec
xchg
jg
pop
inc
sbb
mov
test
push
mov
repnz
jge
sbbb
jno
lcall
sbb
rorl
out
add
enter
mov
push
sbb
mov
push
jg
fbstp
sbb
inc
nop
cmp
stc
hlt
fwait
lds
test
inc
std
cmpsl
push
outsl
cli
sub
js
stos
cs
lds
dec
jno
clc
inc
nop
and
stos
stc
data16
jg
cmp
xchg
xchg
cli
or
int
mov
xor
pop
fs
dec
pop
popa
in
push
imul
xchg
dec
xor
jg
jle
mov
in
xchg
or
pop
imul
lock
into
dec
gs
incl
subb
lods
mov
sbb
xchg
lea
daa
jg
je
pop
push
and
push
in
fistl
in
addr16
sbb
incb
sahf
mov
loop
fsub
call
mov
ret
inc
mov
fidivs
xchg
mov
mov
xor
bnd
xchg
sahf
hlt
call
sub
ror
stc
inc
dec
stc
pop
in
out
xchg
xchg
add
lcall
xlat
cli
adc
xchg
dec
xor
inc
dec
fldt
fmuls
sub
lds
ljmp
shll
mov
stc
jmp
fsubr
push
sub
pop
push
push
mov
inc
pop
mov
cwtl
xlat
movsb
dec
outsb
or
ljmp
sub
cmp
pusha
sbb
pop
pop
subl
jg
or
or
cmp
aad
mov
xor
stos
cmp
sub
popf
ds
jg
call
mov
xchg
inc
mov
fs
movsb
into
in
dec
sub
dec
hlt
cs
rol
mov
lahf
in
sarb
push
mov
cmp
xchg
mov
adc
in
mov
gs
cmp
fwait
mov
adc
cmp
pop
jmp
or
data16
dec
pop
sbb
mov
pop
loope
and
mov
sub
xor
adc
fstpt
outsl
les
test
mov
imul
jne
bound
stc
push
jg
or
cmpsl
xchg
sub
mov
fldl
les
call
push
fsubs
or
clc
inc
mov
dec
ljmp
mov
mov
decl
sahf
mov
jl
mov
mov
addr16
dec
call
lret
push
jo
jle
xchg
push
ret
iret
repnz
pop
pop
pop
movsl
xor
jb
and
dec
xchg
outsl
sbb
loopne
ds
mov
mov
dec
xchg
addr16
test
in
xor
daa
adc
filds
pushl
aam
out
das
mov
dec
std
ret
jo
cmc
jns
out
jno
pushf
and
std
push
sub
gs
cld
cmp
push
adcb
pop
sti
outsl
xchg
call
fldenv
divb
cltd
lret
mov
imul
subl
shl
mov
das
stos
fisubs
pop
out
mulb
adc
adc
mov
decl
pushf
sbb
mov
jno
std
dec
test
and
lds
dec
mov
and
fdivr
inc
das
and
mov
dec
inc
ficomps
ljmp
fsubr
shrl
mov
mov
loop
es
mov
ljmp
loope
jae
scas
push
xor
cmp
mov
mov
xor
xor
popf
dec
ljmp
movsl
sahf
call
and
bound
lahf
out
adc
jge
je
stos
dec
jecxz
clc
fcmovne
push
out
push
jo
sbb
sub
jmp
iret
sbb
in
jle
movsb
xchg
jge
inc
in
mov
mov
cli
mov
mov
mov
mov
in
bound
adc
cmc
dec
mov
decb
in
addb
in
mov
or
imul
mov
incl
ljmp
sub
cmp
sub
popf
push
xor
pusha
hlt
dec
into
mov
jmp
call
sti
enter
push
cltd
in
aaa
push
sub
aaa
xchg
xchg
cmpsl
testl
movsb
scas
scas
int
cmpsb
lcall
xlat
stos
fisubs
scas
jbe
cmp
rcrl
movsb
push
pop
ret
mov
aam
dec
inc
int
push
or
les
cld
xchg
xchg
adc
std
cmp
and
lret
outsl
pusha
shlb
fdivrl
sbbb
lcall
ljmp
fadds
push
pop
adc
pop
cmp
mov
stos
ret
pop
loop
cmp
incl
mov
mov
sub
pushf
and
adc
popf
xor
dec
outsl
mov
pushl
in
mov
sub
jmp
insb
out
cli
push
mov
push
or
xor
jecxz
or
ljmp
xchg
add
aad
ljmp
sub
inc
into
and
out
push
xor
lods
mov
add
std
dec
cwtl
inc
insb
cmp
ljmp
into
iret
mov
mov
push
xchg
movsb
ret
xor
jg
fsubrs
inc
mov
mov
rorb
decl
fcoms
xlat
mov
xor
push
ja
sti
mov
or
call
dec
push
dec
cmc
push
mov
ds
incl
inc
sub
cmp
sbb
sub
xor
pop
lret
jle
xchg
sub
incl
push
push
inc
mov
sbb
xchg
outsl
js
sahf
xor
pop
xor
lcall
xor
cmp
test
jne
fwait
idivl
xor
stos
mov
dec
xchg
dec
or
insl
retw
cli
xor
movsl
ljmp
push
ljmp
push
pop
push
insl
xchg
dec
aas
pop
notl
xchg
fmull
aam
leave
xor
notl
mov
call
nop
out
fdivrp
decl
mov
test
enter
mov
ljmp
rol
ljmp
in
dec
xchg
inc
das
aaa
nop
inc
mov
push
js
outsb
rorl
in
lods
rcl
pushf
mov
cld
cmp
lds
das
xchg
lods
and
nop
mov
cmp
jg
push
mov
sub
xchg
push
xor
inc
subl
fsubrp
adc
xor
xchg
fists
xorl
stc
add
nop
cmp
cltd
scas
pop
xchg
mov
loopne
inc
xor
test
cmp
jle
test
jp
cld
sub
ljmp
daa
aas
js
inc
leave
movsb
push
hlt
call
cld
call
lea
mov
add
mov
stos
mov
inc
insl
js
jmp
fcmovne
jnp
xor
hlt
lret
adc
dec
xor
jp
dec
sahf
mov
pop
add
das
clc
jo
or
sarb
daa
movsl
xchg
add
xor
sti
outsb
inc
cs
jg
mov
in
and
pop
mov
add
cmp
and
sahf
jbe
pop
mov
pop
test
jbe
ret
and
imul
jo
ficomps
jmp
test
mov
enter
sbb
nop
mov
pushf
mov
adc
jmp
jne
je
pop
mov
neg
push
cmp
inc
mov
dec
ud1
sub
aad
ljmp
or
rorb
pusha
stos
xor
sarb
imul
push
loope
add
iret
pop
mov
push
fwait
sbb
pop
and
sub
mov
imul
test
adc
aam
jge
incl
cmpsb
add
lret
sub
xchg
imul
in
mov
incl
scas
jne
arpl
cmp
xchg
jno
push
mov
mov
roll
incl
ret
adc
imul
sub
cli
lock
xor
lcall
aas
dec
mov
push
js
adc
ja
bound
xchg
cltd
incl
out
cld
jmp
xor
xor
lods
fstl
adc
xchg
pop
pusha
jo
ss
and
or
mov
outsl
or
jle
andl
mov
adc
mov
jecxz
imul
loope
aaa
fisttpl
js
das
mov
jp
add
test
inc
add
ret
out
aad
xorb
icebp
incl
in
stos
pop
stos
adc
push
pop
adc
int
mov
hlt
jno
push
testl
sub
jg
orl
jmp
mov
sub
jmp
push
outsb
sbb
int3
subb
sub
fistpl
add
cltd
orb
inc
frstor
je
imul
cld
lds
or
decl
enter
mov
fmuls
das
mov
jp
mov
out
clc
add
fcompl
cmc
pop
faddl
into
cmp
in
inc
fldcw
jg
cmpsl
mov
data16
fcmovne
rorb
std
xor
shrl
jmp
fdivs
xor
fwait
push
xor
jbe
int3
pop
add
test
fadds
loope
or
dec
popa
mov
cmp
bound
je
adc
sbb
cld
push
and
mov
xchg
jo
jno
mov
lcall
sub
cli
in
sahf
and
scas
add
xchg
inc
test
sar
testb
int
stc
test
pop
push
sub
or
fiaddl
dec
rolb
and
pop
loopne
xorps
int3
addr16
and
incl
in
jo
mov
mov
mov
xchg
or
insl
out
or
in
sarl
hlt
sbb
sub
add
push
and
push
jbe
xlat
out
pushl
movsl
mov
lahf
mov
inc
fmulp
pushf
std
aad
pop
in
jmp
mov
jo
test
jmp
loope
gs
cmpsl
adc
jae
sub
lods
repz
pop
ret
jmp
sti
jge
add
adcb
bound
mov
cmp
sbb
xchg
call
push
cmpsl
dec
fdivrl
push
and
jae
add
sarl
int3
add
pop
daa
leave
aas
loope
outsl
add
pushl
pushf
cli
pop
idivl
icebp
js
jmp
insl
ja
pop
icebp
jae
sarb
popa
in
xchg
xchg
loope
daa
inc
popa
mov
fsubrs
loopne
test
call
pop
loope
jle
inc
lods
sbb
decl
mov
jge
lret
jg
mov
mov
xchg
scas
sbb
mov
out
or
add
sahf
in
call
pushl
mov
mov
sbb
add
je
push
out
and
mov
mov
jo
enter
sub
loop
inc
xchg
push
xor
nop
sbb
pop
stc
mov
dec
ret
or
mov
bound
pop
mov
notl
hlt
scas
int3
xor
orb
les
lcall
fmull
mov
mov
outsl
mov
inc
out
jmp
je
inc
add
call
sub
xchg
bound
xchg
in
test
push
jg
cmp
push
pop
or
aaa
lcall
jmp
dec
xchg
add
lret
imul
ret
data16
dec
xor
jmp
jbe
inc
ret
imul
xlat
out
cmp
pop
mov
dec
addb
fimull
pushf
push
je
push
and
fisubrs
incl
fcomp
xor
lods
fucomip
cmp
jb
jge
daa
xchg
sbb
push
mov
dec
pushf
cmpsb
mov
or
repnz
mov
xor
ljmp
push
scas
pop
jb
fwait
cmp
pop
out
popa
adc
sahf
pop
cmp
cwtl
push
or
lcall
mov
int3
cmp
push
aaa
dec
adc
decl
in
xchg
mov
fadds
push
xchg
mov
iret
pop
daa
je
imul
aad
adc
lods
jmp
jbe
test
pop
pop
lds
dec
fcmovbe
push
push
inc
subb
sbb
ljmp
jbe
sub
enter
call
xchg
rclb
popa
jmp
cmpsl
pop
jmp
pop
mov
sbb
fs
pushl
add
aas
and
aas
stc
mov
bound
hlt
jecxz
push
mov
in
mov
adc
and
pextrw
xchg
mov
aaa
shl
incl
inc
mov
inc
sahf
test
sub
mov
dec
testl
mov
jmp
add
hlt
pusha
rol
dec
or
stc
inc
xor
sbb
mov
into
inc
adc
dec
mov
jmp
aam
push
insl
mov
outsl
pushf
sbb
mov
mov
add
xor
call
faddl
and
rclb
gs
pusha
stc
cmpsb
xor
add
sbb
fisubrs
mov
inc
outsl
mov
ljmp
mov
inc
cli
and
int3
xor
jo
movsb
test
push
adc
pop
test
out
dec
in
aaa
dec
pop
push
rol
and
aas
sub
sbb
mov
jmp
decl
pop
or
jl
jnp
fucom
cmp
mov
adc
call
cld
fcomip
or
and
mov
adc
dec
out
and
lock
decl
inc
mov
push
push
insb
push
std
xor
xor
add
out
sub
out
popa
iret
loope
stc
in
sub
fucomi
notl
fcmove
pushf
xchg
sahf
mov
ds
sub
lret
inc
scas
clc
jmp
and
lea
cmp
xor
xchg
les
jle
lea
sbb
das
push
mov
movsl
and
pushf
mov
test
pushl
mov
adc
ljmp
cmc
cmpsb
loop
mov
fisttps
scas
push
or
mov
call
hlt
addr16
jmp
cmp
push
jne
mov
std
mov
mov
add
dec
jbe
cmp
push
aaa
sbb
call
push
or
fbld
push
add
out
addb
pushl
sub
lea
mov
adc
fwait
inc
lret
pop
push
pop
cmp
call
std
dec
mov
sbbl
jle
and
xor
pop
pushl
dec
fs
mov
sbb
lcall
add
incl
std
mov
int
inc
ljmp
pop
push
incl
and
push
scas
xchg
or
ret
pop
mov
shlb
fimull
dec
push
loopne
test
jg
incl
popa
pop
mov
jge
in
xor
icebp
clc
ss
test
push
mov
bound
js
outsl
sbb
ret
push
gs
xchg
cmp
test
mov
xor
mov
push
mov
jae
sarb
lcall
imul
ljmp
xchg
ret
pop
push
jno
inc
es
jg
pushl
push
stc
dec
movsb
cmp
nop
cmc
je
test
scas
movsb
aas
out
icebp
pop
repz
dec
incl
mov
movsb
pop
add
test
lock
int
push
sti
xorl
iret
incb
cmp
call
fstpt
inc
imul
cli
dec
pop
mov
cld
adc
icebp
push
ljmp
popa
fwait
and
into
add
push
push
inc
xor
imul
ja
insl
outsl
mov
sti
leave
movsb
push
adc
scas
rcr
jl
mov
sbb
or
scas
scas
mov
push
add
pop
xchg
cmp
sti
pop
rorb
pop
pavgw
and
lods
mov
mov
js
ljmp
rcrb
negb
add
inc
mov
xlat
dec
ljmp
pop
int
int3
mov
add
sub
jecxz
xchg
ss
push
mov
enter
decl
cmc
dec
rorb
popa
jns
repz
adc
lret
dec
stos
mov
insl
push
popf
and
lcall
scas
ds
repz
lods
icebp
or
pop
cmp
mov
sahf
aam
in
call
testb
xor
or
dec
cmp
es
cmpsl
rcrb
dec
lret
mov
sahf
call
out
inc
mov
push
fdivrp
arpl
lea
movsl
mov
fadd
movl
pop
adc
mov
mov
cmp
iret
imul
fbstp
xlat
pushl
push
xlat
sbb
sub
cwtl
mov
xor
icebp
cmp
dec
fstp
decl
or
call
outsl
jg
jg
js
sbb
ret
mov
fiaddl
rorb
push
js
dec
lock
xchg
mov
mov
lcall
jp
lods
lock
pushl
fs
dec
sarl
push
cmc
mov
mov
stos
and
mov
inc
lods
jg
cmp
jg
leave
lds
mov
out
push
sbb
ljmp
out
or
jp
das
rorl
rcrl
or
lcall
mov
mov
mov
or
jmp
cmp
sub
scas
cltd
add
jb
iret
adc
sar
jmp
push
or
add
dec
dec
sar
mov
out
jmp
cli
sti
imul
jae
inc
jo
adc
dec
or
es
jo
ljmp
inc
inc
jb
push
xor
xor
add
push
lods
decl
jmp
and
jge
or
mov
cmpsb
mov
adc
mov
push
test
inc
std
test
aam
mov
sbb
push
jle
push
test
mov
xor
rcrl
cmp
jl
dec
adc
es
push
add
inc
stos
xor
mov
pop
nop
xchg
jne
nop
lods
out
jne
bound
call
iret
cltd
jl
adc
sarl
in
lods
and
mov
mov
xor
mov
jle
pop
and
xchg
mov
cltd
stos
lods
inc
jmp
clts
pushl
clc
notb
adc
jno
gs
xchg
jmp
cmp
fwait
or
pushl
push
out
cmp
mov
cli
enter
decl
cmp
lock
inc
les
shl
mov
ret
pop
jb
or
xor
pop
cmc
pushl
in
pop
sub
jno
lods
mov
pop
sub
shlb
andb
sub
ljmp
cmpsb
stc
imul
les
fisttpl
push
ds
cmp
jae
mov
jl
lods
push
testl
sub
popa
mov
subb
adc
jle
fld
mov
add
mul
mov
mov
mov
or
xchg
inc
xor
lcall
cmp
aad
insb
or
lahf
rdtsc
ret
xor
outsl
mov
mov
decl
bound
and
sbb
lods
inc
xchg
inc
test
and
fsts
cs
je,pt
mov
pushl
push
addr16
xchg
lock
sarl
sbb
sbbl
fildll
popf
dec
xchg
inc
stc
loop
sub
js
fsubr
adc
add
mov
cwtl
jecxz
rorb
loop
cmp
test
rcll
push
pop
aaa
sub
fcomip
call
inc
shll
es
push
push
ljmp
pop
pop
fwait
stc
or
aaa
jle
lcall
subb
mov
inc
clc
mov
mov
sub
and
es
shr
adc
rclb
incl
fistl
lods
push
arpl
push
inc
imul
sbb
mov
pop
cmc
leave
lcall
jb
lea
push
push
int3
fimuls
in
subb
sub
imul
add
cmp
add
cmc
in
lock
adc
inc
lock
pushl
jecxz
jecxz
sbb
adc
mov
je
lea
loop
fucom
setne
dec
jb
mov
incl
mov
pop
and
lret
dec
in
out
imul
adc
addb
decl
mov
sub
sahf
cmp
or
insb
popf
test
imul
pop
mov
mov
jp
and
sub
and
mov
rcrb
mov
inc
fbld
inc
imul
sub
sub
pusha
lcall
dec
out
subb
dec
and
and
shl
mov
cmp
mov
jns
lods
xchg
mov
outsb
mov
mov
sub
ja
cmpsl
ljmp
push
out
push
cltd
shll
loopne
out
daa
cmp
pop
aam
sar
jne
jmp
push
fildl
sub
pop
mulb
mov
adc
add
divl
leave
push
lcall
xchg
outsl
popa
jg
or
loop
ret
and
add
mov
jo
aad
inc
inc
sub
jmp
fisubrs
scas
xchg
xorl
les
popf
les
cs
cld
jmp
and
sbb
mov
cmpl
add
mov
mov
push
lock
xor
mov
pushf
xchg
mov
int3
jge
add
mov
and
aaa
sbb
paddb
adc
test
movsb
and
pushl
push
lea
pop
mov
or
xchg
and
cli
test
xlat
cltd
in
jns
jg
sti
shlb
imul
out
clc
repnz
out
fdivp
cmp
bound
fimull
mov
ror
xchg
test
add
ljmp
jbe
rorb
mov
testb
call
mov
add
sbb
or
xor
push
mov
gs
imul
push
loop
out
and
aam
mov
xor
clc
loopne
lahf
popa
mov
ljmp
bndstx
ret
out
pop
rolb
push
shlb
adc
subl
cmp
mov
jg
ss
jmp
sub
cmpsb
test
iret
pusha
dec
loopne
xchg
addr16
mov
insb
lcall
cmp
add
xor
mov
loop
loopne
decl
jmp
imul
mov
cwtl
call
push
jge
sbbb
jnp
std
jo
js
or
mov
in
gs
cmpl
push
mov
aam
and
fsubrs
enter
scas
leave
call
pop
add
pop
add
pop
xchg
push
mov
popa
xchg
cli
decl
outsb
pop
add
aad
outsb
pop
xchg
popa
push
push
add
dec
jecxz
out
or
mov
pop
cli
daa
sbb
scas
push
cmp
adc
mov
in
inc
and
call
add
dec
mov
lahf
aad
xor
add
pop
js
push
and
push
pop
insb
push
inc
or
out
jne
jp
push
xor
pop
inc
ret
addb
inc
jb
fnstsw
ja
imul
out
repnz
jo
imul
or
mov
or
ds
add
adc
push
inc
push
sub
dec
sbb
test
add
iret
sub
dec
filds
mov
push
outsl
outsl
insb
push
push
outsb
popa
jo
push
loope
roll
dec
sbb
fiaddl
or
xchg
and
adc
sbb
cmpsb
xchg
test
fcomip
inc
xor
ficoml
inc
push
inc
push
fcomps
leave
xor
sub
adc
imul
xchg
popa
fdecstp
andb
aad
jo
xor
inc
jmp
and
cmp
fucomp
mov
jns
push
imul
fs
sbb
mov
ljmp
push
ret
out
test
cmp
inc
dec
push
and
xchg
jo
or
fnstenv
add
inc
jl
cmp
cltd
and
and
dec
outsb
imul
insb
stos
fstl
data16
sub
xchg
or
mov
push
outsb
rol
loopne
flds
sub
xchg
fimuls
mov
or
ds
arpl
jae
mov
or
sub
push
fisubs
rorl
sbb
outsl
mov
and
ds
insb
jne
mulb
js
addl
xchg
adc
xor
pop
push
push
mov
loop
inc
sbb
jo
inc
push
fildl
test
rorb
outsb
mov
daa
jae
rclb
pop
xchg
push
sub
or
pop
inc
gs
adc
xchg
fdivrl
jae
adc
push
push
push
hlt
and
outsl
in
fs
dec
jns
out
xor
cmp
mov
lds
int3
adc
popa
loop
bound
pop
inc
sub
jo
packuswb
and
pop
pop
lods
mov
cltd
mov
jno
xor
pop
call
add
imull
popa
and
std
inc
sahf
mov
inc
push
xor
inc
enter
jp
jno
adc
or
outsl
popw
stos
push
popf
ficoml
js
insb
fcmovu
popa
push
xorl
push
andl
movb
and
ds
popf
mov
adc
sbb
push
repnz
sub
dec
jae
in
cmovbe
ficoml
mov
cmp
fistpl
mov
push
mov
dec
push
imul
inc
push
loopne
adc
lods
xor
js
ret
roll
fildll
or
cmpsb
or
lods
call
and
mov
fidivrl
and
inc
popa
cmp
jo
jp
or
push
jg
insb
or
mov
jge
adc
push
andl
aam
or
xor
adc
outsl
jns
dec
mov
stc
int
push
xchg
jae
gs
and
pop
pop
imul
int
insl
outsl
jns
inc
je
cmc
ss
pop
mov
or
gs
inc
cmp
sbbb
push
mov
imul
aas
inc
xchg
divb
and
insl
adc
add
push
es
cmp
mov
add
xor
pushf
and
or
js
pop
stos
stos
loope
xor
push
inc
popf
cmp
or
pusha
cmp
dec
push
and
sub
inc
push
loope
jp
stos
rcrb
andb
sbbl
xchg
xlat
mov
out
mov
push
xor
cmp
pop
sbb
lret
pusha
imul
xor
or
inc
cmp
inc
xchg
or
cmpsl
push
outsl
xchg
push
int
sbb
movl
inc
lock
or
ret
add
shll
pop
stc
test
leave
lock
and
jns
push
push
divl
inc
subb
cmpsb
push
and
push
mov
mov
nopl
cltd
ror
pop
cmpsb
sarb
mov
mov
push
add
xor
inc
insb
jl
dec
pop
mov
inc
sub
add
ja
pop
fsubl
inc
sbb
jbe
add
dec
cmp
and
cmpl
or
adc
pop
fisttpl
cmp
add
sub
jnp
sub
loopne
adc
mov
adc
out
dec
shrl
mov
arpl
push
lret
fs
fs
aaa
rolb
xchg
je
and
push
cmp
call
add
push
adc
mov
fwait
sbb
pop
xchg
jo
inc
inc
pop
mov
mov
fsubs
inc
imul
push
or
outsl
inc
pop
sbb
fmuls
jmp
insl
rorb
adc
icebp
leave
sbb
inc
mov
repnz
jae
popf
dec
push
xor
aad
ret
stos
or
popf
mov
lods
cmp
sub
lods
push
imul
into
push
and
sbb
or
enter
dec
ja
les
xchg
shl
jecxz
push
cltd
mov
ret
inc
dec
push
push
pop
xor
jnp
and
addr16
enter
adc
push
push
adc
add
pop
jnp
dec
mov
pop
cmp
aaa
inc
ficompl
jnp
or
dec
outsb
dec
xor
mov
scas
mov
enter
sar
pop
add
shll
dec
add
mov
mov
mov
imul
or
push
adc
mov
inc
push
add
add
adc
stc
xor
or
mov
pop
mov
push
inc
jb
pusha
xorl
and
jge
sub
bound
cwtl
push
inc
ds
inc
jo
invd
jb
push
jb
inc
jae
push
push
leave
inc
shll
adc
xchg
imul
sbb
inc
jo
fs
xchg
pop
sub
repnz
shlb
rclb
push
bound
cmp
or
and
dec
add
mov
jle
xchg
pop
mov
in
mov
scas
xchg
int3
add
pop
mov
add
andb
adc
das
pop
xchg
mov
popf
mov
inc
popa
aad
paddsb
inc
fildll
and
test
mov
imul
subb
add
sub
mov
push
inc
jb
divb
addr16
and
mov
jmp
jns
cmp
push
pusha
xchg
loope
mov
xchg
jge
add
popa
aad
enter
jmp
push
and
enter
paddsw
pushf
insb
adc
sub
pop
xor
jg
xchg
ja
push
inc
inc
cmp
push
sbb
cmp
mov
xorb
pop
mov
dec
insl
pop
sub
mov
jns
fcoms
and
pusha
mov
inc
and
fwait
loopne
jmp
addl
or
sub
push
dec
mov
add
dec
out
cwtl
lds
ss
ret
test
int
push
push
ret
fsubr
xchg
jne
aad
icebp
subl
inc
and
mov
push
mov
add
or
mov
arpl
push
inc
or
jnp
xlat
outsb
pop
rol
or
jo
lods
sub
bound
or
or
rcr
sub
cs
sbb
push
fs
mov
push
cmp
push
aaa
fisubs
aaa
sub
mov
push
pop
fistl
dec
cld
adc
lahf
fcom
add
mov
add
mov
sbb
jns
stos
call
std
stos
subb
push
inc
out
adc
inc
imulb
ljmp
cmp
jmp
pop
xchg
dec
push
sub
lret
jae
inc
add
pusha
sub
pushw
mov
xlat
jo
add
jmp
sub
negl
sbb
sbb
dec
fwait
jp
mov
adc
or
mov
outsb
dec
dec
fchs
addb
or
mov
outsl
stos
add
lret
xchg
jnp
repz
inc
pop
xor
cmp
mov
xor
cmp
frstor
adcb
push
iret
push
ud0
jmp
push
mov
push
add
adc
fdivrs
cwtl
push
mov
dec
js
xchg
cmpsb
xor
pop
cs
adc
lock
add
and
fsubrl
jb
popa
adc
add
sub
sti
adc
shlb
loopne
ss
rcll
dec
add
push
repz
fsubrl
sahf
jae
arpl
xlat
jo
mov
and
lahf
clc
mov
bnd
dec
xchg
and
xor
add
add
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insl
inc
add
add
