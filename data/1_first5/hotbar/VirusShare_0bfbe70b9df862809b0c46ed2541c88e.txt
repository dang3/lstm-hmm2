divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
mov
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
scas
adc
jg
filds
mov
add
inc
jne
sub
sar
inc
je
insb
jo
or
ret
push
repz
adc
insl
fists
mov
xor
jnp
xor
clc
mov
mov
mov
call
pushl
mov
cwtl
adcb
sarl
cltd
data16
cmp
jle
mov
andl
sbb
adc
xlat
cwtl
hlt
cs
ja
sbb
adc
xchg
mov
cmpl
add
pop
shr
or
ja
jl
adc
or
or
dec
out
imul
in
sbb
push
push
mov
or
int
push
call
sub
add
xlat
or
pop
arpl
call
ret
add
in
sbb
into
lahf
mov
adc
add
inc
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
xchg
mov
adc
push
pop
lcall
popa
and
add
inc
dec
push
mov
dec
sub
ljmp
sbb
push
sub
add
scas
outsb
push
mov
aas
fadd
jae
push
stos
scas
sti
push
pop
pop
push
jno
pop
scas
dec
imul
add
pop
or
push
push
sbb
push
or
sub
add
mov
pop
cmp
push
mov
pop
aad
jp
aaa
ja
inc
pop
bound
adc
inc
lock
push
mov
cmp
or
rolb
or
sbb
push
clc
jge
insl
cmp
dec
pop
ljmp
push
hlt
mov
xor
mov
pop
ret
push
inc
shrl
pop
jae
cmp
int
inc
sub
inc
clc
ds
subb
or
xchg
daa
pop
push
jo
ss
push
sbb
xchg
or
orl
pop
adc
inc
test
adc
cmp
jg
mov
adc
adc
ret
shll
xorl
sub
fcompl
jmp
xchg
sbb
add
aas
mov
sub
push
mov
sar
push
pushl
cmp
ja
adc
sbb
add
push
mov
sti
add
adc
scas
and
xchg
jo
push
add
or
ret
icebp
cld
clc
sub
cmp
jle
mov
cmpl
or
push
add
loope
jmp
push
cmp
jge
xor
mov
add
pop
cltd
jge
enter
jmp
out
iret
mov
aam
cmp
mov
push
fidivrs
add
push
jne
jb
cmc
sbb
incb
add
xor
jbe
mov
call
jb
add
inc
addb
cmp
or
add
push
push
lea
fwait
mov
or
pop
sti
ficoml
xor
insl
int3
pop
hlt
into
mov
aam
add
cmp
fdivrs
cmpsl
mov
pop
adc
cld
fsubrs
mov
sbb
mov
ret
dec
lods
or
test
jle
cmp
mov
inc
jbe
push
inc
mov
add
pop
ja
sbb
push
mov
test
call
es
jns
sti
pop
fmull
fucomp
loope
mov
inc
jo
in
subl
popf
lock
jp
in
sahf
rorb
fadds
ret
and
adcb
prefetcht2
jbe
pop
and
and
cmp
and
cmp
scas
cmp
push
sar
push
push
adc
sub
in
cmp
jle
mov
out
mov
pushf
cmpl
je
push
cmp
cmp
jae
push
mov
push
cmp
inc
xchg
adc
shlb
pop
lret
add
sub
push
add
jb,pt
pop
add
xchg
pop
sub
fcoms
jnp
ljmp
je
cmp
aaa
cmp
fcoml
push
clc
icebp
negb
fidivs
jmp
xchg
call
add
sub
insb
or
cmpsb
imul
push
popa
cld
pop
xchg
out
cmp
jo
inc
sub
cltd
loop
dec
out
ret
aad
aaa
or
add
pop
pop
or
pop
lods
cli
push
xor
cmp
sub
lea
cmp
jne
push
mov
mov
push
push
add
adc
pusha
push
mov
mov
mov
mov
or
lcall
pop
dec
lret
sub
inc
mov
sarl
sahf
mov
fwait
mov
xor
loope
mov
movl
ja
dec
into
dec
testb
and
repnz
in
xchg
push
lret
add
sbb
ja
adc
mov
nop
xchg
add
mov
mov
lret
pusha
mov
mov
or
lret
xchg
lret
divl
mov
pushf
movsb
add
les
popa
xchg
push
xchg
sbb
jo
mov
push
aas
pop
dec
push
pop
pusha
sbb
repz
add
addl
or
out
lret
lea
pop
push
xor
scas
mov
xchg
pop
out
imul
pop
imul
add
mov
clc
add
push
dec
lret
xchg
js
lock
cmp
popf
lea
push
add
inc
imull
sub
outsb
xor
xchg
cld
mov
jbe
jbe
pusha
sub
nop
mov
leave
jle
jl
push
loopne
scas
push
jecxz
push
call
cltd
or
out
pusha
cmp
push
push
mov
test
inc
cmp
ret
js
sub
cwtl
dec
or
jne
add
shlb
addr16
mov
jno
mov
adc
xchg
fsubs
jo
stos
add
scas
inc
arpl
mov
and
jnp
stc
pusha
out
fdivrs
and
cmp
ret
mov
jecxz
mov
sbb
call
arpl
cs
outsl
mov
xchg
jne
add
or
inc
lea
or
cmpsl
fstps
sub
push
or
roll
or
inc
mov
mov
push
adc
or
sub
jle
inc
mov
xchg
dec
or
lock
cltd
lock
out
fbld
inc
ret
mov
cmpsl
pusha
aaa
ret
insl
adc
xchg
repnz
filds
ret
lea
loopne
push
pop
adc
xor
mov
push
add
test
sub
mov
sbb
mov
push
lock
inc
xor
and
mov
fistpll
js
or
ret
je
dec
je
push
adc
testl
adc
inc
xlat
inc
pop
loop
movsb
call
add
adc
pop
popa
sub
dec
jo
and
pop
add
jle
in
in
push
dec
mov
lahf
inc
jg
push
sub
push
cli
xor
xor
pusha
mov
add
and
sti
das
sti
popa
jl
stc
andl
sbb
sahf
lret
adc
mov
add
rcrb
pop
pop
jbe
lret
pop
fs
mov
rolb
add
xchg
call
stos
outsl
xchg
add
mov
clc
testl
sbb
or
dec
or
sub
or
fcmovu
js
and
adc
pop
add
fdiv
test
in
dec
fcoml
or
pushl
aas
dec
mov
fcomps
sar
inc
pop
xlat
ret
pop
mov
add
or
cmpb
jne
sbb
mov
or
jle
call
sbbb
mov
je
pop
push
clc
sbb
inc
pop
das
adcl
shl
dec
sub
xchg
scas
mov
cmp
jecxz
or
roll
push
sbb
adc
dec
cmpl
aaa
pop
sbb
dec
add
jp
dec
cmp
push
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jns
jne
dec
jns
mov
push
pop
xchg
xor
inc
xchg
movsb
xchg
lret
sub
and
andl
nop
into
or
mov
je
mov
push
icebp
into
scas
mov
and
push
xor
or
jp
and
das
pop
pop
pushf
sub
inc
inc
mov
mov
inc
and
loop
pusha
jmp
in
adc
leave
inc
jae
adc
daa
pop
repnz
sub
je
inc
je
cmp
cltd
sbb
xor
lahf
nop
icebp
std
mov
push
or
mov
xor
add
les
mov
sub
and
push
push
push
fcmovbe
pop
ljmp
lret
shrl
sbb
sbb
dec
incl
jl
cmp
mov
in
dec
xor
mov
in
insb
sarb
mov
clc
stc
shrb
or
pop
jbe
jne
dec
adc
adc
sbb
lods
cmc
test
push
loop
pop
add
sahf
push
xchg
jo
test
int
test
dec
add
push
mov
mov
mov
scas
dec
sti
fisubs
pop
mov
in
and
loope
pop
mov
inc
mov
fiaddl
call
push
mov
pushf
mov
adc
out
mov
lahf
lock
stos
loopne
inc
loop
push
shll
in
sub
cmp
mov
mov
sbb
mov
push
cld
das
cmp
cmp
mov
add
and
movl
jp
lock
fisubl
out
movsb
xor
test
aam
inc
aaa
mov
in
or
jo
popa
cmpl
lea
mov
call
faddl
pop
shlb
in
push
ljmp
mov
jmp
xor
push
pop
js
imul
je
in
sub
divps
and
or
je
mov
or
dec
and
les
je
jecxz
std
dec
sarl
sbb
mov
les
ret
push
sbb
neg
sbb
movsb
jmp
jae
ret
je
arpl
lods
xchg
xor
or
inc
lcall
push
fs
sahf
or
imul
mov
push
dec
cmpsb
in
mov
dec
xor
jns
clc
push
nop
nop
test
push
xor
ud2
je
adc
xchg
or
lods
add
push
mov
into
cmp
dec
outsl
pushf
fs
lea
jecxz
jns
mov
adc
jmp
int3
sub
lock
xor
aas
push
je
sub
sbb
loope
jo
fcoml
dec
out
fwait
mov
repz
je
shlb
scas
and
stc
mov
adc
pop
jae
stos
dec
movsl
test
xchg
inc
lcall
pop
cmp
xchg
fcoms
ret
sbb
movsb
cmp
nop
and
out
mov
int3
sbb
sbb
arpl
int3
xchg
pop
enter
and
enter
and
cmp
out
shl
sbb
xchg
mov
xchg
mov
mov
mov
add
mov
jle
pusha
sbb
and
sbb
jmp
ja
sub
jo
fdivl
scas
das
mov
ret
push
sbb
loopne
cmp
inc
xor
add
adc
mov
loopne
fdivr
adc
jmp
ficoml
xchg
mov
call
add
or
outsb
push
xchg
and
sbb
sub
lods
pop
inc
push
inc
adc
jns
es
ds
es
lret
inc
ds
cmp
out
fistpl
loopne
push
and
sarb
loope
and
and
shl
sbb
adc
mov
lea
xchg
dec
dec
inc
mov
inc
mov
xchg
push
mov
test
xchg
aas
insl
inc
mov
xchg
jns
sbb
pop
ret
and
outsb
pop
jmp
iret
mov
mov
loop
add
pusha
into
push
adc
mov
inc
mov
add
je
or
xchg
cmp
js
add
xor
pop
fs
fldenv
pop
jne
mov
fcmovne
push
xor
push
jmp
fdivs
and
adc
or
dec
push
mov
shll
or
add
outsb
inc
or
adc
xor
push
sbb
das
cld
clc
mov
fstpl
insl
sub
mov
mov
mov
push
scas
daa
pop
jbe
and
jl
mov
or
or
xchg
sbb
and
btc
xchg
pop
in
lret
adcl
pop
call
aaa
adc
clc
adc
sbb
adc
lret
test
loop
movsl
jno
ljmp
sbb
jne
cmp
into
adc
cmc
aaa
jecxz
adc
xor
cmp
sub
mov
adc
push
adc
imul
add
sub
sbb
insb
push
cld
pop
loop
inc
mov
neg
pop
dec
jne
pusha
xor
pop
jnp
daa
pop
sbb
inc
sbb
sbbb
push
or
add
xchg
sbb
popf
mov
sbb
add
sbb
jge
je
mov
mov
les
mov
andb
pop
nopl
mov
pop
stc
or
pop
fs
xchg
ret
testl
mov
push
cmp
je
or
je
xor
push
push
xor
shlb
jecxz
push
jmp
jg
data16
pop
cmp
in
or
repnz
adc
and
test
inc
cmpsb
jecxz
xchg
add
daa
add
or
or
add
bnd
fs
rcll
out
mov
cmp
or
jmp
es
jns
test
aaa
push
cmp
add
push
pop
in
cltd
sbb
test
stos
cmp
mov
iret
cwtl
pusha
cmp
movsl
lock
sub
int3
xor
xchg
and
adc
adc
pop
lret
add
es
jmp
add
sahf
lock
shrb
mov
mov
inc
shl
pop
shlb
sar
mov
and
test
out
push
and
and
push
sahf
rclb
pop
and
or
jo
loopne
lock
cmpsl
and
xchg
cmpsb
std
daa
cmp
rcr
add
mov
je
aas
decb
push
pop
pop
mov
dec
sbbb
orl
sub
cltd
test
test
fidivrs
adcl
fldcw
pop
push
in
inc
push
ljmp
sub
push
adc
test
add
in
inc
lret
ret
test
fldenv
aad
or
mov
push
stos
add
adc
data16
inc
pop
out
pop
xorl
notl
iret
fdivs
mov
adc
test
push
lret
mov
lods
mov
loope
hlt
and
push
loope
fsubs
jne
adc
push
shlb
rcrb
out
and
mov
adc
sarb
mov
lret
xchg
sbb
movsb
sub
mov
cmpsl
xchg
fs
push
add
call
jl
mov
and
inc
out
push
push
sbb
add
xchg
push
pop
fdivrs
cmpsl
test
test
call
push
enter
rcr
popf
clc
cmp
cmc
mov
mov
test
das
sub
ret
shlb
sub
sbb
mov
stc
cmpb
dec
negl
pusha
or
xor
cmp
xchg
cmp
out
jne
jge
pushl
jnp
xchg
inc
fdiv
testb
or
gs
fcmovb
cmpl
movsb
inc
xor
sub
jno
loopne
cmp
and
and
mov
and
xor
stc
dec
dec
xchg
and
xor
push
adc
addl
cld
ret
sbb
inc
stc
add
and
and
inc
mov
sub
add
and
test
sub
data16
and
mov
xchg
hlt
adc
jne
imul
inc
inc
fdivs
ds
xor
mov
pop
dec
rclb
dec
daa
pop
mov
sbb
mov
mov
sbb
cwtl
mov
loopne
out
test
and
pop
imul
mov
je
test
inc
sub
sti
pushf
mov
pop
out
cwtl
js
jge
jge
adc
je
push
adc
loopne
push
push
push
dec
adc
pop
push
xor
in
mov
or
jne
push
addr16
sub
xor
cmp
jne
cmpsl
mov
mov
jmp
cmp
pop
sbb
xor
enter
pusha
cmp
add
push
inc
sbb
mov
jmp
mov
repz
dec
mov
mov
add
sbb
stos
adc
and
and
test
fwait
dec
loop
out
add
ljmp
fadds
pop
push
xchg
in
iret
adc
and
popf
sbb
movsl
mov
in
dec
pushf
jl
loopne,pn
mov
lock
mov
daa
xsha1
cmpsb
iret
cmp
arpl
mov
or
into
or
les
mov
jno
add
loopne
dec
in
or
adc
mov
or
inc
out
pushf
push
push
or
in
cld
jge
sub
shll
jle
fstpt
nop
cmp
jne
or
je
sub
cs
adc
mov
sti
int3
mov
mov
sub
add
push
es
inc
movb
sub
test
pop
jbe
mov
movl
cmpb
push
jne
or
xchg
and
inc
sti
cld
add
push
in
add
mov
adc
sub
call
lahf
je
xchg
sti
je
or
pop
cld
sub
loop
out
inc
out
add
inc
loopne
addl
or
inc
or
mov
mov
or
js
lock
adc
iret
shrb
xchg
fldcw
pop
and
push
sub
xor
jo
sub
dec
pop
push
mov
mov
or
les
or
das
push
inc
int3
add
mov
mov
fcomp
mov
push
mov
loopne
insl
sub
mov
test
add
lock
out
mov
ss
jmp
jge
imul
push
jmp
pop
jae
mov
int3
jmp
push
xchg
mov
in
add
adc
jg
dec
scas
mov
bound
fsub
pop
push
orb
jo
cmp
xchg
sub
das
lock
push
mov
mov
or
push
mov
xor
inc
mov
inc
pop
lock
jle
mov
fwait
mov
push
cld
mov
stos
mov
jl
loop
ret
jle
sarl
ljmp
pop
sbb
pop
add
jl
aas
test
jp
push
fsubl
cmp
je
or
mov
mov
push
mov
clc
pop
js
stos
enter
int3
mov
fwait
push
add
clc
add
mov
pop
movsl
dec
dec
lcall
jmp
imul
jo
sbb
sti
or
in
pop
lea
ds
adcb
pop
jle
into
xchg
loope
sub
shrb
or
sbb
adc
fdivp
push
xor
in
inc
fldenv
xlat
in
rcll
cltd
cmpsb
sahf
imul
push
rcl
push
xchg
dec
xchg
or
insl
pop
rorl
mov
je
cmp
add
ret
aaa
dec
test
push
add
int3
add
xchg
xchg
jge
mov
or
inc
cmp
repnz
cmpsl
in
shlb
add
movsb
ljmp
inc
test
or
or
adc
xlat
nop
dec
pop
and
fdivl
jo
gs
scas
inc
jns
rolb
test
pushl
lds
loop
lods
pop
cld
loopne
subb
icebp
sbb
inc
pop
dec
fcomps
cwtl
or
loope
adc
enter
leave
sbb
cmovl
or
push
or
mov
sbb
fbstp
xor
ret
xor
ret
mov
mov
jp
mov
fcompl
clc
push
mov
inc
in
and
sbb
imul
pusha
sbb
lods
inc
mov
sbb
dec
cmp
dec
pusha
movmskps
pop
xor
mov
sbb
push
call
and
and
pop
orl
mov
cmpb
push
fs
iret
or
add
or
repnz
in
call
push
inc
into
or
jge
out
mov
xchg
stc
orb
subb
out
mov
xchg
mov
test
xor
or
je
xchg
pop
sarl
or
adc
enter
into
xchg
mov
js
sub
adc
sti
mov
pushf
jle
sbb
adc
cmp
add
xor
mov
mov
cmovns
mov
int3
inc
and
lret
out
rclb
sbb
inc
fcoms
lock
loopne
in
mov
aam
xchg
xor
inc
mov
pushl
dec
js
mov
test
cmp
jecxz
dec
testl
or
ret
push
push
inc
aam
leave
bound
movsb
mov
das
mov
arpl
jle
mov
or
arpl
sti
add
mov
pop
data16
loopne
add
push
gs
pop
fsubrs
insl
sbb
sub
push
xor
adc
pop
or
mov
push
mov
and
out
inc
mov
jle
or
lods
inc
push
push
aaa
sarl
push
cmp
jg
mov
mov
jmp
rcr
push
mov
outsb
pop
jns
bound
sbb
enter
pop
pop
and
scas
push
insl
insb
or
or
adc
sbb
xor
cmp
outsb
sub
in
sub
dec
subl
sbb
mov
sbb
pop
xor
cwtl
dec
jg
ret
push
pop
jmp
mov
push
add
xchg
and
rcll
or
hlt
test
adc
add
notb
sub
mov
and
cmp
decl
mov
lea
cmp
jae
mov
incl
aad
in
xchg
xor
inc
add
cmp
mov
mov
int3
call
inc
add
loop
jge
jle
adc
add
xor
inc
cld
imul
add
je
ss
add
push
cmp
jg
and
push
inc
push
and
mov
js
lea
cmp
in
out
out
divb
add
mov
sub
jp
fwait
popa
xor
int3
add
lea
movsb
adc
push
push
jb
sti
add
or
push
push
adc
mov
loop
sub
xchg
add
hlt
inc
add
mov
xchg
or
sub
inc
pusha
sbbl
mov
dec
popl
cmpsl
cmp
jbe
xorb
movsl
shll
and
mov
clc
or
fdivs
and
dec
hlt
jg
in
shrl
lock
push
dec
pop
add
jno
add
mov
or
xor
add
inc
xor
scas
or
int3
scas
sar
mov
xor
jecxz
mov
ds
push
pop
xor
jns
neg
adc
hlt
jl
repz
push
cmp
push
push
fadds
test
jne
lock
ret
sbb
cwtl
test
xor
or
mov
mov
mov
sub
push
xchg
dec
xchg
mov
xchg
mov
mov
lea
fucom
lea
jbe
mov
int3
scas
test
ss
shrl
scas
mov
add
cli
rep
aam
push
push
pop
inc
xor
xor
pop
jmp
enter
and
or
enter
scas
stos
xor
pop
and
push
mov
loopne
jo
or
cmpsl
xor
pop
jae
dec
mov
shll
test
mov
insb
add
cli
inc
push
mov
cmpsb
and
fwait
mov
ljmp
in
and
jae
jb
mov
or
add
xchg
sub
push
in
cs
outsl
clc
scas
fadds
cmp
jne
cmp
je
jbe
movb
ja
cmp
or
and
sbb
add
insb
cmc
mov
xor
mov
andb
push
out
roll
push
mov
or
push
in
rolb
je
inc
sbb
pop
mov
mov
and
loop
lcall
jne
movsl
xchg
insb
jp
or
pop
insl
ljmp
cmp
js
jbe
sbb
jg
lcall
hlt
subb
pop
add
js
iret
std
mov
or
hlt
aam
insl
sub
push
cmp
adc
pushl
mov
inc
roll
jp
jle
leave
orl
loop
cmp
jmp
frstor
lea
add
fs
lock
and
adc
loopne
test
imul
jns
sar
pop
and
adc
clc
add
push
shlb
aam
push
add
sbb
enter
add
fidivrs
and
adc
dec
push
in
jo
rclb
push
popf
add
loop
xor
js
xor
leave
add
fildl
ficoms
pop
inc
dec
sbb
dec
xchg
test
push
mov
add
sub
inc
notl
shlb
sub
addl
add
pop
hlt
sub
sar
fbstp
or
sbb
je
jle
mov
pop
pop
mov
insb
sub
mov
ret
insb
cld
lods
test
cmp
lea
jbe
mov
push
jp
test
test
push
test
or
push
or
in
mov
pop
add
mov
sbb
cli
sbb
inc
jae
add
insl
popf
or
dec
add
pop
inc
mov
mov
or
add
addl
ss
es
inc
loopne
add
adc
or
mov
adc
and
cmp
inc
add
adc
loopne
scas
cmpsb
cmp
lea
shl
mov
xor
mov
scas
mov
rcll
push
cmp
shr
sbbb
das
push
push
outsl
js
push
and
or
sbb
inc
cmp
jl
and
or
out
add
sub
incl
ret
out
xchg
mov
push
lock
pop
fildl
popf
or
pop
add
imul
push
adc
xchg
xchg
inc
leave
inc
xor
pop
adc
int
or
cmp
jmp
adcl
add
sahf
xor
pushf
mov
dec
leave
inc
jo
fnstcw
xchg
xor
or
pop
and
adc
inc
and
add
adc
inc
push
jo
in
pop
push
jo
fdivrp
add
call
push
sbb
push
fadds
cmp
js
add
shll
add
mov
inc
mov
jmp
add
enter
push
and
inc
fsubr
push
and
inc
inc
and
dec
ds
adc
mov
sbb
mov
jno
movsl
rolb
aam
and
pop
leave
push
xorl
insb
cmp
repz
mov
add
adc
adc
sbb
or
fwait
hlt
cmp
movsb
xor
mov
mov
and
lcall
mov
scas
adc
fsts
adc
mov
test
mov
push
clc
loope
sub
xchg
mov
dec
xlat
icebp
inc
lods
xor
lock
dec
loopne
test
popf
or
dec
inc
inc
leave
scas
adcb
jmp
das
xchg
clc
cmp
sub
sbb
dec
mov
add
adc
rorb
inc
sbb
or
and
jb
mov
push
adc
mulb
pop
or
sbb
mov
loopne
xchg
mov
iret
inc
inc
or
xchg
and
push
lods
push
dec
loopne
jns
ret
pop
xchg
sti
cs
adc
addr16
push
mov
leave
gs
imul
or
push
and
push
inc
and
pop
inc
sbb
enter
cmp
and
insl
add
js
push
sub
mov
cmpl
shrl
push
test
lea
add
xchg
ja
fiaddl
adc
and
mov
adc
cmp
popf
cmpl
push
cmp
in
mov
xor
int3
dec
in
shrl
pop
negl
ret
push
mov
add
cmp
add
shrb
or
jbe
sbb
inc
js
aaa
jb
mov
xchg
dec
sub
sub
pop
push
push
adc
pusha
mov
cmp
cmp
bound
sti
or
sub
dec
je
mov
je
sub
sbb
fsts
test
ss
sub
sub
jmp
mov
mov
aaa
push
push
fiadds
sahf
leave
jmp
jmp
pop
add
pop
jne
iret
popa
xchg
mov
jmp
push
add
push
mov
xor
push
jmp
and
dec
inc
loopne
fnstsw
fcomps
xchg
or
pop
push
mov
jg
pushf
call
cltd
mov
mov
in
fdivs
and
push
fistps
popa
or
xor
push
push
daa
pop
jmp
and
pop
into
lea
and
and
sti
arpl
sbb
into
jmp
sti
imul
cmp
je
cmp
pop
inc
jmp
inc
dec
shrl
dec
sbb
leave
adc
cli
imul
jle
mov
sbb
fstpl
imul
jmp
sbb
and
sti
in
fsubrp
sbb
je
pop
push
jmp
xchg
inc
test
scas
and
cmp
fldt
push
jbe
in
es
cmp
repz
imul
inc
dec
decl
or
stc
aad
add
pushw
and
icebp
inc
sbb
inc
sbb
or
pusha
lea
jecxz
pop
mov
add
sub
or
popa
mov
fmuls
xchg
add
fsubp
cmp
sbb
cmp
add
std
mov
mov
pop
repnz
push
pop
push
lea
push
sbb
call
shll
lea
or
lret
dec
cmp
nop
mov
dec
mov
xor
pop
imul
push
jle
add
ja
int3
or
outsb
fcoms
movl
xor
pop
pusha
lret
adcl
imul
push
sbb
push
je
xchg
mov
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
stc
xchg
test
sub
cwtl
insb
add
fadds
dec
adc
dec
adc
mov
dec
adc
in
rcrl
add
int3
jno
das
and
ss
ret
and
pop
adcb
test
inc
cltd
call
inc
inc
insb
mov
pop
lock
xchg
fidivl
aas
out
cwtl
or
add
adc
insb
inc
dec
or
jl
pop
jae
dec
lcall
push
mov
dec
xor
shrd
push
in
push
dec
pop
in
inc
pop
ret
lret
in
inc
xchg
inc
or
inc
call
sub
xchg
ret
add
cmp
je
cmp
sub
loopne
push
xor
aad
cmp
push
add
push
cmp
xor
cmp
jl
cmp
fstps
add
imul
inc
adc
inc
jl
sbb
add
jecxz
push
mov
jg
cmp
pop
dec
lret
repz
rclb
add
pop
xchg
pop
mov
jl
inc
push
aam
das
in
nop
inc
jo
pop
inc
sbb
icebp
jmp
roll
pop
cmpsb
xor
aam
xchg
clc
and
fildl
cmp
aam
or
mov
sbb
sti
sub
push
popf
rcr
xchg
pop
fdivr
ret
fsubs
dec
dec
push
mov
dec
rorl
xor
mov
cmp
jne
popa
cmp
push
in
pop
add
mov
xor
adc
divb
iret
je
lea
push
loopne
add
mov
es
jo
cs
das
mov
sbb
cmp
pushl
call
push
or
fistps
loope
mov
mov
shll
les
shrb
les
scas
imul
scas
idiv
lock
div
push
dec
je
dec
dec
icebp
lahf
les
lahf
in
jge
fisubs
sub
sub
in
mov
dec
lock
jmp
sub
int
sbb
in
cmp
push
mov
add
imul
inc
dec
cmp
mov
aam
aam
push
lds
sar
fdiv
lea
in
lea
rep
out
in
mov
movsl
mov
or
mov
rcrl
inc
frstor
shrl
sbb
dec
neg
sbb
insb
and
dec
mov
pop
mov
mov
push
push
in
sbb
lcall
cmp
or
push
test
mov
adc
mov
sub
push
rorb
leave
and
push
mov
in
sahf
sub
sbb
mov
adc
pushf
mov
test
cltd
or
mov
adc
add
inc
and
jno
dec
jg
icebp
push
adc
punpckhdq
inc
call
xchg
cli
fdivr
aaa
and
pop
push
pop
test
inc
push
adc
pop
add
jae
mov
lock
ret
add
idivl
outsl
cli
lods
or
fs
cmpl
jne
pushl
addl
jnp
inc
sbb
push
cs
cmpsb
adc
xorl
popa
outsl
fcoml
in
jmp
sbb
sbb
fmuls
push
or
orl
add
mov
ret
aas
movsl
or
cmp
pop
cmp
je
cmp
scas
add
ja
icebp
sbb
xchg
ret
push
lcall
je
or
mov
add
shll
sub
shll
mov
dec
inc
inc
shll
xor
adc
push
jne
movb
fs
fucomip
jmp
cmp
jne
xchg
movsl
fnstcw
test
jecxz
xor
pop
mov
cmp
push
mov
ret
dec
aas
mov
jecxz
mov
mov
mov
ljmp
sub
xor
and
jge
and
test
xor
std
or
popf
sub
mov
sbb
mov
insl
nop
or
push
sbb
push
es
adc
mov
jns
mov
xor
test
in
lods
nop
pop
cmp
iret
push
adc
add
rorl
pop
push
mov
push
push
add
push
test
scas
iret
push
rorb
or
xchg
movsl
mov
std
int3
ja
inc
rclb
popa
cmpsb
and
movsl
mov
add
push
push
xor
adc
jp,pt
push
or
out
mov
or
or
adc
enter
push
lret
out
ja
jl
xchg
andb
mov
sbb
test
xchg
outsb
dec
jg
push
rcrb
das
cmpb
pop
lcall
aaa
pop
inc
ficomps
xorb
mov
imul
mov
fsubrl
xchg
adc
dec
nop
pop
inc
mov
sbb
xchg
adc
push
push
aaa
movsl
loopne
jae
mov
dec
push
jo
mov
lea
add
jns
adc
add
push
add
jno
fs
inc
negl
popa
mov
dec
ja,pt
rol
cwtl
lea
sbb
addr16
push
lds
and
sub
dec
adc
fsubrs
pop
fmuls
call
addr16
dec
or
enter
xor
mov
adc
or
adc
lea
xchg
das
push
jle
add
loopne
aaa
push
pop
aam
inc
cld
cmp
push
push
mov
push
inc
fdivs
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mull
push
insb
repz
mov
jmp
fisubrs
add
stos
add
push
cli
or
push
lods
add
mov
shll
insb
push
lret
sahf
shlb
push
call
jmp
lret
push
sbb
pop
cmp
rclb
adcl
sbb
loopne
ret
or
out
push
jno
arpl
test
adc
sbb
and
sarb
andb
mov
divb
test
cltd
mov
lea
jge
cld
negb
rol
or
and
into
sbb
out
pop
mov
mov
fcomip
cmp
jge
adc
idiv
push
mov
push
push
mov
outsb
lea
ds
xor
idiv
sub
in
cli
mov
or
test
jg
adc
ss
push
push
sbb
movsl
sbbl
mov
pusha
scas
mov
pop
push
jbe
mov
jge
add
movsl
inc
push
adc
jecxz
popl
cld
in
or
out
dec
fstpl
push
pop
decl
aam
sti
sub
rcrb
loopne
je
cmp
lea
cltd
idivl
inc
push
into
jp
xor
popa
xor
in
and
js
idivl
popa
jg
fs
lret
jl
movl
adc
test
push
in
adc
mov
cld
ficoms
xchg
in
sbb
stos
mov
inc
incl
jl
out
xor
pop
xchg
sub
cmp
or
jne
imul
insb
mov
std
out
ja
hlt
fildl
mov
test
jns
faddl
inc
sbb
or
mov
fdivrp
mov
mov
mov
mov
mov
add
pop
add
les
imul
add
push
shlb
or
clc
fidivl
jmp
sub
xchg
cli
mov
movl
mov
pop
jne
pop
pop
movb
push
or
jle
sub
mov
test
stos
in
mov
add
mov
add
lret
mov
cmp
inc
lea
sbb
pop
das
cmpsl
je
pop
jne
push
ja
fstl
mov
mov
imul
pop
sub
cmp
dec
or
shrb
dec
fcoml
pop
pop
pop
xchg
xchg
pop
into
pop
leave
neg
pop
dec
int
call
jnp
mov
xor
imul
and
cltd
add
shr
push
shll
repnz
xor
mov
mov
adc
xor
sbb
dec
jns
mov
pop
jne
xor
mov
aam
sbb
inc
jne
sti
mov
adc
movsb
jl
adc
xchg
punpckhdq
leave
pusha
pop
leave
push
xor
xor
jnp
add
ret
std
sub
xchg
lea
push
mov
push
ret
inc
mov
dec
add
and
lea
or
fwait
test
or
pop
movsb
mov
lea
push
push
orb
ret
inc
adc
js
or
inc
sub
rcr
aad
mov
sub
roll
roll
push
jle
jae
add
dec
pop
pop
insl
inc
sub
or
sbb
xchg
pop
bound
in
fs
sbb
xchg
aam
mov
lret
push
lods
subb
lods
jmp
pop
add
stc
push
int3
out
pop
pop
ds
cld
jno
clc
and
inc
ret
mov
and
pop
xchg
int
or
in
and
xchg
sub
mov
jb
aaa
and
mov
pop
mov
and
loopne
les
sbb
push
inc
clc
push
mov
data16
inc
incb
adc
push
add
push
add
sub
sub
clc
setb
test
in
adc
sub
cmp
xchg
je
xor
pop
jl
outsl
dec
adc
data16
push
lea
push
mov
addb
jle
je
push
loope
scas
and
pop
pop
lcall
insl
xchg
addb
add
inc
dec
push
jo
dec
dec
mov
data16
mov
hlt
data16
mov
and
lret
out
or
add
shrl
in
mov
inc
or
das
push
scas
pop
js
mov
loop
mov
and
xchg
imul
incb
mov
inc
test
pop
lock
sub
pop
jmp
jo,pt
jg
push
add
sahf
or
sbb
out
fwait
sub
jg
negl
pusha
sbb
add
and
adc
xor
mov
push
int
or
jmp
test
cltd
cwtl
adc
sub
jmp
out
aam
fcoml
pop
loopne
mov
je
ss
insb
sbb
jns
xchg
add
add
cmp
pop
mov
and
dec
inc
xor
add
xchg
jle
daa
or
or
xchg
mov
loopne
sbb
aam
out
js
sahf
inc
add
lahf
push
das
inc
fdivl
sbb
sbb
push
bound
jmp
xorl
aad
bound
aaa
push
sub
pop
adc
mov
cmpsb
add
or
mov
jb
xchg
mov
out
clc
pop
push
in
sub
ss
dec
sahf
fmuls
addl
jmp
fmuls
xlat
insb
aam
xor
mov
xor
pushl
dec
incl
pop
inc
loopne
int3
add
jne
add
sahf
jae
imul
sub
xchg
lock
jge
les
push
stos
test
dec
gs
jle
push
call
jne
lods
jo
mov
adc
mov
push
mov
and
push
pop
pop
je
stc
test
sbb
pop
test
pushf
test
das
lcall
and
lock
mov
sub
push
or
jnp
sbb
or
cmp
test
movsb
outsl
mov
push
push
outsb
aam
pop
inc
in
and
mov
push
mov
or
xor
adc
and
rcll
cmpsl
adc
popf
adc
mov
push
cmp
jmp
dec
stos
mov
add
in
test
jmp
and
cmp
enter
nop
adc
negl
jne
mov
stc
jo
push
bound
je
clc
loop
sbb
xchg
pop
pushl
lock
mov
mov
jne
sbbb
andl
dec
cmp
mov
jg
mov
sbb
test
sbb
xor
sbb
ja
adc
mov
jmp
dec
mov
sub
imul
and
mov
push
ja
lea
orl
inc
xor
shlb
mov
jle
mov
jmp
leave
js
cmp
jge
mov
mov
mov
cmp
sbbb
fistps
jle
push
inc
imul
mov
and
roll
std
mov
fsubrs
pop
xchg
in
sbb
popf
push
fcomps
fisttpll
or
push
mov
mov
sbb
xor
jne
aam
pop
sbb
push
jl
cld
data16
dec
mov
cmp
in
mov
loope
mov
sub
inc
sete
adc
loope
and
add
sbb
arpl
shrb
stos
push
or
lods
mov
add
insl
aas
or
adc
mov
mov
jge
mov
dec
adc
enter
add
mov
mov
ljmp
dec
shl
shl
dec
add
sbb
push
gs
loope
icebp
cmp
loopne,pt
pop
push
pop
js
add
jo
add
ret
lods
pop
jns
movsl
imul
sti
push
dec
lock
pop
loope
sub
adc
test
mov
call
dec
mov
jl
insb
fs
aad
jo
std
mov
add
cmp
fsts
adc
iret
ss
and
add
inc
call
cmp
push
xchg
push
pop
nop
pop
push
or
jle
cs
xchg
test
add
sub
ss
mov
and
or
mov
outsl
mov
jne
inc
lcall
pop
loop
push
in
adc
lcall
pusha
fmul
in
adc
lods
xchg
enter
ret
xor
popa
lock
in
repz
in
aaa
daa
in
call
xor
lock
and
fdivs
xor
ljmp
pop
jl
arpl
add
mov
and
nop
dec
adc
add
jno
daa
xor
fdiv
dec
enter
or
jle
test
add
mov
mov
xor
bound
add
test
rorl
or
je
jb
pop
jecxz
aam
or
aaa
add
push
bound
cmp
add
push
aam
sub
push
fwait
jae
call
in
aam
bound
arpl
add
jl
xchg
cmp
xor
inc
cld
rorb
mov
mov
hlt
add
enter
cmp
jo
jmp
daa
mov
xor
daa
xor
addb
je
adc
inc
das
js
push
je
add
xchg
lock
or
sub
lock
adc
les
aaa
lods
add
xor
in
jmp
mov
jmp
mov
shll
add
sub
add
push
ja
imul
jne
cs
or
jp
inc
roll
movb
adc
or
sbb
inc
lods
pop
loope
mov
add
jo
insl
pop
push
movb
test
xorb
mov
js
ja
pop
clc
jg
mov
push
adc
cmpsb
add
scas
sbb
aas
or
pop
mov
outsb
ret
inc
in
cli
mov
rolb
fsubl
lds
or
jle
jno
insl
cmp
adc
pop
pusha
pop
mov
js
test
add
cld
jg
push
xor
xor
cmp
je
or
jbe
movzwl
mov
arpl
roll
jne
loop
cmp
cli
loopne
or
push
lea
push
lahf
cld
push
in
pusha
gs
sub
push
or
ss
adc
pop
pop
push
push
inc
adc
subb
shlb
adc
add
xchg
pusha
test
data16
shlb
sbb
cmpsb
nop
add
xchg
push
ffreep
xor
add
cltd
mov
rolb
loop
fwait
mov
jmp
xor
mov
and
push
sbb
and
adc
clc
sbb
xor
jbe
mov
aam
inc
push
push
aas
test
cs
jo
cmpsb
fidivrl
xchg
daa
in
sub
sub
xchg
in
adc
fisubrs
mov
push
leave
ret
xchg
push
sarb
push
test
adcb
jle
icebp
jl
push
sbb
add
cmpsb
add
out
add
mov
xchg
pop
push
pop
loop
or
mov
xchg
clc
fdivrl
addr16
movl
hlt
mov
js
inc
stc
xchg
dec
sub
pop
push
fwait
xchg
xor
sub
dec
inc
jb
lea
push
xor
call
push
les
cmp
stc
outsb
leave
das
insl
push
sub
inc
xchg
cmp
and
sbb
stos
ret
rorb
cld
jns
stos
jb
mov
sbb
and
aaa
loop
or
daa
xchg
add
xchg
xchg
cmp
cmp
or
sub
cmp
mov
mov
aam
adc
js
mov
push
pop
sbb
jbe
cmp
icebp
mov
push
pop
test
aam
fnstcw
jmp
rcrb
sbb
sarl
dec
push
test
aam
adcl
insb
stos
add
mov
mov
in
xchg
mov
mov
insb
push
add
jns
mov
imul
aaa
adc
jns
popa
add
jae
push
daa
inc
imul
pusha
or
ja
daa
cltd
add
pop
das
nop
dec
pop
fimull
adc
push
lret
mov
ret
push
jnp
mov
dec
cmp
xor
std
add
add
push
pop
add
add
cmpb
push
adc
sub
or
mov
ret
inc
test
pop
add
sbb
out
xchg
mov
mov
jge
sbb
inc
pusha
sub
movl
mov
lea
iret
mov
adc
inc
inc
jnp
jge
inc
adc
add
add
pop
adc
mov
jnp
lea
fisubs
int
es
add
dec
pop
and
adc
push
jg
pusha
lock
push
xchg
mov
push
xor
or
sub
orl
rorb
mov
pop
or
int3
xor
adc
test
ficomps
adc
inc
or
clc
cs
leave
push
and
sub
movsl
add
mov
cmp
aas
out
data16
cmp
je
movb
sub
and
rcll
mov
cmpsl
aas
pop
or
test
daa
mov
mov
aad
push
outsb
repz
mov
out
dec
or
pop
push
jmp
push
jge
push
adc
clc
push
setne
fbld
mov
mov
fucom
cltd
pop
add
lahf
cwtl
orb
imul
js
and
stos
lea
or
jo
mov
push
or
inc
imul
push
or
enter
adc
xchg
or
mov
sub
test
test
mov
adc
out
and
inc
xor
adc
mov
fstl
mov
aaa
gs
cmp
mov
iret
repnz
mov
dec
fiaddl
jns
les
mov
cmpl
arpl
faddl
mov
lret
shll
lods
dec
xchg
mov
or
mov
js
scas
mov
roll
inc
aas
pushf
mov
adc
adc
sbb
mov
jo
adc
lret
cmp
sub
aam
mov
add
sti
and
or
cmp
fwait
icebp
and
xchg
dec
mov
fsub
add
cmp
test
pop
enter
inc
mov
mov
or
cmc
add
popa
repz
clc
lret
jne
and
sub
adc
fnsave
pop
sti
in
sub
or
adc
sbb
hlt
nop
sbb
inc
adc
lock
mov
xchg
or
sbb
adc
jl
adc
movsb
cltd
nop
mov
nop
mov
movsl
fiadds
pop
in
add
push
sbb
dec
cmp
mov
incl
and
add
pop
test
dec
mov
xor
test
push
pop
adc
out
cmp
push
int3
les
aam
push
orl
sbb
mov
mov
xor
add
and
pop
mov
loope
mov
rorb
mov
and
mov
pop
pop
mov
ljmp
mov
push
mov
out
lods
les
jo
inc
cmp
cwtl
in
sbb
enter
rorl
push
or
roll
rorl
adcl
neg
push
mov
das
ss
testb
push
mov
inc
cmp
cwtl
add
test
lahf
out
test
fs
outsw
mov
push
xchg
jae
add
repz
mov
pop
dec
je
cmp
ret
subb
loopne
pushf
mov
cmp
xchg
iret
push
jb
add
adcb
pop
loope
or
adc
xchg
mov
mov
fmull
stos
insl
movsl
jbe
and
sub
mov
and
pushfw
mov
push
add
lea
lea
push
push
push
or
scas
enter
jo
push
es
in
incb
fldz
pop
aad
mov
pop
mov
mov
cmp
jno
xchg
inc
cmc
mov
or
pop
loopne
add
and
sub
cli
mov
add
insl
sub
xchg
mov
roll
les
stos
mov
push
aam
add
sbb
orl
sarb
stos
adc
imul
aam
adc
inc
mov
lret
adc
push
adc
mov
add
inc
out
test
test
pop
mov
push
testl
mov
push
add
jno
jmp
ss
loopne
mov
repnz
inc
rclb
outsl
and
push
xchg
jne
add
lea
aas
adc
jnp
fs
loopne
pop
in
mov
lret
cs
jnp
push
outsl
mov
scas
or
enter
movsb
mov
jae
js
aaa
sbb
cmpsl
mov
adc
add
out
jo
inc
lret
rorb
out
movsl
xor
nop
das
bound
fwait
dec
insb
jne
fisttps
pop
mov
fidivs
sbb
jns
fs
imul
add
popa
dec
push
jns
shl
mov
pushf
mov
add
xchg
push
dec
fisubs
jl
loope
add
pop
fistl
sbb
dec
or
andl
xchg
xchg
or
lock
adc
mov
test
jae
daa
cmp
sub
pop
ret
add
orb
shlb
push
add
mov
mov
mov
test
mov
sti
dec
mov
pusha
test
hlt
test
insb
mov
or
stos
xchg
inc
rclb
adc
sbb
push
cmp
outsl
cmp
xchg
mov
outsb
fneni(8087
push
mov
mov
loopne
pop
xor
xchg
and
movl
xchg
push
fdivs
pop
loope
testl
je
mov
aam
sbb
adc
sbb
mov
jle
mov
pop
popa
mul
cmpsl
xchg
mov
cmp
dec
loopne
lahf
insl
je
je
mov
dec
pop
pop
sub
pop
push
inc
aam
cmp
imul
pop
and
sarb
cwtl
sbb
xor
lods
pop
rcll
mov
inc
adc
sbb
sbb
sbb
xor
or
pop
inc
cs
push
jno
mov
mov
notl
cmp
pop
cmp
je
out
or
movsb
push
or
out
adc
ss
and
sbb
inc
movsl
rorb
out
mov
and
jo
lea
arpl
pop
pusha
test
adc
and
and
aam
and
lods
call
das
testb
cmp
mov
push
sub
roll
ja
je
es
pop
sub
sbb
pushf
es
sbb
mov
addr16
sub
sub
ucomiss
push
lcall
stos
test
mov
jge
std
inc
xlat
jp
outsl
dec
loopne
cmp
inc
cs
aam
mov
sbb
inc
xchg
xchg
das
fcoml
sub
adc
sbb
pop
or
push
adc
cmp
int3
xor
jno
jmp
push
mov
out
xor
das
out
push
push
sub
insl
fsubl
and
and
rolb
repz
lds
imul
sub
pop
push
cmp
popf
call
repnz
stos
jle
dec
call
or
pop
xchg
jne
pushf
add
ret
add
loopne
ret
pop
jo
or
pop
loope
mov
mov
inc
mov
sub
adc
or
pop
int
movsl
xchg
lock
push
pop
adc
add
inc
mov
ljmp
push
push
mov
leave
mov
mov
mov
push
and
or
dec
icebp
mov
pushf
lea
pop
and
fadd
jmp
sbb
mov
inc
in
push
ret
add
cmp
mov
xor
out
adc
or
lock
xchg
jns
loop
add
dec
mov
pop
or
rcrb
leave
mov
push
lret
or
fcoms
mov
adcl
mov
ss
pop
ret
ljmp
cmp
xchg
or
cli
jbe
mov
or
or
pop
dec
sub
cmp
ja
fisttpl
rclb
or
into
add
scas
int3
xchg
ret
pop
pop
lret
or
ja
xchg
jl
fstpl
lret
add
int3
push
jae
push
repz
jle
push
add
and
push
mov
es
add
mov
xor
icebp
mov
sbbl
cmp
jae
or
push
popa
mov
ret
pop
nop
mov
xchg
test
mov
pop
push
push
mov
mov
sbb
adc
rorb
scas
add
add
pop
movb
cmpsb
call
push
sub
adc
mov
lcall
loopne
jecxz
add
mov
faddl
pop
sahf
sbb
dec
lret
aas
add
loopne
icebp
add
outsl
rcr
dec
xor
insb
insb
loopne
inc
mov
ljmp
dec
hlt
sub
push
push
xchg
ja
pop
sbb
loopne
sbb
enter
or
add
and
sub
push
jbe
mov
pushf
adcl
loope
fmuls
inc
dec
sbb
scas
and
xor
pmulhuw
fnstenv
mov
pusha
rolb
fdivs
add
inc
test
xchg
mov
or
mov
mov
adc
clc
out
or
fwait
sub
bound
mov
sbb
xchg
test
push
pop
add
lock
pop
repnz
cmc
cmc
mov
repnz
or
dec
in
cmpb
adc
inc
inc
and
cmp
test
nop
pusha
das
cltd
xchg
mov
push
pop
imul
scas
jecxz
sbb
insl
mov
pop
faddp
xchg
xchg
inc
sbb
sarl
inc
lock
iret
xlat
mov
inc
imul
xorb
add
inc
push
cld
cmpb
add
inc
add
insl
mov
push
xchg
add
lods
sbb
mov
pop
rorb
or
fcomp
jmp
je
cmpb
addr16
jmp
mov
jns
push
rclb
cmp
mov
dec
loope
clc
je
rcrl
fistps
loop
lock
mov
push
add
adc
push
inc
push
cmc
dec
xor
push
push
setb
jge
add
xchg
xchg
aam
push
ficompl
mov
sub
cmp
jl
mov
ret
xor
sarl
pop
sub
push
jle
iret
in
sbb
jne
push
jno
push
mov
add
push
lea
push
xor
sub
out
xchg
out
sub
cmp
je
jmp
dec
cmp
mov
cmp
xchg
clc
xchg
mov
movl
adc
push
sar
sbb
test
icebp
jmp
data16
jne
xchg
push
mov
push
xchg
psrlq
jg
inc
mov
fldcw
fisttps
dec
sub
mov
push
dec
or
in
out
adc
add
jmp
aad
aam
xchg
sub
and
push
out
xchg
push
sub
loopne
jmp
or
rolb
adc
movsl
mov
pop
xor
fsubrs
push
ja
test
cmp
movsb
into
and
and
push
ds
cmp
imul
push
dec
add
or
out
das
mov
mov
ljmp
or
aaa
faddl
inc
or
ret
or
mov
pusha
jne
fistpl
mov
imul
inc
and
aas
loopne
sub
je,pt
sbb
jbe
push
mov
mov
cmp
mov
mov
ret
xor
mov
add
inc
or
pop
pushl
scas
mov
mov
rcrb
je
enter
mov
add
push
push
dec
add
inc
lcall
test
push
sub
dec
and
subl
js
lcall
sub
sub
mov
mov
inc
xorl
cmp
dec
jb
add
in
adc
out
aaa
mov
xorb
jno
adc
mov
cwtl
xchg
pop
push
adc
xchg
loop
loopne
or
insb
cmp
xor
loope
mov
and
push
into
ret
dec
pusha
rol
inc
dec
ljmp
cld
daa
jecxz
push
cmp
je
xor
mov
mul
seto
jmp
fbld
neg
or
push
pusha
add
scas
int
dec
push
jmp
cmpsb
xchg
xor
mov
push
xor
test
aas
jbe
scas
push
dec
mov
adc
mov
aad
pop
mov
inc
add
jecxz
xchg
push
sub
inc
or
push
dec
shll
adc
aam
or
and
inc
pop
cmp
adc
andl
or
enter
aam
inc
movsb
roll
fs
adc
inc
xchg
push
mov
jmp
xchg
mov
repz
mov
loopne
cmp
jl
jmp
test
vpackssdw
and
leave
add
nop
inc
or
jmp
jg
cmp
pop
lock
adc
jmp
cmp
je
sbbb
mov
cltd
test
jle
lock
sbb
cmp
jne
je
andl
adc
add
cmp
fwait
and
js
inc
out
jae
mov
mov
adc
fs
loope
faddp
jmp
xchg
std
push
add
pop
push
movsb
xchg
cli
jmp
mov
rcrl
push
ss
jno
cmp
push
inc
cmp
jae
fsubs
add
mov
mov
pop
ret
sub
or
jg
subl
loop
jne
and
jl
nop
rclb
pop
int
loop
push
ss
push
inc
jmp
pop
je
mov
push
xchg
imul
fisubl
sub
lcall
xor
pop
push
add
mov
loopne
xor
je
jno
lock
or
clc
push
mov
push
imul
inc
mov
dec
cmp
rclb
push
je
jg
outsl
ss
jne
jbe
and
ja
rorl
cs
mov
mov
mov
ret
dec
mov
inc
shl
jmp
push
jle
jg
fs
test
dec
jns
mov
cmc
add
fwait
lret
cmp
out
jo
lods
dec
or
clc
dec
pop
in
push
imul
popa
cs
cmp
jle
mov
jmp
mov
or
mov
hlt
cmpsl
fisttpl
push
mov
xchg
inc
sbb
jg
mov
push
push
pop
adc
arpl
adc
dec
in
les
mov
dec
sub
sbb
sub
fs
or
adc
or
inc
and
jno
stos
jmp
daa
out
pusha
add
sub
jge
pusha
add
sbb
sub
xor
or
dec
inc
pop
loop
jo
push
mov
jl
mov
add
pop
shlb
int3
lea
push
xchg
xor
sti
xchg
push
xchg
movsb
jne
and
and
outsb
pop
add
testl
iret
mov
dec
push
test
and
adc
push
push
arpl
dec
clc
pop
in
js
push
sar
mov
popa
sub
iretw
add
imul
imul
cmpsb
ja
ret
or
inc
jp
push
bound
das
add
adc
push
add
push
sub
mov
neg
addl
ret
mov
cli
jp
or
mov
lock
jne
test
push
push
je
inc
jmp
jmp
mov
xor
pop
mov
push
lds
push
popf
or
les
ret
cmp
mov
movl
orl
xchg
add
sub
adc
and
jnp
jp
xchg
cltd
mov
popf
sbb
dec
mov
addb
inc
pop
orl
xchg
xor
dec
mov
andb
add
aaa
jno
dec
adc
or
sbb
cwtl
rcl
or
movsl
push
int3
sub
mov
pop
dec
lock
add
pop
mov
mov
loopne
icebp
inc
add
mov
loopne
pop
sub
or
or
pop
cmp
pop
clc
inc
adc
testb
fisubrs
or
cmp
sbb
pop
add
mov
mov
jmp
push
shl
data16
inc
push
je
inc
aad
push
mov
stos
aam
dec
js
jl
adcl
fidivs
fstps
inc
xchg
adc
pop
dec
jae
push
add
push
xchg
xor
adc
pop
jg
pop
push
add
sbb
pop
push
or
movsl
or
pop
sub
mov
adc
push
pop
popf
in
dec
lahf
mov
fsubrl
or
sub
imul
dec
into
movsb
jmp
adc
push
gs
push
push
hlt
cmp
mov
repz
or
jae
add
add
fsubp
test
mov
pusha
test
sub
daa
xor
pop
push
jge
or
dec
adc
xchg
cmpsb
lods
scas
inc
add
jecxz
rcll
or
push
movsl
mov
push
lea
mov
outsl
sbb
and
bound
xor
inc
in
orl
fwait
dec
mov
andb
cld
repnz
pop
add
push
popf
dec
roll
iret
insl
mov
add
jecxz
shrl
lret
add
shlb
xor
out
mov
mov
dec
inc
jmp
inc
outsb
sub
mov
adc
cld
rcl
lods
out
and
dec
and
sbb
mov
adc
add
dec
cmp
pop
sub
sbb
adc
dec
add
mov
lds
fidivs
and
imul
adc
jl
insl
push
cmp
jbe
lds
add
mov
imul
mov
add
mov
or
xchg
sbb
adc
or
mov
fwait
xor
pop
cmc
xchg
xor
popa
cmp
sbb
or
jbe
in
push
cmc
and
scas
pop
insb
xor
dec
ret
lahf
out
sub
pop
fcom
push
mov
shll
lea
loopne
inc
mov
es
cs
add
sbb
hlt
inc
pop
pop
pop
cld
push
dec
xor
js
mov
movb
fadds
adc
loope
push
cmp
sbb
adc
outsl
sbb
jae
mov
xor
movsl
mov
outsl
and
daa
in
imul
mov
jmp
sbb
xor
jge
pop
sarl
add
dec
push
xchg
outsl
or
or
enter
and
movsb
sub
popf
add
cmp
push
cmpsl
push
adc
push
in
cltd
sbb
insl
faddl
ror
jno
test
mov
loop
mov
xor
cmpl
adcl
loopne
inc
or
cmpsb
dec
push
xchg
fucom
arpl
enter
pop
rcrb
cltd
mov
sbb
add
sub
inc
add
mov
bound
lcall
pop
pop
pop
dec
sahf
add
daa
sbb
mov
sub
lods
mov
test
sbb
jb
mov
int
sbb
cmpsb
dec
stc
inc
lcall
or
iret
ret
sti
faddp
shl
jo
and
dec
sub
push
ret
fldt
loope
or
inc
inc
pop
mulb
lcall
sbb
pop
aad
mov
sub
and
adc
pop
inc
push
and
add
and
std
mov
cmpsl
and
andb
xor
ret
dec
adc
xchg
inc
or
adc
adc
jmp
add
lahf
adc
pop
push
int3
xchg
pop
mov
xor
jbe
shll
or
icebp
and
or
data16
and
adc
add
js
ret
push
dec
adc
dec
pop
inc
incl
pop
and
sbb
enter
mov
push
loopne
and
xchg
inc
mov
mov
cmp
scas
or
sbb
add
outsl
push
push
daa
add
xor
icebp
sub
push
mov
pop
test
mov
add
mov
in
test
sbb
mov
fadd
push
xor
jnp
mov
jb
sub
clc
js
fildll
in
mov
ret
push
fisubs
mov
add
xchg
sbbl
jp
or
jne
adc
push
push
popa
jg
paddd
add
push
addr16
nop
cltd
and
mov
sar
ss
loop
test
xchg
data16
push
add
sub
mov
xchg
mov
sti
mov
insb
or
jecxz
sub
dec
je
xor
push
add
sub
test
insb
mov
cmp
loope
jo
inc
insb
hlt
clc
or
ret
cmpb
mov
xchg
add
call
or
add
mov
pop
cmp
mov
mov
loope
inc
push
cmp
sbb
pop
fsts
lods
pop
dec
std
mov
adc
add
and
push
add
cwtl
inc
mov
es
in
fs
cs
sub
je
rorl
push
test
adc
xchg
inc
loope
push
lods
leave
cmp
push
shlb
or
repnz
xchg
mov
xor
imul
aam
mov
sbbl
jbe
loope
mov
inc
mov
sbb
scas
mov
add
inc
mov
aam
ffree
sbbl
push
iret
mov
jle
je
fmull
popf
mov
out
stos
xor
inc
jnp
popa
adc
pandn
mov
cmp
mov
pop
cmp
addb
xor
dec
insl
insb
add
flds
mov
and
add
mulb
sub
sbb
out
add
idivb
dec
jnp
mov
xlat
or
sbbl
cmp
mov
xchg
inc
cmp
xchg
push
sbbl
dec
pop
push
frstor
mov
add
xchg
add
stos
call
xor
and
out
xor
scas
sub
jl
push
xor
push
add
mov
pushf
add
js
push
cmp
loopne
es
and
insl
xchg
xlat
push
adc
loopne
push
mov
adc
nop
jge
push
push
adc
mov
or
int3
mov
jno
loope
mov
sbb
insl
xor
sub
xor
fdivs
dec
imul
cwtl
jmp
js
jae
pushl
jge
add
pop
in
add
loope
dec
or
out
pusha
xchg
aaa
jnp
orl
push
push
ret
bound
je
shrl
rcrb
push
inc
mov
cmp
or
add
ret
lcall
pop
cwtl
test
cmp
es
dec
dec
out
xor
xchg
daa
shlb
and
mov
cmp
les
loop
shrb
jb
aad
addr16
testb
cmp
in
xor
xor
jle
push
inc
xchg
add
loopne
add
dec
lods
movsl
or
push
icebp
jmp
fdivrs
out
pushf
pop
mov
push
inc
sub
lods
gs
cmp
inc
loopne
pushf
or
mov
les
dec
fdivs
push
and
fsubr
aam
out
rolb
mov
hlt
push
pop
into
jbe
inc
jle
pop
nop
jl
dec
add
sub
pop
dec
lcall
jle
out
add
test
cmc
dec
xor
dec
dec
roll
xchg
cmpsb
jge
rclb
dec
insb
push
push
push
sbb
je
lcall
iret
aas
daa
cmova
sub
jo
cmp
cmp
dec
rorl
cmp
cmp
xchg
add
sub
aas
call
insl
lds
sub
aam
in
or
pop
pushl
xor
pop
ja
inc
mov
inc
xor
enter
xchg
xchg
cmp
das
rorl
incl
cmp
and
adc
push
addb
and
sbb
inc
and
sbb
pop
adc
pusha
cmp
sub
jmp
test
orl
fisubl
mov
xor
and
xchg
mov
sub
dec
sbb
push
call
ror
dec
dec
cmp
mov
xor
ljmp
add
insb
je
mov
mov
mov
or
fistps
loope
cmpb
xlat
sbb
sub
movsb
sbb
sbb
or
inc
pusha
mov
lret
push
rorl
cmp
inc
push
jmp
scas
test
clc
sahf
dec
pusha
cld
mov
inc
jmp
lea
mov
mov
roll
stos
aad
jecxz
insl
and
dec
add
inc
add
push
xchg
mov
aad
sbb
pop
and
rcll
js
call
pop
call
dec
in
jno
lea
lea
cmp
and
sbb
and
imul
and
sub
push
fimuls
mov
insb
daa
or
cmp
stc
dec
jmp
cld
or
jmp
push
je
call
mov
psubsb
mov
subl
fldl
jnp,pt
cmp
mov
xchg
lret
jbe
adc
xchg
jo
mov
mov
mov
xorb
adc
imul
inc
and
out
add
mov
fnsave
in
out
mov
sub
sti
orl
lods
call
adc
or
int3
mov
push
mov
cmp
stc
imul
mov
xor
fadds
movsb
add
mov
inc
dec
out
pop
mov
mov
xchg
andl
dec
aas
mov
clc
fdivr
roll
cmp
aam
dec
ret
mov
jmp
cmp
cmpsb
pusha
or
sahf
dec
mov
leave
jl
jmp
sti
pushf
mov
mov
pop
dec
xlat
scas
sub
popf
jb
mov
ja
push
jmp
or
rorb
scas
push
movl
add
inc
dec
popf
lock
sbb
sbb
inc
cmp
push
sbb
inc
mov
sbb
imul
fwait
subl
jae
repnz
jge
and
add
mov
ret
jnp
sbb
jp
andl
xor
fisttpl
sub
aad
fbstp
fimuls
mov
jno
adc
in
push
or
rorb
push
dec
jne
push
es
jo
mov
clc
adc
enter
push
and
cmc
xor
ret
pop
stc
dec
psadbw
and
aam
ficoml
adc
pop
loopne
in
scas
aaa
cmp
je
xchg
lcall
das
xchg
divb
mov
xchg
mov
or
jge
sub
jle
mov
dec
jae
mov
xchg
daa
xor
pop
push
arpl
dec
mov
lea
dec
push
adc
icebp
out
inc
xchg
ret
outsb
mov
sub
mov
cmp
mov
in
and
ja
xchg
cmp
je
bound
inc
fs
pop
and
mov
cmpps
push
inc
or
ss
dec
sbb
push
mov
xchg
jo
cld
adcl
movsb
add
addl
push
and
mov
lock
jo
xor
push
cmp
inc
je
loop
inc
push
and
push
or
adc
add
sub
ds
je
fwait
mov
push
call
adc
jge
mov
shlb
add
mov
dec
push
mov
sbb
mov
int3
or
call
scas
mov
xlat
cmp
pop
push
xlat
add
fnstcw
test
jo
je
popa
sub
orb
sbb
dec
sbb
push
cmp
mov
push
iret
into
stos
jle
nop
cld
xchg
shr
and
push
je
add
fildll
jns
shrl
jo
daa
andl
imul
add
adc
ret
pop
fcompl
sbb
mov
xchg
pop
sbb
cmp
pusha
mov
push
inc
lcall
lea
sbb
xor
rorl
adc
mov
fdivr
xorb
adc
adc
loop
mov
xchg
xchg
iret
sbb
test
dec
jns
lods
and
xor
jle
bound
push
cmp
cmp
xchg
jbe
push
mov
adc
aaa
movsb
aad
test
xchg
or
into
push
and
cmp
inc
lods
test
sub
xchg
sub
jbe
xor
xor
imul
cmp
jge
push
or
ret
dec
xor
add
push
push
and
sub
adc
pop
inc
and
dec
js
mov
in
not
adc
ret
pop
sbb
dec
add
push
mov
pop
or
jns
xchg
mov
mov
jmp
sbb
dec
movsl
add
insb
adc
sarb
sub
and
cmp
jge
or
mov
or
jno
add
fdivrs
test
bound
roll
sti
sbb
add
imul
sbb
push
ja
xor
or
mov
popf
leave
lret
pop
mov
sar
mov
test
enter
es
shll
mov
mov
adc
or
dec
adc
dec
push
mov
or
fimull
pop
xchg
pusha
xchg
scas
ja
push
lret
adc
fldcw
ss
js
sahf
cmp
fisttpl
pop
jae
repnz
rorl
les
add
daa
lea
push
add
add
out
sbb
push
dec
out
mov
xchg
sbb
rcrl
je
imul
popf
push
adc
js
incb
fsubl
stos
push
xchg
cmpsb
mov
sub
lods
or
fadds
push
fdivrl
aam
inc
adc
call
xor
int
sub
mov
std
gs
daa
imul
mov
mov
xchg
xor
je
cmpl
xor
lret
dec
push
dec
inc
inc
and
jae
lret
sarb
int3
mov
orb
bound
pop
pop
shl
in
push
add
mov
push
jge
xor
pop
testl
inc
dec
jbe
rcrl
xchg
fmull
sub
xor
inc
fistpl
pushf
in
push
mov
lock
test
cmpsb
mov
push
je
xchg
cli
subl
sbb
test
test
sbb
pop
cwtl
adc
adc
js
push
sbb
lock
push
je
incl
inc
sub
jns
and
mov
lods
jns
push
dec
xor
lods
push
cmp
aam
dec
and
inc
sbb
dec
inc
or
cwtl
addl
sbb
pop
push
pop
inc
sub
cli
inc
mov
lea
push
and
arpl
pop
xor
push
lea
cli
pop
in
aaa
sti
sbb
fcom
sbb
cld
pop
adc
std
xchg
sub
xor
lods
mov
addl
je
mov
xlat
sub
push
and
movsb
mov
subl
cmp
daa
leave
mov
add
pop
adcl
mov
test
dec
pop
sbb
dec
mov
fsub
cmp
loopne
rorb
cmp
pusha
pop
pop
cmp
mov
aas
dec
cwtl
sub
add
ds
jmp
mov
or
inc
repnz
adc
fldl
xchg
hlt
push
aas
push
filds
leave
leave
and
cli
insb
cmp
pop
xor
mov
or
or
add
add
mov
mov
aad
gs
call
push
aad
cmp
jge
cmp
movsb
pop
xchg
dec
dec
mov
cmp
mov
cmp
stc
mov
xchg
out
dec
and
jno
and
cmp
imul
jl
shlb
or
insl
outsl
inc
sub
and
adcb
pop
add
rcll
mov
jecxz
xchg
dec
inc
fidivrs
dec
out
pop
scas
loopne
inc
jns
adc
in
or
push
pop
and
inc
xchg
adc
scas
mov
inc
or
xchg
cmp
adc
adc
add
cmpsl
insl
mov
or
mov
add
insb
cmpsb
xor
loopne
sub
fwait
roll
mov
fstps
dec
push
adc
xor
or
dec
in
aaa
dec
pop
add
sub
add
xchg
aas
movl
mov
dec
pop
mov
cmp
or
push
sti
push
pushf
pop
cmp
mov
cmpsl
test
sbb
pop
notb
fsubl
addb
and
push
sub
and
xchg
and
and
jb
orb
push
gs
xor
rolb
mov
or
sub
add
icebp
push
fcmovnbe
jo
int3
js
pop
sub
mov
daa
int
jge
fimuls
jno
or
aaa
sub
nop
stc
mov
pop
and
cld
filds
cltd
adcl
jo
cmp
js
xchg
imul
sub
rolb
lret
popa
loopne
js
dec
nop
out
nop
push
bound
cltd
out
das
adc
adc
and
mov
outsb
and
je
mov
and
lea
fs
add
rolb
xor
and
fwait
cmpl
adcl
pop
pop
test
jo
ss
inc
aaa
sub
or
orl
cltd
fs
jae
mov
int
adc
jno
inc
cmc
cmc
mov
stos
das
in
lret
out
je
bound
dec
loopne
xor
sub
xor
pop
loop
cwtl
movsb
sbb
inc
pusha
outsl
jne
lea
push
pop
pop
orb
push
ret
loope
mov
mov
xor
mov
ficoml
or
icebp
adc
cmp
je
mov
mov
or
ja
push
test
subps
lods
mov
sub
dec
lcall
sbb
imul
jge
test
sub
ja
inc
movsl
add
dec
out
mov
cmp
or
pop
mov
pop
inc
push
and
jns
pusha
imul
cmp
testl
pop
movb
fsub
or
lock
xchg
jle
mov
mov
fmuls
sub
lahf
in
shrl
pusha
mov
bound
cs
add
popf
inc
fldl
inc
pop
mov
fistpll
cltd
jnp
and
loopne
xchg
aad
je
cmpl
jnp
jl
xor
lea
aas
fucomip
lea
xchg
fmull
rcrb
rcll
sahf
xlat
or
lahf
add
inc
call
negb
pusha
popf
or
rolb
adc
imulb
xor
iret
xor
cmp
push
cmp
mov
mov
mov
je
and
std
popa
pop
push
push
test
dec
lea
jo
loop
aad
mov
mov
cli
sub
xor
mov
sub
mov
cmp
mov
lea
or
testl
lods
cwtl
andl
pop
sbb
sub
push
hlt
popa
mov
lret
popf
aad
jne
cwtl
cmp
xchg
add
stos
in
test
mov
adc
sbb
dec
dec
adc
or
xchg
adc
roll
jmp
ss
push
pop
xchg
insl
fistl
jge
lea
lret
and
ja
fldenv
or
mov
mov
jae
mov
popf
or
cs
in
pop
and
jno
and
xchg
lret
mov
ret
outsb
popf
xchg
lea
test
or
mov
and
sbb
push
faddl
push
push
sbb
sbb
xor
lds
adc
rcrb
and
in
sub
aas
inc
xor
pusha
fsubr
lea
mov
and
int
cmp
clc
sbb
push
sbb
daa
loopne
add
add
and
pop
fs
and
test
and
and
sarb
pop
mov
iret
sbb
enter
and
inc
sbb
push
push
jne
push
cmp
xor
es
mov
dec
lds
je
or
xchg
daa
cs
das
lods
xchg
sub
daa
sub
sub
pop
insl
cltd
xchg
and
sub
sub
test
sub
adc
sub
sub
sbb
push
insb
les
adc
mov
stos
mov
jnp
dec
push
push
sbb
or
imul
testb
xor
lods
jae
sub
mov
fwait
mov
or
xchg
iret
add
jle
es
xor
adc
cmovp
sub
push
push
dec
add
xchg
or
or
sarb
testl
xchg
lea
fnstenv
push
adc
or
add
cltd
nop
inc
add
cwtl
mov
or
add
out
out
xchg
push
inc
sahf
hlt
in
cmp
add
pop
hlt
or
ret
test
loop
push
and
sbb
in
out
fld
push
insb
push
push
movl
js
xor
sti
repz
or
or
aaa
and
sbb
xchg
out
in
sbb
mov
lock
ret
in
imul
mov
and
xor
push
jae
xlat
adc
lock
jp
dec
jle
loope
insl
mov
push
add
mov
js
inc
add
into
faddl
jbe
jl
dec
xlat
pop
adc
pop
adc
add
dec
les
cmp
jne
and
cs
or
xor
roll
lock
out
cmp
je
mov
fildl
xor
stos
inc
add
scas
jne
jp
dec
or
mov
dec
scas
test
xor
adc
ds
or
jge
stos
stos
adc
ret
mov
cmp
mov
int3
aaa
loope
daa
push
pop
test
fcom
sbb
ret
fisubs
or
sarb
pop
cmp
je
inc
xlat
adc
lock
xchg
jp
push
cld
xchg
push
lds
fbld
add
mov
dec
or
movsb
rol
push
sbb
add
stc
inc
add
dec
add
ja
mov
push
je
and
int3
in
out
pusha
pop
pop
call
sub
or
xor
jl,pn
or
push
popf
fwait
dec
fmuls
or
fs
inc
sub
movsb
or
add
sti
rol
pop
jbe
je
adc
sub
push
xchg
xor
icebp
inc
lahf
sarl
sub
mov
jo
cwtl
jmp
lods
notb
lea
add
adc
mov
or
xor
aas
les
adc
sbb
cmp
ja
and
icebp
ds
test
fdivrs
je
add
adcb
push
or
or
dec
mov
xor
nop
out
movups
mov
xchg
mov
sbb
aam
sbb
jmp
sub
and
sub
addr16
arpl
loop
adc
punpckhdq
test
ja
scas
mov
xor
mov
jge
mov
mov
cld
mov
fidivrl
hlt
add
aaa
add
xor
xlat
aaa
add
es
sub
push
dec
or
xchg
push
arpl
or
cmp
movl
lcall
cmp
cmp
aad
xor
sbbl
add
adc
jno
negl
and
popf
lods
es
adc
shlb
dec
popa
cmp
imul
imulb
dec
mov
unpckhps
inc
inc
pop
pushf
xor
sbb
ret
cmp
jle
sub
shlb
pavgw
and
adc
pusha
cmp
sub
inc
pop
mov
mov
push
sahf
rolb
insb
ret
rol
es
fs
out
in
in
and
push
je
mov
and
dec
cmp
jns
push
inc
push
pop
inc
jmp
dec
xlat
mov
mov
sub
dec
sub
pop
mov
xor
jne
in
bound
pop
mov
mov
add
cmp
in
or
push
sub
or
xor
cmp
adc
xchg
sbb
in
lds
add
add
and
sbb
stos
mov
out
pop
add
nop
jns
cmp
mov
mov
inc
lcall
pop
movl
and
insb
mov
add
inc
mov
sysret
xor
push
xchg
or
or
or
sub
nop
push
or
add
or
inc
sub
add
mov
gs
lcall
pop
ret
and
sarb
jo
sti
sahf
xor
or
xchg
xchg
dec
inc
push
and
cmp
test
pusha
sbb
push
dec
fsubr
cmp
sar
enter
jae
inc
add
outsb
mov
into
sbb
pop
je
es
loopne
ret
pop
cltd
cmp
aas
sub
fisubs
rdmsr
loope
js
test
pop
cltd
js
jbe
inc
and
dec
inc
les
fsubr
inc
lret
jle
cltd
add
mov
stc
int3
inc
popf
xadd
jo
jmp
and
sub
stc
or
bnd
shrb
dec
sbb
sub
add
push
xor
xor
ss
mov
mov
popf
test
push
shlb
cmp
dec
movups
sbb
mov
popf
add
add
sbb
xacquire
rolb
add
hlt
addb
frstor
ret
not
inc
lods
add
pop
mov
cmpsb
mov
mov
lea
fistl
mov
xor
or
xchg
xchg
inc
or
mov
sbb
cmp
sub
and
or
adcb
insb
sti
loop
add
xchg
lea
and
or
mov
jmp
pop
push
push
orb
adc
pop
inc
pop
andl
adc
rcrl
and
xchg
dec
sbb
mov
xor
jo
loopne
cmp
jmp
fildl
or
xor
inc
add
aad
add
in
fdivs
cld
add
push
inc
adc
or
mov
ret
mov
in
inc
stc
das
clc
mov
push
xor
jns
mov
xor
and
push
xor
rolb
adc
leave
add
xchg
cmp
sbb
inc
mov
ret
dec
mov
lock
inc
inc
mov
dec
pop
xor
adc
push
jmp
bound
adc
pop
adc
cmp
pop
dec
xor
ret
sub
mov
movlps
mov
inc
bound
cmpsl
mov
sti
add
stos
insl
xorb
push
inc
lds
inc
sub
lret
lahf
inc
inc
test
adc
and
dec
sbb
or
cmp
push
xchg
cmp
call
xchg
and
fs
cld
mov
jo
dec
mov
mov
pop
enter
es
push
js
and
cmp
fsubrp
xchg
or
pop
lea
pop
push
push
xor
divl
dec
sbb
push
mov
dec
push
push
cmc
inc
stos
popa
sub
add
test
je
stos
incl
aaa
imul
mov
in
fistl
out
adc
add
xchg
es
and
imul
adc
push
dec
pop
or
add
inc
nop
or
add
test
adc
add
fdiv
fdivl
push
sub
ss
adc
and
dec
lcall
dec
repnz
sbb
enter
in
loope
dec
dec
adc
loop
sbb
jnp
ds
sbb
adc
ss
jmp
jmp
mov
pusha
inc
movsl
jne
push
mov
add
pusha
xor
lock
test
add
mov
aas
cmp
mov
xor
fisttpll
pusha
lret
dec
sbbl
mov
js
sbb
cli
dec
push
cmp
jge
jg
adc
inc
sub
clc
sbb
loope
or
fwait
out
aad
sbb
add
pop
pusha
ret
insl
pop
cmp
push
cmp
mov
sbb
mov
sbb
inc
push
fcmovu
push
addb
js
lea
dec
xor
fs
sbb
sub
push
xor
or
scas
test
lret
add
xor
push
stos
or
rol
add
adc
add
int
fiadds
movsl
js
rcrl
lods
mov
out
add
adc
sahf
and
cs
sarl
add
xchg
adc
stos
mov
pop
hlt
ret
xchg
adc
and
ret
add
push
je
cli
dec
fistpll
add
sbb
mov
sbb
inc
push
adc
int3
dec
inc
xor
or
das
lret
inc
inc
push
mov
add
neg
fldl
push
add
inc
icebp
push
inc
lcall
ret
push
fwait
add
add
pop
jnp
and
aaa
aaa
shlb
aaa
xor
pop
push
fwait
sbb
or
scas
icebp
int3
orl
sub
enter
xlat
popa
stc
push
lcall
out
mull
jmp
movl
cwtl
or
sbb
jbe
movsb
fstpt
lods
sbb
mov
jp
das
icebp
cmp
dec
jmp
push
mov
mov
outsb
mulb
mov
sbb
aas
fxsave
push
jo
addl
and
loop
xchg
adc
out
popf
lods
push
push
xchg
push
fistl
enter
call
rcr
sub
imull
scas
pushf
call
mov
cmp
adc
dec
loope
dec
insb
jo
mov
mov
push
and
jns
xchg
sbb
icebp
or
enter
push
adc
xor
out
add
dec
add
xor
add
sarl
add
mov
nop
adc
test
lret
stc
mov
call
sbb
repz
out
sbb
sbb
mulb
xor
xor
mov
fldl
jns
js
pop
or
sbb
mov
rorb
enter
add
call
sbb
dec
movsl
jns
jg
xlat
inc
push
add
or
mov
pusha
inc
test
mov
add
scas
or
add
enter
shrl
mov
lds
inc
shll
mov
js
mov
mov
lret
test
add
mov
iret
push
cmp
scas
lock
mov
add
add
jl
push
jo
adc
shr
repnz
icebp
or
or
mov
adcb
test
jecxz
xor
fiaddl
sahf
aam
add
or
test
test
pop
push
jns
push
cld
or
jnp
mov
and
out
pop
mov
jge
cmp
mov
test
sbb
sbb
in
inc
into
icebp
cmpsb
aad
or
sbb
in
or
pushl
push
jmp
shlb
aas
jno
push
loope
push
cs
notl
aam
leave
push
dec
rol
mov
sahf
js
push
jno
xchg
push
lods
das
stos
mov
fmulp
inc
ss
sbb
in
or
push
out
jno
dec
xchg
jl
xor
loope
sbb
and
pop
and
and
ljmp
outsb
push
loopne
pop
adc
pushl
sarb
jl
imul
and
lahf
lods
dec
push
sahf
add
orl
movsbw
inc
fsts
pusha
or
jne
out
mov
or
je
adc
fwait
mov
inc
push
pop
add
mov
mov
hlt
push
inc
add
sbb
inc
data16
cmp
ds
pop
rcrl
push
fmull
daa
cmp
sbb
or
pop
jne
loope
sbb
adc
imul
dec
sbb
jmp
jmp
pop
int3
push
add
inc
push
pop
cwtl
xchg
das
push
mov
aam
daa
sbb
ret
mov
and
dec
jg
lea
fdiv
add
in
mov
inc
out
or
out
repnz
xchg
sbb
imul
bnd
cmp
mov
and
aam
int
or
mov
ljmp
mov
out
sub
push
aaa
jg
jmp
das
sub
inc
jb
cmp
xor
xchg
les
or
sub
lds
sbb
shlb
push
and
loopne
pop
cmc
rcr
xchg
loop
and
mov
mov
in
ret
add
insb
fsubs
xor
aaa
push
pop
mov
sub
pop
cmp
sbb
jae
sbb
test
stos
mov
aam
jne
arpl
int3
pop
sbb
push
cltd
test
xchg
pop
sbb
xor
je
stos
std
pusha
mov
mov
push
fiaddl
sti
and
adc
test
mov
adc
fwait
divb
pop
mov
fcomip
les
ret
sub
rcrl
jo
adc
aaa
jp
fists
add
hlt
cmpsb
mov
and
lock
neg
adc
sbbb
fimull
test
push
pop
sub
xchg
or
or
into
into
clc
sub
popa
cmpsb
mov
int
or
mov
ret
cmp
mov
or
add
leave
clc
cmp
and
adc
repz
fnstenv
sub
fs
in
mov
cmc
jnp
je
xor
iret
test
lret
or
in
pushf
inc
adc
arpl
dec
scas
das
dec
fucomip
rcrb
imul
push
add
movl
sbb
push
pop
mov
test
hlt
mov
decl
adc
lcall
mov
mov
movsl
pop
adcb
clc
or
incb
push
or
test
inc
xchg
and
cmp
adc
add
xchg
cmpb
insb
and
jno
xchg
icebp
fld
adc
cmp
out
jg
sti
inc
xor
jne
or
mov
movl
push
adc
push
adc
inc
dec
inc
and
movl
rcl
cmp
xor
shlb
pop
js
insb
pop
xchg
js
sub
leave
push
das
and
int
push
push
test
xor
lods
shll
cmp
lods
or
in
in
adc
sbb
jne
movsl
add
xchg
cwtl
sub
mov
pusha
pop
inc
jns
pusha
or
jecxz
dec
inc
push
orps
pop
xchg
sbb
mov
hlt
inc
inc
ret
sub
sub
mov
push
lods
fwait
aam
clc
sub
xchg
stc
add
incl
sar
push
add
push
push
push
push
popa
in
ret
jle
xor
mov
cmp
ljmp
and
xchg
mov
jmp
cmp
jne
loop
nop
ret
inc
push
jne
andl
adc
mov
ss
movsb
cmp
lcall
dec
push
nop
xor
dec
push
and
test
jo
out
sub
dec
sub
cmp
inc
mov
icebp
cmp
adcl
add
and
mulb
stc
addl
sub
ds
sti
add
js
cmp
movsl
das
scas
jge
jmp
jbe
inc
cwtl
lcall
orl
hlt
adc
jg
call
mov
cli
inc
lea
in
test
mov
lods
fnstsw
mov
pop
cwtl
call
pushf
cmp
jle
scas
imul
add
xor
ja
jp
xchg
xchg
jbe
mov
popf
enter
adc
mov
jnp
adc
jbe
and
arpl
add
inc
adc
cmp
je
ss
cmp
push
mov
mov
mov
nop
sbb
out
xor
insb
nop
es
add
cmp
add
xor
add
lods
imul
enter
shrb
push
push
stos
outsl
xchg
mov
loop
sbbb
cmp
test
imul
push
popa
pushf
push
inc
cmp
fstl
push
pop
outsb
adc
icebp
sub
data16
dec
jmp
sub
jb
cmp
in
push
cmp
lcall
stos
xchg
mov
pcmpgtb
jo
or
jnp
add
fistpll
mov
push
push
push
clc
ret
push
jecxz
mov
sbb
es
fwait
jne
cmp
mov
xchg
iret
sub
lahf
mov
loopne
shll
cs
in
les
outsb
fwait
dec
or
wrmsr
push
stos
mov
add
push
xchg
and
mov
xchg
and
bound
add
fsubs
addr16
inc
imul
push
cmp
loop
std
les
test
dec
std
lods
shlb
pop
and
jne
pop
test
push
jmp
and
dec
mov
lods
aas
jge
scas
push
int3
pop
sbb
pop
and
adc
cmp
push
sub
xor
hlt
jno
add
jmp
fstpl
dec
pop
fsubr
and
icebp
add
add
rorb
cmpsl
insl
sub
sbb
or
pop
int3
je
push
cmp
pop
push
fcoml
in
les
inc
jnp
scas
mov
xor
inc
daa
hlt
aad
sbb
and
sbb
mov
inc
mov
dec
jns
dec
movsl
sub
dec
arpl
jbe
sti
cmp
je
xchg
mov
cmp
test
push
test
ret
arpl
xchg
adc
mov
test
ss
dec
add
and
sbb
jo
pop
xor
les
mov
push
and
mov
push
inc
mov
cmpb
and
into
clc
loope
es
push
repz
cmp
push
mov
movsl
rcll
into
test
popf
loope
gs
jns
in
rcll
and
clc
pusha
mov
jmp
bound
or
test
pop
push
loopne
mov
push
inc
loopne
dec
and
mov
int
ret
cltd
pop
adc
ja
mov
insb
lea
lret
add
and
mov
mov
rclb
out
mov
and
mov
adc
jle
add
cmpw
adc
sbb
cmpb
jbe
shl
sbb
push
pop
add
ss
stos
xor
ljmp
pop
mov
add
sar
add
push
jo
mov
mov
pop
les
adc
pop
jns
or
sbb
and
sbb
lock
cmp
xchg
pop
sbb
pusha
jne
dec
clc
orl
testb
jp
sub
jmp
popf
loope
lcall
xchg
decl
mov
pop
cmpl
push
adc
rorl
repz
xchg
or
andl
jmp
xchg
sbb
add
dec
cmp
sbb
scas
lret
inc
ret
js
jo
les
inc
xor
sub
cmpb
inc
pushf
nop
mov
jecxz
or
dec
es
push
add
sub
cmpsb
jecxz
add
mov
inc
sub
dec
fs
inc
cmp
mov
jb
fs
push
jle
cmp
lods
add
cltd
dec
pop
in
push
mov
xor
stos
data16
jo
jns
imul
and
mov
or
icebp
or
cmp
adc
adc
movsb
add
push
stos
fsubrl
mov
add
and
sub
stc
es
push
pop
fiadds
lea
outsl
inc
mov
adc
mov
movsl
push
mov
scas
lods
in
xor
fsubs
sub
test
add
add
sub
movsb
movsl
or
sub
xor
push
or
adc
pop
lock
and
lods
adc
adc
adc
xor
fcom
xor
cmpsl
fwait
sbb
mov
arpl
inc
dec
inc
iret
mov
mov
inc
lret
ljmp
call
test
push
jmp
sub
push
mov
scas
or
xor
fwait
ret
mov
rcrl
gs
and
fcoms
stc
xchg
dec
and
push
lret
popa
sbb
popa
loope
cld
sbb
jne
or
push
int3
dec
add
popa
or
mov
or
jecxz
cmpsb
or
sbb
jp
lock
cmpl
pop
je
or
push
jmp
arpl
xchg
cs
movsb
aaa
adc
test
dec
adc
mov
stos
mov
enter
add
cltd
and
add
jl
push
or
inc
hlt
add
test
mov
push
push
mov
mov
shrl
jne
test
addr16
mov
cltd
xchg
sbb
or
xchg
xchg
or
test
je
push
rcll
mov
pop
push
ss
daa
xor
aas
stos
test
mov
call
push
and
push
frstor
pop
xor
decl
jns
and
jo
jge
out
std
jmp
les
in
dec
sbb
fcomps
shl
shrb
dec
xor
mov
cmp
imul
sbb
call
or
stc
mov
mov
jmp
dec
mov
cli
dec
push
popa
inc
jns
jmp
and
sbb
lock
adc
lahf
in
cld
sbb
in
in
mov
and
jmp
roll
sub
xchg
dec
lret
daa
mov
mov
dec
mov
jne
or
dec
mov
inc
rclb
adc
jae
sub
push
pushf
clc
xor
push
inc
ja
cltd
idivb
adc
dec
lea
jmp
push
push
das
in
xchg
add
pop
pop
sub
idivl
ret
addl
pop
inc
and
cwtl
adc
nop
jp
fucomip
xchg
mov
in
dec
test
cld
inc
pop
inc
push
test
roll
add
xor
outsb
inc
pop
rcll
inc
daa
sahf
mov
add
bound
inc
add
mov
xchg
xor
repz
mov
adc
insl
cwtl
and
sub
push
sbb
mov
and
adc
inc
sahf
jo
inc
je
xchg
push
cmp
mov
aam
push
mov
dec
clc
inc
ret
dec
xchg
das
push
inc
add
jmp
and
mov
nop
out
inc
inc
jmp
mov
sub
pop
sub
xchg
je
cmp
mov
enter
dec
inc
inc
dec
cmp
jne
shrb
and
add
push
call
sbb
nop
mov
jne
sub
dec
sbb
jno
mov
inc
sub
mov
push
loope
mov
cs
pop
arpl
xor
xor
pop
pop
adc
jp
movsb
xor
push
and
jb
ret
fcoml
jno
loopne
add
add
pusha
or
adc
jge
sti
jecxz
jle
ss
cmc
mov
rorb
mov
mov
ds
jnp
loopne
pusha
add
enter
movsl
arpl
mov
mov
lret
push
inc
adc
repnz
nop
and
and
stos
aad
call
ja
xchg
add
add
addl
jmp
or
out
or
or
aas
cs
dec
dec
shr
dec
lret
push
xchg
add
cmp
xchg
or
loope
and
mov
rcr
jne
ja
push
aas
shlb
in
lds
sbb
inc
nop
in
or
mov
rolb
pusha
mov
enter
cmpsl
xchg
jmp
mov
loop
and
movsl
sub
dec
es
xor
pop
pop
fbld
fsubs
shlb
jl
gs
lahf
jne
cmp
push
and
daa
cmp
out
hlt
mov
push
xor
adc
pop
cmp
xor
out
lods
mov
hlt
mov
enter
sub
or
xor
rclb
mov
bnd
mov
push
loop
mov
push
push
push
test
adc
push
xor
sbb
sbb
add
fstl
int
push
test
push
je
mov
ret
pop
push
push
adc
cmp
jmp
push
jg
shlb
repz
cmp
out
pop
or
mov
pop
add
test
xchg
push
push
out
inc
jo
xor
jg
cmp
pop
arpl
add
and
js
pop
xchg
cmpb
nop
call
leave
and
jmp
cmp
jne
xor
enter
lret
call
xchg
xlat
adc
ss
push
pop
insl
dec
test
cwtl
mov
pop
pop
arpl
ret
pop
mov
dec
fsts
mov
sahf
add
dec
testb
into
push
lock
or
mov
js
adc
and
or
adc
pop
in
pop
or
or
adc
mov
ja
dec
or
xor
fildl
push
sub
mov
fcomps
inc
pop
addb
or
adc
mov
cmp
aam
ja
mov
mov
push
xor
shrl
push
movb
lock
sub
cmp
lods
xchg
jl
add
fs
dec
daa
test
inc
mov
xor
ja
xchg
call
cmpsl
jp
cmpsl
push
lcall
les
sbb
scas
mov
or
adc
dec
inc
sub
jns
adc
ret
jne
dec
sbb
lahf
and
mov
pop
add
mov
roll
adc
and
repnz
inc
adc
cmc
imul
ret
aaa
addr16
loop
aam
or
and
adc
jnp
clc
sub
enter
test
ror
mov
test
mov
mov
push
es
fadds
shl
pop
call
aad
das
mov
imul
inc
cs
aam
loop
pop
adc
aaa
xor
pop
mov
sub
adc
scas
sub
loop
cmp
sub
jle
mov
es
add
push
mov
inc
sub
add
pushf
shrb
lea
and
cmp
xchg
cmp
and
scas
lea
loopne
adc
ss
cmp
sub
pop
aam
sbb
or
shlb
and
mov
jne
out
frstor
loope
repnz
adc
mov
push
and
pop
push
pop
cmpb
push
fsub
xorb
jnp
pop
mov
ret
dec
mov
mov
and
les
add
add
xchg
mov
mov
test
or
lock
push
pusha
movl
les
in
xor
cmp
push
mov
dec
mov
adc
push
adc
subl
mov
sbbl
sbb
or
jecxz
loop
sbbb
cmp
negb
pushf
xchg
aas
enter
dec
add
nop
or
ret
je
jg
jg
add
adc
or
and
nop
and
mov
adc
mov
push
jb
xchg
push
inc
outsb
add
pop
add
and
repz
and
sarl
inc
inc
mov
mov
call
lret
cmp
xlat
shll
cmp
sbb
fists
xchg
fprem
imull
mulb
lret
sbb
rorl
sbb
fistps
or
pop
mov
pop
sub
jmp
jmp
data16
dec
jb
movsl
pop
cmpsl
add
dec
cmp
jno
dec
fwait
and
xchg
mov
sbb
jae
push
lahf
les
push
or
pop
aad
sti
sub
mov
movsl
sbb
sub
or
sbb
inc
or
std
cli
dec
lock
and
ret
stc
push
add
xor
cmp
and
pop
sub
xchg
movsb
inc
sub
adc
es
jns
xlat
pusha
xor
push
aad
ret
pop
sbb
pop
and
movsl
out
popf
cld
icebp
mov
and
push
add
stos
in
repz
or
or
movsl
cmp
add
int3
adc
aam
mov
mov
push
daa
mov
ret
es
mov
or
daa
aas
imul
test
jmp
mov
push
insl
idivl
add
andl
jb
or
adc
mov
andb
movsl
push
or
std
stc
and
rcrl
movsl
add
xchg
sub
rorl
dec
mov
insb
ds
sbb
insl
pushf
push
xchg
nop
mov
sub
clc
sub
push
push
fdivrl
mov
inc
sbb
jne
je
xchg
cmp
push
cwtl
and
and
adc
adc
inc
pop
and
add
dec
rclb
add
cs
std
adcb
test
adc
fadd
add
and
and
sbb
aad
adc
into
adc
jo
mov
or
hlt
lock
popa
ret
sbb
cmp
add
push
fdivrl
inc
stos
movsb
fdivrl
nop
push
inc
imul
arpl
mov
jne
and
mov
mov
incl
xor
or
mov
mov
or
nop
push
inc
andl
ret
sub
ljmp
adc
push
pop
push
xchg
pop
setnp
nop
push
and
push
pop
or
loope
inc
in
or
jno
mov
add
cmp
push
fs
iret
mov
inc
or
push
and
cmp
add
jp
sub
sbb
and
adc
xor
bound
js
push
ss
and
pusha
cwtl
les
roll
and
add
movzwl
add
adc
popa
xor
sbb
pop
or
test
sub
sbb
dec
loope
or
or
xor
pop
jb
dec
mov
xor
movsb
sub
mov
or
daa
punpcklwd
jne
xor
mov
adc
insb
jnp
call
inc
jo
mov
loopne
cltd
push
invd
cmp
cltd
cmp
imulb
into
mov
in
loope
sbb
dec
mov
or
xor
pop
sahf
dec
mov
imul
ljmp
xor
cmp
push
test
pusha
sub
movsl
fstpl
jbe
imul
clc
imul
push
sbb
enter
adc
xor
lea
in
mov
and
adc
loopne
enter
repnz
or
push
into
daa
leave
lods
and
jle
mov
add
jb
icebp
mov
and
inc
or
or
xor
mov
insl
adc
push
adc
add
les
xchg
clc
mov
jno
push
mov
pop
push
pop
adc
push
xchg
pop
mov
mov
dec
xor
mov
and
xor
mov
pushf
add
dec
xchg
pop
jno
sbb
or
jo
cmp
adc
lea
lcall
pop
xorb
xchg
mov
adc
jae
filds
repnz
bound
out
or
xor
sbb
add
inc
lcall
jmp
fwait
add
sbb
and
sbb
xchg
js
push
mov
loopne
cwtl
adcl
inc
jp
aaa
jno
add
xor
jno
adc
adc
xchg
nop
adc
add
sub
push
jl
es
fildl
xlat
jge
or
xor
pusha
enter
cmp
mov
sbb
and
adc
mov
xor
hlt
inc
sub
fldcw
dec
ds
nop
addr16
xor
gs
jno
gs
add
sbb
push
pop
shr
cmp
in
scas
inc
pop
and
fcoml
lea
mov
aaa
rcrl
add
sub
dec
adc
loop
nop
les
pop
jmp
mov
add
loope
xchg
jbe
or
dec
inc
add
loopne
jge
mov
mov
mov
pop
cwtl
sahf
xchg
adc
cmp
inc
push
je
test
ja
xadd
rcl
push
in
aam
stos
and
ret
insl
sbb
movsl
enter
jne
dec
imul
mov
push
or
adcb
and
repz
add
adc
sbb
push
cmp
inc
sbb
outsb
out
sbb
add
pop
push
xchg
add
addr16
push
cmp
add
or
das
pop
cld
cs
or
push
sub
inc
dec
dec
pop
jns
fmuls
add
push
mov
jl
fildll
jne
mov
test
lea
ja
lds
mov
in
sbb
mov
or
je
ss
jp
inc
jge
pop
push
and
stos
xchg
jne
jmp
movsb
imul
xchg
cmpsl
cmc
add
and
pop
xchg
pushf
add
adc
adc
mov
inc
dec
adc
test
mov
inc
and
mov
push
addl
inc
and
inc
pushf
or
xchg
add
test
dec
test
pushf
out
sub
test
sbb
adc
or
jle
cwtl
adc
push
test
add
fnstsw
mov
rclb
push
sbb
ja
xor
cltd
add
pop
hlt
add
es
out
xorl
je
lahf
xor
pop
ds
pop
mov
inc
je
push
inc
adc
sbb
adc
add
jg
mov
pop
sub
sbb
or
fwait
imul
lea
movsl
and
int
adc
call
and
or
sbb
pop
mov
sub
sbb
pusha
sbb
addb
stos
fadds
mov
pop
mov
loope
sub
mov
push
xorl
hlt
cmp
mov
add
mov
and
loopne
or
fstp
cvtdq2ps
and
out
push
pop
sub
xchg
mov
and
inc
pusha
dec
movsl
cmp
xorl
inc
adc
add
test
ret
xor
sbb
js
mov
dec
lods
add
repnz
into
push
xchg
das
push
add
add
mov
xchg
out
add
add
sub
mov
imull
movsb
lea
inc
push
jle
loop
add
jne
das
fcom
insl
sub
add
mov
into
jg
push
add
cmp
pop
ret
insb
mov
pop
pop
test
dec
mov
fstl
aas
je
adc
jne
mov
int
or
cmp
test
gs
cltd
cmovne
and
push
pop
insb
jle
ret
xor
bound
loopne
inc
lods
addl
lret
xor
sbb
push
mov
mov
lods
sub
imul
xchg
or
push
push
inc
mov
sti
add
push
pop
push
push
mov
inc
mov
ret
xchg
ret
add
lock
or
pop
fldcw
test
leave
imul
dec
push
mov
lcall
lret
pusha
mov
rol
mov
pushw
mov
pop
xorb
push
test
xor
sbb
adc
or
fstl
outsb
dec
jnp
mov
lods
dec
xor
call
mov
jmp
push
sub
xor
subb
adc
adc
push
adc
xor
pushf
mov
data16
mov
mov
sub
insb
iret
sub
fcoml
loope
les
pop
xor
pop
jb
iret
push
sub
lea
push
sbb
mov
sub
insb
xchg
and
mov
cmp
cs
hlt
loop
pop
add
loope
or
in
cmp
jge
nop
adc
je
jecxz
xchg
xor
mov
mov
xchg
dec
cmp
adc
xor
cmpsl
cmp
test
lret
sub
outsl
lcall
out
fwait
mov
fisubs
ja
repnz
sbb
lret
adc
sbb
or
popf
daa
mov
adc
cli
cmpsl
and
push
outsb
ss
pop
adc
mov
imul
std
mov
push
xor
xchg
mov
mov
das
pop
sub
stos
pop
xor
inc
int
mov
pop
dec
xchg
sbb
arpl
sub
pop
add
pop
call
mov
inc
adc
repnz
test
push
pop
in
add
mov
and
sub
xchg
or
clc
pop
push
mov
rcll
leave
pop
imul
in
push
test
or
iret
sbb
add
in
inc
lods
fiaddl
inc
xchg
mov
movl
insb
or
ja
inc
popf
adc
das
push
aas
int3
mov
inc
adc
imul
and
add
and
cmp
testb
and
sub
cmp
and
adc
push
cmp
dec
jae
add
push
add
sbb
mov
inc
pop
lcall
arpl
xlat
stos
dec
dec
mov
adc
inc
adc
inc
or
movsl
sub
pop
ret
mov
addr16
cmpsb
rol
pop
cmpb
add
loop
add
das
sbb
mov
jne
fisttpll
push
push
inc
cli
and
fisubrl
int
data16
lea
fsubs
mov
inc
cwtl
stos
imul
call
in
test
fwait
pop
mov
ds
xor
ss
and
add
cmpl
xor
je
push
std
sub
xchg
dec
and
jg
mov
push
cmp
push
cmp
jle
cmp
jp
push
cmp
fisttps
push
cmp
mov
mov
push
add
inc
jmp
cmc
daa
or
push
data16
pop
add
insb
loope
fbstp
or
jg
or
fwait
inc
or
fs
pop
idiv
sbb
fisubrl
add
adc
imul
in
adc
adc
mov
test
mov
cs
rorb
imul
fstps
add
inc
xchg
xor
push
push
hlt
xor
and
jbe
repz
mov
dec
fdivrs
or
pop
insl
enter
popf
lock
sbb
and
je
or
iret
adc
adc
or
adc
xchg
sub
inc
mov
int
je
stos
cmp
push
mov
xor
sub
ds
out
adcb
mov
xchg
lret
add
adc
add
and
sbb
jo
inc
jo
popf
adc
in
dec
sub
ret
imul
pop
sub
push
ret
sbb
adc
or
xorb
insl
add
adc
movsb
or
dec
add
in
addr16
push
ror
dec
leave
add
sbb
dec
pushf
leave
je
out
loopne
pop
pop
jl
outsl
loopne
inc
jl
rorl
daa
cltd
movsl
adc
fistpl
add
push
data16
dec
pop
mov
dec
push
sub
nop
xchg
adc
mov
mov
adc
sbb
sbb
inc
enter
popf
push
push
inc
or
add
and
mov
adc
xchg
inc
leave
gs
xor
and
add
and
ss
enter
aas
sbb
in
push
dec
adc
add
inc
sub
xchg
cmc
jg
push
rcrb
xchg
jecxz
sbb
sbb
sbb
popa
insb
xchg
mov
mov
add
push
fcoms
inc
fwait
aas
inc
mov
es
fcoml
and
mov
outsb
and
cmp
jmp
mov
rcr
fiadds
adcl
ljmp
movsb
and
xor
sbb
cmpsl
pop
adc
arpl
lods
cmpsl
std
cmp
xor
and
lcall
push
pop
push
and
add
and
add
enter
push
add
and
xchg
mov
adc
adc
rolb
mov
or
add
lret
jne
xor
add
add
push
loope
push
adc
loopne
push
mov
xchg
test
adc
sbb
jns
fdivs
push
dec
sbb
and
sbbb
dec
or
push
or
lods
aad
repz
xlat
test
inc
adcb
xchg
mov
out
loopne
ret
sbb
shl
jo
roll
mov
and
sti
cmpsb
push
adc
inc
sbb
adc
jo
jb
add
xchg
icebp
push
cmp
or
add
and
inc
aaa
jl
and
jne
lea
add
pusha
inc
sub
push
out
jmp
cmp
inc
insb
arpl
xchg
dec
adc
test
inc
aas
nop
add
mov
movb
cmpsl
sbbl
imul
add
pop
lods
push
add
aaa
and
fwait
adc
add
xchg
sbb
dec
leave
xchg
fiadds
or
inc
jno
adc
icebp
leave
stos
sbb
mov
xchg
fucomp
sub
or
pminsw
shlb
mov
outsl
mov
cwtl
jp
sbb
add
push
repz
mov
xor
add
dec
aaa
ss
cmc
inc
clc
sbb
and
xchg
or
and
std
inc
fs
pop
inc
and
sbb
add
aam
add
or
push
adc
inc
ror
mov
pop
les
adc
gs
addr16
pop
in
push
popa
stos
in
test
jne
stc
lea
rol
push
pop
cmp
xchg
mov
sbb
pop
add
ret
adc
hlt
pop
fstpt
fildl
add
mov
jo
loope
inc
add
dec
dec
pusha
inc
dec
or
dec
sbb
cmp
pop
xchg
jl
add
repz
pop
push
mov
and
jnp
push
mov
xchg
jg
shl
jg
adc
ret
lods
lods
popa
xor
adc
jmp
inc
mov
sub
pop
pop
add
xor
mov
imul
nop
or
adc
push
aad
push
lea
mov
jb
and
adc
fcmovnb
and
daa
xor
lods
in
and
ffreep
jecxz
add
roll
ret
ret
adc
push
sti
and
insl
pop
push
cmp
ja
add
movl
or
fisubl
andb
push
xor
rcrb
stos
or
out
add
pop
push
mov
popa
negl
pop
loop
pop
mov
outsb
or
sub
xchg
call
je
cltd
fstpl
mov
test
lock
out
inc
je
sbb
call
push
xchg
push
fldl
outsl
xchg
jp
sbb
dec
sbb
sbb
rcr
or
mov
fstpl
mov
mov
mov
sti
lods
std
js
pop
or
adc
js
jmp
pop
fsub
pop
fsubrp
adc
int3
pop
jo
decl
sbb
pop
mov
push
movl
nop
mov
push
add
cmp
lret
pop
jb
scas
sub
mov
mov
adc
xchg
jbe
fimull
shll
roll
jns
stc
jge
or
or
out
or
fidivs
mov
push
pop
call
pusha
mov
pop
into
and
xchg
mov
sbb
dec
iret
jns
push
pop
leave
inc
mov
push
rcr
orl
xchg
jo
and
cmp
pop
test
arpl
sbb
cmovle
sub
andl
adc
add
and
mov
imul
mov
mov
mov
sbb
jnp
mov
data16
xor
add
es
xchg
decb
jb
stos
xor
shld
add
or
test
sbb
lea
push
mov
jns
push
and
popa
imul
je
or
push
mov
push
adc
push
push
inc
inc
inc
pop
add
or
or
cli
loope
adc
data16
push
testb
pop
scas
and
movsb
leave
leave
add
rcr
pop
or
rolb
test
mov
pusha
push
mov
arpl
jne
jbe
and
ja
push
adc
rcrl
xor
or
das
subb
imul
sbb
cmpw
jne
jle
lods
aaa
mov
cld
cmp
stos
cld
mov
push
jge
mov
sbb
pop
xchg
lea
cmp
or
adc
sbb
leave
out
data16
lahf
movsb
imul
push
cwtl
dec
jo
push
push
movzwl
loope
push
dec
inc
xlat
push
dec
in
adc
push
ret
mov
or
add
ja
push
pop
add
add
test
mov
adc
push
sbb
insl
jecxz
fbld
sbb
mov
jle
movsl
andb
aad
lods
adc
mov
cmc
insl
loope
adc
pushw
int
inc
dec
pusha
lret
pop
xchg
add
in
subl
jno
mov
cs
inc
or
popl
aaa
or
push
push
mov
mov
ret
pop
scas
pusha
lea
lds
cmp
mov
adc
shlb
xchg
xchg
add
jb
adc
sbb
jl
lock
xor
nop
pushw
push
push
fiadds
xchg
addr16
adc
add
mov
xchg
imul
xchg
adcb
xchg
or
lds
int3
cmp
je
mov
gs
lret
cli
push
pop
lds
adcl
fsubrs
sbb
cmp
pop
xchg
lods
je
addl
cwtl
push
fisubl
pop
push
xchg
sti
pop
je
out
into
jb
jns
cmp
fcompl
add
mov
das
xorb
and
mov
xchg
xor
mov
lcall
xchg
mov
add
mov
fcom
and
mov
adc
nop
mov
ret
or
sbb
ret
pop
or
inc
imul
or
test
test
mov
mov
sbb
xor
push
bound
outsb
pop
push
push
aas
cmp
adc
and
ret
lods
xor
dec
and
push
dec
sbb
ss
and
je
and
push
adc
cmp
add
ret
cs
orb
or
fstp
push
add
pop
xchg
jo
movsl
movsl
movsb
es
or
les
shll
test
mov
adc
push
ljmp
call
inc
fadds
ret
mov
hlt
shll
orb
test
jge
repnz
jno
mov
sbb
data16
inc
outsl
mov
jecxz
mov
icebp
testl
inc
mov
push
and
jne
dec
jae
and
int3
and
sbb
sbb
ret
aam
adc
test
adc
movsb
jl
mov
or
and
or
fisttpll
adc
adc
dec
call
fsubrs
cld
mov
or
push
mov
add
mov
mov
jmp
in
rcr
cmp
lcall
jmp
mov
dec
add
mov
and
mov
jmp
clc
out
out
jmp
in
scas
push
int
mov
push
jmp
push
adc
and
pop
pop
xchg
jmp
dec
xchg
sbb
les
stc
jl
fists
ja
dec
or
push
add
repz
adc
add
movsb
insl
xchg
mov
sbb
addb
pop
sub
push
sbb
int3
push
aas
add
dec
push
pop
cmp
xchg
xor
movsb
aas
cld
in
and
jne
cmp
dec
daa
jo
ja
xchg
push
mov
jbe
dec
hlt
dec
adc
cmp
jbe
xchg
fs
addr16
jl
cwtl
daa
sbb
dec
movsl
les
inc
pop
sbb
add
dec
test
jbe
or
push
aas
jo
push
sub
adc
imul
jbe
lock
jg
sub
push
aad
movsl
sti
cmpsl
push
adc
push
imul
add
push
iret
repz
mov
cmp
repz
rcr
loope
jns
repz
das
cmp
jns
out
push
popa
insl
ja
out
sahf
orl
mov
repz
out
call
adc
pop
repnz
sub
cmp
jp
insl
push
sbb
xor
aad
sub
stos
dec
cmp
cmpsb
push
mov
add
and
cmp
pop
sbb
addr16
mov
rorl
sub
mov
push
add
add
shll
dec
adc
mov
je
insb
sub
fwait
jmp
jl
mov
sub
mov
lock
pushf
push
jae
mov
push
out
movsb
mov
push
gs
nop
rorl
fcompl
jb
jg
push
nop
faddl
jp
test
add
mov
fsubl
cmp
add
lret
and
shll
ret
mov
xchg
and
pop
dec
sar
dec
pushl
dec
xor
xchg
sti
sahf
xchg
fwait
stos
push
dec
test
add
adc
cmpsl
es
add
jne
sarb
or
add
cmpb
jnp
jo
vmread
mov
mov
push
mov
push
cmpl
sub
push
xchg
dec
jge
add
push
push
mov
adc
bnd
or
shrb
add
and
push
push
mov
mov
xchg
call
push
gs
push
or
mov
sub
sbb
sbb
or
jae
sub
cltd
rorb
bound
adc
adc
and
push
xor
sub
xor
cli
stos
pop
xor
inc
cmp
or
mov
orl
sbb
add
fisubl
faddl
add
fists
lret
test
arpl
lahf
and
or
add
adc
stos
adc
pusha
mov
pop
mov
mov
push
inc
xchg
and
mov
and
push
push
les
inc
rol
sbb
inc
sbb
les
jl
gs
adc
mov
call
and
mov
mov
loop
mov
sub
lods
pusha
dec
sub
outsb
and
pop
xor
add
jl
mov
and
sarb
adc
icebp
push
sbb
mov
ds
push
stos
pop
xor
in
shrl
stos
mov
pop
les
divb
sub
jge
das
jle
negb
push
arpl
adc
sub
xor
add
fiadds
dec
dec
push
jns
xor
xor
cmp
sarb
stc
xor
fwait
xor
and
lcall
enter
lcall
dec
lcall
dec
lcall
dec
lcall
ss
mov
imul
mov
pop
int3
jl
test
hlt
mov
push
cld
mov
shlb
lret
enter
cmp
pop
je
movsb
dec
dec
test
sbb
push
inc
pushf
mov
dec
mov
lock
mov
js
pop
pop
sbb
stos
jb
cmp
dec
sub
movsb
bnd
pop
push
jb
mov
sbb
sbb
jae
and
popa
inc
addr16
orl
int3
sbb
and
mov
add
and
xchg
xchg
jns
sbb
and
ljmp
sub
cmpsl
pushf
addr16
mov
adc
notb
repnz
jmp
js
or
adc
stos
push
inc
cmpl
and
cmp
mov
pop
push
dec
imul
inc
sahf
inc
movsl
out
xchg
or
pop
lock
sbb
orl
pop
rorl
mov
lea
test
rorl
sub
bnd
scas
push
mov
cmp
int3
push
pusha
dec
cmp
inc
mov
cmpsl
pop
jmp
fwait
nop
movsb
aas
pop
test
es
jl
cwtl
test
fwait
push
aas
test
ds
es
in
inc
in
aaa
loope
loope
orl
jmp
or
sbb
adc
rcrb
repnz
inc
mov
movsl
rcll
inc
das
xor
push
inc
push
add
pop
xchg
out
xchg
sub
xchg
jle
adc
jge
movsb
rcrb
lods
movsb
popa
add
and
aaa
dec
jne
pop
pop
test
dec
or
js
add
je
or
scas
or
in
jo
jmp
push
sub
sbb
ss
and
into
jecxz
inc
popa
and
popa
xchg
pop
dec
bound
popf
and
adc
out
xchg
out
add
dec
dec
add
std
repz
jge
test
xchg
lock
int3
ret
xchg
or
add
push
push
push
mov
jp
lods
imull
nop
mov
addr16
fistpl
outsb
xor
xchg
rorb
xchg
adc
pushf
aas
in
shlb
sti
jb
add
xor
sahf
outsl
lds
xor
orb
std
loopne
arpl
sbb
data16
test
inc
call
push
dec
imul
nop
hlt
or
and
jo
and
xchg
fcomps
jecxz
sbb
cmp
cs
ret
dec
iret
mov
sahf
fmull
or
push
rcrb
cmp
mov
mov
jns
jns
pop
mov
imul
in
sub
and
pop
aam
cmp
adc
pop
mov
dec
stc
add
and
mov
sbb
adc
jl
icebp
xor
dec
fistl
enter
adc
test
mov
push
pop
xchg
dec
fidivl
cwtl
sbb
fcoms
je
xchg
notb
dec
sbb
xor
sbb
xor
push
mov
jl
test
sbbb
movsb
pop
mov
pop
push
pop
push
imul
dec
and
ss
jne
pop
addb
leave
int
adcl
lods
inc
sbb
mov
and
es
cmpsl
ja
imul
movsb
lcall
nop
lds
adc
sarb
rclb
test
je
dec
xor
ljmp
mov
cwtl
nop
xorl
cmp
pusha
add
xchg
and
or
or
pop
pusha
push
pop
leave
das
add
fdiv
popa
sub
in
in
movsl
adcl
jae
xor
int
mov
dec
aas
or
push
add
sub
std
mov
mov
xchg
sbb
inc
xchg
jno
add
push
lahf
lock
inc
fadd
push
add
mov
pop
movsl
push
ja
cmp
push
sbb
cwtl
sarl
xor
push
sbb
imul
cmp
inc
setl
pop
les
in
xor
test
mov
push
xchg
pop
jbe
sbb
sub
nop
loopne
mov
push
ljmp
xor
stos
adc
adc
inc
jmp
test
mov
call
or
pop
xor
and
call
stos
jae
ret
adc
fs
adc
int
and
adcl
mov
pushl
movsl
ds
ret
movsl
and
pop
inc
push
pushl
shr
mov
pop
fists
jne
xchg
adc
push
pop
dec
mov
add
js
cmovl
mov
mov
mov
test
cli
andb
sbb
jmp
xchg
jmp
dec
scas
push
push
or
jo
inc
pop
push
mov
loop
dec
fwait
and
cmp
loopne
ss
pop
push
xchg
and
sub
pop
cmpsb
or
push
adc
rorb
xchg
out
movsb
es
or
xlat
sub
add
lods
push
sub
push
jmp
mov
in
add
dec
pop
sub
lods
mov
addr16
je
xlat
sub
add
rolb
xorb
jl
or
aam
jo
into
mov
mov
sub
dec
rolb
pop
push
movsb
repnz
mov
sbbl
and
and
and
and
sbb
out
int3
xchg
pop
xor
push
sbb
sbb
sbb
pop
jb
sbb
adcl
and
rolb
xor
adc
adc
cmp
push
test
loopne,pn
jo
pop
adc
rcrb
mov
xor
or
scas
into
fchs
xchg
ror
push
clc
pop
fisubrl
aam
ss
cs
sbb
pop
ret
or
fcmove
inc
cmp
int
add
xchg
stos
lret
push
movsb
loope
clc
mov
lock
add
xchg
daa
lea
inc
cmp
ret
adc
dec
psadbw
or
dec
mov
sahf
cmp
pop
test
or
popl
dec
push
mov
ret
sahf
jo
cltd
or
dec
shr
mov
hlt
out
xchg
mov
cmp
jbe
sub
mov
sbb
loopne
push
pop
push
jmp
adc
fwait
add
push
rclb
into
mov
lret
mov
inc
pop
jl
fnstenv
movsl
xchg
sub
fs
sahf
xchg
or
cmp
jl
js
cmpsl
movsl
add
cmp
nop
push
es
jg
cmp
push
xchg
pusha
mov
je
push
push
inc
faddl
clc
addr16
bswap
dec
leave
push
das
sub
out
aad
outsb
jb
mov
jg
and
imul
lods
sbb
addl
xchg
pop
and
jl
iret
inc
xchg
or
js
hlt
icebp
fisttps
xor
pop
cmp
loopne
sbb
xlat
jbe
mov
sti
dec
add
xchg
cmp
jne
inc
fs
dec
sub
cmpb
adc
dec
push
hlt
adc
popa
insb
test
push
or
iret
jne
pop
jnp
adc
fiadds
repz
jae
adc
add
nop
cmp
push
mov
iret
je
mov
dec
shll
loope
shr
scas
fld
mov
mov
rclb
je
fstps
test
pop
test
jp
xor
add
adc
pop
out
push
pop
cwtl
test
emms
inc
test
fs
jae
ret
arpl
aaa
xchg
cltd
xlat
aad
dec
or
movsb
inc
ds
imul
mov
push
rcr
jb
adc
inc
outsl
push
daa
pop
push
add
dec
mov
mov
mov
test
push
pusha
or
or
or
push
shrb
imul
pushl
push
jae
faddp
sbb
lds
outsb
mov
loop
int
in
test
add
outsb
add
xor
or
jae
pop
in
or
add
dec
ds
xchg
add
aad
imul
xchg
in
pushl
jmp
cmp
jl
or
dec
int
je
cmp
or
and
mov
movb
movsbl
out
mov
add
xchg
cmp
add
pop
insb
xchg
test
dec
add
jne
pop
adc
test
shlb
fwait
xor
xor
pop
inc
push
mov
bound
cs
inc
sbb
sub
push
add
loopne
and
cmp
fcmovb
mov
daa
out
insb
inc
sub
push
repz
mov
lret
jns
repnz
popa
lcall
adc
add
push
ror
stos
in
add
shlb
sti
or
mov
shrb
rorl
dec
sbb
mov
xor
push
pop
mov
cmp
je
dec
and
or
or
sbb
pop
gs
mov
jmp
ja
push
stos
cmpsb
dec
mov
and
inc
pop
pop
xchg
pop
in
out
jmp
sub
cmp
es
jg
lret
lock
cmp
pop
adc
shrb
lods
in
mov
js
pop
mov
loop
leave
push
add
jns
imul
mov
pop
loop
or
jbe
loope
loopne
add
imul
xchg
xchg
fcoms
add
pop
inc
dec
filds
sub
sub
dec
adc
daa
inc
push
aaa
and
xchg
sbb
add
gs
loope
sbb
inc
mov
push
or
sbb
xor
scas
shll
movb
leave
dec
dec
cwtl
scas
dec
jmp
fcoml
mov
xchg
push
push
lods
cmpsl
mov
sarb
repz
jns
lahf
outsb
sbb
fisttps
xor
push
les
adc
inc
cld
xchg
loopne
fcomps
xchg
inc
test
cmp
pop
jne
cmp
pop
or
add
iret
popf
mov
xchg
mov
mov
inc
aam
mov
dec
inc
movsb
or
sub
popa
nop
xchg
xchg
test
pop
call
mov
movsb
and
sub
mov
jmp
movsb
arpl
or
stos
stos
xchg
add
jmp
loope
pop
mov
shlb
addb
nopl
mov
inc
and
dec
out
and
or
push
inc
fmull
adc
sti
xchg
hlt
call
inc
sbb
jmp
push
jo
push
push
lcall
dec
jge
jmp
movb
ret
lcall
ja
call
lods
aam
lea
leave
bndldx
shlb
dec
ret
jnp
rol
movsb
adcl
xchg
xor
and
mov
mov
add
add
sub
testl
and
sbb
sbb
cmp
popa
xchg
or
and
jmp
das
add
orb
dec
add
out
test
cmp
pop
lods
adc
ret
jp
xor
in
cmpsl
je
stos
mov
std
dec
frstor
xchg
lock
push
dec
push
sub
pop
cmp
fistl
push
sub
xchg
xor
xor
jmp
les
push
pop
je
push
les
das
push
ds
ljmp
mov
aaa
dec
sbb
jmp
nop
or
inc
packsswb
inc
shr
mov
test
add
ss
push
pop
or
jmp
jge
ret
xchg
mov
pusha
push
mov
dec
jg
adc
in
ret
test
dec
ljmp
push
jg
inc
add
jne
je
inc
scas
and
push
push
cmp
jl
push
test
js
nopl
cltd
jle
hlt
add
sub
xchg
lods
jecxz
into
inc
loopne
jmp
xchg
mov
add
out
sub
and
je
movl
rolb
fs
push
enter
xor
mov
xor
xor
pop
insb
loopne
insb
adc
movsb
je
divl
inc
lock
lea
mov
mov
sbb
inc
jne
sub
push
lcall
jo
stos
xchg
add
cmp
daa
orb
in
fmull
add
xchg
rcrb
jl
call
rdtsc
xor
enter
push
or
in
mov
xor
enter
nop
xchg
in
push
dec
clc
inc
das
je
jge
test
xchg
lahf
lea
xor
xor
dec
es
outsl
das
mov
inc
sahf
fsub
sti
cmp
dec
in
cmp
test
shrl
call
fadds
jne
xchg
shll
jl
pop
cli
gs
xchg
sti
mov
sbb
push
add
sub
pop
lods
dec
fistl
sbb
shlb
or
in
push
inc
cmp
jno
cmp
push
lea
xor
sbb
ret
popa
sbb
jecxz
push
or
stos
xchg
xor
out
lret
imul
jmp
jmp
adc
adc
or
cli
std
inc
ds
push
cmp
mov
mov
mov
jle
test
outsl
insb
mov
or
stos
mov
inc
add
inc
or
dec
cmp
dec
notb
and
sbb
sub
pop
add
test
jge
inc
sbb
jno
out
inc
add
mov
and
sbbl
and
mov
xchg
xchg
stos
js
loopne
sbb
orb
clc
mov
inc
data16
cmp
ja
adc
adc
jne
daa
bnd
adc
sahf
lahf
or
jne
or
jne
or
add
mov
mov
test
cwtl
js
pop
mov
or
mov
cli
adc
push
lea
fdivrl
lock
fdivrl
jae
dec
mov
insb
inc
pop
xor
push
jl
lods
mov
les
dec
mov
mov
repnz
lea
pop
lea
and
dec
mov
lcall
or
pop
aam
push
ffree
fsts
mov
adc
fimull
sub
sbb
inc
pushf
inc
mov
dec
pop
addr16
cmc
int3
imul
push
cmc
jae
je
sub
jne
adc
xor
adc
push
lret
imul
adc
or
sub
fcom
loopne
shlb
sti
mov
adc
adc
pop
push
xchg
rorl
sub
fwait
cmp
xor
es
sbb
ss
cwtl
fwait
lock
inc
inc
loopne
nop
shrl
lock
xor
mov
sub
and
orl
incl
pusha
shr
sub
xchg
push
pop
pop
mov
xchg
xchg
xchg
fs
stos
push
mov
push
jne
jl
xor
xor
fs
lock
xor
pushl
out
inc
addr16
mov
mov
mov
arpl
cmp
pop
arpl
xchg
inc
or
adc
push
xor
loopne
data16
pop
cwtl
data16
pop
mov
pusha
jae
adc
loopne
or
ja
inc
not
fmuls
rorb
int3
or
into
inc
or
push
pop
and
test
loop,pn
shl
arpl
add
add
and
dec
das
jns
addr16
iret
add
jno
or
iret
cmp
or
mov
sub
mov
shlb
xchg
inc
fcompl
cmp
int
lods
int
fwait
push
pushl
xchg
jge
mov
adc
sub
xchg
xor
sbb
mov
mov
insl
xchg
sbb
mov
orl
testl
jo
movsl
mov
je
js
es
xchg
dec
test
push
mov
and
cmp
push
xchg
pusha
sbb
jecxz
or
push
dec
jmp
add
mov
mov
test
test
mov
adc
mov
stos
xor
je
adc
cmp
repnz
nop
outsl
nopl
cld
pop
adc
nop
fldln2
in
and
dec
push
cltd
inc
adc
and
jbe
and
lds
enter
sub
fsubl
es
sub
pop
xor
pop
or
dec
es
push
adc
dec
xor
leave
cmp
in
inc
sub
in
and
adc
dec
and
rorl
inc
lea
adc
in
or
or
and
and
shlb
arpl
stc
daa
in
or
sub
xor
nop
cmpsb
aaa
mov
add
rolb
push
lea
aam
mov
add
lret
mov
or
adc
push
xchg
or
rcl
sbb
mov
movsb
cltd
add
add
sbb
sahf
cmpsb
adc
xchg
mov
mov
sti
xor
and
xchg
adc
jl
rcll
hlt
jo
dec
fdivl
or
pop
adc
sub
jle
dec
js
jp
hlt
jg
mov
or
mov
lea
adc
add
xchg
inc
sbb
fcoml
sbb
pop
loope
jne
xor
movsb
mov
test
outsl
mov
jne
movsb
cs
mov
test
mov
sbb
inc
fcmovnbe
and
test
inc
adc
adc
add
pop
or
shlb
ret
iret
test
in
movsb
popf
in
les
or
cmp
jne
sub
in
call
cwtl
add
or
add
repz
das
jb
popa
push
int
inc
sub
add
adcb
lods
dec
int
push
stos
lea
lds
jecxz
mov
cmp
sub
pop
push
lock
fdivl
inc
mov
xor
mov
or
and
loopne
lock
je
imul
adc
mov
and
mov
push
call
and
std
mov
stos
pop
psubusb
push
xchg
add
or
push
sbb
ret
xchg
jne
fadd
xchg
and
mov
sbb
test
mov
clts
scas
add
add
inc
cld
and
fcoml
or
push
add
jne
pop
mov
inc
cmpsl
stos
mov
mov
and
jne
sub
add
jmp
sub
pushf
and
or
adc
mov
sub
adc
sbb
push
xor
bound
xor
arpl
adc
push
dec
call
mov
push
xchg
in
dec
ret
mov
orb
xor
jmp
icebp
add
xchg
mov
das
or
push
push
push
pop
add
inc
enter
lcall
js
sub
dec
cld
pop
push
subb
cmp
adc
stos
cmp
add
jle
jno
mov
add
add
in
mov
mov
scas
mov
loopne,pn
inc
jnp
lea
pop
add
push
inc
fbstp
adc
jecxz
in
mov
inc
fcompl
aad
adc
mov
lds
push
mov
pop
call
cmpsl
das
cltd
pop
jmp
out
je
xchg
push
and
call
adc
fisubrl
pusha
mov
shlb
adc
sub
jne
nop
or
and
out
add
push
add
fdivrs
push
push
fisttps
add
and
scas
gs
out
je
mov
cmp
xchg
popf
mov
push
stc
mov
cmpsb
sahf
push
cmpb
xor
fs
xchg
or
or
rolb
mov
fistpl
or
inc
push
or
xor
push
movsl
shlb
lahf
cmp
add
es
adc
sbb
nop
mov
push
inc
inc
sub
add
push
add
sub
sbb
mov
push
push
aas
pop
push
xchg
stos
adc
in
or
mov
xchg
icebp
add
test
ljmp
das
mov
pop
adc
jo
jb
jno
mov
lret
and
jl
insl
adc
je
movsl
ja
and
xor
or
or
xor
cmp
je
nop
in
mov
adc
rolb
sbb
sete
cmpsb
mov
adc
push
xlat
sbb
jle
cmpb
pop
mov
cmp
add
js
hlt
jae
pop
shrb
rorb
mov
sbb
repz
mov
sbb
or
es
sub
sbb
pop
jmp
mov
push
das
add
lea
and
dec
inc
loopne
jmp
jl
dec
jmp
shl
or
add
inc
cmp
jl
jg
pop
add
jne
add
cltd
adcl
add
sar
add
mov
hlt
clc
xor
mov
sub
cmp
jecxz
sbb
push
std
or
lret
shr
xor
mov
lds
dec
jne
fs
xor
pop
pop
sahf
or
cmp
loopne,pn
cmp
pop
push
lea
bound
stc
sbb
mov
imul
mov
ret
or
mov
lcall
mov
ret
roll
mov
mov
dec
std
sbb
jl
repnz
jle
movsl
mov
mov
inc
mov
mov
mov
cli
js
inc
mov
add
dec
jne
enter
ret
aas
loope
adc
stc
xor
test
mov
aam
repnz
add
aaa
lahf
push
ret
or
pop
adc
xor
adc
jmp
jb
jp
stos
pop
mov
cmp
rolb
or
aam
sbb
jae
pop
jbe
xchg
push
jnp
cmpsl
or
loopne
xor
cmc
in
push
xor
cs
or
int3
fcom
adc
sub
mov
xchg
xor
sbb
or
add
mov
xchg
ret
bound
xor
add
mov
scas
add
pop
push
jmp
mov
cltd
jle
nop
scas
nop
aam
cld
mov
push
push
add
jp
mov
mov
ret
rcrl
pop
pop
pop
enter
pop
add
jmp
cmp
movsb
jmp
in
insb
xor
cmp
inc
mov
add
enter
add
add
jae
mov
cmp
add
lds
add
les
fiaddl
sub
jo
js
inc
push
ret
add
pop
ss
in
mov
jns
push
push
xchg
mov
ror
add
jmp
lods
in
sbb
sbb
dec
jle
adc
pop
xchg
dec
rorb
ret
xor
xor
shl
sahf
cmp
mov
inc
iret
push
lcall
addb
cmp
sub
ds
repnz
hlt
jmp
mov
outsl
popa
dec
pop
inc
cmp
mov
and
dec
mov
addr16
popf
dec
sub
and
or
push
stos
mov
stc
or
ja
dec
push
scas
mov
mov
rcl
pop
rcrb
mov
mov
adc
add
arpl
std
xchg
xorl
je
daa
push
pop
adc
roll
or
push
push
call
popf
adc
pop
leave
ja
insl
adc
aam
scas
pop
sub
movsb
lock
mov
push
xor
aam
inc
mov
scas
dec
mov
push
push
sub
fsubs
cmp
cld
mov
push
jmp
mov
call
dec
inc
add
push
cmc
push
pop
rolb
dec
jae
jns
cmp
xor
add
int3
int3
pop
jno
mov
mov
sbb
jno
cmp
lcall
adc
mov
dec
add
push
sbb
cmpsb
je
test
jecxz
adc
test
pop
fld
shrb
bound
mov
xor
enter
push
jae
jae
xor
inc
add
mov
adc
cmp
and
xchg
sbb
and
xchg
adc
popa
xchg
pop
or
cmp
push
push
pop
dec
out
push
jnp
jo
mov
pop
cmp
fsubrl
cwtl
loopne
adc
jge
mov
add
push
jmp
sbb
cld
in
je
cmp
daa
movsbl
shl
call
ret
mov
mov
test
add
mov
test
bound
sbb
sbb
movb
pop
and
or
xor
nop
lret
add
in
pop
or
mov
xchg
cmp
sarl
and
push
rolb
orl
mov
cmp
roll
lahf
pop
jae
clc
imul
inc
es
das
ds
fs
sub
lea
les
adc
push
pop
cmp
cmpxchg
lock
jnp
pop
jno
sbb
jge
mov
fstps
add
add
mov
dec
rolb
inc
push
push
scas
sarb
mov
or
pop
jmp
sub
inc
and
cmp
stos
ret
shrb
clc
jae
jg
or
mov
loopne
pop
jle
pushl
mov
mov
es
sub
adc
das
jno
lods
shrb
dec
pop
movsb
push
mov
inc
loopne
data16
jl
hlt
mov
or
push
fmull
or
clc
add
mov
add
movzbl
je
filds
mov
inc
mov
mov
cmp
jl
inc
jecxz
inc
dec
clc
addl
ja
mov
sub
push
mov
or
orb
or
mov
add
or
mov
cmc
dec
fisttpl
and
or
xlat
mov
cld
push
leave
push
xor
mov
inc
call
jne
xor
xor
push
mov
adc
les
pushl
cmp
pop
pop
push
mov
mov
test
insb
into
push
jmp
add
cli
imul
xor
push
mov
pop
push
nop
xchg
add
add
xchg
lret
in
or
xchg
icebp
xchg
fs
push
inc
test
mov
sub
ds
fstl
div
jno
mov
mov
cmp
push
gs
and
ja
cmp
xchg
lahf
lret
adc
push
cmp
adc
xor
mov
popa
in
pop
movsl
imul
adc
mov
adc
loopne
xor
jmp
arpl
inc
xor
fisubs
jmp
in
add
jo
adc
mov
or
and
enter
sub
add
mov
and
mov
pop
mov
loop
mov
inc
or
sbb
inc
xchg
xor
test
dec
jo
dec
test
sub
insb
add
aam
cld
decl
enter
iret
jbe
mov
sbb
pushf
adc
jle
mov
or
cld
and
aas
insl
mov
xor
lods
add
xchg
cmc
dec
add
out
mov
fisttpl
jo
xchg
cmpl
cmp
sbb
icebp
jge
stos
jne
push
fsubs
jbe
push
call
push
push
push
cmp
sub
jmp
push
scas
or
mov
hlt
mov
jmp
cmp
and
enter
dec
jae
sbbl
mov
jmp
mov
test
cmc
sub
jae
push
xlat
mov
mov
cmpsl
js
sti
lea
xchg
mov
loop
push
push
xchg
or
add
je
sbb
jl
cmpsb
dec
or
or
and
outsl
sub
cmpsb
leave
loopne
in
mov
into
mov
jnp
xchg
shrl
xchg
push
test
lds
dec
aad
sub
sahf
push
sbbl
sldt
sub
popf
aas
jb
movsl
sub
add
je
xor
add
push
inc
arpl
ds
mov
popf
sbb
add
adc
aad
rcl
and
loope
mov
add
mov
cmp
mov
add
mov
dec
mov
mov
lods
pop
and
mov
pop
shrl
test
jmp
push
iret
loopnew
movsl
jbe
lcall
cmp
add
scas
and
xsaves
pop
xor
xchg
push
cmp
push
and
or
push
mov
push
std
adc
cmp
xchg
jo
aam
enter
ss
ficoml
loopne
mov
nop
push
int3
dec
sti
dec
lods
add
shll
dec
cmpl
pop
xchg
xor
call
sub
scas
add
push
rolb
aam
or
xchg
shrb
and
push
sbb
xor
cmp
jo
sub
je
das
dec
into
adcl
je
fdivs
add
test
arpl
pop
mov
lcall
les
sbbb
pop
lods
push
dec
cmp
push
inc
lock
aam
test
cmpl
adc
lret
jp
fwait
movl
aas
xor
add
mov
inc
daa
push
sbb
and
cmp
fsubrl
fdivl
jbe
pop
stc
adc
inc
add
test
nop
mov
negb
push
insb
or
sub
add
adc
jae
cmpsl
shlb
shlb
jo
bnd
adc
mov
and
inc
shlb
mov
add
popf
mov
xor
inc
ret
pop
adcb
or
pop
insb
push
pop
jo
jae
movsl
fwait
mov
popf
pop
lret
leave
lea
fnstenv
out
or
pop
clc
aam
or
cltd
add
int3
inc
add
imul
lods
mov
mov
sbb
mov
xchg
aad
push
jmp
ret
call
jmp
push
push
pop
loopne
test
mov
sbb
jmp
orb
push
push
xchg
sbb
sub
divb
daa
popa
jne
ret
mov
lahf
imul
imul
insb
bound
fwait
hlt
jg
cmp
pop
cmp
jbe
push
loopne
out
in
jmp
push
pop
push
sbb
jmp
mov
out
or
add
fisubl
nop
or
nop
cmpsl
out
out
out
or
cmp
bound
pop
test
sbb
pop
clc
jne
mov
mov
mov
push
repnz
add
loopne
pop
mov
leave
or
xchg
fucomip
cmp
sub
out
jg
jne
std
fisubrl
or
pusha
jo
cmp
call
jmp
popa
push
push
adc
xchg
insb
das
movsb
push
push
call
cmp
sbb
jl
pop
lea
add
call
jmp
jg
pop
lods
xchg
dec
pop
ds
and
sarb
cmp
jae
movsl
pop
or
xchg
cmp
dec
enter
jbe
add
inc
xlat
insl
sbb
in
mov
add
out
dec
in
lock
adc
push
in
xor
dec
jbe
xchg
mov
fidivrs
popa
loope
push
cmp
xor
inc
xchg
cmp
inc
cmp
jns
movsb
push
or
pop
in
mov
push
mov
xchg
lret
add
add
pop
sbb
or
pop
add
cmp
out
xor
mov
xor
leave
cmpsl
loope
loopne
or
mov
jae
lret
sub
mov
sub
push
enter
cmp
ret
jecxz
icebp
into
adc
or
popa
in
pop
sub
or
mov
push
and
sbb
insb
or
mov
loope
imul
xor
mov
ret
sahf
test
mov
mov
sub
sub
or
fnsave
sub
adc
stc
push
sbb
fwait
addr16
sub
lea
sub
push
ret
push
jo
js
imul
pop
inc
ss
and
sub
xor
sbb
into
loopne
js
xor
jl
movsl
jae
cmp
lcall
inc
fiadds
stos
and
lcall
movsb
lret
inc
push
push
add
sbb
gs
test
push
mov
mov
xchg
fnsave
add
push
push
push
add
popa
add
push
stc
jne
std
add
sub
bound
inc
push
lret
jb
inc
imul
cmp
stos
and
mov
iret
mov
aam
mov
daa
jmp
dec
adc
jge
jne
or
and
jnp
mov
pop
adc
cmpsb
push
push
addr16
xorl
inc
leave
lods
and
xor
daa
test
inc
mov
nop
jo
in
mov
and
sbb
or
fcomps
fnstsw
and
jb
mov
movsb
push
pop
aaa
loope
xchg
aam
fcompl
dec
jnp
push
test
jne
and
dec
movhps
imul
data16
mov
jmp
mov
mov
frstor
sub
ja
add
adc
add
sub
sub
outsb
pop
or
mov
push
addr16
leave
js
cs
inc
filds
jno
lods
or
push
mov
or
inc
add
aaa
insl
in
and
pusha
roll
shl
adc
int3
add
shlb
dec
mov
pushl
sub
push
push
sbb
cmp
xchg
add
push
and
cmp
fadd
ret
das
loopne
mov
jmp
pop
add
ret
xchg
leave
cmp
sahf
sub
xor
sbb
xchg
subb
lea
dec
jo
dec
lret
lcall
mov
push
push
inc
add
pop
stos
or
adc
jo
movsl
adcb
shll
rolb
or
jbe
leave
mov
movb
or
push
int
cmp
jb
cmp
repnz
and
sbb
inc
mov
dec
jae
popa
push
ret
imul
push
add
xchg
pushf
add
aad
inc
mov
add
lahf
mov
push
pop
push
inc
adc
ret
pop
stc
hlt
es
je
scas
add
jmp
aaa
std
mov
js
mov
mov
mov
cli
das
je
jns
outsl
mov
mov
cmp
addr16
je
cmp
jne
mov
sbb
inc
ret
add
pop
dec
lea
negb
jmp
dec
mov
dec
xor
push
cmpsb
mov
and
popa
ljmp
testb
je
testl
scas
inc
sbb
cld
cmp
jbe
push
lea
in
call
or
inc
cmp
je
sub
inc
jmp
inc
and
xchg
cmp
mov
mov
shrb
loop
adc
out
clc
mov
jg
cmpsb
repnz
je
aam
mov
add
adc
into
ret
addb
push
xor
add
cmp
in
test
inc
pop
xchg
sub
cld
inc
xchg
cmp
jne
mov
insb
outsb
hlt
adc
das
test
cli
mov
lock
je
rol
pop
inc
dec
outsb
jb
imul
fdivs
js
sub
push
push
push
nop
adc
jge
and
xchg
or
sti
jp
add
push
push
sarb
xor
imul
push
loop
arpl
and
pop
cmp
popl
ss
mov
movzwl
ljmpw
mov
add
jae
outsb
addl
movl
lock
shl
add
jmp
pushf
aas
insb
sti
and
dec
iret
sub
negb
jns
test
jne
xor
dec
push
cmp
adc
jg
push
call
cmp
push
fsubr
cmp
xor
inc
cmpb
sub
and
lds
xchg
or
int3
sbb
mov
fistl
inc
jg
or
jge
jae
jae
xorb
jle
es
sub
inc
jae
jge
jle
jmp
or
jl
or
adc
jg
test
inc
test
jbe
lea
cmp
outsb
lock
aad
push
hlt
pop
arpl
pop
or
je,pn
test
jne
pop
rclb
cld
jb
rcll
push
or
jae
movb
inc
push
or
sub
mov
and
sbbl
adcb
xchg
data16
jo
testl
ljmp
jge
test
mov
mov
adc
sbb
add
daa
cmp
orb
inc
mov
cmp
lock
enter
push
xor
add
push
mov
lods
xchg
lods
adc
mov
hlt
dec
ret
xchg
out
and
in
xchg
mov
push
mov
shll
repz
insb
repnz
ret
mov
push
es
dec
stos
int3
cmc
mov
icebp
pop
pusha
fiadds
inc
sahf
mov
xchg
jp
adc
pop
test
rcrl
sbb
or
xor
ss
mov
push
cmp
aad
cmp
push
sbb
loopne
movsb
cmp
push
ret
int
xor
or
int
jp
cmp
rcrl
adc
push
mov
cmp
cmp
out
add
pop
rclb
mov
push
popf
je
pop
xlat
out
pop
pop
add
mov
test
mov
push
repz
add
sub
jne
or
xchg
cmp
xchg
and
or
push
add
inc
mov
rol
dec
nop
rcl
pop
cltd
mov
jp
inc
mov
call
sbb
sub
mov
cwtl
ret
cltd
lds
push
decl
push
pop
push
movl
push
adc
dec
or
xor
jo
push
push
lahf
jbe
rol
sub
add
inc
xchg
adc
jle
push
mov
mov
rclb
add
push
enter
add
mov
pop
popf
popf
int
sbb
cmp
ds
xor
push
in
pop
outsb
je
pushl
call
mov
mov
stos
out
pop
pop
lea
outsb
fsubr
jae
shll
mov
push
cmpl
push
cwtl
inc
add
cmp
cmp
psubd
lea
pop
pop
bound
pop
xlat
int3
or
sub
pop
fisttps
adc
pop
xor
xor
jl
and
jbe
mov
jge
push
gs
add
cmpl
inc
sti
inc
inc
fwait
cmp
cld
pop
pop
pop
outsb
adc
nop
push
mov
cmp
mov
in
ds
sbb
adc
out
xchg
mov
xchg
sbb
push
js
xor
dec
push
inc
inc
add
xor
push
fs
sbb
shll
adc
inc
lcall
jo
or
or
popl
and
cld
pop
arpl
push
xchg
icebp
in
clc
mov
mov
mov
add
test
jl
add
pusha
cmpl
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
fwait
les
leave
add
pop
inc
add
add
test
jg
add
mov
pusha
adc
push
ret
or
sti
pusha
jb
enter
push
mov
xor
add
lods
add
push
adcl
dec
cmc
jbe
inc
mov
xchg
mov
dec
mov
mov
out
sti
and
repnz
push
xchg
pop
mov
mov
push
ss
cmp
sti
into
mov
arpl
dec
jbe
push
push
popf
test
jns
inc
pop
xchg
addl
cmpsl
lret
and
pop
cmpsb
xchg
and
sub
lea
or
dec
mov
loope
fstl
frstor
push
xor
test
inc
pop
xchg
fs
add
xor
push
cli
insb
and
jb
cmc
call
sub
idivb
faddp
or
shrb
es
aam
or
scas
or
int3
shl
enter
call
ret
cmp
clc
add
dec
push
xchg
add
ficoms
mov
sbb
jmp
syscall
ds
cwtl
cmpl
dec
push
xor
xor
mov
add
lret
sbbl
mov
pop
fmul
imul
insl
jnp
das
aam
push
ffree
test
mov
js
mov
into
cmpl
movsb
ficoml
lods
mov
movsl
cmc
push
add
inc
xor
mov
fiaddl
adc
cmpsb
or
xchg
xchg
lods
adc
jno
jl
inc
je
fstps
cmp
mov
push
add
mov
or
jne
jae
add
xor
push
cmp
mov
inc
jp
rclb
stos
fidivs
push
orl
test
test
dec
cmp
jbe
rcrb
push
adc
mov
jo
add
mov
fimuls
jnp
mov
mov
cmc
xchg
jne
mov
pusha
cmp
mov
cmpsl
lods
jl
add
fwait
pop
loopne
fmuls
insl
cwtl
cmpsl
mov
jg
lcall
je
cmp
rclb
pop
jne
aam
pop
inc
cmp
cmpsl
jne
push
imul
jne
or
mov
pop
call
push
jecxz
mov
and
or
insl
in
xor
cmp
fucomip
les
jne
jmp
sbb
xor
xchg
sub
mov
mov
sbb
mov
gs
hlt
mov
jnp
out
fisttpll
jbe
lock
add
je
pop
in
or
pop
in
stc
mov
fs
jmp
sub
repz
outsb
push
div
jmp
pusha
mov
jae
movsb
push
mov
add
ja
sbb
pusha
mov
adc
xchg
mov
sub
decb
adc
adc
inc
lret
addl
loopne
pop
adc
xchg
out
sbb
pop
cmp
pusha
push
shrb
inc
decb
or
or
ret
pop
pop
jle
push
add
je
adc
push
rclb
fucomip
pop
push
clc
std
push
mov
orl
jbe
aas
add
inc
arpl
sub
xchg
xchg
pop
cmp
mov
add
mov
shlb
mov
xlat
push
push
cs
lret
in
push
pop
pop
pop
in
mov
fs
mov
xor
sbb
xor
jae
sub
push
gs
inc
add
sbb
cmp
or
lods
xchg
mov
dec
cld
push
mov
mov
push
les
pop
stos
mov
and
sbb
sbb
jmp
push
cs
add
push
adc
shrl
add
mov
stos
push
sbb
push
or
inc
adc
dec
sub
push
sbb
pop
cltd
frstor
outsb
and
push
push
loopne
push
insb
or
or
cmpsl
mov
mov
pop
xor
leave
xor
pop
jo
cmp
sbb
ljmp
ss
sbb
incl
pop
inc
push
pop
cli
jp
push
pop
jmp
mov
call
aam
je
mov
or
sti
and
add
mov
push
or
mov
and
push
push
fwait
sbb
fstpt
mov
and
lods
test
lock
punpckhdq
hlt
or
push
push
push
xor
sti
es
sti
mov
addr16
subl
in
inc
jae
imull
mov
pop
outsl
inc
dec
std
mov
cmpsl
xchg
inc
cmp
cmp
loope
not
mov
ret
je
lret
jmp
sarb
mov
je
mov
cmp
jne
vpavgb
adc
in
mov
ljmp
add
adc
adc
lret
push
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
pop
fwait
rcrl
mov
push
mov
cmp
and
jno
push
push
push
inc
sbb
xchg
icebp
std
mov
outsb
or
test
into
call
sbb
push
adc
push
cmp
call
lcall
add
adc
call
add
in
xor
mov
cmp
lock
shlb
or
or
push
lret
xchg
jbe
jo
mov
adc
sbb
sbb
mov
je
or
adc
add
cmp
sub
js
bound
addl
add
inc
cmp
adc
or
adc
push
sbb
sub
sbb
fists
push
jmp
cmp
jge
fucom
hlt
sub
inc
loopne
or
out
test
cltd
mov
jecxz
in
je
divb
call
lea
dec
xor
or
push
inc
add
loopne
add
cmp
jmp
jmp
jmp
inc
dec
xor
inc
cmp
int
xchg
rorl
inc
hlt
mov
mov
lock
lock
hlt
adc
outsl
enter
inc
sbb
loop
inc
inc
mov
ljmp
aam
pop
enter
adc
jb
sub
add
pusha
pushl
push
xorl
test
xchg
ljmp
mov
and
add
adcb
push
add
sbb
call
movsl
orl
je
adc
pop
fwait
outsb
insl
mov
inc
jne
addr16
ficoml
adc
test
add
call
shlb
cs
sub
mov
out
adc
push
pop
and
mov
inc
pusha
scas
mov
push
cmpb
jns
jno
rolb
lock
and
icebp
or
push
cmp
cmp
call
scas
and
or
adcb
sub
out
fsub
push
adc
cmpsl
mov
pop
sbb
push
outsb
outsl
or
test
jecxz
sbb
pusha
es
inc
je
ret
mov
jae
bound
adc
movsl
shl
testb
push
sub
loop
inc
mov
push
das
in
sbb
sbb
and
inc
add
dec
push
leave
loopne
rolb
sub
aam
ficoml
adc
jbe
lahf
or
push
jmp
mov
mov
in
fildl
jno
and
sbb
inc
pop
push
gs
adc
dec
dec
mov
or
mov
sbb
add
dec
dec
jne
jns
jnp
les
add
jmp
cmp
in
push
sbb
jg
jbe
push
aas
in
add
mov
jmp
xchg
cmp
test
or
lock
mov
aas
imul
int3
lret
shlb
in
movsl
sbb
outsl
dec
fdivs
inc
lea
fs
adc
pop
push
loopne
mov
xchg
dec
lods
push
sub
sub
inc
aam
shrb
and
out
mov
mov
nop
rcrl
pop
movsb
adc
pop
pushf
fsubrp
push
mov
mov
test
fs
push
mov
adc
fistps
inc
mov
pop
xchg
inc
cmp
jl
jmp
pop
dec
push
add
stos
sbb
rolb
jmp
add
add
cmp
add
aas
mov
leave
jmp
dec
iret
repnz
int3
push
and
clc
xor
cmp
out
imul
jne
adc
mov
jne
push
mov
xor
imul
sbb
dec
bound
jge
and
test
daa
push
dec
lret
sbb
stos
and
stos
cld
int3
add
rcl
adc
add
cmp
inc
push
jmp
cmp
inc
cmpl
inc
push
add
out
mov
and
inc
inc
clc
ret
or
jg
push
adc
cli
faddp
pop
mov
mov
scas
mov
jmp
push
dec
or
loop
mov
mov
pusha
push
cmp
je
int3
or
aas
ret
add
adc
jns
dec
je
sbb
mov
or
hlt
call
out
ljmp
add
jmp
or
sbb
xor
hlt
gs
out
icebp
rolb
inc
daa
or
cmp
inc
flds
inc
adc
cld
es
inc
aas
add
insl
jne
mov
notb
mov
sbb
sbb
add
leave
sub
fisttps
imul
pop
inc
fstpl
or
or
js
push
je
fdivs
adc
mov
and
faddl
sbb
adc
dec
cmp
neg
xor
add
rclb
inc
push
popa
add
andl
cwtl
jle
jne
or
mov
xchg
inc
dec
nop
push
add
push
ds
add
push
push
loopne
out
mov
loope
pop
xchg
aad
test
fidivl
adc
pop
ret
pushl
push
iret
loopne
or
and
pop
sarl
iret
add
addr16
jl
push
imul
inc
cmp
add
lea
mov
and
sub
or
subl
inc
addr16
push
cmp
pop
iret
mov
mov
jne
inc
jge
inc
ja
movsb
mov
xchg
shrb
dec
loopne
mov
sahf
or
dec
bound
orb
cmp
mov
popa
add
inc
sub
mov
sar
or
push
mov
cmp
mov
in
sbbl
xor
scas
sub
jo
cmp
fdiv
mov
bound
daa
mov
xor
xchg
pushf
or
add
mov
stos
aad
loopne
sub
cmpsb
add
sbb
js
cmpsb
or
loop
pop
js
add
jbe
lret
lods
jb
loopne
and
adc
gs
push
lds
or
data16
nop
or
or
imulb
pop
lret
subl
pop
jae
adcb
iret
or
add
and
adc
pop
sbb
dec
scas
push
mov
sarl
pusha
popa
adc
pop
push
mov
sahf
bswap
incl
shl
fists
aaa
ja
push
and
fcomp
ljmp
pop
sbb
push
movsb
or
inc
sbb
in
adc
orb
xor
jmp
dec
sub
or
add
movl
add
jl
mov
xor
push
adc
enter
dec
pop
sbb
xor
cmp
jg
dec
and
jb
test
pop
pop
or
aad
enter
pusha
cmp
ja
sbb
test
pusha
out
and
mov
add
cmp
inc
xor
xor
scas
sbb
jo
jge
or
sbb
test
mov
leave
jbe
sbb
lret
or
roll
ficompl
pop
iret
sub
fnstenv
sub
and
push
stos
in
push
add
xchg
xchg
and
or
push
push
xchg
xor
or
insb
pusha
adc
sbb
push
add
add
cmp
cwtl
les
fisubrl
scas
test
das
sbb
push
fcompl
mov
ja
pop
sbb
or
lret
rcrl
dec
inc
or
sub
xor
xchg
pushf
fs
or
cmpsl
xchg
lods
gs
movl
ljmp
mov
and
add
pop
movl
and
mov
xchg
dec
jmp
dec
jg
mov
aad
subl
xor
sbb
test
add
mulb
bt
or
mov
aaa
icebp
ds
jbe
mov
and
add
push
adc
xor
mov
sbb
divb
mov
mov
push
mov
or
sub
and
add
add
nop
sbb
jo
push
cwtl
add
xchg
sbb
jmp
mov
xor
push
and
mov
inc
cmp
sub
mov
push
lods
xchg
popl
and
push
in
movsb
cmp
xchg
shlb
divb
push
rcrl
int
jge
push
sub
addr16
dec
mov
and
push
gs
cmp
adc
xchg
je
xorl
xchg
jle
adc
subl
addl
mov
rorb
ret
out
insb
pushf
cmpsl
jl
or
xor
inc
aaa
sbb
mov
xorl
nop
jmp
in
push
jge
adc
loopne
ret
inc
lods
xchg
xchg
xchg
nop
fldl
cmp
dec
aas
push
loopne
push
aaa
push
jge
js
xchg
aaa
test
add
pop
mov
xor
mov
mov
adc
imul
pop
and
in
mov
push
je
push
lock
insb
dec
jmp
adc
jne
sbb
and
out
cmpsl
fldl
mov
and
cmp
pop
ss
inc
pushf
andb
or
mov
inc
lods
add
hlt
xor
dec
lods
or
popa
pop
popf
lea
xor
dec
inc
test
push
fsub
and
xor
mov
enter
mov
dec
dec
jns
adcb
aas
fs
push
adc
push
dec
rorb
sub
and
adc
sub
mov
ja
push
repnz
or
pop
jmp
adc
fsubrs
and
and
imul
in
mov
bound
mov
out
sub
mov
and
lock
cmp
sahf
adc
addr16
pop
inc
data16
adc
loopne
inc
lods
inc
jbe
adc
mov
jmp
ret
sbbl
pop
or
lcall
lock
inc
loopne
les
ror
popf
fildll
pop
push
nop
xchg
out
jnp
aam
sahf
pop
jbe,pn
fdivl
ret
and
push
fs
pop
mov
insb
sbb
loopne,pn
cmpsl
je
mov
jo
dec
sbb
jbe
mov
enter
mov
mov
jmp
push
cmp
orl
mov
fistpll
jne
cmp
push
fsubr
sbb
pop
adc
inc
subb
xchg
xchg
xorl
add
pop
xchg
out
and
cs
add
adc
jns
jecxz
push
xchg
mov
cmp
lock
lock
lods
mov
enter
push
sbb
mov
cmpl
fsubs
jmp
mov
cld
adc
jno
mov
addr16
mov
arpl
adc
sbb
mov
mov
aad
xor
scas
sub
dec
dec
loop
cltd
jl
sub
push
xor
in
shlb
lods
push
inc
mov
inc
xor
or
loopne
inc
and
daa
in
lods
mov
or
mov
pushf
add
push
push
fisubl
mov
js
addb
test
push
add
in
sbb
and
jle
xchg
leave
ficoml
fcmovne
inc
and
jne
mov
sbb
outsb
or
pop
push
int
jle
loope
and
imul
push
sbb
push
andl
push
rcrl
rcl
leave
sub
cmp
rcrb
add
roll
punpckhbw
fnstenv
push
imul
pop
mov
push
mov
mov
inc
push
shlb
and
mov
or
mov
inc
testl
jbe
movsl
pop
pop
cmp
cmpsl
push
sub
dec
cmpl
cmp
and
hlt
shl
xor
les
jp
mulb
fdivs
je
hlt
sub
or
push
roll
out
xor
addr16
dec
add
add
js
ret
int3
xchg
xor
pop
mov
sub
sbb
xchg
fs
xor
or
ljmp
sub
push
add
inc
cmp
or
ret
cwtl
adc
lcall
add
or
fildl
or
adc
push
stos
adc
mov
je
test
inc
xor
adc
dec
adc
adc
mov
lods
arpl
out
dec
pop
xchg
mov
loope
or
xchg
jne
test
lret
inc
pop
add
lret
and
ljmp
add
cli
daa
shll
pop
add
sbb
inc
push
outsl
aaa
cmc
leave
clc
jp
cmp
aam
fld
mov
mov
sar
aas
mov
jmp
outsb
add
or
push
cmp
push
jp
jnp
mov
daa
in
cld
or
sbb
adc
xor
popf
dec
xchg
arpl
sbb
mov
clc
xor
popf
xchg
xchg
mov
jae
adc
in
xchg
adc
mov
sbb
adc
leave
and
push
adc
adc
mov
adc
inc
fs
dec
adc
testb
xor
clc
push
push
dec
cmpw
je
cmp
test
xchg
dec
mov
dec
clc
cmpl
push
or
xor
add
or
push
add
in
or
test
adc
add
cmp
pushf
mov
lcall
mov
popf
mov
jae
inc
cmp
jl
mov
cltd
mov
and
das
jmp
cmp
notl
loopne
cmp
sub
cmp
or
in
je
xchg
mov
dec
jnp
dec
xor
mov
nop
push
jnp
int3
lea
in
mov
rcrb
fdivrs
bound
popa
mov
dec
jae
stos
sbb
xchg
dec
cmp
into
sub
js
pushf
out
dec
cmpsl
lods
push
jno
xchg
mov
fs
sbb
stos
mov
push
sub
mov
roll
mov
xor
xor
sbb
cmp
popf
jle
notl
movb
sbb
mov
ret
cmp
lea
pop
decl
rolb
add
std
jg
add
cmpl
push
jne
push
push
jne
shlb
add
je
cmp
leave
mov
mov
cmpsb
mov
add
stos
mov
fstpl
aam
mov
and
mov
inc
or
dec
adc
jnp
lods
jecxz
pop
pop
jmp
xor
dec
or
outsb
ret
mov
mov
dec
cwtl
test
jo
loopne
jnp
adc
movsb
xchg
lods
icebp
mov
ret
insb
call
pop
jne
inc
jne
add
inc
push
jecxz
dec
test
call
rolb
add
loope
dec
sbb
out
popf
lods
hlt
rcll
push
rorb
jb
ss
mov
cld
xor
xor
std
xor
cmp
cmp
into
or
or
add
ja
xchg
clc
jnp
pop
xchg
out
and
pop
cmp
sub
lahf
mov
push
or
and
mov
sub
cmp
fcmovnu
mov
in
repnz
out
neg
ret
add
cs
cmpsb
dec
les
add
out
adc
xchg
das
into
jno
out
push
adc
jmp
pop
lock
insl
cmp
test
mov
sbbb
push
sti
push
adc
ret
xchg
pop
add
mov
sub
mov
and
or
fwait
push
pop
xchg
or
out
movsb
fimull
cli
cmp
popa
movsb
jne
push
and
and
mov
leave
xchg
addl
nop
adc
mov
push
pop
lahf
mov
cmp
rorb
lea
loop
sub
ja
jno
mov
add
into
adc
fbstp
dec
incl
adc
or
repz
test
movsb
cmp
out
outsl
jae
or
scas
push
adc
cli
test
mov
cmp
stos
popa
lea
ret
add
in
pop
push
push
pop
or
jno
mov
inc
push
into
push
cmc
pop
inc
mov
repz
add
inc
jg
dec
inc
dec
adc
roll
push
push
mov
cmpl
mov
xor
mov
jno
cmp
rorb
dec
xchg
mov
add
mov
dec
lret
notb
xchg
lret
pop
rorl
mov
inc
push
into
or
or
sar
add
mov
xor
mov
and
adc
inc
jmp
cmpsb
ljmp
in
psubw
popa
add
stc
lock
fs
add
aaa
les
inc
jp
in
sub
sbb
mov
nop
jmp
sarb
repz
sbb
mov
insb
jne
bound
pop
cmp
ror
ret
sbb
adc
mov
cmpsl
data16
xor
mov
pop
pop
pop
in
xor
mov
mov
shl
js
mov
and
push
push
xchg
mov
push
add
mov
pop
inc
inc
dec
pop
orl
mov
push
cmp
push
scas
repnz
ffree
push
mov
adc
push
lods
add
andl
sub
xor
pop
jbe
or
pop
cmpsb
push
cwtl
sti
cmp
loope
rol
loope
lahf
pop
mov
and
pop
outsl
cmpsb
mov
daa
adc
sub
dec
or
mov
stos
lea
push
pop
xchg
push
dec
into
ds
push
jns
add
dec
inc
insb
sarl
in
arpl
mov
cmp
adc
test
mov
add
and
xchg
push
test
test
xchg
pop
sub
cmc
ret
inc
in
mov
add
stos
andl
xchg
adc
pop
dec
adc
sub
shl
jo
lock
mov
jecxz
les
les
imul
jmp
ja
sbb
add
pop
add
test
icebp
xor
addl
push
and
sbb
out
ror
xor
xor
add
cld
and
add
cmp
adc
les
push
jmp
add
test
popa
inc
push
jb
aam
jle
adc
sbb
loop
push
xor
jmp
mov
or
movb
insb
fld
sub
dec
je
dec
xchg
testl
aaa
sbb
repz
lea
cltd
icebp
ret
mov
imulb
fidivl
sti
mov
add
idiv
test
jae
lea
jmp
cmpl
sub
shll
sub
clc
inc
lock
pop
push
jp
clc
push
mov
cmp
adc
and
das
dec
into
sbb
xor
sbb
jns
jb
inc
or
pop
jmp
xchg
add
push
shl
adc
mov
add
andb
push
sbb
push
adc
movsl
scas
rcrb
pusha
add
push
mov
inc
jmp
xchg
dec
inc
jo
dec
xchg
push
rol
in
sub
insl
sbb
xlat
lcall
cwtl
jb
cmpsb
pop
and
or
mov
jge
adc
pop
orl
shrl
sti
add
sbb
nop
popa
mov
add
push
lret
inc
push
repnz
movsb
ret
mov
fldl
dec
or
mov
sbbl
fisttpll
icebp
or
pop
add
xor
push
rolb
neg
bound
push
ljmp
pop
pop
movsl
push
mov
and
pop
fidivrl
lahf
push
je
mov
movsl
shlb
sbb
rolb
mov
sti
xchg
icebp
js
add
stc
xchg
movsb
jmp
outsb
or
fcoms
test
hlt
push
popa
xchg
and
data16
mov
push
adc
add
or
push
les
xor
add
sbb
cmp
ds
pop
mov
jae
dec
add
daa
shrl
and
inc
add
not
lea
sub
enter
and
nop
and
pop
or
xchg
nop
mov
add
adc
dec
nop
add
test
je
jo
jo
sbb
mov
aam
popf
and
cmp
lret
push
pushf
mov
bound
pushl
push
pop
enter
iret
adc
cs
add
js
jecxz
or
inc
inc
jb
clc
and
mov
push
adc
dec
push
pop
xor
or
mulps
inc
adc
lahf
mov
rolb
sbbb
push
cmp
xorb
imul
add
push
cmp
adc
data16
in
mov
mov
bound
or
je
test
dec
imul
jne
mov
fnstenv
push
push
test
cmp
dec
or
mov
mov
cld
cmp
add
es
push
add
dec
data16
dec
and
sbb
xchg
mov
hlt
hlt
sahf
ret
enter
or
and
popa
sbbl
push
or
pusha
sub
cmp
jae
rclb
fmuls
inc
sbb
fxtract
scas
pusha
je
jne
push
js
fistl
nop
sbbb
cld
loopne
fnstenv
mov
xor
xorb
and
xchg
fdivs
dec
inc
scas
out
mov
inc
ja
push
cmp
pop
push
push
addr16
sub
setg
xchg
lea
adc
pop
cs
testb
pusha
cmp
mov
mov
sahf
jp
sub
neg
sbb
and
bnd
movzwl
push
sub
push
adc
pop
adc
clc
or
jp
mov
je
adc
xchg
and
cmpl
pushl
jnp
inc
pop
mov
ss
rol
fistl
adc
dec
cmp
popl
sbb
jge
add
cmp
jbe
or
jne
fidivrs
mov
cmpsl
shrb
std
xor
jnp
inc
js
mov
cmp
fwait
or
in
mov
and
sbb
cli
dec
jp
jmp
inc
jl
mov
addr16
mov
pop
mov
cmp
add
out
shll
lea
jmp
ds
jo
jns
adc
js
and
imul
dec
ret
cmp
ret
add
inc
add
cwtl
test
and
cli
cwtl
fisttpll
cmc
and
into
sbb
mov
push
js
mov
imul
add
sbb
inc
jecxz
xor
movsb
sub
popa
pop
mov
insb
stc
lods
jo
mov
sub
outsl
mov
mov
fisttpll
outsl
cld
adc
stos
ja
dec
enter
add
cmpb
fadds
add
int
adc
negb
outsl
and
xor
in
jae
andl
in
les
hlt
push
or
pop
jo
mov
cli
cmova
mov
lret
sub
pop
push
or
adc
fistpl
jmp
sbb
lock
add
call
or
and
mov
cld
shll
inc
lods
sub
fbstp
push
rorl
loopne
loop
test
sbb
pop
add
mov
jle
push
call
andl
pop
insb
dec
fists
int3
jp
push
jmp
daa
insb
aam
add
push
or
cmp
adc
jo
inc
cmp
les
dec
test
pop
sbb
aaa
inc
jg
xor
or
cmpl
xor
jae
sbb
xorb
mov
add
cmp
aad
xor
cld
popf
push
xor
sbb
push
repz
pop
pop
or
mov
cwtl
sbb
sub
sbb
inc
adc
outsb
lock
test
add
insl
or
push
insl
ds
pop
movb
iret
mov
xchg
xchg
xor
test
push
xchg
mov
and
inc
cmp
leave
ror
jae
cmp
push
push
and
ds
pusha
sarb
sub
and
pop
loopne
xor
or
scas
mov
mov
jmp
cmp
loopne
jb
push
xor
fadds
jae
das
or
push
push
inc
add
outsl
inc
or
and
jecxz,pn
lock
adc
js
inc
cmp
xorl
or
out
cs
push
sbb
aam
roll
hlt
push
push
mov
lea
add
outsb
xchg
or
jo
push
push
jmp
sub
fadds
addl
jg
pop
push
add
dec
mov
jno
ss
mov
arpl
into
and
popf
test
sub
xlat
inc
loopne
add
into
into
cmp
je
jmp
push
arpl
and
hlt
pop
dec
mov
fnstenv
leave
add
mov
mov
arpl
lea
cvtps2pd
dec
add
xchg
test
sarl
and
jge
dec
mov
in
ds
mov
roll
adc
inc
scas
xor
fs
jge
and
add
add
cmp
xlat
lods
add
clc
call
push
je
orl
cmp
pop
jl
push
sti
loop
xchg
and
mov
repnz
mov
inc
sbb
test
xchg
add
xor
shrl
inc
sub
sub
sbb
inc
sbb
lods
adc
xchg
sbb
and
test
adc
pusha
mov
je
mov
mov
inc
jge
xchg
mov
loope
ja
les
in
std
or
enter
out
push
aam
ja
daa
jno
fcomps
add
and
jo
test
xor
shl
push
inc
mov
cltd
add
add
test
sahf
ret
mov
mov
orb
add
mov
push
pop
lcall
gs
in
jle
push
push
lods
mov
xor
in
mov
xor
mov
or
pop
rcll
xorb
aaa
add
or
aad
cmp
rclb
mov
pop
or
xchg
pop
jae
aaa
push
sti
jb
mov
mov
mov
enter
push
adc
ljmp
shrl
add
xor
outsb
add
push
jnp
mov
cmp
cmp
add
pop
je
dec
adc
lock
popa
push
jae
lea
ja
cmp
aas
or
or
mov
pop
mov
pusha
arpl
pushl
and
stc
push
and
mov
mov
rorl
or
jle
mov
sub
pop
pop
aas
mov
mov
lea
shlb
call
add
out
aam
xor
jae
leave
jmp
push
and
sub
dec
and
dec
ja
push
xchg
and
sbb
adc
mov
adc
add
xchg
mov
dec
pop
imul
cltd
xor
xor
adc
notb
rclb
cld
cmpsb
or
shlb
out
mov
je
fs
fisubrl
adc
into
pushl
adc
roll
sub
lods
push
pop
data16
xchg
das
dec
mov
sub
inc
push
lods
adc
jb
pushf
push
data16
loope
xchg
jne
push
push
pop
xchg
pop
push
lea
cmp
sub
ret
jle
movsl
sub
popf
xor
xchg
pusha
jb
pop
adc
fisttps
mov
nop
and
loopne
cmpsb
adc
add
jecxz
mov
mov
add
xor
push
pusha
push
push
sub
jno
mov
lahf
jg
ret
or
or
pop
mov
clc
mov
mov
mov
lea
ret
inc
jg
dec
or
dec
inc
mov
cmpl
adc
mov
xorl
das
aas
xor
das
in
dec
xor
inc
and
xor
adc
add
fst
insb
xor
adc
sub
sub
jmp
push
inc
jmp
add
dec
add
pushf
jb
bound
or
jl
add
mov
std
incl
jge
jbe
push
es
add
jl
addl
mov
clc
and
lahf
add
outsb
nop
mov
ret
loopne
pop
mov
shl
test
mov
mov
fsubs
cmp
inc
js
mov
in
xchg
dec
ret
push
jae
lea
push
sub
shlb
pushf
decb
mov
ret
push
popf
stos
add
dec
sbb
inc
ja
jbe
add
jge
pop
ret
push
lods
add
ret
test
loop
sbb
in
cmc
loopne
jge
jge
mov
lahf
pop
cld
mov
fdivl
cmpb
xor
fnstenv
pop
shrl
jmp
push
cmp
cmp
sub
mov
mov
mov
adcl
movb
add
mov
lcall
fdivs
aam
push
sahf
pop
clc
xchg
jmp
push
sti
mov
in
cmc
xchg
jo
out
insb
testb
test
call
out
dec
mov
dec
in
add
jbe
sti
sbb
and
mov
push
rcrb
sbb
aam
xchg
js
cmp
mov
xchg
loopne
push
or
push
xchg
scas
std
jl
pusha
hlt
push
lea
out
sbb
int3
test
inc
push
dec
mov
and
pushf
push
xchg
jae
cmp
jns
xor
push
inc
xchg
or
push
cmpb
jmp
push
inc
pminub
or
sub
inc
cmp
insb
into
dec
add
adc
leave
orl
add
sbb
sbb
sbbl
in
loop
popf
mov
mov
fwait
cmp
test
add
lds
jb
imul
ljmp
js
jmp
pop
mov
cmp
sub
add
or
add
es
jecxz
test
lcall
or
and
jb
stos
add
add
add
aam
std
test
pop
inc
std
jno
dec
adc
loopne
test
mov
nop
push
add
dec
movsl
arpl
addr16
in
and
imul
imul
xor
loop
adc
test
out
in
nop
mov
out
push
cmpb
movb
pop
add
sub
add
push
das
or
inc
in
or
lea
pop
subb
mov
sbb
orb
mov
mov
int3
push
adc
ficompl
xchg
jmp
xchg
idivl
sbb
sub
sub
xor
sbbb
dec
mov
loopne
or
daa
fadd
ss
mov
jge
dec
pop
imul
fwait
arpl
addb
jnp
js
or
sbb
cmc
pop
clc
shlb
cmp
ret
ds
ret
dec
stc
clc
dec
cld
enter
mov
pop
pushl
add
scas
inc
pop
aad
adc
pusha
xor
cmp
inc
adcl
push
jmp
ljmp
cld
aas
es
sbb
pop
adc
lret
dec
xor
mov
adc
or
add
shrb
sub
lret
adc
mov
fs
adc
cli
hlt
popa
adc
adc
mov
loopne
add
int3
adc
jbe
jle
adc
in
mov
loope
pop
ret
xor
orl
stos
addl
in
xor
or
mov
dec
sub
in
cli
or
sbb
out
cmp
mov
mov
inc
sbb
push
outsl
mov
sbbb
add
xchg
popa
das
pop
sbb
outsl
mov
sbb
sbb
outsl
xchg
mov
dec
sbb
mov
and
xchg
jno
jl
push
mov
sarb
pusha
dec
test
out
mov
ret
dec
repz
popf
add
push
out
push
fs
or
add
pop
add
xor
test
in
mov
clc
filds
adc
jle
jne
or
mov
cmpsb
and
lea
loopne
inc
movsl
test
sbb
sub
test
pop
add
mov
add
sbb
inc
and
pop
movsl
xor
insl
and
fs
sti
mov
adc
pop
pop
lea
shlb
pop
xor
std
and
xchg
pop
push
sub
loopne
dec
stos
pop
pop
fimuls
cmpl
xchg
sbb
cmp
adc
push
out
mov
lahf
and
or
mov
inc
es
add
in
xchg
push
xor
jl
inc
outsb
lahf
ret
push
inc
xor
add
sub
icebp
mov
lods
dec
sub
xchg
mov
jmp
adc
aas
adc
add
push
jb
mov
aam
out
cmp
xor
or
mov
adc
mov
gs
mov
mov
xor
xor
loop
and
in
popf
and
pop
fwait
cmp
xchg
cmp
mov
es
push
out
mov
aam
xor
pop
call
fs
mov
test
je
test
ss
or
jle
or
jo
push
sub
rorb
pop
push
mov
je
push
jmp
inc
jmp
and
dec
xlat
push
cmpl
push
or
icebp
rorl
std
pop
das
jmp
insl
loopne
inc
cmp
jl
sbbl
das
adc
adc
js
fdivrl
sub
outsl
das
arpl
push
mov
mov
pop
sbb
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
test
sbbb
loope
test
sub
loopne
jle,pn
cld
adc
dec
mov
mov
aam
add
inc
jle
fstps
popa
or
xchg
rcrb
inc
repz
adc
movsl
inc
push
pushf
push
cltd
imul
and
fdivrs
jle
sbb
mov
aaa
jns
cmp
sbb
dec
test
sbb
fwait
jo
call
or
pop
push
dec
sbb
mov
stos
xor
nop
add
cli
sub
push
mov
lea
push
in
inc
inc
aam
jbe
enter
ja
xchg
dec
add
cmpsb
fld
scas
add
das
cmp
fistpll
inc
cmp
ret
push
mov
or
xchg
hlt
and
cmp
in
jae
loope
pushf
cld
push
adc
dec
or
xchg
int
push
es
cmp
sti
gs
xchg
dec
clc
xor
lock
add
lock
lock
ret
jne
outsb
add
sbb
loope
cmp
mov
mov
sbb
push
mov
mov
popa
inc
test
sub
fbstp
xchg
repz
push
aaa
sbb
loopne
push
cli
and
and
and
jge
sbb
cmp
mov
cmp
jl
into
sarl
imul
mov
jne
inc
adc
mov
repz
jecxz
mov
frstor
lods
sbb
cmp
int3
pop
into
sbb
gs
xlat
dec
mov
outsl
push
mov
aam
ljmp
dec
and
pop
jmp
jg
xor
xchg
out
xchg
lock
sub
push
movl
dec
dec
add
inc
or
mov
jp
orb
mov
rolb
mov
xorb
popf
pop
call
repnz
rol
rcr
fcoms
xor
pop
push
loop
jo
dec
push
cmp
add
inc
cmp
push
scas
mov
adc
dec
pop
enter
sbb
loope
pop
mov
push
mov
add
in
loope
rcrl
and
orl
xor
imul
aaa
add
adc
xor
shll
xchg
ficoml
das
outsl
push
xor
add
dec
inc
loopne
sub
fstpl
mov
jl
mov
leave
cs
inc
jo
es
and
aas
lea
cmp
or
ss
aaa
stos
sub
dec
dec
jns
adc
jmp
iret
push
shrb
mov
adc
adc
shlb
pop
outsl
inc
pusha
inc
add
jmp
push
adc
xchg
xchg
ja
add
sbb
sbb
inc
das
test
inc
push
fdivl
fsub
push
pop
dec
in
xor
or
or
add
nop
pusha
mov
sbb
mov
cmp
roll
sahf
or
sbb
xchg
ret
js
je
dec
push
adc
mov
jmp
dec
sbb
sbb
inc
and
cmp
pop
cmp
and
push
sub
sub
push
lds
movsb
call
ret
in
sbb
adc
adc
add
dec
leave
adc
or
pop
mov
adc
sub
addr16
mov
neg
inc
push
xor
add
push
jp
jo
pusha
mov
pushl
cmp
jne
sub
adc
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
cltd
lahf
aaa
cmp
roll
rorb
cmpsb
push
push
dec
enter
fadd
dec
xchg
sub
push
mov
repnz
jmp
ret
std
call
ds
in
lods
pop
loop
pop
ror
clc
xor
rorb
popf
out
or
pop
gs
sahf
rolb
rcll
xchg
mov
ret
popf
lock
adc
or
mov
jne
push
fwait
outsl
xchg
loope
leave
js
jne
adc
mov
xchg
data16
mov
jne
or
jne
addr16
jl
inc
std
decl
adc
push
ljmp
fsubrl
cmp
into
mov
cmp
out
xchg
cmp
or
push
lret
addr16
add
fadds
mov
xchg
fcoms
ja
insl
repnz
cld
mulb
mov
push
popa
inc
add
lea
cmp
daa
dec
add
mov
rorb
push
push
out
jmp
movsb
inc
mov
hlt
jae
jle
jne
add
dec
push
jnp
xor
cmp
sub
mov
sub
sbb
push
jge
out
call
cmp
fiaddl
mov
inc
or
lret
jp
mov
test
or
mov
sbb
and
daa
fnstcw
dec
scas
lcall
pop
nop
fbstp
aam
pop
mov
jg
lahf
in
mov
test
pop
push
pop
mov
mov
pop
ret
fmuls
jmp
fisttpll
sub
insl
inc
or
mov
dec
flds
sub
leave
movsl
test
into
inc
loop
inc
dec
aam
daa
adcl
dec
andb
andl
fs
rcrl
mov
sbb
jne
aaa
push
pop
leave
dec
cli
or
pop
sub
sub
jae
sbb
jne
add
push
sahf
inc
push
push
je
xor
outsl
ret
cmp
sbb
dec
insb
jne
sub
adc
ss
jmp
ficompl
mov
inc
and
pop
jo
das
fs
inc
or
cmp
je
aas
in
daa
add
fadds
test
xchg
aaa
jge
add
fsubrs
add
mov
xchg
or
jnp
btl
cli
std
sbb
cmp
jl
or
aaa
mov
dec
mov
fs
cmp
fidivs
push
mov
in
arpl
pop
sbb
in
push
test
mov
hlt
push
push
cmp
jno
pop
xor
or
ja
push
test
push
outsl
add
sub
fdivl
sub
rolb
loop
cwtl
cmp
jne
ds
inc
push
jle
lea
insl
mov
pop
push
sub
mov
mov
sub
pop
lea
aam
inc
addr16
mov
dec
dec
or
or
inc
and
add
pop
popl
fadd
stc
mov
add
outsb
xchg
dec
and
cwtl
jg
or
or
push
dec
outsb
dec
adc
or
pop
dec
or
sub
js
js
inc
sbb
or
pop
daa
pop
add
lcall
adc
xchg
cmp
add
cmpsb
imul
cmpsb
imul
cmp
or
call
pop
xchg
cmpsb
cwtl
push
or
outsb
in
or
mov
mov
add
inc
mov
xor
addr16
scas
sub
pop
rol
mov
mov
adc
and
mov
movb
sbb
and
pushl
data16
jae
fadds
jbe
inc
jl
js
inc
push
fs
insb
push
fs
push
push
fs
push
cmp
xchg
mov
push
ljmp
sub
sbb
fnstenv
inc
xchg
sahf
sbb
dec
sbb
dec
pop
pop
mov
inc
pop
test
and
adc
in
push
jo
test
jno
cmp
outsl
xor
xchg
js
addps
subb
add
add
pop
and
jne
mov
push
cld
test
cmp
test
cli
add
inc
mov
mov
pop
inc
sbb
out
jne
sbb
jb
mov
lcall
inc
sti
sbb
jb
ret
pushl
jb
or
push
xor
shlb
xor
mov
out
mov
xchg
lret
mov
push
mov
mov
sub
subl
inc
add
shl
ret
mov
add
add
cmpsl
loope
imul
add
je
sub
shrl
ja
jne
das
xorl
addl
loopne
mov
mov
and
daa
inc
xchg
dec
adc
imul
ret
add
pop
dec
test
mov
xchg
mov
in
jmp
xlat
add
das
call
dec
stc
fldl
sar
iret
and
ffree
das
add
cmpsl
or
repnz
iret
in
fists
and
imul
sbb
mov
mov
add
mov
stc
push
jne
mov
pop
dec
sbb
dec
jne
into
adc
data16
or
push
adc
je
xor
push
xor
dec
mov
fwait
dec
lahf
sbb
repnz
cld
loopne
aaa
pop
and
dec
mov
inc
push
pop
add
inc
movsl
imul
cmp
sub
or
fidivrl
pop
mov
add
shll
sbb
filds
and
dec
subl
leave
or
test
push
popf
lock
cmp
mov
xchg
aam
mov
jo
cli
out
fidivrs
inc
adc
or
sahf
lods
pop
mov
dec
sbb
mov
stc
add
dec
sbb
rcrl
jp
adc
or
call
or
xchg
cmpl
movsb
sub
add
sbb
pop
xor
popa
aaa
fld
sbb
inc
mov
test
cmp
sub
enter
addb
repnz
sbb
pop
inc
mov
mov
sbb
xor
adc
lea
adc
mov
lahf
fldl
pushf
and
sbb
jno
orb
mov
mov
in
add
lock
push
loopne
sub
jne
or
in
nop
gs
inc
sbb
pop
fs
pusha
pusha
insb
cmp
xor
insb
push
inc
test
out
movsb
xor
sbb
arpl
push
xchg
inc
push
cmp
cli
je
xor
scas
insl
popf
add
or
push
arpl
es
sbb
adc
push
mov
hlt
sti
push
sub
cmpsl
js
fwait
inc
and
ret
jne
adc
dec
roll
add
push
outsb
dec
adc
dec
or
sub
inc
cs
lock
lock
push
enter
ss
jmp
fcompl
push
pop
xor
ret
mov
lret
sbb
push
arpl
push
test
jnp
out
andl
sbb
push
inc
dec
add
add
push
and
mov
or
fsubl
ret
test
jbe
pop
xor
cld
sub
or
pop
pop
mov
jo
ljmp
inc
jo
sbb
or
cmc
sbb
add
add
mov
and
adc
pop
jle
addr16
and
and
jne
sbbb
xchg
dec
inc
sahf
mov
pusha
and
fidivrl
in
insb
pop
push
dec
fucom
push
test
popa
dec
test
mov
popf
jecxz
mov
mov
push
push
inc
mov
es
adc
mov
xor
scas
insl
js
cmp
or
mov
pushf
cwtl
stos
test
mov
mov
cwtl
fisttpll
mov
cltd
or
or
cmpsl
add
push
and
and
push
lea
push
or
fsub
add
push
or
xor
sbb
xchg
dec
cmp
adc
pop
movd
imul
les
sub
add
neg
lret
add
pop
popa
add
and
ret
out
push
enter
movsl
or
mov
and
push
pop
arpl
jmp
imul
hlt
nop
sbb
out
jmp
mov
bound
popa
mov
cmp
push
add
fs
pusha
cs
push
jo
and
fwait
mov
mov
data16
fnstcw
out
sub
outsl
std
push
jecxz
inc
add
jge
int3
xchg
pop
xchg
into
mov
stos
push
sbb
mov
jecxz
or
je
mov
mov
jne
or
xchg
adc
or
inc
insl
xchg
push
mov
les
fs
cmpsl
push
or
pop
out
sbb
inc
push
jmp
repz
pop
fcoms
push
leave
push
jmp
pushf
push
adc
and
cmp
adc
xor
adc
fndisi(8087
cs
adc
mov
lea
sub
sub
and
mov
lock
rclb
data16
sub
in
inc
push
push
push
or
ja
adc
fsubp
fstl
inc
pop
mov
mov
cmpl
pop
lock
mov
xor
sbb
fmuls
dec
movsl
test
jne
icebp
pop
jno
int
and
sahf
add
add
testl
pop
cmp
mov
rcrb
add
mov
pop
fcomp
lcall
xor
xor
mov
pusha
xor
mov
movsl
jbe
and
jl
lcall
clc
ret
loopne
and
push
adc
adc
sub
jg
sbb
xor
filds
push
lods
pop
push
inc
test
adc
or
scas
mov
xor
sahf
lret
ficompl
xchg
out
push
cmp
and
dec
sbb
xor
repnz
fdivp
sub
out
dec
sub
fidivl
and
push
dec
repz
and
cmpsb
lea
das
and
imull
dec
or
in
dec
mov
inc
adc
insl
add
lea
cmp
adc
fwait
add
or
nop
push
aam
insl
mov
inc
or
dec
cwtl
sub
pop
icebp
in
and
or
shlb
push
sahf
fwait
imul
fsubl
pushf
jnp
add
and
mov
lods
or
and
pop
mov
insb
sbb
cwtl
inc
jg
adc
call
jmp
hlt
lods
lret
adc
fdivl
jbe,pt
adc
je
in
cmp
push
mov
ljmp
ret
inc
xchg
add
das
fucomp
inc
jp
push
add
aaa
imul
or
push
orps
and
xor
movsb
add
arpl
add
inc
cmpsb
mov
cmp
push
imul
pop
jb
subb
shll
test
push
nop
subl
add
inc
add
sahf
push
mov
addb
or
push
ss
cmpsl
test
popf
mov
push
xor
mov
or
or
addb
je
jbe
pop
push
cmp
push
mov
pushf
dec
or
call
or
fs
sbb
mov
add
sbb
push
ret
outsb
push
jnp
xor
sub
inc
sub
out
adc
xchg
xor
cmp
xor
nop
xor
xor
or
pop
add
xor
movq
ret
or
add
pmaxub
ret
pop
js
push
shrb
js
imul
push
push
sbb
pop
testb
lret
iret
and
pop
or
dec
lret
outsb
inc
xor
jb
ljmp
jg
testb
loope
jno
pop
mov
xorl
adc
and
mov
inc
in
jmp
orb
nop
dec
push
xorl
test
sbb
inc
cmc
js
aas
jecxz
test
mov
mov
xchg
pop
mov
cmp
aaa
call
lea
ret
sub
out
jae
jge
mov
inc
daa
sub
leave
mov
lahf
dec
cwtl
xchg
test
jae
test
or
dec
pop
pop
mov
push
xchg
and
jge
cs
jl
andl
lods
enter
mov
xchg
mov
ret
mov
or
cltd
les
xchg
inc
jae
leave
and
sahf
adc
or
aam
jecxz
dec
xor
pop
jo
push
push
lea
cmc
adc
insb
movl
add
ljmp
movsl
jbe
inc
cmpsl
fistpll
sbb
jo
cmpsl
sub
and
jno
jl
adc
pop
adc
and
push
enter
cmpsb
sarb
push
scas
pop
add
jl
add
test
and
push
jl
add
xor
je
push
mov
sub
addb
pop
push
sbb
jmp
and
ljmp
mov
push
lds
push
xor
inc
add
fsubs
rorb
loop
and
or
movsb
add
sahf
orl
xchg
pop
xor
xor
xchg
pop
add
add
les
push
ja
bound
mov
and
aam
dec
mov
jne
add
add
or
cmp
add
or
pusha
imul
add
pop
and
xchg
cmp
mov
jl
loope
xor
jg
or
push
fistl
mov
rcr
into
mov
push
xchg
mov
fmulp
enter
leave
pop
adc
lret
push
xchg
cmc
mov
fstl
lods
mov
mov
sbb
rolb
sub
enter
or
inc
xchg
mov
add
inc
push
add
popa
cmp
sarl
aaa
xchg
pop
sbbl
inc
jle
sbb
iret
movsl
push
ja
ret
mov
pop
adc
andl
cmpsl
dec
or
mov
mov
scas
lods
dec
cld
push
test
es
push
jecxz
mov
or
or
jo
pop
rorl
mov
lds
fisubl
mov
mov
or
push
xchg
insb
insb
int
nop
inc
mov
or
je
out
neg
aas
jo
jle
mov
out
jmp
inc
dec
daa
out
push
cmpsb
outsb
fistl
pushf
jmp
mov
pop
insl
cmpb
fmuls
pop
push
push
push
inc
stos
mov
push
jbe
imul
idivl
push
adc
sbb
lds
int
mov
in
push
add
dec
stos
addl
add
cli
ret
push
popa
cs
mov
add
or
mov
movsb
fxch
dec
inc
das
imul
dec
xlat
out
addr16
inc
rcll
stos
addl
aas
movsl
add
lcall
xchg
test
loop
or
rolb
jbe
or
xrelease
xchg
mov
dec
mov
or
cmp
daa
js
arpl
dec
movsl
xlat
pop
add
aam
cmp
pop
mov
push
andl
ret
pop
outsb
movsl
popa
test
sub
ss
adc
mov
xor
or
ret
cmp
or
add
cmp
arpl
push
mov
sub
mov
push
push
lret
sub
outsl
push
inc
xchg
mov
outsl
push
or
jae
leave
push
cmp
insb
dec
add
or
ss
insb
es
and
cwtl
push
in
mov
andl
mov
sbb
pop
je
xor
add
lea
add
add
lcall
notl
cmp
adc
push
cmp
adc
sbb
cmp
jo
loop
jne
icebp
jnp
pop
lods
lock
mov
xor
add
fildll
mov
xchg
fcomp
add
mov
fs
loope
push
test
push
mov
andl
and
aas
fildl
jmp
ret
jbe
mov
jae
mov
int3
and
inc
orb
movb
and
pop
cli
test
pop
adc
inc
insb
shr
xor
xchg
out
inc
add
call
loopne
and
jge
adc
cmp
pusha
sbb
add
hlt
push
sbb
or
pusha
insb
std
sbb
mov
mov
mov
add
fidivl
xor
pop
insl
jge
adc
jae
movsl
pushf
sub
or
hlt
sbb
imul
jmp
xchg
scas
push
push
pop
adc
pop
or
inc
pop
int3
push
test
in
mov
adc
mov
push
mov
sbb
dec
iret
xchg
js
or
jle
push
cmp
lds
xor
jno
test
loop
test
jge
loope,pn
and
jecxz
mov
jno
pop
jnp
mov
pop
sub
addb
jbe
mov
cltd
loop
sub
mov
sub
adc
cmpsl
pop
mov
test
popl
cmpb
and
push
add
aam
pop
inc
scas
out
movb
pop
sub
adc
ret
inc
add
add
pop
enter
cmp
dec
jg
clc
imul
rorb
cwtl
add
js
push
mov
je
push
push
dec
cmpsb
out
jne
adc
arpl
inc
mov
push
lea
jecxz
jg
cmpb
cmp
push
je
push
movb
addr16
xor
adc
cmp
pop
push
fs
roll
nop
push
xor
repz
inc
loopne
push
repz
mov
sub
jne
test
jo
add
dec
sbb
test
das
push
fwait
inc
cmp
pop
pop
or
push
or
shl
push
jno
out
adc
icebp
and
pop
into
pop
inc
clc
rcrl
inc
fldt
mov
pop
cld
sub
sti
xor
cmp
inc
mov
inc
adc
sbb
inc
sbb
imul
adc
out
mov
lea
mov
push
xor
lea
xchg
dec
sbb
jle
adc
int3
lock
or
and
lcall
movsb
loopne
adc
mov
js
movb
jecxz
aas
adc
sbb
out
invd
arpl
mov
jbe
mov
sarl
movsl
mov
mov
nop
fs
stos
loopne
jecxz
repnz
pop
testl
pop
je
cmpsl
or
sbb
dec
es
inc
jbe
repnz
call
or
dec
or
push
rolb
cwtl
push
push
js
pop
xchg
push
ret
adc
cwtl
test
xor
shl
sub
les
js
and
loopne
and
jl
xchg
add
into
mov
sbb
push
mov
lahf
mov
popa
jbe
sarb
add
xchg
lock
mov
testl
lahf
cmp
xor
or
lahf
cmp
xor
mov
rcr
adc
and
cmpsb
add
and
test
or
add
mov
xchg
pop
das
xor
mov
xor
push
sub
pop
daa
insb
js
push
cltd
in
fadd
sbbl
sub
pop
push
push
cmp
push
cmp
push
mulb
adc
xor
dec
js
mov
xchg
outsb
xchg
mov
or
mov
sbb
push
imul
cmp
insl
inc
jmp
andl
insb
loopne
adc
xlat
push
add
inc
xor
adc
mov
lods
and
addb
sub
cwtl
add
sbb
mov
dec
adc
cmp
push
cwtl
add
lret
mov
sahf
imulb
rcl
cmp
rcl
adc
jnp
or
lahf
mov
mov
jno
push
push
stos
sti
jb
addb
add
jno
or
cs
adc
mov
das
in
daa
sub
pop
or
in
jbe
lock
mov
rcr
mov
decl
pop
jae
jl
or
lea
pop
lds
push
push
push
xchg
ss
or
sub
mov
inc
or
or
into
popa
aaa
inc
inc
mov
ds
loope
adc
mov
adc
inc
jo
imul
push
and
lea
in
pop
push
faddl
or
and
cmp
ja
je
or
je
or
sub
dec
incb
adc
cmp
andl
pop
push
or
add
adc
sbb
sahf
nop
ret
sbb
jnp
imul
mov
push
lcall
xor
test
push
adcb
ss
fs
out
sub
ja
ret
insl
adc
and
dec
add
mov
xchg
movsb
call
push
adc
or
xchg
mov
icebp
and
mov
lcall
sub
test
jns
adc
and
inc
adc
or
adc
mov
mov
and
and
sbb
dec
push
outsl
aad
pop
daa
push
pop
or
roll
mov
pop
ret
clc
xchg
ffree
push
inc
push
sub
inc
dec
sub
or
adc
adc
or
fcmovne
xor
in
lds
popf
sub
shll
or
push
adc
adc
adc
push
sub
adc
xchg
add
in
mov
and
adc
or
cmp
mov
add
test
adc
stos
and
or
push
mov
repz
loopne
xchg
imul
push
shll
inc
push
lds
in
add
jecxz
loope
lcall
mov
dec
or
ret
out
adc
loopne
ds
sti
clc
or
dec
mov
pop
rolb
or
push
popa
xor
xor
sub
add
fisubs
pop
loopne
push
mov
push
sub
test
mov
icebp
jb
jp
push
or
dec
mov
arpl
pop
push
pop
sbb
push
xchg
dec
fildl
sbb
mov
dec
xchg
sbbb
xchg
dec
cmp
adc
gs
sbb
in
pop
lcall
cmp
xor
xchg
pushf
inc
push
pop
add
repnz
sub
pop
push
cmpsb
xchg
pop
enter
aaa
mov
call
add
jb
add
idivl
mov
jne
sub
sarl
cmp
js
lods
jbe
ss
aaa
add
fcoml
je
dec
sub
in
push
jnp
ret
or
shl
fiadds
push
ret
pop
cmc
fcomp
xchg
data16
mov
inc
orl
or
addb
mov
inc
test
shll
jl
mov
xchg
js
cmpl
cmpsb
lret
ljmp
sahf
xchg
insb
jo
fmuls
loope
xchg
push
xchg
icebp
xor
dec
adc
inc
or
test
sbb
mov
aas
add
sbb
or
xorb
jns
jg
pushf
scas
std
decl
or
in
xchg
adc
jmp
cmp
pusha
xchg
or
and
popf
adcb
xor
gs
ror
mov
jo
xor
mov
or
push
push
xor
out
dec
inc
adc
test
mov
out
inc
loop
mov
push
test
or
mov
loopne
call
xor
add
fcoml
add
repnz
ds
mov
mov
or
imul
adc
data16
inc
pop
mov
dec
arpl
sbb
push
leave
pop
imul
test
outsl
dec
das
or
inc
and
push
daa
roll
out
cmpsb
mov
cmp
jb
dec
repz
repnz
or
dec
add
mov
lock
cmp
lea
mov
dec
push
push
xorl
xor
push
sub
inc
iret
les
stos
pusha
loop
dec
ret
push
mov
add
dec
pusha
sbb
jns
inc
inc
inc
add
mov
adc
mov
clc
and
mov
int
popa
or
inc
fdiv
dec
std
fld
mov
push
addb
int3
cmpsb
std
inc
cmpsl
sbb
pop
lret
in
mov
outsl
call
adc
pop
push
inc
leave
je
js
cs
rcl
add
pusha
jle
or
jb
cwtl
ljmp
or
xchg
push
sub
sahf
sub
fnclex
add
push
inc
xor
lods
mov
aaa
mov
push
rcrl
in
mov
loopne
dec
cmp
hlt
rcll
inc
add
inc
xor
mov
mov
xor
add
es
orb
fisubl
nop
cmp
sbb
js
scas
add
mov
cs
jge
call
push
sbb
mov
push
xchg
cmp
mov
mov
clc
jle
scas
or
pop
adc
xchg
mov
sub
cmp
ret
add
and
xor
add
out
sbb
aam
lock
rorb
stc
or
xchg
jno
add
mov
cmpsl
jns
xchg
nop
jo
xchg
mov
add
cmp
in
loop
adc
sub
push
pop
sub
and
xchg
adc
cs
xor
mov
or
call
cs
xor
dec
or
jnp
mov
adc
jg
hlt
xor
lahf
popf
cmp
jo
subl
pop
lock
enter
jne
xor
adc
add
lock
les
pop
fldl
mov
xchg
mov
inc
xchg
cmovnp
mov
or
iret
sub
mov
popa
inc
add
les
lock
adc
jge
inc
sbb
or
jl
ds
rolb
pushf
das
push
loopne
out
push
sbb
jmp
popa
pusha
out
pushf
std
and
adc
cmpsb
sub
add
adc
and
sbb
daa
pushf
imul
pop
ret
xor
xor
adc
clc
in
gs
jnp
arpl
cld
or
inc
adc
movsl
adc
push
pusha
popa
and
divb
jno
adc
add
sub
into
jle
call
add
lock
jg
push
adc
jbe
testb
sub
lcall
shlb
aam
adc
dec
loope
pusha
test
mov
in
add
xchg
push
sub
adc
aaa
ret
jle
xor
sbb
push
sbb
das
xchg
dec
pop
cmp
cmp
adc
or
xchg
xorb
and
xorl
push
jae
inc
popf
lods
in
cmpsb
int3
or
lods
add
imul
pop
mov
pop
out
dec
mov
ds
in
sbb
in
cmp
add
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
inc
add
cmp
test
jne
dec
pop
cmp
sbb
sbb
pushf
sbb
roll
mov
sub
nop
fbld
or
xchg
outsl
aaa
add
sbb
je
test
push
sbb
adc
push
adc
and
mov
es
ds
shrl
push
xchg
mov
cli
aas
sub
lcall
test
mov
je
je
movsb
outsb
scas
je
cmp
mov
daa
mov
add
cwtl
aas
mov
or
arpl
ficomps
fisubs
cld
mov
popf
pop
sbbl
inc
arpl
xchg
sarl
pusha
xor
inc
pop
lock
leave
call
push
jo
push
add
add
outsb
jmp
cmp
pop
adc
adc
mov
pusha
std
loope
push
data16
dec
pop
mov
loopw
jp
inc
mov
hlt
cld
inc
adc
and
jo
outsb
movsb
daa
pop
jg
adc
push
cld
push
sbb
add
push
in
shl
in
enter
stos
cltd
push
dec
orl
bound
mov
shll
in
sub
pop
mov
insl
dec
or
je
adc
jnp
scas
outsl
xor
push
in
xchg
or
jne
and
xchg
sub
add
in
repnz
hlt
and
jmp
xchg
out
and
sub
xchg
out
adc
push
sub
loopne
or
frndint
push
mov
xchg
cs
movsl
pop
mov
nop
sub
inc
push
adc
out
nop
jb
int3
xor
sahf
inc
mov
sahf
inc
push
xor
cmp
sahf
sbbl
jo
inc
arpl
push
pop
fwait
sarl
xor
inc
inc
push
sahf
arpl
dec
imul
pop
out
add
or
or
insb
xor
pop
sahf
out
dec
jmp
outsl
jl
xchg
dec
xchg
cmpsl
roll
jmp
int
push
imul
or
lcall
insb
pop
mov
pop
das
imul
pop
sbb
mov
loop
enter
xchg
mov
xchg
adc
dec
sub
jne
push
jmp
test
push
mov
add
mov
test
or
sbb
pop
adc
and
jo
stos
movsb
push
push
loop
pop
push
sub
bound
mov
test
pop
jbe
adc
rorb
lret
fcompl
sahf
fldenv
nop
rclb
movsl
push
xchg
mov
jae
pop
sbb
xchg
or
rcll
add
int3
outsb
adc
xor
jmp
adc
inc
sbb
je
mov
fdivrl
jg
cli
sbbl
fstl
or
inc
dec
je
cltd
sti
das
or
sbb
into
or
push
in
add
jp
in
push
xchg
out
push
xchg
call
or
pop
in
cmp
xor
testb
xchg
icebp
mov
or
or
jb
xchg
adc
mov
pop
jg
sub
pop
dec
loopne
loopne
ret
xor
add
cwtl
pop
xor
cmp
and
aaa
rorl
or
mov
mov
incl
jne
cmc
add
sbbl
pop
imul
sbb
clc
sbb
dec
push
sbb
popf
and
adc
add
sub
adc
mov
jne
pusha
hlt
rorb
sbb
pmuludq
add
jno
push
ret
push
sbb
lds
or
mov
adc
and
xchg
and
add
sbb
ja
add
add
push
mov
adc
or
mov
mov
xchg
and
repz
mov
xor
dec
mov
jo
sbb
or
loopne
cmpsb
loopne
xchg
daa
adc
stos
add
std
and
out
push
adc
adc
mov
push
push
add
clc
inc
cmp
lods
jbe
push
out
adc
adc
xor
inc
mov
dec
or
mov
mov
lock
add
clc
jne
pushf
add
sbb
mov
clc
add
rolb
dec
or
ficoml
add
movsb
es
push
sbb
pop
push
pusha
push
xor
test
push
mov
fwait
or
add
or
je
loopne
or
jge
gs
inc
loope
mov
rcr
jl
ds
pop
lret
mov
dec
and
push
and
and
insl
loop
sub
movsl
fsubr
xchg
pop
rcrb
data16
add
push
sbb
inc
les
imul
leave
insl
jg
xchg
dec
enter
mov
adc
sbbb
adc
push
sbb
roll
xchg
inc
imul
clc
sub
mov
sbb
jge
adc
inc
addl
push
and
mov
adc
xchg
cwtl
add
imul
test
xor
pop
and
jnp
loop
bswap
in
pop
je
pop
lds
and
adc
ficoms
jae
mov
mov
addr16
outsl
inc
or
fmuls
jmp
add
mov
jb
sub
or
or
xchg
sub
sub
dec
mov
jge
push
cmpl
pop
mov
add
scas
repz
pusha
movsl
push
mov
cli
cltd
out
das
aaa
mov
cmp
jbe
shll
adc
scas
inc
push
leave
push
xor
orb
xlat
xchg
cmp
imul
imul
mov
inc
mov
add
stos
mov
es
inc
lock
or
add
add
mov
dec
xchg
inc
and
sbb
xchg
adc
add
add
add
and
test
jne
and
dec
dec
stc
add
test
push
lahf
xchg
cli
test
lea
add
mov
jae
sub
cmp
push
cmp
push
pop
push
inc
ret
jmp
and
pop
add
xchg
mov
test
scas
ret
xchg
andb
lcall
push
xlat
or
frstor
add
test
loopne
inc
jne
fildl
fs
mov
pop
dec
sub
and
lock
or
nop
inc
leave
xchg
std
aaa
aas
shlb
add
inc
sub
mov
popaw
sbb
xchg
das
add
mov
andl
jnp
mov
andl
cmp
and
shrb
inc
mov
lcall
add
jnp
rcrb
ret
pop
aad
push
stos
call
loop
mov
ret
shlb
add
pop
aaa
loopne
sub
and
pusha
ss
dec
or
data16
and
cmc
pop
ret
add
or
rcll
aaa
pop
pushl
mov
adc
ret
xchg
pop
nop
add
imul
push
roll
push
push
pusha
adc
or
ss
mov
nop
nop
mov
cmp
push
subb
push
pop
loope
nop
push
inc
cmp
dec
inc
mov
add
push
cmp
test
xchg
mov
lea
mov
cmp
mov
mov
and
dec
arpl
or
ss
xchg
cmp
xchg
or
cmp
push
sub
cmp
add
shrb
add
lea
clc
mov
mov
mov
shr
inc
adc
out
pop
or
xlat
arpl
cmp
dec
stos
push
dec
lcall
xor
add
push
add
and
jae
das
sbb
sub
rorb
lods
push
xchg
loope
dec
add
inc
in
clc
scas
inc
mov
and
inc
mov
hlt
adc
fisttpll
fcoml
pop
les
cmp
enter
rcll
xchg
insb
pop
sbb
jbe
or
dec
fdivl
daa
add
mov
es
push
insb
sbb
adc
dec
subb
lods
insb
push
push
adc
ds
movsl
mov
jle
rep
jo
andl
mov
mov
push
xchg
push
xor
add
inc
xchg
sbb
andl
sbb
or
xor
sbb
jns
mov
xor
dec
dec
pop
enter
push
inc
sahf
ret
and
fistpl
push
jecxz
xchg
or
push
hlt
jp
sarl
sub
fisubl
mov
out
or
pusha
je
push
bnd
add
movsl
lret
jae
je
mov
add
out
or
and
mov
adc
shrl
mov
push
wrmsr
les
add
imul
ret
cmovg
mov
push
mov
hlt
adc
adc
pop
xorb
push
loop
jl
subl
mov
rcr
xchg
pop
inc
cmp
cld
mov
outsl
push
fsubr
pop
cld
sub
pop
roll
rolb
repz
scas
aas
inc
and
jbe
sub
lea
aam
or
push
in
add
punpckhbw
inc
inc
cmp
jb
push
and
movsl
dec
push
pop
leave
jo
cmp
sub
or
lds
leave
nop
popf
add
inc
sbb
cmp
out
mov
adc
pusha
or
sarb
jns
cmp
rolb
sbb
adc
mov
hlt
out
push
add
sub
jl
test
into
xchg
jg
mov
sahf
jg
scas
add
in
sub
mov
sbb
pop
mov
ret
push
push
out
push
cld
fists
sbb
shr
not
sbb
dec
dec
aam
push
mov
gs
imul
popa
jbe
push
es
xor
push
and
or
out
add
xchg
add
sub
imul
cmp
xchg
imul
repz
cmp
inc
inc
inc
cmc
xor
repz
dec
jl
int3
movl
inc
add
daa
dec
push
cmpsl
fiadds
dec
pop
movl
mov
inc
add
xchg
sub
jae
fwait
sub
inc
mov
lea
out
and
decl
jno
jne
jecxz
cmp
bound
bound
xchg
cmp
bound
rcrl
add
je
xchg
mov
push
das
pusha
sbb
xchg
movl
push
mov
pop
es
sub
xor
jbe
jmp
iret
inc
adc
adc
fs
daa
or
xchg
lods
fs
jge
jo
push
adc
push
xlat
or
sbb
mov
gs
sub
in
ret
push
ds
cmp
test
add
enter
bound
js
sbb
rcll
and
lret
shll
jg
jl
cmp
push
mov
dec
movsb
push
mov
push
cmp
cmpsb
rclb
add
dec
and
aam
idivb
dec
sub
or
sbb
push
mov
jp
xchg
sbb
xor
jge
fldl
sub
xor
pop
divl
mov
cmp
mov
icebp
pop
push
sti
rep
or
fnstsw
sub
or
sbb
lea
mov
cmp
and
dec
sub
sbb
data16
loope
arpl
mov
push
sbb
adc
pop
push
shrb
lea
push
push
mov
jae
cmpsb
xlat
push
and
push
mov
xchg
mov
loopne
adc
inc
sub
inc
aaa
sbb
icebp
adc
push
das
adc
sub
inc
pop
adc
adcl
aas
mov
mov
imulb
rol
addb
loop
movsb
js
mov
pop
arpl
push
sub
sbb
sub
test
ret
inc
xchg
into
or
cltd
jle
repnz
mov
mov
push
iret
test
jecxz
sub
mov
aam
jae
cmp
mov
push
push
push
or
push
jns
sbb
imul
ljmp
sbb
push
add
sbbl
mov
hlt
lock
out
sbb
push
mov
push
dec
push
push
push
addr16
mov
mov
or
inc
std
jo
cmp
in
adc
in
dec
or
dec
push
push
scas
ret
mov
ja
xor
xlat
mov
lds
push
lret
mov
cmp
out
mov
icebp
roll
imul
dec
sbb
inc
push
add
dec
and
sarb
xchg
mov
mov
jne
nop
loopne
mov
pop
sbb
sbb
push
imul
fldenv
inc
addr16
cmp
dec
xchg
adc
jo
inc
cmp
mov
jne
jnp
ret
xchg
push
sbb
cld
sub
mov
inc
clc
adc
mov
adc
add
fadds
popa
fisubrs
cmp
and
adcb
pop
add
mov
mov
in
pusha
or
pop
or
ret
push
dec
xor
mov
and
repz
inc
clc
test
cmp
mov
sub
subb
ss
adc
xor
je
dec
rorb
nop
outsl
inc
adc
push
sub
sar
emms
add
lcall
sbbb
jp
cmp
fwait
loopne
dec
sbbb
xor
ret
hlt
and
sub
pusha
xor
cmp
jbe
dec
jb
xor
pop
sbb
scas
jo
or
ja
cmp
jnp
ret
sub
sub
cmp
rcll
mov
mov
out
test
push
dec
mov
xchg
or
call
cmp
cmp
xor
loope
add
adc
push
jmp
add
fisubl
cmp
fistpl
icebp
xchg
mov
fiadds
test
push
dec
pop
jl
je
push
mov
add
cmc
shl
mov
dec
xchg
test
aaa
push
mov
cmpl
rcrl
les
dec
jbe
pop
icebp
ja
inc
lea
pushf
sbb
push
or
add
lock
lock
pop
dec
jmp
inc
mov
pop
enter
add
adc
jg
inc
jmp
dec
ss
mov
sbb
dec
add
jne
sub
outsb
sub
outsb
sar
pop
xor
cltd
mov
pop
cmp
rclb
sub
cmp
jb
jae
push
push
push
or
repz
jmp
dec
hlt
jae
xchg
and
jae
jne
outsb
lret
add
shll
adc
icebp
xor
fistpl
push
adcb
add
es
mov
pop
cmp
clc
sub
sub
stos
rclb
inc
and
ds
sbb
add
dec
jnp
insl
push
xorb
cmp
movsb
aam
cmp
add
nop
sbb
aaa
cmp
test
jno
adc
nop
dec
push
sbb
sbb
sub
dec
subl
ja
adc
xlat
xor
out
daa
or
ja
mov
cmp
add
test
adc
add
enter
lahf
arpl
adc
and
or
adc
lods
dec
es
adc
and
lahf
arpl
dec
mov
pop
adc
and
adc
xchg
lret
add
addb
js
and
dec
repz
or
je
mov
jo
push
ljmp
rcr
cmpsl
jne
mov
lods
out
mov
cmp
or
dec
pop
ret
ret
fwait
add
adc
or
lock
and
test
sub
cltd
aaa
ss
mull
add
stos
pushl
xor
push
dec
adc
out
and
push
and
xchg
mov
outsb
loopne
xchg
or
and
and
nop
sub
adc
sub
nop
sub
nop
es
sub
nop
sub
pusha
daa
nop
sub
nop
sub
mov
sub
cs
pop
push
in
int3
or
jmp
cmp
cmpsb
movsb
in
pop
test
cmp
inc
jl
sub
add
pop
jne
cmp
pop
mov
mov
movsl
lods
sbb
movl
sbb
and
or
in
push
adc
add
ja
in
std
jbe
or
call
or
sbb
adc
sbb
xchg
or
lock
mov
pop
mov
ret
cmpb
rolb
data16
inc
mov
dec
cmp
fdivs
pop
test
jge
test
xlat
sub
or
rcr
pop
sub
add
xor
shlb
adcb
lds
xchg
sarl
or
mov
in
loop
fimuls
enter
aas
fsubrl
loopne
fdivp
xor
in
aam
or
data16
mov
add
jge
push
push
cmp
jo
pop
addb
xchg
add
mov
adc
incb
gs
add
mov
test
or
cmp
jno
sbb
or
cmp
sbb
jno
jg
or
sbb
mov
pop
dec
inc
adc
inc
fsub
pusha
push
lret
aad
lret
mov
jg
out
jne
movsb
aaa
mov
pop
lock
sahf
movsl
adcl
sarb
mov
jne
xlat
ret
bound
jne
ficompl
mov
mov
cmp
mov
and
push
dec
popa
mov
lock
mov
sarl
ja
adc
ds
jmp
push
mov
add
xor
lcall
lcall
push
inc
and
cmp
jle
ja
or
or
push
sub
add
mov
dec
ret
addb
jbe
or
jecxz
jne
bnd
jmp
cmp
movsb
rcrl
pop
fstpl
in
jmp
add
mov
xor
mov
addr16
dec
xor
jb
jmp
pop
or
jmp
or
or
or
int
pop
mov
adc
dec
js
mov
test
addb
sbb
xchg
inc
stc
push
enter
dec
adc
lods
inc
popa
shrl
jecxz
mov
inc
jne
dec
cmp
mov
cwtl
orl
sub
fldl
xchg
je
in
mov
shll
movsb
leave
rorb
mov
sub
sbb
stc
insb
adc
arpl
jnp
or
push
mov
or
cmp
js
roll
sbb
mov
and
pusha
inc
or
jo
insl
or
fisttpl
push
cmp
and
rorb
loopne
jmp
les
or
data16
es
mov
xchg
or
lods
dec
mov
call
lock
inc
push
es
inc
rcr
add
or
push
rcll
push
mov
addb
pop
imul
xor
cwtl
jmp
and
mov
test
jmp
loope
loope
roll
or
out
es
inc
jns
mov
sbb
pop
inc
rol
and
out
stos
mov
pop
fdivr
aam
add
fcoms
mov
stos
pusha
mov
pop
clc
jmp
mov
xchg
mov
mov
insb
sub
inc
sub
jbe
es
loope
or
mov
inc
xchg
push
dec
or
push
pusha
pop
xor
cmp
jl
mov
adc
mov
pop
xor
sub
test
jbe
jmp
js
add
pushf
jae
dec
movsl
sbb
push
pop
pop
add
loope
clc
rolb
mov
mov
sbb
out
and
pop
loopne
scas
stos
sti
or
push
outsl
xchg
fnsave
sub
pop
pop
loopne
test
or
loope
pop
mov
lods
inc
inc
sub
add
jge
add
and
in
pop
add
pop
or
dec
loope
std
repz
leave
rclb
xor
or
mov
xor
sub
add
pop
xor
lea
loop
or
cwtl
jge
or
andl
inc
adc
mov
inc
sbb
push
insl
mov
jl
mov
inc
inc
scas
add
jb
xchg
ljmp
aas
and
push
or
es
push
loopne
rorb
jp
sub
inc
clc
adcb
pushf
clc
xchg
or
lcall
dec
ds
out
in
xchg
mov
mov
push
sub
pop
and
mov
incl
andl
dec
jp
bound
pusha
lods
or
adc
mov
pushl
pop
or
lock
inc
push
mov
daa
nop
loopne
jmp
sbb
xor
or
xor
js
ror
daa
loopne
sub
and
and
js
xor
pop
push
test
cmp
jl
xor
gs
inc
dec
call
fmuls
dec
and
add
push
lcall
inc
mov
movsl
push
loope
mov
loope
add
lods
pop
dec
jae
jb
inc
into
test
incb
mov
pop
shrb
cmp
bound
or
and
and
dec
shlb
mov
movsb
jmp
fadds
out
or
or
cs
and
and
test
push
pusha
sub
sbb
pusha
xchg
xor
rolb
rorb
lock
xor
mulps
stos
mov
xor
scas
setl
cs
or
addr16
inc
arpl
mov
shl
push
xchg
sub
xchg
cmp
xchg
js
mov
xchg
jmp
xor
jbe
fmuls
int
out
jmp
rorb
dec
loopne
loopne
sbb
outsl
push
stc
push
popw
inc
push
xchg
aas
fdivl
jne
xchg
and
inc
cmpsb
cltd
scas
subl
es
or
add
adc
push
jl
arpl
sbb
add
add
sbb
js
add
xchg
mov
push
push
inc
push
sbb
lahf
xchg
pop
add
xchg
daa
imul
lds
shll
loope
mov
or
jbe
and
inc
shlb
push
lahf
pop
mov
nop
mov
add
push
cmp
orl
cmp
clc
dec
sub
fcmovb
cmp
inc
mov
sbb
mov
lea
es
sbb
je
loopne
dec
insb
jmp
cmpl
pushf
push
addl
xchg
enter
inc
or
push
sub
push
adc
jnp
movsl
sub
inc
add
lods
pusha
test
or
push
clc
mov
lea
cmp
aam
push
sbb
inc
cwtl
jne
jne
or
popa
sbb
jp
adc
dec
cmpsb
xchg
or
in
int
rclb
push
push
mov
js
cs
cs
inc
add
push
insb
and
dec
cmp
xor
mov
add
add
aas
cs
push
or
fcomps
js
and
adc
cltd
fisubrl
xlat
pop
push
fsubrl
or
pop
xor
mov
popa
bound
ss
call
test
mov
movb
xchg
hlt
xchg
cmp
loope
mov
fmuls
and
and
data16
insl
sbb
jle
xor
mov
xchg
ljmp
push
add
repnz
xchg
push
add
pop
js
xchg
in
int3
imul
mov
in
inc
or
dec
in
add
jecxz
sub
pop
push
sub
and
mov
call
into
sbb
adc
arpl
les
test
adc
lods
mov
pop
cmp
ljmp
pop
lret
ret
aaa
mov
int3
dec
sub
xor
hlt
ret
enter
push
shlb
rcl
inc
or
arpl
fwait
or
shr
or
pop
fsubrl
add
add
mov
push
inc
mov
lcall
or
push
mov
fiaddl
push
mov
sti
inc
adc
je
adc
je
sub
rcrl
call
ret
push
dec
fidivrl
test
stc
cmp
mov
nop
xchg
rorl
in
pushf
cmpsl
mov
or
popf
dec
sub
mov
sub
cmp
call
out
mov
mov
adc
fdivrl
sub
mov
test
loope
push
dec
and
sbbb
inc
nop
cmpsl
inc
inc
loopne
dec
jp
movsb
rclb
xor
dec
js
test
and
repnz
jmp
in
add
cmpb
fildl
mov
mov
jmp
cmp
add
jle
aaa
je
testl
jne
js
sahf
sti
mov
mov
dec
rorl
jp
dec
mov
push
mov
and
ljmp
movsb
outsl
push
test
xchg
mov
mov
imul
mov
dec
hlt
movsb
lock
jge
sbb
fwait
int
mov
add
lahf
sbbl
div
cmp
and
sbb
xchg
sti
and
lret
out
out
add
into
cld
fwait
mov
adc
inc
loopne
js
in
or
rdtsc
loop
or
daa
adc
insl
test
mov
xchg
add
and
mov
sub
clc
popf
jnp
jns
lods
mov
cmp
add
popf
pop
push
sub
inc
jbe
mov
sbbb
fadd
orl
ret
push
test
fisttps
roll
shlb
add
loop
mov
je
xlat
mov
repz
push
mov
fildl
addr16
dec
inc
je
shrl
mov
add
push
movsl
jmp
std
and
mov
shlb
jp
cwtl
sub
lock
loop
andl
xchg
pusha
sbb
push
push
cli
in
stos
cmp
push
mov
stos
adc
mov
out
sbb
dec
lock
mov
es
add
mov
add
ret
movsb
popa
fsub
add
stos
mov
sbb
dec
lea
cld
nop
pop
dec
xchg
or
mov
add
jnp
xchg
push
out
cmp
sub
mov
cmp
loop
add
mov
cmp
mov
pushl
adc
shrb
adc
jl
pop
test
push
xor
push
insl
loop
inc
das
pop
stos
pop
pop
dec
dec
mov
inc
xor
adc
out
lock
xchg
or
jo
bound
inc
mov
xchg
xchg
add
psraw
xorb
xor
pop
call
int3
xchg
ljmp
fsts
pop
popa
and
pop
sub
jnp
xchg
or
in
cmp
xchg
cmpb
call
push
mov
push
inc
push
stos
add
imul
cmpl
adc
lret
add
ljmp
adc
jmp
outsb
add
add
in
push
mov
add
push
push
lret
add
mov
add
xchg
add
enter
rcrb
paddw
shlb
or
cmpb
cmp
js
or
in
iret
pop
adc
mov
push
push
jmp
outsb
lock
xchg
xor
dec
loopne
inc
adc
xchg
inc
sub
andl
movsb
inc
and
inc
mov
faddl
out
cltd
in
mov
aas
dec
inc
in
jp
hlt
push
js
mov
jo
mov
xchg
xor
push
ss
lods
inc
loopne
adc
cmp
or
clc
sub
cs
std
pop
cmp
je
inc
fsubrl
sub
andl
jmp
ds
je
ljmp
in
or
ret
jg
outsb
adc
in
cmp
or
outsb
add
push
jge
notl
push
jle
xchg
ja
jb
push
or
jp
outsb
push
or
bound
fstl
xor
inc
push
loop
sub
jb
xor
sub
jge
cmpsb
dec
cmp
popf
cmpsl
mov
mov
shlb
pop
orl
or
xor
fidivrs
inc
jmp
inc
jo
add
inc
sahf
cli
addr16
and
add
add
jne
xor
and
iret
add
and
sub
data16
push
cs
ja
movsb
pushf
or
xor
out
lret
jmp
pop
cmpsb
ljmp
and
add
nop
inc
xor
les
xchg
shlb
adc
sbb
insb
bsr
cli
aas
mov
and
hlt
xor
jo
pushf
push
mov
pop
test
inc
rcrb
fcoml
cmc
mov
leave
adcb
add
repnz
fdivl
fnstenv
jl
loop
aam
sub
sub
mov
repnz
add
loopne
fsubrs
shlb
rolb
xor
xchg
enter
subb
push
jns
cmp
push
in
pop
mov
mov
sbb
jecxz
adcb
and
ficoml
sbb
std
rclb
push
les
fmul
andl
push
repnz
test
aad
jnp
jno
lea
jne
jmp
xor
or
adc
pop
aad
mull
xor
rcll
add
lods
into
shlb
je
int3
add
add
mov
add
pop
stos
jl
outsl
cld
sbbl
icebp
sbb
sbb
sub
hlt
test
dec
push
cwtl
sub
xor
mov
add
jp
xor
inc
pop
mov
outsl
mov
mov
dec
test
pop
gs
test
pusha
jb
mov
xor
and
test
rolb
cltd
push
cmpb
dec
mov
es
insb
mov
loopne
add
inc
loopne
xchg
dec
aad
lock
popf
xchg
xor
push
mov
and
pop
add
lahf
mov
mov
mov
jns
mov
pop
cltd
stos
add
push
cmpsl
fcmovnbe
or
cmp
cmpsb
aas
mov
test
movsb
rcll
mov
mov
push
nop
sbb
shll
mov
push
ret
ss
cmp
daa
lods
jbe
jo
push
and
ds
add
mov
into
inc
dec
mov
daa
dec
push
out
int3
std
test
xor
test
inc
gs
pop
cmp
das
das
outsl
mov
shrb
cmpsl
add
aas
popa
adc
sub
mov
testl
or
xlat
fiadds
jmp
mov
xor
shll
movsl
pusha
movsl
inc
jecxz
push
xor
jp
add
sub
push
xlat
and
lds
inc
dec
xchg
dec
arpl
dec
sub
les
fdivs
pop
ficompl
pop
outsl
mov
xlat
rdtsc
or
out
mov
call
popf
sbb
rolb
js
ret
inc
cmp
sarl
lea
mov
imulb
mov
xor
loop
mov
xor
shr
xchg
push
movsl
test
cmp
adc
mov
pop
js
fs
inc
mov
test
decl
outsb
pop
cmp
call
add
aaa
jmp
add
fisubs
pop
sbb
sbb
jbe
outsb
adc
and
dec
loopne
inc
inc
xchg
data16
adc
mov
or
rolb
fsts
stos
or
movsl
aam
insl
and
jl
leave
movups
add
xor
sub
adc
fmulp
popf
dec
loope
inc
and
icebp
in
mov
adc
subb
imul
sub
or
pop
cld
gs
and
xlat
add
add
pop
add
dec
dec
rolb
enter
cli
push
stos
loop
scas
jp
and
xchg
fsubp
fstp
push
pop
or
and
aam
inc
push
movsl
sbb
mov
fadds
sub
pop
mov
rcll
arpl
adc
sbb
or
xchg
adc
adc
test
arpl
dec
xchg
sub
rorl
std
cwtl
jg
inc
or
xor
cli
pushf
sarb
jge
stos
lock
subl
enter
pop
mov
shl
fs
push
add
sbb
fwait
jno
sbb
push
mov
repnz
fldcw
push
adcl
je
mov
xchg
in
loop
pop
and
cmpl
xchg
jno
hlt
scas
and
dec
cmp
in
mov
jmp
sub
popf
xchg
ss
in
je
outsb
popa
xor
int3
inc
adc
ds
cmp
fistpll
sub
movsb
pusha
hlt
add
sub
outsl
call
pusha
repnz
pop
cmp
dec
sub
adc
scas
xchg
hlt
xchg
test
imul
mul
push
push
add
fstl
lock
xchg
insl
flds
and
jne
xchg
xchg
or
lahf
xor
movsb
fildl
roll
incb
aam
xor
sub
aas
dec
lret
je
and
pushl
outsb
inc
jne
jo
and
in
push
into
or
jle
xor
imul
or
and
push
femms
dec
pop
enter
and
popa
mov
or
adc
jmp
rclb
dec
lods
outsl
insl
aam
pusha
pop
push
jp
adc
push
or
cmp
mov
push
adc
test
lret
mov
dec
push
fstps
push
lods
repz
push
pop
out
aam
les
pop
inc
adc
iret
out
push
xor
movsb
testb
xchg
lret
xorl
and
push
je
pop
dec
jb
imul
arpl
enter
test
lret
enter
inc
mov
sub
fistpll
nop
enter
push
inc
add
pop
int3
mov
and
inc
fsubr
mov
pop
in
inc
mov
xchg
cmp
sbb
fucom
jmp
pop
adc
push
push
adc
les
loopne
loopne
nop
dec
pop
fdivrl
pop
mov
add
add
setle
fcomps
push
push
xor
jle
jp
xchg
in
sub
cmp
cli
fiadds
push
push
pop
aas
rep
jo
inc
pop
aad
cmp
xor
lock
ret
cmovno
inc
gs
mov
loopnew
popf
sar
mov
mov
out
and
add
sar
arpl
xchg
hlt
lock
fsubl
mov
fs
orl
adc
jp
ret
pop
xchg
dec
pop
dec
test
or
and
repz
fs
jmp
mov
or
rcll
xchg
dec
add
ja
add
xchg
jecxz
std
into
idivb
mov
or
push
popa
dec
jb,pt
cmc
pop
and
jge
popa
cmp
mov
push
or
push
add
sahf
inc
insl
pop
xor
fldcw
xor
adc
inc
sbb
jne
inc
out
sbb
and
outsb
aaa
jle
push
add
lds
xchg
clc
push
pop
jmp
insl
ja
sbb
add
pop
lret
push
ss
inc
orb
add
mov
test
test
mov
enter
stc
mov
js
push
shrb
lock
movsb
repz
repz
xor
mov
mov
cmp
int3
rcl
cmp
xor
dec
fdivrl
add
fidivrl
mov
shrl
cwtl
pop
mov
push
cmp
or
jns
jp
rolb
andb
mov
or
testb
cli
sbb
mov
cmp
jbe
subb
cmpsl
mov
add
mov
test
xor
and
cmp
jne
add
iret
cmpsb
cwtl
orl
test
push
jl
rolb
enter
or
leave
test
adc
jb
pop
sub
mov
les
add
adc
pop
loopne
cs
into
adc
js
mov
adc
ret
in
push
mov
in
cwtl
inc
dec
roll
xchg
mov
cmp
sbb
loop
std
xchg
and
push
mov
repz
movsl
sarb
cmp
mov
cmp
sub
adc
dec
arpl
cmp
jb
les
push
jo
orb
jmp
xor
lods
insl
bound
mov
testl
inc
stos
push
fucom
push
xchg
jo
pop
sub
mov
or
sub
popa
loopne
jbe
adc
sub
imul
outsb
je
andl
jnp
inc
lods
into
lcall
lret
bound
mov
or
add
out
or
mov
orb
cwtl
js
push
push
add
aam
pushf
push
test
and
lods
cmp
and
insb
lds
jo
and
or
hlt
pop
inc
push
loopne
and
or
sbb
inc
sbb
stos
sarb
mov
decb
adc
mov
xor
mov
push
in
insl
jmp
mov
out
test
outsl
sarl
xor
dec
test
xor
int3
rol
pop
mov
and
inc
sub
xlat
arpl
inc
dec
ja
pop
jno
shrl
push
loop
bound
xor
lods
in
or
or
add
xorl
adc
push
mov
xchg
sub
sbb
mov
fmull
das
mov
xor
pop
mov
lret
push
imul
jecxz
adc
cli
cmpsb
rcrl
jns
inc
ret
jbe
inc
xchg
mov
push
xchg
mov
pop
mov
inc
or
push
pop
in
fistl
xchg
jmp
pop
andl
sbb
int3
adc
sbb
xor
or
push
jle
inc
je
popf
pop
mov
ret
es
or
mov
push
and
pop
in
mov
cmp
sub
cmpb
adc
xor
pop
pop
ja
leave
jne
adc
cli
mov
dec
xor
mov
subl
adcl
xchg
inc
sub
ja
gs
ret
ret
daa
loopne
outsl
jl
orb
sarb
push
mov
out
mov
xchg
push
aad
add
xchg
stc
test
mov
push
jno
test
int3
or
inc
adc
sbb
fwait
jp
fdivs
jne
mov
jmp
xchg
and
jmp
shrl
add
popa
add
jl
cmc
lock
test
xor
mov
icebp
sbb
das
or
movsl
push
push
movsl
add
sti
aaa
mov
inc
hlt
fstl
mov
loopne
ljmp
sbb
inc
clc
pop
fsubr
pop
faddp
andl
test
fstpl
daa
dec
sub
add
or
into
test
cs
jne
mov
sub
xchg
lods
loopne
xchg
mov
ret
dec
or
test
and
xchg
inc
xor
jp
fmulp
ficoms
mov
mov
mov
cwtl
imul
addb
xor
mov
sub
sub
push
mov
pop
fisttps
or
rolb
setnp
add
adc
pop
clc
mov
add
inc
or
es
orb
call
movsb
or
mov
cmp
dec
mov
int3
dec
add
negb
mov
lock
push
add
sub
pop
addb
jne
pop
addr16
ja
sub
pop
add
adc
push
sub
add
jmp
mov
cmp
jge
pop
pop
xchg
adc
roll
mov
xor
sub
loope
add
push
andl
pusha
lds
pop
imull
xchg
add
lea
popf
cmp
add
xchg
inc
add
mov
test
icebp
sub
pop
add
cmp
add
adc
xor
dec
test
pop
filds
mov
shrl
into
inc
add
movl
sub
repnz
mov
or
fmuls
pop
push
dec
or
dec
jecxz
and
mov
xchg
enter
sahf
ss
mov
adc
inc
das
aaa
mov
js
push
inc
in
or
jmp
xor
adc
jl
cmp
mov
adcl
decl
inc
adc
jecxz
jecxz
adc
mov
addr16
inc
jecxz
xchg
mov
inc
es
cld
jno
ljmp
or
lsl
sbb
mov
dec
aad
sbb
aad
inc
pop
enter
add
mov
jecxz
push
add
movsl
pop
mov
sub
popf
cmp
jmp
testb
std
xchg
addr16
aaa
outsb
add
lret
push
xor
xchg
icebp
dec
inc
inc
pop
int3
fwait
and
loop
cmp
stos
xor
and
fisttpl
push
inc
inc
fcoms
js
lahf
shrb
jb
or
sbb
and
add
imul
insl
push
xchg
inc
inc
mov
or
mov
dec
mov
daa
popl
xor
mov
outsl
cmp
lds
dec
dec
cwtl
xchg
xorl
pushf
ret
jmp
mov
push
les
roll
sub
call
and
shrb
sbb
sti
cmpsl
inc
movb
push
add
ret
adc
xor
inc
loop
xor
mov
pop
fnsave
push
jb
push
or
sub
and
das
int
cmp
cmp
mov
sbb
jo
mov
pop
sbb
inc
xchg
and
dec
sbb
in
cld
divb
cmp
xlat
bound
repz
rolb
pop
sub
data16
movsl
test
ds
jp
aad
lcall
add
and
int
jne
mov
mov
push
js
stos
enter
loop
in
out
adc
push
in
pop
or
push
sbb
jnp
dec
push
in
and
xchg
jns
pop
in
or
lods
sub
jecxz
mov
movl
dec
jb
and
orl
imul
leave
and
ret
inc
inc
mov
jp
test
lods
jmp
sahf
pop
dec
mov
sub
out
cmp
mov
add
add
bound
and
inc
add
cmp
movsb
push
adc
add
xor
or
add
clc
dec
imul
popa
test
mov
repz
dec
jbe
pop
sbb
aad
faddl
cmp
xor
inc
mov
mov
icebp
push
or
out
or
push
dec
dec
outsb
pop
xchg
xchg
push
add
sbb
arpl
cli
aam
and
in
cmp
fldcw
sub
and
sub
jle
aam
dec
or
rorl
pop
xlat
xor
loopne
shll
sub
mov
hlt
or
call
adc
data16
add
and
orl
adc
test
pop
cmpl
fisubl
mov
sbb
int3
mov
out
jbe
jne
xor
xor
mov
stos
xor
push
pavgb
fcomps
and
sbb
and
sbb
cmp
inc
fsubs
add
cmpsb
mov
jmp
xor
pop
inc
add
mov
mov
adc
test
sahf
dec
popa
mov
add
cmpsb
je
push
xor
test
cmc
andb
fdivl
dec
lea
pop
je
jo
popa
mov
pop
popfw
or
xor
cmp
dec
rorl
pop
jne
mov
fiadds
iret
sub
xchg
addl
push
pop
push
and
xchg
push
push
cmpsl
inc
mulb
ds
dec
sarb
adcl
jp
push
pusha
gs
jne
pop
insb
arpl
pushf
sub
in
mov
push
in
lock
or
ret
push
push
push
and
sbb
ret
adc
inc
dec
push
into
lock
inc
incb
pusha
das
inc
mov
xchg
mov
jo
jo
adc
add
push
cmpxchg
pop
add
jnp
add
inc
sahf
fwait
in
mov
sbb
lock
stc
rolb
or
and
test
fisubs
adc
push
mov
loopne
mov
cld
lahf
loop
mov
lret
mov
cmpsb
jle
in
roll
fcoms
pop
fsubrs
aam
scas
imul
jo
dec
cmp
leave
adc
mov
arpl
mov
loopne
cmp
mov
or
and
fmuls
xchg
xchg
xor
dec
or
aaa
sbb
push
mov
or
fistps
xchg
cmp
jne
lcall
xorl
or
lret
xor
dec
mov
sahf
push
out
and
sub
bound
cwtl
xor
add
std
leave
inc
test
pop
fnstenv
test
and
enterw
sbb
ss
cmp
mov
mov
clc
jl
or
int
xor
sbb
sarb
dec
sbb
loopne
rcl
lock
dec
leave
sbb
in
push
inc
dec
cmp
xor
sbb
add
add
push
les
add
xchg
cmp
add
jo
or
sti
sbb
or
pop
jmp
xchg
movsl
mov
sarb
or
or
mov
pop
add
mov
sbb
sar
stos
cmp
stc
cmp
xchg
pop
push
sbb
pop
push
push
stos
sahf
pushf
push
sub
bound
je
movsl
lret
push
ss
dec
ficoms
addb
inc
add
or
dec
adc
idivl
or
mov
loop
lahf
rcrl
add
or
dec
adc
pop
sbb
clc
stos
fs
add
push
hlt
jge
inc
adcl
sub
xchg
cmp
rolb
mov
pop
or
xor
sbb
jns
push
cmp
inc
cwtl
popa
out
fisubrs
rcr
mov
and
outsl
dec
in
in
loopne
fwait
cmc
inc
cmp
add
shl
ret
ret
mov
test
pop
or
mov
jae
mov
loopne
sbb
mov
fs
xchg
nop
mov
aad
cmp
pop
mov
lret
in
push
cmp
ret
aad
pusha
insb
imul
sub
dec
mov
sbb
rolb
push
add
std
inc
sbb
xor
mov
push
sbb
inc
fwait
icebp
mov
fsubr
xor
jl
adc
or
jmp
das
shlb
orl
xor
pusha
or
outsb
add
xchg
je
sub
pusha
test
jnp
add
sbb
mov
and
mov
lods
cs
push
xor
movsb
dec
iret
jae
cmp
push
inc
xor
adcb
in
shlb
aas
sti
inc
or
orb
push
cltd
pop
add
aad
pop
push
lret
inc
nop
push
push
cmpsb
into
inc
jne
adc
dec
test
lret
mov
xchg
add
sbb
inc
test
fsubs
dec
or
fs
fistpll
inc
inc
test
push
subb
sub
push
cmp
inc
inc
cmp
sbb
pop
pop
mov
popf
fs
mov
xor
lret
mov
adc
mov
inc
add
in
out
fnstenv
fidivs
out
add
and
sbb
add
nopl
lea
std
xchg
test
mov
lret
sub
push
ljmp
add
lret
outsb
cmp
add
ficomps
cmp
inc
inc
dec
push
dec
loopne
leave
in
sub
push
push
or
iret
icebp
repz
cmp
xchg
shlb
mov
and
add
or
xchg
push
mov
lea
dec
add
cld
mov
fs
mov
cmp
out
or
xchg
rorl
push
mov
sbb
mov
dec
push
push
jnp
xchg
cmc
and
pop
add
sbb
and
aas
xorb
aas
cli
jmp
push
xor
lods
push
rcrb
xchg
or
scas
cmp
mov
cmp
and
push
pop
or
in
xor
std
sub
push
in
xor
or
cmp
xchg
and
jo
ret
cwtl
sahf
popf
sbb
sbbl
and
or
or
lret
orl
dec
mov
add
dec
jb
sub
and
and
add
sbb
iret
xor
add
jge
fwait
imul
test
pop
ja
ss
sub
jecxz
enter
outsl
inc
jae
push
daa
loope
cmpsl
push
inc
lods
sub
jo
cltd
aaa
adcl
inc
jle
and
sbb
inc
mov
sub
xchg
nop
cmp
inc
xlat
adc
adc
or
jp
rorb
push
dec
and
pop
and
jnp
xor
pop
cmp
push
inc
insb
call
mov
arpl
push
dec
add
pop
jbe
mov
sbb
aaa
inc
sbb
repz
pop
in
xor
fcoml
sub
inc
push
sbb
dec
sub
or
inc
sbb
xchg
pop
rolb
push
cltd
lea
adc
ret
fsts
jns
je
sub
or
or
dec
pop
js
and
pop
cmp
jl
xor
lret
into
xor
or
dec
dec
pop
inc
cmp
inc
cmp
mov
test
xor
jo
sub
cmpb
es
into
jl
arpl
in
ja
insb
push
pop
enterw
rorb
sbb
push
cmpsb
dec
mov
and
mov
in
sub
mov
cmp
jecxz
fiadds
jl
gs
loopne
jmp
or
xor
xor
aam
mov
loope
testb
or
jns
pop
imulb
rcrl
push
push
sbb
jb
loope
xchg
je
sub
dec
int
stos
xor
in
mov
outsl
lock
jne
pop
notl
stos
les
mov
or
dec
push
jge
lret
pop
lds
lea
sub
cs
mov
pop
sub
xor
mov
inc
hlt
push
mov
es
sbb
outsl
jno
push
push
add
or
stc
sahf
or
mov
pop
es
pop
and
nop
xor
xchg
js
add
shlb
push
ss
icebp
push
or
mov
outsl
test
or
add
punpckhbw
mov
stos
or
push
clc
and
and
xor
push
arpl
push
mov
test
adc
aad
xor
cmp
subl
and
movb
adc
test
mov
mov
lock
and
inc
add
adc
mov
nop
adc
daa
xor
mov
andb
mov
fcomps
data16
cmpl
sbbl
fdivl
cmpsl
xor
insl
popa
xchg
cwtl
or
jecxz
adc
loopne
rolb
adc
leave
push
sbb
pop
data16
xor
data16
adc
or
inc
xor
push
cmp
and
data16
aam
test
jne
push
mov
jmp
mov
test
mov
ja
stos
movsl
inc
mov
mov
cli
movsl
adc
push
cmp
int3
mov
lea
mov
adc
push
pusha
or
xchg
cmc
adc
pushf
dec
lea
rolb
and
sarl
ss
pop
fdiv
je
rolb
mov
fimull
lock
add
sbb
mov
insl
fdivs
jmp
adc
cmpb
jne
push
jmp
cmp
xchg
movsl
xchg
or
mov
push
and
bound
jp
insl
cmp
xchg
adc
adc
nop
inc
fisubs
test
inc
in
inc
xchg
inc
and
in
mov
and
test
inc
xchg
add
add
stos
mov
mov
scas
inc
cmc
adc
or
or
fdivrl
sbb
mov
mov
adc
les
lcall
jge
sub
jge
adcb
or
inc
insl
inc
mov
adcb
jmp
shlb
fiaddl
mov
mov
add
mov
cmp
mov
add
jecxz
dec
int
scas
add
jne
add
jne
pop
sub
or
sbb
lcall
or
and
add
subb
xor
test
or
xchg
adc
inc
test
mov
pop
mov
pop
adc
lea
ficoms
pop
mov
mov
adc
sarb
adc
sub
dec
ret
mov
adc
push
fiadds
adcl
and
dec
dec
daa
push
jp
mov
mov
xchg
rcrb
mov
mov
jb
pop
sbb
mov
inc
or
pop
mov
inc
mov
cs
xchg
push
mov
push
hlt
and
xchg
push
and
mov
push
addb
jl
or
sbb
out
rorb
jge
loopne
or
fwait
mov
adc
inc
fcomps
dec
sub
loopne
push
push
fistpll
inc
or
loop
in
mov
sti
add
jae
add
insl
in
es
and
mov
or
xchg
jmp
mov
enter
adc
loope
xchg
mov
and
addl
test
jnp
loopne
imul
dec
or
sbb
daa
or
mov
mov
add
into
xchg
jmp
fldl2t
adc
cltd
add
cmp
add
push
or
ds
sub
push
fldenv
es
push
push
in
out
add
and
add
jns
adc
inc
bound
jg
cmpl
popf
rolb
push
pop
adc
pop
or
pop
add
ds
movl
push
mov
fwait
dec
inc
popa
ret
cmpl
lahf
add
push
es
leave
repz
insb
mov
mov
fnstsw
cmpsb
icebp
adc
inc
mov
push
loop
jmp
inc
lahf
mov
incl
movsl
jno
js
cmp
jl
push
push
push
jp
or
repnz
add
jg
test
mov
mov
jbe
push
hlt
stos
cli
lea
loopne
add
imul
insl
mov
loope
xchg
mov
mov
and
pop
xor
inc
loop
xor
xchg
pop
fs
filds
mov
push
add
insl
sub
mov
aas
xchg
inc
jle
mov
lahf
push
repnz
scas
shlb
jae
sub
test
or
push
aaa
into
or
push
in
xlat
popf
fs
insb
jb
sub
pop
push
cltd
movsb
jb
jo
jl
adc
dec
orb
push
sbb
test
fs
shlb
and
aad
inc
sbb
dec
sub
gs
test
and
sbb
inc
xchg
pop
mov
imul
mov
cmp
and
adc
je
pop
aas
add
inc
insl
adc
mov
and
jbe
insl
movsb
call
xor
add
lcall
jge
or
daa
imul
movsb
xchg
fdivr
mov
add
test
dec
jecxz
push
sbb
sbb
lea
jmp
lock
inc
add
mov
inc
xchg
bound
and
xchg
pop
xor
cwtl
jb
iret
and
arpl
test
mov
iret
push
adc
clc
loopne
dec
fsubs
mov
test
lret
notl
inc
xor
dec
pop
push
inc
rorb
push
or
add
add
aas
pusha
loopne
jae
push
push
xor
or
add
add
jb
adc
repnz
aaa
jo
adc
or
out
mov
mov
pop
inc
add
adc
dec
inc
cmc
dec
or
js
or
push
dec
push
cli
sbb
in
ss
adc
xor
loopne
sbb
mov
or
std
jo
sbb
add
shlb
push
mov
test
sbb
push
test
mov
push
add
add
and
mov
rcr
and
call
pop
orl
pusha
inc
add
cwtl
adc
mov
mov
ret
sub
xchg
add
pop
jae
push
inc
sub
adc
loopne
in
xchg
adc
and
ljmp
lock
inc
sbb
pop
push
in
mov
mov
mov
loope
mov
je
lods
pop
rolb
dec
cmp
leave
popf
test
fnstenv
in
pusha
or
inc
push
sarb
aam
jo
mov
leave
xchg
stos
or
in
inc
push
mov
hlt
xchg
iret
dec
ret
adc
push
cmp
push
lret
cmp
sarl
call
subb
dec
or
cmp
xchg
and
cmp
dec
lock
leave
and
call
inc
xchg
mov
add
sub
or
ficoms
fwait
or
push
push
in
push
lea
jb
mov
in
adc
or
jno
jmp
sbb
add
aam
mov
js
cmp
ret
dec
or
data16
shlb
hlt
adc
lret
mov
sbb
sbb
fadd
dec
mov
std
lret
fmull
jno
ljmp
fsubrs
mov
mov
mov
mov
mov
loopne
lds
adc
ret
jne
outsb
push
out
xchg
out
xchg
mov
imul
test
stos
and
dec
sub
dec
sub
lods
mov
jmp
pushf
cmp
xchg
dec
and
adc
lods
and
xchg
cmp
cmp
cs
or
insl
scas
push
cmp
dec
sbb
jecxz
sbb
sub
out
fs
sbb
sbb
test
adc
mov
and
mov
push
jo
out
outsb
scas
nop
fldt
ja
or
and
xor
or
xor
mov
inc
rorb
push
add
in
mov
je
push
jg
mov
inc
jg
xchg
pop
add
pushf
add
pop
push
cwtl
sub
inc
add
pop
mov
pop
xor
pop
add
rcrl
int3
pushl
popa
mov
test
sbb
test
and
out
sub
add
shrb
fisttpll
push
bound
push
andb
or
rep
ds
push
adc
insb
or
mov
addb
inc
cltd
jbe
and
push
jge
int
mov
shr
push
pop
std
inc
shlb
fsubs
sbb
dec
push
or
stos
mov
in
mov
pushf
mov
push
mov
push
enter
add
push
push
push
and
leave
cli
push
lods
shl
mov
cmpsl
or
shrb
mov
cmp
inc
cli
cmp
mov
aam
cwtl
ja
fdivrs
cmp
jmp
push
push
sbb
add
push
jl
fwait
mov
ja
sahf
cmp
jno
jecxz
pop
mov
cmc
adc
mov
add
daa
push
fwait
shrl
jp
cmp
popa
ja
push
iret
iret
mov
pop
or
lret
sbb
sbb
lahf
jbe
adc
adc
jae
ja
adc
add
adc
ret
sbb
cmp
rolb
xor
mov
test
push
popf
hlt
or
mov
sti
cmpb
shlb
leave
enter
int3
insl
loop
jle
cmp
adc
mov
inc
mov
mov
and
add
pop
daa
inc
mov
mov
repz
push
sbb
sbb
movsb
test
or
or
cmp
mov
scas
mov
mov
adc
ljmp
xchg
jb
out
or
dec
push
mov
fsubrp
or
addb
adc
push
cmp
fstl
dec
sarb
mov
mov
xor
jne
movsbl
push
fnstenv
repnz
out
mov
adc
and
je
pusha
loop
shrl
mov
sbb
push
daa
mov
test
cltd
lds
movsb
jbe
add
pusha
sub
clc
lret
mov
sub
xchg
cmpsl
mov
daa
and
adc
lret
and
inc
add
mov
sub
repnz
and
xor
cmp
fimull
jge
out
inc
push
adc
dec
cmp
mov
pop
clc
loope
sub
sbb
sub
push
shl
cli
xor
push
cmpsb
jbe
cmp
pop
das
pop
frstor
lods
cmpsl
test
cli
adc
cmp
add
xchg
hlt
rcll
and
or
lock
pop
sbb
fs
ret
xchg
lea
add
add
pop
jnp
stc
rep
mov
or
pop
add
repz
push
add
jb
add
jb
or
or
jnp
mov
jmp
or
jno
jmp
push
jmp
mov
jmp
adc
pop
adc
pop
adc
push
mov
jmp
adc
dec
adc
aas
mov
jmp
sbb
xor
jmp
mov
jmp
sbb
and
pop
xchg
mov
mov
jmp
and
jp
std
dec
inc
and
and
pop
hlt
inc
bsf
mov
ret
push
dec
cmp
lret
cmp
push
adc
jp
nop
incb
bnd
sahf
out
sahf
mov
sahf
out
mov
out
sahf
out
fucom
out
jns
jnp
icebp
idiv
scas
add
add
out
adc
push
and
sub
pushl
add
add
push
pop
or
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
or
popa
insl
sub
inc
fdivr
pusha
pop
push
lahf
inc
fcomps
pushf
dec
sbb
int
sub
add
loopne
xor
inc
adc
loopne
fnstcw
sub
xlat
jbe
pushf
les
test
xor
sub
jo
jo
out
aam
ljmp
mov
pop
or
xor
fwait
cwtl
push
jo
fwait
xorb
ljmp
sbb
inc
lea
call
or
dec
or
push
mov
addr16
mov
jo
sub
sarl
daa
enter
loope
push
mov
in
sub
bound
shll
cmp
mov
add
cmpl
je
jle
add
inc
jmp
xchg
xchg
pusha
and
jg
popa
jns
sbb
mov
js
inc
xchg
mov
fstps
xchg
pop
gs
fdivrl
xor
es
cmp
clc
mov
jae
sub
je
test
shlb
fcompl
decl
jmp
inc
or
not
sub
imul
pop
loopne
inc
jmp
cmp
dec
xchg
sub
add
shr
mov
pop
mov
mov
movb
xchg
popa
stos
pop
mov
ret
movl
inc
sbb
jp
xor
sahf
and
sbb
fmuls
loope
std
roll
jge
fsts
dec
sub
or
lea
xchg
push
xchg
inc
mov
das
dec
mov
stc
ja
outsl
call
or
add
lret
repnz
mov
pop
fmull
cmp
dec
sbb
lock
cmp
inc
or
add
xor
and
and
pop
enter
jo
jge
sub
fs
rolb
test
or
mov
push
out
scas
divl
ret
push
subb
cmpl
push
and
out
push
dec
push
popa
add
sbb
cwtl
incb
stos
xchg
push
or
test
mov
insl
mov
je
add
sub
lds
adc
and
mov
aas
and
lock
adc
or
push
inc
or
add
aad
mov
add
push
sbb
add
sbb
js
sahf
xchg
leave
add
jnp
out
push
sbb
push
push
call
dec
sub
or
in
fidivrl
fiaddl
in
and
cwtl
pop
nop
sbb
int3
mov
cmp
sahf
sub
pop
sub
add
inc
xor
movl
adc
adc
and
andb
xchg
add
loope
xor
jnp
iret
stc
in
nop
adc
int3
sbb
lcall
hlt
test
inc
jl
cmp
cs
sbb
jl
fcmovb
rolb
std
andb
jle
mov
jbe
cli
es
lea
cmp
call
push
or
js
sub
test
in
movsl
insb
or
mov
sti
int3
ss
aad
or
pop
lods
das
mov
or
fbstp
jle
dec
cmp
jl
dec
aad
cmp
push
insl
js
je
pop
dec
jae
test
imul
mov
cmp
jae
movzbl
decb
jl
jnp
cs
xor
lods
les
adc
mov
inc
roll
inc
in
lock
mov
add
hlt
mov
int3
movl
data16
lods
add
and
mov
je
jne
pop
repnz
cltd
ja
jmp
test
and
add
ljmp
push
mov
dec
inc
ljmp
enter
cwtl
or
flds
sti
dec
hlt
ret
push
mov
es
es
sbb
lret
js
jne
lea
clc
in
mov
cli
push
push
push
sbb
pop
adcl
xor
movsl
sub
mov
dec
in
push
sbb
js
adc
mov
add
dec
int3
mov
pop
or
cmp
xchg
mov
jle
cmp
jne
mov
mov
inc
lock
int3
inc
adc
and
adc
out
xor
adc
leave
add
sub
popa
xchg
adc
rolb
cmpsl
pop
fnsave
cmp
xor
sbb
sbb
mov
and
cmp
sbb
sub
ret
xchg
cmp
jbe
xor
and
adc
jno
call
add
push
rcr
rcr
sbb
stos
nop
jo
ja
divl
push
ljmp
pop
cltd
push
jmp
push
jmp
mov
hlt
rclb
xor
pop
bound
pop
insl
inc
mov
fnstsw
mov
je
jmp
xor
mov
bound
pop
mov
fs
and
arpl
daa
jne
push
movsb
xor
lret
mov
mov
push
push
enter
sbb
mulb
fwait
push
or
mov
sbb
outsb
inc
push
mov
sbb
sub
mov
mov
shrb
push
aam
bound
or
jg
enter
xor
jge
test
jno
or
jo
sub
xchg
outsb
sbb
lret
mov
lret
je
push
lock
add
xor
ret
add
mov
cmp
or
xchg
rcrb
xchg
and
mov
adc
adc
arpl
mov
out
mov
mov
je
push
push
ret
iret
ret
shl
or
push
and
jnp
xorb
test
inc
in
pop
cmp
orb
push
nop
pop
int
jbe
inc
mov
xchg
add
or
mov
in
push
sbb
or
incl
adc
jne
push
dec
notb
mov
test
inc
cltd
imul
add
and
add
insl
es
dec
imul
jmp
add
push
inc
pusha
adc
jno,pn
xor
icebp
mov
or
xor
or
sbb
lods
imul
cmp
or
jmp
inc
pop
inc
inc
aad
sbb
xor
in
adc
dec
popa
dec
ds
push
or
addl
js
jmp
aad
mov
xor
dec
cmpsl
jno
xchg
and
loop
ds
stc
sbb
cs
jne
inc
xor
dec
cs
je
or
push
push
stos
fwait
xor
clc
jo
cld
cmpl
push
in
xchg
add
or
outsb
xchg
or
xor
pop
mov
xor
pop
adc
mov
in
sbb
leave
jno
xor
lock
xor
cmpsb
jmp
lods
je
cmp
loop
mov
push
hlt
cli
nop
rolb
dec
jl
or
pop
rcr
pop
in
je
shlb
mov
loopne
mov
xor
mov
repz
fdivs
inc
push
mov
inc
push
jg
mov
hlt
imul
sub
aam
xor
pop
jmp
es
stos
cltd
in
les
js
sub
sbb
mov
cmp
add
pop
stc
xor
incl
cs
aam
mov
or
push
sbb
clc
cmp
jnp
sub
ret
ror
adc
push
int3
mov
pop
daa
lahf
inc
mov
adcb
rcl
sub
xchg
jb
js
lret
dec
das
cmp
inc
aam
ds
test
movapd
xchg
inc
popa
in
xor
inc
adcl
shr
lcall
imul
ljmp
mov
sub
enter
inc
adc
sub
xor
rol
dec
jbe
mov
insb
test
or
imul
lds
sti
fisubs
popl
imul
mov
sub
xor
mov
and
xor
pop
leave
xchg
sub
mov
sub
dec
cmp
push
hlt
push
test
and
push
mov
or
out
sub
mov
and
and
push
outsl
mov
jg
mov
xor
and
das
cmp
mov
cmp
push
ret
inc
xchg
add
xchg
rclb
inc
fiadds
test
push
insl
leave
sub
push
xchg
sbb
adc
nop
and
test
les
inc
and
inc
enter
or
cli
hlt
dec
dec
sbb
mov
push
and
and
andl
jmp
cmp
push
cmpsb
jns
xor
sbb
sbb
jno
sbb
pop
add
pop
fcmovne
leave
sbb
sbb
mov
ret
push
adc
gs
int
adc
or
and
icebp
push
cltd
sbb
les
movsl
mov
mov
and
or
push
xor
rclb
inc
mov
and
movsl
iret
lea
push
movsl
adc
cs
jp
pop
inc
fisttpll
enter
inc
rorl
jo
jg
xor
les
leave
fildl
jg
add
popa
adc
dec
loope
mov
aas
cmp
mov
sub
mov
xor
sti
sti
ja
bswap
push
cmp
jne
and
sbb
xchg
jmp
mov
or
cmp
je
mov
fadds
xor
and
pusha
jo
push
xor
fld
dec
aaa
inc
mov
frstor
xchg
popa
addr16
test
nop
xor
inc
sub
inc
mov
mov
mov
or
cwtl
sub
imul
mov
sbbl
sub
inc
fstpl
sbb
inc
pop
lahf
bound
inc
dec
and
push
dec
cwtl
push
sub
rorb
addr16
lock
sub
stc
in
sbb
xor
ret
sub
xchg
jl
lret
lods
arpl
jo
sbb
push
cs
js
movl
or
sbb
out
and
add
jno
mov
mov
push
xorb
je
or
or
sub
repnz
push
cmp
mov
pusha
cmp
mov
xchg
xchg
es
in
xchg
adc
les
add
test
jmp
lea
daa
je
cmp
decl
loop
sub
push
cmp
jge
mov
push
adc
mov
fs
pop
lea
xor
lock
lds
rclb
rclb
roll
lret
lret
jbe
or
lock
clc
clc
cld
sbb
insb
sbb
push
add
add
repnz
push
mov
popa
lcall
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
push
xor
sub
adc
and
cmp
lds
sbb
jne
or
mov
cli
or
cli
sub
and
fistps
jnp
je
push
add
dec
or
inc
cmp
xchg
rep
shl
cmp
jmp
sub
movsb
or
jg
push
mov
test
je
cmp
jne
sbb
xchg
sub
jne
adc
rclb
out
fisubrs
add
xor
add
dec
push
ficomps
xorb
inc
jmp
sbb
xchg
sarb
idiv
inc
inc
imul
push
clc
push
sub
sbbb
or
and
dec
sbb
xchg
movsb
jmp
add
add
adc
or
cmp
mov
stc
mov
lods
sub
or
push
adc
push
push
lock
cmp
je
imul
test
jbe
inc
test
jmp
daa
dec
inc
lea
or
inc
outsl
xor
aad
out
sti
int3
xor
repnz
hlt
and
cmp
jae
add
inc
cmc
xchg
push
push
ds
jne
push
jns
push
decb
inc
movsl
adc
incl
je
cmp
pop
cmp
je
cmp
jne
inc
jne
mov
sub
jnp
shll
lods
xlat
or
ret
subb
aad
xor
jb
mov
nop
cmp
mov
cmp
test
add
sub
loop
cmp
jne
movsb
mov
rorb
sub
aas
outsl
add
shrb
push
inc
sbb
add
out
xor
fnsave
jmp
push
jl
or
jg
push
ficompl
mov
jmp
and
push
jmp
sub
aaa
aaa
inc
jl
inc
jg
aaa
push
add
int
fld
out
dec
mov
sub
mov
inc
je
sahf
mov
jle
into
les
outsl
adc
test
mov
inc
xchg
or
jo
xchg
mov
mov
mov
out
inc
fstpl
or
loop
mov
jmp
or
outsb
push
xor
pop
cmp
and
push
pushl
pop
push
mov
inc
cmp
pusha
mov
jg
xlat
cmc
ret
push
sub
shlb
push
or
out
jo
or
cmpb
popf
daa
lcall
or
dec
mov
sub
test
and
aad
dec
jge
gs
pop
das
fimuls
lods
mov
and
cmp
inc
dec
inc
add
mov
ja
adc
cmp
mov
inc
inc
inc
out
jmp
xor
push
and
xchg
jne
sub
xchg
cmc
popa
ljmp
js
fs
pop
sub
std
xor
cmp
xchg
popf
mov
cmp
dec
adcb
pop
fcmovu
and
std
aas
ja
or
je
add
jno
out
adc
cmp
mov
push
and
adc
inc
call
ljmp
adc
shrb
lahf
cld
adc
or
pop
push
sub
jmp
pusha
shr
pop
adc
sub
cmp
xchg
popa
ret
or
pop
mov
js
testb
adc
adc
xor
sbb
or
call
cmp
push
lcall
scas
andl
mov
mov
mov
ja
inc
test
xor
push
or
sub
pop
inc
sub
push
lock
sub
jge
jne
push
xchg
test
shrl
push
repnz
sahf
xchg
scas
push
sbb
pop
push
add
add
jmp
repz
bound
add
cmpl
cmp
xchg
xor
in
ret
inc
adc
jg
inc
and
mov
xorl
xchg
pop
cli
inc
inc
lock
xchg
or
dec
inc
sbb
jne
mov
push
push
adc
int
push
inc
xor
icebp
jmp
inc
rolb
sbb
adc
add
stc
lods
test
and
pushf
adc
imul
cs
jo
jl
xchg
rolb
dec
or
push
mov
adc
push
out
les
push
ret
aas
mov
xchg
shl
movb
push
mov
fidivl
cmpsb
std
xor
orl
push
cmp
jo
cmp
mov
and
jecxz
mov
cmp
dec
dec
push
cltd
sbb
jae
addr16
push
inc
ret
rcl
aam
test
cld
sbb
pop
stc
cmp
mov
push
jg
js
cmp
inc
ds
cmp
lea
and
orl
inc
or
mov
sti
sub
mov
dec
dec
inc
or
outsl
pusha
sub
or
cli
add
loope
inc
jl
jbe
xchg
sub
enter
push
jmp
and
dec
add
pop
push
cmpb
jne
popa
or
outsl
lods
and
out
shll
bound
sbb
outsb
sbb
ror
sub
pop
in
je
clc
sub
mov
push
and
sub
adc
mov
adc
mov
mov
sar
inc
inc
or
mov
or
test
add
add
adc
stc
push
mov
popf
cmp
fbstp
inc
pop
psubb
sahf
adc
sahf
mov
clc
add
add
or
push
lret
or
arpl
xlat
inc
pop
loope
adc
rep
push
addb
rol
test
mov
mov
in
push
inc
push
mov
mov
dec
pop
lret
dec
or
popa
push
jne
jp
pusha
sub
data16
inc
je
adc
or
pop
orl
rolb
or
insb
je,pt
inc
outsb
push
push
jno
or
xchg
dec
cmpsl
sbb
mov
rcrb
jl
xor
orl
mov
cmp
jo
add
int3
inc
sub
fildll
sbb
mov
popf
pop
cmpsb
inc
and
lock
scas
add
arpl
adc
and
xlat
sub
pop
fs
sti
fcmovnbe
pusha
jo
xor
aad
push
jo
lock
lock
or
jno
int
out
push
push
push
mov
movups
pop
test
cmp
cmp
pushf
sbb
xchg
cli
xchg
sub
call
inc
movsl
xchg
shlb
popa
loop
inc
push
sub
push
addr16
pop
inc
test
and
and
sub
and
add
pop
pop
mov
adc
adc
cltd
sub
cwtl
arpl
ljmp
add
stos
leave
aad
add
lret
sahf
sub
lods
bound
push
jae
out
stos
pop
ret
xor
lea
mov
sbb
inc
cmp
jb
es
cmc
push
or
aas
push
lds
jb
mov
fsubs
cmp
shll
test
push
adc
sbb
push
or
add
daa
mov
mov
add
sub
mov
xchg
por
xor
inc
ljmp
mov
mov
test
pop
dec
jne
xlat
xor
mov
leave
inc
je
cmp
stos
mov
inc
divb
jbe
cwtl
or
or
and
cmp
int
mov
inc
push
xor
jle
push
inc
pop
push
xchg
test
jge
mov
pop
mov
cmp
inc
xor
les
cmpl
pop
icebp
imul
or
add
jmp
and
fisttps
fwait
leave
cs
mov
cs
fnstenv
test
pop
jmp
add
inc
cltd
mov
fstl
jg
fldenv
and
loopne
mov
or
orl
add
insl
xlat
add
leave
arpl
and
sti
mov
sbb
inc
stc
cmp
mov
jge
ja
daa
jne
xor
jp
lods
xchg
or
and
sbb
aas
bound
jnp
sub
loope
jmp
xor
adc
pop
ds
adc
fimull
mov
mov
pop
mov
jne
cmp
sub
pop
in
sti
cltd
jne
lods
xchg
sbb
sbb
xchg
adc
and
cmp
sub
push
pop
dec
aaa
movsb
sbb
aad
and
popa
movl
insl
in
stos
push
inc
sub
dec
rolb
mov
cli
jne
adc
in
cmpsb
jmp
adcl
sbb
fcmovnb
shl
add
nop
xchg
lret
or
insb
sub
popf
push
mov
or
mov
mov
cs
mov
add
movsb
cmp
loop
push
shll
je
jbe
inc
inc
pop
ds
das
or
mov
lahf
xchg
sub
xchg
adc
insl
addl
sarl
pop
mov
sub
and
gs
xor
push
sbb
in
mov
add
add
push
pop
or
xor
push
in
mov
jo
clc
jno
push
out
inc
add
divb
adc
popl
or
pop
enter
push
sub
stos
fsubp
mov
movb
or
sbb
push
shl
xor
cmovp
mov
xchg
xchg
arpl
inc
sbbl
enter
adcb
and
in
or
mov
jmp
adc
pop
ds
dec
dec
xor
popf
add
out
loop
cs
fsubr
dec
jae
push
mov
incl
or
xchg
andl
add
ret
adc
jecxz
push
cltd
in
les
adc
nop
mov
pop
or
dec
dec
nop
add
jbe
inc
scas
jo
xchg
mov
dec
jno
lret
fcmove
and
cmp
adc
ficomps
js
loopne
xor
push
test
or
roll
adc
flds
cmp
mov
mov
inc
mov
cmp
lret
pop
jo
and
mov
test
or
pusha
add
loop
mov
jl
into
pop
xor
cmp
pop
imul
xor
out
jge
xor
pop
dec
inc
bound
and
mov
add
cmpsl
pop
push
and
cs
lea
add
add
dec
test
fdivr
mov
loop
sub
fnstcw
add
das
pop
mov
xchg
xor
jmp
push
dec
mov
jmp
mov
push
aam
xor
adc
cmp
or
adc
lods
punpcklbw
push
adc
push
mov
inc
sbb
cmpsb
ja
imul
adc
push
ret
sbb
jge
cmpb
jae
add
cwtl
shrb
jecxz
pusha
cmp
mov
in
mov
push
mov
sub
sbb
add
mov
ljmp
dec
adc
adc
outsb
xor
mov
sbb
test
xor
and
pusha
add
lea
inc
ljmp
or
rolb
je
jno
mov
and
and
inc
sub
icebp
daa
test
or
das
push
and
shll
pop
js
ljmp
decl
mov
movl
pusha
jo
push
sti
or
sub
cmp
or
ret
mov
sub
sbb
int
sbb
cmp
dec
mov
enter
ja
shll
lods
pop
fsubs
jecxz
adc
test
xchg
push
pop
adc
or
aad
je
push
dec
sub
subl
jle
jp
push
adc
je
mov
inc
outsl
dec
loop
dec
adc
icebp
outsb
inc
mov
sbb
jo
xor
cwtl
jge
aas
cmp
shll
data16
ret
sub
cmp
add
lahf
cmp
dec
aam
test
or
jne
sub
pop
mov
dec
and
sub
inc
outsb
add
pop
push
jae
aam
adc
cmp
jmp
aad
sub
cld
xchg
repz
into
test
loop
sub
or
roll
lcall
inc
cmp
mov
fmuls
cs
lret
lea
inc
insb
cmp
cmp
mov
mov
in
in
dec
and
aas
sub
xchg
or
push
mov
sbb
cltd
add
add
int3
mov
and
mov
push
pusha
dec
mov
and
and
mov
cmp
xor
movzwl
push
fidivs
dec
in
inc
sub
sarl
mov
xor
decl
jo
cs
scas
shl
and
outsl
and
jo
or
pop
jmp
sarb
or
or
and
push
mov
adc
pop
cli
lods
push
in
xor
sub
out
movsb
sahf
std
scas
jae
cmp
pop
mov
jmp
cwtl
xor
push
cwtl
pop
pop
fmull
flds
xor
push
test
xchg
add
dec
fildll
popa
cld
rorb
fdivrs
imul
shr
rep
adc
data16
pop
movsl
adc
arpl
and
jb
sbb
or
sbb
pop
add
mov
pop
mov
mov
stos
pop
jg
sub
mov
push
imul
mov
fs
or
jae
cmp
ja
std
sub
data16
push
jecxz
sar
dec
jp
mov
mov
je
ret
fwait
loope,pn
lods
push
rorl
push
jmp
mov
les
mov
xor
jg
test
divl
add
mov
aad
jbe
pop
mov
push
incl
cmpsb
push
je
ds
sbb
or
and
lahf
int3
cltd
cltd
cmp
pop
js
ljmp
sahf
adc
in
mov
ret
out
add
cld
cmp
jae
loopne
push
faddl
call
ret
jg
lret
insl
add
lds
addr16
loop
adc
icebp
shl
addb
test
call
aad
or
aaa
mov
ret
sub
xor
push
mov
loopne
add
jo
or
dec
pop
jno
lds
adc
or
adc
lods
in
push
or
and
cmp
dec
sbb
inc
inc
in
inc
adc
aad
clc
fiadds
mov
jg
jp
cmp
xor
loopne
inc
xchg
xor
sbb
or
loop
mov
inc
ret
or
mov
call
popf
lds
into
cmp
pop
cmp
loope
adc
pop
in
mov
fiadds
xor
sub
jp
adc
or
filds
or
ja
inc
jmp
je
adc
mov
sbb
or
push
dec
fisubl
imull
push
loope
cli
xchg
push
ret
pop
cmp
adc
mov
and
xor
fs
push
add
cld
sbb
or
ljmp
fadds
jo
shll
sub
push
aam
out
push
dec
adc
add
dec
push
add
mov
icebp
mov
jns
dec
popf
nop
cli
inc
adc
ds
adc
add
fdivl
mov
clc
mov
cmpsl
imul
push
mov
cmp
push
mov
add
push
jg
add
pop
ret
ret
lea
sbb
adc
cmp
sub
outsb
lock
jnp
fsts
xchg
adc
pop
dec
pop
imul
adc
pop
dec
push
adc
rclb
es
sub
xchg
jl
mov
sub
mov
fmulp
test
cli
jle
dec
push
jmp
add
sbb
sub
xchg
mov
push
add
xorl
loopne
lret
push
nop/reserved
xchg
ret
jmp
or
lret
fsubl
mov
and
xchg
lea
orb
sbb
ljmp
mov
jbe
test
insl
ficoml
cmp
or
pushf
int3
sub
outsb
ret
icebp
cmp
je
lods
out
inc
mov
inc
add
dec
pop
or
push
loopne
sti
or
mov
xchg
xchg
test
jne
xchg
pop
jp
dec
push
imul
sub
icebp
out
push
scas
xchg
lcall
ret
mov
add
loop
push
inc
add
push
insl
loopne
lea
jne
add
add
pop
mov
inc
pop
sbb
mov
aam
cmp
aad
xchg
pop
xor
xchg
test
push
xor
xchg
mov
mov
pop
ja
shll
add
adc
mov
push
push
sbb
mov
outsb
lret
fnsave
movzbl
jne
push
sub
mov
cmp
jg
sub
je
jle
push
xor
pop
div
and
mov
inc
or
pop
mov
xchg
mov
inc
or
mov
dec
nop
push
pop
adc
ficompl
clc
xchg
push
adc
sahf
add
add
push
aaa
loopne
sbbb
lea
imul
mov
push
jp
push
jl
lret
pop
mov
ja
cs
cmpb
fsubl
xorl
in
popa
jo
gs
inc
push
dec
or
orl
adc
push
sahf
mov
hlt
rolb
js
je
pop
adc
push
xchg
sub
mov
cmp
pop
mov
adc
sub
sub
jne
bound
or
adcl
pop
dec
push
sbb
pusha
stos
cmpsb
jle
les
sbb
das
or
push
pop
jno
lods
sub
push
test
sahf
clc
int3
add
pusha
insl
ljmp
pop
and
fstpt
cmpb
sbbb
jne
fldln2
fwait
pop
sarl
add
and
clc
jg
fs
test
mov
jmp
movq
movaps
out
push
enter
mov
clc
jae
xor
jle
xor
xchg
incb
mov
test
decl
insl
mov
imul
repz
or
jg
dec
mov
das
pop
jg
xchg
ret
adc
jnp
mov
negl
mov
aam
ret
or
insb
adc
ja
movsb
and
lahf
pop
add
in
out
xchg
repnz
roll
jbe
and
dec
add
pop
mov
int
scas
mov
fcmovb
sbb
adc
cmp
dec
inc
hlt
jecxz
popa
insl
and
mov
dec
sub
xor
mov
cmpsb
jge
push
lods
inc
dec
pusha
mov
loope
push
adc
scas
loopne
pusha
ret
iret
rorb
aam
jmp
push
je
pop
mov
outsl
or
sub
adc
lods
ds
inc
sub
adc
clc
ja
mov
mov
clc
sub
loopne
inc
cmp
jle
movsl
orl
xor
mov
inc
inc
and
mov
add
push
or
mov
arpl
pusha
daa
repnz
jmp
sbb
sbb
jmp
mov
push
and
push
inc
dec
or
scas
adc
pushf
jno
mov
sub
js
and
inc
das
xor
mov
sub
in
xchg
sub
hlt
adc
add
push
adc
orb
push
movsb
in
insb
or
pop
dec
out
xor
jb
xorb
jns
sbb
or
sub
dec
pop
sbb
inc
push
adc
in
push
add
mov
movb
mov
les
push
pushf
pop
addr16
sbb
sbb
sbb
xor
add
jecxz
fcoml
mov
rcll
and
rcrb
push
aas
dec
adc
nop
addr16
ficompl
push
je
jp
push
dec
lcall
sti
rclb
pop
in
insb
mov
lret
and
addr16
pop
or
inc
imul
xlat
pop
cmp
jmp
push
insl
jmp
iret
seta
out
iret
ss
mov
or
fidivrs
orl
xchg
shrl
hlt
push
jle
aam
mov
arpl
push
cltd
hlt
lock
pop
and
mov
push
jmp
and
push
and
adc
inc
arpl
adc
shll
arpl
cmp
fs
lods
int3
or
sbb
out
in
imul
out
repz
sahf
popf
or
sbb
out
push
cmp
inc
jb
or
test
lret
movsl
fildl
mov
sub
enter
shlb
stos
mov
push
pushl
mov
popw
pop
pushf
push
mov
jae
enter
add
test
push
imull
dec
xor
ficoml
push
jns
loopne
push
test
adc
sub
lock
arpl
mov
cs
loop
icebp
mov
pop
mov
call
das
ss
mov
aaa
or
push
lret
cmp
pop
cmp
movsb
pop
inc
inc
hlt
push
test
adc
andb
and
cmp
aad
jo
hlt
dec
faddl
sub
out
pop
push
fiadds
cmp
sbb
sub
adc
shll
es
test
or
lret
jne
dec
jmp
rcr
pop
data16
repnz
mov
jne
inc
adc
xlat
aaa
push
lds
mov
push
loope
popl
rcl
cmp
sub
cmp
mov
bound
mov
stos
jne
add
rorb
and
mov
comiss
lock
out
test
inc
stos
or
jb
lret
dec
sub
data16
pop
xchg
sub
adc
fidivs
sub
push
xchg
adcb
fists
mov
fimuls
push
mov
ficompl
aad
call
ss
lret
jae
stos
sbb
mov
xchg
fdivl
add
arpl
das
lock
daa
mov
pop
mov
je
lds
idivl
rcl
cmp
in
cwtl
dec
dec
sbb
pop
fdiv
nop
arpl
jo
jecxz
xchg
andl
jb
or
enter
out
repz
test
push
mov
and
inc
and
jbe
gs
cmp
jb
and
mov
cmpsl
add
add
cmp
sbb
lods
jno
sbb
lcall
pop
mov
les
repnz
jg
popa
jl
fisttpl
dec
push
jbe
sub
push
cmpsb
cli
aaa
pop
cmp
pushf
mov
cmp
fisttpll
into
lea
cmp
and
jmp
in
mov
cmp
jne
push
adc
or
mov
inc
mov
jne
pop
sub
pop
test
sbb
add
andb
jne
or
ds
addb
mov
daa
jl
rcll
int3
or
in
cld
dec
sbb
cmp
cmc
ret
inc
loope
mov
and
rcll
and
mov
push
inc
sub
ljmp
faddl
xor
rorl
mov
call
ds
idivl
ljmp
cmp
icebp
nop
lret
pushf
mov
dec
sar
jne
cli
xor
jl
pop
adc
sarb
xchg
mov
aaa
mov
fbstp
ret
and
ret
inc
in
xchg
cmpsl
pop
or
pop
inc
jl
inc
les
sbb
jge
dec
mov
sub
push
js
repnz
cmp
jne
pop
fcmovbe
ret
or
or
pop
push
or
push
xchg
or
pop
push
mov
xchg
mov
cltd
inc
popl
cmp
mov
cmp
adc
mov
rorb
std
lahf
pop
arpl
xchg
inc
mov
jl
and
subb
lods
xlat
outsb
cs
js
pop
mov
aaa
push
ljmp
adc
jne
adc
jmp
push
rcrb
jmp
sub
jo
mov
in
js
or
pop
fstp
mov
shlb
adc
push
push
test
xchg
and
add
inc
cld
add
shl
add
xchg
mov
mov
inc
fnstsw
inc
es
or
or
mov
adc
sbb
jp
addl
leave
fadds
lock
sbb
cld
jb
jae
adc
push
clc
jbe
add
mov
sbb
and
add
cmp
xchg
dec
dec
add
sub
add
add
jmp
test
jne
test
stos
loopne
clc
cmp
xorl
ja
xchg
lods
cld
jbe
jl
jnp
divb
dec
out
test
and
pushf
pop
ss
push
push
addr16
jae
dec
lret
hlt
idivl
cld
pop
icebp
pop
or
pusha
xor
loop
push
push
push
add
xor
insl
fnstcw
xor
or
add
inc
icebp
adc
add
call
hlt
cmpl
mov
xchg
push
push
shl
insl
xchg
add
roll
and
add
pusha
andl
or
leave
inc
dec
push
rolb
push
inc
repz
test
shl
ret
and
movsb
sbb
lods
cmp
push
mov
pop
pop
mov
cld
add
out
sub
pop
jb
out
or
out
pop
int3
adc
stc
rclb
or
stc
lods
fwait
sub
frstor
js
xor
inc
ror
sbb
mov
sti
les
cmpsl
repnz
lret
xor
daa
dec
jne
mov
push
jmp
push
repnz
mov
test
mov
add
dec
jne
mov
pop
adc
add
push
push
add
pop
xor
lods
add
push
adcl
popa
fdivs
or
testb
sar
jae
lret
scas
outsb
into
ficoml
negl
add
cld
jne
mov
push
mov
std
jne
es
jne
mov
cltd
cmpsl
call
aam
subl
and
daa
and
mov
jns
pop
push
dec
or
adc
jmp
std
enter
push
xor
cld
cld
jmp
fisttpl
adc
in
adc
adc
inc
inc
inc
cltd
clc
inc
pop
fsubr
stos
inc
adc
fdiv
mov
mov
sbb
adc
sbb
mov
leave
inc
test
in
ret
sbb
repnz
and
stos
repz
in
add
inc
loopne
dec
test
scas
insl
loopne
or
dec
inc
add
or
and
add
and
or
inc
push
or
and
movsb
xchg
rolb
pop
orl
xchg
rolb
xchg
push
xchg
icebp
mov
ror
std
add
inc
sbb
in
pop
test
pusha
lods
lds
int
sahf
jg
or
add
add
push
in
jmp
movb
jmp
mov
xor
xchg
clc
mov
iret
je
mov
fmuls
cmp
jg
add
adc
call
mov
cmp
mov
test
push
test
aaa
lea
data16
mov
ja
jae
out
inc
cmp
inc
add
add
lea
or
dec
dec
mov
xchg
and
inc
das
sarl
mov
pop
pop
xchg
jo
and
xorb
pusha
pop
cwtl
pop
pop
js
lods
test
sub
dec
cld
adc
cmp
inc
popa
xchg
sbb
add
fsts
mov
jb
andb
push
inc
dec
imul
sub
outsl
sub
gs
push
fwait
inc
pusha
or
loope
pop
xor
cmp
subb
adc
mov
aaa
inc
in
aaa
xor
cmp
jno
les
out
cmp
loopne
les
mov
int
decb
cmp
or
clc
inc
and
xchg
lock
fistps
test
jg
pop
fmuls
lock
and
sub
or
add
adc
pop
js
mov
sbb
xchg
pop
shrb
call
fwait
push
add
addl
push
dec
jge
ret
add
data16
arpl
pop
mov
push
out
push
or
std
pop
cld
sar
stc
and
mov
inc
je
mov
fists
fmuls
or
addb
clc
test
jmp
or
mov
inc
inc
push
or
cmp
push
scas
mov
fwait
jmp
cmp
mov
inc
cmp
jb
add
shll
icebp
in
and
dec
leave
jl
add
jl
or
and
dec
inc
pusha
sahf
outsb
int3
push
test
sbb
fdiv
mov
adc
mov
adc
add
iret
push
sti
bound
iret
sub
or
ret
shl
push
adc
push
jg
or
jle
xor
add
std
inc
dec
xchg
scas
and
xor
sub
cmpl
roll
lock
push
out
jne
mov
lret
int
and
jp
shr
jns
dec
cmp
je
test
je
add
faddl
aam
xchg
pop
addr16
decb
or
cld
aaa
rolb
sbb
cli
clc
les
jae
adc
push
mov
push
lcall
lahf
fwait
sbb
add
jg
fsubl
sbb
mov
add
pmaddwd
outsb
add
pop
fdivl
inc
call
push
incb
mov
inc
jmp
cmp
jno
mov
sbb
jmp
adc
jne
sub
enter
jp
pop
inc
adc
cmp
sbb
fcoms
sub
jg
mov
cmp
je
cmp
and
lahf
loop
xchg
adc
pop
fmuls
imul
js
or
mov
aam
hlt
aaa
inc
sahf
adc
mov
and
je
mov
adc
lret
sbb
adc
dec
sub
or
and
or
add
les
or
sub
xor
push
lods
and
mov
dec
inc
imul
pop
lea
pop
xor
adc
rcll
push
mov
sbb
adc
mov
mov
in
fcomps
inc
xor
inc
sub
mov
dec
jge
push
loop
lret
out
push
mov
push
mov
je
pop
pop
pop
xor
bound
sub
and
lock
jne
mov
jg
cli
mov
or
add
repz
add
xchg
xor
or
addr16
and
rolb
pop
dec
xor
in
sbbb
xlat
push
xchg
cltd
lds
push
mov
xor
adcl
mov
or
cmp
ret
adc
rcr
or
js
dec
dec
nop
adc
fidivrl
mov
insb
sbb
cmpsl
test
xor
pop
clc
add
loopne
or
xor
push
mov
inc
mov
lea
enter
int
and
outsl
cld
xorb
jb
lea
push
mov
ja
or
adc
sub
pop
cmp
ficoml
loope
adc
lcall
mov
and
in
or
sbb
rorb
pop
or
loop
lock
leave
or
out
add
sbb
adc
cmp
aaa
or
inc
dec
mov
fldl
dec
loop
sbb
jmp
icebp
mov
in
stos
in
or
int3
pop
movsl
xchg
and
add
cmp
dec
inc
call
fsubs
int3
cli
dec
cld
and
mov
sub
in
mov
mov
add
xchg
sub
mov
adc
mov
dec
sbb
jp
add
cmp
or
in
inc
jb
hlt
xor
scas
nop
inc
push
inc
jecxz
inc
pop
test
cltd
sub
add
test
lret
into
add
inc
fdiv
dec
cmp
repnz
mov
inc
shlb
add
pop
xchg
sbb
push
clc
rcrb
cmp
daa
fucomp
inc
pop
shll
in
sbb
rcll
lcall
push
or
push
clc
ljmp
sbb
lods
add
or
add
stos
test
jle
mov
les
pop
jp
in
ja
cmovg
push
xlat
cli
and
push
dec
sub
adc
dec
mov
and
popa
adcb
outsb
outsl
xchg
sub
in
inc
sbb
push
pop
adc
test
in
push
faddl
in
je
push
insb
push
data16
push
mov
addl
jle
sub
or
jne
pop
rorb
mov
jbe
lods
cltd
pop
idiv
decl
mov
loopne
sub
mov
pop
stos
push
jne
rorb
popa
push
mov
pusha
add
xor
adc
rcll
xor
ffreep
push
aas
sub
ficoml
dec
loopne
dec
or
add
cmp
inc
push
imul
mov
sub
sbb
out
les
mov
mov
mov
sbb
adc
push
addb
push
jle
adc
or
repnz
add
adc
clc
lcall
idivb
push
and
xchg
loopne
mov
and
test
inc
add
js
stos
cmpsl
inc
mov
leave
fcoms
lds
sub
xchg
dec
mov
sub
jbe
and
lods
add
addl
scas
xchg
add
out
mov
mov
roll
pop
jmp
adc
add
je
les
cmp
inc
cmp
clc
push
mov
fs
into
add
sbb
adc
inc
je
inc
dec
jbe
shrb
or
popa
fs
or
fbstp
dec
je
add
or
pop
out
lods
test
push
dec
push
or
insl
sbb
jbe
inc
add
sub
push
jbe
ss
inc
and
mov
xchg
out
or
adc
sbb
push
test
jg
out
jo
lea
test
fisubl
push
add
mov
roll
push
fisubrl
lock
jne
mov
add
adcl
and
pop
inc
xor
inc
jne
inc
test
stc
push
jns
fs
mov
add
cmp
and
divb
cmovp
mov
jns
pushf
push
mov
push
mov
shr
enter
lea
push
iret
or
imul
jbe
leave
add
pop
lods
pop
jns
add
jmp
rorb
add
dec
push
ret
inc
sti
xchg
test
push
jmp
sub
and
sub
dec
pop
in
icebp
and
sub
jbe
mov
cmp
or
dec
xor
ret
mov
jmp
cmp
cwtl
add
lods
mov
push
mov
mov
scas
xchg
sub
adcb
mov
inc
sub
pushl
loop
pop
lea
add
sub
mov
test
cs
roll
into
push
push
adc
test
or
fst
fsubrl
add
xor
je
sbb
int
or
dec
and
mov
pop
loop
or
jg
clc
mov
pop
jle
call
mov
cli
or
lea
xchg
in
mov
dec
pop
xor
test
fmull
jns
add
push
arpl
int
add
or
ds
cmp
xor
clc
add
and
push
pop
mov
xor
dec
outsb
dec
mov
push
pop
sub
cmp
cld
cmp
push
xchg
movsl
stos
insb
cmp
scas
sbb
pop
fcomps
mov
in
imul
dec
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
pop
mov
cli
insl
or
cmp
mov
pop
add
sarl
inc
push
jns
push
cmp
push
data16
cli
out
jnp
push
inc
cmp
push
cmp
adc
stc
xchg
clc
push
mov
stc
mov
cli
pop
cltd
rorl
imul
add
pop
lcall
insl
inc
sub
ret
call
xchg
mov
shlb
out
pop
xor
lock
xchg
les
add
hlt
fnsave
or
mov
cltd
pop
inc
mov
inc
aam
out
ja
jno
sbb
jno
adc
and
stos
xlat
je
cld
xchg
lods
xor
in
jb
aad
add
cmp
cwtl
push
in
arpl
push
or
int
push
mov
jg
pop
jb
push
add
aam
movaps
imul
mov
imul
inc
xorb
xchg
xchg
jo
xchg
test
or
lea
shll
and
xchg
mov
adc
mov
pop
orb
pushl
mov
aaa
jb
mov
mov
cwtl
fadds
pop
xchg
add
popa
mov
push
nopl
inc
and
ret
and
sub
mov
shrb
mov
jl
inc
in
or
sub
leave
mov
repz
rcll
dec
pop
xor
rorb
movsb
sbb
mov
mov
jne
inc
cmp
popa
and
or
or
int3
jo
push
push
mov
pop
ret
nop
sub
js
jbe
in
dec
pop
pop
mov
or
push
mov
cmp
inc
cwtl
xlat
xchg
and
xchg
cmp
inc
or
cwtl
inc
add
gs
test
insb
sub
dec
cld
jmp
cmp
movsl
aas
adcb
rclb
xchg
and
inc
push
adc
mov
fmull
cmpsb
add
mov
xchg
ja
or
mov
or
rorl
enter
dec
inc
inc
hlt
mov
lock
imul
push
mov
mov
ja
out
xchg
or
cmp
xlat
lcall
or
sbb
fsubrl
nop
or
ja
loopne
add
mov
push
push
adc
cltd
clc
push
into
je
xor
cmp
fisttpl
and
popa
sbb
iret
jp
pop
les
jne
add
leave
and
jns
mov
and
fs
xchg
xchg
mov
or
mov
scas
add
push
aad
mov
lret
aam
mov
and
push
mov
sub
push
leave
add
sbb
jp
and
imul
test
leave
lret
jge
rorl
out
adc
add
cmp
cmp
jb
lret
lahf
jp
sbb
loopne
and
mov
and
es
loopne
outsl
dec
pop
pop
jne
out
out
test
push
add
jmp
mov
cmp
test
add
cs
out
shll
pop
fs
pusha
nop
maxps
nop
or
clc
jns
mov
pop
int
pop
dec
jle
inc
add
add
repnz
dec
add
dec
pop
jge
add
cmpsb
push
lcall
xchg
mov
inc
push
xor
and
pushf
out
sbb
or
repz
mov
push
call
iret
repz
lock
hlt
clc
mov
repz
cld
ljmp
lock
sbb
xorb
jmp
roll
pop
or
insl
sar
inc
and
push
jbe
sbb
lea
jl
cld
scas
loopne
push
pop
and
std
cld
out
sub
xchg
popa
in
neg
shll
xchg
daa
ja
fs
sub
inc
in
nop
or
idivb
add
mov
add
inc
test
out
push
add
nop
dec
dec
addr16
cmp
popa
sarb
mov
sahf
notl
or
push
test
mov
ror
jecxz
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
cmp
popa
js
in
or
push
bound
sub
icebp
xchg
xor
push
add
pop
andl
inc
ja
cmp
fisttps
or
or
popl
or
cld
cmp
or
xchg
xor
arpl
or
je
mov
dec
sbb
testb
jne
jp
mov
in
sbb
fs
add
cmp
pop
sahf
add
std
mov
inc
and
jne
push
sbb
test
stc
sbb
mov
ffreep
ss
mov
adc
shrb
dec
dec
imul
fdivrs
dec
mov
nop
adcb
pop
movsb
xor
jae
mov
xchg
push
sbb
dec
pop
popf
push
lock
and
jmp
test
sub
movsl
pop
call
fstl
push
pop
sbb
loope
nop
mov
and
rolb
inc
or
or
mov
dec
or
icebp
addb
mov
cmpsb
fs
iret
fs
or
enter
push
icebp
sbb
cs
pop
adc
aam
push
shll
call
mov
jo
cld
add
orl
mov
cltd
call
or
test
adc
loopne
out
and
sbb
bound
ret
daa
pop
lcall
mov
cmp
mov
and
les
mov
add
jp
pop
std
movb
shll
insb
pop
jmp
mov
leave
sub
mov
inc
mov
mov
push
push
inc
jo
rcll
push
push
fcomps
sub
or
add
sbb
or
inc
repnz
or
adc
adc
ficoms
fs
add
cmp
xchg
xor
lcall
dec
push
jecxz,pn
inc
add
movsb
cmp
xor
add
je
sub
pop
cld
cmpsl
pop
xor
jmp
sub
rorl
lret
je
rep
mov
test
rolb
loope
cmp
les
mov
jl
adc
nop
or
jo
mov
mov
mov
cwtl
or
mov
int
cmp
push
pusha
sub
pop
pushf
repnz
adcl
or
xchg
push
or
insb
mov
movl
out
mov
rolb
adcl
push
call
xor
dec
and
sub
sbb
adc
jb
aam
inc
push
push
cmp
pop
mov
imul
sti
movsb
xchg
adc
add
movsl
xchg
sub
and
pop
add
sub
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
or
jae
push
adc
push
bswap
and
pop
in
xchg
pusha
xchg
clc
jno
insl
push
ror
lret
cld
mov
add
pop
xchg
inc
cwtl
cmc
je
pop
mov
push
add
sbb
add
or
mov
test
push
mov
inc
out
add
push
add
imul
xchg
add
mov
pop
scas
xor
call
std
andl
xchg
mov
data16
adc
pop
sarb
push
out
pop
jae
aam
mov
adc
jbe
push
inc
adcb
pop
call
inc
add
loopne
nop
jl
sbb
mov
pop
inc
fcomps
add
test
or
mov
cmpb
xchg
jp
mov
dec
idivb
and
sbb
in
cmp
repnz
ljmp
jns
popa
adc
bound
adc
insl
xchg
add
rcll
ret
push
and
lock
in
and
inc
fsub
outsl
leave
mov
jmp
mov
into
fnstsw
loopne
daa
push
movsb
dec
jmp
pusha
arpl
ss
leave
mov
hlt
cmpb
push
sub
mov
scas
dec
jmp
add
js
movsb
push
lock
rol
jbe
push
dec
clc
rorb
jl
decb
pop
add
push
jmp
inc
and
and
dec
es
test
jmp
lcall
cmpl
mov
jp
jne
push
cmp
or
iret
das
add
fcoms
or
je
lsl
cmp
mov
xchg
lret
gs
shl
ret
fdivrs
xchg
popf
jne
sub
jmp
je
adc
inc
movsl
insl
push
adc
leave
xchg
call
in
or
xchg
loopne
roll
or
pop
inc
ret
mov
dec
cwtl
sar
add
rcrb
pop
ja
sub
xor
imulb
add
xor
jecxz
mov
pop
lods
movsb
dec
insb
mov
cld
xchg
push
jbe
movsl
jnp
rorb
lea
mov
rcr
clc
loope
pusha
jne
lret
dec
or
je
adc
lcall
cmp
adc
sahf
pushf
pop
or
notb
add
cmpl
or
shll
add
push
sti
mov
adc
cs
sti
test
adc
pop
aas
clc
arpl
pop
imul
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
mov
or
mov
jmp
insb
into
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
sbbl
movsl
jl
inc
movsl
imul
jae
cs
sub
js
push
lcall
roll
int
add
call
pop
cmp
xchg
mov
das
add
sbb
clc
adc
push
sbb
adc
push
or
add
in
ret
mov
or
inc
movsb
dec
shrl
lock
test
lea
ss
sahf
arpl
imull
xor
cmpsl
loope
or
scas
mov
mov
add
push
push
or
dec
and
pop
pop
adc
sbbb
or
nop
add
fsubrl
mov
cmp
sbb
sbb
adc
cmp
pusha
rclb
add
push
pop
subl
shlb
call
or
rorl
mov
jp
loopne
cwtl
sub
cmp
jmp
adc
popa
or
clc
push
add
std
or
cmp
xchg
adc
fdivrl
and
aaa
inc
lods
xlat
mov
cwtl
ds
dec
mov
dec
ret
test
xorb
mov
icebp
sarl
je
call
cmp
jmp
sbb
shlb
sub
inc
inc
loopne
jno
mov
add
or
mov
in
je
int
sbb
or
sub
cmpsb
ss
xchg
insl
and
popa
xor
add
gs
mov
sbb
add
or
xchg
and
adc
add
jne
sbb
jo
lods
xor
adc
test
sbb
add
push
add
scas
aaa
adc
jb
jne
movsb
addr16
mov
ja
fbld
jmp
cmp
jle
popa
mov
clc
adc
and
pop
push
dec
js
or
lea
pop
push
push
adc
test
add
push
rclb
push
insb
push
mov
aam
outsb
pop
mov
inc
addb
and
outsb
and
sbb
xchg
sub
inc
sbb
mov
js
adc
mov
push
jne
dec
and
pop
jne
movsb
jl
adc
push
push
inc
scas
data16
dec
add
or
push
cld
enter
sub
inc
lds
add
js
addl
and
pushf
es
jae
pusha
cld
or
mov
jo
inc
daa
add
cmp
inc
sub
push
arpl
sbb
mov
stos
push
push
into
in
push
pop
test
jecxz
jbe
mov
jb
in
adc
dec
sub
and
adc
nop
inc
cld
jmp
inc
dec
int
or
in
imul
lcall
lret
add
orb
fidivrl
insl
or
shll
jnp
or
sbb
hlt
les
mov
mov
or
dec
call
lea
cmp
das
sbb
mov
sub
push
inc
push
stc
cltd
push
test
or
xor
faddl
pushw
sbb
repnz
sahf
add
out
adc
mov
mov
inc
cmp
ljmp
insl
insb
into
cmpb
add
and
xor
aaa
stos
test
movl
or
andb
std
xor
repnz
sar
ret
iret
imul
std
pcmpgtb
add
int
shrl
movsb
xchg
push
sub
add
and
mov
mov
sub
or
add
ret
sti
in
jle
cmp
js
dec
xor
pop
rolb
add
jg
sub
test
pop
lods
add
cmp
test
sub
out
jnp
cs
inc
aam
adc
jle
push
pusha
lock
aam
sub
pushf
jmp
pop
adc
sahf
mov
jecxz
add
std
or
xor
es
jmp
sub
sahf
pop
int
fldenv
pop
sub
cmpl
insb
mov
add
out
cmpsl
pushf
mov
daa
sbb
les
iret
mov
pop
xlat
inc
sbb
cli
movsb
adc
rorb
cmp
mov
jne
mov
jge
aaa
pop
imull
adc
in
mov
ret
fisubrl
push
imul
add
iret
repz
stos
mov
outsb
add
aas
ja
push
xchg
pop
ja
js
emms
test
or
inc
fs
push
push
andb
rorb
or
out
fsubp
push
aam
les
lods
movsb
aas
sahf
addr16
jmp
mov
js
aas
jns
mov
in
jns
js
add
push
mov
add
and
rclb
aas
jns
neg
mov
inc
push
dec
push
pop
or
out
push
sub
aas
inc
sahf
pushf
push
movsb
add
aas
int3
jb
push
push
test
ret
mov
mov
sarb
push
lret
out
fiadds
cmp
xchg
inc
mov
pop
jnp
call
int3
or
adc
mov
lock
inc
push
es
rorl
movd
or
pop
lahf
dec
hlt
push
add
loope
bnd
push
xchg
nop
add
dec
pop
jecxz
fimull
shll
jbe
pop
lods
outsb
in
pop
pop
sub
lods
call
mov
setns
inc
or
mov
pop
xor
cmp
fmuls
mov
adc
inc
push
jmp
jge
aam
imul
out
push
jne
dec
dec
jp
mov
and
ret
icebp
dec
add
ss
outsb
dec
or
rorl
out
loope
pop
add
roll
and
shlb
enter
int3
aam
sub
ret
ror
mov
push
int3
mov
loop
jp
cmc
pop
call
aad
jge
hlt
sar
push
adc
jo
hlt
sbb
sbb
testb
push
dec
add
mov
dec
in
sbb
pushl
insl
and
mov
call
lahf
and
add
testl
call
sbb
jmp
push
push
faddl
mov
call
adc
je
jns
jmp
inc
loopne
or
add
jl
pop
push
divb
mov
xor
adc
mov
or
jle
sub
out
ds
push
repnz
sub
sbb
hlt
xchg
je
pop
sbb
add
cmpsl
lods
pop
xchg
int3
sbb
or
cwtl
out
and
mov
push
jb
in
and
or
cld
add
push
out
push
add
xor
iret
adc
insb
add
add
cltd
or
lea
pop
and
push
or
xchg
cmpb
fiaddl
mov
ss
addl
cmp
or
pusha
mov
jmp
push
out
push
add
mov
or
rclb
iret
mov
ja
sti
or
add
dec
adc
ss
fmull
xor
jno
sub
sub
lea
arpl
mov
enter
sar
loope
cmpl
adc
mov
and
xchg
and
movsl
pushl
adc
scas
push
adc
mov
cwtl
pop
push
add
cli
shrl
arpl
mov
mov
add
or
mov
fcom
add
inc
cmp
adc
aaa
in
inc
test
pop
sti
lret
and
ret
decl
cmc
jo
jo
in
idivb
push
jb
adc
stos
add
les
inc
ljmp
sub
fs
or
inc
rcrl
scas
test
addr16
mov
inc
js
push
mov
sbb
push
ret
mov
fstl
lret
pop
jl
jmp
fbstp
enter
stos
lods
sub
push
das
cmc
mov
jge
xorb
pushf
dec
cmp
push
lea
inc
jbe
mov
imul
test
popw
or
mov
rcrl
mov
lock
es
std
mov
leave
mov
xlat
add
push
shl
xor
xor
mov
and
scas
xor
inc
loope
in
add
imul
loop
or
push
sbb
or
push
adc
testb
sbb
inc
sbb
push
cld
mov
sbb
fiaddl
sti
sbbb
cld
dec
xchg
xchg
or
push
test
mov
call
adc
jg
sbb
cltd
les
loop
mov
addb
push
cmp
rol
hlt
outsl
jo
add
fcmovu
jmp
cmp
pop
add
mov
push
mov
xor
push
test
or
outsb
stos
cs
and
cli
adc
push
jae
dec
pop
add
sub
rclb
shr
sub
or
sub
or
or
cmc
mov
in
sub
dec
adc
add
xchg
daa
movsb
aaa
xchg
adc
std
pop
xchg
push
cmp
lods
clc
hlt
cwtl
push
jp
arpl
mov
and
or
push
add
shrl
rclb
outsb
dec
jbe
or
rorb
cmc
iret
movzwl
stos
or
les
cs
shrb
sub
pop
add
mov
adc
data16
xor
pop
ja
cwtl
movzbl
outsb
repz
jo
xchg
xchg
imul
cmpb
nop
push
xchg
sub
push
outsl
add
inc
inc
pop
ja
xchg
dec
xor
fcompl
mov
out
dec
aad
cmp
sub
cmpsb
push
popa
ja
or
xchg
clc
push
sub
add
pop
add
sti
add
sbb
mov
cmpsb
xchg
mov
aaa
call
adc
dec
andb
sbbb
jecxz
cmp
nop
imul
mov
pusha
add
js
nop
inc
rcr
cmp
imul
mov
sbb
adc
and
inc
adc
insb
jnp
adc
imul
ss
adc
dec
or
cmp
inc
cmp
daa
es
add
add
add
clc
xlat
in
or
cmp
add
lea
or
xchg
xchg
add
add
add
je
daa
jb
xlat
add
call
push
adc
mov
cmpsb
repnz
js
sbb
add
push
mov
push
movsb
call
test
int3
mov
add
push
cmp
and
in
shrb
mov
iret
dec
shrb
cmp
daa
daa
mov
or
mov
adc
cmp
lcall
nopl
mov
clc
mov
mov
stc
or
jmp
and
in
or
xchg
lret
nop
mov
dec
sbbl
add
cmp
sub
adc
lcall
or
test
in
xor
lret
xchg
dec
scas
xchg
add
call
fcompl
lods
pop
dec
xchg
or
fmuls
rclb
repz
enter
fs
cwtl
pop
xchg
sub
call
aam
enter
cs
xor
imul
add
inc
and
pop
add
fs
arpl
or
in
push
and
add
push
jbe
or
daa
pop
lods
movsb
adc
jecxz
pop
add
test
addl
add
dec
mov
stc
mov
sarb
addb
jbe
into
cs
nop
fwait
rolb
out
or
faddp
lock
push
mov
js
xchg
push
orb
decb
sbb
outsb
xor
xchg
ret
pop
mov
push
xchg
xor
or
nop
orb
rcll
cmp
mov
lods
sub
shlb
mov
mov
or
popa
lahf
add
cmp
rolb
inc
cmp
dec
add
sub
adc
popf
popl
or
jmp
mov
xchg
cmp
cs
pop
sbb
push
ljmp
in
ja
add
add
or
cmp
and
or
add
sub
add
insb
push
lret
xchg
xor
push
nop
sbb
sar
subb
add
xchg
sbb
fidivrl
push
add
add
out
xor
add
jnp
inc
jmp
sub
adc
fidivrs
jb
or
mov
or
sub
adc
mov
test
movsb
xchg
aam
and
xchg
rorl
cmp
add
adc
rcrl
imul
xchg
pop
sub
mov
mov
arpl
adc
ds
or
fcoms
ficoms
add
cli
loopne
sarb
ja
mov
stc
shl
test
cli
movsb
loope
enter
fsubrs
inc
popf
out
and
mov
add
fidivrl
lock
sub
loop
or
xor
xor
or
mov
xor
mov
jbe
loopne
ficoms
popf
pop
push
push
sub
mov
inc
cs
pop
dec
fnsave
inc
cmp
mov
and
pop
shlb
orb
mov
push
cmp
nop
lock
in
mov
adc
mov
fucomp
xchg
cmc
mov
mov
fldl
pop
and
mov
movsb
dec
sti
adc
cli
sbb
and
mov
add
pop
jb
cli
imul
pop
or
lds
clc
mov
push
jbe
adc
insb
into
mov
ret
ja
push
xchg
lcall
sti
push
test
inc
fdivrs
xor
pop
cmp
push
add
inc
mov
cmp
sbb
xchg
mov
mov
shll
insb
push
insb
mov
mov
jecxz
jo
shll
xor
mov
push
movl
jbe
cmc
incb
cmp
std
jne
dec
shll
pop
add
adc
jmp
xchg
add
imul
sbb
push
push
mov
xchg
imul
mov
push
xchg
rcll
cmpl
mov
xor
decl
incb
jb
or
xor
lock
jnp
filds
stc
push
dec
push
and
sub
inc
dec
loop
push
adc
rolb
xor
or
push
call
pop
hlt
leave
mov
cmpsb
add
xchg
fldl
andl
lea
sub
and
movb
xorl
rcrl
push
testl
cmp
inc
cmp
mov
add
ljmp
sub
inc
push
jge
add
jb
mov
cmpb
push
mov
push
mov
add
aas
and
dec
jne
roll
dec
nop
aaa
inc
xchg
sbb
sbb
and
idivb
icebp
mov
inc
jbe
mov
inc
dec
jne
jg
insl
add
scas
stos
mov
jmp
loopne
sbb
pop
mov
jmp
cmp
mov
add
dec
inc
sbb
aam
loopne
sbb
add
xor
stos
push
pop
xchg
je
loop
push
and
xorb
dec
ljmp
and
mov
or
xchg
cmp
out
mov
pop
or
jp
pop
push
sub
ljmp
cmp
stos
arpl
inc
jo
insb
ljmp
add
shrb
add
and
sub
or
or
inc
lock
sbbl
out
pop
mov
sbb
jmp
xor
or
mov
mov
repz
ret
aaa
mov
push
test
out
imul
mov
sbb
dec
push
xlat
mov
popf
jmp
lods
enter
and
jl
rclb
loopne
fwait
xchg
push
test
test
je
std
adc
jle
xchg
rcrb
and
inc
ljmp
ror
test
xor
sbb
mov
aas
stos
cltd
les
cmpl
and
add
cmpl
mov
jnp
test
pop
ret
adc
je
dec
push
andb
loopne
add
adc
mov
xchg
xor
sub
les
sub
and
cld
cmp
mov
je
mov
jo
push
xchg
sbb
pop
adc
cld
cltd
sub
dec
not
pushf
sbb
int3
ljmp
sub
nop
lea
movsb
lods
or
and
subl
add
or
roll
daa
sbb
dec
rcrb
ljmp
push
in
faddl
or
mov
jp
imul
cld
mov
add
dec
test
das
add
jns
dec
add
adc
add
mov
lret
mov
fisttpll
les
addr16
pop
fcoms
pop
jle
pop
or
add
fnstsw
pop
mov
gs
test
pushf
push
mov
sbb
jo
aad
add
or
pusha
sub
mov
insb
leave
cwtl
sti
pop
jmp
mov
mov
insl
loopne
or
clc
ret
or
idivl
dec
add
xchg
pop
sbb
les
hlt
inc
test
dec
imul
inc
je
and
das
adcb
push
inc
or
xor
aas
js
mov
mov
scas
push
jmp
aam
and
adcb
js
inc
movl
inc
or
or
jo
lock
jmp
inc
or
add
jg
ss
or
inc
sbb
out
xor
mov
shrb
xchg
ficoml
bound
out
mov
add
pop
in
push
imul
call
cltd
rcrl
loop
loopne
dec
aad
xor
push
lea
cmp
aas
cmp
push
adc
mov
inc
xchg
ret
loopne
or
test
or
xor
shr
pop
shl
mov
iret
push
adc
lea
jno
inc
and
fadd
imul
nop
add
lds
cmp
dec
je
ret
and
das
xor
adc
jecxz
in
sub
pushf
movsl
dec
lahf
mov
pop
jbe
and
xchg
jmp
loopne
cmp
sarl
rorb
nop
call
mov
jg
lds
adcl
xorl
pop
and
cmpsl
inc
xchg
aaa
inc
mov
xor
cmp
cmp
and
xlat
test
push
daa
inc
or
ljmp
cmp
out
test
push
mov
ja
mov
push
imul
mov
in
and
xor
push
inc
pop
or
enter
pop
jp
loop
jl
lahf
xchg
arpl
mov
add
push
cld
shlb
mov
xchg
sbb
pop
mov
pop
pop
stos
mov
and
lea
shll
dec
fisttps
add
sub
mov
movsl
cmp
add
pop
out
inc
push
sbb
cmp
jle
out
pop
xchg
add
inc
xchg
mov
xchg
mov
orl
mov
rcrl
or
xor
lods
sub
dec
stos
push
inc
dec
mov
add
adc
test
je
rorb
adc
push
fsubrs
mov
push
or
ljmp
push
shll
enter
or
xor
dec
sub
push
insb
test
dec
je
or
mov
scas
sahf
mov
int3
push
cmpsb
mov
into
xor
sbb
add
loop
lods
lods
sub
test
daa
faddl
pop
inc
mov
push
les
je
push
or
test
imul
pop
fsub
sbb
fisubs
or
insb
test
in
dec
and
call
lock
and
mov
lret
into
sbb
add
arpl
out
fstpl
addl
xorl
popa
mov
inc
sbb
jb
fstps
into
das
add
mov
push
dec
adc
cmpsb
add
and
sbb
xor
insl
adc
jmp
adc
jmp
add
mov
pusha
push
push
xchg
jno
cmp
jle
pusha
iret
ljmp
inc
sbb
add
mov
stc
cmpsl
xor
or
xchg
imull
xchg
jmp
cmp
mov
jmp
adc
loope
jb
lods
repz
les
cltd
adc
lds
fmull
fstl
mov
cmp
hlt
xchg
jne
lea
mov
inc
lock
inc
iret
repz
mov
outsb
ja
mov
mov
sbb
out
movsb
lods
push
pushl
mov
pop
mov
pop
push
adc
xchg
xchg
cmpsb
sahf
push
mov
es
aad
into
push
mov
mov
stos
add
inc
add
les
cmp
pop
push
sbb
pusha
push
dec
add
lock
mov
add
cmp
popf
imul
je
push
cltd
jmp
inc
faddl
and
and
sub
popa
push
jmp
test
and
hlt
inc
jp
push
clc
and
ret
and
push
push
test
jmp
jb
and
push
test
cmpsl
and
adc
and
sbb
lock
sub
mov
add
rcrb
adc
test
adc
in
xor
or
ja
push
inc
dec
sub
ret
xchg
inc
push
imul
insb
cmp
or
mov
jo
adcb
adc
push
and
jl
xor
xor
jg
cmp
je
or
lahf
sub
pop
fs
fistpll
mov
sbb
and
mov
sbb
data16
jmp
bound
cmpsl
push
lock
ret
lahf
ret
bound
in
rorl
adc
sahf
sub
gs
mov
popf
fadds
cs
int3
call
sbb
shrb
in
mov
lods
std
inc
shld
pop
push
cmp
cmp
dec
dec
ljmp
movsl
push
dec
mov
sar
jp
push
jp
mov
mov
dec
fwait
or
dec
dec
inc
stc
scas
cmpsl
je
fisttps
pop
sub
lods
jno
idivb
lods
mov
xor
or
mov
fdivrs
aas
mov
into
cmp
gs
cmp
es
shlb
mov
dec
enter
or
das
jnp
lods
fcoml
in
shl
jl
enter
insb
mov
dec
leave
in
jne
jne
or
add
mov
mov
add
mov
sahf
mov
pop
cld
mov
push
lea
mov
cs
mov
xor
adc
call
push
cmpsb
mov
call
mov
or
inc
or
sub
cwtl
sbbl
jne
inc
sub
adc
pop
and
ss
cmpb
in
and
xor
lods
pop
inc
movsl
lahf
inc
insl
xchg
xchg
icebp
pusha
cmp
push
jmp
outsl
loope
rcrl
mov
sub
lahf
mov
push
and
scas
mov
inc
movsb
jp
rcrb
jl
int3
cmpsb
dec
loopne
call
pop
fimuls
scas
jecxz
dec
test
ret
clc
fs
jns
mov
sti
jo
add
push
or
or
adcb
cmc
xor
inc
lea
mov
js
lods
pushf
adc
mov
dec
dec
push
ljmp
sub
sub
cwtl
add
rorb
test
xor
nop
xchg
stc
mov
jo
cld
test
pop
push
add
mov
sbb
or
pop
sahf
lods
mov
jns
xlat
loopne
stos
daa
mov
cwtl
add
jl
pushl
mov
cld
insl
cmp
mov
icebp
push
xchg
add
pop
xchg
pop
sti
movsb
enter
mov
inc
subb
sub
pusha
sbb
mov
or
hlt
pop
xor
adc
lea
jne
push
add
scas
mov
mov
jo
adc
outsl
mov
sub
sahf
pushf
cmp
mov
in
jp
lcall
aaa
and
xor
mov
insl
arpl
jecxz
imul
mov
push
mov
lds
xor
std
inc
filds
notb
shlb
lea
cmpb
popf
mov
fsubrl
xor
cmpl
mov
jae
rolb
mov
pop
mov
mov
mov
in
imul
dec
mov
dec
arpl
and
test
adc
xchg
shll
scas
and
sub
shrb
mov
dec
pop
inc
xchg
shrb
mov
loope
in
xchg
add
jb
lock
dec
mov
sub
add
and
scas
jns
jo
inc
add
sbb
push
xor
loope
jae
mov
push
xchg
ret
sbb
test
push
or
pop
mov
push
fcoml
pop
adc
dec
enter
shlb
adc
xor
jp
cmp
xchg
mov
sub
inc
fwait
push
or
dec
sbb
pop
js
add
adcb
data16
adc
dec
cs
aad
sar
pop
or
nop
jmp
and
test
push
cmc
inc
bswap
enter
je
pop
pop
jge
pop
ret
jle
dec
xor
push
sub
sbb
dec
xor
jmp
sbb
jg
outsl
negl
int3
cmp
mov
jmp
push
and
repz
mov
dec
mov
sbb
inc
jae
adc
fisttps
into
adcl
lods
pusha
sub
add
pop
jmp
pusha
pop
in
addr16
mov
mov
dec
lahf
fstpt
sbb
roll
icebp
mov
je
push
push
mov
inc
call
add
nop
dec
adc
add
lcall
sub
dec
or
rcl
hlt
push
shr
int
and
xchg
mov
pop
mov
dec
and
pusha
mov
pop
and
cmpsl
lock
sub
daa
pop
mov
mov
mov
pop
mov
daa
inc
outsb
lea
adcb
movsl
pop
lret
add
dec
loope
fstps
cmpsl
lods
push
movsl
lods
fsubl
out
xchg
xlat
test
testb
popa
or
push
adc
adc
outsl
mov
push
ds
jne
or
add
mov
sub
iret
pop
inc
adc
push
xchg
xor
movsb
aam
xchg
movsl
mov
xchg
or
xchg
mov
jb
mov
and
jp
lods
pop
xor
repnz
dec
in
push
push
or
mov
lods
sub
out
mov
pop
aam
ret
into
mov
mov
sbb
int3
loope
xor
ja
mov
ret
or
jbe
aaa
sahf
or
jmp
xor
add
add
xchg
arpl
sub
test
movsl
mov
int3
cmp
xlat
scas
mov
xlat
mov
mov
mov
xlat
jge
rorl
xlat
xchg
adc
and
sub
xlat
sbb
jmp
in
sbbl
sbb
int
inc
nop
loope
getsec
add
mov
cltd
inc
cmpsb
test
inc
xchg
adc
ljmp
sbbl
testl
and
mov
in
fistpl
cltd
movsb
repnz
pushf
add
sub
xchg
push
cmp
outsb
or
push
sbb
sahf
pushf
push
cmp
in
fsubrs
arpl
fisttpll
mov
dec
and
cmp
out
add
mov
mov
mov
jb
mov
jb
sbb
mov
mov
mov
int
xchg
mov
inc
je
cmpsl
and
in
or
outsb
add
push
and
and
dec
xorb
fcmovne
jne
iret
lea
arpl
push
jb
leave
iret
movsb
test
push
leave
inc
test
sbb
xchg
pop
outsb
ret
mov
js
or
mov
in
adc
out
jns
fstpt
push
mov
dec
movsl
icebp
nop
mov
inc
ss
addl
or
pop
div
mov
and
mov
inc
add
add
movsl
loopne
ret
je
aaa
or
dec
jo
mov
daa
pop
loopne
or
push
test
sbb
mov
pop
mov
fisttps
pop
push
inc
and
push
sub
push
sbb
out
xor
pop
xor
mov
out
repz
mov
push
jmp
pop
dec
lret
pop
test
mov
jg
mov
or
arpl
dec
dec
mov
aam
sbb
sbb
fs
movsl
dec
shrb
fcomps
andl
jbe
cltd
iret
ss
or
push
in
loop
dec
jmp
loope
dec
ljmp
test
test
jne
push
xchg
adc
adc
and
xchg
dec
adc
imul
dec
popa
push
faddl
das
add
fists
mov
test
negb
in
sbb
out
outsl
rorl
in
jecxz
or
pusha
clc
cmp
cmpsb
shlb
sub
dec
or
rorl
add
add
jo
mov
aaa
sbb
add
or
sbb
loop
jmp
push
pop
or
mov
sbbb
test
inc
loopne
add
adc
jne
mov
neg
stos
cmp
je
cmp
and
cmp
mov
ret
stos
mov
adc
cmc
popf
cwtl
shrb
rcl
add
rcll
stos
rclb
popa
mov
add
cmp
jae
xor
pushf
std
mov
mov
add
popa
std
fsubl
add
popa
loop
outsl
xchg
pop
pusha
mov
and
pusha
and
test
inc
mov
cmp
sti
ljmp
mov
adc
lahf
aas
or
jle
nop
pop
pop
sbb
lret
cmp
xchg
gs
sub
addb
jb
cmp
xchg
push
in
xchg
mov
cmp
pop
pop
jp
mov
pop
mov
adc
rolb
mov
sahf
pop
ret
jl
cmp
arpl
pop
sbb
shlb
or
adc
sbb
sbb
mov
inc
rorb
sbb
sub
or
in
inc
jmp
mov
test
jge
ja
mov
insb
push
clc
cmp
mov
inc
inc
or
push
addb
sbb
aas
adc
popf
jge
or
xor
outsl
mov
jbe
add
gs
sahf
inc
xor
inc
adc
js
aaa
jecxz
dec
orb
loope
mov
add
movsl
xor
push
xlat
insl
ja
out
dec
adc
add
aad
int3
out
mov
mov
in
loope
jbe
sub
and
mov
adc
push
push
push
add
add
lcall
gs
jbe
cwtl
icebp
cmp
enter
or
jne
push
cmp
rorb
dec
adc
adc
jge
cmp
addr16
add
scas
fldl
out
sub
fidivrl
movsl
adc
xor
fidivrs
add
inc
cs
leave
popa
loopne
je
cmp
stos
xlat
mov
push
xchg
or
js
and
pop
or
cld
push
test
jmp
dec
popa
push
pop
out
push
xor
in
test
rcl
cld
add
sbb
rorl
sub
xchg
jnp
mov
and
pop
adc
sub
mov
mov
das
add
jmp
iret
les
xor
xlat
shl
shll
dec
enter
ss
clc
test
xchg
xor
rorl
mov
add
sahf
les
sbb
or
lock
jae
push
and
stos
sbb
jae
lea
cwtl
add
adc
push
dec
ret
das
gs
orl
fisubl
dec
pop
dec
test
loope
xor
repz
sarl
jl
mov
sbb
mov
push
push
je
cltd
call
clc
push
sub
lea
jle
scas
dec
push
fnstenv
xor
loop
int3
andl
std
lahf
mov
dec
in
push
push
pop
push
int
aas
sbb
fadd
mov
nop
mov
dec
js
mov
incl
lock
movw
mov
std
fnstsw
and
xor
outsb
xchg
fs
inc
ds
cld
cmp
jb
push
push
ljmp
inc
call
push
add
xchg
mov
mov
hlt
test
jl
cmp
jge
shl
fs
aas
or
add
aaa
and
xor
nop
pusha
sti
pop
faddl
add
xor
aas
addl
jns
and
das
rorb
and
into
sub
shll
nop
lds
rcrb
adc
add
cmc
jl
cmp
in
fstpt
or
cld
sbbl
push
or
pop
ret
add
shl
add
adc
dec
and
cli
orl
sub
jo
pop
push
cmp
decl
pop
xor
xor
mov
orb
jmp
mov
mov
or
cmc
sub
gs
or
ds
aaa
xor
mov
mov
jne
jmp
or
add
or
je
push
add
movl
sub
add
adc
push
inc
clc
cs
push
sub
idivb
je
dec
mov
or
push
dec
in
aam
push
push
add
aaa
cltd
pop
push
inc
ljmp
pushl
mov
or
mov
hlt
jmp
je
xor
xor
pop
int3
in
nop
clc
sbb
lock
aam
add
dec
out
xor
scas
jmp
mov
cmp
out
mov
add
inc
les
inc
out
shrl
or
mov
dec
sbb
call
xor
orb
or
add
pop
ret
mov
lods
int3
jle
jb
push
sbb
jnp
negb
push
sub
push
lock
jb
mov
int
fs
out
lea
daa
pop
mov
movsl
out
add
fistl
popf
imul
pop
rorb
xor
and
das
inc
xchg
xchg
xor
gs
push
push
jb
pop
sbb
iret
and
addr16
enter
add
jnp
incb
cmp
fldt
loopne
daa
jg
jnp
cmpsb
push
xor
xor
add
fwait
add
mov
addr16
push
fimuls
jge
mov
adc
sub
lret
xchg
xor
cld
xor
cmp
sub
sbb
cmp
aam
adc
enter
mov
bound
add
sub
sbb
dec
wbinvd
mov
mov
iret
jmp
and
mov
pop
adc
movb
or
leave
push
clc
add
inc
mov
rolb
mov
lea
inc
ret
daa
pop
mov
xchg
hlt
div
and
xor
stos
and
push
or
push
lods
js
xchg
add
dec
or
bound
or
mov
lods
push
test
pop
jecxz
xor
add
or
or
cmpsl
jne
pop
inc
pop
dec
leave
xchg
sub
dec
sbb
dec
inc
mov
sub
fcoml
ret
cmp
jle
dec
mov
cmp
push
imul
cmp
hlt
jge
inc
push
sbb
lcall
jne
rol
call
hlt
jl
cli
and
mov
imulb
vpunpckhdq
adc
mov
mov
std
int3
push
adc
jb
shl
aas
xchg
push
add
adc
mov
out
cli
hlt
in
out
pop
jo
dec
fcmovnbe
loopne
dec
rorb
fs
pop
adc
jnp
call
cmp
mov
and
or
rol
mov
mov
jno
movsb
pop
rorl
sti
jle
jns
push
sbb
fmuls
lds
push
xchg
add
aam
sbb
jnp
xor
push
aas
clc
lock
imul
and
and
sbb
mov
or
push
pop
dec
lock
or
mov
or
and
insl
outsb
adc
pop
test
pop
lea
movsl
mov
xchg
inc
adc
xor
outsl
fsubrl
push
hlt
lret
test
jno
fcomps
enter
pop
and
mov
or
add
ret
sub
cmc
test
jmp
pop
push
cmp
shl
and
shr
push
or
jnp
inc
adc
adc
push
lock
mull
out
fisubrl
xchg
lsl
jmp
push
pop
push
push
into
push
cld
out
inc
shr
rcr
shr
rcr
or
mov
repz
dec
in
and
inc
mov
out
jb
out
out
fisttps
cmp
or
cmp
or
xor
and
lahf
xor
or
cmpsb
sub
jbe
hlt
lret
iret
push
leave
sub
mov
xchg
or
sar
mov
adc
dec
mov
jno
adc
push
into
ljmp
and
lahf
inc
imulb
add
sub
xorb
std
jle
sub
out
or
or
sarl
xor
inc
inc
cmpsb
and
add
mov
sbb
cmpb
sbb
mov
ret
ja
enter
jge
add
sub
bound
jo
jge
inc
sub
and
xlat
and
jne
addr16
adc
ds
mov
push
jo
dec
add
sarb
jg
sbb
jmp
insl
or
jmp
or
sbb
hlt
push
cmp
cmp
mov
test
dec
and
and
ret
mov
mov
cld
and
add
dec
adc
ljmp
mov
es
sbb
add
mov
sbb
mov
jmp
inc
adc
pop
pop
adc
xchg
mov
push
enter
sbb
popf
movsl
jnp
pop
dec
push
jmp
inc
cmp
mov
xor
bound
adcb
and
add
dec
es
ds
add
inc
incb
aam
cmovns
dec
aaa
xorl
mov
xchg
jo
xchg
hlt
adc
add
lock
pop
ds
mov
mov
push
jb
mov
enter
mov
inc
dec
ret
loopne
pop
mov
outsb
iret
mov
jp
jmp
scas
rorb
cmp
jl
lret
iret
out
lods
fadds
fwait
adcl
jp
test
out
xor
xorl
or
adc
imull
sbb
xor
jo
push
adc
mov
fcoms
mov
jg
pop
push
dec
mov
mov
sub
mov
or
mov
nop
mov
push
sti
stos
or
pop
and
pusha
xchg
inc
fildll
scas
fs
ret
mov
xchg
test
imul
cld
call
js
cmpsb
cmpsb
adc
cmp
ret
out
arpl
or
xor
mov
inc
outsl
fsubr
push
fistpl
fmuls
cltd
push
cs
mov
push
sub
cld
xor
enter
pusha
jne
and
pop
adc
shrb
pusha
jae
test
adc
pop
cmp
adc
push
or
orl
fdivrs
xorl
lcall
inc
fidivl
push
push
mov
subl
loope
ljmp
imul
xor
pop
inc
mov
jl
cmp
jg
inc
jmp
add
or
fadd
flds
in
mov
imul
lea
push
nop
push
add
cmp
mov
and
into
in
jno
pop
and
je
dec
add
xchg
mov
or
rcll
icebp
cmp
xor
test
or
fsubr
dec
sub
push
xchg
push
adc
and
or
incl
shll
roll
push
or
dec
cmp
leave
dec
loop
cmpsb
loope
shr
je
dec
out
outsb
lods
movq
push
dec
adc
push
and
xor
jg
idiv
jl
outsl
inc
or
jbe
jle
xor
es
jg
jg
jo
mov
std
stos
les
mov
sbb
pop
fists
lea
lea
inc
out
js
and
aad
shll
fiaddl
testb
or
xor
enter
or
ds
ret
mov
bound
shrb
lret
ret
mov
and
sbb
shr
dec
adc
cmp
sar
xchg
loopne
sbb
push
add
inc
inc
adc
lea
daa
adc
mov
call
dec
inc
push
cltd
mov
inc
mov
shlb
push
and
adc
nop
test
enter
fs
sub
and
shll
stc
sbb
pop
stos
cwtl
std
and
pop
inc
mov
ret
dec
in
jmp
out
shl
sbb
sbb
aad
inc
frstor
jl
jns
adc
add
ficompl
scas
jnp
adc
pop
sub
pusha
push
inc
mov
add
jbe
add
jno
add
adc
rcll
mov
orl
mov
inc
and
adc
add
mov
pop
addr16
xchg
sub
inc
test
imul
repz
clc
mov
pop
cmp
or
sub
cmp
insl
rclb
mov
stc
loopne
addr16
pop
insl
rorl
inc
addb
orb
push
adc
pop
test
mov
and
stos
into
std
cwtl
popf
or
and
or
sub
hlt
jo
push
je
ja
inc
sti
xchg
cli
adc
lea
add
divb
pop
mov
or
xchg
mov
xor
pop
jl
btc
and
xor
mov
adc
add
insl
in
or
inc
add
jmp
sbb
fiadds
addr16
add
enter
jp
shrb
adc
js
xor
adc
in
inc
sti
insl
or
mov
dec
and
ss
sub
jno
add
jno
push
or
or
ljmp
jp
in
mov
ljmp
out
cmp
leave
ds
xchg
fimuls
jmp
push
push
sub
es
ds
mov
jnp
enter
movsb
rolb
imul
arpl
icebp
out
in
pop
adc
push
jl
imul
rolb
inc
addb
aad
or
iret
dec
je
outsl
pop
je
test
sbb
mov
mov
push
jnp
add
mov
addl
ljmp
inc
or
add
mov
mov
pop
inc
pop
jp
adc
mov
sbb
je
iret
andl
ds
push
sbb
mov
pop
mov
pop
aam
fiadds
in
je
sub
aaa
mov
inc
ds
cwtl
fldt
add
xor
sbb
or
das
mov
and
mov
jmp
pusha
or
lcall
out
pop
push
cmpb
jo
lret
or
mov
cmp
jnp
pop
loop
lock
inc
adc
add
or
pop
loopne
and
lock
cmp
lods
add
fcoms
cmp
andb
jge
loope
sub
add
and
adc
out
push
lea
push
or
and
testb
pop
imul
das
insb
xor
dec
adc
fnstenv
sbb
test
call
and
aaa
sar
addl
xor
jmp
xor
popf
pushl
leave
mov
out
ret
cmp
cmp
or
push
ss
xchg
mov
push
add
xchg
subl
add
inc
mov
inc
push
push
nop
repnz
imul
test
inc
mov
mov
cmp
dec
pop
daa
test
loope
and
or
lods
mov
cmp
bound
or
xchg
inc
jmp
push
mov
cs
sbb
sbb
xchg
ret
loope
lea
and
add
cs
push
add
cmpsb
add
mov
pop
xchg
push
cmp
clc
add
mov
inc
sub
push
arpl
and
xchg
incb
loopne
sti
jmp
andl
jmp
mov
test
xor
test
sbb
sub
mov
mov
sub
or
cmp
xor
xchg
jmp
popf
shl
dec
push
in
jbe
bound
lahf
imul
jnp
fisttpll
lock
jo
adc
sbb
insb
loope
or
jmp
adc
clc
pop
jge
fdivp
sbb
push
mov
add
jmp
in
nop
add
jne
dec
dec
jae
imul
sbb
in
mov
or
push
pusha
cmp
jmp
and
outsb
mov
rclb
bound
pop
push
sub
adc
orl
pop
add
imulb
addb
stos
push
cmp
mov
lods
sub
pusha
popa
jmp
jg
stos
pusha
and
cmpsl
loopne
je
mov
push
jge
sahf
pusha
loop
es
mov
push
sbb
jo
in
loope
dec
mov
incb
dec
mov
add
sbb
lret
jmp
sub
je
test
or
iret
pop
cwtl
inc
divl
clc
cmp
and
mov
ja
lock
cmp
or
mov
dec
cmc
jecxz
push
push
int3
je
clc
inc
jmp
cmp
pop
xor
fsub
dec
mov
dec
adc
daa
or
push
das
push
shl
pushf
push
fsubrs
cwtl
test
xchg
test
add
mov
pop
push
sbb
test
jo
les
cmp
adc
rcl
stos
sub
lods
add
jnp
jbe
sub
xor
xor
jne
loopne
cmp
lods
cld
or
fsubrp
lods
sarl
add
ret
add
pushf
imul
mov
jb
mov
fadds
add
enter
movsb
into
divb
sbb
out
out
mov
into
mov
roll
mov
mov
sub
and
pop
mov
push
or
sub
aas
into
ja
mov
mov
and
pop
inc
testl
pop
cmp
dec
les
dec
into
fiaddl
jne
cwtl
and
pop
cmp
cld
cltd
xchg
or
inc
adc
jo
pop
mov
or
sub
test
push
pushf
push
push
lea
lcall
add
mov
add
sub
ret
xor
cmp
jb
adc
inc
mov
pop
jns
pop
sbbb
incl
cmpl
insl
mov
negb
jg
in
sbb
push
es
add
sub
mov
jle
or
add
or
fcom
aam
gs
adc
dec
lods
add
or
shr
sbb
mov
push
in
std
mov
jae
bound
or
adc
inc
mov
dec
test
or
into
sbb
mov
add
shrl
shl
shr
or
mov
insb
imul
sahf
dec
mov
jne
outsb
mov
dec
outsb
adc
adc
push
cmp
sub
jne
loop
pop
push
cmp
lock
rcr
fiaddl
sub
jo
mov
fwait
loopne
ljmp
jmp
or
mov
mov
ret
fs
nop
mov
sub
add
and
cltd
jl
dec
int3
int3
jmp
out
jp
jp
or
daa
mov
xchg
dec
push
dec
into
jmp
lods
xchg
cmpsb
jno
pushf
rolb
and
les
inc
lods
add
pushf
sbbb
xorb
lret
mov
xchg
pop
jns
mul
test
sbb
add
pushw
push
movups
les
pop
mov
inc
mov
inc
in
push
js
xchg
xchg
add
jnp
mov
out
faddl
dec
adcb
fstl
push
stc
popf
jo
jecxz
push
adc
rcll
sbb
add
testb
adc
sbb
mov
sarb
subb
nop
clc
lods
lods
sbb
jg
inc
sub
add
cmp
or
push
aaa
and
pop
adc
nop
push
cmp
add
int3
pop
in
ja
lret
adc
and
movsl
jno
cmp
punpcklwd
inc
pop
sub
fistl
inc
jo
jns
sbb
rolb
or
mov
add
repz
cmpsb
test
push
xorl
aas
out
pop
imulb
es
pop
push
sbb
jge
mov
rclb
dec
jg
loope
mov
mov
adc
je
dec
add
lods
pop
xor
popfw
push
push
sub
inc
jne
arpl
jg
pop
je
sti
mov
inc
adc
out
dec
movsl
and
out
inc
sub
iret
lahf
inc
inc
jo
mov
rcl
aaa
and
psadbw
pop
imul
jg
adc
divb
pop
mov
xor
xchg
add
sub
jbe
and
loopne
mov
inc
inc
xorl
ret
jle
fcmovnu
test
push
push
mov
bound
add
and
dec
ja
shr
add
adc
adc
push
sbb
bound
or
adc
pushfw
clc
and
xchg
rcrb
loopne
push
imul
adc
cld
push
or
cmp
mov
jb
adc
jg
jmp
lea
push
andb
adc
into
or
inc
inc
pop
movsb
cli
mov
xchg
mov
xchg
and
add
rcrl
pop
lock
loope
inc
cwtl
xchg
push
sbb
lcall
cmp
sarb
push
loopne
sbb
jmp
push
cmp
xor
cmp
ret
mov
jno
add
add
pop
dec
cmp
or
div
test
test
jmp
mov
popl
call
lea
add
leave
sar
mov
and
mov
add
pop
clc
dec
adc
call
mov
outsb
or
nopl
xor
lock
adc
mov
sub
sbb
insb
mov
mov
pop
xor
ljmp
imul
xor
pop
pusha
popf
jbe
cmc
cmp
cmpb
push
push
cmp
test
xor
loope
push
push
sub
imul
ficomps
mov
and
std
hlt
or
or
fs
lock
mov
add
incl
cmp
push
hlt
mov
andl
cmp
and
jmp
data16
adc
sti
out
in
nop
loope
lret
add
cld
cmp
fsubs
movsl
test
lock
xchg
pop
inc
push
push
xchg
lock
call
jmp
les
inc
outsb
adc
push
dec
hlt
cmp
cwtl
push
fmull
cmp
fwait
jnp
push
imul
or
scas
lea
xor
jnp
faddp
mov
jns
pop
add
xchg
mov
cmp
sbb
insb
mov
add
push
or
sbb
mov
inc
mov
nop
cmp
and
clc
add
xchg
mov
rol
mov
sbb
mov
imul
pop
mov
lds
lock
dec
je
aad
mov
ret
add
fadd
sbb
pop
sbb
call
jb
iret
jmp
mov
mov
inc
mov
sbb
fldt
cmp
dec
mov
xchg
mov
or
lret
ss
loope
pop
adc
cmp
subb
mov
cmp
jne
bts
jno
add
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
mov
inc
or
ret
sub
enter
mov
insb
pushl
push
or
movsl
pop
lock
or
jae
in
pop
subb
jns
adc
fiadds
into
jg
push
in
sbbl
mov
pop
cwtd
mov
fdivrs
test
movsb
inc
imul
cmpl
add
pop
cmc
push
mov
roll
xor
sbb
lahf
pop
stc
cmp
add
add
jmp
mov
test
popf
test
shrb
push
or
add
sub
adc
es
add
add
popf
and
sbb
and
xchg
jl
xor
sub
push
jo
lret
jmp
cmp
adc
mov
cmp
push
adc
stos
sbb
aas
push
jae
adc
inc
lods
cmp
lret
mov
lcall
jne
adc
sub
xchg
mov
mov
or
jno
xchg
pop
jmp
mov
xor
lahf
dec
xor
or
or
push
addr16
jmp
cmp
inc
pusha
in
lcall
push
test
adc
pop
in
mov
in
or
mov
add
jl
inc
aam
orl
fisubrs
jmp
sbb
ss
pushf
xchg
xor
lahf
lods
iret
and
mov
fwait
test
cmpsb
adc
mov
push
inc
fimuls
and
sbb
dec
pop
int
inc
pop
add
push
movsb
daa
xor
mov
mov
insb
and
aam
pushf
push
or
fcompl
add
faddp
mov
and
cmp
mov
jmp
imul
stc
aam
xchg
push
xchg
jno
mov
jmp
pop
xor
dec
pop
lea
lds
cmp
jle
and
add
push
jmp
test
test
enter
jl
loop
jg
stos
jmp
addl
js
pop
sbb
jl
cmpsl
jmp
fs
and
out
es
add
jp
mov
cltd
jo
add
mov
pop
inc
ljmp
jb
mov
enter
and
or
and
and
cld
cli
adc
push
mov
mov
lds
les
dec
addl
jne
push
dec
jecxz
or
loope
jmp
xor
adc
lods
in
jle
push
jl
sub
and
xchg
ret
push
pop
and
movsl
pop
pop
cwtl
adc
dec
jecxz
cmp
and
pop
add
sbbb
jo
cmp
xchg
data16
test
out
cltd
add
jb
sub
outsl
add
test
fstpt
push
es
clc
ret
sbb
pop
shl
mov
cmc
mov
mov
mov
test
test
inc
dec
test
dec
out
jl
sbb
andl
xchg
mov
xor
pop
xor
mov
push
cmpb
sbb
jmp
or
push
int
or
jne
push
aas
mov
inc
int
xor
pop
dec
adc
or
and
xor
icebp
add
mov
cmp
mov
xor
pop
jg
adc
push
push
xor
mov
jne
or
xchg
dec
fmuls
mov
sbb
sub
push
push
add
jne
cmp
cld
lret
or
cmp
jno
adc
add
ja
or
mov
adc
pop
adcl
dec
arpl
adc
js
jl
cmp
add
cmpb
cmc
int3
push
cmp
icebp
imul
add
mov
push
lcall
adcb
sbb
pop
jl
insb
mov
xor
lock
mov
cmp
jg
cmpb
xorb
add
ror
or
dec
fsubrl
jne
push
clc
push
scas
rcll
jp
hlt
dec
mov
adc
jmp
xchg
xchg
sbbl
sub
add
jmp
nop
sbb
rorb
je
jae
out
dec
imul
mov
push
pop
jl
dec
sbb
test
mov
pusha
push
jno
insl
pop
mov
jo
loopne
fnstsw
sbb
pop
lahf
inc
lret
insl
lods
push
in
and
add
xchg
sahf
cld
cwtl
jae
add
lcall
or
sarl
jne,pn
sbb
inc
fs
insl
paddusw
fcoml
les
sbb
cmp
mov
mov
lods
push
sbb
cli
fsubr
frstor
push
icebp
hlt
adc
xchg
addb
push
loopne
jmp
cwtl
inc
xor
jo
mov
push
add
sub
push
daa
push
adc
clc
adc
xor
orl
add
mov
xchg
inc
cmp
roll
stos
out
xor
cmpl
sub
fmuls
fcoms
pop
mov
or
add
sbb
adc
adc
or
stc
jb
push
flds
mov
or
sub
call
in
push
movsl
and
add
adc
int
popa
clc
and
add
mov
and
sbb
je
xor
sub
lods
push
xor
mov
add
sbb
or
loope
pop
or
rep
or
cmc
je
arpl
mov
mov
ror
lock
add
jne
dec
adc
cmp
cld
mov
jne
mov
sbb
iret
sbb
cwtl
push
or
nop
fidivrl
cli
sbb
xor
jb
cltd
cmp
insb
xchg
push
lods
test
cwtl
adc
cmp
pushf
mov
movsl
in
pop
push
mov
dec
inc
cmp
int
arpl
and
jp
data16
sub
sub
sbb
xor
movsb
cmpsl
xchg
cld
or
imulb
cmp
dec
or
mov
cmp
pop
adc
ljmp
in
ja
inc
movsb
shlb
cwtl
js
pop
fidivrl
fstl
cmp
jae
add
push
sbb
fildl
push
adc
lds
mov
popf
push
icebp
rcll
dec
jne
stos
out
roll
cmp
xlat
or
nop
arpl
ret
sub
cmp
jle
push
adc
add
je
ljmp
outsl
sbb
rol
cmp
test
adc
outsl
cmp
cld
dec
jg
cmp
or
inc
inc
mov
test
lods
push
gs
jb
sahf
loop
jo
push
in
mov
sbb
mov
and
test
adc
fwait
xor
sbb
sbb
push
inc
inc
int
jb
shlb
push
or
in
ss
adc
ss
leave
leave
and
sub
ror
leave
xor
cmp
dec
fwait
push
sbb
inc
inc
setae
push
push
in
in
pop
add
in
in
insb
jo
add
jl
xchg
dec
rcrb
mov
and
xchg
cwtl
xor
and
pushf
mov
dec
test
shlb
enter
xor
sarb
xchg
dec
fsub
in
xchg
dec
es
es
lock
clc
and
pushf
fs
add
add
mov
loopne
add
xor
adc
adc
sbb
cltd
fs
and
sub
fs
dec
xor
cltd
orb
inc
gs
xor
inc
es
dec
mov
and
dec
push
pop
pop
and
dec
xor
pop
jmp
adc
push
stc
cmpsb
push
rorb
cs
pop
or
mov
mov
movsb
xchg
pop
mov
inc
shll
xchg
sub
repnz
adc
adcb
xchg
pop
sbb
xchg
dec
and
xchg
xchg
cmp
jns
lods
inc
mov
and
dec
mov
dec
mov
std
enter
pop
notb
mov
sub
rcrl
push
and
fbld
or
jmp
rolb
mov
bnd
cmp
dec
outsb
rcrl
dec
jmp
cmp
or
adc
mov
ljmp
and
dec
pop
negb
test
and
add
popf
inc
cs
or
bound
shlb
pop
not
xor
loope
xor
and
leave
and
shr
xchg
fcompl
in
shr
and
jo
and
and
scas
aam
js
lock
add
enter
adc
add
test
hlt
mov
xor
xchg
or
or
push
mov
lcall
incb
mov
std
or
jmp
inc
and
mov
fcmovnu
dec
mov
aaa
jecxz
sbb
xor
fwait
out
jmp
xchg
jmp
test
lea
adc
and
stos
jp
or
aaa
jge
je
mov
mov
flds
and
neg
neg
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
push
loopne
call
insl
dec
in
fstp
ds
and
fldl
cmp
cmpsb
xor
cmp
testb
push
cmpsl
repnz
pop
adc
sti
add
or
fists
xor
mov
xor
xor
scas
ret
mov
loope
das
cltd
or
sub
je
jmp
push
and
and
pop
notl
cmp
and
andb
mov
mov
sub
and
or
int
aaa
add
inc
flds
fstps
jmp
fst
adc
pop
lea
aaa
lock
test
adc
orb
fcomi
adc
loop
sub
jmp
sub
scas
adc
xor
or
and
ja
cmp
and
or
and
inc
hlt
pop
dec
push
sub
mov
scas
mov
sbb
fstl
mov
dec
jmp
sub
cmp
mov
sub
jmp
sub
push
push
shr
psubusw
inc
test
into
adc
sbb
sub
lds
ret
mov
jnp
nop
and
rcll
loop
sarl
cli
xchg
test
cwtl
inc
and
hlt
jge
ffree
repz
addl
jmp
add
add
shl
cli
repnz
ss
or
stos
je
fstl
mov
xchg
test
mov
shrl
scas
lock
dec
inc
pop
orl
rcrl
nop
loopne
or
push
push
pop
jmp
pop
push
rolb
jno
lcall
cmpsb
mov
faddl
leave
mov
movsb
or
sbbb
pop
shr
jle
push
add
or
shll
sbb
cmpsb
push
sbb
jle
adc
push
fists
push
repnz
test
add
and
add
sbb
mov
dec
ret
lods
mov
cmp
je
add
jl
xor
add
jge
lods
call
test
rcrl
cld
sbb
hlt
rorb
inc
cmp
and
sub
mov
mov
sbb
out
stos
and
ja
sti
add
or
fstpl
add
in
jmp
jno
out
pop
gs
inc
and
dec
xchg
mov
loopne
inc
mov
xor
fnstsw
or
sub
or
lahf
es
cmc
jo
ret
insl
orl
sub
adc
mov
mov
lock
in
inc
add
add
add
hlt
les
aas
pusha
rcpps
pushl
mov
fcoml
sub
push
das
mov
adc
pop
arpl
mov
add
data16
cmp
notl
loopne
sub
jl
push
jnp
loop
or
add
sbbl
adc
je
loopne
sbb
into
sbb
cmp
sbb
mov
xor
mov
xchg
xchg
sub
call
shll
push
lret
lock
or
imul
decb
mov
add
fsubs
into
pop
xorb
jmp
lods
sbb
test
hlt
pusha
push
inc
lahf
les
push
enter
jge
dec
out
fld
fucomp
pop
flds
ret
lret
pop
out
mov
mov
jne
orl
aad
and
mov
sbb
shll
and
push
or
inc
mov
dec
fisttpl
push
or
push
out
mov
das
fsubs
jne
push
jp
push
or
push
and
imul
fsubrs
sub
push
lret
inc
cmp
push
pop
dec
in
dec
ljmp
popf
fstsw
movswl
mov
loop
inc
fsts
cmp
add
and
rol
xchg
mov
fcoml
fldcw
push
push
mov
loopne
mov
fdivr
fcmovnbe
fwait
ja
or
adc
sbb
imul
or
add
nop
call
movsb
fldpi
xor
in
outsb
std
or
enter
push
icebp
test
jg
inc
je
sbb
scas
and
ss
loopne
movsl
pop
mov
mov
andl
orb
pop
shlb
and
jns
mov
inc
jl
test
js
incb
sub
sbb
add
dec
jo
sub
adcb
add
mov
test
lock
shlb
jbe
mov
inc
movsl
mov
add
das
push
mov
fidivrl
es
outsl
aas
mov
test
cmc
mov
pop
rclb
add
shlb
sarl
or
adc
xor
xor
sub
pop
aaa
addr16
je
mov
pop
mov
cmp
mov
push
sti
jbe
sub
mov
lock
call
repnz
mov
enter
or
add
loope
fists
lods
pop
jno
jge
add
loope
rcrl
cmp
or
test
dec
or
fisubl
imul
dec
push
or
cli
and
dec
add
aas
and
pop
sub
cmovne
rcl
mul
in
adcb
test
jbe
jl
lea
dec
jp
push
fs
xchg
rcr
cmc
lock
stos
jp
pop
pop
sbb
jmp
in
cli
jno
loopne
sub
push
adc
pop
add
adcl
scas
inc
jns
dec
or
fwait
mov
inc
lea
pop
xor
lret
ljmp
push
mov
cli
lret
loop
rolb
cmpl
int3
and
mov
pop
and
mov
out
mov
dec
or
inc
adc
iret
mov
insl
lea
cmp
loopne
subb
pop
cmp
jb
cmp
dec
inc
lahf
jmp
sub
adc
inc
fldt
loopne
xor
jp
test
out
sub
ss
mov
stos
jns
and
rolb
and
pop
mov
sub
push
fdivrl
cmpl
add
xchg
and
scas
push
add
pop
or
loope
inc
or
ljmp
push
dec
xor
cmp
xorb
xor
push
loopne
fmul
shl
add
jg
sub
sub
not
push
add
loopne
pop
popf
jb
mov
and
pop
ds
or
and
aam
out
or
xchg
mov
test
jl
inc
rorl
pusha
pop
sub
loope
add
sbb
mov
or
add
pop
dec
jns
sub
dec
lea
push
shlb
faddl
jno
jmp
adc
dec
rol
add
clc
xchg
out
or
inc
rcrl
dec
xor
mov
or
and
lods
mov
lods
fsubr
xchg
hlt
mov
jb
push
pop
add
inc
repnz
incb
aam
mov
xchg
movsl
loop
jns
cmp
and
jo
hlt
push
aas
mov
shrl
push
xor
inc
cmp
fldl
dec
mov
movsb
arpl
push
aam
mov
adc
cmp
ss
roll
adc
popa
loopne
repnz
sbb
or
clc
ja
sbb
gs
shlb
mov
jl
stos
iret
and
mov
or
sub
rorb
push
rolb
and
xchg
dec
lret
push
fimull
lods
shl
test
cld
ret
pop
pushf
iret
or
or
dec
add
inc
or
push
jp
imul
jne
and
or
mov
adc
or
enter
adc
mov
inc
movsl
repnz
mov
test
dec
cmp
mov
adc
dec
pop
xchg
lea
push
arpl
mov
stos
jae
push
or
or
stos
inc
faddl
std
mov
icebp
cmp
mov
inc
mov
mov
push
inc
mov
mov
shll
subb
push
repz
or
insl
lds
add
pop
stos
adc
xchg
xchg
adc
inc
lods
std
pop
jnp
cmc
or
ss
cmp
je
or
call
cld
aas
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
lock
inc
mov
shld
inc
add
call
subb
shll
aaa
pushf
lret
sub
or
sub
into
adc
dec
add
adc
or
inc
mov
xor
push
add
adc
mov
outsb
test
notl
add
adc
inc
inc
lret
les
mov
sbb
fadds
je
jne
xlat
movsl
outsl
dec
mov
or
jo
fdivs
or
add
mov
loopne
sarl
je
inc
add
push
into
rorb
inc
les
sbb
sub
mov
push
jbe
push
aas
xor
orb
imulb
cmp
add
push
or
cld
mov
clc
add
sbb
shlb
add
add
lods
xor
xchg
jmp
sub
add
cmp
je
popf
sbbb
sahf
inc
movsl
push
and
mov
mov
dec
jns
neg
movb
fs
xchg
icebp
or
out
imul
xchg
push
in
add
or
push
add
cs
sbb
add
push
push
sub
jns
lock
push
orl
mov
jmp
pusha
cmp
or
dec
add
dec
iret
ret
jmp
add
lret
leave
or
ret
jge
xchg
sub
adc
bound
mov
outsl
fists
shlb
inc
mov
pop
push
inc
mov
inc
aam
lods
add
push
jmp
xorb
lods
jne
sar
icebp
and
and
push
fadd
sub
shrb
and
xor
stos
inc
fcoml
lret
shl
in
and
lea
xchg
sbb
jbe
adc
push
push
mov
enter
sbb
xchg
sahf
dec
jl
ss
cld
push
and
dec
daa
push
rclb
lret
andl
imul
xchg
incb
pop
test
loope
test
pop
xor
sub
or
or
outsb
pop
daa
aad
cmpb
jbe
sub
add
clc
pop
test
enter
js
subb
cltd
movl
push
popa
xlat
inc
dec
sub
leave
and
add
insb
movb
mov
and
mov
mov
mov
fstpt
mov
icebp
add
lock
ret
es
shll
add
xor
xor
inc
aam
sub
add
cmp
call
xor
scas
and
add
jb
cmpsl
or
shlb
sbb
insb
ja
imul
hlt
nop
dec
xchg
mov
sub
adc
es
push
clc
lods
pushf
pop
xchg
ret
or
sbb
sub
shlb
insb
bound
cmp
lds
dec
fs
cld
add
hlt
shrd
sbb
dec
cmp
pop
inc
jge
sbb
clc
cmpsb
in
mov
jmp
cmp
add
dec
jmp
cmp
ficompl
cmp
and
jl
inc
fs
incb
push
adc
push
sbb
ljmp
or
sbb
push
sbb
push
and
ljmp
sarl
jg
xor
fdivl
xor
jmp
mov
sub
fimull
sbb
loop
jl
xor
jb
jbe
aaa
sub
addr16
add
mov
xchg
orb
mov
or
add
mov
mulb
inc
dec
pop
xchg
xor
sbb
mov
add
jl
or
cmp
rcr
jnp
inc
jo
in
in
ja
cmp
mov
fldl
or
test
sbb
cmpb
cmp
inc
or
std
add
pusha
sbb
movw
adc
jp
fimull
xor
xor
in
idivb
cmp
push
sbb
mov
push
imul
push
inc
sub
add
inc
or
xchg
jns
neg
call
iret
cs
xchg
inc
or
or
inc
cli
ret
aaa
push
lods
mov
add
sbb
mov
adc
pop
push
xchg
fisubl
push
adc
pop
repnz
je
aad
mov
jbe
jl
test
add
rcrl
mov
loopne
mov
addb
push
cmp
adc
out
jae
rcll
addb
fs
push
divb
push
cmp
insb
mov
push
and
sub
xor
roll
mov
cmp
leave
loopne
xor
sbb
insl
lods
push
stos
push
or
test
dec
out
js
jl
xor
cmpsb
sub
inc
or
sub
sub
stc
mov
mov
adc
push
add
popf
jmp
xor
rolb
testb
clc
gs
or
pop
data16
pop
add
sub
insb
fs
inc
popa
je
inc
je
dec
xchg
pop
mov
sbb
pop
std
jmp
cmp
mov
add
adc
add
call
adc
push
jo
mov
push
add
pop
shl
push
ret
push
jge
mov
arpl
ret
pop
cmp
mov
mov
pop
hlt
dec
inc
lods
xlat
sub
inc
mov
and
adc
bnd
cmpb
jne
jnp
sub
push
and
push
xchg
rcrl
push
xor
jle
jmp
adc
adc
bound
sub
add
cmp
jp
push
mov
xchg
cmp
je
push
or
cmp
sbb
mull
fwait
mov
dec
sub
mov
jg
loopne
fbld
lea
inc
jmp
and
push
clc
add
push
loopne
pop
inc
push
les
pushf
shll
and
roll
pop
jne
push
movl
mov
mov
cld
jg
fistl
push
sub
and
leave
subl
jge
dec
jne
mov
push
push
push
leave
inc
ljmp
mov
pop
sub
outsb
das
subl
cmp
push
cmp
dec
insl
jbe
or
ljmp
push
ret
cs
adc
push
push
iret
test
jmp
insl
fwait
push
jg
push
adc
mov
cmpl
sbb
addb
lock
or
push
sbb
rclb
mov
adc
and
loopne
imul
pop
pop
pop
pop
pop
data16
dec
shlb
cmp
xchg
nop
icebp
add
dec
xchg
jb
pop
jb
test
nop
inc
ss
mov
xchg
jne
sub
je
dec
je
and
scas
dec
push
push
jmp
or
jmp
cli
xchg
aam
ljmp
mov
jmp
mov
lcall
xor
dec
jno
ret
fisttps
and
add
sbb
data16
movsb
mov
int3
or
loopne
rclb
xor
jo
and
or
mov
lret
add
xor
dec
xchg
pcmpeqw
adc
mov
aas
and
cmp
je
mov
hlt
ss
inc
mov
outsl
lea
or
inc
add
stos
cmp
fs
inc
stc
and
and
sub
and
mov
xor
loope
ret
push
fimuls
sbb
mov
pop
mov
mov
adcb
fldenv
inc
inc
mov
cltd
pushf
and
cwtl
mov
cs
sbb
add
mov
or
sbb
call
push
mov
rorl
or
sbb
lret
aaa
pop
push
repz
clc
shr
add
or
daa
stos
add
pop
or
mov
push
adc
mov
call
and
add
mov
mov
test
notb
lock
cmp
or
mov
add
movsl
insl
insl
and
leave
inc
jbe
adc
movsl
fldl
jl
in
sbb
cmp
add
dec
pop
add
pusha
rcrl
mov
and
ja
inc
fisttpl
cmp
xchg
pusha
sbb
out
bound
push
push
push
xor
lret
push
jns
into
clc
xorb
jl
add
rolb
jbe
sbb
xor
nop
xchg
inc
test
mov
cltd
cli
out
mov
and
xchg
xor
fs
leave
rcrb
or
push
pop
cli
ficomps
adc
xor
push
xchg
nop
jle
dec
les
mov
sub
cmp
movsb
dec
push
mov
incl
cmpsb
or
xchg
or
mov
pop
je
data16
sub
popf
push
ja
nop
outsb
je
sti
addl
adc
pop
add
push
mov
and
or
je
dec
hlt
adc
fwait
jo
enter
js
loope
push
push
mov
pop
lret
and
rorb
add
or
pop
or
lret
xor
sub
pusha
cltd
xchg
or
pop
bound
int
push
mov
or
iret
xchg
inc
cmp
sub
and
daa
add
fisttps
insl
rcr
orl
push
mov
stos
mov
pusha
sbbb
pop
movsl
punpcklbw
add
popa
movsl
daa
lock
push
add
insl
pusha
mov
pop
jb
scas
inc
mov
add
sbb
scas
add
add
sub
mov
xor
fs
mov
mov
sbb
lret
or
clc
xchg
sbb
sbb
daa
mov
adcb
inc
bound
add
and
cmp
je
add
mov
sub
movsl
loope
ret
faddl
outsb
and
dec
cmp
push
jno
imul
sbb
fildl
ss
push
add
and
add
pop
call
or
jmp
ss
dec
mov
call
ss
adc
imul
inc
dec
push
mov
pop
cltd
inc
outsl
pop
shrb
pop
inc
cmp
dec
add
sub
mov
cmp
jle
inc
and
or
sub
sub
pop
sbb
out
inc
mov
pop
inc
push
xor
mov
mov
js
cmpb
jl
shrb
xor
xor
mov
inc
aam
push
fstl
xchg
add
jne
or
push
pop
push
push
call
aaa
push
mov
loopne
imul
mov
rorb
inc
and
dec
mov
ljmp
mov
jmp
data16
cmp
jne
push
or
xchg
adc
jo
jmp
inc
dec
add
mov
in
aas
add
adc
rorb
push
adc
adc
fprem
out
sti
jmp
std
roll
leave
add
je
mov
pop
loopne
iret
adc
cmp
push
inc
les
or
ret
jge
bound
rolb
movsw
sti
jge
xchg
add
add
add
loopne
lea
mov
and
add
or
and
lea
sbb
or
rclb
mov
jge
inc
inc
testl
neg
sbb
sub
jns
sbb
inc
sbb
aaa
xchg
sbbb
sbb
xchg
adc
sbb
push
push
inc
and
fldenv
fcomi
sbb
xor
dec
sbb
sbb
and
add
jns
xor
fwait
dec
jne
pop
pop
pop
pop
add
or
int3
or
mov
and
lods
rcl
ljmp
dec
and
shr
sub
adc
aas
inc
xorb
idiv
and
jo
fdivr
lock
je
push
js
rclb
cmp
push
sbb
out
sub
into
add
pop
fildll
jae
adc
dec
push
enter
mov
xorl
mov
hlt
das
push
or
aad
and
into
jbe
jne
inc
pop
aas
xorb
movsl
das
hlt
adc
and
aas
shlb
or
push
pusha
mov
xor
add
mov
movsb
outsb
cmp
paddusb
test
sti
in
dec
or
or
push
ret
or
add
xchg
adc
gs
sub
test
shrl
add
imul
fldl
repnz
rolb
cmpsb
imul
jnp
add
adc
cmpsb
je
cltd
movsb
cmp
cld
mov
aam
adc
fcmove
jne
pop
sbb
inc
jmp
push
add
add
ja
pop
loop
das
popa
imul
inc
sbb
add
push
xchg
mov
or
adc
shlb
mov
je
decl
jl
out
push
cmp
ja
add
and
adc
cmp
jne
es
adc
adc
mov
nop
and
inc
jl
pop
pop
je
adc
jmp
adc
lods
orb
cld
cs
sbb
lea
push
and
shlb
test
int
or
fdivr
aas
loop
lods
in
pop
push
movb
jmp
or
pop
nop
scas
and
sbb
sbb
cmp
pusha
sub
push
jl
push
mov
or
push
pusha
movw
jb
add
ss
addl
sub
adcl
into
testb
sbb
cmp
push
add
mov
pop
mov
fdivr
inc
ja
dec
je
or
sub
orb
push
mov
incb
push
add
xchg
out
add
fwait
aam
push
pushf
mov
sarb
dec
push
shr
shr
mov
imul
lea
sar
call
mov
insb
pop
scas
movswl
pop
neg
push
jnp
cmpsb
xchg
push
ljmp
cwtl
fiaddl
add
popf
ss
iret
shl
fldenv
sub
cwtl
inc
adc
jnp
ss
rcrl
mov
rcll
lea
pop
lods
xor
add
jl
mov
test
jl
decl
jle
jo
andl
push
les
pushf
loopne
adc
scas
adc
loop
or
mov
and
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
loope
mov
ja
and
cli
rcrb
loopne
xor
call
in
ljmp
fs
inc
or
cmp
cmp
mov
rolb
lods
xor
mov
sub
lea
xchg
stos
rclb
mov
test
or
sbb
mov
sahf
push
pop
imul
movsb
push
arpl
sub
dec
mov
data16
xchg
mov
mov
fistl
jne
mov
repnz
and
rorb
mov
lret
add
mov
loope
push
mov
gs
add
shr
or
and
rorb
sbb
pop
mov
or
call
clc
mov
sahf
cmc
add
mov
inc
int3
shrl
loope
shr
or
mov
cli
jmp
xor
imul
xor
mov
dec
and
test
testb
sahf
cmpsl
mov
dec
cli
cli
inc
cli
div
pop
sbb
pop
add
jp
add
mov
loopne
sbb
ret
incl
sahf
les
cli
adc
in
xor
lahf
call
ficoml
sub
sub
jmp
sbb
push
fidivl
fldenv
enter
add
aad
jg
or
rcll
divb
sbb
sbb
lock
lea
push
negl
inc
repnz
pushw
sbb
sbb
clc
out
jge
inc
inc
xchg
jb
popa
test
popf
pop
fcomip
dec
dec
in
aam
movsl
test
adc
adc
jne
sahf
fisttpl
ss
inc
shlb
fmuls
rcrl
aam
int3
movsb
enter
and
jge
add
mov
les
sbb
ljmp
xor
sub
push
pop
fmull
or
push
lret
sub
and
fnstcw
mov
insl
test
cmpsb
arpl
cli
mov
sub
xchg
add
or
xor
add
adc
enter
jg
or
adc
mov
mov
out
or
add
fs
jge
mov
jb
or
pop
nop
movsb
jmp
add
xchg
pop
add
ljmp
and
nop
sbb
ficomps
lret
mov
pusha
add
xor
pop
test
sbb
mov
sbb
push
std
pushl
push
cmp
jle
push
pop
outsb
call
xchg
sub
and
and
or
pop
xchg
push
mov
adc
shl
rcrb
xchg
cli
pop
inc
inc
leave
lods
mov
sahf
mov
clc
mov
adc
neg
and
mov
insl
call
jecxz
imul
loopne
fcoms
in
push
pusha
lea
push
and
mov
push
in
cs
mov
pop
dec
inc
add
add
int
mov
push
sar
sub
ljmp
or
adc
and
cmp
dec
sub
inc
cmpsl
inc
lcall
stos
ljmp
sahf
mov
aam
shlb
add
sub
test
fisttps
push
call
add
add
loopne
inc
sbb
or
mov
inc
ljmp
jmp
orb
dec
ret
hlt
mov
sub
cmp
jge
sub
cmpb
or
mov
lock
dec
cmp
add
dec
ja
jb
add
add
fadds
add
cmp
ret
fidivrs
jne
dec
mov
jb
int
rolb
or
in
jbe
xor
lret
or
loopne
adc
jp
ret
adc
inc
or
pop
imul
add
test
lcall
stc
stos
inc
inc
call
and
add
push
test
ret
or
adcb
or
add
repz
add
stos
adc
or
push
pop
scas
cmp
je
push
ret
sbb
adc
mov
and
push
ret
or
xchg
adc
and
push
sub
add
fimuls
ss
mov
mov
or
pop
cmp
xor
into
pusha
lods
add
rcl
sub
and
pop
pop
bound
pop
cmpps
prefetch
mull
mov
adc
fcomps
push
rolb
push
xor
push
jne
or
or
push
add
add
add
cmpl
push
or
add
mov
pop
jle
lret
pop
or
adc
xlat
push
pop
sub
ja
mov
jle
jne
fs
lahf
out
and
mov
shll
inc
jl
jge
out
and
filds
push
pusha
push
or
scas
clc
sub
cmp
shlb
out
and
jo
clc
mov
lock
je
jnp
or
cmp
scas
orl
adc
sub
subl
add
shl
inc
mov
loopne
sub
pop
or
mov
mov
xor
in
add
or
add
or
xor
mov
adc
xchg
jp
mov
mov
iret
xor
sbb
xor
inc
jg
into
cmp
into
mov
out
test
call
jg
or
xor
pop
sahf
pop
mov
aam
cmp
mov
cmp
and
or
sbb
stos
cmp
movl
mov
or
add
leave
out
jecxz
push
cltd
adc
lock
and
xchg
fildll
pop
test
mov
and
cmp
mov
popf
ret
cwtl
cmp
inc
sub
jmp
mov
mov
pushf
jb
xchg
lret
ljmp
mov
out
dec
jo
ljmp
mov
adc
fnstenv
scas
add
test
add
or
clc
xchg
add
mov
into
lret
dec
gs
mov
mov
sarl
push
jl
test
push
fadds
jge
clc
add
lret
cmp
fs
cmp
jo,pn
or
mov
fimull
push
sbb
dec
adc
or
jno
sbb
jbe
dec
or
sub
loope
cld
mov
into
cmp
je
mov
cld
scas
push
sub
cmp
jb
cmp
jbe
pop
aas
or
sub
jmp
push
jl
movsl
pushf
xchg
loopne
int3
xchg
mov
ljmp
leave
scas
inc
pusha
test
fisubrl
mov
loope
pusha
pop
pop
ja
sbb
inc
adc
repz
or
dec
pop
and
popa
inc
or
inc
popa
test
aam
jp
test
push
add
pop
mov
nop
aas
adc
loopne
xor
js
incl
aad
aam
lds
xor
mov
test
push
aaa
pop
and
xchg
add
xor
fadds
mov
or
add
test
cmpsl
push
pop
lret
xor
cmp
inc
dec
sub
add
iret
adc
dec
sub
daa
or
push
test
jnp
cs
push
cmp
sbb
push
mov
clc
push
xlat
or
ret
hlt
cmp
add
or
pop
xor
fldenv
sub
ret
sar
ficompl
xchg
pop
jmp
push
outsl
push
aas
mov
gs
sbb
adc
and
dec
mov
push
cmpsl
and
stos
sub
and
sbb
adc
adc
inc
test
loope
aaa
jno
dec
cmp
test
add
call
push
outsb
jo
je
ss
ret
push
adc
notb
aad
add
pushf
inc
and
mov
insb
cmp
pop
xor
ret
mov
push
sbb
mov
and
sbb
lds
dec
in
sbb
push
repz
clc
cli
jle
mov
das
jne
jns
out
jg
xor
sub
adc
push
mov
xchg
add
enter
ret
dec
lea
add
add
cmpsl
mov
incb
add
lock
dec
mov
lea
push
mov
jle
dec
cmpsb
loopne
jmp
dec
fs
adc
mov
and
sub
ss
cmp
or
js
orb
sbb
sahf
or
mov
out
xchg
aam
loopne
sbb
inc
insl
push
test
sbb
pushf
iret
pop
cmp
push
cmp
push
mov
sub
add
sbb
dec
rclb
and
and
popa
mov
adc
scas
sbb
fsubrs
or
and
xchg
pop
cmp
jbe
aas
inc
lods
push
push
push
mov
inc
adc
sub
movsl
pop
int3
or
dec
sbb
pusha
sbb
inc
fs
inc
add
ret
sub
cmp
or
mov
add
in
pop
shlb
fcomps
popa
lea
arpl
adc
add
jge
mov
inc
les
jge
rorl
xor
lret
arpl
mov
sub
push
push
sub
dec
imul
sub
push
mov
or
fs
outsb
sub
push
and
cwtl
movsl
dec
in
or
push
add
push
inc
nop
pop
push
jmp
add
mov
les
add
sbb
movsl
or
sub
in
mov
rorl
clc
xor
sbb
pop
pop
push
lcall
adc
mov
jo
fldt
rol
pop
rol
dec
jnp
push
sarl
mov
ja
ret
cmpsl
inc
popa
xchg
push
pop
or
aas
pop
push
xchg
mov
add
jecxz
aam
insb
popf
or
mov
inc
es
dec
or
and
fs
test
dec
add
jbe
bound
push
add
inc
adc
sbb
leave
adc
mov
inc
inc
pop
or
popa
or
xor
sbb
insl
loop
shrb
or
xchg
outsb
or
sbb
sbb
sbb
bound
aas
les
inc
in
add
es
mov
or
ret
add
sub
cmp
pop
mov
add
jle
cld
adc
daa
inc
loop
mov
pop
out
sub
lret
or
rclb
push
rorl
mov
mov
xchg
in
dec
xor
jns
adc
ret
aas
sahf
or
push
and
mov
scas
dec
cmpsb
cmp
push
push
int
xor
fists
push
and
add
pop
sbb
and
movsb
cltd
push
mov
fisubrl
clc
pop
enter
add
iret
mov
jg
xchg
int3
sar
addb
pop
cmp
mov
call
pop
pop
pushf
enter
fwait
mov
add
add
test
xchg
rclb
or
push
fucomip
mov
xor
std
outsw
movl
add
push
xor
arpl
sbb
adc
push
shl
imul
rclb
mov
and
fnstenv
popf
adcl
push
jmp
imul
fidivrl
dec
sub
outsb
mov
fsubrp
sub
popf
rorb
nop
dec
inc
imul
dec
loope
adc
cs
jge
cmp
jle
aas
or
movsl
jge
adc
add
loop
mov
sbb
cmp
ja
inc
fcmovnbe
mov
ljmp
cwtl
xchg
repnz
sbb
lret
outsl
inc
jne
xchg
scas
jo
out
jp
pop
add
push
repnz
dec
test
xchg
pusha
lret
jne
pop
lock
jbe
imul
xchg
icebp
xchg
shr
jne
das
icebp
cmp
push
pop
sub
imul
jecxz
add
loopne
mov
fadds
push
scas
cmpsl
mov
mov
mov
fiadds
adc
xor
lods
add
in
data16
push
repnz
nop
and
dec
push
insl
jne
jb
lea
or
lock
jp
test
js
or
xor
and
push
add
pop
fs
lods
or
or
test
rcrl
or
sub
fcoml
inc
loopne
pop
cmp
cmp
sti
jns
mov
fwait
xchg
and
jle
sbb
mov
fwait
adc
or
dec
cmpl
mov
cltd
pop
jbe
or
imul
cmp
bound
mov
or
shrl
cmp
rorl
mov
mov
cli
mov
shr
sbb
fwait
sarb
cmc
and
jecxz
ds
cltd
testl
rcrl
pop
cmp
mov
movsb
lret
fnsave
push
and
and
push
sti
jne
inc
sbb
sbb
pop
fimull
inc
or
mov
xor
imul
sbb
test
pop
shrb
push
jae
push
hlt
pusha
ret
loopne
leave
int
cmpsl
mov
add
in
push
or
jl
mov
test
push
add
add
adcl
add
or
stc
sbb
mov
loopne
cmp
sbb
xor
fsubrp
sbb
mov
pushf
add
or
out
add
fidivl
push
push
add
dec
repnz
mov
jg
aas
fistpl
fs
pop
jl
or
push
mov
pop
dec
pop
test
fstl
push
mov
dec
loopne
push
xchg
or
sub
cmp
aad
cmpsb
lcall
and
pop
sarb
sbb
les
mov
adc
mov
mov
loope
out
repz
loope
fdivs
add
loop
push
movb
cltd
or
inc
cmpxchg
outsl
andb
imul
or
cld
pop
xor
cmpsb
pop
adc
cmp
jae
loop
ljmp
lret
cmp
jg
out
dec
shrb
dec
rcl
add
xor
dec
cmp
mov
es
inc
adc
sub
cmpsb
jmp
and
inc
jae
push
pop
outsb
fcomps
pop
mov
movsl
push
stos
ds
cmpl
iret
adc
mov
movsl
and
lcall
sbb
mov
sbb
ret
or
dec
sarl
sub
in
nop
xor
sub
andb
adc
or
dec
imul
test
inc
fbld
or
xor
lods
dec
inc
addb
divb
pop
add
repnz
xlat
mov
and
mov
add
adc
es
push
js
incb
pop
mov
pop
je
xor
aam
aaa
add
cmpl
popf
add
sub
jl
std
add
ss
jmp
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
movsl
xor
arpl
add
inc
push
rcrl
dec
dec
sbb
push
ss
cltd
cmp
mov
adc
cli
and
jecxz
or
adc
adc
mov
loope
cmp
leave
dec
lahf
xor
mov
dec
je
dec
jne
push
sbb
orb
jmp
loopne
inc
mov
cmp
adc
cmp
xorb
mov
faddl
jne
push
sub
jmp
daa
ss
aaa
lds
cmp
dec
cli
inc
movsl
mov
in
cs
arpl
mov
xor
shlb
adcb
mov
mov
loopew
add
stc
cs
sbb
aas
xor
push
clc
or
rol
and
or
movsl
push
xchg
lods
cmp
ss
pop
inc
hlt
push
push
jbe
inc
cli
push
jb
dec
dec
sbb
loop
or
cmp
rcrb
jp
je
add
scas
lods
pop
add
mov
add
daa
inc
push
push
mov
cmpb
call
lea
testb
jne
add
xchg
int
and
mov
xchg
mov
loope
mov
arpl
popa
insb
insl
pop
pop
sbb
loopne
mov
add
popa
or
jl
push
push
cmp
out
mov
sbb
and
sbb
push
xor
out
xchg
pushf
das
or
cmp
adc
sbb
adc
roll
xlat
add
test
xchg
loopne
rol
mov
adc
pusha
push
push
mov
xchg
and
fcomp
inc
orb
rcll
or
mov
pop
and
popf
fcompl
fs
scas
mov
lock
jle
sahf
dec
add
jnp
pop
mov
mov
push
adc
dec
add
and
adc
or
or
fmuls
ret
xchg
clc
int
jg
jg
push
and
addb
adc
cmp
cmp
inc
xor
lock
imul
add
cmp
jg
notb
cld
push
mov
and
nop
lea
sbbb
pop
cmp
mov
jbe
add
sub
call
adc
orl
jg
jmp
adc
push
xor
outsb
push
ss
and
and
add
dec
cmp
aam
push
jge
jb
insb
ret
bound
cmpsl
push
cmp
scas
gs
or
jg
lds
adc
jg
jae
scas
shll
sub
push
popa
and
jns
inc
bound
xchg
pop
scas
and
dec
js
mov
test
mov
stos
add
test
jbe
inc
lret
sbb
stos
push
stc
pop
sti
push
mov
and
call
sub
adcl
fidivrl
inc
rclb
aas
cs
outsl
cmp
mov
adc
xlat
je
clc
das
lock
mov
and
cmp
int
mov
inc
cli
xchg
divb
push
adc
inc
add
cmp
or
dec
jne
jge
push
fiadds
jbe
jmp
inc
addl
je
cmp
pop
jg
cmp
cmp
jbe
clc
int3
xor
push
push
or
scas
sub
or
push
mov
xchg
call
fwait
mov
push
and
sbb
jg
or
push
or
mov
and
dec
mov
lods
pop
fisttps
mov
pop
es
mov
mov
subl
pop
cltd
dec
inc
es
iret
std
rcrl
sub
mov
mov
mov
cmp
imul
lret
ret
or
inc
xor
in
frstor
add
popa
and
sbb
pushf
mov
sbb
aaa
mov
mov
lahf
inc
dec
test
add
add
adc
inc
sbb
or
lahf
jne
add
inc
jb
in
add
dec
cmp
mov
scas
std
add
pop
enter
fst
mov
xchg
xor
add
push
push
inc
jmp
cmpsl
aas
pop
pop
inc
pop
inc
sub
xlat
jle
xor
dec
fdivs
aaa
adc
add
ret
js
mov
and
fld
fstps
add
enter
insb
add
popa
pop
or
inc
jl
jmp
jns
fstps
icebp
xor
rolb
mov
xor
ret
sub
das
jbe
imul
add
and
pop
sbb
or
pop
mov
gs
xchg
jecxz
pusha
enter
aaa
mov
leave
inc
or
call
lea
mov
cmpsl
or
sarl
pop
fadds
xor
mov
jg
mov
pop
push
and
or
out
add
lods
pop
pop
pop
and
xchg
out
add
adc
lcall
clc
shl
and
jl
cld
cmp
sub
insl
int
xor
push
sub
in
adc
mov
sti
mov
out
dec
inc
xchg
in
in
mov
lock
add
pop
mov
pop
mov
inc
adc
loopne
int3
mov
cld
add
shlb
and
inc
push
loope
adc
add
xchg
mov
add
mov
ret
pop
mov
fdivrl
addb
arpl
roll
inc
sets
std
lds
shl
push
sti
add
inc
pop
fsub
cmp
ja
cmp
aaa
andl
cvtpi2ps
or
lock
jb
call
fnsave
aad
sub
fstpl
xor
mov
fimull
and
jbe
shl
fimuls
dec
mov
stc
adc
dec
mov
inc
adc
mov
mov
insl
sbb
fdivrp
pop
adc
push
adc
sub
or
jbe
cltd
pop
xor
xchg
push
inc
pop
mov
xor
out
sbb
ja
and
cmpsl
jne
mov
xchg
add
mov
adc
nop
mov
mov
orb
cmpb
lods
pop
dec
push
loopne
or
cs
jecxz
and
enter
add
sub
aam
fisttpll
enter
les
jae
stos
xorl
xchg
cwtl
stos
adc
sbb
in
lods
sbb
ja
lds
lahf
cmp
outsl
jge
es
ficoms
pusha
fs
fs
push
fs
dec
js
add
negb
fmull
lret
call
roll
jnp
repnz
icebp
jge
shr
mov
adc
out
cmp
and
rclb
and
mov
pop
jne
gs
mov
jb
pop
jecxz
lock
mov
divl
xchg
inc
cmp
sub
mov
test
ret
sbb
mov
mov
jl
ds
shlb
pop
in
mov
dec
adc
js
and
add
cmp
lcall
or
sbb
push
icebp
pop
xchg
int3
inc
xor
fldt
jp
mov
clc
in
addl
in
adc
test
or
fistpl
int
fwait
pusha
adc
adc
nop
pop
cwtl
sbb
xor
dec
shll
adc
inc
inc
add
and
daa
or
out
fildl
adc
cmp
ret
push
movsb
popf
adc
lock
fmuls
mov
cmpsb
rolb
or
loopne
inc
jno
aam
insb
push
in
add
fsts
ja
and
dec
lock
jp
stos
test
stos
in
mov
insl
mov
loopne
nop
adc
in
dec
mov
pushf
or
jb
fsubrl
xlat
pop
xor
mov
mov
inc
dec
pop
mov
mov
in
adc
add
inc
xchg
mov
clc
shr
out
sub
xchg
jge
xchg
loop
outsb
cmp
adc
clc
rolb
or
gs
outsb
mov
and
jne
xchg
call
and
add
xor
push
mov
pop
push
dec
ret
adc
cmpsl
xchg
add
sbb
add
or
add
popf
sbb
xlat
es
cmp
shl
mov
fucomip
fdivr
add
dec
adc
adc
adc
push
call
cmpsb
sbb
fisubl
je
sub
adc
fildl
mov
adc
inc
dec
dec
addl
lods
add
add
js
mov
push
sbbl
mov
fidivl
decb
sub
adc
and
mov
push
adc
popf
out
pop
lret
add
ficoml
in
cwtl
out
in
or
cli
fstps
lods
add
inc
add
loopne
subl
cmp
js
nop
fistpll
adc
ja
fistps
xchg
scas
nop
or
popa
inc
mov
inc
movsb
adc
aam
dec
sarb
mov
pop
cmp
aad
in
ret
jne
lock
or
mov
in
cmpsl
and
lock
iret
lock
test
xchg
mov
subl
mov
in
in
call
xor
adc
bswap
mov
inc
icebp
cmp
sbbl
xlat
sbb
in
xlat
and
clc
test
je
nop
sbb
ljmp
lods
loop
mov
push
popf
mov
in
in
xor
jne
xor
mov
addl
outsb
add
add
orb
rol
or
xchg
test
sbb
xor
push
in
shlb
sbb
les
repz
cmp
xlat
adc
and
pause
or
fmull
adc
mov
dec
jmp
test
ret
cmp
push
lcall
xchg
and
mov
and
and
or
xor
in
inc
retw
or
or
or
inc
cs
leave
imul
or
enter
or
and
cmc
cmp
and
int
adc
mov
daa
nop
jo
aad
mov
cmc
lods
add
cltd
inc
mov
cmp
mov
or
sbb
rorb
inc
inc
xchg
frstor
scas
cmp
push
rorl
inc
arpl
fwait
push
and
lds
pushf
sbb
adc
test
mov
cmp
div
inc
sbb
mov
xchg
inc
test
andb
or
and
inc
xchg
add
negl
mov
or
inc
inc
scas
loopne
add
test
loop
pop
cmp
lock
sbb
xlat
adc
jae
clc
dec
ja
shlb
loope
aaa
adc
add
xor
adc
adcb
test
mov
jl
jno
ret
push
lds
and
pop
push
fcmovbe
stos
shlb
push
add
inc
pop
clc
inc
enter
mov
andb
cmp
daa
daa
comiss
scas
bound
pop
mov
mov
push
pop
stc
mov
sbb
cs
call
adc
stc
call
shlb
adc
mov
inc
movsl
imul
subb
ja
test
adc
push
cli
mov
inc
add
cli
rcl
mov
ja
vpsrlvw
sbb
les
dec
pop
enter
in
add
dec
pavgb
mov
fbstp
shlb
sub
std
movsb
sbb
mov
xor
or
pusha
or
add
or
and
mov
pusha
pop
in
dec
adc
jb
adc
adc
std
inc
mov
add
es
loop
sar
clc
jg
add
and
enter
jne
jge
mov
movq
cmp
aad
adc
cs
mov
loopne
mov
icebp
lock
jmp
adc
call
mov
dec
cmp
sarb
push
add
add
or
or
push
push
les
push
or
adc
xor
fptan
test
and
mov
or
adc
stos
adc
xchg
or
cmp
or
sbb
imul
das
jns
mov
add
ljmp
adc
ret
in
dec
cmpsb
mov
pop
adc
mov
sbb
pop
and
and
ret
cmp
add
mov
das
mov
push
rolb
test
cwtl
stc
mov
mov
jae
and
add
mov
or
lock
pusha
je
or
adc
xorb
sbb
dec
xor
sub
dec
es
fiaddl
and
jne
movsb
in
push
or
dec
push
in
movsl
dec
adc
push
pop
pop
inc
int3
xor
jnp
pop
aam
enter
mov
inc
push
dec
dec
mov
push
add
mov
mov
adc
adc
and
pop
inc
les
push
arpl
xor
mov
mov
jne
shrb
les
leave
add
cmp
jge
lcall
or
push
adc
pop
or
cmp
fmuls
enter
push
jmp
aas
jl
aam
in
and
fsubs
add
nop
xchg
test
push
or
add
in
or
subl
jae
jp
adc
mov
mov
unpcklps
jne
mov
fsubs
or
ret
aas
outsl
mov
pop
xchg
addl
lea
mov
mov
call
sub
in
mov
push
loop
jmp
cmc
lcall
mov
xchg
or
leave
and
pushf
mov
test
lods
cmp
mov
aad
mov
xchg
sub
add
jl
jnp
or
xor
test
adc
sbb
insl
mov
mov
aaa
inc
aam
push
imul
xor
lods
insl
pop
aaa
ja
stos
cmc
push
cmp
sarl
enter
adc
movsl
mov
dec
test
mov
test
ret
fnstcw
pushf
add
sbb
leave
push
cmp
call
jb
or
aam
and
xor
shlb
mov
fcoml
pop
lods
dec
sbb
lea
sub
mov
sbb
pop
cmp
inc
lock
add
inc
fldcw
dec
lcall
push
or
cwtl
lds
adc
xchg
lods
adc
mov
pop
or
test
nop
mov
add
ljmp
lahf
ja
popa
add
lock
int
push
xor
push
xchg
push
js
loop
add
ss
pop
jae
add
jns
mov
in
insb
pinsrw
cmp
or
inc
outsb
pop
call
das
and
test
int3
add
inc
aam
in
push
test
inc
fmul
dec
jns
dec
and
xchg
stos
inc
add
pop
mov
in
fs
scas
rclb
out
jnp
popf
cmp
or
pop
or
imul
adc
aad
adc
sub
stos
push
popa
adc
sub
push
jecxz
push
fldcw
subl
ja
and
xor
xor
xchg
jae
sti
or
aad
mov
adc
inc
xor
sbb
add
add
inc
ret
push
cmp
cmc
push
lods
and
push
mov
sub
or
sti
pop
mov
push
dec
adc
test
lock
xor
shr
call
notl
pop
sbb
imul
roll
dec
xorb
xchg
je
leave
adc
and
sub
movsb
pop
mov
pop
mov
xchg
scas
mov
test
fdivs
and
and
push
aam
cwtl
inc
xchg
mov
adc
sbb
sub
in
mov
adc
adc
stos
test
lods
xchg
data16
mov
sub
add
adc
inc
or
and
sub
rorb
xchg
sub
sti
aam
cmp
xchg
push
push
mov
or
sub
mov
or
mov
pop
rclb
jmp
sub
popf
jae
daa
in
inc
pop
cs
dec
rorb
gs
mov
inc
nop
and
mov
xchg
aam
test
loope
inc
mov
repz
adc
enter
lds
test
divl
test
addb
sbb
aas
pop
jno
pop
pusha
mov
lea
aad
add
sbb
mov
xlat
inc
sub
xor
push
add
pop
xlat
lea
aad
add
push
jmp
aad
addb
test
int
lock
cmpl
sub
jne
movhps
les
test
gs
push
jne
jns
unpcklps
aas
cmp
xor
icebp
sbb
and
sbb
cmp
pop
mov
adc
in
jmp
sbb
addb
jae
pop
inc
ret
jns
jmp
rcll
sbb
mov
das
and
dec
or
test
add
sbb
test
scas
ret
jbe,pt
mov
mov
scas
jge
andl
test
popf
movsb
xlat
mov
gs
push
mov
pushf
mov
adc
andb
stos
pop
xchg
push
sub
repnz
push
cmp
sbb
or
test
dec
aam
inc
push
sub
bound
xor
mov
inc
mov
adc
pop
jle
out
add
js
and
inc
addb
mov
push
out
xchg
sbb
jl
cmp
jb
dec
das
ret
adc
sbbb
jl
cmp
push
xor
pop
js
movsb
test
mov
mov
shll
stc
push
sbbl
push
dec
cmp
lods
cld
or
xor
push
and
or
pop
sbb
ret
nop
cmp
es
cmpl
aam
adc
and
push
jb
and
cmp
test
notb
xorb
enter
test
and
inc
mov
jo
or
or
push
cwtl
rcl
fnstenv
imul
or
cmp
sub
pop
in
inc
scas
movsl
pusha
faddl
bound
dec
inc
sti
jno
or
inc
mov
aaa
mov
lea
rol
xor
xchg
mov
ja
imul
or
mov
xchg
repz
loope
or
bound
inc
fstpl
sbb
mov
clc
fwait
and
xor
cwtl
jecxz
cmp
repnz
leave
mov
inc
es
jp
testl
icebp
xchg
add
es
test
mov
push
push
insl
pop
pop
add
adc
leave
mov
push
pusha
adc
xchg
dec
xor
cmp
xchg
dec
xor
and
cmp
orb
xor
sbbb
pop
xor
cli
imul
push
sbb
push
testb
add
and
cmp
aaa
das
add
mov
inc
or
dec
and
sub
xchg
dec
pop
in
sub
inc
or
xor
cmp
xor
bound
add
pop
add
sub
push
inc
jl
dec
jb
or
jne
xor
pop
push
inc
xchg
cwtl
adc
sub
jge
fwait
mov
nop
push
pusha
rcr
lods
add
cwtl
test
sub
in
inc
adc
or
lock
jnp
dec
pushf
dec
mov
loopne
enter
ret
xchg
outsb
adc
cmpsb
ret
int3
arpl
pop
int3
mov
in
rcl
jns
cltd
popa
mov
outsl
in
mov
stos
add
adc
loop
sub
cltd
pop
pop
xchg
dec
cmp
fstpt
and
dec
fs
lock
insl
sbb
rorb
insb
in
popa
push
xor
aas
out
lea
mov
cmp
bound
mov
dec
jbe
test
fdivs
insl
daa
mov
dec
add
insb
lods
cs
pusha
jae
in
bound
ja,pn
xor
sbb
mov
inc
jbe
mov
sub
leave
out
and
mov
pop
push
sbb
pushf
and
adc
and
ret
xor
mov
or
sbb
mov
test
lds
cmp
sub
test
pop
mov
imul
sub
and
mov
mov
es
sub
jo
data16
cmp
dec
mov
stos
out
sbb
test
xor
std
add
add
test
push
roll
cwtl
test
aam
in
xor
mov
cwtl
xor
cmp
push
inc
adc
xchg
in
mov
gs
loop
daa
in
mov
sbb
notl
sub
fimull
enter
jl
test
sbb
shlb
jo
in
int3
addr16
add
xor
jnp
sub
lds
jmp
cwtl
mov
aad
dec
in
jns
lahf
bound
adc
imul
sub
add
cltd
test
push
dec
xchg
xor
add
and
test
rolb
cld
xor
orb
and
ja
pop
xchg
adc
pusha
getsec
test
lods
push
movsl
bound
add
test
and
add
imul
xchg
dec
xor
rcll
inc
or
xor
sbb
push
aam
pop
pop
sbb
scas
lods
jbe
aam
pop
aam
mov
sbb
fbld
or
out
fildll
aam
lods
sbb
or
rclb
pushf
adc
cmp
fs
ret
mov
push
add
adc
test
or
mov
orl
cmp
mov
dec
push
cmp
shll
fisttpll
dec
sub
shrl
or
cmovae
cmp
roll
ret
add
nop
mov
sbb
jb
inc
xchg
js
orb
cwtl
adc
test
mov
push
sbb
adc
push
pushf
add
in
shlb
lods
test
mov
xchg
out
mov
and
dec
jb
pushf
pop
xchg
bswap
cmp
cmp
enter
jb
cmp
test
lds
jb
or
and
pusha
aam
dec
pushf
fmull
test
sbb
test
in
mov
pushf
pushf
shlb
and
sub
mov
shll
iret
js
cmp
test
cmp
in
jmp
leave
aad
out
jl
test
sbb
jno
xchg
add
inc
and
or
pusha
and
pop
shrb
mov
add
pop
sub
in
sbb
or
jge
xor
daa
inc
mov
adcl
pop
les
popa
inc
dec
pop
pop
adc
imul
dec
mov
lea
push
push
or
xor
les
test
xchg
inc
js
dec
sub
inc
and
push
bound
lcall
orb
cmp
xchg
sbb
mov
mov
inc
insb
pop
dec
inc
dec
rolb
push
push
pushf
mov
xor
ja
imul
loope
push
leave
imul
pop
shrd
mov
shrl
jge
jns
cmpl
addr16
cmp
gs
rcl
es
inc
idivl
dec
adc
or
sbb
leave
and
adc
pusha
mull
or
push
dec
jb
movsb
aaa
or
adc
aad
das
sub
dec
ss
push
pop
sub
andl
jbe
dec
xor
lds
add
mov
scas
sub
inc
and
mov
aam
mov
sub
leave
pop
inc
shrb
fldl
mov
stc
rolb
sbb
in
pop
dec
out
invd
shll
or
mov
fsubrs
or
rolb
inc
adc
inc
jmp
fidivrl
leave
ds
dec
or
int3
pop
pcmpgtb
inc
cwtl
pop
xor
sarb
xchg
shll
mov
loope
test
shrb
xchg
sbb
xor
orb
pushf
mov
mov
adc
orb
scas
shrb
xor
xor
stc
les
mov
mov
jno
inc
movsb
test
and
fs
imul
or
es
pushf
xchg
ja
sub
xchg
rcrb
aas
xchg
pop
adc
mov
dec
jb
int3
pushf
mov
scas
popa
sub
inc
sub
aad
jo
leave
jle
sbb
subl
fwait
movsb
inc
imul
leave
xor
push
mov
sahf
mov
repnz
repnz
repz
and
scas
lods
sub
insl
mov
mov
ss
mov
das
and
rcrb
jl
mov
xchg
dec
push
nop
movsb
dec
xchg
ds
mov
imul
sub
or
pop
mov
std
jo
not
push
pop
sbb
sarl
je
jo
lock
sbb
rorb
push
jecxz
leave
dec
test
pop
enter
js
mov
in
in
or
arpl
sub
repnz
cld
sub
push
and
popf
pop
in
lods
adc
fcoml
movsb
sub
cmp
jg
insl
xchg
xchg
xchg
cmc
in
sti
leave
and
ret
fists
inc
es
in
and
inc
sub
sub
push
movsb
or
mov
push
clc
mov
into
push
mov
dec
jb
cltd
add
icebp
shr
inc
shll
or
lds
and
test
leave
cmp
test
mov
xchg
in
int3
rorb
pop
orl
lds
mov
sbb
xchg
adc
sbb
pop
mov
add
bnd
enter
cmpsb
dec
in
fstps
mov
insl
inc
sbb
sub
adc
das
lods
sub
add
pop
dec
into
inc
mov
in
dec
cmp
mov
xchg
adcb
sbb
xor
mov
out
stos
push
xchg
fcompl
fcomp
sbb
sub
push
mov
adc
nop
pop
test
dec
in
jno
jne
lret
cmp
dec
push
cmp
and
mov
adc
and
or
rcrb
pop
pop
xchg
mov
and
orl
or
push
jno
push
inc
mov
test
test
pop
add
sub
or
loope
adc
hlt
or
and
dec
mov
and
ficompl
orl
jge
sbbb
pop
addl
shrl
dec
xor
sbb
or
shlb
leave
fmuls
notl
ret
fwait
in
sbb
adc
jbe
push
cwtl
aam
cmp
or
adc
fiaddl
test
add
sub
addl
scas
push
cmp
adc
loopne
inc
sbb
push
add
fistl
jecxz
icebp
shl
jo
rcpps
scas
or
and
lods
jne
mov
outsl
fdivrs
ret
xor
std
orl
add
pop
inc
dec
ret
push
push
lods
push
jecxz
cmp
rorb
popa
and
add
dec
push
insl
mov
call
mov
je
mov
add
fstpl
dec
out
jbe
dec
cli
inc
adc
inc
cmpsb
lea
test
mov
xchg
sbb
cld
adc
scas
dec
sahf
daa
pop
test
cwtl
sahf
gs
sbb
and
mov
je
cmp
ss
movb
lcall
xor
in
imull
lret
out
mov
arpl
leave
xor
inc
gs
jo
nop
es
in
cmp
and
xchg
lds
adc
adc
mov
inc
sbb
cmp
push
xor
fistpl
mov
imul
mov
fsubl
mov
jns
push
int
mov
jnp
imul
je
lcall
enter
imul
je
xchg
inc
push
mov
xor
inc
jno
xchg
adc
fdivs
insl
ret
inc
in
or
fs
push
ret
leave
adc
adc
imul
lahf
mov
jno
cmpsb
lods
mov
dec
xor
pop
lods
adc
and
mov
icebp
movsb
rorb
mov
mov
popf
adc
clc
lea
or
pop
nop
outsb
adcl
paddq
or
stos
test
loopne
add
push
pop
add
mov
dec
ret
pop
mov
sbb
cmp
enter
outsl
mov
lods
sub
jnp
inc
dec
fwait
aaa
frstor
push
mov
cwtl
add
ljmp
adc
in
hlt
sbb
flds
mov
sub
and
fmull
imul
fnsave
xor
jb
in
sub
jecxz
nop
call
xor
es
dec
mov
shrl
out
out
flds
and
add
std
insb
fsub
pusha
mov
xchg
je
test
mov
ds
je
xchg
xor
dec
popf
and
popf
int3
sbb
fs
ficompl
mov
iret
in
fcmovnbe
sub
fisttpll
repnz
and
ja
scas
and
xchg
fcompl
or
push
push
and
dec
xorb
lret
imull
jmp
add
call
or
sarb
es
xor
arpl
ret
cmpsl
jnp
mov
dec
adc
and
lcall
je
push
or
lock
and
push
iret
scas
jmp
push
jno
pop
mov
stc
mov
mov
add
pop
repz
add
fcomps
das
addr16
push
arpl
loopne
rep
sahf
in
clc
xlat
or
inc
push
cmp
repz
mov
mov
decb
sub
fwait
int
sub
not
or
sub
add
add
fisubrs
cld
es
aas
xor
inc
orb
jnp
mov
add
adc
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
and
push
aaa
push
iret
mov
sahf
push
mov
gs
cmp
add
bound
in
xchg
sub
mov
cwtl
push
sub
imulb
cmp
add
incl
sub
xorb
jbe
popa
and
cmpsb
mov
insb
insb
outsl
arpl
imul
pushl
push
je
arpl
jne
jb
outsb
je
add
push
add
pop
mov
adc
outsl
lcall
inc
outsl
jb
js
je
jb
gs
add
notl
outsl
add
add
add
mov
push
jne
les
inc
and
jb
sbb
fldl
dec
push
add
dec
add
addb
jbe
aaa
or
pusha
es
add
inc
xor
inc
push
add
inc
aas
push
add
pop
fidivl
and
push
insl
addl
je
and
jae
out
imul
fisttpl
fs
cmpsw
mov
push
push
or
bound
jns
push
jne
imul
or
jbe
aas
fsubrp
imul
jp
outsl
or
mov
or
gs
fstpl
addr16
and
outsl
jmp
and
add
jne
int
lret
stos
insl
sub
push
imul
and
scas
ja
cmp
pop
fdivrl
push
data16
push
mov
outsb
dec
sub
xchg
ds
jp
ss
sub
js
lcall
sbb
xchg
jecxz
push
inc
arpl
or
inc
daa
dec
jbe
js,pn
sbb
fbstp
outsb
bound
xchg
aaa
adc
sbb
jo
arpl
mov
jo
push
xor
scas
push
lds
sbb
fbld
mov
filds
push
das
jb
mov
xchg
popa
ret
fidivrl
cs
leave
push
xor
xor
nop
andb
xorl
fidivrl
jg
loope
mov
popa
sub
shll
lahf
je
inc
lds
jg
dec
and
sub
iret
fbstp
cs
fbstp
jne
jbe
jb
push
push
data16
pop
inc
sbbb
jg
xlat
xchg
scas
pop
stos
bnd
das
roll
jae
pop
sbb
ljmp
push
jo
lahf
outsl
aas
arpl
sbb
iret
arpl
sbb
mov
xlat
popl
pop
and
aaa
insl
lret
sbb
jecxz
stos
fs
imul
test
pop
rcll
dec
fbld
psubb
popa
leave
xor
add
xchg
push
jmp
mov
pop
add
adc
pop
cltd
idivb
je
scas
cmp
mov
lea
jae
subb
pop
pop
jecxz
push
and
rcrb
dec
addr16
imul
add
add
js
and
enter
enter
sub
pop
mov
in
enter
sub
in
mov
and
jmp
sbb
jb
push
ljmp
and
xchg
and
fdivrs
jns
jp
popa
or
cmp
lcall
lock
add
add
jp
fwait
sbb
out
sub
push
push
mov
sbb
fcmovne
or
pop
ja
pop
mov
pop
mov
imul
arpl
fidivl
push
out
mov
rcrl
sbb
in
cmp
push
xor
jbe
negb
and
jns
add
push
dec
insb
xchg
das
das
and
adc
jbe
ja
or
dec
inc
and
push
sbb
or
dec
inc
jmp
stos
out
adc
je
dec
idivl
and
inc
mov
js
andl
mov
clc
adc
mov
daa
outsl
dec
xor
inc
mov
and
pop
pop
divl
iret
jns
out
out
pushf
fidivs
iret
and
ss
arpl
pop
js
cmp
push
and
outsl
xor
sub
pop
dec
mov
fwait
jbe
addr16
ds
imull
sbb
mov
clc
test
insl
cmp
repz
sub
fs
dec
and
jns
mov
push
das
das
jns
push
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
outsb
mov
adc
and
and
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
rclb
mov
pop
pop
pop
pop
pop
mov
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
insb
adc
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
rolb
push
push
add
xor
hlt
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
les
int3
push
jo
add
lds
loopne
xchg
add
mov
imul
outsb
and
push
or
and
pop
pop
pop
mov
adc
and
ss
rorb
add
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
mov
pop
add
xor
jmp
lret
push
pop
push
cmpsl
hlt
add
lods
push
pop
lods
mov
pop
scas
xlat
repnz
sbb
outsl
sbb
cmp
push
push
inc
fildll
rdtsc
ss
inc
pop
dec
dec
inc
dec
inc
sbb
or
push
nop
fs
je
cs
jae
hlt
jbe
dec
dec
bound
je
outsb
data16
xorb
dec
out
je
xor
push
rclb
jo
pop
lret
aad
jae
mov
outsl
js
push
inc
fdecstp
in
push
and
insl
jo
jo
and
fidivrs
xchg
shlb
aaa
insb
les
dec
imul
mov
outsl
lods
insl
cmp
dec
inc
jb
jns
out
imul
notb
mov
insb
and
mov
outsb
in
and
addr16
sarb
pusha
fsubrl
push
jbe
cld
mov
jmp
or
jb
and
daa
sbb
xchg
pusha
inc
and
pop
pusha
pop
push
jns
inc
ss
lods
jp
mov
mov
pusha
xchg
pushw
popl
cs
mov
cmp
pop
and
push
sbb
xchg
pop
daa
bound
insl
adc
dec
test
pusha
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
pop
in
cmp
cmp
sub
hlt
clc
addr16
or
mov
das
outsb
gs
mov
add
icebp
jbe
mov
in
adc
inc
push
push
push
push
dec
testl
push
jne
repnz
push
push
ret
push
lods
filds
lea
dec
dec
jge
adc
ds
jle
jb
xor
and
push
imul
mov
jg
inc
adc
adc
in
xchg
or
clc
mov
sbb
bound
push
inc
jg
loop
testb
mov
das
je
outsl
pop
loope
insb
xchg
daa
xchg
mov
ds
jnp
popw
pop
cmp
cmp
repz
fisttpl
ds
and
sub
ret
je
jl
push
addr16
jle
addr16
je
cmp
dec
add
sub
pop
adc
jnp
or
sbb
das
push
jb
call
aaa
and
push
mov
xchg
xchg
fcmovbe
mov
outsb
stos
addr16
push
fstpt
addl
adc
xor
or
pop
shll
pop
mov
int3
lock
dec
sbb
mov
xchg
inc
jo
cmp
and
push
jl
repz
add
cmp
xor
repz
sub
add
clc
add
jns
lock
out
push
push
enter
out
sahf
out
mov
mov
cwtl
xchg
nop
mov
loope
iret
repz
jl
popf
out
add
cmp
jae
pop
aas
mov
pusha
push
pop
pop
repz
repz
push
dec
dec
inc
iret
repz
inc
cmp
xor
sub
iret
repz
adc
add
call
fmul
test
push
dec
sub
call
iret
movsb
jl
push
dec
inc
sahf
int
cmp
adc
cli
cld
in
jns
out
shlb
fidivrs
out
lock
int3
stc
xchg
stc
mov
mov
jg
and
fdivrp
inc
clc
jle
mov
or
cmp
adcl
nop
adc
xlat
es
test
add
fcmovb
push
and
add
add
add
xor
rol
inc
add
loopne
add
add
add
test
pop
mov
add
jnp
outsl
add
in
pop
mov
add
fildll
jle
and
or
addb
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
mov
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
jmp
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
xchg
inc
adc
inc
test
call
push
jmp
dec
test
rclb
pop
outsb
sub
je
inc
pop
std
jns
push
shlb
outsb
push
xor
add
loope
push
dec
fidivl
jb
loop
cmpsl
push
arpl
cmp
mov
inc
insb
fs
sbb
fidivrs
jae
mov
or
jg
mov
pcmpgtw
xor
cmp
adc
push
jns
pop
add
push
xor
push
dec
inc
dec
cmovns
add
jmp
sbb
adc
sub
adc
dec
mov
inc
call
rclb
mov
popf
ret
out
xor
jnp
inc
loop
mov
ds
cmp
pusha
pop
adc
clc
lret
sbb
jb
xchg
jge
arpl
cmp
jg
cld
insl
pushl
in
fstl
mov
and
pop
jns
xchg
cmp
dec
imul
lret
add
inc
mov
dec
mov
popf
mov
sub
fwait
ss
sbb
pop
dec
sti
add
ds
xor
incb
int3
dec
dec
xor
dec
popf
lock
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
incl
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
aas
sbb
incl
mov
out
fcoml
mov
or
insb
mov
les
dec
out
leave
ljmp
orb
mov
jle
dec
mov
incl
and
repz
xor
aas
mov
pop
dec
enter
repnz
and
mov
sahf
mov
fcompp
add
pop
dec
push
dec
lds
je
dec
iret
mov
rcrl
dec
daa
data16
push
cld
xchg
fildl
sub
mov
and
jo
xchg
and
dec
cmovg
mov
dec
xchg
pop
and
jmp
adc
or
sti
es
jae
add
out
and
data16
scas
subl
adc
loopne
js
xchg
mov
pop
ret
jg
or
subb
fs
pcmpeqw
jbe
xlat
sti
or
loope
popa
daa
fistl
push
or
daa
je
or
lods
mov
push
or
add
mov
jl
loopne
lret
xchg
ret
pop
xor
sub
testb
test
jae
or
xlat
sbb
sbbl
nop
push
outsl
imul
add
jb
jae
jae
mov
jle
fs
push
push
lods
cmp
pop
sbb
and
loopne
mov
jmp
arpl
repz
out
inc
mov
pop
out
mov
push
sbb
aaa
push
mov
sub
push
hlt
lock
daa
jnp
push
mov
shll
or
ret
jecxz
push
xor
stos
jg
out
outsb
adc
add
sbb
jns
mov
xlat
jg,pn
rol
cmp
mov
cmpsl
xlat
adc
xchg
cmp
xchg
js
sub
sub
stos
aas
cmpsl
out
and
fidivs
inc
sti
out
dec
mov
pop
pop
mov
jbe
adc
dec
push
stos
imul
jo
imul
push
hlt
lahf
es
es
sti
cmp
divl
mov
sbb
cmp
out
or
push
mov
icebp
jmp
or
arpl
movsb
loopne
ret
dec
dec
jmp
cmp
fstpt
js
fdivs
dec
jp
xchg
ja
pop
jecxz
imul
mov
push
in
jno
imul
inc
mov
out
inc
fildll
lahf
out
xlat
addr16
je
adc
push
insl
aaa
insl
aas
arpl
daa
pop
arpl
je
add
daa
jne
jo
mov
push
lret
or
andl
cli
pop
je
fistps
pop
sbb
push
inc
add
jno
cmp
outsl
imul
pop
mov
push
push
sbb
mov
xchg
lret
sub
inc
sub
push
loopew
ss
scas
or
mov
sub
aas
mov
inc
aas
into
jecxz,pt
mov
mov
je
jb
xchg
push
loope
push
add
push
arpl
incl
mov
xchg
dec
popa
xchg
lock
jnp
out
sbb
addb
bound
ja
adc
fisubrs
out
sub
jnp
push
adc
aaa
mov
xchg
pop
xor
stos
test
mov
push
push
dec
outsl
push
sub
push
mov
sub
cmpsb
dec
invd
out
mov
and
mov
jne
add
dec
mov
arpl
pop
aas
dec
imul
xor
pop
inc
ljmp
jecxz
out
mov
pop
push
dec
arpl
jo
mov
roll
outsb
mov
jb
fdivs
push
sub
pop
jo
call
add
icebp
icebp
fnstsw
pop
push
stos
inc
mull
xlat
push
fcmovbe
jae
push
pop
mov
addr16
mov
and
jne
insb
pop
nop
fwait
cmp
jo,pt
lods
sti
ret
outsl
mov
inc
and
aas
jmp
pusha
adc
daa
outsl
inc
jno
sbb
inc
pop
pop
add
xlat
imull
ja
lods
loope
push
fsubl
push
inc
jnp
sbb
idivl
inc
sub
xchg
pop
inc
inc
sbb
sbb
sbb
aad
imul
inc
ss
add
test
push
and
push
loope
jl,pt
je
pop
pop
mov
clc
je
aas
insb
aas
pop
lds
scas
inc
bound
outsl
jo
bound
lret
ja
push
sub
dec
nopl
aas
pop
pop
push
xor
mov
maskmovq
testl
inc
inc
mov
outsb
filds
mov
inc
jl
jl
jno
adc
fisttps
jl
mov
pop
sbb
inc
arpl
lret
sbb
lea
fisubs
bound
adc
sbb
mov
scas
aaa
clc
mov
jl,pn
cmp
mov
jns
jae
bound
out
outsb
jl
push
jecxz
out
push
jecxz
pop
jl
pop
jecxz
out
or
sbb
js
mov
jmp
es
inc
mov
imul
sarl
adc
arpl
dec
sbb
sbb
xchg
out
xor
xchg
imul
rolb
jo
fistps
roll
vmread
add
jmp
add
jl
mov
scas
sub
andb
jl
xchg
sbb
sbb
ret
cmp
push
bnd
out
or
es
shl
arpl
imul
sbb
dec
ljmp
mov
mov
loopne
pusha
roll
sbb
mov
lahf
ficomps
daa
pop
testl
pop
nop
lret
mull
mov
inc
adc
daa
push
sub
stos
mov
mov
aaa
cmp
push
mov
insb
das
out
cli
mov
stos
pop
iret
xorl
cld
mov
divl
or
add
insb
mov
add
xor
jbe
aas
popa
popl
scas
aaa
aaa
movswl
das
addr16
sti
es
cmp
js
add
jno
fists
cmp
mov
loop
adc
push
sub
dec
xor
das
shlb
insb
or
dec
jp
pop
ds
jbe
add
add
pop
jp
pusha
add
inc
inc
gs
rcll
sbb
imul
es
inc
inc
push
push
mov
inc
cmp
pop
outsb
jae,pn
in
mov
les
mov
fadds
sahf
ja
sahf
jg
test
adc
imulb
rcrl
dec
inc
push
mov
cltd
dec
aaa
pop
fldt
cld
dec
pop
and
push
rcrl
push
and
push
xor
repz
mov
mov
subl
jle
mov
iret
repz
mov
popf
fsubrl
cmp
pop
imull
ja
dec
popf
push
pusha
aas
pop
jae
data16
popa
outsl
jo
jns
rcrl
shl
inc
xor
push
jecxz
ret
mov
cmpsb
push
and
arpl
out
fwait
mov
xchg
add
or
aas
out
push
and
xchg
and
loop
arpl
push
gs
insl
pusha
push
popa
jne
or
mov
imul
bound
xor
mov
xchg
sub
and
mov
nop
jbe
add
push
fwait
out
fidivs
mull
iret
repz
push
subb
lahf
push
and
fnstcw
popa
cs
shlb
call
jle
push
mov
out
dec
push
cmp
loopne
pop
pop
xor
js
icebp
aad
jb
jno
je
cmp
fimuls
jo
jb
filds
lods
push
sahf
jb
jb
and
cmp
jae
sbb
and
and
idiv
pop
cmp
and
arpl
xor
cmp
fs
inc
sbb
mov
jl
inc
loop
mov
in
jne
je
ss
cmp
fildl
sbb
imul
sbb
jae
data16
aam
imul
adc
push
movsl
mov
xchg
aas
push
mov
add
pop
jne
xchg
sbb
cmpsl
sub
arpl
in
sub
scas
ja
inc
scas
fdivl
sldt
mov
outsl
js
rcrb
mov
scas
inc
subl
inc
dec
stos
pop
add
or
inc
cli
inc
or
mov
nop
test
insb
push
and
test
aaa
cmpsl
das
and
xor
add
xorb
cli
push
adc
roll
mov
pop
outsb
mov
sub
fcompl
push
add
sbb
ja
xlat
inc
sbb
outsb
cmc
push
jecxz
push
ss
xchg
or
push
and
imul
push
add
pop
pop
mov
mov
ja
icebp
out
and
inc
fs
bound
cmpsb
je
cmp
and
inc
or
ss
imul
push
sti
dec
add
mov
cmp
cmp
test
add
jo
pop
dec
jnp
inc
or
inc
iret
ret
cmpsb
dec
mov
test
sbb
or
ljmp
adc
mov
cli
test
lcall
orl
lods
mov
sti
dec
sub
outsb
adcb
outsl
shlb
pop
pop
repz
sbb
iret
inc
bound
adcl
and
pop
inc
add
fisubrl
push
shll
mov
add
pop
andb
mov
je
pop
mov
sbb
and
xor
mov
add
mov
stos
sub
aaa
frstor
xor
dec
sub
add
packssdw
imul
jp
xchg
imulb
inc
jp
arpl
sbb
add
dec
bound
bound
sbb
and
arpl
shlb
nop
push
inc
outsl
ja
jg
dec
jb
fs
in
push
dec
int3
js
jbe
bound
inc
sahf
iret
push
popa
prefetcht0
jbe
fisubrs
sbb
int3
fwait
inc
and
lret
or
adc
out
ja
lods
mov
add
inc
fwait
mov
imul
xor
adc
add
aam
inc
sbb
aas
push
dec
push
dec
out
inc
mov
or
mov
addr16
movsb
movsl
scas
out
sti
pop
mov
das
pop
ds
or
dec
mov
hlt
push
inc
jg
push
xor
mov
imul
data16
jne
add
adc
test
xchg
stos
imul
pop
addr16
mov
xor
outsl
jo
fwait
add
xorb
bound
push
dec
dec
dec
jp
xchg
out
cmp
dec
cmp
push
lahf
push
lods
adc
xchg
xchg
hlt
dec
imul
cmp
sarl
mov
push
or
lods
js
or
mull
inc
cmp
xchg
add
fistl
loop
cmpsl
push
cs
push
mov
pop
and
mov
ss
xchg
cmp
fwait
ljmp
inc
imul
outsb
jae
sbb
in
sub
inc
or
mov
push
inc
dec
lods
add
mov
push
pop
push
cmpsb
aas
loopne
stos
push
roll
test
jecxz
out
and
pop
call
fldpi
fisttps
data16
adc
xor
lods
cmp
imul
jecxz
imul
xor
cmpsl
dec
and
adcl
mov
lds
outsl
rorb
orb
into
sbb
or
push
and
test
arpl
scas
test
imul
out
cmp
mov
daa
mov
push
outsb
dec
bound
arpl
pop
cmp
dec
pop
cmpsl
mov
ja
ljmp
out
push
stos
jbe
mov
pop
sti
pop
cmpsl
adc
cmp
pusha
jns
sub
push
pop
ss
adc
and
outsl
push
notl
jb
out
push
out
ret
push
inc
arpl
test
mov
xor
add
add
jmp
xor
je
into
fcomps
lahf
dec
xor
fdiv
or
es
fsubp
rolb
outsl
inc
outsl
sub
dec
pop
imul
cmpsl
stos
test
iret
lahf
sub
or
pop
xlat
sbb
je
mov
imul
inc
rclb
fsubs
mov
dec
dec
sub
pop
adc
inc
xchg
arpl
stos
xlat
cmp
popaw
push
xchg
aaa
test
clc
and
mov
add
arpl
imul
sbb
mov
push
xchg
mov
cmpsl
pop
push
inc
mov
add
aaa
xor
es
xor
ucomiss
outsl
push
xor
movl
xor
dec
push
push
mov
popa
ss
add
js
push
dec
mov
push
scas
push
call
push
jg
js
cmpsb
sbb
outsl
stos
lock
lods
adc
lahf
pop
pop
push
test
push
sahf
xor
xor
jecxz
es
cmp
movsl
dec
outsl
pop
pop
rolb
and
inc
pushf
mov
add
or
mov
and
lcall
rclb
out
adc
adc
add
jecxz
ja
pop
pop
xor
test
stos
scas
shrl
aas
ja
test
cmp
jae
or
mov
arpl
out
pop
inc
movsb
dec
adc
adc
insl
rcrb
sub
adc
xchg
scas
mov
cs
mov
loopne
lret
sub
sub
push
mov
pusha
in
imul
dec
xor
jb
hlt
loop
jo
scas
push
push
mov
or
minps
aas
push
andl
jo
push
jle
dec
mov
adcb
repz
xlat
mov
mov
adc
loopew
push
push
mull
inc
mov
and
outsl
aas
outsl
iret
jp
test
outsl
and
jae
rcrb
je
jnp
ret
sbb
sub
scas
cmp
inc
xchg
and
mov
incl
add
sub
inc
imull
adc
pop
cmp
repz
and
cmp
repz
andl
mov
cltd
or
push
push
sahf
xchg
dec
test
push
add
ljmp
fisttpll
mov
add
mul
jns
ss
int
clc
pop
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
add
mov
push
shrb
ret
sub
shlb
data16
or
adc
insl
jo
stc
pop
add
xchg
rclb
ss
push
dec
str
int3
data16
add
inc
stc
das
fstpt
rcll
out
push
loopne
sahf
addr16
inc
popa
mov
ret
std
push
dec
push
push
rep
mov
mov
aam
add
add
popf
addr16
pop
jae
pop
sbb
js
cmp
testl
push
rorl
lds
sbb
adc
mov
js
mov
push
es
pop
dec
pop
bound
xchg
mov
sub
mov
into
mov
or
jp
xor
xchg
bound
and
pop
out
cmpl
sti
push
iret
jae
adc
sarl
lods
dec
imul
dec
sub
addb
lea
popa
pusha
pop
ret
add
das
add
es
pop
aas
sub
xchg
jmp
repz
arpl
cmp
shrb
sub
shll
out
mov
rol
outsl
out
adc
mov
add
pop
lret
aas
sti
mov
das
sbb
pop
cmp
loopne
mov
repz
push
scas
shlb
xor
std
sub
das
and
add
mov
push
shr
leave
dec
adc
adc
pop
mov
iret
test
imul
idivl
aaa
jbe
fimull
andb
jg
jecxz
rcl
sarl
shll
mov
cmp
mov
xor
push
clc
jle
jnp
jge
addr16
in
sbbb
xor
and
fs
push
faddl
add
add
outsb
adc
daa
daa
dec
xchg
jle
popl
outsl
mov
pop
pop
pop
and
or
sub
cs
adc
add
loop
sbb
mov
arpl
bound
mov
ret
pusha
mov
in
xchg
idivb
adc
dec
mov
push
push
into
push
dec
xorl
call
sub
and
or
sub
xchg
scas
mov
stos
sbb
pop
je
scas
xchg
stos
in
sarb
xchg
pushf
dec
stos
fmuls
xor
in
mov
stos
in
imul
inc
test
movsb
leave
push
jb
push
add
lods
xchg
push
cmpsl
mov
sub
aad
cmpsl
or
mov
stos
stos
in
adc
mov
movsl
movsl
adc
push
jb
inc
movsb
shlb
stos
push
fbld
mov
push
push
stos
in
mov
mov
fs
jmp
cmp
stos
mov
jb
pushf
lahf
call
scas
mov
sahf
test
xchg
pushf
push
sahf
pop
lods
push
repnz
fistps
cwtl
leave
cltd
mov
jl
adc
out
pop
and
cmpsb
jg
aas
inc
sbb
or
xor
pop
jo
bound
das
fisttpll
ret
dec
inc
call
cmp
mov
mov
fistl
dec
subl
iret
add
adcb
test
xor
push
ffree
fisubrl
das
pop
push
test
mov
je
dec
pop
inc
and
mov
mov
push
or
ds
dec
sbb
pop
sbb
fldt
push
cmpsl
addl
inc
aaa
mov
aas
mov
orl
setae
push
adc
push
inc
xlat
push
and
sbb
xchg
dec
notb
rcl
das
addr16
xchg
sbb
mov
pop
or
int3
fs
push
scas
addr16
pusha
aad
xchg
fildll
inc
scas
jg
outsl
inc
subl
inc
adc
dec
loopne
jecxz
add
rclb
sub
push
jb
jne
push
mov
loop
adc
mov
sbb
lods
xchg
das
out
pop
bound
mov
filds
jmp
sbb
aaa
outsl
adc
mov
orb
ss
outsl
jecxz
xchg
xor
xchg
dec
pop
or
push
fwait
pop
pop
and
aas
outsl
incl
popa
lods
jbe
mov
pop
mov
rolb
or
out
mov
add
aaa
scas
hlt
dec
sbb
pop
iret
inc
das
ljmp
shll
cmp
dec
popa
adcl
jbe
inc
xchg
cli
adcb
jg
jo
mov
jae
and
loopne
mov
xlat
testl
fisttpl
or
ss
and
rcr
je
inc
daa
sbb
jnp
pop
or
or
sub
inc
and
xorl
xchg
push
inc
add
mov
inc
adcl
cltd
pop
ret
addr16
cmp
inc
xor
pop
jne
addr16
sbb
es
ja
ss
or
je
push
fidivs
dec
sub
inc
fs
inc
or
or
or
lea
jae
jns
divl
les
in
ss
dec
dec
bound
jae
shrl
cwtl
daa
js
outsl
dec
js
sub
popf
xor
divb
xchg
cmp
imul
and
or
lret
sub
iret
and
push
mov
pop
mov
mov
pop
sub
repz
or
and
jns
out
bound
cmp
xchg
ret
cmpsb
repnz
cmp
adc
mov
lea
sahf
mov
lret
pop
pop
and
cmpsl
dec
mov
insb
dec
cmpb
adc
or
jmp
sub
insb
add
xchg
pop
jb
inc
pusha
add
sub
add
mov
dec
push
lcall
scas
outsl
or
pop
insb
adc
pop
test
push
inc
daa
insb
dec
adcb
sub
orl
pop
push
aas
cmp
call
rdmsr
cs
test
sub
adc
jnp
xor
push
xchg
dec
cmovno
das
insb
sub
or
xlat
cmp
loop
xor
and
sarb
xor
lods
shr
mov
lret
mov
add
fiadds
testl
ja
push
push
nop
jbe
fwait
vunpckhps
xchg
push
jae
lea
dec
fistpll
push
adc
sub
mov
pop
pushf
dec
fwait
mov
sbb
mov
xchg
xchg
test
and
mov
ja
dec
es
jnp,pt
call
cs
test
push
rorb
xor
push
ret
out
es
adc
and
xor
insl
xchg
repnz
jnp
mov
cmp
inc
pop
repz
mov
jae
fs
dec
sub
pop
pop
fidivs
jmp
jecxz
pop
negl
inc
out
shlb
or
inc
or
jle
js
xor
scas
xchg
repz
cmp
xchg
cmp
or
out
mov
bnd
ss
push
cmp
push
push
bound
xor
cmp
iret
inc
xor
pop
xchg
lret
jb
sbb
push
cmpsb
xchg
ja
hlt
loope
xor
outsb
sbbl
mov
mov
xor
mov
fidivrs
lcall
out
test
mov
mov
push
or
cmp
mov
lahf
push
out
push
push
mov
popf
negl
js
inc
xor
mov
fiadds
mov
push
es
loope
out
ss
outsb
pop
push
push
xor
dec
lock
inc
pop
dec
es
das
sbb
inc
fbld
data16
inc
pop
push
sysexit
mov
cs
sahf
lret
sahf
push
outsl
push
push
cli
push
push
insl
sub
fidivrs
scas
push
insl
mov
inc
ja,pn
xor
adc
jp,pt
jp
ljmp
xchg
ds
fiaddl
jg
dec
js
push
jl
xor
das
imul
js
outsl
pop
outsl
dec
xor
js
push
into
xor
and
and
sbb
pop
sub
pop
push
fdivrs
loop
push
mov
push
test
mov
outsl
dec
loopne
mov
ret
inc
iret
jnp
cmp
dec
jle
and
shrl
xor
sbb
arpl
inc
inc
fcomi
pop
shrb
pop
inc
bound
ja
mov
xor
stc
mov
and
dec
mov
add
fwait
test
xchg
dec
sbb
jmp
push
inc
and
jmp
insb
cmpl
xchg
inc
shll
inc
inc
xchg
mov
sbb
sahf
xor
arpl
adc
popa
add
scas
imul
repz
xor
lahf
push
addb
dec
popa
jge
loopne
addr16
ja
pop
fwait
lahf
inc
mov
rcrl
fwait
jmp
shll
js
sub
out
outsb
mov
push
mov
cmp
xchg
mov
sbb
push
addr16
pop
or
push
push
lret
sub
mov
loopne
dec
inc
fisubrs
fs
outsl
add
add
inc
adc
mul
adc
xor
ljmp
aaa
pop
adc
cmpsl
imul
push
and
push
fstl
out
dec
cmpsb
xor
out
andl
cli
dec
imul
addr16
arpl
push
mov
xor
mov
jne
loopne
pop
ja
repz
mov
pop
outsb
out
loop
arpl
xor
mov
repz
push
cmpsl
adc
xchg
iret
xchg
out
add
nop
add
pop
repnz
push
mov
jne
jo
arpl
xor
jg
push
cs
pop
ja
xor
xor
push
push
or
out
inc
adc
mov
push
inc
mov
push
lea
jae
adc
adc
jae
mov
xlat
mov
in
push
pop
stos
add
adcl
add
sub
mov
das
lods
mov
pop
shlb
ret
stos
lock
xlat
jmp
js
sbb
sub
mov
sub
jg
inc
pop
inc
cmpsl
add
jmp
sbbl
es
push
fisubl
imul
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
lock
sti
outsl
popa
fldt
and
xor
mov
ret
mov
xchg
test
inc
pop
mov
bound
and
push
fst
adc
iret
inc
xchg
outsb
jecxz
pop
dec
push
imul
ret
cmp
mov
out
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
push
sbb
xor
pop
arpl
outsl
cmp
imul
das
repz
outsl
iret
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
push
cmovs
dec
xlat
jle
add
mov
popl
push
dec
add
das
add
data16
cmp
sub
testb
lock
aam
daa
lahf
sub
or
hlt
add
iret
aad
ja
outsb
int
fs
mov
adc
mov
push
shlb
test
mov
dec
mov
adc
adc
jmp
xchg
pop
nop
and
mov
adc
iret
adc
and
mov
add
adc
outsl
inc
dec
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
lahf
in
pop
subb
mov
dec
fsubs
cmc
jmp
sbb
mov
pop
dec
xchg
add
mov
push
pop
adc
jb
mov
pop
push
and
outsb
xor
push
in
or
imul
pop
test
jne
add
or
lods
fbstp
cmpsl
and
xchg
leave
add
push
or
dec
xchg
xchg
dec
cmp
push
inc
sub
sub
adc
vmwrite
je
xor
xor
dec
dec
jb
cmp
inc
les
pop
xor
outsl
popf
addb
inc
or
xor
lahf
adc
pop
inc
mov
js
decl
aaa
call
inc
dec
test
xchg
roll
mov
mov
call
aad
imul
pop
in
cs
ss
cmp
sub
movsl
jnp
inc
adc
inc
push
add
cmp
push
inc
addr16
leave
js
jmp
inc
ss
cmp
loope
das
dec
cmp
lock
inc
popa
testl
test
ja
clc
incl
xchg
imul
cmp
popa
outsb
imul
cwtl
adc
inc
das
and
ficoms
mov
fwait
add
mov
add
aaa
push
add
push
in
inc
sbb
jae
xlat
or
movsl
add
cmp
ret
mov
ret
pop
pop
lods
lea
inc
dec
push
push
scas
mov
mov
mov
pop
xlat
bswap
insl
dec
movsl
mov
xor
outsb
packuswb
mov
sub
pop
iret
mov
push
or
cli
ret
sti
cmpsb
push
jp
jne
inc
call
lock
push
mov
adc
repz
mov
and
out
mov
fimull
xor
sarl
lahf
fimull
mov
test
inc
jmp
dec
pop
ja
pop
aam
push
mov
aaa
bound
pop
xor
mov
addl
dec
sub
lret
pop
mov
inc
outsl
ss
push
pop
or
dec
inc
arpl
stc
add
and
dec
lret
sub
push
in
enter
es
cld
push
dec
adcl
negl
jb
lock
fs
mov
pop
test
cltd
out
mov
inc
mov
mov
inc
sahf
dec
push
xchg
cmpsl
mov
push
add
out
jbe
push
jbe
es
ret
les
add
sbb
nop
add
iret
fstpt
jae
push
and
mov
and
movntq
daa
fdivrl
js
aaa
pop
pop
rorl
pushf
in
andb
out
js
add
push
xor
pop
divl
mov
lahf
cmpsb
mov
fwait
int
inc
and
ja
push
pop
mov
loopne
xor
sub
sbb
cmp
out
inc
addr16
or
pop
jns
fdivp
jns
pop
sbb
fnstenvs
sub
idivl
aaa
iret
imul
daa
dec
xchg
fiadds
cwtl
sub
sti
popa
jns
mov
cmc
jle
jns
inc
ss
outsl
pop
inc
outsl
sahf
cmpsl
mov
js
push
sahf
mov
jl
mov
clc
inc
or
mov
loop
scas
aaa
les
clc
mov
test
aaa
ljmp
adc
jnp
roll
repnz
aaa
ss
out
jnp
cmp
adcb
lret
outsl
mov
push
sbb
mov
push
push
and
adc
dec
mov
mov
xor
push
pop
ss
jnp
inc
mov
push
jo
xor
cmp
rep
xor
push
lea
repz
add
push
jmp
ds
ss
and
rcrl
fisubrs
push
jo
jns
in
cmp
cmp
movsb
repz
out
clc
cmp
cmp
iret
subb
iret
out
mov
cmp
cmp
repz
jno
test
fidivrl
int
or
add
or
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
aaa
mov
add
mov
iret
testb
int
mov
leave
loop
and
push
test
mov
mov
je
jg
dec
mov
int3
push
and
pop
imul
sbb
enter
aas
xchg
pop
enter
repnz
iret
pusha
or
in
pop
adc
add
and
xlat
insb
aaa
test
inc
imul
xor
test
mov
nop
or
push
add
js
orl
in
daa
cld
or
shlb
outsb
outsb
lcall
push
push
js
xor
imul
insl
gs
cmp
and
inc
sub
dec
cmp
push
push
imul
push
stos
imul
mov
cmpsl
loope
add
aaa
sbb
cli
inc
outsl
aam
push
popa
or
push
pusha
or
jg
sbb
test
inc
popw
dec
mov
push
enter
ficoml
cs
decl
mov
fwait
mov
aad
cmpsl
push
cmp
push
pop
sub
inc
sub
mov
mov
pop
mov
xlat
out
push
hlt
lock
addr16
mov
out
push
cs
aaa
outsb
loopne
divb
or
pop
std
adc
outsl
xlat
xchg
pop
pop
daa
mov
inc
rcrb
test
dec
dec
jno
push
mov
pop
inc
push
mov
mov
mov
mov
in
mov
fmuls
dec
test
fs
jecxz
popa
adc
imul
arpl
xor
bsr
dec
sub
jbe
push
cmp
mov
xchg
cmp
xor
mov
fisttpl
bound
dec
lahf
cmp
incl
or
fs
jo
xor
scas
mov
sbb
outsb
push
jnp
rclb
movsl
pop
rol
aas
adc
push
and
xor
scas
inc
js
sub
das
jb
addr16
add
add
lahf
in
stos
add
xor
push
cmp
lods
adc
jo
xlat
dec
sub
aas
sbb
lahf
or
add
dec
add
data16
gs
push
sbb
or
add
xorl
inc
xchg
or
add
mov
cltd
mov
pop
pop
ja
aam
addr16
rcr
mov
sub
pop
aas
jae
mov
andb
push
stos
mov
das
sbb
adc
push
lods
and
emms
imul
xlat
das
pusha
mov
mov
jmp
mov
or
mov
pop
cmp
push
btrl
adcl
mov
imul
mov
and
mov
mov
ja
das
mull
mov
inc
das
iret
adc
dec
xchg
jb
sbb
insb
das
pop
dec
mov
sub
add
pop
das
mov
bound
pop
sbb
loopne
inc
dec
push
pop
inc
jecxz
push
aad
pop
jecxz
test
push
fistpl
int3
or
and
lock
jp
mov
jbe
inc
adc
push
xorl
sbb
and
push
add
push
push
sub
aas
je
mov
adcl
add
push
cmpsl
mov
subl
inc
mov
lds
test
rcll
aas
add
inc
and
dec
add
outsl
bound
sbbb
mov
jmp
jno
ja
add
jo
xor
jg
faddp
ficoml
cmpsb
inc
inc
push
inc
mov
sbb
cmp
dec
pop
mov
inc
cmp
mov
mov
imul
dec
inc
jge
out
imul
data16
xlat
xchg
sbb
push
pop
or
jno
addr16
ss
inc
pop
xor
mov
lahf
inc
dec
mov
xor
dec
add
fdivs
mov
cmpsl
push
jmp
lods
and
jg
xor
fldl
mov
testl
pop
pop
inc
lret
push
test
jg
add
add
jecxz
ret
ja
push
in
das
adc
and
lret
or
es
insl
jo
je
add
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
jg
inc
or
stos
pop
xchg
adc
insb
pop
sub
pop
or
pop
cmpsb
jns
je
jne
or
bound
mov
xor
das
dec
out
mov
cmpb
dec
jae
lret
and
popa
push
pop
sahf
movb
mov
mov
adc
pop
push
inc
bound
imul
dec
cmp
push
sbb
scas
pop
inc
add
inc
sti
inc
sbb
jmp
shll
lock
push
pop
test
insl
testl
cmpsl
pop
stos
push
pop
mov
pop
daa
ret
sbbl
jp
and
in
or
push
pop
adc
pop
sub
pop
cltd
inc
add
push
add
push
jmp
push
add
mov
dec
and
xchg
ljmp
dec
fwait
add
or
les
aam
jns
jb
add
push
or
adcl
push
scas
push
inc
outsl
in
into
mov
or
aaa
inc
insb
fsubrs
cmc
push
cmc
sysret
daa
lahf
or
sub
push
jecxz
pop
sbb
jb
out
jnp
lock
push
add
and
outsl
inc
je
cmp
push
dec
inc
dec
push
xchg
add
add
rcll
pop
mov
jg
xor
mov
jae
inc
fwait
add
pop
add
push
add
add
adc
inc
incl
and
fnstsw
and
pop
outsl
mov
out
fidivl
and
ds
das
sbb
rorb
fldcw
daa
daa
push
and
lcall
inc
inc
inc
push
inc
pop
and
or
pop
xchg
cmp
cwtl
scas
sbb
mov
mov
push
and
mov
mov
adc
mov
lods
pop
gs
add
ds
push
popw
rcrb
aaa
vhaddps
int3
adc
fsubs
adc
inc
push
jg
fwait
dec
mov
lock
jl
ret
push
add
sbb
in
and
add
outsb
add
mov
push
pop
sub
test
pusha
mov
lahf
in
cmp
jbe
lret
push
dec
push
sbb
mov
sahf
scas
nop
scas
gs
dec
push
sbb
inc
das
mov
add
movl
clc
ficomps
add
push
mov
mov
mov
out
arpl
cmp
push
shll
mov
incl
in
pop
sub
daa
and
sbb
dec
or
fcompp
or
out
pushf
push
jg
push
or
jb
ja
out
push
imul
inc
outsl
arpl
popa
clc
fistpl
sbb
je
and
and
arpl
push
cmp
cmp
je
add
or
jns
movsb
je
loopne
pop
and
popa
stos
and
xchg
add
jno
or
sub
push
and
in
sarb
loop
dec
inc
mov
int3
pop
pop
and
push
fsubrs
pusha
push
js
outsl
fs
lods
pop
in
jle
insl
jo
jns
iret
inc
mov
add
outsl
insl
scas
inc
mov
jne
pop
or
loop
pop
fiadds
les
lret
xchg
addr16
cmp
and
pop
inc
je
bound
aaa
mov
dec
inc
insb
pop
jbe
ffreep
xchg
mov
inc
inc
into
jno
mov
aaa
xor
in
cmp
push
sahf
dec
sub
or
insb
adc
shll
and
or
fucomip
xchg
dec
inc
xadd
sbb
inc
cmovo
add
inc
mov
cmp
icebp
jbe
ds
jo
maxps
loopne
ret
xor
jp
inc
inc
cmpxchg
add
or
jns
sti
ss
add
sbbb
sbb
cmp
aas
add
pusha
xor
adc
mov
inc
hlt
inc
sbb
mov
push
adc
add
hlt
into
pop
xchg
dec
mov
insl
adc
sahf
pop
inc
repz
pop
push
daa
xchg
mov
daa
xorb
pop
cwtl
xchg
add
xchg
xchg
lods
call
daa
xchg
outsl
clc
push
out
sahf
int
xor
xor
in
pop
jnp
adc
int3
scas
fbld
aam
shl
push
ss
pop
xchg
ss
mov
mov
jbe
add
out
inc
pop
leave
pop
jbe
and
inc
fisubl
enter
enter
das
outsl
xchg
add
adc
sbb
xchg
bound
adc
cmpsl
add
nop
xchg
out
push
xchg
sub
es
lahf
sbb
jecxz
xchg
test
dec
cwtl
loopne
add
cwtl
cmp
sbbl
cmp
jnp
jb
push
and
dec
push
outsl
xchg
xchg
jl
mov
xchg
jl
sbb
mov
xchg
fdivrs
daa
enter
test
cltd
adc
out
sub
inc
daa
inc
rcrb
outsl
xchg
xchg
outsl
pop
daa
adc
xchg
mov
insb
ds
pop
pop
jb
and
movsb
mov
add
xchg
rcrb
cmpsb
insl
outsl
xchg
jl
or
pop
adc
dec
add
cs
orb
cs
int3
lods
aas
movsb
and
outsb
mov
add
sub
outsl
mov
nop
dec
or
jbe
les
adc
dec
dec
loopne
cld
rol
or
adc
inc
mov
push
push
mov
inc
or
and
bound
fwait
jl
mov
shl
xor
out
enter
ja
negb
aas
adc
pushf
sub
push
inc
aas
addr16
cmp
cmp
mov
xchg
sub
mov
mov
int3
rolb
aam
mov
xlat
cltd
popf
add
dec
and
and
fwait
mov
jmp
scas
jns
mov
xlat
dec
pusha
mov
pushf
aas
push
cmp
int3
pop
ret
sahf
int
popf
faddl
in
mov
push
dec
add
int3
rcrb
sahf
sub
cmp
rcrb
hlt
insb
mov
mov
cmp
in
insb
lcall
int3
fmull
cs
lahf
mov
filds
push
jns
imul
in
sahf
or
in
nop
or
nop
or
mov
inc
lods
sar
test
pop
mov
test
in
add
cld
jle
out
fcoms
pusha
je
xlat
pop
add
fwait
out
sahf
sub
cmpb
or
push
clc
mov
notb
clc
sahf
mov
cmpsl
pop
jo
nop
or
js
in
movsl
jg
movsb
mov
jns
lods
pusha
movsb
and
test
hlt
jb
fstpt
mov
lods
add
testb
hlt
pushf
adc
cmpsl
mov
jns
pop
insb
test
jae
dec
mov
jg
cmp
repz
enter
scas
dec
or
mov
lock
and
enter
iret
xchg
stos
ja
jle
das
cmpsl
push
fs
sub
lahf
nop
das
ja
inc
sahf
pop
lahf
mov
mov
fwait
or
call
lea
sti
test
pop
movsb
xor
movsb
add
dec
sahf
inc
push
dec
lahf
test
mov
lahf
inc
test
movsb
inc
test
aam
dec
push
out
movsb
in
clc
orps
cmpsl
enter
aam
movsl
sub
cmp
dec
addr16
cmpsl
cmp
mov
jg
sarb
iret
test
pop
xor
cs
daa
shlb
in
pop
push
cmpsl
shlb
dec
out
test
cmpsb
xor
dec
insl
dec
xor
cmpsl
jg
mov
js
cmpsb
mov
cwtl
imul
out
jae
iret
add
add
push
inc
inc
pop
sub
enter
cwtl
movsl
mov
sub
inc
aas
push
cmpsl
jae
in
and
push
icebp
pop
dec
jo
xchg
aas
pop
enter
cmpsl
jo
push
cmp
repnz
aam
aas
pop
jb
sub
cmpsl
les
ds
test
push
cmp
cmpb
lahf
repnz
enter
js
test
mov
icebp
dec
add
loopne
out
enter
mov
or
add
test
and
lahf
dec
inc
mov
cltd
mov
lahf
cmp
inc
and
test
push
jae
pop
addb
push
mov
lahf
push
or
inc
mov
and
shll
jg
mov
push
inc
sahf
and
ja
cs
inc
loopne
mov
or
sbb
repnz
nop
movsb
mov
pusha
sub
add
or
jbe
lahf
add
mov
push
inc
lock
fistl
jg
pusha
pushf
and
lahf
pusha
inc
repnz
nop
xchg
ja
mov
je
xor
xchg
inc
or
in
rolb
movsl
out
mov
mov
sub
ja
iret
mov
cltd
lock
inc
lods
mov
or
push
add
nop
mov
xchg
ss
hlt
dec
add
in
jbe
inc
arpl
out
popf
lods
inc
push
pop
cmpsb
test
insl
dec
jo
jg
adcb
rorl
add
fbstp
loopne
nop
out
fsubr
cld
or
push
inc
fmuls
out
inc
fdivl
inc
scas
cmp
add
aad
faddl
dec
test
scas
lahf
mov
mov
mov
push
mov
enter
jl
inc
rclb
enter
lahf
xor
shlb
fs
push
scas
and
scas
inc
lahf
push
ja
enter
jl
sbbb
nop
jl
jae
iret
test
pop
enter
ja
ss
aam
adc
jb
xor
jmp
lahf
movsb
daa
pusha
lahf
jo
nop
or
xchg
dec
lahf
pusha
jns
in
xor
rcl
cs
or
pusha
xchg
mov
inc
pop
mov
adc
xchg
outsl
aas
dec
mov
addr16
lods
mov
pop
cwtl
aas
sahf
mov
popl
inc
out
fsubr
mov
inc
pop
enter
xchg
enter
dec
in
data16
mov
push
xor
pop
xchg
outsl
add
fcom
jmp
addb
hlt
jmp
add
enter
jae
in
inc
add
enter
fcmovu
jnp
mov
push
sub
pop
repz
addr16
daa
in
idivb
js
add
jo
bound
xchg
jmp
inc
xlat
mov
inc
sub
fcomi
cmp
mov
fcoms
mov
je
dec
mov
enter
inc
jl
insb
pop
dec
sbb
outsb
jl
xchg
lds
dec
dec
dec
movsb
pop
push
nop
cmpsl
or
dec
jo
scas
movsb
ss
test
pop
xchg
ss
arpl
mov
push
and
adc
ret
aas
pop
adc
ret
lahf
jns
cs
ja
daa
scas
call
mov
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
icebp
xchg
push
pop
add
cmp
sbb
mov
sti
es
cwtl
ss
es
insb
fisubrs
adc
jge
jns
test
jo
xchg
out
enter
mov
fsubp
mov
je
int
insb
sahf
cmp
mov
and
or
setno
push
mov
or
dec
adc
xchg
mov
dec
nop
out
in
xchg
inc
leave
xorb
add
mov
stos
cmp
lahf
or
repz
mov
push
dec
and
out
jo
add
enter
pop
leave
in
add
mov
add
mov
pop
in
ja
pushl
cmp
hlt
jg
pusha
cmp
adc
aaa
and
fs
push
leave
add
lods
push
inc
inc
mov
inc
mov
outsl
inc
outsb
add
inc
and
inc
mov
adc
outsl
add
mov
fistpll
mov
cmp
lods
add
push
mov
xor
ljmp
or
xor
push
mov
mov
lods
and
push
aas
aaa
fisttps
sahf
ja
fs
lods
je
scas
add
or
outsb
mov
out
push
jmp
sub
xchg
out
mov
fldcw
fildll
dec
testl
ret
fmul
out
sti
cmpsb
dec
add
mov
mov
aaa
mov
mov
in
sub
jl
js
rcrb
sub
jle
mov
push
ja
dec
out
shll
out
add
lds
sub
loop
out
ja
int3
push
fcomps
stc
fildll
fbld
jmp
outsl
and
dec
and
mov
fists
push
jbe
push
or
outsb
xchg
outsb
push
jnp
out
dec
ss
sbb
test
pop
xor
mov
cmp
push
mov
js
stos
or
es
idivb
mov
cmp
pop
fs
fbld
leave
mov
add
call
mov
pop
mov
repz
and
push
xlat
push
jg
dec
push
in
dec
cmp
push
scas
call
repnz
aaa
mov
mov
add
out
orl
ja
ja
popf
test
rclb
nop
sub
shrb
ret
xchg
out
mov
movsb
jbe
daa
aaa
or
out
es
ret
fs
lds
shl
mov
push
or
lock
cmpl
orb
scas
bound
nop
mov
pop
and
and
rcr
in
push
ret
add
ss
or
dec
push
stos
adc
cmp
pop
mov
push
ret
xchg
pushf
xchg
push
lds
adcb
pop
ret
add
mov
ret
notl
outsl
and
adc
mov
cmp
mov
cwtl
inc
pusha
scas
ret
jo
loopne
repz
clc
test
mov
xor
jbe
je
adcl
mov
aaa
outsb
in
addr16
jno
outsl
pusha
cmpsb
mov
add
les
add
lock
in
jle
pop
mov
movsb
pop
jg
mov
mov
insl
cmp
jg
add
lds
push
add
sbb
cmp
add
sub
lds
testl
lods
lods
scas
mov
imull
nop
js
aad
aaa
pop
mov
ja
pop
or
aaa
push
cmp
movsl
nop
imul
aaa
add
daa
subb
push
movsb
and
add
pushfw
xlat
addr16
popa
jo
lahf
iret
insb
fcoms
es
sub
xchg
sub
or
cmp
jbe
jnp
mov
push
fs
enter
fdivp
cmp
dec
sub
fadds
mov
mov
or
test
push
or
or
hlt
push
popf
mov
add
imul
outsl
add
or
xchg
bound
fbstp
test
add
inc
cmpsb
or
aad
aaa
enter
aam
leave
pop
dec
pop
scas
mov
outsl
cmp
add
lock
and
sub
dec
xor
push
mov
or
stos
or
mov
mov
cmp
mov
lret
dec
aas
mov
push
sbb
sbb
cmp
movsb
addr16
les
or
pop
push
dec
testl
nop
xlat
fmulp
add
adc
adc
inc
je
dec
inc
lock
push
pusha
aaa
je
adc
nop
nop
enter
mov
and
nop
lods
loopne
in
or
add
and
adc
dec
xchg
inc
mov
rcll
outsl
xchg
fisubl
xor
in
mov
jl
insb
sub
push
inc
xor
push
lods
pop
jns
cmpsl
fnstenv
insb
dec
jo
repz
out
sub
jl
out
lcall
jae
repz
xchg
mov
ja
iret
repz
into
hlt
pshufw
mov
add
repz
repz
xchg
sahf
out
jb
lods
clc
dec
jae
ds
repz
push
push
mov
lahf
out
mov
icebp
or
das
out
ds
repz
shl
pop
ja
push
jp
iret
repz
mov
xor
out
push
lcall
iret
repz
jns
cmpsl
dec
jae
icebp
cmpsl
stc
cmp
pop
jnp
loope
jl
iret
sarl
stos
or
sahf
out
cmp
stc
sbb
inc
push
fucom
jns
leave
push
jg
push
push
sarl
cld
inc
addb
lcall
sbbb
orl
add
jns
out
sub
sti
stc
cmp
repz
xchg
repz
add
adc
cmp
mov
idivl
jns
lock
xor
out
int
mov
repz
iret
repnz
push
mov
imul
outsb
stos
iret
repz
repnz
iret
repz
xchg
or
jns
jns
xchg
mov
pop
xchg
push
push
movsl
insb
ds
out
xchg
movsb
ja
push
xchg
iret
mov
adc
cmp
cmp
xor
push
push
cmpsl
fdivrs
cmpsl
stc
dec
lcall
dec
repz
fwait
adc
pushf
push
repz
out
mov
idivl
iret
in
sahf
arpl
dec
repz
fwait
mov
lcall
xchg
mov
jns
in
xor
jg
sahf
ja
repz
repz
jge
cmpsb
scas
push
lcall
dec
pop
xchg
leave
hlt
daa
test
fidivrs
jp
or
ds
ret
push
stos
xor
iret
shll
adc
lcall
mov
scas
jns
iret
shll
mov
cmp
repz
fnstcw
sub
xor
sarl
xchg
cli
and
mov
ds
push
mov
lcall
into
or
jns
add
sahf
cmpsl
stc
and
pusha
lods
call
iret
shrl
stc
jle
test
aam
mov
repz
out
adc
iret
repz
or
sbb
push
lcall
mov
daa
ss
out
pop
cmpsb
in
test
addr16
fwait
in
shrl
outsl
ror
mov
iret
into
int
jnp
test
and
xor
and
ret
rcr
inc
fsubl
imul
jg
loopne
loop
add
int
out
add
fdivr
add
int3
push
cmc
aas
xchg
int
sbb
sub
das
addr16
sub
adc
lods
nop
push
in
xchg
in
mov
pop
mov
add
mov
popf
push
mov
inc
xor
pop
rclb
sbbb
cmp
push
leave
sarb
aas
jg
push
push
aas
lahf
pushf
push
or
xchg
arpl
push
lahf
jg
xor
cltd
mov
pop
mov
cmpsl
fdiv
dec
pushf
cmpsb
pop
mov
pushf
dec
push
leave
mov
psrlq
testb
ficoml
mov
out
loop
in
outsl
jb
jecxz
in
or
repnz
sub
inc
hlt
adc
mov
sahf
mov
add
imul
aas
and
and
add
adc
cmp
dec
and
jmp
enter
fiadds
insl
add
or
jbe
add
jl
add
jnp
fisubrl
daa
pushf
push
adc
add
mov
movsb
lods
fldt
sbb
testl
lock
xor
or
adc
test
out
xlat
dec
sub
xlat
insb
lds
sti
mov
add
daa
cmovle
mov
add
push
push
adc
pop
jo
je
cmpsl
stos
fadds
nop
xchg
sbb
sub
fistl
aaa
loopne
jg
pop
add
pop
pusha
addr16
xor
popa
or
addr16
out
ja
or
addr16
dec
add
addr16
or
outsb
jmp
sub
inc
add
add
fsubr
shrl
fcomp
daa
clc
scas
pop
aam
insb
scas
cmpsb
sbb
scas
add
and
xchg
je
leave
fbld
xchg
sbb
cmp
fistps
pop
and
ja
dec
mov
jo
je
ficoml
push
pop
add
mov
leave
inc
xor
push
jbe
push
pop
sbb
or
leave
inc
fildl
filds
mov
push
mov
imul
and
mov
in
lds
shll
and
jle
fcoml
sub
faddl
and
pop
pop
in
xchg
and
pop
xor
jo
push
popf
fcompl
gs
call
push
sbb
sbb
push
ror
daa
inc
outsb
mov
xchg
push
xor
fstl
fnsave
or
or
xor
mov
inc
and
out
jmp
xchg
iret
add
iret
ja
in
and
fst
ffree
daa
loopne
nop
pushf
in
pusha
sub
sbb
leave
and
jae
jb
jnp
push
jle
mov
xchg
add
pop
cmpsb
lods
push
pusha
push
or
in
lock
es
faddp
movsb
shrl
in
popf
sub
in
clc
fistps
mov
xor
push
add
mov
popa
dec
jl
data16
leave
and
sub
in
mov
enter
iret
adc
dec
shl
sub
loopne
daa
cmp
loopne
pop
pop
jmp
repz
xchg
dec
dec
adc
bound
loopne
in
das
bound
bound
push
xchg
mov
pop
add
je
jb
jge
lea
inc
bound
leave
leave
in
mov
fsubrs
leave
leave
loopne
lock
in
mulb
sbb
fs
sub
add
inc
mov
mov
arpl
daa
cmp
outsb
jns
arpl
lcall
and
sbb
or
or
or
in
mov
notb
loop
fs
lea
rorb
sub
aas
add
shll
rclb
jge
mov
aas
adc
jecxz
jecxz
daa
inc
scas
xchg
mov
adc
jl
mov
movq
paddd
enter
or
adc
pop
add
sub
aaa
pop
inc
or
sbb
jmp
js
xchg
and
andb
pop
stos
add
adc
cmp
test
in
in
daa
dec
push
cwtl
jo
mov
add
lock
cltd
jle
xchg
dec
dec
in
in
daa
cmp
dec
dec
rorl
daa
pop
in
mov
dec
cmp
push
pop
addr16
jp
and
sbb
add
mov
mov
add
adc
xor
pop
pop
mov
icebp
or
out
aaa
in
daa
xor
jmp
jmp
addr16
movhps
in
and
xchg
cmp
in
mov
add
aas
addr16
inc
push
leave
add
push
movsb
xor
pop
outsl
scas
xchg
pushf
cmp
and
mov
mov
daa
mov
rorl
adc
inc
call
arpl
cmp
adc
push
daa
pop
call
shl
dec
xchg
inc
jo
leave
call
pushf
daa
enter
jb
push
adc
in
add
cmp
xchg
mov
hlt
cmp
popl
and
adc
cmpsl
jmp
fucomi
fs
test
imul
sub
xor
out
in
pop
mov
mov
mov
pop
ljmp
imul
lahf
ljmp
push
mov
add
pushf
mov
mov
movsb
les
dec
test
jmp
mov
daa
sbb
hlt
cmovl
jbe
addr16
fildll
enter
push
add
das
mov
xchg
imul
outsb
out
int3
jg
mov
test
in
add
mov
fsubp
cmp
lsl
pop
adc
jbe
pop
in
xor
jmp
xchg
sub
aad
in
fcmovnb
or
in
add
cmpsl
inc
inc
mov
scas
imul
mov
imul
add
mov
jb
add
xchg
inc
repnz
sub
aas
in
pushf
insb
std
or
fisubs
in
enter
leave
add
cld
jae
cmp
sbb
insb
push
push
inc
inc
loopne
push
mov
add
daa
insl
push
ja
psrld
das
repz
push
dec
pop
adc
out
insl
sub
into
cs
adc
ljmp
aaa
in
xchg
mov
cmp
cwtl
jo
inc
ret
and
dec
and
mov
out
enter
cs
dec
hlt
aaa
and
in
adc
lock
in
push
test
mov
mov
inc
jb
inc
in
sbb
loop
cs
icebp
or
adc
scas
leave
dec
movsl
pop
aas
mov
leave
and
dec
sti
nop
mov
cmova
xor
and
fnstsw
add
jo
push
or
inc
jg
cmp
inc
push
repnz
repnz
pop
mov
decl
repz
jno
or
add
cmp
or
loopne
xchg
outsb
daa
repnz
lock
jbe
push
jnp
adc
sub
push
push
jno
jno
stos
shlb
jno
jb
sti
daa
push
mov
add
cmp
mov
in
in
pop
repz
jb
lds
add
pop
rolb
hlt
push
add
xor
ds
fs
sub
pcmpeqb
repnz
push
add
and
sbb
add
addl
cmpsb
mov
adc
hlt
shlb
xchg
subl
xor
jae
mov
negl
and
ja
inc
ret
pop
add
mov
inc
xlat
jbe
pusha
daa
daa
fists
mov
fistpll
jbe
push
leave
cmc
rolb
push
notb
ljmp
pop
fnstcw
sub
push
xor
xor
sbb
inc
das
dec
add
dec
ja
iret
or
leave
cltd
je
testb
pushf
mov
retw
lods
xchg
sbb
ud0
sub
or
xchg
pop
and
addb
in
pop
and
sbb
orl
imul
sub
sbb
inc
ss
and
sub
add
in
sbbl
mov
add
test
mov
push
adc
fsubrl
fimull
in
addr16
cwtl
push
fbstp
xchg
daa
and
add
ss
and
cmpsl
push
pop
leave
jae
insl
cmpsb
imul
in
add
ljmp
iret
cmp
jns
jg
pop
in
lock
add
and
adc
sbb
ja
add
xor
js
cs
dec
push
or
pop
imul
je
adc
sahf
xor
pop
dec
aaa
cmp
aam
or
push
mov
mov
pop
outsb
das
jns
rdpmc
cmovns
jns
push
pop
add
data16
xchg
jl
imulb
stos
mov
mov
inc
into
sahf
mov
add
dec
fiaddl
or
mov
push
adc
jp
idiv
in
and
jp
cld
pop
iret
jno
sub
imul
or
pushf
add
test
cld
mov
jp
adc
jle
enter
std
cmp
adc
daa
sub
scas
pop
stos
xor
es
xchg
dec
std
std
jnp
je
incl
jnp
add
sahf
jnp
mov
les
test
fisttpl
sbb
mov
add
lgs
jnp
jnp
dec
cmp
xchg
dec
faddp
enter
push
or
inc
mov
sbb
or
mov
jl
mov
jb
push
push
insb
lret
or
cltd
jg
mov
mov
mov
lret
rolb
dec
loop
jl
jmp
movb
pop
jge
jo
mov
in
cmp
push
add
outsl
jge
inc
mov
test
popl
lcall
add
or
dec
pop
out
in
movsb
out
idiv
xchg
sbb
jle
or
jle
pop
aaa
dec
jle
sbb
jb
jle
jle
jle
jle
cmp
lahf
cmpsl
addr16
mov
movsl
add
push
aam
xchg
addb
in
or
push
sbb
jb
push
das
pop
cmp
sbb
or
ss
push
jg
outsl
xor
pop
aas
jg
into
add
rorb
fidivl
sub
and
pop
jg
add
dec
mov
adc
adc
pushl
mov
leave
dec
push
fsubr
in
mov
add
iret
pushf
add
lods
iret
add
loopne
xlat
push
pop
mov
add
testl
dec
inc
fiadds
pop
pop
or
daa
or
xchg
daa
and
aaa
or
or
inc
push
dec
push
adc
mov
adc
ja
adc
jg
xchg
xchg
sbb
data16
dec
mov
int3
jo
mov
cmpsl
aam
filds
add
adc
cmp
adcb
jbe
sub
enter
enter
mov
add
push
popf
pop
and
lock
leave
xchg
adc
add
adcl
roll
push
pop
adc
xorl
inc
xor
int3
out
add
xlat
jbe
push
or
in
loop
test
xlat
test
mov
adc
test
cmp
inc
mov
daa
daa
dec
push
dec
or
pop
xor
enter
or
adc
ss
cmpsl
test
dec
addb
fs
daa
and
jno
mov
daa
jbe
inc
aas
addr16
insl
add
pop
or
loopne
mov
into
push
lock
adc
dec
xchg
dec
pop
adc
dec
add
movb
and
push
shll
insl
test
fadds
adc
andb
lahf
add
mov
add
add
loope
cmp
fwait
cmp
ljmp
daa
orl
sbb
pop
push
and
btrl
cmp
clc
scas
testl
decl
fucomi
add
incl
mov
insb
nop
addl
mov
cltd
ljmp
jns
dec
jmp
shl
in
frstor
sbb
int3
ficompl
add
clc
xchg
enter
push
xor
inc
or
or
insb
pop
or
test
xchg
xchg
add
xchg
and
add
add
jb
xchg
or
and
dec
pop
or
lahf
daa
xchg
imul
cmp
push
or
fs
pushf
fbstp
mov
and
mov
repz
xchg
dec
add
fimuls
out
jl
sbb
xchg
or
out
daa
daa
daa
mov
cmovle
ss
xor
cs
or
jmp
xorl
fimull
addr16
pextrw
jno
inc
sahf
int
aad
or
mov
mov
cmp
decl
dec
fisubl
imul
and
lcall
xchg
pushf
xchg
iret
or
adc
ret
mov
jg
inc
push
or
outsb
daa
and
add
and
and
out
fmuls
push
cmpsl
rorb
or
or
or
mov
mov
cmpsb
pop
sbb
xchg
add
nopl
push
push
push
xor
bound
outsb
daa
fs
xchg
cmp
aaa
push
lods
push
pushf
mov
mov
mov
adcb
pop
fisttps
loop
loopne
pop
add
sub
push
movaps
xchg
xchg
daa
in
out
push
cmp
dec
xor
je
push
addps
or
inc
rorl
jnp
int3
lahf
dec
shll
sahf
mov
mov
lret
cmpsl
xchg
adc
dec
push
clc
mov
icebp
sti
inc
adc
cmp
cmp
cmp
das
je
and
mov
mov
xlat
adc
xchg
scas
mov
mov
adc
adc
in
out
sbb
lea
cs
fs
insb
add
test
xchg
mov
jb
inc
jb
or
xor
xchg
movb
and
add
cmp
inc
xor
cmpsl
push
pusha
xchg
and
xchg
pop
and
lret
shlb
das
fiaddl
loop
cmp
push
aaa
leave
enter
aas
add
inc
fildl
fimull
adc
popf
adcb
adc
decl
in
xchg
daa
loope
in
add
add
repnz
add
nop
add
or
sbb
das
and
ucomiss
pop
pushf
mov
push
inc
cmovg
dec
inc
sbb
call
pxor
lea
xchg
popf
add
inc
dec
add
lods
mov
lcall
int
and
fbld
adc
xchg
leave
enter
or
add
jbe
dec
xlat
cmp
xchg
jnp
bnd
orb
sahf
mov
add
mov
lret
inc
rol
pop
lret
xchg
xchg
or
out
divl
sbb
call
add
cmp
mov
xchg
fisubrl
aas
push
insb
fildll
fisttpll
add
add
repnz
pop
pop
xchg
or
into
dec
xchg
and
or
xchg
jg
pop
adc
fidivrl
pop
push
xchg
sahf
dec
cs
scas
pop
mov
or
or
xlat
or
adc
dec
loope,pn
sub
sbb
sbb
je
outsl
xchg
das
push
aas
and
sub
push
jbe
xchg
mov
dec
push
shufps
negb
pop
outsl
cmpsl
ja
or
cmpsb
lcall
mov
add
jmp
push
add
lds
scas
iret
cwtl
sbb
mov
lahf
sahf
mov
push
sub
add
inc
add
dec
push
mov
xchg
xor
pop
jle
add
xchg
xchg
lret
xchg
sahf
add
cs
roll
in
and
fdiv
cld
push
add
or
sbb
xchg
xchg
mov
xchg
das
push
aaa
aas
inc
sub
or
xchg
dec
add
dec
jb
jb
mov
in
mov
vshufps
daa
daa
daa
aad
in
dec
and
xchg
in
or
movsl
bnd
xchg
addr16
sbb
jns
mov
sbb
inc
xor
cmp
add
xchg
fcmovne
inc
jbe
jbe
mov
cmp
adc
xchg
cmp
leave
out
in
inc
cwtl
movhps
fistps
imul
bnd
dec
pop
dec
add
push
pop
add
and
bound
push
int
popf
in
jb
rcl
jbe
outsb
daa
mov
sub
and
mov
call
mov
aaa
sbb
push
fisttps
das
aaa
rcrb
push
cmpsl
push
movsb
leave
inc
xor
pop
cltd
addr16
mov
xchg
dec
pushf
pushf
lahf
test
outsb
xchg
add
mov
lcall
lcall
rolb
fstpl
inc
push
movsb
add
lcall
stos
add
sbb
ret
shr
dec
fisubl
call
xor
dec
pop
pmulhuw
jbe
fwait
sub
cmovle
cmp
jb
add
outsl
add
cmp
cmp
pop
nop
fwait
or
sahf
mov
push
lret
daa
and
fsub
adc
std
jb
enter
or
sbb
cmp
pop
xor
pop
nop
pop
fcomps
and
unpckhps
leave
mov
data16
rolb
jg
outsb
fisubrl
iret
push
into
pop
xchg
cs
xchg
add
stc
inc
inc
pop
cmp
popf
add
and
daa
mov
sub
sub
popf
xor
xor
inc
inc
push
and
sbb
pop
push
or
dec
outsw
daa
insb
pcmpeqb
lea
and
and
sbb
repz
stc
jge
incb
setle
adc
or
add
mov
in
cwtl
lock
push
and
and
fidivrl
inc
xor
sahf
bound
push
push
jge
push
dec
pop
lahf
push
jnp
inc
mov
mov
xchg
or
out
outsl
mov
sbb
sahf
imull
add
push
loope
xchg
insl
jns
sahf
push
icebp
add
add
xor
lahf
or
push
pop
aas
lahf
in
in
fs
cmp
lahf
inc
dec
mov
leave
enter
pop
data16
insb
jmp
mov
loopne
dec
xchg
jg
add
lretw
rorl
daa
daa
mov
fistpl
jecxz
jmp
sti
mov
and
dec
xor
in
mov
mov
dec
push
mulps
test
and
shld
scas
push
mov
fs
xchg
pop
pushf
add
movsb
call
mov
or
out
xlat
and
inc
mov
loop
in
fbld
frstor
jns
in
lahf
and
cmp
push
outsb
daa
lods
aas
mov
and
fistpll
xor
mov
in
or
es
mov
inc
inc
mov
leave
mov
mov
mov
into
ftst
add
das
inc
mov
add
add
adc
sbb
or
or
cmp
cmp
or
in
xchg
and
jae
jle
mov
sub
adc
push
lahf
adc
stos
push
mov
rcrb
sbb
leave
xchg
and
sbb
sbb
leave
leave
leave
leave
pop
push
adc
leave
adc
adc
test
leave
leave
femms
or
pop
sub
test
adc
nop
sbb
sbb
pop
loope,pn
ja
sub
add
jb
sahf
jmp
adc
jb
frstor
push
mull
push
in
pop
mull
add
movd
mov
inc
repnz
sub
push
sub
daa
pop
lahf
mov
pop
scas
mov
sarl
sub
dec
ljmp
mov
movsb
adc
repnz
std
push
pop
add
sbb
popa
add
jno
jns
dec
adcl
or
lods
leave
inc
repnz
xlat
data16
dec
adc
leave
xlat
fbld
into
movsl
sub
xchg
xchg
dec
sbb
add
mov
sub
and
xchg
addb
movsl
pushf
int3
sahf
pushf
lods
mov
xchg
mov
test
fs
shr
pop
clc
movntps
cmpsb
aas
cmpsb
mov
rcrb
sub
aas
sub
outsl
fsts
pop
data16
in
leave
enter
jle
pop
xchg
in
in
mov
sahf
or
scas
or
out
cmpsb
ret
sub
movb
sub
leave
lret
xchg
xchg
jmp
add
add
cmp
xlat
cmpsl
and
cmp
in
das
cmp
cmovne
add
pop
xchg
and
mov
or
inc
fldcw
xlat
push
sahf
add
mov
add
xchg
daa
and
pop
into
or
and
testl
fsubrs
stc
pop
add
cs
cs
add
sub
enter
add
sbb
leave
dec
jnp
test
push
xor
cmpsb
loope
in
add
in
and
xorb
loopne
inc
int3
ja
xor
rorb
fadds
loopne
pop
inc
push
lahf
das
das
test
jnp
add
out
in
xchg
xchg
ss
aas
mov
daa
mov
pop
cmpl
pushf
movsb
mov
xor
das
out
iret
mov
xchg
pushf
dec
addr16
and
stos
sbb
sub
pop
aas
pop
punpcklbw
insl
mov
xchg
in
imulb
add
mov
mov
xchg
add
push
stos
fwait
nopl
cmp
pop
add
scas
cli
dec
xor
pop
lahf
or
xor
dec
movl
mov
leave
leave
dec
mov
xor
fs
xor
stos
xchg
out
jmp
push
and
jb
enter
add
add
jns
dec
dec
add
or
cmp
push
pop
or
mov
inc
pop
outsb
pcmpeqd
test
pushf
pop
and
mov
in
xor
int3
adc
leave
mov
pop
lods
xchg
mov
and
mov
lods
pop
pop
push
add
jb
jnp
lahf
push
ja
jg
jb
xor
xchg
jb
stos
mov
mov
vpmovmskb
adc
xchg
mov
lods
cli
lods
add
orl
fisttpll
daa
lods
sub
inc
push
xor
loopne
lods
push
jnp
scas
jne
push
addb
cmp
mov
add
inc
sahf
mov
or
daa
and
or
fdivs
test
scas
or
sbb
pushl
sbb
ficomps
ss
add
mov
push
jb
lock
sbb
cmp
outsl
scas
imul
add
jl
popf
nop
invd
das
add
fdivl
aas
xlat
pop
sbb
dec
xor
divb
xchg
or
btc
andb
push
cmp
sbb
mov
mov
cmpsl
les
cmovg
mov
add
pop
mov
mov
ja
xchg
pop
mov
ja
leave
dec
in
addr16
xchg
xchg
adc
pop
add
jns
sbb
inc
add
aaa
mov
in
imulb
mov
lahf
jp
cmpb
in
mov
setb
add
pushf
sbb
add
mov
mov
and
or
ret
enter
pop
adc
lds
mov
pop
addr16
stos
dec
cmp
inc
inc
fidivs
push
add
xchg
xchg
and
push
popa
pusha
in
enter
jns
cmpl
cmp
mov
outsb
mov
cs
lods
lfs
mov
pop
mov
unpcklps
mov
fidivrs
and
or
int3
jnp
pop
push
mov
sahf
mov
in
adc
adc
and
mov
adc
push
in
in
cmp
inc
dec
push
sbb
repnz
sbb
insb
mov
jl
and
and
xchg
pushf
dec
movsb
mov
sub
sub
les
int3
sub
sub
fsubrl
in
in
hlt
je
push
xor
pop
movl
push
pop
ljmp
cmp
mov
dec
incl
and
cmp
subps
add
push
dec
add
pushf
mov
xor
jbe
jne
test
xchg
in
ror
rorl
dec
ror
in
cmp
xchg
cmp
mov
ja
mov
sbb
add
add
sub
pop
ss
outsb
mov
inc
dec
das
push
dec
pop
punpckldq
outsl
push
cwtl
push
adc
jb
test
mov
mov
and
rclb
cmp
in
negb
sbb
and
sbb
sbb
sbb
in
xchg
pop
inc
and
pop
and
sbb
bound
outsl
and
and
xchg
and
sub
jbe
jb
sub
fcmovnbe
jg
lahf
jmp
and
sahf
pushl
and
sbb
in
xchg
push
and
sub
xor
inc
mov
cmp
inc
sbb
push
in
xchg
and
adc
adc
test
and
inc
js
in
dec
mov
mov
stc
jb
sti
testl
mov
add
or
adc
push
or
jb
enter
or
push
or
mov
pop
or
jp
in
xchg
and
mov
jb
adc
adc
enter
int
xlat
sbb
sbb
jb
out
sbb
sbb
add
and
sbb
sub
xor
das
inc
dec
dec
outsl
pop
pusha
sbb
inc
mov
imul
sbb
xchg
in
xchg
and
adc
cltd
sub
adc
cmp
les
int3
paddq
fmull
in
in
or
or
jb
lret
cld
or
sbb
sbb
add
cmp
insb
daa
and
das
xchg
lret
push
mov
cwtl
fsubrl
mov
xchg
fcmovnb
pop
add
push
push
popf
add
movsl
lods
pop
pop
mov
mov
mov
enter
int
aad
fisttpll
popf
mov
in
in
adc
std
fmull
sahf
add
pop
dec
inc
sahf
pushf
daa
xor
cmp
leave
lret
sbb
sbb
addr16
sbb
inc
mov
push
xchg
add
mov
and
rorl
dec
outsb
pand
jmp
daa
daa
inc
dec
sti
mov
xchg
xchg
mov
das
push
adc
xor
pop
outsb
daa
mov
aas
inc
cmovg
pop
dec
dec
dec
dec
outsl
ja
xchg
and
xchg
ret
enter
and
fstl
mov
repnz
out
out
idiv
mov
push
pop
push
pop
and
mov
or
add
dec
inc
inc
dec
push
pop
push
pop
mov
pusha
adc
push
in
cmp
xchg
fsts
mov
add
cmp
enter
add
add
mov
pop
ljmp
cltd
cmp
and
pop
and
cmp
push
cmp
inc
adc
mov
xchg
adc
jne
fisubrs
fwait
pop
mov
mov
and
rcrb
fucom
in
enter
pop
mov
jns
adc
pop
sub
xor
inc
and
dec
dec
outsb
daa
insb
emms
orb
mov
mov
push
xor
cmp
inc
mov
adc
sbb
add
sub
or
cmp
or
pop
addr16
jb
jb
outsl
ja
xchg
jns
jb
xchg
lahf
adc
scas
pop
mov
mov
dec
push
iret
adc
xlat
sbb
cmp
fistps
sbb
and
inc
adc
adc
leave
leave
jecxz
sub
ds
leave
leave
leave
inc
dec
push
pop
dec
xchg
mov
cmp
data16
push
add
cmp
cmpsl
cmp
add
jb
xor
jecxz
fbstp
or
rorl
push
fs
enter
das
or
in
inc
pop
push
jg
pop
punpckhbw
jb
in
leave
jae
adc
mov
jbe
mov
mov
inc
mov
sbb
sbb
daa
and
iret
and
into
into
outsb
mov
pop
bnd
lahf
ret
or
ret
adc
fmull
psrlw
sub
sub
fsts
sub
or
enter
das
sub
xor
and
sbb
xor
push
xor
jb
enter
ss
cmpl
lea
ret
push
cmp
cmp
ret
aas
cmp
and
dec
cmp
aas
enter
insl
js
jae
jb
cltd
inc
movsb
inc
mov
mov
lret
das
dec
loope
paddsb
loope
add
testl
imul
faddl
ja
shlb
mov
mov
push
xor
fs
cmp
inc
outsl
push
dec
add
add
arpl
outsb
pop
jns
or
dec
inc
into
setno
pushf
test
xchg
and
push
into
pand
xor
jb
call
add
cmp
fstps
scas
push
sbb
cltd
cmp
dec
cvtps2pd
jbe
repnz
jb
jg
bswap
in
notb
xchg
mov
cmpsl
es
test
add
push
lidtl
push
add
push
dec
dec
jbe
dec
sbb
cmp
add
pop
add
add
jne
pop
mov
xchg
and
sahf
mov
xchg
and
mov
dec
int
fmuls
enter
in
psubq
movl
fistl
pop
adc
pushf
cmp
cmp
sbb
sbb
inc
sahf
pushf
clc
mov
xchg
and
and
daa
dec
inc
mov
loop
cwtl
nop
and
bswap
add
daa
sbb
and
dec
or
push
mov
dec
enter
add
enter
addl
mov
leave
fwait
mov
lahf
mov
dec
mov
xor
fsubrp
add
repz
iretw
dec
int3
iret
leave
pop
leave
adc
pop
pop
and
dec
sub
push
or
insl
leave
enter
or
or
in
mov
pop
cltd
adc
cmp
mov
aas
rclb
fldenv
and
pop
call
fists
lret
sbb
and
cs
cmp
inc
mov
and
imul
and
iret
mov
out
lret
pop
xorl
sbb
dec
scas
fisttpl
cwtl
push
sub
cmp
test
mov
call
xor
lret
or
unpcklps
inc
mov
inc
or
in
xchg
and
or
jne
jb
or
sbb
mov
push
stos
adc
int3
sahf
mov
fistl
mov
outsl
cld
bswap
pop
sbb
pop
in
mov
xor
push
dec
dec
pop
cmp
lret
push
js
inc
and
das
int3
cltd
dec
daa
inc
mov
push
test
daa
mov
and
shll
psubusw
loope
aas
test
call
int
push
unpcklps
adc
in
idivb
cmp
sbb
pop
push
push
and
js
andb
jg
cmpsl
xchg
xchg
and
int
int
jbe
xchg
mov
fcomip
enter
int
int
add
setno
filds
push
push
or
or
leave
fsts
inc
or
sbb
jb
dec
addps
arpl
outsb
mov
adc
in
in
jbe
jg
lahf
lcall
cmp
sbb
inc
sahf
int3
sahf
ficomps
pop
jmp
stc
jae
bswap
or
adc
outsb
and
es
inc
cmovl
mov
cmpsb
sub
push
cmp
sbb
das
idivb
push
mov
notl
daa
int3
inc
mov
lcall
out
iret
mov
lret
cs
push
xchg
jno
cmpsl
push
add
cmp
int
sub
sub
push
add
add
cmp
or
adc
imul
or
jbe
ds
push
mov
in
fcmovnb
pop
rcll
fcoml
out
stc
jb
repnz
push
pop
pusha
sbb
imul
mov
dec
inc
into
das
xchg
sbb
push
cltd
cmp
das
icebp
rclb
and
push
inc
sahf
mov
es
daa
mov
xchg
and
pusha
pusha
aas
pusha
xchg
xchg
and
sub
flds
xchg
xchg
aas
in
leave
enter
das
mov
pop
testb
lock
or
rdmsr
jnp
jb
or
sub
sbb
aas
dec
scas
inc
push
pusha
xor
xor
in
jnp
femms
cmp
in
in
fs
pop
das
addr16
xchg
xchg
mov
jg
mov
xchg
or
stos
or
ret
das
into
psubusw
xchg
xchg
mov
pop
in
out
cli
adc
aam
leave
enter
adc
in
fs
sbb
dec
orps
leave
enter
outsb
jns
test
fisttpl
and
jbe
in
lcall
mov
rcl
or
mov
repnz
sub
inc
sahf
int3
sahf
lcall
das
daa
mov
and
shll
pop
fsub
xchg
fsts
xor
outsb
mov
das
arpl
outsb
jns
fldt
dec
dec
std
iret
or
push
leave
dec
adc
into
sahf
sub
add
xchg
sbb
jb
popl
dec
pop
push
sbb
pop
or
mov
das
setg
dec
mov
sub
mov
or
jnp
dec
or
pop
mov
jmp
negl
or
sbb
mov
add
nop
mov
lods
adc
xchg
jne
shr
mov
add
adc
or
dec
nop
arpl
push
xorb
xchg
xorb
push
add
jp
pop
stos
inc
adc
dec
xchg
inc
jae
inc
movsl
scas
pop
inc
outsb
dec
jo
rcrb
mov
movl
outsb
xor
out
sahf
out
push
or
or
mov
xchg
or
or
or
jge
push
ja
add
scas
adc
cmp
das
and
jb
inc
push
addr16
das
fsubrl
fistl
push
mov
insl
daa
iret
repz
and
jb
outsb
mov
outsb
pop
andb
cmpb
jns
or
pop
xchg
sub
mov
xor
mov
xlat
sbb
data16
sbb
xchg
nop
mov
mov
adc
adc
xchg
adcb
jmp
add
add
xchg
add
sbb
jmp
scas
adc
mov
pop
stos
nop
sbb
test
faddl
add
movsb
add
fsts
jns
and
cli
mov
loopne
inc
jle
test
shll
mov
inc
mov
pushl
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
xor
mov
xchg
jl
js
jo
cmp
repz
fs
push
dec
repz
repz
xor
and
repz
sbb
or
add
cmp
cmp
hlt
lock
cmp
call
repz
sahf
out
sahf
mov
mov
out
test
repz
mov
repz
cmp
sub
sbb
cmp
sti
mov
cld
push
in
fadd
mov
repz
mov
js
sahf
out
jo
push
jns
out
inc
xor
out
ficoms
in
fmul
dec
leave
jp
mov
jo
ja
icebp
jl
push
mov
popa
test
xor
push
xcrypt-ecb
cmpsl
jo
mov
or
rolb
add
sub
divb
incl
dec
sbb
aas
sbb
jbe
mov
ss
adc
lretw
jae
xorb
inc
in
f2xm1
icebp
call
push
mov
mov
inc
push
mov
inc
fdivs
rolb
push
dec
andl
shll
add
adc
add
adc
add
add
add
jg
testb
test
pop
das
insl
add
fldt
iret
or
pop
inc
xchg
pop
and
jae
cs
push
enter
lds
in
sub
jo
xlat
add
add
out
call
testb
adc
add
add
inc
sbb
repnz
and
into
mov
paddq
aas
xor
movaps
das
mov
mov
xchg
and
or
adc
jb
in
enter
adc
adc
or
inc
mov
pop
pop
clc
and
and
and
enter
and
pushf
pop
orl
shll
subl
and
outsb
ret
adc
xor
xchg
cmp
cs
outsl
in
xchg
incl
xorl
fistl
sahf
out
pop
cmp
pop
js
mov
idivb
jns
adc
xor
dec
insl
add
cmp
fwait
cmp
pop
ja
mov
jnp
iret
shl
jae
das
push
dec
insb
mov
add
ds
mov
stc
nop
cli
or
or
ret
jae
hlt
adc
ljmp
jg
mov
leave
sbb
into
sbb
rorl
and
push
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
ljmp
mov
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
decl
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
incl
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
decl
xchg
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
ljmp
int3
jg
lahf
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
call
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
incl
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
dec
cld
inc
mov
aas
xchg
les
jne
int
mov
addr16
dec
lods
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
lcall
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ljmp
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
jg
lcall
dec
dec
gs
std
orl
pop
ficomps
frstor
and
mov
add
insl
mov
lods
mov
push
add
and
inc
je
inc
inc
push
dec
inc
test
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
cmp
jg
ljmp
mov
pop
push
inc
dec
stos
insl
jbe
inc
jo
inc
popa
push
outsb
jbe
imul
push
sub
outsl
mov
aas
dec
insb
imul
dec
push
mov
or
and
sub
jno
pop
jnp
popa
push
dec
push
cmpb
loopne
dec
push
nop
push
addb
jo
jb
push
inc
sub
inc
test
inc
shrb
jb
gs
pop
inc
adc
and
push
inc
arpl
add
test
mov
sub
mov
bound
outsl
push
dec
pop
mov
or
xchg
xchg
add
xorb
dec
sub
xchg
or
sub
mov
push
fs
mov
aas
or
addb
xor
xor
daa
dec
jae
mov
inc
jne
push
and
inc
inc
inc
jg
lds
loopne
lahf
push
lods
pop
addl
push
push
cmp
mov
push
mov
je
dec
adc
les
inc
push
and
fimull
in
inc
clc
adc
rcl
sbb
out
dec
push
dec
dec
mov
das
adc
dec
bound
jbe
mov
bound
test
cltd
push
mov
bound
add
int
cmpsb
dec
pop
add
xchg
iret
sub
inc
jmp
outsb
arpl
outsl
pop
mov
add
pop
xlat
xor
sbb
and
lret
push
pop
mov
cmp
mov
push
pop
mov
or
mov
sub
mov
imul
add
sbb
and
pop
push
push
imul
jo
pop
outsl
push
jb
pop
sub
lds
and
das
rolb
push
xlat
push
push
in
and
jp
lock
push
stos
adc
gs
mov
inc
pusha
push
repnz
mov
push
movsl
pop
mov
inc
arpl
push
push
inc
jno
stos
cmpsl
pusha
out
sub
sbb
mov
lds
xchg
insb
and
pop
xchg
add
mov
inc
mov
data16
or
cltd
insb
and
outsl
ja
andb
insb
and
xchg
das
ja
andb
arpl
jne
ret
pop
les
adc
push
adcl
orl
pop
push
dec
std
cmpsl
push
add
push
pop
sub
aad
push
inc
inc
dec
movsb
mov
lods
or
inc
and
mov
nop
jg
mov
or
sub
cmp
lahf
movsb
and
mov
push
push
pushf
and
cmpsl
insl
push
or
sbb
hlt
push
dec
dec
stos
fdivl
push
inc
js
xchg
jae
inc
push
cmpsl
insl
arpl
mov
jbe
xchg
insl
imul
or
push
jne
les
outsl
add
add
mov
pop
insb
insb
scas
dec
outsl
addr16
sbb
cmpsb
iret
mov
push
inc
iret
pop
les
test
sbb
sbb
xlat
push
pusha
adc
dec
jg
xchg
push
push
pusha
dec
xor
xchg
clc
out
sahf
out
enter
shlb
adc
cld
mov
loop
dec
gs
push
pop
add
push
out
push
and
call
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficompl
jmp
mov
push
movl
imul
std
in
leave
mov
add
insb
push
arpl
ud0
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
shrb
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
fbld
or
adc
stos
sbb
data16
inc
fdivl
jno
add
lcall
mov
mov
movsl
in
lahf
xor
dec
jmp
pop
mov
stc
lods
test
call
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
incl
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
pushl
add
inc
movsl
fisttps
xchg
fadd
shll
jmp
cld
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
ljmp
adc
mov
and
test
or
mov
popa
into
push
stc
ficomps
lcall
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
pushl
loop
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
incl
insl
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
call
mov
add
inc
push
imul
xorb
sbb
push
imul
mov
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
jmp
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
decl
sub
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
mov
outsl
and
xchg
ja
int3
add
mov
das
es
push
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
lcall
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
lcall
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
mov
scas
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
cld
call
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sahf
sarb
sub
push
mov
jp
nop
pushl
add
push
sub
mov
or
sbb
mov
mov
sub
scas
cs
dec
pop
mov
mov
ds
fdiv
adc
inc
jne
std
movsl
inc
add
imul
mov
xchg
xlat
lahf
pop
inc
jbe
adc
jns
arpl
arpl
ja
push
in
mov
push
inc
insl
jns
shl
pop
inc
jne
outsl
insl
addr16
dec
mov
xchg
fildl
movsl
or
xlat
aaa
adc
aaa
adc
mov
dec
inc
js
inc
insl
bound
inc
or
push
mov
jo
add
js
mov
dec
orl
jno
notb
pop
inc
cmp
pop
bound
xor
aaa
idiv
cmp
popa
arpl
cmp
arpl
or
xor
shl
bound
popa
shlb
push
inc
jbe
pop
sbb
pop
inc
mov
push
dec
inc
loope
cmp
or
or
sub
sub
fbld
mov
inc
mov
push
into
push
cmpsb
lcall
jne
push
inc
aas
sbb
xor
jle
inc
sbb
and
inc
push
sub
or
getsec
adc
adc
insb
popa
jns
push
mov
mov
popa
xchg
add
aaa
je
aaa
lcall
in
and
cmp
aas
add
insl
or
and
jae
movsb
mov
fidivl
push
xor
inc
aaa
inc
movl
sbb
inc
pop
testl
jo
inc
inc
add
push
ds
push
scas
add
cli
mov
int
push
dec
dec
dec
jo
cmp
rclb
fs
outsb
jne
pop
insl
dec
and
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
stc
pusha
add
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
xchg
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
jno
push
pop
in
push
dec
xor
pusha
in
nop
test
pop
cmp
xor
arpl
int
adc
cmp
mov
jo
push
xchg
pop
inc
test
insb
jns
das
insl
pop
or
popa
jb
and
aad
fiaddl
nop
adc
insb
adcb
or
iret
loope
add
push
bound
pop
push
shll
arpl
addr16
insl
pop
pop
divl
push
add
dec
inc
sbb
popf
xor
add
mov
test
icebp
addb
add
and
or
pop
adcb
sbb
punpckhwd
cmpsb
jbe
loop
hlt
push
testb
and
push
or
sub
aas
or
outsb
push
cmc
jg
cmc
push
sbb
aaa
pop
aam
gs
fdiv
aaa
push
loop
aaa
pop
add
add
cwtl
inc
add
les
push
add
aas
pop
inc
stos
mov
add
adcb
or
out
insl
add
push
add
pop
nop
inc
and
insb
nop
jno
pop
clc
sbb
pop
or
fcmovu
mov
int
mov
add
adc
popa
insl
xlat
add
mov
outsb
outsl
je
jb
jg
xorb
inc
dec
push
and
push
test
and
cmpsb
dec
shrd
popa
incl
repnz
or
lea
bswap
mov
into
jmp
jmp
jmp
repnz
in
push
pusha
call
xchg
iret
mov
dec
cli
push
cld
or
sar
imul
sub
cld
dec
inc
add
and
mov
daa
fcompp
rcrl
and
add
sbb
insb
daa
aam
cmp
cltd
test
pop
add
mulb
add
fcompp
add
sbb
add
lcall
mov
dec
rorb
stos
jns
sub
push
loop
and
dec
adc
adc
dec
enter
pop
add
cmpb
shrb
add
les
loopne
and
lods
add
jb,pn
push
or
adc
and
sar
repnz
lret
cs
mov
fs
dec
or
adc
insl
rcrb
out
and
jb
repnz
cltd
test
push
dec
sbbb
add
add
aaa
jecxz
sbb
sti
flds
inc
adc
les
jmp
inc
pop
push
add
mov
das
dec
sub
lea
or
ljmp
or
dec
jne
pusha
jecxz
adc
xchg
xchg
jno
inc
mov
js
pop
mov
inc
dec
push
or
mov
std
cmp
imul
push
negl
xor
pop
jno
int3
sbb
cli
fucomi
gs
add
movsl
imull
cmp
ja
jne
jmp
mov
cmp
cmpb
call
or
sbb
inc
lret
int3
loope
xchg
push
adc
mov
daa
and
mov
fsts
dec
mov
jl
les
pop
movb
add
push
pop
adc
lret
xchg
jns
fwait
mov
or
cmpb
fstpt
mov
sbb
push
movzbl
or
and
nop
fadds
mov
insl
ljmp
ficompl
ret
in
xor
jbe
mov
xchg
lcall
call
out
flds
and
pop
cmp
push
mov
addb
push
push
adcb
loopne
popf
pop
dec
mov
inc
call
rorb
fistl
sbbb
push
add
outsb
dec
ret
ja
sbb
clc
pushf
and
sub
sub
aad
or
jns
jne
push
inc
imul
add
adc
and
push
fcomps
cmpsb
or
sti
sbb
outsb
scas
in
enter
inc
dec
and
sub
lock
xor
dec
cmp
adc
xchg
es
add
rorb
mov
adc
clc
popa
roll
mov
sarl
lea
out
imulb
fs
addl
or
enter
dec
notb
push
and
out
in
adc
push
leave
push
fs
mov
cmp
pop
add
jp
add
loop
or
push
mov
add
and
cmpsl
adc
iret
mov
test
je
mov
je
cvtps2pd
pop
push
ret
inc
adc
xchg
mov
dec
push
sub
sbb
std
bound
sahf
lea
mov
popa
mov
and
inc
lock
rcr
daa
push
roll
pop
mov
es
push
aam
div
pop
hlt
je
inc
test
movb
dec
adc
inc
fdiv
mov
jb
push
mov
aam
lea
mov
and
mov
mov
sbb
loope
loop
xor
mulb
mov
loopne
add
andb
add
popf
adc
push
gs
in
imul
and
or
pop
jl
rol
lock
cmp
loop
insl
rclb
push
xlat
hlt
or
mov
pop
pop
cmp
cmpsl
sbb
imul
add
jne
add
cmpsl
sbb
in
push
pop
data16
jmp
and
push
push
and
sbb
fcoml
and
in
xor
inc
ljmp
imul
loop
je
call
andl
insb
fmull
add
jns
sub
shrb
fimull
lahf
push
mov
shlb
pop
aam
mov
cmove
sbb
fcoml
test
mov
xor
jmp
add
cmp
jno
lds
cmpsl
jl
sbb
cmpsb
nop
jmp
xchg
stc
jp
inc
daa
xchg
push
push
fnstsw
js
push
push
mov
sbb
je
or
inc
or
or
jnp
shll
xchg
sbb
mov
mov
mov
or
pop
rolb
cmpl
data16
ret
or
mov
xchg
jl
subl
in
insb
pop
lea
ss
sahf
movsb
mov
add
mov
call
int
add
les
xchg
and
fwait
add
scas
add
dec
enter
xor
shlb
push
lret
mov
cmp
sub
jecxz
enter
clc
pusha
push
xchg
clc
and
sbb
push
jmp
call
ds
std
or
pop
jle
call
jne
xchg
and
xor
mov
push
xor
push
xor
jo
adc
ss
mov
ss
hlt
jmp
shll
outsb
push
mov
push
fadds
lock
stos
pand
std
dec
rolb
and
call
mov
mov
push
fdivrl
lods
or
ja
pop
adc
xchg
xchg
sbb
sbb
mov
inc
into
pop
in
dec
push
inc
fimull
xchg
je
stos
cmpsb
test
add
add
inc
pop
jnp
mov
cs
mov
in
sbb
cs
popf
out
mov
shl
dec
pop
dec
leave
or
hlt
ficompl
dec
scas
popf
xchg
push
inc
cld
rol
hlt
push
xor
clc
sbb
in
orl
loopne
push
and
es
ret
sub
fcoms
xor
cmp
push
jecxz
inc
movzbl
mov
testl
mov
dec
xchg
sbb
pop
ss
aas
stos
sarb
pop
lds
and
mov
sub
mov
movsl
aaa
dec
fdivrs
gs
dec
cmp
movsl
add
mov
bound
or
mov
es
push
hlt
push
adc
ret
xchg
cld
push
jns
fistps
test
mov
adc
sub
and
and
add
push
sbb
ds
lret
cmc
lock
cmc
xor
and
test
lcall
add
xor
ds
loopne
ficomps
push
push
sbb
sbb
sbb
push
jnp
pusha
loop
fdivr
pop
adc
push
out
sbb
cltd
sub
xor
push
push
push
dec
fdiv
jno
adc
cmp
xor
pop
pusha
mov
int3
call
push
push
pop
mov
cltd
pop
mov
cmp
jmp
mov
repz
and
jb
adc
xchg
rcrl
mov
negl
jb
call
out
les
ds
xlat
popf
sub
sti
rolb
addr16
xchg
xchg
shl
mov
insb
loop
push
push
lea
adc
mov
pop
cmp
rorb
mov
scas
mov
push
or
je
fcmovnb
test
mov
loopne
das
and
mov
scas
sub
daa
rol
fcmovnbe
jbe
lods
add
cmp
xchg
add
cmpsb
imul
pop
cmpsb
mov
xchg
call
jnp
xchg
popf
xor
xor
shrb
dec
mov
ret
push
jl
cmp
fsubl
mov
add
stos
pop
mov
mov
jmp
mov
jl
enter
xor
call
pop
hlt
mov
int3
or
mov
xchg
mov
mov
push
add
mov
jns
rorb
adc
sub
pop
aas
pop
mov
pop
add
mov
lds
xor
enter
cmpsb
icebp
adc
rep
add
incb
rep
push
mov
adc
cmp
cmpsl
inc
out
shll
jle
rcll
aas
mov
and
aaa
insl
movsl
cmpsl
inc
mov
in
rep
in
push
inc
or
sarb
shlb
mov
xor
rolb
push
pusha
dec
cwtl
sbb
js
mov
jb
pop
stos
adc
call
ljmp
pop
pop
stos
or
xchg
ret
je
pusha
pop
or
fs
xor
dec
add
fistl
sbb
je
mov
cmp
scas
sbb
add
sahf
pop
fisttpl
enter
or
xchg
mov
mov
push
xor
dec
adc
inc
stos
sahf
dec
xchg
pushf
data16
xor
sbb
imul
into
dec
jnp
rcl
fiaddl
mov
loope
imul
push
xlat
loopne
gs
pop
cmpsl
cmp
jmp
movsl
cmp
stc
push
js
mov
dec
dec
popa
mov
std
sub
pop
ficoms
or
insl
movsl
lods
dec
add
push
or
xchg
scas
dec
adc
mov
cwtl
push
or
ss
sub
push
jae
jb
loopne
and
cmp
jle
xor
pop
jmp
adc
ljmp
push
mov
sbb
gs
cmp
pop
fldenv
in
in
push
add
pop
push
and
pop
jb
mov
inc
pop
and
and
pop
dec
sub
push
mov
divl
pop
xchg
loope
and
cmp
jo
dec
in
push
sub
in
in
shrl
pop
mov
or
xor
test
push
insb
cmp
ret
mov
sub
and
ds
sub
loop
or
mov
adc
adc
loopne
pop
mov
cmp
sbb
repnz
lock
je
inc
mov
sub
mov
cmp
mov
sbb
mov
sbb
je
in
in
in
jno
lock
sbbb
jle
mov
jbe
sbb
or
pop
cmp
or
ret
adc
add
es
cmpsl
in
inc
fildl
test
fistpll
push
fbld
mov
test
adc
mov
aas
inc
sbb
jne
lods
inc
out
inc
xor
std
jo
and
fidivrs
xor
les
mov
pop
push
pop
fistl
dec
mov
xor
js
int3
adc
cmpsb
adc
jmp
add
mov
cmpsb
fcomp
inc
test
mov
enter
mov
cmp
mov
inc
push
mov
movswl
sbb
jb
mov
test
aad
mov
adc
lods
lods
dec
xlat
push
push
mov
jecxz
arpl
sub
push
jg
lea
dec
lea
jb
cmp
push
repz
add
into
cmpsb
xchg
xchg
in
dec
adc
or
and
rorl
int3
sbb
cmp
addb
dec
rclb
jl
xor
loop
test
add
mov
arpl
ljmp
in
push
adc
jp
adc
jne
sbbb
pop
sub
or
pushf
sbb
xchg
xchg
test
ljmp
push
add
imul
mov
cld
mov
call
test
mov
es
sbbb
cmp
mov
ss
inc
and
jno
int3
pop
lret
xchg
popa
inc
dec
pop
lahf
loopne
add
add
add
or
je
xor
fldl
leave
ret
sub
cmp
adc
or
loopne
add
outsb
dec
or
mov
adc
inc
mov
lret
mov
fimull
sbb
xor
bound
jmp
lods
mov
pop
loopne
mov
lods
xchg
jle
and
dec
push
cld
fwait
ss
mov
cwtl
aaa
lret
les
pop
cmp
insb
cld
adc
test
add
or
mov
mov
add
mov
les
jns
jne
sub
lods
jbe
or
mov
xor
mov
nop
push
add
outsb
orb
adc
mov
sahf
test
mov
cmp
jne
push
fnstsw
daa
cmp
adc
push
jge
mov
push
xchg
push
jbe
das
insl
inc
rolb
hlt
repnz
push
mov
dec
inc
sub
call
adc
out
push
std
or
or
shr
pushl
or
mov
inc
push
xor
enter
stos
std
std
outsl
xchg
and
xor
mov
cli
sbb
inc
jo
inc
shll
cmp
call
lea
add
aas
lcall
repnz
loopne
or
push
push
push
push
jns
add
inc
adc
setb
pop
push
jo
cld
sub
repnz
sub
pop
dec
adc
std
stc
hlt
pop
mov
and
push
push
xor
dec
xorb
ss
cmp
insb
xchg
aad
das
rorl
add
cmp
jge
jne
cmp
and
mov
outsb
mov
mov
pop
movsb
or
jl
mov
xchg
enter
cmp
pop
sbb
fcoms
out
je
sub
mov
lock
pop
add
adc
jnp
int
mov
add
andb
mov
jmp
les
mov
fs
or
add
inc
cmp
addr16
lods
or
sbb
xor
jp
repz
push
push
subb
shrb
pop
jl
adc
xchg
adc
cmp
dec
iret
cmp
push
ret
popa
xor
popf
mov
inc
mov
pushl
movsl
xor
cwtl
inc
jecxz
push
mov
push
enter
call
xchg
mov
ds
sbb
leave
es
pop
in
jbe
or
xor
push
fldcw
sbb
pusha
mov
ret
push
pushf
cmp
jle
clc
push
or
enter
andb
xor
je
std
jmp
and
xor
insb
call
inc
jmp
in
lods
jge
or
jle
or
cmp
jnp
mov
shl
sarb
mov
pusha
lcall
adc
inc
addb
scas
insl
loop
cmp
cmpsb
test
sub
lds
ds
dec
sbbb
push
add
fadds
dec
and
pop
adc
mov
enter
sbb
cmp
add
push
mov
repnz
adc
jne
mov
jmp
or
xchg
mov
inc
js
or
sbb
push
fadds
cmp
bound
js
xor
jbe
loope
pop
or
mov
add
mov
push
mov
xchg
and
lock
xor
cs
cmp
cmp
or
fisubrl
jne,pn
ljmp
add
adc
cmpsb
and
sub
add
iret
mov
cmp
ss
mov
test
cmpsb
jmp
sub
mov
mov
mov
mov
movsl
jne
xorb
or
lods
add
push
out
popf
call
pop
in
out
insl
push
fucomip
cmp
je
cmp
jbe
jge
add
jne
inc
push
add
sbb
mov
clc
push
and
std
and
inc
mov
jbe
and
aad
or
sbb
scas
loope
fcoml
xchg
push
push
mov
cli
adc
push
popf
dec
mov
mov
xor
pushf
fwait
or
loop
test
inc
or
addl
add
push
adc
xor
mov
xchg
xchg
imul
mov
or
mov
rorl
xchg
mov
rorb
test
sbb
jbe
jbe
fwait
jmp
xchg
lock
push
mov
aas
fisubs
push
sbb
adc
movsl
cltd
adc
pop
adcl
call
imul
mov
js
inc
adc
pop
add
in
push
or
sti
enter
push
je
push
mov
lea
dec
jle
test
popl
jne
loopne
test
loop
sbb
dec
sbb
sub
pop
push
lea
insb
and
pop
xorb
push
xchg
aam
mov
data16
push
jecxz
jle
push
cmpsb
aam
mov
popa
mov
loop
cwtl
inc
cmp
cwtl
popa
fsubrl
call
jg
push
dec
int3
xchg
push
je
mov
mov
fmuls
pop
scas
mov
add
fwait
jae
js
lret
fisttpll
loopne
xchg
int3
rolb
shll
dec
add
or
push
push
add
fidivs
lods
or
or
cs
or
push
or
mov
and
into
xor
imul
mulb
mov
jmp
mov
mov
ror
pop
call
cli
mov
cmp
ja
out
jo
out
das
mov
lahf
push
mov
push
lock
dec
rcrl
insl
jmp
hlt
fisubrs
adc
mov
add
mov
ss
clc
pop
pop
add
and
cmp
push
sbb
mov
push
mov
je
std
mov
mov
adc
and
add
movsl
pusha
sbbl
cmp
sub
shlb
push
dec
inc
or
push
ret
xchg
call
in
pop
mov
push
rolb
call
mov
imul
pop
addr16
sub
inc
sbb
jecxz
sbb
sbb
jne
into
cmp
cmp
jmp
ss
arpl
sahf
adc
js
es
dec
jo
pop
pop
and
or
je
int3
jecxz
dec
sub
lock
add
aaa
jmp
nop
adc
roll
cmp
in
rcll
mov
arpl
icebp
call
dec
loopne
inc
sarb
adc
pop
cld
adc
inc
jmp
dec
setb
push
mov
cmp
movsl
stc
xchg
add
movsb
sbb
dec
xor
mov
inc
push
xlat
test
push
push
clc
push
js
negb
pop
jecxz
push
push
dec
xor
ja
mov
fxtract
jmp
popf
into
icebp
daa
pop
xorb
movsb
inc
or
mov
jne
mov
xchg
ret
movl
jecxz
xchg
mov
adc
add
xor
ret
or
jg
pop
push
sbb
push
call
mov
movsb
jmp
js
mov
je
and
ja
or
dec
push
call
mov
cmp
jg
js
jbe
icebp
mov
and
add
and
or
test
outsb
je
push
stc
sub
fcompl
ret
pop
or
push
sub
xor
add
jo
jno
jmp
pop
cwtl
or
loop
sub
cld
test
test
add
sbb
stos
push
inc
loopne
rcrl
lods
fs
inc
mov
mov
inc
mov
xchg
pusha
andl
pop
ja
cmp
jg
push
dec
lea
cmp
mov
pop
mov
orb
push
jbe
test
aas
mov
icebp
mov
add
adc
push
decl
or
inc
rorb
incb
jne
movzbl
add
je
fbstp
jno
aam
nop
sbb
addb
mov
outsl
lea
incl
nop
sbb
sbb
mov
xchg
nop
mov
sub
shr
sti
inc
inc
cli
or
or
je
mov
push
xorb
cli
sub
sbb
adc
cmp
ljmp
lea
inc
xor
inc
pop
rorb
mov
pop
adc
rcrb
out
add
sbb
in
cmp
call
sub
pop
push
adc
pop
jge
push
dec
repnz
inc
lock
add
xor
push
push
call
lret
sub
aam
shlb
xlat
or
call
stos
inc
je
xor
cmp
lahf
xchg
ss
push
mull
dec
push
mov
imul
adc
push
xor
mov
ffree
mov
and
fnstsw
xor
xchg
adc
pop
inc
fwait
inc
fcmovnu
push
adc
mov
mov
adc
fstl
sbb
mov
test
frstor
mov
xor
fcmovnb
pusha
and
adc
pop
mov
fnstsw
insl
fadd
mov
out
xor
sbb
mov
leave
inc
adc
fistpl
loopne
mov
add
fstl
sbb
mov
and
adc
or
xchg
push
pop
or
and
fnstsw
push
jmp
je
enter
rorb
cmpsl
ficoms
jnp
and
pop
popa
pusha
xor
insl
bound
adc
cmp
xor
pusha
xchg
cli
or
or
cmpl
dec
mov
std
popf
jge
callw
pop
call
call
or
cmp
dec
jg
fnsave
cwtl
inc
push
jns
cmp
call
fbstp
js
call
int3
pop
jge
adc
xchg
dec
fwait
jp
mov
dec
test
pop
cmp
or
push
test
call
call
push
jecxz
add
call
jmp
xchg
arpl
int
stos
jp
xchg
pushl
cmp
jmp
mov
pop
xchg
sbb
mov
add
mov
pop
xchg
and
addr16
test
enter
pop
push
into
cmp
sub
fimull
sbb
lds
shlb
sub
mov
ds
loopne
add
mov
sbb
imul
repnz
push
adc
sbb
or
adc
push
loope
xchg
inc
test
mov
push
pusha
lock
pop
ja
mov
ret
push
and
inc
fiadds
sub
inc
push
je
incb
es
popa
xchg
pop
jne
add
movsl
pop
xorl
jns
out
mov
add
adc
insl
loope
test
xor
and
ffree
add
setnp
push
fs
or
in
pop
test
xor
pop
xor
nop
push
fwait
enter
xchg
int3
xchg
js
or
jne
sbb
js
xor
pusha
sub
push
or
cs
push
lcall
adc
shll
adc
test
add
int
sbb
mov
push
jecxz
and
xchg
pop
aaa
xor
mov
cmp
movsl
adc
or
adc
and
dec
and
xor
addr16
adc
fstl
pusha
and
cmp
orl
push
addr16
orb
les
and
sbb
or
adc
push
addr16
data16
and
adc
sub
adc
cmp
inc
inc
jbe
pop
jb
sbb
fbstp
xor
sbb
sbb
aad
dec
sbb
push
inc
dec
imul
xor
out
inc
idivl
pusha
nop
push
in
nop
je
mov
popf
out
imul
inc
outsb
dec
out
repz
inc
or
push
sub
sbb
into
repz
or
ds
shl
sbb
inc
out
or
mov
mov
mov
pushf
adc
pushf
loopne
out
inc
daa
es
fistpl
add
and
dec
es
popf
out
or
fisubrs
cmpsl
out
mov
iret
repz
mov
ror
adc
into
jecxz
cmpsl
jge
or
cld
or
push
adc
cmpsl
or
mov
pop
inc
lcall
or
and
or
in
inc
outsb
mov
fidivrs
mov
or
insb
and
loopne
dec
pushf
push
pop
jmp
mov
clc
xor
xor
xor
sub
add
lahf
ret
lea
insl
fstpt
test
inc
xor
push
pop
add
or
add
add
sahf
out
add
pop
test
inc
dec
inc
lret
add
and
add
jbe
add
mov
add
sahf
xchg
sub
push
push
gs
pop
dec
jae
inc
inc
or
fmulp
xchg
mov
or
xchg
out
dec
cld
add
or
or
ucomiss
and
pop
and
xchg
or
or
jb
je
push
add
psadbw
lret
xor
adc
pop
adc
or
adc
xchg
add
adc
xchg
pop
enter
adc
mov
adc
enter
adc
jb
iret
push
push
inc
pop
imul
sbb
and
sbb
dec
sahf
ja
cmp
sbb
sbb
mov
cmp
sbb
cmp
sbb
push
sbb
addr16
sahf
push
jo
xor
sbb
sahf
push
push
inc
negb
pop
dec
jmp
xorb
ret
sub
jg
pop
stos
sbb
iret
cmp
aas
xchg
push
and
lods
pop
xor
jmp
cmp
je
repnz
push
jns
add
sub
rcl
ret
push
repnz
xlat
in
in
out
cmp
repnz
out
fdivl
call
push
in
call
jns
adc
in
sahf
xchg
cmp
lods
in
jmp
jmp
xorl
in
and
aad
in
cmp
pop
leave
xor
out
out
xchg
jb
sbb
out
or
je
insl
nop
out
lock
dec
inc
scas
in
icebp
cmp
das
iret
enter
repnz
push
pop
and
std
hlt
hlt
xchg
push
jnp
imul
std
cmc
sahf
xchg
stos
cmp
mul
popa
in
mov
sbb
inc
lcall
jns
scas
cmp
aas
stc
stc
dec
sahf
xchg
sub
cli
cli
das
nop
addr16
sti
sti
fdivrp
rolb
cld
cld
je
cld
push
cmpsb
in
fists
jne
mov
xor
sbb
xor
scas
ret
ds
sarb
sub
xchg
sar
aad
rcll
pop
jmp
repnz
movsb
adc
jecxz
xor
out
in
in
mov
cmp
jo
mov
aam
or
inc
scas
ss
out
xchg
scas
call
cltd
sti
or
adc
or
pop
jmp
jmp
leave
or
or
add
xchg
pop
jmp
dec
in
cli
out
out
out
xchg
mov
lock
cmp
cli
or
aas
repz
inc
scas
and
xchg
push
sub
stc
rclb
imul
mov
xchg
clc
cmp
pop
push
cltd
jb
push
stc
sub
sbb
enter
sti
sti
xchg
or
repnz
fdivrp
cmp
jmp
mov
cmp
ja
or
inc
scas
ljmp
sub
and
cld
dec
loop
loop
mov
jecxz
inc
clc
adc
nop
and
or
out
out
ljmp
loope
in
repnz
push
cmp
jnp
ljmp
xchg
push
jmp
dec
push
and
notl
divl
imul
out
sub
into
idivb
pop
push
loope
notb
xchg
or
or
inc
pop
leave
or
or
add
xchg
mulb
cs
div
testb
cltd
pop
push
fnstsw
clc
lods
inc
scas
in
cmp
sbb
pop
dec
push
popa
xchg
cmp
jns
mov
cli
hlt
loopne
adc
mov
mov
data16
test
push
sub
push
out
mov
sbb
shl
clc
sti
mov
loope
loope
xlat
enter
loop
popa
leave
and
hlt
cmp
xchg
cmpsb
jb
mov
hlt
in
scas
in
pop
pop
repz
leave
or
repz
dec
in
rorl
or
mov
scas
add
ucomiss
int
andb
in
in
leave
or
mov
scas
add
repnz
bnd
test
cmp
mov
icebp
das
xchg
pop
and
les
pusha
pop
repnz
repnz
movsl
test
insb
and
icebp
mov
rcll
icebp
or
jne
stc
pop
xchg
adc
mov
rcll
or
out
lock
mov
sbb
xchg
test
jp
jmp
jns
sub
loope
push
sub
ffreep
push
inc
in
jmp
sub
inc
cmp
cmp
ret
mov
adc
mov
push
mov
imul
and
pcmpeqw
sti
in
bound
jmp
xchg
add
or
xchg
mov
and
test
push
inc
int3
dec
push
nop
push
jns
lcall
aaa
or
push
add
cmpsl
fnstcw
adcl
fldcw
push
jecxz
repz
mov
dec
jae
insb
sbb
push
push
aad
out
xor
xchg
gs
dec
outsb
nop
je
repz
mov
adc
jmp
mov
or
pop
and
les
stc
jns
inc
cmp
and
mov
ficompl
pop
push
movsb
cmc
call
sbb
sbb
adc
jle
xchg
push
pop
sub
jg
popf
arpl
addb
inc
pop
and
push
fsubrs
cs
mov
sbb
add
push
adc
ficoms
or
xchg
cmp
lea
sbb
mov
push
sarb
xlat
pop
mov
xor
jl
inc
xchg
push
andl
adc
in
incb
inc
adc
in
jmp
xchg
pop
xlat
inc
dec
and
xor
jb
xor
and
push
repnz
mov
clc
adc
dec
mov
pop
xor
sbb
adc
jmp
adc
sbb
jmp
push
xchg
lret
cwtl
divb
dec
movsl
and
mov
and
mov
sub
xor
mov
push
ss
inc
inc
inc
or
adc
hlt
psubsw
dec
fwait
rcll
sbbl
test
mov
add
xorl
shr
inc
add
mov
add
and
add
loope
loope
add
xchg
add
inc
jb
xlat
and
mov
sbb
sbb
and
shll
dec
xor
popa
push
and
sub
and
outsb
sbb
mov
fwait
inc
nop
out
adc
scas
pusha
adc
inc
dec
pop
call
inc
pusha
and
test
add
push
xor
out
data16
inc
out
inc
dec
shlb
dec
out
and
inc
sbb
out
jmp
adc
xor
and
push
add
lods
clc
add
pop
cmpsb
push
fimuls
mov
adc
andb
mov
mov
or
jg
add
push
jmp
dec
jbe
xlat
loop
cmp
sti
iret
nop
fwait
stc
shlb
dec
push
fwait
inc
xor
and
leave
lock
sbb
fxch
lds
jmp
in
adc
cmpsb
sbb
int
pop
repnz
pop
add
mov
jmp
sbb
sbb
jmp
adc
dec
scas
sbb
addb
inc
xor
mov
push
sub
push
dec
xor
rclb
fwait
out
sbb
inc
pusha
fwait
nop
out
inc
es
or
test
cmp
mov
and
nop
mov
imul
inc
leave
dec
andl
cmp
leave
leave
leave
leave
sub
sbb
cmp
and
dec
push
andl
push
inc
jp
in
push
inc
mov
nop
or
add
pop
sbb
xor
xchg
pop
fwait
push
inc
jp
dec
fwait
nop
adc
mov
xor
addb
dec
jmp
cmc
add
or
jmp
mov
pop
adc
mov
adc
andl
push
push
mov
lods
pusha
fwait
dec
push
push
movsb
fwait
ds
andl
dec
fwait
and
bound
sub
fwait
xor
dec
ja
sbbl
and
shlb
fwait
std
push
subl
fwait
sbb
mov
mov
movsb
add
inc
xor
fwait
pop
outsb
push
push
movsb
fwait
test
popf
cmc
dec
add
or
or
mov
imull
rorb
fldenv
xor
sbb
mov
sbb
enter
adc
nop
fdivr
cwtl
in
nop
into
movsl
fwait
lock
adc
jb
movsl
cmp
add
cltd
push
xor
or
mov
ds
loope
push
inc
pop
negb
inc
nop
cltd
pop
iret
dec
add
imul
out
fimull
pusha
push
cmp
xor
shlb
scas
popa
shlb
je
sub
scas
rclb
and
outsl
mov
nop
out
add
outsl
or
orl
adc
pusha
dec
aaa
cmp
outsl
and
movsb
sbb
outsl
pop
andl
outsl
lds
push
daa
dec
adc
rorb
sub
and
subl
mov
pop
adc
and
and
adc
cwtl
mov
sub
int
xor
into
and
mov
jmp
jl
sub
lods
mov
push
pause
cmp
int3
xchg
sbb
mov
sbb
rorb
call
shlb
test
and
jmp
sbb
dec
dec
repz
clc
xor
cmp
nop
adc
mov
rorb
call
je
mov
inc
mov
push
sbb
cmp
fs
or
sbb
mov
pop
mov
in
rcr
les
ja
mov
cmpsl
mov
mov
sarb
mov
or
or
inc
pop
xor
adc
mov
inc
mov
sbb
xlat
inc
mov
addb
or
mov
push
mov
jae
inc
dec
jmp
sub
inc
leave
loopne
cmpl
cli
enter
xchg
inc
inc
mov
mov
inc
inc
sbb
je
mov
inc
inc
das
ss
rcl
sbb
sbb
in
push
mov
adc
rol
xchg
sarl
mov
sbb
mov
push
roll
scas
jno
mov
stos
mov
jo
pop
or
push
mov
icebp
fcoms
xor
push
rorb
push
jb
faddl
inc
mov
jne
sar
or
dec
mov
inc
inc
aaa
cmp
loopne
mov
mov
mov
aaa
out
imul
subb
daa
pop
jmp
jbe
add
movsl
test
into
jmpw
imul
addl
mov
xlat
mov
cmp
mov
xchg
inc
push
mov
rorb
orl
sub
mov
mov
mov
sbb
popa
addl
imul
inc
inc
sbb
sub
sbb
call
mov
and
mov
adc
cmp
sbb
sbb
push
aam
addl
inc
jns
fldl
sbb
pop
sbb
rolb
push
pop
or
adc
mov
cmp
loopne
mov
shrb
loopne
test
je
rorb
pop
fildll
or
int
mov
enter
push
xor
xchg
jbe
push
stos
mov
pop
mov
pop
and
mov
shrb
xor
or
inc
cmpsl
aad
mov
mov
inc
mov
bndldx
inc
jo
push
sbb
pop
mov
imul
mov
jle
xor
sub
sub
cld
add
sti
lret
xchg
mov
sbb
mov
orl
mov
movsb
shrb
pusha
pop
xchg
and
pop
and
sbb
mov
or
push
cmp
adc
popl
jp
rol
jmp
out
dec
push
inc
xchg
add
dec
push
and
pop
or
lods
movsl
addl
push
and
mov
js
arpl
mov
inc
inc
mov
mov
jg
jae
push
sbb
mov
orl
push
sub
inc
inc
inc
xchg
xor
cmp
inc
inc
inc
js
push
inc
inc
inc
inc
pop
dec
dec
pop
cmp
dec
and
rclb
rcll
call
adc
pop
or
jo
rolb
cmp
mov
jle
mov
pushf
and
mov
pop
xchg
icebp
leave
jmp
dec
insb
ja
xor
imul
and
xchg
xor
dec
xor
sahf
add
pop
rcrl
adc
push
pushf
stos
mov
in
pop
xchg
and
punpcklwd
movsb
or
rcl
mov
ficoml
dec
pop
ret
sub
outsb
cmovno
bt
sbb
jl
enter
jbe
jb
or
lods
ret
mov
sbb
or
outsl
cmpsl
iret
pusha
popf
test
ljmp
ja
or
ja
push
inc
inc
outsb
addr16
fs
ret
mov
dec
inc
scas
add
pop
adc
push
loope
xchg
mov
sarb
jb
xchg
xchg
add
roll
adc
gs
xor
les
inc
sub
jo
adc
push
mov
dec
dec
push
pop
push
sub
mov
inc
in
adc
add
sbb
lods
xor
mov
or
add
mov
scas
and
stos
jle
or
je
xchg
je
mov
push
xchg
je
jg
ror
pop
jae
add
push
jg
cmp
jg
adc
faddl
jp
fdivs
jae
popf
push
cmc
push
cwtl
xchg
inc
xchg
jmp
dec
jg
inc
push
mov
xchg
lcall
xchg
call
mov
push
leave
jecxz
inc
cmp
movsl
pop
jnp
in
jmp
stc
mov
add
fs
xchg
or
jg
nop
aam
jo
mov
dec
xlat
adc
test
xchg
fcmovnb
sub
add
xchg
es
cmp
sub
add
add
adc
cs
fwait
shrl
fmul
nop
xchg
out
enter
or
cmp
adc
pop
sbb
dec
add
negb
and
lcall
push
jl
sbb
dec
in
dec
or
sub
mov
addr16
movsb
xorl
call
and
addr16
rcl
ja
jbe
fimuls
call
adc
addr16
and
inc
mov
repz
movsb
mov
adc
mov
and
cmc
pusha
mov
add
mov
rcrb
dec
rcrb
sbb
shlb
push
pop
loopne
sbb
popa
out
push
fs
inc
push
inc
xchg
inc
xchg
push
fiadds
dec
mov
lahf
adc
test
inc
cmp
push
add
inc
mov
inc
cmp
addr16
daa
add
loopne
xor
addr16
ret
imul
push
mov
and
inc
xchg
call
adc
xchg
cmp
push
fstps
call
lock
bound
mov
xchg
shlb
xchg
cmc
xorb
dec
and
ret
cmc
xchg
rcrb
inc
pusha
mov
and
push
xor
pop
or
or
pop
adc
inc
or
call
enter
mov
lea
je
orb
dec
and
jmp
cmc
mov
mov
adc
sub
es
mov
cmc
aaa
sbb
inc
inc
cmc
andl
cmp
cmc
xchg
shrb
das
push
test
cmp
xor
push
mov
and
pop
outsb
jae
lea
mov
jle
push
outsb
mov
adc
cwtl
adc
add
call
loop
call
mov
add
incl
jl
xor
mov
call
add
xchg
call
sbb
es
and
into
nop
add
es
mov
mov
mov
cmp
mov
sbb
adcl
pusha
addl
pop
mov
pop
daa
or
push
loopne
imul
iret
movb
out
push
sub
call
adc
roll
jbe
dec
adc
xchg
adc
out
xor
sub
ljmp
adc
sub
mov
fcoms
adc
mov
mov
nop
inc
and
cmp
pop
jbe
cmc
shlb
js
cmp
call
sbb
pop
inc
xchg
mov
push
cld
add
mov
fsubl
add
cmp
arpl
data16
or
push
movb
or
lret
mov
xchg
mov
add
cmp
inc
jmp
dec
loopne
mov
fimuls
add
inc
in
inc
adc
inc
jmp
inc
inc
inc
pop
je
pop
and
je
test
add
adc
cmp
adc
scas
or
push
mov
sarb
fs
stc
add
cmp
popa
mov
xchg
xorb
pop
xor
sbb
dec
je
cmp
movsbl
and
cmp
leave
or
or
mov
out
mov
call
xor
inc
jmp
pop
add
xchg
xchg
jno
jmp
dec
dec
or
cwtl
hlt
dec
xchg
fisttpl
cwtl
nop
jns
add
ja
pop
cmp
sbb
rolb
push
daa
adc
leave
sbb
push
fs
rorl
ja
insb
pop
call
adc
aaa
hlt
mov
inc
leave
inc
push
inc
dec
dec
adc
ss
repz
inc
jbe
jne
sub
push
push
or
testl
popf
cmpsl
add
and
loopne
enter
ja
cmp
xor
or
dec
push
add
ret
push
or
ds
sub
call
xor
mov
movsb
xchg
xor
sub
jge
sbb
es
imul
sub
or
aam
mov
push
xchg
nop
jmp
mov
rorb
mov
ret
xchg
scas
jno
adc
xor
inc
and
pop
add
filds
cmc
add
xor
and
push
mov
inc
in
sbb
xchg
mov
ret
add
sahf
inc
mov
mov
jbe
inc
mov
outsl
out
sub
or
or
or
je
cli
jp
lock
je
lock
xor
addl
xchg
ja
lret
roll
pop
call
inc
inc
dec
gs
xor
mov
sub
inc
aad
loopne
pop
in
xchg
jp
pusha
mov
je
mov
and
adc
push
sbb
push
push
xlat
cmc
fisttps
nop
adc
in
gs
rol
push
mov
ficoml
fsubrl
mov
cmp
outsb
sbb
sbb
inc
divl
mov
push
push
push
nop
out
test
xchg
insb
fs
xchg
repz
fwait
push
add
pop
add
push
mov
xchg
mov
mov
repz
aaa
push
sbb
and
or
jmp
push
call
adc
pusha
cmpsb
roll
mov
add
or
lcall
add
inc
ja
or
xchg
mov
dec
mov
popf
pop
and
inc
jg
or
inc
sbb
jg
add
inc
cli
sahf
fs
push
repnz
ror
xchg
fcmovbe
push
pop
cmovb
pop
adc
stos
cmp
push
imul
xchg
and
mov
mov
or
loop
jns
movsb
add
push
or
or
xor
lods
sub
insl
push
ljmp
mov
xor
bound
jmp
enter
je
nop
xchg
mov
ret
scas
and
mov
andl
sbb
sbb
inc
push
pusha
movsb
xchg
sub
sbb
sbb
sbb
push
sbb
sbb
inc
push
mov
push
adc
push
ss
inc
test
arpl
push
push
rolb
and
mov
insl
and
and
push
xlat
mov
cli
xor
inc
test
je
push
push
push
test
je
push
push
cmp
xchg
xor
mov
testl
test
add
out
mov
leave
test
pop
mov
into
pop
shrb
inc
mov
outsb
push
fldl
out
enter
pop
xchg
inc
sbb
sbb
pop
push
iret
les
cmpsl
pop
pusha
ljmp
push
mov
xor
outsl
mov
and
dec
adc
mov
mov
test
adc
xchg
nop
or
imul
mov
adc
adc
inc
dec
inc
cs
enter
mov
push
call
sub
mov
mov
or
or
mull
loope
aaa
mov
call
rclb
call
xor
inc
jmp
mov
fwait
sub
scas
into
mov
sub
fucomp
mov
imul
adc
xchg
sub
and
lods
sub
in
adc
addr16
ss
cmp
sbb
mov
xor
imul
or
addr16
popa
jecxz
pop
stos
mov
xor
lret
inc
pop
iret
sbbl
add
adc
addr16
iret
loopne
jb
outsb
cmp
mov
sub
sub
and
cwtl
inc
or
mov
aam
xor
call
mov
push
stos
insb
iret
xchg
and
add
adc
hlt
mov
mov
push
and
cltd
xor
push
and
popa
cmpsl
adc
sarb
mov
test
in
jp
mov
stos
cmp
adc
nop
mul
dec
mov
inc
inc
cld
cs
addb
sub
aad
addr16
xchg
push
jb
push
in
dec
push
call
and
pusha
add
or
movsl
adc
in
lds
je
in
int
mov
sbb
in
push
mov
scas
movsb
inc
scas
adc
ljmp
sub
pop
xor
sbbb
scas
sbb
aaa
pop
fwait
or
call
mov
xchg
ss
mov
inc
call
adc
cmp
int3
mov
sbb
in
std
or
ds
in
fadds
arpl
rcrb
mov
mov
mov
hlt
cmp
adc
nop
xchg
jp
adc
in
xor
adc
mov
movsb
xor
and
in
push
mov
bound
pop
xchg
in
sub
negb
and
inc
or
and
push
mov
cmp
sbb
xor
mov
and
in
sbb
inc
in
mov
rcrb
inc
enter
inc
jno
test
in
jp
mov
lods
jb
bound
in
ret
adc
ffreep
bound
mov
in
push
mov
test
cmp
jbe
pop
in
xchg
sbb
fldenv
fldl
adc
sbb
pushf
or
call
jo
mov
jo
inc
dec
sub
lds
orl
aam
add
sub
mov
adc
test
inc
push
inc
out
mov
iret
lds
sub
or
adc
sbb
cs
mov
cmp
in
mov
inc
pusha
in
xor
dec
rcll
adc
daa
dec
lret
les
fs
bound
jb
in
cwtl
xchg
mov
aaa
mov
xor
or
or
cs
fs
aaa
push
ret
rcr
call
xor
sub
cwtl
push
aas
sbb
nop
dec
aas
test
mov
cmp
test
aas
or
add
mov
rcrb
cmp
ret
lods
sub
popf
pop
sbb
aas
imul
dec
sbbl
in
clc
cmp
aas
inc
or
aas
mov
cmp
stos
xchg
inc
pop
imul
mov
cmp
or
xchg
fadds
pop
pop
cmp
ret
and
xor
mov
or
fwait
mov
inc
js
sbb
dec
cs
add
hlt
dec
aas
fwait
mov
push
push
push
mov
add
fwait
fs
inc
cs
xchg
pop
dec
cmp
pop
lcall
pop
enter
hlt
xchg
or
adc
inc
push
fwait
pop
cmp
ss
addb
add
fwait
cmc
inc
inc
out
outsl
jns
sub
fwait
inc
add
call
ficoml
fdivr
test
fwait
shlb
mov
je
fwait
nop
nop
jge
pop
inc
mov
or
cmp
rorb
adc
adc
inc
dec
inc
daa
add
pop
clc
andl
add
dec
insb
dec
imul
inc
add
push
rcrl
and
mov
or
lds
inc
jle
lcall
pop
and
rcrl
sahf
mov
enter
test
pop
push
jp
push
pop
or
rcl
test
pop
sbb
test
call
pop
rcll
cmpsb
and
push
pop
int
sub
adc
aad
pop
sub
push
add
add
test
mull
adc
mov
adc
roll
sub
mov
imul
scas
in
ret
pop
in
mov
inc
adc
add
decb
inc
push
xor
ret
lock
sbb
ret
nop
test
and
inc
adc
pusha
lods
ret
jnp
nop
dec
test
push
jb
mov
ret
loopne
mov
adc
cmpsb
rclb
das
and
ret
pusha
cmp
push
fcoml
push
and
mov
stos
loopne
ret
push
and
or
adc
test
add
mov
add
pop
or
pop
inc
ret
mov
nop
or
and
xchg
shlb
sub
push
push
inc
adc
mov
dec
call
adc
cmpps
je
flds
xor
ret
xchg
mov
xchg
inc
test
sub
or
mov
xchg
rorb
and
ret
xor
rcrb
out
fst
sub
aam
or
inc
repnz
mov
or
aas
xor
unpcklps
das
push
fistps
shlb
call
xchg
das
pop
decb
and
adc
call
xor
in
clc
lret
xor
lock
call
and
call
int
inc
call
mov
xchg
mov
push
call
jl
repnz
call
fs
xchg
das
pop
mov
call
js
inc
out
call
cs
jbe
pop
inc
sbb
cmp
in
mov
nop
push
cs
dec
sbb
pop
mov
out
pop
sub
fldcw
xchg
out
dec
unpckhps
ret
in
mov
int3
frstor
shlb
xchg
mov
push
fdivrs
jae
xchg
dec
in
push
push
mov
aam
cs
dec
cmp
xor
es
in
mov
push
push
cs
add
add
mov
leave
gs
loope
adc
adc
sbb
movsl
jb
pop
sbb
and
and
sub
mov
jle
test
cmp
pop
movsl
shll
inc
xchg
outsb
nop
lret
dec
xor
push
in
mov
sbb
cs
dec
or
cmp
add
or
and
aas
inc
call
ret
imul
mov
mov
stc
sti
pop
pushf
and
mov
mov
xchg
data16
daa
int
dec
js
adc
inc
mov
sbb
xor
test
and
or
mov
cmp
mov
enter
inc
test
add
lods
mov
cli
mov
xor
daa
mov
add
pop
mov
and
shrb
adc
adc
sub
inc
stc
dec
inc
dec
cmpsl
push
fcmovnbe
add
xchg
and
mov
xchg
je
push
fcmovnbe
adc
dec
aam
je
jae
or
test
dec
inc
dec
inc
pop
pop
and
mov
add
aaa
sub
pop
mov
inc
add
push
add
inc
or
and
mov
adc
sub
mov
sub
xchg
add
stos
add
scas
dec
in
add
xor
adc
in
add
and
adc
cli
push
inc
xchg
push
cs
sbb
call
insb
inc
cld
dec
movsb
fstl
xchg
rcrb
mov
inc
xchg
stos
mov
jne
or
pop
sbb
jb
pop
xchg
xchg
das
inc
shrl
sub
sub
push
shlb
call
sub
jp
std
mov
push
mov
mov
mov
sbb
jmp
sbb
cs
jo
jge
mov
or
dec
enter
sub
add
mov
inc
inc
pop
mov
inc
push
mov
outsb
shlb
mov
movsl
imul
push
pop
push
roll
or
dec
mov
jno
or
orb
push
and
cs
mov
mov
mov
add
or
mov
jp
adc
lea
inc
fisttps
inc
adc
movsb
inc
mov
xor
fs
or
and
nop
mov
fs
ret
inc
push
xorb
or
xchg
lds
cmc
cmpsl
test
sbb
or
push
outsb
sbb
sub
fld1
inc
cmp
sbb
aam
mov
cmc
rcrb
xchg
mov
lds
test
lds
jne
cmp
cli
test
pop
lds
repnz
in
push
xor
pop
mov
mov
cmp
aaa
jno
xchg
mov
rorl
sub
rorb
or
lods
pushf
dec
dec
outsb
loopne
fwait
and
sub
and
cmp
je
movsb
je
cld
xor
add
popf
xor
sarl
dec
push
ret
add
pushf
movsb
xor
dec
lahf
add
xor
cltd
xor
movsb
xor
dec
testl
xorb
dec
xor
ja
xor
pop
pushf
xor
jo
xor
repnz
jns
popf
mov
jne
daa
sub
mov
xor
cwtl
mov
js
shlb
mov
data16
or
sub
add
stc
sbb
not
jbe
gs
dec
or
lcall
out
push
mov
pop
rorl
mov
mov
jns
call
cmpsb
adc
xchg
adc
jmp
jmp
adc
fwait
lods
ja
sub
xor
inc
sub
and
sbb
fwait
push
mov
or
fwait
adc
xchg
jmp
scas
dec
fwait
xchg
leave
mov
call
inc
je
clc
shll
mov
cmpsl
int
nop
orl
adc
mov
cmpsl
adc
mov
add
cmpsl
dec
sahf
adc
mov
call
sbb
cmpsl
sub
rcrb
and
inc
pop
dec
mov
pusha
sub
push
pop
test
ret
nop
mov
shll
stos
lea
dec
cmp
lea
xchg
mov
nop
test
jno
loopne
je
test
xor
pop
test
mov
pop
push
and
adc
dec
repz
ret
jno
out
inc
pop
test
inc
and
mov
dec
ja
and
and
push
and
mov
mov
lods
enter
mov
in
ss
jnp
dec
push
mov
lea
lret
mov
xchg
jecxz
xor
inc
push
dec
inc
push
shlb
out
pusha
inc
mov
add
shlb
mov
add
inc
ret
xchg
nop
cmpsb
sub
cwtl
adc
xor
dec
js
cmpsb
popa
pop
or
xchg
pop
add
cmp
or
or
add
xchg
mov
pop
push
and
adcb
addl
dec
xchg
xor
xor
mov
enter
push
xor
aam
mov
lods
add
or
imul
arpl
sbb
push
cld
add
sbb
or
sbb
xor
sbb
cld
jb
inc
dec
inc
popa
int
out
push
add
test
rcrb
das
ret
lods
mov
mov
orb
or
das
enter
dec
inc
and
mov
mov
mov
das
jns
jo
mov
call
inc
icebp
lds
sbb
xor
or
adc
mov
sub
outsb
orb
inc
mov
add
ror
nop
pop
mov
mov
pusha
fcompl
rolb
mov
adc
xchg
inc
cmp
jbe
inc
inc
cs
sbb
xor
and
jno
rorb
rolb
pop
pop
mov
enter
orl
jo
cmp
and
push
inc
aaa
adc
push
addb
push
xor
pop
jnp
or
cs
sahf
cmp
add
cmp
pop
jmp
addl
dec
push
pusha
jnp
adc
xchg
mov
add
nop
popa
sub
and
jnp
shll
pusha
inc
ja
sbb
push
push
inc
jnp
mov
roll
and
cltd
adc
pop
in
and
inc
sub
mov
jecxz
lcall
clc
mov
push
out
cmp
adc
inc
add
mov
sbb
jg
push
mov
xchg
or
call
push
dec
push
incb
movsb
xchg
sbb
fisttpll
push
add
pop
scas
movsl
mov
push
inc
dec
xor
orl
jmp
push
xor
mov
jb
pop
and
or
mov
cwtl
mov
fldenv
mov
je
fwait
push
pop
sbb
push
adc
push
push
dec
xor
orb
sub
leave
nop
rcrl
mov
xchg
pop
call
fdivl
xchg
dec
xchg
mov
cmp
sahf
stos
adc
add
sahf
sbb
inc
and
test
sbb
push
inc
sbb
jmp
inc
cmp
push
fistpl
sub
fwait
jg
or
jp
repz
scas
or
arpl
popa
push
popf
or
adc
je
dec
leave
out
call
xchg
sar
mov
or
mov
push
cltd
out
pop
pop
fstl
addl
cltd
or
stos
cltd
inc
loope
xchg
orb
insb
movsl
hlt
cld
mov
jb
cmpb
ja
cmpsl
or
pushf
fistpl
adc
push
add
or
test
ss
push
sub
dec
push
imul
add
sub
lret
sub
movsb
ljmp
repz
adc
fwait
sub
imul
ret
repnz
xlat
pop
inc
les
add
sbb
fdivr
dec
mov
push
dec
jl
lea
call
and
jle
adc
jb
insl
adc
and
adc
sbb
fldt
sbb
fs
lock
mov
rcr
ret
add
ja
sub
xchg
adc
xlat
add
push
push
ret
addr16
or
icebp
in
inc
jb
or
inc
mov
push
and
mov
addr16
inc
data16
repz
mov
lret
add
ffree
cmp
xorb
add
xchg
addr16
in
xchg
xchg
int
mov
test
xor
cmpsb
dec
mov
enter
push
inc
les
pushf
adc
inc
mov
sahf
mov
and
jmp
add
lock
aad
jmp
lret
movsl
or
push
nop
push
mov
mov
fwait
dec
shll
dec
rclb
cli
and
xor
out
sbb
out
sbb
ret
cmp
scas
sahf
mov
push
ds
repz
sub
or
sbb
sahf
out
call
add
repz
int3
loop
iret
repz
push
sub
push
nop
jns
cmpsl
jge
movsb
push
push
xchg
jl
push
sahf
negl
je,pt
push
jns
cmp
sbb
repz
repz
fmulp
mov
iret
xchg
mov
ret
into
sbb
incb
jl
negl
push
loop
sbb
out
aam
mov
iret
mov
sbb
lahf
out
sahf
pushf
scas
lret
or
cmp
repz
sub
pop
data16
repz
nop
sahf
lods
iret
repz
mov
fsubrp
decb
imul
inc
push
sar
mov
outsb
jle
sahf
mov
daa
negl
loop
clc
adc
sub
repz
aaa
je
fs
push
cmp
fimuls
daa
pop
mov
jbe
ljmp
cli
jbe
push
mov
in
int
cmpsl
insl
mov
iret
dec
test
jecxz
adcb
lret
idivb
xchg
push
jbe
push
scas
test
mov
insb
adc
cmp
or
daa
jo
les
jne
dec
sub
pop
jle
sub
mov
outsl
push
in
mov
gs
dec
push
dec
ja
dec
mov
pop
mov
push
outsl
push
push
ja
sub
or
rolb
xchg
es
aad
mov
xor
fistpl
lret
push
insb
jae
outsl
ss
xor
bound
out
push
push
fiadds
xor
ret
push
or
xor
ja
insl
fisttps
icebp
or
in
push
dec
cmp
jnp
outsb
aas
das
bound
push
mov
mov
mov
adc
xor
inc
stos
sub
nop
pop
dec
lahf
push
fcoml
inc
arpl
pcmpeqd
and
imul
and
jmp
cmp
loop
jae
stos
lods
xor
xchg
push
add
mov
fsubp
es
cmp
mov
jg
loopne
dec
pop
arpl
ret
je
adc
cmp
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
xor
test
or
and
mov
pop
inc
adc
dec
jns
sbb
pusha
dec
xor
xor
jmp
lods
pop
dec
imul
or
pop
inc
jne
outsb
je
insl
ret
jecxz
inc
js
mov
je
ss
inc
xor
sub
sub
xor
cmp
sub
inc
inc
xor
xor
xor
jge
sti
mov
xor
inc
xor
xor
ss
xor
cmp
xchg
aas
fdivl
cmp
xor
clc
inc
inc
xor
mov
xor
jg
pop
fs
jo
jne
test
push
jo
or
clc
addl
cmp
xor
aaa
fsubrs
push
xor
or
push
and
inc
aaa
and
pmaxub
cmp
xor
dec
roll
inc
pop
jl
push
arpl
ret
scas
ljmp
push
dec
and
cmp
ss
jbe
loopne
pushf
xor
add
sbb
mov
dec
and
dec
loope
or
orb
dec
hlt
imul
fcoms
pop
push
mov
jae
inc
push
inc
out
adc
push
sub
jns
out
out
cmp
in
outsb
fs
inc
mov
lods
sahf
add
pshufw
outsb
lods
and
hlt
push
push
add
outsl
dec
jnp
or
jg,pn
test
ret
xchg
pop
and
outsl
xor
imul
push
ss
movsb
inc
je
push
push
mov
and
inc
cmp
add
cmpsl
enter
sbb
xchg
pop
mov
jne
arpl
mov
pusha
push
inc
cs
mov
add
roll
inc
xchg
and
outsb
sub
insb
loop
or
mov
and
jle
or
pop
add
insb
loope
sbb
inc
pop
xor
pop
js
xor
jo
dec
mov
jg
jp
mov
stos
inc
out
jmp
gs
push
and
inc
mov
xchg
inc
jnp
inc
push
aam
pop
dec
imul
bound
loopne
jns
cmp
je
dec
fs
sub
lods
pop
imul
mov
push
popa
fs
jo
fiaddl
rclb
push
ret
popa
sbb
dec
movsb
out
shll
xchg
jmp
outsl
push
pop
int3
jmp
scas
arpl
inc
cs
push
push
push
add
dec
mov
ja
shlb
push
fildll
push
sub
sbb
popa
ds
push
push
push
sbb
fmull
outsb
pop
add
add
and
mov
and
pop
inc
xchg
sub
data16
andl
arpl
adc
mov
add
jg
push
xchg
xorb
fadds
adc
les
xor
and
dec
or
adc
out
add
mov
xor
aam
aas
jo
or
fadds
jns
addr16
orb
idivl
adc
sarb
das
lcall
sbb
sbb
call
stc
cmp
push
das
push
pop
nop
cld
and
push
and
jns
out
out
stc
jp
push
cld
fdivr
xor
jns
out
test
mov
sbb
dec
out
push
lahf
mov
and
dec
sbb
push
push
xchg
inc
dec
sbb
inc
adc
popa
push
dec
sbb
es
add
test
dec
repz
push
adc
push
cld
or
in
iret
repz
int3
les
movsb
xor
jl
out
nop
mov
mov
jl
insb
push
fs
pop
mov
cmp
repz
dec
inc
inc
cmp
out
sahf
push
xor
sub
and
sahf
out
and
adc
repz
out
or
cld
or
repz
clc
hlt
call
iret
repz
movsb
nop
jo
jns
iret
repz
lock
int3
mov
jns
out
insb
inc
sub
iret
sarl
or
push
fcom
les
repz
cwtl
js
sub
out
add
add
or
out
sbb
add
call
iret
repz
mov
loop
iret
inc
lret
sbb
pop
adc
inc
cmp
test
sahf
test
andl
inc
xor
out
xor
sub
inc
mov
out
mov
pop
push
inc
dec
cmp
outsl
and
push
inc
adc
add
xchg
pop
add
adcb
add
jecxz
mov
sub
adc
mov
mov
leave
and
inc
pop
fimull
or
scas
dec
sbb
cmpsb
andb
push
ja
pop
int3
dec
adc
jmp
bound
mov
arpl
les
adc
addb
inc
insb
mov
xchg
xchg
call
sbb
add
pop
js
shrb
icebp
or
mov
pushf
andb
rolb
ret
jns
mov
filds
andb
add
incl
movl
fwait
out
inc
cmp
cs
lock
jg
pop
jne
pop
sbb
push
shlb
dec
add
jne
imul
test
cld
and
mov
arpl
imul
pop
jb
pop
push
gs
or
jo,pn
bound
inc
scas
pusha
cmp
xor
neg
add
push
push
insb
das
stos
push
adc
inc
das
scas
in
outsl
jl
add
jmp
cwtl
lahf
add
das
pop
insb
adcb
cmp
shrb
ds
inc
jo
xor
shrb
add
pop
or
add
aas
jg
or
adc
push
cmp
mov
ss
jnp
adc
sete
int3
data16
stc
mov
aas
add
cwtl
pop
and
xlat
jns
mov
xchg
jecxz
rcr
sbb
jbe
sti
cltd
ss
lcall
aam
pushf
adc
push
test
adc
aaa
push
movsb
mov
or
push
popf
sbb
fidivrl
push
aas
xchg
adc
call
enter
xor
les
aaa
mov
jo
popf
dec
aam
aas
xrstors
enter
inc
add
mov
outsl
pinsrw
xchg
iret
fcmovnbe
mov
movsl
mov
sarl
jbe
in
sets
push
aam
insb
adc
fs
pop
loopne
dec
mov
mov
sahf
loopne
fidivs
int
daa
lock
enter
ss
dec
mov
push
xor
xor
sahf
push
mov
adc
xchg
mov
cmp
arpl
sbb
daa
ltr
adc
lcall
scas
pop
push
and
gs
dec
dec
add
push
push
add
decb
push
outsl
ja
xor
jle
ret
jb
bound
sub
pusha
pop
leave
mov
mov
pop
daa
movsb
and
and
add
fidivrs
or
lods
inc
stc
into
mov
fucomip
ficomps
mov
dec
mov
push
add
orb
mov
mov
jae
arpl
add
outsb
scas
mov
push
add
add
or
jnp
xchg
add
push
mov
filds
push
popa
jae
push
jae
push
sub
nop
push
adc
jae
rcrb
push
push
inc
shll
mov
push
jnp
lret
out
adc
cmp
xchg
xchg
loopne
push
inc
sbb
add
roll
add
xor
dec
mov
ret
adc
mov
pop
das
push
test
or
cmp
pop
xchg
push
jo
jb
jns
imul
jge
test
movsb
sbb
imul
push
push
lods
loope
mov
push
sbb
sub
inc
scas
imulb
push
sbb
in
loope
adc
jge
pop
push
inc
pusha
inc
cmp
mov
inc
out
mov
inc
imul
or
xchg
mov
mov
add
pop
add
cmp
sbb
fbld
jne
negl
int
jnp
notb
cli
or
movsb
rolb
sub
push
lret
xchg
pop
xor
fdivrl
xchg
shll
and
daa
and
pop
xchg
or
sarb
push
fs
lahf
xor
fnsave
dec
inc
ret
xor
and
inc
cs
sti
mov
jle
test
clc
and
call
or
mov
xor
ret
roll
and
sbb
xchg
push
add
sarl
xchg
jno
je
outsl
mov
rclb
lds
pop
insl
loopne
stc
add
push
pop
rorl
xor
orb
push
jbe
mov
mov
pop
das
xor
dec
dec
pop
add
sub
jns
xchg
fs
lds
push
lret
and
bound
push
outsl
pop
rol
pushf
dec
xchg
jle
cmp
dec
and
roll
push
push
add
xchg
scas
sbb
xor
lock
cs
add
fistps
mov
push
mov
out
push
mov
mov
nop
jge
push
adcb
arpl
inc
jmp
enter
dec
xchg
jne
inc
js
aaa
dec
inc
dec
pop
mov
xchg
or
aas
inc
cmc
push
xchg
mov
out
adc
adc
or
sbb
push
add
inc
jp
xlat
push
add
mov
stos
iret
add
jo
jo
mov
jno
lock
loopne
pop
mov
fs
sub
mov
push
addb
ds
sub
push
jo
in
ror
jno
cmp
push
fs
scas
inc
jnp
xchg
pop
roll
in
xchg
xchg
add
cmpsl
ljmp
dec
imul
adc
out
jno
add
iret
pop
add
fcom
xor
out
shll
cmpsl
add
push
pop
sbb
mov
xchg
xchg
or
sbb
and
jns
push
jle
popa
insb
cld
inc
jae
push
sar
adc
sbb
je
ja
pushf
ret
push
testb
outsl
xor
into
add
add
dec
aam
lcall
mov
out
pop
sub
jnp
insb
sbb
add
out
jle
sub
shll
xor
out
push
dec
sbb
and
pop
outsl
mov
pop
ficomps
mov
push
frstor
movsl
lods
popa
push
std
fwait
xchg
adc
ja
scas
scas
sub
push
jecxz
push
mov
xor
or
or
in
aam
jl
dec
das
jmp
fisttps
daa
sub
pop
pop
push
insb
popa
cmpsl
shl
push
sbbb
push
setle
or
push
iret
icebp
andl
jp
add
sub
push
std
jns
adc
daa
imull
test
mov
mov
mov
pop
add
add
gs
cmp
iret
dec
int
imul
sti
movsb
push
pusha
stos
fsubrl
ret
xor
jo
pusha
adc
test
inc
pop
or
mov
push
jo
or
xchg
orb
test
mov
inc
sub
fs
stos
xchg
inc
test
push
mov
lcall
jns
xlat
and
or
xor
out
add
out
lock
enter
jns
repz
lods
test
pop
mov
pushf
cwtl
xchg
nop
mov
in
sahf
test
push
iret
repz
inc
cmp
and
ds
repz
cld
in
lock
push
loopne
cmp
repz
fcom
enter
repz
test
mov
cmp
repz
xor
and
imul
add
in
hlt
out
sahf
out
in
int3
mov
lods
mov
mov
js
repz
sub
and
dec
rcrb
dec
test
adc
and
add
pop
add
cmp
mov
sahf
dec
lcall
loopne
out
pop
add
scas
push
and
data16
pusha
insl
aaa
addr16
push
aaa
jns
sub
jbe
adc
addb
adc
std
mov
add
dec
add
bound
mov
or
mov
or
mov
adc
push
pop
aas
test
dec
push
fstpl
adc
and
jns
or
addb
fwait
out
adc
mov
push
pop
jo
add
in
cmp
xchg
inc
mov
call
fiaddl
sbb
dec
cmp
dec
insl
popf
lret
sub
cld
inc
xchg
cmp
insl
jbe,pn
and
pop
es
xchg
scas
lahf
xor
xor
or
je
gs
mov
mov
xor
pop
loopne,pn
jae
pop
and
gs
imul
sbb
cmp
mov
sub
and
and
es
or
inc
rolb
imul
insb
into
ss
rcrl
loopne
pusha
sub
push
sbb
jmp
push
inc
add
jnp
inc
add
inc
pop
pop
adc
jg
mov
aam
add
xor
xor
sbb
bound
loopne
sbb
das
pushl
inc
xor
xor
xor
xor
xor
xor
movsb
xor
xor
xor
pushl
xor
xor
xor
xor
xor
dec
xor
xchg
sar
pushl
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
jmp
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
call
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
ret
call
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lock
cmp
aas
idivl
or
xor
pop
cld
pushl
dec
xor
xor
outsb
xor
popf
xor
xor
xor
xor
incl
xor
xor
mov
xor
xor
xor
xor
cmp
aas
out
xor
xor
xor
xor
xor
xor
fidivl
aas
mov
les
fnsave
out
xor
ljmp
mov
ss
ss
ss
ss
aaa
sbb
jno
mov
jle
aaa
mov
cmp
mov
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
aas
cld
cmp
cmp
cmp
push
adc
cmp
and
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
jg
incb
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
add
aas
cltd
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
pushl
mov
mov
xor
xor
xor
xor
pop
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
mov
xor
xor
xor
xor
xor
xor
xor
push
aaa
call
fisttps
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
sar
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
xchg
inc
sbb
aas
inc
aas
pop
aas
ja
pusha
pop
ljmp
jle
push
or
cmp
pop
xor
push
xor
jmp
cltd
xor
xor
xor
xor
xor
xor
ret
cld
pop
cmpsb
push
xor
xor
lcall
clc
xor
xor
xor
xor
nop
xor
out
in
xor
fwait
outsl
jmp
scas
clc
xor
cmp
pop
lods
cmp
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
in
cmp
cmp
std
cmp
cmp
lcall
mov
and
cmpb
ds
imul
xchg
outsb
xor
xor
decl
xor
sbb
xchg
cmp
cmp
mov
ljmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
js
cmp
dec
aas
push
mov
cmpb
aas
sarl
aas
mov
aas
out
out
jo
and
std
xchg
xor
xor
xor
xor
fisubrl
xor
xor
xor
loop
xor
xor
xor
mov
pop
std
xor
xor
xor
scas
std
xor
cmpsb
data16
ss
jg
cmc
pushl
add
or
aaa
and
aaa
dec
aaa
dec
aaa
push
xchg
pushl
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
jmp
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
icebp
cmp
cmp
inc
cmp
dec
cmp
popa
cmp
cmpb
pop
decb
cmp
cmp
or
cmp
adc
cmp
cmp
cmp
bnd
decl
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cli
adc
cmp
inc
cmp
pop
cmp
jmp
xchg
cmp
mov
jp
jg
cwtl
ds
ds
ds
jmp
ds
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
cli
out
or
push
xor
insl
stos
pop
pushl
push
sahf
xchg
les
fidivl
in
std
fildll
or
adc
and
sub
cmp
jb
mov
pushl
ret
xor
xor
xor
xor
xor
xor
mov
jl
cmpsl
xor
jg
mov
xor
scas
jno
xchg
xor
xor
xor
ljmp
push
xor
xor
mov
ret
aaa
xchg
aaa
fwait
std
pop
pop
pop
sahf
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivrl
aaa
shll
xchg
out
cmp
cmp
mov
inc
xchg
dec
cmp
cmp
cmp
cmp
adc
add
mov
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
filds
ja
js
jge
cmp
cmp
cmp
cmp
cmp
pop
popa
cmp
jle
mov
pop
pop
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
xor
fildll
ss
ss
fiadds
shlb
aaa
ret
aaa
jmp
repnz
or
jg
cmp
pop
cmp
jge
mov
cmp
cmp
jbe
xchg
cmp
incb
cmp
cld
cmp
mov
and
cmp
cmp
cmp
push
aas
jne
mov
or
pop
ss
mov
fwait
xor
xor
dec
or
mov
sub
aas
xor
divl
pop
xor
call
aaa
mov
fsub
adc
es
dec
ss
outsb
jg
jg
xchg
movsb
ss
enter
in
and
cmp
cmp
cmp
mov
dec
ljmp
cmp
pop
push
imul
cmp
pop
clc
jne
test
mov
ret
cmp
dec
cmp
call
pop
cmp
jae
aam
fnstsw
jecxz
imul
mov
cmp
cmp
add
sarb
inc
cmp
orb
cmp
and
push
cmpb
cmpsl
ds
ds
ret
idivl
adc
loopne
add
sbb
addr16
loope
sarb
sbb
in
xor
pop
decl
lock
xor
cmp
or
xor
xor
xor
xor
xor
ljmp
mov
int
in
xor
xorl
add
xor
ds
dec
aaa
add
pop
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
clc
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
ret
and
sarb
cmp
cmp
adc
jbe
jmp
incl
cmp
cmp
cmp
adc
and
pusha
aas
cmpb
aas
daa
push
sub
aas
out
out
pop
rclb
sub
loop
jne
in
sub
decl
jae
cmp
jne
jg
xchg
xor
xor
xor
or
jge
pop
cld
xor
xor
ljmp
xlat
pop
loopne
adc
adc
sbb
sbb
sub
sub
adc
cmp
mov
cmp
cmp
cmp
cmp
cmp
ljmp
push
out
xor
mov
cmp
inc
xor
xor
push
andl
decb
pushf
xor
mov
mov
xor
incl
cli
xor
xor
xor
cmp
sub
aaa
or
xor
cmp
inc
cmp
cmp
adc
push
rcrb
cmp
adc
decl
fidivs
cmp
cmp
add
mov
push
push
rcr
cmp
mov
ljmp
fdivl
lock
mov
call
add
or
adc
push
lock
stos
sbb
and
and
sub
sub
xor
pop
jg
cmp
inc
cmp
cmp
pop
cmp
aas
sar
cmp
insb
cmp
je
jl
cmpb
test
fcompl
mov
nop
xchg
cwtl
mov
mov
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
cmp
pop
clc
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jbe
lahf
jle
adcb
pop
bound
pushl
clc
xor
xor
inc
xor
xor
cwtl
xor
xor
aas
push
cwtl
lock
xor
cmpsb
cmp
cmp
fadds
add
xor
pusha
inc
fcomps
and
fimuls
jmp
sahf
ss
sahf
int3
shlb
aam
jmp
ss
in
call
ss
ss
add
add
or
or
pop
loopne
aaa
adc
aaa
sbb
and
and
sub
sub
xor
cli
jmp
aaa
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
pop
loope
mov
aaa
test
mov
nop
aaa
xchg
aaa
cwtl
and
sub
mov
dec
mov
mov
push
mov
mov
aaa
enter
shlb
aam
fdivs
fcompl
in
adc
mov
out
aaa
hlt
xor
aaa
add
add
or
adc
adc
sbb
cmp
icebp
sbb
mov
mov
outsl
or
pop
cmp
cmp
std
jg
sbb
cmp
sub
cmp
cmp
cmp
cmp
push
cmp
je
jl
test
mov
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
inc
je
mov
pop
orl
stos
add
mov
jne
call
xchg
mov
es
shufps
lock
es
mov
insl
es
faddl
stc
icebp
es
cmp
xchg
aaa
dec
mov
xchg
adc
add
pop
lcall
rolw
sbb
add
fiadds
ljmp
pop
mov
fiadds
or
or
and
and
or
mov
pushw
sub
sbb
lods
sub
outsb
xchg
out
das
and
dec
mov
lcall
sahf
add
filds
adc
dec
push
rcrb
test
filds
or
shlb
add
push
repnz
sub
push
pop
xchg
daa
mov
inc
adc
mov
sbb
orb
ss
les
or
pop
mov
test
shrb
bound
or
xor
lock
dec
push
push
shl
pop
fnstcw
in
push
lock
xor
sbb
jne
push
mov
sbb
mov
inc
mov
xchg
lock
movsl
dec
push
enter
enter
cmp
loopne
adc
push
addb
push
push
cmp
leave
shl
xor
inc
xor
xchg
sub
dec
ljmp
or
jb
int3
jge
push
and
pop
mov
sbb
imul
push
mov
sub
sub
fcomp
mov
scas
sbb
fsubs
dec
xlat
and
and
push
pop
sub
xor
jl
sbb
sbb
jg
nop
xor
push
je
cmp
outsb
push
insb
cpuid
dec
inc
jp
add
inc
push
sub
or
xor
es
insb
outsb
and
or
jb
xor
inc
xchg
call
cmp
add
jne
in
cmp
cmp
sub
nop
add
add
jbe
xchg
xchg
add
adc
pusha
sbb
mov
data16
sbbl
lret
mov
push
mov
out
or
nop
fisubs
inc
lea
push
push
pop
jb
cmpb
sbb
fwait
adc
adc
xchg
js
std
lret
aaa
or
inc
or
cld
push
push
call
or
movsw
xor
add
mov
push
mov
adc
fisubrl
lahf
into
cmp
mov
mov
cmp
addb
xchg
frstor
push
call
or
xchg
push
aas
cmp
js
xor
sub
push
or
mov
add
out
push
or
ud0
shl
xchg
or
lock
mov
mov
cltd
mov
inc
and
shl
push
sbb
push
mov
add
scas
sbb
mov
and
int3
mov
mov
call
lods
jle
lock
cs
push
jl
push
lcall
xor
clc
add
pop
add
push
inc
push
jg
pop
add
push
dec
ja
fmuls
push
adc
add
push
xchg
mov
pop
push
lods
inc
es
dec
cld
sub
or
jge
mov
cmp
xchg
or
add
push
xchg
xor
xchg
mov
push
test
pop
mov
push
pop
mov
loope
call
aad
mov
push
add
mov
lock
xorb
add
add
xor
xchg
test
lret
cmp
ret
mov
das
add
pop
pop
or
sbb
dec
test
mov
or
mov
lret
pop
add
mov
rcrl
in
mov
adc
and
jmp
or
fisubs
mov
lock
jge
out
call
mov
js
xor
xor
push
dec
push
rorb
push
mov
push
sbb
jmp
xor
mov
je
sub
push
movlps
or
push
imul
imul
mov
inc
movb
loop
push
add
adc
inc
adc
adc
stos
mov
add
hlt
sub
shlb
sub
shlb
hlt
rorb
mov
pusha
or
push
adc
dec
js
insb
jo
pop
call
pop
add
and
sub
fisttps
push
mov
add
or
mov
pop
popa
aam
fistl
mov
test
adc
gs
cmp
loopne
add
pushf
or
cmp
cmp
clc
idiv
dec
mov
xchg
xchg
pop
xor
fwait
xor
ret
pusha
mov
push
inc
mov
mov
shr
pop
mov
push
mov
mov
add
jmp
scas
or
jno
cmpsb
xchg
push
mov
jo
xlat
call
add
inc
mov
add
ficompl
roll
rolb
sub
negb
rclb
and
fcompl
sub
sbb
test
movsl
adc
out
lods
or
cmc
mov
and
add
sahf
testb
push
in
imull
xor
add
add
push
add
add
add
mov
fs
or
clc
xchg
sub
push
xchg
sub
das
pop
rcrb
add
sub
mov
pusha
add
dec
inc
mov
pop
adc
dec
adc
fiadds
pop
das
pop
int3
mov
bound
sarb
push
or
in
and
ror
sbb
inc
jmp
das
jo
das
mov
mov
xor
das
and
sarb
and
mov
mov
or
fildl
and
sub
mov
das
and
lods
and
xor
test
enter
sub
and
andl
mov
mov
cwtl
repnz
mov
adc
orps
or
sbb
mov
cmp
dec
pop
sub
sub
iret
ss
or
sbb
lods
shr
andl
dec
andl
pushf
orl
mov
xchg
mov
sbb
cmp
cmp
cmp
xor
sbb
clc
push
inc
add
pop
lods
daa
test
pop
popf
loopne
ja
push
xchg
add
inc
ja
xchg
pop
fs
rolb
rcll
sub
lret
movsb
sbb
xchg
mov
rorl
push
cmpsb
jo
pop
das
adc
in
adc
lret
lds
dec
xchg
sbb
dec
pop
jns
xchg
lods
or
ja
or
andl
out
dec
mov
je
xchg
lods
fwait
dec
or
adc
ds
or
push
inc
sbb
repnz
xchg
adc
dec
daa
leave
pop
dec
jbe
loopne
fnstsw
in
shll
mov
outsb
shl
adc
mov
fcoml
dec
test
mov
or
lret
xchg
or
and
orb
dec
jo
jp
imul
out
cmp
pop
inc
pop
call
mov
sahf
adc
es
inc
push
shll
pop
dec
add
jge
push
call
es
add
fdivr
shlb
sbb
xchg
cs
mov
sbb
or
call
push
add
jno
leave
adc
and
xlat
inc
mov
sub
dec
and
mov
or
sub
nop
sbb
inc
adc
popl
adc
xor
pop
insb
lods
sbbl
lds
sbb
add
inc
fucomp
xchg
cmpb
xor
adc
xor
and
cld
sub
mov
sbb
mov
sub
or
add
mov
pop
or
push
mov
pop
add
xor
mov
cmp
fwait
adc
adc
mov
cmpsb
add
andb
ds
lret
pop
loopne
movsb
adcl
cmpb
push
mov
leave
inc
ja
adc
or
dec
ss
test
xor
jno
insb
mov
mov
push
fnstcw
mov
mov
xchg
sbb
inc
pop
xchg
pop
mov
and
pop
in
fwait
popf
xchg
and
cmp
nop
nop
push
adc
test
pop
movsb
rolb
hlt
pop
cs
add
mov
ja
xchg
fs
pop
push
test
cmp
dec
inc
cmp
jl
add
pop
sbb
mov
cwtl
push
movsb
mov
pop
sbb
lret
notb
pop
int3
and
pop
jnp
mov
pop
nop
xor
push
push
add
into
jl
or
pop
sbb
add
jns
ja
rolb
fadds
loopne
lock
mov
adc
jnp
or
pop
inc
sub
xor
dec
sarl
inc
pop
xchg
mov
mov
enter
ds
stc
xchg
or
rcl
add
sbb
jns
jns
cmp
dec
sbb
hlt
inc
inc
imul
out
mov
in
mov
push
push
push
xchg
jo
ret
or
loope
mov
mov
pop
or
in
pop
pusha
hlt
push
hlt
test
scas
mov
stos
pop
push
cmpsl
ret
inc
rolb
mov
and
lcall
sub
jb
inc
sub
sub
int
sub
sub
nop
or
sub
cmpsb
imul
imul
sub
sub
adc
add
sub
sub
sub
sub
xor
mov
dec
shll
sub
sub
sub
add
imul
pop
filds
mov
or
mov
add
adc
add
inc
fstl
inc
add
sbb
jns
mov
push
roll
sub
fldl
inc
inc
fistl
dec
lahf
mov
stc
push
scas
or
xor
fimull
push
lret
ret
push
jle
dec
insb
push
sahf
sbb
addr16
adc
inc
add
push
jmp
and
dec
lock
sub
or
jmp
adc
inc
sub
and
bound
push
rolb
mov
or
mov
stos
inc
xor
jo
and
inc
adcb
gs
push
xchg
in
add
adc
mov
inc
cmp
push
hlt
mov
enter
mov
inc
fnsave
inc
sahf
push
mov
in
xchg
test
mov
ret
xor
inc
xor
cld
push
mov
cmp
inc
sub
inc
pushf
adc
xor
inc
out
mov
sub
call
es
add
and
mov
cltd
sbb
pop
mov
sarb
repnz
hlt
filds
adc
mov
dec
dec
and
pop
mov
cld
add
dec
into
or
push
dec
jns
mov
adc
push
xchg
mov
jns
xor
les
mov
xor
imul
inc
test
andb
outsl
jns
inc
loop
add
xor
and
jns
sbb
dec
and
pop
jns
cmpb
sbb
adc
mov
mov
xchg
adc
sbb
and
sbb
cmp
sbb
jns
es
jl
jns
ljmp
icebp
sbb
and
jns
inc
and
inc
scas
icebp
fidivs
sub
sbb
popf
sarb
mov
lods
cmpsb
inc
mov
mov
test
cmpsl
xchg
jmp
outsb
cmpsl
sbb
push
fstl
mov
inc
cmpsl
test
ja
aam
call
and
cmpsl
sbb
fiaddl
gs
adc
or
sbb
loope
mov
inc
adcb
cmpsl
enter
push
mov
sbb
pop
mov
mov
pop
lcall
push
mov
sbb
cmpsl
les
fists
xor
and
adc
sbb
shlb
in
fidivs
adc
mov
pushf
pusha
and
jl
add
mov
daa
cmp
loopne
xchg
shlb
and
stos
mov
mov
cs
pusha
add
inc
call
faddl
aaa
mov
or
pusha
and
adc
sbb
and
dec
mov
mov
xchg
push
cmpsl
or
pop
xorb
mov
xchg
nop
shll
push
mov
popf
out
das
push
nop
scas
adc
mov
or
or
and
inc
enter
je
das
pop
ret
or
add
je
mov
mov
mov
mov
and
movsb
mov
xor
push
add
jne
cmp
pop
dec
cld
mov
xor
sub
pop
js
push
push
and
mov
test
inc
cs
es
mov
or
mov
inc
movsb
fwait
cwtl
and
xor
xorb
mov
sbb
sbb
arpl
adc
loopne
movsb
mov
xor
ret
mov
pop
dec
sbb
in
ds
cs
mov
sub
mov
loope
xor
shlb
mov
je
pop
aaa
js
mov
push
mov
cltd
sbb
sbb
sbb
push
cmp
sbb
sbb
cmp
sbb
sub
pop
cmp
dec
and
jmp
or
add
arpl
fcomip
dec
nop
outsb
bound
out
dec
or
cmp
enter
xorb
mov
or
mov
scas
call
es
mov
or
lods
jecxz
dec
pop
call
daa
xor
mov
xor
jo
in
mov
popf
inc
aam
bt
xchg
xchg
lret
pop
jo
mov
test
inc
nop
movsl
aam
nop
pushf
cmp
scas
sub
in
aam
aad
out
or
dec
mov
mov
cmp
fwait
cmpsb
jp
mov
mov
dec
aad
mov
test
dec
jl
sbb
xor
xor
xor
pushf
push
aam
sbb
ja
sbb
xor
aad
push
rcll
inc
lahf
enter
xchg
nop
xor
inc
nop
inc
shrl
xchg
aad
divb
xor
es
sbb
cmpsl
and
or
fisubs
ficoms
cmpsl
and
icebp
sub
fnsave
ret
sarb
xor
repz
in
sbb
and
jne
mov
imulb
sbbl
fstl
add
xorb
lret
call
mov
push
dec
test
ret
dec
pop
enter
ret
les
lock
mov
out
lret
rorb
nop
inc
add
add
push
pop
push
push
nop
cmp
fwait
and
fmull
adc
mov
pushf
or
fstpt
add
pop
mov
add
fs
cmp
push
enter
hlt
push
cmpb
and
add
lahf
call
and
push
shl
jnp
nop
xlat
dec
leave
sti
loopne
out
inc
sub
xor
xchg
jmp
imul
movsb
xchg
leave
movsl
stos
xchg
mov
xchg
xchg
mov
fwait
rcll
add
andl
stos
jge
lea
stc
loopne
clc
std
mov
stc
adc
mov
adc
ret
loope
pop
stc
push
jle
jecxz
stc
mov
mov
fdivs
orl
mov
pop
pop
stc
aas
ret
mov
pop
inc
and
ds
stc
cmc
push
push
mov
push
call
xchg
pop
xor
nop
call
adc
fstp
ds
adc
fstl
xlat
mov
mov
stc
rcrl
xor
leave
stos
pop
jmp
or
cmp
icebp
faddl
mov
int
inc
jne
pop
mov
rol
jmp
jmp
jne
out
sub
pushf
aaa
jne
mov
add
je
add
and
jae
call
enter
push
adc
aas
mov
movl
aas
xor
cmp
adc
add
int3
mov
sbb
mov
aam
adc
or
adc
call
fs
sub
jl
insb
xor
sbb
sbb
xchg
lods
xchg
sub
jmp
popa
mov
ret
call
je
sbb
xchg
xor
fdiv
je
add
lret
jge
push
or
and
cmpsl
sarb
xchg
js
jl
addb
lods
rcll
roll
xor
and
xchg
inc
push
lret
shrl
inc
mov
stos
rol
aad
cmpb
sarb
ret
sub
mov
and
shll
in
daa
imul
popa
pop
pushf
rcrl
xor
add
enter
jnp
stos
cwtl
mov
shll
xor
sbb
flds
jne
xchg
sbb
push
fldenv
xor
andb
test
inc
or
push
pop
cmp
mov
pusha
xor
adc
sub
add
xchg
and
dec
push
sbb
adc
imul
pop
inc
lods
adc
adc
adc
repz
sbb
hlt
xchg
pushf
mov
adc
fdivl
daa
mov
xchg
or
loope
pusha
cmp
in
adc
adc
shlb
jo
sub
xor
jo
lahf
cmp
push
jne
pop
into
jp
leave
add
fldcw
aam
repnz
in
roll
fldenv
daa
dec
dec
pop
rcrl
stos
nop
fcomp
shl
xorb
cmp
insb
mov
stos
mov
rclb
pop
inc
imul
rclb
loopne
movsb
bound
sub
lock
sub
incl
or
jp
movlps
mov
inc
mov
aaa
insl
das
mov
mov
mov
xchg
inc
imul
pusha
xchg
xchg
push
pop
adc
cmp
inc
adc
mov
mov
and
dec
xchg
xchg
adc
sub
insl
movsb
rclb
dec
add
sub
sbb
adc
int3
mov
mov
xchg
test
mov
dec
dec
ja
sub
rcr
pop
ja
add
and
mov
daa
mov
push
xor
jnp
in
mov
cmp
inc
movsl
pusha
xlat
xor
cmpl
dec
fcoml
or
inc
into
sub
push
cmp
ss
mov
ds
fldcw
stos
inc
aaa
and
xor
in
dec
push
jne
push
cmp
sub
inc
mov
pop
push
sarb
lods
dec
mov
xor
lcall
outsl
loopne
pop
insb
push
add
dec
dec
out
mov
lds
sbb
lds
jnp
cmp
add
cld
xchg
sti
mov
dec
vcmppd
fcmovnb
aas
or
lds
imul
sbb
sub
enter
in
imul
xchg
mov
cmpsl
inc
aaa
pop
addr16
push
aaa
pop
xor
inc
jno
sbb
pop
call
sbbl
pop
repz
loopne
push
add
aam
pop
aam
in
frstor
aaa
test
fcoml
inc
and
pop
iret
pop
outsb
ret
fsubl
in
fisubs
pop
inc
lods
cs
push
xchg
sub
push
or
xchg
aaa
pop
pop
cmp
ret
or
shl
push
pop
test
mov
sbb
mov
or
pop
mov
mov
or
rcrb
cmpl
cmp
or
mov
mov
jns
adc
jno
sbb
outsb
pop
hlt
aam
xor
push
adc
rorl
enter
inc
in
jecxz
loopne
push
outsb
fstpl
pop
inc
jo
push
inc
mov
outsb
imul
test
jle
or
add
or
iret
rorb
xchg
xor
xchg
pop
pop
int
adc
pop
cs
inc
ss
adc
sub
dec
leave
in
loopne
rolb
dec
xchg
leave
or
adc
stc
xlat
add
xchg
in
xchg
mov
in
in
push
bound
in
gs
mov
xor
sub
adc
or
lock
call
mov
mov
mov
mov
mov
nop
mov
mov
push
push
jb
mov
and
cmp
dec
mov
nop
sbbl
mov
enter
pop
mov
in
pop
cmp
mov
jb
xchg
sbb
mov
cmp
inc
push
mov
mov
cmpb
jb
sbbl
mov
enter
xor
in
sbb
inc
push
jb
mov
and
cmp
jecxz
fdivrs
in
mov
enter
mov
mov
cmpb
xchg
sbb
mov
cmp
inc
push
cmp
or
pop
sbb
or
mov
pushf
xor
or
shll
mov
or
sarl
and
scas
mov
cld
xchg
mov
pushf
xor
xchg
add
adc
xor
mov
or
daa
int
dec
or
and
das
mov
cmp
jb
sub
cmp
and
int
stc
mov
adc
pushf
xor
aad
cli
cmp
pop
sahf
ret
mov
adc
sub
movsb
ret
lock
or
sub
into
aad
loopne
dec
inc
in
das
mov
add
push
andl
sbb
inc
inc
add
sahf
leave
xchg
sub
sub
push
jb
push
mov
dec
call
dec
enter
xor
dec
push
ret
rorb
push
adc
push
mov
hlt
imul
notl
mov
icebp
andl
sbb
or
and
sub
pop
roll
pushl
push
lcall
test
add
jp
enter
add
push
cwtl
sub
adc
imul
mov
shll
test
scas
mov
push
pop
out
add
out
xchg
xor
dec
ret
dec
cmp
inc
out
jmp
ret
or
pop
out
in
mov
in
nop
movsl
out
jecxz
fs
inc
adc
and
pop
xor
out
js
mov
out
mov
adc
dec
out
push
xchg
enter
out
push
pop
mov
and
jb
dec
imul
cmp
leave
sarb
pop
mov
sbb
push
out
cmpsb
sub
cmp
jle
and
cmp
outsb
pop
sbb
je
out
pop
and
inc
xchg
push
inc
xor
mov
je
out
pop
inc
movsb
push
cs
idiv
jle
sbb
jmp
sub
or
popf
fstl
sbb
out
push
pop
pop
and
or
iret
scas
dec
xlat
test
out
mov
mov
inc
and
add
fs
sbb
andb
sbb
out
lret
and
pop
push
or
pop
mov
pop
adc
nop
scas
out
call
mov
cmpsl
cmp
sarb
imul
pop
add
cmp
into
mov
je
out
mov
int
out
nop
movsl
push
xchg
mov
loopne
pop
shlb
nop
movsl
sbb
push
loop
rclb
cmp
cmpsb
call
push
xchg
adcl
int3
adc
in
fdivs
pop
jnp
mov
cld
sub
adc
sub
je
push
call
leave
dec
sbb
push
mov
js
out
and
addl
insl
fdivrs
fs
frstor
dec
out
dec
sbb
inc
je
rcl
jge
adc
inc
sbb
cmp
out
loope
fs
or
sbb
or
out
lods
adc
shlb
dec
out
adc
imul
and
cmp
xlat
inc
call
sbb
out
dec
sbb
ljmp
fs
jle
rolb
out
dec
aaa
mov
lock
movsl
pop
sub
loopne
out
cmp
arpl
ljmp
jmp
xor
xchg
mov
add
add
xchg
xor
loopne
je
fildl
je
nop
test
out
pop
sbb
dec
sub
inc
cmp
repnz
out
jle
sub
jb
fs
arpl
fs
push
out
popl
pop
sbb
push
jne
xor
push
enter
inc
dec
sbb
cmpsb
loopne
sub
jg
xchg
fdivs
mov
cwtl
add
inc
xchg
int3
and
xchg
inc
xchg
outsb
sub
push
push
pop
mov
out
inc
xchg
inc
cmp
mov
cmc
or
out
shrb
pop
repnz
out
dec
sbb
dec
push
imul
push
mov
fs
ljmp
cltd
shll
dec
lock
inc
xchg
push
push
stos
shrb
xchg
xor
out
repnz
movsl
cmp
fs
loopne
sub
jecxz
out
rcrb
jns
add
pop
push
adc
out
sub
out
add
repz
pop
xchg
jne
and
jmp
movsl
out
add
out
nop
mov
pop
int
out
sbb
xlat
and
dec
jmp
and
cmp
and
test
mov
push
pop
out
jg
shll
sub
pop
push
stos
sub
push
mov
lahf
mov
out
pop
ret
xchg
stc
sub
fs
dec
inc
mov
ja
cmp
xchg
repnz
mov
xchg
out
xchg
push
adc
mov
pop
jmp
out
addr16
jl
shr
loope
leave
mov
les
les
jb
sbb
fs
inc
out
mov
scas
lods
out
xchg
test
hlt
out
pop
jp
adc
gs
out
xchg
and
out
xchg
jo
xchg
imul
out
inc
or
nop
movsl
out
inc
xchg
sbbl
into
dec
in
jne
repnz
xchg
xor
out
rclb
or
add
jmp
adc
mov
pushf
inc
iret
inc
mov
inc
iret
imul
pop
mov
xchg
jnp
push
jmp
mov
mov
inc
movsb
mov
xchg
add
push
pop
fnsave
mov
pop
lcall
cmp
aaa
test
adc
in
pop
popf
in
mov
xor
clc
lea
lock
pop
call
push
rcll
jp
and
push
add
mov
sbb
movb
push
jnp
xchg
jmp
fcoml
add
and
sbb
jns
out
pusha
jo
aam
repz
in
add
adc
push
bound
repz
jp
xchg
cmpsb
stc
cmp
repz
test
push
xor
jb
out
sahf
test
cmp
repz
or
push
sub
repz
repz
pop
data16
iret
repz
cwtl
scas
loopne
push
sahf
out
lcall
jns
out
insb
jbe
xchg
movsb
or
je
mov
dec
int
out
repnz
lea
adc
adc
or
push
int
xor
mov
push
das
movsb
sbb
push
fcoms
lcall
push
outsb
cmp
jl
fwait
iret
jnp
push
clc
mov
push
fwait
shrb
unpcklps
push
pop
sarb
add
mov
mov
add
xchg
out
adc
das
jns
cmp
push
sbb
sbb
cmp
repz
or
cs
sahf
mov
imul
and
js
jns
out
jns
jp
orl
adc
add
xor
inc
push
pushf
addr16
mov
mov
aas
iret
xor
push
push
xchg
or
xor
lcall
cld
xchg
hlt
jns
out
call
out
sahf
out
sarb
mov
mov
out
xchg
nop
mov
out
jl
je
sahf
out
sahf
insb
push
jns
out
push
push
dec
dec
inc
out
sahf
out
cmp
xor
lahf
out
sahf
sub
sbb
or
nop
cmp
repz
fadd
movsb
test
cmp
and
inc
popl
sahf
out
sahf
shlb
sahf
out
inc
xor
clc
mov
cmp
shr
int3
lods
test
ds
xor
in
enter
jl
js
xor
push
andb
out
in
mov
mov
inc
subl
mov
test
dec
push
mov
adc
sub
cltd
shl
push
aaa
xor
push
push
add
sub
fadds
xor
aam
sub
push
xor
cltd
nop
fstps
adc
js,pn
test
xor
out
fisubs
or
cmpsl
or
iret
sbb
daa
add
insb
cmpsb
loope
and
aas
xchg
add
jnp
ret
daa
and
push
jbe
jne
mov
inc
add
inc
xor
iret
test
mov
fiaddl
jg
das
xor
inc
push
pop
pop
addr16
or
adc
ficompl
sbb
mov
xor
test
adc
lea
jl
push
ja
aas
pop
enter
daa
shlb
fsubrs
inc
pop
es
into
jge
xor
cmp
jbe
loopne
pop
pop
inc
fistps
out
aas
sbb
popf
sub
sbb
jg
mov
mov
aas
test
cmp
test
jo
fwait
cmp
push
fsubl
inc
pushf
mov
fs
ljmp
cmp
or
unpcklps
lods
pop
xchg
xchg
cmp
clc
data16
cwtl
das
les
xchg
nop
imul
xchg
jne
mov
push
insl
sbb
loopne
adc
aam
adc
in
in
sbb
in
push
mov
sti
fiadds
iret
cmpsl
cmp
jbe
ud2
jno
into
mov
jno
push
xchg
movsl
add
dec
xlat
out
mov
das
pop
mov
jbe
mov
push
adc
jbe
cltd
mov
daa
add
icebp
cltd
scas
cld
andb
mov
xchg
cmp
cmp
jno
or
outsl
jne
gs
in
push
push
arpl
add
shrb
mov
and
xor
inc
fsub
pop
sub
xor
xor
xor
gs
cmp
inc
pop
sub
mov
scas
adc
mov
mov
and
push
pop
sub
mov
or
rcr
mov
sub
xchg
bound
sbb
popa
sub
mov
push
mov
sbb
imul
and
mov
sbb
sbbb
mov
mov
mov
sub
jae
movb
mov
sbb
rolb
jecxz
mov
subb
mov
mov
xlat
push
imul
inc
sbb
and
adcb
sub
cwtl
mov
mov
add
jbe
aad
push
jno
dec
mov
sbb
roll
pop
push
or
xchg
idivb
out
push
pushf
cwtl
xchg
nop
mov
jns
out
jl
push
mov
inc
cmp
repz
repz
sub
and
repz
and
adc
iret
jnp
fwait
xchg
hlt
xchg
in
push
in
cmp
repz
mov
cmp
repz
mov
ficoms
push
fs
push
repz
cmp
and
cmp
cmp
add
in
xchg
push
enter
cmp
repz
mov
cmp
pop
jo
pop
mov
cmp
push
adc
sahf
out
add
xchg
loopne
mov
mov
xchg
insb
pop
adc
inc
sbb
mov
orb
push
inc
test
loope
jo
lock
xor
and
enter
rcrl
das
or
fs
rolb
cs
adc
adc
call
outsb
pop
call
jg
adc
outsb
add
pop
enter
pop
pop
push
xchg
outsb
stos
lcall
cs
ret
inc
mov
fbld
addr16
push
or
rol
push
leave
incl
inc
adc
adc
add
pop
xor
mov
mov
mov
dec
jnp
iret
xor
xor
sahf
xor
sar
and
push
xor
xor
xor
aaa
fbstp
incb
aaa
arpl
cmp
cmp
test
popf
xor
push
cmp
andb
bound
clc
stos
mov
cmp
sahf
fdivrs
jmp
cmp
cmp
xchg
lahf
cmp
mov
mov
ficoml
and
pop
ds
ds
mov
fs
imul
aas
jecxz
call
push
xchg
mov
and
sub
xor
jecxz
xor
fs
cmp
out
jg
mov
push
out
xor
repnz
xor
xor
and
in
xor
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
cmpsb
inc
fistps
test
mov
xchg
xor
mov
out
xor
xor
and
sub
sub
xor
incl
ljmp
mov
repnz
ss
and
lcall
xor
xor
xor
xor
xor
push
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
and
sub
insb
ss
xorl
enter
out
push
inc
sbb
aaa
jp
aaa
cmp
insb
cmp
cld
pop
or
cmp
sbb
sbb
and
and
loope
popa
xchg
xor
jp
test
mov
mov
aas
and
cmp
pop
dec
cmp
test
stos
push
fistpll
cmp
arpl
cmp
dec
cmp
cmp
mov
inc
idivb
cmp
cmp
cmp
cmp
orl
cmp
test
ljmp
ds
ds
cmp
dec
jno
mov
aas
leave
mov
aas
repnz
movsl
imul
inc
xor
xchg
lock
mov
jle
xor
popa
adc
xor
repnz
xor
aaa
lret
aam
fimull
xor
xor
cmpsl
or
cmp
repz
sbb
pop
add
test
lret
push
add
ss
pop
aaa
mov
aaa
in
xchg
push
outsb
pop
xchg
sub
cmp
inc
push
xor
clc
js
jle
xchg
mov
test
icebp
cmp
into
in
adc
js
adc
ss
cmp
ret
dec
idivb
xchg
or
cmp
cmp
cmp
jecxz
test
dec
push
cmp
jne
jnp
addb
or
cmp
cmp
adc
nop
loope
test
clc
outsl
es
in
jmp
lock
ljmp
sbb
jecxz
inc
jp
insb
cmp
cmp
mov
stos
cmp
cmp
sub
ds
ds
ds
clc
sar
sbb
or
adc
and
dec
aas
push
aas
insb
mov
sbb
pop
aaa
mov
fidivl
test
sub
incb
loop
cld
test
mov
shll
xor
xor
xor
cmpsb
pop
popa
js
data16
xor
mov
lcall
xor
cli
xor
cld
ja
mov
loope
xor
aaa
jnp
xor
popa
mov
es
aaa
add
or
cmp
inc
fs
jo
adcb
bound
push
sbb
sub
sbb
mov
mov
icebp
sbb
pop
cmp
outsl
incl
mov
cmp
or
cmp
cmp
cmp
push
ret
clc
cs
cmp
scas
push
addr16
cmp
cmp
cmp
pop
cltd
cmp
cmp
cmp
test
aaa
leave
sbbb
sub
jo
call
ret
sarl
outsl
or
js
lock
or
or
sbb
loop
pop
pop
and
mov
xor
add
xor
sbb
xor
jns
mov
out
push
adc
sbb
das
ss
or
call
mov
mov
aaa
pop
dec
pop
cmp
and
lret
and
jg
cmp
cmp
cmp
mov
jg
fisubl
imul
cmp
cmpsb
cmp
cmp
cmp
test
lahf
arpl
inc
cmp
aas
iret
aas
loope
fistps
sbb
sub
cmp
xor
test
mov
fbstp
icebp
mov
inc
xchg
push
push
push
mov
push
cmp
hlt
xor
ss
aaa
gs
pop
and
sarl
icebp
cmp
cmp
cmp
cli
and
out
mov
mov
xor
out
adc
outsb
push
lock
cmp
xchg
into
sub
addr16
sub
jb
jnp
or
push
outsb
mov
lcall
popa
sbb
fwait
pusha
or
or
adc
and
clc
loope
mov
xor
je
jl
andb
cmp
cwtl
xor
test
pop
mov
or
ret
sub
mov
movsb
popa
pop
pop
jne
mov
fnsave
mov
cmp
cmp
int3
out
fs
stos
pusha
scas
push
xchg
jo
js
jl
xor
mov
sub
test
mov
add
fcmovb
xor
enter
int3
xor
out
xor
fs
loopne
call
pop
sub
or
adc
xchg
adc
cmp
add
dec
cmp
push
xor
gs
mov
xor
insb
add
mov
cli
xchg
xor
movsb
xor
mov
mov
adc
fcomp
xor
lock
clc
lods
divb
shlb
xor
sub
add
sub
jp
cmp
push
sarb
push
jo
bound
loopne
mov
mov
mov
add
stos
fmull
roll
fsubrs
xor
clc
mov
inc
xor
xor
xchg
xor
xor
push
shl
add
bound
xor
pusha
xorb
xor
movsb
rolb
aam
ficomps
push
enter
sbb
daa
sbb
aam
pop
fmull
jecxz
inc
jg
in
xor
dec
xor
data16
pop
sbb
and
sbb
jb
sbb
push
fnstenv
xor
cld
cmp
inc
xchg
dec
cmc
pop
pop
sbb
push
lcall
insb
xor
or
jp
xor
xor
xor
xor
xor
xor
xchg
rcrb
test
lods
and
xor
loopne
loopne
push
fiaddl
sarb
leave
pop
inc
xor
jle
arpl
pop
jo
nop
sub
adc
inc
xor
scas
and
fdivr
add
inc
dec
inc
add
insb
jo
cmp
clc
add
add
add
or
pop
pop
push
or
or
or
or
or
adc
rcr
adc
adc
push
adc
add
mov
mov
or
pop
sbb
adc
adc
adc
add
data16
cld
push
lods
fisttpll
adc
pop
adc
inc
add
or
xor
add
and
sahf
cmc
mov
add
add
mov
mov
add
add
push
adc
pop
and
xor
jmp
rcll
bound
js
rcll
adc
or
pop
addr16
pop
and
or
movsb
lea
dec
popa
adc
test
ret
inc
or
adc
stos
lahf
rcrl
imul
scas
inc
sub
pop
adc
incl
inc
adc
push
adc
pop
popa
jno
and
or
or
mov
or
xor
adc
shrl
icebp
mov
add
mov
push
xor
or
adc
dec
jo
cld
pop
adc
or
add
lds
cld
cli
and
mov
pushl
ret
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
outsl
inc
adc
movsl
jecxz
cli
pop
mov
stc
or
incl
loope
inc
repnz
addr16
out
or
push
push
xchg
add
cli
mov
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
xorb
xor
lcall
mov
push
pop
mov
pop
pop
mov
popl
lcall
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
outsl
call
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
ljmp
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
cmpsb
lcall
leave
mov
jp
push
out
or
cmp
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
pop
jge
jecxz
lods
mov
out
pop
jb
mov
sbb
jg
iret
in
push
mov
sub
pop
mov
jl
rorl
adc
scas
gs
jg
hlt
push
add
stc
loope
stos
fstp
decb
andl
aas
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
jge
inc
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
jg
je
push
push
push
idivl
cmp
sub
inc
scas
inc
jmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
push
lock
mov
pop
xor
outsl
pop
js
jmp
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
jg
ljmp
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
idiv
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cld
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
loopne
fdivrl
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
call
adc
push
jo
pusha
imul
add
mov
cmp
xchg
mov
push
in
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
jno
call
imulb
cld
xor
repz
jge
cmp
fmull
enter
jecxz
scas
sub
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
sti
sbb
push
inc
or
pop
jg
add
iret
mov
jg
mov
aad
test
mov
xchg
movsb
mov
iret
push
jbe
jmp
sar
push
sbb
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
std
outsl
sti
push
sbb
sarl
adc
loopne
and
rorl
mov
jg
push
imul
dec
push
in
aas
mov
fisubl
cmp
fsubrl
lock
and
incl
sbb
clc
xchg
das
clc
jmp
or
and
mov
adc
mov
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
ret
lock
data16
pop
nop
mov
out
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
jmp
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
insb
insb
adc
dec
mov
sub
jge
xor
idivb
ja
lahf
les
sbb
sbb
cld
addl
icebp
decl
inc
sbb
mov
lahf
outsl
int3
push
sbb
push
test
sti
jle
xchg
popa
out
add
paddsw
pop
outsl
xchg
inc
test
in
jge
popa
push
test
outsl
clc
lcall
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
jle
or
out
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
call
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
decl
inc
lds
push
pop
adc
imul
or
lcall
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
lcall
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
lock
insb
test
lock
repz
sbb
lock
in
jmp
out
jmp
mov
clc
push
std
mov
or
lods
out
jne
or
cld
push
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shrb
fisttpl
out
pop
or
or
dec
ss
les
or
repnz
clc
dec
cmc
mov
jl
call
jle
inc
jno
lret
pop
in
cmp
stc
fwait
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
mov
aas
mov
jg
incl
fdiv
mov
sub
addr16
sbb
cld
daa
jp
std
mov
fucomi
adc
cltd
or
mov
ret
nop
cmp
push
loop
cmc
das
incb
lock
pop
pop
div
cld
idivl
xlat
add
scas
stc
lahf
loope
js
or
jae
jmp
idivb
fbstp
out
xchg
add
out
sbb
xchg
mov
loope
mov
cmpsl
popf
sbb
xchg
mov
fbstp
push
daa
outsl
das
outsl
ss
cmpsb
cmp
call
adc
or
iret
decb
adc
mov
mov
and
shrl
call
popf
dec
cmp
or
mov
cmp
int
add
push
pop
aaa
cmp
std
fisttps
inc
pop
cmp
ret
sbb
xchg
fimull
xchg
popa
mov
ret
ror
sbb
aaa
sub
icebp
mov
adc
mov
sub
or
cmp
clc
loope
loope
mov
lahf
jp
push
xor
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
lock
repz
sub
jo
jo
and
outsl
pop
out
jg
jno
ret
or
inc
arpl
jmp
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
std
inc
inc
mov
in
sbb
xchg
imul
clc
pop
inc
xchg
sbb
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
xor
push
inc
in
adcb
add
int
or
inc
add
nop
cltd
dec
push
push
nop
mov
fwait
rorb
popf
test
and
call
es
dec
movsl
daa
roll
lods
ret
iret
sub
dec
decl
jecxz
add
subl
insb
dec
xor
inc
adc
subb
lcall
xor
lcall
and
fsubl
imul
decl
call
lret
out
ss
out
pop
jnp
loopne
inc
fwait
pop
jp
cli
mov
xchg
sbb
pushl
push
dec
mov
test
cmp
aad
ja
sub
fdivrp
sub
ljmp
js
mov
icebp
test
mov
lea
xbegin
add
mov
std
add
cltd
decb
adc
sub
jne
into
jno
sbb
loopne
insb
add
call
pushl
roll
popf
in
retw
cmpsl
pop
icebp
add
mov
mov
inc
push
movsl
lret
cmp
movsb
dec
pusha
jmp
inc
gs
out
call
in
dec
xchg
mov
sbb
xchg
imul
cwtl
test
xor
xchg
pop
pop
dec
fdiv
fidivl
adc
out
adc
ljmp
add
decb
jecxz
stc
mov
jae
mov
negb
xor
dec
frndint
lcall
and
cmp
stc
ds
push
and
xor
fdivrl
hlt
or
das
ss
inc
jo
jg
push
add
movsb
nop
test
imul
mov
ljmp
push
push
les
mov
add
sbb
dec
lcall
leave
mov
gs
pop
cmp
mov
int3
add
mov
mov
xorl
xlat
mov
stos
cmp
pushl
jle
jbe
and
mov
call
aam
mov
fdivs
dec
mov
xchg
push
sub
sti
sub
lods
pop
pop
or
mov
xor
int3
rclb
and
imul
icebp
rolb
pop
jmp
int
mov
lret
imul
sub
dec
movsl
hlt
fists
xchg
push
pushl
sbb
stc
sub
cmpsb
rolb
mov
and
mov
stos
lcall
arpl
es
push
iret
iret
mov
xorb
pop
div
sub
push
mov
or
jl
push
pop
jnp
ret
inc
pop
repz
adcb
lods
mov
cmp
dec
jne
mov
pop
or
inc
test
js
fs
and
cmp
cld
cwtl
sbb
lock
inc
mov
leave
pop
data16
stc
ja
dec
cmp
aad
push
stos
loopne
lcall
add
std
xchg
sbb
fldenv
loopne
imul
mov
mov
adc
test
xchg
push
mov
xchg
dec
xor
icebp
xchg
ret
nop
push
stos
rcll
aad
aad
lcall
pushl
mov
ror
dec
lods
jge
cld
xor
nop
stos
or
int
jge
push
call
out
push
cmpsl
popa
enter
cld
fists
and
pop
sbb
mov
inc
sti
shlb
pushf
mov
shll
dec
lcall
adcl
ljmp
test
cmp
jl
dec
loope
mov
std
decl
push
add
jno
jae
xlat
add
mov
sbbl
call
sub
push
pop
dec
xor
pushf
push
push
and
inc
std
leave
lods
stos
fistpll
jmp
bound
xchg
jnp
sbb
shl
mov
je
jmp
sub
adc
stos
incl
xchg
cmp
jle
push
out
daa
stos
sbb
lods
add
stc
xchg
and
mov
pop
shll
std
std
fwait
popa
pushf
imul
and
sub
cmp
sub
xchg
sub
pushl
testl
fwait
rcl
add
xchg
in
test
insl
pop
sub
fcomip
call
xor
in
hlt
jns
bound
mov
fscale
and
dec
fstpl
pushl
out
pop
add
jb
shlb
adc
jle
push
decl
lahf
jmp
cmp
stc
adc
testl
or
inc
cld
adc
ret
aam
pushl
pop
jg
cmpsl
movsb
daa
or
and
xchg
movsb
inc
pop
jl
xchg
scas
outsl
mov
jg
xchg
jmp
dec
or
mov
jp
inc
repz
xor
or
jg
pop
decl
xchg
push
sub
mov
pop
rcl
xchg
data16
test
xchg
jmp
xchg
xchg
xchg
add
out
push
es
rcll
popa
push
test
and
ret
adc
ud0
pushl
test
icebp
mov
popf
js
add
push
mov
dec
push
adc
sar
ljmp
cmovs
pop
js
add
mov
lods
xchg
inc
rolb
jmp
in
cmc
push
pop
fldenv
fsubs
dec
clc
mov
xchg
or
mov
in
or
sub
ljmp
xor
ficompl
xor
sbb
fstpl
mov
adc
cld
inc
outsb
jae
xchg
notl
shll
push
ret
loope
mov
fidivrl
mov
mov
sub
outsl
pusha
mov
jg
inc
call
xor
lods
data16
ljmp
rclb
les
ljmp
fwait
aad
movsl
xor
es
pop
pusha
ror
dec
pop
xor
lret
sub
decl
aas
pop
inc
sub
loopne
loop
mov
clc
ret
in
decl
mov
mov
test
xchg
jnp
lods
fisttpl
rol
testb
dec
jae
bnd
stos
shrb
cmp
xor
in
push
xor
jg
dec
and
sbb
push
push
in
mov
int3
data16
jle
fucomi
daa
adc
mov
fcoml
dec
pop
lods
jle
push
push
or
mov
add
inc
xor
std
daa
push
push
add
and
cwtl
push
sub
sub
jns
xchg
pop
add
fstp
cmp
and
negl
movsl
dec
xor
push
out
ljmp
call
inc
js
lods
sarl
mov
data16
jne
jg
mov
jl
add
dec
cmp
ret
dec
sbb
addr16
mov
inc
xor
lock
ljmp
mov
into
repz
jl
jo
loopne
test
jbe
pop
push
jmp
enter
jge
scas
mov
xchg
mov
cmp
rclb
xor
fildll
aaa
loop
adc
int
inc
cs
cs
mov
sahf
xchg
mov
jmp
repnz
in
add
idiv
stos
jmp
mov
jecxz
in
jnp
jg
sbb
repnz
imul
mov
jns
shlb
xchg
mov
xor
roll
inc
inc
aad
dec
mov
xor
or
jmp
icebp
jae
into
xor
ffreep
push
lds
incl
or
dec
repnz
notl
jecxz
incl
push
cmp
mov
test
addl
mov
leave
out
mov
popf
mov
and
pop
test
outsl
stos
cmpsb
dec
bound
jns
test
mov
dec
cmp
out
pop
inc
sbb
lods
int
sbb
sahf
call
iret
incl
mov
clc
xor
pop
sub
jg
adc
lret
and
pop
cmp
lea
jg
int
call
or
cmp
js
dec
popf
movsl
ret
daa
pop
sub
cmc
pushf
fcomip
call
shlb
lea
loop
enter
cld
mov
loop
and
mov
mov
decl
icebp
mov
scas
test
cmp
mov
sbb
outsb
shrb
call
outsl
xchg
and
fsubr
scas
xchg
icebp
inc
inc
punpcklbw
out
imul
dec
orb
push
lcall
stos
test
icebp
inc
jo
stos
arpl
xchg
jno
jl
cmp
ljmp
in
decl
lahf
adc
decl
daa
sub
push
jmp
inc
pop
mov
lods
xchg
sbb
adc
and
dec
jnp
incl
xchg
fmuls
leave
and
jg
xor
mov
adc
stos
fisubrl
add
icebp
pop
mov
or
sub
fisubrs
jg
shl
lock
cli
dec
mov
stc
or
scas
xchg
xchg
out
stos
insl
int3
dec
popf
jo
push
decl
inc
jo
leave
jne
mov
or
repnz
mov
dec
dec
fwait
imul
call
jb
cmpsl
adc
cpuid
scas
inc
outsb
xor
jmp
test
and
in
mov
cltd
mov
push
and
mov
ficoms
test
mov
jmp
dec
inc
adc
enter
mov
decl
push
inc
add
sub
inc
icebp
lea
or
into
cld
fwait
adc
incl
mov
or
fdivl
aam
loope
arpl
inc
in
adc
push
or
push
sub
int3
or
iret
stos
lods
inc
dec
add
loope
dec
fsts
je
mov
jmp
inc
cltd
mov
or
sub
call
cld
jo
fcomip
jg
in
xchg
shll
test
inc
stc
mov
push
stos
mov
je
movsl
pop
or
popf
cmpsl
je
push
mov
daa
pop
cmpl
xor
enter
push
shlb
and
lds
scas
and
cmpsl
cli
sub
lock
scas
xor
pop
cmp
pusha
add
jns
movsb
loopne
inc
ds
ss
stos
pop
fs
pop
hlt
outsl
jmp
mov
call
sub
or
dec
push
cmpsl
test
sbbl
decl
rolb
pop
mov
jo
or
mov
insl
lock
pop
pop
jbe
mov
or
fsts
cmp
pop
jle
sbb
mov
std
mov
rol
dec
test
mov
adcb
sbb
or
pushl
pop
jg
sbb
outsb
aam
fidivs
fldenv
ret
stc
mov
adc
jg
cmpsb
loope
ficoms
fiaddl
jns
xchg
xchg
pop
mov
aaa
fcmovnbe
adc
stos
out
mov
jmp
lahf
fisubrs
cltd
dec
in
js
pop
inc
ljmp
mov
cmpsb
hlt
mov
pushl
out
dec
mov
push
pop
stc
adc
push
ret
es
sub
ret
push
push
pop
daa
les
dec
xchg
mov
loope
dec
pop
in
test
test
jo
das
pushl
push
outsb
sub
fiaddl
in
xor
mov
pop
and
jp
sub
incl
sbb
imul
test
rclb
lds
dec
jo
lods
cli
fdivs
imul
popa
ret
sbb
icebp
mov
lods
lret
jge
push
pop
jns
leave
mov
in
ljmp
stos
cs
movsl
jg
cmp
xchg
stos
push
xor
cmp
sub
popw
dec
dec
das
and
mov
hlt
aam
xchg
sbb
stos
cmp
add
adc
incb
outsb
gs
out
decl
inc
add
bound
notb
mov
adc
fists
int3
push
or
push
xchg
pop
inc
out
in
int3
aas
mov
addr16
mov
or
add
insl
xchg
cmc
bound
scas
aam
outsb
mov
insl
pusha
xchg
scas
cli
inc
popa
fsubs
divb
mov
adc
mov
ss
mov
ja
decl
or
fcoms
in
add
and
lea
lcall
cmp
and
inc
inc
aas
jecxz
sti
pushf
out
xchg
lahf
mov
jmp
push
pop
xlat
aas
dec
xchg
lods
dec
mov
fsubrs
ljmp
pop
stos
cmpsb
sbb
mov
lahf
mov
jmp
xor
push
sub
pop
je
mov
mov
loop
jp
push
decl
lret
dec
dec
jb
scas
xchg
mov
popf
mov
push
add
insl
ss
pushl
jl
adc
data16
fildl
fwait
es
pop
jno
mov
ljmp
push
iret
and
out
xor
hlt
ficomps
add
fstp
adc
cmp
adc
and
adc
daa
test
lods
dec
bound
xor
out
std
dec
cld
mov
mov
fwait
and
repz
shl
jg
push
xor
mov
jecxz
scas
lcall
push
repz
pop
mov
cwtl
orl
mov
adc
jg
mov
mov
push
push
outsb
pop
jbe
mov
stos
jmp
sbb
xchg
jp
add
out
push
mov
mov
fcomps
fdivrl
and
mov
adc
mov
push
cmp
lret
ret
xlat
push
lds
out
xchg
xchg
xor
push
add
decl
imul
out
je
mov
sar
jns
push
cmpsb
mov
inc
sub
mov
popf
cmp
lods
es
stos
nop
jb
add
xchg
push
xor
int3
fildl
jl
std
arpl
mov
in
cld
cmp
mov
jns
push
xchg
arpl
pushl
pop
repnz
inc
gs
lock
call
cmp
fwait
or
mov
int
and
jmp
dec
pop
sbb
testb
dec
mov
or
decl
sbb
jb
dec
sub
mov
test
ljmp
add
jl
pop
fadds
dec
fisubrs
push
add
cli
mov
or
fcomip
out
sbb
cmpsb
roll
push
push
ljmp
pop
aad
pusha
dec
mov
jecxz
mov
roll
xlat
call
outsl
les
lock
jb
and
dec
in
mov
cmpsb
ds
adc
dec
fs
adc
xor
adc
or
inc
jae
mov
inc
add
mov
ja
or
push
jecxz
jmp
mov
and
cmp
jg
or
repz
xchg
push
mov
jno
rcrb
cs
call
sub
in
mov
push
test
jp
inc
loop
push
in
out
into
jmp
sti
pop
out
mov
pop
daa
mov
or
out
std
jg
dec
mov
mov
loopne
cmpsb
andb
iret
xchg
mov
push
test
add
ja
test
shll
mov
das
hlt
es
or
and
sbb
ljmp
test
mov
sub
push
inc
stc
loop
in
cwtl
je
mov
stos
xor
sbb
aas
lret
js
loopne
shrb
push
cld
fcmovnb
jnp
push
je
imul
in
pushl
ret
out
mov
cmp
dec
aaa
shll
loop
cmpsl
inc
andb
and
popa
jb
jmp
cmpsl
xlat
mov
js
and
in
mov
inc
pop
add
cmp
in
jg
call
xor
jae
mov
lcall
sbb
add
loope
ljmp
push
shl
cwtl
shll
adc
adc
vcvtsd2ss
lea
mov
imul
sbb
icebp
inc
push
sub
das
push
sbb
mov
test
adc
addr16
std
divb
in
dec
test
imul
fwait
lcall
mov
xchg
ret
jo
mov
imul
outsb
in
jb
std
js
add
jp
sbb
add
xor
mov
daa
pop
inc
xchg
pusha
cli
cltd
pushl
lret
js
mov
cltd
cmp
dec
dec
les
leave
aas
lods
clc
mov
lret
aaa
aaa
lods
inc
mov
ret
xchg
mov
int
jmp
and
sub
int3
pop
adc
out
jne
fwait
and
cmc
adc
sbb
arpl
mov
bound
lods
pop
ret
mov
out
filds
decl
jno
lahf
aas
sahf
inc
ljmp
lds
fiadds
mov
popa
incl
shl
int3
es
push
adc
test
pop
stc
dec
jge
and
mov
sarl
les
xchg
icebp
mov
sbb
in
outsb
aam
jg
ss
push
stos
pusha
dec
xor
je
mov
sub
stc
xor
cmp
jg
lcall
xchg
rcrl
mov
mov
fs
leave
std
cmp
inc
mov
punpckldq
push
in
mov
push
icebp
add
dec
add
cmp
ljmp
aas
push
jp
jmp
shrl
push
mov
inc
into
subb
pop
and
inc
stos
rorl
idiv
cli
lods
inc
jmp
mov
dec
imul
cltd
and
ljmp
push
xchg
sbb
push
cmp
leave
cmc
pop
xchg
nop
mov
je
decl
push
inc
mov
imul
jl
mov
dec
mov
adc
jge
dec
fsubrl
int
popf
sub
dec
jp
xlat
out
and
inc
clc
pop
cmp
outsb
pop
xchg
ljmp
fs
jge
pop
pusha
inc
add
sbb
jne
push
mov
sbb
das
jp
sbb
sahf
scas
mov
repnz
pop
int3
cs
pop
and
push
or
decl
add
clc
bound
stos
loope
cs
das
cli
clc
dec
sbb
xchg
stos
data16
clc
and
aad
lret
stos
pop
jg
std
add
incl
or
pusha
and
mov
imull
push
dec
cltd
inc
sbb
or
mov
cltd
pop
jno
insb
ljmp
xchg
insb
fidivrs
and
jmp
add
jo
or
inc
pop
push
mov
repnz
mov
es
fs
sbb
dec
mov
mov
lcall
mov
inc
xor
mov
push
cli
inc
push
test
add
ret
fdivrp
mov
in
pop
jnp
mov
xor
mov
pop
pop
pop
push
stc
mov
call
scas
xor
push
int
addr16
in
insb
mul
sub
mov
pop
mov
and
cli
cmp
pop
mov
or
jbe
sub
icebp
int3
mov
sbb
mov
xchg
jg
hlt
fsubs
jbe
cmp
mov
sbb
pop
ljmp
lock
arpl
loop
xor
stc
lds
ret
call
pop
mov
es
iret
fdivrs
inc
imul
sub
cld
jg
sbb
faddp
adc
xchg
in
loope
sti
lret
fnsave
cmpsl
out
push
inc
add
in
dec
ret
lcall
pop
sub
fisttpl
cmp
imul
push
push
decl
fdivrs
add
bnd
mov
call
dec
mov
lcall
xchg
adc
aas
test
fdivrl
xchg
mov
push
xchg
sub
jp
bswap
cmp
imul
jmp
movsb
mov
xchg
push
push
mov
adc
out
xlat
inc
imul
xchg
sarb
fwait
dec
sub
call
jmp
je
insb
inc
test
mov
sti
insl
pop
dec
std
pop
xchg
or
pop
mov
gs
mov
push
lcall
inc
dec
xchg
pop
sbb
sbb
sahf
daa
push
icebp
in
repz
cmp
pushl
adc
mov
shlw
scas
das
movsl
dec
inc
and
lds
incl
cwtl
push
ret
xor
shrl
pop
jno
mov
ret
push
jno
mov
mov
jns
push
push
mov
ljmp
and
add
ret
rcrb
cmp
nop
lods
inc
mov
lcall
shrl
bound
push
clc
mov
dec
mov
leave
push
fnstcw
adc
rorl
jle
dec
lret
inc
inc
gs
leave
pop
les
ret
lods
cmpsl
sub
and
scas
int3
imul
push
ljmp
cwtl
adc
sub
xchg
push
and
mov
cmp
push
push
sti
xchg
imul
xor
mov
mov
mov
pop
int3
or
popf
ljmp
or
aam
lret
lea
dec
icebp
aas
push
pushl
std
pop
or
mov
cld
into
mov
call
test
stos
stc
jg
mov
adc
adcb
js
cmp
sarl
pushf
ds
fs
ror
lahf
nop
cli
loop
fbstp
es
mov
sbb
dec
clc
and
mov
mov
jnp
pop
fdivl
push
and
out
xchg
xor
xchg
pop
lahf
into
fs
pushw
inc
aas
in
gs
add
push
inc
pop
or
sub
cmp
scas
in
push
stos
cmp
cltd
pop
jo
loope
or
imul
je
hlt
pop
out
clc
test
and
clc
inc
xorb
jno
call
and
xor
andl
push
mov
mov
pop
pop
jo
xchg
mov
xor
push
mov
cmpsb
xchg
sbb
ja
test
fidivrl
sbb
loopne
sub
cld
sar
fisttps
lods
cmpsl
mov
outsb
test
mov
jmp
lret
pop
push
adc
mov
add
mov
sahf
inc
xor
push
mov
mov
cmp
inc
and
addr16
adc
xchg
push
call
int3
or
xor
ljmp
ret
xchg
imul
imul
ss
pop
lock
jge
jns,pt
xchg
mov
sbb
mov
in
jmp
push
call
lea
incl
aas
loopne
test
rcll
jb
loope
jne
xchg
test
inc
stos
jae
xchg
adc
pushl
das
stos
js
in
dec
pop
mov
mov
sbb
rol
or
adc
pushl
test
inc
and
inc
bound
ljmp
sbb
mov
push
out
das
outsb
push
adc
test
xor
jle
cmp
call
fildl
xchg
rcrl
pop
stc
call
pop
jmp
sbb
stos
mov
cmp
daa
cltd
or
cmp
scas
mov
pushl
pop
and
mov
jns
push
lret
mov
dec
or
xchg
sahf
aaa
aas
daa
call
dec
add
outsb
cmc
sub
aaa
out
mov
pop
sbbl
cmp
shll
out
inc
int3
and
scas
cli
loope
das
sbb
mov
hlt
movsb
mov
arpl
fidivrs
or
adc
call
xchg
mov
sbb
push
adc
xlat
lods
cmp
fsub
cmc
push
lret
shll
cmpsb
dec
push
mov
cld
pushl
jbe
in
or
xchg
or
adc
mov
sub
jge
xchg
aaa
test
add
push
cli
decl
enter
imul
pop
dec
cli
sbb
jae
lret
fisubrs
pop
ret
mov
decl
and
std
jns
sub
adc
sbb
lret
or
ss
ret
in
int
decl
bnd
outsb
clc
dec
mov
fstp
std
sub
outsb
ljmp
lret
cld
out
or
sbb
sbb
sub
fsubrs
pop
sbb
repnz
xchg
push
out
ljmp
movsb
jne
sbb
mov
pop
sub
daa
jo
pop
mov
xchg
movsb
addr16
ds
clc
add
test
xor
xchg
das
inc
js
sub
stos
pop
lcall
aad
aas
jp
add
and
int
lret
or
add
xchg
and
ret
clc
ljmp
push
sub
call
repz
addr16
cltd
das
stos
mov
lea
pop
mov
daa
aas
inc
xchg
lods
pop
ljmp
sbb
add
xchg
lds
lock
popa
dec
stos
push
dec
sub
lcall
out
ffree
test
les
mov
ret
aaa
push
ljmp
mov
ljmp
xchg
mov
jp
pop
ret
sbb
push
jo
pop
lea
jmp
xchg
xchg
outsb
pop
mov
sbb
cmp
cs
xor
or
jnp
xchg
ds
lret
call
mov
mov
adc
test
add
mov
out
fiaddl
repz
js
movsl
inc
jecxz
cmpb
or
mov
cmp
in
inc
fdivs
in
pop
dec
sub
sbb
mov
gs
lcall
dec
rcrl
or
jb
xchg
rol
lahf
sbb
jl
rolb
aad
push
lock
scas
adc
outsb
mov
stos
decl
rol
add
or
and
and
jmp
jle
inc
fcmovb
pusha
ja
iret
jb
in
jns
testb
pop
pushf
ret
xorb
ficoml
decl
push
testb
std
stos
cmp
stos
sbb
jbe
adc
inc
push
in
ljmp
cli
nop
repz
xchg
cltd
out
nop
and
fs
orl
or
inc
aad
aam
dec
cmp
movsl
sti
int3
cmpsb
push
add
cwtl
shll
pushl
jmp
inc
insb
xchg
mov
cwtl
pushf
lods
mov
xor
fwait
rcrl
std
pop
jp
ljmp
addb
pushl
or
xor
push
fildll
ljmp
test
pop
jns
mov
cmp
dec
stos
add
xchg
jae
mov
cs
jle
mov
js
pop
push
add
daa
les
fcomip
or
xchg
das
jl
shlb
xchg
loopne
int3
scas
rcrb
call
jp,pt
in
dec
dec
imul
xchg
negl
les
adc
aad
add
fidivrs
mov
ret
adc
ret
dec
jmp
adc
and
mov
fsubl
inc
cmpsb
sar
lcall
and
jg
into
dec
aam
js
jnp
push
mov
jnp
and
jecxz
pushl
pop
xchg
mov
aaa
sahf
cmp
sub
push
jnp
jg
mov
inc
and
and
movsl
shlb
cmpsb
inc
mov
call
lahf
push
push
ja
dec
inc
and
pop
sub
mov
mov
add
or
imul
pop
mov
fdivr
jg
add
scas
inc
pop
adc
js
sbb
aaa
std
jmp
daa
popf
sbb
xchg
fdiv
pop
outsb
pushl
and
sub
incl
ficompl
jb
fistpll
mov
sbb
ret
adc
pushl
test
adc
mov
filds
imul
shlb
les
xchg
jb
jae
jb
imul
in
add
aad
fcomip
mov
adc
movsl
push
lret
adc
mov
jne,pn
mov
lcall
repnz
ljmp
faddl
cwtl
lods
push
mov
scas
sbb
jb
das
xor
ja
aaa
into
dec
mov
push
mov
or
add
or
movsb
test
nop
das
lock
fucomip
rolb
fmuls
cwtl
sub
ja
aas
dec
mov
sbb
decl
ljmp
fisubrl
and
mov
or
rorb
out
dec
mov
add
insb
pop
test
fisttpll
sub
movsb
and
mov
cli
mov
pop
or
pop
mov
or
push
lret
pop
enter
mov
push
mov
pop
or
jmp
jno
and
aad
fldenv
std
mov
enter
sbb
aad
jns
call
sub
sbb
incb
scas
mov
adc
or
dec
xor
jbe
inc
push
call
bound
int3
cmp
sbb
inc
xchg
push
mov
push
loopne
shlb
xchg
call
out
in
mov
cmpsl
arpl
mov
mov
test
popf
xor
pop
ljmp
sar
pop
lods
out
and
jecxz
xor
sub
dec
insl
jl
aas
cmp
pop
lcall
dec
shrb
fwait
mov
and
imul
jmp
insl
sub
inc
pop
pop
xchg
into
push
xchg
push
lret
icebp
sbbl
sub
push
lds
bound
imul
lods
test
push
push
imul
movsl
mov
jmp
stos
jmp
lcall
out
test
push
jae
lahf
xchg
inc
int
lcall
jl,pt
mov
cmpl
or
or
ficoml
cmp
add
push
fisubrs
fwait
xchg
imul
ljmp
cwtl
jg
jmp
ret
xor
sti
sbb
pop
test
push
ds
sub
sahf
aas
jl
xor
fwait
call
mov
mov
movsb
or
mov
xchg
push
inc
ljmp
or
mov
jecxz
aam
ss
jae
js
sar
dec
xor
movsb
repz
jb
sbb
dec
mov
add
xchg
dec
movl
inc
std
xchg
push
sbb
push
add
cs
scas
xchg
jno
adc
sub
cmp
xchg
lret
mov
repz
ret
shll
test
ljmp
test
cmp
mov
les
loop
fldt
ljmp
inc
pop
mov
sub
das
sbb
out
pop
ds
addr16
jb
or
mov
mov
enter
testl
adc
test
mov
lcall
push
pop
inc
test
xchg
out
das
xor
orl
inc
lcall
ljmp
mov
adcb
push
loope
aaa
jmp
mul
das
push
fs
mov
dec
fisubrs
push
mov
aaa
decl
pushl
out
mov
inc
add
cs
jmp
in
sbb
jmp
test
jno
dec
pop
mov
fs
inc
outsl
mov
adc
cld
int
inc
adc
leave
xchg
decl
mov
mov
cmp
xchg
xorl
mov
mov
aam
pushl
mov
cmp
repnz
rorl
cltd
jnp
movsb
lret
lock
incl
data16
insl
add
testl
and
adc
mov
fiadds
mov
add
in
test
ja
mov
xchg
ror
push
mov
ss
jmp
mov
or
mov
and
or
scas
mov
cs
lcall
out
aam
ret
in
je
daa
push
das
shlb
add
sbb
sub
aam
cmp
call
call
mov
pop
cmc
loopne
test
aas
icebp
mov
roll
mov
aam
add
sbb
xchg
and
xlat
sbb
jle
incl
jle
xchg
push
mov
stos
or
bswap
xor
push
rolb
push
lds
out
sbb
sahf
pop
push
cli
cli
mov
and
lcall
and
jle
mov
negl
jne
mov
mov
xor
dec
repnz
cmc
jge
jnp
jb
cmp
scas
xlat
outsl
les
aaa
addr16
add
pushl
bound
or
cmp
pop
sub
xchg
enter
ljmp
mov
sbbl
in
mov
cmc
mov
call
incl
mov
xchg
mov
push
sub
jg
xchg
xor
push
dec
call
jecxz
pushf
jecxz
cmp
arpl
push
inc
cmp
ficoms
xor
or
mov
ficoms
fstps
jno
ret
mov
fidivrs
sub
jbe
mov
in
add
jb
ret
jge
shll
int
std
cmp
cmp
jg
jg
aas
cltd
aam
in
mov
pop
lcall
scas
xor
jl
popf
or
cmp
mov
fisttpll
dec
fsts
dec
ljmp
ljmp
adc
adc
mov
in
mov
popf
push
mov
test
add
dec
repnz
inc
movsl
mov
imul
sub
dec
pushf
inc
decl
loope
cmp
cltd
lea
push
xlat
aas
xchg
je
rorb
lcallw
insb
mov
dec
sahf
jo
cld
inc
in
out
sbb
repz
jo
add
mov
fsubrl
ljmp
pop
xchg
test
sub
inc
loopne
out
push
sahf
and
mov
xchg
mov
lcall
aam
lea
lods
rcll
pop
psllw
test
adc
fists
lds
add
int3
xchg
mov
dec
mov
les
decl
fisttpl
xor
mov
iret
adc
lret
cmp
xor
scas
divl
fwait
dec
shlb
test
jmp
or
add
mov
test
cmc
rcll
xor
enter
lds
pop
mov
sbb
inc
dec
lcall
lock
pushf
fldcw
adc
enter
xchg
stc
scas
call
loop
sub
lcall
xchg
movsb
in
pop
shlb
xchg
js
scas
sbb
inc
add
es
and
test
call
test
inc
jmp
push
daa
std
mov
subl
movsl
or
ret
add
push
sub
mov
mov
pop
pop
stos
mov
lds
scas
adc
push
inc
scas
insl
sbb
xchg
inc
xchg
pusha
dec
sar
adc
push
les
repnz
divb
icebp
mov
in
popf
ja
mov
rcrb
add
mov
aas
sub
cs
or
cltd
ljmp
lods
idiv
jl
mov
je
inc
sub
fs
hlt
push
and
loopne
mov
lds
push
xor
icebp
outsl
inc
and
pop
test
inc
xor
xor
stos
addb
pop
gs
add
add
in
jmp
pushf
cli
xchg
pushf
sbb
pop
xor
cltd
movsl
add
inc
lret
lahf
mov
bnd
pop
rorl
call
push
fsts
dec
adc
pusha
es
out
or
outsl
mov
movsb
xchg
or
pushl
out
rorl
fistl
cwtl
es
scas
mov
mov
inc
ja
jp
inc
push
cmovo
in
cmp
push
jb
fsubrl
xchg
mov
in
repnz
incl
mov
jb
inc
fs
sbb
pop
loope
test
push
cmp
ss
add
call
daa
int3
adc
icebp
inc
jns
push
out
pop
add
pop
jo
out
mov
sbb
fcmovu
xchg
cs
lcall
sub
xorps
jle
or
mov
push
call
xor
rclb
jne
fnstenv
and
inc
movsl
repz
xchg
mov
fnsave
cs
and
lods
mov
sahf
push
gs
jne
jg
mov
adc
or
loop
pop
leave
movsb
inc
lock
movsb
mov
sbb
ljmp
pop
sbb
cmp
jae
movb
jae
addr16
in
scas
mov
in
ja
lds
pusha
pop
xchg
ret
push
ret
mov
jl
imul
jo
inc
sub
ljmp
stos
dec
sarb
mov
inc
sbb
daa
sub
jle
fdivs
mov
xchg
insl
jle
ljmp
sbb
das
push
xor
roll
jns
or
cli
add
incl
xlat
inc
cmpsl
aas
pop
inc
jecxz
in
cwtl
pop
xchg
or
ss
lods
cmc
arpl
sbb
dec
jbe
stos
mov
loop
sbb
cmp
mov
cmp
arpl
sbb
sbb
mov
mov
stc
imull
je
pusha
imul
call
adc
lods
cmp
sub
es
cmp
shll
ror
inc
or
pushl
pop
repz
dec
cmp
out
sbb
lock
out
stos
cmpsb
inc
jnp
aas
cmpsl
or
cmc
mov
push
ljmp
cld
xchg
add
lods
bound
jge
push
push
xchg
test
repz
jns
ljmp
cmp
or
xor
mov
jo
jns
ljmp
in
ljmp
ret
es
inc
test
lods
jmp
js
or
pop
movsl
add
lcall
mov
pop
inc
int3
test
mov
push
jecxz
aad
jge
mov
incl
or
lock
sahf
mov
xlat
dec
jnp
int
sbb
stos
mov
sub
jg
pushl
aaa
push
push
int
fildll
rcrl
scas
xchg
and
jle
add
cmp
mov
decl
pop
mov
sbb
mov
pop
stc
ja
mov
stos
aas
arpl
stos
xor
bound
xchg
and
decl
out
ret
adc
dec
lret
jo
inc
mov
inc
es
cmp
test
adc
ljmp
inc
aaa
sbb
mov
pop
push
ss
sub
in
and
mov
pop
dec
movsb
cmc
push
es
jmp
arpl
jmp
decl
out
sub
lcall
inc
divb
push
jnp
sbb
scas
cmp
ljmp
aam
jns
dec
fisttpll
test
cmpsb
lods
insl
xchg
mov
mov
sbb
out
dec
adc
xchg
out
sub
lcall
push
xchg
fidivrl
out
pop
inc
leave
lods
xor
insl
or
push
sbb
stc
mov
and
call
in
adc
insl
ljmp
push
add
fidivs
xor
cmpsb
ljmp
dec
imul
xor
cwtl
ret
icebp
cmpsb
adc
ljmp
sub
mov
lahf
pushf
or
negb
dec
and
jge
loope
push
shl
rcll
lock
wrmsr
shlb
aam
fistpll
shl
lods
test
dec
pop
cmpsb
mov
add
sbb
adc
add
shlb
iret
mov
pop
cmpsl
or
aam
and
pop
mov
incl
mov
out
cli
pop
inc
mov
iret
pop
frstor
push
movzwl
mov
lret
dec
or
call
lods
movsb
lods
fisubl
in
inc
sub
gs
push
or
nop
inc
cmp
into
sahf
loope
dec
repnz
in
pop
xchg
xchg
pop
cmp
pop
pop
jmp
push
xchg
jbe
lods
mov
mov
clc
jb
jo
cmp
das
popf
or
mov
fidivs
in
mov
cmp
fistl
sub
test
mov
popa
inc
jae
sub
lods
sbbl
in
inc
pusha
sbb
dec
and
push
mov
imul
fldenv
sbb
jmp
outsl
ss
movsb
mov
stc
pop
nop
xchg
imul
insb
out
mov
mov
push
aam
test
dec
push
or
xchg
pop
fldenv
loope
call
shrb
pushf
xorl
test
dec
pop
in
fistpll
adc
mov
sub
les
decl
dec
xor
pop
and
gs
mov
mov
aas
je
in
outsl
popf
loope
jmp
rorb
int
std
scas
dec
rorb
jo
cmp
mov
lods
adc
mov
fdivr
filds
insb
in
sahf
ffreep
loop
mov
or
pop
mov
and
mov
in
add
add
ret
dec
decl
shlb
mov
jno
mov
ljmp
into
push
pushf
addr16
cli
mov
push
add
imul
cmp
call
xchg
repz
xor
lcall
lea
jmp
and
pushl
push
pop
aad
in
test
stos
adc
sbb
xchg
xor
cld
out
mov
movl
jne
inc
jno
lret
les
aaa
inc
inc
fidivrl
cmpsl
and
pop
sbbb
js
mov
mov
test
nop
out
xor
call
dec
mov
rclb
stos
outsb
jnp
xchg
pop
rolb
stc
pop
insl
xchg
dec
mov
adc
jnp
jae
mov
mov
dec
jg
test
sub
inc
add
cli
scas
loope
movsb
das
rcrl
test
jecxz
jne
ljmp
xchg
lahf
and
leave
inc
inc
inc
shl
dec
repz
xor
incl
mulb
add
push
jg
add
cmpsl
jae
movsb
push
jmp
jno
cli
call
lea
jo
gs
mov
loope
aad
ljmp
push
arpl
pusha
sub
into
decl
lock
aam
adc
bsr
and
xchg
pop
pop
mov
mov
call
fwait
sahf
pop
pop
mov
mov
push
aaa
ljmp
call
leave
sub
cmpl
out
xchg
js
mov
cmp
xchg
or
pop
cltd
js
mov
xchg
adc
cltd
in
pop
mov
lcall
cmp
lcall
arpl
clc
mov
cwtl
rcr
sub
out
jmp
enter
pop
xor
mov
hlt
pushl
push
cmp
mov
incl
into
xor
dec
inc
ds
xchg
mov
js
scas
mov
sbb
adc
mov
push
call
rcrl
js
mov
shrl
enter
dec
jge
sub
jmp
fisttpll
add
jle
jns
inc
je
push
mov
inc
insb
mov
cmp
pop
orb
pop
and
lea
ljmp
es
test
pop
ss
inc
insl
cltd
mov
or
ljmp
daa
bound
into
pop
fidivrl
adc
cs
add
xchg
xor
lods
insb
fcoms
ss
incl
pop
int
and
cmpsl
fwait
test
test
out
mov
add
test
jg
ljmp
jb
dec
xor
scas
imul
ja
cwtl
mov
test
cmp
jbe
jmp
push
and
inc
pusha
mov
ret
imul
mov
or
je
inc
push
xor
call
push
test
cmp
inc
dec
push
mov
pop
lods
lods
lods
ret
and
dec
dec
gs
lcall
ljmp
xchg
adc
add
sar
add
ret
ljmp
dec
test
jnp
mov
sbb
cli
ret
lods
cmp
sti
dec
scas
pop
cs
ret
inc
pushl
lock
jmp
or
jg
inc
xor
test
sub
or
and
lcall
fsub
jno
bnd
xchg
jmp
and
cs
mov
or
incl
push
mov
sbb
or
test
xchg
and
inc
lcall
in
ja
fcomps
flds
imul
test
adc
mov
xchg
lods
pop
pop
push
mov
xlat
add
mov
fmul
stos
pop
xchg
loop
pop
xchg
inc
dec
clc
mov
mov
test
xchg
add
nop
leave
fmuls
jbe
pop
jbe
cmp
xchg
xchg
jmp
push
fld
mov
movsb
dec
clc
jnp
enter
push
stos
inc
or
xchg
std
vpmacsdql
jmp
mov
clc
dec
jle
jmp
adc
stos
std
out
pop
cmp
testb
xor
add
cmp
or
xchg
mov
aas
fs
cld
or
decl
or
push
clc
adc
sti
shrl
lea
adc
fmuls
decl
cmpsb
push
stos
pop
jge
insb
enter
xchg
int
ss
sbb
lcall
mov
and
cld
inc
ffree
sbb
sahf
ret
dec
dec
sbb
pushl
pop
push
pushf
enter
dec
dec
mov
rol
iret
mov
sbb
pushw
lahf
popf
test
or
add
pop
xor
inc
pusha
xchg
pop
repnz
ss
lret
jl
jo
test
das
sub
and
dec
lods
mov
fs
orl
add
call
cmc
dec
aad
mov
jl
in
xchg
or
sbb
lock
pop
jecxz
adc
lret
push
decl
cmp
sbb
popf
in
pop
in
test
loopne
sbb
hlt
pop
in
test
mov
test
das
cli
inc
loope
movsb
dec
mov
enter
mov
sti
into
xchg
inc
pop
push
lcall
push
aad
out
nop
or
getsec
mov
xchg
cmp
in
push
gs
cmp
call
cmp
xor
ror
rclb
ret
sub
lods
sahf
mov
mov
mov
stos
in
or
lcall
stc
pop
sti
xchg
lret
mov
cmp
out
rcl
rorl
cmpb
jae
push
mov
roll
daa
pop
cmp
cld
sti
xchg
dec
xor
or
mov
inc
sub
cmp
sarb
or
test
pop
mov
xor
xor
out
jno
notb
pushl
xchg
lds
loope
xchg
outsl
pop
cmp
out
dec
or
add
inc
mov
imul
subl
into
or
bound
test
sar
adc
in
sbb
cmp
repnz
adc
lahf
aas
pop
fildl
aas
add
push
xlat
call
sbb
add
sbb
sahf
mov
push
pushf
js
push
push
test
movb
movsb
dec
xor
hlt
inc
jp
mov
cmpsb
dec
mov
xor
outsl
popf
insb
sbb
ds
jmp
cli
xchg
jno
lret
sbb
out
fsubrs
cld
sbb
aas
loop
cmp
imul
mov
rep
cli
clc
or
inc
or
xor
jg
mov
sarl
sbb
call
sub
pop
ss
pop
push
dec
xlat
arpl
cmpsb
mov
popf
data16
loopne
dec
test
repz
mov
cltd
jo
cmp
or
sub
push
les
adc
ljmp
push
xchg
shrb
ljmp
int3
rcl
lods
push
out
push
lea
ret
jg
pop
sbb
sub
shl
pusha
pop
xor
push
scas
lcall
sub
out
push
jp
imul
inc
jl
sbb
xor
popf
call
hlt
mov
hlt
in
lods
xchg
or
add
xchg
mov
decl
fnstcw
mov
test
out
cmp
aas
hlt
xor
ljmp
push
insl
das
push
push
imul
push
out
notl
jmp
bound
or
jmp
rorb
pop
out
cltd
inc
mov
insl
push
xchg
xchg
pushl
or
lods
cmp
jno
lret
stos
adc
mov
mov
push
popa
in
lahf
into
cmp
es
enter
jmp
es
pop
mov
push
push
aas
lods
gs
scas
aam
add
push
add
xlat
popf
shr
pop
pop
fistl
rclb
adc
fs
call
std
xor
mov
sbb
fbld
pushf
jg
call
push
or
inc
or
mov
xor
data16
lods
fiadds
pushl
rol
dec
aam
dec
inc
pop
and
or
jo
cmpb
lret
cmp
mov
sub
ret
and
xchg
aam
jl
aam
incl
jno
into
cmpsb
loopne
scas
in
xor
into
add
popa
popa
in
xor
add
jns
jno
outsb
mov
xchg
test
rolb
fs
lock
inc
jl
in
gs
mov
pop
inc
pop
orb
int
push
test
fsubl
mov
mov
incl
inc
adc
adc
outsl
jbe
sbb
inc
aas
sahf
mov
data16
sbb
ljmp
adc
cmpl
stc
popf
lock
jl
push
insl
push
jns
fstl
ljmp
loope
adc
lahf
cmc
cmp
or
jge
mov
mov
mov
push
pushf
outsl
xchg
jp
sarb
fisttpl
jae
mov
mov
std
notb
jbe
lcall
fxch
je
lods
pop
xor
fidivrs
dec
xchg
test
and
mov
mov
out
cwtl
je
sub
dec
jbe
xor
in
xor
popf
stos
fwait
lock
adcl
ja
sub
add
jnp
pop
mov
mov
bound
icebp
movsl
aas
pop
popa
inc
jmp
adc
adc
pop
pop
jmp
and
jno
xor
jg
push
cld
xor
add
lahf
leave
xor
fs
pushf
dec
inc
add
imul
nop
add
dec
pop
cmpb
adc
dec
iret
push
push
ret
insl
ljmp
lcall
add
lret
mov
xchg
test
stc
test
push
dec
movsl
mov
sub
mov
xchg
fisttpl
stos
cltd
int
or
adc
add
pop
lods
insb
std
call
loopne
scas
int
in
daa
dec
jae
mov
xchg
sbb
cmp
mov
fcomip
jmp
subb
or
dec
cmp
push
inc
loop
jg
and
or
in
negl
mov
fwait
test
loopne
add
jg
lock
push
mov
data16
mov
mov
push
test
adc
dec
push
add
push
jb
test
adc
push
cwtl
push
mov
repz
jmp
jg
dec
nop
adcb
stc
xchg
pop
jmp
cmp
ret
or
cmp
adc
std
jg
mov
cmpsb
jne
push
push
imul
mov
cmp
mov
and
and
and
push
cs
lcall
hlt
lcall
outsb
iret
mov
xchg
outsb
pusha
sub
and
add
outsb
mov
jg
inc
jp
pop
fisttpll
inc
mov
es
cmpsb
repz
sub
call
jnp
push
mov
dec
push
aas
jmp
mov
cmc
add
ficompl
add
pushl
add
or
push
add
cmp
xchg
and
mov
arpl
jnp
cmc
and
aam
rorb
pop
or
jns
sti
push
subl
fnstsw
jge
xor
pushl
imul
mov
sub
mov
and
popf
cli
xchg
iret
aad
repz
lcall
pop
inc
cmp
fcoms
cmp
xchg
xor
scas
xor
addr16
repz
sub
incl
lods
xlat
loope
loopne
push
cmp
or
sub
push
fwait
das
incl
lock
adc
xchg
adc
push
dec
mov
push
jo
enter
cmp
inc
pop
pusha
outsb
fcomi
jb
sub
hlt
mov
and
incl
cli
mov
lods
xchg
mov
lds
cmpsb
mov
dec
out
cmc
inc
sub
rorb
jle
mov
mov
push
jb
rorb
aam
jl
pop
jno
fsts
ret
and
jno
xchg
fistpll
mov
push
fisubl
xor
dec
and
push
gs
mov
cld
fsubrl
pop
ljmp
dec
clc
push
fcom
jmp
gs
cmc
sbb
filds
push
mov
ds
mov
mov
call
mov
nop
xor
mov
and
pop
cmpsl
xlat
adc
push
push
inc
jg
test
xchg
cmpsb
aam
jmp
es
dec
xchg
xchg
das
out
fucom
pop
adc
pop
cltd
cmc
nop
scas
fildll
scas
mov
testl
sahf
fcoml
jl
xchg
leave
or
jae
data16
out
adc
out
call
dec
xlat
mov
and
test
lret
or
mov
imulb
into
push
cld
xor
jmp
lcall
iret
jl
iret
push
lret
and
inc
jmp
sub
inc
inc
cmpsb
cmp
lret
xchg
ljmp
and
fimull
mov
mov
cmp
xlat
fstl
mov
xor
or
cmp
lcall
lret
fbstp
test
ds
jp
inc
add
mov
mov
mov
and
lcall
or
pop
cmc
jg
dec
mov
insb
pop
test
lds
shrd
jl
test
nop
psubb
dec
gs
jae
adc
xchg
adcl
xchg
jmp
mov
jecxz
add
lds
sbb
lds
test
push
xchg
xchg
icebp
add
arpl
ljmp
mov
mov
inc
rolb
or
push
mov
mov
jge
in
mov
pushf
fidivrl
pop
xchg
xchg
outsl
mov
ljmp
xlat
xor
mov
cmp
js
add
decl
cltd
and
shll
std
and
pop
nop
ror
push
mov
sbb
mov
call
ja
dec
jmp
lods
cld
repz
mov
test
sahf
adc
inc
dec
jecxz
add
xchg
pop
push
decl
test
cltd
cmp
loopne
mov
jo
insl
add
ret
pop
lock
out
in
pop
ror
addl
sub
loop
xor
int3
out
xchg
and
mov
adc
mov
add
mov
jg
jo
push
dec
mov
inc
aam
loope
dec
andb
jg
inc
pushl
push
rol
xchg
adc
xchg
and
stos
xor
imul
arpl
call
mov
cmpxchg
ffree
jmp
or
pop
leave
fwait
loopne
out
mov
mov
ljmp
dec
cmp
mov
push
jno
mov
loope
decl
inc
push
in
stos
inc
filds
pop
jle
fnstsw
or
mov
sub
pop
lods
inc
mov
sub
cmpsb
nop
dec
or
and
loopne
mov
fcomip
inc
nop
mov
or
lods
jae
xchg
popf
push
mov
jno
fnstsw
pushl
pop
sub
les
sarb
hlt
insl
shlb
and
jae
push
sub
in
loop
pusha
push
cmp
lcall
sti
fidivrs
fwait
in
mov
icebp
mov
xchg
adc
fistl
incl
aam
dec
sti
test
std
jp
sbb
mov
lahf
insl
mov
mov
jbe
stc
xlat
hlt
inc
push
jmp
push
call
testb
int3
jl
icebp
jnp
sub
dec
sbb
lods
or
das
shlb
mov
cmpsl
test
pushf
jle
cwtl
lret
jb
mov
inc
sbb
push
jecxz
pop
lea
push
cmp
in
aaa
mov
lds
cld
hlt
pushl
xchg
stc
lods
scas
shll
and
fists
adc
out
cli
fisttps
mov
jno
out
faddl
add
mov
jmp
cmpsb
xlat
sar
in
imul
push
mov
dec
mov
xor
push
loope
pushf
sbb
push
arpl
pop
stos
mov
dec
jg
repz
jle
aas
mov
jg
mov
call
dec
popa
rol
jae
orl
loope
mov
gs
or
jb
call
aas
in
sub
or
out
jbe
add
or
cmp
mov
sub
movsl
push
and
pop
push
mov
lret
mov
push
or
cmc
sub
pop
dec
lods
leave
lret
les
push
adc
sbb
call
test
pop
ja
push
sub
in
mov
push
pop
aad
adc
fdivrs
sarl
sti
enter
sbb
mov
add
subb
push
imul
pop
imul
or
xor
roll
push
pop
mov
ljmp
les
pop
push
add
into
shl
push
push
and
loope
ror
mov
insl
pop
pushl
jno
dec
push
insl
stos
jecxz
jae
movsb
xor
sbb
out
or
ljmp
insb
inc
and
xor
ret
andb
pop
int
ljmp
call
inc
psrad
mov
test
sti
pop
add
xor
jle
xchg
enter
xchg
mov
dec
dec
push
cwtl
movsb
ret
shlb
mov
push
or
add
or
xor
popa
sub
jl
jnp
repz
call
and
dec
ret
popa
lock
insl
adc
into
mov
cli
std
ljmp
int3
cmp
jne
stos
sub
cmp
jae
adc
in
clc
in
push
push
pop
lock
movsl
adc
pop
loop
xchg
pusha
jmp
mov
das
jno
call
in
sbb
dec
je
push
in
repnz
inc
ss
jle
lods
mov
xchg
pushl
cmp
add
pop
push
or
mov
add
xor
decl
push
jp
fwait
mov
setnp
sbb
inc
outsb
xor
call
jl
jmp
mov
scas
mov
jecxz
pushf
les
inc
or
or
setno
decl
inc
add
sbb
mov
push
cmp
xchg
xor
inc
gs
jg
xchg
movsl
xorl
add
incl
bound
mov
das
dec
call
push
aas
mov
sbb
push
pop
lret
popf
leave
add
lcall
jbe
pushf
std
jp
jmp
adc
shlb
sbbb
shrb
dec
outsb
test
incl
loope
in
pop
mov
mov
xchg
cltd
sahf
inc
enter
test
jg
filds
dec
into
aas
leave
add
or
shlb
cli
pusha
lds
push
mov
sbb
ljmp
out
addl
xor
inc
cmpl
mov
inc
aas
push
scas
mov
dec
jae
shlb
xchg
sub
push
push
lahf
int
mov
gs
mov
jmp
sub
stos
mov
xor
adc
mov
dec
loop
xchg
inc
in
pop
decl
ret
push
iret
mov
mov
or
jge
adc
scas
and
dec
insb
jecxz
pushl
in
loop
inc
rol
xor
push
cmp
idivl
and
inc
les
jmp
pop
sbb
xchg
fwait
addr16
mov
shrl
mov
clc
mov
mov
iret
aam
pushf
lcall
inc
aam
dec
lret
sub
jbe
enter
cmp
enter
sbb
mov
cmc
dec
push
cmp
mov
out
hlt
sbb
xchg
enter
ud0
jmp
insb
add
stos
repz
adc
iret
mov
pop
lcall
dec
test
lcall
sub
xchg
push
fstpl
bound
inc
pop
icebp
shl
inc
and
ds
fcomi
and
cld
pushl
repnz
inc
int
mov
inc
filds
xchg
insl
and
push
adc
call
loope
adc
mov
ljmp
repz
jo
pop
lds
aam
pop
mov
outsl
imul
mov
into
dec
jecxz
std
inc
push
pop
aad
jg
decl
lods
outsb
sbb
sti
aam
mov
std
lcall
xchg
bound
lcall
popf
pusha
imul
fdiv
incl
mov
popa
out
into
jp
or
in
bound
movsl
and
jmp
or
outsb
addr16
incl
stc
xchg
adc
cltd
shlb
addb
inc
imul
mov
std
dec
jmp
cwtl
pop
add
cs
cmp
rorb
aas
adc
call
out
jo
negl
dec
aad
repnz
in
test
out
pop
sbbl
jmp
dec
fisttps
outsb
pop
dec
xchg
ss
xor
mov
push
aas
mov
sub
pushl
pop
aam
xor
mov
popf
push
sub
test
pop
cmp
dec
mov
sub
xchg
outsb
ss
aad
or
out
jmp
hlt
push
jmp
adc
mov
sbb
xor
mov
ljmp
jns
mov
push
sub
iret
lcall
adc
sbb
jmp
or
ret
push
stos
es
mov
insb
pop
mov
addr16
cs
fidivs
das
sbb
mov
orl
add
mov
xchg
lcall
adc
jle
cli
hlt
fmull
stc
mov
jmp
mov
add
push
lahf
mov
jg
jae
inc
cltd
repnz
sbb
jnp
sub
pushl
mov
mov
add
fxch
xchg
xor
push
arpl
dec
call
push
addr16
fs
js
icebp
icebp
jle
fdivrs
and
pop
mov
lock
push
sbb
call
sahf
dec
sbb
inc
dec
mov
test
dec
xchg
pop
cmp
xchg
pushf
mov
mov
add
leave
mov
and
xor
cmp
loop
mov
iret
psubsb
cmp
mov
push
imul
mov
test
mov
aas
push
cmp
dec
mov
cwtl
rcrb
insb
shll
outsl
and
imul
inc
dec
ja
int
ret
clc
fbstp
sub
and
dec
jle
sbb
ja
lcall
int3
mov
fistps
mov
cli
or
adc
jmp
sub
out
dec
fdivrl
xchg
repz
out
sub
jp
call
sbbl
mov
aaa
jl
lret
dec
imul
lcall
ret
or
jl
in
out
pop
and
stos
insb
in
lret
push
mov
mov
inc
andb
jns
adc
xorps
jmp
jno
mov
sti
sub
imul
decl
xchg
psadbw
xchg
mov
in
jb
stos
jmp
mov
jae
or
mov
xor
in
jl
lods
cmc
ret
mov
mov
xor
mov
push
out
sub
es
mov
scas
loope
andl
mov
xor
jne
pushf
and
mov
pop
adc
mov
ja
jmp
cmp
lea
out
cmpsb
cmpsb
add
cmpsb
pop
mov
inc
jge
addr16
in
sbb
andl
fildl
icebp
sbb
into
add
outsl
sub
sti
sar
decl
scas
xor
or
sub
sbbb
and
bound
mov
dec
ljmp
call
and
inc
mov
in
cmp
int
push
fmul
jo
fcmovnb
incl
mov
shr
pop
and
in
lds
pop
mov
adc
add
loopne
mov
and
ficomps
inc
rolb
sub
adc
cmp
ljmp
aaa
lret
popl
sbb
sub
xor
jnp
xchg
pop
mov
dec
inc
fcoms
arpl
int3
icebp
xlat
mov
nop
aaa
stc
lcall
incl
push
add
sub
cmp
cltd
add
xchg
pop
xchg
jg
in
out
cmp
into
mov
les
push
mov
imul
sarb
or
push
in
sub
or
sarl
popa
fwait
cmp
lret
or
pop
inc
inc
aas
mov
out
and
pop
mov
jmp
fstpl
insl
stos
push
pop
hlt
in
cs
ljmp
pushf
mov
sysexit
out
test
dec
xchg
mov
mov
jmp
adc
test
or
pop
cmpsb
loope
cld
mov
sub
or
cli
xor
mov
enter
jp
dec
cmp
clc
fisttps
cmpsb
xchg
push
imul
adc
ljmp
jb
mov
push
test
pop
mov
pop
or
int
xchg
ljmp
mov
mov
xchg
loope
add
mov
add
push
mov
or
mov
mov
push
jecxz
test
movsb
pusha
fisubs
inc
incl
jge
cmp
mov
jb
mov
pop
mov
inc
or
lock
decl
nop
dec
sbb
mov
divb
adc
pop
push
mov
inc
scas
pop
dec
mov
sar
rcl
scas
mov
nop
xor
pop
xchg
cmp
clc
call
push
push
dec
mov
insb
test
mov
xchg
out
mov
popf
arpl
out
and
add
ror
mov
mov
stos
ljmp
or
mov
mov
fisttps
pop
sbb
inc
pushf
imul
jle
xchg
xchg
push
aad
addl
bound
pop
ljmp
cltd
les
out
push
jo
mov
and
shlb
cmp
shl
add
fs
mov
in
cld
ljmp
cmovbe
dec
mov
pop
pop
fwait
jle
stc
xlat
stc
lahf
and
xor
fisttps
lret
inc
loop
pop
out
xor
adc
cmp
adc
fisttpl
jmp
jae
int3
aas
xchg
pop
pop
cmp
adc
dec
add
and
dec
dec
adc
call
pop
dec
pop
mov
dec
shll
pop
lds
scas
rcrb
fisttps
inc
mov
inc
and
hlt
fisttpl
adc
sub
xor
scas
jge
push
movsb
fists
xor
add
das
mov
jmp
pop
lods
in
fwait
mov
lock
clc
rcll
je
cmpsb
add
or
adc
sti
inc
lock
iret
xor
dec
mov
adc
add
push
lret
push
negb
pushf
shlb
pushl
xchg
push
jnp
mov
add
dec
iret
dec
in
nop
je
pop
stc
movsl
dec
ret
jno
fdivr
outsl
lcall
ds
cmpsl
sbb
mov
rcrl
inc
dec
mov
and
cmp
pop
shll
addb
mov
loopne
test
stos
es
sbb
dec
ds
cmp
orb
out
testb
jge
inc
cmp
fnsave
pop
jns
cmp
inc
adc
lcall
mov
xor
not
decl
inc
xchg
jnp
dec
int3
shll
cmpb
mov
test
pop
cld
sti
mov
popa
cld
mov
loop
fmul
mov
call
pushl
push
daa
sub
add
or
subb
fcoms
js
jl
sub
jmp
xchg
sbb
and
sub
popa
mov
mov
jecxz
decl
loope
sub
mov
mov
push
mov
cmpsl
jg
into
mov
or
ljmp
lea
in
pop
xchg
pushf
dec
push
fisubl
cmp
stos
call
jge
les
imul
jle
testb
lcall
dec
mov
dec
outsl
push
es
fmulp
in
jge
push
cmpsb
fnstenv
rcll
ret
decl
scas
adc
jb
add
leave
push
jge
test
xchg
mov
cmp
and
incl
xchg
pop
fimuls
and
push
fdivrl
test
jge
rorb
xlat
adc
jmp
stos
adc
mov
xchg
jo
dec
ljmp
out
xchg
adc
mov
mov
dec
sub
mov
cmp
or
ret
cmp
hlt
sbb
hlt
and
lcall
xor
pusha
sti
dec
sub
add
int
inc
lock
out
mov
jae
push
sbb
decl
pop
jg
cmp
jle
ljmp
and
mov
decl
popa
push
cs
sub
test
enter
arpl
ret
jmp
les
inc
push
lods
sub
loope
fistl
pop
and
stos
mov
inc
mov
decl
in
enter
sbb
fucomip
jge
dec
ljmp
or
ret
lcall
fisubl
fwait
iret
stos
push
push
test
in
fnstcw
mov
inc
dec
or
repnz
lcall
cli
jno
mov
jmp
testl
test
test
sbb
push
test
mov
or
add
inc
mov
cmp
loop
mov
incl
das
adc
cmpsb
imul
dec
sahf
sub
mov
xor
addr16
cld
jnp
sti
jb
call
xchg
dec
mov
mov
jnp
and
cld
pop
cwtl
cmp
mov
dec
lret
rolb
cmovge
pop
mov
dec
jmp
sbb
mov
ljmp
daa
dec
jns
insb
jmp
decb
cmp
test
icebp
std
frstor
fstps
xchg
decl
dec
jb
clc
outsb
dec
outsb
int
insl
aam
inc
in
dec
lahf
aaa
mov
cmp
mov
jmp
push
mov
scas
mov
jp
scas
insb
mov
jno
leave
mov
leave
xchg
or
push
movsl
add
pop
call
adc
inc
push
repnz
mov
scas
inc
test
or
je
mov
mov
xchg
rolb
int3
push
outsl
shlb
std
es
jle
push
mov
xchg
cmp
fwait
cld
inc
adc
stc
dec
shlb
lods
bound
pop
int
pushl
mov
data16
sbb
imul
scas
adcl
stos
test
out
inc
cwtl
jnp
std
int3
pop
aam
sbb
repnz
add
decl
and
in
jecxz
mov
mov
mov
push
xor
sbb
lods
xchg
cmp
jle
push
push
inc
mov
mov
shrb
or
cmp
roll
subb
mov
aad
pusha
push
fldlg2
shll
dec
imul
call
cmp
aas
mov
sub
jbe
cltd
xlat
push
cld
xor
cmp
sti
pop
enter
std
jp
jnp
or
test
inc
cmc
jne
frstor
pop
out
mov
mov
pop
lock
nop
mov
sbb
test
push
pop
xor
xlat
xchg
call
or
mov
inc
ret
ljmp
add
mov
call
js
or
rcll
iret
insl
mov
leave
push
movsb
inc
imul
stc
in
jnp
lods
fbstp
mov
mov
jb
popf
jns
pop
insb
dec
cltd
add
pop
add
pusha
push
jg
call
icebp
and
xor
pop
push
icebp
popf
cld
xchg
popa
add
into
xchg
jge
lcall
loop
sub
mov
add
jecxz
jns
out
sub
push
sbb
inc
hlt
sahf
lods
adc
inc
les
xchg
clc
inc
pushf
cltd
dec
adc
iret
mov
cltd
ret
jecxz
or
push
xchg
push
pushf
xchg
call
nop
xchg
ret
test
inc
jl
mov
lds
or
daa
mov
incl
inc
lahf
movsl
scas
adc
push
rol
aaa
std
inc
repnz
hlt
loope
xor
cmp
inc
lds
adc
xchg
mov
jg
xor
jo
bound
fnsetpm(287
or
sbb
mov
sbb
cmp
adc
xchg
decl
mov
repnz
pop
sar
incl
je
or
mov
out
fidivs
push
jg
cld
and
lods
dec
out
and
mov
jb
push
out
cltd
mov
repnz
pop
adc
ljmp
and
mov
into
push
cmpsw
push
ja
das
test
pop
dec
jge
push
outsl
mov
sbbb
js
xchg
sbb
jns
test
sub
mov
dec
or
fsub
call
insl
pusha
in
pop
pusha
lods
pop
pusha
push
adc
push
jge
ja
mov
in
adc
imul
cli
pop
jl
adcb
mov
mov
mov
xchg
orb
lods
decl
fldenv
ficoml
sbb
jbe
push
arpl
and
inc
hlt
pop
clc
xchg
jg
lcall
flds
jns
or
mov
cmpsl
repnz
je
pop
dec
or
and
ljmp
sbb
xlat
or
and
add
sti
push
mov
lods
lock
push
push
xchg
icebp
jge
push
adc
pop
mov
imul
cmp
inc
stos
push
repz
add
mov
gs
ljmp
cs
inc
lods
pop
mov
into
icebp
nop
xor
jno
adc
mov
test
ljmp
mov
dec
outsl
mov
aam
adc
jo
add
sbb
or
dec
pushl
bound
shl
inc
add
scas
call
mov
push
xchg
stc
jge
inc
repnz
std
xor
cmpsl
imul
push
in
cmp
pop
in
popa
mov
mov
mov
jg
aas
lcall
gs
mov
shll
adc
data16
pushl
sub
inc
push
cmp
mov
inc
pusha
outsb
mov
iret
xor
orb
inc
xor
ljmp
loop
mov
mul
je
sbb
out
rorl
xor
or
stc
pop
and
adc
cmp
mov
leave
mov
jno
repz
jmp
fnstsw
mov
jno
mov
cs
cmc
call
pusha
loopne
mov
jge
sub
sbb
ds
fdivs
cmc
ljmp
jp
in
xchg
jp
mov
aas
inc
xchg
jl
jle,pn
fistpll
addb
xchg
mov
xor
outsl
cli
mov
sub
ret
cltd
popf
mov
incl
addb
gs
aad
lcall
add
cmp
imul
xchg
jg
mov
jmp
das
sbb
mov
fs
imul
rol
sub
ds
jmp
ja
or
or
in
add
or
test
pop
insl
cmp
sbb
ljmp
aaa
out
xchg
lds
pop
mov
gs
pop
fwait
dec
dec
jns
incl
mov
stc
adc
dec
fisubl
shl
mov
inc
cmp
inc
lds
sti
xor
iret
sub
shrl
repnz
jp
jb
pop
shrb
add
int
addr16
decl
cli
scas
cmp
mov
jmp
dec
subl
and
jae
dec
sub
scas
fwait
int3
push
icebp
adc
pusha
cmpsb
in
into
pop
incl
jmp
and
mov
lods
rclb
scas
cmpsl
je
into
add
mov
pop
cmpsb
adc
mov
jg
decl
fs
add
sub
ljmp
ds
sbb
adc
lcall
push
mov
jns
inc
or
xchg
mov
idivl
sti
hlt
out
call
outsb
pop
xlat
mov
int
loope
repz
stc
push
fsubl
xchg
cltd
or
or
jmp
jae
or
bsr
in
repnz
push
push
fbstp
insb
push
pop
push
add
or
or
cmp
inc
add
sbb
in
mov
jmp
enter
inc
sarb
dec
outsb
cld
mov
xchg
xor
jbe
mov
insl
or
sbb
int
mov
iret
shrl
push
mov
adc
icebp
mov
fucom
stos
scas
fdiv
data16
push
mov
jp
and
sbb
lock
mov
les
add
xchg
cmp
mov
popa
lods
int3
das
sub
pop
mov
push
or
cmpsb
mov
add
pop
pop
cmp
sub
js
jmp
inc
pop
in
xor
cmp
incl
sbbb
ret
pushf
and
or
sub
xchg
sbb
and
incl
mov
bound
adc
lret
mov
sti
xchg
mov
daa
insb
mov
dec
dec
jmp
jno
shll
sbb
sbbl
inc
mov
mov
call
lret
adc
sbbl
push
loopne
jo
pop
ljmp
mov
push
mov
incl
add
pop
cmp
fcoml
shll
pop
xor
mov
push
mov
movsl
icebp
fcoms
inc
push
rcrl
int3
loope
push
fdivr
jge,pn
sub
cmpps
add
jmp
inc
mov
mov
xor
pop
lcall
stc
or
sahf
loopne
dec
mov
or
stc
aam
fnstcw
xchg
out
cld
into
push
xchg
cltd
mov
lahf
inc
outsb
incl
add
ss
push
std
cmp
add
scas
jmp
inc
call
addr16
xor
popa
fbstp
es
inc
in
cli
ljmp
sar
cld
jge
push
pop
lcall
push
push
add
sub
fwait
pushl
in
out
aam
and
jp
mov
xchg
cmp
hlt
ja
inc
aaa
aaa
jge
mov
ss
in
xchg
sub
xchg
in
push
ja
test
aaa
xor
dec
outsb
enter
mov
pop
pushl
add
inc
test
adc
movsl
outsb
sub
jmp
mov
pushl
aas
inc
sbb
lock
cld
mov
mov
sub
mov
clc
out
cmp
shlb
jle
xor
dec
in
and
idiv
pop
jne
adc
arpl
test
mov
jmp
mov
hlt
insl
daa
xchg
dec
mov
push
jg
dec
aaa
test
cmp
rolb
test
insl
ljmp
mov
mov
dec
mov
and
sub
nop
inc
stos
repnz
push
stc
lods
and
adc
dec
es
incl
aad
mov
jo
xchg
rorl
call
imul
sti
pop
shlb
in
push
test
cmpsb
cwtl
xor
inc
outsb
mov
out
add
aam
outsb
adc
shlb
in
mov
mov
sbb
clc
push
out
cli
clc
shll
sbb
xor
push
cmp
mov
jmp
andl
loope
fcomp
test
stos
add
test
es
aad
in
adc
push
rcll
lea
mov
mov
push
test
adc
outsb
xor
xchg
outsb
sub
jp
call
add
loope
popf
ficomps
rcrb
lcall
xlat
cmpb
push
cmp
dec
cltd
jbe
call
cmp
add
cld
pop
insl
inc
fisubl
scas
repnz
dec
ds
sti
inc
sahf
xchg
hlt
xor
loope
decl
adc
lock
iret
push
movsb
testl
fldl
cmp
push
rcll
pop
mov
sarl
sahf
pop
jbe
ret
mov
addr16
ljmp
das
arpl
iret
jle
icebp
jo
push
sub
pusha
fcomps
mov
jg
adc
mov
dec
test
mov
aas
std
scas
mov
cmp
lcall
enter
add
xchg
ja
shlb
rclb
popa
nop
mov
pusha
cli
jmp
dec
dec
icebp
outsl
imul
dec
mov
out
fsubl
bound
sahf
movsl
cmpsl
jmp
xchg
jl
jo
stos
call
adc
incl
mov
jmp
xor
mov
gs
pop
adc
outsl
clc
jmp
push
pop
dec
lds
mov
pop
jo
mov
fbstp
js
push
leave
xchg
lcall
push
aaa
fisttpll
xor
inc
adc
mov
mov
and
ds
push
pushf
je
lahf
fistps
xchg
je
mov
adc
pop
scas
shll
in
xchg
decl
clc
insl
fdivl
mov
cs
fcomps
jnp
icebp
sub
dec
xor
je
fs
sbb
fnstsw
neg
lods
popf
mov
cltd
sub
mov
pushl
dec
xorb
xor
mov
inc
mov
cwtl
pop
movb
ljmp
cmp
and
icebp
shll
push
fs
xor
add
mov
cmp
fcoms
push
adc
insl
lods
jbe
cld
pop
mov
sbb
push
mov
or
cmp
xor
push
sbb
jo
call
std
sub
mov
jae
lret
jl
cmpsb
test
jmp
sub
sub
mov
pushl
inc
data16
jp
aad
xchg
shr
sti
in
cmp
xchg
mov
mov
fucomip
movsb
adc
nop
fstpt
pop
cmp
cmc
sbb
idivb
xor
xor
cmp
inc
dec
or
sbb
fcmovnb
sub
loop
divl
xchg
mov
mov
lahf
call
pop
cltd
stc
in
mov
mov
rcr
loop
dec
sbb
jg
dec
or
adc
sti
insb
pop
repz
and
add
add
cs
ret
add
pop
ret
adc
jns
cwtl
pop
pusha
mov
inc
pop
neg
push
pop
and
pop
shrl
dec
dec
shr
adc
ds
incl
inc
imul
les
popf
pop
cwtl
insl
lods
test
ret
fcoms
xor
jg
stos
loopne
lcall
mov
imul
sub
ret
cmpsl
lret
iret
popa
cmp
lods
je
xchg
hlt
imulb
mov
sbb
into
call
stc
add
call
imul
mov
arpl
outsl
ljmp
push
jg
inc
dec
subb
mov
out
dec
inc
iret
iret
push
mov
dec
insb
sar
pushl
sti
cmp
sbb
and
mov
lcall
inc
mov
xor
mov
adc
loope
push
mov
dec
inc
scas
jecxz
jp
repnz
sub
popf
push
std
pushl
ds
push
mov
pop
pop
rorb
scas
mov
pushl
mov
scas
mov
scas
jbe
jmp
aad
dec
movsl
pop
lds
jg
sub
ret
inc
cmp
ja
shll
mov
mov
cld
lcall
imul
inc
or
xchg
aam
mov
pop
xchg
mov
lahf
incl
inc
aam
push
cld
call
outsb
loope
leave
push
lret
aaa
xor
lahf
les
mov
dec
pop
inc
push
inc
inc
dec
cmp
gs
shlb
mov
pushl
dec
pop
test
sti
stc
cmpsl
pop
push
call
add
fldcw
push
xchg
jo
loopne
lcall
xchg
dec
xchg
dec
xor
je
push
cmp
imul
inc
and
cwtl
push
cmpsl
and
frstor
stc
pop
mov
sub
shl
clc
or
xchg
inc
ficompl
lret
xor
xor
cmp
test
cmp
inc
lods
inc
push
mov
cmp
stos
test
and
mov
mov
cmp
mov
mov
xchg
test
push
push
mov
iret
mov
mov
out
mov
cmpsb
fildll
pop
jnp
and
mov
sbb
call
pop
mov
xchg
push
inc
andb
add
add
rol
lret
pop
das
push
and
sbb
sti
inc
pop
jecxz
ficoms
mov
or
jle
loopne
out
xchg
test
xchg
mov
mov
pop
xor
int
sub
decl
mov
lods
ret
loop
sbb
mov
arpl
or
xchg
stos
lcall
inc
movsb
jbe
jge
push
sti
movsl
int
call
push
fnsave
lcall
add
rorb
mov
mov
jmp
push
lahf
scas
push
insl
nop
mov
cltd
dec
out
movsl
cmc
cmpsl
loop
mov
das
shlb
lcall
lcall
lcall
cmp
cmp
cmpsb
cmp
jle
pop
dec
aaa
mov
lods
push
cld
ljmp
sub
fists
mov
xchg
ljmp
and
pop
out
jle
cli
clc
mov
mull
ja
mov
push
repz
incl
xor
push
fidivs
mov
mov
std
xor
push
lcall
pusha
test
xor
cld
fcompl
xor
add
in
dec
mov
push
push
lods
mov
incl
fs
scas
or
cltd
aad
mov
lret
lea
adc
fnstenv
ss
cmp
inc
mov
mov
popa
jb
and
sub
push
lea
je
fnsave
pop
loopne
pop
rorb
mov
pushf
jbe
jmp
fisttpl
push
dec
neg
rcrl
and
enter
fidivl
mov
bound
ja
repz
aaa
sahf
out
jmp
fcomps
jp
dec
sti
xchg
jo
ljmp
dec
xchg
lret
fstpt
xorl
into
arpl
push
fsubs
mov
sub
fbld
popa
inc
xchg
jnp
pop
xchg
mov
mov
adc
xor
xchg
jno
icebp
lret
cmp
inc
call
pushf
push
jnp
mov
lret
ja
rep
lahf
lret
adc
dec
mov
decl
cs
sarl
jno
pop
mov
clc
mov
jae
ss
std
fbld
into
xor
and
and
incl
mov
mov
sbb
dec
test
mov
push
sbb
cltd
push
cmp
mov
sbb
ss
ljmp
push
ljmp
mov
aad
ret
jmp
stos
xchg
test
repz
iret
daa
ret
mov
ja
jns
pop
imul
xlat
ja
cmpsb
aad
xor
jecxz
adc
adc
mov
fidivl
outsl
rorb
jmp
jo
mov
dec
addr16
sub
ljmp
out
divb
inc
cld
loop
idivl
adc
idivb
pop
cltd
mov
xor
or
insb
popa
loopne
imul
push
jne
xchg
jg
insl
pop
mov
in
mov
inc
test
push
es
push
add
dec
push
dec
jmp
jg
je
jae
popa
inc
push
xchg
stos
shlb
mul
loopne
das
int3
int3
test
mov
and
outsb
cld
out
std
jmp
xor
sbb
mov
in
hlt
push
push
ds
or
xchg
ljmp
jle
jno
sub
lods
mov
cmpsl
ret
fdivrs
ror
xchg
fidivl
push
cld
jmp
sbb
jle
jge
pop
pushf
xor
fwait
mov
sahf
or
adc
jle
ljmp
sbb
sub
dec
int3
mov
lods
pop
jge
jg
sbb
adc
call
rol
inc
test
xchg
and
cmpsb
sbb
shrb
in
jnp
cmc
call
xlat
lods
int3
std
push
and
jnp
dec
adc
decl
data16
adc
jnp
or
or
insb
subl
loope
cmp
out
in
pop
aad
push
test
lret
iret
dec
call
mov
out
ja
dec
cmc
test
addr16
pushl
sbb
or
in
mov
inc
cmp
bound
pop
push
icebp
push
mov
std
int
les
aad
mov
loop
pushf
call
std
jns
jmp
cmp
in
js
pop
mov
mov
jmp
inc
cmpsl
outsb
shl
push
aam
inc
jg
pusha
sub
mov
ds
shll
std
inc
jae,pn
xchg
inc
fstpt
mov
out
mov
in
jns
mov
cld
jmp
enter
jb
mov
sbb
imul
fstpt
call
jo
ss
or
outsb
dec
mov
pop
jnp
incl
sub
add
repz
scas
aas
fiadds
mov
adc
in
fisttpll
in
cmp
adc
jo
or
int
test
idivl
dec
fnstenv
mov
xor
cmc
insb
sub
mov
push
inc
es
les
mov
adc
xchg
jl
mov
adc
jl
pop
mov
adc
ror
and
in
adc
int3
or
push
fsubrl
sti
int3
in
xchg
sbb
hlt
inc
or
mov
pop
xchg
sbb
push
inc
mov
xchg
jno
imul
daa
jbe
rcll
incl
and
repnz
and
fmulp
data16
clc
shrb
xor
lret
imul
mov
sar
cmp
inc
lahf
test
cmp
dec
jno
imul
adcl
std
pop
pop
decl
cmpsl
fs
dec
and
mov
add
sbb
sbb
cmpsl
nop
jl
pop
or
pop
outsb
jge
mov
mov
mov
loop
or
or
shll
dec
sbb
into
leave
pop
cmpsl
push
dec
jl
push
jp
insl
aaa
fs
xchg
mov
or
push
dec
mov
jae
jge
mov
out
lret
adc
dec
mov
lds
dec
ss
fcmove
jbe
cmp
xor
mov
lcall
loop
fisubl
mov
mov
daa
mov
sub
mov
lcall
imulb
jecxz
sub
mov
pushf
adc
ja
adc
or
call
inc
clc
xchg
xchg
pop
xor
sti
and
push
cltd
jno
and
cld
sbb
mov
jmp
jmp
sbb
lahf
stc
popf
pop
or
arpl
mov
inc
leave
mov
clc
lahf
fcoms
push
cld
jno
orl
lahf
call
jnp
xchg
into
push
mov
mov
pop
fbstp
iret
pop
xor
mov
call
shll
aas
add
push
xchg
mov
jno
push
mov
mov
orl
pop
stos
out
inc
xchg
pop
jg
loope,pn
push
and
sub
mov
dec
in
sbb
lock
xchg
push
xor
xchg
jl
jle
mov
call
pop
lahf
mov
or
dec
jge
or
ret
add
test
push
enter
clc
adc
das
sahf
dec
ror
pop
adc
sbb
xchg
pop
pop
in
aam
jmp
jg
stos
or
repnz
push
mov
lods
dec
adc
inc
fcomps
cmc
dec
inc
mov
inc
lcall
and
or
mov
mov
jb
out
adc
xor
incl
imul
and
pusha
adc
loope
jno
pop
push
arpl
dec
pop
hlt
out
xchg
sbb
mov
dec
cmp
addr16
shlb
pop
js
dec
add
and
int3
movsb
movsb
dec
mov
aad
je
incl
push
cmp
cmp
jecxz
xor
pushl
inc
mov
rolb
sub
les
adc
mov
outsl
mov
out
rcrl
pop
andb
pop
pop
ss
imul
xor
filds
inc
xor
ror
xchg
xchg
adc
movsl
iret
ss
adc
decl
sub
stos
jge
outsb
sbb
pop
xchg
xor
jb
lock
and
lcall
les
pop
jo
aam
repz
mov
mov
cmp
xlat
xorb
xor
ds
popa
mov
fst
and
xchg
mov
fsts
jnp
jg
lcall
inc
fstpl
jo
mov
cmpsl
loopne
mov
cmpsb
ljmp
dec
push
aaa
mov
xchg
adc
mov
popf
mov
dec
mov
orb
sbb
mov
pushl
insb
mov
ds
popa
int
cmpsl
push
xor
pop
push
icebp
add
insb
mov
decl
pop
std
sbb
xchg
push
lods
in
out
and
cltd
ss
adc
das
incb
aam
sbb
jmp
cmp
or
and
inc
pop
adc
fs
gs
push
add
pushl
sub
mov
movsl
daa
shld
scas
lods
ret
jns
lea
mov
pusha
shl
sarb
push
in
adc
fistps
out
xchg
push
sbb
add
sbb
sahf
adc
mov
decl
jl
pop
xor
es
pop
ds
sahf
rolb
inc
lcall
lret
dec
aas
inc
sti
mov
leave
ficompl
stc
or
bnd
xor
clc
call
fcom
fiadds
in
in
mov
bound
stos
cs
and
sbb
lcall
cmp
movsb
jo
cmp
mov
push
push
or
or
lcall
imul
loopne
nop
mov
jg
hlt
mov
scas
testb
xchg
mov
cmp
adc
mov
add
std
les
in
lcall
xor
push
cmp
xchg
sub
mov
test
jle
outsl
mov
outsl
clc
mov
mov
lods
mov
mov
inc
ffree
pushl
cli
lcall
add
dec
rcrb
ss
mov
popf
and
pushf
ss
movsl
xchg
jg
orb
push
ja
dec
dec
cmp
sbb
gs
int3
in
call
mov
adc
lods
imul
jmp
adc
mov
incl
sub
out
call
popf
lcall
sub
mov
sub
push
mov
sti
fisttpl
xchg
cs
repnz
dec
js
jle
dec
and
pop
pop
in
call
in
inc
out
jecxz
out
xchg
les
in
or
jo
jbe
lods
pop
adc
sub
inc
fsubr
mov
scas
dec
push
leave
test
bnd
push
in
sti
mulb
jg
repz
add
decl
and
jge
sub
icebp
outsl
fsubs
inc
aaa
dec
clc
imul
pushl
enter
test
and
mov
lret
fiadds
out
inc
outsb
iret
pop
mov
movsb
ss
cmc
jmp
loope
and
push
dec
jge
pusha
int3
dec
sbb
sarb
mov
pop
stos
outsl
pusha
call
xchg
mov
adc
neg
sub
mov
idivl
fs
mov
jl
cld
arpl
scas
movups
jmp
xchg
outsl
aad
sub
xchg
sbb
inc
test
andl
sub
ljmp
adc
fs
js
jge
enter
or
les
lcall
cmpsb
mov
lds
hlt
out
xchg
notl
and
aas
das
mov
sbb
ljmp
sub
or
pushl
inc
aad
ss
aam
fstpl
idivb
psubusw
lods
push
into
test
push
ljmp
gs
sbb
mov
sbb
xchg
insb
in
cmpsb
loop
gs
jle
and
xor
loope
xchg
mov
push
mov
jecxz
outsb
loope
xor
lcall
call
adc
imul
lahf
ret
ds
jl
dec
xor
inc
pushl
and
xor
and
mov
jmp
cmp
int
mov
jmp
sbb
iret
insl
ja
cwtl
pushf
data16
loopne
daa
and
loop
jmp
loopne
cmpl
nop
pop
xor
adc
push
insl
test
aam
popa
sub
inc
push
add
push
cld
mov
insl
pusha
and
mov
sub
fildl
test
dec
lret
call
jmp
cmc
shl
jmp
mov
aaa
or
push
fistpl
lcall
pop
gs
cmpsb
push
push
jle
xchg
dec
jnp
cmp
bound
daa
xchg
mov
sub
jo
mov
jmp
sar
pop
mov
jno
mov
inc
int3
iret
lds
insl
fists
xchg
sub
mov
lea
addl
aas
push
jecxz
xor
ljmp
push
in
mov
mov
cmp
jnp
pop
lock
in
cmp
ja
jmp
sahf
push
push
out
aad
cmpsb
mov
cmp
add
jmp
lahf
and
and
cmp
dec
out
add
js
cli
mov
lds
xchg
sbb
popa
test
mov
jae
pop
mov
ljmp
lds
in
fimull
rol
xchg
repnz
xor
ror
adc
pushl
push
xor
pusha
push
imul
sbb
xchg
jle
cmpsb
and
jmp
ljmp
rcrb
xor
icebp
xchg
scas
fdiv
jo
mov
outsb
or
scas
rorl
xor
push
dec
push
adc
fdivs
xchg
fwait
stc
fisttpll
fldenv
jmp
and
dec
push
mov
enter
adc
nop
mov
cld
pop
mov
jmp
inc
jne
imul
pop
cmpsb
cs
jmp
addr16
inc
lcall
js
xchg
and
scas
push
dec
stos
mov
pop
in
lcall
or
fiadds
mov
sub
xchg
mov
lods
sbb
sub
outsl
jle
cmp
movsb
test
ret
mov
ds
repz
cmp
lods
jecxz
out
mov
incl
sub
inc
pop
push
int3
jge
cld
test
clc
je
jmp
lock
fnsave
in
jecxz
pop
rcr
jg
lret
daa
les
or
ja
sahf
nop
sbb
lret
lret
mov
fsubs
in
out
mov
negb
ficoms
mov
loope
mov
adc
lcall
cmp
popf
std
ret
leave
lods
xor
push
push
or
push
and
fistps
pop
and
call
xchg
cwtl
cli
nop
cmpsb
aaa
sub
mov
dec
js
push
sub
or
inc
pop
xor
cmp
dec
jmp
lret
xchg
rcl
cs
call
in
stos
mov
cmp
ja
int
mov
mov
lret
sbb
call
rol
dec
std
jecxz
adc
dec
or
test
xchg
and
movsl
sbb
clc
sti
xor
add
mov
jg
adc
cld
ss
jnp
incl
jno
les
push
push
cmp
and
mov
push
push
mov
pushf
das
loop
jnp
jnp
cld
jmp
jle
sbb
and
scas
aam
jno
jnp
push
imul
lcall
mul
insl
jp
push
ja
negb
out
push
push
fstl
ret
dec
adc
mov
aam
lcall
cmc
pop
ljmp
int3
out
shll
call
cmp
pushf
xor
sub
inc
das
data16
jl
xor
decl
jmp
incl
mov
dec
in
pop
jmp
cltd
clc
shl
jmp
add
fidivrs
mov
cmpsl
mov
mov
decb
test
pop
int3
lcall
or
jmp
adc
insb
dec
nop
mov
dec
jne
enter
xor
jl
aaa
cmp
jle
push
stos
xchg
xchg
aaa
adc
mov
lcall
dec
or
dec
movsl
pushf
lret
pushf
ret
mov
xchg
add
repnz
imulb
decl
testb
xchg
dec
lods
mov
sar
lcall
leave
shrl
in
push
jbe
pop
mov
mov
mov
loop
call
mov
push
lea
xor
bnd
mov
sbb
jg
lcall
dec
or
scas
mov
cmpsl
cmp
mov
mov
cmpsl
enter
push
test
outsl
xor
mov
rcll
cmpl
ljmp
std
inc
pop
jno
sbb
mov
into
mov
jns
xchg
inc
push
xorl
out
and
fwait
push
ffreep
sbb
inc
aaa
flds
movsb
push
push
or
dec
pushl
decl
pop
pop
mov
dec
inc
mov
mov
push
iret
dec
lcall
or
int3
in
jne
cmp
adc
nop
rcl
test
mov
inc
mov
adc
es
fwait
xor
popa
push
mov
pop
lods
pop
push
xchg
inc
cld
mov
pop
push
pop
repnz
lcall
and
inc
inc
jmp
dec
pop
movsb
hlt
rcrb
jge
inc
mov
ljmp
ja
ror
push
push
mov
std
lods
aas
out
aaa
inc
jb
addl
les
mov
add
js
xchg
stos
pop
stc
aas
aaa
imul
jb
mov
test
test
mov
jae
loopne
data16
pusha
cmpsl
jae
jae
lret
mov
outsb
jbe
jg
xchg
cltd
jbe
je
fisubrs
cmpsb
and
lea
jne
or
adcb
fists
call
stos
xchg
sub
sub
outsl
pop
sub
xchg
mov
xchg
insl
mov
fsubs
cmpsl
lret
xchg
shlb
sbb
pop
xor
insb
fcmovne
jecxz
dec
decl
lods
dec
cli
xchg
imul
dec
push
mov
mov
call
add
and
outsl
scas
jo
xchg
addr16
insl
mov
pop
jle
cli
in
fs
pop
lock
inc
stc
orb
in
int3
add
ja
xchg
dec
out
mov
cmpsb
test
jmp
pop
mov
cmp
sub
sbb
fs
add
mov
dec
add
insl
sbb
es
cmp
out
add
jle
outsb
pop
push
add
and
or
jbe
mov
and
jae
sar
cmc
ljmp
dec
jp
xchg
inc
call
ret
shlb
lcall
pop
cmp
cmp
pop
movsb
jl
mov
addb
push
cmpsl
test
sub
call
inc
adc
adc
add
dec
idivl
movb
mov
and
mov
cmpsb
push
xchg
cmpsb
ret
cmpsb
sti
mov
mov
test
mov
inc
ljmp
push
fs
ljmp
aad
cld
in
fadds
mov
jge
out
and
ss
xor
mov
pop
clc
add
or
jmp
sbb
xchg
sahf
outsl
xlat
lock
sarl
mov
lret
cmpsl
add
loop
and
pop
mov
incl
call
mov
dec
jge,pt
add
out
mov
jg
jmp
sahf
jmp
dec
xor
jle
sub
shld
push
mov
dec
push
ljmp
subb
cltd
stos
stc
xchg
jg
fwait
ljmp
repz
push
lods
dec
popf
fucom
push
int
mov
sbb
cs
xor
shrl
and
call
dec
add
lret
cmpsl
out
dec
xchg
mov
jge
pop
push
xchg
stc
mov
mov
aad
out
fstl
adc
pop
ret
mov
loop
cmp
pop
mov
pushl
ret
int3
pop
gs
mov
js
jp
loopne
cmp
sbbb
jno
insb
subb
xchg
adc
mov
or
pop
and
inc
sub
repz
cmc
sahf
dec
enter
insb
lret
xchg
jbe
clc
decl
icebp
mov
push
push
lock
ret
pop
jl
inc
lock
pushl
mov
or
pop
sub
push
jle
push
jo
imul
dec
jno
or
xor
add
mov
adc
adc
pop
cmp
imul
pushl
setns
add
lahf
nop
leave
fidivl
subl
fndisi(8087
clc
mov
pop
jnp
xchg
pop
mov
das
adc
in
int
popf
jno
mov
dec
lea
push
push
test
cmpsl
or
push
decl
push
popa
and
push
or
jecxz
mov
dec
les
push
fcomip
push
enter
inc
insl
xor
or
xor
cmp
push
xchg
fs
pop
lcall
cmc
cmp
push
jno
fbld
or
hlt
nop
testl
mov
cmpsb
out
and
mov
stc
fidivs
stos
or
jmp
sbb
je
xchg
popf
pop
cmp
jle
ret
pop
pushf
sub
test
push
push
lock
jle
out
popf
in
pop
lret
and
int
xchg
ss
jl
sub
incl
int3
leave
adc
dec
frstor
aam
mov
jge
popa
push
call
rcrb
and
sub
js
sub
xchg
rcr
bound
inc
push
clc
fbstp
ds
loope
mov
mov
or
add
cmc
aam
jg
fs
cmp
pop
je
push
mov
hlt
lods
rcr
mov
push
add
or
pop
pop
inc
decl
dec
iret
lret
mov
xchg
xor
adc
loopne
push
gs
jmp
mov
scas
mov
fstl
xchg
pushf
flds
push
ja
push
push
pop
bound
lcall
inc
sbb
lret
push
cmp
mov
xor
out
jp
les
jmp
imul
movl
popa
mov
xor
cltd
mov
popf
push
sub
jge
fadds
push
divb
and
or
mov
and
addl
shlb
std
add
out
push
scas
mov
sbb
ret
das
xor
mov
hlt
loop
push
dec
add
je
mov
decl
mov
mov
xor
cs
cmp
pop
or
in
decl
jmp
xchg
sub
inc
int3
test
push
lcall
pushl
ret
mov
testl
mov
inc
mov
or
mov
xchg
pushl
decl
insl
or
fnstenv
jo
pop
push
sti
and
fiaddl
sbb
lret
in
sub
ret
mov
pushf
rcll
mov
mov
mov
lock
pushf
add
inc
dec
or
call
out
ljmp
cmp
ss
decl
sbb
subb
add
jb
out
pop
jae
out
pop
mov
sti
pusha
ret
cmp
xchg
pop
xchg
in
jmp
ss
aas
mov
lods
cmp
aas
gs
pop
stos
adc
movsl
or
sub
jl
mov
dec
daa
jmp
or
mov
add
lcall
aaa
inc
adcl
cmp
movsb
adc
xor
push
roll
cmpsb
cmc
and
add
lret
dec
hlt
sbb
fimuls
push
lret
shlb
push
lods
fsubp
in
adc
insl
dec
movsl
scas
xchg
repz
jnp
dec
loope
enter
fidivs
fiadds
hlt
and
pushl
xchg
popf
outsl
fiadds
push
subl
sub
shrl
add
scas
cmp
mov
repz
shlb
aaa
lcall
sub
rorb
cmpsl
and
mov
sub
push
repz
jecxz
ljmp
mov
pop
jg
dec
pushl
ret
int
mov
sbb
mov
cmp
cmpsb
xorl
adc
cld
lret
inc
repnz
mov
and
mov
clc
std
mov
xchg
and
xchg
scas
pop
in
fisubs
jg
call
les
xchg
inc
movsb
sub
sub
push
sbb
outsb
addr16
mov
cld
pop
mov
clc
push
cwtl
lods
push
movsl
lea
lret
pop
sbb
imul
inc
loope
movb
jg
and
out
cmp
jmp
xlat
adc
xchg
mov
test
push
hlt
pop
std
inc
in
mov
loopne
add
fidivrl
mov
add
mov
clc
incl
inc
jg
jb
aas
out
je
sub
jo
xchg
push
das
loop
rolb
xor
add
xchg
push
sti
mov
clc
xchg
outsb
ja
sbb
push
jbe
call
cmpsb
fidivrs
push
out
xor
adc
fwait
mov
arpl
push
pushf
into
ret
and
push
test
xchg
push
xchg
daa
mov
popf
lretw
jo
inc
inc
xor
outsl
push
call
aaa
adc
xor
mov
pop
xchg
mov
in
sub
shl
sahf
clc
xchg
std
lahf
xor
incl
ret
add
sti
sti
fneni(8087
push
sbb
xchg
and
ffreep
call
mov
out
mov
or
mov
outsb
sbb
and
out
xor
addr16
jmp
sbb
fnstenv
inc
js
pushf
adc
test
lcall
xchg
push
push
mov
push
add
push
mov
sub
idivl
out
clc
push
rol
mov
mov
and
lea
incb
mov
call
push
jecxz
pop
dec
vpmovzxbq
inc
lcall
rclb
cltd
les
mull
negb
mov
and
xchg
adc
jg
movsb
rcr
pop
orl
in
jmp
mov
mov
push
lret
sahf
jl
scas
sbb
jno
int3
cli
pop
inc
sbbl
push
mov
ljmp
test
or
xor
inc
push
shrb
loope
pushl
std
xor
adc
add
inc
xchg
mov
outsb
dec
xchg
xchg
rolb
call
mov
jmp
xor
lret
outsl
mov
cwtl
pop
ret
push
jno
popf
and
or
call
mov
cmp
fistps
imul
pop
pop
lods
aad
lcall
call
sub
inc
xor
pop
jp
inc
xchg
daa
pop
mov
pushl
push
push
in
sub
imul
push
add
out
jmp
mov
cs
out
adc
mov
outsl
xchg
loopne
popa
pop
aas
jecxz
ficoms
cli
cmp
or
icebp
fadd
int
ds
and
jmp
hlt
and
dec
and
test
dec
aad
mov
jno
popf
ljmp
and
sub
jno
ret
in
mov
and
insb
pop
inc
add
pop
xchg
fisttps
incb
jg
push
cmc
les
or
sbb
nop
andb
lods
adc
vpaddd
jg
test
add
hlt
mov
stos
jl
stos
idivb
xchg
orb
test
ljmp
mov
cmp
push
xchg
xor
jecxz
push
jb
clc
gs
ja
aad
xor
adc
cmp
sub
jecxz
xchg
iret
cmp
mov
stos
xchg
xlat
pusha
mulb
dec
inc
sbb
ficompl
clc
fidivrl
lcall
lret
sarb
add
mov
sbb
out
pop
cmpsb
pop
stos
adc
inc
jmp
imul
or
test
mov
and
or
or
fidivrs
mov
and
mov
jmp
popl
cmp
cmc
fcomps
add
mov
inc
push
sub
scas
pushl
push
imul
cmpsb
ja
lret
or
stos
rolb
mov
outsl
add
xorl
add
cld
enter
mov
fnstcw
incl
sub
sbb
fistps
fimuls
jl
jbe
stc
incl
jae
jle
cwtl
add
xor
popf
pop
jne
repnz
stos
fwait
shl
mov
push
cld
ljmp
and
inc
ljmp
xchg
adc
xchg
mov
cmp
sar
mov
fisubl
pop
mov
sbb
insb
cli
jecxz
xor
out
fbld
in
cli
inc
xchg
mov
in
pop
hlt
mov
mov
jge
mov
sbb
jne
ljmp
addl
andl
das
xchg
mov
jb
lea
lods
ss
loopne
pop
cli
scas
popf
movsb
test
jmp
es
xchg
push
cmp
push
inc
push
inc
mov
idivb
add
jle
sbb
jg
xor
shr
int3
aas
imul
icebp
adc
fildl
or
mov
mov
es
cmp
outsl
cmpsb
sub
push
xchg
icebp
sahf
dec
adc
cld
xchg
jns
mov
cmpsl
pop
jg
gs
ljmp
lahf
mov
cli
or
ss
cmpsb
jnp
outsl
dec
lods
out
sbb
add
incl
xchg
in
adc
test
or
inc
es
cmp
scas
mov
xchg
adc
je
cmp
dec
inc
jb
test
out
inc
stos
movsl
out
mov
scas
adc
testb
hlt
dec
out
inc
sarb
xor
push
adc
ds
cli
push
pop
mov
lcall
pushf
ret
push
jmp
je
pop
jmp
stos
jb
jae
insl
cwtl
push
dec
ret
push
sub
fcomip
push
cmpsb
mov
and
repnz
mov
sub
mov
ljmp
xor
nop
idivb
cmp
xchg
adc
sbb
in
push
dec
inc
rclb
stos
rcrl
adc
inc
pusha
jmp
adc
mov
mov
pushf
mov
adc
mov
aad
inc
cmp
xchg
int3
mov
lcall
aad
jo
arpl
in
insb
inc
repnz
sahf
cmp
incb
stc
pop
scas
xchg
adc
mov
aas
int
leave
es
test
scas
lds
clc
jg
mov
xor
je
mov
jl
mov
adc
daa
in
out
ljmp
push
xchg
ss
mov
into
add
decl
push
das
xchg
sahf
add
inc
aas
stc
mov
insl
mov
lahf
fisubl
sar
mov
jne
test
jle
leave
xlat
adc
fdivrp
ljmp
jbe
sahf
lret
dec
popf
mov
sbb
push
movsl
push
aaa
dec
popa
mov
sub
loope
decl
lds
xchg
mov
mov
xchg
iret
push
stos
call
outsl
mov
push
dec
jg
cmp
outsl
mov
cmc
adc
es
fsub
ror
inc
adc
fcmovb
sbb
int3
sub
cwtl
pop
add
test
inc
cs
jmp
xchg
dec
push
aaa
aas
cmp
jb
lcall
roll
aad
inc
xchg
stos
scas
int
pop
movsb
push
mov
or
jae
pop
jecxz
ljmp
sub
mov
pop
ret
js
out
out
and
pop
pop
es
adc
jmp
sbb
ja
aaa
ds
xor
je
add
lcall
or
cmp
repnz
jecxz,pn
xchg
and
enter
loopne
push
fdivrp
inc
pop
pusha
decl
clc
jno
call
mov
pop
sbb
jl
jnp
loop
and
sti
cmp
jp
test
sub
std
xor
daa
ja
sub
pop
decl
pushl
pop
notl
rorl
nop
adc
lds
fisubl
add
in
movsl
scas
mov
int
aas
aas
xchg
add
sti
cmpsl
das
push
mov
popf
mov
mov
dec
mov
clc
fucom
inc
push
or
pop
bound
fdivl
sahf
pop
mov
or
pop
std
cmp
fistl
cmp
faddp
xchg
xor
mov
push
clc
fdivl
add
je
dec
inc
or
sbb
jp
ss
xor
cmp
pop
inc
cld
dec
repz
jp
sti
sbb
push
and
jns
mov
fmuls
adc
idivb
hlt
mov
aad
mov
into
daa
cld
dec
or
jmp
jbe
dec
stos
sahf
or
jbe
and
aas
mov
test
pop
mov
decl
test
cmp
lds
decb
mov
in
cmp
jo
mov
stc
ljmp
jmp
sub
arpl
xor
arpl
js
push
pusha
das
ja
jg
jecxz
shl
pop
push
imul
adc
mov
jmp
and
cmpsl
dec
repnz
movsl
push
ljmp
xchg
jl
sub
cmp
inc
scas
outsb
xor
mov
mov
sub
inc
mov
or
cmp
ljmp
test
iret
orl
cwtl
cld
call
mov
jns
pop
test
idivl
mov
add
xchg
and
inc
les
xor
pusha
clc
mov
or
inc
hlt
adc
mov
dec
pop
fsubrl
sbb
in
xchg
enter
push
das
shll
lret
mov
repnz
call
sub
or
leave
inc
popa
push
sub
adc
data16
cmp
jmp
pop
jge
or
jo
pop
in
mov
cmc
fcom
inc
mov
mov
fcomip
mov
xchg
cwtl
fdivrp
inc
push
or
xchg
test
aaa
lcall
lret
fptan
in
sti
clc
inc
scas
and
pusha
idiv
pop
inc
loop
cmp
sbb
nop
xchg
pushf
jmp
mov
jge
push
add
jmp
call
imul
pushl
mov
mov
fiaddl
scas
call
imulb
dec
cmp
add
jle
jg
cmp
into
push
xor
fwait
jns
lds
outsb
push
ret
cmpsl
fistl
call
fistl
leave
loope
adc
xchg
mov
jp
loop
mov
add
out
test
cmpsl
dec
inc
xchg
jl
fld
test
mov
mov
test
dec
push
and
jg
jmp
or
push
les
lods
repnz
mov
jmp
xor
cmpl
xor
js
imul
ret
mov
or
or
mov
sub
js
sarb
xlat
lcall
int
testb
push
pop
jo
lret
fisubrs
pop
negl
inc
das
inc
repz
ljmp
clc
jmp
pushf
mov
mov
push
shl
mov
das
sub
lcall
mov
pushf
cld
aam
inc
cwtl
cld
rcl
inc
enter
push
addb
sbb
xchg
lcall
or
ss
mov
mov
fildll
push
mov
cmp
aas
insb
jl
jae
fnstsw
subb
out
xchg
call
ljmp
fcompl
test
divl
push
dec
adc
add
js
ret
gs
enter
inc
dec
ljmp
stos
icebp
push
pop
pop
mull
cli
hlt
mov
sbb
inc
adc
outsb
cmpsb
or
ljmp
fcompl
sub
jbe
sti
mov
lcall
enter
ljmp
mov
mov
loop
inc
lock
movsb
cwtl
mov
mov
jmp
jbe
cmpb
shl
paddusb
inc
fcomps
xor
xor
insl
mov
sbb
incl
scas
out
adc
outsl
sbb
and
out
push
adc
std
js
push
pop
mov
fucomp
idivl
pushl
mov
inc
mov
sub
mov
adc
fbld
pop
hlt
in
mov
pop
mov
mov
pop
and
adc
sub
test
enter
xor
imul
imul
mov
faddl
mov
jb
cmp
xchg
add
and
stos
or
icebp
xchg
imul
outsl
clc
incl
pop
push
cld
xor
and
mov
xchg
test
sub
mov
pmuludq
lds
mov
jmp
into
push
inc
nop
pusha
or
jecxz
decl
lea
dec
push
cmp
fwait
scas
enter
sbb
mov
inc
mov
inc
out
fdivrs
sub
dec
in
sbb
test
fdivs
cmp
int
test
cmc
jp
movsb
cmp
mov
mov
pop
dec
mov
dec
cli
mov
inc
lret
sub
mov
jb
scas
enter
lcall
xchg
mov
movsl
jp
divb
dec
inc
sti
aas
les
in
test
pusha
xchg
or
push
pop
inc
imull
inc
icebp
outsb
popa
cmp
in
mov
cmpsb
popa
into
call
cmp
int3
sbb
fsub
mov
pop
pusha
iret
xchg
pop
je
loop
addl
fcom
pop
pop
fwait
stc
call
loopne
and
pop
es
ret
and
inc
mov
out
mov
pop
jecxz
in
ljmp
loop
daa
fwait
or
sbb
inc
pop
enter
test
or
mov
jmp
cmpsl
loope
or
test
push
xchg
inc
ret
jle
out
jb
push
mov
mov
mov
sub
and
mov
mov
fsubr
rcll
pop
divb
adc
ret
jg
fistps
push
push
in
sbb
jmp
inc
mov
jne
pop
cs
negl
clc
push
mov
dec
rcl
test
pop
scas
stos
cli
mov
leave
loop
xchg
jae
mov
lcall
les
pushl
cli
out
add
sub
outsb
fmull
js
mov
xlat
insl
xchg
pop
fimuls
pop
dec
pop
inc
inc
push
jmp
aas
jbe
clc
scas
add
mov
push
js
rolb
add
ljmp
pushl
jnp
gs
in
mov
and
int
cld
push
adc
or
int3
mov
shl
sbb
push
inc
mov
mov
xor
xchg
add
jle
sbb
test
jmp
add
xchg
sub
jecxz
push
movsl
sub
add
mov
decl
push
mov
xchg
aas
xor
js
pop
jno
sbb
inc
mov
add
adc
push
scas
inc
sahf
jb
insl
insb
jno
loop
push
add
xchg
repz
mov
and
mov
cli
inc
dec
cltd
stos
push
sub
mov
mov
aam
scas
mov
mov
test
push
daa
icebp
decl
decl
adc
push
aam
xchg
test
mov
insl
pushf
icebp
sub
hlt
fbstp
jns
das
fdivs
mov
mov
inc
mov
dec
popa
add
mov
mov
sub
clc
sti
pushl
pop
lds
and
into
mov
test
push
or
and
jle
shufps
sti
lret
xchg
aam
xchg
pusha
add
dec
or
mov
adc
mov
lcall
push
hlt
and
dec
dec
push
mov
shlb
push
add
xchg
in
mov
lcall
cmp
into
xchg
mov
sahf
cmpsl
mov
mov
enter
cmpsl
or
fbld
fmull
pop
fsubl
popl
sbb
incl
decb
or
int3
push
addr16
pop
imul
push
or
jnp
decl
adc
ja
loopne
xlat
adc
mov
incl
mov
dec
cmp
mov
jno
pop
cmp
mov
lds
shr
std
js
shrb
daa
cmpsb
mov
push
aam
push
mov
mov
add
into
pop
dec
mov
pop
fdivrl
adc
outsw
add
ljmp
mov
jne
hlt
insb
fwait
pop
xor
loope
pop
stc
and
loop
or
xchg
add
push
mov
xorl
add
push
pop
sbb
jne
icebp
popf
pop
dec
leave
xor
xchg
push
arpl
and
add
daa
lea
cmp
xchg
stos
adc
inc
cmc
es
push
pop
jg
cmpsb
jo
cmp
sbb
mov
pop
les
ljmp
divb
mov
sub
push
sub
notb
ljmp
je
xchg
add
mov
add
adc
cli
push
lcall
inc
loopne
adc
inc
sbb
jbe
push
rcll
adc
mov
scas
fsubrl
dec
jle
sarl
fdivs
into
sar
decl
cmp
andnps
dec
mov
movsb
push
push
push
cwtl
add
repz
ffree
arpl
sbbl
jmp
cmp
sub
inc
std
cmpsb
jne
dec
mov
bnd
loop
inc
xchg
lcall
mov
dec
inc
movsl
jbe
rcl
jmp
pushf
out
sti
inc
aam
cmpsl
faddl
and
mov
call
in
cld
lock
rcr
test
pop
or
imulb
cmp
ffree
xchg
pop
fcoms
cmp
scas
mov
sbbl
imull
adc
sub
mov
incl
leave
out
mov
dec
loope
fs
push
cltd
mov
jecxz
xchg
imul
jecxz
insb
pop
stos
fdivs
mov
jmp
sbb
xor
push
scas
adc
xor
fstpt
pop
cmp
pushl
lods
mov
fldcw
adc
dec
push
fsubl
ljmp
icebp
andl
pop
sti
out
push
jle
jo
xchg
dec
sti
push
outsb
dec
cmp
je
jmp
fwait
insb
outsb
movsl
sub
or
sub
cmp
push
push
mov
sub
test
ds
js
adc
pusha
into
into
pop
mov
leave
and
and
pushf
xchg
and
push
push
clc
inc
mov
jo
call
sbb
inc
or
add
sbb
in
push
mov
jecxz
divl
and
sub
lcall
inc
out
add
fnstsw
leave
loopne
xor
jns
mov
outsb
std
mov
mov
out
test
pop
shll
insl
xor
pushl
xor
xor
aas
jmp
xlat
cmpsl
mov
nop
fcomip
mov
pop
cmp
das
lods
movsl
mov
push
outsl
cli
xchg
inc
out
mov
pushl
adc
cmpsl
pop
adc
add
inc
inc
jg
push
sbb
mov
push
pop
push
dec
pop
cmp
and
aaa
xor
test
in
xor
mov
add
xor
incl
andb
cmp
mov
push
push
dec
sbb
ljmp
push
xor
or
push
sub
cmc
mov
push
insl
lret
in
sub
cli
push
pop
mov
xchg
inc
xchg
dec
insb
dec
dec
imul
negl
cmc
pop
push
out
and
addl
fistpll
ljmp
sbb
xchg
out
lahf
movsl
dec
pop
mov
xchg
sbb
mov
jge
jl
sub
jg
mov
cmp
jns
pop
imul
fstpt
fcoml
pop
inc
mov
jmp
aad
add
roll
jg
or
sub
fidivl
adc
fildll
lcall
mov
cmpsl
xchg
repnz
inc
mov
mov
add
jb
xlat
jo
out
sub
test
pushl
xor
xor
or
or
pop
cmc
pop
fistps
dec
or
sbb
decl
lea
stos
stos
or
xchg
in
mov
push
inc
inc
jp
cmpsl
jmp
jmp
mov
or
push
xchg
cld
jns
push
das
testb
call
int
mov
setae
push
push
leave
push
popl
imul
bound
xor
sar
cmpsl
cmc
js
sbb
inc
xlat
cld
sub
fistpll
arpl
mov
mov
clc
sarb
fldcw
imul
outsb
insb
sbb
cwtl
pop
jno
fistps
je
lock
or
sub
mov
in
jl
mov
sbb
lahf
imul
adcb
stos
jl
lret
ljmp
or
mov
aam
repnz
cmp
mov
jecxz
cmpl
add
out
mov
push
hlt
mov
jnp
pop
sbb
push
jg
fildl
shl
jno
mov
sahf
pushf
mov
shll
or
xor
inc
hlt
adc
jecxz
adc
push
adc
cmp
jnp
jnp
mov
dec
andb
decl
movsb
daa
mov
arpl
mov
mov
xchg
ffreep
add
mov
xorb
adc
aam
jne
ljmp
adc
pop
jae
nop
in
jle
imull
xchg
int3
adcl
mov
decl
cmp
sarl
lock
out
repz
icebp
das
pusha
ljmp
inc
xor
mov
sub
mov
mov
hlt
insb
mov
decl
sub
push
sbb
dec
in
cld
mov
dec
stc
daa
xlat
stos
int
jae
jmp
mov
xchg
xor
or
ret
fiadds
mov
aaa
test
cmp
das
clc
jnp
inc
repz
jle
and
sahf
adc
hlt
mov
call
cmp
sbb
push
inc
mov
rcll
add
les
int
movsb
jns,pt
add
mov
bound
js,pn
ret
mov
sar
incl
or
sbb
test
sub
mov
mov
cmpb
cmpb
push
clc
pop
arpl
inc
lcall
sub
cmp
out
push
sti
clc
sub
je
sarl
jle
xor
clc
xchg
test
jne
mov
in
cmpsb
ja,pt
add
lcall
mov
lcall
xor
imul
shrb
frstor
and
or
mov
decl
mov
lea
sub
int
shr
lcall
or
inc
jle
bnd
mov
jp
cld
mov
je
cmp
pop
stos
fdiv
ja
imul
mov
jg
sub
pop
out
pusha
scas
mov
dec
dec
aas
stos
gs
jl,pt
out
fists
icebp
mov
dec
in
popl
jg
inc
mov
lock
inc
pop
ljmp
ret
inc
or
mov
jg
in
std
cmpsb
js
mov
rcrl
lret
cltd
les
mov
jecxz
pop
adcb
adc
lea
aad
push
mov
ljmp
ss
mov
pop
aam
cld
sub
mov
jb
adc
ds
mov
loope
dec
daa
shrb
shll
into
ret
test
jo
fbld
test
es
push
gs
shr
and
add
xorb
ja
data16
xchg
pushf
fdivr
fbstp
and
and
xor
mov
cmp
fwait
cmp
dec
xor
test
out
inc
or
or
scas
push
xchg
outsl
das
aas
sahf
into
xor
incl
pushf
inc
push
js
adc
ss
pop
call
ljmp
lods
icebp
stc
cmp
adc
je
mov
out
fstp
jo
jecxz
ljmp
mov
inc
mov
sarl
add
adc
lea
in
and
std
mov
aaa
dec
jle
mov
or
pushl
mov
push
mov
mov
leave
in
sbb
data16
incl
sahf
cmp
mov
and
pop
cwtl
into
sarl
xchg
aam
mov
pop
mov
pop
fldl
pop
idivb
ret
sbb
adc
jl
loop
call
stc
mov
jo
jge,pt
xor
cmp
bound
xchg
stos
jmp
or
push
cmpsb
popf
test
push
call
sarl
cltd
leave
and
and
rorb
pop
daa
cwtl
inc
adc
fs
pop
decl
pop
and
mov
dec
dec
cwtl
push
into
push
cmp
insb
cli
jns
jns
in
push
dec
syscall
repz
xchg
sub
add
xor
idivb
xlat
cmp
icebp
cs
incl
adc
lds
test
lock
push
mov
cmc
push
jg
pusha
sub
xor
incl
pop
into
cmp
xchg
rorl
loopne
or
push
jb
push
sub
ljmp
int3
movsb
scas
push
test
sarl
mov
fdivl
cmp
and
sbb
incl
es
and
and
in
pop
fists
fcmovu
pop
push
stos
pop
jg
ljmp
pushf
shrb
add
sub
js
add
pop
xchg
cmpsl
loop
pop
loopne
pop
stos
lahf
sub
bound
xchg
aas
mov
mov
mov
pop
xchg
je
sub
inc
push
aas
push
mov
sub
dec
sbb
ja
aas
pop
cmp
cmp
pushw
loope
sub
pushf
push
jl
push
nop
ja
clc
into
clc
sub
sar
lcall
inc
mov
jno
sbb
inc
sbb
xchg
imul
pop
out
jp
jg
jg
pop
outsb
inc
jg
add
cmpsb
imul
xor
mov
pop
ficoms
cli
in
ljmp
push
xchg
ret
cmp
mov
lods
hlt
dec
jns
aam
fisubl
jecxz
sti
jmp
cmp
into
or
pop
pop
xchg
scas
dec
test
lahf
xchg
repnz
jg
inc
jl
test
xor
push
xor
lods
js
cmp
add
push
lds
fdivrs
decl
sahf
xlat
push
adc
mov
ljmp
cmp
push
mov
pop
dec
and
add
sahf
jmp
int
mov
pop
incl
or
sub
and
in
jnp
es
outsb
jp
jmp
jp
cmp
jmp
fs
and
cmpsl
ja
add
les
mov
push
pop
pop
cmp
jg
sarl
mov
inc
xchg
pop
out
aam
xor
pop
fwait
pushf
xchg
jg
decl
adc
rclb
jecxz
out
lret
iret
ljmp
sbb
pushl
push
mov
jno
loope
fucomp
and
mov
xorl
decl
pop
mov
jae
xchg
xchg
ret
pushf
mov
lret
jmp
rorl
les
stos
bound
sbb
aaa
and
sub
xor
sarb
ret
ljmp
fbstp
cld
jno
cmpsb
push
or
cmp
and
test
lock
jle
stos
movsb
jno
loopne
shrl
ja
add
push
or
cli
pushl
xlat
mov
mov
jp
or
int
ret
or
in
fcoms
cmp
std
ljmp
out
call
and
push
dec
xlat
std
push
jle
dec
addr16
call
xor
add
shr
mov
sbb
pop
lret
int3
call
mov
lock
and
lods
sahf
pushf
pushf
inc
jno
imul
jg
lock
ret
leave
dec
fs
iret
and
notb
decl
lret
loopne
pop
test
adc
sbb
fstps
mov
and
lret
jns
add
sub
cmp
cmp
and
sti
fsubr
pop
pop
jmp
sbb
add
pop
aam
dec
and
in
pushl
push
mov
adc
pop
xor
mov
stc
xchg
pop
decl
pop
mov
cmpsb
enter
lcall
test
insb
inc
jnp
inc
add
add
inc
inc
pop
pop
or
sbb
sub
push
push
dec
xchg
jae
jmp
jnp
pop
sarb
pusha
insl
pusha
mov
shl
lods
or
leave
xchg
fsts
pop
inc
cmp
xchg
cltd
jl
aas
xlat
jmp
push
jb
push
pop
enter
jae
stc
inc
shlb
mov
and
pop
adc
adc
mov
pop
call
sbb
hlt
push
pop
sar
dec
lret
adc
cmp
outsl
mov
outsb
mov
mov
xor
or
mov
dec
mov
gs
sbb
xchg
mov
imul
incl
jno
out
mov
in
push
jmp
dec
pop
jmp
cltd
fstpl
test
test
mov
push
jnp
add
cwtl
adc
arpl
xchg
aad
jg
loopne
bts
pushl
pop
push
mov
lods
movsb
mov
ja
mov
adc
pop
jle
test
mov
loopne
inc
xlat
and
inc
sbb
push
pop
mov
mov
lahf
fcoms
xchg
xchg
jns
scas
clc
ljmp
loopne
scas
cmp
inc
sub
jne
xor
jae
dec
xchg
call
lcall
mov
inc
or
test
xchg
push
xchg
rcrl
insb
sub
jg
inc
mov
out
or
lret
lea
rcl
imul
dec
jb
xchg
aas
push
mov
mov
add
and
cmp
inc
push
dec
ljmp
mov
ja
rclb
addr16
loop
xor
xor
cmc
fistpl
mov
push
or
inc
cwtl
dec
shll
pop
inc
inc
sbb
outsl
mov
adcl
clc
dec
lods
nop
sarb
dec
pop
jg
shrl
imul
push
bound
scas
pushf
jns
sub
mov
and
sub
pusha
test
jnp
ljmp
pop
or
sub
cltd
inc
sti
cmp
rcrb
push
icebp
clc
ljmp
mov
mov
js
test
enter
adc
pop
xor
pop
and
hlt
push
out
je
cwtl
lret
xor
push
nop
or
or
add
hlt
hlt
lds
call
xor
insb
cld
adc
insb
loope
mov
cmp
mov
xchg
aas
xlat
xchg
call
mov
stc
cmp
and
insl
jnp
aad
xchg
in
xor
jg
aam
jb
cmp
decl
mov
sub
mov
or
pop
cmp
mov
clc
mov
repnz
ljmp
and
add
and
shll
ja
repnz
jae
xor
nop
js
call
cltd
shl
in
cmpsb
jl
push
jl
add
pop
idivl
jno
sti
cmp
outsl
call
iret
xor
adc
push
imul
xchg
data16
push
cli
je
addr16
cmp
popf
mov
mov
xchg
jno
scas
pop
pop
js
jmp
jmp
xchg
cmpsl
repz
jmp
dec
test
add
or
bound
cltd
test
mov
je
fdivs
ja
mov
shrl
xchg
popf
imul
dec
int3
mov
nop
dec
or
pop
push
aad
mov
test
pushf
jo
scas
lods
fxch
and
daa
incl
adc
jecxz
mov
lea
pop
inc
loop
mov
call
aam
je
add
push
sarb
in
adcl
dec
jecxz
sub
or
inc
push
mov
jg
jmp
push
mov
out
jge
pop
push
dec
scas
cltd
or
push
sbb
gs
idivb
sub
and
mov
adc
ljmp
pusha
pushf
sub
xchg
jbe
in
ljmp
repnz
faddl
notb
mov
call
and
xor
inc
test
std
or
xor
sbb
aas
pop
cmp
pushl
jnp
dec
xchg
sub
mov
push
and
adc
daa
cmp
lods
jne
dec
out
inc
dec
ljmp
rclb
arpl
in
xchg
bound
fwait
jmp
jge
pushl
mov
insl
into
or
xchg
out
shr
push
cmp
fs
dec
xlat
leave
jl
jmp
push
or
imull
xor
mov
and
ljmp
push
dec
scas
out
pop
enter
sub
das
leave
out
mov
jb
dec
mov
or
fdivl
aaa
hlt
ffree
cmp
mov
lcall
dec
rcrb
cmpsl
inc
mov
sub
jecxz
xchg
inc
fs
dec
lods
fcomip
decl
fwait
push
jne
sub
imul
sub
push
std
pop
hlt
subb
ds
xchg
xchg
mov
sti
icebp
js
addr16
incl
adc
imul
subl
and
cmp
icebp
cmp
mov
repz
out
adc
sub
jmp
daa
cs
xor
and
std
sbb
stos
dec
pop
fsubr
int3
arpl
push
arpl
stos
inc
decl
sub
jmp
imulb
mov
stc
jmp
rcrl
fisubrs
insb
inc
shr
dec
test
shlb
in
push
loop
outsb
in
jmp
es
mov
in
push
cli
in
and
jnp
cmpsb
insl
and
adc
pushl
jge
bnd
and
jne
imul
ret
lods
out
add
mov
scas
jb
adcl
lahf
data16
sti
jmp
inc
mov
mov
in
sub
or
in
push
std
out
std
mov
test
call
loope
pop
lahf
cmp
or
and
es
or
shll
ja
xchg
out
out
mov
test
arpl
loopne
xchg
push
cmp
movsb
mov
fwait
clc
fcomip
call
mov
mov
lods
sbb
mov
in
xchg
sbb
insb
std
or
or
push
rcrb
or
push
push
popa
mov
insl
fdivp
es
mov
sub
decl
pop
gs
mov
sub
push
push
loopne
lods
inc
inc
adc
js
popa
inc
pushl
xor
sub
decl
fstl
cmp
pop
jmp
and
sub
inc
add
push
pushl
inc
add
add
sarl
ds
inc
in
inc
pusha
out
es
stc
dec
mov
cld
in
fldt
pop
dec
sbb
fldt
cmp
out
sbb
call
ljmp
cmp
fidivs
pop
mov
cmp
dec
xor
mov
sub
testb
mov
mov
jecxz
pop
jg
inc
cwtl
inc
add
mov
adc
adc
ljmp
movsl
mov
xchg
pop
add
mov
cmp
in
add
shl
shl
sub
shrb
decl
test
clc
add
call
nop
mov
aas
dec
fimull
push
pop
jmp
sbb
mov
adc
mov
bound
in
adc
pushl
leave
dec
jne
push
mov
and
xchg
sbb
fwait
cld
out
jo
sbb
roll
push
sbbb
call
mov
mov
imul
xchg
pop
jl
sbb
in
repnz
scas
mov
cmp
jmp
or
stc
roll
test
or
out
cmc
push
rclb
subb
fdivl
call
sahf
leave
lret
or
jmp
daa
push
inc
dec
dec
outsl
mov
dec
mov
out
pop
push
push
iret
jno
pop
lret
push
inc
cwtl
push
aam
cwtl
aas
xor
sarb
imul
clc
lahf
ljmp
mov
addl
cli
lcall
mov
aas
or
inc
mov
xchg
mov
in
int
jo
mov
popf
add
cltd
dec
and
add
cmp
mov
adc
nop
cmpl
rcrl
xor
popf
jg
cmp
push
lods
mov
or
lret
jbe
push
pop
inc
push
scas
jecxz
pushl
lock
inc
test
into
mov
fdivl
mov
insb
lds
mov
lret
sbb
pop
incl
in
cwtl
test
sahf
inc
cmp
enter
mov
xor
decl
push
or
test
add
inc
xor
mov
leave
iret
mov
mov
jmp
sub
cmp
loop
mov
popa
test
inc
xor
out
mov
gs
adc
jg
jge
lahf
shl
fimuls
push
repz
xor
imulb
pop
xchg
sub
into
and
xchg
mov
sbb
jg
inc
sub
clc
aaa
imul
xchg
pop
dec
mov
ljmp
jl
sbbb
xchg
mov
mov
gs
aad
xchg
enter
and
sub
lcall
addb
repnz
and
sub
xor
pusha
pop
jl
stos
mov
aas
push
pushl
cld
iret
sub
sahf
lock
es
cltd
loopnew
sbb
mov
or
sbb
cmc
decl
xchg
and
dec
js
add
xchg
stos
out
sbb
cwtl
jl
cmp
lods
cmpsb
cmpsb
cwtl
push
stos
pop
incl
jae
sahf
cmp
dec
push
in
pop
test
cmp
inc
lret
mov
dec
push
lods
push
jge
cmp
faddp
in
call
jecxz
in
arpl
inc
push
insb
pop
aam
int3
mov
lods
mov
rol
decl
dec
fnclex
pop
mov
sbb
ja
jmp
jecxz
mov
mov
jmp
aad
ljmp
adc
inc
pop
inc
incl
push
repnz
cmp
mov
call
std
pop
in
les
and
sti
xchg
sbb
pop
mov
push
adc
leave
pushl
and
xor
mov
nop
inc
mov
mov
jecxz
jb
lods
lret
sub
lcall
int3
in
lds
xchg
jo
fmul
or
sahf
loopne
ljmp
dec
ret
fnstcw
sub
push
lret
loopne
xchg
xchg
xor
in
mov
fistpll
add
add
inc
sub
pop
insb
and
xchg
icebp
dec
fistpl
int
lea
jnp
or
ficoms
mov
cwtl
negl
mov
in
cmp
add
gs
out
jbe
pusha
cwtl
pop
sbb
pop
inc
fldl2t
lcall
jo
ljmp
mov
into
in
js
lods
jae
push
lahf
ds
test
mov
cmp
scas
ja
mov
outsl
faddl
jle
jae
xlat
mov
out
insb
shll
jecxz
insb
and
push
sti
fldt
sbb
push
jg
dec
jmp
rcrl
clc
cmpsb
sti
or
xor
mov
outsb
adc
incl
in
sbb
xor
rcrb
movsl
pushf
movsb
jb
adc
cmp
cmpsl
inc
sahf
sub
ds
mov
divb
rorb
test
sarb
test
ljmp
and
movsb
shrl
les
jmp
lea
decb
jmp
out
fidivs
adc
scas
xor
adc
jg
inc
dec
mov
fs
add
decl
mov
add
popf
test
mov
and
js
or
std
mov
inc
cmp
inc
dec
push
imul
outsb
shll
inc
push
cld
out
cli
call
mov
in
mov
push
jb
xor
adc
xor
mov
outsl
rol
iret
ret
lea
mov
lret
psubusb
and
dec
ss
push
arpl
in
fwait
mov
test
dec
lcall
and
jno
cmp
loopne
cmp
jne
in
pushl
sbbl
xorb
mov
scas
mov
xor
mov
es
lcall
jp
sbb
int
mov
pop
cmp
inc
and
mov
in
xchg
xor
sbb
jecxz
jmp
ret
jle
xor
pop
mov
fldt
lds
add
cmpsl
repnz
iret
hlt
dec
ja
add
mov
push
insb
pop
pop
ljmp
push
and
inc
cmp
cwtl
cli
jmp
push
outsb
add
ret
mov
add
xchg
leave
cmpsb
mov
cmp
jg
mov
in
jmp
lret
mov
jmp
and
pop
xchg
insb
daa
push
loop
imul
call
pop
or
inc
daa
jge
cmp
pop
test
or
adc
xlat
xchg
clc
sub
xor
incl
enter
mov
cmp
call
mov
rcrb
jmp
mov
pop
push
jne
js
xor
iret
mov
jmp
es
jmp
lock
add
ds
dec
xor
leave
cmp
jb
push
fildl
jno
mov
cmp
ja
clc
incl
push
pop
mov
add
call
clc
ja
and
shl
out
shll
outsl
orl
incl
repnz
inc
pushf
stc
ret
sbb
sbbb
out
push
xor
pop
push
inc
pushl
dec
add
mov
xchg
xchg
jmp
lahf
pop
sub
lods
jg
dec
lea
decl
push
fldl
loope
outsb
movsb
test
sbb
xchg
dec
es
push
cmp
xchg
adc
jp
or
inc
xor
sbb
and
loope
call
sbb
mov
mov
in
pop
push
inc
sar
adc
shl
push
call
fsubrl
decl
mov
sub
scas
repz
aam
dec
outsb
mov
testl
decl
pop
test
aaa
jns
dec
js
mov
fistps
into
push
mov
or
jns
mov
mov
insl
ja
addr16
cmp
sub
push
stos
outsb
and
add
das
incl
push
in
xor
ljmp
push
setns
ss
cmp
je
pusha
pop
cmc
jnp
sub
cld
aas
xchg
or
sbb
pushf
out
in
sbb
inc
and
jmp
negl
pop
add
mov
pushf
mov
pop
or
data16
pushl
dec
push
ljmp
adcl
jmp
out
add
cmp
pop
jg
push
mov
xor
repz
mov
sub
mov
cli
lock
mov
or
rclb
stc
push
ret
xlat
fs
pop
cmp
push
jns
xor
inc
clc
lcall
dec
sbb
add
sub
dec
enter
data16
pop
cmpsb
inc
jecxz
cmp
pop
or
out
iret
mov
pusha
jl
lret
cltd
xchg
stc
push
movsb
pop
stos
inc
push
pusha
jns
sbb
jle
decl
loop
outsl
outsl
movsl
xor
dec
cli
aad
push
fs
lcall
xchg
xchg
lret
std
jno
call
inc
rorb
or
inc
jmp
dec
sub
and
hlt
add
test
push
mov
xor
push
aas
sbb
sbb
ljmp
clc
hlt
in
imul
loopne
jg
push
xchg
flds
jnp
sbb
data16
bound
decl
push
or
lds
sbb
clc
movb
aaa
adc
js
jmp
ljmp
adc
enter
dec
lret
and
hlt
mov
outsl
hlt
pop
lcall
imul
popa
inc
outsb
pop
or
or
incl
rclb
es
enter
pop
in
popa
ljmp
xchg
iret
xor
imul
pop
cmp
jbe
ret
pop
push
dec
sub
sbb
xor
fadd
cmp
push
push
or
fucomi
xchg
jae
push
jbe
movsl
add
push
inc
adc
mov
jmp
pop
rcr
daa
pop
pop
in
and
mov
sub
cs
in
test
ja
clc
and
faddl
aam
arpl
cmc
bound
mov
imul
nop
fidivl
ss
out
xor
jmp
hlt
dec
mov
outsl
scas
data16
adc
add
sub
xchg
insl
arpl
ja
mov
mov
jb
mov
fstpl
in
out
push
or
fwait
or
call
nop
aaa
inc
mov
cltd
orb
or
call
js
mov
push
rcrl
sub
addr16
inc
mov
mov
popf
mov
or
jmp
mov
daa
or
dec
xchg
fcomip
cli
cltd
cwtl
stos
leave
fcomps
in
xor
xlat
or
int3
les
mov
sar
mov
jp
imul
sub
inc
icebp
rcr
ret
or
ljmp
int
push
cmc
lods
adcl
ss
in
incl
mov
mov
xchg
jmp
test
jg
jnp
adc
xchg
repnz
inc
sbb
movsb
aaa
mov
xor
xor
decl
pop
out
enter
mov
popa
stc
dec
jecxz
cld
cld
movsl
rcrb
jns
jb
aad
push
and
call
jo
ljmp
nop
cmp
push
jns
addr16
das
lahf
jle
add
push
or
aad
hlt
sub
pop
cld
jmp
xchg
or
loopew
test
les
xchg
dec
fisttpll
popf
or
sub
xor
dec
call
icebp
pop
out
jae
stc
xor
push
rorb
outsl
push
sbb
inc
ja
jle
mov
mov
pop
mov
jnp
jnp
cmp
push
fisubrl
xchg
fstl
jo
sti
call
loope
gs
mov
ret
lahf
pusha
rolb
fisubl
jg
mov
popf
jno
inc
jo
xchg
push
leave
adc
pop
xchg
gs
fs
mov
int
sbb
mov
inc
call
cmp
pushf
pop
add
inc
push
jp
jmp
mov
loope
out
shll
ret
mov
mov
push
adc
hlt
push
test
cs
sbb
nop
pop
jg
fmulp
shr
mov
fs
sbb
fbstp
dec
ret
add
jno
dec
sahf
cmp
mov
xchg
decl
out
fs
mov
dec
push
adc
cmp
scas
clc
call
mov
push
call
pop
adc
push
in
dec
daa
add
out
jbe
out
js
insb
scas
shl
insl
jp
ret
rcl
std
lret
sbb
jle
mov
mov
jnp
xor
ja
push
insb
cmp
cmpsl
cmp
jo
fmull
inc
xchg
addr16
lcall
loopne
mov
pushl
xchg
xchg
jb
test
iret
add
gs
inc
stc
and
add
or
inc
pop
nop
in
js
cmp
lcall
jmp
mov
out
sbb
jo
mov
inc
fcompl
xlat
in
xchg
inc
ljmp
clc
sti
jae
fildll
mov
pop
mov
ja
stc
dec
xor
test
lock
loopne
faddl
push
call
pop
loop
inc
int3
out
or
fidivrs
jo
jo
pop
shl
push
push
ljmp
addr16
scas
xor
sarl
dec
xchg
out
cmpsl
in
jge
ficompl
mov
dec
push
adc
cmp
mov
jns
in
test
cmpl
test
call
cld
add
cmp
aaa
mov
scas
sbb
pop
inc
jno
push
data16
cmp
fcomi
sub
mov
test
mov
popl
cmp
mov
jmp
out
lods
mov
mov
std
loopne
shrb
sub
dec
incl
sahf
repz
xlat
outsl
das
in
mov
push
jg
filds
xlat
xchg
inc
jno
xor
jp
add
mov
scas
inc
cmp
lods
xchg
es
jl
in
rol
jecxz
call
dec
lods
frstor
int
push
mov
mov
sub
xor
jb
dec
mov
pop
call
dec
dec
stos
sub
lods
add
or
ret
push
sbb
shrb
jg
lods
ljmp
push
push
push
das
stos
cld
mov
xchg
xor
ljmp
mov
test
dec
fdivrl
mov
jno
push
sbb
and
lea
cmp
incl
sti
sbb
aaa
fwait
mov
inc
pmulhw
push
adc
divb
dec
cwtl
fxch
pop
out
xchg
xchg
gs
das
cmp
adcb
scas
jo
add
push
jecxz
ljmp
jae
push
mov
lods
jge
xor
adc
cs
pop
mov
cwtl
xor
push
or
jno
jmp
arpl
rclb
pop
inc
inc
adc
mov
scas
push
jnp
les
gs
mov
lock
loopne
popa
inc
stos
inc
sub
sub
and
movsb
lret
xchg
mov
dec
leave
sbb
mov
inc
adcl
adc
mov
fnsave
or
mov
mov
jmp
jmp
mov
stc
mov
lcall
mov
ret
mov
nop
push
dec
cs
std
pushf
and
inc
pusha
cmpsl
mov
sahf
sub
sbb
decl
decb
es
push
retw
aam
add
add
add
sbb
cld
jmp
or
std
cmp
push
xchg
xchg
jmp
mov
sub
dec
loop
sti
aas
loopne
out
insb
fisttpl
mov
lods
mov
sar
cli
adc
push
and
push
clc
lods
aaa
xchg
incl
shrl
inc
push
jae
cwtl
xchg
ljmp
cli
push
sub
push
outsb
bound
cltd
in
dec
pop
sub
and
mov
mov
rorl
cmp
notl
adc
jp
sbb
pop
lret
faddl
pop
add
jmp
pop
ds
add
lcall
cmp
insb
xor
jo
pop
mov
aam
mov
test
sub
loopne
push
imul
das
push
mov
cli
dec
loope
aam
insl
mov
stc
adc
incl
divl
cmp
std
xorb
push
mov
mov
loop
xchg
out
push
or
clc
in
pop
stos
xor
or
and
pop
jo
mov
mov
xor
push
sbbb
fwait
mov
fstpl
xchg
iret
jecxz
sub
decl
fs
jecxz
add
cmp
adc
jb
xchg
adc
inc
inc
lcall
xchg
call
into
inc
lods
push
push
lods
cmp
imul
lret
das
leave
movsl
shlb
std
dec
add
insb
ss
sti
jge
jbe
insl
pop
sbb
inc
xchg
push
mov
lds
call
adc
sub
sahf
aaa
nop
repnz
dec
bound
je
incl
and
lret
dec
dec
xchg
pop
sbb
test
sbb
aam
lret
fcmovb
dec
in
call
idivb
data16
push
ds
sahf
in
cmp
mov
fwait
jle
repnz
or
cmp
daa
dec
dec
cmp
insb
xlat
out
xchg
sbb
add
gs
add
pushf
repnz
fdivrp
scas
js
out
outsb
daa
inc
adc
sub
and
aaa
mov
in
fidivrl
rcr
lods
mov
hlt
icebp
stc
push
jbe
gs
loopne
fcmovnu
cmpsl
sub
test
jo
fisubs
scas
clc
call
in
dec
cltd
xchg
add
loop
loope
test
jl
dec
movsl
incl
mov
sbb
aam
xor
fcoml
pop
out
pop
sub
adc
shlb
adc
sub
xor
mov
and
xor
xor
jge
xchg
inc
ds
daa
mov
sti
sbb
je
adc
jl
cmp
dec
mov
xor
mov
jmp
test
lret
es
in
lock
clc
ror
xchg
ljmp
sarb
fwait
enter
dec
push
mov
xchg
fsubl
xor
sub
decl
pop
iret
push
mov
jp
pushf
ds
icebp
jo
idiv
ljmp
divl
adc
xor
lcall
cli
cmpsb
ljmp
addb
push
fcmovne
cli
xchg
and
test
push
xchg
cs
aam
enter
push
jo
insb
mov
icebp
push
dec
negb
or
inc
sub
adc
cwtl
adc
call
aad
in
add
xor
xchg
mov
mov
sti
pop
mov
or
mov
in
sahf
inc
xor
inc
scas
mov
mov
cld
lret
add
cltd
imul
insl
std
movsb
mov
mov
inc
idiv
decl
jb
mov
imul
fstpt
pop
rorl
cmp
xor
into
xchg
fisubl
sahf
lcall
aam
push
shrl
and
shlb
dec
and
out
or
adc
out
pop
cld
pop
push
dec
lret
lahf
daa
mov
add
mov
push
jp
lret
mov
push
movsl
adc
add
incl
cld
push
aam
cwtl
arpl
pop
pushf
or
push
inc
push
and
lods
mov
mov
mov
mov
int
push
scas
pop
xchg
ret
into
and
sub
jne
shlb
or
mov
in
call
xchg
inc
mov
mov
fsubr
clc
inc
inc
mov
int
incb
lea
cmp
movsb
pop
addr16
mov
decl
nop
bound
mov
add
addr16
aaa
xchg
mov
jg
cmp
mov
inc
inc
adc
xor
mov
sub
sbb
pop
pop
and
pop
call
nop
daa
js
jb
jle
mov
out
xor
testb
jg
jae
dec
enter
popa
psllw
jg
or
mov
adc
in
popa
cmp
ljmp
cld
fistpl
mov
mov
jb
sarb
dec
nop
mov
decl
mull
add
movsl
mov
mov
inc
test
call
lods
cmc
arpl
adc
push
sahf
mov
gs
adc
cwtl
mov
imul
mov
lea
sar
and
jl
js
fdiv
xor
test
add
jg
call
or
pushf
ss
loope
xor
ja
aaa
imul
push
ljmp
jmp
jno
inc
in
jo
xor
push
push
test
jne
push
test
stos
add
add
incl
cmp
xor
es
push
xor
dec
inc
pushf
jl
jmp
pop
stc
out
stos
outsl
or
ds
mov
xchg
scas
ja
cli
dec
push
fwait
mov
ds
hlt
in
lods
adc
cmp
add
push
inc
incl
pop
sub
gs
mov
xor
push
inc
push
push
out
push
add
sbb
inc
dec
push
icebp
xor
push
ret
sbb
popl
mov
pop
xor
les
add
fimuls
or
jg
ljmp
mov
xorb
out
dec
mov
repnz
fwait
push
mov
pop
mov
adc
jp
inc
call
jl
sahf
push
mov
clc
incl
sahf
inc
mov
jne
jae
mov
push
mov
dec
jmp
ret
xchg
xchg
scas
push
lcall
inc
lock
out
pop
add
lcall
scas
push
push
andl
popa
pop
call
fwait
iret
and
jg
xchg
mov
mov
imul
imul
and
cmc
cwtl
xchg
jbe
std
jecxz
jmp
lahf
je
cmp
test
mov
push
loop
or
popf
pmaxub
sahf
jmp
sbb
popf
xchg
hlt
fidivs
in
sahf
jns
loope
bound
ljmp
dec
xor
inc
rcll
std
pop
inc
sbb
sahf
andb
call
sbb
and
push
cmpsb
aam
ret
cmpsb
inc
clc
lods
xor
dec
arpl
scas
adc
test
aas
xchg
jp
add
or
ljmp
sub
call
or
mov
cmp
stc
mov
jne
sub
loopne
incl
outsl
push
inc
cmpl
nop
xchg
push
out
in
scas
test
mov
inc
call
or
and
in
add
dec
jmp
outsb
pop
jo
pushl
call
pusha
imul
gs
xchg
cmp
mov
mov
jne
stos
outsl
and
jne
lds
andl
cmp
aas
stc
sbb
js
cmpsb
push
cmp
adc
xor
into
jb
inc
repz
ret
ljmp
rorl
cli
roll
sub
lcall
ret
mov
cmp
cld
jmp
push
ja
cmpsl
lea
or
jp
divb
jge
sub
mov
push
mov
jg
dec
mov
xchg
enter
push
sbbb
xorps
decl
stos
xor
adc
pop
push
dec
or
aad
pop
hlt
mulb
gs
jl
cmp
xlat
mov
cmpsb
sti
loopne
add
mov
dec
inc
imul
fnsave
push
lock
dec
adc
push
and
insl
ljmp
clc
loope
adc
inc
in
ljmp
inc
mov
dec
mov
cmp
cmpsb
daa
lock
cmp
adc
pop
cmc
call
subl
inc
cmpsb
das
aaa
inc
fisubl
add
mov
shrl
gs
std
xchg
enter
jecxz
sub
push
mov
pushl
or
dec
ss
lret
test
inc
je
mov
or
andl
mov
in
dec
arpl
dec
aaa
inc
lods
xchg
cmpsb
xor
and
and
sub
hlt
jae
and
data16
jmp
xor
aaa
fdivr
mov
shll
fldenv
sbb
subl
push
ljmp
adc
jmp
daa
sti
scas
mov
shrl
and
inc
push
sbb
decl
aam
add
mov
pusha
arpl
and
dec
adc
add
lea
jmp
mov
int
jle
mov
jne
cs
sbb
xlat
push
jns
jmp
dec
imul
dec
push
dec
imul
cwtl
aam
pusha
or
fs
pushl
jbe
ror
jnp
lret
xor
ja
dec
dec
and
push
add
sbb
mov
in
loope
jmp
bound
fdivs
gs
negb
clc
lcall
test
cmpsb
adcb
mov
hlt
call
lret
sub
lret
inc
es
cmp
cmc
mov
ret
sar
pusha
in
aas
lcall
mov
mov
jno
push
mov
xchg
xchg
adcl
test
pop
int3
clc
outsl
outsl
mov
sar
jmp
xor
xor
mov
nop
jle
xchg
shlb
in
ljmp
mov
int
out
imul
cmpsl
js
inc
mov
repnz
pushl
add
test
rorl
xor
pop
sub
push
push
cmp
or
les
push
dec
gs
pushl
inc
insb
fnstenv
push
jnp
les
or
in
ja
jecxz
js
sbb
es
pop
cmp
pushl
es
or
sahf
jb
xchg
icebp
pusha
sbb
mov
incl
lcall
mov
scas
ss
xor
adc
jle
enter
clc
cmp
test
xchg
add
stos
lods
sub
stos
stos
push
pushl
sbb
mov
adc
scas
dec
cmp
sub
cmp
lcall
rorl
sub
movsb
les
jecxz
icebp
pop
dec
jl
cmp
pop
test
imul
shl
add
jl
loop,pn
xor
dec
cmp
xor
jmp
in
stos
or
fwait
push
mov
fs
pop
fs
ret
shll
sbb
cli
ljmp
imul
sbb
xchg
in
and
loop
fwait
in
int3
mov
xchg
das
call
out
nop
dec
xlat
mul
add
xchg
dec
sbb
sub
cwtl
pushf
and
jno
ljmp
hlt
mov
jns
and
add
lahf
in
xor
test
jns
in
jo
adc
fs
outsl
pop
sti
mov
out
mov
outsl
cmpsb
in
imull
mov
jp,pt
js
dec
stos
mov
pop
stos
fists
call
lods
push
das
cmpsb
jge
jmp
push
jbe
push
pop
push
mov
insl
sub
arpl
push
movsl
les
sub
adc
jnp,pn
xor
sahf
into
fsubr
cmp
xor
lret
sbb
ss
lcall
mov
xchg
test
aas
andb
cli
xor
lret
add
mov
fimuls
push
pop
cwtl
fadd
aaa
outsb
jmp
cwtl
pusha
pushf
outsb
movsl
jo
imul
pop
add
call
jle
mov
and
inc
imul
fdiv
hlt
call
ja
cmpb
push
mov
bound
pop
pop
xor
imul
jmp
in
mov
cld
arpl
flds
fistpl
mov
inc
test
or
decl
inc
es
nop
dec
sub
push
xor
mov
and
jmp
ljmp
sbbl
push
sub
addr16
ljmp
dec
jne
sbb
xchg
ljmp
mov
and
loopne
into
in
cmpsl
and
push
and
nop
cmc
xchg
lds
cld
lcall
aad
xchg
and
rol
push
sbb
cs
pop
cmc
incl
fsub
pop
push
pop
test
pop
add
jle
clc
call
xlat
mov
popa
dec
fnstcw
jo
xchg
ljmp
or
out
dec
dec
std
dec
cli
inc
sub
xor
mov
mov
inc
call
sahf
or
add
dec
ret
cmp
movsb
add
rcrl
mov
mov
ja
ret
divb
arpl
and
adc
jnp
jg
icebp
jmp
lcall
mov
rcrb
enter
incl
cltd
fdivrs
xchg
push
cmp
repz
fisubl
or
call
cmp
dec
bound
push
xor
sub
notl
pop
mov
inc
movsb
call
int
and
rcrb
mov
fwait
lock
push
pop
out
cld
fwait
inc
fistps
shll
sarb
jno
add
std
dec
or
mov
imul
lcall
add
mov
xor
cmp
cld
fisttpl
adc
mov
decl
je
call
pop
scas
fnstenv
jb
sti
sub
inc
or
call
daa
mov
jge
adc
mov
jb
mov
stos
imul
leave
stos
push
jmp
jae
call
sbb
imul
mov
mov
dec
mov
mov
call
out
daa
adc
jecxz
adc
insl
cmp
mov
fldl
mov
mov
lahf
loopne
push
jp
popa
mov
sbb
or
fstl
push
rcrl
dec
add
mov
inc
sbb
out
into
lret
nop
jmp
ljmp
adc
stc
jnp
push
movsl
sbb
inc
and
sub
call
dec
lds
ret
and
xchg
enter
cmp
std
jbe
lcall
jmp
jmp
inc
mov
out
btcl
scas
mov
aaa
pop
lcall
pop
mov
mov
mov
outsb
imul
iret
cld
pop
in
mov
jg
mov
inc
jnp
mov
sbbb
int
push
jnp
call
push
stos
sbbl
xchg
sub
sarl
add
adcb
lcall
subb
mov
or
fmuls
rcll
pushl
sub
int3
fnstsw
dec
scas
cs
pop
dec
xchg
pushl
xchg
aas
or
sbb
pushl
mov
rcrb
cmp
or
out
stos
sbb
decl
xchg
xor
fs
fldcw
insl
sbb
test
mov
push
test
xchg
std
clc
cmp
pop
icebp
pushf
dec
mov
xor
adc
jnp
jecxz
inc
ja
cld
push
cmp
cld
mov
xor
out
mov
ret
cltd
and
add
loope
push
outsb
push
adcb
xchg
enter
dec
pop
jge
dec
call
mov
lods
insl
ljmp
lcall
fs
sbb
mov
ret
mov
push
dec
mov
add
jecxz
call
pop
jecxz
pop
jo
xchg
jmp
in
push
xchg
mov
mov
sbb
enter
jge
aam
ret
xchg
jmp
aad
mov
aad
lcall
mov
add
jl
leave
and
jns
repnz
adc
popa
call
cltd
inc
add
jbe
nop
cmp
push
xor
scas
jne
dec
inc
cli
sahf
adc
pushl
push
pop
mov
aam
repnz
inc
test
loopne
mov
lods
xchg
sub
jmp
xchg
inc
popa
jge
sti
pop
cmp
cli
bnd
and
loopne
mov
lds
negl
xor
out
push
xchg
add
dec
cmp
sub
pusha
and
xchg
test
mov
pushl
push
fidivs
jmp
inc
push
gs
and
xchg
arpl
or
cmpsl
ds
sub
popf
push
push
pop
jno
loop
or
sbb
leave
stos
xor
incl
daa
leave
rclb
add
and
add
sub
sti
add
call
or
gs
xchg
jg
inc
cmpsb
je
or
lods
aam
in
iret
mov
into
xor
incl
adc
mov
xor
or
push
dec
and
loop
push
sbb
mov
lret
int
test
dec
dec
jo
flds
sbb
mov
ja
push
or
lods
push
sbb
imul
mov
mov
lock
or
fnstcw
incl
lds
jmp
jle
out
cmp
mov
or
loopne
das
hlt
mov
mov
lds
in
sbb
hlt
mov
inc
cld
inc
test
xor
shlb
not
repnz
jbe
mov
xchg
in
bound
jg
orl
sbb
das
popf
stos
call
dec
sti
xchg
mov
inc
dec
es
cli
and
xor
inc
mov
pushl
push
cwtl
mov
push
adc
xor
cmp
push
cmp
out
sub
call
or
mov
adc
repnz
pop
mov
mov
xor
or
ljmp
sahf
jne
mov
call
jno
sub
aam
aad
jnp
sti
pop
je
decl
jmp
ret
push
fwait
adc
jp
xchg
call
repnz
rclb
data16
lret
mov
inc
loope
cmp
fwait
xchg
icebp
mov
fidivs
incl
sbb
call
or
push
jg
pop
mov
in
rcr
scas
mov
cmpsb
cwtl
ret
cmpsl
jg
les
jl
cltd
shr
in
inc
jg
dec
adc
add
inc
xchg
loope
pop
cmp
shl
or
fnstsw
mov
lods
adc
int3
push
inc
dec
cmpsb
scas
lret
and
nop
jecxz
lods
and
or
incl
pop
mov
pop
or
push
clc
decb
jno
filds
cmp
shrb
lret
sbb
sar
cmp
mov
jle
filds
in
mov
push
and
sub
popf
lahf
mov
pushf
mov
iret
enter
inc
push
mov
sbb
fwait
add
pop
movsb
or
fisttps
sbb
incl
add
and
insb
push
out
push
jecxz
push
popl
mov
and
call
push
sbb
aaa
inc
sbb
sbbl
inc
fnstenv
jno
negb
aam
ljmp
je
and
jbe
cmp
sbbl
in
movsl
mov
xchg
sub
jecxz
dec
imul
decl
sbbl
aas
push
sub
mov
jno
mov
push
inc
scas
xor
push
imul
pop
mov
jnp
xor
aaa
or
testl
dec
std
mov
lahf
std
lds
xor
jle
das
incl
jl
xor
imul
jbe
das
and
arpl
imul
cld
jge
ret
test
outsl
jmp
imul
mov
sarl
push
test
call
incl
cmc
je
cmp
adcb
fildl
aad
dec
jl
call
jnp
outsb
inc
loope
xchg
idiv
xor
cmp
jecxz
in
pop
shl
sbb
dec
scas
out
clc
call
std
loope
sbb
loop
aaa
setl
icebp
or
subl
pmaxub
out
sub
into
jnp
arpl
repz
xor
jbe
mov
jae
mov
xchg
jmp
sbbl
and
sahf
dec
in
or
insl
mov
push
cmp
xchg
rdtsc
or
fidivl
add
pop
nop
pop
sbb
repnz
lcall
outsb
add
cmc
int3
test
cmp
pop
scas
mov
test
loop
mov
xchg
sarl
sub
mov
jne
test
inc
jecxz
push
add
subb
fidivl
lcall
push
loop
mov
pop
sbb
pusha
jg
in
sbb
loopne
cmp
loope
mov
sub
loope
lds
lret
mov
clc
adcb
lcall
lock
in
outsl
lret
lea
testb
pop
ret
dec
outsl
out
fistpll
sub
pushl
shl
xorl
cld
fimull
int
addl
jb
rorb
inc
mov
mov
jp
dec
ljmp
dec
xchg
ret
mov
decl
lret
inc
xor
pop
or
push
stc
daa
mov
sbb
cmpl
add
inc
nop
sub
cmp
push
add
daa
lahf
clc
push
push
insb
dec
lods
push
bound
add
in
cmp
jmp
cmp
int3
mov
jmp
aas
test
loope
pop
sahf
lods
mov
sub
lock
cmp
mov
icebp
fldenv
movsb
and
pusha
pop
lea
fdivrs
clc
lcall
popa
xor
jmp
mov
mov
out
and
pushl
jb
and
dec
jge
mov
and
out
and
stos
mov
cs
pop
add
les
out
decl
pop
xchg
xor
cmp
movsb
sbb
fists
mov
sbb
mov
lock
jmp
fwait
inc
xor
pop
test
mov
dec
mov
stos
pop
mov
and
dec
sub
inc
pop
mov
fldt
das
mov
and
ljmp
bound
add
jo
jle
xchg
fistpl
jae
scas
cli
mov
mov
repz
pop
xor
lock
ret
cmp
sarl
jl
mov
sahf
inc
rcll
pushl
into
iret
imul
jp
xor
test
jg
clc
ficomps
adc
adc
sahf
jle
inc
mov
enter
and
pop
jl
insl
popf
jmp
mov
pop
dec
rorl
and
xchg
mov
int
adcl
test
xchg
call
xor
call
mov
mov
das
mov
inc
push
and
cmc
jge
dec
sti
aad
push
ret
ret
xchg
enter
loop
rcrb
jle
jg
xlat
push
pop
pop
jbe
push
shll
mov
inc
or
add
pop
and
jnp
mov
aad
dec
rolb
push
dec
inc
shrl
and
lret
pop
cmp
lret
fisubs
pushl
sub
pop
push
insl
cmpsl
pop
jg
addl
into
out
popa
jmp
scas
adc
mov
js
xchg
push
mov
incl
sbb
pushf
mov
push
sub
pop
out
call
ficoml
mov
std
dec
jecxz
inc
int3
xor
mov
decl
lcall
pop
ds
and
jle
dec
test
idiv
decl
ret
pop
sub
xor
push
inc
and
push
mov
sub
daa
adcl
cmc
decl
in
cmp
adc
inc
mov
or
decl
lock
fnstenv
mov
shlb
mov
jne
sbb
mov
inc
mov
hlt
repnz
subb
sbb
jg
jle
jl
xlat
cmp
enter
fcomip
jmp
xor
add
popa
sti
cmp
shlb
cwtl
incl
sub
imul
mov
iret
es
leave
pop
mov
repz
dec
xor
incl
ret
cmp
mov
push
enter
xor
std
fcompl
in
jmp
in
imul
xchg
or
das
and
and
add
add
push
cltd
jle
in
jg
shrb
xor
movsl
push
sub
mov
ja
xor
cmpsl
xor
sti
sbb
fwait
inc
push
shlb
lods
dec
rcr
pop
lcall
test
jg
sbb
xchg
sbb
in
pop
lcall
decb
movsb
pusha
fisubrl
cmp
dec
push
mov
arpl
aam
sar
sarl
pusha
lods
repz
aam
sbb
cmp
arpl
push
push
andl
add
jg
mov
cld
scas
shl
dec
cmp
ss
movsb
nop
rorl
mov
stc
mov
or
jg
jmp
xor
not
xor
icebp
decl
imul
das
pop
mov
cli
cmpsl
popa
dec
scas
mov
or
ret
jl
movsb
xchg
in
in
xchg
push
mov
ljmp
cli
rol
cmp
shll
fnstenv
xchg
xor
pop
dec
std
fwait
incb
les
es
fdecstp
push
mov
jg
ss
xor
pop
movsl
lods
push
or
cmp
lcall
stos
fstp
mov
cmpsb
aam
push
sub
xorb
xor
mov
ljmp
repnz
aas
aad
xchg
sbb
enter
mov
rcr
sahf
cmp
popa
ret
daa
jp
out
outsb
jmp
add
adc
enter
jns
add
cli
jo
test
scas
pop
or
out
fcmovbe
xchg
sbb
hlt
lock
pushf
lods
mulb
jmp
push
insb
insb
jns
mov
lcall
xchg
insb
adc
rolb
add
adc
scas
inc
ds
push
stc
leave
daa
pushf
and
pop
std
pop
lock
add
push
xchg
add
fldl
aaa
das
and
frstor
gs
dec
pop
stos
mov
je
add
aaa
xchg
xlat
xor
xchg
incl
addr16
cld
enter
mov
sbb
fs
ret
xchg
jno
jg
cmc
mov
mov
add
cmp
mov
sbb
pop
jbe
lret
fnstsw
std
scas
cli
aas
leave
push
sti
cltd
enter
fcmovbe
lock
jne
icebp
mov
ja
fcomip
addr16
out
lahf
outsl
ret
mul
fmuls
int
inc
fsubrs
mov
test
sbb
adc
pop
xor
cld
jg
jge
adc
sub
push
add
xchg
movl
fidivrs
push
test
decl
pop
ljmp
das
in
cmp
js
js
mov
jecxz
in
inc
loope
and
call
push
mov
in
lods
ret
and
insb
imul
ljmp
and
fwait
bound
test
cmp
sbb
iret
dec
xor
std
scas
fstpl
push
cwtl
cmpb
ja
cs
insl
pop
lock
lahf
cmp
icebp
mov
dec
iret
inc
out
ljmp
outsl
test
cltd
out
clc
stc
xchg
decb
dec
ret
dec
jmp
lcall
stos
test
xor
push
mov
decl
scas
popa
mov
out
test
cmp
inc
jnp
fs
or
shlb
adc
mov
pop
adc
sub
imul
sarb
xchg
stc
nop
mov
bnd
jl
cld
das
cli
adc
mov
pop
loopne
popf
cli
pop
mov
adc
mov
call
mov
outsb
xchg
sub
ret
imul
mov
or
aaa
mov
and
mov
jecxz
dec
js
addb
pop
imul
repz
add
roll
pop
jae
adc
mov
cmpsb
mov
scas
movsb
test
fistpll
dec
xor
xlat
lds
dec
push
pop
ljmp
test
inc
dec
xor
loopne
push
add
mov
xor
cmp
mov
pushl
fsubl
adc
popf
push
xchg
call
call
add
adc
ret
xchg
cmp
mov
popa
repz
popa
decl
cmp
out
lock
roll
push
mov
out
mov
loop
pop
std
mov
jecxz
mov
inc
in
push
xchg
push
and
mov
ret
shr
call
pop
pusha
js
jmp
cmp
loope
jbe
inc
jno
imul
shl
fcoml
iret
mov
enter
shll
push
lods
mov
fdivs
aam
pop
adc
je
adc
fistpl
notb
cmp
mov
or
scas
stc
pusha
pushf
ss
xor
repnz
cmp
xchg
insl
lret
adc
xchg
pop
cwtl
scas
icebp
mov
add
xorl
mov
pushl
mov
out
xor
jmp
mov
loop
std
mov
mov
sub
incl
or
pop
sbb
int
pop
adc
cs
decl
lret
sbbl
sbb
sti
sar
cmc
sub
dec
fdivrp
in
fdivrs
fwait
addl
mov
iret
cmpsb
mov
cmpsl
and
in
and
mov
fdivs
fwait
cmp
jno
push
in
cld
add
push
sbb
incl
mov
jnp
jb
mov
rclb
icebp
or
ljmp
shl
das
jbe
xor
popf
hlt
xor
sub
dec
mov
fbstp
push
jg
cmp
movsb
cld
scas
std
call
jmp
fcoms
mov
mov
icebp
jecxz
es
xchg
insl
idiv
pushl
cwtl
test
cwtl
cmpsl
mov
sti
add
mov
jl
sub
jmp
xor
mov
iret
incw
cs
out
xor
in
lods
enter
mov
incl
outsb
sub
mov
mov
pop
int
pop
jns
pop
sbb
popf
fisubl
ljmp
out
bound
fistps
pop
sub
lea
inc
std
mov
sbb
rorb
ja
decl
mov
add
ja
mov
lcall
dec
push
shlb
call
adc
js
clc
sbb
iret
out
jbe
push
or
mov
add
inc
addl
ljmp
int
stos
xchg
inc
je
sub
scas
cmp
and
jmp
mov
scas
jb
and
insl
sub
mov
test
push
mov
ret
jecxz
bound
xor
mov
call
das
xchg
add
mov
push
xor
cmp
xor
pop
mov
lcall
sub
jecxz
scas
push
cs
pop
sbb
push
das
push
adcb
adc
push
mov
cwtl
or
arpl
movsl
rorb
inc
mov
add
and
jg
into
mov
add
ja
cmp
add
bound
mov
mov
outsb
int3
push
and
mov
pop
inc
lcall
xlat
adc
xchg
adc
sbb
pop
or
jecxz,pt
ja,pn
lds
cmpsl
sub
and
xchg
loop
dec
pop
ret
sbb
mov
cmp
pushl
xchg
out
rorl
aam
daa
add
test
arpl
xchg
fistl
ljmp
movsb
fsub
adc
test
mov
push
sub
push
lock
pop
test
adc
incl
lea
test
into
xchg
int3
xlat
xchg
push
mov
jle
outsl
mov
xor
xor
sub
inc
push
jmp
lea
xchg
ja
ljmp
mov
cmp
sub
data16
sahf
mov
mov
pop
jg
movsl
shl
add
test
pop
int
imul
pop
jmp
cmp
push
imul
rcrb
dec
cmp
repnz
nop
decl
scas
leave
orl
fcomps
fnstsw
repnz
arpl
lcall
or
sub
insb
add
cmc
or
mov
push
lock
add
nop
jnp
cmp
mov
mov
adc
shlb
aas
xchg
aas
fdivrs
jp
cmp
dec
adc
fnsave
scas
push
xchg
aad
push
pop
and
mov
or
dec
test
jae
sar
inc
ljmp
ret
jge
int
mov
sbb
pop
js
mulb
inc
sub
lcall
ret
sub
xor
mov
into
insb
xchg
or
sti
repz
cs
xchg
jge
sub
inc
or
add
xchg
addr16
lods
lret
dec
enter
mov
add
cmp
mov
data16
dec
pushl
lcall
sub
shlb
mov
scas
xchg
leave
decl
dec
sbb
mov
pop
stos
sahf
ljmp
jg
js
out
jmp
out
inc
dec
addl
cmpl
fwait
jl
jecxz
or
movsb
decl
adc
cmpsb
mov
imul
dec
push
lcall
pop
movnti
inc
ror
dec
gs
jb
subl
movsb
sar
jg
pop
dec
pop
jmp
dec
push
sub
fimuls
icebp
jg
or
mov
sbb
inc
rcrb
cltd
dec
pop
pop
sbb
jno
cmovbe
decl
fstl
les
lods
jo
xor
push
outsl
fistl
add
and
ja
sub
push
in
xchg
aam
incl
arpl
in
ret
test
sub
lds
pop
or
xor
incl
outsb
in
aad
xor
dec
pop
pop
or
pop
jp
fldenv
call
jb
sar
and
add
xchg
sbb
xchg
arpl
xor
xchg
pop
dec
aaa
js
data16
sub
cld
movsb
xor
test
push
push
lcall
popf
fpatan
stc
ljmp
xor
addb
push
fidivrl
inc
pusha
mov
and
lcall
movsb
xchg
call
loopne
outsb
les
fwait
sub
js
rcl
mov
add
ljmp
jno
jge
mov
dec
lods
lods
push
push
popa
sub
cs
and
mov
jns
pop
dec
repnz
lods
cld
push
in
dec
mov
leave
insl
gs
push
sti
pop
repnz
mov
cmp
nop
inc
xchg
xor
jge
cwtl
daa
jle
jp
idiv
mov
test
call
mov
jle
sub
sbb
sub
mov
adc
ja
sar
or
add
mov
xor
jg
xchg
push
in
jmp
add
pusha
push
jbe
int
pop
loopne
leave
and
nop
sbb
pop
push
or
lret
pop
dec
and
pop
stos
inc
xchg
xchg
push
lods
scas
fisubl
mov
lods
les
loop
movsb
or
lcall
inc
sahf
inc
adc
pop
cmpsb
lods
jne
mov
lcall
sbb
add
inc
jb
jae
jae
sub
push
push
insb
mov
xor
add
cmc
mov
or
in
pop
iret
js
rclb
mov
aas
inc
sbb
call
sub
mov
hlt
add
pusha
pop
fcompl
cli
int
sbb
mov
decl
call
pop
dec
jmp
int3
movsl
sbb
sti
inc
push
daa
lds
xchg
mov
incl
push
pushl
xor
ficoms
cmp
mov
add
mov
ja
mov
adc
mov
cmp
jmp
sub
inc
jb
jg
loop
push
ljmp
and
or
jg
or
nop
lock
nop
test
xchg
inc
cld
lcall
in
and
daa
cmp
inc
cltd
or
fwait
decl
mov
popf
dec
or
hlt
rolb
mov
push
fldcw
aas
push
test
mov
mulb
enter
fistpl
or
call
enter
in
daa
loop
push
pop
clc
push
inc
mov
cmp
out
aas
pop
jno
std
jmp
ret
xchg
dec
rcl
jl
aas
cld
xchg
mov
lock
popa
mov
lcall
faddl
pop
mov
or
lods
loope
pop
mov
rcrb
mov
incl
jns
stos
dec
pop
mov
clc
pushf
and
pushf
cmc
ljmp
nop
or
insb
sbb
xchg
add
xor
push
dec
cmc
xor
sbb
adc
incl
dec
jl
les
cmp
lret
fsts
in
data16
dec
inc
test
mov
push
mov
imul
jns
xor
lcall
test
jl
jne
jg
sub
sti
jnp
adcb
jge
inc
xchg
sub
cli
and
in
pusha
inc
enter
call
mov
sbb
jecxz
mov
leave
pop
adc
sbb
push
xlat
das
and
ljmp
dec
sub
shl
pop
hlt
jnp
lods
or
cltd
lret
fiaddl
into
outsl
pushf
or
mov
incl
push
sti
cmp
jns
mov
lea
push
aad
push
rolb
fstps
xlat
aaa
std
push
out
sahf
lods
fyl2x
test
inc
cmp
insl
bound
rolb
lcall
mov
mov
repz
mov
push
dec
lret
dec
in
sahf
push
fstl
push
out
dec
xorb
ja
mov
fs
call
iret
lods
sbb
mov
mov
add
test
pop
jbe
mov
pop
stos
movb
lcall
adc
mov
mov
inc
loope
cwtl
and
sbb
mov
push
cmc
xchg
rorb
jg
incl
pop
rcrb
sbb
mov
cmp
cmp
cmp
pop
jge
das
sub
imul
fstpt
aam
or
insl
push
enter
lods
mov
decl
jo
aaa
movsl
sub
dec
xchg
bound
sub
inc
into
or
jp
loope
pop
pop
lcall
scas
jae
sub
push
flds
inc
scas
mov
adc
jge
ljmp
stos
cmpsb
fwait
xorl
push
cmp
or
call
xchg
movsl
mov
clc
dec
and
das
clc
xor
adc
outsb
in
leave
pop
mov
or
push
xchg
mov
xchg
call
jp
fdivl
push
repnz
jnp
cltd
mov
mov
mov
shlb
jbe
xchg
nop
fmul
mov
push
jg
fcomi
clc
mov
sbb
or
mov
push
xlat
insl
in
pop
mov
and
and
and
sbb
sbb
mov
aaa
filds
ss
ds
adc
incl
ss
mov
pop
inc
out
mov
ljmp
fadds
jno
divl
lcall
clc
mov
aas
and
das
ss
adc
das
pop
mov
xchg
add
in
adc
loopne
dec
adc
cld
aaa
std
jmp
mov
std
clc
incb
out
mov
addr16
sub
std
loop
outsl
ja
into
sbb
xor
and
or
xor
sub
leave
push
cld
pop
push
lcall
sbb
jmp
das
cli
dec
adc
pop
add
push
mov
stc
mov
fwait
cld
add
push
cld
js
adc
add
cli
outsl
mov
add
lods
sbb
pushf
call
aam
test
dec
popf
bound
out
popf
cmc
mov
jle
sbb
ljmp
jne
xor
inc
movsb
imul
jp
inc
jmp
sbb
cmp
add
cmp
stos
push
ja
or
rolb
ljmp
cli
pop
repz
insl
ret
cmp
ret
scas
stos
stos
xor
dec
ret
outsb
stos
fisttpll
sub
test
mov
xchg
andl
fdivrl
jg
sub
and
clc
mov
push
or
inc
test
cmc
in
jnp
repnz
or
ret
out
popf
xor
cmp
fnstsw
cli
test
clc
push
dec
insl
cwtl
subl
mov
push
mov
ficoml
mov
lcall
cmc
jmp
jns
jl
and
and
in
mov
pop
sar
jmp
lcall
movsb
adc
loop
mov
addr16
sarb
cmp
sub
jbe
add
xor
clc
and
test
lahf
enter
mov
dec
in
push
xor
mov
fiaddl
ret
aad
lret
xchg
add
cmpsb
jmp
xor
mov
push
jl
pop
test
incl
mov
and
mov
shll
xor
xchg
mov
addr16
lcall
pusha
jae
dec
incl
cld
call
test
cmp
insl
stc
dec
jl
fistpll
or
mov
jmp
jl
cmpsb
xchg
andl
fsubrs
aas
mov
out
adc
lcall
jbe
aas
loopne
dec
mov
cmp
sbb
fdivl
rcrb
iret
inc
jne
sbb
rcrb
push
jge
sbb
mov
xor
call
pop
jns
mov
lea
call
call
or
jmp
leave
push
mov
inc
mov
fmuls
mov
aas
movsb
decb
mov
jns
cmc
ja
mov
adc
jp
push
outsl
xchg
fs
ss
into
lcall
rcr
pop
outsb
push
dec
cwtl
pop
xlat
stc
into
jmp
into
jno
pop
in
mov
lcall
mov
dec
out
lret
outsl
data16
testl
sahf
push
pop
or
jp
inc
lcall
jmp
aaa
pop
jle
test
and
and
mov
pop
inc
arpl
pop
test
fildl
sbb
push
add
xchg
sub
mov
mov
sbb
insl
dec
mov
call
mov
rcrl
pushf
mov
pop
and
pop
push
or
push
int
dec
xchg
enter
pop
loope
push
pop
popa
movsl
mov
in
inc
cwtl
dec
cld
jmp
sbb
decl
add
pushf
sti
xor
mov
add
bound
pop
fmull
mov
pushl
xchg
cld
jg
and
mov
inc
int3
data16
or
fists
or
aam
decl
cmpsl
dec
ja
leave
mov
lahf
sbb
fildl
cmp
or
mov
icebp
pusha
mov
jge
mov
jg
sbb
mov
or
out
or
mov
and
dec
ds
clc
stos
fincstp
rorl
lahf
loopne
sub
adc
mov
add
pop
pushl
dec
roll
leave
das
pop
or
mov
jne
inc
test
in
dec
adc
incl
jle
mov
mov
mov
call
loopne
ret
pop
mov
cltd
in
jecxz
sub
or
cwtl
mov
and
push
jmp
xor
scas
or
cmp
cs
pusha
clc
push
aaa
std
cmp
cmp
cmp
outsl
mov
cli
jge
and
inc
sub
sbb
push
cld
repz
ret
and
xchg
push
das
mov
mov
js
cmpsl
mov
pop
nop
test
test
mov
xchg
fnstcw
daa
ficoml
cmpsl
xor
push
les
int3
outsb
fdivl
testl
mov
in
les
or
ss
hlt
cmpsl
gs
pop
adc
jae
xchg
sbb
cwtl
sbb
pushl
dec
out
scas
cli
jmp
push
push
push
test
test
lds
xor
mov
mov
dec
push
mov
xor
test
out
sub
jp
and
pop
fcomps
dec
rcrl
fistl
mov
adc
pop
add
jmp
push
pop
cli
addb
mov
test
adc
or
cltd
aaa
adcb
xor
or
dec
adc
cli
inc
hlt
or
pushl
vpavgb
clc
and
in
out
insl
daa
push
sub
sub
pop
lcall
dec
in
out
jmp
add
or
in
push
and
daa
call
cs
int3
nop
fstps
or
fcoms
ljmp
add
jecxz
inc
dec
push
push
repz
insb
cmp
or
xchg
pushf
mov
cmp
jmp
leave
gs
xor
cmp
cmp
je
rorl
sub
loop
stos
push
decl
mov
cli
cmp
arpl
inc
stos
inc
dec
decl
scas
mov
inc
jle
decb
adc
dec
or
cmp
jp
or
pop
cld
cmpsb
loop
iret
sub
lock
sbb
in
mov
push
inc
repnz
decl
cmp
test
inc
jg
addr16
mov
pop
mov
xlat
xchg
sub
lcall
shll
ja
test
loop
or
jecxz
push
mov
mov
movsb
mov
movsb
pop
lods
push
imulb
mov
ret
mov
mov
adc
ss
or
ljmp
test
mov
leave
inc
xchg
lret
dec
pop
fcomip
lcall
xor
cmp
sbb
cmp
ror
jmp
enter
add
push
lods
dec
or
fsubr
repnz
xchg
jno
add
fimuls
cmc
adc
ljmp
and
out
xchg
in
mov
inc
jg
cli
hlt
sub
mov
mov
stos
ljmp
subb
sbb
push
fcompl
in
push
std
sub
ret
push
push
fbstp
cmpsl
xchg
mov
test
jle
and
mov
ds
in
jb
fcomip
ljmp
and
pop
sbb
es
shll
or
icebp
stos
cmp
call
mov
push
mov
push
stos
fisttpll
lods
repz
inc
or
faddp
sbb
lahf
xchg
fisubrl
mov
popa
mov
into
movsl
sbb
into
popf
jmp
inc
shlb
adc
xor
call
pop
mov
hlt
ret
popa
test
pushf
lods
or
inc
pop
out
aaa
sub
pop
sti
and
and
inc
inc
jg
out
imul
mov
sub
fidivrs
push
lcall
out
or
into
and
xchg
jle
cmpsb
sub
rclb
outsl
pop
cmc
mov
jno
sub
pusha
mov
dec
jno
neg
xor
dec
fndisi(8087
jmp
insb
or
push
sar
jno
cmpsb
push
cvtdq2ps
dec
dec
shl
push
or
mov
push
enter
dec
cmp
popf
and
push
sbb
xlat
xchg
push
shrb
das
sar
imul
and
jge
out
push
xor
es
push
dec
adc
mov
mov
test
push
shlb
cld
scas
inc
fildll
jl
mov
ljmp
jmp
mull
adc
mov
or
loope
subb
or
inc
dec
push
loop
xor
ljmp
cmc
and
jmp
jp
aas
add
int
mov
push
loopne
nop
mov
or
insb
cmc
aad
xchg
dec
jl
push
inc
shrl
jp
pushl
adc
dec
adc
inc
xchg
adc
mov
jmp
stos
ret
iret
jp
mov
std
mov
incl
hlt
inc
dec
je
xchg
ljmp
push
xor
call
jge
stos
in
xchg
icebp
repnz
in
pop
nop
add
push
xor
inc
push
jp
sub
stos
clc
mov
out
mov
shlb
mov
push
aaa
or
xor
mov
jmp
lods
divb
and
pop
bound
stos
mov
dec
mov
xchg
push
out
inc
pop
gs
decl
adc
mov
sahf
in
xchg
xchg
and
cmp
jns
cmp
stos
fldt
jmp
pop
je
leave
sub
and
test
dec
ljmp
mov
push
mov
out
lea
push
add
in
sub
jo
ret
mov
jecxz
lahf
xchg
cs
xor
push
out
pop
fcompl
mov
outsb
outsb
mov
loope
rcrl
sar
cltd
jmp
outsl
adc
pop
loope
mov
dec
dec
insb
lret
push
pop
lahf
incl
push
adc
push
adc
and
out
orb
cltd
cmp
stc
je
nop
sahf
hlt
subb
scas
or
pop
push
movsb
xchg
cmp
adc
jo
dec
xor
sahf
sub
mov
les
mov
jb
jns
in
jg
lcall
pushf
lock
loopne
or
push
fstps
cmp
inc
mov
adc
xchg
mov
and
call
inc
daa
fnstcw
icebp
fmuls
adc
jo
and
enter
lret
das
shlb
cmp
stos
jns
sbb
call
xchg
cmp
pop
xchg
xor
adc
add
cld
mov
sbb
test
clc
mov
push
rcrl
jo
call
sub
cmp
decl
in
mov
push
and
jecxz
xchg
adc
stc
test
jg
mov
xchg
jl,pt
cli
fcomp
mov
mov
add
jecxz
mov
mov
cmc
and
cmp
clc
sbb
dec
adc
jl
adc
fidivl
cmp
bnd
mov
test
push
mov
jns
andl
sti
xchg
or
sarb
pop
adc
mov
orb
pushl
push
pop
and
les
jl
adc
sarl
dec
ret
xchg
ficoms
cli
out
clc
adc
push
jecxz
movsl
imul
cld
mov
jb
sbb
jmp
mov
add
mov
ds
push
push
cli
into
dec
imul
or
and
cld
jns
clc
mov
ljmp
in
jnp
cld
push
je
call
xor
rol
das
push
pushl
dec
cmp
int3
jl
mov
xchg
adc
fcmove
test
cmp
loope
int3
ret
xchg
ds
mov
imul
cltd
pushf
cli
aam
xlat
call
xchg
into
dec
mov
cwtl
push
leave
or
in
fwait
push
pop
insb
fisubs
cmp
lahf
mov
gs
cmpsl
loop
dec
lret
xchg
push
push
pop
xor
mov
mov
ljmp
mov
sbb
out
orl
jb
ret
sub
mov
jle
insl
add
loop
call
test
mov
mov
adc
sti
es
jmp
orl
xlat
movsb
xchg
adc
je
mov
lock
cmp
cmpsb
sub
mov
and
pop
in
lods
movsl
jge
sub
das
mov
jg
dec
pop
cmp
lcall
and
in
sarb
data16
js
mov
inc
test
stos
fimull
lods
decl
cmp
mov
loop
push
in
lods
jl
sub
mov
push
cmp
lods
or
rolb
call
mov
jg
sbb
call
loopne
xor
stos
and
imull
cmp
cmp
push
test
ret
jge
popa
inc
cmp
mov
xchg
mov
aas
test
pop
mov
arpl
out
icebp
decl
pop
test
push
mov
mov
sub
or
or
hlt
mov
bound
jmp
mov
ja
xchg
cmpsb
lcall
mov
mov
jmp
aas
pop
mov
adc
enter
scas
cli
mov
xor
or
xor
call
movsl
in
pop
test
cmp
jp
xchg
repz
cli
add
sarb
lret
sar
ljmp
push
xchg
aam
mov
pop
xor
pop
xchg
cmp
or
adc
inc
pop
mov
push
sub
je
adc
clc
fmuls
or
cld
loopne
cmpsb
xchg
cmp
jecxz
call
sti
sub
stos
push
pop
stos
push
jnp
cmp
scas
loopne
push
sub
ds
aas
lret
dec
xor
xchg
push
sbb
mov
or
xchg
movsb
xchg
scas
fs
adc
lea
data16
call
sbb
popa
pop
in
mov
fwait
adc
push
adc
rcl
stc
mov
incl
cld
popa
and
and
filds
in
inc
shlb
or
fisubrs
push
data16
call
inc
arpl
pop
dec
or
sti
pop
loop
adc
aad
or
and
nop
fdivs
daa
out
add
call
pop
mov
lret
sub
and
decb
dec
mov
pushl
or
jno
sti
arpl
cmpsb
jae
aad
push
fisubs
adc
pushl
movsb
dec
xor
shlb
test
test
imul
add
jg
movsl
arpl
faddp
inc
pop
jb
ljmp
jp
sbb
mov
out
cltd
push
inc
pop
lret
dec
idivl
pusha
cwtl
adc
aas
xchg
fildll
sti
insl
cltd
ret
ss
inc
push
loope
fbstp
lret
je
repnz
stos
imul
mov
pushl
sbb
inc
mov
fists
mov
xor
mov
pushl
sbb
icebp
ljmp
cmpsb
leave
inc
mov
mov
montmul
cmpsb
add
decl
mov
mov
mov
imul
arpl
movsl
add
in
or
movsl
aaa
mov
jae
push
cltd
xor
mov
dec
aaa
enter
adc
js
pushl
add
outsl
stos
fs
stos
sbb
mov
stc
popf
arpl
mov
mov
mov
sti
sbb
sub
or
out
ja
pushl
fs
mov
out
push
inc
sub
mov
cwtl
outsb
ja
jmp
inc
sbb
clc
mov
mov
adc
mov
jecxz
push
cmp
dec
outsb
cmp
rcrb
xor
xor
mov
mov
lcall
cmp
mov
sbb
rcl
hlt
call
or
lret
imul
mov
pusha
jo
xchg
jmp
cmp
xlat
lcall
jle
call
mov
jnp
cmpsl
jecxz
test
sbb
test
jge
outsb
adc
inc
mov
in
scas
insl
insl
es
jmp
mov
inc
push
xor
jo
push
cmpsb
fcmovne
fiaddl
rcrl
aam
call
fcompl
andl
or
or
mov
pushl
xchg
aad
dec
sub
dec
lahf
js
or
mov
xchg
pop
push
fcoms
repnz
mov
inc
aad
push
sub
test
xlat
mov
jmp
and
lret
mov
lcall
xorl
leave
jns
mov
inc
dec
and
pop
je
mov
lcall
insl
pushf
pop
je
loopne
stos
addb
jmp
mov
ffreep
jg
ds
test
pop
dec
mov
push
ret
sbb
sub
ljmp
mov
decl
lods
lds
push
test
clc
movsb
lods
pop
sbb
stos
push
add
das
adc
pushl
shrb
adc
cli
cwtl
jp
stos
jmp
cmp
shl
xlat
push
test
dec
jle
aaa
insl
xchg
jns
call
test
enter
dec
jg
pop
jmp
rcrl
outsb
add
data16
lcall
xor
dec
jge
cmp
or
loopne
arpl
cwtl
inc
jno
aaa
push
decl
les
pop
leave
sub
lret
sub
out
fsts
js
cmp
js
sub
aam
add
cmpsl
test
scas
sahf
inc
pusha
mov
mov
call
mov
sub
mov
fwait
and
adc
and
ret
decl
adcl
repz
sbbl
fdivp
call
decl
xor
pop
loop
les
filds
jle
mov
int3
adcb
call
mov
mov
xchg
cmp
pop
mov
pop
mov
mov
mov
jmp
xchg
sub
nop
cmp
mov
mov
push
cmp
pop
dec
jmp
mov
add
pop
add
js
inc
add
pushf
stos
mov
test
stos
sbb
mov
sub
mov
mov
jg
xchg
outsb
aaa
addl
sbb
fildll
and
jb
ljmp
dec
dec
mov
pop
sbb
int
clc
xor
xor
dec
or
call
testl
loopne
sbb
outsb
and
cwtl
das
push
sub
pop
stc
sti
iret
arpl
andl
dec
loop
pop
xchg
in
insl
icebp
jne
mov
lcall
cld
jmp
jg
imul
push
imull
mov
pop
addr16
xchg
mov
nop
xchg
pop
sub
out
ljmp
jmp
mov
loop
cmp
and
lods
push
pop
xor
sbb
xchg
jmp
dec
push
sar
sbb
jmp
ljmp
imul
call
icebp
cmp
call
inc
and
lock
stc
lret
pop
outsb
xchg
bound
adc
mov
insb
mov
sub
jge
pop
xchg
sbb
sub
mov
mov
call
mov
sbb
ret
mov
push
xchg
xchg
push
cld
popa
sub
lods
incl
lea
xchg
inc
icebp
ret
test
bound
xor
sbb
xchg
push
addr16
push
cmp
or
fcomip
lcall
pop
and
push
orb
and
subl
mov
in
clc
imul
adc
loopne
sub
dec
inc
sbb
or
mov
mov
xlat
rcll
call
test
aad
mov
mov
aas
dec
dec
inc
in
cmc
sbb
jo
pushl
pop
jb
xor
xor
jg
in
add
push
sbb
pop
lods
addr16
decl
adcb
mov
outsl
mov
pop
popf
cmpsl
out
jge
adc
daa
adc
jmp
xchg
and
aad
ljmp
push
dec
popa
or
add
adc
pop
lea
add
jmp
lahf
mov
pop
cmpsl
aam
call
cmpsb
push
inc
or
aad
pushf
mov
jl
lods
mov
cld
aas
sbb
pushl
incl
dec
int
mov
add
popf
loopne
flds
xor
call
loopne
lods
sub
aaa
add
icebp
fs
adc
invd
in
sahf
add
or
js
enter
add
and
pusha
mov
mov
das
clc
push
sbb
jl
xchg
lock
mov
ja
icebp
fwait
test
outsl
sbb
or
push
cmp
lret
fwait
ljmp
jp
push
subl
xchg
push
mov
mov
outsb
test
stos
push
adc
insl
xor
sbb
xor
mov
mov
pushl
pop
hlt
add
mov
fiadds
pusha
test
cld
jmp
loop
out
xor
xor
lds
xchg
mov
lcall
jle
ret
inc
push
repnz
sbbl
rclb
mov
mov
add
pop
movsl
ret
orl
push
dec
or
push
push
mov
push
pusha
mov
cmp
pop
inc
sbb
jnp
pop
inc
sub
out
mov
lcall
jno
gs
xor
sti
mov
or
fs
mov
jl
xchg
mov
push
ja
lcall
inc
mov
lret
ljmp
sub
lock
std
add
in
cmp
xchg
mov
ret
cmp
sbb
pushl
adc
sbb
jns
pop
jne
mov
stc
sub
pop
lock
xchg
pop
add
xlat
or
out
insb
jo
aaa
adc
lock
mov
test
pop
lcall
adc
dec
add
mov
test
ljmp
cmp
mov
jnp
popa
fwait
jb
lock
call
ljmp
fisubrs
jl
out
aas
mov
aas
fistl
decl
push
imul
addr16
ret
cmp
mov
leave
cmpsb
jp
call
ficomps
pop
adc
xor
insb
adcb
inc
cwtl
add
jmp
push
test
pusha
aaa
mov
xchg
dec
mov
pushf
data16
imul
cld
mov
stc
sahf
jle
add
adcb
lods
nop
adc
call
cmpsl
rol
or
or
xchg
cmc
cmp
shrl
mov
inc
andl
clc
pop
aas
shl
jp
xor
cmp
push
jae
jmp
xchg
add
xchg
and
mov
xor
xchg
sarl
sub
mov
aaa
add
jmp
pop
enter
iret
lret
mov
pushl
repz
push
fwait
jmp
jp
jg
push
fimull
into
xchg
adc
sbb
jmp
xor
jmp
push
add
dec
add
add
or
test
cltd
in
jecxz
stos
jg
movsl
fisubrs
inc
push
lock
lock
adc
or
xchg
push
out
adc
imul
sub
pushl
cli
sub
ljmp
push
xor
pop
add
les
sbb
jge
inc
mov
add
adc
fcomps
sbb
add
xchg
test
aas
pushl
mov
sub
mov
cli
jmp
xor
popl
mov
lods
xchg
mov
into
insb
lds
decl
cwtl
pop
mov
rolb
andb
lahf
orl
push
shll
mov
test
xor
mov
push
push
push
push
xchg
sbb
add
lret
cltd
xchg
cmp
dec
sbb
pop
lcall
dec
mov
fists
fiadds
sbb
and
sahf
lret
std
lods
decl
sbb
xchg
mov
mov
xchg
sbb
rclb
sub
idivb
incl
cmpsl
jbe
dec
mov
sbb
dec
xchg
pop
jge
inc
out
pop
jl
xor
incl
fscale
mov
stos
in
dec
fcoml
mov
cli
out
les
adc
jno
and
out
dec
nop
addr16
fidivl
inc
rcrl
xor
adc
cmp
out
mov
ljmp
int
in
sar
xchg
sbb
pusha
pop
rorb
lcall
adc
mov
in
cs
rclb
xlat
push
inc
mov
popf
xchg
dec
adc
loopne
sbb
sahf
adc
sahf
cmp
cmc
addl
out
pop
pop
clc
and
call
dec
out
mov
aam
jp
jbe
mov
jno
ss
popa
movb
shll
call
fcmovb
sti
outsb
mov
or
sbb
and
in
xchg
push
mov
call
daa
repnz
lds
icebp
jp
cld
popa
pop
loope,pn
out
cmp
add
sub
mov
adc
cmp
mov
mov
jg
xor
push
push
xor
mov
pop
rcl
rorl
ljmp
les
test
mov
addb
stos
sahf
or
ljmp
outsb
pop
xchg
sahf
aad
enter
lret
pushf
subl
testl
out
xor
mov
add
jbe
dec
xor
pop
adc
addl
cwtl
cmc
inc
in
sbb
fisubl
adc
push
sub
push
and
or
dec
dec
or
loop
data16
ljmp
mov
enter
cmp
icebp
dec
dec
aam
pop
lods
mov
int
dec
movsb
inc
sbb
fisttps
cmp
pop
and
sub
mov
jg
adc
mov
mov
ret
out
dec
sti
lock
les
xor
aaa
sub
mov
int3
and
mov
xor
lods
and
and
inc
mov
mov
pop
jo
or
outsl
insl
xchg
cmp
sti
int
inc
mov
mov
xchg
xchg
mov
in
movsl
repz
push
jge
scas
sub
push
outsl
xor
fcomip
push
cld
mov
insl
pop
mov
mov
pop
mov
sbb
jmp
daa
std
xchg
mov
ficoms
cmpl
rcrb
or
add
sti
imul
or
mov
out
and
out
add
fisubrl
xchg
jno
in
hlt
test
push
mov
sbb
mov
std
call
test
mov
lods
hlt
pop
dec
sub
in
cli
lahf
add
mov
mov
lock
rcrl
sub
in
mov
call
mov
mov
jmp
test
mov
add
ljmp
scas
xor
fdivrl
inc
xchg
pop
add
mov
jbe
int
and
inc
and
xor
call
pop
jge
mov
push
xlat
jg
xchg
mov
pop
or
or
add
xchg
cmc
add
sub
scas
pop
clc
ljmp
shlb
push
nop
shl
shll
xchg
sbb
or
adc
std
pop
cmc
jmp
iret
fsubrl
dec
jecxz
xor
mov
pushl
pusha
imulb
out
mov
nop
cmp
pop
scas
cmp
mov
inc
jae
mov
ljmp
inc
cmp
pop
inc
add
push
sahf
mov
xchg
sbb
sub
loopne
shll
cmp
push
jmp
mov
and
outsl
xor
incl
ror
jge
cltd
cmp
sub
sub
pushf
pushf
ret
dec
mov
mov
mov
ljmp
dec
dec
push
pop
sbb
aam
pop
mov
je
mov
js
sbb
pop
lock
cmp
ja
xchg
fcomps
jno
or
sbb
iret
icebp
dec
lods
jo
bound
or
jmp
hlt
es
pop
xor
or
in
inc
push
add
fildl
pop
repnz
ljmp
pushl
scas
mov
lcall
mov
loopne
cmpb
mov
jne
in
fcomip
pushl
inc
cltd
in
jno
rol
jmp
stos
pop
cli
fs
ret
cmp
mov
jecxz
sub
addr16
pop
je
inc
xchg
je
sub
push
scas
xor
insb
fwait
pcmpeqw
out
clc
jnp
fiaddl
jg
ljmp
cmc
push
fs
inc
fcomip
or
mov
cmp
mov
rsqrtps
fnstsw
mov
sar
cmp
rolb
addl
inc
mov
jnp
loop
mov
test
mov
pop
jp
jg
mov
xchg
push
bound
out
sarl
test
out
decl
lock
dec
imul
aas
mov
push
pop
sbb
xor
nop
aam
jmp
clc
cmp
loopne
aad
in
push
inc
lods
push
jns
lods
test
movl
call
cld
cld
enter
lret
sub
movsb
aas
rorb
rorl
mov
mov
sbb
decl
out
mov
dec
ljmp
aas
push
aad
dec
pop
test
dec
jbe
iret
je
mov
push
and
incb
cmpl
jns
std
stc
test
jp
inc
mov
push
mov
in
jg
int3
loopne
jns
loop
cltd
mov
jns
shrb
adc
push
pushf
xchg
mov
and
arpl
call
sbb
std
ja
test
add
mov
iret
les
adc
jnp
pop
lret
ret
sub
pop
add
jecxz
stc
xor
call
mov
xor
out
imul
cmpsb
imul
adc
lock
pushl
cli
inc
test
pushf
jno
clc
or
mov
mov
cs
jae
out
ljmp
sub
cmp
incl
mov
out
in
pop
xor
add
stos
ss
xor
outsl
cli
push
jle
adc
push
adc
jo
mov
daa
stos
add
jmp
les
adc
sbb
xchg
mov
xor
out
dec
xchg
mov
movsl
inc
in
mov
pop
xchg
inc
incl
cmp
pop
stos
push
sahf
gs
in
xlat
lret
pop
mov
aad
sub
pop
sub
and
xchg
mov
xchg
mulb
inc
imul
daa
dec
in
cmp
jb
push
cmp
popf
enter
mov
lea
gs
ret
xor
decl
adc
int
out
sub
test
jo
fcos
lcall
sbb
jg
daa
add
dec
xchg
adc
mov
xlat
xchg
xchg
or
and
xchg
sbbb
mov
jge
push
in
add
outsl
clc
jmp
popf
pop
sahf
push
inc
fadds
cld
pop
and
sub
jmp
gs
xor
jg
outsl
in
or
push
outsb
pushf
rorl
sar
les
call
ret
cmp
cmpsb
sub
arpl
dec
fs
je
lcall
decl
xchg
push
andl
cmp
jno
ret
or
jmp
jae
mov
fs
aad
sbbl
add
dec
jo
pop
cli
decl
push
ret
dec
icebp
std
xor
mov
faddl
ret
nop
pushl
outsl
neg
nop
subb
ret
adc
pop
ljmp
sar
incl
lods
in
jl
sbb
xorl
xlat
cmpsl
aam
mov
xchg
lcall
adc
cmpsb
sbb
add
repz
js
and
pop
pop
cmpl
cmpsb
cmp
call
movsb
fucomi
pushf
cmp
scas
dec
sbbl
adc
jmp
test
dec
and
arpl
decl
add
mov
in
push
adc
inc
mov
dec
mov
enter
xor
call
fildl
imul
ds
adc
ljmp
xchg
out
mov
insb
pop
out
mov
int
or
lret
push
mov
mov
push
add
xor
int
ss
in
jo
insl
std
int3
push
add
enter
stos
decl
xor
lcall
in
dec
inc
ret
push
iret
test
fisttpll
adc
decl
in
cwtl
and
xor
or
loope
sbb
inc
movsb
add
xchg
repnz
adc
adc
or
and
fbld
xchg
cmc
loop
arpl
mov
xchg
hlt
in
inc
dec
push
es
xchg
stc
shl
xor
mov
mov
stos
pop
aaa
ja
xor
aas
jbe
xchg
mov
sub
popa
add
mov
mov
mov
in
daa
sbb
adc
cmp
add
call
dec
adc
add
test
enter
dec
sbb
jle
and
ljmp
scas
add
imul
push
lods
fs
mov
sub
out
icebp
add
std
ljmp
adc
push
stc
push
test
jecxz
mov
adc
cwtl
pop
push
testl
sarl
stc
insb
ja
and
outsb
adc
cmc
xchg
lahf
idivl
sub
sub
or
icebp
cld
push
test
aas
out
dec
in
repnz
dec
xor
cmp
jle
loope
loopne
decl
or
out
lahf
dec
bound
out
addr16
xor
mov
repnz
pop
std
pushl
adc
mov
mov
adc
pop
push
mov
or
or
std
incl
mov
add
mov
jnp
cwtl
data16
incl
and
pop
mov
sub
cs
out
loopne
sub
dec
fisubrs
xor
stos
xor
or
std
pushl
pop
gs
ljmp
dec
sub
out
call
mov
fdivl
movsl
in
cltd
ret
xlat
lcall
lods
push
imul
sbb
inc
out
push
test
mov
pop
pop
ret
pop
fists
push
cwtl
mull
jns
bound
and
jge
push
push
fdivrs
fs
lcall
inc
cld
jecxz
and
fistl
bound
dec
sbb
scas
call
popf
cmc
xchg
notb
orl
loop
test
leave
adc
mov
sub
dec
sub
outsl
dec
xor
xchg
cmp
std
jno
cmpl
call
stc
jo
fmull
lds
cmpsl
push
pop
and
mov
sbb
jg
pop
sbb
xchg
div
andl
dec
jns
xor
lea
mov
mov
sbb
xor
rcrl
mov
es
xor
insb
push
je
jg
mov
out
pop
test
push
mov
xchg
mov
mov
or
push
mov
incl
pop
pushf
and
jb
jmp
or
imul
push
imul
sbb
aad
mov
js
call
bswap
mov
xor
pop
cmpsl
fildl
jbe
fwait
and
ljmp
icebp
gs
xor
inc
pop
aam
sub
push
repz
enter
ljmp
aad
sub
add
mov
pop
pop
mov
cltd
lods
cmpsb
sbb
int
mov
pushl
mov
out
sub
popa
enter
insl
or
adc
lods
cli
inc
cmpsb
adc
jae
in
dec
mov
xor
and
push
out
ljmp
pop
aad
stos
push
in
xor
lds
and
jmp
aam
mov
call
pop
or
mov
push
xor
lahf
fcmove
outsl
bnd
fidivrl
sar
ljmp
jb
mov
jns
loopne
mov
insl
sub
mov
and
fcoml
dec
pushf
mov
ljmp
repnz
sahf
mov
xor
cld
hlt
cld
testb
cmp
lahf
adc
push
mov
das
xchg
cwtl
add
push
fldt
add
cmpsb
cld
or
fistpll
push
cmpsb
dec
js
mov
incl
rclb
xlat
enter
xor
movhps
jl
hlt
stos
dec
fbld
jbe
data16
xchg
mov
jns
std
mov
xor
ljmp
test
idivl
mov
stos
adc
xlat
mul
sti
movsb
rolb
jmp
pop
aas
xorl
clc
jbe
adc
push
mov
sti
adc
lcall
mov
sub
fimull
movsl
or
stos
inc
pop
decl
mov
movsb
mov
ljmp
hlt
shll
aad
xchg
out
jno
or
dec
std
aad
pusha
gs
pusha
or
jmp
lret
mov
lock
push
mov
pop
fwait
mov
ror
icebp
js
mov
push
je
shrb
into
jno
inc
inc
in
mov
sbb
push
jne
enter
sbb
xchg
jae
mov
call
subl
int
ljmp
xchg
insb
lea
add
push
cwtl
out
sar
adc
sbb
imul
adc
xchg
cmp
gs
xchg
popf
loopne
hlt
inc
into
mov
das
mov
inc
aaa
adc
or
not
enter
jbe
xchg
lods
test
xchg
xchg
xchg
in
mov
loopne
inc
in
and
cwtl
xchg
into
mov
inc
iret
inc
stos
jne
sub
mov
push
stos
out
sarl
imul
cmp
push
out
pop
popa
xchg
add
jle
clc
in
fs
imul
xorb
incl
scas
inc
cmpsb
sbb
je
push
mov
js
jo
lret
gs
aam
ficompl
adc
decl
mov
iret
xchg
insb
jg
stos
mov
adc
ret
jbe
in
or
cmc
ja
lcall
jmp
xchg
adc
inc
insb
test
outsl
ss
push
inc
leave
shrb
push
aam
lret
push
mov
pushl
mov
pop
or
sub
filds
hlt
icebp
imul
lods
call
call
adc
lret
outsl
icebp
push
pop
mov
jns
loope
push
inc
sub
aad
loop
adc
addb
outsb
jb
pushf
sub
push
loopne
add
decl
adcb
icebp
jle
lds
and
loop
sahf
xor
call
add
fs
and
ljmp
fstpt
xor
hlt
rcrb
out
sbb
js
sbb
outsb
iret
stc
arpl
mov
jg
cltd
cld
push
cmpsb
pop
xorb
test
mov
sti
push
lahf
mov
popa
fld
sbb
jo
imul
mov
pushl
and
mov
sbbl
in
or
push
push
in
jne
call
call
mov
fs
dec
xchg
clc
or
lahf
in
pushl
stos
scas
xchg
je
jnp
xchg
adc
int
and
sub
mov
call
pop
sti
mov
push
xchg
dec
mov
dec
inc
cmp
stos
and
or
pushl
test
jmp
inc
cwtl
cltd
inc
or
add
pop
xor
iret
rcrb
sub
lret
outsl
xor
inc
sbb
mov
gs
xchg
inc
sbb
aam
mov
inc
out
leave
icebp
ljmp
sub
sub
and
scas
mov
xor
jno
push
lcall
mov
push
adc
jecxz
aaa
inc
and
movsl
or
lock
fs
cmc
pushl
adc
add
test
jge
sbb
nop
sbb
mov
enter
movsl
fwait
or
dec
rorl
inc
or
dec
dec
push
sub
lahf
je
call
inc
mov
push
mov
mov
pop
in
push
in
iret
incl
les
mov
fwait
data16
xchg
pusha
inc
mov
cmpsl
out
adc
lcall
push
push
cld
push
movsl
mov
int3
sub
jbe
fadds
fcos
call
rolb
cmp
mov
jge
mov
inc
xor
pop
call
xchg
xchg
andb
sbb
dec
add
lret
xchg
and
shll
pop
incl
and
cmpsb
dec
mov
jne
push
jle
dec
sbb
jae
call
rclb
notb
mov
lock
pop
push
lock
xor
pushl
adc
test
dec
mov
lret
dec
loop
pop
push
flds
std
mov
jmp
lret
mov
mov
test
mov
adcb
jmp
mov
test
cmp
mov
fneni(8087
in
lret
jg
lods
out
gs
and
mov
loop
aas
je
xchg
pop
sbb
or
xchg
and
mov
jne
movsb
stos
mov
and
and
dec
incb
inc
and
xor
dec
stc
js
arpl
cmpsb
mov
jg
iret
insl
aaa
sub
cmp
bound
std
leave
shl
inc
loopne
jne
mov
pusha
aaa
push
sub
pop
enter
mov
pop
pusha
pop
ss
out
mov
push
cs
sahf
das
rolb
cmc
sub
pop
add
ljmp
rorb
bound
andb
pop
xor
adc
lcall
repnz
mov
loop
imul
adc
das
aas
or
pop
xorb
push
pop
add
sbb
ljmp
lock
filds
jmp
cmp
add
fdivrs
mov
jno
repnz
dec
pusha
mov
lock
mov
rclb
icebp
mov
or
aam
jae
jmp
inc
xchg
adc
and
inc
incl
stc
xchg
xlat
mov
add
sub
mov
jmp
push
mov
pop
add
adc
jae
inc
push
mov
in
push
outsb
das
jo
dec
or
lcall
push
pop
outsb
std
mov
aaa
jg
dec
pushl
cmpb
mov
xor
cmpsb
or
incl
xchg
lods
pop
add
pop
dec
mov
xor
jl
mov
dec
jp
jbe
sbb
jbe
adc
ljmp
and
lds
xchg
test
decl
jo
push
dec
cmpsl
test
testb
pop
mov
cmp
ljmp
stos
cld
aas
scas
sbb
cmp
sahf
mov
cmp
es
mov
incl
fwait
loope,pn
push
cli
sub
out
lahf
lahf
shll
incl
ret
cmp
out
ljmp
call
mov
inc
inc
jno
mov
repz
out
adc
mov
inc
push
push
aam
sbb
mov
jg
imul
daa
adc
pop
int
sahf
stc
jp
loop
fdivl
fstps
jns
mov
mov
inc
cmc
insb
testl
mov
cmpl
pop
inc
ljmp
and
rol
jo
cli
lds
in
cmp
cmp
es
push
inc
push
outsl
xchg
mov
and
or
fsubrl
mov
jmp
into
test
call
call
ja
iret
push
loop
xchg
ja
stc
call
adc
incl
mov
fsub
xchg
jp
insb
or
out
push
shll
arpl
incl
sbb
or
jo
and
cmp
bound
frstor
jno
clc
sub
leave
push
in
xchg
dec
xor
mov
dec
mov
scas
xchg
jle
lahf
jo
cmpsb
int
lcall
push
xchg
movsb
mov
adc
ljmp
nop
and
and
fdivrs
lods
repz
shrb
sbb
repnz
lcall
cmpsl
pushf
push
mov
jmp
add
mov
lcall
clc
stos
mov
push
cwtl
inc
and
mov
mov
jle
xor
push
call
lds
iret
sub
std
decl
xchg
sbb
and
pop
pop
pop
mov
adc
cwtl
call
data16
jecxz
or
mov
cli
sahf
fists
cmp
cld
sahf
push
jmp
xchg
test
xchg
andb
mov
xchg
test
and
loopne
adc
stos
dec
jl
std
movl
add
incl
gs
jae
jecxz
mov
ret
mov
lret
push
movsb
sarl
push
scas
mov
pop
cld
scas
adc
jg
push
shr
insl
pop
imul
add
pusha
repz
xor
push
xor
mov
cli
sub
sbb
mov
mov
mov
mov
mov
push
fwait
jno
inc
add
push
shll
sbb
push
or
sub
sub
clc
mov
rcr
fs
repnz
cwtl
cs
sti
inc
mov
xchg
test
dec
mull
fbstp
xlat
or
fisubrs
push
ret
xchg
ptwrite
xchg
mull
aaa
lock
jno
mov
bound
dec
jnp
movsl
fwait
xor
fsubrl
ret
inc
xor
push
std
test
lods
fnstcw
mov
cmp
aaa
dec
fucomi
dec
ret
dec
lret
into
insb
into
sti
or
mov
mov
mov
icebp
sub
test
lcall
jbe
or
mov
ret
nop
sahf
sub
popf
lods
hlt
cmpsl
cmp
lcall
xchg
out
xchg
dec
std
pop
lods
ret
ret
cmpsl
pop
sub
jne
jo
adc
xor
mov
popl
cli
lcall
lea
and
mov
sbb
ja
data16
scas
mov
call
jl
mov
jns
mov
pushl
testb
push
cld
lcall
arpl
cmp
sub
mov
clc
mov
lcall
push
xchg
mov
pop
push
jp
sarl
xor
ljmp
out
cmp
or
adc
scas
int
jmp
sub
incl
daa
rcrl
sahf
mov
cmp
push
sbb
int
mov
dec
xor
call
xchg
mov
in
xchg
cmp
mov
fdiv
or
pop
add
incb
stc
jecxz
sar
ret
stos
lcall
add
add
cmp
mov
mov
push
pop
fcmovnu
dec
add
jnp
dec
sahf
lock
ljmp
lock
xchg
test
dec
lods
push
stos
mov
pop
lock
insb
lcall
ljmp
push
movsb
xor
xor
or
ficoml
push
push
or
inc
or
adc
inc
xchg
push
xor
mov
xor
sahf
ja
repnz
pushl
roll
cmp
rorl
sub
inc
dec
mov
xchg
addr16
mov
fidivrs
lcall
mov
inc
dec
int
pushf
outsl
xor
inc
nop
outsl
jne
adc
aas
mov
nop
popf
shll
xchg
dec
mov
jecxz
mov
sbb
mov
out
push
lcall
add
mov
enter
cmp
or
add
fsubrs
scas
adc
test
in
cmp
add
lods
les
add
jb
lret
scas
pop
xor
adc
addr16
lcall
sbb
inc
sub
addb
jg
push
push
sti
clc
or
mov
push
pop
push
pop
jp
pop
sub
jmp
mov
and
xchg
lahf
mov
xchg
push
xlat
cmc
inc
fdivr
cmp
jge
fs
call
lods
jne
mov
mov
rcr
cli
cltd
pop
xor
cltd
pop
shlb
scas
pop
sbb
sarb
paddusw
in
inc
adc
out
dec
arpl
pop
ljmp
lahf
sbb
jne
sbb
dec
pop
xorl
rcrb
jmp
adc
pop
cmp
add
popa
dec
stc
into
in
in
setne
popf
cmpsl
loope
shlb
pop
shrl
je
cwtl
movsl
pushf
repz
inc
sbb
popf
cmp
sbb
out
add
data16
inc
fdivs
xor
sub
dec
sbb
enter
adc
sbb
mov
dec
test
mov
shr
mov
adc
xchg
out
cmp
mov
popf
jg
in
subl
xchg
push
pushf
popf
sbb
imul
mov
lret
dec
ljmp
mov
jl
imul
push
mov
into
xchg
pop
or
decl
xor
fsubrs
int3
js
notl
mov
xor
nop
add
incl
bound
cmp
dec
jecxz
loop
mov
ror
or
push
fbld
jns
loopne
mov
loop
cwtl
sub
test
adc
mov
pushl
cld
in
movsb
xchg
dec
cmp
shll
stos
cmp
sbb
push
repnz
loope
decl
cmp
enter
lods
xchg
shlb
imul
fsubp
fstpt
dec
mov
cmpsl
push
int
ret
xchg
inc
sbb
cld
dec
mov
shrb
scas
hlt
call
outsb
out
sub
aas
iret
repnz
push
inc
loopne
push
pop
sahf
inc
xor
xchg
stos
and
mov
mov
cwtl
mov
sub
ljmp
rcrl
and
jl
mov
jae
jbe
mov
ja
adc
movb
and
xor
or
jg
mov
test
lret
dec
in
lds
mov
jmp
pop
cld
dec
pop
sub
push
pop
mov
shrb
jge
sti
lods
in
mov
in
clc
jmp
dec
inc
stos
pop
jge
cmpb
aam
xchg
fdivl
pop
push
mov
pop
adc
lds
sbb
orb
push
adc
sbb
jg
pushl
jmp
inc
orl
dec
push
je
mov
lods
aad
dec
or
in
fwait
push
cld
gs
mov
or
and
xchg
jg
jo
adc
loopne
sub
fisubs
push
stos
jmp
mov
outsl
das
pop
pop
lock
mov
inc
leave
push
fiaddl
call
push
pop
in
mov
xchg
int3
mov
sub
mov
push
dec
jp
mov
bound
popa
arpl
in
data16
add
mov
pushl
jo
adc
jp
es
mov
addr16
xor
call
push
push
cld
inc
cmp
jp
call
dec
push
int3
insb
push
fisubrs
pop
sbb
addr16
call
enter
mov
loop
sub
sbb
mov
popf
mov
xchg
jns
decl
orb
out
pop
push
stc
jmp
xchg
loope
inc
pop
mov
push
and
test
jmp
loope
jmp
mov
lods
orl
jg
out
xchg
mov
les
and
mov
lds
ficompl
pushl
pop
xor
lods
imul
mov
popa
push
leave
mov
ror
mov
pop
lock
dec
loope
aas
xchg
inc
lcall
mov
cli
inc
out
xlat
dec
xchg
repnz
stos
cmp
andb
rcrb
and
mov
or
adc
jmp
fstpt
mov
push
loop
mov
fsub
cwtl
cmp
movsb
or
incl
inc
mov
cld
jo
mov
jge
ds
dec
push
adc
out
push
jmp
call
sbb
gs
rclb
mov
add
mov
pushl
jp
sub
int
adc
enter
and
jns
test
jmp
jg
dec
outsl
mov
and
fisttpl
aam
movsb
push
pop
pop
loopne
mov
shrb
decb
rclb
icebp
mov
mov
jmp
xchg
cmp
sub
movsb
hlt
inc
jge
testl
mov
test
into
loop
ljmp
sbb
xor
add
sub
jno
xchg
popa
inc
cmpsl
sbb
outsb
cli
mov
fisttps
pusha
decl
and
lea
add
sbb
inc
xor
cmp
sbb
inc
xor
fs
lcall
cwtl
es
stos
fwait
inc
enter
ja
mov
jmp
cmc
shrl
xor
inc
incl
frstor
cmpsb
add
in
lret
insb
imul
mov
fwait
sbb
addb
outsl
cli
pushl
insl
xor
jae
pop
not
add
dec
dec
xchg
xchg
lcall
cmp
dec
cmp
or
lds
movsl
fwait
jl
cwtl
mov
mov
call
pop
dec
jl
push
test
pop
or
imul
xor
dec
inc
cmp
dec
lret
aaa
pop
xor
movsb
sbb
jmp
fsubl
or
dec
sub
and
cmp
adc
xor
dec
aas
mov
call
ss
jno
mov
cmp
cmp
insb
cmp
pop
pop
mov
fists
je
or
cld
imul
add
adc
shrb
sbb
push
aam
mov
sbb
cmp
pop
cmp
inc
push
jmp
jno
stos
inc
icebp
sbb
ds
fildll
popf
cli
repz
cmpsb
icebp
sbb
scas
ljmp
xor
sub
cltd
popa
inc
testl
arpl
cmc
xchg
std
cld
leave
mov
ljmp
shll
notb
dec
mov
outsl
clc
jne
sbb
sbb
lcall
pop
xchg
das
dec
add
addr16
and
mov
filds
mov
inc
adc
cmpsb
jmp
jp
and
push
testb
dec
adc
dec
sahf
sti
ljmp
and
push
pop
decl
addr16
out
cmp
movsb
inc
fiadds
cmp
leave
mov
stc
out
insl
hlt
sbb
in
cltd
mull
repnz
divb
adc
cwtl
pop
xchg
add
incl
mov
ret
mov
inc
add
int
and
call
stos
mov
enter
xor
xor
decl
xchg
push
loopne
cwtl
test
pop
push
lock
jno
inc
lcall
int
nop
loope
or
out
das
inc
mov
xorl
lret
mov
les
xlat
sarl
mov
sahf
jo
dec
stos
jg
lret
xchg
dec
ud0
dec
cs
jl
sbb
mov
mov
lcall
jns
dec
and
jo
incl
inc
xchg
adc
inc
popf
ret
pop
or
or
sbb
pushf
int
adc
ljmp
or
or
lods
mov
hlt
mov
pop
leave
dec
xchg
dec
out
push
incl
mov
dec
cmp
and
mov
mov
negb
ret
and
pushl
jo
push
sbb
xchg
pop
sbbb
sbb
aad
and
mov
jl
stc
jno
fisubrs
mov
cld
mov
or
stos
sub
lcall
cld
pop
push
jg
jge
mov
mov
push
mov
mov
cltd
mov
push
enter
incl
scas
imul
lret
jecxz
jecxz
lcall
push
lock
je
xchg
icebp
fidivrs
call
pusha
ret
mov
adc
xchg
inc
pop
push
ficompl
jns
jns
push
push
cli
incl
hlt
daa
jge
lahf
fildll
int
xor
arpl
mov
ljmp
mov
fisttpl
cmp
negb
mov
decl
insb
lods
push
fucomp
jl
xlat
out
push
cs
cmp
cmpsb
xlat
inc
sub
scas
adc
cld
jmp
mov
mov
fxch
mov
jg
into
pusha
mov
dec
aam
das
xchg
dec
outsb
std
cmp
mov
push
mov
jg
push
addl
push
push
clc
pop
lods
movsl
adc
push
pusha
das
sub
decl
pushf
jmp
mov
inc
xchg
enter
lods
fisubrs
jb
imul
fldcw
jne
push
xor
xchg
sbb
cmp
repnz
stos
call
sub
fbstp
sbb
adc
int3
outsb
push
mov
mov
rolb
scas
clc
call
lahf
push
mov
push
bound
lcall
jmp
push
rcrb
movsl
aad
dec
sahf
fsts
jp
and
loop
ds
rorl
icebp
sub
jmp
add
xor
mov
dec
xor
das
incl
sbb
fsts
cmp
sbb
jne
xor
rcll
jg,pt
fadd
jno
jbe
addb
pmaddwd
call
daa
test
adc
mov
inc
jae
insb
inc
mov
cld
sar
cmp
xchg
mov
mov
incl
rolb
mulps
xchg
add
or
cmpsl
lahf
ja
das
cmp
pushf
sbb
jno
incb
push
test
and
ss
cld
movsl
adc
lea
into
jg
mov
add
out
mov
xor
xor
push
push
je
mov
js
loop
jmp
or
dec
dec
out
in
scas
jb
or
lds
pusha
or
sub
jmp
mov
fbstp
int
mov
sub
mov
push
pop
call
mov
xor
add
and
lcall
mov
sar
clc
ja
fsubrl
pop
rcrb
or
or
add
mov
loope
pushf
mov
push
pop
push
sbb
jle
data16
lret
loop
mov
lahf
cld
pop
dec
xchg
push
scas
push
movsb
sub
mov
notl
jne
outsl
mov
xchg
sub
mov
outsb
mov
jb
pop
enter
test
pop
add
loope
cmpsl
call
test
dec
rcr
fistps
nop
xchg
inc
stc
outsl
push
outsl
pop
mov
jno
mov
xchg
mov
decl
ljmp
insb
cmc
add
mov
loopne
aam
inc
adc
iret
jg
lcall
nop
dec
je
arpl
sbb
mov
loopne
adc
pushl
add
pusha
or
mov
xor
cli
popa
inc
push
loopne
pop
push
jno
stos
arpl
mov
mov
cmp
imul
cmp
fwait
jnp
nop
pop
and
ss
ds
sub
push
mov
mov
call
push
and
cltd
popa
lea
testl
push
pusha
fincstp
dec
clc
call
cs
repnz
mov
xor
mov
cmp
sbb
mov
sbb
push
rorb
push
jno
insl
xlat
rcrb
jo
or
lcall
fisttps
movsl
out
add
cmp
call
xchg
xor
inc
repnz
call
and
dec
cmp
inc
cltd
int
adc
pop
lcall
clc
push
gs
xor
pushl
clc
xor
fidivrs
loopne
sbb
testl
adc
or
es
inc
pop
or
add
stc
mov
movsb
js
sub
mov
inc
int3
std
scas
adc
mov
stos
ss
push
call
movsb
lds
and
or
jo
das
clc
cmp
xor
inc
testb
lods
xor
sub
int
mov
jmp
in
sbbl
sbb
sub
iret
jmp
jns
out
inc
xchg
and
cmp
jg
xor
adc
js
in
and
int3
add
lea
test
cmp
pop
lcall
jecxz
lods
sub
enter
jne
call
jle
stos
out
sbb
sar
clc
pop
adc
push
sub
mov
xchg
inc
fsubl
popa
jbe
out
js
fsts
out
jg
add
jmp
ds
sbb
fldcw
lret
mov
fstps
jmp
pusha
inc
push
or
jp
and
bound
scas
adc
jae
mov
lcall
decl
outsl
in
cmp
mov
insl
inc
lods
jnp
test
stc
push
jmp
adc
nop
or
pusha
movsl
ficoml
mov
movsl
repnz
in
adc
nop
or
sub
fdivr
lcall
mov
and
push
mov
adc
pop
mov
xor
jg
jnp
lock
jg
pop
fwait
cmovle
mov
test
add
enter
or
rclb
mov
stos
adc
or
xchg
dec
in
cmp
dec
ficompl
int3
mov
inc
and
jne
push
jge
addr16
add
sarb
imul
sarb
cmp
addb
adc
das
int3
fisubl
add
adc
ljmp
clc
ret
add
pop
pushf
mov
stos
mov
cmp
sub
sbb
popl
in
out
jo
lods
orb
clc
shll
je
pop
pop
mov
mov
mov
nop
sbb
lret
cmpsl
sbb
sahf
enter
jmp
mov
jmp
pushf
nop
fsts
sub
add
data16
loop
insl
test
fwait
lods
adc
ljmp
and
mov
and
sti
call
in
aaa
mov
das
mov
decl
in
dec
pop
mov
outsl
das
mov
dec
push
pop
mov
mov
sbb
mov
lcall
cmp
pushf
push
mov
fdiv
cmp
in
and
test
xor
dec
nop
jp
dec
leave
daa
stc
dec
cmpsb
xchg
xchg
xchg
hlt
shll
sarb
clc
and
mov
cli
push
jb
push
aam
rcrb
mov
push
mov
sbb
inc
pushf
scas
lcall
ljmp
in
push
jbe
mov
xchg
out
cmp
cs
sbb
outsb
lock
call
gs
add
rcr
mov
rol
inc
scas
mov
jmp
push
mov
push
faddl
lock
adc
lahf
mov
enter
sarb
xor
sbb
xchg
loopne,pn
mov
and
xorb
js
repnz
daa
dec
daa
fdivl
out
jnp
out
pushl
xchg
xchg
and
into
pop
xlat
out
mull
jnp
scas
bound
orl
inc
jbe
hlt
call
mov
enter
lret
fldl
dec
outsb
push
fwait
push
pusha
pusha
push
sub
gs
jg
push
add
xchg
test
ss
fnstcw
js
lcall
pushf
inc
js
pusha
out
fcompl
adc
dec
add
ljmp
push
dec
and
fwait
call
or
clc
jg
divb
stos
inc
xor
in
push
int
lret
hlt
cmp
mov
add
sbb
ss
repnz
leave
pushl
sbb
pop
mov
negb
sti
cmp
mov
mov
rclb
pushl
inc
push
bound
cmp
jne
in
pushf
repnz
fisttps
mov
mov
mov
mov
add
xor
in
movsb
cli
sub
stos
pushl
popa
inc
notb
push
cmp
popf
ret
or
xor
ljmp
stos
mov
add
inc
xor
lods
data16
lock
push
test
incl
mov
pop
nop
mov
ja
dec
and
cwtl
dec
stc
hlt
clc
call
add
pop
cmc
pushl
add
stos
add
pop
andl
mov
pop
ja
push
fxch
mov
cmp
cwtl
lret
and
orl
mov
std
aaa
std
jge
stos
int
dec
popa
adc
arpl
xor
sbb
mov
push
movsl
jae
sbb
hlt
add
loopne
pop
stos
ds
xchg
jecxz
fsubs
dec
test
test
lock
pop
lcall
test
in
inc
mov
aad
ljmp
pushf
lcall
lcall
add
test
sti
movsl
call
aaa
dec
xlat
lcall
mov
xchg
pop
mov
push
rcll
ljmp
pop
cmp
xchg
aam
out
jl
pop
cmp
and
bound
lods
pop
or
ljmp
test
sbb
dec
inc
dec
mov
dec
push
pop
lret
cld
add
push
cmpsb
pop
mov
push
outsb
push
fidivrl
and
clc
cmpl
push
inc
out
mov
aas
movsl
lock
cmp
lods
jle
dec
xchg
iret
adc
mov
cmp
mov
icebp
ret
cmp
cmpsb
leave
das
and
int
sbb
sub
push
jae
mov
int
decl
lods
mov
cmpl
ffreep
mov
pop
or
pop
stc
insl
dec
mov
xchg
fwait
aas
jmp
dec
ljmp
mov
xchg
das
fwait
mov
test
rcll
out
jb
mov
lcall
add
or
pop
mov
push
inc
daa
mov
cld
jp
adc
mov
ds
cltd
js
scas
inc
arpl
lret
sub
rorb
stc
call
jmp
rorl
aad
rorl
scas
jl
into
sub
push
sub
cmp
and
and
decl
ja
cmp
pop
pop
sbb
imul
test
std
adc
pop
out
mov
dec
lock
push
mov
mov
out
inc
arpl
repz
jno
imul
lcall
pop
mulb
mov
call
aad
adc
cmp
test
jge
push
loopne
add
add
pop
lahf
or
movsl
pop
jne
push
add
mov
incl
fs
mov
std
dec
xlat
stc
xchg
movsb
dec
or
je
sahf
xor
sar
dec
pop
out
hlt
fbstp
decl
dec
jmp
pop
mov
out
mov
repz
scas
inc
or
xchg
cs
mov
cmp
inc
lcall
adc
adc
mov
sarl
mov
push
decl
popa
popf
out
xchg
das
dec
repz
dec
add
jnp
ss
pop
pop
or
stos
arpl
fbstp
fcomip
dec
lods
mov
xchg
movsb
or
outsl
dec
test
dec
sti
into
inc
adc
lcall
mov
push
mov
push
lea
icebp
out
pop
out
lcall
movsl
imul
orb
or
mov
mov
cmp
mov
push
outsb
jns
in
lret
mov
stc
xor
inc
inc
addr16
sbb
mov
pushl
nop
sbb
sbb
je
das
mov
movsl
test
orb
lret
dec
push
pushf
rorb
jmp
or
pop
mov
add
mov
je
mov
jb
mov
mov
jmp
pop
pop
push
decl
push
mov
repz
ljmp
test
jo
push
mov
adc
mov
outsb
dec
loop
xorl
out
cli
std
jge
push
pushf
dec
adc
cmp
mulb
pop
jno
push
lcall
jg
in
cmp
and
cld
cwtl
stos
hlt
cmp
clc
mov
repnz
pushl
les
mov
mov
imul
pop
fstpl
push
out
mov
mov
xor
fmul
sahf
dec
arpl
adc
push
ret
in
add
mov
dec
lret
mov
inc
push
jb
cmp
jo
in
and
adc
das
cmpsb
loopne
xor
pushl
repz
addr16
xor
dec
insb
cmc
loope
jle
mov
xor
shlb
xchg
and
fdiv
jnp
cmp
xchg
data16
mov
decl
inc
fsubs
in
push
scas
and
sbb
pop
dec
sub
or
decl
leave
shrb
mov
aam
mov
aaa
pop
push
test
and
adc
dec
xor
jmp
out
pop
and
leave
test
pop
bound
xor
pop
lahf
cmpsb
movl
call
je
xchg
lock
or
pop
pusha
pop
fsubl
scas
xchg
add
ljmp
push
pop
mov
cs
scas
pop
ret
pop
or
movsb
dec
sahf
dec
iret
ljmp
cmp
in
decl
dec
mov
mov
es
pusha
jg
cmp
scas
push
push
mov
in
pushl
test
pop
fisubs
iret
cmpsl
cmpsl
lods
sub
clc
cmp
ja
hlt
ljmp
out
jae
cmp
loope
lock
sbb
xchg
int3
mov
aaa
sar
call
and
shrb
push
aas
clc
adc
je
lcall
sbb
mov
mov
inc
test
sbb
mov
sti
push
xchg
add
mov
lcall
dec
pushf
in
lret
ds
jno
daa
xor
dec
xchg
cltd
pushl
inc
and
cmp
jg
push
cltd
stos
ficompl
mov
arpl
call
out
out
mov
aad
mov
ret
in
dec
rdpmc
inc
xor
inc
shl
add
daa
movsb
comiss
xchg
dec
dec
jno
jnp
push
pop
push
ret
cmp
into
inc
dec
stos
mov
jbe
inc
jmp
popf
loope
setbe
sbb
sbb
out
xchg
stc
fimuls
inc
inc
inc
push
add
dec
addr16
rorb
mov
adc
ret
xor
lret
mov
lods
out
mov
fcomip
push
xchg
push
movsb
dec
mov
push
insb
or
add
jg
dec
addr16
insb
popf
xor
ret
fucomp
ja
mov
mov
repz
jg
cmp
insb
dec
fwait
mov
mov
enter
arpl
push
movsl
add
mov
inc
push
add
dec
mov
or
lret
decl
aaa
jbe
push
xchg
push
loop
subb
hlt
xchg
sbb
les
lods
out
pop
incl
jmp
mov
into
xchg
aas
mov
or
mov
hlt
paddsw
call
add
mov
jge
inc
adc
in
mov
jmp
jl
sahf
pusha
mov
jbe
fwait
popa
divl
mov
les
out
in
sub
call
sub
pop
lahf
push
fstl
popa
mov
xor
es
repnz
fwait
popa
cltd
mull
jecxz
out
and
cmpsl
out
adc
aaa
cld
push
imul
mov
fbld
fs
inc
notl
faddl
loop
pushl
inc
outsl
inc
xchg
push
mov
xor
aaa
push
dec
or
call
add
in
stc
sbb
loop
sub
mov
and
jbe
aad
lea
clc
xchg
cmp
fdivl
pushl
pop
push
data16
sbb
sbb
cmp
push
stc
and
in
divl
fwait
jne
dec
std
iret
cmp
sti
dec
rcrb
ja
popf
fbstp
inc
xchg
popf
cmpsb
pop
cmp
sti
dec
loop
jne
sar
jmp
pop
lods
mov
iret
and
adcb
inc
popf
or
insb
loopne
push
icebp
and
adc
in
in
je
ret
cld
stos
pushl
imul
xor
jns
xor
and
leave
mov
aas
fld
jb
jne
shll
mov
test
pop
sbb
cmp
add
sub
in
movsb
jmp
lahf
xchg
bound
mov
push
mov
leave
jp
aas
rdtsc
pop
into
shl
sub
xlat
xchg
daa
xor
loope
pop
xchg
sar
in
loopne,pn
rcll
test
ret
pop
mov
aam
inc
or
cmp
inc
xor
call
jge
dec
rcrl
stc
add
stc
icebp
into
in
cmc
out
pop
push
push
je
fwait
or
call
sarl
pop
das
push
arpl
neg
movsb
lret
sub
aam
mov
pop
data16
mov
xchg
js
sbb
push
add
in
rolb
mov
hlt
xor
pop
imul
mov
jno
or
mov
pop
mov
push
add
repnz
insb
jbe
pop
adc
std
call
movsl
out
out
mov
clc
cli
inc
inc
mov
cld
shrb
jg
call
lods
xchg
sub
negb
add
popf
jo
jmp
mov
les
sarl
mov
or
in
dec
je
push
inc
pop
push
and
xchg
and
dec
sti
clc
mov
xchg
jg
jmp
andb
out
add
sub
lea
push
ja
sub
addb
addr16
and
incl
out
add
or
add
mov
mov
jg
add
pop
insb
dec
push
xchg
inc
add
add
dec
orb
lods
add
inc
mov
adc
adc
mov
push
nop
scas
pop
sub
jg
lds
insl
inc
add
nopl
aad
sahf
push
scas
dec
mov
push
or
pusha
or
jno
mov
jnp
xchg
movsl
push
daa
add
dec
jnp
fists
push
and
cs
push
movsb
iret
cmc
jnp
movsb
inc
scas
push
and
stos
push
and
push
test
into
push
and
imul
push
inc
pop
pop
add
adc
pop
sbb
mov
sbb
add
hlt
lods
pop
inc
mov
push
mov
push
ds
les
push
adc
std
ljmp
fidivrl
insb
or
lret
imul
pusha
test
push
lcall
lret
push
push
add
sbb
jbe
fldcw
fdivs
or
int
mov
stos
pop
stos
mov
rcl
jb
ss
add
jo
mov
push
shl
mov
clc
jno
add
outsl
push
shll
fidivrl
iret
outsb
or
ss
push
push
ret
je
fidivrs
out
test
fisttps
add
fwait
inc
mov
lods
mov
add
mov
ja
insb
pop
jae
shlb
mov
push
sti
lcall
jne
push
aam
push
lock
retw
add
mov
adc
outsl
ss
pop
dec
add
cmp
data16
inc
xchg
ds
scas
add
push
push
shlb
lret
fnstcw
add
ja
push
rcr
notl
xlat
jne
add
ja
push
ds
insl
aad
push
xlat
ja
js
push
jns
push
jl
roll
jp
jp
inc
push
fidivrl
sarl
sub
int3
ja
fldl
ret
rorl
ljmp
xchg
fiaddl
sub
xchg
xor
xchg
insl
push
xchg
pop
xor
imul
ds
aaa
push
lcall
push
cmp
jl
insb
push
pushf
cmp
popf
xchg
popf
aas
in
xchg
push
sahf
inc
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imulb
movl
sahf
out
sbb
clc
stc
cli
jg
out
sti
cld
std
incb
jecxz
mov
sbb
arpl
inc
jae
add
imul
pop
add
cltd
int
add
pop
add
push
mov
add
cmp
xor
ja
push
add
or
add
add
fldcw
or
or
test
test
nop
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
rcrw
adc
mov
pop
stos
femms
lods
lods
pop
stos
insl
addr16
sbb
scas
add
scas
insl
and
imulb
scas
lods
push
and
adc
sbb
int
nop
aaa
sbb
sbb
out
in
scas
mov
and
or
or
mov
xchg
or
lock
in
mov
mov
and
and
mov
and
inc
jo
sub
pop
sub
mov
gs
and
mov
cmpsb
cld
pop
daa
mov
aaa
add
push
es
test
aas
cmp
pop
cmp
cmp
add
idiv
adc
xor
pop
xor
pop
or
cltd
fstps
pop
pop
insl
pop
pop
in
mov
cmpl
das
push
cs
xor
add
xor
das
pop
push
push
xor
decl
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
call
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
aas
jae
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
movsl
mov
cwtl
sahf
mov
lcall
add
mov
lea
xchg
push
es
pop
jle
ja
jns
dec
push
bound
js
ret
adc
xor
jne
je
pusha
adc
bound
sub
adc
nop
or
scas
mov
test
scas
mov
jb
mulps
add
fcmovnu
repz
mov
cmpsb
push
mov
xor
xor
fistpll
add
push
ja
jb
cs
xor
mov
add
cmp
into
pop
jbe
dec
sbb
cmpsl
fnstcw
pop
xchg
jo
add
inc
mov
cmp
mov
inc
add
jae
xchg
jp
jg
mov
inc
mov
aaa
add
xchg
jno
lret
sahf
insl
imul
bound
mov
mov
inc
test
lahf
ja
sahf
mov
insb
add
xor
outsb
add
xchg
xchg
pop
push
test
fdivr
rcr
cmpsb
dec
push
dec
push
movsb
jae
add
jb
shll
pop
sub
mov
push
rorb
add
lcall
int
add
outsb
mov
mov
lret
ja
sahf
jbe
fistpl
data16
or
imul
stos
push
add
and
sti
inc
cli
jp
add
js
mov
data16
shrl
jns
jns
insb
pop
outsb
push
outsl
shlb
push
ds
fisttpl
jge
jg
fiadds
insl
fisttpll
lock
mov
cli
in
and
mov
add
test
adc
push
loopne
iret
sahf
mov
outsb
push
insl
push
jb
out
in
push
jle
or
jecxz
sti
popf
int
or
push
aad
push
idivb
push
fisttpl
imull
int
adcl
mov
shll
push
test
test
sbb
test
fldcw
in
mov
push
xchg
nop
and
out
xchg
cmpb
lock
sub
sub
outsb
fiaddl
imulb
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
outsl
cmpsb
pop
cmp
jle
and
cmpsl
push
cmpsb
scas
jo
test
sahf
mov
adc
mov
shrb
rcl
mov
mov
lgs
int
insl
roll
sarb
push
movsb
out
jl
mov
ret
hlt
adc
pop
data16
add
addr16
xchg
lods
add
dec
out
je
dec
sub
inc
movsb
daa
add
push
and
mov
add
femms
or
or
or
sbb
or
es
push
adc
push
add
adc
adc
ds
add
and
mov
adc
sbb
pop
test
mov
mov
fisubrl
mov
add
and
negb
inc
loopne
ds
mov
lods
xor
and
aas
push
adc
xor
or
iret
adc
cmp
cmp
repnz
and
testb
cmp
ds
jbe
sbb
sbb
cmp
scas
xor
dec
mov
scas
ds
jle
aas
adc
mov
mov
ds
xor
dec
inc
test
mov
scas
add
fwait
bound
mov
addr16
mov
ds
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
in
mov
lcall
sub
sub
add
add
ffreep
mov
add
dec
and
inc
mov
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
call
mov
mov
nop
test
insl
popf
mov
je
xchg
jns
jle
addl
jo
outsb
pushf
sub
stos
cwtl
sti
lds
xlat
or
push
rolb
push
sti
or
mov
incl
adc
loopne
out
or
repz
jl
push
add
cmc
repz
dec
xor
aas
add
sti
mov
add
add
mov
add
mov
or
jg
push
mov
fnstsw
repnz
aam
jle
mov
gs
jecxz
pushf
add
mov
inc
ds
in
lcall
or
jns
or
mov
push
push
dec
lret
decl
ss
xchg
add
mov
mov
loopnew,pt
test
scas
xchg
js
in
and
out
mov
insl
sub
sub
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
jle
mov
lcall
leave
jbe
negl
mov
int3
fst
es
push
lret
loopne
mov
lahf
push
std
into
fdivrp
lods
adc
imul
xchg
add
shrl
add
jle
jge
or
adc
add
bswap
adc
dec
dec
in
enter
dec
add
pop
add
push
dec
or
adc
cmp
jbe
sti
pop
adc
dec
or
add
push
adc
add
inc
or
pop
pop
cmovg
sarl
stc
inc
push
dec
sbb
inc
adc
idivb
incl
adc
sbb
dec
add
dec
adc
inc
ds
jecxz
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
pop
and
sub
cmp
lods
mov
inc
lret
jle
ss
mov
mov
ss
shrl
push
outsb
mov
push
subl
mov
add
push
sub
sbb
add
mov
cmpsl
and
into
incl
pop
sub
jmp
adc
push
fnstsw
incl
outsb
prefetchnta
adc
push
and
jg
ds
cwtl
dec
push
stc
setb
lock
pusha
mov
sub
xorps
jg
js
lea
ja
aaa
add
sub
push
inc
pusha
push
sahf
jg
push
aam
pop
lahf
xchg
push
or
push
or
cli
mov
sbb
fists
sbb
or
addl
xchg
roll
add
mov
loopne
push
pop
das
sti
mov
xchg
orl
or
dec
sti
jg
mov
cmp
xchg
add
popa
jg
jg
or
adc
je
cmpsl
test
bound
push
cld
fists
inc
jb
movl
jg
shrl
cmpsb
std
ja
or
push
or
std
test
add
xchg
les
xchg
pop
jg
push
orl
add
mov
or
sub
decl
push
loopne
xor
inc
xor
incb
jg
and
adc
xor
incl
jg,pt
sbb
sbb
mov
shl
pop
pop
xor
mov
jle
mov
push
sub
sbb
and
xchg
ffree
mov
push
call
and
xor
lods
jle
lret
imul
mov
xchg
add
inc
imul
scas
jle
mov
lcall
push
popa
mov
xchg
cmp
jg
sbb
adc
data16
sub
add
add
and
incl
stos
addb
pushl
cwtl
add
pop
je
sub
dec
jg
jle
pop
push
pop
mov
shrb
ljmp
stos
pop
mov
mov
pop
daa
aas
aaa
dec
push
fcmovu
pop
pop
add
jle
add
pop
inc
push
call
cmp
mov
shlb
pusha
push
jle
push
dec
xchg
push
bound
add
mov
mov
insl
iret
das
pop
daa
push
arpl
xchg
popa
das
les
push
mov
insl
xlat
out
mov
decl
dec
push
and
decl
inc
lds
ljmp
xor
ds
sub
mov
inc
lea
push
dec
jl
jge
idiv
fnstenv
add
push
jne
pop
test
jbe
out
push
dec
or
jnp
push
jp
push
js
mov
jbe
pop
add
call
fdivrs
jne
jbe
push
outsb
ds
cmp
jle
cmp
aam
dec
incl
sub
jp
dec
test
xchg
dec
ja
xchg
subb
je
sahf
jns
fs
adc
xchg
call
push
mov
adc
outsl
inc
jbe
sahf
inc
out
scas
cs
aas
and
push
pushf
cmp
cmpsb
test
cltd
mov
insl
fstpt
xchg
xor
xchg
xor
sub
sub
nop
daa
xchg
sarb
ss
cs
mov
enter
xor
stos
test
mov
sbb
jg
pop
fnsave
xor
test
push
inc
or
or
es
or
ss
cs
rcl
push
add
or
mov
ja
dec
push
test
movb
aas
adc
ja
divb
mov
add
ja
add
in
adc
push
addb
or
insl
mov
add
dec
push
outsl
add
pop
or
adc
scas
adc
pop
push
xorl
cmp
mov
cwtl
mov
out
imul
mov
jle
mov
dec
sti
push
lock
push
cmp
cmp
jmp
in
icebp
imul
add
sub
ljmp
mov
dec
out
imul
mov
pop
mov
mov
fisttpl
sbb
xor
dec
cli
or
sti
xchg
fidivs
xchg
std
into
jmp
syscall
mov
sub
xchg
fcmovb
add
pop
xchg
sbb
inc
pop
lcall
or
mov
sub
or
addr16
daa
cld
pop
das
or
mov
cld
call
jmp
call
daa
std
out
mov
popl
lcall
or
mov
mov
push
fdivr
ds
lods
xor
xchg
incl
fadds
incl
fmuls
out
ljmp
sub
decb
push
xor
adc
incl
sbb
sub
xor
cmpsb
scas
ljmp
xchg
cmp
decb
mov
jno
add
fmull
xor
incl
mov
punpckhwd
pop
lcall
incb
mov
xor
addb
sysret
out
push
add
ljmp
sub
xor
incl
xor
push
sub
pop
shlb
outsl
sti
push
std
jmp
mov
out
adc
push
rorl
inc
call
cmpsl
bound
add
pop
stc
xchg
faddl
push
call
jg
inc
inc
cwtl
out
cli
mov
fwait
test
jmp
sub
add
sbb
incl
test
push
jmp
ss
sbb
pop
in
insl
fnstenv
pop
movsb
or
insb
aaa
mov
fidivs
mov
push
mov
shll
or
push
dec
sahf
ret
decl
scas
nop
xchg
push
adc
jns
mov
test
lahf
inc
inc
push
inc
fidivl
pop
cmp
es
mov
fcoms
sahf
movsb
dec
push
stos
push
leave
mov
cmpsb
dec
dec
inc
scas
imul
out
add
cmpsb
add
push
and
out
push
sbb
jl
shrb
rcl
outsb
shrb
shlb
jb
push
in
dec
imulb
push
iret
insl
cltd
out
int3
push
pop
daa
outsl
pop
imul
notb
push
movsb
sub
push
ljmp
ljmp
lcall
inc
dec
dec
pop
add
repnz
aam
push
jmp
and
fildl
pushf
cmp
aas
decb
cwtl
xor
lahf
push
inc
push
xchg
insl
mov
xchg
push
push
aaa
push
lcall
jmp
es
xchg
xchg
xchg
notb
sub
xchg
aam
pushl
dec
scas
incl
shrb
data16
fisubs
dec
mov
push
push
dec
call
js
std
faddl
jge
push
jnp
xor
imulb
or
jl
or
dec
movsl
fstp
jl
push
jge
jg
es
fwait
cltd
std
add
adc
fidivrl
push
dec
push
dec
repnz
std
jns
repnz
jae
pop
fidivrl
push
mov
jnp
xlat
lock
jge
hlt
in
add
int3
outsb
nop
mull
addb
inc
shll
sbbb
or
pop
jne
lahf
push
adc
adc
push
and
int
push
jns
inc
sahf
addb
decl
dec
es
addl
orb
outsb
call
and
xchg
out
push
sub
iret
out
outsb
test
jo
mov
cli
pushl
clc
push
idivl
or
push
jb
sub
xchg
outsb
sbb
fnstenv
cld
mov
jno
sub
jg
mov
lods
and
cltd
icebp
jg
and
mov
je
daa
jg
mov
ja
sub
xchg
dec
loope
xchg
cld
jo
repnz
dec
es
xchg
aaa
enter
incb
out
xchg
mov
mov
dec
lods
sub
pop
sahf
loope
sub
dec
and
jge
test
decl
incl
sbb
push
push
fsub
pop
and
jmp
fidivrs
push
mov
jle
mov
fidivrl
arpl
clc
lods
inc
ljmp
popf
inc
jp
pop
push
pop
push
push
test
ljmp
mov
lcall
int
push
jns
mov
data16
das
push
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
insl
or
or
add
cmp
outsl
add
ja
inc
or
push
xlat
push
cmovno
dec
push
pop
out
inc
and
adc
pop
and
push
pop
dec
add
insl
xor
inc
sbbb
or
adc
push
or
cmp
push
xchg
sub
adc
or
xchg
push
mov
push
dec
lret
into
jle
mov
pop
push
sbb
push
sbb
es
jae
push
or
and
out
sbb
push
sbb
outsb
or
ljmp
push
inc
push
push
add
or
mov
adc
cmpsb
and
fadd
add
push
imul
popl
out
inc
push
gs
jo
add
inc
popa
or
sbb
or
xchg
pop
and
insb
loope
push
shlb
or
inc
arpl
loopne
mov
or
xchg
scas
mov
sbb
xor
test
test
dec
rcrb
inc
jmp
insb
jo
das
std
pop
test
jecxz
ret
add
imul
outsl
jb
add
add
push
test
loope
scas
add
lods
ret
jno
cwtl
or
or
xor
add
add
addb
add
push
scas
inc
cmc
add
push
mov
push
cs
push
mov
push
add
add
pop
mov
jo
lods
push
xor
imul
popa
bound
mov
inc
xchg
jb
pop
popa
or
xor
outsb
jae
lds
sbb
add
sbb
add
xor
mov
gs
scas
rclb
cmc
add
or
add
push
inc
or
add
mov
mov
inc
testl
adc
ret
push
test
jno
mov
sub
outsl
shrb
jo
xor
dec
push
outsl
loop
and
rcr
aaa
xor
pop
sub
sub
xor
sub
mov
pop
pop
dec
insb
out
xor
jg
inc
imul
sbbl
inc
adc
mov
push
sahf
cs
jne
addr16
inc
insl
or
mov
fwait
add
fisttpll
inc
popa
sbb
mov
or
push
ret
arpl
mov
je
adc
mov
push
xor
dec
mov
mov
insl
mov
xchg
jecxz
adc
push
mov
xchg
aad
cmp
clc
cmp
sbb
push
ret
mov
imulb
insl
popa
mov
lret
data16
pop
es
je
push
dec
in
nop
xchg
sbb
roll
push
lahf
aad
pusha
stos
mov
ret
popa
cmp
add
xchg
mov
orb
jecxz
add
push
xchg
sub
push
xor
dec
dec
mov
add
xchg
adc
push
add
cs
and
jmp
mov
adcb
sti
pop
sub
outsl
xchg
and
scas
jg
mov
push
lods
jge
cmp
pusha
and
pop
jbe
sub
mov
mov
addb
push
jne
ret
sub
sub
and
mov
in
jae
xor
test
mov
push
dec
push
push
mov
lods
pop
test
mov
insb
sub
sbb
adc
mov
fcompl
push
cmc
test
pop
inc
incl
cmpb
mov
cmp
adc
mov
inc
xchg
gs
add
test
mov
cmp
xor
jb
fxch
js
lahf
sbb
inc
arpl
fiadds
arpl
and
lret
xchg
inc
pop
test
sub
leave
pop
sub
outsb
sub
aad
adc
xor
rcrl
rorl
scas
and
jecxz
insl
inc
mov
imul
mov
inc
cltd
pop
arpl
add
dec
sarl
dec
mov
fnstcw
lea
xchg
xor
ficoms
cmp
mov
pop
sbb
xor
or
inc
dec
inc
insb
cmp
int3
sahf
cs
rcpps
jb
icebp
inc
adc
jb
inc
inc
jno
popl
outsl
sahf
mov
jl
inc
imul
sti
mov
ja
aam
outsb
dec
insb
sahf
daa
push
sub
popa
dec
fs
push
outsl
jo
jb
stos
add
fwait
clc
addb
iret
dec
inc
jecxz
or
dec
and
rcrl
int3
lods
dec
ret
sub
sarl
adc
imul
push
sbb
inc
add
out
push
mov
or
dec
std
divb
add
mov
xchg
and
adc
outsb
inc
lds
pop
xor
push
mov
je
insl
dec
outsb
dec
stc
add
or
xor
sub
xor
divb
lcall
dec
add
sbb
mov
lcall
add
or
imul
movhps
lcall
mov
scas
imul
es
nop
ret
or
cmp
insb
inc
mov
movsb
outsl
xchg
add
add
and
and
rcr
imul
and
shlb
ret
inc
lret
pop
or
xor
sbb
insl
ret
je
adcb
sub
sbb
jg
pop
sub
pop
add
dec
xchg
adc
cmp
push
popa
add
sbbl
sbb
pop
addl
ficoml
xchg
and
sbb
jo
inc
sbb
scas
lcall
xchg
and
and
jno
xor
popf
adc
jp
gs
jnp
movsb
add
dec
mov
mov
in
sbb
push
xchg
push
jge
ret
es
xor
int3
test
sub
push
ss
xchg
lods
ret
push
dec
sbb
jbe
inc
insb
sub
push
push
outsl
inc
inc
xor
cmp
pop
lret
inc
lock
jns
mov
mov
add
mov
ficomps
xlat
adc
or
adc
mov
pop
movsb
jno
jg
pop
add
inc
xor
xchg
enter
out
cmp
mov
xorb
and
jbe
je
insb
mov
lods
cmp
mov
aas
push
push
mov
in
add
add
push
mov
xchg
aad
insl
rcl
jo
dec
inc
push
sub
inc
dec
test
mov
addr16
adc
arpl
and
jne
pop
xor
cwtl
dec
mov
push
add
aaa
mov
cwtl
jb
inc
cwtl
shrl
sbb
mov
shll
mov
cmp
cmp
jns
push
lea
and
jp
sub
mov
and
out
jmp
mov
outsb
fdivs
add
push
sbb
cmpsb
aas
insl
sbb
imul
nop
shlb
xchg
jbe
sbb
or
sarl
iret
repz
dec
push
mov
mov
inc
sbb
ss
mov
add
sub
add
in
pop
push
or
sbb
xchg
or
cmp
cmp
outsb
adc
test
imul
shll
add
aaa
pop
shrb
and
out
sub
addb
inc
ss
push
push
cmp
or
movsl
dec
sub
push
push
or
inc
and
cmp
or
sbb
add
add
sub
inc
and
ficompl
mov
cmp
push
cmp
adc
add
push
add
push
mov
iret
jle
ud2
push
add
adc
mov
sbb
push
xor
daa
add
cs
or
push
or
sub
xchg
adc
es
push
adc
push
inc
pop
divb
and
add
push
sub
push
push
inc
sbb
sbb
std
call
adc
or
cmp
sub
or
sbb
add
xor
adc
sbb
push
add
add
adc
das
clc
cmp
push
sbb
add
and
xor
aaa
sub
add
or
push
or
or
push
in
add
adc
ss
sbb
subps
inc
pop
sbb
push
sub
outsl
mov
and
sbb
or
sbb
add
mov
push
sub
sbb
lods
add
sbb
adc
insb
addb
adc
adc
hlt
and
pop
sbbb
push
and
daa
push
or
and
sbb
or
sti
lcall
or
add
dec
mov
xor
push
mov
sbb
sub
mov
ljmp
mov
push
pop
or
jmp
or
imul
adc
jbe
xchg
and
push
adc
or
inc
xor
add
push
xor
repnz
repz
sbb
cmp
daa
aas
sub
push
out
aas
and
sub
or
cmp
es
xor
lock
aas
mov
fdivrs
das
push
bswap
add
push
xchg
jns
cmpl
adc
call
or
or
or
push
push
lods
adc
adc
or
push
or
pop
aaa
adc
pop
sub
adc
adc
daa
adc
or
xor
push
sbb
xor
sbb
and
es
mov
xchg
daa
cmp
xor
and
or
clc
ljmp
inc
and
or
add
mov
and
pop
icebp
and
xor
or
or
pop
adc
ret
decl
and
and
or
or
jb
adc
pop
inc
decl
sub
sub
jg
lock
ds
jg
adc
repnz
inc
sbb
xor
das
test
add
scas
add
mov
or
inc
pop
and
and
add
sbb
push
adc
add
adc
or
cld
outsl
call
cmp
sub
adc
aaa
jo
or
or
ljmp
test
sbb
pop
and
or
push
sbb
xchg
jb
xor
mov
pop
hlt
cmp
adc
bound
xor
jp
cmp
adc
sub
lock
add
cmp
incl
adc
lock
add
adc
push
jle
ss
add
or
add
sbbl
jecxz
ret
fildll
and
lock
or
push
aaa
mov
cli
inc
addr16
xor
mov
outsl
dec
adc
lock
add
ds
fisttpl
in
aaa
je
movsl
push
fcomip
push
mov
add
push
nop
jnp
pop
adc
adc
inc
dec
outsl
jge
or
xor
dec
xor
sub
add
add
push
and
push
and
inc
sbb
adc
call
inc
mov
cmpsb
add
inc
lcall
xor
sub
push
cld
decl
pop
adc
inc
outsb
fadd
shll
xor
bound
insl
xchg
insb
fcoml
mov
adc
outsl
jg
clc
fcomip
pop
std
add
insl
fmull
and
xor
push
or
iret
incb
cmp
adc
adc
push
and
add
out
jp
fcoms
psubsb
sub
adc
fistl
sbb
xor
adc
and
mov
lcall
xor
or
or
decl
inc
jb
js
pop
aas
dec
pop
pop
imul
lods
xor
sub
push
adc
and
lock
push
push
decl
mov
push
inc
inc
push
scas
adc
andb
jo
sub
insl
stos
ss
cmp
jmp
dec
arpl
adc
cs
sbb
sbb
adc
xor
call
jecxz
and
sub
push
push
sbb
sbb
adc
xchg
test
cmc
aaa
and
or
sbb
xchg
cli
aaa
jl
xor
adc
hlt
cwtl
or
adc
cmp
arpl
aaa
xor
dec
add
sub
insl
push
pop
or
cwtl
mov
add
mov
inc
adc
adc
lock
add
scas
dec
dec
push
outsl
clc
adc
jns
and
inc
adc
or
and
adc
xor
push
pop
pop
and
inc
scas
cli
std
push
stc
add
sub
add
inc
jg
adc
push
push
mov
cmpsb
cmp
push
in
jb
rolb
sbb
and
push
or
addl
dec
dec
jle
sbb
push
jge
pop
pcmpgtb
sbb
xchg
sbb
cli
call
pushf
jle
adc
push
inc
xor
and
xor
pop
add
ss
or
sub
mov
or
push
mov
out
dec
insl
jnp
lds
xor
adc
and
xor
adc
dec
inc
and
fdivr
jae
and
sbb
and
pop
ud2
dec
or
das
lret
sarl
sub
aaa
push
cmp
adc
jge
adc
xor
sbb
sbb
push
xor
stos
mov
push
jne
out
xlat
mov
adc
push
or
xor
sub
add
or
adc
in
pop
aad
add
or
or
mov
daa
mov
or
sbb
dec
pop
inc
and
movsl
or
jmp
es
add
ds
sbb
cmp
loopne
cli
test
sub
pop
aad
or
and
scas
fiaddl
lock
ljmp
push
add
inc
push
sbb
cmc
idivb
adc
and
add
sub
adc
daa
pop
fcomip
insl
rcll
cli
lret
adc
adc
aaa
dec
or
inc
push
add
sbb
lret
jae
sub
push
adc
jge
cli
dec
xchg
daa
sbbb
ds
outsb
sbb
js
incl
jg
popf
and
fistpl
imul
or
dec
pop
cmp
test
or
jbe
jg
decl
sbb
xor
push
dec
ss
add
adc
pop
sbb
scas
sbb
lock
add
sbb
addr16
pushf
sbb
sub
pushl
mov
xchg
cmp
add
sbb
sub
or
fucomip
push
and
lock
or
or
dec
sub
sub
ljmp
xor
push
or
pop
inc
adc
cmp
inc
inc
push
sbb
add
pusha
ret
lock
lock
mov
or
icebp
aas
scas
mov
pop
inc
and
aas
scas
xor
idiv
pop
sub
rorl
push
sbb
pop
add
push
push
pop
push
sbb
or
rorb
push
mov
pop
aaa
and
add
hlt
outsl
add
aas
enter
inc
cs
pop
sbb
sbb
sub
adc
cli
xchg
adc
lock
std
add
lock
add
add
pop
or
add
lock
popa
jp
add
or
sbbb
sbb
xor
cmp
das
negl
adc
pop
or
and
cwtl
adc
adc
inc
clc
call
sbb
cmp
unpcklps
cmp
ljmp
xor
adc
xor
sbb
sub
ret
sbb
adc
mov
mov
dec
sub
or
sbb
mov
fdivs
jbe
aas
adc
push
push
sub
adc
sbb
lret
fwait
pop
xor
and
mov
fidivl
dec
test
out
imul
outsb
sub
sub
in
dec
lock
xor
push
push
loopne
cld
xchg
pop
sbb
leave
add
movlps
pop
sbb
test
add
jne
push
pop
push
jbe
pop
sub
incl
cmp
or
dec
das
cmp
push
cmp
lret
cmpsb
inc
add
mov
scas
inc
add
pop
xor
sub
lock
mov
add
pop
pop
add
dec
xor
rcrb
push
pop
adc
mov
mov
adc
mov
jne
sub
outsl
ljmp
push
push
sub
movsb
adc
pop
int3
pop
sub
sbb
inc
push
push
inc
or
lret
sub
cmp
and
push
das
adc
sub
xchg
pop
invd
or
mov
push
cs
sub
or
sbb
or
lcall
sbb
adc
adc
daa
or
dec
prefetch
lock
and
pop
push
xchg
movsl
adc
pop
sub
loopne
sysret
push
add
sbb
or
ljmp
xor
adc
push
or
inc
cld
push
cld
adc
in
push
sbb
lock
daa
dec
adc
push
subb
mov
and
scas
clc
push
wbinvd
push
and
lock
push
push
xor
inc
adc
mov
fldt
scas
xor
sbb
nop
xor
sbb
std
outsl
shlb
sbb
sub
inc
inc
cmp
test
adc
cmp
mov
xor
pop
mov
sbb
out
cmpl
arpl
dec
adc
jne
jmp
sbb
inc
cmp
pusha
push
out
pop
adc
adc
sarb
js
add
or
mov
ss
imulb
jb
or
adcb
fiadds
cmovno
movsl
or
sbb
std
pop
lock
push
xor
test
or
xor
inc
mov
xor
sbb
sub
pop
fwait
push
and
das
mov
adc
ds
aas
push
das
fcoms
cmpsb
push
inc
pusha
push
nop
adc
cmp
push
lock
ljmp
add
add
inc
cmp
fcompl
push
mov
adc
pop
pop
mov
je
pop
jmp
outsl
add
or
sbb
jb
mov
adc
push
sar
sub
es
and
or
scas
or
push
and
sub
clc
lcall
sub
adc
sbb
pop
sub
data16
add
push
sbb
sub
loopne
sbb
xor
sbb
adc
fistl
xor
push
sub
dec
dec
add
repnz
sub
pop
scas
jp
jbe
pop
and
xor
lock
push
and
mov
sbb
xor
or
inc
sub
das
mov
xchg
cs
sbb
and
scas
sub
xor
bswap
xchg
adc
lea
pop
push
sub
push
aaa
dec
adc
or
push
lock
call
adc
pop
cmp
and
sbb
pop
loopne
mov
pop
sub
xor
adc
mov
add
or
sbb
ret
jle
mov
dec
cmp
pop
adc
pop
adc
or
adc
jmp
add
adc
sub
cmp
sbb
pop
in
das
adc
and
add
inc
dec
adc
sbb
push
and
shll
sbb
and
jb
loop
outsl
mov
and
pop
or
or
push
inc
nop
or
or
add
sub
sbb
adc
je
outsl
push
pop
cmp
jp
or
or
inc
or
push
fdivr
push
dec
pop
insl
dec
inc
push
pusha
adc
inc
dec
inc
shr
or
or
sti
arpl
or
jnp
mov
arpl
or
pusha
lock
daa
push
arpl
sbb
lock
lcall
pop
lock
add
dec
cmp
adc
or
bndldx
cld
push
fnstsw
or
adc
andl
xchg
push
inc
sbb
pushl
pusha
ds
sbb
and
push
dec
fmuls
pop
ds
rorb
add
shlb
and
add
data16
add
adc
add
or
sub
adc
scas
ljmp
mov
sub
sbb
inc
or
adc
and
adc
cli
add
mov
outsl
add
popa
push
das
or
and
add
inc
adc
adc
into
sub
pop
popa
lahf
pop
sub
mov
adc
and
sbb
decl
and
pop
inc
adc
or
sub
push
in
sbb
ja
clc
lcall
or
inc
inc
cmp
jo
cmp
sub
push
pop
push
roll
clc
jg
jbe
add
data16
xor
adc
dec
pop
and
mov
and
in
push
aaa
call
add
bound
cmp
daa
cmp
and
jae
sbb
cld
mov
fildll
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
mov
ja
adc
add
push
cmp
pop
add
sub
test
notb
push
add
lcall
sbb
dec
mov
sbb
and
lcall
sub
push
sub
sbb
cmp
fwait
std
add
outsb
xor
pop
mov
fiaddl
sub
inc
incl
add
sbb
pop
xor
pop
test
loopne
inc
scas
sbb
xor
xor
or
pop
pop
mov
inc
aam
clts
dec
or
push
push
pop
adc
js
xchg
loopne
or
xor
lahf
and
outsb
les
and
push
pcmpgtw
or
lahf
add
jo
mov
ljmp
std
incl
push
xchg
or
add
sub
mov
arpl
xchg
pop
hlt
mov
xor
scas
ja
rcrl
lock
jl
add
fldl
push
or
mov
sahf
andb
lock
add
or
mov
and
or
pop
ljmp
push
insb
test
xchg
sbb
inc
ficoml
xchg
add
js
or
lock
lock
add
sbb
sub
push
pop
stc
xor
push
dec
pop
sub
sub
sbb
incl
bound
pop
aad
lea
push
adc
push
aad
sbb
ljmp
adc
movhlps
or
ds
lock
fimull
sbb
pop
inc
push
add
lock
js
mov
dec
inc
jo
pop
push
or
test
xor
notb
add
pop
outsl
push
or
push
adc
or
decl
cld
adc
inc
sbb
sbb
or
cs
pop
push
dec
or
fdiv
mov
and
fcmove
sbb
loop
lock
sbb
push
or
add
cmp
pop
mov
jo,pn
adc
or
or
sbb
adc
dec
fwait
sbb
xor
outsl
pop
fcomp
aam
pop
sbb
sarl
daa
sub
dec
dec
dec
push
ret
js,pn
push
xlat
into
adc
xchg
xor
xor
or
std
lahf
fbld
inc
and
sbb
jp
or
or
jge
test
mov
adc
int
jb
loopne
xchg
push
and
adcl
dec
sub
prefetcht1
push
shrl
and
sub
mov
addb
repz
inc
ud0
arpl
xchg
add
dec
dec
sarl
xor
inc
sub
lock
and
xorb
ds
push
ds
inc
cld
aas
dec
jae
xor
sbb
cs
in
pop
lock
mov
or
cmp
or
or
push
int3
es
shrb
push
mov
and
and
and
shlb
mov
enter
aam
std
dec
cltd
shl
filds
mov
sub
leave
or
sbb
clc
pop
adc
outsl
fiaddl
or
or
mov
sti
pusha
dec
sbb
scas
lcall
and
push
adc
das
push
or
bound
ret
mov
lock
dec
xor
add
sbb
jg
pop
sbb
lock
add
sbb
cmp
xchg
pop
mov
and
sub
fcmovbe
xor
push
outsl
cmp
and
adc
mov
adc
movsb
outsb
das
pop
or
pop
push
push
and
sbb
faddl
and
add
push
add
arpl
push
popa
pop
mov
repnz
push
rorb
sti
in
scas
cwtl
or
cmp
sbb
lock
adc
es
pop
insb
mov
mov
push
push
or
sub
bnd
insb
dec
lock
dec
or
push
xchg
adc
add
mov
cwtl
push
mov
sbb
pushl
pusha
add
or
adc
or
push
ss
inc
ljmp
xor
sbb
push
sub
cs
add
mov
ss
cmp
or
mov
test
push
out
clc
add
mov
ret
sbb
lods
adc
inc
movsl
add
xor
roll
and
or
cmp
pop
mov
call
jg
pop
or
push
adc
and
xor
push
mov
and
adc
xchg
add
lock
or
add
push
clc
insl
roll
lock
ret
xor
outsl
je
pop
dec
or
cmp
sbb
sbb
add
cmp
sub
inc
or
es
mov
pop
sbb
es
sub
dec
dec
push
mov
inc
push
sti
in
push
sbb
add
jle
sub
das
adc
push
dec
jg
inc
sbb
and
sub
sbb
mov
sbb
arpl
xor
and
mov
adc
cmp
inc
inc
sub
or
test
jo
dec
inc
xor
ds
inc
xor
xor
dec
push
and
and
cmp
ljmp
mov
cmp
das
je
and
jle
xchg
and
cmp
cs
mov
imul
cmp
pop
pop
shl
xor
inc
lret
incl
mov
dec
xor
dec
xchg
mov
push
push
lret
xchg
fstpl
or
cmp
movsl
xor
xchg
arpl
inc
inc
pop
lcall
inc
mov
inc
aas
dec
jne
and
outsb
aaa
sarl
push
and
cmp
xor
push
jo
outsl
mov
lock
add
pushf
mov
sub
xor
jnp
sti
xchg
cmp
and
cmp
dec
add
cmp
ss
xor
xor
movsb
cmp
cmp
sbb
jnp
pop
dec
inc
add
mov
lds
mov
sbb
xchg
lock
ja
mov
xchg
lock
subb
into
aam
lock
push
add
loopne
fsubrl
or
and
mov
aam
adc
mov
inc
or
lret
jno
push
or
aam
test
or
mov
sub
cld
test
add
push
push
push
xchg
insl
add
and
adc
xor
insb
pop
jnp
lcall
pop
or
add
or
and
push
xor
lock
aam
push
or
push
fisubrl
cmp
add
cmp
push
mov
add
mov
pop
bound
bound
cmp
sahf
add
dec
mov
sub
decl
call
movsb
das
add
sbb
mov
dec
add
fstpl
add
adc
or
adc
in
jge
out
or
adc
sbb
adc
fcmovnu
fstpt
das
push
or
sbb
test
dec
lret
adc
and
adc
adcb
inc
add
pop
icebp
add
mov
and
dec
inc
jno
test
dec
orl
inc
iret
jae
add
push
imul
adc
ss
in
pusha
cmp
adc
and
sub
mov
test
xchg
and
inc
xlat
pop
fisttpl
adc
push
sbb
popa
adc
lods
pusha
inc
mov
stc
in
sub
iret
std
divl
xchg
addb
jae
icebp
xchg
inc
xor
add
shrb
test
pushf
stc
out
sbb
sbb
add
or
out
imul
insb
pusha
adc
data16
xor
out
movsl
out
in
cmp
cmp
sti
jbe
fisttpll
add
add
or
add
cmp
sub
adc
pop
pop
mov
fidivs
inc
movsl
gs
sub
and
or
fmuls
sbb
xor
lret
cmc
and
and
lahf
repz
adc
insl
fisttpl
inc
xchg
mov
inc
pop
das
jge
pop
fdivs
outsb
fstps
jmp
mov
add
sub
adc
in
mov
sbb
in
js
movsl
bound
inc
pusha
movsl
and
and
insb
insl
and
ss
push
pop
dec
add
loop
adc
in
mov
jne
jmp
mov
adc
and
jne
loope
fcompl
lea
pop
or
andb
jbe
or
shll
das
and
sbb
pop
ficompl
push
aaa
arpl
pop
dec
pop
aad
dec
push
mov
xchg
pusha
scas
mov
mov
and
jno
pop
or
fnstcw
jne
fldt
pop
imul
inc
mov
rclb
xor
push
push
sub
shlb
iret
add
repz
mov
and
mov
mov
sub
add
loopne
push
call
dec
add
sub
pop
jns
push
inc
push
or
ficoms
daa
cmp
sbb
subb
sbb
xchg
inc
icebp
in
rorl
ret
sbb
insl
xchg
aaa
dec
les
adc
ljmp
adc
mov
inc
pop
lods
inc
pop
adc
fcom
test
mov
and
jno
push
popa
outsl
adc
and
adc
add
and
jno
add
jb
call
xchg
and
es
adc
add
add
mov
sbb
insl
add
imul
push
add
sub
inc
xorl
mulb
sub
xor
and
add
xor
mov
sbbb
add
and
sub
sub
mov
imull
cmp
xor
sbb
or
mov
cmp
or
push
xor
data16
or
sbb
test
pop
dec
jecxz
addr16
and
and
pop
fldt
enter
sub
lock
enter
inc
sub
pop
push
js
inc
cmp
adc
in
add
test
cs
dec
xchg
ds
dec
ljmp
xor
pusha
in
mov
mov
or
inc
decl
jle
aas
aad
sbb
push
add
pop
inc
mov
xor
pop
or
jne
jmp
movsb
add
lea
add
pop
add
cmp
pop
pusha
xchg
inc
bound
add
xchg
push
ficoms
fnsave
pop
test
nop
fs
imul
cs
sub
pop
mov
push
scas
dec
pop
sarb
aaa
sbb
jns
jp
or
fiaddl
roll
dec
jo
cmpsb
xchg
xor
dec
push
sub
xchg
and
adc
add
push
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
xchg
inc
add
add
