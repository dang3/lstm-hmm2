divl
in
mov
mov
subb
lea
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
xchg
and
add
and
jbe
cmp
jae
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
insb
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
call
fbld
push
push
push
mov
push
into
sub
sti
mov
push
negb
pop
push
push
sahf
jp
push
inc
fistl
mov
test
ds
jmp
pushl
shrb
pushl
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
inc
ljmp
xchg
push
outsb
pop
dec
andl
lahf
fstp
ljmp
mov
int3
mov
test
pop
lea
packuswb
aaa
mov
imul
cmp
inc
push
inc
in
or
push
idivb
push
in
loopne
movb
inc
ds
ds
movsb
mov
inc
add
add
call
idivb
add
mov
jmp
shlb
xor
mov
out
fidivrs
pushl
sbb
pop
dec
push
push
push
fs
and
pop
pop
push
sbb
cs
loop
inc
fmuls
mov
adc
daa
outsl
call
dec
sbb
imul
or
pop
into
push
cwtl
in
push
adc
and
lock
shrl
test
mov
push
push
int
divl
push
push
cmpsb
add
adc
fistpl
fisttpl
inc
std
orl
sub
clc
test
je
push
add
pop
mov
push
push
pop
mov
or
dec
push
push
or
add
pop
push
push
push
adc
push
dec
dec
lock
rcl
in
pop
les
popf
inc
add
sub
in
jnp
lcall
sub
sahf
imul
push
popf
sub
xlat
in
sbb
adc
call
and
push
push
mov
lods
cli
jmp
mov
les
jmp
scas
push
push
mov
pop
jge
mov
jmp
jns
fwait
mov
push
inc
inc
dec
add
push
fs
dec
and
jmp
cmp
adc
or
inc
inc
cmc
int3
push
pop
mov
aaa
rcl
or
mov
xchg
and
push
and
inc
cmp
jnp
mull
jae
xchg
cmp
fs
lods
push
fs
and
sbb
add
jae
sub
and
mov
negl
adc
add
pop
in
or
pop
push
jle
push
push
push
cmc
sbb
das
push
sub
fsubl
je
pop
and
push
sbb
dec
lock
lock
pop
add
call
cmp
adcl
jmp
negb
jne
pop
xchg
gs
sub
idiv
popf
adc
push
xor
xchg
pop
push
sub
lcall
pushl
push
rolb
push
ret
pmaxub
or
push
push
add
testl
loope
cmp
popa
pop
subl
cmp
or
push
or
xlat
and
sar
cmp
and
pop
nop
and
repz
xchg
loopne
inc
push
fwait
je
mov
lods
punpckhdq
js
mov
push
push
daa
mov
jg
sub
int3
push
xchg
mov
or
inc
jmp
push
cmp
fs
sbb
mov
push
sbb
scas
sbb
push
xchg
loop
push
std
sub
shlb
leave
and
es
loopne
enter
push
into
mov
sub
fs
xchg
cmp
dec
movsl
push
sbb
adc
jne
inc
ficompl
push
nop
outsb
push
jmp
cmp
mov
push
or
nop
cmp
sbb
adc
jbe
sbb
or
lahf
pop
punpckhbw
sub
sub
pop
push
push
fisubl
add
push
rorl
test
mov
xchg
mov
adc
jg
jmp
pusha
sbb
mov
sub
ret
jae
push
mov
ret
mov
pop
pushf
xchg
ds
adc
and
ficompl
mov
inc
in
push
push
fs
cmpsl
test
ret
pop
cld
mov
mov
xchg
mov
test
push
cwtl
in
outsb
dec
mov
xchg
push
push
xchg
push
call
pop
jl
ds
fiaddl
jl
or
out
fwait
int
pusha
push
mov
cld
ret
jle
push
xchg
or
xor
and
mov
lcall
xor
push
mov
ret
out
cltd
mov
push
mov
jl
or
mov
inc
mov
ss
pusha
rclb
mov
xchg
mov
movsb
dec
popa
test
fmull
pop
hlt
je
or
lea
cli
cmp
fisttps
sub
cmp
imul
cli
mov
mov
pop
jno
sbbb
inc
insb
push
inc
or
dec
scas
jecxz
mov
or
lahf
lock
dec
je
inc
or
lret
adc
mov
adc
mov
pop
xchg
xchg
sahf
jno
inc
and
and
sbb
lret
out
ljmp
and
lods
ljmp
jecxz
mov
test
mov
xchg
iret
mov
sbb
std
sub
dec
in
xor
add
ret
push
sarb
or
ds
cmp
lods
dec
insl
out
ss
mov
xor
aaa
or
jge
or
xor
jg
cmp
jne
pop
mov
sub
sbb
and
push
loope
je
sbb
dec
pushl
pop
in
into
push
xchg
bound
dec
adc
or
cli
dec
xchg
pop
mov
mov
and
sub
lds
push
pop
stos
ja
mov
cmp
pusha
leave
mov
lds
call
lods
sub
call
mov
test
jne
fs
inc
cmp
jl
jmp
mov
pop
push
push
insl
popa
sbb
pop
jmp
test
sub
sub
js
mov
ret
add
idivb
push
or
mov
push
dec
add
pop
push
sahf
pop
pop
bound
and
iret
mov
mov
les
sub
jmp
push
cli
std
jns
add
add
push
dec
push
andl
and
jge
xchg
mov
cmp
roll
jl
push
mov
cmp
pusha
adc
push
push
push
and
mov
ret
pop
pop
ret
push
sbb
shr
ss
or
outsb
ja
and
push
dec
pop
mov
and
stc
test
jne
pop
ja
lods
pop
push
sub
sbb
dec
inc
not
mov
pop
or
jne
js
sub
pop
cmp
mov
jge
push
pop
hlt
daa
jecxz
out
cwtl
cmp
je
jecxz
jl
test
add
sub
aaa
clc
pop
test
jl
cld
lea
push
mov
imul
cld
std
ja
add
jmp
mov
addr16
dec
out
ror
or
mov
push
inc
leave
ret
imul
dec
icebp
cmp
cmp
push
add
cs
mov
or
std
or
adc
inc
xor
jmp
inc
pop
adcb
mov
add
jne
fcmovnb
loopne
mov
jmp
xchg
in
addl
push
repnz
inc
pop
das
clc
ja
pop
push
ja
lea
decb
pushl
cmp
int
clc
jmp
xchg
pop
popaw
sub
mov
gs
pop
pop
bound
inc
push
loop
jle
pop
xchg
add
popf
inc
ret
push
in
add
loopne
movsb
test
je
add
das
sub
mov
pusha
adc
push
mov
sahf
sbb
lock
divb
push
push
cmp
pusha
enter
sub
cmp
push
jno
push
push
push
mov
fimuls
inc
push
cmp
pop
inc
pop
pop
movsl
mov
aam
loopne
je
test
arpl
mov
das
icebp
insb
jle
push
pop
ds
add
sbb
addl
aaa
xlat
repnz
sub
push
leave
adc
cmp
popa
mov
cmp
mov
js
out
adc
into
pop
lock
cmpl
pop
mov
cmp
jne
push
push
imul
jo
ret
jl
pop
jmp
mov
enter
dec
jnp
pop
fwait
movsl
dec
dec
dec
xor
push
call
sub
inc
or
sub
enter
adc
jmp
lea
lock
clc
jg
inc
fimuls
movb
jae
sub
sbb
cmp
jae
add
cltd
adc
jg
stc
or
inc
inc
or
shlb
adc
ret
sti
rolb
xchg
jno
lcall
movb
pushf
jb
das
rclb
cmp
adc
mov
or
jne
test
or
repz
cmp
push
call
outsl
adc
das
int
push
mov
into
sbb
push
lds
ss
xor
pop
pop
add
fsubl
pushf
mov
ds
push
ret
push
sbb
mov
and
push
call
fnsave
jge
inc
testb
ds
mov
inc
loop
add
pop
xor
sbb
xor
cmp
outsb
icebp
pushl
repnz
jle
push
daa
and
fcmovnbe
cmc
idivb
mov
ret
ret
shlb
call
out
cmp
inc
call
lea
cmp
jne
jbe
mov
inc
sahf
add
xor
push
xchg
jbe
inc
add
or
mov
adc
adc
dec
lret
pop
push
jmp
ljmp
pusha
fimuls
jge
loope
neg
dec
jle
hlt
mov
pop
push
or
in
sbb
cmp
inc
gs
stc
ss
mov
and
jge
sahf
pop
sbb
mov
cmp
cwtl
add
dec
push
mov
jb
les
xor
arpl
dec
lcall
test
data16
or
sbb
add
push
call
push
ds
sbb
or
dec
pushf
movb
mov
or
call
dec
add
or
mov
pop
pop
jmp
test
je
sub
inc
or
adc
mov
outsb
jl
rcll
inc
cmp
jb
pushl
jo
add
pop
ret
push
mov
mov
sub
push
movl
fidivs
movsl
dec
adc
sbb
xor
test
add
inc
cld
cmc
imul
negb
add
jae
cltd
lds
inc
iret
js
mov
dec
shlb
jnp
xor
outsl
aas
pop
loopne
std
enter
add
mov
push
push
pop
and
sbb
xor
clc
test
cmp
imul
cmp
add
or
inc
and
jnp
add
or
cmp
or
sarl
aas
jp
sbbb
test
adc
inc
jb
adc
sahf
mov
dec
cs
adc
ret
sbb
and
lock
jl
dec
sbb
sbb
sbb
and
push
xchg
dec
popa
cmp
pusha
push
sub
jo
xchg
out
add
scas
ret
push
push
inc
dec
or
push
sub
adc
xchg
add
pop
xchg
lods
dec
mov
add
ja
je
movups
jmp
stc
and
stc
adc
cmp
popf
cmpl
push
ss
repz
mov
push
cltd
pop
divl
jne
lock
mov
fidivrs
shrl
pop
jo
push
sbb
adcb
cmpsb
comiss
push
pop
mov
mov
mov
imul
mov
sub
add
push
push
jbe
pop
pop
adc
sbb
mov
push
out
mov
lret
pop
sbb
ja
sub
aaa
std
push
pop
dec
je
stos
adc
in
jge
adc
add
nop
mov
dec
xor
jle
and
mov
or
lahf
xor
jmp
shl
pop
icebp
fwait
outsb
je
fstpt
jmp
add
push
mov
insb
xor
lock
add
mov
scas
adc
mov
lea
push
xchg
cmp
out
adc
push
mov
or
sub
mov
clc
iret
xchg
and
push
or
push
push
mov
jg
sub
jo
js
lea
imul
daa
adc
movl
shl
fistpll
cmp
je
cmp
dec
shr
aad
jmp
inc
sbb
leave
adc
jbe
mov
out
andl
or
cmp
sti
imul
je
scas
push
cmp
and
adc
jmp
lock
movsl
data16
sbb
ds
jns
xlat
fs
test
mov
cld
and
hlt
jns
sub
loopne
push
fs
aas
lret
cs
scas
pop
stos
in
sti
cs
mov
loope
push
push
pusha
aaa
outsl
dec
jl
shll
in
or
or
stc
mov
add
fnstcw
or
adc
test
cmpsb
dec
gs
dec
push
dec
mov
jg
lea
push
lea
push
cmp
xor
out
xchg
xor
xlat
dec
cmp
iret
ret
icebp
inc
mov
mov
add
or
pop
mov
stc
jge
mov
pop
cmp
sbb
push
jp
push
add
sbb
mov
gs
testb
imull
in
pop
jo
cmp
imul
sbb
push
cmpsl
lods
mov
mov
movl
mov
mov
test
addl
xor
add
pop
leave
sbb
int
test
adc
orl
mov
add
pop
sub
ljmp
sub
arpl
xchg
sbb
imul
mov
adc
cmc
mov
js
cmp
adc
movsb
inc
push
lock
stos
popf
aad
test
aam
lods
jb
not
and
ds
pop
lock
mov
pop
mov
and
inc
xor
in
xor
insl
or
push
cmp
nop
iret
xchg
adc
push
push
push
mov
roll
pushf
push
aas
xchg
push
add
hlt
push
push
je
mov
xor
mov
mov
daa
inc
test
xchg
sub
cwtl
inc
pop
pop
daa
lea
scas
push
mov
push
je
mov
mov
mov
jo
mov
add
pusha
cmp
cmpl
inc
adc
sbb
xchg
push
push
cli
lock
adc
movsb
adc
sub
int
sbb
aam
push
xor
aaa
lret
out
inc
lock
mov
adc
dec
adc
dec
rcr
dec
mov
dec
lea
or
outsl
insl
sti
popf
negl
pop
cld
je
dec
call
cltd
sub
rcl
xor
fprem
add
bound
in
dec
in
fstpt
in
jmp
mov
add
mov
inc
adc
mov
cmp
pop
leave
aaa
jo
movzbl
fadds
pop
inc
gs
sbb
dec
mov
mov
add
jecxz
loop
or
loop
pop
push
and
mov
and
shlb
mov
xor
dec
mov
xor
faddl
dec
test
mov
mov
sbb
and
and
bound
adc
and
inc
shll
jbe
add
inc
cmp
dec
cmp
dec
or
repz
out
push
mov
call
and
push
xchg
pop
cld
pop
loope
lea
sbb
and
test
shll
inc
cmpb
sbb
int3
pusha
nop
iret
adc
popf
adc
in
push
je
lock
cmp
adc
movsb
pop
inc
pop
cld
mov
xor
push
sbb
jge
je
push
fdivrl
inc
lock
pushl
and
test
push
repnz
pop
loopne
mov
pop
and
inc
sub
outsl
lods
aas
jo
mov
loope
cmp
cmpl
and
call
jge
fidivs
adc
dec
cltd
popf
jbe
je
dec
xchg
adc
mov
mov
in
push
add
push
jmp
mov
fsubrs
push
xorl
outsb
or
sbb
or
xchg
stos
mov
push
adc
adc
push
push
orb
jle
push
push
sbb
lock
ret
pop
cmp
add
pop
hlt
movb
jge
dec
clc
or
fldz
dec
adc
rorl
pop
test
scas
loope
lret
test
ret
dec
aas
mov
xor
mov
dec
popf
adc
lea
and
dec
mov
pop
fs
popf
pop
xchg
incl
test
push
test
mov
pop
rorb
fsubs
popf
push
daa
mov
pop
adc
xor
addr16
out
mov
test
popf
mov
popf
and
and
pop
lea
mov
dec
push
push
outsb
add
fildl
push
sub
cmp
loope
ret
mov
fldcw
push
shlb
js
sub
clc
int3
push
sub
add
add
jp
push
enter
repz
lret
mov
loopne
push
pop
insb
je
popa
mov
enter
cmp
xor
lea
lods
ds
mov
cmpb
or
dec
add
js
lock
pop
sbb
cmp
and
sub
sarl
out
xor
addb
xor
jge
sbbb
push
mov
inc
mov
xor
icebp
iret
sbb
test
icebp
mov
aaa
faddl
sub
inc
imul
imul
and
add
mov
fs
or
push
xor
fsub
mulb
pop
push
cmp
add
adc
xchg
cmp
or
pop
or
lea
pop
and
inc
and
ds
dec
shl
push
or
icebp
xchg
and
jne
pushf
and
push
je
push
push
pop
lods
arpl
or
arpl
dec
push
add
push
push
addl
scas
mov
sub
mov
adc
pop
cmp
fcoms
in
dec
or
adc
add
mov
add
sti
and
ret
cmp
adc
js
dec
daa
pushf
mov
xor
or
inc
or
or
xchg
imul
addb
adc
pop
leave
in
xchg
or
insl
cmpb
mov
je
cwtl
pop
rcll
lock
xchg
das
enter
adc
sub
sub
push
push
inc
popw
or
ss
pop
pusha
and
insb
repz
cmp
clc
lock
jmp
nop
push
pusha
rcrl
sub
mov
pop
inc
shlb
scas
shlb
pop
mov
push
test
loopne
loopne
push
ficoms
mov
mov
mov
push
push
mov
lcall
xor
popa
dec
inc
sub
out
cmp
add
aam
push
push
pop
lock
pushl
sbb
fcompl
inc
in
aam
fisubl
iret
jbe
pop
mov
mov
dec
fwait
sbb
cmp
xchg
cltd
mov
add
cld
ret
or
js
or
nop
popa
mov
adc
jl
dec
inc
sbb
mov
mov
adc
and
mov
fcomip
sti
push
pop
push
out
dec
subb
dec
jmp
xor
idiv
stc
int
jle
mov
fwait
aas
jp
mov
add
bound
jne
loopne
jbe
aad
mov
sbb
les
jo
insb
cmpsl
int
orb
pop
xchg
in
mov
sbbl
push
adc
add
mov
or
out
test
fstpl
rcrb
movb
mov
je
test
pop
lea
cltd
idivl
mov
inc
mov
xor
das
push
mull
pusha
jl
cmpl
jnp
sti
push
mov
sbb
mov
cmp
mov
jbe
lahf
xor
xchg
fs
repz
sbb
and
lea
clc
add
pop
inc
pop
jg
sti
fists
mov
dec
sub
jge
jmp
cmpsl
clc
mov
mov
pop
hlt
fildl
pusha
or
cld
jg
sarb
faddl
fdivl
rorb
rcr
mov
mov
test
sbb
cli
sbb
pop
add
pop
add
fidivs
js
xchg
cmp
add
sub
mov
xor
cld
mov
je
into
clc
fidivl
jmp
outsb
mov
stos
sub
testb
outsb
mov
inc
jne
pop
add
jl
dec
jmp
jle
add
sub
fmull
inc
cmp
push
lea
push
stos
push
cmp
push
or
and
sbb
mov
rcrb
lahf
je
je
push
mov
lret
je
or
pop
xchg
mov
xchg
jns
mov
jle
xor
push
cmc
add
sti
or
cld
nop
adc
int
stc
pushf
pop
addr16
sub
mov
add
arpl
clc
test
call
push
std
cwtl
sbbb
cltd
xor
mov
xchg
aas
xchg
dec
push
xchg
pop
das
jne
mov
xchg
jo
push
rcll
add
cs
fsubrl
jl
leave
push
leave
nop
pop
je
or
inc
pop
push
outsl
and
and
push
mov
jo
lods
fwait
icebp
lea
push
mov
push
add
pop
mov
push
sahf
and
les
pop
pusha
mov
sti
scas
push
subl
dec
push
dec
add
push
fdivrs
inc
or
sbb
andl
pop
adc
add
imul
ret
push
ja
ja
sbb
push
nop
dec
mov
push
xchg
or
mov
sbb
adc
fs
mov
call
ja
pop
cld
mov
repz
movnti
arpl
dec
push
mov
and
popa
fcoms
sti
and
pop
insl
push
or
and
sbb
test
daa
xor
iret
mov
sahf
subb
adc
push
or
test
js
rcrb
push
pop
cmp
jge
inc
and
scas
cld
add
mov
setb
test
jne
mov
xchg
cmp
sbb
mov
xor
and
adc
pop
add
mov
adc
mov
jne
dec
shrb
push
pop
jl
jmp
aam
fwait
adc
dec
nop
lock
hlt
ret
pusha
mov
movsb
aam
adc
pusha
ss
xchg
test
xor
sbb
fstps
shrl
inc
cmp
inc
scas
das
push
fisttpl
pop
hlt
clc
adc
or
jmp
sub
push
loopne
shrb
sub
sub
jmp
inc
mov
and
pop
sub
hlt
cs
add
ret
adc
gs
negb
repnz
clc
or
and
or
out
push
je
and
je
std
push
clc
frstor
mov
or
add
xchg
pop
cmp
iret
mov
leave
pop
and
rcl
add
and
std
xor
or
insb
add
fwait
movl
push
icebp
xchg
out
xchg
movl
mov
mov
test
xchg
sbb
test
fsubrs
gs
push
mov
lods
movsl
test
xor
lods
sub
push
rolb
cltd
adc
push
dec
pop
out
and
gs
push
in
mov
pop
dec
jp
setne
decb
test
push
fisubl
pushf
int3
lret
push
xchg
fmuls
ret
jne
push
push
or
mov
out
xchg
in
or
divb
ja
xor
enter
mov
es
or
mov
cmp
scas
push
push
sahf
mov
add
inc
pop
add
xor
rcll
adc
js
mov
xchg
pop
test
insb
add
orb
jb
push
or
in
pop
mov
jnp
mov
popf
cmp
and
jl
mov
push
add
add
mov
pop
andb
jl
sub
xchg
sub
leave
call
div
lahf
gs
test
call
mov
inc
insl
call
lcall
xor
mov
in
mov
arpl
call
ud1
enter
sub
xchg
dec
inc
lea
push
call
jecxz
pop
push
mov
fcomps
jbe
xor
ss
or
xor
sub
bound
rorb
in
mov
and
mov
xchg
add
and
cmpb
repz
adc
and
xlat
mov
test
dec
sbb
add
sub
bound
sub
push
pop
or
stos
or
pop
adcl
je
leave
rorb
stos
and
cwtl
outsb
and
add
subb
iret
sbb
mov
stc
jl
lea
push
test
pop
xorw
push
mov
mov
icebp
out
fisttpll
pop
push
push
lcall
cs
stos
mov
aas
popf
inc
arpl
dec
jo
ljmp
adc
mov
mov
mov
sbb
inc
addl
dec
mov
jo
lea
mov
insb
ret
ret
or
pop
int3
pop
call
add
enter
or
or
enter
push
mov
mov
leave
mov
jge
adc
ss
dec
adc
fsubrs
and
shl
daa
add
inc
sbb
or
fdivl
loope
js
add
es
adc
outsb
sti
loope
adc
jge
jl
bound
daa
dec
pop
push
fsubrp
adc
arpl
push
in
mov
fcomip
movsl
pop
loopne
and
mov
test
push
ud0
sbb
arpl
xlat
ficoms
sbb
cmc
adc
scas
adc
fsubl
fwait
sub
mov
xchg
rcrb
pushw
adc
push
addr16
or
or
dec
scas
mov
xchg
imul
adc
je
in
imul
push
push
push
call
add
out
sub
aam
add
add
pop
jle
or
xchg
xchg
sbb
inc
cmp
cmc
dec
neg
mov
pop
bnd
xor
inc
and
popf
mov
je
xchg
mov
lods
or
add
pusha
and
in
add
andl
lahf
push
or
add
jge
add
pop
in
lds
xorl
push
add
mov
sbb
mov
or
in
mov
jl,pt
into
add
sahf
pop
adc
jne
pop
push
call
or
lock
sti
sbb
fsubr
or
pop
call
pop
inc
add
jmp
out
pop
jmp
push
push
pusha
les
or
loopne
inc
or
add
outsb
dec
jb
lcall
loope
add
das
movsb
inc
imul
cmp
repnz
test
pushf
fs
lods
push
add
pusha
dec
push
rcrb
push
cmp
lock
loope
pop
mov
mov
adc
adc
mov
dec
push
push
iret
scas
shrb
sbb
fisubrl
les
jge
mov
push
rclb
cwtl
lds
adc
rclb
push
dec
xor
mov
inc
test
jecxz
mov
dec
push
mov
sub
stc
fcmovb
mov
orl
xchg
in
sub
add
rolb
and
cwtl
and
lahf
push
adc
movsb
push
rorl
and
xchg
inc
adc
or
lret
das
test
dec
inc
cmp
bswap
sub
mov
mov
xor
jns
stos
loope
enter
adc
add
sti
xlat
sbb
sub
cmp
test
pop
cmpsb
sbb
pop
call
mov
fiadds
stc
loope
adc
cld
jo
push
daa
sldt
pop
leave
push
dec
pop
push
xchg
pop
ds
ljmp
xlat
addb
nop
sbb
shr
stos
arpl
shrl
dec
mov
sbb
push
repnz
cld
pop
dec
pop
or
mov
add
adc
or
dec
ds
out
push
cld
inc
add
inc
add
js
scas
jno
add
add
loope
push
or
push
push
sub
outsl
jno
dec
xor
or
jbe
push
arpl
mov
jmp
mov
popf
jle
jle
pop
or
push
addl
mov
jmp
xor
shll
mov
int
xor
popf
lret
mov
pop
push
in
adc
push
rol
and
cltd
xchg
xchg
arpl
lcall
sub
push
mov
cmp
inc
xor
in
dec
mov
clc
and
pop
inc
js
jo
testl
std
inc
push
xor
test
jmp
pop
pop
icebp
jae
popa
packuswb
pop
jl
outsb
or
fs
mov
cmp
xchg
inc
push
fnstsw
cmp
idivl
or
dec
mov
inc
and
idivb
jo
jle
cmp
arpl
pop
pop
mov
jg
mov
je
ja
add
add
loope
push
mov
push
mov
sub
nop
adc
arpl
and
popl
cwtl
and
subl
mov
fnsave
orl
and
imul
outsl
outsl
testb
cmp
pop
sti
and
gs
sub
mov
inc
dec
out
mov
pop
jae
test
push
inc
jecxz
inc
sahf
dec
or
or
xchg
out
mov
cltd
sbb
fwait
mov
xor
mov
inc
xor
testb
hlt
push
scas
or
add
jne
imul
jbe
lret
or
or
xlat
pop
and
add
imul
lock
mov
jl
sbb
fs
sub
jl
in
pop
pop
mov
push
ja
popa
jb
test
sub
movsb
je
movsb
inc
jno
rorb
adc
sahf
lret
call
sar
inc
dec
lcall
cmp
inc
fists
rcrb
cmp
and
es
inc
adc
js
sub
cmpl
mov
xchg
xor
push
xor
jno
outsb
mov
sbb
sbb
int
cltd
sbb
xor
and
add
rolb
rorl
ss
jg
jbe
mov
scas
in
sbb
in
inc
adc
push
sbb
adc
test
jl
fsts
decb
push
enter
inc
add
adc
repnz
add
cmp
movsb
std
adc
std
pop
shlb
cmp
cmp
mov
push
or
mov
aad
es
lret
pop
cmp
outsl
xor
ds
push
mov
pop
das
xchg
cmp
or
int
or
push
inc
push
fsubl
jbe
gs
int3
sbb
push
lret
inc
dec
gs
adc
cli
and
push
adc
gs
and
pop
sub
inc
xchg
adc
fyl2xp1
and
std
mov
jno
pop
lahf
adc
std
loope
pop
inc
in
add
cmp
sbb
ret
cmp
dec
dec
data16
call
lock
testl
ret
negb
lea
andl
cltd
inc
push
jge
push
mov
xor
pushf
sub
xor
movups
pop
icebp
data16
xchg
xchg
adc
out
jge
push
test
jne
fwait
movsb
repnz
fs
mov
fs
add
incl
imul
daa
or
repz
in
or
xchg
sub
sub
mov
inc
sbb
lds
insb
mov
pop
push
cld
xchg
bound
push
jbe
jne
sbb
std
int3
xor
dec
scas
test
or
jb
and
movsl
js
pop
and
dec
or
andb
or
sbb
cmp
jne
js
ljmp
xor
imul
pusha
int3
cmp
test
jge
mov
push
mov
xor
jl
movl
test
lods
sub
xchg
xchg
xor
push
push
orb
push
pusha
mov
and
dec
test
je
mov
iret
sbb
push
pop
pop
push
push
push
js
dec
mov
in
icebp
mov
lcall
idivb
push
mov
insl
fs
cmpsl
js
js
adc
dec
xor
and
push
dec
in
xchg
int3
xor
push
adc
gs
mov
or
xor
ja
jae
dec
sbb
and
xor
shrl
fists
cmp
jns
push
ret
ret
push
mov
cmp
cmp
popl
lock
mov
filds
pop
sbb
mov
dec
push
fs
add
sbb
test
pop
out
add
sbb
movsb
or
xor
and
movsl
jo
xchg
cmpsb
xchg
add
push
stos
and
pop
mov
push
push
in
mov
mov
and
dec
gs
in
pop
sub
push
and
test
cmpsl
mov
imul
jge
jecxz
leave
and
add
test
pop
push
fwait
push
les
inc
dec
lock
lods
or
lods
bound
inc
jne
shlb
notl
add
mov
mov
subb
pusha
mov
ljmp
jmp
xchg
mov
sub
or
mov
sub
enter
lods
dec
add
xor
sub
jbe
imul
sub
fisttpl
and
insl
test
sbb
test
push
push
mov
sub
mov
mov
cmp
sbb
push
les
rcl
mov
pop
ret
cld
addr16
inc
push
repz
loop
fldt
jl
pop
hlt
setne
pop
repz
mov
aas
push
push
lcall
pop
mov
adc
hlt
jne
push
push
push
push
scas
mov
push
imul
je
sbb
cli
pop
adc
lahf
adc
push
iret
insl
adc
pop
cmp
sub
pop
and
xchg
sbb
or
adc
or
and
popl
mov
sbb
or
inc
adc
inc
rclb
lods
or
loope
mov
push
daa
xchg
sbb
add
addl
jnp
punpckhdq
aaa
jb
shll
xchg
cmpsl
fsubl
sbb
add
xor
pushf
add
push
mov
sbb
iret
jge
jmp
mov
add
movzbl
shl
lock
or
dec
je
add
sub
mov
jmp
mov
aad
mov
pop
lods
neg
push
push
xor
push
popa
jno
mov
arpl
or
or
inc
mov
sub
in
push
fs
inc
sbb
movsb
xor
push
and
inc
and
js
sub
insb
sub
mov
mov
add
and
xchg
scas
incb
sbb
jne
push
push
cmp
jg
and
sbb
or
xor
lock
pop
push
cmp
push
sub
addl
sbb
push
mov
add
mov
pop
or
sub
add
sbb
loope
jbe
add
xor
push
shll
and
jge
cmpsl
jnp
or
xor
or
xor
push
andb
and
pop
mov
push
in
xchg
imul
jmp
xchg
inc
push
push
repnz
jbe
pop
shlb
or
and
sbb
add
insb
xchg
mov
orl
or
ljmp
push
inc
lcall
or
push
push
jne
fadds
jle
pusha
add
or
xchg
ficoms
negl
sub
push
xchg
mov
or
fbstp
push
mov
out
xlat
or
scas
jne
fldl
xor
add
adc
push
sub
adcb
out
ja
jg
sub
cld
icebp
test
and
jo
pop
jns
lcall
stc
sbb
add
push
xor
pop
sub
cmp
and
sub
cwtl
add
fistl
mov
js
negb
dec
repz
and
or
push
movzwl
pop
movswl
add
sub
cmp
setge
loopne
std
test
jle
cmp
add
jge
addb
sbb
xchg
stos
in
andb
mov
pop
aad
lret
inc
push
scas
fmuls
mov
push
add
sub
push
cmp
aaa
add
call
jnp
add
mulb
push
mov
sub
ss
cmp
cmp
das
push
push
shld
lea
mov
aaa
add
xor
outsb
cmpsl
push
scas
sub
iret
aad
pop
into
dec
mov
add
adc
call
mov
push
shll
inc
hlt
jle
xor
add
je
adc
leave
jp
ja
adc
insb
cmp
pop
mov
sbb
std
xor
sbb
shlb
sbb
xor
mov
sub
adc
shll
push
xlat
pop
pop
xor
or
rol
push
ret
sbb
movsl
icebp
and
pop
jge
mov
popa
addr16
fnstsw
sub
push
add
sbb
mov
push
pop
pop
push
shlb
inc
ret
push
adc
repz
pop
test
sub
clc
repz
call
add
cli
xor
leave
addr16
xchg
xchg
sbb
xor
fadd
std
inc
test
test
adc
xchg
shlb
jle,pn
mov
inc
add
inc
iret
xorl
fadd
ret
add
mov
test
adc
mov
adc
lods
arpl
iret
popa
mov
clc
sub
and
adc
test
imull
cltd
cmp
push
mov
lret
into
lock
movsb
push
adc
shll
sbb
ljmp
lea
add
cmp
jae
push
lds
mov
jb
cltd
add
cwtl
shl
and
xlat
scas
pop
mov
push
add
push
ret
dec
scas
mov
add
push
mov
jmp
push
lcall
hlt
jge
mov
jmp
jne
add
mov
outsb
adc
aam
jecxz
sbb
iret
psllw
jmp
rorb
ljmp
pusha
pop
or
je
orl
mov
cmp
jg
loope
shl
jge
push
sahf
jnp
sub
jmp
fdivs
pop
mov
hlt
mov
stos
dec
fistps
push
sbb
cmp
push
test
mov
sub
push
push
push
movsb
mov
rolb
or
xor
mov
xchg
lock
or
jo
loope
push
nop
mov
inc
les
lock
xchg
mov
in
mov
roll
stos
lcall
loop
xor
cmp
iret
adc
mov
stos
xchg
jno
mov
bound
push
clc
and
push
loope
sub
mov
xlat
shlb
popa
sbb
push
cmpsb
cmp
or
jle
add
sbb
data16
cli
cmp
cmpsb
sub
push
xchg
out
xchg
test
js
add
pop
psubusb
and
mov
jo
dec
test
lods
xor
or
loope
lret
ret
addl
movsb
mov
xchg
pop
xchg
push
sarl
push
aam
popa
outsb
add
mov
pop
dec
and
into
push
mov
sbb
pop
add
and
ficomps
push
cli
or
ds
es
or
sbb
cmp
mov
pop
js
aad
cli
std
les
or
add
mov
lcall
inc
cmp
vmovhps
cwtl
sti
xor
ljmp
sub
or
jg
ds
inc
dec
mov
xchg
cmp
xor
fidivrs
jne
sub
pop
mov
jmp
sbb
popf
jo
push
shr
clc
add
arpl
add
test
roll
xchg
mov
int
ds
xchg
push
in
lcall
add
lods
adcl
adc
mov
add
sub
sub
ltr
cmp
sbb
ret
add
adc
in
pusha
mov
inc
and
jecxz
pop
sub
add
pop
mov
ds
stos
add
mov
mov
dec
pusha
or
repz
and
add
inc
pop
adc
inc
sbb
nop
ficoms
cmp
adc
push
xchg
subb
lods
pop
mov
adc
inc
mov
mov
jge
pushf
pusha
and
ret
cs
pop
cmp
cmpsb
inc
cli
jbe
or
push
sbb
fsubs
xor
inc
mov
popf
xor
test
sbb
mov
push
cmp
jb
adc
inc
aam
sub
cmp
shr
add
jp
cmc
in
push
push
mov
imul
add
dec
adc
and
cmp
jno
icebp
adc
adc
xchg
fadds
push
adc
dec
mov
fdivr
push
jno
leave
push
aad
or
in
cmp
sar
arpl
push
nop
cmpl
hlt
cmp
lcall
inc
and
push
sti
adc
arpl
adc
mov
pop
push
sbb
fsub
ficoms
push
lock
mov
test
add
iret
xlat
icebp
and
movb
daa
dec
adc
and
lret
es
sub
sub
and
mov
or
insl
sub
loopne
adc
push
xor
rol
pop
shr
push
cmpb
add
pop
filds
adc
sbb
lock
mov
inc
shrl
call
ja
mov
aad
ret
dec
add
iret
xor
fstpt
sub
add
mov
push
lds
je
repz
jne
jns
xchg
mov
and
or
sbb
add
into
gs
fists
and
adc
mov
mov
sub
mov
inc
jl
and
push
ss
loope
or
sbb
inc
mov
mov
orb
loope
xchg
sub
pusha
xchg
popa
push
mov
lock
jmp
fistpl
out
sbb
jne
in
sub
xor
add
push
push
cmp
sbb
add
dec
imul
addb
adcb
jg
stos
daa
mov
pop
mov
push
push
push
nop
add
mov
pop
ja
sub
mov
push
ss
push
push
jp
dec
add
pop
xor
lret
or
sbb
lret
lret
sahf
or
push
movsb
adc
push
sub
rcrb
rcrb
mov
pop
movl
movsl
sbb
mov
call
stos
add
and
add
jne
jp
sbbl
pusha
fadd
xlat
ljmp
jbe
jns
pop
daa
cmp
pop
jmp
xor
leave
inc
popa
enter
or
mov
aam
and
sbb
andb
add
insb
sbb
mov
adc
push
cmp
or
or
loopne
mov
adcb
arpl
add
negl
mov
bound
je
cmp
and
cmp
and
sub
in
push
lock
aam
dec
pop
cmp
sbb
leave
sbb
insb
add
pop
push
push
and
dec
add
and
nop
sbb
mov
gs
push
add
sub
or
jns
loopne
xchg
mov
stos
rorb
jo
and
rcl
or
imul
push
outsl
jbe
insb
ss
push
add
and
mov
dec
dec
sar
xor
jo
sbbb
dec
pop
fcoml
in
into
or
mov
mov
mov
enter
ffreep
int
leave
pop
or
pop
ror
shrb
orl
sbb
lock
mov
lret
push
mov
lahf
add
iret
push
push
xor
test
mov
or
push
rcll
subb
jle
mov
push
inc
sub
ret
mov
aam
dec
out
cmpsl
fnstcw
or
enter
inc
adc
test
cmp
inc
stos
cmp
push
push
sarb
add
jne
xor
push
insb
xor
or
adc
cld
sub
test
add
lock
scas
add
xchg
lret
fidivl
or
xor
test
xlat
nop
insl
add
push
or
subb
lea
push
lock
rcrb
lret
cld
sub
mov
imul
jo
and
sbb
jg
sub
lock
call
outsb
xor
cmp
loop
pop
rol
pop
mov
shr
adc
jp
mov
je
imull
icebp
add
iret
push
push
add
sbb
fcoml
pop
mov
fstps
dec
jp
mov
add
add
jp
xchg
or
push
mov
add
dec
iret
or
jo
enter
test
pusha
dec
sbb
inc
movsl
xchg
outsb
add
pop
pop
cmp
shrb
hlt
jne
inc
rcll
and
or
sbb
ja
test
adc
je
sbb
rcll
pop
sbb
cmpsb
jmp
movsb
test
or
insb
cmc
fimull
xchg
add
dec
add
push
or
sbb
test
lock
pop
push
mov
cmp
je
sbb
push
xchg
js
and
cli
lods
outsl
xchg
jp
clc
cmp
mov
xchg
data16
int3
in
pop
and
addr16
insb
fldcw
inc
mov
push
sub
or
cmp
xorb
fisubrs
in
inc
shrb
sbb
aad
push
push
pop
or
push
popa
insb
sub
cmpsb
push
or
push
movsb
or
in
mov
xor
frstor
or
mov
mov
and
cmp
shll
push
cld
push
push
inc
arpl
cmp
sub
push
sbb
pop
aad
ret
pop
imul
or
adc
aad
cwtl
lock
or
xlat
push
aas
push
adc
push
push
xchg
add
inc
or
lods
push
and
jp
xchg
bound
push
clc
add
stc
jbe
hlt
push
in
inc
shr
sub
push
mov
neg
push
sbbl
lea
test
or
push
loope
in
mov
mov
push
je
sbb
incl
lock
push
push
xor
push
push
cmp
je
sbb
push
push
push
push
push
or
xchg
sahf
inc
notb
ja
xor
sub
fnsave
push
aas
dec
pop
popf
les
cmc
cmp
notl
lods
cmpsb
or
pop
icebp
or
add
cmpsb
jp
cwtl
imul
dec
push
push
mov
adc
mov
jo
je
jo
add
sbb
repnz
cmp
gs
addr16
inc
sar
sbb
rcrb
cmc
inc
pop
ss
add
adc
int
push
lods
cmp
add
test
test
lret
jl
cmp
push
adc
jae
les
out
pop
je
lods
mov
or
faddl
sar
jb
pop
mov
mov
loop
mov
push
stos
int3
jmp
sbb
pop
loope
std
mov
and
xor
pusha
pop
or
mov
push
lea
in
cmp
je
xchg
cmp
je
cmp
jne
cwtl
add
cmpsb
mov
jbe
ja
cmc
je
adc
dec
fildll
or
cmc
add
sub
jmp
outsl
pop
outsb
pop
mov
cmp
xor
adc
mov
pop
mov
push
jo
add
test
mov
xchg
jmp
mov
lea
cmp
jne
or
add
xchg
aam
push
or
adc
mov
mov
or
rcrb
push
sbb
fisubrs
repz
or
je
mov
or
insl
aas
sbb
movl
mov
hlt
mov
sti
int3
sbb
mov
inc
dec
dec
dec
test
add
pop
and
lret
rol
out
jb
dec
dec
mov
mov
dec
mov
add
mov
or
jecxz
aam
mulb
push
int3
shlb
movl
or
push
pushf
fcmovbe
jae
fsubs
add
xchg
cltd
movsb
add
add
mov
lock
movsl
hlt
cmp
test
stos
mov
cmp
xchg
cmp
pop
or
add
cmc
jmp
push
xor
xchg
inc
and
int3
mov
inc
aaa
or
sti
xchg
cmp
add
rclb
rol
push
popa
mov
cwtl
lret
xchg
stos
lock
daa
add
shl
push
loopne
in
dec
inc
testl
mov
cmp
iret
jne
jp
lcall
leave
jne
xor
rorb
call
jo
adc
and
dec
mov
xchg
in
xor
fadd
popw
lods
test
gs
xchg
mov
aam
jb
cwtl
mov
and
icebp
test
adc
or
push
push
in
inc
add
sub
sub
xchg
outsb
and
xor
pop
nop
mov
cmp
jle
xor
push
fcom
scas
xlat
pop
push
jmp
in
xor
push
mov
or
loopne
leave
mov
inc
xchg
mov
enter
mov
cli
sub
sbb
xor
inc
pop
mov
inc
jecxz
mov
add
lret
pop
jo
cmp
push
sbb
dec
xor
adcl
adc
leave
fadds
mov
fsubrs
xor
jns
mov
xchg
shl
or
loop
mov
cs
xchg
mov
es
je
hlt
cwtl
add
xor
in
sbb
sub
sub
shrb
xor
fstpt
mov
inc
lods
shl
jp
pop
leave
sub
jge
push
call
outsb
push
adc
test
mov
push
imul
pop
sub
scas
rcrb
sarb
clc
sbb
ds
pop
mov
cmp
or
jbe
push
sub
or
jmp
push
pop
insb
adc
les
sbb
jns
gs
int
pop
test
xor
iret
lea
pop
inc
adc
push
scas
push
cmc
push
cmp
xor
js
mov
xor
pop
add
mov
nop
push
xchg
pop
sbbl
aam
out
inc
gs
push
repnz
mov
shlb
sub
cmovl
or
fmuls
mov
sbb
sub
js
pop
xor
inc
ss
cmp
sbb
mov
insb
jle
or
add
add
add
xlat
pop
rcll
dec
cmp
jne
mov
test
loop
sub
add
fmull
push
mov
sbb
cmpsl
repz
push
mov
mov
jne
stos
insb
add
ret
pop
cmp
push
cld
repz
push
rcl
dec
mov
sbb
and
movsb
push
push
xor
jnp
adc
stc
add
xor
mov
iret
test
sbb
mov
xchg
xchg
lret
enter
mov
mov
mov
lahf
push
mov
adc
inc
adc
or
or
enter
int
aad
fdivrl
add
insl
push
adc
adc
pop
fdivl
scas
adc
fs
xchg
sahf
adcl
inc
mov
xor
sub
shll
repnz
jbe
add
scas
lods
push
add
ret
loopne
jno
adc
imulb
inc
popf
sahf
mov
movsb
cltd
adc
or
loop
cmpsl
dec
es
loope
jbe
rcrb
es
and
popf
push
stc
rcl
bound
push
test
and
imull
movsb
fsts
jns
lea
pop
dec
mov
sub
push
das
les
jge
mov
shlb
dec
cmp
adc
lods
stos
or
or
rorb
roll
repnz
or
and
lahf
stos
addr16
cmp
sahf
clc
dec
lock
fistpl
cltd
adc
push
push
mov
jge
lds
add
dec
or
push
push
mov
outsb
inc
fisubl
push
inc
or
cmc
scas
bound
ret
mov
push
jmp
push
add
xor
int
xchg
sbb
movsl
popl
mov
imul
rolb
sbb
arpl
push
shll
dec
jmp
sbb
mov
sbbl
sub
adc
push
xor
adc
add
xor
inc
mov
cmpsb
dec
push
stc
dec
sti
es
add
add
test
roll
xor
sbb
sbb
push
push
or
xor
mov
lock
data16
iret
pop
test
test
das
testb
xor
jbe
sbb
loopne
and
cmpsl
mov
movsb
mov
mov
mov
xchg
xor
push
mov
jbe
jb
xor
xor
inc
mov
das
pop
dec
sti
aaa
sub
in
cmp
jne
mov
jmp
nop
rep
add
add
sbb
in
lods
push
cli
nop
and
iret
sbb
mov
xchg
mov
push
and
je
xor
fiaddl
xor
mov
and
and
enter
mov
aas
push
push
les
dec
leave
test
inc
mov
push
push
or
mov
lea
inc
data16
jnp
mov
push
fisttpl
hlt
jne
adc
mov
inc
mov
test
sbb
adc
push
cmp
js
roll
dec
mov
xor
pop
mov
lea
arpl
les
mov
in
mov
es
push
aam
cmc
sbb
or
mov
add
sub
adc
dec
outsb
in
ds
add
dec
loop
cmp
and
clc
sub
sub
xchg
arpl
fwait
sbb
xor
mov
pop
pop
pop
icebp
lcall
xchg
mov
push
call
sbb
mov
add
fadds
out
subb
loope
in
lcall
or
push
ret
subb
movsw
pop
and
enter
mov
lahf
dec
lods
dec
inc
push
push
mov
rorb
mov
push
shl
mov
dec
inc
frstor
mov
cmp
inc
fnsave
xchg
or
int3
daa
pop
rclb
fsubl
or
mov
fcos
add
imul
mov
cli
jno
and
outsb
sub
cmp
pop
or
aam
pop
sbb
or
or
or
mov
cmp
gs
adc
ds
clc
push
fmuls
sbb
or
fidivl
loopne
or
jne
iret
push
mov
adc
xchg
or
push
in
je
add
inc
dec
or
or
or
lea
adc
inc
mov
add
enter
add
test
loopne
cmpsl
pop
jne
inc
add
or
sbb
mov
das
xor
xor
in
pop
add
add
bnd
mov
into
or
mov
jo
push
aaa
in
xchg
cs
lock
pusha
push
lock
adc
aas
add
jecxz
out
gs
fidivrl
push
ret
inc
icebp
adc
test
and
je
in
out
add
mov
loop
lret
in
jl
cltd
adc
into
popf
pop
add
mov
xorb
ds
das
pop
dec
inc
xorb
in
sti
or
inc
jp
lret
sub
lods
mov
or
xor
outsl
xchg
inc
js
out
cmc
push
jmp
push
inc
shlb
aam
out
mov
mov
inc
push
jle
cwtl
fwait
mov
test
sahf
cs
in
not
dec
jmp
popf
dec
sti
jmp
mov
cmp
fwait
mov
mov
in
aaa
lcall
jmp
cs
sbbb
mov
adc
mov
pop
out
loopne
add
xor
call
adc
and
and
or
fmull
scas
xlat
aam
or
clc
leave
imul
and
mov
insl
cmpsb
pop
add
cmpl
lods
mov
bound
mov
rolb
mov
gs
and
mov
push
pusha
adc
lahf
pop
add
xchg
rorl
xchg
lock
pop
jnp
call
sbb
and
mov
adc
stc
out
mov
pop
shr
dec
stc
jbe
sub
dec
leave
aad
xor
jns
lock
inc
mov
imul
mov
or
sub
aaa
mov
lea
xor
xor
mov
mov
add
into
ds
fiadds
inc
ja
push
sub
dec
in
inc
mov
je
sub
mov
inc
arpl
lcall
and
mov
mov
cmp
je
popl
repnz
movsb
adc
pminub
push
add
adc
push
inc
push
sbb
or
jecxz
mov
mov
or
mov
imul
clc
jp
or
or
js
int
adc
mov
mov
sbb
sub
cmp
cltd
call
fs
add
sub
jmp
movl
notl
mov
sub
mov
add
sbb
jnp
xor
jb
sub
xor
or
inc
aad
jge
cmp
incb
add
mov
dec
sbb
add
int
push
add
pop
adc
cmp
cmp
pusha
sbb
mov
andb
jmp
rorb
mov
jne
cmp
je
push
or
add
lcall
adc
pushf
mov
mov
add
and
js
mov
adc
sbb
test
scas
or
es
and
fwait
xchg
pop
adc
mov
pusha
icebp
movl
adc
loope
cld
push
mov
add
mov
mov
pushf
sub
mov
fimull
push
test
inc
or
jne
les
neg
adc
fs
inc
in
sub
inc
in
pusha
jnp
xchg
pop
cmp
hlt
loopne
or
fidivs
inc
mov
or
or
outsl
sbb
xor
pop
cmp
dec
dec
jl
dec
dec
call
les
mov
js
nop
sub
push
loopne,pn
push
xor
pop
fcompl
rorb
mov
cmp
pusha
push
rorb
jge
xor
out
jbe
push
jg
or
arpl
rcl
shl
loop
xchg
cwtl
and
sbb
sarb
jne
and
bound
lods
pop
jns
mov
cmp
or
or
test
or
xchg
fwait
bound
aaa
stos
mov
adc
test
mov
push
sbb
xor
lock
lods
pop
sbb
push
add
or
push
insl
sub
je
cld
ss
js
push
and
pop
and
mov
mov
lea
ret
push
and
push
popf
push
mov
mov
movl
fbld
cmp
pushl
nop
inc
mov
jb
jmp
dec
mov
dec
jo
or
fs
mov
into
mov
es
mov
or
lds
sbb
sub
lock
popl
dec
and
test
sbb
sub
lret
pop
sub
add
je
fs
iret
aas
inc
jbe
stos
and
push
mov
nop
sbb
sub
xor
inc
sbb
add
and
popf
inc
test
lcall
jmp
mov
in
bound
jmp
insl
lds
push
xchg
inc
data16
je
mov
mov
adc
xor
jmp
arpl
jle
loop
movsb
insb
add
push
rcrb
push
add
das
stc
xor
sti
movsb
scas
jnp
add
jmp
mov
dec
sub
sbb
jle
ret
lea
pop
pop
and
es
inc
xchg
ds
clc
arpl
hlt
rcrb
mov
mov
mov
enter
dec
sbb
int
outsl
ljmp
lds
js
dec
and
pushl
xchg
rorb
cwtl
and
or
cltd
stos
nop
add
dec
xor
ja
sub
pop
cld
mov
adc
push
nop
mov
lret
xchg
pop
cwtl
test
leave
xchg
push
push
add
inc
hlt
hlt
call
pop
or
jg
sbb
loopne
rcrl
add
push
or
add
adc
add
push
or
sbb
call
dec
fmuls
adc
jo
add
cmpsl
movsl
addr16
dec
add
sar
or
push
xor
es
and
sbb
mov
lock
or
sarb
add
add
mov
push
mov
es
sub
add
testl
sbb
sahf
or
xor
push
lahf
imul
cmp
push
wbinvd
mov
pop
sub
dec
xchg
and
in
push
fidivl
and
into
or
rorb
cmp
lock
mov
mov
nop
xor
in
xchg
je
cmpl
or
sbb
imul
jmp
das
pop
xchg
xchg
fcoml
sub
daa
jmp
andb
testb
add
xchg
fcom
sbb
mov
add
shrb
mov
sarb
sbb
adc
pop
mov
and
or
rolb
add
stos
xor
outsb
pop
add
pop
rcrb
or
fcomp
and
rcrl
dec
cmp
insb
push
sub
ljmp
sub
adc
pop
or
add
jmp
lea
mov
or
les
dec
test
add
loopew
sbb
xchg
pop
je
mov
mov
jge
push
stos
hlt
scas
mov
push
inc
subb
add
sub
popf
test
cmp
xchg
iret
jg
xorb
mov
push
push
ljmpw
lock
or
pop
fdivs
push
into
es
insl
imul
xchg
imul
push
inc
dec
fs
xchg
gs
add
push
lcall
mov
or
jmp
or
add
test
int3
aad
stos
mov
mov
iret
mov
shl
sub
test
add
cmp
dec
or
loope
add
loopne
mov
and
mov
pop
and
dec
mov
js
mov
add
movsl
cmp
or
mov
inc
dec
ror
inc
push
jae
inc
xorl
lea
sbb
add
push
push
lods
push
fidivl
jmp
rol
or
outsb
dec
clc
jecxz
cs
ret
push
cmp
push
or
test
push
push
ficomps
dec
push
add
pusha
loope
mov
in
aaa
lea
and
call
or
push
cmp
dec
orl
or
lock
icebp
mov
xor
addb
cwtl
adc
test
out
mov
or
es
icebp
push
mov
sbb
pop
call
cmpl
icebp
mov
sarb
jo
push
aaa
cltd
and
stos
pop
xorl
add
sarb
inc
mov
sub
mov
pop
daa
mov
ss
sub
xor
adc
xor
and
sti
add
sbb
dec
sti
inc
cmp
or
je
ret
inc
push
xchg
pop
push
xor
mov
enter
outsb
jmp
arpl
es
movsl
imul
loopne
or
shlb
clts
push
add
jg
lock
xchg
mov
add
jle
int3
add
jb
mov
mov
jge
cmpl
mov
iret
mov
aas
jne
rorl
lahf
pop
mov
add
sub
fwait
and
jecxz
add
or
in
ficoms
or
pusha
lds
add
sub
pop
imul
iret
shlb
pop
lret
mov
ja
insb
stos
into
leave
add
loopne
stos
in
push
loope
filds
es
sbb
mov
add
inc
sub
sbb
add
pusha
sbb
das
popf
ret
xor
stos
cmpb
je
nop
add
mov
rcll
fisubrl
lcall
outsl
jne
push
push
push
pop
test
insl
loopne
roll
dec
sbb
test
fstpt
idivb
mov
das
aad
and
or
insl
rorl
outsb
movsl
pop
das
mov
jno
in
mov
mov
cs
jle
dec
xlat
mov
mov
adc
dec
or
enter
or
push
cmp
jb
mov
imul
add
ret
dec
pop
xor
arpl
or
or
hlt
fdivs
aaa
mov
cmp
push
push
cmp
dec
je
sub
add
adc
hlt
cmp
mov
inc
add
rolb
js
push
das
cmc
lock
je
mov
lea
dec
orl
in
adc
ret
pusha
mul
cmp
je
pop
adc
add
sbb
dec
add
or
movsb
add
inc
push
xchg
hlt
add
jmp
cs
mov
inc
jb
or
mov
dec
cli
mov
push
mov
and
sub
adc
faddl
faddl
mov
inc
cmp
aam
hlt
sub
adc
xor
inc
inc
and
mov
incl
inc
add
lret
or
jmp
call
in
dec
add
jnp
and
pushf
sbb
adc
pop
daa
popa
push
test
pop
and
xchg
scas
mov
mov
je
mov
push
mov
ret
bound
xor
and
adc
adc
or
and
fstpt
pop
clc
sbb
or
jmp
test
pop
jmp
das
mov
inc
and
ret
push
mov
pop
adc
test
push
and
or
push
inc
mov
cmp
shlb
add
push
mov
ja
loop
mov
scas
test
les
cwtl
ds
mov
mov
lock
je
call
dec
push
xchg
dec
cmp
cwtl
add
sbb
ds
inc
int3
cmp
push
mov
popf
xor
ja
push
fucom
dec
stos
push
cmovae
fmull
xorps
rcrl
add
arpl
aas
icebp
mov
push
leave
jp
jae
in
xchg
popf
rclb
inc
hlt
adc
neg
sub
aam
sbb
add
fucomp
rclb
pop
decl
stos
push
mov
add
pusha
mov
orb
mov
add
je
icebp
push
jecxz
sbb
sbb
sbb
out
ret
or
inc
mov
iret
loopne
ljmp
arpl
fs
add
loopne
aaa
and
fwait
sub
cmp
push
pop
mov
popa
push
or
daa
xchg
out
or
pushf
push
dec
sub
sbb
jb
cmp
lret
movsb
pop
xor
xor
daa
xchg
xchg
or
or
test
or
or
dec
push
fs
dec
in
adc
push
fnstcw
adc
adc
xchg
pop
add
or
mov
xor
sub
pop
int3
fildl
mov
add
mov
push
or
sahf
fsubrs
dec
aam
pop
push
mov
inc
pop
cmpsb
movb
sbb
sahf
loopne
popa
push
mov
dec
push
add
inc
push
es
aam
mov
cmpl
sbb
jns
push
clc
mov
dec
mov
orb
sbb
enter
leave
les
cmp
push
rolb
scas
sbb
add
lahf
lods
xchg
jo
dec
xchg
mov
jg
fs
inc
sbb
enter
cmp
and
and
and
or
ret
ss
aad
clc
lds
lea
imul
pop
cmpsl
pop
xor
mov
fsubl
test
dec
add
cmpb
xchg
fsubs
push
sbb
jns
mov
decl
int
adc
adc
clc
dec
int
aaa
lea
loope
mov
mov
data16
divb
aad
fnstcw
clc
and
xchg
and
dec
add
sub
andl
rorb
cwtl
test
pop
out
sub
xchg
add
and
pusha
aas
mov
push
in
aas
add
adc
mov
cmp
dec
xchg
push
adc
add
pop
sbb
in
and
inc
loopne
mov
ja
out
pushl
push
insb
or
lock
test
mov
adc
mov
sub
xchg
sbb
jl
xor
rolb
imul
loopne
inc
or
jmp
lea
xor
shrl
add
fmull
jb
xchg
add
dec
fisttpll
push
cmp
adc
inc
inc
dec
lds
push
mov
add
add
add
xchg
or
add
sbb
jns
push
jl
sub
scas
fisttps
adc
xchg
xchg
add
pop
or
sub
xchg
inc
int
xchg
sbb
adc
or
push
pop
subb
inc
mov
ds
and
lods
pop
xchg
push
sbb
fwait
mov
add
dec
inc
fdivl
fs
icebp
dec
out
push
push
push
add
mov
add
cmpxchg8b
add
push
inc
call
pusha
cmp
je
into
loop
pop
or
xchg
popf
push
add
push
push
loope
mov
imul
es
inc
cs
sbb
mov
aaa
clc
jo
pop
or
mov
popf
add
fldl
xchg
cmp
cltd
lds
mov
mov
pop
inc
popa
cltd
sbb
jbe
test
dec
aad
jne
push
inc
cmp
je
sub
adc
push
js
mov
mov
sub
cmp
adc
ds
cmpsl
int3
xchg
xor
test
ss
push
test
outsb
mov
jae
adc
sub
or
mov
cmp
lods
add
test
cmp
mov
outsb
stos
jne
push
dec
test
stos
dec
movb
ret
nop
in
inc
sub
orl
jo
mov
jns
xor
loop
rcll
mov
nop
adc
addr16
cld
call
and
cmp
jae
push
lods
loopne
imul
jmp
mov
push
repnz
aaa
subl
sbb
pop
in
add
test
out
inc
sbb
add
pop
dec
outsl
sbb
sbb
repnz
cmp
sub
push
insb
add
push
les
add
je
sub
stc
test
add
push
mov
push
push
add
pusha
add
test
inc
ret
sub
pop
or
test
and
cmc
or
fisttpll
fs
enter
repnz
lret
xor
mov
lea
inc
or
add
mov
aaa
sbb
in
xor
xor
mov
pop
or
fldt
call
inc
data16
out
push
mov
push
pop
shrb
add
add
loop
pusha
lods
mov
js
or
pop
lock
repz
add
xchg
das
cmp
cmpsb
out
adc
gs
xor
add
push
je
test
xor
push
sub
push
xor
inc
sarb
sbbb
mov
iret
adc
dec
mov
adc
aad
jnp
pop
mov
addl
adc
jne
sub
ret
ja
out
leave
mov
iret
jmp
mov
mov
inc
xchg
push
mov
or
push
cmp
push
and
popf
sarb
or
mov
int
push
test
js
lret
push
mov
test
xor
mov
test
jge
pop
fbld
shr
sbbb
cmpsl
push
mov
repz
or
pushf
mov
gs
jge
test
test
icebp
rolb
push
nop
pusha
rorb
push
adc
shll
pop
xchg
xchg
xchg
push
das
jecxz
add
mov
add
pop
int3
or
pushl
pop
stos
lock
or
and
adc
das
mov
nop
sub
or
and
lock
inc
sbb
lock
add
mov
std
inc
test
push
mov
mov
mov
nop
scas
stc
cmp
sarl
pusha
push
negl
cmp
mov
and
mov
add
xor
add
add
xor
sbb
setae
rcrl
cmc
or
inc
in
scas
ja
xor
es
mov
add
or
pop
pop
orl
mov
mov
and
cmp
js
loopne
and
push
jp
mov
nop
nop
jmp
fwait
inc
and
movsb
lock
cmc
push
sbbl
xor
or
adc
xor
push
ja
adcb
cmp
jmp
jle
lea
mov
ss
sahf
push
or
scas
cmpl
addl
sub
int
stos
js
cmp
push
and
mov
testl
adcl
ficoms
push
jbe
cltd
scas
mov
push
sub
icebp
das
lods
xor
inc
leave
add
mov
mov
arpl
scas
xor
scas
mov
sbb
inc
mov
dec
js
lock
inc
aaa
mov
pop
add
sbb
add
jo
mov
aaa
cmc
inc
test
xchg
test
inc
jg
fsts
or
dec
sbb
mov
pop
xor
push
push
aam
push
or
adc
or
push
adc
xor
mov
jecxz
out
sub
add
sbb
lock
pop
hlt
std
orl
lret
mov
xor
or
mov
and
movlps
sarl
ret
insb
xor
xor
lret
add
mov
subl
mov
inc
lock
mov
pop
iret
add
mov
and
push
lods
add
sub
stc
popa
jbe
xorb
faddl
add
sub
rclb
mov
cwtl
push
push
and
andl
insl
xor
xor
sarb
sbb
mov
sbb
push
adc
sbb
test
mov
imul
and
inc
sarl
adc
jno
mov
insl
out
mov
sbb
mov
test
jnp
push
es
repz
mov
in
and
cwtl
loop
adc
sub
stc
jae
or
push
jae
cmp
mov
add
popa
and
fadds
jbe
mov
sahf
push
jnp
sbb
daa
xchg
push
add
mov
add
and
cmpsl
sarb
push
hlt
into
dec
in
hlt
rorb
ljmp
xor
outsb
inc
mov
mov
test
mov
push
or
popf
fldt
popf
sbb
inc
enter
pusha
imul
in
fcmovne
lea
sbb
pop
pop
aam
and
add
add
or
mov
or
mov
mul
jecxz
mov
jmp
shlb
popf
sub
jp
je
cmp
jle
fsubrs
pop
sub
or
and
scas
shrb
xchg
adc
jo
rolb
popa
inc
cmp
sub
outsb
je
lds
xlat
adcb
push
aam
cltd
inc
add
push
mov
iret
lret
lret
xor
sbb
inc
cmpsl
inc
pop
nop
loopne
xor
add
push
lods
call
jmp
pusha
inc
scas
in
in
loope
mov
daa
xor
and
adc
or
popl
pushf
inc
stc
mov
adc
add
aas
jg
pop
sbb
or
sub
aas
test
popf
xchg
dec
inc
xchg
nop
cmpl
mov
rcrb
or
jmp
mov
push
stos
and
test
push
je
dec
jne
rorl
push
ret
xchg
xor
adc
xor
mov
and
inc
lahf
mov
xor
or
decl
push
xchg
and
andl
sbbb
push
jmp
cmp
pop
mov
sbb
aad
xor
call
sbb
dec
dec
jl
add
cmp
fdivrs
jp
data16
mov
add
das
pushf
test
inc
shrb
add
in
mov
or
xchg
sbb
scas
mov
sub
xchg
sub
inc
jo
cmp
add
lcall
or
adc
add
push
dec
mov
sub
xor
add
roll
inc
or
inc
pop
addl
fwait
add
inc
dec
mov
lret
stos
dec
or
add
mov
lcall
repnz
or
jge
movzbl
push
and
mov
xor
test
pop
lock
ret
ret
pusha
sub
insb
cmp
sub
push
and
cmp
jbe
push
jne
rolb
mov
and
daa
mov
cmp
pusha
pop
add
enter
mov
stos
or
mov
shrl
cmp
je
mov
sub
or
add
dec
dec
pop
inc
test
fidivrl
jmp
nop
lret
xchg
adc
push
or
cltd
xchg
mov
bound
loop
sbb
rorb
dec
and
cmp
sub
push
xchg
push
inc
nop
imul
cmp
pop
add
push
push
movsl
fs
push
leave
and
mov
xor
sub
js
sbb
test
xchg
cwtl
imul
xchg
or
adc
and
sbb
dec
les
push
sub
inc
movb
shrl
decb
jl
inc
add
mov
cwtl
test
pop
or
pop
xor
cmp
jae
and
outsb
add
jbe
mov
mov
mov
mov
and
add
lret
in
sbbb
or
mov
sbb
addb
in
je
fs
mov
enter
bound
jle
enter
pusha
lea
cwtl
popa
rcrb
push
pop
pop
and
insb
sbbl
or
adc
xorb
add
inc
adc
jb
lahf
arpl
sub
pusha
movsl
test
and
push
cmpsl
test
test
cltd
and
pusha
sub
js
loop
pop
mov
adcl
add
jae
in
sbb
dec
push
dec
add
pop
popf
add
clc
xchg
add
sbb
push
das
addl
dec
jl
add
in
and
inc
dec
jnp
je
rolb
dec
pop
mov
inc
test
xor
push
mov
std
sbb
insb
lds
ss
sbb
and
or
push
pusha
lret
add
stc
dec
inc
movsl
push
outsb
dec
scas
sbb
ja
or
pop
push
cmp
mov
cmp
test
test
or
jae
dec
shll
inc
xor
dec
test
rorb
push
lcall
lea
mov
les
loop
sbb
mov
sbb
inc
cmp
inc
adc
and
jl
jmp
mov
add
popa
xchg
mov
daa
je
sti
inc
roll
cmpb
xor
pop
sbb
or
lods
dec
and
or
push
int
pop
loopne
or
inc
sub
mov
adc
mov
cmpb
mov
lds
or
jl
rcrb
xchg
dec
sub
mov
add
jge
lret
xchg
leave
push
xor
add
xchg
ret
push
and
cld
inc
lock
je
movsl
test
and
pop
mov
mov
insb
je
push
lds
sbb
es
fisttpl
sub
rclb
inc
and
xchg
jmp
dec
jo
push
loope
cmp
jae
mov
xchg
push
bound
fcoms
xchg
cmovg
inc
cwtl
cltd
sub
fdivs
push
add
lock
clc
jle
clc
lods
roll
jne
xorl
add
push
shll
pusha
nop
jnp
lcall
sbb
jae
and
mov
popa
cmp
sub
sbb
clc
push
pop
inc
pop
pop
leave
out
xlat
jo
das
dec
adc
mov
pop
mov
jecxz
sbb
mov
adc
inc
push
pop
ss
cmp
jp
xchg
fstpl
dec
or
push
pop
pop
das
imul
jnp
imul
adc
xor
iret
and
adc
test
mov
mov
scas
adc
subl
aad
mov
nop
pop
mov
push
push
aas
enter
inc
add
dec
cmp
sub
cmpsl
inc
adcl
xor
jb
or
or
push
sub
lods
adc
jno
xor
pushf
pop
shlb
js
or
je
dec
mov
or
aam
mov
push
sub
pop
je
cmp
jl
sbb
xor
jo
mov
rcll
ret
mov
sbb
jns
test
sbb
mov
popa
dec
sub
sub
ss
push
mov
sbbb
or
nop
inc
sbb
sub
nop
mov
sbb
jecxz
pop
stc
cmp
pushf
pushf
adc
jo
inc
pusha
cwtl
push
or
adc
dec
cltd
xchg
or
scas
movsb
fcompl
clc
and
movsl
mov
push
jno
sub
sub
mov
push
icebp
sub
jp
lds
sahf
xor
and
nop
pop
jle
test
cmp
or
push
mov
pop
pop
xchg
cltd
mov
stc
jnp
mov
push
jle
add
rorb
or
cmp
mov
dec
lret
or
sub
sub
lea
pop
lds
test
adc
or
jb
pop
aam
or
and
cmp
fwait
adc
pop
push
mov
filds
mov
cmp
or
sub
sbb
fisttpl
call
inc
jmp
sub
rcr
sbb
sti
mov
push
ret
adc
push
test
daa
push
push
sar
pop
add
icebp
sahf
adc
cmp
inc
bound
sbb
push
les
push
push
aas
jns
dec
sub
cs
dec
or
iret
insl
push
xor
mov
or
mov
or
xchg
imul
rolb
add
leave
sahf
add
and
ss
add
adc
cmp
dec
popa
push
or
in
ret
xor
scas
and
outsb
or
mov
adc
pop
or
pop
arpl
and
and
mov
incl
add
cmp
xchg
and
repnz
and
lock
xchg
dec
xor
adc
mov
or
fucomip
shll
cmp
lret
or
push
arpl
adc
leave
lret
pop
push
es
pop
sub
xchg
sbb
cmpl
inc
lret
lar
mov
jl
iret
add
dec
dec
xchg
mov
out
sbb
push
loop
push
or
xor
cs
sbb
insb
pop
mov
push
scas
or
pop
and
sbb
push
xchg
push
fstl
cmp
ljmp
in
fcmovu
rcrb
mov
adc
leave
leave
and
dec
bound
in
push
and
mov
inc
pusha
int
xor
lea
lret
dec
stos
leave
sub
jne
mov
sbb
movsb
enter
add
in
cmp
push
movsb
popf
or
and
rclb
dec
loopne
dec
roll
insb
inc
adc
pop
inc
addb
pusha
inc
call
xchg
lods
mov
loopne
jl
jge
add
stos
imul
js
jg
and
pop
adc
jne
fbstp
and
push
aam
ja
jmp
xchg
inc
dec
push
mov
mov
push
nop
add
dec
pop
test
add
in
sub
aas
cmp
inc
mov
fmuls
pxor
cvttps2pi
or
add
xchg
xor
in
add
mov
push
add
dec
mov
cltd
pop
or
or
pushf
cmp
into
adc
or
mov
adc
lahf
ret
pop
pop
js
lret
stos
push
lea
xor
loopne
push
cwtl
inc
stos
or
xchg
filds
dec
push
push
xchg
ret
add
das
add
bound
movsl
fisttpl
add
mov
xchg
cmp
roll
sub
mov
jmp
jo
scas
push
and
sub
nop
sbb
push
inc
fdivrl
or
pop
nop
lret
or
and
push
mov
rorb
sub
mov
pop
jl
pop
sahf
enter
rorl
popa
js
inc
popf
rclb
repnz
dec
sub
mov
or
pusha
loopne
ss
jae
adc
pop
inc
xor
js
lock
inc
xor
movsl
fs
movsb
xor
push
sbb
loopne
mov
addr16
adc
rclb
pop
sbb
test
fcoml
stos
jns
shll
mov
mov
sbb
arpl
jo
cwtl
xchg
sbb
orl
xor
adc
jbe
sub
pusha
sub
mov
mov
or
sub
jge
fwait
into
sbb
movsl
add
aam
xor
pop
cmp
xor
leave
pushf
sbb
test
insl
bound
mov
imul
jmp
push
xor
pop
leave
adc
and
cmp
and
and
sti
inc
test
xchg
sbb
repnz
inc
inc
sbb
ljmp
mov
xchg
mov
pop
es
bound
jmp
dec
enter
inc
and
or
pop
mov
stos
lock
jmp
mov
cmp
and
je
push
popf
sub
fsubs
scas
cmp
and
xlat
cmp
or
xor
in
sahf
inc
mov
xlat
jbe
js
xchg
stc
sub
push
insl
xor
xor
sbb
jno
mov
xor
cmp
cld
cmpl
push
imul
push
and
add
ret
or
nop
push
or
mov
stc
daa
or
add
sub
adc
or
sbb
and
fcoms
and
lea
in
mov
mov
pushf
sub
mov
rcr
add
rorl
imul
rolb
xchg
aas
sub
xchg
dec
jge
mov
or
shlb
jecxz
push
imul
fbld
cs
stc
loopne
cmp
lock
or
sbb
adc
clc
cwtl
pop
shll
pop
dec
hlt
mov
das
daa
adc
sub
push
inc
sbb
pop
xchg
push
sub
xchg
push
xchg
dec
push
mov
inc
jbe
push
subb
stos
or
xchg
sbb
jmp
ljmp
out
xor
dec
inc
xor
xlat
and
xor
pop
xor
inc
bswap
and
or
and
movsl
xor
mov
xor
cmpsl
lods
punpckhbw
xor
scas
dec
mov
fs
xor
pop
addl
mov
repz
xor
push
enter
dec
and
xor
nop
ffree
js
fnstenv
mov
adc
adc
call
sub
adc
nop
sub
cmp
and
xor
cmp
push
mov
in
leave
fs
jg
inc
clc
pop
pop
enter
and
cmp
add
xor
mov
cmp
mov
test
jb
push
pop
decl
test
adc
or
das
mov
imul
aas
pop
xchg
jp
jl
add
sbb
pusha
cmp
mov
mov
mov
push
and
mov
adc
fs
xor
popl
xchg
test
pop
xchg
xchg
push
or
daa
sub
mov
fmul
sub
inc
ja
sbb
xlat
sbb
pushf
inc
or
cmp
push
loope
mov
insl
sbb
xchg
popa
fisttpll
xchg
cmp
mov
loopne
pop
repnz
daa
push
jnp
xor
xor
std
inc
jecxz
pop
repnz
push
inc
dec
dec
loopne
scas
adc
push
movsl
inc
adc
mov
out
int3
pop
sub
or
xchg
push
push
mov
cmp
or
mov
es
mov
pop
daa
jno
mov
lea
xor
pop
jp
inc
and
icebp
repnz
mov
and
cmp
sbb
movsl
push
imul
jno
arpl
shr
imul
jno
loopne
dec
add
roll
mov
test
jne
and
cmp
pop
aas
pop
jae
aaa
add
cmp
mov
clc
pop
push
in
pop
push
add
pushl
cmp
in
sub
xchg
movsb
inc
cmp
shr
push
in
mov
push
xchg
sub
stc
or
mov
movsb
pop
stos
stos
pusha
and
pop
push
das
push
mov
add
inc
rorl
mov
or
outsl
lea
rorb
sbb
add
in
fdivr
push
or
pop
mov
sub
jns
jns
or
gs
into
add
sbb
dec
or
enter
or
mov
sub
or
or
mov
sub
jno
sbb
mov
mov
push
jo
dec
icebp
sub
call
and
push
shrb
popf
sarb
cmpsb
popa
sbb
fxch
lods
andb
les
adc
push
or
cmp
outsb
ljmp
in
adc
loopne
add
push
dec
dec
jb
sub
int3
js
add
ret
test
loopne
or
neg
and
push
loopne
and
pop
jo
fwait
add
jnp
inc
push
push
loop
bnd
xchg
mov
jmp
xor
xchg
xchg
dec
inc
fisubs
arpl
pop
sub
adc
lahf
or
cs
movl
ret
inc
push
cmpb
adc
aas
mov
ret
les
sub
roll
rcrb
inc
aam
pop
xchg
sub
inc
sbb
xchg
xor
insl
rorb
sbb
jne
or
cmp
aad
inc
jmp
xchg
pop
in
and
sub
shr
in
nop
and
and
popa
lret
pop
and
les
in
loopne
jns
jne
cmp
and
push
lods
cmp
lods
lock
cwtl
aad
test
iret
es
push
popf
out
ja
push
sub
pusha
jecxz
mov
lea
sbb
orl
adc
enter
ret
mov
adc
dec
dec
cmpsl
inc
and
leave
cmp
sbb
cmp
rolb
pushf
push
loopne
aaa
sbb
out
sbb
push
push
adc
or
sbb
mov
adc
lea
xor
push
jecxz
cmpsb
or
and
pop
add
mov
mov
push
cmpb
add
jnp
mov
sub
sub
setne
inc
ret
test
lret
cmpb
xchg
lds
xchg
sub
imul
imul
or
xor
or
das
fs
lods
mov
scas
jb
lods
mov
add
add
inc
orb
push
call
pushf
hlt
pop
andb
popf
mov
in
push
add
sub
xor
andl
ds
xor
mov
lods
aas
adc
sub
push
mov
sub
lret
pop
sub
and
pop
ror
and
xor
rorb
or
mov
xchg
ss
cmpsl
cmp
dec
add
cmp
and
lea
mov
sub
mov
in
jmp
mov
cmp
shrb
clc
fwait
dec
xchg
lret
orb
cmp
sub
arpl
cmp
mov
dec
adc
xchg
cmp
sub
test
enter
cmp
dec
movb
xchg
scas
ret
and
or
add
iret
shr
and
mov
icebp
leave
enter
enter
xchg
or
not
int
leave
inc
leave
push
sbb
aas
push
lret
movsb
inc
adc
aam
mov
shl
xchg
mov
ja
outsb
rcrl
inc
push
push
sub
js
in
test
scas
xor
xor
jno
fiadds
mov
nop
mov
mov
xlat
jno
sub
in
sbb
test
jb
adc
imul
mov
hlt
scas
sti
inc
add
mov
push
ret
adc
sbb
aaa
sbb
add
nop
sbbl
add
inc
rclb
fdivs
xchg
stos
or
ljmp
or
mov
xor
rolb
sbb
ret
imul
jge
das
mov
pusha
jmp
test
jl
lea
and
insb
jl
int3
pop
add
xchg
testl
cmpsb
dec
push
lods
xor
pop
ret
add
popa
mov
or
stos
adc
add
lcall
xchg
icebp
std
add
jae
imul
and
movsb
or
ret
sahf
mov
add
or
incl
sbbb
push
imul
jne
adc
subb
je
fmull
jge
and
xchg
push
sbb
in
rolb
sub
or
xor
jns
xchg
inc
add
bound
pop
movl
dec
test
and
test
mov
insb
adc
and
inc
pop
dec
ret
outsl
nop
cmpsb
sub
cmp
cmp
aam
or
mov
mov
lods
aas
addr16
add
add
test
adc
xor
sahf
adc
dec
add
adc
sub
cmp
test
push
shlb
push
push
xchg
inc
fimull
mov
push
rcll
dec
and
leave
movsl
repnz
add
ret
push
movb
mov
repnz
mov
subb
adc
je
jl
pop
push
sub
sbb
adc
and
cltd
imul
sbb
mov
or
je
pop
sub
dec
cmc
or
stos
sti
sbb
movsb
pusha
push
mov
mov
inc
jne
inc
lds
sub
adc
or
ja
xor
add
or
inc
inc
add
pop
mov
pop
pop
test
mov
or
fs
ja
mov
stos
in
jbe
cld
sbb
add
rcrb
mov
dec
pusha
sub
push
push
mov
jge
add
je
lods
movsb
fcoml
outsl
jge
add
push
add
loope
xchg
xorl
cmc
shrb
insb
repz
fmul
and
sub
add
adc
or
push
loop
push
mov
mov
and
rcrb
adc
mov
or
pop
ret
loop
sahf
add
pop
dec
cmpsl
loopne
mov
push
fsub
mov
sub
or
mov
jl
pop
adc
add
mov
xor
movl
std
inc
sbb
push
jmp
mov
mov
adc
scas
test
mov
or
or
lods
movb
mov
ret
add
sbb
aaa
lods
fsin
flds
inc
je
add
jo
pop
sub
mov
sub
dec
sbb
sbb
cmp
sbb
repnz
fwait
pop
sbb
adc
and
sub
lock
jo
cltd
xor
aaa
mov
rorl
pop
popf
or
xor
sub
mov
xor
add
cld
inc
cmp
fisubrl
jns
push
jo
adcl
add
add
cmc
jmp
je
jo
xor
sub
in
pusha
adc
push
dec
add
push
push
ljmp
xlat
mov
dec
insb
sub
push
sbb
sti
nop
jo
lea
sub
inc
xor
adc
sbb
dec
lods
dec
dec
or
cmp
dec
sub
pop
pop
add
das
or
jl
ret
scas
push
pop
push
arpl
mov
cwtl
in
mov
rcrl
clc
mov
orb
add
mov
xchg
push
in
add
mov
and
out
and
rcrb
push
stos
sti
rcrb
sub
and
lcall
fwait
pop
push
dec
lea
out
xor
jo
sbb
loopne
mov
stos
mov
push
pop
lock
in
push
pop
xchg
and
cmp
mov
rcrb
mov
push
mov
inc
cs
pop
mov
mov
test
ficoml
mov
add
push
push
pop
test
push
mov
pushf
pusha
push
xor
inc
jecxz
xorl
adc
int3
dec
xchg
add
ret
add
dec
push
push
fcompl
call
lods
outsl
hlt
ja
rclb
xchg
jns
int3
loopne
add
out
aaa
fdiv
pusha
inc
and
push
shlb
mov
adc
jne
mov
adc
fsub
std
pushl
or
or
je
push
das
sub
sub
inc
insl
lods
sub
add
cmp
sahf
push
mov
xchg
jno
ret
add
or
xor
jbe
js
push
dec
cmpb
push
lea
mov
mov
adc
xor
cmp
xor
mov
es
fwait
call
sub
mov
sahf
loope
push
int3
xchg
call
add
enter
iret
pop
sbb
sbb
daa
inc
roll
push
inc
enter
lea
cmp
js
dec
mov
sbb
jnp
push
mov
mov
rcrb
jle
andl
dec
sahf
movsb
sbb
test
jo
jo
jl
sbb
inc
shlb
cmp
adc
add
and
test
outsb
and
movsb
rorb
jmp
cmp
push
xor
xor
or
pop
inc
stc
jecxz
inc
insb
xor
inc
shrb
push
in
jne
inc
lods
pop
xor
and
mov
pop
into
fcomp
mov
mov
leave
fwait
test
pushf
test
imul
inc
cmpsl
test
es
popl
cmpsb
rol
dec
sbb
inc
inc
daa
lea
mov
sub
es
in
mov
mov
lods
rorl
jecxz
stos
mov
and
push
repz
jnp
dec
push
xchg
and
out
cmp
xor
test
mov
enter
pusha
mov
sbb
fsubrl
push
cwtl
cmp
pop
test
fdivrl
jne
scas
jbe
push
mov
or
insl
adc
adc
xchg
sub
pusha
inc
inc
mov
sbb
inc
sbb
jge
jmp
lods
pop
sub
int
es
mov
mov
cli
or
js
and
mov
pushf
push
push
test
push
jmp
loopne
outsb
adc
dec
lcall
or
fadds
sarb
rcll
cmp
adc
test
jecxz
pushf
pusha
ret
adc
addr16
dec
movsl
rorb
lea
sbb
push
and
add
mov
dec
jecxz
inc
nop
mov
and
inc
add
mov
pushl
ficompl
pop
xor
jnp
cwtl
mov
inc
pop
and
add
cmp
sbb
inc
mov
stos
ret
popa
cld
lahf
dec
push
lea
xor
rcl
cmpl
je
lods
fadds
ja
adc
push
cld
and
movsb
jb
fdivrs
pusha
scas
adc
jle
add
xor
ret
mov
inc
mov
inc
jbe
mov
sarb
fdivs
mov
adc
push
push
mov
or
mov
test
test
dec
or
in
cmp
xor
and
pop
fistl
xchg
pop
adc
ret
mov
inc
mov
mov
or
mov
aad
push
cmp
or
test
pop
push
jge
add
divps
fs
xchg
add
inc
jl
pop
outsl
adc
pusha
test
ret
or
adc
push
ss
xchg
jne
mov
push
fildl
and
fdivs
cld
in
adc
mov
cld
lea
movsl
add
ds
and
add
push
adc
sub
bound
add
push
push
je
cmpsb
aam
lock
xabort
jge
sub
sub
mov
fcmovb
sbb
sar
and
adc
push
add
push
fsubrs
daa
add
or
subl
mov
rcrl
inc
pop
mov
jnp
jne
cmp
jne
sbb
mov
enter
insb
jae
aas
cmp
xchg
test
adc
mov
or
cmp
push
sub
sar
add
shrl
lret
fsubrl
loope
push
test
push
cmp
jle
pushl
cwtl
pop
dec
leave
aam
movsl
clc
adc
mov
sahf
mov
push
movsb
or
pop
ljmp
jbe
jmp
pushl
adc
add
pop
pop
adc
adc
ficoms
aad
or
xchg
loope
lds
imul
mov
jno
cmp
cmp
out
test
add
xor
outsl
mov
adc
jno
and
add
loopne
lods
and
sub
aaa
mov
fistpll
push
cmp
jb
cmp
add
mull
jb
adc
test
dec
jo
or
add
or
add
int3
sub
push
rcrl
dec
cmp
mov
test
mov
inc
sbbb
filds
insb
push
mov
popl
or
xchg
pushf
jne
pop
push
mov
sbb
push
pop
dec
add
mov
xor
xchg
stos
push
hlt
cmp
mov
je
aad
or
mov
outsl
fwait
dec
sbb
adc
add
inc
push
jl
clc
and
adc
xchg
sbb
les
in
inc
dec
pusha
je
nop
jmp
nop
dec
dec
lea
dec
add
inc
push
xchg
pop
stos
add
fninit
adc
pop
cmp
add
mov
xchg
mov
push
js
mov
mov
sbb
test
fcomps
and
jecxz
or
jle
pop
sub
cli
inc
xor
dec
push
lcall
out
pop
es
xor
push
jmp
xchg
mov
mov
pop
push
push
pop
leave
sub
insl
push
xchg
adc
adc
fsubr
pop
pushf
xchg
xchg
mov
fistpl
push
jbe
pop
xor
bndldx
sub
mov
ss
ljmp
dec
and
rol
dec
mov
test
les
nop
cmpsl
push
mov
xor
jae
pop
gs
add
and
rorb
loopne
push
aas
sub
jo
loop
test
inc
hlt
les
inc
mov
lea
into
jne
sbb
inc
imul
rcll
lahf
inc
sub
xchg
cmpl
fwait
inc
add
mov
cmp
addl
fisttpl
jmp
in
push
mov
loopne
pop
or
mov
sub
call
mov
pop
ds
popf
pusha
xchg
xor
lods
inc
sbb
lret
ror
dec
ljmp
xor
add
xchg
and
mov
push
outsb
dec
or
sbb
inc
cmpsb
pop
ret
sbb
add
and
push
add
inc
sahf
dec
fmull
push
mov
or
sbb
adc
pushf
btc
pop
and
or
or
sub
test
mov
mov
dec
or
xchg
mov
je
fldl
jle
sub
inc
push
or
cmp
loope
inc
pushf
mov
cmpsl
into
out
cmp
jns
jne
jl
sub
xchg
loop
pop
and
or
and
pop
insl
lock
pop
adc
dec
jbe
push
mov
dec
cmpsb
jnp
pop
sti
ret
repz
loopne
inc
pushf
rolb
jbe
mov
jo
or
ret
int
add
push
inc
ds
add
popf
pusha
jo
loopne
dec
adc
fadd
fldenv
mov
add
mov
js
les
xchg
fcoms
push
xor
adc
adc
lock
stc
or
pop
or
scas
dec
pusha
popa
or
addb
xor
inc
inc
sub
or
xchg
or
aas
shrl
add
sbb
push
pop
mov
daa
or
and
cwtl
mov
popa
idiv
xchg
or
cld
sub
test
rorb
test
iret
cmp
mov
orb
lods
aam
add
icebp
lret
or
enter
xorb
das
or
pushf
lods
pop
mov
sbb
int
push
testb
hlt
cmp
loope
inc
cmp
pop
insb
xchg
mov
inc
pop
outsl
add
jge
nop
inc
push
add
sbbb
insb
push
adc
and
jne
push
and
cwtl
subl
pop
cmp
adc
push
pusha
and
dec
pop
je
scas
adc
cmpsb
adc
or
mov
pop
pop
push
adc
and
mov
dec
rclb
stos
cmc
push
insl
add
pop
sub
add
mov
inc
push
orl
inc
or
fimuls
nop
fiadds
inc
cmp
jne
dec
jge
ljmp
insb
pop
pop
and
adc
sub
sahf
pop
lock
rcrl
push
shlb
and
ss
push
stc
std
test
repnz
call
sub
adc
push
adc
lahf
xchg
shll
jmp
adc
xorb
jnp
stos
inc
inc
dec
mov
fidivs
ja
pop
push
ret
lcall
mov
push
aam
lods
xor
clc
mov
sub
inc
push
jo,pt
push
push
xchg
add
call
adc
adc
add
jb
and
or
js
loop
and
in
daa
dec
mov
push
in
or
adc
or
js
ret
fidivl
pop
aam
push
inc
inc
pushl
aam
int3
int
xchg
inc
pop
sahf
int
add
pcmpeqw
push
repz
push
jno
adc
dec
in
xchg
mov
push
add
dec
sub
push
subl
in
adc
add
push
adc
sbb
imul
jo
mov
lret
push
mov
fsubr
cmp
xchg
fsubl
push
sub
adc
shll
mov
fwait
sbb
adcb
jecxz
jg
je
call
shrb
inc
and
gs
push
mov
in
inc
enter
inc
jb
pusha
xor
nop
sub
mov
xor
ffreep
mov
jle
lea
cmpb
jne
scas
xchg
cs
sti
daa
or
incl
movb
push
fscale
aas
push
jecxz
sub
cmp
pop
jl
pop
je
add
sub
and
lahf
mov
sbb
in
add
inc
fdivl
mov
fidivl
inc
adc
repnz
mov
add
pop
lcall
cmp
enter
inc
mov
lock
lea
lcall
or
sub
add
or
jae
add
cmpsl
imul
leave
fucomp
out
jne
sti
or
aad
clc
int3
add
dec
pop
push
pop
imul
ret
movsb
hlt
mov
out
jnp
outsb
and
enter
fcmovu
push
in
xor
test
or
roll
rep
idiv
mov
aam
jne
inc
jno
lds
lods
or
or
incl
mov
je
cld
mov
sub
jle
jbe
push
lock
push
jno
test
je
sti
mov
test
cs
inc
cmp
jb
pop
pop
sub
jns
fidivrl
xadd
mov
xor
dec
inc
pop
cmpsb
es
sub
sub
inc
hlt
popa
push
sub
dec
xchg
test
and
repz
or
rolb
inc
lcall
mov
xor
and
jmp
cmp
jne
xor
mov
lret
out
stos
push
mov
aad
or
clc
outsl
jb
xchg
pop
je
icebp
add
push
inc
sbb
add
inc
adc
mov
fcompl
jne
sbb
jmp
pop
mov
mul
seto
lods
shl
mov
enter
mov
xchg
hlt
jmp
adc
jae
dec
mov
pop
in
cmp
fwait
xor
pop
inc
leave
scas
add
mov
push
push
cmp
je
adc
testl
or
mov
mov
mov
adc
mov
inc
xchg
int3
push
or
ss
dec
cld
push
dec
clc
push
pop
or
push
outsl
push
out
sbb
push
and
ja
lcall
mov
in
dec
and
rol
divb
loop
add
jmp
push
sub
push
into
dec
mov
mov
ja
or
dec
mov
fsubrs
adc
pop
inc
xor
cmp
or
shl
jnp
movsb
pop
lret
cmp
incl
adc
sbb
dec
or
xor
and
cmp
jbe
sub
push
and
push
cmp
add
je
inc
xor
adc
cmp
ret
ss
fsubs
inc
sbb
mov
push
push
and
or
rorl
insb
or
sbb
adc
loop
adc
adc
mov
icebp
sub
aad
push
cli
adc
cmp
fstl
inc
mov
lea
cmp
mov
cmpsb
flds
ret
or
add
push
dec
dec
dec
adc
mov
push
mov
cmp
mov
js
sbbb
add
cmp
push
fsubl
loope
mov
outsl
cmpsb
and
mov
jmp
fcoml
clc
loopne
mov
jmp
arpl
cwtl
cmpsl
ds
gs
ss
gs
iret
repnz
adc
adc
push
and
mov
xchg
inc
sbb
adc
jnp
add
cwtl
rclb
push
sub
lcall
xor
mov
adc
xchg
and
pop
push
stos
push
nop
cmp
and
mov
or
jb
xor
fsubl
sbb
stos
in
test
add
test
push
pop
adc
inc
adc
xchg
fldenv
xor
into
and
ficoml
cmp
cmp
out
pop
push
dec
add
nop
les
push
mov
cmpl
cmp
sbb
aas
dec
sbb
ds
inc
add
outsb
icebp
jo
es
or
mov
orb
pop
addr16
xor
pop
cs
mov
mov
inc
and
incb
xchg
shll
js
push
sbbl
loop
or
xor
cmp
lock
ss
jnp
sub
sar
hlt
cmp
sub
cmp
lea
sbb
jo
test
xor
jbe
and
mov
int3
test
push
in
jmp
xor
and
mov
sbb
cmpsb
jl
scas
or
push
xor
rolb
sub
push
pop
sub
pop
test
lds
xchg
jmp
pop
and
mov
or
or
adc
pop
mov
xchg
jl
push
xchg
js
js
jb
xchg
enter
jo
and
and
add
dec
mov
outsb
test
add
pushw
mov
out
jae
in
pusha
pop
adc
pop
cmp
je
jmp
pop
dec
ret
xlat
sub
test
xchg
popa
outsb
push
push
add
jle
js
jge
mov
in
sub
lea
int
push
mov
imul
fcomp
cmp
inc
inc
gs
dec
mov
adcb
mov
inc
jge
xor
in
bound
ds
cmc
inc
add
or
mov
mov
or
push
push
mov
mov
mov
pop
jb
test
pop
call
jne
mov
and
xchg
test
xchg
push
movsl
mov
and
dec
stos
dec
mov
and
das
add
sbbl
jmp
pop
in
xchg
jge
into
lock
jno
pop
jo
mov
dec
js
aaa
je
sbb
push
ss
xchg
hlt
cmp
neg
in
in
adcb
gs
push
mov
in
fadd
xor
ljmp
or
loope
add
stos
push
loopne
push
mov
mov
mov
mov
or
xor
popa
and
lds
mov
jl
subl
je
rorl
dec
or
mov
inc
xor
aas
lcall
call
popa
les
sub
call
or
pop
nop
cmp
in
push
hlt
addl
clc
push
aam
adc
hlt
and
shlb
or
inc
sti
cmpl
rol
test
lret
fmuls
xchg
insb
das
ret
lock
push
sub
push
mov
dec
add
inc
or
mov
cmp
mov
cwtl
js
test
cwtl
push
add
std
movsb
addb
push
push
aam
adc
orl
ss
pop
sub
mov
push
push
adc
mov
adc
add
les
push
adc
xor
pop
ret
roll
sub
and
fxch
jno
neg
fst
or
push
rorl
movsb
dec
andl
shrb
xor
ds
push
inc
fdivs
jmp
in
add
mov
je
aam
jne
bound
mov
xor
imull
jl
mov
test
dec
mov
adc
cmp
cmp
gs
orb
fdivrs
dec
sub
idivb
mov
inc
pop
rcll
mov
cmpsl
cmp
jo
imul
inc
push
pop
std
inc
pop
jl
pusha
jmp
cmp
jmp
pop
dec
aad
and
cmp
fadds
push
inc
sub
mov
out
cmp
fcompl
loop
xor
push
mov
add
or
jg
shr
pop
int3
test
sbb
adc
sti
mov
xor
mov
je
pop
loope
mov
inc
aas
inc
ljmp
jmp
mov
sub
sbb
in
push
or
and
or
scas
lods
xor
mov
cmp
in
mov
push
dec
scas
faddl
in
sbb
fs
fldcw
cmp
jl
sahf
in
push
add
movsb
cmp
mov
jl
imulb
loopne
push
xor
push
mov
xchg
mov
rorl
inc
mov
faddp
pop
mov
sub
popa
xchg
dec
mov
xchg
sbb
push
or
xchg
je
adc
cmp
push
jns
cmp
nop
push
cmpsb
adc
ds
inc
adc
in
xchg
dec
into
push
push
lea
aaa
cmp
xchg
pop
inc
jecxz
test
adc
cwtl
xor
test
pop
sbb
sub
push
lea
bound
pusha
xchg
lds
ds
loopne
lock
int3
add
jne
sbb
xor
mov
in
cs
or
mov
fstps
pop
cli
cmp
jb
xor
and
adc
jae
mov
push
sub
or
push
into
mov
mov
inc
cli
out
adc
je
inc
push
mov
cltd
sbb
add
lahf
adc
clc
in
cmp
jg
xor
xchg
push
sahf
mov
sub
sbb
add
inc
movsl
fs
xchg
into
push
mov
jno
cmp
aam
out
or
dec
or
xchg
insb
or
sbbb
push
shr
adc
add
push
in
sub
and
push
jge
jmp
mov
xchg
adc
call
andl
imul
add
mov
rcl
pushw
push
add
pop
leave
jo
dec
inc
ret
in
mov
pop
gs
cmpsb
fldl
insb
lock
push
arpl
sub
aaa
pusha
mov
adc
addr16
call
xchg
xchg
jmp
lret
pusha
xchg
jb
sub
stos
in
mov
in
shr
test
and
mov
adc
movsb
mov
sbb
and
adc
por
cmp
mov
cs
pushl
ffree
addr16
addr16
test
es
mov
fdiv
je
jmp
dec
jle
mov
sub
push
or
pop
and
jecxz
rcll
add
clc
or
test
cmp
inc
or
jae
das
scas
adc
jne
add
repz
dec
push
jns
mov
je
inc
or
push
or
mov
or
cmp
push
push
or
mov
jl
inc
sbb
cmp
call
add
push
faddl
andl
or
pop
pop
dec
jp
outsb
sub
cmp
mov
mov
jge
jmp
je
xlat
out
push
add
nop
xchg
nop
push
adc
cwtl
xchg
mov
sub
add
call
mov
fistl
sub
xchg
ss
dec
loope
movsb
push
les
jb
push
fnstcw
rorl
xor
xchg
aaa
mov
dec
scas
cmp
jecxz
push
pushf
sbb
outsb
addl
push
pop
sub
sbb
nopl
push
sub
mov
xor
ja
shlb
dec
sbb
jnp
inc
push
xor
fcompl
stos
inc
pop
arpl
inc
push
ror
xor
pop
inc
loope
loopne
cwtl
or
dec
loopne
adc
decb
or
lea
insl
lahf
mov
mov
outsb
jae
jge
cmpl
push
popf
cli
add
lcall
push
jns
cmp
or
lret
and
or
repnz
pop
gs
repnz
fisubl
xor
dec
shr
adc
add
push
xchg
sub
mov
jle
data16
inc
and
add
cmp
pusha
xor
shll
push
xorb
jl
mov
aas
xchg
fsubr
mov
xchg
test
push
inc
sti
or
pusha
pop
arpl
xchg
cmp
imul
fwait
inc
mov
scas
sub
mov
add
and
pop
adcb
inc
xchg
loope
in
sahf
jbe
adc
fidivs
add
clc
sub
xor
pusha
mov
xlat
xchg
sub
push
fdivs
and
cmp
sbb
add
and
jo
push
fs
jae
add
push
cmp
jbe
dec
das
dec
notb
ret
fcomip
sub
xor
and
push
adcb
fdivrp
orl
cmp
jne
push
jno
push
pop
push
xor
test
mov
push
dec
pcmpeqw
cbtw
push
test
adc
test
cmpsl
fldt
imul
dec
bound
pop
mov
lods
cltd
js
jne
adc
fbstp
mov
jmp
cmp
sbb
rorl
sbb
cs
ja
add
ror
test
jg
popl
stos
cli
push
jbe
mov
popl
add
clc
xor
jne
mov
jb
mov
push
xor
shr
mov
leave
lea
cmp
into
jo
inc
or
into
mov
mov
ret
jne
out
pop
xor
test
in
mov
mov
dec
add
add
loopne
rorl
ljmp
cmp
out
pop
add
cmc
rorl
xchg
arpl
or
mov
mov
test
add
das
jne
pusha
shlb
adc
lret
push
mov
iret
notb
ret
scas
add
cmpsl
fbld
cmp
mov
adc
outsb
lahf
scas
xchg
adc
or
imulb
pop
repnz
sbb
iret
push
dec
sar
stc
or
push
ljmp
clc
daa
js
add
imul
inc
xchg
out
fnstcw
add
mov
stc
push
adc
clc
loopne
mov
stc
add
or
xor
loope
mov
stc
je
icebp
fisubl
xor
cmovp
cmp
jnp
lahf
sub
push
cmp
sub
rclb
shrb
pop
mov
lret
js
shlb
testb
adc
mov
and
push
out
jns
jp
cld
lods
popa
sbb
jne
lret
clc
testl
or
ja
and
jmp
cmp
jmp
pop
cwtl
dec
xchg
sbb
dec
jno
and
xchg
pusha
clc
dec
or
pop
imul
or
lods
sub
sbb
push
adc
call
imul
dec
or
fs
jnp
adc
jnp
push
sub
sub
rorb
js
ss
outsb
or
mov
stos
xor
or
and
push
or
xchg
je
pusha
push
pusha
pop
push
or
lods
jp
mov
int
jo
in
push
pop
push
jmp
mov
adc
sbb
sbb
aas
test
or
and
cmp
mov
push
sbb
adc
sbb
lods
pusha
mul
adc
mov
je
and
pusha
or
xor
pusha
insb
insb
push
push
les
aaa
in
aam
cmp
push
push
ja
or
testl
je
cmp
je
mulb
or
push
cmp
cmp
je
xor
push
sub
or
lock
push
sub
sub
cmpsl
js
pop
xchg
jmp
lea
sbb
or
adc
sub
add
mov
push
add
lock
pop
enter
lock
hlt
and
and
push
cmpsl
mov
add
push
push
adc
cmp
aam
adc
sbb
repz
dec
ss
nop
cmp
mov
jbe
pop
sbb
into
add
push
mov
fs
rcrb
mov
push
pop
cs
popl
lods
lock
mov
out
leave
loopne
adc
inc
dec
shlb
lock
sbb
or
bound
adc
sub
add
cmp
dec
and
mov
dec
xlat
test
add
test
ljmp
in
pop
jmp
js
dec
push
adc
xor
adc
enter
xchg
dec
mov
insb
clc
lods
cmp
jo
popa
and
popf
sub
xchg
or
add
imul
mov
ret
call
cli
lods
xchg
adc
fdivl
xor
xchg
aam
mov
das
iret
xchg
stos
or
inc
ss
pushf
cwtl
fidivrs
roll
inc
movsb
inc
test
sub
xchg
mov
je
sbb
add
cmp
push
cmp
outsl
and
dec
push
lea
sarb
jo
or
sub
ret
jl
dec
push
or
movsl
rcrl
test
dec
jnp
aam
pushf
or
xchg
lock
mov
les
int
or
xor
pop
push
je
add
popa
lock
pusha
ja
fs
push
loopne
int
ss
lds
arpl
and
inc
inc
sbb
jnp
sbb
add
shlb
aaa
push
adc
ja
into
into
inc
loop
shl
std
mov
mov
xor
pop
cmp
je
scas
fisttpll
add
push
dec
inc
dec
loop
mov
dec
mov
sbb
pop
loopne
or
ja
mov
jo
lock
sti
mov
push
jge
sbb
jg
outsb
jae
or
sbb
pop
sub
test
ret
pop
push
push
loope
mov
call
pop
lret
inc
jo
push
ljmp
je
adc
and
sbb
or
inc
jb
add
cmp
jo
sbb
push
pop
into
dec
enter
and
jecxz
ficoml
jecxz
cmp
shll
ret
dec
lods
mov
xchg
hlt
mov
aad
mov
and
and
lea
cmpsb
mov
cmp
cmp
imul
loope
fadd
push
fidivs
cmp
ja
jecxz
jp
jmp
mov
test
or
mov
test
push
cs
popa
mov
ja
cbtw
shrb
adc
and
add
arpl
mov
inc
mov
xchg
stc
test
icebp
xor
pop
je
push
or
mov
lret
pop
cmp
cmpb
cmp
es
lds
jo
push
cli
or
mov
push
mov
lahf
and
subl
lock
je
add
in
or
jb
mov
push
loope
fs
aam
mov
adc
aaa
adc
movsl
movb
xor
call
cmc
rcll
movzwl
or
jne
sbb
jae
dec
jae
inc
add
push
iret
push
push
je
or
das
mov
dec
mov
jnp
cmp
push
add
push
dec
lea
push
push
cmp
adc
xor
or
loope
push
add
jb
pop
sub
rorb
xchg
clc
mov
scas
xor
or
in
adc
jp
xchg
iret
adc
cmp
sub
imul
add
pop
cmc
push
mov
cmp
aaa
lock
aam
inc
mov
inc
in
jnp
es
orb
mov
xor
ja
sbb
or
js
pushf
ljmp
ficomps
fdivs
jp
add
data16
push
pop
push
pop
sub
jmp
xor
pop
push
pop
lock
daa
loopne
mov
fmul
ljmp
cmp
enter
xor
ds
rdmsr
rcrb
data16
mov
xchg
loope
inc
mov
enter
sbbl
pop
mov
fimull
xor
mov
pop
stos
xlat
adc
push
pop
sbb
outsl
sub
test
lahf
les
mov
test
push
xor
push
insl
add
xorb
movsb
push
push
and
inc
rcrl
xchg
fimuls
jo
pushf
adc
inc
inc
sbb
add
lret
fildll
mov
int
push
and
xor
cwtl
fbld
out
nop
mov
sub
xor
mov
neg
sbb
push
inc
xor
or
js
enter
je
repz
dec
sbb
rolb
cmpl
outsl
inc
and
sbb
xor
mov
and
pusha
in
sub
dec
mov
inc
lcall
insb
xor
and
sahf
pop
inc
xchg
dec
push
loopne
daa
inc
jne
xor
pop
jecxz
or
int
jo
addl
or
gs
cltd
push
pop
aam
rolb
lea
and
out
lahf
loopne
cmc
ss
push
inc
inc
test
fsubl
mov
das
loope
jo
xor
pop
pop
pop
pop
jae
or
mov
pop
jbe
pop
push
add
lock
and
gs
loop
pop
xchg
adc
jl
pop
in
je
and
ds
xor
pop
xor
insb
loop
pop
mov
cmp
adc
pop
adc
push
sahf
push
xchg
dec
outsb
mov
sbb
mov
xor
add
add
scas
rclb
pop
and
movb
and
xlat
adc
arpl
inc
mov
fcoml
adcb
adc
test
push
js
push
mov
and
cmp
or
xor
jl
inc
loope
push
or
subb
xor
push
adc
push
in
roll
mov
jmp
add
arpl
insb
dec
dec
adc
lock
jno
inc
push
inc
adc
inc
bnd
je
add
adc
jo
xor
jmp
dec
lret
pop
fildll
in
shlb
mul
fmull
and
dec
inc
adc
cmp
or
je
aaa
jmp
outsl
and
cmp
pop
outsl
or
cmp
add
std
add
sbb
testb
dec
jl
jle
or
mov
cmp
mov
call
dec
jl
loope
xor
pop
pop
add
xchg
test
jl
inc
mov
fcoms
dec
pop
mov
out
sub
push
mov
mov
push
adc
dec
lret
in
scas
push
mov
leave
cmpsl
repnz
inc
add
mov
test
add
mov
mov
mov
and
cmp
add
enter
xor
aaa
inc
mov
add
jle
adc
sbb
cmp
push
movsl
ja
mov
test
imul
stos
push
je
mov
jne
rol
fbld
xchg
add
lods
cmp
jne
fs
push
inc
adc
xchg
mov
or
shr
push
push
mov
inc
fmull
repnz
mov
add
sbb
sbb
test
mov
mov
pop
nop
jmp
xchg
xchg
mov
adc
ret
aam
inc
inc
shlb
pushf
mov
imul
or
aad
in
stos
add
test
jbe
jmp
je
adc
mov
inc
clc
inc
push
xchg
cmpl
xlat
mov
pop
mov
push
push
or
bsr
push
xchg
push
pop
andb
lock
mov
mov
pop
or
enter
imul
lea
lea
push
rol
subb
mov
insl
inc
push
mov
xor
clc
test
jmp
dec
or
loop
cwtl
inc
roll
adc
pop
adc
movsl
jb
or
inc
xlat
or
pushf
xor
sub
addr16
xor
and
push
jge
push
xchg
in
in
or
cmp
out
and
aaa
inc
xor
inc
dec
push
inc
inc
add
cmp
je
push
std
gs
xor
movsb
push
push
ret
aas
mov
pop
stos
mov
add
jno
add
ret
pushl
jmp
gs
xchg
mov
push
add
jmp
lea
xor
adc
out
sti
jne
lea
ret
sahf
mov
insl
xchg
into
movsl
aam
scas
sub
out
aas
shlb
or
inc
adc
mov
stos
test
sahf
outsb
mov
je
es
and
dec
cmpsl
and
pop
clc
xor
cmp
rcrl
faddl
int3
cmp
je
mov
mov
push
pop
or
dec
mov
or
jae
dec
sub
push
add
add
mov
test
and
shlb
data16
notl
cli
pop
iret
scas
mov
stos
hlt
dec
insb
add
sub
aam
fs
pop
jp
les
mov
test
inc
or
cmp
call
adc
adc
cs
mov
cmpsl
add
sarb
cmp
sbb
dec
imul
mov
and
push
and
movl
push
add
pop
pop
lods
and
je
in
pop
pusha
int3
add
and
aas
ds
test
fcomps
jae
insl
aad
and
sub
movb
inc
aam
add
push
xlat
jge
movl
shr
xchg
pop
adc
inc
add
sti
push
into
lock
cmp
fcompl
hlt
adc
inc
xchg
sbb
or
pusha
insb
std
mov
dec
xor
push
dec
int
dec
and
mov
imul
or
hlt
cmp
imul
clc
xchg
in
and
sbb
movsl
push
mov
inc
inc
hlt
mov
es
mov
sub
movsl
sub
mov
jo
or
push
jge
push
lahf
jne
je
mov
xor
scas
adc
dec
push
push
cmp
repz
push
add
cmp
dec
js
ljmp
mov
sbbb
lods
sti
not
adc
pop
fcmovnb
sbb
add
or
pop
lea
cwtl
aam
cmp
pop
jmp
mov
fucomi
movsl
addl
insb
je
jo
sbb
adc
mov
xor
ud0
mov
sbb
testb
movb
daa
ss
add
sbb
xor
je
ss
jno
add
pop
dec
sub
cmp
inc
movsb
add
in
push
jge
add
add
adc
pop
push
nop
xchg
push
xor
add
push
pop
mov
shrb
lea
or
sub
cvtpi2ps
aaa
jbe
jns
or
sbb
ja
or
jmp
pop
or
xchg
push
xchg
pop
mov
add
jns
jo
fisubl
ss
in
pop
sbb
or
ret
cmp
dec
cmpsb
mov
cmp
adc
jb
pop
xchg
cmp
stos
push
push
add
ret
cmp
fs
push
mov
in
add
incl
push
mov
mov
insb
xchg
sbb
push
push
das
pushf
xchg
js
jo
add
or
cmp
inc
dec
xor
lea
adc
dec
int3
inc
add
push
popa
xchg
push
dec
sub
hlt
mov
cwtl
push
call
and
cmp
pop
and
or
adc
lods
pop
fs
push
mov
mov
mov
je
push
adc
xchg
or
mov
clc
push
inc
dec
xchg
xor
sti
daa
mov
xchg
mov
mov
push
lea
push
sbb
out
pop
mov
xorl
mov
in
jne
in
loopne
push
xchg
mov
pop
neg
add
aas
add
and
repnz
loopne
call
inc
mov
test
push
pop
adc
jge
mov
and
push
xchg
mov
xor
sub
scas
jmp
or
mov
ret
jmp
sub
ret
inc
xor
push
into
add
dec
nop
push
test
push
sbb
xor
out
xorl
jg
lock
mov
testl
or
jp
mov
out
xchg
mov
fmul
add
iret
ret
rorl
ja
lret
jl
and
movsb
inc
add
loope
int
xchg
jo
mov
leave
or
or
push
mov
filds
jo
push
sbb
out
dec
cmp
sbb
sbbl
sub
and
dec
or
lods
mov
jle
xor
push
lea
adc
mov
adc
add
dec
jmp
sbb
bound
adc
xchg
loopne
jb
cmp
jg
testl
call
das
pop
ret
cmpl
inc
imul
xor
push
cmpb
mov
mov
fwait
pop
dec
pop
lods
push
jl
lods
xlat
add
mov
lret
mov
sub
loop
pop
inc
shlb
push
fisubl
sti
or
add
mov
sti
push
xchg
or
pop
xor
and
dec
push
cmp
icebp
dec
mov
or
loope
lds
inc
and
pop
in
enter
mov
or
push
xor
xchg
mov
scas
jo
loopne
inc
push
push
adc
or
or
xor
inc
sbb
pop
adc
mov
sar
addr16
ds
xchg
and
add
adc
loop
dec
add
ret
negb
xchg
aam
mov
pop
xchg
imul
push
adcb
and
and
mov
popa
enter
andl
out
ret
outsl
fadd
push
mov
cmp
out
sti
dec
ja
je
or
je
or
sub
xchg
pop
adc
adc
and
fimull
or
ds
dec
cmp
xchg
mov
jne
push
add
mov
ss
adc
push
jmp
cmp
or
pusha
push
adc
adc
shlb
push
cmp
shlb
dec
inc
sbb
dec
mov
or
pop
and
or
xorb
jge
adc
cmp
mov
mov
ret
mov
inc
sti
lods
cmpb
rorl
gs
add
mov
push
dec
je
xor
ret
inc
push
mov
mov
xor
popa
pop
pop
mov
adc
and
test
or
add
xlat
mov
push
or
or
test
adc
and
dec
je
sub
mov
movsb
xor
data16
adc
add
xor
inc
nop
adc
in
ja
push
mov
xor
pop
pop
or
push
adc
sub
dec
subl
aas
je
dec
dec
mov
pop
jge
pop
or
add
xchg
lds
movl
push
test
mov
ret
mov
repnz
dec
loope
aam
mov
into
insb
popa
inc
inc
jne
add
cmpb
addr16
push
pop
mov
movsl
iret
adc
xor
or
cmp
nop
xor
xchg
cmp
mov
add
pop
fcoms
mov
das
push
sub
loopne
push
cmc
mov
inc
push
inc
push
and
aaa
or
push
mov
test
mov
hlt
push
adc
call
jo
dec
loopne
loopne
lods
xchg
mov
sub
test
fcomp
repnz
inc
clc
xchg
pushl
notb
xor
adc
inc
into
ret
jbe
push
pop
push
xchg
pushf
cmp
rcll
jle
pop
sub
int
faddl
scas
dec
insb
insb
repnz
jecxz
sub
push
jmp
push
dec
push
nop
and
add
mov
mov
xchg
pop
and
and
cli
jbe
fsubs
inc
enter
pop
xchg
dec
pop
push
jns
sub
ret
movsb
imul
pop
ret
push
xchg
dec
and
push
mov
cmp
ret
cs
sub
push
call
movsb
jns
push
push
push
inc
push
test
rorl
pop
mov
jns
and
arpl
pusha
movsl
sbb
les
or
xchg
out
sarl
push
push
cmp
sbb
dec
fsub
add
leave
enter
aam
cmp
faddl
push
enter
jne
inc
in
cmp
aaa
add
aas
push
push
xlat
pop
add
ret
fs
pop
imul
and
shlb
cwtl
out
popa
add
clc
inc
sbb
popa
pop
test
pop
fwait
xor
cld
sbb
flds
push
adc
in
xchg
aaa
fcmovu
cmp
dec
pop
les
lret
clc
leave
push
adc
inc
mov
cld
sbb
sbb
testb
pushf
and
jecxz
mov
adc
mov
mov
xor
and
or
adc
pop
mov
mov
or
shrl
push
ror
or
hlt
rcl
fs
xchg
jb
mov
int3
nop
add
mov
mov
sub
pop
mov
outsl
mov
aam
push
dec
or
dec
int
add
imul
aaa
enter
xchg
pop
inc
push
jne
add
add
bnd
addr16
push
lahf
dec
in
sub
sbbb
jecxz
mov
dec
sub
stos
mov
lea
shlb
loop
fcoms
or
xchg
xchg
or
sub
cmpsl
dec
push
and
je
mov
roll
stos
and
inc
js
pop
ret
pop
ret
jbe
or
movl
mov
jle
jle
or
add
loop
stos
jns
mov
sbb
push
imul
sub
aas
xor
push
xor
add
xor
rclb
mov
call
sbb
push
pop
mov
shll
push
stos
or
xor
mov
nop
push
ja
add
sub
aas
pop
dec
movsl
cmp
call
xchg
or
call
xor
add
add
clc
sub
sub
push
decl
sbb
xor
inc
cmp
jp
push
ret
xchg
dec
and
cmpsl
sbb
outsl
sbb
movsl
inc
pop
test
or
sbbl
cmpb
sub
pop
mov
mov
mov
mov
std
push
and
ficomps
testb
pop
pushf
lahf
pusha
inc
push
add
jo
nopl
cwtl
dec
inc
and
add
jl
iret
add
dec
push
fdivl
mov
jnp
mov
add
xchg
rclb
pop
pop
jb
sub
or
dec
rcrb
mov
xchg
lea
in
cmp
mov
push
cmpb
cmp
cwtl
jp
inc
mov
mov
es
inc
imul
mov
call
sub
jbe
pop
jg
sti
je
jle
add
lods
or
or
or
cmpl
je
inc
call
mov
xchg
xchg
mov
lock
mov
dec
xor
push
adc
mov
dec
sbb
inc
es
dec
call
sub
rcrl
adc
adc
pop
mov
cmp
push
cld
lcall
sub
inc
call
rol
xchg
mov
push
pop
push
push
dec
sub
js
je
xor
jae
lock
cwtl
dec
mov
jge
outsb
sarb
sbb
cmpsl
fstpl
inc
xchg
push
and
push
cltd
popa
xor
inc
mov
xchg
in
mov
mov
inc
mov
xchg
rorl
cmp
jo
cwtl
and
imul
jbe
adc
mov
push
pop
dec
mov
ss
cmpsb
jp
in
and
cmp
sbb
dec
dec
fwait
and
add
inc
adc
add
jecxz
xchg
cmp
hlt
fs
push
inc
das
inc
es
jno
xchg
ds
mov
addr16
add
mov
mov
cmp
in
cmp
and
ja
movq
sbb
repz
sub
mov
and
js
bound
pop
rolb
pop
in
aaa
stos
lds
add
push
xchg
xchg
mov
es
je
dec
inc
into
hlt
je
test
mov
or
call
cmp
aaa
push
adcb
fs
jnp
cmp
stos
imul
out
ljmp
nop
jmp
adc
push
adc
adc
and
dec
repz
lret
mov
gs
fwait
add
cmp
sti
and
add
addb
dec
dec
aam
mov
je
or
push
cmp
popa
inc
adcl
xorl
xchg
ja
sahf
inc
stos
and
fsub
adc
xchg
cmp
lret
add
xchg
push
mov
dec
cs
inc
lcall
gs
adc
xor
shrb
xchg
fsin
aam
dec
adc
mov
add
jbe
cmp
and
adc
mov
in
xchg
cmc
inc
push
add
dec
push
add
push
dec
or
cmpsb
outsb
and
pusha
inc
cld
dec
or
adc
aas
lea
add
add
or
mov
add
xchg
mov
mov
mov
push
rolb
mov
lea
push
or
sbb
mov
mov
rep
ror
addb
and
xor
gs
mov
sbb
mov
bound
out
dec
or
adc
scas
je
dec
pusha
and
mov
js
cmp
inc
sbb
lods
xchg
test
mov
and
and
sbb
add
push
push
and
popa
add
sub
pop
jns
and
or
outsl
or
ja
add
inc
sub
pop
sbb
and
jle
add
icebp
loopne
and
ja
jo
pushf
in
xor
pop
and
and
inc
mov
push
and
out
xchg
xor
xor
cmp
push
leave
repz
clc
cmp
lods
cmp
cmp
push
jp
scas
xchg
and
or
xchg
xor
cmp
ret
inc
xchg
or
jl
add
repnz
leave
addr16
inc
xchg
or
push
mov
xor
mov
mov
and
jle
andb
mov
adc
fld
sbb
and
or
push
mov
sbb
or
lea
sub
dec
mov
mov
jno
jb
jno
int
imul
mov
jg
push
dec
sub
jne
push
inc
mov
sahf
add
les
add
mov
add
loopne
or
test
mov
movsb
mov
inc
or
insb
and
sub
lds
lods
adc
xor
adc
imul
push
adc
push
xchg
fdivr
xchg
cs
xchg
adcb
xor
add
mov
aam
subl
ret
and
fists
loopne
enter
adc
push
pop
int3
dec
add
push
frstor
cmovge
add
outsl
sarb
jge
jl
scas
or
and
ss
cs
add
mov
or
add
lods
jbe
push
push
adc
js
jl
push
cld
pop
and
jg
jnp
jae
mov
or
bound
or
out
xor
add
lock
jne
jg
out
sbb
or
cmc
test
xchg
push
lock
enter
or
cld
lret
stos
mov
adc
rcll
add
or
sub
push
and
pop
jl
xor
adc
movsb
or
sub
enter
sahf
or
mov
adcb
pop
xor
sbb
jnp
mov
adc
ror
mov
je
lea
inc
add
ret
sbb
pop
nop
test
inc
add
adc
addr16
or
dec
and
mov
or
adc
mov
fcom
fsubl
test
push
sbb
inc
psrld
decl
push
popf
add
xlat
jne
jp
lods
test
xchg
int3
ret
or
out
push
jle
sbb
call
jne
sbb
inc
jmp
push
imul
inc
adc
inc
arpl
es
mov
xchg
stos
and
sbb
lods
ja
mov
cli
ljmp
lahf
nopl
xchg
fisubrs
imul
call
imul
and
xchg
jo
push
add
or
lock
jns
add
iret
rolb
test
and
push
scas
and
xor
mov
shlb
incb
shll
push
leave
push
xor
sub
cmpb
rcr
mov
and
mov
xchg
jo
push
lock
adc
xor
lock
mov
jb
enter
dec
sbbl
pop
pusha
xchg
nop
mov
mov
leave
mov
xchg
push
dec
addl
add
push
stc
add
jle
roll
cmp
jo
jge
cmp
jbe
mov
cmp
push
inc
lock
jo
fcoms
and
push
sbb
xor
inc
inc
test
jbe
push
pusha
dec
sub
add
lea
in
push
dec
es
push
jp
and
push
mov
xchg
loop
sbbl
mov
fs
outsb
xorb
dec
dec
xor
xchg
loope
or
cld
mov
and
mov
cmp
pop
jb
insb
call
jecxz
cmp
push
lcall
lods
leave
pop
faddl
push
ss
cli
aam
mov
call
test
pop
add
push
je
push
lret
and
push
std
pop
loop
bound
cmp
mov
jle
add
inc
adc
jle
mov
push
jmp
inc
xor
or
sahf
jne
orb
sbb
cmp
loop
and
mov
jne
andl
enter
sbb
or
or
sub
or
loope
mov
mov
enter
movsl
clc
clc
enter
test
push
rcll
mov
pop
sbb
jo
dec
outsb
xor
mov
stc
inc
stos
xchg
sbb
or
or
adc
jbe
mov
lahf
les
ret
lea
xchg
push
add
pop
adc
lcall
sahf
xchg
ret
pop
fdivs
repz
mov
push
paddsb
xchg
nop
xor
ret
adc
mov
adc
pop
mov
sbb
pop
ret
gs
imul
dec
dec
add
sbb
or
test
cmp
aam
in
shrl
inc
or
aas
push
daa
or
fnstenv
push
mov
bound
xchg
push
js
dec
push
or
loope
or
pop
mov
mov
and
insb
push
cli
icebp
test
and
mov
jg
lea
cmp
pop
add
and
and
and
imul
or
push
cmp
mov
mov
rorb
mov
pop
mov
xor
pop
push
or
cmpsb
sub
mov
and
cld
jl
push
sbb
sbb
dec
xor
rcr
mov
ret
gs
pusha
dec
adc
pushl
call
jl
xchg
js
js
jbe
or
cwtl
cs
and
push
jo
xor
cmpsb
sbb
insl
lret
loop
test
push
sub
bound
and
add
jno
cmp
push
dec
ret
xchg
adcb
jg
arpl
jo
pop
mov
sbb
andps
add
xchg
sbb
xchg
and
push
loop
mov
or
mov
mov
add
pushf
sub
stos
popf
push
and
adc
dec
mov
loopne
push
add
push
clc
testb
out
sarl
bound
mov
lock
sar
sub
mov
leave
mov
push
pop
pushf
inc
xchg
repz
inc
and
cwtl
in
sbb
pop
testb
repz
cmp
ljmp
outsl
imul
cmp
dec
repz
sub
fs
imul
aas
subl
mov
dec
outsb
mov
lret
jg
fdivrp
add
je
pop
cwtl
push
cld
push
xor
lock
in
out
into
outsl
cmpsb
icebp
xor
adc
mov
mov
enter
push
js
sbb
dec
dec
pop
test
arpl
mov
jecxz
sbb
or
inc
pushf
sarl
inc
ljmp
push
pop
xchg
sti
jl
test
stos
imul
adc
lcall
sub
mov
jecxz
test
orl
mov
add
or
mov
mov
add
jmp
rcrl
pop
push
aas
cwtl
pop
out
imul
jb
xor
push
xor
jecxz
pop
xchg
jbe
and
xor
scas
sbb
push
xchg
fsub
pop
push
incb
or
push
xor
das
sub
xor
cmp
sbb
inc
dec
lret
cmp
das
dec
insb
dec
mov
and
insb
jbe
or
sbb
add
jge
sbb
add
inc
jmp
std
lods
push
inc
movsl
sub
jp
in
es
or
jno
push
sbb
or
or
mov
pop
adc
fisubs
xor
mov
je
mov
xchg
adc
add
sahf
pushf
rclb
or
jnp
inc
ret
inc
cmp
neg
sub
icebp
pop
or
sarb
enter
insl
inc
push
mov
jne
sbbb
or
add
int
cmp
xor
enter
xor
xchg
faddl
adc
mov
mov
push
push
iret
jg
or
jg
orl
or
xor
arpl
jmp
lcall
outsb
ljmp
test
cmp
add
xor
in
jge
sbb
add
add
jno
dec
and
mov
lcall
or
push
push
xor
pop
mov
ds
jle
jne
pop
cmp
loope
clc
sub
xorl
pop
xchg
lret
or
rep
bound
dec
pop
dec
or
adc
jmp
sub
jae
xor
add
and
pushf
push
cmp
arpl
pop
add
jnp
and
jne
adc
or
cmp
inc
push
xor
lea
inc
daa
lods
mov
int3
cmpsb
xlat
push
and
push
mov
scas
xor
adc
push
xchg
data16
inc
mov
or
push
push
gs
ds
xor
or
pop
inc
inc
mov
xchg
testb
mov
out
mov
pop
ja
vpunpcklbw
push
push
add
push
sub
rolb
mov
andl
push
mov
addb
xor
sbb
sub
ror
hlt
add
adcb
xchg
mov
popa
or
ret
xchg
or
test
add
inc
sub
in
mov
in
loop
shr
xchg
sarl
xor
push
inc
aaa
mov
ds
sub
push
ds
mov
nop
jmp
or
push
scas
dec
jb
mov
mov
mov
test
shl
add
push
lret
lret
test
loop
aam
mov
push
push
push
lea
add
mov
pop
fst
jge
push
fcoms
mov
mov
cmpsb
jo
incb
adc
rclb
dec
fadds
push
loopne
jmp
push
or
adc
dec
mov
or
cmp
test
xor
mov
adc
jno
incl
sub
mov
jno
jbe
dec
rclb
ror
sbb
adc
xlat
mov
adc
arpl
pop
jmp
push
and
add
or
inc
add
inc
aad
fwait
mov
cmp
daa
sub
xor
cmp
scas
mov
mov
lods
js
inc
sbb
add
mov
inc
sbb
sbb
inc
sbb
or
int3
pop
adc
ret
lcall
xor
and
je
mov
loop
pop
andb
testl
inc
cmpsb
pop
cltd
push
cli
sub
or
jo
add
push
pop
test
sub
jl
ret
bound
and
mov
mov
loope
add
xor
ss
inc
mov
in
iret
adcb
adc
mov
pop
mov
jle
mov
push
pop
cli
xor
mov
loopne
pop
clc
adc
dec
add
int3
adc
add
sub
adc
shrb
es
jnp
orl
push
mov
div
push
mov
testb
push
push
mov
mov
ds
aam
pop
push
movl
or
pushf
xchg
ret
or
xlat
popa
insb
loope
pop
dec
dec
insl
insl
push
adc
bound
or
add
mov
jl
cmp
sub
pop
cmpsl
and
inc
or
outsb
dec
adc
cmp
je
cmp
imul
gs
rol
add
clc
jbe
or
add
mov
jmp
push
push
or
lret
dec
inc
cmpsb
pusha
in
je
mov
inc
ret
pop
sub
jecxz
xchg
gs
inc
xchg
adc
repz
mov
adc
test
decb
call
adc
mov
jp
fiadds
add
dec
dec
sbb
lock
lea
mov
sub
pop
fdivp
mov
sub
in
xchg
movsl
dec
cmp
lods
sbb
jnp
in
jne
loope
mov
and
lea
add
ljmp
testb
lods
add
or
add
pop
sbb
mov
inc
or
or
shll
ret
mov
jno
pop
xchg
mov
xorb
clc
arpl
je
sbb
or
call
lods
in
out
enter
xor
popa
mov
push
inc
stos
cli
cmp
sbb
enter
arpl
orl
jne
sub
inc
outsb
sar
aam
fidivl
mov
nop
cli
cmpsl
pusha
popa
push
push
cmp
jb
pushl
mov
into
pop
or
mov
xor
jae
or
or
add
rorl
or
in
push
aam
or
sub
stc
mov
fwait
ret
cmp
sbb
icebp
mov
fstl
pop
cmp
jl
out
cli
or
stc
mov
push
arpl
xlat
mov
sub
into
in
mov
jmp
pop
lock
in
fsubrl
mov
push
dec
push
dec
and
imul
test
pop
popl
adc
cmpsl
hlt
add
jg
mov
popa
mov
adc
in
pushf
dec
jo
sbb
cs
lahf
out
movsl
lock
jbe
adc
je
or
adcl
rclb
cmp
sbb
cmp
and
daa
and
sbb
mov
arpl
arpl
inc
mov
push
dec
or
adc
addr16
fsubrs
fldt
dec
or
mov
ja
sbb
cmp
in
nop
arpl
and
add
mov
adc
add
push
into
lret
out
inc
add
or
js
test
fists
data16
jno
pop
jne
sub
out
ror
xor
xor
jo
add
jbe
cmp
dec
adc
add
sbb
or
mov
adc
leave
shll
sbb
mov
inc
mov
mov
shlb
add
test
mov
and
nop
inc
lods
and
and
push
nop
inc
push
and
and
sbb
es
sub
push
pop
enter
test
and
enter
lock
cs
enter
mov
adc
push
nop
sub
xor
sub
divb
dec
xor
or
jo
loopne
xor
mov
mov
sbb
jg
adc
shrb
lea
leave
out
push
cmp
pop
ret
cmp
jb
xchg
cld
or
shlb
push
movl
add
ja
ficoms
adc
or
pop
adc
test
mov
ret
fimull
clc
add
fwait
or
movl
push
lret
add
pop
outsb
inc
add
push
or
xor
and
pop
adc
lea
mov
sub
pop
adc
sbb
lcall
mov
pop
pop
pop
sbb
push
and
movb
push
xchg
mov
xchg
xor
push
mov
mov
fists
arpl
fsubr
or
and
leave
or
popa
je
mov
in
and
and
cwtl
sbbl
push
mov
loop
insb
subb
xchg
andl
ss
cwtl
push
fiaddl
or
sub
in
push
cmp
fdivrs
aam
out
lock
fcoms
add
add
leave
aas
pop
movsb
scas
xor
test
or
add
daa
add
shrl
lods
ja
or
add
add
push
cmp
add
xchg
gs
mov
fsubrs
xorl
sbb
xchg
es
je
mov
cmp
mov
mov
rcll
jnp
inc
mov
daa
loopne
cmpb
rcll
fwait
pop
cmp
jne
and
rolb
or
in
outsl
add
into
pop
orb
cs
sbb
cmp
xchg
out
pop
in
add
add
pop
test
pop
sbb
fwait
sub
sub
jns
imul
xchg
add
sbb
daa
cmpb
and
sbb
dec
adc
enter
jmp
or
or
sub
mov
jo
jb
cmc
xchg
mov
xor
adc
lock
jne
add
lods
cs
add
sbb
ljmp
test
imul
inc
pop
dec
cmp
jg
mov
xlat
push
notl
or
shr
push
lea
push
mov
push
dec
inc
ljmp
sbb
lea
insl
shrb
push
push
sub
add
adc
psrlw
dec
sbb
inc
cmp
mov
mov
or
mov
add
mov
mov
or
fldt
sbb
popf
je
dec
cmp
jmp
add
aaa
movsb
xchg
sbb
enter
jmp
push
das
or
sbb
out
add
rorb
or
iret
fnsave
mov
fsubrl
or
and
lret
orb
pop
stc
inc
mov
adc
pop
shrl
xchg
cmpsb
push
xchg
test
mov
call
sbb
test
mov
push
pop
enter
cmp
inc
insb
add
mov
shl
repnz
push
stc
jp
xor
orl
xchg
or
int
pop
lock
andl
dec
fisubrs
repnz
std
dec
pushf
ret
lahf
int
push
nop
iret
or
jbe
lock
ficompl
xchg
testl
jns
mov
pop
cmpsl
cmp
adc
lahf
sbb
sbb
or
adc
inc
or
xchg
or
or
pushl
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
je
cmp
je
sbb
mov
xor
inc
cmpsb
cmp
add
jge
mov
pop
and
cmp
outsl
and
jns
cmp
je
cmp
je
jne
jmp
pop
or
push
movsb
iret
sbbl
enter
insb
pop
sbbl
jnp
sub
add
std
movsb
inc
xchg
ljmp
mov
ljmp
shl
xchg
out
or
enter
push
mov
add
or
fiaddl
mov
mov
fdivr
popf
mov
sub
xor
xchg
jnp
das
jne
lret
cmpsb
cmp
adc
movsb
rorb
add
mov
dec
and
or
or
mov
sbb
pop
in
insl
scas
sarb
mov
stos
adc
movsl
jno
bound
mov
or
jns
mov
in
or
adc
loopne
mov
mov
add
in
xchg
pop
inc
popf
clc
and
mov
jp
add
sub
enter
pop
gs
hlt
adc
push
adc
add
push
add
jg
pop
fsub
sub
aaa
xor
call
ret
pop
sbb
or
mov
or
cmpsb
mov
dec
or
cmp
inc
inc
bound
xchg
push
sbbb
fs
inc
pusha
leave
sub
push
jo
jmp
push
xlat
push
scas
or
or
pushf
add
in
test
mov
pop
dec
xchg
xchg
popa
cmpsl
pusha
das
sbb
lea
popa
bound
push
push
testb
adc
or
repz
pop
pop
pusha
sarb
mov
add
sbb
push
jecxz
pop
adc
push
inc
arpl
cmp
lea
sub
mov
in
cmp
xchg
xor
add
xlat
fisttpl
push
incl
inc
dec
je
adc
inc
data16
jo
inc
gs
and
add
aas
pop
rcll
mov
dec
sahf
push
dec
mov
xor
iret
repz
sbb
test
pop
mov
jno
push
inc
mov
add
xor
cmp
and
jbe
popf
mov
je
mov
sbb
jne
cmp
ficoml
ret
sbbb
inc
dec
cmpsl
inc
and
addl
fs
inc
push
outsl
adc
mov
test
outsl
rol
mov
outsb
add
xchg
push
insl
loop
lods
xor
cltd
add
cmp
mov
and
repnz
add
jbe
jmp
outsl
nopl
pop
jmp
inc
and
xor
test
or
jo
arpl
xor
stc
xchg
fsub
rcrl
inc
jmp
inc
jl
fucomi
adc
clc
clc
mov
hlt
xchg
lea
aad
adc
sub
sbb
jo
ret
or
adc
rorb
and
or
inc
dec
adc
icebp
daa
lods
inc
sub
mov
in
sbb
sub
and
dec
push
push
or
insl
rorb
mov
lahf
adc
adc
push
xchg
pop
adc
push
pop
mov
xchg
jae
add
sbb
inc
jecxz
fsubrl
cmp
xchg
sub
mov
rcrb
add
or
mov
lock
je
or
je
cmp
push
mov
push
movsl
sub
lock
push
out
push
mov
mov
xchg
pop
aad
adc
adcl
adc
cmp
je
push
xchg
ret
jle
dec
add
and
mov
call
push
xor
dec
insb
or
push
xor
repnz
push
outsb
sub
mov
add
cmp
cmp
leave
add
cmpsb
pop
and
stos
std
into
or
push
addr16
xchg
fnsave
shll
fadds
inc
jbe
loop
test
imul
push
les
ss
xchg
pop
shrl
pushf
fs
xorl
out
inc
dec
add
jnp
pusha
or
jno
cmpsl
pop
mov
cwtl
mov
cmp
pop
in
fcomps
scas
push
sub
or
loopne
jge
ficoms
cmp
clc
push
ret
push
xchg
add
cld
jle
sbb
into
push
mov
outsl
or
bound
repz
outsb
jo
es
add
aam
sbb
popa
mov
sub
push
ljmp
push
cltd
mov
push
add
movsl
or
movsl
push
dec
dec
inc
fwait
aad
jmp
mov
or
push
hlt
jg
mov
sub
bound
popa
add
pop
add
lock
loope
test
jmp
adc
ret
or
push
dec
or
push
clc
loope,pn
sbb
loop
xor
lret
sub
sahf
jg
pop
orl
sub
lea
subb
dec
mov
ret
mov
sub
fucomi
fildl
fadds
ret
cmpl
adc
stc
jne
push
push
add
mov
and
addr16
push
mov
rorb
sbb
adc
fisubrl
call
mov
mov
pop
adc
or
inc
cmp
pop
test
mov
inc
push
add
or
add
push
or
je
and
xchg
and
stos
outsb
dec
sahf
xor
adc
icebp
sbb
xchg
test
ja
and
xor
jp
adc
mov
xor
mov
addr16
dec
nop
mov
jmp
test
sub
lret
or
fcomps
data16
outsb
xchg
popa
or
cltd
fimull
inc
add
push
pop
adcl
hlt
mov
lcall
add
lods
mov
push
lea
dec
or
mov
cli
and
or
sub
push
mov
loope
push
adc
or
or
jmp
in
pop
xchg
divb
dec
lds
add
cmp
pushl
jae
cmp
and
test
xchg
out
push
inc
sbb
dec
das
nop
adc
sub
je
cmp
jp
cli
daa
xchg
lock
es
mov
inc
insl
adc
inc
sub
movsl
loop
pop
adc
movl
add
negl
dec
pop
aaa
pop
and
adc
and
mov
cli
push
fsubr
scas
dec
adc
frstor
addr16
fstpl
dec
in
fildl
push
cmp
lahf
out
stc
adc
jne
push
divb
or
jne
jns
sahf
sbb
cli
jne
or
cmpsl
outsl
fldz
xchg
rolb
fstpl
andl
mov
add
repnz
mov
test
mov
mov
push
sub
fwait
jne
aad
push
mov
add
aam
arpl
adc
jo
test
lea
fstl
jecxz
fmuls
jbe
cmp
mov
xor
push
or
add
dec
sarl
and
ret
pop
rorb
notb
add
or
rorl
je
sbb
push
nop
push
and
test
sbb
cmc
sbb
nop
jbe
add
int3
fldl
ret
push
insb
jge
jne
push
rcrb
inc
mov
loop
mov
loopne
sti
movsl
pmaxub
push
jmp
xchg
in
adcb
push
push
mov
cmp
dec
test
adc
outsl
xchg
dec
data16
andb
xchg
mov
in
fsubs
test
and
jbe
stos
pop
shll
sub
lods
int3
jns
sbb
lock
mov
and
sub
jbe
push
add
mov
nop
enter
test
test
aad
int
cld
hlt
sub
repnz
add
pop
lock
push
dec
leave
outsl
or
add
push
cmp
fnsave
xor
push
daa
test
pop
add
inc
add
subl
lds
insb
in
push
push
push
sub
push
push
push
jne
rcrb
pusha
jge
loop
adc
inc
insb
or
bound
lahf
add
lods
xor
mov
and
adc
or
push
xor
sub
or
jno
add
inc
or
in
add
fs
in
stc
add
and
pop
les
fsubrs
push
divl
inc
es
or
rorb
inc
imul
fcom
arpl
or
sbb
mov
sbb
enter
push
add
lods
cltd
push
daa
pmulhuw
sbb
xor
and
push
test
cwtl
inc
xchg
xor
xchg
cmc
rclb
add
shlb
add
mov
push
sbb
sti
lret
add
xor
ds
xor
dec
cmpsl
and
lods
cmp
dec
leave
unpcklps
and
jl
push
lock
mov
sti
push
test
mov
insb
iret
out
add
and
ret
or
loop
addr16
mov
push
int
adc
nop
push
cmc
mov
pop
rclb
push
fwait
adc
or
add
loop
aam
pop
xchg
push
fiaddl
andb
aam
adc
push
add
xchg
arpl
add
movsb
cmpl
xchg
jecxz
lock
jl
cld
push
ja
mov
dec
xor
stos
inc
add
repnz
sub
or
hlt
adc
add
add
add
xchg
add
mov
add
movsb
aad
pop
fadds
cli
dec
pop
pop
test
mov
and
gs
sub
or
addl
iret
push
fbstp
in
inc
adcb
imul
test
rclb
movsl
loop
imul
push
das
ret
cmp
cmpsb
push
jmp
mov
pusha
pop
les
mov
or
stc
dec
lahf
or
push
loope
int
mov
mov
push
cs
sbb
imul
and
add
push
aaa
pop
loope
in
pop
psrld
mov
sub
not
push
pmulhuw
xor
fdivs
push
xchg
push
xor
notl
sub
cmp
pushl
stos
nop
push
push
mov
dec
adc
inc
add
mov
ljmp
and
fidivrs
add
loopne,pt
mov
sbb
cwtl
cli
cs
or
jle
add
adc
dec
loopne
daa
mov
jge
clc
lods
negb
roll
mov
pop
cmp
mov
adc
jg
in
cmc
cmp
lcall
pusha
mov
push
pop
mov
pop
jmp
and
inc
jle
inc
leave
rolb
pop
cmp
sbb
shll
inc
and
push
or
ret
adc
pop
dec
sti
inc
test
movsl
cli
lea
push
insl
adc
or
sub
adc
nop
jg
lcall
push
pop
push
sbb
push
inc
punpckhwd
xor
mov
insb
inc
pop
sbb
in
jp
add
xor
or
lea
sti
outsb
shrb
lea
xor
cmp
and
push
and
faddl
xlat
push
movsb
dec
or
test
sbb
adc
push
out
cmpsl
mov
test
mov
cmpsb
insb
lcall
add
movsl
mov
jno
shll
push
rcrl
shr
pusha
sbb
xlat
sbb
aas
in
test
or
dec
lcall
jle
hlt
dec
mov
inc
xchg
xor
cs
inc
dec
xchg
mov
adc
pop
mov
data16
or
rcrb
or
test
and
adc
or
xchg
imul
and
adcl
shrb
xchg
notl
adc
mov
lea
andb
add
adc
mov
xchg
cmpsl
popf
push
and
xor
mov
pop
adc
insl
test
push
or
ss
xor
mov
adc
mov
fsubs
sub
xchg
add
xor
or
ljmp
inc
dec
add
inc
addb
add
mov
roll
ret
sub
dec
lock
adc
fstpt
call
lock
inc
cmp
shlb
xchg
jbe
xchg
cmp
pop
mov
or
dec
or
cmc
into
sbb
inc
es
aas
mov
adc
adc
loope
add
sub
mov
fsubrl
sbb
scas
fnstenv
lods
push
and
shrl
jmp
lods
fldcw
xchg
lret
adc
fidivrl
xchg
sbb
ja
cmp
xor
cmp
stos
sub
inc
enter
adc
mov
pusha
or
push
pop
fsts
enter
bnd
pop
push
cmp
or
sahf
jecxz
sbb
rolb
mov
mov
add
add
lods
adc
mov
and
jne
pusha
out
add
pushl
cmpsl
nop
sbb
out
sbb
inc
or
sbb
and
sbb
jno
and
inc
roll
call
mov
fnsave
sub
add
mov
or
loopne
pop
xchg
cld
xor
mov
jl
inc
dec
jp
popa
enter
adc
push
add
sub
dec
dec
jl
mov
daa
sub
pop
mov
adc
mov
adc
and
mov
sarb
enter
dec
mov
pusha
loop
add
lods
dec
push
test
popf
pop
cmpsb
adc
pop
jp
arpl
adc
and
xchg
addr16
fs
pop
mov
fsubs
rorb
or
sbbb
icebp
call
addr16
insl
shlb
push
dec
stos
or
cmpb
sub
pushf
mov
lea
into
ja
iret
call
jbe
push
das
ds
outsb
cmp
sub
or
jne
adc
and
test
xchg
cmpb
dec
or
xchg
out
pop
jg
cmp
popf
arpl
adc
and
sub
inc
loopne
xchg
dec
xor
mov
rol
imul
inc
ret
xor
popa
jp
sbb
inc
pop
xchg
ds
imul
mov
fucomi
pop
mov
jno
inc
fstps
lods
inc
aas
and
pop
add
sahf
es
aas
inc
jle
jg
es
xchg
and
adc
jmp
subb
je
leave
xor
pushf
jmp
sbb
loope
xchg
cld
adc
gs
xor
xchg
mov
lock
in
pusha
adc
mov
aaa
or
mov
ud0
sti
dec
int3
add
or
ds
xor
nop
dec
push
pusha
ret
push
inc
cmp
inc
divl
push
add
add
inc
cmp
inc
insb
jp
dec
mov
in
xlat
int
aas
adc
inc
add
dec
add
push
mov
add
loopne
or
pop
arpl
adc
jl
mov
je
repz
add
sub
js
nop
mov
or
mov
add
in
adc
sbb
add
adc
add
sbb
push
sbb
je
xchg
outsb
sbb
or
mov
mov
out
icebp
pop
ficoml
sbb
inc
push
cmp
push
or
cmpb
or
and
and
mov
sub
sub
xchg
mov
adc
xchg
push
scas
cmp
pop
inc
fistpl
jecxz
sbbb
js
and
clc
add
push
mov
mov
lcall
xchg
dec
xor
fildll
mov
pop
clc
or
adc
jge
sub
dec
adc
in
push
and
sbb
fcmovnb
mov
or
imul
cltd
adc
jnp
repnz
mov
pop
adc
adc
inc
jns
pusha
pop
das
dec
dec
add
stc
jg
mov
jnp
inc
jp
ljmp
in
mov
add
movsl
nop
and
add
inc
or
cmpsb
adc
inc
dec
aam
xor
aad
pop
dec
mov
in
mov
sbb
inc
xchg
loopne
iret
lea
ret
or
jg
loopne
ficomps
jecxz
rolb
jae
or
pushl
mov
sub
imul
pop
cmp
popa
push
sbb
cmp
push
lds
sub
pusha
inc
jne
xchg
jne
push
add
fadd
aam
xor
xchg
pop
xor
punpckldq
aam
add
push
xchg
xchg
mov
mov
inc
xorl
pusha
dec
or
inc
ds
add
adc
inc
sbb
sub
adc
xchg
push
and
sub
cltd
pop
ss
mov
notl
push
hlt
ss
adc
push
cs
mov
mov
jo
dec
addb
xlat
in
daa
or
inc
js
and
es
cmp
fbstp
push
enter
insl
inc
pop
xor
inc
pop
adc
faddl
or
add
or
and
scas
dec
mov
lret
mov
sbb
inc
jb
xor
push
test
xorl
jb
cli
inc
loopne
jmp
jb
add
lea
xor
addb
inc
add
adc
jne
and
xchg
jbe
div
inc
cmp
jae
fs
mov
fdivl
adc
jmp
jp
fwait
nop
fstl
mov
sbb
adc
incl
push
data16
jmp
imul
movsbl
add
inc
mov
cwtl
icebp
mov
mov
aam
or
cmp
je
sbb
sarl
or
mov
aad
add
add
sub
push
mov
mov
adc
jne
push
xor
test
xor
inc
dec
loop
js
pop
sub
cmp
in
ret
in
inc
dec
cmp
fistpl
imul
jp
es
pop
dec
pop
xchg
inc
mov
gs
pop
stos
dec
pushf
jbe
in
jno
xorl
dec
loop
jnp
add
adc
or
stos
psubusb
insb
add
and
fld
sub
sbb
add
push
jle
out
add
clc
sbbb
inc
adc
je
inc
adc
iret
add
andl
insl
loopne
adc
sbb
loope
push
frstor
test
sbb
add
lock
dec
fnstsw
test
je
and
sbb
sub
jno
xchg
in
or
add
add
fwait
add
movsb
xchg
bound
sbb
fsubrl
push
test
or
add
jmp
mov
out
cmp
add
push
mov
mov
fsub
pop
fsubrp
mov
lahf
aam
insl
pop
into
add
andb
jp
jns
loopne
orl
jno
and
imul
dec
add
push
shlb
xchg
insl
and
add
push
adc
sub
dec
je
add
gs
aaa
es
mov
int
adc
fcoms
add
jns
xchg
lods
ficompl
ss
mov
sub
push
push
push
test
sbb
sbb
mov
stc
ss
or
pop
pop
adc
aam
push
xor
push
sarl
rorb
ror
pusha
and
pop
mov
inc
sbb
jne
sbb
ret
movsb
fwait
in
int3
ffreep
in
test
or
adc
ljmp
push
inc
sbb
push
xor
dec
add
lea
ja
repnz
aad
dec
sub
dec
mull
cmp
and
add
push
push
push
fistpl
adc
and
push
push
fs
push
push
mov
dec
inc
rcrb
push
mov
and
push
nop
jbe
or
sbb
xchg
das
cmpsb
pusha
in
or
cltd
and
aam
in
push
aas
push
sub
push
jecxz
cmp
xchg
add
pop
call
subl
cld
mov
add
add
sub
clc
cmp
inc
and
mov
inc
push
push
xchg
xchg
cs
ret
sub
or
xor
jbe
mov
les
sub
cltd
adcb
clc
in
imul
fidivrl
xor
inc
mov
and
adc
lss
cmp
call
pusha
aaa
add
pusha
and
add
sub
inc
cmc
add
jl
fs
leave
mov
pushf
lret
jg
lods
sbb
and
xor
cmp
and
or
and
sub
cwtl
adc
pushf
push
add
sub
sub
mov
adc
iret
lahf
mov
shl
hlt
sahf
out
ds
dec
jns
out
pop
xchg
mov
sahf
out
out
or
sbb
repz
sub
iret
repz
mov
lcall
sbb
pushf
dec
sahf
out
dec
outsb
pop
inc
or
add
mov
cs
sbb
mov
ljmp
cmc
mov
lock
and
pop
dec
xor
add
sarb
insb
les
or
jmp
sub
pop
ret
xchg
nop
inc
mov
xchg
cmp
pop
iret
add
cmpsl
mov
add
push
mov
push
mov
popf
addr16
adc
das
movsb
popf
sti
mov
adc
or
fmuls
push
loope
fildl
sub
leave
pop
pop
movsb
or
in
and
xchg
xor
xchg
test
in
mov
lods
or
push
jae
inc
adc
cwtl
aaa
int
and
sub
and
fadds
inc
add
mov
mov
aas
adc
mov
das
add
or
cmpsl
iret
rclb
adc
fnstsw
pop
rorl
or
pusha
and
push
fldl
adc
fs
push
sub
or
cmp
and
popa
imul
add
cmp
or
aam
jmp
pop
leave
inc
filds
cmp
or
and
aam
rcrl
push
int3
popf
pop
and
inc
or
inc
mov
das
scas
enter
and
pop
sbb
daa
loop
jg
xchg
mov
pop
dec
push
jle
jnp
arpl
cmp
dec
add
arpl
cmp
xchg
loopne
pop
loop
and
sbb
pop
lret
movsl
in
add
call
arpl
push
fadds
addl
cmp
push
inc
aad
jne
pop
adc
and
or
or
leave
test
or
stc
add
out
cmp
repnz
lock
and
adc
test
sbb
adc
aad
daa
xchg
xlat
push
insl
sub
inc
pop
enter
add
mov
xor
and
push
enter
out
or
and
and
shlb
push
sub
mov
jb
push
or
sahf
ljmp
sbb
ja
inc
shl
bound
dec
fs
adc
mov
or
add
cmp
sbb
inc
sti
push
add
mov
xchg
cmp
sub
andb
call
fdivs
mov
in
loope
add
add
xchg
sbb
push
push
push
pop
shll
xchg
movsl
or
mov
cmp
adc
sbb
nop
out
insb
fadd
cld
int
push
adc
cmpsl
enter
mov
test
pop
movl
lock
adc
stos
ret
scas
mov
shr
adc
sbb
in
mov
lds
movl
ret
adc
cmpsl
jo
test
add
addb
imul
add
add
sub
pop
adc
and
cmp
mov
lea
inc
xchg
push
adc
pop
shll
lret
add
popl
xchg
loop
mov
pop
mov
sar
mov
and
in
loopne,pt
sub
mov
pop
nop
sbb
or
daa
add
xchg
push
adc
adc
movsl
nop
add
ss
mov
inc
or
inc
push
cmp
add
mov
test
flds
mov
repz
xor
loop
add
adc
or
orb
pop
leave
rolb
in
push
mov
xchg
inc
dec
adc
mov
pop
add
xorb
xchg
pop
pop
adc
cmp
int
adc
sub
mov
mov
or
sbb
mov
or
mov
testl
aad
add
inc
mov
cmp
or
leave
push
pop
add
jge
sbb
add
cwtl
pushf
rolb
sbb
mov
lret
add
enter
push
push
and
or
or
dec
inc
lea
lea
lahf
sub
mov
and
sub
and
push
icebp
mov
loope
and
xor
add
xorb
mov
push
mov
pusha
addl
ljmp
sub
adc
xchg
sub
outsl
pop
pushf
push
cmpl
xor
jno
psrlw
add
mov
xchg
add
jae
ret
adc
adc
jecxz
rolb
sub
mov
les
push
sbb
push
and
inc
inc
xchg
imul
and
test
add
arpl
push
xorl
xchg
ds
mov
out
cmp
jo
push
mov
mov
cmp
sub
stc
or
andl
push
push
movsl
jbe
sub
add
push
insb
in
imul
adcl
mov
xchg
add
insb
pop
insl
repz
jge
cmpb
adc
sahf
sub
and
dec
imul
cmp
inc
test
sub
push
dec
cltd
lea
push
nop
jmp
and
pop
movsl
in
scas
ret
sarl
xchg
mov
ret
mov
fisubrs
mov
pop
adc
sub
aam
adc
imul
idivl
test
adc
add
repz
adc
gs
xor
and
das
shlb
add
jnp
mov
push
add
mov
aaa
sbb
or
pop
jl
out
loopne
cmp
ds
cmp
push
out
dec
xor
sub
jne
fldl
fnstcw
fdiv
fmull
mov
daa
xor
push
sbb
sub
fldenv
xchg
cmp
mov
push
jp
add
sahf
mov
xor
inc
dec
or
xchg
or
pop
imull
mov
adc
xchg
nop
cmpsb
sbb
sbb
leave
dec
push
push
inc
xor
add
lea
test
repnz
es
inc
movb
pop
adc
pop
lahf
gs
push
mov
jge
cmp
jne
push
enter
xchg
add
sub
sbbl
sbb
jb
pop
dec
push
adc
inc
lds
lods
cmp
je
nop
pop
enter
mov
push
rcrb
and
xchg
push
in
inc
push
arpl
xor
push
shl
fwait
add
cwtl
ficoml
loopne
xlat
xlat
add
push
mov
fisttpl
gs
rcrb
test
mov
push
nop
mov
dec
xchg
arpl
lock
popa
pop
iret
mov
imul
dec
je
call
add
pop
in
xchg
or
add
ljmp
unpckhps
movsb
push
dec
lahf
jge
loope
jno
jg
adc
into
xor
xor
mov
push
mov
mov
jle
out
shll
imulb
ret
incl
or
shr
and
cli
inc
jl
or
sbb
popa
sti
mov
adc
cmp
cmp
je
mov
mov
push
decl
inc
jmp
movb
mov
push
pop
cltd
neg
cmp
repnz
xlat
lds
jno
lret
adc
lret
sub
setnp
cmp
divl
loopne
mov
push
cs
cmpb
mov
dec
leave
lcall
cs
loop
inc
dec
ret
in
jmp
sbbl
cmp
inc
push
dec
inc
dec
cltd
xchg
cmpsl
jb
in
sub
xchg
cmpsl
jb
lock
pop
cltd
nop
cmpsl
jb
in
xor
pop
adc
into
cmp
mov
pop
and
daa
cmp
xor
fsubl
cmp
push
push
or
inc
lods
and
lret
stos
int3
cmp
shrb
mov
add
es
arpl
rolb
cmp
or
ret
mov
mov
les
aad
or
js
push
rcll
clc
aas
clc
pop
in
test
sti
and
cmp
mov
pop
push
and
sbbl
adc
nop
ss
mov
push
pop
mov
sub
jle
adc
cld
and
dec
or
jp
mov
adc
pop
shr
jb
js
sbb
adc
aaa
and
push
adc
addl
leave
mov
in
mov
outsl
adc
dec
sahf
xchg
mov
js
inc
fcmove
push
out
pop
push
pop
in
mov
subb
in
add
mov
in
mov
jne
and
and
or
jbe
enter
jns
and
push
xor
fcmovnb
pushf
push
sbb
fsubrs
add
or
imul
xor
pop
and
repnz
cmpsl
aaa
movsb
pushf
pop
pop
nop
push
addr16
push
jb
cmp
cmp
enter
js
add
sub
jge
nop
add
mov
push
and
mov
add
sbb
fsubs
and
je
sarb
adcl
and
cmp
mov
dec
add
adc
ja
xchg
popa
lds
clc
lock
es
xchg
push
ss
jo
rorl
inc
es
or
lahf
pop
sbb
fmuls
leave
mov
pop
dec
mov
lods
mov
push
dec
pop
call
das
xor
pop
pushf
jo
in
fcompl
test
ja
fmull
adc
sahf
add
sti
cld
shrb
lret
mov
ja
mov
fldl
into
mov
stos
mov
mov
pop
outsl
mov
cmpl
nop
push
sub
add
push
adc
into
ljmp
or
call
dec
and
sbbb
adc
pop
or
cs
jmp
fwait
xor
mov
lock
nop
in
ss
mov
cmp
in
jae
pop
ret
out
mov
jae
sbb
adc
ss
jb
fnstenv
sbb
loopne
out
mov
adc
lret
lret
fsubrl
push
add
mov
push
push
push
insb
mov
lret
std
sbb
cmpsl
in
push
imul
lods
dec
scas
lea
pop
imul
xchg
jl
fcoms
sbb
pop
push
adc
or
movsb
add
xor
test
xor
cmpb
dec
dec
pop
loopne
xor
xchg
mov
xchg
imul
test
daa
out
inc
mov
push
shlb
mov
fistpl
xor
jbe
xorb
inc
pusha
pusha
mov
cmp
jb
and
mov
add
inc
shll
aad
adc
fstl
test
fldt
fdivs
sub
ds
adc
pop
add
xor
sbb
mov
xor
test
and
sbb
sub
pop
sub
mov
add
inc
dec
and
stos
sbb
in
stos
xor
sub
lahf
xor
dec
add
dec
add
sub
pop
jo
jmp
test
mov
daa
fdivr
or
mov
frstor
mov
pop
jg
cmpsb
push
mov
sti
jecxz
adc
adc
pop
or
pop
rcrb
les
xor
mov
push
pop
jb
inc
sbb
pop
sub
scas
mov
dec
dec
and
add
pusha
jmp
jb
in
data16
and
add
add
push
pminub
jo
jo
out
hlt
xor
pop
adc
shlb
addr16
add
xchg
mov
or
out
imul
jo
decb
loopne
rolb
dec
cli
insl
dec
test
pop
ja
fmuls
fisubrl
xchg
mov
std
sbb
adc
ret
in
xchg
and
dec
and
movsl
or
and
clc
add
imul
hlt
pop
push
repz
fs
aam
mov
add
xor
movsl
push
shrb
cs
add
add
dec
add
sub
jp
pusha
repnz
aam
cld
sub
rcrl
movsb
mov
test
jnp
pop
cmp
loop
es
cli
jnp
lret
rclb
or
ss
push
and
daa
mov
sub
or
popl
lds
fs
pop
call
movb
jge
add
scas
cmc
jecxz
femms
jne
mov
sub
xchg
push
imul
sbb
orl
jl
cli
or
adc
pop
cmc
pop
out
es
add
xchg
shrl
pop
and
and
mov
cmpb
add
jne
js
sbb
mov
testb
int3
or
jecxz
sub
xor
adc
dec
shrb
ret
repnz
adc
aam
or
mov
push
addr16
sbb
rorl
xor
xchg
mov
pop
stos
inc
int3
daa
popa
adc
rcll
mov
and
dec
add
cmp
adc
push
mov
pusha
dec
mov
and
jg
dec
cmpsl
jne
or
daa
inc
mov
loopne
cltd
rolb
push
add
inc
loope
xchg
or
jo
aad
adc
sbb
shl
mov
sbb
stos
and
jl
xchg
cmp
push
mov
xchg
push
adcl
rcr
and
add
and
mov
incl
mov
or
dec
rolb
inc
mov
loopne
push
add
shr
enter
cmpsb
cmp
or
dec
and
rorb
pop
mov
add
dec
pop
pop
in
add
in
adc
shll
inc
add
pop
fildll
inc
pop
and
enter
adc
ret
push
push
inc
sub
xchg
inc
xor
outsb
dec
xchg
adc
xchg
and
mov
shlb
in
inc
add
pop
daa
out
mov
sub
int
test
push
cs
mov
adc
lret
rorl
cmp
scas
pop
mov
push
cmp
dec
cmp
push
inc
cmp
xor
ljmp
in
es
sbb
scas
adc
pop
and
imul
cmp
add
jnp
adc
sbb
jne
addb
mov
stc
add
xlat
xchg
mov
inc
mov
test
imul
sbb
pop
pusha
and
add
in
inc
push
dec
arpl
mov
cmpsl
inc
pop
push
push
push
inc
in
ljmp
sti
std
decl
push
jl
cmp
jne
adcb
or
adc
call
push
jle
pusha
dec
leave
add
push
jo
ret
or
dec
shll
xor
mov
push
and
adcl
orb
cmp
sbb
in
fs
rol
add
and
push
jo
xor
shrb
pop
xor
test
pop
in
rcrl
fsts
mov
movsb
hlt
dec
inc
push
in
xchg
loope
mov
dec
sbb
mov
inc
dec
in
or
sub
lahf
movl
pop
adc
call
mov
push
sbb
add
in
dec
add
loope
repnz
lods
and
repnz
pusha
push
in
sbb
popa
push
jae
xor
adc
lock
shll
pop
pop
test
ret
lock
sub
aam
js
es
or
and
aad
or
sub
push
pop
add
or
pop
or
inc
pop
fsubs
mov
test
xchg
push
fbld
dec
xchg
and
cmp
js
div
out
push
rcll
push
lods
xchg
daa
adc
lock
adc
test
adc
mov
sahf
loop
adc
nop
inc
test
push
lret
adcb
mov
xchg
adc
or
mov
lret
and
repnz
mov
mov
in
dec
mov
lea
inc
iret
cmp
add
push
scas
inc
cmp
inc
ficoms
mov
adc
or
popf
movsl
es
pop
sbb
sub
in
xchg
mov
or
mov
adc
lods
je
insb
hlt
leave
jne
or
mov
xor
and
and
push
mov
lret
cmp
xchg
jo
xor
out
push
add
fmull
jnp
push
adc
jmp
mov
push
arpl
daa
push
lods
movsb
aaa
popl
and
dec
fiaddl
or
or
jo
call
daa
push
push
push
mov
jp
add
loope
or
push
xor
jmp
nop
cmp
jne
js
cmp
mov
adc
push
clc
pusha
ljmp
js
dec
popa
popa
and
pop
inc
stos
test
add
mov
jne
pusha
ja
lds
addl
pop
and
or
sbb
add
movb
push
dec
cmp
pop
mov
cmp
ljmp
cmc
push
cmp
add
addl
ret
add
jb
dec
aam
stos
sub
sub
decb
pop
pop
movsb
ja
mov
xor
sub
testb
jae
mov
add
call
std
or
or
mov
jmp
sbb
lods
jg
cmpsb
hlt
std
dec
jnp
mov
shr
popa
in
popa
popf
jne
fwait
add
idiv
push
fsubr
add
ret
sbb
test
orb
sbb
sub
add
jecxz
jmp
push
sub
inc
into
xchg
shr
pop
adc
outsb
push
push
sub
or
add
mov
es
sbbl
nop
orl
setns
cmp
push
sbb
and
lods
paddusb
mov
push
mov
out
push
roll
icebp
ds
scas
pusha
push
push
insl
add
orb
bound
push
add
adc
sbb
int
pop
add
mov
dec
js
mov
xchg
sub
cltd
add
cwtl
sbb
scas
sub
sbb
sti
inc
mov
es
xchg
lock
imul
or
roll
xor
add
bound
add
imul
lea
imul
fidivs
or
or
add
adc
mov
mov
pop
or
add
inc
mov
add
into
and
ds
or
rcl
and
dec
lret
or
or
js
or
and
sbb
xchg
mov
sub
je
pop
or
out
adcb
jb
ror
xchg
xor
sub
jae
xor
addl
lods
xor
sub
stc
dec
xchg
inc
dec
inc
xchg
add
fimull
xor
and
dec
sub
pop
adc
xchg
test
dec
add
mov
in
movl
xchg
icebp
sbb
lods
or
int
or
add
jge
sub
gs
pusha
mov
adc
sub
and
fimuls
mov
mov
mov
cltd
add
xor
add
dec
pop
addl
lea
jecxz
push
add
jge
cmp
jecxz
or
inc
fdiv
enter
es
sbb
fildll
pop
loope
arpl
js
in
das
lods
mov
jmp
push
mov
movsbl
push
adc
sub
shll
mov
or
xor
mov
dec
dec
xlat
push
xor
xchg
inc
adc
or
cltd
sbb
inc
xorb
pop
adcb
jne
sbb
jnp
and
rcl
adc
or
mov
test
or
flds
add
test
addb
and
pop
inc
repz
aad
mov
cmp
insl
sub
fs
dec
cmovo
mov
clc
icebp
cmp
dec
adc
inc
mov
jno
fs
cmp
mov
aaa
add
dec
or
push
sbb
movsl
cmp
xchg
mov
lret
outsb
add
mov
adc
ret
sti
xor
and
pop
cmpsb
ja
lock
push
cmp
ds
and
xor
sbb
fsub
mov
sbb
lock
and
lods
add
xchg
pcmpeqd
cmp
push
in
push
push
and
pop
or
add
dec
cmpsl
or
test
aad
add
call
sbb
add
sbb
add
push
inc
sbb
xor
and
es
mov
push
push
jbe
push
pop
xchg
push
or
movb
mov
mov
push
leave
andl
je
push
jo
int
addr16
add
push
cmp
test
sbb
adcl
and
push
mov
aaa
jmp
ret
add
xor
adc
jmp
dec
inc
push
cmp
xchg
sub
addr16
or
pop
sbb
dec
ret
ret
fs
out
push
add
pop
sbb
add
xchg
lock
mov
orl
out
jo
nop
adc
movsb
and
and
mov
fisubl
std
and
dec
popa
add
mov
cmpsl
cmp
and
cmp
sbb
and
stos
test
dec
fstp
dec
and
sub
push
imul
push
xlat
imul
sarb
mov
mov
mov
ja
jns
xchg
flds
sub
cmc
enter
sbb
xchg
int
sbb
push
cmpsb
iret
jne
or
mov
cmpsb
in
xchg
sub
je
mov
icebp
sub
lret
or
leave
mov
sub
sbb
add
adc
lea
mov
daa
mov
sbb
fwait
sub
pop
daa
add
lock
pop
jnp
add
mov
ret
or
fs
test
xchg
add
and
push
pop
adc
inc
or
test
sub
enter
mov
leave
dec
sub
dec
imul
pop
fwait
je,pt
inc
shll
sub
adc
inc
nop
addl
adc
lods
pop
sub
push
add
loopne
loope
cltd
int3
shlb
mov
adc
test
add
mov
sbb
fwait
lock
nop
int
sub
or
mov
mov
and
fcoml
daa
and
int3
orb
and
fst
sbb
push
sbb
pop
add
add
jne
bound
outsb
mov
dec
fs
push
and
int3
pop
test
xchg
adc
enter
dec
das
popf
xchg
shll
push
js
pop
pop
mov
cmp
test
xor
ror
inc
fucomp
jecxz
add
scas
xchg
adc
pop
sbb
aam
bound
lods
cld
dec
adcb
mov
add
add
push
das
and
int3
sub
xchg
mov
and
loope
add
mov
imul
loope
add
in
pop
in
jae
in
lcall
xchg
sub
push
incl
xor
sbb
mov
test
xabort
divl
repnz
cmp
pop
push
aam
mov
icebp
sbb
jbe
andb
push
aad
push
mov
out
or
and
push
pop
and
rclb
add
ljmp
xchg
push
cwtl
insb
or
ds
dec
xchg
sbb
fimull
stc
pop
divb
clc
fmulp
inc
and
lret
jo
or
pop
add
jg
sbb
cmp
pop
mov
inc
jmp
mov
daa
mov
cli
sub
mov
mov
lcall
cmp
mov
dec
pop
psubw
or
ja
movsl
popa
in
sarb
dec
or
pop
aaa
dec
sub
jmp
clc
pop
and
rsqrtps
inc
in
sub
loope
inc
cmp
cmp
mov
test
test
jle
push
xchg
icebp
push
or
into
mov
stos
inc
cmp
int
cmpsl
xchg
cmp
mull
and
jbe
and
add
fsubs
inc
loop
xor
into
mov
adc
incb
jbe
inc
cmp
push
adc
push
mov
rcrl
lahf
divb
push
ljmp
jo
jno
loopne
or
xor
jns
mov
xorb
pop
or
push
leave
mov
xor
jnp
movsl
push
mov
push
and
add
std
ret
sbb
mov
cmp
adc
insb
jne
test
fcmovnbe
rorb
das
dec
test
xchg
rolb
enter
es
fildl
hlt
add
andl
testb
and
ja
inc
add
dec
fmuls
adc
sbb
and
mov
push
sarl
std
mov
adc
sub
jp
pop
inc
inc
xchg
mov
adc
mov
aaa
sub
push
sub
adcl
movsb
int
adc
xchg
rcl
pop
push
dec
add
mov
dec
mov
fstpl
test
cmp
push
in
ret
push
les
test
pop
inc
xor
addr16
jl
xor
mov
sbb
xchg
pop
shrb
mov
xor
scas
popa
pop
movsb
fmull
test
mov
mov
and
mov
xchg
fstpl
nop
adc
xorl
out
shrl
outsl
push
out
cmpsb
jno
xor
cmpl
rorb
xchg
mov
xchg
or
fdivl
inc
lea
cmp
in
fisttpll
push
je
sub
lods
dec
mov
imul
jbe
testl
shrb
movsl
pop
arpl
cmpl
lahf
orb
pushl
filds
loopne
inc
ret
addr16
inc
or
repz
or
and
test
inc
insl
add
dec
clc
and
jae
inc
outsl
shl
scas
lods
push
inc
rcrl
lea
sub
inc
add
aam
je
ret
add
jae
inc
jmp
pop
mov
lea
push
xchg
mov
push
insl
sub
add
add
xor
call
daa
xor
leave
adc
xchg
xchg
dec
in
xchg
push
dec
adc
in
xchg
dec
or
add
fisttpll
pop
pop
adc
adc
lock
out
lahf
outsl
dec
push
push
stos
aam
popl
sub
iret
sbb
mov
mov
jns
cmpsl
mov
imul
sbb
mov
addr16
adc
sbb
pop
inc
push
sub
lods
dec
adc
repz
call
lds
lret
call
and
mov
jno
mov
push
xor
fs
iret
test
repnz
xor
mov
stos
push
insl
aad
adc
cmpsl
or
rorl
adc
pop
ret
jbe
xlat
and
popa
and
jo
test
adc
lds
int3
dec
push
fisubs
mov
inc
je
adc
pop
adc
xchg
push
sbb
push
adc
fistps
add
push
inc
fdivrp
imul
jl
pushl
dec
rcl
mov
xor
lock
jnp
shrb
mov
outsl
inc
lods
mov
mov
pushf
inc
or
shr
or
push
push
out
push
push
inc
sbb
or
pop
in
setge
js
bound
je
scas
int
sbb
sbb
jo
add
sbb
and
shlb
dec
adc
sbb
ret
test
enter
inc
xchg
int3
and
and
sbb
sbb
or
push
add
inc
stos
movsl
inc
xor
ret
push
arpl
mov
cmp
movsl
add
or
jle
push
or
push
and
xor
xchg
ja
adc
xchg
or
outsl
mov
xchg
aas
lods
sar
cmpsl
movsl
inc
and
push
movsb
inc
div
dec
movsl
repnz
out
push
or
in
in
fcoml
jmp
jmp
in
and
in
add
in
inc
mov
and
stos
adc
test
dec
adc
sub
or
sub
cmpxchg
sub
pop
add
pop
arpl
sub
inc
sbb
xchg
f2xm1
inc
mov
mov
lock
adc
cmpsb
add
movb
faddl
and
or
add
test
inc
sub
inc
out
and
sub
jbe
sbb
mov
dec
movsb
imul
into
pop
jmp
outsl
imul
jae
or
mov
add
inc
adc
ljmp
push
jle
or
in
loop
add
enter
iret
jbe
mov
sbb
insl
or
mov
loopne
or
rorb
mov
fnsave
pusha
mov
adc
add
add
add
outsb
xchg
imul
lcall
and
mov
pusha
jecxz
popf
sub
push
xchg
push
mull
add
lea
popa
mov
adc
xor
jo
fwait
push
sbb
repz
scas
jmp
out
cmp
jb
outsl
dec
fcmovnb
test
sub
inc
xor
push
fisttpl
sub
mov
and
addb
aaa
add
pop
add
and
lret
sbb
sbb
sub
enter
xor
je
nop
in
fwait
daa
cld
gs
push
lea
mov
shll
out
mov
mov
and
or
pop
xchg
test
xchg
cmp
cltd
push
lret
leave
leave
leave
int3
add
add
mov
rcll
sub
sbb
and
call
insb
pop
mov
xchg
xor
adc
mov
adc
xorl
jne
pop
sarl
xor
or
mov
xchg
mov
adc
push
and
pop
int3
adcl
dec
or
orl
test
pop
adc
add
and
or
push
inc
and
xchg
inc
loope
xor
add
cli
enter
stos
xor
lock
push
lea
pusha
je
and
cmpsl
mov
push
clc
icebp
adc
mov
xchg
into
xchg
fsubr
sbb
xchg
orb
add
lds
ja
and
push
push
or
pusha
sbb
rol
cmp
das
shlb
insb
xor
cmp
lret
or
xor
mov
fildl
or
or
loope
rolb
xchg
fxtract
lea
xlat
xor
add
inc
pop
into
inc
pop
mov
cmp
loopne
mov
and
xor
das
pop
xorb
out
cmc
fmuls
xchg
jb
push
pop
or
rcrl
pop
or
movsl
popa
std
ss
inc
cs
mov
enter
xchg
push
xor
push
and
fwait
ret
sub
sahf
push
sbb
cmp
test
ja
push
adc
inc
ficoml
dec
addr16
mov
sbb
adc
aas
mov
test
mov
clc
xor
jne
fadds
jge
mov
inc
or
jmp
inc
lea
pop
mov
sahf
inc
pusha
cli
mov
pop
mov
jae
xor
in
dec
cmp
mov
adc
jo
adc
or
frstor
mov
mov
jle
mov
andl
pushf
add
jmp
add
sub
sbb
sub
push
cltd
lahf
loop
or
lcall
dec
add
add
fcompl
aas
dec
sbbl
push
psubusb
faddp
xor
not
adc
jne
shlb
sbb
push
push
clc
xchg
cmc
xchg
sbb
or
or
lahf
inc
imul
or
or
in
push
cmp
xadd
push
sbb
lcall
lods
push
adcl
inc
addr16
fcomps
adc
inc
add
mov
psrlq
adc
inc
add
or
mov
or
les
or
pop
jno
ss
mov
mov
loop
adc
stos
dec
jns
pop
rcrl
call
adc
hlt
add
adc
icebp
mov
pop
adc
sub
add
sbb
fcmovbe
sub
inc
add
dec
les
add
cs
jle
add
sub
sub
les
mov
sbb
sbb
jnp
push
push
mov
push
testb
mov
outsl
cmpl
xor
dec
jl
xchg
pop
data16
cwtl
push
sbb
xchg
or
test
fscale
xchg
push
jmp
out
cmp
jne
ljmp
int
jmp
subl
adc
test
addb
push
mov
call
and
jp
adc
sbb
divb
pop
jo
add
ds
pop
push
mulb
shlb
inc
or
stos
pop
out
cmpsl
pusha
in
sbb
add
dec
adc
in
jmp
dec
fldcw
jmp
mov
push
dec
mov
dec
push
push
push
fiaddl
add
push
push
push
push
push
call
cmp
inc
pop
adc
ja
sbb
add
sbb
nop
callw
add
bound
cmp
loop
ret
jmp
xchg
xor
push
cmp
jae
scas
jmp
add
pushf
mov
stos
sub
cmp
jo
test
sbbl
cmp
popf
or
push
jg
add
insb
cmp
int3
sub
and
notl
pop
push
mov
add
xlat
mov
insl
or
and
daa
or
sti
mov
mov
push
push
hlt
sub
stc
push
sub
push
mov
sub
mov
jmp
add
add
push
push
push
sub
and
add
mov
xor
js
imul
enter
not
nop
dec
in
push
or
insl
jbe
imul
loope
mov
fisttpll
fsubrs
pop
faddp
dec
add
mov
jg
sbb
xor
cli
mov
adc
mulb
mov
inc
cld
cmp
out
cmp
cmp
jp
adc
dec
mov
xchg
cmp
push
cwtl
jne
adc
push
dec
daa
mov
push
cwtl
dec
cmp
pop
mov
dec
push
push
add
out
mov
shrb
iret
movsl
mov
mov
cmp
sub
sbb
cmp
sub
adc
in
add
inc
cs
jg
add
xor
add
ja
mov
or
mov
test
push
hlt
popf
inc
mull
hlt
or
cmp
xor
jbe
inc
inc
and
inc
sbb
ret
cmp
stc
das
int3
std
inc
and
inc
sbb
add
loopne
pop
cmp
add
dec
add
pop
pop
dec
mov
mov
movsl
movsw
push
sbb
sbb
movsb
int
or
incl
jecxz
push
or
mov
mov
shr
mov
std
pop
inc
mov
adc
movb
push
pop
jg
cmpb
dec
xor
out
movsb
in
in
push
mov
and
add
cmp
mov
xchg
sarb
xchg
push
adc
and
push
cld
ret
xchg
je
push
push
sbb
and
sbb
lret
mov
mov
imulb
pop
lods
dec
or
mov
or
or
push
xchg
jne
jle
dec
jae
adc
xor
add
ror
adc
jle
mov
into
leave
jg
or
push
jl
or
push
cmp
xlat
sbb
sbb
fnstsw
arpl
push
mov
xor
rorl
sbb
push
cwtl
es
dec
xor
inc
cmp
mov
stos
mov
shlb
mov
mov
test
decb
sarb
mov
rorb
or
loop
mov
push
dec
inc
pop
inc
testb
mov
lds
adc
mov
mov
cmp
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
fwait
fwait
fwait
fwait
pop
pop
jmp
and
or
jmp
sub
and
fcom
lea
lods
and
push
mulb
lea
call
sahf
out
sahf
iret
xlat
out
idivl
repz
pop
dec
unpcklps
repz
repz
and
sub
iret
aaa
cmp
inc
dec
push
cmp
repz
pop
pop
fs
jae
jge
mov
mov
add
in
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
adc
in
and
and
fisttpl
sbb
xor
sbb
sbb
or
push
sti
les
xor
pop
pop
jmp
sahf
in
sbbb
movsl
jns
add
xor
das
sbb
cmpsb
sbb
and
movsb
sub
dec
and
adc
cs
dec
into
and
push
cs
xchg
lods
sbb
push
pop
and
insl
and
add
stc
jns
lods
clc
push
aam
adc
fucom
add
push
test
inc
mov
test
dec
insb
sbb
adc
scas
lcall
and
inc
test
xor
pop
jne
mov
inc
sub
push
mov
ret
mov
add
out
pop
or
add
sbb
push
jmp
lret
rorb
add
mov
rclb
test
loope
pop
dec
cmp
pop
add
int
lcall
sbb
push
pop
or
lock
xor
cmp
dec
inc
rolb
xor
mov
xor
and
test
fisubrl
xchg
add
push
push
ret
mov
add
push
arpl
dec
insb
sbb
mov
cmpsl
sub
lods
pop
mov
push
std
pop
ss
adc
jne
or
push
push
add
cmpsl
mov
adc
test
movsb
out
push
push
push
pop
loopne
or
ret
cmp
xor
shl
or
inc
and
jmp
mov
jne
and
dec
cmpsb
lock
jne
jno
aas
sub
xorb
add
dec
pop
mov
or
mov
and
sub
mov
adc
push
sti
inc
aas
sub
xor
mov
je
dec
xchg
xchg
lret
push
clc
lock
or
ss
je
xchg
clc
xchg
ror
in
push
xor
dec
push
adc
add
cmp
pop
sub
mov
sbb
imul
pop
inc
add
loop
dec
adc
and
add
pop
nop
push
shl
rcrl
mov
mov
add
xor
repz
sbb
sarl
mov
jp
jle
addb
inc
inc
push
popl
pop
dec
ds
mov
shll
clc
mov
mov
mov
and
ss
mov
xchg
xor
or
add
pop
jp
pop
mov
mov
add
xor
pop
or
loop
sbb
adc
pop
test
arpl
push
and
mov
or
push
outsb
add
mov
push
mov
test
ret
dec
or
inc
repnz
aas
jp
mov
pop
or
push
cwtl
or
test
test
jne
push
cmp
nop
jno
rorb
add
mov
pop
test
sub
and
jp
mov
xor
pop
call
add
out
adc
in
sub
add
add
jo
pop
rclb
js
pusha
scas
pop
push
loop
xlat
sub
jecxz
out
inc
or
lods
lods
rcrl
or
jo
sub
shrl
cmp
lret
popa
or
into
xor
mov
mov
fadd
push
negl
jle
dec
pop
mov
mov
cld
xchg
pop
addb
lahf
daa
je
nop
xor
sub
jmp
pop
sbb
or
push
sbb
movsb
daa
std
or
push
xchg
mov
rorl
pop
inc
push
sbb
pushf
xor
xchg
pcmpgtw
iret
sbb
pop
or
mov
sub
sub
xbegin
add
repz
lods
addl
movl
sbb
fdivrl
xor
icebp
adc
dec
mov
addb
xchg
popa
add
cvtps2pi
mov
outsb
xchg
or
sbb
xchg
daa
or
or
inc
fcomip
add
cmp
cmp
inc
sub
jmp
mov
lds
pop
sub
sub
xlat
dec
push
xlat
and
or
aas
aad
or
nop
push
inc
add
push
test
outsl
outsl
and
je
mov
push
sub
jne
aad
and
je
or
pop
sahf
arpl
inc
add
pop
rorb
int
adc
sbb
leave
push
movsb
ficoml
popf
pop
pop
aad
jo
jns
cmp
cmp
cmp
add
sbb
dec
pop
pop
popa
adc
test
fisttps
mov
or
jle
mov
addr16
inc
int3
sub
push
fcomp
mov
shlb
lea
lea
cmp
jae
sub
pushf
les
test
mov
pop
movsb
xchg
rcrl
inc
inc
std
dec
or
cmpb
cmp
sub
movsbl
mov
inc
fadds
cmp
jbe
enter
push
jcxz
xor
push
push
push
sub
in
inc
pop
dec
cs
sti
andb
adc
xor
shl
inc
add
mov
fs
xor
cmpl
enter
int3
ror
and
and
pop
fcomp
testb
mov
repnz
call
pop
in
lahf
lock
jg
idivb
pop
pusha
cld
pop
add
lret
and
push
or
dec
gs
adc
sbb
add
mov
popf
push
push
jl
push
flds
and
dec
push
inc
push
imul
inc
cmp
add
lea
push
mov
movsl
lods
and
stc
xchg
pop
aaa
sub
jbe
addb
or
push
mov
movsb
dec
push
cmp
jl
sub
xchg
addr16
lea
sbb
push
add
int3
or
imul
push
stos
adc
test
out
mov
sbb
sbb
scas
and
sti
lods
sub
ret
push
dec
pop
inc
and
sbb
test
push
pop
jl
dec
loopne
fldpi
or
push
jbe
hlt
mov
dec
xchg
sahf
mov
pop
mov
and
pop
jne
xchg
rclb
dec
in
lcall
push
xlat
loope
mov
in
roll
int3
dec
sub
xor
das
sub
mov
js
or
mov
sbb
push
fwait
mov
xor
rorb
je
cltd
mov
and
pop
add
jns
arpl
leave
daa
rcl
jne
or
xchg
decb
pop
cmp
jge
inc
push
hlt
ficoml
adc
cmp
jl
cmp
jle
ret
adc
add
inc
sub
in
imull
shl
js
roll
or
popa
sbb
inc
hlt
mov
incb
pop
add
push
sub
ds
cmpb
nop
push
pop
loope
std
loop
cmpb
jne
mov
js
add
pop
mov
adc
inc
sti
push
popa
mov
push
push
cmp
repnz
push
and
sbb
cmp
adc
mov
or
out
adc
and
pop
fwait
jne
sti
aaa
into
xchg
movsl
nop
fcoml
jg
lock
call
or
add
inc
pop
mov
lock
add
lret
lret
leave
sbb
push
ja
hlt
mov
inc
test
fwait
sub
add
mov
rclb
mov
xor
imul
js
adc
loope
cmp
cwtl
movb
sub
xchg
dec
lcall
fcomps
jl
ss
imul
jge
push
rol
data16
pusha
outsb
jle
inc
mov
and
mov
orl
or
push
xor
clc
cmp
je
xor
jne
push
mov
push
clc
adc
fistl
insb
imulb
xchg
dec
stc
mov
push
cmpb
dec
movsl
or
lods
inc
mov
int3
inc
cmp
inc
cmp
adcb
inc
icebp
jb
mov
ss
push
cmpsb
jne
inc
ret
mov
popa
sbb
push
les
adc
mov
jg
dec
stos
or
movsb
or
sub
loop
push
adc
jne
cmpb
inc
xor
test
push
push
ret
sahf
mov
push
adcl
mov
or
leave
mov
jnp
add
outsl
loope
jno
or
add
mov
add
push
xor
mov
fdivl
push
scas
cltd
or
mov
mov
push
movsl
xor
scas
mov
add
push
fists
lea
into
outsl
xchg
jmp
sbb
adc
shr
sbb
cmp
dec
add
inc
push
pushl
push
push
jno
inc
or
or
outsl
jae
inc
pop
add
test
in
mov
insb
add
push
stc
inc
lret
inc
sub
jle
mov
incb
std
decl
mov
aad
and
push
sar
xor
cwtl
test
dec
mov
push
or
lea
mov
inc
mov
mov
mov
popf
sub
add
inc
sub
adc
sub
outsb
pop
negl
add
cmp
push
dec
sub
mov
or
mov
mov
inc
inc
cwtl
mov
popa
and
xchg
adc
mov
or
popa
or
jmp
mov
xor
sbb
popa
pop
dec
jmp
ret
dec
ja
into
mov
aam
jl
jbe
pop
inc
sub
ret
cmp
add
or
jbe
test
testb
push
clc
pop
push
add
inc
add
aad
test
add
cs
mov
js
jmp
adc
lcall
jg
push
xor
shl
push
dec
add
add
adc
scas
push
test
repnz
xor
subl
rclb
lret
jo
loopne
std
dec
ss
test
push
in
leave
dec
push
xchg
and
or
pop
sbb
test
and
sub
leave
or
pop
or
push
outsb
push
add
push
stos
cmp
add
mov
pause
adc
sub
push
add
stos
aad
adc
and
inc
lahf
xor
ds
insl
xor
js
push
das
xorl
out
push
lret
sub
ficoml
test
pop
mov
push
or
add
push
arpl
push
lock
push
push
sbb
add
jne
lock
dec
lock
into
xor
mov
fwait
or
notl
push
or
leave
out
les
xor
push
enter
adcb
pop
mov
sbb
outsl
inc
push
push
add
push
mov
dec
push
lock
clc
lea
cmovp
inc
push
rorl
mov
push
mov
pop
hlt
xlat
xchg
nop
xchg
hlt
pop
hlt
jl
cmp
leave
push
ret
push
in
adcl
mov
push
loop
dec
loope
mov
loope
and
add
insl
jb
mov
mov
push
icebp
es
stc
pop
stos
dec
add
sub
movl
pop
inc
call
push
jnp
rcr
clc
clc
mov
cmp
and
xor
lea
dec
mov
lea
jecxz
and
and
je
sbb
pushl
inc
sub
lret
push
push
push
or
push
out
mov
fidivrs
add
adc
pop
and
lahf
push
pop
inc
cld
jbe
ljmp
mov
fldl
dec
add
cmpsb
iret
fsubrl
mov
sub
add
stos
mov
xor
mov
fimuls
cld
mov
push
enter
pop
push
int3
fwait
shlb
in
dec
add
xlat
jno
lahf
mov
cmp
hlt
mov
shr
clc
sbb
push
dec
add
hlt
add
mov
mov
push
into
mov
sub
mov
inc
or
fisttpl
mov
mov
data16
sbb
sarb
adc
and
call
scas
and
movsl
fiadds
aam
add
dec
out
push
fnstsw
sbb
fucomp
jae
rcll
call
push
jmp
stos
and
sbb
pop
xchg
pop
push
push
adc
push
or
dec
mov
mov
nop
mov
hlt
xchg
and
rcl
push
add
cmp
add
sti
mov
les
cs
and
movsl
mov
add
rcrl
stos
lcall
testb
jo
add
aaa
add
popa
push
cld
mov
fld1
sbb
movsb
pop
inc
pop
sbb
add
push
or
in
mov
jb
adc
or
lock
cmp
add
ja
lds
or
or
lods
adc
mulb
aam
mov
dec
stos
cmp
icebp
lea
sub
inc
test
or
add
cs
das
xchg
lret
push
iret
add
xchg
movb
jne
movsb
jno
push
stos
rcl
movsb
push
in
enter
std
pop
pusha
mov
loope
inc
lock
dec
loopne
adc
fstpt
add
insb
test
mov
or
add
fcmovnu
add
xchg
test
ss
dec
push
mov
cmpsb
sub
or
pusha
or
push
jle
mov
pop
sbb
les
inc
pop
fst
outsb
test
xchg
rcrb
int
inc
adc
jge
cmp
cwtl
dec
nop
xchg
push
out
pop
inc
cli
adc
push
fmuls
or
test
cvtpi2ps
mov
add
and
mov
inc
xor
inc
ret
mov
or
adc
cltd
fcoms
cmp
sbb
aas
adc
cmp
je
xor
push
or
xor
inc
jne
pop
leave
addb
mov
cmp
mov
addb
inc
pop
xchg
sbb
sub
aaa
imul
fdivs
adc
sbb
push
fcoml
add
xchg
adc
mov
cmp
and
enter
xchg
push
inc
push
and
sub
jb
aaa
jg
and
sbb
ja
outsb
popa
mov
jbe
push
xor
test
xchg
push
push
test
andl
aas
or
push
jo
add
std
adc
in
jns
aam
rcll
push
push
push
fldl
or
mov
mov
sbb
dec
add
mov
int
xchg
or
ret
cmpb
ret
pop
pop
sbb
add
mov
inc
subb
popa
pusha
xchg
mov
and
pop
pushl
cli
lea
push
pop
mov
sub
mov
cwtl
adc
push
call
imul
xchg
dec
ret
popf
jmp
push
or
jg
je
test
lods
add
pop
push
add
xchg
jg
inc
testl
shlb
sbb
dec
nop
jo
shlb
jl
inc
pushf
dec
cmp
or
lods
in
ljmp
jno
mov
inc
subl
push
call
call
bound
int
and
xchg
dec
push
pop
movsl
imul
out
or
add
call
or
arpl
adc
add
or
adc
lret
dec
aas
lods
add
fstl
push
xlat
mov
aaa
loop
xor
in
xchg
pusha
ret
bswap
aas
das
movsb
imul
jb
and
xchg
inc
push
bound
rcrb
mov
scas
xchg
test
xchg
arpl
jnp
sub
xchg
loopne
and
stos
pop
aaa
ss
xor
mov
lcall
mov
sub
cmpsl
jb
dec
ret
mov
inc
es
xor
pop
adc
xor
lods
pop
xlat
sbb
push
es
or
adc
cltd
xchg
dec
in
pop
jno
call
dec
or
sbb
sbb
out
add
add
pop
add
fs
iret
cmp
popa
or
cmp
and
xlat
adc
in
jl
addr16
or
or
in
test
add
inc
arpl
jbe
sub
int3
inc
jno
sbb
jo
push
fimuls
sbb
sti
lret
mov
jp
push
and
pusha
test
lcall
lock
jge
dec
xchg
push
sub
pop
mov
jg
ret
inc
add
mov
shr
jecxz
int
cmp
gs
mov
rorb
outsl
add
mov
subl
xchg
push
dec
xchg
push
add
inc
xchg
test
aad
repz
push
mov
test
jle
push
movb
aad
ret
pop
xchg
adc
mov
fsts
mov
push
xchg
xchg
shrb
lock
add
sbb
xchg
sbb
aas
sbb
bound
adc
lcall
push
out
sbb
sbbb
mov
fsts
adc
jnp
fwait
mov
hlt
push
sbb
push
test
pushf
mov
xchg
add
or
movsb
movsl
pusha
jb
fs
ficoml
xchg
pop
lret
sbb
js
ja
loopne
inc
push
xchg
mov
mov
js
nop
or
ljmp
push
je
js
cmpb
insl
es
les
sub
lods
or
lret
jp
and
aam
add
pop
cmpsl
xlat
es
sbb
xlat
mov
push
mov
sbb
repnz
pushl
dec
and
and
js
pop
pop
xchg
jae
nop
xchg
scas
xor
sbb
ljmp
test
inc
fildll
xchg
ret
add
sbb
mov
jge
add
add
add
xor
sahf
test
adc
insl
je
push
push
add
add
mov
addb
fsubrs
lcall
mov
push
or
in
nop
pop
adc
cmp
rorb
pop
cmc
mov
test
icebp
adc
fmull
fistl
sub
push
push
js
das
loop
jmp
sub
addr16
mov
mov
xchg
inc
movb
fcoml
mov
or
out
mov
fbld
or
push
adc
add
lret
inc
and
adc
push
imul
popa
loopne
movb
pop
jne
addr16
cmp
int3
cmp
pusha
xchg
push
mov
mov
imul
add
rcll
adc
insb
mov
push
lret
mov
mov
pop
sub
lock
push
adc
mov
adc
adc
lret
call
pop
jno
add
pop
fistl
or
jne
sbb
inc
std
and
sub
xor
cmp
dec
xchg
adc
addb
dec
and
mov
push
dec
ss
clc
and
mov
adc
pusha
inc
xchg
test
mov
adc
clc
dec
das
js
out
insl
xor
shl
fnsave
pop
xchg
lock
lods
imul
loope
loopne
mov
pop
push
lahf
gs
xchg
icebp
jmp
cmp
sub
mov
xchg
out
sbb
sub
ret
adc
or
pop
orl
pop
pop
add
fwait
pushf
pop
push
in
adc
adc
push
addl
cmp
fidivs
push
or
out
xchg
adcl
add
nop
push
push
fadds
mov
mov
inc
loopne
movsb
dec
insb
rcr
rorb
aas
or
mov
enter
cli
in
and
mov
adcb
lcall
and
mov
movsl
call
imul
call
jne
xor
push
fucomp
adc
outsl
fwait
mov
sbb
test
inc
push
push
sbb
mov
sub
lods
mov
jle
into
push
xchg
cmp
test
mov
es
outsb
or
adc
xor
add
sbb
imul
fs
add
inc
sbb
add
or
push
je
push
push
loopne
pushf
inc
cmp
mov
or
rcll
js
imulb
inc
xchg
cmp
subl
dec
push
adc
sub
je
popf
lods
popa
rorl
sub
jnp
sub
leave
lds
inc
in
and
sbb
xlat
dec
sub
bound
inc
hlt
dec
jge
popf
pop
add
addb
sbb
mov
cmpsb
sahf
hlt
and
rcrb
mov
es
je
outsb
mov
loopne
add
movzbl
das
dec
mov
dec
sbb
add
add
mov
ss
lods
pop
test
sub
sub
adc
or
cmc
or
mov
aas
loopne
in
dec
add
sarl
xor
loopne
or
clc
movsb
mov
sbb
inc
push
pop
push
fmuls
add
sub
xchg
dec
xor
xorb
push
enter
cmp
pop
xor
leave
filds
lock
pop
inc
or
inc
lods
and
mov
cld
add
mov
dec
inc
shlb
xlat
hlt
or
lds
sbb
xor
add
hlt
dec
outsl
xchg
shlb
jge
and
test
mov
mov
or
je
idiv
xor
nop
sub
jne
mov
adcb
xchg
pop
fs
jo
cmpsb
ss
mov
add
add
pusha
xlat
test
xor
push
aam
add
inc
sub
adc
sub
push
sbb
fiaddl
decb
mov
stos
adc
adc
aaa
add
sbb
push
sbb
mov
out
inc
in
xor
mov
mov
add
mov
cmpsl
out
inc
lock
sub
movsl
popa
or
xor
adcb
add
inc
mov
jne
pop
ficomps
fistl
pushf
inc
lock
pop
or
mov
aam
mov
lahf
shl
imul
outsl
add
in
adc
sbb
sbb
cld
pusha
mov
jno
or
shlb
adc
jp
cmp
xchg
xor
incl
test
jnp
mov
mov
divb
inc
adc
push
pusha
mov
lods
push
sbb
lods
cmp
repnz
mov
rcl
pusha
in
movsl
add
dec
adc
dec
divb
loopne
jecxz
sar
xor
or
mov
push
int3
out
and
jnp
xor
daa
in
in
pop
inc
mov
stos
notl
jbe
sub
mov
es
sbb
mov
scas
adc
mov
movlps
mov
shrb
xor
cmp
adc
mov
pop
pusha
xor
and
fildll
jns
dec
or
xchg
add
mov
push
lea
jp
test
pop
xorl
aaa
sub
or
sub
divb
cwtl
dec
mov
jnp
xor
aas
es
sub
mulb
inc
mov
xchg
pushl
sbb
inc
push
jb
shlb
sbb
dec
les
test
mov
out
push
out
jecxz
es
loopne
add
inc
add
mov
mov
insl
sti
lea
loopne
nop
cmp
ds
loop
js
add
inc
jge
ds
ss
jle
dec
mov
shrl
cmp
shlb
mov
push
pushf
sarb
cmc
adc
test
add
aam
sbb
and
lods
inc
movsl
xor
scas
jne
or
mov
lds
and
hlt
inc
add
jl
insb
xor
pop
jns
sti
push
and
nop
mov
adc
rolb
popa
sub
fldcw
je
jno
pop
dec
add
sbb
push
jae
xor
push
push
mov
xor
in
test
cmpb
and
shrb
les
or
popf
add
leave
imul
lcall
rclb
jg
inc
pop
inc
les
pop
mov
pop
enter
push
mov
orl
xor
cmc
and
add
xchg
test
jne
cli
int3
rcrb
and
xchg
xor
cmp
shr
call
sub
xor
fwait
push
sub
fisttps
mov
adcb
adcb
mov
insb
pop
repnz
or
mov
into
xchg
mov
rcrl
mov
adc
mov
loope
push
sbb
mov
shll
inc
out
cmp
adc
call
enter
sub
adc
std
js
pop
adcl
xor
push
les
dec
movsb
pop
xchg
add
mov
jge
cwtl
in
lods
mov
sub
sub
and
fistps
adc
or
xchg
or
ja
inc
or
add
push
xlat
push
mov
sete
jne
fs
lea
ror
sbb
cmp
jmp
cmp
pop
mov
inc
push
inc
or
ret
add
adc
clc
mov
add
inc
rol
jp
lcall
insl
or
and
or
shrb
pop
cmpsb
inc
hlt
and
jp
add
les
mov
dec
mov
bound
mov
test
lcall
push
jnp
data16
push
icebp
jbe
cli
push
insb
aad
ret
jg
mov
push
insl
push
or
push
add
cwtl
jns
jnp
lea
cmpsl
addr16
out
push
mov
add
je
ja
add
out
pushf
jge
jle
xchg
lret
sbb
jb
es
add
sbb
adc
adc
out
mov
mov
mov
ret
cmp
mov
divl
sti
imul
bound
shll
dec
in
push
inc
inc
jmp
inc
fs
sub
sarl
push
mov
loop
lret
mov
and
call
xor
mov
ja
jmp
test
ja
sub
cld
push
sub
xchg
mov
popf
fimull
jmp
arpl
or
sahf
jno
add
dec
or
pop
jge
mov
inc
lock
xor
cs
mov
mov
push
aam
add
add
nop
mov
sub
dec
movsl
rorb
push
outsb
pop
mov
aam
pop
in
mov
je
sbb
in
cmc
fcmove
xor
cmpsb
bound
xor
inc
dec
mov
loope
mov
fcoms
xchg
inc
mov
ljmp
inc
xchg
and
add
and
push
movb
test
lock
push
adcb
cmpb
mov
jbe
stos
sar
cmp
test
movsb
and
rol
inc
sub
loopne
sbb
enter
and
lods
jnp
in
int3
push
xchg
aam
ret
adc
jne
insb
and
push
mov
movsl
loope
les
aas
add
sbb
sub
nop
push
leave
pop
push
dec
clc
or
je
xchg
and
push
ss
outsl
push
or
sub
jo
jns
inc
mov
push
inc
jbe
push
xchg
hlt
pop
mov
sub
adc
rclb
pop
mov
shlb
mov
aaa
xor
outsl
pop
push
sbb
push
test
movsb
push
adc
mov
add
push
loop
outsl
inc
cmpsl
add
inc
push
les
add
stc
and
push
inc
cmp
aaa
sbb
cmp
adc
cs
or
dec
inc
loope
mov
clc
je
pop
mov
push
rclb
pop
aam
clc
aas
jne
ss
mov
inc
and
je
cltd
test
scas
test
xchg
dec
jge
inc
or
iret
pop
test
mov
lods
fisubrl
movsb
push
lock
pop
xor
hlt
mov
icebp
push
repnz
repz
stos
pop
mov
enter
push
xor
cs
adc
inc
sbb
mov
or
mov
fcoml
movsl
call
ret
jne
mov
push
shlb
pusha
and
mov
mov
repnz
enter
push
addl
xchg
mov
mov
xchg
jl
dec
sbb
mov
nop
inc
inc
mov
jns
test
mov
adc
shr
jo
paddw
cmp
cwtl
add
adc
jb
stos
or
daa
dec
jp
not
andl
push
jo
popa
push
jle
mov
jg
pop
shr
cmp
jbe
add
jmp
add
mov
pop
mov
pop
and
addb
inc
dec
mov
pop
cmp
div
adc
mov
mov
cmp
jb
lods
dec
adc
data16
pop
mov
mov
add
sbb
ficompl
push
push
pop
push
mov
inc
mov
sbb
adc
jg
mov
fs
push
inc
push
jbe
lret
cli
push
pusha
adc
xor
mov
push
or
pop
jge
popa
daa
cs
les
dec
pop
jne
push
or
jb
sub
mov
leave
sbb
pusha
xchg
and
push
sar
add
sub
jae
outsl
push
pop
lcall
inc
push
mov
mov
xor
ss
add
test
out
and
arpl
nop
sub
and
lret
sbb
pop
pop
inc
jg
test
call
cmpsl
xchg
inc
dec
push
and
xchg
inc
mov
adc
cmp
ret
hlt
ds
jmp
pop
call
push
cwtl
inc
adc
lahf
and
call
xor
fdivr
dec
dec
cmp
pushf
xchg
frstor
subb
xor
fnsave
and
add
xchg
loope
xchg
lahf
std
addr16
add
push
je
add
inc
sbbb
ficomps
sti
add
lret
stc
sub
add
or
mov
xchg
daa
add
adcl
push
add
or
and
pop
push
inc
push
xchg
push
jmp
and
cmp
cmp
cmp
loopne
lret
adc
add
test
scas
inc
mov
dec
xchg
cmp
addr16
adc
aas
sub
pop
inc
xor
push
movb
scas
or
inc
mov
adc
adc
loop
xor
or
call
test
sub
mov
aas
mov
xchg
fsts
or
outsl
mov
aas
or
outsb
js
lea
jl
inc
push
das
push
xchg
push
dec
xor
in
pusha
mov
push
adc
mov
add
shll
add
adc
sbb
dec
inc
pop
popa
sub
jl
lea
push
push
pop
or
test
inc
xor
or
pop
adc
dec
out
push
inc
nop
popa
adc
xor
xorl
push
add
inc
add
mov
imul
or
push
inc
loope
inc
push
sub
inc
enter
xchg
mov
clc
and
xchg
test
add
xor
clc
inc
fisttps
pop
and
outsl
dec
mov
mov
sbb
sbb
rsm
and
adc
clc
cmp
jne
mov
dec
sub
or
bound
fdivl
sbb
sbbb
repz
add
add
cmp
shll
and
nop
or
sbb
ljmp
push
push
repnz
rcrb
jo
cs
popa
push
and
daa
nop
mov
xor
mov
mov
insl
or
mov
push
push
xchg
mov
add
push
cwtl
sub
rclb
dec
dec
mov
jbe
cmp
sub
pop
pushf
mov
push
pop
jns
sbb
aaa
lods
mov
pop
lods
dec
clc
daa
sbb
dec
mov
ljmp
cmp
lock
in
daa
mov
divb
mov
adc
es
push
lcall
sub
mov
in
or
int3
sub
rolb
movsb
push
adc
shrb
jne
lods
jmp
push
push
ret
and
mov
add
out
std
dec
lcall
push
add
movsl
andb
dec
dec
inc
adc
or
stos
rcrb
mov
xor
xchg
daa
jge
nop
add
sbb
pop
mov
test
mov
lods
fidivl
rcll
pop
ja
leave
mov
inc
sbb
sub
sub
inc
daa
add
and
loopne
loopne
movsl
inc
push
push
ja
sbb
into
inc
fwait
or
or
sub
fiaddl
dec
call
imul
call
fiaddl
jnp
enter
push
fwait
mov
ja
pop
sub
loop
aaa
sub
jbe
repz
testl
ret
lret
sbb
mov
sahf
jmp
push
outsb
push
ret
and
jle
and
in
mov
dec
add
xor
ds
sbb
mov
adc
xchg
xchg
aas
xchg
test
xchg
and
adc
das
and
fadds
pushl
fsts
sahf
jo
xor
sub
out
sub
mov
enter
test
out
fs
mov
inc
mov
dec
mov
rsm
xchg
pop
and
movsb
lretw
pop
inc
arpl
cmp
push
movsb
shlb
repz
xorb
xchg
add
xchg
adc
cli
adcl
cmp
je
pusha
pop
and
cmp
or
in
dec
xchg
cmp
je
in
pop
add
js
mov
inc
ja
mov
je
or
and
popf
add
xor
in
jge
xor
js
clc
jmp
orl
aad
rorb
bound
cmp
in
push
lods
pop
jmp
inc
mov
je
cltd
sbb
cmp
andb
or
jmp
pusha
inc
dec
sub
push
mov
fsubl
xchg
outsl
push
fstl
fsubrl
mov
adc
sub
fildl
call
dec
rclb
sbb
adc
pop
pop
xorb
add
dec
push
dec
test
or
loopne
loop
adc
inc
pop
pop
ret
xchg
mull
adc
mov
cmpsl
cmpb
push
mov
data16
sub
adc
outsb
pop
addb
hlt
add
and
fstpl
data16
movsl
jae
push
imul
fnstsw
and
lahf
and
jg
cld
fldl
pop
fsubr
pop
faddp
movsb
fstpl
adc
fiaddl
or
ffreep
dec
es
xor
mov
sub
std
fwait
sbb
inc
sbb
ficoms
push
adc
and
xorl
jne
lock
mov
ss
add
push
loope
ljmp
sub
cmp
xchg
push
push
add
push
mov
mov
mov
push
test
in
push
lock
add
pop
sub
push
mov
fnstenv
push
mov
cmp
xor
lea
mov
insb
pop
addl
test
push
or
adc
or
xor
in
sub
cmpsl
inc
pop
in
mov
xor
cwtl
imul
mov
mov
sub
cmp
outsl
pop
inc
cmp
adc
shll
shll
mov
adc
or
dec
inc
adc
or
push
aam
dec
loopne
adc
push
adc
push
inc
rclb
inc
stos
add
int
aam
jo
pcmpeqw
gs
inc
jge
pop
push
js
test
xor
mov
fmuls
push
add
cmp
mov
xchg
sti
and
push
cmp
push
cmp
adc
adc
xchg
sbb
test
or
insb
xor
push
lcall
jnp
mov
push
inc
dec
mov
mov
dec
insb
loope
cltd
je
or
mov
lods
gs
push
and
addb
push
sbb
adc
hlt
ja
sbb
dec
out
rclb
insl
xchg
inc
pop
inc
jnp
int
inc
or
push
xchg
sub
andl
push
push
sub
in
cmp
outsl
dec
mov
push
jle
push
adc
inc
pop
test
push
cmpsl
orb
ret
adc
dec
std
fiaddl
adc
and
sub
cli
add
mov
jno
xchg
adc
orb
sahf
push
sbb
cmp
repnz
pop
rcll
add
xchg
rorb
lea
int
adc
add
pop
inc
sub
add
mov
pusha
js
mov
jp
sub
or
cmpsl
or
hlt
or
lock
dec
loope
inc
pop
sub
out
pop
cmp
int3
addr16
or
mov
mov
lcall
inc
lds
push
lds
lahf
addl
pop
jle
cmp
sub
adc
das
jo
ss
add
mov
and
or
pushf
lret
fidivrs
js
daa
out
sbb
sbb
adcl
mov
into
push
outsb
dec
push
pop
test
aas
in
push
inc
sbb
xchg
rolb
add
mov
pushl
adc
aas
in
push
les
mov
call
inc
mov
and
add
cmp
jl
push
in
jp
xor
fmuls
rorb
or
add
pop
adc
je
push
ret
lea
and
mov
mov
sbb
jo
sbb
mov
xchg
jmp
adc
sub
popf
and
adc
pop
mov
push
xor
adc
ds
sub
add
and
stos
stos
mov
mov
das
adc
add
xchg
insb
pop
ds
adc
or
mov
rorl
stc
pusha
or
mov
arpl
push
mov
inc
or
or
call
test
fisubrs
jle
je
push
sbb
push
cmp
adc
xor
push
jmp
mov
adc
xchg
sbb
add
or
arpl
add
lahf
xor
xor
mov
cld
adc
xor
pop
cltd
inc
push
dec
lods
add
add
push
or
lock
xor
lea
lods
add
push
loopne
je
or
add
adc
and
add
mov
adc
and
add
cmp
sub
ret
test
push
inc
mov
or
xlat
sbb
out
pop
pop
sbbl
addl
aas
shl
stos
je
and
jmp
sub
rcrl
push
push
in
or
sahf
mov
jecxz
xor
inc
int
lock
mov
mov
mov
repnz
sub
lds
cmc
ret
test
fwait
int
inc
test
cli
xchg
int3
les
push
sbb
jecxz
push
add
pop
mov
rol
sbb
push
adc
mov
inc
mov
nop
insl
rcr
mov
xor
add
mov
cmp
or
fldt
or
cmp
or
pop
inc
fs
leave
lods
dec
adc
pop
rcl
pushl
xchg
inc
movsb
jle
out
or
jge
push
push
and
insb
test
iret
xor
jg
pusha
mov
rol
mov
ror
xor
shr
xor
sub
jnp
inc
ret
or
or
icebp
add
add
add
repz
fs
or
mov
push
or
and
xor
add
add
mov
fs
aam
sub
stos
or
cwtl
push
or
lods
loop
ror
cli
fisubrs
jge
xor
aam
cli
and
and
xchg
push
aam
cmpsb
in
pop
clc
cmp
mov
repnz
rorb
aaa
push
test
or
push
or
and
not
ret
rcl
add
add
jo
add
add
inc
lcall
or
call
sub
xchg
xorl
ljmp
int
xchg
shr
add
push
xor
fsub
in
dec
rcrl
xor
in
movsb
jb
xor
in
shrb
cmpsl
sbb
lahf
push
cmp
inc
push
push
punpckldq
push
dec
pusha
inc
push
bound
pop
mov
pop
or
mov
xor
jo
cs
call
cmpsb
mov
in
xor
call
adc
pushf
cmp
pop
cmp
pop
dec
rcl
aam
sti
mov
inc
or
int3
xor
add
in
fisubl
pop
push
xor
and
and
out
iret
or
in
jl
add
and
xor
add
or
xor
pusha
jl
cmp
or
jo
ret
push
jo
ficoms
add
mov
dec
shr
xor
inc
pop
iret
jl
iret
push
loop
mov
add
jle
filds
cltd
inc
inc
fadds
pop
jbe
call
imul
fisubl
add
ret
add
xor
xlat
add
gs
fcomps
inc
fs
nop
and
psllq
lret
inc
mov
xor
or
jmp
stos
adcb
aam
aaa
cmp
shlb
call
in
dec
inc
push
pusha
fs
out
rolb
inc
aaa
xchg
add
sub
jge
rclb
rorb
lcall
in
pusha
in
call
loope
in
add
push
adcl
mov
dec
push
nop
data16
xchg
and
cwtl
add
xor
cmp
inc
and
int
leave
push
push
pop
or
xor
cmp
pusha
adc
mov
xor
pop
sahf
push
add
test
or
nop
and
nop
out
pop
fs
xchg
inc
pusha
push
xchg
xchg
movsl
inc
in
pop
mov
or
rolb
dec
sahf
fs
pushf
loop
shr
or
add
dec
movsl
imul
enter
fsts
or
insb
jb
subl
adc
shll
loopne
xor
adc
in
add
and
imul
xor
add
push
dec
xor
aas
pop
add
sub
mov
sbb
xor
cmp
inc
cld
sbb
jb
mov
sbb
pop
cld
sub
data16
push
shrb
mov
shlb
enter
add
scas
sub
dec
sarb
add
rorb
aaa
or
or
mov
adc
in
outsb
push
test
cmpsb
mov
adc
loop
sub
xor
aas
lea
jmp
das
add
sub
sub
pop
add
mov
ret
dec
or
mov
dec
jne
mov
rcr
out
loope
lock
rolb
jl
sub
mov
in
fisttps
jbe
or
inc
sbb
adc
push
lea
sub
jae
push
pop
fadds
repz
or
mov
in
notb
or
mov
push
pop
loopne
rorl
mov
xchg
or
xchg
ljmp
adc
mov
nop
push
xor
jb
cmp
dec
mov
ljmp
jo
xor
aaa
popa
push
adc
xchg
or
fs
rclb
pop
push
sbb
iret
cmpsb
or
push
inc
adc
pop
lds
mov
inc
ja
push
std
pusha
dec
and
mov
xchg
aam
jmp
je
mov
mov
push
cltd
mov
mov
cli
das
je
or
add
loopne
adc
cmp
je
cmp
jne
lock
fistpl
cmp
inc
lea
inc
mov
sahf
testl
push
movsb
in
inc
mov
pop
sub
adc
jo
push
mov
loop
je
mov
dec
or
sub
cmp
fs
jl
pop
lds
push
inc
and
or
dec
pop
mov
mov
cmp
pusha
dec
cmp
jns
mov
push
loop
or
mov
lea
cwtl
jp
jno
in
cmpl
add
cmpsb
and
jle
int3
inc
xorl
es
cmp
jne
notb
inc
fadds
cmp
sub
fistl
dec
outsb
dec
push
aam
cld
cmpb
shlb
ja
push
inc
push
lods
sub
mov
push
add
add
inc
stos
mov
lods
add
pop
shrl
dec
popa
loop
jne
mov
pop
pusha
xor
stos
pop
cltd
jns
cmc
movzwl
cbtw
jb
cmpsb
mov
cmp
sti
lahf
pop
shl
add
jmp
cwtl
aas
les
inc
push
cmp
inc
orl
adc
cmp
clc
fs
jne
cwtl
and
lock
test
jg
push
call
cmp
push
fsubr
cmp
adc
ret
and
push
add
add
push
lds
push
add
push
and
xor
out
ror
in
mov
lret
cmp
jg
or
jge
and
dec
int
jle
es
sub
sub
and
pop
cmp
jl
mov
adc
adc
pop
mov
rolb
mov
or
jb
clc
sar
jbe
mov
test
fwait
and
add
adc
je
test
jne
je
outsb
jnp
or
jb
pop
mov
sub
xor
mov
jno
add
into
adc
rcrb
sbb
jmp
pop
sbb
inc
loope
push
jns
inc
push
push
mov
inc
and
je
push
add
xchg
mov
push
mov
mov
cs
es
add
add
stos
clc
lahf
mov
repnz
add
push
mov
roll
icebp
sti
cwtl
mov
or
xor
sub
flds
ds
mov
push
add
imul
cli
sub
popa
call
jecxz
rorb
out
push
sub
xchg
push
imul
adc
into
xor
rorl
pop
inc
and
lea
sub
xor
mov
mov
add
pop
jb
sbbl
pop
cmp
aad
inc
cmpl
xchg
ja
inc
xor
mov
call
xchg
sbb
pop
cwtl
xor
mov
mov
mov
out
dec
mov
incl
addr16
fsubs
push
push
lret
fadds
inc
and
jae
lea
push
cmpsb
mov
insl
and
into
test
sub
and
cli
mov
add
mov
shr
jp
xlat
mov
jae
mov
cmp
inc
dec
add
arpl
sub
add
mov
ds
mov
lock
add
inc
lret
push
sub
loop
aam
mov
cld
xchg
add
mov
shr
scas
jl
add
cmp
add
push
sbb
push
lock
test
jg
scas
push
or
xchg
mov
sahf
push
cmp
xor
cmp
lock
popa
push
sub
add
inc
xchg
in
loopne
or
mov
in
jns
rol
fisttpll
jmp
mov
sbb
das
movsl
int3
xchg
xor
sub
call
pusha
sti
pusha
jb
cs
cmp
mov
or
ds
adc
mov
fmull
roll
mov
xor
mov
xchg
insl
mov
sbb
mov
out
add
addb
fs
adc
xor
cmp
jne
lahf
jne
addl
xchg
gs
sbb
das
sbb
ja
cmpb
push
leave
cwtl
sbb
inc
mov
rorl
or
fs
cmp
or
mull
add
push
sub
pusha
jle
movsb
andb
movb
cmpsb
imul
in
lock
pop
push
fildll
sbb
mov
clc
mov
add
mov
rcll
jne
push
sarb
pop
out
and
inc
xchg
add
and
out
add
inc
adc
push
hlt
subb
lods
cmp
jnp
das
mov
lods
ret
sbb
in
add
or
stos
test
cmp
adc
imulb
dec
cmpsb
mov
push
mov
jb
fmuls
add
xchg
sbb
xor
cmp
js
jmp
cmp
push
cmpb
jl
inc
inc
inc
xchg
sti
addb
and
mov
sbb
push
push
inc
mov
cwtl
pop
dec
imul
iret
adc
cld
adc
dec
push
inc
fsubr
cmp
mov
or
jo
xchg
lret
push
push
shrl
in
push
leave
sbb
jmp
insb
jne
movl
sub
jge
add
cmp
and
pushl
add
frstor
ss
inc
mov
lea
inc
cmp
jne
icebp
sbb
aam
adc
jmp
cmp
inc
add
mov
mov
inc
xchg
sahf
and
enter
cmp
out
mov
mov
sbb
test
or
cmp
and
sbbl
cld
in
je
jmp
add
inc
xor
add
and
orb
jns
pop
mov
lahf
mov
das
lahf
loop
ret
ret
or
int3
mov
push
dec
popa
in
adc
pop
sbb
sub
xor
push
mov
insb
cmp
fisttpl
je
sbbl
lret
pop
xor
or
mov
xor
and
mov
pop
cmp
xor
movsb
mov
les
in
cmp
or
mov
mov
pop
and
mov
push
lret
add
inc
clc
push
push
push
sbb
xorb
lock
push
mov
xor
mov
mov
xor
pop
dec
rclb
dec
push
mov
out
repnz
add
ja
and
fmull
fadds
mov
sub
pop
cs
sub
xor
xchg
lret
in
cmp
cmp
mov
negb
pop
mov
mov
inc
add
adc
pop
inc
pop
nop
clc
je
and
data16
xchg
mov
add
push
xor
pop
cltd
lcall
or
inc
aad
sbb
xor
imul
sbb
enter
shr
mov
push
push
inc
pushf
mov
pop
cmpsb
pop
out
movsb
push
push
dec
sub
push
lcall
or
mov
xchg
xchg
sub
loopne
inc
js
mov
orl
push
push
loopne
cld
sbb
mov
clc
sub
sahf
or
or
clc
out
and
popa
pop
ret
mov
mov
addr16
js
push
push
lret
adc
mov
pop
inc
pushl
lahf
push
sub
aad
jne
push
aam
rcrl
les
mov
cmpb
xchg
icebp
mov
or
cmp
mov
pop
mov
in
dec
pop
push
test
lret
xor
xorl
sub
cvtps2pd
sbb
mov
mov
mov
xchg
ja
inc
mov
shll
and
mov
mov
fnsave
ret
dec
rcrb
cmovle
xor
outsb
lahf
mov
in
daa
push
pop
adc
cmp
faddl
inc
sbbb
push
xor
and
push
xchg
mov
mov
sub
cmp
dec
add
sbb
xlat
adc
movsb
cmp
cmp
mov
stos
das
add
sub
cmpsl
mov
sbb
idiv
mov
cltd
loopne
daa
shlb
sbb
lcall
mov
in
push
insb
inc
rorb
mov
xor
sahf
loope
rorb
movsb
or
cmp
inc
dec
add
mov
xchg
dec
add
push
cmpsl
mov
pop
addb
and
mov
sbbl
add
loopne
inc
aam
sub
mov
xorl
imul
xor
or
xchg
insb
loope
daa
mov
dec
negl
pop
or
pushf
jbe
dec
scas
dec
loopne
inc
add
testb
sub
arpl
jmp
jbe
sub
push
pop
sbb
adc
or
loop
xor
adc
and
cmp
mov
mov
loop
adc
int3
or
inc
mov
dec
xor
push
adc
loopne
ss
dec
sbb
lock
mov
cmp
and
dec
jle
sahf
mov
mov
xchg
lock
add
add
jns
xchg
and
push
inc
push
add
add
dec
lea
leave
js
popl
cmp
mov
mov
daa
sub
push
inc
mov
dec
mov
iret
aam
imul
leave
push
adc
js
adc
in
mov
dec
cmp
add
cmp
orb
cmpsl
stos
push
xchg
test
sbb
subl
fisttpll
in
pop
sub
andl
or
insb
dec
push
xchg
mov
xchg
in
or
addr16
add
dec
add
xor
cmp
adc
inc
dec
jae
cmp
cwtl
lret
cmp
and
inc
dec
sbb
jbe
push
push
xchg
addl
sarl
add
and
sub
dec
pop
dec
xor
mov
inc
iret
and
dec
cmp
or
rorb
or
enter
cmp
xchg
dec
push
out
cmp
and
add
sbbb
pop
add
mov
rcrb
adc
mov
inc
stc
and
sbb
int
lock
xor
jns
cmp
ds
cmp
sub
cmp
inc
fldl
cmpsb
cmovo
xchg
or
add
pop
add
and
mov
addb
xchg
fildl
and
jle
es
shlb
adc
lods
dec
and
pop
push
adc
or
jno
add
cmc
push
pop
inc
fs
and
lea
or
andl
mov
movb
cmpl
push
push
stc
pop
rclb
xor
ret
test
sbb
shr
push
ret
shll
fndisi(8087
rcrb
and
push
push
dec
fdivrs
lahf
pop
and
xchg
cmc
adc
mov
das
repz
push
es
dec
inc
cld
clc
scas
or
mov
and
movsb
insl
dec
sti
add
sub
shll
roll
movsb
mov
sbb
add
mov
pusha
popa
daa
loopne
sbb
movsb
cwtl
mov
clc
push
movsl
adc
dec
hlt
push
pop
daa
adc
lods
jmp
inc
dec
push
push
push
cmpsb
or
adc
les
or
mov
testb
and
jne
orl
jo
lcall
shlb
push
inc
enter
xchg
and
inc
cmp
test
inc
jmp
jge
pop
addl
xor
cmp
mov
sbb
in
aaa
add
loopne
bound
mov
in
push
mov
sub
stos
mov
mov
cwtl
inc
lcall
cmp
insb
xchg
mov
sbb
jl
or
push
in
sbb
or
push
push
outsl
enter
lods
mov
ds
add
mov
ret
test
rclb
fildll
and
xchg
fcoms
inc
sbb
ds
fwait
je
cmp
xor
cld
scas
xor
and
mov
xor
push
mov
adc
ret
sub
les
in
repnz
xchg
arpl
xchg
push
push
jbe
mov
jne
mov
mov
mov
jbe
xor
xchg
outsl
test
and
mov
push
push
aam
dec
sbb
xchg
filds
dec
dec
fmuls
push
push
clc
add
shrb
dec
push
mov
scas
dec
ret
xchg
adc
cmp
adc
ficomps
cmp
mov
mov
add
push
xchg
xchg
cmp
adc
shll
add
push
ffree
fdivrs
mov
fstps
ljmp
inc
add
push
pop
leave
sub
mov
fildl
loop
push
mov
rcrb
jge
rol
mov
cmp
loope
hlt
xchg
jae
push
jo
push
mov
enter
jmp
mov
or
cmc
or
xor
lods
and
pop
or
stos
insl
jo
js
dec
mov
dec
xchg
xchg
lcall
mov
xchg
fidivl
dec
cmp
add
push
jp
mov
adc
add
xchg
clc
inc
mov
cmpl
pop
popf
pop
idivb
movb
mov
int3
sahf
ljmp
jne
inc
nop
rolb
mov
mov
mov
add
xchg
adc
pop
mov
int3
iret
fwait
rorb
dec
jl
gs
and
jne
aaa
mov
xor
ror
lcall
adc
pop
mov
and
xchg
add
inc
mov
add
jb
ss
leave
sub
cmp
sarb
lret
jbe
hlt
movsb
hlt
add
roll
movsl
mov
push
lcall
push
sub
mov
pop
xor
test
ljmp
xchg
sub
push
adc
jnp
test
dec
mov
ret
mov
adc
lret
jl
xchg
dec
add
cmp
push
scas
xchg
stos
mov
sar
jmp
pop
pushl
push
push
dec
inc
push
enter
cltd
sub
lret
pop
clc
sub
cmp
inc
sub
enter
sub
fnsave
xor
and
into
insb
mov
add
and
aas
xor
repz
mov
pop
cli
push
roll
iret
xor
xor
std
mov
or
mov
xchg
add
xchg
xchg
test
cmc
add
jecxz
shrb
and
lcall
aam
sbb
scas
out
scas
jne,pt
sub
adc
loop
push
mov
push
adc
nop
ljmp
inc
xlat
movb
cmp
sub
rcll
and
jbe
ljmp
inc
inc
sahf
ret
adc
popf
push
adc
sub
sub
and
jae
or
fbstp
sti
fwait
les
or
inc
scas
inc
xor
sbb
mov
sbb
dec
jno
adc
stos
cmp
cmp
scas
bound
shlb
inc
les
inc
out
pop
inc
aaa
inc
jge
orl
sbb
mov
pop
ja
sbb
cld
clc
push
cmp
jb
push
sbb
mov
sub
mov
sbbl
adc
in
out
outsb
adc
or
jmp
add
mov
sbb
aas
add
cld
push
mov
mov
fadds
rorb
movb
stos
inc
xchg
andps
loope
or
lea
add
pusha
aam
prefetch
jl
xchg
add
adc
arpl
xchg
subl
and
or
xchg
addb
cmp
xchg
cmp
sub
mov
xor
jg
cs
fimull
sub
pop
jl
jo
addb
push
mov
push
call
loopne
call
xor
push
test
mov
push
mov
push
xchg
cmp
or
adc
and
jbe
imull
mov
fs
arpl
xorl
cmp
add
or
pop
lock
ljmp
jne
pop
ror
mov
fnstenv
cmp
push
test
xor
js
jb
xor
jnp
mov
add
push
loope
lret
mov
mov
and
xorb
sub
mov
out
loopne
sbb
jno
add
xchg
or
or
mov
sbb
mov
fcomps
pop
sub
jmp
mov
andb
and
add
ss
mov
mov
push
mov
mov
adc
sbb
adc
mov
out
sahf
cmp
insb
and
loopne
popa
mov
push
mov
bound
test
or
or
jmp
push
push
mov
jmp
mov
push
jecxz
xchg
mov
jg
jle
lods
cmp
mov
into
loopne
and
or
sbb
push
test
pop
xchg
rorb
pop
test
pop
push
sbb
push
and
xor
aam
roll
scas
mov
icebp
loopne
add
xchg
lcall
inc
das
popa
mov
les
or
push
test
lret
jg
movsl
jge
test
add
jg
test
mov
loop
loope
add
sti
iret
or
test
into
mov
push
data16
nop
shr
adc
sbb
rcrb
adcl
add
sbb
mov
jle
jg
pop
pop
mov
lret
outsb
dec
ja
push
add
mov
pop
pop
push
sbb
clc
mov
push
cmp
push
mov
push
xchg
mov
push
jg
ss
jle
add
ret
pop
and
shlb
adc
and
fldl
push
inc
pop
pop
rclb
popa
enter
and
add
and
rcrl
adc
or
mov
add
add
outsb
loop
or
sbb
xor
inc
inc
cmp
aam
inc
roll
sti
enter
addl
mov
xchg
cmp
dec
add
sti
and
cwtl
xor
inc
push
sbb
ret
and
fnstenv
or
rep
cli
ljmp
mov
in
push
mov
jge
xchg
sbb
ret
or
fsubrs
and
fistpl
mov
int3
fiadds
mov
cmp
dec
jno
and
mov
adc
notl
push
push
es
imul
fbld
popf
jmp
test
pop
add
roll
lods
jmp
int
mov
cs
cmp
out
xlat
push
xchg
push
inc
int
cli
push
add
lock
shr
pop
xorl
add
pusha
aam
addb
and
arpl
sbb
xchg
mov
push
push
mov
inc
xchg
call
jge
ja
cmp
mov
sub
mov
dec
outsl
sub
xchg
adcl
cwtl
and
xchg
pop
test
push
in
inc
loop
vcmpsd
pop
inc
fs
adc
loopne
into
rorb
es
orb
add
push
das
pop
js
xchg
xchg
stos
cmp
les
xchg
jo
add
ud1
pop
lcall
ja
xor
sbb
fisttpl
mov
cwtl
popa
xlat
add
inc
call
xor
dec
sub
cmpsl
mov
cmp
inc
imul
and
aaa
int3
jle
sbbb
add
jle
aaa
pop
pop
dec
inc
cmp
and
dec
and
sub
xchg
mov
adc
mov
sub
rol
js
into
in
cmp
jne
aaa
adc
rcrl
std
add
and
pushf
hlt
lea
jmp
sti
jecxz
push
mov
sub
sub
jmp
lret
shr
mov
sub
and
add
inc
je
pop
movsl
out
jbe
jo
shrb
mov
shrb
adc
xchg
addl
lods
or
mul
sahf
or
dec
test
fwait
sbb
inc
mov
sbb
or
cld
sub
fdivs
push
pop
cmpl
push
out
subb
sysexit
add
add
pop
in
sub
loope
add
negb
ljmp
je
mov
fmull
xor
push
sbb
adc
rclb
daa
mov
or
push
or
cld
mov
fisttpl
rol
out
jl
jmp
out
xor
mov
inc
fcoms
pop
clc
add
idiv
push
shr
hlt
sub
dec
loop
pushf
inc
call
xor
cmp
scas
pop
or
aad
or
js
fadds
inc
mov
movsl
pop
cmp
jl
sub
out
mov
adc
or
push
stc
out
dec
lea
inc
mov
dec
adc
jmp
cmpl
inc
test
or
mov
jmp
or
lcall
addr16
jmp
mov
push
rcrb
dec
jae
mov
mov
insb
addl
in
or
call
pushw
icebp
or
fistl
or
cld
fsub
xor
or
inc
inc
pop
neg
and
adcb
mov
push
jae
incl
or
cvtps2pd
sub
loope
dec
pushf
push
jnp
pop
push
ds
roll
pusha
sub
repz
out
push
mov
loope
push
jae
movb
adc
add
in
sbb
in
cmp
loop
sbb
bound
adc
mul
inc
sbbl
popf
add
add
insl
jge
xchg
sbb
and
xor
test
test
cmp
mov
cmp
jge
push
push
mov
xchg
lahf
cmp
fildll
and
inc
hlt
fwait
ljmp
or
fs
cmp
jae
pop
jae
inc
fwait
xlat
sbb
sub
test
dec
mov
cmp
cld
rclb
enter
je
jle
xchg
orb
into
int3
inc
mov
jmp
xor
xor
xor
mov
push
adc
sub
call
lret
xchg
and
sub
call
or
jns
popa
sub
shrb
push
adc
nop
mov
and
cmp
or
inc
jbe
jp
adc
inc
xchg
push
cmp
xchg
push
or
or
mov
adc
adc
or
mov
dec
fbstp
cmp
and
leave
and
js
cmpl
or
sbb
fcompl
xchg
jne
push
and
xor
fcmovne
lret
test
aad
adc
adc
jmp
cmp
sub
dec
jb
cmpl
dec
clc
lea
aam
push
sarb
and
roll
lock
movsl
mov
lahf
add
lahf
push
cmp
mov
testb
adc
or
mov
cmp
jnp
cmp
in
xchg
add
xor
mov
lods
xchg
inc
add
push
jo
nop
dec
inc
jns
aaa
jnp
mov
cmp
cmp
addl
bound
ret
cmpsl
push
pop
pop
stos
es
sbb
dec
je
sbb
lret
and
enter
mov
xchg
stos
fs
hlt
hlt
jns
cmpl
inc
mov
les
insb
add
nop
cmp
call
inc
add
cmpsb
inc
sbb
cs
or
fxtract
jne
push
js
lret
adc
cld
loopne
pop
push
lock
jne
mov
cmp
rclb
fdivr
repz
add
or
inc
lcall
xchg
lret
adc
push
enter
aaa
lea
mov
addr16
sub
mov
xchg
or
out
jb
xor
inc
movl
cmp
push
mov
call
iret
pop
jo
cli
sbb
push
test
push
push
mov
inc
rorb
mov
nop
dec
push
cmp
adc
adc
dec
and
jo
push
adc
dec
loopne
ret
fsts
loopne
and
or
in
mov
or
xor
lods
or
xchg
mov
adc
iret
inc
jecxz
add
mov
js
and
lea
sbb
cmp
adc
jge
mov
push
xchg
push
or
cmp
sub
out
jne
lea
lret
or
insl
fstpt
mov
jne
sub
das
push
jmp
pusha
ret
or
add
push
push
xchg
cmp
add
jne
mov
inc
adc
test
jo
add
adc
les
inc
shl
and
push
pop
lods
push
cmpsl
xorl
lahf
stos
mov
mov
out
rorb
loope
add
sbb
loope
dec
lock
inc
adc
leave
xor
out
and
adc
mov
es
test
lret
movsb
in
rorb
aam
inc
mov
pop
mov
dec
cmp
or
mov
test
sarl
cmpb
int
mov
jl
jg
decl
jge
add
jmp
or
xor
std
daa
sub
mov
mov
mov
fmuls
xchg
adc
shll
sub
test
sarb
es
call
or
ret
test
push
cmpb
test
jmp
popa
xor
adc
cmp
cmp
cmp
mov
xchg
mov
inc
cmp
jne
cmp
psubsb
jbe
addr16
nop
xchg
sub
cmp
and
out
int3
mov
and
adc
sbb
cmp
cs
xor
mov
mov
or
or
xchg
mov
add
ret
push
xor
cld
out
adc
nop
jp
aam
inc
jmp
push
push
ret
insb
pop
inc
into
je
stos
or
je
inc
sub
sub
or
and
push
out
or
add
adc
sahf
mov
jmp
cmp
mov
lret
mov
loopne
adc
dec
inc
popa
loop
enter
add
or
push
push
orb
xor
pop
or
jp
xor
enter
ljmp
mov
repz
mov
push
ljmp
test
add
and
pushf
loopne
push
fidivrs
daa
scas
mov
mov
pop
mov
cmpl
jne
add
adc
push
cmp
xchg
in
jge
pop
push
inc
callw
push
jns
and
into
pop
call
aam
jp
in
add
mov
loopne
cmp
test
cwtl
sbb
and
je
mov
subl
insl
inc
in
sub
xchg
mov
call
and
add
add
pop
clc
add
clc
jno
xorb
adc
add
icebp
fimuls
push
sbb
div
jne
sbb
pushf
xchg
inc
sahf
or
loope
out
sbbl
sti
adc
push
xchg
xor
adc
sub
call
vpsubusw
popf
rol
test
jmp
inc
xor
popf
loopne
or
xchg
fadd
sbb
jne
inc
cmp
push
dec
fadd
add
rcrb
and
xchg
in
xchg
and
jl
out
rcrl
pop
jmp
popa
pop
mov
pop
or
xchg
and
outsl
sbb
mov
jp
sub
inc
mov
sub
fcoms
cmp
int3
in
pop
rcrb
enter
adc
xor
mov
jnp
scas
aam
popf
xor
push
jbe
in
push
mov
lods
add
mov
faddp
popa
daa
js
pop
movb
sub
mov
xchg
push
xchg
mov
roll
int
pop
bound
dec
add
scas
lea
fsubrs
mov
pop
or
insl
inc
jmp
cmp
das
sahf
roll
add
movsl
or
pop
movsb
xor
add
mov
ljmp
add
xor
fs
je
dec
adc
inc
sbb
outsb
pop
lea
ret
mov
jbe
notl
add
mov
or
into
mov
push
jnp
outsb
inc
cmpsb
and
imul
popf
xchg
sbb
xchg
push
in
cmp
xchg
mov
sahf
testb
test
cltd
ficomps
inc
dec
int3
cmp
jae
sub
enter
xchg
loopne
adc
or
int3
adc
ljmp
push
insb
aas
fsts
cmc
xchg
shlb
cmp
cmc
push
inc
and
add
mov
push
mov
add
icebp
push
mov
std
movsl
push
incb
mov
xor
xor
pop
mov
or
addl
sti
in
loop
pop
gs
sbb
nop
jae
xor
ret
push
push
add
xchg
rcll
idiv
jle
sub
ret
add
mov
fs
add
ficompl
ja
or
cwtl
es
adc
cld
pop
insl
enter
outsl
push
sub
or
add
pop
stos
pop
inc
nop
add
add
xor
sbb
add
test
sbb
lds
inc
xchg
xchg
dec
xchg
je
mov
push
sbb
push
sbb
add
push
dec
inc
cmpl
in
xor
adc
adc
jns
imul
jnp
add
xchg
cmpsb
or
sbb
xchg
lea
sub
cwtl
jp
xchg
dec
sbb
pushf
popa
adc
jb
xor
add
pop
push
stos
ljmp
loopne
nop
push
daa
or
ds
pushl
jmp
jecxz
lock
mov
jle
out
jns
xchg
push
push
aaa
push
push
lock
mov
fcoml
mov
daa
arpl
sub
mov
push
out
push
movsb
sbbl
bnd
orl
or
fidivrs
gs
push
jae
lea
and
sub
sbb
adc
decb
std
stos
push
cmp
mov
push
xor
lea
and
or
orl
adc
test
inc
sbb
or
mov
push
shrb
std
add
add
hlt
push
enter
movsb
sub
cltd
inc
ja
mov
jbe
jne
leave
out
test
test
xchg
add
add
ret
mov
ja
push
sub
dec
push
add
call
into
lods
ja
js
int
and
out
pusha
and
inc
xchg
pop
lret
add
pop
push
push
stos
popa
inc
pop
mov
pop
jle
addl
pusha
in
push
xor
repnz
std
adc
outsb
add
lret
idiv
mov
jmp
xchg
test
fs
dec
pop
sbb
push
add
add
jl
sub
jnp
push
jbe
adc
fwait
or
inc
inc
or
inc
mov
or
into
adc
std
arpl
xor
mov
add
xchg
and
adc
shlb
stos
xchg
cld
je
mov
adc
sbb
adc
inc
cmp
ja
cmpb
push
and
fwait
lock
sbb
add
sbb
cmp
jb
adc
jo
push
push
mov
cli
push
sub
data16
mov
cmp
sub
push
inc
or
add
mov
ljmp
or
outsl
and
sahf
mov
jmp
mov
adc
imul
in
shlb
lea
cli
ja
cmpb
out
nop
inc
adc
push
xor
lcall
mov
into
add
jecxz
and
push
or
subb
jmp
addr16
test
mov
dec
pop
jae
imul
imul
test
es
fldl
repz
and
or
adc
push
mov
imul
mov
or
mov
and
jno
sbb
cmc
fnclex
push
mov
cmp
incb
jmp
or
mov
fiaddl
mov
xchg
in
mov
sub
mov
dec
sbbl
add
cwtl
jae
pop
or
outsl
xor
jo
lds
scas
cmp
scas
push
rclb
movl
add
pusha
and
lcall
sbb
push
mov
or
add
loopne
pop
mov
xchg
lcall
jmp
icebp
jb
mov
into
push
adc
xorl
ret
dec
ljmp
inc
cmpl
rolb
mov
xchg
sub
inc
dec
xor
and
cmp
movsb
inc
mov
xor
and
enter
inc
lea
add
lret
dec
icebp
ret
push
adc
xor
popf
jne
pusha
jl
movsb
dec
call
add
push
pop
cmp
adc
dec
sub
add
outsb
repnz
inc
mov
data16
fiadds
inc
xchg
mov
dec
sbb
ja
mov
pop
or
lods
add
add
sbb
test
adc
stc
or
pop
sbb
pop
push
pusha
cltd
pop
sbb
pop
data16
fcompl
jg
and
jbe
mov
lea
rcrb
dec
push
jmp
cwtl
fwait
or
cmp
pop
fwait
push
and
pop
js
ret
shl
cmp
mov
adc
xor
orl
jne
sbb
rolb
pop
xchg
push
das
and
mov
or
test
sbb
ror
cwtl
add
inc
and
sbb
ret
shrl
fwait
mov
mov
cmp
and
inc
sub
dec
or
test
pushf
push
addr16
adc
cmp
mov
imul
or
mov
cmc
enter
out
mov
pop
fsubr
adc
mov
popf
rolb
sub
xor
orb
cmc
and
and
out
adc
add
clc
or
or
or
jns
shll
cmp
mov
stos
push
inc
cmp
push
mov
das
inc
cmc
int3
jmp
call
mov
pop
cli
arpl
shll
mov
and
pop
add
mov
push
xchg
push
lock
fisttpll
ret
mov
mov
inc
cmp
pop
mov
pusha
mov
jl
inc
cmp
mov
dec
shr
cmp
sub
mov
fcom
adc
cmp
nop
in
negb
add
insl
dec
movsl
mov
add
lahf
xchg
or
testl
addl
mov
sub
mov
imul
xchg
xchg
or
repz
test
dec
add
add
je
pop
subl
or
jle
fnstcw
jge
mov
rcrl
adc
push
outsb
fldl
and
mov
push
inc
cmp
jl
pop
outsl
jmp
outsb
fldt
and
or
jle
shlb
add
xchg
aad
xor
int3
aam
sbb
cld
test
xchg
clc
or
push
sbb
or
jecxz
cltd
test
pop
jo
orl
insb
mov
cs
sub
or
jle
sbb
adc
fwait
sbb
mov
aaa
xor
mov
sub
dec
or
push
jl
mov
loopne
popf
and
sub
je
das
imul
or
lea
ss
xor
in
pop
sarb
mov
pushf
andb
jg
test
jp
jmp
push
jmp
lock
adc
sbb
push
pop
loope
ret
cmc
pop
or
push
movntps
das
loopne
std
cmpl
add
xor
fistps
mov
and
or
mov
clc
ss
inc
mov
push
in
std
outsl
in
out
jb
loope
and
add
mov
enter
shl
add
loope
shl
xor
mov
mov
cmp
movsl
les
push
movsw
movsb
mov
mov
arpl
sub
pop
mov
jp
jge
dec
sub
push
push
add
add
add
loopne
xchg
add
lock
sub
mov
inc
inc
aas
add
andl
sub
or
loopne
inc
xor
in
aam
mov
jge
sbb
loopne
lock
inc
cmc
fcmovnb
pushw
aas
sbb
or
mov
shlb
mov
add
inc
je
mov
add
mov
ja
jl
in
lods
inc
fwait
icebp
inc
pusha
test
invd
ret
pop
inc
nop
push
xor
into
into
or
sbb
xor
jle
lock
lods
pushf
cmp
push
or
enter
inc
xor
gs
mov
and
sub
xchg
sub
xor
sbb
ret
inc
int3
inc
adc
sbb
dec
ret
or
fiaddl
iret
or
add
push
add
adc
push
adc
xchg
aaa
cmpb
testb
imul
jge
stos
dec
and
xchg
leave
add
insl
in
mov
adcl
ficoms
xor
in
pushf
xchg
jo
add
sbbb
mov
stos
sbb
cmp
or
outsb
inc
sbb
mov
mov
ss
push
mov
pop
xor
mov
mov
inc
xor
mov
inc
mov
imul
adc
and
add
cmp
and
cs
ret
push
dec
jg
mov
push
loopne
loopne
mov
or
js
or
sti
pop
mov
jmp
das
lods
push
gs
sub
cmp
jge
cmp
fst
inc
adc
fiaddl
adc
les
inc
cmp
add
xor
push
loopne
cmp
mov
push
dec
test
lret
pop
push
ret
mov
adc
jecxz
and
in
dec
stos
pusha
cmp
jne
test
add
dec
dec
jmp
sbb
hlt
movsb
inc
xchg
fptan
in
add
lcall
mulb
xlat
inc
hlt
pusha
push
shlb
xchg
xor
xchg
pushf
sub
dec
push
nop
mulb
push
sbb
mov
popa
jb
and
adc
pop
mov
imul
sbb
pop
jmp
rorb
ficompl
xor
cmp
sbb
push
mov
subl
repz
mov
bound
add
xchg
sub
inc
cmpsb
and
cs
sub
sub
sub
cmp
shrb
jns
nop
out
adc
std
cmp
mov
sbb
int
mov
cmp
data16
je
or
xchg
repz
add
or
adc
jns
pusha
iret
inc
or
push
ret
push
jecxz
and
push
dec
addl
mov
nop
adc
es
mov
ret
adc
mov
testb
push
sub
cmc
clc
inc
push
push
filds
loopne
mov
push
out
mov
loopne
mov
or
scas
mov
cmp
nop
push
mov
jecxz
jo
xor
lcall
inc
inc
push
or
sbb
push
push
clc
xchg
lcall
mov
dec
movsb
push
das
hlt
lret
addb
mov
loopne
cmpsb
pop
icebp
cmpl
fisttpll
daa
rolb
or
out
cmp
pop
pop
nop
insl
add
repnz
push
ret
push
push
cmp
push
push
lock
sub
js
push
fdivl
add
add
in
das
inc
repz
hlt
jmp
incb
mov
adc
mov
mov
lcall
push
sbbb
jge
cmpl
jne
sbb
mov
mov
push
pop
jo
pop
push
mov
push
xchg
inc
add
add
imul
add
mull
add
jo
out
cmp
jle
rclb
xchg
ret
add
icebp
fcoms
movsb
xor
call
cmp
in
mov
xor
fcoms
xor
mov
inc
sub
pop
or
in
jo,pt
push
insl
scas
jge
inc
cltd
pop
push
inc
jbe
adc
pop
jmp
cld
lock
popa
dec
ret
hlt
ret
arpl
es
adc
dec
insb
mov
or
mov
push
insb
xor
lcall
xchg
cli
dec
jo
imul
sub
jge
push
inc
add
add
or
sub
inc
push
lcall
addl
into
or
cmpsl
xor
test
out
les
mov
push
add
push
inc
and
mov
inc
cmp
push
jae
mov
iret
cli
add
lret
jne
ss
add
add
popa
xchg
xor
cmp
xchg
jo
clc
xlat
push
sub
test
cmp
je
push
decl
hlt
cmpb
aaa
sbb
adc
mov
cmp
adc
cmp
adc
inc
mov
jmp
sub
imull
jnp
sbb
push
adc
add
add
jno
or
pop
sub
fstps
popa
cmp
or
ds
outsl
clc
dec
aad
push
cmp
pop
pop
and
sbb
xor
es
add
sub
cmp
and
jae
dec
and
ret
pop
mov
in
sbb
aam
sbb
adcb
cmp
es
jne
jg
add
sub
or
sahf
dec
hlt
loopne
mov
pop
mov
js
bound
inc
ds
insl
ja
loopne
add
and
out
inc
pop
push
pop
jnp
or
shlb
mov
test
lahf
push
push
mov
mov
leave
or
inc
mov
sub
cmp
imul
jno
fcomp
push
or
dec
mov
push
jb
mov
cmpsb
loop
add
push
mov
mov
pushl
iret
pop
mov
sbb
add
jae
lcall
push
fdivrs
jg
lea
testb
or
es
mov
repnz
roll
fsub
cmpsl
fiaddl
pop
cmpb
leave
jmp
lock
call
sbb
pop
push
inc
adc
jb
leave
lret
into
jne
push
xchg
shrb
cmp
pop
add
cmpsl
xchg
adc
stc
jmp
outsl
clc
push
or
add
sbb
jmp
test
dec
pop
pop
xor
sub
add
lods
adc
outsl
mov
mov
loopne
je
pushf
inc
out
std
cwtl
nop
inc
shrb
push
add
push
adc
and
fildl
mov
push
xchg
cmp
in
dec
jp
bound
sbb
jp
jne
cmp
lret
shl
inc
push
sub
repz
imul
sbb
sub
mov
push
push
and
sbb
and
les
bswap
shll
pop
jmp
outsb
test
xchg
xchg
cmp
aaa
inc
sbb
and
cltd
sbb
fs
mov
inc
hlt
inc
jl
and
xchg
add
sti
sub
adc
aam
mov
add
pop
sbb
xchg
push
andl
ja
pop
cltd
push
and
and
cmpb
push
ja
push
sbb
push
or
push
xchg
pop
cmpsb
mov
push
fwait
mov
inc
adc
out
dec
and
xlat
je
or
addr16
adc
int
fstpl
jne
add
cld
loopne
cmp
xlat
and
outsb
dec
shrl
dec
hlt
lahf
test
je
mov
add
cmp
jne
or
movsb
and
loope
and
jle
rolb
and
addb
orl
cld
jb
test
mov
push
lcall
dec
jmp
xchg
loopne
subb
sbb
les
std
cld
mov
jo
rcr
add
pop
cmp
dec
mov
add
push
scas
cmp
push
movsl
and
push
lods
inc
clc
pop
cmpb
mov
sub
stos
xor
addr16
mov
xchg
adc
or
jp
js
test
sbb
add
mov
or
add
pusha
out
outsl
xchg
fcoml
mov
nop
cld
pusha
dec
adc
imul
add
mov
loope
or
adc
in
mov
add
clc
cmpl
arpl
loopne
ljmp
mov
sbb
jne
adc
loopne
mov
mov
test
add
fistl
xor
or
cs
test
adcl
cmpsb
repz
and
add
adc
ret
orb
out
mov
xchg
or
fcmovb
mov
cmp
pop
mov
adc
or
pusha
aam
jmp
push
xlat
xor
push
xchg
push
or
adc
je
loopne
test
js
push
cmp
dec
sbb
adc
movsl
repz
jnp
lea
pop
inc
fwait
and
jl
pop
in
jle
inc
test
pop
cmp
dec
pop
arpl
xchg
cmp
adc
scas
arpl
lods
xor
xchg
dec
ja
in
jmp
loopne
inc
add
push
add
fisttpl
fwait
xchg
sub
jb
sub
pop
test
ret
jecxz
and
mov
xchg
nop
test
mov
stos
aaa
or
jge
and
adc
xor
adc
jecxz
add
and
addb
sub
sbb
dec
aaa
out
add
ja
or
dec
push
ds
jae
loope
mov
adc
adc
into
add
call
into
jno
and
jle
scas
test
sub
xor
sti
push
into
mov
repz
pop
mov
fdivr
sbb
lock
mov
fldenv
insb
cli
ret
push
dec
push
inc
movsb
aad
dec
mov
pop
mov
sbb
sbb
ret
icebp
or
shr
call
repnz
or
push
add
es
icebp
xor
push
dec
jnp
imul
pop
mov
pop
inc
push
ds
mov
out
jb
push
add
and
dec
pushf
mov
lods
scas
pop
jb
shrb
repz
jg
add
sahf
lret
add
push
aam
sti
and
and
cmc
or
in
mov
push
jl
movsb
jbe
mov
pop
pusha
push
inc
inc
xorl
pop
jb
cmp
inc
js
jmp
push
lahf
popf
daa
shll
ficoml
adcb
popf
push
adc
sbb
or
pushf
mov
daa
mov
xor
jg
adc
pop
es
daa
lods
inc
jnp
sbb
cmp
push
fcoms
mov
add
and
lret
rorl
jne
repnz
or
fsub
imul
sub
popa
dec
xchg
mov
iret
pusha
orb
insb
sbb
fsts
pusha
mov
push
movsb
jmp
outsl
sbb
lahf
daa
jne
je
jmp
or
push
dec
dec
xchg
and
push
dec
outsb
rclb
clflush
add
sub
sbb
pop
js
mov
jg
test
fcomps
daa
subl
js
push
xor
icebp
out
mov
bound
dec
mov
cli
mov
and
mov
push
aaa
and
pushf
es
push
mov
aaa
sbb
pop
pop
and
pop
mov
mov
mov
push
or
es
push
inc
push
ds
inc
and
mov
pop
or
and
jbe
sub
test
mov
pop
mov
dec
sub
and
rorb
nop
and
inc
mov
aas
dec
enter
cld
ss
jb
stos
push
dec
out
pop
in
shl
adc
pushf
push
xchg
jl
adc
dec
push
push
xchg
mov
cmpsl
adc
aam
cltd
cltd
mov
faddl
cltd
adc
adc
push
loop
or
jne
push
nop
cmp
test
xchg
fcoms
adc
addr16
aaa
cmp
push
dec
cmp
push
jno
xor
cmpsl
sti
xchg
pop
ja
dec
or
mov
jmp
adc
out
adcl
rorl
jbe
sub
and
dec
dec
and
jno
mov
jp
pop
mov
je
movl
cmp
mov
adc
inc
mov
jo
or
jbe
xchg
adc
fsubrl
jle
rcrb
js
and
ret
and
call
push
mov
lods
inc
xchg
and
xor
out
jl
add
loopne
add
insl
test
or
inc
std
or
sbbb
outsb
decl
or
fnstcw
mov
and
clc
jg
fs
movzwl
test
xchg
data16
movd
movaps
outsl
xchg
enter
shlb
jle
xor
int
add
lret
je
sti
mov
push
mov
jl
and
lret
or
notl
mov
or
les
ret
adc
jnp
mov
push
xlat
fistpll
pop
aam
ret
or
add
adc
add
sub
pop
add
outsb
ret
mov
mov
xlat
xor
inc
addsd
int
add
fdivrp
fcmovb
sbb
sbb
inc
mov
adc
and
jmp
xor
imul
pop
icebp
lret
stos
add
cmp
cs
xchg
xor
xor
push
inc
mov
incl
loopne
xor
aam
adc
sbbb
pop
stc
push
push
ret
jge
mov
jge
sub
push
ret
jge
pop
mov
in
adc
push
mov
test
or
inc
sbb
scas
test
pop
and
push
add
fisttps
and
cmp
jb
neg
sahf
je
sub
mov
push
push
add
inc
sahf
loopne
add
or
clc
lret
inc
je
rep
mov
and
dec
cltd
dec
ljmp
and
add
sbb
int
pusha
fcompl
add
roll
jb
push
sbb
push
pop
and
pop
popa
mov
pop
pop
scas
push
mov
aas
sbb
inc
adc
or
rep
jmp
jmp
in
nop
sub
cmp
lea
add
xor
dec
fnstcw
lea
test
cmp
fs
or
lahf
mov
sarl
pop
cmpsb
fnstenv
add
add
fiaddl
mov
dec
add
movl
pushf
inc
add
add
or
out
lock
call
dec
repz
mov
mov
call
call
pushf
out
sahf
hlt
hlt
clc
clc
cld
fdivrs
dec
adc
clc
fnstenv
mov
cmp
pop
xor
cmp
andl
sti
and
mov
ret
push
sbb
lea
jl
cld
or
adc
std
cld
out
mov
adc
xchg
daa
fnsave
mov
pop
nop
int3
shr
mov
adc
fiaddl
jl
mov
mov
mov
add
popa
inc
push
out
push
add
nop
dec
dec
scas
mov
mov
add
ljmp
mov
or
push
je
jns
jns
test
out
sahf
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
rclb
push
fsubr
sub
adc
dec
push
push
add
pop
pinsrw
dec
daa
ja
rclb
mov
js
and
jbe
call
ret
pushf
cmp
push
daa
mov
add
or
fistps
fdiv
pop
negl
push
cli
pop
sbb
mov
mov
test
je
bound
add
clc
xchg
push
adc
loopne
loope
pop
out
inc
xor
push
inc
inc
push
subb
jle
mov
jmp
jp
je
mov
mov
lcall
jne
mov
pop
and
dec
mov
mov
loop
sbb
mov
das
add
and
lds
and
mov
sbb
insb
jb
or
and
cwtl
mov
ds
push
sbb
sub
cld
or
popf
fdivl
hlt
sub
add
sbb
je
sub
imul
lock
subl
sub
xorb
aam
cmpsb
push
add
lds
fsubl
xchg
inc
push
push
mov
mov
les
xor
out
outsb
adcb
adc
inc
cmp
jne
inc
cmp
inc
pop
push
or
into
call
mov
pop
push
sub
bound
lods
push
push
adc
out
push
push
mov
and
xchg
nop
in
pop
cmp
sbb
rolb
inc
inc
stos
add
inc
cmp
cmp
dec
movsl
pushf
insb
cmp
xchg
and
add
sbb
dec
repnz
adc
push
add
push
xchg
inc
jae
push
lret
adc
adc
or
orb
mov
inc
pop
push
add
ror
rorl
mov
sbb
dec
into
sbb
mov
inc
hlt
cmp
add
and
sbb
cmpsl
sub
enter
sbb
adc
or
shl
shrb
leave
sbb
jb
mov
mov
rolb
cmp
mov
mov
push
movsb
push
rol
inc
jno
std
inc
inc
cmp
aam
lret
jne
sbb
loope
lock
xchg
sbb
push
inc
inc
xor
lcall
jmp
mov
aaa
pop
negl
add
jmp
xchg
aaa
mov
mov
and
inc
or
adc
int3
icebp
outsb
adc
mov
orl
mov
stc
or
pop
push
rcll
test
push
shl
fs
aad
int3
dec
push
and
je
dec
test
xor
push
xchg
mov
mov
push
cmp
jge
stos
mov
shr
or
mov
cmp
lock
jmp
fdiv
xchg
in
orl
out
pop
jo
fmulp
test
and
and
add
idivb
sbb
cli
inc
jno
jmp
test
fidivl
insb
in
or
adc
int
leave
adc
adcb
push
or
scas
mov
add
fwait
lods
inc
or
bound
inc
sub
inc
imul
sbb
add
mov
mov
jbe
push
xor
pop
div
jle
push
cli
jae
or
imul
js
jno
data16
xchg
rcrb
loopne
sarb
shr
adc
fidivs
sub
adc
jmp
lcall
sbb
out
cmc
push
mov
mov
in
add
das
movsb
dec
xor
ficomps
frstor
pushl
pop
add
mov
test
push
pop
ret
adc
mov
aad
push
popf
and
movsl
js
xor
adc
mov
mov
mov
jb
stc
adc
ss
shl
pop
hlt
inc
rorl
in
dec
stos
sbb
add
mov
jns
shld
rep
xor
mov
push
cmc
xchg
inc
rorb
and
inc
push
insl
call
xor
inc
mov
lods
sbb
js
sbb
scas
arpl
fimull
add
mov
sbb
arpl
adc
ret
cmp
xchg
adc
orb
mov
push
add
imul
js
adc
faddl
loopne
out
add
jne
push
les
enter
andl
dec
pushl
push
jp
insb
lods
mov
lock
test
cltd
xchg
mov
push
mov
fadd
ret
mov
lahf
push
push
cld
mov
call
mov
sub
mulb
in
sbb
outsb
jo
idivb
cmpsb
dec
lahf
sbb
jmp
cmpsl
mov
mov
sbb
andl
rcrb
into
or
lret
rorl
jno
cmpsl
mov
sti
mov
jmp
push
push
mov
pop
xor
and
cmp
hlt
mov
or
rcrl
js
lods
mov
testb
inc
mov
adc
popa
adc
jae
loopne
lret
mov
jmp
enter
add
je
inc
scas
je
test
cli
pushf
push
aas
push
and
push
jmp
inc
and
lret
mov
or
inc
or
dec
daa
and
inc
pop
fincstp
ret
mov
cmp
jne
or
add
cmp
and
shr
inc
xor
inc
loop
adc
push
mov
add
xor
js
inc
outsl
push
or
rolb
xchg
test
mov
add
sbb
fsubrl
add
cmp
lds
and
mov
mov
popa
adc
sti
rcll
cld
ljmp
clc
mov
pop
lcall
mov
sub
pushf
add
cmp
andl
push
daa
mov
sbb
loope
or
adc
mov
mov
adc
shll
in
rol
cli
or
inc
shrl
pop
das
xchg
and
xor
or
lret
cmp
xlat
arpl
dec
insb
rcrb
pop
arpl
jl
dec
cmc
mov
mov
jno
lret
pop
mov
or
and
pop
push
inc
push
inc
dec
loop
test
enter
or
mov
lret
cmpsl
pop
lea
mov
jne
and
or
xor
mov
sahf
fcoml
jle
mov
sahf
xchg
pusha
bound
or
andb
jmp
jns
lds
aaa
rclb
mov
das
stos
fnstenv
sbbb
xchg
cmp
repnz
adc
inc
movsb
adc
adc
int
cwtl
dec
and
pop
sbb
outsl
dec
push
push
push
pop
in
mov
jl
xor
sub
je
pop
push
mov
lea
insl
jge
imul
add
dec
add
in
inc
push
daa
add
adc
add
cmp
jle
add
jns
cmp
flds
add
nop
add
pusha
in
xchg
pop
push
pop
pop
lcall
or
enter
dec
or
repnz
sub
or
iret
enter
or
rclb
add
or
or
pop
push
and
inc
sahf
xchg
add
sbb
ja
push
sub
in
adc
pop
adc
fwait
pusha
iret
enter
adc
jns
cmp
adc
adc
add
adc
add
adc
lcall
adc
ror
push
push
push
push
jb
cmp
pop
pop
xor
jns
out
sbb
lcall
sbb
call
pop
sbb
xchg
inc
enter
sbb
jns
sbb
jb
sbb
add
mov
sbb
iret
pusha
push
push
inc
call
enter
pop
jne
add
add
sub
cmp
mov
movl
add
jmp
fiaddl
and
fmull
dec
push
shlb
in
push
in
jno
repnz
sub
rol
lea
add
aad
cmp
mov
out
fwait
out
ret
xor
enter
add
call
adc
dec
dec
cwtl
jmp
jb
sub
and
or
sbb
or
in
in
in
and
repnz
add
mov
out
out
inc
enter
out
sbb
pop
inc
push
imul
in
cmp
icebp
icebp
cmp
sahf
xchg
pslld
out
std
lret
mov
pusha
iret
pushf
lcall
fwait
pop
in
sbb
mov
jb
cmp
div
pop
in
repnz
cmp
cmp
push
fsubs
dec
clc
clc
clc
cltd
adc
add
inc
stc
inc
stc
lock
mov
iret
cli
cli
iret
sti
push
jns
sbb
sti
stos
cld
cld
rclb
outsl
cld
push
cmovl
jnp
pusha
ss
xor
sbb
iret
repz
adc
rcl
push
ret
inc
or
add
xchg
jb
out
mov
in
sbb
inc
orl
es
or
imul
enter
in
in
adc
inc
mov
stc
daa
xchg
sti
out
orb
outsb
inc
repnz
add
xor
sub
sbb
out
jmp
cltd
fists
in
add
sub
cli
sbb
js
out
out
mov
cltd
push
lock
and
das
cli
push
cli
xor
inc
add
jmp
cmp
xor
sar
leave
add
stc
lret
and
jns
lcall
mov
xor
add
stc
les
cmp
lret
sti
sti
cltd
cmpb
scas
mov
jb
or
jl
sbb
cmc
dec
dec
and
or
sub
mov
fnstsw
jne
icebp
mul
pop
shl
bound
and
test
mov
out
out
les
out
pop
repnz
mull
mull
sti
imul
ljmp
mul
inc
repnz
notb
mov
insb
out
in
pop
xchg
out
jno
notb
leave
and
in
rcll
cs
repnz
inc
pop
lret
mov
pop
xchg
cmc
and
pop
jns
lcall
jns
pop
out
fwait
and
jns
inc
clc
clc
jecxz
repnz
jmp
popa
cmp
xchg
cmpsb
cli
cli
jno
and
jne
adc
xchg
pop
push
hlt
sbb
das
pushw
data16
mov
cmpsl
xlat
hlt
idivl
jo
sti
cs
add
pop
lcall
loope
loope
xor
loope
repz
inc
repnz
push
cmp
mov
imul
dec
in
inc
repz
adc
andl
jb
pusha
leave
push
sbb
xchg
cmpsb
jmp
mov
mov
xchg
repnz
mov
jo
sbb
out
in
cmc
inc
xlat
mov
and
add
cmpl
mov
loope
sbb
rclb
js
divb
inc
repnz
pop
repnz
lea
cmc
cmc
jb
cmp
cmc
add
jecxz
dec
dec
pop
pop
ffree
lock
pop
add
popf
lock
stc
and
mov
and
lock
pop
xlat
and
js
and
and
test
ss
test
sbb
mov
sub
out
ret
ljmp
push
add
iret
enter
add
add
jp
or
adcb
adc
adc
or
or
dec
add
sahf
push
fstl
jmp
or
out
sub
add
and
fstpt
jge
inc
add
push
jnp
pushf
dec
add
imul
in
inc
or
fwait
int
pop
jle
loope
roll
cmp
shrl
push
xor
pop
int
mov
ret
cmp
rorb
lcall
mov
test
xchg
mov
push
add
mov
imul
test
rolb
aad
adc
pop
jnp
subl
adc
shll
popa
adc
xor
repnz
add
pop
pop
fs
rorb
or
pop
push
or
adc
gs
lret
xor
push
les
insb
sub
mov
add
sahf
cmp
push
fmuls
and
add
aad
mov
add
dec
xor
push
cmp
stos
add
adc
mov
sub
daa
xor
inc
dec
cmp
sbb
arpl
and
inc
add
mov
call
adc
int
sbb
jmp
roll
in
inc
pop
aas
xchg
call
loopne
in
sub
pop
lods
fdivrp
add
inc
mov
lods
insl
mov
int
sub
adc
cmp
inc
jb
pop
sbb
les
cmpsb
popa
movl
inc
inc
add
inc
bound
cmp
and
jmp
jb
dec
aam
cmp
inc
sbb
test
xor
add
add
pop
sahf
mov
in
and
nop
dec
xor
adc
xor
pop
xor
cmpsb
or
inc
orb
and
pop
push
sub
movsl
roll
sub
inc
inc
stos
mov
into
enter
add
scas
xorl
inc
and
sub
imul
mov
sub
cmpsl
fmuls
inc
jp
inc
sub
push
add
sti
outsb
or
jl
or
lods
push
mov
popf
xchg
ret
lea
cmpl
dec
ljmp
inc
cmp
xchg
push
or
inc
pop
mov
cmp
jne
orl
add
adc
jne
sub
sub
in
jmp
fcmovnb
test
and
cmp
sub
xchg
gs
or
inc
cli
jmp
mov
fmuls
jge
lret
adc
or
adc
test
repz
add
add
lds
or
lret
or
sarb
and
mov
jmp
mov
inc
mov
lret
sub
cmp
adc
xor
cmp
jae
push
insb
jb
movsb
cmp
scas
xchg
and
dec
and
subb
xor
ljmp
test
pop
hlt
sbb
outsb
cmc
mov
or
test
cmp
je
mov
imul
pop
jne
jbe
cld
popa
mov
inc
mulb
mov
mov
push
stos
lds
rolb
mov
imul
and
das
in
shrb
or
cmpl
push
xor
adcl
inc
inc
xlat
cmp
int
stc
add
inc
dec
int
jo
or
push
push
lods
xor
fidivs
fbld
push
sub
push
outsb
popa
jno
lock
sbb
fildl
loop
daa
jo
dec
push
es
cld
inc
mov
add
sub
and
js
xchg
cmpsb
mov
jmp
or
and
mov
sub
pop
push
adc
mov
icebp
inc
aad
aas
adc
fstpt
inc
pop
push
cmp
sbb
add
jne
jnp
pusha
outsb
and
and
mov
repz
fbstp
shlb
push
cld
jne
mov
push
cmp
jne
repz
dec
es
jne
call
dec
es
cmp
out
add
aas
ja
inc
adc
repz
cmp
jmp
std
std
jmp
cld
sahf
cmp
sub
mov
adc
je
inc
aam
into
or
mov
dec
push
sub
loopne
jbe
repnz
or
lock
xchg
loopne
adc
adc
bound
add
mov
dec
pop
fsubp
pop
push
jne
or
adc
jno
leave
push
pop
sbb
and
or
push
leave
out
push
int3
add
orl
adc
in
mov
sahf
je
dec
add
push
xchg
and
int
daa
mov
mov
xor
ja
adc
repz
in
rolb
bound
dec
jne
jo
loopne
int3
xor
movsl
sarl
or
ret
push
add
fstp
cwtl
xchg
out
stos
fdecstp
ret
push
stc
aad
lahf
andl
inc
adc
add
ss
or
adc
push
jmp
sbb
scas
jne
dec
outsb
out
jns
mov
dec
mov
aas
xor
push
mov
pop
outsb
ret
in
inc
jno
ja
les
dec
cmpsb
push
or
cmp
ret
ret
push
orb
mov
loopne
jne
and
add
ret
jmp
cmp
and
dec
xchg
test
pop
push
nop
call
sub
and
dec
stc
jns
push
es
sub
testb
adc
adc
mov
mov
sahf
lock
or
or
test
pop
push
dec
jne
and
mov
pop
inc
and
je
loopne
dec
cmpsb
mov
push
imul
ss
insb
mov
or
lods
sub
repnz
jg
push
mov
mov
incl
inc
decl
jne,pn
loop
and
push
inc
push
push
ljmp
pop
inc
mov
cmpl
mov
jbe
push
cltd
pop
cmp
idiv
add
mov
pusha
or
mov
adc
ja
sub
aaa
dec
mov
push
xor
gs
or
bnd
cmp
jae
dec
ja
or
push
int3
pop
jae
pop
jbe
sub
adc
dec
lock
mov
pop
sub
mov
hlt
movsb
cmp
rolb
mov
ret
test
dec
sbb
test
cwtl
add
add
test
mulb
or
dec
dec
je
push
push
jne
inc
adc
pop
sarl
cs
xchg
insb
adc
fidivrs
dec
sub
pop
decb
out
sub
push
es
mov
inc
dec
rcrb
mov
push
rorl
ret
mov
and
shrl
sub
cmc
mov
stc
mov
xor
xchg
out
add
pop
push
cmp
or
notb
push
adc
fidivl
sarb
mov
stos
ret
mov
mov
sub
sbb
xchg
loope
fsubr
pop
cmp
mov
sub
sub
insl
or
lock
push
push
cltd
pop
idiv
sbb
ret
movsb
mov
inc
out
cmp
dec
inc
nop
or
or
mov
mov
je
xor
fs
push
add
mov
test
jbe
insl
mov
add
call
movsl
bound
pop
insb
sub
lea
jecxz
repnz
sbb
dec
jae
mov
or
sbb
or
add
adc
jg
jmp
incl
pop
loop
jnp
loop
and
sub
xchg
pop
dec
inc
daa
fwait
js
mov
loopne
shlb
data16
adc
mov
mov
cmp
mov
jge
pop
je
sbb
pusha
popl
jl
fs
test
mov
dec
les
mov
mov
int
int3
dec
jo
sub
je
dec
inc
push
jne
mov
xor
shrb
popa
adc
inc
out
mov
les
push
lcall
pop
popl
or
mov
pop
push
sbb
or
adc
lcall
popa
movsb
mov
stc
pop
fucomi
pop
pop
push
adc
lcall
push
push
shl
ficoml
pop
adc
xlat
and
jp
and
test
push
adc
push
je
mov
push
movsb
test
enter
mov
arpl
and
jge
add
movsb
shl
jne
push
aam
sbb
imul
push
adc
pushw
pop
add
inc
adc
or
out
iretw
repz
add
push
lods
and
adc
orb
cmpsl
fsts
ss
ljmp
nop
ret
xchg
rorb
rolb
fnstcw
xor
call
fsts
mov
pusha
hlt
dec
js
loop
mov
push
sahf
jbe
mov
dec
stos
jecxz
add
push
inc
jg
xchg
push
sub
push
jmp
cwtl
sub
mov
inc
subl
mov
inc
dec
sarl
clc
inc
cmp
je
xchg
mov
cli
xorb
adc
add
mov
jle
dec
je
popa
mov
shll
bound
mov
pushf
xor
add
dec
mov
outsb
cwtl
push
mov
incl
incl
push
mov
push
inc
sbb
in
or
dec
sub
inc
mov
pop
or
mov
push
add
movsl
jge
sbb
add
lods
das
ret
das
dec
push
fs
insb
jp
jmp
add
ja
bound
push
push
hlt
mov
ror
jg
add
test
adc
sar
test
cmp
or
adc
mov
and
sar
add
jne
int3
dec
mov
or
pop
inc
sbb
nop
or
popa
shrl
add
sbb
cli
frstor
cmpsl
mov
movsb
jb
add
mov
jns
lret
leave
lretw
mov
or
push
adc
dec
js
xchg
rcrl
add
rcrl
mov
popa
jmp
jne
jmp
dec
or
repnz
push
jmp
das
jne
inc
ds
jmp
dec
sbb
je
ljmp
out
dec
loope
adc
and
xor
ror
stos
sbb
ret
adcb
in
pop
ljmp
mov
gs
adc
jb
lods
out
insb
loopne
in
or
pop
mov
push
push
push
jns
and
ljmp
push
push
mov
cmp
inc
or
cmp
cmp
mov
sub
cmpsl
mov
sbb
pop
nop
sarl
cmp
ja
cmpb
jne
inc
inc
jo
int3
jmp
mov
pop
mov
outsl
inc
insb
ja
or
mov
jge
cltd
pop
stos
jae
call
mov
leave
fisttpll
clc
jne
pop
xchg
sbb
mov
inc
jmp
aas
sub
mov
xchg
add
int3
in
dec
imul
scas
mov
mov
nop
inc
fnstenv
and
pop
dec
das
movsl
add
and
pop
repnz
sub
xor
pop
fldz
pop
fidivrl
adc
add
push
es
fprem1
dec
nop
adc
pop
sbb
adc
es
rep
leave
shll
pop
divb
cmp
inc
cltd
push
jne
jns
pushf
or
imul
push
ss
aas
outsb
mov
orl
fnsave
arpl
jmp
pop
arpl
xchg
push
jno
imul
lds
sub
shll
iret
or
push
pop
or
pop
jp
shrb
push
std
rol
inc
add
mov
fs
or
jne
sbb
jno
adc
test
add
mov
pusha
adc
loope
jecxz
ds
cmpsl
cld
jo
popf
or
or
into
popa
inc
test
outsb
jbe
arpl
xchg
jl
jbe
pop
mov
push
cwtl
and
push
mov
andb
shrb
insb
or
loop
loopne
js,pn
mov
xor
rcrl
or
pop
cmpsb
imul
inc
sbb
inc
mov
insl
clc
addr16
or
sahf
enter
xchg
addr16
int3
or
shl
jmp
add
out
movsl
mov
arpl
and
xor
pop
sub
push
mov
jmp
mov
imul
inc
dec
jg
pop
sbbl
and
mov
pop
data16
fadds
sbb
or
adc
jbe
fs
lods
stc
push
mov
popa
add
pop
jmp
pop
sbb
cld
arpl
imul
xchg
xorb
cmp
xchg
ja
lea
inc
ret
das
loopne
push
in
pop
pop
mov
mov
lods
jge
cmp
pushf
sub
call
dec
push
cmpb
inc
sbb
mov
sbb
pop
or
push
dec
mov
subl
js
mov
fcomi
jae
cmp
xorb
inc
inc
jecxz
or
dec
mov
sub
inc
inc
xchg
loope
sub
jg
adc
jbe
add
pop
mov
lcall
xchg
cmp
mov
rcll
insl
ja
pop
xor
ror
rorl
aas
adc
cmc
call
fstl
push
fadds
shlb
pop
sbb
xor
or
sar
xchg
mov
sbb
sbb
dec
hlt
xchg
mov
or
pushl
mov
fs
push
mov
mov
dec
shrb
sub
loop
mov
cwtl
call
test
imul
sbb
mov
push
ret
inc
jge
daa
xchg
push
pop
out
push
lretw
icebp
cmp
sbbl
mov
push
out
pop
adc
int
out
or
jmp
leave
clc
lods
add
and
dec
jl
cmp
movb
lea
pop
lock
or
fmuls
or
cmp
cmp
add
jmp
push
adc
outsb
jbe
outsb
cmp
jb
cmpsb
adc
nop
in
incl
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
ret
jle
ret
adc
xor
xchg
es
aam
fwait
jo
fimuls
jmp
popa
mov
pop
adc
inc
imul
or
sbb
cltd
cmp
xchg
add
adc
test
adc
cs
cmp
or
or
jg
add
mov
in
or
pop
mov
and
push
push
push
rolb
and
sub
fcmovne
xor
lock
cld
fdiv
and
xchg
inc
pushw
imul
cmpsb
add
cmpb
ret
js
and
xchg
mov
loop
lods
pop
clc
mov
loopne
mov
pop
push
shl
clc
pop
ljmp
adc
add
mov
sub
inc
sub
dec
mov
adc
cmp
test
cmpsl
or
pop
mov
inc
test
adcb
mov
cmp
data16
sbb
sar
dec
xor
int
adc
icebp
lea
jbe
pop
mov
les
xchg
adc
inc
sub
arpl
or
mov
hlt
add
movsb
sarb
xor
fisubl
and
pop
adc
pop
sub
add
mov
nop
pop
xchg
jne
or
ret
out
das
sbb
or
push
add
mov
rorl
jmp
pop
push
pop
mov
pop
pop
adc
mov
jmp
jns
int
mov
sbb
stc
sbb
adc
add
add
out
pop
sbb
push
cmp
aam
cmpsb
mov
cwtl
icebp
add
pop
or
jo
stos
jno
mov
add
push
orb
mov
mov
leave
sub
std
add
rcrb
add
cli
inc
sahf
inc
lar
test
lea
mov
and
shl
out
and
adc
lahf
jno
adc
dec
loopne
lods
adc
out
adc
outsl
inc
add
cmpb
xchg
popf
insb
push
lea
loopne
add
lea
xorb
cld
push
or
push
lock
inc
jg
subb
add
js
sub
push
jb
or
je
je
adc
test
or
push
dec
or
rcrl
inc
test
add
mov
or
mov
pop
repnz
push
imul
scas
lea
or
xchg
and
movsb
lock
mov
mov
xor
inc
jg
xor
fdivrs
into
addb
insl
and
add
push
cmp
xchg
jp
xchg
dec
mov
cmp
cmp
jne
push
or
push
adc
mov
mov
das
and
add
pop
or
mov
rorl
adc
test
lcall
mov
cmp
mov
push
lods
lret
test
lds
pop
sub
push
jbe
mov
adc
adc
jg
push
xor
mov
das
sub
sbb
and
es
sub
push
lods
sbb
add
mov
sub
pop
test
out
lods
mov
push
xchg
shr
push
sbb
adc
pop
pop
sarb
leave
loope
mov
fs
loope
jg
adc
pusha
xchg
mov
xchg
pop
sahf
sub
push
call
pusha
sbb
inc
and
lods
sbb
ss
cmp
movsb
je
pop
mov
or
push
fisubrs
add
adc
or
les
shr
test
ds
ret
push
sbb
mov
and
bound
insb
pop
xor
mov
add
shl
insb
fldl
push
and
or
pop
push
xor
pop
sub
mov
aad
mov
inc
dec
jne
lea
dec
cmp
or
cmp
jp
jle
xchg
adc
les
imul
mov
stos
pop
mov
mov
add
hlt
mov
and
xor
lods
and
lea
addb
jmp
pop
xchg
or
stos
ret
pop
cmpsb
inc
or
adc
push
cmp
mov
push
repnz
push
fisubs
mov
ror
test
sub
pop
loopne
imul
push
inc
inc
outsb
inc
cld
popf
dec
loopne
dec
pop
and
int
cld
inc
mov
push
sbb
cld
xchg
lret
adc
je
and
clc
out
or
or
test
add
mov
push
jnp
out
notl
leave
sub
mov
cmp
add
lea
sub
or
push
icebp
test
ret
jae
ljmp
jmp
add
cld
rcll
ret
lock
push
push
inc
jo
jg
loope
sbb
mov
sbb
add
xchg
pushf
sub
mov
movsl
hlt
push
cmc
inc
sbb
js
pop
xor
inc
in
push
adc
mov
push
inc
je
sub
dec
mov
cmp
push
in
sbbb
std
por
rorb
clc
iret
push
mov
dec
add
mov
cmpsb
xor
leave
xchg
je
cmp
fstpt
std
jne
mov
add
cltd
cld
stos
enter
sarl
add
inc
xor
push
inc
mov
push
ret
bound
sbb
mov
addr16
mov
mov
out
adc
shlb
lock
out
into
mov
fidivl
push
jmp
or
lcall
pop
push
subl
stos
movsb
push
push
inc
rolb
ljmp
jae
cmp
jbe
inc
mov
lea
mov
test
leave
rorl
dec
sub
loopne
leave
inc
adc
xchg
in
leave
xor
lea
cmpsl
aaa
jmp
inc
into
sub
jge
fs
adcb
mov
out
inc
cmp
ljmp
inc
stos
jne
outsb
ds
inc
jo
loopne
xorb
movl
movl
jne
push
push
inc
adc
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
loope
mull
mov
add
divb
jle
les
jae
jo
mov
inc
dec
jne
mov
jae
xor
movsb
mov
addb
add
gs
push
scas
dec
push
jnp
test
xor
cmp
addb
arpl
loopne
adc
mov
sub
push
adc
aam
or
and
ljmp
mov
jno
pop
ror
dec
sbb
push
adc
sbb
jno
fdivl
lock
aas
xor
push
and
push
xchg
sub
xlat
cli
jo
insb
ljmp
add
das
mov
andb
mov
or
sub
cld
pusha
push
dec
push
sti
or
cmp
jmp
xor
dec
sbb
gs
sbb
mov
inc
xor
add
lret
bound
ret
ss
mul
jmp
pop
sbb
jno
push
pop
ja
es
xchg
fisttpl
cmp
es
flds
lret
loope
leave
cmpl
and
mov
movl
imul
outsl
cmp
es
inc
sbb
pop
nop
pop
sbb
pop
adc
cltd
pop
xlat
ds
jne
mov
pushf
cltd
sub
sbb
in
add
cmc
mov
call
int3
mov
sub
and
xlat
xchg
filds
add
push
push
cwtl
mov
jne
lret
sub
fwait
pushl
out
jle
in
stc
mov
or
push
cmpl
add
ret
pop
cmp
rolb
dec
pusha
mov
sub
jne
add
xor
in
frstor
xchg
sub
mov
mov
mov
mov
lea
jnp
mov
aaa
xorl
aam
jnp
or
push
out
ja
adc
movsl
sub
mov
push
stos
lahf
jo
cmp
or
inc
push
sub
adc
jl
dec
xor
je
sub
pop
push
popa
xchg
mov
lahf
imul
jns
add
pop
in
clc
imul
shll
or
gs
lock
xor
sbb
jo
loope
les
loopne
and
lock
mov
rcll
add
inc
ret
push
jbe
pop
mov
xchg
mov
or
push
cmp
rcl
cmp
test
mov
std
xor
pop
add
and
pop
adc
jns,pn
push
add
add
cld
jmp
inc
jb
fs
push
xor
out
loop
dec
insl
daa
sbb
js
lret
or
shr
sub
push
push
push
orb
sub
jmp
adc
pop
mov
leave
inc
adc
mov
les
mov
or
push
dec
sbb
in
dec
or
movsb
jae
sbb
xchg
or
in
dec
mov
jo
xchg
inc
sti
sub
push
icebp
shlb
jo
sbb
push
xchg
jecxz
insb
test
jbe
bound
fwait
mov
cmp
outsl
add
and
dec
dec
cmp
push
fwait
inc
sub
jle
insb
pop
insl
dec
inc
ret
dec
push
inc
sub
jmp
push
push
movsb
jl
test
mov
xchg
orl
into
jnp
sub
xor
not
test
aam
push
in
push
mov
cwtl
mov
xor
and
push
repz
mov
push
adc
nop
add
insl
sbb
cmp
inc
pop
cmp
add
cmp
mov
daa
jle
pop
sbb
or
mov
jmp
lds
push
cmc
xlat
out
aad
insb
and
pop
cmp
jge
je
jle
or
add
sub
pop
insl
pop
test
lds
jge
pop
adc
roll
xchg
pop
add
ja
movsl
pop
test
js
mov
fidivrs
insb
js
jl
cmp
jbe
mov
cltd
xchg
es
adc
add
mov
mov
jno
jge
test
ja
mov
popf
cmp
mov
fwait
popf
je
je
inc
mov
es
dec
cmp
ja
and
push
je
sub
dec
mov
enter
das
adc
daa
mov
mov
jp
inc
sub
sbbl
movsl
movsl
dec
xor
pop
inc
adc
mov
or
dec
cmp
sbb
or
fmul
lret
xchg
fcomps
int3
lretw
lret
lret
out
mov
popf
enter
out
lret
movsl
shrb
ljmp
shrl
dec
sbb
dec
cld
adc
sbb
cmc
loopne
sub
aam
mov
test
mov
push
cmp
add
push
sub
mov
enter
xchg
inc
mov
mov
fcoms
shl
test
jmp
jge
lods
lahf
inc
shlb
aas
icebp
sbb
adc
mov
cmpsl
in
ss
push
pop
adc
stos
add
jmp
repz
js
outsb
es
movb
decl
loop
jb
inc
test
test
pop
test
test
imul
xchg
jb
add
xchg
lret
adc
nop
mov
nop
xchg
dec
roll
cmpsb
xor
xchg
lcall
gs
inc
sbb
push
cs
loopne
push
es
push
and
adc
jb
ret
dec
and
push
add
adc
shlb
add
sub
inc
lods
pusha
testb
jo
pop
cmp
jge
inc
mov
ds
int3
sub
test
mov
and
pop
js
jo
push
inc
dec
jl
cmp
cmp
and
or
lds
sub
mov
pop
and
push
mov
jb
lea
and
mov
mov
mov
and
mov
es
xor
daa
mov
and
cmp
and
test
enter
pusha
in
decb
testl
and
dec
adc
and
inc
dec
jae
fs
jl
or
push
push
push
jge
and
imul
sbb
jne
inc
or
xchg
shlw
or
push
adc
push
sub
mov
fildl
adc
mov
das
inc
push
js
xchg
xor
or
inc
lcall
hlt
dec
or
fs
add
mov
or
mov
jne
xchg
push
xchg
pushf
int
aam
pusha
mov
mov
jo
repnz
mov
jno
cmp
pop
adc
je
adc
xchg
sub
clc
mov
js
inc
push
mov
mov
push
mov
push
xor
and
add
lock
xchg
xor
and
add
jo
ficoml
daa
popa
cmp
push
jecxz
inc
cmc
or
inc
sbb
loope
or
push
cmp
sub
es
ja,pt
test
push
popa
jne
or
fimuls
rclb
repnz
mov
lret
lea
inc
cmp
jecxz
mov
push
pop
ficompl
pop
out
dec
sbb
jnp
jecxz
sbb
insb
imul
inc
xor
or
push
cmp
xor
inc
loope
nop
mov
negl
dec
lock
mov
insl
xchg
sub
callw
mov
inc
jl
faddl
push
jo
jbe
ljmp
mov
fcoms
and
adc
jge
pop
orb
inc
dec
jecxz
sub
push
dec
adcb
test
cmp
xor
push
mov
adc
mov
scas
jbe
push
inc
shrb
sub
add
in
xor
inc
ret
add
test
mov
jbe
jo
or
lods
and
push
mov
pop
clc
dec
xchg
inc
mov
sbb
lods
xchg
add
and
sahf
dec
xor
or
sbb
outsb
inc
rorb
push
sub
pop
add
cli
add
add
loopne
jp
sub
jle
mov
and
xchg
and
stc
pusha
and
xor
ljmp
xchg
push
push
xchg
or
lock
popa
xchg
lock
dec
jmp
fs
add
inc
push
jbe
js
mov
lock
gs
incb
inc
add
jmp
adc
cmp
add
lcall
rcrb
test
cmpl
les
xor
pop
dec
jg
dec
add
je
cmp
ret
xor
xchg
lea
xchg
fst
or
aam
jb
pop
hlt
fadd
fmuls
cmp
sbb
push
dec
mov
xchg
sbb
leave
mov
leave
lahf
xchg
out
shrb
xchg
call
xchg
mov
iret
add
adc
dec
filds
imul
mov
lea
mov
mov
rcrb
jl
sbb
out
mov
ss
cvtps2pd
test
cmp
aad
sub
pop
sar
pop
mov
mov
inc
sub
sbb
lea
cs
dec
aam
clc
fcomps
mul
pusha
mov
dec
or
je
lcall
adc
into
cs
pushf
pop
or
add
mov
add
faddp
or
adc
cmp
or
dec
add
mov
add
sub
push
imul
pop
pop
or
or
ja
andl
add
push
sahf
out
sbb
pop
hlt
stc
nop
je
or
or
out
je
insb
je
lock
imul
subb
mov
sub
jbe
sbb
adc
and
sti
xchg
ss
or
xor
mov
into
enter
xor
movsl
sbb
add
fs
lcall
incl
outsl
cmc
movsb
sbb
jne
js
stos
xor
pop
xlat
je
mov
jl
push
es
cmp
mov
and
or
sbb
dec
push
sbb
jle
inc
je
push
pop
out
pop
push
or
add
ds
mov
movsl
push
cld
cmp
lock
push
dec
nop
and
sbb
test
test
jbe
mov
xchg
andb
ljmp
ret
adcl
pop
mul
pop
sbb
dec
and
in
add
adcl
sti
out
sub
loope
setbe
sub
cmpsl
cmp
mov
adc
inc
push
sbb
jl
insl
cmp
xor
adc
sbb
negl
jg
testb
add
push
aam
sbb
movsl
andl
test
sti
mov
fucomip
test
push
mov
pushl
daa
aas
push
fimull
ret
in
add
mov
les
pop
jno
mov
inc
mov
add
mov
sub
push
adc
cmp
int3
push
js
jecxz
mov
push
pop
je
insb
cmp
sub
pop
sub
sti
sub
dec
jo
add
add
push
inc
mov
into
add
addr16
push
xor
lret
je
cmp
je
test
mov
xchg
test
mov
gs
lds
fbld
rolb
loope
or
movsb
dec
andl
jb
rcrl
lds
jecxz
dec
movsb
jo
jmp
aam
add
ret
jge
sub
adc
hlt
jmp
cmp
je
cli
pop
jle
insl
cmpl
incl
roll
mov
int
or
ja
or
xchg
xor
dec
dec
test
dec
jnp
ficompl
cmc
mov
sub
lea
pop
js
inc
jo
popa
jo
popf
test
jbe
insl
ljmp
pop
jo
rcll
call
sbb
dec
addb
sub
inc
adcl
sub
push
cmpl
hlt
outsb
mov
add
out
addr16
rolb
cmpsl
dec
decb
popf
mov
in
cld
sub
push
xor
cmp
cmpsl
xor
enter
push
lret
pop
sub
bnd
push
test
je
adc
sub
nop
push
jp
cmpsb
jmp
jbe
fmuls
cltd
jmp
aaa
int3
pop
ss
je
cltd
sub
add
rol
sbb
pop
jl
es
push
dec
roll
neg
jecxz
nop
cmp
sarb
fimull
mov
or
jecxz
popf
jmp
lret
mov
mov
or
jne
and
lea
outsb
das
sbb
punpckldq
scas
push
push
inc
lcall
push
repz
jne
mov
cmp
xchg
dec
icebp
pop
lcall
dec
jmp
pop
xchg
loop
mov
sub
inc
cmp
ret
je
into
cmp
and
dec
shlb
xor
cmc
push
jmp
mov
ret
inc
les
jmp
dec
jb
neg
add
inc
pushf
repz
cmp
push
je
gs
pop
add
sub
push
jl
jecxz
jmp
and
sub
push
test
sahf
adc
stos
mov
adc
enter
fisubrs
popf
fcoml
or
pop
test
mov
push
jp
dec
xor
dec
fdivrl
lea
stos
jge,pt
jns
mov
and
adc
push
jbe
dec
ret
sub
push
fdivs
add
cmp
rorb
stos
or
nop
popa
mov
movsl
loopne
sub
pushf
test
negl
add
cmpsb
popa
and
sbb
cmp
and
push
and
and
cmp
add
push
pushf
cltd
or
xchg
sarb
lahf
clc
cmp
pop
mov
ret
mov
mov
sub
movsb
push
loope
push
cmp
jle,pt
push
add
dec
mov
push
movsb
repnz
inc
out
lcall
arpl
mov
inc
pop
push
push
and
jle
or
loopne
mov
jo
inc
sub
adc
rclb
mov
pop
icebp
or
push
cwtl
add
lea
xor
push
xchg
add
lea
cs
add
out
ffree
andl
divl
call
mov
jo
mov
mov
and
push
xor
or
jl
push
mov
and
push
jne
push
pop
dec
popa
lcall
flds
lds
add
js
cltd
and
jge
rol
adc
test
sub
cmp
ss
pop
fs
outsb
push
xchg
inc
or
jmp
addb
push
xor
sbb
adc
cmpsb
inc
xchg
imul
adc
or
shl
mov
add
orb
movsb
lea
testl
ss
insl
add
in
int3
mov
decl
imul
add
jmp
clc
sub
dec
adc
pop
pusha
pusha
push
push
rclb
xor
icebp
loopne
adc
inc
adc
sub
cld
shr
mov
imul
jne
add
dec
orb
imul
mov
push
mov
inc
and
idiv
adc
loop
push
add
je
cli
add
cmp
jbe
push
pop
mov
loopne
sub
dec
or
subb
jae
xchg
mov
decl
dec
add
shll
pop
mov
mov
and
adc
mov
pop
cmp
pop
add
push
or
popa
sbb
add
icebp
cltd
push
cmpsb
pop
and
push
or
sub
jmp
clc
and
jnp
add
jne
and
data16
sar
xor
dec
pop
cmp
das
imul
imul
add
pushf
pop
out
sub
jno
jno
mov
sbb
out
not
and
fsubs
jne
sub
jmp
push
mov
loopne
mov
xor
push
cmp
pop
dec
add
mov
push
or
lret
inc
lods
insb
or
addr16
jns
test
int3
inc
or
dec
or
std
xchg
adc
mov
mov
inc
mov
mov
ss
lock
lods
push
or
or
mov
dec
or
jmp
dec
adc
iret
push
lods
dec
push
mov
movl
jae
xor
mov
jp
xor
repz
sbb
inc
stos
add
mov
hlt
insb
inc
shl
add
fcmovne
jle
scas
jp
push
call
aas
gs
outsb
sbb
or
sbb
clc
fld
mov
decb
adc
inc
add
pop
and
xor
and
call
jne
push
push
mov
or
cmp
int
sbb
enter
add
jo
adc
test
ficomps
jae
jl
push
cmpsl
mov
push
loopne
or
pusha
testl
shrb
cmp
inc
add
stos
imul
pop
in
sbb
outsl
push
pop
cmp
xchg
out
mov
adc
add
int3
cmpsl
mov
les
sbb
push
adc
inc
adc
lret
mov
lods
push
xor
and
or
movsb
mov
or
jmp
orl
incl
pop
mov
imul
and
ja
add
rolb
mov
lock
repnz
rorb
pop
push
dec
out
xor
dec
or
xor
xor
mov
mov
mov
test
sbb
inc
jns
popa
nop
pop
lea
adc
pop
ret
mov
sub
shr
sti
inc
mov
clc
incl
nop
cld
or
adc
jge
daa
mov
push
add
sub
adc
adc
add
mov
sub
mov
fwait
lods
dec
insb
or
mov
fs
call
mov
inc
mov
pop
incl
dec
dec
inc
jne
or
lds
ljmp
repz
mov
adc
jl
fwait
xor
sbb
sub
pop
shr
xor
ror
dec
cld
arpl
es
dec
cmp
clc
shlb
mov
and
pushf
jle
or
fwait
cmp
inc
mov
xchg
add
or
xor
add
dec
push
xchg
push
mov
int3
push
pop
inc
lcall
inc
stc
xchg
add
iret
clc
rolb
rcr
sub
pop
add
cmp
fimuls
sub
nop
dec
or
mov
sub
add
dec
enter
movsl
adc
pushf
sar
dec
mov
incl
sarl
lea
jbe
out
mov
or
imul
push
jns
push
pop
adc
lcall
add
nop
scas
mov
data16
and
js
sbb
sub
adc
inc
insb
xor
adc
xor
mov
sub
jl
dec
je
clc
xor
out
mov
sub
pop
xor
sub
pop
jle
sar
dec
jp
movsb
push
xchg
jo
lods
test
in
rclb
pop
cmp
dec
mov
xchg
push
fisttps
mov
test
fbstp
jmp
ja
ja
dec
fiadds
sti
xchg
je
add
loope
ret
dec
lea
mov
xchg
and
shll
mov
cmp
push
cmp
lods
cs
lret
lret
mov
push
rdmsr
cmp
inc
dec
mov
bound
ja
or
sub
insb
stos
add
ret
lods
pop
and
inc
cmp
clc
rcll
push
push
push
jge
shr
cmpl
adc
pop
in
or
pusha
push
adc
dec
or
out
fldcw
push
nop
cmp
mov
and
or
or
adc
lcall
jne
mov
mov
jne
in
jbe
add
or
jae
xor
popf
outsb
in
or
arpl
sbb
jmp
or
xor
jl
rorb
or
inc
mov
in
outsb
mov
sbb
and
mov
mov
dec
pop
iret
jne
push
jno
mov
and
mov
xchg
out
rep
jnp
pop
dec
mov
and
jne
mov
push
xor
and
leave
inc
test
inc
push
pushf
push
cmp
jno
or
out
icebp
sbb
adc
and
push
pop
xchg
sbb
shrl
xchg
mov
out
and
stos
xor
mov
decb
jne
int3
dec
das
js
repnz
jmp
jp
mov
pop
pusha
dec
bound
fwait
or
mov
imul
test
xor
cmp
push
or
das
pop
mov
enter
sub
jge
jmp
ret
loopne
cli
push
or
dec
cld
or
lcall
or
subb
insl
push
mov
or
test
cmpsb
mov
call
fstpl
add
scas
and
in
xchg
xor
ds
or
sbb
sbb
jp
push
ds
xor
add
and
xor
repnz
popf
dec
cmp
mov
sti
add
pop
jb
or
xorl
lods
mov
test
or
adc
imul
mov
sti
lock
ljmp
inc
cwtl
sbb
into
jp
push
sub
mov
test
add
out
add
mov
lret
and
add
test
push
add
xchg
pop
scas
and
cmp
or
out
cmp
push
mov
adc
and
push
add
mov
repnz
cmp
sbb
push
push
dec
mov
mov
sub
or
daa
push
and
loop
fisttps
add
ljmp
or
inc
cmp
or
sbb
int3
fcomps
lods
popa
jns
std
lahf
pushl
lds
adc
push
in
pop
ret
divl
pop
outsl
or
push
adc
std
pop
arpl
pop
gs
and
jns
jmp
iret
loopne
push
mov
scas
testl
jmp
cmp
inc
cmpsb
jl
and
inc
mov
pop
nop
not
add
and
insb
int3
push
mov
fs
int3
jns
or
je
mov
movsl
push
int
sbb
mov
inc
sub
push
add
pop
adc
and
push
or
xchg
xchg
add
dec
ja
adcb
dec
xor
addr16
jle
lahf
rolb
mov
mov
call
lods
aam
hlt
xor
lret
addl
jmp
xchg
arpl
jge
mov
movsb
pop
sbb
lahf
dec
jge
jmp
movzwl
or
int3
test
lret
lods
in
je
cmp
cmpsl
xor
mov
mov
mov
js
xchg
imul
cmp
pop
clc
test
cwtl
mov
inc
pop
lcall
xor
ja
aas
iret
je
movsb
mov
or
andl
pop
xor
and
scas
add
adc
xchg
mov
inc
lret
pop
add
mov
or
xor
sub
shl
adcl
and
movsb
sbb
movsb
sbb
inc
outsb
inc
scas
and
loopne
mov
pop
hlt
icebp
push
fldl
jns
pushf
fistpll
or
jne
cli
or
jo
jbe
pop
and
fdivrl
add
cmp
push
xchg
xchg
xor
scas
push
repnz
cmp
fs
inc
dec
push
jmp
out
sbb
int3
les
inc
or
pop
std
movsb
xor
ret
cmovo
shll
lea
in
popf
mov
push
add
adcb
lock
xchg
dec
sbb
rol
sbbb
cmpsl
test
enter
movsb
jb
leave
enter
fs
sub
cmp
push
mov
movsb
push
cmp
and
and
xor
push
orb
cmp
or
push
pusha
cmp
mov
repnz
dec
and
inc
clc
mov
call
inc
stc
pop
mov
xor
in
std
push
test
mov
pushf
push
movsb
shr
jb
pop
mov
mov
aad
test
lods
cmp
add
pop
lahf
push
xchg
pop
enter
xchg
addr16
lret
rclb
lahf
inc
call
call
xor
in
shlb
in
rolb
mov
in
pop
rorb
les
inc
jb
in
jb
leave
add
cmc
les
fwait
mov
int3
test
icebp
ror
cwtd
sarb
pop
push
imul
xor
xchg
cmp
aaa
arpl
inc
lods
inc
add
push
outsb
leave
jecxz
cmpsl
stc
adc
ss
or
pop
lea
push
sbb
pop
rcrb
or
aas
dec
mov
jecxz
xchg
imul
mov
lock
lret
cmp
mov
mov
addr16
cmpsb
pusha
out
xchg
ret
jne
adc
xchg
dec
jne
subb
rcrl
and
movsb
adc
std
or
test
and
sbb
or
mov
push
lods
lock
adc
xchg
mov
mov
mov
push
or
add
push
xchg
and
adc
dec
jae
shr
lds
sbb
testb
xchg
add
or
or
fsubs
push
call
add
insl
sbb
adc
mov
or
jne
add
hlt
ficomps
call
push
add
add
adcb
aaa
nop
cmp
cmp
adc
pop
inc
adc
lods
xchg
or
rorb
cmpsb
mov
lret
and
out
push
les
push
or
shll
enter
push
int3
or
jge
pop
clc
add
xor
mov
or
dec
cmp
xor
sbb
add
cli
sti
cld
std
mov
shll
mov
xor
xor
xorb
sub
fcoml
cmpsb
or
adc
je
pop
cmp
mov
inc
sbb
add
cmp
mov
sbb
dec
sbb
push
add
add
popa
mov
je
dec
je
push
or
push
sbb
sub
and
pop
mov
pop
loopne
fldl
or
fldl
or
and
jno
push
mov
std
loopne
xor
out
mov
imul
pop
jmp
jo
int
fldt
mov
mov
or
das
or
xchg
dec
je
add
and
or
or
sti
flds
lods
adc
lcall
je
xchg
sbb
sbb
lret
pop
insl
fld
gs
in
xor
add
jecxz
out
ja
inc
int
loopne
xchg
or
xchg
repnz
adc
test
test
inc
adc
sub
loopne
sub
push
sbb
and
pop
icebp
inc
bound
and
inc
lock
jns
push
cmp
xlat
sahf
out
sahf
clc
cwtl
add
jl
mov
jb
add
jnp
adc
add
mov
sti
dec
cmp
fs
or
call
jg
and
add
pop
hlt
lods
adc
adc
xchg
jnp
and
jle
sub
pop
push
inc
rol
lahf
sar
add
int3
adc
dec
sti
sbb
push
xchg
jmp
push
mov
bnd
or
and
or
aas
push
adc
aad
sub
clc
push
fmull
out
aas
inc
inc
jp
cmp
test
jne
push
push
rorl
outsb
push
lcall
jns
or
js
mov
adc
add
inc
cmpsb
or
xor
clc
push
push
mov
mov
and
pop
in
adc
mov
js
mov
cld
adc
sbb
lfs
mov
jb
pop
lock
call
lret
sarb
cld
xchg
and
mov
lods
std
mov
testb
xor
lock
scas
pop
mov
mov
or
sar
mov
xor
or
pop
add
or
xchg
dec
sbb
pop
shl
scas
mov
push
lea
testb
push
repnz
mov
mov
jle
or
inc
pop
add
dec
push
inc
inc
pop
push
insb
sahf
aad
std
push
or
or
ja
adc
xchg
push
leave
shrb
push
ret
mov
or
mov
nop
mov
rorb
shl
in
popa
cwtl
int3
mov
movsbl
sub
das
dec
dec
push
pop
or
lret
and
orl
dec
cmp
jg
cmp
notb
hlt
es
or
add
xor
stc
es
and
lods
es
xchg
scas
inc
mov
fdivrl
push
cli
sub
lahf
sti
push
sub
decb
jne
inc
sub
pop
shlb
or
adc
and
inc
mov
sbb
stc
push
enter
cmpb
xor
cld
inc
dec
cmp
push
int
rclb
lds
js
loope
xchg
mov
lods
cmp
sbb
pop
mov
fdiv
mov
mov
cmc
repz
scas
lea
jns
xchg
in
mov
movsb
lret
imul
call
push
cmp
add
vmread
or
or
adc
sti
push
inc
cmp
lea
std
outsl
sub
mov
mov
push
cld
lods
scas
testl
rorb
mov
cmp
push
cmpsl
imul
int3
push
adc
testl
jecxz
adc
insl
sub
cmpsb
mov
or
push
fcmovbe
jns
sarl
daa
mov
sahf
subb
inc
cld
dec
push
sub
cmp
loopne
subb
dec
ret
inc
neg
daa
in
pop
enter
mov
sub
jno
or
or
pop
adc
lea
das
into
je
test
pop
insb
push
jo
add
xchg
pushf
ret
ja
std
mov
sti
and
dec
sub
mov
xchg
xor
repnz
ja
std
aaa
addr16
lods
dec
mov
das
lock
fdivr
pop
sbb
dec
adc
lods
insb
mov
and
xchg
push
jmp
rcr
fs
mov
sarb
or
mov
sbb
enter
gs
mov
cmc
pop
fsubr
std
call
dec
mov
cs
push
mov
xor
sub
fdivrs
mov
xor
daa
fmull
pop
aad
sub
std
fbstp
outsl
lds
sub
in
pop
fnstsw
aaa
push
cmpsb
and
mov
and
cmpb
mov
cmp
inc
daa
jle
push
jecxz
ret
push
push
mov
xchg
jns
pop
sbb
mov
ja,pn
mov
out
scas
jns
fldcw
inc
add
movb
xor
popa
sbb
cs
call
add
xor
frstor
inc
adc
bound
push
or
sbb
sbb
dec
call
xor
and
std
xor
dec
imul
test
pop
loopne
mov
mov
inc
repz
ja
mov
popa
mov
gs
or
adc
jecxz
negb
pusha
aad
hlt
sub
test
sub
sbb
pop
dec
adc
push
cmc
shll
movsl
pop
lock
xor
push
pop
ffreep
jp
jmp
mov
push
sub
lods
adc
and
int3
pop
pop
out
in
cmp
jne
loopne
addl
xchg
dec
test
pop
sub
enter
dec
jns
lock
adc
mov
enter
mov
bound
mov
add
push
movsb
adc
push
orb
fidivrs
jp
add
push
inc
lret
jne
cmp
adcl
xchg
sbb
repnz
lods
mov
jp
jne
fdivr
les
dec
pop
dec
or
and
movsb
ret
dec
inc
std
std
or
inc
cmp
loope
sub
mov
add
loope
xchg
aaa
fsubrl
lods
in
add
mov
sub
cmp
inc
add
mov
mov
hlt
push
mov
sub
fmull
adc
jne
xlat
jecxz
rcr
and
aas
xor
aad
pop
dec
sub
leave
mov
push
inc
push
xchg
movsb
test
inc
jb
dec
mov
and
sarb
and
aam
in
loopne
aad
aad
sub
or
ret
iret
adc
sub
cmp
ja
ficoml
pushf
and
mov
or
shl
pop
pop
repz
or
cmc
ds
pop
ret
and
mov
ss
cmc
dec
dec
xor
lock
rep
xor
add
inc
xor
repz
push
jecxz
out
test
ret
iret
pop
inc
scas
movsl
call
enter
cmc
cmp
mov
flds
fldcw
xchg
xlat
adc
and
leave
mov
ret
inc
sahf
int3
les
out
and
or
push
xor
stc
mov
mov
ret
ja
or
xchg
push
lea
sti
nop
mov
mov
cmp
dec
in
rcrl
es
test
and
cmp
push
enter
push
jecxz
sti
rorl
add
dec
xchg
xchg
xchg
dec
cmc
loope
xor
fwait
mov
cmc
sbb
ret
add
mov
clc
mov
rcrb
pop
add
or
in
icebp
mov
pop
jb
stos
icebp
repz
add
arpl
mov
adc
mov
mov
aaa
ds
mov
mov
in
movsb
mov
xchg
dec
inc
enter
icebp
rclb
movsb
call
push
aas
dec
test
sbb
leave
adc
cs
repnz
test
test
nop
test
xchg
stos
inc
pushf
pushf
dec
inc
scas
in
nop
nop
cmp
lods
aad
inc
push
lods
or
cmp
pop
fisubl
push
dec
pop
je
jmp
dec
pop
add
stos
mov
aaa
pop
cmp
inc
add
leave
push
iret
sarl
lds
lret
xchg
mov
xor
rclb
adc
imull
popa
pop
nop
sbb
jg
adc
push
sub
push
pusha
push
sub
stos
dec
pop
push
jo
push
xchg
sti
xchg
lret
sbb
sub
or
gs
and
xchg
cmp
sbb
add
test
lret
push
and
add
add
adc
adc
xchg
dec
repz
jnp
mov
neg
pop
mov
sub
xchg
lock
push
add
lcall
rorl
sub
or
mov
or
adc
fwait
int
pop
jl
outsl
outsl
push
push
dec
adc
push
and
icebp
dec
repz
push
sub
outsl
inc
or
xchg
lret
jbe
jle
sbb
ja
inc
imul
mov
xor
jo
or
adc
fs
lret
loopne
xor
or
xchg
dec
test
dec
pusha
jae
and
call
fadds
push
lret
sub
fidivl
ss
sub
sbb
fsts
dec
push
pop
sar
in
lock
rep
jge
lret
les
jne
pop
rcll
cmpsl
test
in
push
sbb
fdivrs
and
or
mov
jmp
ret
xlat
jmp
pop
adc
xchg
gs
loop
mov
test
insb
dec
scas
test
fsts
cmp
loopne
cs
imul
or
or
fwait
bnd
adc
sub
sarb
aam
push
divl
pusha
mov
or
das
pusha
bnd
dec
clc
ret
dec
pop
cld
cmp
and
jl
xor
mov
mov
loop
push
jge
jne
push
sbb
inc
add
dec
mov
jb
loopne
jb
cmc
stos
adc
mov
lds
mov
or
aas
jl
mov
mov
dec
add
or
dec
and
push
mov
lods
scas
jecxz
outsl
mov
test
je
divl
adc
pusha
mov
aas
loop
ret
aaa
mov
sbb
add
enter
add
and
jle
ljmp
pop
sub
mov
mov
data16
and
stos
bound
ret
or
xchg
pop
into
sub
mov
jno
inc
cs
add
rcr
dec
cmp
orb
mov
movl
add
mov
movsl
lock
push
fldenv
cs
inc
cmp
or
lret
pushl
ret
jmp
mov
mov
pusha
xor
dec
and
lahf
ret
cmc
mov
lret
xchg
inc
mov
cmp
fwait
aaa
movsl
fbld
cmp
add
gs
dec
fidivs
daa
clc
inc
push
inc
aas
test
sbb
jae
testl
ja
jo
mov
into
fwait
imul
sub
inc
jp
imul
and
jno
mov
pop
sarb
call
lea
shrl
mov
call
out
jmp
xor
mov
enter
lock
jmp
dec
clc
movb
cwtl
xchg
les
push
pusha
and
push
sub
and
lcall
push
pop
mov
push
push
mov
dec
stos
cltd
stc
arpl
lret
mov
mov
add
and
inc
dec
lcall
mov
cmp
cmp
movl
nop
lret
sbb
adc
js
in
stos
add
push
mov
xor
fisubrl
add
sbb
mov
ret
push
in
inc
mov
and
inc
jle
or
enter
lods
push
mov
xor
add
xchg
pop
pop
imul
and
inc
cmp
add
inc
mov
add
lods
aam
dec
pop
cmpsl
fisttpll
loope
call
shrd
lea
adc
push
and
fs
jle
lret
sbb
mov
xlat
mov
jae
pop
insl
pusha
or
sub
jb
mov
sub
add
xchg
xchg
mov
sti
aas
test
cmp
inc
js
outsb
add
push
or
adc
add
cmpl
jno
xor
pop
dec
sbb
mov
pop
jnp
rorl
lods
dec
bound
push
or
push
mov
adcl
sbb
or
or
or
sub
pop
sti
jb
inc
clc
sub
adc
push
xchg
int3
lahf
push
push
xchg
or
xchg
cltd
mov
rorb
clc
add
or
lock
ret
mov
cmp
cs
xor
xor
ds
call
and
in
pusha
adc
and
sbb
in
cmp
or
adc
cld
or
mov
push
pop
mov
pop
inc
xchg
lret
shlb
adc
cmp
fidivrl
lret
jb
dec
ret
or
js
xor
or
insb
adc
and
out
sbb
in
sti
add
jl
clc
and
les
jno
jne
pusha
sub
pop
fisubl
dec
scas
add
mov
xchg
int
xor
roll
xchg
imul
jle
andl
cmp
mov
in
loop
rcr
inc
sub
cmp
cld
xchg
inc
sbbl
pop
and
cmp
xchg
sub
cmp
cmpsl
jb
nop
popl
cs
orb
insb
mov
pop
leave
push
sbb
or
pop
fwait
arpl
pop
clc
imul
test
or
xor
mov
or
or
sbb
mov
imul
pusha
ret
or
add
pop
mov
cmp
dec
outsb
pushl
test
sbb
gs
icebp
int3
sti
or
aas
adc
adc
and
push
or
fsts
js
and
rclb
mov
pusha
cmpl
shr
pop
ret
pop
cwtl
mov
pop
xchg
dec
dec
or
je
outsb
sti
adc
sbb
jmp
mov
ja
xor
mov
mov
cmp
jne
xchg
fsubs
xor
mov
cmp
adcb
in
mov
push
adc
and
fmull
or
mov
cmpsb
jge
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
adc
and
or
pop
mov
dec
fs
xchg
leave
movsl
mov
mov
push
push
or
sbb
jmp
xchg
insb
enter
mov
add
and
mov
xchg
sub
adc
fs
and
sbb
lcall
sbb
jb
les
inc
pop
movsl
add
pminsw
push
xchg
pop
test
push
bound
push
int
fcoms
ret
gs
mov
aaa
mov
push
add
lcall
je
pop
lahf
jne
jle
sub
or
and
bound
test
adc
mov
mov
push
xor
lret
stc
xor
imul
xor
jo
and
ljmp
fadds
add
dec
insb
cld
inc
jecxz
icebp
sub
cmp
je
cmpsl
or
adc
faddl
aam
xchg
pop
addr16
shll
outsb
or
cld
test
push
roll
mov
js
mov
mov
and
and
push
cmp
inc
or
inc
sbb
sub
sbbl
icebp
and
cmp
dec
mov
adc
fsts
ja
mov
sbb
test
push
or
cmp
adc
sbb
roll
clc
push
pop
inc
push
cmc
mov
and
cli
lret
mov
cmp
sbb
inc
inc
in
mov
aaa
sbb
add
sahf
std
ret
fmul
movsb
aad
mov
lret
cmp
gs
adcl
popa
cmpb
add
pop
rolb
cmp
dec
mov
movsl
aam
repz
mov
mov
mov
push
imul
adc
ss
decl
movsb
orb
icebp
in
pop
dec
mov
out
push
out
mov
sbb
sti
xor
push
add
adc
xlat
jl
je
mov
inc
and
cmp
pop
mov
push
mov
jb
push
jbe
jb
cmp
inc
dec
inc
in
push
push
pusha
or
les
es
push
and
mov
jle
or
xchg
add
insb
cs
lea
or
ss
jmp
xor
adc
rolb
inc
inc
pusha
cmp
incl
xor
push
mov
js
inc
inc
inc
pop
je
pop
es
sti
adc
lahf
xor
dec
and
or
mov
in
mov
jg
shr
push
adc
add
test
mov
xchg
lock
mov
je
loopne
and
pop
and
or
mov
daa
mov
sarb
inc
add
sarb
pop
aam
pop
add
add
arpl
sub
adc
add
sub
sbbl
and
cwtl
js
cli
inc
mov
pop
fsubr
mov
mov
xorb
cld
clc
lods
bound
xlat
in
xchg
aas
jae
inc
dec
test
dec
adc
out
movnti
ss
mov
and
jge
push
andl
aam
jecxz
lock
dec
jp
in
mov
push
xor
jecxz
sub
jne
add
push
pop
mov
inc
inc
lret
sub
and
addb
jne
xlat
in
jmp
cmpsb
cmp
dec
inc
inc
or
jne
add
cmp
push
add
push
sar
sbb
adc
adc
or
test
movsb
mov
idiv
add
dec
push
jbe
sahf
mov
cld
mov
xor
jmp
push
fiaddl
andb
sbb
mov
adc
data16
or
into
pop
xchg
out
int
xor
pusha
lock
or
dec
shl
adc
data16
lea
pop
xor
clc
push
push
rcl
pushf
sub
push
pop
push
pop
add
fimull
out
aas
subl
into
jmp
rep
xchg
add
bound
decl
push
repz
and
push
and
xor
ret
xor
or
in
cmp
int3
mov
jge
mov
push
inc
sbb
inc
push
pop
jle
push
mov
mov
jmp
pop
sbb
clc
subl
addl
and
mov
pusha
and
and
insl
andl
sarb
or
rclb
or
sbb
add
roll
pop
push
push
push
mov
cmp
add
xor
adc
and
add
clc
ss
add
out
add
push
jnp
rolb
loope
jbe
push
and
pop
arpl
incl
hlt
inc
adcl
fisubl
ficoms
js
xorl
ja
cli
push
sbbb
jb
xchg
xorl
cli
testb
in
fcmovnb
cmc
push
subl
dec
inc
pop
jmp
push
aaa
xor
ds
mov
jne
fmuls
add
or
je
and
add
push
add
add
mov
mov
cmp
push
adc
mov
bound
loopne
xchg
dec
out
mov
fwait
hlt
or
mov
push
adc
push
xor
sahf
mov
mov
lock
mov
xor
sarl
jg
add
test
adc
fisttpl
or
xor
not
push
rcll
sub
int3
add
clc
shlb
add
enter
movd
mov
and
jb
rcrl
and
adc
add
ret
sub
mov
lahf
mov
out
enter
mov
ss
stc
loope
and
in
mov
shrl
jle
push
scas
sbb
mov
popa
push
mov
inc
sarb
sub
movsl
pop
mov
jbe
mov
push
dec
cli
cmp
inc
addb
jmp
lock
fs
gs
push
add
lcall
push
pop
orl
ret
mov
repnz
or
dec
repnz
out
xchg
cmp
mov
inc
sub
or
adc
dec
in
cmp
cmp
out
cmp
xchg
ss
pop
js
add
loop
jne
ljmp
mov
repnz
ret
movsb
pop
xor
sbb
xchg
lea
and
pop
push
xor
clc
pushf
iret
push
mov
lea
mov
pop
jno
inc
and
clc
lock
fdivrl
cmp
pop
cmp
sarl
and
pop
xchg
stos
sub
mov
enter
shlb
imul
cmp
and
imul
add
fmull
add
fsubrs
mov
cmc
add
sub
cld
xchg
decl
pop
or
out
fs
test
xor
les
scas
inc
mov
adc
push
push
mov
insb
mov
es
cmpb
fs
and
cmp
dec
push
cltd
cmp
loopne
mov
das
adc
add
popa
fwait
orl
adc
add
and
and
cwtl
setl
movsb
ret
out
mov
or
sarb
mov
mov
sbb
fsts
cmp
ret
sbb
frstor
mov
fsubr
push
and
push
and
fs
outsl
sub
cltd
sarl
cmp
data16
jne
test
pop
adc
pop
xchg
movsb
xlat
outsl
jo
scas
mov
jl
adc
into
imul
adc
std
popa
xchg
push
fdivrl
int
sbb
sub
add
inc
in
test
int
jecxz
pop
lcall
lock
inc
test
sbb
pop
imul
loope
daa
test
adc
inc
jmp
lea
inc
hlt
pop
stos
sbb
cmp
imul
or
jge
aas
sbb
dec
enter
sbb
fdivl
and
insb
add
mov
fidivl
cmp
mov
mov
xor
fsubl
outsl
cli
lds
adc
jne
push
ja
cld
shl
out
outsb
and
add
addl
sarb
add
sbb
negb
dec
cmp
pop
sub
cmp
popa
mov
sub
or
add
add
pop
stc
popf
movsl
mov
push
call
push
repnz
mov
adc
and
je
xchg
je
adc
add
push
mov
inc
and
push
add
pop
or
xchg
jo
pop
adc
or
add
stos
mov
outsb
inc
clc
inc
movsl
mov
inc
loopne
aad
sub
repz
rep
xchg
sub
cmpsb
fdiv
xor
sbb
movsb
mov
mov
fidivrl
mov
push
insb
jae
mov
mov
insl
cmp
cld
gs
rol
adc
jle
cmp
cwtl
and
xchg
cld
and
aaa
test
mov
hlt
imul
xchg
pushl
dec
shr
out
dec
xchg
pop
jo
xor
loop
imul
xchg
jns
shll
jecxz
jmp
sahf
xchg
push
ret
test
and
ret
daa
cmp
loopne
stc
jge
dec
jmp
adc
and
and
addps
sbb
movsb
mov
sub
lods
inc
and
fs
jmp
data16
pop
inc
xchg
mov
inc
sbb
add
cld
mov
jg
push
cld
push
or
push
fwait
outsl
mov
inc
or
lret
es
in
dec
or
test
add
adc
clc
lods
add
push
jl
push
and
add
push
or
add
add
dec
or
insl
adc
jg
aas
add
popa
enter
inc
inc
sbb
call
sbb
xor
and
bound
jl
jecxz
push
push
adc
and
sahf
inc
xor
sahf
lret
inc
addb
rcrb
pop
pop
fs
pop
jl
mov
leave
sbb
push
xchg
clc
xchg
leave
jb
sub
cmp
sbb
call
sbb
pusha
jno
loope
pop
cli
js
rcl
xor
loop
loop
int3
add
addl
ret
ret
jp
dec
fdivrs
mov
mov
aaa
mov
loope
fdivs
and
cmpl
xlat
add
orl
loop
pushf
push
in
loope
jmp
sbb
add
pop
cmp
jmp
dec
cmpsb
pop
adc
cmp
jae
dec
pop
fsubrs
je
or
inc
stos
popl
js
cmp
shlb
mov
cmp
outsl
testb
or
addr16
ret
xor
cmpsl
and
sbb
int3
add
pop
mov
ror
lods
jne
rolb
jle
mov
inc
push
les
and
jge
push
push
sbb
inc
inc
mov
or
jecxz
pushf
mov
aaa
idivb
sub
test
test
fnstsw
push
or
dec
or
test
pop
add
pop
xor
push
or
cwtl
or
adc
adc
cwtl
jmp
repnz
pop
mov
lods
and
cmp
cmp
adc
inc
cmp
in
push
out
cmpb
test
je
addr16
scas
pop
test
sub
jg
add
inc
shlb
jle
pusha
push
jmp
cmp
or
je
or
imul
sbb
mov
les
sub
pop
add
adc
orb
dec
insl
arpl
std
insl
add
jne
inc
add
xor
xchg
repnz
ret
or
inc
int
xchg
cwtl
pop
adc
adc
packsswb
pop
inc
leave
out
shrb
adc
jl
add
add
ja
adc
loopne
push
or
sbb
pop
add
or
xor
xchg
push
mov
inc
call
ror
xchg
sbb
add
and
cmp
pushl
dec
push
cli
adc
cmp
enter
test
inc
cs
arpl
loopne
xor
mov
in
sub
mov
jns
std
popf
test
inc
test
mov
push
stc
ja,pn
cmpb
lea
sar
cmp
je
pop
cmc
and
mov
ret
push
pop
dec
inc
shlb
add
pop
imul
lods
sub
jge
ret
aad
inc
cmp
jae
push
cmp
jl
mov
inc
mov
rorb
dec
adc
pop
dec
hlt
cmp
out
incl
pop
lock
jne
clc
push
xor
lcall
ljmp
pop
fmuls
adc
loopne
add
inc
enter
incl
dec
dec
sub
push
add
xor
mov
mov
icebp
cmp
scas
mov
mov
mov
mov
fcmove
mov
or
dec
incl
sbb
adc
and
mov
add
or
push
xchg
xlat
fisubrs
jne
jmp
fildl
fwait
mov
push
xchg
mov
arpl
adc
push
lret
in
icebp
aaa
dec
cmp
popw
jle
cmpsl
das
insb
jecxz
jb
test
das
or
xor
inc
push
sub
enter
inc
mov
jmp
aam
pop
sahf
das
dec
loope
push
and
jle
orb
add
mov
idiv
add
js
dec
inc
push
lock
insl
jmp
adc
jg
pop
js
mov
hlt
outsb
lods
adc
insb
aam
push
je
dec
in
adc
in
pusha
jbe
sub
addb
xor
dec
in
adc
dec
jg
adc
ja
fld1
orl
sub
icebp
push
add
pop
hlt
cmpsl
loopne
xchg
aad
xlat
pusha
add
xchg
or
rolb
ret
or
push
ss
std
loopne
cmpsl
jecxz
negb
std
jb
shll
jg
ja
pop
test
push
pop
test
sub
mov
add
or
notl
repnz
jmp
dec
xor
xor
adc
xchg
push
jne
lock
out
jnp
push
inc
lret
addl
mov
stos
sahf
adc
and
sub
punpckhwd
dec
sub
lret
mov
or
rcr
pusha
mov
adc
xlat
je
cmp
repnz
shll
testb
movb
data16
cmp
rolb
orl
xchg
jge
push
jmp
cmp
fmulp
inc
movb
cmp
adc
je
inc
xor
sub
add
repnz
push
or
push
adc
push
sub
push
fsts
jnp
aad
shr
jmp
das
xor
aaa
dec
xchg
les
test
ret
and
mov
mov
cld
xorb
shlb
fstpl
pop
jmp
imul
loope
sub
push
lahf
dec
pop
or
jp
loop
and
or
add
inc
mov
push
sbb
cs
mov
shl
sub
lss
pop
push
sub
inc
shr
rcr
shr
rcr
or
div
fildll
sahf
pop
dec
adc
inc
mul
pop
jb
cmp
or
push
jbe
dec
sub
sbb
mov
jecxz
adc
or
fcmovu
ficompl
xchg
into
xchg
rorb
adc
test
mov
mov
adc
add
add
mov
hlt
test
push
mov
lock
sub
popa
mov
call
xchg
push
pop
xchg
call
insb
lcall
dec
movsb
mov
sbb
sbb
add
cmpl
jne
lea
shrl
or
lahf
dec
out
ret
dec
dec
adc
loop
push
jae
mov
sub
test
mov
cmp
pop
mov
push
or
cmp
adc
inc
xor
and
adc
inc
add
pusha
sbb
inc
or
jo
add
and
and
aaa
rol
inc
imul
lcall
sub
inc
add
xor
xchg
or
add
push
mov
cld
sbb
subb
mov
inc
daa
pop
ficoml
push
clc
pop
movsl
es
jmp
xorl
aam
inc
mov
movsb
mov
loope
xor
pop
sub
sbb
sahf
je
xchg
cli
divb
dec
push
add
lea
lea
test
in
or
int3
cmp
inc
adc
jbe
sbb
mov
popl
and
and
mov
mov
cmp
arpl
dec
enter
sbb
adc
or
inc
xor
std
loopne
mov
imul
pusha
add
sub
pop
pop
sbb
or
sbb
push
das
std
mov
rcrl
ljmp
push
inc
cmp
xor
out
cli
test
call
jnp
inc
lret
pop
jp
push
sarl
popw
xor
or
les
add
add
outsl
push
movsb
in
cmpsb
int3
xorl
adc
xchg
xchg
fldt
sbb
xchg
xchg
xchg
xchg
sub
xor
and
inc
and
daa
mov
inc
inc
cmovs
add
add
leave
pusha
fs
leave
jo
js
movsb
cmp
adc
xchg
dec
es
mov
xchg
cwtl
pushf
aaa
cltd
fs
mov
cmpsb
fsubs
test
test
cmp
add
add
loopne
jl
and
push
mov
imul
data16
call
movsb
and
adc
movsb
pusha
inc
lcall
or
and
and
std
fstpt
and
pop
xor
cmp
cmp
adc
pop
rclb
test
push
xor
xchg
ret
push
inc
int
cmp
rolb
les
jne
out
sbb
popa
mov
sbb
lret
aad
icebp
insb
lods
jmp
les
mov
xchg
movsb
or
loop
adc
xor
rclb
push
or
or
dec
pop
test
hlt
fdivl
sbb
xchg
pop
push
push
xor
mov
scas
leave
ret
testl
add
add
iret
pop
mov
inc
push
sub
loopne
fwait
cmp
adc
pop
fdivs
pop
mov
pop
and
in
xchg
les
lock
xchg
inc
jle
das
cmp
push
adc
cmp
sahf
adc
loope
push
ret
ret
testl
jbe
mov
lea
or
push
insb
sub
popf
push
pop
int3
or
push
push
inc
add
inc
ret
cmp
int
fwait
jo
jl
sbb
popf
or
add
je
xor
test
push
dec
and
sbb
cli
loopne
test
dec
addb
or
addb
lods
or
addr16
and
dec
adc
add
ficoms
jb
inc
cmpsb
add
int3
inc
repnz
push
clc
sahf
clc
stos
cltd
sub
push
or
or
sub
or
xor
and
lcall
and
stos
adc
adc
scas
and
xchg
out
jl
adc
popf
movsb
push
fnstenv
xlat
jmp
mov
pusha
pusha
cmpsb
dec
adcl
or
push
mov
in
lahf
loopne
xor
adc
mov
xor
add
and
rclb
int
inc
jmp
sbb
lcall
xor
jne
add
mov
mov
mov
push
in
mov
lock
cmp
jb
push
mov
push
add
push
lahf
jmp
sub
lea
mov
adc
movsbl
and
and
mov
orl
es
or
cmpsb
jno
notb
xor
mov
push
push
jmp
xor
inc
inc
test
cli
ja
fisubrl
pop
mov
mov
scas
dec
lods
lods
xabort
in
add
pop
fbld
data16
xor
jne
adcb
sub
mov
or
push
std
sbb
popa
push
and
out
mov
pop
and
fcmovnbe
sti
mov
std
mov
add
mov
mov
cmpsb
mull
or
aad
inc
inc
aaa
iret
mov
ret
push
adc
stos
enter
test
xchg
jmp
inc
insb
inc
dec
ljmp
add
pushl
mov
rcrl
sbb
pusha
dec
add
loope
insl
lret
and
pop
addl
xor
inc
and
test
popl
mov
pop
cmp
in
jnp
cmp
sub
or
push
xor
push
hlt
mov
mov
stos
jmp
addb
jo
stos
stc
cmp
add
pusha
xlat
jbe
cmp
fsubs
repnz
push
xchg
pop
shlb
filds
adc
sbb
dec
inc
lea
cs
push
push
fmuls
loopne
loop
lods
jnp
sbb
cmp
pop
pusha
sbb
xchg
cmp
xchg
test
add
test
mov
sub
xchg
push
incl
sarl
cmp
test
mov
mov
add
push
or
push
rolb
jno
add
jp
inc
mov
loope
sahf
ret
or
cmp
jne
movzwl
scas
cmp
jecxz
dec
ret
sbb
mov
inc
int
push
jmp
faddl
cmp
shl
mov
iret
test
mov
sub
or
jg
add
cmpsb
fisttps
cmp
add
dec
mov
imul
mov
inc
mov
sbb
dec
rcll
sbbb
mov
fbstp
stc
inc
lret
and
jmp
fsubr
push
pop
xchg
mov
andl
xchg
cli
aaa
rclb
jae
cmc
mov
cmp
jne
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fmuls
xchg
push
sub
and
ffree
push
sbb
inc
add
sarb
daa
jmp
push
xchg
sbb
pushl
push
cltd
es
add
loopne
cmp
or
xchg
inc
cmp
cmp
out
adc
rclb
inc
lods
push
dec
sti
mov
pop
mov
inc
inc
sbb
cmp
cmpsb
insl
or
xchg
pushf
add
dec
dec
in
add
push
jo
mov
orl
dec
stc
pop
xchg
cmp
cmp
sbb
mov
add
xchg
push
xchg
sub
nop
cmp
addb
test
lea
push
jbe
push
mov
scas
sub
int
jo
pop
mov
mov
cltd
std
jno
loopne
adc
mov
push
outsb
add
xor
out
add
mov
jo
lret
jmp
mov
xchg
call
sti
mull
jge
mov
fsubr
or
inc
pushl
lods
xor
loope
adc
cmpsb
xchg
cmpsb
les
ljmp
push
cmp
xchg
jl
jne
divl
fiadds
cmp
mov
xchg
fbstp
push
sarb
sbb
and
jecxz
sahf
dec
cmp
pop
and
xchg
sub
cmp
or
cltd
test
repz
leave
inc
pop
or
jmp
roll
pop
scas
mov
add
sub
or
and
jle
jne
or
sbb
das
loop
mov
sbb
push
call
or
sbb
push
jp
add
xor
int
mov
cmp
mov
unpckhps
cmpl
repz
sbb
or
sbb
mov
inc
adc
and
add
inc
and
std
mov
dec
cli
push
push
pop
sti
add
pop
and
mov
push
outsb
iret
ss
sbb
push
and
mov
aaa
xor
sbb
cmp
fs
scas
xchg
scas
fldl
mov
shll
stc
adc
out
push
pop
inc
xor
ret
or
pop
push
or
mov
insb
out
add
nop
std
into
mov
rcl
fildl
jg
test
mov
xor
mov
lock
sub
xor
sbb
sub
outsl
inc
repnz
orl
pop
cwtl
add
pop
cs
xor
or
loop
mov
sbb
gs
and
arpl
ljmp
loope
andl
lock
xchg
sbb
jge
shlb
adc
and
addr16
pop
push
mov
jne
or
add
je
mov
inc
or
cmpb
push
jne
add
mov
nop
jge
and
adcb
push
movb
jecxz
lods
pop
faddl
pop
mov
incl
mov
and
cmp
int
insl
mov
lahf
ljmp
or
xor
mov
ljmp
popl
pop
xchg
lock
pop
add
sub
les
mov
in
mov
xchg
push
jmp
push
and
lahf
bound
mov
pop
jl
addr16
xor
shrb
pop
sbb
push
cmp
cwtl
and
add
in
mov
adcl
sbbb
push
adc
adc
jle
cmp
sbb
in
pop
call
test
mov
pop
sarb
lret
push
dec
int
adcl
jmp
icebp
xor
cmp
cld
mov
adc
dec
cmp
cs
mov
or
aad
xchg
ret
push
add
push
or
pop
pop
push
or
xor
and
pop
add
and
sub
sbb
push
sbb
pop
push
jecxz
loopne
add
push
cmp
sub
rclb
test
in
add
adc
sub
outsb
fcmovnbe
sahf
mov
dec
dec
test
cmp
xchg
rcrb
xchg
xchg
pop
mov
sbbb
pop
ja
je
and
das
mov
es
cmp
and
popa
fcoml
jmp
or
test
ret
dec
cmp
adc
lds
call
sbb
mov
pop
pand
add
mov
movsb
sbb
iret
and
adc
xchg
xchg
adc
dec
fldlg2
mov
cmp
ret
push
mov
pushf
cld
andb
nop
mov
mov
xor
aas
repnz
nop
hlt
jo
leave
inc
subl
dec
into
jl
cli
and
or
or
adc
lock
ds
jmp
or
adc
lods
or
icebp
in
inc
xchg
xor
jae
shll
mov
sbb
imul
adc
xor
popf
or
in
cs
or
adc
xor
in
cmp
adc
and
mov
ss
push
dec
or
ror
sbb
and
add
sarl
add
sub
sbb
adc
stos
mov
push
movsl
add
cltd
inc
pop
roll
lcall
xchg
cmp
push
popf
pushf
pop
sub
je
push
popf
daa
add
insl
ds
cmp
mov
mov
pop
dec
shrb
push
sub
dec
jecxz
sub
lea
add
in
add
cmp
jge
js
sti
push
or
add
or
sar
or
les
xor
inc
loopne
pop
loope
insb
push
mov
xchg
mov
pop
testb
sahf
inc
cs
or
mov
shl
not
xor
sbb
jbe
adc
or
shll
nop
xchg
jmp
and
dec
add
inc
outsb
les
test
add
cmp
ret
adc
test
add
shrl
inc
add
mov
add
sbb
or
push
les
subl
inc
jmp
mov
outsl
push
clc
incb
adc
lock
ja
frstor
cld
mov
and
aaa
in
data16
out
jmp
xchg
rorl
test
xor
or
inc
std
shll
sub
lods
sbb
es
or
flds
and
cltd
inc
enter
pusha
pusha
loope
pop
xchg
adcb
sub
mov
inc
jecxz
dec
sub
adc
fnstsw
pusha
aam
je
pusha
insl
push
sub
psubsb
push
addr16
outsl
adc
inc
or
fs
adc
lret
sub
add
add
loop
out
test
fisttps
std
and
mov
shl
ja
or
dec
jne
orl
push
sbb
mov
in
push
jmp
testl
fcmovbe
cwtl
xor
xorb
divb
sub
and
inc
add
adc
add
inc
flds
fsts
mov
inc
or
or
pop
push
push
jmp
add
push
mov
pop
sbb
es
inc
ss
inc
popa
push
cmp
xorl
inc
lcall
push
mov
arpl
jbe
push
xor
lret
jp
xor
movl
mov
aaa
sbb
out
or
sub
std
testb
add
sub
sub
and
pop
jbe
xor
jp
push
shrb
jae
nop
psubusw
inc
test
int3
adc
roll
repz
lcall
sub
push
icebp
into
cmp
stos
lock
mov
fstpl
loop
add
cmp
cmp
clc
jbe
or
or
imulb
mov
inc
lods
adc
lods
scas
mov
pop
div
mov
add
add
mov
fs
sarb
test
mov
jle
cmpsb
not
insl
in
adc
pop
orl
loopne
cmpl
int3
mov
push
push
and
sahf
jmp
pop
movsb
push
add
pop
fsubr
aam
sbb
adc
xchg
and
mov
decb
push
and
fadds
mov
pushf
pop
sub
sbb
jle
push
add
int
add
js
and
or
inc
js
add
add
xor
push
out
faddl
add
loope
shl
push
pop
movzbl
inc
stos
ljmp
mov
je
add
movsb
sbb
test
js
or
add
shrl
mov
and
xchg
pop
sub
lods
push
adcb
adc
fcmovnb
mov
adc
mov
push
mov
testl
pop
jo
dec
inc
and
add
subps
inc
or
or
adc
xchg
adc
jl
or
dec
adc
fneni(8087
add
sub
fmul
cmp
mov
push
push
int
and
add
test
mov
imul
in
pop
nop
or
cmp
and
or
mov
and
sub
xor
ret
out
or
movb
clc
mov
and
and
into
inc
adc
push
mov
sarb
data16
pop
std
push
shrb
mov
mov
cld
pop
fsubl
pop
push
clc
addr16
scas
iret
push
into
mov
pop
ja
and
sahf
push
jle
adc
jne
jge
test
gs
ljmp
xchg
mov
xor
lock
add
ljmp
dec
push
ret
test
jmp
addr16
or
pop
mov
adc
push
xor
test
stos
test
pop
or
mov
aad
icebp
sbb
mov
inc
shll
push
or
stos
inc
add
or
push
out
pop
cli
adc
mov
push
xlat
cmpl
xor
push
add
adc
jl
sbb
sub
shr
loop
pop
sub
mov
aad
push
fldl
mov
in
or
loop
inc
or
outsl
and
dec
sbb
and
mov
or
cld
pop
mov
push
mov
fldt
add
adc
int3
and
sbb
mov
and
jle
call
test
jb
mov
dec
dec
out
jo
push
cli
mov
je
mov
rolb
test
cli
call
push
in
mov
or
pop
test
and
pop
mov
clc
inc
outsl
push
repz
out
add
push
mov
mov
ss
jbe
cmovb
bound
cmp
addl
ret
andl
or
push
je
shlb
push
pusha
das
imul
and
sub
and
adc
pop
pop
aas
dec
das
jbe
stos
mov
jnp
nop
iret
jl
add
jnp
rclb
mov
xchg
pusha
lcall
sub
adc
sbb
or
mov
adcb
ret
gs
mov
cmpb
xchg
je
psubq
xchg
shll
lods
adcl
test
push
sbb
or
enter
gs
enter
popa
and
cli
or
adc
pop
aaa
add
je
adcb
movsl
hlt
lahf
push
cmpw
and
inc
push
mov
mov
ret
mov
popa
nop
jb
cmc
adc
or
mov
fidivrs
xor
xor
push
or
insl
sbbb
add
jmp
aas
daa
adc
ja
push
add
ret
sub
scas
cwtl
pop
test
jne
lret
cs
add
sbb
ret
jp
push
inc
stos
stos
repnz
pop
pop
xor
sub
jne
sub
loope
test
call
fildll
xchg
mov
cltd
and
add
mov
inc
mov
dec
xchg
loopne
lea
push
jecxz
movsl
pop
into
sub
inc
shl
add
xchg
push
ret
cmp
jo
ja
loop
rolb
adcl
outsb
inc
aas
or
jmp
dec
cltd
insb
pop
and
mov
out
pop
hlt
int
mov
inc
push
into
pusha
mov
lea
xor
repnz
cs
dec
or
jb
cmp
sbb
lahf
stos
xor
lea
adc
incb
jae
or
dec
mov
adc
or
movsb
push
xorb
test
and
jge
push
mov
in
xor
loopne
mov
inc
mov
lock
cmp
dec
dec
stos
inc
sbb
cmp
psubusb
cmp
xor
movsl
cmp
sub
loop
xor
rorb
add
je
pop
int
es
and
push
cld
adc
push
pop
popf
je
adc
dec
outsb
and
push
ds
mov
aaa
jno
or
and
lock
test
adcl
or
addb
add
aaa
sub
sarb
je
mov
and
jge
popa
mov
sub
pop
in
adc
int3
or
pop
hlt
test
xchg
sub
adc
adc
lcall
lea
mov
cli
shld
jge
cmp
pop
inc
icebp
sub
mov
lcall
es
movsb
dec
orl
add
rorb
inc
mov
jecxz
or
jae
out
pop
push
outsb
mov
cmp
jo
push
imul
inc
mov
sub
jl
pop
or
gs
stos
mov
into
out
mov
jl
mov
out
add
add
and
lods
sub
push
lds
jge
inc
add
mov
shl
sbb
push
sbb
insb
add
xor
lock
cmpsl
and
lea
xor
movsl
or
dec
fdivr
and
push
sbb
push
sbb
xchg
mov
and
adc
push
adc
pop
push
add
push
add
mov
add
sbb
mov
and
or
jl
push
inc
push
adc
xchg
sub
sbb
add
and
movsb
mov
leave
push
adc
into
mov
add
xor
shll
mov
dec
sub
jne
or
mov
fwait
outsb
ljmp
or
cmp
std
stos
test
loop
jne
inc
jmp
mov
sub
adc
lret
loop
add
sub
mov
sub
cmp
ja
or
mov
frstor
mov
es
mov
into
or
pusha
js
fldt
cmc
lods
call
mov
pop
nop
stos
mov
into
jmp
and
or
fcom
xor
aas
sbb
mov
jmp
cmpsl
mov
mov
mov
inc
mov
sub
hlt
mov
mov
les
in
adc
push
xor
jecxz
cmp
jmp
dec
push
mov
mov
pop
in
sub
sub
pushf
push
cmp
adc
ds
fs
sbb
mov
jae
test
sub
push
cmp
jbe
insb
inc
mov
pop
jge
pop
out
jge
sarl
mov
sbb
nop
iret
sub
add
jne
js
jae
imul
test
aad
cmp
pop
orl
mov
and
call
aaa
mov
lods
out
push
sub
mov
or
orl
cmp
push
and
inc
mov
xor
mov
jo
test
mov
je
inc
scas
call
mov
shrl
add
xor
fldenv
pop
cmp
cmp
testl
cmove
fdivp
pop
push
les
dec
cmp
jle
fisttpll
cld
mov
jge
push
sbb
and
sub
das
nop
rolb
or
dec
popa
mov
jecxz
add
pushf
jmp
push
cwtl
mov
xor
or
scas
push
mov
dec
mov
and
mov
cmp
ljmp
dec
or
pushf
xor
cmp
jge
neg
add
adc
adc
xor
sub
cmp
cmp
cmc
cmp
nop
sbb
cmp
mov
enter
mov
adc
adc
push
push
mov
jno
lods
inc
in
and
pop
loopne
test
jmp
push
inc
mov
sbbl
rorl
std
cmp
jb
mov
dec
mov
jbe
rorb
inc
add
es
sti
aas
loop
mov
mov
mov
ret
and
scas
mov
nop
shlb
and
jle
std
mov
ja
ja
jmp
sbb
pop
mov
mulb
sbb
inc
testl
push
insb
jp
and
jne
lret
out
cmp
inc
into
jne
inc
or
fisubrs
pop
cmp
cmp
jne
hlt
int3
add
loopne
imul
adc
test
mov
lds
rcrb
inc
add
les
adc
or
add
test
insb
clc
sub
dec
out
shl
dec
lock
xchg
push
add
imul
insl
mov
pushf
sub
lcall
add
test
movsb
int3
aaa
int3
and
push
loop
js
pusha
mov
aam
gs
lods
add
lret
ss
or
shr
ljmp
js
pop
mov
jg
or
push
cld
sub
pop
jne
push
mov
je
jg
loopne
adc
shl
xchg
aam
not
out
or
mov
sahf
dec
push
inc
or
shrl
cmpsb
clc
ret
push
push
sbb
and
adc
imul
add
ficompl
ret
fcmovbe
sti
pop
push
aas
sub
in
fiadds
push
call
stos
ret
mov
mov
jl
shlb
mov
pop
cs
jno
mov
loopne
ja
orb
mov
add
cmp
sub
cwtl
pop
mov
push
into
jmp
scas
xlat
std
mov
add
shlb
jae
jno
add
movsb
int3
adc
xor
mov
cmp
int3
sbb
insb
int
xorb
lret
das
mul
popf
adc
negb
jns
sbb
movups
cmp
and
shlb
inc
mov
inc
rclb
loopne
push
push
xor
stc
cmp
repz
inc
xor
testl
cmpsl
push
rol
je
lcall
lahf
and
push
clc
scas
jg
loope
add
or
incl
test
pop
jne
xchg
mov
cmp
jbe
movsl
pop
add
mov
mov
or
rorl
jl
cmp
aad
mov
in
mov
xchg
sub
dec
pop
in
pop
sti
scas
sbb
xchg
adc
inc
cs
or
testb
stc
gs
or
decl
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
push
lock
inc
mul
pop
add
mov
sbb
sub
sbb
test
cmc
pop
jae
cmpsb
int3
and
push
mov
or
pop
imul
aas
or
add
add
mov
sub
xorl
jmp
mull
das
pusha
xchg
gs
imul
and
sub
push
add
mov
testb
sub
mov
mov
mov
cmc
jmp
mov
shrb
fdivs
test
mov
or
add
adc
inc
dec
fwait
mov
je
test
push
cmpl
in
clc
add
aam
lret
mov
mov
xor
aas
sub
xchg
ds
movb
lea
push
jle
lret
mov
push
xchg
jecxz
in
clc
add
xor
mov
es
sbb
loop
lock
ljmp
lret
jmp
sub
in
push
sub
fcmovnbe
ret
jg
dec
add
movb
push
push
mov
cmp
add
xor
sub
pop
xchg
push
or
idiv
xor
push
or
pushf
push
or
sub
add
dec
ss
dec
mov
lea
push
push
xchg
rcrb
lods
dec
scas
mov
mov
xor
mov
dec
addr16
xor
jl
inc
and
insb
push
add
jge
loopne
jne
dec
ret
jbe
xor
mov
enter
sbb
mov
rcll
in
into
lahf
adc
push
xor
shlb
enter
mov
call
es
inc
or
movl
cmp
mov
inc
imul
sbb
sub
xchg
shrl
pop
sub
jge
adc
les
je
jmp
popl
movb
aas
das
ja
jge
dec
rclb
sbb
or
fcoml
xor
jp
mov
loopne
or
adc
enter
loop
and
test
cwtl
or
mov
pop
or
test
or
out
pop
test
clc
mov
nop
call
mov
and
add
das
jbe
or
and
pop
push
xor
cmp
inc
enter
aam
jmp
js
push
rcl
cmp
push
dec
in
cli
pop
cmp
dec
and
add
cmpsb
movb
mov
and
enter
add
xchg
mov
bound
ljmp
loopne
decl
lcall
jne
pop
cmp
rcll
add
sahf
add
mov
or
adc
test
adc
mov
xor
mov
xlat
or
mov
or
popa
mov
xchg
push
and
cmp
movswl
pop
mov
sbb
les
lods
popaw
pusha
enter
or
cmp
add
mov
add
andl
dec
shrd
push
jle
mov
ss
jl
jmp
clc
mov
or
pushl
xchg
stc
inc
add
dec
jmp
addr16
xchg
clc
sub
adc
cmp
fstl
mov
roll
push
push
addb
xchg
xor
cmp
add
adc
sbb
out
and
call
pop
sbb
js
jg
loop
adc
sub
or
inc
adc
neg
cmp
mov
lock
outsb
push
cli
sub
inc
shll
mov
aad
push
jns
add
jbe
nop
cmp
test
mov
xchg
hlt
jmp
sub
jg
lods
jb
mov
dec
dec
inc
dec
pop
add
pop
or
or
rorl
out
sbb
pusha
aad
stc
mov
add
jae
stc
mov
ficoml
sub
mov
mov
sub
jbe
pop
ljmp
cmp
loop
call
pop
jb
cwtl
add
mov
pop
sub
mov
xor
cmpsl
pop
or
jmp
lock
inc
sub
adc
jne
inc
sarb
mov
jne
into
es
jl
cs
adc
mov
scas
enter
or
cltd
rclb
into
mov
cwtl
sbb
out
addb
and
xor
pop
push
rcrb
jb
inc
repz
cmp
sbb
fimuls
daa
aam
dec
test
addb
mov
imulb
enter
push
shll
push
jmp
insl
cmp
pop
or
sub
lods
sub
xchg
inc
pop
stc
mov
inc
sarb
add
ss
xor
jge,pt
sti
add
je
or
pop
ffree
and
jne
loope
xchg
int
jns
jb
popa
je
inc
je
sarb
dec
xor
or
pop
inc
and
dec
dec
cmpsb
adc
push
shll
daa
insb
mov
pop
or
stos
push
rorl
dec
lret
arpl
sub
movb
add
adc
int3
outsb
in
call
jne
fmull
insl
push
pop
clc
fstps
or
nop
clc
push
in
inc
daa
xchg
xchg
ds
clc
mov
adc
ret
std
das
add
sub
ficomps
push
add
popa
out
bndldx
arpl
cmp
xor
adc
inc
aas
or
inc
add
cmp
add
cmp
clc
jmp
inc
cltd
or
jb
sbb
push
cmpb
jne
jp
inc
and
movsl
jmp
xchg
rcrl
das
xor
jmp
inc
stos
pop
push
addr16
insl
fcoms
sub
push
cmp
adc
xchg
pop
je
dec
inc
sub
mov
aad
cld
lahf
inc
loopne
outsb
dec
push
sub
and
jo
gs
dec
leave
dec
popf
ret
orl
and
xor
sub
aaa
push
movsl
xor
aaa
sub
push
xor
pop
fcmovu
or
cmp
sub
add
dec
sub
mov
jp
xchg
cs
inc
mov
sbb
xor
xor
mov
pop
cmp
cltd
shll
lods
or
add
pop
cmpl
and
push
or
push
or
andl
push
adc
popa
jae
adc
or
xor
imul
pop
pop
cmp
sarb
or
aad
or
sbb
dec
pop
add
and
je
mov
or
jbe
jge
dec
fs
pusha
mov
hlt
lock
adc
jb
inc
cmp
or
je
add
jnp
outsl
int
lock
orb
jl
cmp
lea
push
mov
icebp
test
pop
cmp
xchg
xor
nop
add
pop
mov
call
lret
add
dec
or
hlt
jmp
or
jmp
ss
jle
mov
je
push
ljmp
adc
andl
add
shl
sbb
push
sbb
int
jae
shrl
dec
fst
jne
test
sbb
les
sbb
mov
adcl
add
adc
cmp
adc
push
add
jne
in
xchg
jecxz
inc
das
aaa
mov
roll
cmpsl
inc
data16
mov
or
dec
or
or
into
push
mov
adc
movsl
aad
add
test
fnstenv
decb
add
loopne
ss
xor
mov
pushf
mov
xchg
js
add
adc
loopne
push
mov
jns
jne
adc
mov
mov
pmaxub
fsts
adc
aaa
pop
hlt
push
or
xchg
fisubl
and
call
lea
xrelease
mov
popa
ret
xchg
xlat
push
loopne
cmp
jge
notl
mov
cltd
sbb
sbb
ss
je
arpl
inc
scas
cld
das
add
call
sub
push
mov
pushf
and
xor
sbbb
push
cmp
sbb
inc
nop
xchg
jmp
mov
xchg
mov
add
fwait
pop
adc
or
testb
xor
stc
inc
inc
test
outsl
xor
pop
mov
sub
push
outsb
sbb
cmp
cmpb
dec
outsb
push
or
xor
mov
adc
pop
mov
cld
jo
jecxz
cmpl
lods
fiaddl
and
jmp
adc
mov
add
adc
xchg
adc
pop
andl
mov
mov
push
hlt
sbb
fsubl
shlb
ljmp
or
xor
lret
mov
fs
sub
mov
dec
movsb
cmp
cmp
adc
cmp
nop
add
ret
sahf
mov
sysexit
outsl
pusha
cmp
ljmp
mov
fsub
adc
lods
mov
push
sub
arpl
or
mov
test
sbb
adc
pop
sbbl
inc
xor
push
pop
inc
in
aam
xor
push
mov
xor
or
fistps
add
lret
sub
loope
movb
sbb
sbb
loope
push
lock
es
sub
and
sbb
and
repz
lea
insl
push
cs
mov
outsl
sbb
fwait
dec
cmp
adc
cmp
xchg
pop
push
loope
bound
add
and
xchg
ljmp
sub
fisttpl
aas
dec
cmp
lea
or
jp
shr
add
push
fs
or
testl
fcmovb
jmp
shr
or
mov
add
pop
sti
testb
or
bound
scas
push
aad
in
stos
mov
cmp
sbb
add
or
mov
fldl
bound
out
jne
fwait
push
adc
fnstcw
inc
push
or
xchg
ds
in
cmp
inc
dec
add
lea
mov
shr
cmp
mov
adc
or
mov
cs
or
push
jp
adc
adcb
fwait
repnz
dec
sbbl
cmp
cmp
adc
sbbb
pushf
push
out
inc
jbe
movsb
mov
xor
jle
in
insl
or
cmp
ficoms
or
push
notb
or
shl
adcl
adc
cmc
test
add
incl
cmp
loope
or
test
test
adc
test
je
dec
call
mov
cmp
nop
cmp
xlat
cmp
popa
cmp
pop
cwtl
movsb
rolb
xor
adc
in
push
add
cmp
ja
negb
xchg
out
and
or
pop
call
or
sub
pmulhuw
jne
add
call
and
add
dec
and
and
mov
cld
lds
push
xchg
push
adc
push
cs
outsb
cmpsb
dec
testl
add
inc
xorb
pusha
ss
mov
add
pop
fwait
sbb
mov
idivb
jne
dec
cmp
lock
jl
cmpb
jl
xor
mov
cmp
push
shrb
xor
inc
xchg
adc
xor
fsts
dec
test
aad
push
ljmp
push
push
mov
push
push
jne,pn
je
and
pop
roll
fnstcw
and
adc
push
dec
pop
or
ficomps
aam
shrb
jmp
daa
in
rolb
loopne
cmp
jbe
mov
add
and
shl
or
or
push
dec
call
push
fcmovu
sbb
or
mov
je
jns
test
je
mov
xchg
jo
or
cwtl
test
add
cmpl
mov
sub
lret
push
daa
fprem
xchg
nop
jne
ljmp
pop
outsb
rorb
push
dec
mov
push
jp
les
fs
aaa
and
sbb
pop
stos
fidivl
push
xor
in
incb
adc
fdiv
fiaddl
or
adc
sbb
pop
iret
and
sbb
sbb
fnstenv
aad
into
jl
xchg
sbb
fcoms
inc
movsl
jmp
fcomi
gs
dec
sbb
adc
mov
nop
int3
sbb
sbb
dec
jns
fisttpl
xchg
mov
adc
cmp
inc
lds
jae
lods
rcl
ljmp
jle
loope
shr
ret
push
or
pop
sub
idiv
and
mul
cld
lock
je
push
rclb
mov
or
add
scas
adc
rorb
clc
es
fs
insb
add
push
adc
hlt
inc
dec
nop
ss
xchg
mov
push
cli
inc
and
gs
int
sbb
into
jbe
jns
adc
and
aas
bound
mov
sbb
cmp
movsl
les
adc
push
xor
adc
jp
fisubrs
ds
dec
and
lret
sbb
cmpxchg
inc
inc
inc
adc
data16
xor
test
nop
dec
jo
mov
scas
gs
mov
adc
inc
or
cs
fisubs
cmpsb
out
or
dec
add
mov
pushl
dec
out
ss
ret
pop
xor
jge
mov
sbb
adcl
mov
sbb
jne
cmp
testb
lds
push
sub
leave
je
incl
inc
mov
mov
cs
mov
rorl
add
mov
jg
pushl
cmp
ja
add
cmp
adc
cmp
jne
sbb
xor
adc
mov
inc
adc
cmp
pop
subb
jbe
add
cmpsl
ss
addr16
sbb
ret
xchg
fwait
inc
push
dec
mov
adc
dec
push
mov
jno
and
cmp
xor
sbb
pop
test
inc
idivb
cmp
je
fildll
push
pop
call
leave
pop
sbb
int
pop
mov
or
push
xor
mov
lods
mov
fnstenv
and
testl
mov
jo
inc
mov
call
inc
push
push
mov
and
xchg
ljmp
aam
mov
mov
int
pop
cmp
push
mov
dec
pop
inc
ret
mov
ss
push
add
cmp
xchg
push
aam
xchg
xchg
inc
adc
arpl
push
pop
int
test
inc
push
mov
add
lds
rcrb
xor
inc
push
inc
mov
nop
lret
inc
inc
add
jg
out
jg
mov
push
rcl
rcl
jns
out
aad
xlat
fcomp
adc
fstpt
sarb
add
sub
nop
data16
inc
mov
mov
add
dec
into
adc
mov
sbb
dec
sub
faddp
enter
std
lea
mov
mov
jp
bound
pusha
push
push
push
add
loope
xor
add
popa
mov
push
jb
xor
push
je
test
jne
inc
call
cmp
filds
das
or
push
mov
push
stc
aas
or
add
adc
mov
push
lods
das
movsb
jno
lods
mov
imul
lods
add
push
pusha
lcall
lea
rorb
or
adc
js
mov
mov
push
les
sbb
test
out
loop
shll
test
cmp
lock
sub
in
and
lret
adc
or
xor
sti
add
les
sub
call
adc
les
mov
rcll
insl
repz
or
fadds
xchg
aam
inc
hlt
fucomp
mov
sub
icebp
or
mov
out
loope
into
and
lea
pop
sbb
movsb
subl
xchg
icebp
nop
pop
decb
xchg
gs
jns
jl
adc
and
mov
mul
jns
lods
jbe
in
xchg
int
outsl
ljmp
or
and
insb
or
mov
jne
fcmovnb
addb
add
add
cmc
ffree
push
mov
push
lea
sub
or
dec
xchg
mov
mov
push
int3
sub
cmp
cmp
push
shll
sarl
mov
jge
jl
shll
and
shlb
jno
add
jle
adc
push
scas
jne
mov
shr
rolb
rolb
loopne
cmp
addr16
rorb
gs
push
lret
out
inc
adc
inc
mov
clc
and
pop
sbb
ss
shrl
mov
hlt
sub
shl
adc
mov
dec
push
dec
cmp
push
push
adc
lock
lcall
jns
sub
testb
xlat
add
push
adc
mov
mov
loopne
mov
push
jnp
outsb
sub
sbb
adc
and
popa
aaa
aam
cmp
push
dec
data16
xchg
mov
or
dec
fnstenv
es
ja
rcrl
idivb
in
int
mov
push
or
dec
mov
mov
mov
repnz
pushw
sub
jo
push
test
cmpsl
adc
and
mulb
subl
jl
push
mov
xchg
pusha
mov
adc
xor
mov
or
jne
push
sbb
in
cmp
ss
inc
test
inc
mov
and
jge
mov
lods
dec
rolb
dec
mov
cwtl
xor
call
jp
mov
cmp
cld
lea
ficoml
int
in
mov
adc
xor
inc
pop
rorl
add
lods
rolb
cltd
add
sub
jp
add
jp
push
imulb
sbb
sbb
test
mov
and
jge
or
jge
inc
orb
inc
ret
inc
pop
lock
popl
cmp
jne
jne
adcl
rolb
shl
sub
pop
shll
jge
add
les
sub
notb
loope
movb
inc
mov
push
arpl
xchg
add
push
nop
cmp
call
push
adc
adc
add
cmpsl
sub
sub
and
popa
call
test
push
shll
test
jne
sbb
neg
and
insb
jle
inc
imul
icebp
sub
loopne
loopnew
scas
nop
je
fadds
pop
add
call
mov
mov
push
cmp
fnstcw
in
out
loop
jae
sbb
and
aad
stos
cltd
xchg
mov
add
or
mov
add
mov
or
faddp
movsl
mov
into
or
push
sbb
mov
dec
mov
clc
js
roll
inc
dec
enter
sti
scas
mov
cmp
push
shlb
add
pop
loopne
adcb
jne
add
add
add
in
into
or
sbb
mov
inc
test
in
fimull
orl
hlt
cmp
jge
sub
cmpb
or
add
dec
cmp
jae
mov
add
dec
push
pop
jb
add
add
fadds
add
sbb
fidivrs
jne
dec
mov
jb
int
inc
push
or
adc
loop
ret
and
add
push
add
inc
jbe
ret
adc
sti
sub
enter
or
or
and
ret
lcall
add
push
mov
shll
lea
adc
adc
out
or
jmp
cli
inc
out
iret
xchg
push
or
mov
jns
add
or
sahf
jmp
add
adc
pusha
test
adc
mov
stos
or
push
ret
fs
rclb
mov
add
add
cmp
ret
jg
ret
mov
mov
inc
and
cmp
xor
into
push
sub
push
pusha
inc
into
in
inc
jecxz
mov
rcrl
mov
pop
cmpps
or
nop
mov
adc
sahf
into
lock
ret
hlt
inc
push
pop
jae
or
add
add
add
ja
add
jl
push
test
mov
mov
push
je
pop
pop
or
push
mov
or
dec
pop
fs
test
xor
fidivrs
xor
and
ds
mov
mov
movsb
sahf
push
lret
inc
pusha
popa
cmp
or
pop
push
pcmpgtb
push
push
addl
cmp
cld
cld
sahf
xchg
or
xorb
or
cmp
stos
jg
subl
into
xchg
into
inc
ret
add
jge
and
in
stmxcsr
dec
imul
test
adc
data16
sbb
add
add
xchg
jle
out
push
mov
mov
xor
leave
repz
inc
jg
into
into
lcall
and
out
fisubrs
sarb
push
pop
nop
xchg
push
out
icebp
pop
cwtl
pop
mov
nop
int3
or
shlb
or
jecxz
jnp
pop
adc
clc
sub
pop
push
sub
add
leave
lahf
sbb
out
pop
test
add
xchg
addr16
add
add
inc
mov
sbb
je
pop
inc
lcall
xchg
sub
adcl
sub
sbb
lret
jb
lret
push
xor
xchg
push
adc
xchg
push
cmpsb
mov
push
test
inc
arpl
pop
imul
popa
xchg
test
lock
pop
lret
adcb
add
sub
cmp
adc
and
cmp
jno
sub
fwait
pop
movsb
cmovo
ficoms
push
sbb
push
dec
or
push
and
and
dec
icebp
daa
or
and
rorb
inc
adc
jge
addr16
cmp
jl
or
xchg
stc
and
add
rorl
mov
cmp
fmuls
aam
sbbb
push
adc
cwtl
orb
push
sbb
jmp
and
shrb
push
sub
loopne
lods
fcmovne
dec
ds
je
into
inc
jp
add
cmp
daa
loop
outsb
cmp
jbe
inc
inc
fsubrp
jmp
pop
sbb
cmp
inc
xchg
dec
dec
and
out
mov
jo
jbe
xchg
jns
jmp
add
ret
jmp
ret
xor
xchg
xor
cmp
ljmp
xor
cmpsb
jo
or
call
sti
dec
rolb
pop
xchg
imul
inc
xor
lock
jp
xor
inc
leave
pusha
rcll
cltd
sbb
jnp
inc
pushl
in
or
test
popa
fldt
and
xor
mov
fnsave
aam
pop
popf
jb
inc
rclb
minps
nop
popa
add
scas
jge
sbb
cwtl
add
mov
cmp
je
mov
fcompl
nop
in
push
hlt
rcrb
xchg
sbb
pusha
xchg
dec
inc
sbb
clc
cmp
incl
cmp
jge
lea
or
mov
xchg
int
push
imul
add
sub
stos
and
mov
and
xor
adc
jns
push
pusha
lods
push
shl
push
enter
pop
test
dec
cmp
adc
adc
inc
add
xor
jo
cs
sbb
adc
sbb
jae
jmp
push
push
xlat
movsl
popf
xor
test
or
and
popa
shrl
mov
pop
hlt
add
jmp
xor
mov
push
pop
or
scas
xchg
sub
jne
push
inc
sbb
and
lods
movsb
cltd
dec
lea
out
sub
jmp
xchg
pop
sbb
testb
sbb
andb
push
mov
push
sub
insb
mov
cmp
mov
loop
ret
sub
inc
pop
add
fadds
cmp
testb
enter
and
and
sbb
mov
ret
push
xor
cwtl
jge
int
pusha
xchg
test
sbb
in
and
lahf
orb
lock
addb
mov
pop
cmp
jl
jl
lea
or
enter
addl
rcrb
cltd
or
sbb
pop
inc
sti
rcll
fcoms
push
xchg
loopne
jmp
inc
push
adc
dec
loop
int
movsl
aaa
movsb
fisttps
cmp
outsl
push
sub
js
inc
shll
adc
or
mov
mov
outsb
stos
ret
rcrl
inc
js
mov
cmp
scas
sar
fcompl
sbb
fcmovbe
xor
sub
add
mov
mov
sbb
add
mov
rclb
add
roll
mov
stos
push
push
subb
push
adc
xchg
hlt
xor
mov
sub
push
arpl
popf
add
mov
push
pop
push
adc
sbb
inc
inc
ds
push
addl
mov
add
xchg
js
push
lock
pusha
dec
cmp
adc
shrb
mov
jns
push
inc
ret
insl
out
add
faddl
jae
adc
daa
pop
or
cmpb
mov
ficomps
or
test
outsl
adc
fwait
or
pop
or
shlb
sbb
xchg
test
movsl
ficomps
and
push
add
scas
cmp
sub
mov
sub
int3
rcll
mov
pop
test
sub
inc
cwtl
ljmp
and
aaa
movsl
bound
xchg
add
pop
jmp
jp
pop
je
daa
mov
loope
ds
adc
xor
mov
add
fsubrp
test
jns
fstps
mov
aam
icebp
lahf
dec
rolb
push
mov
or
xor
fstpt
das
fcomp
adc
testl
adc
pop
adc
xor
cs
and
push
int
add
arpl
push
add
test
cli
xor
dec
sbb
fistpll
lahf
cmp
push
push
idivb
xor
or
decb
in
jnp
gs
fsubl
jb
cmpb
and
dec
enter
mov
mov
xchg
aam
aad
leave
mov
mov
xor
lea
dec
mov
pop
xor
and
xchg
mov
dec
fimull
in
lock
push
lock
sub
call
test
fdivrl
or
adc
test
das
or
pusha
imul
adc
xor
and
in
inc
mov
popa
ret
sub
add
pop
fcoms
mov
inc
enter
or
nop
insl
adc
insb
sbb
jne
cmp
lods
inc
jl
mov
inc
adc
and
dec
sub
out
mov
xchg
insb
pusha
sbb
push
out
into
aad
pushf
and
push
jo
sti
push
add
pop
rorl
push
pop
pop
sti
cwtl
jmp
and
sbb
outsb
jecxz
and
imul
sub
mov
push
add
icebp
push
push
ss
aam
xchg
xchg
popa
enter
fsubrl
xchg
jno
xchg
mov
outsb
push
pop
mov
in
movups
pop
dec
in
call
fadds
test
xchg
cld
adc
fiaddl
and
push
mov
fs
mov
pop
jmp
nop
dec
mov
daa
mov
push
xchg
and
or
jnp
jno
dec
mov
fstpt
test
adc
push
cmp
pop
fstpt
dec
fdivs
xor
push
cmpb
ret
and
xchg
imul
jb
mov
testl
cmp
cmp
xchg
fcompl
jbe
cmp
or
inc
dec
pop
imul
jae
rclb
inc
out
shrb
mov
popf
cld
jae
adc
xchg
adc
dec
stos
imul
sub
cltd
fs
xor
cmp
fs
dec
inc
inc
dec
fwait
xchg
dec
es
adc
movsl
cmp
nop
je
sbb
fldenv
sub
jae
sub
sbb
sbbl
push
ret
in
add
add
imul
add
mov
push
jne
add
jo
push
jno
add
jne
into
adc
cmp
adc
mov
push
outsl
int3
aad
mov
push
xor
mov
cmp
loopne
pop
cltd
loopne
stos
pop
popf
cwtl
in
test
mov
fcoms
fwait
aam
in
push
inc
mov
adc
or
in
rolb
push
andb
out
cmp
and
in
fsubs
in
pop
mov
or
xor
inc
mov
jle
mov
fadds
mov
push
and
inc
jmp
or
in
or
jns
dec
push
jns
mov
mov
add
or
xor
push
adc
loopne
and
xchg
call
and
loopne
enter
fcoml
inc
jne
inc
call
lcall
in
leave
mov
orb
and
fcomps
push
or
inc
loopne
scas
subb
sbb
repnz
mov
lock
mov
dec
dec
jl
jp
mov
test
push
test
in
test
ret
and
fcoms
in
test
jo
mov
and
pop
jno
xchg
imulb
or
mov
push
les
pop
shlb
cmp
cmpb
xchg
push
dec
clc
imul
loop
add
jle
sahf
dec
mov
mov
inc
sbb
push
shll
jle
and
lock
jg
in
je
test
lods
mov
in
in
mov
in
enter
push
sub
add
or
sub
cmp
movsb
cwtl
sbbb
out
ret
pusha
sbb
sbb
cwtl
leave
stos
xor
adc
sbb
addb
aaa
adc
jb
cmp
xor
fs
shrl
inc
or
sub
in
or
das
cmp
add
or
fs
sbbb
mov
jmp
jo
or
push
xchg
cmp
unpcklps
inc
adc
nop
arpl
negl
repnz
test
scas
hlt
movsb
adc
and
enter
hlt
test
push
pop
cmc
lock
xor
aas
in
sbb
popf
pusha
test
inc
mov
outsb
adc
repnz
add
test
xchg
inc
jnp
shrl
push
pop
enter
mov
arpl
add
fbstp
push
jnp
and
mov
js
jl
and
sbb
push
jmp
jb
dec
cmc
mov
test
xchg
mov
ja
ss
jecxz
sub
icebp
or
adc
stos
movsl
push
in
xchg
mov
ret
ja
dec
adc
jmp
add
cmpsl
lahf
cmp
push
scas
ret
dec
mov
push
lods
add
and
call
cmp
je
or
push
and
in
xchg
fiaddl
push
xchg
in
push
movl
mov
call
pop
and
lods
and
sbb
inc
test
or
pop
pop
cwtl
mov
or
movsl
addr16
add
add
cmp
loopne
or
mov
mov
icebp
scas
or
and
and
or
jo
leave
or
in
adc
aaa
sub
enter
mov
nop
mov
and
mov
push
pop
jo
lock
inc
or
mov
mov
pushfw
fcmovbe
push
lock
mov
in
mov
mov
mov
xchg
lods
sbb
xchg
shlb
loopne
xor
push
xor
fadds
inc
push
jb
sub
mov
imul
test
inc
andb
sets
aam
add
lock
mov
xchg
mov
repz
fstps
es
jl
xchg
nop
decb
pop
inc
shll
mov
mov
mov
lock
aam
sub
rcll
xor
or
in
in
inc
xchg
cmc
in
dec
sbb
jb
jne
adc
pushf
sub
mov
or
add
movsl
cld
pop
pop
dec
add
mov
mov
add
dec
cmpsb
sbb
mov
push
and
and
inc
inc
and
movsb
cmpsb
int3
mov
xlat
clc
shlb
enter
xchg
mov
push
jno
orb
int3
xchg
aaa
mov
cwtl
nop
push
pushf
inc
mov
nop
or
insl
mov
push
das
xchg
add
or
cmp
xor
ficompl
jmp
out
movsb
xchg
xchg
nop
iret
mov
mov
sub
push
xchg
sbb
xchg
xor
jae
mov
inc
loop
mov
xor
jno
xchg
call
or
sti
adc
adc
negl
ficoml
xchg
or
xlat
test
imul
mov
insb
jmp
mov
sbb
in
call
cmp
lds
or
inc
pop
lock
xchg
nop
mov
lds
test
cs
fmull
push
mov
fsubrs
loope
push
loop
orb
xor
icebp
adc
js
dec
sub
ret
push
in
mov
das
std
push
dec
push
push
or
mov
xchg
jnp
xor
in
mov
aas
cmpxchg
rorb
pop
sub
imul
cltd
or
mov
adc
add
dec
inc
push
in
lds
out
sbb
cwtl
mov
stos
popl
test
test
jae
fsubrs
jno
ret
pop
icebp
mov
rol
add
in
xlat
in
xchg
adc
sub
inc
sbb
pusha
cltd
cltd
lock
adc
mov
fcoms
push
sbb
call
addl
fnsave
mov
xchg
adcb
cmp
cs
cmc
int3
iret
lods
fs
dec
enter
and
inc
aam
arpl
fsubl
aam
pop
fwait
xor
addr16
rclb
fcomps
push
mov
add
adc
and
in
call
je
xor
mov
pop
in
mov
sbbb
fcompl
out
dec
dec
adc
xchg
popf
cmp
jmp
nop
popf
stc
push
or
insb
sub
pop
in
test
push
insl
xor
sub
cmpb
add
inc
cmp
lahf
fildl
ss
mov
add
or
enter
cld
sbb
add
ret
inc
jne
movsb
hlt
aaa
mov
inc
lcall
ss
jno
je
dec
rcrb
dec
daa
mov
aaa
or
pavgb
test
mov
imul
je
xor
pop
dec
jnp
ja
adc
inc
dec
jb
jmp
clc
int3
rolb
js
loopne
pop
adc
vmaxps
aas
sub
or
jno
xor
outsl
mov
mov
unpcklps
mov
mov
dec
or
jns
mov
ret
mov
ljmp
mov
mov
xchg
in
and
inc
sub
add
inc
pop
movsb
mov
repz
gs
and
push
dec
lea
cld
movsb
mov
test
dec
pusha
aad
sarl
movsl
mov
adc
jo
pop
test
xor
jnp
movsl
cmp
jge
or
and
cmp
push
in
movsl
inc
test
sub
xchg
insl
call
loopne
mov
push
dec
jo
enter
rorb
sub
ss
stos
cmp
xor
mov
outsl
fcoms
push
orl
std
loopne
dec
adc
cmp
jno
test
push
dec
les
or
test
or
test
xor
or
xchg
fcoms
mov
xchg
test
lret
or
add
push
inc
fsubrl
shlb
das
sub
fnstenv
ret
stos
fcomps
add
les
lock
inc
add
jns
sbb
jne
or
lds
sbb
les
inc
inc
psrlq
in
push
mov
inc
mov
fldcw
lds
enter
adc
sbb
add
les
fucomip
fsubl
add
popa
lea
or
pusha
push
adc
rclb
or
test
lods
sub
xor
sti
stc
mov
xor
and
lods
std
shl
xchg
fwait
mov
lods
pusha
nop
aam
popf
filds
dec
test
loope
cs
dec
jge
pop
dec
or
xor
sbb
in
or
mov
dec
add
xor
mov
sti
lock
imul
cmpps
lea
int
inc
aas
jae
dec
jae
inc
mov
imul
in
icebp
cmp
add
enter
adc
inc
cs
shll
ret
add
push
shl
test
xchg
idivl
adc
dec
dec
push
test
adc
adc
mov
test
dec
pop
and
mov
inc
cld
les
xor
sub
inc
lcall
sub
add
out
fdivs
and
inc
mov
mov
cmpsb
sbb
xlat
sub
iret
sub
cmpsl
or
and
rolb
push
cmp
mov
fistl
dec
mov
je
mov
xchg
cwtl
pushf
mov
mov
repnz
cwtl
lret
shlb
fdivs
sbbb
pop
orb
aam
mov
pop
ret
inc
lods
les
sbb
and
orl
enter
mov
in
push
cmp
xor
mov
adc
aaa
scas
lock
and
mov
insb
pop
fwait
or
push
mov
adc
adc
pop
mov
cmp
insl
shlb
cld
mov
and
insb
sub
pushl
mov
fmuls
leave
and
dec
and
cmp
imul
movsb
adc
adc
and
adc
pushl
mov
xor
cmp
sbb
sub
cmp
xchg
ret
gs
mov
push
in
pop
push
and
dec
ljmp
enter
sbb
add
and
jb
add
xor
xchg
adc
test
and
cmp
or
adc
mov
scas
in
adc
push
jge
sub
sbbb
mov
in
aam
add
fs
push
std
add
dec
push
fs
or
mov
test
adc
shrb
and
fists
inc
pop
mov
adcb
pushf
add
bound
jbe
jo
std
xchg
shufps
sti
cmp
imul
aam
stos
shr
bts
imul
fidivl
scas
and
mov
sub
and
aas
mov
popf
push
xor
push
add
sbb
push
aaa
movsl
test
dec
and
call
cmp
or
fildl
ficoml
jne
bound
insl
sbb
pop
push
inc
mov
adc
push
adc
les
cmpsl
xchg
and
jne
inc
call
mov
mov
adc
mov
mov
es
adc
in
push
push
test
adc
bound
or
mov
and
in
sbb
push
jp
dec
pop
dec
mov
inc
or
jne
daa
sbb
leave
mov
xchg
and
dec
xor
sbb
jbe
jecxz
incb
scas
inc
sahf
leave
mov
push
or
xchg
adc
mov
add
inc
fisubrl
dec
js
vpminub
xor
xchg
dec
fwait
fs
in
adc
leave
and
in
leave
and
int3
enter
sbb
mov
es
mov
scas
cmp
divb
xchg
mov
xor
push
and
pop
nop
je
shll
xchg
adc
leave
and
mov
and
push
cmpsb
dec
jo
mov
cmp
jl
mov
int3
pop
mov
push
xor
or
hlt
add
xbegin
xor
loopne
stos
push
jo
mov
push
inc
xchg
cld
stc
fs
shrl
icebp
and
je
push
movsb
mov
mov
jo
adc
insb
pushf
pop
mov
add
adc
in
fstpl
sbb
xchg
les
lods
adc
sbb
ficoml
test
lock
inc
pop
pop
jne
jno
mov
push
and
sub
arpl
test
gs
lds
movsl
mov
fsubs
fdivs
adc
mov
pop
pop
xlat
adc
dec
aad
pop
loopne
jl
inc
pop
insl
sub
push
pop
inc
fdivl
or
rol
push
or
sub
pop
test
and
fistl
fcomps
scas
test
and
sbb
push
pop
stos
pop
sbb
xlat
adc
and
fistpll
xchg
test
ds
psubusw
mov
mov
add
sbb
fdivs
dec
xorl
mov
lds
outsb
lcall
es
mov
in
mov
outsb
in
dec
test
push
xchg
jno
sbb
and
rclb
cwtl
arpl
cmp
arpl
call
mov
mov
inc
adc
xchg
mov
jecxz
inc
lret
arpl
shlb
mov
es
dec
adc
ss
fsubrs
mov
inc
nop/reserved
pop
inc
or
jbe
xor
push
orl
sti
pop
fs
or
sti
dec
sti
fs
dec
cmpsb
push
inc
cmp
ficoml
pop
es
mov
sbb
imul
cltd
cmp
add
sub
outsb
add
and
test
int
sbbl
mov
rcrb
enter
and
push
out
or
sub
test
mov
addr16
das
dec
push
mov
push
popa
dec
inc
sbb
push
and
sbb
pop
pushf
mov
push
inc
add
ret
js
push
imul
dec
jne
xor
push
fxtract
out
call
cs
pop
outsb
mov
push
push
jns
sub
xor
aas
push
sarb
mov
sti
mov
mov
xor
dec
push
mov
add
push
xchg
cld
pushf
cld
or
sub
idiv
sbb
and
add
idiv
adc
inc
or
lahf
pop
sti
lods
inc
test
or
mov
sub
pop
push
and
push
insl
adcb
or
aad
or
ss
sbb
hlt
mov
jb
push
adc
subb
stc
mov
and
mov
jns
add
sti
mov
mov
adc
dec
call
loopne
push
outsl
mov
rolb
xlat
jl
xlat
mov
sub
add
ss
out
dec
dec
push
je
movsl
push
int3
add
iret
shll
cltd
add
rcl
in
std
jne
cmp
sbb
aas
stc
sbb
jns
fwait
insl
mov
ja
aas
adc
loope
nop
loop
cmovge
lock
decl
ljmp
add
fistpl
or
jnp
mov
add
imulb
and
pop
or
cmp
repz
cmp
out
mov
repz
inc
inc
inc
push
dec
dec
dec
dec
dec
dec
dec
push
rclb
ja
pop
pop
pop
pop
popa
bound
gs
imul
jo
std
pushl
jae
jne
ja
jns
xor
xor
xor
ss
cmp
sub
leave
adc
mov
int
das
clc
rcll
xchg
adc
push
or
cmp
rclb
cmpl
pop
mov
or
jg
pushf
in
sahf
imulb
movsb
or
jno
pop
sti
push
push
orb
gs
outsl
arpl
fs
out
sbb
pusha
pop
in
in
push
dec
imul
push
jb
gs
xor
cs
insb
push
bound
and
pop
popa
xchg
xor
imul
add
fcomip
aas
push
jnp
popa
rdpmc
add
pushl
sub
cs
fadds
mov
outsl
jb
js
je
jb
gs
cmp
or
outsl
add
rcr
mov
add
gs
push
push
pop
jo
je
mov
popa
jb
mov
mov
imul
arpl
mov
insl
insl
cmp
dec
pop
rcrl
and
jns
add
das
das
adc
dec
push
inc
inc
gs
insl
mull
xchg
daa
dec
outsl
jbe
dec
arpl
ja
mov
push
jo
sub
addr16
dec
jne
stc
push
push
jnp
push
mov
insb
enter
dec
popa
jb
push
inc
out
mov
mov
jae
cmp
jg
int3
fstl
jne
xor
lock
and
daa
push
scas
jle
fstps
adc
and
jae
cmp
jbe
inc
adc
push
popa
das
jo
or
push
sbb
sbb
lock
pop
nop
inc
ud0
filds
add
inc
mov
pusha
adc
subb
shll
stos
popf
imul
sub
sub
sub
cs
movsl
cmp
cmp
ds
inc
or
mov
std
sub
jge
jg
cmp
in
shrb
cs
and
add
js
push
pop
or
lock
ja
add
xor
cs
fs
mov
cmp
pop
inc
inc
mov
fsubs
xor
insl
and
jb
in
inc
addr16
push
sbb
inc
sbb
fimuls
inc
and
add
xor
sbb
push
jo
imul
hlt
popa
jae
insl
pop
mov
je,pn
mov
push
push
jo
xchg
idivb
and
xchg
enter
ds
pop
adc
je
or
cmpb
inc
popa
and
daa
mov
fmul
insb
jae
sbb
xor
and
insl
add
imull
insl
inc
cs
xor
and
jne
dec
mov
dec
rolb
les
inc
sub
test
dec
mov
cmp
and
or
imul
add
pop
es
gs
bound
or
push
or
and
push
rorl
push
int3
fidivrl
lods
jb
loopne
outsl
mov
cmp
fcmovu
push
daa
sub
dec
addb
das
arpl
cmp
cwtl
shlb
sub
in
gs
mov
cmp
test
inc
xchg
insb
imul
int
int3
or
push
lock
push
lcall
xor
popa
pop
xor
and
gs
push
or
push
neg
sbb
cmpsb
cs
ficomps
adcb
xchg
push
fisubrs
aas
xor
adc
shlb
dec
add
add
rcll
test
loopne
outsl
ss
and
and
fs
jo
cli
jbe
add
nop
out
pop
movsb
inc
xchg
push
mov
mov
gs
sbb
lds
pop
out
inc
jle
outsl
push
jp
mov
or
arpl
lcall
bound
cmp
push
pop
repnz
aaa
insl
in
ljmp
imul
or
imul
push
jne
jmp
lods
cli
jno
push
push
leave
nop
sub
mov
jbe
fbstp
cmp
xorl
in
xor
dec
pusha
or
and
and
add
sub
push
jae
xor
and
loopne
fsubl
out
sub
test
popa
xorb
data16
lret
dec
andb
sub
pop
dec
jmp
scas
or
jo
and
cmp
imul
inc
inc
and
adc
lods
push
push
dec
cmp
jg
es
pop
loopne
add
lock
push
rol
das
sti
jg
jge
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
fsubrs
push
js
je
sub
jae
push
and
ss
imul
pop
js
gs
popa
dec
add
xor
jg
js
jae
ret
jnp
sub
pop
add
and
jno
add
xchg
sub
testb
xchg
adc
push
add
push
add
add
and
push
pop
pop
or
aaa
test
push
pop
hlt
and
or
pusha
add
repz
add
pop
sub
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lahf
mov
cmp
push
inc
inc
mov
int3
js
jo
in
jge
dec
rorb
sbb
in
lea
mov
nop
xchg
add
xchg
mov
adc
pop
push
adc
dec
sub
cmp
test
add
jo
or
and
jo
or
cmp
pop
ret
pushf
data16
mov
out
push
scas
repz
repnz
stos
ljmp
fs
sub
scas
in
stc
dec
add
test
add
nop
dec
cs
mov
ja
add
xchg
add
add
mov
sub
add
fcoms
and
add
ja
push
mov
mov
imul
mov
mov
pop
rcl
inc
pop
inc
out
and
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
movsb
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivrp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incb
movsb
inc
andl
push
xor
je
sarl
or
lods
sbb
pop
outsl
ja
jns
movsb
inc
cs
jae
jb
bound
jmp
stos
inc
ss
popa
jbe
movsb
sbb
mov
pop
mulb
pop
lea
dec
mov
outsl
js
mov
mov
push
mov
inc
cltd
sbb
mov
dec
mov
mov
in
dec
imul
pop
jns
inc
mov
imul
mov
jb
jns
daa
or
sub
nop
xchg
notb
mov
lods
sbb
lcall
push
or
cmp
outsb
pushw
xchg
or
mov
jbe
inc
add
pop
pusha
inc
mov
push
push
push
lahf
dec
add
dec
fs
and
push
dec
clc
pop
shlb
adcb
loopne
push
sbb
xor
lods
dec
lahf
jecxz
push
dec
lock
xchg
pop
pop
push
push
jae
cmp
mov
aas
cmp
call
movsl
jae
addr16
subl
jp
mov
mov
xchg
sbb
add
xchg
inc
pusha
mov
push
push
push
push
dec
testl
dec
movntq
mov
sub
push
fildll
dec
jge
sahf
push
sub
jae
push
inc
sbb
jo
or
sub
jg
je
stos
outsl
jae
inc
subl
dec
xor
mov
jg
sub
pop
fsubl
or
in
push
mov
das
je
outsl
xchg
jne
pop
daa
xchg
mov
popw
pop
cmp
push
jl
cmp
cmp
push
cmp
push
sub
es
data16
jle
sub
sub
addr16
cmp
cmp
sub
iret
jmp
xor
jmp
cmp
xchg
add
dec
inc
mov
cmpsl
jbe
pop
pop
cwtl
jb
sbb
fstpt
shl
push
jb
imul
push
or
shrb
add
sbb
and
cltd
jnp
lods
es
jo
sub
or
jl
lahf
sub
jns
out
fdiv
inc
add
push
enter
idivb
out
nop
test
cmc
dec
ds
repz
in
push
mov
js
lock
les
sub
cmp
push
pusha
push
pop
pop
push
push
inc
ds
sti
cmp
adc
pop
cmp
mov
lods
shlb
les
clc
xor
push
mov
das
nop
cmp
push
sbb
repz
push
and
or
add
push
lcall
cmpsl
stc
cmp
push
add
cld
out
clc
sahf
out
sahf
hlt
lock
rol
jns
out
lods
mov
xor
out
or
out
enter
cmp
mov
and
adc
clc
in
aam
sarb
jns
xchg
je
and
out
idiv
in
out
mov
insb
inc
push
lock
clc
jmp
pop
aam
sub
lcall
bound
outsb
push
xor
add
mov
push
in
ljmp
inc
outsl
pop
cmpsb
bound
fs
cmp
xchg
jb
jae
jb
xor
sahf
cmp
or
psubb
sub
add
sarb
push
sub
push
insb
cmp
inc
inc
dec
jae
insb
jnp
lods
insb
inc
mov
sbb
decl
push
dec
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
mov
dec
inc
add
adc
sub
sub
nop
inc
incl
loope
inc
call
rclb
mov
scas
xor
jnp
inc
loop
jg
inc
fidivl
adc
clc
lret
sbb
dec
sahf
cli
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
test
in
fstl
mov
and
repnz
or
push
cmpsb
iret
lret
add
jmp
inc
inc
mov
mov
sub
fwait
fwait
testl
int
jns
ds
xor
incb
int3
decl
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
decl
pop
and
xchg
lret
sahf
icebp
mov
cld
push
cld
decl
or
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
outsb
cli
cld
pop
pop
leave
loop
mov
xchg
dec
add
lods
pop
pop
mov
cwtl
iret
adc
lahf
in
dec
in
or
pop
and
es
sbb
mov
push
push
cld
xchg
sub
decb
leave
ljmp
shrb
jg
test
push
push
inc
inc
or
outsb
jbe
inc
pop
ds
and
mov
test
das
inc
pop
push
push
gs
or
iret
jae
aaa
sbb
push
dec
push
fbld
sub
mov
or
cmp
push
push
sbb
adc
es
pop
dec
add
or
or
mov
sbb
cmp
xchg
push
or
sub
aaa
cmp
mov
shlb
inc
sbb
fbstp
add
cmp
cmp
add
mov
push
push
sbb
dec
es
pop
cmp
sbb
aaa
or
sub
pop
fwait
loop
outsl
push
dec
add
pop
aas
cmp
ss
sti
ja
and
lods
pop
ss
ret
pop
sbb
push
adc
ljmp
push
xor
sbb
sub
xor
dec
push
sti
sahf
pop
dec
cmp
out
dec
and
dec
xor
dec
add
jbe
add
dec
xor
push
pop
dec
dec
dec
push
push
xor
dec
xor
push
push
and
dec
add
js
add
inc
addb
fildll
push
dec
inc
add
sub
or
gs
aad
cmp
sbb
sub
push
pop
aaa
adc
sub
in
and
sub
cmp
and
cmp
mov
sub
adc
jge,pt
sub
add
daa
sbb
sbb
or
pop
mov
das
sbb
mov
push
add
pop
dec
sub
and
and
dec
popa
pop
je
push
inc
pop
int3
push
sub
push
cmp
pop
mov
push
pop
cmp
or
and
test
mov
stos
pushf
fdivrs
cmp
test
mov
jb
push
jmp
and
gs
es
lcall
and
pop
and
adc
pop
and
aas
dec
mov
or
pop
and
sub
and
rorl
push
xorps
sbb
notb
and
movq
cmp
cmp
pushl
push
in
movsl
cmova
inc
pop
adc
dec
nop
dec
in
cmp
cwtl
in
push
cmp
push
sub
daa
iret
repz
push
stos
mov
ds
jnp
ds
in
or
out
push
shrb
outsb
jg
fdivp
mov
inc
push
push
dec
ljmp
daa
push
and
sti
push
sbb
or
push
hlt
sub
adc
push
adc
cwtl
pop
mov
sub
pop
jp
xor
cmp
outsl
insl
mov
popa
rcr
lahf
inc
popa
outsb
insb
jle
lods
adc
push
jmp
popa
add
add
imul
push
xor
fs
in
sub
push
or
sbb
adc
ds
jne
xchg
cs
ret
in
out
aas
push
and
repz
push
movsl
lahf
cmpsl
stc
cmp
or
and
xor
pop
sub
cmpsl
sub
lods
cmp
adc
add
pushf
sbb
sub
push
or
pusha
mov
scas
cmp
cmp
fisubs
or
ss
sub
push
popa
adc
js
inc
jbe
std
into
aad
mov
dec
pop
or
push
or
lods
std
inc
aas
cmp
cmp
jmp
pop
negb
sti
fisttpll
add
push
push
dec
cmpsb
insb
jae
repz
pop
adc
fcoms
jb
pop
pop
aad
pop
arpl
pop
push
add
mov
push
sub
push
aas
pop
pop
push
insb
push
push
pop
pop
mov
sub
push
fildll
rcll
wrmsr
sub
sub
push
pushf
add
sbb
pop
pop
shll
mov
iret
faddp
cmp
dec
cmp
and
inc
push
out
cmp
push
mov
or
sbb
xor
push
pmaxsw
inc
jecxz
or
lock
jo
mov
scas
jge
sbb
and
fs
cmp
sbb
pop
sbb
dec
dec
pop
cmp
pop
push
jo
sub
daa
sub
int
and
mov
sahf
push
dec
inc
adc
inc
data16
cmp
pusha
sub
dec
cmpsb
cmpsb
fisubrl
or
out
add
fmul
das
push
cmp
shll
sbb
sbb
jbe
inc
or
insb
cltd
jne
push
xor
sbb
mov
getsec
and
adc
insb
add
jle
push
sub
jb
pop
aaa
or
adc
inc
pop
xor
adc
jb
and
dec
data16
or
out
and
or
and
xor
xchg
cmpl
xor
rcrb
insl
addb
sbb
out
sbb
insl
and
push
test
sbb
inc
outsl
arpl
icebp
in
xor
or
outsl
popa
push
adc
into
loopne
or
aaa
daa
push
inc
xor
sbb
mov
or
into
cmp
pop
sbb
lods
or
mov
test
leave
aaa
inc
mov
adc
adc
mov
add
ret
scas
in
xor
push
pop
adc
popa
loop
vmread
mov
mov
cmp
aaa
or
cmp
lds
jl
insb
jne
sub
jle
push
cld
pop
inc
xchg
dec
into
jmp
cpuid
add
adc
shll
cmp
gs
or
sbb
pop
xchg
fstpl
push
lcall
sub
push
add
inc
out
xchg
jbe
cmp
mov
mov
push
push
bound
andb
and
inc
stos
sub
bound
pop
push
add
push
add
cs
push
subb
jge
out
das
jo
xlat
pop
and
sbb
into
add
ja
xchg
mov
push
aaa
mov
pop
mov
cmpsb
data16
pop
mov
push
dec
aas
pop
aas
xor
cmp
sub
fstl
push
adc
pop
cmovb
adc
loopne
adc
loopne
cmp
or
das
and
ss
inc
inc
sub
push
adc
pushf
add
sub
push
jae
ret
ja,pt
and
push
jmp
scas
or
pop
push
cs
add
push
imul
or
loopne
push
adc
loopne
pop
idivl
in
pop
add
sub
push
pop
jns
fistpll
sub
nopl
sub
pop
dec
sub
sar
pushf
xor
adc
or
pop
adc
dec
add
cs
fsubrl
leave
xor
sahf
sbb
add
cmp
adc
sbb
pop
out
pop
xchg
nop
std
cmc
or
imul
shrb
adc
bound
ds
or
fwait
inc
xchg
les
push
std
add
or
mov
mull
pop
push
subl
sbb
pop
nop
add
mov
mov
sub
dec
daa
fistpll
cmp
iret
sbb
mov
and
mov
dec
xchg
addb
lcall
insb
ds
adcl
add
aaa
test
adc
pop
adc
and
and
cs
ud2
jb
mov
insl
test
das
sbb
inc
sar
pop
mov
push
cmovg
sbb
inc
sbb
rcl
xlat
pop
adcb
mov
cmc
imul
mulb
ljmp
push
add
sbb
aas
outsb
jle
and
cs
pop
pop
cmp
xor
lods
rol
rcrb
mov
insl
fisttpl
ret
adc
int
popf
sbb
and
subb
scas
retw
push
es
enter
push
adc
inc
jo
fcomps
out
dec
lock
and
or
scas
cmp
loopne
xor
loop
into
dec
cmpl
or
push
bound
or
jg
loope
jp
aas
sub
dec
push
dec
and
imul
mov
push
inc
pop
pop
or
sub
jle
xchg
add
sbb
pop
pop
lock
cmp
sub
sbb
das
das
sbb
jp
sbb
je
loopne
cs
nop
es
add
subl
xchg
pop
sub
push
scas
or
test
adc
push
jg
addb
stc
jmp
adc
adc
cmp
dec
and
pusha
sahf
jbe
call
sahf
push
cmp
mov
lahf
add
push
out
shll
push
xchg
aam
daa
pop
stos
cs
loopne
mov
or
imul
enter
push
xchg
pop
jno
adc
into
add
adc
or
mov
loopne
sub
inc
dec
minps
addb
add
loopne
movsb
add
ret
das
addb
and
or
jb
sbbb
pop
cmp
push
pop
aaa
sbb
xor
daa
and
das
pop
lods
hlt
dec
mov
adc
call
aad
add
icebp
add
inc
mov
stos
ret
xchg
xor
add
sti
push
sbb
int3
pop
and
and
and
add
cmp
pop
pusha
fstpt
and
ss
cmpsl
dec
out
sbb
mov
sbb
fmuls
out
cmp
pop
xor
fimull
sbb
xchg
inc
daa
or
push
sbb
sub
xchg
mov
inc
adc
popa
int3
sbb
and
in
sub
les
dec
and
cmc
add
jmp
call
or
fwait
jae
sbb
and
mov
shl
aad
sbb
cmp
sbb
sub
outsb
inc
inc
xorb
ss
pop
xchg
pop
js
dec
pop
cs
sub
or
inc
enter
int3
inc
sub
cmp
add
or
dec
cmp
shl
jmp
push
xchg
rcrl
dec
xor
adc
cmovb
aaa
xchg
push
xor
sbb
push
add
and
and
dec
adc
fldt
add
add
dec
dec
add
add
or
and
xor
xor
xchg
xor
add
lods
scas
mov
cmpsb
jecxz
mov
repz
sti
adc
xor
cld
add
push
sbb
push
cmp
insb
push
push
dec
push
adc
xlat
hlt
cmovno
pop
inc
cmpsl
hlt
fldenv
pop
movsb
pop
dec
cwtl
jns
imul
mov
sbb
sbb
adc
cmpsb
jb
mov
pusha
cmp
stos
mov
lock
das
adc
aas
je
add
sbb
add
sbb
cmpsb
out
sbb
push
pop
or
addl
call
dec
mov
xchg
cmp
mov
pusha
xlat
cmp
adc
dec
jno
adc
cltd
pop
and
jnp
jbe
subl
xor
xchg
adc
sbb
mov
xchg
pop
sarl
push
jle
lss
sub
and
jo
fdiv
or
add
shll
jnp
jae
out
pop
inc
cmp
and
faddp
pop
jge
xor
and
mov
adc
mov
notl
dec
cltd
adc
cmp
fistps
sbb
jnp
adc
push
sbbb
sbb
or
or
enter
pop
sub
mov
outsl
jnp
dec
and
xchg
test
push
sbb
pop
inc
sub
stos
push
push
movsl
sub
jo
add
adc
popf
sbb
cmpsl
cmp
and
rcll
jno
and
mov
sbb
push
cmc
xchg
stos
movsl
mov
mov
xor
push
loope
mov
insl
push
popl
inc
adc
mov
mov
adc
adc
arpl
push
lods
imul
dec
ret
push
xor
mov
je
fisttpl
lock
push
dec
fsubl
popa
imul
ja
or
cmpsl
sti
int3
mov
cmpsb
dec
xchg
pop
sbb
push
sub
push
inc
aas
mov
jb
sbb
push
cmp
pop
cmp
daa
pop
cs
aas
xor
gs
fisubs
sar
xor
sbb
addr16
fistpl
aaa
mov
arpl
pop
or
inc
test
pop
pop
hlt
dec
femms
or
push
xor
push
inc
inc
nop
inc
outsl
scas
push
adc
filds
xchg
cs
adc
jp
aad
dec
and
aas
cmpsl
jbe
fchs
and
aaa
ret
lods
jbe
xor
sub
loope
add
leave
es
or
rcrl
sub
pusha
inc
dec
es
or
pushf
rorb
daa
ja
add
jb
sbb
adc
lret
adc
roll
ficoms
insb
mov
adc
jge
adc
push
repz
fnstcw
sbb
push
sbb
xchg
lahf
out
lcall
pop
mov
sbb
sbb
cwtl
inc
inc
mov
push
pop
add
dec
push
dec
dec
in
add
push
ret
aaa
shlb
mov
mov
jg
jmp
lcall
push
and
mov
add
adc
mov
mov
lods
pop
dec
movsl
enter
sti
call
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jg
aas
cmp
mov
sbb
mov
ds
or
xor
pop
sbb
xor
mov
mov
decl
mov
sbb
nop
ljmp
dec
pop
dec
xchg
pop
shl
dec
push
add
pop
mov
jg
pop
push
pop
jb
and
xor
push
enter
dec
sti
push
dec
cmp
pop
jmp
js
push
push
pop
pop
dec
arpl
pop
push
in
inc
jb
mov
arpl
out
outsl
leave
sti
add
dec
in
jbe
sub
pop
or
jb
dec
repz
adc
fdivrs
adc
xor
mov
xor
cmp
dec
mov
sahf
xchg
out
dec
pop
inc
mov
je
inc
js
cmp
jle
add
clc
or
dec
ss
pop
inc
inc
xchg
loop
clc
pop
mov
cs
push
push
dec
jns
cmp
pushl
xor
sub
sub
xor
inc
xor
inc
test
test
xor
test
add
imul
jb
insb
push
outsb
add
add
sub
push
jb
test
adc
and
ljmp
je
bound
dec
bound
cmp
and
pop
or
xlat
and
or
mov
ja
and
fimull
cmp
mov
pop
sub
xlat
das
pop
js
sub
pop
dec
push
xor
stos
inc
aaa
jle
and
push
clc
setno
sbb
add
mov
xchg
iret
pop
xchg
jbe
pop
daa
aas
inc
js
dec
sbb
ret
cs
cmp
pop
adc
adc
xor
pushf
shrb
cmp
pminsw
pop
add
dec
add
es
jg
mov
or
sub
adc
adc
sub
inc
orb
push
mov
mov
dec
jmp
xor
in
cli
sbb
das
outsl
sub
sbb
jae
push
dec
out
imul
sub
adcb
xchg
sub
stc
lcall
lds
divb
push
jne
lods
outsl
pop
sahf
out
repz
pop
lock
int3
cmc
sahf
fistpl
xchg
in
jmp
fisubs
xchg
scas
inc
xchg
xor
pop
add
dec
sti
mov
test
adc
mov
mov
or
jg
mov
das
cmpb
pop
repnz
cli
push
pop
xor
iret
mov
daa
xchg
mov
fcmovne
imul
andb
adc
dec
sbb
mov
insb
push
xchg
cmpsb
test
sahf
aaa
mov
mov
pop
push
xor
sbb
cli
mov
and
lcall
xor
imul
testl
cmp
lds
push
cmp
push
mov
neg
insb
dec
sub
jecxz
jne
mov
sarl
mov
push
filds
in
sub
jge
inc
push
outsl
pop
pusha
push
in
push
cmp
jnp
pop
jno
addl
loope
in
repz
rclb
inc
push
lock
negb
pop
xchg
cmpsl
popa
shr
aaa
xchg
lods
xlat
fdivp
cmp
inc
push
ja
es
sahf
cmpsl
stc
adcl
insl
push
adc
test
push
push
popf
pop
imul
push
pop
push
pop
pop
es
xchg
adc
or
lahf
hlt
inc
xor
shrl
xchg
mov
mov
sahf
out
repz
inc
inc
pop
push
jp
stc
cmp
cltd
mov
pop
dec
repz
xor
arpl
loopne
cmp
in
movl
jg
cmp
mov
dec
mov
cmp
repz
mov
jl
cmpsl
stc
add
subb
xlat
decl
dec
and
out
sahf
out
jne
scas
xlat
ret
lahf
icebp
sbb
mov
jmp
out
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
pop
in
pop
clc
xor
adc
mov
jb
mov
adc
jmp
add
idivb
cmpsl
std
pop
mov
and
pop
sbb
enter
repnz
adc
or
adc
mov
mov
add
push
loope
push
add
dec
xor
pop
push
repnz
inc
mov
addr16
push
push
mov
push
jae
popa
fistpll
sbb
sub
jge
cltd
movsl
mov
or
pop
loope
addr16
push
and
jnp
dec
mov
jae
fisubl
add
inc
inc
push
subb
mov
add
dec
lret
mov
fisubrl
je
push
ljmp
cmpsb
dec
add
push
mov
cmpsb
push
insb
pop
push
imul
cmp
cmp
mov
jp
das
push
js
xacquire
inc
xlat
popf
cmpl
iret
push
pop
retw
pop
adc
divb
adc
cmp
popa
repnz
out
cmp
ffreep
inc
cmp
or
ds
or
ja
adc
jo
es
je
push
and
jg
popa
jo
jae
es
outsl
and
js
aas
adc
and
pop
fnsave
movsb
push
or
pop
repz
cmp
xor
xor
xor
cmp
cmp
push
xor
xor
cmp
push
add
pop
adc
adc
add
sbb
or
pop
and
std
push
sub
ss
mov
fistl
push
loopne,pn
rolb
add
loopne
jne
cmp
xor
push
into
cli
shlb
push
add
fwait
ret
outsl
es
add
aaa
inc
lret
rorb
mov
add
jb
pop
cmpb
adc
lea
test
add
mov
loop
cmp
sbb
pop
mull
cmp
add
push
out
dec
sbb
xor
xorb
movsl
dec
jo
cmp
mov
clc
sahf
daa
adc
push
pop
add
xor
mov
mov
sbb
or
adc
add
test
xchg
sub
cmp
push
mov
ret
and
sbb
cmp
and
adc
das
push
or
dec
jbe
inc
push
jecxz
and
movsb
xchg
aaa
or
cs
or
dec
testl
cmp
ret
cmp
xchg
sbb
ret
mov
lea
lcall
add
push
mov
push
stc
dec
sub
jnp
daa
mov
daa
mov
orl
sbb
xor
pop
or
mov
shlb
daa
xor
jo
add
das
sbb
mov
xor
push
fildl
aaa
lahf
lea
mov
push
ljmp
daa
and
mov
add
shrl
stos
notl
outsb
mov
or
mov
lods
testb
das
add
adc
aaa
iret
or
loop
sbb
lahf
stos
test
mov
jno
fildl
daa
imul
sub
xchg
pop
mov
das
dec
cmp
mov
pusha
pop
and
loope
int
adc
push
shlb
inc
jecxz
cmpb
mov
or
pop
es
mov
xorb
daa
lahf
rorl
outsl
insl
or
es
int
add
pop
addr16
jg
leave
mov
push
fldl
insl
inc
cltd
mov
pop
and
mov
sbb
ret
mov
aaa
outsl
lret
xor
jnp
daa
add
and
in
pop
mov
adc
jle
test
xor
jl
jl
xchg
xchg
adc
mov
jne
add
adc
and
pop
jo
sbb
or
loope
sbb
and
push
repz
insb
xchg
mov
xadd
pushf
adcl
xchg
das
sbb
ffree
rorl
add
and
inc
dec
add
iret
gs
or
mov
mov
shufps
push
das
das
not
or
or
xchg
lods
add
js
cmp
mov
pusha
adc
mov
xor
pop
loope
jnp
gs
pop
outsb
push
add
push
and
xor
sbb
pop
dec
insl
cmpsb
fcomp
adc
daa
sub
xchg
mov
test
adc
lods
push
sbb
adc
das
daa
pshufw
sbb
por
mov
pop
cmp
and
bound
sbb
adc
lock
adc
mov
push
xchg
leave
cmp
icebp
insl
xchg
mov
inc
pushf
xlat
push
adc
xor
in
xor
add
mov
clc
push
adc
pop
cmp
pop
push
call
pushf
and
pop
mov
dec
adc
aas
mov
adcb
xchg
es
fisubrl
push
adc
cmp
loopne
mov
js
push
sbb
sbb
cmp
cli
or
inc
scas
cmp
sti
or
sbb
push
les
arpl
xchg
or
es
add
or
es
cmp
cmpsl
aad
pop
dec
fcompl
sub
jb
or
sbb
cltd
xchg
sbb
loop
andl
adc
sbb
xor
popa
test
ficoml
loopne
mov
xchg
mov
dec
clc
outsb
adcb
into
outsb
imul
data16
pop
inc
hlt
adc
or
fsubrs
sub
lods
xchg
xor
bound
push
adc
fsubs
inc
cld
or
pushf
adc
add
push
fcoms
push
and
sub
mov
aam
adc
fstpl
sub
cmpsl
dec
int3
test
mov
test
jp
jno
rorl
sub
pop
sub
cmp
xchg
les
inc
scas
popf
es
mov
mov
pop
mov
aaa
das
cwtl
rcll
mov
stos
xchg
pop
sbb
inc
mov
lods
inc
pusha
xor
dec
in
andnps
outsb
push
scas
push
dec
repz
push
pop
sbb
and
addr16
add
dec
lea
jns
or
xchg
or
pop
push
add
ss
or
adc
sbb
data16
fisubs
sub
xor
inc
mov
neg
jnp
mov
mov
mov
insb
ss
int
xchg
sbb
sub
add
data16
das
or
adc
mov
insb
ds
add
add
fwait
int
push
push
dec
str
mov
insb
or
and
das
incl
and
inc
and
add
jae
lahf
outsl
loope
inc
pop
clc
jae
fs
nop
adc
das
je
cmp
scas
cmp
shrl
cmp
xchg
xor
pop
imul
jp
xorb
call
jbe
mov
push
loopne
xor
add
aaa
pop
jae
dec
adcl
adc
push
pop
lods
xor
fiadds
push
dec
push
ljmp
jg
ljmp
sub
xor
cmp
and
push
add
and
adc
lcall
dec
pop
push
sub
dec
add
inc
or
sbb
or
dec
pop
dec
sbb
pop
xor
aaa
xor
hlt
add
incl
add
pop
xor
add
hlt
push
pop
inc
pop
mov
and
lret
out
ljmp
jg
and
sbb
adc
aas
inc
pop
sbb
cmp
aas
push
or
pop
and
fbld
or
and
cmp
adc
pop
aaa
pop
push
inc
or
push
fcomip
lcall
dec
or
pop
or
sub
add
dec
dec
dec
cmp
fs
pop
inc
or
push
add
sub
and
jno,pn
and
loope
push
enter
mov
sub
imul
mov
and
into
or
cmpsl
pop
decl
es
mov
adc
dec
sub
dec
fidivl
cmc
xor
fcoms
decl
inc
mov
sbb
mov
gs
cmp
dec
in
add
adc
out
sub
or
cmp
xchg
rcrb
add
stos
inc
pop
and
imul
popa
sub
inc
add
adc
mov
adc
das
cmp
mov
inc
es
fadds
mov
lret
add
pop
mov
sbb
cmp
pushf
inc
jb
inc
pushf
jmp
jns
add
incb
push
push
inc
push
dec
inc
dec
push
dec
sub
add
add
outsb
outsl
loopne
imul
incl
pop
iret
and
push
push
dec
push
add
rcll
and
inc
jbe
jg
adc
pop
xor
or
in
mov
pop
ljmp
aaa
jne
dec
inc
aaa
aaa
pop
push
mov
pop
daa
sub
push
sub
and
das
or
and
and
ud0
aaa
std
push
push
xor
mov
inc
aaa
jno
sti
shlb
clc
inc
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
ljmp
jb
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
dec
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
inc
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
call
or
or
or
cs
ret
sub
xchg
mov
data16
jmp
call
cltd
test
push
push
shll
ja
daa
pushl
or
cmp
fmuls
lret
rep
cs
outsl
arpl
test
decl
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
std
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
pop
pop
push
xor
cmp
inc
daa
mov
cmp
fs
arpl
jg
pushl
push
and
pop
data16
push
push
outsb
and
dec
inc
aaa
xor
call
es
out
and
ss
sub
ja
jne
sub
inc
or
mov
inc
push
xor
sub
xor
dec
insl
imul
xlat
mov
push
aaa
push
xor
in
lcall
push
inc
add
inc
add
inc
xor
and
aaa
inc
int
mov
push
inc
outsb
inc
ss
lods
scas
sub
pop
ss
cmpsl
mov
inc
push
pop
and
popa
adc
mov
shl
push
add
das
movsb
xor
pusha
mov
or
sbb
push
mov
or
and
cmp
sub
cld
scas
bound
or
inc
dec
cmp
mov
inc
jb
lahf
mov
pop
inc
js
pop
inc
mov
out
push
mov
cltd
cltd
sbb
pop
push
sbb
aam
jg
xchg
repnz
xlat
nop
fnstenv
adc
nopl
int3
pop
xchg
js
lods
mov
and
shrb
sub
adc
push
and
jnp
or
loopne
int
aaa
push
dec
xor
jb
pop
inc
pop
ja
cmpsl
out
xor
mov
shrl
sbb
dec
sbb
xchg
aaa
mov
ret
popf
sub
mov
fmul
mov
xor
clc
adc
adc
mov
movaps
pop
addb
inc
popa
sbb
pop
cmp
jge
inc
cmp
sbbb
push
daa
jle
push
mov
or
and
jnp
jge
or
cmpb
inc
shlb
or
sbb
addb
xchg
mov
mov
aaa
sbb
adc
movsl
lds
in
inc
push
punpckhbw
sbb
sbb
in
sbb
push
inc
adc
xchg
ret
cmp
adc
xor
cmp
and
int3
mov
pusha
add
push
xchg
push
sub
lds
or
push
mov
jnp
aad
pop
test
push
xchg
sbb
outsb
outsb
je
mov
imul
jo
jbe
jae
popa
cmp
addr16
insl
gs
cmp
ret
data16
and
or
aad
fistl
xor
insl
loop
cmp
push
aaa
out
int
lcall
insb
dec
push
fiadds
sbb
popa
je
push
xchg
insl
fwait
inc
mov
and
pop
mov
adc
sub
or
pop
push
faddp
adc
dec
mov
and
pop
or
fimull
add
pop
aaa
jl
push
stos
lods
xor
adc
int3
mov
push
cmp
cmpsl
test
add
push
sub
and
jne
mov
push
fistpll
aad
and
es
sub
mov
adc
stos
adc
push
mov
mov
or
addr16
dec
mov
pop
pop
fiadds
call
fstpt
mov
push
test
sub
sbb
shlb
xor
add
jle
add
mov
popa
dec
ficompl
add
popa
jb
pop
repz
cmc
xchg
adc
cld
jae
inc
jne
cmpsb
sbb
lea
or
rorb
push
fcmovnu
or
iret
ficomps
or
sti
test
pop
test
aas
sub
add
pop
nop
jns
fcoms
sbb
push
push
call
call
bound
enter
xchg
ljmp
jbe
jo
dec
and
cli
xor
adc
add
cs
mov
push
iret
movsl
and
add
mov
adc
daa
cmp
push
aas
mov
insb
pop
inc
xchg
test
xorb
movsb
mov
stos
ds
pop
lea
inc
mov
aas
push
xor
ds
outsl
insl
aam
cmp
push
push
push
adc
mov
inc
sub
mov
push
mov
push
inc
data16
lods
add
and
dec
push
pop
add
inc
outsl
sbb
mov
and
pop
inc
nop
xchg
add
movsw
or
incb
adc
xchg
out
sbbb
adc
lods
insb
stos
pop
sbbl
sbb
aas
cmp
testb
aas
xchg
add
pop
mov
fiadds
dec
pop
fwait
and
jmp
jge
push
pop
repz
cs
mov
inc
lods
inc
cmp
insb
xor
mov
scas
aad
mov
cwtl
bound
pop
inc
mov
inc
sbb
push
jge
jp
sbb
add
scas
and
fwait
dec
into
add
sub
inc
dec
pusha
pop
fstpt
xor
push
inc
and
inc
add
or
arpl
fiadds
cmp
dec
push
add
add
bswap
out
test
aaa
jmp
mov
orb
add
pop
lods
sub
jb
or
call
jae
push
popa
test
outsl
dec
outsl
fmuls
and
movzbl
and
or
punpckhwd
dec
outsb
push
je
insb
rolb
pop
adcb
lcall
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
mov
dec
xlat
jb
gs
sbbl
and
pop
or
push
mov
jb
add
inc
and
and
test
dec
cmpsl
loopne
lret
xor
sbb
mov
prefetchnta
mov
adc
pop
sub
add
fisttpl
rolb
or
sub
aaa
pop
loopne
add
jb
out
pushf
or
push
adc
add
xchg
adc
test
insl
pushf
leave
xor
sbb
outsb
sti
or
jae
pop
lock
data16
push
iret
cmp
dec
test
inc
push
adc
push
mov
repz
out
add
nop
add
mov
addr16
xor
or
pop
cmp
or
inc
dec
outsb
mov
loop
clc
sbb
sub
push
out
or
add
movsb
rcrb
js
hlt
out
cmp
cmp
jl
mov
sub
push
xor
push
gs
and
push
enter
sub
push
xchg
push
push
mov
mov
adc
fdivrs
and
push
jmp
add
adc
cmp
xor
push
and
jno
jge
test
fwait
or
sbb
cmc
sub
pop
sub
pop
js
inc
add
push
pop
daa
out
sub
lret
daa
cmpsl
nop
sbb
outsl
pop
sbb
inc
shrl
sub
adc
pop
fisubrl
cmp
nop
aaa
outsl
rcll
push
imul
iret
xchg
loop
cmp
xor
test
or
movsl
andb
or
test
xlat
outsl
or
pop
inc
imul
cld
and
and
push
push
das
xor
xor
arpl
sbb
mov
sub
add
in
inc
das
inc
out
sub
outsl
fsubrs
test
push
outsb
bound
jb
rol
in
dec
dec
das
push
xchg
push
push
jo
lret
inc
dec
dec
dec
inc
jg
popa
outsb
jae
data16
shlb
shll
stos
aad
jp
fs
fwait
dec
outsl
cmp
imul
sbb
and
mov
push
push
aad
fildl
or
int
push
push
int
nop
pop
test
inc
jl
dec
test
movsb
orb
ja
dec
xchg
dec
inc
xadd
sbb
inc
lar
ja
mov
inc
idivl
inc
adc
cmpb
neg
divb
rorb
pop
inc
dec
add
loopne
push
mov
mov
daa
push
jecxz
sbb
test
test
xor
inc
add
addr16
add
test
adc
mov
movsb
int3
daa
sahf
xchg
out
cmp
xchg
add
movsb
add
iret
and
dec
cmp
aaa
xor
add
lcall
pusha
add
push
jl
inc
daa
stc
push
subl
add
les
int
arpl
orb
data16
dec
inc
inc
dec
scas
in
cmp
dec
scas
in
sub
scas
in
scas
and
add
fisubs
scas
rcrb
lock
push
jo
push
pop
jl
data16
dec
push
dec
repz
push
ss
cmp
dec
js
int
stc
cmp
in
dec
adc
dec
fcoms
idivl
mov
cmp
mov
ds
push
mov
repz
dec
movb
mov
nop
je
cmp
push
and
and
inc
in
push
mov
pop
add
out
dec
inc
pop
dec
fstpt
call
add
xchg
out
xchg
aam
add
pop
leave
sar
add
or
scas
movsb
add
mov
mov
push
insb
pop
lock
xor
add
sub
testb
add
or
sbb
ja
dec
insl
mov
dec
mov
mov
and
xchg
dec
das
jbe
and
pop
inc
pop
leave
and
call
lock
clc
dec
das
or
popa
dec
push
dec
adc
outsl
add
sub
mov
inc
add
addr16
pop
enter
js
fcoms
in
dec
xchg
cmp
cmp
rcrl
dec
ss
add
dec
in
fwait
sub
push
dec
dec
decb
sub
xchg
scas
add
inc
outsl
out
xchg
sub
in
mov
xor
xor
das
mov
nop
or
xchg
faddl
or
add
dec
xchg
xor
out
xchg
xor
and
rorb
pop
leave
sub
adc
cmp
loopne
aaa
mov
out
out
fimull
add
add
cmc
dec
sub
cmp
rclb
push
xchg
sub
or
movl
aad
and
shlb
adc
sbb
ja
mov
or
and
popa
imul
dec
fildll
sbb
loopne
and
mov
nop
and
dec
or
push
in
cld
dec
outsl
pusha
mov
mov
or
jae
inc
dec
daa
add
je
adc
adc
push
add
or
aaa
push
out
or
fidivrl
insb
jnp
mov
idiv
int3
push
aam
sub
xor
xorb
add
cmp
dec
and
imul
pop
scas
push
push
push
push
push
lret
fimuls
rorb
jg
push
cwtl
push
mov
push
add
push
pop
sbb
ss
in
shlb
or
lds
cld
divl
or
sub
push
outsl
jecxz
mov
push
push
outsl
jg
jbe
adc
daa
imulb
xchg
insb
push
push
jne
lcall
sub
cmpsl
cmp
nop
push
push
je
xchg
pusha
push
xlat
scas
orb
call
cmp
push
mov
pop
or
dec
inc
push
push
push
lahf
in
xor
or
push
push
mov
mov
add
mov
mov
xlat
or
xchg
clc
push
push
jo
dec
jl
lods
push
lahf
inc
jno
loopne
adc
adc
pop
inc
addb
cltd
mov
inc
outsl
and
iret
xchg
mov
hlt
add
jnp
xchg
enter
fsubs
or
push
aaa
mov
push
rorl
sbb
xchg
or
add
or
bound
push
push
outsl
add
jecxz
loopne
cmpsl
cwtl
push
add
xchg
test
out
pop
jb
iret
outsl
xchg
fadd
xchg
cmp
lods
in
jg
add
nop
in
push
push
push
ja
mov
pop
jg
pushf
pop
sbb
xor
pop
repnz
enter
add
aaa
pusha
and
dec
dec
sub
push
in
sti
pop
push
adc
fcoms
outsl
add
ss
jno
fcomps
adc
pop
jo
pusha
ret
ss
mov
nop
xchg
sub
add
pop
jnp
inc
xchg
mov
fsubs
and
pusha
and
iret
sbb
daa
inc
leave
xchg
int3
pop
out
xchg
push
daa
or
adcl
repz
movsb
pop
sbb
push
int3
pop
push
cmp
xor
out
add
pop
xchg
inc
jne
jmp
or
in
push
or
push
cmpsl
sub
and
in
mov
or
pop
mov
dec
cmp
pop
outsl
enter
add
or
in
push
or
int3
fdivrl
test
leave
adc
cs
add
scas
in
loopne
add
loopne
xchg
pop
adc
dec
xchg
add
add
xor
push
clc
lahf
addr16
in
aam
pop
or
xchg
push
push
jb
es
daa
or
adc
adc
pushf
pop
shrd
push
mov
jns
adc
xchg
out
in
je
xlat
fwait
pop
cmp
push
xor
mov
push
sbb
adc
out
push
nop
push
enter
inc
jo
push
mov
sbbb
mov
in
addb
mov
outsl
and
adc
rclb
repnz
xlat
pop
add
fbstp
das
dec
dec
pop
movl
push
pusha
daa
ds
pop
ret
sbb
addr16
sub
lods
daa
xor
cmp
inc
push
mov
shrb
and
push
out
ds
outsl
xlat
add
insl
int
jns
xchg
mov
icebp
sub
dec
cmp
repz
test
cmpsl
stc
add
xor
lahf
out
notl
jae
push
pop
mov
iret
repz
int
inc
jne
jl
out
cwtl
mov
repz
roll
xchg
mov
fistpll
out
ja
mov
js
push
pop
jns
iret
repz
jg
ljmp
inc
mov
cmp
shrl
pop
adc
out
sahf
out
jl
mov
or
test
jns
jle
outsb
cltd
mov
lcall
into
or
xor
int
jns
jp
addl
cmp
repz
pusha
stc
xor
out
shll
ja
cmpsl
sahf
hlt
push
xchg
iret
sarl
pop
lcall
fstps
mov
leave
in
mov
mov
out
push
jbe
in
mov
lcall
lods
icebp
repz
repz
dec
mov
hlt
sarl
pop
popl
ds
jp
jns
iret
fisubrs
xchg
cltd
mov
int
jns
xchg
rorl
xchg
cmpl
mov
ds
out
inc
xchg
jle
xchg
nop
stc
cmp
out
push
vmovntps
xchg
cltd
mov
jl
out
lahf
jecxz
fwait
dec
repz
out
pushf
pop
mov
sbbl
ds
outsb
lahf
push
pop
xchg
out
ds
sarl
test
lahf
out
js
in
dec
mov
repz
cmp
out
negl
movsb
jle
jge
sbb
push
mov
add
repz
push
cmpsl
xchg
aam
test
iret
shrl
xchg
mov
jp
fwait
dec
repz
lods
xchg
scas
lahf
cmpsl
stc
xor
dec
scas
leave
or
mov
scas
mov
repz
or
mov
repz
imul
sti
inc
mov
sahf
out
cmp
fisttpll
mov
out
jns
in
push
mov
roll
ret
sahf
cmpsl
push
jb
dec
ret
fwait
sti
xor
out
cld
mov
cmpsl
addr16
lret
jns
mov
inc
ja
outsl
inc
rcrb
fwait
push
pop
mov
sub
add
fmull
push
add
in
inc
repnz
testl
daa
sub
cltd
ja
mov
fisubl
add
mov
sub
pop
pop
push
inc
aas
pop
enter
ror
sbb
add
sub
jb
cmp
incl
jbe
inc
adc
or
cmp
inc
arpl
or
aas
rolb
stos
aaa
fadds
enter
repnz
dec
ja
mov
pop
dec
pusha
dec
adc
and
dec
out
adc
fldenv
js
in
mov
jl
nop
jle
pop
lahf
aaa
leave
mov
dec
push
sbbb
fwait
sbb
fucomip
lcall
test
sub
test
mov
pop
ja
aas
mov
mov
pop
iret
shlb
loope,pt
push
loope
jns
les
mov
enter
lcall
jg
dec
rep
sbb
or
adc
sti
call
fxtract
inc
mov
iret
mov
aaa
pop
sbb
inc
mov
push
daa
cmp
rcll
testb
cmc
dec
clc
testl
ficompl
scas
icebp
in
sub
leave
xchg
data16
data16
shl
inc
roll
pop
jae
inc
mov
adcb
mov
fcomps
aas
fcoms
and
inc
shll
inc
jmp
inc
rcll
dec
inc
jg
dec
in
cmp
mov
daa
fimull
insl
pop
popa
adc
ret
add
mov
in
inc
cmp
push
cmp
or
push
push
sub
iret
add
add
in
dec
aam
push
push
call
sub
lcall
push
dec
and
imul
jp
and
loope
push
push
scas
out
xchg
pop
leave
inc
mov
or
adc
add
push
dec
push
jno
inc
repnz
xchg
inc
jno
adc
cmp
outsb
xchg
inc
repnz
inc
pusha
push
push
leave
sbb
in
and
xchg
dec
mov
adc
imul
js
cs
pop
cmp
pinsrw
mov
inc
pushf
pop
jb
xchg
test
mov
ja
aaa
pop
daa
pop
jb
sub
pop
sbb
mov
outsl
lcall
and
insb
cmp
shlb
out
repnz
cwtl
sub
mov
scas
shlb
dec
sahf
xchg
loopne
shl
cmpsl
mov
cmp
sub
daa
nop
and
movsl
jb
sahf
aaa
jb
mov
mov
sarl
out
add
add
sahf
out
pop
std
or
jae
sub
push
xlat
or
adcb
sub
add
xchg
adc
xchg
hlt
adc
dec
jae
mov
dec
push
addr16
dec
lock
jae
lea
leave
inc
repnz
fmulp
leave
into
cmpsb
add
dec
sahf
xchg
out
jmp
mov
je
pushf
in
xchg
je
je
je
outsl
jb
xor
xchg
out
jb
add
xchg
outsb
mov
ja
popf
xchg
jns
mov
das
mov
mov
mov
add
loope
in
sbb
movaps
enter
xor
jne
leave
mov
int
xchg
push
xchg
pushf
out
es
jo
push
mov
add
mov
mov
insl
cmpsl
inc
out
and
add
inc
or
jno
inc
ret
and
push
ret
mov
push
adc
sbb
and
sbb
and
add
jno
pushf
xchg
adc
push
adc
add
popa
jbe
adc
dec
push
jb
push
in
sub
addb
and
in
mov
loope
cltd
loopne
jb
aam
xchg
adc
jbe
ljmp
jbe
jae
pop
ja
and
daa
ja
ja
ja
dec
push
jno
jae
sbb
jb
jae
jae
mov
adc
add
das
das
inc
sbb
ja
ja
ja
das
das
das
ret
ja
ja
ja
ja
das
das
das
out
ja
ja
js
or
jns
out
or
or
sahf
out
sahf
or
or
sahf
out
rsqrtps
pop
adc
jns
out
adc
sbbl
stos
lock
ss
and
dec
out
and
adc
dec
jns
jns
and
add
sbb
inc
add
sub
inc
pop
shll
pop
add
pushf
out
cwtl
js
add
aaa
inc
pop
je
add
jne
jo
adc
or
jne
ja
lcall
ds
aas
add
cmp
xlat
fs
fisttpll
xor
daa
je
inc
mov
lods
adc
mov
xor
mov
jp
ja
push
pusha
jbe
addl
pop
movsb
aaa
je
je
in
loopne
mov
xchg
adc
xchg
in
scas
and
jmp
jmp
cmp
js
adc
inc
js
jnp
push
loopne
jb
jnp
js
jnp
mov
adc
mov
ss
mov
das
mov
repz
add
cmp
mov
inc
jns
and
nop
mov
push
and
jns
jns
jl
add
iret
inc
lock
xchg
xchg
add
in
les
mov
insb
sbb
pop
jl
test
mov
add
fwait
jl
pop
sub
push
jg
push
jb
mov
mov
insl
lods
scas
int3
iret
jl
inc
repnz
jnp
sub
jge
leave
lret
andl
jl
leave
and
mov
ja
jno
and
cmp
jnp
jnp
jl
pop
and
add
inc
jl
lock
sub
rdpmc
cmp
xchg
adc
jle
mov
leave
data16
addr16
xchg
punpckhbw
imul
out
inc
xchg
xchg
inc
and
jge
in
seto
jle
jge
lret
lret
cmp
pop
jg
jg
sahf
fxch
sbb
add
mov
jp
jb
loopne
push
and
sub
repz
add
leave
pop
jg
andb
inc
sub
mov
inc
js
jle
add
jle
jle
xchg
pop
and
and
in
scas
or
push
xor
mov
addr16
jg
in
in
xchg
sbbb
in
lods
xorb
in
in
int
aad
fldl
in
in
xor
std
addb
or
andl
or
pushf
or
or
pushf
pushf
pushf
pushf
pop
push
add
pushf
add
add
inc
bnd
xchg
fisubrs
fisttpl
push
xchg
insl
jnp
fildl
mov
sbbb
add
add
and
inc
incl
ja
cmp
xorb
sub
in
jne
xor
pushf
pushf
sbb
ret
push
andb
andb
sahf
ja
lea
jge
test
push
lea
iret
repz
xchg
push
or
xchg
cmp
or
enter
jbe
neg
xlat
dec
subb
mov
mov
repnz
push
andl
cs
add
leave
mov
dec
or
data16
jae
jae
push
or
xchg
mov
das
pop
push
cmovle
loopne
inc
sub
lahf
add
push
aas
mov
repnz
add
inc
push
ja
push
pop
or
cwtl
dec
ja
adc
xchg
and
mov
orl
in
add
int3
sbbl
std
add
repnz
test
out
pop
iret
sub
or
pop
leave
sbb
ja
jnp
andl
jb
mov
mov
add
fsub
cmp
cli
add
in
add
push
push
es
repz
xor
cmp
iret
repz
inc
or
pop
or
iret
repz
or
in
ret
xchg
test
test
test
test
addr16
test
add
sub
dec
xchg
fldt
pop
pop
pcmpgtd
outsb
push
fstp
jae
jbe
or
pop
mov
xchg
xchg
or
jp
shlb
mov
xchg
and
iret
xlat
xchg
xchg
iret
xchg
xchg
and
cmp
xchg
iret
dec
xchg
xlat
jb
inc
es
xchg
add
in
in
fnsave
int3
pop
add
mov
mov
mov
int
pop
sbb
outsb
daa
daa
inc
push
ja
dec
outsb
daa
add
test
and
pop
mov
iret
cmp
add
lds
aad
mov
push
jns
mov
or
paddw
das
inc
mov
adc
xor
in
xchg
and
mov
push
mov
jb
mov
ud2
cmp
xchg
mov
pushf
cmpsl
jb
jb
mov
enter
jb
fsubrp
hlt
add
push
or
mov
pop
sub
mov
jb
enter
mov
mov
inc
mov
mov
ss
mov
out
mov
push
add
mov
out
mov
xor
ja
dec
sahf
xchg
xor
inc
push
pop
leave
jae
outsb
add
push
pop
fbstp
mov
mov
xchg
and
push
scas
pop
and
add
nop
and
fcoml
jg
cmpsb
xchg
out
ret
push
iret
in
call
or
mov
xor
sbb
dec
lea
repnz
add
in
dec
xchg
add
insl
lea
aaa
jns
insl
jge
test
or
dec
or
inc
repnz
aaa
addps
mov
scas
jmp
cmp
or
adc
sbb
xor
dec
es
mov
inc
add
repnz
push
jb
pop
in
xchg
jge
ja
stos
pushf
cmp
daa
mov
add
add
leave
inc
repnz
in
or
pop
js
cmpsl
xchg
pop
mov
call
orb
orb
push
cltd
xchg
xchg
jb
fwait
push
scas
fwait
mov
ss
fisttps
mov
in
dec
dec
fiadds
out
dec
sahf
out
add
incb
nop
xchg
xchg
out
pop
invd
push
push
pop
pop
ds
push
nop
jmp
nop
cs
ss
cmp
jno
and
xchg
out
add
loopne
ja
popf
mov
lahf
mov
mov
nop
into
pop
lar
nop
lock
xchg
xor
pop
xchg
ja
xchg
ds
mov
nopl
xchg
cmpsl
push
pop
xchg
pushf
mov
in
sub
xchg
js
es
jb
xchg
mov
or
add
add
mov
mov
jno
xchg
mov
inc
adc
in
mov
xlat
mov
roll
scas
clc
pop
lea
add
jo
cli
stos
xlat
jns
inc
mov
cs
rorb
rorb
sub
xor
sub
xchg
push
pop
add
sahf
cmpsl
jbe
jle
xchg
ja
dec
sahf
fisttpl
fsubrl
cmp
xchg
leave
inc
repnz
hlt
mov
ja
int3
and
jae
xor
fs
dec
jno
xchg
pop
gs
jae
mov
xor
fists
fnsave
pop
push
aas
lods
mov
cmpsl
pushf
pop
and
push
xlat
fists
pushf
pushf
pushf
out
out
out
sub
daa
idivl
xor
sub
xchg
cmp
outsl
in
xchg
inc
adc
jbe
repnz
xchg
pusha
jmp
adc
shl
jae
fmull
in
test
jmp
aad
nop
xchg
dec
mov
and
cmpsb
xchg
xchg
cmp
iret
xchg
xlat
xchg
fists
add
or
xchg
xchg
sub
lsl
inc
dec
adc
cmpsl
cmp
jmp
outsb
jbe
or
sbb
notb
mov
push
add
int3
repz
daa
aam
or
sub
daa
iret
or
hlt
push
push
mov
daa
jg
xchg
dec
jns
out
jg
pop
adc
sbb
repnz
lock
sub
adc
jns
loopne
dec
xchg
pop
push
jbe
vmread
jecxz
mov
xor
push
xchg
pop
cwtl
mov
insl
add
repnz
loopne
add
rorb
call
leave
push
repnz
repz
jecxz
xchg
mov
sbb
bsf
add
xchg
cmp
inc
xchg
dec
xchg
push
xchg
pop
xchg
insb
pop
ljmp
clc
cwtl
lret
sub
movsl
mov
xchg
pop
mov
sub
dec
mov
cltd
dec
sahf
pop
and
loopne
jl
mov
cwtl
adc
sbb
jl
cmp
push
ficomps
popf
pop
pcmpgtd
pop
add
rep
pop
jbe
or
cmp
pop
xchg
xor
add
test
jg
nop
and
lcall
mov
lcall
mov
xrelease
fimuls
pushf
loop
cwtl
out
pop
cltd
lock
cltd
push
add
jae
jns
inc
pop
dec
add
sahf
outsb
repnz
pop
sysret
fmulp
repz
push
or
or
out
orb
xchg
and
jp
lcall
mov
leave
mov
sbbb
cltd
out
push
testb
daa
cmp
jns
push
lcall
adc
and
pushf
mov
lcall
pop
inc
ja
cwtl
mov
mov
aam
jb
rolb
lcall
mov
mov
sub
in
add
mov
jae
leave
int
addr16
popf
rclb
fwait
xchg
mov
popa
xchg
cmp
fwait
cmpsl
push
mov
in
es
adc
inc
sbb
or
sbbb
add
add
fwait
jns
jns
mov
mov
fwait
lret
inc
js
loopne
jmp
push
fwait
inc
push
mov
push
movsbl
pushf
and
pushf
pusha
sahf
cltd
push
sbb
push
andl
inc
cs
xchg
jb
pop
cmpsb
pushf
das
scas
pushf
mov
and
sbb
pushf
pushf
into
pushf
pop
repnz
jno
pop
ficomps
xchg
cmpsb
bswap
lahf
cmp
cs
aas
js
fadds
xchg
adc
pop
popf
cmp
enter
popf
cmp
outsb
sbb
push
pop
push
popf
loop
in
pop
popf
arpl
dec
xor
adc
sahf
pop
das
cmpsb
aas
xchg
dec
jae
jle
popf
add
nop
jl
mov
sbb
mov
out
mov
es
lea
test
adc
jns
aas
push
push
xor
mov
push
sarl
fbld
outsb
pcmpeqd
daa
mov
iret
jle
mov
sbb
repnz
jg
sahf
mov
mov
outsb
clts
add
in
sahf
sahf
cmpsb
sahf
sahf
into
sahf
daa
iret
jae
pop
ficoms
out
iret
jae
cmp
idiv
push
push
xchg
or
lahf
sbb
cltd
dec
mov
in
outsb
push
pop
lahf
push
pop
cltd
dec
ds
cmpsl
push
xchg
mov
bound
xchg
push
call
cmp
mov
lahf
out
push
ret
lahf
iret
das
aaa
ljmp
lahf
icebp
sbb
mov
inc
add
sti
sahf
or
nop
mov
or
adc
mov
pushf
xchg
aas
push
lahf
or
adc
sub
xor
pusha
rorb
add
dec
mov
leave
insl
insl
divl
ja
jl
jae
dec
mov
outsb
daa
pop
ret
lret
pmulhuw
in
mov
pop
mov
dec
push
mov
inc
rcrl
cmp
pshufw
jns
xchg
add
iret
in
lods
incl
test
jb
sahf
pushf
fabs
mov
in
inc
mov
daa
iret
jmp
pop
push
add
daa
je
inc
xchg
das
inc
pop
lsl
sbb
insl
arpl
imul
out
jnp
outsb
fnsave
pop
lidtl
add
jns
out
mov
xchg
or
sysret
fbld
mov
cmpsb
push
fs
and
xor
cmpsl
cmpsl
push
out
dec
dec
dec
xchg
icebp
stc
add
or
adc
add
mov
mov
jb
mov
lock
mov
dec
nop
mov
add
xchg
mov
xor
lret
pop
leave
jae
dec
add
cmp
daa
idiv
add
movsb
mov
cmp
inc
das
xchg
imul
movsb
adc
jne
xor
dec
cwtl
outsl
mov
sahf
out
outsb
pop
leave
add
add
dec
sidtl
loope
cltd
loop
jmp
push
inc
adc
in
push
mov
pushf
loopne
movsl
pop
aaa
movsl
aas
pop
push
xchg
jl
pop
out
inc
xchg
add
mov
push
scas
iret
es
iret
movsl
nop
cmpsl
js
roll
cli
movsl
sbb
fisubl
ja
cmpsb
mov
leave
repz
add
jae
mov
add
mov
push
cmpsb
loopne
mov
js
inc
repnz
inc
stos
stos
mov
mov
dec
pmaxub
stos
xorl
in
inc
inc
cmpsb
cmpsl
dec
repnz
add
decb
cmpsl
call
pop
xor
das
inc
jbe
dec
mov
bswap
repz
popa
push
push
imul
iret
jno
jns
push
or
cmpsl
daa
or
fcmovne
lods
cmpsl
mov
mov
iret
in
int3
xchg
add
daa
pop
scas
idiv
pop
test
repz
movaps
xor
cmp
in
daa
inc
push
or
test
push
test
lods
mov
shll
jnp
subl
xchg
setge
cmp
into
out
test
sbb
dec
das
push
cmp
cmp
insb
mov
cmp
in
adc
cmp
mov
cmp
out
dec
sbb
dec
xchg
iret
sbb
and
lods
nop
sar
mov
scas
push
scas
and
shrl
sahf
fcmovne
in
out
xchg
and
mov
xor
jns
add
pop
add
push
jb
or
xchg
popf
movsl
mov
in
mov
iret
and
pop
mov
scas
pop
push
lods
pop
inc
es
int
push
mov
cmp
iretw
jg
pop
pop
push
dec
outsb
ucomiss
pop
pop
pop
lahf
lods
cmpsl
lods
scas
lods
mov
pop
pop
pop
pop
mov
lods
xlat
lods
pop
pop
pop
pop
fildll
lods
pop
pop
pop
pop
ljmp
out
sahf
out
adc
and
aaa
lods
sbb
dec
test
mov
movd
cmp
jge
out
sahf
jb
enter
lods
scas
lods
mov
inc
mov
mov
lods
lods
in
xchg
and
lods
out
out
lods
cmp
in
idiv
or
mov
scas
and
repz
xor
cmp
inc
sbb
iret
repz
sbb
cmp
repz
or
cmp
leave
ja
and
in
repnz
mov
mov
cmpsl
mov
mov
out
pop
int
aad
lds
cld
aaa
jb
push
or
fucom
jns
add
add
smsw
cmp
daa
add
inc
pop
inc
sbb
mov
fs
xchg
xchg
xchg
scas
jge
test
cs
filds
and
std
add
dec
push
ja
mov
push
add
sahf
add
dec
push
mov
jbe
pushf
lcall
pcmpeqw
adc
sahf
out
or
cmp
mov
ret
out
iret
adc
in
lret
out
jns
sti
adc
mov
outsb
and
mov
pop
daa
sbb
out
xor
sbb
in
push
sbb
in
pop
je
and
xchg
mov
and
mov
es
enter
xchg
adc
mov
mov
leave
insl
in
mov
aas
leave
leave
leave
leave
pop
jno
mov
stos
repz
repnz
adc
mov
jns
or
adc
sbb
leave
leave
in
and
inc
pop
jl
popf
cmp
lcall
cmp
cmp
testl
jns
dec
and
pop
cmp
xchg
js
sub
out
scas
pop
mov
mov
ret
das
or
inc
jo
pushl
out
movhps
pop
pop
pushf
cmp
repz
daa
pop
das
aaa
popf
cmp
repz
or
out
xchg
out
or
femms
ds
out
in
sahf
packuswb
outsl
ja
adc
xchg
adc
cmp
repz
add
mov
cmpsl
xlat
movsb
or
push
sbb
lret
out
js
sbb
outsb
xchg
pop
lret
iret
sar
fidivl
out
mov
aas
cli
fwait
pinsrw
add
iret
mov
push
add
add
xchg
jl
cmpsl
push
sub
jo
in
in
js
orb
xorb
mov
lret
rcll
int3
idiv
push
mov
jns
add
push
push
add
push
lahf
xchg
out
cmp
push
cs
sbb
push
ja
punpcklwd
cs
scas
ja
mov
or
aas
pushf
xchg
in
jb
mov
inc
jb
xlat
xchg
cli
cmp
in
add
adc
jns
xchg
out
and
push
xor
mov
dec
outsb
mov
addr16
add
cwtl
dec
mov
test
mov
pop
leave
call
jl
daa
xrelease
mov
push
mov
dec
rcll
das
cmpb
lahf
imul
pop
jns
orl
pop
mov
or
les
fcmovne
int3
aam
in
in
aaa
jnp
fstp
hlt
pop
cld
filds
pop
or
dec
push
cmpsl
jbe
adc
cmovs
aaa
mov
dec
xchg
out
jns
add
les
orb
xchg
xchg
stc
pop
jo
lcall
in
in
and
int
ja
pop
and
add
sub
pop
fcmovne
fldcw
mov
jns
cmp
inc
dec
add
push
pop
iret
or
fcomp
dec
inc
pop
jle
xchg
addr16
ja
es
inc
repnz
cmp
add
mov
push
add
or
setnp
sahf
add
out
mov
repz
push
dec
pop
push
or
iret
repz
push
jne
mov
or
xchg
mov
pop
mov
mov
mov
pop
movups
dec
sahf
push
jecxz
stc
add
jns
stc
inc
pop
bsr
mov
jns
xor
and
sahf
out
and
and
jns
out
and
and
sahf
es
push
sahf
sub
mov
mov
cmp
lret
loopne,pn
jl
fucomi
psadbw
add
iret
or
pop
xor
xchg
xchg
xchg
fldt
dec
aaa
jns
pop
cmp
outsl
daa
daa
daa
daa
jp
nop
fwait
xchg
iret
dec
outsl
fbld
mov
fnstcw
pop
push
jg
mov
adc
mov
xor
push
mov
pop
mov
jle
lret
lret
lret
lret
mov
stos
mov
mov
sarb
jle
iret
sbb
sbb
mov
xchg
and
rorb
sahf
out
and
and
repz
cmp
dec
and
daa
daa
iret
and
jo
das
xchg
in
dec
xchg
sub
sub
iret
repz
enter
fidivs
leave
leave
repz
xor
dec
in
fs
rcll
repz
cmp
cmp
xchg
cmpsl
fwait
cmp
push
xchg
xchg
xchg
bound
add
and
mov
jl
push
add
stos
lock
paddsb
push
hlt
rorl
pusha
les
ret
iret
jae
pop
aaa
add
add
inc
dec
ret
inc
repnz
stos
inc
shr
nop
lds
daa
push
jg
leave
leave
adc
iret
shll
leave
leave
leave
rorl
push
mov
iret
leave
aad
or
adc
vmaxsd
repnz
sbb
and
add
sbb
iret
repz
add
xor
ret
lahf
and
outsb
test
imul
jnp
dec
dec
dec
orl
inc
repnz
jbe
int3
xlat
pop
xlat
mov
or
popf
fucomi
psubb
sahf
xchg
jg
or
or
leave
leave
in
das
pop
cmp
mov
iret
leave
pop
adc
cmp
cmp
xchg
push
jns
ja
popf
test
sbb
out
sbb
sbb
pushf
cmp
fisttpll
sbb
fucomip
sahf
out
repz
add
and
out
in
and
and
aaa
daa
inc
dec
das
push
repnz
jecxz
lds
loopne
cmc
cmp
in
lds
iret
mov
bswap
push
add
daa
fcmove
or
mov
cmp
std
or
xor
cmp
repz
cmp
add
add
repz
push
pop
pop
vmwrite
dec
gs
jbe
jns
insl
jne
jge
test
in
sahf
out
adc
add
cmovle
xchg
xchg
mov
push
sbb
repz
sbb
rcrb
fcomps
fwait
cmp
loopne
call
cmp
in
sahf
out
pop
or
out
sbb
daa
and
push
sub
sub
sub
dec
repnz
dec
adc
push
movl
inc
add
fstps
das
push
lret
enter
jns
lret
lahf
cltd
sahf
out
inc
movsb
pop
scas
add
jns
rorb
fildl
out
mov
cmp
icebp
add
and
cwtl
lret
sahf
out
pop
das
enter
add
sbb
pop
out
sahf
out
pop
push
jb
rorb
or
pop
pop
pop
pop
les
xchg
enter
sahf
out
mov
mov
leave
cmpsl
rorl
cmp
daa
ljmp
popl
leave
or
das
adc
in
mov
and
fisttps
call
inc
leave
push
leave
pop
push
add
jno
in
mov
iret
xchg
pop
xchg
pushf
pushf
cmp
or
iret
repz
sahf
xchg
out
pop
fists
ljmp
add
or
push
lret
ja,pn
cmp
pop
sub
aaa
inc
push
vmread
lret
adc
pop
pop
lret
fldl
pop
xchg
setl
sahf
aaa
jb
movsb
lret
mov
push
mov
pop
int3
or
in
jp
fmull
ds
xchg
pop
pmuludq
add
jns
fcmovne
or
pop
sbb
and
jns
out
sub
xor
jns
enter
lret
inc
sbb
jbe
push
dec
pop
pcmpgtb
sbb
pushf
insb
pop
je
jl
xchg
cmpsl
fwait
mov
mov
and
cmp
repz
and
daa
iret
jae
sub
repnz
int3
cs
sub
fsub
push
das
or
cld
mov
leave
repz
xor
aas
hlt
unpcklps
sahf
xchg
int3
sbb
push
and
rdmsr
stc
dec
icebp
xor
out
cmp
popf
test
push
add
inc
jmp
sub
out
mov
cmp
jge
xlat
dec
jp
and
push
add
aas
inc
push
pusha
pop
sub
inc
inc
aas
push
test
inc
push
pusha
cmpsl
xchg
testb
mov
ret
or
fdivrp
mov
iret
adc
push
adc
add
jns
iret
add
fdiv
call
sahf
ror
mov
mov
movsb
pop
mov
iret
cwtl
xchg
nop
mov
jo
pusha
push
pop
push
jns
out
inc
cmp
and
clc
xor
out
adc
xlat
lock
add
mov
mov
pop
cmpsl
test
cmp
repz
add
add
iret
repz
or
or
sub
or
fucomi
imul
daa
adc
adc
leave
leave
in
movsb
and
outsb
mov
push
addr16
das
push
xorps
mov
push
and
cs
pop
andb
cmp
addl
sahf
sub
daa
mov
cmpsl
mov
into
ret
xacquire
pop
sbb
adc
push
insb
add
sub
nop
lret
add
cmpsb
xchg
add
mov
fwait
loop
add
push
jne
add
push
adc
cld
or
aam
add
stos
add
add
pusha
cmpb
mov
pop
movsl
sbbl
ja
pop
shll
pmulhuw
jbe
inc
mov
inc
push
enter
mov
sbb
in
call
fistpll
mov
ficompl
mov
xor
mov
fcomp
loopne
jb
jle
out
or
add
dec
inc
mov
pop
jnp
or
push
fdivr
inc
in
pop
lcall
imul
pop
pop
pop
jle
pmovmskb
add
push
pusha
xchg
mov
lea
pop
das
aas
mov
daa
push
lahf
nop
or
rcr
stc
cmp
repz
xchg
or
rcr
out
sahf
cmpsl
adc
jns
push
adc
in
fstpl
cmp
repz
sbb
hlt
sbb
sub
or
mov
in
test
jo
js
inc
fcomp
mov
repz
js
jns
jp
push
jns
iret
cld
lods
call
pop
shrb
into
push
mov
jbe
add
pop
in
inc
pop
lods
add
cmpsl
pop
divl
andb
test
adc
push
cwtl
mov
jl
cmpsb
push
xorb
stos
jp
icebp
addr16
push
push
pop
inc
sarl
inc
push
xchg
lea
pop
pop
aas
pop
pop
subl
jle
lds
out
cs
sbb
inc
pop
leave
cmpsl
aad
jg
out
addr16
cmc
mov
das
inc
sub
mov
out
mov
jne
cltd
cwtl
xchg
pop
adc
loope
iret
dec
and
push
sbb
sbb
loopne
add
rol
jae
repz
and
push
jns
or
sahf
clc
loopne
loopne
ds
iret
mov
push
mov
jns
push
or
or
adc
pop
mov
push
les
test
iret
repz
cwtl
push
nop
repz
repz
mov
test
iret
repz
andb
je
repnz
dec
enter
mov
sbb
xchg
adc
xor
daa
or
sbbb
mov
addl
jg
iret
dec
lcall
iret
repz
mov
repz
mov
dec
insl
add
shlb
xchg
mov
mov
dec
das
push
dec
insb
jo
adc
cmp
arpl
mov
add
nop
cmovo
hlt
in
jl
adc
mov
sub
mov
mov
ret
inc
and
sahf
mov
sub
lcall
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
outsl
incl
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
incl
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
call
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
call
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
and
pop
dec
add
sti
aas
jno
or
mov
fisttps
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
lods
call
lcall
cmp
push
mov
xchg
aas
ljmp
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
clc
incl
gs
std
orl
pop
ficomps
frstor
push
orl
cmp
inc
incb
je
inc
inc
push
dec
pushl
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
xchg
fs
lcall
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
decl
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
mov
test
xor
leave
mov
insb
fdivs
jne
filds
or
pop
lcall
shrl
push
ficoms
push
xlat
enter
mov
and
mov
call
xchg
mov
mov
or
or
and
or
adc
lcall
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
and
incl
movsl
in
lahf
xor
mov
js
stc
clc
mov
sbb
push
sub
insb
fs
add
hlt
push
imul
pop
lret
js
fdivs
test
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fistpll
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
incl
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
lcall
icebp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
fcomip
shrb
rclb
or
add
mov
das
es
or
sub
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
ljmp
cli
call
lcall
clc
sar
imul
push
js
or
push
addl
incl
ret
cmp
cmpsl
notl
pusha
rorb
imul
or
shrl
or
inc
sar
mov
mov
fidivrs
mov
jmp
data16
mov
lret
mov
cmpsb
mov
sarb
ljmp
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
popa
movmskps
sbb
add
sub
adc
pop
mov
cmp
jl
dec
adc
out
pop
pop
cmp
push
xlat
fcomp
sahf
out
sahf
fcmovu
fsubp
out
in
jecxz
in
sahf
out
sahf
jmp
repz
out
hlt
cmc
div
clc
fnstsw
out
cli
sti
cld
pop
pop
sbb
scas
inc
mov
lahf
xchg
scas
inc
sub
adcb
nop
xchg
jae
daa
cltd
fadds
push
dec
bound
and
inc
mov
sub
bound
fdivrs
popa
je
push
inc
in
fisttps
and
cmp
inc
shrb
lds
xor
pop
inc
cmp
pop
bound
xor
mov
popa
arpl
cmp
arpl
or
push
outsl
sub
xor
xor
xor
sti
imul
push
inc
jbe
pop
insb
imul
xchg
insb
gs
push
je
imul
dec
inc
mov
add
push
inc
lcall
dec
xchg
or
sbb
scas
fs
push
je
lods
test
jbe
dec
addb
or
adc
insb
xor
je
inc
inc
sbb
pop
push
add
addl
sbb
xor
insb
inc
vshufps
push
dec
or
imul
xorb
insb
aaa
jbe
cmc
lock
inc
push
jb
lods
fadds
add
sbb
fcoms
cltd
and
jae
insb
xchg
daa
pop
pop
movsb
inc
mov
cmp
xor
mov
sbb
inc
pop
jnp
mov
jo
inc
inc
add
shlb
mov
gs
mov
iret
int
push
dec
cmp
pop
insl
inc
xor
sbb
mov
pinsrw
jne
mov
popa
mov
mov
pop
xor
xor
mov
sahf
add
or
add
out
fldl
push
clc
xchg
into
pop
not
or
jo
mov
lods
pusha
inc
mov
aas
aam
inc
adc
add
rcrb
add
or
pop
outsl
xor
leave
xor
lcall
test
mov
or
rclb
inc
xorb
vmread
frstor
rcll
dec
popa
jo
cmp
mov
outsl
adc
mov
fadds
adc
push
lds
xor
pusha
xor
nop
test
pop
cmp
arpl
cmp
mov
jo
push
dec
adc
push
xchg
sbb
outsl
insb
jns
das
aad
or
inc
jb
push
gs
cmpsl
mov
arpl
inc
mov
test
test
push
bound
ja
inc
jbe
push
shll
mov
dec
ja
dec
xor
pop
das
adc
int3
lcall
push
add
add
xorb
jmp
mov
adc
pop
dec
es
mov
call
test
rorb
adc
pusha
mov
test
sbb
sbb
push
pushf
ss
rorl
scas
cmp
pop
bound
outsb
arpl
mov
dec
pop
je
pop
in
xchg
pushaw
in
insl
and
jne
push
inc
pop
sub
and
lret
xlat
lds
daa
sub
or
xchg
add
add
lcall
aas
pop
sbb
fdivr
loopne
jg
clc
add
dec
inc
dec
in
add
es
movsb
add
add
add
or
pop
pop
push
or
add
mov
or
or
or
adc
adc
push
adc
jbe
adc
or
pop
sbb
adc
adc
adc
add
adc
aaa
in
data16
or
roll
jle
rolb
nop
add
add
insl
insl
mulb
add
adc
sub
add
add
out
sbb
cmp
call
mov
add
push
adc
pop
and
xor
and
inc
mov
adc
xor
addb
sbb
mov
pusha
xchg
pop
pop
pop
add
ja
add
adcb
jne
add
adc
inc
or
and
adcb
aas
or
pusha
add
scas
and
adc
pushf
into
add
adc
stc
das
mov
cmp
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
jo
lock
and
or
adc
xorb
scas
fiaddl
or
js
pop
cltd
adc
cli
sub
rcr
push
ret
xchg
decl
and
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
call
out
pop
les
fsts
dec
sub
pop
mov
cmp
and
xor
and
shr
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
dec
mov
add
std
or
mov
sbb
cli
and
mov
fiaddl
jg
ljmp
sbb
and
mov
bound
pop
lahf
mov
movsl
jecxz
outsl
lea
pop
mov
stc
or
incl
loope
inc
repnz
addr16
out
or
push
push
xchg
add
cli
mov
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
xorb
xor
lcall
fs
scas
mov
pop
pop
mov
popl
lcall
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
outsl
call
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
ljmp
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
mov
lcall
leave
mov
jp
push
out
or
push
lcall
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
inc
sub
jmp
sbb
jle
sbb
pop
jb
mov
mov
mov
incl
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
aas
add
add
stc
loope
mov
sar
andl
outsb
outsl
adc
icebp
testb
mov
jg
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
das
ljmp
dec
subl
jb
adc
push
lock
ljmp
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmpl
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
jp
fisttpll
dec
fisttpll
out
aas
std
cli
push
push
mov
jg
cmp
sub
inc
scas
inc
mov
jg
ljmp
je
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
sub
cmp
cmp
js
jmp
clc
pop
hlt
sub
movsb
add
ljmp
rorb
gs
std
xorb
jg
pop
loopne
call
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
cmp
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
jmp
pop
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
call
push
mov
adc
and
sbb
xchg
jo
and
out
test
ljmp
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
jmp
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
fcmovb
mov
push
movsb
xchg
or
repnz
add
or
stos
dec
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
push
fwait
shr
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
std
les
cli
adc
and
lahf
fdivr
stc
int3
mov
mov
mov
pop
mov
std
loop
shrl
mov
dec
incb
fisubrl
aas
mov
mov
jo
or
cld
inc
or
pop
jg
add
jle
pop
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
std
jg
call
dec
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
sar
cmp
push
jbe
mov
imul
dec
cmp
sti
push
push
in
aas
mov
fsubrl
shlb
loope
lock
and
pop
imul
add
push
sbb
sar
add
push
and
mov
adc
inc
aas
push
rcrl
inc
pop
rolb
pop
inc
jb
fistpl
adc
call
ljmp
nop
mov
inc
sti
arpl
daa
std
or
sbb
pushl
ret
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
mov
incl
fsubr
fistps
lds
fidivrl
jg
stos
jecxz
jmp
add
dec
mov
sub
jge
xor
lahf
les
jg
mov
sbb
sbb
cld
addl
sbb
xchg
orb
int3
push
sbb
pop
push
arpl
out
out
outsl
xchg
call
loopne
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
ss
jg
dec
jp,pn
adc
lahf
mov
or
out
lcall
pop
shl
in
in
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
ljmp
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
out
push
add
ds
pop
adc
imul
jmp
outsb
inc
pop
xor
rorb
pop
mov
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
or
mov
movsb
insb
or
and
xchg
sub
insb
test
aas
repz
outsl
cs
out
lock
in
jmp
stc
out
mov
clc
push
std
mov
inc
js
or
dec
sbb
push
mov
xchg
pmullw
loop
decl
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
fists
out
pop
or
or
dec
ss
mulb
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
fistps
jno
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
and
aas
mov
mov
out
cmp
or
addr16
sbb
cld
daa
jp
cld
jbe
adc
cltd
or
mov
ret
nop
xchg
clc
push
std
cmp
das
incb
lock
pop
pop
div
cld
idivl
cmc
add
scas
stc
lahf
loope
add
lahf
jmp
std
scas
bound
jge
fbstp
out
xchg
add
leave
xchg
mov
mov
loope
mov
cmpsl
popf
push
mov
cmp
ja
push
daa
outsl
das
fwait
dec
das
push
add
cmpsb
cmp
call
ret
data16
decb
adc
mov
jo
jbe
and
call
negb
cltd
add
jb
mov
inc
add
dec
lds
std
fcomip
xchg
dec
dec
inc
sbb
xchg
pusha
dec
das
js
mov
aas
icebp
ret
ror
sbb
sbb
inc
adc
push
pushf
adc
aas
pop
clc
loope
loope
push
or
jp
dec
add
xlat
in
cwtl
pop
inc
jmp
xor
mov
xchg
lcall
decb
js
pop
gs
into
sarl
pop
out
jg
jno
xor
loop
ret
cmp
arpl
out
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
cmp
inc
xchg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
ljmp
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
or
push
add
or
jns
add
sti
push
sti
pop
inc
fs
test
mov
push
rorl
stos
cmp
int3
pop
iret
and
and
lea
pop
add
add
inc
orb
pop
jecxz
adcb
sub
popa
pop
and
dec
and
push
lock
dec
loope
popl
push
xor
jno
lret
adcb
mov
popa
push
mov
ja
imul
fsubp
ja
es
jo
imul
sbb
imul
jp
ds
add
adc
push
inc
cmp
test
addr16
add
dec
add
sub
jp
inc
add
repz
add
push
imull
adc
data16
dec
push
inc
push
loope
out
mov
insl
pop
imul
push
add
std
ficoml
add
pop
add
dec
jp
xor
mov
inc
cmpsb
jne
inc
jns
fiadds
orl
fiadds
push
shr
divl
addr16
jbe
push
divb
ss
js
loop
sub
fisubrl
sub
js
mov
neg
push
dec
inc
xor
sahf
cmp
mov
out
push
inc
inc
xchg
inc
push
push
insl
lock
jno
push
mov
mov
pop
mull
push
dec
mov
push
pop
out
mov
jb
dec
outsl
push
mov
pop
jb
cli
or
sub
push
jo
adcb
mov
xor
jnp
out
loopne
data16
jle
dec
bound
addl
dec
xor
dec
es
roll
dec
jbe
mov
loope
fidivrs
dec
stos
xor
repz
xchg
or
push
sub
jne
neg
sarl
ds
sbb
jp
ss
pop
pop
push
xchg
ret
pop
fidivrs
fidivrs
dec
inc
ds
adc
jp
jnp
fdivp
sub
fs
xor
pop
push
cmp
fnsave
add
jo
xor
stos
xor
fisubrs
push
mov
cli
pop
xor
mov
lcall
xchg
pop
stos
gs
push
adcb
xchg
inc
inc
xor
xor
jno
dec
ret
mov
popa
inc
jle
push
ja
fidivs
orb
adc
fimuls
mov
js
dec
negl
divl
push
jbe
xchg
push
push
push
sbb
cmp
pop
push
je
mov
repz
jnp
outsl
ss
push
xor
dec
xchg
push
fisubs
xor
push
inc
ja
mov
push
cs
xor
inc
out
imul
pop
jnp
clc
rcrl
dec
push
fs
cmpsl
sub
sub
outsb
mov
cs
adc
loopne
mov
xor
iret
loop
out
mov
lcall
dec
pop
ja
out
loopne
cmp
je
jae
push
es
mov
jne
inc
push
xchg
cmp
sbb
ds
js
cmp
outsl
outsl
fs
xchg
outsl
and
es
cmp
and
cmpsb
inc
divb
xchg
dec
inc
mov
neg
jp
jbe
jns
fs
lcall
inc
dec
data16
inc
pop
je
xor
je
or
dec
pop
sub
xor
pop
scas
frstor
lret
insb
jb
or
out
mov
mov
jp
dec
je
js
out
mov
push
jb
daa
jbe
fisubrs
pop
arpl
inc
cmpsl
jb
pop
in
mov
xor
ds
je
cli
xchg
push
sbb
das
fdivp
jle
out
inc
add
jbe
dec
mov
dec
jp
cmp
jno
xchg
outsb
shrl
fisubrs
or
pop
mov
insl
mov
fisubl
aam
lcall
data16
jecxz
iret
jns
inc
push
inc
push
push
push
aas
xorl
jbe
xchg
dec
push
cmp
scas
sub
push
gs
cmp
dec
and
loop
fsubrl
inc
xchg
pop
shll
mov
popl
xor
sarb
inc
outsl
push
push
push
lock
push
mov
inc
jecxz
jne
loopne
mov
push
dec
jnp
jnp
pop
xor
jae
cmpsb
adc
in
push
faddp
arpl
inc
adcb
bound
xor
push
cli
add
inc
pop
bound
outsl
push
pop
idivl
data16
push
out
xor
add
fs
push
jecxz
jno
outsb
ss
cmp
ja
fisubrs
xor
xor
testl
xchg
jne
rcrb
push
aaa
push
push
dec
cmp
cmp
pop
fisubrs
pop
pop
mov
add
js
insl
pop
inc
sub
out
sarl
mov
jg
cmp
mov
addr16
outsl
jno
jle
push
pop
cmp
inc
mov
jl
das
out
imul
lret
imul
sarl
stos
jo
dec
mov
jbe
sysret
nopl
sbb
inc
rorb
inc
rorl
das
ja
jmp
cmpsb
dec
imul
mov
aaa
inc
dec
gs
pop
loop
out
loop
jnp
inc
mov
imulb
imul
push
push
pop
cmp
push
jbe
bound
push
fiaddl
movl
rcrl
xchg
sub
push
adc
push
jmp
xchg
aaa
xchg
push
xchg
jbe
js
pop
pop
jbe
xor
inc
push
sbb
dec
fidivrl
dec
xor
outsb
pop
jp
or
mov
pop
cmp
pop
jae
test
out
pop
dec
pop
pop
lock
add
outsb
addr16
js
mov
ret
push
repnz
je
push
cmc
push
push
jb
dec
jnp
fdivrp
xchg
push
cli
push
jg
mov
mov
insl
inc
mov
test
push
xor
data16
lcall
push
jns
outsb
jbe
ja
jp
xor
xchg
sub
pop
push
jbe
icebp
andb
cmpb
cmp
or
pop
dec
and
ja
push
mov
out
add
addr16
push
stos
push
ds
mov
gs
out
push
cmp
xor
fs
cmp
mov
adc
loopne
mov
lret
push
mov
rolb
aad
aaa
je
dec
loopne
add
scas
ja
insb
ds
cs
into
decb
push
outsl
cmpsl
out
or
out
push
mov
push
vmread
pop
push
or
aaa
or
adc
pop
mov
outsl
pop
xor
mov
push
ss
inc
outsl
push
xor
js
mov
dec
imul
pop
out
jp
fbstp
adc
xchg
cmpb
stos
gs
sub
jmp
subb
inc
outsb
jae
adc
or
or
jb
sbb
lods
jo
adc
dec
popf
inc
clc
jp
pop
pop
loop
xor
iret
sub
ja
jbe
mov
add
push
cmpsb
or
mov
out
adc
xlat
inc
mov
jae
xor
loopne
stos
cmpsl
dec
cs
lcall
mov
xorb
sub
push
xchg
js
push
mov
dec
add
orb
cmp
xor
jnp
in
dec
into
dec
add
cmp
lahf
cmpsl
imul
jbe
stos
fmull
adc
sub
jae
arpl
stos
lds
pop
negl
imul
jne
inc
cmp
pusha
mov
gs
push
iret
ret
imul
dec
push
aaa
cmp
addr16
sbb
jb
dec
jbe
mov
push
inc
pop
jecxz
bound
cmp
or
push
mov
dec
mov
mov
gs
jo
xor
dec
sahf
mov
adc
mov
jbe
inc
add
sti
popa
out
mov
push
aaa
mov
inc
or
out
sbb
push
mov
pop
lock
jno
pusha
test
push
jo,pn
lock
lret
aad
aas
jnp
sahf
je
push
ss
mov
bnd
call
dec
cmpsb
jecxz
push
ja
ret
sbb
pop
data16
lahf
pop
mov
sbb
imul
out
jge
addr16
pop
sub
pop
mov
sar
sbb
arpl
arpl
jns
cmp
push
push
inc
cmp
sbb
cmpsb
xchg
inc
cs
pop
cmp
and
push
jne
inc
rcrb
loop
add
mov
addr16
push
push
es
inc
outsb
popa
xor
mov
jmp
and
push
jmp
arpl
xlat
inc
xchg
pop
loopne
lret
push
mov
fidivl
jecxz
cs
ja
into
xor
mov
xchg
dec
scas
or
sbb
xlat
mov
into
das
pop
inc
sub
popfw
into
mov
mov
jno
jno
xlat
imul
inc
das
sbb
pcmpeqb
mov
inc
js
xor
mov
jne
imul
jno
jnp
lret
mov
lods
jae
stos
inc
or
push
inc
or
push
das
sub
jb
sbb
and
je
ret
pop
push
jns
push
jae
mov
mov
jns
xor
js
stos
push
pop
dec
push
ficomps
das
cmp
orb
mov
xchg
jg
push
sbb
jmp
adc
dec
cmpsl
aaa
ss
cld
js
push
subl
xor
test
shll
jg
mov
negl
jbe
push
xor
mov
inc
outsl
mov
sbb
jae
ja
cmp
outsl
sub
cs
mov
incl
push
cmpsl
inc
xchg
or
mov
cmp
pop
jecxz
orl
add
jno
pop
mov
sbb
xor
push
pop
push
loope
xlat
pop
arpl
popa
outsl
mov
adc
inc
imul
data16
stos
imulw
popa
inc
js
mov
cmp
push
xor
gs
fs
cs
pop
jmp
es
addr16
ret
out
dec
push
mov
fisubl
push
jp
lret
pop
roll
ds
push
sbb
je
popa
out
clc
aad
out
xor
inc
ret
jp
xor
pop
mov
dec
inc
or
pop
jecxz
and
arpl
mov
jno
adc
xor
jl
js
stos
mov
fmull
dec
jo
jl
or
jecxz
dec
sarb
dec
push
cmp
push
cmp
sbb
push
jo
cs
sahf
mov
stos
push
sbb
dec
arpl
mov
pop
fs
jbe
fistpll
push
sarb
rcrb
dec
dec
jb
inc
cmp
pop
mov
ss
scas
addr16
test
lcall
push
inc
push
pop
inc
lcall
repz
shrb
jno
push
sti
jle
xor
jnp
cli
inc
jecxz
es
and
sar
push
jns
push
push
repnz
dec
lret
dec
or
jb
jno
sahf
jo
mov
gs
inc
dec
or
sti
cmp
adc
popl
outsb
xor
cmp
dec
idivl
push
add
mov
arpl
es
push
pop
popa
lock
pop
out
rcrb
dec
pop
push
repz
inc
inc
fcmovb
jnp
mov
push
cmpsb
push
dec
cmp
icebp
mov
addr16
popa
test
sub
js
xor
mov
inc
xchg
push
jle
lcall
xchg
dec
dec
das
js
mov
push
clc
rorb
scas
jo
jne
lds
imul
xor
jns
sub
mov
push
arpl
das
es
jo
icebp
loopne
popa
xchg
push
dec
lcall
mov
adc
mov
cmp
mov
aam
or
jns
mov
stos
imul
andb
fs
push
mov
and
repnz
scas
les
mov
inc
dec
repz
jnp
inc
push
dec
rorl
bound
inc
mov
bound
push
push
cmp
jecxz
pop
pop
mov
jl
fdivl
push
cmp
sbb
sti
jp
fildll
mov
bound
movb
test
jp
pop
xor
jne
sbb
xor
scas
xor
mov
dec
mov
push
mov
aas
jns
push
out
jmp
dec
adc
jecxz
pop
xchg
scas
xor
inc
cs
push
dec
pop
imul
imul
xor
sub
sti
push
lods
lock
pop
or
mov
pop
iret
inc
ljmp
push
out
dec
xchg
push
cmp
pop
loopne
aam
push
inc
jo
ret
sbb
daa
adc
jnp
ds
xor
jae
dec
mov
push
sahf
fistpl
xor
dec
pop
mov
xor
push
push
jecxz
mov
movb
mov
fiaddl
ja
stos
ret
and
pop
inc
std
pop
notb
testl
aaa
pushf
cmc
mov
jmp
js
addr16
sbb
arpl
imul
hlt
xchg
inc
iret
lcall
push
push
mov
arpl
movsl
inc
pop
push
aas
je
arpl
cmpsl
jbe
pop
mov
add
cmp
push
mov
cmp
xlat
ljmp
jo
push
pop
jp,pn
push
mov
fs
out
arpl
xchg
xchg
arpl
push
les
sbb
addl
mov
dec
jbe
imull
jb
inc
aaa
mov
fildl
dec
add
insl
xor
or
dec
insl
sti
out
push
push
jl,pt
pop
stos
ljmp
in
xchg
sbb
ja
xlat
cmp
add
arpl
rolb
clc
cmp
repnz
call
xor
push
packsswb
jnp
pop
addps
repz
movl
push
jbe
ret
repnz
ljmp
mov
scas
inc
movzwl
aaa
push
jg
fidivs
pop
and
shlb
cmc
fiadds
aas
dec
dec
cmpsb
ljmp
cmp
filds
pop
jmp
and
insb
sbb
inc
cmp
sub
ret
out
push
and
add
or
arpl
ret
push
je
pop
insb
sub
dec
das
xor
push
sbb
jmp
incl
frstor
dec
jle
mov
negb
mov
inc
jecxz
dec
xor
inc
dec
lret
outsb
lret
dec
push
arpl
pop
negl
mov
out
xor
xchg
imul
dec
inc
shlb
test
bound
mov
xlat
mov
sarb
fisubs
loope
dec
xchg
push
dec
cs
inc
pop
mov
sub
into
cli
icebp
push
bnd
inc
mov
test
push
notb
sbb
jnp
xor
ret
cmp
mov
mov
mov
jnp
rcrb
add
idivb
hlt
test
xor
arpl
inc
cmp
dec
imul
mov
xor
stos
push
sub
lock
xor
jge
inc
add
das
loop
jo
sahf
idivl
insl
data16
cli
push
lcall
icebp
mov
xor
shl
lds
out
sub
daa
mov
cmp
xchg
push
sahf
outsb
push
pop
push
add
lahf
push
push
jbe
jae
orl
pushf
xor
jmp
lcall
cmp
push
pop
aaa
sbb
ficoml
ret
repz
jne
dec
imul
jns
cld
cmp
shrb
ja
cmp
push
pop
jp
pop
sbb
call
mov
sub
push
sub
pop
add
js
mov
sbb
insb
rcrl
cmp
popa
icebp
shlb
rcl
sbb
fbstp
jne
sbb
dec
stos
jae
or
pop
mov
hlt
cmc
jecxz
sub
push
jecxz
scas
jmp
sbb
push
mov
ret
xchg
into
ret
ficomps
add
repz
lods
sbb
push
inc
ret
testb
sbb
sahf
push
dec
push
rol
dec
inc
rcr
outsl
adc
jo,pt
cmp
inc
lcall
jp
popa
push
sbb
cmp
mov
xchg
movb
cmovns
xchg
fimuls
add
je,pt
sub
fs
js
xlat
add
ljmp
fsubp
add
push
mov
adc
ja
loope
stos
testl
rclb
sbb
inc
mov
mov
sub
ss
dec
js
or
and
push
jp
imul
cmp
inc
inc
idivl
jecxz
js
cmpsb
inc
jp
sti
icebp
push
push
inc
ja
xor
pand
pop
add
jecxz
sbb
in
sahf
clc
push
dec
out
and
mov
push
jp
sub
sbb
sub
gs
test
lret
push
cs
sbbl
inc
jmp
mov
ss
loopne
loope
xor
cmp
push
jp
pop
inc
loopne
daa
dec
mov
mov
out
inc
pop
pop
pop
outsb
push
outsb
jno
rorb
notb
dec
push
mov
loopne
addr16
adc
js
and
xchg
outsb
jge
jbe
mov
adc
jne
pop
mov
sahf
ss
sub
dec
imul
stos
xlat
mov
cmp
cmp
pop
mov
stos
push
dec
push
dec
lcall
daa
cmpsb
jae
jbe
std
pop
add
outsl
xor
or
ret
daa
mov
sti
inc
dec
add
xor
add
scas
mov
jb
xchg
loope
mov
adc
aaa
jmp
mov
mov
jge
test
push
je
fsubrl
push
push
inc
mov
push
fimull
mov
bound
test
fwait
xor
push
sub
pop
dec
aas
ds
xchg
jb
push
jle
ror
adc
pop
pop
ljmp
mov
xor
iret
jnp
push
dec
pop
and
or
mov
cmp
push
adc
jbe
xor
filds
js
rorb
loop
lret
jno,pn
add
jbe
jno
rorb
jg
xchg
push
idivl
dec
idivb
inc
cmp
loopne
jb
pop
lcall
outsb
dec
lret
dec
adcl
stc
loopne
sub
push
mov
jbe
mov
xor
mov
add
js
cmpsb
loop
inc
xor
call
mov
ds
outsl
pop
push
and
adc
test
jp
jo
xor
imul
jp
pop
lock
fldt
mov
dec
jae
aaa
jo
dec
shlb
push
mov
imul
js
mov
inc
xorb
ss
add
daa
pushf
add
inc
or
xor
mov
rdmsr
dec
clc
cmc
mov
mov
push
fwait
arpl
rolb
andl
pop
jo
pushf
negl
xor
aaa
ds
inc
cmp
dec
jb
inc
clc
jp
jnp
push
mov
sbb
push
jp
push
ja
les
clc
push
ds
or
mov
bound
inc
outsb
fiadds
test
lcall
and
push
bound
loope
sbb
jl
mov
and
add
pop
or
bound
popa
mov
cmp
ficoms
das
ss
hlt
push
jae
ljmp
iret
adc
pop
and
orl
stos
aaa
pop
push
or
cmp
rclb
pop
cmp
dec
push
mov
dec
mov
adcb
jecxz
dec
inc
jo
jmp
ss
sbb
ficomps
add
popa
fwait
ss
pop
rcl
jae
jns
loope
cmp
insb
add
sbb
dec
outsl
xor
sub
shl
or
jl
inc
aas
sbb
cmpsl
dec
sub
outsl
imul
inc
jne
dec
xchg
pop
loop
addr16
scas
movsl
lock
aaa
xor
dec
cli
shrb
jp
test
sub
je
push
test
dec
js
rorl
call
or
pushf
cmp
inc
mov
arpl
jp
andb
sub
outsl
sub
inc
pop
mov
xchg
jnp
sub
xor
xchg
dec
push
xchg
inc
out
loopne
pop
mov
lock
packssdw
push
popa
outsb
lahf
adcb
loope
xor
jne
stos
sti
adc
outsb
push
cmp
or
cmp
dec
mov
bound
dec
out
lods
jno
test
scas
dec
mov
arpl
push
lret
adc
ret
pop
or
mov
dec
dec
jecxz
cmc
inc
inc
xor
dec
fldt
xchg
cmp
pushl
pop
call
out
jecxz
push
call
imul
daa
loopne
jbe
xor
adc
pop
dec
xor
outsb
xchg
lods
pop
lods
sbbl
into
push
and
hlt
and
loopne
cmp
jae
dec
mov
jbe
imul
jo
loopne
and
dec
push
push
add
sbb
push
pop
ds
dec
mov
fidivs
jnp
aas
inc
xor
imul
imul
jnp
data16
ret
push
pop
data16
in
push
sub
inc
cmpb
out
fistpl
cmpsb
insl
loope
mov
adc
imul
out
dec
pop
jns
adc
cmp
scas
add
cmp
push
cmp
pop
shr
dec
push
inc
push
sahf
ds
call
pop
outsl
mov
andl
out
dec
push
scas
jp
inc
ljmp
push
sahf
hlt
rorb
testb
arpl
xchg
lret
fs
scas
xchg
jo
addb
push
pop
jge
mov
pop
repz
inc
ret
jns
pop
add
cmpsl
xchg
cmp
jmp
jg
pop
test
or
insl
mov
js
outsb
out
or
xchg
out
jne
shll
pop
call
xor
xor
dec
jo
dec
adc
ljmp
mov
jge
mov
dec
sub
rorl
call
mov
fldt
js
inc
pop
ss
inc
testl
push
xchg
jne
inc
fsubrl
cmp
loope
fisubrs
dec
pop
arpl
sbb
bound
pop
adc
aaa
xchg
push
pop
add
shlb
inc
pop
call
cmovns
push
mov
mov
test
out
outsb
fsubp
cld
ljmp
pop
lock
mov
lret
pop
outsb
push
mov
or
push
bound
lods
rclb
imul
dec
shll
cmp
mov
mov
sbb
jns
push
jmp
push
inc
cmpsb
xor
xor
dec
sbb
mov
dec
mov
add
hlt
sub
adc
out
lahf
popa
inc
test
mov
mov
ret
push
mov
dec
jp
loopne
inc
sbb
inc
push
mov
rclb
jbe
inc
bound
imul
jp
outsl
popf
jne
fs
push
push
addr16
jb
aaa
shll
dec
out
pop
js
jmp
jo
imul
mov
fisubrs
fs
aaa
pop
ss
inc
out
push
stos
pop
jmp
jb
jb
lock
xor
xchg
ret
mov
push
ret
mov
ss
xor
sbb
adc
push
ret
mov
scas
xchg
dec
aam
clc
mov
aaa
addr16
fcmovbe
xchg
pushf
mov
cmp
and
jge
mov
mov
ljmp
jecxz
xlat
out
and
es
adc
mov
ja
orb
mov
fidivrs
mov
xor
das
mov
das
pop
aas
cli
mov
or
or
inc
push
cmp
push
daa
outsb
sub
mov
push
lret
sbb
push
cmp
je
jae
jne
js
addr16
pop
rolb
push
loop
ljmp
xchg
xchg
mov
lahf
sub
push
les
es
dec
sahf
lock
adc
cli
cmp
adc
popa
loop
pop
scas
and
imul
mov
cmp
add
out
lret
push
aaa
mov
xchg
jp
idivl
inc
out
jmp
jno
inc
daa
jge
and
cmp
sbb
inc
sub
xor
adc
ljmp
mov
out
mov
dec
popf
cmc
push
rolb
or
inc
cmp
push
push
ret
jle
lods
icebp
bound
sahf
add
loopne
inc
jmp
xor
cmp
bound
mov
or
shll
inc
andl
mov
add
push
fimuls
add
jns
inc
loopne
mov
stos
cmp
rcl
pop
xchg
sub
testl
rorl
inc
out
dec
sub
ret
fcmovb
sti
xor
jle
dec
jbe
arpl
das
lods
test
ss
sub
jae
pop
arpl
daa
rcll
add
ret
xor
inc
out
mov
jne
and
xchg
inc
push
lcall
mov
dec
arpl
scas
in
push
mov
mov
fs
cli
call
xchg
dec
ret
int3
call
adc
test
cmp
inc
das
push
imul
pop
loopne
jle
jmp
fldt
inc
stos
jnp
jno
imul
inc
push
xlat
or
pop
repz
push
dec
sti
dec
popl
jg
dec
push
pop
loop
imul
sub
loope
jae
jnp
inc
push
dec
das
cli
jae
addr16
push
dec
imul
testl
add
or
das
xchg
mov
repnz
xor
dec
das
jns
inc
cmp
adc
jo
xchg
push
jle
and
mov
sub
jbe
jb
xorl
pop
xcrypt-ecb
cmpsl
push
jno
add
jb
inc
jl
scas
pop
repz
mov
inc
data16
cmpsb
dec
subl
pop
pop
lock
andl
mov
xchg
adc
mov
les
lcall
mov
lds
xchg
inc
test
ficompl
ja
inc
inc
pop
loope
loop
cmpsl
push
divl
jle
movb
xor
jp
inc
shll
adc
dec
ja
clc
add
inc
adc
mov
lcall
jg
mov
push
mov
mov
inc
pop
mov
push
jp
mov
jo
dec
js
xchg
inc
fs
mov
inc
and
xor
icebp
inc
push
sbb
inc
inc
mov
iret
pop
ret
sub
dec
aaa
sub
xor
sub
pop
or
fs
xor
lock
xchg
into
das
cmp
push
xchg
cli
inc
pop
mov
out
cmp
add
add
jo
das
das
push
cmp
push
inc
add
push
or
or
outsb
lahf
imul
dec
dec
js
cmpb
mov
inc
xlat
cmp
add
add
mov
js
ret
mov
rorb
push
and
test
mov
je
push
out
arpl
adc
aas
dec
mov
jle
push
test
imul
pop
inc
lods
mov
test
jno
xor
jp
dec
loop
pop
mov
jae
mov
push
push
push
addb
sti
dec
sbb
inc
jne
xchg
mov
jo
mov
sub
cmp
sbb
outsb
insb
xchg
jp
rorl
dec
aas
dec
fcomi
add
mov
push
fimuls
popl
and
xor
outsb
hlt
shlb
inc
filds
jp
inc
mov
ret
imul
scas
xchg
ret
or
adc
pop
ljmp
jo
incb
push
push
repz
clc
cmc
push
adc
xor
pop
daa
mov
cmp
add
dec
cmp
push
mov
jb
cli
insb
je
inc
mov
dec
push
jb
rcrl
js
dec
jbe
ds
sub
push
filds
dec
call
inc
ljmp
inc
jne
sahf
cmp
jne
pop
dec
pop
jecxz
sub
fiadds
jae
fimuls
xor
rcrb
dec
out
push
push
rolb
cs
subl
push
cs
and
out
imul
adc
addr16
push
mov
dec
cmc
jb
and
push
out
add
ret
lea
sbb
lret
popa
data16
js
ret
popa
sub
pop
xchg
dec
jno
jle
cmp
jo
daa
fisubs
push
sub
or
pop
fidivrs
les
xor
ret
push
repz
mov
jb
xchg
mov
dec
repnz
push
push
xor
pop
inc
adc
subb
stos
jp
frstor
scas
dec
dec
stos
cmpsb
dec
mov
cli
inc
inc
imul
dec
pop
add
js
add
mov
es
inc
js
jno
pop
jnp
jp
sub
orb
mov
iret
mov
cmp
inc
popa
andps
mov
push
xchg
mov
dec
xchg
jns,pt
loope
lcall
mov
inc
push
xor
stos
mov
sub
pop
iret
je
push
or
sti
xor
jne
inc
cmpsl
outsb
mov
lods
test
lcall
add
jo
jp
jle
push
push
xchg
out
stos
inc
dec
loope
aaa
cmpsb
dec
push
popa
sbb
into
mov
test
inc
ret
loope
jnp
jbe
cmp
mov
xchg
push
cmp
setbe
dec
sbb
mov
mov
pop
ret
add
push
adc
pusha
or
insl
scas
stos
femms
mov
pop
xor
push
imul
dec
lret
out
je
ret
daa
dec
arpl
loopne
js
jb
out
ljmp
roll
enter
push
jecxz
xor
xchg
ret
sbb
or
aaa
xor
incb
das
stos
shll
je
outsb
mov
pop
dec
into
orb
push
mov
or
out
xor
stos
cmpl
sub
scas
lret
dec
iret
or
arpl
jmp
imul
dec
xor
aaa
testb
data16
mov
mov
addr16
mov
fisubrs
negb
or
iret
scas
jne
dec
jecxz
inc
loop
fists
sbb
mov
dec
or
gs
aam
movb
xchg
add
data16
cmp
push
call
ret
xlat
out
and
sbb
popa
mov
xchg
inc
jl
pop
mov
push
sbb
gs
sub
adc
cmpsl
push
dec
ljmp
add
or
xchg
aam
adc
push
push
inc
hlt
mov
pop
lret
lea
das
cmp
fidivrs
rorb
aam
data16
xor
push
push
addr16
sbb
lock
ret
addl
cmp
dec
lods
mov
xor
test
lds
insl
inc
push
sarb
addr16
gs
jl
cmpsb
xor
daa
jne
xor
push
das
xor
jbe
ja
insb
das
int3
dec
hlt
and
addr16
jo
pop
sub
outsl
inc
dec
xchg
ret
add
stos
scas
jmp
inc
cmp
cmp
mov
iret
pop
push
sub
inc
setge
subb
lret
je
pop
lret
mov
pop
inc
test
testl
mov
outsl
jno
sbb
loope
or
inc
pop
lods
adcb
jecxz
mov
roll
imul
ja
mov
scas
push
dec
pop
pop
push
inc
pusha
movsb
into
push
repnz
and
pop
outsb
repnz
dec
inc
xchg
inc
inc
test
es
adc
sbb
push
outsl
data16
cmp
aaa
imul
jmp
js
mov
jl
mov
xor
pop
pop
and
lret
out
out
cmpsl
mov
pop
stos
aam
filds
dec
imul
cmp
xchg
push
fisubrs
pop
xor
es
outsb
push
sbb
mov
imul
pop
test
fsubrl
xor
or
bound
icebp
cli
xchg
ljmp
ss
stos
cmpsb
xor
inc
setge
xor
out
or
ficoms
and
jmp
inc
out
mov
addr16
adc
xchg
inc
sub
xor
cli
inc
push
xor
ds
mulb
cmpxchg
dec
lahf
pop
add
jp
pop
pop
outsl
and
andl
cmc
arpl
jae
sarl
icebp
add
jo
imul
mov
pop
jne
inc
mov
stc
mov
insb
cs
sbb
dec
ret
rol
ret
cmpsb
pop
mov
or
pop
cmp
bound
aam
inc
dec
add
add
mov
js
jb
loopnew
scas
xchg
dec
jmp
push
ljmp
cmpsl
call
aaa
xor
bound
je
cmp
roll
push
adc
xlat
arpl
pop
push
aam
sbbb
gs
dec
cmp
jmp
js
fidivrs
inc
loope
mov
cmp
out
sahf
call
jmp
pop
pop
loopne
sub
dec
push
das
jns
rcr
pop
push
cli
inc
das
jge
mov
iret
jb
ret
les
push
push
jp
roll
lods
hlt
ljmp
jns
add
pop
cs
xchg
mov
xor
roll
js
jecxz
mov
pop
out
inc
fistl
pop
lret
or
xor
add
mov
pop
push
pop
das
stos
push
cmp
ret
fs
mov
push
xchg
inc
cmpsl
out
cmp
fs
jbe
jae
shrb
push
ljmp
xor
or
xor
or
outsb
fwait
hlt
add
pop
push
dec
add
dec
xor
daa
ret
hlt
sbb
shl
dec
outsl
push
shlb
jne
cmpsl
or
out
push
mov
fidivrs
dec
mov
jp
cmp
aam
sub
push
mov
dec
pop
and
jae
lret
cmp
and
sbb
push
nop
or
fimull
push
lock
imul
sti
repnz
jg
push
push
mov
inc
es
jecxz
or
pop
xchg
dec
jecxz
jne
imul
cmp
inc
xlat
adc
sbb
mov
pop
pusha
addl
addr16
mov
sub
ret
out
xchg
add
ds
arpl
mov
jg
add
sbb
push
punpckhbw
ss
pop
js
loopne
mov
loopne
pop
jb
scas
loope
adc
cmp
or
xchg
cmp
cmpsl
inc
and
jg
cmpsl
das
imul
xchg
dec
pop
pop
mov
pop
das
ds
mov
gs
sbb
popa
lods
and
aaa
dec
fimull
movsl
dec
dec
jne
push
push
fistl
jl
push
push
lcall
pop
jo
pop
cmp
inc
das
pop
sbb
lahf
inc
outsl
insb
xlat
add
push
lret
dec
rclb
iret
xor
xchg
pop
loope
xchg
repnz
dec
mov
push
sub
push
push
fnstcw
test
sub
xchg
daa
into
out
dec
or
testl
divl
add
sbb
mov
lock
jp
inc
sub
ret
movl
mov
add
inc
stos
jb
add
popf
xlat
or
and
pop
push
testl
scas
inc
mov
ficoml
mov
dec
xchg
push
rcl
daa
mov
push
dec
addr16
test
cmp
mov
mov
lea
cmp
outsl
jae
push
cmp
loop
inc
aam
push
xor
pop
out
imul
mov
outsl
aad
or
fistps
mov
rolb
bound
mov
cmp
adc
and
jo
or
ret
popa
adcb
nop
pop
push
dec
push
lcall
mov
push
jmp
dec
sub
cmp
jmp
mov
out
xchg
push
cmc
inc
jnp
xor
jb
push
inc
test
je
cmpsb
out
lea
sub
cs
sub
mov
jno
mov
pop
ja
cli
and
pushf
or
sbb
dec
sbb
nopl
push
test
shlb
add
mov
pop
pop
inc
sub
cmp
xchg
mov
push
or
or
push
pop
inc
jno
cmp
pop
adc
xor
add
es
bound
mov
push
add
add
outsb
orl
adc
cmpsl
inc
pop
xor
popa
push
cmp
daa
xor
fbld
andb
lock
cmpsb
jp
xor
cli
and
out
call
push
fbld
adcb
push
pushf
jno
cs
pop
inc
jmp
mov
push
pop
sub
push
mov
unpcklps
inc
arpl
jp
pop
ss
xor
jae
sub
xchg
scas
lea
add
imul
addr16
leave
or
aaa
notl
jl
loope
ds
sti
push
dec
rolb
fbld
or
adcb
cmc
sub
push
lret
mov
out
adc
orb
sub
test
xchg
push
dec
inc
sub
and
cmp
pop
xchg
test
jbe
push
inc
loop
pop
jb
sbb
test
jmp
addr16
xor
or
sbb
push
xor
inc
das
dec
push
push
pop
rcrl
cmp
lcall
mov
pop
dec
pop
loopne
xor
xor
sahf
or
pop
jns
xor
mov
imul
dec
add
pop
sbb
or
inc
arpl
jg
sub
add
test
jle
iret
sahf
ljmp
jp
jns
iret
adc
sbb
mov
adc
xor
outsb
or
xchg
imulb
cmpsb
dec
add
lods
arpl
mov
or
out
xchg
mov
pop
pop
gs
addr16
sub
pop
inc
jp
push
imul
xor
inc
and
shll
das
jns
mov
hlt
add
ljmp
mov
das
das
xor
jae
aas
pop
sub
push
xor
mov
cmp
pop
arpl
xchg
test
lret
dec
or
js
push
pop
push
testl
imul
icebp
mov
adcb
xor
push
xor
aad
roll
add
xchg
imul
lock
cmp
jmp
adc
and
pop
call
adc
lods
icebp
imul
lods
xchg
adc
stos
push
push
inc
push
push
push
ret
xor
push
insb
xchg
imul
outsl
jl
or
js
inc
push
and
sbb
jmp
lcall
cli
inc
jge
xor
push
iret
sub
or
cmovg
push
jb
xor
pcmpgtd
inc
jg
pop
dec
lcall
lsl
jae
jmp
and
mov
pop
mov
push
and
jmp
adc
test
lea
dec
mov
sbb
xchg
sarb
inc
outsl
jp
sub
sub
bound
add
rolb
sub
push
jnp
lret
dec
loope
inc
inc
push
push
mov
jbe
lcall
sub
iret
lock
mov
jp
add
aam
js
repnz
insl
cmpsb
mov
push
clc
adc
loopne
add
out
jbe
sbb
sbb
je
data16
aad
divl
pop
js
and
addr16
push
push
add
push
mov
lcall
mov
push
cmp
cmc
and
incl
jne
jne,pn
add
pop
jmp
dec
inc
lods
mov
dec
mov
inc
jmp
push
jno
inc
testb
push
mov
sbb
mov
jb
xchg
dec
aas
ljmp
push
jg
xor
cmp
mov
dec
xlat
ss
rorl
xor
push
lock
mov
pop
sbb
pop
pop
in
and
cmpsl
adc
sbb
addr16
cmp
push
add
sbb
push
fs
pop
jp
ret
js
aaa
push
dec
pop
loopne
push
inc
sub
xchg
rolb
cmp
gs
popa
and
addr16
lgs
inc
pop
inc
and
dec
lods
loope
es
pop
dec
inc
or
ds
push
adc
xor
push
sahf
movsb
daa
mov
rclb
das
loope
scas
stos
test
xchg
stc
cmp
sub
outsl
pusha
push
cmpsb
inc
xchg
je
pop
iret
cli
sti
into
jp
sub
push
jo
push
dec
stos
add
and
repnz
or
xchg
push
add
arpl
dec
inc
into
xchg
loopne
sbb
add
mov
cmpsl
inc
cmpsb
push
jnp
inc
or
dec
jmp
mov
ja
push
push
jnp
inc
rclb
mov
outsb
jbe
xlat
pop
xor
cmp
inc
or
pop
addb
out
add
sbb
inc
jae
hlt
test
and
popa
pop
sbb
inc
pop
sahf
lcall
enter
aaa
out
xor
sbbb
aam
stos
jae
mov
je
xor
out
pusha
sbb
inc
outsb
push
pop
or
outsb
xor
sbb
pop
fidivrl
or
sbb
jb
jbe
je
ret
aaa
push
dec
inc
addr16
push
sbb
daa
icebp
xor
inc
jns
es
decl
lret
jmp
cmp
lahf
pop
lahf
pop
addr16
ret
jno
sbb
sub
dec
jl
inc
or
push
les
je
dec
jne
arpl
push
jo
dec
loope
push
js
cmp
cmpsb
mov
push
cmp
dec
or
orl
xor
cmp
mov
icebp
addl
jp
sarl
mov
test
iretw
das
push
cmp
outsl
jl
cli
repz
dec
dec
inc
pop
loopne
and
iret
mov
hlt
movsl
mov
push
xor
rcll
pop
adcb
cmp
jl
sub
xor
pop
push
xor
xor
mov
xlat
sbb
mov
jnp
scas
out
pop
jnp,pn
mov
out
inc
cmp
mov
add
outsl
call
sbb
sbb
les
mov
dec
fimull
das
inc
cmp
add
or
into
outsb
push
dec
popa
add
sbb
data16
push
sbb
cmp
jle
outsl
mov
jbe
xchg
push
repnz
repnz
inc
jnp
add
add
test
loop
outsb
jle
xchg
mov
pop
inc
push
addr16
dec
or
call
mov
pop
daa
pop
daa
xor
dec
inc
inc
pop
pop
rep
inc
pavgb
repz
cmpsb
arpl
js
or
push
mov
out
into
js
sbb
out
push
push
orl
mov
mov
push
lret
mov
push
mov
out
jp
and
jb
pop
das
mov
add
pop
pop
adc
addr16
push
pop
das
daa
dec
je
mov
arpl
loop
inc
mov
sub
jo
mov
cs
add
js
inc
lods
loop
lret
inc
outsb
jbe
jb
nop
mov
jne
and
popa
rcrl
pop
sbb
cmp
mov
scas
jns
lret
sahf
xor
sub
scas
push
inc
add
push
xchg
and
dec
push
cmpsl
ds
inc
jp
push
adc
shr
push
push
sub
dec
xlat
cs
mov
es
orl
push
pop
rcrb
xchg
bound
jp
lea
jle
cli
push
pop
scas
sbb
mov
xor
jle
add
out
jne
dec
movl
and
add
or
addr16
dec
and
jle
cmp
adc
push
les
jp
pop
jb
push
adc
or
cmp
sub
and
dec
imul
xlat
jp
andb
sti
dec
jecxz
enter
dec
xchg
and
cli
xlat
push
mov
dec
jp
or
test
dec
add
xor
inc
ret
add
dec
iret
rcll
jo
sahf
cmp
test
mov
ret
add
fwait
jbe
fists
sbb
or
sub
loop
out
inc
jge
mov
and
xchg
pop
call
hlt
add
jo
push
ret
inc
stc
aam
addr16
das
pop
pop
loope
xor
mov
imul
mov
push
adc
call
sti
pop
ficomps
mov
or
cmp
icebp
xchg
mov
push
lock
fidivs
jae
mov
xchg
mov
adcl
xchg
push
pop
shlb
adc
cmc
push
push
ds
and
adc
push
cs
xor
sbb
clc
ds
outsl
dec
das
mov
push
clc
ret
testb
hlt
mov
mov
push
sbb
dec
jnp
pop
or
push
divl
outsl
jl
imul
shlb
jbe
add
out
cmp
jno
cmp
data16
idiv
arpl
repnz
shll
ficomps
stos
mov
xor
shll
add
push
sbb
push
sub
mov
repnz
mov
loopne
popa
dec
inc
mov
scas
aaa
pop
pop
arpl
xchg
stos
daa
jmp
roll
sti
pop
sbb
pop
cmpsl
push
add
test
mov
pusha
push
into
pop
and
sub
push
jne
pop
insb
jl
push
scas
es
mov
pop
subl
xchg
add
addl
das
mov
push
xor
mov
cli
cmp
jecxz
adc
jb
jecxz
sbb
xchg
data16
mov
loop
dec
ds
cmp
rcll
js
jno,pn
popf
cmp
repz
push
adc
aaa
jp
inc
rcl
push
inc
dec
xchg
sbb
add
add
push
push
push
dec
clc
push
scas
jns
imul
fisubs
push
jne
out
outsb
xor
mov
shll
jp
mov
loop
icebp
and
push
inc
xorb
stos
xchg
iret
cmp
ja
adc
clc
sarb
js
adc
jns
mov
filds
inc
lret
aad
lret
jne
aaa
dec
xchg
adc
data16
adc
dec
das
jl
pop
xchg
out
aaa
stos
push
push
or
dec
xchg
loop
dec
pop
loop
ret
rol
or
loopne
sub
aam
dec
jp
sub
test
lea
mov
xchg
inc
xor
inc
and
lcall
mul
and
je
gs
or
sahf
jae
inc
bswap
jecxz
imul
gs
cvtps2pi
arpl
call
add
sbb
xchg
outsl
imul
cs
mov
les
into
xchg
jmp
xor
imul
adc
add
adc
sbbl
addr16
pop
sbbb
adc
sub
pop
mov
inc
dec
jl
cmp
jne
sub
jbe
iret
inc
dec
lret
das
test
push
daa
rcl
push
mov
das
push
jmp
inc
xlat
or
jae
cmpsb
fimuls
mov
pop
loop
mov
repnz
push
orl
adc
pusha
mov
andb
dec
pushw
pop
call
addr16
inc
testl
push
outsl
pop
ret
sub
and
jne
xor
sbb
add
add
adc
addr16
mov
pop
stos
mov
pop
jae
cmp
jo
sub
stos
dec
or
aad
inc
add
pop
sbb
sub
sbb
jmp
scas
aaa
out
dec
pop
popf
push
jbe
das
ljmp
push
sub
xchg
add
out
lahf
andb
jp
ja
or
sbb
es
clc
js
shr
pop
inc
mov
jb
push
mov
jecxz
push
push
dec
dec
inc
test
pop
pop
aaa
cmpsb
mov
insb
cmp
ljmp
or
inc
outsl
jns
loop
loope
pop
and
aam
js
jne
pop
push
movsl
lock
pop
in
sbb
faddp
push
add
jb
adc
clc
das
pop
mov
add
inc
out
lahf
pop
imul
sub
into
xor
or
inc
pop
lahf
rclb
push
pop
aam
clc
mov
xchg
mov
add
ret
jmp
push
xlat
pusha
add
lea
inc
jae
mov
fwait
popa
xor
jnp
imul
sub
out
mov
les
lcall
mov
xchg
xor
mov
jo
dec
jmp
jno
cmp
xor
and
daa
jp
mov
movaps
loop
inc
arpl
xor
loop
pop
loopne
xor
pop
pop
sbb
xchg
mov
mov
and
add
push
bound
sub
pop
clc
add
sub
movsb
mov
movsl
push
out
cwtl
sbb
mov
cmp
ret
fildl
dec
sbb
jo
pop
or
jae
arpl
add
xchg
jle
cmpsb
outsl
jae
orl
lods
mov
mov
data16
xor
inc
scas
andb
sub
lods
cmc
xor
insl
xchg
setbe
xchg
mov
incl
loope
push
xor
dec
and
js
sub
ret
je
jl
jmp
imul
and
mov
mov
js
lods
mov
cmp
bound
outsb
inc
and
inc
loope
xchg
shll
addr16
push
outsl
std
lcall
add
dec
mov
jae
mov
sahf
hlt
xchg
sub
xor
adc
xor
mov
out
gs
mov
inc
jo,pt
sub
data16
outsl
mov
jecxz
jnp
outsl
or
lock
jecxz
or
jne
movsl
and
fwait
dec
pop
inc
sbb
sub
inc
call
dec
push
int3
xor
mov
adc
loop
cltd
xor
pop
fidivrs
aam
call
mov
daa
adc
add
hlt
test
xchg
mov
inc
call
dec
push
outsl
push
dec
lcall
cmp
mov
ja
stos
adc
gs
cmpb
cmp
dec
bound
push
dec
scas
das
rcll
punpckldq
inc
lret
pop
andl
hlt
loopne
push
pop
aaa
dec
js
dec
sahf
push
loop
mov
ljmp
and
iret
pop
sbb
jg
fidivrs
ljmp
jecxz
xchg
push
orl
rorb
iret
mov
xor
add
outsl
xor
mov
jo
or
lock
push
jae
adc
mov
lret
js
mov
mov
aad
call
ret
xor
mov
sbb
cmp
inc
dec
push
xlat
popw
outsw
in
add
ja
jp
xorb
cmc
jmp
add
nop
push
inc
mov
ds
dec
dec
inc
add
sub
jbe
cmp
pop
dec
push
pop
xor
test
js
dec
xlat
adc
cmpsl
daa
or
adc
shll
pop
and
scas
fdivrp
mov
dec
ja
sbb
aam
mov
test
xorl
addl
gs
and
dec
dec
negb
pop
or
aaa
aaa
jecxz
ljmp
loop
ret
xor
data16
movsl
loope
je
push
xor
cmp
jno
into
fildll
sbb
sub
jle
jmp
arpl
jnp
push
xchg
addb
add
jecxz
aad
dec
xor
jo
xchg
scas
ljmp
fwait
dec
sbb
hlt
sub
sub
jmp
xor
adc
mov
imulb
mov
mov
push
fistpll
push
xchg
jae
stos
mov
lahf
ret
mov
adcb
popl
jg
cs
movsl
sbb
push
dec
mov
dec
inc
insb
cs
stos
pop
fwait
inc
cmovge
sahf
scas
inc
test
arpl
push
push
sub
push
ret
mov
push
jb
inc
mov
dec
xchg
jae,pn
lock
into
test
inc
dec
push
push
push
push
and
into
neg
scas
cs
mov
dec
sub
add
mov
outsb
push
push
jno
add
jg
xor
movsb
xor
sbb
inc
dec
dec
and
push
add
push
jno
inc
mov
xor
divb
js
inc
das
dec
pop
call
jecxz
or
mov
mov
scas
das
das
xor
icebp
push
inc
je
add
imul
inc
and
sbb
inc
cli
push
inc
shrb
or
icebp
and
dec
imul
cmpsb
push
inc
cli
inc
jae
negl
cmp
movsl
dec
inc
dec
inc
or
jp
lea
inc
dec
xchg
movsl
or
dec
js
jbe
icebp
jno
cmp
and
sbb
scas
pushw
push
mulps
ljmp
or
or
es
add
arpl
repnz
inc
mov
inc
xchg
dec
jle
sbb
lcall
loop
cli
pop
mov
push
push
daa
pop
adc
stos
push
bound
pop
lret
mov
test
rep
insl
scas
xor
notl
into
cmp
mov
push
adc
sbb
aaa
mov
or
sahf
dec
ss
mov
stos
sub
imul
cmp
shll
das
sub
add
loop
sub
insb
cmp
jp
loope
enter
and
mov
aaa
imul
push
bound
cmpsl
lret
add
jmp
jae
das
jbe
sub
out
imul
dec
aas
aas
insb
out
pop
jbe
jecxz
sub
xchg
fiadds
orb
popa
mov
jecxz
push
js
inc
inc
xor
push
inc
adc
cmp
mov
shl
jae
jle
hlt
movsl
dec
daa
pop
fildll
sub
xor
push
pop
pop
ret
data16
cmpsb
push
xchg
jp
jbe
lret
icebp
dec
cmp
bound
out
popa
or
aam
clc
test
scas
outsl
mov
push
cli
jnp
mov
mov
xchg
pop
lea
sub
mov
push
add
cmp
mov
faddp
cmpsb
test
adc
addb
lock
bound
adc
dec
popf
imulb
das
push
add
mov
aam
shll
jmp
addl
cmovle
rcrb
cmp
dec
cli
add
rol
jnp
xorb
dec
mov
inc
arpl
xor
cmp
lea
mov
dec
jnp
andl
push
or
lock
das
mov
rol
jb
push
rolb
movsl
out
shll
out
cmc
xor
outsl
sbb
push
fwait
ljmp
je
pop
jp
add
out
xor
scas
xlat
ss
cmp
lods
mov
mov
xor
xchg
jb
jo
sbb
push
push
inc
mov
jae
and
xchg
inc
arpl
sub
sub
scas
adc
jbe
xchg
pop
add
xchg
daa
pushf
cmc
jmp
push
or
push
sub
cmp
push
dec
jae
push
jp
add
dec
aas
dec
stos
in
sbb
addl
pop
lods
push
mov
rorl
ds
mov
jb
loop
add
imul
cli
mov
aam
pop
imul
adc
cmp
ds
push
sbb
cmpsl
ja
cmp
test
je
cs
cmp
push
xor
mov
lcall
fildl
dec
mov
into
bound
push
xor
pop
cmp
dec
das
cmp
adc
pop
dec
fildll
cmp
xor
dec
mov
stos
mov
js
pop
negb
dec
pusha
mov
mov
adc
push
mov
bound
jno
xor
ljmp
dec
je
add
pop
orb
lods
cmc
arpl
repz
push
imul
icebp
jno
lcall
push
iret
insl
sbb
xchg
cmpsl
out
xor
inc
lret
inc
mov
inc
xlat
push
js
mov
jp
imul
mov
mov
cmp
scas
and
or
xorl
movsl
and
jp
inc
outsb
mov
pop
imul
push
popa
or
add
mov
push
xor
cmpsl
push
iret
sub
add
adcb
xchg
add
jne
mulb
inc
pop
mov
ja
inc
mov
mov
aam
js
outsl
clc
xor
adc
mov
mov
lcall
xor
xchg
jp
mov
hlt
and
jmp
inc
lahf
mov
aam
mov
arpl
hlt
inc
xor
xor
inc
call
mov
out
jecxz
mov
jmp
pusha
adc
push
mov
fs
jb
jmp
dec
pop
jae
dec
push
dec
sbbl
shll
inc
push
push
orb
out
aam
mov
mov
into
xor
xor
cs
push
mov
pop
testl
iret
lods
aad
js
inc
ja
fisttps
loop
inc
cmp
pop
hlt
jmp
pop
jns
inc
push
mov
xor
daa
ret
sarb
jns
ss
sarl
xor
pop
shlb
mov
pop
push
xor
aam
push
das
push
push
mov
xor
inc
test
movb
mov
out
dec
iret
ret
insb
mov
loopne
divl
sbb
mov
xchg
aad
push
pop
mov
ja
out
push
fists
sbb
sbb
push
pop
xlat
dec
xchg
push
js
jnp
decl
les
inc
sbb
addl
mov
mov
push
dec
xchg
outsb
xor
push
lcall
push
loope
dec
inc
into
decl
faddp
inc
arpl
jo
jbe
loop
cmpsl
mov
push
roll
push
mov
push
or
xor
xor
scas
or
imul
sub
es
stos
pop
jae
sub
xor
sub
imull
add
scas
lret
dec
stos
xor
or
inc
xchg
inc
sahf
adcb
xchg
mov
fisubl
inc
sub
sbb
rolb
jns
mov
pop
stos
inc
lds
and
mov
addl
fbstp
push
ja
xchg
shlb
js
sahf
lcall
loope
push
sub
popf
les
repnz
js
add
inc
xchg
pop
cwtl
sarl
jb
mov
mov
dec
addr16
jmp
mov
inc
subl
rcll
jmp
imul
jle
and
aaa
mov
inc
call
out
adc
push
mov
aad
pushf
aam
push
jmp
gs
xor
aam
pop
rcrl
dec
imul
jne
and
dec
bound
mov
pop
sub
push
jo
mov
pop
pop
push
mov
bound
mov
bound
cmp
movsb
sbb
rcrl
cli
jne
aaa
sub
jo
arpl
or
push
aas
dec
sbb
sbb
push
out
dec
cmc
xor
gs
scas
add
xlat
push
sar
dec
cmp
add
cmp
aaa
negl
or
cmp
sbb
mov
jae
out
aaa
mov
js
imul
shl
lret
into
outsb
jmp
loopne
pop
loopne
mov
shl
daa
adc
mov
cmp
mov
ljmp
jnp
sbb
add
lahf
add
mov
push
dec
lahf
xchg
js
add
outsl
mov
jl
mov
outsb
jnp
lock
rcrl
adc
testl
xorb
inc
out
dec
or
data16
cs
ret
pop
outsb
jns
push
ret
xor
pop
xlat
xor
dec
rcll
push
mov
mov
mov
jae
pop
push
rorl
bound
dec
xorl
inc
pop
cli
rorl
inc
addr16
iret
xorl
push
jle
or
lods
ss
outsl
icebp
sub
push
faddp
pop
mov
cmp
ss
jb
inc
xor
mov
aaa
xor
dec
cmp
bound
xchg
mov
push
cmp
mov
lret
jbe
andb
mov
pusha
and
jne
loope
popf
lock
sbb
or
dec
jle
loopne
sbb
lret
mov
dec
pop
add
jb
add
ret
popa
add
and
xchg
inc
divl
sahf
pop
loope
xor
ret
js
pop
das
js
mov
loop
sub
sbb
and
or
das
lea
outsb
bound
add
lea
or
pop
test
pop
inc
xor
daa
sbb
iret
cmp
testl
jb
das
ret
cs
pop
shlb
adc
fs
xchg
xor
cmp
pop
xchg
inc
pop
mov
sub
lahf
sbb
push
adc
mov
jae
mov
mov
sub
inc
rorl
cmp
scas
mov
mov
sub
xor
xchg
cmp
dec
das
sbb
aam
call
rcrl
shll
xlat
inc
xorps
dec
add
inc
fstpt
mov
js
xchg
stos
imul
daa
mov
mov
mov
inc
jg
dec
sbb
pop
or
lods
push
push
mov
sbb
loopne
inc
push
ss
adc
jp
ljmp
imul
cmp
mov
insb
arpl
xchg
or
gs
je
push
adc
daa
inc
add
mov
incb
mov
inc
jno
outsb
daa
pop
call
inc
fwait
jns
inc
or
aaa
rcrb
push
xchg
ret
fists
rcrb
xlat
das
mov
push
and
cmp
lock
addb
cli
sub
jmp
jno
shrb
cli
outsb
out
sub
hlt
stos
dec
ret
dec
mov
rclb
sub
cmp
shll
jb
pop
pop
loopne
cmpsb
pop
jb
mov
push
mov
test
shrb
dec
jbe
adc
add
add
out
jae
call
lahf
push
punpckldq
imul
xor
ret
call
iret
inc
outsl
sbb
mov
cmp
ja
push
xchg
push
js
arpl
mov
xchg
ljmp
inc
rorl
push
dec
ja
inc
sbb
test
xor
aam
lret
mov
cmp
sbb
in
jmp
aaa
outsl
sahf
aaa
sub
rcll
inc
push
xorb
and
sahf
scas
jle
outsl
push
roll
test
popa
mov
mov
iret
jae
jmp
lock
xor
lock
js
xchg
jo
cmp
pop
add
je
mov
add
inc
loopne
dec
xor
push
inc
cmp
hlt
jne
sahf
xor
popf
icebp
cmovs
aaa
sbb
push
ret
stos
pop
dec
push
xor
stos
xor
gs
or
inc
aas
xor
data16
ret
mov
dec
arpl
loope
iret
inc
xchg
or
dec
xor
xor
cmp
push
fiadds
inc
mov
sbb
pop
js
aaa
out
jecxz
imull
dec
mov
sbb
das
sbb
dec
adcb
stos
dec
outsl
mov
dec
push
lret
pop
push
add
sub
dec
and
xchg
dec
mov
or
push
stos
scas
rorb
sub
sub
xor
xor
and
inc
dec
fimuls
outsl
pop
jp
push
pop
rolb
js
xchg
orb
add
outsb
out
pusha
pop
or
inc
fisubrl
iret
ret
push
fiaddl
loope
inc
outsb
xchg
js
sbb
cmp
xor
inc
cli
fs
imul
push
scas
inc
das
scas
jae
sbb
mov
mov
dec
js
mov
or
loop
and
cmp
cltd
test
outsb
repz
test
fisttps
stos
ds
ret
negl
push
scas
aam
adc
addl
pop
xor
loop
cmp
lds
sub
jbe
adc
repnz
sbb
push
daa
insb
call
ret
add
jns
cmpb
inc
push
test
insl
dec
inc
xchg
dec
sub
arpl
mov
outsb
inc
xchg
push
cmp
cs
xor
ds
ret
inc
jnp
sbbb
subl
jmp
push
out
inc
inc
dec
xchg
or
lret
adc
push
orb
cmp
cs
movsb
xchg
jp
imul
lods
dec
push
dec
cmpsl
outsb
loop
add
adc
pop
dec
cmp
cli
jb
outsl
test
push
scas
inc
pop
loopne
mov
out
lea
cmp
dec
divl
pusha
mov
pop
fstpl
push
xchg
lock
stos
sub
call
jmp
ja
mov
jo
push
add
imul
lahf
imul
jae
and
call
jmp
pop
arpl
or
push
mov
js
insb
bound
mov
inc
jp
pop
dec
adc
movsb
and
and
bound
repz
jne
cmp
push
xchg
ss
rorb
mov
arpl
cmpsl
pop
das
adc
mov
cmc
add
inc
pusha
andl
out
jno
inc
dec
scas
mov
sahf
iret
into
daa
out
adc
imul
push
inc
push
pop
dec
sub
lcall
and
andl
leave
lea
inc
pop
dec
add
push
xor
inc
daa
push
out
pop
inc
js
aaa
daa
insb
fcmovnb
dec
into
clc
ret
xor
pop
add
out
cmc
jo
outsb
dec
mov
add
pop
jae
ret
je
test
add
dec
outsl
inc
test
je
movsb
or
add
cmp
mov
xorps
or
ds
es
add
cmp
or
loop
daa
push
jae
sahf
jno
xchg
pop
pop
ds
scas
data16
pop
push
xor
faddp
push
addl
stos
jo
or
cmpsb
out
pop
add
sbb
out
cli
hlt
jecxz
pushf
pop
rorb
popa
jo
xchg
sub
ret
mov
mov
push
addr16
xor
mov
dec
push
xchg
jle
sbb
pop
jne
test
shrl
pop
adc
mov
xor
addr16
scas
dec
inc
sub
js
pop
cmpb
sbb
xchg
push
outsl
push
sahf
popa
xorl
mov
into
push
xchg
inc
js
jecxz
shrb
lret
adc
xor
imul
stos
mov
and
mov
imul
jp
jo
mov
add
jne
lret
out
mov
arpl
mov
dec
stos
sub
andb
dec
je
enter
xchg
jp
jno
call
dec
daa
inc
mov
ja
sbb
shrb
lret
inc
aas
js
mov
push
adc
push
lock
jge
dec
stos
das
push
inc
adc
inc
sub
dec
mov
xlat
fistps
inc
pop
jecxz
mov
sub
xchg
shrb
inc
dec
sbb
rcll
push
aam
inc
mov
push
ret
push
jb
and
mov
inc
jp
lea
ret
and
xor
mul
lret
into
pop
push
mov
loopne
jno,pn
push
clc
add
jp
data16
rolb
es
and
or
and
xor
incb
imul
xchg
das
sub
push
cmp
sbb
outsl
mov
pop
and
inc
subl
xchg
sub
pusha
arpl
bound
mov
jns
pop
cld
push
out
pop
push
dec
or
xor
sbb
add
mov
ret
push
inc
mov
xor
dec
mov
das
dec
jns
dec
outsl
clc
shll
jle
mov
sarl
xchg
into
ja
cli
xor
mov
xor
push
ds
push
inc
test
bound
lock
es
xchg
mov
call
dec
push
cmp
inc
jl
je
sub
inc
sub
dec
mull
dec
xchg
cmp
xchg
push
jmp
lods
rcr
jo
pop
push
push
cmp
pop
stos
aaa
aas
pop
sub
dec
mov
mov
outsl
mov
push
xor
jae
repz
addr16
addl
jbe
cmp
dec
rclb
mov
jmp
inc
repnz
push
pop
bound
shlb
sbb
loop
lock
rclb
outsl
xchg
push
loop
xchg
scas
pop
sub
dec
cmp
cmp
loopne
and
xchg
push
lahf
dec
xchg
cmc
dec
loopne
xchg
mulb
push
ja
dec
or
mov
jle
cmp
inc
orb
enter
sub
lahf
lods
push
pop
jae
and
or
stos
dec
push
push
pop
arpl
rcr
jo,pt
ja
pop
iret
add
loop
sbb
xchg
pop
sub
jae
add
aam
je
outsl
mov
js
jo
scas
jg
pop
cmpl
cmp
xchg
repnz
dec
ret
jnp
dec
mov
js
inc
idiv
pop
jp
loopne
scas
jp
insl
sbb
or
adc
cmp
jns,pt
fisubrl
test
sahf
xor
xchg
sub
xchg
cmp
jo
and
xchg
push
dec
jp
xor
xchg
push
inc
icebp
adc
cmp
ret
jne
mov
push
clc
jle
adc
in
rcl
mov
mov
xor
dec
pushf
jno
ret
mov
cmp
mov
and
or
fisubl
call
inc
stos
jae
pop
inc
call
push
aas
hlt
add
cmp
sbb
adc
mov
gs
iret
sbb
push
jg
loop
rcrb
or
sbb
push
fimuls
jbe
clc
ss
mov
pop
fisttpl
incl
das
xchg
xchg
ja
mov
bound
mov
pop
xor
arpl
cmp
clc
push
outsl
imul
push
ss
aas
inc
jo
mov
dec
push
sbb
xchg
ret
bnd
mov
cmc
push
xorb
jo
jmp
out
cs
jmp
push
pop
push
xchg
pop
into
test
push
pop
cmp
push
imul
lret
outsb
daa
inc
jnp
ud2
pusha
and
add
sub
xor
dec
sub
cli
popa
dec
xor
fcomps
scas
mov
and
xor
adc
dec
stos
ss
and
das
pop
pop
jo
js
sbb
clc
imul
inc
es
shrl
insl
cmp
jle
jnp
lahf
mov
mov
das
loop
push
dec
ja
incb
push
ret
pop
outsl
jbe
call
out
jecxz
clc
mov
ljmp
dec
pusha
mov
inc
sbb
popa
fbld
and
push
addr16
pushf
div
cmpsb
popa
xchg
out
pop
addr16
das
sbb
pop
call
dec
sub
push
cmp
push
inc
stos
xor
adc
xlat
push
and
push
and
adc
push
out
outsb
negl
and
sub
mov
xchg
jmp
push
pop
andb
arpl
jae
je
push
jbe
add
insl
dec
insl
xchg
mov
push
imul
inc
divb
jo
loopne
mov
addr16
pop
jmp
mov
js
pop
jp
lods
mov
sbbb
dec
or
ss
sbb
inc
xor
inc
jae
clc
rolb
inc
daa
push
arpl
sub
lcall
mov
dec
jge
add
dec
ja
dec
js
dec
gs
test
jae
push
push
das
mov
aaa
pop
stos
mov
loope
ja
outsb
push
xor
jnp
out
cs
shr
or
lahf
jp
jnp
inc
push
rclb
or
sti
ljmp
inc
inc
je
push
lret
push
mov
pop
out
testl
push
mov
push
cli
push
push
lret
push
or
sahf
jp
and
cmp
arpl
pop
scas
mov
push
loop
push
pop
add
or
stos
dec
pop
jbe
aas
mov
mov
sub
push
loop
add
sahf
dec
jg
sub
das
jae
xlat
xchg
mov
jo
gs
xchg
out
icebp
movsb
xchg
js
push
loop
cmc
insb
pop
sbb
jecxz
add
pop
jle
push
inc
or
icebp
dec
push
mull
cmp
rolb
inc
push
jne
data16
cwtl
mov
dec
cmpsb
je
dec
jb
mov
movsl
leave
ret
push
dec
xor
ficoms
jnp
add
cmp
cli
and
push
cmp
arpl
bound
movsb
cmpsl
mov
lcall
addr16
das
xor
or
mov
cli
aam
pop
jne
popa
sti
pushf
data16
cli
push
push
dec
sbb
outsb
inc
push
and
arpl
jae
xchg
js
dec
or
subb
xor
shlb
add
cmp
test
mov
inc
push
js
or
outsb
mov
xor
iret
scas
loop
add
pop
xor
sti
cmp
cwtl
add
dec
push
iret
xor
and
jae
popa
es
daa
insb
pop
inc
aam
cmp
fwait
dec
inc
test
pop
jp
mov
lret
pop
push
and
add
jp
imul
cmp
mov
cs
dec
fwait
clc
cwtl
add
arpl
aam
xchg
fidivs
push
dec
push
outsb
mov
jp
xchg
ret
jb
fadd
cmpsl
mov
ret
push
jb
push
add
xor
mov
pop
insl
mov
and
xchg
arpl
adc
pop
dec
ds
jmp
push
lahf
outsb
or
test
incb
xor
sti
adc
push
xchg
xchg
mov
jp
pop
and
ffreep
jb
lret
cltd
mov
scas
xlat
cmp
push
xchg
hlt
dec
cmp
ret
lock
xor
outsb
sbb
aas
pop
lret
inc
inc
insb
imul
push
pop
pop
out
addr16
xchg
call
jecxz
lock
jnp
jp
dec
inc
jns
subb
inc
rorb
rclb
ljmp
jbe
xor
lock
cmp
mov
push
xor
outsl
xchg
scas
ds
push
cs
sbb
aam
pcmpgtb
mov
fistpl
jle
pop
adc
loop
push
cmp
imul
sub
imul
jl
dec
or
ret
adc
or
sti
lcall
into
pop
mov
push
sbb
dec
inc
mov
xor
dec
repz
es
bound
fbstp
je
and
jo
sbb
inc
sub
pop
sbb
push
mov
loopne
mov
sub
dec
notl
xor
into
ljmp
rcrb
jb
xchg
push
les
idiv
jle
scas
adc
mov
fs
pop
xchg
pushf
hlt
loope
jae
lret
pusha
lods
push
xchg
xor
call
mov
loopne
movsb
ja
dec
mov
inc
mov
cmp
mov
pop
jno,pt
add
cmp
shl
add
js
fs
mov
or
inc
shll
clc
ds
xchg
je
mov
xor
pusha
xchg
push
out
xchg
je
sar
jp
and
add
hlt
scas
cmpl
or
jg
push
icebp
les
outsb
jns
lcall
das
mov
jp
push
ret
jecxz
sub
ds
mov
mov
push
push
cmp
out
rolb
pop
push
adc
js
mov
aad
pop
jnp
imul
mov
push
push
jbe
and
add
jb
lret
push
xchg
push
js
or
mov
and
inc
mov
jmp
inc
js
adc
mov
mov
mov
add
inc
sbb
andb
pop
inc
cmovae
aad
out
dec
shll
jle
outsl
mov
push
addb
push
js
inc
dec
inc
addr16
xor
jecxz
cmpsl
push
les
mov
mov
rclb
adc
loop
outsl
xchg
es
cmp
cs
push
std
cmp
jb
es
sub
sbb
dec
cmpsl
loop
ret
adc
repz
dec
inc
add
sbb
pop
lods
repz
inc
mov
into
loop
stos
stos
xlat
push
sub
repz
dec
sub
push
sahf
push
fimuls
jns
push
js
and
insl
add
sbb
add
loopne
pop
jae
jo
xchg
push
xor
and
inc
push
mov
xor
pop
out
xlat
loop
cli
lret
dec
dec
xor
add
mov
add
mov
xchg
adc
das
mov
dec
iret
mov
adc
outsb
arpl
test
gs
push
scas
inc
lret
inc
sub
lea
cmpsl
bound
inc
xor
jmp
inc
adc
dec
js
ror
jmp
addr16
sbb
scas
xchg
jle
dec
call
popa
or
arpl
pop
ja
jo
sbbl
outsl
fwait
xchg
mov
daa
imul
mov
cmc
jle
shlb
outsb
pop
inc
cmp
and
sbb
push
jmp
mov
cmpsb
fiadds
outsl
scas
adc
popa
cmpsl
arpl
test
test
call
push
inc
or
mov
inc
pop
jg
push
or
xchg
sub
push
lods
xor
dec
jl
add
sub
mov
call
js
aad
push
lcall
dec
out
aaa
push
and
xor
pop
pop
pop
js
insb
mov
xchg
xchg
add
subb
jae
mov
pop
add
loope
push
cmp
add
sub
push
and
cmpsb
pcmpgtw
inc
push
or
inc
inc
aaa
inc
xor
clc
jno
add
outsb
dec
sbb
ja
or
shll
loop
jp
idivl
into
jecxz
xchg
inc
inc
push
push
stos
dec
pusha
mov
mov
das
scas
out
jo
outsl
xlat
aam
or
bound
jne
fs
mov
jae
call
jae
leave
pop
scas
ret
ds
out
dec
jg
test
jnp
sahf
orb
lret
stos
dec
push
scas
sbb
jae
add
mov
cmp
or
mov
loope
jle
mov
inc
jg
cmpsl
addr16
pop
mov
mov
scas
jp
adc
jo
jns
xor
cmpb
vmwrite
loopne
sti
sub
loopne
inc
sub
jle
mov
xlat
cs
sub
out
inc
mov
jecxz
push
mov
daa
xor
loope
addr16
xor
ja
cmp
je
pop
daa
cmp
fldl
and
inc
xor
incb
ljmp
mov
sbb
out
xchg
ret
push
dec
pop
jo
mov
push
arpl
inc
ljmp
jle
jne
and
xchg
inc
or
cmp
cmpsb
dec
outsl
sbb
or
xchg
mov
icebp
or
inc
imul
push
mov
vmread
jle
out
xor
inc
loop
inc
inc
ja
sbb
outsb
mov
lds
jo
mov
adc
xor
imul
jecxz
inc
outsb
fwait
bound
or
scas
and
out
ljmp
mov
push
xor
stos
pop
aas
xor
sub
mov
cmp
xchg
inc
daa
stos
xchg
ret
push
xchg
jo
pop
sbb
dec
ss
loope
popl
cs
pushf
inc
or
pop
jnp
out
hlt
push
cmp
jns
xor
add
jo
js
pop
pop
imul
sub
repnz
mov
and
fbld
repnz
mov
adc
xor
dec
add
loop
ds
sub
push
jecxz
inc
xor
xor
bound
dec
xchg
inc
push
loope
cmp
mov
iret
ja
or
or
pop
jle
clc
and
add
and
jmp
jo
cmp
push
mov
pop
lahf
dec
scas
gs
or
xchg
lock
dec
fistpl
test
ljmp
aaa
xchg
jbe
pop
xor
mov
xchg
dec
push
mov
push
jp
sarb
ja
movlps
call
je
dec
mov
or
sbb
jge
jp
cmpsb
push
addr16
mov
pcmpeqd
shll
xor
dec
into
jp
add
mov
push
xlat
daa
pop
add
xchg
or
das
mov
aaa
dec
dec
jb
add
mov
pop
jmp
das
cmp
hlt
cmp
mov
les
mov
push
sbb
adc
pop
sbb
or
ja
sub
xchg
call
jae
fistps
adc
imull
mov
movsl
into
js
inc
mov
mov
stos
sbb
sbb
lock
dec
pop
out
or
loope
mov
outsl
ds
push
cmp
ljmp
repz
and
push
and
aaa
shrb
xor
mov
dec
loopne
adc
jp
faddp
cmpsl
and
aaa
outsl
pop
pop
vmread
inc
fimull
mov
jecxz
stos
or
enter
dec
xor
pop
addl
or
mov
jmp
into
push
jle
gs
lahf
dec
jg
adc
jno
fisubrl
arpl
add
cmp
dec
add
mov
fbstp
push
xlat
sub
sub
inc
dec
filds
mov
mul
jns
dec
mov
pop
stos
gs
push
xlat
add
lock
push
mov
mov
fwait
mov
mov
test
dec
das
xor
movsb
sbb
jmp
clc
lock
dec
pop
les
fisubrs
push
lock
imull
mov
in
xchg
inc
and
js
js
nop
rolb
cmp
ljmp
or
dec
js
fwait
inc
shlb
repz
jmp
add
jb
andb
fisttps
loope
pop
ljmp
pusha
pop
lret
ja
jb
push
cli
popa
lahf
inc
sbb
loopnew
outsl
sbb
push
outsl
jmp
fs
icebp
and
mov
xor
ret
divl
fimuls
xor
mov
rolb
in
das
jnp
imul
scas
dec
push
push
xor
xchg
ja
or
mov
dec
or
or
aas
adc
daa
enter
cmp
jo
scas
push
inc
test
out
xor
fwait
sub
or
lret
cmp
ljmp
ss
ja
sbbl
xchg
push
aaa
adc
push
ficomps
jp
loop
test
das
jp
and
cmp
outsb
push
lock
ja
mov
pop
js
jle
repz
xchg
cmc
lods
sub
cmp
ficoms
aaa
stos
inc
push
rclb
shrb
dec
push
mov
lret
sbb
fisubs
xor
push
xor
push
xor
pop
push
sbb
imulb
das
outsl
ss
inc
jp
push
scas
into
push
iret
push
cs
or
popa
scas
clc
gs
jne
or
push
inc
cmp
js
repz
push
cmpl
xchg
imull
imul
popf
hlt
mull
imul
ret
loop
decb
cmp
fldt
dec
cmp
dec
jbe
fimull
pop
push
stos
daa
je
jle
mov
test
jecxz
daa
dec
testl
jmp
cmc
dec
loopne
mov
imul
adc
inc
add
rolb
mov
xor
mov
adc
and
mov
ja
iret
dec
dec
pusha
es
das
sti
xor
xor
or
push
sbb
push
ds
dec
pop
das
arpl
adc
rorb
mulb
xchg
and
dec
test
mov
xchg
mov
pushl
gs
movsb
xchg
push
xlat
and
inc
or
outsl
cli
adc
outsl
cmp
cmp
jnp
sbb
and
mov
or
add
inc
xor
insb
mov
aas
stos
mov
push
sbb
outsb
sub
push
inc
cli
ss
inc
rolb
add
push
daa
aam
push
pop
addr16
xor
add
cmpb
pop
jns
mov
fists
arpl
xor
xchg
push
mov
xor
lahf
pop
dec
les
and
js
loopne
fists
ljmp
sbb
iret
js
mov
pop
inc
push
add
inc
inc
movsl
or
dec
pop
insb
add
cwtl
dec
pop
xor
push
ss
adc
out
cmp
insb
mov
ja
and
and
jbe
imul
rcrb
jmp
mov
inc
sbb
jo
pop
hlt
jecxz
add
test
sbb
xchg
xchg
popa
pop
jp
loopne
ficomps
jne
fidivs
xchg
scas
jo
or
sar
jb
js
adc
jo
jge
testl
mov
gs
sub
lds
mov
add
pop
jnp
dec
mov
mov
xchg
xor
add
sub
pusha
gs
mov
cvtps2pi
das
jae
push
iret
pop
inc
iret
pop
xchg
xor
fists
sbb
out
out
imul
mov
cli
arpl
cmpsb
dec
mov
jle
lret
pop
add
aam
xor
lcall
xor
insl
jae
mov
aaa
jmp
out
gs
add
mov
mov
xor
dec
lock
xchg
insl
dec
xor
imul
xchg
jne
sbb
es
fstpt
jno
mov
mov
lods
mov
jp
add
xchg
gs
adc
outsb
outsl
aad
and
sub
shll
pop
xor
daa
sub
cmp
jmp
outsb
scas
pop
push
jge
dec
cmovne
pop
add
mov
push
add
lcall
push
sti
push
mov
js
scas
outsl
dec
aas
dec
jg
outsl
pop
sbb
les
push
jb
jb
add
add
push
ljmp
pop
pop
cmp
popa
out
imul
data16
dec
jnp
adc
xchg
adc
ja
cmp
call
rclb
push
das
add
fwait
stos
mov
pop
loop
xlat
je
dec
add
push
je
aaa
arpl
stos
add
ljmp
daa
in
jo
aas
rclb
push
cmp
xchg
mov
xchg
repnz
fs
jp
dec
ss
test
sbb
jb
sub
pop
aaa
aam
sub
bound
inc
pop
cli
sti
dec
xchg
xor
popa
xchg
insb
sub
adc
push
addr16
loop
xor
jecxz
sbb
sbb
mov
xchg
push
sbb
inc
or
inc
popf
xchg
xor
inc
or
push
jo
enter
mov
xor
cmp
das
mov
bound
xlat
or
sub
cmc
aad
lahf
push
jns
arpl
xchg
xchg
addr16
mov
push
mov
into
mov
mov
pop
fsubp
mov
jae
rclb
inc
and
call
movsl
lock
pop
inc
lret
xor
dec
je
ljmp
mov
xchg
ss
aam
sbb
pop
xor
xor
pop
cmp
xchg
lcall
jb
sub
mov
mov
cmp
mov
paddq
out
aad
aaa
inc
pop
push
scas
test
roll
mov
aam
mov
push
sbb
push
jmp
xchg
inc
pop
xor
sub
xor
jb
clc
mov
ljmp
daa
imul
pop
sub
or
sbb
cmpsl
or
sub
push
rclb
cmpsb
mov
dec
lea
ja
adc
daa
xchg
bound
adc
popa
repz
sub
jmp
jbe
pop
ret
jo
jle
daa
xor
shl
pop
mov
jbe
push
adc
mov
xchg
cli
cli
shrb
fs
inc
add
dec
loop
mov
jo
popa
cmp
ja
dec
push
call
xchg
gs
push
loope
pop
inc
add
scas
outsl
test
ret
and
addr16
push
mov
loop
outsb
shr
mov
clc
xor
jno
test
cmp
cs
aas
jno
loope
pop
cmp
jae
rolb
adc
addl
dec
mov
sbb
pop
es
push
push
cmp
jns
xchg
jecxz
or
jge
add
inc
fildll
sub
movsb
and
mov
push
shll
xchg
test
mov
adc
jecxz
shufps
imul
add
sbb
adc
fs
pop
adc
push
imul
push
lcall
into
dec
mov
jb
xor
pop
adc
jp
movb
xchg
push
ficomps
inc
pop
mov
and
mov
push
or
mov
jne
outsb
mov
sub
dec
lret
ja
xor
fdivrp
push
cli
imul
pop
bound
inc
cmp
jmp
sbb
dec
arpl
jecxz
arpl
outsb
pop
ss
dec
pop
dec
cltd
mov
insl
test
cmp
aad
inc
jp
iret
push
dec
cmp
mov
arpl
push
jecxz
sbb
or
push
inc
xor
js
dec
pop
lret
adc
test
mov
mov
test
sti
xlat
bound
filds
adc
mov
cmp
push
outsl
xor
lock
cmp
je
add
dec
insl
addr16
add
or
imul
pop
push
xorl
jl
cmp
pop
rorl
xor
push
sbb
sub
cmp
rorb
and
jne
xchg
adcb
add
push
inc
lahf
fdivrp
mov
inc
cmp
nop
das
mov
mov
mov
dec
testl
mov
mov
xor
push
sbb
cs
jo
or
push
cmp
mov
call
mov
jp
inc
pshufw
into
into
inc
lret
inc
add
cmp
shll
ffreep
ret
xor
xchg
repnz
xor
inc
jae
inc
xchg
mov
inc
pcmpgtd
mov
jne,pt
push
xchg
imul
and
and
jecxz
scas
testb
outsl
sbb
dec
rcl
addr16
inc
mov
pop
hlt
aam
sub
fisubs
jne
scas
sub
les
mov
pop
fs
push
lahf
lahf
cmpsl
icebp
pop
loopne
mov
cmp
cmp
inc
mov
sbbl
out
add
mov
push
or
fstl
loopne
negb
dec
daa
or
or
pop
pop
repnz
sub
jmp
jg
cli
jno
cli
inc
adcl
jo
out
out
sbb
ja
xchg
add
iret
pop
cmpsb
xor
insb
pop
xor
mov
clc
mov
mov
pop
shlb
arpl
pop
jae
punpckhdq
cmp
pop
pop
add
daa
repnz
ficoml
outsl
lods
adc
push
cmp
inc
stos
push
xor
pop
pop
imul
lret
arpl
retw
push
push
mov
adc
pop
adc
cmp
inc
mov
add
push
and
ret
bound
pop
xor
add
ret
fisubrl
test
xor
inc
loop
outsl
mov
or
inc
mov
xlat
dec
lret
ljmp
das
pop
fstpt
loopne
lea
xchg
into
xor
addl
cmp
push
jnp
add
jnp
out
and
fs
sbb
xchg
cmpsl
bound
and
dec
xor
inc
xor
icebp
dec
sub
daa
cli
out
sbb
sub
or
dec
out
pop
add
jbe
jecxz
loope
sbb
push
das
and
jle
inc
xor
out
dec
sbb
push
sbb
add
xchg
pop
mov
jno
lcall
pop
arpl
lahf
rolb
mov
cmp
outsl
popa
pop
add
arpl
arpl
mov
nop
sub
fidivl
addb
dec
pop
or
dec
jne
je
imul
ret
insb
sbb
xlat
xor
dec
xlat
jmp
cmc
add
push
mov
insb
aaa
hlt
jp
lret
fwait
dec
push
loopne
dec
or
fs
pop
push
insl
xor
cmp
subl
push
dec
dec
adc
or
stos
mov
out
lock
inc
xchg
addr16
xor
mov
cmp
enter
ja
cli
hlt
loope
push
mov
fs
push
jae
mov
je
jae
movq
cmp
dec
inc
mov
data16
lods
ret
pop
push
ja
jbe
ds
inc
inc
movl
pop
sahf
fimull
js
add
imul
xchg
jp
sbb
outsl
push
les
aas
xor
lods
cmp
inc
jnp
mov
add
mov
sbb
das
jne
mov
adc
push
dec
mov
sub
and
sub
add
adc
sub
fidivl
jle
jae
mov
hlt
test
jb
push
lcall
push
dec
adc
push
jo
into
dec
clc
mov
out
inc
fistpll
test
inc
jmp
outsl
lcall
inc
outsl
pop
pcmpeqw
mov
pop
cmpsl
push
add
inc
popa
mov
cli
cli
add
xchg
dec
jmp
loop
sbbb
ds
xor
int
mov
sub
rolb
mov
pop
movsl
mov
das
jbe
es
and
rcll
data16
out
cmp
add
pop
xchg
inc
xchg
sub
mov
aas
sbb
sbb
mov
mov
push
arpl
sbbb
inc
daa
push
sbb
add
xchg
pop
fdivs
push
fwait
dec
pop
push
inc
pop
rorb
dec
jp
fidivrl
loope
add
dec
pop
or
test
inc
data16
jae
pop
or
xchg
push
sub
dec
rolb
inc
push
push
push
das
inc
cmp
adc
mov
popa
inc
dec
testb
mov
insb
mov
pop
jb
push
arpl
pop
cmp
movsb
mov
idivl
cmc
and
cmp
push
pop
push
push
js
or
or
cmp
decb
scas
mov
addr16
jae
dec
mov
dec
cmpsl
inc
daa
sub
lock
xchg
xlat
xor
mov
shrb
shll
push
mov
lretw
push
ret
mov
push
fwait
imul
repnz
scas
in
fidivrs
adc
testb
nop
adc
aaa
mov
and
cmp
movsl
dec
and
dec
lds
sahf
adcl
mov
fisubrl
push
pop
cmp
dec
dec
inc
adc
cli
daa
xchg
rorb
data16
mov
mov
cmpsl
pop
rdpmc
je
pop
fbstp
inc
imul
xchg
psrad
shlb
into
mov
xchg
test
inc
aad
shlb
xchg
dec
call
jmp
popa
ret
jmp
cs
addr16
popa
pop
cmp
jae
push
jo,pn
into
push
outsl
cmp
cs
jl
jg
inc
jecxz
dec
js
cmp
outsb
push
das
or
aaa
push
ds
fidivrl
ljmp
inc
xor
mov
lcall
pop
bnd
sbb
daa
sahf
pop
xor
lret
xor
mov
sbbb
inc
jp
or
dec
imul
cmp
pop
shll
outsl
or
cmp
xchg
cmp
inc
inc
mov
inc
jae
ret
inc
mov
cmpsl
push
push
xchg
inc
cmp
lcall
mov
jecxz
xchg
shrb
pop
lock
push
push
iret
add
add
cmp
mov
and
clc
ret
insl
and
jp
xlat
xor
mov
adc
inc
cmovge
cmp
dec
sbb
push
aas
xlat
addr16
das
loopne
loop
rep
lods
je
lock
pop
arpl
inc
mov
cs
test
adc
push
sub
xor
push
addr16
mov
orl
xchg
xchg
mov
add
inc
dec
ljmp
mov
add
push
sbb
inc
push
mov
lock
mov
out
cli
dec
daa
or
add
out
xlat
stos
xchg
loop
out
xor
inc
pop
xchg
arpl
jne
push
scas
pop
xor
mov
outsb
aaa
mov
ret
insl
add
dec
sahf
ljmp
icebp
shrl
jnp
aaa
inc
inc
dec
mov
push
in
push
xchg
dec
mov
mov
ja
mov
jp
push
pop
imul
add
pop
push
push
inc
inc
setp
jp
inc
jmp
roll
inc
daa
loopne
xor
xor
cmp
hlt
daa
dec
imul
add
inc
adc
sbb
cs
cmp
movsb
repnz
sbb
inc
scas
or
out
icebp
and
xlat
pop
pop
sbb
xchg
pop
loop
orb
mov
outsb
and
out
insb
xor
int3
imul
fbstp
adc
and
rcl
mov
rolb
das
mov
push
mov
fidivl
push
ds
pop
sbb
scas
outsl
arpl
ds
bound
sbb
popa
movsb
mov
and
popa
sub
lahf
out
call
js
sbb
jns
jno
xorb
mov
inc
mov
add
ss
imul
and
pop
repnz
sbb
xor
dec
daa
xchg
sub
arpl
push
das
xchg
jb
stos
mov
es
cmp
push
push
dec
sub
or
stos
lcall
xor
or
dec
out
push
sbb
jns
inc
sahf
jl
dec
daa
dec
addr16
js
test
lret
pop
mov
mov
mov
dec
and
xor
mov
xor
lahf
sahf
fistpl
add
sbb
ljmp
pop
sub
jno
and
notl
popa
pop
inc
push
aam
xchg
push
cmpsl
mov
push
mov
push
punpckhwd
lock
xor
pop
dec
sbb
nop
and
xchg
test
sahf
cmp
xchg
xor
sbb
xchg
mov
shufps
cli
mov
jbe
jecxz
pop
hlt
jno
sbb
shlb
mov
push
xchg
jecxz
pop
jg
outsb
ret
insl
push
jge
and
cmpb
mov
dec
pop
xchg
loope
sahf
jbe
lahf
mov
stos
sub
cmp
pop
jp
and
outsl
addl
xchg
dec
pop
imul
enter
cmpsl
lods
icebp
inc
and
loop
subl
adc
jo
pop
ljmp
movd
mov
xor
cs
xchg
incl
loopne
xor
sbb
add
dec
lods
test
fwait
aaa
aas
dec
add
adc
loop
inc
daa
push
add
push
je
push
mov
xchg
rcrb
xor
addl
sbb
mov
mov
cwtl
push
shlb
fwait
cmp
xor
dec
lcall
fs
mov
add
cmp
pushf
pop
mov
xorl
out
pop
mov
pop
push
shl
call
xchg
mov
insb
fbstp
xchg
push
outsl
inc
aaa
dec
outsl
push
or
test
push
das
jge
push
dec
arpl
cli
xorb
aaa
mov
loop
xor
aaa
testl
adc
jge
adc
dec
arpl
arpl
movb
clts
jp
mov
sbb
iret
rclb
xlat
bound
sbb
ja
repnz
das
jmp
loopne
add
push
cli
sub
xor
push
adc
xor
vmwrite
bound
jl
pop
jbe
inc
xchg
mov
inc
sub
pop
bswap
dec
jecxz
mov
mov
sbb
xchg
inc
mov
fwait
push
out
dec
jnp
out
and
das
loopne
sahf
add
cltd
xor
dec
jmp
or
mov
dec
add
scas
ss
sub
cli
and
add
dec
pop
aas
inc
jno
mov
and
hlt
xchg
imul
sbb
lret
add
and
sti
fwait
push
sbbl
aaa
pop
sti
cmpsl
test
scas
push
sbb
mov
insb
mov
hlt
and
aam
icebp
icebp
rcrb
mov
mov
or
xchg
icebp
shlb
add
jbe
jb
aad
xchg
das
scas
fs
or
dec
pop
jbe
adc
mov
popa
imul
push
ret
ds
loopne
js
ljmp
popa
scas
mov
cvtdq2ps
xchg
jmp
pop
push
cmp
cmp
ss
jb
sub
shr
mov
jbe
data16
iret
inc
or
add
out
fildl
mov
popl
mov
or
add
mov
jae
outsb
or
pusha
data16
inc
jbe
loopne
add
gs
jne
imul
mov
mov
xor
xor
aad
pop
cli
pop
inc
popa
lret
push
test
jne
cmp
stos
jp
rorb
stos
jns
loop
nop
sahf
push
cmpsl
ds
inc
jecxz
inc
mov
shrb
jb
pop
popa
or
cli
jb
jbe
push
lret
lock
mov
ss
test
adc
sbb
inc
ljmp
popa
add
sysret
call
fildll
ret
shlb
sahf
inc
mov
pushf
movsb
ja
push
inc
push
ret
mov
loope
movsb
push
push
inc
arpl
and
iret
mov
jo
ret
repnz
mov
or
push
jmp
movb
sbb
mov
push
lock
jp
mov
js
mov
jno
mov
notb
xor
xchg
test
gs
pop
aam
sbb
mov
mov
sub
jecxz
inc
outsl
outsl
dec
cmp
push
sbb
rorl
addr16
mov
lea
mov
lcall
mov
outsb
into
bound
pop
pop
cmp
cmpsl
mov
pop
stos
outsb
pop
dec
loopne
out
loop
lods
hlt
les
out
or
jne
xchg
sub
xchg
push
mov
dec
aas
push
push
xchg
loop
add
in
jp
jp
add
push
mov
notl
lock
dec
outsl
test
pop
imul
daa
je
loope
ret
adc
rcll
cli
rcll
dec
adc
cmp
or
shlb
dec
js
fwait
arpl
ret
inc
and
js
movb
jp
jbe
daa
dec
inc
das
xor
and
mov
pop
adc
mov
dec
repnz
xchg
jmp
mov
cmovle
dec
cmp
mov
mov
jmp
addr16
imulb
inc
cs
js
mov
sarl
xlat
push
lcall
imul
dec
or
lock
jbe
pop
inc
shrb
jmp
das
hlt
pusha
pop
xor
push
pop
ret
adc
pop
pushf
dec
jmp
aaa
mov
sahf
mov
or
aam
push
das
inc
jecxz
call
jecxz
or
sbb
mov
movsl
leave
xor
jbe
js
jl
inc
outsl
call
pop
inc
pop
mov
maskmovq
idivl
addr16
mov
ja
sub
inc
xor
add
jle
das
jb
xor
mov
orb
push
sahf
and
xor
imul
push
stos
mov
cmp
or
out
inc
daa
aas
iret
inc
notl
and
mov
pop
adc
sub
lods
inc
loopne
rolb
mov
outsb
add
idiv
call
insb
push
xor
popa
jo
push
cmpsb
lock
adc
insl
dec
sbb
in
rcl
and
aaa
pop
push
push
xor
xchg
mov
dec
pop
sub
insl
jae
inc
dec
jp
push
dec
sarl
pop
pusha
outsl
test
sub
subl
and
mov
inc
and
xchg
or
jne
js
aad
inc
pop
add
or
push
insl
add
mov
enter
pop
push
imul
add
add
dec
mov
insl
mov
testl
or
dec
cs
push
inc
dec
jb
xor
arpl
dec
outsb
inc
adc
push
inc
and
testb
out
pop
push
outsb
dec
xor
lods
aaa
in
sbb
insb
sbb
ret
xchg
inc
arpl
mov
lock
in
lods
jo
and
push
lcall
jbe
jo
inc
push
sbb
jle
pop
ds
insb
jne
filds
jno
or
data16
inc
push
xor
filds
lret
sbb
in
insl
or
push
fildl
and
inc
jp
pop
inc
fdivl
push
mov
outsl
cmp
pop
inc
add
orb
mov
popa
addr16
lods
add
and
push
add
jne
mov
or
or
lret
sbb
pop
ret
pop
mov
stos
cmp
xor
subb
and
inc
or
jo
packuswb
mov
dec
jl
xchg
dec
inc
dec
sbb
fisubs
inc
cmp
stos
adc
mov
and
mov
arpl
jnp
movsb
nop
stos
pop
mov
in
push
pop
mov
xchg
lods
push
inc
dec
stc
js
rcl
loopne
ss
jmp
xchg
mov
inc
jbe
sub
or
cs
and
popw
push
cwtl
dec
fwait
into
call
ja
mov
mov
inc
xchg
pusha
rol
pop
popa
and
std
fidivrl
jae
pushf
inc
fcoms
pop
cmp
pop
dec
inc
dec
fsts
inc
mov
or
pop
push
push
rcrl
dec
jb
adcl
div
sbb
fs
xchg
lods
xor
je
ja
mov
add
jge
insl
pop
rcll
inc
dec
push
ja
orl
repnz
and
inc
pop
les
aas
jp
xchg
jg
jb
sbb
mov
rorl
pop
rcl
popa
fcoms
inc
or
pop
pushf
pusha
mov
mov
dec
push
roll
adc
addr16
jmp
jne
mov
scas
pop
stos
fisubrs
xchg
inc
je
outsl
adc
push
inc
inc
mov
sti
arpl
adc
sbb
xchg
outsl
ret
and
insl
sbb
jne
or
ret
es
mov
add
xor
push
mov
ja
addr16
lret
loope
xor
cmp
xor
and
or
add
or
roll
adc
pop
dec
jns
pushf
mov
dec
sub
inc
adc
push
cmpsb
or
out
pop
push
fsubl
pop
hlt
push
jne
rorl
pop
mov
rorl
adc
popa
pop
or
stos
jno
jmp
xor
adc
xor
in
mov
add
add
adc
and
daa
das
or
add
pop
mov
lods
filds
lea
rol
adc
jae
add
repz
das
je
cmp
jmp
push
outsl
and
loop
dec
fadds
sub
inc
insl
fdivl
add
push
rcl
in
dec
gs
aad
push
les
les
pushw
daa
xchg
daa
adc
inc
arpl
lds
mov
imul
dec
pop
adc
sub
mov
jno
fidivs
sarl
daa
imul
aaa
aas
and
sbb
in
mov
imul
push
xchg
xor
sbb
push
outsb
pop
or
test
jmp
jno
xchg
dec
cmp
dec
dec
in
xor
pop
loopne
xchg
pop
dec
jo
mov
add
xor
lret
mov
inc
jb
and
loope
les
inc
push
jo
bound
cmpsl
inc
inc
and
mov
jbe
sbb
imul
pusha
xor
movl
mov
lock
inc
insb
jle
data16
lock
dec
out
inc
fsubl
lcall
and
imul
jno
lds
pop
mov
rcrl
cld
test
mov
sub
js
inc
xorl
xlat
xor
sbb
add
push
and
push
loopne
inc
pusha
and
shll
xor
gs
mov
push
pop
xor
push
adc
shlb
mov
jnp
adc
push
push
adc
adc
mov
jecxz
mov
pop
jnp
or
dec
outsb
dec
popa
adcb
xchg
and
cld
ss
ret
add
cmpsb
imul
add
mov
xchg
cmpsb
imul
sub
lods
imul
fidivl
in
inc
push
addb
pop
adc
into
cmpsl
mov
ret
sahf
and
inc
jb
lods
add
mov
inc
xchg
shlb
adc
bound
roll
inc
sbb
inc
inc
cmc
aas
and
push
jb
inc
jae
sbb
jnp
leave
inc
shll
xor
pop
push
cmp
iret
mov
cmp
jo
fs
add
mov
adc
shlb
rclb
push
icebp
inc
je
cmp
loopne
add
xor
into
mov
jns
push
mov
or
mov
fidivl
cmpsl
and
movsl
or
push
cmpsl
cmp
adc
or
mov
hlt
inc
add
sahf
lret
pop
cltd
jo
rcll
jmp
or
jmp
push
add
popf
in
sbb
push
mov
adc
pushf
bnd
ljmp
ss
cmp
add
mov
loopne
pop
dec
mov
fwait
mov
and
int3
mov
push
je
ret
or
sub
mov
adc
shll
sub
cwtl
dec
push
push
adc
sub
lods
sbb
in
loopne
addb
push
push
pusha
or
mov
mov
cmpsb
icebp
insb
xor
xor
mov
or
stos
cmp
mov
push
xor
dec
insl
jecxz
test
or
jnp
push
or
sbb
inc
lds
xchg
mov
push
inc
inc
and
leave
xchg
fildl
pop
sbb
rcll
int3
loop
xchg
ss
shrl
mov
test
loop
push
pusha
jno
stos
js
mov
test
out
fimuls
nop
cmp
xchg
mov
jbe
sahf
cmp
pop
aad
xor
push
cmp
pusha
shll
push
cltd
nop
inc
push
fs
mov
fs
cmp
xor
fisubs
stos
test
inc
mov
sub
mov
pop
and
and
lahf
inc
sbb
lret
adc
add
ja
pop
in
sbb
mov
cmovno
stos
jne
test
and
ja
pop
in
push
push
inc
or
les
ljmp
loope
sarb
pop
mov
push
insl
dec
add
call
add
clc
sub
add
jne
imul
rcrl
into
jo
add
jae
and
pop
sbb
sbb
or
nop
fldenv
mov
sbb
inc
mov
push
loopne
out
mov
xlat
add
daa
lahf
aaa
add
add
pop
cmpsb
cmp
cmp
add
cmp
sub
pop
in
dec
push
adcb
or
mov
iret
fcoml
pop
cwtl
add
ss
imul
pop
cmp
cmp
jg
add
aad
mov
lcall
repnz
negl
les
fidivrs
out
inc
cs
push
or
lock
outsb
inc
jmp
add
jb
push
xchg
jl
loopne
out
push
or
xchg
lock
mov
pop
inc
aad
shll
mov
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
