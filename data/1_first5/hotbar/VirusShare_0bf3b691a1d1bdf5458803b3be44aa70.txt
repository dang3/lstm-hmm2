fcomp
decl
andb
lea
push
mov
or
push
add
jecxz
add
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
int
movl
push
add
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
mov
in
fstpl
mov
in
adc
push
mov
les
cmpl
or
push
faddl
ds
push
mov
adc
mov
mov
pushf
push
push
aaa
stc
orl
ficoms
jno
and
push
add
outsl
inc
mov
icebp
sbb
add
push
lock
dec
add
mov
or
sub
add
push
mov
jmp
dec
add
or
icebp
loopne
push
fcomip
fbstp
add
inc
hlt
push
push
adc
push
push
leave
rcll
pop
pop
fst
loopne
lds
adc
mov
leave
or
leave
out
andl
loop
xchg
cmp
in
sub
out
icebp
nop
mov
and
and
jns
call
mov
push
pop
outsl
aas
xor
or
aaa
or
fldt
int3
mov
add
adc
aaa
pop
sbb
cmp
add
push
push
jae
jo,pt
dec
add
ss
out
ret
push
fsubrp
or
cmpsb
xor
sub
sete
into
loop
or
mov
je
push
inc
cmp
js
test
mov
push
push
push
mov
mov
add
pop
aas
and
push
inc
sub
cltd
sbb
add
popa
sti
xor
int3
xor
ja
loopne
and
inc
les
jb
push
push
dec
push
mov
lea
cli
fisubrs
push
sbb
mov
test
push
jns
dec
xor
les
xchg
shlb
in
insb
and
and
xor
divb
sub
sub
mov
in
and
mov
xchg
dec
pop
inc
scas
mov
cmp
ss
adc
pop
xchg
mov
pop
ret
xor
mov
repz
push
dec
dec
push
inc
sbbl
insb
sbb
stc
pop
stc
jo
hlt
pop
cmp
jl
in
pop
sbb
adc
xor
jg
mov
in
push
mov
in
fwait
rcrb
or
xchg
out
in
cld
cmp
push
or
sub
mov
mov
test
clc
xor
jne
inc
hlt
push
gs
mov
or
cmp
cmp
cltd
pop
add
sbb
fsubr
adc
cli
mov
test
or
adc
push
jne
mov
mov
ss
dec
push
adc
idivl
call
mov
test
je
mov
or
loopne
mov
loopne
fdivrs
in
mov
adc
lods
fs
add
inc
repz
jecxz
add
push
cmpsb
add
leave
and
sub
leave
out
and
add
push
fimuls
and
mov
data16
mov
xor
aaa
sbbb
xchg
hlt
mov
add
in
sbb
inc
mov
pop
je
mov
add
aam
popa
addb
jmp
incl
add
sub
negl
and
jmp
push
daa
scas
xor
add
jmp
clc
faddl
xchg
imul
inc
bnd
or
sbb
or
inc
and
pop
push
movsb
inc
pop
fiadds
stos
cltd
nop
aas
jl
ret
xor
lea
lds
arpl
cmp
ds
push
clc
scas
scas
shlb
mov
pop
push
lcall
pushf
mov
fdivp
push
sbb
loopne
jmp
int3
mov
sbb
add
mov
xchg
cltd
mov
pop
popf
push
jg
ret
imulb
adc
sbb
pop
dec
push
mov
and
and
jecxz
insl
test
adc
jns
pop
test
je
adc
sbb
je
and
push
or
push
add
add
sbb
cmp
in
and
xchg
sub
in
push
scas
je
push
pusha
sub
sete
test
cmp
in
into
test
iret
push
repnz
push
lea
mov
inc
cmp
xchg
and
lods
push
xchg
out
push
test
jmp
insb
popf
stos
das
shlb
xor
repnz
movsl
repnz
call
mov
scas
pusha
frstor
xchg
hlt
or
jo
enter
push
mov
adcb
fs
xor
adc
or
adc
push
idiv
roll
xor
push
push
cmp
adc
and
push
adc
push
push
hlt
test
pop
push
push
add
inc
add
and
xorb
out
cmp
movaps
inc
mov
xchg
dec
in
adcb
push
pop
js
push
mov
fcoms
mov
dec
data16
pop
and
stos
enter
sbb
addb
jmp
imul
xchg
test
xchg
out
push
sbb
das
push
inc
mov
outsb
or
mov
ret
push
in
fidivl
xchg
sbb
out
sbb
cmp
push
xchg
dec
dec
aaa
pop
and
icebp
sbb
jge
lcall
je
orb
bound
and
lds
cmp
xor
pop
push
xor
call
leave
mov
in
popl
mov
cwtl
push
out
orl
and
pop
jecxz
jecxz
push
push
ja
cmp
out
xor
pusha
mov
roll
inc
adc
mov
cmp
out
popf
loope
mov
pop
clc
mov
mov
popf
cmp
repnz
cmp
add
faddl
stos
or
sti
or
lea
data16
push
test
or
sub
mov
add
hlt
add
test
out
test
dec
adc
dec
adc
pop
mov
pop
add
adc
adc
cltd
in
das
adc
sarb
cld
rolb
lcall
inc
test
sti
add
adc
mov
mov
add
nop
mov
add
cmp
adc
outsl
mov
add
nop
popf
cmpsl
enter
das
push
addl
outsb
sub
push
jecxz
mov
mov
adc
lahf
cmp
adc
mov
je
jmp
xchg
dec
pop
or
in
adc
jmp
mov
adc
clc
inc
pop
sbb
lea
jo
sbb
inc
dec
scas
je
dec
aad
xor
mov
dec
mov
add
pop
js
push
pusha
adc
data16
es
sub
lods
mov
mov
xchg
sub
in
jg
sub
push
add
inc
cmc
lea
pusha
sub
mov
mov
pop
and
aas
in
add
rclb
push
push
aad
jmp
or
cmp
jb
mov
mov
push
push
jge
mov
add
mov
je
icebp
xchg
cmp
add
xchg
inc
add
mov
ljmp
outsb
hlt
jne
mov
xor
sub
test
loope
adcl
dec
lods
push
add
push
or
cmp
je
sub
cmp
je
js
gs
xchg
add
shll
xor
iret
call
mov
jo
aam
xchg
clc
test
mov
inc
or
adc
mov
dec
in
stos
test
sti
int3
add
sbb
fmulp
push
mov
xchg
sub
push
push
push
cld
incl
std
call
push
adc
call
inc
cmp
jl
shlb
outsb
lea
jne
push
push
js
nop
imul
jne
cmp
push
add
pushf
push
xor
outsb
add
dec
pop
test
and
sbb
mov
mov
xchg
shlb
jl
cld
sbb
movzwl
push
lods
mov
testl
push
int
jl
mov
jmp
sbb
test
jne
sub
mov
push
mov
faddl
adc
pop
pusha
xor
adc
dec
jno
push
jne
lods
push
mov
stos
fimuls
pop
xchg
ret
jo
add
or
pop
inc
fisttps
lock
mov
cwtl
or
add
andl
add
jo
jl
xchg
fst
pusha
cmp
pop
mov
js
hlt
imul
adc
sbb
push
insb
popa
sbb
pop
adc
add
push
popa
pop
mov
pop
inc
or
inc
enter
lahf
push
mov
das
mov
ljmp
jmp
mov
orl
fs
xchg
cmpsb
adc
cmp
jle
jb
cmp
ret
pop
lods
sub
cmp
pop
pop
test
sub
mov
lea
sub
or
jge
mov
cmpsb
jg
dec
adc
cmp
ja
add
jmp
mov
std
push
push
add
push
push
daa
pusha
jl
aaa
ret
sbb
pop
inc
add
test
outsb
adc
add
cwtl
jbe
addl
pop
cld
ret
sub
out
je
cmpl
std
xor
fdivrl
sub
add
fwait
in
inc
hlt
cmc
push
stos
push
add
fists
or
xchg
mov
xor
add
test
or
loopne
sarb
add
popa
bound
or
in
shrb
fldcw
mov
or
cld
jb
hlt
mov
push
or
push
fsubp
or
or
push
sbb
pop
in
jmp
xor
cmp
lcall
cmp
fwait
mov
pop
mov
xor
fcmovb
lahf
ss
std
and
inc
shlb
add
cltd
adc
adc
sbb
push
popf
or
cmp
add
adc
popa
or
inc
insl
jecxz
pop
pop
push
lea
push
push
out
in
adc
jb
roll
shll
pushl
out
movb
into
mov
dec
or
js
pop
xor
jae
shl
ds
push
jbe
push
test
cli
xor
pop
pop
or
adc
ret
loop
xor
fsubrs
test
mov
xchg
xchg
add
push
ret
mov
mov
lods
dec
sti
lds
jb
or
js
add
mov
std
and
xor
cmp
je
cmpl
fstl
and
or
push
push
jne
push
lea
cmp
icebp
call
dec
test
push
testl
lock
pop
pop
pushf
pop
sub
gs
pop
push
inc
add
mov
jl
or
inc
clc
outsb
mov
add
and
ret
loope
pop
enter
fdivs
cmp
adc
std
lret
or
shlb
adc
sbbl
filds
loope
or
mov
push
push
addb
fcompl
jno
sub
and
add
push
lods
mov
jb
pop
and
xchg
test
add
pop
hlt
jle
dec
jno
push
pop
mov
pop
push
adc
xchg
cmpsb
add
in
jbe
mov
add
outsl
adc
sub
pop
add
push
or
add
push
jns
adc
sub
xchg
sub
popa
jg
mov
or
push
int3
das
inc
ret
out
test
jl
mov
cmp
das
xchg
jle
add
rcrb
rorl
rol
and
push
mov
cli
adc
cmp
pop
cmp
jp
and
add
add
push
mov
jg
std
mov
js
lock
jge
fdivrs
arpl
js
inc
cmp
or
pop
sub
clc
fildll
and
and
jg
inc
sub
adc
cmpsl
nop
add
shll
xor
or
or
adc
pop
lahf
mov
into
pushl
pop
push
xor
or
lahf
lock
jmp
mov
fisubl
mov
fdivl
stc
cmpsl
insb
pop
inc
pop
pop
pop
pop
cmpsl
mov
or
sbb
jb
mov
lahf
fildl
sub
jbe
sub
test
lret
ret
mov
cmpb
adc
xchg
insb
cmc
adc
xor
mov
and
leave
mov
in
test
pop
add
movl
inc
adc
sbbb
rcll
int3
push
and
inc
adc
or
mov
sbb
sbb
inc
test
test
jae
ret
clts
sbb
negb
je
push
int3
shrl
pusha
out
fidivl
test
sub
mov
loope
mov
pop
lea
out
fistpl
add
mov
or
fwait
je
add
xor
add
bound
outsb
out
ret
jne
xor
jb
adc
add
iret
push
lds
nop
or
sbb
call
lahf
mov
mov
ljmp
and
call
nop
das
leave
aad
or
or
push
fidivl
sbbb
jno
mov
mov
icebp
or
inc
add
faddl
ret
popa
lahf
adc
cs
and
aam
pop
and
pop
and
pop
in
xchg
sbb
pop
sbb
sbb
sub
sbb
add
aas
add
es
into
les
or
mov
iret
outsb
aad
push
test
clc
and
fisttps
cmp
push
push
ja
lock
aam
clc
and
je
or
scas
or
jne
and
push
pop
add
aam
ror
sub
jb
mov
pop
leave
mull
push
xchg
stos
push
adc
sub
mov
cmp
in
cmpl
and
sti
push
out
cmpb
decl
data16
jmp
ret
adc
shr
add
jne
and
sarb
rcr
mov
repz
jecxz
push
pop
cmp
pop
and
mov
or
ja
je
idivl
cmp
adc
stos
je
sub
jne
cmp
pusha
je
mov
sar
xchg
jne
fidivrl
cmp
mov
fidivs
movb
mov
sbb
inc
inc
or
outsl
scas
loope
inc
dec
adc
mov
push
add
adc
cmp
push
js
jmp
outsl
addb
push
mov
sar
mov
out
mov
nop
pop
push
mov
in
xor
decl
pop
inc
mov
fstps
leave
and
ds
xchg
push
jg
adc
mov
or
jmp
cmp
in
cs
xor
daa
adc
ret
or
push
mov
loope
cmp
mov
cmpb
outsl
addr16
cmpsl
shlb
dec
popa
dec
sbb
pop
out
mov
jmp
inc
push
cltd
jle
cmpsl
mov
mov
out
movl
sahf
or
mov
in
xchg
mov
scas
sub
jl
lea
lods
orl
push
adc
movsl
aaa
clc
imul
sahf
out
fsub
sti
pop
cmp
iret
repz
xchg
mov
adcl
outsl
fwait
inc
inc
inc
sbb
add
mov
or
mov
leave
cmp
mov
sub
lea
adc
xchg
out
push
aaa
and
popf
icebp
mov
cwtl
cmpl
sbb
dec
xchg
xchg
lret
cmp
or
adc
hlt
cs
lahf
popf
int3
dec
add
push
aam
mov
jg
mov
inc
xor
pop
push
sbb
push
pop
push
push
push
add
push
lea
mov
xchg
push
pop
leave
repz
dec
aam
in
and
sbbb
inc
pop
inc
pop
cmp
orl
and
or
or
movl
mov
inc
jne
je
cmc
push
mov
js
jle
add
cli
cmpb
inc
sbb
mov
mov
test
in
add
add
lock
push
cmpsl
insl
add
push
jle
ficompl
add
rorl
lock
pushf
fwait
test
push
pusha
mov
mov
test
sbb
or
pop
mov
rcr
bound
das
dec
sub
popa
out
addb
or
xchg
dec
and
mov
sub
pop
push
subb
insl
add
shrl
sub
movsb
shll
mov
call
in
out
lods
adc
out
sbb
xchg
testl
mov
sbb
lcall
enter
xchg
push
sub
lock
jg
decl
add
setne
push
mov
inc
js
and
clc
xor
jg
or
xchg
mov
pop
pop
dec
in
push
icebp
popl
push
or
push
push
cmp
inc
pushf
cmp
je
gs
ret
push
push
inc
xchg
mov
xchg
pushf
fidivl
movsl
lahf
gs
jle
adc
push
sahf
mov
push
mov
lock
loopne
movsl
sub
ret
cmpl
jne
mov
cli
adc
add
pop
and
test
xchg
xchg
in
jecxz
in
xor
roll
push
lea
push
add
stos
mov
sub
out
ljmp
dec
inc
mov
insb
push
dec
dec
mov
jg
incl
xor
push
push
lea
sbbb
jg
sub
insb
sbb
rcrl
rcrl
mov
arpl
xchg
outsl
xor
sub
mov
add
sahf
inc
add
mov
cmp
adc
dec
jbe
xchg
lahf
or
in
push
push
inc
jp
ret
xchg
insl
push
jns
push
sbb
sbb
push
adc
cmp
xor
cmp
inc
mov
adc
cmp
sub
push
push
push
ss
arpl
mov
ret
pusha
shrl
neg
sbb
mov
push
orl
js
push
sbb
push
or
jg
dec
ret
imul
addb
adc
cwtl
xchg
mov
adcb
sub
jne
mov
test
mov
cmc
xorb
test
pop
movzbl
jle
adc
cmpb
testl
sbb
pop
lods
cmp
adc
push
cwtl
pusha
jo
call
aam
mov
fiadds
push
adc
mov
inc
cwtl
add
jmp
lret
idiv
mov
xor
push
push
push
and
jbe
push
inc
mov
aas
cs
jo
lret
push
mov
xor
xor
sbb
and
cmp
push
xchg
insb
mov
add
sub
loop
pop
mov
mov
je
cmp
je
or
cmp
cmp
das
call
lret
call
fwait
loope
arpl
adc
xchg
push
mov
loop
inc
sbbb
jbe
pop
stos
adc
jmp
and
push
push
push
rcrl
mov
cmc
addb
outsb
pop
shll
daa
dec
pop
or
and
sahf
pop
fldenv
or
adc
mov
lds
scas
xor
mov
mov
adc
cmp
insb
add
push
xchg
dec
sbb
sub
das
sbb
and
enter
mov
sahf
sub
addr16
rorl
pop
push
pop
add
sub
lea
push
jb
pop
jbe
icebp
or
pop
push
fstpl
icebp
mov
out
xorb
push
mov
pop
dec
cmp
nop
pop
push
jmp
outsl
sub
sub
jno
mov
inc
mov
test
lods
and
xchg
or
pushf
and
cmpsl
jnp
sub
ficoms
outsl
movb
mov
jl
xchg
sti
mov
jge
inc
push
push
sub
xorb
mov
inc
lahf
push
adc
ret
pop
rclb
push
pusha
sub
add
and
inc
test
jle
cmp
pop
sub
push
push
lea
aam
fdiv
sbb
adc
xchg
or
ljmp
aas
push
add
loope
add
or
jg
dec
testl
cmpb
roll
pusha
push
cmp
stos
adc
test
je
mov
sbb
andb
dec
add
rorl
loop
pop
inc
or
xor
test
inc
movsl
lret
xor
push
outsb
xchg
stc
daa
and
xor
jo
sbb
data16
add
push
inc
outsl
mov
mov
sbb
test
aaa
push
in
faddl
sub
int3
xor
inc
imul
loopne
fldl
fmull
add
movsb
test
dec
ret
repnz
jl
mov
mov
push
jns
or
adc
lock
add
sbb
add
add
pop
popa
mov
addl
dec
gs
add
loope
xor
adc
insb
pop
mov
xchg
mov
loop
mov
cmp
pop
mov
dec
push
add
push
mov
and
movsb
cmp
jl
mov
xchg
xor
or
mov
cmp
mov
loope
test
pop
or
sbb
mov
adc
xchg
lret
add
mov
xor
enter
popa
mov
mov
test
push
mov
sbb
cwtl
add
aam
icebp
and
push
mov
sbb
add
hlt
cmp
loopne
dec
mov
jge
enter
lods
lock
push
fcoms
clc
das
cs
sub
push
pop
inc
test
fs
nop
in
int
dec
push
mov
pop
jnp
push
push
and
mov
dec
push
xor
push
outsb
loope
ret
xor
xchg
or
push
pop
insb
push
pushf
jp
pop
inc
shrb
dec
sbb
push
ljmp
push
push
loope
je
ret
jo
dec
outsb
xor
add
cld
inc
sbb
cmp
data16
sbb
ja
adc
inc
inc
push
sbb
mov
adc
push
clc
ret
lea
dec
enter
dec
mov
or
lock
fldcw
enter
add
popf
enter
mov
cs
sub
xchg
mov
ret
test
js
sbb
je
pop
pop
add
mov
jmp
cltd
and
pop
lock
sar
lock
cmp
pop
pop
adc
jl
push
int3
xor
add
jecxz
sti
jnp
call
push
or
rorl
adc
out
add
std
inc
cli
push
mov
shr
add
mov
imul
push
lret
out
pop
test
jle
mov
out
das
and
enter
call
fdivrs
add
mov
lret
imul
lea
outsb
loopne
adc
cmp
je
cmpl
pop
ret
or
xor
jne
rcrl
jmp
in
dec
inc
sbb
xor
fisubrl
jne
mov
hlt
push
arpl
lea
or
js
pop
mov
and
cmp
dec
inc
push
push
push
clc
div
idivb
lock
inc
lock
and
xchg
mov
jae
test
sbb
sub
inc
or
push
mov
fstpl
push
int3
je
test
fisubrl
sahf
hlt
sbb
or
je
int3
jl
fstpl
push
lcall
add
aaa
roll
lods
andb
int3
inc
cmp
mov
sbb
sahf
imul
scas
push
add
jl
insl
arpl
outsl
jo
loope
adc
jle
cmp
insl
xchg
cmp
mov
adc
sbb
xchg
sbb
and
test
inc
or
ljmp
out
pop
lea
cmp
or
out
or
jp
jge
jmp
mov
pop
fninit
sub
sbb
jge
fadd
ljmp
in
fdivl
sub
xor
mov
ds
lock
shll
mov
test
sbb
mov
cmp
jns
in
xor
add
cmp
outsb
cmp
add
fbld
std
lcall
push
nop
or
adc
je
insb
xor
add
in
mov
inc
xchg
sahf
add
mov
enter
mov
xchg
add
mov
sbb
js
leave
jge
dec
mov
enter
roll
pop
shll
push
sbb
jp
jmp
mov
push
lock
inc
lods
mov
sbb
add
inc
sbb
xchg
xchg
xorb
xor
mov
iret
cmp
sub
rcll
cmp
pop
xchg
xor
daa
and
or
xchg
insl
popa
shll
icebp
add
xor
xor
jg
and
nopl
push
pop
test
add
xchg
testl
or
inc
push
sahf
or
outsb
jno
or
mov
ret
sbb
incl
cmpsb
jmp
jecxz
jmp
loope
cmp
add
or
xchg
adc
push
enter
nop
les
mov
into
or
mov
clc
mov
push
aam
nop
sbb
or
outsl
cmp
pop
push
shlb
das
jbe
push
push
pop
subb
push
pop
daa
ret
push
push
and
xchg
fisttps
pop
lea
push
push
subl
pop
xor
and
jle
fwait
imul
inc
fnstenv
push
mov
movl
sahf
adc
jo
je
pop
vcmpss
or
push
jg
mov
addl
add
jbe
ss
cld
push
inc
pop
mov
out
in
shrb
lea
lds
push
mov
loopne
sbb
mov
movsb
pop
cmovns
fcmovbe
mov
es
push
dec
jle
push
lods
arpl
mov
add
or
lahf
or
or
bound
cmp
test
xor
clc
jmp
push
and
cmp
setb
scas
push
mov
sub
cmp
shrb
pushf
sub
add
mov
push
mov
add
ret
mov
push
or
xchg
sub
jg
mov
pop
cmpsb
and
dec
sub
cmp
xor
push
inc
push
mov
adc
mov
nop
push
aad
push
movsl
inc
xchg
jo
and
pop
pop
pop
fisttpl
je
rorl
cld
jecxz
add
push
dec
xor
push
push
jmp
sbb
mov
aaa
lcall
adc
rolb
mov
add
add
shr
jp
inc
ss
push
inc
jo
lret
push
dec
push
dec
or
inc
pushf
jns
les
dec
mov
imull
aam
dec
xchg
lret
in
testl
xorb
jg
sar
inc
cmp
ja
movzbl
dec
movsl
fstps
pop
push
mov
inc
loop
stos
adc
repz
aaa
push
inc
dec
add
add
adc
sub
add
and
adc
or
cmpxchg
sbb
dec
adc
nop
nop
adc
jb
cmpsl
loope
ret
aas
or
dec
add
adc
rol
push
mov
arpl
push
loop
dec
lea
repnz
ffree
add
fbstp
ror
dec
dec
pusha
jmp
bswap
pop
rolb
dec
in
cltd
inc
xor
jmp
adc
push
jb
or
aad
iret
sarb
stos
or
add
push
scas
dec
jne
imul
sbb
shlb
push
adcb
add
add
cwtl
daa
xchg
sar
test
popw
les
cli
adc
and
stos
rcl
clc
mov
and
hlt
push
pop
mov
adc
and
sbb
xor
pusha
pop
stc
lea
xor
push
rcll
ss
adc
sbb
outsl
add
mov
sbb
out
shl
scas
fsubrl
or
push
ja
popf
xchg
sub
fdivs
push
rorl
subl
jmp
push
adc
pop
and
subps
jb
xchg
cmp
or
xchg
data16
in
mov
sbb
cmp
lods
xchg
and
int
pusha
mov
push
hlt
mov
in
sbb
or
gs
js
je
xor
cmp
je
shll
fucom
je
cld
pop
repnz
fdivl
jne
push
push
push
pop
sub
fsubl
movsb
sbb
movsl
dec
xchg
lea
sarb
insb
test
stos
mov
setg
sbbb
das
inc
sub
cld
mov
push
xor
dec
sbb
jge
dec
cmp
dec
mov
hlt
jle
scas
ds
fnsetpm(287
or
aas
popf
mov
dec
cs
int3
push
xchg
jp
jmp
push
xor
mov
iret
and
add
or
sub
cmp
xor
xorb
cmp
outsl
push
push
inc
lea
dec
pop
iret
rclb
cwtl
pop
mov
mov
cld
sbb
mov
sub
push
ljmp
in
push
pop
cmp
sarb
push
stc
aad
add
into
loope
and
mov
jmp
xor
pop
in
mov
repnz
push
clc
adc
push
or
call
aam
in
out
jb
push
pop
xlat
or
inc
add
xchg
add
movsb
rorb
sub
aad
and
xor
add
sub
xor
or
movsl
mov
and
rcr
shlb
push
or
push
test
mov
add
enter
int3
sbb
test
or
push
add
movsb
loopne
push
push
mov
mov
pusha
lock
jl
leave
lds
mov
jo
iret
inc
jle
adc
dec
add
fdivl
jl
cmpsl
aaa
pop
sti
rorb
js
pop
movl
aas
pop
add
jne
and
push
and
push
and
pmaxub
sbb
dec
add
push
pusha
sub
adc
lods
push
and
pop
daa
lret
sub
xchg
pop
testl
mov
inc
mov
lock
lret
push
je
push
les
jg
icebp
mov
xchg
mov
xor
cmpsb
pop
andb
mov
add
shll
lea
dec
adc
fs
jp
cmpl
sub
aam
stos
mov
dec
adc
loopne
test
ret
popf
ja
jo
lcall
ljmp
sbb
jo
addr16
sbb
enter
cli
mov
sub
stos
sub
and
popa
mov
fsubr
xchg
fdiv
enter
pushf
mov
xor
pop
js
sub
jg
sub
faddl
xor
push
and
movsl
add
sbb
pop
fnstcw
sarb
mov
aad
pop
jp
imul
int
mov
push
clc
dec
adc
mov
pop
cmc
lahf
xchg
lret
inc
mov
add
inc
fimuls
or
push
clc
jl
xor
xchg
sbb
xor
push
rorb
movl
jge
pop
xor
mov
jne
sub
jp
xchg
mov
stos
popa
push
and
mov
add
push
mul
ret
sarb
xorb
nop
pushf
push
push
inc
xchg
xchg
xchg
pop
sub
dec
jae
adc
or
ss
lahf
psubusb
sbb
cmp
or
pushf
jne
nop
sbb
inc
and
fsubrs
sub
push
mov
mov
mov
dec
mov
adc
loopne
leave
xchg
mov
sbb
sbb
cld
cmp
pop
popf
loope
sub
fldl
xorl
mov
test
imul
pop
insl
out
mov
mov
cmp
and
adc
push
stos
sub
xchg
mov
pop
je
push
cli
adc
mov
sbbb
xlat
push
fucom
cmc
mov
pop
push
pop
ljmp
aad
loope
pop
cmpb
fadd
in
cmp
loopne
or
xor
ret
xor
mov
push
sbb
pop
jp
add
add
or
add
mov
add
xor
inc
or
sti
mov
push
pop
sti
push
aad
lods
adc
sub
pop
leave
or
xor
xchg
lret
enter
or
jne
xchg
cmp
cmp
enter
and
and
xchg
jo,pt
mov
xor
mov
sub
adc
popf
xor
or
add
or
xor
push
pop
add
pop
mov
in
inc
jecxz
jle
push
pop
and
fwait
lods
push
push
ret
inc
and
add
loope
push
mov
push
cmp
fldl
push
orb
mov
mov
dec
push
daa
add
pop
adc
add
or
pusha
lock
rcrb
pop
aas
ljmp
xor
and
push
push
mov
addl
mov
inc
mov
rclb
addb
into
cmp
icebp
cli
aam
pusha
enter
lods
push
xchg
adc
sub
out
mov
adc
mov
adc
add
sub
bnd
pop
push
or
stc
push
push
fsubrs
ds
xor
rolb
loopne,pn
pop
call
notl
and
iret
addl
es
cmp
sub
in
mov
push
push
cmpsb
push
and
iret
pop
jle
xor
sub
cmp
data16
cld
add
mov
inc
cs
xor
cld
xor
mov
inc
ss
cld
icebp
dec
push
xor
xor
add
inc
mov
sub
push
push
arpl
push
dec
hlt
dec
xor
jmp
std
push
movsb
or
and
sbb
mov
nop
cmp
xor
test
push
inc
shlb
inc
mov
outsb
inc
or
or
inc
jb
inc
xor
adc
sahf
push
mov
xor
adc
add
add
inc
cmc
or
add
cmp
inc
imul
add
test
test
adc
xor
fadds
sub
push
mov
push
lods
clc
insl
pushf
jmp
push
sbb
insl
pop
jge
je
cli
add
or
jne
movl
jbe
push
and
or
and
sahf
mov
dec
sahf
or
and
inc
cmp
cwtl
in
mov
pop
aas
lcall
lods
mov
insb
mov
and
sbb
pop
add
mov
add
push
mov
cmp
sub
pop
dec
sbb
mov
mov
mov
jle
inc
inc
movb
cmp
mov
cli
cld
mov
xor
in
adc
loop
in
fisttpll
xchg
dec
loopne
mov
mov
cmp
or
rorb
lahf
and
mov
mov
roll
or
ja
rolb
or
call
push
push
lret
mov
xchg
mov
jno
push
lods
outsl
add
popf
push
out
ljmp
pop
mov
sub
mov
arpl
or
or
jnp
adc
mov
or
or
push
add
mov
xchg
push
push
push
ja
ljmp
xor
pop
add
lock
dec
or
jae
jl
push
fdivl
push
inc
sub
and
cmp
into
adc
loop
xchg
fimuls
ret
inc
mov
xor
mov
xchg
stos
pop
sbb
or
bound
js
pop
lds
aam
rorl
gs
subb
pop
sbb
sbb
clc
adc
nop
nop
pop
push
add
sti
pusha
mov
lea
pop
push
add
or
add
push
std
pop
icebp
dec
sub
nop
jg
orb
push
mov
add
out
adc
xchg
and
out
lock
lods
in
iret
pop
push
pop
jb
fsubl
jmp
mov
inc
pusha
lock
imul
sahf
and
addr16
push
pop
pop
push
sub
outsl
inc
mov
test
je
popf
ds
xor
and
or
xlat
les
movsl
cmpsl
pop
cmpsb
xchg
shlb
dec
dec
push
sbb
or
daa
xchg
sub
jo
pop
inc
mov
jl
ss
ja
js
lret
push
mov
adc
in
jl
sub
ds
push
and
dec
retw
imul
test
xchg
test
mov
orb
addl
xchg
add
xchg
add
sbb
mov
js
mov
bnd
add
mov
inc
dec
rcrl
add
nop
pop
outsb
hlt
add
es
std
sti
xor
iret
cmpsl
push
push
enter
pop
cmp
or
or
lret
sub
pop
testl
xorb
nop
dec
dec
adc
lret
and
inc
movsb
out
xor
push
mov
adc
movsb
imul
in
popa
filds
push
dec
enter
nop
stos
sbb
adc
es
popa
movsl
insb
rcrl
out
jo
adc
in
inc
dec
and
insb
in
inc
sarl
nop
addr16
mov
nop
inc
or
and
icebp
enter
fstpt
mov
push
sub
sbb
je
inc
sub
add
mov
cmpsl
test
and
test
and
push
cmp
add
jae
add
cmp
and
std
adc
add
dec
dec
sbb
imul
popa
dec
jo
nop
pop
add
and
test
push
push
aaa
popf
bound
mov
inc
sbb
loopne
jo
sbb
imul
inc
fidivrl
lea
push
mov
mov
jl
lcall
jecxz
adc
mov
aad
lea
les
pop
cmp
xor
fcomps
cmp
repnz
and
cmpb
push
sbb
cwtl
mov
dec
sbb
add
dec
add
adc
mov
fidivs
ror
ds
mov
mov
push
test
push
inc
xchg
dec
xchg
sub
adc
push
outsl
sbb
sbb
push
imul
xor
cmp
jo
dec
push
add
adcb
cs
mov
inc
mov
shld
add
jne
mov
or
add
sbb
sbb
inc
dec
cwtl
js
cmp
push
and
outsl
loopne
sbb
jg
mov
nop
pop
pop
imul
push
and
cwtl
nop
pop
push
push
pop
or
sbb
sbb
add
sarb
sub
lds
jnp
adc
add
adc
in
test
sbb
adc
mov
and
bound
sbb
les
mov
push
sub
imul
pusha
loop
sub
loopne
mov
shlb
push
pop
outsb
adc
mov
push
scas
adc
push
xchg
addr16
jmp
mov
int
insb
mov
imulb
movsb
push
add
or
push
and
push
lds
sbbl
pop
push
sbb
pop
xchg
and
add
push
test
lods
jle
dec
clc
hlt
lea
aas
sub
push
iret
fmull
and
push
add
sarl
clc
mov
out
mov
fidivrs
jg
inc
add
xchg
or
add
cmpsl
add
aas
xchg
iret
sbb
inc
psubd
xorl
cli
xor
jne
jle
pop
dec
push
sub
sbb
mov
cmpsl
jmp
int3
xchg
xor
jns
mov
fiadds
cmp
mov
sbb
inc
ret
or
enter
and
scas
push
dec
je
std
mov
sub
xchg
sbbl
inc
add
and
out
cmp
clc
push
cld
loopne
add
jl
mov
jle
push
cmp
jl
movsl
sahf
out
push
adc
jns
sahf
mov
sbb
adc
pushf
aas
xchg
nop
and
test
add
jb
sbb
lsl
mov
xor
cmpsl
cltd
push
sub
add
fldcw
dec
add
stos
in
add
inc
aaa
adc
dec
adc
movsb
inc
xor
lods
mov
inc
add
dec
add
xchg
xchg
add
sbb
jle
xor
push
ss
cmp
or
popa
inc
add
inc
mov
mov
push
mov
add
mov
mov
subl
cmpsl
iret
xor
jecxz,pn
sbb
leave
test
mov
sarb
nop
std
or
adc
add
cmp
mov
fwait
mov
loop
inc
in
test
push
jnp
imul
add
jl
adc
je
cmp
pop
sbb
pusha
and
mov
movsl
jo,pt
cli
mov
xchg
jo
out
adc
jecxz,pn
hlt
icebp
push
xchg
mov
jo
xor
incb
jle
mov
sahf
xor
push
cld
popa
loopne
sbb
add
or
push
adc
or
insl
or
aas
rorb
cmp
arpl
in
add
and
aad
call
mov
push
jl
mov
adc
or
push
imul
jp
mov
inc
ja
inc
cmpsb
fs
push
and
push
rol
aaa
sbb
jno
out
dec
mov
jle
inc
in
nop
cli
add
int3
pop
sbb
hlt
sarb
imul
outsl
into
orl
sbb
loopne
dec
jno
clc
and
sbb
or
jle
xor
repz
mov
mov
jno
sub
cmp
movsb
adc
cmp
sbb
rorb
js
add
push
pop
add
adc
mov
rcrb
rorb
and
or
pushf
mov
scas
std
or
mov
sub
enter
pushf
and
inc
cmp
mov
cmp
cmp
xor
fisttpl
stos
or
push
xor
or
into
inc
mov
inc
aaa
adcl
adc
push
mov
sahf
or
or
pushf
movsl
inc
sub
aaa
sbb
or
test
cmp
cld
test
cmp
pop
pop
add
push
mov
insl
rclb
cmp
or
fstp
ljmp
jle
xchg
aad
cmp
sbbb
data16
je
outsl
sbb
add
or
fildl
repz
mov
pop
push
test
xor
sbb
out
es
call
push
fucomip
insl
inc
add
push
mov
xor
and
push
xrelease
add
lea
mov
adc
mov
test
mov
dec
pushf
inc
sub
shlb
xchg
sub
addr16
mov
jmp
mov
inc
push
jge
inc
fistpl
xor
into
and
sbb
fs
push
push
jnp
jb
adc
push
jbe
lahf
mov
xor
das
jmp
push
fwait
popf
ret
inc
add
cmpl
shll
sahf
fcomp
and
loope
push
loope
syscall
stos
sbb
or
cld
inc
add
push
sbb
lock
add
clc
mov
std
xor
push
sub
xor
js
cmp
sbb
jnp
adc
and
adcb
mov
dec
push
inc
pop
popa
sub
inc
or
or
pusha
shll
sub
pop
aaa
xchg
adc
or
adc
dec
push
or
cs
push
or
out
xor
popf
les
xchg
icebp
push
push
jmp
mov
setge
xor
movsb
mov
cli
jo
subl
jg
push
jne
fadd
xchg
mov
dec
adc
pop
xchg
movl
psraw
or
popf
pusha
clc
jge
lldt
dec
or
jg
adc
inc
and
je
cwtl
sub
or
enter
xor
and
int3
push
cmp
pop
clc
jnp
sub
scas
pop
dec
mov
in
mov
aaa
xorl
insb
mov
push
sbb
adc
in
orb
cld
jecxz
pushf
mov
dec
scas
movsl
and
test
int3
and
or
xchg
or
xchg
sub
cmp
mov
call
push
push
dec
fidivs
adc
leave
and
dec
mov
or
xchg
push
push
mov
jl
rol
sub
mov
mov
test
addr16
mov
push
add
test
hlt
push
xchg
pop
inc
adc
add
movsb
sbb
cmp
sub
add
add
mov
add
mov
decl
scas
push
push
mov
mov
loopne
loopne
push
mov
out
rorl
pop
jle
into
cmp
ret
test
mov
xchg
mov
mov
add
dec
loop
add
fiaddl
dec
popa
jmp
push
out
ja
jnp
dec
rolb
or
in
push
dec
inc
sti
cwtl
shrb
mov
pop
je
push
ret
addb
mov
ret
mov
inc
and
adc
or
lock
sbb
por
xor
add
fs
cli
cmp
add
fidivs
div
push
ss
ja
stc
sbb
sbb
jmp
cmpb
inc
out
dec
mov
pushf
mov
out
lods
jne
mov
sarl
cmp
mov
mov
js
or
pop
mov
jg
jne
lea
mov
icebp
fwait
das
ficoml
lea
ret
adc
add
je,pn
aad
push
push
add
sbb
shrl
mov
mov
sub
rol
sbb
jne
mov
pushf
std
cli
cmp
jl
scas
idivl
jo
test
adc
jge
sbb
jmp
push
pop
loop
jo
add
int
mov
mov
lods
inc
lock
jmp
cmp
sbb
xchg
cmp
mov
push
mov
int
jae
test
pop
mov
mov
cmp
xor
cltd
dec
push
adc
xor
jne
decl
mov
shrb
and
inc
xor
dec
in
push
sbb
repz
jle
inc
pop
cmp
jb
enter
pusha
xorb
mov
sahf
adc
lea
pop
or
icebp
add
cmp
scas
adcl
into
sbb
or
sub
pop
add
cmp
mov
add
xor
outsl
add
add
repnz
dec
or
pop
hlt
icebp
lahf
mov
pop
sti
mov
dec
hlt
jge
sub
inc
add
push
imulb
inc
push
push
push
jl
jnp
mov
add
test
push
and
je
ficompl
pop
push
es
or
mov
rorb
cmp
mov
push
jg
push
add
push
dec
loop
inc
jl
sub
ret
pushf
fisttpl
push
fst
or
xchg
or
pop
pop
jmp
jae
sub
push
ret
mov
xchg
add
pop
push
jb
sub
test
pop
mov
sub
decb
ljmp
imul
popa
mov
lcall
push
adc
sbb
mov
sbb
loopne
add
shll
xchg
mov
sbb
adc
xor
sub
lods
gs
add
lds
andl
lods
jne
adc
cltd
and
jno
or
gs
jle
pusha
mov
mov
inc
cmp
add
xor
inc
push
or
adc
leave
and
mov
jo
js
pop
bnd
and
je
nop
rol
imul
call
ds
jg
mov
xchg
pushf
lret
jge
mov
mov
jl
mov
fcmovnu
test
insb
lea
cmp
jle
pusha
sub
cmp
jle
add
subb
and
lock
mov
pop
shll
push
orb
add
mov
ja
jbe
lahf
out
lea
rol
add
rolb
cmp
enter
push
push
push
loope
cmpsb
xor
ds
push
add
and
ficomps
xchg
adc
push
add
rcll
fisubs
inc
and
inc
sbb
loopne
lret
aas
mov
adcl
xor
mov
repnz
in
lret
or
inc
or
scas
seto
adc
inc
repz
sbb
mov
push
mov
loopne
adcb
xor
jbe
xchg
add
mov
add
shlb
pop
xchg
mov
mov
inc
add
pop
push
add
pop
stos
dec
fmuls
je
in
ljmp
dec
sub
int
or
sbb
andl
add
stos
add
pop
xchg
call
sbb
or
jne
test
roll
shrb
ret
xchg
jmp
xor
push
push
dec
lods
aam
js
mov
xchg
test
push
outsb
loop
push
shlb
jnp
push
in
push
fbstp
and
and
jg
pop
jmp
fwait
jl
aaa
xlat
sub
jns
cmc
test
mov
add
ljmp
popa
in
sbb
push
cs
test
xor
push
sbb
cmpsb
stos
fcmovnu
add
or
divl
bound
mov
add
je
sub
ret
push
jmp
faddp
and
sub
das
cmp
and
push
mov
sbb
clc
nop
loop
fidivrs
xor
inc
add
mov
repz
rcll
int
add
push
ja
sbb
and
mov
dec
test
or
lods
or
or
scas
shrb
mov
push
dec
push
addr16
je
or
rcrb
dec
fisttps
sub
sbb
decb
jne
mov
sbb
aaa
dec
jae
add
or
push
mov
add
xchg
mov
and
sbb
lahf
push
movsl
and
or
stc
in
lcall
dec
push
sub
adc
dec
sub
cmp
add
or
mov
stc
xor
test
sbb
cld
repnz
fs
repnz
jnp
push
xor
dec
pop
adc
push
mov
cmp
dec
mov
fidivrs
or
sbb
dec
cs
xor
fmull
movsl
adc
sub
mov
push
pop
roll
lahf
pop
rolb
sbb
aad
inc
sbb
add
pop
inc
stos
push
inc
pop
lods
daa
sbb
test
test
imul
int3
aaa
add
and
dec
sub
or
pop
adcb
add
sbb
sbb
jmp
pop
fstl
xor
nop
pop
js
push
cmp
test
mov
xchg
mov
loopne
mov
mov
xchg
mov
hlt
and
sbb
dec
cmp
sub
scas
add
sub
adc
push
push
adc
daa
sub
iret
dec
xchg
mov
and
cmp
add
jne
loope
add
fidivrs
and
push
lcall
add
call
dec
sbb
xchg
cmpsb
sub
push
cmp
fistps
ret
mov
xor
mov
add
insl
inc
shrb
pop
add
jns
ret
push
pop
and
mov
add
push
int
lret
rclb
pop
push
push
cmpl
inc
and
ss
xchg
cmp
add
push
jbe
sbb
sbb
add
xor
cmp
push
shll
dec
inc
or
cmpsb
adcb
aad
inc
or
bound
out
sub
lds
and
mov
and
sub
push
rolb
das
jmp
fadd
and
dec
lcall
and
pop
into
les
or
addb
sub
pusha
mov
xchg
add
or
fdivl
ds
add
mov
add
push
dec
dec
xor
inc
sbb
push
jbe
or
add
lock
inc
lea
jl,pt
ja
flds
subb
add
mov
push
xor
mov
cs
lds
xor
mov
mov
or
cmp
sbb
jno
push
lods
sub
add
inc
add
sub
dec
push
adc
in
adc
test
xchg
dec
push
push
adc
cwtl
js
lret
addb
in
les
je
das
es
sbb
roll
aam
pushf
inc
adc
add
jmp
popf
mov
cwtl
jo
and
icebp
jne
inc
push
jb
into
pop
mov
add
or
nop
add
sbb
push
dec
cwtl
xor
leave
mov
xchg
sub
les
adc
inc
bnd
fidivl
push
pop
sub
jbe
mov
shlb
or
outsb
ljmp
adc
push
sbb
push
mov
or
inc
inc
push
mov
aas
xor
movsl
sbb
imul
inc
sub
cmpsb
mov
out
loop
add
into
xchg
or
repnz
xchg
and
cmc
xchg
xor
shlb
lock
mov
mov
add
mov
pop
lea
lock
sbb
inc
xor
add
mov
mov
pop
sub
dec
push
dec
cld
repnz
test
and
in
insb
ja
jmp
xor
or
push
adc
dec
or
push
push
mov
frstor
mov
sub
lcall
addb
sbb
add
mov
cltd
add
or
add
inc
daa
outsb
orl
mov
add
add
add
imul
add
adc
adc
pop
sub
push
pushf
incl
inc
push
inc
cmp
xor
cs
push
subb
sbb
and
mov
movsb
or
addb
or
inc
subb
push
xor
dec
loope
test
lea
add
adcb
rcr
fstpt
inc
test
lods
jmp
add
cmp
clc
jb
pop
pop
add
int
jg
mov
pop
push
lea
push
push
inc
sub
ljmp
pop
xchg
lea
sbbb
mov
sti
test
jle
sahf
cli
adc
leave
sub
imul
add
in
lock
adc
call
mov
sub
add
pop
or
jmp
xlat
xlat
push
adc
inc
pop
loopne
add
sub
push
inc
outsb
mov
sub
cs
idivb
cltd
hlt
sub
sub
loopne
add
pop
push
dec
xchg
add
cld
lcall
and
sahf
mov
sub
push
add
mov
pop
into
notl
add
add
adc
push
xchg
dec
mov
loopne
icebp
mov
xchg
sub
and
andb
imul
pusha
or
add
jae
loope
sbb
mov
out
mov
test
push
jge
inc
mov
ffreep
dec
mov
repnz
enter
rorl
ret
test
je
sbb
add
push
sbb
mov
jb
popa
push
int3
push
mov
scas
inc
jno
or
lea
ret
pop
jp
xor
add
std
insb
mov
push
pop
incl
daa
add
push
inc
popa
xlat
sub
add
push
or
adc
sub
inc
loopne
xchg
add
inc
shl
jo
jmp
push
enter
test
rcll
mov
pop
push
fadd
fisttps
sub
movl
add
pop
scas
ret
faddp
add
cmp
add
imul
movl
fsubrs
arpl
mov
pop
add
sub
mov
xor
or
xor
push
ljmp
dec
dec
jae
push
push
cmp
mov
ds
adc
lea
inc
cmp
add
add
ds
add
aad
ret
xor
pop
push
push
cmpsl
inc
mov
jge
cwtl
or
add
pusha
das
pop
loop
pop
mov
or
sbb
sbb
push
mov
xchg
jle
aaa
cmp
cld
dec
add
shll
add
add
push
or
sahf
cltd
add
inc
push
xor
ss
pop
push
call
es
fisubrl
nop
fmuls
push
loopne
dec
or
push
mov
loopew
sub
push
push
mov
sbb
sub
pop
or
xchg
push
sti
stos
fiaddl
xor
negb
out
add
sbb
and
xchg
sbb
lea
test
add
add
jmp
xor
inc
cld
sub
push
mov
inc
jp
movsl
jo
push
and
fimull
mov
pop
or
rclb
ret
addl
in
lods
jp
shlb
mov
fwait
cmpb
out
xchg
inc
call
push
rcll
push
xchg
pop
and
dec
cmp
pop
push
clc
sbb
inc
clc
xlat
or
fidivrl
ret
dec
or
pop
mov
sbb
ffreep
sub
mov
add
inc
lea
or
adc
mov
push
push
dec
inc
mov
xor
inc
clc
xor
push
mov
imul
inc
cld
adc
subl
push
mov
js
int3
clc
in
and
xor
cmp
mov
ret
jge
xor
inc
in
inc
sub
jle,pt
lock
dec
jbe
inc
dec
jl
cmp
movsl
adc
cmpsl
rorl
adc
pandn
stos
or
push
rol
mov
test
fsts
inc
inc
jnp
mov
jnp
jae
mov
loop
sub
dec
push
sahf
jg
ljmp
dec
jb
pop
lea
test
aam
pop
mov
jl
mov
sti
or
xor
and
sbbb
or
pop
clc
lock
mov
xchg
sub
sbb
lahf
dec
movsl
sbb
and
add
sbb
lea
in
pop
popa
cmp
dec
imul
mov
shlb
ret
jg
mov
or
mov
or
incl
sub
push
push
or
push
dec
push
das
clc
push
mov
mov
shll
fcoms
sarl
xchg
psubusb
sbb
aam
repnz
in
mov
les
pop
xor
pop
in
cmp
jl
call
mov
xlat
notl
pop
movl
imul
jl
jo
out
sbb
fcomp
or
jl
sub
leave
mov
xchg
adc
adc
inc
pushf
xchg
cmp
jbe
add
push
cld
xor
xor
jecxz
pop
or
push
or
mov
add
xor
and
and
pop
push
dec
nop
in
add
mov
inc
add
and
loopne
sahf
mov
sahf
lcall
hlt
jl
xor
pop
mov
ret
and
xor
ret
int3
mov
test
pop
movsl
mov
scas
stos
movsb
push
or
je
sub
out
xor
xor
rcr
popf
sub
or
sub
in
ret
mov
leave
jnp
mov
movl
add
add
inc
inc
sub
insb
dec
or
push
dec
xchg
hlt
pop
lret
sbb
cs
inc
neg
push
les
cld
jg
inc
js
xchg
mov
fldcw
mov
aaa
mov
lret
test
jmp
xor
shll
mov
push
movsl
xor
mov
sbb
mov
lcall
sbb
pop
sub
add
sub
sub
sub
sahf
je
cmp
enter
mulb
inc
xchg
roll
add
pop
test
and
mov
mov
int3
mov
dec
xchg
and
add
mov
insl
inc
cltd
loopne
jl
movsb
cmp
xor
push
xor
lret
lcall
cmp
testl
mov
imul
out
dec
jp
pop
test
fistl
dec
add
jmp
enter
jne
call
aam
pushf
xchg
out
or
or
aad
dec
add
movsb
stos
in
add
cmp
cmp
mov
adc
mov
ljmp
mov
push
test
push
into
pop
dec
in
sbb
rorl
xchg
mov
iret
pop
sbb
jae
cwtl
push
loope
leave
push
loope
pop
in
xor
fldl
xor
fwait
mov
roll
pop
xchg
pop
test
push
lret
fsubrs
sbb
sub
push
mov
jo
jl
mov
sub
xchg
jb
pop
push
out
add
mov
rorl
pop
cmp
pop
sarb
sbb
mov
inc
insb
push
shrb
mov
clc
pop
jo
dec
leave
push
or
jo
sbb
or
adc
lods
or
or
add
sbb
pop
mov
dec
push
mov
loop
mov
add
xor
xor
test
mov
mov
stos
pop
addb
or
cmp
push
push
stc
or
sub
or
or
cs
bound
sub
nop
movsl
repz
popf
leave
inc
sbb
inc
dec
jp
mov
sub
xor
lods
inc
pop
or
add
add
test
test
loopne
es
pop
add
sbb
mov
xchg
xor
cmpsb
jne
push
and
lock
inc
in
adc
sub
xor
and
sbb
cmp
adc
add
fdivr
sahf
mov
cmp
push
loopne
mov
clc
shrb
cmp
mov
mov
lret
out
pop
jo
add
pushf
loope
ret
push
sub
cmp
imul
nop
xchg
dec
mov
sub
xor
adc
push
or
movsl
xor
test
xchg
les
inc
add
cmp
inc
jle
pusha
sahf
xorb
outsb
mov
dec
push
orb
sbb
dec
and
inc
movsb
test
addr16
jne
dec
int
push
mov
in
ss
test
dec
inc
adc
mov
add
cwtl
pop
sub
jl
lods
jle
fildll
adc
ds
rep
andl
xchg
dec
stos
pop
adc
jno
sbb
mov
sbb
push
sub
inc
sbb
dec
xchg
mov
sbb
iret
jno
fcoms
lahf
loopne
push
sbb
cmp
push
cmpl
ja
inc
sbb
push
dec
mov
xchg
jge
push
add
mov
add
add
jp
std
mov
add
fidivs
adc
je
cmpsb
cmp
push
mov
cmp
pusha
daa
sbb
imul
mov
dec
sbb
xor
mov
cmp
push
popf
mov
loop
pusha
pop
lret
scas
fstpl
or
inc
pop
pop
or
nop
dec
or
movsl
pusha
cmp
sub
insb
sbb
jo
stc
cld
lea
inc
ret
imul
pop
or
push
push
mov
jne
dec
xor
lret
xor
out
adc
mov
inc
je
mov
pop
out
mov
dec
push
cmc
fwait
pusha
ds
adc
push
cmpsb
sbb
popa
mov
sti
mov
outsl
jl
mov
mov
mov
lea
stc
sbb
mov
sbb
es
pop
loop
mov
pop
cmpsb
ss
stos
cwtl
aad
xor
cltd
sbb
add
and
enter
or
and
xor
inc
sub
aad
push
repnz
cmc
and
sub
inc
mov
in
hlt
push
and
add
sub
jmp
or
sbb
jge
lods
dec
inc
push
jle
insb
mov
sarl
sub
sub
and
es
or
roll
sub
sub
pop
and
jmp
sub
add
add
adc
lea
mov
cs
daa
jl
xchg
jmp
outsb
sbb
push
js
arpl
js
popf
mov
xor
je
add
test
stc
sbb
into
loopne
rorb
mov
xchg
push
loope
sub
adc
pop
ljmp
lods
ret
lods
mov
cs
sbb
xchg
inc
das
mov
adc
sub
fsubrl
in
loope
in
fsubl
aas
push
xor
xor
dec
das
mov
js
jb
push
lods
leave
stos
pusha
inc
shrl
movsb
xor
shlb
fs
popa
inc
push
cmp
lods
or
mov
xchg
sbb
mov
daa
psrad
xor
dec
jmp
sbb
mov
inc
loope
adc
xor
mov
push
div
mov
pop
leave
push
incl
push
cltd
mov
push
push
push
pop
add
out
ljmp
mov
xor
aaa
fldenv
xor
int3
cwtl
dec
sbb
ret
add
xor
cmp
and
arpl
sub
xchg
dec
push
pop
jg
mov
sbb
cmp
loopne
sub
mov
or
lds
and
pop
push
sbb
je
cmp
mov
scas
cmp
inc
movsb
lret
dec
in
lea
out
xor
mov
mov
push
mov
addr16
sub
mov
aam
pop
cmpl
ficompl
les
jmp
repz
ret
sti
pop
inc
pop
pop
xor
adc
xchg
cmp
mov
pusha
mov
sbb
inc
cltd
mov
lods
add
sbb
cmp
mov
lret
pop
pop
adc
loop
mov
sub
xchg
adc
add
adc
or
push
adc
inc
adc
les
pushl
xor
dec
cmp
test
fdivrs
mov
push
inc
mov
pusha
sbb
clc
sbb
out
dec
cmpl
fwait
xor
je
pushf
push
push
push
mov
mov
jae
call
add
mov
inc
shrl
inc
outsb
mov
setb
insb
jne
leave
and
fnstcw
mov
stos
arpl
rolb
xor
or
xor
ret
and
push
jl
ret
adc
mov
ja
jnp
lods
inc
inc
mov
jecxz
push
inc
sub
jae
adc
pop
xchg
mov
add
xor
xor
test
pop
and
mov
xchg
add
add
add
jge
mov
cltd
sub
lock
adc
mov
or
sub
push
movsb
pop
push
push
xchg
xchg
aaa
xchg
fs
int
add
ret
ss
es
and
add
xlat
sub
insl
sbb
sub
pop
push
and
push
add
sti
cwtl
jns
popa
adc
outsl
test
add
add
test
shlb
pop
pop
add
out
movl
inc
test
sbb
add
mov
jnp
fcmovne
cmp
sub
cmp
gs
sub
cmp
pop
and
sbb
inc
popf
popa
mov
xor
xchg
sub
and
nop
cs
iret
mov
es
jmp
scas
and
pop
insb
aas
enter
in
into
push
inc
sbb
and
bound
pop
xchg
push
adc
fsub
pop
or
mov
and
sub
or
movsl
adc
jnp
test
cmp
femms
push
mov
inc
add
jb
outsl
push
popf
ret
xchg
jp
jge
add
pop
fistpll
jae
push
or
sub
js
dec
and
cmpsl
lahf
insb
dec
sub
lods
outsb
outsl
push
xchg
pop
sbb
mov
push
push
xchg
decb
inc
dec
sahf
sbb
leave
stos
inc
gs
or
sbb
movsb
gs
mov
and
cmp
add
mov
add
inc
out
push
sbb
push
sbb
fstpl
adc
mov
sub
imul
pop
mov
jbe
mov
adc
adc
pop
push
adc
fstl
arpl
repnz
pop
loopne
mov
add
jmp
fisubl
or
pop
or
fsubrs
sarl
repz
sub
dec
stos
in
jge
loope
xor
dec
inc
stc
cmp
and
aas
decb
add
fsubs
xchg
leave
mov
inc
push
hlt
lock
pop
lea
or
pop
cmpl
in
adc
cld
aad
add
lcall
add
loope
cmp
rcl
sbb
jb
pop
mov
push
mov
add
adc
repz
or
imul
sub
push
push
add
leave
mov
push
rcrb
pushf
lods
testb
adc
inc
out
dec
aad
push
sarb
push
mov
outsb
pop
or
sub
out
sti
push
jmp
lea
push
push
popa
cmpl
adc
jl
sbb
xorl
cmpb
mov
cmp
call
mov
and
sbb
shrb
add
or
xchg
or
pop
addb
pop
les
and
and
inc
enter
mov
lret
popa
pusha
and
es
mov
adc
and
cld
push
mov
push
xor
js
sbb
arpl
sub
lock
add
push
or
test
cs
add
add
dec
mov
adc
cmpb
inc
dec
push
pop
ficoms
or
jns
lea
mov
lods
adc
les
inc
ljmp
or
mov
icebp
add
jns
push
pop
xorb
cs
pop
pop
adc
or
jb
xchg
and
rcrl
movsb
lahf
pop
pop
xor
xchg
je
aad
popa
imul
aaa
movsl
cmp
mov
lods
rcr
rcrb
cmp
adc
or
aas
xchg
rolb
dec
rcrl
incl
imul
dec
xlat
jnp
xor
sub
xor
inc
into
into
mov
adc
cmp
pop
inc
adc
iret
xchg
and
dec
call
sahf
xchg
push
push
lds
sbb
jno
pusha
lock
dec
mov
inc
pop
jecxz
int3
clc
push
pop
xor
shr
movzbl
cmc
insl
mov
or
enter
push
push
push
sahf
dec
sbb
icebp
pusha
sub
xor
sbb
cmpsb
fbld
cmp
movb
jne
lds
leave
xchg
pop
jl
outsl
and
jno
sbb
das
shlb
pop
inc
mov
adc
dec
add
push
test
push
insb
mov
add
int3
mov
inc
jl
or
outsb
ret
lahf
xchg
push
mov
pop
push
outsb
xchg
mov
fwait
mov
xor
subb
outsb
xlat
iret
and
test
std
insl
push
push
push
lods
popa
add
mov
push
push
sbbb
xchg
add
push
incl
push
push
cltd
sub
popa
aam
or
and
mov
add
movsb
or
and
test
cld
push
sub
hlt
cmp
lret
lcall
or
rclb
dec
fs
mov
dec
push
push
cmp
lds
inc
ljmp
inc
sub
jb
mov
xchg
dec
sbb
add
inc
xor
out
movsb
pushf
xor
insl
and
dec
mov
cmp
lods
rcl
push
mov
es
dec
or
adc
pushf
lret
push
and
mov
push
insb
and
and
jne
push
inc
data16
pop
adc
fnsave
add
jmp
daa
test
lds
loope
gs
clc
fstpl
pop
fstl
or
xchg
filds
je
pop
jmp
jp
je
scas
mov
inc
add
inc
sub
jo
adc
mov
or
jg
push
mov
dec
mov
jb
add
push
mov
aas
mov
stos
push
cmpsb
dec
push
pop
xchg
clc
sahf
stc
sub
inc
cmp
out
xor
xchg
dec
loop
cmp
lahf
and
aaa
adc
call
dec
filds
or
sub
adc
fcmovne
fbstp
mov
mov
in
jg
mov
in
inc
addr16
incb
xchg
test
cmp
movsb
jle
fs
xor
insb
lret
push
in
xchg
or
sahf
cmpsb
ror
repz
add
ret
je
das
mov
loopne
pop
and
push
mov
icebp
cs
push
jecxz
push
add
lock
dec
hlt
sub
pop
leave
pop
and
aaa
enter
fidivrs
cltd
ret
cs
test
repz
push
lea
push
inc
push
lcall
cwtl
es
fnstsw
call
push
addr16
xchg
adc
test
cltd
sub
outsb
or
adc
mov
sub
sbb
aam
xor
leave
inc
xchg
in
add
cmp
mov
mov
mov
push
jns
aaa
add
ds
and
cs
mov
sub
aaa
test
cld
in
es
or
sub
cld
and
cmc
push
movsb
push
mov
mov
dec
push
xor
dec
and
inc
inc
stc
mov
push
mov
inc
pushf
repz
xchg
hlt
add
mov
adc
jns
push
add
popf
or
push
pop
cmp
jp
cmpsl
mov
lods
stos
addl
dec
cmp
dec
hlt
rorb
mov
jae
jg
cmpb
mov
inc
ljmp
add
or
or
cmp
xchg
jne
lods
popf
sub
push
sbb
or
adcl
nop
fucomp
inc
or
cmpsl
xor
sbb
xor
inc
int3
test
mov
pop
lods
adc
mov
push
pop
adc
pop
mov
xor
adc
add
nop
or
les
and
movsl
sbb
std
mov
jg
loope
jg
lock
add
test
ljmp
movb
fiaddl
or
pop
inc
pop
bound
or
jns
adc
scas
inc
mov
and
mov
xor
sub
and
mov
loopne
jmp
adcl
pop
and
aad
test
mov
mov
call
scas
cwtl
and
mov
pop
fdivs
xor
dec
xor
mov
fiaddl
incb
stc
mov
or
mov
inc
and
outsb
push
out
rolb
or
jmp
add
cmp
aad
je
xor
jl
sbb
sbb
or
add
xchg
sub
std
sbb
aaa
loope
push
nop
xor
into
mov
out
inc
and
fisttps
sbb
stos
add
mov
push
push
add
push
jne
test
inc
fdivrp
sub
pop
inc
push
push
add
add
ds
mov
xor
mov
lea
fists
mov
mov
lret
inc
hlt
push
and
int
and
dec
adc
sub
cmp
xchg
cmp
ret
sub
xchg
mov
jp
or
wrmsr
xchg
xor
pop
inc
mov
test
sub
es
daa
pop
ret
adc
imul
lret
lret
mov
mov
xchg
test
movsb
sub
int
add
and
push
shl
adc
int3
cmp
jb
adc
and
push
push
add
jno
mov
jmp
inc
jecxz
das
jne
cmpl
add
ret
rclb
and
or
rorl
xor
mov
push
or
mov
outsl
and
ret
nop
or
pop
dec
pop
add
add
sbb
jb
mov
or
or
pop
cmpsl
movsl
lock
inc
jmp
mov
push
lods
ret
xchg
or
dec
rclb
jmp
sbb
and
sub
cmpsb
add
xor
popa
inc
and
imul
movsl
jae
cmp
in
dec
mov
cs
or
sbb
pop
and
lds
or
outsb
mov
fidivs
loope
jecxz
fadds
mov
inc
mov
add
push
or
pusha
add
or
xorl
je
cmp
sbb
fistl
aas
add
jmp
lret
cmp
lea
jge
data16
mov
stos
test
adc
jo
add
jno
jns
rolb
xor
shrb
int3
inc
test
lcall
push
stos
test
push
stos
adc
fldenv
sarl
mov
aad
leave
sbb
and
inc
pop
adc
xchg
mov
xchg
mov
mov
mov
das
mov
and
xor
xchg
ret
fistpl
add
inc
and
adc
popa
repnz
sbb
in
jmp
mov
push
stc
fadds
aam
pop
cld
cmpsb
jb
inc
cmp
clc
inc
enter
push
mov
cmp
push
lahf
aam
adc
ret
xor
adcl
pushf
dec
sbb
fs
push
shlb
add
and
and
inc
lea
cmp
push
sbb
addl
lret
push
push
popa
push
xchg
dec
cwtl
pop
xchg
push
push
mov
rcrl
and
rcl
gs
push
mov
dec
push
icebp
inc
mov
mov
cmp
xor
xchg
leave
jne
mov
pusha
mov
aaa
push
push
push
lret
adc
sbb
test
into
push
sbb
lret
cmp
rcl
lods
xlat
and
sub
or
or
pop
adc
push
xchg
adcl
and
adc
mov
jne
lea
mov
adc
add
icebp
cmp
nop
and
cmp
cwtl
push
adc
fs
daa
mov
add
sbb
and
pop
add
sti
or
sub
add
adc
je
arpl
dec
sbb
mov
sub
pop
xchg
mov
adc
orl
pop
or
lock
ret
push
testl
push
in
lahf
mov
pop
push
stc
sub
push
inc
ds
adc
cmp
adc
cmp
add
mov
pop
test
and
fcomp
sub
dec
push
sbb
or
ss
jge
mov
cmpl
out
incl
dec
lods
sbb
xorl
jg
mov
push
mov
aaa
adc
test
dec
pop
mov
cmpl
push
inc
call
scas
test
push
test
sub
jno
xchg
fisubrl
lods
cmpsl
or
add
mov
pop
sub
push
lea
xor
ret
insb
setno
test
inc
fcoms
sarb
cmpsl
jbe
push
fsubl
out
insl
sub
icebp
xchg
pop
sarb
loopne
pop
xorl
lea
and
mov
push
lret
leave
dec
aam
dec
sbb
addr16
xchg
cmpsb
fs
push
fildll
dec
mov
ret
add
bound
inc
int3
loopne
mov
adc
lcall
mov
cs
pop
pop
mov
add
push
sbb
loope
repnz
sbb
int3
push
or
inc
add
or
and
mov
cmpb
lea
pop
std
push
jle
lods
sub
ds
int
add
pop
push
out
and
imul
cltd
cmp
nop
imul
arpl
sbb
xor
adc
inc
jo
fsubl
stos
dec
jl
jne
xor
jp
pop
inc
dec
add
xor
testb
pop
and
push
sub
push
jno
repz
cmp
out
rolb
mov
push
nop
out
dec
cmp
je
cwtl
adc
sbb
xchg
lret
add
sahf
sub
pop
addr16
adc
hlt
inc
jp
lods
out
lock
loopne
add
cld
adc
fs
add
mov
cmp
lea
cmp
jne
cmp
aaa
push
ss
iret
push
sbb
cmp
inc
aas
lahf
or
rclb
loopne
inc
clc
add
sub
fcomps
aaa
std
dec
lods
mov
push
scas
adc
popf
xchg
push
cmpl
fdiv
push
mov
fwait
sbb
lret
cmp
dec
adc
movsb
out
xor
bound
jl
cmpsl
or
inc
std
pushl
je
inc
add
cmp
jl
jmp
loopne
inc
mov
repz
jo
and
hlt
pushf
xor
popa
mov
inc
pop
xor
sbb
push
sbb
pop
jp
add
xor
or
add
lods
mulb
or
dec
addb
push
add
notb
cmp
sbbb
xchg
sub
adcb
push
fs
sub
add
or
push
js
fidivrl
push
enter
push
push
sbb
cmpsb
xchg
ret
xchg
and
adc
or
clc
lock
das
inc
cmpl
test
jge
push
aaa
and
bound
sub
mov
mov
mov
fs
add
xchg
mov
sub
fs
adc
add
outsb
xchg
inc
sbb
sub
push
add
call
or
fs
mov
sbb
pop
mov
mov
or
push
and
mov
mov
add
mov
add
jbe
inc
fisubl
sahf
xchg
mov
push
mov
dec
lcall
rsm
sbb
loopne
mov
nop
loopne
mov
xchg
nop
cmp
mov
negl
cltd
mov
xor
outsb
sahf
mov
and
dec
sub
and
addb
or
mov
add
push
adc
int
xchg
add
add
cmp
test
mov
popf
in
add
add
cs
js
or
and
js
sbb
sbb
push
dec
stos
test
inc
mov
mov
ret
notb
loopne
mov
aam
arpl
pop
push
mov
cmp
test
push
pusha
mov
cmp
sub
mov
rolb
adc
daa
shll
and
stc
jp
pop
mov
adc
mov
push
jl
adc
fdivrs
push
cli
test
or
shrb
pop
repnz
ret
sub
das
and
add
pop
inc
clc
mov
inc
xor
pop
lahf
push
xor
jns
ljmp
push
xor
dec
stos
xchg
push
fisubrl
nop
or
xchg
and
sbb
add
movsb
pop
shlb
dec
stos
xor
or
or
and
push
cmpsl
jbe
adcb
push
xor
pop
sbb
add
sbb
mov
mov
mov
movsb
mov
adc
mov
sbb
xchg
enter
inc
das
outsb
adc
push
pop
shll
inc
or
shlb
rcr
int
stc
jb
sbb
add
cmp
jae
mov
xchg
jns
add
pop
and
lods
cli
jmp
xor
test
cmp
filds
or
push
push
push
je
mov
inc
or
sbb
sbb
lods
incl
and
adc
mov
cltd
add
inc
or
in
cmp
xor
sarb
and
add
das
add
adc
call
adc
outsb
or
pop
add
aad
ds
pop
mov
mov
or
cmpb
sbb
mov
jo
cmp
daa
pop
sub
movb
add
mov
push
push
stos
sahf
push
loop
add
xor
test
sub
dec
clc
pop
ret
mov
jl
inc
add
hlt
add
cmpb
or
mov
shrb
aas
mov
add
xchg
lods
test
sbb
inc
repnz
add
add
add
add
or
adc
cmp
outsb
add
cmpsl
das
inc
add
inc
add
inc
push
add
add
popa
loope
fwait
xchg
das
add
xor
rorl
inc
add
lds
lret
cli
sub
and
inc
sbb
jg
sbb
ror
jle
and
adcb
or
add
sub
mov
cmp
cmpsb
inc
scas
mov
lock
jmp
or
fldl
cmp
outsb
std
bound
sti
pusha
push
or
out
push
jle
add
sub
lods
sbb
add
jmp
faddl
or
adc
and
sub
adc
adc
pop
scas
mov
rorl
enter
push
sbb
adc
and
add
adc
scas
cwtl
mov
dec
cmpsb
jmp
adc
and
sbb
sbbb
sqrtps
or
ss
or
out
lock
inc
xchg
mov
jbe
cmp
mov
les
mov
xlat
push
mov
or
mov
add
and
mov
inc
loopne
or
data16
jge
outsl
adc
data16
inc
or
cmp
aad
loop
mov
out
add
xlat
push
rolb
adc
divb
mov
mov
mov
or
cmp
nop
push
dec
jmp
rcll
or
mov
and
cmpsb
adc
loopne
jb
mov
or
jg
icebp
imul
sub
adc
es
lods
fmuls
mov
mov
movsl
mov
inc
rolb
mov
mov
push
scas
stos
push
mov
xor
leave
dec
mov
push
cmp
add
scas
jae
dec
or
dec
lret
rorl
jmp
xchg
inc
stos
sub
cmp
scas
xchg
out
xor
cmp
insl
loop
adc
out
sbb
outsb
ljmp
cmp
adc
add
imulb
cmp
les
rcl
xchg
cmp
imul
mov
dec
and
in
fidivs
mov
clc
sub
in
test
cmp
mov
add
add
inc
stos
cmp
xchg
mov
cmp
ret
xorb
mov
sub
mov
and
test
push
adc
or
pop
add
xchg
daa
or
das
add
or
add
inc
sub
adc
sbb
and
xor
sub
xchg
add
test
inc
sub
dec
or
lret
sbb
inc
adcb
dec
nopl
movsb
xor
aad
outsb
jl
push
jo
add
jl
je
lea
sahf
mov
sub
jbe
mov
mov
enter
or
sar
sbb
aam
mov
add
xor
push
or
fldt
fsubrs
push
movl
push
inc
pusha
add
pop
mov
sbb
loopne
jg
sub
add
jbe
fimuls
or
cltd
dec
add
and
dec
sarb
cmc
ret
pop
lds
popa
nop
inc
lea
xchg
pop
sbb
cmp
xchg
sbb
imul
out
push
int3
adc
enter
push
popa
xchg
pop
or
ja
setne
inc
movsb
sbb
push
dec
or
mov
lcall
mov
or
mov
sub
sbb
push
and
and
dec
lcall
mov
lcall
or
adc
xchg
hlt
aas
sub
mov
mov
push
aaa
add
and
mov
in
lods
inc
xchg
lods
push
lea
in
lahf
sub
shrb
xor
loopne
jmp
adc
into
daa
add
inc
add
sbb
rclb
inc
and
or
push
sbb
sbb
dec
push
sub
xchg
mov
pop
fmuls
add
dec
mov
push
and
pop
lods
adc
adc
sub
loopne
xchg
cmp
add
dec
sbb
push
jo
sbb
add
jne
mov
and
add
add
xor
shrb
addl
adc
add
push
sbb
push
je
pusha
movsl
jo
push
sbb
roll
mov
mov
adcb
sub
inc
push
outsl
mov
pop
inc
and
or
add
xchg
sub
loopne
test
add
dec
and
push
int
test
mov
xchg
mov
xor
mov
mov
out
mov
lea
mov
dec
sub
lds
or
rcll
or
xor
daa
add
sbb
adc
push
fwait
test
pop
mov
in
or
push
inc
mov
aam
jmp
mov
cmp
dec
push
push
push
ret
dec
hlt
pop
aad
cmp
or
sbb
test
add
ds
lock
mov
inc
sub
outsb
or
in
xchg
rcl
jne
inc
jns
mov
icebp
dec
push
shlb
sub
xor
sub
xorb
mov
or
and
add
lock
xchg
xchg
jmp
je
mov
push
sbb
adc
jo
mov
jmp
adc
mov
pop
loopne
push
sti
add
push
sbb
mov
sbb
xor
shr
cmp
je
mov
push
stos
pop
and
push
or
mov
push
sbb
les
jge
sbbb
push
or
insb
fs
add
mov
sahf
test
and
mov
xor
mov
mov
outsl
jecxz
and
sub
add
adc
hlt
fwait
rcrb
push
mov
insb
push
or
cmp
sbb
cs
and
and
and
clc
add
xchg
push
or
aas
add
jbe
dec
sbb
cmp
xor
lret
lcall
imul
lock
outsl
sub
movl
int3
fbstp
inc
mov
cmp
xor
push
ljmp
add
mov
test
xchg
or
movsb
js
mov
jl
popa
mov
push
push
fmuls
add
fsubl
mov
cmp
jnp
or
arpl
ds
jge
add
xchg
cmpl
push
pop
push
push
sub
add
fisttpll
ljmp
mov
test
or
cmp
scas
push
cmp
dec
cld
dec
fcoml
lock
loopne
dec
push
pop
xchg
xchg
inc
hlt
push
loopne
decl
aaa
out
add
mov
pop
in
push
insb
pop
inc
aad
je
sub
js
push
pop
in
lret
or
mov
fdivs
jnp
jo
jne
mov
cmpb
pop
or
or
xor
xor
lret
lods
xchg
cmp
insl
call
push
lds
xor
push
jle
push
xor
sbb
push
xchg
mov
lods
mov
mov
mov
sahf
in
or
and
imul
or
sub
or
adc
sub
xchg
fmull
jne
adc
jmp
push
mov
xchg
add
cmp
and
adc
loop
test
lahf
orl
pop
xlat
nop
dec
dec
push
fbld
adc
add
mov
pop
dec
fs
ljmp
cmc
loope
add
sbb
jge
jae
push
sbb
sti
jmp
mov
xchg
aam
lea
orb
pop
push
mov
jno
fldenv
insb
sbb
mov
jl
shlb
sbb
jl
add
fucomp
sahf
das
cmpsl
icebp
lea
push
popa
push
push
sub
push
movl
lock
adc
sbb
jo
and
aaa
add
add
iret
push
push
ss
and
les
jo
stos
jo
mov
or
pop
ret
add
dec
and
sub
jl
rol
jb
je
xor
or
movsb
push
inc
and
cmp
adc
les
sbb
bound
sub
loop
dec
sub
test
inc
pushf
push
and
popa
cmp
mov
fldcw
inc
pop
inc
push
sub
xor
jo
enter
les
add
add
pop
mov
xor
adc
data16
int3
add
std
dec
or
rcrl
jl
xchg
outsb
adc
push
xor
xor
cmp
sbb
jb
out
ficoml
add
jb
movb
sbb
and
or
pop
push
dec
adc
test
adc
add
push
push
pop
cmp
clc
nop
push
pop
xor
into
pop
daa
pop
and
out
ret
nop
lret
into
add
leave
pop
adc
ds
push
push
pop
or
mov
xor
xor
lret
mov
les
test
jo
out
outsl
and
push
sub
jl
fs
and
xor
jns
fsubrs
push
adc
cmp
jmp
cmp
inc
xchg
ret
or
pop
insb
or
adc
sahf
push
adc
fstps
mov
cmp
es
dec
push
cs
add
adc
add
inc
cmp
movsb
pop
mov
inc
das
test
push
push
sub
ficomps
jne
jo
jecxz
cmp
jg
gs
mov
je
or
jge
cmp
inc
xchg
clc
jl
mov
adc
sbb
hlt
outsl
or
incl
mov
mov
cmp
add
pop
sub
or
pop
adc
scas
jo
rolb
and
mov
test
add
inc
xor
roll
inc
push
fs
jo
or
lods
addb
sti
rolb
push
push
mov
dec
in
andb
sbbl
js
add
rcll
mov
lea
add
cmp
gs
jge
cmp
push
clc
or
adc
inc
cwtl
sub
sub
dec
inc
xor
sub
adcb
xor
push
sub
test
pop
xor
add
inc
xchg
js
lea
mov
aam
rcrb
rclb
inc
push
loopne
fstpl
aaa
dec
push
mov
cmp
xchg
push
and
in
jl
xor
jg
add
xchg
xlat
rorl
push
lds
daa
cs
mov
int
sbb
fwait
cmp
add
add
cmpsl
pop
cwtl
rcl
or
lds
dec
and
pushf
test
sub
mov
loopne
xchg
inc
aaa
dec
mov
inc
cmp
push
push
int3
scas
loopne
stc
or
xchg
adc
add
mov
aas
cmp
push
push
jmp
pushf
jne
mov
mov
sbb
and
xchg
mov
xchg
xor
adc
sbb
arpl
or
sub
nop
sahf
lds
or
jge
test
add
adcl
test
rcr
inc
dec
push
mov
in
mov
leave
call
pusha
into
roll
ja
fsubrs
xor
xor
add
xor
cs
sbb
pop
stos
shlb
inc
xchg
icebp
pusha
lds
and
cs
xchg
mov
and
adc
jmp
icebp
jg
scas
loopne
mov
cld
ljmp
sbb
and
push
push
popa
test
jo
orl
loope
cmp
sti
dec
cmpsl
inc
mov
je
or
mov
cli
sahf
jp
pop
push
nop
mov
ds
or
adc
dec
pop
sub
cli
cmp
jecxz
adc
add
das
add
insb
mov
jge
test
mov
jmp
sub
push
push
cmc
mov
andl
mov
adc
sarb
sub
pop
mov
add
test
cmp
ja
lock
jnp
pop
or
nopl
mov
cmp
pop
sub
cs
jns
add
insl
pop
orb
dec
jne
outsb
inc
sbbb
aas
push
loope
inc
inc
adc
push
sbb
nop
mov
dec
pop
addl
push
pop
push
add
dec
dec
push
fsubp
notl
fldl
sub
movsb
ret
adc
sub
and
mov
or
js
ret
xor
aas
cs
push
movsb
pop
push
mov
pusha
mov
jg
jmp
sub
pop
push
adc
lods
add
add
add
add
mov
push
imul
push
xor
in
mov
lds
xor
adc
mov
or
clc
mov
jmp
push
or
lods
cmp
aam
call
fldenv
sub
push
adc
inc
xor
stc
rclb
nop
xor
adc
jo
dec
jb
push
lea
add
pop
xlat
popa
add
test
sar
sbb
or
fs
int3
cmpsl
sub
add
xor
inc
jne
orl
adc
in
push
adc
lea
lret
repz
adc
jno
fldcw
inc
subl
add
enter
sbb
pop
push
push
mov
and
sub
call
ljmp
insb
imul
cld
icebp
insb
inc
inc
and
adc
jne
mov
push
sti
ret
mov
in
cmp
dec
inc
dec
and
add
push
adc
push
ret
add
add
or
cmpl
std
xchg
dec
ja
arpl
add
loop
push
sbb
test
in
or
mov
jo
and
cmpsl
push
add
adc
add
repz
push
adc
push
sbb
movsb
fs
push
pop
or
pop
dec
or
pop
je
sub
cmc
adcl
pop
pop
xor
int3
push
mov
dec
push
dec
sbb
and
jle
insl
xor
popa
arpl
sub
cmp
ljmp
and
or
addr16
out
inc
dec
push
sbb
pop
ljmp
push
fidivrl
jmp
stos
imul
pop
mov
xor
push
mov
mov
fldcw
fwait
mov
xor
mov
xor
invd
bnd
add
push
push
stos
dec
sub
sbb
stos
push
rol
mov
or
cs
data16
push
push
and
inc
cmp
or
xor
fistps
pop
jmp
xchg
inc
and
inc
or
inc
push
popf
adc
push
int
or
mov
movzbl
fcmovnbe
pop
mov
or
inc
dec
sbb
sub
inc
push
rcrl
dec
push
aad
push
sbbl
cmp
xor
push
sbbb
bnd
dec
or
push
xchg
test
or
je
nop
out
insb
and
add
or
or
stos
sbb
ss
sub
push
je
hlt
push
add
movsb
mov
imul
jns
mov
or
movsl
push
arpl
push
inc
adc
and
adc
fists
add
add
dec
add
pusha
sbb
and
sbb
push
adc
loope
push
push
mov
ss
mov
sbb
pop
pop
xor
cmp
and
jo
loop
fs
mov
mov
mov
push
xchg
in
xor
jae
xchg
sub
ret
je
shlb
lock
bound
xor
inc
ljmp
push
mov
jmp
int
add
cli
mov
inc
xchg
pop
enter
jb
shrb
inc
shrb
icebp
sub
test
shrb
lea
call
or
xchg
adc
je
mov
jb
or
ja
scas
fsubrs
push
lds
pop
xor
test
sarb
push
jns
leave
sbb
insl
xchg
mov
push
sub
rol
jno
stos
sbb
push
sbb
mov
push
cmp
movsl
andb
lods
mov
inc
jae
bound
sub
jge
in
mov
xor
daa
push
gs
adc
sub
lods
or
push
mov
aaa
push
ret
loope
add
ret
pusha
add
adc
adc
and
adc
add
cmp
fs
sbb
add
stos
filds
test
test
jge
pop
and
jmp
je,pn
pop
inc
xchg
pop
cmpl
les
mov
into
cltd
out
xchg
les
and
add
xchg
dec
add
fstps
aaa
jge
add
mov
cmpsb
scas
bound
dec
int
sbb
cwtl
or
data16
push
pushf
cmp
in
aam
push
cmc
jne
mov
arpl
adcl
pop
mov
inc
inc
dec
test
or
mov
decl
sbb
mov
loope
decb
add
or
and
jb
mov
mov
bound
add
pop
add
inc
push
cmp
int
inc
add
adc
push
decb
rcrb
stos
push
push
lret
jo
push
sub
test
dec
nop
push
xor
les
enter
rcll
shlb
push
mov
mov
push
adc
cmp
jae
inc
cmp
inc
mov
cwtl
ds
lock
pop
lret
or
push
or
loop
push
sti
mov
jns
mov
addr16
and
or
bound
ret
xchg
cld
dec
jg
repnz
scas
xchg
sahf
push
pop
adc
in
adc
cmp
test
xchg
add
rcr
ret
imul
dec
jmp
sbb
xor
pop
mov
sbb
sbb
inc
jecxz
jle
adc
sbb
rcll
ds
add
mov
test
filds
add
pop
mov
das
mov
aaa
test
shlb
sbb
int3
scas
jge
movzbl
add
add
std
aad
mov
adc
nop
rclb
pop
or
or
ds
insb
lds
push
lea
and
push
xor
push
int
faddl
aaa
mov
push
movsb
sub
test
sbb
test
sub
je
push
dec
cmp
js
aad
push
xchg
mov
add
cmp
sbbl
mov
pop
ds
jbe
and
pop
jbe
sub
jo
xchg
pushf
clc
mov
pop
add
test
ja
pop
mov
push
and
or
call
xor
sub
mov
or
add
shlb
add
mov
add
adc
add
jno
int
pop
out
rorb
sar
subb
add
rorl
or
incl
xor
mov
imul
cld
adc
mov
sub
shr
and
jp
rol
les
les
dec
mov
xchg
pop
ja
out
add
jbe
fisubrl
cmp
jae
inc
sbb
rolb
mov
sbb
sub
xor
mov
pop
xor
push
mov
xadd
dec
test
mov
addl
or
inc
and
pop
push
adc
in
fstl
sub
je
sar
pusha
scas
outsb
pop
inc
or
add
sub
sbb
fldt
jmp
cmpsb
xor
sub
xor
cmp
push
push
nop
outsb
add
arpl
shl
pop
pop
lea
push
ja
jne
imulb
add
jo
cmp
nop
je
jl
enter
xchg
mov
xor
divl
add
and
mov
imul
cmp
pop
inc
mov
pop
mov
cs
add
add
mov
sahf
test
outsb
cs
push
pop
inc
dec
lds
out
dec
lea
push
and
ljmp
shrl
xorb
jl
sbb
js
dec
ds
or
lcall
es
push
cmp
pusha
ret
rolb
pop
add
lds
or
sbb
andl
cltd
push
sbb
sbb
add
cs
ljmp
or
popa
pop
int
adc
adc
cmp
xor
subl
inc
rorb
add
lods
enter
inc
enter
and
outsb
cmp
add
fnstsw
iret
dec
ror
pop
sub
subb
ja
rolb
add
and
adc
cltd
lods
or
adc
cmp
xor
test
cld
push
push
mov
push
mov
jne
jne
xor
mov
xor
adc
and
test
test
aas
add
gs
cmp
ret
popf
lock
orl
pop
dec
cmp
lea
mov
dec
jno,pt
xor
sti
jle
mov
pop
hlt
jl
dec
sub
pop
cmpsb
xor
mov
dec
aaa
ss
push
lea
add
shl
xchg
mov
or
aas
popa
test
sahf
dec
sub
in
cltd
mov
inc
jp
decl
jecxz,pn
dec
rolb
xchg
or
sbb
mov
mov
mov
jne
lods
sub
adc
dec
push
add
in
cmp
push
jo
inc
or
js
nop
xchg
inc
setb
adc
mov
pop
sbb
leave
jae
test
xor
and
cmp
cmpsl
push
sub
cmp
inc
jne
jl
mov
xlat
test
stos
js
pop
and
cmpsb
incl
fstpl
xor
sbb
sub
test
and
add
cmp
pop
pop
test
add
ret
mov
sub
aas
mov
or
lea
jo
mov
cmp
jp
fwait
add
jnp
mov
lret
push
add
jbe
mov
inc
mov
xor
sub
je
push
jne
lea
js
lock
jne
sub
fists
sub
push
mov
mov
jl
jne
xchg
dec
sbb
jo
insb
insb
push
sbb
in
jmp
jbe
rcrl
jo
adc
imul
jno
adc
addb
jle
hlt
push
mov
sarb
adc
xchg
pop
dec
xor
mov
arpl
push
cs
mov
lea
inc
or
adc
pusha
cld
outsb
inc
jle
add
fsubrl
pop
add
ret
adc
lahf
popa
outsb
in
ss
clc
sbb
mov
add
push
cmp
mov
push
pushf
and
and
jmp
push
or
push
jl
sub
mov
ret
data16
add
cltd
and
rorb
popa
int3
sti
sbb
mov
adc
addb
push
xor
lea
outsl
inc
cs
fs
fs
push
pop
cli
jmp
xchg
jp
jnp
sbb
movsl
xor
or
push
sub
and
and
add
inc
mov
sbb
mov
push
sbb
sbb
jno
jp
cli
pop
push
dec
pop
mov
js
and
adc
xor
cmc
lods
lret
mov
into
dec
out
xchg
inc
mov
cli
stc
xor
das
lea
loop
push
jo
fcomps
mov
faddl
sub
pop
inc
ret
xorb
ret
xor
or
sbb
mov
mov
or
inc
sub
roll
ss
loope
mov
adc
cmp
gs
cmpsl
ljmp
cli
dec
int
test
jns,pn
sbb
and
movsb
jmp
mov
push
add
stos
or
jae
push
push
pusha
dec
and
or
aaa
insl
jae
jmp
es
or
imul
inc
icebp
mov
gs
dec
das
push
lea
lret
push
jb
xchg
sbb
mov
loopne
mov
xchg
jns
mov
pop
xchg
lahf
nop
scas
aaa
enter
cltd
out
lea
add
inc
dec
fwait
jne
add
xchg
sbb
rol
jmp
pop
loopne
mov
mov
mov
push
jl
adc
push
clc
add
fdivr
mov
cmp
sub
jns
sbb
fildl
cmp
adc
jecxz
lods
call
xor
push
shl
sub
xor
repz
sbbl
mov
nop
push
stos
fildll
or
sbb
push
push
sbb
adc
rol
sbb
test
mov
clc
xchg
pop
enter
sbb
cmp
cwtl
rorb
fs
out
adc
and
mov
mov
add
dec
sbb
sbb
jmp
add
jb
and
xor
clc
movl
mov
inc
xor
and
cmc
pop
xor
sub
rolb
inc
inc
add
push
jo
pop
adc
push
push
je
cmpb
imul
in
sahf
pushf
inc
xor
addb
lret
adcl
add
mov
test
es
int
inc
dec
xchg
icebp
scas
dec
andl
and
inc
add
push
dec
in
test
push
or
push
outsl
xchg
cmp
lret
popa
pushl
push
mov
mov
push
aad
push
lahf
aad
mov
stos
pusha
lods
xchg
or
jb
and
jg
or
or
mov
pushf
mov
pop
push
lcall
push
sub
mov
sbb
add
aad
test
cmp
lds
jne
sbb
inc
pop
xor
mov
daa
sub
ret
in
mov
dec
repnz
push
push
push
nop
xchg
add
ret
shl
sub
addl
or
pop
aad
dec
fwait
sub
sbbb
or
push
cmpl
dec
js
push
sbb
dec
jo
in
test
insb
lods
dec
mov
daa
mov
add
rolb
fsts
inc
push
push
stos
enter
sbb
pop
ret
add
push
movsb
push
lds
dec
pop
or
and
fiaddl
sub
icebp
xor
mull
jmp
xor
inc
sbb
loope
inc
mov
sub
test
fisubs
add
inc
push
test
and
dec
stos
enter
push
cs
mov
sbb
outsb
sub
lahf
pop
adc
adc
add
jmp
cmp
sahf
adc
in
add
iret
xor
dec
push
xor
adcl
in
mov
inc
bound
jecxz
adc
xor
sub
fidivrs
jmp
je
daa
mov
adc
sbb
mov
or
testl
adc
pushf
adc
sub
rolb
test
lret
and
adc
pop
adc
sarb
pop
stos
pop
add
inc
pusha
mov
add
test
or
adc
push
push
pop
or
movsl
sub
push
adc
aad
and
sub
sub
cmp
jae
sub
add
mov
nop
and
lds
lds
sbb
add
sarb
loope
ret
pop
or
or
sub
inc
stc
mov
out
xchg
jp
inc
push
sub
mov
bound
insb
fnstsw
cmp
movsb
stos
cmp
or
and
sbb
add
lods
inc
scas
mov
roll
or
jge
push
mov
inc
inc
mov
add
mov
sti
jns
push
xor
jae
pop
js
pop
ret
popf
sub
test
in
mov
inc
push
mov
pop
push
fdivrs
clc
aaa
data16
jns
insb
aad
fistps
mov
dec
push
in
add
adc
and
push
xor
addb
inc
dec
es
test
push
rorl
add
aaa
cmp
or
or
mov
push
push
fs
dec
es
push
xchg
cmp
add
push
and
jb
sbb
sbb
stos
cs
add
inc
push
add
or
pop
mov
xchg
xlat
or
mov
cmpsb
cmp
xchg
in
dec
addb
xor
sbb
mov
or
fidivs
sbb
add
rorl
lods
or
aas
pop
adcb
xchg
mov
dec
lret
jl
aad
std
and
jp
jle
mov
xor
xchg
inc
dec
cmp
and
lds
sub
add
leave
adc
inc
pop
push
mov
inc
dec
dec
dec
and
or
add
and
subb
push
xchg
and
hlt
dec
nop
or
int
xor
cmp
lods
push
jb
lock
out
xor
imul
lret
inc
das
pop
inc
nop
lret
pop
or
sbb
cltd
inc
sub
xchg
xchg
cmp
jbe
or
cmp
je
mov
or
inc
popa
add
mov
lret
xor
or
lret
and
xchg
xor
and
inc
in
or
adc
popa
ret
and
add
inc
lea
ret
inc
push
sbb
call
mov
and
sub
sbb
pop
mov
sub
xor
adc
scas
pop
psraw
push
push
push
push
sub
test
xor
dec
dec
push
add
sub
hlt
adc
adc
je
jg
ret
and
cmp
ret
out
push
inc
adc
loope
cmp
aad
pop
imul
xchg
icebp
push
das
xchg
pop
pop
cli
add
push
pop
add
inc
cs
lock
add
xor
add
pop
or
mov
fwait
pop
or
mov
xor
add
push
add
push
jne
or
cmp
pushf
fstps
cmpsb
ret
rolb
mov
dec
mov
aam
adc
sub
mov
sub
jmp
push
pusha
and
inc
inc
mov
pushf
xchg
repnz
int3
jns
test
xchg
sub
cli
incl
xchg
xor
sbb
and
sbb
sub
outsb
sbb
flds
mov
jl
in
hlt
test
add
add
sub
inc
std
cmp
and
leave
xchg
aam
pop
mov
leave
sub
xor
fists
sbb
cmp
cmp
dec
pop
inc
pusha
push
mov
inc
mov
shlb
inc
fwait
scas
pop
dec
call
je
adc
dec
fdivs
sahf
jg
out
fstl
leave
push
push
or
mov
push
pop
or
add
andl
push
or
push
inc
jne
push
cmp
push
fiaddl
or
cmp
call
xchg
xor
or
push
dec
or
in
dec
sahf
or
xor
cs
pop
shr
and
adc
xor
inc
fdivrl
test
inc
jnp
aas
adc
push
inc
pop
xchg
xor
mov
cmp
sub
test
cmp
aam
int
add
inc
sub
enter
jnp
pop
jb
lods
mov
lret
call
sbbl
nop
loopne
fmull
outsb
repnz
xor
fcompl
movsb
xchg
push
push
and
int3
sbb
repz
sub
xor
sbb
fcomp
sbb
adc
cltd
xchg
sbb
fs
shlb
lret
stos
aam
or
in
xchg
sbb
enter
push
fs
rcrb
jle
inc
xorl
and
sub
dec
cmpb
xchg
and
xor
repnz
iret
add
aam
repnz
cmpb
mov
sub
cmp
and
sub
bound
jne
sub
je
jno
test
jl
jo
sbb
cmpb
sub
das
jmp
mov
sahf
mov
add
std
adcb
jge
dec
mov
pusha
movl
test
scas
push
shrb
or
imul
ja
pop
pusha
dec
and
pop
sub
cs
jne
add
jns
mov
pusha
lds
or
out
xor
das
or
sub
jg
inc
rorb
icebp
sub
push
pop
or
mov
loopne
xor
or
xchg
xchg
cmp
xor
bound
xor
xchg
je
cmc
push
push
add
add
push
mov
sbb
xchg
add
sub
or
in
pop
js
loopne
lea
sbb
push
push
push
push
js
sbb
call
push
call
nop
sub
icebp
arpl
jne
js
xchg
sub
adc
sbb
sub
clc
pusha
xchg
andb
subb
adc
pop
push
aaa
sub
mov
dec
pop
ss
sub
jmp
or
test
xor
lahf
sbb
ljmp
outsb
sub
dec
cmp
xor
add
sub
xchg
test
cmp
or
les
and
sbb
inc
mov
out
les
aaa
arpl
aas
fstpt
mov
arpl
cld
cld
movb
daa
xchg
add
inc
arpl
cmpsb
aaa
mov
pusha
adc
or
inc
rcll
imul
ljmp
or
orb
inc
adc
nop
inc
jno
push
call
push
cltd
pusha
in
stos
and
pop
sbb
arpl
sbb
push
mov
inc
sarb
inc
sahf
inc
cwtl
aas
pushf
add
cltd
add
movsb
iret
push
jnp
cmp
xchg
outsb
pop
and
es
cmpsb
cmp
adcl
push
aas
test
clc
lea
mov
push
mov
clc
xchg
loopne
in
sbb
cmp
jb
jb
scas
shrb
xorb
mov
mov
jge
xchg
mov
sbb
jbe
push
and
push
hlt
push
call
push
inc
xor
jo
or
inc
stos
roll
sbb
sbb
ljmp
adc
or
movsb
or
add
insb
mov
in
in
nop
and
test
adc
or
xor
dec
in
mov
cmp
xor
gs
or
mov
mov
bound
sub
aam
push
cmp
pushf
orl
mov
dec
es
sub
sbb
dec
sbb
fs
dec
aas
adc
add
pop
or
and
ljmp
mov
das
mov
lock
and
rorb
dec
outsb
mov
add
loop
bound
push
pop
jo
pop
inc
dec
int3
aaa
addr16
xchg
sub
jns
addb
test
add
mov
repz
sub
or
xor
leave
sub
and
lds
adc
or
adc
or
pop
fs
test
sahf
sub
xchg
dec
mov
push
push
call
sbb
mov
xor
cmp
ds
cs
push
jno
leave
sbb
aaa
xor
mov
xchg
push
pop
or
cmp
jbe
cmc
add
mov
cmp
sub
xor
ds
add
mov
ljmp
lds
nop
dec
fwait
pop
lds
pushf
sbbl
adc
sbb
dec
push
and
sub
adc
xor
rorb
adc
cmp
mov
aas
nop
sbb
pusha
pop
dec
aas
pop
imul
add
mov
and
or
test
pop
nop
in
mov
and
jl
push
fisubrl
std
adc
lcall
sbb
pop
pop
aaa
sti
daa
sbb
and
or
sbb
or
push
cmp
dec
jns
iret
pop
xchg
pop
and
pop
mov
jge
pop
sub
je
lea
mov
jo
sbb
cmpsl
pop
mov
sbb
pushl
push
in
and
jmp
mov
add
popa
and
xchg
mov
addl
sub
dec
test
mov
cmp
jmp
stos
cmpsw
paddsw
jns
je,pt
iret
out
jns
adc
insb
adc
subb
cmpsb
xchg
xchg
inc
mov
adc
push
rorb
or
roll
les
scas
mov
adc
dec
add
xchg
cmp
add
subb
sbbl
dec
mov
mov
jl
push
pop
test
inc
push
loopne
adcb
insb
push
scas
pop
mov
xchg
xchg
cs
xor
sub
push
imul
es
xchg
or
fimull
ds
jl
cmp
jae
mov
xor
cmp
out
fxch
xchg
sbb
mov
rorb
push
pop
cmp
push
lret
pusha
add
push
pop
dec
loope
repz
cmp
jle
test
or
fnsave
dec
add
and
jmp
je
jns
and
rcrb
lea
rorb
xchg
iret
mov
sub
dec
add
push
test
or
and
xlat
xor
sbb
shr
push
xchg
sbb
aam
or
fadd
jg
gs
jmp
xchg
add
sub
inc
js
adc
inc
jo
push
es
mov
addb
inc
xchg
sub
sub
sub
jl
or
test
aad
popf
jb
jne
xor
mov
jne
enter
orb
add
addr16
push
shlb
sbb
sub
add
add
add
int
ss
test
pop
mov
add
adc
push
leave
dec
orb
sbbl
xchg
nop
addl
and
push
imul
les
inc
ret
insb
out
and
iret
mov
inc
cmp
sbb
pop
inc
xchg
adc
xor
shll
and
jne
arpl
mov
pop
aam
stc
fsubs
jo
hlt
mov
mov
add
lea
xor
inc
xor
or
sub
adc
push
adc
mov
pop
aaa
and
mov
xchg
ficompl
jl
fstpl
dec
pusha
push
and
add
mov
sub
push
add
imul
dec
sub
push
mov
lods
push
and
or
cmp
adc
call
mov
inc
andl
and
cmp
popa
inc
scas
mov
dec
mov
rclb
push
testl
or
sub
xchg
push
adc
and
jle
inc
test
adc
add
insl
cmp
push
and
rcrl
sti
jp
push
test
push
out
bound
mov
adc
adc
jno
mov
nop
imul
push
mov
xor
dec
cmpb
call
xlat
add
jp
mov
out
adc
xlat
or
inc
cmp
jae
mov
inc
rorb
and
ret
adc
add
xlat
in
clc
adc
sbb
inc
imul
aas
bound
pop
mull
pop
pusha
and
add
or
ret
xchg
add
cmpl
or
scas
adcl
aas
lea
pusha
dec
jmp
imul
xchg
hlt
adc
sbb
lods
lea
mov
sub
jg
or
ja
pop
sub
cmp
xchg
lahf
xor
jb
mov
push
add
fcom
push
mov
add
sarl
jb
loop
sub
xor
sbb
out
pop
dec
add
aam
xorl
push
ljmp
jne
mov
in
jl
adc
or
add
and
pop
fsubrl
rcr
dec
push
sbb
pop
mov
inc
lahf
sbb
mov
mov
adc
xor
jo
loope
and
push
inc
inc
xor
sub
and
jg
lcall
pop
pusha
flds
adc
sub
fs
jge
fwait
push
sub
mov
adc
pop
add
rclb
adc
xchg
xor
xor
add
pop
and
or
sub
xchg
xor
mov
pop
cli
sbb
mov
mov
add
dec
pop
adc
add
ljmp
push
in
lods
mov
push
add
jb
lock
push
and
das
mov
sarb
xchg
cld
xchg
sbb
adc
rol
test
in
mov
lds
adc
sarb
sub
push
insb
xor
nopl
xlat
hlt
fiadds
ljmp
and
pop
in
addl
push
mov
cmp
xchg
sbb
or
inc
jbe
cmp
xor
test
dec
or
push
shlb
push
pop
push
push
inc
lock
mov
sub
mov
test
push
fistpl
fistpl
nop
ss
or
sbb
mov
cli
mov
cmp
mov
sbb
xor
iret
inc
divb
sbb
xchg
mov
pop
add
test
dec
int3
add
mov
and
fdivl
outsb
loope
cld
pop
xchg
sbb
xchg
test
movsb
pop
testl
aaa
pop
dec
fwait
push
int3
push
outsb
jb
mov
inc
mov
or
mov
nop
loopne
sbb
lock
pushf
xchg
xor
mov
add
dec
push
dec
xor
inc
sbb
sub
imul
mov
mov
adc
insb
movsb
mov
sbb
mov
inc
lods
push
js
xor
aaa
shl
push
pushf
out
dec
or
movsb
inc
or
inc
lea
lcall
cmpsl
fsubs
insb
test
in
or
test
inc
add
in
inc
or
cmp
lahf
add
xor
xchg
rclb
movsl
and
das
pop
dec
cmp
jl
push
mov
push
and
xchg
dec
loop
sbb
sbb
rdtsc
mov
mov
jl
xchg
aas
add
mov
out
cmp
outsl
push
jne
cmp
je
cmp
cmp
decl
je
cmp
je
cmp
je
push
inc
cmp
dec
lret
push
mov
push
push
xchg
mov
dec
hlt
jne
loop
xor
add
cli
outsb
push
stos
pop
cmp
mov
mov
cmpb
je
stos
mov
addr16
test
sbb
inc
data16
pop
sbb
sarb
maxps
adc
and
sub
add
mov
mov
fwait
loop
in
adc
cmp
enter
cld
jecxz
adc
or
adc
jno
push
jo
inc
lock
daa
cltd
add
sub
xchg
pop
movsb
mov
lock
or
mov
xor
pop
loopne
xchg
xchg
mov
xor
popf
jge
sbb
xchg
mov
adcl
xor
pop
nop
push
lock
pop
mov
mov
push
imul
push
aam
gs
add
sub
aam
in
cltd
aam
xchg
adc
in
mov
adc
jle
and
adc
aaa
in
dec
dec
xorl
das
sar
arpl
outsl
xchg
xor
dec
sbb
xchg
and
or
orb
cmp
sub
mov
aam
mov
push
cs
imul
mov
sbb
jns
mov
adc
shll
and
and
sub
adc
lock
or
ljmp
pop
cmp
loope
clc
push
test
cs
gs
and
inc
xchg
push
sub
aam
push
sbb
clc
pop
imul
mov
stc
inc
sub
push
and
rcll
sbbl
mov
and
aaa
lcall
jne
xor
mov
jmp
imul
and
sbb
out
int3
mov
ljmp
dec
xchg
mov
mov
and
or
test
jmp
jl
inc
xorl
mov
mov
mov
mov
or
iret
test
scas
or
rolb
scas
jns
subl
mov
aas
bound
inc
lds
adc
xor
adc
adc
mov
xchg
push
push
call
adc
imul
or
mov
and
dec
push
inc
mov
aam
jmp
mov
arpl
shrb
sub
lcall
sub
outsb
sbb
aas
sub
pop
dec
jae
cmpsb
jmp
cmp
aaa
inc
loope
movswl
cmpb
jp
jge
filds
clc
jge
and
mov
inc
xor
mov
popf
xchg
aaa
mov
icebp
jg
inc
mov
add
hlt
cmp
stos
fwait
add
movsl
mov
lcall
pop
les
aad
cmp
je
mov
scas
mov
jnp
sbb
sar
mov
mov
jecxz
test
test
cwtl
mov
xchg
ljmp
in
insl
jbe
shr
cld
jbe
cmp
lods
psrld
repnz
pop
or
xchg
pop
mov
inc
xchg
mov
sbb
mov
xor
or
add
push
pop
push
pushf
nop
adcb
cwtl
flds
push
add
mov
adc
sub
inc
add
sbb
or
and
add
dec
call
sbb
or
inc
adc
mov
cmp
xchg
pop
xor
data16
test
pop
lea
sub
jno
enter
ret
jne
push
shlb
stos
out
mov
incl
jo
push
repnz
mov
lcall
dec
dec
cmp
push
mov
inc
xor
fiaddl
sbb
jg
ret
and
dec
cli
and
sti
lahf
xchg
aaa
add
push
sub
inc
jecxz
pusha
insl
sbb
add
rorl
mov
push
add
dec
cmp
pop
sub
dec
rcrl
lds
test
push
mov
mov
pop
adc
or
clc
mull
inc
inc
mov
jno
dec
ss
cmp
jg
dec
add
mov
mov
mov
xorb
and
mov
aaa
aas
test
mov
pop
or
adc
push
test
js
les
lea
add
jl
xchg
out
sub
sbb
inc
sbb
pop
cmpl
adc
add
insb
add
and
cmp
pop
test
and
or
pop
pop
inc
and
add
mov
jl
inc
aam
aaa
xor
sub
adc
nop
subb
cld
jle
sub
sbb
sar
xchg
inc
cmpsl
sbb
stc
push
outsb
insb
pushf
mov
add
loop
test
mov
leave
jl
sub
pop
xchg
je
pop
rclb
push
cmp
jne
int3
push
sub
sbb
pop
pop
mov
cmp
inc
je
inc
sbb
push
add
mov
loop
movsl
jecxz
rolb
mov
shlb
fs
test
add
ret
sahf
xor
xor
push
les
jl
inc
jge
out
push
lds
jae
rorb
sbb
xchg
push
mov
cli
push
or
cmc
or
psrld
jle
xor
pop
aam
fs
jae
and
jnp
roll
jmp
adc
mov
ja
push
addr16
test
pop
jo
js
es
jmp
inc
scas
mov
adc
and
add
push
push
push
mov
pop
jle
cmp
add
sub
pop
ja
pop
enter
fs
cmp
pop
xor
arpl
adc
fldenv
push
inc
or
mov
sbb
enter
cmp
movsb
sbb
stc
data16
pop
pop
les
add
mov
cmp
push
xchg
mov
adc
js
add
sbb
gs
adc
popf
pop
sub
mov
ss
aaa
mov
icebp
push
push
push
movsb
mov
repnz
inc
adc
push
inc
add
loopne
dec
sbb
inc
adc
insb
sbb
jmp
data16
push
or
arpl
add
mov
es
adc
nop
test
jmp
xchg
jns
dec
mov
push
adc
inc
and
aaa
movzbl
outsb
inc
add
inc
shrb
xchg
jo
nop
push
sahf
jl
out
stos
mov
sub
inc
dec
add
dec
pop
and
repz
dec
push
and
push
inc
adcb
adc
dec
cmp
fldl
ret
lret
call
inc
sbb
aas
mov
test
xor
xchg
push
cmp
push
pop
addr16
sub
jg
pop
cmp
add
mov
pop
cmp
jl
jbe
cmp
pop
or
dec
idiv
sub
addr16
jne
jo
and
mov
ja
jge
pushf
mov
shlb
loopne
add
adc
push
add
sti
inc
xchg
inc
sti
lahf
push
xlat
pop
lock
jns
mov
cmp
jne
test
je
aaa
push
cld
adc
es
movsb
add
mov
add
jbe
pop
mov
std
or
cmp
mov
aad
jne
jle
sub
sarb
pop
hlt
jg
inc
pushf
and
pop
or
sub
pop
sub
das
or
add
sub
cmp
jb
cmp
pop
or
pop
or
jne
sbb
mov
mov
inc
and
and
sbb
icebp
pop
xor
push
je
push
repz
addb
jg
iret
and
loop
cmpsb
mov
inc
test
out
mov
mov
sbb
pop
js
cltd
or
mov
xor
repz
andb
add
xchg
ss
mov
divl
xchg
push
dec
aam
add
or
imul
cmp
mov
inc
mov
movl
sbb
in
mov
mov
mov
fistps
cmp
sbb
ljmp
loop
sbb
add
cwtl
push
nopl
push
pushf
cmpsl
lret
xchg
aam
or
xor
sbb
xchg
fs
sti
xor
orb
cld
jne
repnz
daa
pop
xchg
je
out
xor
inc
or
es
and
lea
push
or
imul
testb
pop
dec
jo
add
sarl
sbb
or
sub
dec
jle
pop
leave
nop
or
ljmp
cmp
cmp
adc
dec
dec
jne
mov
movsl
xchg
nop
sub
dec
aad
or
mov
iret
mov
dec
or
add
inc
add
adc
loope
or
push
out
mov
sub
and
mov
xor
push
or
lock
cmpsl
add
push
sub
push
test
add
mov
and
ja
sbb
add
pop
das
jl
jecxz
les
and
inc
js,pn
xor
pop
or
mov
cmp
cltd
pop
icebp
xor
ret
in
xchg
adc
out
or
xchg
pop
lea
stc
clc
or
ljmp
add
add
adc
mov
or
cmpb
add
scas
xor
in
gs
cltd
sub
push
cmp
sub
adc
rorb
add
std
adc
mov
mov
lods
or
cmp
stos
pop
add
sbb
test
sub
cltd
sub
repnz
inc
sbb
in
lcall
jne
dec
push
jne
cmp
jb
sub
jmp
push
dec
icebp
push
jl
movzwl
dec
pop
cmpl
push
setl
movzbl
push
jnp
mov
mov
push
push
adcb
push
push
mov
pop
cmp
loopne
mov
mov
and
lods
sahf
and
pop
cmp
and
sbbl
cmp
jns
add
ljmp
jns
push
shrl
xorb
pusha
inc
enter
mov
and
sbb
pop
push
xchg
out
xlat
sbb
nop
and
push
or
in
iret
sbb
roll
mov
daa
or
dec
push
mov
xor
xor
sub
xchg
ds
mov
fldenv
cmp
in
aas
mov
pop
push
hlt
movsb
add
mov
xchg
daa
push
cmp
jno
add
mov
inc
inc
sub
add
add
add
aam
icebp
or
fwait
cmp
or
cmpsb
sbb
in
adc
add
adc
adc
adc
sub
inc
adc
lods
mov
das
adc
xor
pop
push
push
push
sarl
push
scas
and
cmp
dec
sub
and
ret
loope
mov
jge
jno
test
jb
clc
dec
lds
sbb
repnz
loop
sbb
push
imul
inc
inc
fmulp
add
sbb
push
repnz
xor
test
jns
imul
roll
popa
add
sbb
push
mov
lret
dec
aam
push
rorl
stos
jg
inc
scas
inc
push
popf
adc
xchg
xchg
js
adc
sbb
lods
movsl
adc
sbb
xchg
or
add
jb
jb
cmp
inc
and
adc
add
or
and
lea
leave
sbb
jb
daa
sub
or
rorb
jecxz
js
push
sbb
mov
cmpsb
clc
or
bound
sbb
or
mov
lock
and
add
fsts
cmpsb
sbb
sub
pop
lcall
nop
sub
push
dec
add
jge
push
inc
and
add
push
orb
mov
hlt
add
push
pop
add
adc
jbe
loop
mov
cld
jns
pop
add
push
js
loopne
push
mov
ja
jmp
mov
pop
or
xchg
xor
jmp
pop
jg
sbb
or
test
mov
fwait
adc
movsb
and
cmpb
jno
pop
mov
paddsb
push
mov
ret
push
test
imul
dec
hlt
cmp
jle
lea
cmp
jl
jbe
rorb
pop
jne
pop
push
adc
sbb
cmp
and
mov
repnz
and
mov
cmp
fimuls
inc
arpl
push
dec
fldl
jo
add
ja
and
je,pn
jne
add
sub
mov
sbb
bound
cmp
mov
push
sbb
sub
dec
arpl
push
sbb
cmp
andl
pop
add
dec
dec
nop
and
rolb
stos
nop
adc
jne
adc
and
lock
xchg
xchg
decl
push
or
and
nop
sbb
xor
movsb
pop
adc
xchg
or
or
in
je
orl
add
out
addl
cmc
push
or
popa
pushf
insl
mov
jecxz
mov
push
mov
addb
ss
cmp
outsb
add
push
sbb
pop
sbb
push
jno
lea
pop
aaa
mov
or
dec
arpl
lea
or
xchg
mov
mov
adc
shll
xchg
ljmp
push
mov
enter
pop
pop
adc
sbb
push
fildll
sub
jne
sub
test
jg
inc
add
mov
enter
xchg
pop
repz
jge
mov
mov
xor
sub
mov
cmpsl
in
aas
push
imul
sarb
sbb
jmp
inc
sbb
xor
ljmp
xchg
test
inc
adc
or
adcb
xor
ss
cld
ja
sbb
inc
adc
add
imul
sub
in
push
inc
fwait
dec
jns
push
or
mov
inc
mov
enter
push
inc
test
loopne
push
iret
sub
lahf
push
inc
or
ds
std
xor
fisttps
stos
and
cmp
xchg
pop
lock
or
cs
aaa
je
xor
pop
or
rolb
xor
push
or
jl
xlat
xlat
inc
sub
fsubs
inc
xor
ret
insl
cltd
mov
pop
insb
add
inc
lods
or
push
movsb
aaa
dec
ret
push
push
xchg
aam
xchg
wrmsr
in
rcrb
jo
inc
jo
rcrb
dec
xor
shrl
je
and
pop
or
jno
ret
out
adc
and
ficoml
adc
fst
pusha
bound
out
into
cmpsl
rcrb
cltd
fsubrs
push
inc
je
lea
nop
out
or
add
push
sbb
mov
add
sbb
mov
inc
rolb
jbe
insl
xchg
sub
add
mov
fisubrs
cli
add
or
pop
lahf
push
aad
cmp
xor
sahf
addr16
dec
lods
push
jbe
dec
mov
data16
sub
addr16
mov
inc
cltd
or
in
cmp
mov
sub
and
les
addr16
sub
and
int3
shll
adc
pop
ds
xchg
stos
ret
fadds
cmp
int
dec
push
sbb
cmp
test
aad
inc
xchg
mov
std
sbb
push
mov
cmpsl
data16
mov
hlt
cmp
push
adc
cmp
adc
jg
mov
stc
mov
push
xchg
inc
push
xor
movsl
roll
sbb
adc
rorl
lods
xor
mov
push
inc
test
cmp
jmp
pop
inc
xchg
in
inc
sbb
pop
add
cmp
jbe
sbb
mov
push
jae
adc
aam
test
lea
andl
sbb
mov
mov
xchg
pop
mov
int3
int
sahf
out
cmp
jmp
mov
push
mov
lock
sub
sub
push
add
nop
into
inc
out
pusha
push
add
mov
fldl
add
add
icebp
push
mov
lret
mov
sub
sub
add
adc
mov
bound
sub
mov
lahf
inc
mov
jg
add
cmp
or
andb
and
fistpll
and
add
and
gs
sub
or
dec
add
or
xor
sub
daa
mov
cmp
inc
adc
rcr
fsubrs
jb
mov
cmp
jmp
jne
ret
jne
mov
test
add
add
sub
lcall
push
add
cltd
sub
hlt
mov
jl
je
test
jl
add
outsl
test
jg
mov
popl
mov
jl
shrl
in
fildl
clc
jle
dec
cmpb
dec
push
mov
mov
push
aaa
push
adc
cmp
push
push
out
mov
div
mov
mov
fcomps
xchg
icebp
fwait
aad
nop
sub
movsb
cmc
sbb
pushf
lret
aam
sahf
shlb
add
jae
mov
shl
push
xchg
lock
adc
or
roll
out
cwtl
or
and
in
sti
push
push
fcmovu
and
cmpsb
fldcw
cld
pop
ret
lock
push
or
out
push
pusha
movsb
test
sub
out
inc
loopne
mov
ret
div
mov
add
dec
xchg
jbe
adc
rol
cmp
sbb
dec
ss
pop
mov
xorb
xchg
test
loopne
fimull
pop
pusha
or
or
data16
mov
jmp
mov
jnp
push
xor
mov
xor
jo
mov
mov
or
or
inc
outsb
sbb
mov
jmp
pop
add
add
sub
or
mov
mov
and
xor
jb
pushf
lea
push
push
shl
sub
xor
outsb
sbb
add
dec
popa
cmp
dec
inc
add
mov
sbb
push
fiaddl
mov
fwait
movsb
xchg
lock
out
mov
shll
fnstsw
push
push
add
imul
fstpl
adc
outsl
rcrb
popa
dec
mov
seto
aaa
neg
or
iret
out
call
jmp
mov
mov
jne
jp
adc
push
and
mov
nop
bound
jo
push
add
loop
fs
lods
loopne
push
in
cld
jmp
or
mov
mov
jae
or
fdivs
mov
push
movsl
adc
loop
push
test
pop
pop
and
xchg
pop
loope
daa
inc
xchg
jns
sub
call
sub
mov
mov
inc
cmp
xor
or
mov
dec
je
and
pop
je
xchg
mov
mov
and
ret
insb
pop
xor
jb
xor
inc
mov
cmp
add
jg
jp
mov
or
fadds
push
fdivs
fldcw
mov
add
popf
imul
fistpll
pusha
shlb
mov
or
adc
filds
add
mov
aad
ja
or
cmp
aad
dec
push
push
outsl
inc
jne,pn
inc
and
adc
std
add
pop
add
push
push
xlat
inc
sub
shll
xchg
shll
and
rol
loop
es
inc
shll
hlt
imul
push
sub
push
inc
mov
push
mov
mov
call
es
clc
data16
std
dec
adc
sub
imul
dec
or
hlt
mov
pop
cmpsb
push
fcompl
cmp
dec
pop
jge
clc
cmp
jbe
or
out
dec
shrb
mov
pop
lahf
cmpsb
add
lahf
subl
fldenv
movsb
sub
or
xchg
inc
mov
mov
jne
std
mov
jne
mov
pop
xlat
push
in
mov
popa
or
mov
mov
and
inc
adc
add
cmp
les
dec
loop
fmulp
lret
leave
iret
aad
std
scas
fs
sbb
sub
fmuls
push
sbb
inc
sbb
jae
adc
adc
scas
test
divb
add
pop
cli
push
jns
pop
jae
pushf
cmpsl
hlt
add
add
push
mov
inc
or
cmc
xchg
sarl
cmp
jne
cmpsb
sub
xor
push
or
stos
mov
push
dec
or
xchg
orl
dec
inc
jb
je
sbb
cmp
cmp
xor
jae
js
in
rcl
cwtl
add
jecxz
cld
add
sbb
dec
add
xchg
movb
fsubl
push
sub
add
sub
lods
lret
ss
and
cmc
sarb
cltd
jb
nop
cwtl
add
int
stos
pop
xchg
mov
lea
iret
inc
or
enter
adc
cmp
push
js
clc
add
adc
data16
push
push
and
adc
cwtl
inc
rolb
outsl
loopne
mov
pop
dec
aam
cmpsl
xor
es
add
jl
mov
push
call
mov
fsubs
ds
es
xchg
mov
mov
cld
xor
inc
lea
xor
lea
sbb
or
int
shrl
pop
adc
leave
cmp
pop
icebp
insb
lock
ret
push
punpckhdq
pop
js
lock
adc
xchg
cmp
pop
xlat
std
push
lret
pop
je
push
dec
mov
loop
lret
and
loop
inc
xchg
jne
push
push
cld
mov
cmp
add
sbb
xor
push
test
fs
jmp
jno
jg
mov
jo
mulb
dec
add
jns
cmp
pop
jmp
cmpsl
fsubl
clc
je
addl
jg
push
inc
cwtl
pop
mov
popf
mov
jmp
push
jp
filds
push
rorl
mov
adc
shll
inc
aam
sbb
popf
jecxz
jae
add
jle
test
ret
or
xchg
add
dec
dec
xchg
jbe
dec
test
push
push
sbb
rcr
sbb
sarb
push
and
test
jg
cwtl
cmpw
jne
mov
sub
imul
or
mov
mov
mov
push
mov
and
shll
call
jmp
cmp
or
push
cmpl
sarb
or
inc
push
mov
push
lock
lahf
bound
xor
mov
clc
sbb
adc
push
shl
rol
clc
ror
jge
mov
cs
dec
popa
or
lods
lds
adc
jmp
xchg
add
loopne
adc
xchg
decb
pushf
sbb
adc
data16
bound
ds
push
mov
adc
adc
out
sbb
adc
sub
test
sbb
and
and
stc
push
mov
sbb
adc
push
or
dec
jo
jl
js
inc
lods
push
pop
pop
jmp
mov
mov
jo
mov
add
orb
mov
push
mov
sbb
out
lret
je
iret
in
pusha
aaa
xor
lea
add
fs
sbb
js
dec
add
sub
popa
outsb
mov
push
add
jle
mov
mov
sub
ss
in
addb
push
call
lret
sbb
lea
movl
clc
mov
adc
mov
adc
call
in
insb
ja
or
dec
sub
jne
cmc
or
das
and
push
sub
mov
pop
or
inc
cld
sbb
mov
xchg
and
and
pop
fisttps
push
icebp
fsubp
mov
cmp
sbb
push
fdivl
rcrb
push
imul
in
iret
in
xchg
adc
jbe
sub
xchg
jl
push
out
leave
loopne
push
xor
push
jl
cmpsl
movsl
or
lock
stc
fcmovnb
jne
andl
in
inc
add
push
mov
jl
push
aaa
mov
out
mov
add
push
imul
enter
rorb
dec
aam
cmp
sbb
int3
cmp
adc
push
mov
cs
jl
subl
mov
movsb
lock
jb
sub
inc
adc
push
jl
fisttpl
call
xor
test
lds
insl
inc
add
in
sbb
stc
incb
jmp
rolb
lea
lcall
jmp
adc
and
ret
dec
inc
cmp
cmp
mov
mov
and
mov
sub
mov
or
cmpsl
std
inc
enter
jmp
nop
cmpsb
pushf
pop
mov
mov
sbb
dec
add
push
fildl
add
sbb
lcall
mov
push
test
popf
notb
in
aad
cmp
inc
mov
pop
punpcklwd
mov
test
je
rcll
punpcklwd
pop
cs
pop
and
mov
rorl
fsubrl
mov
int3
fst
or
push
ror
and
in
xchg
inc
jmp
jmp
cmp
push
outsl
ja
popf
and
jae
out
das
push
xor
movb
inc
bound
cwtl
xor
sub
dec
cmp
pusha
sub
mov
imul
dec
add
cmp
push
dec
or
add
pop
mov
push
neg
and
out
push
idivb
orb
or
push
mov
pop
jge
sub
inc
test
scas
bound
adc
in
pushf
rcll
aad
ret
xor
mov
cli
inc
sub
mov
sub
ljmp
loopne
cmp
into
pop
mul
mov
cld
add
jne
sbb
setb
jb
rcll
ds
pop
int3
lcall
dec
mov
push
lea
je
inc
jge
push
pop
inc
pop
jbe
jns
rcr
mov
jmp
adc
cmpsb
mov
push
lret
and
pop
insb
out
mov
adc
call
mov
ficoml
outsb
push
and
inc
and
pop
sub
push
ret
push
add
push
jge
cmpsb
adc
inc
push
xor
fdivs
pusha
in
mov
xor
rorl
fimull
outsl
jno
ret
ss
push
int
and
in
push
pop
sbb
sbb
xchg
add
daa
bound
je
cmp
jbe
mov
push
or
jge
and
enter
mov
xor
data16
sarb
bndstx
lea
aaa
dec
lcall
push
lods
lret
nop
or
add
mov
add
rcrb
xor
and
push
pop
jb
adc
add
or
mov
mov
jecxz
dec
xchg
mov
loopne
xchg
jnp
call
test
adc
adc
mov
lds
or
shrl
mov
std
sub
iret
jb
push
pop
push
dec
rcll
ret
or
xor
movsl
jno
movsb
mov
xlat
int3
fwait
mov
inc
lahf
push
jb
ret
pop
push
roll
cmp
ret
jl
push
lock
dec
or
pop
pop
pop
pushf
js
jl
aaa
push
fwait
xor
test
scas
jo
add
mov
ror
cmp
je
jmp
cmp
dec
mov
add
ds
inc
daa
insb
or
cmp
push
add
add
lock
sbb
out
pop
xor
cmp
inc
jl
and
mul
gs
arpl
fs
aam
xchg
mov
sbb
xor
or
outsb
je
push
ret
lea
ss
fstpl
lcall
xchg
int3
add
mov
jae
fs
rorl
and
add
icebp
mov
mov
push
mov
mov
cld
divl
out
push
stos
and
mov
sbb
mov
shl
iret
adc
es
scas
pop
jmp
mov
xchg
movb
not
jno
mov
push
pusha
fbld
clc
dec
das
outsl
sti
or
insl
jne
cs
add
push
jae
repz
sahf
arpl
push
mov
lret
push
je
inc
or
push
or
insb
jne
or
cmp
push
enter
pusha
hlt
inc
std
lods
sbb
js
sbbb
cmp
ret
scas
leave
cmp
dec
push
jo
inc
sbb
mov
pop
xchg
sahf
sarb
adc
scas
test
pop
loop
int3
cmp
je
push
fidivl
push
hlt
adc
push
and
push
leave
cmp
push
jle
xchg
sub
sbbl
inc
cmp
add
fidivrs
popf
sbb
sub
or
cmp
es
rcrb
xor
pop
sahf
xchg
rorb
je
out
jnp
and
push
outsl
mov
cld
pop
push
sbb
push
movl
push
adc
xor
sbb
xor
mov
push
jae
call
xchg
ret
mov
dec
out
mov
jb
cmp
jne
clc
les
jle
lea
cmp
pop
je
out
pop
nop
inc
mov
push
cltd
out
notb
or
sbb
scas
xchg
xchg
push
and
mov
cs
mov
gs
add
cmp
push
pop
ret
bound
pop
fsubrs
cmpsb
pop
scas
mov
add
or
jbe
mov
sbb
insb
ret
sbb
mov
out
inc
mov
lahf
adc
mov
push
into
or
add
cmp
shll
insb
jo
xor
xor
js
iret
iret
movsl
cltd
fmuls
fsubr
mov
or
cwtl
mov
or
push
mov
inc
int3
inc
imul
fwait
inc
mov
scas
sub
lcall
pop
les
idiv
mov
xchg
int
adc
in
xchg
add
data16
mov
cmpsl
movsb
movsl
shll
add
fadds
fs
daa
inc
jl
js
inc
push
fs
jo
fs
push
fs
inc
push
push
cmp
jbe
movsl
movsl
imul
pop
push
add
xor
into
ss
fwait
inc
mov
leave
cmp
jne
adc
and
call
in
cmp
jne
mov
cmp
test
js
mov
dec
pcmpeqw
outsb
adc
in
pusha
adc
xchg
ret
or
bound
jecxz
add
sub
popa
add
leave
lods
cs
fcomip
inc
lret
xchg
fnstenv
movsl
iret
repz
jne
sbb
shll
mov
and
test
xor
xor
pop
cli
push
ja
mov
pop
mov
add
shll
mov
xor
cs
jl
mov
mov
aam
or
pop
cwtl
rorb
or
aaa
adc
rorb
xor
add
test
push
mov
adc
push
or
or
iret
or
pop
mov
inc
shll
jo
xchg
jbe
call
shr
and
test
add
inc
enter
test
lock
add
jne
lea
add
pop
mov
dec
or
adc
cmp
push
xorl
adc
sub
sbb
mov
mov
add
test
out
add
pop
jp
das
or
decb
enter
repnz
out
add
iret
cmp
jmp
cmp
pop
in
clc
out
sbb
jnp
imul
fnstcw
add
insl
pop
jmp
adc
shrb
pop
mov
sahf
mov
ss
push
adc
sbb
je
icebp
jne
sti
mov
lea
xorl
inc
imul
sub
cmp
dec
sub
mov
scas
ja
mov
iret
push
test
cmc
js
jno
mulb
mov
daa
ret
adc
shrb
shr
sbb
add
nop
mov
xor
dec
mov
clc
xchg
jbe
add
rorb
movsb
push
jmp
jg
lcall
loopne
subl
dec
xchg
pop
or
push
inc
shlb
adc
adc
or
fsubrl
dec
mov
add
inc
sub
dec
adc
call
arpl
push
orb
cmp
adc
mov
icebp
mov
jge
loop
mov
and
stc
test
js
nop
add
inc
or
mov
cs
test
fcomps
inc
test
cmp
add
xchg
je
cmp
mov
pusha
push
lea
clc
sbb
or
scas
jo
pushl
in
push
and
mov
mov
fimull
dec
xor
push
pusha
push
lock
adc
sahf
xor
push
inc
xorl
rorl
lock
lods
xchg
mov
pcmpgtw
mov
xor
insb
enter
insb
push
test
movsb
je
mov
clc
je
ds
cmp
ds
ret
ja
and
xor
xor
fistpl
cmp
je
mulb
cmp
mov
mov
adc
in
lock
cmp
je
xor
pop
fstl
push
push
lock
jl
mov
push
sub
inc
pop
xchg
jmp
lea
pop
data16
adcb
add
movsb
andl
dec
cs
into
adc
lock
mov
xchg
mov
add
xchg
fidivrl
jo
cmp
scas
inc
mov
fs
add
loope
ss
mov
int
mov
mov
sbb
add
add
push
mov
cmpsl
xor
sub
lea
mov
sub
cs
jecxz
mov
sub
or
xchg
or
jne
jl
testb
or
add
xor
pop
and
dec
je
pop
sbb
test
or
sub
test
ljmp
push
sbb
jecxz
lcall
adc
mov
loopne
adc
js
push
xor
sbb
sbb
or
lods
lds
insb
clc
or
mov
push
push
jge
jne
enter
push
mov
mov
inc
mov
cs
inc
dec
xchg
mov
jmp
popa
insb
sub
fists
outsb
and
xor
mov
cltd
divl
push
sbb
fisubrl
and
fidivrs
mov
movsb
push
test
sub
jo
push
inc
lock
cmp
je
jle
mov
out
cmp
push
and
sbb
push
lea
add
push
adc
add
andb
aam
sbb
dec
inc
push
mov
push
or
sbb
pop
imul
lods
add
adc
enter
xchg
fcoms
cli
imulb
cs
add
clc
pop
xor
pop
and
add
mov
fcmovnb
inc
fs
adc
mov
jb
fsubrs
mov
pop
arpl
jnp
jns
and
sbb
push
push
rorb
inc
shlb
addl
mov
test
call
loopne
les
adc
pop
dec
notb
pop
inc
ja
or
je
xchg
sbb
push
sbb
jb
aas
jb
pop
loopne
or
adc
ja
outsl
loopne
add
mov
ud2
push
test
std
and
sbb
jg
adc
test
push
cmpb
sbbl
pop
adc
pop
lea
insl
arpl
adc
pusha
pop
sub
loope
sbb
adc
sbb
ds
pop
push
or
and
subl
fistl
ss
pop
into
jecxz
cmp
or
jl
data16
cmp
cltd
cmc
test
ds
inc
aam
inc
jo
xchg
lret
or
mov
cmp
out
pop
add
mov
cmp
cmp
adc
sbb
or
push
fistpl
adc
cmp
or
ds
and
jmp
sbb
push
mov
mov
test
push
jmp
mov
mov
and
outsb
xchg
shrb
adc
fimuls
pop
enter
aam
in
mov
mov
xchg
mov
stc
movsl
add
idivb
je
mov
mov
dec
adc
sbb
movsb
mov
icebp
jo
push
cli
mov
mov
push
pop
popf
push
cmp
push
xchg
orb
mov
lock
cwtl
push
je
test
jb
popa
outsb
stos
mov
cmp
ret
pusha
mov
ss
insl
aaa
int3
add
mov
aas
fsubr
test
inc
lods
movzwl
pop
or
test
cli
jne
daa
mov
push
dec
push
push
push
push
je
cmp
orl
stos
mov
or
adc
data16
pmaddwd
lea
push
push
xor
out
jp
push
or
sbb
enter
in
pushf
ja
in
pop
sub
mov
imul
inc
insb
xchg
clc
xor
adc
repz
sahf
mov
lods
fisttpll
sbb
stos
cmp
jl
or
cmp
mov
ljmp
add
mov
and
or
jl
xchg
ret
xchg
cli
rol
aas
push
loopne
push
sbb
xor
pop
js
lods
cmp
stos
js
mov
push
aam
nop
mov
pop
xor
insb
stos
sub
xor
adc
addr16
inc
stos
xchg
loope
push
cmp
decl
mov
mov
xchg
cs
popl
rdmsr
sarb
stc
daa
jmp
addb
in
sar
pop
fstpt
xor
call
mov
pop
lds
jnp
pop
pushw
push
jo
bound
push
mov
pop
cmp
out
xchg
jns
or
xor
aam
push
fstl
outsb
push
or
or
push
and
fcom
and
xchg
fsubl
sub
out
mov
inc
addl
lods
add
lret
std
push
and
mov
xchg
fbld
cmp
adc
in
sub
sub
aaa
test
neg
sbb
xchg
push
cmp
ret
popf
mov
cltd
cmp
adc
ret
test
sbb
je
add
cmpl
insl
inc
insb
js
lret
roll
je
xor
lea
fdivrl
xor
or
addl
push
loopne
test
adc
and
pop
inc
xchg
dec
incl
loop
ljmp
js
lret
inc
outsb
jl
aas
jmp
outsl
dec
sbb
inc
jmp
pushl
jo
push
pop
mov
lea
mov
adc
inc
cmc
ss
cmp
fcomps
push
inc
push
jmp
rorl
rcl
ret
and
in
mov
inc
idivb
addb
pop
inc
lock
jbe
mov
jl
andl
pop
xchg
inc
adc
pop
sbb
fidivl
pop
cld
and
test
inc
loope
xor
pop
loopne
jecxz
gs
pop
lahf
pushf
dec
xor
pop
sahf
push
xchg
dec
fisubrl
popa
data16
mov
mov
xor
sbb
test
add
pusha
pop
push
xor
adc
jno
rol
aad
add
les
test
mov
or
andb
add
bound
loope
mov
jl
jmp
pop
sbb
cmp
test
lcall
dec
dec
rorl
pop
sbb
add
test
xlat
shr
pop
arpl
dec
insb
mov
dec
adc
pop
jns
in
clc
inc
push
inc
adc
inc
add
and
fdivs
lods
mov
cld
jmp
addl
pop
pop
dec
scas
es
xor
orb
or
push
leave
orl
lock
push
sbb
xchg
je
cld
popl
sbb
cmp
cmp
sub
xchg
xor
js
imul
ret
test
idiv
inc
sbb
or
add
xchg
add
call
jbe
dec
jl
loope
xor
add
pusha
or
in
pop
sbb
movzbl
rclb
arpl
mov
dec
pop
mov
mov
mov
inc
mov
mov
int
mov
lcall
mov
stc
push
mov
test
shlb
push
xor
addl
ja
movswl
add
and
cmp
add
cltd
add
adc
movsl
aaa
add
or
data16
int3
sbb
fstpl
mov
test
mov
push
sub
dec
insb
scas
xchg
push
cmp
filds
popa
cmp
lea
jmp
xor
mov
call
movhps
loop
das
xor
daa
rcl
cmpsb
faddp
addl
shlb
inc
cmpsb
push
loope
mov
mov
nop
jmp
sbb
gs
dec
lcall
ss
push
pushf
pushfw
inc
xlat
adc
lods
xor
test
rcl
push
fst
push
mov
mov
inc
aaa
sahf
and
jl
pop
add
pop
outsb
movsb
xor
aaa
dec
push
jo
jmp
add
pop
ss
bound
push
push
pop
or
cmpsb
jl
mov
imul
pop
push
idiv
sub
cmp
mov
pop
testl
inc
add
rcrb
fcoms
xchg
js
xor
ret
sbbb
xchg
jp
out
jb
sbb
or
leave
pushf
mov
push
icebp
enter
mov
xchg
mov
cmp
add
push
or
inc
pop
pop
enter
add
add
idivl
pop
add
push
xchg
je
out
gs
dec
lock
adc
inc
clc
andl
add
xchg
adc
int
fildl
pushl
rcl
xor
or
sarb
jle
mov
add
add
xchg
movsb
sbb
pop
mov
rorb
jo,pt
mov
xchg
sub
movsl
aam
pusha
adcb
scas
sub
add
ljmp
mov
dec
pop
or
jge
ljmp
sbb
pop
and
fsubl
jl
and
add
ret
sbb
mov
mov
jmp
pop
jae
sbb
jo
aas
pop
xor
add
rorl
insb
mov
add
andl
adc
mov
push
pop
jmp
lea
add
int3
adc
sbb
ret
add
insb
test
mov
pop
fisubl
cmp
adc
add
lock
xor
imull
pop
cmp
cmp
add
sti
add
mov
xor
pop
flds
dec
adc
arpl
loop
mov
shlb
cmp
addr16
mov
test
push
add
and
je
cwtl
hlt
aas
xchg
int
sarl
adc
mov
sub
jne
xchg
inc
cli
push
sub
sahf
test
mov
xchg
clc
jle
sar
push
aam
jge
movl
xorl
inc
add
mov
xor
arpl
repnz
adc
or
mov
sub
jge
fcomi
pusha
insb
std
mov
decb
add
mov
adc
fucom
mov
jb
jb
mov
lock
rorl
mov
lock
cmpsl
lea
rclb
bound
clc
inc
cmp
dec
sbbl
sbb
push
popf
cmp
pop
adc
sub
shrb
xchg
jne
add
jns
pop
cmp
pop
sbb
loope
jnp
jge
cmp
mov
or
jle
push
push
xor
cmp
inc
rorb
inc
sbb
inc
ret
xchg
andl
push
jnp
sub
adc
mov
mov
xor
xlat
or
sbb
adc
adcl
jmp
ret
movl
movsl
addl
insb
jno
jo
sbb
and
fistpl
xor
ud0
mov
cmp
add
movb
and
orb
je
adc
mov
sub
mov
or
mov
pusha
hlt
sbb
sub
push
lret
push
fisttpl
mov
pop
mov
lea
and
push
mov
ss
inc
xor
add
es
dec
push
dec
sub
hlt
out
add
or
dec
add
xchg
pop
loopne
jg
mov
out
add
jo
push
in
add
es
insb
or
xlat
push
inc
jo
in
and
push
out
fmuls
cmpsb
mov
movsb
in
xchg
or
pop
cwtl
hlt
inc
inc
jno
add
xor
xchg
lret
push
xchg
pop
adc
sbbb
xchg
ss
out
cmp
sbb
mov
or
add
jp
loop
mov
pop
call
test
orl
lea
test
mov
push
push
adc
inc
push
dec
dec
adc
push
push
and
enter
loopne
inc
push
xchg
and
aas
fiaddl
add
pop
pusha
dec
rcll
adc
jg
adc
lea
out
xor
adc
inc
xor
mul
lock
sub
fs
dec
sbb
pop
stos
push
cmpsl
test
cld
mov
adc
add
rcrb
fiadds
out
aas
setle
mov
push
push
sbb
call
orl
dec
or
fadds
push
xchg
or
or
cmpsb
mov
aaa
sbb
xor
or
outsl
sbb
or
xchg
lock
xchg
sub
mov
lret
add
popf
mov
mov
hlt
xchg
cltd
fnsave
shll
cmp
les
mov
testl
xchg
pop
nop
jle
xor
or
stc
int3
and
and
rorl
xlat
ror
adc
mov
add
cmp
add
loope
dec
insb
dec
imul
jo
mov
push
mov
or
jae
push
push
rcrl
into
std
xchg
insb
jl
movl
xchg
pop
push
push
jl
aas
pop
adc
into
add
xor
xchg
data16
dec
lea
sbb
mov
in
dec
mov
lods
or
shlb
gs
clc
fwait
mov
clc
push
testl
mov
ret
sahf
iret
jae
cmpl
mov
push
rolb
arpl
pop
xor
jge
inc
and
dec
pop
lods
push
xor
mov
mov
in
jge
add
sbb
aaa
adc
add
dec
add
int3
sti
sub
add
mov
mov
jo
nop
scas
xchg
cmp
sbb
xorb
cmp
setbe
cmp
inc
cmc
add
mov
or
int
add
push
xor
xchg
scas
jo
lcall
or
push
push
in
loop
pop
add
lret
sbb
jbe
push
push
dec
and
sbb
dec
pop
das
test
push
mov
insb
shl
pop
icebp
outsl
dec
add
ret
div
les
push
xor
pop
sbb
push
push
cmp
loop
addr16
in
out
push
jbe
add
adc
outsl
or
add
sti
dec
ja
je
or
je
or
sub
xchg
adc
adc
call
jl
imul
lock
add
add
push
push
fists
or
mov
negb
pop
cli
push
jmp
cmp
adc
dec
movsl
test
push
cmp
pop
push
inc
push
rol
mov
sti
ret
xor
dec
negl
inc
and
call
push
adc
mov
mov
ret
and
jge
test
out
or
pop
test
sbb
je
and
add
movsb
push
push
cmp
jmp
daa
adc
push
dec
dec
ds
mov
movsl
and
push
inc
es
and
inc
sbb
push
mov
push
push
or
mov
ret
push
mov
dec
je
sub
in
loop
sub
aad
add
hlt
add
loopne
inc
push
adc
jp
mov
cmp
das
ds
or
push
adc
inc
pop
xchg
mov
loopne
push
pop
jo
ds
inc
imul
fisttpll
jge
inc
or
ja
imul
adc
and
jle
in
and
int3
gs
lea
or
test
sub
cmp
loop
push
sbbl
inc
andl
pop
jge
rorb
sbb
adc
pop
faddl
pop
add
mov
xchg
mov
sub
scas
js
inc
push
inc
or
inc
xor
push
mov
loopne
into
dec
xchg
pop
sbb
fdivs
and
fsubs
test
push
push
push
jecxz
enter
faddl
cmp
lea
popa
aam
xchg
mov
mov
sbb
pop
loope
sbb
sub
lds
mov
jmp
add
xchg
les
jne
imul
dec
push
mov
mov
imul
sub
and
jo
and
nop
rcrb
cmp
nop
add
aam
push
lock
sarb
call
mov
push
call
push
fdivr
outsl
jno
inc
cmp
loope
rcrb
dec
jle
push
dec
sbb
sub
jns
sbb
inc
mov
xchg
fcoml
in
and
and
in
mov
sbb
xor
aam
mov
int
int3
aam
inc
xor
dec
aas
mov
rorb
rolb
push
sbb
jp
sbb
shl
adc
cmp
pop
jnp
adc
pusha
imul
adc
push
les
jae
fidivs
push
out
pusha
and
fisubl
mov
sbb
insl
xor
adc
or
pushf
popa
jnp
je
push
icebp
mov
adc
aad
repz
or
add
mov
sbb
jmp
xchg
mov
in
jle
sbb
js
mov
inc
push
rclb
shll
or
pop
xor
inc
mov
icebp
ss
push
sub
xor
mov
insl
mov
mov
inc
xlat
add
lcall
fldt
daa
push
push
test
movl
and
mov
test
into
inc
test
loopne
dec
in
cmp
mov
lock
pop
shlb
jo
cmp
lds
add
add
sub
adc
push
mov
sub
and
js
orb
mov
dec
mov
and
cmp
cmpl
shlb
inc
orl
xor
pop
movsb
dec
lods
das
mov
or
or
push
or
adc
adc
dec
sub
jnp
addr16
cmp
test
bound
rclb
or
xchg
mov
add
cli
xor
push
enter
mov
inc
jne
push
cmp
cmpsl
lock
inc
sahf
or
push
movsl
sbb
call
pop
pop
add
jbe
adc
mov
iret
pusha
xabort
sbb
pop
incl
pop
dec
cld
add
lret
sbb
dec
xchg
shufps
xchg
xchg
inc
inc
pop
pop
shrb
ret
hlt
mov
adc
add
fucomip
xlat
and
jp
inc
ss
dec
ss
push
outsl
cmp
shll
cmp
pusha
icebp
addr16
lea
rorb
sahf
mov
test
push
cli
mov
adc
mov
ret
ds
add
inc
cmp
xchg
lock
stos
inc
ret
mov
or
dec
xor
aaa
andb
push
xchg
cmp
mov
fs
add
inc
or
push
loopne
push
mov
bswap
dec
stc
jae
inc
neg
add
call
mov
push
sub
push
inc
rorb
call
icebp
or
repnz
hlt
inc
adc
clc
dec
or
or
jg
push
addb
add
push
lock
sti
jle
stc
lods
mov
push
push
add
aam
or
data16
xchg
mov
push
cs
sub
jp
rcrl
ja
jae
pop
ds
movsb
jns
out
adcb
mov
js
mov
cmpsl
push
jg
jns
dec
pop
out
dec
or
js
outsb
sarb
mov
lock
dec
sti
int
push
inc
adc
cmp
dec
add
in
add
shll
push
arpl
push
dec
adc
and
add
sbb
push
cmp
cmp
adc
cli
adc
adcb
outsb
xor
xchg
mov
fiaddl
ss
sbb
and
push
jno,pn
rorb
sbb
pop
mov
push
adc
xchg
sub
xor
cmp
or
sub
jmp
mov
test
sub
in
adc
adc
mov
fcoms
pop
pop
sbb
xchg
or
fs
push
push
inc
xor
in
push
cmp
loopne
loopne
mov
jle
add
xor
idivl
cmp
cmp
hlt
repz
sbb
pop
fisubrs
es
rorl
shr
test
ljmp
hlt
cwtl
mov
adc
lcall
es
add
hlt
je
adc
js
or
mov
cmp
add
push
adc
xor
pop
add
mov
arpl
pop
dec
pop
or
xchg
hlt
add
mov
sub
popf
rorb
add
add
sub
adc
in
and
push
push
dec
dec
push
sub
add
or
push
cmp
je
addb
xchg
pop
clc
xorl
or
sub
cld
fldz
rol
sub
xchg
dec
mov
sub
or
pushl
and
mov
stos
test
adc
in
add
and
inc
mov
cmpb
add
and
inc
push
add
sub
cld
orl
and
mov
inc
pop
adc
mov
lea
push
cmp
and
fdivrp
mov
fistl
enter
jmp
cltd
pop
enter
and
mov
cld
push
or
sub
mov
cmp
adc
sub
imul
out
dec
or
je
sub
iret
mov
push
and
enter
add
sbb
and
out
shll
xchg
mov
inc
jb
add
push
jns
push
push
and
flds
or
aaa
sbbb
pushf
out
and
sahf
pop
and
push
inc
in
in
sub
pop
jg
hlt
lea
or
xchg
add
pusha
inc
das
pop
xabort
dec
in
fs
inc
xor
jb
sub
push
sub
xor
xor
push
adc
adc
lahf
xor
nop
xchg
out
adc
xor
cmp
cmp
or
ret
in
in
add
or
sub
push
dec
dec
lret
inc
fwait
inc
and
iret
addr16
or
in
aaa
pop
push
inc
ja
inc
jb
add
mov
add
inc
or
and
dec
dec
in
fs
adc
sbb
dec
ret
stos
daa
inc
dec
jmp
push
jge
dec
sbbb
nop
mov
iret
push
add
out
mov
jmp
fnstenv
dec
ds
fistl
mov
cmp
jns
int
aaa
inc
cmp
cmc
add
lret
pop
push
inc
test
push
dec
push
adc
lods
aam
mov
pcmpeqw
dec
fistpl
js
mov
mov
outsl
dec
adc
in
or
sbb
pushf
rorb
jmp
pushl
jmp
ficoml
lea
lods
and
pop
lret
addr16
mov
push
roll
pop
jp
lock
cld
stos
loope
stos
adc
push
sbb
test
les
cwtl
push
movsl
dec
imul
and
jo
daa
notl
scas
dec
ja
arpl
dec
fmuls
or
jecxz
roll
pop
push
xchg
dec
loopne
icebp
cltd
mov
push
loop
xchg
stc
mov
mov
dec
jno
je
js
mov
sbb
fsubrs
xchg
nop
aas
pop
mov
push
in
shrb
xchg
dec
scas
in
call
lret
and
cmp
decl
testb
sti
sarl
or
mov
cli
sbb
mov
pop
mov
lock
pop
insb
sbb
mov
xor
push
std
repz
dec
sub
inc
out
cmp
sarb
push
mov
addl
xor
add
lds
and
push
test
mov
test
push
mov
inc
int3
jns
xchg
add
xor
cwtl
sub
xchg
in
add
lcall
xchg
das
dec
js
mov
jo
int3
or
jbe
aaa
push
rcrb
pop
jo
dec
je
mov
or
loope
sub
xor
test
mov
ret
cmpsb
cmp
rolb
push
sbb
in
mov
scas
jmp
addl
call
push
mov
jge
mulb
cmp
adc
test
add
test
mov
dec
xchg
jns
jne
into
lds
add
mov
add
aam
mov
iret
mov
call
xor
mov
jns
jg
or
dec
cmp
cli
sbb
inc
adc
jne
push
nop
and
outsb
and
and
mov
jp
out
scas
or
jbe
inc
push
and
or
add
sbb
jae
mov
or
out
sarl
jmp
add
cmp
jne
sub
jl
in
push
push
pop
cmp
adc
xorb
cmp
sbb
inc
jmp
sbb
and
sbb
mov
xor
ret
cmp
or
stos
popa
mov
loopne
jl
sbb
inc
bound
aaa
jp
or
sub
enter
jns
jbe
in
jno
jle
rcrb
sbb
je
cs
adc
mov
je
push
int3
push
int3
rolb
out
loope
pop
and
es
call
push
popf
or
pop
stos
jb
cmp
jle
cmp
sti
push
adc
nop
ret
and
inc
xchg
push
pop
adc
and
add
call
or
jbe
mov
dec
das
mov
jbe
push
or
inc
mov
adc
jmp
lcall
xchg
sbb
add
lods
invd
test
dec
xchg
add
addl
mov
add
jmp
or
add
and
addr16
rorb
ja
mov
sar
decl
call
mov
fsubrs
cmp
xlat
adc
mov
aad
into
cmp
or
imul
scas
imul
push
dec
sbb
adc
push
sub
inc
pop
mov
dec
sub
pop
and
ret
lods
mov
jp
rcrl
push
in
xor
loopne
or
lea
jle
sub
dec
rorl
adc
adc
cmp
shl
das
inc
sbb
cli
add
and
adc
pop
xor
push
sub
or
or
xor
cmp
push
inc
push
sub
ret
insl
pop
dec
inc
push
enter
lock
jb
jmp
dec
adc
pop
xchg
dec
lods
rorl
jp
cmp
lret
adc
addb
cmp
lret
inc
or
or
pusha
mov
stc
add
cmp
mov
out
repz
leave
add
add
lock
jge
cwtl
jnp
push
jl
pop
sbbl
outsl
out
sahf
es
or
rolb
cmpsl
push
sbb
and
xchg
insl
sbb
testb
lret
add
cmpb
or
push
in
bound
lds
push
sbb
dec
adc
adc
or
cmp
jo
sub
add
sbb
or
push
dec
push
add
mov
ljmp
push
cmc
mov
push
cmp
jb
lea
cmp
or
std
mov
clc
fisttpll
rdmsr
or
aaa
cmp
subl
pop
mov
inc
pop
mov
push
sub
or
jmp
mov
pop
ret
or
je
push
cmp
push
or
inc
or
outsl
and
cmp
js
fs
fdivs
andl
cmp
and
inc
sbb
ja
cs
add
or
lock
inc
xchg
outsl
and
sbb
aam
movsl
inc
push
in
fcomp
test
add
cltd
ror
sarl
lods
fcmove
push
in
test
jns
jo
dec
lea
jne
jno
mov
lcall
or
and
or
ret
push
sbb
out
xchg
cmp
aaa
xor
add
ds
push
sbb
adc
sub
jle
bound
jge
add
mov
orl
inc
adc
outsb
inc
imul
cld
sarb
gs
lcall
push
push
lods
sub
mov
inc
pop
and
xchg
pop
push
and
or
cmpsb
shrb
add
adc
movsl
and
mov
mov
aas
jmp
pop
pusha
add
add
sub
lret
mov
push
sbb
xor
push
mov
shlb
lock
xchg
adc
sbb
setbe
les
sbb
mov
clc
push
jb
xor
add
and
add
push
fisubrs
rcrl
push
adc
push
adc
push
sbb
add
push
pop
mov
rep
std
or
sub
pop
sbb
mov
sbb
daa
in
aaa
xor
loopne
adc
movl
xchg
rorb
pop
fisttpl
or
sbb
add
test
mov
arpl
cmp
cld
psrld
inc
pop
ret
push
mov
inc
rorl
sub
mov
test
xor
jne
adc
arpl
mov
mov
cmc
cmp
data16
call
stos
mov
or
jge
or
jo
mov
jo
push
cmp
pop
outsb
dec
sub
andl
cmp
xor
xor
ds
cmp
push
jo
sbbb
inc
hlt
add
je
jp
xor
pop
cmp
std
pop
and
popf
mov
leave
jl
push
clc
rcrl
sar
cmpb
cld
adc
mov
push
jge
cmp
lods
and
cs
mov
out
pop
scas
xor
cmp
sbb
int3
xchg
push
push
aam
or
inc
cmp
jb
loopne
outsb
sub
push
jg
dec
aaa
les
xchg
cwtl
xor
das
cmp
out
or
imulb
mov
inc
mov
or
mov
orb
inc
rcl
push
push
push
dec
jecxz
cld
push
xor
and
mov
inc
je
jmp
jbe
jge
jne
jno
mov
sub
mov
sbb
loope
push
test
std
inc
in
je
xor
data16
mov
jb
inc
push
lds
xchg
pop
sbb
jl
test
mov
mov
push
das
dec
inc
inc
or
mov
sub
mov
mov
push
push
shll
popa
or
mov
adc
push
lods
jle
dec
sub
cld
add
jmp
push
push
aas
push
sbb
cmpsw
repz
out
and
rorl
mov
les
scas
pop
lods
addr16
in
xor
or
inc
in
aaa
lret
out
mov
fcoml
sub
sub
in
sub
xor
sbb
cmp
in
in
fs
js
pushf
dec
in
add
add
test
sub
outsb
inc
mov
mov
insb
rolb
sbb
add
loopne
cmp
insl
fwait
push
js
stos
movsl
sub
cld
sahf
xor
stos
mov
andb
dec
push
jno
mov
or
arpl
dec
inc
mov
xor
xchg
add
xor
or
push
mov
xchg
and
cmpsl
into
mov
pop
pop
sub
icebp
pop
or
fsubrp
ss
es
insb
insl
inc
push
imul
jnp
push
jmp
das
push
popa
pusha
sub
call
or
xchg
inc
mov
sbb
mov
pop
in
mov
rclb
add
adc
add
cmp
add
sub
xor
cltd
gs
loope
mov
dec
ret
je
in
xchg
lret
int3
je
cmp
jae
add
cmp
mov
notb
add
or
adc
loopne
sub
and
cltd
mov
xor
cwtl
sbb
or
lock
mov
pop
cmp
sub
adc
mov
pop
imul
popf
sub
bound
mov
and
adc
jmp
sub
cld
add
cmp
jae
nop
not
and
into
inc
adc
leave
andl
mov
adc
pop
push
push
add
jae
push
rcrb
add
jae
fidivs
push
cltd
repz
in
outsb
or
loopne
adc
data16
and
inc
sub
xchg
adc
dec
push
adc
clc
jb
pop
loope
data16
js
cmp
fsts
rorb
imul
inc
xchg
mov
orb
mov
adc
sub
pop
movsb
mov
xor
andl
sub
or
adcl
add
push
andl
add
sbb
scas
lahf
xchg
cmp
fwait
pusha
and
sete
xor
push
pusha
jmp
mov
jl
sub
adc
adc
and
add
scas
cld
sub
hlt
or
into
mov
and
mov
sub
mov
cmp
xor
dec
clc
pop
call
xor
add
lret
std
in
push
mov
push
push
jmp
aaa
sbb
cmp
notl
pop
adc
mov
inc
xlat
mov
nop
call
push
push
adc
push
popa
cld
lea
orb
rcr
push
mov
fisubs
pop
adc
add
arpl
mov
adc
mov
cmp
push
jecxz
lea
jbe
dec
imul
cmp
inc
fcmovbe
mov
adc
arpl
bound
mov
adc
push
add
xchg
inc
dec
sahf
ror
add
js
aad
sbb
and
sarb
dec
jne
push
adc
push
fadds
lods
add
fdivl
bound
repnz
ss
roll
or
inc
mov
popa
shlb
push
scas
cli
loope
lahf
mov
jge
je
push
imul
js
mov
push
je
jno
xchg
cltd
cmp
jl
pop
sbb
add
add
jo
push
jecxz
popf
sub
icebp
subb
bound
sbb
les
inc
outsb
xor
pop
mov
and
bound
jo
dec
mov
into
call
mov
leave
sub
jo
adc
inc
mov
push
xchg
arpl
lcall
and
jmp
fdivr
adc
mov
pop
ficompl
adc
insl
jge
fs
mov
sub
js
nop
pop
repnz
adc
js
add
push
pop
cmc
or
inc
adc
sub
daa
add
add
jle
jl
xor
push
push
daa
popa
insb
loope
add
insl
insl
push
adc
dec
fwait
movsb
shrl
push
pop
cmp
cmpsl
or
pusha
push
cmp
xchg
imul
loopne
or
shll
add
je
push
sub
outsl
pushl
lcall
sub
sar
sbb
clc
jbe
or
add
add
sub
lret
dec
inc
adc
in
adc
dec
or
push
sbb
mov
faddl
xchg
repz
loop
sub
aad
cld
mov
js
sbb
pop
sub
test
push
fidivrs
or
and
ja
lea
mov
lock
pop
dec
insl
movsb
mov
xchg
sbb
inc
je
pop
jo
cmp
pop
mov
jl
pop
sub
xchg
in
mov
and
cmp
cs
lea
call
notb
add
pop
testb
push
test
nop
pop
sbb
inc
mov
inc
push
aas
ret
or
sub
dec
loopne
lods
mov
mov
dec
pop
pop
sbb
addb
sbb
dec
add
pop
call
dec
mov
or
pushf
xor
mov
cmp
movsb
pushf
testb
inc
pop
inc
stos
cli
sbb
enter
arpl
call
dec
add
jne
sub
lea
mov
pop
cmp
add
sub
aad
jae
jb
pushl
pop
push
ja
mov
pop
or
pop
jmp
mov
es
jae
adc
and
add
and
es
sbb
push
xchg
adc
push
xchg
inc
repz
add
adc
loop
test
push
or
and
sub
mov
pusha
cmpb
fisttpll
shr
cs
jb
pop
sub
mov
sub
into
adc
add
cmp
pop
outsb
lea
popf
lock
pop
xor
jmp
test
sub
push
sub
test
push
inc
xor
lahf
imul
sbb
inc
and
sub
or
enter
pop
dec
add
pop
mov
scas
fwait
jp
mov
ffreep
cld
dec
and
enter
push
and
pop
sbb
jmp
push
leave
add
jle
cli
jbe
or
cli
daa
xchg
popa
jecxz
xor
jmp
dec
andl
icebp
jbe
dec
pop
jmp
mov
dec
pusha
outsb
roll
sti
aam
ja
xchg
imul
or
mov
inc
mov
mov
pop
mov
ret
ljmp
fisubl
or
cmp
jb
movsl
jb
cli
or
sub
iret
mov
add
leave
insl
jb
mov
fcmovnu
nop
arpl
ja
add
addr16
lods
pusha
leave
insl
fldt
aas
insl
repnz
cmp
adc
iret
ja
dec
inc
outsb
leave
or
icebp
sub
and
movl
stc
std
push
add
or
sbb
sub
fs
jne
push
cmp
and
nop
mov
cmp
jo
pop
inc
out
cmpsb
push
fwait
or
adcb
or
inc
call
push
lods
xchg
and
in
ret
inc
sbb
push
cmpsb
mov
adc
push
nop
ds
and
aas
push
or
inc
aas
and
and
enter
add
and
and
nop
add
nop
and
and
dec
es
add
nop
add
test
mov
repnz
add
loopne
adc
jb
add
sub
cmp
cs
jmp
push
jb
pop
pop
push
js
jb
add
and
pushf
add
aas
xor
or
xor
mov
mov
and
stc
adc
push
cmp
lods
in
mov
cmp
or
or
push
int3
jmp
inc
mov
inc
adc
or
leave
adc
adc
hlt
mov
mov
mov
lcall
ret
mov
adc
jmp
js
jecxz
inc
rclb
and
cmp
jecxz
and
test
lea
sub
cs
jno
push
sbb
xor
add
add
jae
inc
add
lea
jmp
sarb
adc
cmovbe
jne
cli
xchg
mov
xor
xor
pop
nop
add
out
sbb
ds
cmp
fcoml
inc
nop
or
pop
jmp
mov
inc
and
jns
and
pop
or
test
stc
push
xchg
xchg
loopne
ret
dec
out
and
dec
push
out
mov
inc
test
ljmp
cmp
cmpsb
rolb
or
addr16
jbe
pop
adc
pop
sub
jo
add
repnz
pop
test
ss
add
stos
in
cmp
or
and
sbb
mov
pop
leave
ret
push
adc
push
std
add
adc
pop
pop
test
loop
out
lea
hlt
xor
jne
push
and
mov
ret
sbb
mov
add
add
pop
mov
imul
jle
je
dec
lods
or
adc
cmp
shrb
rcll
xor
sbb
fnstsw
mov
jne
pop
sbb
imul
dec
rorl
inc
or
cmp
adc
ret
cld
dec
mov
jns
ret
xor
pop
push
into
mov
push
cmpb
cs
or
js
and
ss
das
idivb
rcrl
mov
test
adc
ds
jmp
int
ret
push
xor
add
xchg
push
mov
cmc
xchg
stos
fsubl
sbb
ds
sbb
add
adc
or
or
jne
dec
push
in
jle
mov
subl
in
cmp
jg
shll
and
mov
dec
aad
addb
popa
jno
inc
cltd
jbe
repnz
adc
adc
mov
pusha
jbe
cmp
add
loopne
out
add
lock
mov
fs
jl
inc
cmp
xchg
mov
sbbl
dec
or
pop
fmuls
and
add
fdivp
imul
sub
rcrl
adc
push
jg
dec
inc
jg
jmp
add
or
or
and
xor
or
push
add
add
or
xchg
xchg
faddl
or
int
popa
push
mov
mov
in
or
leave
jmp
mov
or
or
push
movsl
lock
andl
lock
daa
data16
sarl
jbe
pop
push
xor
mov
pop
push
fwait
out
xchg
pop
movzwl
sub
push
nop
aas
rolb
cwtl
cmp
pusha
dec
mov
pusha
leave
and
out
dec
inc
push
ret
xlat
jmp
lret
push
jl
push
inc
dec
pop
pop
cld
ds
xchg
frstor
pop
cwtl
lods
ret
or
pop
dec
xor
fs
shl
pusha
mov
mov
repz
icebp
sbb
ret
add
adc
add
fstl
add
ss
push
cwtl
sub
orl
sbb
ds
fcmovbe
or
push
shll
xchg
or
mov
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
ret
fcomp
cmp
aas
stos
mov
rcrb
mov
pop
add
cmp
jge
mov
pop
and
jg
daa
sbb
xor
je
cmp
je
pushf
lock
js
pop
push
adc
mov
decl
mov
movb
icebp
imul
pop
xor
jmp
add
push
leave
or
in
add
sbb
mov
push
add
mov
cmp
jl
or
xchg
pop
mov
add
lods
lahf
inc
std
mov
ss
jge
sarb
ret
das
jne
loopne
cmp
cmp
jno
mov
imul
add
add
sub
add
cld
lock
fwait
add
lea
inc
add
out
lods
gs
roll
xor
cltd
lret
and
lock
loop
push
mov
or
sbb
sti
jge
xor
or
pop
sbb
cmp
pop
xchg
shlb
mov
push
dec
mov
push
in
adc
pop
mov
or
or
push
test
push
sub
jne
pop
xor
mov
xor
push
mov
fucomp
loop
loope
dec
sub
xor
add
fmuls
rcrb
push
mov
in
inc
add
mov
cwtl
add
dec
xchg
pop
sbb
insb
dec
mov
xor
movsb
push
int
fdivr
push
pushl
add
pop
hlt
jg
sub
pop
adc
and
sub
sbb
add
ret
and
xchg
fistpll
cmpsl
xlat
lods
xor
das
lods
and
add
xchg
add
jns
mov
adc
push
push
pop
pop
xor
inc
push
lcall
xor
or
jge
mov
xchg
xor
push
lret
mov
sub
repz
roll
adc
lods
jl
movb
stos
add
loopne
add
imul
cmp
mov
inc
add
sbb
and
jp
push
xor
xor
mov
imul
add
jne
lret
add
add
add
sbb
data16
jns
iret
xchg
lock
jl
outsl
sub
mov
stos
xchg
add
call
add
xlat
int3
mov
sub
cmpsl
pop
inc
data16
and
mov
jb
lahf
pop
cmp
or
or
or
and
push
mov
add
addb
and
adc
mov
adc
jo
inc
jno
and
jmp
cmp
xchg
pop
jb
add
jb
nop
xor
cld
pop
lcall
inc
push
mov
jmp
insl
xor
inc
shrb
jmp
adc
mov
pusha
dec
pop
xorl
mov
mov
adc
pusha
ss
or
push
in
aam
inc
sahf
push
loopne
and
jnp
push
add
cmp
push
or
lret
pop
jo
pop
pop
pop
ret
mov
les
pop
je
in
test
sti
add
adc
and
inc
dec
sub
sub
push
fstps
fcompl
fnstsw
fnstcw
icebp
sti
movb
mov
rcrb
cmp
loopne
sub
dec
cmp
pop
shrl
sbb
dec
dec
xor
cmpsl
cmp
xchg
pop
cmp
hlt
fmull
lea
pop
fs
xchg
mov
add
outsb
decl
and
daa
je
cmp
mov
adc
and
pop
push
pop
or
cmp
push
pop
and
adc
fistpl
inc
lea
jmp
std
icebp
nop
mov
arpl
xor
and
add
je
pop
jnp
cli
push
jle
dec
add
and
rorl
in
or
and
or
push
inc
bnd
mov
and
mov
shll
fnstenv
and
clts
add
call
mov
ds
rcrb
test
add
icebp
ficompl
xor
xor
sub
cld
sbb
test
fs
aam
push
dec
xor
es
push
sahf
add
repz
dec
cmp
and
sbb
loope
pop
inc
lods
scas
mov
adc
pop
or
jo
dec
repnz
dec
fmull
and
pop
fwait
inc
mov
add
adc
ret
icebp
pushf
pop
xchg
and
fadds
ret
mov
pop
lret
cmp
ss
mov
adc
mov
iret
push
fildll
loopne
jg
and
sub
sub
inc
jo
add
rcll
daa
mov
sub
test
dec
xor
popf
xor
int
lcall
sub
dec
xorb
adc
pop
inc
add
xchg
inc
pop
sub
inc
pop
lret
or
jmp
mov
pop
popa
xorps
cmp
clc
mov
cwtl
push
fldcw
mov
test
hlt
sahf
fisttps
push
cld
cmp
adcb
pop
mov
xorb
ret
jg
inc
imul
mov
mov
pop
adc
mov
jo
mov
add
pop
pop
test
in
aaa
xchg
xchg
cltd
dec
adc
shrl
ds
add
fidivs
in
movsb
or
jns
mov
mov
jb
mov
rolb
dec
inc
add
inc
cmpsb
mov
insb
add
or
or
addr16
add
popf
sbbl
aaa
sub
das
adc
outsb
or
xor
jne
jle
add
fstl
inc
dec
dec
jecxz
mov
xchg
int3
push
jb
jecxz
ss
fwait
stc
cwtl
mov
in
leavew
int3
call
jmp
out
jae
out
push
pop
negb
rcr
adc
aaa
xchg
add
clc
sar
jb
jmp
andl
lret
dec
xchg
mov
xchg
mov
fadds
movsb
add
xchg
aas
jmp
xorb
inc
push
or
cmp
or
push
sbb
ret
cmp
sub
and
add
jnp
lods
js
cmpb
push
lea
cmp
out
cltd
leave
xchg
dec
sbb
add
sbb
or
sbb
je
mov
inc
push
fdivrs
sub
mov
es
inc
push
inc
mov
jns
add
inc
test
test
inc
mov
jle
push
cmp
xchg
test
pop
xor
adc
sub
stos
add
aad
inc
fsubrs
fsubrp
fwait
sar
dec
pop
je
fldl
pop
push
push
fstpl
add
movsb
addb
add
jne
adc
adc
jne
cmp
iret
iret
push
divb
or
jne
or
shl
cli
jne
or
vfrczpd
lods
push
fldz
hlt
fstpl
addl
andl
mov
pop
nop
enter
sarb
sbb
xchg
les
in
or
mov
sbb
in
aam
arpl
test
or
pop
jecxz
inc
add
in
jbe
orb
loope
sbb
cmp
mov
sub
rolb
loopne
in
sbb
shlb
or
lea
cmp
dec
or
pop
push
sbb
les
ss
or
pusha
mov
pop
jp
ret
data16
add
aam
pushl
inc
in
push
aam
repnz
or
fnsave
testl
or
fst
add
scas
pop
into
lock
jecxz
sbb
or
lea
xchg
shrb
add
negl
fcmovu
or
add
push
push
jmp
dec
mov
pushf
sbb
enter
push
mov
add
lgdtl
fcmovbe
sbb
cmp
and
lock
xor
push
mov
call
add
push
push
cmp
js
nop
mov
les
cmp
outsl
mov
ret
pusha
inc
push
stc
cmpl
push
adc
or
add
in
push
cmpb
divps
push
pop
enter
mov
xor
pusha
addb
dec
sbb
jp
jecxz
addl
leave
repz
push
add
pop
fs
loopne
sbb
push
repnz
pushf
jns
add
mov
sbb
push
or
test
lock
xchg
inc
add
pop
push
dec
add
frstor
int
fsts
mov
xchg
sub
cmp
mov
add
flds
shrb
dec
xchg
push
dec
push
es
pop
enter
xor
mov
mov
fs
push
mov
or
xchg
or
mov
aam
push
add
xchg
or
in
clc
nop
pop
and
dec
inc
inc
es
or
add
xchg
mov
adc
mov
add
sub
xchg
push
push
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
orl
dec
jo
add
mov
adc
push
mov
repnz
add
adc
or
or
push
mov
ret
push
ds
pop
andb
inc
daa
or
push
pop
mulb
repnz
rcrl
cs
mov
clc
inc
ret
xchg
push
mov
idivl
jle
loop
mov
sbb
and
in
test
dec
mov
cmp
or
or
add
mov
repz
cmc
mov
jle
mov
xor
daa
xor
xor
pop
add
add
cs
push
test
sbb
jo
mov
push
pop
jo
icebp
cmp
jl
push
jb
xor
cmp
xchg
xor
popf
and
cmpsb
mov
fs
push
call
movsl
adc
popf
push
pop
push
jne
test
add
sahf
sub
or
pop
sub
rorb
pop
pop
loope
test
pop
mov
mov
push
mov
cmp
sub
call
pop
lret
popf
push
rcrb
data16
fidivl
push
and
push
enter
xchg
gs
xor
jb
dec
jl
cmp
pop
pop
pushf
pop
sbb
jbe
mov
cs
push
rcr
sub
ficomps
gs
xchg
sbb
jno
mov
or
push
jae
movsb
leave
push
sbb
dec
push
push
xor
xorb
inc
pop
add
shll
and
cli
sub
dec
mov
pop
fdivs
cwtl
xchg
inc
stos
fwait
mov
dec
inc
sbb
fs
shll
mov
cmpsb
daa
adc
bound
call
ret
cmp
dec
and
xor
lock
add
aad
xor
pop
jno
orb
mov
mov
cli
inc
pop
jle
and
adc
into
or
cmp
mov
adc
push
pop
push
mov
je
lea
cmp
in
ret
sub
jae
pop
xchg
jno
jmp
mov
lock
cs
push
push
jge
mov
mov
fcoms
push
leave
int3
and
stos
enter
mov
push
popa
mov
mov
adc
jo
add
mov
fdivs
ret
std
dec
test
mov
lret
clc
sub
push
psubsw
jle
fcmovnbe
cs
or
and
pop
mov
inc
add
icebp
xorl
into
and
lea
and
dec
dec
divb
add
xchg
mov
xor
pusha
ret
sahf
shlb
iret
bound
jecxz
push
test
rclb
sti
fs
clc
add
leave
ret
dec
and
jne
enter
add
fsubrl
mov
mov
sbbb
mov
pop
adc
jge
lret
jo
inc
ljmp
inc
adc
jno
xchg
pop
or
xor
scas
andb
push
lods
sahf
and
sbb
inc
mov
adc
and
jge
ja
or
in
mov
mov
push
xchg
loope
add
sbb
and
lret
jl
sbb
ds
lock
popa
mov
xchg
lds
mov
mov
xor
mov
fisubrl
pop
mov
push
loope
popa
mov
adc
add
adc
mov
movsl
mov
mov
pusha
mov
fisubl
stos
sbb
stos
jecxz
sub
sub
inc
hlt
setne
mov
mov
lock
add
fisttpl
jne
lods
jmp
push
js
push
inc
inc
scas
dec
jl
pop
or
or
push
mov
xor
and
add
rcl
sub
icebp
adc
rol
call
adcb
xorl
loope
dec
mov
sbb
push
clc
push
jnp
aas
int
add
pop
mov
mov
inc
jae
popa
rcrb
push
ljmp
test
and
ret
pop
mov
sbb
ss
cmp
popa
pop
sbb
test
and
or
add
aaa
or
outsb
inc
xchg
rorb
fildl
and
xor
pop
mov
mov
pop
mov
test
ficompl
cltd
pop
adc
lret
ljmp
aaa
jno
in
ret
lret
jl
pusha
lds
ret
inc
lods
les
repz
adc
mov
xchg
xchg
rorb
xor
mov
inc
sub
ljmp
test
mov
inc
jl
cmp
inc
js
xor
cs
push
mov
nop
clc
pop
loop
push
sub
add
dec
cmc
add
inc
adc
ds
cmpl
add
lea
xchg
or
fs
xlat
data16
adcb
dec
aaa
pop
mov
mov
pop
xor
or
sub
test
roll
rcrl
xchg
lock
xchg
push
xor
mov
or
rclb
adc
mull
dec
mov
pop
or
cmp
push
push
push
sbb
adc
add
push
insl
jno
mov
movsb
push
stc
outsl
test
mov
lea
xchg
stos
sub
in
and
cmp
sahf
ds
popa
jnp
xor
mov
mov
outsb
ljmp
jg
or
inc
push
or
xchg
cltd
mov
or
jmp
sbb
jne
cmpsl
clc
jno
in
out
sub
bsf
and
push
sbb
and
fdivl
cwtl
sbb
add
rolb
push
shll
subb
arpl
pusha
push
test
push
pop
les
mov
mov
cmp
shlb
jp
in
mov
imul
mov
test
lods
test
mov
test
outsl
push
test
add
nop
lret
inc
inc
mov
push
out
and
push
data16
ret
or
jbe
loope
sbb
shrb
mov
es
and
adc
mov
push
sar
or
adc
js
inc
shll
mov
cmp
popa
dec
jo
addb
or
ds
pop
andl
push
nop
inc
cmp
cmp
add
push
stos
add
mov
cltd
outsl
sub
add
mov
ret
mov
imul
rolb
xchg
add
push
cmpsl
movsl
xor
pushf
jb
and
push
pop
pop
cmp
xchg
movsb
pusha
lods
or
nop
out
pop
cmpb
mov
inc
cmpsl
movsl
inc
out
jmp
jns
or
inc
cmp
xlat
xor
repnz
mov
or
enter
sub
adc
pushf
and
inc
jo
je
aas
dec
push
out
sbb
mov
xchg
ljmp
mov
scas
jo
loopne
lcall
inc
xchg
cmp
and
subb
and
sbb
sub
cmp
aaa
xor
lahf
push
inc
push
mov
push
call
stos
mov
or
and
xchg
je
out
clc
mov
pop
in
jmp
ljmp
xchg
sbb
xor
mov
sbb
sbb
shrl
xchg
insl
pop
out
imul
sbb
sbb
add
and
int3
std
sbb
cmp
out
mov
and
das
inc
inc
rcll
sbb
and
cwtl
or
lods
pusha
jno
and
sub
and
push
sbb
js
sub
je
sbb
insb
test
add
daa
and
and
mov
inc
ret
pop
call
add
iret
or
cmp
and
jmp
cs
jle
fdivs
mov
pop
sub
adc
pushf
xorb
adc
loop
mov
push
jno
rol
sub
dec
in
test
push
js
add
cmc
sbb
push
ja
shl
cmp
sbb
dec
mov
cmpsl
ss
movsb
test
cmp
pop
jp
jmp
mov
leave
mov
mov
adc
add
negb
shlb
and
push
inc
call
adc
daa
cmp
addl
jne
test
and
mov
and
add
aad
ret
dec
insl
xor
or
and
leave
repnz
sbb
aaa
sahf
repnz
mov
xor
cs
and
mov
inc
imul
and
cmc
faddl
jno
mov
int3
add
shrb
jnp
xchg
fadds
pop
fmuls
js
aaa
repz
int3
dec
sub
adc
push
js
dec
sti
popf
outsb
in
jne
icebp
xchg
mov
xchg
mov
pusha
jae
or
push
loopne
ljmp
add
rorb
add
inc
push
stc
xor
stos
sub
xchg
flds
dec
sbb
fstps
sbb
mov
movsl
and
inc
adc
nop
les
xchg
fs
negl
sbb
aam
ret
pop
sub
add
mov
fs
fnstsw
add
hlt
mov
sbb
mov
aas
repnz
inc
rolb
cmp
mov
xor
movsb
inc
pop
movsb
inc
fcomps
xor
pop
jne
xor
mov
ja
ljmp
jmp
jae
call
and
movsl
dec
lock
adc
mov
mov
scas
mov
arpl
cmp
sub
jg
add
or
push
sbb
jbe
sbb
ret
mov
gs
inc
cmp
jb
push
les
cmc
pop
pop
pushl
movl
data16
les
mov
movsb
jle
dec
add
adc
cmp
pop
push
jbe
mov
dec
or
sub
cltd
std
repnz
cmp
std
dec
insb
inc
cwtl
push
push
cld
push
or
or
sbb
outsl
sbb
and
mov
testl
lea
test
popa
je
je
push
mov
pusha
sbb
xor
or
mov
cmp
jne
dec
cmp
cmp
shr
and
rorb
stc
dec
sbb
sub
je
push
jl
rclb
outsl
sbb
cmp
adc
ret
push
mov
fildl
clc
fdivs
xor
add
or
pop
lcall
ljmp
aaa
mov
or
imul
movsbl
add
inc
mov
insb
cli
lock
test
add
ljmp
inc
cmp
ror
decb
mov
cmp
sbb
inc
fstp
sub
push
xchg
mov
mov
lahf
aam
jnp
xor
jne
jmp
fldl
dec
add
sbb
add
loopne
les
adc
xchg
mov
jp
mov
popf
roll
mov
js
add
lds
imul
pop
mov
insb
add
clc
and
and
fsubrl
push
fimuls
dec
mov
mov
jnp
xchg
hlt
fsubl
pop
fsub
pop
fsubrp
xor
cwtl
lods
pop
xor
test
mov
call
pop
sbb
jg
pop
add
pop
add
xor
mov
mov
or
pop
and
sbb
test
jp
out
inc
test
pop
sub
dec
je
add
shrb
aaa
es
and
nop
mov
and
sub
in
ss
ss
jns
in
sub
push
push
push
sub
pop
dec
push
xchg
sahf
xchg
and
outsl
adcl
sbb
pop
inc
mov
fmulp
iret
sub
or
sbb
jno
sub
push
add
js
lret
out
stos
mov
outsb
push
sbb
test
sti
sbb
sbb
insb
sbb
outsl
push
clc
into
push
in
adc
out
lea
shlb
pslld
nop
sub
push
xchg
jns
xor
xchg
add
jne
outsb
int3
sub
adc
psubsw
nop
in
jge
clc
push
push
leave
xor
and
nop
out
adc
xor
push
jae
push
gs
and
and
sub
lret
xchg
add
xchg
cmp
in
sbb
pop
lods
sbb
sbb
loopne
out
sbb
das
in
pop
dec
repnz
and
or
fwait
lret
and
push
jecxz
cmp
xchg
ret
cmp
and
push
pop
repnz
push
push
push
mov
sub
nop
push
xchg
notl
pushf
popf
push
xchg
in
mov
aam
mov
inc
push
in
enter
rorl
adc
add
xchg
dec
ds
in
and
and
and
sbb
xchg
fistl
dec
repnz
pop
pop
gs
and
and
je
push
and
xchg
adcl
and
nop
movsb
push
lret
mov
dec
fisubrs
cwtl
adc
je
cld
js
in
cmp
clc
and
and
and
sub
and
nop
stos
ffree
push
cwtl
aas
addr16
and
mov
inc
xor
scas
mov
clc
push
or
repz
cmp
adcb
out
ds
push
jns
out
bound
xchg
cmpsb
out
sahf
out
enter
iret
repz
or
sbb
cmp
repz
adcl
fadd
and
add
push
je
mov
cmp
rcrl
leave
add
lods
pop
mov
adc
mov
jbe
les
push
add
pop
xchg
xor
or
inc
dec
add
or
push
xchg
sbb
add
push
rolb
loope
gs
xchg
or
xorl
cltd
pusha
stos
jmp
add
stos
in
jl
imul
gs
push
cmp
addr16
cmp
xorb
pop
ret
cmp
mov
mov
and
loopne
out
jecxz
mov
popa
adc
mov
and
lock
sub
sbb
push
pop
adc
andl
sbb
dec
inc
test
mov
and
mov
adcl
push
call
enter
inc
enter
mov
inc
and
and
pop
jl
call
add
add
pop
pusha
cwtl
dec
xor
adc
mov
adc
inc
aam
fs
xchg
xor
or
or
js
in
fwait
dec
jne
cld
sub
mov
sbb
mov
mov
hlt
mov
mov
pop
adc
sub
les
add
mov
jp
sub
jle
flds
mov
add
xchg
pop
jb
icebp
icebp
add
call
sub
add
leave
and
pop
or
sub
or
add
arpl
xchg
xchg
pop
adc
and
push
push
adcl
dec
enter
mov
xchg
stos
out
adc
adc
and
push
stc
adc
add
sbb
test
or
dec
push
ficomps
nop
add
adc
prefetchw
in
orb
adc
mov
jle
push
add
xor
xor
test
or
xor
push
push
inc
xor
minps
xor
xor
pop
fwait
rcl
inc
int3
fwait
mov
lock
mov
repnz
xor
xchg
push
push
mov
enter
mov
sub
aaa
fdivrl
push
push
test
push
enter
sbb
add
push
enter
add
mov
add
aam
xchg
js
mov
push
push
or
and
push
in
nop
adc
pop
push
adc
fistl
mov
push
mov
adc
pop
dec
push
fs
adc
in
pop
xor
xor
stos
lock
loop
movl
inc
lock
xchg
bound
push
inc
dec
xchg
pop
mov
sub
repnz
add
and
fmul
and
push
adc
xor
push
sub
jo
popa
inc
sub
icebp
sbb
xor
adc
add
insl
add
adc
inc
add
xor
add
add
inc
or
jb
out
je
lcall
mov
adc
pusha
or
jbe
mov
sub
xchg
or
test
lods
aaa
fwait
dec
ret
aam
xchg
sub
adc
xchg
adc
popl
and
mov
xor
jns
or
inc
call
add
les
fldl
in
scas
or
dec
xchg
movsb
fwait
add
and
lock
loopne
leave
jno
add
scas
fisttpll
dec
std
jg
push
dec
dec
push
das
cmc
andb
jno
stos
and
arpl
adcl
enter
add
loopne
jno
lahf
nop
push
addb
inc
sahf
ds
push
adc
lods
mov
mull
push
mov
mov
roll
repz
mov
andb
or
addr16
or
add
inc
test
nop
mov
scas
adcb
dec
fwait
jns
mov
dec
or
or
add
insb
sub
aad
test
test
in
test
or
pop
int3
fs
or
or
aas
loop
sub
int
mov
mov
or
cmp
jg
push
bound
je
adc
sub
sbb
push
push
or
addb
aas
or
mov
adc
insl
add
sub
dec
push
call
and
adc
adc
mov
sbb
orl
scas
gs
cmpsl
lahf
cwtl
mov
push
sbb
add
adc
push
add
shl
inc
leave
add
cmpsl
in
aam
add
sbb
sahf
test
mov
and
fs
push
or
sub
cmc
sub
in
or
es
arpl
or
test
push
dec
fisttpl
and
and
or
add
push
neg
fldenv
adc
aad
rcll
push
jle
push
shr
add
push
ljmp
push
clc
dec
add
xchg
sbb
inc
mov
stos
loopne
pop
imul
adc
pushf
dec
xor
popf
mov
or
clc
test
xchg
je
repnz
stos
lods
sahf
or
mov
cmp
dec
fiadds
fwait
push
and
imul
into
adc
test
xor
ret
roll
cmp
ret
outsl
add
scas
dec
shll
icebp
imul
cmp
mov
bound
xchg
or
cmp
mov
mov
fsubs
aad
xchg
fsubrs
xor
sub
dec
mov
xor
fists
add
add
jno
jno
fcoml
pop
test
xchg
push
mov
movsb
test
pop
dec
mov
sbb
pop
stos
cwtl
jl
add
mov
cmpb
js
push
push
jbe
xor
subb
pop
add
pop
das
lods
and
inc
mov
push
push
lahf
lods
add
lods
test
js
mov
dec
mov
jmp
les
lea
mov
mov
aas
jp
adc
add
out
aas
inc
cmp
cmp
rcll
push
shr
or
test
loope
push
push
add
dec
sbb
jl
es
in
push
xor
dec
or
je
mov
xlat
adc
xor
mov
cmp
inc
adc
shlb
mov
xchg
inc
jns
push
push
push
cmp
and
sbb
pop
pop
iret
pop
jno
cmpsl
dec
sub
arpl
and
test
dec
cmp
sbb
push
and
inc
sub
push
xchg
or
dec
or
add
dec
xchg
psrld
dec
push
sub
adcl
ret
enter
aad
dec
loope
cwtl
aas
pop
mov
test
pop
mov
pop
call
dec
fistpl
adc
movsb
cmp
loop
gs
adc
push
insl
pop
imul
jp
xchg
stc
mov
pusha
ljmp
aam
dec
fwait
shll
imulb
ret
or
adc
jl
xor
jmp
cmp
imul
adc
jle
xor
out
mov
shll
pop
mov
push
add
inc
jmp
movb
mov
pushf
push
cltd
pop
idiv
mov
jae
test
jns
pop
cmpsl
pusha
mov
insb
inc
inc
lock
cmpsl
adc
push
fldl
mov
fs
xchg
outsb
pop
out
arpl
pop
mov
inc
mov
pop
movzwl
scas
outsl
cli
jmp
orl
xor
dec
inc
push
in
in
sub
and
in
in
incb
or
or
add
iret
cmp
mov
pop
sahf
lret
idiv
into
aam
cmp
daa
cmp
xor
sub
loope
cmp
push
push
add
js
fsubs
mov
mov
inc
cmp
pop
sub
in
xchg
cmpl
push
stc
dec
jnp
mov
push
push
xchg
dec
aaa
xchg
scas
hlt
and
adc
adc
mov
dec
pushf
xorl
jp
push
clc
les
movsl
rcrl
sbb
jns
mov
andb
or
popf
mov
dec
jl
imul
mov
sub
nop
test
cmp
dec
cmp
clc
mov
or
icebp
pushf
adc
pop
xchg
mulb
sbb
adc
ss
movl
push
es
mov
push
in
movb
push
loopne
out
gs
aaa
sub
push
mov
push
pop
sbb
and
movaps
push
test
adc
sbb
sub
enter
dec
loopne
daa
xchg
sbb
push
push
leave
enter
cmp
in
imul
sub
sarb
xchg
dec
push
mov
fiadds
mov
pusha
inc
jno
jbe
imul
enter
stos
push
jbe
and
pop
int3
out
cwtl
sbb
xchg
and
mov
sahf
dec
inc
cs
in
inc
and
adc
test
inc
pop
or
es
leave
dec
mov
xorb
mov
jo
ljmp
mov
enter
inc
es
aad
sub
xorb
mov
adc
dec
outsb
andb
and
xchg
mov
cmp
outsb
push
xchg
dec
mov
adc
dec
dec
jo
push
insl
dec
es
leave
and
test
les
push
inc
or
or
or
aaa
jns
jnp
or
jl
push
push
sub
mov
lods
inc
and
cmpb
add
out
je
out
mov
test
jns
ret
hlt
cs
cs
xchg
sbb
push
push
xor
xor
ret
push
push
dec
jl
aam
push
jnp
popl
xchg
pop
fldz
mov
xor
fcompl
dec
adc
inc
mov
or
add
popa
cli
sbb
mov
mov
inc
pop
jb
pop
dec
add
fsub
add
rorb
mov
pop
push
fwait
and
in
call
neg
push
or
mov
push
mov
jl
aad
push
pop
out
ss
pop
jo
in
push
gs
fsubl
add
insb
es
xchg
lret
or
fdivl
pop
push
inc
and
adc
in
shlb
xchg
or
scas
adc
arpl
insb
adc
adc
mov
push
test
repz
and
sub
mov
push
into
dec
rcrb
subl
rorb
inc
xor
rcll
push
inc
jmp
inc
shl
add
ljmp
mov
sbb
cmp
xchg
inc
dec
dec
jp
dec
bound
push
and
push
ljmp
cmp
xor
jne
jae
fisubs
orl
sahf
cmpsb
in
subb
cmp
movsl
repz
mov
lea
or
movsb
push
addb
mov
or
das
imul
mov
mov
lock
mov
inc
sub
adc
neg
sub
ds
add
adc
ss
xchg
inc
dec
sub
sub
push
and
and
push
add
enter
lret
cmp
adc
sub
jae
pop
dec
sbb
inc
adc
pop
mov
lods
and
add
mov
insl
xchg
sbb
push
xor
inc
adc
cmpsl
jmp
cltd
in
inc
push
adc
push
daa
and
sbb
loope
pop
fsubrs
call
test
jmp
test
pop
add
test
lcall
adc
mov
adc
mov
and
in
pop
ltr
push
mov
ja
cmp
and
mov
or
pop
or
add
xorl
call
mov
in
push
call
mov
ss
cmp
jge
lahf
xor
and
ja
fsubs
punpcklbw
mov
jne
outsb
sub
mov
mov
sbb
pushf
push
fildl
jle
fwait
sahf
cmp
or
std
pushl
xor
rorb
xchg
mov
xchg
inc
je
aas
ss
fs
scas
pop
adc
shrb
loopne
cs
pop
pop
mov
inc
cwtl
hlt
loop
mov
shll
sub
xchg
jp
sub
pop
xchg
inc
push
aam
add
sub
add
mov
cmp
les
push
mov
sbb
cmpsb
and
or
inc
and
dec
scas
shl
sbbb
pop
popf
cmpb
pop
sub
loop
jne
cmp
mov
sub
loopne
push
sbb
sub
cmpsl
int3
jl
cli
or
mov
in
es
add
mov
push
mov
mov
add
fdivrl
dec
xor
adc
testb
iret
add
xor
cmpsl
cmp
xorb
fdivrl
jno
or
mov
fcoms
les
in
addr16
or
inc
arpl
sti
enter
lods
dec
xlat
adc
fcom
add
add
sub
adc
pop
and
jne
or
roll
lret
stc
push
mov
movsb
lods
dec
enter
test
cmc
clc
pop
int
xchg
mov
pop
rolb
adc
pushl
loopne
loope
mov
inc
fistpl
movsb
jo
daa
sbb
push
xchg
pop
xchg
dec
push
inc
mov
aam
cltd
push
ja
jo
nop
rcl
add
fcomp
iret
leave
pop
and
hlt
mov
push
sbb
mov
pop
lods
jo
pop
test
adc
out
dec
shlb
cmp
mov
pop
push
in
mov
mov
xlat
mov
and
rcl
sbb
push
inc
pop
dec
and
inc
cmp
in
ror
es
add
jmp
popa
pop
shrl
sbb
jns
sub
pop
push
daa
pop
data16
ror
xor
mov
jo
dec
out
and
push
adc
or
or
xor
mov
ljmp
push
jge
mov
fcoml
jo
loope
sub
popa
or
jp
push
pop
lahf
cmp
xchg
outsl
add
iret
adcl
or
mov
shll
aam
cmp
sub
pop
push
cmp
inc
cmp
in
xchg
out
cmp
es
mov
cmp
adc
cmp
sub
rorb
sbb
mov
mov
add
pop
in
pop
or
leave
cltd
xor
sbb
mov
dec
xor
cs
or
push
and
cmpsb
fiaddl
js
push
mov
jns
f2xm1
cli
addb
mov
shll
push
push
ljmp
mov
xor
jle
cmp
fistpl
cs
cmp
je
es
add
lock
jne
cmp
rcll
bound
leave
or
inc
jecxz
push
sub
or
lret
lods
dec
dec
out
shlb
loop
sub
nop
pop
push
sbb
sub
loop
addr16
loopne
test
movsl
in
inc
cmc
hlt
sbbl
popf
sbb
rorb
dec
sbb
add
lret
dec
ret
pop
mov
dec
add
inc
out
adc
shr
or
mov
add
enter
cmovae
stos
pusha
test
ret
sbb
leave
and
push
iret
mov
pop
mov
in
push
cmp
cmpsb
adc
jp
aam
pop
push
inc
and
rol
fimull
mov
lret
lea
or
mov
cld
adc
inc
insb
lock
ja
dec
scas
test
push
pop
in
and
fsubrl
shlb
mov
repnz
aaa
xchg
int3
pop
or
inc
and
or
xchg
sbb
in
add
and
or
pop
inc
hlt
cmp
push
insl
and
xchg
push
push
aam
mov
dec
mov
pop
and
jl
sbb
iret
setb
cmpsl
leave
and
lret
lock
and
imul
sbb
inc
mov
rorl
pop
aam
push
scas
pmulhw
xor
lock
jne
adc
mov
add
mov
cmp
in
imul
pop
dec
jne
push
mov
lods
fcom
push
mov
je
adc
adc
inc
dec
sub
push
inc
jno
add
sbb
or
add
mov
addl
ret
shrb
jp
mov
add
mov
adc
addl
jg
into
add
cmpsb
cltd
push
add
lods
xchg
in
loope
adc
shll
fistl
or
push
push
push
lea
and
or
test
pop
dec
je
mov
cwtl
add
jnp
mov
rol
dec
mov
ret
xchg
or
or
inc
rcrl
mov
pop
adc
jbe
mov
add
es
push
fs
sub
in
mov
cmp
dec
jo
mov
test
clc
and
push
dec
mov
or
or
sub
jge
push
add
in
mov
adc
aam
pop
xor
fs
sbb
jne
sbb
sbb
push
mov
dec
movsb
push
stos
xor
inc
push
lods
mov
mov
pushf
and
adc
ss
pop
or
mov
push
addl
adc
dec
sbb
fistl
mov
add
and
jns
jge
jno
out
fistpll
add
ljmp
cmc
push
cmp
fs
addl
ret
imul
stos
aam
dec
jl
dec
or
aam
pop
sub
sub
xor
inc
adc
jae
mov
mov
mov
jl
cmp
fwait
imul
and
sub
add
and
fimuls
inc
out
sbb
push
fsubrl
roll
in
sub
ret
hlt
inc
push
add
rcll
pop
pop
sbb
add
sbb
or
pop
in
adc
xor
stc
je
fldenv
xchg
add
dec
stc
xchg
test
leave
jg
sbbl
cmp
jnp
push
das
push
mov
rolb
in
push
in
pop
add
cmpl
push
jbe
mov
add
xor
mov
arpl
hlt
cmpl
or
cli
mov
jb
add
call
and
add
or
add
sbb
aad
addr16
xor
xor
push
pusha
xchg
movsl
mul
xchg
add
shl
add
addb
xchg
fiaddl
or
lods
sub
xchg
or
int
nop
ficoms
lret
sbb
jmp
nop
sbb
xor
jo
push
cmp
xor
pop
pop
pop
outsb
fldl
xor
ljmp
xchg
or
aad
push
xor
or
add
jge
das
and
xchg
movsb
inc
jne
add
nop
test
jne
mov
pop
adc
testb
out
std
fwait
xor
popf
inc
outsb
pusha
or
add
pushw
dec
lret
inc
aas
add
xorb
fs
mov
pop
mov
fildll
loopne
sub
sub
es
ljmpw
repnz
xchg
jge
push
hlt
and
sub
fs
sub
add
pop
aaa
inc
ss
imul
gs
jne
enter
cs
stos
and
roll
cmp
add
mov
jno
push
pop
adc
or
in
and
adc
and
inc
sub
psubusw
stc
jno
or
fucomi
ret
in
mov
push
add
jg
sub
cmp
popf
or
mov
jecxz
adc
add
sbb
gs
adc
or
jmp
pop
mov
jecxz
dec
xor
xor
in
in
in
mov
test
int
add
loopne
and
les
orl
adc
and
mov
push
mov
dec
into
lahf
movsl
ret
lods
push
stos
je
mov
mov
rclb
test
mov
aam
lds
ret
dec
and
lock
sbb
add
adc
mov
test
lock
pop
mov
roll
mov
jp
sub
les
lret
mov
inc
sub
push
jae
rcrl
sub
and
add
inc
mov
movsl
sub
or
imul
inc
mov
sub
jo
adc
add
or
push
pop
popf
aas
xchg
mov
in
test
faddl
mov
in
and
subb
cmpsl
push
incl
push
cmp
inc
inc
and
push
xor
aas
pop
lret
insl
movl
xchg
sub
xor
dec
inc
mov
pop
rcll
pushl
jmp
jle
insb
jno
xchg
sub
inc
fimuls
mov
mov
inc
or
fmuls
mov
adc
repz
mov
mov
sub
add
adc
or
dec
cltd
sbb
xor
pop
jg
shr
mov
mov
sbb
add
xchg
inc
pop
insb
add
scas
adc
out
leave
leave
dec
sahf
adc
call
sbbb
test
jmp
outsl
fstpl
clc
andb
push
mov
jp
sbb
rcrl
add
sub
pop
rorl
ret
mov
mov
lods
cltd
insl
dec
or
rorl
adc
xchg
icebp
pop
push
les
inc
pusha
sbb
add
or
js
add
loope
xor
cmp
insl
fs
and
sti
add
xchg
inc
je
mov
sub
pusha
cmpsb
cmp
lea
jo
repnz
cs
sahf
push
push
adc
adc
ret
cmp
or
js
or
push
push
js
rol
sbb
push
data16
push
sub
and
mov
push
mov
notb
inc
xor
outsb
sub
jae
sub
ret
mov
adc
popa
sub
mov
mov
inc
pop
popa
pop
mov
test
jbe
loope
test
push
loope
enter
test
out
cwtl
nop
xor
and
and
subl
sahf
sub
push
sbb
jae
pop
stos
faddl
sbb
adc
push
fsubrl
mov
pushf
addb
push
fwait
adc
sub
push
es
lock
negl
jmp
sub
adc
xor
daa
mov
mov
sbb
pop
cld
pop
les
cwtl
pushf
inc
xchg
cmpsl
dec
mov
subb
daa
dec
sbb
add
pop
push
jns
jl
test
hlt
push
pop
dec
xchg
leave
cmpsl
pop
xchg
push
sub
nop
mov
stos
ja
adc
je
or
dec
loopne
je
push
loope
iret
adc
jmp
inc
loopne
push
and
stc
sub
dec
pop
mov
mov
call
repnz
adc
pushfw
pop
jmp
push
dec
pop
inc
sahf
repz
or
mov
inc
xchg
pop
mov
rclb
xor
sub
jmp
add
mov
jmp
cmp
push
sbb
sub
lods
sub
inc
shrb
xor
lea
test
adc
inc
sub
xor
leave
cmpsb
add
add
mov
or
imul
push
or
inc
or
add
jmp
xchg
or
cld
pop
and
sub
cmp
dec
dec
loop
pop
pop
or
stos
push
shlb
xchg
repz
ds
mov
cwtl
fildll
jle
pusha
inc
add
or
sbb
or
jmp
inc
es
aam
sbb
jne
ljmp
xor
add
xchg
or
fnstenv
pop
pop
inc
mov
mov
adc
and
stos
push
jmp
outsb
movsb
sti
lods
cld
cltd
inc
add
inc
sbb
add
and
adc
mov
xchg
sbbb
push
and
scas
call
fsubl
dec
and
ret
mov
mov
incl
xor
sbb
xor
inc
add
jbe
divl
jne
gs
cmp
pop
push
orl
or
jbe
dec
andb
out
out
loope
ficoms
or
cmp
or
pusha
pop
add
cmp
adc
call
or
ds
cmp
or
shrl
push
mov
clc
mov
mov
ja
or
sbb
dec
stos
and
mov
fidivl
pop
mov
mov
adc
cltd
adc
sub
adcl
or
push
icebp
push
mov
jo
push
adc
dec
pop
psubw
ficoms
jnp
or
cmp
add
xor
jmp
out
push
pop
push
cld
jmp
adc
jno
push
repnz
stos
mov
js
loopne
test
cmp
inc
mov
xchg
es
aas
test
push
cli
adc
lea
push
bound
pop
insb
cmp
icebp
jb
add
xchg
testl
psubusb
push
or
ret
dec
pop
push
jne
mov
mov
push
or
scas
sete
sub
or
les
fcoml
inc
loopne
dec
jns
in
sub
push
cltd
pop
inc
jmp
dec
rolb
add
xor
mov
or
loop
cmp
cmp
or
or
std
mov
add
dec
adc
in
sub
sbb
addr16
fldcw
repnz
das
dec
test
xchg
xchg
ss
sahf
dec
jae
xor
jmp
and
pushf
and
fcoml
push
push
mov
stos
and
xorl
inc
fmuls
mov
sbb
pop
daa
popa
dec
xchg
into
pushf
adc
add
cli
in
flds
lea
dec
push
push
pop
inc
pop
movsb
xchg
adc
test
loope
jmp
or
xchg
in
xchg
add
sub
cld
inc
cmp
into
mov
call
pop
or
les
insl
pop
jnp
es
dec
xchg
or
test
xor
and
shl
jb
xchg
je
push
or
add
mov
iret
sub
add
push
push
hlt
dec
pop
cmp
xchg
sbb
push
add
xchg
pop
jbe
adc
push
fiaddl
push
movsl
and
push
fdivrl
in
mov
jns
and
in
aas
inc
add
lock
sbb
dec
inc
lock
dec
rcll
clc
loopne
adc
mov
mov
xchg
pop
sub
and
or
inc
jae
psllq
call
call
cmpb
inc
or
test
popa
imul
sbb
add
jg
mov
fmull
aaa
std
mov
pop
mov
repnz
int3
rcll
add
out
add
xchg
jge
lcall
or
bound
xchg
mov
or
push
std
fsubrp
movsb
xor
add
pop
shlb
enter
mov
out
rorb
jb
inc
lea
jge
rcrl
mov
into
inc
or
lea
dec
mov
cmp
lea
test
push
cmovbe
cmp
xchg
or
movl
jge
jb
or
les
cwtl
pushl
xchg
push
jbe
or
xchg
popa
lea
mov
imul
adc
push
aam
ret
mov
xchg
sbb
clc
pop
add
jnp
lea
push
pop
push
movsl
xchg
mov
lods
data16
jno
add
push
dec
xchg
mov
sbb
imul
cmc
inc
sahf
aaa
ret
je
mov
push
jbe
call
aam
cmp
xchg
add
es
jmp
incl
cltd
out
pop
mov
cmpsl
xchg
aam
orl
movsl
dec
mov
sbb
aam
lcall
mov
cmp
stos
add
or
mov
push
stc
xchg
mov
jnp
mov
loope
and
mov
icebp
aaa
add
lea
add
xchg
aas
mov
pop
lret
sbb
add
movl
loopne
xor
int
xchg
xor
outsb
dec
addl
cld
jno
fiadds
push
inc
outsb
add
sub
mov
add
sbb
and
xchg
or
jbe
cmp
mov
test
rolb
mov
pusha
jo
loopne
aaa
push
addl
and
call
shll
or
test
sub
sbb
lods
loopne
xchg
in
dec
inc
inc
or
or
adc
insl
or
push
in
mov
adc
mov
les
adc
jo
lock
movsl
mov
or
xchg
xchg
pop
jl
out
cltd
adc
cwtl
add
in
repz
push
jecxz
test
or
or
jbe
mov
adc
out
mov
xor
xchg
aam
ret
pushf
inc
in
pop
daa
sub
pop
and
dec
icebp
out
jl
cmp
test
lcall
mov
sub
xchg
das
mov
leave
and
fs
sub
and
enter
adcl
sahf
and
xchg
les
test
gs
push
outsl
scas
or
iret
sub
scas
pop
in
add
fbstp
insl
dec
pop
xorb
xor
aam
push
mov
or
nop
rol
sbb
ret
icebp
lret
loopne
push
sbb
fwait
cmp
sbb
jne
jmp
test
push
sub
adcb
push
lock
cmpb
xchg
or
cmpsb
xor
testb
lods
mov
gs
inc
test
or
push
div
pop
sbb
jae
sbb
outsb
mov
stos
jge
sub
dec
imul
inc
dec
push
push
test
mov
out
push
or
in
in
fwait
dec
movsl
push
jmp
jmp
movl
mov
jo
dec
andl
xchg
fcomi
cmpl
rorb
inc
push
jmp
ret
pushf
xchg
popf
push
push
jne
push
sub
nop
cmp
inc
lock
inc
sbb
cmp
push
lds
pop
push
cmpsl
loopne
pop
aad
sub
popa
andl
dec
movb
mov
adc
xchg
pop
fisttpl
push
or
inc
sub
push
cli
push
lea
pop
sbbl
mov
rcll
dec
mov
mov
orl
test
push
outsl
andl
test
adc
js
pusha
or
aad
scas
xor
dec
cmp
cmp
jbe
cmp
jbe
jae
out
arpl
jbe
lea
mov
inc
loope
and
jp
ret
fnstcw
insl
mov
sub
push
jbe
aam
inc
lods
add
inc
dec
pop
push
pop
dec
fs
xor
dec
mov
sahf
jnp
add
lods
push
pop
ffreep
jne
push
aad
in
inc
or
pop
dec
in
outsl
mov
into
push
mov
and
sub
mov
mov
pop
sub
and
cmp
jb
lods
pop
dec
ret
movsb
sbb
movsl
or
push
cmp
mov
and
loopne
mov
sbb
and
in
inc
push
inc
sbb
leave
in
mov
int3
adc
lret
or
xlat
dec
loop
in
pop
rcrb
arpl
mov
rorl
insl
mov
jno
jo
add
cmp
shll
adc
inc
es
int3
shlb
les
mov
inc
push
inc
imull
dec
mov
inc
sbb
sub
dec
or
repnz
and
jecxz
in
or
push
mov
jge
sbb
xchg
lea
or
addr16
add
add
rcll
jne
mov
sub
or
adc
shlb
imul
push
jle
sbb
cld
adc
aam
movsl
loope
push
aad
shll
mov
leave
and
loope
add
out
cmp
inc
dec
push
push
push
jle
dec
pop
loopne
mov
push
jo
adc
pop
or
pop
mov
repz
and
adc
hlt
jne
jl
out
fildl
mov
push
sbb
test
call
cmp
inc
in
jmp
mov
mov
popa
dec
inc
pop
pop
add
or
rcrb
jle
cmp
mov
sbb
adc
out
xchg
adc
cmpsb
adc
cld
in
data16
movsl
and
outsl
sub
js
sbb
test
loopne
add
rcr
push
pop
mov
sahf
movsb
das
je
push
xchg
push
testl
xchg
ja
cs
sub
and
ss
xchg
daa
pop
rep
les
cmpsb
or
cmp
mov
mov
xor
in
lahf
enter
cmpsb
rcl
inc
cmpsb
xchg
xchg
int3
int3
int3
enter
int3
andl
mov
iret
pop
pop
pop
dec
popl
or
ffreep
mov
pop
jge
inc
incl
or
test
jnp
sub
and
xor
adc
mov
push
mov
push
jmp
lea
push
hlt
movsb
jmp
or
push
fnclex
push
mov
mov
out
stos
test
sbbl
or
std
gs
cmp
or
sub
mov
mov
clc
or
dec
ds
repz
test
test
jno
inc
shll
int3
mov
adc
pop
sbbl
dec
ret
fcom
out
mov
lock
adc
or
dec
adc
es
mov
mov
xor
movsb
inc
pushf
push
mov
and
inc
mov
sub
and
es
push
mov
jae
jg
mov
jmp
push
add
cmp
mov
mov
mov
mov
scas
pop
jmp
lcall
lods
cmpsb
mov
daa
popf
or
js
pop
push
inc
pop
push
add
inc
push
inc
xor
fsubrs
sbb
and
hlt
push
cmpsl
xor
pop
push
fsts
data16
shrb
fsubl
jbe
pop
cli
push
xor
xchg
jg
cltd
rorb
fcomps
rcrb
inc
addl
jp
movsl
or
or
pop
daa
mov
push
incl
scas
cmp
or
lods
shl
pop
pushl
dec
mov
imul
xchg
dec
dec
fsubs
jmp
adc
out
xchg
out
fnstcw
movsb
daa
dec
insb
shrb
inc
inc
xlat
and
fildl
hlt
and
sbb
jecxz,pn
mov
sbb
sbb
adc
fisubl
or
fmuls
mov
sub
push
dec
rorb
pop
sti
push
mov
mov
xchg
aaa
mov
push
cmp
xlat
mov
sbb
jle
add
push
hlt
xor
jmp
shrb
dec
push
sbb
lret
or
out
movsl
cmp
rcr
rclb
xchg
sbb
int3
dec
mov
out
push
adc
clc
repz
pop
clc
jne
loopne
jl
hlt
jmp
cmpl
mov
sub
or
sub
and
xor
clc
dec
and
out
clc
push
sub
and
inc
push
mov
aas
sub
mov
js
pusha
in
dec
rcrb
dec
fwait
loopne
or
call
ss
xor
rorb
cmp
inc
in
dec
push
fwait
jo
lret
insb
or
cmp
das
dec
mov
fwait
mov
cs
nop
pop
add
xlat
push
imul
adcl
mov
sub
rcrl
cs
aam
les
jno
xchg
or
sub
jae
mov
add
hlt
mov
icebp
pop
xor
mov
or
push
clc
pop
jbe
shl
lret
lcall
pop
push
push
add
movsl
popf
pop
or
push
mov
mov
dec
add
pop
cmp
push
sub
jnp
jo
fwait
xor
cmp
adc
movsb
es
push
add
or
mov
and
adc
incb
mov
cli
push
xchg
adc
mov
add
insl
cwtl
aas
push
mov
push
std
pop
imul
push
cmp
jbe
lock
mov
and
adc
jg
mov
in
mov
mov
testb
pop
xchg
enter
cmc
xchg
fsub
jl
add
push
push
or
insl
shl
in
push
push
shl
aad
fmul
pop
mov
dec
add
or
xor
jg
cmp
mov
adc
adc
mov
dec
mov
jl
cmp
or
mov
mov
pusha
cmp
scas
hlt
xor
push
adcl
cmp
add
mov
lret
ljmp
fsubrs
pop
xor
cmp
je
in
mov
push
cmp
pop
adc
push
stc
push
adc
in
add
mov
pop
cli
add
xor
push
scas
xchg
push
push
test
push
loop
sti
xor
popf
hlt
or
cmp
inc
in
mov
mov
mov
jmp
in
sbb
sti
add
cmp
xchg
data16
mov
or
sbb
jne
add
jae
push
sarl
mov
pushf
jle
movsl
movsw
push
cld
movsb
fnstenv
jmp
xor
hlt
decl
mov
adc
ljmp
or
mov
inc
inc
adc
leave
std
adc
movb
fs
cmc
cmpb
pushf
stos
pushf
mov
push
mov
and
es
inc
cmp
lret
add
movsbl
xor
dec
pop
lcall
add
pop
repnz
jbe
push
cld
je
js
jae
push
push
mov
and
sbb
add
stos
xchg
and
ret
xchg
jne
xchg
push
nop
sub
xchg
clc
add
jnp
test
add
push
insl
jmp
imul
rolb
inc
add
fisubrl
cmpb
mov
mov
cmp
cmp
pusha
or
sbb
and
popf
mov
jl
cmp
mov
arpl
mov
js
mov
and
sbb
inc
push
xchg
pop
xor
jbe
xchg
mov
ss
add
in
rcll
push
cmp
push
push
pop
cmp
mov
add
es
inc
nop
jb
dec
push
hlt
lods
dec
idivb
lock
inc
mov
xchg
and
jmp
pop
rolb
or
imul
xor
sub
add
dec
dec
dec
dec
add
push
pop
mov
dec
dec
or
or
jnp
or
jbe
aaa
aaa
aaa
or
jno
jmp
push
jmp
por
aaa
aaa
aaa
adc
pop
adc
pop
adc
push
adc
dec
aaa
aaa
aaa
aaa
adc
dec
adc
aas
pop
jmp
aaa
aaa
aaa
aaa
sbb
xor
jmp
sbb
es
aaa
aaa
aaa
sbb
and
pop
pop
jmp
aaa
aaa
aaa
aaa
and
or
jmp
and
pop
xchg
paddusw
add
test
test
leave
fsubs
fsubs
cmp
jnp
or
adc
and
iret
repz
xor
inc
dec
push
push
cmp
repz
pusha
gs
repz
repz
jle
mov
repz
lea
cmp
repz
mov
mov
repz
leave
into
aam
in
mov
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
mov
test
stos
adc
cmp
mov
adcb
push
mov
push
cltd
orl
ss
or
cmp
imull
xor
cmp
jle
mov
outsl
lods
mov
cmp
pop
aam
mov
js
jo
in
jae
sub
mov
sti
clc
pop
mov
sbb
pop
movsb
xchg
rcll
jl
hlt
mov
mov
ss
mov
mov
lods
push
inc
cmp
jbe
cli
lods
inc
ret
in
and
push
pop
cwtl
jl
push
mov
push
js
loop
add
insb
push
mov
pop
push
fwait
test
jo
in
add
mov
pop
sbb
mov
cmp
adc
xchg
jb
js
stos
adc
sub
pop
sbb
iret
adc
sbb
sub
xorb
orl
out
sub
xchg
inc
push
js
jl
push
inc
mov
ljmp
xor
mov
nop
in
adcl
popf
cwtl
dec
push
cwtl
xchg
sub
mov
adc
sbb
mov
cmp
dec
and
add
push
pop
cmp
call
xchg
jbe
dec
lock
movsl
jo
jne
mov
inc
cld
enter
cmp
push
mov
pop
mov
fs
xor
iret
mov
in
sbb
add
add
js
shrb
sub
push
dec
add
sbb
clc
inc
adc
cmp
mov
inc
pop
arpl
ljmp
decl
adc
adc
mov
mov
pop
lock
jecxz
jmp
outsl
mov
add
cltd
dec
add
jge
jne
pop
mov
popl
popa
add
xor
jl
loopne
cmp
push
push
mov
sub
push
and
mov
push
or
mov
mov
outsl
iret
adc
fidivrl
test
scas
dec
arpl
pop
leave
dec
insl
adcb
imul
imul
scas
cmovnp
cmp
in
jle
mov
lock
pop
cmp
cmpsl
add
add
sbb
mov
or
inc
inc
jno
add
sbb
aaa
push
adcb
xor
test
pusha
lret
ja
jge
inc
xchg
fs
ret
mov
mov
mov
out
mov
mov
push
outsb
or
inc
das
mov
adc
push
paddb
mov
or
xchg
lock
js
xor
lods
inc
add
add
pop
or
adc
test
cmp
insl
xchg
hlt
loope
fadd
adc
push
or
sbb
adc
adc
andl
pop
mov
test
rcrb
push
inc
lret
fisubrs
xor
dec
out
inc
nop
add
adc
loope
and
jg
cwtl
mov
lods
je
push
lea
pushf
pop
push
xchg
push
jecxz
sub
dec
mov
sub
nop
popf
sub
sbb
sub
mov
movsb
clc
mov
cmp
pop
or
dec
pop
adc
inc
and
outsl
pop
cmp
push
fs
clc
or
cmc
push
dec
dec
in
pop
cmp
adc
dec
iret
mov
sbb
xchg
loopne
les
cltd
fwait
cmp
pop
add
add
fidivl
push
pop
push
inc
scas
test
imul
rolb
dec
popa
sarl
cltd
dec
fmul
stc
faddl
pop
shll
enter
sbb
dec
scas
les
push
add
sbb
leave
mov
or
enter
andl
divb
popa
jb
jnp
push
lock
jbe
dec
and
add
roll
xchg
sbb
inc
xor
cmp
lods
xchg
movb
cmp
cmp
jmp
pop
sbb
ss
fdiv
imul
inc
pop
pop
pop
repnz
and
mov
popa
mov
or
sbb
sbb
pop
push
xor
cmp
call
add
add
inc
cmp
cmpb
or
insb
cld
cmpsb
pusha
add
xchg
sbb
cmp
dec
push
cltd
nop
loopne
loopne
sub
xor
sahf
enter
push
sbb
dec
jae
int3
or
inc
sbb
idiv
add
enter
das
sti
std
sbb
cmpsb
xchg
dec
shl
or
cmp
inc
adc
rolb
push
sbb
cmp
pop
push
test
adc
push
mov
lods
inc
xor
pop
dec
je
lods
hlt
test
mov
xor
stos
pushl
lock
xor
shlb
add
js
cmp
mov
pop
mov
add
mov
mov
mov
sbb
ret
in
in
sub
subb
mov
cmp
testb
xchg
loope
add
jae
xchg
mov
xor
adc
or
lods
inc
push
or
or
inc
call
and
stc
jno
add
dec
jp
js
int3
enter
mov
sbb
jp
cs
je
mov
pop
or
fsubl
sbb
mov
jnp
sub
insl
cmp
and
push
adc
or
popa
mov
mov
and
inc
add
fmull
dec
pop
xchg
cmp
ret
pop
addb
aas
pop
sar
mov
dec
mov
frstor
dec
aas
add
pop
sub
or
shlb
sub
aas
jbe
jecxz
lret
je,pt
cmp
mov
or
aam
jg
mov
sbb
fisubrs
adc
jb
pop
dec
and
push
popf
inc
or
lods
jo
std
add
mov
pop
xor
dec
adc
inc
cmp
call
ds
sbb
xchg
jo
outsl
pop
fisubs
faddl
std
in
mov
stos
sbb
push
xor
jns
lods
mov
mov
repnz
sub
fcoml
mov
out
cli
test
xchg
cmp
mov
pop
pop
lods
test
loop
pop
pop
jle
push
gs
daa
and
jne
mov
jmp
cmp
je
adcb
daa
mov
mov
fiaddl
pminsw
add
mov
push
pop
add
mull
mov
and
sbb
and
xor
cld
mov
scas
lock
in
sub
jecxz
addb
adc
test
sti
xchg
mov
inc
mov
insl
inc
mov
xor
mov
xor
sbb
movsl
je
ds
push
add
mov
push
push
jne
xchg
jbe
pusha
mov
xchg
and
mov
add
call
jo
push
push
dec
int3
pop
and
xor
in
filds
lret
shrb
cmp
adc
mov
add
in
lds
shll
push
arpl
cmp
inc
or
arpl
inc
and
or
jno
push
ss
xchg
out
cmp
add
jecxz
pop
pop
inc
xorl
add
pop
pusha
or
jns
sbb
mov
pop
repnz
and
or
sub
in
adc
imull
adc
in
cs
enter
adc
push
xor
popa
xor
pop
shll
sbb
in
cltd
pop
or
push
mulps
dec
add
hlt
movzbl
sbb
insb
add
sub
xor
aam
sbb
shl
inc
add
pop
push
mov
xor
shlb
cmp
mov
xor
pop
inc
lret
dec
dec
aas
cmp
dec
jb
outsb
xchg
push
push
pop
dec
add
mov
pop
cmc
inc
pusha
nop
pop
aaa
lea
adc
fwait
movsb
cmp
insb
jo
in
sbb
adc
js
jl
xor
dec
cmp
mov
xchg
cwtl
lahf
add
or
add
mov
jmp
cmp
into
psrld
paddq
incl
or
addl
push
add
ds
xchg
int3
sahf
lret
adc
and
nop
or
fmul
je
jl
and
cmp
or
incl
cmp
jl
sub
cwtl
cmp
mov
cmp
in
in
push
jne
inc
cmp
xor
stc
xor
inc
sti
je
out
xor
xor
mov
push
das
bound
mov
cs
pop
lock
jmp
imul
jmp
stos
cmp
pop
add
out
xchg
xchg
shlb
sub
sub
push
aaa
or
push
iret
or
mov
cmp
jne
testb
cmpsl
xor
in
push
repnz
and
imul
sbb
adc
add
push
hlt
push
jle
arpl
jl
in
sti
and
popf
data16
jmp
xchg
inc
clc
cmpl
ss
jmp
xor
lea
xchg
js
lods
popa
mov
or
sub
and
fcomps
xchg
jge
int3
mov
cld
cmpl
into
jl
enter
sub
mov
cmpsb
fstpt
pop
movsb
incb
pop
cmp
jge
rcl
push
push
pop
lret
jl
popl
mov
roll
cmp
pushf
inc
hlt
inc
add
pop
pop
sbb
xor
scas
pop
mov
and
insb
mov
hlt
mov
mov
mov
lock
sub
call
xchg
jb
push
pop
mov
adc
mov
js
sbb
pushl
pop
jne
push
inc
pop
inc
insb
push
cmpb
jno
push
inc
fldcw
push
xchg
pop
jo
push
push
cld
mov
add
add
jge
mov
std
sbb
sbb
push
clc
mov
sub
mov
fnstenv
fcoms
dec
xor
mov
mov
pop
push
int3
and
jecxz
cmp
mov
rorb
ret
and
jne,pn
insb
mov
lret
pop
add
nop
lahf
xlat
add
xor
pop
mov
imul
pop
lea
je
popa
xorl
data16
loop
cli
sbb
dec
mov
sbb
adcb
clc
jo
jl
shrb
sub
xor
xor
test
test
pop
add
adc
in
daa
add
cmp
dec
add
cli
mov
jbe
inc
mov
mov
jne
inc
push
mov
xor
sub
xor
fstl
and
cmp
imul
cmp
sti
jne
and
sbb
data16
mov
pop
and
mov
mov
or
inc
or
push
jmp
xchg
cmc
or
and
inc
loopne
shll
lret
xor
inc
pop
or
rorl
mov
jge
add
xchg
and
fldenv
es
cmp
out
rcrl
dec
xor
dec
pop
push
or
imul
inc
or
xor
aaa
mov
mov
mov
sub
jne
xchg
xchg
adc
inc
inc
or
sub
cmpsb
or
adc
jo
mov
int3
mov
je
sub
add
cmp
inc
pop
pop
ds
and
inc
icebp
push
xchg
mov
push
adc
inc
fildl
sbb
stos
mov
mov
inc
iret
xchg
popa
or
push
mov
adc
sbb
inc
jne
imul
shlb
dec
push
js
leave
or
sbb
subl
mov
jo
jo
mov
adc
rolb
add
cmp
pop
adc
mov
ja
jmp
bound
push
sub
push
arpl
fucomip
cltd
scas
dec
repz
dec
mov
fsubs
add
mov
xor
out
insb
sub
and
test
neg
adc
jne
fisubs
lret
mov
push
loopne
add
or
and
cmp
add
dec
and
imul
aam
or
add
mov
or
loopne
sub
addb
or
mov
jno
and
or
jne
pop
push
loopne
dec
sahf
lea
dec
xchg
push
push
leave
or
inc
push
add
loope
xchg
mov
pop
or
lock
mov
xchg
fistpll
mov
aas
test
aaa
mov
movsl
mov
in
lcall
roll
addr16
gs
cmp
jnp
or
nop
inc
mov
inc
or
aam
cmp
jmp
inc
or
repz
mov
cmc
sub
sbbb
xchg
adcl
jb
loope
or
add
dec
xchg
mov
pop
push
je
jbe
clc
lods
xlat
or
add
lock
in
xor
xchg
mov
push
mov
adc
hlt
xor
lock
xor
or
mov
lret
push
pop
loopne
mov
repnz
fidivl
jo
pop
imul
xor
xlat
jns
repnz
inc
push
mov
cmp
xor
loope
or
iret
lock
inc
push
push
repnz
xor
push
xor
inc
sbb
sub
stc
aas
push
xchg
ret
cmpl
adc
and
or
and
add
clc
in
cli
add
xor
inc
sub
dec
jecxz
outsl
cmpsb
mov
mov
cmp
mov
jl
inc
cmp
das
fisttpll
add
pusha
sub
pop
add
mov
xor
sub
adc
sbb
pop
bound
inc
dec
int3
jne
movsl
mov
daa
push
pop
xor
xchg
or
in
push
sub
pop
aam
and
outsl
cmp
or
mov
jnp
insl
add
add
add
xor
imul
or
mov
add
test
fst
or
out
xor
movsb
lds
sbb
mov
ret
sbb
ja
adc
xchg
adc
pop
lock
das
dec
je
data16
pusha
add
pop
or
push
inc
jb
sbb
xor
inc
cmp
jl
stos
add
or
push
jp
out
je
gs
lret
call
push
mov
pop
icebp
inc
ret
and
mov
pusha
aaa
dec
movsb
jle
hlt
dec
or
xor
lret
dec
aam
ja
or
out
jle
jle
add
mov
jmp
xor
idivl
andl
dec
icebp
icebp
lea
jne
mov
movsb
rorl
repnz
push
inc
pop
xchg
shll
push
movsb
jne
xor
mov
nop
mov
cld
femms
mov
add
mov
bound
inc
aaa
ss
fsubrs
and
inc
cmp
and
mov
sbb
xor
movsb
or
jae
jecxz
adc
push
lcall
xor
mov
jl
jno
mov
fstl
jbe
adc
mov
aas
add
movb
lock
mov
xor
and
inc
sar
in
rcl
jnp
cmp
dec
clc
xchg
push
aaa
mov
or
and
inc
pop
sbb
rol
adc
imul
jne
adc
xchg
aam
cmp
adcl
add
pop
cmc
jmp
aad
inc
mov
popa
xchg
add
loopne
cmp
shlb
adc
fisttps
ljmp
mov
test
testb
aam
or
sbb
pop
cmp
repz
push
out
aam
xchg
mov
je
or
hlt
in
das
jne
push
mov
inc
mov
scas
adc
add
cwtl
lea
jg
fistps
mov
sub
inc
jmp
push
jg
jg
jmp
add
add
mov
enter
rolb
sar
loopne
add
and
shl
lret
mov
push
in
sti
xchg
or
movsw
movsb
mov
inc
mov
and
arpl
clc
jle
js
jge
cs
push
xor
cmp
xchg
daa
sub
cmp
sub
cmc
or
jo
ss
push
outsl
sahf
fs
dec
popl
fisubrs
dec
sbb
movb
add
jnp
mov
and
sub
shlb
cmp
dec
test
jns
ret
and
sbb
dec
ljmp
add
add
aaa
mov
fstl
fldz
fcomp
fnstsw
aaa
add
andb
jmp
data16
push
jo
sbb
rcll
adc
push
icebp
sub
shl
imul
sub
inc
push
xchg
lock
movsl
adc
pop
fs
push
cmp
pop
lock
movl
je
dec
inc
rolb
movsb
xor
push
xchg
movsb
sub
enter
or
jge
cmp
mov
fldl
or
xchg
sub
jmp
inc
mov
sub
fs
add
or
sbb
and
pop
pop
add
fs
ds
ret
jne
cmp
lock
sbb
insl
push
test
dec
and
cltd
outsl
lock
test
jnp
movsl
in
or
stos
insl
jmp
fldl
push
pop
test
stos
lock
scas
mov
or
mov
dec
shl
fimuls
enter
sbb
sub
loopne
aaa
and
cmp
aam
xchg
mov
mov
pop
fwait
sbb
pop
push
pop
rolb
add
push
lds
hlt
jnp
mov
mov
mov
icebp
pop
add
pusha
fstps
inc
sbb
add
mov
add
adc
and
adcl
mov
xor
int
cmp
lret
pop
sbb
or
ror
inc
pushf
mov
out
sbb
pop
sbb
push
mov
adc
cwtl
add
xchg
mov
out
popf
lods
jmp
push
and
or
dec
sub
or
cmpl
or
adc
and
add
nop
mov
adc
lock
adc
push
push
or
xor
loopne
inc
push
adc
lods
add
adc
push
pop
and
jne
movsb
aaa
aaa
mov
mov
add
ss
pop
mov
cmp
ss
cmp
pop
mov
push
mov
push
add
mov
out
sbb
mov
jne
xor
std
push
ficompl
dec
inc
adc
mov
mov
loop
mov
loopne
in
rcll
rclb
add
add
neg
or
pop
dec
and
xchg
xchg
mov
test
inc
or
adc
inc
and
lock
add
push
mov
test
sbb
add
inc
cwtl
add
iret
cmp
mov
or
mov
dec
push
push
sbb
pop
jp
or
mov
cwtl
pop
push
lock
lret
loopne
jecxz
xor
inc
inc
mov
rclb
or
cmp
ss
dec
and
push
fwait
rolb
add
sbb
repz
jmp
fstps
mov
jno
mov
nop
pop
pop
pop
cmp
nop
xchg
jnp
cmp
jne
xchg
mov
add
rcrb
sub
pop
fcoms
test
pop
aaa
mov
add
inc
adc
or
adc
fimuls
add
inc
pop
pop
or
jmp
addb
pop
push
or
sbb
push
xor
push
jmp
cmp
cwtl
jne
movsb
cmp
loop
jmp
andb
repnz
mov
das
xor
push
push
sbb
adc
add
add
fcompl
inc
mov
ss
push
pop
mov
into
mov
add
or
popa
inc
insb
sbb
test
aaa
push
aam
fdivrs
jb
cmp
xor
test
jnp
push
pop
push
jbe
js
orl
popa
push
push
push
add
jns
pop
ss
add
xchg
in
inc
xchg
cmpsl
mov
pop
inc
xor
and
cmp
xor
push
push
push
dec
pop
or
pop
arpl
push
dec
jbe
inc
and
add
inc
xchg
push
and
rcll
or
sub
xchg
int
lds
cmp
add
fwait
adc
daa
push
cmpsl
inc
into
inc
xor
jp
adc
mov
mov
push
inc
rolb
pop
stos
add
lods
sbb
bound
testl
or
mov
addr16
sub
ficoms
shll
jb
push
sub
lods
imul
movsb
xchg
mov
xor
icebp
insb
pextrw
insb
shlb
jl
xchg
sarl
sbb
add
jbe
adc
mov
mov
sar
mov
sub
jbe
ss
sbb
das
cmp
movsb
push
in
cmp
push
mov
sete
cmp
xor
inc
sub
aad
out
inc
xchg
lock
shrb
mov
clc
cmp
and
rclb
sub
cmp
loop
jnp
nop
pop
adc
pop
das
nop
mov
enter
cmpb
dec
pop
and
push
jne
fisttpll
fs
xor
sub
pop
aam
jmp
cmp
fstpt
jb
and
cmp
adc
subb
sub
insb
sub
push
fdivs
dec
mov
add
fimull
popa
jo
sub
leave
hlt
in
add
das
insb
pop
repnz
or
es
andb
enter
pop
xchg
sub
in
and
jnp
add
inc
jmp
call
push
popa
dec
pop
sbb
mov
jo
movsb
xor
test
xor
xor
jo
xor
in
mov
loope
arpl
pop
stc
push
or
pop
push
call
xchg
or
or
cwtl
in
sub
mov
das
add
lcall
lods
es
mov
fs
fwait
scas
inc
fsubrs
out
sti
pop
fs
aaa
lock
inc
dec
jge
dec
insb
sub
sbb
imul
in
pop
cmp
fwait
cli
cmc
jmp
xor
jo
push
in
mov
shr
inc
cmc
add
push
cmp
fwait
cli
popa
add
mov
cmp
mov
repz
lret
adc
rolb
sbb
mov
loop
xor
rolb
orb
adc
cmp
pop
sub
push
add
clc
and
movsb
aas
add
stos
cli
add
stos
arpl
sbb
cld
fisttpll
push
xor
into
adc
psraw
or
outsl
jo
dec
push
add
mov
inc
fs
sbb
push
or
outsl
loopne
xor
out
icebp
sub
ficompl
push
mov
out
or
aam
test
cmp
jle
dec
flds
dec
add
xor
int
cmp
inc
inc
inc
cmp
ja
or
bound
fcomps
adc
or
push
or
xor
push
pop
add
pop
lock
add
pop
jnp
mov
rorl
sbbl
or
scas
xor
cld
push
push
push
push
jb
pop
mov
addl
mov
pop
mov
pop
out
add
push
xchg
xor
push
or
push
cmp
js
sub
enter
or
pop
xlat
or
add
fdivrp
das
repnz
bound
xor
or
and
pop
jg
jb
inc
push
stc
inc
jae
test
test
out
inc
or
add
sbb
test
lock
je
sbb
sub
test
push
add
in
lret
or
das
xchg
cld
das
sub
cs
or
xor
in
xchg
ror
arpl
add
or
sbb
ljmp
lcall
push
in
adc
mov
clc
and
loopne
subb
dec
fisubs
jno
movsb
into
imul
fcoml
adc
jmp
dec
inc
dec
call
imul
sub
dec
inc
mov
mov
insl
int3
in
fiadds
sbb
mov
push
mov
cmp
dec
sbb
jb
mov
pushf
cmp
add
call
dec
movsb
push
les
sbb
xchg
enter
or
sub
pop
add
add
js
cmp
sub
leave
nop
cmp
pop
or
sbb
or
lock
loop
jne
clc
cmpsb
rolb
loope
adc
mov
ljmp
nop
sub
add
pop
xor
cmp
fcomi
xor
punpckhdq
cmpsl
or
pushf
xchg
test
mov
xchg
adc
pop
sbb
cmp
lods
xor
jae
push
mov
mov
aaa
mov
jmp
jns
mov
rolb
sub
push
rol
mov
les
or
push
push
insb
cld
sub
and
push
push
dec
out
mov
or
xor
lea
ss
pop
xchg
xor
xor
xor
ds
ret
pop
fs
mov
enter
sahf
or
mov
call
add
adc
addb
loopne
dec
mov
sbb
sbbb
rolb
sbb
ror
ret
mov
js
ret
aas
cmpb
dec
mov
inc
sbb
and
pop
mov
lods
out
daa
or
dec
add
add
mov
push
sbb
push
pop
in
jle
sti
movsb
shrb
sub
sbb
pop
fcoml
mov
cli
xor
shl
push
add
jno
fs
sub
roll
fdivrs
sbb
jo
rcll
cmp
and
lods
es
push
mov
adc
and
jnp
mov
push
addb
pop
scas
bound
mov
movsl
call
lds
loopne,pn
sub
test
divl
push
fcoms
cmpsb
pop
mov
sarb
cltd
push
into
or
xchg
leave
xor
dec
enter
xchg
loopne
cmc
fadd
cmp
addl
cmp
movsl
ljmp
stc
movsb
cmp
or
push
je
dec
inc
or
add
or
dec
xor
mov
add
call
loope
in
push
and
sbb
rcrb
push
pop
fcmovb
ljmp
and
or
arpl
jmp
adc
push
fs
aam
daa
lock
cwtl
sbb
jp
or
jns
daa
jns
add
and
sub
fnstcw
and
xlat
stos
mov
xor
sbb
sbb
or
movsb
inc
sbb
add
add
add
ja
dec
rorb
outsb
cmp
ret
clc
movzbl
cmp
xchg
aam
pushf
add
adc
mov
or
add
or
pop
xor
push
jl
mov
scas
push
xor
flds
add
push
arpl
shll
jae
lock
push
add
bound
iret
sbb
cmp
imul
cmp
pusha
jge
movsl
sub
inc
mov
push
mov
insb
gs
xchg
add
push
lock
xor
adc
enter
jge
and
or
xchg
mov
sbb
mov
int
push
sbb
sub
xchg
lock
adc
flds
iret
adc
adc
pop
xchg
cli
movsb
mov
sarb
sbb
shrl
sarb
mov
push
sbb
adc
in
shr
sarb
ret
lods
test
xchg
jle
adcb
add
fcmovu
fsubs
out
mov
roll
frstor
add
mov
decb
pop
cmp
cmp
push
enter
mov
add
lods
push
push
mov
or
sti
dec
mov
mov
int
sarb
pop
stos
sub
dec
mov
scas
xorl
pop
pop
in
cmp
je
insl
jnp
and
mov
push
add
and
test
aaa
pop
dec
push
xchg
fs
xor
mov
sub
insl
pop
jbe
push
fcoms
cmp
mov
aas
xchg
out
jo
push
arpl
pop
cmpsl
rclb
mov
lahf
pop
mov
lea
cmpsb
jo
sbb
loopne
lods
dec
and
or
mov
mov
fucomp
test
sarb
mov
pop
cmp
fwait
adc
clc
jb
xchg
lods
sbb
cmp
xchg
dec
jae
or
incl
out
lea
push
out
xor
mov
or
mov
es
cwtl
or
add
leave
adc
insb
jge
mov
mov
mov
sbb
loopne
jo
adc
sub
and
jb
popf
mov
cmp
mov
dec
adcb
pop
mov
cmp
je
aaa
iret
inc
or
sub
jne
sbb
fwait
insl
mov
js
movsb
jg
test
or
movsl
mov
inc
mov
lds
pusha
fwait
jp
dec
ret
or
das
loope
sti
loopne
add
cld
or
rep
mov
loope
push
cmpsb
inc
icebp
cmp
jne
adc
lea
xor
rolb
mov
pop
jle
mov
or
lret
inc
mov
inc
and
scas
mov
push
stos
xchg
mov
in
cmp
pop
jns
adc
xor
call
call
pop
cmpl
hlt
jle
push
in
cmp
push
jae
ror
mov
lods
cmp
das
jbe
lods
mov
sahf
ss
ljmp
mov
inc
pusha
ja
jb
mov
cs
sub
push
je
ja
pop
push
pop
sbb
adc
xor
xchg
pushf
pushf
jmp
push
mov
imul
sbb
pop
pusha
lods
es
or
mov
xor
lods
dec
movsl
js
cltd
movsl
and
jl
jp
nop
and
popa
nop
add
fimuls
adc
sbb
mov
xchg
enter
fs
dec
outsb
adc
lret
cmc
adc
pop
add
std
mov
inc
cli
inc
cwtl
lret
aaa
or
fisubl
loopne
cltd
add
xor
inc
xchg
add
or
mov
in
adc
or
addr16
and
mov
mov
sub
inc
xor
mov
loopne
jne
lret
jbe
loope
dec
imul
addb
pusha
sub
or
push
adc
inc
or
mov
pop
jne
adc
sub
cmp
sbb
mov
fcoms
mov
addl
sub
sub
sbb
lods
sbb
mov
add
insl
mov
rclb
fidivrl
adc
sarb
adc
aam
in
cmp
lret
add
call
loopne
add
inc
sbb
push
mov
lahf
sub
add
push
mov
adc
aas
push
push
popf
mov
mov
pop
mov
mov
dec
xor
and
inc
and
cmp
add
cmp
dec
and
shlb
jmp
lods
sbb
aas
push
test
lret
adc
inc
mov
iret
sub
cmp
scas
add
xchg
xchg
insb
add
dec
mov
and
dec
ds
movsb
not
popa
lret
add
cmp
push
or
and
movsb
dec
pop
cmpsl
sbb
aaa
sti
mov
pop
sub
cmp
mov
call
jecxz
ret
sti
sbb
add
adc
jle
inc
pop
xor
push
fwait
je
adc
push
cmp
mov
lea
add
mov
clc
push
or
sbb
xor
loopne
add
pop
mov
or
or
sbb
push
cmpsb
sub
aad
push
xor
ret
mov
mov
cs
call
test
fdivl
pop
inc
mov
cmp
jle
mov
lods
fs
pop
jb
bound
add
push
aaa
rcrb
out
out
mov
je
xor
cmp
mov
cmp
bound
ljmp
sarb
jg
mov
mov
cmp
or
sbb
add
test
inc
out
cmp
je
repnz
movsb
mov
mov
pop
mov
sbb
pcmpgtw
inc
xchg
dec
hlt
cmp
sbb
mov
mov
jg
sbb
sahf
sub
pop
stos
je
dec
push
or
leave
std
fs
or
je
cmp
jne
inc
inc
jmp
inc
fs
and
sbb
xchg
jmp
pop
repz
int3
movsb
inc
jmp
xchg
xor
add
je
cmpb
xchg
in
shl
jne
push
sub
adc
loop
mov
xor
mov
mov
sbb
sbb
or
and
jl
inc
shlb
in
inc
lahf
add
in
and
push
cmp
lock
sbb
ret
aam
pop
in
mov
inc
cmc
and
lret
rorl
enter
inc
dec
fimull
adc
loopne
fisttpll
fcoms
test
loopne
data16
cmpsb
xchg
pop
push
add
inc
mov
les
add
lret
sbb
inc
cmp
test
faddl
xchg
jae
or
push
mov
inc
pop
cmp
jmp
les
sbb
jae
mov
and
adc
ret
ror
add
push
sub
add
call
xor
push
mov
or
int
es
ljmp
inc
sbb
outsl
adc
push
sub
xor
test
or
mov
jae
aaa
test
xlat
add
in
cs
fisttpl
test
loop
pop
mov
insl
mov
xor
and
aas
push
push
push
cmp
push
push
lods
lods
push
inc
xchg
mov
inc
adcb
jae
ret
fimull
ret
xor
leave
push
mov
sar
sub
sub
or
adc
cs
sub
jnp
xor
outsl
cmp
push
add
shlb
call
or
add
mov
push
ss
sarb
loopne
add
and
in
dec
or
fcmovnbe
push
test
bound
fnop
mov
in
int3
aam
gs
dec
repz
push
mov
and
and
enter
mov
rol
inc
mov
ljmp
ret
es
es
mov
rolb
inc
or
and
jne
ss
or
cltd
test
cmp
xchg
or
jbe
xchg
pop
leave
stc
xchg
cmp
push
jae
sub
sub
mov
pop
add
cs
int3
mov
nop
mov
push
add
fnstenv
and
nop
loop
enter
mov
sub
and
daa
sub
fcmovu
bound
lcall
sub
int3
pop
fistpll
fsub
repz
adc
mov
xlat
push
popf
and
adc
pop
movzbl
movsb
add
fildl
stos
mov
inc
jbe
xor
inc
cmp
inc
cmp
mov
aam
pop
or
mov
or
push
add
mov
shlb
fcmovb
jmp
clc
adc
lea
fs
adc
fcompl
into
not
cld
lea
test
pop
stos
fs
xor
sbbl
pop
cmp
jbe
ss
cmp
aaa
jmp
add
mov
and
shld
sbbb
mov
lods
dec
test
shlb
hlt
add
mov
xor
cmp
adc
icebp
xor
insl
cmp
fwait
adcb
jg
or
cli
subb
mov
fsubrs
lea
aaa
loopne
xor
add
inc
fiadds
cs
cld
xchg
ret
sbb
add
add
jo
or
addr16
stc
and
iret
jp
dec
add
testl
test
fdivrl
cmpsl
xchg
stos
jp
cld
nop
cld
in
es
enter
mov
loopne
mov
ret
cmp
add
shlb
inc
and
hlt
inc
add
sbb
lret
in
jmp
ret
into
or
cmp
dec
or
inc
in
add
imul
jl
sub
push
dec
hlt
in
mov
xor
pop
sub
and
nop
jmp
sbb
adc
cltd
ret
dec
mov
jmp
sbb
pop
sbb
pop
popf
subb
jb
xor
dec
dec
sub
mov
dec
mov
or
dec
fistpll
jp
ds
mov
add
or
and
sarb
jle
ret
jge
cmp
jb
cmp
xor
movsl
test
sub
sbb
sub
js
sub
adc
mov
cmpsl
add
add
add
subb
rorb
jg
adc
inc
xchg
push
adc
pop
sub
pop
cmp
lret
push
orl
add
add
lss
mov
push
push
adc
inc
xchg
adc
mov
push
add
push
jbe
scas
nop
add
pop
xor
iret
add
pop
cmp
dec
inc
cmp
inc
adcb
adc
add
jb
or
bound
push
nop
je
je
sbb
dec
mov
xlat
sub
jnp
xor
test
add
push
in
add
xlat
sahf
lock
ficoml
or
movsl
push
movsl
adc
mov
sub
sub
lods
and
rorb
inc
add
xor
imul
lahf
nop
mov
out
or
daa
andb
add
pushf
cmp
adc
punpcklwd
mov
xor
fs
jge
adc
adc
jp
repz
mov
inc
mov
push
xchg
cmp
lods
int3
sub
aam
pop
or
mov
fnstcw
pop
addr16
mov
and
cmp
inc
icebp
int3
out
cmp
and
loopne
add
loope
lcall
enter
mov
adc
and
out
sahf
das
sbb
je
jne
or
or
or
or
in
cmp
pop
push
les
movsb
adc
dec
xlat
fstpt
sbb
sub
nop
add
in
xor
test
adc
ss
cmp
fs
adc
cld
xchg
xchg
mov
loop
xchg
and
push
scas
add
and
rclb
sbb
add
sbb
or
ds
ret
push
fisubl
push
dec
sub
mov
je
cs
mov
adc
or
ret
int3
gs
mov
or
and
pop
stos
add
in
jo
hlt
bound
aaa
hlt
mov
insl
in
fmuls
test
fmuls
add
pop
pushf
dec
push
add
mov
and
mov
adcb
push
subb
adc
inc
sbb
mov
jne
xlat
jmp
push
adc
ficomps
clc
les
sbb
mov
in
pop
sub
je
mov
sbb
cmp
leave
sbb
add
push
imul
push
test
cmc
jbe
jne
inc
xchg
in
in
mov
mov
jl
push
xchg
pop
pop
sahf
ret
sub
lahf
dec
pusha
mov
xor
mov
insl
cvtpi2ps
iret
int3
daa
test
test
in
push
mov
mov
imul
mov
shlb
xor
dec
and
sub
call
cs
cltd
or
mov
push
inc
push
pop
mov
inc
add
pop
lcall
push
movb
jge
addb
adc
into
pop
push
dec
call
jle
ja
movsl
pop
jmpw
inc
repnz
add
or
ja
push
push
subl
adc
xchg
lock
dec
push
pop
rcrb
mov
pushf
cmp
rcll
mov
add
or
mov
outsl
push
sub
pop
adc
fbld
out
loopne
xchg
sbb
push
push
sbb
leave
addl
cmp
insb
add
stos
mov
adc
mov
test
mov
or
mov
arpl
test
ss
imul
inc
jge
daa
mov
aam
std
rcll
lock
enter
idivl
inc
popa
mov
cmp
dec
hlt
lock
jo
pop
or
daa
push
cwtl
sub
jmp
rorl
or
add
mov
jg
add
loop
scas
test
mov
mov
jmp
shlb
dec
dec
or
pushf
inc
pop
gs
dec
cmc
inc
fs
je
mov
aaa
test
je
sub
in
arpl
lahf
add
test
nop
push
inc
mov
hlt
push
mov
loop
in
test
pop
add
add
or
filds
and
ss
add
jns
pop
ret
lock
mov
movb
imul
mov
mov
iret
jb
pop
jl
loop
adc
sti
pop
jp
inc
pop
sete
pushf
cmp
sbb
push
push
pop
and
movsb
outsl
add
jo
sahf
cs
push
lret
and
add
inc
seta
out
sahf
sti
inc
inc
subb
imul
jge
loopne
jp
mov
inc
inc
xchg
data16
fcom
repnz
jns
insb
lods
insb
dec
repnz
jns
in
jo
jmp
add
jb
addl
and
lea
nop
or
sbb
sbb
in
push
daa
call
aam
mov
call
out
inc
or
inc
sub
into
jb
rolb
xor
lret
push
fimull
sbb
nop
into
pop
sub
loopne
jl
stos
fnstsw
jne
push
mov
sub
xor
or
mov
lret
adc
push
add
dec
or
lea
dec
scas
inc
or
roll
jno
xor
adc
push
push
hlt
jl
or
loope
stos
dec
push
ret
cmp
movsl
cmpsb
adc
sub
mov
or
mov
and
adc
insl
stos
pop
in
inc
xorb
insl
dec
aaa
or
and
cs
push
or
xorl
add
dec
pop
add
pop
mov
adc
pop
jge
xorl
xorb
and
pop
repnz
add
mov
add
sub
jle
add
roll
sub
sub
inc
lea
cli
inc
inc
sahf
add
push
add
pop
add
sub
xlat
mov
mov
test
ljmp
pop
sarb
sbb
pusha
pushf
ljmp
ljmp
lods
sarl
mov
and
mov
dec
enter
jmp
scas
dec
dec
jmp
sub
sbbl
pop
or
loope
decl
inc
adc
loope
sub
jb
gs
mov
xor
mov
cmpsb
xor
and
pop
dec
loop
in
mov
clc
ret
sub
addr16
insl
or
ss
mov
dec
fwait
jae
pop
or
movsl
jbe
enter
mov
or
pusha
and
mov
call
pop
test
outsl
adc
push
adcl
cmp
cld
pop
adc
mov
pop
lret
lock
cmp
call
sub
mov
jmp
daa
cld
pop
inc
outsl
mov
add
jno
push
jne
jecxz
fcoml
movsb
fbstp
shlb
jbe
dec
hlt
jns
cli
sbb
mov
sub
hlt
pop
or
jmp
lods
mov
insb
mov
cmpb
push
aas
inc
sub
rolb
adc
popa
inc
dec
add
insb
test
mov
repnz
adc
arpl
mov
adc
loopne
add
sub
xchg
cmp
faddl
xor
inc
pop
adc
adc
add
pop
inc
sub
push
cmp
mov
mov
inc
shl
pop
and
push
lock
sub
inc
xlat
pop
cmp
shlb
repz
add
adcb
jl
out
jge
or
inc
adc
ret
sbb
pop
push
cmp
inc
loope
ficompl
int
mov
mov
adc
cmp
sarl
clc
add
sbb
cmp
mov
ds
aam
lcall
out
and
orl
push
sbb
add
leave
sti
add
push
ss
cmp
mov
ja
push
aas
add
cmp
rorl
inc
push
xchg
lock
addr16
dec
mov
cmp
inc
cld
cmpsb
push
pushl
xchg
dec
adc
mov
add
enter
fwait
lret
les
shr
pop
xchg
push
in
ja
jl
lcall
xchg
add
dec
push
mov
or
movb
fs
lret
je
push
and
cwtl
imul
add
movups
adc
fcomps
pusha
out
test
xor
in
aam
push
or
les
jmp
push
dec
adc
in
gs
jae
add
lods
aam
push
adc
mov
cmp
inc
cmp
pop
xlat
or
mov
cmp
add
push
push
jmp
dec
or
or
jo
test
repz
jmp
xchg
dec
js
shrb
add
mov
ss
xor
push
jge
xchg
orl
into
add
inc
add
or
push
xor
add
arpl
jecxz
cld
adc
push
mov
pop
je
push
push
dec
push
dec
adc
xor
pop
fisttps
dec
dec
pop
sub
jmp
xchg
sbb
nop
adc
jb
jp
inc
movsb
xchg
adc
lods
mov
add
dec
mov
lret
adc
add
push
cmpsb
jne
mov
adc
shlb
push
mov
or
loopne
mov
adc
movsb
xchg
add
pop
aam
xor
or
adc
xor
mov
mov
pop
mov
sub
or
loopne
shrb
aas
add
pop
rclb
xor
js
jecxz
pop
mov
arpl
mov
fidivl
jecxz
lds
icebp
ret
imul
dec
cmc
ret
ljmp
adc
movhps
imul
lock
mov
scas
pop
lcall
push
or
or
inc
mov
out
cmp
adc
dec
xchg
sarl
cmp
bound
mov
pop
jno
sbbb
mov
cmp
xor
or
inc
and
decl
leave
xor
pusha
mov
rol
mov
ror
ljmp
xor
shr
xor
xor
jnp
xor
shr
xor
add
add
and
js
mov
mov
fs
or
jae
or
and
not
and
fiaddl
sti
add
fcmovnbe
outsb
sub
jge
jl
sub
pop
lds
repnz
cli
fisubrs
lahf
add
xor
and
and
xchg
push
aam
sbb
xor
test
repnz
push
imul
pop
pop
inc
sti
outsb
push
or
xlat
ret
rcl
add
subl
add
xor
xor
call
sbb
call
and
push
sub
ljmp
int
ret
shr
add
push
xchg
or
cmpsb
mov
xor
in
imul
shl
in
push
cmp
bound
rorb
cwtl
add
pop
aaa
mov
lock
sbb
cltd
call
xor
loopne
loopne
in
movsb
jb
call
cmp
loopne
xor
imul
fdivs
pop
xor
sbb
push
testb
cmp
sub
pop
fildl
add
in
push
xor
and
and
lahf
notb
or
xor
int3
pop
inc
and
xor
add
inc
adc
and
adc
es
cmp
jo
ret
push
jo
sbb
adc
cmp
shlb
xor
adc
push
loop
cld
rol
jne
mov
filds
cltd
les
add
pop
xchg
mov
jbe
call
idiv
push
or
clc
jp
push
and
shll
fdivrs
inc
imul
in
ror
lret
inc
sub
mov
xchg
cmp
and
stos
sbb
aam
xor
shlb
cmp
sub
xor
inc
in
in
cltd
lods
mov
out
rolb
inc
jo
sbb
cli
xor
push
shrl
jge
shlb
shrb
movsb
test
inc
lcall
and
add
dec
add
add
inc
push
xor
inc
and
add
dec
push
dec
in
movsb
cltd
xor
fcomps
xor
dec
add
inc
cmp
adc
push
int
dec
jae
pop
cmp
leave
and
loopne
add
push
mov
sub
int
add
or
imul
sbb
pop
nop
data16
xchg
and
pusha
enter
xchg
movsl
mov
fcoms
stc
rorb
adc
sbb
roll
dec
sbb
cmpsb
jb
cmpsl
in
fs
dec
dec
xor
push
imul
pusha
aam
mov
adc
mov
repz
inc
pushf
mulb
dec
ljmp
lcall
xchg
push
and
add
and
inc
add
pop
pop
in
cli
push
dec
aam
out
pop
add
sub
mov
add
inc
adc
add
inc
add
lret
jb
cld
das
loop
sbb
inc
aaa
sub
pop
cld
sub
outsl
outsl
cmp
inc
push
out
or
mov
clc
sub
and
mov
or
cld
pop
lcall
or
mov
adc
stos
lea
jl
jae
mov
mov
mov
sub
inc
xor
aas
lea
xor
mov
push
xchg
out
mov
sub
pop
add
ja
mov
or
mov
dec
jne
pop
add
loope
dec
adc
daa
lock
mov
jnp
jl
sub
mov
cmp
jbe
or
pop
dec
sbb
outsl
aas
enter
lea
sub
jae
push
add
fisttpl
pop
fadds
rep
or
stos
jle
sbb
scas
or
mov
int
push
push
pop
loopne
rcr
sub
int
push
xchg
or
xchg
ljmp
adc
mov
cmp
in
inc
adc
into
cmp
lock
dec
cmp
jb
cmp
ja
int
shrl
sbb
inc
aaa
popa
mov
pushf
cmp
push
test
inc
cwtl
push
bound
push
add
xchg
rcrl
idivl
test
or
push
inc
jo
mov
js
xchg
mov
icebp
and
adc
sub
fcomi
clc
pop
dec
xchg
mov
jmp
je
mov
mov
inc
or
je
or
lea
lcall
pushf
mulb
cmp
jne
test
outsl
incl
inc
lea
inc
mov
orl
pop
dec
xor
push
movsb
add
divb
adc
add
sbb
loop
mov
and
mov
int
cmp
fs
dec
inc
push
and
inc
and
cwtl
push
pop
mov
sbb
pop
cwtl
push
mov
clc
lret
inc
lahf
push
insb
cmp
xchg
mov
mov
lea
xchg
dec
sti
mov
hlt
and
in
hlt
or
dec
sub
sbb
inc
xorl
pop
lods
pop
cmp
jne
notb
mov
insb
loop
in
jecxz
clc
je
ss
pushf
outsb
pop
add
cmp
jb
or
ja
pushf
nop
or
pop
cmp
push
xor
push
push
add
push
pop
inc
stos
or
sbb
je
inc
mul
loopne
jbe
push
cmpsb
inc
sub
popa
loop
push
adc
mov
mov
inc
inc
xchg
pop
movzwl
data16
es
jb
aaa
jb
imul
pop
iret
int
inc
jecxz
add
jmp
cwtl
aas
les
jle
rcll
xor
je
fs
jne
mov
ret
and
lock
sub
dec
or
incb
inc
call
cmp
dec
ss
push
test
xor
mov
xchg
sbb
sub
push
push
mov
or
inc
call
mov
adc
inc
ror
mull
imul
stc
inc
jg
or
jge
and
int
int
aaa
and
es
sub
sub
jp
jle
jmp
cmp
jl
pop
jle
pusha
push
lods
adc
jo
test
jb
xor
jbe
mov
test
fwait
and
repz
jne
or
je,pn
test
jne
je
pop
or
jae
and
push
mov
roll
je
xor
pop
bound
add
into
mov
jp
ret
cmp
cmp
adc
xchg
xchg
adc
scas
push
push
mov
shll
inc
and
je
fsubrs
sbb
xor
mov
or
jae
add
inc
es
adc
test
scas
stos
test
push
mov
push
xor
xchg
lcall
or
xor
push
xchg
or
adc
xchg
push
add
add
insb
or
hlt
aam
out
mov
bound
test
adc
loop
daa
xchg
push
xlat
popa
inc
and
xchg
pushf
jl
push
jnp
jp
outsl
inc
mov
xor
test
push
add
cli
outsb
outsl
push
dec
inc
ds
sub
xor
movl
push
pop
add
pop
jb
adc
jl
inc
cmpl
dec
mov
inc
ss
pop
das
mov
or
xchg
sbb
pop
dec
cmp
pop
cwtl
xor
mov
lahf
inc
mov
sbbl
incl
pusha
cmp
outsb
mov
dec
fadds
inc
and
loopne
dec
lcall
loope
insl
pop
nop
cmp
je
test
adc
les
loop
fsts
sti
mov
lcall
or
sub
mov
pop
daa
dec
add
xchg
insb
pop
sub
and
dec
in
movb
cmp
shr
sub
xchg
adc
dec
sbb
or
pop
push
lods
cmp
mov
ljmp
mov
vmlaunch
push
add
cmp
add
nop
test
cmp
sub
mov
or
add
sahf
push
cmp
sti
push
cmp
push
loop
pop
add
hlt
jb
jo
inc
xchg
xchg
fdivs
or
and
sbb
jmp
cld
ljmp
push
shrl
add
pusha
push
andl
cs
test
jbe
rol
js
dec
adc
mov
cli
lea
ds
push
stos
outsb
cltd
imul
outsb
cwtl
insl
mov
js
mov
push
outsb
lods
pop
pushf
inc
or
and
subb
pop
cmp
push
lock
in
xchg
xchg
jne
lahf
cmpsl
in
in
cwtl
addl
xchg
xchg
xor
mov
mov
mov
mov
jne
iret
push
leave
adc
mov
das
jbe
or
adc
cmp
or
nop
inc
xor
jno
clc
jae
and
addr16
dec
lock
daa
call
push
idivb
faddp
inc
adc
pop
cmp
shl
and
jnp
dec
clc
mov
mov
rorb
mov
shrb
insb
mov
mov
test
jne
add
cmpl
and
mov
and
adc
push
push
fdivl
cmp
mov
lds
movsb
das
imulb
sbb
mov
and
imul
adc
ljmp
push
xor
dec
dec
popf
dec
mov
push
fcomp
sbb
leave
clc
jmp
xor
cmp
je
mov
cmp
jmp
add
inc
xchg
fldt
pop
and
aaa
sbb
test
or
dec
mov
add
inc
out
popf
mov
or
add
inc
fsubr
cmp
popf
mulw
push
fwait
push
push
and
push
or
in
cwtl
mov
mov
jmp
insb
jne
jl
sub
sarb
jp
sbb
mov
faddl
jne
inc
pushl
add
popf
pushf
ss
inc
push
xor
fs
cmp
jne
les
aam
adc
icebp
mov
cmpsb
or
or
cmp
call
and
dec
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
test
je
jl
mov
add
and
jae
lds
add
and
or
add
xchg
sahf
data16
lcall
ret
or
dec
push
sbb
cmp
je
ret
ret
pop
fadds
sahf
push
xorl
mov
mov
mov
add
jne
cmpsb
sub
outsl
inc
mov
test
and
out
mov
xor
jae
pop
cmp
inc
mov
mov
mov
in
or
psubusb
push
cmp
adc
sarl
mov
rcll
imul
movsb
sub
xor
push
cmp
jbe
mov
js
and
js
jae
and
mov
xchg
inc
sub
xchg
mov
xor
xchg
lret
in
cmp
cmp
cltd
xchg
xchg
inc
sbb
aas
adc
adc
add
dec
mov
scas
inc
or
sub
inc
adc
mov
inc
mov
push
fildl
sbb
test
fisubrs
movsl
in
mov
cmpsb
fsubs
aam
jl
loop
add
icebp
and
jge
cmp
sbb
push
int3
sbb
jmp
popf
add
movsb
popf
adc
inc
shll
or
nop
inc
push
je
add
ret
mov
int3
dec
ljmp
stos
xlat
enter
sahf
or
or
push
nop
jnp
add
push
or
js
push
cmpl
mov
stos
pop
sub
dec
xor
ss
cmp
or
push
cli
xor
mov
fidivl
sbb
dec
or
sbb
inc
pusha
add
mov
jnp
push
je
pop
add
mov
mov
addl
or
jnp
jne
sbb
adc
mov
and
xchg
insb
jbe
mov
sub
pop
xchg
mov
imul
or
test
jb
or
and
cmp
adc
bound
popa
inc
loop
and
mov
daa
insl
cmp
mov
loopne
dec
sbb
push
jecxz
add
fisubrl
push
jbe
data16
rolb
pop
bound
in
pop
lods
sbb
sbb
and
fmuls
ret
dec
addr16
mov
xlat
insb
imul
cmp
lcall
sub
loopne
outsl
mov
sbb
mulb
or
sahf
daa
daa
clc
aam
or
add
data16
cmpl
ja
pop
or
pop
mov
ss
push
pop
sahf
lds
inc
cli
jb
and
cmp
ss
cmp
xor
les
inc
adc
hlt
inc
inc
adc
mov
dec
mov
rorb
je
lock
jns
adc
hlt
cs
pop
sub
and
fcoml
jge
cld
or
nop
cmp
xchg
sbb
mov
pop
popa
push
dec
in
adc
pop
or
scas
fnstsw
test
dec
cld
aam
inc
notb
aaa
ljmp
and
xor
sub
push
pop
sbb
sub
loop
addb
jg
into
lcall
mov
push
sub
mov
inc
adc
mov
dec
jnp
insl
adc
and
add
mov
add
push
adc
dec
sbb
inc
shll
cmp
and
xor
repnz
jp
xchg
mov
pop
cmc
add
dec
lods
push
push
adc
sbb
cmp
cld
add
dec
dec
lea
mov
lea
inc
cltd
mov
rcrb
mov
int
jmp
and
dec
rorl
pop
pop
pop
push
ficoml
cmc
mov
aas
push
inc
pop
dec
pop
in
mov
pop
xorb
aam
xchg
cmc
sub
or
pop
lahf
add
xchg
or
mov
jae
add
scas
lock
dec
rcll
andb
popa
jo
ja
faddp
sti
in
and
and
sbbl
inc
dec
dec
fisubl
int
or
add
dec
add
or
cmp
ffree
leave
ja
push
add
daa
insl
push
sbb
mov
sub
in
add
and
or
fmulp
add
push
or
pusha
ljmp
js
and
sub
xor
sbb
enter
movsb
adc
mov
or
mov
mov
and
xor
xor
adc
inc
inc
push
xchg
test
daa
mov
cs
adc
pusha
mov
addb
pop
add
orb
pop
mov
or
sub
push
arpl
cmovbe
sbb
sbb
cmp
inc
jnp
mov
or
mov
mov
sub
xchg
cs
or
and
incl
and
aaa
adc
test
or
dec
ret
adc
stos
add
pop
and
movsb
or
sahf
std
adc
fwait
add
mov
mov
inc
inc
bound
sahf
push
pop
arpl
jbe
mov
pop
pop
adc
xor
xchg
push
lcall
jo
jmp
mov
mov
add
add
xor
loope
testb
mov
in
sbb
scas
mov
cmp
sbb
adc
adc
and
inc
enter
xchg
shrb
adcb
jge
sbb
repnz
nop
push
or
ret
push
mov
and
jo
mov
sbb
lret
and
inc
decb
xchg
cmpb
and
xchg
mov
cmp
push
mov
fadds
daa
lods
loopne
enter
loopne
sbb
jmp
inc
loopne
sub
repz
xor
or
or
testb
add
push
mov
or
ja
fucom
pop
mov
mov
pop
and
les
fiaddl
fwait
aam
sbb
jge
pop
andl
inc
in
fnsave
xchg
jecxz
jnp
dec
xor
pushl
dec
inc
dec
lahf
mov
sub
stos
testl
lock
pop
adc
mov
iret
std
mov
cmp
push
push
jbe
and
add
mov
ljmp
adc
adcl
dec
in
pop
pop
popf
mov
inc
imulb
adc
es
xchg
mov
jo
imull
pop
push
pop
loop
sarl
inc
and
je
cmp
jbe
add
cmp
insb
jmp
jbe
fisttps
xor
add
adc
ret
je
xchg
mov
push
jo
insl
xor
or
dec
adc
insb
dec
inc
push
divl
sub
sarl
jnp
test
repz
pop
and
add
push
iret
adc
orl
ja
mov
push
push
lea
les
pop
sub
jo
push
dec
or
in
in
mov
adc
cmp
cmp
sahf
pop
jo
out
push
add
sub
push
jmp
sub
enter
adc
cmp
pushaw
xchg
mov
lcall
mov
add
lods
aad
fsubr
mov
cmp
pop
mov
popf
push
push
jb
sbb
xchg
lock
int
push
mov
jbe
lock
sar
shrb
incl
cmp
jae
push
fs
fs
add
jmp
adc
cmp
mov
add
mov
lcall
mov
scas
adc
addl
xor
jp
or
pushl
and
xorl
cltd
sahf
in
push
add
cmp
and
mov
add
sub
xor
loopne
or
jle
mov
daa
movsb
call
mov
cmp
jne
inc
clc
aas
icebp
int3
lock
push
and
loopne
loop
sub
repz
xchg
or
imul
or
xor
adc
cmp
out
and
adc
and
and
orl
lock
orl
shrb
rcll
sarl
std
aad
cld
cmp
jbe
sub
add
mov
inc
das
sahf
push
pop
xor
lds
jg
push
xor
inc
jbe
ljmp
or
inc
fidivrl
adc
shlb
sbb
jb
das
outsl
aam
mov
flds
lock
addr16
pop
je
pop
push
xchg
shlb
mov
add
add
insb
xor
push
xor
push
xor
pop
scas
dec
pop
adc
pop
mov
pop
out
inc
cmp
je
xor
xchg
mov
sarl
adc
in
sub
daa
lods
dec
and
sbb
movsl
xacquire
js
cmp
ret
xor
cmpsb
cmp
insl
xchg
add
je
or
lds
ss
dec
xor
cmp
or
sub
xchg
adc
out
sub
mov
adc
sbb
or
jmp
int3
jnp
lock
jl
adc
ljmp
jmp
mov
fcom
add
xchg
ss
pop
fdivr
ret
test
lea
mov
add
enter
fadds
mov
mov
inc
add
add
xor
fwait
jo
dec
ret
aam
push
sbb
sbb
jno
dec
pop
cmp
ss
shll
repnz
cmp
or
inc
inc
jle
insl
loop
dec
sbb
push
sbb
push
dec
pusha
leave
frstor
in
sbb
dec
mov
mov
cmp
jl
pop
scas
sub
lcall
fstp
fbld
add
fstpl
ss
add
insl
loop
lret
jbe
mov
stc
ja
and
jne
fmuls
push
push
ret
je
push
test
nopl
jle
xorb
xor
ror
mov
inc
push
frstor
push
in
push
ret
push
loope
pop
xor
or
jmp
inc
dec
das
push
mov
push
stos
dec
push
rcrb
sbb
mov
in
inc
bound
mov
loope
loop
xchg
xchg
mov
mov
jae
push
jp
cmp
fwait
sbb
sahf
push
js
stos
sub
mov
addb
aas
and
pop
push
in
or
pop
sub
lock
loopne
lahf
les
sbb
iret
es
pop
adc
inc
xchg
shlb
jl
inc
mov
jecxz
aaa
jmp
rorl
aam
pop
daa
cmpsb
lock
std
adc
push
testb
cmpb
fadds
int
sub
or
frstor
and
push
add
repz
mov
gs
and
mov
push
ret
sub
jb
jo
add
add
inc
inc
add
out
sbbb
jne
jbe
lret
test
shrl
fmuls
popa
jp
les
add
add
cmp
int3
pushf
lret
in
stos
fstpt
cmc
cmp
fs
cwtl
ficoml
mov
dec
xor
sbb
inc
sbb
dec
sbb
cs
jbe
out
inc
pop
sbb
mov
mov
lods
inc
shrb
jmp
push
xor
or
jle
cld
sbb
pusha
pop
mov
int
cmp
out
dec
jmp
dec
inc
das
js
inc
lret
testb
adc
bound
adc
ret
adc
push
sbb
loop
mov
add
xchg
pop
dec
ss
test
adc
mov
or
scas
in
push
inc
sub
inc
mov
cli
or
icebp
jbe
adc
dec
cmp
popa
rclb
adc
aaa
mov
sbb
pushf
xor
xor
jg
cmp
cmp
into
jo
adc
jle
add
push
ret
sbb
pop
xchg
mov
loopne,pn
fcompl
sub
push
ficoml
sbb
dec
dec
sbb
mov
lcall
or
enter
jb
and
incl
sbb
dec
scas
mov
jmp
push
or
mov
dec
sbb
pusha
filds
push
loope
add
adc
fidivl
pop
js
or
add
clc
dec
push
cmp
or
jnp
test
mov
xor
scas
inc
cmp
lahf
push
cmp
loope
add
mov
scas
pop
sbb
sub
ror
cmp
add
lret
cmp
je
movsl
lods
mov
lcall
out
or
pop
sbb
les
into
lret
mov
sub
lea
and
jne
xor
or
inc
pop
and
dec
mov
xchg
icebp
mov
sub
lahf
inc
sbb
lds
rolb
test
hlt
adc
xlat
inc
or
sbb
jb
adc
mov
inc
fstl
pushf
lea
mov
and
inc
adc
nop
push
or
dec
cmp
and
mov
add
mov
dec
jl
or
cs
fildl
popf
add
subl
leave
fsubl
push
test
shrb
add
mov
fcomp
fs
fwait
mov
cmp
lock
add
push
test
cmp
push
scas
add
and
jnp
std
sbb
jmp
ss
cmp
arpl
js
sbb
and
pop
fstl
test
mov
mov
in
push
ret
ret
or
inc
inc
inc
mov
scas
andl
pop
lods
test
scas
stc
mov
in
push
sbb
inc
cld
adc
inc
push
dec
xchg
mov
xor
and
sbb
xchg
add
pxor
aaa
leave
ret
pop
mov
mov
and
mov
push
mov
pop
dec
iret
dec
rorl
loopne
test
shll
adc
or
mov
jle
out
ds
std
mov
inc
mov
mov
je
xchg
push
xchg
fsubrl
xor
and
clc
mov
push
add
in
ret
inc
js
sub
je
insl
xchg
es
data16
add
push
jecxz
ret
call
repnz
mov
rcr
adc
aaa
call
xor
movsl
mov
and
pop
dec
inc
test
mov
int3
push
lds
add
mov
cmp
add
push
mov
sub
test
mov
imul
push
movb
or
jne
xchg
cld
push
mov
adc
cmp
jo
and
hlt
lds
inc
sbb
lock
stos
mov
mov
std
xchg
andb
add
adc
jmp
push
xchg
mov
push
add
inc
mov
enter
insb
sbb
jbe
popa
arpl
aas
jmp
pop
adc
test
mov
in
popa
out
inc
lcall
iret
jle
push
xchg
add
mov
add
pop
fadds
push
test
mov
bound
testb
jnp
cmpsb
push
or
and
fisubrs
add
inc
sub
das
fldl
data16
mov
xor
insb
ret
and
clc
movl
xor
arpl
mov
mov
adcl
add
es
in
pusha
xor
mov
mov
jns
jl
jmp
inc
cmpsb
push
cmp
mov
dec
pushf
sub
imul
or
push
les
cmp
adc
fisubs
scas
jo
sbb
mov
jl
sub
and
ds
add
xchg
mov
mov
icebp
loop
dec
add
incb
adc
jmp
cmpl
and
addl
jne
mov
leave
ds
in
es
sbbl
mov
xlat
mov
dec
jge
sub
pushf
notb
lret
and
adc
adc
xchg
sar
add
mov
push
testl
insb
shl
inc
in
pop
test
sbb
cmp
mov
call
call
and
int
lods
mov
jbe
and
lds
xor
jo
cmp
cmp
jge
sahf
fisttps
adc
lret
lea
add
mov
xchg
call
sbb
call
test
pop
mov
inc
mov
pop
outsb
add
add
xchg
popa
xchg
and
mov
xor
adc
repnz
xor
loope
call
cmp
sbb
mov
aam
shll
sbb
mov
push
inc
clc
mov
xchg
and
shll
lea
popf
jae
jno
fcom
sbb
loopne
das
loopne
cmpsb
pop
add
gs
outsl
in
cmp
je
shlb
add
xor
jmp
sub
in
in
inc
shll
xchg
stos
jbe
divl
inc
push
jbe
jo
lret
mov
call
setae
js
push
scas
push
enter
das
dec
fcoml
jbe
xorl
pop
mov
bound
lea
inc
bound
xchg
std
loop
leave
inc
enter
mov
out
cmp
mov
test
cltd
test
shll
pop
pop
sbb
pop
add
pushf
xor
add
std
and
std
pop
bound
jo,pn
or
loopne
push
and
fcoml
or
add
sbb
pop
jnp
lock
xor
outsb
pop
outsl
xchg
mov
jns
add
shrl
fdivrl
out
inc
cmpb
dec
orb
mov
testb
dec
push
lret
mov
sarl
in
xchg
jnp
cmp
cmp
jo
mov
insb
in
cmp
pop
jbe
sbb
testb
dec
dec
dec
clc
jne
mov
push
test
or
cmp
movb
lea
cmp
cmp
jo
stos
es
cld
rcrl
nop
xchg
sbb
xchg
mov
hlt
sbb
jb
push
aam
or
iret
mov
pop
imul
subl
in
add
mov
add
or
js
fildl
cld
loopne
fnstenv
mov
and
arpl
pop
push
or
repz
imul
cs
lods
or
ja
mov
nop
mov
add
mov
inc
push
out
pushf
shlb
mov
sbb
iret
xchg
jbe
adc
or
xor
cld
pop
cmp
xchg
pop
push
pop
jle
jle
rorb
dec
hlt
out
iret
ja
push
xchg
loop
sub
or
add
mov
jo
addr16
lret
mov
insb
dec
adc
adc
inc
inc
mov
test
loopne
adc
push
inc
dec
mov
insl
jp
mov
fildl
orl
es
push
lret
push
addr16
adc
or
adc
jmp
js
divl
cmp
mov
rcrb
jmp
lcall
mov
les
adc
cmp
cmp
pop
push
push
pushf
sub
pop
lahf
insl
int3
pop
sahf
mov
lds
mov
testb
jmp
sub
das
mov
inc
in
xchg
fisubs
inc
in
push
xor
jle
clc
inc
sub
pandn
fiadds
lea
es
pop
sti
insb
cmp
aam
dec
loopne
and
add
jo
movsl
and
mov
mov
sub
sub
rorb
in
add
jae
pop
fnstcw
lds
leave
mov
adc
sbb
and
jne
fadds
ds
mov
xchg
inc
mov
mov
dec
mov
inc
aam
fmulp
clc
and
dec
xor
xor
mov
cmp
push
sbb
cltd
inc
cli
pop
clc
xor
fdivl
or
cmp
sub
mov
sbb
push
negl
push
nop
lret
jmp
fisubl
jecxz
loop
cmp
jb
outsb
pop
push
add
mov
xlat
or
add
nop
loopne
inc
inc
adc
dec
sahf
mov
int
adc
rcrb
adc
shrb
gs
adcl
cmp
add
add
push
mov
push
jge
insb
leave
sbb
clc
cs
mov
sarl
cmpb
or
jg
cwtl
addb
rcrb
jmp
mov
xlat
lea
mov
ret
imul
jmp
mov
jns,pt
jo
sub
in
pop
adc
in
shlb
push
cwtl
cs
add
shrb
dec
test
pop
cld
ret
add
adc
mov
stos
cmp
insl
ret
sbb
shlb
and
clc
mov
push
into
jbe
jbe
cmp
addr16
je
mov
sahf
cmp
bound
mov
cmp
xlat
pop
xor
and
in
push
nop
arpl
pop
inc
cmpb
add
push
jae
jl
fbstp
mov
cmp
sub
jb
outsb
lret
push
and
jnp
cmp
push
shl
and
popf
scas
add
ffree
pop
inc
mov
mov
sub
mov
sarl
jge
movsl
mov
sub
lods
cmp
test
js
jle
mov
adc
repnz
addl
ret
adc
int3
pop
adc
adc
insl
xor
test
je
pop
cs
int
dec
popa
sbb
push
inc
sbb
clc
pop
fs
rcll
or
xchg
xchg
push
and
call
push
push
adc
sub
xchg
loopne
pop
jno
gs
mov
mov
pop
xchg
add
orl
jbe
call
sbb
hlt
jbe
add
push
inc
rcl
jmp
or
xor
sub
push
xor
add
mov
in
in
jl
cmp
test
jmp
call
sub
pop
cmp
pop
push
inc
enter
sub
bound
call
mov
add
inc
in
clc
add
clc
jno
pop
rcll
push
and
sub
icebp
or
out
add
div
jne
sbb
sub
dec
sahf
or
andl
or
or
or
sti
mov
xor
arpl
dec
loope
test
inc
adc
data16
jge
or
xor
test
leave
popf
fcom
out
mov
loopne
or
movzwl
inc
pop
ficoml
fsubrl
push
add
imul
xchg
and
clc
push
pop
rorl
add
xchg
sub
sbb
ret
test
mov
mov
stc
mov
mov
sub
or
bound
push
and
loope
mov
xor
test
mov
popf
xor
in
push
push
push
push
popa
xchg
mov
push
mov
or
ficomps
imul
fwait
xor
outsb
mov
rol
sbb
popf
cmp
dec
add
movsl
arpl
das
sub
inc
cmp
mov
js
xor
add
movsl
xchg
into
insb
loope
inc
mov
jnp
adc
mov
add
mov
sbb
inc
je
dec
adc
sbbl
mov
movb
das
stos
push
insb
out
jg
inc
and
popa
or
into
movsl
imull
fistpll
or
mov
xchg
xchg
lret
xor
ja
rcrb
pop
addr16
sub
insb
mov
cmp
mov
test
add
mov
and
xlat
lea
and
cmpl
jae
sub
cs
mov
inc
sub
xor
add
mov
lds
repz
push
pop
or
lret
add
stc
xor
sarl
addb
popa
mov
js
mov
inc
inc
mov
xor
mov
pop
leave
push
pop
jbe
and
repz
outsl
or
mov
into
push
or
loopne
insb
ja
loopne
stos
dec
rclb
lea
test
call
xchg
loope
lret
lea
enter
sbbb
adc
sub
xchg
and
mov
imul
std
push
inc
addl
or
push
pop
stos
pop
push
nop
add
add
xor
cmp
mov
adc
test
cmp
rcrb
adc
in
sbb
jp
test
mov
mov
add
mov
inc
xorl
testb
mov
pushf
icebp
xchg
adc
xor
addb
data16
push
xchg
in
or
lea
pop
loopne
push
add
dec
cmpsb
adc
or
daa
cmpl
and
rcrl
nop
inc
xchg
mov
in
pushl
pop
js
dec
cmc
stc
jne
sbb
jle
sarb
mov
adc
enter
add
loope
jae
inc
pop
imul
in
xchg
ret
push
jae
lea
push
sub
push
rol
leave
sbb
add
rdtsc
adc
popf
sub
hlt
dec
pop
ret
sub
or
popa
jo
pusha
mov
sbb
or
push
es
xor
in
push
sar
or
dec
cmp
push
cmp
jae
inc
jmp
inc
jecxz
jmp
sti
sub
shrb
loope
insb
lea
out
ret
mov
test
add
shr
test
sub
clc
andl
push
movsl
in
pop
mov
dec
iret
fmull
sbb
ja
inc
sub
int3
and
data16
push
push
adc
cmp
addb
pop
shlb
pop
dec
add
popa
add
shrl
fs
and
pushf
dec
mov
in
daa
add
call
cli
add
push
jl
jl
adc
ficompl
sbb
sbb
dec
pop
push
dec
shrb
inc
jo
dec
add
fwait
or
and
or
test
inc
mov
test
xor
pop
mov
dec
out
or
or
fisubl
push
or
cmp
imul
xchg
lock
jae
push
shrl
ja
cmpb
push
pop
mov
nop
dec
or
sbb
pop
xchg
adc
pop
icebp
pand
pop
jecxz
lret
inc
cmp
dec
in
ret
push
clc
sub
fmull
enter
xor
sub
jmp
pop
push
inc
or
add
mov
ljmp
or
and
xor
aaa
jmp
mov
adc
imul
in
shlb
lea
cli
ja
cmpb
in
xchg
sbb
push
mov
push
pop
xor
adcb
cmc
jno
pusha
ss
iret
push
scas
cld
push
and
add
fstl
push
andb
or
imul
andb
in
mov
clc
inc
adc
fnstenv
inc
out
pop
jbe
push
out
cld
sbb
lods
mov
sbb
hlt
pop
pop
xchg
xor
cltd
pop
or
int3
shlb
push
add
stos
sub
push
mov
cmp
testb
and
and
cld
add
sbb
in
idivl
push
mov
dec
popf
jo
or
test
inc
test
mov
push
cmp
js
sub
ficompl
adc
rorl
xchg
test
hlt
xchg
icebp
mov
add
and
leave
mov
popa
cvttps2pi
outsb
adc
pop
fwait
stos
xchg
xor
push
sbb
insb
decb
fidivs
mov
hlt
inc
sbb
in
or
push
adc
mov
out
xchg
les
test
push
push
or
pop
orb
push
adc
cwtl
rolb
mov
lret
sbb
or
push
es
cmp
orl
mov
push
pop
lock
aaa
iret
add
or
inc
inc
adc
add
ffree
daa
inc
insb
push
scas
sbbl
daa
gs
and
repnz
inc
sub
add
fiaddl
mov
cmp
call
mov
fwait
mov
cmpl
scas
mov
pushl
adc
sub
xor
mov
mov
lea
jb
inc
add
addl
push
cmp
mov
popf
or
adc
test
push
in
sub
mov
popa
inc
pop
in
enter
pushf
scas
fiaddl
clc
push
andnps
xchg
lock
and
bound
or
into
adc
add
push
fsubrs
push
dec
jne
mov
push
cmc
mov
xchg
gs
add
ja
int3
mov
pop
mov
mov
rcrl
enter
adc
pop
in
fpatan
pop
sbb
pop
pop
sub
sub
gs
jg
fwait
mov
add
dec
jae
cmp
or
and
inc
iret
sub
imul
pop
xor
mov
roll
mov
scas
jmp
push
js
jge
jo
jbe
and
pop
mov
push
inc
lea
pop
jl
sbb
pop
add
test
aam
mov
cmp
fildl
addr16
stos
cmp
add
xchg
pop
dec
mov
xchg
repz
dec
mov
sub
cwtl
adc
inc
inc
sbb
leave
cs
and
xor
push
xchg
inc
dec
cmpl
cli
mov
or
push
cmc
mov
jle
mov
insb
and
lods
in
mov
test
je
fiadds
push
cmp
test
add
adcb
jbe
push
or
sub
ret
cmpsl
and
adcl
test
or
imul
push
fcmove
mov
lahf
dec
in
aam
in
pushl
ds
and
stc
testl
push
mov
add
sbb
sub
inc
mov
in
pop
sub
push
xor
ret
aaa
inc
pop
xchg
cmp
dec
sub
mov
mov
bnd
icebp
jmp
lahf
subb
jg
xchg
pop
push
mov
jbe
ss
jmp
push
js
or
jbe
mov
jmp
das
inc
sub
stos
inc
test
int3
adc
push
cmp
push
add
add
pop
inc
add
adc
and
icebp
cmpsb
sbb
add
add
cmp
pop
push
ret
sub
les
jno
jecxz
adc
imul
mov
mov
ret
adc
or
mov
sbbb
cs
mov
jae
lcall
vsubsd
inc
and
movb
inc
dec
fiadds
add
pusha
testb
pushw
sbb
mov
popa
jb
sub
adc
pop
icebp
mov
mov
ret
mov
pop
pop
pusha
fmuls
sbb
pop
jmp
rorb
ret
mov
roll
sbb
decl
sbb
mov
and
and
mov
push
lock
lcall
stc
fsubl
and
cmp
ds
adc
push
cmp
test
mov
mov
inc
push
jo
pop
or
enter
or
loopne
dec
loopne
lea
mov
mov
push
aam
scas
sub
xor
pop
adc
mov
push
sbb
add
or
xor
inc
dec
mov
cmp
cmpsl
or
push
aaa
lods
pusha
or
xchg
mov
test
aam
cmpsb
xor
adc
push
push
gs
sarb
adc
popf
pop
inc
sbb
inc
mov
push
stos
call
dec
rcr
clc
push
js
into
and
mov
xor
fstpt
jmp
mov
or
sbb
ss
mov
mov
mov
hlt
out
stc
push
bound
push
sbb
mov
pop
xchg
adc
xchg
and
ret
or
dec
mov
sbb
jae
insl
icebp
inc
mov
loope
pop
icebp
cmpl
into
or
in
inc
add
scas
loopne
sti
pop
push
mov
cmp
push
mov
jmp
scas
push
push
push
adc
cmp
loope
cwtl
push
fdivl
push
dec
add
mov
pop
adc
insb
es
push
and
mov
mov
hlt
and
lods
xchg
cmp
xchg
fistl
cmpl
jne
sbb
aad
mov
fisubl
add
inc
add
add
xor
in
push
or
sub
out
sarl
dec
rcr
xor
out
cmp
jle
push
icebp
clc
push
push
movsb
lahf
add
jns
mov
fucomi
int
dec
inc
cmp
in
mov
aam
test
stos
ficompl
inc
cs
jne
push
xchg
mov
add
push
xor
and
sub
das
push
loopne
idivb
stos
xor
xchg
jle
pop
jmp
jne
repz
hlt
cmp
add
sub
in
or
mov
push
arpl
fdivr
sbb
mov
or
aam
insb
mov
das
jle
or
sahf
dec
jo
mov
dec
sbb
pop
add
add
or
and
testb
jne
addl
xchg
dec
adc
push
pusha
pop
test
push
stos
hlt
inc
mov
adc
push
addl
in
out
or
stos
lret
jne
add
push
add
add
add
test
jne
or
inc
mov
imul
je
cmp
je
push
subb
idivb
testb
je
cmp
mov
lock
or
add
inc
cld
push
cmp
cmp
jmp
sub
dec
inc
sub
push
in
shll
inc
mov
pop
loop
test
cltd
js
xor
or
pop
xor
cltd
lret
sbb
xor
sahf
repz
push
and
pop
in
sbb
xor
add
sub
adc
mov
push
dec
and
icebp
jmp
jno
ss
loopne
shlb
test
dec
mov
push
sub
das
jg
dec
or
push
add
add
in
testb
hlt
jo
inc
insb
ss
push
in
cmp
insl
imul
jl
jo
and
push
pop
fildl
or
aas
movsl
loope
inc
hlt
push
push
mov
or
or
leave
or
inc
mov
push
mov
or
lds
sub
cmp
mov
or
dec
push
push
xorb
xchg
pusha
popf
push
shr
dec
lahf
pop
mov
sbb
add
ret
ds
xlat
lock
push
rorl
sbb
sbb
mov
sbb
aaa
clc
test
add
cmp
leave
jmp
cmp
and
push
adc
sbb
jne
adc
xchg
mov
aam
push
xchg
bswap
lret
into
jne
data16
hlt
cmp
pop
out
adc
dec
or
and
fdivp
cmp
sbb
jmp
push
xchg
push
rorl
out
out
pop
push
call
adc
jne
icebp
cs
insl
cwtl
pop
cmpsb
mov
shrl
push
cld
cwtl
or
add
xor
inc
fdivs
or
pop
jg
push
xchg
or
lret
cli
es
inc
jp
mov
cmpl
inc
push
imul
push
adc
or
imul
subb
fimuls
pop
add
jnp
dec
cli
mov
les
adc
sbb
pop
push
xchg
inc
fsubrl
repz
and
add
aaa
adc
xor
ja
sbb
jmp
add
int
mov
push
cmp
ja
inc
mov
or
pop
sbb
jns
push
or
into
int
arpl
xor
add
push
and
push
add
push
pop
pusha
mov
sub
xchg
loopne
inc
fwait
je
inc
scas
and
loopne
and
xlat
and
cmp
mov
and
and
add
or
and
xchg
lock
out
enter
jmp
dec
rorl
loop
adc
inc
xchg
add
inc
mov
inc
or
sbb
ja
push
cltd
cmp
xchg
loopne
lock
sub
mov
cwtl
mov
mov
lock
bound
pop
leave
test
push
addb
pusha
fld
jbe
push
adc
mov
sub
adc
in
loop
test
xor
add
loopne
pop
and
jae
loopne
rcrl
ret
call
test
mov
jl
cmc
fldenv
or
xchg
mov
jno
lret
and
cmpsb
fisttpl
sub
aad
xchg
addl
dec
adc
jne
mov
cmp
pushf
lods
sbb
and
xchg
in
cmp
and
and
test
pop
idivl
cmp
insb
add
or
cmp
add
ss
push
dec
jne
sbb
subl
push
jl
int3
inc
or
or
push
adc
cmp
movsb
enter
fsts
cmp
in
pop
cmp
adc
sbb
or
outsb
pop
in
jle
test
ja
lock
dec
pop
dec
xor
adc
xlat
icebp
add
xchg
cmp
in
jmp
stos
xchg
xorl
add
xchg
in
out
sbb
add
mov
mov
into
and
mov
pop
nop
xchg
aaa
in
cld
inc
mov
cwtl
and
dec
cmpsl
jge
dec
mov
jo
cld
pop
ret
inc
ds
jb
cltd
fisubrs
fistpll
out
add
ja
ljmp
xchg
lock
jae
mov
push
push
mov
sub
and
add
pop
sub
std
inc
pop
adc
inc
je
sar
rep
cmpl
je
shll
mov
popf
fldt
jo
dec
scas
xchg
ret
ss
sub
mov
loopne
cmp
out
sbbl
pop
pop
ret
or
repz
adc
addl
and
sbb
movsb
je
dec
add
out
lds
addl
outsb
popa
out
sub
dec
jnp
cmpb
sbb
pop
gs
sahf
mov
inc
push
out
jb
cmpsl
or
adc
adc
in
push
push
pop
lods
scas
pop
out
bound
inc
es
xchg
outsb
repnz
shll
add
icebp
pop
jbe
shlb
inc
push
fmuls
sbb
pop
push
lock
push
lret
jo
test
mov
jge
xor
dec
movsb
jbe
aam
test
dec
mov
mov
loop
mov
inc
push
push
clc
scas
cmp
in
pop
clc
das
loopne
lods
xor
daa
shll
out
outsb
rclb
jl
xchg
dec
aad
push
mov
mov
sbb
sub
rcrl
sub
enter
cmp
push
arpl
mov
inc
or
je
inc
dec
jne
repnz
push
lds
jne
mov
pop
bound
xchg
jmp
iret
pusha
addb
insb
sbb
andl
jmp
fistps
jne
je
jmp
or
push
xchg
and
push
cmp
out
pop
jns
xchg
or
sbb
mov
sbb
push
cmp
push
adc
push
test
sbb
out
push
pusha
push
js
and
xor
icebp
jnp
shlb
lea
mov
aam
sub
aaa
shll
pushf
sbb
push
push
mov
mov
aaa
dec
inc
pop
pop
and
aaa
mov
gs
lods
xor
icebp
or
xor
and
loope
xchg
jo
gs
sub
or
or
and
stc
es
inc
inc
sub
mov
inc
adc
sbb
push
adc
movsl
xor
sbb
pop
outsl
pop
and
or
jmp
popa
outsl
arpl
aad
mov
jo
in
pop
loop
lahf
pushf
push
jge
cmp
push
push
push
pop
push
loope
mov
jmp
or
mov
push
dec
add
adc
repz
sbb
pop
je
xor
test
daa
sbb
cmp
add
xor
lret
clc
cmp
cs
add
mov
loopne
insb
xchg
pop
cmp
je
orl
xchg
push
rol
jno
add
fcoms
rorl
stos
les
sbb
adc
shll
repz
mov
xchg
jmp
mov
je
movl
test
adc
in
shl
push
sbbl
and
cltd
test
loopne
jle
rcrb
js
xor
sub
nop
sbb
or
jne
sub
ja
mov
fadds
test
clc
push
xchg
inc
aam
mov
pop
jmp
adcb
jbe
cmp
popa
jae
cmp
add
and
clc
jg
jg
mov
xchg
je
movq
movaps
and
shlb
jle
adc
outsb
xor
cli
rcl
lret
mov
xchg
ljmp
and
lret
sub
xor
jg
data16
ret
adc
jnp
mov
fidivrs
xchg
sub
aam
ret
or
add
adc
mov
popf
mov
pop
add
fadd
roll
add
shl
mov
adc
addps
int
add
ja
fcmovb
sbb
sbb
and
je
imul
adc
ja
sub
inc
or
les
pop
and
adc
notrack
xchg
adc
pop
dec
dec
and
pop
xor
addr16
push
push
ret
jge
mov
test
ret
mov
pop
enter
and
cmc
pop
sub
and
popa
add
xor
sar
repnz
daa
mov
pop
and
je
clc
popa
mov
not
bound
fisubs
lcall
add
test
and
sub
mov
inc
xor
push
mov
cmp
sti
pop
ljmp
mov
mov
les
pusha
js
pop
jne
push
xchg
push
xchg
sub
movups
add
add
testl
mov
addr16
mov
testb
cmpsl
repnz
or
adc
mov
gs
pop
pop
or
popf
mov
add
add
add
lock
mov
mov
hlt
fcomi
subl
push
in
stc
addr16
sahf
push
jmp
push
dec
or
xchg
and
mov
adc
inc
mov
mov
mov
stc
jg
enter
adc
inc
cmp
jne
inc
cmp
dec
jne
out
push
xor
decl
dec
js
pop
mov
and
sbb
les
out
push
pop
and
popa
adc
pop
mov
cwtl
jmp
inc
arpl
leave
clc
loop
dec
psubd
adc
pop
inc
inc
push
add
popf
add
push
push
fnstsw
and
popf
arpl
dec
jns
dec
repnz
push
add
push
push
xchg
inc
jae
adc
es
pop
or
ret
push
loopne
pushf
sub
inc
pop
xor
cli
push
mov
mov
out
mov
imul
mov
hlt
cmp
cmp
test
sbb
loop
fcmovne
aaa
mov
sbb
cmpsb
mov
shlb
insl
callw
leave
sbb
je
rolb
and
pop
cmp
mov
mov
xlat
je
fwait
shl
rol
inc
inc
cmp
ds
int
or
jne
sbb
movsb
ret
mov
jg
jmp
inc
loopne
sarb
xor
pop
shlb
dec
cli
and
stos
ss
movl
test
lahf
jno
or
cmp
xchg
inc
add
or
push
sbb
outsb
ds
in
sub
sub
orl
xlat
cld
jae
hlt
mov
lret
push
lea
loope
hlt
daa
shrb
iret
xchg
mov
cmp
inc
and
std
stc
jne
mov
adc
inc
xor
xchg
fiaddl
mov
push
sbb
clc
stos
mov
dec
mov
je
dec
or
adc
addl
fmuls
mov
ficoms
push
imulb
xchg
add
idivb
xchg
je
jecxz
xchg
cs
dec
ret
or
adc
push
fimull
or
cmpsb
sub
and
push
jl
pop
rolb
icebp
scas
add
adc
and
adc
sbb
shr
and
inc
bound
cmpsl
inc
pushf
mov
fmuls
addr16
loope
cltd
add
push
ds
add
adc
mov
sbb
test
jl
jg
outsl
inc
push
push
jbe
xchg
jbe
push
insb
mov
pop
inc
sub
push
int3
xchg
add
cli
aaa
and
push
xor
pop
div
aam
inc
sub
test
inc
imul
outsl
loop
in
sbb
cmpb
adc
bound
sub
jae
sub
pop
inc
cmp
or
cmp
push
or
adc
cmp
jns
fcmovnu
pop
pop
mov
add
push
adc
xor
aad
fsubs
je
fwait
nop
sbb
std
jle
push
addr16
out
aad
push
popf
add
incl
aas
movsb
js
aam
ret
adc
lock
push
in
insb
add
pop
and
push
shll
pop
lret
movb
shld
cmp
push
lahf
fistl
push
lds
rep
and
and
clc
push
insb
or
aam
push
mov
dec
ja
xorb
fadds
push
dec
fildll
jl
pop
pop
adc
ds
mov
sub
sbbb
mov
shlb
add
mov
cmp
outsl
pop
lods
sti
mov
sbb
adcl
jbe
lods
jmp
les
cwtl
call
fmull
fistps
in
loopne
out
add
cmp
jb
xor
jne
in
sbb
ss
jp
fsubp
xor
daa
sub
inc
loopne
push
cmpsb
fsubl
ret
mov
lahf
push
fcomps
cld
pop
pop
push
dec
cmp
and
cmpl
inc
mov
pop
in
idivb
push
xchg
mov
inc
pop
cmp
xchg
cs
push
pop
sbb
loopne
jbe
or
ljmp
or
mov
ret
adc
jo
roll
mov
fistpl
or
or
jl
push
pop
cmp
lea
cs
scas
insb
pushf
sub
and
and
inc
xor
rcrb
test
mov
mov
aaa
sar
and
stos
orb
mov
dec
jmp
or
mov
sub
pushf
ds
pop
mov
push
sbb
push
in
add
inc
sbb
cs
scas
or
push
push
push
jno
lock
in
out
sub
push
dec
push
mov
add
mov
inc
push
or
pusha
xchg
test
mov
pop
es
add
xlat
or
and
mov
ret
pop
imul
cmp
add
pop
dec
mov
mov
inc
ret
inc
call
repnz
shlb
faddp
push
dec
add
push
pop
push
mov
or
mov
inc
sub
pop
mov
js
push
mov
loop
adcl
in
ret
mov
lock
and
mov
in
mov
adc
xor
push
add
cmp
push
cmpsl
daa
sub
sub
xor
insl
orb
adc
dec
inc
and
dec
repz
xor
xchg
movb
cmp
mov
push
cltd
mov
mov
adcb
jl
or
mov
or
arpl
popa
pusha
add
jl
push
inc
jbe
sub
mov
test
dec
enter
or
dec
push
xor
movsb
or
dec
test
icebp
and
jne
add
fldl
test
in
mov
and
push
adc
rcrl
ss
dec
out
bound
gs
leave
or
adc
int
add
and
pop
pop
pop
mov
pusha
add
inc
cmp
adc
adc
push
add
xor
add
into
in
aas
int
cwtl
dec
cmpb
dec
mov
adc
push
pop
in
test
je
dec
xor
inc
and
bound
pop
sarl
ret
lea
repz
imul
ss
push
pop
add
inc
push
nop
add
daa
add
in
add
cmp
add
cmp
in
inc
cmp
add
jb
mov
inc
add
xor
push
xchg
pop
push
push
and
push
pop
jb
or
nop
out
or
or
add
or
sub
nop
or
pop
or
loop
or
add
or
lcall
out
or
ror
repnz
ja
push
imul
adc
inc
push
fcomps
adc
fwait
sub
ret
enter
inc
or
ds
pop
enter
adc
dec
push
jns
ret
adc
jb
mov
adc
nop
adc
in
cmp
pop
pop
mov
sbb
sbb
sbb
sbb
nop
out
add
add
sbb
inc
push
sbb
sbb
mov
sbb
je
pop
sbb
out
imul
cmp
sbb
sahf
addl
push
pop
pop
aam
std
mov
add
sub
cmp
mov
adc
add
cmp
xchg
incl
cmpb
mov
push
setp
sahf
mov
push
in
jno
repnz
sub
rol
lea
jns
adc
aad
cmp
add
repz
out
fwait
sbb
cmp
out
sub
pop
push
cmp
pop
enter
je
call
nop
testl
sub
ljmp
jmp
jmp
push
mov
lcall
xchg
add
pop
in
inc
in
sahf
sbb
inc
sahf
out
out
jge
int
or
sbb
pop
lock
enter
icebp
xor
cmp
pslld
pop
enter
repz
push
jns
leave
std
hlt
hlt
shll
pop
in
cltd
or
fwait
mov
cmp
push
inc
push
nop
negb
cmp
movsb
test
clc
clc
fmulp
add
clc
cltd
adc
inc
stc
in
cmp
lock
cli
cli
nop
adcl
inc
outsb
sub
je
cld
jne
pop
repnz
ss
xor
std
sbb
sbb
ret
dec
pop
pop
push
inc
or
push
mov
lahf
sub
push
cmp
shl
ljmp
jecxz
ja
inc
xor
mov
push
inc
push
nop
in
icebp
xchg
stc
daa
nop
or
xchg
sti
out
out
and
insb
out
outsb
call
inc
dec
sti
sub
xor
and
mov
cltd
in
jns
cmp
add
push
adc
orb
inc
repnz
add
cli
cmp
push
cli
sbb
dec
push
repz
pop
and
sar
push
stc
loop
xor
sbb
stc
div
negl
mov
xor
add
and
adc
out
clc
xor
inc
or
lret
sti
sbb
pusha
cmp
mov
pop
enter
rcll
inc
pusha
sbb
cmp
and
shl
add
sub
mov
loop
cmp
mul
pop
sub
xchg
cmp
imull
xor
mul
sbb
sbb
pusha
and
out
xchg
cmp
pop
inc
mull
notl
sub
sti
imul
sbb
ret
jno
mulb
jns
mov
mov
sbb
pop
repnz
negb
jae
out
jno
adc
jb
negb
testb
sbb
repnz
scas
in
mov
pop
xlat
xchg
pop
leave
xchg
cmc
jae
pop
cs
in
dec
cmc
div
imulb
fwait
and
addl
clc
loopne
jns
hlt
stc
popa
cmp
mov
xlat
jb
jno
hlt
pop
pusha
leave
mov
jne
push
hlt
roll
push
data16
shr
cs
push
jo
loopne
fstps
sti
lahf
sbb
push
or
adc
jae
loope
loope
leave
and
scas
repz
xchg
pop
mov
test
imul
pop
lret
and
andl
and
repnz
jmp
fdiv
mov
xchg
repnz
jl
pop
xorl
pop
xchg
sbb
sbb
cmc
and
xchg
mov
and
cmp
xchg
sbb
icebp
push
and
pop
divb
icebp
pop
je
dec
jb
test
xchg
inc
or
cmp
mov
add
or
and
lock
ffree
lock
popf
lock
stc
cmc
xlat
mov
adc
push
lock
xor
sbb
push
lock
test
ss
inc
lods
push
or
adc
bound
out
ret
in
jmp
in
cmovno
push
add
jb
cmp
add
stos
les
add
push
inc
and
and
adc
or
adc
or
xchg
daa
cmp
dec
add
sahf
and
sbb
dec
add
aam
mov
or
pop
pushf
jl
data16
pop
inc
add
mov
and
rorl
sub
push
outsl
jnp
lcall
loopne
in
and
jl
sbb
loop
cmpsl
fldcw
and
and
sub
repz
xor
pusha
rcrb
movsb
out
aaa
mov
jns
lahf
add
lea
test
add
jl
imul
add
fidivl
mov
add
xorl
ret
lret
xor
lods
xchg
push
inc
cld
jb
test
mov
inc
inc
mov
or
je
int
push
loope
js
sub
adc
and
cld
in
add
divl
gs
push
push
stos
adc
hlt
shll
mov
mov
add
inc
clc
mov
push
nop
push
xlat
imulb
daa
subb
pop
pop
mov
mov
or
xor
test
aaa
or
dec
arpl
mov
jo
fildll
mov
test
cmp
dec
fmuls
and
or
sub
mov
inc
jno
test
add
mov
jno
add
cld
inc
push
or
and
inc
rolb
xchg
rorl
imul
push
or
aas
adc
jb
cmpl
push
test
fimuls
pop
rolb
fsts
push
push
je
sub
mov
xor
cmpsl
pusha
jl
mov
pop
test
or
mov
xchg
fsincos
je
rep
mov
dec
ljmp
dec
stos
call
or
or
jge
leave
test
mov
inc
addb
aam
cli
lods
add
ret
adc
xchg
imul
and
xor
or
add
add
call
mov
insl
out
adc
aaa
mov
inc
jb
pop
ja
or
call
sub
mov
inc
inc
inc
aam
cmp
out
bound
lock
jbe
xchg
in
sub
inc
push
inc
and
mov
iret
and
aam
dec
xchg
jno
sar
sbb
test
outsl
push
or
cmpsb
or
add
push
push
sti
push
shll
add
fmulp
push
or
inc
inc
pop
cmp
enter
test
or
push
cwtl
and
sub
fldt
test
or
add
xor
inc
adc
enterw
inc
inc
jg
add
stos
cli
or
or
jl
ror
leave
or
lods
push
mov
or
cmp
mov
push
adc
add
into
pop
mov
out
int
popf
test
xlat
pushl
lea
cmp
jne
orl
sbbb
jne
sub
mov
out
clc
dec
xchg
pop
sar
daa
dec
adc
cmp
push
fisubs
xchg
jmp
mov
cmp
lods
repnz
cmp
and
or
fnstsw
adc
dec
add
add
lds
sbb
dec
adc
cmpsb
xor
or
div
iret
sbbb
xor
sbb
je
mov
lret
sub
cmp
cs
in
cld
push
inc
leave
cmp
jae
push
fldt
movsb
mov
imul
dec
aam
call
add
aam
popa
mov
prefetchw
shrl
cmc
mov
mov
sbb
addb
pop
and
ja
lret
mov
es
mulb
or
clc
cmc
mov
test
loopne
pop
add
les
cmpsb
cmp
adc
sub
push
or
cld
sbb
mov
mov
pushw
adcl
std
call
xchg
pop
push
fdivrl
jmp
push
xor
jg
insl
mov
and
sbb
add
test
cld
fisttpl
insl
loopne
clc
and
push
cmp
jne
jnp
rol
adcl
add
mov
add
int3
imul
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
ljmp
mov
add
aas
repz
adc
jo
lahf
out
jmp
std
std
jmp
cld
shlb
inc
push
sub
test
mov
push
aam
inc
adc
mov
or
mov
test
lds
loop
add
je
jmp
out
loope
repnz
xchg
pop
leave
jns
lock
jne
xchg
js
pusha
cmp
and
and
in
inc
cltd
std
or
or
inc
push
push
and
adc
cmp
sub
or
sahf
inc
mov
sub
rolb
cmp
xor
filds
testb
jmp
mov
xchg
cmpsb
push
add
inc
lret
mov
sub
jne
jo
cmp
orl
jecxz
and
jb
and
je
adc
pushw
stc
aad
hlt
push
jmp
subb
cmp
adc
push
adc
mov
or
mov
push
jmp
xlat
mov
push
dec
outsb
out
jns
xor
add
jmp
and
lcall
sbb
imulb
into
cwtl
ja
add
add
sub
enter
and
xlat
dec
cmp
daa
retw
sbb
rcll
sti
ret
popa
je
popf
mov
mov
outsl
xchg
inc
std
testb
pop
jmp
jae
ret
jmp
or
sub
lret
clc
bound
call
mov
fimuls
mov
fists
add
testb
pop
and
fstpl
dec
xchg
out
sub
or
cld
mov
test
push
mov
mov
mov
jns
inc
adc
adc
lds
add
lahf
vandpd
sbb
cmp
xor
das
les
insb
int3
add
push
sub
outsb
roll
sbb
push
cld
cmp
jbe
cmp
andb
shlb
out
movd
insl
dec
pop
pop
scas
push
mov
adc
xchg
sbbl
stc
or
rep
jmp
push
jo
dec
cmp
jb
xor
enter
cmp
fidivrs
lea
cmp
xchg
push
mov
and
mov
or
scas
adc
pop
fiaddl
dec
push
dec
add
add
and
cmp
sahf
out
sub
and
sbb
or
jns
jg
clc
cmp
inc
in
call
in
in
lock
inc
out
sahf
hlt
clc
clc
cld
xor
lock
fldcw
jnp
add
pop
push
push
adcl
pop
or
insl
sar
inc
and
push
jbe
sbb
lea
jl
cld
scas
loopne
push
or
loopne
ja
xchg
cmp
fsts
mov
xor
sub
cmp
sbb
cmp
inc
push
fiaddl
jl
push
jbe
fisubs
add
sahf
inc
push
out
push
add
nop
dec
dec
shll
ss
add
ljmp
mov
or
push
movsb
sahf
lods
mov
xlat
cmp
out
sahf
out
sbb
sbb
out
sahf
adc
adc
or
add
leave
mov
int
lock
push
or
xchg
cmpsb
and
add
pop
push
add
sub
daa
ja
dec
or
bnd
or
jbe
push
xor
mov
mov
incl
inc
decl
jne,pn
pop
pop
or
inc
pushl
cmc
cpuid
xor
jbe
push
cltd
pop
divl
mov
xor
adc
and
ja
enter
aaa
dec
mov
mov
xor
imul
jmp
cmp
jae
dec
les
pop
jae
pop
jbe
add
push
mov
dec
ds
pusha
add
sub
adc
hlt
lcall
shll
inc
imul
sbb
xor
sti
rclb
test
je
or
pop
jp
je
dec
lock
jb
and
pop
out
jne
xchg
jne
pop
insb
adc
adc
add
movsw
pop
decb
push
sbb
insb
push
mov
inc
xor
jae
das
sbb
pop
xor
inc
add
sbbb
lods
filds
sbb
push
rol
xor
add
lahf
xor
cmp
cmp
test
xor
adc
fidivl
sarb
mov
stos
or
add
mov
inc
sbb
jmp
cmp
enter
or
cmp
jge
std
or
cltd
pop
idiv
cmp
inc
xchg
or
xor
push
xchg
inc
out
fcoml
push
fistpll
es
jmp
push
insb
dec
or
cmp
jle
push
pop
imul
subb
mov
shlb
jbe
insl
mov
shll
adc
fisubrs
or
je
insb
sub
and
sbb
sbb
adc
jb
inc
push
pusha
add
sbb
pop
pop
mov
addb
jns
adc
cmp
sahf
mov
push
add
add
sti
mov
sub
clc
rclb
cmp
rolb
mov
inc
add
and
je
jno
cmpsb
add
and
or
xchg
push
push
cmp
les
jmp
jge
pop
je
sbb
push
enter
jl
fs
test
xor
insl
adc
outsl
mov
das
inc
ja
jo
mov
je
dec
jecxz
adc
mov
inc
adc
or
mov
movsl
nop
rclb
pop
sub
inc
push
lahf
pop
outsb
sub
cmp
or
jle
xchg
and
push
fs
or
xchg
inc
mov
push
aaa
adcl
add
or
stc
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
pop
push
xor
lods
sub
cmp
inc
and
sub
push
lods
push
shll
mov
xchg
fidivrs
mov
push
xchg
and
jge
hlt
mov
pop
loop
in
pop
jne
push
lock
test
push
adc
data16
lds
inc
adc
or
adc
cmp
out
call
inc
outsl
xchg
out
or
lea
mov
cli
or
call
cmp
ret
xchg
movsb
daa
sub
inc
out
or
push
pop
lods
daa
les
mov
hlt
dec
js
loop
nop
inc
daa
ficoml
sbb
adc
mov
mov
add
push
push
mov
in
clc
pop
aas
jl
in
je
gs
movups
mov
xor
loopne,pn
add
mov
inc
inc
cmp
je
dec
or
mov
push
mov
cs
sbb
adc
add
pop
ret
rcrb
je
and
inc
sub
aam
ret
or
sbb
mov
pushf
faddl
xchg
shrb
push
cmp
push
scas
pusha
push
mov
push
inc
sbb
test
xor
lret
jne
pop
sbb
lods
mov
inc
mov
mov
or
fidivs
or
xchg
dec
mov
fdivrs
lret
add
add
xchg
sub
or
mov
jo
add
test
jle
movsl
xchg
adc
test
decb
cmpl
cmp
mov
jbe
mov
nop
mov
lcall
inc
or
add
push
enter
pop
inc
int
lcall
push
pop
add
out
push
cli
frstor
sbb
inc
sub
dec
movsb
jb
jns
fwait
ds
into
js
lret
mov
mov
cmp
fiaddl
add
xor
ror
add
into
negl
shlb
push
lea
sub
and
jmp
and
lcall
push
add
add
push
jmp
das
dec
jmp
iret
cmpsb
pop
cmpsl
dec
sbb
vpmacssdqh
and
xor
shl
ret
cmp
xorl
pop
rolb
call
aaa
mov
gs
dec
inc
dec
insb
ret
xor
out
sbb
rcrb
les
ss
hlt
jne
and
mov
push
ljmp
and
push
sarl
and
loopne
call
shlb
imul
fiadds
and
sub
mov
add
jmp
cmp
pop
sub
xorb
cmpb
jne
inc
inc
jns
mov
adc
outsl
inc
jo
insl
movsb
out
ja
or
out
sub
movl
pop
stos
call
dec
adc
xor
test
je
dec
jb
mov
es
imul
push
inc
jmp
aas
pop
inc
movsl
add
cli
pop
adc
push
cmp
adc
cmp
mov
in
jne
add
movsb
add
add
iret
mov
add
pop
testb
xor
adc
push
and
sahf
nop
mov
jp
test
fnstcw
aam
or
jae
mov
inc
rcr
dec
insb
push
jnp
lea
je
pop
or
jmp
pushf
push
xchg
mov
ja
cld
into
filds
jg
shufps
lea
neg
mov
mov
dec
cli
or
add
jmp
punpckhbw
jl
adc
lcall
jo
push
cld
jb
fprem1
arpl
jb
lahf
mov
dec
js
add
mov
inc
bnd
ret
adc
adc
and
xor
decb
push
or
jno
jmp
arpl
cmp
std
xor
pusha
mov
fistpll
adc
shl
mov
cs
adc
lea
stos
sar
out
inc
test
iret
push
cmc
mov
test
orl
add
ljmp
std
cmp
fwait
daa
push
dec
mov
or
test
and
cmp
jmp
js
out
add
int3
shl
insl
repz
inc
pop
jle
xchg
jo
pop
lods
mov
and
inc
or
xor
cmpsb
ret
js
xchg
lods
jae
addl
cmp
lods
pop
push
les
fwait
dec
insl
adc
push
jecxz
sub
and
test
dec
nop
aas
sub
fadds
sub
dec
popa
jb
dec
lret
adc
pop
lcall
int
popf
sarl
mov
popa
ret
jmp
or
data16
movsb
add
testb
dec
xor
add
xor
out
mov
mov
adc
sub
in
push
adc
push
pop
dec
pop
xchg
mov
ss
add
and
or
sti
clc
test
and
dec
test
mov
aam
enter
or
gs
xchg
js
push
xor
dec
jmp
mov
mov
pop
jne
or
cmpsb
mov
xor
xchg
mov
in
insb
adc
das
cmpxchg
pop
and
div
jae
sub
popa
adc
xor
scas
pop
push
pop
call
jmp
pop
sub
xor
jge
sbb
add
out
ds
daa
adc
inc
lcall
rcrl
cmpl
scas
dec
adc
mov
add
movb
pop
jmp
add
insl
leave
sub
std
add
div
add
push
push
cmc
add
push
sbb
adc
mov
add
mov
pop
or
xlat
ret
add
adc
mov
sbb
dec
loopne
das
sub
sar
imul
xor
mov
sub
jmp
cwtl
lds
cmp
sbbl
cld
cmpsb
mov
fwait
jae
add
cmp
ret
jae
lahf
incb
add
hlt
inc
test
out
mov
add
iret
xor
imul
mov
push
lods
pop
test
inc
mov
fbld
push
cld
mov
sub
dec
inc
adc
sti
sbbb
pop
inc
push
add
dec
xchg
sbb
mov
outsb
adc
pop
adc
pop
add
push
add
inc
or
xchg
lret
into
or
inc
das
add
add
push
cmp
daa
inc
imul
mov
sub
lock
shrb
pusha
xchg
and
popa
adc
inc
adc
out
cmp
mov
push
push
xchg
sbb
add
rorl
pop
cmpsl
pushf
or
dec
or
and
orb
imul
out
jbe
lret
test
add
sub
sub
lods
lods
in
sahf
mov
adc
sub
data16
sbb
mov
sub
dec
cmp
jo
lods
cmp
add
inc
push
arpl
pop
test
adc
jnp
call
add
inc
jecxz
xor
adc
ds
andb
fmull
jnp
sarl
int3
es
sub
push
jae
adc
fiadds
jo
inc
push
xchg
sbb
sub
cltd
js
xor
or
popf
pushw
cmp
or
nop
loop
ret
mov
sbb
mov
insl
bound
inc
mov
add
loope
or
hlt
jnp
mov
add
sub
mov
in
add
testl
or
pop
lret
cs
jno
mov
pop
test
les
xlat
xor
dec
fdivrl
push
push
sti
popf
mov
add
hlt
mov
and
mov
lea
mov
test
ja
sub
dec
ja
add
xchg
or
clc
or
jge
jnp
cmp
cld
ficoml
adc
mov
hlt
cmp
mov
push
cmp
rclb
inc
cld
sarb
aas
dec
sarl
lret
clc
dec
push
sbb
jmp
and
je
loop
sti
xchg
and
outsb
lock
adc
aad
jmp
lock
mov
mov
mov
lods
leave
sub
mov
cmp
cmc
rorb
or
push
loop
imul
jmp
cmp
push
and
and
ret
add
je
inc
pusha
jns
mov
loopne
jns
mov
arpl
mov
mov
sub
idivb
add
ja
test
and
mov
or
or
xor
mov
push
jns
adc
clc
jg
cmp
inc
sbb
dec
add
pop
insb
push
loopne
sub
out
jmp
pop
mov
or
subl
scas
fwait
or
mov
push
sub
mov
cmpsb
push
sub
jmp
xchg
xor
mov
inc
cmp
std
jne
fcom
divb
in
jmp
sub
stos
inc
add
jmp
sarl
pop
and
ret
dec
push
movntq
push
fcomps
lcall
sbb
mov
inc
dec
mov
mov
fadd
nop
xchg
repz
shr
sbb
cmp
or
cmp
jo
push
jmp
sbb
push
dec
fcmovu
adc
push
and
xor
nop
jne
dec
cld
push
push
xor
shrb
push
call
xchg
xor
in
lea
mov
pop
loope
xor
bound
sahf
pop
leave
inc
inc
cmc
lea
pop
cli
imul
add
sub
add
out
out
setne
jmp
loopne
adc
or
lcall
ljmp
and
jne
outsb
incl
and
jge
add
jb
mov
xor
push
mov
push
mov
adc
mov
inc
data16
inc
dec
jne
mov
inc
or
mov
jl
sbb
daa
in
divb
mov
xor
jo
mov
inc
dec
jne
out
cltd
inc
xchg
test
inc
add
and
jmp
cmp
push
mov
mov
shlb
nop
ss
loopne
adc
add
fstl
pushf
loop
push
and
mov
or
inc
sbb
add
sub
mov
jns
je
inc
ss
jb
mov
push
inc
adc
cltd
inc
push
shrl
push
jbe
mov
cli
or
fwait
and
test
sub
aas
xor
fnsave
and
fs
popa
inc
pushf
das
or
insb
pop
jo
call
jecxz
frstor
lret
pop
sub
jmp
xor
add
mov
mov
add
out
add
ret
rolb
out
arpl
xchg
push
pop
ja
jno
es
inc
mov
int3
out
xchg
mov
push
and
sarb
jae
lret
cmp
push
add
xor
mov
cmpsb
push
js
icebp
mov
adc
or
or
push
and
sbb
cmp
pop
pushl
mov
out
imul
sarb
rolb
fiaddl
les
popa
fwait
inc
inc
pop
subb
and
rcrb
cwtl
rolb
aam
pop
cmp
addl
cwtl
sub
inc
mov
mov
out
jle
or
out
sahf
jg
cmpl
add
pop
and
pop
cld
sahf
inc
add
lock
dec
or
xor
or
sbb
pushf
in
push
pop
or
push
sbb
mov
lea
jnp
or
aaa
cmpl
inc
adc
ret
rsqrtps
jns
aam
movsl
sub
or
push
shrl
sub
sub
jo
xor
loop
add
je
push
lods
dec
pop
pop
push
inc
testl
rcrb
repnz
fadds
add
adc
cmpl
inc
and
dec
jle
dec
cmp
sbb
jo
loope
in
lea
adc
enter
pushf
ficomps
xlat
add
sub
rcll
xchg
inc
or
int
les
nop
add
mov
fldl
mov
push
cmp
add
sub
rol
add
daa
mov
call
cmc
loopne
mov
or
jns,pn
push
add
hlt
adc
ljmp
cld
fisttpll
jns
fisubrl
lret
outsl
dec
popf
out
call
jge
and
pop
popl
shll
in
push
push
push
mov
fucomp
xor
mov
shrb
inc
nop
mov
push
pop
pop
dec
das
and
aas
push
inc
pop
call
adc
xchg
and
cwtl
and
sbb
ds
lret
mov
into
cmp
cld
push
jo
mov
ret
inc
or
inc
mov
lods
add
test
movsb
or
mov
xchg
dec
jb
inc
cmp
cmp
jno
mov
jg
push
cmp
push
aaa
ret
outsl
mov
orb
xchg
sbb
ret
dec
rclb
test
jbe
mov
cmp
movsb
pushf
mov
pop
sub
pop
sbb
imul
rolb
add
jmp
xor
not
les
faddl
push
cltd
iret
add
dec
shll
adc
sbb
cld
loop
nop
arpl
data16
addb
nop
add
in
sub
cmp
inc
pop
cmp
add
cmp
mov
daa
jle
or
mov
push
ud0
push
dec
dec
xor
out
add
mov
pop
cmp
je
jle
or
mov
mov
cmp
insl
jg
jge
sbb
push
addl
mov
divps
jb
add
sbb
jle
sbb
adc
cmp
jb
cmpl
cmp
cmp
or
pushf
add
and
daa
test
mov
jno
pop
inc
xor
ja
mov
inc
sub
sub
mov
xchg
push
mov
mov
add
dec
mov
je
fnstenv
pop
mov
push
inc
ret
jne
xchg
mov
xor
cs
into
pop
das
pusha
sarb
add
clc
pop
mov
jmp
add
push
dec
pop
dec
lea
ja
fistpl
sbb
mov
inc
add
jle
sub
sub
in
or
fcoml
aas
sub
mov
mov
clc
or
das
das
popf
enter
shrb
pushf
popl
mov
sarl
insl
ja
aaa
dec
cld
adc
sub
push
popl
push
adc
aam
xchg
or
lock
add
movb
inc
sbb
lods
pop
dec
in
mov
sti
or
jmp
jge
adc
icebp
cmp
fists
inc
arpl
sbb
dec
mov
add
insb
or
jmp
aas
daa
mov
or
mov
jae
or
xchg
icebp
test
lcall
arpl
arpl
jnp
gs
mov
or
arpl
add
hlt
arpl
outsb
sub
hlt
arpl
lahf
out
sahf
ror
sarb
adc
pop
fld
out
push
push
jmp
fs
jns
test
gs
gs
push
and
pushf
sub
enter
pop
nop
gs
gs
fidivrs
push
push
pop
fs
dec
jl
insb
je
gs
out
sbb
inc
mov
and
test
int3
gs
adc
push
jg
mov
test
cmp
and
add
pop
or
mov
cmp
pop
leave
ljmp
and
mov
mov
es
lret
jne
jge
or
aam
rorl
add
mov
mov
push
out
test
rcrb
out
adc
add
call
and
pusha
adcb
push
xorb
add
inc
sbb
std
or
lcall
pop
and
stos
idivl
aas
adc
push
add
mov
and
pushf
lock
imul
jo
fwait
xor
push
push
into
jb
enter
push
or
inc
or
je
xchg
sbb
pushf
lods
xchg
dec
dec
adc
xchg
jae
xchg
out
leave
pop
or
push
pop
mov
movl
push
imul
sbb
leave
je
clc
push
inc
xor
movl
add
jmp
adc
and
lock
push
sti
push
stc
jbe
push
push
sbb
or
je
cmp
push
mov
and
movsb
pop
push
enter
sub
imul
mov
jl
xchg
or
and
mov
cmp
push
sub
loope
notb
cmp
push
or
je
adc
xchg
sub
clc
mov
push
mov
mov
push
mov
add
mov
pop
or
sbb
and
dec
push
sbb
lock
xchg
andb
jl
ljmp
mov
js
test
mov
fbld
mov
leave
loopne
aaa
sub
sub
les
cmp
sub
add
dec
mov
test
sbb
lea
inc
cmp
xchg
or
and
ljmp
lods
push
push
int3
pop
or
insb
imul
inc
adc
test
mov
add
xor
jbe
push
and
adc
lret
lock
dec
shlb
pop
out
in
add
xchg
rolb
shrb
sbb
mov
jle
test
sbb
dec
xchg
enter
test
jno
popf
and
or
adc
loopne
jp
cmp
aaa
jecxz
add
cwtl
ss
movsl
inc
mov
xchg
push
cmp
imul
mov
adc
jbe
push
inc
inc
dec
or
push
push
pop
push
push
in
or
inc
outsb
cmp
rol
aad
pop
cmp
ret
aad
pop
divl
in
std
nop
test
add
add
fwait
mov
dec
xchg
bnd
sbb
cmp
or
adc
ljmp
jns
or
push
pop
dec
fadds
pop
lock
add
loopne
add
mov
push
adc
and
jno
push
call
ret
and
ljmp
data16
lock
dec
jmp
ss
mov
mov
cmpsb
movsb
xchg
push
scas
fstpt
mov
decl
xchg
andb
decl
sbbb
nop
mov
dec
pop
into
lcall
push
mov
add
pop
enter
add
push
outsb
ret
mov
test
sub
or
mov
mov
sti
call
ret
cmp
mov
xor
mov
or
mov
pop
out
mov
addr16
mov
leave
movzwl
test
in
or
call
pop
ljmp
loope
orb
or
mov
lea
ficompl
lock
mov
movsbl
xadd
ja
xor
test
call
clc
sbb
push
sbb
cmc
pop
lock
js
sub
mov
mov
imul
fdivr
fsubs
lret
lods
loop
call
je
je
and
rclb
mov
scas
pushf
pop
or
shll
fs
orl
or
adc
outsb
or
in
orb
pop
cld
adc
cmp
mov
add
sub
push
imul
adc
or
ja
rcrl
int3
in
mov
mov
dec
jns
hlt
out
sbb
and
stc
cwtl
xor
or
inc
insb
je
lock
test
mov
pusha
sub
imul
adc
and
push
xchg
ss
or
xor
mov
and
outsl
and
xor
jg
jmp
or
fwait
adc
pop
outsl
cmc
xchg
data16
sbb
js
test
xlat
je
mov
loope
lock
jmp
rcrl
mov
adc
movsb
cmpsb
sbb
mov
repz
cmp
inc
je
pop
push
or
add
mov
inc
add
hlt
fdivr
push
mov
jno
loop
fsts
popf
and
je
xchg
iret
roll
jae
pop
testl
stos
out
jbe
popa
dec
aaa
jne
das
mov
adcl
xchg
add
dec
and
push
sub
outsb
in
push
fmull
xchg
loopne
mov
mov
pop
sbb
in
sub
lcall
cmp
daa
add
loope
push
popf
push
insl
cmp
adc
xchg
xorl
negl
mov
mov
dec
lret
add
mov
add
fdivs
dec
pushl
test
sti
mov
push
mov
imul
aas
adc
outsl
lds
sarl
lcall
xchg
adc
mov
xor
xchg
sbb
and
mov
lea
jae
cs
sbb
loope
test
mov
jmp
cli
add
add
or
addr16
pop
je
jmp
cmp
je
in
xor
test
insl
cmpb
aas
add
push
and
add
gs
test
loope
into
xor
gs
or
adc
xchg
shrb
cltd
lds
jecxz
add
mov
into
dec
ficompl
ret
fidivl
mov
jne
mov
jmp
lahf
out
pop
mov
insl
cmpl
incl
adc
add
int
xorb
or
insl
xlat
out
jl,pn
call
cld
adc
sti
push
jne
inc
fcomi
mov
sub
lock
clc
or
sbb
lea
stc
lcall
imul
pop
enter
sub
add
jae
jne
and
aam
test
push
outsb
mov
add
jae
addr16
inc
setl
decb
jbe
test
adc
cmpsl
rolb
jecxz
js
pop
lock
lahf
rcrb
enter
push
lret
pop
test
jecxz
jne
push
test
adc
mov
mov
dec
dec
jp
cltd
jmp
aaa
int3
je
fsts
dec
sub
cs
jb
jl
jae
inc
inc
adc
sub
neg
jecxz
nop
pop
or
jne
jmp
dec
notl
decb
or
jne
and
jo
mov
das
sbb
inc
adc
aam
adc
mov
push
sub
xor
scas
loopne
stc
cmp
xchg
clc
sahf
add
push
fsubrl
decb
pop
xchg
sub
inc
cmp
ljmp
das
push
into
subb
sbb
and
xor
ss
js
fisubs
mov
loope
or
insb
sbb
xchg
inc
int3
jle
xchg
repz
push
int
lret
test
sub
inc
sbb
push
sub
rorl
push
test
cmpsb
and
leave
fcoml
cltd
sub
xchg
mov
fcoml
or
pop
shl
pop
cmp
insb
cmp
fdivrl
sbb
ja,pt
jns
popf
adc
add
sub
jbe
dec
sbbl
add
nop
aaa
shlb
cmp
call
outsb
fistps
loopne
nop
popa
jle
sbb
mov
cmp
add
cmpsb
add
sbb
lea
sbb
popa
push
sti
push
and
cmp
add
pop
push
das
or
jo
icebp
jnp
cmp
outsl
movsl
daa
pop
mov
mov
mov
or
adc
movsb
cmp
push
and
pop
fisttps
sub
push
nop
mov
dec
in
push
lods
outsl
hlt
insl
push
ljmp
xchg
mov
sbb
test
push
xchg
rolb
mov
pop
push
js
js
mov
add
mov
pop
sub
mulb
mov
cmp
fmull
pushf
dec
cld
sbb
push
lea
mov
scas
and
sbb
scas
stc
add
std
and
and
rolb
and
lcall
and
mov
andb
ds
aas
dec
or
jb
push
xlat
or
or
push
pop
lahf
or
int3
fstl
add
out
xchg
rorb
lds
loope
add
das
push
xchg
mov
sbb
les
nop
bound
xor
or
ds
cmp
ss
outsb
push
mov
test
pop
jne
sbb
rolb
jmp
push
imul
cmp
xor
nopl
inc
or
pop
bound
loopne
or
imul
andl
xor
test
pop
adc
sbb
test
xor
dec
in
or
jnp
mov
or
adc
enter
cltd
cli
pusha
mov
dec
bound
mov
rclb
aad
inc
dec
cmp
mov
add
insl
cmp
cld
shr
mov
xchg
mov
leave
rcrb
xchg
mov
inc
int3
add
add
mov
or
jbe
xchg
clc
dec
or
push
lea
mov
lods
mov
movsl
or
inc
ljmp
divb
sar
dec
cmp
jbe
push
pop
arpl
xlat
cmpsb
dec
dec
or
cs
pushl
sbb
dec
add
shll
pop
mov
push
mov
sbb
lea
xor
pusha
cmp
pop
push
gs
fdivs
ljmp
pop
and
push
or
fimull
sub
jmp
clc
and
sti
xor
jne
and
sub
test
add
cwtl
dec
pop
cmp
das
imul
imul
add
pop
out
sub
jno
jno
mov
call
mov
shr
not
and
add
sbb
sub
fimuls
das
mov
cltd
repnz
mov
dec
add
mov
js
lock
stos
pop
mov
sub
fisubrs
dec
lock
int3
inc
adc
add
or
adc
mov
and
rorl
mov
ds
adcl
cmp
mov
jmp
dec
adc
push
mov
or
adc
add
pop
xchg
pop
jp
inc
enter
add
and
xchg
mov
outsl
mov
shl
add
scas
sti
divb
call
aas
gs
push
or
xor
andl
add
decb
adc
inc
das
aam
mov
and
pushl
push
rcrb
mov
adc
jns
mov
cs
es
adc
in
int
jl
adc
push
jl
std
inc
cmp
cmp
or
insl
or
mov
jbe
enter
inc
jo
loope
inc
mov
and
jg
lret
xor
or
cwtl
outsl
push
sbb
cmp
iret
js
dec
and
addl
and
inc
adcb
adc
or
mov
adc
push
xor
int3
dec
jecxz
or
adc
mov
jmp
orl
and
data16
test
mov
pop
push
mov
shlb
clc
or
add
inc
ljmp
rorb
jl
inc
clc
pop
add
mov
inc
inc
or
hlt
or
sub
push
pop
or
int
outsl
add
push
fcompl
sbb
sub
shr
aas
lock
xchg
rolb
dec
clc
incl
nop
std
and
mov
push
hlt
inc
cld
lock
ja
sbb
call
dec
jne
je
xchg
ret
clc
add
orl
dec
and
sub
sub
fs
inc
hlt
cmp
sahf
pop
mov
mov
decl
pop
lock
cmp
inc
jne
or
lds
ljmp
stc
jo
cmpsl
or
adc
ror
and
mov
add
imul
push
scas
xchg
jmp
adc
xor
test
sbb
add
push
clc
sbbb
xor
aam
xor
mov
push
cs
add
pop
add
cmp
nop
or
or
push
jns
std
dec
adc
into
add
and
sub
mov
pushf
sar
dec
mov
cs
xor
fstpl
lea
mov
jg
or
mov
lcall
pop
shlb
sbb
es
movsb
iret
js
and
inc
mov
js
test
test
imul
scas
es
insb
xor
dec
dec
and
inc
inc
cmpb
and
clc
jl
adc
add
jge
mov
push
cld
loop
inc
dec
insb
pop
xor
push
sar
dec
jp
loope
pusha
and
mov
inc
cwtl
xor
cmp
pusha
sbb
iret
dec
je
fisttps
add
push
fnstenv
ja
ja
dec
xor
pop
ficoms
add
mov
loope
sbb
arpl
or
mov
and
negl
sbb
cmp
lods
push
mov
mov
dec
in
rdmsr
cmp
mov
inc
and
jmp
cld
imul
js
rol
add
lock
inc
loop
cmp
push
push
push
jge
xor
pop
mov
push
cmpb
cld
in
or
stos
rolb
out
fldcw
push
cmpl
cmp
and
decb
xlat
mov
and
jle
cwtl
jnp
jg
sbb
jne
out
add
add
je
mov
xor
aaa
arpl
push
xchg
les
clc
insl
xchg
and
je
cmp
subb
dec
dec
nop
sbbl
or
pushl
sbb
mov
mov
in
cli
and
xchg
xchg
ss
mov
dec
pop
cwtl
rcrl
jne
mov
and
cmp
mov
nop
lret
mov
repz
mov
and
jns
jle
jne
mov
push
pop
outsb
leave
inc
test
push
mov
sahf
inc
push
pushf
mov
sub
icebp
mov
mov
and
mov
dec
add
dec
push
dec
xchg
sbb
iret
push
cmpb
sahf
cmp
rol
fbstp
and
mov
decb
jne
popa
jbe
shl
and
jmp
jp
mov
dec
xchg
cmp
jne
dec
fstpl
push
and
dec
shll
jns
jp
mov
popa
imul
fidivrs
or
das
pop
xor
sub
jge
cli
jmp
cmc
push
or
testl
inc
insl
and
in
mov
pop
inc
mov
fsubrl
or
adc
push
mov
scas
and
inc
test
mov
test
lea
ds
sbb
loope
cmp
out
pop
das
push
ds
mov
add
xor
loopne
repnz
in
sbb
loopne
push
sbb
mov
mov
or
xorl
jp
jae
imul
adc
sub
cmp
pop
xorb
xor
jp
icebp
push
mov
add
or
mov
dec
scas
inc
and
scas
mov
adc
and
pop
inc
push
testb
es
int3
mov
add
js
and
jmp
jo
iret
ds
cmp
cmp
sub
add
push
mov
adc
push
pop
es
addl
adc
or
inc
push
enter
les
scas
jge
dec
push
mov
je
clc
or
xor
dec
mov
cmp
insb
sti
popf
dec
or
xor
negb
std
lahf
pushl
adcl
pop
sbb
jb
in
out
pop
jne
push
or
mov
std
pop
insl
sbb
and
xorb
cmp
fcoms
fdivrs
or
pop
xchg
inc
outsl
jo
inc
test
loope
int
jbe
xchg
mov
sub
lahf
dec
dec
jl
insb
int3
push
mov
imul
push
dec
jns
mov
sbb
xor
mov
insb
fmuls
jge
jle
inc
inc
dec
jne
daa
pop
mov
inc
aas
xor
pop
fs
lods
jp
adc
jns
adc
rcrb
jbe
daa
lock
lea
lret
lods
aam
int3
xorb
hlt
mov
shll
jecxz
in
xorl
pop
cmpl
loop
add
push
jmp
xchg
dec
jae
jl
or
int3
test
shlb
cmp
loopne
je
pop
add
cmp
mov
mov
mov
sub
shrb
loope
xchg
imul
test
fdivl
dec
jl,pn
pop
pop
add
sbb
xchg
mov
and
add
push
xchg
movsb
or
andl
movsb
repz
dec
loop
push
and
adc
adc
int
fsubrs
clc
push
ret
xor
add
test
mov
shrb
pop
cmp
jge
jb
es
cmp
add
pop
jb
hlt
fsubp
inc
mov
hlt
enter
icebp
mov
push
jb
fistpll
insb
jne
jp
or
adc
lods
xor
and
jg
and
add
cwtl
andl
cmpl
cmp
fs
xchg
or
cmc
jmp
mov
les
nop
addb
std
pushf
cmpsb
mov
ret
daa
int
ret
in
shll
lea
leave
cltd
or
and
inc
cmpsb
xchg
add
xchg
adc
jge
sub
pusha
sbb
sub
xor
lahf
call
test
xor
sbb
adc
cmp
neg
lret
sbb
call
addb
shlb
push
sar
adc
and
add
mov
mov
sub
insb
andb
rolb
sub
aas
test
lret
add
xchg
mov
shll
and
call
pop
in
jge
jns
mov
push
hlt
xchg
xchg
push
lods
movsb
xor
add
sbb
xchg
jle
add
add
call
inc
in
or
mov
mov
xor
cltd
in
rolb
mov
out
loop
in
sbb
pop
xor
or
les
test
popa
mov
mov
icebp
adc
js
cmp
lcall
pop
sub
or
int
int
mov
and
pop
pop
orb
cmp
mov
ss
adc
mov
or
mov
daa
cmp
xchg
jo
pop
push
testl
mov
adc
lret
scas
cltd
ret
push
sbb
xchg
ret
test
sub
sub
or
fidivl
je
push
cmp
mov
adc
xchg
or
mov
lret
or
and
cmp
or
adc
scas
sbb
pop
add
cmp
and
shll
fisttps
dec
sub
cmp
mov
sbb
stos
daa
xchg
xor
jmp
push
or
jecxz
fincstp
ret
mov
cmp
jne
mov
sbb
cmp
and
adc
xor
cmp
jb
sarb
adc
push
pop
sbb
jne
mov
nop
sbb
shll
ret
xchg
xlat
sahf
fldcw
out
add
out
scas
mov
add
movb
notb
dec
add
mov
adc
loopne
testb
out
dec
int
or
insl
push
imul
adc
sbb
add
push
std
jne
sarl
hlt
mov
ja
or
push
test
test
adc
inc
nop
lods
add
dec
cmp
test
cmovnp
add
add
pop
dec
flds
mov
shl
lret
int3
and
not
and
jne,pn
nop
or
and
push
sbb
cmp
sub
inc
cmpsb
imul
cli
sti
cmpsl
test
lcall
add
adc
dec
test
push
dec
in
push
dec
adc
cmpsb
mov
lret
je
pop
cs
fldcw
sbb
add
in
shl
mov
xor
rcrl
int
movsb
insl
mov
push
movsl
xchg
dec
je
push
or
xchg
js
fmul
or
andl
push
in
jbe
fldl
or
fldl
or
sub
cs
cmp
icebp
out
in
cwtl
push
mov
imul
pop
jmp
jo
int
fldt
mov
mov
mov
in
mov
jmp
je
add
and
or
or
sti
fnstenv
lcall
jmp
sbb
mov
mov
xor
int
xchg
jmp
dec
cmpl
fwait
add
adc
lea
push
ficoms
mov
xchg
adc
test
je
cmp
jo,pn
adc
sub
in
fdivrl
fstl
push
or
shl
push
paddsb
pop
aaa
jne
das
and
inc
lock
pop
adc
sbb
and
jl
out
sub
dec
ds
jns
mov
push
push
pusha
push
imul
fwait
mov
sub
and
test
pop
shrl
or
mov
mov
mov
icebp
pop
mov
xchg
in
jle
mull
sbb
pop
dec
in
or
push
inc
or
in
fcompl
push
push
xchg
jmp
inc
faddl
sbb
jle
or
popa
push
jmp
test
mov
insb
mov
or
xchg
inc
jp
sbbl
iret
clc
and
jne
push
jecxz
adc
push
adcl
jle
testb
orb
mov
or
sbb
fldl
xchg
push
push
mov
adc
adc
gs
into
adc
cwtl
les
out
cltd
stos
gs
push
js
or
sbb
mov
fnstenv
mov
mov
sub
lret
in
call
pop
pop
cmp
dec
mov
jne
mov
ds
pop
mov
arpl
push
clc
mov
pop
rol
add
inc
add
push
pop
and
jne
dec
sbb
mov
sar
lea
mulb
stos
jmp
addr16
cmp
fiaddl
jg
stc
mov
mov
sti
cld
pop
mov
rolb
adc
popf
call
shl
das
or
lret
ja
adc
and
sub
addb
repnz
fsts
call
mov
xchg
lret
in
leave
rorb
shl
enter
cmp
inc
into
aad
push
inc
dec
dec
dec
push
pop
or
xchg
dec
popw
add
sbbl
xor
pushf
sbb
ror
mov
cmp
lods
in
movsl
inc
hlt
ss
or
adc
popa
sub
cs
xor
lods
es
xchg
lea
lret
fdivrl
push
cli
lods
subl
hlt
decb
jne
inc
sub
pop
shlb
or
adc
and
mov
sbb
stc
push
enter
cmpb
xor
or
dec
pop
movsb
push
aad
cmp
push
int
rclb
lds
js
loope
xchg
mov
lods
cmp
test
add
movsb
dec
ss
and
leave
fwait
test
cmp
mov
mov
pop
push
push
xrelease
in
push
movsb
lret
xlat
sbb
push
outsb
call
adc
rorl
loopne
ja
pop
lcall
adc
adc
sti
push
inc
cmp
mov
clc
popf
lea
std
stos
jne
repz
adc
jmp
xchg
and
inc
jne
add
mov
pop
nop
and
jne
xor
xchg
jecxz
mov
adc
notl
mov
movsb
loopne
and
mov
mov
subl
jo
jns
daa
mov
sahf
subb
mov
je
inc
cld
scas
repnz
or
hlt
std
loopne
mov
inc
add
jecxz
enter
imul
push
sub
dec
aaa
dec
nop
jno
or
mov
pop
add
push
mov
xor
fstpl
gs
add
in
lcall
pop
jb
jg
std
xchg
mov
test
mov
lret
insl
pop
xor
mov
std
aaa
addr16
xor
out
lock
fdivr
ja
mov
adc
fbstp
out
and
sbb
lods
shr
je
mov
dec
inc
in
jno
mov
and
andb
sti
and
call
stc
call
call
cmp
mov
out
in
std
push
mov
lds
call
daa
arpl
insb
in
mov
inc
mov
cmp
nop
std
lds
das
data16
sub
mov
xchg
std
out
imul
mov
push
lods
call
gs
jmp
xor
jecxz
je
mov
pop
fs
test
mov
xor
jmp
mov
movb
cmp
xchg
xchg
push
fisttps
test
lods
xchg
mov
inc
into
inc
fwait
jne
cmpsb
inc
adc
fs
dec
push
cmp
cmp
sbb
dec
mov
adc
std
call
nop
std
xor
push
imul
test
xor
sub
frstor
push
mov
sbb
mov
fdivrp
mov
ds
cs
mov
hlt
sub
or
push
test
sub
dec
testl
aam
push
cmc
xchg
lret
rol
sar
lock
cs
std
xor
push
sub
jge
int3
sbb
jmp
adc
and
ror
cmp
jge
sub
jmp
testl
cmp
lods
in
cmp
xchg
mov
int
std
push
adc
xchg
dec
cmpl
int
sbb
les
push
into
dec
pop
insl
mov
movsb
adc
adc
loop
cwtl
jmp
push
inc
lret
jne
cmp
push
dec
inc
adcl
mov
mov
fdivr
adc
subb
dec
pop
and
push
je
nop
xchg
and
dec
std
std
push
loopne
in
loope
mov
pusha
sub
xchg
dec
pop
pop
movsb
bound
mov
movsl
pushf
push
aad
sahf
cmpsl
stc
xor
ss
mov
sub
loope
lock
test
and
jne
gs
ret
sub
aas
xor
inc
push
jecxz
pop
pop
leave
mov
inc
push
xchg
dec
movsb
test
inc
dec
push
mov
and
inc
sarb
and
cwtl
in
push
loopne
aad
jecxz,pn
push
adc
dec
aad
adc
sub
cmp
ja
pushf
and
or
loopne
mov
lea
mov
test
mov
add
ret
and
lock
jo
xchg
ljmp
dec
push
lock
arpl
add
lret
mov
repz
mov
out
and
mov
dec
es
add
call
xor
cmc
pop
enter
inc
bound
inc
xlat
adc
in
xor
inc
and
iret
mov
dec
cmp
and
imulb
loope
je
push
cmpsb
nop
test
dec
in
nop
mov
fs
lret
pop
popl
lods
in
or
gs
sti
pushf
inc
sahf
sbb
pushf
and
test
mov
sbb
xchg
pushf
add
imul
sbb
mov
leave
dec
movsl
jb
mov
loope
inc
sub
enter
fwait
leave
push
xor
sbb
mov
fwait
cmpsl
add
mov
mov
lahf
andl
test
jb
js
mov
or
js
pop
repz
xchg
pushf
dec
scas
mov
and
mov
sbb
xchg
pop
or
pushf
loop
aaa
ds
dec
inc
scas
icebp
mov
movsb
jb
imul
dec
add
icebp
cltd
fs
lahf
std
pushf
movsb
dec
push
sbb
bound
or
je
dec
sti
leave
adc
or
repz
test
enter
test
leave
push
and
pushf
and
leave
pushf
nop
nop
nop
dec
add
and
xchg
lcall
fiaddl
addr16
dec
pop
je
lcall
jg
pusha
add
repz
lahf
test
shrl
or
cmp
sti
ss
mov
iret
sub
mov
mov
pop
rorb
xchg
jne
xor
xor
jae
push
int
imulb
inc
mov
testb
sahf
es
add
jno
mov
dec
pop
add
mov
aaa
test
adc
in
mov
mov
mov
cld
adc
add
addl
and
push
lds
leave
pop
adc
jb
mov
push
and
dec
test
into
ret
add
cmpsb
idivl
movb
push
movsl
mov
rorl
adc
cmc
std
jg
lret
jno
test
je
mov
xor
int3
mov
mov
pop
cmpsl
mov
sbb
adc
cmpsl
add
in
ret
and
jle
popa
add
scas
cmp
and
mov
sbb
sub
jmp
bound
add
jb
jb
sbb
dec
sub
or
les
cmp
rcll
cld
lods
or
or
sub
jg
add
fimuls
sbb
xor
push
inc
lds
cmc
lock
push
gs
add
pop
rolb
add
push
addr16
icebp
cmc
mov
mov
rcr
push
ds
or
repnz
fbld
cmp
ficomps
push
add
je
hlt
daa
clc
inc
push
dec
mov
addl
jae
testl
cmpsb
jmp
cmp
xor
repz
test
cmc
les
pop
inc
jp
mov
xchg
inc
sbb
loope
rorb
xchg
and
rclb
pop
sarb
ficomps
testb
jbe
dec
jp
cmp
cltd
divl
pop
inc
movsl
loopne
iret
xor
leave
mov
add
xor
jae
js
xchg
pop
adc
inc
cmp
pshufw
clc
sub
test
stc
pop
or
sbb
or
out
xor
inc
stc
adc
push
dec
mov
push
adc
inc
or
push
or
dec
movsl
add
pop
stos
addr16
mov
xor
mov
or
aaa
pop
stos
xor
pop
xchg
lea
sbb
pop
iret
add
add
add
movsb
rorb
jb
in
or
stos
add
xor
mov
jb
add
gs
sbb
ret
mov
xchg
mov
inc
and
int3
xor
ret
je
andl
sbb
jmp
fwait
leave
cli
pusha
inc
xchg
inc
cmp
push
sub
lods
lods
sub
cltd
and
popa
hlt
fdivr
cmp
in
push
add
dec
fs
fcmovb
lea
add
and
cmpsl
adc
cmp
add
and
js
pop
push
adc
adc
shr
loopne
mov
mov
pushl
shr
rcr
shr
rcr
or
jne
div
mov
fs
mov
mul
add
jb
cmp
or
cmp
add
lock
cwtl
or
push
mov
pusha
push
mov
and
pop
pop
ficomps
fimull
jb
xchg
dec
push
push
icebp
lea
cmp
cmp
jb
inc
mov
adc
movsl
dec
inc
and
lea
and
pop
out
inc
cmp
roll
nop
adc
dec
sbb
mov
push
pop
jg
movsb
pusha
imul
inc
push
insl
adc
or
push
xor
or
sbb
xchg
loopne
or
or
sbb
or
sub
adc
test
mov
int3
lahf
dec
cs
pop
or
cmp
adc
cmp
cs
inc
dec
jae
or
push
and
inc
ret
ret
push
mov
fldt
adc
add
xorb
pop
add
and
mov
push
add
mov
mov
lret
sbbb
stos
add
je
sbb
lea
shr
add
imul
ret
fmuls
aas
enter
dec
pop
fmuls
mov
les
sub
and
sbb
and
add
cltd
push
sbb
test
push
shlb
rolb
or
pop
pusha
gs
xlat
jge
imul
scas
jl
inc
jle
cmp
xor
cmp
cmp
jl
mov
inc
fs
jb
fmul
sbbl
pop
orl
or
ds
mov
sbbb
popl
push
cmp
fdivrp
jbe
inc
rorl
mov
leave
push
sbb
pusha
dec
lock
mov
or
mov
pusha
adc
out
loope
xor
icebp
imul
rorl
jb
and
hlt
add
pop
dec
nop
dec
xor
cmp
or
adc
mov
mov
lock
call
jg
jns
adc
je
push
or
jne
fchs
pop
shr
movsb
mov
jae
xlat
inc
mov
ja
push
dec
lods
out
add
pusha
fidivs
lods
xchg
or
cmp
sbb
clc
sub
sbb
jmp
fstl
xchg
push
push
mov
mov
push
or
sbb
pop
pop
xchg
xor
cmp
adc
push
in
inc
mov
lret
cmpb
or
or
je
mov
cmp
dec
mov
mov
je
dec
sti
jne,pn
sbb
inc
mov
jb
sub
adc
ret
mov
and
mov
mov
pop
mov
mov
fcmovnu
ss
sbb
sbb
push
xor
jmp
mov
inc
ret
dec
add
repnz
aaa
xor
push
adc
jno
xchg
fs
and
lret
pop
pop
add
loop
negb
in
insb
insb
in
das
loop
fldenv
jg
xchg
insl
test
addl
push
scas
mov
cs
je
add
sbb
push
pop
ret
push
in
dec
or
dec
pop
movl
xor
and
adc
iret
xlat
jae
adc
or
and
pop
mov
adc
mov
mov
lds
divl
lret
stc
xor
cmp
xor
push
and
or
and
rolb
lods
and
pop
test
push
in
inc
mov
ss
cmp
je
rcrl
repnz
dec
pusha
aas
iret
faddl
aam
xchg
pop
addr16
decb
and
outsb
or
cld
fildll
repnz
lods
inc
or
sbb
dec
dec
outsl
and
or
sbb
mov
mov
pop
punpckhbw
push
pop
adc
pop
test
jmp
and
cmp
dec
lods
fsubrl
cmp
and
cmp
adc
jmp
xor
push
and
add
jno
ja
inc
repz
xchg
nop
xchg
test
xchg
and
addb
and
subl
adc
ja
call
push
pop
inc
dec
loopne
pop
jb
cmc
fmul
push
fldt
mov
and
pop
mov
cmp
jbe
push
popa
mov
add
push
addb
mov
mov
mov
dec
adcl
popa
mov
sub
cmpb
pop
je
fisttpl
adc
dec
adc
sti
ss
dec
pusha
add
or
sarl
and
inc
dec
mov
leave
and
add
xchg
in
daa
push
lods
adc
out
mov
dec
pop
adc
or
aad
mov
add
adc
fdivs
shrl
and
jmp
call
add
mov
arpl
test
pop
cmp
mov
cmp
or
xor
xor
mov
rorb
mov
and
enter
enter
xchg
add
lret
out
inc
fcomp
adc
sub
mov
pushf
out
dec
jmp
xor
dec
xor
adc
add
jo
mov
inc
pop
je
pop
add
int
or
adc
popa
jge
or
adc
test
cmp
shr
cmp
jle
add
add
cwtl
icebp
subps
xchg
xchg
inc
or
ss
add
je
sarb
bound
leave
or
rolb
out
mov
inc
add
xor
inc
jne
int
pop
mov
pop
add
adc
jle
pop
mov
cwtl
out
sub
rol
cmp
dec
jns
pop
inc
rcr
xor
mov
jmp
mov
inc
add
movsb
js
sub
lock
int
jge
mov
inc
dec
jg
js
loop
jae
push
cmp
inc
dec
shl
stos
xchg
and
jl
ss
ljmp
sub
push
push
orl
xchg
mov
clc
or
cwtl
fldenv
xchg
repnz
sbbb
adc
pop
cli
cs
and
add
inc
cmp
jecxz
sbbl
jbe
push
jne
mov
enter
sahf
cmp
dec
inc
inc
or
jne
and
fidivl
sar
shlb
mov
adc
pop
dec
js
add
and
pop
pusha
mov
aam
mov
test
sbb
jg
mov
ret
jmp
and
add
and
shll
mov
inc
enter
aam
or
out
int
pop
bswap
xor
pushf
pop
or
pop
dec
subb
icebp
push
push
mov
decl
sub
push
push
pop
push
dec
testb
aam
mov
or
or
jl
jmp
add
or
or
or
js
and
push
and
xor
mov
inc
outsb
inc
mov
in
xor
xchg
js
into
mov
adc
cmp
adc
cmp
mov
adcb
mov
add
push
cld
shlb
rcrb
leave
sbbl
and
filds
and
and
insl
mov
cs
sarb
rclb
jg
popf
or
mov
subb
or
add
add
push
mov
mov
dec
subb
loopne
call
lcall
out
shl
add
xor
push
push
inc
add
lods
pop
push
stos
and
mov
iret
sub
dec
incl
hlt
inc
or
fadds
xchg
dec
ret
repz
lea
jmp
xchg
xorl
push
pop
jo
test
das
or
cmc
push
in
push
loopne
aam
inc
in
push
insb
xchg
or
xor
xor
xchg
stos
inc
mov
add
adcl
sub
mov
and
push
add
add
mov
jmp
scas
pop
notb
adc
arpl
add
pop
and
fbstp
out
mov
jecxz
pop
movsl
test
add
push
mov
xor
xchg
add
lock
shlb
rorl
push
sarl
xor
and
mov
shrl
in
or
adc
lock
not
xchg
mov
inc
add
sub
popa
lds
les
jb
rcrl
and
clc
add
ret
sub
adc
mov
inc
jmp
push
out
jo
nop
push
sub
scas
sbb
jg
adc
and
inc
xor
jo
mov
enter
mov
adc
cli
sub
adc
push
cmp
mov
jg
cmp
je
sub
inc
cmp
jo
movsb
sub
addb
jle
inc
adc
mov
rep
rcrl
cli
jmp
neg
and
mov
lock
push
lcall
xchg
fimuls
mov
mov
xchg
adc
dec
sbb
lcall
in
mov
shrl
add
push
in
mov
popa
nop
data16
popa
push
mov
fadds
add
sub
sbb
mov
mov
mov
fsubs
jl
mov
cmpsl
push
add
push
push
dec
repz
inc
and
imul
pop
xchg
inc
mov
fsubrp
das
je
add
inc
adc
outsb
jns
lret
jae
cmpsl
lock
hlt
pop
sahf
lret
inc
dec
adc
negl
mov
dec
jecxz
dec
mov
push
mov
mov
push
add
mov
push
xchg
sub
adc
fsubrs
push
xchg
cmp
fisttps
or
pop
xor
push
repz
jle
pop
outsl
inc
or
jbe
xchg
dec
in
jle
sahf
outsl
ja
mov
stos
mov
sub
sbb
hlt
test
ret
ror
and
ja
lret
loope
or
jb
mov
and
cld
fwait
loope
call
sub
mov
mov
sub
ja
mulb
push
jg
add
sub
fadds
fsubrs
fld
xchg
rcl
mov
clc
in
lock
rep
add
mov
mov
add
adc
adc
ss
and
push
andl
mov
aaa
jmp
pop
stc
rolb
inc
add
test
dec
out
pop
add
ret
pop
test
xor
pop
call
pop
call
clc
xor
xchg
bound
jo
movsl
mov
js
xchg
test
inc
xchg
mov
roll
sub
fsubrs
push
pop
in
lods
fistl
dec
add
push
jno
dec
or
xlat
or
ds
les
mov
push
add
jb
stos
jge
fcompl
int
xchg
lret
fcoms
enter
sbb
or
mov
decl
or
or
cmp
mov
les
js
xor
inc
js
fcoms
faddl
ret
xor
popf
adc
mov
cmp
add
xor
mov
inc
jo
jmp
test
ret
and
xor
enter
mov
or
sarb
add
sbb
in
out
fstl
add
sub
sub
adc
fcomp
arpl
push
sub
dec
push
or
push
push
jne
adc
mov
xor
pcmpeqd
insl
testb
jmp
adc
outsl
insl
dec
push
jp
add
jae
outsb
movsl
repnz
inc
add
or
dec
sub
sti
add
out
inc
jnp
cmp
mov
jecxz
mov
stos
cltd
test
aaa
inc
adc
adc
ficoml
inc
or
cmp
call
and
dec
push
or
jl
cmp
jg
inc
ljmp
hlt
pop
cmc
adc
sub
cmp
imul
jle
push
ret
cmc
aas
push
adc
sbb
dec
enter
adc
mov
cmp
rcr
fsubs
popa
push
jb
push
pop
adc
fs
jle
inc
push
mov
inc
cmp
lds
mov
rcll
xor
bound
push
ja
cld
and
fdivrs
ja
pop
jo
rcrb
cld
test
add
sbb
or
sbbb
test
pop
sub
xchg
sbb
mov
pop
test
or
int3
add
xor
pop
cld
adc
adc
rorl
mov
aad
rclb
packuswb
adc
shr
inc
sbb
push
inc
push
cltd
or
sbb
fisttpl
push
jbe
dec
sub
sbb
clc
jns
xor
or
fisubl
fiaddl
fxch
into
test
xor
sbb
movsb
mov
mov
add
push
push
decb
leave
out
jne
mov
mov
repz
icebp
sub
clc
adc
repnz
and
int
mov
or
dec
sbb
rorb
rolb
sarl
jo
add
inc
and
stos
push
add
mov
rolb
imulb
mov
sub
loop
fcomps
mov
imul
cmp
adc
mov
adc
adc
xor
fsubs
sbb
sbb
xchg
add
inc
mov
adc
xor
imul
jbe
pop
pop
sub
sub
cmp
push
mov
inc
jl
cmpsb
cld
sbb
subb
mov
frstor
dec
scas
ret
xor
adcb
xor
cltd
jp
adc
pop
pusha
push
push
push
rcrb
push
mov
push
sahf
js
xchg
mov
sbb
push
sti
sub
xor
cli
adc
pop
mov
inc
lea
lea
or
xor
xor
es
test
or
mov
ret
sbb
mov
popl
sahf
subb
inc
add
mov
push
pushf
adc
and
js
sbb
add
dec
je
cmp
inc
mov
mov
cld
dec
and
pushl
add
dec
arpl
sub
dec
cmc
aam
loop
mov
clc
sbb
inc
jmp
pop
mov
add
leave
xor
ss
loope
dec
lahf
mov
pop
repz
aad
inc
xor
int
add
lret
sub
add
inc
or
xchg
int3
daa
xor
sub
adc
insl
in
adc
ss
xchg
xchg
and
sub
test
cmp
xchg
ss
and
inc
cmovs
daa
daa
daa
dec
push
push
pop
leave
leave
leave
add
leave
leave
leave
leave
push
arpl
leave
js
gs
and
sbb
mov
xchg
cwtl
and
dec
xor
leave
test
sub
sub
and
je
cmp
outsb
mov
add
fdivl
pop
in
mov
or
dec
xor
insl
inc
adc
dec
adc
rorb
sbb
xor
add
mov
rorb
pop
or
inc
insb
pop
pop
adc
adc
cmp
inc
ret
cwtl
inc
jae
cmp
shlb
mov
js
inc
dec
jne
out
adc
movsb
push
inc
or
lret
sbb
xchg
add
pop
pop
push
xchg
mov
sahf
orb
in
add
push
loope
mov
pusha
and
xchg
daa
sbb
adcb
and
jne
and
fdivrl
add
jge
imul
add
or
cmp
jge
sub
js
add
and
outsl
add
add
popa
les
cltd
js
xorl
inc
sub
add
negb
dec
daa
and
push
lea
je
add
popf
imulb
sti
in
test
push
xor
ret
lret
xchg
mov
mov
lock
add
fmuls
mov
push
popf
mov
int3
cmp
in
mov
rcrl
inc
cwtl
xor
jge
outsl
cmp
sbb
int
xchg
pop
sbb
pop
mov
je
push
pushf
out
xchg
mov
inc
push
clc
add
and
add
fcmovu
jne
sahf
or
dec
cmpsb
shrb
push
gs
dec
das
enter
mov
sbb
dec
popa
adc
sub
inc
cmp
jnp
jns
in
add
lret
mov
lret
lret
push
mov
outsl
enter
pop
jne
in
and
and
mov
mov
adc
clc
cmp
add
sbb
add
mov
jl
xchg
inc
pop
pop
jmp
mov
dec
or
orb
pop
mov
push
adc
mov
mov
iret
cmp
inc
pop
orb
add
and
fcoms
inc
push
dec
testb
into
call
addl
xor
cmc
js
pop
mov
or
adc
mov
jl
cmp
jb
push
push
dec
in
mov
push
scas
jmp
add
cld
lea
adc
mov
lcall
stos
and
cmpl
mov
or
adc
notb
fwait
lret
sti
lods
test
or
fwait
mov
dec
mov
sbb
int
mov
or
pop
in
rorb
in
js
pop
pop
jo
in
add
or
mov
aam
test
inc
inc
mov
xor
push
push
repz
push
lea
sahf
or
out
mov
xchg
in
mov
add
sar
mov
push
ret
sbb
or
xor
test
andl
iret
lods
sbb
aam
add
and
fstl
imul
icebp
pop
popf
add
loopne
inc
ret
cld
mov
inc
sbb
imull
stos
adc
cmp
test
sahf
push
inc
into
pop
push
jg
xor
mov
jns
mov
sub
int3
les
mov
lock
sahf
inc
popf
pop
addl
pop
or
out
sbb
mov
dec
imul
mov
mov
fstp
in
jmp
cmp
in
lods
mov
sar
xchg
stos
adc
push
hlt
mov
invd
xchg
lods
mov
pop
pop
lea
or
out
lret
add
jmp
ja
rolb
cs
dec
pop
jmp
lock
inc
call
jmp
push
jg
daa
xchg
dec
inc
lea
push
out
add
mov
add
lods
jnp
mov
cmpl
repz
push
pop
cmp
jne
mov
mov
jl
cmpsl
lods
mov
dec
sub
adc
xor
sarl
cmp
test
movsb
sahf
fisttps
add
cmpsl
mov
insl
mov
test
subb
rolb
jno
add
cli
jecxz
mov
add
cmp
mov
mov
sbb
aam
mov
inc
add
sbb
out
hlt
ficoms
inc
int
push
jmp
cmovp
dec
loopne
outsb
push
ss
test
mov
shl
int
pop
cmp
sbb
popf
add
mov
flds
jbe
mov
inc
push
xor
mov
sbb
dec
add
xchg
sbbb
andl
pop
fbstp
mov
push
xchg
cli
fsubr
push
mov
andl
int
cmp
cmp
mov
mov
pushf
or
aas
movb
inc
mov
adc
cmpl
fmuls
sub
sub
and
ja
adc
add
mov
daa
jmp
sub
cmpsb
leave
dec
pushl
in
js,pt
xlat
movsl
dec
add
add
gs
cmp
cmp
rclb
inc
lods
sar
scas
in
orl
pop
mov
inc
inc
sbb
dec
subl
cmp
and
bound
and
push
cmp
inc
aas
push
faddl
and
mov
pop
xchg
cmp
lock
testl
add
inc
push
fs
sub
addb
test
adc
add
mov
in
lods
jb
pop
lock
scas
pop
orb
mov
xchg
fnstcw
jmp
sub
mov
fisttpll
ds
in
xor
add
push
jo
lret
jmp
or
xchg
js
pop
sti
mov
or
lea
mov
mov
lods
adc
push
sub
mov
fdivrs
jne
ljmp
cmp
adc
stos
insb
sub
xor
jnp
push
fdiv
cmp
mov
inc
imul
cli
inc
cmpb
sti
and
fwait
jp
jb
or
mov
cmp
pop
pop
pop
adc
and
inc
test
sbb
in
ret
aad
leave
sbb
js
je
aaa
push
sbb
mov
mov
push
sub
and
test
jno
sahf
mov
incl
and
jns
inc
or
push
and
into
add
in
xor
lods
xor
mov
push
andl
aaa
movsb
test
cmp
adc
fdiv
mov
sbb
or
pop
pop
in
mov
or
mov
xchg
inc
mov
sub
orb
push
addr16
jg
push
push
pop
adc
or
mov
int3
xor
call
inc
push
and
mov
cs
inc
sbb
adc
scas
bound
or
add
add
fmuls
pop
inc
nop
push
mov
out
sub
sbb
mov
daa
or
mov
jl
fdivrs
inc
js
or
mov
aas
aam
out
cmp
mov
xor
adcl
lea
sub
cmp
test
sbb
sub
call
les
sbb
clc
mov
add
into
lds
dec
add
notl
dec
cmp
mov
sbb
push
gs
sbb
pop
cmp
lods
jg
fiadds
pop
mov
xchg
push
mov
mov
jge
rorb
add
add
dec
dec
test
jne
xchg
sub
or
leave
test
and
nop
cmp
push
lea
pop
lods
pop
dec
pop
pop
ss
lret
inc
and
jg
sbb
add
pop
rol
fwait
xchg
add
clc
je
xor
xor
lock
sub
inc
rorb
xor
out
push
mov
js
cs
cmp
inc
and
dec
aad
testb
and
mov
xchg
sub
pop
jl
retw
pop
inc
test
add
js
pop
sbb
mov
int
push
add
popa
dec
dec
nop
mov
scas
vrsqrtps
enter
inc
ds
sub
adc
and
daa
adc
out
cmp
mov
movb
pop
call
cmpsb
xchg
lock
sarb
movsb
push
dec
dec
int
cmpl
lret
push
dec
jp
cmpsb
jecxz
add
cmp
add
mov
movl
into
push
dec
call
pop
adc
xor
gs
cmp
mov
sbbb
push
cmp
and
or
jnp
jle
aaa
or
cmp
adc
ss
fildl
rclb
push
cmp
mov
sub
push
mov
popa
add
inc
mov
mov
inc
pop
push
fsubs
sub
rclb
lret
adc
in
cmp
into
imul
into
jmp
inc
xor
and
dec
shlb
jecxz
in
pop
mov
jae
mov
cmp
push
rcr
pop
out
mov
inc
dec
cmp
sahf
or
sbb
pop
add
js
nop
rcrl
cmp
add
in
push
js
push
adcb
xlat
and
push
lcall
or
cmp
push
fnstenv
lahf
mov
sbb
and
adc
dec
cmp
in
mov
push
add
repnz
das
xor
jo
leave
inc
subl
dec
into
jl
cli
inc
adc
or
or
adc
lock
ds
jmp
or
imul
or
cmp
popf
inc
push
out
mov
mov
and
push
fsubrl
sbb
or
rolb
into
inc
xchg
jp
cli
dec
jmp
and
push
movb
das
fs
loopne
mov
adc
or
in
fs
popa
push
ret
and
mov
outsl
addr16
push
dec
or
ror
dec
movsb
ret
cmp
mov
fs
and
xor
fwait
pop
or
mov
add
lds
inc
add
cmp
cmp
aas
lcall
push
popf
pushf
pop
sub
je
push
popf
cmpsl
lods
pop
mov
call
stos
mov
outsl
jmp
pop
idiv
add
push
push
mov
xchg
mov
adc
call
dec
lretw
fstpl
or
or
shll
cmp
push
push
or
shrb
adc
jns
loope
push
mov
xchg
test
and
mov
pop
dec
xchg
add
or
or
nop
jbe
mov
loope
not
xor
loope
xor
xchg
sbb
and
shr
dec
jb
nop
add
jmp
orb
mov
arpl
lock
test
adc
enter
test
add
mov
xlat
xchg
mov
test
je
sbb
sub
imul
pop
pop
pusha
mov
and
incb
leave
add
std
or
jmp
inc
and
mov
adc
dec
mov
aaa
jecxz
mov
cltd
pushf
jge
add
or
outsl
shrl
pop
mov
loopne
xor
sub
and
jge
mov
mov
loope
sbb
add
fstps
aas
pusha
mov
push
cltd
shl
pusha
loope
pop
sub
dec
and
jecxz
pop
fstp
rcrl
pusha
cmp
jae
push
addr16
adc
or
pop
test
adc
sti
mov
testl
fisttps
add
xor
push
sub
cmp
push
mov
orl
mov
sarb
stos
push
xchg
sub
pop
testl
dec
fstpt
xchg
pop
xorb
sbb
sahf
jbe
es
push
and
inc
add
adc
enter
flds
add
fstpl
push
or
push
subb
loopne
pushf
ficomps
inc
xchg
inc
push
and
or
adc
pop
cmp
mov
pop
lods
pop
sub
fsubp
leave
add
pop
adcb
sub
inc
test
xor
pop
out
mov
test
mov
inc
aam
lahf
xchg
xchg
loope
push
aaa
sbb
push
repnz
std
push
insb
shl
inc
jl
add
pop
jbe
lea
pop
sub
jmp
sub
addr16
daa
push
or
psllq
outsb
psubusw
rcl
ret
adc
div
adc
pop
testb
repz
jno
add
dec
pusha
xor
add
adc
aaa
jno
pop
ret
in
fstpl
mov
cli
or
or
add
repz
and
mov
inc
repz
add
es
enter
daa
icebp
repnz
push
test
ret
fs
into
enter
in
insl
insb
pop
rcrl
lock
dec
in
jbe
lock
shl
out
mov
inc
js
addr16
push
sahf
jmp
pop
movsb
add
pop
and
aam
or
inc
std
test
scas
sbb
and
push
test
dec
rcrb
out
in
cmp
scas
mov
mov
clc
push
add
pop
add
outsb
sbb
pop
test
sub
and
rorb
xor
add
push
pop
inc
or
fidivrl
add
and
xchg
cmp
es
hlt
sbb
lods
xor
je
and
jl
xorb
out
pop
shll
or
sbb
pop
add
sbb
hlt
adc
pop
adcl
push
outsl
adc
mov
loope
pop
dec
out
in
mov
data16
rorl
imul
lds
fwait
jno
mov
dec
inc
and
mov
add
or
mov
adc
rcrb
outsb
sbb
dec
imulb
jnp
cmp
inc
mov
cmpsb
in
and
imul
in
add
cmp
in
sti
and
or
loop
mov
sar
xor
les
cmp
pop
fwait
mov
loopne
popa
jecxz
mov
jae
mov
inc
pusha
jnp
adc
jns
add
jg
jae
fdivs
jo
pop
inc
mov
sbb
movsb
inc
add
pop
clc
pop
mov
sub
mov
add
in
cvtps2pd
cmpps
sahf
push
add
shl
jne
xchg
flds
and
sbb
clc
sti
adc
add
ljmp
adc
inc
push
pop
fadds
into
mov
cwtl
and
mov
jmp
pop
cwtl
out
mov
jbe
sub
ret
imul
imul
mov
nop
adc
sbb
fidivl
push
or
mov
sub
jle
out
mov
das
insb
and
adc
inc
sbb
jno
fmuls
xor
push
add
iret
jl
sbb
sub
shr
imul
mov
ljmp
mov
fsave
cmp
fs
mov
mov
inc
fstps
loopne
xchg
and
mov
test
xor
or
rcrb
adc
fldt
cmp
fcmovne
fwait
sahf
adc
and
sbb
and
sbb
mov
or
jle
call
mov
fldpi
xor
xchg
in
push
inc
and
je
sbb
sub
ldmxcsr
jo
mov
and
or
movsb
mov
and
and
cmpsb
push
shl
cmp
jbe
out
add
mov
mov
pop
add
jne
jbe
adcb
sbb
ret
rorb
xchg
sub
mov
push
mov
shlb
dec
sub
add
pusha
imul
or
sbb
xor
sub
rsqrtps
das
jbe
lret
mov
jnp
xor
aam
add
mov
sub
mov
adc
rolb
push
enter
jo
mov
pop
gs
inc
cli
sub
mov
stc
xor
fnsave
jbe
shll
xor
and
movsl
cmp
ja
test
jle
mov
or
loope
inc
fadd
jbe
lods
add
fsts
inc
add
jne
sub
adc
xchg
sbb
pop
add
and
mov
dec
cmpw
inc
inc
adc
add
repz
das
jmp
sbb
push
sti
mov
insb
sbb
or
lret
gs
fsubrp
subb
test
push
or
dec
sub
dec
cmpsb
add
sub
push
adc
add
rolb
adc
enter
test
jne
push
add
aad
std
mov
stos
stos
repnz
fisubrs
add
sarb
cwtl
mov
dec
jle
push
mov
cltd
and
push
push
loopne
add
enter
jns
dec
ja
fisttpl
xchg
loopne
lea
pop
lock
inc
pop
test
test
mov
testb
inc
aam
loop
rolb
adcl
pusha
cmpb
call
pop
and
mov
out
mov
inc
fisttpl
ds
into
divb
dec
pushw
jp
xor
repnz
fs
shlb
cmp
sbb
sub
push
aam
cmp
dec
bnd
incb
jae
pop
dec
sbb
dec
mov
adc
xchg
movsb
adc
movsb
mov
addl
or
outsl
add
or
push
inc
ljmp
sti
cmp
dec
dec
shlb
stos
inc
in
xor
btr
ror
pop
cmpsb
push
aam
xor
mov
pop
rorl
mov
incl
test
loopne
cmc
iret
and
push
cld
not
mov
popf
sbb
test
and
push
ds
push
or
and
lock
test
mov
jl
or
addb
add
aaa
sub
sarb
je
mov
insb
xor
jmp
mov
sub
pop
in
or
int3
or
pop
hlt
test
xchg
sub
adc
adc
lcall
lea
mov
cli
setbe
inc
jge
cmp
pop
inc
icebp
sub
pop
xor
pop
sbb
push
mov
mov
fiadds
loopne
and
mov
jecxz
jecxz
dec
ss
mov
xchg
cmp
shrb
mov
or
inc
mov
sbb
add
rcr
jge
pop
andl
or
mov
subb
loop
lea
fimuls
out
and
sub
xor
mov
add
and
jge
add
pusha
and
pop
scas
shl
xor
dec
nop
xchg
add
adc
and
mov
and
dec
pop
push
push
in
loop
pop
jp
fdivr
and
rcrb
pop
pop
add
or
repz
xchg
pop
enter
inc
push
leave
enter
ja
mov
mov
sub
fstpt
sbb
push
sbbl
repz
and
push
mov
push
call
xor
push
adc
lcall
or
pop
and
jne
jge
xor
nop
cli
xlat
push
cli
xor
and
lods
mov
es
cmpsb
or
negb
das
push
inc
jmp
mov
sub
or
xchg
add
dec
fcmove
adcb
jmp
ja
push
dec
jmp
fs
mov
mov
jmp
lea
into
add
call
add
dec
je
fisttpll
add
scas
or
pop
mov
imul
mov
jmp
cmpsl
mov
sub
fstl
push
or
or
sti
out
aaa
je
cmp
jle
jle
cmp
push
xor
icebp
gs
orl
adc
fcoml
xchg
push
cmp
xchg
pushf
push
cmp
testb
rolb
inc
pop
leave
mov
jae
mov
ret
sbb
jmp
adc
mov
jge
pop
cmp
adc
cmc
cmp
nop
add
jne
cs
mov
clc
dec
jae
imul
sbb
popa
inc
cmp
jmp
and
scas
inc
add
outsb
mov
arpl
dec
fsubp
cs
or
sub
or
aas
call
dec
cwtl
test
rcrb
and
adc
sub
cmp
mov
add
jmp
sub
xchg
scas
test
ds
mov
jbe
jge
mov
mov
mov
pop
cmp
adc
cmpl
mov
jmp
inc
inc
cmove
repnz
cmp
add
les
jle
adcl
fucomp
mov
adc
sub
stc
push
adc
fisttpll
push
jg
std
jecxz
add
pushf
jmp
push
dec
push
or
jp
sub
into
dec
mov
pusha
pop
stos
hlt
in
mov
add
scas
xor
jg
movsb
testb
jge
neg
add
xor
aam
mov
sub
cmp
xlat
test
cmp
lods
scas
mov
sbb
inc
push
push
ret
jge
jle
push
adc
movsl
jbe
sub
xor
adc
xor
lods
inc
incb
pop
in
dec
test
xor
push
inc
mov
fwait
cmp
std
xchg
adc
test
mov
rolb
cmpb
ret
or
mov
mov
fnsave
loop
icebp
mov
ret
and
inc
imul
adc
nop
fs
xor
push
addb
mov
jle
sbb
ja
ja
mov
push
jae
sbb
pop
movb
sbb
int3
jne
js
aam
enter
jne
test
dec
jbe
into
jne
inc
or
cmp
add
add
cmp
jne
adc
jbe
mov
test
rcrl
or
mov
cwtl
ss
add
test
mov
lock
sbb
cld
push
mov
dec
lock
or
rolb
mov
subl
xor
mov
sub
sub
dec
sbb
stc
jg
add
add
inc
sbb
xchg
test
mov
sub
aam
mov
add
or
shr
adc
push
in
mov
jae
bound
or
adc
inc
mov
mov
add
les
lods
mov
in
sti
jg
movsb
dec
fcom
insl
fadd
loopne
shr
or
mov
xchg
inc
push
dec
loope
jne
insb
popa
es
mov
cs
push
jl
mov
mov
and
pushf
mov
mov
shll
adc
sbb
or
popa
iret
sar
pop
bound
inc
jmp
call
in
aad
fidivl
shlb
cmp
ret
xor
push
faddl
sahf
nop
dec
push
out
orb
popf
fiaddl
jmp
test
or
sub
add
lret
into
jmp
fwait
xchg
scas
out
ljmp
dec
and
les
xor
or
int3
test
lock
mov
es
sub
add
imulb
mov
movups
xor
push
mov
bound
inc
shl
push
lock
mov
mov
add
pop
push
cmp
repz
xchg
in
pop
test
or
add
lret
and
or
jmp
inc
mov
imulb
push
test
pop
jne
cmp
add
inc
inc
scas
inc
mov
mov
es
ss
add
rorl
push
mov
in
mov
mov
xchg
xchg
adc
inc
pop
loopne
addr16
or
ss
cmp
sar
fidivl
inc
xor
mov
dec
cmpb
je
mov
aas
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
out
mov
fldz
call
sub
gs
pop
jmp
or
pop
jae
sbb
clc
adc
add
rorb
rorl
pop
rorb
jmp
xor
adc
popf
ret
xor
repz
sub
jge
mov
adc
push
add
adc
xchg
pop
jno
sti
pop
or
mov
shrb
sbbb
xor
hlt
test
sub
xchg
mov
test
mov
sar
and
jbe
or
add
sub
adc
mov
adc
in
je
setg
sub
in
clc
add
mov
mov
lret
push
push
aas
sub
movb
xor
cltd
xor
inc
jle
cmp
mov
or
push
hlt
aaa
cmp
add
xor
mov
es
cmp
add
mov
add
add
lcall
pop
sbb
test
fiadds
pop
adc
push
xchg
adc
shlb
xor
jge
shrl
lea
mov
jb
test
out
cs
inc
and
les
sub
rol
or
idiv
or
scas
xor
push
or
add
testb
mov
cld
add
dec
outsl
je
lods
loope
dec
scas
adc
inc
lcall
into
xor
fs
add
push
inc
mov
adc
insb
push
adc
or
xchg
out
jecxz
add
pop
ret
jbe
mov
clc
dec
adc
sub
mov
aam
sub
adc
lahf
xor
sub
lods
das
inc
xor
lcall
xchg
push
js
addb
movsb
xchg
mov
adc
xor
xorl
add
cmp
and
xchg
aaa
pusha
lods
jl
incl
sbb
movsl
push
rcll
stos
call
testl
pop
xchg
fstps
call
xor
cmp
sub
insb
lock
push
push
mov
and
lret
add
adc
enter
icebp
push
and
test
test
notl
addb
shrb
dec
sar
mov
pop
jecxz
or
dec
jecxz
pop
add
enter
lcall
addb
pop
push
cmp
push
mov
add
and
add
cld
scas
inc
fucom
mov
dec
je
xor
leave
and
sub
ljmp
xchg
gs
je
ret
sbb
mov
mov
bound
fistpl
sub
loopne
lock
mov
daa
xor
or
jne
pop
cmp
mov
add
ret
jmp
out
scas
test
and
and
pusha
loop
sub
pusha
dec
xor
or
fsubrs
and
ja
sub
mov
pusha
push
push
sub
push
dec
push
lcall
adc
push
movswl
les
ret
arpl
subb
mov
ret
adc
cmpl
insl
cld
add
dec
shrd
push
pushf
int3
and
jle
cmp
push
pop
ss
jl
cmpsl
clc
outsb
mov
incl
jg
nop
stc
inc
add
dec
jmp
xchg
leave
test
cltd
clc
sub
xor
push
outsb
xchg
and
incb
push
or
xor
pop
cmp
insb
jno
sbb
lock
xor
imul
js
dec
and
pusha
std
lds
push
pop
sbb
js
jg
jb
lock
mov
push
sub
or
fidivrl
rorl
clc
lock
pop
inc
shll
xor
js
add
test
push
jbe
add
and
sarb
add
pop
jnp
fs
dec
inc
dec
pop
or
leave
jae
jb
or
dec
sub
daa
pop
adcl
add
stc
mov
adc
add
es
mov
scas
or
fs
lds
je
int
adc
or
add
loop
call
or
or
mov
rorb
or
inc
xchg
add
andb
jmp
lock
inc
sub
pop
dec
adc
test
adc
shll
mov
pop
or
push
push
mov
pop
imul
stos
pusha
daa
pushf
add
cltd
out
into
les
push
xchg
pop
sbb
rclb
cmp
mov
cmp
fwait
mov
or
je
xor
xchg
xchg
add
repz
icebp
loop
dec
cmp
outsb
add
daa
inc
lret
jbe
adc
pop
imul
cmp
shll
adc
mov
add
and
adc
push
insl
push
jmp
mov
je
cmp
adc
cld
cld
jl
sub
sahf
mov
mov
pop
push
shr
loop
xorl
roll
jge
xor
gs
or
pop
data16
outsb
loopne
lock
add
jae
inc
popa
je
inc
je
dec
leave
cmpxchg
dec
jmp
xor
sub
pop
or
sub
pop
add
xchg
push
or
cmp
fisttpl
movb
add
adc
incb
fdivl
fmull
insl
push
pop
clc
fstps
or
mov
das
sbb
inc
jmp
xchg
shrl
orb
ret
les
inc
bound
xchg
movb
adc
adc
sahf
pop
arpl
cmp
lcall
or
inc
add
inc
dec
cmp
cmp
shr
jb
jmp
jbe
mov
cmpb
jne
jp
pop
and
xchg
push
aam
scas
xchg
shll
sub
sub
add
hlt
int3
adc
push
ficoml
sub
add
push
rcl
sub
lods
mov
cld
ja
push
sub
fs
and
ljmp
add
enter
pop
lsl
cltd
pop
cli
add
mov
add
add
lret
fisttpl
or
cmp
add
add
das
int
jl
push
pop
inc
mov
addl
mov
mov
sbbl
rcr
mov
cmpl
das
add
push
or
push
ds
and
cmp
cmpsb
or
and
daa
popa
and
inc
add
imul
xchg
push
pusha
jno
xchg
add
mov
push
xor
mov
add
subb
mov
sub
xor
adc
pusha
jnp
jno
pop
mov
out
in
fcompl
inc
cmp
mov
jecxz
xchg
lock
add
or
jl
cmp
mov
icebp
jnp
pop
les
les
xor
cmp
mov
decl
or
adc
hlt
jmp
or
popf
cmpsb
out
jmp
mulb
je
push
incl
mov
pop
mov
test
iret
sbb
and
jne
sub
pop
lea
movsl
xor
in
add
mov
cwtl
add
testl
jmp
lods
mov
adc
push
sbb
xor
lcall
ret
pop
in
sub
insl
mov
fisubrs
mov
ret
cmp
push
ror
cmc
pushf
dec
dec
add
pop
xchg
jns
call
adc
mov
lods
jecxz
divl
sbb
in
dec
mov
fldenv
addr16
jns
jne
int
mov
jle
push
sahf
xchg
andb
fs
add
cmpsb
and
mov
aam
push
mov
sub
mov
lret
movl
mov
xchg
pop
in
xlat
add
pop
adc
orb
jge
imul
cltd
cmp
sbb
movb
jb
jb
wrmsr
sbb
sti
adc
call
sub
filds
fiadds
cmp
and
xor
adc
sbb
inc
jmp
or
and
add
dec
cmp
loop
or
stc
inc
inc
test
inc
inc
in
shrl
jle
push
push
mov
push
testl
outsb
lcall
std
mov
jmp
mov
mov
or
push
push
lock
mov
push
fstpl
loope
pop
jne
mov
das
adc
adc
inc
jge
mov
repz
or
int3
mov
or
xchg
hlt
gs
adc
mov
fcoms
lea
push
es
lock
mov
lods
jl
pop
pusha
lret
xchg
mov
dec
jl
int
jl
das
add
pop
xchg
cmp
or
push
mov
push
or
pcmpgtd
sahf
dec
add
ljmp
sub
mov
fcmovnb
add
xor
fidivs
inc
sub
fcoml
sub
cwtl
dec
sub
push
xlat
sbb
popa
mov
loope
pop
inc
repnz
ret
lea
add
xor
push
lcall
ret
aaa
jno
nop
addl
insb
mov
lret
sarl
dec
jo
sbb
adc
aam
int3
cmp
jo
or
jmp
pushf
insb
ret
decl
sbb
les
insl
mov
mov
ret
and
xchg
cmp
jge
adc
adc
and
aaa
or
enter
imulb
push
adc
rolb
jg
mov
and
lea
dec
or
fdivp
shr
add
or
cmpsl
add
test
fxch
shr
or
pusha
out
mov
add
or
bound
scas
push
bound
cmpsl
mov
sti
in
stos
mov
cmp
sbb
fildl
and
add
int3
cld
push
push
idivl
shlb
fiaddl
test
ds
ja
inc
add
lea
mov
shr
push
mov
mov
adc
sub
push
mov
xor
data16
jae
adc
add
jp
dec
lret
adc
iret
adc
out
or
sar
inc
jbe
xchg
or
mov
pusha
addr16
fsubs
in
jmp
imul
adc
lock
mov
shl
andl
adc
aad
leave
sbb
or
dec
pusha
add
lcall
mov
shrb
icebp
test
pop
cmp
xchg
lret
je
push
mov
pushw
or
adcl
sub
lods
movsl
and
xchg
mov
add
hlt
loop
insl
repz
jne
lock
add
aam
sub
cmp
orl
sub
mov
sbb
jmp
pusha
push
ljmp
into
adc
stos
nop
inc
out
fucomi
fldl
adc
cmc
add
push
jmp
cltd
shrb
fst
xchg
outsb
dec
out
mov
jle
stos
enter
inc
fdivs
flds
jae
ds
gs
add
xor
lret
mov
pop
pop
out
leave
inc
xor
ljmp
dec
dec
cmp
lock
jl
cmpb
jl
xor
jo
movsl
xchg
cmpb
idiv
adc
xor
inc
xchg
adc
in
push
mov
adc
xorl
es
add
push
push
mov
jo
dec
cmp
inc
stos
xchg
mov
adc
fnstenv
push
push
dec
sbb
or
cmp
sub
hlt
mov
jmp
in
adc
jns
shrb
call
or
scas
ss
and
enter
test
dec
out
or
test
jne
hlt
lret
cmc
subb
add
shrl
repnz
add
je
shlb
sub
or
xor
xor
and
pop
lahf
adc
jg
aam
sbb
pop
jp
pop
icebp
insl
dec
jmp
movsl
xor
pop
outsb
rorb
pop
mov
dec
getsec
sub
aam
xchg
xchg
int3
sub
out
xor
ss
movsb
inc
pop
mov
jmp
adc
fdiv
fiaddl
fadds
adc
ss
xor
sbb
xchg
nop
popa
mov
sbb
gs
fcoms
mov
addr16
inc
and
fsts
shl
sbb
adc
inc
out
adc
pop
int
xor
dec
jns
fwait
adc
ret
push
dec
jne
pop
pop
pop
fildl
sbb
jae
or
jae
mov
rcl
ljmp
shr
mov
adc
mov
dec
idiv
and
mov
je
sub
je
mov
or
cli
daa
sbb
hlt
add
sbb
inc
shrb
mov
and
push
dec
sbbl
push
jne
push
loop
mov
add
push
loopne
jnp
add
into
jbe
jns
aas
dec
pop
pop
or
fcoms
ljmp
test
ret
rcrb
or
adc
es
dec
and
add
push
orl
push
sbb
aaa
adc
xor
sbb
mov
pop
sub
push
ror
cld
shll
dec
clc
cs
sahf
xor
xchg
cld
and
xchg
dec
add
inc
outsb
pushl
dec
ss
lock
dec
repz
adc
adc
in
sbb
sub
jne
and
testb
mov
xor
leave
je
das
or
inc
mov
mov
dec
es
push
sbb
in
pop
je
and
mov
cmp
jb
cmp
ja
add
cmp
adc
cmp
jne
inc
xchg
shll
leave
adc
mov
add
idivl
pop
or
sbb
add
sub
rcr
mov
call
ret
outsl
push
cmp
inc
add
cwtl
fstpl
ss
push
pop
mov
lea
add
sbb
mov
ret
jmp
mul
imul
shlb
push
push
xor
jo
loop
mov
sbb
gs
test
lea
test
xor
xchg
rorl
out
fwait
dec
lods
movsl
enter
push
sub
jne
or
adc
shll
cltd
cmc
sbb
xor
mov
fdivl
add
mov
pop
pop
and
and
sbb
mov
add
jne
mov
imul
femms
insb
push
push
pop
inc
rclb
adc
xchg
or
sub
lods
xor
sub
inc
lods
cmp
or
lea
sbb
inc
loopne
test
sbb
dec
push
leave
aam
inc
and
add
mov
lea
push
jg
add
inc
mov
int3
repz
roll
rcl
rcl
aad
repz
xlat
fcomp
andb
fstpt
nop
std
inc
sar
cmp
inc
add
inc
loop
and
push
lds
enter
sbb
mov
mov
adc
mov
add
push
adc
popa
mov
and
or
sub
pop
inc
xor
xorb
test
xor
push
icebp
adc
mov
push
xor
push
mov
push
fstpt
or
add
fcoms
jno
adc
add
fldcw
adc
jmp
sti
jg
stos
sbb
dec
lea
sar
inc
xor
sbb
movswl
mov
mov
aam
neg
loope
imul
dec
mov
mov
pushf
out
sub
inc
call
pop
add
adc
mov
add
sti
add
es
ss
daa
imul
sbb
aad
jb
test
inc
mov
dec
gs
cwtl
add
hlt
xchg
mov
inc
xchg
add
imul
and
lea
pop
sbb
in
lods
fcmovnbe
jae
xchg
decb
xchg
sub
add
and
faddp
push
test
enter
pop
loope
loopne
fwait
jmp
loopne
inc
or
cmp
add
jo
mov
mov
jne
fiadds
or
lds
test
rolb
push
mov
insb
in
xchg
sub
or
sti
xchg
dec
xchg
mov
and
push
insb
enter
out
shlb
and
cmp
push
shll
inc
lds
addl
lcall
mov
mov
inc
inc
test
rol
add
lret
jle
jle
add
sub
mov
add
hlt
or
aaa
in
or
and
in
rorb
sub
push
push
lret
pushf
out
rol
inc
xchg
pop
mov
inc
lods
sub
inc
shrl
icebp
mov
hlt
mov
loop
jmp
or
mov
lods
test
push
lock
repnz
cli
in
sub
cli
inc
cli
div
or
xlat
fadd
xor
mov
mov
cmpl
outsb
sub
mov
sub
loope
xchg
mov
xchg
cmc
adc
leave
mov
xor
es
pmaxub
xchg
mov
cmp
idivb
int
roll
lock
in
loopne
ja
mov
and
repnz
pushw
jmp
or
clc
out
jge
and
cmpsl
xchg
mulb
inc
out
inc
inc
push
pop
add
mov
sbb
xor
push
or
in
inc
shlb
fdivrs
aam
inc
inc
mov
push
inc
test
dec
ss
mov
sbb
inc
xor
mov
adc
or
or
call
test
mov
sub
mov
adc
int
mov
push
aam
adc
rorl
rolb
cltd
add
in
idiv
sbb
mov
sbb
negb
cmp
and
negb
notb
fs
lock
or
and
or
jge
pop
and
inc
lock
inc
inc
inc
in
movsb
adc
adc
jne
jne
adcl
inc
rol
sbb
into
lret
pop
mov
adc
fstl
pop
sub
adc
dec
out
inc
add
inc
roll
add
add
push
nop
cmp
push
movsb
fisubl
call
and
inc
fisttps
out
adc
pop
add
sub
push
pop
shr
and
hlt
cmp
mov
inc
push
rorl
test
jne
sbb
adc
xor
fiadds
inc
imul
sarl
imul
imul
andl
or
lea
push
and
mov
ja
mov
push
adc
sti
pushf
pop
rcrb
int
aas
and
xchg
mov
xchg
or
or
mov
add
sub
add
mov
enter
js
cs
int3
sbb
push
ljmp
fisttpl
js
add
enter
mov
test
ja
cmp
push
shlb
add
out
add
add
add
mov
add
in
into
or
mov
inc
nop
lock
sub
jge
decb
dec
jle
lahf
decb
jge
sub
cmpb
or
add
dec
cmp
jae
jb
add
cs
mov
dec
add
add
fadds
xor
ret
mov
jp
jne
dec
mov
jb
int
or
int
pushf
adc
cld
sub
dec
and
add
push
add
inc
jbe
addr16
push
xchg
add
pop
enter
xchg
cmpsb
rclb
adc
and
ret
enter
lret
mov
xchg
lret
xchg
and
je
pop
test
cmp
test
scas
or
imul
iret
shll
nop
push
or
add
or
mov
add
dec
or
add
add
push
add
xchg
push
ret
sub
adc
or
adc
push
add
test
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
clc
scas
add
pop
and
pop
pop
fdivs
jnp
mov
ret
lock
prefetchw
push
dec
fisttpll
mov
loope
sub
test
push
pop
jae
or
or
add
add
roll
push
lahf
add
mov
ss
xlat
pop
pop
sbb
cli
xchg
adc
xlat
dec
pop
outsl
out
sbb
sbb
adc
xor
mov
pop
push
xor
pop
sbb
cmp
mov
or
in
popa
sub
push
push
sbb
nop
push
pusha
add
cld
mov
inc
sar
xorb
mov
or
inc
stos
or
adc
jg
sub
into
xchg
test
sbb
icebp
sub
aam
out
mov
stmxcsr
sub
pop
test
cltd
ss
or
add
or
mov
add
add
jbe
jle
pusha
pop
out
cmp
sub
xor
inc
jg
dec
dec
sahf
lret
into
into
into
mov
pop
and
pop
sub
js
pop
or
cwtl
movsb
xchg
xor
pop
mov
mov
and
or
pop
dec
sbb
nop
je
or
pop
lcall
add
leave
lahf
pop
test
mov
or
mov
add
test
jl
mov
and
je
and
xor
sbb
lcall
sbb
mov
inc
mov
lret
xor
push
xor
rcl
sbb
out
push
adc
xchg
loopne
adc
mov
dec
xchg
add
xchg
xor
loopne
sub
mov
cmp
inc
adc
push
mov
mov
and
cmpb
dec
mov
insl
or
adc
pop
movsb
ret
fisubs
mov
sbb
xlat
jle
and
daa
or
add
and
push
call
loop
sub
sub
jb
ljmp
es
stc
inc
icebp
inc
and
popa
mov
roll
rcl
std
dec
js
dec
sbb
xor
adc
push
adc
scas
les
insl
add
inc
dec
shlb
push
lock
mov
mov
imul
testb
loopne
adc
mov
ds
je
out
fs
or
xchg
cmp
jbe
inc
sub
call
jle
sbb
mov
out
xor
mov
jo
cmp
inc
jns
jmp
lea
movsl
and
or
or
push
movl
insl
je
bound
repz
dec
cmp
sbb
sbb
loopne
xchg
loopne
and
lods
test
imul
inc
andb
jmp
js
stos
fldl
mov
cmp
js
jle
sbb
scas
pushl
pop
xchg
inc
repnz
je
test
push
sub
in
xor
mov
aam
imul
cs
cmp
rcr
push
loopne
lock
lea
xlat
imul
adcb
sbb
sahf
push
or
adc
xor
shlb
rclb
fcoml
adc
dec
or
fmul
xor
in
lret
xchg
inc
sbb
push
or
add
sub
jge
lea
jae
fwait
dec
sbb
lods
pusha
push
pop
push
imul
scas
or
xor
dec
and
imul
bound
push
lods
push
push
test
test
dec
inc
sbb
xor
sub
inc
je
mov
sub
add
add
sbbb
and
or
xor
loope
inc
push
mov
sbb
sarb
add
sar
pop
add
lock
adc
call
mov
push
jne
push
inc
lcall
ret
lods
movsb
sbb
push
xchg
xor
mov
and
cmp
pop
fisubrl
sbb
pop
adc
jecxz
dec
fmull
add
outsb
mov
cwtl
and
push
adc
outsb
or
std
xchg
into
add
or
inc
dec
lea
in
xor
pop
add
rcll
andl
or
mov
imull
mov
and
sbb
and
dec
rcll
or
add
or
test
jae
test
sbb
xor
or
jmp
cwtl
ret
lock
mov
xor
test
add
cs
movl
sbb
stc
adc
loopne
js
cs
sbb
lock
dec
mov
jae
jae
fsubs
pop
dec
adc
cld
push
stos
loopne
jmp
dec
loop
aaa
inc
xchg
out
fisttps
int
push
sub
inc
mov
push
js
pop
adc
or
mov
ret
shll
inc
xchg
outsb
stos
js
sbb
scas
mov
clc
push
ret
fcompl
jne
xor
lea
add
mov
je
push
add
pop
xor
rcrl
ljmp
lods
add
push
adc
ds
adc
inc
hlt
xor
bound
subl
jnp
adc
add
adc
test
outsl
xor
testb
push
push
mov
mov
pop
cs
add
jl
dec
cmp
xor
mov
push
sub
pop
push
repnz
addr16
inc
add
xorb
push
daa
das
jg
or
test
adc
xor
adc
cmp
test
sub
dec
andl
loopne
push
push
mov
xor
or
inc
fcoml
sub
test
icebp
out
sbb
icebp
pop
lock
mov
jo
xchg
insl
and
dec
rorb
sbb
mov
iret
sub
mov
cvttsd2si
push
ret
aaa
jle
sub
push
inc
fs
pop
aaa
pop
pop
je
out
fld
fldcw
sub
or
adc
sbb
fsubrp
test
jns
fstps
testb
aam
shlb
add
sub
in
lcall
adc
ret
jbe
adc
pop
xorb
jo
pop
test
cld
mov
and
add
arpl
es
push
popa
xor
push
ficoml
xor
lods
and
pop
adc
adc
fsts
shl
push
les
xchg
movsl
cmp
mov
cmpsb
ret
jo
pop
movsb
cld
adc
xor
dec
stc
daa
dec
imul
fmuls
or
push
inc
inc
es
fnstenv
jbe
dec
jbe
outsb
jbe
adc
adc
cmp
and
dec
aas
and
les
add
xor
sbb
fmull
inc
out
push
xor
xchg
xor
xlat
adc
test
mov
mov
push
mov
stos
orl
mov
and
mov
shlb
addb
push
xor
cmp
enter
mov
fmuls
mov
mov
arpl
imul
dec
or
ss
jb
imul
sbb
cmp
and
scas
aas
lods
test
testb
add
sbb
adc
fsubs
xor
jge
push
sbb
es
xor
cmove
xchg
shlb
sbb
sub
addr16
and
cmp
icebp
bnd
dec
add
loope
pop
mov
ja
cmp
inc
or
sub
mov
xchg
jle
inc
or
mov
jp
cmp
lret
mov
inc
mov
sbb
ja
pop
outsl
stos
xorb
stc
sbb
mov
push
fistpl
cmp
mov
jo
inc
mov
cmp
or
mov
test
test
out
xchg
sti
jg
adc
pop
mov
push
jbe
xchg
or
and
test
mov
jmp
subl
xor
sarl
shl
cmpsl
add
fadds
mov
call
movsl
add
pop
xchg
lock
inc
cmp
enter
sub
lahf
xchg
xchg
cmp
fs
in
inc
mov
call
sbb
sbb
mov
inc
shrb
and
fldl
inc
repnz
hlt
rcrb
rcl
ss
sbb
add
add
iret
inc
and
ret
scas
inc
daa
fistps
pop
push
jg
rol
push
clc
int3
mov
leave
inc
inc
movl
lods
pop
and
rolb
int3
orl
cli
or
pop
or
sarb
out
adc
and
lods
sub
and
lods
mov
jge
add
or
test
or
imul
mov
cmpb
dec
dec
inc
loopne
clc
push
sub
mov
nop
cltd
cmp
xor
inc
and
jle
sbb
loope
mov
xlat
mov
jmp
jg
xor
lods
aas
jg
jae
add
insl
stos
aad
rolb
adc
gs
mov
jo
insl
shl
dec
or
sbb
mov
jbe
loopne
mov
fists
pushl
leave
xchg
mov
push
sub
cmp
setg
out
jmp
jae,pn
or
sahf
push
add
pop
mov
in
ret
push
sbb
in
cmp
or
cmp
push
imul
pop
inc
sbb
xor
add
arpl
in
fs
or
daa
lods
push
sub
xchg
arpl
call
and
cmpsb
lods
pop
insb
sub
imul
mov
adc
lret
or
add
xchg
push
jl
or
sbbb
mov
or
add
add
add
or
push
push
aas
add
testb
inc
clc
dec
insb
pushf
sbb
shl
sub
add
bound
jno
test
adc
test
jno
and
test
addr16
jg
jmp
lods
adcb
fs
pop
jl
sbb
mov
leave
xchg
aad
lods
push
or
jecxz
add
call
imul
inc
cmp
sbb
inc
xor
add
and
push
ret
lods
mov
xor
jb
data16
sbb
icebp
aaa
loope
fdivs
sbb
jmp
inc
ja
sub
test
mov
add
inc
enter
imul
cmp
fmull
pop
cmp
ss
or
inc
adc
or
sbb
push
push
sbb
sarb
dec
shlb
popl
mov
fnstcw
ja
mov
addl
adc
data16
cmp
mov
cmpsl
and
cwtl
or
cmp
pop
imul
dec
loope
adc
pop
inc
outsb
outsb
cltd
inc
cmpl
inc
push
pop
cmp
movsl
and
ja
popa
mov
ret
dec
stos
push
inc
cmpsb
movsb
mov
repz
cmp
pop
inc
jb
testl
inc
data16
add
or
mov
or
test
hlt
arpl
or
or
xlat
mov
mov
inc
mov
add
dec
dec
repnz
and
flds
inc
dec
or
cmp
repz
push
into
mov
fiaddl
je
addr16
scas
pop
or
xchg
les
fstpt
pop
push
hlt
stos
fadds
jp
jl
push
imul
or
je
xchg
in
or
je
mov
sbb
roll
sub
cmp
sbb
testb
inc
cmpsb
cmpl
xor
sahf
push
inc
mov
ret
cmp
mov
inc
sbb
cld
jle
loop
ja
add
xchg
adc
popf
cmp
leave
cmp
mov
pushf
or
push
add
ja
les
rol
push
or
sbb
or
and
xorl
lea
jne
testb
pushl
aam
call
enter
add
cli
inc
mov
jecxz
add
or
cmp
or
add
add
jns
inc
mov
test
stc
jne
pop
mov
xchg
filds
aas
sbb
testb
sub
inc
mov
add
xchg
lcall
out
sbb
push
jb
hlt
ret
xor
mov
mov
mov
jae
push
cmp
jl
mov
inc
xor
and
adc
bound
scas
je
sti
lcall
testb
jne
clc
push
mov
ds
mov
into
inc
pop
jmp
mov
jb
xchg
pop
mov
movsl
sub
mov
add
mov
push
jle
in
in
dec
or
adc
push
add
push
fildl
cmp
int
xchg
pop
scas
mov
sbb
pop
xchg
jp
add
sahf
adc
hlt
insb
or
or
xchg
adc
adc
lods
jo
adc
bound
pop
shll
xor
xchg
xlat
jns
jp
mov
jne
jmp
frstpm(287
push
push
insb
out
or
push
arpl
fmulp
mov
adc
xlat
pop
mov
sbb
dec
into
pop
jle
ret
adc
or
fistl
xchg
add
sub
inc
sbb
sbb
dec
jl
scas
jg
xchg
pop
hlt
fsubrs
aam
inc
sbb
pop
mov
push
jle
icebp
jno
add
xchg
dec
mov
clc
dec
sub
icebp
sbb
cmp
adcl
dec
std
cmp
jl
jns
push
ss
ret
inc
add
insb
aam
cmpsl
mov
adc
adc
in
inc
pop
push
add
mov
insl
jmp
popa
cmp
dec
jg
adc
cmp
mov
call
lret
pop
jecxz
and
insl
mov
adc
or
loopne
lock
pop
inc
or
push
dec
ucomiss
xor
pop
cld
pop
std
cmovns
fldl
invd
lds
fwait
push
pop
test
js
pop
or
movsb
sbb
sub
and
notl
or
shr
repnz
ss
call
or
lock
or
aam
xchg
out
jbe
push
push
push
adc
clc
push
mov
ljmp
cmp
test
mov
mov
and
mov
loopne
je
adc
xlat
je
cmp
adc
test
and
cmp
jb
testb
xchg
testb
nop
jmp
add
int3
hlt
or
jp
in
mov
inc
jmp
inc
movb
and
sub
cmp
data16
cmp
jbe
mov
push
or
xor
cwtl
lret
add
in
push
adc
shrb
lret
push
call
and
aas
xchg
and
mov
cmp
xor
or
sub
push
pop
xor
pop
pop
xor
sbb
pop
mov
pop
es
jmp
movsl
pop
pop
and
push
inc
pop
pop
sub
mov
pusha
cli
ret
movsb
add
hlt
dec
in
stos
cmp
sbb
mov
les
push
addr16
add
sbb
xor
repz
adc
dec
aaa
xchg
pop
add
shlb
push
push
or
rorb
xor
mov
int3
pop
fs
push
test
and
push
dec
enter
inc
or
cmp
call
dec
imul
adc
int
adc
subl
in
subb
jle
shrb
out
ret
in
cmp
pop
dec
sub
fcoms
imul
inc
je
cld
sbb
mov
or
jb
mov
int3
imul
pushf
or
and
adc
jl
sbb
jne
cmp
es
inc
inc
adc
icebp
lret
repnz
push
mov
rclb
and
loope
rcrl
cwtl
pop
xor
cmpsl
dec
insl
orl
push
mov
arpl
cmp
jl
lea
push
addr16
ss
xchg
mov
and
pop
or
push
adc
mov
leave
inc
xchg
or
and
lret
cmp
jno
adc
lret
nop
fs
xchg
xchg
sarb
dec
les
cmp
fidivl
xchg
in
fidivl
xchg
call
jb
fwait
in
movups
mov
inc
outsl
movsl
fadds
dec
inc
ud2
sbb
jo
xchg
cmpsb
in
outsl
fdivrl
lock
insl
sbb
in
in
fdivrl
mov
lock
pop
hlt
add
orb
sbb
cmp
inc
loopne
andb
mov
xchg
fbstp
push
or
loopne
mov
popl
add
sub
es
sbb
jp
addl
sahf
cltd
mov
cmpsb
push
sbb
inc
xor
rcll
aaa
or
jb
jg
adc
dec
js
js
and
out
stos
jl
fcompl
push
shll
rcll
in
call
rorb
jae
shll
inc
out
shrb
xchg
cmp
int3
add
xchg
mov
add
push
xchg
or
adc
cltd
fs
dec
and
fs
dec
xor
xchg
dec
es
cmp
inc
inc
es
fs
fs
insb
insb
add
sbb
mov
mov
inc
add
mov
fsubl
rol
nop
outsl
pop
push
sbb
int3
add
nop
add
aam
data16
loopne
int
hlt
ljmp
cld
and
clc
mov
lock
xor
iret
lock
shl
mov
jg
dec
add
scas
add
add
inc
faddl
mov
jne
xor
movsl
int3
aam
adcb
cmc
mov
gs
int3
jecxz
leave
arpl
xor
inc
jbe
popf
mov
mov
pop
lods
fldt
jbe
inc
pushf
pop
pop
andb
push
rcrb
loopne
insl
in
mov
inc
sbb
adc
mov
adc
xchg
add
ja
push
lds
jbe
xor
cmpsl
sbb
and
fbstp
and
and
pop
mov
test
mov
das
pop
inc
test
mov
xchg
in
in
in
inc
dec
push
orb
ss
adc
hlt
add
dec
mov
fs
lcall
ja
push
adc
leave
mov
and
outsl
in
in
and
mov
call
xor
movsb
jp
cld
xor
iret
in
call
test
add
jnp
inc
fisubrs
pop
inc
push
dec
add
in
repnz
shll
es
in
mov
lods
faddl
xchg
sbb
add
pushf
mov
or
xchg
push
and
andb
jl
lock
rclb
fisubl
push
ret
mov
movq
cmp
xlat
int
mov
fldl
mov
adc
sub
mov
push
stc
pusha
push
mov
in
pop
xor
mov
mov
cli
xchg
jge
and
fdivr
repnz
mov
out
add
mov
out
out
cmp
mov
adc
cld
push
cmpb
fsubs
dec
out
out
arpl
fs
fcomp
and
mov
nop
mov
mov
sbb
adc
fisttps
insb
or
push
inc
sbb
xor
adc
pop
or
test
in
in
lods
mov
mov
mov
ljmp
add
xchg
push
arpl
addb
cmp
cmp
push
cmp
sarl
sub
add
adcl
je
test
mov
inc
dec
or
enter
cmp
cmp
ljmp
imul
sbb
stos
ret
xorb
fsubl
daa
sub
jo
adc
dec
sub
dec
shrb
lds
mov
mov
aas
inc
adc
and
bsf
outsl
xchg
sbb
fnstenv
test
push
xor
adc
fst
ret
mov
sub
dec
xlat
jb
or
adc
test
add
mov
mov
sbb
jg
adc
sbb
in
inc
adc
movsl
stos
dec
dec
or
fstps
jg
scas
cmp
pusha
mov
insl
out
arpl
push
stc
sbb
nop
gs
filds
shr
adc
xchg
cmc
adc
sub
pusha
shll
mov
xchg
jo
adc
and
xor
sbb
add
add
add
mov
cmovnp
or
mov
repz
test
subb
das
cld
mov
es
mov
and
xor
adc
lahf
in
pop
leave
sbb
xchg
or
es
inc
addr16
fistps
jmp
pop
movsb
jg
aas
cs
fldcw
cmp
cld
icebp
inc
xchg
jp
add
enter
movsb
nop
add
xchg
adc
ret
popf
in
add
call
roll
sbb
insb
mov
jge
gs
cmp
loopne
push
shll
mov
fcmovbe
xchg
mov
cmpsb
sbb
jmp
inc
test
sbb
adc
xor
js
and
inc
sti
push
push
and
dec
or
cltd
or
test
aaa
or
xor
pavgb
sbb
or
or
or
or
jb
and
or
add
mov
xor
inc
in
aaa
call
call
inc
pusha
mov
add
push
addr16
fadd
inc
cmp
and
jo
inc
les
test
in
sub
jge
adc
or
sbb
xchg
ret
mov
insb
mov
mull
lods
fcomps
loopne
pushf
mov
fmuls
test
sub
fdivl
pop
mov
cmp
and
mov
mov
mov
aam
xor
shlb
xchg
les
sub
cmp
inc
mov
inc
sub
or
mov
cmc
pop
mov
das
movsb
sub
lock
fadds
or
inc
dec
pop
int
movsb
popa
pop
dec
adc
xchg
stc
push
adc
outsl
call
add
dec
jbe
test
and
mov
dec
cmp
loopne
push
fmull
das
adc
mov
subb
call
nop
mov
jo
fwait
pushf
inc
enter
push
pop
push
mov
lock
dec
add
inc
adc
andb
enter
nop
sbb
xchg
scas
mov
or
mov
lods
nop
pmulhuw
in
int3
enter
in
in
mov
in
xchg
cwtl
mov
mov
mov
movsb
sub
and
xor
push
xor
fwait
aad
popf
sbb
insl
inc
xchg
insl
mov
das
ljmp
dec
xor
fadd
mov
and
push
mov
mov
xchg
lods
xchg
movsb
xchg
and
int
nop
sub
sub
or
jno
imul
lds
pop
cmp
adc
sub
icebp
bnd
call
jne
and
or
adcl
xchg
pop
inc
mov
fmull
out
test
loopne
std
in
mov
stc
adc
lahf
outsl
xchg
or
xor
push
popf
cmpl
or
inc
mov
loop
sub
sub
test
je
mov
inc
xor
pop
rcrb
nop
in
push
and
xor
lock
sub
leave
fdivs
mov
or
movsb
movb
mov
push
push
push
add
cs
push
ret
fsubl
or
int3
mov
and
insl
mov
jbe
stc
aam
adc
imul
adc
loopne
jmp
xchg
and
push
jecxz
adc
sbb
or
in
dec
lcall
inc
lods
addb
sahf
xor
lcall
shrl
xor
and
and
ret
xor
std
int3
aaa
in
shll
sti
movsl
sbb
enter
xchg
andb
ss
cs
inc
int
jnp
jnp
adc
test
sub
incl
in
fcmovbe
inc
adc
xchg
mov
ret
in
mov
test
shll
aaa
jg
in
cmp
rorl
lds
xor
lods
test
sbb
mov
pushf
or
and
cwtl
jnp
sub
aad
pop
faddl
and
adc
fisttpll
in
mov
les
mov
loope
popf
orl
xor
mov
and
lods
ret
loop
gs
and
pop
sbb
mov
sbb
and
cld
imul
gs
lcall
dec
xor
pop
lds
lahf
lahf
push
sub
lods
arpl
xchg
lahf
aam
mov
in
sar
int3
sti
xchg
jg
add
out
lock
mov
dec
rclb
adc
pop
push
outsb
push
sbb
mov
call
and
popl
mov
cmc
out
enter
jne
pushf
loopne
aaa
movsb
adc
stos
insl
adc
jne
pop
aad
int3
ret
enter
stos
daa
clc
inc
nop
nop
cmpsb
inc
add
sbb
ficoml
sbb
push
bound
out
loopne
mov
scas
sbb
loopne
mov
leave
in
pop
mov
push
clc
inc
adc
push
lods
and
mov
nop
imul
js
inc
inc
lods
in
pop
shr
imul
dec
pop
loope
mov
adc
xor
loopne
xor
cwtl
push
and
jg
movsb
loopne
push
inc
sbb
outsl
mov
cwtl
movsb
jne
popa
xchg
mov
cmp
in
movsb
add
xor
aad
out
sbb
xchg
leave
mov
je
adc
test
lea
push
pop
fs
mov
sahf
cmp
lret
mov
je
mov
lret
sub
leave
jae
insb
cwtl
movsb
pop
inc
push
cmp
pushf
mov
dec
adc
adc
xchg
add
repnz
iret
xor
sub
mov
dec
in
lock
mov
push
lret
scas
fcoms
fadds
nop
ja
pop
push
dec
enter
push
cmpsl
inc
and
dec
cmp
mov
mov
cmpsl
mov
dec
push
ret
hlt
xchg
pusha
mov
or
xor
fwait
mov
test
inc
pusha
adc
orl
jnp
push
mov
add
cmc
ljmp
or
fsubl
cmp
test
movsb
xor
mov
push
sbb
mov
pushl
and
xor
mov
loopne
xchg
jo
sub
idivl
mov
lods
add
add
aad
fbstp
adc
adc
in
mov
sbbb
stos
or
ret
dec
aas
pop
enter
or
enter
push
inc
fcom
mov
outsl
or
adc
xor
es
lods
or
adc
lds
nop
or
and
mov
imul
insb
out
jl
pusha
and
dec
fs
mov
fisubrl
inc
and
dec
and
lods
filds
inc
or
notl
shlb
sub
movsl
mov
rorb
sub
loope
lods
aaa
imul
push
les
das
and
or
mov
andl
imul
dec
inc
jb
xchg
scas
in
add
push
pop
pavgw
pop
call
adc
sub
inc
dec
push
aas
mov
mov
or
pop
and
adc
xchg
dec
adc
roll
out
jl
pop
jb
push
int3
jg
sar
lods
dec
dec
mov
rcrb
sub
repz
inc
pop
in
mov
int3
adc
sub
jnp
cmpsl
jne
lds
test
insl
insb
xchg
mov
mov
sbb
adc
sbb
rorb
mov
add
adc
xor
mov
cltd
fadds
jne
inc
jmp
rorb
adc
sub
in
mov
dec
mov
sub
push
sub
pop
shrl
iret
je
aas
sub
add
inc
ficoml
test
xlat
dec
and
fsubr
mov
scas
mov
xor
push
mov
rorb
sbbb
bnd
test
int
jb
clc
je
test
pop
cmp
ss
pusha
lcall
inc
jp
pop
insb
js
mov
or
aaa
cltd
je
inc
lcall
sbb
imul
movsb
movsb
sbb
pop
arpl
and
dec
ret
add
sub
fwait
dec
inc
mov
xchg
in
and
daa
in
inc
add
mov
add
enter
test
xchg
stos
mov
adc
cs
iret
or
cwtl
test
out
subb
push
mov
mov
xor
jo
add
push
int3
mov
push
mov
fdivs
cmp
push
pop
ret
pushf
rorb
les
mov
push
scas
add
fsubr
das
in
xchg
out
fsubr
mov
and
fs
repz
add
and
or
mov
mov
adc
or
in
mov
push
xchg
addb
daa
adc
push
lock
imul
xchg
mov
mov
orl
popf
pop
sub
movsb
sub
je
or
test
xor
and
lods
mov
xor
mov
ss
and
js
mov
cmp
nop
xchg
xchg
dec
dec
pop
cwtl
cmp
xchg
or
sbb
pop
jb
xchg
dec
pop
rcrb
fmul
sar
cmp
seto
or
push
mov
sbb
and
test
mov
inc
and
pop
sbb
rorb
xchg
jae
add
enter
add
add
xor
xchg
or
adc
test
out
and
dec
mov
in
outsl
inc
inc
mov
adc
xor
jo
cwtl
fisubrl
bswap
cs
add
ds
leave
add
in
ss
sarb
add
add
and
or
pop
xor
pop
pop
sub
aad
jne
insl
leave
cmpb
mov
popa
and
or
pop
ret
and
mov
loopne
jg
xchg
jl
xchg
add
sub
mov
cmp
xchg
adc
insl
push
or
das
enter
fildl
or
roll
pop
xor
dec
lods
jne
add
jb
pop
cmp
xor
push
fisttps
mov
adc
decl
jmp
pusha
mov
lahf
mov
pushf
aas
push
push
lldt
inc
xchg
hlt
shrl
add
in
in
adcl
lcall
cltd
push
push
push
mov
push
fwait
lock
add
addr16
pop
sbb
movsb
repnz
in
shlb
ret
lahf
sbb
sub
jne
ret
arpl
xor
sub
aad
or
push
pop
mov
les
lds
enter
cmp
lods
dec
jl
lods
dec
mov
shlb
jnp
inc
xchg
cmc
call
and
xor
and
and
push
subl
pusha
sub
and
aam
pusha
xchg
mov
inc
test
outsb
dec
gs
add
adc
ret
dec
int
push
mov
or
gs
insl
pop
adc
dec
mov
cmpsb
xchg
mov
jb
inc
mov
mov
adc
sub
mov
pop
mov
in
lds
test
loopne
gs
adc
call
sbb
mov
popa
sub
push
aam
inc
adc
mov
sbb
sahf
lock
sbb
in
add
pop
addl
mov
and
mov
movb
dec
lahf
mov
lcall
fcmovb
inc
add
mov
mov
mov
jo
xchg
imul
nop
dec
es
pop
dec
inc
mov
sbbb
xchg
xchg
mov
lea
inc
push
jb
clc
fmuls
loop
mov
shlb
cld
leave
adc
push
rol
jne
es
dec
xor
pushf
mov
movsb
lods
mov
jecxz
cmp
dec
adc
je
aam
push
fs
enter
shlb
in
test
inc
pop
adc
xlat
push
push
nop
xchg
cmp
jb
inc
int
test
scas
sbb
xor
aam
orl
cltd
nop
lret
inc
cmp
and
sbb
pushf
mov
mov
ja
inc
add
aad
lods
pop
mov
xor
or
pop
mov
mov
push
and
popa
mov
js
mov
sarb
and
push
jecxz
cltd
mov
insl
mov
shlb
leave
or
dec
movsb
or
push
stos
dec
mov
pop
or
shll
adcb
sub
test
imul
mov
aam
leave
add
inc
mov
cmp
jg
clc
add
or
xchg
jb
inc
and
cltd
enter
push
inc
lock
or
jmp
mov
sub
adc
test
push
popl
and
xor
or
imul
add
rclb
sbb
sub
in
or
mov
mov
je
cli
xchg
ret
ret
sub
stos
das
add
push
cmp
divl
xor
and
adc
call
cmpsl
scas
jmp
pop
sbb
les
add
clc
int3
cmp
mov
sub
xor
fiaddl
adc
ffreep
js
jecxz
or
in
mov
cmp
jmp
cld
popa
cmpsb
or
pusha
dec
or
sub
mov
xor
and
lock
cmpsb
pop
mov
inc
mov
sbb
add
fsub
mov
mov
jae
and
and
pop
inc
mov
and
cmpb
fmuls
lds
xchg
imul
stc
leave
mov
mov
pop
inc
es
ss
adc
in
push
xchg
mov
lock
cltd
pusha
xchg
dec
es
cmp
dec
shlb
cltd
fs
dec
add
mov
xlat
scas
js
sub
mov
dec
rclb
pop
sti
dec
clc
cli
fidivl
adc
and
pop
xor
add
hlt
cli
and
pop
mov
nop
pop
sbb
movsl
jae
push
fwait
mov
jb
scas
jb
cli
call
xchg
jo
push
mov
push
or
lea
mov
in
pmullw
push
or
mov
iret
push
sub
cwtl
and
test
mov
mov
mov
mov
push
sub
add
sub
bound
add
stos
popa
call
adc
add
daa
enter
ds
push
shlb
mov
stc
fistpll
es
jnp
loopne
mov
aas
dec
cmp
sub
adc
or
test
ret
sbb
pop
aas
jo
or
cmpsb
mov
nop
sub
mov
fisttpl
inc
push
repnz
xor
mov
pop
xchg
mov
ror
cltd
dec
add
addr16
mov
loopne
ffreep
idiv
add
and
add
jle
adc
add
pusha
or
aaa
int
loopne
jl
in
sbb
sub
jb
divl
and
inc
jae
xchg
fsubs
jne
icebp
je
cwtl
xor
dec
aas
orl
imul
loope
pop
inc
mov
gs
and
push
lods
add
mov
add
adc
lock
mov
out
in
orb
adc
fidivs
xchg
pop
fistps
xchg
in
stc
lock
push
lods
sub
jmp
test
pop
xlat
mov
adc
add
push
pusha
add
sbbb
jp
stos
and
jns
nop
add
pop
sti
sahf
negl
push
testl
insb
mov
dec
incb
push
inc
add
cltd
push
pop
out
out
loopne
test
lahf
rolb
adc
inc
decl
or
cmp
dec
mov
fistpl
or
jnp
mov
sbb
mov
pop
and
inc
in
mov
rcll
xchg
adc
or
cmp
add
adc
mov
out
ds
push
scas
repz
lock
push
sbb
jns
test
je
jb
outsl
arpl
fs
outsl
jo
pusha
divl
push
dec
imul
push
push
es
gs
xor
cs
insb
daa
popa
and
or
fbld
pop
popa
je
outsl
outsb
push
pop
xchg
mov
ret
push
pop
lock
rdpmc
add
psubusb
pop
sub
fstpt
or
mov
inc
outsl
jb
js
je
jb
gs
mov
cmp
or
outsl
add
add
add
das
mov
gs
push
je
nop
inc
jne
jb
mov
andl
imul
dec
xor
lcall
cmp
cmp
add
dec
and
jns
add
scas
imul
push
dec
push
inc
inc
mov
ret
andb
bound
daa
dec
outsl
jbe
jl
cmp
arpl
push
jo
sub
addr16
cmpl
xchg
xchg
roll
jo
imul
bound
into
fstl
fs
insb
adc
out
jae
xchg
popl
or
jg
addr16
push
jne
xor
mov
daa
push
adc
clc
sbb
dec
and
insl
aas
and
jbe
fmul
cmp
ds
popa
das
jo
or
add
fcomip
mov
mov
fsubl
add
cwtl
or
sub
jns
es
sub
sub
sub
cs
xor
xor
xor
cmpsb
lock
cmp
cmp
ds
inc
test
aam
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
push
clc
outsb
dec
stos
pop
pop
pop
pop
pop
shl
pushl
pusha
popa
bound
gs
imul
jno
outsl
mov
ja
movsb
jnp
jge
jg
add
outsl
inc
dec
imul
mov
xchg
xchg
divb
pop
push
inc
insb
jae
scas
jmp
and
push
jne
test
jmp
out
and
lock
insl
and
jb
imul
sti
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
aas
aad
sbb
xor
insb
imul
cmpsb
insl
push
mov
je,pn
xor
inc
and
xorb
and
push
aas
sbb
fs
out
imul
scas
mov
push
insb
xorb
mov
int
inc
popa
and
daa
mov
jne
loopne
data16
xor
and
insl
push
sbb
mov
inc
cs
xor
and
jne
dec
mov
rol
lcallw
push
or
sbb
add
out
cltd
out
es
and
lret
imul
pop
es
addr16
sbb
inc
push
jbe
jo
inc
pusha
je
and
push
dec
addb
mov
popf
jb
mov
out
loope
mov
lock
test
and
das
arpl
roll
cmp
arpl
sub
repnz
inc
xchg
jge
inc
xchg
sub
imul
add
in
int3
or
xchg
lcall
xchg
xor
roll
jns
push
fistps
push
adc
jbe
lock
shll
or
es
out
nop
add
sub
mov
ja
outsl
outsl
or
or
push
hlt
pusha
in
jo
cli
jbe
add
je
and
xor
xorl
das
mov
int3
loopne
or
lds
push
and
inc
jle
outsl
pop
scas
xor
arpl
lcall
bound
cmp
mov
insl
in
ljmp
imul
dec
xor
imul
mov
pusha
aad
push
rcl
push
leave
icebp
sbb
imul
cmp
xorl
in
xor
add
or
push
and
test
pop
push
cmp
addr16
jae
xor
add
push
pusha
jo
sub
test
pushf
mov
sub
add
bswap
inc
sub
pop
dec
jmp
dec
or
jo
and
vmovd
cmp
cwtl
ja
ds
inc
inc
mov
lods
and
dec
cmp
mov
fisttpll
lcall
loopne
add
cmpb
rol
push
out
ret
das
lret
jno
icebp
pusha
inc
mov
clc
ret
pop
mov
jno
add
add
mov
push
loop
imul
and
push
xchg
add
add
inc
test
enter
popa
js
jae
stc
inc
jae
je
pop
dec
pop
add
ja
sub
xor
mov
jb
imul
xchg
adc
jae
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
pop
xor
and
or
pusha
add
js
popf
cltd
testl
add
sbb
mov
addb
addb
mov
imul
and
adcb
pop
daa
push
addr16
mov
push
and
sub
jb
pusha
mov
jnp
push
jo
add
test
add
inc
inc
mov
js
ds
inc
jo
add
add
popa
addl
cmp
xchg
lea
mov
cmp
pop
jb
xchg
xchg
xchg
test
pop
ror
xor
push
adc
mov
sub
test
dec
pop
pop
pushf
jo
or
and
or
cs
ret
pushf
pop
data16
and
out
enter
sbb
add
xchg
dec
add
enter
test
pop
and
add
and
xor
add
push
add
add
pop
orb
add
shrl
popf
add
aaa
adc
mov
add
or
shr
add
out
add
addl
mov
xchg
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
inc
inc
movsb
adc
and
call
test
dec
decl
mov
sarl
mov
sbb
sbb
push
pop
outsl
ja
mov
cs
jae
jb
bound
dec
cmp
ss
popa
mov
in
in
dec
repnz
pop
jmp
mov
mov
outsl
js
push
push
inc
push
imul
insb
gs
lods
xor
out
mov
dec
jl
daa
pop
jbe
mov
and
out
inc
insl
jnp
sbb
inc
mov
imul
fcmovnu
and
inc
jb
jns
daa
pop
in
adc
mov
gs
and
pop
pusha
aad
lods
pop
aaa
call
int3
cmp
rolb
les
push
mov
sub
jns
imul
pop
pusha
inc
jbe
pushf
push
rclb
lahf
fs
xchg
push
outsb
fisubl
dec
clc
popl
movsl
dec
sti
cmp
push
das
add
and
pop
es
dec
nop
les
lock
sub
pop
pop
pop
push
stos
popf
dec
adc
aas
xchg
add
imul
insb
call
mov
subl
gs
or
xchg
xchg
inc
push
push
push
push
dec
push
shrb
dec
push
jne
repnz
js
push
into
mov
lea
push
lods
xchg
scas
dec
sbb
addl
imul
call
adc
sub
jae
inc
in
add
fidivl
xchg
jg
popa
fcoms
mov
lods
jns
pusha
push
outsb
aad
mov
mov
mov
daa
xchg
rcrl
jmp
mov
popw
pop
cmp
stc
iret
es
cmp
push
das
push
sub
sub
inc
jl
jle
xor
sub
addr16
jo
jnp
sub
sub
push
cmp
jmp
cmp
je
add
imul
dec
pop
pop
cwtl
jb
sbb
push
mov
cmpsb
shll
das
jo
ss
sbb
push
lods
popa
pop
loopne
sbb
and
xor
cwtl
pop
es
jo
sub
adc
sub
repz
sti
mov
inc
add
in
repz
dec
inc
xor
cmc
hlt
dec
xchg
jl
out
jmp
fs
sub
lock
lcall
adc
or
add
hlt
out
jno
sti
xor
sar
in
call
adc
loop
lahf
mulb
clc
push
in
add
imull
push
jnp
repz
aam
test
jl
int3
push
enter
repnz
les
mov
jns
mov
test
mov
jns
xorb
xor
out
sbb
out
fdivrl
js
cmp
lock
out
lcall
jns
out
test
inc
sahf
out
out
cld
in
pop
push
lods
andb
jns
sbb
jmp
push
test
dec
inc
push
cmpsl
pop
aam
lcallw
shlb
jns
push
xor
test
xor
data16
xchg
lea
pop
mov
bound
fs
sbb
jae
jb
xor
cmpsl
aam
ljmp
add
sub
add
sarb
inc
insb
push
sub
inc
dec
jae
insb
inc
gs
jnp
lods
inc
push
sbb
dec
inc
dec
xor
std
call
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
orl
into
mov
add
adc
jnp
inc
loop
mov
ds
sahf
jg
inc
pop
adc
clc
lret
sbb
jb
cld
dec
jg
jge
arpl
cmp
adc
dec
scas
jp
stc
jno
in
fstl
mov
and
aas
repnz
xchg
cmp
dec
imul
lret
add
inc
mov
notb
mov
push
test
sub
fwait
ss
sbb
pop
fistpll
insb
fdivrp
inc
dec
int3
dec
dec
xor
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
lcall
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
loopne
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
jne
out
pop
leave
loop
mov
xchg
dec
aam
lods
push
das
es
push
xor
cmpb
or
icebp
nop
adc
pop
pop
repnz
push
aas
fistpl
lret
es
sbb
imul
or
ss
xchg
sub
pop
mov
out
leave
ljmp
shrb
lahf
dec
test
push
push
inc
inc
or
outsb
jbe
inc
and
je
and
adc
jg
das
cs
sub
mov
dec
sbb
cmovl
push
pop
push
sbb
jg
inc
dec
dec
sub
push
dec
femms
sbb
add
push
push
inc
sbb
xor
in
lcall
cmp
push
pop
pop
sbb
dec
sbb
pop
and
jnp
mov
jb
push
push
inc
ss
daa
cmovae
jbe
notb
dec
push
adc
cmp
pop
dec
pop
negb
inc
push
sbb
sub
push
divb
cmp
aas
and
push
sbb
add
imulb
out
inc
push
inc
ret
xor
or
aas
ljmp
cmp
or
or
dec
push
aaa
inc
sub
xor
push
pop
push
std
out
cs
xor
pop
pop
ds
sbb
and
sub
ss
cmp
and
dec
dec
sub
dec
add
xor
inc
push
test
pop
jge
inc
addb
neg
mov
dec
push
push
push
cmp
aas
leave
xlat
pop
aad
nopl
inc
inc
inc
or
pop
test
lea
push
sub
pop
dec
movaps
and
pop
dec
push
pop
push
and
push
sbb
fsts
repnz
inc
sbb
sbb
sub
sbbb
xor
jo
mov
cmp
and
dec
sub
inc
sub
push
and
mov
push
dec
push
pop
sbb
and
sub
sub
popf
stos
dec
cmp
push
pop
sub
add
push
cmp
sarb
pop
push
gs
es
pop
and
pop
or
add
inc
xor
push
aas
add
pop
in
add
push
and
call
push
adc
pop
and
push
mov
pop
dec
aaa
and
push
movsl
ljmp
lds
jnp
inc
pop
adc
dec
nop
dec
cwtl
in
push
rcr
inc
lock
lock
xor
adc
xor
repz
push
jo
mov
pop
divl
push
inc
outsl
jg
ja
repz
and
xor
ljmp
sbb
adc
jo
mov
scas
minps
push
mov
dec
lahf
loope
data16
cs
push
and
add
adc
push
popa
mov
or
iret
add
pop
dec
bound
xor
and
icebp
or
push
iret
repz
dec
scas
lock
xor
jo
mov
cmpsl
stc
cmp
adc
nop
mov
rcl
ss
jo
jns
jns
rclb
inc
nop
sub
ds
mov
inc
lds
or
pushf
movb
les
push
pop
int
cmpsb
pusha
push
inc
es
lar
notl
mov
xlat
dec
add
cmp
ss
or
cmp
pop
sub
inc
jbe
scas
push
push
dec
mov
pop
pop
or
push
out
add
push
dec
and
sahf
idivl
dec
fisttpll
cmp
inc
push
fwait
ret
sahf
mov
cmpsb
cmp
pop
cmp
push
jmp
jb
sub
add
jbe
push
cmp
add
pop
dec
push
insb
fmuls
lds
add
add
and
aas
push
push
push
fildll
sub
push
adc
add
sbb
and
jp
pop
pop
mov
xor
push
fsubp
mov
sysenter
dec
cmp
mov
testb
out
and
ja
in
add
sub
sbb
pop
cld
sbbl
inc
push
out
pop
rcpps
loope
loope
push
sbb
mov
scas
cwtl
inc
xor
cmp
outsb
scas
cs
or
scas
pop
or
add
sbb
adc
pop
rcrb
out
ss
or
cmp
mulps
sub
pop
pop
fwait
adc
push
pop
push
inc
cmp
cmp
push
jnp
cmp
daa
cmp
add
pop
xchg
cs
and
jecxz
push
sahf
adc
inc
cltd
testl
out
pop
or
push
push
ss
and
pop
in
or
negl
jo
rcll
sarl
mov
push
mov
push
cld
dec
and
sbb
adc
push
adc
cs
xor
add
lcall
test
and
insb
mov
xchg
je
das
mov
push
pop
push
or
inc
pop
add
ja
pop
int3
imul
jnp
ret
sbb
addr16
mov
in
xor
dec
sbb
out
sub
cltd
into
loope
test
scas
daa
int
xor
in
inc
mov
push
mov
cmp
sbb
push
sbb
testb
xor
aaa
iret
inc
push
movsb
lcall
es
dec
jbe
pop
lcall
inc
inc
lahf
sbb
repnz
in
push
xor
push
cld
push
cmp
addr16
nop
lcall
rolb
add
inc
xchg
js
jl
inc
dec
dec
sbbl
push
mov
shrl
push
mov
addb
mov
pop
jl
push
mov
cs
lds
ds
cmpsb
push
mov
pop
add
sub
inc
ret
push
xor
add
call
xchg
inc
flds
cmp
daa
pop
lcall
fsubrs
pop
push
cmp
add
dec
push
or
add
and
jge
addr16
loopne
scas
rorl
push
pop
jnp
pop
add
push
ja
push
daa
adc
dec
daa
sbb
insb
es
sbb
sbb
pushf
dec
addr16
cmp
call
pop
or
daa
dec
daa
pop
add
cmp
fcmovnb
outsl
push
or
inc
das
cmp
cmpl
pop
call
xchg
jo
push
xor
push
adc
adc
imul
shll
xor
sub
lods
add
ja
lds
bound
cmp
add
sbb
das
push
ds
adc
add
sbb
inc
cmp
pop
and
push
sbb
cmp
enter
es
cmpsb
or
adcl
push
pop
call
push
mov
push
push
cs
pop
jp
mov
lcall
lods
pop
adcl
push
imul
das
ret
add
subb
push
daa
dec
les
push
cmp
pop
mov
out
and
cwtl
dec
push
push
mov
adc
mov
imulb
je
push
push
lcall
push
or
adc
sub
xchg
or
and
into
inc
sbb
daa
dec
mov
lahf
je
into
inc
jecxz
insb
outsl
jb
bound
idivb
pop
pop
push
push
je
add
jae
popa
push
cmp
mov
je
aas
mov
and
outsb
cmp
das
mov
and
inc
dec
and
cmpsl
or
out
jo
push
jae
push
mov
cs
mov
andb
mov
hlt
and
lahf
xor
push
js
sbb
std
dec
adc
lods
pop
stos
adc
adc
les
push
pop
xor
icebp
mov
and
enter
push
sbb
adc
and
sahf
adc
mov
mov
sbb
push
addb
fs
or
ret
ljmp
or
aad
in
inc
ds
inc
push
xor
pop
das
fisubrl
sbb
push
lret
adc
sub
push
push
leave
bound
test
fmuls
push
jle
sbb
cwtl
or
cmp
inc
shrb
imul
dec
mov
push
add
jae
and
iret
xchg
mov
push
or
test
sbb
inc
push
jmp
xlat
sbb
loop
js
cltd
xor
call
mov
pop
or
add
inc
je
and
shl
adc
sub
pop
jle
pop
mov
xchg
or
test
add
sbb
or
jl
sub
or
cmp
pop
xchg
and
loop
inc
icebp
push
push
jo
repz
shlb
mov
outsl
fldl
std
daa
push
push
push
in
mov
loope
push
pop
ss
sbb
ljmp
push
in
push
jo
ret
shll
or
scas
dec
adc
nop
sbb
jge
ds
xor
jo
dec
cmp
mov
sbb
or
aam
aaa
stc
sbb
out
pusha
addb
and
in
pusha
test
xchg
jo
imul
inc
sub
ss
js
lcall
pop
daa
jg
push
lock
adc
and
sub
xor
scas
and
stc
sbb
inc
pop
ja
or
or
cltd
xor
mov
cmp
adc
sbb
int3
push
outsl
xchg
fmuls
or
push
push
xor
xchg
xor
enter
mov
leave
cmp
push
pop
notl
adc
ljmp
mov
xor
cmp
or
mov
xchg
or
testb
popa
push
and
scas
testb
dec
sub
and
jnp
adc
xchg
mov
insb
popf
enter
push
loope
aaa
mov
es
pop
lahf
and
xchg
adc
outsl
push
popa
cmp
push
inc
adc
sbb
sub
dec
cmp
jae
jge
sbb
movhps
js
enter
sub
rclb
pushf
jns
and
push
pop
add
dec
inc
and
mov
imul
sub
imul
xchg
cltd
insb
or
jecxz
mov
js
jns
xchg
cld
mov
sbb
push
pop
dec
pushl
push
sub
ss
push
add
sbb
adc
add
xor
or
lock
xor
inc
mov
pop
sbb
xor
or
dec
sbb
ds
int3
push
inc
inc
cs
xor
add
pop
test
push
xor
ss
push
xor
data16
and
lods
add
sbb
out
add
cmp
or
hlt
lds
fists
jns
in
ret
pop
inc
cmp
and
pop
inc
lock
mov
sti
and
pop
and
and
and
into
inc
pop
addl
dec
cmp
out
inc
push
lods
cs
jae
sbb
negl
mov
lea
push
xorl
sbb
pusha
fildl
add
sbb
sub
push
out
dec
jle
nopl
and
test
sbb
rcr
sbb
mov
sub
pop
mov
movsl
cmp
cmpl
or
and
sbb
mov
cmp
and
sbb
inc
mov
cmp
push
arpl
push
cmp
and
sbb
push
mov
cmp
adc
or
das
or
and
push
adc
stos
dec
pop
adc
cwtl
or
aaa
orl
push
xor
xchg
cwtl
pop
enter
adc
es
xchg
push
mov
inc
push
inc
daa
popf
dec
xchg
push
dec
lods
or
add
pop
loop
jmp
jl
push
das
sbb
sub
das
ss
jae
add
es
ss
fildl
or
out
invd
ja
pop
push
aas
adc
push
lea
xchg
xor
adc
mov
lods
push
and
dec
js
aaa
sub
inc
pop
push
cmp
movsl
mov
in
ja
punpcklbw
ja
gs
push
pop
xor
test
jge
pop
cmp
dec
shl
addr16
fistl
dec
inc
and
pop
adc
loop
push
mov
xor
dec
movsl
xchg
pop
lret
ss
sub
xor
arpl
inc
adc
inc
adc
xchg
push
sub
push
iret
clc
out
push
pop
adc
daa
aas
pop
adc
pop
and
add
sub
sbb
loope
fistl
mov
aaa
lock
add
or
lods
mov
sub
aaa
push
and
data16
ja
fs
push
pcmpgtw
add
add
outsl
jb
jp
xor
outsl
inc
add
push
loopne
ret
xchg
lods
push
add
das
push
insb
mov
push
xor
cmpsb
and
outsb
push
pop
stos
mov
inc
sbb
jecxz
loopne
inc
out
jge
out
adc
push
mov
mov
shll
ds
mov
sahf
int3
into
ss
rcl
push
nop
jns
out
mov
lock
dec
cmp
xchg
xor
sbb
je
in
mov
sub
inc
dec
call
push
ljmp
mov
mov
ljmp
push
and
mov
add
adc
call
cltd
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
mov
pusha
or
mov
sub
sub
pop
repnz
mov
sbb
mov
ds
pop
sbb
lods
sub
jle
jo
fadd
decb
mov
sbb
mov
mov
xchg
jecxz
dec
push
bound
mov
adc
in
and
xor
aaa
test
push
dec
or
adc
and
dec
cmp
sub
hlt
rolb
pop
push
inc
inc
jb
mov
dec
xchg
outsl
push
sti
xor
mov
imul
pop
clc
adc
pop
jb
pushf
call
iret
and
das
sub
mov
in
jns
cwtl
cmp
inc
js
push
pop
dec
dec
inc
mov
gs
pop
je
inc
js
cmp
dec
pop
add
loope
lcall
pop
pop
or
fists
mov
dec
leave
jnp
cmp
incl
xor
sub
sub
xor
inc
xor
inc
loopne
adc
clc
popa
sbb
push
xor
adc
add
subl
jne
push
xor
movsl
das
js
add
inc
pushf
shrb
insl
cmp
jns
jp
xor
push
jb
mov
dec
dec
jne
cmp
popa
js
mov
mov
pop
pop
and
mov
and
xlat
insb
push
mov
scas
es
adc
adc
xor
fstpl
mov
out
inc
cmp
out
insb
adc
andb
out
and
aaa
or
loopne
andl
ret
add
adc
or
dec
ljmp
mov
dec
xchg
adc
pop
adc
clts
loope
add
cmp
js
mov
push
add
mov
push
ljmp
push
cmp
sub
inc
sbb
cmp
xor
push
inc
dec
sbb
lock
add
mov
adc
mov
dec
pop
movaps
adc
dec
pop
add
and
shrl
dec
leave
push
xor
mov
test
pop
inc
add
pop
jecxz
mov
es
loope
pop
testb
in
out
xor
push
inc
ficomps
sbb
insl
bound
dec
addr16
xchg
sti
mov
pop
xchg
push
jle
aas
int
jl
pop
cmp
inc
xchg
ja
xchg
stos
sub
nop
mov
in
ds
push
push
imul
dec
iret
dec
push
aad
in
mov
xlat
cs
adc
mov
dec
inc
xchg
pop
test
loope
mov
xchg
aaa
push
pop
or
scas
mov
clc
push
cmpsb
cmp
mov
movsb
dec
dec
inc
push
aad
lahf
pop
mov
pop
sbb
mov
mov
rclb
xor
ja
cs
mov
push
out
test
ret
out
out
or
sahf
divb
or
outsl
inc
pop
pop
pop
data16
stc
out
sbb
sahf
push
adc
daa
or
mov
imulb
out
jne
sbb
dec
push
pop
lcall
scas
sbb
cmpsb
sbb
pop
rorb
xchg
sbb
push
lock
add
inc
cmpsl
stc
cmp
sub
psllq
hlt
inc
test
pop
icebp
jl
adc
pop
mull
stc
mov
push
out
mov
dec
sti
sahf
cmpsl
dec
repz
ss
divl
pushw
push
sbb
fnstsw
orl
jecxz
push
lret
movsb
inc
addr16
cmp
fmulp
aad
nop
inc
xorl
fsts
cmp
repz
push
push
xchg
iret
in
repnz
cmp
mov
int
lods
clts
cld
dec
adc
jge
out
mov
testl
adc
push
jg
repz
scas
iret
lock
xor
iret
repz
mov
cmp
shrl
cmp
jo
repz
repz
push
inc
pop
cmp
repz
lock
ljmp
inc
addr16
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
pop
mov
stc
push
mov
xor
adc
mov
mov
pop
push
mov
das
jbe
jg
loopne
mov
jg
dec
mov
and
pop
sbb
enter
jg
cmp
adc
or
adc
cld
pusha
or
add
sub
in
add
xor
fldt
lock
outsb
push
outsb
fbld
and
inc
out
mov
push
push
daa
fbld
xchg
out
inc
sbb
or
inc
imul
cmp
sbb
dec
fisubl
pop
jb
sbb
add
roll
add
dec
jp
jbe
cmp
push
ljmp
cmpsb
dec
add
push
mov
rclb
insb
pop
jp
out
jb
dec
pop
je
jns
ja
xlat
aaa
push
fisttps
jp
das
push
in
jno
rclb
sti
lock
inc
imul
pop
sbb
sub
dec
adc
pop
aaa
or
dec
mov
ja
dec
clc
push
fs
sub
clc
pop
das
or
in
mov
inc
repnz
sahf
loop
pusha
mov
das
adc
aaa
or
push
push
cmp
leave
mov
or
addr16
jo
jae
mov
jno
outsl
and
ja
fsts
sub
and
sahf
lcall
push
or
cmp
xor
xor
pop
repz
cmp
cmp
and
xor
push
xor
xor
cmp
fistl
add
or
mov
mov
or
adc
or
add
mov
inc
dec
or
add
adc
add
bound
lock
xchg
push
je
dec
or
ljmp
fwait
cmpsl
push
aad
das
sub
int
dec
push
xchg
mov
int
inc
dec
push
pop
push
inc
mov
xchg
jp
cmove
sbb
xchg
sbb
cmp
popf
pop
push
pop
das
push
inc
das
ds
add
ja
negb
adc
outsb
mov
push
pop
fldt
scas
jne
test
sub
push
and
cmp
sub
push
movsl
pop
mov
clc
sbb
and
inc
sub
and
xor
rcrl
mov
jge
jnp
dec
push
lcall
sub
arpl
fs
adc
and
xorl
push
or
sub
jbe
push
inc
push
leave
cmp
xchg
inc
loopne
jns
jnp
inc
adc
pop
testl
sahf
out
inc
push
addr16
jl
mov
cltd
or
xchg
add
pop
push
add
or
adc
insb
das
adc
sbb
and
sub
xor
data16
inc
mov
mov
mov
rorb
mov
insb
sub
das
or
xchg
pop
adc
pop
add
data16
mov
pop
adc
push
push
fldcw
lret
str
add
mov
stc
das
incl
outsb
cmp
pop
and
push
dec
mov
das
pop
push
cmp
sub
das
and
pop
pop
inc
push
cmp
mov
pop
pop
dec
inc
daa
dec
pusha
mov
jmp
insb
or
aaa
adc
mov
call
ds
out
mov
clc
adc
mov
adc
jo
out
mov
mov
test
fisubl
and
sub
pushl
sbb
lods
daa
and
loopne
mov
mov
stos
movsl
cmpb
pop
add
daa
lods
daa
jge
bound
dec
xchg
stos
lea
das
divl
adc
test
js
mov
ret
pop
inc
sub
unpcklps
test
daa
imul
sbb
pop
xchg
das
dec
adc
pmaxub
jo
inc
loop
pop
adc
shlb
inc
loop
add
repz
pop
pusha
push
xchg
adc
mull
das
mov
mov
sub
daa
lea
xchg
insl
or
outsb
popl
es
add
outsl
int
addr16
pop
jg
mov
insl
push
xchg
mov
push
pop
mov
shrl
pop
mov
xor
aaa
outsl
sub
addr16
mov
inc
sbb
inc
daa
jo
lea
adc
jl
inc
xor
jl
movb
xchg
les
imul
sub
pop
xchg
insl
pop
push
mov
imul
sbb
dec
js
mov
add
xchg
ja
jl
clc
pop
jns
xor
aad
push
ficoms
xchg
add
cwtl
cmpsl
pusha
mov
sbb
in
sub
cmp
pop
ret
aaa
sbb
or
mov
je
jo
das
das
jbe
stc
pop
inc
pushf
or
push
ret
push
inc
push
push
mov
xchg
pusha
pop
fmuls
lock
push
pop
xchg
inc
fmull
aaa
dec
jnp
or
das
pop
adc
cmp
pop
push
jno
aaa
xchg
fwait
push
mov
sub
bound
add
xchg
push
pop
aaa
nop
adc
pop
test
in
and
pop
test
std
das
inc
push
adc
ret
push
jecxz
push
pushf
adc
pop
mov
add
mov
cmp
pusha
sbb
mov
push
adc
mov
add
adc
xchg
add
xchg
mov
mov
xchg
jo
jg
sbb
inc
bswap
or
dec
into
clc
inc
inc
fs
imulb
inc
clc
aaa
add
shlb
jne
add
int3
aas
rcrl
gs
pop
stos
or
pop
add
inc
or
ja
push
adc
xchg
pop
or
sub
xchg
fsts
xorb
int3
jne
sub
mov
pop
cmp
push
cmp
sbb
xchg
dec
mov
sbb
insb
mov
ss
pop
sbb
dec
cmp
add
mov
shlb
sbb
or
sbb
inc
sub
push
subl
and
mov
lcall
inc
cmp
loope
adc
call
data16
inc
and
sahf
shlb
push
sub
lret
mov
inc
sub
push
inc
inc
gs
sbb
or
aaa
sbb
sub
pop
sub
pop
aas
es
das
test
push
ja
test
addr16
jmp
mov
jno
dec
aaa
outsl
aaa
pop
fldl
dec
add
or
sbb
xchg
inc
loope
test
popf
push
pop
push
sbb
out
loop
or
dec
pop
inc
rcrl
sbb
xchg
sbb
cmpsl
xor
adc
aaa
lods
push
cmp
push
xchg
test
notl
add
push
sbb
es
lret
push
arpl
pop
pop
cs
xor
mov
add
cltd
jbe
roll
xchg
mov
mov
inc
daa
jo
or
rolb
dec
dec
or
inc
test
jno
jns
je
push
inc
lahf
mov
mov
mov
imul
lock
bound
jl
add
pop
and
out
repz
pop
pop
adc
arpl
add
add
push
cs
loop
pop
pop
add
pop
pop
pop
jmp
sub
push
and
dec
push
cmp
inc
adc
pop
cmp
push
cmp
xor
push
push
push
and
sbb
ljmp
and
aas
sub
add
push
push
push
sub
xor
sub
mov
pop
and
pop
rcr
mov
adc
pop
pop
sbb
daa
pop
and
mov
sbb
and
xor
and
xchg
ret
dec
daa
push
or
and
xor
fs
add
cmp
sbb
push
inc
cmp
pop
sbb
sbb
and
inc
and
dec
xor
push
add
jne
pop
imul
cmpb
loope
pop
mov
popf
adc
pop
out
fdivrs
pop
push
roll
xor
add
jmp
xor
aas
adc
xor
pop
sti
and
cmc
push
sbb
pop
dec
xchg
push
dec
mov
or
add
mov
js
lock
loopne
out
aas
push
push
xor
mov
or
inc
pop
adc
stos
adc
stc
out
and
cs
nop
dec
mov
or
das
adcl
push
inc
jb
inc
adcb
xor
inc
inc
test
es
test
jb
data16
hlt
xchg
cld
push
push
or
test
push
push
cld
dec
inc
jl
xor
fimuls
add
jle
addb
outsl
mov
cld
out
cmp
inc
xchg
inc
aaa
jno
sti
shlb
ret
call
push
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
ljmp
nop
adc
jge
push
je
mov
andb
fwait
push
sbb
inc
shrl
xchg
out
popf
rorl
and
sub
fwait
jmp
dec
fsubrl
stc
jbe
hlt
cwtl
insl
xor
incl
mov
inc
xchg
cmpsl
aad
arpl
push
mov
test
mov
cmp
sbb
mov
sub
adc
or
or
leave
ret
sub
xchg
mov
jmp
jo
dec
ret
insb
sbb
xchg
shll
cltd
test
push
push
shll
insb
aaa
push
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
out
cli
cs
arpl
test
add
mov
mov
movsb
idiv
jmp
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
xor
sbbl
int
pop
insl
test
adc
mov
lock
dec
inc
dec
push
jno
and
pop
dec
pop
cs
incl
into
push
xor
or
push
inc
sub
xor
lock
call
jge
sub
jp
jl
push
pop
cmp
cmp
daa
dec
mov
outsb
push
jns,pt
xor
enter
jae
inc
inc
or
and
cmp
and
outsl
jbe
bound
and
pop
jl
out
or
dec
or
push
pop
push
das
adc
dec
test
sub
out
add
pop
daa
push
xor
cmp
ja
scas
mov
or
scas
iret
sahf
jmp
aaa
pop
push
daa
pop
daa
dec
and
outsb
push
pop
aas
pop
and
std
adc
push
sbb
cmovns
pop
adc
fdivrl
out
sub
xor
cmp
xor
xor
xor
std
mov
pop
inc
xor
and
aaa
inc
push
xor
testb
mov
mov
cmovb
pop
ss
lahf
ss
inc
xor
xchg
imul
adc
or
adc
mov
xor
and
and
fldcw
bound
test
aam
push
xchg
cmp
sbbl
push
arpl
outsl
arpl
xchg
rcll
dec
inc
mov
push
cmpsl
cmp
jb
mov
sbb
jle
inc
dec
xchg
fcoms
inc
addb
bound
cmp
lock
sub
nopl
and
jnp
sbb
loopne
aad
aaa
push
cmp
cmp
sbb
and
mov
pop
rcrl
pop
notl
sbb
sahf
inc
mov
ret
popf
cmp
stos
push
cmp
fcomps
cmp
sbbb
dec
or
mov
or
inc
xor
cwtl
test
sbb
pop
cmp
scas
jge
sub
not
andb
push
paddd
pop
mov
sbb
or
jnp
jge
sbb
cmp
and
mov
and
xchg
mov
inc
imul
add
pop
cmp
shlb
imul
push
adc
sbb
push
pop
std
in
mov
push
jge
mov
jmp
dec
xor
mov
add
sbb
fs
int
and
nop
or
push
fcoml
enter
xchg
and
lds
or
jnp
cmp
inc
fisttpll
xchg
mov
and
add
fstps
outsb
je
lcall
js
xor
push
push
es
pop
sbb
loope
in
cmp
jmp
or
jbe
push
inc
push
and
aad
divb
pop
or
xor
insl
loop
and
inc
push
pop
js
pop
push
dec
inc
mov
outsl
insb
loop
popa
je
jecxz
pop
add
adc
daa
or
dec
xor
aas
jne
xor
or
push
gs
add
adc
pop
or
push
xchg
jbe
out
or
pop
push
or
push
xchg
in
lea
pusha
les
xor
lods
push
and
adc
test
add
faddp
cli
rcrl
or
push
sub
and
cmp
push
sbb
lods
or
pop
push
cmp
mov
sbb
sbb
ds
push
jle
inc
sbb
dec
mov
xor
pop
outsl
lds
pop
jnp
scas
add
pop
mov
push
js
push
leave
das
test
addr16
aas
aas
adc
mov
push
pop
movsb
sbb
fcomps
rolb
push
or
push
adc
mov
jb
pop
mov
rcrl
jae
inc
jne
scas
mov
xor
xchg
nop
cmp
fcomi
or
divl
sub
and
mov
or
mov
jg
daa
aas
test
or
or
insl
pusha
adc
xor
push
mov
call
sbb
insl
mov
aaa
daa
jp
lahf
pop
xor
pop
fs
jo
sub
or
outsl
or
movsl
stos
push
outsl
imul
lods
xchg
mov
fisubs
push
test
jp
pop
inc
sub
dec
mov
dec
inc
cmp
push
das
test
mov
sarl
es
scas
push
xor
arpl
and
push
shlb
cltd
xchg
dec
pushw
push
ret
mov
push
xchg
pop
pop
mov
pop
ja
push
sbb
je
cwtl
push
xchg
and
sbb
sbb
mov
push
or
repnz
mov
ja
dec
hlt
sbb
cmp
imul
inc
lods
mov
and
pop
mov
ror
add
push
outsb
lods
add
lds
xor
lds
ljmp
inc
xor
je
dec
or
inc
divl
cmp
cmp
test
or
in
gs
mov
dec
jo
jb
mov
mov
pop
aas
and
gs
sbb
sbb
pop
mov
fisubrs
pop
loop
add
inc
psubusb
dec
and
dec
pop
movsl
mov
jnp
dec
pop
repz
test
jge
push
sbb
inc
dec
cmpsl
rcll
lea
cmp
sub
add
stos
cwtl
bound
scas
cmpsl
pop
inc
roll
or
push
rorb
js
adc
push
mov
aas
outsb
add
sub
inc
dec
insl
jnp
jae
or
inc
and
inc
add
or
jns
or
add
cmp
andb
push
adc
movsl
shlb
lods
push
pop
xchg
mov
jg
sub
jae
push
popa
push
dec
dec
lret
sbb
aam
and
ficompl
rclb
inc
inc
cmpsb
punpckhwd
fiadds
dec
outsb
push
je
scas
pop
inc
lods
fcomps
fistps
sbb
push
inc
dec
push
inc
lods
cltd
cli
scas
pop
or
inc
push
pop
cwtl
dec
xlat
fisttpl
gs
test
stos
inc
test
pop
or
push
mov
jb
add
inc
push
inc
aas
and
test
dec
and
lret
mov
lcall
loop
cmpsl
pop
outsl
lea
outsl
mov
ret
mov
orb
push
push
js
xchg
or
orb
cs
jb
out
pushf
or
push
adc
push
test
mov
add
xor
push
pushf
leave
pop
sbb
jae
push
lea
push
psadbw
push
iret
cmp
jo
inc
aam
sub
push
push
out
faddp
fldenv
add
pop
lods
fwait
xor
add
push
pop
mov
ja
pop
cmp
dec
push
sbb
or
xchg
add
cmp
or
inc
cmp
bound
das
adc
mov
mov
sarb
xchg
out
push
lret
push
or
arpl
dec
cmc
dec
xchg
add
pop
and
dec
adc
and
movl
ret
cmpsl
push
mov
and
adc
loopne,pn
xor
add
and
lods
pop
jo
dec
jno
cmp
out
sub
push
sub
and
inc
cmpsl
imul
pop
adc
ficoml
stos
arpl
lods
addb
lods
or
pop
add
and
outsl
test
add
test
insl
xlat
incl
rorb
daa
cs
outsl
or
dec
sbb
dec
pop
push
outsl
fidivl
mov
imul
pop
mov
das
and
push
push
das
xor
cs
dec
and
or
adc
sbb
xor
sub
mov
sub
mov
outsw
insl
pop
xor
dec
and
push
in
add
xor
push
mov
or
stos
scas
cmpsb
inc
mov
outsb
mov
or
andb
fldcw
rolb
int3
pop
fisubrs
pop
arpl
movsbw
ret
inc
ja
push
inc
mov
daa
fldcw
pop
repnz
shlb
pop
pop
sbb
cmc
inc
jo
adc
mov
inc
jge
cmp
ds
adc
cmpb
mov
pop
sti
mov
pop
pop
inc
mov
dec
mov
or
or
add
sbb
inc
push
add
and
mov
insb
inc
inc
pop
cwtl
fistpl
cmp
aas
add
lds
addr16
negl
daa
add
push
rclb
in
and
outsl
inc
cmp
mov
aaa
sbb
xchg
push
lds
jnp
insb
jg
insb
xor
aas
out
int3
lcall
outsb
inc
daa
dec
xchg
pop
leave
xchg
inc
inc
leave
xchg
pop
leave
cmp
pop
leave
xchg
pop
sub
and
pop
leave
xchg
add
scas
fisubl
jecxz
daa
push
mov
or
cmp
iret
jnp
push
add
jnp
sti
or
aam
adc
hlt
dec
iret
sarl
test
sahf
cmpsl
stc
cmp
in
enter
cmpsl
test
dec
dec
out
fidivrs
push
je
cmp
repz
and
or
inc
out
mov
inc
sbb
inc
sahf
ja
push
cmp
in
out
or
pop
fistpl
add
jl
inc
sub
sbb
in
sub
dec
fadds
movsb
add
outsb
lret
add
add
push
jo
push
mov
adc
mov
out
pop
inc
mov
jmp
jne
scas
jbe
jg
mov
stos
ja
add
sbb
cltd
in
outsl
fs
inc
add
enter
nop
dec
mov
adc
adc
outsl
xchg
or
leave
add
inc
inc
pop
enter
add
cltd
fs
dec
sbb
in
xchg
dec
repnz
add
outsl
xchg
negl
enter
add
push
mov
push
lods
fcoms
sub
outsl
out
in
stos
mov
dec
repz
dec
xor
dec
test
pop
enter
fs
lods
leave
mov
jl
je
pop
scas
add
outsl
out
add
sbb
xor
decl
iret
test
xchg
or
leave
add
sub
pop
enter
outsl
sub
push
sarb
cmp
add
enter
dec
sbb
jnp
inc
pop
les
push
xchg
or
rclb
add
sbb
xchg
or
ja
out
inc
push
pop
dec
ja
xchg
pop
leave
and
sbb
leave
lds
out
add
mov
dec
outsl
add
xchg
or
fbld
outsl
adc
nop
and
dec
scas
sbb
and
push
xor
push
mov
inc
dec
pop
scas
add
xchg
outsl
out
xor
nop
cmpsl
fsubrs
add
call
cwtl
add
push
repnz
sbb
add
shrl
outsl
push
dec
pop
leave
mov
sbb
addr16
push
pop
outsb
es
call
sbb
dec
mov
lcall
call
fwait
loope
push
jg
push
xor
mov
movsb
add
adc
xchg
pop
sbb
jo
out
sub
add
jno
mov
xchg
push
testl
sbb
insb
inc
shrb
push
lods
sbb
stos
outsl
jg
add
push
xchg
daa
testl
push
add
cs
je
sbb
scas
push
scas
sub
out
fst
push
or
push
out
or
bound
or
mov
adc
pop
pop
fcoml
inc
sbbb
pop
mov
and
and
fcmove
out
add
xlat
or
sahf
push
enter
xchg
adc
adc
insb
and
mov
push
pop
mov
or
aaa
and
add
add
shl
push
scas
jo
clc
push
test
fs
aaa
mov
adc
insb
pusha
pop
leave
add
in
outsl
mov
add
and
dec
jo
xor
in
and
out
outsl
xchg
xorb
je
test
mov
mov
push
scas
mov
add
cwtl
movsb
leave
lock
addr16
pop
xor
adc
add
push
and
cmp
add
pusha
dec
sub
pop
inc
cs
call
lods
scas
in
sti
push
jo
das
outsl
add
ss
xor
bnd
fdivr
push
pop
or
push
in
ret
push
sbb
aaa
add
nop
xchg
sub
and
push
movsb
cmpsb
jo
mov
andl
xor
add
pusha
daa
and
sub
pop
leave
xchg
int3
daa
or
mov
into
xchg
add
ret
mov
push
push
mov
pushf
dec
sub
ss
xchg
push
dec
or
ljmp
dec
scas
or
and
or
daa
in
hlt
push
add
sub
movsb
push
pop
outsl
add
dec
pop
or
dec
sahf
andl
add
xchg
dec
adc
jl
loopne
lock
addr16
movsl
arpl
pop
pop
scas
insb
and
add
rcrl
lock
and
add
nop
lahf
lea
add
pop
or
sub
out
mov
or
ss
nop
add
pop
ltr
ficomps
push
das
sub
mov
cwtl
mov
dec
sahf
imul
xlat
imul
add
enter
sub
fcomps
mov
xchg
sub
inc
fsubl
or
sbb
fldt
ja
push
pop
outsl
out
mov
dec
das
outsl
fiaddl
mov
mov
xlat
aad
pop
pop
data16
pop
pop
jnp
xchg
sub
lock
inc
sahf
cmp
sub
addr16
mov
or
mov
inc
in
push
pop
pop
js
subb
insb
pop
xchg
inc
cmp
fbstp
push
hlt
aam
xor
add
inc
mov
imul
repz
ret
adc
jnp
cmpsl
cmp
push
mov
adc
mov
add
ds
shll
push
push
pop
push
repz
out
pop
pop
inc
jo
sti
cmp
xchg
repnz
push
add
lahf
out
mov
jns
iret
repz
jl
out
int3
cld
aaa
pop
addr16
ds
xchg
ret
inc
pop
jns
jns
js
lret
sub
push
cwtl
sarl
mov
jbe
imul
arpl
iret
sarl
lds
fs
jp
sahf
cmpsl
stc
cmp
add
dec
test
jns
jns
daa
data16
cltd
out
xor
les
int
es
pop
xchg
shlb
push
xchg
cs
out
imul
test
icebp
es
fxch
out
sbb
test
outsl
dec
lahf
out
cmp
loope
jo
add
cmpsl
stc
xor
sub
js
ds
repz
push
jae
lret
add
out
cmp
push
jne
jns
out
roll
inc
insb
movsl
repz
out
adc
xchg
stc
cmp
out
js
jns
loop
jp
xor
cmpsl
sar
jnp
clc
sarl
cmp
cmp
jg
stc
cmp
lods
enter
add
imul
xorb
dec
xor
iret
repz
fstps
add
repz
mov
test
shlb
sarl
enter
adc
push
cwtl
shll
mov
mov
push
mov
repz
out
lds
mov
idivl
iret
roll
lea
mov
dec
repz
enter
xor
out
xor
fcoml
xchg
jb
ds
repz
and
xor
out
jge
in
setne
jns
out
movb
xor
jns
int
fcoms
cwtl
insb
ds
out
fwait
rolb
sti
out
shrl
mov
sti
mov
push
stc
lds
ds
repz
push
cmpsl
sahf
loope
test
lahf
out
jg
in
sub
repz
ljmp
mov
repz
out
out
lods
imul
mov
mov
rorb
jo
mov
insb
mov
mov
mov
mov
and
mov
mov
testl
imul
stc
inc
aas
rcll
ss
push
push
xchg
notrack
cmp
das
cmp
jns
add
subps
aas
shrb
pushw
aaa
stos
popf
mov
les
xchg
pop
jb
inc
mov
xchg
adc
and
push
ss
cmp
jg
das
inc
fadd
sbb
push
aas
int3
jg
cmp
pop
aas
lds
cmp
jo
inc
pop
jg
dec
push
mov
in
pop
ds
jns
fldt
adc
cltd
pop
popa
xchg
xchg
aas
lcall
cmp
jecxz
iret
rcrb
inc
push
mov
mov
or
mov
mov
aas
mov
adc
inc
mov
mov
xchg
fnstsw
fldt
xchg
mov
mov
shll
divl
push
idivl
enter
pop
sbb
int3
popf
cs
loop
pop
scas
in
inc
jb
iret
jne
push
sub
adc
xchg
adc
inc
mov
adc
xchg
xor
sbb
jo
inc
out
cmp
in
push
push
add
cmpsl
cmpsl
loope
inc
mov
sti
pop
pop
aam
clc
shl
cmp
jg
pop
in
pop
in
push
es
lods
incb
enter
addr16
cmp
loopne
pop
movsb
aas
in
push
push
push
out
xor
inc
cmp
mov
inc
sbb
scas
xchg
mov
push
push
inc
xchg
xchg
ficoms
xchg
and
sub
add
lret
aam
xor
push
xchg
xchg
addr16
pop
fs
dec
dec
dec
insb
je
inc
repnz
xchg
push
add
mov
leave
mov
leave
and
bound
cmp
xor
dec
pop
test
fdiv
add
mov
rorl
xchg
shll
push
lcall
outsb
xchg
push
pop
push
push
mov
fsubrs
and
xchg
movsb
iret
pmulhuw
mov
push
inc
push
cmc
sbb
mov
outsl
add
imul
repnz
sub
mov
inc
movsl
lock
jl
pop
and
lahf
add
fidivl
in
inc
les
call
pop
and
pop
pop
adc
xchg
sub
sbb
jb
push
inc
push
dec
push
add
iret
repz
bound
iret
repz
orl
push
dec
nop
jl
fisttps
dec
insb
mov
dec
int3
insb
mov
xchg
adc
mov
and
add
in
inc
adc
xor
cmc
insb
push
insl
xchg
inc
lds
cmp
pop
inc
pop
pop
dec
pop
push
pop
pop
leave
jae
pop
xchg
test
daa
daa
lea
dec
sahf
out
add
push
adc
jb
xchg
fsubp
pop
jb
jb
idiv
mov
xchg
and
pop
xor
xchg
and
pop
inc
pop
dec
pop
jmp
inc
xor
mov
in
jbe
pop
test
mov
leave
adc
pop
pop
outsl
mov
push
add
inc
pop
jo
mov
ud0
repnz
out
add
pusha
xchg
dec
loopne
and
sbb
inc
sbb
or
sbb
das
sub
mov
mov
mov
xchg
dec
or
jo
jo
leave
and
loop
dec
jb
pop
pop
ljmp
testb
pop
fdivrl
aas
ja
push
jno
xchg
daa
dec
imul
xchg
xchg
mov
mov
xor
mov
mov
leave
pop
repnz
sahf
inc
test
push
jb
lock
dec
cmp
fs
xchg
pushf
jmp
pop
clts
pop
adc
dec
mov
pop
pushf
jb
fcmovne
xchg
mov
xchg
inc
pop
dec
pop
push
xchg
add
mov
call
frstor
cmp
sub
daa
dec
cmp
add
jae
lahf
jo
rcrb
pop
jecxz
xchg
xchg
xchg
pop
out
pop
stc
pop
add
vmwrite
pop
and
out
sahf
out
or
push
sahf
out
sahf
or
or
sahf
out
adc
out
adc
jns
adc
adc
sahf
out
pop
jecxz
icebp
sbb
pop
negl
mov
fisubrl
xor
lods
je
push
dec
cs
dec
fcoms
add
les
int
stc
fiaddl
repz
faddl
mov
pop
out
pop
add
xchg
fsubl
push
pushf
in
js
jg
pop
les
sbb
xchg
pop
pop
pop
pop
daa
add
or
push
xchg
add
pop
fbstp
inc
aas
add
out
push
and
incl
leave
and
pop
pop
jbe
or
xchg
imul
lahf
jo
cmp
mov
in
popf
faddl
filds
hlt
popf
in
mov
pusha
and
ja
xchg
adc
pop
je
fsubr
into
mov
fs
test
std
push
int3
mov
fcoml
in
adc
rclb
jbe
cmp
lock
enter
popa
or
adc
fsts
and
pop
je
jae
dec
push
push
add
push
leave
and
add
xchg
cmp
inc
inc
jns
sub
in
enter
call
mov
cmp
out
popa
idivb
inc
sahf
cmp
xlat
iret
add
add
cmp
jp
fsubrl
cmpsl
cmpsl
bound
pop
cmovbe
adc
add
push
jp
dec
jp
cltd
xchg
pop
and
cmp
inc
es
xchg
bound
rclb
dec
cs
and
mov
arpl
jg
sarb
mov
xchg
push
ret
insb
push
iret
inc
jl
jl
push
rcrl
pop
in
daa
fists
leave
mov
fs
jnp,pt
cmp
fs
mov
fs
vmread
cmovno
jns
popf
fs
daa
in
and
jmp
add
js
testb
aas
sbb
jge
jge
in
repnz
adc
jns
nop
jno
jl
xchg
out
jns
gs
xchg
add
cs
mov
data16
xchg
popf
inc
jb
leave
and
jle
push
add
add
jg
jb
and
pushf
jecxz
popw
mov
js
mov
data16
enter
out
mulw
popw
addr16
lret
lret
lret
addr16
addr16
addr16
addr16
lret
lret
lret
das
addr16
addr16
addr16
addr16
lret
lret
lret
dec
addr16
addr16
addr16
jmp
femms
or
or
or
cmp
cmp
or
push
add
add
add
in
xor
add
and
mov
cmpsl
mov
in
mov
or
jp
cmp
call
push
movl
add
je
addr16
jp
cmp
mov
mov
js
sub
fcmovnbe
jecxz
xchg
jmp
mov
xchg
and
push
ud2
out
cmp
or
push
cltd
loope
and
imul
aam
xchg
xor
into
outsb
pcmpeqd
jle
in
xchg
mov
or
cmp
sahf
fildl
iret
add
push
leave
ja
in
testb
push
push
out
aaa
or
decb
jns,pn
dec
push
push
movd
add
push
xchg
dec
xor
jmp
ja
les
push
aas
movsl
roll
add
pop
or
out
or
into
shll
adc
xor
iret
rcll
dec
add
dec
sahf
ja
pop
popa
push
add
dec
sahf
out
add
push
and
outsl
popf
push
test
daa
mov
out
fisubs
jns
daa
out
add
lock
imul
add
pop
push
imul
cmp
pop
pop
popa
imul
test
cwtl
mov
jae
cmp
iret
mov
lods
in
xchg
pop
add
adc
cmp
insb
sub
aas
out
sahf
out
push
dec
pop
push
or
or
jbe
setle
jns
or
or
adc
and
out
aaa
rorb
add
jo
adc
insl
outsl
fadds
pusha
outsl
jns
jno
sbb
pop
mov
cmp
mov
mov
rorl
shrl
or
adc
sbb
rorl
outsb
push
outsb
fisubl
mov
insl
outsb
enter
dec
mov
daa
daa
daa
fsub
call
outsl
aas
clc
outsb
outsl
add
outsl
mov
adc
inc
outsl
xchg
pop
leave
adc
lods
subb
in
mov
outsl
cwtl
xchg
popf
pushf
pop
and
lret
jb
cld
mov
mov
mov
addr16
and
jo
jo
dec
jo
jo
imul
jo
inc
out
cmp
push
aaa
mov
int3
pop
xor
mov
push
cmp
stos
mov
inc
jb
enter
jo
jo
jo
xor
jo
or
mov
jno
sub
jb
enter
jno
jno
jno
inc
mov
jno
jno
jno
cltd
loopne
xchg
jno
jno
jno
or
xchg
stos
in
mov
xchg
iret
lock
enter
jb
jb
jb
dec
ss
decl
adc
xchg
mov
push
dec
cs
out
mov
and
mov
shufps
jl
ja
adc
jmp
addr16
xchg
jae
push
jae
das
cmp
xchg
jae
pop
outsl
add
in
outsl
xchg
jae
xchg
jae
jmp
fwait
nop
xlat
mov
pushl
repz
mov
sub
xor
je
jmp
mov
mov
jno
mov
jns
leave
mov
ja
ss
call
cli
in
dec
icebp
add
or
add
xchg
xchg
lahf
shr
jne
and
sub
or
ud2
ret
jns
or
dec
jne
pop
leave
jecxz
sub
cmp
or
mov
les
mov
jae
out
addr16
outsb
daa
adc
adc
dec
xor
jg
leave
and
das
xor
cmp
repnz
daa
pop
pop
fs
lods
leave
leave
leave
inc
xchg
jbe
ja
enter
adc
add
add
nop
xchg
sbb
xchg
add
ja
leave
jae
push
xchg
in
scas
pop
dec
ja
ja
es
mov
ja
fwait
dec
push
fnsave
mov
fucomi
jbe
mov
rcrl
enter
sarl
ja
xchg
pushf
in
ja
xchg
push
js
inc
mov
push
js
js
js
js
and
xchg
add
icebp
in
jb
lahf
jp
adcb
js
js
js
xchg
xchg
xchg
xchg
js
js
js
js
shrb
xchg
js
js
pop
ud2
jb
jb
or
or
jb
jb
push
add
jae
add
ficompl
loop
cmp
repz
sbb
sbb
cli
push
add
or
sahf
xchg
push
and
sbb
js
out
and
and
mov
jns
fdiv
cmp
pop
data16
cmp
cmp
into
inc
cltd
pop
mov
outsl
ret
push
lret
daa
iret
fwait
pushf
jns
pop
fimull
out
xchg
cmp
std
jns
add
and
adc
jp
push
fcoml
jae
cmp
pop
pusha
push
mov
push
add
aas
pop
orb
push
mov
ds
dec
sahf
out
or
sahf
out
or
adc
xchg
jl
xchg
loopne
das
xchg
out
lock
aam
jnp
sbb
jnp
sbb
sbb
jnp
aaa
xchg
jl
scas
or
xchg
nop
iret
outsb
mov
mov
test
iret
mov
ror
and
gs
or
jmp
push
js
daa
rcrb
repnz
out
jnp
xchg
adc
sbb
jl
leave
inc
dec
repnz
xor
fmulp
push
dec
cs
xchg
dec
dec
mov
loopne
dec
dec
dec
jmp
add
mov
adc
and
jge
pop
and
xchg
xchg
xchg
xchg
jge
jge
and
sbb
mov
dec
xchg
iret
xchg
cmp
jmp
inc
int3
leave
in
iret
dec
outsb
sahf
les
cld
cmp
mov
jl
pop
add
push
cwtl
mov
mov
enter
jle
jle
and
pop
sub
jle
cmove
repz
pushf
dec
push
or
mov
pop
je
out
jns
jl
test
mov
xchg
pushf
jle
adc
pushf
dec
ds
add
fdivrs
jbe
rcrl
repnz
in
jl
pop
lcall
or
sub
xor
cmp
inc
add
push
das
push
jg
inc
xor
lcall
xchg
push
xchg
setle
mov
add
and
nop
jns
dec
repnz
mov
subb
xchg
dec
fiadds
push
jno
aas
rsm
repz
or
pop
cmp
add
add
cmp
push
sbb
js
pushf
cmp
add
fcomps
cvtdq2ps
in
loopne,pt
call
pushf
je
add
cs
add
out
or
and
cmp
push
scas
inc
adcl
mov
subl
je
pop
test
fwait
cmp
mov
in
adcb
mov
or
out
mov
and
faddl
inc
mov
test
insb
pop
fs
addb
outsl
adcb
addb
push
popf
mov
push
call
push
jmp
mov
iret
add
daa
leave
xchg
sub
cmpb
inc
ja
mov
fcomp
daa
js
rorb
hlt
cld
xorb
push
scas
pop
adcl
dec
ja
mov
xor
vpshuflw
add
inc
fcoms
add
sahf
call
mov
xchg
mov
mov
pop
into
or
add
out
and
sub
lahf
add
add
xchg
xchg
xchg
xchg
test
xchg
test
xchg
test
jns
out
or
or
sahf
push
ret
int
fadds
test
lahf
jmp
jb
test
or
inc
jle
addb
jb
enter
test
repnz
inc
add
mov
mov
cmp
ss
dec
push
in
enter
testb
adc
in
fildl
pop
push
pop
xor
cmp
push
ss
or
jo
dec
xchg
nop
xchg
dec
and
mov
push
leave
dec
pop
mov
pop
in
clc
push
add
sbb
and
xchg
pop
arpl
inc
nop
xchg
int
mov
outsb
fstp
push
inc
scas
dec
push
pop
dec
call
out
in
add
push
add
repz
orb
in
xchg
fsub
stc
out
mov
or
addr16
xor
outsb
ja
pop
push
aas
push
pop
leave
jae
cmpsl
push
enter
daa
daa
js
addb
mov
nop
pop
daa
daa
adc
sbb
mov
ret
mov
daa
lret
out
xchg
enter
mov
push
add
ficoml
jns
pop
mov
mov
cs
push
cmovp
dec
mov
xchg
movsl
outsl
mov
push
fisubs
ja
mov
cmp
mov
cs
xchg
pop
verr
das
das
mov
mov
jb
pop
das
sub
xchg
cmp
sbb
mov
or
jns
mov
into
popf
xchg
mov
mov
jbe
mov
shll
pop
in
cltd
cmp
cmpsl
cld
add
xchg
add
lods
daa
mov
mov
in
ss
mov
cmova
dec
add
push
push
pop
lar
jae
dec
or
addr16
outsb
daa
daa
pop
mov
ss
jl
cmpsl
mov
cs
mov
iret
call
mov
and
addr16
fsubrl
daa
ss
xchg
test
hlt
and
mov
lcall
jb
sahf
mov
addr16
lock
pop
jb
int3
and
dec
add
inc
dec
cmpsl
pop
lea
fists
in
push
add
dec
aaa
jns
or
push
mov
add
adc
or
movsb
repnz
jo
lea
lret
push
loopne
lea
js
inc
aas
clc
add
mov
add
add
add
and
sub
inc
out
movsb
fldt
dec
dec
adc
push
cmp
repz
pop
adc
adc
push
fistps
mov
cmp
stos
stos
pop
push
inc
mov
mov
out
dec
and
outsl
pop
xor
mov
out
fisubrs
xor
iret
cmp
cmp
inc
dec
push
or
jae
cmp
pop
pop
push
pusha
out
outsb
daa
push
or
pop
lods
adc
orl
cs
add
es
lods
loopne
out
je
leave
leave
repz
nop
adc
repnz
pop
fists
cmp
cmp
xor
lcall
pop
out
fsubrp
mov
mov
mov
je
lret
add
setg
nop
jns
xchg
nop
loop
ljmp
cli
adc
xchg
or
jns
sbb
and
pop
sbb
pop
ja
pop
dec
ja
xchg
lods
enter
jo
xchg
pop
adcb
xchg
xchg
xchg
lcall
jbe
dec
stos
push
or
iret
mov
or
movsb
fwait
cmp
dec
cs
aas
rolb
lcall
xchg
setb
ss
xor
cmpl
fisttpll
pop
pop
or
bound
jg
inc
stos
jb
pextrw
or
pushf
mov
xchg
or
or
pushf
cmpsl
into
rcll
cwtl
in
popa
call
cltd
sub
ror
enter
daa
add
jp
xchg
inc
add
and
scas
push
cmovs
jnp
xchg
pushl
mov
xchg
cmp
in
inc
add
sahf
ja
mov
push
add
enter
dec
loope
jmp
out
push
stc
call
or
add
cmp
or
and
xchg
and
sub
adc
fs
dec
xchg
pop
jae
pop
xchg
inc
mov
xchg
cmp
cwtl
push
add
loop
mov
in
mov
xchg
xchg
pushl
inc
xor
pusha
fs
aaa
jns
add
push
add
pop
outsl
mov
cwtl
jmp
mov
xchg
out
mov
pop
or
xchg
clc
addr16
and
and
sub
mov
push
pop
punpcklbw
and
xchg
xchg
xchg
add
in
mov
rcll
fcmovnbe
push
fbstp
inc
xchg
xchg
sub
add
daa
iret
repz
cmp
and
jns
push
adc
out
inc
mov
or
fxsave
pushf
cmpsb
xchg
scas
clc
mov
in
in
mov
mov
in
shl
jmp
sbb
adc
bndstx
mov
ucomiss
push
je
daa
daa
daa
xchg
mov
fsts
sbb
inc
repz
xchg
mov
nop
sbb
sbb
push
mov
lock
push
and
lcall
push
push
ds
mov
mov
fcoml
push
inc
push
add
mov
mov
mov
pop
jo
mov
pop
in
lcall
daa
jp
setnp
fwait
pop
mov
leave
xchg
fwait
sub
inc
cmpsb
rcrb
or
leave
inc
repnz
leave
leave
xchg
mov
lahf
fcmovne
mov
add
or
inc
in
cmc
std
add
data16
es
add
cmp
repz
or
iret
repz
dec
or
pop
or
iret
cmp
data16
push
push
jbe
fs
sub
jle
adc
enter
leave
pushf
mov
enter
pushf
pushf
pop
in
mov
movsbl
pushf
repz
in
in
pushf
push
popf
push
popf
push
popf
in
in
and
aas
popf
in
in
inc
popf
dec
popf
push
popf
pop
popf
loop
in
addr16
outsl
popf
jp
test
outsl
nop
popf
fwait
popf
cmpsb
popf
jns
in
mov
mov
int3
out
sahf
out
xlat
and
and
and
and
and
add
push
sbb
jns
out
and
sub
je
cvttps2pi
inc
mov
lds
dec
dec
sahf
xor
mov
jl
cmp
int
pop
mov
xchg
push
dec
jb
cmpsl
das
pushf
sahf
movsb
sahf
mov
aad
sahf
pavgb
sahf
lahf
iret
clc
pop
dec
dec
dec
mov
add
jns
add
xchg
cmp
lahf
mov
dec
lahf
lahf
lahf
push
daa
daa
daa
iret
add
daa
daa
daa
in
push
mov
push
aaa
push
pop
xchg
out
sahf
gs
adc
jbe
mov
lea
xchg
hlt
in
in
shr
or
dec
dec
adc
sub
leave
leave
xor
inc
pop
dec
mov
out
and
seta
jns
outsb
pop
lahf
cmpsl
lds
sahf
out
sub
repz
mov
repnz
mov
cmova
das
dec
push
out
jbe
cmp
pop
movq
sub
mov
mov
mov
hlt
push
decl
mov
fldcw
mov
inc
dec
and
mov
add
in
cltd
shld
mov
shr
icebp
add
xchg
test
movsb
cmp
movsb
cmovno
sahf
out
push
add
in
pop
js
or
ud2
cltd
or
out
mov
enter
sahf
xchg
rcr
adc
hlt
mov
decl
movsl
pop
adc
int3
pop
and
sub
sbb
leave
repz
sbb
sbb
push
bound
insl
lock
cmp
js
orl
pop
cltd
movsl
movsb
movsl
scas
movsl
mov
pop
ljmp
sarb
cmpsb
mov
adc
mov
jns
outsb
addr16
add
cs
repz
cmp
push
repz
cmp
orb
or
cwtl
push
or
jns
out
femms
ds
mov
popf
cmp
in
rorb
enter
xchg
out
adc
lar
mov
call
mov
cmpsl
ficomps
stc
lock
cwtl
ficomps
rolb
es
push
scas
adc
and
in
jns
add
xor
aas
fsubs
jg
inc
cmpsl
decl
mov
mov
outsb
jbe
add
fcmovne
jle
mov
setbe
jl
sarl
in
rcll
sahf
pop
and
add
and
sahf
pushf
adc
test
lods
sahf
ja
pop
aas
addr16
cmovg
add
pushf
fmull
outsl
push
pop
and
leave
ja
clc
lcall
stos
add
cmp
pop
leave
jae
in
add
or
cmp
and
xchg
inc
ja
push
aad
pushf
push
add
in
ss
jle
xchg
add
xchg
add
cmpsb
push
in
cmp
jg
ret
daa
daa
mov
loope
icebp
fwait
mov
stos
jg
cmpsl
cmp
inc
and
sub
xor
mov
jae
cmp
add
les
mov
pop
addr16
outsl
ja
pop
leave
jae
jg
mov
stos
add
jbe
pop
lret
fisubrl
pop
loop
mov
jg
inc
into
dec
add
adc
xchg
out
add
xchg
out
cmp
push
data16
push
stos
outsl
or
fucomi
in
js
orb
cmp
cwtl
xchg
add
jb
ret
lret
rcr
jnp
xchg
pop
call
daa
iret
jae
push
push
add
sub
xor
outsb
xchg
xchg
dec
push
lods
lods
ja
in
in
jns
jl
fistps
cmpsl
scas
fsubrl
mov
ja
pop
iret
jae
leave
repz
leave
xchg
pop
leave
clc
adc
inc
cmp
inc
dec
repz
mov
lods
pop
xchg
add
leave
pusha
add
out
cwtl
jbe
mov
mov
cmp
das
scas
or
add
pop
push
scas
and
repz
inc
or
cmp
repz
fs
outsl
push
jp
scas
pslld
repnz
scas
fwait
scas
cmpsb
scas
mov
repnz
scas
call
scas
or
adc
pop
scas
sub
dec
mov
sbb
pushf
pushf
pushf
pushf
sbb
pop
push
repz
pushf
pushf
adc
repnz
sub
sub
or
das
insb
push
movd
fucom
xor
ja
jge
push
ss
mov
jns
out
mov
out
sahf
iret
cmp
cmp
out
lock
sti
inc
push
mov
jns
roll
inc
push
sbb
sahf
out
sahf
daa
inc
xor
cmp
jns
push
dec
pop
dec
sahf
out
cmovp
imul
fmull
mov
dec
mov
push
stos
push
mov
cmp
cmp
in
stc
je
out
clc
mulps
mov
cmp
sbb
sbb
mov
push
xor
pusha
outsl
enter
sarl
into
mov
jns
xchg
mov
add
add
mov
mov
mov
mov
adc
mov
add
shlb
jg
mov
outsl
call
insl
in
dec
clc
mov
outsl
or
inc
loope
sahf
xor
cmp
ficoms
sub
inc
mov
lret
enter
mov
mov
repz
pop
mov
add
sub
xchg
or
int3
lret
inc
push
leave
jp
lods
int3
pushf
int3
test
int3
outsb
mov
sbb
sbb
cmp
push
pop
clts
and
out
pushf
pushf
pusha
push
das
sahf
xchg
cmp
outsb
dec
mov
fwait
pop
rclb
adc
int3
in
dec
and
jo
jb
mov
mov
add
push
int
mov
mov
cmp
lods
sti
movl
mov
mov
sbb
add
mov
pop
fmull
cmpsl
push
add
mov
sahf
out
popf
jne
addb
or
out
xchg
or
jb
mov
ret
sub
out
adc
repz
cmpsl
mov
adc
ficoms
cs
sbb
repz
sbb
pop
xchg
out
fwait
nopl
addr16
cmp
jb
jge
push
and
sahf
pop
mov
mov
push
daa
lret
loopne
jg
inc
leave
sub
repz
inc
add
mov
pop
add
mov
jg
iret
iret
xchg
xchg
xchg
test
jns
xchg
ret
fsub
push
outsb
repnz
push
out
pop
stc
pmulhw
mov
add
mov
mov
mov
mov
xchg
pop
sbb
movd
mov
xchg
xchg
xchg
xchg
mov
mov
mov
jb
repz
jge
mov
xchg
sbb
movhps
iret
push
mov
and
and
aad
and
add
mov
divb
cmp
sub
pop
test
jns
sub
sub
add
loope
fxch
das
mov
daa
fwait
lret
dec
adc
push
shrb
push
and
shll
outsl
repnz
xchg
xchg
push
add
mov
outsl
sarb
das
psraw
dec
sahf
out
or
add
dec
adc
jns
femms
bndldx
in
bnd
pusha
mov
push
mov
out
add
add
sahf
out
mov
mov
xchg
enter
or
jle
out
lahf
idivb
out
add
rcll
and
mov
sbb
rcr
mov
mov
push
jns
int3
mov
jae
dec
lock
lret
out
or
shl
sti
lea
ret
push
mov
mov
mov
pop
cmp
mov
aas
dec
or
xchg
and
mov
imul
sysret
adc
xchg
mov
in
pop
mov
push
sbb
sahf
out
popf
fidivrl
in
lock
sti
push
push
mov
sahf
out
pop
and
and
xor
inc
cmovle
and
cmp
adc
jge
sahf
out
cmp
xchg
scas
sub
jns
addr16
das
xchg
and
loopne
jmp
idivb
mov
push
push
push
sahf
xchg
out
push
pop
es
jbe
jns
cmovbe
dec
jns
out
push
pop
pcmpgtd
rorl
out
adc
out
jbe
cmp
jle
xchg
cmp
in
mov
cmpsb
cmpsb
aaa
jns
out
scas
sbb
movntq
dec
push
into
push
and
out
jns
and
and
out
bnd
sahf
and
es
mov
push
mov
das
es
leave
repz
sub
ss
sub
out
inc
dec
xor
out
cmp
popw
outsb
xor
iret
mov
xchg
pushf
fsubrl
sahf
pop
scas
mov
fcmovne
repz
mov
xor
aad
lret
or
cmp
dec
es
sbb
dec
sahf
push
in
push
inc
dec
lret
dec
inc
inc
pop
push
push
pushl
sbb
mov
aas
mov
out
or
dec
jae
jl
mov
ljmp
xor
mov
push
gs
or
inc
inc
add
hlt
xchg
cmp
adc
in
cmp
inc
stos
ljmp
adc
hlt
xchg
inc
cs
inc
push
xor
dec
fiadds
sbb
aas
dec
stos
sbb
pop
mov
pop
ljmp
ret
aaa
les
pop
sahf
out
in
call
loopne
fcom
jns
out
ror
sarb
mov
test
jl
je
insb
repz
repz
out
cmp
dec
inc
cmp
push
sub
out
sahf
and
add
xlat
lock
repz
loopne
rorb
xchg
mov
and
jo
jae
jns
pop
push
push
add
iret
repz
sbb
jbe
repnz
or
or
mov
mov
or
adc
adc
adc
and
daa
mov
pop
inc
inc
push
addr16
in
jbe
push
xorps
repnz
shrl
jo
jb
mov
andb
cmpb
mov
pop
xchg
sub
mov
xchg
sahf
mov
ret
xchg
fildl
sbb
data16
popa
popa
dec
or
mov
andl
pop
mov
push
and
and
call
inc
stos
sbb
pop
test
or
pusha
ljmp
movsb
add
in
lods
pusha
cmpb
cmpsb
fisttps
mov
sbbl
mov
xchg
inc
mov
popf
pop
rcrb
mov
sbb
out
ja
stc
in
call
adc
push
cmpsl
in
pop
fidivrl
xor
fcomp
loopne
jb
mov
xchg
jle
in
inc
les
fcomps
pop
cwtl
lret
adc
cmp
inc
mov
jle
sub
inc
call
fdivrs
insb
sub
incl
xchg
insb
xor
das
mov
pop
orb
pop
aas
ja
sub
filds
iret
repz
or
or
sahf
out
adc
add
repz
adc
fstpl
pushf
sbb
repz
cmp
add
js
fldcw
sahf
mov
jl
fimull
fsubrl
fildl
fcmovu
repz
mov
jns
jp
jno
out
push
cld
cwtl
incl
lods
lea
add
call
fsub
outsb
loopne
add
inc
pop
shlb
jne
mov
daa
fbld
sbb
push
cwtl
dec
loope
sbb
xorb
adc
iret
icebp
addr16
push
push
mov
popf
sub
inc
orb
rorb
sub
inc
out
aas
pop
push
pop
push
sub
dec
cmp
dec
xor
xor
fcoms
and
setp
adc
push
lods
mov
xchg
cs
and
aas
xchg
es
mov
loopne
push
sbb
sbb
sahf
out
andb
push
ds
out
fimuls
adc
jo
out
testl
iret
repz
and
push
or
or
out
adc
je
sahf
out
iret
pop
adc
push
sbb
jns
out
inc
pop
cmp
xor
jns
out
xor
and
and
sbb
test
jg
xchg
xor
orb
in
mulb
inc
cld
xorb
dec
mov
incl
xorl
jg
sahf
out
pop
cmp
pop
js
mov
xor
out
repz
xor
xor
in
insl
add
out
or
lcall
and
testl
decl
mov
add
cli
or
or
inc
ds
ret
mov
adc
cld
xchg
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
mov
loopne
jmp
xchg
test
mov
cmp
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
lcall
subb
fwait
xchg
and
and
lahf
pop
int3
add
sti
aas
jno
or
mov
pop
fs
dec
decl
cmc
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
jmp
add
aas
xor
aad
mov
std
std
into
popa
test
ja
ljmp
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
incl
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
xchg
or
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jmp
xchg
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
inc
push
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
jmp
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
pop
ficomps
frstor
pop
mov
pop
out
inc
dec
or
daa
cmpsl
aam
hlt
ja
jnp
pop
sub
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
movsb
mov
aad
mov
rclb
mov
sub
mov
lcall
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
call
shrb
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
lcall
mov
leave
mov
insb
fdivs
jne
filds
or
shrl
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
and
or
adc
stos
sbb
inc
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
ja
ret
xor
mov
js
stos
mov
call
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
incl
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
mov
je
mov
aam
movsl
fisttps
fadd
shll
call
push
imul
mov
sarb
add
in
add
pop
dec
or
fnstsw
add
daa
adc
or
and
test
or
mov
popa
dec
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivr
pushl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
ljmp
sbb
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
mov
mov
shll
push
repnz
addr16
cmpsb
fldl
pusha
inc
pushl
dec
fisubrl
or
scas
testb
lcall
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
sar
mov
rclb
or
add
mov
das
es
lds
loopne
pop
loopne
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
incl
inc
pushl
push
jmp
addr16
jb
in
orb
adc
mov
ljmp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
mov
push
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
push
scas
fcompl
fldenv
filds
mov
pusha
mov
fidivrs
mov
ljmp
sbb
mov
lret
mov
jmp
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
cwtl
icebp
call
or
filds
sub
sub
or
cltd
fiaddl
sub
les
sbb
mov
in
lcall
pop
popa
xor
aam
push
pop
and
cmp
push
xlat
jns
out
fcomp
fcmovu
fsub
jns
out
fsubp
jecxz
jns
out
in
jmp
sahf
out
in
repz
cmc
sahf
out
sahf
div
clc
stc
cli
sti
add
add
mov
fists
inc
adc
xchg
pop
push
orb
movsb
xchg
push
push
in
sub
inc
ja
inc
inc
adc
bound
add
mov
bound
cltd
into
popa
je
push
dec
or
and
cmp
aas
lds
xor
pop
inc
cmp
pop
bound
insl
sti
mov
xor
popa
arpl
cmp
arpl
or
push
outsl
sub
xor
xor
xor
sti
imul
push
inc
jbe
pop
insb
imul
push
insb
gs
and
xor
inc
cmp
inc
shl
add
outsl
insl
mov
mov
or
popa
or
addb
push
je
lods
test
jbe
push
xchg
cli
gs
aas
inc
pop
adcb
insb
xor
je
inc
inc
inc
push
js
push
add
addl
sbb
xor
insb
inc
lds
popa
jns
push
dec
or
cltd
popa
xchg
cmp
inc
xorb
insb
aaa
jbe
cmc
lock
inc
push
sarb
lods
fadds
add
adcb
cltd
and
jae
mov
jp
test
daa
mov
inc
aas
fs
inc
pushw
mov
inc
inc
mov
sbb
sbb
inc
pop
out
xchg
orb
jo
inc
inc
add
pop
jbe
adc
ds
mov
scas
add
mov
iret
int
push
dec
cmp
stos
or
xorl
popl
inc
outsb
jne
mov
popa
mov
push
jge
xor
fidivs
adc
arpl
add
mov
push
clc
xchg
into
pop
inc
cmp
fidivl
in
or
push
dec
inc
cmp
test
adc
lret
dec
jl
rorl
push
add
outsl
adc
mov
push
lcall
cmp
mov
pop
mov
xlat
mov
and
xchg
loopne
scas
or
inc
jb
js
pop
mov
dec
popa
jo
push
nop
and
cmpsl
lahf
push
outsl
outsl
test
bound
push
jno
and
push
sti
mov
in
pop
or
dec
pop
in
nop
push
pop
or
test
or
out
arpl
cmp
adc
mov
pop
jo
push
mov
push
outsl
insb
jns
push
add
inc
das
inc
jb
push
notl
ss
inc
outsl
arpl
adc
mov
in
daa
sub
inc
push
bound
ja
cli
xchg
mov
inc
jbe
xor
imul
jg
push
dec
and
cmp
xor
pop
cmpsb
sbb
xor
xor
sbb
inc
push
sub
and
fcoms
ds
jp
or
dec
lods
jecxz
hlt
push
fwait
inc
and
add
adc
jo
outsb
rclb
call
push
inc
dec
pop
mov
je
jns
arpl
je
push
lcall
push
pusha
mov
aaa
dec
adc
inc
test
stos
adc
push
pop
xlat
out
inc
and
and
dec
sbb
push
add
add
fs
inc
adc
dec
or
bound
xchg
and
add
push
dec
push
outsl
or
fdivr
loopne
testl
or
fcomi
add
add
filds
add
or
pop
pop
push
or
or
or
or
or
dec
mov
adc
push
adc
pusha
add
outsb
xlat
decb
pop
sbb
adc
adc
adc
add
data16
loopne
mov
or
rolb
mov
jo
add
and
add
sahf
add
sti
add
inc
jle
add
dec
fldl
sub
shlb
imul
mov
add
push
adc
pop
and
xor
inc
mov
add
inc
adc
xor
cmpb
pop
fists
add
or
pusha
mov
sbb
push
cmpsl
jno
and
adc
inc
inc
mov
xchg
or
mov
adc
dec
and
scas
pushf
into
add
out
scas
adc
sarb
adc
push
adc
pop
popa
xor
stc
out
adc
or
xchg
mov
lock
pop
stos
and
loope
icebp
mov
mov
push
xor
xorb
scas
fiaddl
or
fisttps
adc
sub
rcr
call
xchg
and
sub
std
cmpsb
xor
aas
imul
mov
cmp
inc
or
pop
les
fsts
dec
add
or
cmp
add
ja
out
cmp
xor
mov
cmpsl
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
stc
stos
pusha
inc
inc
xchg
pusha
add
std
or
decl
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
inc
and
mov
bound
pop
lahf
mov
movsl
jecxz
pop
mov
mov
mov
xchg
jg
or
in
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
hlt
sbb
mov
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
lcall
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
mov
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
pushl
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
fcmovnu
incb
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
das
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
pusha
outsl
test
mov
jb
mov
mov
mov
sub
pop
mov
adc
xor
jl
rorl
adc
mov
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idiv
push
push
mov
imul
scas
fadds
in
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
test
subl
jb
adc
push
lock
lods
jp
testb
mov
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
jbe
idiv
adc
aaa
xchg
in
add
inc
adc
loope
fisttpll
call
icebp
aas
std
cli
push
push
push
idivl
pushl
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pusha
incl
aas
sti
punpckhbw
cmpsb
orb
mov
loopne
cmp
cmp
js
jmp
xchg
pop
clc
pop
hlt
mov
xor
movsb
add
lea
jg
call
cmc
jmp
std
xorb
jg
aad
adc
ret
das
pop
lcall
call
pop
shlb
out
sarb
sbbl
jno
or
sar
ljmp
les
cli
mov
mov
inc
arpl
stos
mov
lcall
pusha
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
lcall
cmpsl
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
das
clc
decl
add
ret
fcmovu
ds
cmpsl
scas
pushl
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jmp
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
in
pushl
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
lcall
sub
and
jae
shrb
call
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
loopne
idiv
pop
cld
addl
adc
and
xor
mov
lahf
fmull
enter
jecxz
scas
sub
pop
add
cli
in
pop
mov
mov
in
testb
mov
push
sbb
push
inc
or
pop
ret
cmpsb
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
mov
mov
push
push
sbb
stos
icebp
pop
incb
idiv
rorl
adc
push
inc
jecxz
sbb
sarl
adc
inc
sar
adc
lahf
push
in
inc
cmp
push
or
test
loopne
add
mov
fsubrl
pop
pusha
inc
fcomi
push
and
clc
dec
pop
adc
xchg
pushf
mov
repnz
or
and
mov
adc
inc
aas
clc
call
jnp
rcrl
rolb
pop
inc
jb
fistpl
adc
call
mov
addr16
pop
nop
mov
inc
sti
arpl
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
sub
xor
fsubr
fistps
lds
fidivrl
jg
decl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
cld
addl
cs
incl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
std
inc
pop
pop
test
bound
pop
outsl
pop
cmp
xchg
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
decl
daa
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
dec
cmp
shl
cld
mov
mov
js
pop
jg
pop
shrb
rcl
jg
adc
xor
std
lcall
mov
gs
pushf
lea
jp
jnp
jecxz
mov
lds
push
pop
adc
imul
or
inc
pop
xor
idiv
jmp
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
push
incl
fwait
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
add
insb
test
aas
repz
fwait
ljmp
sbb
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
push
ror
mov
xchg
pmullw
decl
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
dec
jg
mov
inc
out
pop
or
or
dec
ss
xchg
mov
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
outsl
das
or
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
aas
mov
cmpb
lods
jg
mov
sub
addr16
sbb
cld
daa
adc
std
jp
std
adc
cltd
or
mov
ret
nop
dec
cld
stos
jle
icebp
das
incb
lock
pop
pop
div
cld
idivl
addl
scas
stc
lahf
loope
andb
shrl
je
push
xor
mov
add
fs
call
out
icebp
mov
loope
mov
cmpsl
popf
sbb
mov
mov
fbstp
push
daa
outsl
das
int
pop
mov
add
cmpsb
cmp
call
popf
js
data16
decb
adc
mov
add
mov
or
or
add
fs
inc
add
loop
out
or
aaa
std
fistpll
cmp
inc
sbb
xchg
mov
pop
cmp
mov
aas
icebp
ret
ror
sbb
mov
adc
sub
adc
aas
pop
clc
loope
loope
mov
or
jp
dec
add
xlat
jbe
scas
and
fbstp
xchg
flds
call
and
fdivrl
xchg
lcall
decb
js
pop
fbld
sarl
pop
out
jg
dec
sbb
jno
ret
fs
mov
inc
sbb
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
mov
push
jae
popa
lds
outsl
pop
hlt
dec
add
pop
stc
push
dec
out
fstpt
mov
enter
popf
xchg
pop
add
cmpsl
mov
daa
icebp
push
lahf
sti
inc
lcall
aaa
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
add
xor
sub
inc
aas
add
cmp
add
sti
push
sti
pop
inc
xor
stos
inc
dec
push
mov
push
push
mov
int3
pop
iret
call
pop
les
dec
out
adc
fidivrl
decl
mov
call
inc
xchg
test
add
clc
orb
scas
iret
aaa
sub
pop
mov
cltd
push
inc
sbb
sahf
pop
addl
pop
jg
adc
push
out
adc
mov
cmp
inc
dec
cmpsb
add
orl
xchg
jg
or
shll
cwtl
dec
mov
and
fisttpll
cmp
insb
cmp
cmp
push
int3
sbb
cmp
out
aaa
arpl
dec
mov
mov
pusha
shll
das
fbld
outsl
push
xchg
or
in
icebp
hlt
or
js
mov
loopne
ljmp
push
mov
inc
sub
jmp
mov
sbb
das
mov
inc
les
inc
cmpsl
jno
test
add
ljmp
jl
mov
in
xchg
xor
and
mov
xor
adc
call
pop
lret
in
lea
ret
push
mov
mov
fstl
cmp
sub
fldt
sbb
lods
in
push
lret
add
les
sbb
test
stos
insb
inc
cmp
inc
push
fistpll
mov
cli
inc
stos
xor
std
push
mov
lods
stc
pop
sbb
push
add
jg
mov
pop
scas
push
jbe
xchg
sub
jno
adc
stos
mov
cmp
cld
fistpll
fists
pop
or
fildll
sub
mov
std
inc
pop
mov
dec
push
and
lea
add
push
ret
call
mov
lcall
stos
jnp
daa
sub
mov
xchg
shl
mov
outsl
aaa
xlat
fsubrl
mov
pushl
sbb
sbb
and
pop
popa
sar
jecxz
xor
or
push
dec
ljmp
xchg
adc
loop
lret
and
sbb
in
add
and
rorl
jnp
dec
call
push
mov
push
sub
test
or
mov
mov
xor
std
decl
lock
pop
sub
pop
jo
int3
rcrb
popa
sub
mov
push
jno
mov
mov
dec
add
xor
pushf
add
inc
mov
in
lcall
repz
pop
data16
xor
or
fbstp
ret
mov
dec
mov
call
xchg
sti
xchg
pop
leave
dec
mov
mov
dec
xor
and
lods
mov
inc
mov
decl
dec
andb
xchg
sub
push
bound
ja
sub
sti
decl
xchg
cwtl
scas
shll
add
dec
adc
mov
in
scas
loop
daa
lea
clc
ret
mov
call
and
aad
xchg
mov
out
bound
xor
push
nop
mov
and
xor
scas
sub
cld
jmp
dec
int3
pushf
add
sub
lret
shlb
push
jecxz
clc
ret
aas
sbb
decb
roll
jp
pushl
xchg
mov
mov
loop
sub
stos
mov
rclb
fwait
repnz
lock
ljmp
mov
xchg
in
popf
sub
mov
and
dec
jmp
cmp
pop
dec
clc
mov
sbbb
jge
frstor
ljmp
or
sub
cmp
clc
jg
ljmp
adc
fs
fists
lahf
inc
les
jbe
in
inc
xchg
decb
adc
pushf
push
loope
out
xchg
xor
mov
test
leave
iret
dec
push
stos
test
stos
xor
add
outsl
pop
mov
je
jb
in
es
std
lock
add
subl
pop
xchg
lods
out
dec
testl
mov
mov
cmp
jnp
mov
call
stos
push
xchg
fisubrl
ljmp
dec
jge
in
mov
sub
incl
arpl
add
xor
rorb
pop
dec
sub
xor
add
loopne
push
out
inc
clc
dec
inc
mov
mov
pop
scas
cmp
pop
ljmp
into
orl
mov
mov
push
cld
data16
rclb
mov
inc
movsb
cmpsl
adcb
ja
je
orb
push
sahf
das
hlt
mov
inc
popf
or
daa
jg
out
cli
stos
mov
mov
jg
sahf
cmp
movsb
and
test
pop
jae
cwtl
jbe
incl
mov
rol
xchg
push
mul
ja
enter
xor
cmovnp
cmp
cmp
pop
dec
cld
adc
iret
push
js
sub
mov
lahf
mov
mov
jmp
or
sti
es
mov
out
js
or
imul
lock
xchg
cmc
addr16
call
testl
push
push
outsl
lods
lods
insl
cmp
jg
jg
or
repz
xchg
jmp
sti
fidivrl
xor
push
stc
int3
in
sbb
lock
push
add
dec
sbb
fs
nop
ljmp
push
aaa
into
fsubl
rclb
and
xchg
mov
adc
and
shlb
call
jmp
jge
mov
in
repz
mov
mov
inc
and
mov
xor
xor
fildl
cmpsb
cmpsb
fwait
jae
cltd
push
shll
sti
cmp
xchg
lds
xor
push
frstor
ljmp
xor
rcr
pop
bound
test
dec
pusha
adc
mov
dec
sbb
jl
call
lock
addr16
incb
das
inc
in
pop
stos
push
in
xor
loopne
cs
lret
adc
scas
jg
in
shlb
lock
jge
pop
cmpsl
pop
xor
sbb
pushf
roll
mov
sti
cmp
adc
lods
xchg
push
popf
adc
cmpsl
xchg
xlat
xchg
cwtl
movsb
pushl
scas
jmp
adc
jae
gs
lods
mov
rcrl
or
lods
fidivrl
stos
incl
xor
dec
ret
hlt
data16
insb
subl
out
jg
call
test
bound
or
repnz
cmpsl
mov
mov
xchg
sub
push
or
cmp
pop
incl
sub
pop
mov
mov
in
dec
hlt
sbb
movsb
lea
scas
cli
jmp
push
add
xchg
fcmovnbe
in
out
adc
sbb
inc
imul
mov
jbe
ljmp
adc
dec
fistpl
stos
pop
sub
das
cli
adc
in
sub
fdivrl
inc
or
push
add
leave
mov
sub
pop
imul
sar
bnd
sbb
push
sarb
ds
loop
dec
inc
cwtl
enter
xchg
addr16
lods
cwtl
mov
pop
inc
ljmp
fnsave
es
movsl
loopne
sub
dec
call
xlat
int
ljmp
aad
stos
pop
inc
xchg
repnz
addr16
push
cs
pop
int3
and
pop
cmp
mov
jmp
shll
out
add
stc
iret
push
push
add
xchg
inc
sub
cmp
mov
inc
stos
mov
jmp
cwtl
dec
fs
push
int3
loope
lods
xchg
pop
lods
lahf
add
cmp
adc
jp
mov
pop
jecxz
dec
cmpsb
xchg
push
sarb
mov
and
inc
push
ss
test
out
cli
inc
pusha
icebp
fldz
out
xor
or
adc
jne
stc
incl
jecxz
push
xchg
dec
jle
dec
jno
add
popf
jo
inc
ss
cmp
and
or
call
mov
or
lea
fisttps
in
popf
into
xchg
les
insl
or
dec
insl
xor
inc
popf
outsb
push
addr16
and
lret
dec
mov
push
ficoml
mov
pop
mov
pusha
fs
mov
pop
mov
lock
pushl
pushf
push
mov
js
sub
adc
jno
inc
lahf
lcall
adc
mov
push
aad
inc
leave
lds
ss
scas
in
sbb
mov
adc
decl
xlat
sub
inc
clc
int3
imul
dec
ss
cmp
adc
push
clc
jmp
setl
push
fiadds
call
ljmp
insl
iret
ficompl
xchg
sbb
push
inc
push
push
outsl
mov
call
insb
dec
cmp
jns
add
mov
or
ljmp
divl
mov
mov
cmc
stos
lcall
jb
mov
dec
pop
dec
in
cmp
and
add
call
mov
push
lret
rcll
add
imul
xor
sbb
mov
aad
push
jbe
cmpsb
mov
pop
xor
adc
test
jl
loope
jp
jp
pop
adc
cmp
pushf
popf
movsl
and
mov
nopl
push
fisubs
jns
in
lret
or
push
and
out
and
or
xor
push
adc
out
xchg
sbbl
cmp
addr16
mov
pop
cs
pushf
add
add
mov
mov
jg
incl
movhps
inc
jno
pop
insl
int
call
rol
inc
and
lahf
adc
dec
fst
sbb
out
lahf
lahf
xorl
int3
inc
mov
adcb
push
ljmp
jmp
xchg
cwtl
inc
stos
sbb
adc
sbb
fdivs
push
in
xchg
dec
rclb
sbb
sub
cli
jmp
lods
addr16
ja
fs
out
cwtl
mov
rcrb
movsb
adc
cltd
mov
add
iret
out
add
dec
inc
fidivs
js
pop
mov
ss
stc
push
imul
mov
int3
and
into
cmp
pushl
cvtpi2ps
insl
cmpb
lahf
lods
jo
dec
mov
repz
lods
int
test
push
mov
fwait
dec
cmovg
or
and
xchg
test
mov
push
cmp
aam
mov
cmp
sub
dec
ret
dec
lock
pop
xchg
sarb
scas
xor
mov
idiv
call
cmp
dec
mov
lret
ja
and
pop
mov
inc
ficomps
or
jae
cmp
push
lds
xor
mov
js
iret
add
push
jns
mov
xorb
or
lret
jg
inc
inc
mov
arpl
mov
filds
and
jmp
pop
loop
jle
mov
sbb
mov
pushf
jge
sahf
mov
inc
pop
lods
jo
push
jg
scas
data16
fstps
lcall
dec
mov
mov
out
stos
cmp
cmp
xchg
cmp
shrl
cld
in
cmc
lock
cmpsl
incl
jns
fdivl
fidivl
lret
xchg
push
ljmp
lcall
inc
insl
mov
fdivs
shrb
pop
add
push
outsb
add
mov
in
jg
mov
sub
dec
mov
push
inc
xor
incl
xorl
xor
lods
stos
lcall
mov
mov
jmp
cmp
rorb
xchg
mov
lret
sub
lds
and
incl
pop
jle
inc
test
imul
push
jg
ljmp
fildll
dec
ret
std
int3
inc
sbb
push
push
sti
or
inc
mov
pop
outsl
loopne
mov
fldcw
jp
pop
adc
ljmp
push
lret
fidivs
push
lret
jmp
scas
cmc
lcall
and
adc
jmp
push
aaa
gs
sti
out
pop
xchg
dec
fwait
xchg
and
hlt
decl
cs
out
cmpsb
xchg
leave
rorb
stc
xchg
filds
pop
add
dec
jae
hlt
call
call
lds
lods
dec
push
sbb
mov
ds
lcall
pop
mov
insl
testl
jne
fwait
sub
xchg
sbb
ljmp
rcrl
fcmovnb
adc
fstpl
ljmp
mov
jge
loopne
push
push
or
jns
cmp
push
call
out
jne
pop
sub
add
clc
dec
sbb
mov
or
dec
adcb
mov
inc
mov
cmpsb
pusha
push
mov
mov
fcmovu
es
imul
push
add
sub
cmp
cmp
lea
cs
inc
divb
icebp
shlb
call
std
in
adc
movsl
rclb
cmp
sub
inc
pop
jno
or
push
call
jg
pop
adcl
aaa
push
ljmp
mov
out
arpl
adcl
subl
sahf
shlb
mov
and
scas
dec
mov
xchg
xchg
inc
imul
and
mov
sub
sub
ja
fistpl
imul
in
dec
inc
stos
adc
ja
inc
idiv
jmp
sahf
add
mov
jg
outsb
or
and
adc
mov
cmpsl
mov
pushl
inc
add
in
outsl
roll
sub
xor
inc
push
imul
shrl
decl
fnstsw
pop
jg
xor
ret
lcall
pop
adc
decl
jg
pop
ret
stos
add
push
cmpb
lahf
popa
dec
mov
jns
push
leave
pop
xchg
jecxz
out
cli
pushl
xor
push
repnz
sub
mov
inc
arpl
dec
cli
imul
fisubrs
js
push
push
mov
xor
dec
scas
xchg
cmp
jp
pop
jg
lcall
dec
mov
and
dec
dec
cltd
xchg
dec
mov
leave
scas
sub
jg
popl
mov
and
ja
outsl
stc
lcall
jecxz
sub
sbb
xor
lock
cltd
lds
mov
mov
mov
lods
mov
imul
or
inc
inc
sbb
push
pop
xor
lcall
or
push
adc
inc
cwtl
xor
push
iret
jle
fadds
sbb
cmp
mov
sbb
or
ja
and
divb
sbb
movb
sub
lcall
cmp
out
cmc
lret
dec
jge
sahf
add
pop
sub
imul
or
cmp
xchg
sahf
xchg
pushl
mov
add
inc
icebp
xchg
sub
xor
ret
jecxz
inc
lret
mov
jbe
test
out
lods
enter
cwtl
pop
ss
mov
mov
adc
cli
xchg
iret
out
cmp
jecxz
inc
push
subw
incl
fcmovb
mov
xchg
test
imul
in
mov
in
sbb
or
in
lahf
stc
movsb
jmp
repz
push
sub
fsubrs
ss
ljmp
leave
cmpsb
ljmp
fisttps
pop
outsb
movsl
inc
cmp
mov
mov
movsb
inc
mov
ljmp
insb
cli
push
or
sub
popa
add
or
push
push
adc
aam
test
ljmp
cli
ljmp
jbe
testb
in
xor
cmp
jl
sbb
xchg
push
clc
cmp
pushl
inc
in
jmp
imul
add
scas
jecxz
mov
push
in
incl
std
std
jae
scas
imul
pusha
test
jb
pop
and
mov
loope
pop
push
sub
clc
ljmp
sub
into
lcall
test
sbb
lods
scas
pop
leave
pop
leave
xchg
dec
loopne
pop
movsl
lcall
jmp
incl
xchg
jb
stos
and
sub
daa
or
jecxz
add
in
cmpsb
and
lcall
movsb
push
fsts
add
ss
mov
inc
xor
inc
push
mov
call
imul
insb
in
dec
cmpsb
ja
dec
stos
add
pop
ds
jl
add
in
xchg
ja
decl
int3
insl
out
mov
insb
stos
add
jb
and
in
stos
push
out
fiaddl
scas
ds
cld
dec
xor
xor
int3
inc
gs
notl
pop
jp
ret
push
loop
fisubl
dec
push
mov
pop
pop
mov
ja
notb
pop
mov
push
in
out
cld
dec
sbb
decl
mov
pop
xchg
add
cmpsb
fstpl
lahf
test
mov
outsl
xchg
push
lods
ret
mov
adc
shll
xor
cmp
mov
int
outsb
lret
mov
mov
mov
cmp
mov
icebp
jmp
jnp
pop
daa
jg
ret
jmp
xchg
mov
mov
loopne
or
dec
mov
or
mov
icebp
and
mov
add
pushl
dec
in
sub
je
in
jbe
pop
push
scas
sar
aad
cmpsl
cmpl
mov
stos
loop
rol
or
sub
scas
cld
ds
pop
mov
stos
or
daa
cmpsb
pop
addr16
or
aaa
xor
call
mov
push
and
lcall
sbb
movsl
loopne
adc
lods
shrl
xor
stos
lcall
mov
mov
cmp
or
cmp
sbb
or
sti
inc
orl
mov
je
inc
jne
mov
incb
push
cmp
jmp
imul
stos
sarb
jnp
pop
mov
inc
dec
mov
call
aad
jne
push
arpl
movsl
xor
movsl
push
iret
scas
cli
xor
pop
pop
mov
jg
xchg
pop
xchg
arpl
dec
adc
jp
dec
sub
fsubr
in
fadd
es
xor
out
and
push
es
jmp
or
adc
jmp
and
hlt
inc
pop
add
arpl
mov
push
pop
pop
dec
sar
mov
mov
out
inc
inc
pop
xchg
xor
cmp
xor
mov
movsl
test
mov
cmp
jnp
xchg
jnp
xor
lods
sub
pop
or
lods
mov
js
shr
and
imul
mov
mov
pop
lock
punpckhwd
icebp
sahf
mov
notb
jns
jl
idiv
add
inc
push
ds
sub
and
xor
mov
in
xchg
cmpsb
push
dec
scas
jae
mov
addr16
js
sub
mov
jl
fdivl
cmp
aaa
mov
rclb
rcrl
push
in
xor
test
ss
inc
mov
add
shll
repnz
popf
lods
inc
or
lods
incl
fstps
jge
jno
xchg
pop
mov
dec
jecxz
inc
cld
pop
and
jg
in
shlb
sbb
xor
scas
push
xchg
add
sub
mov
aad
push
add
shl
jb
mov
mov
cmp
aad
cmp
loopne
pop
pop
fisubs
mov
insl
mov
cli
decl
test
cmp
mov
popf
mov
inc
sbb
call
inc
lock
and
ds
out
imul
sub
pop
cmpsb
pop
xlat
stc
cmp
sbb
sbb
icebp
and
sub
hlt
pop
and
lock
clc
xchg
cwtl
call
movsl
xchg
xor
pushl
push
jbe
aaa
popf
adc
out
aas
add
jle
loopne
inc
stos
movsb
fldl
add
mov
push
js
pop
jecxz
and
scas
lcall
push
rclb
mov
ljmp
cmp
arpl
and
jg
or
mov
mov
mov
cmp
call
incb
inc
fmul
scas
cmp
or
inc
iret
fildll
icebp
pop
pusha
sub
mov
data16
mov
xlat
pusha
inc
insl
hlt
jb
ljmp
aad
push
and
lods
ljmp
outsl
add
cwtl
inc
fidivrs
xchg
sub
mov
mov
popf
negb
cltd
outsb
sub
sahf
mov
push
fwait
incl
dec
push
cltd
into
test
xor
dec
jno
lds
pushl
jmp
add
std
cmp
push
loop
cwtl
outsb
xor
pop
sbb
std
mov
sahf
sbb
ljmp
in
mov
pusha
xor
inc
jl
jmp
cmp
fists
leave
mov
faddp
repnz
sbb
out
ljmp
scas
movsb
call
push
hlt
dec
and
loop
mov
add
mov
mov
shll
mov
decl
stos
push
jnp
int
mov
jle
ret
nop
jnp
sub
adc
dec
and
jl
add
push
dec
scas
pop
test
decl
sbb
mov
in
xchg
aad
xor
jg
add
sahf
jg
cmpsb
outsl
movsb
scas
inc
cmpsb
mov
adcb
add
pop
repnz
sahf
mov
ja
call
dec
add
inc
push
mov
cwtl
es
pop
adc
sub
fstl
dec
push
stc
mov
imull
pop
mov
scas
jns
into
pop
jmp
inc
ds
pop
xlat
push
js
sahf
loop
sbb
mov
pop
push
ret
stos
fs
nop
xchg
push
add
ljmp
enter
cli
repnz
xlat
xchg
daa
mov
hlt
pop
sbb
addb
call
pop
add
out
gs
shll
lret
movsb
and
and
add
cmp
sbb
into
cmp
jne
mov
js
jp
jbe
scas
jl
mov
stos
cmp
add
int
adc
xchg
jg
decl
addr16
repz
fsts
sub
fcmovnu
hlt
mov
or
call
xor
mov
sbbb
xor
pushl
mov
dec
enter
jle
push
shr
sub
mov
cld
xor
pop
lcall
inc
sahf
insl
movsb
or
ja
loop
leave
sysenter
pop
xchg
pusha
jns
jg
sub
lea
fisubrs
inc
xor
inc
xor
fs
sbb
add
sbb
xor
inc
rcrl
movsb
and
push
jo
adc
ljmp
insl
push
xor
lcall
pushl
fiaddl
adc
call
mov
aaa
aaa
adc
loop
jb
sub
xchg
mov
enter
cmp
lcall
and
icebp
push
jnp
mov
imul
or
decl
sbb
xchg
rcll
push
xcrypt-cfb
cmpsl
and
movsl
mov
xlat
pop
loopne
test
push
pop
dec
sbbb
push
mov
sub
sbb
in
enter
std
repz
sub
fbld
mov
decl
xor
sub
std
arpl
or
and
dec
ficomps
sbb
jmp
hlt
aam
fidivrs
jmp
movsl
js
jge
inc
pushf
pop
mov
jnp
lahf
or
mov
sbb
mov
jo
dec
out
pop
push
fdivrp
mov
jmp
sahf
test
test
jge
or
mov
jl
inc
or
addr16
sbb
cmp
shl
ret
sub
lea
inc
ss
in
xchg
xor
cmc
les
in
fbstp
mov
cmpsl
icebp
xchg
dec
bnd
jmp
push
mov
or
mov
stos
mov
mov
decl
pop
sbb
adc
fstpt
ljmp
xor
dec
xlat
fcomip
ss
cld
lock
sub
bound
fdivrl
mov
jle
push
lock
mov
mov
aam
push
mov
pop
outsl
nop
lods
dec
mov
adc
fmull
adc
mov
lcall
faddl
add
cwtl
sti
shlb
stos
pushf
clc
pop
push
mov
jmp
or
std
pop
nop
pop
push
aaa
xchg
mov
mov
dec
stos
std
loope
ljmp
and
sbb
fistl
mov
cwtl
test
fadd
sub
cmpsb
mov
fadds
out
ljmp
xor
mov
add
mov
outsb
mov
repnz
sub
pushl
outsl
ficomps
xchg
xor
out
js
push
mov
movb
lcall
dec
xchg
cltd
push
adc
xchg
fwait
in
lds
popa
cmp
bound
out
es
test
loope
cli
ljmp
xchg
inc
dec
and
in
add
mov
loopne
cld
sti
mov
insb
loope
shlb
xchg
dec
jae
cmp
pop
cwtl
out
cli
incl
mov
icebp
xchg
popf
xchg
sbb
inc
mov
dec
loop
mov
or
decl
mov
xchg
loop
mov
jbe
jne
sub
push
mov
sub
clc
std
add
xor
pop
jmp
mov
icebp
adc
mov
in
push
add
lcall
push
mov
sbb
push
mov
pop
xor
xorl
shll
movsl
xor
pop
mov
pop
and
add
fsub
pusha
hlt
loopne
push
adc
into
or
leave
aam
ds
push
aam
xchg
enter
xor
add
clc
push
shr
fbstp
lret
std
push
movsl
inc
sarl
scas
push
jae
hlt
repz
xor
cmp
inc
fwait
in
jo
jl
js
push
jl,pn
inc
adc
out
outsb
cmc
hlt
mov
jg
or
mov
iret
pusha
xchg
sbb
push
inc
cwtl
test
cmpsl
out
xor
call
mov
test
push
sub
sahf
dec
push
ficompl
js
rolb
xlat
stc
push
dec
pushf
decl
fiaddl
mov
push
in
pop
xchg
scas
sub
push
push
inc
daa
xor
xor
mov
mov
icebp
movsb
dec
cmpsl
or
data16
fistl
inc
icebp
or
insb
imul
add
and
inc
sar
incl
jmp
cmpsb
adc
icebp
pop
test
loopne
dec
insl
jge
mov
mov
xchg
and
jp
add
dec
mov
xchg
xchg
xchg
int
mov
and
jg
cmpb
jmp
cmpsb
xchg
xor
adc
fs
je
mov
cli
rcll
xchg
les
out
in
sti
pop
push
stos
xor
outsl
popf
outsl
jg
jns
mov
decl
dec
mov
fildl
and
sbb
inc
mov
push
dec
ja
stos
in
cmp
mov
mov
mov
push
xor
push
in
fsubp
int3
pop
in
or
inc
mov
sub
pop
in
or
daa
push
mov
cmpsl
fiaddl
mov
add
cmp
inc
lcall
xor
repnz
lods
in
mov
xchg
jp
cli
sti
pusha
pop
dec
dec
stos
or
xchg
incl
int3
sbb
rol
mov
mov
fistps
addr16
xor
addl
pushl
loopne
jb
jecxz
mov
std
lds
pop
scas
xorb
call
jecxz
xchg
insb
cwtl
stos
jno
mov
imul
sbb
enter
ja
cmp
dec
clc
in
hlt
and
pop
pop
in
sbb
test
add
add
ljmp
mov
lret
sub
jno
jnp
mov
mov
lods
in
out
ficomps
lcall
in
aam
sbb
test
jns
aas
icebp
sub
sbb
loop
mov
xor
sub
pop
orl
adc
jmp
std
mov
mull
fldt
cli
sub
mov
out
push
test
mov
out
stos
pushf
hlt
lock
pop
stos
xchg
sti
push
call
ljmp
or
scas
fdiv
jg
adc
add
cmc
push
decb
inc
mov
call
jbe
repnz
jecxz
or
vmread
jbe
mov
repnz
mov
mov
adc
mov
sub
nop
mov
shlb
int3
sbb
insl
maskmovq
cmp
jg
sbb
push
stc
mov
adc
lea
es
aaa
and
repnz
sahf
lock
lret
faddp
aad
xlat
sub
out
add
loopne
std
jp
adc
aas
dec
xor
mov
int
shrb
mov
call
mov
push
loopne
pop
ljmp
inc
dec
pop
push
js
lcall
sub
sub
flds
lods
inc
sbb
shlb
lock
in
dec
fnstcw
stos
dec
movsb
test
sarb
decl
out
mov
ss
decl
add
mov
ret
inc
cmp
adcl
pop
icebp
test
and
push
xor
xchg
mov
nop
test
cmc
pop
push
cmpsl
out
insl
popf
into
push
ffreep
pop
scas
cmp
push
lods
xchg
sub
lods
jne
stc
cwtl
push
xor
adc
jmp
outsl
mov
sub
aam
dec
sbb
cmpsl
incl
mov
sbb
mov
sbb
xor
sub
dec
mov
fisubl
push
jle
xor
adc
mov
and
outsl
jmp
lcall
sbb
imul
xor
in
xchg
fldt
data16
call
xchg
mov
mov
fs
sbbb
aam
shll
push
mov
cmp
jbe,pn
cmpsl
push
inc
sub
jno
int3
out
lods
pushl
popf
push
cmp
outsl
pushl
push
inc
or
xchg
out
mov
xchg
ds
call
repnz
cltd
mov
out
sarb
jns
push
mov
pop
int3
sbb
sahf
inc
inc
sbb
lcall
fwait
add
mov
mov
jl
ds
push
mov
ljmp
lret
adc
mov
inc
jns
xor
pop
pop
inc
call
and
push
cli
movsb
dec
sub
fstp
in
in
icebp
into
movsb
inc
jecxz
es
mov
sarl
das
and
push
pop
jmp
inc
lods
movsl
lods
pop
in
idivl
mov
mov
outsl
jno
mov
lods
mov
mov
mov
ljmp
std
lcall
adc
add
cmp
xchg
ss
adc
jae
add
clc
mov
call
mov
sub
mov
pusha
idiv
push
and
call
scas
xchg
lahf
jbe
outsb
cmp
mov
adc
lds
mov
jo
fsubrp
jbe
addr16
hlt
lahf
and
outsl
daa
mov
xchg
icebp
cmp
mov
pop
mov
pop
xchg
adc
or
add
imul
sbb
push
data16
and
adc
jl
xchg
cli
add
ljmp
cmc
int3
inc
ror
inc
add
sarb
shll
sbb
cli
jns
cli
adc
inc
loopne
push
push
or
jecxz
inc
out
mov
mov
lahf
icebp
or
shll
cmpsl
lea
incl
mov
xchg
adcb
popl
and
gs
jno
inc
shlb
out
cli
mov
jbe
jp
les
mov
push
xchg
mov
push
cld
lcall
out
repnz
inc
ret
rolb
fstpt
stos
lea
pushl
or
xor
xchg
js
ss
push
out
icebp
jecxz
dec
aam
rcr
xor
adc
jg
ja
jbe
orb
fldenv
cmp
lock
pushl
das
cmp
push
popf
sbbl
jno
sbb
and
insl
xchg
push
pop
pop
jnp
sub
cmp
inc
xor
aas
pop
push
sahf
xchg
cmp
push
mov
out
popf
inc
mov
outsb
inc
faddl
imul
inc
cmp
frstor
nop
jle
pushl
and
leave
or
cltd
loope
sarl
dec
in
xchg
mov
or
cwtl
add
decl
jae
pop
inc
mov
es
jne
or
std
int
mov
gs
jg
mov
clc
sbb
in
lds
mov
sbb
scas
dec
lcall
sub
inc
ljmp
out
loop
movsl
xor
call
pop
iret
imul
jg
xlat
pop
sbb
cmc
arpl
add
dec
inc
cltd
sub
incl
or
xchg
inc
in
repz
adc
pop
dec
outsl
enter
xlat
leave
cli
ret
cwtl
iret
adc
push
std
cmp
ljmp
adc
cmp
mov
jg
mov
push
mov
mov
popa
jne
loope
xchg
jnp
popa
loopne
pop
xor
mov
inc
mov
mov
scas
jl
add
dec
es
sbb
adc
push
std
lcall
push
cld
xchg
ss
shr
sti
dec
sahf
mov
call
jge
js
mov
jg
std
add
xchg
scas
clc
js
xchg
dec
mov
cmp
push
xlat
push
inc
mov
jg
push
sbb
push
pushf
std
mov
jo
mov
nop
pushf
xor
incl
sbb
xor
lds
mov
pop
jl
inc
in
mov
ret
call
out
pop
sti
in
pop
xlat
mov
add
ljmp
iret
movsl
dec
int3
sbb
ljmp
test
fld
sbb
push
test
inc
sbbl
test
test
sbb
mov
idiv
mov
addr16
imul
add
outsl
mov
dec
push
dec
bound
mov
shll
jae
fcoms
and
testl
dec
movsb
popa
push
xor
add
add
leave
repz
scas
popa
mov
xlat
scas
dec
fsubl
pop
outsl
cmp
ljmp
push
out
fcomp
aad
sub
inc
sub
xchg
out
ljmp
lahf
shr
sti
lea
inc
scas
mov
outsb
sarl
lahf
subb
add
mov
mov
xor
stc
fimuls
xlat
daa
cmp
and
mov
push
aad
cmp
push
push
dec
inc
nop
ja
and
add
notb
lcall
or
out
fucomi
xlat
sub
imul
adc
sub
pushl
and
testb
cmpsl
lock
lcall
iret
jmp
push
jae
ljmp
and
mov
sbb
movsl
call
adc
mov
fdivr
pushl
arpl
xchg
imul
pushf
popf
push
add
flds
mov
push
mov
xor
fsubs
fisubl
pop
movsb
rol
jne
push
mov
ljmp
sub
dec
lds
aaa
jl
or
pop
outsb
daa
cmp
cwtl
sbb
ret
adc
cmpsb
fldz
jle
mov
cmpsl
sti
leave
adc
or
cli
decl
popf
mov
icebp
lcall
rorb
imul
incl
and
insl
xchg
xchg
and
addr16
mov
inc
loope
cmpsb
jbe
adc
jae
or
cmpsb
idivb
lock
or
stos
fisubs
call
inc
jp
xor
jo
pop
addb
push
int3
repz
or
cmc
icebp
outsl
cli
decl
ret
leave
nop
cs
xor
sbb
cmp
jbe
test
iret
cmpsl
int
sbb
filds
sub
in
popa
mov
mov
push
mov
fsts
push
stc
cli
scas
mov
push
add
loop
mov
push
xchg
push
mov
sub
lcall
pushl
pop
ja
jb
daa
pop
imul
outsb
decl
leave
sub
jle
jmp
ds
outsb
xchg
mov
sub
sbb
add
insl
std
lcall
xsave
jae
std
stos
movsl
rolb
jg
cmp
out
repnz
jmp
mov
in
or
stos
movsl
aad
cmp
lcall
outsl
mov
movsb
push
push
xchg
xor
mov
cmpb
and
mov
push
pop
and
pop
rcrb
xchg
ret
xor
add
cld
dec
loop
dec
aad
sbb
lds
mov
and
rcl
sbb
in
push
jmp
sub
in
pushf
leave
gs
cmpsl
aas
pushf
lret
stos
das
jns
cmc
fbld
icebp
je
pop
into
push
outsl
dec
push
adc
xor
lcall
lods
add
aas
pop
sbb
test
fildll
loopne
mov
ss
sbb
add
ret
call
mov
aaa
fidivrs
pop
lahf
pop
mov
xchg
mov
mov
je
das
les
ljmp
push
mov
pushf
orl
out
gs
test
inc
push
xchg
dec
popf
cmp
inc
sub
sbb
or
loope
cmp
add
inc
and
jns
sbb
jmp
mov
mov
inc
jge
mov
movsb
xorb
jle
mov
ss
incl
bound
jno
push
into
ret
fsts
jecxz
cmp
fwait
xchg
pushl
xcrypt-cbc
cmpsl
push
fsts
pop
jo
shl
mov
sbb
popa
jge
mov
lcall
decl
jecxz
lret
mov
lds
fbld
pop
sbb
jge
sbb
std
call
push
fdivrs
xor
push
or
or
push
inc
and
outsb
andl
sahf
es
pop
mov
sbb
dec
jb
ret
xchg
xchg
fadd
push
fildll
cld
lods
enter
gs
xor
adc
or
out
daa
mov
mov
pop
outsl
mov
cmpsb
xor
lods
jecxz
ret
and
mov
pushl
popa
sbb
out
lret
lret
inc
divb
mov
mov
mov
daa
push
popf
addr16
sbb
cmp
outsb
movsb
mov
insl
int
dec
leave
dec
sub
mov
pop
inc
dec
aas
mov
mov
sbb
cmp
hlt
mov
jnp
sbb
mov
mov
push
or
cmpsl
outsl
jecxz
je
sbb
push
call
outsl
cwtl
inc
lods
adc
in
int3
sub
ret
stos
stos
pop
lds
jne
call
sbb
mov
pusha
add
outsl
pusha
stc
adc
stos
out
fcompl
xchg
lods
fwait
sub
push
shl
xchg
inc
inc
dec
or
scas
js
dec
cld
iret
ds
adc
xor
ljmp
cli
mov
or
mov
mov
or
jmp
push
sub
or
mov
daa
fdivr
ljmp
xchg
jecxz
push
repnz
cmpsb
xor
mov
addb
fiadds
xor
dec
insb
enter
flds
push
or
sbb
pop
js
cmp
fwait
add
sub
daa
sub
mov
nop
dec
fdivl
jno
sub
out
pop
jns
popl
xor
push
mov
adc
iret
imul
rorl
fs
shrl
push
or
daa
scas
scas
pushl
and
xor
inc
cmpsl
bound
jp
xchg
dec
jp
jg
cmpsb
les
jmp
notb
in
aas
lret
mov
rcll
notl
popa
into
jmp
setbe
mov
mov
call
popa
dec
mov
stos
test
xor
decl
push
ret
mov
mov
sbbl
in
mov
pop
xor
scas
pop
adc
cmp
sbb
dec
mov
popf
mov
shl
cmpsl
adc
leave
mov
mov
cld
cs
add
cmpsl
xor
mov
push
imul
pop
fdivs
jg
and
sahf
sub
pop
jp
or
cmp
int
nop
cmpsl
sbb
cmp
data16
lahf
js
xor
inc
into
add
inc
test
testl
lret
jns
in
cmpsb
ljmp
or
out
scas
sarl
xorb
enter
scas
mov
adc
fwait
decl
in
xchg
cmp
addl
xor
movsl
push
jge
rorl
mov
decl
jae
loopne
loope
arpl
sub
addr16
scas
mov
outsb
or
add
stos
pop
and
mov
stos
or
or
jmp
sahf
pop
rcrl
xchg
add
in
jnp
pop
clc
mov
cltd
lods
or
decb
cmp
nop
sti
out
test
adc
jmp
insb
adc
popa
mov
push
xor
add
sahf
mov
jb
fldpi
add
inc
mov
test
xor
pop
mov
xchg
popa
cmc
xchg
xor
lods
or
shrb
sahf
ds
insl
adc
addr16
mulb
push
jmp
jae
pop
add
pop
fcomip
ja
loopne
pop
dec
cmp
jle
scas
mov
test
pushl
sub
lods
movsb
sbb
popa
lea
dec
inc
jnp
decl
dec
repz
or
mov
mov
jne
movsb
ja
fidivrl
pop
pushl
shlb
lcall
shr
imul
mov
lret
push
int
mov
push
mov
js
scas
or
pusha
add
mov
imul
lcall
xchg
je
mov
mov
push
sbb
xor
mov
pop
pop
repnz
jp
adc
inc
dec
cmp
outsl
xchg
cmp
mov
dec
ret
sub
xor
jae
jmp
outsl
mov
dec
gs
jbe
roll
shl
push
stos
int3
pop
fildll
sbb
lcall
mov
pop
adc
add
sub
add
ret
mov
push
dec
add
ljmp
dec
call
mov
test
mov
aad
or
ljmp
push
xor
sub
cwtl
popl
lcall
repz
lahf
fdiv
jp
and
jg
cmp
inc
mov
call
dec
movsb
sbb
pop
ja
dec
xor
jb
jecxz
in
jnp
cld
jl
jg
fcomip
test
and
in
mov
push
push
out
cmp
frstor
out
out
jge
pushf
xor
fs
out
jne
mov
nop
rcll
mov
inc
and
iret
jns
sar
lcall
fucomp
repz
adc
xor
pushl
sbb
dec
pop
lods
movsl
lds
adc
popf
inc
xor
mov
and
lahf
sar
call
icebp
xor
push
int3
icebp
mov
xor
add
insb
int3
add
add
mov
mov
aad
out
mov
shll
push
enter
inc
mov
ljmp
fists
mov
std
mov
add
fbld
cmp
iret
cmp
shr
movl
in
ljmp
enter
ds
mov
mov
cwtl
xchg
and
pop
sbb
pop
gs
mov
stc
fnstenv
decl
jl
pandn
imul
cli
lods
xchg
lahf
cmpsb
pop
incl
out
hlt
addl
mov
push
mov
loope
ljmp
incb
and
mov
stos
push
or
or
cltd
fbld
and
fcomip
pushl
sub
adc
jp
sub
mov
cmp
push
test
mov
mov
aas
cmpsl
push
insl
pop
push
sti
xchg
loopne
cwtl
xor
lea
fwait
sub
mov
inc
fwait
lcall
lods
jns
dec
pop
pusha
cmp
gs
ja
out
cmp
js
iret
inc
sbb
incl
lret
lcall
stc
add
jnp
test
pusha
dec
push
cmp
and
clc
inc
jle
xchg
cld
call
jl
mov
sarb
std
mov
filds
push
leave
add
fiadds
sbb
jp
lcall
negl
xchg
daa
jae
scas
xchg
dec
clc
sub
popf
push
xor
popf
out
dec
scas
lcall
xchg
nop
adc
pushf
or
test
xchg
negb
rcll
popa
pavgw
pushl
sbb
inc
cmpsl
jg
jge
add
dec
sbb
mov
mov
fdivl
icebp
out
rorb
insb
sub
xor
sub
jo
stos
mov
cli
jl
mov
dec
add
and
ljmp
mov
sarb
ljmp
mov
inc
push
mov
pop
add
aas
adc
je
or
shrl
scas
inc
imul
dec
loop
mov
jp
rorb
outsb
sub
cmp
sub
outsb
dec
adc
fcomip
pop
add
out
movzwl
ss
sub
mov
pop
daa
dec
call
lcall
clc
enter
jl
jbe
pushf
lret
and
test
decl
push
mov
mov
in
xlat
jbe
xchg
pop
clc
sub
aaa
aaa
popa
in
sub
jmp
and
mov
popa
scas
popa
popf
dec
sti
ljmp
mov
mov
incl
dec
dec
sbbl
dec
push
mov
adc
and
ja
mov
ja
jmp
cmp
out
int3
out
push
xchg
out
rclb
movsb
mov
call
mov
or
pop
pop
push
je
jge
shrl
jle
or
cmpsl
stos
sbb
mov
insw
or
jae
lcall
push
add
or
int3
pushl
movsl
dec
xchg
jae
mov
out
cmc
sub
out
xchg
xor
in
add
es
popa
enter
ds
hlt
rolb
inc
adc
popf
mov
scas
mov
jae
sbb
mov
std
decl
cmp
xchg
andb
mov
dec
cmp
and
shll
mov
inc
cmp
out
lret
add
loopne
les
lcall
mov
repnz
popf
sti
mov
movsb
js
jg
js
xor
ret
push
in
sub
scas
stos
sarb
sbb
in
xchg
enter
and
mov
push
sbb
mov
mov
fbld
stos
jecxz
jo
inc
lahf
mov
mov
rcll
pop
jge
icebp
or
sbb
xchg
ljmp
and
jmp
sbb
daa
sub
sub
inc
jg
pop
pop
sub
push
sti
fcoml
push
lcall
fsts
lods
mov
sub
xchg
mov
ja
sub
inc
out
outsl
ret
jecxz
jl
mov
jmp
outsl
jg
pop
dec
mov
daa
scas
pop
cmp
jg
ljmp
jmp
jne
jle
enter
lret
das
xor
pop
enter
idiv
jmp
sahf
cld
mov
push
in
incl
jbe
inc
jne
in
les
imul
bound
out
call
pusha
clc
push
pop
jecxz
xor
pop
popf
or
jo
xchg
push
jbe
push
lcall
movsb
lret
repz
das
mov
ficoml
imul
mov
fstl
std
ljmp
xor
int
call
push
mov
push
mov
mov
call
ss
clc
icebp
mov
js
sbb
fcoml
dec
pop
negl
scas
cli
jmp
popf
je
sbb
loope
pop
lock
sub
fdivrl
in
push
mov
sub
lcall
mov
arpl
in
xor
repz
cmp
call
xchg
pop
dec
cmp
and
sub
jg
roll
loopne
ror
insl
cwtl
pop
inc
dec
pop
incl
ja
das
jp
xchg
ficoml
pop
adc
jge
cli
les
and
movsb
insb
ss
jp
push
inc
es
push
sub
jle
test
lahf
inc
les
rcrl
or
out
mov
mov
incl
add
mov
leave
inc
jp
rcrb
inc
jg,pn
mov
jmp
jno
push
incl
push
jg
add
cmpsl
je
les
mov
testl
ljmp
lds
pushf
out
pushf
int
in
sbb
nop
xor
sbb
jmp
lcall
xor
jns
daa
mov
jmp
jl
les
adc
hlt
jb
pushl
inc
arpl
mov
in
cltd
outsl
dec
adc
dec
mov
or
cmp
out
clc
mov
aam
mov
mov
movw
out
cltd
test
or
ficoml
cmpsl
cmpsl
xchg
and
cmpsb
hlt
mov
notb
sbb
mov
add
mov
cmp
stos
adc
push
int
incl
inc
iret
xchg
imull
cmpsb
cmpsb
fistl
sub
mov
xchg
dec
test
pushl
cld
ja
leave
jmp
or
push
in
xchg
ret
jnp
hlt
sbb
inc
xchg
pushl
adc
push
sbb
cwtl
pop
popa
sub
pop
lcall
mov
jne
out
xchg
dec
lcall
dec
int3
xchg
sbb
test
idiv
decl
lock
into
lahf
mov
jge
loop
and
imul
js
cmp
mov
call
fs
lods
sub
decb
std
adc
push
bound
xor
sub
incl
mov
mov
cltd
sbb
sub
xor
sbb
dec
les
or
je
xchg
cmp
call
stos
mov
insb
arpl
ljmp
dec
inc
in
mov
sahf
jge
std
outsl
xor
fcomps
imul
sbb
data16
into
lcall
inc
in
popf
jae
and
dec
and
mov
pop
pushf
sbb
ja
add
loope
cmc
mov
sub
test
dec
sbb
jecxz
jmp
sahf
pop
jns
lret
cmpl
cs
jp
dec
pushf
sub
jmp
jp
xchg
sub
xchg
lret
lret
fiaddl
iret
jmp
decl
jae
inc
dec
subb
add
fstpl
jecxz
xor
call
std
call
sbb
cmp
push
out
hlt
lret
or
cmp
incl
pop
push
test
pop
cmp
gs
jge
out
gs
mov
outsl
enter
das
fldt
jmp
arpl
xor
das
popf
ret
loope
xor
xor
dec
pop
mov
add
leave
mov
inc
aad
pop
loope
mov
mov
jns
dec
sbb
outsb
popf
push
call
cmp
test
ljmp
jns
dec
mov
push
pop
cmp
rcrl
dec
repnz
ja
sub
lret
sub
out
mov
jmp
lock
out
jb
add
bound
mov
jne
pop
outsb
ljmp
dec
sub
je
pop
lahf
ds
pop
mov
arpl
mov
imul
jo
mov
daa
push
inc
js
ficoml
gs
fcomip
sub
out
repz
or
inc
stc
adc
and
decl
call
or
insl
test
mov
xchg
incl
pop
mov
cli
jns
test
dec
adc
jg
insl
or
call
cmp
dec
and
insl
aam
in
sbb
xor
orb
ljmp
lcall
inc
pop
popf
sahf
cmovl
inc
mov
enter
or
rcrl
jge
push
jp
xor
and
lcall
rcll
xchg
inc
sbb
push
pushf
lock
clc
pop
dec
in
ret
xchg
xchg
mov
call
cmp
jp
or
mov
pop
loopne
in
cmpsb
pop
aas
mov
jmp
loopne
dec
std
ret
cmp
shll
xchg
loope
add
in
push
ds
push
in
popf
or
mov
in
call
inc
sub
pop
ljmp
xchg
hlt
push
adcl
je
sub
pop
cs
and
js
sbb
test
jmp
sbb
lret
aad
and
jle
and
inc
insb
xor
sub
rcr
outsb
dec
dec
incl
fwait
pop
cmpsb
stos
push
push
ror
xchg
pop
stos
inc
pop
xchg
lcall
push
mov
adc
dec
adc
movsl
push
mov
bound
mov
and
xor
popf
jo
lcall
push
jecxz
mov
in
dec
jb
lds
xchg
sbb
in
rcr
mov
orl
sub
test
inc
cld
jmp
outsb
ss
adc
xchg
sub
movsb
sbb
into
adc
pop
xchg
test
es
mov
test
push
xlat
daa
outsl
pushf
push
add
sbb
cwtl
xlat
loope
push
sbb
dec
enter
call
xor
packuswb
cli
repz
add
outsb
fs
mov
loopne
adc
out
sub
rep
push
sbb
fcomip
mov
mov
sub
test
filds
test
cli
call
lcall
ljmp
mov
movsl
mov
xchg
popa
lcall
xchg
ret
pop
fwait
mov
movsl
jb
or
dec
or
loopne
jb
xor
jge
mov
dec
fwait
mov
sub
xchg
or
jae
push
adc
cmp
movsl
call
sbb
mov
fidivl
mov
lods
inc
es
sub
dec
jecxz
decl
out
push
pusha
lea
lea
loop
adc
fisubrs
jg
push
and
sbb
sbb
jb
and
jnp
je
loopne
jbe
push
aad
lods
inc
aas
iret
or
or
push
or
ds
and
xor
fsubrs
fdivrl
jg
cmp
lea
in
jmp
cmc
insl
and
push
jle
push
addl
insl
lahf
mov
nop
or
bound
ljmp
cwtl
mov
loope
pop
outsl
pop
jg
sbb
movsb
iret
push
and
pop
sbb
sub
fstp
cltd
decl
lock
mov
mov
xor
or
icebp
fstpt
dec
lahf
cmp
stos
std
mov
insb
cmp
fldt
scas
fdiv
insl
pop
pop
fstpl
xchg
call
sub
clc
mov
imul
jmp
stc
add
fstl
test
shll
mov
sahf
je
mov
pop
rorb
scas
jg
jmp
xchg
xor
push
adc
xchg
sbb
out
rcr
gs
jmp
aas
int3
push
faddl
rcl
cmp
xor
sub
lret
and
in
decl
or
and
sti
sub
push
fldt
popa
shrl
aad
xor
add
jmp
movsl
ficomps
les
jmp
inc
add
xlat
or
rcll
xlat
xchg
mov
mov
out
into
pop
mov
cmpsb
mov
pop
jl
fsubrl
pop
cltd
jp
aaa
fiadds
ljmp
cli
sbb
inc
mov
loope
out
pop
mov
aad
jnp
mov
adc
mov
sbb
push
lods
jns
xorl
insl
orl
push
sub
lcall
mov
add
inc
xchg
iret
outsl
jbe
jb
cmpsb
in
push
test
incl
dec
nop
dec
add
xchg
sbb
mov
ret
into
and
xchg
scas
xor
sbb
int
decl
fs
mov
mov
lods
xchg
gs
js
bound
jmp
call
pushl
imul
add
jge
jg
jg
mov
xchg
inc
mov
lock
xor
cld
cmp
scas
ret
cli
ljmp
mov
aam
lcall
pop
popf
pop
repnz
cli
jmp
in
dec
mov
xor
pushf
sbb
in
mov
cli
sbb
mov
push
lcall
mov
push
and
es
outsb
xchg
inc
jg
pusha
std
lock
out
jle
jle
sbb
ljmp
out
xchg
inc
lret
and
lahf
adc
mov
push
push
les
jl
adc
cmp
pop
int
mov
xchg
addr16
mov
inc
push
jle
mov
pop
in
hlt
mov
push
inc
cwtl
pop
and
shlb
mov
or
hlt
dec
push
pusha
js
pop
fldcw
xor
fldl
push
imul
loop
incl
pop
mov
jle
mulb
test
or
lock
push
ljmp
or
jp
sub
orl
or
fs
gs
mov
push
jg
sub
loop
inc
and
lea
pop
jecxz
xor
mov
into
movsl
fs
fwait
inc
pop
jns
aas
imul
ret
lcall
into
jg
pop
stos
and
add
cmc
add
cmp
repnz
mov
int
and
lcall
cmp
jbe,pt
repnz
add
call
cmp
and
rol
jecxz
loopne
xchg
inc
cld
push
mov
xchg
and
shll
rcll
jg
sbb
in
jns
inc
popf
punpckhdq
into
pop
in
sbb
dec
mov
jmp
sahf
lods
and
and
mov
insl
mov
adc
shl
sbb
push
and
repz
pop
test
push
cmpsl
mov
das
in
mov
incl
push
jg
adcb
data16
cmp
lret
sbb
mov
pop
gs
mov
aaa
jne
loop
call
push
dec
xor
cld
mov
or
stos
lret
js
push
add
cwtl
pop
mov
and
push
lcall
lea
jg
in
js
jns
push
jae
pop
and
lcall
sbb
mov
mov
cs
ljmp
cmp
mov
int3
mov
cmpsl
xor
aam
fsts
dec
decb
jmp
inc
je
add
shll
repnz
mov
mov
test
jg
in
or
xchg
ds
mov
sub
mov
mov
adc
ja
add
xor
je
imulb
call
das
pop
jo
inc
in
scas
enter
and
int
ds
add
lea
outsb
sahf
ljmp
xorb
push
test
aaa
repz
jmp
jmp
and
push
in
push
add
jmp
inc
add
sub
inc
pop
mov
mov
int
mov
jg
aas
in
mov
add
adc
shll
inc
mov
dec
sbbl
js
test
cltd
push
decl
push
fs
pop
mov
add
adc
mov
mov
fcomip
call
dec
cmpsb
shll
pop
mov
pusha
lods
push
sub
mov
incl
pop
mov
cli
inc
sahf
enter
push
mov
mov
lds
add
lcall
or
pop
cmp
stc
mov
xchg
inc
dec
ljmp
pop
mov
sub
push
mov
dec
insb
jns
add
push
mov
call
jne
cmpsl
ljmp
pop
popf
out
push
scas
in
fstpt
lds
rcrb
es
ljmp
ja
cltd
in
xchg
push
jne
inc
mov
xchg
jno
pop
aam
push
inc
sbb
cmp
or
pop
sti
inc
xor
jmp
pop
sub
push
fisubrs
add
add
push
or
add
push
outsl
mov
pop
daa
cmc
std
or
jp
pusha
inc
xchg
test
inc
and
outsb
cmp
sub
ds
adc
jmp
gs
or
cmpl
mov
push
shll
rorl
lods
mov
movsl
pushw
xlat
jmp
mov
ja
mov
push
loop
shlb
xor
xchg
shlb
sub
dec
push
shll
push
pop
mov
add
out
and
adc
lret
dec
mov
and
int3
test
loopne
das
jp
lock
jecxz
call
loope
jp
mov
lods
int3
inc
pop
mov
mov
sti
sti
sbb
mov
fcomi
or
or
call
mov
mov
adc
hlt
call
pushl
jne
cmp
sar
cmpsb
repnz
and
jle
or
pop
imul
adc
mov
stc
mov
pusha
and
inc
xor
imul
pushf
call
push
loope
lret
dec
pop
sahf
add
jnp
mov
dec
call
repz
sbb
aam
js
mov
dec
xor
iret
xor
jno
jno
aas
and
ljmp
sarb
jo
inc
std
stos
inc
fstps
mov
stos
cs
cmc
xor
ljmp
sti
pop
adc
push
sbb
icebp
fnsave
add
mov
test
incl
jmp
push
int
punpckhwd
xchg
cmp
repnz
ds
fadd
mov
mov
mov
sub
push
sar
decl
mov
push
adc
sub
fdivs
mov
pushl
add
mov
cmpsb
insl
sub
mov
loop
rorb
xchg
jp
insb
scas
call
in
sti
ret
repz
lret
fs
mov
fmull
fidivl
std
decl
dec
sbb
xor
icebp
bound
pop
sub
jmp
aas
rcr
testl
lock
mov
das
sti
or
lock
inc
pop
sbb
xor
mov
xchg
cmc
inc
push
inc
dec
aaa
rol
ljmp
decl
dec
mov
mov
jno
xchg
call
sub
or
je
jg
fmull
add
fistpl
out
aaa
push
fwait
push
cli
jns
jge
sub
mov
or
jbe
jecxz
ljmp
pushl
inc
adc
pop
das
aas
and
test
and
push
into
jge
mov
mov
decl
ret
shlb
jge
aam
and
mov
fisttpl
cmp
roll
pushf
fisubs
or
xchg
pop
pusha
mov
out
iret
out
sbb
out
jb
or
cltd
sub
pop
add
pop
and
stos
aad
push
aas
incl
add
cmpsl
jmp
into
mov
cmp
cmp
jg
out
push
lds
fisubs
xor
pusha
into
cmc
jnp
fwait
adc
out
adc
mov
ret
mov
jnp
and
js
mov
mov
idivl
cmp
les
xchg
test
add
je
xor
dec
xchg
push
jle
cmp
push
cld
faddl
sbb
mov
dec
adc
ret
jb
int
gs
mov
and
adc
ljmp
mov
push
into
outsl
xlat
jl
and
xor
cmp
xor
arpl
incl
push
ds
lret
jl
insb
mov
fdivrs
jl
push
lods
scas
and
shr
mov
call
iret
iret
popa
lret
mov
sahf
iret
hlt
les
leave
in
push
sub
cmp
cmp
cmp
mov
icebp
add
add
sahf
sbb
xchg
decb
scas
lahf
xchg
fimuls
jno
push
repnz
shll
ret
ds
mov
lock
pushl
mov
and
push
and
dec
xor
sub
pop
decl
mov
loope
movsl
pop
insb
or
push
add
leave
fnstenv
movsb
inc
and
int3
aas
and
mov
inc
cmp
push
bound
cltd
lcall
inc
xchg
push
pushl
xor
ret
add
sbb
sbb
popf
push
add
adc
and
push
imul
mov
xchg
shlb
idivl
outsb
fisttps
mov
movsl
jb
out
inc
xchg
pushl
call
push
shrl
mov
and
js
repz
imull
xchg
xlat
xorb
decl
call
xlat
push
mov
sub
cmp
sbb
test
push
mov
mov
das
test
mov
or
cmp
movsl
aad
xor
mov
lret
cld
outsl
cli
jmp
pop
gs
loope
lea
cli
stos
sub
mov
push
push
movsb
cld
incl
jl
xchg
insb
mov
fwait
mov
jbe
inc
xor
outsl
cli
pushl
sahf
xor
mov
sbb
sbb
pop
xor
mov
xor
mov
pushl
cmp
pop
add
pop
inc
in
hlt
sarb
hlt
nop
ret
and
daa
mov
sbb
dec
lahf
mov
nop
adc
jg
mov
bndmov
dec
stos
dec
fmuls
movsl
push
loope
icebp
filds
loopne
lcall
jg
xchg
aam
aaa
das
xchg
push
decl
ljmp
loop
sahf
sub
mov
mov
addr16
lcall
or
inc
decb
adcl
mov
xchg
je
test
nop
test
test
outsl
xchg
into
add
call
sbb
add
std
mov
jbe
insb
lods
adc
add
sub
inc
xchg
les
fnstsw
outsb
cmp
mov
mov
jo
lcall
or
mov
xlat
sti
fwait
pusha
imul
cld
mov
movsb
sbb
or
mov
scas
or
je
ljmp
adc
call
push
add
xchg
adcl
popa
inc
enter
mov
dec
xor
fwait
out
testl
lock
testb
xchg
nop
pop
mov
insl
inc
arpl
xchg
clc
call
call
inc
pop
mov
ss
les
lret
psadbw
std
fldl
cmpsb
popa
jno
ja
cmp
call
addr16
lods
jmp
incl
jns
or
mov
sbb
dec
fs
mov
or
mov
pushl
nop
cli
dec
adc
add
fisubs
mov
dec
mov
pop
jmp
pop
or
cmpsb
aam
sbb
xor
jns
pop
sbb
cmp
add
jnp
cli
mov
outsl
mov
dec
lea
mov
stc
inc
jno
mov
xor
test
imul
inc
xor
jnp
flds
jg
in
fisubl
popf
test
pushf
into
fsts
sbb
jge
push
ss
xor
pushl
in
mov
push
das
jb,pn
sahf
lcall
mov
jg
pop
sub
ljmp
cli
icebp
notl
sub
stos
or
mov
aaa
cwtl
insb
jg
clc
sub
fsubl
jecxz
les
sub
cltd
into
mov
sub
push
pop
aad
loop
dec
pop
mov
sub
push
adc
sbb
addr16
or
jmp
jmp
pmulhuw
inc
mov
fsubs
mov
lret
sbb
sti
repnz
mov
xchg
mov
out
push
outsb
rcrb
cmp
push
dec
aam
add
xor
sub
incl
and
repnz
in
nop
ror
sub
pop
test
xor
call
mov
adc
or
and
jo
dec
dec
or
and
and
test
jmp
push
adc
gs
in
nop
addr16
adc
scas
sbbb
sub
lods
enter
sub
push
inc
mov
jmp
sahf
and
jne
jne
jne
jp
mov
test
dec
dec
std
repz
pop
add
es
cld
push
daa
and
jle
sub
int3
push
mov
incl
les
cs
iret
dec
fldt
inc
adc
cs
cld
dec
mov
mov
mov
mov
add
push
jecxz
dec
add
inc
inc
pop
mov
jle
scas
ja
sub
jmp
es
adc
js
std
aam
inc
dec
repz
jmp
cmp
inc
dec
jg
inc
cmp
inc
cmp
ret
incb
outsb
cmpsb
and
jmp
call
mov
push
fnstsw
inc
sub
push
dec
fistps
dec
std
jnp
mov
iret
fistl
stos
xchg
and
sub
pusha
lret
arpl
aas
pushl
call
xor
mull
fstp
xor
repnz
add
or
incl
inc
adc
pop
pop
lret
sbb
push
or
xchg
fisttps
cmovb
add
lock
cli
jae
lcall
pushf
ret
adc
or
cld
xchg
imul
sub
xor
shlb
decl
mov
int
jl
adc
shl
fnstsw
sahf
lock
fistpl
dec
or
push
pop
daa
mov
push
lret
decb
push
sbb
xor
cltd
aaa
mov
mov
sbb
jmp
loope
addr16
sub
test
pop
mov
cltd
cmp
push
adc
adc
int
mov
fsubrs
and
inc
adc
decl
inc
daa
mov
xor
std
and
push
data16
pop
jne
jmp
mov
inc
ficoml
xor
lcall
scas
ret
mov
mov
pop
dec
loop
in
jmp
ljmp
inc
sbb
decl
dec
push
hlt
push
and
inc
popa
and
cmp
pushf
xor
bound
movsl
sub
js
lcall
cmp
call
pop
rorl
inc
sbb
pop
push
popf
incl
outsl
bound
fcoml
outsb
push
xchg
xchg
fisubs
nop
fsubp
call
dec
aad
scas
adc
bound
out
dec
jns
fs
mov
rep
sbb
mov
lcall
xchg
cmp
iret
push
fiadds
aas
cmp
aad
push
out
pushl
add
loopne
xchg
sub
outsb
outsb
adc
fwait
in
cmp
subl
aad
incl
gs
shrb
ja
in
leave
push
mov
cs
inc
sbb
hlt
xchg
call
jg
ret
data16
sub
mov
loop
cltd
enter
xchg
cltd
jmp
int3
jo
ljmp
pushf
push
pop
mov
fistps
adc
gs
int
push
pop
loop
mov
and
aam
push
iret
add
out
ljmp
jle
fstl
mov
xor
add
lock
lods
les
out
or
push
adc
mov
xor
fnstcw
cmp
push
xor
sti
rolb
sub
fwait
add
mov
cmp
clc
scas
daa
dec
out
cli
cmpsl
fidivl
adcl
daa
lret
inc
dec
jno
out
cmp
incl
loop
cmpsb
sbb
cld
ljmp
les
lds
jecxz
push
fsub
cld
pushl
pop
aam
xchg
pop
pop
push
lret
hlt
mov
push
xchg
dec
hlt
mov
fbstp
mov
jecxz
addb
in
sub
sarl
jb
sbb
mov
inc
mov
hlt
iret
imulb
xchg
clc
push
xchg
ror
push
inc
and
cs
aad
sbb
cs
mov
adc
inc
ss
lcall
mov
and
ss
mov
add
adc
icebp
cmp
dec
bound
cwtl
insb
rcr
dec
mov
push
mov
add
jecxz
and
dec
push
inc
in
add
jmp
lock
mov
jbe
cli
mov
adc
jecxz
xchg
sbb
jns
loopew
mov
fmuls
cmp
aad
fwait
into
cmp
mov
xchg
adc
pop
insb
inc
aas
sub
aas
pop
fs
fmulp
cli
aam
fwait
cmpsb
decl
rclb
push
xchg
jecxz
imul
sub
jg
lcall
lret
pop
out
vrcpps
pop
testb
movsl
loop
sub
incl
fistpl
jns
loopne
cmp
cmp
ret
sbb
mov
jnp
ja
mov
cltd
into
jg
ret
loope
or
cmpb
xchg
cmpsb
add
inc
pop
ljmp
mov
out
jae
lds
loope
sub
push
jl
sbb
cs
inc
out
cli
int
sbb
hlt
loopne
jge
jle
dec
xchg
inc
mov
mov
out
jle
pop
dec
or
insb
mov
inc
xor
repz
and
pop
lds
jp,pt
loop
sahf
lcall
test
jns
inc
movsl
adc
inc
xchg
adc
mov
cltd
pop
sbb
jg
dec
mov
jg
sbb
pop
xchg
dec
lods
call
sub
mov
rol
mov
add
mov
les
cli
xor
mov
jnp
pop
movsb
scas
push
stos
clc
out
cli
fsubl
mov
incl
sub
cld
into
inc
repnz
and
mov
fisubrl
lret
jno
lods
ltr
jns
pop
add
xchg
inc
jmp
mov
dec
xchg
push
ds
test
adc
cmp
xchg
push
jg
mov
lcall
sub
pop
adc
lcall
je
push
push
loopne
cmc
lret
adc
cmpsl
ds
dec
xchg
insl
daa
fnstsw
adc
mov
jmp
sub
ds
push
sub
data16
mov
repz
aaa
mov
xchg
jmp
sbb
sub
fistps
push
inc
jbe
jle
push
or
fsubr
inc
loop
jecxz
lcall
xchg
addr16
iret
mov
xlat
dec
dec
inc
and
push
jb
adc
in
out
cmpsb
dec
les
pop
mov
jbe
xlat
insl
pusha
hlt
aas
nop
push
ror
outsl
push
xchg
xchg
in
fsubr
or
cmpsb
outsl
clc
or
pop
ds
jb
scas
cmc
lds
cmpsl
cmp
daa
jmp
fisttpll
or
rcrl
xor
jp
sbb
cmp
daa
lea
adc
dec
popf
fisubrl
inc
aaa
xor
mov
mov
pop
loopne
call
fwait
sbb
mov
jge
popa
push
hlt
or
nop
ds
pushl
jge
frstor
pop
in
push
mov
in
aas
out
je
fimuls
cli
mov
cmc
jmp
push
outsl
or
xchg
push
cmp
dec
hlt
xchg
enter
shrb
ljmp
sarb
inc
ds
test
xor
ja
add
mov
inc
sub
inc
ficompl
and
pushl
dec
mov
outsb
and
outsl
push
push
sbb
xchg
std
mov
in
pushf
call
das
add
mov
lret
sub
enter
shl
xor
mov
test
inc
scas
rolb
stos
inc
push
fwait
or
jle
rcl
cwtl
xchg
mov
imul
out
int
incl
std
sub
sti
xchg
ss
das
push
push
or
jle
out
lods
loopne
pop
xchg
mov
cmpsl
sub
sub
add
mov
dec
gs
dec
lods
mov
cmp
inc
and
cmpsl
jp
pop
lock
mov
inc
lret
sub
aas
dec
fcomip
dec
push
sbb
je
repnz
adcb
push
aam
sbb
mov
ljmp
pop
loope
push
pop
push
aad
pop
addr16
xchg
cwtl
outsl
arpl
bound
xchg
ds
ljmp
adc
sub
sub
mov
enter
sub
leave
repz
xchg
mov
dec
addr16
cld
lcall
out
cltd
test
jne
fnstsw
pushf
roll
js
call
xchg
inc
divb
mov
jp
es
push
adc
fbld
mov
rcl
mov
lcall
sub
pop
pop
pop
sbb
popa
imul
rorl
test
xchg
mov
imul
jno
mov
add
ds
mov
sub
incl
sub
lret
xor
sub
mov
fsubr
imulb
or
ljmp
mov
dec
cltd
xchg
sbb
ja
push
xchg
mov
pop
lret
insl
add
js
push
aas
mov
inc
cltd
cmp
out
mov
xlat
pop
mov
xor
pop
popa
xchg
ljmp
addr16
push
jecxz
jl
test
sub
call
pop
imul
push
es
or
or
addr16
out
out
mov
adc
push
jo
cmc
cmp
jecxz
lret
sbb
push
lcall
scas
outsb
or
xchg
outsl
sbb
fsts
les
mov
inc
dec
ljmp
xchg
dec
loope
jge
or
mov
add
xlat
leave
pushf
in
adc
sub
decl
inc
out
out
cmp
add
xor
lds
adc
add
in
or
ss
cmp
sbb
xorb
int3
push
and
imul
adc
mov
jmp
push
push
xchg
jo
es
sti
daa
xor
jne
sub
mov
inc
dec
paddsw
std
incl
xchg
jb
ds
mov
sbb
ret
cmc
mov
jg
and
cmpsl
lods
mov
or
xor
sub
lcall
inc
adc
xor
add
stos
mov
loop
std
pop
add
movsb
call
xor
pusha
loop
lcall
aas
gs
jmp
pop
dec
jo
push
or
mov
inc
loop
adc
das
loopne
mov
adc
jns
gs
fdivr
mov
movsl
sub
cltd
bnd
dec
lods
cmp
rol
decl
incl
xor
fwait
rcl
xor
sub
inc
es
mov
inc
jge
inc
inc
cmp
push
jmp
mov
mov
inc
mov
ljmp
push
push
add
fcmove
sar
jge
push
mov
gs
mov
mov
pop
xchg
loopne
incl
ficoms
ret
push
adcb
or
into
pop
inc
jne
add
pop
rcrl
pop
jmp
fiaddl
lods
mov
je
sti
les
adc
stos
cmc
xchg
or
pop
std
xchg
pop
push
jo
xchg
dec
adc
dec
loope
push
xchg
cmpsl
icebp
jp
fnstsw
scas
or
jbe
cmpsl
pop
and
aas
mov
sbb
add
mov
mov
jmp
pop
das
xlat
or
push
xor
xchg
test
in
dec
push
pop
and
adcb
out
mov
sub
pop
add
dec
add
dec
xchg
adc
push
cmp
loopne
jmp
mov
movsl
lahf
arpl
xchg
mov
into
incl
push
add
xchg
mov
sub
and
loope
rclb
sub
in
orl
lcall
adc
les
iret
test
mov
aaa
add
adc
loopne
mov
cmp
sub
sub
mov
fidivl
inc
xlat
aas
imul
push
mov
push
jns
iret
aam
insb
and
notl
in
dec
add
jg
clc
push
cmp
inc
inc
por
aaa
fbstp
pop
into
sub
xor
inc
filds
fcoml
bound
or
cld
in
les
out
add
rclb
add
jmp
jmp
jmp
mov
pop
push
sbb
or
test
mov
jae
adc
sti
mov
sbb
decl
aas
aaa
and
insl
push
cld
mov
adc
or
mov
out
stos
sbb
inc
leave
dec
sarb
pushl
cld
or
sub
aas
sahf
inc
cmc
idivb
test
pop
mov
incl
cld
jmp
pusha
aam
jp
lea
dec
mov
push
lret
push
mov
ljmp
or
daa
pop
cmp
lret
sbb
aas
es
sub
or
hlt
lcall
js
pop
sbb
mov
hlt
mov
jmp
sub
cmp
lcall
ffree
xor
loop
clc
mov
fimull
mov
fcompl
leave
pop
add
popa
mov
sub
cmp
mov
push
leave
sub
adc
std
adc
pop
mov
fs
mov
push
add
lcall
cmp
lret
mov
push
push
stos
test
pop
out
xlat
stos
dec
jl
movb
sahf
movsl
pop
lcall
rcrl
xchg
repnz
inc
or
sahf
pop
fistpll
dec
in
xchg
adc
in
jmp
sbb
dec
lods
aad
adc
test
es
add
dec
lcall
test
bound
pop
inc
into
jge
mov
xchg
mov
sbb
mov
out
xchg
adc
lods
xchg
pop
sub
fldcw
loop
sbb
data16
incl
data16
fistps
faddp
hlt
mov
aam
or
add
nop
enter
into
sub
data16
test
ljmp
les
fdivr
pop
mov
inc
and
jmp
test
enter
fwait
xor
inc
dec
into
ss
and
addl
and
rcrl
pushl
int
push
repz
mov
inc
mov
insb
into
fsubs
mov
pslld
aam
fidivrl
cmp
es
xor
or
iret
pop
dec
ret
inc
ljmp
lcall
into
cmpsl
decl
and
inc
xor
int
shl
pop
jecxz
xor
mov
jmp
stc
inc
mov
stos
jmp
and
inc
jae
xchg
xor
in
mov
xor
add
jno
or
pop
lcall
add
jecxz
sbb
and
xchg
movsl
ret
lods
out
daa
out
lret
pop
pop
stos
movl
push
out
movb
dec
decl
lahf
dec
adc
cli
fs
cld
and
insb
repz
xor
fadds
or
and
decl
xchg
or
add
jecxz
xchg
pusha
add
cmc
ss
int
push
jmp
ss
nop
jae
rcl
outsb
inc
sub
pop
mov
jb
insb
sub
test
decl
hlt
sbb
pop
dec
das
das
lods
cmpsb
sbb
fs
sbbb
cmc
incl
pop
sbb
fdivr
sbbb
sbb
mov
cwtl
inc
call
lcall
xchg
xor
xchg
add
pop
mov
sarb
sbb
jb
fs
ljmp
cli
dec
jae
mov
fucomi
jno
shl
call
add
lret
fadd
jmp
call
ret
ret
pusha
or
pusha
xchg
call
xchg
fcmovu
cltd
pop
dec
xchg
into
shlb
sub
movaps
ljmp
subl
mov
mov
jg
mov
rclb
sub
div
adc
jbe
ss
push
cmp
jno
lea
lcall
cli
incl
jmp
mov
push
and
rclb
jl
mov
dec
jp
out
cli
dec
dec
xlat
dec
sbb
hlt
jg
les
xchg
pop
adc
aam
and
mulb
imul
leave
test
negl
push
push
xor
push
xor
lods
repnz
inc
fidivrs
jmp
test
lods
or
sub
mov
mov
in
lock
and
lods
or
test
pop
jg
ja
call
mov
dec
insl
xchg
lcall
add
xor
lods
outsl
fisubrl
sbb
pop
adc
addr16
push
orl
fdivrs
in
mov
ret
loop
shlb
loopne
inc
mov
jle
ds
lcall
aam
fnstcw
es
aam
push
mov
jmp
dec
inc
mov
fwait
in
mov
xchg
and
lcall
pushl
or
leave
mov
add
shlb
inc
inc
pop
ret
in
insl
in
pop
jns
pushl
jae
decb
xor
outsl
add
gs
insb
adc
aaa
test
clc
jmp
sbb
and
dec
cld
clc
jo
int
jno
lock
xor
mov
inc
jbe
jmp
xchg
repnz
mov
jae
jge
fmuls
adc
mov
mov
aam
and
cmp
jb
add
loopne
loopne
pop
mov
dec
cwtl
leave
shll
popf
sbb
test
pop
stos
dec
xchg
into
call
cmp
mov
call
mov
jns
xchg
add
test
adcb
bound
mov
clc
mov
scas
ds
enter
in
outsb
mov
push
inc
sub
fistps
mov
outsl
pusha
cmp
pop
inc
and
ret
jo
inc
enter
xor
mov
loop
inc
add
sahf
ss
push
push
and
pop
dec
push
stos
loopne
mov
out
pop
jge
jecxz
inc
popf
shrb
pushl
iretw
sbb
xor
fidivrl
lds
xlat
incl
xlat
lock
shr
insb
inc
xchg
cmp
push
push
loope
sbb
incl
popf
shrl
es
out
push
jbe
lcall
jo
das
arpl
call
fsincos
inc
jbe
imul
jmp
movsl
add
movsb
push
xchg
inc
int3
inc
aam
sub
andb
push
pop
stos
adc
call
xor
lods
push
data16
pop
inc
mov
cld
js
nop
cli
mov
aaa
cld
mov
mov
mov
mov
je
jmp
xor
xchg
scas
lds
mov
adc
xor
mov
mov
mov
and
xchg
data16
popf
sbb
pushl
inc
xchg
mov
clc
mov
push
push
test
aam
jg
ljmp
lock
jae
inc
imull
push
out
into
jecxz
cwtl
lcall
ljmp
xorl
cmpsl
cmc
repz
cltd
xor
ljmp
xor
inc
push
fstl
aam
push
ljmp
out
push
insl
mov
jmp
aaa
sub
push
cmp
pop
test
pop
mov
adc
cmpsb
lahf
and
add
jle
call
incl
test
mov
xchg
mov
add
xchg
mov
mov
sub
pushl
xchg
dec
pop
std
add
stos
xor
not
mov
mov
and
arpl
push
hlt
out
clc
lcall
out
lcall
enter
inc
ret
xchg
mov
andb
incl
mov
and
xchg
dec
into
aad
cld
jecxz
int
sbb
nop
jno
sahf
lds
incl
cs
pop
adc
addr16
lds
sbb
out
add
mov
jmp
stos
dec
mov
stos
out
seto
cwtl
pop
out
imul
mov
mov
cld
pushl
or
dec
mov
mov
push
loopne
pop
js
pushl
std
pushf
inc
test
ds
jo
lahf
push
mov
xchg
inc
mov
adc
push
pushl
cld
push
lock
inc
cmp
fimull
lret
lock
jnp
decl
push
add
xor
jg
ljmp
outsb
mov
scas
jo
andl
cmp
adc
add
lcall
bound
dec
lahf
xchg
adc
pop
push
push
pushf
cmp
in
cli
ret
cmc
mov
add
and
mov
out
jle
pop
out
test
mov
dec
lret
es
stos
test
les
lods
inc
mov
imul
fmull
mov
or
mov
js
dec
xchg
cld
mov
pop
add
jo
test
cli
ljmp
mov
sbb
cmp
mov
xor
fisubrl
inc
xor
inc
fisttps
pop
addl
lcall
push
std
xchg
subl
push
aam
push
add
and
jae
mov
cmp
jb
in
or
loop,pt
push
mov
cmp
int3
mov
or
jmp
cmpsl
adcb
jl
xchg
mov
pop
cmp
leave
std
mulb
fsubrs
sar
jno
std
lcall
out
mov
jae
pop
int3
or
loopne
scas
fiadds
incl
sbb
mov
test
mov
scas
ret
mov
cmp
lret
aad
outsl
and
cld
xchg
pop
pop
into
mov
mov
jg
lret
popa
add
xor
xchg
ret
in
or
inc
or
xor
xchg
test
mov
cli
push
add
les
or
mov
pusha
daa
cld
ljmp
sahf
jg
push
sbb
in
int3
out
dec
mov
popf
pop
daa
std
cmpsl
lcall
and
push
stc
mov
int
mov
addl
clc
incl
nop
clc
fs
adc
pushf
rorl
mov
jle
fwait
es
dec
cmp
dec
xchg
push
adc
push
sub
cld
fldcw
adc
mov
sub
and
aas
dec
mov
or
dec
add
cmpsb
outsl
out
int3
pushl
incl
jg
int
dec
pop
loopne
adc
xchg
cwtl
in
loope
outsl
push
fcomip
fidivrs
mov
push
ffreep
imul
in
jno
jp
or
leave
add
jmp
sbb
std
jmp
xchg
sahf
xor
and
in
lods
add
arpl
ret
mov
mov
decl
and
mov
xor
arpl
pushl
push
xchg
insl
pop
imulb
push
lods
scas
cmpsb
rclb
das
push
pop
es
incl
addl
jne
bound
fisttpll
insb
adc
inc
addr16
clc
pushl
stos
adc
lret
add
sub
xor
fucomi
cmp
cmp
std
sbb
sbb
dec
pop
adc
mov
test
cmpsl
pop
arpl
and
aam
ljmp
push
imulb
pushl
and
ljmp
imul
xor
push
pop
gs
inc
lret
lcall
cli
add
add
push
mov
call
pop
in
pop
cmpsb
or
aam
push
pop
imull
push
sub
pop
decl
bound
es
mov
test
notb
outsl
ret
les
pop
cmp
test
ss
ss
sub
je
pop
or
mov
mov
icebp
inc
cmpsb
loop
add
and
jmp
jne
scas
in
popa
sub
jmp
std
add
push
xchg
xor
fildl
and
decl
sbb
adc
fnsave
fs
lods
jge
rorl
mov
cmp
pop
fwait
pop
and
dec
scas
jp
push
es
sbb
add
mov
call
mov
mov
inc
or
rclb
pop
das
and
fwait
add
cmpsb
lcall
xor
inc
xor
push
inc
mov
mov
negl
clc
lcall
movsl
add
lods
pusha
loop
iret
cld
stos
adc
ret
aam
pop
dec
inc
bnd
sub
incl
mov
add
jnp
adcl
lcall
test
cmc
pop
sbb
push
pop
mov
inc
stos
fwait
imul
decl
inc
mov
cld
loopne
lret
mov
xchg
push
std
fisubrl
shr
pop
jb
mov
call
sbb
xchg
lahf
jg
ret
sub
xchg
and
sbb
negl
incl
ret
call
cmpsb
cmpsl
imul
sahf
rclb
xchg
int3
xchg
jmp
xchg
stc
daa
push
out
test
dec
and
lahf
or
rcr
inc
repz
out
rcll
jecxz
or
push
sub
cmp
in
aam
lods
xor
push
cld
push
mov
incl
inc
andl
insb
sbb
in
and
dec
add
lahf
lret
leave
aad
xor
and
decl
cmp
rorl
cltd
xchg
dec
xor
loop
out
repz
adc
call
cmp
insb
mov
pop
push
mov
jb
out
mov
mov
cmp
insl
clc
mov
jp
cli
sbb
jg
fistpll
jb
ficoml
add
dec
int3
clc
pop
imulb
lods
shrb
or
fstpl
jecxz
xchg
mov
adcb
cld
pushl
movsl
and
pop
cmpsl
imul
ljmp
faddl
dec
push
call
cld
push
cmpsb
out
pushf
push
ljmp
mov
push
pop
mov
push
jle
lcall
dec
pop
shrl
stos
cltd
jo
dec
dec
xlat
sahf
mov
sub
dec
ljmp
jg
mov
call
gs
loop
in
push
lahf
pop
fwait
cmp
gs
xchg
les
ljmp
das
fimuls
icebp
mov
incl
nop
lods
mov
outsb
stc
jp
sahf
dec
jb
sub
cmp
adc
dec
cmpsb
xor
test
in
or
and
cltd
in
xorl
popa
or
ljmp
je
sub
inc
xchg
sub
sbb
fcoml
inc
xor
push
fs
and
dec
fldenv
pushl
and
aas
pop
push
xchg
push
push
push
and
jo
adc
mov
sub
push
out
int3
and
adc
test
das
clc
jg
sub
add
cmp
xor
movl
cmp
dec
ret
sbb
movsb
pop
jmp
mov
mov
cmp
jmp
mov
xchg
pop
popf
loop
xor
nop
adc
nop
pop
sbb
mov
lcall
cld
mov
dec
lahf
mov
push
xchg
test
cmp
fwait
mov
sub
fsts
loope
sub
and
fisttps
jo
call
pop
test
lret
enter
sub
add
xchg
movsb
inc
xchg
ret
add
scas
stos
adc
sar
or
daa
mov
lret
in
lret
popa
push
sti
sbb
sbb
sbb
mov
jmp
inc
outsb
add
popa
inc
pop
lds
xor
lret
clc
or
pop
cmp
and
movsb
arpl
pop
pop
adc
pop
std
or
dec
dec
mov
pop
mov
push
mov
mov
xor
in
outsl
mov
call
rcl
and
lret
cmp
pop
xor
fiaddl
jns
inc
incb
sbb
pop
hlt
inc
jmp
mov
mov
xchg
mov
jmp
push
push
clc
jae
dec
aad
jg
icebp
std
inc
cmc
gs
dec
ds
xor
sub
push
aaa
subl
xor
and
or
and
ljmp
add
pop
sbb
inc
jns
fbld
push
int3
pop
aas
jo
add
sbbb
inc
add
enter
in
sbb
jmp
push
push
xchg
mov
jne
jmp
call
mov
lahf
xlat
push
sub
ficompl
fdivr
jge
add
jp
icebp
adc
mov
cmp
jb
jmp
andl
lock
clc
in
mov
iret
call
ljmp
push
jle
mov
mov
adc
sbb
ljmp
pop
lods
std
and
xchg
sbbb
mov
push
and
pop
pushf
fbld
adc
call
xchg
loope
mov
mov
lcall
scas
mov
add
add
jg
push
sub
bt
bound
aaa
rcl
out
aad
in
or
movsl
push
dec
xchg
mov
ret
call
mov
dec
rcll
push
mov
mov
adc
mov
bound
in
rclb
pop
imul
loopne
call
mov
in
cmp
inc
scas
adc
test
inc
cmpsl
ficompl
addl
jge
xchg
dec
int3
mov
fcoms
cmpsl
in
je
sub
in
add
mov
inc
insb
notl
dec
loope
dec
out
or
ljmp
and
add
push
jnp
lock
movsl
adc
arpl
loop
mov
cmpsb
in
sarb
sub
xchg
jne
ret
int
push
movsb
mov
mov
call
das
out
inc
xchg
scas
push
jge
add
sbb
mov
lock
xchg
jp
mov
inc
push
push
jl
cld
inc
lcall
push
cmp
mov
mov
sub
xor
pushl
mov
rcr
lcall
test
outsl
sbb
pushl
mov
das
and
jp
inc
repz
lods
movsl
mov
out
aaa
incl
adc
fwait
add
lock
dec
ret
jb
dec
inc
push
mov
dec
dec
lcall
jmp
imul
cltd
frstor
sbb
loopne
add
adc
repnz
jmp
and
xchg
sbb
add
out
mov
inc
stos
movsl
mov
cwtl
insl
jae
dec
leave
sbb
scas
dec
mov
sbb
jp
dec
je
hlt
stc
push
faddl
ret
fidivrs
repz
movsl
scas
sahf
stos
mov
outsb
sahf
lret
push
sti
popl
push
or
inc
stc
push
xor
js
ljmp
popa
jmp
pop
mov
pop
stc
push
cmp
lahf
adc
adc
push
fsubr
repz
jmp
loopne
aaa
test
xor
and
cmp
xor
out
stos
aas
nop
imul
xlat
lahf
incl
mov
in
dec
fimull
mov
push
mov
and
ss
scas
and
fsubrs
pop
xchg
and
sbb
popf
cwtl
repnz
dec
sub
test
fidivrl
and
xchg
ljmp
es
in
test
testl
daa
inc
int3
rcll
adc
jmp
mov
cmc
lret
call
ss
ja
shrb
dec
inc
cmp
sbb
xchg
into
les
or
clc
cmp
jecxz
mov
inc
popa
pop
xchg
jmp
lds
xor
cmpsl
push
call
fisttpll
mov
sub
pop
repnz
jmp
add
stos
push
dec
jmp
pop
and
out
add
test
lcall
movsb
sub
cmp
sub
aad
add
sub
mov
ror
fucomi
aad
repnz
push
in
cli
testb
gs
jmp
add
push
cmp
lcall
mov
mov
rcrb
or
dec
aad
adc
in
decl
xor
call
ficoml
pop
pushf
out
mov
pop
pop
push
test
or
xor
xchg
out
js
int
mov
cmpb
insl
bound
decl
push
addr16
test
lahf
mov
pushf
and
push
ret
xlat
jae,pn
shll
push
push
mov
js
daa
enter
xlat
ja
test
lret
inc
jo
sti
mov
in
adc
xchg
das
clc
mov
in
xchg
fisubs
scas
inc
movsb
cs
je
xchg
xchg
rorl
nop
ljmp
jg
push
std
pop
or
cwtl
jmp
xor
push
fcomip
incl
push
mov
dec
or
leave
xchg
jmp
jg,pt
ret
add
pop
cmp
incl
out
sti
mov
dec
sub
cld
scas
mov
adc
inc
jnp
fisttpl
mov
test
bound
and
cmpsb
sub
call
mov
jns
repz
fs
fimull
iret
mov
xchg
adc
mov
call
dec
mov
jno
rorl
jbe
push
add
add
sub
jmp
insl
ja
lcall
push
out
pushf
xchg
sub
and
decb
mov
xor
xchg
gs
pop
cmpsb
jne
stos
dec
lret
dec
fists
jle
rcl
jl
out
cli
ljmp
push
xchg
push
leave
push
in
iret
outsb
int3
into
aam
call
or
xchg
out
call
mov
outsl
ret
pop
jbe
repnz
inc
ds
pop
popl
lcall
lcall
shlb
mov
out
adc
xchg
add
jns
mov
adc
insb
negb
in
and
int
orb
push
in
add
mov
xchg
fnsave
pushl
std
mov
stos
scas
mov
out
inc
arpl
xor
pop
mov
and
incl
rorl
mov
pop
add
xor
pop
push
xchg
pop
sar
das
mov
pushf
mov
mov
jno
sub
pop
hlt
adc
ljmp
inc
sub
and
in
ss
lret
cmp
test
cli
xchg
outsb
add
lcall
xchg
adc
add
rcrl
cmp
adc
shl
shlb
decl
pop
pop
xchg
pop
clc
push
bound
cmp
dec
orl
jnp
repnz
mov
hlt
push
fs
imulb
out
lock
inc
mov
cmpsl
rol
gs
lcall
jp
ja
clc
push
jno
lods
aad
dec
add
loopne
or
je
push
mov
lcall
popa
inc
cmp
add
xchg
lret
pop
testl
jae
xchg
movsb
ljmp
jne
daa
mov
pop
pushl
pop
xchg
sbbb
movsb
rcll
imul
loopne
pop
sbb
decl
dec
bound
dec
or
pop
hlt
sub
push
push
mov
fwait
cmp
ljmp
and
xchg
or
sub
inc
push
fucomp
sbb
imul
rcrl
jbe
cmc
mov
dec
and
jp
inc
clc
sbb
pop
decl
push
add
dec
dec
pushf
dec
loop
jo
dec
mov
inc
enter
dec
mov
adc
aad
add
mov
test
pop
dec
dec
inc
push
inc
lods
jmp
and
pop
sbb
sub
aaa
pusha
xor
das
add
out
adc
jecxz
outsl
cli
dec
nop
test
iret
movb
in
js
sti
dec
nop
shll
cmp
push
outsb
test
cltd
subb
add
sbb
insb
or
rcrb
mov
dec
sub
decl
repz
add
jp
shrl
ds
lock
insb
inc
jns
jecxz
test
pushl
jae
sahf
movsb
out
mov
dec
jb
loopne
movsl
inc
sub
xchg
inc
push
add
mov
and
aas
inc
adc
lds
adc
aas
lret
lcall
sbb
inc
and
cmp
mov
jne
stc
jmp
insb
mov
sub
lods
ja
repz
les
lcall
sub
sub
bound
adc
lock
mov
icebp
sbb
sub
mov
mov
decl
mov
pushf
add
jb
sbb
lods
pop
add
std
cld
addr16
jg
jg
into
loopne
jge
aaa
popa
pop
xchg
out
xchg
in
cmpl
inc
dec
mov
bound
sahf
xor
fstl
enter
jbe
or
push
xchg
rorl
scas
adc
mov
sbbl
dec
mov
fwait
adc
mov
jp
mov
sub
faddl
pop
pusha
shll
jns
popa
mov
mov
int
mov
xor
insb
mov
mov
fnstcw
xor
aam
rcl
sti
dec
call
mov
xchg
add
mov
mov
nop
inc
push
filds
in
enter
cmc
pushl
rcrb
clc
xchg
push
mov
mov
cmovs
push
sub
dec
loop
adc
sub
push
or
adc
popf
sbb
dec
cmp
xchg
xlat
iret
popa
pop
ljmp
pop
and
pop
outsb
out
xor
jne
inc
in
or
lock
or
push
sbb
ds
push
cmc
cmp
incl
xor
pop
shl
mov
nop
and
clc
shrb
mov
jg
call
pusha
iret
push
mov
popf
mov
xchg
mov
vpaddw
data16
scas
call
dec
jbe
adc
add
int
mov
pop
test
subl
add
pushf
or
int3
insl
stos
sbb
test
rcrb
hlt
int
outsb
pushl
into
stos
cmp
ds
push
imul
lcall
push
add
push
aas
mov
sub
mov
jbe
loopne
push
push
and
shll
leave
stos
frstor
dec
pushf
cs
cmpb
out
lcall
xchg
andl
sub
in
fdivl
xor
cmp
and
clc
lcall
test
jnp
mov
lcall
and
mov
pushl
push
sti
es
push
sbb
push
stc
or
insb
cmpsl
inc
lds
popa
stos
jle
fs
sub
pop
cmp
test
insl
enter
jmp
int
cmpsb
loop
dec
mov
jecxz
fidivrl
cmp
or
test
loop
call
cmpsb
xor
loopne
sub
fisttpl
mov
push
repz
call
pop
lcall
incl
mov
adc
iret
lret
outsl
jnp
jae
push
aaa
scas
shlb
mov
inc
pushl
cmp
sub
mov
out
lea
scas
mov
adc
xchg
jmp
dec
mov
sti
add
jbe
xchg
xor
imul
mov
cmpl
ljmp
fmulp
and
addr16
push
aam
daa
jp
dec
xchg
lcall
pop
pop
add
popf
dec
rorb
and
fcomps
call
sbb
jnp
add
scas
push
lahf
sbb
add
sub
mov
or
imul
int
inc
outsb
mov
inc
dec
out
ljmp
aad
and
lock
or
ja
pop
cmp
ds
roll
xchg
nop
push
pmovmskb
dec
inc
pop
lds
popf
popa
jmp
xchg
dec
pop
int
rorb
hlt
mov
xchg
sar
mov
add
cld
push
sub
inc
cmc
pop
push
or
mov
lcall
and
mov
dec
cmp
je
in
add
mov
mov
push
rorl
call
ret
movsl
subb
fcomps
cmp
mov
dec
pop
dec
dec
adc
and
pop
cltd
xor
push
fmuls
pop
popa
shr
jae
decl
out
pop
les
mov
fwait
mov
insl
mov
lods
inc
int3
dec
clc
std
pop
lcall
bound
sbb
push
aam
insb
xor
cmpsl
cltd
and
jmp
dec
xchg
and
push
sbb
cmp
xchg
xor
mov
notl
inc
mov
loopne
pop
fmuls
incl
pop
adc
daa
in
push
lahf
subb
and
add
jl
pushl
jl
out
add
in
ljmp
scas
pop
outsb
mov
xchg
fildl
jnp
int
add
andb
aam
xor
popl
clc
pusha
and
idivb
js
ss
ljmp
or
mov
icebp
sbb
or
xor
xor
daa
jnp
leave
fmuls
scas
xor
xchg
test
insb
fiadds
jg
cli
fidivrs
lcall
lods
cmp
pop
inc
scas
xchg
aas
xchg
xor
and
mov
in
push
mov
movsl
fistps
add
out
mov
fsubl
imul
fdivr
pushl
pusha
mov
repz
out
or
aaa
xor
jecxz
mov
lods
decl
outsl
mov
pop
push
stos
add
mov
mov
mov
out
mov
xor
sbb
std
jg
das
add
push
dec
sbb
imul
fs
adc
inc
shl
mov
leave
mov
lods
lock
bound
jl
adc
sub
jns
inc
pop
or
jnp
mov
and
notl
adc
cld
das
shll
adc
cmpsl
loope
push
pop
cli
decl
jns
in
lods
xchg
std
cltd
shlb
sbb
jmp
add
xchg
push
mov
inc
and
sahf
and
ljmp
pop
test
cli
pop
mov
sbb
loop
pmulhuw
push
nop
lret
push
push
js
fistl
mov
repnz
sbb
rcll
ds
fisubrs
fists
out
push
mov
adc
push
cwtl
and
inc
je
or
inc
fwait
dec
rorl
xchg
push
push
in
sub
adc
inc
movsl
aaa
cld
pushl
ret
mov
repz
aas
dec
jecxz
or
inc
sbb
addl
insb
xchg
fisubl
movsb
sub
mov
sbb
jnp
outsb
jne
push
test
push
pop
push
addr16
mov
gs
decl
dec
repz
imulb
popf
inc
add
adc
sbb
cmp
add
pusha
xchg
fdivs
lods
push
push
or
mov
pop
xchg
jp
adcl
mov
pushl
call
hlt
gs
mov
mov
cli
jb
dec
add
cmp
pop
je
push
cmc
cmp
daa
in
and
je
stc
mov
push
xlat
sub
lahf
shlb
test
fstpl
iret
xchg
gs
fldl
pop
cmpsb
js
pop
insl
mov
adc
dec
sti
sub
inc
jno
jmp
lcall
push
leave
pop
sub
ret
xor
mov
popa
cmp
cmp
mov
in
cld
ss
aaa
xchg
jg
enter
loop
sahf
mov
repz
mov
shlb
dec
xchg
push
jns
add
jmp
fcoms
js
cli
jg
cli
xchg
or
pop
loop
cmp
xchg
mov
les
inc
add
dec
add
imul
mov
cmp
add
popa
iret
and
into
repnz
cli
cmp
jae
aad
lret
cmp
outsb
std
xor
sbb
in
and
mov
addr16
mov
fidivs
sar
jmp
rcl
arpl
loope
daa
aad
je
push
fsubr
lret
adc
cmp
pushf
int
in
sbb
push
xchg
xor
sbb
push
xor
movsb
push
adc
mov
add
shlb
cwtl
shll
in
xchg
popa
xor
ljmp
repz
mov
les
stos
or
paddd
mov
xchg
ljmp
mov
pop
push
push
int3
je
shr
mov
cmp
in
mov
ljmp
sub
sub
push
mov
fadds
xchg
cmp
shl
lock
xchg
rclb
cmp
dec
loope
cwtl
xchg
stos
mov
ret
and
mov
or
and
xchg
mov
mov
fisubl
lahf
adc
sar
jg
sub
out
dec
mov
outsb
popa
fmulp
or
aam
pop
nop
in
pushl
mov
sub
out
xchg
inc
andl
jecxz
mov
mov
adcl
jmp
testb
sub
mov
aad
mov
arpl
clc
stos
jg
mov
mov
orl
xchg
shrl
lcall
and
xchg
test
dec
fldcw
xchg
ljmp
cld
jl
cmp
push
incl
dec
clc
adc
stos
gs
aas
and
adc
lods
scas
cmp
mov
test
inc
cli
xor
jno
inc
test
sahf
xchg
popf
pop
lret
or
outsb
push
fildll
cmp
hlt
mov
pushl
sbb
data16
jns
fcmovb
inc
adc
adc
pop
ret
jb
das
cli
inc
or
mov
jns
ss
insb
cmpsb
inc
push
jg
or
ljmp
xchg
test
pushf
cmp
test
pushf
mov
dec
add
lret
sub
jmp
push
stc
daa
popa
mov
jne
ljmp
or
add
gs
jno
mov
dec
pop
das
adc
lret
out
sub
or
decl
hlt
stc
jno
aam
push
shrl
maskmovq
testl
push
divb
call
decl
mov
fimull
daa
adcb
data16
adc
mov
xor
stos
pop
mov
notl
incl
add
xor
frstor
pop
add
rol
enter
lahf
imul
aam
add
decl
test
jp
into
jno
hlt
jecxz
and
sbb
dec
pushf
outsb
xchg
in
add
xchg
test
pushl
and
mov
test
or
divl
adc
cmp
sub
incl
ret
daa
mov
xchg
sbb
cld
xor
jmp
inc
lahf
lds
ret
and
incl
aam
adc
scas
add
rclb
mov
loopne
call
out
push
jg
xor
sub
js
cltd
mov
jb
decl
and
inc
in
jae
nop
xor
or
cli
dec
jle
fiadds
ret
sahf
mov
fdivp
lods
mov
adc
mov
jb
jge
mov
es
pop
push
lret
jg
gs
sbb
push
inc
adc
jmp
inc
dec
ds
pop
xor
popa
lcall
ret
mov
testb
pop
in
jnp
cmp
call
or
xor
sbb
xchg
movsl
inc
xchg
push
jne
pop
sub
add
cld
jo
pop
imul
inc
xchg
lock
cmc
xchg
jo
sti
lret
jge
popa
fstpt
inc
dec
dec
mov
arpl
add
mov
pop
iret
mov
pop
in
push
sbb
push
mov
in
js
xor
jmp
pop
sub
cs
mov
or
test
xor
pop
test
cmp
andb
cmp
in
push
popa
addl
adc
mov
dec
xor
xor
test
push
sbbl
and
push
jge
inc
sbb
int
sub
divl
subl
xchg
pop
jns
mov
jmp
cli
jle
cmc
mov
subb
mov
cmpsl
scas
mov
cmp
aad
shlb
pushl
push
cmp
adcl
test
nop
mov
sbb
call
ljmp
or
or
mov
pop
and
shrb
jb
xchg
nop
cmpsl
mov
lcall
pop
mov
pop
ss
lret
mov
movsl
outsl
js
adc
cmc
inc
lock
ljmp
adc
fs
add
sbb
push
cmp
gs
pushl
cs
inc
mov
cmp
fstpl
mov
shl
mov
sub
daa
fmul
call
in
test
or
roll
movsb
out
cmc
in
sar
jmp
mov
test
aad
stos
dec
push
test
insl
push
mov
xchg
mov
incl
mov
push
cs
jb
fnstsw
dec
lock
cmp
insl
adc
jg
scas
pop
inc
ljmp
push
pop
mov
pop
lret
cs
mov
clc
decl
pushf
cmp
repnz
fdivl
not
cmp
clc
mov
fcmovne
fisubs
test
and
int
pop
and
mov
std
movl
call
sub
sahf
out
mov
addr16
lahf
add
in
or
mov
hlt
pop
loopne,pn
sbb
lret
mov
jne
addr16
sbb
cwtl
pop
scas
ljmp
xor
xchg
lods
bound
push
xor
mov
xor
outsb
xor
mov
lock
in
jnp
xor
cltd
pop
int3
mov
in
popa
adc
jmp
mov
jno
dec
push
adc
lock
lods
aaa
stc
pop
call
sbb
jmp
cmpsb
pop
and
add
call
ljmp
inc
xchg
aam
pop
mov
mov
out
mov
lods
and
insl
push
call
cld
lea
jns
and
cs
popf
or
int3
sti
out
inc
or
incl
aas
xor
imul
push
add
adc
dec
aad
xchg
ret
dec
outsb
mov
aad
dec
jmp
mov
in
and
cs
fcmovne
push
or
and
jo
call
inc
mov
out
pop
jle
cmp
shll
mov
cmp
call
cmp
aaa
mov
jg
cmpsb
mov
xchg
adc
cltd
and
ds
lret
mov
lods
add
push
sti
shl
call
push
ds
in
jae
mov
jmp
mov
adc
dec
cli
push
lcall
mov
cmpsl
push
xor
xor
stc
mov
ss
mov
in
loope
jmp
push
mov
mov
mov
mov
scas
jge
jp
pop
data16
jne
cmp
out
push
out
xchg
or
sbb
cmp
data16
inc
push
bound
out
mov
shlb
mov
call
jp
cmc
jmp
mov
sbb
or
sarl
clc
jnp
call
aam
cmp
incl
pop
stos
in
insl
ret
leave
lahf
push
jl
mov
push
sbbb
adc
and
mov
dec
cmp
inc
xorps
ja
lock
decl
mov
add
scas
les
jb
jno
push
es
mov
mov
cld
lret
orl
ja
ret
imul
stos
jg
incl
inc
adc
jl
mov
xchg
popf
leave
jmp
in
jbe
out
fsub
aaa
std
sti
cmpsb
out
sub
je
adc
mov
xlat
xlat
test
outsl
addb
push
pushl
mov
mov
pop
push
inc
dec
mov
mov
dec
call
aad
test
test
sub
push
pushl
jecxz
xor
sbb
icebp
mov
mov
pop
add
pop
pop
daa
pop
jnp
inc
jmp
decl
sbb
xchg
cmp
sub
and
dec
data16
xor
xchg
and
rol
or
jbe
mov
mov
push
daa
jns
insl
cmpsb
mov
sub
cmp
jnp
shrl
loopne
hlt
dec
ds
int
push
inc
popa
xlat
inc
sbb
flds
or
pop
pop
loop
bound
jmp
dec
dec
sarb
mov
sub
decl
daa
jp
bound
mov
ljmp
aam
shrb
jg
xchg
rolb
test
aam
mov
jecxz
out
mov
aas
xor
push
stos
fcmovnb
mov
cvtps2pd
cmc
dec
push
stc
mov
jmp
mov
jecxz
xor
and
insl
inc
push
mov
lahf
mov
mov
sub
int
pop
or
or
incl
je
xor
and
sbb
call
enter
or
mov
popa
stos
or
out
jne
jmp
and
fistpl
incl
fisttpl
mov
push
pop
xor
dec
aaa
fbstp
adc
idiv
jg
push
inc
cmpsl
jmp
xchg
jg
mov
push
pop
stos
lock
sbb
insl
adc
pop
and
pushl
loope
xor
push
aaa
jne
xchg
mov
cmc
lea
frstor
pop
repnz
or
call
sub
or
negl
jge
sbb
inc
aaa
adc
mov
incl
pop
push
add
sbb
call
gs
jecxz
daa
lea
sub
jmp
sbb
sub
aaa
in
daa
stos
sarb
pop
das
sub
xchg
jmp
sahf
call
int3
sarl
outsb
ja
sbb
push
aas
and
sub
or
int
cmp
popf
mov
inc
les
gs
xchg
in
mov
mov
loope
dec
int
pusha
icebp
daa
icebp
inc
inc
inc
cld
and
repnz
lcall
frstor
mov
cmp
and
cmp
out
dec
fcoml
outsl
shll
jnp
ss
in
mov
iret
dec
shlb
sub
addb
jl
test
ljmp
jne
ja
outsl
sbb
sub
add
mov
mov
ret
add
jecxz
cs
mov
in
mov
leave
and
stc
stos
lock
addr16
out
or
dec
inc
push
aam
jg
es
or
ds
lea
xor
jecxz
jle
jne
or
mov
push
inc
cmpsl
adc
pop
out
or
fmul
or
dec
fists
dec
push
add
lods
hlt
xchg
ds
fwait
or
mov
add
dec
daa
push
stc
out
pop
dec
push
dec
call
call
jae
dec
push
mov
lea
jecxz
in
idivb
jg
fs
sahf
cwtl
sar
incl
or
sbb
cmp
jmp
aaa
outsb
inc
stc
test
jl
sub
dec
cmp
xchg
in
add
decl
fwait
imul
mov
add
iret
sbb
adc
scas
mov
incl
or
pop
mov
bound
ljmp
add
loop
das
push
cmp
mov
fdivrs
or
das
cmp
xchg
test
ss
aaa
addb
push
lods
test
xor
ret
fldl
dec
cmp
push
xchg
mov
aam
sbb
fisttpl
bound
lcall
cltd
jp
in
stc
pop
jmp
inc
cmp
cmp
movq
out
outsb
outsb
xor
pushl
gs
inc
adcb
or
stos
in
imul
fs
lret
lcall
add
jae
testl
scas
push
mov
xchg
mov
jb
incl
mov
lahf
mov
pop
jns
jb
data16
add
xor
mov
int
clc
decl
movsb
imul
cmp
outsb
or
popa
adc
xchg
adc
mov
push
jbe
mov
cmp
es
xchg
fcoml
jg
repnz
pop
jmp
les
mov
stc
mov
and
scas
fstpt
inc
js
mov
shll
mov
or
jo
or
push
mov
lahf
insl
jnp
or
ljmp
lods
push
arpl
cs
pop
or
out
ljmp
sbb
add
ljmp
subb
loope
cs
push
repz
popf
dec
pop
std
les
insb
repnz
xor
xchg
mov
pop
inc
or
rcr
add
xlat
outsb
mov
mov
daa
mov
sbb
mov
xchg
push
cmp
pushl
ret
shll
jecxz
mov
jne
mov
mov
movsb
ret
es
sbb
mov
fsubrl
lock
jbe
lret
fists
in
sub
jbe
adc
movsl
adc
std
xchg
jmp
sbb
mov
pop
fiadds
imul
or
faddl
ljmp
xor
pop
push
fmul
in
inc
push
dec
cmp
sub
jl
jmp
xchg
stos
mov
adc
je
push
ja
arpl
mov
mov
shr
sarl
call
inc
andb
fdivr
fprem1
out
jno
push
jg
in
repz
ds
lods
cli
mov
xorb
cmp
pop
rorl
ss
inc
jb
sbb
xor
cld
call
cmc
xchg
rclb
insb
xchg
scas
add
jge
dec
jns
ljmp
cmp
xchg
xchg
icebp
pop
ret
std
loop
cltd
in
mov
outsl
sub
mov
pushl
out
mov
xor
push
jmp
mov
cmp
dec
xor
add
pop
js
dec
sbb
mov
xchg
add
pop
jmp
push
add
or
add
out
clc
cmp
lcall
sbb
je
mov
cmp
jmp
incl
sub
pop
cmp
push
pusha
cld
es
out
negl
inc
dec
repz
iret
out
popa
xchg
ljmp
xchg
push
jge
mov
fucom
mov
setne
incl
outsb
push
movsl
mov
fldl
out
mov
in
sbb
push
clc
pop
test
sub
decl
loopne
cmp
sub
mov
repnz
inc
ficoml
clc
jmp
jns
mov
xchg
stc
gs
jge
add
decl
call
add
outsl
mov
ret
rep
pop
es
pop
xchg
jg
add
inc
test
pusha
out
mov
push
movsb
push
das
fcomip
pushl
mov
push
xchg
sub
movsl
cmp
jmp
std
fwait
inc
add
add
ss
or
cmpsl
imul
dec
adc
jg
mov
mov
cmp
cmp
cli
mov
or
mov
push
sbb
push
push
inc
jmp
add
xor
call
mov
int
xlat
and
imul
aaa
cld
pop
pop
fwait
xor
popf
shl
dec
roll
mov
out
adc
out
orb
lret
ret
mov
aas
ret
cmp
enter
lret
repnz
jle
out
sbb
sbb
mov
stos
call
aad
sahf
or
pop
push
push
ljmp
decl
mov
ret
clc
or
mov
jb
mov
pop
inc
loope
or
mov
jo
ja
cli
adc
incl
xchg
insl
pop
sub
push
in
fptan
std
inc
cmpsl
and
sub
xlat
mov
push
push
lsl
in
mov
repz
into
leave
mov
jmp
xor
aaa
jns
push
movsl
sub
xor
dec
int
sub
fstp
cmp
setae
pop
fwait
into
fidivl
xor
outsb
test
movsl
dec
xchg
dec
out
ror
fs
out
and
and
mov
pop
jmp
lods
jmp
repz
jo
popf
jnp
or
popa
test
std
and
jl
mov
imul
call
ds
sub
imulb
mov
leave
jge
popa
add
incl
scas
and
mov
and
sbb
push
inc
aam
cmpl
sub
inc
fs
pop
and
adc
decl
cmc
cmp
in
cmpb
test
xchg
inc
pop
adc
mov
sub
orb
lods
pop
in
cmp
decl
cmp
out
je
adc
mov
pop
adc
mov
adc
pushl
dec
lret
cmp
dec
push
or
ljmp
int
jp
pop
lahf
mov
incl
lcall
push
rcrl
dec
popf
aas
add
dec
xlat
inc
arpl
call
xor
je
mov
gs
lds
sarl
scas
and
sarl
inc
fwait
inc
call
lock
cmp
adc
push
jle
push
xchg
inc
adc
push
insl
jae
mov
jecxz
push
xchg
sar
decl
cld
mov
fsubs
std
adc
ss
movsb
mov
inc
leave
xor
jg
aam
adc
sahf
sbbb
sbb
ds
push
sbb
fs
and
add
sub
jae
das
and
iret
sub
sbb
ljmp
ret
daa
push
and
fstpl
imul
aas
jbe
inc
addr16
sbbl
xchg
bound
je
dec
dec
xchg
xchg
int
fstl
add
ficomps
call
fwait
sti
sub
or
int3
mov
ss
mov
dec
pop
sbb
pushl
xchg
cmp
mov
push
shll
sar
aaa
xor
dec
adc
jbe
jo
test
pop
stos
and
div
xor
repz
leave
test
and
mov
outsl
cli
scas
clc
ja
pop
fisubl
mov
push
pause
nop
mov
int
ljmp
aaa
xor
and
xlat
push
imul
dec
dec
stos
inc
outsl
call
cld
sub
cs
adc
mov
dec
sahf
aam
and
fs
loopne
xchg
pop
icebp
lcall
sub
inc
stos
cwtl
popa
fisttpll
in
scas
xchg
inc
pop
jge
fldcw
jmp
popf
popa
lahf
xlat
call
pop
subb
xlat
imul
add
and
mov
jl
call
psllq
pop
add
inc
xor
jecxz
in
test
cmpb
cmpsl
jmp
ficoml
mov
mov
sahf
dec
xor
push
aas
dec
add
out
scas
clc
in
xchg
pop
dec
and
dec
out
sub
daa
jmp
sub
pop
call
xchg
mov
or
lods
sub
aad
mov
aas
in
xchg
pop
inc
lods
out
mov
test
mov
mov
out
decl
jmp
sbb
stos
xchg
fsubs
test
jmp
adc
fcmovnbe
pop
cld
ljmp
vmread
mov
subl
test
ret
fisubrl
xor
pop
adc
lcall
aam
test
clc
push
ds
dec
iret
cmp
xchg
jecxz
aad
push
in
arpl
fs
decl
inc
mov
push
flds
cmpsb
or
data16
inc
jb
cmpsb
incl
stos
sbb
jp
mov
int3
xchg
lcall
jne
test
popf
cmp
incl
dec
out
movsb
push
xchg
and
jb
sbb
cmp
paddb
jg
mov
hlt
mov
sbbl
pop
pop
fs
pushf
imul
pop
mov
ret
sahf
sub
mov
cld
xor
movsl
push
push
ds
mov
outsb
loopne
lahf
jnp
call
mov
xor
ss
mov
dec
cmc
cli
inc
sub
ljmp
sub
aaa
mov
mov
gs
add
out
outsb
popa
aam
lcall
call
fisubl
push
cmp
cs
xor
ljmp
rcrb
les
fst
dec
insb
mov
add
movsl
repz
imul
inc
decl
ja
in
sbb
mov
lret
cmp
pop
lods
in
sub
cmp
jge
mov
mov
mov
add
repnz
mov
jge
dec
dec
add
push
in
mov
add
fimuls
loop
aaa
xchg
fmull
call
mov
test
adc
pop
movb
loope
xadd
in
inc
and
cs
fdivs
xchg
add
push
nop
add
xlat
push
dec
out
dec
in
jecxz
or
dec
add
je
mov
outsl
sbbb
jae
xchg
and
shl
sub
inc
xor
sbb
jp
jae
pop
pop
scas
lock
sbb
sub
xchg
testl
mull
add
fisubrs
xor
jbe
lods
xchg
jno
push
xor
jp
out
jge
loopne
mov
inc
in
icebp
stc
lock
xchg
or
je
scas
jmp
sub
movsl
dec
decl
repnz
test
xchg
sti
lahf
cmc
hlt
rcrl
push
insb
sbb
cmpsb
xchg
lret
std
ljmp
add
aaa
repz
lock
scas
push
popf
mov
setne
and
mov
das
jmp
lock
aas
rclb
mov
cmp
pop
out
sub
jl
ja
push
add
push
in
mov
dec
outsb
sbb
insl
in
stc
pop
push
repz
fldcw
xchg
mov
xchg
repnz
ljmp
inc
fidivl
sbb
sub
das
iret
fadds
mov
leave
dec
in
incl
js
fwait
insb
imul
push
xchg
xlat
pop
pusha
mov
aad
int3
in
or
dec
and
in
out
imul
cli
loopne
fisubrs
out
xor
aaa
mov
jl
add
mov
insb
jg
cwtl
out
push
lcall
bound
pop
fwait
movsb
adc
cmc
lahf
mov
dec
push
idivl
dec
push
sti
lcall
ss
cmp
jns
dec
loope
enter
jg
repz
punpcklbw
dec
test
test
mov
std
xor
rcr
mov
mov
int
dec
push
lea
mov
imul
jmp
fiadds
in
daa
sbb
cmpsl
sti
jg
out
les
enter
ja
mov
call
adc
mov
loopne
add
jne
jg
mov
testl
loopne
movsl
int3
popa
ljmp
outsl
ss
jmp
popf
imul
sarl
or
sub
fsubr
sbb
xor
hlt
inc
in
cwtl
icebp
pop
mov
std
xchg
push
iret
stos
adcl
ds
arpl
repnz
push
dec
xor
test
sar
mov
cmp
dec
mov
jns
jp
mov
xlat
lahf
xlat
push
mov
lret
lcall
jg
pop
rcll
or
sub
dec
sarb
push
xlat
jbe
xor
clc
call
test
insb
pop
arpl
movsl
out
mov
cmp
outsb
pop
nop
filds
jae
out
xchg
popf
adc
aas
mov
scas
sbb
out
call
movsl
push
or
fwait
lds
inc
inc
scas
jecxz
dec
int
mov
sbb
jmp
lcall
in
popf
mov
adc
push
enter
lcall
push
xor
push
rcl
xchg
mov
xchg
dec
cmp
cmp
pop
pop
jno
sbb
jnp
xchg
movsb
call
std
lcall
dec
enter
jnp
push
in
pavgw
jne
loope
loop
push
lcall
int3
sub
push
push
push
push
int
or
dec
cmp
mov
dec
or
mov
sub
clc
popw
mov
cmp
sub
push
ja
sbb
pop
mov
std
push
lock
sbb
sarb
cld
push
dec
addl
add
lcall
push
pop
in
pop
mov
xchg
push
or
call
inc
dec
test
sub
cwtl
mov
icebp
shll
dec
mov
sti
xchg
mov
mov
sub
jns
vpunpckhdq
cmp
mov
push
xchg
push
movl
xorl
sub
adc
or
lahf
sbb
inc
cmp
dec
push
sahf
inc
sub
mov
sbb
ljmp
fidivl
repnz
add
jo
jns,pt
aas
push
and
pushl
mov
xor
and
inc
in
pop
push
rcrb
lea
mov
pop
cmp
add
in
je
mov
ficoms
repnz
mov
pop
fdivrl
dec
sub
cmpsb
xchg
ljmp
data16
sub
adc
adc
or
and
insl
sbb
mov
inc
cmp
push
jp
and
cmpsb
mov
jle
dec
add
jae
dec
mov
imul
or
sub
sbb
adc
les
jmp
call
cs
jno
ds
add
in
jae
ss
lahf
pusha
cwtl
mov
dec
dec
add
jp
fstpl
mov
push
mov
into
cltd
add
paddd
mov
pushl
sbb
pop
inc
pop
mov
orb
lods
rorb
dec
cli
incl
je
lea
addb
xor
adc
xchg
pop
push
cmp
xor
ss
xlat
aaa
jg
lock
mov
inc
xor
ficoms
cwtl
shll
mov
cmpsl
pop
add
decl
lods
std
add
pop
in
pop
xor
stc
jno
mov
nop
sbb
idivl
push
popa
mov
xor
outsl
inc
cli
cmp
mov
lcall
push
lret
mov
ljmp
xor
out
dec
lea
and
xchg
incl
js
data16
mov
cs
lcall
mov
aaa
xor
jmp
inc
push
xchg
push
pop
mov
mov
push
jnp
movsl
mov
dec
xor
mov
and
cld
jmp
dec
js
cmpsl
xchg
pop
add
ds
sub
lret
dec
push
cmpl
sbb
sbb
sub
jge
push
imul
and
or
fnsave
les
shlb
xchg
jl
nop
cltd
xor
inc
in
dec
lcall
xor
mov
mov
pop
dec
xchg
cld
shll
add
fucomp
or
out
dec
divb
fbstp
lock
clc
out
fwait
jnp
push
cli
stos
mov
lret
ljmp
push
mov
mov
and
adc
andb
push
sbb
in
adc
call
outsl
fs
les
sahf
jb
es
into
cli
bound
cltd
iret
cmp
or
mov
mov
cmp
and
fisttps
mov
jmp
pop
cmp
cmc
cltd
sbb
xor
sbb
movsl
inc
or
insb
stos
call
mov
fidivrs
pop
pop
das
mov
je
loopne
mov
sbb
lcall
cld
imul
movsl
ja
lods
aad
and
test
jo
imul
nop
outsl
imul
inc
fs
mov
xchg
fnstcw
pop
sahf
jecxz
and
push
mov
fstps
xchg
push
mov
dec
or
mov
mov
lcall
jecxz
mov
and
mov
fiadds
call
sahf
pop
dec
adc
outsb
mov
mov
jbe
mov
add
push
dec
and
lock
inc
orb
lahf
pop
ret
movsb
call
mov
or
add
mov
rcrb
lods
xor
push
jl
push
xchg
lea
dec
test
add
dec
cld
decl
dec
test
dec
add
in
xchg
push
lods
call
inc
movsl
rcrb
pushf
xchg
jecxz
xlat
push
fbld
push
add
dec
movsl
scas
mov
mov
jnp
rcrb
pop
and
mov
in
pop
pop
and
push
sbb
fwait
dec
xchg
je
pop
cmc
ljmp
xchg
int3
mov
xor
mov
int
decl
add
dec
mov
cmp
cld
jo
shll
push
in
mov
mov
rorl
into
push
test
lahf
in
adc
inc
loopne
aaa
cmpsl
cmp
pop
icebp
cli
sti
jecxz
or
jne
mov
or
xor
push
ds
fidivs
inc
or
call
cmp
movsb
mov
repnz
lods
xor
mov
push
pop
add
xchg
adc
mov
decl
mov
ret
pop
shrb
hlt
xchg
push
or
lock
cmpsb
enter
imul
pop
out
in
test
ret
shlb
dec
loop
add
ljmp
push
mov
add
pop
and
insb
jnp
xor
int3
pop
scas
roll
dec
xor
inc
dec
fs
dec
call
dec
leave
xor
ret
clc
pop
cmpsb
clc
sub
pushl
popa
jnp
sbb
das
xchg
jns
int3
addl
in
js
jo
insl
lods
in
adc
xor
clc
out
cmpsb
test
lods
xchg
and
popf
int
jmp
incl
jp
and
lea
jo
adc
movl
loop
ljmp
xchg
dec
int3
mov
test
imul
les
fnstcw
xchg
in
scas
enter
pop
push
mov
hlt
mov
dec
adc
ljmp
in
hlt
add
sahf
sub
test
lods
decl
aas
mov
das
jb
adc
rol
adc
mov
cmp
mov
push
mov
lods
jmp
push
adc
cld
ja
scas
jg
movsb
cmpsl
ja
mov
jae
aaa
in
push
fidivs
xor
mov
dec
ret
adc
faddl
fwait
pop
cld
test
add
or
ljmp
lret
mov
fnstenv
jnp
sub
in
ss
call
sub
stos
pop
mov
scas
or
pop
mov
dec
sub
ljmp
sub
test
or
mov
push
pop
lahf
xchg
test
lahf
pushl
or
out
cmpsb
stos
sbb
mov
inc
fmuls
loope
rcrl
mov
inc
or
pop
dec
jb
push
push
mov
fnstcw
mov
adc
mov
mov
stos
enter
mov
sbb
inc
fists
sbb
orb
jmp
mov
mov
lods
sbb
xlat
pop
add
push
pop
ljmp
dec
jns
and
addr16
jo
ret
or
inc
rcrb
lods
rclb
aaa
cwtl
iret
and
xor
incb
cli
xor
testb
pop
cmp
pushf
mov
lcall
push
xchg
fmuls
ret
out
repnz
es
aam
mov
nop
cmpsl
in
jg
call
adc
psubw
jmp
lret
dec
outsl
xchg
cs
enter
ljmp
add
lret
pushf
test
inc
add
cmc
add
add
clc
jmp
xchg
movsl
aad
cs
dec
jle
mov
subl
sub
call
jp
mov
and
fidivl
mov
jge
cmp
call
add
mov
pop
notb
push
iret
jp
pusha
push
sub
fiaddl
call
call
mov
dec
jns
dec
ljmp
lret
jle
out
fbld
fwait
inc
popa
xlat
pop
cld
call
cwtl
ja
pop
sub
xchg
call
and
std
ljmp
dec
je
jo
scas
xor
call
mov
je
xchg
xor
push
fists
std
jbe
pushl
mov
pop
mov
and
sbb
pop
jp
push
mov
das
gs
bound
decl
lcall
adc
push
adc
mov
jle
push
ret
xlat
cltd
pushl
cmpsb
lods
mov
negl
push
pop
xor
or
mov
inc
or
scas
outsb
jl
test
cltd
or
sbbb
pushf
ror
cmp
jge
lret
sbb
pop
ficoml
repz
jo
push
dec
jg
jbe
jl
mov
push
jns
out
add
outsb
push
adc
xchg
in
aad
adc
push
enter
jmp
pop
or
ja
sub
cmp
aaa
jp
pushl
cld
enter
sarb
int
es
mov
and
test
fisubl
jns
inc
pop
imul
or
ret
and
subb
push
dec
xchg
pop
icebp
jg
jmp
jl
xchg
outsb
out
mov
pop
cmpsl
loopne
xchg
cwtl
call
stc
fs
add
das
mov
jg
aas
mov
dec
push
sti
xchg
jmp
fidivs
mov
test
imul
in
aaa
mov
scas
xchg
mov
sbb
mov
sbb
out
pop
jo
out
in
and
into
rorb
inc
cmp
mov
mov
pop
insb
adc
xchg
ja
fsub
or
sbb
mov
gs
pop
xchg
idiv
call
notl
mov
call
cs
das
test
jmp
jns
aam
lds
mov
jb
jge
incl
add
fnstsw
flds
shlb
sub
cmp
decl
fldt
mov
push
popf
insl
notb
cmp
iret
adcl
lahf
aaa
jecxz
mov
jmp
or
and
movsl
inc
js
mov
and
inc
xor
or
fcomi
out
mov
sub
cld
shll
iret
enter
bound
stos
loopne
push
cli
pushl
cld
or
inc
pushf
mov
mov
in
xor
movsl
hlt
hlt
xor
lcall
movsl
sub
push
cmp
or
fwait
jbe
jp
jo
aam
jp
dec
repnz
adc
or
push
xchg
xor
les
xor
aas
arpl
or
push
xchg
mov
addr16
cmpb
mov
add
test
mov
lcall
cmc
adc
ror
xchg
divb
cld
add
cwtl
stc
mov
cs
imul
xor
mov
mov
fistpll
adc
push
cmp
imul
xor
mov
js
dec
mov
mov
xchg
outsl
leave
into
xchg
pushf
push
lret
repnz
dec
xor
sub
call
mov
and
sbb
dec
add
test
xchg
mov
push
jge
loopne
lcall
mov
sbb
fnsave
out
into
mov
xchg
pop
shrb
jmp
xlat
mov
pop
out
sub
adc
jne
loop
add
jle
sarl
sub
dec
adc
mov
fsubrl
push
xor
adc
or
decl
jns
mov
ds
add
sub
lahf
fcomps
dec
mov
rclb
ficoms
cltd
lcall
pop
jp
adc
cwtl
pushl
add
sub
push
rolb
mov
negl
mov
lds
js
repnz
call
and
lcall
pop
xor
xchg
loopne
lea
cmp
int3
xchg
pop
stos
ljmp
dec
xor
popa
scas
xchg
sbb
mov
sub
sub
daa
jmp
aas
sub
jl
lods
ljmp
cmp
popl
lcall
inc
add
into
pusha
sbb
repz
mov
and
movsl
insb
fucom
inc
in
push
decl
xchg
sbb
das
and
push
lret
dec
mov
jae
fldenv
jmp
pop
add
out
adc
or
and
inc
mov
adcb
decl
dec
adc
pop
loopne
fwait
cmp
dec
mov
mov
add
jmp
sub
call
mov
push
das
addl
adc
insl
sbb
cltd
xor
cmpsb
pop
repnz
outsl
call
movsl
mov
fwait
lock
mov
inc
sbb
scas
sti
or
sti
aad
mov
mov
ss
inc
or
insl
lock
jne
cmpsl
xchg
roll
sti
dec
in
sub
jmp
fwait
inc
aam
sbb
cmp
mov
sbb
jne
and
pushl
sbb
adc
outsl
aaa
into
pushl
inc
push
dec
add
push
mov
jg
cmp
andb
dec
test
cmove
jp
movsl
pop
das
sub
int
push
lcall
pop
xchg
sub
cltd
gs
mov
xchg
stc
xchg
arpl
or
pushl
add
mov
cmp
and
mov
cmpsl
jp
incl
dec
ljmp
out
sbb
jnp
ljmp
xor
call
imul
sub
xchg
in
inc
jg
mov
jae
movsb
xchg
push
or
sub
push
jg
sbb
fldl
mov
int
repnz
stos
push
mov
push
clc
ljmp
ss
pop
inc
sub
sub
ss
call
into
xor
jge
fistpl
cltd
mov
test
pop
xchg
test
xchg
adc
inc
mov
and
or
jo
loope
stos
fidivrl
arpl
inc
or
adc
mov
mov
mov
test
lods
mov
hlt
cmp
push
xchg
mov
mov
pop
jecxz
outsb
sub
pop
xchg
lahf
pop
mov
les
insl
ficoml
rol
jns
sub
push
sbb
clc
and
sbb
inc
and
loope
ljmp
lahf
movsb
adc
jmp
adc
adc
ja
ss
cmp
cmpl
pop
ljmp
fcomip
pushl
adc
cltd
rclb
incl
xor
daa
incl
add
std
or
rcrb
jmp
mov
mov
ljmp
pushf
xchg
mov
push
negl
insl
and
sbb
add
mov
pop
push
or
decl
pop
flds
push
or
jno
dec
clc
cmp
or
sub
leave
incl
push
mov
xor
in
or
scas
add
rep
and
movsb
sub
jmp
pushl
add
add
mov
mov
pop
or
call
mov
rolb
out
imul
test
cmp
dec
cmpsl
and
mov
xchg
movsb
outsb
mov
mov
xchg
scas
inc
addl
adc
mov
jg
inc
icebp
mov
inc
mov
incl
mov
cmp
add
movsl
dec
inc
shrl
lods
mov
jmp
aam
xchg
pop
cs
mov
dec
adc
mov
and
mov
jle
cmp
push
test
ret
push
jo
ljmp
xchg
out
daa
bound
mov
out
test
loopne
ljmp
fisttpl
and
jo
call
adc
fbld
sbb
lea
xor
sub
leave
aaa
test
jne
lcall
sbb
add
fiadds
bound
fcomip
xor
push
ret
adc
jle
add
fsubs
cmc
icebp
ljmp
mov
in
sbb
jno
push
lods
pop
inc
push
loop
jmp
leave
imul
inc
xchg
js
out
xchg
stos
mov
sbbl
call
push
adcl
sti
ss
das
inc
shrl
test
fcmovne
test
inc
mov
call
in
pop
mov
xor
inc
sti
mov
push
int
jge
xlat
mov
mov
fdivr
fsubl
or
mov
stos
insb
xchg
cmpsl
inc
popf
xchg
iret
xor
cld
lcall
cmp
lret
adc
aad
cmp
iret
loop
cmp
jmp
add
enter
lcall
in
imulb
inc
jle
sbb
incl
mov
mov
pop
inc
orb
je
add
in
leave
jb
je
into
mov
mov
pushl
adc
stc
ret
fsubl
daa
sarb
cwtl
shrb
mov
mov
call
std
mov
aaa
pop
sub
push
push
rclb
mov
or
inc
sub
or
cld
inc
push
rcrb
mov
or
push
xor
enter
inc
mov
decl
test
add
inc
mov
jl
lds
xlat
push
movsl
pop
pushl
inc
adc
mov
inc
cltd
icebp
dec
sbb
sub
push
repnz
dec
sub
push
pop
ret
sbb
js
fisubrl
ljmp
std
decl
jne
xchg
hlt
or
xchg
je
ss
lahf
das
nop
mov
cld
push
adc
scas
call
in
mov
adc
mov
stc
hlt
mov
jae
cltd
cwtl
out
aaa
and
or
cli
jmp
xchg
int3
imul
shr
cmpsl
adc
pop
jb
out
inc
jmp
jb
pop
fldcw
dec
xchg
or
std
or
jo
mov
xor
xor
insb
cmp
call
inc
test
push
xor
out
push
sbb
or
sarl
mov
sbb
incl
imul
xor
sub
cmpsb
stos
sub
pop
gs
or
jg
sbb
xchg
push
shrl
jp
out
fistps
pop
jne
decl
inc
loopne
fnstsw
fs
je
cli
rclb
stos
sbb
test
pop
test
lret
push
push
movsb
call
mov
jae
daa
sbb
push
sti
ret
sbb
or
test
addb
pop
pusha
jbe
fdivrs
arpl
cmpsl
dec
cwtl
out
les
and
push
into
testb
lods
leave
add
iret
mov
fdiv
sbb
lock
std
dec
imul
push
cld
idivl
sarl
fisubs
mov
ljmp
jp
xchg
pop
adc
in
cli
add
stos
dec
push
sbb
push
pop
cmp
xorl
xchg
push
adcl
mov
ret
push
jmp
pop
add
cld
ja
pop
icebp
data16
pushl
insl
inc
xchg
data16
adc
out
mov
ljmp
aas
stos
xchg
jle
jmp
jmp
jecxz
and
test
rclb
dec
cmpsb
rolb
pop
aaa
out
pusha
call
xchg
jmp
mov
sbb
cmp
cmp
mov
cmp
sub
fisubrl
dec
xchg
je
sub
cmp
mov
xchg
cmp
add
jbe
mov
je
push
mov
aad
cmp
xlat
jecxz
imul
stos
lds
in
movsl
pop
sbb
adcl
cli
inc
jp
lret
pop
jo
orl
cli
push
xchg
mov
push
mov
call
ret
out
jne
je
dec
movb
sbb
roll
pushf
aaa
lahf
loopne
ljmp
dec
cli
pop
dec
dec
in
push
push
push
or
adc
out
lahf
pop
hlt
pop
or
add
pop
sub
mov
dec
ljmp
jg
movsb
mov
pop
pusha
ret
fwait
repz
bound
push
inc
cmp
testl
sar
decl
into
cmpsb
and
pop
fmuls
cld
sub
incl
insb
fidivs
jge
xor
sbb
ret
out
jnp
mov
lock
movsl
lahf
lods
dec
jmp
fs
lds
out
mov
xchg
sub
iret
stos
ljmp
call
mov
sub
loope
sbb
pop
lret
cmp
sbb
sbb
dec
cmp
dec
test
jno
lock
jmp
sub
push
dec
sbb
subl
mov
incl
sub
xor
outsl
or
addl
hlt
jge
cmp
fistpl
xlat
and
pop
jg
in
fwait
push
daa
pop
push
xchg
jp
or
inc
iret
jmp
and
jmp
mov
cmpsl
sub
jge
push
ljmpw
bound
incl
dec
sahf
add
jbe
add
in
scas
push
dec
dec
adc
push
mov
or
out
jo
fcom
add
iret
orb
pop
cwtl
mov
sbb
and
dec
sbb
jmp
and
push
test
xlat
add
nop
aam
xor
stos
out
sbb
addb
inc
dec
jae
jl
mov
bound
adc
fstl
jne
jo
imul
ja
push
insb
or
ds
push
imul
add
sub
dec
sbb
or
push
fcomp
sub
in
jle
push
lds
cmp
repnz
sbb
inc
gs
gs
inc
pop
push
adcb
aas
jbe
sbb
push
outsl
outsl
insb
push
out
mov
mov
xchg
jo
push
and
gs
push
fistl
or
sbb
ss
push
shlb
je
push
pop
subb
adc
imul
mov
dec
jne
js
stos
pop
sbb
push
insb
inc
fists
inc
mov
fsubrp
push
sbb
jns
push
imul
push
inc
movsb
inc
loope
inc
mov
pop
push
es
mov
dec
insl
testl
xchg
push
addb
push
dec
sub
jns
add
dec
outsb
inc
out
adc
and
repz
sbb
add
push
outsb
dec
xor
inc
insb
xchg
test
in
sbb
iret
xchg
mov
ret
adc
imul
mov
outsl
jp
xorl
les
push
rolb
bound
jo
fbld
dec
out
pop
ds
insb
pop
xorb
xchg
mov
jne
data16
mov
push
mov
fistpl
mov
call
mov
inc
or
inc
mov
push
pop
lock
out
popa
arpl
popa
or
sbb
popa
test
pop
push
xchg
pusha
cs
xchg
ret
stos
sub
popa
sbb
dec
sbb
sbb
cmp
sbb
nop
or
shll
pop
sub
push
jo
bsr
sbb
push
pop
mov
fstl
adc
dec
inc
dec
sbb
mov
je
ja
aas
jns
jae
arpl
subb
das
shl
adc
inc
xor
cmp
in
pop
push
xor
popa
inc
in
inc
push
addr16
sub
and
sub
pop
clc
outsl
popw
fidivl
push
call
fs
jge
bound
xchg
push
jne
add
mov
xor
lds
sbb
sub
push
pop
in
push
dec
jae
enter
mov
sahf
ja
adc
or
push
cmp
lea
dec
pop
push
mov
inc
xchg
lret
ljmp
mov
lods
xor
pop
mov
jne
sbbb
xchg
bound
inc
or
cmp
and
mov
cmp
popa
es
jp
adc
push
mov
fisubrl
repz
push
sbb
mov
adc
mov
rcrl
fsubrs
jle
outsl
jns
int
push
stos
pusha
stos
push
cltd
mov
xchg
and
jmp
pop
pop
notl
repz
outsl
push
imul
inc
je
mov
mov
push
inc
inc
iret
in
mov
cltd
inc
sbb
leave
or
movsl
push
push
popa
inc
pop
dec
sub
sbb
jno
insl
adc
push
or
sub
push
subb
and
push
adc
arpl
or
pop
outsl
push
ret
pop
loope
xor
or
pop
inc
cmp
out
push
xor
js
sbb
mov
and
mov
adc
outsb
sub
sub
mov
inc
xchg
gs
in
ret
testl
in
inc
or
insl
pop
inc
pop
lea
and
jo
cwtl
popa
mov
jge
rclb
outsb
xchg
lea
adc
mov
push
ret
and
lds
cmp
adc
adc
inc
jno
dec
in
sub
rcrl
inc
lods
jge
call
outsl
jae
and
pop
in
push
outsl
aas
fisubs
cmc
dec
sbb
xchg
jbe
test
dec
pushf
sub
push
push
add
xor
js
cmpsl
mov
and
jns
push
jne
mov
jo
mov
and
js
pop
clc
mov
sbb
mov
adc
inc
arpl
adc
jb
mov
cmpsl
adc
cmp
jns
out
pop
dec
and
mov
or
sbb
aaa
xchg
popf
ret
rorl
and
cmpl
movsl
jns
and
pop
outsb
dec
pop
adc
stc
insl
cmpsl
add
jne
sub
sbb
push
and
pop
push
ret
pop
xchg
add
mov
shrl
test
cmp
pop
andb
pop
fs
xchg
push
je
jecxz
push
pop
and
push
outsl
repnz
sub
and
mov
icebp
or
inc
push
into
jo
lcall
push
arpl
loope
std
inc
imul
xor
inc
loop
fs
insb
stos
icebp
pop
push
mov
pusha
mov
lock
insb
cwtl
push
punpckldq
inc
xor
or
dec
stos
mov
jp
je
jae
jno
adc
into
cmp
nop
test
sub
jne
leave
jl
cmp
sub
js
enter
and
dec
inc
cmp
sbb
lods
jb
jle
scas
push
loopne
or
push
push
shl
and
lods
gs
mov
push
pop
xor
pop
adc
in
adc
jnp
mov
adc
adc
mov
jecxz
mov
pop
jnp
or
dec
outsb
dec
loop
adc
in
sub
repz
lcall
dec
imul
add
mov
xchg
dec
rcrl
add
or
imul
push
xchg
mov
inc
add
add
pop
adc
cmpsl
rcl
or
mov
mov
mov
and
pop
outsl
inc
fs
fcmovnbe
daa
inc
jo
sbb
adc
std
invd
push
push
jb
inc
jae
jo
add
inc
jb
mov
outsb
and
pushw
daa
add
sbb
imul
pop
cwtl
inc
in
js
inc
rclb
movb
pop
test
and
inc
test
mov
push
ret
mov
mov
lock
push
mov
data16
sub
aaa
pop
insl
fsubrs
shlb
loope
insb
inc
lret
nop
scas
arpl
mov
mov
sub
lcall
icebp
icebp
mov
cld
xchg
pop
xor
or
pop
enter
ljmp
and
jmp
xchg
pusha
xor
xchg
cmp
cmp
jns
insb
mov
mov
ret
mov
jo
cld
popa
imul
pop
mov
xchg
mov
dec
movsb
dec
cmp
and
cwtl
dec
hlt
and
jmp
inc
xchg
adc
jbe
jno
dec
sub
xor
sub
mov
sbb
popa
sar
xor
pop
adc
adc
pop
push
dec
or
or
inc
std
imul
xor
add
sarl
inc
mov
pusha
enter
xor
sbb
push
in
test
xchg
push
lds
outsb
aas
adc
adc
pop
sub
pop
cwtl
xor
mov
lods
xchg
cmp
inc
int3
mov
outsb
sbb
mov
push
lods
pop
insb
test
pusha
and
xchg
and
sbb
xorb
jbe
add
mov
push
jmp
loope
imul
inc
sbb
push
fs
inc
cmp
lea
hlt
push
pop
sbb
cltd
dec
test
sub
mov
adc
add
add
add
call
mov
xor
lock
fs
sti
push
imul
jbe
sub
ss
mov
repz
enter
pop
fdivrl
adc
inc
dec
mov
ret
inc
push
jne
data16
sub
jo
add
mov
imull
pop
icebp
jae
ds
sbb
dec
es
imul
dec
test
adc
test
add
dec
dec
and
or
sub
mov
push
add
mov
cld
std
rolb
xorps
xor
cmp
pop
mov
pusha
dec
mov
and
push
add
pusha
pop
add
fnsave
inc
mov
dec
addb
cs
pop
mov
rol
sbb
xlat
add
and
aaa
shr
jb,pn
popa
adc
push
shlb
out
inc
cs
out
push
sub
push
dec
sbb
insl
rcrb
out
loope
cs
pop
lahf
add
dec
ret
mov
jg
inc
or
orb
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
