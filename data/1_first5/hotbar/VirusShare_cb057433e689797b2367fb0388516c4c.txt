divl
in
mov
mov
test
inc
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
movsl
push
mov
andl
data16
mov
add
int3
aam
cmpl
iret
add
packsswb
aaa
mov
push
mov
inc
in
iret
negl
push
in
loopne
movb
inc
xchg
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
mov
jmp
ja
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
dec
push
push
ss
push
in
in
in
loope
xlat
cs
loop
in
xor
roll
lea
xacquire
mov
mov
loop
push
mov
or
push
cwtl
in
xchg
sbb
xor
fldenv
jl
dec
faddl
in
es
push
push
sub
in
ja
pusha
mov
fs
push
cmpsb
mov
inc
add
fdiv
fistpl
scas
loopne
sbb
inc
sti
orl
sub
je
push
add
in
push
push
push
fs
push
scas
loopne
fcom
add
adc
cmp
push
int3
loopne
sbb
iret
push
loopne
mov
pop
les
imul
add
sub
in
sahf
xor
add
call
pmaxsw
sub
sahf
or
xor
call
sbb
adc
xchg
jb
in
push
push
stc
jmp
add
in
inc
cmp
lahf
mov
mov
pop
jge
mov
jmp
push
or
push
inc
inc
mov
insb
push
fs
dec
and
jmp
cmp
insl
xor
pop
inc
mov
and
pop
das
add
jb
mov
xchg
xor
adc
rolb
and
inc
cmp
mov
sbbl
and
cmp
push
stc
push
xor
out
push
mov
add
and
sbb
add
jae
sub
adc
mov
insl
xor
jnp
or
lock
adc
add
jb
test
sbb
jle
push
push
enter
das
push
sub
ret
pop
adc
pop
stos
je
sbb
dec
lock
add
lahf
pop
negl
call
cmp
movlps
icebp
xor
jmp
push
popf
sbb
pop
out
pop
addr16
gs
jno
push
push
xor
push
or
push
stc
mov
inc
sbb
addr16
sub
jo
push
rolb
push
cld
stc
xchg
mov
shlb
cmp
enter
add
sbb
jecxz
pop
xorl
cmp
xor
push
sbb
mov
and
or
and
repz
push
fwait
sbb
cmc
cmp
add
movsl
punpckhdq
mov
mov
push
xchg
push
daa
mov
int3
push
xchg
sbb
mov
mov
or
cmp
push
xchg
add
cmp
sbb
bsr
cmp
scas
sbb
push
xchg
shrl
loop
stc
call
ss
jb
adc
sbb
cmp
fldcw
int
push
sub
sbb
mov
cmp
movsl
and
inc
xchg
jbe
mov
shl
in
movsb
fisttpl
paddd
push
push
add
and
pop
or
xchg
inc
adc
mov
sbb
enter
pop
cmpsl
or
sub
pop
push
push
xchg
lea
adc
pop
sbb
sarl
ret
pusha
ljmp
sub
or
sahf
fnstsw
jmp
pusha
sbb
mov
inc
dec
leave
repz
mov
mov
push
mov
and
xchg
cwtl
lods
jg
sbb
xchg
sbb
out
lahf
lds
call
hlt
cmpsl
push
loope
mov
pop
cld
mov
mov
xchg
mov
and
lea
or
pop
push
push
adc
cmp
jae
lds
rcr
push
mov
push
push
mov
lods
pop
push
push
xor
fwait
sti
ds
and
mov
lcall
xor
push
mov
ret
out
cltd
mov
push
mov
jl
or
out
icebp
stc
mov
mov
mov
pusha
rclb
mov
negl
nop
or
inc
mov
or
mov
pop
hlt
je
xor
lea
mov
jae
mov
nop
sub
cmp
je
adc
cli
mov
add
out
lea
imul
inc
insb
mov
js
pop
add
sub
sbb
jmp
mov
stos
jno
aaa
mov
je
cmp
mov
test
or
mov
inc
cltd
or
mov
xchg
xchg
sbb
push
push
movsb
lret
out
jp
cmp
jnp
out
push
clc
dec
or
repz
clc
xchg
sbb
mov
push
jnp
and
hlt
pop
hlt
jg
or
xor
or
mov
or
xchg
fimull
pushf
dec
insl
jmp
shlb
movsb
sbb
rorb
add
cmp
cmp
faddp
jne
pop
mov
sub
push
cmp
test
je
sub
inc
cmpsl
scas
inc
pushl
pop
in
lret
movsl
sbb
or
xchg
jne
mov
shlb
mov
lds
xlat
ljmp
push
mov
dec
pop
jl
sub
loopne
mov
and
ljmp
test
jne
fs
inc
cmp
jl
jmp
pop
xchg
in
pop
push
mov
dec
pop
pop
push
pop
push
pop
jmp
sub
xchg
add
hlt
jl
clc
mov
ret
add
scas
test
mov
mov
mov
or
xor
push
sbb
pop
or
ja
in
and
rorl
sub
jmp
stos
push
fadds
jns
loope
jg
add
add
push
dec
push
andl
push
clc
xchg
push
xchg
jge
xchg
mov
cmp
jl
push
mov
jg
mov
xor
pop
adc
jp
or
cld
mov
pop
pop
ret
push
data16
sub
daa
cs
or
push
hlt
jbe
mov
mov
and
adc
sub
adc
cs
testb
loope
dec
inc
aam
push
mov
sub
icebp
mov
jne
js
sub
pop
cmp
mov
jge
fisttpll
out
cwtl
cmp
je
movb
aaa
loopne
fdivrs
adc
push
out
mov
add
push
mov
imul
add
jmp
mov
loopne
add
popa
push
xor
or
mov
pop
jbe
adc
inc
leave
ret
icebp
std
negb
cmp
cmp
push
add
or
mov
jle
std
push
mov
dec
mov
jmp
inc
and
xchg
push
mov
push
jg
gs
pop
stc
jne
mov
jmp
xlat
int3
fcmovnb
xchg
in
or
push
repnz
ja
rorl
push
ja
lea
int
pop
das
decb
pushl
cmp
aas
mov
andl
gs
pop
pop
out
clts
arpl
adc
pop
and
sub
xor
add
test
je
add
js
and
rcl
mov
push
sub
pop
push
push
movsb
mov
std
outsl
mov
jle
je
fidivrs
push
rcll
dec
mov
cmpsl
dec
loope
shlb
lret
ss
push
push
mov
add
mov
inc
pop
pop
mov
mov
loopne
je
test
push
mov
cwtl
mov
cld
xor
lock
ds
add
loope
mov
add
scas
aaa
fcomps
push
sub
push
mov
ret
pusha
fists
cmp
rorb
jmp
adc
into
je
cmpl
pop
mov
cmp
jne
push
push
imul
jl
pop
jmp
xchg
rorl
pop
aas
ss
adc
xor
mov
pop
push
inc
sub
inc
or
push
or
and
xlat
orl
clc
jg
inc
fimuls
aaa
out
ret
movb
or
in
int3
mov
cmpsl
pop
sub
and
xor
lods
adc
cmp
inc
sbb
aaa
or
shlb
adc
ret
jne
mov
sbb
movb
mov
jb
das
inc
cltd
and
pop
and
sbb
insl
and
sub
or
mov
push
test
paddsb
add
adc
das
mov
dec
into
cs
fisttpll
add
pop
pop
mov
mov
cli
pushf
mov
ficompl
clc
mov
mov
int
fsubs
mov
mov
dec
insl
pop
out
lods
in
mov
jp
mov
ret
inc
or
push
or
out
cmpsl
mov
add
clc
push
inc
push
sub
sbb
pop
pop
sbb
lahf
cmp
xor
cmpl
jle
push
aaa
inc
sub
mov
mov
aam
cmp
jle
ret
shlb
push
pop
pop
jecxz
out
ss
call
cmp
nop
in
stos
jne
incb
add
xor
add
loopne
xchg
or
adc
push
mov
xlat
pop
push
jl
xchg
pop
ljmp
pusha
fimuls
jge
bound
pop
ret
adc
pop
push
or
lret
xor
pop
cmp
mov
mov
cmp
ret
insb
jo
aam
mov
and
jge
sarb
leave
rcl
sarb
xlat
xlat
loop
add
cwtl
sbb
adc
xor
add
lea
daa
add
push
mov
add
push
loop
rolb
sub
fistpl
lods
aaa
in
lahf
jmp
nop
mov
clc
and
adc
mov
cmp
mov
pop
pop
jmp
cmp
push
mov
mov
jecxz
push
movl
outsl
cmp
push
sbb
ret
fs
adc
jbe
fstps
test
je
lods
int3
xlat
or
std
jno
cmpb
shlb
movsl
push
xor
mov
add
xchg
enter
add
mov
xor
fwait
add
mov
and
inc
xchg
cld
les
aam
cmp
push
sbb
cmp
add
mov
pop
adc
inc
and
cmp
imul
sbb
das
or
shll
adc
test
ret
push
sub
movsb
les
mov
leave
push
xchg
or
inc
adc
jecxz
dec
imul
or
push
and
movswl
in
and
sbb
das
sbb
sbb
loope
xchg
push
pop
add
mov
add
push
sub
into
adc
pop
pcmpgtd
std
fimuls
push
dec
fimull
and
adc
mov
adc
pop
daa
cwtl
std
or
push
enter
cmp
ja
push
test
adc
lahf
out
outsl
or
je
cmp
popf
cmpl
add
pop
sbb
push
mov
mov
scas
and
pop
testl
sub
js
shrl
je
jb
jmp
xchg
adc
pop
mov
sbbb
ss
pop
pop
adc
push
sub
add
push
push
mov
push
xchg
push
std
jge
cmp
and
jmp
sub
fisubrs
pop
dec
je
inc
adc
in
jge
adc
or
mov
dec
es
cld
inc
inc
ds
lcall
sahf
test
movsb
push
imulb
leave
ret
int
jp
jecxz
pop
clc
dec
outsl
je
rolb
popa
add
sub
stc
or
clc
pop
push
and
std
sub
push
add
mov
scas
adc
out
mov
xchg
hlt
sbb
enter
clc
adc
dec
hlt
add
mov
sub
and
repz
mov
dec
xchg
jl
and
push
or
push
sub
divl
pop
pushl
js
push
cld
push
jae
imul
imul
call
inc
sbb
adc
jg
in
jmp
cmp
je
cmp
and
jmp
imul
leave
adc
adc
fistps
fldz
andl
or
cmp
inc
jae
sub
sbb
and
push
cmp
and
sbb
je
xchg
jmp
data16
sti
jo
loop
mov
mov
pop
fs
sub
out
sahf
data16
sub
jge
out
sahf
mov
sahf
in
hlt
jns
push
push
fs
imul
sbb
xor
xor
pop
xor
cs
push
mov
loope
push
pusha
aaa
outsl
dec
adc
mov
or
or
clc
rorl
movb
test
or
adc
lds
xchg
gs
cmpsb
dec
dec
push
dec
mov
pop
push
shlb
lock
pop
push
adcl
mov
out
xchg
xor
xchg
push
iret
ret
mov
jmp
mov
mov
add
ja
xorb
pop
in
jl
or
pop
and
sbb
push
mov
ja
push
sbb
xchg
dec
cmpsb
jo
and
adc
jo
xchg
xchg
xchg
xchg
call
and
xchg
cs
push
ja
je
ljmp
inc
sub
jo
pushf
ret
jnp
ror
mov
test
mov
mov
sbb
xchg
mov
fisubrl
or
or
cmpl
mov
sbb
push
mov
mov
adc
iret
arpl
and
mov
in
adc
xorb
imul
adc
pop
dec
jp
pop
test
test
dec
dec
rclb
not
and
sub
push
push
mov
mov
push
fs
mov
xchg
out
adc
in
add
dec
fistpl
push
cmp
nop
out
loope
jnp
push
push
push
mov
loope
pushf
jge
mov
push
push
push
iret
cmp
ds
xor
cwtl
jmp
push
sub
dec
jp
mov
mov
sub
cmp
je
mov
jo
jle
in
mov
mov
lea
aaa
pop
pusha
faddl
sbb
push
sbb
sub
cli
hlt
pop
popa
pop
sbb
pusha
adc
jae
imul
or
clc
push
xor
in
ljmp
mov
pushl
mov
adc
dec
adc
mov
add
in
push
dec
lea
or
std
mov
negl
pop
cld
je
dec
call
cltd
sub
sar
add
dec
rcrl
in
dec
in
fnstenv
push
mov
add
mov
inc
adc
aam
fwait
cmpsb
dec
cmp
pop
leave
mov
adc
xor
mov
inc
stc
ret
shlb
push
mov
cmpsl
adc
ja
sbb
or
and
sub
pop
lahf
jmp
sbb
and
ja
or
inc
js
ljmp
movsl
dec
test
sbb
and
and
incb
dec
divb
out
mov
dec
inc
int
dec
shll
jbe
add
inc
cmp
xchg
mov
push
rcll
push
insb
and
or
mov
loope
pop
mov
push
lea
dec
maskmovq
sbb
and
test
xor
roll
adcb
int3
pusha
nop
or
sub
mov
insb
pusha
ljmp
rcr
test
inc
xor
pop
adc
jbe
sub
mov
sbb
jge
je
push
mov
fdivrl
jmp
pushl
and
mov
sub
pop
loopne
incl
and
jo
inc
sub
outsl
lods
aas
mov
stos
mov
cmpl
je
cmpl
cmpsl
jne
adc
dec
je
fstps
sbb
cwtl
pop
push
add
adcl
sbb
jmp
mov
ds
xchg
andl
push
pop
push
leave
or
icebp
mov
adc
mov
pop
lods
popa
pop
mov
lret
aas
js
push
push
fdivs
jecxz
or
cmp
hlt
movb
add
lock
xchg
or
sbb
out
aad
adcb
sbb
sub
scas
loope
dec
stc
insl
mov
mov
ret
mov
fildl
cmpsl
into
out
cmp
xchg
pop
dec
pop
adc
into
addl
or
test
jne
pop
flds
loopne
mov
and
popf
push
xlat
cltd
xor
dec
xor
pusha
into
xor
inc
xchg
jle
xlat
into
or
dec
push
lea
cmp
pop
std
add
insl
jbe
adc
cmp
mov
push
flds
cmp
mov
shrb
data16
aam
and
push
sub
or
mov
or
movl
mov
jb
jl
add
insb
je
fs
xchg
popa
mov
push
and
xor
lea
lods
test
jmp
cmpsb
dec
ret
add
js
xchg
pop
sbb
cs
cli
xlat
call
xor
addb
xor
cmpl
pop
push
push
arpl
lock
jae
das
int
adc
test
in
add
xor
imul
test
inc
pusha
fmull
push
iret
shl
clc
add
sbb
outsb
pop
push
cmp
pop
rcrl
leave
and
popf
lock
faddl
es
pop
or
fcoms
sbb
enter
repnz
ds
rorb
in
lds
push
icebp
sbb
or
jne
pushf
and
push
je
push
cmp
arpl
or
arpl
dec
push
add
sub
inc
dec
sub
sub
shrl
shl
xlat
stos
fcoms
dec
sahf
dec
or
or
and
add
pop
push
rorl
js
ret
cmp
in
and
mov
and
hlt
sbb
in
inc
bound
movsb
loope
mov
nop
outsl
cwtl
imul
addb
and
pop
roll
mov
insl
cmpb
mov
inc
pop
lahf
push
je
cwtl
pop
rcl
add
xchg
xchg
push
stc
push
call
in
cs
sub
push
push
cmp
and
adc
xor
push
js
adc
insb
repz
dec
jmp
push
sbb
bound
xchg
pop
mov
or
shlb
jo
jmp
mov
push
loopne
push
and
int3
add
in
adc
jl
xor
add
movsl
sbb
jno
outsl
and
movsb
test
imul
rolb
shlb
xor
loope
int
fsub
lods
pop
aaa
mov
cltd
cmp
pop
adc
and
cmp
ss
dec
push
cwtl
adc
sbb
sarb
in
fwait
sbb
cmp
mov
jl
mov
cltd
mov
add
sar
push
push
mov
adc
aaa
nop
popa
mov
sbb
add
mov
mov
adc
mov
lods
mov
mov
idiv
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
jl
stc
int
xor
mov
add
jne
inc
fisubl
loopne
jbe
adc
das
aad
mov
insb
cmpsl
pop
les
jo
jmp
mov
and
in
mov
sbbl
lret
mov
mov
add
rorl
out
push
or
pop
pusha
push
ljmp
movsb
sti
sub
sbb
mov
je
test
pop
lea
cltd
idivl
std
push
add
cli
xor
daa
pusha
jl
icebp
fnstsw
dec
fs
or
xchg
arpl
imull
test
jle
cmp
lahf
out
mov
adc
sbb
adc
lods
lea
mov
add
pop
inc
pop
xchg
imul
ss
cld
testb
or
jmp
jge
jmp
pushf
into
ja
aas
jmp
sub
inc
hlt
pusha
or
jge
push
faddl
and
sub
xor
mov
fisubrs
inc
cmp
dec
sub
mov
hlt
cmp
mov
inc
fisubs
out
or
or
xchg
pop
jl
jmp
rcrb
mov
inc
mov
and
clc
insl
je
into
clc
fidivl
jmp
outsb
mov
push
pop
ljmp
cmp
jle
aam
mov
add
jl
dec
incl
mov
movsb
push
mov
aad
mov
fmull
xorl
js
lea
push
stos
jecxz
jp
f2xm1
aam
ret
scas
push
adc
and
sbb
mov
out
mov
pop
push
lahf
je
je
aam
mov
push
inc
and
and
push
jl
jmp
sbb
jle
mov
push
push
push
pop
addl
fs
adc
xor
daa
pop
addr16
or
push
push
mov
pushf
imul
cmp
sbbb
int3
cld
gs
mov
and
aas
xchg
dec
push
and
rorl
and
aaa
sbb
pop
jne
rcll
add
jmp
add
leave
push
leave
xchg
pop
fstp
add
inc
pop
push
sbb
daa
and
xor
aas
fdivrl
xor
push
mov
push
leave
call
pop
mov
push
cmpsl
or
xor
pop
dec
mov
sub
dec
push
dec
add
push
out
js
mov
cmp
test
aas
movsl
mov
scas
loope
mov
and
push
pop
enter
push
jg
sub
loopne
jg
popa
push
fcoms
inc
sbb
leave
xor
or
sbb
adc
adc
lock
cmp
fs
jae
add
push
pop
add
mov
dec
sub
xadd
jecxz
ret
mov
movsb
sub
push
mov
xchg
pop
push
pop
push
xor
cmp
push
or
inc
and
and
addl
adc
and
in
loopne
jnp
mov
push
xor
mov
push
push
lea
mov
pop
cmp
lock
ret
mov
add
push
xchg
or
decl
clc
setb
test
jne
mov
lcall
sub
sar
xor
and
adc
pop
jo
lea
push
rcll
out
mov
dec
sti
mov
je
sub
pop
pop
pop
jmp
aam
mov
mov
nop
lock
popa
mov
mov
mov
shll
pushf
lods
mov
mov
in
iret
cmp
add
cmp
and
xlat
das
push
jge
dec
js
hlt
fs
scas
or
xchg
xchg
sub
xor
push
lcall
lret
mov
adc
xchg
icebp
mov
mov
adc
cs
add
or
xchg
xor
push
dec
mov
jle
pop
ror
cli
sub
jae
sti
cmp
je
or
je
and
je
jae
out
test
hlt
pop
or
in
ret
sahf
pop
sbb
sub
xlat
jge
adc
jmp
shlb
aas
xchg
sbb
xor
add
data16
icebp
xchg
out
xchg
movl
mov
mov
jnp
insl
lock
sbb
push
ja
subl
mov
lods
outsl
pop
enter
jmp
shrl
add
movsb
xchg
or
rcll
push
push
nop
cltd
xor
push
in
pop
cmpb
dec
clc
setne
rorb
test
jae
inc
mov
mov
clc
pushl
xchg
es
jne
push
push
cmpsb
shll
das
mov
jmp
fcomps
lods
mov
or
or
xor
xor
and
lods
inc
inc
jbe
pop
adc
mov
andl
dec
js
insb
in
ror
add
test
xor
lock
adc
mov
adc
sbb
fadds
jecxz
push
dec
in
inc
or
in
push
add
cmp
stos
add
dec
addr16
fcmovb
test
xchg
and
call
lock
int
xor
mov
inc
insl
pushl
mov
lcall
xor
cmp
jge
mov
call
les
enter
jl
add
in
popaw
xor
lea
shl
mov
pop
push
adc
rcl
jne
fcomps
inc
fmuls
lock
shll
lcall
test
mov
xchg
repz
lods
xlat
adc
add
filds
scas
xchg
add
or
popf
sub
repz
adc
mov
pusha
and
adc
add
pop
pop
insl
sarb
xchg
pop
leave
lret
out
push
pop
insl
mov
or
or
xchg
jl
or
cmp
pop
ss
dec
aaa
or
test
sti
outsl
add
jb
add
test
xchg
iret
or
orl
jmp
scas
nop
and
out
je
fstps
mov
cmp
mov
popf
inc
pusha
stos
aaa
stos
mov
add
add
das
loope
add
add
inc
mov
subl
sub
push
sub
jb
push
mov
lock
ret
or
pop
sahf
pop
call
add
enter
push
enter
jp
mov
sub
mov
jge
adc
xor
dec
adc
fsubrs
and
shl
daa
add
pop
sub
cli
jo
or
fdivl
mov
in
inc
adc
outsb
sti
loope
adc
jge
jl
bound
daa
dec
pop
push
fsubrp
adc
arpl
push
in
mov
fcomip
movsl
pop
mov
and
mov
test
jo
push
mov
jmp
push
stos
and
sahf
loopne
aam
adc
scas
adc
add
insb
mov
adc
xchg
rcrb
bound
test
sbb
pop
jns
pop
or
repnz
rcrl
pop
add
add
arpl
xchg
aam
mov
lret
in
push
push
popa
push
pop
movl
xor
inc
sub
aam
add
adc
insl
test
into
movsb
jb
sub
cmc
or
xor
push
movb
popa
inc
pop
mov
pop
bnd
xor
sar
aam
inc
and
popf
fidivs
add
scas
push
shlb
or
cmpsl
pop
push
outsb
nop
aam
lods
lahf
rclb
enter
add
fstps
mov
lds
xorl
adc
xor
cmpsl
mov
mov
sbb
mov
nop
pop
dec
pop
pop
pop
mov
xlat
loope
mov
in
lahf
je
add
jne
pop
in
clc
ret
adc
pop
jno
adc
xchg
or
sbb
dec
xchg
jno
fsubr
push
sbb
jo
inc
cmp
jmp
loope
add
inc
cld
push
push
and
and
sbb
int
mov
sbb
leave
popa
jo
mov
das
cmpsb
dec
mov
movsb
inc
adc
cmp
cmp
adc
rclb
pushf
xor
push
subb
mov
lcall
cmp
rorb
mov
sbb
sub
stos
inc
add
or
inc
lret
inc
push
iret
lcall
sbb
mov
xchg
pop
jnp
pop
les
sbbb
in
mov
rclb
cwtl
sub
adc
cmp
mov
loope
push
je
push
call
and
in
fwait
inc
or
mov
cwtl
push
stos
xchg
xchg
scas
cmp
jl
sub
shlb
lods
sti
imul
mov
mov
xor
movsb
cmp
and
and
inc
adc
inc
pop
mov
loopne
das
test
rclb
add
leave
push
cmpsb
adc
or
les
into
add
lods
out
and
inc
and
imul
fnstcw
shlb
jle
pop
shl
and
and
enter
jle
add
lock
lcall
daa
js
in
add
push
mov
xlat
dec
ljmp
mov
in
push
nop
add
sarb
sbb
xor
xor
sbb
pop
dec
adc
dec
mov
sub
shrb
loope
xchg
push
mov
push
repnz
inc
mov
add
js
scas
jno
cmpsl
fdivrl
add
movsb
push
or
push
cwtl
in
prefetchwt1
sub
fdivs
adc
inc
adc
call
push
arpl
mov
out
inc
cmp
in
cs
addl
add
or
jmp
xor
mov
cmp
adc
pop
push
and
shlb
insl
mov
cmp
or
scas
xchg
dec
outsl
adc
in
insb
push
mov
push
movsl
sbb
fnclex
dec
add
mov
push
outsl
adc
movsb
xchg
pop
inc
js
jo
cmp
or
xor
adc
rorb
popa
packsswb
pop
jl
call
or
outsb
clc
sub
mov
push
fnstsw
lock
push
dec
mov
addl
mov
jp
inc
mov
or
inc
inc
sahf
cmp
je
ja
gs
ja
cli
aaa
rorb
add
mov
lret
add
push
outsb
sub
sub
sub
cmp
sbb
push
rorl
lds
push
sbb
lds
jne
inc
js
call
and
jno
sub
outsl
push
outsl
outsl
testb
pop
push
je
and
gs
test
ret
mov
lea
mov
stos
jae
test
nop
out
pop
or
dec
or
fdivrl
inc
pop
cmp
imul
inc
xor
add
test
testb
out
push
sub
enter
sbb
lret
or
enter
or
push
fidivs
sti
pop
mov
lcall
pop
pop
daa
sub
jl
or
mov
jl
divb
pop
mov
js
sub
scas
mov
leave
leave
enter
call
enter
adc
xor
test
roll
cmp
xchg
andl
fldl
mov
shrb
add
pop
inc
adc
xor
add
dec
fwait
bound
xchg
daa
xor
outsb
mov
inc
pop
sbb
inc
repnz
int
cwtl
out
push
repz
ror
add
adc
add
xorb
test
cmpl
scas
int3
fsts
jns
inc
adc
push
pop
cmpsl
mov
jbe
jne
fildl
lods
jl
decb
push
iret
jae
add
add
add
add
add
xchg
add
jecxz
push
cmp
xchg
push
or
pop
cmpsb
fcom
mov
aad
cmp
sysexit
test
pop
inc
mov
in
adc
mov
add
insb
mov
fsubl
lock
adc
adc
hlt
xchg
adcl
movsb
sub
push
je
and
scas
loopne
cwtl
and
pop
adc
out
fdivl
lods
mov
aaa
das
inc
std
mov
pop
jno
push
lcall
test
push
loopne
push
push
jne
pop
data16
push
inc
dec
push
jmp
idivl
ret
pop
orb
sti
push
push
cltd
inc
push
mov
xor
sbb
cmp
clc
mov
aaa
pop
push
sbb
out
jge
jo
push
mov
pushf
fs
movsb
pop
lahf
lea
pop
add
cmc
dec
inc
mov
xor
or
xor
xchg
movsb
repnz
sub
sub
pop
push
sub
xchg
xchg
leave
int
mov
jge
jbe
jne
push
xchg
add
or
or
in
sub
sti
and
pop
dec
jb
les
and
or
nop
movsb
sbb
pusha
cmpl
jne
xchg
scas
int3
inc
out
push
xor
int3
mov
pop
mov
push
inc
mov
es
insl
and
jl
movl
pop
sub
pusha
xchg
sub
push
hlt
out
push
push
orb
push
pusha
mov
inc
adc
dec
test
jo
mov
outsl
les
js
mov
jne
mov
mov
jne
insb
out
pop
push
data16
and
fwait
cmpsb
inc
sahf
js
js
pop
adc
adc
shrb
leave
or
imul
iret
lret
add
mov
stc
js
mov
xor
pop
pop
dec
int
dec
cmpb
fcmovnbe
gs
xor
jge
jns
pop
loope
daa
sub
jl
addb
lock
mov
ret
pushf
addl
mov
scas
push
fs
add
sbb
insb
decl
into
mov
test
pop
out
add
mov
pop
negl
cmp
push
fstl
test
pushf
xor
ja
aaa
test
js
push
dec
loope
add
add
xchg
mov
daa
mov
fsubrl
dec
xchg
aad
sub
js
xor
adc
and
aas
push
cltd
sar
push
pop
out
pop
push
dec
ljmp
xchg
push
inc
mov
mov
data16
jge
xchg
or
and
add
mov
fisttpl
lahf
mov
or
dec
lock
lcall
lods
bound
test
mov
push
cwtl
jecxz
orb
lahf
or
sub
leave
adc
sub
push
mov
pop
and
stc
das
mov
pop
sub
or
or
xchg
push
add
rcll
and
bound
mov
xor
xor
mov
xor
and
insl
mov
and
mov
inc
test
and
push
lea
out
mov
out
cmp
jmpw
les
cmp
pop
gs
sub
inc
in
inc
mov
push
daa
push
repz
loop
pop
hlt
fnstcw
jl
inc
loopne
pop
repz
sti
mov
inc
ljmp
outsb
leave
push
jg
adc
hlt
jne
push
push
push
push
shl
jno
cmp
addl
add
rcrb
pop
mov
sub
lock
inc
fsubs
mull
scas
push
push
jnp
enter
and
les
sub
jnp
pop
pop
push
sbb
lods
and
dec
mov
cld
dec
cmpsl
sbb
and
xchg
jb
jne
push
push
jnp
test
dec
add
or
fmull
sbb
add
test
push
dec
push
add
push
sbb
subb
xlat
movsl
test
push
mov
enter
fwait
push
lahf
shlb
fiaddl
cmp
out
daa
push
imul
xchg
mov
dec
or
or
add
cmp
sahf
loopne
cmpsl
push
push
je
xor
or
xchg
sbb
lcall
sub
adc
add
mov
mov
and
stos
push
arpl
or
sbb
mov
or
fwait
lret
stos
adc
and
pop
lods
push
sub
dec
pop
inc
xor
lock
and
dec
adc
jne
adc
mov
cltd
or
adcb
fs
bound
jbe
popa
cltd
fdivs
out
push
mov
out
lods
stos
cmp
lret
push
jne
xchg
xor
add
push
mov
xchg
shll
stos
jle
inc
out
mov
adc
insb
iret
mov
inc
mov
frstor
scas
pop
gs
mov
cmp
sahf
mov
mov
pop
inc
jle
xor
add
or
xor
mov
enter
sti
adc
mov
lahf
mov
mov
pop
jo
js
dec
dec
imull
dec
test
adc
push
pop
fdivs
adc
cmp
pop
dec
filds
shl
js
mov
xor
leave
jb
jo
orps
sub
fstpt
test
push
sbb
jecxz
popa
stos
icebp
sbb
jb
mov
movsl
mov
ret
std
test
cwtl
add
sbb
mov
push
pop
and
ja
shlb
adc
mov
push
pop
push
push
jo
mov
into
outsl
dec
push
sbb
or
ljmp
sbb
pushf
jl
xchg
mov
push
xor
add
dec
test
andb
jbe
loope
xchg
mov
add
lea
aas
push
inc
add
or
mov
xchg
push
pop
les
dec
mov
adc
xchg
into
sbb
lret
xchg
push
cld
xchg
adc
add
shr
lea
jno
lret
add
loopne
ret
sbb
lds
mov
mov
popf
mov
daa
xchg
xchg
xchg
mov
lret
into
mov
push
addr16
adc
shll
sbb
fbstp
sbb
add
cmp
jae
push
gs
push
cs
sbb
outsb
icebp
stos
xor
and
daa
sub
adc
mov
push
add
add
cmp
mov
mov
jmp
cmp
dec
pop
push
shl
jge
enter
add
mov
mov
cmp
outsb
test
pop
push
ja
lahf
or
jmp
popw
adcb
push
ljmp
pusha
pop
incb
push
test
jecxz
and
lock
mov
cmp
jg
loope
shl
dec
inc
ljmp
jmp
in
mov
adc
mov
hlt
mov
mov
push
fwait
and
int3
xchg
cmp
adc
adcl
inc
hlt
sub
rcll
enter
add
fwait
imul
lock
aas
cmp
nop
or
push
nop
mov
pop
cmp
push
inc
adc
fcoms
jb
cmp
ljmp
mov
jbe
es
xorb
and
jnp
push
adc
mov
es
js
jle
cmpsb
mov
mov
mov
inc
or
and
sub
or
cmpsb
cmp
push
fstps
andb
push
mov
push
addl
mov
sub
inc
js
add
xchg
mov
cmp
dec
lock
pcmpgtd
sahf
push
sti
cmp
mov
rclb
enter
rcrl
stos
push
ds
cmc
loopne
sbb
in
add
push
pop
data16
pop
push
popa
xchg
push
imul
sbb
sti
sbb
and
ja
cmp
cli
or
stos
es
or
add
add
movsb
jb
lea
pop
push
addr16
mov
test
mov
loopne
fimuls
mov
ljmp
xor
sub
out
pop
push
es
jge
int
push
sbb
jne
xor
fs
lods
add
mov
push
ret
add
repnz
push
dec
xchg
xor
and
mov
lods
fsubr
mov
push
cmp
outsb
push
cs
mov
outsb
or
insl
add
push
call
sub
mov
pop
adc
inc
dec
nop
push
lcall
jbe
push
dec
jne
loop
fs
cltd
lahf
mov
dec
cli
adc
adc
scas
or
test
test
imul
je
inc
cmp
rolb
in
mov
pop
jg
test
mov
movsb
mov
push
stos
test
lds
xor
movsb
push
shr
and
jb
subb
xor
jmp
into
shrb
in
in
add
in
pushf
cmp
in
push
push
popf
scas
test
imul
shr
adc
dec
add
pop
xchg
stc
inc
add
inc
test
fdiv
mov
mov
ss
mov
push
aaa
xchg
insb
mov
addl
cmp
sbb
mov
adc
xchg
js
mov
mov
adc
lret
push
sti
adc
jo
jae
std
jge
mov
add
cmc
xchg
jecxz
pop
adc
push
imul
dec
xchg
mov
push
cltd
pop
lock
movb
daa
inc
lock
xor
dec
mov
dec
add
pop
ret
das
movsb
or
adc
sub
sbb
dec
shl
out
bound
push
xor
in
ret
adc
shr
push
cmpb
add
incb
lods
adc
lock
xor
cmp
pop
addl
insl
out
fdivs
push
int
call
sahf
loope
ss
add
mov
add
mov
jb
icebp
pusha
lret
dec
pushf
dec
xchg
pop
ds
adc
sbb
sti
sub
stos
je
sub
fdivs
sbb
pop
jmp
pop
add
loope
add
jmp
aam
and
call
sub
cltd
mov
add
inc
add
sbb
mov
push
sub
or
push
fildl
mov
sbb
pop
cmc
jmp
popl
pusha
test
pop
stc
sbb
jne
vshufps
adc
movsb
mov
sub
or
xorl
mov
pusha
lea
loope
pop
mov
xor
imul
movsb
push
mov
mov
jmp
push
push
mov
pop
jno
in
mov
mov
dec
enter
add
pop
leave
lret
or
or
inc
leave
lret
push
test
enter
xor
test
mov
aam
push
rorl
cs
outsb
test
add
mov
sbb
scas
add
jle
pop
jo
fildll
push
call
in
shlb
add
mov
ja
cmc
add
add
sbb
jmp
pushf
jbe
jns
loopne
mov
sbb
outsb
dec
xchg
inc
mov
jno
scas
mov
nop
push
pop
pushf
cmp
dec
pop
jo
popa
in
mov
daa
push
cmp
sub
pop
and
inc
cli
push
or
or
loopne
add
or
popa
repz
dec
lock
add
je
pop
es
bound
and
mov
mov
pop
xchg
rclb
in
loope
cmpsl
leave
aam
inc
pop
leave
sbb
aas
bound
jae
mov
fsubrs
andl
push
mov
and
out
mov
outsb
xorl
or
mov
xchg
mov
loopne
sbb
pusha
jae
frstor
aaa
mov
push
mov
sbb
nop
mov
test
fidivs
fwait
add
add
push
push
fwait
movsbl
add
inc
sub
pop
cwtl
repnz
add
call
rcrb
repnz
movsb
xchg
push
fsubr
or
pop
xor
out
pop
pop
movsb
add
pop
leave
pop
out
rolb
pop
sar
or
or
jmp
or
dec
cmp
lret
push
mov
pop
xchg
push
inc
scas
jge
pop
push
push
xor
in
mov
xor
in
sbb
int
outsl
aas
gs
mov
gs
pusha
adc
sbb
out
in
pop
ja
ret
icebp
call
add
mov
pop
push
sub
jmp
in
sti
testb
jne
sub
jne
xor
push
push
cmpsb
add
inc
cld
cld
dec
jmp
repnz
lock
inc
add
hlt
popa
pusha
sub
cli
clc
jmp
lea
test
mov
add
or
jb
push
xchg
testb
lea
push
lock
idivb
mov
clc
mov
imul
mov
push
mov
fcmovb
jg
aaa
aam
movsb
or
sbb
lods
pusha
aaa
xor
cmp
loop
pop
push
shr
adc
inc
clc
fistl
push
sub
sub
add
iret
push
push
add
push
xlat
sbb
test
ss
or
jbe
jp
mov
add
adc
dec
add
or
push
mov
stos
int
lods
hlt
addl
cmpb
rol
dec
sbb
orb
xor
pop
sbb
movsb
lahf
mov
mov
push
add
mov
rorl
sub
movsb
pop
mov
sbb
push
mov
add
lcall
dec
cwtl
rcll
in
or
hlt
and
call
add
daa
add
or
add
sub
mov
push
call
ret
pop
std
or
pop
push
mov
cmp
je
shlb
push
lret
inc
cmp
mov
bound
cmp
lea
lods
dec
mov
into
pop
and
fnsave
dec
mov
movsb
push
roll
jl
loope
sub
outsl
mov
push
cmp
or
jnp
dec
shrb
decl
nop
mov
sbb
add
les
and
dec
imul
add
add
add
mov
test
push
inc
int
sar
push
ds
or
mov
mov
cmp
je
push
lea
push
sti
xchg
nop
adc
arpl
cmp
xchg
outsb
mov
sub
push
sbb
sbb
call
pop
or
cld
xor
or
mov
mov
movlps
call
push
aas
push
adc
inc
xchg
jp
shrb
mov
jns
and
dec
xchg
bound
add
clc
add
hlt
push
in
inc
mov
mov
jbe
in
mov
neg
push
sub
lea
test
or
push
loope
in
addl
push
je
sub
dec
cmpsb
push
test
and
test
ja
shlb
decl
xchg
lahf
push
push
xor
push
push
cmp
je
ficoml
sbb
aam
push
xchg
push
mov
add
fiadds
push
decb
test
cmp
je
push
push
aas
inc
mov
int3
sub
int3
mov
jmp
dec
mov
icebp
cs
mov
adc
sub
and
pop
scas
data16
into
push
test
loopne
in
or
out
cli
outsb
cmp
push
rorb
cwtl
into
gs
scas
in
cmp
or
cmp
push
and
lock
imul
inc
mov
xor
int3
je
mov
xchg
dec
cmpl
je
ret
pop
sbb
jae
inc
cmp
inc
adc
andl
ret
sub
mov
pop
xor
nop
push
shlb
mov
jmp
jae
pushf
mov
and
jb
sbb
push
lea
in
cmp
je
cmp
je
or
std
jne
add
cmpsb
mov
push
je
decl
add
push
mov
gs
mov
jmp
outsl
outsb
pop
mov
cmp
xor
push
cmp
adc
mov
pop
clc
inc
add
or
hlt
scas
push
add
add
jmp
fwait
incb
sub
dec
lea
cmp
jne
xchg
add
cmp
sub
sbb
mov
mov
or
cmpsl
jae
jne
repnz
mov
imul
movsb
or
cld
add
sbb
pop
sbb
and
leave
ret
in
sub
das
sub
mov
adc
icebp
fcmovbe
mov
or
ja
mov
xchg
cmpsl
cmp
aaa
popa
mov
ret
xchg
call
jbe
je
add
push
sbb
xchg
mov
add
pop
mov
int3
roll
inc
adc
or
xchg
add
lahf
dec
pop
sbb
ret
jmp
jge
cmpsb
in
jle
loopne
xor
filds
pushl
jae
push
cmp
gs
je
cmp
jne
mov
sbb
pop
xlat
cmp
add
push
dec
inc
lock
mov
sahf
testl
push
movsb
jne
jmp
testb
sub
or
sbb
add
jbe
cli
cmp
jbe
mov
cmp
fisubl
inc
jmp
inc
and
or
jne
xor
sub
ret
add
sbb
or
andb
clc
lahf
jmp
pop
sarb
pop
lea
cmpsb
movsb
sahf
clc
mov
pop
es
and
pop
in
mov
pop
jecxz
xor
inc
cmpl
and
cmp
notb
cmp
push
clc
je
fs
or
add
jb
or
ja
push
pop
add
shrb
enter
movsl
popa
jb
shlb
jge
add
push
cmp
pop
pop
fnsave
push
stos
cmp
or
outsl
ret
sub
popa
loop
xchg
mov
adc
out
loopne
mov
insl
lret
fsubs
push
data16
mov
aaa
jb
cmp
rol
shl
add
jmp
cwtl
aas
pop
icebp
fmull
mov
inc
orl
test
es
je
fs
jne
xor
and
dec
lock
test
insb
je
push
mov
or
add
test
ljmp
jae
mov
jmp
dec
shlb
cld
mov
mov
sub
lea
xor
incl
mov
jl
outsb
sub
push
icebp
outsb
mov
lret
cmp
jg
or
jge
outsb
outsb
pop
add
or
jle
es
outsl
outsb
sub
sub
and
pop
cmp
jl
pop
jle
sbb
inc
test
or
int3
lahf
add
jbe
mov
test
dec
jo
adc
adc
je
test
jne
clc
pop
cld
and
jb
xchg
daa
push
mov
je
je
xor
aaa
cmp
jae
movb
inc
mov
push
sub
push
or
or
sbb
test
cmp
or
jno
sbb
std
push
mov
inc
and
je
mov
testb
dec
mov
push
mov
cmp
add
jp
inc
es
pop
pop
cmp
dec
mov
cli
insb
into
push
mov
movl
sub
mov
js
push
push
orl
ljmp
data16
pop
push
sbb
pushf
lret
das
mov
enter
fnsave
cmp
out
add
mov
jecxz
loope
xchg
adc
sbb
pop
sti
hlt
mov
mov
xor
pop
movb
push
inc
lea
call
push
pop
add
pop
clc
sub
jb
sbbl
cmp
mov
test
mov
loopne
mov
mov
or
xchg
lods
cmp
cwtl
xor
lock
lahf
inc
mov
or
add
inc
arpl
push
inc
and
jae
xchg
imul
std
jo
and
cmp
je
test
adc
push
jmp
xchg
push
fsts
sti
mov
jo
mov
shlb
loopne
pop
mov
dec
push
push
add
arpl
or
xchg
lret
add
push
mov
stos
lock
pop
xor
pop
aam
xor
pop
dec
jo
aaa
fwait
push
add
clc
add
xlat
ljmp
es
in
xor
sbb
cmp
stc
inc
pushf
mov
sbb
adcl
push
or
add
sahf
push
cmp
out
sbb
lock
popa
hlt
sub
pop
add
add
xchg
xchg
mov
xchg
roll
dec
testb
test
lds
sub
andl
cs
pop
cmp
lds
cwtl
and
add
fcomps
inc
fisttpl
lea
adcb
push
cltd
push
enter
pushl
xchg
xchg
insl
mov
lods
dec
mov
sbb
add
or
add
call
sub
jl
inc
outsb
xchg
sbb
xchg
xchg
into
push
push
mov
cwtl
addl
xchg
es
xchg
out
jl
pop
push
mov
lods
shr
or
jne
iret
push
leave
xor
xchg
andl
xchg
in
enter
or
inc
xchg
test
leave
dec
pop
inc
and
cmc
inc
sub
daa
mov
fdivl
xchg
mov
add
shll
in
dec
push
aaa
sbb
cld
loope
mov
xor
mov
sbbb
in
push
in
arpl
add
pushf
es
push
xlat
add
push
shl
sub
add
cmp
test
cmpb
adc
jnp
push
push
fdivl
jne
sbb
cmpsl
pop
lods
cmp
jnp
das
movl
lods
loop
inc
add
bound
into
cmpl
dec
adc
sub
xor
inc
cmpl
adc
dec
mov
mov
push
in
fcomp
sbb
std
loope,pn
cmpsb
jmp
cmp
je
cmpb
lods
cmp
inc
mov
inc
inc
inc
xchg
test
pop
in
loope
jge
pop
and
aaa
sbb
addl
das
mov
inc
jne
hlt
pop
call
rcl
mov
mov
xchg
rclb
push
aam
fsubr
cmp
imul
test
push
push
adcl
or
fsubp
inc
push
call
dec
fisubl
xor
jbe
jp
jmp
inc
pop
mov
pushl
jmp
pop
inc
jge
xchg
cmp
je
lea
cmpb
cmp
jne
les
push
inc
mov
push
loopne
pop
cmp
mov
or
fnstenv
je
data16
mov
push
jmp
test
movsb
push
adc
jbe
mov
jb
jge
adc
lods
cmp
add
jle
out
je
jmp
add
das
push
fidivrl
push
and
and
mov
or
mov
lahf
jmp
push
ret
jns
ret
or
lahf
push
sbb
cmp
ret
int
pop
jbe
ret
mov
xor
mov
rol
mov
sub
adc
add
or
test
int
dec
mov
sbb
add
in
leave
test
mov
imul
cmpsl
xor
test
or
xor
popf
aam
jb
inc
mov
fimuls
mov
or
push
lods
mov
lret
push
push
push
sbb
lock
mov
add
test
scas
loopne
jmp
xchg
popa
pop
adc
cmp
xor
fiaddl
mov
cmp
mov
or
mov
xchg
dec
sub
xor
lret
in
mov
sub
sub
push
cld
sub
pop
ret
icebp
jnp
loope
imul
in
add
in
add
inc
test
ror
int3
xchg
out
sub
cmp
mov
push
xchg
push
pop
xor
push
mov
xchg
test
jb
push
push
sbb
mov
sub
in
pop
sbb
cmpsb
jle
or
repz
loopne
sbb
push
push
dec
xchg
aas
cmp
popf
mov
sbb
test
mov
test
or
mov
or
ficoms
sarb
sub
in
dec
bound
adc
or
pop
outsl
fimuls
add
pop
inc
dec
movl
pop
jbe
add
js
or
add
loopne
loopne
mov
mov
or
inc
ss
out
jo
sub
cmp
test
mov
mov
or
or
mov
add
lcall
vmread
inc
jmp
orb
dec
xor
add
jle
ret
push
push
loopne
in
jne
cld
aam
push
inc
push
dec
xor
fwait
outsl
mov
jg
or
fadds
imul
js
push
push
jne
hlt
cmp
sbbl
push
cmpl
adc
aas
jl
adc
std
adc
pushl
add
mov
lret
mov
push
jo
mov
faddl
iret
rorb
shll
in
mov
orb
ds
add
inc
push
cmp
mov
pop
cmp
sub
xchg
shrb
rclb
pusha
jo
mov
in
in
xchg
mov
mov
pushf
xor
mov
out
xchg
mov
cmp
orb
or
push
xchg
lret
dec
xchg
cmp
push
fidivl
sub
dec
lock
xor
clc
push
pop
stos
test
call
fs
or
xchg
jbe
enter
or
bound
push
and
mov
push
jns
lods
or
inc
out
xchg
add
mov
cmp
and
jg
add
cmp
pushf
xor
pop
add
push
xchg
adcb
push
into
inc
pop
gs
pop
rcr
add
sbb
and
adc
mov
stc
bound
inc
push
fcoml
jl
cld
or
or
fnsave
push
cltd
inc
mov
popa
adc
test
scas
dec
cld
fidivl
js
mov
sub
pushf
or
int3
push
lods
sub
pop
pop
sbb
xor
rorb
loop
jmp
sbb
and
and
push
pop
mov
mov
mov
rcll
addr16
cmpsl
cmc
add
add
dec
xor
push
imul
push
xor
cmp
cmpsb
cmp
xchg
mov
aam
xorb
lock
pop
xchg
inc
mov
cmp
std
test
sbb
psraw
add
push
sti
loop
mov
outsb
add
sbb
or
sbb
push
add
mov
adc
push
adc
inc
adc
rorl
lods
mov
hlt
iret
in
dec
rorb
xchg
add
fmull
or
or
cli
and
popa
pushf
xor
stos
test
add
es
push
lcall
add
cmp
xchg
pop
shrb
inc
mov
lods
cmp
imul
out
das
add
inc
and
dec
sahf
sbb
jecxz
dec
cmp
jecxz
or
lods
dec
add
push
mov
outsl
push
sahf
into
mov
stos
lcall
dec
in
icebp
or
dec
inc
out
or
mov
nop
adc
mov
test
rol
mov
lods
lret
sti
and
mov
pop
add
out
mov
insl
mov
adc
decb
sbb
add
insb
popa
cld
ss
sbb
iret
pop
sbb
mov
pop
test
scas
int3
bound
add
imul
mov
cmpsl
xchg
xchg
xchg
push
dec
dec
mov
imul
pop
xchg
hlt
xchg
adc
lret
roll
fidivrl
ror
mov
or
or
inc
xchg
add
xor
imul
mov
sti
pop
or
adc
and
jns
jo
adc
pushf
add
out
xchg
dec
adc
add
mov
add
push
and
arpl
fnstsw
insl
inc
jns
ja
pop
inc
push
or
shr
ds
xchg
fs
push
xor
jecxz
xor
cmp
cmp
call
push
adc
cmp
pop
pop
mov
daa
je
rorb
jge
jg
xor
fldt
in
and
push
mov
out
mov
jle
push
fimuls
push
cmc
jo
or
pop
cmp
inc
dec
test
stos
xchg
sbb
insb
call
sbb
push
movsl
mov
jmp
ds
je
dec
ret
addb
pop
pop
push
roll
inc
cwtl
mov
pop
imul
test
out
adc
sbbl
xchg
std
or
test
popa
and
mov
pop
neg
pop
or
imul
adc
push
jge
jle
subl
cmp
mov
sub
sbb
sub
fildll
scas
pop
clc
jne
add
mov
jmp
add
push
sub
or
jmp
inc
inc
into
insl
mov
decb
cmpsl
bound
mov
push
lock
pop
pop
pop
inc
pop
add
pop
mov
push
pushl
jl
pop
wrmsr
ret
scas
jle
in
or
pop
nop
idivl
mov
add
rcl
sahf
jo
and
pop
outsl
loope
or
adc
add
add
xor
or
inc
aam
test
scas
mov
je
jecxz
adc
out
cmc
add
mov
aad
push
add
inc
sub
icebp
lds
and
aas
adc
pop
dec
jne
fdivs
cmpsl
fistl
ja
jmp
push
adc
cmc
pop
dec
or
lods
pusha
adc
jnp
out
mov
adc
fs
add
dec
pop
pop
mov
xchg
push
insl
push
pop
push
pop
push
orl
rorb
adc
xor
movsl
or
push
inc
iret
rclb
stos
lcall
mov
mov
mov
push
xchg
adc
mov
sub
xor
push
mov
fcomps
pushf
je
loopne
icebp
call
adc
mov
add
or
sub
push
push
or
adc
sbb
ss
jge
or
add
outsb
push
cmc
pop
jns
pop
add
push
mov
dec
pusha
mov
pop
loopne
sbb
sub
fwait
add
sbb
and
ret
rorl
movsb
sbbb
loope
cmp
inc
push
pop
sub
loopne
pop
mov
add
rolb
call
push
push
movsl
mov
inc
and
mov
xchg
int3
adc
xor
push
xchg
and
sbb
loope
leave
into
push
sahf
rorb
clc
sahf
jl
enter
xchg
or
pop
push
dec
mov
cld
imul
int
add
decl
aam
push
je
adc
push
xor
xor
cs
inc
push
dec
and
jo
insl
cmp
sbb
jb
je
inc
andb
sub
xchg
rorb
adcl
adc
cmp
addl
jne
ret
lea
xor
dec
out
popf
xchg
sub
popa
mov
dec
aaa
mov
aad
push
decl
xor
xor
or
in
daa
jne
rol
jne
sub
pop
ret
ds
cmp
add
sbb
push
jo
addb
pop
sub
sub
sub
inc
scas
xchg
fldl2t
sub
test
mov
adc
or
cmp
pop
xlat
stc
nop
dec
pusha
enter
lds
mov
push
jg
and
jg
adc
andb
shlb
inc
xor
cmp
add
xor
add
xor
inc
ret
xchg
pop
fiaddl
clc
add
sub
je
loopne
add
out
sahf
jbe
mov
push
add
mov
sahf
fidivrs
xor
cmp
mov
movsb
and
sub
in
popa
movsl
movsl
dec
js
dec
dec
xor
adc
mov
xchg
sbb
mov
lock
bnd
pop
mov
repz
fldenv
out
or
or
xor
mov
out
xor
pop
add
inc
ret
push
test
add
mov
jmp
ficompl
enter
out
daa
add
test
xchg
add
lds
jmp
or
xchg
dec
xor
xorl
roll
ror
cmp
dec
andl
rcll
jp
mov
scas
dec
aaa
jns
lahf
sub
clc
pop
es
stc
fs
push
aas
push
fs
xor
sbb
pop
sub
push
push
mov
adc
add
in
test
iret
lret
dec
and
push
test
test
xchg
adc
rolb
mov
pop
hlt
jne
pop
pop
loope
jno
fisubrl
lock
scas
jl
xor
roll
lods
adcl
lock
dec
mov
inc
test
fisttpll
cmpl
aad
inc
cltd
lret
stc
rol
xchg
mov
cmp
adc
and
pushf
les
roll
lds
push
mov
addb
int
mov
or
push
or
push
pusha
xor
cmp
in
jge
push
out
in
setnp
jbe
outsl
sbb
adc
das
ja
movsb
or
shl
adc
cs
nop
aad
jnp
fisubrs
mov
mov
andb
mov
or
jle
xor
cwtl
aam
or
push
or
in
loopne
add
sub
repz
call
repnz
push
iret
push
fs
stos
pushf
repz
hlt
ret
mov
mov
es
sahf
mov
xor
xchg
in
repnz
rolb
es
popa
fadds
jno
push
or
bswap
jnp
lea
add
lods
popf
test
mov
push
gs
pop
bound
sub
movsl
cmp
fisttpll
push
pop
mov
sbb
mov
xlat
decl
or
punpcklbw
add
dec
ret
outsl
out
aaa
sub
push
push
or
hlt
sbb
mov
jno
pop
xchg
imul
jp
mov
pop
sbb
je
push
divl
push
push
pop
pushf
insl
cmp
add
inc
adc
inc
cmp
xor
sub
or
xor
or
lea
adc
inc
cmc
add
bound
imul
rcrb
add
pop
mov
inc
nop
stos
xor
sub
cli
xchg
or
mov
sub
xor
inc
inc
adc
pop
sub
add
int3
sub
dec
loope
cmp
push
mov
ret
dec
pop
mov
sub
inc
push
mov
orl
test
inc
pop
dec
or
dec
dec
mov
mov
cmp
adc
and
ret
fs
or
sub
stos
mov
mov
xorb
call
add
or
jp
movsl
xchg
xorb
add
push
mov
pusha
pop
daa
mov
hlt
in
sti
mov
ds
int
cmpsb
sub
lea
xor
mov
dec
cmc
cmp
adc
leave
lock
fmuls
dec
xor
dec
or
push
jle
cmpl
jo
push
pop
rclb
xor
daa
jp
xchg
jbe
add
sbb
and
xor
pop
rcl
leave
shlb
stos
push
mov
in
cs
fbld
xor
mulb
or
jae
insb
out
add
ret
mov
push
xor
ljmp
and
mov
and
mov
shlb
rorl
adcb
in
xor
or
mov
pushf
lahf
cmp
add
cmpsb
pop
add
cmpl
mov
aad
test
arpl
push
or
add
dec
inc
adc
pushf
cmpsl
rolb
cmp
es
dec
sbb
xor
fldl
insl
mov
aam
in
push
or
cmp
sarb
adc
lahf
mov
pop
mov
lods
xor
and
lcall
jns
push
orl
sbb
insb
jle
pop
mov
jne
ret
xchg
xchg
fbstp
adc
xor
pop
sbb
jmp
je
mov
movsbl
inc
xor
rclb
lret
xchg
les
insl
movsb
dec
nop
fnstenv
xor
dec
jp
or
pop
mov
xchg
jp
push
add
mov
adc
add
jmp
movb
pop
ss
mov
movsb
jecxz
pop
clc
dec
in
icebp
sub
lea
push
lea
push
inc
push
sub
pop
add
orb
sbb
cmp
mov
arpl
pop
ret
lret
test
sub
or
or
jno
in
shr
mov
and
cmp
adc
inc
lahf
xor
or
add
or
add
loopne
sarl
push
push
mov
and
fimuls
mov
add
push
jge
test
jle
jb
cmp
inc
in
stos
decl
push
add
xorb
nop
push
xchg
int
movb
shrb
fwait
insb
mov
mov
pop
cwtl
mov
cmp
or
adc
jle
mov
adc
and
xor
loopne
pop
ret
aad
cmp
je
xor
cmp
add
xchg
push
push
push
xchg
dec
test
mov
lock
mov
xchg
add
mov
and
jge
xor
and
xchg
repz
and
mov
cmpsb
add
cmpsl
xchg
popa
mov
adc
call
adc
loope
fs
sbb
cmp
jl
fmuls
in
imul
sahf
les
xchg
mul
movb
mov
add
test
xchg
out
fwait
mov
mov
cmp
jbe
cmp
jbe
mov
sbb
cwtl
jmp
stos
mov
sub
add
push
mov
je
insl
mov
enter
fs
sbb
adc
mov
mov
xor
adc
and
and
repnz
enter
aas
xchg
jg
loopne
adcb
lea
stc
mov
das
lea
gs
fdivr
xor
cmp
pop
call
mov
rolb
push
incb
data16
lods
je
adc
cs
fadds
in
add
adc
ss
xchg
pop
ret
pop
pop
aad
jne
xchg
in
add
je
push
xlat
popa
sbbl
jge
push
fcmovnb
or
adc
and
stc
fdivrs
cmp
pusha
xchg
sbb
mov
jne
mov
sub
xorb
ds
test
sbb
and
inc
dec
loope
and
imul
scas
jmp
out
leave
and
ret
cwtl
sbb
and
push
cmp
in
mov
mov
push
inc
jl
mov
loope
lock
mov
or
test
je
les
mov
jbe
mov
push
inc
sbb
inc
cmp
jb
pushl
aam
lcall
cmc
jg
negb
icebp
flds
push
daa
fstps
and
orl
fistpl
cmp
push
mov
mov
sbb
and
sub
xchg
popf
fdecstp
push
mov
jno
fstl
lea
sti
sbb
add
or
popf
mov
fadds
xchg
mov
movsl
rclb
mov
loopne
ret
sahf
loope
mov
lock
and
mov
cld
push
stos
jg
adc
inc
lea
daa
adc
lea
inc
jecxz
outsb
hlt
mov
jo
mov
xor
mov
and
roll
add
pushf
cld
dec
insb
xor
out
or
in
and
dec
test
dec
arpl
orb
stc
stc
pusha
mov
mov
mov
mov
jl
inc
aad
inc
mov
orl
sti
adc
push
into
jmp
push
xor
cwtl
cmp
sbb
popa
and
cmp
popa
pusha
sbb
and
push
cld
dec
pop
add
sbb
int
in
out
jp
movsl
cmp
cwtl
push
ret
iret
xor
mov
cmp
add
sbb
pop
cmp
jne
dec
aam
sub
roll
mov
rcr
call
pushf
cmp
and
clc
or
js
jb
adc
pop
lods
mov
mov
xchg
hlt
inc
cmp
movsb
xor
mov
inc
ffreep
sub
or
mov
cmpsb
pop
or
mov
or
xor
mov
outsb
test
xor
lods
xor
add
cmp
shl
cmp
adc
mov
loope
push
or
mov
das
test
jns
and
lods
sub
xchg
faddl
add
inc
pop
pusha
orl
and
rclb
mov
test
and
jmp
or
xor
sub
sbb
movsb
das
mov
jb
es
and
in
fwait
lock
pop
nop
jae
test
and
imul
or
dec
dec
lcall
mov
xchg
jg
cmp
cmp
pop
jl
cmp
add
ds
add
testb
stos
es
loop,pn
jmp
push
sbb
adc
je
or
push
sbb
push
add
jnp
and
adc
sahf
sbb
repnz
test
mov
jg
cs
xor
mov
sub
or
inc
stc
mov
out
jmp
test
pop
lock
sbb
jmp
jnp
fwait
mov
incb
lods
cmp
jge
pop
loop
push
mov
sbb
cltd
shlb
pop
pop
gs
dec
loope
xchg
xorl
imul
testl
cmp
gs
sbb
mov
sbb
xchg
adc
test
adc
push
movsl
mov
push
push
sahf
test
ret
pop
push
push
or
sub
movsl
hlt
clc
dec
push
idiv
xchg
push
adc
push
insl
jmp
iret
ficoms
aas
les
mov
sub
add
mov
adc
ja
add
clc
mov
pop
push
mov
roll
fs
movl
mov
push
je
pop
inc
add
pop
mov
dec
pop
and
push
push
sbb
mov
cld
mov
fnstenv
inc
pop
pop
mov
gs
test
fadds
pop
fcoml
pop
pop
dec
jecxz
adc
jmp
sarb
inc
and
pop
mov
jbe
adc
inc
xor
mov
je
aam
jnp
adc
xor
pop
bound
sub
int3
pop
dec
pop
xchg
pop
movsb
mov
cmp
jae
movb
cmpl
or
ja
fistpll
cld
inc
sub
imul
mov
cmpsb
cmp
sub
cld
js
jb
pop
cmpsb
push
mov
add
and
insl
or
rclb
and
and
push
mov
mov
mov
xchg
pop
pop
ss
dec
rcl
loopne
repz
push
cmpb
jle
cmp
push
mov
loopne
sarb
inc
aaa
or
mov
fidivl
adc
mov
sbb
pop
inc
sub
mov
pop
and
aam
pop
add
ret
ja
push
lods
or
dec
pop
add
ss
adcl
xor
stos
ret
cmp
sbb
int3
aad
xor
mov
jno
xchg
imul
add
push
test
mov
mov
jns
out
sar
out
and
sbb
jmp
aaa
ljmp
cs
scas
rcrl
xchg
jle
add
push
shlb
aas
aaa
xchg
cli
push
int3
mov
lea
je
pop
add
pop
add
test
ljmp
push
or
cmpsb
xlat
cld
mov
sbb
pop
push
bound
cld
push
mov
xor
xor
sub
pop
test
testb
push
pop
jno
and
das
movsl
outsl
inc
or
mov
adc
push
cmp
repz
mov
aas
push
mov
aad
js
fistpll
stos
icebp
inc
pusha
add
lea
hlt
ret
or
xlat
mov
imul
stc
cwtl
mov
push
movb
inc
sub
or
mov
pusha
add
push
data16
ja
or
jb
lahf
test
hlt
pop
push
pushl
lods
and
mov
adc
hlt
aam
adc
leave
insl
add
push
and
sbb
jmp
mov
inc
imul
rorb
adc
iret
jle
mov
div
icebp
jle
jp
dec
inc
cmp
mov
adc
cmp
jnp
cmc
add
mov
add
ss
jne
inc
sbb
sbb
mov
or
ss
ret
mov
xlat
xor
xchg
or
cltd
mov
xor
in
push
mov
std
mov
clc
dec
ss
imul
push
add
inc
call
out
stos
mov
jno
mov
push
sub
cmp
test
fwait
call
xor
mov
adc
lea
cmpsb
cs
push
loop
add
adc
mov
lock
fstpt
aas
mov
jmp
ret
push
mov
push
sub
add
mov
arpl
incb
push
mov
fildl
insl
mov
lock
fadds
pusha
sub
pop
add
mov
sti
je
leave
adc
jbe
inc
cmp
sahf
sub
mov
cmp
ficompl
adc
lcall
jne
add
in
rcll
aas
push
lods
mov
hlt
push
lea
cmp
inc
sbb
inc
scas
pop
or
js
jmp
and
and
jl
sub
pop
orb
call
int3
adc
lcall
stc
mov
cmp
jae
lea
jmp
cmpl
cmc
int
inc
inc
cmp
jbe
stos
in
push
shlb
sbb
or
inc
and
lcall
stos
jmp
sub
leave
xor
nop
pop
and
fsubrl
cmpl
push
jo
add
adc
andl
imul
dec
mov
and
xchg
call
call
fsubrl
call
pop
sbb
xchg
inc
addb
loope
clc
mov
mov
pop
cmp
push
add
rcll
int3
pusha
sub
mov
cmp
sbb
mov
xchg
sbb
in
and
xchg
in
cmp
sbb
mov
push
pusha
or
lret
sbb
cmp
add
pop
bound
add
sbb
sbb
test
repnz
inc
fsubl
push
push
xor
cmp
mov
roll
addl
dec
pop
and
int
lret
les
fwait
shrl
dec
test
push
popa
mov
out
inc
push
cli
ja
lahf
ja
mov
sti
push
pop
loopne
dec
popa
adc
call
cmc
enter
je
add
add
inc
loopne
mov
and
scas
sbb
lods
pop
loopne
inc
loope
pushl
push
xchg
pop
aaa
lret
add
sti
nop
frstpm(287
pop
adc
int3
imul
rorb
pop
ja
pop
push
mov
loopne
add
mov
push
lods
fwait
fwait
or
mov
cmp
lea
idivb
lea
mov
lods
movsb
sbbb
cld
lock
addl
mov
add
cmp
xor
xchg
cmpl
cmp
cmpb
inc
xor
je
pop
adcl
push
push
call
sbbb
xlat
movsl
pusha
bound
dec
xor
aad
adc
xchg
mov
aad
gs
ret
sub
mov
andl
adc
movsb
adc
clc
sar
lea
mov
aam
jns
pop
shlb
xchg
popa
mov
add
test
push
lcall
pop
xor
test
lock
lahf
add
lret
or
mov
push
or
jnp
cmp
xchg
cli
dec
jge
add
add
cmp
jbe
xchg
dec
inc
cltd
divb
dec
jns
dec
dec
clc
jne
mov
and
add
aaa
sub
lea
andb
pop
stos
jo
pop
pusha
es
scas
or
adc
dec
xor
sbb
xchg
sbb
hlt
hlt
jns
popa
iret
popa
jb
inc
pop
loopne
adc
pop
mov
or
push
cmp
jae
mov
test
movsb
push
inc
sbb
pop
lock
sub
pop
xchg
sub
dec
fistl
cld
loopne
sbb
jne
mov
cmp
add
fldenv
repz
add
or
or
lock
ret
inc
das
push
cld
clc
pushl
cmp
jne
pushf
fadds
lea
mov
and
sub
adc
orl
dec
cmp
or
xor
jg
pop
fcom
movl
mov
jmp
hlt
ljmp
sbb
es
subb
lds
sub
mov
int3
lea
mov
test
je
adc
fidivrl
sbb
inc
adc
outsl
nop
test
adc
fnstcw
es
loopne
in
or
lea
stc
mov
adc
jbe
push
loop
jmp
leave
and
mov
roll
fadd
mov
mov
pop
inc
out
xchg
jne
cmp
cmp
test
push
add
into
mov
cmp
stos
aad
xchg
lea
mov
add
lret
fnsave
sbb
aas
imul
fidivl
or
jmp
mov
lea
jl
mov
push
enter
mov
and
lahf
adc
dec
jnp
push
out
outsb
insl
out
jo
addl
sub
fisubrs
jmp
imul
jbe
in
loope
invd
lock
adc
mov
push
movzbl
push
xchg
jl
mov
adc
cld
fsubrl
push
xor
orb
mov
movsl
sub
adc
in
inc
push
jge
jl
xchg
jge
or
jle
lock
pop
shlb
mov
adc
xchg
lock
pop
mul
seto
fcoml
popa
movsl
push
aam
enter
cmp
adc
mov
mov
rorb
inc
push
adc
shl
cld
push
divb
dec
out
fidivrs
sbb
or
push
sub
push
insb
js
ljmp
add
mov
mov
int3
movsb
xlat
movsl
iret
mov
stos
jmp
jecxz
aam
jle
jge
mov
ret
and
pop
adcl
loop
cli
jbe
les
xorl
cmp
jbe
xchg
jge
sub
aaa
inc
pop
js
pop
stos
xchg
clc
loope
sbb
call
sbb
pop
or
jbe
int
loopne
ds
sbb
imul
imul
xor
adc
clc
addl
out
mov
lds
or
inc
test
mov
lock
cli
mov
js
pop
cmp
and
add
and
sbb
call
cmpb
push
mov
fbstp
addb
jl
jmp
add
es
and
sbb
mov
lds
jo
mov
adcl
dec
mov
inc
call
icebp
insl
sub
jmp
sub
lock
mov
jmp
lock
popf
fucomip
call
inc
xorb
faddl
mov
or
mov
jb
addr16
je
pop
inc
push
popa
sbb
cmp
or
movsl
andl
sbb
aam
jecxz
aas
cmc
clc
and
jle,pn
shrd
cmpb
scas
jb
aaa
push
mov
pop
rcrb
jmp
cld
xchg
sarb
add
test
pop
clc
je
sbb
jne
inc
js
jo
inc
stos
dec
stos
inc
push
jbe
dec
jmp
add
clc
movsl
les
iret
outsb
enter
adc
cmpsb
jle
jl
sub
sahf
mov
adc
cmp
add
mov
xor
add
cmp
adc
jecxz
jg
mov
add
ficoml
pop
scas
jne
addr16
test
ds
sbb
adc
rol
aad
mov
xchg
xor
add
daa
lcall
xlat
inc
add
mov
test
mov
std
sub
adc
movsl
jle
dec
shll
lea
adc
nop
mov
inc
dec
cmpsl
or
inc
xchg
call
and
sub
jmp
adc
jne
in
stos
cmp
jl
cmp
jmp
clc
shll
xor
jle
fcmovbe
and
je
mov
cmp
mov
stos
pop
pop
sbb
adc
call
fdivr
push
out
mov
clc
add
clc
jno
push
mov
add
pop
mov
mov
pusha
add
icebp
mov
div
jne
sbb
cmp
ret
sbb
cmp
or
push
test
sbb
xor
or
ja
inc
repnz
jae
fisttpl
mov
lcall
imul
jmp
out
push
aaa
and
inc
fimull
push
nop
test
jne
dec
jb
imul
loope
in
xchg
and
cltd
lock
mov
xchg
push
mov
gs
and
pop
leave
push
sbb
pop
hlt
ret
adc
push
and
rorl
lods
jno
fisubrs
mov
dec
mov
arpl
push
int3
in
fbld
adc
xor
test
imull
in
push
test
flds
and
fwait
push
add
lds
rcll
testb
mov
cmp
jb
sbb
pop
jnp
xchg
mov
roll
int
sbb
add
fimuls
lock
mov
xchg
inc
jmp
cmp
add
add
andl
test
sub
rolb
ds
lods
add
xor
adc
push
lods
das
js
xor
lea
adc
push
lea
push
les
add
cmp
mov
mov
testl
and
sbb
xchg
imul
cmp
mov
xchg
rclb
addr16
out
jecxz
mov
dec
int3
xor
cmp
jae
sub
loopne
adc
pop
jmp
sub
cs
adc
ljmp
dec
mov
cmc
xchg
shrb
inc
in
xor
mov
mov
add
shll
xor
add
dec
dec
push
out
std
pop
xor
pop
xor
adc
pop
mov
or
sbb
insb
sti
push
jmp
ja
mov
xchg
xor
mov
push
add
xchg
je
loopne
jle
sub
in
sar
cltd
repnz
int3
insb
fistpll
pop
int3
mov
add
add
cld
jb,pn
mov
adc
cld
pop
insl
std
push
test
scas
sub
scas
adc
cmp
cltd
loopne
pop
add
add
xor
and
mov
dec
test
xor
lea
push
jmp
xor
and
jo
mov
shrb
mov
mov
sbb
inc
cmpl
andl
dec
mov
pop
imul
jmp
rorl
add
clc
xchg
or
mov
xchg
add
push
mov
cmp
jmp
cld
cwtl
jae
rorb
dec
adcb
xchg
sub
or
ss
xchg
and
movsw
lods
push
pop
pushl
jmp
adc
sub
jnp
jo
lret
scas
jle
out
inc
jb
push
loope
decl
hlt
fcoml
mov
push
dec
push
stos
inc
rol
testb
push
mov
mov
mov
fstl
dec
bound
cmp
jne
cmpb
ret
sbb
icebp
mov
jo
push
sub
sbb
and
xchg
stos
sub
ja
push
and
andb
xchg
or
movsb
cmpl
pushf
adc
cmpsl
cltd
jo
inc
sbb
mov
dec
cmp
roll
pop
in
inc
cmp
push
cmp
jae
inc
jmp
push
or
sub
mov
and
ret
pop
movsb
pusha
test
inc
xchg
add
pop
dec
fcom
sub
repnz
sahf
sbb
outsb
xchg
add
xchg
inc
into
or
int
in
clc
and
mov
push
inc
sti
adc
cmp
push
call
stos
xor
iret
test
in
pop
cmp
mov
cmp
inc
xchg
pusha
push
pop
loopne
jl
data16
xlat
jmp
xchg
test
sbb
push
push
pop
negb
addb
pop
notl
sbb
mov
pop
pop
enter
adc
or
loop
clc
pop
mov
out
sbb
xchg
push
add
jo
lcall
mov
movsb
cmp
pushf
or
cmp
adc
es
sbb
int3
push
push
sub
mov
shl
sbb
adc
ja
cmpb
insl
mov
or
or
xor
sbb
add
and
pop
fcmovbe
sbb
or
int
inc
sbb
cmpb
fadds
cli
jno
data16
hlt
pop
and
cmp
sub
push
inc
shl
pop
or
add
es
sahf
subb
test
and
or
adc
jmp
mov
adc
shlb
dec
imul
sbb
adc
ret
xchg
inc
adc
inc
pop
movsb
sbb
or
push
mov
inc
icebp
cmpsl
aaa
into
add
movsl
cmp
or
cld
xorl
xchg
iret
push
xchg
out
adc
pop
push
addr16
cmpsb
imul
inc
add
jne
scas
push
mov
js
add
test
xchg
les
add
outsl
das
xor
push
js
push
je
push
adc
in
sub
lahf
cmp
jbe
add
sub
pushf
dec
add
aad
inc
insl
and
aad
les
xor
gs
inc
rcrb
or
mov
or
cwtl
cmc
adc
sbb
sbb
inc
cld
dec
fldl
movsb
jle
push
mov
pop
mov
into
movsl
fnstsw
les
add
mov
jne
or
push
mov
insb
popa
inc
rcrb
dec
js
push
outsl
mov
sbb
loop
in
insl
scas
add
xchg
inc
aam
in
push
lock
xchg
add
or
pop
sar
iret
inc
lock
pop
xchg
dec
inc
and
and
or
dec
push
or
xorps
aaa
adc
xor
pusha
ljmp
mov
lock
xor
fdivl
adcb
and
cli
stc
shrl
or
jge
xor
and
jg
push
jg
or
push
mov
adc
push
mov
and
hlt
jne
and
adc
mov
and
jmp
cmpsb
xor
mov
xorb
push
stc
xchg
int3
add
push
js
jle
adc
packsswb
je
out
mov
sub
shlb
inc
aam
in
adc
push
mov
sarb
push
jbe
jle
or
pop
sbb
ret
cmp
movsb
stos
xchg
cld
aam
mov
sbb
or
jecxz
fldenv
cmpl
dec
pop
dec
repnz
mov
pushf
fcoml
popl
arpl
mov
cmp
and
into
movsb
add
mov
jbe
cltd
pop
sbb
mov
pusha
and
fsubl
and
gs
jo
stos
into
call
pop
and
add
in
sbb
outsb
sub
lock
push
out
and
add
and
test
inc
cli
and
push
push
scas
push
cmp
test
xor
mov
pop
inc
push
push
nop
fst
and
sarb
add
jecxz
xor
pop
xchg
add
fwait
jge
sub
bound
mov
scas
in
or
call
sbb
dec
xchg
inc
xor
popf
mov
loop
push
stos
push
inc
push
aam
jmp
clc
stc
jp
cli
test
pushf
xor
push
add
cli
mov
addr16
push
push
push
stc
xor
mov
add
mov
ret
mov
je
jle
fadds
mov
mov
pop
in
mov
insb
cmpsb
fldl
pop
xchg
mov
push
dec
push
bound
or
pusha
inc
jbe
push
push
int
and
mov
fsubr
pop
push
js
dec
ret
dec
xchg
cmp
mov
rorb
arpl
cmpsb
dec
add
sbb
dec
and
call
out
pusha
and
lahf
push
iret
dec
push
inc
adc
pop
pop
ret
push
mov
adc
addr16
add
jmp
mov
hlt
imul
aas
jl
or
push
sbb
test
mov
pop
or
data16
or
bound
test
add
adcb
push
sahf
cs
cld
clc
or
js
xor
int
rcr
aam
mov
pop
call
xchg
xlat
gs
nop
and
and
lock
jp
jge
jp
ret
scas
rcl
mov
xchg
mov
mov
das
adc
aaa
cld
sub
imul
xor
int3
rolb
mov
mov
in
jge
inc
loope
add
push
pop
or
fs
or
fs
xchg
and
out
push
dec
fidivl
and
into
or
or
add
stos
pop
cmp
dec
jbe
data16
and
and
stos
andb
nop
rorl
rol
xchg
je
cmpl
nop
dec
add
sbb
push
cmp
hlt
lret
std
fwait
xchg
rorb
add
push
insb
dec
adc
subb
and
or
add
out
test
xor
adc
cmp
xor
je
stc
lock
ja
mov
adc
lret
scas
add
mov
xor
adc
cwtl
call
lods
mov
and
ja
jp
clc
lock
mov
imul
xchg
ret
ds
push
push
add
arpl
xchg
cwtl
dec
ret
leave
sbb
loop
cmc
jmp
dec
movsb
dec
push
add
or
js
sbb
add
loopne
or
mov
xchg
enter
popa
xchg
ja
loope
fdivrs
push
std
pop
push
test
xchg
pop
mov
mov
push
andl
mov
mov
push
lods
mov
push
mov
or
in
jge
sbb
sub
pop
cmp
adc
push
sub
inc
sub
jbe
jns
pop
cwtl
roll
loopne
dec
add
or
add
cmp
daa
in
jp
hlt
mov
xor
xor
dec
sub
cld
adc
repnz
dec
xchg
hlt
push
push
fstpt
cmp
push
inc
mov
jbe
stos
mov
imul
mov
mov
leave
adc
mov
jbe
add
sub
cmp
stos
rcrb
xor
fdiv
xor
call
lea
and
pop
sbb
sub
add
mov
add
clc
jecxz
pop
ret
or
fldcw
pop
ret
push
frstor
outsb
dec
cmp
jle
sub
fs
fwait
test
sub
dec
push
jl
xor
stos
mov
out
lods
imul
mov
call
xchg
sbb
add
inc
js
lods
cmp
sub
mov
add
sbbb
test
popa
jge
xchg
rcl
test
or
leave
test
das
es
cmp
jge
mov
sbb
pop
call
cmp
jl
cmp
mov
inc
test
jl
aaa
xlat
ljmp
sbb
add
or
daa
add
les
inc
mov
jnp
subb
cs
test
jne
xor
cs
jnp
pop
jle
adc
cmp
adc
or
jno
adc
mov
inc
inc
push
xchg
test
fimuls
mov
movsb
inc
add
or
es
cmp
xchg
cmpsb
imul
hlt
in
or
jo
mov
adc
cmp
mov
xchg
mov
add
sbbl
mov
cmpl
lods
mov
mov
inc
jne
fadd
sbb
dec
fldenv
enter
pop
jmp
push
pop
mov
pop
fstl
test
cmp
mov
lds
loop
mov
dec
rorb
faddl
sub
iret
sbb
sbb
lock
mov
into
leave
add
add
xor
mov
fsub
sbb
test
mov
push
loope
pushf
rclb
xchg
or
pop
push
in
mov
js
add
stos
andb
outsb
ret
jge
into
je
nop
shll
jnp
out
mov
mov
push
and
mov
pop
nop
in
jne
push
push
push
pop
stos
add
dec
sbb
test
mov
cmp
fimuls
das
aad
and
and
lds
loope
popa
rolb
mov
pop
stos
cmp
push
mov
cmp
orl
push
sbb
or
enter
fistps
push
cmp
jb
mov
pushf
add
rcrb
and
leave
lods
mov
push
mov
mov
aam
cmp
dec
inc
add
sub
dec
je
add
push
mov
pop
int
push
clc
xchg
hlt
cmp
movsl
pop
add
rorl
and
or
push
mov
jg
das
pushf
cmp
je
dec
outsb
add
sbb
aaa
jmp
add
inc
add
xlat
aad
add
jmp
jg
cs
mov
pop
jno
jge
pop
stos
mov
ret
data16
imulb
add
aam
es
sub
jnp
push
icebp
adc
mov
sahf
test
mov
add
sub
sbb
lcall
sbb
int3
fcoms
push
into
std
test
repnz
mov
add
adcb
jbe
arpl
add
lahf
jno
jae
test
pop
push
repz
jae
das
xor
jo
add
sub
cmc
mov
cwtl
mov
cmp
xchg
add
sub
pop
sahf
loop
arpl
jo
push
aaa
or
and
inc
and
mov
push
or
sub
push
or
xchg
pop
mov
adc
jb
testb
adc
jae
js
or
add
pop
lock
push
push
jbe
mov
mov
ret
xchg
or
add
jns
fdiv
cmp
mov
aad
mov
or
pop
inc
push
test
enterw
adc
mov
add
push
sub
cmp
xor
cmp
mov
jecxz
push
out
arpl
enter
movsl
xchg
push
push
jnp
cld
icebp
inc
xor
movsb
mov
je
xchg
mov
jl
xchg
jnp
test
xchg
sbb
sbb
sub
cmp
mov
pop
sbb
ja
sbb
cltd
dec
movsb
jl
add
jno
and
mov
jns
add
mov
jecxz
aas
adc
scas
xlat
sbb
js
push
ret
mov
adc
dec
mov
es
adc
scas
adc
lret
pop
mov
jnp
popa
and
stc
pop
jb
loopne
push
popl
or
cmpsl
es
je
jb
push
cmp
cmp
push
insb
mov
fdivl
mov
lcall
jo
and
fucomi
fdivl
fisubrs
xor
leavew
fstps
in
leave
sbbl
xor
popf
mov
fcomi
bound
add
and
mov
inc
mov
push
fadds
push
or
rcrl
adc
cmp
lret
movsb
add
add
xchg
push
sub
xor
test
or
or
inc
or
lret
inc
or
daa
xchg
punpckhbw
inc
insb
sti
test
mov
test
movsb
adc
arpl
jb
and
aas
or
mov
mov
or
or
fsubrs
dec
aam
push
mov
inc
pop
loopne
inc
pusha
add
pop
mov
and
xor
xchg
fs
and
js
or
ljmp
lcall
xchg
inc
inc
jg
rcrb
xchg
add
nop
int3
enter
inc
shrb
dec
cmp
adc
adc
push
xor
dec
push
jb
fs
inc
inc
sbb
enter
xor
enter
sub
enter
and
adc
xchg
adc
push
lods
or
xor
xlat
mov
mov
popl
add
cld
incb
push
sbb
xchg
jl
add
cmp
xchg
ret
push
out
in
jo
nop
push
test
sub
cld
es
iret
sub
call
or
pop
imul
pusha
movsl
out
add
add
push
mov
inc
push
lods
add
jl
adcb
or
and
pop
sub
or
add
enter
jp
das
jl
out
xor
xchg
nop
loopne
dec
and
inc
cmc
add
arpl
jp
push
or
mov
mov
shl
cmp
xchg
addb
add
mov
push
xor
dec
scas
pop
sbb
add
dec
or
inc
adc
pushl
push
popa
mov
and
mov
add
pop
sbb
push
or
mov
sbb
es
out
call
dec
and
inc
or
jmp
lea
imul
inc
and
jo
jno
loope
mov
cmp
add
popf
mov
shll
add
pop
adcb
dec
push
cltd
nop
or
pop
add
xchg
inc
push
in
pop
or
inc
sbb
lods
mov
inc
fldl2t
push
xchg
or
xchg
cwtl
push
xchg
xchg
inc
pusha
and
jmp
sub
mov
shrl
add
pusha
adc
sbb
add
pop
xor
and
cwtl
push
pusha
cmpsl
inc
fwait
and
jmp
test
sbb
mov
test
scas
test
cltd
dec
out
push
shlb
push
test
or
sbb
push
fadds
push
inc
mov
ss
sbb
loop
add
add
pop
flds
add
adc
lock
mov
fwait
mov
mov
and
pop
icebp
ret
inc
adc
sub
mov
adc
push
xchg
aad
xor
jo
fcoml
xchg
add
push
and
int3
sub
inc
mov
pop
sbb
subl
mov
pusha
dec
aam
mov
push
add
cwtl
cmp
js
sbb
or
push
int
mov
cmp
daa
orl
lret
ret
das
xor
xchg
sub
stos
insb
leave
sub
sub
xchg
stc
test
inc
adc
stc
testl
loop
xchg
fnsave
dec
dec
inc
mov
daa
lods
test
lea
jne
pop
ljmp
lahf
andl
dec
push
sub
and
loope
mov
mov
or
add
filds
mov
jne
cmp
shl
call
add
jmp
mov
orl
dec
mov
sbb
pop
in
push
or
out
mov
push
add
ds
ret
dec
adc
ror
sbb
push
add
aad
movntq
or
dec
fiaddl
mov
sbb
jae
add
jmp
fisttpl
pop
pop
sbb
and
jb
mov
nop
outsl
mov
and
xor
or
push
insb
sbb
or
fs
cli
mov
fwait
jp
pop
lea
inc
or
and
xor
out
pusha
loope
mov
or
push
mov
and
pop
xor
enter
test
pandn
and
push
pop
shrb
cwtl
jecxz
add
mov
clc
or
pop
shr
sub
or
mov
repz
add
xchg
out
test
fidivs
gs
xor
lea
shlb
or
sbb
psubsw
xor
mov
and
mov
mov
in
pusha
sub
add
das
push
jle
push
xor
xor
push
mov
and
push
sbb
addl
push
movsb
movsb
dec
rclb
rolb
lock
pop
push
dec
imul
outsb
add
add
mov
push
pop
sbb
pop
pop
xchg
mov
push
stos
xor
mov
and
mov
push
xor
dec
mov
rcrl
sbb
mov
leave
jp
idivb
mov
cltd
mov
testl
cmpb
sub
packssdw
push
xor
orb
jne
push
xchg
or
sbb
or
in
push
add
test
sub
paddq
int3
pop
mov
adc
ljmp
push
sarb
and
sub
mov
mov
adc
push
fisubs
and
xlat
xor
add
and
ret
push
loopne
add
mov
pop
mov
sti
mov
es
mov
popf
lea
mov
ds
push
pop
icebp
stos
and
push
cmovg
jp
sub
lods
xor
add
push
xchg
add
cwtl
adc
pop
or
sbb
fmuls
and
add
xor
shlb
outsb
pusha
loop
inc
push
mov
sub
es
mov
enter
cmp
js
fmull
and
xor
lods
push
jae
mov
mov
shll
dec
ret
test
dec
mov
xor
in
leave
jg
rorb
lods
and
add
pop
movl
xlat
sbb
jle
add
mov
ss
hlt
dec
dec
sub
scas
andl
inc
add
andb
scas
add
cmp
push
ds
stos
and
inc
sub
int3
mov
clc
nop
out
fidivrs
add
sub
out
mov
push
lods
inc
icebp
pop
sub
push
das
popl
ss
xor
add
mov
stc
lock
or
cmpsb
xor
inc
mov
les
lock
lahf
aaa
mov
sbb
add
or
testb
pop
or
repz
scas
xor
inc
mov
sbb
or
orl
pop
and
sbb
xor
add
jmp
std
add
adc
pop
cmp
xlat
lods
push
push
xchg
lock
adc
loope
and
mov
cmpsl
repnz
orl
mov
dec
mov
sub
enter
sbb
test
sbb
pop
push
insb
xor
and
hlt
and
mov
cmp
sbb
enter
sbb
js
mov
loopnew
jp
or
pop
shl
movsl
lock
shlb
push
mov
mov
jno
lods
add
jle
loop
pop
xorb
je
sub
mov
dec
or
jne
rclb
out
adc
pop
cwtl
push
push
les
add
sub
int3
test
leave
out
aad
shrb
push
push
or
pop
adc
mov
pop
enter
fstps
cs
jl
push
insb
xchg
pop
add
in
call
adc
mov
sbb
cli
mov
sahf
es
repz
mov
stc
cld
sub
xor
and
nop
push
stos
in
test
mov
mov
cwtl
pusha
xor
cld
pop
jnp
add
mov
push
lods
push
xor
jbe
jmp
push
adc
push
mov
inc
adc
push
ljmp
add
xor
js
mov
jg
xlat
cmp
push
push
cwtl
mov
mov
xchg
sub
test
sbb
clc
push
mov
pop
mov
dec
mov
sbb
cmp
pop
cmpl
mov
jns
xchg
divb
rorl
xlat
fisubs
in
pusha
dec
adc
inc
add
dec
adc
mov
inc
mov
into
pop
cmp
or
mov
dec
into
xchg
popf
sub
int3
sub
cmp
jle
push
movsb
loopne
push
cmpsl
cmp
sarb
push
adc
jo
rolb
vpaddsw
inc
cmp
mov
ds
sbb
cmp
add
scas
cmp
mov
testb
cmp
cmp
sbb
push
xor
and
or
pop
mov
mov
xchg
out
loope
push
inc
or
adc
test
add
push
push
push
lods
cmp
dec
sbb
mov
mov
add
xchg
aam
mov
aas
cmp
mov
mov
jne
push
jg
inc
adc
incb
mov
mov
ret
add
adc
push
xor
ret
decl
xor
dec
push
je
dec
jne
roll
imul
sbb
repnz
add
and
in
and
scas
lock
icebp
push
fcmovnu
adcl
cmp
pop
or
add
bound
pushf
xor
mov
inc
adc
xor
movb
or
dec
mov
sti
xorl
aaa
dec
jns
jp
pop
insl
xor
aaa
mov
popa
mov
stos
je
aas
jg
add
push
sub
or
jge
adc
dec
test
sahf
push
sbb
insb
sub
mov
jne
jmp
in
add
xor
push
lcall
and
sub
mov
cmp
jb
inc
mov
dec
cmp
jbe
add
adc
mov
lcall
adc
and
xor
stc
adc
or
push
mov
rcrb
sub
jmp
push
loope
and
and
bound
hlt
and
arpl
mov
add
push
sub
pop
into
pop
sbb
repz
adc
or
or
lock
mov
addl
sti
je
mov
add
or
and
or
iret
lds
dec
stos
and
pop
and
dec
pop
js,pt
ficompl
or
adc
and
outsl
pop
pushf
rclb
push
cmc
or
mov
push
inc
shll
cmp
dec
movsl
xor
pop
add
pusha
push
gs
push
jns
cmp
sub
js
leave
mov
dec
ss
test
xchg
or
gs
mov
and
outsl
insl
cmp
sbb
push
sub
inc
movb
cltd
sub
mov
mov
xchg
push
inc
hlt
and
cltd
nop
xchg
lret
fisttpll
xchg
fucomp
call
iret
xlat
lea
mov
jmp
cmp
jae
add
loop
add
outsb
outsl
ja
and
inc
jecxz
mov
lret
lret
andl
dec
jns
fisttpll
pusha
ret
sub
sti
cwtl
popa
leave
mov
sbbb
xor
in
je
fs
mov
enter
xor
xchg
imulb
cmp
mov
sbb
arpl
or
pop
and
adc
movups
adc
push
dec
ret
popa
arpl
push
stos
xor
and
mov
add
dec
arpl
pusha
and
lods
call
ret
loop
xchg
or
mov
mov
sbb
hlt
stos
fwait
mov
add
rolb
ds
mov
fildl
mov
jbe
dec
cld
sarl
pushf
xor
jge
jne
and
lcall
adc
fcoml
dec
inc
sbb
shll
psubusw
push
mov
cwtl
dec
add
inc
ja
movsl
pop
imul
add
ret
or
or
cmp
loopne
shlb
xor
add
push
add
sbb
add
popf
pop
faddl
leave
or
jne
or
push
mov
jbe
push
roll
movsl
mov
and
inc
pop
cmp
inc
stc
lock
fdiv
xchg
adc
mov
push
jmp
push
cwtl
add
rorb
jns
mov
int3
pop
adc
inc
inc
hlt
mov
xchg
cmpb
xchg
mov
add
imul
lea
cmpsb
push
or
pop
stc
icebp
and
push
jmp
aas
adc
add
jmp
add
insl
test
mov
or
mov
je
jae
lea
test
push
xchg
pop
xchg
and
cmp
or
sbb
movsb
lahf
sub
mov
push
decl
xchg
xchg
enter
ljmp
enter
dec
xchg
push
sbb
push
je
and
adc
mov
jl
add
loopne
and
add
mov
xorb
pop
adc
bnd
cmpl
cs
push
pop
bound
or
adc
add
push
lods
test
ror
outsb
test
bound
sub
sbb
sbb
adc
mov
aas
sbb
push
icebp
imul
mov
adc
jae
inc
test
cld
inc
inc
pop
cmp
icebp
push
adc
sbb
ret
icebp
mov
push
sbb
aaa
lcall
mov
add
pusha
push
cs
sub
std
pushl
daa
pop
shl
in
in
xor
cwtl
sbb
adc
pop
sub
sub
cmp
xchg
pop
cmp
add
dec
movsb
fadds
mov
push
mov
pop
jb
inc
cmpsb
inc
fadds
addb
imul
pop
xchg
orb
push
mov
sbb
sbb
sbb
xor
jne
add
out
jb
mov
sbb
jbe
push
arpl
or
popa
adc
cmpl
sbb
adc
scas
adcl
fwait
popa
inc
in
movsl
clc
push
push
incb
sbb
jecxz
dec
push
cltd
sbb
xlat
fsubrs
cmp
and
inc
mov
jb
xchg
lods
push
mov
movsl
and
loope
icebp
fdivrp
lea
cmpsl
mov
mov
rcrb
sub
cmp
jmp
dec
xorb
push
or
push
add
dec
xchg
pop
test
sub
scas
pop
push
mov
cmp
jae
inc
stc
jnp
sbb
add
insl
or
dec
icebp
pop
push
pop
and
sbb
addr16
add
pop
lea
pop
stc
xchg
mov
popa
mov
rorb
or
xor
cmp
nop
pop
inc
sbb
or
push
cmpl
adc
mov
mov
add
or
cli
cs
push
insl
jecxz
pop
out
adc
xchg
iret
inc
fisttpll
sub
push
mov
push
or
daa
cmp
jae
fcompl
mov
add
jg
sbb
add
and
and
addr16
sbbl
sub
inc
jmp
mov
ficoml
outsl
addr16
fs
and
or
cmp
rolb
or
mov
or
dec
and
pop
inc
add
fistps
aaa
inc
mov
lcall
pushf
lret
scas
or
mov
daa
and
push
inc
sbb
sete
arpl
pushf
pop
pop
or
and
popa
dec
or
inc
ret
xor
inc
pop
subb
dec
repnz
and
sbb
xchg
in
and
aaa
mov
or
push
and
outsl
dec
sbb
popa
cmp
dec
in
lret
or
add
xchg
adcb
lret
or
pop
and
dec
pop
push
dec
enter
xchg
sbb
inc
or
mov
imul
adc
sbb
xchg
jne
sbb
fcoms
push
cmp
mov
sbb
sbb
pop
inc
sub
push
inc
mov
sbb
arpl
sub
dec
inc
mov
pop
push
jne
inc
dec
cmp
and
add
frstor
iret
xchg
pop
rcrb
mov
and
cmp
and
and
pusha
int
mov
repz
adc
data16
jne
mov
mov
sub
sbb
loopne
jno
add
sub
sbb
mov
loope
lods
repz
shll
ja
jmp
int3
pop
mov
xchg
jp
push
inc
add
push
fstpt
ja
aam
jl
dec
arpl
add
dec
js
jno
das
jmp
pushl
fmuls
test
lds
mov
fwait
xchg
inc
pop
or
or
push
sbb
pop
sub
xor
add
add
and
xchg
pop
xor
push
daa
ficomps
xchg
or
lea
pop
test
movsb
mov
adc
push
inc
mov
xor
dec
rolb
cmp
add
and
out
or
and
xor
in
jae
je
mov
pop
js
lret
stos
stc
hlt
xchg
push
shll
push
adc
push
xlat
sub
sbb
scas
add
mov
or
imul
pop
add
dec
mov
xchg
inc
mov
and
push
sbb
add
inc
push
rcll
or
pushf
addb
stc
or
or
dec
dec
sub
push
push
nop
or
and
and
sahf
dec
in
mov
pop
xor
enter
iret
pop
xor
push
shrl
je
sahf
xchg
rclb
sub
imul
xchg
cmp
insl
loopne
call
and
pusha
inc
lock
pusha
jmp
nop
xor
enter
cwtl
dec
in
nop
out
mov
push
cwtl
insl
ror
iret
enter
mov
mov
into
mov
insl
mov
xchg
add
jns
out
pusha
jne
sbb
mov
scas
mov
dec
or
jo
lret
and
jge
outsb
pushl
or
lods
pop
adc
and
cwtl
adc
subb
mov
push
dec
adc
pop
sbbb
and
orb
mov
inc
je
lods
jl
cltd
notb
adc
pusha
pop
pop
mov
js
addb
inc
pop
jb
sbb
cmp
test
scas
inc
or
adc
mov
sub
jns
add
mov
push
sbb
lahf
cmp
and
das
push
mov
bound
sbb
lods
sbb
pusha
xor
dec
pop
xor
data16
outsl
pop
jmp
add
stos
mov
mov
enter
lea
push
inc
cmp
orb
andl
mov
and
jbe
inc
add
sahf
ljmp
add
popa
and
mov
sbb
cmp
stc
inc
xchg
or
es
xor
jne
add
xchg
repnz
push
mov
or
andl
push
stos
les
inc
or
mov
lea
rcll
and
push
add
push
xchg
cmp
pusha
and
or
test
sti
sbb
lods
bound
out
dec
pop
cmp
sbb
inc
lret
jns
mov
or
sub
xor
xchg
shll
sub
push
or
pop
sub
push
pusha
pop
fidivl
sub
sub
sbb
xor
mov
add
sub
aas
inc
lahf
lcall
adc
lods
cmpsb
dec
mov
pop
and
and
sub
ret
xchg
mov
sub
mov
pop
xor
mov
hlt
stc
cs
mov
daa
fisttpl
pop
sbb
sub
sub
lea
in
sbb
fwait
ja
out
stc
inc
sub
jbe
sub
or
loopne
push
dec
lock
cmpsb
pop
jno
in
push
mov
xor
push
in
xor
sbb
cwtl
lret
and
leave
push
and
mov
adc
dec
shld
adc
sti
sbb
sbb
pop
mov
adc
push
sub
bnd
pop
shlb
xor
jmp
enter
ss
daa
or
sti
popf
sbb
pusha
pop
pop
xor
and
fadds
sbb
fisttps
sarl
mov
xor
fwait
cmp
stos
cmp
xor
repz
or
daa
xchg
add
push
in
push
cmc
mov
xor
nop
inc
dec
aas
xor
inc
stos
test
sub
sbb
fmuls
add
lods
inc
lock
cmp
aam
int3
popa
inc
push
scas
popa
dec
ja
sbb
scas
or
fsubs
stc
fdivl
inc
fdivrs
adc
cmc
fwait
lock
pop
jbe
fldenv
mov
mov
mov
mov
pop
lods
andl
add
test
dec
and
jmp
stc
sub
shll
sbb
roll
lods
push
mov
mov
inc
loope
cmp
nop
push
cmp
cmp
push
dec
arpl
xor
and
fstl
add
mov
icebp
or
inc
jne
inc
mov
mov
sub
xor
in
pusha
movsl
jae
mov
jg
jns
sub
and
push
inc
xchg
roll
xchg
sbb
pop
sub
insb
popa
dec
lcall
dec
arpl
add
and
xchg
mov
and
nop
add
or
push
mov
or
inc
push
test
sub
add
gs
push
adc
inc
mov
xor
rorl
jb
pop
xlat
pushl
xchg
rcrl
cmc
push
test
xlat
mov
mov
aam
inc
call
roll
or
out
outsl
mov
adc
sbb
xadd
jae
aaa
add
cmp
push
push
inc
cs
pop
push
add
push
pushl
aaa
pushl
push
fs
stc
adc
test
leave
dec
scas
cs
cmp
jp
pop
pop
aam
xchg
push
push
sbb
jne
pop
xor
in
add
aam
inc
addl
cmpsl
je
adc
cmp
xor
ljmp
xchg
pop
out
out
and
sbb
pop
adc
enter
addr16
daa
add
pop
or
sub
sbb
or
or
xchg
or
push
inc
shl
rol
dec
or
movsb
mov
gs
out
add
dec
pop
add
push
cmpsl
push
mov
ud0
lahf
mov
push
pop
pushl
adc
mov
xor
loopne
ljmp
adc
xchg
mov
pop
adc
add
and
add
neg
xchg
xchg
int
je
adc
push
cltd
loope
movsl
adc
adc
sbb
xor
adc
xchg
mov
test
arpl
sub
je
out
rolb
rorl
lods
sbb
add
xchg
add
roll
repnz
loopne
sbb
lods
fwait
rolb
sbb
add
fisubrs
sbb
aam
cmp
sub
sbb
xchg
iret
pop
add
cmp
sub
mov
xchg
xchg
add
add
pop
rcrb
lods
xchg
shl
jno
sub
nop
add
xchg
fsubr
xorl
adc
test
cwtl
pop
std
imul
sub
sbb
push
sbb
gs
cmp
inc
pop
or
adc
xor
out
dec
mov
das
mov
xor
inc
inc
mov
dec
adc
dec
aam
outsl
aas
and
cmpsl
lcall
stos
push
pop
inc
sti
mov
outsl
pop
jb
inc
inc
int3
movsb
jb
pop
add
jecxz
add
sbb
xor
popa
sub
scas
pop
and
inc
and
or
repz
xor
push
inc
jo,pn
add
xor
movsb
pop
sub
ss
pop
sub
sbb
les
mov
cmp
std
cmp
fs
push
popf
pop
call
push
gs
push
cmp
leave
pop
add
fdivrs
cmp
jmp
in
or
loopne
and
fmull
mov
dec
or
and
sbb
pop
jb
sarb
xor
xor
sbb
push
xor
dec
scas
mov
sarb
mov
and
mov
lea
sbb
add
inc
dec
push
push
test
jbe
adc
gs
fnstcw
push
cs
dec
push
xor
or
dec
push
fs
les
arpl
pop
test
fcmovbe
ficompl
mov
movsl
push
cmp
cmp
lret
and
test
xchg
xchg
jl
inc
rorl
xchg
movsb
push
and
fisttpl
and
pop
cmpsb
push
mov
outsb
loope
xchg
inc
scas
xlat
sbb
add
jmp
pop
mov
mov
andb
shll
and
cmp
int3
rorl
into
dec
mov
mov
sbb
leave
cmp
mov
xchg
pop
push
inc
enter
movsl
and
addr16
inc
cs
mov
push
adc
adc
mov
mov
xchg
dec
bound
or
sbb
leave
in
arpl
dec
mov
inc
xor
mov
aad
rolb
add
xor
rcrl
cmp
loop
roll
or
xor
cmpsl
fwait
popa
dec
jp
jae
ja
cmp
ljmp
loopne
daa
adc
stos
pop
xorl
add
or
test
leave
dec
mov
pop
shll
adc
sarl
or
mov
mov
mov
inc
cmpsb
sbb
push
push
dec
and
scas
test
mov
je
jns
jle
or
movsl
mov
ljmp
jg
int
xor
push
sub
push
xchg
jb
adc
mov
push
dec
sarl
lds
rorl
and
hlt
mov
adc
cld
shll
jb
outsl
icebp
rolb
jae
nop
inc
dec
jmp
test
sbb
xchg
stos
dec
loope
std
icebp
push
popa
mov
lea
stc
aad
aaa
sbb
in
test
push
test
shll
lcall
int3
lahf
rcrb
xor
shrb
test
leave
orl
xor
push
adc
cwtl
test
or
push
xchg
xchg
in
jns
nop
fs
cmp
jg
adc
jle
dec
sbb
xchg
aaa
mov
dec
adc
mov
in
call
sub
lock
mov
test
repnz
jl
cmp
and
pop
add
rorb
dec
jl
movsb
lock
fsubl
js
int
and
sbb
out
scas
xor
xchg
call
pop
pop
lea
or
pop
pop
mov
fcoms
ret
cmpl
insb
movsb
test
popa
mov
add
outsl
xor
and
cwtl
movsl
test
outsb
loope
inc
pop
sbb
mov
and
push
jmp
adc
add
mov
incl
push
cld
or
lods
jp
jl
mov
cmp
cmp
imul
and
sub
add
iret
cmp
stos
stos
into
jo
lods
jns
xchg
jo
mov
ds
add
lods
xchg
sbb
and
cmp
mov
add
je
add
mov
sub
add
inc
mov
js
xor
insb
jg
dec
das
mov
mov
or
arpl
xor
xchg
xor
into
and
rcl
sbb
loope
pop
dec
add
jae
cli
jno
repnz
mov
scas
ds
iret
cmp
jne
jns
xor
in
xchg
or
out
mov
add
nop
dec
jecxz,pn
rclb
or
sub
jmp
sarb
dec
or
rorb
inc
push
jmp
push
pusha
xor
or
sbb
sub
add
jae
lods
and
push
xor
aaa
or
push
adc
imul
ljmp
jmp
adc
movsb
lcall
xor
add
in
xor
and
lock
movl
cltd
mov
add
dec
cmp
sbb
push
pushf
data16
cmp
dec
inc
in
mov
fimull
enter
jae
sbb
or
fdivl
pusha
add
jo
pop
and
stos
sub
fstps
mov
imul
and
pusha
into
push
mov
inc
mov
mov
push
push
stos
es
push
jl
cmpsl
mov
out
dec
or
test
fs
cmp
mov
lret
jb
fdivr
in
or
inc
insb
inc
cmp
push
pop
cmp
xor
jo
pop
inc
push
mov
mov
arpl
pop
nop
push
inc
xor
inc
push
leave
test
adc
push
scas
std
add
lcall
sub
mov
sbb
lea
mov
lea
add
mov
xchg
lcall
rclb
lcall
pop
add
and
add
sarl
mov
movsl
cwtl
pop
lret
jo
lods
push
sbb
xchg
sbb
and
xchg
mov
mov
shrb
ljmp
or
and
xchg
inc
add
inc
inc
push
and
push
mov
adc
les
pop
inc
cmovnp
sti
or
pop
sbb
mov
idivl
dec
xorl
dec
push
mov
adc
ret
push
sub
mov
pop
add
movsl
loop
insb
aaa
mov
stc
or
sbb
add
jo
cs
dec
dec
scas
adc
add
add
sbb
or
shlb
jp
in
sahf
loopne
test
xor
inc
lods
and
int
sbb
and
add
mov
inc
mov
fistl
bound
or
and
push
or
add
xlat
xchg
cmpl
mov
and
sbb
negl
or
gs
decl
scas
fdivrl
je
cmp
je
cmp
je
cmp
je
push
inc
sahf
push
xor
cmp
stos
in
aas
xor
mov
cmp
jne
push
fiadds
jp
pop
mov
jnp
lock
inc
push
mov
rcrb
sbb
xchg
mov
xchg
add
sbb
or
sbb
xor
mov
lods
pop
push
js
test
test
lret
enter
dec
in
loopne
inc
push
sbb
int3
adc
adc
add
push
in
nop
stos
mov
add
mov
xchg
push
pop
loope
add
fwait
lds
sub
sbb
lret
xchg
ret
and
sbb
add
add
test
and
loopne
mov
and
test
jecxz
or
mov
xor
mov
dec
in
sub
jmp
or
incb
inc
je
cs
inc
or
lcall
jo
faddl
cld
rclb
lret
inc
mov
inc
imul
inc
add
stc
lock
inc
xchg
pause
clc
je
inc
push
and
sub
and
das
adc
fcmovnu
add
leave
addr16
add
nop
sub
lock
and
es
fsubrl
test
sub
adc
daa
test
xchg
add
mov
cmp
and
aaa
push
push
mov
mov
pop
xchg
cmpsb
nop
test
adc
xor
test
adcl
add
sub
fdiv
loopne
inc
xor
hlt
hlt
loope
and
push
addl
scas
ds
mov
lods
adcb
nopl
rolb
dec
mov
mov
pusha
and
pop
loope
xchg
gs
gs
sarb
adc
xchg
sahf
je
addr16
fld
arpl
loope
cmp
cmp
lcall
enter
pop
addl
adc
or
aaa
or
aad
testl
popf
dec
mov
pop
jb
pop
mov
sub
bound
hlt
mov
adc
lcall
ret
nop
ficoms
xor
out
add
cmp
je
fcompl
sbb
and
fsts
adc
test
adc
loop
dec
mov
adc
add
lds
mov
add
mov
insb
call
cmp
push
push
add
out
jbe
sbb
mov
xor
push
cwtl
fsubs
push
push
mov
lahf
mov
mov
loope
or
adc
sbb
in
sti
in
xor
and
sbb
push
and
adc
sbb
dec
jne
or
mov
sarb
rolb
cmp
sbb
add
adc
inc
subb
add
pop
iret
sahf
push
mov
mov
jge
mov
xchg
add
or
push
int
lods
das
mull
fildl
and
icebp
enter
adc
adc
mov
jne
movsl
add
xchg
pop
je
and
adc
xchg
push
mov
inc
outsl
ja
inc
inc
pusha
xchg
add
negb
cmp
adc
sub
addb
stos
mov
lret
hlt
sar
leave
js
dec
cmc
clc
push
add
jo
and
jbe
rorb
or
orl
popa
pop
jb
and
mov
jne
movsl
jg
jne
cmp
jne
jns
add
xor
jne
mov
adc
mov
jmp
or
lock
ret
inc
inc
test
test
shrl
mov
mov
stc
or
in
mov
jle
imul
cli
or
pushl
aam
loopne
rcrb
loope
dec
test
adc
pushf
frstor
ret
dec
jecxz
add
jle
pushl
mov
sbb
shr
or
inc
sbb
jne
adc
pop
dec
pop
movb
loop
and
adc
dec
push
or
cmp
dec
jl
jbe
fcmovnbe
movsb
jo
fldl
adc
jno
and
je
or
mov
xchg
cmpb
pop
cmp
sbb
cmp
cmp
jne
xchg
jne
pop
jle
shrl
cmp
or
jnp
je
mov
pushf
jecxz
dec
push
inc
jmp
test
movsb
jecxz
lock
lahf
andb
cmp
cmp
push
test
idivl
mov
xchg
jo
jns
jg
sub
imulb
inc
cmp
push
out
imul
add
push
rorl
subb
dec
add
dec
mov
and
adc
add
cmp
push
icebp
lods
and
push
sbb
cmpsb
es
sub
push
mov
add
xor
std
mov
push
xor
pop
stos
add
enter
rclb
jnp
sti
scas
mov
dec
cli
adc
dec
pop
cmp
movsb
js
xchg
mov
cmp
pop
xor
cmp
sbb
push
jb
and
es
dec
inc
cli
push
xor
and
fisubl
cmp
xor
push
jmp
xchg
mov
dec
and
push
in
push
push
pop
leave
pop
fsubrp
push
xchg
adc
and
shr
pop
pushf
xchg
xchg
mov
fistpl
push
jbe
pop
xor
mov
mov
add
dec
mov
sub
dec
fadds
sub
ret
add
dec
dec
add
mov
push
jns
and
push
push
xor
popf
inc
xor
gs
leave
inc
imul
inc
and
xor
sbbb
aas
pop
and
adc
mov
loope
dec
mov
and
test
lret
mov
add
add
int3
xor
call
scas
addl
sub
fdivl
mov
push
mov
das
jle
push
adcb
push
mov
dec
enter
ds
shl
jmp
out
push
mov
xchg
flds
or
and
mov
mov
mov
test
and
popf
inc
add
and
and
aas
xorl
inc
lret
jg
and
test
cmp
xor
push
scas
jnp
jb
mov
sub
test
inc
dec
cmp
inc
cwtl
js
adc
or
dec
push
nop
jne
cmp
pushf
and
inc
pop
dec
daa
add
sbb
sbb
push
sbbb
jecxz
pop
sbb
mov
jo
adc
or
or
pusha
ret
mov
jle
mov
adc
push
or
popf
mov
lea
out
cmp
les
jl
sub
xchg
loop
xchg
cmpsl
clc
pop
pop
mov
jns
push
cwtl
sbb
popa
lock
and
dec
jbe
push
sbb
shlb
ret
imul
and
fiaddl
dec
mov
pop
loopne
in
or
and
ret
int
cmp
mov
or
std
rorb
push
cmpsl
mov
dec
adc
sbb
popf
lods
mov
sub
or
mov
js
xor
cmp
add
sbb
add
push
lock
xor
push
mov
xchg
xchg
add
push
push
das
jmp
cmp
add
mov
loopne
sbb
loop
insb
mov
sbb
push
or
enter
add
or
js
dec
sbb
jno
inc
and
addr16
mov
dec
sub
enter
cmp
push
xadd
and
or
int3
movsl
or
addr16
inc
dec
in
gs
icebp
push
lods
sub
movsl
push
sbb
loopne
push
mov
frstor
and
das
sbb
cmp
sub
lds
call
inc
or
pop
inc
rolb
sub
fnstcw
add
mov
add
jne
push
jns
pop
and
jmp
insb
pop
cmp
jae
cmp
es
scas
popa
ret
pop
je
cmpsb
push
scas
adc
hlt
adc
inc
adc
pop
test
call
pop
mov
dec
push
and
outsl
imul
test
sbb
ds
lea
adc
pop
out
xchg
enter
pop
mov
sub
cmp
jne
rorb
into
xchg
shl
mov
pop
loopne
cmpsb
adc
sahf
lret
sub
or
push
and
pushl
push
push
test
unpckhps
cld
ja
and
push
sub
in
adc
and
and
lahf
mov
test
fcompl
hlt
imul
dec
outsl
cwtl
dec
add
adc
imul
iret
pop
and
aad
or
aad
xchg
aam
je
lea
insb
jb
xor
movsl
or
adc
sub
sbbb
cs
imul
jbe
gs
dec
sub
or
sub
jne
mov
lahf
and
dec
inc
enter
mov
add
jmp
dec
sub
sub
mov
xor
in
inc
and
pushl
cltd
dec
pop
test
pop
gs
sbb
pusha
jb
mov
je
mov
sbb
or
pop
xor
add
pushf
and
jno
xchg
add
jge
dec
scas
push
xor
push
and
xchg
pcmpgtw
xor
jmp
add
pop
pop
cmp
adc
inc
arpl
popa
test
cmp
lcall
inc
mov
dec
push
in
lea
jl
loopne
sub
add
fwait
push
ror
cmp
pop
pop
arpl
aaa
adc
cmp
and
jmp
push
push
pop
inc
sub
cmp
sti
ja
sub
sub
xor
cmp
repnz
test
dec
adc
pop
psraw
scas
or
pop
mov
pop
push
lea
dec
jle
pop
test
add
adc
add
xor
sub
cwtl
dec
or
inc
cmovns
add
sub
sahf
dec
in
cmp
loopne
je
mov
aam
jne
mov
ss
xor
push
movb
cmp
fsubs
pop
pop
into
daa
and
es
fmull
add
mov
iret
mov
sti
push
cmpl
xchg
out
and
mov
pusha
xchg
push
shlb
push
push
stc
pusha
jmp
dec
xor
inc
fsubr
cmp
dec
hlt
mov
hlt
sub
xchg
fadd
pop
test
push
rorl
loopne
cmp
popf
shrb
je
jne
in
dec
inc
enter
inc
movsl
xchg
popf
cmpsl
les
imul
test
movl
and
mov
pop
dec
fists
dec
ljmp
jle
lea
cmpb
inc
mov
sbb
enter
incl
movb
push
mov
clc
sub
cmp
pop
jl
pop
je
test
or
xor
mov
aaa
dec
cmpl
fimull
dec
mov
cmp
xor
lcall
pop
movsb
ss
push
push
mov
ret
lods
add
inc
sub
jmp
sub
add
adc
arpl
push
dec
stos
incb
sti
or
adc
pop
repz
movsl
sub
mov
test
hlt
mov
lcall
or
inc
int3
xlat
fimull
jmp
dec
adc
pop
inc
jmp
les
pop
jae
xor
jg
mov
adc
xchg
gs
out
pusha
ret
sub
in
push
adc
les
push
xchg
test
add
out
or
or
mov
dec
inc
cmp
jb
pop
pop
icebp
or
xor
repz
frstor
clc
pop
ret
mov
push
outsl
or
cmp
rolb
je
nop
xor
inc
mov
jmp
por
cmp
jne
xor
inc
lret
adc
push
lods
out
stos
push
mov
sbb
add
push
or
movlps
and
pop
subl
popa
push
pop
pop
inc
cmp
nop
test
fsts
inc
xor
sub
add
and
outsl
cmp
je
testl
nop
lret
mov
adc
jecxz
dec
add
test
cld
push
or
jno
pop
cmpl
jne
push
adc
jne
and
ja
div
dec
add
mov
shl
lea
jmp
push
sub
push
into
pop
mov
jb
jns
mov
loope
addb
divb
pop
xorl
or
inc
cli
sbb
mov
jbe
xchg
mov
enter
add
xchg
insb
fildl
bswap
lcall
or
add
sub
inc
sbb
sub
addr16
cmp
jo
or
cwtl
dec
sbb
das
nop
icebp
je
sbb
fsubs
mov
cmpsb
and
adc
andl
mov
sbb
adc
push
push
bound
fs
pushf
cli
adc
or
inc
sub
add
or
inc
push
adcb
push
insb
lcall
dec
dec
xor
add
fidivrl
pop
mov
jl
cmp
mov
or
cmp
mov
sub
jl
add
fsubl
pop
pop
test
popa
test
add
fwait
and
mov
jmp
mov
add
insb
mov
jmp
pop
jb
xchg
cwtl
dec
pusha
push
ja
inc
add
int3
iret
pusha
ret
scas
sub
add
lret
pop
inc
imul
mov
mov
push
push
adc
add
cmp
and
pushl
xlat
cmpsb
mov
lcall
jb
pop
push
test
dec
xor
pop
cwtl
lret
nop
mov
or
xchg
adc
hlt
mov
jmp
xchg
and
loop
add
jno
dec
push
mov
mov
in
jl
addr16
xchg
inc
adc
xor
xchg
into
xchg
xchg
or
push
dec
cmp
setp
push
xchg
testb
aaa
xchg
sbb
push
dec
ljmp
or
call
push
sub
in
movsl
mov
call
xchg
fimuls
mov
inc
mov
jo
inc
enter
movsb
cmp
out
mov
add
or
movzwl
mov
je
test
mov
lret
or
cld
enter
ss
leave
ret
out
pop
push
mov
mov
push
xchg
jno
add
sbb
push
jmp
cmpl
popa
sbb
or
inc
jecxz
pop
xor
loopne
cmp
movb
add
mov
and
pop
mov
sbbl
mov
mov
jne
cmp
fisubrl
push
fxch
test
mov
rolb
shlb
sub
addl
xchg
sub
dec
inc
push
xor
jecxz
jle
adc
sbb
or
fisubl
add
jmp
pop
and
sub
or
mov
mov
jl
js
pusha
imul
pop
xchg
jo
jle
aam
call
xor
push
mov
mov
leave
bound
fldlg2
pusha
pop
pop
pop
pop
cmp
je
jmp
out
xor
xlat
sub
popa
inc
sti
and
ret
pop
jle
cmp
push
mov
in
ret
push
sub
jnp
pop
sbb
jo
and
inc
dec
rolb
arpl
rcrb
fcoms
insb
lret
cs
ss
push
mov
pop
or
xchg
jb
mov
repnz
aas
mov
or
or
xor
pop
or
push
stos
sub
mov
push
push
or
pop
jo
inc
push
dec
enter
add
mov
in
loopne
sbb
mov
xor
xchg
lods
inc
or
mov
pop
das
add
push
cmp
sbb
cli
adc
xchg
es
sbbb
xor
loope
inc
jge
mov
sub
xchg
cmp
sbb
loopne
and
stos
int3
addl
lods
push
test
push
adc
nop
into
jle
ljmp
packuswb
jge
stos
push
loopne
push
sbb
rcr
cmp
daa
sbb
divl
or
inc
mov
inc
inc
mov
jl
subl
je
or
sbb
jmp
adc
mov
sbb
data16
loope
mov
sub
jne
xor
call
and
pop
in
mov
adc
pop
add
push
or
cltd
and
loop
stos
pop
mov
inc
mov
add
int3
adcb
loope
mov
push
sub
push
mov
sar
pop
lock
add
inc
or
mov
cwtl
xchg
cmpsb
pushf
mov
push
dec
js
cwtl
add
cmc
repnz
push
aam
mov
adc
ss
and
aad
pop
mov
adc
and
adc
mov
adc
inc
rcll
aas
inc
push
ja
push
adc
sub
ret
inc
andb
out
mov
int3
fst
or
lock
mov
fsubl
ret
shl
dec
shr
dec
sti
mov
pop
cmp
push
push
mov
cmp
das
push
add
scas
dec
aam
jne
ficoml
clc
cmp
sub
negl
test
jl
mov
les
and
dec
dec
or
pop
insb
aam
add
pop
and
cmp
xor
dec
sub
idivb
mov
sarb
aas
jo
imul
inc
ljmp
ljmp
cmp
movsl
pop
aam
lcall
inc
lods
pusha
mov
popa
shlb
shlb
ljmp
pop
mul
outsl
arpl
mov
push
or
out
pop
lea
cmp
int3
test
sbb
adc
jne
inc
es
mov
je
pop
pushf
mov
ds
push
jecxz
jns
mov
test
jmp
cmp
rol
in
loope
push
add
dec
sbb
pop
pop
or
mov
sbb
mov
movsl
dec
scas
faddl
push
or
adc
into
sbb
dec
ja
testl
push
xor
push
mov
xchg
rorl
ret
daa
mov
inc
or
dec
inc
mov
sub
push
sbb
push
inc
bound
adc
or
pop
jbe
mov
es
movsl
cmpsb
add
test
sub
adc
pop
sbb
push
lea
aaa
dec
adc
sbb
adc
addb
outsb
dec
mov
push
mov
int
dec
or
push
push
sub
repnz
dec
mov
mov
stos
jle
push
jo
ljmp
push
mov
test
loopne
sbbb
inc
lret
mov
fisubl
in
mov
sbb
mov
mov
mov
cmpsb
pop
jnp
cmp
jb
push
adc
jae
adc
cmp
or
adc
loopne
xor
popf
cmpsb
cltd
mov
insb
mov
lock
sbb
ds
push
and
out
lock
icebp
xchg
loope
sarl
mov
mov
sub
inc
in
sbb
jno
xor
cli
jg
or
add
or
xchg
mov
jmp
mov
mov
jmp
or
cmp
xchg
fadds
pop
jl
add
or
in
test
mov
sbb
push
icebp
aad
andl
imul
add
rolb
push
in
push
pop
rcl
pushw
push
add
push
jecxz
xchg
popf
mov
push
adc
dec
js
add
and
lock
sub
xor
xchg
adc
push
cmp
mov
mov
insb
jle
xlat
call
es
jne,pn
and
aam
mov
test
test
push
pusha
push
mov
or
xor
xchg
movsb
int
and
xor
mov
push
xor
jmp
add
cwtl
enter
add
add
cmpsl
and
fstpl
push
test
out
jg
add
or
outsb
mov
add
or
pop
lcall
cmp
movb
not
jo
sbb
je
jns
rorb
insl
jne
mov
lret
repz
jne
add
push
pop
sahf
push
push
je
inc
or
in
lret
repz
or
and
jle
cmp
push
push
inc
dec
mov
sub
mov
lea
loopne
sub
pushl
sub
cmp
mov
cld
pop
sub
cmpsb
addr16
ds
cmp
je
in
out
push
or
subb
nop
cwtl
cmp
adc
xchg
sub
or
ds
in
cmp
jbe
xchg
jmp
push
jb
fs
iret
dec
inc
push
inc
sbb
push
je
sbb
jmp
xor
xchg
add
rclb
sbb
pop
hlt
push
cmp
sbb
shlb
lock
sub
cmp
sahf
xor
xor
inc
add
and
push
test
add
fsubr
push
xchg
inc
sub
stc
ret
aad
and
jne
std
popf
jle
mov
out
mov
mov
mov
movsb
sti
movb
add
push
inc
outsb
nop
xchg
fwait
cmp
movsb
add
or
mov
inc
dec
mov
cmp
es
lea
mov
sti
popf
jbe
fstpl
add
cs
sub
pop
js
mov
mov
es
jle
cli
or
inc
and
add
imul
imul
lahf
dec
jnp
insb
or
call
pushf
lahf
enter
xor
adc
pop
ret
dec
sub
lods
int
movsb
test
inc
mov
xorb
inc
and
xchg
rcrb
dec
cmp
sbb
adcb
int
cwtl
mov
add
loopne
add
sbb
pushl
pop
loope
sub
sbbl
add
nop
js
jo
nop
add
insb
push
add
xchg
cmpsb
mov
notb
and
add
sbb
shlb
push
or
cltd
mov
sbb
prefetchw
adcb
push
clc
adc
and
mov
rol
dec
jo
xchg
insb
and
push
xor
ds
or
imulb
dec
pcmpeqw
or
adc
inc
adc
jb
imul
push
es
bound
pop
add
pop
mov
fisubrl
cltd
insl
jo
adc
fbstp
jmp
cmp
leave
dec
data16
sbb
repz
mov
sbb
mov
lret
or
jbe
or
push
ja
sbb
add
jne
mov
adcb
shll
mov
mov
fadd
jmp
push
cmp
addr16
inc
or
dec
push
fsubl
loopne
out
adc
sub
jne
jns
jp
mov
test
in
push
xor
inc
loope
cli
insb
sbb
pop
faddl
inc
dec
jo
push
pop
push
rol
ljmp
add
nop
and
jno
mov
jmp
push
pop
jne
lea
loope
and
add
push
jne
shll
mov
lret
inc
pop
xor
out
test
xlat
add
andl
dec
lock
mov
add
add
add
xchg
das
or
lock
add
repnz
out
add
out
addr16
fcmove
cmp
gs
jo
jno
test
mov
inc
xchg
out
xchg
inc
outsb
sub
rolb
jge
add
mov
scas
movsb
pop
fwait
sub
mov
or
jne
stc
lock
xchg
cs
ds
mov
jne
xor
in
inc
xchg
ja
fwait
fldenv
inc
lahf
sub
fmuls
jne
dec
pop
add
sub
mov
add
push
iret
js
test
cmp
xchg
je
ret
adc
mov
push
push
lea
mov
test
jne
lret
clc
mov
cmp
jg
push
insb
dec
mov
cmp
sbb
jmp
aaa
cwtl
dec
xchg
lods
pop
cwtl
iret
sbb
das
jnp
test
xchg
dec
inc
pusha
sbb
mov
arpl
push
add
loopne
add
push
jae
inc
or
or
inc
add
pop
xor
sub
scas
jecxz
jp
jp
mov
out
pop
adc
or
mov
mov
test
xchg
mov
and
xchg
sub
xor
mov
sub
xor
int
jo
mov
lock
pop
and
and
or
sbb
arpl
adc
jo
mov
inc
jo
neg
cwtl
notl
xchg
and
adc
sub
sbb
lods
shr
cmp
nop
gs
je
inc
mov
sbb
pusha
insb
insb
push
push
les
arpl
pop
xorl
das
push
or
xchg
xchg
jo
mov
je
cmp
je
mulb
inc
or
cmp
insb
and
iret
je
xor
jl
je
push
push
push
lock
lahf
loop
fcoms
xchg
inc
pop
xchg
jmp
lea
pop
fcoml
dec
leave
add
rolb
sub
push
add
xchg
pop
lock
mov
adc
lock
mov
lock
sbb
rorl
jmp
out
lods
in
ds
in
adc
sbb
ret
stc
sbb
rcr
xor
push
mov
ja
push
ljmp
add
push
mov
cmpl
lods
cmpps
mov
mov
dec
aas
or
push
leave
inc
push
dec
popf
andl
push
mov
pop
jl
testb
ljmp
fsubrp
and
push
xor
mov
in
xlat
test
je
test
ljmp
sbb
or
fnsave
cwtl
push
cmpl
and
aam
push
sbb
and
pop
insb
jns
insb
loopne
inc
ret
push
jge
jne
mov
popa
push
cltd
add
mov
cs
sahf
call
popa
push
addr16
push
aas
dec
sti
fs
mov
push
xor
mov
es
jae
xchg
in
outsb
in
fisubrl
mov
cwtl
ljmp
inc
lods
sub
testl
loopne
je
sbb
or
xchg
std
mov
and
dec
push
lea
push
pop
cwtl
push
adc
pop
add
mov
arpl
dec
push
lret
push
or
add
xor
lods
cmp
test
or
fcoms
jb
es
pop
sbb
and
in
lock
pop
mov
fs
fisubl
mov
pop
mov
jns
jno
daa
pop
mov
jnp
mov
push
push
adc
ja
push
into
inc
std
mov
mov
inc
push
pop
cmp
je
push
cli
fiaddl
jp
push
mov
add
sbb
sbb
scas
sti
cmp
je
aaa
jne
add
push
bound
adc
hlt
adc
es
jg
adc
out
sbb
pusha
mov
test
insb
movsb
ret
jp
pusha
or
sbb
pusha
pop
loopne
mov
pop
inc
ljmp
dec
jmp
adc
and
addl
lods
and
cmp
push
xchg
into
test
jecxz
lock
push
and
xor
loopne
cmp
fnstsw
pushf
aam
js
push
xchg
lret
mov
clc
aad
verr
and
lea
jmp
aam
inc
adc
pop
cmpl
pop
movsb
ss
jecxz
loope
mov
pushf
sub
push
cmp
fst
js
push
fsubr
and
jmp
mov
lret
out
pop
mov
ss
popa
mov
out
fisttpll
shrb
adc
mov
pop
xchg
sbb
ds
ret
mov
daa
add
xchg
dec
imul
sub
add
mov
xlat
aam
sbb
mov
lahf
adc
loop
pop
out
jo
push
cli
or
pop
mov
aaa
push
xchg
popa
shlb
int
bound
jo
push
scas
cmpsb
xor
mov
or
stos
sub
dec
mov
mov
imul
or
mov
aad
aas
sbb
jg
inc
movsb
jmp
imul
xor
dec
push
mov
out
inc
or
sub
mov
adc
cmp
push
pop
lea
sub
push
fwait
push
les
mov
sub
cs
add
push
test
xchg
dec
sub
mov
mov
inc
dec
or
mov
sbb
push
iret
int
aas
adc
outsb
inc
into
sbb
and
dec
push
sbb
sbb
add
or
in
jl
aam
inc
mov
inc
in
jnp
xor
orb
mov
xor
adcl
pop
jp
ljmp
pop
or
adc
cmp
xorb
pop
adc
sbb
cmp
pop
xchg
in
push
pop
sub
loope
imul
and
inc
rcll
xor
or
call
dec
add
xor
mov
mov
dec
stos
mov
jo
fldl
and
ret
push
push
xor
call
or
hlt
xchg
cmpsl
adc
push
and
jne
loope
sub
fisubrl
dec
pop
sbb
mov
mov
push
or
jo
push
mov
inc
sub
dec
xchg
fimuls
add
push
je
sbb
xchg
out
push
mov
sub
lret
int
int3
ficomps
out
and
fbld
push
sub
sub
ss
and
add
ficompl
rclb
xor
or
pop
xor
mov
xchg
mov
or
jp
outsl
inc
xchg
mov
daa
fidivs
add
xor
or
jb
ss
xor
imul
lock
xchg
xor
sahf
pop
inc
cmp
mov
mov
sbb
or
sub
inc
jo
adc
sbb
push
gs
pop
popa
pop
mov
lods
addb
loop
lea
and
sub
pushf
test
ss
push
inc
das
shrl
add
mov
mov
or
sbb
pop
pop
pop
pop
jge
xor
xchg
jb
aaa
add
xor
adc
mov
dec
lods
enter
pop
or
icebp
sbb
and
mov
sbbb
es
cwtl
pop
pop
pop
mov
xor
fistpll
jbe
jno
loop
xor
pop
sahf
push
xchg
dec
outsb
push
sbb
adc
or
lahf
add
sub
hlt
adc
cwtl
xchg
dec
cmpsl
aad
xor
xor
lods
loop
test
lret
cwtl
mov
mov
test
ret
adc
test
fidivs
inc
lds
jle
bnd
dec
cmp
sbbb
push
mov
mov
or
jmp
in
rol
jecxz
cmp
pop
add
fdivs
insb
dec
dec
adc
jbe
fcoml
pop
inc
push
inc
adc
inc
push
push
sbb
mov
fcomps
aas
rolb
jp
jmp
pusha
cmp
pop
pop
shll
mov
pop
enter
orl
mov
sahf
jbe,pn
or
je
mov
or
mov
js
add
add
jne
mov
xor
fiadds
ret
mov
inc
sbb
xchg
jge
and
adc
mov
addb
pushl
loope
xor
xchg
push
sbb
mov
or
mov
xor
push
fcoml
push
mov
mov
push
adc
dec
lret
lret
shrl
xchg
dec
in
sbb
add
add
or
jo
jbe
movswl
add
and
cmp
add
nop
add
test
pop
add
jp
and
xor
shrb
cmp
out
ret
mov
test
rclb
je
xor
mov
jne
rol
fisttps
mov
xorb
cmpsl
mov
lods
cmp
jne
add
cmp
pop
mov
push
and
xorb
jp
push
lods
jp
testl
loope
add
pop
sbb
cmpl
xchg
mov
and
jmp
fs
lea
fmul
lods
ret
ret
mov
jle
pushw
pushf
xchg
inc
xlat
adc
push
aam
mov
push
and
mov
loopne
test
inc
testb
cmpl
divl
push
sbb
rorl
mov
push
pop
andb
lock
mov
ret
jmp
or
or
int3
popf
inc
sbb
pop
sbb
push
lea
loopne
push
mov
subb
negl
cwtl
inc
push
pushf
fisubrl
jnp
xor
dec
clc
loop
je
mov
les
push
mov
push
mov
xchg
xor
xor
and
negl
scas
and
aas
inc
sti
les
pop
add
mov
sbb
sub
cmp
mov
out
and
sub
inc
enter
inc
imul
dec
dec
ret
in
add
je
push
std
gs
mov
jns
movsb
adc
sbb
inc
imul
daa
add
or
adc
mov
lods
les
daa
push
aas
mov
ss
jge
cmpsl
sub
inc
add
xchg
js
add
clc
dec
es
fdivrp
sub
lods
and
or
xchg
push
lahf
sbb
xchg
into
xor
dec
cvtps2pd
inc
aas
rorb
into
sub
xchg
or
inc
adc
mov
sbb
or
jne
mov
xchg
jmp
inc
pop
inc
jbe
test
test
cmp
fwait
sub
in
cmp
je
mov
jle
aaa
pop
rcll
rcll
pop
add
loopne
jae
je
mov
pop
add
mov
dec
movsl
repz
push
daa
jle
jbe
mov
data16
push
test
mov
add
loope
mov
mov
dec
insb
add
pop
add
and
jl
out
add
lret
lcall
in
xchg
scas
adc
loopne
adc
add
incb
push
cmp
jne
pop
pop
cmpsl
add
xchg
and
adc
pop
lret
mov
les
lea
jb
mov
shlb
add
aaa
insb
xor
push
sbb
adc
sub
lods
jbe
add
imul
xchg
int3
and
inc
cli
push
cld
or
push
jle
sar
inc
in
jge
movl
addl
insb
shr
inc
add
rcr
mov
adc
cmp
shlb
dec
sahf
loope
xchg
mov
pusha
insb
std
mov
jg
lret
sbb
mov
hlt
or
dec
sbb
jbe
out
adc
push
js
jb
adc
inc
mov
xor
dec
push
mov
hlt
sbb
inc
notb
sbb
lock
push
pop
pop
aam
adc
inc
hlt
mov
mov
xchg
jne
mov
jno
xchg
mov
and
push
mov
idiv
lods
div
je
mov
mov
js
push
nop
sub
mov
add
mov
rolb
xchg
mov
negb
and
sbb
xor
push
or
ds
cld
jecxz
adc
push
sbb
out
movsl
addl
insb
loope
cmp
sbb
adc
mov
call
daa
dec
test
inc
add
cld
testb
movb
dec
popa
dec
aam
in
sub
je
lds
mov
dec
sub
add
xchg
add
sub
adc
sbb
inc
inc
or
push
pop
movsb
ficomps
push
pop
mov
push
sub
inc
jecxz
mov
sub
test
adc
xor
add
or
mov
cmpsl
xchg
fldl
rorl
mov
jmp
cmp
jl
adc
and
dec
in
hlt
xchg
shl
aas
daa
or
cmp
ja
or
outsb
mov
sarl
mov
xlat
pop
push
fadds
stos
or
jb
push
hlt
ret
sbb
jp
dec
push
or
or
out
aad
push
sar
mov
cmp
mov
jne
dec
pushf
xchg
js
mov
sbb
or
ljmp
pop
fwait
xor
lea
push
add
in
test
push
ret
lods
mov
push
adc
or
cmp
adc
popf
pop
fs
addb
xor
and
jecxz
dec
push
or
or
insl
lea
inc
adc
pop
cmp
inc
jo
and
test
idivl
lods
fldcw
out
pop
and
and
stos
loopne
popl
push
pop
testl
mov
aas
ret
loopne
ljmp
nop
addr16
mov
mov
xchg
scas
dec
or
cmp
aaa
dec
or
mov
xchg
or
gs
ljmp
jmp
or
xor
ja
dec
dec
sub
push
ret
jp
into
sbb
in
nop
push
pushf
out
xlat
orb
testl
pop
gs
jge
fdiv
add
orps
ret
and
jle
xor
mov
add
or
jge
aam
and
scas
out
ret
rorl
adc
mov
je
xchg
and
fcoms
cs
mov
jo
mov
sbb
enter
inc
pop
and
push
das
imul
sbb
sbbl
cltd
in
lods
jmp
pop
pop
push
push
cld
mov
int3
push
or
add
es
int3
xor
mov
insl
lea
lods
in
sbb
dec
add
sbb
add
test
push
gs
inc
scas
xor
pop
loop
ret
testl
add
push
jae
cmpl
mov
push
rclb
adc
pop
sub
xor
divl
pop
lods
push
push
mov
jmp
lods
xlat
add
sub
mov
mov
xchg
add
bound
adc
sbb
sbb
fisubl
mov
sti
sub
add
xchg
xor
mov
rcl
lcall
mov
lods
test
mov
fistps
sub
aad
sbb
in
mov
or
movsl
sub
gs
mov
pop
andl
mov
or
dec
jb
add
lock
cld
push
cmp
in
cmp
pop
add
icebp
outsl
aas
cwtl
sbb
loopne
add
ret
mulb
pop
xchg
adc
cmp
ret
scas
test
pop
daa
loop
mov
push
and
into
xchg
int3
cmp
cmpsl
pop
andl
cmp
jp
ret
sbb
ja
je
in
jle
mov
or
sub
xchg
xor
adc
das
in
adc
nop
loope
or
add
xchg
test
sbb
lcall
cs
les
mov
sti
cld
je
imul
jbe
adc
dec
push
push
cmp
gs
add
sub
add
push
or
xchg
lock
pushf
jbe
dec
fildll
call
aad
and
clc
push
in
mov
ret
or
inc
outsl
pop
hlt
addr16
gs
add
push
fidivl
je
and
inc
scas
ds
sarl
jmp
daa
lods
pop
add
test
addb
and
add
add
or
add
loop,pn
stos
xor
aaa
inc
clc
adcb
loopne
mov
sub
jmp
rorl
data16
add
cltd
add
nop
adc
sbbb
fwait
out
rol
test
mull
or
movl
adc
inc
xchg
dec
push
or
jnp
jb
js
push
aas
fmull
out
sarl
jo
cmp
insb
cmp
aas
dec
sbb
add
int3
sub
push
cmp
and
jo
mov
mov
xchg
push
sbb
jnp
pop
ret
mov
pop
inc
push
mov
pusha
push
mov
push
sbb
adc
fdivrl
notl
add
add
lahf
add
sub
mov
push
inc
push
push
push
sub
in
push
subb
or
push
call
int3
mov
pop
pushf
aaa
loopne
sbb
push
stos
inc
cmp
sbb
repnz
notb
ret
adc
sbb
mov
inc
sub
out
test
inc
cmp
enter
jne
or
mov
mov
xchg
pop
insb
std
fsubl
sahf
and
scas
bound
push
sbb
nop
add
out
cmc
inc
add
fwait
out
les
lahf
add
cmp
adc
leave
xor
and
jecxz
iret
xchg
push
enter
insb
mov
and
fs
cmpsb
ret
ret
rorb
pop
ret
push
xchg
jle
lret
pop
fdivrs
repz
sbb
sahf
dec
xor
clc
fistl
inc
push
xlat
lods
adc
repz
and
es
movsl
pop
and
xor
jge
loopne
outsb
ljmp
adc
cmp
dec
popf
dec
in
stc
aam
xor
aam
inc
dec
cs
cmp
popa
ret
cmp
push
test
xor
in
clc
aaa
pop
inc
dec
mov
fistpll
sbb
add
rclb
push
ret
icebp
cmp
jl
and
xchg
xor
cmp
jnp
sar
inc
mov
or
ret
push
jp
sub
jl
adc
mov
jl
icebp
push
cmp
push
fstpt
sbb
jge
adc
mov
fisubl
mov
sbb
sbb
mov
cwtl
dec
and
sbbl
adc
stc
imul
jo
sbb
pop
cs
jmp
jle
pop
movsb
and
sbb
adcb
scas
test
rorl
test
inc
push
dec
dec
jl
xchg
hlt
enter
out
sub
dec
adc
and
cmpsb
xor
call
mov
cs
adc
les
loopne
shl
imul
movl
mov
insl
push
jne
add
or
into
xchg
sbb
jecxz
lahf
jno
in
insb
dec
in
sub
xchg
lret
dec
shrb
pop
inc
pop
mov
xor
nop
push
js
cwtl
mov
nop
bound
xlat
fcoms
sub
mov
sub
jb
imul
and
cmp
call
ret
jnp
pop
mov
movl
add
or
sti
jns
mov
adc
scas
test
popl
jp
test
clc
cmp
call
test
xor
jge
push
or
push
mov
mov
sbb
loope
inc
stos
push
cmp
loopne
pusha
popf
xorb
or
out
arpl
push
aas
xor
outsb
and
cld
jne
push
dec
in
shll
shlb
add
call
pop
push
iret
dec
pop
incl
xchg
invd
mov
enter
dec
sub
inc
mov
inc
push
test
aaa
or
push
inc
rorl
sbb
cmp
mov
ret
sub
xadd
hlt
lods
ds
ret
cwtl
dec
dec
ljmp
dec
or
sbb
or
add
icebp
sbb
mov
push
and
xchg
push
add
xchg
mov
cmpb
movsl
pop
xor
jl
je
or
iret
fdiv
push
jl
roll
push
rclb
push
sbb
or
push
pop
mov
in
outsb
test
aam
sub
sahf
mov
mov
mov
hlt
adc
jl
push
inc
lahf
cmp
add
jecxz
push
or
inc
loop
add
jg
dec
rcrb
add
popf
mov
pop
jg
mov
je
inc
or
push
sbb
and
aas
sub
cmpl
pop
push
and
inc
push
sbb
and
cmc
adc
lock
lock
adc
mov
lods
movsb
dec
sbb
inc
adc
jae
cs
aam
les
mov
jp
into
push
test
push
mov
lods
xor
sub
and
adc
gs
add
enter
adc
mov
dec
pop
xor
lock
sub
or
add
pop
js
outsb
sarb
sbb
xchg
out
aaa
adc
and
push
inc
inc
data16
push
fisubl
mov
and
adc
rol
cwtl
and
lods
adc
mov
adc
cmp
sbb
pop
mov
pop
dec
mov
pop
ror
dec
cmp
enter
lcall
mov
adc
add
mov
or
js
hlt
jge
mov
jle
push
shlb
push
mov
mov
inc
jne
inc
adc
dec
call
jmp
insb
mov
sbb
pop
int
cmp
and
rcll
js
mov
mov
arpl
jo
add
loopne
or
add
cmc
add
into
cli
adc
into
idivl
or
sbb
arpl
sbb
in
into
push
jo
jne
pop
fsubrp
inc
jle
xor
rorl
cmpsb
movsl
fwait
jnp
aaa
stos
or
in
mov
or
xchg
mov
es
adc
test
hlt
je
je
cmp
sbb
xor
call
cli
sub
push
adc
enter
jnp
add
jnp
fimuls
fs
lret
cmp
push
sub
aaa
add
adc
push
adc
sbbl
dec
mov
addb
fwait
add
add
sti
and
add
mov
enter
inc
dec
dec
dec
hlt
add
pop
je
or
push
cmp
push
dec
test
adc
mov
mov
inc
stos
rcr
rcll
lret
shrb
subl
cmpsl
and
xorl
decl
rorl
nop
adc
sbb
sub
cmp
sbb
add
popa
int3
sbb
cmp
and
das
gs
enter
pop
outsl
lods
add
cld
add
mov
push
mov
fisttpll
jl
add
or
ja
or
in
out
popa
rolb
xor
in
or
mov
push
and
mov
cmp
xor
fsubl
dec
mov
sbb
add
in
loop
in
xor
add
add
mov
fsubr
dec
or
je
adc
mov
int
or
mov
sbb
and
in
push
pusha
xor
xchg
inc
cmpsb
nop
and
sbb
xchg
addr16
push
and
iret
push
and
and
push
add
xchg
cmp
sub
mov
enter
push
mov
push
inc
xchg
lea
mov
sahf
or
xchg
add
test
jbe
xchg
adc
rcrb
pop
mov
push
mov
in
push
sub
push
jb
sbb
xlat
xor
and
lods
cmp
push
mov
cmp
push
xchg
cmp
cmp
and
lret
push
sahf
or
cmp
or
mov
jns
cmc
cmp
inc
fwait
mov
insb
add
or
aam
push
cwtl
inc
xchg
inc
mov
pop
daa
sub
add
xchg
iret
dec
add
dec
repnz
cmp
dec
xchg
adc
test
aad
or
jmp
push
loope
sahf
out
or
mov
sbb
push
mov
push
orb
clc
scas
xlat
jle
arpl
add
push
int
ss
fisubs
mov
mov
mov
pushf
out
ds
push
lcall
push
ret
add
pop
adc
dec
sub
jne
push
xor
addl
push
scas
add
movsl
or
mov
aam
or
push
mov
pop
add
dec
in
push
inc
adc
add
pop
or
rorl
outsl
lods
inc
sti
arpl
mov
jg
cs
add
push
mov
xchg
clc
xchg
push
pop
lods
add
rolb
shlb
movsl
inc
xchg
xchg
and
fistps
test
pushf
cmp
sbb
add
aaa
jmp
imul
in
dec
test
sarb
jge
jl
xlat
or
mov
push
in
add
push
inc
or
inc
or
add
jle
dec
push
push
loopne
lock
lds
les
jl
cmp
jae
mov
aaa
cld
incl
push
shl
pop
cmp
jne
jg
push
in
add
xchg
fs
adc
mov
sbbb
mov
ret
mov
popf
add
inc
jmp
push
orl
enter
inc
pusha
rcrb
add
add
sub
cmp
outsb
lds
push
adc
in
ja
movsb
or
push
and
or
mov
mov
xor
mov
jge
or
mov
je
loop
icebp
push
and
jmp
xchg
shrd
fs
jecxz
aam
adc
hlt
addr16
mov
push
test
xor
or
insl
rolb
xor
push
add
pop
cmp
clc
add
mov
jo
dec
jecxz
lret
adc
push
mov
movsl
xchg
subb
imul
insb
shrb
inc
add
pavgb
inc
es
decl
fstpt
popf
xor
sbb
jp
daa
dec
sub
xchg
push
call
cmp
xchg
shrl
push
dec
xor
sti
xor
push
and
ret
push
and
sub
xlat
xchg
or
add
fdivs
jns
add
mov
adc
imul
mov
sti
sub
cmp
test
mov
lcall
jbe
shll
push
imulb
loopne
leave
push
xor
lret
nop
pop
or
push
int
pop
fwait
add
xor
imul
cmp
xchg
pop
pushf
arpl
push
lock
dec
push
add
bound
add
jns
mov
push
je
cmp
push
push
and
adc
dec
hlt
push
push
jmp
nop
push
or
xchg
ret
inc
push
dec
adcl
inc
test
lds
push
hlt
out
lea
add
mov
cmp
push
addl
push
and
push
cmc
lea
leave
inc
jmp
cmp
mov
enter
cmp
add
sub
in
push
or
es
andb
and
pop
enter
scas
sbb
and
xchg
in
or
or
mov
jnp
mov
add
shlb
mov
sub
add
inc
jge
pop
add
aaa
cmp
add
ja
push
daa
pop
pop
mov
lcall
cltd
hlt
mov
pop
mul
mov
movsb
sbb
sbb
inc
add
arpl
push
aaa
xor
mov
imul
dec
sarb
inc
adc
push
adcb
add
sbb
imul
xchg
or
add
and
push
fdivs
andl
out
enter
jecxz
stc
dec
mov
popa
jnp
addb
or
or
or
jb
mov
lahf
or
inc
xor
les
push
mov
jnp
jnp
jo
dec
scas
xor
mov
stc
inc
ljmp
aad
inc
jae
and
stos
ret
icebp
lcall
mov
or
add
cwtl
push
or
add
ret
jne
in
fisttps
xchg
rorb
jb
mov
jae
and
sysret
ja
call
ret
gs
imul
push
push
add
sbb
sbb
inc
sub
or
xchg
xor
or
or
in
dec
push
pop
push
loope
jmp
xchg
mov
push
push
fstpl
dec
outsb
loopne
hlt
fcoml
fdivrl
cmp
aam
adc
imul
push
icebp
inc
rcl
or
dec
add
sub
aas
orb
adc
inc
inc
or
cmp
and
push
push
xchg
cwtl
pop
adc
incb
pop
lods
sub
sub
or
xchg
addb
mov
mov
cltd
xchg
sbb
or
cld
pop
sbbl
mov
pop
rclb
adc
inc
fcomps
clc
sub
rcrb
push
xchg
or
call
es
cwtl
jo
inc
sbb
jb
es
or
add
js
fs
loope
pusha
cld
lret
mov
fsubrl
dec
push
adc
sbb
mov
push
push
sbb
lods
and
sahf
inc
mov
xchg
aam
shlb
sbb
xchg
shlb
fiaddl
add
ret
and
push
add
add
jne
xor
sarl
cli
sahf
mov
pop
inc
dec
ljmp
cld
lock
call
movsb
cld
sub
adc
ss
sub
mov
shr
movsl
inc
and
sbb
pop
fldl
push
add
push
xor
subl
pushf
lods
in
jno
shlb
sub
sub
test
pop
pop
fs
or
negb
dec
test
imul
subl
clc
xchg
add
mov
je
push
cld
push
xor
jmp
insb
movsl
scas
mov
inc
je
std
jp
inc
test
push
out
mov
sbb
xchg
mov
cltd
push
leave
or
inc
test
xchg
mov
je
xor
mov
bound
out
inc
push
bound
sti
jl
test
jg
cmp
adc
xor
cmpsb
enter
ret
in
add
mov
stos
lock
insl
sbb
jge
ja
xchg
insb
mov
jle
push
adc
mov
shr
not
xchg
pop
sbb
dec
sbb
mov
cmp
out
add
push
rorl
lret
add
xor
test
pushf
inc
test
fistpll
or
test
inc
push
add
je
or
lret
lret
xor
xor
cmp
inc
les
cld
dec
dec
sub
jb
pop
cli
and
test
dec
popf
add
addb
movl
je
add
loope
push
sub
inc
movsl
sub
cmpsb
sub
ret
mov
fs
decl
push
cmp
jno
stos
or
imul
sub
and
xchg
adc
mov
pop
inc
jg
or
add
pop
inc
cwtl
rclb
pop
cmc
or
nop
sbb
fidivrl
cmp
or
out
jbe
jns
adc
mov
inc
push
aad
mov
and
adc
cwtl
add
sbb
jae
subb
sub
inc
sbb
adc
cmp
lret
sbb
sbb
popa
rcl
sub
sub
jge
inc
call
inc
popa
cmp
imull
xchg
mov
push
ret
outsl
dec
fcmove
je
cmpsb
sar
loop
cmp
cmp
push
inc
add
cmp
add
adc
cmp
pop
ret
lahf
mov
dec
cmpsb
sahf
testb
adc
adc
je
dec
sub
jmpw
sub
push
popf
out
pop
enter
pop
cmp
adcl
popa
test
mov
fisttps
sti
rep
bound
jbe
mov
sub
jmp
sub
jae
add
shlb
add
ret
inc
sbb
andl
mov
adc
out
movsb
mov
pushf
aam
push
inc
push
fistps
jae
xlat
push
and
push
mov
pop
adc
adc
push
or
mov
pop
data16
inc
sub
mov
aad
adc
inc
sbb
cmp
xorb
das
xor
cmp
fsts
testb
jbe
ret
in
add
cmc
cmp
ret
or
cmp
es
fdivs
scas
sub
rolb
loope
sub
cmp
sbb
mov
jno
bound
mov
testl
mov
movsl
and
add
daa
inc
sub
lods
movnti
enter
inc
xchg
or
test
push
repz
jmp
inc
fadd
adc
jl
push
ja
popa
inc
call
and
insl
sbb
xchg
lret
rolb
into
leave
push
xchg
cmc
sbb
pop
or
ljmp
push
jne
call
add
lret
loop
add
in
mov
mov
push
push
push
movsl
inc
and
shrl
dec
aam
cmp
ljmp
inc
xlat
pop
add
call
rol
rclb
dec
loop
add
mov
push
fsubrs
mov
leave
xchg
push
add
ret
mov
fsubl
fcompl
ljmp
mov
pop
jnp
add
test
dec
rclb
adc
or
push
xlat
mov
adc
jmp
sub
and
add
or
add
cmp
mov
pop
inc
js
dec
js
aad
push
sbb
and
sarb
sub
sub
loopne
mov
lods
sbb
and
sbb
inc
clc
push
roll
push
and
or
add
adc
mov
popa
xor
and
je
mov
xchg
mov
testl
outsb
aam
cltd
or
mov
mov
outsb
adc
aam
cmc
jo
mov
cmpsl
push
push
icebp
jl
ret
or
fisubrl
mov
mov
and
les
or
pop
jg
js
jo
dec
mov
hlt
adc
or
add
pop
sahf
add
pop
adc
out
mov
jle
xor
mov
adc
dec
dec
insb
int3
adc
add
insb
arpl
mov
call
sub
es
test
add
cmpl
lods
sarl
jb
mov
add
push
xor
sub
loop
loope
orb
fisttpll
test
loope
add
jmp
insl
push
adc
shll
jbe
or
or
cmp
xorl
cmp
sbb
or
mov
or
push
sbb
hlt
add
outsb
cmp
je
je
or
sbb
mov
les
rol
add
clc
jbe
jp
jg
or
add
jmp
popa
adcl
inc
popf
xor
ret
loopne
in
inc
ret
pop
sub
mov
repnz
pop
jb
inc
xchg
push
repz
mov
cmc
cmpb
loop
or
sbbl
and
lea
inc
mulb
test
push
fidivrs
or
and
ja
lea
mov
lock
dec
lods
mov
add
outsb
movsl
inc
mov
ficoms
xchg
pop
lahf
lods
push
pop
sarb
jnp
sub
xchg
in
mov
and
cmp
add
adc
push
add
and
dec
or
std
dec
nop
shll
xor
push
aas
imul
mov
add
mov
inc
inc
mov
clc
mov
fsts
xchg
or
loopne
pusha
jp
pop
ret
pusha
jge
test
and
xor
or
push
sub
mov
dec
ss
arpl
orl
jne
sub
jecxz
incb
clc
jp
cmp
adcb
out
hlt
dec
cmp
jb
pushl
mov
js
popa
jo
or
jmp
test
clc
jae
adc
adc
add
and
rolb
adc
cmpl
mov
cmp
jb
setb
xor
adc
mov
je
out
mov
ss
daa
bound
jns
xor
dec
insb
lods
add
adc
movsl
out
inc
and
lahf
pop
sbb
inc
or
imul
xlat
popf
ret
xor
cmpl
leave
cmp
leave
test
sarb
jle
insb
and
ljmp
xchg
scas
dec
daa
or
dec
dec
sub
frstor
xchg
arpl
or
insl
xchg
and
daa
fidivs
sbb
mov
arpl
arpl
inc
mov
push
dec
or
adc
addr16
and
mov
and
xchg
sbb
cmp
mov
outsb
xlat
and
add
lock
add
movl
mov
xor
inc
add
or
lods
xor
adc
or
and
or
xor
add
push
pusha
cwtl
add
jo
dec
xchg
jbe
leave
lcall
add
lret
and
adc
pop
mov
sti
sbb
mov
mov
dec
ret
cmp
push
fsubs
add
leave
mov
inc
aas
and
nop
inc
pop
and
and
lods
and
int3
es
fsubrl
add
pop
enter
xor
and
enter
enter
nop
lods
cmp
pop
or
jmp
push
jb
xor
fdivl
in
add
inc
push
sbb
mov
xor
or
xor
mov
mov
mov
and
dec
xor
inc
movsb
je
shr
out
pushf
or
or
jmp
sbb
dec
lret
push
xchg
push
add
xchg
out
mov
adc
inc
sbb
rcll
dec
sbb
pop
adc
adc
cli
add
addb
shlb
movl
or
add
xor
loopne
push
or
pop
sahf
call
pop
adc
lea
add
repz
or
adc
adc
sub
scas
jge
mov
pop
sarb
inc
mov
jne
push
xchg
test
and
push
or
sub
add
outsb
cs
sbb
lcall
adc
jmp
subb
or
jb
popa
jns
mov
xchg
and
and
jo
movsl
inc
faddl
mov
adc
and
insb
subb
lods
andl
ss
mov
js
dec
xchg
push
in
push
pop
mov
mov
out
int3
fsubrl
fsub
push
and
push
adc
or
leave
scas
or
imul
aam
test
push
dec
clc
rorl
push
pop
and
subb
add
push
xchg
jo
push
outsl
je
fcmovne
clc
add
add
mov
rorb
inc
and
adc
xor
imul
xor
push
mov
or
fimuls
mov
pop
js
ja
jne
xor
je
push
scas
andb
add
sti
sbb
inc
sbb
jnp
or
je
sbb
push
rorb
or
mov
bound
lods
xchg
push
and
lahf
fidivrl
outsb
jns
loopne
pop
xchg
dec
push
pushf
and
or
or
mov
cmp
mov
cmc
dec
cmp
fidivl
mov
addl
sbb
mov
mov
pop
jecxz
mov
ljmp
xor
mov
sbb
sti
jg
dec
imul
fadds
jle
mov
fcoms
sub
pmulhuw
addb
jle
pop
add
movsb
cltd
popa
sbb
call
adc
pop
xor
mov
mov
fwait
push
or
repz
inc
mov
jnp
dec
sub
add
adc
mov
or
cwtl
push
mov
and
dec
cmp
jmp
add
orl
loop
push
das
push
mov
repnz
call
sub
or
sbb
in
and
xchg
fsubrl
or
dec
mov
in
inc
enter
or
aad
jmp
push
dec
add
pop
fistl
xor
and
pop
fs
ljmp
jno
ret
jg
add
addr16
pop
pop
cltd
movsb
xor
adc
adc
sbb
xor
push
fadds
mov
sub
cmpsb
inc
out
sbb
loope
jnp
push
xor
shl
fldl
fmull
pop
repz
std
and
xor
stos
and
and
add
lock
push
jge
adc
outsl
sbb
inc
ds
mov
insl
in
and
lock
movsl
sbb
andl
sbb
inc
and
add
and
sbb
and
decl
loope
pop
push
mov
cmp
jl
cmp
jle
cmp
push
outsb
and
cld
jp
or
pop
sbb
je
sbb
mov
inc
cmpsb
cmp
push
cmp
jge
mov
pop
in
out
xchg
and
cmp
jl
je,pn
cmp
je
and
sub
mov
lods
sbb
lcall
iret
and
and
enter
es
dec
add
orb
fsubrs
testl
sub
sbbb
mov
lcall
jp
pop
push
pop
adc
popa
or
cmp
jl
sbb
mov
roll
add
inc
or
in
add
adc
call
daa
sbb
dec
adc
or
inc
mov
dec
call
icebp
push
inc
rorb
scas
in
and
lcall
lock
cli
push
xchg
jge,pn
cmp
and
mov
cmp
fadd
xchg
rorb
mov
rclb
or
cmp
mov
dec
fsts
or
mov
test
xor
ljmp
mov
sub
push
sub
sti
push
pop
xor
dec
inc
push
pop
pop
lods
xchg
xor
les
cs
pop
push
push
mov
cmc
or
cmp
xor
lock
or
mov
inc
push
inc
pushf
lea
push
test
call
cli
cmp
pop
push
pop
adc
push
sbb
jb
pusha
pusha
jo
push
lret
jp
stos
push
sub
bound
or
sub
sub
mov
pushf
jecxz
aad
in
repnz
mov
xchg
popa
das
sbb
xor
mov
ret
or
push
pop
sub
fs
push
xor
add
sbb
push
imul
ret
scas
pop
or
ljmp
dec
mov
cmp
sub
dec
sub
cmp
add
push
inc
push
inc
insb
adc
ucomiss
jne
jo
or
test
pop
push
adc
push
roll
loopne
imul
stos
or
mov
leave
jae
xchg
and
lock
sbb
test
jnp
fnstenv
push
inc
popf
mov
pop
mov
cmp
and
rolb
inc
pop
push
xor
pop
sub
sbb
jne
nop
pop
shlb
push
imul
sbbb
inc
jmp
jle
and
fs
jno
inc
push
outsl
aaa
mov
dec
leave
test
rcrb
mov
flds
mov
push
sbb
or
iret
out
shlb
movq
loopne
popf
jbe
jmp
outsl
inc
cmp
por
inc
and
pop
cs
add
jnp
adc
fwait
xchg
shll
stc
push
xor
jl
add
fucomi
mov
mov
xor
mov
xchg
mov
jae
cmp
jno
daa
or
and
inc
ret
imulb
das
int
lods
sbb
icebp
sub
add
test
je
test
dec
scas
xchg
mov
cmp
lahf
insb
add
inc
rcl
adc
push
ret
xchg
lods
push
fmull
pop
pop
fsubrl
mov
pop
sbb
jle
add
or
mov
mov
and
daa
je
cmp
add
adc
jg
pop
push
inc
mov
add
add
adc
adcl
cmpsl
xchg
pop
scas
inc
adc
hlt
popf
rcrb
bnd
xor
jle
sahf
or
jle
dec
jecxz
loope
add
and
sbb
lret
stc
cltd
sbb
insb
mov
add
leave
push
repnz
jmp
sub
cmp
cmp
shrl
repz
pop
mov
xor
push
insb
or
inc
fsub
xor
xchg
push
add
pop
and
clc
outsl
jecxz
push
in
push
dec
xor
push
loop
dec
fisubl
or
mov
dec
loopne
mov
or
cmp
loope
and
adcb
std
pop
dec
push
pusha
or
lods
fs
mov
pushf
lods
dec
or
test
sub
and
or
jge
cmp
js
mov
push
jmp
pcmpgtb
add
jle
into
push
mov
push
mov
add
or
add
aam
sbb
xchg
jne
jne
xchg
sub
push
adc
pop
cmpsl
pop
add
xchg
sbb
rcll
or
inc
mov
push
push
mov
jl
cmpsl
mov
hlt
jg
mov
sub
pop
and
jb
cmp
push
pusha
pop
or
sbb
sub
push
mull
or
orps
stos
push
mov
xor
daa
pop
pop
or
sub
rep
leave
repz
or
sub
lea
mov
add
adc
movb
push
test
mov
push
or
outsl
pop
jno
and
lcall
or
add
adc
add
sub
dec
jns
mov
mov
add
movsb
xchg
nop
push
rorb
in
or
aad
add
or
add
pop
or
add
inc
push
inc
gs
push
icebp
bound
push
mov
xchg
dec
sahf
call
lret
pop
mov
mov
inc
mov
cmp
add
or
sub
xor
sbb
cwtl
add
or
jmp
test
jl
xor
and
sub
inc
call
inc
add
push
subb
outsb
lret
xor
dec
inc
adc
pop
outsl
jmp
gs
lea
nop
ret
jge
adc
and
push
xchg
or
mov
mov
push
adc
nop
push
ja
fst
out
jmp
in
xor
pop
or
loop
add
dec
cmp
pushl
push
adc
dec
sahf
lret
sbb
push
inc
sbb
inc
or
div
cmp
cmp
clc
xor
xor
sub
push
es
add
dec
loopne
inc
xchg
and
in
outsb
lock
pop
xlat
out
movl
inc
add
push
mull
push
add
add
mov
repz
sub
add
mov
rorb
push
pop
je
fldl
imul
sbb
dec
in
mov
dec
and
cmp
out
jns
adc
jne
push
divb
or
lahf
out
jne
or
jne
or
std
push
fldz
test
cmpb
fstpl
andl
ja
add
sub
lods
mov
shrl
push
inc
inc
inc
fbld
mov
push
sub
insl
fadd
aam
arpl
test
lea
push
pop
and
fstl
jecxz
fsubs
jp
mov
mov
decl
push
xlat
add
ds
mov
mov
negl
notb
add
inc
jg
mov
adc
push
or
movups
cmp
or
and
sbb
movsb
push
and
jbe
fucom
popa
cmp
push
push
push
ljmp
xchg
mov
mov
movsl
pandn
or
lcall
push
inc
cmp
mov
iret
aam
add
mov
cmpsl
add
pop
add
or
mov
cwtl
xchg
xlat
sub
pushf
test
sbb
jbe
ds
push
ficoms
push
mov
in
cmp
pop
and
pop
xchg
jbe
addr16
jo
push
mov
pop
rorb
add
lea
cmp
inc
mov
add
xor
add
jo
fs
in
lcall
xor
popa
add
push
cwtl
xchg
xchg
fadd
or
lods
cld
and
push
repnz
stos
in
pop
and
sub
bound
call
jnp
lret
dec
jmp
or
lret
fcomps
gs
push
adc
jne
pop
leave
dec
and
movsl
in
and
test
orl
popa
adc
inc
lods
sub
mov
and
leave
imul
or
inc
jno
push
enter
xor
add
push
in
stc
and
push
pop
pop
lods
or
enter
testl
es
xchg
fmull
int3
shr
or
or
ret
push
dec
or
xor
fmuls
fmulp
les
push
fs
cltd
fdivs
in
call
adc
adc
mov
shlb
pop
push
imul
fs
mov
sub
push
xchg
dec
shrl
inc
shrb
movsb
add
or
push
mov
sarl
rolb
clc
mov
xchg
andb
sar
push
or
shlb
mov
add
push
add
and
sbb
call
push
int3
cmc
orl
jmp
push
test
fisttps
hlt
shlb
cwtl
adc
inc
insl
or
add
push
sub
cmp
ljmp
and
or
fs
dec
add
testb
popf
sub
dec
mov
xchg
je
roll
fcmovnbe
es
out
test
cmp
pop
jecxz
jl
ret
cmp
add
stos
inc
insb
fimuls
add
cwtl
pop
push
call
popf
test
sub
add
add
add
add
rclb
and
add
or
sbb
andl
or
lret
mov
int
leave
xchg
xor
adc
loop
mov
ljmp
in
add
add
fcmovu
push
or
push
push
inc
outsb
mov
cs
or
ret
cmp
pop
xchg
test
ss
fmull
rcll
loope
adc
sub
inc
repnz
and
in
in
cmp
xchg
push
dec
pop
bound
call
sub
and
xchg
in
sub
sub
mov
sbb
insl
ret
rcll
ds
rdpmc
push
sti
rcl
out
jmp
mov
lods
and
repnz
mov
loope
mov
push
jmp
sub
push
dec
sbb
push
stc
inc
add
iret
push
test
sbbl
mov
fs
xchg
fisubrl
add
adcb
push
pop
jle
adc
andb
push
push
dec
cmp
shrb
inc
push
imul
pop
test
xor
mov
sbbl
add
xchg
mov
mov
mov
inc
mov
dec
sbb
stos
mov
pusha
addl
add
or
arpl
sbb
dec
push
dec
cmc
lea
push
insl
fmul
pop
cmp
fcmovne
sub
vmread
add
mov
mov
sbb
je
pop
xor
and
pushf
stos
jae
pop
inc
dec
add
repz
push
or
or
pop
xor
or
push
add
jo
xor
aad
push
pop
push
xchg
outsb
or
mov
stc
mov
pop
lea
cmc
sarb
xorb
jnp
loope
pusha
cmpsb
aad
push
dec
clc
pop
dec
sub
sbb
daa
pusha
pop
pop
inc
push
mov
pushf
mov
subb
lods
addb
iret
pop
dec
sarl
gs
enter
xlat
mov
int3
and
mov
dec
call
idivb
call
std
add
pop
xchg
mov
mov
sub
dec
stc
int
add
add
mov
call
mov
adc
mov
dec
push
movsl
mov
movsl
cwtl
inc
mov
push
jmp
push
dec
lods
mov
and
xchg
les
or
cwtl
inc
sub
aad
test
push
or
sub
movsl
inc
and
sti
movsl
mov
lods
cs
adc
lahf
mov
ret
negl
ja
arpl
add
mov
insl
lds
mov
fidivrl
dec
mov
pop
add
pop
in
mov
xor
xor
popa
aaa
push
xor
inc
xor
push
adc
cmp
jp
mov
mov
cmp
pop
test
push
popa
loop
test
inc
cmpsl
test
or
ljmp
lock
cwtl
mov
and
imul
add
fsubl
sub
in
xchg
and
ss
mov
mov
enter
push
ljmp
xchg
and
sub
add
cs
movsl
iret
push
nop
lret
mov
jo
movb
cli
push
fisubl
jg
lcall
xchg
mov
cltd
fs
mov
shlb
mov
in
add
inc
or
and
mov
sub
xor
mov
or
mov
or
xchg
jecxz
mov
xor
loopne
leave
lret
test
add
shll
lock
add
add
pop
daa
clc
test
sti
xchg
pop
push
pushl
cmpsl
out
push
add
sbb
sbb
inc
orb
and
jno
stos
add
mov
add
adc
call
into
rcll
sub
das
cmp
and
aas
mov
decl
rcl
test
mov
and
dec
lret
sbb
pushf
ret
fadds
clc
rorl
dec
add
ret
dec
dec
dec
pop
and
jne
aad
inc
pop
adc
lret
mov
push
adc
and
fistpll
test
rorb
push
push
dec
jbe
dec
push
gs
rcr
insb
add
fwait
pop
mov
popf
test
xorb
leave
adc
es
mov
addr16
cmp
orl
pop
sub
jecxz
icebp
call
inc
sbb
xchg
adcl
jno
inc
xor
xchg
cmc
inc
dec
sub
add
xor
dec
ja
mov
imul
in
sti
fisubrl
aas
ljmp
jl
jp
push
and
xor
adc
or
pop
mov
aaa
xchg
sbb
and
cltd
cli
cmp
scas
lret
repnz
xchg
push
stos
dec
jne
jg
scas
ret
or
lods
adc
mov
xor
popa
xchg
pop
inc
pusha
les
inc
pop
scas
pop
mov
inc
loopne
cmp
lds
sbb
jmp
and
cmp
and
shll
idivl
nop
out
add
add
mov
bound
pop
enter
xchg
or
cs
sbb
adc
inc
xor
rcrl
repz
adcb
sub
jmp
adc
push
sub
movsb
push
and
xchg
dec
mov
lock
xchg
xchg
sub
pop
mov
sbb
or
pushl
rolb
ja
xchg
cmp
jne
jo
inc
push
adc
addb
sbb
dec
lods
loopne
sbb
adc
or
mov
iret
test
repz
adc
xchg
add
jecxz
add
out
lcall
cmpsl
lods
push
test
js
js
push
pusha
inc
push
or
mov
xor
add
ja
ret
popf
inc
mov
dec
nop
push
nop
out
dec
test
pushf
pop
movsb
mov
pusha
lods
or
mov
jb
mov
xorl
addr16
xor
lds
xchg
dec
in
xor
inc
movsb
or
lods
dec
inc
ret
xorb
push
adc
and
fmuls
sub
inc
xlat
and
push
sbb
inc
pop
sub
sbb
pop
sub
push
es
push
cmpl
je
mov
xchg
sbb
jecxz
adc
mov
sbb
inc
sbb
and
pop
fsubs
aaa
cmc
sbb
mov
aam
orl
xor
popw
push
mov
push
pop
ds
push
gs
int
push
test
push
xor
pop
xor
test
and
and
xor
push
push
je
or
je
adc
insl
and
xchg
xchg
out
and
sub
mov
lcall
adc
inc
push
jo
cmpl
imul
xor
loope
loopne
sbb
insb
test
and
shlb
and
add
xchg
sub
jno
pop
pop
adc
scas
adc
lods
xchg
rolb
push
out
inc
pop
cltd
pop
pop
popa
xor
adc
mov
insb
imul
sbb
jecxz
dec
adc
mov
scas
or
or
pop
push
or
dec
jb
les
je
je
push
outsl
cltd
test
test
xchg
sbb
push
mov
dec
popa
or
dec
mov
and
jb
sub
in
dec
sbb
or
not
inc
jmp
nop
es
or
add
push
mov
cld
jnp
and
orl
nop
dec
pop
add
adc
pop
mov
or
cs
sar
push
dec
sub
pusha
xor
push
faddp
or
cs
mov
xchg
push
mov
add
sub
or
inc
ret
out
cmpsl
xor
sub
hlt
add
pop
rcll
sti
or
jmp
sti
cmc
or
push
int3
and
pop
cmp
push
xlat
enter
popa
in
int3
mov
push
pop
sbb
test
mov
dec
push
add
or
ss
and
and
pop
inc
dec
xor
scas
adc
push
fwait
lock
and
jle
adc
add
adc
dec
ja
adc
mov
dec
add
sub
xchg
and
push
cmc
mov
or
push
mov
in
cmp
mov
sub
dec
xchg
daa
in
or
sti
std
imul
jecxz
call
repnz
call
lret
add
nop
ret
add
loopne
imul
xor
push
lea
push
jbe
inc
cld
shll
call
add
or
xor
cmp
fwait
test
in
jo
cmp
jne
shlb
xchg
repz
cmp
jae
fs
adc
adc
dec
or
pop
jp
fs
sbb
pop
adc
sbb
or
adc
jge
rolb
adc
sbb
icebp
cltd
ds
cmp
ret
jbe
ficompl
cmp
les
jmp
shll
or
fdiv
mov
pushf
mov
inc
imulb
nop
les
cwtl
mov
cld
in
jp
push
or
daa
push
mov
jg
pop
adc
fdivrs
and
inc
jno
lods
push
pop
fistpl
stos
mov
lret
push
push
scas
movsl
mov
inc
insl
lret
enter
adc
cwtl
dec
or
sub
push
sbb
push
iret
idiv
add
call
rclb
pop
or
rolb
ret
pop
xchg
xchg
push
icebp
cmpsb
mov
nop
jno
aas
ds
outsl
cmpsb
push
cmp
je
cmp
or
xor
pusha
and
outsb
add
push
call
aas
loopne
les
ss
jge
xor
jne
icebp
cmp
shld
mov
cmp
pop
cmp
push
clc
std
in
mov
dec
cmp
pusha
jl
lcall
cmp
cmc
dec
jmp
push
cwtl
test
icebp
xchg
inc
add
and
mov
lea
lods
nop
inc
push
add
mov
js
cld
pusha
mov
cmp
in
sbb
add
fnstenv
add
or
flds
fsubr
inc
cmp
je
adc
push
sbb
add
xchg
push
jae
xchg
sub
fcomip
insb
out
test
sbb
add
adc
loopne
les
adc
clc
push
or
jp
push
mov
xchg
gs
push
in
or
loopne
mov
fldl
jae
or
pop
aas
jge
call
in
sbb
xor
clc
push
cmp
mov
out
out
fbstp
jnp
xchg
sbb
and
pop
inc
stos
adc
fsub
pop
fsubrp
fnsave
enter
mov
xchg
fdivrp
jmp
jg
add
cs
stos
insb
and
xor
push
shlb
andl
sti
cmp
subl
aaa
subb
fwait
es
adc
leave
or
iret
lret
sbb
pop
test
ljmp
push
push
push
push
iret
or
cmp
and
sarl
mov
add
push
push
pop
adc
sub
addr16
dec
dec
jb
int3
and
cwtl
and
add
and
rclb
mov
fcomps
mov
jg
cli
in
inc
push
and
repz
jbe
jp
and
xor
or
in
xor
or
lret
xchg
cs
inc
push
dec
in
fstpl
lea
xor
nop
push
push
push
and
and
push
mov
or
xchg
lods
cmp
adc
in
in
add
mov
clc
sub
and
pusha
aaa
xor
dec
xor
or
jmp
adc
and
test
sub
lret
and
sub
sub
push
loopne
sub
sbb
dec
push
xor
insb
xor
add
cmp
or
push
push
in
pop
or
jg
pop
cltd
fs
push
cs
dec
inc
sub
lret
pop
xchg
or
or
je
sub
lahf
xchg
inc
iret
cmp
adc
dec
test
xor
mov
fwait
xchg
dec
int3
and
add
sub
bound
jge
gs
ds
xchg
cld
jmp
std
punpckhbw
aaa
adc
add
imul
inc
nop
stos
jae
and
inc
pop
cmpsb
pusha
aaa
insl
lcall
outsl
or
je
and
inc
add
dec
aaa
mov
dec
push
xchg
aam
push
jo
inc
enter
fisttps
in
pop
jecxz
call
sbb
cmp
repz
pop
insb
jge
cmp
repz
imul
sbb
dec
sahf
out
sahf
pop
jo
xchg
mov
jns
out
or
sbb
cmp
pop
iret
repz
outsl
orb
repz
jecxz
push
hlt
push
or
sub
bound
lret
mov
scas
mov
insl
jmp
ret
aas
xchg
jnp
adc
pop
and
test
xor
or
mov
rclb
aam
jne
push
sbb
pop
inc
or
mov
scas
cs
test
cltd
push
adc
inc
mov
fimull
add
push
add
dec
jp
add
leave
inc
popf
pop
add
and
mov
xor
mov
sbb
fcmovne
fs
jns
add
adc
add
inc
mov
test
fsts
andb
mov
aaa
pop
jns
cmp
add
xor
sbb
push
xor
mov
pusha
lock
mov
xor
and
nop
pop
add
cmpsl
nop
add
push
hlt
inc
adc
push
xchg
inc
bound
push
rep
dec
leave
dec
cmp
add
sub
popa
imul
sub
mov
rcll
push
cmp
aaa
mov
filds
cmp
sub
xchg
subb
add
sub
mov
faddp
mov
lods
enter
test
add
adc
jecxz
cmp
push
inc
cmpsb
divb
jle
jnp
push
jecxz
and
movsl
arpl
in
add
popa
call
call
push
add
or
dec
leave
inc
pop
pop
push
xchg
les
pop
addl
add
push
sub
push
and
nop
loope
push
cmp
test
andb
dec
lds
movsl
lock
aad
xchg
lea
xchg
push
pop
aam
xlat
nop
adc
mov
in
shrb
mov
add
sbb
adc
and
sub
sub
mov
pop
out
push
nop
iret
invd
push
or
or
push
andb
sub
adc
popa
xchg
in
adc
inc
push
rclb
les
ja
shl
push
or
push
scas
mov
negb
cmp
test
cmovnp
stos
xchg
and
cs
add
loop
mov
or
in
mov
andb
in
add
fadd
add
dec
fldt
sbb
loope
adc
mov
xchg
push
push
bound
test
dec
and
js
or
add
adcl
sbb
pop
pop
adc
xor
mov
sbb
add
adc
loopne
dec
ret
lock
mov
xlat
aam
sub
mov
pop
mov
sahf
addr16
push
mov
adc
mov
xchg
cmpsb
mov
cmp
mov
and
mov
jo
icebp
inc
test
jle
push
add
cmp
adc
add
int
mov
ret
mov
add
adc
inc
or
lods
jl
fisubs
or
cs
aaa
std
or
add
or
scas
jecxz
insb
int
aad
adc
testl
xor
enter
in
or
cmpsl
mov
xchg
stos
add
cltd
les
and
pop
fs
xchg
add
and
xchg
add
or
jo
inc
and
pop
mov
jo
rolb
repnz
add
sub
inc
add
lahf
sbb
sub
fstl
dec
pop
pop
paddw
mov
push
call
mov
scas
addr16
xchg
dec
pop
ret
or
stos
sbb
enter
push
add
bnd
add
or
jno
xchg
js
repnz
cmp
and
push
add
cmp
add
mov
sbb
sbb
pop
inc
push
cmp
andb
xor
mov
cmp
inc
lea
mov
push
pop
add
lods
nop
iret
and
sub
push
ret
push
xor
push
ret
movsb
sub
add
cltd
in
add
test
in
mov
add
add
add
shrl
adc
xchg
sub
outsl
or
inc
pop
cmp
push
xor
stos
sub
mov
add
test
subb
lods
xchg
insb
rolb
xor
mov
sbb
in
adc
cmp
sbb
xchg
pop
in
dec
mov
and
inc
add
add
add
enter
sub
or
bound
repz
inc
xor
arpl
jmp
or
dec
movsl
jmp
cmp
loopne
push
mov
jle
cmp
ret
inc
mov
push
adc
in
push
cmpsl
mov
add
dec
mov
mov
shll
mov
in
adc
addb
jnp
pop
ja
jge
stc
je
push
inc
add
or
mov
fs
dec
dec
je
cmp
adc
push
repnz
adc
out
sbb
fabs
fiaddl
ficoml
and
aaa
scas
jo
inc
add
push
test
shlb
cmp
add
add
adc
imul
or
test
xlat
roll
xlat
xchg
xchg
mov
xchg
jl
and
sbb
ss
adc
shrb
and
push
or
arpl
cwtl
fcomps
xor
outsb
into
inc
sub
test
add
insl
data16
push
inc
fmull
mov
or
push
fildl
sbb
push
les
pusha
sub
mov
xchg
pop
fbld
shlb
jp
add
adc
ret
ss
mov
cs
and
and
push
test
xchg
je
lret
push
inc
dec
xchg
fistpl
push
mov
mov
gs
adc
dec
jne
adc
push
fs
dec
or
pushf
add
mov
and
add
test
call
cmp
jne
iret
test
sbb
jl
mov
in
add
xchg
std
or
or
in
and
sub
push
jecxz
rcrl
dec
add
in
cs
out
adc
lea
aas
push
sbb
inc
sbb
cmpsl
insl
stos
test
gs
push
loopne
mov
shr
clc
loopne
fcmovnbe
xchg
lock
sbb
popa
imul
add
inc
cltd
sbb
push
iret
sub
xchg
or
cmpsb
inc
jae
leave
addb
jecxz
inc
inc
pop
mov
mov
mov
push
ljmp
adc
push
mov
jp
jmp
inc
sub
sbb
push
pop
push
mov
push
mov
loopne
dec
mov
shll
negb
or
adc
jl
xor
jmp
cmp
imul
adc
jle
xor
std
pop
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
sarb
xorb
idiv
push
mov
pushf
mov
repnz
in
loop
xor
in
je
mov
in
test
in
mov
ret
or
mov
pop
ret
xorl
add
test
or
add
or
cmp
pop
iret
cmpsb
dec
xchg
push
and
dec
call
inc
and
lret
in
in
in
and
jnp
incb
add
or
dec
mov
mov
dec
not
adc
fsubl
mov
xchg
push
or
fcmovb
mov
mov
and
dec
js
scas
aas
bnd
cmpsw
in
repz
pop
push
les
mov
movsb
add
push
aaa
cmpl
push
sbb
inc
mov
nop
in
stos
pop
incl
push
mov
repnz
mov
add
cmp
or
pcmpeqb
shl
mov
or
inc
ja
lods
sti
sub
mov
mov
jb
movsl
imul
aam
dec
push
dec
pxor
fcoms
adc
lock
pushf
adc
shlb
push
movsb
rcll
inc
inc
cmp
sbbb
sbb
sub
cmp
lock
xchg
je
bound
cmp
adc
dec
mov
mov
pop
mov
pop
gs
xorb
jge
js
out
ja
or
push
push
or
push
cltd
les
stc
sbb
sbb
and
rorb
push
out
mov
sbb
out
inc
cs
sbb
shr
in
nop
push
fdivs
fnstenv
pop
fdivs
rcrb
aam
and
gs
jo
fidivs
out
cmp
and
leave
enter
mov
and
sub
or
xchg
xchg
xchg
and
inc
loopne
and
jge
push
and
jae
xor
lcall
in
mov
xchg
arpl
add
jns
mov
leave
and
pop
dec
das
inc
xor
xor
sub
add
and
xorl
inc
mov
sbb
dec
nop
or
orl
adc
fs
jo
call
adc
movsb
pushf
xchg
inc
cmpsb
dec
xor
push
in
enter
loope
fucomp
mov
push
lods
mov
and
sub
mov
lea
xchg
jl
jb
int3
imul
add
dec
int3
xchg
notb
cmp
mov
cmp
movsb
mov
dec
push
add
das
or
add
pop
int3
jge
push
jne
or
aas
loopne
in
aaa
xchg
push
mov
movsb
sbb
cli
test
jae
sbb
push
jecxz
inc
movsb
fmull
add
fildl
inc
hlt
fst
add
les
push
mov
mov
sbb
loope
jecxz
sbb
bswap
lock
pusha
inc
fadds
mul
repz
push
js
add
movsb
dec
ss
jae
push
or
pop
push
stc
dec
sysret
int3
sbb
push
pop
test
jge
call
or
and
push
inc
rolb
mov
dec
or
pop
or
out
and
lcall
push
jne
push
mov
mov
es
dec
inc
adc
ja
push
xor
call
hlt
test
sub
sti
mov
stos
ljmp
jmp
shrb
out
xchg
or
out
out
and
cmc
inc
xlat
sarb
shrb
rcrb
adc
imul
jbe
lods
push
xorb
xor
pop
je
mov
mov
lods
in
sub
add
faddp
out
push
push
cmp
sahf
inc
cmc
arpl
int
neg
sub
ds
xchg
shrb
dec
and
in
inc
xlat
and
je
cs
dec
shl
fstpt
cmpsb
pop
sub
sbb
add
mov
int
mov
popa
mov
cmp
dec
rcrl
ljmp
mov
push
outsl
mov
push
jo
jmp
push
push
fwait
or
mov
shlb
pop
jg
or
gs
xor
faddl
hlt
push
imul
jno
cmp
xchg
scas
es
mov
fldenv
in
mov
xchg
aam
and
mov
push
add
adc
inc
out
es
pop
adc
je
and
adc
sbb
add
subb
outsl
adc
mov
pop
mov
jge
add
inc
call
fsubrs
cmp
ja
pusha
push
pop
scas
xor
mov
rclb
add
lcall
push
shrl
loopne
mov
js
add
test
hlt
pop
add
and
mov
mov
sub
lea
add
scas
jmp
int3
jmp
push
mov
shll
rolb
pop
fiadds
or
rolb
sbb
ficoml
gs
mov
or
imul
loop
aam
insb
movsl
xchg
pusha
xor
je
cld
jmp
pop
stos
and
cmp
imul
adc
rcll
push
andb
mov
jge
jmp
mov
cmp
push
jne
mov
sarb
je
push
loopne
push
sbb
dec
repz
xor
jp
subl
xbegin
and
mov
aam
mov
pop
lcall
pop
or
mov
in
mov
testb
sub
xchg
jle
and
out
add
lcall
or
gs
inc
sub
fwait
cmp
mov
mov
fwait
dec
lcall
adc
and
les
fdivs
xchg
int3
adc
addb
mov
sbb
push
sbb
jp
and
or
cmp
dec
stos
inc
mov
enter
fadd
cltd
lods
and
mov
or
add
test
xchg
ret
adc
lds
or
and
test
aad
xor
pop
fisttpl
adc
pusha
jns,pn
push
mov
lea
aas
inc
push
adcl
pop
sub
add
nop
mov
decl
out
rcrl
cmp
inc
pusha
pop
push
dec
ret
stc
sbb
sbb
movsb
in
adc
fsubrs
cmpsl
push
jg
and
shlb
inc
mov
push
out
adc
xor
mov
sub
add
in
adc
fadds
add
pushf
cmp
movsb
mov
adc
rolb
dec
adc
and
insl
mov
push
and
push
sub
jne
ja
mov
jmp
daa
mov
cmp
cmp
push
mov
lods
jp
rcll
jae
shrb
gs
in
cmp
push
cmp
sub
pop
inc
cmp
xor
ljmp
in
es
sbb
mov
or
mov
sbb
movsl
rcrb
sbb
adc
sbb
add
movsb
or
movsl
xorl
add
add
sub
dec
cmp
jmp
push
cmp
push
enter
push
add
dec
into
into
aad
aad
movsl
inc
js
sub
mov
mov
add
push
ficoms
add
es
mov
rcrb
scas
jmp
pop
jo
or
pop
jo
sbb
adc
fimull
or
and
mov
push
xchg
and
pop
insb
std
adc
or
mov
fisttps
movsl
repnz
add
add
mov
inc
add
fldl
into
lret
jo
mov
xor
mov
xchg
push
cltd
in
in
mov
pusha
adc
repz
and
ds
sbb
fmull
or
imul
xlat
call
repz
sbb
lret
inc
xor
call
pushf
fldenv
add
out
or
or
in
addl
sbb
and
add
in
adc
xor
sub
pop
dec
out
ds
pop
daa
rcl
mov
mov
sub
adc
aam
dec
and
cmpl
xorl
or
pop
lahf
push
pop
xor
or
rcll
daa
mov
mov
jnp
daa
lock
lahf
insl
xor
mov
xchg
lock
push
mov
add
bound
adc
xchg
rclb
adc
mov
mov
iret
adc
pop
dec
addr16
jns
call
xchg
leave
mov
push
jae
push
add
or
and
sbb
shlb
xchg
iret
in
sub
repz
xchg
mov
lods
stos
in
dec
inc
xchg
ret
std
mov
mov
push
dec
sub
add
clc
adc
adc
or
push
repnz
add
mov
xchg
push
sbb
popa
mov
lods
loop
add
mov
mov
jne
inc
cmpsl
add
or
sbbb
push
aam
push
mov
lods
and
jbe
addl
xor
cmp
xchg
xor
mov
xchg
mov
daa
mov
push
lods
in
xor
mov
enter
push
mov
push
test
add
popa
sub
push
scas
sbb
cmp
jne
mov
mov
mov
adc
or
mov
push
add
jo
lcall
in
pop
in
inc
adc
addl
add
mov
loope
fnstsw
imul
addl
cltd
jb
or
sarl
cli
das
pop
in
inc
and
jecxz
shrb
mov
cmp
jnp
adc
inc
or
pusha
dec
push
lock
dec
lock
add
in
dec
push
pop
dec
andb
clc
mov
xor
or
or
xor
sbb
xchg
sti
cmp
jae
mov
jp
inc
cli
mov
pop
mov
pusha
std
and
addr16
dec
adc
mov
gs
jne
and
std
gs
fdivl
out
pop
sub
lods
adc
insb
inc
dec
add
js
and
pop
hlt
gs
std
js
sub
sub
sbb
mov
dec
sub
inc
inc
dec
lock
pop
orl
leave
adc
and
mov
push
sarb
aad
sbb
mov
cs
and
xor
jmp
mov
xor
dec
outsb
xor
push
push
push
fisttpll
xchg
pop
imul
or
sbb
popa
adc
mov
inc
daa
jb
cmp
lret
xor
sub
sub
popf
add
or
call
add
or
add
add
inc
cmp
rclb
adc
add
push
movd
sub
push
cmp
sbb
loope
xor
add
addl
inc
sub
sbb
ret
cmp
pop
and
jl
or
cmp
ret
jo
jne
sarb
cmovno
xor
fnstsw
cmp
jo
or
add
popa
push
cs
mov
jb
and
and
repz
and
rcrl
or
push
dec
data16
xorl
adcb
pop
call
xor
je
pop
or
test
test
je
cld
jae
pop
or
xor
insb
pusha
inc
dec
xchg
sbb
pop
sbb
and
movsb
mov
enter
inc
cmp
lret
pop
sub
addb
sub
dec
push
add
sbb
and
adc
pop
adc
push
mov
and
adc
add
jl
mov
insb
xchg
pusha
pop
add
orl
aaa
lods
jnp
ss
pop
mov
scas
cltd
add
xchg
je
push
push
fbstp
sbb
es
test
xchg
push
xchg
sub
jo
rcrb
movsb
ja
je
and
add
pop
pop
inc
sbb
outsb
cmp
pop
add
pop
mov
jmp
pop
sub
in
add
sub
add
inc
mov
jne
or
enter
push
dec
pop
lods
inc
fwait
iret
in
and
add
sbb
enter
push
scas
add
push
or
sbbb
or
add
rolb
push
mov
add
je
jg
add
lds
xchg
inc
pop
mov
add
movsl
pop
lret
push
or
mov
popf
jne
sbb
xchg
and
inc
sub
and
icebp
pop
mov
les
dec
adc
inc
mov
mov
and
cmp
mov
mov
add
loopne
movsl
cmp
idivb
xor
cs
and
cmpsl
pop
add
ret
adc
push
or
fs
sti
xchg
cltd
pusha
sbb
dec
int
jbe
pop
adc
dec
jmp
adc
mov
lret
mov
popa
cmp
pop
ret
push
arpl
lods
jl
punpckhbw
sbb
in
ja
and
std
fisubl
dec
ja
push
popf
je
sub
add
sbb
or
mov
mov
inc
dec
sub
sbb
fwait
pop
push
xlat
cmp
push
inc
xor
les
daa
sub
jb
cmp
dec
js
add
cmpsl
and
cmp
jbe
adc
pusha
sub
xor
sbb
inc
xor
adc
loop
inc
les
shlb
ds
loopne
je
push
jo
cs
sbb
push
in
ljmp
inc
cmp
pop
cmpsb
in
daa
xor
lods
mov
int3
cmp
push
fstpt
sbb
inc
scas
loopne
test
jmp
sub
adc
bnd
cmp
and
daa
sbb
xchg
nop
rcrb
ja
mov
push
popa
inc
scas
mov
and
pop
aaa
jo
icebp
cltd
sub
sbbb
mov
push
and
pop
xor
mov
and
inc
and
imul
inc
sub
and
addl
dec
jg
pop
lods
outsb
inc
jo
jns
jnp
cmp
sbb
imul
pusha
bound
mov
inc
outsb
push
xor
es
pop
lods
dec
aad
rorb
push
dec
movsb
sbb
cmp
daa
das
or
fisubrs
xlat
stos
enter
popf
sbb
push
in
sub
int
dec
add
push
add
xlat
and
sub
xchg
sub
xchg
ffree
test
pop
and
sub
push
add
aam
loopne
mov
je
push
ficomps
icebp
dec
ja
fs
cs
sbb
jo
subb
sub
lock
and
testl
dec
add
mov
dec
es
push
cmp
dec
adc
lea
sub
sbb
jo
xor
sub
push
jno
imul
pop
je
jnp
rol
sub
js
add
mov
cmp
xor
lods
xchg
aas
in
add
cmpsb
cld
pop
shrb
push
jmp
jmp
jge
adc
jmp
xchg
add
xor
push
les
aaa
add
in
ret
add
jo
push
add
loop
dec
mov
rcrb
sbb
lock
push
enter
gs
pop
sub
lahf
sub
ret
mov
movsb
cmp
dec
jne
sub
sbb
clc
movsl
add
and
fldt
adc
jp
stc
mov
adc
addr16
int
test
lods
cld
inc
adcb
mov
dec
pop
cli
or
les
sub
pop
test
jge
mov
add
loope
add
fisubrl
imul
push
cmp
leave
movsb
testb
mov
and
mov
cmp
xor
push
mov
xor
sbb
movsb
mov
push
mov
mov
cmpsl
adc
test
inc
cmp
inc
jb
pop
pop
jne
mov
sub
andb
ja
sbb
pop
push
or
pop
ret
or
mov
sub
scas
xchg
rolb
xchg
sbbb
inc
cmpsl
lret
cmp
lret
clc
in
pop
inc
loopne
pop
ljmp
pmaxub
dec
ja
or
pop
cmp
fwait
sbb
mov
xor
pop
test
int3
into
push
sub
add
jmp
fstps
movsl
leave
mov
loopne
dec
pop
psubw
inc
jecxz
or
ja
adcl
cmp
stc
popa
add
jmp
dec
push
fisttpl
add
push
push
repnz
pop
xor
stos
setns
jb
sbb
push
pop
cmpl
xor
dec
xchg
movsl
xchg
jle
cli
xchg
mov
in
inc
cmp
mov
int
cmpsl
xchg
cmp
div
adc
out
stos
and
xor
sbb
push
jne
push
dec
or
imul
lods
pop
jb
xchg
mov
adc
pmulhuw
xor
mov
push
and
dec
sub
pop
cmpsl
aad
or
dec
shlb
loopne
sub
cmp
cmp
adc
jl
or
fs
rolb
das
dec
test
mov
repnz
xchg
js
es
jbe
cmp
or
adc
add
loop
or
mov
pop
orl
dec
fcomp
out
lds
mov
shlb
cld
pop
pushf
or
movsb
je
fucomp
xor
pop
sbb
lea
fadds
ja
pop
inc
imul
dec
adc
push
add
push
aad
xchg
mov
jg
mov
add
or
arpl
inc
inc
xchg
adcl
mov
pop
leave
pop
testl
or
insl
call
xor
cmp
cmp
push
push
mov
cmp
test
loope
fdivrs
popa
xchg
mov
adc
mov
push
cmp
and
add
cld
in
cmpsb
mov
std
or
cmp
aaa
pop
cs
rcpps
mov
mov
add
loope
cmp
xchg
mov
cs
mov
std
mov
int3
rcr
cmpsl
popf
jo
adc
cmpl
ljmp
loopne
in
lock
test
test
int
add
pop
rclb
out
sub
leave
lret
test
xchg
cmp
mov
cmp
lea
out
imul
xor
mov
lea
test
popf
fcoml
rcrb
sbb
jae
sub
jge
jb
xor
cmpl
pushl
test
decb
fwait
rorl
lea
inc
out
inc
or
ds
push
js
pop
pop
lea
dec
dec
mov
roll
pop
and
mov
lea
adc
add
dec
dec
les
aam
lock
psrld
incl
cmp
fiaddl
nop
pop
push
es
movsb
and
fsubrl
and
out
fsubl
cld
xchg
mov
aam
jl
pop
shrl
shll
jo
cmp
mov
adc
aam
scas
sbb
mov
mov
push
cmpsb
xchg
loope
sahf
inc
adcb
test
xlat
mov
dec
adc
imul
test
cmp
loopne
imul
sbb
mov
out
addb
es
xchg
jno
cmp
inc
es
imul
xor
addl
sub
adc
add
leave
test
call
dec
xor
call
or
inc
ljmp
add
xor
jle
lods
pop
push
mov
mov
push
adc
imul
cmp
xor
in
sbb
push
push
arpl
mov
movsb
xor
sub
add
xchg
mov
dec
popf
dec
adc
mov
imul
and
push
push
mov
dec
repnz
cmp
shl
cmp
jecxz
cwtl
inc
inc
push
adc
pop
adc
push
sbb
inc
pushl
or
lods
cmp
adc
fwait
mov
daa
cmp
adcb
stos
imul
sub
cwtl
xchg
inc
inc
or
mov
push
push
out
push
push
inc
inc
xorb
pop
or
pop
jo
popf
shrb
cmovb
rorl
iret
sarb
sbb
js
sbb
sbb
dec
push
and
decl
xchg
push
loopne
mov
lds
jo
and
push
sub
adc
and
lret
xor
push
cmp
push
adc
test
es
and
wbinvd
arpl
and
mov
mov
and
adc
dec
or
push
sub
pop
pushl
push
push
sahf
je
mov
mov
test
out
in
in
jmp
fwait
dec
movsl
ljmp
popf
cld
mov
inc
dec
xorl
inc
popa
xchg
inc
jecxz
push
imul
adc
mov
popa
dec
or
shrb
sub
ds
pop
cmc
pop
pop
sub
rclb
add
ror
and
lock
fscale
rolb
cmpsl
icebp
add
xor
lds
cmpsb
mov
es
sbb
nop
mov
inc
les
cmp
inc
jg
js
std
xor
push
std
lock
lea
movl
rcrl
cmpsb
imul
add
or
xor
jb
jb
in
pop
int3
add
jno
shlb
fwait
push
adc
add
jp
pop
push
and
bound
add
gs
push
adc
or
cmc
xor
dec
pop
jne
push
rclb
insl
and
push
lock
leave
cmp
or
adc
xchg
and
add
and
in
sbb
inc
test
adc
push
pop
enter
adc
and
push
or
sbb
je
jne
adc
inc
ret
sbb
in
push
mov
xor
add
and
in
pop
mov
adc
and
mov
mov
xchg
or
movsl
push
repnz
mov
adc
js
imul
sbb
pushf
push
add
xchg
add
loopne
cltd
push
add
xor
lcall
and
adcl
xor
jo
xor
sti
into
out
les
in
mov
mov
push
int3
push
fcompl
and
dec
ja
jecxz
jmp
inc
hlt
dec
jnp
adcl
push
aam
and
cmp
xor
and
icebp
or
loopne
test
pop
fs
clc
mov
movsl
dec
cmp
in
std
ss
and
insb
adc
xor
int3
xor
cmp
mov
pushf
xchg
sahf
arpl
mov
push
iret
aad
adc
shrl
out
inc
push
push
adc
mov
inc
ret
aam
daa
icebp
add
mov
push
mov
nop
mov
mov
xor
cld
xor
cmp
mov
sarl
add
push
test
dec
pusha
dec
leave
outsb
repz
dec
imul
icebp
jne
stc
jns
dec
pop
add
cmp
out
ja
je
popa
jnp
insb
xchg
inc
scas
adc
jmp
or
add
dec
popf
pop
mov
mov
add
xlat
cmp
sub
call
push
ljmp
mov
ljmp
and
aad
dec
mov
mov
orl
xorb
daa
adc
les
cmp
adc
jne
mov
push
rolb
popa
adc
addb
jl
adc
inc
adc
mov
adc
movl
pushf
xor
lea
test
jl
cmpl
jecxz
neg
pop
sbb
inc
mov
and
jno
rcrl
js
push
xor
cmp
repz
sbb
popa
js
mov
mov
mov
mov
ret
jnp
adc
call
dec
fwait
and
sub
sar
sbb
adc
cmc
fldt
jecxz
xchg
sbb
jg
add
in
adc
ret
rorb
lret
xor
or
push
mov
imul
push
or
test
std
js
loope
sbb
fimull
bound
sarl
not
outsl
cmpl
xor
js
xor
jmp
inc
loop
dec
add
ficoms
testl
fscale
or
out
push
or
dec
ret
ljmp
mov
sbb
cmp
sub
movsb
xor
push
out
mov
push
mov
cld
and
pop
je
mov
rolb
mulb
or
xchg
cmpsb
stc
gs
or
inc
ds
pop
test
stos
pop
out
sub
gs
xchg
ret
or
push
mov
dec
inc
mov
pop
stc
cmp
dec
push
mov
push
push
dec
push
jle
push
push
push
call
cmp
inc
push
push
inc
lcall
mov
mov
jmp
xor
sub
in
inc
xchg
push
hlt
loop
in
mov
jecxz
mov
push
pusha
add
jmp
add
cmp
icebp
mov
or
inc
or
ret
movsl
adc
mov
or
push
add
xor
out
add
out
jns
nop
mov
sbb
mov
in
add
scas
push
push
imull
sub
adcl
cmp
push
call
sbb
dec
xor
imull
adc
mov
jns
incb
leave
aad
jae
cmp
outsl
ret
xchg
ss
push
push
dec
inc
add
repnz
pop
test
int3
mov
jg
pop
sti
shr
push
push
and
insl
fnstsw
cld
and
add
mov
jg
addr16
push
push
vmread
xchg
mov
dec
test
aaa
dec
pop
push
leave
cli
insl
pop
mov
add
mov
cmc
mov
pop
loopne
jmp
insb
push
or
mov
pop
push
movzwl
inc
mov
inc
loopne
stc
lock
insb
jl
cmp
mov
adc
fisubrs
sub
mov
adc
jns
cmp
pop
lret
or
push
jbe
loop
mov
lret
sub
or
test
rcrb
mov
push
or
rcrb
push
cmp
cmpsl
popf
mov
dec
jg
lahf
in
add
add
inc
data16
add
push
scas
inc
cmp
rcrb
out
inc
adc
movb
sbb
jo
adc
cmpb
mov
mov
movl
stc
sbb
orl
test
mov
add
inc
test
add
ds
push
mov
inc
mov
xchg
outsl
rep
movsw
push
cld
cwtl
cmp
or
ja
hlt
ljmp
shr
mov
inc
mov
push
pop
fdivrp
adc
movb
cmpb
scas
cmpsb
and
xor
jg
push
and
mov
inc
adcl
shr
mov
movsbl
xor
pop
test
push
push
shl
sbb
jb
and
push
cld
or
pop
je
push
push
add
mov
imul
add
mulb
mov
pop
and
xor
xchg
pop
fisubrl
mov
dec
insb
imul
inc
add
movl
subl
or
fs
add
xchg
pop
mov
dec
cmp
jl
push
cmp
iret
inc
pop
mov
xor
xor
inc
rclb
push
dec
xor
push
and
xorl
cmc
adc
popf
adc
loopne
ljmp
jle
inc
jle
or
mov
mov
cwtl
dec
ja
xor
adc
lahf
xchg
or
mov
jle
adcl
imul
cmp
cmp
push
pop
or
fdivrl
or
jnp
or
jbe
jmp
or
push
jmp
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
push
jmp
pop
jmp
sbb
xor
fcompl
jmp
sbb
es
and
push
jmp
pop
jmp
and
or
cmp
add
adc
fimull
push
add
push
andb
cmp
fiaddl
stos
xchg
push
iret
repz
mov
ret
lret
rcr
cmp
repz
jmp
clc
std
jns
cmpsl
stc
add
out
sahf
out
and
jns
xor
ds
dec
dec
jns
out
push
push
pop
popa
data16
out
jo
or
add
testb
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
dec
dec
mov
and
or
add
sbb
test
cmpsl
hlt
mov
jle
cmp
std
fwait
xor
cmp
jle
mov
test
pop
jge
or
in
lea
dec
and
jne
pop
fdivl
in
xchg
ljmp
mov
lea
xchg
shl
or
and
cltd
adc
sbb
pop
jge
lock
cs
mov
mov
ds
inc
cmp
jbe
dec
sub
and
mov
mov
push
mov
movsb
push
jmp
inc
push
push
adc
push
pop
cmc
pop
pop
bnd
mov
pop
inc
push
or
iret
adc
adc
dec
push
cwtl
ret
push
add
sbb
dec
lahf
xor
sub
aam
test
dec
mov
in
inc
int3
add
nop
lret
hlt
ret
repnz
inc
or
fstpl
into
aam
dec
loopne
mov
test
inc
mov
ja
into
add
add
je
pop
xorb
in
inc
xchg
sub
jmp
inc
inc
ja
or
mov
xor
fstp
mov
sbb
add
inc
in
mov
mov
cmp
popf
jmp
xor
push
fs
dec
push
pop
xchg
repz
adcb
inc
sbb
sbb
xor
add
add
jns
leave
adc
mov
sub
sbb
xor
test
call
int
jns
xorb
push
pop
mov
add
push
xor
xor
dec
int
adc
outsl
in
movsb
pop
pop
sub
push
push
ss
and
mov
xlat
andl
jne
int
adc
test
xlat
push
inc
pop
loopne
rol
aaa
orb
stos
js
outsb
lock
das
pushf
repnz
nop
rcr
outsl
jmp
mov
jne
and
cmp
jne
jno
aas
cwtl
hlt
add
pop
ss
mov
xor
inc
add
push
mov
cmp
fcompl
xor
pop
loopne
dec
and
idiv
rorb
and
xor
xchg
je
loope
and
sahf
lcall
movsb
xor
lahf
cld
push
clc
lock
mov
dec
je
xchg
clc
je
mov
sbb
push
xor
adc
pop
or
adc
insb
sarl
pop
sub
or
xchg
sahf
rcl
xchg
or
rclb
cmp
pop
add
into
addb
pop
test
ror
inc
popa
loop
add
cltd
js
mov
movsl
push
push
inc
and
ss
inc
mov
dec
push
lock
cwtl
addb
xor
mov
mov
call
mov
and
inc
xor
clc
xchg
cltd
push
and
ret
mov
mov
jo
dec
mov
addl
pusha
leave
adc
pop
test
cmpsb
jns
adc
pop
outsl
shr
cmp
inc
add
sbb
push
test
popa
push
adc
add
inc
add
jae
mov
add
push
push
cwtl
or
sub
lahf
push
jne
push
in
push
add
sub
sub
add
mov
in
cli
push
jmp
add
push
aam
pop
push
adc
xor
addr16
or
inc
enter
sub
add
int
add
scas
mov
rolb
scas
pop
mov
sbb
stos
push
push
mov
rcrl
rclb
xor
cmp
cmp
add
lret
xor
mov
inc
test
sbb
ss
call
inc
dec
pop
mov
or
dec
and
or
ret
push
jo
clc
shlb
popa
or
push
test
daa
push
jmp
adc
pop
pop
dec
insl
popa
adc
popf
xor
nop
xchg
push
or
leave
adc
cmp
loopne
jnp
sub
or
addr16
add
mov
ljmp
lods
pop
push
cmp
add
push
nop
test
loopne
sub
push
fsubl
adc
jb
fmuls
sbb
mov
rcr
add
fisubl
xchg
xchg
pop
mov
push
fistl
mov
mov
sub
or
imul
xchg
inc
sbb
xchg
jp
cmp
cmp
add
leave
push
loope
fisubrl
inc
fmul
aaa
and
add
jne
mov
mull
out
or
xlat
xor
mov
sbb
and
inc
xchg
sub
jne
popl
orb
jl
inc
adc
adc
popf
inc
pusha
lds
outsl
mov
or
or
mov
cmp
loope
lds
push
sub
repnz
cs
sbb
xor
testb
add
insb
inc
jb
inc
xor
sbb
push
push
aas
rclb
mov
xchg
je
nop
pop
xchg
cwtl
add
js
lret
nop
add
xor
frstor
test
lods
mov
and
xchg
outsb
xchg
lret
mov
xchg
outsb
rcrb
enter
es
xor
add
cmp
enter
pop
stos
test
je
or
push
imul
inc
ficomps
or
lea
add
mov
jae
ret
fsubrl
popa
sub
xchg
je
jl
and
xor
in
je
or
testb
scas
sub
cld
push
int3
lea
add
or
inc
push
and
imul
ret
xor
sti
das
cmp
dec
outsb
std
jmp
sub
sti
lods
sub
inc
and
mov
sarb
testb
imul
or
or
sub
push
mov
into
or
xor
mov
jbe
mov
cld
stos
mov
pop
sti
cmp
je
ret
and
and
das
insl
insl
dec
popf
jmp
rcrl
xor
in
lock
xchg
or
jae
int
xor
das
sub
daa
insb
je
js
pusha
pop
mov
sbb
gs
jmp
fwait
stc
xchg
fsts
sub
or
lods
sub
sub
jns
mov
cmp
push
sbb
jg
xorb
addl
push
hlt
cmp
jl
cmp
jle
mov
fisubl
pop
jne
inc
jne
cmp
xchg
push
popf
movsb
adc
mov
xor
hlt
mov
pop
ret
ret
sbb
iret
sub
ljmp
lock
pop
adc
adc
js
add
pop
das
sbb
inc
pop
inc
cmpsb
push
jbe
inc
shrl
cmp
or
xor
bound
pusha
cmp
cmp
push
js
cli
leave
loop
in
inc
sbb
rorl
sub
nop
fdivrs
into
pop
test
xchg
pop
and
insb
dec
aad
lahf
mov
mov
lret
cltd
test
sbb
ret
push
adc
pushf
and
sarb
pop
and
pop
inc
sub
sub
fistpll
sbb
fs
rcll
and
xchg
and
xchg
push
hlt
cmp
pop
xchg
adc
xor
shrb
in
jge
or
mov
lahf
stos
push
dec
xchg
in
repnz
add
popa
cmp
scas
push
scas
pop
or
adc
cmp
je
xor
popa
cld
push
pop
add
lahf
dec
clc
adc
enter
xchg
xchg
insl
mov
dec
movsl
popf
lods
inc
cwtl
fcoms
outsl
loopne
stos
push
jno
mov
dec
mov
mov
aaa
mov
fs
jo
xor
les
adc
jne
shlb
je
xchg
loop
lods
dec
cmp
xchg
mov
or
mov
jmp
js
xchg
sbb
dec
sahf
inc
fbstp
xlat
fs
inc
xor
test
sub
aas
inc
mov
xchg
push
test
mov
jl
repz
in
or
jecxz
lock
bound
mov
in
cmp
mov
adc
stc
push
lea
adc
push
movsb
bound
and
lods
sbb
loope
scas
cltd
or
frstor
adc
push
enter
and
ja
xchg
mov
or
jecxz
mov
outsl
and
arpl
sub
sbb
mov
and
and
add
mov
lea
pushl
rorb
inc
xor
sub
dec
outsl
inc
push
sbb
inc
sbb
mov
push
adc
aaa
inc
sub
pop
fdivs
ja
sbb
mov
decl
mov
lret
dec
sub
fs
pop
ret
clc
xchg
xor
xor
pop
add
adc
or
pop
xchg
pop
imul
cmpl
mov
sub
arpl
in
pop
adc
mov
aaa
or
into
shlb
and
fwait
jmp
jbe
andb
mov
sti
mov
jb
das
imul
aam
jl
bound
pop
jbe
sbb
cmp
add
mov
ud2
psubw
xor
add
hlt
popf
or
adc
sbb
icebp
push
push
and
pop
cmp
jmp
bound
rorb
cs
movsl
xor
icebp
push
jg
dec
and
sub
shlb
mov
inc
out
scas
scas
mov
loopne
test
xor
xor
rorb
ljmp
push
xchg
out
push
aam
lods
call
sahf
add
inc
mov
das
call
push
test
ret
inc
dec
adc
ret
into
mov
jo
imul
in
test
call
and
test
mov
pop
stc
orb
and
enter
popa
or
push
push
dec
jbe
test
pop
std
or
clc
lods
sub
sub
push
mov
or
dec
in
mov
xor
dec
pop
mov
push
sbb
ds
adc
push
mov
sbb
pop
sub
xchg
cmp
lock
adc
xchg
inc
leave
sbb
cs
sbbl
mov
xor
push
sub
xor
sub
aas
inc
movsb
imul
dec
push
fwait
popl
ret
jp
push
decl
adc
or
sbb
add
fstl
push
sub
fldz
fcomp
fnstsw
cld
frstor
pop
fsubr
pop
faddp
cmp
push
ds
test
adc
or
sbb
and
add
add
sbb
push
lret
jg
xor
in
inc
push
mov
jns
nop
lret
pop
hlt
xlat
hlt
pop
hlt
stc
dec
jmp
cmp
inc
es
push
lea
hlt
xchg
sub
jmp
loop
sbb
mov
sbb
cwtl
add
inc
mov
icebp
das
sub
mov
stc
sub
mov
fdivs
pusha
call
gs
mov
jnp
rcr
xor
sbb
aad
cmp
and
xchg
dec
mov
lea
xor
sarb
cmp
popa
mov
mov
lcall
inc
test
push
or
mov
adc
push
sbb
lcall
xchg
fcomps
pop
jbe
dec
hlt
add
xchg
clc
es
jmp
das
int3
int3
add
push
or
jp
and
cwtl
sub
imul
mov
imul
out
int3
xchg
movsl
dec
jnp
or
in
dec
test
iret
scas
fcomps
sub
mov
nopl
std
pushl
jle
push
dec
push
pop
inc
push
andl
les
lret
xor
mov
rol
cmp
dec
addl
sbb
xor
aam
insl
mov
sbb
cmpsl
movsb
ss
aam
add
xchg
or
sbb
adc
pushf
and
jne
xchg
movsb
iret
and
or
ja
pop
mov
adc
add
add
shlb
push
xchg
push
jo
push
or
cmp
mov
inc
mov
xchg
sbb
xor
and
arpl
mov
jge
xchg
mov
and
fs
mov
pop
sub
xchg
enter
sti
scas
int
sbb
jb
aaa
aaa
mov
or
aaa
add
popa
push
xor
pop
or
cmp
pop
fs
inc
mov
insb
pop
ja
lahf
cmp
jb
push
or
lcall
test
sbb
xor
add
mov
in
add
add
loopne
lods
adc
mulb
aam
mov
dec
loope
mov
mov
xchg
mov
stc
je
and
xchg
or
jecxz
test
pushf
das
jbe
pop
lret
jecxz
testl
pop
fwait
jne
sarl
imul
test
mov
inc
xchg
bound
jae
fs
xlat
sub
sbb
adc
rolb
sub
ficompl
xor
adc
dec
pop
andl
pusha
or
sti
loop
lret
negl
stc
add
sbb
pop
push
pop
xchg
inc
popf
mov
pop
subps
cmp
jo
je
cwtl
out
xor
int3
adc
xorb
roll
pop
sbbb
mov
or
movsb
sub
pusha
and
das
pop
dec
jne,pt
mov
cmp
aam
adc
add
push
pop
pop
ficompl
or
cmp
je
xor
push
push
movsb
lock
jmp
jecxz
inc
add
adc
push
or
xchg
in
mov
leave
rcrl
mov
mov
lock
xchg
cmp
jae
lret
or
adc
fmuls
sbb
test
jmp
movsl
subl
adc
fdivs
or
push
mov
push
enter
test
xchg
inc
xchg
push
cli
aaa
test
cmp
jb
sbb
jae
scas
sub
lea
outsb
popa
pop
jbe
mov
xor
lods
jne
push
push
push
dec
aad
xchg
shl
das
loope
inc
add
cmpsb
ret
mov
out
pop
fwait
cmp
test
push
dec
rolb
lods
mov
inc
mov
or
dec
loop
inc
test
lea
add
or
mov
shlb
sub
adc
call
cmpsl
nop
pop
adc
out
stos
and
add
push
loope
cmp
loop
pop
sbb
stos
add
dec
iret
call
xchg
dec
or
mov
or
rorb
and
push
xchg
or
pop
sbb
mov
push
pop
movb
sbb
inc
ja
push
push
cs
or
ret
jl
stos
repz
mov
in
dec
adc
les
adc
call
call
test
adc
jns
adc
sbbb
pop
call
pop
add
test
pusha
ss
out
xchg
and
in
or
and
aam
cmp
das
adc
scas
test
aaa
loop
inc
mov
sbb
xor
orl
enter
das
movsb
imul
pop
jb
pop
push
xchg
add
jo
push
mov
rolb
inc
mov
adc
xchg
sbbl
push
stos
add
int3
push
xchg
fimuls
dec
leave
outsb
pushf
xchg
loope
cmp
or
mov
rcr
test
imul
popa
xchg
xchg
leave
lods
xor
fdivs
add
adc
or
in
add
mov
aam
outsb
or
xchg
mov
pop
sub
mov
sub
jae
call
add
pop
sbb
cmp
dec
sbb
and
adc
in
cwtl
ret
or
or
in
test
arpl
cmp
inc
cmp
dec
imul
push
sbb
mov
inc
mov
into
push
mov
push
mov
cmp
add
and
dec
dec
int3
addr16
cltd
xor
lock
jge
dec
xlat
and
inc
sub
nop
nop
push
jg
lods
fists
jno
dec
into
lcall
jbe
mov
rorb
outsl
add
pop
test
fidivrl
add
push
add
inc
pop
mov
sub
push
adc
mov
sahf
mov
sub
mov
sub
lock
add
push
pop
or
shlb
mov
mov
add
lock
imul
pop
imul
or
nop
iret
sbb
mov
push
sub
das
test
push
adc
sbb
mov
in
xor
push
xchg
add
js
stos
xchg
xchg
imul
sub
scas
xchg
ja
or
add
rcll
xchg
pop
outsb
lret
sbb
xor
inc
or
mov
inc
rcr
push
xchg
mov
mov
js
add
sbb
or
mov
pop
xchg
jmp
icebp
push
cli
mov
lea
sub
ret
sbb
xor
inc
or
jmp
sbb
xlat
mov
xchg
das
xor
jl
jg
push
mov
jae
or
add
inc
test
push
fs
xorb
pop
push
incl
in
push
jo
and
je
sub
loopne
xor
and
sti
or
xorb
sbb
jle
incb
sbb
insl
or
add
mov
cmp
mov
mov
xchg
xor
imul
pop
imul
insb
movl
fsubrs
fs
sahf
inc
sub
fcomps
push
or
in
aad
ret
or
je
pop
lock
sub
pop
lea
add
into
and
cmpsl
dec
aas
popf
push
push
js
das
stos
pop
dec
push
and
mov
sbb
dec
xor
mov
adc
jmp
call
pushf
test
es
push
adc
js
cmp
add
mov
fcoml
inc
or
fnstcw
or
leave
or
mov
inc
loopne
mov
adc
data16
and
sub
pusha
cmp
push
adc
add
or
adc
mov
fsubl
ror
mov
sub
in
xor
in
popa
push
sti
icebp
mov
mov
mov
adc
adc
inc
mov
out
add
add
daa
fs
es
xchg
pusha
pop
add
jo
scas
mov
add
sub
shl
sub
xor
leave
add
enter
lret
cwtl
pop
xchg
sub
movsb
mov
lock
pop
adc
push
and
xchg
inc
dec
pusha
inc
jo
adc
or
inc
adcb
dec
mov
js
pusha
xor
loopne
or
cmp
inc
loop
out
testl
mov
mov
cmp
sub
fidivs
push
test
mov
fsubs
mov
aad
insl
xor
lea
leave
and
test
ljmp
femms
into
addl
push
adc
rolb
test
adc
mov
mov
daa
clc
xor
iret
fmuls
mov
mov
enter
std
jb
and
cltd
xchg
adc
adcb
popa
loopne
cmp
fldl
and
sub
arpl
movsb
push
scas
adc
inc
imul
add
xor
adc
ficoml
stos
sti
call
push
andb
dec
and
rolb
push
orl
out
xchg
mov
and
cmp
cmp
push
sbb
dec
pop
push
adc
add
xchg
jne
pop
jo
repz
fs
mov
push
sbbb
je
jbe
pop
or
adc
inc
mov
mov
in
cmp
jecxz
and
subl
dec
xor
mov
sub
je
popf
mov
rorb
sub
movsb
mov
call
std
popf
inc
in
and
stc
and
aam
xlat
add
mov
sub
fwait
and
push
or
das
lods
inc
dec
and
sub
dec
sahf
hlt
push
xchg
adc
push
fisubs
adcb
mov
mov
add
cmp
xor
jbe
ret
lea
jo
xlat
sbb
jbe
clc
cmp
jge
dec
inc
and
push
jl
mov
lods
pop
test
inc
ret
sub
mov
xchg
cmp
adc
mov
xchg
sbb
ds
fwait
out
or
dec
mov
scas
insb
imul
add
enter
dec
adc
dec
or
dec
das
push
mov
adc
jns
add
pop
dec
and
movsb
xchg
popf
sub
inc
movb
xchg
cmp
pusha
adc
xchg
xchg
add
jl
push
dec
push
add
xor
hlt
or
adc
sub
clc
cli
or
hlt
dec
cli
mov
iret
std
aaa
incb
test
mov
push
cmp
je
or
je
jge
mov
mov
sbb
sahf
insb
loope
sti
jo
mov
inc
add
adc
add
ret
push
in
and
jno
out
data16
mov
and
test
fidivl
mov
movsl
movsb
or
or
lret
pop
mov
pop
lea
fwait
sti
mov
lea
xor
mov
mov
lahf
jmp
xor
or
das
enter
pop
jp
js
adc
mov
inc
cmp
or
jae
int
push
mov
inc
pushf
nop
push
push
or
mov
jle
filds
pusha
lods
movl
mov
adc
jge
mov
mov
lea
js
test
stos
mov
imul
inc
cmpsl
add
popf
mov
push
lret
movsb
mov
js
mov
cmp
popf
adc
and
xchg
leave
loopne
dec
mov
fistpll
test
mov
in
cld
cmpl
mov
ds
xchg
sti
hlt
xchg
pop
jmp
pop
sbb
enter
dec
nop
xor
insl
int3
loop
out
sub
ss
sub
std
in
dec
sub
pop
les
jno
sti
or
jp
cwtl
inc
xor
inc
ss
enter
stos
out
enter
push
push
push
cmp
or
cmp
jbe
jne
rcrl
fcoms
cwtl
xchg
clc
stc
pop
loope
dec
sti
or
mov
xchg
movsb
lret
cmpsl
push
movsb
ja
in
cld
clc
or
sbb
cmp
cmp
std
mov
es
xor
ds
hlt
outsl
xchg
adc
mov
and
or
dec
or
push
add
push
mov
lea
loop
out
pop
pop
jnp
adc
enter
call
out
pop
mov
mov
dec
stc
push
mov
lea
cmp
pcmpeqd
sub
jns
fimuls
and
cmp
pop
inc
pop
cmp
rorb
pop
add
lahf
mov
lods
mov
push
push
jmp
or
adc
dec
inc
cmpl
sbb
mov
pop
repz
adc
pop
mov
insb
inc
xor
cmp
test
mov
andb
or
push
xchg
cmpsl
sbbb
jbe
mov
pop
sahf
test
mov
xchg
cmpl
lret
dec
push
insb
jg
lods
inc
mov
sub
test
add
jb
lret
sarb
mov
jle
mov
adc
lea
pop
add
xorb
push
push
es
and
sbb
xchg
xor
sub
xor
mov
adc
jns
sahf
out
ret
sbb
cmp
push
push
jl
or
pusha
sbb
or
stos
faddp
outsb
mov
fs
or
out
add
and
push
rolb
cmpsl
and
push
fsub
movsl
add
xor
jg
add
testl
shrb
cwtl
je
and
ror
or
sub
pusha
push
popa
nop
ret
pop
fdiv
les
test
loop
test
in
rol
pop
je
dec
jb
xchg
dec
fs
loopne
push
pop
leave
and
call
or
mov
outsl
adc
mov
add
adc
je
call
jecxz
mov
pop
mov
mov
loope
xor
leave
cmovl
mov
addr16
push
push
pop
mov
les
fnstenv
mov
and
pop
out
rorl
mov
insb
sbb
dec
cltd
daa
lret
mov
adcl
addr16
insb
hlt
mov
in
push
les
fdivs
imul
mov
inc
mov
lock
nop
lods
mov
jl
sub
and
adc
hlt
xchg
or
xor
push
xchg
or
ret
add
cmp
loope
scas
xchg
pushf
xchg
dec
mov
call
add
and
outsb
movsb
cmpsl
cmpb
jmp
push
xor
sbb
pop
mov
or
daa
pushf
imul
adc
clc
mov
xchg
xor
pop
adcl
inc
sbb
sbbl
cmpb
pusha
addb
and
ss
sbbb
push
rol
and
jne
cmp
xchg
mov
les
cmp
cmp
sub
add
je
iret
data16
push
lods
mov
aad
jg
mov
and
or
push
add
mov
lea
ja
ja
cmpsl
mov
jl
ja
pop
jne
lea
and
pushf
jge
test
hlt
aad
jg,pn
jg
adc
pop
push
add
cmp
pop
ret
cmp
leave
sti
sti
das
push
sub
shll
inc
inc
jmp
inc
fs
xchg
lret
and
inc
mov
test
and
icebp
add
lds
mov
inc
inc
shlb
push
push
jmp
test
add
add
sub
sub
or
sub
dec
loope
popf
fimull
popa
dec
les
add
add
lea
imul
jp
movsl
je
and
push
movl
push
push
pop
or
cs
loope
outsb
add
mov
mov
inc
in
and
sub
pop
cmpsl
aam
xchg
mov
ljmp
mov
inc
sub
jbe
xor
rorl
push
insl
fcoms
rclb
lcall
push
sub
mov
je
mov
push
jne
push
or
out
cwtl
cmpsb
mov
sbb
sub
jo
cwtl
mov
cs
cmp
shlb
and
push
loopne
rol
pop
les
movsl
sub
fadds
jnp
in
aam
add
movsl
in
daa
or
and
push
jecxz
jo
add
fcom
sbb
push
push
dec
clc
or
xorl
es
je
cmp
jle
or
pop
test
imul
mov
shrl
dec
mov
loop
adc
inc
push
cltd
push
mov
shlb
mov
aaa
xor
outsl
pop
push
sbb
add
cs
stos
test
and
jo
sbb
xchg
cmpsb
adc
and
addl
jge
push
add
rclb
or
mov
mov
cmc
stos
dec
loope
and
pop
mov
dec
push
lahf
je
xchg
adc
hlt
add
imul
fdivs
sub
test
gs
pop
cmp
cmc
ret
adc
xchg
sub
js
fldenv
icebp
push
mov
xlat
jnp
adc
and
jne
out
hlt
and
dec
sub
or
dec
mov
data16
xor
sub
push
sub
jne
jbe
inc
cmp
push
insb
inc
jle
loope
sbb
lea
ret
add
cld
dec
mov
pop
enter
push
xchg
rorl
jo
idivl
mov
jmp
loopne
and
iret
ljmp
dec
add
loopne
inc
out
leave
xor
shr
xor
mov
jb
pushf
mov
xlat
loop
test
push
sub
test
incl
push
mov
mov
shr
cmp
jbe
add
jmp
or
xor
xchg
outsb
sub
pop
add
inc
push
punpcklbw
push
ja
mov
inc
push
shlb
and
nop
stc
xchg
xor
sbb
sub
add
inc
inc
add
mov
mov
and
push
add
add
adc
push
xor
sub
inc
push
cmp
and
lods
add
cli
adc
inc
jmp
fimuls
add
dec
cmp
sbb
iret
jne
push
or
push
jb
cwtl
sbb
push
sbb
push
fwait
ret
iret
sbb
enter
into
add
xor
add
push
adc
push
sub
inc
xor
xor
enter
lret
sbb
and
xchg
lea
or
out
push
and
mov
adc
pusha
dec
dec
lcall
idivl
mov
jnp
leave
pop
pop
or
sbbb
inc
or
xor
int
mov
and
xchg
loopne
test
xor
mov
clc
fs
pop
push
popa
cmp
or
stc
mov
dec
cmp
mov
inc
cmp
mov
dec
xchg
xor
aaa
addl
cmp
shlb
add
mov
add
inc
add
inc
mov
cmp
aam
ficomps
push
ret
pop
pop
add
xchg
arpl
or
xchg
add
sub
push
sbb
ret
push
push
pushf
clts
jmp
and
adc
cmp
sub
mov
and
test
dec
mov
sbb
xchg
inc
xchg
push
test
adc
ss
inc
xor
push
scas
or
inc
pop
sub
iret
xorb
shlb
aaa
aam
push
xor
testl
mov
fildl
sahf
or
push
mov
fildl
mov
mov
adc
sbb
push
push
xchg
or
add
mov
push
adc
xor
and
xchg
hlt
test
mov
jns
xor
pop
into
inc
mov
mov
push
push
mov
xchg
or
add
push
cwtl
push
add
cmpsl
adc
cmp
fsubp
adc
pop
mov
dec
and
mov
fs
cmp
mov
push
pushf
iret
les
sti
xchg
and
clc
and
adc
mov
fprem
inc
xchg
fisttps
scas
sbb
shrl
mov
movsl
test
stos
pop
cmp
inc
sub
cmp
js
sbb
xchg
and
or
lea
sbb
lcall
sbb
sbb
cmp
dec
js
mov
out
dec
add
pop
and
inc
cmp
rcrb
in
and
cmpsb
inc
daa
insl
shrb
cmp
pop
xor
and
push
andb
std
mov
test
inc
mov
mov
xchg
sahf
insl
or
pusha
push
and
daa
jo
lods
push
push
lods
or
mov
pushf
dec
dec
cmp
push
mov
jbe
adc
mov
imul
test
push
dec
xchg
pop
lods
pop
sub
xlat
sub
clc
ljmp
gs
mov
out
adc
dec
mov
dec
cmp
xor
cltd
les
enter
xor
mov
or
rolb
loope
mov
push
scas
and
loope
inc
xchg
dec
mov
mov
jg
bnd
jbe
push
push
hlt
dec
xchg
cmp
rorl
call
xor
aad
dec
ret
dec
or
fnstenv
push
repnz
popw
lods
pop
adc
sbb
add
or
xchg
push
insb
pop
enter
pusha
mov
xor
loopne
loopne
push
and
sbb
mov
into
or
scas
sti
mov
push
mov
mov
mov
dec
stc
call
mov
xor
movsl
push
fwait
or
lret
sub
xchg
hlt
push
orb
and
mov
js
pop
mov
cmp
xor
xchg
sub
dec
fst
loop
cli
adc
push
push
test
rol
mov
or
insl
sub
roll
arpl
sbb
dec
pushf
inc
iret
pop
jae
and
mov
in
jmp
xorl
int
repz
push
mov
inc
cmp
ds
add
aaa
push
and
or
push
inc
jae
jno
es
push
ds
lods
add
mov
cmpsb
sub
sub
mov
cmovns
fwait
stos
fnstcw
stos
mov
repnz
push
testl
ficompl
xor
dec
shlb
andb
sbbl
lea
cmp
je
jp
or
or
inc
dec
xchg
cltd
add
cmp
je
jbe
inc
mov
fists
xchg
gs
dec
je
or
test
pop
shlb
and
test
cli
fsubr
jb
aaa
dec
enter
add
insb
daa
adcb
lcall
xchg
icebp
mov
lea
stc
and
push
xor
xor
dec
push
jecxz
enter
push
loop
jne
push
inc
inc
sub
mov
xor
fiaddl
fstpl
ftst
or
loop
lret
loopne
call
sbb
aaa
pop
cmp
inc
call
add
shll
in
push
mov
sub
push
push
nop
test
xchg
in
dec
push
xor
dec
add
daa
adc
sbb
mov
push
cltd
les
and
hlt
push
insl
cmp
xor
addb
test
pop
pop
add
test
subl
je
insl
js
push
push
in
lahf
and
js
inc
shlb
cmp
lea
sbb
aas
imul
test
xchg
popf
lock
hlt
xor
sub
push
daa
leave
ret
int3
sub
inc
mov
aam
sbb
add
push
and
in
pushl
mov
push
sbb
and
push
inc
outsb
push
cmp
dec
sti
loope
mov
adc
mov
fisubl
jle
inc
xor
sbb
sbb
mov
les
dec
loopne
in
push
adc
test
sub
adc
out
inc
cmp
sub
mov
in
orb
movsb
jge
push
inc
push
or
xchg
jns
in
dec
rcl
jne
faddl
and
sub
decl
xchg
js
adc
leave
mov
mov
xor
insb
pusha
adc
adc
insb
fnsave
ret
and
dec
js
les
stos
clc
push
or
dec
mov
insb
loopne
add
add
test
sbb
mov
jp
cltd
inc
dec
mov
fisubs
or
lods
pop
adc
shll
cmp
add
or
pushf
pop
mov
popa
sub
xchg
pop
push
and
clc
push
popa
mov
inc
mov
addr16
xchg
sub
addl
mov
sbb
addb
mov
imul
push
nop
mov
mov
pusha
in
ljmp
jmp
or
jno
mov
pop
sub
cld
sub
inc
bound
mov
jmp
dec
adc
data16
adc
mov
cld
in
add
pop
inc
or
and
push
add
hlt
sub
push
movb
xor
adc
and
mov
push
dec
sub
loopne
pop
jne
in
ds
ret
sub
cmp
push
sbb
test
cmp
add
cmpsb
pop
add
mov
adc
nop
jg
jl
push
popf
int3
shrb
cs
add
push
into
or
pop
dec
add
push
clc
sub
pop
dec
mov
sbb
pop
in
sbb
pop
sub
orl
lret
jnp
mov
loope
push
mov
pop
xchg
pop
push
xor
dec
inc
push
jp
outsb
dec
dec
imul
loopne
out
sarb
imul
jo
test
sbb
push
std
mov
test
push
pushl
mov
in
stos
test
and
cli
pusha
inc
inc
ljmp
jl
sti
and
and
jb
push
test
or
add
xor
mov
and
mov
xchg
push
jle
js
sti
je
push
push
push
push
push
push
enter
push
dec
orl
adc
loopne
push
arpl
in
jmp
inc
fcoml
daa
push
mov
push
xor
adc
push
inc
adc
add
repz
stos
push
jnp
and
cmp
mov
mov
lahf
mov
jo
lds
jb
push
xor
in
add
adc
or
dec
push
push
xor
dec
cmp
pusha
or
or
call
adc
rol
lcall
sub
je
push
mov
push
pop
xchg
adc
add
push
mov
add
xchg
and
cmpsb
daa
add
insb
add
push
sub
divl
int3
call
into
ds
inc
push
add
sbb
cmpsb
sbb
loop
xchg
adc
mov
sarb
outsl
add
xchg
push
hlt
jle
or
xchg
inc
hlt
jge
adc
test
movl
pop
sub
mov
mov
movsl
or
rolb
push
lret
pop
adc
and
dec
pusha
mov
or
mov
popa
roll
or
and
inc
aaa
mov
seto
in
push
xor
mov
jno
jge
jnp
pop
mov
cld
pusha
lods
adc
out
lds
add
mov
int
mov
push
rolb
dec
cmc
ret
not
pop
jne
out
int
jne
dec
rcrl
add
rol
int
or
add
enter
popa
and
mov
outsl
rcl
adc
lods
xor
ljmp
or
or
add
or
cmp
outsb
cmp
in
and
mov
inc
or
mov
xor
push
xchg
in
jo
pop
lea
adc
or
push
in
xor
inc
dec
pusha
mov
rol
mov
ror
xor
shr
xor
fdivr
mov
mov
rol
xor
shr
xor
add
add
add
mov
jl
or
shr
fs
or
out
mov
or
and
xor
add
add
mul
mov
aam
sub
jbe
sub
lcall
ror
jl
sub
cli
fisubrs
jge
xor
and
add
fiaddl
gs
fiadds
cmp
mov
repnz
dec
repnz
sub
ja
xchg
dec
fmull
pop
push
or
fisttps
xlat
ret
rcl
add
add
or
add
call
movsb
in
rcl
call
call
dec
imul
rol
dec
rcr
pop
rol
out
add
push
xor
movsb
test
in
shll
in
inc
sub
dec
call
jb
inc
in
push
cmp
popa
inc
in
bound
push
lock
in
add
les
shrb
mov
xor
pop
pop
cs
cltd
call
movsb
imul
leave
and
xchg
call
xor
sarl
xchg
xor
xor
bswap
shll
jo
int3
push
xor
or
push
cmpsl
jge
divb
jne
and
and
out
iret
or
aad
into
add
and
xor
push
test
push
or
jo
cmp
shlb
push
jo
ficoms
add
mov
mov
shlb
inc
fbstp
daa
adc
push
loop
mov
in
pop
jg
add
add
pop
jbe
lcall
ret
lret
pop
mov
or
clc
jp
push
and
add
gs
fcomps
inc
cmp
cmpsb
inc
call
aas
push
push
lret
inc
mov
or
fcoms
sub
cli
stos
adcb
aam
aaa
cmp
dec
rorl
inc
in
sbbl
push
inc
add
out
rolb
inc
aaa
pop
xor
pop
cli
xor
xor
imul
rorb
imul
nop
in
pop
lahf
sbb
add
push
dec
add
inc
xor
adc
es
lcall
cmp
pusha
push
or
dec
xor
cmpb
push
rcrb
push
push
pop
adc
add
and
enter
jae
push
mov
push
add
lret
xadd
or
sbb
imul
pop
fs
mov
xchg
inc
jb,pt
movsl
mov
or
inc
ds
sub
sbbl
pop
cmpsl
je
push
lcall
stc
cmc
clc
mov
pop
dec
mov
xchg
inc
dec
pop
inc
mov
jb
xchg
fsubrs
cmpsb
imul
sbb
jo
adc
in
add
and
jl
xchg
sub
mov
ficoml
cmp
dec
sbb
fwait
or
fimuls
inc
pop
add
call
aaa
add
js
cld
sub
jmp
sbb
testb
movsb
cs
adc
enter
add
jmp
or
testl
rol
or
insl
add
cmpsb
mov
adc
cltd
in
fsubl
jae
mov
sub
icebp
xor
or
mov
adc
add
sub
imul
mov
add
dec
or
mov
dec
jne
pop
or
add
mov
mov
xchg
sub
mov
cmp
jbe
or
push
push
test
inc
push
js
cmp
data16
sub
jae
push
pop
fadds
rep
jle
xchg
add
lods
mov
fucomi
stos
scas
or
mov
push
pop
loopne
rol
sub
int
push
xchg
or
xchg
ljmp
mov
mov
fcmovnbe
fists
and
sbb
sbb
sub
adc
sbb
mov
push
inc
add
dec
lea
lcall
rorb
adc
cmp
fcmovnb
repz
inc
add
sbb
xchg
push
aas
jmp
test
push
int
cmpsb
push
or
add
imul
fcoms
inc
sub
mov
adc
mov
loope
adcb
stos
or
rorb
mov
scas
sbb
or
jns
in
pop
mov
mov
andl
or
and
and
xor
cs
in
addr16
add
dec
add
xor
sbb
adc
or
jo
dec
xor
inc
push
and
or
shll
loopne
or
ret
jle
cmp
or
pusha
ljmp
das
and
add
imul
outsl
inc
jge
mov
movsb
pop
ret
test
ret
or
jp
inc
nop
lea
sub
sub
sbb
bound
fists
call
cli
xchg
adc
clc
adc
aam
inc
and
inc
adc
mov
sbb
scas
enter
cmp
outsb
fiaddl
inc
cmp
sub
cmp
add
mov
sbb
add
adc
and
add
insl
push
and
xchg
aaa
adc
or
dec
cmp
add
jle
nop
bound
lahf
es
sub
push
jno
or
arpl
or
add
jg
inc
ss
imul
and
add
cmpl
or
hlt
aas
mov
mov
test
inc
sub
sbb
mov
xchg
sbb
dec
mov
push
gs
sub
push
add
popa
lahf
fisttpl
sbb
orb
rcl
xchg
lods
sub
test
popa
ja
pop
inc
inc
fcomip
sahf
push
shll
sub
sub
andb
dec
fcomps
inc
loopne
les
mov
ds
sub
js
push
adcb
mov
xor
adc
out
hlt
add
dec
loope
mov
pop
inc
lock
mov
jo
rcr
imul
rorb
scas
or
testb
pop
xchg
jp
aaa
push
mov
and
insb
loopne
or
out
pop
xor
lcall
xor
sub
inc
cmp
mov
or
mov
mov
nop
pop
call
or
add
pop
imul
scas
fwait
mov
pop
add
sub
mov
cmp
and
lock
sti
test
push
cmp
sub
or
push
adc
push
xchg
sub
cmpsb
mov
push
push
dec
dec
addl
out
sub
mov
and
dec
ret
jbe
or
data16
fildll
or
xchg
dec
cmp
scas
add
pop
cmp
cmp
xchg
jecxz
jmp
and
testl
mov
dec
or
ret
add
es
in
sbb
dec
lods
and
add
xchg
iret
js
ss
mov
sbb
arpl
dec
out
jge
xchg
mov
scas
sub
xorl
pop
hlt
out
sub
nop
xchg
scas
jl
movsb
cs
push
rolb
movsb
and
xor
shlb
mov
xchg
mov
inc
mov
cmp
fcmovnu
adc
mov
or
aaa
mov
dec
add
pop
pop
addl
sub
shll
lsl
mov
cmp
gs
or
adc
pcmpgtd
mov
dec
mov
cmp
push
push
jns
xchg
fs
ret
and
mov
sahf
mov
push
jb
add
inc
add
push
mov
std
mov
push
push
xlat
mov
push
rcrb
pop
push
js
pop
loopne
dec
push
mov
sarl
jb
jmp
xchg
mov
and
jno
in
push
je
adc
sbb
sub
mov
sbb
mov
pop
cmp
pop
mov
mov
adc
add
push
sbb
jecxz
xchg
mov
sti
adcb
jns
je
push
xor
sub
stos
or
mov
int3
sahf
ljmp
jne
inc
fisttpll
and
dec
push
push
xor
jecxz
ret
cmpb
and
add
jne
filds
xchg
xor
aam
xchg
outsb
popf
xor
adc
or
sbb
adc
pop
inc
mov
pop
insl
adc
ss
push
fiaddl
sub
cmp
sub
mov
jbe
sub
add
inc
movsl
pop
adc
movsb
push
pop
cli
pop
int3
inc
jno
out
add
subl
add
add
push
adc
mov
ficomps
mov
das
inc
push
mov
fcoml
cmc
dec
bound
adc
dec
ret
xchg
dec
add
cmp
push
scas
or
cltd
jle
jmp
pop
pushl
push
inc
ss
pop
rolb
pop
push
sub
pusha
pushaw
insb
or
sub
popa
inc
pop
or
add
sbb
clc
push
xor
and
enter
mov
ja
add
aas
nop
or
add
push
add
mov
mov
jbe
call
sub
xchg
add
xchg
mov
insl
cmpsl
adc
dec
pop
cmp
xchg
gs
cmp
sub
jns
sub
push
push
inc
jo
or
das
jp,pt
mov
push
dec
ret
ja
sbb
dec
jp
add
sub
mov
bound
dec
clc
dec
lret
add
icebp
sbb
inc
aaa
inc
mov
sbb
push
js
cli
cmp
cmp
ja
pop
jl
daa
ja
ss
cmp
jb
mov
push
mov
add
mov
mov
call
sbb
inc
and
outsl
sbbl
and
out
push
or
jmp
mov
loop
pop
jle
add
lahf
es
das
or
xor
cmp
add
lods
sub
ret
dec
movsl
mov
in
lahf
mov
dec
xchg
inc
sub
cmp
ret
mov
pop
cs
dec
xor
xchg
dec
sbb
pop
ret
int3
jmp
lods
mov
in
shrb
xchg
notb
sub
repnz
jnp
jb
push
pushf
push
add
sbb
inc
ret
shrb
stc
sub
frstor
pop
mov
mov
inc
cmp
mov
cmp
mov
dec
mov
lock
les
add
nop
in
or
sbb
pop
cwtl
xor
mov
ret
dec
xchg
or
jbe
dec
add
int3
incb
add
xchg
mov
xchg
xchg
xchg
xchg
or
sahf
and
pop
pop
dec
add
jl
add
imul
sbb
std
pop
adc
mov
cmp
je
adc
mov
or
pop
sti
outsl
and
mov
js
push
inc
cmp
or
jo
jmp
push
adc
ja
lret
mov
jle
shlb
push
xor
sbb
push
cmpl
push
push
or
adc
push
push
fsubrs
inc
xor
sbb
jle
xor
cld
add
xor
xor
pop
ret
push
mov
add
das
in
push
push
sub
push
jl
cltd
inc
sub
jnp
lock
enter
adc
xor
jo
xchg
xor
leave
ja
arpl
pop
inc
enter
dec
test
rsqrtps
and
cmp
sbb
mov
cmp
push
lea
stos
sub
movntps
add
movsb
push
sub
call
and
mov
xor
mov
pop
xor
push
add
or
dec
mov
push
in
jg
jg
and
loope
and
add
mov
enter
sar
gs
push
add
add
lret
mov
push
mov
dec
icebp
push
adc
movsb
mov
adc
add
jne
push
into
jl
jge
mov
iret
push
fidivrs
mov
lea
add
mov
mov
arpl
pusha
clc
sub
fisubrs
dec
xchg
xchg
scas
lock
addr16
loop
pop
or
sbb
sub
fs
mov
inc
push
xor
cli
sub
adc
cmpsl
adc
pop
lock
mov
inc
add
add
inc
loopne
inc
icebp
cmp
push
sahf
inc
cmp
or
push
dec
jmp
clc
mov
xor
inc
std
jl
lods
dec
shlb
mov
lahf
add
or
or
icebp
or
shrb
add
jle
push
sub
roll
mov
stos
add
pop
divb
sub
xor
push
sbb
scas
es
cmp
fsubs
inc
dec
ljmp
or
adc
xchg
test
inc
mov
roll
or
add
popf
mov
xchg
push
outsl
push
mov
sbb
push
jns
jae
adc
add
and
jns
or
dec
jo
mov
lret
clc
mov
ficoms
adc
loopne
xchg
jo
mov
sub
xchg
mov
test
movsl
mov
push
mov
mov
ss
inc
mov
pop
inc
sub
cmp
inc
shrb
xor
fsts
hlt
aaa
inc
adc
fwait
rclb
stos
dec
sub
add
or
es
adc
fwait
or
cmp
jg
jl
inc
insl
push
pusha
push
sbb
sti
pop
testl
push
js
add
call
imul
cli
ret
cmp
sub
inc
cld
pop
add
adc
out
imul
movsl
sub
xor
add
cmp
mov
xor
and
adc
insb
flds
sub
cmpsb
popf
add
rcl
inc
ss
fimull
push
inc
jmp
sbb
mov
mov
sbb
jmp
in
add
fstpt
xchg
pop
and
inc
and
mov
add
fcomp
dec
xchg
xor
dec
out
jle
test
pushw
sbb
dec
sti
sbb
mull
sbb
sbb
pop
ret
andl
bound
pop
jo
jmp
rorb
xchg
cmp
sbb
in
or
sub
xlat
shlb
bound
mov
fsubrl
pop
and
and
ret
dec
push
adc
dec
and
inc
add
mov
mov
loope
jns
jns
adc
or
mov
add
loop
sub
sbb
int
enter
jmp
mov
stos
ds
push
mov
cmp
mov
or
data16
push
inc
cmpsb
mov
and
push
pop
inc
adc
mov
xor
adc
push
gs
adc
clc
push
dec
mov
mov
test
dec
and
jl
out
mov
cwtl
xor
mov
out
rcll
bt
adc
mov
cmp
mov
mov
inc
inc
xor
cmpsl
or
mov
sbb
loope
int
clc
je
dec
xor
ret
jle
sub
gs
lock
push
in
push
das
jmp
sbb
aas
mov
or
icebp
cmpl
ljmp
outsb
lock
pop
push
out
loopne
js
pop
pop
mov
fstp
clc
repnz
push
pop
push
push
push
adc
adc
xchg
cwtl
lret
push
insb
xchg
pop
leave
add
movups
fcompl
inc
jbe
dec
je
add
test
add
pusha
cmp
je
mov
cmp
mov
sub
dec
xor
and
jbe
insl
nop
add
add
sub
je
fwait
pop
and
and
inc
cmpl
xor
orb
cmp
jle
jbe
js
xorb
movsb
jmp
cs
inc
cmp
in
sbb
pusha
and
ret
xchg
pop
nop
xchg
inc
shr
rcrb
cmp
rorb
leave
or
jo
push
xlat
scas
imul
pop
je
jno
jmp
jbe
or
dec
shl
jp
sub
xchg
mov
lcall
push
test
or
or
jo
add
or
dec
jne
or
add
inc
aas
or
jg
jl
je
sub
inc
jo
jne
cmpl
push
add
into
or
inc
add
xor
jne
out
add
dec
ret
mov
or
mov
push
bswap
adc
add
jecxz
add
add
call
xor
or
arpl
movl
or
mov
sub
push
cmp
sarl
sbb
adc
mov
add
cli
testb
je
cmp
mov
push
add
push
add
push
cmp
mov
jmp
mov
inc
lret
cmp
jne
push
adc
add
out
out
shll
add
mov
sub
int3
scas
add
dec
popa
loopne
or
mov
or
sbb
lock
adc
and
aas
js
push
sbb
xor
add
sub
sub
jae
dec
and
into
fsts
pop
push
jmp
call
ret
or
adc
in
sti
mov
jne
jg
add
or
orl
push
xchg
mov
mov
pop
mov
ficomps
sbb
jl
sub
and
push
pop
test
and
and
hlt
push
push
mov
insb
data16
sbb
or
inc
mov
andb
cmpb
cmc
pusha
dec
cmp
or
in
mov
add
dec
push
push
sbb
out
mov
xlat
sbb
pop
xorb
push
adc
mov
and
scas
rcrl
std
add
mov
inc
lock
or
testb
push
mov
mov
or
cld
push
mov
inc
fiaddl
pop
cmpb
aas
nop
sbb
leave
jmp
lea
push
sbb
lcall
or
inc
loopne
or
lret
into
jne
data16
sbbb
or
adcl
fdivp
std
and
dec
xor
lret
jmp
push
xchg
push
rorl
or
enter
bound
sub
inc
sbb
mov
daa
xor
outsb
pushf
jae
int3
out
std
cwtl
nop
lcall
xor
sbb
mulb
sub
cmp
mov
mov
inc
xchg
cmp
inc
in
mov
repz
jg
jne
cmp
jne
push
xchg
repz
leave
inc
lahf
and
xchg
es
pop
cmp
in
insl
xchg
push
push
rclb
add
aaa
les
mov
pop
xor
loopnew
in
adc
test
cs
xor
mov
js
ret
inc
jb
js
adcb
and
popf
add
incl
pop
sti
sub
or
ljmp
add
push
push
mov
xchg
push
addb
mov
sbb
sarl
push
pop
push
ja
and
pop
fwait
cs
or
out
push
xchg
inc
or
or
or
xor
adc
add
ficompl
mov
jae
clc
jmp
dec
rorl
ret
int3
add
pop
inc
andps
rcll
add
dec
dec
and
add
and
or
mov
add
and
ret
test
adc
orl
test
mov
bound
add
add
and
cmpsb
cmpsb
sub
std
xor
lea
pop
dec
cmpsl
cmp
daa
movsl
fists
jae
rcrl
nop
imul
dec
push
dec
testl
mov
out
add
je
test
adc
adc
mov
ret
icebp
add
xor
jecxz
pusha
add
mov
lahf
cld
pusha
dec
adc
ja
or
insb
or
adc
in
lods
sti
push
add
mov
cmpb
cmp
insl
loopne
ljmp
or
mov
inc
lods
adc
sub
fmuls
jo
mov
rcrb
fisttpl
sub
mov
lcall
xchg
imul
sub
mov
xor
or
and
pop
or
movsb
adc
mov
adc
and
repz
nop
imul
arpl
xlat
lahf
add
jbe
mov
sbb
sbb
in
mov
push
test
lods
or
js
mov
test
cmp
jmp
popa
stos
in
inc
clc
test
aas
pop
cmp
xor
pop
in
mov
add
jle
push
or
pop
jne
jne
push
xchg
adc
inc
loopne
insb
adcb
add
mov
hlt
mov
je
sub
adc
push
add
pop
push
cmc
test
leave
mov
mov
inc
sbb
cmp
in
sbb
xor
rcrb
stos
pop
xchg
cmp
sbbl
xor
in
out
add
ja
adc
pop
cmpl
shlb
cmp
xchg
iret
or
ljmp
popa
adc
and
inc
lea
jle
je
sar
xor
push
into
mov
mov
push
xor
xor
lock
jle
ret
push
inc
pushw
insb
dec
push
inc
scas
aad
and
sbbl
xor
sbb
ret
add
clc
xchg
lds
add
pop
push
or
cmc
or
push
lcall
out
dec
jnp
sub
adc
lds
push
mov
inc
push
out
xor
cmp
jb
fimull
and
loop
shl
insl
mov
test
lods
adc
fs
sub
cmp
lahf
sub
imul
dec
jbe
cltd
cmpsl
cmpsb
pop
rolb
or
mov
lcall
lock
repz
jge
xchg
dec
movsb
jbe
rolb
icebp
and
inc
jo
inc
inc
inc
jl,pn
adc
in
pop
clc
push
sarl
adc
lahf
dec
daa
and
or
shll
mov
fwait
sub
movl
je
mov
sub
je
jge
das
pop
lds
daa
imul
add
cld
cmp
push
cli
das
cmp
mov
add
and
test
adc
jne
fisubrs
std
into
scas
and
push
andl
add
sub
bound
push
jno
cmp
or
push
dec
adc
add
movsl
or
and
pop
inc
or
pop
je
jmp
or
push
sbb
sub
add
and
sbb
or
es
pop
inc
sbb
sbb
loope
add
cmp
int
jmp
dec
pop
adc
jo
mov
icebp
mov
pop
jnp
push
and
jnp
fldenv
cmp
push
and
dec
mov
enter
aaa
and
mov
add
dec
xchg
dec
inc
pop
inc
mov
pop
mov
jo
rcrb
sbb
pop
popa
inc
in
xor
jae
push
or
or
push
inc
sbb
imul
mov
push
addr16
mov
mov
loope
cmp
dec
dec
pop
adc
inc
js
mov
lcall
data16
push
sbb
test
cli
xor
or
push
dec
mov
lahf
pushf
push
movsl
cmc
add
cmpl
mov
lock
push
stc
or
xor
sub
sbb
add
add
sbb
mov
jne
arpl
xchg
imul
cmp
adc
add
fadds
test
push
jno
insl
sub
mov
mov
pop
xchg
cmp
je
orl
scas
fcoms
shr
adc
pusha
jne
or
fcomps
insl
shr
jbe
cmp
lds
sbb
jle
out
push
je
movl
pop
loopne
mov
adc
in
cmp
popf
or
or
or
sub
jae
sbb
pop
inc
fbld
adc
js
xor
dec
add
shrb
or
ret
cmp
jnp
and
jle
xor
push
or
or
imul
sbb
or
fstpt
and
mov
and
clc
jg
fs
test
loopne
mov
movq
movaps
xchg
push
clc
jae
xor
jle
xor
cli
test
test
cmpsb
je
mov
int
lods
inc
adc
repz
or
jg
outsl
out
popa
sbb
jnp
add
and
cmc
idivl
ret
or
add
adc
add
ficomps
xchg
repnz
rorl
add
pusha
jle
mov
addsd
int
add
sbb
notl
push
dec
sbb
pop
push
fistpl
add
leave
dec
cmpsl
nop
sbb
test
imul
stos
jo
xchg
adc
dec
or
lds
mov
popa
test
mov
addl
xchg
adc
adc
inc
pop
call
movsb
sbbb
push
cld
mov
cmp
jge
mov
jge
in
loop
jge
pop
test
sahf
fldl
stos
mov
adc
cmpsb
pusha
js
and
mov
add
mov
lock
repnz
cmp
jb
neg
subl
sub
mov
adcl
jecxz
jnp
cmp
or
rorl
mov
daa
adc
push
rep
mov
dec
ljmp
subl
arpl
add
push
xchg
dec
mov
push
sbb
mov
add
dec
pusha
clc
jb
movsb
inc
cmp
popa
mov
pusha
and
cmovs
scas
push
sbb
rcrb
mov
inc
adc
aas
xor
stc
or
rep
jmp
sub
cmp
jb
mov
add
xor
aam
pop
adc
adc
cmp
and
imul
push
pop
jbe
inc
add
add
adc
pop
pusha
mov
add
movl
cmpsb
inc
add
add
inc
sub
mov
cwtl
popa
push
mov
iret
repz
mov
mov
call
cmp
repz
hlt
clc
inc
xchg
cmp
clc
cld
adc
lret
add
fldcw
jmp
call
inc
mov
inc
pop
sti
and
and
lea
adc
cmp
or
sub
cld
out
pusha
xor
fs
xchg
daa
stc
sub
sarl
movsb
push
push
rcr
xchg
add
out
add
xchg
add
mov
add
dec
dec
addr16
add
jnp
pushf
add
push
mov
jnp
sbb
and
xor
cmp
mov
inc
push
xor
sbb
sbb
cmp
repz
adc
iret
repz
or
or
add
ficomps
or
mov
xor
push
add
pop
mov
daa
pop
daa
push
adc
add
add
inc
inc
and
fidivs
pop
shlb
mov
nop
es
mov
mov
in
or
fistps
xlat
add
aam
mov
mov
add
mov
sbb
cmp
dec
pusha
and
cmpsl
push
xor
test
inc
cmp
mov
inc
inc
and
push
mov
jmp
or
subb
je
mov
mov
cmp
jne
mov
pop
icebp
and
dec
xlat
mov
add
mov
daa
and
and
adc
cmp
lahf
call
cmp
je
cmpsl
pusha
lret
lret
lock
push
mov
push
jl
sub
and
fdivl
sbb
inc
lock
cmp
sub
or
fcomi
and
sub
in
iret
jne
xchg
xor
push
cmpsb
test
xchg
push
pop
sbb
add
push
xchg
inc
push
cli
es
aas
mov
mov
stc
jg
sbb
mov
or
adc
jne
inc
cmp
addb
inc
xor
incl
scas
test
dec
adc
or
inc
push
mov
cs
push
adc
pop
push
push
and
call
or
orb
sub
cmp
cmp
shrl
xor
fwait
dec
sahf
out
dec
adc
push
add
push
push
lret
lcall
pop
or
push
or
enter
add
and
cmpb
andb
stc
js
jo
or
xor
hlt
cmp
add
cmp
daa
jns
add
xor
or
cmp
lock
cmp
adcl
or
lahf
mov
testl
or
inc
pop
cmp
mov
mov
push
movsb
outsb
cmpsb
mov
inc
inc
cmp
aam
lret
jne
pop
lock
sub
imul
jg
jmp
jnp
push
loope
es
push
lods
mov
xchg
jmp
lods
or
jmp
or
add
jmp
xchg
in
sub
xor
seta
or
dec
aaa
cltd
inc
or
std
das
out
or
add
loopne
jne
fidivs
fiadds
sahf
push
sub
mov
ds
push
xchg
xchg
pop
adc
ror
sub
mov
sub
sbb
dec
fdivrl
or
add
mov
rclb
push
and
ljmp
sub
insb
ja
add
xor
outsb
mov
test
cmp
inc
and
sarb
incb
pop
into
sbb
movsl
and
movb
lea
arpl
mov
stc
repnz
cli
or
dec
xchg
add
jmp
or
mov
inc
les
loop
orl
jb
neg
ss
sub
add
jmp
mov
dec
mov
mov
dec
outsb
loope
decl
pop
inc
cmp
jb
lret
ret
enter
adc
jne
add
out
rorb
xchg
enter
pop
fcomp
sbb
cmp
add
adc
jmp
or
push
dec
fildll
pop
push
cwtl
xor
add
jne
jnp
adc
mov
add
repnz
push
cmp
jne
mov
push
cmp
jne
dec
cmp
int
jne
call
in
cs
jge
ret
stc
jns
cmp
inc
incl
dec
jmp
adc
jmp
cmp
jmp
cld
cld
ret
sahf
popf
fucomi
pmaxub
pop
push
pop
push
jb
push
push
sub
movb
shr
stc
add
xor
adc
xchg
ja
adc
popf
rcrl
or
mov
daa
shl
xchg
and
add
pusha
adc
popf
adcl
popf
out
pop
stos
or
fidivl
dec
mov
aad
push
or
dec
scas
or
cwtl
dec
sbb
jmp
sarb
pop
cmpl
and
enter
or
dec
dec
sub
dec
shll
jne
mov
cmp
arpl
cs
stos
add
lock
rcl
add
into
and
fistps
add
cmp
jg
add
mov
andb
ljmp
jno
rcr
ret
push
push
push
add
cmp
mov
fs
movsb
repz
int3
add
fcoml
adc
pop
jle
push
push
pop
div
jb
and
adc
adc
nop
stos
aam
jl
pop
clc
mov
sahf
push
push
sahf
or
lods
pop
sub
test
adc
push
mov
sbb
pop
mov
and
or
mov
inc
ret
call
outsl
adc
pushf
sub
sub
in
pusha
push
int
jno,pn
inc
lret
xor
arpl
outsl
adc
sub
sti
add
loopne
sub
xlat
add
xchg
inc
add
dec
push
or
aam
mov
add
add
or
lods
push
mov
adc
jle
or
arpl
fstl
roll
shrl
xor
xchg
xor
add
mov
inc
jmp
cmp
jne
orl
jmp
adc
add
sub
les
add
cmp
push
xor
dec
or
xor
pop
push
cmp
and
push
and
adc
insb
adc
pop
jne
ret
stc
dec
add
add
lds
cmp
ljmp
adc
lret
or
ret
loop
roll
lret
sub
jmp
in
sti
incl
je
mov
sub
cmp
ja,pn
xor
clc
aad
mov
cmp
jae
push
fucom
jb
movsb
cmp
sbb
push
inc
wbinvd
dec
and
shrl
add
int
push
lods
push
pop
cld
add
movsb
mov
cmc
mov
pop
bound
jne
test
jne
push
jle
or
or
ficomps
push
jne
jbe
inc
mulb
lahf
scas
je
movsl
punpckhdq
add
add
sti
addb
adc
rolb
sbb
mov
dec
sbb
pop
pop
aaa
mov
adc
xchg
cmp
stos
push
dec
loop
add
cs
pop
fsubrs
add
mov
adc
mov
sub
pushf
inc
xor
xor
or
add
leave
popa
cld
pop
jp
jge
stos
mov
shr
or
dec
xchg
rolb
aad
shll
or
and
jbe
push
stos
pop
int
test
fsubs
mov
sub
testb
xchg
rcrb
adc
push
adc
cmp
sbb
shlb
mov
mov
inc
inc
mov
stos
mov
dec
and
dec
or
xor
dec
shll
sbb
mov
xchg
adc
inc
mov
mov
sbb
rorb
push
cs
xchg
adc
ficompl
fstpl
ds
push
aas
push
add
pop
push
jmp
pop
xor
xor
scas
loope
loopne
or
stos
lock
fs
sbb
jl
push
sbb
sbb
push
movsb
ret
inc
mov
stos
and
adc
jbe
or
lock
and
fs
add
mov
add
dec
ret
pop
pop
or
xor
aaa
test
jo
jb
xor
adc
sbb
or
fs
xor
cmp
testl
xchg
cmpb
cmp
jae
sub
or
fists
add
inc
icebp
mov
jne
add
loopne
outsb
call
hlt
je
inc
cmp
jb
lea
push
adc
push
popf
mov
dec
ss
add
or
test
lods
mov
mov
pop
shlb
es
enter
or
lahf
ror
dec
xor
push
mov
or
mov
xlat
xchg
out
popa
jne
push
out
cmp
fsubl
enter
or
push
xor
adc
pop
add
and
pop
jmp
pop
inc
ret
sbb
and
ret
sbb
xchg
push
jl
cmp
rcrb
or
or
in
in
dec
or
pcmpgtw
loopne
jae
insb
lcall
call
sub
jnp
sub
shl
add
test
or
add
ret
daa
ss
rolb
mov
and
dec
adc
mov
loop
mov
mov
movb
sub
ds
fcmove
sub
std
add
xchg
push
test
push
and
and
sbb
je
mov
je
inc
stc
xlat
rorl
pop
adc
adc
ja
loopne
cmpl
xor
mov
inc
orl
mov
add
ja
negb
ficomps
sti
and
lock
xor
dec
pop
sub
les
fwait
jle
addr16
fnstcw
sbb
xchg
aad
mov
popf
aaa
dec
pop
decl
int3
push
and
jg
pop
rol
xor
ss
imul
call
jmp
pop
fiadds
rorl
in
cmpsb
popa
pop
es
repnz
out
push
pop
or
dec
pusha
out
aad
pop
jecxz
push
or
aaa
rolb
jmp
jge
mov
inc
imul
cmp
pop
je
push
push
shlb
cmp
push
inc
mov
test
int
ljmp
sbb
push
mov
push
fwait
add
sbb
push
andl
shr
popf
addr16
xchg
mov
imul
sub
pop
dec
call
loopne
pop
adc
out
add
rclb
enter
adc
in
sbb
ss
stos
addr16
and
xlat
test
lods
cltd
xchg
mov
cmp
je
xchg
jnp
ja
ret
ret
lock
out
lahf
push
pop
pop
mov
in
mov
loope
mov
movsl
mov
pop
adc
jns
add
xchg
mov
xlat
aas
movsl
jecxz
movsl
sub
imul
pop
pop
dec
sub
fistl
jg
imul
repz
in
and
leave
add
adc
push
cs
dec
out
and
dec
dec
or
mov
enter
ret
hlt
fists
mov
cmp
jne
or
mov
adc
rcrb
add
inc
xchg
test
data16
add
xchg
shrb
xor
mov
hlt
nop
sbb
rcrl
add
xchg
inc
loop
data16
out
jmp
fsubrl
add
mov
in
lds
mov
sub
sub
dec
add
push
push
and
inc
loope
orl
js
dec
pop
xchg
add
out
jne
mov
push
bound
daa
mov
sbb
test
test
mov
adc
mov
adc
rolb
xor
pop
sub
adc
mov
xchg
inc
jg
jp
test
data16
or
stc
and
fldcw
sbb
push
dec
jge
pop
and
pop
jno
sub
jecxz
mov
jl
lret
loop
or
loopne
or
inc
pusha
pop
out
in
pop
push
inc
add
or
fildll
or
jb
enter
sbbl
call
pop
jne
cmp
or
js
or
xor
mov
push
jle
imul
ret
mov
stos
sarb
mov
pop
loope
jmp
cmpsb
inc
popa
and
leave
es
in
testb
bound
in
mov
cwtl
dec
mov
gs
push
push
pop
jle
daa
mov
cmp
je
lldt
add
sub
je
fisubl
cld
or
pop
sbb
adc
imul
jo
pop
add
mov
iret
add
daa
add
enter
or
cmpsl
jnp
dec
add
in
fistpll
jle
add
jb
mov
inc
add
xor
push
xchg
pop
push
push
and
push
pop
jb
or
nop
out
or
or
add
or
sub
nop
or
pop
or
loop
or
add
or
lcall
out
or
ror
repnz
ja
push
imul
adc
inc
push
fcomps
adc
fwait
sub
ret
enter
inc
or
ds
pop
enter
adc
dec
push
jns
ret
adc
jb
mov
adc
nop
adc
in
cmp
pop
pop
mov
sbb
sbb
sbb
sbb
nop
out
add
add
sbb
inc
push
sbb
sbb
mov
sbb
je
pop
sbb
mov
jge
sbb
sbb
jae
addb
pop
mov
and
ret
sub
cmp
fldt
xchg
loope
mov
movl
xchg
mov
jns
lods
jg
or
test
push
in
jno
in
imul
repnz
lea
repnz
cmpsl
repnz
cmp
xor
out
xchg
iret
out
push
jbe
fwait
add
fadds
call
test
cwtl
jmp
inc
jmp
push
nop
ljmp
cmp
out
in
in
fsubp
add
in
cltd
mov
in
cmp
out
out
nop
adcl
or
pop
mov
lock
xor
icebp
cmpb
pslld
inc
enter
std
repz
sahf
cmp
rorl
pusha
hlt
fdivs
jb
fwait
mov
jns
push
jg
mulb
in
in
idivl
mov
lcall
cltd
add
lea
stc
inc
stc
cmp
lret
lock
cli
cli
iret
repnz
sbb
sbb
stos
cld
and
cld
je
cld
push
pmaxub
sub
std
jns
addr16
sbb
adc
sbb
cmp
or
adcl
sub
add
and
rcll
imul
addb
jno
jecxz
jecxz
cmpb
in
mov
jb
icebp
inc
mov
stc
daa
xchg
sti
pusha
adcl
sbb
out
cmp
sbb
outsb
call
sub
xchg
sub
sbb
pop
jmp
jmp
adc
in
in
add
mov
mov
cmpsb
jb
sbb
pop
and
insb
out
cltd
push
lock
cli
push
cli
lcall
repz
push
mov
repz
sar
in
mov
adc
xchg
stc
fstpl
sarb
fwait
jns
xor
adc
bound
and
clc
cmp
lret
sti
sti
cltd
inc
fmulp
add
fistl
pusha
mov
mov
lret
sar
dec
dec
and
test
cmc
xor
cld
sub
mov
fnstsw
mov
pop
shl
xor
xchg
scas
idivl
adc
push
mov
out
out
loop
cmp
out
sub
xchg
cmp
mull
not
push
push
adc
mov
loop
jno
div
and
pop
mov
xchg
divb
and
insb
out
jb
or
jno
testb
divb
pusha
leave
add
sbb
xchg
cmpsb
repnz
and
xchg
cmc
adc
xchg
pop
jae
pop
mov
cmc
div
idivb
scas
jae
fwait
and
mov
inc
clc
clc
jecxz
jns
loopne
stc
popa
cmp
dec
push
cli
cli
jno
adc
jb
hlt
pop
jne
mov
mov
roll
data16
into
shr
test
idivl
jo
sti
xchg
pop
loopne
lahf
pusha
adc
cs
ret
das
ds
or
cltd
mov
loop
and
subl
bound
imul
movsl
in
inc
repz
repnz
and
cmp
push
sbb
dec
push
jmp
inc
jb
repnz
repnz
pop
bnd
sbb
jae
in
cmc
mov
repnz
sbbl
repnz
sbb
jmp
divb
and
xchg
icebp
jb
xor
roll
rclb
icebp
cmc
cmc
cmp
icebp
jecxz
and
ret
lret
sbb
xchg
inc
fcompl
jne
xchg
pop
pop
daa
push
lock
lods
jmp
rcrl
xchg
jl
fldl
shrb
imul
ljmp
ret
jne
and
cmovno
push
add
int3
add
inc
insb
inc
push
stos
add
jp
pop
test
rorl
or
adc
or
add
pop
cmp
dec
add
sahf
push
and
ljmp
and
pop
and
sbb
add
push
sbb
popa
imul
push
jge
mov
push
xor
repz
push
stc
pop
sbb
pop
fwait
int
repz
pop
out
push
iret
push
fistpl
out
ss
pop
pusha
inc
dec
insl
jnp
xlat
jl
push
mov
mov
loop
iret
and
dec
or
push
in
add
gs
push
incb
aam
sar
clc
loope
lods
mov
sub
push
push
cmp
jge
sbb
loopne
push
add
fcoml
pop
pop
lret
lahf
xor
rcrb
or
pop
xor
fs
or
sub
pop
and
je
add
js
fcom
mov
inc
cwtl
fmuls
and
add
xor
and
insb
sub
mov
jns
sbb
mov
clc
les
sub
lahf
sub
adc
lea
jecxz
and
dec
not
jae
dec
js
push
fimuls
sahf
jge
mov
mov
outsb
test
add
adc
push
mov
movsb
in
inc
stc
add
xor
fcomps
stc
inc
sahf
test
mov
cwtl
fsubrp
push
popa
mov
push
test
pop
or
insl
push
pop
or
popf
cltd
adc
cmp
and
and
jle
dec
xchg
sub
inc
inc
inc
inc
and
pop
movsl
pop
push
mov
xor
sarb
imul
xor
adc
gs
std
js
in
popa
sub
push
cmp
dec
outsl
cmpsb
or
or
sbb
sub
pop
repnz
je
pop
roll
sub
sbb
sbb
pop
cmp
enter
push
jnp
rolb
xor
orps
push
ret
orl
lods
xorb
cmp
pop
push
and
insl
pop
dec
stos
subb
pop
sub
adc
mov
jmp
mov
inc
inc
add
dec
inc
and
jo
sub
adc
add
add
adc
adc
in
dec
adc
inc
push
stc
leave
clc
es
jne
lret
and
ss
inc
sarl
mov
mov
inc
inc
cmp
sbb
or
dec
outsb
out
jns
mov
add
pop
dec
mov
ds
pusha
aas
push
mov
pop
pop
push
jno
ja
inc
mov
subb
popa
mov
clc
mov
and
adc
mov
sub
insb
jl
testb
gs
ljmp
cmpl
je
sahf
fwait
add
push
clc
out
shr
stos
add
testb
movb
lret
push
in
inc
mov
or
stos
test
dec
mov
hlt
mov
test
push
leave
adc
push
or
inc
and
pop
adcb
and
add
aam
ret
shrb
or
sub
sub
push
repnz
fbld
push
mov
mov
incl
inc
decl
jne,pn
and
inc
xchg
iret
repnz
ljmp
cmpsb
sbb
cmp
cmpl
mov
jbe
push
cltd
pop
push
outsb
pop
idiv
rclb
pusha
or
lea
mov
aaa
dec
mov
mov
xor
sbb
jmp
cmp
jae
dec
cmp
pop
jae
pop
jbe
les
mov
mov
dec
and
add
imul
mov
pop
sub
adc
cmc
and
push
leave
add
popl
imul
add
fisttpl
test
in
mov
sbb
sbb
dec
dec
je
push
push
jne
xchg
jecxz
into
icebp
movsl
movb
repz
mov
sub
pop
decb
push
out
cltd
cmp
pop
mov
sbb
push
das
sbb
ret
xor
out
xchg
rcr
sub
enter
lock
adc
xor
orb
popa
mov
pop
int3
hlt
and
xor
adc
fiaddl
pop
jne
sbb
popf
mov
mov
aam
lret
pop
cmp
adc
cmp
jl
sti
je
ja
insl
or
aas
jge
pop
jo
sub
push
cltd
pop
idiv
int
insb
add
mov
inc
xor
xchg
cmc
jge
xchg
inc
out
cmp
pop
inc
adc
jmp
or
fs
mov
cmp
enter
sbb
sub
adc
fs
sub
lock
insl
mov
sbb
call
ja
pop
imul
jecxz
adc
repnz
sbb
sbb
dec
mov
sub
sbb
or
add
outsl
dec
inc
loopne
pop
jg
out
incl
pop
push
sti
pop
adc
das
sub
sub
add
hlt
inc
adc
adc
pop
leave
in
adc
add
jae
cmp
int3
in
movsb
loop
mov
push
mov
loope
push
jmp
jge
out
icebp
jl
je
sbb
add
jno
add
mov
test
adc
outsl
mov
sub
int3
dec
jo
mov
je
dec
inc
push
adc
push
out
jne
mov
ret
jmp
and
inc
inc
inc
lretw
test
mov
jae
adc
insb
lahf
pop
sub
or
shrb
fnstcw
or
or
cmp
call
sub
cs
rcl
sbb
stc
pop
push
adc
lcall
mov
pushf
dec
add
je
ret
and
add
inc
and
adc
cmpb
sbb
movb
movsl
inc
dec
cli
and
jge
add
insl
and
hlt
mov
inc
add
mov
ja
cmp
inc
adc
or
out
cmpb
sub
xor
out
pop
push
sbb
pushl
sete
ljmp
dec
das
sbb
or
jg
ficoms
clc
push
pop
push
fsubrs
lock
or
or
mov
mov
and
sbb
or
bound
xchg
aad
mov
aam
add
test
out
decl
inc
jg
cmp
icebp
lea
pop
lods
lret
test
jne
sub
jle
cmpsb
jg
jg
clc
mov
inc
inc
cmp
je
xchg
mov
cli
sub
xchg
orb
adc
add
lods
popa
imul
mov
push
ss
in
mov
pushf
add
ss
enter
xchg
shlb
incl
fdivr
sbb
sbb
push
mov
push
inc
sbb
mov
inc
insb
lcall
pop
sbb
lods
mov
xor
jnp
popa
add
sub
push
add
add
jo
dec
push
cmp
bound
add
sub
cltd
mov
lock
mov
addr16
test
cmp
test
cmp
loopne
pop
cmp
je
mov
dec
sarl
mov
int3
shlb
or
add
push
inc
es
sub
shlb
adc
in
shl
pop
add
mov
add
popf
jbe
frstor
sbb
dec
shll
push
jns
jb
jns
fldenv
push
lret
inc
add
adc
cmp
push
fcoml
fiaddl
add
pop
fcom
iret
add
into
adc
rcrl
lea
popa
bound
stc
shlb
mov
popa
dec
or
pop
imul
jmp
das
dec
jmp
es
cmp
jae
cmp
into
inc
pop
loope
mov
and
xchg
ret
rol
pop
jmp
cmpsb
push
stos
pop
fs
jp
clc
ret
jecxz
inc
imul
pop
fdivs
jne
call
icebp
add
or
mov
test
lock
adc
aad
rol
lahf
jge
push
jns
and
aam
push
pop
push
shlb
inc
push
rolb
sbb
mov
rorb
or
les
cmp
add
sub
cmp
ja
dec
jg
cmpb
jne
inc
inc
ss
mov
mov
sbb
ja
or
sbb
jge
cltd
pop
lods
jmp
sbb
push
mov
xor
dec
out
clc
and
mov
jne
jmp
ja
inc
jmp
loop
dec
sarb
fiaddl
and
push
sub
sub
and
adc
mov
nop
pop
pusha
jmp
data16
add
test
xchg
in
add
insb
inc
cmp
jmp
pop
fldz
mov
repnz
add
push
jo
mov
test
sbb
xchg
and
cltd
rep
adc
sub
inc
pop
fdiv
mov
cmp
mov
hlt
add
cltd
adc
xchg
aam
loopne,pt
loope
loope
arpl
mov
es
clc
outsb
mov
add
jno
push
arpl
jmp
pop
arpl
push
push
data16
aas
xchg
test
fs
mov
iret
or
add
pop
sbb
xlat
and
std
shlb
inc
add
add
xchg
lea
add
mov
pushl
addr16
repnz
mov
add
ds
pop
rol
xlat
cld
rorl
mov
popa
push
jbe
sub
xor
jbe
xchg
push
add
push
mov
xor
dec
shrb
push
insb
or
cs
add
js
xor
rcrl
mov
sbb
or
enter
sbb
and
mov
in
jp
xchg
mov
clc
addr16
icebp
push
pop
mov
popf
sahf
enter
dec
add
or
shlb
push
adcb
cmpsb
mov
aam
pushf
enter
inc
push
pop
sub
enter
jmp
mov
pusha
lcall
rcrb
inc
lcall
mov
adc
and
insb
dec
mov
pop
xchg
jmp
sbb
adc
adc
imul
cwtl
sbb
mov
mov
pop
gs
sbb
int3
push
cmp
arpl
imul
cmpsb
pusha
or
lock
outsl
loop
sub
subb
rclb
add
lcall
add
nop
xchg
hlt
inc
or
pop
xchg
test
jge
mov
mov
sbb
ja
pop
add
addl
jo
xchg
fistl
bound
mov
add
mov
sbbl
inc
xchg
fidivrs
or
out
ja
jg
adc
push
add
mov
push
xchg
sub
xchg
cmp
test
mov
inc
imul
xor
rolb
pop
or
shll
clc
adc
lock
cmp
in
xor
sbb
mov
mov
daa
enter
sbb
jl
jge
cli
fcoml
or
or
incl
icebp
or
sub
mov
mov
sub
cmpsb
pop
dec
lret
test
inc
mov
ret
dec
push
push
sub
inc
les
dec
push
ret
cmpsb
test
mov
les
mov
mov
push
mov
fwait
pusha
fistpll
insb
push
lea
loopne
out
into
push
rolb
loope
xchg
push
sub
popa
jg
in
ds
jae
xor
push
call
pop
lea
adc
je
xchg
dec
cmc
pop
add
iret
xor
push
dec
or
sbbb
data16
jmp
ret
jmp
mov
sti
mov
aad
pop
dec
lea
dec
xchg
ret
arpl
loop
adc
loop
sbb
cld
sbb
jl
jg
pop
fdivs
jno
fmulp
xchg
and
cltd
and
and
xor
sti
jo
lock
out
or
lea
mov
repz
push
punpcklbw
fcompl
pop
cmp
outsb
mov
call
shlb
dec
or
ret
clc
lock
or
and
dec
sub
cwtl
and
or
lock
mov
push
pop
out
jbe
cld
push
adc
loope
jecxz
fs
sub
lods
in
sub
sbb
lods
xor
mov
mov
and
adc
dec
jo
pushf
popl
mov
cmp
loopne
clc
push
movl
cmp
sbb
xor
movsl
cmp
shl
or
mov
or
loopne
inc
push
sub
lea
in
addb
call
mov
testb
pop
gs
add
fildl
and
data16
or
cmpsl
add
or
in
adc
or
push
sbb
push
and
xor
pushf
test
rol
mov
or
loope
or
add
add
lock
add
std
inc
dec
jne
lea
or
or
lret
cmc
ss
sbb
movsb
and
pop
inc
sbb
mov
mov
test
test
test
xor
mov
and
cmp
psrad
inc
js
and
ja
sub
sub
out
push
or
or
popf
and
popa
inc
inc
push
cmpsl
mov
fdivr
cmpsl
ss
push
push
dec
fsubs
mull
lds
std
push
fwait
add
cmp
inc
inc
jnp
add
pop
dec
loopne
or
and
int
cld
pop
subb
adc
in
jmp
and
je
and
xchg
push
in
movb
jp
inc
jnp
out
testl
xchg
or
shr
cli
add
lea
sub
ja
lret
add
jmp
adcl
mov
and
and
and
jmp
push
inc
pop
ret
cld
xor
pop
and
lock
lock
ja
mov
add
or
insb
or
ja
xchg
pusha
sbb
mov
or
jno
and
or
int3
xor
mov
adc
icebp
and
cmp
int3
lods
mov
fstl
xchg
pop
insb
push
hlt
rcrb
jmp
mov
rcrl
dec
shlb
cmp
sub
stos
mov
mov
mov
push
sub
aam
fmull
jb
cmp
std
jne
ret
iret
fsubr
fldt
stos
or
jmp
iret
inc
add
rclb
scas
push
or
fwait
push
push
jnp
pop
jno
jge
jno
mov
shll
mov
nop
xchg
repz
movsb
clc
shlb
lock
out
into
mov
fidivl
push
jmp
or
imul
push
pop
rcl
dec
push
aad
test
rolb
jnp
sub
test
push
call
adc
out
mov
test
push
lds
cmp
cmp
leave
inc
adc
movsb
inc
imul
push
pop
cmpsl
mov
aaa
jmp
loopne
lea
sub
cld
jmp
loopne
test
out
mov
cmp
adc
inc
inc
push
popl
bound
outsb
incl
push
add
jb
mov
xor
inc
lahf
nop
out
pusha
inc
inc
dec
push
cli
inc
je
push
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
loope
mov
jl
sbb
sti
mov
mov
inc
push
mov
inc
dec
jne
jle
add
je
movsb
mov
add
mov
inc
push
jnp
test
xor
or
rorb
pushf
es
dec
push
fcoml
je
loopne
adc
addl
push
mov
push
or
and
mov
test
sbb
adc
rcrb
popf
push
add
outsl
xchg
jae
and
mov
xchg
push
adc
push
jo
inc
jp
cmp
sub
xlat
cli
jo
insb
ljmp
xor
das
mov
andb
mov
or
dec
loop
pushf
insb
ret
or
dec
loopne
or
jnp
mov
call
or
mov
mov
add
mov
ss
push
out
arpl
subb
sbb
es
xchg
sbb
inc
and
add
push
jns
pop
inc
mov
inc
mov
leave
cmpl
push
and
pop
movl
testl
outsl
cmp
adc
mov
es
pop
in
dec
lock
pop
int3
mov
sub
pop
into
int3
adc
sbb
jno
lods
rolb
mov
sbb
sub
fidivl
sub
and
inc
ficompl
mov
pop
cmp
in
xchg
out
cwtl
mov
jne
cld
cmp
out
jle
cld
or
push
cmpl
loopne
cmp
add
pop
cmp
es
outsb
rolb
sub
and
dec
or
sbb
dec
xor
pop
dec
mov
sbb
mov
xchg
rorb
sub
fisttpl
cmpsb
or
iret
cmp
ret
jo
nop
pusha
nop
sbbb
xorl
sub
dec
cmp
pop
dec
xor
mov
sbb
je
push
mov
loope
je
mov
dec
push
mov
push
inc
xchg
mov
jbe
push
sub
je
ret
or
sub
or
loope
xor
xchg
nop
pop
mov
jmp
jmp
adc
mov
jno
sbb
mov
stos
sti
rorb
and
loopne
sbb
call
xlat
and
mov
daa
mov
movsb
pop
adc
jns
ss
pop
xorb
mov
push
movsb
mov
ss
add
inc
jb
je
enter
lret
call
xchg
sbb
cwtl
sub
pop
lea
mov
lea
push
push
mov
or
aas
push
incb
sbbl
in
or
mov
adc
sbbb
pop
cmp
inc
dec
xchg
lock
in
cmp
cwtl
and
sbb
dec
xchg
lret
insb
inc
or
jns
cld
push
jo
sarb
or
inc
mov
mov
sbb
or
js
imul
insb
inc
in
cmp
in
jae
bound
and
mov
fstcw
inc
cmp
outsl
mov
dec
cmp
dec
jb
xorl
add
push
or
aad
cmp
sub
pushf
xchg
jle
test
pop
jns
int
dec
add
mov
or
xor
pop
inc
add
shlb
xor
movsb
iret
adc
xor
inc
mov
inc
sub
mov
dec
xor
sbb
sbbl
sbbl
cmp
int3
xchg
and
jle
inc
cwtl
data16
pop
sbb
jmp
push
dec
jp
mov
jbe
and
pop
or
je
jle
or
enter
mov
pop
sub
jge
push
inc
adc
dec
rolb
shll
fmuls
mov
cwtl
test
pop
cs
cmpl
cmpsl
mov
adc
pushf
cmpsb
and
daa
mov
jmp
jno,pt
xchg
dec
ja
mov
out
orl
imul
mov
push
inc
mov
lret
mov
and
fnstcw
ja
jb
pop
mov
push
xchg
mov
sub
and
jne
mov
ror
hlt
push
mov
sub
adc
movsl
dec
loop
in
test
movsl
lea
roll
popf
sbb
mov
dec
sti
nop
aas
sbb
or
mov
mov
fcoml
shl
repnz
mov
int3
data16
popf
enter
repnz
movsl
shrb
fildl
lret
pop
xchg
add
shll
ss
enter
dec
cld
sbb
rcl
in
sub
aam
or
cmp
mov
js
or
fcomps
cmp
test
add
adc
pop
jno
ret
in
js
jmp
or
jge
jl
mov
adc
add
rolb
jle
bts
ret
and
icebp
mov
es
or
mov
mov
dec
and
mov
negl
push
test
cmp
fs
pushf
addb
mov
jns
adc
xchg
cmp
mov
lock
call
or
enter
add
sub
cmp
lahf
sbb
push
repnz
pusha
nop
mov
add
outsl
cmpsl
pop
nop
les
call
and
cmp
outsb
mov
insb
push
lahf
out
sahf
je
test
push
add
inc
rorb
push
fsubs
inc
shr
lahf
sub
popa
pop
cmpsb
adc
or
push
push
sbb
mov
shll
out
or
mov
mov
bound
cmp
aam
jle
adc
dec
ret
dec
movb
xor
inc
jp
mov
cmp
jge
inc
mov
scas
push
test
out
stos
test
inc
and
test
jne
pop
pop
or
xchg
and
dec
jbe
cmp
icebp
and
lds
mov
pop
pop
adc
or
and
pop
lcall
jno
mov
aas
in
adc
sbb
rcr
mov
hlt
fdiv
mov
lcall
popf
mov
daa
mov
daa
roll
and
push
dec
cmp
lret
or
div
inc
or
je
arpl
popf
dec
dec
adc
mov
mov
subl
cmp
orl
movl
sub
jmp
andl
mov
je
or
xchg
shlw
or
push
adc
sahf
imul
lods
ja
test
pop
jbe
mov
addr16
push
js
xchg
xor
or
inc
lcall
rcl
or
notb
pop
test
outsb
cmp
andb
cmove
js
cwtl
outsl
push
into
jo
ret
dec
aas
sbb
or
mov
mov
mov
iret
xor
divb
cmp
movsl
xor
push
enter
test
ffree
pop
sub
clc
sbb
mov
fmuls
push
mov
xchg
cltd
add
pop
pop
cmp
mov
inc
cmp
dec
shll
in
es
jbe
jl
add
cmp
sub
loope
daa
js
adc
jno
jecxz
or
mov
imul
dec
adc
ret
test
inc
jns
addl
add
cmp
inc
repnz
icebp
inc
nop
sbb
lea
inc
cmp
sbb
rorl
test
scas
ficompl
pop
xchg
mul
popa
loopne
bound
push
inc
inc
xor
or
js
jmp
test
std
test
cmp
shlb
inc
inc
and
push
in
add
push
push
sbb
sub
xor
inc
mov
sbb
pop
ret
push
pusha
push
rolb
decl
inc
or
test
adc
push
dec
or
or
clc
addl
push
dec
jecxz
fisubrl
mov
test
shrb
inc
xor
lods
mov
mov
adc
jbe
dec
adc
ja
inc
enter
scas
test
fimull
push
adc
outsb
pop
inc
sbb
fbstp
out
sbb
adc
pop
divl
ret
js
sti
subb
mov
xabort
xchg
insb
into
fmulp
jle
push
push
jne
xchg
xchg
or
pusha
jns
adc
push
and
add
push
sub
pop
scas
sar
cmp
add
add
add
add
bound
je
xor
dec
lret
dec
and
icebp
scas
xor
sbb
andl
xchg
sbb
frstor
mov
or
jne
inc
or
shlb
js
mov
mov
pushf
lahf
shrb
fdivrs
incl
mov
or
lcall
ret
cmpl
les
lods
adc
pop
cli
jg
xorb
xchg
je
addr16
mov
jecxz
xor
xchg
xchg
fst
or
aam
jb
pop
hlt
fadd
fmuls
cmp
sbb
push
add
xchg
sbb
leave
mov
leave
lahf
xchg
out
shrb
xchg
call
cmpsl
mov
adc
adc
or
push
pop
mov
imul
inc
loope
sbb
jl
cmp
out
ss
mov
cvtps2pd
test
pop
sbb
test
sub
mov
test
or
mov
dec
jl
mov
mov
lret
movsl
aam
clc
fsubrs
xchg
mov
dec
or
sub
int
ss
sub
je
sbb
pop
addr16
scas
pushf
pop
or
add
pop
cs
add
out
loope
int
nop
cli
xchg
sub
adc
pop
ljmp
cmpsl
add
mov
add
sub
push
imul
add
xor
cltd
pusha
xchg
ja
movsl
mov
mov
jbe
xchg
or
out
sbb
hlt
hlt
stc
rcr
ss
je
or
inc
insb
je
inc
and
xor
subb
loope
insb
xor
sub
mov
sbb
pop
and
pop
fdivrl
pop
or
xor
mov
add
xor
rcrb
incb
fnstcw
arpl
or
imul
jae
cmc
jne
js
rorl
add
and
xchg
clts
outsb
lret
lea
pop
mov
imul
push
sbb
jle
leave
mov
pop
push
or
nop
push
ret
mov
int
inc
mov
fdivr
cmpsl
adcl
je
adc
and
movsb
inc
in
jae
jp
test
rorl
and
aaa
jne
pop
jge
pop
das
mov
adcl
pop
jo
clc
ds
dec
and
in
pop
leave
sub
or
or
sub
in
sub
adc
fildl
insl
and
imul
roll
inc
inc
push
insl
cmp
xchg
xor
xor
int3
negl
cmp
testb
or
aam
adc
adc
inc
cmp
das
std
out
pushf
je
mov
push
mov
movb
push
add
aas
push
or
mov
loope
setp
hlt
sub
enter
aaa
inc
mov
dec
mov
pop
and
adc
cmpsb
cmp
jecxz
adc
sbb
mov
or
cmp
push
cmp
push
pop
pop
ret
out
pop
sub
pop
sub
shrb
gs
into
add
addr16
sbb
push
outsb
je
js
or
test
insl
pusha
outsb
ljmp
add
stos
clc
xor
sub
aaa
pushf
or
mov
and
sub
sbb
adc
or
xchg
mov
or
or
addb
inc
insb
cmpsl
aam
add
pop
push
mov
adc
fidivl
mov
jmp
cmp
jle
insl
lock
out
cmpl
js
and
lds
or
xchg
or
adc
xor
adc
dec
aam
mov
adc
jne
sub
inc
sbb
mov
mov
fcompl
jecxz
lea
stc
lcall
pop
xchg
cwtl
inc
pop
cmp
sub
nop
xor
ds
inc
xchg
mov
push
adcl
aas
push
jne
inc
sbb
jae
sub
out
addr16
decb
mov
mov
dec
pushf
mov
adc
push
pop
data16
push
sub
pop
sub
lret
bnd
stos
into
ja
push
sbb
inc
mov
popa
inc
push
fidivrl
imul
jmp
aaa
int3
je
pop
ss
cltd
les
add
dec
ret
clc
pop
jl
push
push
push
rolb
jno
inc
in
pop
fimull
dec
xor
mov
or
jecxz
popf
jmp
lret
mov
mov
or
jne
and
lea
outsb
das
sbb
shrl
push
inc
mov
pop
xchg
cli
and
add
stc
cmp
xchg
dec
icebp
pop
lcall
dec
jmp
pop
xchg
loop
mov
sub
inc
cmp
ret
je
into
cmpb
shlb
fisubs
sbb
ss
mov
pop
fwait
js
loope
or
outsl
add
inc
cmp
sub
sar
roll
mov
sub
add
sub
sub
push
test
outsl
inc
daa
sahf
and
in
push
aam
cltd
sub
sub
mov
or
pop
shl
push
jp
fdivl
mov
fadd
in
jae
cmp
pop
jns
mov
cltd
adc
add
push
jbe
loope
adc
dec
sbbl
jne
add
fs
aaa
cmp
std
call
aad
xor
rcll
push
lock
sbb
xchg
jnp
add
jg
lock
jno
add
push
int3
sti
push
and
adc
je
into
jp
push
mov
dec
cld
push
movsl
daa
pop
mov
xorl
mov
sub
movsb
cmp
lock
mov
sub
test
movsb
bound
sub
repnz
repz
push
cltd
arpl
fwait
insb
dec
addl
movsb
xor
pop
lock
pop
or
mov
pop
and
mov
and
dec
mov
idivb
cmpl
cmc
push
bsr
push
and
inc
cli
fdivrp
rol
mov
sub
cwtl
and
rolb
add
test
sbb
cli
push
mov
push
addl
push
push
fsubs
push
push
xchg
or
or
jl
push
pop
popa
lcall
add
out
ret
pop
dec
aad
xor
pop
psraw
adc
add
mov
rcl
les
clc
mov
adc
xor
scas
mov
popa
cmp
add
jmp
push
or
mov
xchg
call
jmp
push
xor
cmovno
pop
sbb
xor
push
adc
ljmp
bound
in
xchg
ljmp
dec
dec
jo
movsb
lea
jl
xchg
xor
cmpsb
add
pop
adc
ss
dec
push
pop
jae
or
and
divl
adc
imul
add
jmp
clc
sub
sbb
inc
adc
fdivl
rclb
jno
dec
pusha
imul
cmc
sub
mov
shr
mov
imul
mov
jmp
dec
inc
mov
or
outsb
dec
int
jno
cmp
mov
cmp
adc
push
cld
clc
adc
mov
jne
sar
dec
cmp
jbe
inc
adc
add
pop
in
dec
or
subb
jae
mov
shr
lea
not
and
decb
jne
add
sbb
lea
xor
pop
cmp
pop
add
add
cld
add
clc
dec
imul
and
push
or
movsb
cmpl
mov
push
shlb
js
add
and
sti
add
inc
dec
pop
cmp
xchg
mov
shll
imul
fidivrs
and
ss
cs
andb
data16
mov
popa
pusha
shr
not
and
xor
pop
shlb
in
clc
jle
jmp
lea
das
mov
xor
xor
pop
dec
add
mov
push
or
add
dec
ss
adc
or
mov
int3
jnp
popf
int3
inc
or
dec
or
out
aas
insb
or
dec
pusha
mov
mov
inc
mov
adc
pop
sbb
xor
mov
lods
push
or
pop
ret
testl
dec
adc
push
mov
insb
shl
or
imul
mov
pop
adc
and
stos
and
adc
sub
add
loope
add
outsl
das
sti
subl
or
test
or
in
popa
frstor
dec
inc
adc
cmp
add
and
dec
pop
add
push
push
mov
shrl
clc
hlt
repnz
mov
fildll
enter
dec
adc
jo
sbb
jge
jl
jle
mov
push
jbe
insl
or
mov
loopne
shrb
cmp
add
mov
or
stos
imul
mov
outsl
push
or
cmp
dec
and
sbb
imul
stc
sub
cld
cltd
negb
les
aad
cmp
inc
adc
lods
test
add
mov
cmp
adc
andl
xorb
add
pop
or
imul
fadds
sub
out
fwait
out
add
rolb
mov
imul
in
xor
inc
clc
pop
add
add
or
hlt
or
sti
mov
pop
pusha
gs
int
adc
popa
lcall
popa
xchg
sub
inc
mov
sbb
jmp
inc
push
dec
clc
cmp
out
imul
mov
push
enter
sbb
push
add
sub
sbb
je
mov
jle
clc
add
subps
push
fcoms
sub
sub
fs
push
mov
inc
mov
lock
scas
ds
sub
inc
jne
or
lds
divl
and
les
or
adc
loopne
jge
xlat
sub
pop
shr
dec
pop
addb
add
dec
cmp
clc
mov
and
les
mov
push
cmp
ret
int3
inc
jecxz
inc
fisttps
mov
stc
add
mov
loopne
push
int3
push
pop
inc
pop
push
xor
adc
pop
inc
stc
sbb
push
mov
add
ds
add
cmp
nop
xor
negl
or
push
jns
mulb
sub
sub
add
das
mov
sbb
sub
adc
pushf
add
add
mov
in
frstor
mov
lea
jbe
xor
push
cmp
or
xor
shll
dec
pop
pop
push
imul
or
adc
js
je
dec
data16
and
js
rclb
test
iret
adc
pop
dec
mov
inc
insb
xor
xorb
pop
mov
sub
jl
test
xor
jle
imul
mov
inc
dec
insb
pop
xor
push
sar
dec
jo
xor
jp
movsb
pop
fcoms
mov
in
mov
cld
xor
cmp
repz
mov
test
pop
xchg
push
mov
ss
fbstp
jo
jmp
ja
dec
ficoms
add
push
sti
mov
lea
outsl
ret
mov
xchg
jbe
and
shll
movsl
loope
cmp
lods
decb
push
cs
lret
into
mov
mov
xor
jns
dec
ss
dec
push
add
loop
ja
or
jne
ret
shll
adc
loope
inc
cmp
push
jecxz
add
push
push
jge
fs
and
addb
rclb
or
out
fldcw
push
nop
cmp
and
incb
add
or
and
adc
or
dec
data16
push
jne
mov
sbb
jne
jmp
sahf
imul
jnp
add
xor
mov
jmp
xchg
sar
cwtl
insb
mov
and
lahf
in
or
adc
cltd
sbb
lcall
cmp
je
scas
in
loopne
mov
in
cli
and
mov
loope
mov
jl
and
iret
jne
sbb
push
fwait
jno
mov
or
push
xchg
aad
xlat
adc
add
out
repz
gs
dec
mov
and
jne
mov
lock
sbb
push
pop
outsb
leave
inc
test
inc
push
aad
inc
fcompl
sbb
jle
fiadds
je
cmp
xchg
dec
add
xchg
dec
jo
jp
jge
iret
push
mov
cmp
pop
and
mov
push
xor
push
decb
jne
repnz
int3
or
dec
mov
mov
or
and
push
clc
into
xor
inc
imul
xor
push
xor
pop
lock
das
pop
xor
xor
cmp
mov
or
push
or
dec
mov
or
inc
or
lcall
mov
out
or
sub
or
test
add
fnsave
xor
cmp
lods
sbb
dec
jne
cmp
das
sbb
push
ds
push
mov
inc
add
mov
push
iret
repnz
sbb
loopne
or
jle
inc
nop
in
jb
or
xorl
add
rolb
lock
mov
and
push
mov
add
xor
cmp
fdivr
push
rol
pusha
and
or
mov
ss
stos
arpl
mov
loopne
or
add
test
push
add
xchg
pop
scas
and
inc
inc
cmp
cmp
popa
ret
sub
add
push
mov
adc
pop
je
push
push
add
pop
cltd
repnz
cmp
cmp
push
push
dec
mov
mov
adc
or
out
dec
dec
push
or
jmp
dec
sbb
dec
loope
mov
jp
shrb
push
add
ret
xor
lahf
inc
mov
adcl
jno
push
divl
sbbl
pop
jne
push
rcrb
pop
mov
std
mov
sbb
movsl
mov
lahf
rolb
dec
sbb
rorb
inc
push
sub
insb
pop
or
pop
movsl
jo
shlb
inc
mov
cmpsl
pop
jl
adc
es
lds
lahf
loope
ret
int3
push
out
pusha
add
inc
rolb
je
jmp
push
ret
pop
int
add
mov
loop
enter
adc
add
pop
dec
push
inc
or
adc
ret
cmp
xchg
stos
andb
stos
nop
jg
pop
addl
into
jle
add
push
add
popf
call
xchg
aam
hlt
adc
xchg
mov
or
jne,pn
xor
jge
mov
xchg
jge
mov
lds
mov
aad
in
repnz
in
scas
mov
pop
add
cmp
mov
stos
dec
inc
rorl
sbbb
xchg
imul
test
mov
mov
or
xor
xor
push
pop
pop
ja
cmp
mov
sbb
shr
dec
xor
sbb
add
mov
adc
xchg
mov
push
lret
pop
fistps
sbb
xchg
sub
add
sub
shl
rorb
ss
fs
push
scas
sbb
scas
sbb
mov
scas
and
jo
mov
cs
icebp
push
outsb
and
xor
icebp
aas
insb
jne
jp
add
pop
and
cmp
adc
sbb
xor
scas
and
shlb
mov
in
or
cmc
jmp
cs
inc
loope
les
movsb
pusha
add
imul
dec
repz
shll
lea
enter
call
add
jns
add
scas
test
test
sub
pop
dec
gs
cmpsb
cwtl
cmpsl
call
dec
mov
leave
enter
inc
mov
sub
and
jp
xchg
lret
jp
fmulp
test
insl
and
sbb
adc
outsl
sbb
push
and
int
pusha
lahf
mov
add
in
repnz
fimuls
dec
sahf
int
cld
stos
inc
stc
rolb
xchg
lret
add
lahf
mov
shll
and
call
pop
in
test
jns
mov
push
hlt
xchg
lahf
push
lods
movsb
xor
add
sbb
xchg
test
xor
call
in
or
mov
mov
xor
cltd
in
rolb
mov
out
loop
in
sbb
pop
xor
or
les
test
popa
mov
mov
icebp
adc
mov
or
sysret
sub
or
int
int
xchg
cli
inc
jns
aaa
test
leave
cmp
and
ss
ds
mov
daa
cmp
xorb
push
pop
lea
push
sub
mov
cltd
les
or
add
nop
sub
pop
xor
push
rcr
or
fwait
shll
loopne
adc
add
mov
lods
add
or
popa
test
or
sub
pop
add
push
inc
push
lods
inc
faddl
mov
or
mov
mov
add
mov
popa
cmp
and
sbb
add
shr
lds
pop
jo
testb
cmp
sub
lods
or
push
fcom
aam
xlat
and
adc
cmp
outsb
jecxz
in
jne
cmpsl
xor
hlt
call
mov
aaa
inc
cld
push
or
aaa
and
mov
cmp
adc
add
add
shlb
nop
mull
out
les
push
or
shll
enter
jno
mov
add
and
dec
cmp
mov
or
add
cli
inc
shll
mov
inc
xchg
xor
and
adc
cli
xchg
icebp
add
adc
cmpsb
xor
jg
fidivrl
add
jecxz
incl
push
pop
sub
sbb
dec
enter
mov
movsl
xchg
test
je
push
or
pusha
sub
enter
rorb
pop
out
loopne
xor
mov
fldl
or
fldl
or
and
sti
xchg
outsb
loop
loopne
xor
enter
ja
fisubrs
push
leave
pop
jmp
jo
push
fwait
in
mov
dec
adc
mov
in
pop
in
sub
das
sub
jbe
fidivrl
sub
je
dec
je
add
and
sbb
lret
push
sti
fldenv
lcall
xchg
and
cmp
mov
sbb
insl
mov
fadds
sub
xchg
lock
add
sbb
inc
add
jno
mov
lret
xchg
adc
lock
and
pushf
in
lock
push
in
push
jns
loopne
adc
faddl
push
fdiv
punpckhwd
push
fsubrl
fstl
push
shrl
adc
lock
sbb
jne
fsub
mov
das
and
inc
lock
push
stos
ret
cmp
repz
into
xlat
out
cmp
clc
add
xchg
sti
rcll
add
arpl
lea
rorl
dec
or
mov
cmp
f2xm1
jg
push
testl
jne
ds
xchg
sub
lock
hlt
fisubs
pop
push
inc
clc
add
mov
ficoml
xchg
push
xchg
jmp
inc
sbb
shll
adc
fldl
popa
push
jmp
push
sbb
cli
clc
jge
stos
jne
fmull
call
fidivrs
cmp
test
jne
push
push
add
jge
cmp
fisubrs
inc
sbb
stos
dec
pusha
pop
fnstenv
sbb
faddl
jb
int3
call
add
xlat
decl
cmp
std
lods
std
rol
inc
or
jne
cmp
pop
sbb
pop
mov
popa
adcb
clc
adc
sar
fcomp
jg
jecxz
or
push
add
jg
xchg
dec
sbb
sbb
adc
pop
sar
lea
fisttps
testb
xor
sub
dec
jmp
adc
sbb
ds
mov
pop
xchg
inc
daa
sub
and
cmp
insb
or
cld
pop
ja
movsbl
xchg
xchg
fcomps
lock
pop
das
xchg
inc
xchg
std
lods
fcom
fmuls
adc
shlb
cs
shl
enter
xchg
xchg
sbb
cmp
dec
dec
push
pop
or
shlb
fs
addl
test
mov
cmp
ficompl
push
je
or
out
popa
xchg
adc
and
je
xor
fsubrs
jb
mov
mov
mov
mov
cmp
int
dec
cmp
lahf
sbb
lds
cmp
inc
sub
rorl
jecxz
fstps
ss
fcomps
gs
xor
pop
inc
jne
dec
mov
inc
xor
dec
inc
push
aad
dec
movsl
in
sub
imul
lcall
pop
lods
or
ret
jo
sbb
movsb
jo
fadd
push
leave
shll
and
test
fldt
dec
mov
cmp
hlt
loopne
cltd
lcall
inc
push
sbb
popf
jo
cmp
call
addb
xor
sahf
inc
out
or
adc
mov
xor
popf
lea
jns
aas
xchg
mov
in
mov
mov
inc
mov
pusha
testl
cwtl
add
arpl
jne
xor
idivb
dec
stc
mov
loopne
sbb
adc
mov
dec
mov
sub
pop
cmpsb
mov
mov
aad
rcrl
mov
sahf
add
lods
clc
inc
cld
xchg
lret
hlt
std
sub
adc
jnp
xchg
shr
mov
sub
jmp
sub
mov
lods
add
into
je
aaa
bound
or
inc
insb
and
sti
or
jb
std
mov
nop
cmp
mov
mov
sbb
lds
enter
addr16
das
lock
fdivr
adc
adc
ret
push
lods
fbstp
and
shll
popf
mov
rolb
mov
sbb
gs
mov
in
pop
es
mov
es
push
mov
or
insl
std
push
xchg
fdivrs
testb
push
daa
sub
sub
nop
std
cmc
jge
lock
sub
pop
mov
std
out
bound
gs
mov
das
cmpb
pop
imul
int3
xor
cs
int3
icebp
push
scas
xor
ds
mov
test
roll
cld
mov
mov
out
lcall
push
movb
aad
out
push
test
xor
cmpsb
mov
dec
xor
roll
pop
xchg
xor
or
sub
adc
test
cmp
popa
cmp
and
inc
popf
call
std
or
inc
xor
shrl
test
pop
test
leave
and
mov
jne
ss
daa
mov
jp
popa
icebp
push
fdivrp
xor
sahf
jp
icebp
ds
cs
mov
or
in
push
test
sub
jmp
and
movsl
movsb
dec
inc
add
mov
roll
sar
lock
lods
cmpsl
mov
sub
cmc
dec
or
sub
or
sbb
fsubrp
mov
jge
int3
cmp
cmc
loope
or
pop
cmpsl
test
shll
mov
lea
jae
ds
or
std
dec
sbbl
je
cmpsl
add
insl
mov
add
and
movsb
adc
clc
mov
xor
inc
sub
sub
sub
inc
cwtl
cmovge
or
cmpsl
clc
jne
fdivr
cwtl
adc
das
push
dec
pop
jno
and
xchg
and
and
nop
xchg
or
push
loopne
loope
xchg
enter
jl
das
and
mov
and
sahf
cmpsl
fsin
nop
jecxz
inc
add
movb
jb
leave
push
ret
ucomiss
mov
and
js
mov
lock
add
inc
insb
adc
shll
adc
push
mov
mov
sbbb
dec
out
mov
push
fbstp
sub
mov
dec
call
outsl
fdivs
fldcw
xchg
xlat
and
aas
mov
aam
jnp
dec
sub
mov
push
test
mov
int
sarb
in
mov
push
loopne
or
cwtl
lods
xchg
fnstsw
or
adc
inc
ret
sub
cmp
ja
mov
adc
add
popa
xchg
loopne
cmp
or
mov
cmp
dec
dec
ds
cmp
xchg
xor
xchg
int3
lock
ljmp
dec
push
lock
sbb
mov
movsl
pop
add
pop
mov
rorl
cmp
or
int3
fldcw
xor
xchg
call
mov
cmpsl
repnz
scas
in
fldenv
fstps
adc
adc
and
mov
sbb
jns
int3
int3
les
sbb
mov
in
sub
or
fstp
or
movsb
xor
dec
sub
xchg
fldl2e
ja
daa
daa
xchg
push
sbbl
and
sub
inc
enter
in
mov
leave
test
lret
sbb
enter
es
push
enter
dec
cmp
lods
lret
dec
add
js
pop
pop
scas
lret
dec
dec
sub
xor
push
jns
insl
and
mov
cmpsl
sbb
cmp
lret
out
add
mov
mov
lret
cmpsb
nop
and
lods
scas
sbb
mov
repz
mov
pushf
leave
aaa
ss
jno
lea
xchg
pop
sub
pop
jp
aaa
lock
frstor
push
mov
and
cmp
sub
outsb
pushf
daa
inc
mov
lret
movsb
leave
and
and
andb
leave
adc
and
test
cltd
sub
inc
test
mov
pushf
in
cmp
fs
pushf
add
nop
xchg
lods
lods
lods
xchg
movsl
rorl
push
mov
rol
push
add
je
push
mov
jmp
ljmp
add
jns
aaa
roll
imul
inc
sarb
pop
arpl
adc
shr
hlt
out
scas
mov
nop
sbb
jg
push
sub
inc
adc
and
inc
push
mov
mov
pusha
jo
stos
dec
pop
rorb
cmp
cltd
jb
jmp
xor
sub
or
push
loop
push
add
xchg
cmp
test
lret
sbb
mov
inc
add
and
nop
add
adc
out
pop
popa
xchg
dec
rep
ss
neg
pop
mov
push
imul
movsb
or
in
push
add
rorl
and
push
add
addb
outsl
pop
lock
mov
or
pop
xor
dec
iret
notl
push
pop
outsl
inc
or
jbe
sub
lahf
pusha
jle
sbb
ja
push
movsl
test
mov
or
sub
loope
inc
enter
adc
pop
or
rorb
into
jno
or
mov
sub
pusha
or
push
into
push
lret
sub
imul
clc
ja
ss
fbstp
in
add
sub
adc
insl
cmp
lock
rep
jge
adc
dec
jne
cli
rcll
in
nop
outsb
sbb
in
add
jmp
push
or
lds
pop
int3
push
push
ret
xlat
jmp
pop
jae
test
push
into
xor
pop
add
mov
mov
cmpsl
and
loopne
inc
sub
insl
pusha
inc
or
or
jne
mov
imul
or
icebp
pusha
mov
jne
xchg
sbb
pusha
lods
pop
xchg
ja
ret
or
dec
stc
xor
clc
cld
cmp
and
mov
mov
loop
cmp
cmp
mov
and
push
pop
mov
sub
or
push
xor
adc
xchg
test
stos
mov
test
outsb
pop
or
pop
fistpll
xchg
test
xor
addl
adc
outsl
mov
test
je
divl
adc
insb
scas
jg
loop
ret
aaa
mov
sbb
ret
or
cli
cltd
inc
push
mulb
jle
lcall
sub
iret
imul
add
mov
and
lock
fucomip
stos
bound
fadd
pushf
ret
mov
mov
or
mov
cs
add
and
mov
and
mov
repnz
lahf
clc
push
mov
mov
inc
inc
lds
dec
pop
pop
lods
pushl
fucomip
add
mov
sub
xor
ret
int3
cmpsl
mov
push
cmpb
mov
in
fcomip
orb
lea
or
leave
jnp
push
je
hlt
daa
clc
inc
push
inc
cmpsl
xor
scas
sbb
jae
testl
out
jmp
ss
sbb
sbb
cmp
jp
mov
and
and
jmp
scas
lds
pop
adc
or
pop
adc
or
mov
push
into
mull
xchg
repz
mov
inc
push
pop
push
push
inc
shr
int
idiv
rcr
shr
rcr
or
jne
div
pop
dec
adc
inc
idivl
pop
jb
cmp
or
cmp
or
xor
jle
fwait
xchg
and
adc
or
ficoml
fcmovu
lret
or
add
dec
in
sub
inc
add
inc
pushf
sbbb
jne
pop
inc
and
mov
movb
cld
inc
inc
or
movb
arpl
adc
and
daa
push
lahf
or
addl
and
jae
cmp
lea
xor
in
cmp
leave
or
clc
out
sub
and
xor
sbb
pusha
adc
mov
les
and
leave
std
dec
mov
mov
loop
dec
mov
sbb
pop
add
sub
adc
xor
dec
xchg
and
cmova
dec
dec
xchg
test
es
inc
cmp
scas
pop
inc
lcall
jle
jne
lea
jb
mov
sbb
jo
aas
pop
adc
push
lret
push
sub
dec
and
ret
cmc
jne
pop
sbb
and
dec
sti
cmp
adc
adc
leave
dec
jae
adc
and
add
out
adc
or
add
dec
daa
fiadds
sbb
or
push
adc
mov
jl
mov
and
jb
loop
subb
mov
lret
push
jno
sub
sbb
inc
sbb
add
fs
stc
mov
aaa
adcb
adc
jo
sub
dec
repz
add
push
mov
data16
lret
iret
add
add
add
sub
and
or
int
inc
sbb
lock
jo
jbe
out
inc
lea
imul
in
loope
fs
sar
xchg
loopne
lods
cmp
or
and
mov
mov
push
lock
adc
lods
inc
rcrb
pusha
xor
push
add
xchg
int3
inc
cmp
push
sub
cltd
lock
scas
mov
push
insl
mov
je
pop
cmp
loopne
and
xchg
pop
je
lea
and
cld
add
les
xor
sbbl
mov
or
nop
hlt
or
nop
inc
sbb
test
cmp
lock
je
mov
fdivrp
iret
lods
iret
stos
dec
jle
sub
or
mov
shl
push
adc
mov
loopne
xor
ret
sarl
xor
in
xor
jo
and
ljmp
stos
mov
push
or
mov
int3
pop
cs
inc
adc
push
xchg
mov
jl
cmp
je
ss
fmul
repz
adc
xchg
pop
lret
adc
outsb
or
cld
ds
or
popf
adc
and
scas
and
pop
add
pop
xchg
dec
dec
xor
cld
dec
push
mov
jae
fmull
insb
clc
mov
adc
icebp
lods
movsb
repnz
dec
dec
jge
add
and
dec
or
enter
cmp
jb
inc
fildll
sub
icebp
sbb
inc
cmp
roll
and
xor
daa
dec
sbb
int
in
mov
pop
jne
adc
or
adc
sub
add
jno
xchg
mov
dec
sbb
mov
sbb
mov
pop
or
jb
inc
sub
paddsw
lahf
push
push
inc
in
mov
push
cs
or
clc
cmp
lock
add
xchg
andl
mov
daa
push
xor
dec
xchg
sub
inc
and
pop
dec
or
pop
shll
dec
push
lock
les
push
pop
adc
sub
or
mov
ja
push
pop
mov
orl
shrb
push
or
rorl
and
push
add
xchg
or
inc
and
test
inc
sbb
scas
fldcw
rorl
fadd
cmp
subb
inc
mov
sub
push
and
int3
in
js
jmp
mov
cwtl
lock
push
rorl
lret
mov
and
cmp
xor
push
inc
add
and
loop
rcr
add
jle
cmp
mov
pop
cmp
lret
dec
cmp
xchg
sub
cmp
cmpsl
jb
nop
popl
jne
xor
add
pusha
adc
jmp
leave
push
sbb
int3
pusha
sbb
arpl
fidivrs
dec
lods
je
push
push
xor
test
out
push
cmp
cmp
adc
imul
and
adc
je
mov
pop
mov
add
and
inc
ljmp
cmc
inc
cli
push
adc
mov
or
lock
test
fs
fsts
jne
fs
sbb
aad
inc
mov
mov
mov
sub
lock
pop
xchg
or
jbe
xor
inc
or
je
cmp
scas
mov
jmp
pop
dec
or
shll
mov
scas
outsb
add
xchg
fcmovb
jle
mov
push
add
in
add
cs
mov
scas
push
or
or
out
je
add
in
sti
aam
inc
pusha
jne,pn
sbb
inc
mov
cs
sub
adc
out
sbb
jge
mov
mov
pop
mov
and
add
jbe
sarb
ficomps
mov
push
dec
jmp
or
rclb
mov
aaa
xor
sub
mov
inc
rcll
fs
sub
and
pusha
add
push
in
and
add
ljmp
push
add
push
pop
movsb
mov
jg
pop
ss
add
bound
movsl
js
and
cmp
adc
jbe
cmp
and
cmp
jbe
insl
loopne
push
xor
or
add
and
add
cld
or
dec
jae
add
sub
push
in
mov
ja
cmpsb
sub
inc
test
rolb
imul
jae
daa
test
loope
rcll
sub
pop
adc
sbb
or
mov
inc
dec
pop
dec
and
mov
cmp
jbe
push
inc
push
inc
lds
jge
push
jmp
aad
daa
js
sub
subl
xchg
cmp
rolb
pop
je
push
pop
push
dec
cmp
or
dec
mov
ret
sub
repz
mov
adc
push
adc
in
daa
mov
in
imul
pop
or
dec
add
sub
mov
mov
stc
inc
dec
push
out
mov
mov
pop
movl
push
mov
jl
xor
adc
lcall
incl
dec
or
mov
push
jo
jp
jbe
mov
xchg
sbb
sub
inc
mov
push
xchg
les
add
mov
add
cli
repnz
popa
adc
xchg
add
inc
jge
mov
ja
cmp
stc
pop
popa
xchg
repz
jmp
xor
mov
pop
push
inc
inc
adc
add
or
mov
add
inc
xor
stc
pop
es
jb
or
mov
je
test
xchg
jb
mov
and
jmp
push
pop
cld
pop
push
lds
popf
push
fs
clc
cmp
cmp
leave
mov
add
mov
sub
into
inc
add
xor
cmp
inc
inc
pop
loope
pop
add
push
inc
xlat
popa
adc
jle
pop
mov
cwtl
push
daa
cmp
mov
mov
and
ja
jmp
dec
mov
mov
xchg
xor
aaa
add
cld
sbb
jo
pop
push
mov
loopne
inc
aaa
movsb
icebp
stos
push
aas
jae
mov
movb
out
mov
add
andps
push
mov
or
jne
fidivrl
push
sbbl
mov
or
xor
pop
add
mov
and
pop
loope
fistpll
int3
jne
pop
and
rorb
sahf
jb
or
and
jbe
int3
sbbl
cmpsl
mov
insl
mov
cmp
dec
inc
inc
or
jne
jl
dec
sbb
fidivrl
clc
pop
and
hlt
arpl
das
mov
or
cli
dec
jae
pop
clc
add
aad
add
cld
cmpl
ret
jmp
sbb
imul
and
lock
lods
cmc
xchg
ficompl
iret
xor
or
push
push
sbb
pop
or
push
data16
fistpl
insb
sub
xor
mov
cli
aaa
pusha
test
inc
push
pop
push
inc
add
dec
add
xorl
or
dec
lea
loopne
xor
or
or
or
mov
and
push
and
xor
mov
mov
in
add
sub
xchg
jae
movsb
pop
mov
outsb
add
xchg
loop
xlat
push
cmpl
clc
mov
add
pop
sbb
rcl
push
mov
or
add
nop
and
cmpxchg
sub
pusha
and
and
push
cmp
daa
adc
test
mov
inc
sar
sarb
jg
popf
or
adc
ret
addr16
xchg
jle
jo
push
mov
dec
push
and
pop
push
ljmp
dec
mov
adc
sar
and
sarl
xor
out
add
push
add
sub
rcr
and
jns
push
inc
or
inc
adcl
movsl
add
xchg
js
xorl
push
cmp
push
xorb
gs
jb
xchg
andl
testb
rcll
shl
mov
lea
repz
mov
aas
push
aaa
xor
rorl
add
idivb
sbb
sub
mov
push
push
cmp
push
add
pop
jl
inc
mov
jmp
jo
dec
cmpsl
scas
pop
notb
jae
imul
push
ret
aaa
arpl
int
add
inc
mov
jp
sahf
or
mov
lods
push
out
push
xlat
cs
jle
and
adc
jns
push
xchg
movsb
loope
lock
adc
mov
test
cmp
jmp
test
adc
loopne
or
mov
div
push
rcll
add
enter
cmp
mov
and
jb
rcrl
rol
das
dec
add
ret
sub
adc
jmp
sub
jmp
ljmp
fwait
das
xor
push
inc
rcll
jle
insb
cmc
mov
push
mov
mov
sub
cmpl
mov
dec
fdivrl
sar
das
repz
jmp
pushl
add
std
movsb
fs
push
push
jae
and
and
add
pop
xchg
xlat
mov
addb
cmp
andl
inc
adc
jl
mov
flds
test
in
dec
mov
cmc
inc
nop
push
rorl
jae
in
repz
sbb
ret
mov
je
push
cmp
fnclex
test
jp
sti
shr
inc
or
xor
ficomps
or
int
xor
mov
mov
cmpsl
pop
nop
mov
gs
jbe
leave
lds
sub
shlb
add
jb
sbb
xchg
add
push
orl
pop
in
repz
shr
xor
xor
call
xor
clc
mov
jmp
mov
xor
iret
decl
cmpsl
or
cld
jb
dec
adc
loope
sbb
js
push
jae
add
and
cmp
add
xorl
inc
dec
mov
pop
mov
sub
push
pop
cmp
pop
cmp
jg
add
fwait
and
jmp
or
test
xor
add
rcr
dec
dec
bnd
ret
sub
mov
imul
and
sbb
ja
xor
add
sub
btc
sub
aam
fsubr
push
jbe
mov
aas
stos
sti
xchg
and
xor
call
call
cmp
jne
sub
adc
outsl
insl
adc
cmp
jae
pop
cmpsl
repnz
mov
outsb
adc
jle
mov
addb
jmp
in
popa
mov
pop
push
push
jno
xor
inc
mov
aaa
leave
enter
inc
jecxz
loop
adc
jl
mov
push
adc
dec
fwait
inc
push
xchg
mov
xor
add
adc
inc
jmp
scas
hlt
pop
inc
fsubrs
jbe
cmp
imul
enter
push
mov
mov
push
insb
rcl
and
ficompl
popa
sbb
adc
mov
mov
cmpsb
rcrb
adc
push
dec
arpl
imul
ja
shrl
mov
push
ja
cld
and
push
ja
incl
mov
in
or
in
fs
or
in
or
addl
movl
nop
xrelease
and
dec
push
sbb
cmp
mov
nop
js
aas
push
jo
mov
cmp
sub
testb
testb
or
loopne
je
jg
shrb
cmp
or
test
or
xlat
dec
test
notb
inc
loopne
stc
lods
jne
stos
sub
mov
pushaw
dec
and
xor
add
mov
cmp
jbe
cmp
jg
jg
adc
mov
or
test
lahf
cmp
mov
mov
inc
roll
jnp
and
enter
adcb
shlb
adc
or
je
cltd
cli
fcoml
and
into
dec
mov
in
and
mov
adc
fucomp
xlat
sahf
xor
push
in
ret
pop
inc
or
or
das
adc
and
mov
jne
inc
sbb
inc
test
or
adc
or
subl
dec
push
push
clc
mov
sub
sbb
loope
inc
sbb
and
push
xor
sub
mov
inc
popa
sbb
orl
icebp
adc
add
add
push
jl
push
add
loopne
int3
mov
or
add
add
outsb
or
inc
bound
jg
aas
add
mov
and
daa
sbb
pushf
sbb
xor
and
bound
insl
andb
push
adc
or
mov
inc
out
outsl
dec
sahf
xor
rclb
pop
jg
rcrl
push
pop
jl
data16
pop
mov
sub
adc
leave
xchg
or
fstl
ds
adc
sbb
loopne
dec
jecxz
and
loope
stos
lock
adc
or
push
gs
add
xor
sbb
sahf
addr16
xchg
test
mov
mov
aaa
mov
mov
fdivs
aaa
inc
inc
push
nop
cltd
push
or
push
add
mov
push
push
lods
cld
inc
jp
outsl
mov
clc
sbb
gs
pop
cmp
cmpsb
sbb
cmpl
adc
ror
ja
inc
or
sbb
je
fidivrl
jp
pusha
xor
add
movsl
movsl
mov
and
lods
cmc
sbbl
repnz
loope
push
cwtl
addl
ljmp
addr16
pop
mov
shl
into
cmp
cmpl
rcrl
in
mov
lret
les
jp
xchg
ret
pop
xor
pop
lock
ror
sbb
cltd
add
jle
dec
mov
cmp
adc
or
ss
add
push
dec
cmp
mov
mov
or
cld
sbb
inc
mov
les
pop
lods
ja
xor
cmc
repnz
xlat
cmp
shll
loope
xor
jae
mov
adc
lock
jbe
jp
mov
xchg
je
fstps
xchg
imul
adc
jg
add
adc
or
idivl
pop
add
cmp
or
and
fidivl
je
mov
and
push
mov
cmp
icebp
and
sbb
shl
add
add
sbb
nop
dec
popa
sub
add
xchg
pop
mov
pop
adc
in
jae
sub
fld
adcl
sbb
hlt
add
xorb
sbb
adc
cli
ja
test
pop
mov
sbb
dec
add
add
cmpsb
arpl
adc
test
pushf
fnsave
add
and
ret
mov
icebp
enter
adc
cli
inc
cs
pop
andb
mov
jg
or
inc
sub
jns
push
xor
daa
popa
test
jb
cmp
fimull
xchg
out
aas
sbb
in
pop
je
pop
cmc
and
xor
insb
xchg
imul
mov
inc
and
lcall
and
or
aad
in
lret
push
addl
jae
push
cmp
jl
ds
ss
adc
roll
bound
lea
testb
jne
clc
and
je
push
mov
popf
sbb
cmc
sub
ljmp
sub
mov
repnz
nop
and
inc
push
jle
push
in
dec
dec
xor
enter
ss
mov
icebp
cmp
scas
mov
gs
mov
xlat
or
imul
incl
sbb
adc
or
lret
shll
push
mov
and
jns
jne
jmp
insb
out
loop
frstpm(287
or
push
fmulp
push
push
arpl
adc
dec
out
mov
lock
adc
mov
jle
xchg
ss
lret
test
sbb
mov
or
jl
push
cmp
subl
adc
adc
pop
push
inc
sbb
pop
mov
push
jle
mov
add
mov
xchg
dec
mov
cmp
push
lock
ss
pop
loop
xchg
addl
jg
add
hlt
outsb
sub
push
xchg
test
call
adc
in
clc
and
lods
pusha
jbe
add
loopne
mov
push
sbb
decl
xor
dec
out
js
insl
jg
adc
orl
sub
pop
hlt
shl
jecxz
pusha
sbb
out
loopne
mov
test
dec
mov
add
ret
mov
pop
scas
clflush
push
pop
and
push
inc
fldl
xchg
loop
mov
add
or
cmp
notl
repnz
sbbl
and
push
int3
pop
or
mov
ss
enter
dec
jnp
es
lret
xlat
inc
cmc
sub
ljmp
xor
dec
sbb
imul
xor
test
cld
and
nop
adc
xlat
je
lcall
lock
mov
and
cmp
jb
testb
js
add
or
pop
orl
cmp
jge
push
daa
fidivrl
jmp
inc
movb
ret
pop
je
cmpsb
xor
dec
jl
sub
pop
adc
push
decb
cs
push
or
and
add
gs
sbb
das
outsl
fdivl
testb
or
push
push
adc
mov
stos
iret
les
insl
cld
jle
hlt
mov
rcrb
fstpl
pop
jmp
add
and
lea
inc
pop
pop
cltd
pusha
movsb
mov
mov
ja
rclb
push
ret
mov
add
and
icebp
push
or
sub
sbb
in
cmpsb
pusha
or
cmp
test
pop
add
jbe
lea
lea
or
mov
mov
int3
fucomp
dec
pushf
cmp
repz
mov
mov
mov
popl
sbb
adc
cld
push
dec
je
sub
pop
dec
or
jp
pop
loopne
cwtl
push
xchg
mov
sub
mov
int3
js
xchg
or
sbb
pop
rcrb
push
adc
or
mov
mov
rcl
push
pop
std
pop
call
pop
filds
inc
cmp
xor
out
rcl
sbb
push
or
push
mov
jle
push
sti
add
or
in
sub
sub
imul
cmp
ss
in
and
sub
loope
in
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
enter
js
dec
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
sub
mov
je
xor
mov
add
lock
lds
fbstp
jle
or
imul
and
dec
jae
fwait
adc
or
rorb
and
or
mov
nop
or
mov
adc
enter
pop
inc
or
lods
mov
test
jne
xchg
les
dec
inc
out
sub
ret
cmp
sbb
mov
dec
jne
push
inc
loop
out
jbe
gs
push
imul
mov
sub
mov
mov
pop
gs
inc
push
in
aam
cmp
cmp
push
fidivl
dec
sbb
insl
push
adc
push
cmpsb
add
imul
movsb
cmc
push
sbb
int3
pop
aam
mov
pop
xchg
mov
pusha
add
xor
sbb
cmp
pop
fiaddl
jne
pop
xchg
addr16
or
and
inc
adc
xchg
movsb
fucomip
add
and
fcmovu
pop
pop
adc
pop
cmp
or
or
das
cmp
add
adc
inc
jl
cmp
ret
testb
mov
test
cmp
fmuls
in
jbe
mov
mov
add
popa
dec
mov
push
inc
lcall
pusha
bound
sbb
into
sub
dec
pop
je
push
pushf
sbb
pop
sub
sub
inc
xchg
testb
push
movsl
inc
mov
xlat
test
adc
or
add
pop
push
aaa
push
test
in
lahf
inc
lods
xchg
test
push
xor
fisubs
and
int3
add
add
xchg
xchg
xchg
and
cltd
outsl
push
test
sbb
fwait
mov
and
or
sbb
mov
push
xchg
push
adc
mov
or
inc
xchg
xor
rcrl
orl
jmp
jbe
iret
les
xor
xchg
js
adc
loope
cli
loopne
and
or
int
add
sbb
add
and
fcoms
popf
push
push
hlt
fs
ja
incl
adc
and
or
and
test
loopne
aas
xchg
js
mov
adc
and
jle
or
cmp
pusha
mov
enter
sub
std
pop
inc
cmp
xor
mov
psubb
loope
shlb
mov
pop
mov
inc
push
inc
add
xchg
push
xchg
or
inc
cmp
fcom
push
xchg
fsubrp
sbb
sbb
dec
jnp
dec
pop
xchg
push
mov
dec
shrb
jns
inc
scas
sub
in
cmpb
pop
shlb
cmp
xor
std
or
jne
xor
push
push
test
push
and
out
sar
push
test
pop
and
fcmovnbe
sti
mov
or
or
loope
sti
add
mov
divl
or
iret
je
push
wbinvd
push
adc
inc
popf
lods
popa
rclb
or
stc
out
cmp
add
mov
inc
sbb
ret
mov
push
adc
ljmp
adc
outsl
inc
pushl
mov
jns
xchg
popf
pusha
dec
sub
add
int
push
sahf
cmp
pop
addl
pop
outsb
xchg
lret
ss
mov
or
inc
adc
mov
pop
lea
jbe
stc
or
lods
mov
adc
divl
xor
push
hlt
mov
add
xor
stos
jmp
out
push
mov
cmp
xchg
sub
add
cmp
fsubs
rclb
push
xchg
adc
mov
popa
inc
call
jmp
insb
sub
adc
nop
cmp
sbb
out
inc
loop
mov
insb
push
lods
jnp
sub
jo
dec
pop
pusha
fcoms
or
ljmp
jl
dec
cld
push
lock
sub
sarl
cmp
sbb
mov
mov
imul
incl
cmpsb
int
jnp
jbe
push
test
rolb
jno
subb
add
mov
sub
leave
cmp
cmp
jne
movzwl
popa
xchg
aam
shl
inc
and
inc
popf
ficomps
int
push
jmp
inc
aad
inc
and
cli
dec
lea
jl
pusha
push
je
xor
fcomps
add
jae
lcall
sub
mov
sbbb
leave
jo
add
adc
lock
mov
sbb
dec
sub
sbbb
jl
rolb
scas
lret
mov
jmp
xchg
jge
jbe
mov
andl
out
ficoml
jae
mov
pop
pushl
adc
cli
or
inc
mul
in
adc
mov
adc
mov
mov
fsubrs
sub
and
lods
sub
inc
pop
inc
add
sub
daa
jmp
adc
mov
dec
decl
xchg
pop
gs
pop
pop
push
in
movsl
dec
add
cmp
addb
pop
push
cwtl
sub
adc
lods
push
xorl
pop
mov
inc
inc
sbb
or
cwtl
adc
push
jb
bound
pop
add
xor
aas
mov
roll
stc
pop
jbe
and
mov
add
out
add
xchg
push
xchg
sub
les
inc
addb
test
mov
jnp
cmpsb
pop
fcmovu
pop
pop
lock
scas
sub
gs
shl
fs
std
sbb
adc
loopne
andb
fisttpll
mov
jns
je
add
push
jo
lret
jmp
or
popa
aad
pop
and
push
fiadds
aas
lea
arpl
pushl
lods
adc
xchg
inc
ja
pop
lcall
ljmp
cmp
adc
sub
mov
xor
jnp
add
mov
sbb
cmp
push
inc
cmpb
pop
cwtl
fdivrl
mov
jg
or
dec
shll
pop
inc
add
popa
pusha
sub
sbb
and
pusha
leave
inc
pop
push
and
mov
scas
or
add
mov
pop
pop
mov
and
xchg
int3
dec
sbb
incl
movsl
xor
mov
aas
sbb
or
movsl
mov
int3
sbb
adc
data16
cmp
dec
adc
adc
out
jmp
cvtps2pi
adc
pusha
aaa
and
sbb
xor
pop
add
in
push
adc
sub
xor
mov
adc
jge
scas
subb
mov
addr16
mov
add
aad
aas
sbb
nop
adc
push
and
mov
xor
sbb
js
outsb
dec
repnz
and
or
mov
ljmp
mov
aas
push
mov
out
pushf
cli
or
pop
sbb
inc
mov
push
lods
add
mov
hlt
into
jo
aam
ret
cmpb
push
inc
lcall
xlat
cmp
pop
mov
nop
dec
repnz
divb
into
sub
test
or
out
or
or
jecxz
loope
adc
adc
push
push
loop
push
dec
sub
inc
out
push
gs
dec
loop
repz
pop
cmp
push
movl
cltd
fstpl
jl
fmull
sub
call
addr16
pop
push
test
sbb
and
fwait
xchg
notb
or
test
clc
andl
dec
es
mov
in
xchg
dec
and
adcb
push
pop
pop
out
push
pop
lods
pop
lods
pop
pop
dec
cld
push
xor
jg
add
jns
add
clc
je
loopne
test
movb
dec
into
jl
add
lcall
lock
ficoml
fdivrs
pop
test
hlt
mov
roll
push
lahf
es
popf
push
and
je
inc
cmp
xchg
outsb
pop
jl
xchg
test
add
js
inc
fwait
mov
sbb
push
add
or
popa
add
int3
mov
jns
add
inc
filds
movsb
popf
adc
and
xchg
adc
xor
in
jmp
push
test
pop
test
data16
dec
into
push
loopne
inc
rorb
jmp
xchg
cmpsb
dec
int
xor
jecxz
test
dec
cmp
mov
loop
jle
add
pushf
sbb
xchg
ret
push
rcrb
aas
pop
pop
inc
loope
push
movsl
cmp
and
pop
add
fs
lds
sbb
pop
adc
jnp
push
and
push
cmp
sub
rclb
push
xchg
cwtl
fistpl
cmp
mov
sub
sub
and
fcomps
ss
cmp
mov
nop
dec
and
sub
xchg
jno
add
jo
mov
pop
mov
pop
dec
inc
ss
xchg
dec
pop
mov
in
mov
sub
jo
mov
sbb
inc
clc
xor
and
pop
clc
mov
imul
xor
sbb
adc
mov
xor
adcl
xchg
in
fwait
pop
aam
dec
jbe
jbe
mov
mov
and
testb
dec
cmp
in
mov
fdivrl
repnz
das
nop
hlt
jo
leave
inc
movsb
das
ja
sub
dec
into
jl
jp
adc
push
jle
in
adc
lock
push
add
jmp
or
adc
lods
or
icebp
in
inc
xchg
mov
pop
or
mov
mov
sbb
or
sub
les
jmp
pop
popa
push
shlb
or
push
ret
inc
inc
icebp
jne
and
les
push
stc
mov
push
adc
push
dec
or
ror
xorb
dec
add
mov
gs
jmp
sub
and
or
bound
push
aas
nop
jp
repz
push
pushf
pop
mov
mov
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
subb
mov
and
data16
pop
testl
adc
adc
add
mov
jmp
lcall
or
rorl
mov
add
cmp
js
lock
ret
and
xchg
test
and
sbb
dec
xchg
add
or
or
nop
iret
outsb
jg
nop
and
shll
dec
xor
adc
or
add
and
shr
add
dec
outsb
xadd
add
lock
test
lock
test
adc
jp
pop
add
adc
test
xor
out
insl
or
inc
lret
sbb
or
or
mov
cmp
or
and
incb
jmp
outsb
divl
lret
jmp
inc
and
mov
and
loop
imul
cltd
out
xor
add
or
call
pusha
xor
or
or
test
mov
sbb
loope
xorb
flds
and
aas
pusha
mov
pusha
loope
pop
sub
dec
and
jecxz
pop
fstp
rcrl
pusha
cmp
push
pop
insl
cmp
push
rcrb
mov
inc
testb
in
mov
adc
sti
add
mov
out
test
fisttps
adc
repz
jne
dec
jne
sbbl
jmp
push
mov
imul
testl
out
and
andb
xorb
sbb
jmp
push
and
and
add
adc
jmp
inc
push
fnstcw
or
pusha
pop
rcr
push
sbbb
rolb
xor
std
out
cmp
xor
sbb
inc
cwtl
cmp
test
or
arpl
fidivl
sub
ficomps
xchg
adcb
fmuls
add
sti
jmp
sbb
jmp
jno
enter
aam
xchg
push
aaa
pop
and
sbb
xchg
fsubrl
mov
sbb
add
les
fstp
jmp
sub
sub
jmp
sub
jb
jp
push
or
psubusw
dec
popa
mov
adc
mov
add
pop
or
popa
arpl
jnp
or
jb
fstpt
in
xor
subb
inc
imul
mov
or
faddl
add
rorl
sub
repnz
xchg
mov
or
repnz
or
test
imul
shrl
roll
les
in
fs
ss
jle
jp
inc
test
push
sahf
jmp
pop
movsb
xor
loope
lods
in
aam
rcll
adc
decb
push
and
sbb
pop
sub
icebp
addb
sbb
and
add
add
fcompl
and
adc
add
add
cmp
fwait
pop
cltd
xchg
int3
and
mov
test
add
mov
or
mov
mov
sbb
sbb
pop
xchg
push
mov
das
adc
testb
imul
adc
add
loopne
enter
mov
sbb
push
xchg
out
sbb
rclb
add
mov
cmp
jno
mov
sub
cmp
push
mov
inc
or
or
repz
adc
or
fmuls
insb
dec
sbb
ret
insl
xor
scas
adc
mov
pop
mov
fadd
push
sub
hlt
in
add
imul
mov
xorb
inc
push
lea
sub
mov
or
mov
shll
jbe
nop
and
sub
sbb
in
mov
add
scas
popa
sbb
mov
jae
jb
fldl
inc
adc
adc
sbb
pop
jbe
test
jecxz
mov
or
bt
or
jge
fsubl
data16
cs
dec
jl
loope
ret
mov
push
aam
jle
or
lock
or
cltd
jge
gs
shrl
xchg
mov
enter
jmp
movl
adc
ret
dec
xchg
push
pop
fadds
into
or
test
jg
das
pop
cwtl
sbb
xor
test
outsl
jne
jne
dec
pop
or
mov
aad
icebp
sbb
gs
or
shll
push
or
push
dec
jg
js
push
mov
push
cmp
or
cld
push
imul
loope
sbb
jl
sbb
sub
shr
loop
pop
sub
ret
enter
aad
push
jo
push
rcrb
lods
jge
test
inc
fldenv
insl
sbb
and
popa
xor
or
lret
fldcw
push
push
mov
or
lock
sub
fwait
sahf
jbe
cltd
loopne
fwait
int3
and
sbb
inc
insb
xchg
adc
and
jle
adc
fdivp
jb
mov
xor
mov
push
and
inc
je
sbb
jmp
loopnew
inc
xchg
scas
push
mov
xchg
and
std
jb
mov
and
cmp
mov
mov
out
shr
mov
push
in
pop
add
or
mov
jbe
dec
pusha
mov
or
add
pop
pusha
fidivrs
test
inc
shlb
shlb
or
inc
adc
lock
mov
push
mov
sub
data16
test
ja
mov
ds
sbb
and
arpl
lret
adc
nop
pop
and
and
fiadds
sbb
dec
aaa
and
mov
mov
imul
ja
sti
jbe
rcrb
xchg
out
push
cmp
sahf
xor
or
or
xchg
or
loope
or
add
adc
stos
imul
pop
xor
mov
test
mov
add
dec
cmpw
inc
inc
icebp
andl
ret
and
add
cs
pop
decl
imul
inc
add
dec
push
aad
add
or
test
and
push
clc
sub
push
mov
cmp
jecxz
cld
xchg
mov
pop
test
jne
or
jl
pusha
orl
push
stos
stos
jo
mov
pop
xchg
shrb
or
aam
adc
orb
push
add
rcrl
adc
dec
dec
ficompl
jns
dec
xchg
loopne
lea
pop
and
sub
inc
shl
mov
pop
mov
pusha
cmp
inc
aam
loop
rolb
xor
xchg
je
dec
or
jmp
out
push
push
cltd
insb
pop
and
mov
out
mov
inc
data16
inc
insb
sub
dec
jbe
pushf
fisttpl
add
test
loop
dec
xor
cmp
sbb
mov
mov
lea
or
jb
outsb
xchg
mov
in
mov
sub
rorb
test
sbb
movsb
pop
and
jp
add
sahf
test
or
add
hlt
ljmp
sti
cmp
dec
dec
ss
jo
inc
and
pushf
rdmsr
cwtl
sahf
adc
sahf
cltd
cli
xor
cmp
mov
movsl
xor
sub
aaa
rorl
mov
clc
out
and
push
cld
not
mov
rorl
pop
popf
je
js
insl
ss
pop
ds
push
or
fwait
xchg
jbe
jne
shl
mov
test
mov
jl
sbb
test
inc
shl
mov
lcall
je
mov
mov
out
push
lds
pop
in
mov
add
hlt
test
or
push
data16
push
lea
mov
outsb
movsb
dec
add
cli
xstore-rng
cmpsl
ret
dec
mov
pop
ret
mov
pop
xor
pop
add
xchg
xchg
mov
dec
and
adc
or
pop
ret
jecxz
mov
xor
pop
push
pushl
cmp
mov
cmp
inc
mov
mov
and
dec
or
add
ja
mov
lods
mov
mov
outsl
push
call
iret
and
out
lock
or
push
lds
ret
inc
add
mov
pop
scas
shl
andb
push
lock
or
mov
or
add
add
aam
sbb
je
xchg
in
dec
mov
stc
and
mov
sbb
xchg
movsl
and
movsl
adc
and
adc
dec
push
adc
sub
adc
repnz
add
sbb
or
sbb
movsb
mov
adc
sbb
xchg
push
lahf
and
push
in
dec
divb
leave
push
adc
imul
add
movsb
mov
pushf
ret
xchg
push
inc
fimull
jne
imul
sbb
xor
aaa
mov
mov
lcall
pop
sub
inc
jmp
mov
sub
or
das
add
pop
int3
mov
sub
cmp
ja
push
dec
jmp
fs
jbe
inc
and
mov
fisubs
jle
or
mov
push
mov
into
jmp
dec
cmp
incb
sbb
mov
jmp
cmpsl
sub
lods
jbe
mov
movsb
lods
push
sub
cli
bound
cmp
jle
push
inc
jle
cmp
push
xor
sarl
push
mov
movsl
push
jbe
push
lods
pop
mov
or
cmp
lock
fs
sbb
orb
sub
dec
shlb
data16
push
pop
jge
out
jnp
into
pop
cmp
test
push
dec
loop
nop
add
jne
dec
dec
jae
enter
imul
sbb
stos
sub
fs
xor
mov
or
mov
lods
out
push
sub
mov
or
mov
dec
loopne
dec
cwtl
or
outsl
push
and
scas
mov
xor
cmp
test
mov
and
call
add
shll
test
nop
mov
flds
pop
cmp
loope
and
ljmp
testl
mov
jmp
fisubs
push
sbb
pop
push
sub
xor
and
mov
outsb
push
sbb
and
sub
mov
rolb
or
mov
jmp
mov
jmp
push
cwtl
or
mov
push
mov
dec
pop
js
dec
mov
xor
jne
xor
xor
cmp
jge
xor
aam
neg
add
mov
loop
out
sub
cmp
cmp
mov
mov
pusha
inc
add
out
ret
jge
jbe
mov
jle
add
sub
xor
jne
adc
and
incb
pop
out
dec
test
xor
push
inc
mov
fnstcw
popf
and
fadds
std
xchg
test
add
mov
dec
mov
add
mov
cmp
sub
mov
push
xor
and
scas
sti
ret
and
adc
nop
fs
rolb
andl
adc
jle
std
xor
mov
ja
mov
je
ja
mov
pop
mov
lahf
js
jae
movb
testl
or
lcall
or
out
cmp
inc
into
jne
inc
or
fisubrs
pop
cmp
cmp
jne
hlt
int3
add
loopne
imul
loop
add
das
mov
lds
rcrb
inc
add
les
lea
add
movsb
movzwl
jp
scas
call
dec
cld
push
icebp
ret
adc
lock
ja
and
js
subl
mov
flds
lcall
inc
xor
call
loopne
xor
jg
add
gs
andb
jb
sarb
add
adc
mov
hlt
lods
add
or
sub
jmp
push
jne
and
pop
mov
jg
or
dec
icebp
xchg
sub
popa
aad
fcoml
notb
mov
fwait
lods
aaa
adc
dec
fcom
insl
fadd
loopne
shr
or
fisttps
clc
mov
sahf
dec
mov
xor
shrl
lcall
mov
mov
jo
and
dec
mov
cmpsb
imul
or
fcmovbe
sti
pop
stos
or
mov
jmp
call
scas
bound
fidivrl
mov
shlb
or
pop
mov
mov
orb
lock
aam
add
cmp
sub
add
mov
bound
push
into
jmp
scas
push
xchg
rcl
negl
add
push
add
pop
test
int3
xchg
mov
push
lret
das
sub
add
faddl
mov
pop
in
add
adc
les
bound
inc
adcl
add
pop
mov
add
push
xor
lcall
dec
cmp
jns
scas
pop
lods
insl
add
mov
push
testb
add
jo
or
add
mov
icebp
cmp
jmp
add
scas
adc
adc
or
mov
rorl
dec
pop
cmp
test
in
or
stos
or
dec
pop
push
xchg
xchg
adc
sahf
mov
insb
inc
cs
or
decl
imul
stc
gs
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
or
add
inc
punpcklbw
fcompl
addr16
add
mov
pop
jae
xor
dec
iret
xor
pusha
or
pop
adc
add
hlt
lahf
xor
lock
dec
add
push
and
cs
dec
push
adc
gs
or
pop
jmp
xor
sbb
sbb
cmp
sub
xor
addr16
xchg
mov
xlat
add
inc
and
jbe
xor
fdivs
or
add
aad
shll
mov
or
pop
je
setg
loopew
cmp
mov
and
dec
pop
fbld
mov
jne
movb
lea
inc
shll
cmp
sahf
add
xorb
sahf
scas
and
pushf
sbb
mov
add
lcall
jmp
sub
and
mov
movsb
or
pop
xor
rcrb
call
mov
xor
inc
xor
or
adc
jns
les
sub
inc
fs
ficoms
push
idiv
xor
push
or
dec
push
pop
pushf
add
testb
adc
rclb
mov
inc
add
pop
bound
sbb
inc
jle
sub
push
add
cmc
xor
js
les
jno
push
add
or
and
insb
push
adc
iret
sbbb
jo
push
ret
jbe
pop
lcall
adc
jge
push
add
push
mov
rcll
adc
add
lods
outsl
xor
ss
cmp
xor
out
cmp
add
xchg
push
dec
cwtl
mov
loopne
test
pop
enter
dec
mov
xchg
inc
popa
mov
xor
mov
shrl
lcall
xor
or
call
sub
adc
imul
popl
fldl2t
int3
aas
xchg
lret
call
cmp
test
pop
es
or
dec
shlb
hlt
nop
jp
pop
add
add
lret
lret
orb
lret
cwtl
das
shlb
or
or
sar
or
pop
jne
sub
testb
pop
xor
pop
add
cmp
mov
xchg
mov
pop
push
xor
aaa
or
loope
gs
mov
dec
clc
push
mov
cltd
xchg
push
dec
inc
or
jmp
xor
leave
and
add
mov
xchg
push
and
popf
inc
fcmovb
sub
dec
fwait
pop
jbe
sbb
jecxz
mov
loop
jg
ret
daa
xor
or
jne
pop
cmp
or
add
add
mov
or
xor
adc
movb
push
sub
inc
into
fsubs
dec
xor
or
fsubrs
and
ja
sub
mov
dec
hlt
push
sub
xchg
and
adc
push
add
shrl
push
movswl
les
sar
pop
dec
mov
aas
subb
mov
ret
mov
or
addl
shrd
push
jle
xchg
sub
xlat
inc
sti
jge
jge
sbb
clc
mov
dec
push
xor
incl
xchg
or
scas
inc
add
dec
jmp
xchg
clc
or
add
and
mov
add
scas
xchg
insb
incb
push
inc
or
mov
addb
pop
cmp
insb
loope
xchg
lcall
adc
jo
inc
out
inc
imul
dec
and
mov
pop
sbb
js
jg
jb
push
sub
or
pop
push
cmp
fidivrl
rorl
shlb
add
lods
jbe
sahf
push
push
jns
add
push
xchg
addb
pop
aaa
or
or
push
jg
lods
jb
mulb
xchg
out
mov
dec
pop
or
or
pop
xor
jmp
xor
daa
jne
adc
jae
and
stc
mov
add
sbb
aam
sub
push
lds
js
push
je
int
call
les
loop
loope
and
jb
js
mov
mull
sub
jp
lods
leave
orb
cwtl
or
add
lock
adc
pop
xchg
inc
sub
jge
mov
adc
inc
mov
aaa
add
mov
add
mov
and
stos
push
in
test
ficompl
cwtl
sbb
nop
and
adc
xor
add
mov
inc
bound
mov
inc
xor
repz
mov
jb
push
cmp
daa
aam
aas
inc
lret
jbe
adc
rol
dec
add
lea
adc
sub
pop
add
and
adc
push
insl
push
jmp
test
shlb
mov
cld
jl
jle
loopne
sarb
inc
or
mov
xorl
jp
shr
loop
mov
mov
sbb
jns
adc
jle
jne
sti
clc
gs
or
pop
data16
dec
jns
shr
pop
inc
popa
jle
xchg
int
push
inc
je
dec
cmp
jmp
nop
inc
jle
xor
push
inc
mov
adc
xchg
adc
or
dec
insb
mov
cmp
les
test
sub
add
rolb
inc
call
dec
add
clc
push
int3
outsb
push
pop
clc
fstps
or
xchg
cmp
xor
xchg
cmp
andb
mov
push
cmovp
ret
ret
out
and
pusha
xchg
pop
arpl
inc
adc
loop
inc
adc
xor
and
dec
pop
mov
lods
subl
addl
xlat
jmp
je
sbb
cmp
add
mov
dec
add
inc
push
xchg
shl
bound
mov
jmp
or
and
dec
punpcklwd
add
je
loopne
gs
cmp
lahf
xor
dec
cld
in
cmpsb
jno
lahf
dec
push
sub
and
add
movsl
push
hlt
dec
pop
pop
call
push
or
dec
dec
or
sbb
bound
pop
cmp
mov
loopne
sub
lock
movsl
int
shrb
push
cmp
sub
mov
jmpw
cs
inc
mov
pop
ficompl
pop
lret
insl
shll
mul
xor
mov
cmpl
lret
or
push
test
push
les
dec
push
mov
dec
push
jle
pop
add
sbb
mov
imul
lret
mov
rorb
mov
test
dec
sbb
xor
or
inc
xorb
mov
jge
movb
cld
pusha
mov
sbb
sbb
pop
testb
add
mov
je
aas
int
lock
pusha
stos
repz
fnstcw
out
pop
cmp
cmp
icebp
mov
jae
in
nop
add
mov
mov
or
push
or
fistpl
jmp
or
jmp
mul
jmp
je
push
ljmp
adc
addb
negl
jb
xor
and
push
jae
cmp
aam
lods
jne
test
xor
dec
pushf
adc
mov
popf
sbb
rorl
ss
pop
adcl
mov
cmp
add
das
inc
movsl
push
xor
cmpsl
fs
fidivs
rol
jns
push
dec
add
jbe
insb
pushf
dec
add
mov
push
cld
cwtl
adc
fs
mov
xor
jno
jecxz
mov
clc
add
push
adc
sub
push
shl
xchg
test
mov
or
hlt
fsts
pop
rcl
xor
or
add
mov
add
lea
jae
dec
jp
out
inc
xrelease
loopne
xor
xor
ret
pop
call
cmp
add
test
adc
sbb
sbb
lcall
paddusw
das
add
ficomps
jl
dec
fiadds
call
nop
and
xor
icebp
das
mov
push
inc
jmp
cmp
loope
mov
xor
xor
in
es
mov
xor
stc
xchg
std
adc
inc
inc
test
sbb
mov
mov
aam
push
outsl
insl
call
insb
inc
sbbb
jmp
loopne
mov
jo
lcall
mov
jne
lea
pop
jmp
not
sar
adc
cmp
addb
in
adc
iret
push
pop
pop
ret
sub
repnz
or
clc
js
xchg
shlb
fsubl
dec
ret
sbb
xor
push
and
adc
jle
mov
ret
sub
xchg
icebp
or
movsb
cmp
mov
adc
inc
mov
sbb
popa
jnp
rorb
fiadds
ljmp
jmp
test
adc
out
mov
mov
arpl
inc
mov
mov
adc
test
movsl
sbb
pop
andl
test
in
xchg
xor
mov
cmp
inc
addl
lret
xchg
icebp
adc
in
mov
jo
imulb
sbb
dec
mov
push
lock
pop
adc
mov
sbb
out
mov
and
and
or
xchg
or
and
test
pop
sbb
inc
sbb
jge
adc
adc
cmp
sbb
or
cmpsl
or
xchg
fistps
xchg
push
std
inc
shrb
mov
dec
cmp
lea
or
and
ljmp
repz
add
or
fstpl
mov
shr
sti
or
and
out
pop
or
mov
add
add
or
bound
scas
push
js
or
sar
in
test
jecxz
stos
mov
cmp
test
mov
fldl
add
add
bound
adc
out
jne
fnstcw
inc
testb
lret
loopne
in
dec
add
lea
mov
shr
cmp
sub
jo
stos
or
mov
mov
push
addb
xor
mov
repnz
add
or
dec
or
xchg
sbb
cmp
adc
out
adc
addb
xor
inc
or
sub
cmp
insl
call
cli
push
or
adc
iret
shl
andl
adc
aad
xchg
lods
xchg
lds
xor
sbb
clc
shl
cmp
icebp
test
mov
lret
test
je
push
mov
mov
or
cmp
mov
pop
cmp
cmpsl
cmp
and
movsb
fcmovb
mov
sub
imul
sbb
push
cmp
pusha
das
pop
mov
sbb
push
add
mov
je
pop
call
aaa
add
sub
jne
add
call
pusha
push
ljmp
adcl
xor
test
aaa
xchg
mov
push
push
mov
dec
push
mov
frstor
push
jle
adc
inc
pop
mov
bound
popf
les
mov
jle
sub
sbbb
mov
fwait
inc
xor
dec
cmp
pop
lret
lock
jl
cmpb
jl
xor
subb
idiv
insb
xor
mov
xchg
adc
adc
xlat
push
rcll
push
adc
mov
inc
dec
inc
push
dec
push
push
movsl
scas
orl
sub
inc
adc
fldenv
and
stos
add
test
cmp
ficompl
clc
fisubrs
jne
and
les
jp
adc
add
jbe
sbb
mov
dec
add
and
mov
or
or
leave
or
test
adc
pop
dec
inc
fcmovu
add
shll
mov
je
mov
dec
jo
or
cmc
pusha
adc
inc
popa
nop
rdpmc
mov
or
and
or
lock
mov
dec
sub
xor
cmp
mov
pop
fadds
dec
getsec
sub
aam
xchg
xchg
dec
dec
loopne
push
jmp
or
inc
pop
mov
ret
enter
adc
mov
neg
sbb
sub
mov
sbb
fwait
adc
sbb
xchg
xchg
adc
insb
into
jl
sbb
push
push
inc
and
fldcw
fcomi
sbb
mov
sbb
sbb
adc
leave
nop
and
push
test
sahf
test
dec
jne
add
pop
pop
adc
mov
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
icebp
adc
sbb
outsb
aam
je
push
idiv
and
cld
je
movsl
and
divb
or
mov
pop
mov
push
mov
and
add
push
inc
outsl
or
sbb
jno
in
movsb
aam
adc
es
hlt
imul
mov
gs
int
inc
sbb
out
or
into
jbe
jns
aas
cmp
dec
adc
lods
dec
sbb
mov
push
mov
push
lock
push
push
dec
iret
das
bound
mov
adc
setle
adc
or
and
mov
gs
mov
ljmp
push
testl
inc
outsb
xor
dec
pushl
dec
fidivs
xorl
jg
adc
or
sub
mov
inc
fcmove
jne
sub
testb
dec
cmp
call
sub
je
xlat
mov
mov
mov
adc
imul
es
mov
je
std
jg
aad
and
push
cmp
ja
add
cmp
jg
cli
out
ret
cmp
jne
shll
leave
hlt
mov
mov
nop
jp
pop
cmp
pop
ss
add
add
push
dec
or
push
cmp
xchg
mov
mov
and
and
mov
test
jne
scas
sbb
xor
ret
jmp
neg
je
iret
js
clc
fisubrl
push
addr16
ljmp
sub
inc
sbb
je
mov
or
mov
sub
mov
pop
imul
testl
cmp
push
dec
fdivrs
out
cmc
rcr
in
jmp
mov
push
in
mov
adc
push
sub
inc
pop
xlat
enter
mov
movsb
rcrb
push
pop
sub
xor
push
movsb
daa
xchg
inc
xchg
pop
xchg
sub
pop
imul
outsb
push
push
adc
or
mov
sti
enter
cltd
push
xor
cltd
or
add
xor
adc
push
push
ficompl
mov
mov
push
sarl
out
rcl
aam
fdivrs
xlat
fcomp
fstpt
pop
adc
loop
addr16
movb
jmp
or
lods
adc
imul
push
les
cmp
test
jg
mov
mov
mov
or
adc
dec
push
add
push
inc
push
add
fistpl
aas
jne
mov
push
add
andl
in
inc
test
push
icebp
adc
es
push
xor
sub
push
push
fwait
inc
add
sub
mov
adc
dec
jecxz
and
pop
insb
mov
imul
or
decl
sbb
sbb
lea
sar
inc
sbb
fsubs
push
insb
inc
or
fisttpl
mov
ljmp
loop
or
pushf
mov
adc
sub
push
push
adc
mov
adc
pop
adc
sti
add
es
mov
sub
jle
add
jb
inc
es
or
or
dec
dec
inc
fcoms
movb
popf
and
fucomp
or
testl
decb
loope
into
and
lea
pop
sbb
subl
psubw
xchg
ja
push
jbe
insl
add
or
adc
push
mov
les
pmulhuw
ljmp
xor
jno
loop
nop
fiadds
mov
jne
pop
mov
rorb
repz
test
rolb
fildll
sbb
lea
add
xchg
mov
int
or
cwtl
dec
push
ss
movsb
sub
cmp
or
repnz
shll
jnp
push
addl
mov
jge
dec
pop
pusha
mov
test
rol
jg
aaa
mov
cmp
popa
outsl
inc
outsl
jne
sub
enter
add
into
rorb
and
jge
adc
rorb
push
push
push
lret
add
inc
sbb
roll
adc
dec
rcrl
clc
in
out
xchg
mov
sbb
jmp
dec
xor
add
inc
lods
lock
test
repnz
cli
cli
inc
cli
test
inc
sahf
div
push
dec
inc
cmp
sbb
mov
ljmp
or
push
fmuls
mov
lret
inc
jo
mov
leave
dec
xchg
sub
dec
leave
inc
fnstenv
loopne
and
int
jmp
iret
dec
rolb
xlat
mov
lock
push
inc
loopne
cmpsl
add
sti
push
mov
dec
repnz
pushw
sub
loop
out
jge
xor
xor
xchg
mulb
or
xchg
data16
mov
call
call
mov
pop
dec
inc
shlb
rcrl
sbb
cmp
ss
inc
xor
dec
ss
sahf
or
push
sub
rorb
mov
orl
or
ja
mov
sbb
rorl
mov
adc
insl
inc
inc
adc
lods
lods
rolb
popf
out
icebp
cltd
add
push
sbb
sbb
mov
negb
negb
inc
inc
sahf
xchg
test
add
and
or
jge
add
and
add
js
adc
cmp
jne
dec
in
jno
ljmp
sbb
adc
pusha
mov
jge
add
sbb
pop
test
sbb
adc
inc
add
inc
mov
icebp
das
cwtl
insl
push
add
push
nop
sbb
cmp
outsl
push
in
test
adc
adc
mov
mov
pusha
pop
pop
nop
mov
pop
add
or
scas
xchg
jb
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
clc
push
adc
jmp
loopne
loopnew
pop
inc
mov
pop
add
je
xchg
lock
cs
push
pushf
jmp
sub
out
icebp
ret
sbb
sti
and
ljmp
lock
mov
test
or
into
les
shl
enter
adc
test
in
stos
jbe
sub
clc
js
and
lods
mov
cmp
mov
cmp
push
shlb
add
div
add
sbb
dec
mov
add
in
into
or
or
icebp
lock
inc
xchg
inc
in
in
push
nop
dec
mov
clc
push
jg
dec
cmp
jge
sub
cmpb
or
add
dec
cmp
into
dec
sub
jae
mov
sub
jle
incb
sub
orb
pop
mov
repnz
ficoms
jp
jne
dec
mov
jb
int
and
add
pushf
adc
icebp
scas
ret
and
add
push
add
inc
jbe
ret
adc
jge
mov
add
add
add
add
test
sarb
adc
vorps
ret
and
push
mov
xchg
cmp
or
jmp
jge
jae
mov
or
leave
clc
cmp
add
or
pop
pop
scas
add
adc
push
mov
mov
add
pop
pop
mov
aad
xor
les
adc
or
jae
sbb
ret
mov
mov
inc
and
cmp
xor
into
pop
adc
test
mov
add
rcrl
dec
mov
add
ret
jne
or
mov
inc
ret
and
and
inc
push
pop
jae
or
or
add
add
push
or
inc
add
mov
push
je
dec
pop
or
adc
xlat
dec
pop
es
xor
out
pop
mov
and
and
and
pop
fabs
mov
mov
push
dec
pop
mov
xor
cmp
pop
pop
jb
push
pop
popa
xor
shrl
cld
cld
iret
enter
je
ja
or
push
mov
jg
rclb
dec
addr16
sub
dec
popf
or
jge
adc
adc
pop
mov
pop
out
cmpl
ss
or
add
xor
mov
add
add
loopne
add
inc
xchg
pusha
mov
xor
in
lock
inc
jg
into
into
sub
pop
and
inc
pop
sub
push
pop
nop
dec
xor
pop
cwtl
pop
mov
cmpb
rolb
push
pop
add
lock
cmp
rorb
or
lcall
xor
cs
shl
adc
add
and
enter
add
bound
or
je
test
mov
inc
sub
lcall
sub
jmp
mov
lret
in
lret
push
xor
popa
testb
or
scas
sbb
mov
or
pop
enter
shll
or
lods
pop
fsub
xchg
push
cs
mov
mov
xor
push
lods
and
test
cmp
mov
inc
loop
sub
ss
pop
xor
ficomps
adc
sbb
lcall
sbbb
gs
mov
jge
bound
aaa
in
sbb
xor
pusha
pushf
push
mov
inc
icebp
cmovs
push
mov
inc
push
cwtl
dec
sbb
xor
and
adc
sub
insl
add
inc
jmp
adc
mov
sub
mov
or
out
je
inc
xor
or
rorb
les
mov
inc
int3
call
jle
inc
xchg
dec
adc
sub
or
jbe
mov
loope
into
or
rcrl
push
or
mov
cld
sub
aam
fists
aam
shl
movsl
rolb
loope
adc
popa
movsb
push
rolb
sbb
leave
test
and
xchg
cs
loopne
pop
lods
rcr
fsubrl
lods
inc
push
arpl
pop
xchg
pusha
test
pop
sbb
jbe
cmpb
pushl
push
leave
outsl
adc
pushl
rol
pop
dec
push
xor
mov
push
mov
pop
popf
in
xchg
xor
mov
xchg
ret
sbb
out
add
sbb
xor
inc
push
test
leave
pusha
jnp
cli
shlb
push
mov
push
hlt
movsb
adc
jns
ja
xchg
dec
inc
sbb
clc
jp
push
pop
push
orb
pop
jge
lea
sbb
pusha
push
push
push
imul
xor
push
push
xchg
push
inc
pushf
out
and
xchg
stos
push
push
popf
xor
shrb
push
arpl
gs
adc
dec
js
sub
mov
push
dec
cmp
add
mov
sub
push
loopne
scas
sbb
add
and
adc
jmp
push
push
xlat
xchg
adc
repnz
test
inc
pop
mov
lods
sub
popa
sbb
or
clc
or
pop
pop
mov
xor
mov
adc
hlt
or
stos
movsl
or
push
jne
push
inc
pop
loopne
or
lods
movsb
cs
imul
dec
cmp
insl
jo
push
xchg
addr16
jmp
lock
fisubrl
int
dec
adc
and
inc
aam
push
pop
add
sub
outsb
repnz
mov
and
push
sbb
sub
xchg
rolb
lret
cmp
jle
pop
add
ss
adc
insl
loopne
test
jo
pop
mov
mov
enter
cmp
dec
sbb
dec
shrl
test
xchg
notl
mov
lret
cmp
mov
jg
xor
inc
ret
call
xor
add
mov
jl
add
lea
and
cmp
inc
or
lea
cmpsl
enter
push
int3
adcl
bsf
repnz
mov
dec
mov
addl
push
cld
dec
scas
loopne
jmp
dec
loop
aaa
inc
xchg
scas
xchg
fisttps
int
ss
xor
mov
push
js
mov
xchg
shll
mov
ret
shll
inc
xchg
outsb
stos
js
sbb
scas
mov
clc
xor
pop
push
das
std
xor
shrl
sub
mov
rol
add
shlb
inc
shlb
ljmp
roll
and
push
adc
in
ret
xchg
mov
mov
sub
jl
adcb
push
mov
xchg
pop
testb
mov
testb
adc
mov
addb
push
xchg
pop
pusha
mov
shrb
and
xor
or
pop
xor
int3
adc
js
mov
push
daa
pop
test
mov
jo
adc
mov
or
jg
cmp
cmc
andl
push
mov
or
dec
loope
push
lea
test
lods
inc
sbb
xor
incb
push
scas
mov
scas
mov
sub
in
loope
and
adc
fwait
test
in
out
prefetch
ljmp
add
movsl
push
dec
in
fisttps
jmp
jp
rcll
cs
rcr
fists
fildll
sbb
mov
pop
adc
jmp
fstps
icebp
or
mov
lahf
or
add
push
mov
andb
cmp
lods
pop
xor
fcomp
adc
test
adc
pop
sbb
mov
movsb
mov
jge
sub
mov
push
sarb
or
dec
lret
mov
iret
mov
lahf
jo
imulb
jnp
lret
or
incb
orb
ret
fmull
jb
mov
pop
insb
enter
in
icebp
leave
test
mov
es
sub
jb
movsl
fsubs
jbe
jbe
and
push
leave
xor
and
add
imul
lock
jp
add
js
roll
jp
sbb
sub
and
std
push
inc
jo
inc
nop
pop
sbb
ret
mov
fadd
push
repnz
and
add
and
aam
or
jge
adc
leave
mov
sbb
jne
xchg
lret
int
cmp
xor
inc
inc
adc
push
cs
lret
imul
push
idivl
mov
mov
mov
fidivl
shrl
push
cmp
lods
dec
sbb
ds
xchg
fs
fsubr
and
dec
and
sub
hlt
jle
in
mov
xchg
xchg
push
mov
or
mov
pop
enter
mov
cwtl
push
or
pop
or
nop
mov
shr
aam
pushf
adc
xchg
les
lcall
in
xchg
in
dec
dec
in
jge
jg
push
pop
mov
in
movups
pop
dec
in
dec
andb
inc
mov
cmpsb
in
dec
outsb
cld
js
fildl
sbb
mov
mov
dec
call
rclb
push
push
adc
dec
jle
hlt
add
cmpb
rol
in
andl
adc
ds
adc
subb
mov
mov
inc
fstps
in
inc
jb
and
cmpb
mov
dec
loopne
lcall
dec
cmpsb
aaa
call
leave
mov
rclb
cwtl
loopne
push
icebp
repz
fcompl
dec
cmpsb
dec
sbb
cltd
nop
xchg
xchg
imul
cmpl
test
stc
insb
xchg
inc
shrb
in
push
and
pusha
test
dec
adc
xchg
int3
push
xlat
sub
leave
and
cmp
leave
and
inc
inc
dec
and
insb
ficomps
cli
jl
or
sbb
sbb
or
adc
lods
sbb
in
push
in
rcr
lods
mov
test
add
in
les
inc
in
cmpsb
pop
shrl
adc
xchg
jo
js
in
orl
shlb
inc
inc
pop
inc
and
cmp
in
icebp
cmpsl
fcoms
jb
xchg
pop
sbb
push
loopne
add
add
xchg
aad
mov
pop
call
mov
xchg
push
outsb
add
push
std
rorb
add
jecxz
sbb
leave
xor
push
mov
adc
ss
mov
push
cmp
fisubs
int3
aad
or
nop
dec
clc
pop
ror
mov
and
mov
jo
or
inc
in
pop
ret
mov
jl
pusha
mov
inc
iret
push
dec
cmp
in
fs
and
dec
inc
sub
fmuls
cmpsb
add
mov
xor
mov
adc
mov
andb
mov
lock
fsubrs
cmp
mov
setae
xchg
jg
gs
loopne
push
outsb
push
in
sub
jne
push
pop
rcrb
adc
sub
test
jnp
cli
mov
adc
nop
mov
or
fmuls
fsubr
sub
mov
sahf
xchg
int3
out
sub
rcrb
push
adc
jno
shlb
out
ja
mov
mov
cmp
or
clc
out
mov
jnp
dec
xor
in
lods
mov
ret
in
fcom
add
pushf
mov
adc
inc
lea
fs
and
lock
inc
or
out
shrd
dec
mov
mov
dec
rol
int3
xor
aam
stos
rorb
xchg
mov
jno
imul
ret
add
sub
adc
cmc
pop
fcom
xor
cmc
or
cs
inc
aad
popl
fadds
and
xor
mov
fiaddl
push
daa
aam
cs
or
das
rcl
xorb
shl
adc
sub
dec
dec
lea
test
push
int3
das
cmovae
cmp
add
xor
dec
xchg
sub
and
push
leave
jecxz
mov
xchg
push
mov
loopne
push
andl
loopne
inc
or
sbb
push
std
mov
xor
mov
pop
cltd
push
mov
push
mov
mov
pop
add
daa
movsb
xor
roll
push
sub
pop
mov
adc
fwait
in
pusha
cltd
fs
add
jb
js
jl
cmp
sbbb
sbb
add
xchg
les
mov
insb
xchg
pop
mov
cmp
das
dec
pushf
and
adc
xchg
lock
mov
dec
xchg
jnp
adc
push
cmp
or
adcl
call
or
leave
xchg
enter
jne
jl
push
imul
push
mov
xchg
aam
imul
or
roll
call
inc
xchg
idivl
test
add
daa
mov
add
cs
imul
nop
and
xchg
pop
imul
and
out
enter
cmpsl
or
and
or
or
lea
shlb
or
dec
lods
test
mov
aaa
ja
push
test
cltd
or
xchg
add
in
or
sbb
test
inc
inc
jb
loopne
test
es
jns
lcall
insl
mov
mov
inc
ret
call
sub
mov
loopne
push
push
xlat
mov
das
and
fmull
adc
jl
adc
cmp
cmp
and
in
aam
add
add
pushf
stc
out
nop
int
clc
add
aas
cwtl
movsb
adc
in
xchg
nop
and
fs
fwait
std
and
in
insl
fsubs
and
pop
mov
aam
aam
js
lret
sbb
bound
mov
mov
inc
scas
push
dec
push
loopne
pop
or
pushf
inc
sbb
fnstsw
mov
leave
adc
push
sub
push
and
cmp
inc
jne
test
add
popf
pop
leave
stos
aad
jecxz
sahf
xor
mov
adc
xor
enter
push
or
inc
movsb
dec
lods
testl
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
cwtl
mov
sub
nop
dec
outsl
movsb
test
shrb
xor
mov
push
sub
dec
orb
mov
scas
inc
pusha
fbld
mov
das
xchg
subb
adc
mov
test
and
imul
xlat
out
xchg
test
movsb
leave
and
and
mov
xor
xor
addl
mov
xchg
xor
rcr
sub
popa
in
add
xor
add
mov
add
shl
mov
mov
int
in
test
xorb
mov
nop
arpl
push
loopne
or
cmp
pop
mov
test
fldenv
add
stos
fdivl
cld
sbb
je
sub
nop
insb
loopne
and
and
lock
rorb
test
push
ror
insl
inc
frstor
pop
rorb
or
or
imul
xor
fsubl
shll
and
outsl
call
jnp
ss
stos
rcl
mov
cmp
inc
in
or
stos
xor
test
enter
lret
cmp
mov
inc
inc
test
xchg
mov
jbe
add
fs
add
inc
ficoml
test
mov
dec
fimull
inc
aam
fsubrl
jne
jecxz
dec
mov
es
daa
cmpsl
and
ror
aam
movsb
arpl
or
sbb
xchg
sub
call
arpl
andb
pusha
mov
fmuls
movsb
sbb
fisubrl
or
sub
sub
lock
and
jno
test
aam
push
loope
rcl
cs
fwait
in
call
faddl
inc
lcall
sbb
repnz
stos
adc
ret
aam
lock
das
inc
pop
push
inc
loope
je
and
cmpl
inc
fimull
enter
mov
mov
cmp
movsb
lods
mov
movsb
sar
in
xor
lods
jecxz
fimuls
add
aam
jne
movsb
int3
mov
xchg
mov
fsub
inc
js
add
lock
pop
leave
inc
sbb
inc
add
stos
xlat
js
imul
xchg
ss
inc
clc
mov
mov
push
enter
dec
mov
inc
inc
lock
fdivs
cwtl
push
mov
scas
movsl
adc
xchg
popa
shrb
scas
and
inc
or
sub
arpl
mov
inc
mov
add
adcl
xchg
push
push
mov
in
imul
insb
std
pushf
std
in
cmp
adc
add
enter
xorb
es
xchg
test
cwtl
aaa
dec
xor
mov
test
daa
adc
xchg
pop
and
loopne
daa
xchg
in
push
sbb
cmpsl
xor
fdivrl
fsubrs
push
rcrl
daa
iret
ret
push
push
inc
add
fcmovne
cmp
ss
test
leave
lds
lea
jbe
xchg
inc
inc
mov
xchg
in
lock
push
mov
sub
scas
dec
sbb
sbb
mov
in
xchg
jge
movl
mov
pop
mov
pop
jg
or
loopne
jne
dec
fiadds
enter
test
adc
gs
dec
or
mov
dec
cmp
mov
mov
in
mov
fmuls
rolb
andb
add
lock
rcrl
xchg
test
fsubl
pusha
mov
jns
leave
and
je
shlb
aam
out
mov
inc
xchg
cmp
and
stc
pop
loopne
inc
int3
and
pop
mov
mov
sbb
sbb
mov
xchg
fmuls
ffreep
mov
out
adc
mov
inc
addl
ret
mov
mov
in
aad
mov
add
xchg
cwtl
mov
push
mov
mov
pusha
add
popa
xchg
or
xor
inc
gs
push
inc
xchg
pop
js
sbb
scas
das
ret
lahf
mov
add
lahf
pop
wrmsr
stc
or
iret
shlb
pop
insl
xor
lds
or
sbb
mov
dec
mov
adc
lcall
pop
adc
push
inc
pop
pop
in
insl
adcb
call
aam
cmp
lcall
jne
bound
or
ffree
adc
or
stos
pop
mov
jb
inc
pop
rcr
mov
mov
or
or
pop
dec
jge
xchg
mov
inc
out
xchg
subb
push
mov
add
stc
and
std
xor
add
lcall
sub
loop
dec
adc
lods
dec
jae
sbbl
filds
repnz
mov
sbb
cltd
add
xor
cmovns
and
add
sub
jb
adc
std
add
sbb
inc
je
sub
loopne
dec
gs
mov
push
push
jbe
cmp
xor
fs
pusha
sub
or
js
mov
out
inc
rorb
push
dec
les
pop
dec
aad
loopne
pop
enter
out
cmp
pop
sub
dec
sbb
mov
add
sbbb
dec
sbb
arpl
movsl
push
fadd
sbb
addb
lock
roll
adc
inc
pop
pusha
js
dec
stc
aaa
nop
lea
mov
xchg
mov
scas
pop
je
and
inc
ret
xchg
push
ret
test
lods
fwait
roll
jmp
mov
imul
mov
nop
and
fs
pusha
mov
es
mov
mov
mov
test
enter
nop
xchg
xor
rcr
ret
sub
popa
lret
cwtl
movsl
enter
mov
aaa
popa
xor
jmp
sub
jmp
rclb
sub
inc
gs
mov
mov
mov
jo
or
inc
jae
push
test
lods
les
sub
cwtl
std
call
sbb
lds
imul
lds
test
dec
and
test
push
sbb
mov
pusha
mov
cmp
xor
sub
rcrl
cmp
sub
call
fwait
mov
shll
lods
or
out
fmuls
fbstp
add
add
xor
xchg
or
adc
test
out
and
insb
enter
jae
add
nop
inc
mov
push
in
jge
add
adc
mov
and
nop
cmp
std
nop
and
nop
add
or
test
xchg
or
adc
jbe
gs
shlb
cmp
and
pusha
dec
xchg
inc
pop
enter
mov
in
sbb
add
mov
xchg
in
adc
invd
xlat
add
dec
xor
nop
daa
iret
into
shrb
in
sbb
push
insl
push
dec
pusha
pop
sbb
mov
dec
das
or
sbb
or
mov
aad
in
add
mov
in
cmp
pinsrw
int
mov
or
lret
or
pop
pandn
push
mov
addb
int3
call
das
xor
sbb
gs
mov
fwait
mov
and
hlt
jmp
adc
pop
pop
or
cmpsl
pusha
int3
sub
int3
lods
mov
xchg
dec
int
mov
add
or
subb
rol
and
xor
adc
mov
dec
jo
stos
imul
mov
or
inc
jb
sub
test
xchg
push
or
push
cwtl
or
add
hlt
sbbb
add
adc
movsb
jbe
arpl
aam
in
leave
and
cltd
in
adc
or
dec
xor
or
fstpl
sbb
xlat
pop
leave
sbb
cld
inc
rcrb
push
sbb
add
clc
scas
xchg
imul
insl
loopne
call
or
sub
xor
inc
add
xor
xchg
push
icebp
xor
nop
mov
fs
les
lods
cmp
xor
pop
mov
push
jbe
fiaddl
cmp
push
sbb
push
mov
adc
mov
mov
in
stos
xchg
imul
fs
js
es
fs
fs
mov
enter
fistl
and
pop
mov
and
pop
sbb
shlb
add
clc
loopne
add
add
mov
and
test
cld
stc
dec
xorb
cmp
jo
push
movsb
jbe
dec
cmpsb
lea
add
mov
mov
ss
jo
jl
insb
lds
adc
in
fcmovb
push
jl
pop
pop
lock
and
pop
aaa
nop
bound
mov
aam
les
mov
mov
rcr
out
inc
subl
cltd
mov
sbb
repnz
test
xlat
mov
and
add
and
jb
cmp
aad
lods
lea
movsl
test
int3
adc
cs
addr16
int3
jmp
dec
cwtl
fs
mov
or
in
bound
rolb
mov
fldt
jns
mov
jb
rcr
roll
cltd
in
aad
scas
test
test
fstps
leave
in
mov
aad
pop
lcall
stos
and
mov
push
rcrl
adc
loopne
mov
adc
lods
and
sbb
in
fcompl
and
jns
inc
scas
imul
frstor
lock
mov
lods
push
cmp
push
leave
add
lock
jns
les
arpl
cmp
sbb
sub
xor
inc
inc
mov
lds
push
adcl
and
clc
nop
sub
orps
or
sbb
xor
cltd
loopne
sub
loopne
lock
iret
leave
js
sbb
pop
fnstsw
ja
movsb
adc
bound
or
enter
stos
add
je
mov
xchg
jns
mov
and
xor
inc
jmp
lea
and
fwait
push
inc
fistl
das
cmp
cmp
rorl
test
fisubrs
fmull
fwait
movsb
cmp
lahf
jne
push
dec
jl
jo
add
push
mov
pop
xor
mov
roll
add
pusha
dec
add
add
add
mov
cltd
mov
pop
enter
insl
push
xor
mov
in
fiaddl
cltd
js
xchg
inc
dec
and
push
adc
pop
inc
inc
faddl
mov
push
push
aas
or
and
daa
and
fs
mov
push
pop
outsb
ss
subb
cmp
or
fldcw
cmpb
outsl
add
xchg
inc
outsb
out
mov
aam
imul
push
add
jl
pop
push
out
imull
and
add
out
idivl
adc
add
ds
push
mov
test
subb
push
push
dec
mov
fsubrs
xor
sub
mov
push
rclb
or
in
cmp
ret
jmp
jb
adc
sub
test
and
adc
ss
pop
int3
mov
add
sub
aam
jmp
repz
adc
call
jl
pop
push
insb
inc
ja
or
loopne
or
adc
les
xchg
fyl2xp1
cmp
sub
add
in
cmp
mov
fdivrs
iret
les
adc
pop
sbb
push
dec
fsin
mov
pop
ja
test
addl
les
int
daa
sbb
out
inc
inc
pop
push
incl
add
ljmp
cld
fldl
addr16
fistpl
or
jnp
mov
add
out
fxam
and
shlb
leave
or
adc
decl
mov
jns
mov
jle
test
addr16
xor
xor
sbb
test
cmp
or
mov
das
push
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
pushl
sub
pop
popa
bound
gs
ljmp
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
pop
mov
aas
dec
pop
das
mov
gs
xchg
adc
clc
push
or
popf
cmp
rclb
cmpl
es
cmpsl
stc
cmp
inc
jge
dec
pop
or
out
sahf
scas
sbb
sub
je
jb
outsl
arpl
fnstenv
push
out
sbb
push
dec
imul
sarl
jae
cmp
jb
gs
xor
cs
mov
xor
pop
bound
and
popa
je
outsl
outsb
push
test
push
cmp
mov
pop
lock
rdpmc
add
mov
add
pop
sub
xor
enter
loop
jb
js
je
jb
jg
outsb
fisubl
jae
insl
add
arpl
outsl
add
add
add
cmpb
je
push
je
shrl
jne
jb
mov
outsb
inc
dec
imul
lret
jns
cmp
cmp
dec
and
in
mov
add
das
das
adc
push
dec
push
inc
out
or
ds
gs
insl
bound
daa
dec
outsl
jbe
pmaxsw
pop
dec
arpl
push
jo
sub
out
lock
jne
jne
dec
jne
xchg
mov
inc
jo
imul
bound
dec
nop
or
into
mov
scas
cmpsl
xchg
popl
cmp
xchg
addr16
push
jne
lcall
mov
mov
push
fsubl
push
scas
clc
sbb
dec
jae
std
adc
and
jbe
out
pop
dec
inc
ds
popa
das
jo
xor
pop
insl
or
fbstp
mov
scas
add
mov
sbb
movb
out
ret
pop
rorb
daa
hlt
call
sbb
sub
sub
cs
dec
push
std
shll
ds
inc
das
pop
pop
push
push
adc
jnp
xchg
insl
cli
jl
jle
add
arpl
test
icebp
adc
subl
pop
or
out
ffree
inc
adc
push
sbb
insb
jae
cs
fs
cmp
xor
inc
mov
outsl
mov
out
jo
insl
and
addr16
jbe
dec
push
push
sbb
insl
in
dec
dec
inc
sbb
and
jp
data16
add
xor
sbb
push
jo
imul
push
pop
mov
je,pn
push
push
xor
jo
xchg
idivb
mov
sub
and
fs
adc
out
scas
mov
push
imulb
and
and
fmul
insb
mov
sbb
xor
and
imull
xchg
add
and
jne
sub
mov
rolb
les
shrl
mov
fldl
and
or
das
add
popa
add
or
ljmp
jb
bound
lods
mov
je
and
push
or
push
or
int3
fidivl
popf
jb
loopne
outsl
mov
faddl
fcmovu
push
daa
sub
dec
addb
das
arpl
cwtl
shlb
dec
popa
in
gs
sub
mov
fidivrs
test
out
add
inc
xchg
insb
imul
out
xor
int3
gs
rcl
push
cmp
push
lcall
mov
and
xor
gs
push
divl
push
fistps
push
adcb
aaa
xor
movsb
or
in
aas
add
hlt
pop
dec
jae
dec
add
add
inc
xor
ja
outsl
jl
dec
pop
outsl
ss
fs
jb
xor
imul
inc
inc
xchg
push
inc
cmp
mov
data16
jmp
das
mov
mov
adc
cmp
inc
jle
lcall
out
push
cmp
jo
bound
pop
enter
inc
aaa
insl
jmp
add
in
ljmp
sbb
imul
pop
or
cmp
inc
jno
rclb
mov
pusha
mov
nop
inc
insl
imul
cmp
pop
add
push
xorl
cmp
xor
and
mov
lret
cmp
addr16
jae
xor
push
pusha
jo
rorb
test
dec
cmp
mov
pop
pop
data16
lret
inc
sub
pop
dec
mov
or
jo
and
jbe
insl
mov
inc
imul
test
and
dec
cmp
fwait
int3
outsb
inc
jg
lcall
loopne
jbe
jae
add
stc
mull
rol
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
sbbb
gs
popa
mov
add
xor
jg
mov
outsb
popa
js
jae
je
pop
push
pop
add
add
xchg
cmp
sub
xchg
adc
add
add
adc
add
add
add
clc
jg
rolb
add
and
push
pop
pop
or
aaa
clflush
push
push
pop
hlt
and
or
pusha
add
int3
sti
lcall
sub
add
out
fucomip
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
fistpl
int3
push
jo
add
mov
mov
cmpsb
loop
push
sbb
js
jo
dec
sahf
pop
sbb
sahf
dec
lea
mov
mov
xchg
xchg
ss
xchg
dec
xchg
mov
in
pop
loopne
pop
push
adc
inc
or
mov
test
dec
cmp
and
dec
cmp
cs
dec
cmp
test
je
pushf
mov
pop
out
in
and
test
dec
mov
xlat
sbbl
dec
push
and
adc
nop
sub
test
orl
fadds
in
addb
in
andb
push
add
add
mov
and
add
add
fucompp
inc
adc
insl
adc
fdivs
add
pop
push
adc
shr
pushl
addl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
dec
into
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
inc
dec
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
xchg
inc
adc
or
adc
push
or
sub
inc
push
pop
sbb
aas
push
add
xchg
sbb
push
pop
outsl
ja
jg
xor
jb
bound
cmp
dec
dec
stos
inc
data16
imul
arpl
mov
mov
add
popa
addr16
outsl
js
aam
mov
push
mov
inc
jne
es
insb
gs
mov
dec
scas
push
mov
mov
daa
add
insb
in
dec
imul
jns
inc
mov
imul
ds
and
inc
jb
jns
daa
add
and
movsb
mov
mov
jmp
sbb
xchg
mov
cmp
outsb
pushw
movsl
adcb
arpl
mov
push
pusha
in
or
push
push
lahf
rol
lea
jns
and
sbb
or
xor
lret
popl
cmp
test
clc
pusha
gs
inc
inc
stos
and
push
dec
dec
lahf
mov
cwtl
xchg
pop
pop
push
push
jae
cmp
jno
mov
cmp
xor
xchg
call
push
adcl
gs
mov
xchg
movb
or
mov
push
dec
testl
dec
ret
cmp
add
mov
mov
fildll
dec
jge
daa
aam
arpl
imul
call
add
xchg
outsl
jae
inc
and
fs
xchg
jg
or
jne
popa
jl
mov
adc
sub
push
pop
aaa
pusha
push
or
jnp
lods
pop
das
je
outsl
xchg
or
aaa
daa
xchg
mov
popw
xor
cmp
cmp
add
ds
push
das
push
sub
es
jle
sub
sub
addr16
jae
fisttpl
sub
sub
push
cmp
jp
or
jmp
cmp
and
add
lods
lret
dec
pop
pop
cwtl
jb
sbb
mov
xor
push
jb
imul
ret
xor
push
lret
lods
in
add
xor
sbb
and
out
xor
es
jo
sub
inc
aam
push
lahf
sub
adc
daa
cld
push
hlt
push
call
out
les
outsb
lahf
cwtl
cmp
sti
push
aam
sarl
mov
xchg
inc
push
test
push
jl
je
fs
idivb
clc
or
pop
add
push
fidivl
add
out
adc
fdivl
mov
push
push
dec
dec
push
inc
xor
cmp
mov
out
iret
repz
sub
mulb
out
sahf
and
adc
add
cmp
push
decl
rcr
cmp
lods
mov
inc
or
cmp
jl
incb
test
pusha
iret
repz
inc
xor
sub
hlt
sahf
out
lcall
xor
out
insb
inc
sbb
cld
aam
cmp
repz
pusha
xor
push
movsb
push
xchg
mov
aam
lcall
jbe
xor
xor
mov
cwtl
cmpsl
pop
push
ret
bound
fs
sbb
jae
jb
xor
jp
popf
push
cld
sar
pcmpgtw
xor
add
jle
push
insb
mov
adc
inc
inc
dec
jae
insb
inc
gs
mov
sbb
dec
inc
dec
divl
cld
lret
inc
dec
dec
dec
push
push
loop
and
inc
dec
add
out
xor
dec
dec
inc
add
adc
sub
adc
decl
fdivr
incl
popa
into
mov
mov
xor
jnp
inc
loop
mov
ds
pop
push
aas
jnp
rcrl
lret
sbb
jb
xchg
jge
arpl
adc
pop
dec
scas
jp
adc
fdivp
das
in
scas
mov
mov
and
cmp
dec
imul
dec
cmpsb
iret
lret
add
inc
mov
mov
sub
fadds
pop
sahf
fwait
ss
sbb
pop
jns
ds
ljmp
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
das
cmp
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
pushl
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
mov
loope
xor
ds
dec
xchg
scas
lods
incb
cmp
push
xor
into
mov
ds
les
and
es
mov
flds
sbb
xor
mov
add
dec
push
push
or
jbe
inc
inc
or
outsb
jbe
and
add
inc
std
daa
adc
push
mov
imul
sbb
repz
dec
push
dec
push
sub
mov
mov
sub
sbb
add
sub
cmp
pop
pop
and
inc
sbb
mov
add
cmp
pop
push
xor
das
dec
pop
adc
cmp
push
jns
outsl
imul
add
cmp
cmpsl
outsl
in
jge
stos
ss
xchg
add
inc
das
inc
pop
dec
filds
or
xor
sub
xor
fucomip
mov
push
les
das
xor
sub
add
fwait
std
mov
lods
add
ret
cmp
pop
or
es
and
add
or
inc
push
ds
jnp
mov
sub
push
pop
adc
dec
pop
adc
pop
push
push
pand
out
jnp
adc
add
push
dec
dec
push
push
inc
pop
dec
dec
loope
call
dec
dec
add
add
inc
insl
pop
adc
add
dec
or
mov
jge
push
xor
pop
aad
mov
xor
phaddw
push
sbb
mov
xor
loopne
xor
push
sbb
sub
cmp
into
das
push
ds
test
scas
push
inc
sbb
sbb
xchg
testl
cmp
xor
cmp
mov
dec
pop
push
dec
int3
cmp
cmp
or
outsl
pop
push
jle
xor
pop
je
fsub
adc
xor
add
adc
and
dec
in
mov
cmp
push
mov
negl
clc
inc
and
ja
pop
push
gs
xchg
pop
inc
bnd
cmp
add
or
cmp
or
cmp
add
es
or
loopne
mov
adc
pop
sbbl
adc
ja
jecxz
pop
xor
push
mov
dec
das
pop
dec
movsl
dec
sbb
jmp
jnp
adc
dec
nop
dec
cwtl
in
push
cmp
scas
jmp
gs
add
push
outsl
push
jns
fdivp
cmp
ds
push
mov
lahf
out
mov
outsl
repz
xlat
jg
push
in
add
nopl
push
mull
add
or
xor
sbb
in
mov
adc
dec
stos
cmp
xchg
cli
push
inc
xor
cmp
outsl
insl
lods
sbb
pop
jge
and
outsb
insb
push
inc
fmuls
js
push
popa
je,pn
xchg
xchg
jg
mov
popf
fisttpl
push
xor
cvttps2pi
and
push
and
inc
or
iret
repz
pusha
mov
out
mov
push
icebp
xor
jns
out
push
imul
cmp
mov
mov
cs
mov
cmp
jo
sbb
add
mov
lock
das
push
stos
lcall
cs
push
xor
sub
sbb
pop
imulb
xchg
xor
jbe
pop
adc
pop
dec
or
out
fcmovu
cmp
and
push
nop
adc
adc
sahf
out
jne
scas
xor
push
cmp
cmp
cmp
push
adc
fadds
clc
icebp
push
int
mov
inc
pop
dec
xor
loope
xchg
das
mov
sub
insb
push
inc
inc
and
add
push
iret
lods
pop
sbb
push
sub
pop
pusha
push
scas
add
out
adc
xor
in
push
pop
dec
addb
xor
in
scas
push
sbb
loopne
cmp
cmp
dec
call
pop
xchg
cmc
sub
add
xor
ss
dec
or
dec
sub
arpl
pop
pop
mov
sahf
jge
add
cmp
outsb
or
imul
add
xor
cmp
daa
push
addl
xchg
or
adc
sbb
in
pusha
sub
cs
push
fwait
adc
push
sbb
inc
cmp
cmp
push
jnp
cmp
cs
sub
add
sbb
cld
lods
jecxz
push
adc
push
mov
cltd
jbe
pop
test
push
xor
jnp
ret
popf
dec
cmp
dec
pushf
xor
xor
xlat
orl
outsb
fildll
sub
dec
inc
scas
in
push
lods
push
add
arpl
add
imul
add
sub
mov
xchg
testl
and
push
add
xor
xor
xor
xchg
pop
add
rolb
ret
stos
dec
push
xor
adc
add
push
insl
and
pusha
pop
es
push
and
in
xor
xor
cmpsb
subb
aaa
push
mov
push
xor
jle
orl
xchg
push
cmp
out
and
pop
sbb
lods
and
add
mov
lret
cmp
mov
xor
test
hlt
adc
ffree
xchg
xor
add
inc
add
fs
js
das
mov
xor
dec
push
filds
cmp
movsb
add
and
mov
sbb
cmp
dec
push
xorl
movsb
jo
mov
cmp
test
ds
push
push
sarl
sbb
inc
sahf
subb
jbe
int
out
jge
lcall
inc
and
xlat
mov
fnstsw
or
sbb
cmp
and
sbb
cmp
bound
sbb
addr16
add
in
insb
sbb
sub
push
cmp
mov
push
and
push
add
addl
pop
loopne
add
mov
push
pop
add
jns
repz
or
dec
pushf
dec
adc
ja
xor
sub
inc
daa
push
pop
xchg
xor
adc
mov
xor
and
and
inc
and
sub
push
adc
mov
pop
adc
out
out
add
or
loopne
cmp
mov
mov
add
rol
repnz
and
call
sub
sahf
push
sub
ja
and
pushl
insl
popa
imul
xor
push
push
pop
jl
cs
outsl
jo
outsb
data16
push
ja
sub
adc
pop
dec
adc
repz
repz
inc
push
inc
cmp
mov
cmp
push
xor
mov
mov
jmp
sub
and
add
cmp
sbb
cmp
and
das
or
ffreep
push
pop
dec
add
or
jl
andb
mov
dec
mov
addr16
xor
or
dec
cmp
cmc
push
and
sbb
push
test
dec
push
xor
cmp
sub
dec
pop
or
into
mov
dec
dec
push
inc
pop
ss
sub
cmp
pop
loope
das
inc
adc
aas
or
pop
lock
sub
mov
pop
sbb
sbb
pop
jge
ret
out
out
push
or
jbe
pop
mov
pop
mov
push
mov
xor
push
popa
ret
push
test
xor
movsb
sarb
push
lea
pop
push
js
shrb
inc
ret
jge
loopne
outsb
aaa
sub
add
and
sub
push
in
sub
dec
es
push
test
push
aaa
xor
xlat
dec
add
daa
push
mov
push
sub
inc
inc
sti
add
jae
add
mov
rcl
cltd
fcomps
push
jo
push
addr16
mov
pushf
icebp
mov
push
mov
xor
inc
push
andl
repz
add
or
fwait
int
roll
or
insb
ss
or
adc
neg
data16
adc
sbb
and
sub
xor
fidivrs
fwait
inc
mov
mov
mov
fldcw
mov
popa
xchg
sbb
int
mov
sub
add
or
repz
add
loopne
sbb
lret
str
data16
lea
and
jno
lcall
dec
push
push
push
das
xor
xor
dec
jbe
jp
and
and
mov
sub
pusha
add
pop
mov
adc
inc
addr16
outsl
inc
mov
dec
sub
xor
je
pop
jae
push
mov
test
test
mov
sub
xchg
or
xor
outsl
imul
xchg
fbld
or
lods
pop
and
push
scas
add
sbb
push
xor
mov
fisubrs
jl
xchg
xor
or
cmc
idiv
sub
pop
add
xor
dec
adc
inc
dec
push
cmp
pop
mov
das
dec
ss
dec
xchg
push
dec
push
pop
sti
ljmp
inc
push
cli
xor
mov
stos
push
cmp
aam
xor
es
ss
sub
push
xor
jle
push
out
nop
or
add
xor
inc
sub
xor
adc
inc
loopne
add
adc
jae
rorb
mov
push
lret
or
mov
enter
or
and
inc
cmp
inc
push
jecxz
sbb
out
push
inc
das
inc
aad
xor
xor
xor
add
in
push
push
arpl
xor
mov
and
and
clc
divl
push
and
cmp
pop
push
sbb
sub
mov
dec
cmp
sub
cmp
inc
cmp
cmp
shl
sbb
push
jae
insl
dec
cmp
jl
jge
jg
xchg
popl
push
adc
pop
sbb
push
or
mov
adc
add
aas
pop
mov
jle
dec
xor
mov
cvttps2pi
push
cmp
xchg
cmp
sub
push
sbb
cmp
cli
pop
add
push
mov
mov
test
mov
aaa
cld
ss
push
pop
outsl
fmulp
cmpsl
stc
push
jmp
push
es
add
daa
and
or
out
push
das
sub
ljmp
push
in
push
jo
add
testb
jecxz
push
inc
inc
or
or
es
clc
sbb
insl
jo
lods
or
mov
outsl
loopne
xchg
das
test
dec
outsb
jnp
jb
lds
xor
orb
or
jo
cltd
cmp
add
mov
aaa
cmpsl
pop
push
pop
push
sub
popa
lods
cmp
frstor
and
jne
sub
xor
mov
xchg
sbb
push
mov
dec
fidivrs
and
and
cmp
cmpsb
sbb
inc
and
sub
out
mov
adc
lcall
cmp
test
xor
adc
sarb
mov
imul
sub
arpl
sbb
adc
fistps
inc
fsts
push
and
jmp
addl
push
hlt
out
sub
sbb
mov
out
sbb
das
add
xor
clc
inc
pop
jmp
stos
mov
push
lea
dec
subb
pop
fcoml
sbb
or
xor
push
repnz
jp
mov
ds
xor
push
stos
call
pop
ljmp
dec
loop
mov
xor
and
add
decl
dec
push
adc
push
and
and
adc
sbb
and
or
push
xor
adc
adc
or
hlt
lcall
and
inc
sub
adc
bound
loop
loop
push
mov
push
push
push
or
stos
dec
arpl
ret
es
adc
inc
add
mov
lret
cmp
or
push
adc
push
pop
js
out
dec
adc
dec
or
pusha
popa
pop
dec
dec
push
cmpsl
fs
addl
out
scas
mov
sbb
das
sbb
arpl
and
das
adc
add
add
shll
repnz
adc
loopne
adc
in
sahf
int
adc
pop
sub
push
lock
adc
jg,pt
cmp
push
cmp
mov
sbb
orb
dec
cltd
mov
pusha
and
jnp
fsubrs
fwait
mov
cmpb
sub
sub
pop
add
cs
inc
movsl
nop
and
xchg
fiadds
lss
cmp
dec
scas
lret
add
movl
daa
sbbb
dec
cmp
pop
mov
cmp
and
mov
adc
adc
adc
jno
fsubl
fmull
mov
and
inc
dec
cmp
add
push
jo
cs
stc
js
pop
xchg
in
pop
in
fnsave
out
mov
jge
rcr
and
fidivs
inc
mov
mov
sbb
testb
xor
push
jne
xchg
xchg
movsl
xor
aaa
adc
insl
sbb
cmp
inc
int3
and
or
add
movsl
inc
insb
cmp
rcrl
cs
and
shll
scas
dec
cmc
test
inc
insl
pop
pop
cmp
pop
scas
xchg
push
adc
inc
dec
xor
out
or
lret
pop
dec
rolb
inc
sbb
in
and
fs
in
cmp
dec
dec
and
push
or
push
push
pop
push
jge
jo
dec
dec
jg
inc
sti
pop
out
or
dec
add
sbb
movsb
xorl
aam
ret
das
popf
loopne
mov
daa
dec
daa
add
inc
jg
das
pop
inc
pop
cs
mov
push
and
pop
add
add
pop
sbb
xor
sbb
push
add
pop
sbb
sbb
pop
int3
jp
mov
or
dec
inc
sbb
adc
hlt
xchg
add
pop
pop
or
or
adc
pop
push
push
or
es
and
pop
lcall
add
add
aaa
ja
adc
inc
push
fisubrs
stc
dec
std
mov
add
je
ja
fs
and
sar
imul
add
rclb
dec
pop
in
and
xchg
in
movsb
les
inc
sbb
adc
inc
inc
fnstcw
add
push
push
and
sahf
adc
mov
push
mov
push
stc
pop
sbb
out
push
push
push
pop
pop
mov
lahf
out
pop
pop
sbb
push
jbe
rorl
pop
repz
push
insb
movsb
mov
xchg
pop
inc
xchg
mov
ljmp
add
aaa
sar
test
and
mov
mov
daa
sbb
ljmp
sbb
mov
shlb
enter
push
push
mov
mov
mov
ss
adc
cli
mov
sub
sub
mov
push
mov
mov
sbb
mov
fsin
test
ds
pop
sbb
xor
mov
inc
xor
mov
sbb
enter
mov
pop
dec
xchg
pop
shl
dec
push
adc
jb
mov
pop
push
and
sub
stc
xor
aaa
aaa
xor
pop
pop
xor
call
add
push
sbb
rorb
inc
jb
sti
insl
scas
pusha
outsl
push
dec
imul
jbe
dec
dec
mov
xchg
xchg
out
sub
jns
mov
xor
xor
cmp
inc
in
dec
fdiv
pushf
cmp
int3
dec
mov
inc
mov
mov
xor
stos
stc
push
pop
add
xchg
aam
mov
mov
test
push
push
dec
fnstcw
idiv
cmp
xor
xor
sub
sub
xor
inc
xor
loope
loope
inc
pop
xor
add
sbb
cmp
insb
push
sub
outsb
add
mov
xor
sahf
das
js
data16
outsl
enter
jb
pushl
jp
scas
push
jb
or
and
jo
pop
bound
clc
lret
jne
cmp
popa
outsb
mov
pop
add
insb
push
loopne
imul
mov
jo
pop
and
mov
addl
fcomps
mov
push
ja
inc
sbb
inc
incb
push
xlat
das
lock
pop
xor
scas
push
subl
rclb
and
enter
aaa
add
sbb
ror
iret
stos
push
rcr
daa
sbb
push
cld
mov
sbb
outsb
dec
dec
or
sbb
sbb
inc
jg
mov
pusha
or
mov
lcall
inc
test
xor
dec
and
inc
sub
mov
jns
stos
dec
cmp
add
or
sbb
xchg
jbe
bound
mov
sbb
sbb
subb
xor
mov
in
mov
mov
xchg
cmpsl
mov
loop,pn
out
into
cmp
xlat
pop
out
mov
pusha
fcoml
jns
sahf
nop
clc
jbe
cmc
mov
cli
xchg
xchg
shll
ljmp
add
push
xchg
pushf
mov
jnp
sub
xchg
pop
push
cs
pop
out
imul
push
call
popa
repz
xchg
mov
pop
cs
mov
fimuls
ja
nopl
into
ja
push
imul
aas
pop
lods
popa
scas
nop
imul
xor
lahf
xlat
insb
das
inc
pusha
dec
jb
aaa
push
dec
adc
jge
divl
cmpsb
dec
loopne
sahf
jbe
mov
push
jp
lret
push
mov
cmpsl
stc
mov
push
push
popa
mov
cmp
push
test
lock
icebp
sahf
imul
aam
in
and
ja
dec
repz
and
fisubrl
aaa
xchg
push
dec
repz
pushf
int
sbb
idivl
push
fiaddl
inc
cwtl
pop
pop
iret
repz
push
jno
xorl
xor
cltd
sbb
mov
nop
testb
sahf
aad
aaa
je
mov
fistps
outsb
out
iret
repz
fwait
jge
jnp
push
sbbl
cmpsl
push
pop
push
ss
pop
bound
push
inc
mov
es
mov
lcall
lcall
ds
repz
mov
or
push
xor
push
jb
dec
repz
iret
ret
adc
push
xor
iret
sti
mov
in
xor
repz
stc
ret
bound
mov
ds
pause
mov
out
sahf
out
push
mov
cmp
out
add
xchg
mov
jns
iret
repz
sbb
sahf
out
mov
cmp
cmp
add
incl
or
aad
pop
dec
sbb
scas
sub
adc
incl
mov
stc
add
adc
or
ljmp
popa
stc
push
mov
xor
adc
mov
pop
mov
or
scas
int
mov
fadd
cs
outsb
and
push
pop
mov
add
idivb
adc
cmpsb
lds
and
pop
sbb
enter
das
in
sub
xchg
inc
repnz
iret
pusha
or
daa
or
or
xor
pop
outsl
pop
imul
inc
xchg
outsb
push
cmp
popa
incl
inc
push
ljmp
inc
sbb
mov
addr16
push
jnp
cmp
inc
sbb
jae
ficoml
je
xlat
push
mov
aam
out
cmp
cmp
dec
jbe
cmp
push
ljmp
cmpsb
dec
add
push
pop
lods
fstl
cmpsb
push
insb
pop
push
mov
aam
dec
pop
je
jns
sbb
ffree
push
fisttps
jp
das
push
mov
jns
loop
outsb
cmp
jnp
divl
iret
push
pop
sbb
sub
dec
adc
pop
aaa
or
dec
mov
ja
dec
clc
push
lods
push
push
cwtl
push
xor
inc
pop
push
add
adc
cmp
or
cmp
ds
or
and
popa
insl
jo
aas
jns
sbb
insb
je
push
addr16
jo
jae
imull
jg
es
outsl
and
aas
cmpb
sub
ss
or
cmpsb
mov
inc
js
or
xor
xor
xor
xor
cmp
cmp
push
xor
cmp
ds
add
or
dec
mov
int3
jbe
or
push
out
dec
sbb
xlat
mov
or
ss
add
scas
in
cmp
push
lret
or
adc
das
mov
pop
push
inc
push
sub
sarb
mov
les
inc
push
ljmp
push
into
sbb
rclb
adc
sbb
outsb
dec
mov
cmp
pop
testb
push
jp
daa
mov
cmp
daa
cmpsl
daa
cli
add
imul
inc
jmp
lock
mov
add
je
cs
sbb
js
mov
mov
popf
repnz
lcall
xor
dec
pop
sbbl
sbb
xchg
mov
jnp
push
scas
or
ret
pop
or
nop
xor
inc
es
loope
sbb
lea
push
fnsave
jo
cs
push
inc
sub
shll
or
mov
rcrb
pop
xor
and
mov
mov
ret
das
sub
mov
push
pop
pop
adc
mov
xor
aad
daa
mov
sub
jne
int
dec
imul
mov
pop
add
add
dec
push
daa
add
jo
cwtl
mov
das
int
xchg
fdiv
movsl
xor
pop
insl
and
rolb
ljmp
mov
daa
mov
sbb
lock
stos
inc
sbb
daa
lods
daa
add
lock
jge
mov
or
mov
inc
divl
iret
mov
lods
mov
ret
push
insb
pop
test
mov
mov
popa
daa
mov
mov
pop
xchg
or
les
xorl
or
mov
sbb
cmp
sub
add
loopne
inc
cmp
push
pop
push
das
push
lods
lods
mov
scas
pop
rcrl
cltd
daa
lahf
pop
xchg
add
popl
xorb
pop
addr16
push
add
jg
loopne
ficoms
movsb
sub
push
out
les
ret
popf
fwait
stos
mov
mov
pop
and
mov
inc
imul
imul
or
mov
adc
mov
add
or
adc
cwtl
push
push
inc
js
inc
xor
jl
jl
ffree
ret
test
xor
bound
or
jg
xorb
imul
and
xor
jo
int
or
sbb
xchg
adc
insb
jmp
sub
cmpsl
call
ret
and
in
and
cltd
test
mov
push
test
dec
xor
xor
in
movsl
sbb
push
mov
es
dec
das
imul
sub
add
lahf
or
pop
adcb
xor
adc
adc
rorl
pop
rcr
adc
es
sbb
adc
jge
adc
adc
lcall
ds
inc
mulb
jg
test
sahf
das
push
das
add
mov
jb
or
bound
lods
pop
add
sub
inc
dec
adcb
leave
mov
add
jle
fcoms
inc
movsb
outsb
dec
adc
sbb
call
shl
aas
cmp
sbb
pop
and
fisubrl
popa
popa
sbbb
pop
iret
push
or
dec
add
sbb
call
je
dec
mov
inc
or
popf
add
shrl
or
dec
lock
fisubrl
rcl
lods
mov
jmp
repnz
mov
cmp
sbb
and
sub
cmp
mov
pushf
push
ds
push
sbb
inc
int3
daa
add
xor
add
repnz
daa
add
jmp
aad
fiaddl
mov
fsubrl
adc
jb
sbbb
xchg
fs
xor
loop
push
mov
mov
mov
pop
xor
or
push
push
xchg
dec
push
dec
daa
xchg
out
testb
insl
dec
shlb
xorb
pop
or
out
mov
data16
in
mov
sbb
add
sub
lret
add
mov
xor
push
mov
shrb
cmp
cmp
andb
gs
sbbb
out
mov
cli
add
daa
xor
inc
jl
int
adc
out
mov
es
ss
mov
jno
pop
call
ja
xor
cmp
dec
inc
add
inc
pop
neg
dec
xchg
jo
ljmp
pop
inc
test
pop
xchg
pusha
enter
mov
fst
pusha
and
xor
push
popa
shlb
xor
dec
out
shrl
fdivrp
pop
subl
imul
mov
add
dec
dec
cmp
enter
out
sahf
add
rorb
or
adc
lock
pusha
inc
push
add
cmc
xchg
shrb
inc
test
inc
or
add
push
pop
insb
jbe
fs
xor
xor
pop
int3
push
add
cmp
int
add
or
dec
or
adc
das
mov
push
cs
jne
jp
pop
pop
or
push
pop
pop
add
or
pop
dec
dec
ljmp
sub
inc
dec
jo
das
push
or
add
xor
dec
adc
cmp
pop
sub
xor
push
or
dec
xor
add
sub
xor
add
add
cmp
push
pop
add
incl
push
push
and
push
cmp
pop
add
or
or
push
add
movsl
sub
inc
or
dec
push
sbb
add
popa
ljmp
adc
add
inc
sbb
pop
mov
sbb
push
and
dec
push
xor
jmp
sub
mov
and
push
push
dec
mov
xor
inc
sbb
add
sbb
xor
pop
push
call
sbb
pop
and
sub
push
cmp
or
push
or
mov
adc
in
jne
mov
and
or
sti
and
mov
push
cmpsl
jmp
mov
sbb
add
sbb
es
push
pop
dec
mov
pop
movb
push
mov
dec
call
adc
xchg
mov
out
es
mov
pop
xor
xor
sbb
pop
mov
dec
adc
filds
push
outsl
inc
push
inc
and
and
push
add
lods
cs
sbb
push
lret
add
mov
inc
pop
rol
mov
inc
jb,pn
hlt
xchg
aam
add
push
push
push
pop
sub
push
inc
push
dec
inc
loop
push
add
loopne
push
mov
and
sub
out
pop
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
call
pop
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
pushl
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
fimull
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
jg
sub
mov
cmp
sbb
cld
insl
sub
adc
or
or
pushl
leave
ret
sub
xchg
mov
data16
mov
call
cltd
call
test
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fdivr
fcomip
decl
lret
rep
cs
arpl
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
decl
push
mov
fwait
stos
flds
pop
imul
inc
xor
inc
pop
or
jno
sub
js
cmp
sub
cs
dec
pop
cmp
push
jl
gs
inc
das
jmp
imul
dec
jp
and
pop
push
dec
sub
pop
sub
ja
aaa
push
daa
xor
mov
jb
add
xor
jne
sub
cmp
cli
incl
das
push
or
pop
pop
cmp
add
push
adc
inc
shl
addr16
inc
jg
add
push
push
fs
xor
insb
pusha
mov
push
xlat
xchg
jne
aaa
pop
pop
daa
pop
daa
inc
inc
xchg
mov
push
or
or
and
sbb
pop
inc
push
cmovae
push
cs
pushw
aaa
push
xor
inc
add
aas
pop
imul
xor
inc
add
xor
xor
and
aaa
inc
push
imul
inc
ss
cmpxchg
pop
cmpsl
ss
scas
adc
popf
nop
or
cmp
out
inc
test
or
sub
adc
shlb
jecxz
add
outsl
push
add
fldcw
bound
test
inc
push
jp
sti
ret
cmpsl
fistpl
jge
outsb
dec
enter
punpckhbw
xchg
shll
push
fimuls
push
aas
cmp
mov
sbb
add
and
push
dec
dec
dec
cmp
xor
mov
es
inc
nopl
dec
sbb
or
pusha
add
loopne
aad
cmp
push
or
xor
enter
cmpsl
aaa
mov
in
pushw
add
sub
pop
adc
sbb
jp
cmp
mov
sbb
stos
fcom
rcrb
fmul
loop
inc
mov
int3
push
mov
gs
push
sbb
add
push
adcb
or
pop
dec
sub
cmp
push
mov
andb
loop
lret
shrl
xor
jge
cmpsb
subb
shlb
or
mov
mov
push
xchg
mov
fildl
add
xchg
call
pop
es
cmp
sub
inc
sbb
and
fs
mov
adc
inc
push
aad
xor
icebp
sbb
adc
push
outsl
hlt
movb
adc
adc
test
adc
or
adc
pop
stos
into
or
cmp
mov
test
add
pop
sbb
in
in
outsb
outsb
je
xor
js
xor
addr16
mov
popa
insl
gs
cmp
ret
xchg
pop
data16
or
push
inc
aad
inc
xchg
or
pop
sbb
cmp
cmp
lret
mov
dec
or
insb
add
loop
dec
push
popa
je
push
popf
sbb
xor
insl
push
and
sti
ds
push
push
adc
es
or
sbbb
mov
pop
adc
and
push
sbb
or
andb
pop
aas
pop
xor
inc
mov
push
movsb
lret
movsb
add
pop
fisttpll
add
mov
ljmp
and
fiaddl
mov
jae
adc
insl
test
and
ret
mov
ret
xchg
xor
dec
pop
stos
xor
mov
jae
and
hlt
leave
fsubs
cmpsl
push
or
push
add
je
inc
sbb
sub
js
push
mov
or
stc
cmp
sub
pop
or
fadds
mov
add
ja
jb
pop
clc
pop
bound
repz
aad
pop
inc
jne
and
push
mov
xor
jno
sbb
fstpt
jmp
inc
arpl
ret
or
test
fiaddl
jl
dec
and
test
pop
ficoms
and
pop
push
sbb
daa
ficoms
call
pop
dec
sbb
pop
aaa
add
or
nop
nop
cli
mov
imul
or
inc
stos
push
or
imul
adc
es
mov
inc
pop
je
es
inc
cmp
hlt
pop
pushf
fnstsw
sub
imul
insb
mov
adc
push
pop
pop
inc
push
dec
sub
sbb
or
dec
mov
xor
adc
aaa
data16
add
inc
dec
flds
adc
dec
bound
iret
mov
aas
and
dec
aas
data16
cs
mov
dec
sbb
sbb
inc
outsl
mov
push
mov
ror
add
xchg
jbe
xchg
inc
or
push
xor
push
add
popl
imul
bound
sub
ficompl
jle
pop
pop
icebp
imul
pop
aas
push
das
add
imul
movsl
popl
adc
pop
xor
mov
in
inc
jle
pop
out
insb
jnp
pop
movsl
repz
ffreep
fcmovu
pop
repz
cs
push
sub
nopl
push
cmp
push
cmp
iret
imul
cmpsb
pop
mov
pop
inc
and
rcrb
dec
push
jge
push
jo
add
scas
dec
dec
cld
movsb
aas
add
sub
inc
dec
inc
or
inc
and
inc
cmp
jne
in
or
add
cmp
and
in
out
dec
aaa
sub
push
jne
or
sub
scas
aas
filds
in
sub
mov
fs
dec
dec
dec
mov
jae
push
popa
shlb
dec
outsl
and
xor
pop
stos
movzbl
xchg
mov
push
punpckhwd
dec
outsb
push
je
mov
sbb
scas
pop
jae
lock
ja
rcll
mov
mov
inc
pop
push
dec
inc
dec
inc
fmull
dec
xlat
mov
xchg
cmp
gs
movsb
or
inc
inc
fwait
jo
loopne
pop
daa
dec
push
dec
and
mov
jb
bound
jno
or
dec
cmpsl
pop
pop
scas
pop
cmp
rolb
inc
add
in
or
ret
adc
add
add
add
jo
dec
dec
imull
loop
flds
loopne
mov
ret
jb
cmp
push
push
adc
add
xchg
icebp
xchg
add
inc
pop
or
push
or
or
ljmp
inc
pushl
out
pop
push
sbb
inc
cmp
adc
sub
nop
sub
add
sub
adc
adc
xor
cmpsb
test
call
adc
enter
add
aaa
adc
add
mov
les
in
or
push
testb
mov
xor
es
call
test
cmpsl
mov
mov
fcomps
sub
push
xchg
and
mov
cmp
sbb
addb
jmp
outsl
xlat
les
push
xchg
mov
les
lock
dec
stos
clc
add
and
add
dec
aaa
xlat
lea
push
or
mov
rcll
mov
imul
sub
sub
push
sti
xor
add
cmp
mov
dec
add
dec
pop
pop
adc
cmc
inc
fmulp
adc
inc
idivl
cmpb
neg
divb
rorb
pop
inc
dec
add
loopne
push
mov
loopne
aaa
daa
notb
add
dec
fs
push
aam
aas
add
out
loopne
incl
idiv
dec
movsb
add
daa
fisubrl
neg
adc
and
cmp
inc
add
outsl
ror
cmpsl
ja
outsl
insl
lods
push
jae
int
daa
mov
add
daa
outsl
pop
inc
jae
mov
push
sbbl
addr16
outsl
nop
sbb
xchg
pop
leave
xchg
inc
inc
leave
xchg
pop
leave
cmp
pop
leave
xchg
pop
sub
and
pop
leave
xchg
add
push
daa
notb
xchg
jbe
push
fcomps
mov
mov
cmp
out
gs
je
pop
mov
jns
iret
repz
and
pop
sub
mov
pop
xchg
test
pop
sahf
pop
sahf
ja
negl
pop
pop
push
test
dec
repz
clc
pop
fadd
in
adc
out
enter
pop
push
lea
les
adc
xchg
out
fcoms
adc
out
dec
mov
push
and
das
int3
imul
iret
xchg
xor
pop
or
add
into
xchg
cmp
add
add
push
adc
insl
and
inc
mov
sarl
push
jmp
pop
test
or
xchg
mov
dec
outsl
xchg
push
xor
add
inc
clc
sbb
add
inc
xchg
popa
sub
push
dec
pop
dec
outsl
add
sub
mov
inc
adc
iret
test
mov
mov
test
scas
in
xor
cmp
xchg
cmp
push
sub
dec
push
mov
test
pop
inc
mov
popa
scas
add
js
out
daa
push
xor
xor
xor
movsb
jns
xor
jl
inc
cs
add
dec
push
adc
pop
leave
mov
pop
scas
add
mov
mov
push
xor
pushl
rclb
xor
xor
and
testb
sub
and
test
lock
out
lcall
test
cmc
dec
sahf
xor
pop
ss
pop
fidivs
mov
pusha
lods
fs
or
cmp
mov
adc
sbb
out
push
xor
ja
add
scas
sub
pop
sbb
mov
pop
insb
push
js
insb
and
add
inc
outsb
push
xor
outsl
and
cltd
pusha
repz
cwtl
sbb
and
lods
mov
pop
jbe
or
and
add
insb
mov
xor
out
outsb
pop
or
shlb
test
daa
mov
xchg
pop
push
aaa
addr16
insl
add
dec
mov
fildl
sbb
in
pop
mov
or
daa
add
push
repnz
nop
ss
mov
pop
cmpsb
lahf
mov
add
push
mov
mov
lret
fimuls
or
in
push
rclb
mov
add
inc
mov
pop
sbb
fs
pop
and
xor
add
fs
and
in
imul
popa
divl
sbb
pusha
popa
jo
jecxz
mov
push
push
outsl
jg
jbe
adc
daa
addr16
or
jbe
js
movsb
bound
add
cmpsb
clc
gs
pusha
bound
jbe
enter
nop
xchg
rcrl
dec
jo
mov
mov
push
dec
mov
dec
enter
pop
jl
mov
xchg
rcrl
test
scas
add
push
xlat
or
dec
leave
dec
push
xchg
xor
fs
dec
adc
dec
arpl
pop
arpl
testl
and
cmp
aas
lock
scas
and
fs
mov
push
and
aaa
dec
sub
ss
aaa
xor
or
push
sbb
sbb
or
lock
shlb
out
fimull
movsb
dec
mov
repnz
mov
and
jg
add
and
gs
mov
nop
jg
pushf
pop
sbb
repnz
enter
add
aaa
pusha
and
dec
dec
sub
data16
sti
pop
push
dec
push
adc
outsl
add
ss
daa
mov
cmpsb
cwtl
popw
test
es
pop
fcoms
aaa
xchg
hlt
fnstcw
cmpsl
or
iret
cmp
dec
xchg
xchg
daa
scas
jbe
cmp
int3
lahf
or
add
lods
in
add
imul
push
add
jl
divb
pop
cmp
push
iret
js
xchg
inc
cmp
aam
and
or
push
cmpsl
or
nop
sub
push
movsb
push
and
or
dec
xchg
int3
inc
ljmp
push
push
enter
add
cmpsb
mov
ret
roll
scas
add
mov
fisubs
ror
fsubrl
dec
cs
mov
add
out
push
addr16
pop
or
jo
or
addr16
nop
sub
add
and
push
add
movsb
loopne
imul
and
or
xlat
sbb
test
insl
insb
insl
and
and
es
pop
js
push
insb
xchg
enter
dec
and
imul
subb
inc
ret
lds
hlt
outsl
lods
pop
or
pop
jb
dec
sbb
pop
push
xor
xlat
data16
push
filds
pop
das
repnz
in
mov
cwtl
xor
push
aas
addr16
ret
pusha
fsubs
pop
outsl
mov
out
xor
cmp
sarb
add
repz
int
dec
cmpl
adc
dec
dec
jne
stos
rorl
out
lcall
cmp
out
sbb
jns
iret
repz
adc
gs
ja
out
cli
inc
jle
push
jecxz
jg
iret
repz
xchg
cmpsl
stc
or
inc
pop
subb
adc
ljmp
subl
repz
push
test
mov
jns
out
jecxz
test
scas
repz
out
add
out
ds
mov
xchg
iret
sarl
in
js
out
lcall
xchg
loopne
mov
ds
repz
and
int
imul
ja
out
pushf
mov
xor
xor
mov
xchg
ss
test
and
fisttps
xchg
stc
cmp
shrl
xchg
sarl
pop
cltd
loop
xchg
mov
jns
iret
xlat
or
stc
xor
jecxz
cwtl
jp
cltd
mov
int
fstl
and
out
std
cmp
sahf
out
push
or
push
dec
repz
lahf
ss
int3
push
mov
add
repz
out
mov
mov
hlt
dec
movsb
in
das
movsl
cmpsl
stc
cmp
jge
sti
cmpsb
mov
add
jns
jns
cmpsl
inc
test
repz
or
stos
and
out
cmp
fsubrl
lods
cwtl
js
lcall
and
jg
int
jns
out
and
cmpsl
stc
adc
pusha
mov
iret
shll
mov
into
mov
sahf
out
icebp
adc
pop
fadds
out
out
shl
mov
jo
out
xor
leave
sbb
cmpsl
stc
xor
pop
outsl
mov
out
cmp
add
sbb
jns
jns
push
repnz
imul
les
lds
xor
out
enter
mov
xor
iret
lods
cmc
leave
or
jg
fnstcw
in
push
ss
data16
shll
shll
test
lock
push
rclb
and
cmp
rorb
out
push
dec
aaa
stos
xorl
sahf
fistpl
mov
fidivl
imul
jp
ficoml
jp
jp
out
mov
add
pop
femms
fcmovbe
xchg
aam
push
and
test
das
in
sarb
shr
pop
xor
mov
fidivrl
incl
cmp
and
es
in
sub
push
ret
out
mov
stos
popf
mov
out
shlb
inc
mov
es
pop
enter
in
and
ss
push
pop
sbb
cmp
xor
fs
xor
jg
jg
in
inc
mov
orb
nop
pop
mov
pop
lahf
fmuls
cmp
outsb
xchg
mov
fucomip
movsb
mov
ss
sub
shll
mov
ja
aas
insb
dec
mov
mov
mov
nop
pop
xor
rcrb
push
out
ss
mov
mov
mov
aas
mov
sub
inc
std
mov
lcall
jo
rolb
inc
lea
inc
mov
add
mov
pop
inc
jbe
popl
jmp
fs
jnp
xchg
adc
sbb
loope
add
mov
ljmp
ds
add
mov
mov
dec
inc
pop
pop
adc
add
push
outsl
cmp
push
and
sub
sbb
jg
movsb
push
inc
dec
adc
xor
jg
push
dec
push
mov
pop
mov
push
pusha
cmp
popf
aaa
popa
aas
ret
adc
insb
inc
mov
mov
pop
pushf
sbb
daa
xchg
lahf
or
inc
mov
inc
ja
push
das
outsl
dec
repnz
jbe
dec
cld
js
js
sub
scas
pop
in
popf
xchg
push
push
jns
inc
jns
mov
in
in
test
fs
jo
out
jnp
add
iret
addr16
xchg
int
fdivrl
add
inc
cld
dec
jnp
xchg
jl
xchg
jp
push
dec
cs
out
dec
dec
or
sub
js
sarl
jp
push
mov
jbe
or
inc
add
leave
or
cld
sbb
dec
and
push
jnp
cmp
rcrl
inc
outsl
enter
outsb
jno
add
mov
iret
add
jnp
jnp
rorl
mov
add
sahf
cmp
jl
add
adc
cltd
fimull
add
repnz
jl
lret
enter
leave
xchg
mov
ror
jns
push
mov
jge
add
clc
sbb
jl
and
jne
cmpb
out
sahf
out
add
add
sahf
push
mov
ret
or
pop
ja
or
push
inc
xchg
inc
repnz
and
aam
sahf
or
jb
jge
jge
adc
dec
sub
sbb
cmp
in
inc
dec
and
fwait
sub
je
pop
push
add
pop
leave
test
mov
iret
insl
in
jge
xchg
pushf
pushf
pushf
pop
int3
aam
xchg
out
call
inc
dec
and
push
sbb
jle
jle
enter
jle
jle
jle
xchg
dec
jb
jle
pusha
jb
jb
push
xchg
pop
jb
shrb
mov
mov
cmpsl
and
fucomi
rcrl
jbe
dec
push
push
push
dec
lock
mov
jg
inc
jg
jns
inc
dec
jg
add
bnd
call
xchg
cmp
adcl
js
or
out
inc
in
or
add
sub
xchg
int3
adcl
out
sub
jae
push
daa
xor
adc
xchg
xchg
pushf
xchg
adc
iret
jo
pusha
xor
mov
dec
pop
mov
inc
mov
adc
dec
repnz
sahf
test
sbb
fstl
daa
cmp
cmp
clc
andb
leave
or
xchg
jno
cmp
addl
pushf
and
mov
mov
add
daa
and
cmp
out
sbbl
pop
outsb
mov
mov
flds
mov
addl
iret
or
or
or
iret
repz
inc
or
iret
repz
punpckhbw
jae
repz
adc
mov
xchg
cmp
repz
movsb
adc
iret
repz
sbb
or
sbb
inc
add
and
test
mov
mov
aam
jge
xchg
jnp
ja
leave
inc
jnp
xchg
mov
js
xchg
or
rcrl
scas
js
cwtl
cltd
xchg
add
mov
lock
xor
fistl
test
outsb
and
jp
test
pop
cmp
mov
addr16
push
add
fildl
inc
loopne
nop
scas
pop
lahf
int3
inc
int
outsb
mov
mov
jns
pushf
sbb
add
les
jecxz
or
sub
repz
add
loopne
loop
incl
out
mov
mov
add
movsb
leave
add
in
jb
and
mov
leave
inc
leave
je
inc
jb
in
mov
and
jbe
xchg
pop
mov
clc
mov
subb
inc
dec
repnz
mov
pop
in
iret
in
leave
mull
xor
leave
sbb
pop
xchg
pusha
xchg
insl
and
sbb
and
scas
iret
mov
orb
pushf
in
mov
xchg
pushf
pop
mov
xor
jns
stc
or
mov
push
mov
xchg
out
pusha
xchg
add
dec
dec
cltd
mov
sub
xchg
sub
mov
xor
push
sbb
add
push
cmp
add
add
sub
nop
adc
mov
pushf
je
lea
push
mov
mov
addr16
test
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
jb
shrb
pi2fd
jb
jb
or
or
jb
jb
or
push
add
add
add
leave
shll
add
outsb
pop
dec
addr16
xchg
adc
out
jg
add
and
push
add
mov
mov
int3
mov
mov
fcoms
mov
add
icebp
pop
ja
push
jb
dec
nop
sbb
mov
mov
movsl
mov
setle
mov
aad
or
in
jns
or
or
or
fwait
mov
cmp
les
add
push
scas
popf
pushf
je
pop
arpl
or
repnz
mov
jae
out
fnstsw
das
jnp
cmovle
add
adc
mov
loopne
push
or
xchg
inc
pop
or
jle
jne
adc
cmp
xchg
inc
das
enter
mov
mov
jb
mov
mov
mov
lea
lea
jns
out
pop
xor
add
add
cmp
push
lea
cwtl
dec
bound
leave
leave
inc
inc
xchg
das
cwtl
mov
stos
mov
ror
in
popf
xlat
mov
xor
fsts
jle
in
mov
mov
mov
mov
femms
add
iret
repz
add
xchg
repz
xchg
or
repz
mov
shll
repz
ds
pop
clc
popl
fs
and
pushf
sub
push
out
pop
pcmpgtb
insb
push
cmp
xchg
je
or
jp
decl
xchg
xchg
sbb
pop
sub
pop
jno
and
pop
fimull
daa
iret
insl
mov
add
pushf
jmp
nop
adc
add
cvtpi2ps
xchg
daa
iret
add
aam
mov
dec
sbb
jg
mov
pop
fistl
je
mov
mov
jb
mov
lods
xchg
cmp
rcr
addr16
cmp
jmp
pause
pop
sti
nop
dec
jb
and
xchg
mov
push
hlt
mov
xchg
repnz
push
xchg
pop
add
leave
inc
mov
mov
mov
les
iret
ficoml
xchg
cwtl
or
sahf
pop
mov
ds
xchg
decl
in
push
xchg
pop
xchg
push
add
jne
enter
xchg
mov
out
iret
mov
leave
in
sub
out
js
sar
fucom
leave
leave
leave
call
das
das
das
aas
pop
adc
pop
xchg
sub
das
das
inc
xchg
dec
xchg
iret
clc
mov
push
movd
xchg
xchg
and
xchg
lcall
mov
shr
or
daa
xchg
pop
pop
sbbb
jne
xchg
hlt
cltd
call
lcall
pop
ja
push
inc
imul
mov
xchg
push
aam
into
lock
xchg
pop
sbb
add
push
scas
cwtl
jne
adc
xor
shrb
cltd
fcmovbe
frstor
iret
mov
cmp
push
add
ja
fwait
and
cmp
adc
es
jns
add
ltr
enter
xor
sahf
outsb
repnz
ud2
pop
mov
pusha
push
inc
repnz
rcr
in
lods
ja
jne
iret
iret
dec
cs
out
fdiv
cli
mov
xchg
add
das
cmp
das
fcoml
add
out
xchg
push
mov
dec
test
mov
ja
vpsllq
rolb
stos
mov
pop
incb
cwtl
lcall
scas
cmp
jns
add
push
push
add
in
fwait
push
scas
bound
out
jb
or
in
dec
dec
popf
movsl
add
mov
mov
sbb
cwtl
fstpl
jns
in
cwtl
cmc
cwtl
std
cwtl
add
outsb
fisttps
or
or
or
dec
dec
pop
push
add
dec
add
sbb
sbb
out
sahf
and
pop
daa
dec
aaa
jns
mov
dec
iret
repz
push
and
and
cmp
push
insl
cltd
sub
sahf
xchg
sbb
xchg
nop
cltd
test
dec
mov
addr16
paddq
loopne
in
iret
cmc
out
std
paddsb
stc
xchg
lcall
mov
xor
mov
lcall
leave
inc
repnz
pop
out
sbbl
jg
lcall
fwait
fwait
push
mov
stos
outsb
mov
into
xchg
loope
in
in
sbb
dec
testl
fistps
iret
in
sbb
pop
inc
sbb
pop
das
push
fwait
decl
add
rorb
outsl
ja
repnz
test
das
fwait
lret
xchg
or
or
mov
sbb
lcall
mov
fwait
cs
in
in
ja
mov
repnz
mov
pushf
sub
inc
push
sub
out
push
jns
cmp
inc
sub
push
loopne
sub
inc
daa
mov
in
mov
in
and
ja
aam
pop
ljmp
lahf
push
popf
in
das
das
adc
and
mov
dec
push
add
mov
in
test
jl
jns
xchg
xchg
movsb
lods
mov
mov
or
int3
pop
aam
repnz
repz
cmp
jae
adc
adc
xchg
jl
jp
sahf
scas
adc
movsb
insl
xlat
or
daa
sahf
inc
sahf
out
into
repz
push
add
pusha
inc
xchg
push
daa
das
add
push
out
test
xor
pop
movsl
inc
push
push
push
mov
push
scas
jns
fucomi
cwtl
fbld
cmp
pop
aaa
push
scas
mov
xchg
pop
sahf
cmpsb
push
pop
leave
and
xchg
mov
mov
cmp
mov
pop
jg
mov
mov
add
xchg
aaa
imul
mov
push
out
push
or
push
jno
sbb
in
add
jmp
bnd
repnz
incl
daa
fnsave
cmp
pop
lar
or
repz
or
pop
bound
enter
das
dec
mov
dec
or
fsubl
pop
adc
mov
pop
pushf
nop
pop
cwtl
push
add
fisttpll
pop
test
pop
mov
pop
rcrb
ds
push
outsl
daa
iret
or
mov
in
mov
adc
sbb
iret
repz
add
cmp
jmp
mov
jb
es
mov
xchg
pop
lret
paddd
sub
stos
mov
fmulp
iret
daa
aad
frstor
dec
imul
seta
bsf
test
nop
test
adc
push
mov
add
add
or
inc
stos
inc
insb
stos
jb
xor
repz
jo
lea
xchg
ret
iret
push
movsb
xchg
dec
leave
stos
pushl
stos
daa
adc
or
stos
rcr
adc
daa
daa
out
xchg
xchg
pop
shrl
adc
jns
pop
sub
xor
out
sahf
out
or
push
sahf
out
sahf
or
or
dec
pop
js
push
jg
mov
xchg
mov
xchg
mov
jae
or
in
jno
sub
cmp
xchg
and
shld
movsb
pop
movsb
aaa
jb
enter
movsb
aaa
movsb
aas
push
jns
unpcklps
movsb
inc
mov
adc
mov
sbbl
push
pushf
pushf
pop
xor
orb
movsb
lods
mov
push
cmp
repnz
movsb
push
or
movsb
or
repz
out
movsb
add
adc
movsb
ljmp
cmp
movsl
aaa
shld
movsl
add
loopne
pop
movsl
daa
movsl
mov
mov
daa
jbe
adc
in
dec
mov
add
pop
pop
pcmpgtw
ds
fldt
jne
lahf
cltd
test
dec
pusha
scas
and
cmp
cwtl
movsl
mov
xlat
sub
mov
jb
dec
dec
test
shll
jb
jecxz
jmp
and
sahf
add
sbb
repnz
cmpsb
push
cmpsb
es
cmpsb
xchg
xchg
in
add
scas
mov
push
lsl
jae
jns
andb
pop
movsl
shrd
mov
out
cmp
ja
cmpsb
pop
sti
xchg
setp
cmpsl
movsb
fldt
and
mov
popa
cmpsl
ja
andb
lea
inc
repnz
jo
cmpsl
pop
or
fndisi(8087
xlat
jmp
mov
in
stc
pop
stc
cmpsl
push
add
ret
dec
sbb
and
rclb
xor
cmp
in
sub
jl
add
mov
leave
leave
outsl
ja
jg
xchg
iret
repz
popl
xchg
ror
jmp
lahf
or
test
test
push
sbb
mov
jnp
xchg
cmp
test
sbb
and
cmp
into
in
pop
addr16
outsb
xchg
outsb
pop
leave
jae
xchg
ja
addr16
mov
adc
push
jp
shll
add
jmp
stos
cs
repnz
test
out
leave
pop
fs
push
popf
xchg
out
push
add
in
insb
movl
sub
shlb
cs
mov
rclb
pop
lidtl
add
loopne
call
rorb
pop
into
clc
stos
int
sub
adc
add
and
xchg
inc
mov
add
repnz
mov
stos
push
jb
xchg
pop
push
iret
imul
sub
pop
mov
fucom
adc
jno
das
jns
out
cmp
orl
add
cltd
sysret
mov
and
fbstp
cwtl
dec
dec
jb
stos
adc
neg
xor
das
dec
adc
and
inc
mov
lods
sahf
out
int3
dec
push
push
add
rep
fnstsw
xchg
ja
or
pop
and
mov
jb
mov
iret
fsub
cld
xor
jbe
pop
bswap
or
lods
sbb
clts
repnz
aas
clc
lods
in
repnz
xor
repz
cmp
cmp
inc
dec
adc
cmp
leave
push
pop
push
pusha
push
pshufw
and
dec
or
mov
add
cmp
mov
mov
jb
scas
lods
mov
cmp
out
jae
fldenv
divl
das
xchg
out
jo
scas
inc
jmp
scas
adc
sbb
xlat
sahf
pushf
pop
mov
xchg
inc
dec
scas
in
repnz
pop
das
inc
fidivs
or
outsl
push
test
ja
pop
adc
jge
aam
add
push
mov
push
out
or
or
or
pusha
ja
jo
addr16
lock
scas
mov
jb
jb
int
call
xchg
scas
inc
movups
scas
sbb
xchg
push
ja
mov
push
popf
in
scas
push
daa
iret
mov
ja
pop
cwtl
dec
sahf
out
add
add
rorb
add
mov
mov
ja
rorb
ja
mov
pop
jecxz
pop
lsl
repz
fcmovne
aaa
mov
mov
pop
mov
adc
daa
jo
daa
mov
jae
mov
add
cmpsb
push
xlat
mov
dec
xlat
rcr
enter
pop
loope
push
jmp
fcomi
pop
stc
iret
or
mov
pop
mov
iret
jae
xor
mov
cmp
inc
es
repz
dec
push
push
mov
add
or
pop
mov
push
add
xchg
jae
cmp
xchg
add
cmpsl
scas
mov
mov
push
or
or
iret
pop
loop
repz
fbstp
and
adc
icebp
in
adc
sbb
mov
fildl
repnz
enter
add
out
outsb
jbe
xchg
adc
mov
jle
scas
mov
rcll
fabs
jmp
icebp
psubq
mov
xchg
xchg
xchg
xchg
and
inc
pop
xchg
xchg
xchg
xchg
ja
test
xchg
lret
push
mov
inc
cmp
repz
dec
cs
cmp
sahf
sbb
cmp
cmpsb
sbb
stos
outsb
xchg
mov
and
addr16
cmp
mov
mov
mov
in
mov
das
mov
repnz
jg
mov
mov
pushf
pop
and
add
orb
sahf
mov
lods
mov
ss
mov
or
daa
adc
inc
shl
add
enter
mov
mov
mov
leave
xor
cmp
leave
leave
enter
mov
xchg
leave
leave
xchg
lahf
push
push
cmpsl
out
sahf
out
scas
or
sahf
mov
repz
cmp
xlat
iret
fists
out
jne
iret
pxor
cmp
pop
in
or
mov
adc
iret
insl
and
and
add
xor
dec
pop
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
stc
pop
js
mov
mov
mov
adc
push
sub
sahf
out
pop
xor
aas
and
jns
out
and
pop
sahf
out
sahf
and
and
sahf
out
daa
subb
or
dec
sahf
out
sub
iret
leave
cmpsb
scas
cs
mov
mov
mov
pop
pmulhuw
pop
ja
in
pop
hlt
add
in
dec
aaa
push
das
add
or
adc
ret
iret
das
mov
repnz
mov
pop
repnz
dec
mov
fisubrs
push
enter
xlat
mov
fwait
mov
adc
push
fiaddl
pop
icebp
iret
or
mov
fs
xor
jb
cmp
jno
fbld
in
add
ja
pushf
pushf
cmp
rorb
lret
loope
cmp
repz
add
repz
inc
or
xchg
out
mov
cmp
cmp
mov
pop
dec
pop
adc
daa
iret
jae
adc
adc
iret
jae
xchg
sahf
push
test
cmp
mov
jae
cmp
aad
sbb
daa
negb
add
fisubs
push
pop
and
and
lds
jb
pop
leave
js
filds
cmp
cmpxchg
cmp
lret
adc
mov
ss
insl
iret
repz
pushf
jne
jne
cmp
xchg
dec
adc
movsl
shrd
jmp
xchg
mov
leave
leave
in
push
pop
inc
dec
iret
leave
leave
leave
imul
pushf
cmp
aad
fnsave
ds
in
add
in
jbe
sub
pop
inc
sub
sub
aaa
das
mov
imul
adc
and
mov
mov
in
mov
add
jns
out
iret
push
xlat
pop
fistpll
out
out
out
or
clc
xchg
iret
cmp
push
or
rorb
fldl
mov
rcrb
daa
repnz
das
aaa
push
adc
out
sahf
outsb
lar
dec
inc
popf
aaa
add
sbb
push
mov
rclb
pop
inc
sbb
push
leave
add
gs
js
pusha
leave
push
outsb
repnz
push
jbe
mov
setp
hlt
stos
sar
ror
out
jbe
aad
fstl
mov
paddw
popa
cmp
cmpsb
dec
and
adc
lret
outsl
wrmsr
cmp
in
and
xchg
arpl
leave
leave
in
imul
jnp
xchg
xchg
xchg
mov
movsb
cmpsb
scas
in
shll
into
jns
sahf
out
push
fimuls
lock
decl
ret
dec
repnz
lret
ja
pushf
cmp
in
cmp
inc
add
leave
inc
repnz
outsl
ja
inc
shll
pand
leave
leave
stos
mov
ret
out
popf
lret
xlat
fiaddl
loop
ss
dec
ljmp
xor
ret
xchg
mov
mov
ret
lahf
ret
cmpsl
pusha
dec
sahf
xchg
out
push
cmp
xchg
adc
jb
daa
mov
faddp
jmp
ret
mov
or
xchg
iret
jae
outsb
push
das
sbb
and
sub
cmp
xor
fisubl
pop
dec
les
dec
dec
je
je
fucomi
jbe
fistps
mov
jecxz
jns
or
fildl
out
pop
notl
lods
fldt
call
jb
enter
lds
lds
lds
in
in
cmp
jne
jge
cmpsl
mov
ror
push
ds
xchg
mov
xchg
mov
shlb
insl
stos
mov
jmp
dec
mov
or
in
or
add
lahf
leave
in
mov
addr16
dec
es
iret
add
imul
jns
addl
movsb
filds
pushf
fnstsw
mov
ffree
leave
rep
fucomip
push
add
tzcnt
incb
cs
adc
mov
sub
xor
mov
push
popa
pop
insb
lret
lret
lret
dec
das
ja
add
lret
lret
lret
lret
cwtl
mov
lret
lret
lret
lret
iret
fcmovb
in
lret
lret
lret
lret
lock
sti
movl
cmp
mov
pop
nopl
cmp
cmp
sbb
sbb
cmp
cmp
push
adc
sahf
out
sub
cmp
dec
push
fidivs
pop
xor
cmp
repz
xor
repz
mov
cmp
repz
cmp
iret
repz
cmp
cmp
jns
leave
loop
push
ds
add
repz
fiadds
push
push
sub
sbb
daa
iret
inc
and
out
sahf
out
inc
push
dec
pop
pushf
fmull
dec
data16
jl
leave
repz
pushf
xchg
popf
dec
test
cmp
sqrtps
cmp
aam
fucomip
leave
fistps
cmp
lret
lret
xchg
and
lret
and
cmp
dec
lret
pop
lret
in
xchg
lret
or
lret
sbb
xchg
lret
lods
lret
dec
hlt
repnz
ret
int
fmul
fmulp
xchg
and
lret
stc
push
adc
scas
add
femms
pop
push
sbb
cmp
repz
sbb
sbb
repz
repz
push
sbb
pop
push
addr16
jb
sahf
out
cmp
mov
and
jns
and
mov
repnz
mov
aad
repnz
sub
sub
testb
jns
cmc
add
decl
das
pop
in
in
sahf
xor
xor
cmp
inc
xor
pop
pcmpgtb
cmp
iret
jae
cmp
cmp
iret
repz
nop
nop
cmp
fwait
cmpsb
mov
mov
shrb
fstpl
inc
in
jae
call
int3
test
mov
aaa
int
outsb
xchg
sub
push
add
fcmovne
push
pop
packuswb
iret
outsl
int
fwait
dec
sbb
int
fdivp
dec
dec
xchg
repz
leave
mov
add
add
ret
or
jmp
inc
push
cwtl
in
mov
or
or
psllq
xor
push
add
add
add
clts
xchg
xchg
xchg
xchg
cmp
push
jo
inc
les
lahf
pusha
into
dec
dec
xchg
push
nopl
je
pop
fwait
dec
sahf
ja
mov
mov
or
mov
in
shl
out
idiv
fwait
push
iret
push
iret
sysret
cmp
fldl
and
iret
push
pop
inc
stc
outsb
repnz
push
push
mov
cmp
jae
push
or
cmp
xrelease
xchg
or
stos
pop
mov
lret
pop
sahf
out
loope
in
movntq
dec
testl
iret
repz
and
cs
repz
sbb
dec
mov
push
pop
mov
and
push
and
in
xacquire
js
jns
mov
daa
mov
cmp
cwtl
fcoms
jp
xchg
push
xlat
push
add
dec
rcl
push
add
dec
push
sarl
fcmove
cmp
cmp
mov
add
lret
push
push
jmp
pop
loope
add
or
shll
rorb
jns
jns
sahf
and
sarb
shl
jns
ja
push
adc
cmp
in
gs
jo
jnp
mov
movhps
outsb
repnz
movq
and
push
and
shll
iret
repz
and
leave
and
push
sub
sub
or
jg
mov
aas
dec
inc
add
jae
shlb
sub
fldt
sbb
fisttpl
pop
sahf
ja
cmp
pop
pop
imul
in
add
mov
xchg
pop
ror
repz
or
test
cmp
leave
add
stc
xchg
testl
add
cmp
and
cmp
inc
adc
pop
pop
push
aam
jns
stc
subps
addr16
aam
push
push
out
sahf
adc
xor
sahf
adc
dec
aam
pushf
out
push
add
mov
or
aam
xchg
iret
in
insl
decb
push
aad
or
cmpsl
sub
xor
cmp
add
outsb
repnz
dec
push
fwait
cmp
repz
push
pop
pop
popa
setae
imul
or
repnz
xchg
pop
lahf
adc
iret
adc
iret
cmp
sahf
out
pop
xlat
sbb
out
jecxz,pt
pop
scas
out
aad
aad
sbb
lock
push
popf
ret
pop
xor
add
xchg
dec
pop
out
jns
jne
or
sahf
or
xchg
xchg
xchg
cmp
xchg
xchg
jecxz
stc
incl
sbb
sbb
push
fldt
xlat
das
inc
dec
out
jns
push
subps
push
addr16
jns
and
jge
and
xchg
push
and
out
test
xchg
out
jns
aad
loopne
iret
repz
cs
sahf
ja
mov
sub
mov
and
dec
pop
mov
outsl
fdivr
leave
or
popa
cmp
call
push
xchg
mov
mov
push
aad
in
lea
cmpsl
inc
push
xchg
jbe
xor
push
push
lret
cmp
dec
fs
out
xchg
push
push
pop
inc
or
inc
aas
test
pop
inc
mov
mov
fadds
outsl
xchg
out
insb
aaa
cmp
push
add
repz
add
add
add
repz
pop
or
or
outsb
daa
or
or
mov
daa
adc
adc
cmp
das
and
fucomi
jbe
addr16
das
push
xorps
outsb
imull
push
and
outsb
daa
iret
sbb
push
pop
andb
outsb
mov
jb
cmp
jns
xchg
sub
pop
jo
cmpsl
mov
into
aas
xlat
es
xor
sbb
data16
loopne
or
add
cmp
jno
jmp
iret
repz
sub
sbb
or
call
jns
out
aam
int3
enter
sahf
out
mov
lods
daa
iret
repz
cwtl
nop
mov
push
js
fs
push
out
sahf
out
inc
cmp
sbb
sub
adc
cmp
push
and
lcall
mov
adc
in
test
and
sbb
std
inc
movsb
cmp
push
jne
addb
inc
mov
adc
cmp
ss
into
sahf
jl
movsb
add
cmpsb
fisttps
mov
inc
sbbl
mov
fisubl
inc
mov
pop
inc
mov
iret
mov
jmp
call
adc
std
xchg
jl
push
ficompl
mov
xor
fcomp
loopne
jle
cmp
mulb
test
jns
filds
mov
stos
pop
jmp
push
in
or
and
add
jle
inc
pop
mov
aaa
push
incl
or
mov
popf
insl
add
das
aas
mov
xchg
test
aas
pop
add
out
repz
ja
push
or
repz
adc
adc
cmp
inc
sbb
jns
cmpsl
stc
in
sbb
out
dec
push
sub
int
cmp
enter
and
dec
imul
jns
shlb
push
cmp
jecxz
daa
sar
push
mov
jbe
jl
cmpsb
aas
rorb
push
add
jnp
mov
pop
add
inc
pop
dec
pop
or
js
add
sahf
test
stos
add
cmpsb
cwtl
push
jae
testb
jo
icebp
addr16
push
push
mov
dec
pop
mov
lods
jmp
xchg
stos
xor
aas
pop
daa
idivl
and
fucomip
stos
insl
stos
jge
cmp
pop
jg
out
sbb
loopne,pn
inc
lmsw
testl
xchg
call
es
mov
icebp
cmp
sbb
add
icebp
clc
add
jnp
xlat
aas
lock
and
push
and
mov
icebp
cld
lock
iret
cmp
fcomps
pop
adc
fcompl
das
push
or
or
out
iret
jnp
pop
rcrb
in
cmp
repz
enter
sbb
repz
test
movsb
iret
repz
and
xchg
test
cmp
mov
addr16
mov
sbb
inc
out
xor
mov
sbb
es
inc
jg
cmp
xorl
jg
repz
jnp
push
pop
js
mov
imul
add
dec
repz
fisubrl
cmp
xchg
out
sbb
mov
bnd
das
push
dec
push
inc
ljmp
pop
pop
das
dec
inc
pop
enter
enter
inc
pushf
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
call
repz
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
inc
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
mov
and
and
dec
add
sti
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
pushl
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
push
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
call
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
lcall
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
call
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
and
pop
and
repnz
pop
inc
inc
je
inc
inc
push
dec
sub
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
int
decl
movsl
cli
test
xor
leave
mov
insb
fdivs
jne
out
cli
incl
or
shrl
push
ficoms
push
xlat
enter
mov
pushl
cltd
xchg
mov
mov
or
or
and
or
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pop
mov
push
movsl
in
lahf
xor
mov
js
stc
out
pop
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
jmp
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
cmc
decl
mov
aam
movsl
fisttps
fadd
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
decl
leave
jl
fnstsw
add
daa
adc
or
and
test
or
call
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lcall
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
ljmp
pop
jge
xchg
shlb
add
inc
push
imul
xorb
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
cli
mov
mov
call
xchg
shll
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fisttps
fbld
out
mov
jns
imul
jmp
shrb
rclb
or
add
mov
das
es
push
mov
or
add
mov
cmpsl
call
ret
sar
lcall
mov
fldcw
ret
es
pushf
mov
insl
int
incl
test
ss
jmp
addr16
jb
push
add
mov
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
call
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
lcall
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
decl
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
sar
push
xchg
cli
dec
inc
imul
scas
fcompl
fldenv
fucomip
sub
mov
aaa
pusha
mov
shll
mov
inc
jmp
mov
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
aam
jmp
add
push
sub
mov
or
sbb
add
sub
inc
pop
jo
cmp
push
mov
pop
pusha
pop
push
fs
sbb
push
push
sahf
out
popa
cmpsb
cmp
push
xlat
fcomp
jns
out
fcmovu
ficomps
jecxz
in
jns
out
jmp
out
sahf
out
hlt
cmc
div
out
sahf
clc
stc
cli
sti
cld
sbb
sub
pop
adc
inc
pop
push
dec
and
or
je
push
out
leave
les
push
popf
push
push
cmp
les
inc
mov
dec
and
bound
mov
dec
popa
inc
mov
sti
je
push
fistpll
push
and
fsubs
cmp
inc
jno
jg
sub
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
outsl
insl
sti
pop
xor
xor
or
xor
bound
push
push
je
push
inc
jbe
jl
sti
insl
pop
insb
imul
ss
imul
dec
inc
cmc
test
push
add
push
inc
cmc
ss
pop
fidivrl
ss
xchg
test
push
je
movl
adc
insb
daa
sbb
mov
jle
gs
insb
xor
sub
add
jb
push
addl
add
xchg
insb
popa
jns
lea
cs
dec
insb
or
or
aaa
je
lock
inc
insb
aaa
aas
inc
push
inc
add
push
aas
add
adc
jae
repz
daa
int
inc
mov
aas
sbb
mov
sahf
mov
es
mov
sbb
inc
pop
mov
mov
jg
inc
inc
inc
add
ds
adc
sarb
push
jae
mov
xor
rcll
cmp
inc
mov
add
insl
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
clc
or
out
xchg
into
pop
jo
inc
mov
rcrl
jg
adc
in
aam
cltd
dec
cld
push
push
shlb
add
or
or
mov
xor
leave
xor
fwait
mov
mov
rcrl
xlat
mov
add
mov
and
jb
push
nop
dec
add
popa
dec
mov
cmpsl
lahf
push
sbb
test
dec
outsl
in
shll
jno
stos
mov
push
dec
xor
nop
test
mov
out
add
mov
arpl
sbb
mov
mov
addr16
push
loopne
dec
xchg
insb
jns
or
and
das
inc
jb
push
cmpsl
mov
je
inc
outsl
roll
adc
mov
aas
inc
mov
inc
push
bound
ja
mov
popf
push
inc
jbe
xor
dec
pop
push
jg
push
dec
xor
mov
fistpl
int3
lcall
add
lock
int
repz
or
push
add
xchg
adc
ss
cmpsb
inc
or
xor
dec
push
mov
inc
dec
sahf
cli
or
inc
adc
daa
push
rorl
aas
sbb
sbb
push
mov
push
inc
dec
pop
cmp
push
jns
arpl
je
cltd
xor
pop
pusha
in
add
aaa
dec
adc
repnz
pop
inc
xorb
adc
push
into
xlat
out
push
jno
push
daa
sub
and
inc
inc
ss
or
cmova
aad
mov
pop
dec
add
fdivr
loopne
in
ds
adc
dec
add
add
fstpt
dec
add
add
in
mov
add
pop
push
or
or
or
or
or
adc
mov
mov
adc
push
adc
push
add
pop
dec
mov
adc
adc
adc
add
data16
or
vunpcklps
rolb
std
inc
hlt
pop
add
add
add
adc
out
add
push
add
movsl
outsb
jno
mov
rclb
jb
imul
lcall
ds
xor
adc
pop
and
xor
inc
fwait
add
pushl
lock
bound
js
lock
mov
mov
shrb
addl
pusha
xorl
adc
jne
pusha
add
addr16
add
sbb
pusha
xor
into
add
adc
shlb
pop
scas
cmp
adc
jle
int
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
mov
xorb
scas
fiaddl
or
xchg
pusha
and
mov
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
fs
std
ljmp
lods
loopne
ja
fdivrl
add
mov
mov
loopne
mov
fsts
push
adc
dec
mov
cmp
sub
add
ljmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
push
roll
add
xchg
or
call
les
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
call
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
aas
pop
jmp
clc
cmpl
call
repnz
addr16
out
or
push
push
xchg
add
repnz
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
mov
lcall
fs
scas
mov
pop
pop
mov
popl
movb
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
jmp
push
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jg
idiv
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
call
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
mov
std
jmp
leave
mov
jp
push
out
or
push
sahf
pop
clc
push
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
lock
jmp
sbb
add
pop
clc
fbstp
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
jbe
sti
loope
mov
sar
andl
aas
icebp
testb
mov
mov
fadds
in
sub
jno
push
lcall
jg
jg
scas
cld
or
push
inc
sbb
paddb
jg
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
jg
lcall
lock
jae
cmp
test
loopne
cli
adc
aaa
xchg
fwait
in
imul
in
add
inc
adc
loope
fisttpll
out
aas
insl
ror
sar
cli
push
push
push
idivl
cmp
sub
pushl
mov
jg
je,pn
sub
jg
imul
mov
mov
xchg
and
incl
jne
gs
jns
enter
test
sar
call
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
inc
xor
jmp
push
mov
pop
hlt
sub
movsb
add
jmp
jg
lea
jg
gs
std
xorb
jg
aad
mov
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
push
ljmp
jno
or
sarb
std
pop
les
cli
mov
mov
inc
jmp
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
call
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
decl
xchg
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
pop
lock
call
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
in
andb
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
call
test
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
push
adc
ftst
jbe
xchg
and
jae
inc
test
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
call
adc
pop
cld
addl
adc
and
insl
rcll
fmull
enter
jecxz
scas
decl
dec
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
testl
mov
jg
mov
aad
test
inc
mov
mov
iret
push
inc
ljmp
jbe
push
sbb
stos
icebp
pop
incb
jno
idivl
push
inc
jecxz
sbb
sarl
adc
loopne
jbe
arpl
sar
adc
lahf
xor
fildll
cmp
dec
push
in
aas
mov
iret
rorl
push
and
aas
rolb
clc
xchg
or
aas
sub
jne
push
and
mov
adc
div
jg
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
outsl
mov
lock
jno
pop
nop
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
cld
jg
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
sbb
stos
pop
add
dec
mov
sub
jge
cmp
pop
ja
lahf
les
sbb
sbb
cld
addl
cld
incl
sbb
mov
lahf
outsl
int3
push
sbb
xorl
mov
jle
xchg
popa
add
inc
sti
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
sbb
mov
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
aas
xor
lcall
icebp
push
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
jg
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jg
jecxz
adc
inc
lds
push
pop
adc
imul
pop
leave
clc
decl
sbb
inc
pop
xor
rorb
and
push
test
xchg
ljmp
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
push
mov
aas
repz
outsl
lock
xchg
or
stc
out
mov
clc
push
std
mov
rcl
icebp
or
mov
mov
pmullw
push
mov
fsubrp
fildll
dec
sahf
enter
inc
adc
inc
loopne
test
out
mov
inc
out
pop
or
or
dec
mov
inc
in
ss
lods
movsb
incl
pslld
pushf
imul
cmc
mov
jl
call
fistps
jno
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
and
aas
mov
mov
out
cmp
or
addr16
sbb
cld
daa
jp
cld
jbe
adc
cltd
or
mov
ret
nop
xchg
clc
push
std
cmp
das
incb
lock
pop
pop
div
cld
idivl
cmc
add
scas
stc
lahf
loope
add
lahf
jmp
std
scas
bound
jge
fbstp
out
xchg
add
leave
xchg
mov
mov
loope
mov
cmpsl
popf
push
mov
cmp
ja
push
daa
outsl
das
fwait
dec
das
push
add
cmpsb
cmp
call
ret
data16
decb
adc
mov
jo
jbe
and
call
negb
cltd
add
jb
mov
inc
add
dec
lds
std
fcomip
xchg
dec
dec
inc
sbb
xchg
pusha
dec
das
js
mov
aas
icebp
ret
ror
sbb
sbb
inc
adc
push
pushf
adc
aas
pop
clc
loope
loope
push
or
jp
dec
add
xlat
in
cwtl
pop
inc
jmp
xor
mov
xchg
lcall
decb
js
pop
gs
into
sarl
pop
out
jg
jno
xor
loop
ret
cmp
arpl
out
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
cmp
inc
xchg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
ljmp
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
or
push
add
or
jns
add
sti
push
sti
pop
inc
fs
test
mov
push
rorl
stos
cmp
int3
pop
iret
and
incl
add
sbb
adc
lds
jb
test
mov
dec
cmc
sub
incl
and
inc
js
pop
fsubrp
ljmp
stc
inc
insb
lds
stos
or
incl
push
aam
in
fsubrl
cmp
addr16
das
sarl
leave
mov
ljmp
and
inc
jg
out
mov
imul
insl
test
push
call
xor
jmp
inc
add
stos
add
outsb
mov
adc
data16
in
mov
test
sbb
call
and
addb
shl
cmp
popa
andb
decl
pusha
jbe
push
jecxz
rorb
or
fcompl
xor
iret
xor
sub
popa
pusha
jae
mov
jmp
inc
jno
outsl
pop
out
call
dec
and
sub
nop
jl
cmp
clc
jne
bound
stos
xchg
test
nop
js
adc
cmp
add
imul
ja
pop
mov
loopne
ljmp
push
rorb
in
dec
movsl
cltd
xlat
repnz
inc
jb
ret
hlt
ja
mov
pop
cwtl
cli
pop
int
cwtl
pop
insl
js
cmp
rcll
cmp
les
pushl
lds
shlb
or
scas
inc
and
lods
fsub
or
and
dec
pop
inc
pusha
lret
aad
addl
xor
mov
add
inc
lahf
ja
arpl
adc
nop
rcrb
pop
dec
sub
jmp
fisttps
subb
aaa
popa
out
adc
inc
mov
pop
ljmp
fadds
jp
ss
ds
xor
pop
aam
call
fucomip
out
cmp
loop
fldenv
fbld
mov
cwtl
ja
cmpsb
mov
sub
pushl
rclb
movsl
cmc
shll
mov
pop
fs
mov
inc
lods
mov
incl
xor
add
dec
jmp
rcr
por
negl
jge
jb
nop
xchg
out
call
or
mov
outsb
sub
mov
test
and
push
mov
out
das
sbb
popa
fildl
sbb
loope,pt
mov
fisttpl
add
sahf
inc
test
jle
pusha
xor
call
pusha
and
push
in
xchg
xor
or
fwait
jne
xchg
or
ljmp
aas
jp
push
push
xchg
mov
push
adc
sub
sub
call
sub
pop
cli
test
adc
sti
fs
clc
cmp
rolb
shll
inc
push
loope
cmpsb
jg
setg
jb
cli
test
fucomp
and
and
push
ljmp
push
mov
outsl
xrelease
push
icebp
mov
pushf
fisubl
js
and
test
out
clc
jmp
inc
cmpsb
icebp
frstor
popf
movl
xlat
sbb
or
sahf
stc
mov
push
stos
cmpsb
imul
lds
mov
imul
jno
ss
ret
aad
sahf
scas
pop
shr
jg
addr16
js
in
jmp
inc
mov
call
movsl
repz
int3
fnstsw
ss
aaa
xor
movsl
sub
inc
mov
fs
jmp
jle
jg
lea
mov
test
addb
adc
fwait
mov
call
mov
jns
mov
mov
out
lcall
std
ljmp
xchg
jae
incl
xchg
jg
cmpsl
sub
loope
pop
cwtl
je
lret
push
int
push
lret
inc
ds
fs
ret
stc
decl
add
pop
sbb
out
out
ret
shll
cmp
xor
inc
fstpt
cmp
cld
daa
jl
jmp
or
xchg
lock
xchg
rclb
jle
ljmp
aam
adc
push
cmc
addr16
in
xor
jle
fidivrs
lcall
jno
in
dec
negl
adc
fsubr
pop
sbb
hlt
pop
in
inc
repnz
ret
inc
mov
cmp
aaa
cld
jmp
test
imul
and
pushf
or
inc
pop
adc
adc
stos
push
mov
loop
jl
lret
out
or
xor
int3
xchg
and
and
bound
sub
add
div
stos
sub
and
jns
push
or
sbb
insb
cmp
aad
fmul
ret
ret
es
inc
or
pop
inc
inc
ja
sub
and
adc
sar
adc
mov
pop
push
sbb
or
push
jo
add
fcoms
int3
aaa
cmp
int3
lods
cmp
ljmp
pop
lret
arpl
stc
mov
push
test
mov
outsl
add
roll
fs
out
sub
and
cmp
decl
mov
mov
mov
push
ret
stc
push
xchg
push
pop
fisubl
outsl
call
in
repz
scas
lret
dec
inc
add
xchg
mov
inc
inc
push
aaa
mov
cmpb
and
fwait
insl
decl
mov
add
lret
pushl
xchg
jo
test
pop
jge
xchg
sub
xchg
add
pop
jne
and
or
out
addb
push
ljmp
mov
xor
lret
adc
repz
imul
lods
xchg
out
bound
leave
or
shlb
cmp
scas
dec
jmp
cmc
data16
mov
jmp
jbe
and
mov
lods
xchg
stos
mov
mov
sub
stos
out
push
xor
xchg
incl
mov
js
mov
fstl
pop
lcall
add
push
iret
je
jns
jmp
and
sti
and
stos
jecxz
mov
orl
pop
push
cltd
inc
inc
shll
inc
out
imul
jge
jmp
shll
sub
jo
mov
jb
adc
stos
bound
sbb
push
inc
pop
out
les
decl
incb
dec
mov
or
clc
shl
lret
pushf
jnp
aam
xor
scas
clc
mov
cltd
jecxz
mov
cmp
dec
incb
in
sbb
mov
lcall
inc
and
mov
jae
fcomip
pop
adc
adc
cwtl
loop
testb
and
cmp
add
mov
jg
pushl
cmp
xchg
mov
je
sbb
das
or
cld
pusha
ljmp
pop
lcall
sub
test
insl
and
mov
push
jno
xor
and
lcall
cltd
rorl
iret
dec
mov
xchg
jle
in
push
outsl
push
mov
jg
decl
or
pop
cmp
cmp
nop
das
add
xor
pushl
test
das
hlt
shl
nop
and
loop
push
push
outsb
fldl
push
push
andb
ljmp
repnz
repz
adc
push
cmpsl
jp
lock
dec
or
clc
xchg
in
js
icebp
pushl
in
xor
adc
inc
xchg
andb
cmp
cmpsb
test
cld
sub
push
pop
jnp
ljmp
fdivrs
or
jmp
mov
dec
das
pop
adc
es
dec
pop
test
decl
jmp
push
subl
adc
lret
fstpt
jmp
push
jg
aaa
cmp
mov
into
imul
lods
call
lock
mov
cld
fs
ret
call
push
xlat
add
cmp
push
aas
jae
add
ret
lcall
mov
shlb
insl
or
xchg
fadd
je
mov
ljmp
adc
push
adc
mov
pop
and
es
cmpsb
out
adc
mov
cld
mov
ja
jne
nop
repz
lds
aas
and
sti
lahf
fisubrl
fbld
popa
ljmp
shlb
and
in
cmpsb
cmp
cld
dec
incb
mov
jg
push
push
movsl
adc
cli
aas
mov
jg
cs
lods
add
sti
adc
mov
jo
rcll
mov
and
lods
int3
test
orl
decb
aaa
jmp
stos
test
loope
dec
rol
push
enter
xor
popf
or
sub
loope
pushl
loopne
mov
rcll
cmp
xchg
scas
push
les
mov
in
int
cwtl
add
pushl
mov
xchg
adc
jge
lods
push
or
out
and
mov
js
jecxz
inc
lds
sub
out
jbe
add
inc
into
out
jg
inc
rolb
into
inc
xchg
dec
adc
loop
jp
mov
repnz
jge
ds
adc
call
mov
dec
or
jo
inc
xchg
out
sar
out
dec
gs
sti
push
stos
inc
mov
xchg
pushl
js
dec
cmpsb
sti
mov
pushl
push
mov
ret
add
sbb
test
jbe
inc
rclb
jmp
push
fisubrl
jno
dec
push
jg
cmpsb
mov
jno
in
pop
mov
lcall
imul
cwtl
enter
or
cltd
es
mov
jae
lcall
jl
mov
ljmp
gs
or
pop
adc
mov
jmp
outsl
loop
mov
jp
cmpsl
sub
pop
aam
add
xchg
daa
test
sahf
xchg
mov
lcall
mov
repz
dec
sub
popf
jmp
jb,pt
incl
pop
mov
lods
mov
jg
mov
push
add
fistpl
fs
scas
pop
mov
adc
adc
mov
lcall
sbb
sti
cmp
lcall
and
leave
in
movsl
sbb
push
movsl
add
dec
xchg
push
lcall
mov
ds
arpl
mov
dec
stc
cmp
std
pushl
push
enter
stos
ljmp
lock
add
jg
fwait
inc
andb
xlat
sbb
arpl
mov
mov
gs
call
mov
pop
loope
popa
mov
pop
mov
sub
and
mov
mov
call
jg
sub
xor
xor
fsubl
clc
ficoml
call
mov
or
ljmp
scas
jnp
ucomiss
dec
cmp
pop
sar
cmpsb
loop
push
inc
out
mov
pop
dec
push
add
cmp
pop
ret
fisttpll
mov
test
decl
push
addps
cmp
jmp
daa
xor
mov
fnstenv
aad
or
scas
clc
incl
xor
iret
mov
fisubs
nop
and
icebp
sbb
das
sar
test
insb
andb
inc
mov
cmpsb
dec
into
xchg
jno
pop
into
jmp
jno
iret
sbb
out
cmp
cwtl
popa
adc
call
inc
sub
ja
mov
inc
daa
decl
nop
aam
into
sub
mov
or
mov
out
sbb
cld
cld
lret
inc
adc
add
push
ja
loop
leave
jmp
scas
sub
fcomip
lcall
sub
pop
cmp
sbb
jle
jg
es
sbb
out
xor
pop
xor
into
fdivrs
push
push
jmp
std
add
mov
in
lsl
ljmp
cmp
dec
dec
cs
xor
iret
cmp
inc
sahf
cmp
inc
mov
inc
jo
iret
dec
enter
test
daa
ds
push
sub
nop
mov
ljmp
xor
jb
insl
je
pop
jno
mov
mov
jp
xor
xor
adc
sbb
inc
cmp
push
cmp
cwtl
push
mov
pop
mov
inc
dec
fst
mov
inc
xor
inc
es
push
out
adc
call
rorb
push
push
mov
inc
in
xchg
or
popf
inc
mov
inc
stos
out
popf
inc
incl
jecxz
pop
jmp
insl
test
nop
outsb
out
xchg
subl
add
cli
incl
ret
loope
arpl
das
mov
scas
fsubl
sbb
and
es
sbb
call
lret
dec
shrb
pop
and
repnz
inc
lock
push
mov
stos
ret
ja
mov
lahf
or
std
jmp
popl
mov
ret
cmc
ljmp
fsts
es
dec
punpcklwd
shlb
ds
sbb
lcall
cmp
sar
push
insb
out
mov
cmp
jmp
and
subl
jo
xlat
xchg
mov
mov
ljmp
mov
push
sbb
pop
aas
adc
adc
decl
mov
mov
insb
sbb
jo
adcl
in
inc
test
xchg
sub
ljmp
jmp
popf
adc
inc
lahf
iret
pop
std
mov
ret
mov
jno
push
mov
incl
and
push
insl
mov
push
jge
outsb
jle
fucomip
sbb
mov
repnz
fbld
ljmp
insl
nop
orb
xchg
mov
arpl
sub
stos
cmp
es
or
jbe
call
cld
mov
int3
cmpsb
daa
aam
fcoms
jae
fnop
loope
mov
pushf
xchg
in
incw
cli
push
sbb
mov
inc
hlt
out
add
mov
jmp
mov
cmp
scas
testb
bnd
enter
jle
and
adc
cmpsl
push
mov
dec
pop
sub
xchg
imul
dec
fistps
fcomip
jne
scas
ljmp
lahf
xlat
jno
mov
mov
xor
mov
aad
ljmp
xchg
lods
ret
xchg
dec
dec
lcall
cmp
mov
jl
aad
insb
out
clc
jmp
and
sbb
lcall
aaa
mov
jp
stos
rclb
stos
ljmp
mov
dec
cmp
inc
clc
xchg
popf
dec
dec
and
inc
pop
pop
push
test
lods
mov
push
into
pop
jns
jno
pop
mov
sbb
incl
mov
pop
sbb
pop
out
push
fildl
lret
xchg
inc
push
jnp
cmp
mov
in
lods
idivb
jl
sub
imul
maxps
call
xor
scas
mov
xor
into
pop
mov
into
mov
rorl
imul
sbb
arpl
pushl
push
rclb
fisubrl
leave
mov
incl
sub
insl
jmp
cmpsb
outsb
push
decb
clc
jb
mov
and
and
jg
nop
dec
scas
xchg
mov
adcl
loop
jp
lcall
jp
movsb
mov
fildll
jge
arpl
pusha
inc
movsb
push
or
pop
add
ljmp
cmp
test
push
fstp
int3
rolb
call
mov
cld
jmp
out
ljmp
cmp
jae
pushf
rcrl
into
sbb
in
mov
loopne
jp
roll
mov
mov
add
cs
push
jae
pop
ss
jle
adc
insl
pop
mov
ret
sub
dec
cmc
inc
dec
aas
mov
imul
adc
lcall
xor
imul
sbb
decl
push
xchg
mov
add
xor
lock
dec
mov
jecxz
xor
pop
arpl
adc
or
loope
lods
mov
pop
insl
fs
inc
push
lret
das
cld
jmp
insl
push
notl
ljmp
aad
std
fisubrs
in
dec
cmp
pushl
fdivl
popf
inc
je
std
jnp
xor
inc
test
add
incl
ss
adc
daa
ljmp
inc
mov
jae
or
push
rorb
ja
xchg
adc
repz
jl
sub
pop
bound
or
call
push
sub
rorb
jae
pop
pop
ret
jmp
lcall
push
push
pop
push
mov
repnz
sub
xlat
mov
fldenv
das
adc
pushl
adc
outsl
add
stc
jle
mov
sub
out
int3
pop
hlt
and
fmull
pop
pop
fnstsw
ret
int
push
push
cmpb
add
ja
rolb
sahf
mov
push
cs
sbb
or
lcall
shlb
stos
pusha
shlb
test
stc
jbe
mov
sti
inc
shll
popa
and
pop
lods
fcos
das
mov
jb
push
lea
bts
je
call
cld
call
or
clc
icebp
and
xchg
push
aam
mov
outsb
popa
inc
pop
das
xchg
loopne
decl
daa
addr16
pop
cwtl
mov
mov
aam
into
arpl
cmp
aad
lds
scas
dec
call
nop
jbe
lods
push
fwait
xchg
jmp
xchg
stc
and
and
decl
or
push
gs
lcall
frstor
stc
fs
pop
das
ret
sti
dec
adc
filds
cs
and
outsb
inc
or
cmp
incl
jne
jbe
mov
inc
ljmp
mov
mov
test
decl
in
arpl
inc
xor
cmp
movsl
xor
fadds
pop
iretw
popa
ss
sub
sbb
jmp
mov
xchg
int3
cmp
adc
lret
lret
dec
mov
mov
jmp
mov
cmpsb
aam
pop
stc
inc
jns
addr16
fsubrp
fdivrl
and
bound
jg
iret
fdivl
enter
or
pop
sub
test
pop
call
sarb
mov
jmp
clc
mov
cltd
xor
scas
cld
add
jmp
movsl
test
xchg
jle
aad
mull
jns
mov
adc
lcall
cmp
das
pop
mov
mov
orb
aas
ds
jno
jmp
out
sub
decl
loop
sbb
push
sti
sbb
jl
mov
ss
call
push
and
add
mov
mov
js
xor
xchg
mov
jle
pop
jl
mov
lret
ja
les
divb
std
aam
cld
pushf
pop
das
mov
lcall
adc
sahf
jne
mov
dec
jbe
or
into
dec
lret
push
jp
and
adc
cmpsb
call
inc
push
and
mov
insl
sub
lcall
int3
idiv
jg
cltd
push
xchg
pop
jne
pop
and
jp
lods
xor
pop
cmp
stos
push
mov
cmp
clc
pop
or
mov
push
fsub
cmp
xchg
decl
inc
sahf
inc
inc
insl
inc
pop
iret
mov
xchg
jl
dec
adc
daa
mov
cmpsb
decl
push
es
xor
push
mov
and
scas
mov
sub
inc
clc
fisttpl
mov
ds
sti
push
enter
outsb
lret
xor
jg
orl
arpl
mov
dec
xchg
or
sub
mov
push
jb
popa
mov
sahf
jl
out
cltd
popf
cmc
inc
fwait
popa
movsl
jg
mov
mov
loop
in
cs
test
or
call
add
bound
adc
int
jg
int3
jne
sub
jle
jae
fisttps
ljmp
fld
ds
lcall
andb
rorb
pop
addb
xchg
fbld
mov
test
scas
sarb
push
rcrl
push
and
ds
call
fwait
outsb
xchg
and
cmp
in
push
xchg
sahf
inc
pop
test
sbb
decl
sub
out
imul
xor
movsb
cmp
cmp
ljmp
int3
das
and
mov
or
int3
or
add
xchg
inc
sub
call
xor
js
divps
aam
sarl
sub
inc
in
mov
jmp
xchg
out
sub
pop
xor
push
addr16
pop
repnz
lahf
mov
stos
call
inc
mov
sub
mov
xchg
mov
jnp
pushl
data16
lcall
or
mov
dec
adc
and
adc
in
lret
sar
mov
mov
jno
insb
sti
aad
xchg
insl
imul
repz
clc
xor
incl
pop
adc
in
push
cmc
aad
scas
mov
pop
shlb
mov
fs
lcall
clc
lods
or
jnp
cmp
dec
inc
xchg
cmp
sarb
sub
inc
hlt
call
push
cli
and
in
test
insl
out
dec
jno
sahf
movb
push
pop
add
aad
loope
sahf
sub
lods
xchg
jnp
inc
sbb
inc
jns
mov
jo
fcompl
adc
sarb
inc
lahf
jns
mov
test
sub
gs
fadds
jmp
jg
adc
jecxz
out
clc
out
fs
in
mov
frstor
xchg
cmp
outsl
decl
pop
jl
xchg
sub
insl
mov
mov
jle
cmp
or
lret
std
xorb
jp
xchg
cmpsl
std
cmc
mov
fucomip
or
jo
test
stc
je
fstp
and
bound
cmpsl
jo
sbbb
ljmp
jge
test
sub
jmp
mov
xor
sti
shl
cmp
decl
sub
mov
rolb
or
xchg
jle
dec
fldlg2
push
xchg
pop
push
fimuls
mov
push
xchg
mov
fcmove
inc
call
and
fnsave
sub
ffreep
int3
jecxz
out
dec
test
repnz
sub
pop
in
repnz
adc
loop
xchg
ja
das
pop
add
mov
jg
ljmp
mov
adc
sub
xchg
xchg
in
jno
incl
pop
sbb
daa
mov
imul
push
lahf
jbe
mov
mov
adc
dec
gs
lods
lods
add
lahf
fdiv
adc
jmp
lcall
cs
and
adc
testl
jns
movsl
in
xchg
out
and
sbb
pushl
fcmovnb
jp
cmpsb
js
push
rcll
mov
adc
mov
test
call
cltd
fwait
lock
fcmovu
into
mov
pop
add
mov
mov
xchg
imul
xlat
ljmp
inc
cwtl
testl
cmp
hlt
nop
pop
xor
mov
xlat
jg
popa
std
imul
int3
movsl
or
jl
mov
incl
divb
dec
xor
ret
popa
mov
mov
test
and
idivb
jnp
mov
cmp
xchg
jmp
pushf
pop
mov
mov
lods
in
shlb
mov
push
jg
xor
repnz
mov
pop
inc
in
fdivrs
ds
cs
jb
xor
jnp
fdivrl
out
and
lret
add
decl
mov
add
jb
inc
insl
xchg
mov
sub
xchg
lret
sbb
sbb
sar
jmp
sbb
ljmp
pop
adc
lock
push
daa
fadds
das
stc
fisubrl
push
cmpsl
jp
je
ljmp
movsb
data16
xor
ret
inc
inc
aad
pusha
and
jg
inc
sarb
mov
loope
mov
std
pushl
push
xchg
lock
xchg
dec
jo
cmc
jne
mov
subl
insl
push
fdivl
lea
sub
xchg
jnp
fisubrl
lea
test
xor
imul
lcall
xchg
cmp
cmp
push
adc
push
add
pop
sbb
inc
ja
call
xor
les
mov
jbe
and
incl
loop
mov
or
lcall
sub
lods
mov
popf
mov
aas
mov
lret
addb
xabort
and
cmp
mov
pop
ret
sub
mov
out
jmp
pushf
xor
push
mov
dec
inc
pop
in
pop
std
ljmp
inc
dec
dec
inc
or
jle
gs
or
test
jbe
jmp
sbb
ljmp
aaa
dec
pop
es
mov
comiss
rcll
cmpsl
cmp
sub
cwtl
mov
jmp
clc
inc
pop
jmp
call
lret
fs
mov
in
insb
pushf
ret
inc
leave
xchg
incl
decl
icebp
push
test
pusha
mov
into
addb
daa
push
lcall
push
pushf
int3
dec
cmpsb
mov
in
clc
aaa
xlat
cmpsl
adc
cmc
lcall
ljmp
out
leave
int
sbb
test
mov
call
xor
mov
and
dec
xor
dec
mov
lock
js
xor
or
ljmp
mov
adc
aad
adc
in
rol
add
mov
mov
sub
stos
jl
push
cmp
pop
pop
pop
inc
sbbl
iret
xlat
rclb
subl
xchg
leave
or
xchg
pop
test
inc
dec
jbe
inc
arpl
inc
mov
jae
sti
jecxz
outsb
mov
inc
cmp
dec
loop
dec
fwait
call
adc
lcall
mov
pop
pop
or
push
popa
cmp
add
mov
push
inc
sbb
aad
mov
or
sub
mov
sbb
call
jge
mov
adcl
mov
inc
lar
into
adc
xor
pushl
xchg
js
mov
cmp
jne
rcrl
adc
xchg
call
mov
jg
insl
mov
out
cmp
fisubs
xor
sub
add
mov
shrl
xlat
js
adc
mov
fcoml
adc
inc
lea
cld
outsl
inc
fists
rclb
outsb
frstor
in
cmp
out
testl
stos
je
push
xor
xor
decl
enter
test
lahf
jo
push
fisttpll
aas
mov
pop
negb
sar
mov
cs
repnz
shl
push
push
fnsave
je
xlat
repz
incl
cwtl
clc
push
in
mov
adc
add
fucomp
add
mov
ljmp
jo
sub
add
cmpsb
es
pop
push
pop
sub
cmp
mov
ja
incl
cltd
sbb
pop
shrl
xchg
repnz
sbb
in
push
sbbb
mov
fisubrl
mov
ljmp
lret
cmp
fistps
out
mov
enter
cwtl
cmc
cli
lea
fs
mov
and
test
cmp
sbb
cmc
enter
pusha
dec
cmp
cmp
mov
fistl
dec
mov
shll
lret
rol
add
jo
cltd
mov
mov
ret
ljmp
and
xor
mov
shr
in
jg
push
push
movsb
test
sbb
push
adc
stc
mov
iret
push
jmp
adc
jmp
adc
hlt
sub
cltd
jb
out
and
mov
dec
shlb
hlt
outsl
mov
jnp
data16
sub
dec
xchg
or
std
mov
inc
cmc
mov
gs
test
incb
fwait
repz
mov
or
sarb
out
subb
incl
mov
testb
xchg
les
rcrl
das
push
lea
mov
loope
and
in
jb
jmp
daa
cmpsl
xchg
add
sahf
sub
lret
inc
push
arpl
aam
xor
int3
cmp
sarb
cmp
outsb
mov
sbb
loop
inc
or
ret
xchg
xor
push
mov
jp
test
adc
les
pushf
dec
xchg
jnp
mov
imul
inc
mov
push
and
or
push
sub
jge
cld
je
dec
push
adc
out
insb
js
add
fs
inc
push
and
test
ds
cld
jmp
xchg
scas
test
push
xor
jbe
mov
call
xchg
rcrl
gs
sti
and
jmp
jl
nop
imul
dec
jo
mov
out
and
lcall
or
daa
sub
pop
xor
xor
pusha
imul
pushl
rcrl
inc
push
es
pop
js
das
mov
xor
mov
add
cltd
adc
call
lods
mov
shrl
scas
loope
call
push
in
mov
push
gs
fs
pushf
jle
xorl
add
and
mov
movsl
mov
decl
pop
push
jg
in
aaa
iret
lret
inc
mov
jno
push
das
test
xlat
enter
mov
fstpt
shrb
jb
or
movsb
ret
dec
rcll
adc
sub
lcall
arpl
pop
insb
ss
dec
aas
daa
ljmp
and
negb
mov
clc
fcomip
aas
fidivrs
movsb
test
mov
xchg
enter
ljmp
mov
rorb
cmp
nop
mov
push
mov
incl
sbb
add
dec
scas
add
dec
fimull
mov
out
mov
sub
dec
subb
gs
mov
add
mov
lds
repz
jne
cld
call
jo
cmpsb
cmp
inc
push
xor
ss
cmpsb
push
cmp
mov
xchg
loope
ljmp
data16
pop
push
sbb
add
jle
cmpsl
pop
sub
lahf
ljmp
mov
inc
decb
xlat
push
xchg
in
or
jns
in
movsb
sub
in
or
decl
adc
xor
iret
mov
and
add
sbb
jmp
sub
cli
inc
inc
ret
popf
xchg
push
repz
xor
inc
xchg
jle
decl
call
mov
pop
xor
icebp
push
adc
fistl
mov
out
clc
aas
or
sub
and
in
gs
out
inc
gs
jg
out
hlt
fldl
push
pop
push
lret
push
sub
xor
xor
sub
and
sbb
jne
add
sub
xor
pop
mov
cmp
jnp
sbb
add
jecxz
std
jmp
push
in
iret
push
out
lds
repz
inc
in
ljmp
push
mov
adc
xor
cltd
rcrl
ds
std
rcll
lcall
dec
scas
pop
out
fdivrp
inc
xchg
cmpsb
mov
mov
in
push
xor
rcll
mov
loopne
dec
push
fisubrl
or
jns
shll
cs
mov
or
xor
stos
mov
mov
stos
and
pop
xor
push
sbb
dec
xchg
sub
cmpsl
push
sti
push
stc
insl
aaa
dec
jmp
xchg
rol
out
adc
add
insb
sar
sbb
popf
adc
mov
ret
mov
sub
xchg
or
mov
cmp
outsb
dec
aas
and
pushl
jb
sbb
pop
and
cltd
mov
or
daa
das
jmp
xbegin
adc
mov
test
leave
je
bound
decb
pop
pop
xchg
aam
pushl
mov
push
mov
sar
dec
movl
xor
mov
xlat
mov
and
sbb
pop
addb
call
test
jl
lds
adc
push
mov
mov
jmp
stos
shlb
out
xchg
sub
in
jl
dec
andl
and
loop
cmp
add
xchg
inc
jb
movsl
xchg
mov
and
mov
push
push
ja
push
lock
mov
cmp
stos
ss
or
inc
push
push
jg
ret
jo
rcrl
mov
jmp
test
jle
jae
rclb
mov
pop
xchg
loopne
mov
mov
adc
bound
jns
sahf
sub
ljmp
test
xchg
xchg
adc
push
fsub
mov
daa
mov
sbb
adc
decl
inc
jl
out
loop
mov
jb
mov
push
push
rclb
sbb
xchg
fs
pop
cmpsl
push
sbb
pop
cmc
mov
jmp
lahf
and
rcrl
punpcklbw
pushl
cld
pop
lret
push
jle
mov
pop
mov
and
mov
incl
cld
push
enter
stos
mov
cmpl
jmp
mov
xor
dec
das
adc
leave
inc
and
stos
xor
out
and
jb
ret
call
and
jo
push
sub
add
jge
js
dec
sub
testl
call
fcoms
imul
push
ss
push
push
add
mov
lods
push
mov
dec
adc
dec
push
push
cmp
in
add
sar
in
and
mov
push
fmuls
test
cmpl
mov
aas
out
inc
jg
ljmp
pushf
rep
shrl
repnz
jg
mov
mov
inc
std
std
aaa
scas
mov
mov
ret
lods
cli
pop
daa
fisubrl
iret
cmp
pusha
ret
dec
mov
test
hlt
ljmp
scas
mov
pusha
cld
inc
sub
in
jmp
lret
mov
lods
mov
pusha
mov
pop
test
xchg
loopne
arpl
sahf
xchg
test
ljmp
adc
dec
mov
lds
int
xchg
jnp
mov
lret
lret
lret
cmp
mov
incl
dec
pop
xchg
xchg
sub
out
or
sub
jecxz
ds
sbb
cmp
xchg
xchg
aad
movb
pushl
jge
fcmovu
inc
xchg
mov
out
jp
enter
pusha
repnz
add
fcos
jmp
std
xchg
xchg
dec
and
lea
sbb
jae
je
lea
add
sbb
adc
push
out
roll
mov
cli
pop
jbe
cmp
aam
xor
mov
mov
andl
divb
popf
into
xchg
js
test
xor
xchg
xchg
adc
fistl
mov
fcomip
les
int
mov
xchg
aam
sub
or
mov
mov
outsb
dec
xchg
or
jno
push
pop
jg
push
fildl
push
sbb
fstl
jmp
push
and
mov
lret
inc
dec
inc
mov
loop
jmp
and
lcall
call
add
nop
xchg
and
cwtl
lret
into
add
push
lds
jmp
and
testl
xchg
xchg
sub
jno
xchg
lods
inc
xchg
mov
pop
cmp
jmp
adcb
jne
scas
es
frstor
leave
xor
movsl
dec
cld
adc
pushl
pop
iret
mov
mov
or
imul
xchg
mov
fcmovbe
cwtl
sub
aam
cld
imul
xorl
call
mov
push
sbb
in
call
adc
push
cmpsl
mov
mov
lcall
out
rolb
in
in
lcall
popf
daa
cwtl
leave
push
adc
adc
incl
mov
xchg
out
ds
test
xor
jge
and
and
cmp
xor
adc
fstpt
cmpsb
lock
repz
mov
and
incl
enter
pop
push
gs
cwtl
xchg
cwtl
jbe
pop
in
or
dec
call
scas
xchg
inc
repnz
call
xor
pop
push
inc
pop
daa
sbb
fcomip
mov
push
in
xchg
pop
jmp
decl
outsl
mov
int3
or
xchg
inc
leave
fisubs
sub
inc
inc
cli
stc
xor
ret
call
lea
xchg
jo
add
in
decl
cmc
mov
mov
xchg
movsl
lods
pop
mov
mov
dec
cwtl
pushf
in
add
lea
pop
sbb
aaa
sub
cmp
leave
in
sar
inc
inc
sub
ljmp
icebp
cmp
out
xchg
lahf
adc
fwait
decl
cmc
fwait
dec
xchg
inc
test
jge
lret
pushf
xchg
and
dec
jle
idiv
pop
mov
cmpsl
pop
cli
in
jo
cmc
mov
hlt
add
movsl
jmp
in
pushl
fwait
xchg
sub
inc
cmp
ror
or
inc
aad
popa
and
push
mov
rorb
push
pop
rorb
int
or
shll
adc
push
decl
inc
sarl
bound
push
xchg
cmp
cltd
int3
add
fcoms
and
lods
std
rclb
repnz
aaa
mov
mov
cltd
mov
cmp
lret
decl
sbb
add
stos
xchg
cmpsb
sub
je
and
inc
or
sbb
cmc
mov
frstor
outsl
cmpsl
aam
pop
into
add
addr16
ja
imul
mov
xchg
fdivs
ret
sbb
pop
loope
add
and
lcall
loope
sub
lds
out
pop
mov
or
mov
fdivrl
push
mov
das
shrb
jmp
sub
jg
loop
adcb
pop
rcl
lcall
xchg
addr16
mov
jecxz
rclb
adc
sbb
decl
xor
aaa
sbb
shll
xor
dec
addb
pop
mov
das
gs
in
ja
cmp
movsb
xchg
ficoms
aaa
inc
add
jmp
add
es
xchg
adc
pushf
or
inc
lret
jge
aas
lahf
xor
sar
fists
inc
decb
je
call
lahf
insl
xor
pop
lcall
outsb
jmp
insb
and
push
sub
xchg
loop
ds
cmp
cmp
cld
out
push
pop
xchg
imul
rorl
mov
pop
outsb
jne
jecxz
ret
dec
adc
xchg
incl
lds
push
ljmp
daa
mov
sahf
pop
cmp
testb
inc
insl
adc
adc
sbb
cmpsl
cltd
leave
cli
pcmpgtd
jns
imul
push
fwait
out
cld
ljmp
mov
xchg
iret
cmpsl
jp
sbb
xor
jmp
pop
dec
leave
cmpsl
fsubs
xchg
pushf
or
push
cwtl
dec
sub
stos
cmc
xor
jecxz
decl
jge
add
lock
xor
push
jge
xor
cmp
and
jns
xchg
pop
xchg
imul
insl
mov
mov
aaa
push
movsb
sarl
addl
mov
xchg
dec
ljmp
mov
pushl
subb
enter
xchg
or
icebp
and
sub
icebp
std
in
int
subl
decl
cmp
loop
and
or
mov
mov
jmp
mov
push
mov
pushf
dec
dec
popa
sub
sti
lcall
jnp
pusha
mov
pop
sbb
mov
sbb
inc
add
imul
cld
jmp
in
loope
mov
outsl
push
jp
loopne
dec
lock
dec
movsl
jmp
mov
mov
rcl
fs
addl
addr16
cmp
fwait
cmp
pop
pop
jl
arpl
lcall
dec
jo
fbld
decl
js
pop
ljmp
or
ljmp
imul
lods
push
decl
fsubrs
insb
repnz
cmpl
jno
pop
jg
fmull
jmp
outsl
clc
es
and
jl
mov
cmpsl
imul
out
fstps
out
mov
pushl
loopne
sbb
cmp
rcl
lret
sbb
cmp
cld
xor
xor
addb
xor
pusha
jge
push
xor
add
jno
js
fcomip
decl
sub
xchg
cld
xchg
mov
lret
xchg
scas
dec
pop
xchg
int3
ret
jmp
mov
loop
lahf
cmp
sbb
cs
mov
shld
add
inc
xchg
push
aaa
mov
sbb
lea
push
pop
push
mov
into
das
das
out
mov
and
jns
xchg
add
pop
mov
inc
pop
or
aad
gs
and
fsubs
jmp
cmpsb
cmc
mov
cltd
aam
xor
mov
mov
jl
out
fists
mov
fcomp
fcoml
mov
mov
enter
pop
out
daa
adc
add
xor
stos
loop
in
xchg
jmp
mov
pop
out
ror
adc
decl
cmc
inc
mov
ret
insl
insb
rorb
decl
mov
in
or
xor
xor
lret
mov
rcr
lret
pop
add
in
cs
sar
stc
fidivrl
inc
push
xor
jmp
cs
rol
popf
rorb
ss
data16
push
stos
rcrl
push
test
ja
out
rcl
add
fsubs
add
ljmp
dec
jns
inc
jno
dec
dec
test
mov
es
jle
clc
enter
fsubrs
and
mov
insl
cmp
insl
arpl
or
and
cmp
ret
fmuls
js
mov
shr
jnp
into
in
cmovp
adc
aam
add
incl
mov
andb
xor
jg
scas
sbb
outsl
mov
add
add
fwait
jae
movsb
cmp
in
sub
incl
xor
push
dec
stos
int
xchg
out
adc
jle
mov
mov
repnz
pop
lods
jg
jno
or
lcall
mov
pop
imul
cwtl
repz
or
mov
mov
call
mov
mov
negl
sub
cld
add
dec
sbb
cmp
mov
lea
ljmp
adc
sbb
xlat
xor
jp
dec
cmpsl
cmpsb
inc
repnz
mov
ljmp
in
lret
fnsave
and
xor
xchg
loope
in
add
inc
repz
pop
popa
in
out
ret
loope
sub
pushl
push
les
int3
ja
adc
ljmp
or
dec
fadds
fcomps
and
fistpll
out
pop
inc
pop
or
mov
jo
nop
adc
test
negl
mov
jge
fildll
lcall
loopne
pop
mov
cmp
insl
sbb
sub
jle
or
push
or
and
add
jae
xor
xchg
push
loop
outsb
out
push
sbb
xchg
pop
sti
or
subb
pushl
mov
fucomp
cli
outsl
jp
or
mov
and
sub
jae
loopne
aad
incl
push
rorl
fdivrl
test
jecxz
imul
jg
sbb
int
je
xor
fdivr
cmc
popa
shrb
ds
shrl
push
jl
and
mov
cmc
loop
shl
shlb
call
mov
mov
add
fldenv
pushl
add
sarl
mov
das
cmpsl
fidivl
insl
pop
out
mov
fwait
pop
xor
das
ja
jg
jmp
add
out
stos
shlb
mov
test
pop
lcall
xchg
jbe
loop
test
mov
sbb
xchg
scas
rclb
test
movsbl
jmp
ja
cwtl
inc
cltd
lret
fisubl
ds
adc
lods
data16
imul
jecxz
mov
ljmp
and
add
int3
dec
add
jge
pop
das
pushf
push
ljmp
pushf
les
adc
fstl
js
sub
xchg
out
push
inc
movsb
fldenv
repz
pop
jmp
test
sbb
or
ficompl
outsl
xlat
cs
cmp
or
push
fadds
decl
sub
xor
lret
ds
and
leave
decb
decl
push
sub
jae
or
mov
mov
pop
scas
ds
hlt
xchg
std
cmpsl
push
rolb
sub
incl
pushl
repz
mov
jle
xor
aam
sbb
rcl
mov
push
cmpsb
add
cmp
mov
mov
stos
lret
ret
nopl
inc
sahf
jecxz
enter
or
jl
xchg
lret
xchg
jb
jb
bound
sbb
adc
outsl
adc
mov
inc
jle
lret
lock
jnp
cmpsl
call
in
pop
sarb
cmp
int3
icebp
call
pusha
into
jae
scas
lods
cmp
sbbl
add
pop
out
mov
andl
cmp
cmp
lea
pop
or
mov
adc
sbb
cmp
bound
jae
cmpsb
loop
test
push
mov
sbb
ljmp
sub
icebp
jbe
jo
and
cmc
cmpsl
inc
sbb
gs
sub
dec
inc
cmp
adc
aaa
mov
cmpsb
mov
inc
mov
pop
lcall
cmp
dec
cld
mov
cltd
adc
mov
das
jp
inc
sub
mov
insl
mov
fwait
mov
mov
lcall
or
ret
jge
pop
imul
clc
aas
arpl
aas
push
jo
push
or
push
out
or
cmp
in
sbb
push
aas
mov
xchg
push
adc
jge
add
push
insb
mov
cmp
mov
cld
cmp
cmp
jo
xorb
push
sbb
ljmp
fidivrs
mov
in
lock
xchg
aam
xor
mov
fidivrl
xlat
push
mov
popa
test
and
mov
imull
iret
in
or
xchg
mov
mov
cltd
and
xchg
aas
shrl
mov
cmp
stc
jg
mov
in
inc
and
inc
sbb
pop
out
enter
inc
xchg
ret
or
clc
popf
fwait
mov
insb
adc
in
add
mov
mov
fistpll
stos
push
xchg
dec
pusha
or
popa
rol
xor
jp
movsl
sbb
out
out
dec
loopne
inc
test
inc
in
pop
sub
loop
sub
sbbb
hlt
jns
dec
in
cld
icebp
and
ret
rcll
mov
movsl
cli
inc
mov
test
ret
rcrb
filds
xor
mov
lcall
inc
push
xchg
inc
pusha
push
and
test
sbb
pop
push
dec
popf
pop
lock
mov
rolb
inc
aad
pop
xor
hlt
cmpsl
sub
push
push
push
mov
enter
call
or
push
push
push
cmp
sahf
in
loop
or
jge
inc
imul
sbb
jne
sbb
scas
cli
incl
add
stos
mul
xchg
stc
jbe
push
jne
mov
mov
pushl
test
inc
or
pop
jbe
and
movsb
dec
pop
outsl
call
in
mov
xchg
jecxz
addl
les
sbb
cmp
stos
push
mov
jnp
add
clc
sahf
mov
inc
jge
push
icebp
repz
or
shll
les
inc
jecxz
inc
cmpsl
pop
and
adc
repz
push
or
imulb
movsl
out
or
test
pop
push
xlat
lock
pop
rolb
gs
lods
pop
pop
pop
ljmp
mov
insb
rcll
loopne
mov
adc
movsb
aam
jle
pop
mov
in
and
imul
cli
xchg
sbb
arpl
fldenv
icebp
mov
call
outsl
fsubl
cmp
dec
mov
shrl
adc
popa
xchg
fists
pop
xchg
adc
cs
lcall
add
jle
cltd
or
shlb
decl
dec
cmp
shl
xchg
insl
outsb
sub
out
jo
sbbb
insl
loope
mov
nop
dec
xchg
cmp
std
fimuls
or
mov
pushl
loope
sbb
push
adc
lcall
or
insl
pop
jbe
lcall
dec
xchg
inc
insb
fdivrs
cmp
mov
xchg
dec
pushf
add
pushl
jle
addr16
data16
clc
cmp
jle
adc
das
inc
sbb
leave
movsl
or
cli
sub
out
fxch
jae
adc
daa
pop
inc
lock
push
push
imul
ljmp
push
arpl
lahf
sbb
xor
mov
out
xor
and
pushl
ss
mov
gs
xchg
scas
pop
pop
pop
lahf
push
int
mov
lods
mov
nop
xor
add
cltd
cmp
into
mov
adcb
imul
pusha
or
push
mov
neg
aad
jle
ficompl
xchg
mov
movsl
leave
out
push
ds
imul
stc
push
cli
add
lcall
lret
popf
and
rclb
call
lock
lcall
push
cmpb
cmp
lods
fsubrs
xchg
movsb
push
jge
jle
fdivr
jg
incl
add
lock
pop
test
in
or
lcall
je
ljmp
sahf
outsb
inc
jo
xchg
or
and
div
mov
cwtl
test
data16
pop
sbb
sti
xchg
rcl
popf
xor
push
cmp
ja
das
xchg
bound
cli
cli
dec
jne
add
ljmp
mov
sbb
pop
rcl
int3
gs
cmpsl
jg
dec
sub
cmp
push
mov
pushf
in
push
pop
sti
xchg
fs
inc
add
fwait
mov
mov
inc
mov
mov
xorb
mov
out
add
or
lods
insb
push
in
pushf
or
sbb
data16
mov
into
fidivrs
ret
cmp
mov
sub
and
mov
inc
xchg
call
xchg
dec
aas
add
xlat
cmp
repz
cwtl
jmp
cmp
enter
scas
clc
sbb
fsubrl
popf
clc
aad
sub
jne
pop
nop
sub
pop
incl
mull
add
pushl
insb
in
repnz
pop
jge
incb
lahf
xchg
addr16
daa
popf
pusha
arpl
addr16
sbb
pushl
sbb
in
testl
adc
mov
mov
popa
jmp
in
adc
ret
scas
jge
out
jo
scas
mov
mov
mov
daa
pushl
int3
pop
xor
mov
pushf
mov
push
inc
sahf
jnp
cwtl
adc
cltd
aad
xchg
xor
incl
dec
pop
mov
xchg
in
call
mov
cltd
xor
cwtl
jbe
pushl
ljmp
or
pop
pop
div
roll
lods
cmp
xchg
adc
mov
lcall
adc
cmpsb
mov
push
or
int3
mov
xor
xchg
add
inc
decl
push
and
insb
cmp
jp
filds
cmc
insb
test
fs
decl
mov
mov
dec
enter
in
xchg
jmp
push
dec
xchg
scas
ljmp
mov
jno
xchg
insb
push
ja
mov
ret
jno
out
xchg
mov
pop
in
jg
xor
add
cmp
mov
dec
icebp
in
ljmp
add
in
jns
jg
std
in
xchg
sbb
aaa
aas
popa
adc
test
xchg
inc
jno
push
xchg
lock
incl
mov
push
push
dec
inc
stos
pop
push
xor
ret
dec
sub
ljmp
adc
scas
dec
mov
pop
jmp
jmp
pop
sub
jo
or
sar
xchg
push
stos
test
inc
cmp
add
icebp
aas
aad
dec
mov
adc
cmpsb
push
mov
lcall
lahf
mov
addr16
jp
xor
cld
sbb
jmp
test
repnz
cmp
mov
cmp
cmp
push
xor
cmp
pushl
mov
adc
add
push
sub
mov
lretw
xor
enter
sbbb
arpl
xchg
adc
test
call
rcr
test
xchg
mov
loopne
icebp
hlt
xchg
jl
movsb
or
pop
dec
jg,pn
lcall
inc
ret
call
into
push
pop
inc
dec
xchg
jmp
es
push
ljmp
loopne
es
fisttpll
test
pop
orl
scas
mov
jl
mov
sti
adc
or
sbb
fs
mov
jg
sub
scas
pushl
cld
jmp
loop
jecxz
std
sbb
or
lcall
mov
xor
pushf
mov
adcb
maxps
inc
dec
and
or
cmp
mov
sarb
or
xchg
jp
add
in
mov
gs
cmpb
aaa
and
jle
mov
push
std
aas
or
or
aam
cmpsl
fwait
mov
dec
aaa
or
sub
fisubs
out
mov
test
aaa
and
icebp
insl
lret
dec
mov
fidivrs
cli
rcrl
call
stc
les
jl
sbb
mov
mov
push
test
xor
testb
add
push
dec
lcall
pushl
inc
jo
pop
fcomp
cmp
cmp
repz
in
hlt
ljmp
fldenv
sbb
addr16
sub
imulb
in
lcall
call
lods
hlt
push
pop
out
xor
das
pop
repnz
adc
incl
pop
jle
into
into
xchg
xchg
pop
xor
ja
loopne
test
jecxz
decl
mov
adc
dec
int3
mov
enter
fs
sub
decl
dec
rolb
push
daa
mov
je
mov
xor
ljmp
mov
jg
hlt
pop
aad
pop
es
push
loop
in
and
pop
in
repnz
ljmp
sub
test
and
daa
les
jmp
mov
sbb
lcall
and
inc
test
dec
xor
imul
rorl
or
rorb
fs
ljmp
jecxz
pop
dec
and
dec
cmp
popa
push
sub
jo
fnsave
decl
push
out
xchg
sahf
imul
stos
dec
add
addr16
mov
jae
lcall
sbb
fcoml
jnp
mov
jb
adc
pushf
mov
sub
ja
in
add
jg
decl
xchg
mov
stos
addr16
adc
pop
push
fildl
xor
cs
ljmp
stos
lcall
ret
mov
in
sarl
divb
dec
je
inc
cltd
push
push
ljmp
xchg
sarl
loopne
cmp
cmpsb
sub
fiaddl
mov
stc
pushf
inc
mov
iret
in
sbb
pusha
pop
sbb
sbb
mov
mov
test
push
or
mov
mov
ds
hlt
sbb
ljmp
cmc
xor
loop
mov
arpl
ret
adc
cmc
imul
stc
mov
les
lcall
mov
jge
ja
pushl
sbb
stos
jne
sbb
stos
movsb
fldt
jns
mov
out
sub
dec
scas
jl
cli
mov
cmp
sub
pusha
sub
lcall
les
out
negl
mov
js
std
or
repnz
mov
ljmp
insb
push
jns
nop
cmc
dec
popf
sbb
lret
dec
fistpl
loopne
sbb
call
jl
es
mov
call
cmp
fsubp
pushl
je
stos
ja
fisttpll
jecxz
mov
hlt
xchg
push
repnz
in
jl
push
pop
je
push
jp
sti
andl
fwait
mov
xchg
call
mov
pop
clc
cltd
lret
stc
cs
pop
jmp
cmp
insl
dec
add
mov
lds
fsincos
loop
push
xchg
xchg
sub
sub
jmp
mov
pop
mov
mov
push
lods
rol
xchg
push
aaa
xor
shrb
jg
dec
sarl
ds
pop
inc
dec
push
cmp
mov
dec
enter
aad
call
mov
clc
add
mov
jl
stos
leave
sub
sub
cmp
insb
add
push
call
sbb
outsl
test
mov
pop
mov
cld
rcr
push
push
dec
outsl
sbb
decl
cmp
sbb
dec
mov
ss
cltd
cmp
loope
fxam
iret
aam
lahf
mov
lock
push
stc
add
and
les
outsb
xor
mov
push
mov
loopne
or
dec
mov
or
daa
outsb
xchg
pop
or
mov
xor
jns
push
lea
sub
dec
lret
addr16
lahf
push
rcr
in
out
insl
dec
xchg
je
sub
rolb
call
cld
jmp
xor
pop
xchg
jp
mov
sub
cwtl
push
sbb
loop
lcall
mov
push
ljmp
fldenv
daa
gs
movb
call
shlb
insb
sub
enter
and
fwait
mov
inc
push
pop
repnz
outsb
clc
fidivl
pusha
push
and
stc
add
pop
mov
xor
push
movb
lcall
jp
test
pop
or
cmp
push
sbb
fisubs
or
aaa
mov
push
lret
int
scas
in
fcomip
mov
icebp
arpl
push
cld
pushl
jo
nop
aaa
in
cmp
mov
stos
sbb
ljmp
dec
jmp
cld
mov
mov
jns
iret
pop
pop
mov
push
pop
fdivs
add
jp
lret
sub
incl
adc
outsl
dec
data16
push
jl
sti
sbb
clc
fmull
aam
inc
into
ret
ljmp
in
push
pop
test
out
jnp
loop
inc
and
pop
das
cmp
sarl
jo
gs
mov
mov
jno
jns
or
xor
repz
decl
fwait
and
xor
sub
addr16
xor
enter
incl
add
jbe
mov
xchg
fistpll
cs
sbb
mov
imul
jmp
cmp
lret
xlat
sbb
mov
das
add
mov
mov
imul
jmp
aad
call
cmp
hlt
popa
lods
pop
repz
cli
out
lret
mov
popf
cltd
push
mov
jmp
enter
push
dec
xchg
jb
cltd
js
lea
add
adc
scas
cmp
lcall
aam
mov
add
rcrb
sbb
jl
or
jne
insl
shlb
incl
pop
ljmp
daa
inc
fsub
mov
inc
push
std
adc
cmp
push
sbb
decl
lock
sarl
ret
test
jnp
cmp
stos
cld
stos
stos
scas
mov
clc
sti
cld
call
mov
mov
daa
pop
divb
stos
mov
mov
add
lret
pushl
sahf
mov
lods
notb
mov
cmpsb
add
adc
fincstp
in
adc
stos
aaa
xchg
mov
sbb
add
mov
lods
pop
cld
arpl
shll
dec
and
jmp
mov
cmp
mov
pusha
xchg
jmp
mov
cmp
lds
mov
ja
imul
pop
movsl
cmp
in
dec
repnz
decl
sub
pop
les
sub
lock
add
ret
pop
decl
incl
pop
mov
xchg
sbb
jno
xor
enter
push
decl
ljmp
bound
mov
push
gs
ljmp
mov
test
mov
sti
shl
fisttpll
or
lret
sbb
pop
movsb
and
ljmp
push
outsb
fcomp
das
inc
push
in
pop
fucomp
ja
shrb
mov
or
and
js
pushl
mov
push
lahf
outsb
xchg
or
in
sti
cmp
lods
sbbl
mov
fisubrs
pushl
xlat
lock
mov
aas
pop
loop
arpl
pop
fisubrl
fwait
pop
pusha
cmp
mov
push
je
es
push
bound
pop
clc
orl
cli
pushl
popa
imul
and
sub
jmp
cli
add
hlt
sub
push
je
mov
test
dec
xrelease
pusha
jp
push
jp
stos
adc
fstpl
movsb
ds
mov
cmpsb
sti
jle
xchg
inc
mov
mov
cmp
adc
add
fidivl
ror
jns
aam
jae
fcomps
ror
lock
jbe
movsl
push
mov
lcall
xchg
in
fsubrs
mov
mov
ds
jmp
jb
jp
dec
inc
cmpsl
or
and
les
int3
and
mov
sub
jmp
andb
fnsave
jp
mov
das
cli
lcall
lods
sahf
add
xchg
jmp
or
inc
ficoml
add
int3
push
lcall
ljmp
jle
or
push
sbb
int
clc
xchg
mov
jae
repz
cld
lcall
pop
movsb
aas
fs
cmp
mov
fsubr
popf
mov
das
ret
and
iret
stc
out
fwait
andb
dec
jae
call
ljmp
adc
adc
push
pop
dec
adc
negl
jne
icebp
push
cmpsl
adc
into
push
mov
mov
or
add
cmp
cmc
fnstcw
lcall
fisubl
cmc
test
outsl
bound
in
pusha
mov
jg
call
sub
mov
adc
mov
xchg
xchg
repz
stos
sub
jmp
and
lahf
inc
or
iret
adc
xchg
movsb
stc
xchg
xchg
scas
call
test
loop
fistpl
inc
pushf
mov
push
xchg
mov
cmpsl
xor
test
push
shll
jbe
loop
mov
jmp
mov
sub
or
sti
jnp
std
rclb
push
shl
enter
push
pushf
mov
push
arpl
and
popf
leave
ja
pop
xchg
jg
adc
sbb
push
aad
decl
mov
mov
mov
gs
fwait
out
mov
scas
clc
jg
rorb
sub
cmpsb
xor
push
push
xchg
testb
xor
jb
mov
popa
xor
decl
jle
push
dec
mov
push
mov
insl
xchg
enter
sbb
decl
dec
sarl
addr16
dec
mov
fs
out
xor
hlt
xor
adcb
fistl
mov
mov
mov
mov
ljmp
in
mov
sbb
fdivrl
orl
jae
cwtl
mov
cmpsl
out
lock
lcall
xor
mov
pop
inc
in
cmc
xor
dec
jnp
lahf
dec
cmc
leave
add
popa
decl
leave
pop
adc
push
add
in
inc
xchg
jg
sub
mov
mov
lret
ret
out
rclb
in
dec
decl
lock
ja
sub
jl
pop
mov
ss
in
add
xchg
ljmp
mov
cltd
mov
syscall
ss
leave
lcall
cmp
lea
push
stos
xor
xchg
jecxz
mov
sbb
js
inc
lahf
add
imul
fstpl
sub
pushf
xlat
out
xchg
push
or
ss
ljmp
mov
jle
xchg
xchg
jb
mov
sbb
subb
incl
xchg
stos
fldl
or
in
mov
arpl
mov
insb
xor
mov
xchg
cmc
clts
incl
fcomp
loop
scas
jecxz
push
inc
pop
rorb
fidivrl
dec
jecxz
inc
adc
pop
bound
push
dec
xor
addr16
aad
push
fwait
decl
add
test
popa
push
outsb
scas
xor
adcb
mov
sahf
pop
or
sbb
mov
sar
fists
lcall
fs
into
lock
or
in
in
dec
xchg
ljmp
das
sub
out
xor
cltd
add
rcrl
lods
jge
cmp
aas
xchg
in
sub
lcall
dec
jmp
mov
mov
je
mov
iret
pushf
and
arpl
bound
sbb
call
dec
xchg
arpl
mov
addb
xchg
cmp
jecxz
cmp
sarb
filds
fdivs
push
push
cs
jae
movsb
je
dec
dec
int
and
sbb
mov
push
sub
pop
out
testb
jg
decl
jge
std
sub
or
push
mov
mov
pop
dec
cmp
jo
adc
pop
cmp
jno
daa
mov
in
popf
mov
test
cld
jle
jns
dec
xchg
sbb
pop
aad
das
jo
mov
out
cmpsl
adcb
and
sub
aam
bound
mov
adc
incl
aam
sub
clc
mov
int
mov
push
sub
ret
lcall
or
push
lea
adc
xor
dec
mov
lcall
arpl
mov
shrl
iret
cmp
jmp
rdtsc
test
ljmp
sar
ljmp
xchg
jg
pop
in
mov
leave
mov
roll
jg
mov
rorl
jmp
mov
test
pop
pop
sahf
clc
jp
inc
push
andl
out
push
xlat
push
shlb
shr
call
jbe
add
inc
jmp
pop
inc
mov
repnz
repz
outsl
jb
popf
imul
or
pop
xchg
cmp
add
mov
or
and
dec
sbb
fisubs
rcl
sub
adc
or
divl
insb
lcall
clc
decl
sbb
fprem1
bound
cmpsb
nop
and
mov
and
adc
cmp
mov
aam
mov
cmpsl
int3
mov
dec
in
lahf
movsb
xlat
lock
push
lahf
ja
loop
cmpsl
xchg
decl
shll
push
aad
repz
sbb
jne
add
sti
out
xor
cmp
les
mov
cmpsl
sarl
push
xchg
js
stos
incl
cmp
xchg
add
lcall
aam
pop
push
les
xchg
je
adc
add
pushl
push
push
xor
inc
iret
stos
xor
sub
and
inc
insl
push
inc
lcall
push
dec
mov
or
xor
mov
pop
std
mov
dec
jne
lock
jo
call
mov
mov
push
nop
arpl
sbb
push
dec
mov
out
mov
or
ljmp
outsb
xor
imul
sub
adcb
pop
and
push
sbb
jnp
mov
call
push
inc
cmp
add
or
mov
fnstenv
outsl
mov
scas
insl
decl
es
mov
dec
xchg
leave
mov
inc
ljmp
jle
test
mov
repz
notb
pop
stos
call
mov
and
jp
stos
lcall
movsb
scas
popa
enter
ret
jo
jbe
popf
lahf
insb
and
add
out
testl
ja
mov
lock
sti
jmp
push
or
push
add
orl
mov
ljmp
and
jmp
mov
cli
jno
aas
inc
pop
xchg
mov
xrelease
jl
inc
mov
push
sub
dec
cmp
push
push
jns
push
cmp
dec
or
and
dec
xchg
jg
cmp
arpl
out
lods
xchg
mov
mov
pop
rorb
pushl
leave
cmp
and
pop
ja
push
mov
sahf
mov
cwtl
addb
jg
icebp
add
jle
xchg
loope
mov
pop
cmpsl
cli
jmp
mov
shr
jmp
pop
lock
popa
xor
mov
decl
jae
js
inc
pop
mov
xchg
ljmp
int
xchg
test
jg
aaa
outsl
sub
dec
or
std
pop
cwtl
jg
fcomip
adc
mov
imul
cli
mov
das
clc
decl
out
mov
push
xorl
insb
add
adc
xor
jns
adc
cli
ljmp
dec
mov
inc
das
xchg
fists
insb
lea
das
fisttpl
call
pusha
int
stc
lret
cmp
ds
fdiv
ja
add
pusha
pop
out
push
sbb
ds
cmp
aaa
insb
pushf
mov
loope
add
or
imul
sbb
or
xor
std
fwait
dec
shl
ret
sub
popf
test
cmpsl
dec
movsl
outsb
loope
push
outsb
jb,pt
sub
faddp
inc
and
jecxz
cwtl
mov
pop
lds
xor
lock
repnz
xchg
or
xchg
pop
loopne
fs
cli
ljmp
in
jle
imul
dec
add
mov
loope
in
ret
ss
jg
fcmovnbe
cmp
scas
lock
mov
fnstsw
mov
inc
adc
and
ret
pop
aad
mov
adc
adc
xor
sub
pop
adc
lods
and
roll
dec
push
adc
cmp
fbstp
inc
sbbb
nop
push
xor
pop
jg
ss
lahf
jns
fstps
inc
adcb
lds
mov
sbb
movsb
dec
jmp
pop
xor
es
jnp
adc
ret
push
cmp
xchg
cwtl
adc
cmp
mov
jg
ljmp
mov
xchg
ss
mov
or
incl
hlt
fsubrp
mov
out
inc
cmp
push
bound
stc
call
dec
xchg
mov
adc
in
jns
dec
inc
mov
addr16
repnz
incl
jbe
mov
sarb
leave
push
xchg
push
or
push
ljmp
fidivl
xor
mov
mov
aas
and
call
push
outsb
loop
incl
out
lods
jl
shlb
inc
insl
lods
adc
aad
fcomip
and
les
xchg
js
dec
add
and
mov
sti
mov
cmpsl
jae
pushl
nop
jb
ss
push
decb
stos
jg
jne
cmc
ja
fbld
call
rcr
fcmovnb
sbb
sti
ljmp
mov
mov
jo
push
and
mov
mov
mov
cmp
mov
and
push
inc
pop
mov
mov
dec
rclb
inc
cld
loop
xchg
fldcw
addl
add
fbld
scas
lds
jnp
mov
jmp
or
lods
xchg
fs
test
xchg
mov
incl
lcall
and
push
jnp
mov
push
xchg
and
push
test
incl
pop
fcoml
dec
stc
or
jo
rcl
inc
push
inc
leave
xor
int3
sub
pop
jg
pop
lock
in
pop
mov
xor
imul
jmp
lods
lret
movsb
xlat
jo
pushl
cwtl
and
adc
gs
push
hlt
test
incl
jb
loop
cmp
adc
pop
mov
imul
lcall
push
adc
jecxz
lods
dec
ret
into
fisttpll
movsl
xor
rep
mov
lcall
push
out
enter
outsb
add
push
sbb
sti
xor
idiv
decl
fdivs
adc
push
addr16
call
sbbb
test
lret
les
imul
lcall
fidivl
pop
sar
mov
sahf
stos
lds
sbb
mov
push
dec
arpl
ljmp
ret
subb
popf
fstpt
cmp
or
xor
ret
pushl
pop
shl
push
enter
ret
cltd
jecxz
pop
cmp
out
sbb
lods
sarl
mov
lcall
add
fxch
hlt
sti
sbb
add
hlt
push
dec
adc
xlat
jg
das
test
pop
jge
dec
fs
pop
mov
adcb
jb
lret
pop
stos
outsb
xchg
lock
maxps
fimuls
imul
loopne
push
lcall
pop
mov
adcl
pop
out
mov
pop
jo
push
pop
or
mov
aaa
xchg
movsb
lds
cld
out
out
mov
in
and
inc
das
decl
data16
into
fldl
sbb
fcmovbe
jne
sub
push
fnstenv
mov
jnp,pn
xor
push
orb
in
push
fistl
enter
inc
fwait
sub
lods
and
mov
cmp
mov
into
pop
jmp
mov
and
pop
imul
hlt
ljmp
mov
xchg
loopne
adc
fists
jae
ret
ljmp
mov
daa
scas
mov
sub
ret
mov
aas
jp
out
out
inc
jg
loop
jmp
dec
int3
push
pop
jg
js
adc
xchg
sub
sbb
addb
popf
int3
mov
es
sbbl
in
push
add
push
pop
xor
outsl
mov
jl
incl
das
sub
add
scas
push
sub
push
fdivr
jno
arpl
andb
xchg
or
or
lahf
push
decl
fldenv
jbe
das
adc
subb
xor
cmc
decl
into
add
sahf
arpl
pop
iret
pop
jp
dec
pop
jmp
ljmp
fdivs
arpl
pop
jnp
aas
lea
inc
and
je
ljmp
mov
mov
mov
scas
rolb
insl
pop
ljmp
mov
fcomip
jmp
dec
adc
movsb
push
aad
dec
jne
cld
inc
adc
or
jmp
incl
inc
adc
xor
repz
fucomp
dec
dec
xchg
mov
decl
call
faddl
add
cmp
test
xchg
out
pusha
cmp
mov
xor
dec
fmull
sub
or
cmc
lds
pop
mov
adc
mov
xor
aas
xchg
pop
lods
imul
dec
push
pop
fdivl
sub
sbbb
mov
call
pop
sti
xchg
outsb
inc
push
inc
mov
adc
inc
pop
and
cmp
test
mov
sar
sub
setge
and
adc
arpl
xor
movsb
out
cmp
ret
lret
shrb
add
mov
jo
jg
sub
adc
lahf
add
mov
lods
cmp
and
add
dec
mov
cs
jl
mov
ljmp
incl
dec
dec
int
jecxz
sub
out
insl
addr16
insb
inc
pop
daa
mov
pop
xor
call
scas
leave
pop
dec
xor
jg
mov
sahf
fldt
ljmp
pop
add
mov
mov
ljmp
je
and
push
fs
mov
push
out
cwtl
dec
jge
in
scas
xchg
call
jg
out
cld
bound
or
lret
mov
mov
jecxz
xchg
jbe
adc
cmpsb
stos
jno
call
sub
inc
lods
sbb
iret
ret
test
test
out
sbb
mov
divl
push
xchg
jmp
or
cmp
sbb
imul
adc
lea
ljmp
shll
xchg
pusha
pop
jl
sub
stos
or
aas
xor
loope
pushw
in
scas
in
sti
test
sar
call
lods
jmp
shlb
pop
adc
loope
cs
ja
adc
ljmp
push
loop
jmp
sbb
cmp
jns
popf
lock
out
mov
jg
jb
xor
ja
mov
outsl
fiadds
arpl
movsb
lock
mov
jmp
adc
xor
ja
pusha
sbb
shll
dec
or
add
nop
std
lea
cmp
sbb
lock
mov
cwtl
sar
pushl
and
pushl
add
mov
adc
scas
cmp
lcall
inc
mov
push
je
sbb
aad
cmp
cs
loop
mov
pusha
jo
outsb
incl
and
imul
ficoms
mov
inc
clc
dec
aam
jo
ds
cltd
adc
test
pop
add
sarb
mov
ljmp
push
movsl
sarb
pop
jae
scas
push
mov
fisubl
mov
cmp
dec
cli
push
push
test
cmp
dec
jle
mov
mov
sbb
xchg
ljmp
dec
add
ffreep
adc
loopne
mov
addr16
mov
lods
xor
movsb
fdivrl
decl
inc
lods
dec
cmpsl
jge
pop
adc
ljmp
mov
loop
ljmp
ret
loop
fbstp
pop
das
lods
and
mov
sbb
ret
jg
ljmp
fs
xor
cltd
cmpsb
xor
out
jg
aam
add
outsl
inc
jbe
mov
push
jp
jnp
sbb
xor
dec
push
into
add
test
out
push
cmpb
inc
mov
or
jb
sub
mov
rolb
movsl
cld
addr16
pop
xchg
inc
mov
mov
xchg
lods
setae
call
mov
jp
cmpsl
xorb
pop
mov
dec
mov
pop
stos
outsl
add
in
imul
mov
call
mov
jle
mov
mov
mov
mov
mov
sub
std
mov
mov
imul
cwtl
loope
imul
das
sar
push
nop
enter
aas
or
pop
bound
xchg
popl
outsb
lcall
mov
ljmp
cltd
inc
pop
cmp
call
insb
sti
mov
loope
push
incl
scas
ja
in
mov
scas
mov
and
cmp
data16
adc
push
decb
shlb
adcl
lock
incl
pop
popf
out
stos
cmp
dec
cltd
push
ret
aaa
jne
sub
inc
and
jb
mov
pushl
scas
push
cltd
ror
add
mov
add
bnd
pushl
test
xor
cs
flds
sub
cmc
mov
lret
ljmp
mov
ret
cs
add
adc
jo
daa
dec
subb
cs
call
cwtl
test
fs
mov
add
and
bnd
xchg
or
adc
fwait
gs
sti
es
adc
pop
add
cli
cmp
add
cmc
fcomip
mov
in
or
lret
push
jecxz
jecxz
sub
mov
pop
mov
inc
dec
ja
pop
btr
int3
sub
scas
push
adc
xchg
xchg
or
push
sbb
cmp
mov
push
push
push
xor
jg
imul
cs
fsubs
dec
xor
dec
sub
xchg
push
xchg
pop
stc
inc
out
cli
mov
sahf
xlat
push
push
cmpsb
add
jmp
popf
dec
outsb
jmp
sbb
dec
hlt
push
jo
inc
mov
dec
push
push
push
std
clc
pop
fdivrs
mov
xchg
jmp
gs
mov
scas
pop
mov
pop
jb
mov
pop
cmp
js
mov
push
mov
or
neg
sbb
jo
test
cmp
leave
or
jmp
push
iret
bound
out
jae
sub
mov
sub
push
xchg
sbb
repnz
dec
push
jo
pop
inc
mov
inc
push
mov
popf
push
adc
dec
add
mov
jns
rorb
mov
sbb
mov
in
imul
push
and
pop
dec
dec
hlt
outsl
decl
pop
in
loope
shlb
aaa
sbb
mov
sbb
mov
push
sbb
pop
pop
sub
adc
icebp
sbb
hlt
fisubrl
add
push
popf
push
fwait
dec
and
push
int
outsl
adc
ds
sbb
xchg
stos
repz
in
in
movsb
pop
pop
inc
sub
mov
cli
xchg
sub
mov
in
jp
add
sbb
ret
mov
jns
jp
dec
jmp
cmp
cmp
jbe
pop
ljmp
ja
sub
mov
jmp
enter
cs
fcmovu
sbbl
mov
cmpsb
idiv
xor
ret
es
pushf
mov
inc
aaa
dec
cmpb
pusha
xchg
mov
in
xchg
fisttps
push
test
push
jg
scas
fs
mov
pop
scas
rorl
ds
incl
add
sti
jne
stos
cwtl
xchg
ljmp
mov
mov
cmc
lcall
push
sbb
int3
nop
xchg
test
cmpsb
repz
or
stos
ret
dec
pop
push
icebp
int
sbb
es
cmp
or
sahf
inc
inc
int3
inc
mov
movq
cmp
cwtl
out
in
push
xor
data16
into
int3
and
sbb
arpl
fwait
mov
push
pusha
bound
pop
std
fildll
push
loope
or
inc
jae
lods
mov
pop
vmovdqu
insl
in
jmp
cmp
cmpsb
xchg
fnstcw
bound
fwait
dec
jg
jg
lret
mov
cmp
lcall
cmpl
dec
inc
stos
xchg
or
fnsave
je
pop
repz
cli
call
ss
clc
pop
je
cmp
pop
pop
into
shrb
clc
mov
lcall
push
sbb
pop
hlt
aaa
faddl
hlt
inc
and
cmc
mov
out
int3
adc
out
pop
lahf
test
nopl
dec
lcall
incl
in
imul
std
dec
fcmovu
bound
lea
inc
push
push
dec
fadds
incl
xchg
xor
or
pop
or
mov
push
or
outsb
sbb
cld
jle
aad
mov
sbb
cmp
mov
or
aam
sbb
pop
insb
insl
aam
mov
incl
fistl
mov
push
ljmp
cmp
je
xchg
dec
xchg
xlat
shll
decl
lahf
jb
inc
jns
std
aas
scas
iret
scas
push
jns
or
addr16
sbb
lods
pop
incl
inc
insb
pop
mov
into
sar
lds
add
adc
in
sbb
mov
js
cltd
mov
decl
dec
repnz
test
rolb
inc
icebp
mov
jae
inc
mov
lcall
jmp
ja
xchg
iret
xor
pop
test
sub
bound
sti
fcoml
jmp
neg
add
movsb
pop
sub
lods
leave
mov
mov
jg
dec
mov
xchg
push
push
ret
arpl
dec
mov
repz
cmp
repnz
idivb
les
cmp
mov
push
sahf
add
pushf
addr16
jmp
jnp
push
ret
mov
in
outsl
lds
sar
jge
sub
inc
lods
lea
cmc
mov
cmp
decl
loope
aas
push
shr
xchg
xor
cmp
xor
adc
and
mov
fldcw
dec
stos
mov
movsb
cmp
cltd
test
mov
in
push
test
incl
pop
push
jae
out
sub
pushf
add
fucomi
mov
loop
sub
or
push
mov
es
xchg
push
mov
or
inc
into
and
cltd
aad
lcall
cmp
test
into
hlt
sub
adcb
cmp
gs
jle
push
mov
call
cmp
jl
mov
inc
shll
cmp
insl
ss
jg
sub
addr16
sub
mov
fwait
ljmp
mov
push
mov
jnp
xor
clc
and
mov
lcall
push
fbld
sub
loope
sahf
mov
xor
ret
fistpll
ss
fcomip
sbb
stc
loopne
fsubs
pop
mov
or
imul
out
mov
call
push
cli
mov
jge
mov
insb
sbb
or
xor
dec
ret
mov
insb
inc
decl
sub
mov
call
rcrb
push
or
out
jmp
sbb
push
fisubs
jo
sbb
and
incl
sbb
xchg
adc
sarl
fs
push
out
add
or
cli
jb
pop
and
mov
or
cmp
test
shll
repnz
cmp
dec
xchg
les
lcall
mov
das
pop
add
mov
push
popf
out
xchg
sbb
sbb
cmc
call
jbe
adc
outsl
xchg
sub
or
lcall
movsb
sub
int3
mov
jg
push
stos
pop
mov
repz
stc
nop
dec
fstl
icebp
in
outsl
shll
ljmp
sbb
test
jb
mov
aaa
jne
jbe
sub
jg
fcompl
xchg
push
add
xor
shlb
and
pop
push
mov
mov
scas
pop
repz
into
mov
and
int
cmc
sub
movsb
icebp
xchg
and
pop
sub
inc
jmp
jecxz
fmul
add
mov
jmp
pop
pop
ljmp
dec
dec
aad
les
call
stos
outsb
mov
xor
xchg
jle
pop
adc
ret
bound
cld
mov
outsl
call
cld
and
cmpsb
test
rclb
inc
jmp
mov
in
push
and
inc
push
pop
cmp
or
xchg
addb
xlat
test
inc
mov
or
lcall
dec
xchg
movsl
inc
jge
movsl
insb
aas
or
mov
mov
fmuls
or
jmp
call
test
clc
sahf
pushf
clc
and
xor
pop
cld
mov
push
outsb
shl
sub
mov
sub
scas
cmc
or
pushf
cmp
jmp
fwait
jnp
push
push
into
add
std
or
cwtl
xchg
inc
pusha
push
dec
mov
decl
push
jg
xchg
jg,pt
lds
ds
inc
ds
lock
loop
pushl
jbe
int3
add
stos
bound
xchg
sbb
pop
push
pop
rcrb
aam
push
or
incl
and
lea
dec
andps
in
push
add
incl
repnz
or
and
dec
push
ret
sahf
and
push
out
push
inc
or
dec
mov
push
xor
jno
lret
mull
ja
add
lret
je
repnz
imul
mov
jne
jo
imul
xor
ss
add
adc
push
inc
andb
or
or
nop
shrb
pop
sbb
lahf
add
imul
leave
adc
inc
sub
xorb
lds
dec
fs
and
sub
inc
pusha
mov
jo
daa
sbb
sti
pop
mov
push
dec
gs
pop
sarl
jne
outsl
outsl
insb
push
outsb
xchg
adcl
push
ret
fwait
dec
sbb
push
push
sub
aaa
dec
xchg
push
js
or
into
subb
aaa
push
popa
adc
cmp
adc
inc
jns
push
incb
popa
in
or
sbb
and
push
es
ljmp
dec
add
outsl
insl
insl
bound
and
xor
jo
add
into
push
or
add
fwait
bound
inc
jl
loopne
xchg
pop
xor
sub
imul
pop
add
mov
and
sub
sub
jae
adc
cmp
psubusw
sub
inc
adc
mov
cli
arpl
cs
inc
adc
mov
cmp
lcall
sbb
push
pop
ds
insb
jne
in
inc
lock
addl
xchg
dec
push
xor
mov
mov
push
jnp
lds
jo
inc
push
fildl
fs
inc
or
push
mov
sarl
adc
loopne
push
jne
subl
in
inc
or
jb
addr16
push
subl
jns
mov
insl
add
inc
jae
adc
cmp
cmp
mov
fs
fimuls
hlt
std
pop
ret
jnp
dec
cmp
or
or
or
xchg
fisubl
inc
rclb
jno
inc
or
dec
push
imul
pop
fsubs
stos
inc
dec
sbb
sbb
add
add
adc
xchg
sbb
leave
mov
inc
adc
jns
imul
cmp
inc
mov
mov
lcall
inc
adc
test
sub
pop
push
cmpsl
mov
and
popw
push
shlb
lret
mov
mov
push
push
inc
xchg
popa
and
das
ljmp
jae
pushf
inc
or
pop
ret
mov
hlt
dec
inc
dec
or
inc
or
into
mov
adc
jecxz
push
gs
or
fs
cmp
ds
xchg
lods
xor
je
aaa
mov
inc
inc
or
push
je
stos
pop
push
push
je
inc
cmp
inc
jnp
or
cmp
and
inc
mov
es
jp
mov
push
jg
sbb
xchg
bound
fcoms
mov
roll
daa
fsubrs
jle
outsl
jns
int
push
xor
sbb
gs
and
mov
stos
data16
scas
aad
jns
jp
inc
lock
je
push
inc
inc
pop
test
out
sti
xlat
lods
sub
cs
inc
sbb
mov
mov
mov
inc
imul
loopne
and
jne
or
push
es
mov
cwtl
insb
and
add
xor
add
adcl
stos
loope
and
add
cmp
cmp
in
xchg
or
add
jnp
pop
aaa
cmp
pop
or
xlat
test
or
push
and
sbb
push
jne
inc
fmuls
lods
and
adc
fbld
jecxz
add
or
dec
xor
cmp
mov
xor
popa
add
les
lds
add
jnp
addr16
outsl
cmp
pushf
mov
mov
adc
dec
xorb
imul
scas
les
rclb
push
outsl
add
ret
fadds
cmp
dec
push
adc
push
shl
sahf
cwtl
rcl
and
jns
jne
je
cmp
pushw
mov
adc
inc
arpl
sub
sti
mov
push
loop
rorb
and
jg
pop
pushf
mov
inc
push
jmp
aaa
cmp
push
clc
pop
xchg
add
or
rcrb
mov
jge
inc
sbb
push
push
popa
sbb
sbbb
outsb
adc
pusha
add
cmp
dec
push
sub
pusha
fiadds
xchg
pop
dec
pop
ja
cmp
pop
push
je
pop
addl
xor
jb
icebp
adc
jl
stos
push
adc
inc
in
lods
jo
inc
mov
push
arpl
insl
sbb
imul
push
mov
pop
fisttpl
pop
mov
inc
insb
jle
cmovnp
inc
call
movlps
and
jae
sub
stc
xor
jno
aad
iret
ljmp
jns
push
insb
inc
or
lds
inc
mov
loopne
xor
sbb
xchg
sarb
xor
je
xchg
movsl
or
inc
pop
push
movsb
push
xchg
cmp
push
push
xor
push
pop
xor
inc
lock
shlb
mov
cmp
imulb
push
push
adc
push
lock
cmp
mov
xchg
jnp
cmp
clc
mov
insl
dec
outsb
dec
adc
ret
scas
jnp
cld
insl
repz
pop
add
add
mov
imul
xchg
movsb
xor
rcrl
or
pminub
rcll
adc
mov
mov
addb
pop
adc
in
setl
inc
rcrl
inc
jb
and
lods
add
out
dec
and
jl
outsl
bound
adc
push
inc
and
roll
out
inc
jb
inc
cmc
das
inc
push
jb
inc
jae
inc
leave
push
sbb
inc
shll
fidivl
ret
add
push
repz
pop
cmp
sbb
movsb
ljmp
dec
rclb
pop
or
icebp
push
mov
loopne
imul
nop
xor
mov
shlb
dec
pop
push
add
lret
test
sbb
or
xor
jnp
movl
pop
sbb
test
aad
enter
sbb
movsl
mov
adc
outsl
or
inc
dec
test
fildll
mov
sub
inc
pop
fnstenv
adc
mov
and
jmp
sahf
rcr
sbb
je
sbb
sbb
rorl
shl
adc
insb
jl
pop
add
add
imul
xlat
push
mov
sbb
mov
xchg
add
or
enter
shrl
mov
mov
push
dec
sbb
ret
in
sub
cwtl
dec
push
ret
mov
lods
sbb
or
addb
push
addb
sbb
cltd
lret
sub
inc
pop
insb
xor
fsubl
adc
sub
pop
mov
inc
stos
mov
push
xchg
lods
pop
and
add
mov
test
in
push
sbb
mov
and
lds
adc
inc
and
or
mov
sub
or
nop
ss
testl
sbb
test
add
mov
mov
jno
loop
cmpsb
jecxz
add
das
sbb
fs
sub
bound
push
lods
add
fdivs
int3
add
pop
push
stos
lret
iret
jns
xchg
add
js
int
nop
inc
outsb
sub
push
fs
cmp
js
and
push
movsl
ret
dec
push
sub
push
or
cmpsl
aad
lahf
aam
pushf
push
and
andl
add
bswap
repz
inc
push
mov
lcall
push
inc
enter
out
adc
add
sub
pop
xchg
dec
cmp
ja
imul
test
test
and
int3
add
sbb
data16
sub
jmp
jg
dec
lods
negl
and
adc
jp
xor
inc
pop
sub
dec
fmull
loopne
or
or
add
pop
mov
and
adc
xor
add
sbbb
sub
jne
outsl
dec
pop
add
sar
rorb
or
and
test
xchg
mov
fisubl
mov
dec
pop
add
dec
cs
fcmovne
add
aad
bound
xlat
add
and
jb
bound
xchg
sbb
negl
push
rclb
sarb
out
inc
cs
adc
shlb
cmp
out
add
jb
out
mov
dec
xchg
sbb
lahf
dec
js
cmp
out
roll
add
xchg
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
