divb
in
mov
mov
test
inc
add
add
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
add
stc
out
aas
mov
test
je
cmp
pcmpeqd
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rcll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
adc
inc
cld
add
jmp
test
jne
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
icebp
jg
xor
cmpsb
icebp
mov
mov
call
pushl
mov
data16
adcb
data16
sub
push
lahf
add
andl
mov
clc
sbb
pop
push
sub
mov
hlt
cs
xchg
adc
mov
adc
test
mov
fcomps
sub
dec
sbb
jns
shl
in
or
dec
stos
mov
mov
hlt
or
pop
cmpsl
push
sbb
inc
mov
fwait
popa
xor
push
call
sbb
push
sbb
fcomps
pop
jle
call
inc
mov
lea
mov
adc
sbb
push
pop
pop
mov
iret
jbe
pop
xchg
sbb
ret
ja
enter
and
xchg
test
in
push
push
xchg
mov
inc
add
add
push
dec
cmp
and
add
or
in
scas
push
xlat
push
sbb
push
or
sbb
xchg
subl
sahf
add
sub
mov
aas
fadd
pop
scas
sti
mov
pop
push
jno
pop
or
push
push
sbb
outsb
or
sub
shl
jg
add
add
push
push
push
mov
lock
mov
aaa
xchg
xor
cmpsb
jmp
lea
xor
push
mov
cmp
cld
or
sbb
push
clc
jge
insl
jge
mov
mov
mov
xor
mov
pop
ret
push
scas
pop
movsb
xor
ret
push
pop
jae
mov
arpl
pop
inc
sub
pusha
or
or
clc
sub
enter
sarl
push
push
inc
ss
push
fadds
je
testl
pop
adc
loopne
pop
lods
inc
test
jne
sbb
out
add
jmp
cli
js
mov
cmp
jg
mov
adc
adc
ret
pop
dec
loopne,pt
add
movsl
pop
das
pop
pop
or
and
dec
xchg
hlt
sub
push
mov
sar
imul
cld
ja
adc
fisubrs
lock
dec
dec
clc
add
push
loop
cmpsb
jmp
pop
xchg
sbb
cmpsb
adc
sbb
sahf
leave
aam
enter
inc
push
orb
ret
ljmp
adc
cld
clc
fistpll
iret
jle
mov
cmpl
pxor
or
push
out
jmp
push
cmp
jge
imul
cmpxchg
stc
ss
jle
add
pop
cltd
jge
jl
insl
add
push
aam
push
sahf
lock
add
push
sub
filds
push
jne
test
incb
add
xor
fldt
mov
add
ds
mov
mov
or
adc
lea
js
adcl
mov
xor
into
mov
aam
mov
call
cmp
xlat
xchg
fistpll
cmp
cmpsl
mov
cld
fsubr
in
jb
lods
lea
stos
mov
cld
sbb
dec
loop
jge
test
jle
mov
mov
push
push
call
mov
fistpl
jle
ss
jo
cmp
push
push
test
mov
mov
loop
cmp
jns
sub
fsubr
mov
inc
sbbl
addl
mov
xchg
arpl
pop
sbb
lcall
sbb
adcb
and
sti
jbe
push
and
cmp
or
not
sbb
cmp
notb
shl
cmpsl
cmp
adc
cmp
jle
mov
inc
or
or
cmpl
je
push
cmp
cmp
jae
push
cmp
push
mov
inc
xchg
pop
pop
adc
ror
or
add
add
inc
push
sub
jb
pop
add
xchg
pop
std
notb
sub
ret
lea
ljmp
lcall
adc
push
push
sarb
cld
rcrl
mov
jmp
xchg
call
insb
or
addb
mov
pop
es
and
and
inc
sub
jo
cmp
aad
aaa
add
incb
rcrl
or
cmp
call
stos
sub
lea
cmp
jne
push
push
sti
mov
fdivp
push
push
pusha
in
js
scas
push
mov
mov
or
pop
pop
pop
pop
mov
push
mov
roll
testb
or
mov
jne
cmp
add
sub
push
add
xchg
ss
mov
in
jl
add
cli
add
aaa
push
mov
nop
sub
out
iret
fadd
push
mov
pop
fdivl
jnp
cmp
pushf
addl
test
add
cmpsl
mov
mov
stos
or
pop
push
xor
cmp
and
xor
sub
cli
movl
or
push
incb
xor
stc
mov
clc
sbb
je
cmp
fisubrs
lcall
sbb
pop
add
dec
lcall
mull
mov
jb
push
lea
push
cmp
or
or
imul
loope
loopne
push
push
mov
xor
or
mov
jae
loope
pop
sub
mov
add
mov
scas
inc
inc
add
cmp
add
ss
je
lock
push
bound
adc
out
or
jne
inc
out
insb
imul
bound
pop
mov
adcb
push
leave
jb
cmp
jno
ja
loopne
push
out
jbe
ljmp
push
arpl
push
adc
mov
fildll
push
sbb
call
arpl
in
pop
in
and
xor
add
or
xchg
out
jp
xchg
or
push
addr16
arpl
sub
push
xor
pop
fiadds
or
pop
addb
jp
mov
push
adc
inc
insb
rol
or
push
sub
or
add
test
or
and
stos
mov
mov
mov
or
push
push
xchg
sbb
lods
sbb
out
dec
ret
loopne
lds
pushl
push
inc
mov
inc
or
sub
call
sbb
cmc
mov
inc
lods
loopne
sub
add
outsb
mov
cmp
xor
fs
add
jg
sbb
xor
ror
lock
in
push
inc
mov
frstor
mov
in
dec
out
lock
xlat
in
mov
inc
and
mov
add
idivl
sbb
cmpsl
andl
add
pusha
add
mov
adcb
nop
popa
outsb
pop
popf
lret
push
pop
or
pop
adc
cs
sbb
nop
dec
nop
lock
daa
xchg
add
mov
lret
mov
dec
and
mov
adc
pop
and
pop
fcmovnu
sub
js
and
adc
popa
add
iret
ds
mov
sbb
and
sbb
inc
inc
adc
push
mov
xlat
andb
add
cmp
rorb
adc
sarb
or
jle
dec
clc
insb
sbb
bound
cmp
mov
push
and
jl
mull
mov
and
adc
mov
push
push
jl
jp
lods
or
decl
adc
lahf
adcb
cmp
movsb
repz
aaa
lret
push
lock
sbb
adc
bsf
cmp
mov
movb
js
jl
ret
pop
adc
test
fmuls
and
pop
mov
xchg
out
cld
xor
addr16
or
dec
addr16
push
pop
jp
xor
xchg
push
fs
and
xor
and
or
sbb
dec
mov
inc
rcl
or
xor
mov
nop
and
sub
pop
cltd
push
or
and
adc
and
out
inc
jno
xor
jmp
mov
in
jae
add
mov
out
and
mov
cmp
out
aad
and
fstp
xchg
adc
push
push
or
mov
bound
dec
sbb
clc
lea
orb
adc
dec
das
xor
add
dec
loopne
in
sbb
sbb
cmp
push
mov
testb
and
mov
cmpl
in
or
inc
in
jne
push
insb
scas
jo
sbb
imul
push
mov
sub
pop
or
test
insb
fmulp
add
push
jbe
jmp
mov
or
push
push
pop
mov
in
and
fsubl
mov
push
adc
xlat
loopne
call
outsl
push
mov
sarl
pop
daa
out
cmp
and
loope
and
loopne
addl
fs
cmpsl
in
sub
sahf
js
ret
push
xor
ficompl
pop
xchg
dec
aam
jge
push
cld
das
cmp
xchg
outsl
xorl
lock
add
enter
loopne
movl
cmp
int3
cmp
fildl
lea
cld
mov
fistpll
fimull
jle
test
push
push
mov
in
sarb
jecxz
push
ljmp
mov
jmp
xor
push
pop
js
inc
pusha
lea
insb
push
je
in
sub
push
fildll
mov
xchg
add
ret
nop
mov
test
test
addr16
and
jno
mov
test
push
repnz
ljmp
mov
mov
cmp
neg
sbb
pop
mov
nop
out
jg
inc
je
push
fmulp
into
stos
and
cmp
pop
inc
les
leave
xchg
nop
aam
xchg
and
cmp
mov
lret
pushf
or
pusha
dec
mov
mov
mov
lock
or
sub
mov
sbb
out
das
cmpl
sub
in
xchg
xchg
cmp
jb
add
push
mov
ror
daa
mov
jge
jl
daa
arpl
mov
jge
jmp
pshufw
mov
mov
shrb
push
xor
sub
clc
inc
shrl
push
jo
neg
repnz
sbb
mov
jge
out
mov
inc
sub
fs
mov
xchg
mov
aaa
pusha
pop
test
adc
xchg
test
xor
and
cmp
int3
push
int3
int3
enter
insb
les
push
mov
les
mov
sbb
pop
arpl
inc
mov
xchg
cmp
lods
sub
push
mov
add
clc
movsb
jmp
shlb
sbb
mov
cmp
mov
shll
mov
jo
sbb
lods
test
mov
add
cmp
sub
add
sbb
or
fdivs
enter
sbb
jnp
jo
mov
jge
jmp
inc
mov
imul
push
hlt
push
addb
sub
and
mov
pop
push
xor
sbb
push
test
mov
add
add
jb
inc
enter
lock
faddl
lea
out
aam
push
cmp
popa
rorb
roll
inc
add
push
test
and
inc
cvtdq2ps
add
adc
mov
loope
xor
and
mov
sti
dec
punpckhwd
jae
mov
ficoms
jmp
sub
test
dec
call
jne
add
test
and
mov
xor
stos
xor
jl
jg
and
and
jae
cmpl
push
adc
and
std
or
xor
daa
add
out
out
lcall
or
dec
in
scas
jmp
data16
loopne
jle
pop
jne
mov
fcmovne
add
insl
add
nop
loopne
mov
insl
imul
shll
ja
or
inc
mov
inc
or
adc
xor
sbb
das
jge
fcoms
and
jl
imul
mov
jl
mov
jne
dec
push
nop
or
add
jecxz
inc
inc
repnz
mov
sub
mov
adcb
dec
sbb
ljmp
shrl
and
mov
jno
shrl
insl
rcrb
adc
cmc
es
inc
and
ret
rcrb
inc
adc
jecxz
sarb
push
adc
imulb
imul
sub
push
fsubrs
iret
clc
iret
movsb
and
add
fistpl
push
jno
mov
cmc
shlb
mov
add
ds
xor
sbb
dec
nop
xchg
sbbl
mov
cmp
je
lcall
les
sbb
fbld
xchg
pop
packssdw
jo
addl
sbb
maskmovq
testl
cmpsb
popf
addb
add
add
rclb
pop
sti
push
or
lock
xorb
ficompl
mov
cmp
pushf
in
in
and
loopne
and
das
xchg
dec
adc
mov
ds
pop
loopne
push
jle
or
add
nop
inc
push
cmp
xor
loope
xchg
leave
xor
cmp
xor
xor
pop
hlt
je
addr16
imul
push
test
push
mov
pop
inc
das
lds
adc
es
rcll
data16
fdivrp
popa
push
pop
mov
jmp
rorb
arpl
push
sahf
sub
mov
add
xor
and
push
xchg
stos
inc
fs
dec
add
jb
mov
bound
xchg
lds
inc
ud2
or
jae
inc
addr16
xorl
xchg
add
es
xchg
mov
cmp
divb
imul
decb
je
push
inc
mov
and
push
addl
test
into
dec
mov
repnz
fldt
pop
nop
mov
ficoml
sub
push
test
dec
popa
das
sbbb
enter
ret
inc
lret
ret
test
fistps
shlb
xor
jle
lods
pop
shrb
stos
add
adc
cmp
inc
pop
ss
iret
out
pop
aas
insb
cmp
into
xor
aaa
xor
adc
inc
in
ficoml
movsb
mov
loope
or
push
frstor
jne
or
mov
xor
push
stc
mov
sbb
xor
mov
lods
adc
cmp
and
or
jecxz
xor
mov
adc
push
ss
xchg
inc
push
mov
ret
pop
sub
inc
dec
push
push
mov
mov
mov
adc
fmull
add
or
or
mov
fsubrs
popf
cmp
mov
and
mov
xor
push
aaa
sub
cmp
cvtps2pi
push
push
enter
flds
das
push
push
test
pop
xchg
iret
inc
out
popa
or
ret
xor
xor
xchg
mov
sti
xchg
dec
xlat
xor
push
cmp
push
and
push
call
sbb
outsl
inc
xor
mov
pop
outsl
loopne
mov
aam
cmp
ds
jae
mulb
add
and
xor
pop
xchg
inc
xacquire
push
sbb
pop
ss
scas
ds
ret
push
add
rcll
sub
ds
faddl
sub
xor
inc
sahf
sub
lock
and
test
test
and
data16
mov
push
push
loop
outsl
dec
and
loop
lods
inc
mov
inc
xor
xor
fistpll
pusha
sub
mov
popf
cmpsl
mov
jbe
mov
pop
push
loope
jo
mov
cmpsb
addr16
fwait
pop
rorb
xchg
mov
aas
jns
mov
add
mov
push
mov
xchg
les
loopne
mov
and
mov
pop
xor
ret
push
add
push
jo
dec
fstps
nop
in
and
sbb
dec
cmpl
pop
in
push
push
push
add
jno
sub
or
inc
mov
jecxz
xor
ret
jne
push
sub
mov
cmp
mov
sub
stos
add
sub
ds
inc
mov
sbb
xor
or
inc
inc
sahf
test
xor
xchg
add
stos
and
loop
ret
mov
js
add
stos
mov
or
or
add
or
sbb
xchg
cmp
faddp
fucomip
adc
push
inc
cwtl
pop
popf
movsl
mov
mov
in
loopne
sbb
push
mov
lock
inc
lock
jns
cmp
call
addl
loope
into
adc
sub
mov
push
in
dec
bound
mov
mov
push
xchg
inc
out
pushf
sarb
pusha
movsb
mov
xor
outsb
jb
scas
jbe
inc
inc
cmp
jne
or
je
sub
js
outsb
lock
mov
loopne
xchg
push
das
mov
sub
loope
push
ficoml
pusha
push
in
faddl
dec
mov
out
add
or
add
call
out
xchg
jne
or
xchg
cmp
lret
sti
lea
add
xor
call
inc
lock
rolb
sub
repz
je
incb
push
push
jnp
jbe
push
cld
sub
loop
out
inc
cmp
aas
inc
out
jno
inc
push
fistpl
rolb
mov
adc
aad
shll
jnp
mov
leave
jp
push
mov
or
imul
cld
dec
clc
jg
pop
mov
xor
les
or
xlat
ds
pop
push
cld
inc
int3
add
mov
or
dec
dec
mov
fsubl
call
inc
sub
and
hlt
push
rclb
in
mov
test
adc
lds
adc
sti
pop
decl
je
sub
jmp
jge
imul
push
jmp
add
adc
cli
mov
das
gs
in
lret
int3
xlat
sub
cmp
int3
lock
push
test
mov
aaa
andb
rcl
cmp
sti
or
mov
out
aas
inc
mov
xor
xor
mov
je
cmpsl
or
push
mov
xor
inc
mov
sarl
adc
cmp
addr16
mov
jl
ret
jle
jmp
mov
mov
pop
add
das
fdivs
inc
mov
sub
in
loopne
icebp
pop
push
cmp
mov
mov
push
mov
test
rcrb
add
push
push
xchg
data16
stc
incb
aaa
cmp
daa
or
imul
push
filds
inc
fbld
jne
push
into
mov
cld
xchg
cmp
push
pop
add
jge
cmp
add
push
mov
jmp
pusha
fdivs
or
popa
rorb
js
xchg
jmp
cwtl
nop
xor
xor
cs
popa
and
or
pop
sbb
fisttpl
jecxz
mov
mov
movsb
rcrl
push
push
add
test
push
add
cmpb
imul
enter
call
les
sub
inc
sysret
jle
js
push
sbb
scas
and
sbb
inc
dec
jae
push
or
shll
icebp
sahf
fsubrs
jg
add
aam
lods
pop
jge
mov
and
pop
int3
into
jg
fmull
mov
in
push
clc
adc
push
inc
jecxz
xor
push
gs
inc
cwtl
test
fmull
lock
mov
loopne
dec
ret
mov
ja
sbb
lock
dec
rorl
fidivl
fdivrs
je
mov
mov
mov
jb
insl
mov
sbb
ss
movsl
add
xchg
jne
sbb
shrl
shl
iret
loope
push
sbb
fdivl
push
push
call
mov
adc
addl
test
iret
pop
aas
and
add
mov
pop
call
pop
in
mov
inc
aaa
push
or
jge
leave
mov
jl
ret
push
push
add
xchg
scas
insb
adc
sbb
je
mov
loopne
sbb
dec
adcb
rorl
dec
bsf
ret
mov
in
inc
mov
adc
add
jle
push
pop
shrb
add
xor
mov
push
mov
mov
or
nop
rcrb
sbb
cltd
xchg
xchg
xchg
mov
adc
aam
and
lock
push
jo
shrb
cmp
je
pushl
call
js
fsubs
sbb
ret
shr
movzbl
push
adc
push
ret
push
shlb
push
inc
push
mov
dec
mov
mov
jle
cmp
sti
dec
popf
cmp
jg
movsl
jno
or
mov
cli
inc
mov
in
pop
pop
push
or
gs
pop
xor
ds
aas
sbb
fcmovne
pop
out
pop
mov
pop
or
add
mov
sbb
jmp
test
mov
jle
push
jmp
mov
decl
jg
mov
mov
jmp
les
leave
fcompl
je
fstpl
add
imul
mov
testb
push
std
into
enter
scas
adc
pushf
aaa
in
sub
jno
xchg
add
sbb
or
xchg
cli
sbb
push
ret
test
jmp
mov
push
jns
xor
pop
push
std
in
and
cmp
sbbb
sbb
cmpsb
cmpsb
cs
je
push
sahf
push
aam
idiv
inc
dec
in
mov
lea
cmp
jae
mov
incl
pop
sbb
add
dec
mov
fs
inc
add
loop
jge
outsb
jp
mov
add
pop
clc
or
clc
add
int3
pop
or
loope
sarb
fistpll
and
push
cmpsb
dec
int3
imul
sbb
mov
dec
icebp
ret
lcall
fisttpl
mov
pop
xor
dec
add
lea
and
divb
push
pop
or
push
fs
loope
sbb
xor
ret
xor
out
xchg
and
fs
inc
lock
mov
mov
mov
push
cmpsl
mov
dec
ret
xchg
xorb
rcrl
and
fldenv
gs
clc
xor
hlt
clc
xor
xchg
je
test
js
push
movsl
dec
pop
cmpsb
jg
in
xor
adc
cld
je
sub
dec
jmp
cmpl
push
inc
inc
and
xor
fdivs
jmp
dec
inc
cmp
push
sbb
in
push
or
test
push
movb
jmp
dec
jecxz
ret
push
mov
mov
hlt
jl
repz
loop
dec
shr
push
or
dec
push
push
push
cmp
mov
loope
inc
cmp
jno
fildl
lahf
mov
iret
jno,pt
push
jbe
add
cld
orl
mov
push
xchg
mov
and
xorb
pop
hlt
lea
outsl
add
sbb
inc
in
stos
cmpsl
pop
mov
sbb
inc
scas
add
inc
in
mov
pop
push
cli
rep
push
mov
pshufw
mov
and
out
cmp
sbb
scas
sti
mull
push
sub
jmp
movl
mov
cmp
pop
add
test
add
adc
adc
popf
neg
aam
insb
adc
or
ljmp
je
push
and
adc
add
addr16
sbb
jb
jne
push
dec
adc
sarl
filds
jmp
sbb
pop
stos
sub
pushl
sub
clc
jne
cmp
je
pushl
movb
test
hlt
inc
imul
or
and
sbb
mov
sbb
mov
xchg
jmp
shrb
xor
sbb
sub
setne
rclb
and
add
cs
xchg
add
insl
pusha
cmpb
adc
js,pt
push
rcrl
jo
jg
mov
jbe
orb
ss
daa
mov
pop
nop
push
shld
lods
ss
ret
aaa
inc
inc
mov
cmp
fnstenv
cli
je
sbb
cmp
jne
int3
add
roll
inc
ret
cmc
popf
sahf
add
pop
push
mov
and
cmp
nop
dec
aad
clc
out
sbb
push
loopne
hlt
hlt
push
mov
rolb
add
add
xor
jnp
in
add
add
cmp
pop
push
or
pop
sbb
sbb
xchg
cli
icebp
push
jecxz
pop
hlt
sub
outsl
xorb
or
add
push
jecxz
mov
sub
mov
lret
ret
pop
or
add
insb
cld
cmp
lea
jbe
insl
fadds
into
push
push
test
push
adc
cmpsl
fisttpl
or
add
add
push
movl
jno
add
adc
dec
add
adc
addr16
loop
xlat
movaps
jno
outsb
stos
es
ds
mov
jge
adc
enter
sbb
jecxz
enter
jo
clc
and
dec
mov
lea
xor
ror
bound
sub
scas
mov
mov
inc
shr
pusha
idiv
push
das
push
lods
and
mov
loope
lret
cmpl
xchg
lods
mov
push
or
cmp
imul
in
incl
mov
lods
loopne
shrl
mov
fldt
cmc
mov
xorb
imul
rolb
cmp
fadds
mov
loop
mov
mov
and
jne
call
mov
mov
cmp
fsubrs
push
jns
test
cmp
add
jae
xor
sub
add
js
push
jns
xor
inc
cs
shrb
loopne
sbb
inc
loopne
inc
aad
xchg
clc
mov
mov
push
push
rol
jl
cmp
aas
rcll
pop
pop
das
mov
pushf
dec
cmpsb
jmp
sub
pop
nop
cmp
aas
enter
adc
push
dec
aas
in
movsb
add
adcl
mov
in
ret
insb
xor
pop
add
and
adc
icebp
mov
rcll
imul
push
xor
pop
sbb
mov
pusha
mov
push
or
push
or
mov
xchg
dec
mov
hlt
js
stos
and
and
inc
sub
movsl
mov
inc
cmp
in
jmp
imul
aam
add
andb
mov
and
loope
lret
sub
add
in
lock
add
lods
stos
lock
cltd
rolb
push
xchg
add
leave
enter
and
pop
mov
cmp
dec
inc
adc
aas
rolb
rolb
inc
sbb
scas
imul
inc
sbb
push
push
push
das
push
xor
and
add
push
cmpsb
dec
dec
mov
inc
and
gs
or
lcall
cmp
and
push
lea
in
pop
daa
adc
sbb
adcl
mov
adc
sbb
and
mov
push
and
jbe
in
sbb
sbb
sbb
prefetch
push
shlb
sub
pop
adc
inc
push
push
lret
icebp
ss
mov
loopne
or
ja
xchg
sub
jg
mov
or
je
cmp
popf
cmpl
mov
cmp
mov
mov
in
shrl
pop
negl
mov
mov
sarb
roll
jle
push
push
vandpd
sbb
push
pop
mov
push
fldl
aas
sub
pop
les
xchg
push
push
push
sub
jg
sahf
pop
pop
inc
mov
jne
jnp
loope
sub
dec
je
mov
je
sub
test
push
push
fisttpll
mov
jecxz
enter
mov
mov
lcall
leave
jmp
cmpsl
into
cs
jecxz
jne
push
lock
xorl
call
repnz
pop
rcl
or
lea
inc
push
fimull
mov
xor
or
pop
mov
push
mov
pop
pop
cltd
cmp
mov
or
and
aas
pop
jle
adc
insb
push
xor
std
loope
push
push
daa
pop
pushl
js
cs
adc
rcrb
lea
movsb
mov
jmp
mov
not
mov
shlb
sbb
jae
mov
imul
jmp
inc
sbb
out
xor
leave
adc
cli
mov
sbb
fsubrl
out
fstpl
imul
je
into
jle
rclb
jmp
and
mov
or
sbb
mov
pop
out
push
dec
push
pop
jns
out
push
outsl
mov
dec
repz
or
mov
rorl
add
pushw
and
mov
sub
repnz
sbb
inc
sbb
fstl
dec
mov
enter
pop
adc
sub
push
lret
test
rorb
fmuls
pusha
add
movb
lret
jae
xchg
xchg
adc
mov
jecxz
inc
loop
add
inc
push
mov
mov
push
lea
push
lea
push
push
push
push
add
push
lea
push
mov
and
cmp
inc
inc
cmpsb
add
dec
mov
inc
test
int
inc
stc
cltd
lahf
jl
iret
mov
mov
ja
lahf
rorb
jbe
movl
jge
pop
add
out
adc
cmp
jle
sbb
lock
movsb
sbb
xchg
xor
push
xchg
das
imul
cmpb
add
jl
inc
xor
add
into
sub
dec
dec
repnz
push
insb
xor
push
pop
popa
push
xor
mov
loopne
outsl
faddl
cld
sbb
movl
jo
stos
jno
jle
push
clc
pop
dec
ss
push
xor
jmp
pusha
pusha
inc
cmp
pusha
and
mov
mov
movl
dec
add
jnp
arpl
or
out
push
xchg
sbb
insb
inc
mov
add
push
or
jae
mov
xchg
inc
push
push
or
add
nop
sbb
repz
call
mov
inc
test
test
inc
rcl
add
and
cmp
xchg
movsb
xchg
data16
xchg
cs
push
test
aam
mov
pop
sub
sbb
cmp
push
push
cmp
mov
cmp
jl
pop
dec
imul
rolb
pusha
sub
push
call
jl
sbb
outsb
ffreep
jecxz
jbe
ret
cli
jne
ret
dec
lret
test
js
js
push
xchg
pop
mov
popa
aam
push
aam
das
in
or
and
dec
xchg
int3
push
mov
movsl
cmp
add
fcoml
or
dec
fildl
cmp
mov
mov
inc
add
mov
push
fdivl
movsb
popa
inc
inc
fdivr
ret
push
imul
mov
ret
data16
xor
jecxz
mov
cmp
jne
push
sub
xor
push
jo
inc
pop
fdivrs
sub
xorb
push
iret
je
lea
push
fiadds
enter
mov
mov
add
outsb
push
sbb
cmp
out
cmc
pop
pushl
call
push
or
adc
insb
xor
in
or
jns
cmp
les
shrb
fisttpl
mov
push
mov
lock
dec
je
filds
addr16
push
cmp
je
rcll
push
sub
sub
lcall
es
dec
in
insl
mov
push
mov
add
mov
inc
adc
inc
dec
cmp
adc
xor
rsm
xchg
lock
or
or
rcr
stos
lea
shl
push
in
mov
outsl
enter
fadd
and
mov
sub
cmp
adc
add
lock
mov
jae
jp
and
inc
sub
mov
or
movsb
in
sbb
dec
dec
lods
jnp
xor
cmp
or
idivb
sbb
sub
loopne
dec
outsl
xlat
inc
imul
loope
or
neg
sbb
and
push
push
lds
sahf
mov
jbe,pn
je
mov
out
pushf
in
push
aaa
test
cmp
mov
sahf
jl
xlat
adc
aam
mov
cli
lea
lods
and
das
adc
mov
stos
adc
punpckhdq
jmp
push
jne
jmp
pushl
and
or
jno
xchg
test
dec
pop
mov
jo
pop
xor
test
rolb
loope
jae
shl
idivl
dec
es
lcall
adc
adc
ja
sarl
mov
cmp
sbb
push
adc
andl
fadds
mov
inc
int3
adc
add
insl
mov
fmuls
and
dec
jns
cmc
add
and
insl
inc
scas
aas
mov
cmp
je
cmp
ret
fldcw
rcrl
push
dec
xchg
data16
cmp
or
in
xchg
add
adc
mov
adc
cs
push
cs
cmp
xor
clc
xor
icebp
incl
jne
movb
jmp
jl
mov
cmp
jne
jae
fldz
xor
adc
cwtl
adc
push
mov
xchg
fcomip
cmp
mov
push
adc
test
jle
stos
aam
sub
imul
jge
cmp
test
and
loopne
or
popf
sub
mov
cmp
push
dec
or
sbbb
cmp
sbb
mov
into
push
leave
push
sbb
push
pop
aam
mov
orl
fidivrs
push
sub
push
adc
enter
cltd
icebp
and
or
push
xor
push
pushf
hlt
jl
shlb
add
add
lret
test
dec
addl
cmp
into
gs
imul
push
push
push
lea
xor
mov
cmp
xchg
xchg
add
push
jo,pn
scas
sarb
xchg
mov
pop
jbe
out
push
push
lret
jl
xchg
in
out
andb
jbe
xor
inc
mov
push
das
inc
jge
mov
test
test
sbb
aaa
bound
pop
cmp
out
icebp
mov
inc
pusha
fmull
dec
pop
push
popf
and
sub
push
add
rcll
mov
movsl
and
fdivl
adc
adc
cltd
cli
les
sub
fiadds
dec
dec
fsubrp
mov
inc
add
js
mov
add
insb
inc
jae
mov
pop
movsb
popa
in
and
loopne
ds
push
mov
andl
jge
pushf
outsb
int
adc
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
and
shl
pop
test
adc
cs
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
test
out
pop
push
call
arpl
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
decb
add
pop
xor
push
call
jmp
fs
popa
add
xchg
lret
cltd
sub
push
mov
xor
movsb
sbb
daa
out
jo
or
cmp
mov
inc
lea
and
mov
insb
jp
insb
rclb
mov
push
icebp
vxorps
or
xor
paddb
incl
lea
push
iret
div
sar
orl
xor
xor
jg
test
cmp
jge
mov
outsb
mov
idiv
push
mov
push
push
mov
mov
push
ret
xor
idiv
ljmp
cli
sub
jg
mov
sub
add
adc
fmull
loope
pusha
scas
pop
bound
jno
sti
mov
fadd
lds
add
aam
jae
lock
adc
or
out
popa
mov
add
fstpl
push
pop
insb
aas
push
mov
sub
clc
je
jg
xorb
sbb
mov
and
jp
xor
pop
xchg
or
pusha
js
fistpll
popa
jg
fs
sub
jl
movl
adc
test
stos
int
dec
mov
lahf
xor
std
pop
int
pushf
movb
sbb
sbb
test
dec
lea
loop
mov
iret
ds
xchg
sub
cmp
or
xlat
std
scas
nop
or
out
insb
mov
cli
mov
inc
hlt
mov
test
jns
faddl
or
or
or
enter
fdivrp
mov
sub
rcr
lea
mov
pop
add
inc
lret
hlt
mov
inc
les
movsl
shl
jmp
into
push
ss
jb
jge
je
into
clc
fidivl
jmp
loopne
xor
push
xchg
cli
cli
sbb
pop
push
pop
mov
pop
jne
pop
pop
movb
push
xor
shrb
xchg
jmp
inc
xchg
mov
xlat
aam
add
mov
stos
pop
push
mov
cld
inc
aam
clc
lea
dec
xlat
and
cmpsl
add
push
jmp
arpl
mov
bound
imul
jecxz
pop
and
and
rclb
push
xchg
dec
xchg
pop
mov
mov
into
pop
leave
dec
loope
xchg
pop
xchg
push
dec
cmp
cmp
call
sub
xor
push
and
ror
mov
cltd
add
cmp
repnz
push
jl
imul
fs
loope
pop
iret
addr16
sbb
jne
cld
lock
js
cmp
hlt
loop
sbb
mov
push
movsb
lods
mov
adc
push
cmp
pop
leave
xor
add
scas
sbb
push
mov
add
jo
lea
push
mov
push
mov
in
pop
in
lea
add
adc
negl
int3
test
or
dec
or
add
fs
mov
dec
inc
rcr
aad
sub
fs
andl
add
xor
subl
add
outsl
pop
add
adc
mov
mov
fldt
fcmovnu
addr16
nop
dec
push
sbb
push
pop
push
mov
cli
jo
ds
cli
cltd
lods
repnz
imul
out
pop
dec
add
dec
pop
xlat
and
and
push
movsl
jo
pop
test
mov
addr16
dec
or
or
fisttps
dec
push
cmp
daa
cmp
dec
aaa
and
mov
nop
out
fisubl
mov
pusha
arpl
and
or
push
push
inc
mov
es
fs
inc
inc
loopne
push
clc
icebp
inc
sub
pop
push
add
push
mov
clc
setb
lock
loopne
test
enter
enter
ljmp
xor
dec
adc
data16
push
lea
push
mov
push
xorb
testb
jne
cmp
pop
pop
lcall
add
or
insl
dec
in
add
add
jo
jl
dec
mov
mov
jecxz
push
mov
hlt
mov
sbb
sub
scas
xlat
inc
stc
mov
fcmovnbe
push
inc
lock
in
xlat
das
push
mov
jp
pop
mov
test
sarb
push
cmp
jl
mov
add
fdivrl
sbb
les
icebp
sub
fadd
cmp
add
icebp
sbb
shr
mov
add
mov
inc
pop
shrl
mov
das
clc
test
jne
sub
enter
add
stos
bnd
add
pop
rolb
out
das
xor
jmp
jp
add
xor
adc
push
adc
cmp
inc
inc
in
aas
jmp
test
nop
sbb
fs
sbb
pop
pop
pop
in
clc
pop
test
lock
nop
push
movl
mov
popa
or
cmp
out
inc
dec
in
pop
sub
add
add
xchg
mov
shl
lret
mov
jmp
dec
sbb
iret
aam
sub
inc
sbb
les
inc
xor
bound
pop
call
sub
imul
enter
push
enter
inc
mov
clc
pop
add
in
rolb
fdiv
cmp
dec
adcl
sub
add
pop
sbb
insb
fmull
xchg
call
or
pushl
pop
fsubrl
call
jae
and
add
pop
les
mov
scas
pop
push
dec
mov
add
int3
test
add
add
add
mov
sbb
adcb
or
data16
pop
dec
gs
in
and
push
fldt
or
pusha
xor
rolb
push
inc
xlat
mov
pop
push
or
and
imulb
push
cmp
and
pop
or
dec
sub
or
push
adc
out
iret
dec
push
mov
xor
in
dec
sbb
jge
sub
inc
cmp
jb
mov
pop
inc
jnp
mov
fistpll
imull
and
mov
nop
adc
jg
mov
mov
leave
jo
push
or
pop
jl
ret
adc
adc
ja
push
cmp
movsl
sub
pop
mov
or
decl
pushf
ret
je
in
jae
cmp
mov
mov
ja
test
je
cmp
push
dec
mov
jmp
dec
mov
sub
pop
dec
insb
js
push
mov
mov
jae
dec
add
add
pusha
shlb
push
cmpsl
xchg
xchg
sub
mov
sub
sar
fmulp
js
cmp
jge
mov
mov
jl
add
pushf
mov
sbbb
cmp
jle
imul
xor
loopne
cmp
mov
cld
mov
lods
sub
pop
std
push
and
adcb
cmp
xchg
and
push
inc
push
pop
movsb
jp
and
lcall
scas
mov
sti
enter
jle
je
dec
mov
cmp
in
mov
ds
pop
jo
sub
inc
sete
or
scas
data16
loope
and
je
movsl
push
push
push
and
stos
push
or
imul
jnp
sbb
adc
les
sbb
enter
adcl
sahf
pusha
add
mov
inc
push
bnd
and
pusha
mov
repz
add
aam
pop
lock
dec
clc
push
rolb
sbb
add
or
nop
mov
xlat
cmp
loope
mov
xor
mov
fwait
movsb
add
push
daa
leave
jle
and
mov
daa
shrb
ja
into
xchg
jo
adc
fdivs
mov
sub
add
adc
fsts
ss
cmp
adc
fmull
call
sub
daa
push
pop
nop
pop
pop
popa
push
or
out
insb
mov
adc
mov
repnz
cmp
jne
test
and
sbb
nop
out
push
pop
pop
adc
xchg
pop
mov
mov
ret
popa
xorb
adc
mov
or
in
pop
sahf
jo
repz
in
call
sbbl
in
and
pop
clc
jl
popa
aas
sahf
rclb
or
mov
or
stos
and
lds
stc
jle
dec
jno
subb
add
add
idivl
imul
adc
addr16
and
jo
xchg
shlb
stc
cmp
add
add
dec
and
xchg
fcoms
xor
cmp
fisttps
je
sub
movzwl
jo
inc
mov
es
push
push
fstpl
test
ds
cmp
cmp
jecxz
movb
cmp
push
mov
fidivrl
xor
call
into
clc
aam
mov
pop
test
push
sbb
mov
ss
jecxz
lahf
outsl
outsb
adc
movb
mov
add
addr16
mov
decb
fnstenv
add
rcrl
add
or
xchg
add
popf
mov
mov
sbb
nop
mov
je
push
push
stos
and
mov
mov
xchg
jp
lea
adc
mov
jbe
mov
xor
xor
inc
cmpsl
mov
mov
jns
loop
stos
add
add
push
das
mov
adc
sbb
repz
push
mov
inc
inc
cltd
xchg
push
sub
push
subl
ret
lods
jle
push
lea
andl
or
pop
xorb
loopne
cmpsb
push
xchg
lock
clc
addr16
movl
mov
inc
stc
xchg
dec
sub
add
pop
and
sub
cli
xchg
push
icebp
inc
xor
xor
push
mov
les
cmp
push
inc
push
jecxz
repz
cmpb
xchg
push
mov
movsb
outsl
jb
mov
adc
leave
mov
xorb
jb
das
out
xchg
inc
sbb
addl
aam
inc
mov
mov
and
push
sbb
ret
lods
test
push
mov
sahf
jbe
loopne
add
js
push
test
xlat
xor
ret
sti
aad
cmp
inc
sti
ds
shrl
and
sbb
call
stos
ficoml
xor
or
cmp
push
js
xorb
xchg
fiadds
jne
dec
mov
and
test
cmpsl
enter
fwait
inc
push
xor
adc
ret
mov
push
adc
push
dec
dec
sbb
iret
sbb
ja
jbe
jb
das
clc
cmpb
cmp
add
add
or
jae
aad
jns
or
nop
sub
mov
sbb
jp
cmp
or
ljmp
pop
dec
add
in
pop
repz
or
push
inc
adc
in
rol
jo
scas
mov
sbb
adc
cltd
hlt
gs
inc
adc
add
adc
and
add
adc
test
fstps
push
and
adc
adc
sbb
subl
inc
sbb
inc
or
data16
shrb
pop
sbb
sub
movsb
or
mov
loopne
pop
stos
mov
jle
push
loopne
mov
lret
or
mov
loopne
adc
test
jmp
inc
js
pavgw
cmp
movsb
fldl
popf
jl
inc
lock
mov
ficoml
add
xchg
lea
mov
xchg
popf
jg
ja
repz
lea
in
inc
sub
pop
sbb
pusha
subl
outsl
jbe
mov
std
add
mov
rorl
hlt
das
adc
leave
aad
mov
fdivr
mov
movsb
movsb
imul
mov
or
push
xchg
aad
fwait
adc
mov
pusha
lods
xchg
rdmsr
mov
clc
jge
xchg
mov
sbb
mov
dec
jo
call
push
or
lods
and
add
shrb
xchg
sub
mov
cmp
loope
sbb
out
pop
icebp
sbb
mov
cld
pop
inc
lods
lea
cmp
sbb
rclb
fidivl
cmp
dec
movsl
in
lods
jno
jle
xchg
mov
fldcw
push
jb
fldt
and
inc
roll
mov
aad
test
jp
mov
push
xchg
mov
mov
daa
pop
jbe
inc
pop
fnsave
jne
push
lea
ret
adc
pop
addl
jmp
dec
je
push
xor
int
and
cmp
je
jmp
pop
enter
iret
xor
pop
push
inc
out
adc
or
andb
dec
add
xchg
sbb
push
push
leave
loope
int
popf
int
js
or
ja
jnp
mov
in
xor
negl
pusha
orl
push
mov
sbb
aaa
xchg
fs
xor
add
inc
mov
add
mov
jp
push
mov
pop
xchg
pop
pop
xchg
adc
rcrl
jne
xchg
fnsave
adc
das
xor
lret
adc
aaa
ljmp
jl
xor
stos
imulb
mov
dec
adc
inc
or
sahf
insb
jl
mov
push
jp
testb
push
mov
push
jae
pop
mov
test
scas
push
adc
ljmp
inc
xchg
add
push
lock
fists
dec
mov
cmp
xor
sub
cmp
leave
xchg
outsb
into
aas
mov
cmp
in
add
push
adcb
jg
sbb
das
adc
xchg
mov
lock
sub
movsl
jb
and
test
shl
sbb
adc
sub
pushfw
mov
push
add
loopne
out
cmc
xchg
mov
add
and
add
jo
in
cmp
mov
cmp
pushl
pop
pop
mov
mov
cmp
arpl
mov
sti
sbb
mov
ja
mov
fdivr
insl
sub
enter
xchg
xor
shll
shll
bound
mov
mov
or
cmpsb
aam
test
jg
or
or
outsl
lea
push
xor
sbb
into
mov
pop
jg
xor
jmp
xchg
xchg
push
jb
ss
push
mov
push
mov
push
jmp
sbbl
push
inc
sub
hlt
aam
inc
sub
test
mov
js
jp
out
push
dec
sub
mov
leave
mov
lret
test
mov
xchg
or
or
mov
adc
ljmp
mov
loop
andl
add
and
ja
adc
or
popa
arpl
rcrb
xchg
and
call
jns
gs
cmp
pop
fiadds
fsubrl
lea
xchg
fmul
fadds
jno
jns
loop
inc
nop
aaa
les
sldt
xchg
pushf
mov
xor
jne
cmp
repnz
adc
dec
or
pusha
xor
das
add
mov
lods
loope
jmp
iret
adc
dec
push
xchg
cmp
adc
add
lods
subl
ljmp
shlb
mov
mov
mov
inc
pop
adc
lret
leave
pop
sub
inc
push
insb
xor
pop
loop
xorb
in
mov
pop
or
mov
imulb
rorl
or
push
addr16
jp
xor
data16
inc
mov
and
mov
daa
fadds
outsb
loopne
lds
and
xchg
xchg
and
movl
movsl
shll
pop
loope
add
stc
pop
fwait
dec
rolb
adc
sahf
add
test
int
add
ret
js
adc
adc
sahf
xor
dec
pop
popa
testl
rcll
movl
push
dec
mov
ret
dec
iret
xchg
pop
pop
push
and
test
inc
pop
push
shrl
pop
add
jmp
push
mov
and
pusha
dec
dec
es
mov
or
xchg
or
sbb
sbb
stc
in
outsl
pop
inc
cs
jno
add
push
jno
mov
mov
mov
lmsw
push
pop
cmp
movsb
push
mov
or
andb
ss
and
cmpsl
and
mov
xchg
out
js
xchg
rorb
imulb
push
push
pop
inc
jo
add
test
stc
and
sbb
jge
and
pusha
inc
pop
insl
and
das
gs
mov
inc
sub
mov
mov
cmp
sub
and
repz
dec
iret
les
sub
nopl
or
xchg
cmp
push
movsl
xorb
mov
jge
sub
ja
mov
fldl
xchg
sub
aas
aam
sub
daa
das
nop
popa
call
xor
lcall
xchg
xor
in
and
into
mov
repnz
int3
xor
dec
adc
pop
sqrtps
fsubr
nop
cwtl
cmp
adc
loop
fs
jge
sub
push
repnz
fdivr
sarb
xor
add
mov
mov
cmp
pop
je
lcall
xchg
out
dec
or
mov
pop
mov
jp
push
xchg
gs
fmuls
sub
cltd
mov
test
loope
ljmp
mov
js
add
push
push
neg
and
or
cmpsl
xchg
rcl
out
inc
mov
pop
pop
cmp
ret
rorb
ljmp
mov
nop
lods
leave
mov
dec
dec
nop
sbb
rorb
jecxz
inc
lods
push
mov
and
fdiv
pop
adc
dec
mov
incl
push
adc
xor
je
dec
and
xor
pop
scas
or
or
push
and
sbb
mov
jae
pop
and
mov
das
dec
mov
mov
movsb
xchg
pop
or
sub
pop
fmull
add
ljmp
sub
mov
or
mov
jnp
or
jae
orb
lahf
inc
mov
call
addr16
jmp
cmpl
push
mov
int3
push
push
rorb
jae
adc
fldcw
xor
int3
fildll
int3
int
push
inc
fstps
jb
mov
nop
inc
mov
mov
or
and
mov
mov
lods
add
rcrl
ret
outsl
sub
add
sub
push
add
movsl
sbbl
add
push
ret
sub
xor
xchg
xchg
xchg
xchg
jl
insl
je
rolb
push
mov
rclb
aas
fisubrl
push
pop
cmp
aad
push
sub
mov
xor
xor
add
sbb
int3
add
rcr
mov
add
das
out
push
fsubrs
xchg
push
jno
pop
into
das
mov
lret
divl
or
jno
cmp
stos
in
or
outsl
jmp
shll
imul
jbe
adc
jp
or
cltd
out
adc
or
addl
xor
fsubrl
inc
inc
sub
incb
adc
cmp
fcompl
push
fidivs
rcrl
mov
loop
clc
mov
pop
sub
test
inc
xchg
test
mov
sub
outsb
cmp
adc
stc
xor
or
inc
push
pop
inc
mov
aam
push
mov
inc
inc
inc
cmpsl
adc
jae
xchg
mov
jnp
add
movsb
adc
push
push
jg
adc
in
or
sbb
or
popf
adc
or
faddp
clc
dec
sub
popa
test
sub
pop
jns
inc
cmp
push
jae
inc
seto
lcall
push
jp
or
xor
popf
lods
mov
fstl
imul
sbb
ret
pop
enter
add
sbb
sarl
mov
push
in
fs
in
test
mov
push
sahf
or
and
jmp
ret
fcomp
mov
xorb
or
lods
adc
cmp
stos
push
cmpsl
mov
mov
loopne
pop
dec
push
aam
je
xchg
bound
hlt
push
pop
mov
mov
filds
push
lea
push
inc
mov
out
push
mov
mov
mov
stos
or
test
ficompl
sahf
mov
jge
ljmp
sub
hlt
int3
xor
sarl
mov
jmp
cmp
jle
mov
cmp
jne
mov
lahf
sbb
or
movsb
stos
out
inc
push
mov
add
push
ss
pop
movsb
dec
loope
or
out
or
cmp
je
add
ret
pushw
push
lock
xchg
and
xchg
cmpsb
add
fstps
adc
push
sar
inc
mov
shrb
adc
jmp
sub
adc
shll
xor
jge
fldcw
fisttps
ret
sbb
out
push
dec
or
in
out
subl
hlt
adc
mov
sub
jo
bound
xchg
xchg
jg
cmp
test
out
ja
adc
push
jo
call
jmp
stc
dec
outsl
lock
push
xor
xchg
iret
push
in
ret
inc
add
mov
xor
push
lods
dec
int3
and
mov
or
add
cmp
loop
inc
lea
or
mov
loope
jl
jne
xchg
xchg
mov
push
push
adc
sarl
inc
cwtl
ret
sbb
rclb
cmp
cmp
inc
cmpl
or
dec
add
movsl
push
aaa
rorl
or
add
or
xchg
mov
pusha
arpl
jmp
xchg
inc
stos
testl
mov
sbb
dec
sub
mov
pusha
lea
stc
dec
rolb
cmp
fists
cwtl
lret
xchg
jl
jmp
imul
cs
and
leave
add
dec
mov
insl
cmpsl
inc
pop
pushf
in
inc
mov
mov
pop
test
inc
roll
push
cmp
push
or
arpl
sbb
lock
stos
loope
loopne
mov
dec
inc
xchg
mov
add
movl
and
jno
inc
imul
sbb
popa
jno
adc
push
int3
mov
pushf
aam
pop
sub
lcall
rolb
push
mov
add
cli
jmp
mov
jle
or
negb
inc
cmp
jae
add
lods
jo
jp
ds
cmp
aaa
fs
jp
pop
push
sbb
inc
cmp
ja
lea
sub
fnstenv
cltd
or
in
loop
insb
sub
mov
inc
shl
jmp
push
sub
push
or
sub
dec
jns
pop
sub
xchg
and
jb
andl
or
ret
enter
or
mov
addr16
rdtsc
jae
fucom
inc
aas
add
cmp
sti
xchg
or
mov
push
mov
mov
inc
sbb
dec
and
pop
fmuls
jp
inc
adc
adc
push
push
or
push
dec
hlt
or
sub
repnz
jbe
fwait
or
mov
mov
jmp
or
cs
mov
xchg
es
mov
push
mov
fiaddl
xchg
ret
cmp
mov
add
mov
cmp
je
or
test
push
inc
or
ds
dec
or
mov
xor
or
sti
je
fstpt
add
test
out
rorb
repnz
push
add
inc
push
dec
mov
push
sub
dec
mov
gs
mov
jl
sti
push
clc
addl
js
ds
mov
out
popa
sub
jecxz
flds
pop
mov
test
jbe
test
pop
ret
test
sbb
ljmp
and
add
lea
inc
orl
cmp
loopne
xchg
cmpsl
push
mov
in
jbe
push
shr
sub
adc
push
mov
add
mov
js
add
or
out
jne
test
dec
push
push
push
je
jecxz
gs
inc
jmp
cmp
or
int
repnz
xchg
les
addb
add
adc
popa
mov
inc
cwtl
test
imul
pop
xchg
in
sbb
pop
push
fs
push
sub
jnp
pushf
or
xchg
stc
xchg
xchg
aad
aam
jo
das
inc
xor
inc
sbb
cmp
in
scas
jne
andl
pop
andb
arpl
lret
dec
mov
add
test
or
call
dec
mov
pop
orl
dec
inc
clc
mov
insb
shl
stos
movl
rcll
rorb
mov
inc
or
lds
popf
cltd
in
xor
push
mov
mov
cmp
sbb
pop
add
cmp
dec
xchg
jmp
mov
fcoms
jae
add
xor
jo
je
or
adc
mov
dec
js
mov
outsb
add
mov
mov
inc
int
cwtl
push
test
and
xchg
out
push
add
jnp
or
les
lock
in
pop
andl
or
inc
adc
pusha
movl
lcall
pop
pop
push
or
mov
ja
je
xchg
enter
pop
add
push
dec
lahf
cmp
xchg
xchg
fstpt
sub
add
pop
ret
cmc
inc
push
fcmovne
ret
push
pop
and
mov
mov
repz
xor
push
bound
mov
ja
push
roll
lret
outsb
inc
js
pop
mov
test
sub
or
cmc
out
or
adc
shl
jbe
sbb
ficoml
push
jmp
repnz
jle
mov
orl
add
inc
jne
xchg
and
and
mov
fs
dec
pop
sub
add
data16
popf
add
mov
dec
popl
cmp
mov
fwait
cmp
sub
adc
add
and
jb
xchg
cli
nop
xor
sbb
and
mov
push
pusha
sub
dec
jns
adc
cld
lea
mov
cmp
dec
loopne
loopne
sub
insl
pop
sub
shlb
loopne
mov
xor
nop
inc
add
and
sub
lds
sahf
dec
adc
fs
adc
adc
dec
pop
adc
mov
inc
push
cmp
jb
push
lods
xor
pushf
ret
pop
push
shr
repz
popf
jg
pop
xor
or
add
ljmp
adc
adc
push
xchg
arpl
out
insl
into
and
cmc
jbe
repz
enter
lds
or
cmp
repnz
push
aam
and
xchg
pop
insb
xor
les
cmpsb
or
sub
push
lret
and
fstpt
lret
loopne
leave
lea
xchg
xor
ljmp
hlt
enter
clc
adc
stos
movsb
xchg
xor
pop
cld
outsb
loope
ljmp
cmpsl
cmp
fadds
mov
cmp
fidivrs
sahf
nop
mov
or
inc
add
push
jnp
dec
mov
sub
fwait
jge
and
jmp
push
xor
jge
orl
dec
push
loopne
loop
mov
dec
ljmp
add
test
push
and
mov
xchg
inc
iret
cltd
sbb
insl
ss
inc
mov
xchg
inc
mov
loop
mov
push
incb
jns
rolb
push
or
and
inc
or
lahf
sbb
jl
sbb
pop
mov
shll
ret
adc
lea
push
xchg
adc
rolb
aas
cmp
pop
xchg
push
push
lock
push
mov
push
sub
mov
imul
add
loopne
ljmp
test
mov
cmpb
nop
push
ret
mov
adc
mov
inc
inc
and
push
lcall
xchg
pop
in
dec
aad
mov
dec
sub
adc
shl
xor
fsubs
es
or
std
lods
cmpsl
push
sbb
inc
and
popa
dec
xchg
add
push
ss
dec
adc
cmp
mov
mov
fs
sub
mov
test
pop
test
aas
test
and
xchg
jbe
mov
mov
test
adc
sub
scas
pop
xchg
sbb
mov
cmp
jecxz
sub
inc
test
mov
dec
add
jno
orl
lock
or
cmp
test
ss
sub
test
pushf
add
mov
ss
xor
lods
xor
cmpsl
cmpsl
adc
xor
mov
push
aam
or
test
in
push
push
xor
stos
pop
xor
loopne
mov
mov
inc
js
jg
push
fildl
sub
dec
sar
js
cli
outsb
mov
adc
in
mov
sbb
cmpsl
inc
hlt
lea
dec
add
sub
push
add
xchg
jnp
or
arpl
pushl
insb
sub
or
sub
inc
push
xor
sbbb
xor
ffree
pop
or
and
adc
imul
lea
addr16
push
or
sbb
insb
adc
test
sar
add
pusha
jo
inc
insb
pop
scas
cmpb
jl
or
xchg
rcl
push
add
test
add
lock
sbb
pop
inc
inc
push
add
insb
pusha
test
arpl
or
test
mov
loopne
mov
mov
or
mov
push
lahf
int
push
repnz
outsl
dec
into
mov
bound
in
or
rorb
xchg
mov
ret
and
adc
sbb
filds
test
adc
xchg
and
insb
push
movsl
gs
mov
sbbl
jmp
repz
xchg
out
pop
int3
cmc
xor
mov
push
nop
cmp
mov
jo
lea
jl
mul
dec
shlb
cmp
movsl
mov
aam
lret
mov
mov
daa
push
pop
push
adc
lods
loope
decb
lds
popf
mov
out
inc
push
cs
je
in
cwtl
jne
mov
push
jns
dec
inc
mov
addr16
mov
ss
dec
repnz
add
pop
add
inc
mov
ret
sbb
mov
movsl
popa
mov
adc
sbb
mov
and
testb
pop
adc
xchg
scas
xlat
js
imul
jbe
and
add
xchg
push
jge
push
cmp
mov
xor
fnstsw
insl
xchg
jle
add
add
mov
addr16
and
mov
xor
adc
lea
add
and
push
push
loop
push
pushf
sbbb
in
out
loopne
sub
in
nop
leave
add
inc
xlat
push
inc
sub
lods
adc
and
mov
stc
pop
pushf
inc
push
loop
out
or
mov
xchg
enter
push
cmp
loope
arpl
adc
and
xor
ficoml
adc
mov
test
and
pop
jmp
js
lock
adc
add
lret
cli
and
lock
testb
xchg
jnp
orl
push
fisubl
or
sbbl
bound
lock
push
jnp
orl
lcall
push
push
test
jne
jl
or
jp
add
cmp
stos
sub
adc
or
push
xor
stos
adc
aas
test
lock
jne
cmp
push
imul
testb
fidivs
cmp
in
mov
adcl
or
jle
push
inc
push
inc
cmp
lds
daa
arpl
mov
or
push
adc
imul
cmp
ret
imul
aas
scas
push
cmp
cmp
pushf
mov
jle
and
clc
cmp
jae
pop
push
adc
push
jo
cs
aam
out
rol
pop
adc
and
pop
into
shlb
mov
adc
lods
test
dec
sbb
out
add
dec
xchg
sub
test
fsubr
dec
jge
roll
ja
loopne
rclb
cmpsb
push
mov
insb
push
push
push
iret
cmpsb
or
fwait
es
cmp
mov
xor
add
push
or
push
cmp
inc
dec
xchg
add
sub
mov
adc
in
sbb
shl
insl
lds
je
aam
or
out
adc
sub
cmp
cmc
inc
sbb
cmpsb
adc
test
xchg
and
jmp
aaa
cld
xchg
fsubl
orb
or
adc
xchg
stc
je
adc
sbb
dec
push
pop
adc
and
enter
pop
pop
and
dec
xor
mov
mov
cmp
fst
enter
xor
inc
jo
or
enter
fdivl
xchg
and
dec
cmp
mov
xor
adc
loopne
lods
cmp
fisttps
add
insb
shlb
les
add
data16
xor
sbb
jb
sbb
aad
sbb
inc
xchg
sbb
fsubl
ret
clc
push
test
inc
cmova
cmp
sbb
push
inc
dec
xor
popf
lea
in
test
pusha
cmc
adc
shld
mov
push
mov
add
mov
push
mov
in
dec
add
inc
add
sbb
fisubrl
push
stc
push
mov
xchg
pop
push
sbb
pop
add
or
push
leave
icebp
loopne
xlat
clc
scas
pop
sarb
sti
sbb
add
pop
cwtl
lea
jo
leave
lds
xor
pop
imul
int3
sub
fimuls
mov
or
hlt
sub
inc
insb
inc
jne
add
xor
int3
push
stc
jp
mov
test
dec
adc
sub
movsl
mov
lds
inc
daa
jo
mov
xchg
ds
xor
cmp
lret
or
push
movb
cli
shll
cmp
inc
fsubrl
add
push
incb
sub
stos
and
into
vsubsd
into
mov
aaa
fs
dec
adc
in
sti
cmp
lods
call
sbb
or
mov
push
cmp
imul
out
and
js
test
mov
add
and
push
out
es
inc
popa
push
lahf
mov
je
mov
xor
enter
shlb
or
pop
sbb
or
jmp
sti
pushf
mov
imulb
push
scas
sub
popf
jb
mov
sbb
mov
pop
scas
add
inc
aaa
or
xchg
jb
movl
add
inc
inc
adc
ljmp
or
or
sbb
or
js
mov
inc
jge
lea
jae
add
mov
and
add
push
cmp
mov
xlat
cmp
push
call
sbb
ss
inc
pushf
test
jb
rol
and
std
inc
inc
adc
in
mov
push
test
fists
xor
dec
push
je
dec
jne
push
pop
test
data16
testb
adc
push
and
dec
push
cs
lahf
mov
hlt
loopne
xchg
adc
push
repnz
aam
lods
mov
int3
pop
lret
repz
sub
jno
addr16
js
mov
pushl
mov
mov
jge
cmpsl
andl
fadds
mov
int
rcrl
daa
xor
mov
cmp
jne
and
lea
cli
jb
lea
or
mov
add
jno
dec
outsb
xor
pop
clc
data16
jge
cmp
lock
ja
xchg
sbb
mov
je
mov
sub
cmpsl
rorb
and
mov
sub
push
test
xor
out
cmp
or
sti
mov
adcl
popf
inc
add
or
outsl
orb
cmp
testb
adcb
adc
sbbb
sub
int3
cmp
daa
pop
mov
dec
push
mov
add
imul
add
adc
movsb
jnp
adc
add
sub
aas
inc
add
mov
and
dec
jmp
pop
adc
stc
popf
aad
lea
push
lahf
cmp
test
jb
sub
or
call
inc
cmp
adc
or
mov
sub
int
push
jg
cmpsl
imul
jno
ficompl
adc
sub
inc
add
push
insl
adc
jecxz
insl
test
aaa
movsb
mov
sbb
movsb
inc
lock
sbb
jge
loopne
cmpb
push
mov
sbb
les
pop
adcb
and
mov
jbe
testb
or
pop
adc
cwtl
insl
add
cmpsl
rcr
adc
push
and
sub
pop
push
inc
xlat
inc
ret
and
pop
ret
fdiv
fs
add
push
mov
pop
or
jns
mov
cli
test
mov
cwtl
cmp
popa
mov
insb
adc
and
inc
sbb
push
test
cmp
jge
shll
rorb
or
push
pop
hlt
dec
rcll
inc
cmp
xchg
in
add
imul
dec
add
sbb
sbb
addb
mov
hlt
call
mov
and
test
lods
clc
imul
adc
xor
mov
or
rorl
fcoms
dec
inc
xor
mov
add
sub
ss
popf
mov
xor
mov
dec
pop
insl
jae
inc
and
popf
fmul
add
cmp
sbb
xchg
push
or
push
dec
loop
popf
mov
mov
lahf
fiaddl
xchg
cmpb
je
push
cmp
aam
xchg
xor
cmpsl
mov
dec
sbb
stos
push
sub
pop
sub
lods
or
imul
fdivrl
sbb
call
cli
pop
or
leave
xorb
or
mov
jmp
inc
fcmovnbe
dec
inc
or
mov
inc
cltd
or
and
mov
das
xor
or
sti
dec
jmp
mov
jae
mov
or
mov
iret
sub
inc
fidivrl
lock
loopne
or
mov
push
fcomi
push
repnz
incl
inc
movsl
or
shll
jmp
jp
cmp
or
fs
xchg
ret
pushf
inc
dec
mov
dec
mov
popa
lock
cmpsb
mov
fsub
push
je
subl
sub
movb
add
cmp
dec
je
mov
lea
popf
add
sbb
inc
dec
loop
xor
adc
mov
and
andb
mov
jle
subl
shlb
xchg
dec
and
dec
inc
or
fimull
jg
sbb
sbb
push
test
and
data16
inc
iret
lea
xor
sbb
sub
lea
stc
dec
addr16
sbb
adc
pop
shrb
dec
popa
xor
pusha
pusha
dec
or
pusha
outsb
push
xchg
mov
adc
cmpsl
aad
sub
sub
inc
out
sbb
mov
jo
mov
jbe
or
insb
vhaddpd
pop
std
mov
pop
addl
in
inc
sub
push
cmp
popa
push
popf
pop
pop
pusha
imul
test
adc
push
ret
xor
inc
addr16
popa
mov
xchg
push
aas
leave
mov
stos
mov
xor
cli
insb
cmp
and
orb
or
inc
lcall
jne
jb
push
out
cmp
jge
xchg
stos
sub
cmp
movsb
imul
mov
adc
arpl
sbb
dec
and
jmp
sbb
cmp
and
outsl
insb
in
sbb
xchg
xchg
outsl
lds
sbb
add
adc
push
outsl
jb
mov
xchg
cmp
lds
inc
out
pop
popa
cs
pop
das
pop
popa
dec
adc
xchg
jmp
or
adc
add
sbbl
dec
pop
lock
mov
pop
add
mov
adc
xor
and
push
stos
movsb
inc
pop
enter
push
push
or
loopne
adc
add
mov
and
xor
repnz
pop
add
dec
push
test
jo
in
pop
std
aas
xor
into
sysret
test
negb
enter
and
push
dec
add
push
jae
pop
daa
and
cmpsb
adcl
xchg
dec
sbb
pop
jb
push
ss
popa
aam
pop
push
fidivl
sub
sbb
sub
or
or
xor
and
cltd
lret
or
push
movsl
add
cld
pusha
mov
icebp
push
int3
js
pop
inc
daa
insl
pop
sub
xor
leave
jmp
mov
jge
or
sbbl
mov
jo
sbb
and
popa
repz
mov
pop
cltd
mov
push
cmp
and
push
jno
or
mov
subl
adc
jmp
lock
out
sub
adc
out
das
or
mov
sbb
nop
xchg
dec
shrl
jb
jl
lea
xchg
xchg
push
loopne
rorl
push
ja
cli
popf
pop
jecxz
adc
xor
sbb
leave
xorb
inc
xor
ljmp
pop
dec
cmp
gs
sbb
mov
cmp
int3
jno
xlat
and
nop
inc
sub
adc
mov
xlat
or
inc
dec
lds
rolb
pop
cwtl
adc
add
movsb
outsl
jne
cmp
rorb
push
mov
fwait
push
sub
jo
inc
jne
mov
ds
sti
jge
rclb
mov
push
mov
sbb
dec
cmp
lods
ljmp
mov
lret
push
push
push
jg
dec
scas
cmp
jns
push
sub
push
mov
scas
scas
push
pop
sub
cmp
inc
das
push
clc
movsb
mov
ja
pop
push
inc
movl
int3
add
add
jmp
aas
in
pop
mov
fs
pop
pop
mov
stos
icebp
out
mov
push
imul
or
popf
cmp
xchg
dec
mov
pminsw
pop
lea
loope
int
lea
jnp
push
inc
fistpll
dec
cmp
jne
mov
lahf
mov
cwtl
sahf
into
xor
jmp
or
es
push
jp
mov
in
and
sub
or
sub
xor
or
sbb
arpl
int3
test
cmp
sbb
pop
or
inc
mov
dec
pop
jp
push
add
push
push
jg
mov
and
jmp
pop
push
scas
inc
xor
scas
or
sub
adc
or
pushf
xchg
jge
xchg
mov
imul
or
push
add
cmp
sbb
iret
enter
mov
sub
push
pop
push
cmp
lcall
dec
sub
push
mov
mov
lret
aad
or
dec
popa
stc
xchg
mov
xchg
dec
push
inc
clc
clc
divb
mov
push
pop
jo
dec
cmp
push
adc
pop
lahf
xor
mov
lea
push
cmp
nop
jle
insb
testl
xor
adc
push
cmpsb
or
pop
push
out
cmpsl
fcmovnbe
mov
in
fs
push
mov
push
mov
pop
or
mov
lret
in
rclb
and
push
xor
shrl
sub
jecxz
pop
xor
pushf
rolb
adc
mov
sti
sub
arpl
pop
xchg
lcall
push
inc
adc
lock
xor
xor
sub
push
test
out
lea
mov
mov
jae
test
xchg
adc
nop
sub
and
leave
sbb
sbb
mov
pushf
xchg
inc
push
xchg
sbb
sbb
fs
mov
sbb
sbb
jbe
sbb
mov
iret
mov
push
xchg
add
pop
loop
xchg
enter
test
and
hlt
xor
mov
dec
add
adc
pop
push
jo
pop
sbbl
imul
sub
daa
mov
ss
and
push
movsb
pop
andb
sub
addl
dec
xchg
dec
and
adc
sub
and
xchg
out
pop
in
leave
adc
sub
sub
and
sub
and
xchg
pop
mov
and
or
adc
loope
shll
or
test
or
stos
lock
sbb
roll
inc
add
push
loop
aam
adc
mov
test
xor
int
add
sbb
loopne
pop
pop
mov
cmp
or
jl
pop
xor
aaa
das
cmpsb
and
or
mov
push
adc
cmpsb
mov
push
mov
addl
cwtl
pop
in
mov
add
mov
ja
mov
pop
mov
adc
out
and
push
stos
nop
add
push
xchg
rcrb
js
sbb
mov
test
fnstenv
and
jo
push
inc
je
repnz
or
push
sar
add
icebp
add
fnsave
lds
add
mov
sub
add
iret
jo
adcl
fldcw
add
or
pusha
jle
test
js
jge
pop
xchg
pop
and
jno
nop
sbb
mov
shl
enter
loopne
movsb
jl
fiaddl
repnz
cwtl
dec
add
mov
into
mov
mull
push
popa
dec
and
mov
sbb
add
mov
sbb
loop
clc
test
mov
add
int
aaa
push
gs
cltd
movsb
and
xchg
les
fdivrs
enter
push
pop
pushl
inc
add
outsb
mov
jl
rolb
cmp
andb
mov
cmpsl
pusha
test
in
add
mov
aaa
xor
sbb
add
xor
sub
divl
pop
sbb
inc
fdivrl
and
lock
cmpsl
bound
or
xchg
or
adc
stc
jmp
cmpsb
scas
cmpsb
dec
adc
inc
lea
or
xchg
add
ja
push
mov
es
lock
loop
outsb
cmp
ret
data16
pop
enter
jnp
dec
mov
lret
lds
xor
xor
jo
push
lahf
add
lea
lods
push
dec
loope
fistpl
rclb
das
push
mov
les
inc
roll
lret
pop
cltd
mov
sbb
fs
test
pop
pop
lret
leave
leave
or
pop
or
cmp
dec
sub
and
pop
sbb
test
adc
add
or
add
push
jno
out
push
sti
mov
mov
inc
xor
mov
loopne
add
or
not
mov
dec
daa
jmp
pop
bsr
pop
and
addb
cmp
dec
cmp
fidivrs
mov
adc
dec
int
leave
dec
adc
ret
jbe
pop
push
jns
cmp
add
add
jmp
push
sub
clc
and
jbe
inc
fdivrs
sbb
xchg
xor
je
inc
nop
sub
xchg
fwait
pop
cmp
mull
jns
insl
mov
loopne
sbb
xchg
push
or
ret
lea
or
mov
cmp
cmp
adc
mov
lret
cs
pop
lcall
mov
inc
lea
fstpl
lock
xchg
cs
xlat
sub
pop
mov
repz
adc
adc
push
loopne
outsl
arpl
jo
pop
sti
add
stos
lds
add
lret
enterw
rolb
cmp
mov
xchg
jno
pop
cltd
inc
hlt
pop
push
in
xchg
lock
xlat
sub
xor
push
in
push
sbb
out
in
mov
sbb
push
in
mov
jnp
testb
lea
pop
push
push
xor
xchg
jl
dec
sbb
push
cmp
imul
ret
stos
push
test
lret
shll
add
push
xlat
xor
sub
ffree
add
mov
lock
dec
rol
mov
dec
xchg
dec
loop
xchg
push
cmc
call
adc
repnz
daa
mov
sti
cmpsl
or
scas
or
mov
movsb
push
shld
sbb
jmp
or
push
dec
repz
cwtl
push
and
popa
add
or
dec
dec
xor
ja
and
arpl
cmp
push
jbe
loopne
mov
and
and
or
xor
mov
sbb
popa
je
js
xchg
push
push
cmp
push
push
gs
jne
cltd
lcall
adc
test
push
stos
lods
sub
in
sbb
jge
sub
das
sub
dec
inc
daa
sarb
fnstenv
add
jmp
test
jne
mov
mov
xchg
stos
mov
test
lds
es
mov
aam
xchg
sbb
test
data16
movsb
sahf
ds
ds
dec
and
xchg
fisttpll
dec
dec
orl
push
and
push
adc
inc
outsb
cmp
sbb
cmpb
pop
and
sbb
or
mov
cltd
or
or
push
adc
or
mov
rol
adc
lods
add
cmp
inc
sti
test
or
stos
dec
sbb
and
lods
dec
in
or
cmp
out
and
add
adc
loop
ss
sub
push
xor
push
pushf
cmp
jns
pop
sub
push
xchg
repz
and
shr
and
push
je
aaa
sbb
cmpsl
lods
js
popa
xchg
inc
stos
insl
int3
adc
inc
or
mov
gs
add
fldl
push
ret
cmpsl
jae
pop
and
je
push
push
fidivrl
mov
xchg
sub
and
lods
sbb
pop
xor
push
fmul
dec
xor
dec
add
aad
and
loop
sbb
and
adc
mov
bnd
test
mov
pop
inc
pop
dec
push
jmp
pop
adc
mov
loopne
push
shrl
in
push
push
lcall
add
movsb
aaa
cmp
sbb
xor
inc
sub
inc
mov
mov
push
mov
ficoml
cmp
add
inc
and
dec
jns
ljmp
inc
push
andl
add
xchg
inc
add
cmpl
insb
fstps
xchg
orl
pusha
fstps
and
lret
mov
push
lock
mov
push
movl
xchg
or
cmp
fmull
push
sarl
subl
dec
cmpsb
or
bound
push
sub
lods
cmp
push
insl
and
adc
or
test
movsl
pop
inc
addr16
push
es
ss
leave
sbb
lds
push
mov
icebp
clc
cmp
push
xchg
in
push
sub
push
shlb
mov
punpckhwd
sbb
insb
mov
sub
mov
and
add
sub
and
das
mov
push
jl
dec
dec
or
dec
dec
xor
add
sarl
add
sbb
pop
sti
sbb
subl
adc
mov
sub
mov
inc
hlt
pop
mov
push
lcall
aam
loopne
pop
add
hlt
out
int
mov
push
ss
out
iret
mov
pop
shll
rolb
aaa
dec
or
scas
jle
int
sbb
addr16
sub
pop
mov
xorb
adc
add
in
aas
pushf
xorl
fcoml
cmpsb
add
xchg
mov
and
sbb
cmpl
sbb
dec
jae
push
aaa
mov
pop
add
cmp
imul
inc
or
jae
or
adc
jne
push
sbb
pop
cmpb
xorl
ficompl
imul
testb
lock
cli
in
mov
mov
adc
add
shl
or
mov
in
outsb
lret
push
push
ficoml
popa
popa
sbb
dec
sub
cmp
movsl
in
mov
pop
mov
std
popf
or
and
cmp
mov
xchg
inc
fisttps
jno
jecxz
add
test
add
into
scas
inc
adc
test
pop
jo
add
mov
adc
cld
sbb
cwtl
jmp
pushf
mov
adc
sbb
adc
add
xchg
rorl
cmp
jl
mov
pop
scas
push
mov
inc
add
pop
add
dec
mov
and
in
mov
movsbw
addl
jns
jne
mov
add
or
je
adc
push
outsb
or
inc
push
insl
push
mov
idiv
test
adc
jmp
cmp
scas
insl
hlt
push
inc
jp
cld
push
sbb
inc
mov
out
dec
pop
push
jl
ds
je
push
stos
dec
mov
js
push
mov
fcomp
sub
mov
lea
daa
mov
or
add
cmp
xor
sahf
in
lods
movl
rolb
and
mov
int3
sti
sbb
dec
lock
aad
jp
sbb
xchg
dec
jnp
imul
mov
pop
push
pop
pushf
push
xor
sbb
inc
out
push
lea
add
add
xchg
fcomps
add
mov
lock
out
sahf
test
push
sbb
les
lahf
mov
xor
inc
es
pusha
nop
js
inc
imul
adc
pop
fcomps
stc
and
aaa
lret
and
jmp
lods
pop
rcrl
jb
bound
mov
push
sbb
inc
nop
pop
sub
adc
and
lahf
aad
mov
sbb
add
cld
inc
lret
stos
leave
adc
xchg
repnz
dec
mov
add
repnz
pushf
adc
and
imul
jo
xlat
in
lods
or
add
icebp
icebp
js
aas
fidivl
test
jne
fsubrs
inc
xchg
mov
mov
test
in
xchg
das
push
orb
scas
sub
jno
jbe
cmc
aam
mov
mov
pushf
pop
shl
imul
sbb
fwait
cmc
out
adc
fcomi
in
xchg
jbe
push
add
rolb
lahf
inc
nop
call
jno
sub
std
or
dec
call
xor
mov
cmp
xor
jge
mov
fidivrl
jnp
and
nop
inc
imul
cmpb
or
in
stc
inc
pushf
inc
or
movb
bound
mov
mov
dec
std
jnp
pop
movl
testb
xchg
xchg
xor
or
add
cmp
pop
loope
test
xchg
clc
sbb
lcall
xchg
loope
or
aam
clc
add
std
inc
bound
mov
and
les
push
cs
pop
test
cmp
jae
fsubr
jno
shlb
adc
sub
sbb
cmpsl
and
dec
jne
or
inc
sub
inc
sub
cld
sarl
mov
and
lea
and
in
lea
add
jmp
add
add
sbb
bound
inc
add
dec
pop
loopne
outsb
or
adc
in
cli
add
sub
addr16
pushf
sbb
mov
cmp
cs
xor
and
add
sub
dec
pusha
xchg
incb
bound
movsl
add
call
shrl
addl
pop
or
pusha
lods
sub
aas
shl
and
and
pusha
mov
lods
mov
pop
add
hlt
nop
sub
sub
mov
aam
sub
pop
inc
cmp
loopne
icebp
clc
mov
icebp
push
push
push
push
pusha
in
pop
push
mov
rorb
pop
jmp
cltd
fsubs
mov
lds
mov
inc
dec
jne
add
cmp
push
cmp
jne
cwtl
shr
pop
mov
jle
add
loop
cmpb
push
pop
in
and
ret
add
mov
loope
nop
xor
inc
push
push
mov
and
sbb
xchg
nop
mov
push
adc
adc
gs
pushl
pushf
nop
jl
pop
add
sahf
mov
add
add
mov
pop
test
xchg
jp
mov
inc
jo
movsl
cs
std
ficoml
jbe
inc
cwtl
lcall
orl
outsl
dec
in
mov
xor
add
mov
jmp
in
js
mov
sub
cmp
mov
sar
or
jge
cli
or
add
xor
cmp
jbe
pop
adc
adc
popf
enter
adc
mov
jnp
adc
movsl
sbb
push
andl
push
inc
adc
iret
ss
rol
and
cmp
cld
xchg
ret
pop
pushl
add
inc
inc
and
inc
sub
aas
xor
inc
lcall
sub
push
dec
sbb
shll
scas
stos
mov
js
pop
aad
pushf
test
enter
add
mov
jo
add
test
outsl
test
pop
jae
jl
loope
cmp
pop
outsb
test
in
xchg
push
sarl
xchg
push
push
sarl
adc
pop
shlb
dec
push
rorb
push
jbe
add
sti
mov
imulb
call
pop
cmp
add
jne
sbb
or
mov
cs
jne
sbb
jo
or
push
ja
lcall
dec
pusha
sbb
add
pop
adc
adc
sub
lea
test
pop
mov
loopne
arpl
jne
loopne
cmpsb
add
sahf
mov
mov
js
xor
jg
sub
fsts
xlat
and
push
outsb
cmp
mov
scas
push
outsl
add
xchg
cmpl
and
shll
or
lock
lods
mov
mov
add
adc
popl
dec
xlat
inc
jb
sbb
adc
cld
sbb
daa
mov
in
adc
fwait
shlb
in
out
loope
fs
jb
loope
les
add
xor
dec
mov
flds
sub
push
int3
push
sbb
es
push
cmp
fdivl
mov
jae
add
pop
add
add
dec
mov
sub
or
jmp
cmp
insl
add
adc
or
pop
sbb
or
int3
je
loop
int3
pop
push
mov
push
inc
add
mov
in
out
push
mov
jne
push
bound
pop
inc
mov
push
push
or
jb
cmp
inc
jl
add
adc
push
sbb
dec
cltd
sub
dec
mov
push
jbe
cmp
je
or
mov
push
adc
push
jno
test
inc
inc
dec
popa
lret
ss
sbb
push
out
jno
add
jnp
and
pop
push
loopne
jge
xor
pop
pop
push
sbb
aas
add
and
inc
push
jno
add
sub
or
test
sbb
dec
xchg
pop
xchg
ljmp
fmuls
cmp
and
adc
clc
shrb
shl
icebp
sbb
push
fsubrs
mov
sub
fadds
or
xchg
sub
cwtl
or
loopne
dec
or
mov
xor
cmp
fldcw
testl
xchg
js
inc
cmp
inc
push
jl
add
inc
pop
dec
and
insl
mov
adc
leave
mov
hlt
sti
cmpw
sbb
stos
jne
push
add
or
sbb
add
ljmp
jno
pop
push
pop
mov
add
sar
sbb
push
je
rolb
pushl
lds
cmp
or
mov
gs
sbb
mov
push
les
pusha
jne
dec
clc
orl
rolb
jp
sub
jmp
jae
or
insb
sbb
mov
sub
add
pop
or
sahf
add
mov
push
sbb
xor
jge
mov
nop
and
movsl
cmp
roll
or
sub
insl
jle
sbb
mov
dec
jae
adc
cmp
dec
inc
and
inc
push
in
mov
loopne
push
xlat
xchg
std
cs
mov
cwtd
clc
pop
and
pop
and
aaa
jge
fs
bound
jne
pop
js
insb
jb
fs
push
std
lock
or
add
pop
enter
push
pop
push
dec
xor
int
int
jo
fcoml
jmp
and
jle
xor
nop
mov
in
pop
adc
sbb
mov
push
or
je
lds
mov
push
pop
and
add
jge
movl
add
in
aad
sub
adc
rcl
xchg
jo
sub
and
push
mov
scas
les
jne
adcb
in
test
and
aam
imul
pushf
adc
inc
pop
lcall
nop
inc
bound
lock
out
andb
es
add
add
adc
push
sbb
popa
mov
add
mov
dec
inc
iret
js
repnz
ss
sbb
cmpsb
test
out
sahf
in
add
sub
lea
loopne
jmp
sub
push
add
mov
jb
enter
pusha
sbb
shll
sbb
and
nop
pop
inc
mov
push
or
test
sbb
xor
movaps
sbb
pop
or
scas
add
dec
dec
rcr
into
add
sar
pop
and
jmp
push
pop
dec
daa
pop
inc
mov
jns
mov
jne
ror
out
mov
and
insb
call
pusha
mov
adc
test
in
adc
sahf
push
push
cmc
mov
xlat
inc
mov
mov
aad
rcrl
imull
ffree
adc
inc
hlt
fadds
mov
lea
test
mov
mov
sub
jne
add
push
call
divl
fcoml
ret
in
push
and
mov
scas
push
call
icebp
mov
clc
inc
dec
je
ret
lcall
in
push
fnstsw
add
add
gs
jmp
insb
bnd
jbe
loopne
ror
jnp,pn
and
inc
inc
icebp
fninit
sbb
fdiv
sub
adc
sbb
mov
and
fs
in
incl
stos
sub
dec
dec
mov
stc
jle
bound
mov
test
js
dec
push
incl
ja
cs
mov
pop
push
movsb
and
push
pop
mov
adc
lahf
pushf
or
scas
in
lahf
adc
inc
sub
inc
mov
mov
dec
xor
pusha
shrl
inc
xchg
dec
add
adc
dec
jmp
mov
test
cwtl
fst
push
aaa
jb
jae
sub
sub
rcrb
mov
aaa
jge
idiv
adc
pop
lea
jmp
push
push
das
rclb
jo
lcall
rcl
adc
pop
hlt
jmp
je
mov
mov
dec
sbb
fmul
in
push
ljmp
pop
jmp
or
fstl
mov
mov
push
or
ret
inc
add
les
negb
xor
fs
xor
adc
dec
and
or
enter
mov
sub
push
mov
aaa
lds
xchg
mov
mov
dec
ret
ja
mov
sbb
js
inc
jnp
es
push
mov
dec
pop
aad
mov
sub
in
or
push
cld
jne
andb
repz
dec
inc
inc
dec
fcmovbe
fsubrp
sub
mov
jecxz
repz
add
mov
iret
cmpb
inc
inc
dec
push
jle
and
scas
mov
repz
and
jne
push
call
sbb
or
sub
push
sbb
sub
outsb
mov
sub
je
sub
ret
icebp
mov
mov
and
rcrl
test
mov
inc
daa
mov
xorb
xor
adc
and
push
jae
mov
push
cmp
pusha
or
sub
jge
mov
ss
in
lds
jne
enter
ror
inc
sub
sub
cmp
push
and
adc
enter
xchg
dec
mov
push
add
adc
cmp
cmpsb
scas
push
clc
push
pop
repz
dec
sahf
stos
push
call
xchg
add
out
add
into
add
dec
sbb
test
dec
cmp
inc
xorb
or
or
inc
jp
dec
in
add
jmp
fisubl
mov
shrb
popf
data16
push
insb
aad
rolb
cmpb
adc
add
loope
enter
nop
loope
xchg
bound
enter
dec
movsl
mov
adc
xorb
jle,pn
and
mov
lahf
shrl
mov
cmp
xchg
or
push
adc
mov
scas
shlb
out
fs
pop
jne
cmp
mov
xor
call
push
clc
push
xor
pop
lahf
and
mov
lods
mov
mov
cmpsb
cld
hlt
mov
andl
shr
rclb
arpl
xchg
lds
jno
mov
adc
jne
les
push
push
fiadds
mov
push
sbb
adc
jmp
mov
loope
stos
lods
popf
pushf
fnsave
outsb
lock
ret
std
incl
add
mov
sbb
je
cmp
jbe
adc
cmp
jmp
push
jg
lods
xorl
out
pop
push
mov
mov
pop
and
xchg
jp
ljmp
push
out
jbe
adc
xor
pop
mov
pop
mov
dec
and
mov
xchg
andb
mov
jl
sbb
xor
and
mov
mov
jo
jne
xor
jne
add
jmp
and
lock
pusha
add
xchg
adc
push
ss
pop
adc
cwtl
mov
push
repz
fistps
loop
nop
shl
or
push
inc
and
pop
xor
adc
test
mov
leave
sub
bound
jbe
ss
and
mov
push
jne
xorl
inc
lock
add
xor
cmp
jne
push
mov
push
gs
add
cmp
jl
lock
jne
push
push
push
jmp
pop
adc
imul
pop
adc
cmp
mov
ja
mov
int
in
lcall
cmp
xor
jmp
mov
or
cmp
je
mov
adc
imul
push
in
mov
lds
or
or
or
in
mov
mov
pop
cwtl
adc
xor
jne
or
adc
in
aaa
decb
mov
cmp
mov
rep
mov
jb
pushf
inc
mov
sub
ret
lock
and
mov
dec
gs
addl
scas
add
add
lods
lret
xor
sbb
roll
add
cmp
dec
push
inc
and
mov
and
mov
xlat
je
loopne
cmpl
popa
jmp
and
adc
andl
and
mov
outsb
clc
push
repnz
add
gs
aaa
andl
test
push
dec
dec
or
in
add
inc
jg
clc
or
inc
jmp
dec
mov
xor
add
or
push
out
pop
sbbl
and
fwait
adc
insl
add
sub
adc
add
test
mov
repz
or
sub
pop
push
rolb
lret
fxch
adc
jne
push
adc
jnp
xchg
pop
add
xor
add
and
sar
xor
or
in
leave
and
or
ds
dec
push
cmc
loope
xchg
or
push
lods
mov
adc
sub
and
jbe
cltd
pop
or
shr
dec
sarl
in
cmpl
or
xor
and
mov
lds
mov
adc
jecxz
adcl
jl
pushl
dec
adc
sbb
push
dec
adc
mov
or
movsb
inc
ret
js
mov
roll
fwait
dec
add
test
sub
cmp
pop
jmp
and
in
arpl
adc
sbb
cmc
xchg
xchg
mov
dec
push
loop
push
pusha
xchg
adc
and
add
fisttpl
ja
and
xchg
mov
sbb
testl
push
dec
pop
xlat
movsl
sub
cmpsl
dec
xor
popf
nop
mov
jne
ret
mov
or
push
iret
mov
dec
hlt
fisttpl
push
add
pop
orl
pop
xchg
sbb
dec
xchg
imul
aad
inc
sbb
dec
push
inc
add
and
sbb
arpl
popf
mov
dec
popa
sbb
clc
dec
inc
dec
imulw
mulb
pushf
sub
call
mov
movsl
and
sub
cmpsl
push
adc
xlat
jno
jp
push
mov
cltd
jae
in
cmp
add
mov
sub
push
gs
mov
sbb
cmc
xchg
lahf
shlb
add
dec
jl
cwtl
lods
sti
and
andl
or
mov
fs
sbb
and
xor
pop
fwait
mov
fists
sbb
repnz
mov
outsl
xorl
loopne
push
push
in
jno
fldl
in
sub
mul
push
or
daa
mov
add
cmp
adc
xlat
rcll
adc
inc
rcrb
pop
add
andb
sub
mov
jp
cld
icebp
sbb
shrl
mov
lock
ss
lahf
jb
sub
in
mov
lret
mov
mov
mov
fwait
cld
subb
jns
lock
inc
addr16
sub
test
mov
test
sbb
jmp
pop
popa
or
mov
sbbb
rolb
ret
or
add
adc
push
sub
rcrb
shlb
and
inc
icebp
shrb
lock
lcall
fmuls
or
xchg
ret
ja
add
mov
xchg
ficoms
add
sbbb
xor
adc
or
insl
lea
ret
in
push
pop
and
inc
add
sbb
push
fs
lea
dec
in
stos
dec
or
add
repnz
sbb
dec
mov
jns
pop
test
cmpsb
mov
mov
inc
sub
andl
cmpsb
xchg
mov
xchg
sub
in
adc
mov
fdivs
push
dec
jns
inc
inc
lods
mov
daa
es
cmp
notb
fisubrl
rcl
lods
jecxz
mov
jmp
out
loopne
adc
mov
mov
call
sbb
es
xchg
xor
or
stos
jo
loop
sub
jg
fcoml
and
pop
cli
mov
mov
aaa
mov
push
adc
adc
push
test
dec
inc
fists
loope
out
or
dec
test
pop
xor
jne
fs
or
and
fsubrl
add
pop
push
and
mov
jp
or
push
orl
sub
xor
lret
clc
mov
in
adc
adc
aad
add
ds
or
mov
shll
loope
add
push
loope
es
add
pop
cmp
mov
mov
rolb
imul
push
inc
sbb
inc
test
pop
ret
push
pushl
rorb
loope
mov
xchg
aaa
test
xor
mov
fstpt
sub
daa
jne
or
adc
cmp
dec
adc
repz
test
inc
inc
jo
cltd
scas
or
hlt
cmp
in
out
add
je
lahf
or
jno
xlat
add
push
in
xor
inc
dec
cli
or
or
xchg
dec
out
mulb
mov
add
or
xor
aaa
fwait
or
adc
test
in
xor
or
lock
push
enter
xor
jmp
adc
cmp
lea
adc
mov
dec
sub
enter
and
add
in
orb
adc
dec
jp
dec
lock
add
jb
sub
adc
roll
push
sbb
mov
adc
nop
sbb
repnz
cmp
add
mov
sub
clc
stos
in
sbb
dec
cmpsl
push
icebp
pop
jecxz
mov
xchg
mov
adc
dec
ret
jne
xor
rol
or
adc
scas
xlat
sub
sbb
xlat
or
adc
arpl
das
les
dec
inc
jbe
dec
xor
xchg
je
aam
and
xchg
ja
mov
mov
jae
and
or
fdivs
adc
xchg
xor
fbld
inc
lcall
out
out
sbb
dec
add
sbb
call
push
add
adc
cmpsl
adcl
adcl
sbb
jb
jno
add
lock
jno
adc
adc
xchg
shl
lock
sub
dec
mov
je
sub
scas
jns
adc
aaa
jb
icebp
push
sub
adcb
fcoml
mov
shll
mov
aas
lahf
sub
stc
clc
ret
xchg
mov
xor
xchg
sbb
jno
adc
push
inc
sbb
mov
test
stos
inc
es
and
push
test
dec
in
aaa
or
mov
sub
and
adc
inc
js,pn
push
jmp
jb
popf
pop
push
mov
jns
dec
mov
mov
push
push
rcrb
repz
out
ljmp
ss
or
ja
jmp
outsl
adc
outsb
imul
test
stos
insl
pop
sub
inc
xchg
sbb
jmp
jne
push
push
sub
mov
xchg
push
out
sbb
xor
and
adc
jo
inc
insl
xchg
mov
sbb
xchg
in
fisubs
test
je
test
inc
pop
and
ja
fildll
test
push
fwait
mov
push
mov
inc
pop
cld
rcll
mov
jge
add
inc
inc
jns
sbbb
push
push
mov
push
test
insb
sub
jnp
add
lock
xor
mov
mov
jmp
push
outsb
sub
jo
jb
in
and
mov
and
sbb
jmp
movsl
pop
cli
push
inc
push
and
mov
stos
jne
jmp
subb
mov
daa
dec
cmc
add
mov
mov
adc
mov
ret
pop
and
dec
cmp
das
addr16
mov
push
or
repz
or
dec
sbb
and
imul
sub
pop
test
repz
ljmp
test
sbb
mov
add
or
push
or
daa
xor
cmp
or
add
push
sbb
arpl
dec
mov
movsl
arpl
or
push
or
mov
pushf
push
adc
call
jne
test
push
jl
dec
stos
adc
push
fldl
fidivrs
jne
sbb
adc
xor
jg
rorl
dec
mov
push
adc
mov
jno
jns
add
lret
add
lea
lock
test
sub
or
sbb
aaa
sbb
pusha
sbb
js
or
xor
ja
ret
popf
mov
sub
out
inc
jp
mov
adcl
jo
or
outsb
fisttpll
xlat
mov
bndstx
sbb
ja
xchg
mov
shlb
push
insl
into
xchg
and
les
add
inc
in
or
sbb
cmp
mov
cmc
cmpsl
lock
scas
imul
dec
dec
push
sbb
jne
pop
into
push
daa
and
fmull
in
sub
sbb
mov
xchg
pop
movsl
adc
cltd
xchg
shrb
outsl
add
jle
aaa
jno
pop
jne
das
fadds
push
gs
test
orl
push
jg
push
fdivl
fisttpl
rcl
mov
pop
pop
icebp
daa
xor
sub
lods
je
or
and
push
pop
pop
aas
in
fcmove
push
sarb
cmp
je
jo
sbb
or
mulb
sarb
bound
adc
leave
add
mov
xor
inc
cmp
pop
mov
pop
or
sarl
loopew
mov
je
xchg
or
mov
addl
cld
aam
push
pop
push
push
mov
or
or
inc
or
inc
push
push
push
jo
xor
and
sbbb
adc
mov
xchg
dec
addr16
fstpl
gs
dec
cld
fimull
or
mov
clc
push
movsl
loopnew
lahf
in
addb
pop
mov
je
push
ja
pusha
rcr
xor
test
or
or
xor
or
cmp
mov
xchg
test
mov
mov
js
das
into
xchg
adc
mov
mov
and
pop
mov
xor
push
dec
cmp
or
cmp
subb
mov
aaa
pop
or
cmp
sub
or
pop
xor
sub
push
sub
lea
push
test
ss
das
and
jecxz
sub
cmp
insb
and
insb
jbe
leave
cs
hlt
inc
cmp
mov
add
add
inc
in
push
or
and
push
xchg
fsubs
sub
mov
popa
mov
stos
inc
pop
popa
ja
fwait
pop
cmc
add
and
fcoml
adc
mov
pop
movsl
mov
pop
adc
outsl
jbe
enter
or
and
lret
faddp
loopne
mov
orl
inc
cmpsl
and
sbb
fs
addr16
imul
add
lods
push
imul
mov
outsb
add
outsb
xchg
mov
sub
sub
or
pop
mov
lock
aas
xor
orl
push
jne
popf
in
add
inc
cmp
in
dec
call
xor
inc
adc
jmp
add
test
inc
in
in
adc
xlat
add
push
xor
dec
dec
xchg
or
clc
xchg
sahf
lret
push
or
mov
leave
mov
push
pusha
push
or
xor
xor
cmp
jb
test
and
inc
or
or
in
push
adc
xor
pop
cmp
stos
fimull
pop
or
and
fldz
and
add
and
cmp
and
or
in
fwait
sub
cmp
rolb
xchg
push
xchg
mov
and
xor
push
sbb
sub
mov
lods
dec
aam
or
cmp
lock
adc
push
pop
pop
sub
sub
mov
pop
add
add
inc
clc
std
test
or
lea
pushf
fisttpll
mov
jo
outsb
call
loopne
lret
push
ss
rcr
enter
ret
xor
or
pop
mov
leave
jecxz
pop
fs
movsb
push
sbb
xor
add
jns
jno
jg
insb
add
jg
jle
scas
orl
mov
xor
pushf
and
adc
stc
in
push
cmp
push
cmp
jle
cmp
jp
push
cmp
cmp
adc
jge
inc
add
add
inc
jmp
adc
movw
cmp
add
mov
repnz
popaw
jne
cs
icebp
lahf
mov
cltd
pop
idiv
lock
shrl
push
mov
sbb
inc
sub
or
test
push
mov
adc
rorb
pop
dec
and
aam
das
sbbb
je
loopne
cmp
jns
push
xor
push
push
and
inc
fildl
scas
outsl
xor
dec
mov
mov
out
xchg
xchg
adcl
mov
sbb
add
xchg
dec
mov
or
adc
and
adc
xchg
pushf
push
add
orb
mov
inc
pop
sti
daa
ficoml
int
cmp
push
mov
xor
out
jo
mov
andl
in
pop
add
and
sub
add
mov
cmp
enter
adc
dec
jns
popa
mov
pop
pop
jo
pop
push
les
lds
or
adc
dec
es
or
nop
iret
enter
cmp
add
test
ss
fmulp
test
push
shlb
insl
add
popf
faddp
popf
jbe
pop
les
pop
cmp
xor
rcrl
adc
add
mov
stos
mov
sbb
push
inc
sub
sub
or
cmp
cmp
nop
xchg
and
mov
jb
push
xchg
xor
push
xchg
and
dec
orb
add
dec
test
sub
leave
xor
jmp
pushf
or
xor
lods
adc
xchg
dec
sbbb
sbb
fmull
roll
or
adc
sub
xor
iret
xchg
sbb
cmpsb
push
pop
sub
sbb
xchg
inc
sbb
xchg
sub
sbb
fimull
mov
test
mov
imul
fidivl
in
and
add
mov
cmp
adc
push
add
and
jnp
and
jno
sub
fstpl
pop
or
and
adc
sub
popl
adc
mov
push
pop
lods
cmpsl
std
sub
stos
xlat
and
or
stos
in
mov
xchg
je
xor
xchg
cmp
add
sbbb
and
xor
pusha
mov
mov
cmp
mov
pop
add
adc
pop
push
nop
or
hlt
sub
xor
add
adc
sub
loopne
xchg
push
lock
mov
add
outsb
loop
inc
in
jo
ret
mov
push
and
aaa
mov
inc
jge
push
in
sbb
lret
mov
or
jo
xor
push
loope
and
xor
xor
mov
enter
faddl
push
sbb
rol
push
sub
and
and
mov
imul
pop
lds
int
stc
sbb
dec
push
in
sub
call
ja
enter
pop
inc
dec
inc
add
dec
push
push
lea
sub
fdivrs
mov
xor
cld
add
mov
shll
stc
popa
mov
orl
lcall
or
add
movzwl
aaa
enter
or
stos
inc
test
repz
sbb
push
jb
testb
or
push
pop
and
icebp
in
lea
xchg
jbe
and
add
xchg
inc
push
mov
mov
icebp
mov
data16
push
xorb
data16
ret
cwtl
cli
cwtl
addl
fs
and
cmp
and
pusha
and
or
dec
in
add
hlt
insl
inc
mov
add
rcr
addr16
push
inc
inc
lock
out
sbb
leave
sbb
inc
roll
arpl
ja
fidivl
dec
adc
popa
push
sti
shlb
imul
sub
stos
cmp
jne
mov
mov
adc
fdiv
int3
scas
lock
add
pop
push
lods
subb
fsts
js
clts
pusha
pop
leave
adc
fildl
addb
mov
and
cld
xorb
push
jne
or
jnp
test
pop
repnz
nop
or
sti
shl
arpl
cmpsl
sti
add
pop
mov
pop
adc
fwait
lods
popa
push
pop
add
imul
rcrb
or
mov
sub
or
xchg
add
notl
adc
adc
xchg
xor
xorb
clc
sbb
lea
ret
mov
cmp
jle
lock
push
fs
jecxz
add
and
or
inc
ss
push
clc
out
jno
pushl
add
cmp
movl
in
lea
cmp
dec
lods
add
push
inc
sahf
jbe
lods
in
mov
xor
in
lods
addb
shl
movl
add
adc
popf
pop
outsl
jmp
insb
movsb
sbb
or
xchg
iret
jg
mov
mov
fnstsw
test
je
lock
pop
movl
aad
push
fldl
push
sbb
outsl
xchg
mov
mov
and
and
les
lods
mov
fstpl
pop
push
lods
mov
push
cmp
jge
lods
mov
jo
jnp
xchg
add
fsubl
pop
fsub
pop
fsubrp
push
push
js
push
sbbb
dec
or
pop
mov
xor
pop
mov
gs
push
aaa
dec
xor
push
divb
push
or
mov
ss
in
scas
daa
inc
dec
enter
sub
add
dec
or
mov
shlb
or
add
lcall
pusha
ret
inc
arpl
lea
je
into
xlat
cmp
xor
outsb
mov
push
lar
pusha
dec
pop
jne
or
loope
cmp
iret
iret
add
movsb
inc
repnz
cmp
jno
shl
push
mov
push
mov
and
pop
push
push
mov
sbb
add
dec
mov
and
loopne
adc
insb
mov
mov
out
dec
test
mov
fiaddl
clc
fbstp
xchg
push
clc
dec
push
lea
cmp
inc
inc
jg
jb
stos
xor
shld
add
decl
ja
jb
ja
lea
push
push
and
add
push
je
pop
and
addl
in
mull
push
leave
adc
mov
push
imul
and
orl
out
sbb
test
sub
jmp
leave
out
or
in
cmp
enter
mov
imul
inc
loop
sbb
ja
fwait
rorb
fwait
or
fimull
sub
ja
push
adc
ss
push
push
lea
push
popa
test
jle
xchg
mov
push
xchg
dec
inc
cmpw
jne
inc
or
fists
and
cmp
imul
inc
push
jl
mov
fdiv
mov
add
sti
jg
stc
std
mov
or
mov
leave
out
data16
push
cld
mov
faddl
jmp
push
push
sub
pusha
dec
xor
push
test
jp
xchg
and
and
out
inc
arpl
dec
rcrb
mov
and
sbb
add
movsb
and
cmpl
sub
inc
sbb
cmp
cmp
xor
enter
inc
outsb
and
andl
hlt
mov
popf
ret
lds
inc
sub
mov
daa
sub
arpl
pop
ljmp
mov
movsb
std
mov
inc
outsb
mov
pop
or
push
dec
mov
rorb
adc
add
scas
mov
popa
xchg
in
jne
and
or
push
inc
subl
bound
jl
lds
or
scas
in
mov
sub
or
pop
fsubrs
je
movsb
add
cmp
mov
sbb
inc
js
movsl
sbb
dec
imul
andl
inc
pop
sbb
adc
lds
fstpt
ret
pop
add
sub
add
popa
ja
mov
sub
pusha
call
xchg
dec
call
test
push
popa
or
movsb
out
jno
xor
push
enter
popf
add
cs
nop
push
out
inc
shlb
ret
and
dec
mov
jmp
sti
add
or
inc
mov
pop
movsb
outsl
addl
jbe
and
fdivr
outsb
pop
inc
jge
les
xchg
ret
cmp
sub
mov
out
dec
sbb
add
push
pop
mov
push
lret
in
pushl
fdivs
lods
mov
rcll
addl
outsb
out
mov
cs
loopne
mov
mov
scas
mov
notb
es
sbb
cmp
adc
add
ret
lds
loopne
adc
pop
shrb
sub
es
jp
jo
lods
bound
test
push
ja
sub
or
je
gs
lret
mov
fisubrl
sbb
adc
cwtl
adc
mov
icebp
and
xor
std
xorb
jne
push
sub
je
sub
dec
test
lcall
dec
jne
andl
adc
sub
xor
jmp
push
push
jl
jmp
push
push
and
js
mov
add
dec
shrl
pop
jmp
in
rcr
cmp
shll
push
pop
adc
adc
push
mov
nop
pop
out
out
jl
mov
movsl
push
push
lock
push
mov
lea
sbb
pop
cmp
std
test
push
inc
mov
jbe
subb
inc
ja
adc
or
dec
add
xchg
mov
movl
xchg
repnz
inc
sbbb
cmp
jne
scas
es
sub
cmp
pop
inc
dec
inc
sar
adc
stos
push
pop
cmp
sub
idivb
add
mov
fwait
push
mov
fadd
push
mov
cmpb
aaa
push
jnp
jl
movsb
dec
jnp
or
xor
add
mov
dec
icebp
imull
stos
push
xchg
mov
nop
filds
fsubrl
push
cld
imul
dec
jbe
xchg
ja
dec
sbb
js
jg
or
sbb
dec
lahf
in
adc
jle
pop
push
push
out
cmp
imul
push
stc
iret
repz
add
sbb
repz
inc
dec
pop
fs
pause
lcall
iret
ret
loop
div
cmp
add
push
push
and
iret
repz
xor
dec
push
pusha
push
iret
repz
orb
repnz
outsb
dec
mov
mov
add
and
ljmp
jg
es
cmpb
mov
mov
lret
sbb
adc
lea
push
inc
int
movsl
mov
jmp
cmp
add
ja
test
or
pusha
sar
mov
jmp
jl
mov
lcall
cmpsb
lret
dec
push
mov
test
decl
add
out
fcompl
insl
dec
cmp
xchg
push
mov
mov
or
pop
not
add
lods
pop
faddl
ret
int
xchg
mov
pushf
push
inc
pushf
movsl
nop
pushf
shlb
sbb
loope
adc
xor
add
and
inc
mov
test
test
adc
movsb
mov
add
pop
in
popf
es
ss
in
jnp
out
pop
ja
rorb
cmp
vmread
scas
sub
sub
jmp
and
clc
adc
ss
push
popa
or
loopne
clc
push
dec
jge
cs
lea
push
mov
adc
bnd
or
shlb
add
push
or
dec
sahf
mov
adc
mov
fs
je
add
gs
push
mov
push
enter
loope
adc
adc
push
dec
dec
jmp
and
gs
bound
cltd
shrb
inc
cs
push
incb
and
shlb
xchg
or
scas
xchg
out
and
jp
daa
iret
pop
adc
mov
sub
adc
test
inc
sbb
add
outsb
faddl
pop
adc
fists
fiaddl
mov
xchg
sahf
and
jl
lds
test
or
xchg
das
adc
xchg
or
fnstenv
sbb
dec
mov
push
inc
js
int
fistl
call
push
int3
lea
fmull
faddl
sbb
int3
inc
shlb
cmp
push
rolb
jnp
mov
xchg
fwait
je
mov
fdivrl
mov
out
push
sbb
rorl
sbb
or
sub
mov
inc
dec
div
push
ds
arpl
cmpsb
aad
jle
dec
pop
pop
mov
xchg
leave
test
sub
mov
gs
in
push
dec
rorb
push
and
stos
push
cs
jb
das
push
lcall
test
xor
xor
scas
mov
jae
jae
movsb
sub
sub
jae
shrb
test
mov
xchg
enter
xlat
aad
daa
xor
icebp
mov
xchg
dec
lea
je
adc
test
or
cmp
add
xor
xor
push
insb
xlat
cmp
xor
or
test
sbb
ret
mov
repz
dec
int
and
movsl
rolb
stos
and
push
inc
movsb
test
movsl
pop
pushf
cmp
mov
push
inc
cld
mov
mov
cmp
sbb
cmp
jae
mov
into
sub
dec
push
enter
xchg
inc
mov
movsb
and
cmp
push
and
aas
and
jae
loopne
sub
push
or
negb
sub
cmp
xor
test
loop
repnz
scas
adc
jmp
pop
loopne
xchg
inc
sub
inc
fwait
cs
scas
xor
stos
push
jmp
mov
ss
sbb
pop
inc
test
out
test
or
pop
sbb
add
dec
push
lcall
mov
bound
xor
dec
inc
out
lock
mov
mov
sub
cmp
enter
adc
xorb
and
insb
loop
cmp
and
xchg
sub
repnz
cmp
sbb
adc
inc
and
pop
adc
cmp
pop
and
mov
jmp
or
shlb
in
ds
aaa
cmp
repnz
ret
aas
sbb
push
pop
popa
pop
inc
das
pop
lock
enter
xor
andl
jecxz
jg
adc
dec
and
mov
inc
outsb
rclb
inc
and
inc
push
mov
inc
pop
mov
sbbb
push
cmp
add
push
test
jmp
push
sub
mov
ss
add
and
jns
inc
inc
and
outsl
xchg
pop
inc
push
dec
dec
repz
add
mov
dec
add
out
add
gs
sahf
pop
fidivrl
bound
dec
cmpsl
std
pop
jle
push
hlt
fcmovnu
sub
push
int
jmp
lods
int
fnstsw
add
sbbb
insb
mov
cli
xchg
mov
cltd
lea
xor
pushf
sbb
dec
push
xor
adc
mov
enter
or
push
rcr
lea
fucom
in
mov
sbb
sbbb
cmc
out
in
and
push
pop
call
sub
roll
ja
jp
adc
loop
int3
sbb
jecxz
lods
mov
cmp
push
leave
jae
mov
add
je
pop
scas
inc
shlb
jno
dec
sbb
mov
pop
mov
in
push
cwtl
iret
and
and
inc
mov
dec
xor
inc
adc
arpl
lock
faddp
adc
mov
push
mov
es
ficompl
lock
enter
inc
outsb
pop
inc
adc
cmpsl
mov
push
push
push
fwait
nop
fwait
pop
xchg
push
pop
and
sbb
push
dec
enter
push
movsb
push
dec
rol
jl
lods
push
test
jl
push
pop
dec
enter
mov
add
lods
push
xchg
mov
push
gs
faddl
test
push
inc
adc
and
adc
inc
jl
movsb
ret
shll
fiaddl
or
inc
sbb
nop
je
xchg
add
daa
cmc
cltd
sub
pop
rorb
pop
xchg
and
push
sbb
dec
and
sbb
loope
lcall
push
cwtl
dec
je
dec
lock
xor
adc
xorb
test
and
jo
push
pop
pusha
push
add
adc
pop
add
dec
add
add
cltd
in
call
sbb
shlb
in
cmp
mov
xor
sbb
xchg
inc
sahf
push
mov
adc
loopne
jno
jecxz
push
add
popl
push
loopne
add
ret
rcrb
loopne
push
xchg
add
add
push
iret
movb
dec
jg
push
negb
push
xchg
call
sbb
pop
adc
push
jo
pop
inc
xlat
dec
loope
push
jne
cmpsb
push
testl
stc
or
sub
ret
clc
xorb
fimull
xor
push
imul
push
pop
hlt
pop
sti
jge
and
aas
lahf
mov
shlb
lds
adc
and
mov
loopne
adc
xor
push
or
or
cmp
andb
dec
push
mov
add
pop
pushl
leave
sbb
rcrb
sbb
shr
jne
jo
add
icebp
ret
push
fistps
sub
add
mov
test
imul
push
sbb
jns
push
mov
inc
sbb
shll
adc
int3
sbb
inc
lcall
ror
outsb
scas
pop
sbb
popf
push
and
js
and
mov
sbb
insl
and
or
scas
shlb
in
daa
test
xchg
sub
mov
cmpsb
lods
orb
and
and
rolb
mov
movsl
xchg
pusha
cmp
mov
je
adc
cmpb
push
clc
sbb
sbb
stos
call
loop
sub
shrl
lar
mov
movsb
sub
sub
add
insl
xor
loopne
and
cmp
xor
xchg
and
and
add
adc
es
mov
sbb
dec
xor
and
rolb
lahf
mov
je
popa
dec
adc
pusha
xchg
int
stc
sbb
mov
shrb
mov
push
sbb
or
sbb
and
jne
cwtl
les
mov
cmpsl
inc
or
push
or
pop
shrb
xor
lock
mov
inc
imul
sbb
fldl
fwait
or
imul
sbb
add
repnz
adc
add
lock
xacquire
ja
jae
hlt
or
add
dec
ret
or
xchg
push
jmp
fcoml
repz
xorb
inc
jbe
fcomps
cld
mov
sarl
xor
xor
or
loop
add
jge
cwtl
loop
lea
out
add
int
mov
cmpsl
cli
jne
cmp
jbe
in
or
enter
dec
jmp
lcall
add
outsb
fsts
aad
imul
pop
pop
sahf
pop
sub
jl
mov
push
hlt
adc
inc
cmp
popa
add
inc
push
sub
ss
xor
push
pop
or
pop
cmp
fsubrs
ljmp
clc
jno
push
lret
sub
insb
pcmpgtd
jb
mov
lret
mov
jg
lahf
push
lock
addr16
push
addl
dec
push
test
pop
mov
leave
fld1
adc
rcrb
add
sub
cmp
jbe
pop
add
aas
lcall
cli
ret
lret
jl,pt
cmp
add
mov
cmpl
push
or
iret
jne
pop
adc
inc
pop
push
inc
cmp
jae
cs
dec
mov
and
je
mov
dec
sar
call
add
jmp
mov
int3
or
push
sbb
mov
jp
and
add
add
jg
pop
mov
imul
ret
jno
jge
xor
scas
lods
sub
in
test
loope
js
dec
or
dec
fcomps
ds
ret
cli
cmp
rcrb
lret
pop
push
rcl
sub
jne
decl
add
or
mov
adc
xor
xchg
rorb
pop
pushl
andl
xchg
pop
mov
aad
mov
icebp
dec
dec
add
cltd
popf
loope
insb
gs
add
sub
cmpb
push
or
cmc
xchg
add
cmc
aaa
sbb
mov
cmp
jl
or
je
cmp
or
mov
jmp
movzbl
movb
movsbl
shr
mov
mov
and
mov
inc
mov
daa
pop
jne
pop
mov
mov
loopne
shlb
push
les
test
mov
and
mov
js
cmp
loopne
cmpsl
fs
sub
scas
test
xchg
push
push
lcall
xor
sbb
pusha
adc
in
stos
add
das
xor
sub
jge
pop
shll
or
insl
dec
popf
inc
lock
es
inc
mov
fdivr
iret
jl
cmpb
je
dec
and
add
xor
lods
xchg
push
or
cmc
cli
add
cmp
into
movsl
xchg
mov
or
inc
push
xchg
mov
movsb
adc
sub
cmp
dec
inc
jg
lret
jo
js
add
stos
cmpsb
pop
in
mov
data16
mov
loop
enter
data16
es
push
leave
and
mov
addr16
loop
push
add
inc
fxrstor
scas
add
or
or
arpl
push
jecxz
xor
jo
cmp
adc
cwtl
dec
xchg
add
loopne
push
mov
lcall
add
push
inc
and
imul
shlb
mov
push
sbb
mov
shlb
push
dec
jo
call
jns
mov
insl
dec
add
mov
imul
pusha
in
stos
nop
cmp
cmpsb
jge
repz
cmp
enter
add
mov
adc
adc
shrb
jne
add
add
fcomps
add
stos
ret
jnp
cmp
mov
ret
je
aam
pop
inc
loope
and
xchg
test
xchg
inc
push
subb
rorl
ret
out
loop
sbb
lret
or
jle
fcom
repz
ss
xchg
pop
adc
ss
xor
jmp
inc
cli
out
or
push
rolb
mov
lods
push
cltd
add
cli
and
and
or
sub
xlat
jnp
popa
test
add
dec
in
ret
mov
orb
sbb
dec
pop
cltd
imul
rcrl
pop
and
cmp
push
movq
ljmp
enter
and
jp
shrl
or
adcb
out
test
fidivrl
add
mov
xchg
push
shlb
dec
sub
add
sub
push
mov
sbb
and
push
in
mov
and
cmpsl
lods
fwait
cmp
sbb
and
jne
or
push
jmp
push
sub
cmp
mov
das
out
mov
sarb
pop
andl
test
push
lock
outsl
insl
mov
cmp
into
sub
push
sub
sbb
mov
and
je
sub
les
iret
ret
je
inc
mov
push
pop
and
cltd
loop
stos
in
push
inc
pop
push
add
pop
and
and
add
dec
add
push
add
pop
out
xlat
shr
mov
and
and
ljmp
sub
jbe
je
mov
or
rorl
ds
mov
hlt
mov
in
dec
push
xor
jne
je
inc
fimuls
xchg
sarb
test
js
enter
jnp
fwait
hlt
add
add
insb
push
js
lods
int3
add
daa
pop
in
iret
test
adc
or
push
movsl
push
mov
xchg
hlt
cmp
xchg
and
mov
filds
lret
xor
jne
loope
xor
dec
adc
fildl
shll
lea
lahf
jo
scas
mov
dec
mov
test
imul
pop
inc
pop
xchg
jne
or
add
xlat
lcall
fdivs
ja
ss
les
ds
rdtsc
xor
rorl
dec
mov
mov
mov
enter
push
ja
xor
xchg
adc
inc
das
je
jge
jnp
arpl
int
sbb
or
push
inc
pop
outsl
das
xor
nop
xchg
mov
pop
jecxz
add
ja
dec
in
insl
idivl
cmp
test
jne
es
pop
mov
gs
jb
jne
jno
pop
mulb
movsl
mov
sbb
or
add
and
fldenv
and
cmp
fs
xchg
push
sub
pop
and
push
lea
cmp
lret
cmp
mov
lcall
push
push
shl
jmp
rorb
enter
lods
push
test
inc
push
sub
das
bound
or
cli
imul
or
movsl
push
cmp
dec
xchg
addl
jle
insb
cmpb
adc
or
mov
and
cmp
stos
inc
add
inc
or
xor
adc
jecxz
push
sub
adc
sbb
sub
jno
inc
inc
cmp
inc
pop
pop
dec
pop
sub
pop
or
ret
ret
xchg
shrd
sbbb
sbb
mov
sbb
rcrl
push
or
ret
roll
mov
and
inc
data16
cmp
fistl
inc
add
out
jne
daa
bnd
adc
iret
repz
hlt
jne
or
jne
or
mov
mov
add
sbb
adc
js
pop
mov
test
sub
jg
rcll
inc
sbb
add
mov
sbb
push
ss
jne
mov
inc
lea
fstl
mov
cmpb
sbb
pop
mov
fstpl
lea
sbbb
test
shlb
sbb
mov
gs
and
inc
jb
out
lret
mov
stc
inc
rolb
mov
jbe
xor
mov
xlat
mov
cs
xchg
xor
aad
int3
int3
dec
imul
pusha
lea
pusha
movsb
cmp
xchg
jne
out
and
adc
or
jp
imul
adc
sub
fcom
loopne
shlb
jnp
inc
lea
dec
in
adc
pop
dec
xchg
rorl
sub
jl
cmp
xor
mov
sbb
ss
cwtl
lcall
jl
and
mov
subl
push
xchg
insl
mov
movsb
cmpsl
mov
jne
or
pop
jmp
orl
aaa
imul
or
pushw
inc
xchg
fs
nop
xchg
fs
push
jne
pop
enter
into
xor
xor
fs
sbb
ficoml
mov
inc
insb
pop
add
icebp
mov
cld
mov
rorb
imul
cmc
fsubs
or
inc
and
or
mov
mov
pop
data16
add
out
fnsave
call
or
add
out
inc
rorb
int3
or
into
inc
andb
push
jmp
sub
dec
fiaddl
xor
mov
add
mov
add
xor
je
dec
cmp
insl
andb
movsb
nop
xchg
adc
fldcw
or
pop
mov
pop
xor
xchg
xor
mov
rcl
and
loope
xchg
stos
les
test
pop
mov
dec
insb
push
pushl
mov
jge
jp
push
roll
cmp
icebp
and
imul
insl
test
dec
sbb
testb
subb
mull
popa
and
pop
pop
ret
xorl
or
popa
aas
dec
lock
cmp
mov
in
push
xchg
pusha
aaa
dec
add
xchg
ja
and
insb
popf
or
cmp
xchg
push
orb
mov
push
mov
jmp
jo
ret
ljmp
ss
mov
popf
fidivl
stc
movsl
in
or
xor
xchg
stos
pop
sbb
adc
and
and
inc
mov
sti
sub
xchg
jno
gs
adc
sub
lds
out
jb
sub
pop
xor
push
xchg
inc
es
sbbb
adc
and
adc
push
xor
mov
push
mov
into
add
and
inc
test
xor
and
adc
fldl
inc
or
push
add
mov
xchg
inc
es
daa
je
inc
xor
sub
xor
and
xor
and
imul
fs
add
hlt
lea
cs
mov
dec
and
inc
and
sub
sub
push
leave
pusha
popf
or
push
outsl
xorl
enter
add
add
sbb
and
add
lods
sbb
out
mov
xchg
jno
mov
fnsave
mov
arpl
jmp
mov
xchg
inc
or
jp
xchg
xchg
pop
in
shr
dec
loop
xor
and
js
scas
and
jae
je
push
test
pop
or
pop
lea
add
sbb
sbb
fcompl
mov
in
outsl
xchg
fcompl
mov
inc
lock
fisttpll
mov
movsb
fldcw
rol
leave
lods
inc
sarb
aam
add
in
add
add
inc
adc
add
lahf
orb
test
ss
push
add
insl
or
add
inc
push
les
and
xchg
call
es
mov
idivb
mov
in
call
fadds
sub
sti
out
loopne
mov
pop
loope
inc
add
jne
sbb
pusha
cmpsl
loopne
in
push
or
test
adc
jecxz
mov
xchg
pop
shlb
sub
dec
fwait
inc
lock
pop
add
hlt
or
and
mov
je
or
and
mov
or
pop
mov
sub
data16
ficoml
adc
pop
cmc
pop
mov
emms
clc
adc
loopne
add
inc
arpl
xchg
inc
xchg
pusha
xorl
sbb
fadd
loopne
movsb
lods
mov
push
inc
mov
jne
push
test
out
xchg
repnz
clc
and
adc
mov
jo
loop
push
stos
cmp
jae
push
jne
pop
ljmp
inc
loop
es
lahf
outsb
mov
jne
mov
ljmp
and
popa
cmp
rcll
mov
mov
xor
jnp
add
and
call
roll
xchg
add
inc
imul
dec
ffree
inc
fldenv
xchg
test
daa
push
pop
add
mov
or
add
js
inc
je
and
fwait
push
inc
mov
sub
adc
stos
cmp
or
dec
add
mov
xchg
add
add
push
xchg
mov
add
pop
mov
or
es
pop
add
push
inc
pop
movsl
adc
jecxz
test
movsl
adcl
les
xor
lds
cli
loop
sbb
call
jmp
push
outsl
jmp
test
sbb
xor
adc
adc
adc
fisubrl
sub
out
shlb
fdivrl
lret
outsb
add
or
mov
andb
cmp
rorb
outsb
add
fmul
mov
sbb
popa
in
and
adc
or
iret
jne
movsb
nop
fdivl
pop
push
stc
pop
cwtl
push
pop
arpl
xor
pop
jl
pop
adc
push
movsb
sbb
sahf
push
xchg
in
pusha
addl
add
mov
dec
mov
xchg
cs
sub
daa
pop
fmuls
mov
or
sbb
gs
add
mov
shlb
pop
add
jmp
add
sub
dec
pop
mov
push
mov
adc
or
or
loop
test
idivb
ret
mov
shr
pop
or
cmpb
aaa
insl
and
roll
jo
movsb
ret
scas
jo
and
dec
lock
je
movsl
ja
xchg
leave
or
test
or
repnz
cmp
je
or
test
adc
rolb
sbb
inc
loop
mov
push
clc
jl
sbb
push
cmpb
rcrl
ret
xchg
hlt
jae
movsbl
sbb
inc
xor
daa
in
mov
mov
mov
jmp
cmp
dec
ds
jmp
and
mov
add
lea
and
dec
inc
lods
decl
add
or
jecxz
or
add
inc
cmp
jl
ljmp
xor
cltd
and
add
roll
add
add
clc
outsl
jnp
cmp
pop
xor
ss
cmp
ret
and
sbb
inc
jne
fimuls
shr
xor
or
push
pop
test
fs
sahf
fstpt
jmp
dec
mov
sbb
pop
or
xor
or
stc
sarb
lods
imul
add
fadd
lea
mov
jne
add
sbbl
sub
inc
mov
jnp
mov
cmp
jl
lcall
sub
add
js
lret
clc
pop
cli
js
inc
mov
pop
incl
add
dec
jne
pop
jg
dec
addb
rolb
or
repnz
jge
out
add
or
dec
es
or
dec
pop
dec
inc
cmpsl
aam
xchg
add
adc
jge
sub
mov
add
test
pop
inc
in
mov
mov
xor
add
push
xor
mov
test
leave
repz
popa
sbb
repz
mov
scas
mov
mov
add
stos
sub
fcmove
enter
ret
bound
lea
push
add
push
jmp
shl
push
xchg
dec
push
push
or
or
cmp
mov
outsl
pop
addr16
outsb
pop
nop
push
dec
pop
add
daa
lock
push
ds
xchg
in
push
push
sbb
std
push
clc
xor
push
and
jae
aad
dec
mov
sub
insb
mov
fcomps
mov
mov
dec
dec
js
add
into
outsl
popa
bound
sbb
pusha
mov
inc
ss
jns
lret
add
xor
aas
or
push
jle
mov
bound
js
inc
sub
lea
jbe
in
hlt
push
lret
ficomps
adc
pop
adc
mov
sahf
cmp
inc
iret
push
mov
fdivl
in
arpl
pop
ss
inc
sbb
mov
mov
push
adc
insl
mov
push
cmp
mov
adc
dec
sbb
pop
push
xchg
sbb
xchg
xor
fstpl
bound
push
pop
rorb
addr16
push
mov
and
add
xchg
or
mov
int
shl
mov
int
inc
xchg
adc
int3
add
aam
xchg
ficomps
jne
daa
mov
or
sub
ret
xor
push
rcl
mov
sbb
xchg
lret
add
aam
ret
add
sbb
jno
shlb
sbb
push
push
pop
aam
lcall
andl
aam
mov
fs
pop
cld
jmp
mov
and
dec
jb
push
jge
add
std
push
cmp
rolb
xchg
arpl
dec
cmp
cmp
int3
or
adc
les
js
cmp
mov
mov
adc
mov
mov
mov
cmpsb
je
jp
cmp
adc
es
sub
das
das
or
dec
mov
and
fnstcw
dec
mov
or
pop
insl
adcl
test
jl
aaa
cmp
sub
pop
mov
xor
xchg
ljmp
inc
add
fdivs
inc
xchg
adc
push
pop
pop
xchg
jb
mov
mov
cwtl
loopne
fdivrl
pop
jge
nop
loopne
sbb
mov
in
mov
push
sbb
mov
push
daa
movsbl
shl
call
jo
ss
incl
fdivrl
jmp
mov
out
test
cwtl
mov
test
jae
push
sbb
lret
dec
movsb
mov
dec
ss
xchg
rolb
loopne
add
stc
add
or
movsl
push
mov
jmp
dec
dec
xor
cmpsl
pop
push
push
adcb
dec
push
addr16
xchg
je
add
mov
aaa
add
test
nop
test
jo
push
sbb
mov
insl
loop
or
les
shlb
jecxz
js
jle
test
inc
mov
mov
es
add
call
lock
adc
pusha
shr
inc
outsl
mov
inc
mov
fiadds
pop
xchg
cmc
imul
sub
add
pushl
rorl
jnp
mov
jo
clc
pop
mov
sbb
fiadds
sub
xorl
clc
das
arpl
mov
imul
or
insb
inc
or
rolb
jecxz
cmc
hlt
mov
bound
mov
jmp
xor
decl
mov
mov
inc
mov
sbb
mov
cmp
jl
dec
mov
addl
mov
push
stc
sarb
sub
push
idivl
push
incb
mov
add
lods
mov
push
mov
nop
mov
dec
or
cld
test
leave
push
xor
mov
inc
call
jne
pop
jo
xor
push
mov
pop
scas
dec
pushl
fldl
mov
js
mov
insb
std
and
icebp
into
push
mov
push
jg
loopne
xor
or
push
add
in
hlt
mov
in
cltd
movsb
jb
in
mov
iret
push
mov
int
and
lret
test
adc
xor
mov
cmovno
mov
cmp
push
enter
in
pop
cmp
ja
mov
iret
xor
mov
and
xchg
mov
stos
adc
and
and
mov
xchg
xchg
add
xor
mov
inc
xor
addr16
inc
xor
and
adc
add
mov
rorl
dec
and
test
xchg
lret
push
popa
xchg
xor
dec
je
in
sub
and
mov
mov
push
jns
add
mov
sbbl
fmull
test
test
sub
sar
shlb
lea
cmp
jbe
cmp
jbe
mov
mov
out
mov
fdivs
jle
roll
into
xchg
mov
in
mov
mov
adc
cmp
and
std
add
or
add
inc
dec
xor
nop
ret
push
test
fcmovnu
inc
jge
cmp
movlps
clc
mov
push
fcoms
jnp
push
call
push
push
push
cmp
jmp
push
mull
lds
mov
sbb
test
pop
ret
add
hlt
enter
addb
scas
fsts
mov
cmpsb
outsb
mov
pmuludq
daa
gs
les
repz
jnp
call
push
fcomps
push
pushf
mov
movsb
mov
pop
sbb
loop
push
push
xchg
push
ja
sub
or
or
add
or
aas
in
mov
shlb
jne
into
cltd
xchg
jnp
in
push
sbb
lds
add
sbb
mov
add
mov
aas
jb
ficoml
movsl
sub
cmp
icebp
add
adc
xor
dec
xchg
inc
add
in
jbe
cmp
movsl
sbb
sub
rorl
xor
adc
aam
push
push
xchg
loope
icebp
add
and
lods
mov
add
mov
jne
inc
mov
mov
mov
lret
scas
pop
shrl
test
jmp
push
repz
push
add
loope
shl
cmp
out
enter
pop
js
push
inc
jle
xor
xlat
pop
insl
sub
add
push
ret
and
ret
lods
add
fstl
nop
mov
mov
popf
mov
add
enter
adc
mov
push
push
loopne
mov
xchg
outsl
dec
sti
dec
sbb
repz
add
loopne
push
jbe
mov
pop
stos
jle
add
jbe
in
scas
add
inc
fdivrs
push
aam
sbb
xchg
shlb
cmp
out
add
stc
mov
adc
test
and
xor
or
out
fdivl
mov
je
lods
and
add
test
outsl
les
fcoml
mov
add
inc
mov
push
lret
maxps
push
lcall
push
mov
pop
out
add
sbb
adc
cmp
push
dec
fwait
nop
or
pop
fidivrl
aaa
aas
push
lret
mov
jmp
push
test
cltd
add
fsubrl
fdivl
jbe
pop
stc
adc
inc
add
test
or
negb
push
insb
or
sub
add
nop
add
iret
cltd
scas
sub
jbe
jmp
pop
je
pop
sbb
mov
ljmp
insl
pop
sub
mov
popf
and
wbinvd
mov
pop
pop
mov
leave
xor
or
mov
lcall
popf
pop
lea
sar
imul
ret
sbb
ja
add
add
inc
incl
sub
mov
jb
mov
xchg
add
push
data16
jmp
ret
jo
push
xor
xchg
jmp
push
dec
mov
adc
hlt
mov
xchg
inc
push
std
addr16
push
push
push
dec
iret
rorb
cwtl
mov
dec
or
or
push
in
push
ret
lahf
imul
jo
lcall
int3
inc
call
cli
and
cmp
jbe
filds
lods
or
hlt
sub
cmp
pop
push
sbb
or
mov
sti
and
cmp
imulb
loop
lret
ds
sti
int3
nop
cmpsl
or
push
rcrb
sub
bound
xor
repnz
ja
sbb
pop
clc
jne
mov
add
push
jnp
mov
inc
pop
leave
add
dec
jl
cld
out
pusha
pop
inc
add
mov
loop
fldt
xor
cmp
inc
and
arpl
mov
sbb
adc
push
mov
insb
push
push
call
cmp
sbb
and
jmp
add
call
aaa
jecxz
ret
sub
add
inc
add
insb
ljmp
rcrb
sarb
sahf
inc
jmp
add
sbb
dec
jbe
and
lock
sbb
es
jae
pop
xchg
roll
lods
mov
shl
subb
or
sbb
dec
imul
jo
dec
addl
or
sbb
addr16
adc
and
imul
push
xor
add
inc
push
sbb
add
sbb
in
cmpb
out
and
xor
cmpsl
loope
in
out
push
mov
sub
shlb
lret
int
pop
jmp
mov
jecxz
inc
sub
pop
into
adc
dec
pusha
ret
pop
sub
repnz
enter
and
jo
adc
cld
mov
xchg
sahf
ret
nop
insl
jle
test
dec
xor
test
outsb
xor
add
mov
sbb
aas
push
das
inc
loope
movaps
push
or
lahf
std
pop
in
adc
lea
push
or
outsl
xlat
pop
inc
mov
pop
sbb
mov
adc
es
xchg
insb
jl
iret
andb
xor
mov
sbb
pop
adc
enter
add
xchg
dec
and
ret
xchg
decb
ret
push
das
fwait
push
xor
ret
dec
mov
cmp
mov
add
cmp
inc
in
sahf
pop
mov
sbbb
stos
adc
rolb
sub
mov
insl
push
push
arpl
inc
inc
rorb
push
ret
fimull
ret
jne
test
push
das
and
sub
adc
cli
add
lahf
inc
je
adc
adc
cwtl
sarb
mov
mov
fstpl
jo
movsb
xor
xor
das
push
or
popf
mov
enter
ror
jecxz
adc
jb
push
cmp
push
cs
mov
loopne
cmp
ret
inc
movhps
test
in
ret
sbb
pop
test
cmp
iret
jp
or
add
aam
mov
lods
test
xorb
in
inc
sbb
movsl
sbbl
test
and
shrl
pushf
xchg
icebp
lahf
inc
or
push
jecxz
push
or
inc
es
popa
push
outsl
ret
adc
cmp
pop
dec
mov
roll
add
mov
pushl
outsl
lea
push
daa
xchg
mov
xor
add
fsubrl
cmpsb
jle
add
jbe
fdivl
jmp
mov
jmp
and
add
cmc
fsubs
test
cmp
push
data16
ret
mov
pop
dec
mov
cwtl
stos
add
out
outsb
pop
mov
mov
int3
iret
push
dec
mov
lock
pop
push
scas
subl
push
adc
pop
and
xchg
xor
and
jb
push
andl
pop
fld
inc
push
push
mov
xor
cmp
xor
rcrl
aaa
popa
pusha
es
push
ret
adc
imul
je
add
push
sbb
mov
lock
insl
pop
push
push
pop
push
inc
ret
xor
sub
stc
hlt
and
sbbb
and
je
cmp
fisubrs
imul
xorl
mov
mov
fldt
cmp
je
or
mov
cmp
pop
sahf
idiv
addr16
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
in
jmp
dec
mov
dec
xor
fbld
or
cmpsb
mov
sub
inc
adc
je
testl
lcall
fdivrp
cmp
jbe
add
pop
add
dec
fdivr
aas
inc
cmp
je
sub
inc
jmp
inc
and
addl
mov
test
rcrb
add
sub
mov
mov
loopne
cmpsb
repnz
je
aam
mov
add
jo
xchg
push
adc
into
xor
mov
mov
add
xor
les
mov
cld
inc
cmpb
jne
and
cmp
jne
outsb
hlt
cmpb
cmp
in
and
adc
cmpsb
bound
jp
sub
add
clc
push
mov
jb
push
ja
js
sub
push
nop
adc
xlat
add
xor
lods
push
les
push
xchg
mov
adc
sbb
pushf
movsl
adc
cmp
dec
mov
flds
or
mov
or
movsl
data16
inc
fldl
aaa
jae
movl
fxch
shrb
shl
add
jmp
pushf
aas
and
sti
and
cmpsb
and
test
push
or
adc
fs
jne
sub
and
lock
sub
mov
or
push
outsb
pop
jae
mov
jmp
dec
rcl
pop
inc
dec
push
or
mov
movl
mov
pop
mov
push
add
push
int3
pop
mov
xchg
int3
inc
jg
or
add
jge
je
or
jle
mov
outsb
outsb
es
sub
sub
and
pop
or
jl
mov
push
adc
xchg
test
das
movsb
ret
lea
cmp
jbe
push
hlt
cmp
or
adc
adc
je
add
repz
test
jne
pop
in
add
jb
ds
and
push
push
xor
inc
es
push
xor
adc
movb
inc
push
loope
sub
mov
xchg
adc
sbb
repz
push
mov
inc
and
and
adc
add
or
loopne
xchg
shl
jae
add
sbb
mov
inc
push
lcall
jbe
clc
push
add
sub
les
and
js
mov
push
xlat
and
add
adc
inc
leave
mov
pop
or
pop
adc
pop
ret
mov
pushf
cmc
inc
add
xchg
divps
clc
xor
rolb
inc
sahf
test
adc
push
push
push
imul
pop
dec
test
xchg
mov
jg,pn
ja
loopne
jl
sarl
aad
mov
and
jbe
push
out
and
add
cmp
sbb
js
out
or
cltd
lods
jp
push
adc
push
mov
pop
loope
and
cmp
ss
sbb
out
mov
inc
pusha
test
in
out
and
add
mov
jns
pop
lea
loopne
stos
repz
push
adc
cmp
leave
adc
xchg
cmp
lds
jmp
andl
jae
mov
nop
and
inc
push
rclb
in
ror
cwtl
sub
ret
js
aam
sbb
mov
fisubrl
pop
push
movl
push
adc
dec
or
sbb
jmp
xor
push
lahf
jbe
pop
lret
jnp
inc
add
pop
cli
push
add
fbld
incb
push
mov
stos
lds
shll
int3
add
inc
sub
cmpsl
add
lds
int3
aaa
subl
jecxz
or
or
jp
pop
outsb
je
mov
mov
mov
mov
mov
lea
outsb
dec
sarb
call
push
pop
push
jmp
pop
push
mov
push
cmp
pop
cmovo
dec
lea
pusha
rcrb
sub
push
mov
pop
push
inc
fdiv
jge
rcrb
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
ss
cmp
cld
pop
inc
movsb
inc
push
pop
nop
push
cmp
getsec
out
dec
cmp
pop
lea
jo
cltd
mov
push
mov
mov
movsl
xchg
stos
pop
inc
jl
pop
adc
xchg
sbb
mov
clc
pop
je
test
dec
push
call
inc
jmp
xor
lea
sub
shll
xorl
nop
add
push
dec
mov
xor
cld
pop
subl
pop
or
mov
sub
clc
mov
sub
push
inc
lea
sbb
in
xor
push
sbb
inc
push
in
mov
stc
loop
or
add
sahf
cmpsl
mov
cmp
je
push
aaa
cld
pusha
or
add
leave
add
pop
inc
cmpsl
pushf
dec
ja
push
cmp
mov
test
fnstenv
sbb
mov
adc
addr16
or
sti
pusha
jb
add
xchg
inc
orl
xchg
push
sub
inc
inc
mov
push
rorb
ja
mov
mov
jmp
and
gs
roll
push
ljmp
jnp
mov
loopne
cmpsl
lds
sti
sub
mov
push
cld
inc
inc
push
push
popf
test
lahf
cmpsl
inc
pop
xchg
addl
addb
xchg
xchg
int3
mov
test
xchg
or
inc
mov
loope
mov
mov
fstpl
push
xor
or
inc
bound
jbe
test
adc
inc
xchg
push
lcall
sbb
call
faddp
sbb
dec
jl
push
pop
aam
mov
fmul
rolb
enter
sub
das
fs
or
sbb
dec
add
pushf
mov
xchg
mov
sbb
ds
cwtl
cmpl
dec
push
bound
dec
jnp
ret
push
push
lret
cwtl
adc
dec
mov
subl
in
imul
jnp
das
movl
loopne
add
dec
fmul
cmpl
stos
fiaddl
sti
mov
cmc
push
add
add
test
inc
sub
dec
orl
jg
or
scas
jmp
push
aaa
rolb
inc
je
fstps
cmp
out
jge
outsb
inc
mov
or
jne
dec
mov
jne
push
push
addl
mov
cmpsb
scas
and
inc
jp
test
jae
mov
push
cmp
test
test
ja
pop
jmp
cmp
adc
push
fs
imul
add
add
push
loopne
ret
cmp
pop
mov
pusha
fsubr
cmc
xchg
jne
mov
icebp
cmpsl
popa
xchg
lods
fwait
mov
loopne
mov
repnz
fsubs
and
aas
je
cmp
imul
and
jne
push
imul
cmp
pop
jne
pop
call
repnz
mov
in
xor
jl
pop
jle
cmp
jne
jmp
sbb
sbb
lret
sub
mov
mov
sbb
mov
push
sub
push
nop
addr16
cmp
ret
jne
mov
sbb
loopne
add
je
pop
in
cmp
arpl
stc
mov
cs
pop
je
sti
scas
push
inc
out
dec
xchg
repz
jmp
pusha
mov
dec
in
arpl
scas
jg
add
pusha
xor
push
mov
sti
inc
enter
repz
sub
incb
je
add
cmpl
clc
and
pop
xchg
pop
dec
or
adc
sti
sbbb
push
or
in
mov
faddl
mov
scas
or
inc
decb
sbb
and
pop
clc
adc
fwait
ret
push
add
addl
mov
push
pop
pop
loopne
std
push
mov
and
push
and
fildl
dec
inc
mov
sbb
xchg
adc
mov
add
in
out
sub
lret
loopne
push
jno
xchg
xchg
dec
push
push
push
pop
pop
lret
in
mov
mov
loope
or
stc
dec
stos
pop
inc
or
popa
push
sub
add
addl
xor
xor
inc
ljmp
mov
push
cwtl
mov
dec
push
sub
sarb
push
aas
jmp
push
shrl
mov
adc
and
adc
push
xor
push
or
inc
adc
sub
int3
adc
pusha
sbb
xor
imul
adc
or
or
add
daa
cmp
sub
mov
dec
xor
inc
xchg
push
es
pop
addl
pop
fidivrs
jecxz
xorl
or
sti
pop
dec
cmp
inc
imul
sub
pop
jmp
shlb
mov
je
into
sti
mov
lods
or
sti
and
add
test
nop
nop
lods
add
or
roll
pop
xlat
test
loope
and
and
mov
mov
push
pop
imul
mov
xor
sti
fimull
mov
es
sti
imul
dec
pop
push
mov
xchg
mov
jae
sub
mov
fsubs
mov
jb
test
inc
fadds
sbb
in
jge
mov
mov
je
adc
loope
in
and
push
mov
push
jo
jg
adc
add
ss
push
lock
in
or
out
pop
inc
push
flds
or
je
add
xor
jg
mov
adc
or
mov
jae
nop
mov
cmp
je
mov
test
pusha
sub
inc
pushf
add
pop
sbb
xor
push
leave
clc
cmp
sbb
test
js
xchg
adc
fisubl
jge
sbb
pop
je
jnp
sbb
adc
ds
pop
imul
jae
add
dec
incb
mov
lcall
test
pop
push
inc
in
or
cmp
jne
or
cmp
jno
jne
adc
jo
loope
dec
rcrb
cmp
mov
adc
sbb
sbb
mov
je
or
daa
fisttpll
subb
jae
lcall
sbb
xchg
adc
add
incl
cmp
jo
and
cld
push
add
xchg
jle
hlt
ret
add
mov
push
lock
mov
hlt
sub
or
mov
adc
hlt
cmpsl
es
mov
cmp
je
divb
push
test
inc
or
push
inc
add
or
adc
jne
xlat
test
jge
loopne
imul
push
and
leave
inc
cmp
out
push
xchg
rorl
inc
hlt
mov
pop
add
lock
hlt
sbb
adc
mov
mov
adc
test
add
add
mov
add
cli
add
push
rcl
int
jne
pop
enter
pop
jb
and
mov
sbb
adc
adc
pop
call
mov
shll
mov
and
add
subb
cli
cmpb
fdiv
push
popa
orb
lea
xor
cmp
orl
int
and
push
fcomi
mov
cmpl
adc
adc
mov
push
rolb
inc
rcll
hlt
test
sbb
and
dec
add
mov
loope
mov
mov
inc
xor
jb
pusha
scas
xchg
push
cmpb
pop
lods
gs
jns
adc
add
jle
aad
and
mov
loopne
movsl
movsw
mov
loopne
and
es
push
or
sbb
loop
and
sub
in
imul
sbb
pop
mov
push
test
pusha
es
faddl
in
clc
inc
je
adc
bound
adc
inc
xor
int3
mov
mov
inc
neg
cmp
clc
jmp
sub
push
mov
adc
das
std
cmp
js
mov
adc
xchg
mov
sub
mov
out
adc
sbb
mov
push
jmp
mov
addl
mov
and
or
sub
int3
dec
mov
jo
mov
sub
dec
push
dec
dec
jne
jns
sbb
add
sbb
xor
call
ds
add
lock
jbe
push
aas
in
leave
push
clc
jge
jmp
mov
add
or
in
cmp
test
push
ficoms
jae
iret
dec
int3
mov
inc
shlb
dec
aam
pop
pop
in
lret
cmp
dec
sbb
add
data16
loopne
movsb
div
or
fwait
push
sub
push
push
pop
and
aas
push
sbb
iret
dec
shrb
nop
shll
fadds
push
xchg
jmp
call
ljmp
mov
sbb
je
push
fistps
cld
mov
daa
inc
mov
adc
loope
pop
pop
xchg
lods
cmpsb
out
add
cmpsb
xchg
and
push
clc
sbb
add
add
cwtl
ret
jge
mov
scas
dec
cmp
lock
inc
and
push
fsubl
ficompl
cmpsl
sbb
mov
mov
rol
cmp
ljmp
add
xor
adc
dec
sbb
dec
loop
push
and
adc
or
rep
lcall
aam
adc
or
cmp
scas
test
je
dec
clc
roll
xor
call
idivl
and
inc
ds
lret
pop
ja
jg
push
adc
lods
add
outsl
loopne
mov
stos
mov
jmp
push
popf
and
shlb
lods
push
push
or
push
dec
dec
dec
jmp
mov
int3
or
aas
ret
jl
and
je
cmp
sbb
hlt
push
rcrb
xchg
jno
int3
sub
and
push
cmp
in
pusha
xchg
push
mov
cli
push
xor
gs
and
pop
sbb
dec
inc
push
inc
movsl
lret
data16
inc
lcall
mov
sbb
xlat
mov
mov
sbb
sbb
popa
pop
pop
jmp
sub
sub
pop
mov
cmp
pop
rcrb
pop
push
push
mov
icebp
pushf
fdiv
add
shll
ds
push
test
test
lahf
or
mov
clc
mov
cmp
repnz
test
fdivs
sbb
mov
and
jle
jne
add
inc
jmp
inc
dec
nop
push
add
filds
jo
push
dec
loopne
mov
add
out
mov
clc
sbb
sbb
nop
mov
pushl
push
iret
pop
ja
pop
xchg
cmpsl
jo
movb
cltd
push
or
jo
pushf
int
dec
in
jge
cmp
xorb
int3
sub
push
mov
adc
cmp
pop
inc
hlt
and
pop
sarl
push
nop
cmp
pop
iret
mov
mov
lods
ljmp
push
mov
pushl
punpckhbw
dec
loopne
xchg
mov
stos
or
addr16
xchg
das
data16
mov
adc
sub
push
insb
adc
inc
jle
xchg
push
or
push
jne
roll
or
in
xor
scas
sub
mov
or
int3
out
test
or
sahf
or
or
cld
dec
and
sbb
js
int3
inc
push
cmpsl
mov
stos
push
cmpsl
inc
jno
pop
sahf
cmpsb
add
jmp
subl
push
cli
add
lret
lods
jb
loopne
and
adc
jle
push
lds
or
data16
scas
in
pop
pusha
hlt
push
leave
fdivl
dec
subl
and
adcb
iret
or
adc
pop
rcl
push
cltd
xor
je
out
xor
adc
pop
push
fsubrl
mov
incl
popf
testb
adc
jbe
jbe
ljmp
push
pop
sbb
adc
or
pop
push
push
mov
addb
xor
jecxz
movsb
pop
rorb
mov
ss
dec
push
jmp
shl
push
pop
mov
aas
sbb
or
icebp
cltd
imul
add
pop
test
xor
push
adc
shrl
popa
insl
es
sbb
xor
cmp
gs
cmp
and
inc
jae
dec
ret
adc
or
push
push
adc
cmp
mov
sbb
xchg
out
pusha
lahf
add
and
add
arpl
sub
cltd
test
mov
test
jnp
and
push
pop
gs
mov
cmpsl
and
and
xor
insl
ret
mov
sbb
xchg
aaa
stos
or
maxps
or
jecxz
sbb
and
cmc
aam
push
shlb
cmp
add
xchg
push
and
pop
test
pop
sbb
imul
outsl
xchg
nop
test
leave
xchg
repnz
fiadds
sti
or
pop
sahf
inc
add
sbb
jg
cmp
jl
jg
and
das
push
add
jp
xor
pop
iret
mov
movsl
and
xchg
mov
add
shll
daa
lea
test
test
dec
fldl
int
add
xchg
mov
jmp
sbb
test
push
hlt
imul
push
shrb
push
mov
adc
sti
xor
sbb
xor
lcall
and
sub
add
push
inc
mov
out
or
mov
mov
or
xor
jb
and
add
cmp
sub
mov
mov
movsb
dec
push
ss
push
sub
jo
xchg
mov
jo
fsts
js
and
mov
and
mov
sbb
or
mov
mov
sbb
inc
loope
aam
movb
xor
and
aad
and
mov
sbb
div
xchg
fldt
push
enter
mov
frstpm(287
add
aam
mov
and
push
push
xlat
add
adc
aaa
les
movsb
add
mov
inc
and
push
push
adc
insb
dec
js
insb
andl
push
ss
movsb
adc
jbe
jecxz
fstpt
enter
rcrb
mov
mov
xorl
push
jnp
cwtl
sbb
ja
movsb
jmp
jge
adc
call
add
pop
add
cmp
mov
sbb
push
loopne
rorl
ljmp
data16
xor
add
roll
fadd
push
adc
or
push
arpl
ret
jno
decb
imul
add
xchg
pop
adc
fistpl
mov
and
inc
gs
ds
movsb
inc
pushf
mov
mov
inc
lods
add
xor
fmuls
or
mov
pop
shlb
add
cmp
pushf
push
xor
jl
and
sbb
movb
roll
xor
push
rcrb
jo
test
push
and
pop
push
xchg
adc
mov
mov
es
or
stc
enter
ss
and
pusha
jne
daa
add
xor
iret
call
in
je
dec
push
rcrl
rclb
jle
outsb
and
cmp
call
fcoms
mov
and
movsb
iret
cmpl
cmp
jbe
adc
cmpsb
jmp
jl
fwait
cltd
mulb
sbbl
mov
push
sahf
enter
subb
mov
xor
push
fbstp
push
xchg
sub
add
jge
stos
sahf
pop
jbe,pn
fdivl
ret
int
xor
mov
insb
add
sbb
popa
popf
or
je
mov
jo
adc
inc
mov
lods
aad
mov
out
mov
fstpt
cmp
orl
mov
adc
cld
cmp
jne
cmp
push
fsubr
adc
xchg
mov
test
inc
lret
das
leave
inc
sbb
sahf
mov
movsb
mov
push
ljmp
pop
mov
fldl
adc
xchg
or
loopne
insb
mov
outsl
adc
loopne
add
hlt
sub
lret
sbb
incl
cmp
xor
dec
and
pop
cmp
mov
ss
iret
jmp
mov
or
push
push
outsb
and
mov
add
add
dec
popf
inc
xchg
push
sub
dec
xchg
icebp
mov
ret
jo
cs
movsb
cltd
cltd
or
cmpsl
push
sbbb
aad
pusha
xlat
mov
call
divb
into
addr16
aam
push
and
mov
loope
sub
pushf
fs
bound
lahf
sbb
xor
shll
xchg
into
sbb
xor
dec
orb
in
pop
mov
xchg
jne
mov
popf
xchg
int3
pop
push
notb
push
jae
jle
sbb
inc
jmp
add
mov
mov
aad
cwtl
add
rcll
xchg
fmul
sub
cmp
rcrb
jbe
sub
jp
rcl
sub
sub
or
add
fst
ljmp
inc
push
inc
push
aad
mov
dec
cmp
jb
jnp
push
aam
adc
stos
inc
push
rorl
lock
pop
mov
xchg
xchg
lret
cmpsl
mov
mov
movsl
stos
aas
xor
out
jp
cmp
dec
push
andb
int3
add
int3
push
sbb
mov
cmp
jne
je
push
mov
mov
sub
add
out
xor
ljmp
ljmp
ljmp
push
cmpsb
dec
add
and
add
imul
inc
add
popa
xor
aaa
adc
imul
jge
inc
cmpl
sub
inc
xchg
and
adc
xchg
pop
adc
sub
inc
pop
push
pusha
dec
fwait
pop
ror
adc
arpl
push
imul
fstl
adc
cmp
adc
dec
adc
xor
sub
imul
iret
sbb
lahf
enter
inc
pushf
sub
lds
or
pop
add
mov
cld
fcomp
push
pushl
push
js,pt
jmp
dec
or
add
testb
daa
jecxz
mov
jne
jns
arpl
neg
lret
lcall
add
pop
pop
dec
in
aas
mov
inc
mov
mov
push
cmp
cmp
or
push
jle
lret
movb
push
adc
sbb
sbb
arpl
inc
add
aad
push
pop
imul
enter
fwait
adc
bound
jns
cmpsl
adc
movsb
xor
push
adc
adc
adc
dec
xor
adc
adc
lahf
and
sbb
sub
jae
add
dec
lea
rcll
enter
push
ret
pushl
add
lret
nop
mov
push
fwait
test
out
xor
cmpsb
lock
gs
or
xor
mov
add
push
fldlg2
mov
pop
and
movsl
or
xchg
xor
into
ret
cld
pusha
les
xor
jmp
or
mov
push
fsts
in
jl
inc
and
das
jmp
cmp
enter
out
outsb
sarb
ja
bound
jo
adc
xchg
mov
push
push
sbb
pusha
es
shrl
mov
mov
add
inc
push
test
pop
lahf
or
repnz
jl
xor
into
jg
lret
jno
loopne
arpl
xchg
insl
shlb
push
adc
add
lcall
add
lret
dec
jo
mov
xor
xor
jo
js
negl
push
sbb
test
and
adc
mov
jmp
xchg
lret
and
rsqrtps
movsl
sub
dec
pushf
aad
je
and
cwtl
rorl
dec
add
sbb
mov
push
cwtl
jne
inc
bndldx
add
popf
mov
bnd
cmpl
imul
mov
dec
scas
inc
inc
imul
ja
pusha
mov
and
mov
ja
xchg
ret
adc
subb
imul
or
adc
sahf
pop
in
pop
lods
cmp
mov
mov
push
jg
ficoms
das
xchg
fnsave
testb
mov
mov
test
cwtl
adc
add
mov
test
or
mov
ret
jbe
mov
pop
div
mov
aas
and
jno
inc
test
adc
jno
jo
in
mov
cmc
and
add
adc
call
and
rolb
xor
cli
or
and
cmp
add
mov
cmp
ja
aad
xchg
fdiv
jmp
push
sbb
ja
sbb
push
je
and
inc
int3
push
xor
xchg
jne
ss
mov
pop
jne
pop
adc
ljmp
adc
jnp
cmp
push
imul
inc
cwtl
sub
into
das
sbb
dec
sub
pop
lock
cmpsb
adc
adc
add
and
rorl
push
cmp
pop
add
mov
arpl
inc
adc
testl
mov
in
adc
xor
ljmp
rcrb
cmp
or
ss
mov
mov
repnz
out
add
or
orb
or
and
pop
or
add
clc
insl
loopne
push
jmp
mov
ljmp
dec
jnp
mov
push
lods
std
es
mov
sti
out
push
bnd
xchg
and
push
outsl
dec
jmp
sbb
inc
sbb
pushf
icebp
fldt
mov
push
stos
adc
push
pop
push
sub
cmp
push
hlt
rorb
ds
add
and
repz
andb
jno
mov
fstpl
arpl
xor
ret
hlt
mov
lcall
adc
hlt
mov
shll
sub
pop
ret
lahf
subb
aam
or
ljmp
pop
repnz
cmc
cmp
lea
lahf
jb
jl
rolb
jno
mov
inc
adc
into
sbb
cld
inc
xchg
repz
add
cmp
inc
dec
adc
roll
push
mov
cmpl
push
jo
mov
mov
sbb
sbb
sub
and
add
dec
negb
xchg
pop
rorl
jmp
cmp
or
int
test
or
sbb
gs
js
push
mov
leave
and
adc
pop
inc
fcomps
test
mov
movsb
std
xor
lret
in
psubw
push
das
sub
lods
ud0
scas
rorl
scas
dec
adc
push
call
and
mov
jge
and
das
rdmsr
push
mov
jne
pop
imul
push
rcrl
sbb
inc
inc
push
push
std
mov
add
mov
dec
sub
sub
bound
or
xor
push
mov
dec
push
ficoml
fdivl
push
jmp
test
shufps
call
mov
ja
mov
add
mov
adc
lods
add
mov
int3
andl
lea
fdivs
movsl
inc
mov
scas
mov
adc
cmp
adc
out
daa
push
and
and
dec
pushl
stos
mov
mov
mov
mov
cwtl
mov
add
push
add
imul
daa
inc
pusha
sub
xchg
leave
fld
mov
orb
dec
inc
cltd
sub
arpl
mov
sarl
adc
inc
mov
scas
mov
dec
cltd
sub
pop
add
push
cs
sub
pop
lcall
xor
in
stos
pop
ds
cmp
jne
add
push
cmp
pushl
mov
sub
insl
popf
lahf
loope
out
mov
aas
sbb
and
pop
aaa
add
insb
popf
adc
call
aas
jmp
ret
inc
rolb
pop
add
push
or
xor
xchg
adc
or
or
bound
inc
and
repnz
mov
lock
add
push
imul
std
xchg
int3
xchg
pop
fldt
add
or
and
fdivs
mov
mov
adc
jbe
inc
cmp
mov
test
je
jns
xor
mov
mov
adc
add
fidivrl
rorb
addl
pop
mov
pop
xor
cld
cld
and
or
and
ja
fistl
push
sub
hlt
leave
imul
out
fs
jmp
stos
push
cmp
enter
pushf
repnz
inc
mov
loopne
xchg
mov
gs
pusha
xor
cmp
cmp
push
in
das
or
mov
add
lea
sbb
int
mov
pop
pop
cmp
xorb
outsl
scas
mov
mov
add
xor
jae
lea
adc
jmp
cmpl
sub
shll
cltd
cmp
lcall
out
ficoms
aad
int
imul
push
scas
hlt
jmp
inc
jb
shrb
inc
clc
sbb
addb
dec
cmp
ret
out
std
or
sahf
push
sbb
fs
imul
loopne
loope
pop
push
fistpll
test
sbb
movsb
push
mov
movsb
jmp
ficompl
test
pop
popa
repz
inc
or
pop
fwait
dec
xchg
inc
xchg
sub
push
fmuls
cmp
cmp
fnstenv
sub
imul
pop
xor
ret
xor
fmuls
cmp
add
sbb
push
nop
popa
sbb
dec
jle
stos
test
xchg
push
mov
mov
std
push
lea
sub
jmp
sbb
out
inc
or
pop
push
inc
and
and
dec
push
jl
iret
mov
xchg
hlt
movsb
add
mov
inc
pop
push
and
mov
mov
push
push
and
mov
sti
movl
and
push
je
mov
call
xor
adc
jmp
cmp
outsl
jmp
jge
or
xlat
xchg
push
sub
xchg
or
jns
fildll
test
hlt
push
mov
xchg
call
push
push
add
insl
xor
fsubrs
push
decb
pop
into
sbb
xchg
imul
and
add
out
lea
xor
cs
and
cs
xchg
add
nop
or
sbb
int3
xchg
push
aam
cmpl
iret
test
adc
xor
pushf
addl
pop
pushl
push
pop
sbb
iret
adc
mov
sub
cmp
jae
or
cmp
push
and
jns
pop
add
int
mov
push
pop
xor
bound
adc
lahf
adc
mov
shrb
fstpt
push
or
jnp
cmp
shlb
hlt
mov
jo
and
lods
pusha
out
or
cmp
mov
push
or
je
test
iret
mov
movsl
dec
push
jne
mov
push
mov
cmp
dec
or
sub
adc
cld
cmp
daa
pusha
push
push
stos
es
inc
push
dec
jno
rorb
jbe
push
mov
les
mov
jmp
inc
dec
cli
mov
lods
shl
xor
push
cmp
sub
jae
and
or
fstpt
sbb
fxtract
jne
lret
adc
pop
fistl
push
push
lock
sub
jne
mov
push
lods
push
mov
xor
stc
repz
fcoms
xchg
pushf
ds
inc
add
scas
out
or
sarb
mov
mov
mov
add
addr16
jae
pop
mulps
mov
mov
pusha
jae
fidivrl
lret
movsl
mov
pusha
push
fs
mov
call
hlt
imull
mov
shlb
shl
jo
movzwl
add
push
jmp
adc
incb
jle
inc
lock
ret
mov
jnp
inc
leave
dec
mov
imul
in
fistl
insb
shll
xchg
jmp
sbb
xor
pushl
mov
fildl
aaa
fsubl
mov
je
mov
adc
movsb
xchg
rolb
jne
cmp
jbe
div
subb
jne
push
scas
adc
movsb
pop
pop
cli
in
dec
cmp
or
adc
xor
aas
inc
cmp
add
jo
out
or
shrl
sarl
addr16
push
push
cmpsl
xor
andl
cmp
sbb
jb
fldt
jmp
ds
adc
cld
fistl
mov
fsubs
inc
jp
jl
shrb
pusha
cmp
sub
cmpsb
add
mov
iret
nop
xchg
sbb
sbbb
sub
add
hlt
pop
js
cs
and
sbbl
das
mov
cmp
push
ret
mov
jp
insb
stc
mov
sub
dec
push
dec
sub
sbb
lcall
imul
ret
imul
and
nop
push
adc
inc
in
imul
test
and
adc
sub
gs
popa
push
dec
imul
push
imul
fildl
dec
jo
mov
incb
fsubrs
inc
cmpsl
pop
fstl
push
sbb
add
sub
jae
andl
leave
cmp
adc
or
movl
imul
or
inc
rol
and
push
inc
and
cmp
cmp
mov
dec
outsl
into
mov
inc
jg
xor
add
outsb
addr16
cmpl
xor
popf
dec
test
or
sub
cmp
xor
and
je
scas
out
xchg
xchg
push
cld
roll
xor
pop
fmull
das
sub
pop
inc
or
xor
jbe
roll
mov
andb
jo
add
xchg
aam
add
inc
sbb
imul
xor
mov
mov
jb
addr16
je
mov
mov
cmp
cs
imul
xchg
push
pop
xchg
and
jmp
mov
push
cmpb
xor
jb
push
jae
push
pusha
sub
fiaddl
sub
int3
add
and
dec
sbb
or
or
or
dec
lock
push
pushf
je
cmp
cmp
cmc
cli
sbb
push
or
sbb
pop
sbb
cmpsb
push
lods
jl
sbb
mov
popl
cmp
test
cltd
xor
lods
add
jb
mov
adcb
fadd
out
xorl
not
mov
fildl
sbb
jmp
inc
int3
jne
mov
jmp
mov
or
add
adc
je
jmp
push
dec
jb
enter
out
lret
dec
mov
fstps
jo
out
cmc
add
dec
rolb
add
icebp
jnp
jl
inc
jo
mov
movsl
fsubl
and
pushl
push
jge
and
hlt
icebp
dec
call
mov
sub
arpl
test
xor
inc
loopne
subb
ret
dec
adc
xlat
mov
add
loopne
push
loopne
popa
loopne
mov
push
ljmp
sbb
cwtl
gs
push
and
mov
cmpb
mov
push
push
sub
and
and
adc
xchg
inc
clc
loop
adc
mov
pop
push
dec
mov
loopne
push
and
mov
mov
xchg
and
mov
loop
lea
inc
clc
pop
inc
movb
xor
out
xlat
enter
add
out
add
add
mov
aam
mov
call
add
and
pop
push
inc
fsubl
push
jle
jno
loopne
pop
sbb
cld
push
subb
loopne
xchg
mov
mov
xchg
jge
test
xchg
mov
lcall
fdivrs
cmp
inc
jle
push
push
inc
cmp
add
cmp
or
addr16
insb
in
popf
xor
std
mov
xchg
ret
gs
fwait
jne
test
lods
adc
xchg
xchg
or
xchg
sbb
xchg
movsb
cmp
jb
mov
jb
mov
mov
sub
and
call
pop
or
lea
fistps
into
mov
xor
mov
popf
pushf
xor
sbb
jno
push
xor
sub
cmp
repnz
enter
or
xor
dec
adc
push
push
cld
pop
js
sbb
cmpb
jne
fidivrl
cmc
xchg
jne
je
stc
call
lea
push
push
mov
cmp
stc
push
xor
adc
mov
cmc
pop
pop
mov
lea
std
das
loop
sbb
push
add
pop
push
dec
or
loope
xchg
mov
lea
ds
sub
adc
outsb
lahf
mov
jae
leave
jmp
push
inc
sub
and
and
mov
dec
shl
push
xchg
addb
sbb
push
adc
add
jo
mov
dec
pop
movsb
loope
sbb
add
into
pop
cmpsb
pop
mov
sbb
adc
mov
je
movsl
xor
ds
inc
jo
pushl
adc
cmp
jmp
imulb
loopne
cmc
outsb
pushf
testb
int3
das
dec
and
cmpsl
and
sub
inc
push
lods
outsl
bound
jbe
xchg
xor
psubb
or
push
lea
cmp
jle
add
lea
sub
popf
dec
rclb
arpl
xchg
imul
test
imul
or
fsub
add
or
add
add
xor
mov
adcl
gs
je
lahf
lds
and
sub
pop
mov
loop
pop
add
add
xorl
xchg
jp
mov
push
and
out
push
or
test
jne
adc
pop
or
dec
xrelease
xor
je
inc
and
push
add
or
mov
imulb
add
sub
fsubrs
adc
shr
push
imul
std
lea
cmp
jmp
inc
push
orl
push
push
adc
jbe
mov
sbb
jmp
xor
pop
add
cmp
orl
int
sbb
push
sub
jno
jo
fs
lods
push
mov
daa
bnd
mov
int3
adc
mov
cmpb
ret
push
jae
lea
push
dec
mov
sbb
rclb
psrld
ret
push
dec
lods
or
jle
cld
inc
inc
jge
loop
or
mov
add
or
dec
test
pop
xor
rcll
jge
insb
les
aad
fmull
pop
cld
cmpb
xor
fnstenv
inc
jmp
push
cmp
sub
push
ja
sti
sub
aad
xchg
fcmovu
lea
mov
bound
cmpsb
and
fs
sub
inc
cltd
mov
scas
rorb
jb
sub
jbe
ret
sub
jmp
push
sti
lea
mov
iret
pop
ret
insb
idivb
aad
xchg
testb
mov
push
cmc
dec
in
clc
lcall
push
loopne
and
dec
push
push
mov
sub
inc
movsl
loope
mov
mov
test
js
xor
or
out
test
rcrb
lea
cmpsb
test
push
xor
sub
jae
int3
inc
mov
icebp
push
fidivrs
jnp
stos
xchg
or
out
jmp
push
inc
add
mov
mov
lahf
inc
cmp
and
decb
fadds
adc
pop
cmpsb
rcrl
cmp
cmp
shl
in
cmp
cmp
cwtl
icebp
sub
sub
ficompl
lret
inc
mov
ja
int3
cmpb
les
and
js
mov
sahf
pop
pop
pop
mov
cmp
sub
push
inc
or
sbb
adc
es
cmpb
push
inc
xor
shrb
mov
mov
mov
adc
inc
data16
jno
aas
and
dec
hlt
and
mov
incl
push
out
adc
arpl
jb
xchg
addr16
cmpsb
imul
imul
test
or
add
aaa
add
dec
ret
or
mov
or
and
jl
jbe
cmp
test
or
arpl
cmp
mov
lods
ret
in
xchg
lret
add
mov
pop
imul
push
cmp
inc
and
add
jmp
fstps
js
iret
testl
pusha
sub
cwtl
loopne
lea
xor
es
daa
fdiv
stos
fadds
pop
imul
loopne
jno
add
sub
sbb
addl
xchg
mov
bound
mov
adc
xor
push
pop
ret
pop
pop
sbb
dec
cmpl
xchg
inc
jne
pushl
out
scas
adcl
or
pop
ret
daa
and
fcmovbe
jmp
dec
jge
inc
mov
in
inc
sbb
or
add
lea
or
pop
ret
cli
inc
push
sub
pop
rorb
or
xor
add
aas
mov
sbb
xadd
ds
pop
mov
jmp
adc
ja
inc
mov
mov
jo
stc
mov
ljmp
fcmovbe
test
pop
adc
pop
push
imul
or
push
mov
out
push
dec
ret
fidivs
add
pop
inc
mov
lret
jo
pop
push
dec
lret
or
or
jl
push
sbbb
pop
imul
jge
stc
sahf
and
mov
mov
pop
shrl
or
dec
pop
test
nop
mov
dec
ja
push
int
addl
call
jecxz
xchg
fs
sbb
or
push
es
enter
out
addl
shrl
out
pop
and
jnp
push
or
inc
dec
mov
or
xlat
lock
inc
inc
add
jbe
or
addr16
sti
jmp
rolb
arpl
inc
and
repnz
add
js
pop
leave
sbb
sub
les
fimuls
cmpl
orb
dec
pop
stos
adc
adc
shll
mov
push
clc
adc
lcall
sbb
pop
mov
inc
and
add
aam
pop
push
scas
cmp
out
and
ret
push
jne
jecxz
cwtl
sub
addr16
into
xor
sti
dec
jae
adc
sub
adc
lods
xchg
add
rclb
inc
push
sub
cmp
cmp
adc
movsb
adc
jmp
gs
mov
mov
int3
and
jo
loopne
nop
mov
aaa
pushf
and
pop
fwait
pop
jnp
inc
ret
mov
and
cltd
dec
jmp
aam
inc
fiadds
cmp
sub
movzwl
xchg
incb
test
je
test
xchg
or
jo
mov
pop
dec
or
pop
push
mov
mov
push
jmp
or
dec
cmp
lds
jmp
js
push
or
rcll
sbb
fs
call
popa
cmp
cwtl
sarb
push
clc
push
push
jle
sahf
adc
js
fdivrl
sub
push
sbb
call
sub
mov
lock
adc
mov
lahf
xorb
and
adc
add
pop
fbld
xchg
or
or
jecxz
push
xor
sbb
arpl
js
fildl
pop
and
adc
jo
and
add
dec
adcb
aam
mov
sbb
push
cmp
mov
pop
cs
int
stos
mov
mov
mov
pop
jo
lock
cld
xchg
movsl
sub
mov
filds
insb
les
xor
loopne
and
in
test
data16
pop
imul
xor
xor
sbb
in
cmpsb
rdpmc
push
pop
push
pop
or
aas
inc
stos
or
add
inc
pop
push
mov
jne
dec
movsb
nop
or
add
shll
mov
das
movsl
outsl
push
adc
ret
push
hlt
sub
sbbb
mov
sbb
repz
addr16
sbb
sbb
push
adc
cld
rcll
js
pop
mov
xchg
xchg
int
lock
dec
clc
test
xor
xor
insl
jp
mull
das
dec
sbb
and
cs
push
mov
pop
or
popa
fs
pop
mov
lods
test
imul
add
and
rol
sbb
jge
loope
adcl
mov
xchg
cmc
lods
mov
sarl
negl
pop
xchg
inc
adc
mov
or
add
fdivrl
pop
jl
subl
or
imul
cmp
and
aas
fcmovu
push
lea
inc
or
test
addr16
and
lea
jg
dec
inc
cmp
adc
sbb
lock
sub
push
loopne
push
add
inc
or
mov
jp
cmpsb
adc
lods
or
inc
inc
js
sar
push
ja
sbb
rcrb
es
or
fmul
xor
jbe
push
jo
pop
push
dec
or
add
jecxz
sahf
and
mov
jp
push
jp
mov
add
mov
pop
jo
in
daa
sub
jb
sbb
mov
into
out
adc
mov
pop
pusha
jl
sub
in
dec
xor
xor
fists
cld
sub
xor
add
mov
test
fisubrs
outsl
push
xor
add
mov
daa
adc
out
jle
jl
mov
leave
xor
push
cld
es
pop
sbb
mov
lea
xorb
and
sbb
cmpsb
pop
sub
out
daa
call
dec
dec
jns
adc
rolb
mov
sub
adc
or
es
add
jmp
sbb
repnz
push
movsb
rcrl
sub
rorl
mov
xor
cmp
and
sbbb
int3
mov
push
adc
or
rcll
and
movsl
insl
mov
adc
scas
push
and
sbb
js
je
imul
rolb
jmp
xor
das
popa
sbb
call
fsubrl
dec
push
sbb
sbb
adc
mov
or
dec
in
sbb
popf
inc
cbtw
xor
js
xchg
mov
xchg
nop
ds
pop
or
xchg
xor
ss
lcall
and
sahf
lods
add
sbb
or
mov
dec
cmp
add
push
cmp
sbb
loopne
xchg
inc
in
mov
sbb
sarl
aaa
arpl
adc
mov
push
push
dec
enter
in
xor
xchg
sbb
push
mov
cmpb
test
je
sbb
pop
loop
cltd
mov
push
adc
mov
inc
mov
popf
fstl
pop
mov
movb
add
test
fdivp
pop
aam
cld
andb
outsl
shrb
or
cmp
sbb
divb
push
add
ss
jno
add
jne
or
jne
mov
push
or
jne
addr16
mov
pushl
les
rcrb
loop
arpl
fists
test
cmp
das
add
add
lea
inc
sbb
push
lret
ds
fcomps
cwtl
scas
or
stc
xchg
fcoms
loopne
repnz
cld
test
pushf
notb
popa
inc
add
in
mov
js
dec
add
xchg
sarb
push
adcb
jl
xor
or
movsb
inc
mov
adc
cmp
xor
sarb
jbe
stos
adc
xchg
mov
inc
adc
int3
mov
cmp
fiaddl
pop
pop
pop
lea
or
xor
lods
or
xor
imul
push
mov
sbb
add
or
mov
dec
scas
mov
adc
inc
rcrl
mov
mov
enter
or
mov
jg
unpckhps
pop
pop
add
pop
mov
mov
rcll
cmp
push
push
jo
sbb
push
cmc
dec
clc
pushf
dec
hlt
sub
insl
cmp
or
aad
hlt
push
pop
sub
dec
mov
pop
fwait
jno
mov
and
insb
push
rcrb
pop
bound
dec
adcb
andl
test
pop
mov
repnz
rolb
push
jne
dec
pop
imul
jne
sub
sbb
jne
lcall
jne
push
push
repz
or
sbb
xchg
xor
dec
insb
jne
inc
cmp
adc
pop
jecxz
pushf
cmp
inc
mov
in
sub
popa
and
loopne
cwtl
pop
or
fcoms
lock
je
lahf
in
push
or
adc
orb
xchg
lods
jb
arpl
xor
push
scas
inc
add
and
add
andb
jmp
sbb
or
jnp
push
pushf
mov
cmp
push
cmp
push
cmp
jl
mov
add
je
mov
push
push
push
sbb
fidivs
fidivs
xor
sbb
push
pop
fcompl
cli
cmc
push
sbb
pop
fstl
and
sbb
or
test
outsl
fmull
inc
inc
jns
movb
dec
aad
clc
stc
dec
jecxz
outsb
lds
mov
adc
loope
cmpsb
or
lea
pop
cwtl
mov
jge
ret
mov
add
inc
frstor
push
xchg
add
cmp
cmp
mov
push
or
sub
lods
add
push
mov
fldcw
lock
jns
dec
sbb
jnp
or
verr
sbb
inc
sbb
or
mov
xor
test
lret
add
pop
mov
loop
xor
pop
inc
mov
cmpsb
sub
add
sbb
push
adc
imul
mov
lcall
jae
push
test
jg
and
cmpsb
cwtl
adc
sti
or
mov
inc
cmp
sub
xchg
imul
ret
sub
xor
ret
imul
jle
mov
add
loopne
nop
in
jle
movb
push
movsb
jp
sbb
xor
pushl
dec
dec
dec
cmp
fadds
orb
sbb
enter
jo
push
fs
push
shll
cmpb
testb
add
arpl
outsb
push
push
add
dec
sahf
sbb
dec
data16
pusha
out
pop
pop
sbb
adc
les
mov
mov
cld
jo
in
cmp
sub
sbb
sbb
inc
inc
in
lods
lret
add
outsb
add
and
jne
mov
jbe
test
mov
addl
sbb
sbb
inc
sbb
push
jne
sbb
jb
mov
lcall
xchg
lock
ret
es
lret
or
in
mov
addb
xor
rolb
jle
and
adcl
iret
and
inc
sub
shlb
add
shl
in
mov
mov
imul
loope
ds
je
mov
sbb
das
orl
roll
mov
sbb
mulb
inc
dec
adc
imul
outsb
jmp
xor
sbb
dec
test
or
sarl
add
cmc
dec
mov
stc
fucomp
push
jns
add
sar
lds
add
jle
cmp
xor
enter
cmp
mov
jnp
imul
mov
xchg
lret
add
lds
adc
adc
sub
js
mov
cmp
mov
data16
cmp
je
xor
imulb
xorl
xor
lahf
jo
xor
hlt
cld
cmp
push
sub
mov
shrl
pop
add
push
movsb
cmp
movsl
mov
and
invd
fcmovu
mov
roll
inc
jp
pop
insb
sbb
fildll
and
jle
push
push
inc
cmp
push
enter
lock
mov
jo,pt
rcrb
jmp
cmp
cmp
addr16
int3
or
mov
sbb
dec
push
cmpsb
adc
rolb
xchg
dec
push
xchg
pop
aas
adc
push
cmp
xor
pop
push
xchg
faddl
sti
insl
sbb
loopne
adc
fwait
insb
lcall
or
inc
bound
cmp
sub
enter
adc
js
repnz
sub
nop
pop
inc
mov
mov
sbb
mov
lea
adcb
push
stos
bound
jge
pmaxsw
mov
and
sbb
jp
jmp
jno
orb
add
out
int3
lock
fdivp
xor
inc
lock
jo
sbbb
ficomps
or
shr
mov
je
nop
xchg
inc
popw
fs
pusha
sbb
fs
insb
push
sbb
xor
cmp
mov
lcall
fidivrl
and
idivb
je
cmp
je
popf
add
sub
sbb
vmovlps
push
mov
fsubl
lea
mov
push
push
hlt
sti
push
sub
inc
and
shrb
jmp
push
jne
inc
xor
movsl
inc
dec
roll
andl
dec
inc
push
outsb
dec
adc
jnp
in
adcb
lock
xchg
xchg
cld
lock
enter
fs
jmp
cmp
push
pop
in
adc
repz
add
push
lods
ret
fwait
push
cmp
movsl
movswl
in
push
mov
and
pop
jmp
leave
add
add
push
and
mov
mov
rorb
sub
sub
xor
cmp
xor
jne
jne
test
pop
inc
inc
test
pop
sbb
sbb
xchg
mov
test
dec
fcoms
arpl
lahf
aam
aam
pop
es
adcl
dec
orl
and
inc
ret
jle
jge
imul
adc
mov
sbbl
jae
sbb
jns
mov
inc
sub
mov
mov
pop
test
popa
mov
push
mov
call
lock
xor
mov
aas
jne
outsb
mov
jmp
cmp
ss
push
mov
ror
data16
fistl
fidivrs
pop
push
sub
shll
mov
cmp
test
jle
cmp
fimuls
push
and
dec
push
lea
push
pop
cwtl
push
out
pusha
or
xchg
subl
add
xor
imul
pushf
fcoms
jo
mov
pop
sub
add
xor
add
add
push
mov
add
fs
rorl
in
and
sub
nop
mov
mov
insb
mov
imul
fsubrl
lock
enter
mov
aam
hlt
add
or
sbb
inc
adc
mov
add
add
repz
pusha
inc
cmp
cltd
xchg
fildl
cmp
fs
dec
pop
fdivs
jl
cmpb
add
push
ret
jge
pop
cmp
loopne
sbb
inc
incb
imul
pop
lret
jbe
and
mov
xor
dec
cli
xchg
adc
or
pop
add
adc
xor
push
push
or
pop
out
xchg
test
out
les
sub
jmp
sub
jmp
divl
lret
pop
adc
sbb
lcall
and
inc
sbb
pop
push
xchg
dec
mov
xor
mov
and
mov
sub
js
sbb
sbb
dec
das
inc
xor
in
sub
sub
push
push
or
ja
out
mov
push
adc
fiadds
mov
mov
cmpl
pop
inc
inc
aad
scas
dec
mov
cmp
dec
mov
sub
push
sarb
es
orl
negl
add
cmpps
mov
and
mov
loopne
idivb
pop
jae
push
pusha
lcall
out
inc
xor
dec
pusha
mov
pop
mov
movsl
add
jl
mov
dec
mov
mov
and
push
pop
testl
loop
add
addb
add
cld
add
loope
xor
xor
mov
sbb
orl
fcmovnb
jmp
xor
add
js
sbb
shl
jae
push
cmp
and
flds
pop
jl
sbb
fdivp
fidivs
push
stos
hlt
sub
mov
movsl
jns
jne
xor
lcall
insl
movsb
jns
inc
and
repz
push
divl
push
and
movsl
dec
in
adc
push
shl
sbb
cmp
rclb
pop
push
xor
xchg
shll
push
aam
movsb
push
cmp
cmp
js
shlb
outsb
jmp
sub
jae
inc
jnp
jp
dec
and
or
jl
aas
adc
and
and
and
sub
xor
sbb
and
pop
mov
inc
sbbb
add
fstpt
adc
pop
cmp
push
adc
into
push
shlb
sub
je
in
cmp
push
mov
dec
jnp
out
mov
and
sbb
jp
push
add
fwait
cmc
inc
inc
or
pop
push
pop
mov
decl
adc
push
add
subl
push
adc
add
inc
push
and
cmp
push
sbb
sbb
jb
shlb
and
sbb
pop
dec
xor
call
add
or
rorl
jo
ret
daa
push
xor
sub
cmpsl
popa
ja
scas
repz
xchg
push
xor
test
sub
or
mov
add
or
push
jbe
pop
cmp
push
mov
push
sub
pushf
adc
and
add
push
sbb
jne
or
frstpm(287
push
and
ja
xchg
leave
add
xchg
xor
nop
sub
andl
or
xchg
or
dec
push
push
sahf
and
cmp
adc
adc
mov
dec
adc
loopne
jecxz
xor
movsl
les
push
push
stos
push
fmuls
push
inc
xor
cld
jmp
fscale
inc
inc
outsb
add
jnp
pusha
push
sbb
cmp
ss
inc
push
dec
pop
nop
bound
out
fadd
jns
add
je
mov
or
bound
les
jle
xor
lods
stc
inc
cmc
js
xor
xor
imul
das
cmpb
cmp
pop
add
push
cmpb
pushf
sub
mov
out
and
out
dec
push
inc
xor
mov
pop
mull
push
jmp
jecxz
xlat
adc
shlb
ficomps
mov
inc
negb
popa
push
add
mov
jl
inc
inc
lock
andl
adc
adc
ss
push
in
fs
push
addr16
add
leave
mov
xor
jecxz
call
dec
xor
pop
jo
push
or
sti
push
or
xor
sub
push
fcoml
fildll
mov
mov
mov
push
or
sbb
test
xlat
push
dec
cmp
pop
push
cmp
push
or
scas
adcl
push
dec
jl
and
lret
pop
xor
adc
push
pop
loopne
mov
xor
test
pop
and
pusha
mov
adc
icebp
jno
push
gs
inc
jb
xor
inc
push
adc
repnz
sub
or
mov
arpl
jne
jns
sub
sbb
xor
push
xor
add
push
sub
adc
or
loopne
mov
cs
cmp
sbb
imul
ret
clc
inc
pop
testb
je
fdivl
sub
or
cmp
jl
rolb
loope
xor
push
or
jmp
lret
jl
inc
loop
jo
add
add
add
repnz
fisttps
lock
push
push
leave
pop
mov
adc
cmc
mov
imul
sub
xchg
dec
testl
add
les
and
sub
leave
inc
push
cmp
sub
xchg
movsl
rcll
into
cmp
push
mov
mov
mov
movsl
push
push
pop
sbb
or
nop
fwait
nop
mov
lods
dec
imul
pop
cmp
scas
mov
xchg
pop
cs
add
pop
out
or
or
push
pop
pop
mov
mov
add
mov
sbb
push
xchg
jns
mov
dec
inc
sbb
shr
cld
jle
js
and
fcoms
mov
pop
punpcklwd
push
in
pop
clc
sub
push
inc
or
mov
add
jmp
es
xlat
dec
ficompl
lods
fwait
inc
push
pop
push
pop
or
inc
push
push
inc
pop
cwtl
imul
cmp
add
cmpb
pop
fcmovb
inc
pop
loop
stos
push
in
xchg
aad
rolb
push
xor
push
leave
dec
in
pop
mov
add
mov
movsb
cmp
sbb
push
cs
mov
push
push
shlb
addl
aas
movsl
add
xchg
and
xor
lods
fs
mov
xchg
js
add
rolb
pop
popf
or
xchg
push
add
adc
and
aas
or
dec
adcl
js
jmp
mov
cmpb
add
aam
adc
cmp
fildl
pop
mov
pop
mov
push
stos
adc
les
and
or
call
add
addl
sbb
sub
fcoml
cli
inc
push
loope
insl
sub
adc
push
push
inc
mov
pop
lret
xor
push
or
jae
push
sbb
or
add
xchg
lods
fcomp
mov
shl
orl
cmpsl
jbe
pusha
cwtl
arpl
cmp
ss
notl
adc
push
jecxz
mov
mov
xor
add
pusha
and
add
or
mov
push
aad
cmp
adc
mov
nop
mov
jo
lods
sub
jne
loope
jl
cmp
loope
pop
pop
pop
dec
add
test
or
xchg
or
fsts
test
ret
lods
mov
lods
sbb
add
inc
mov
jno
rcl
push
and
aas
loope
imul
imul
cmpl
int3
and
cli
push
cld
add
xchg
pop
out
hlt
push
movsl
jge
movl
shr
addr16
fldl
test
push
loopne
inc
ret
adc
cmp
rcrb
add
call
mov
insb
std
orl
and
ficoms
repz
push
repz
mov
stc
pop
insl
out
fistl
push
in
sbb
jae
movsl
mov
inc
in
or
hlt
sbb
jne
sbb
push
lret
jmp
push
push
pop
adc
add
icebp
mov
repnz
inc
mov
jns
in
mov
xor
lret
cmp
mov
testb
sbb
cltd
insl
mov
push
or
mov
insl
mov
xor
orl
mov
or
and
in
jle
mov
jge
shrb
inc
clc
insb
push
insl
adc
loopne
xor
rcrb
jmp
xor
adc
popf
arpl
adc
mov
or
insb
insb
dec
mov
xchg
lods
adc
pop
sub
xor
cmpb
inc
lcall
dec
test
xor
adc
mov
inc
xor
adc
inc
scas
add
je
and
adc
cmp
dec
jg
loopne
add
ss
cwtl
adc
or
xchg
push
ds
pop
mov
fs
lea
pop
add
mov
adc
xor
icebp
movb
addr16
leave
or
add
jbe
es
mov
push
mov
add
jecxz
push
repz
jb
mov
jo
sbb
adc
mov
sub
adc
adc
cmp
sti
dec
sbb
add
pop
cmpsb
cmp
push
xchg
or
xchg
or
push
aam
shlb
push
sar
adc
dec
mov
push
mov
in
ret
call
cmp
mov
leave
sbb
mov
sbb
es
sub
dec
js
mov
lea
sbb
pop
adc
cmp
push
outsl
jp
sbb
push
test
push
fsubs
xor
xor
fistps
daa
or
imul
leave
add
inc
loop
inc
cmp
sub
pusha
push
cmp
push
and
sub
test
pop
jnp
mov
sub
jbe
mov
ret
das
repnz
pop
testl
movsb
je
cmp
loope
dec
es
fidivs
inc
nop
call
pop
or
or
xor
jp
mov
pop
leave
pop
xchg
mov
outsb
or
je
pop
aaa
sbb
lods
xchg
or
sub
add
and
rol
and
dec
sub
test
cvtdq2ps
add
cmp
lret
add
insb
nop
push
jnp
push
xor
imulw
cmpl
sbb
push
dec
testl
ret
sti
flds
dec
or
adc
ret
repz
adc
mov
shlb
insl
jne
popa
inc
and
imul
jno
loopne
add
push
lret
push
push
jae
push
push
dec
lcall
sbb
sbbl
cmp
push
push
insb
add
xchg
add
out
xor
dec
in
mov
add
outsl
mov
cmp
scas
xor
sub
imul
imul
ljmp
lock
pop
addb
inc
pop
dec
mov
lods
test
sbbb
and
sub
jle
ret
repz
ret
or
das
adc
dec
push
mov
cmp
xchg
scas
xchg
mov
in
inc
pop
and
aad
adc
add
push
jnp
cmpsl
mov
mov
jbe
add
jno
sti
push
addb
lock
arpl
jno
jl
pop
mov
in
adc
push
add
sub
add
xor
rcr
js
or
lea
loop
add
xorb
xchg
xchg
mov
xor
ljmp
and
je
push
cmp
inc
shl
cmp
popa
ds
adc
adc
ret
dec
mov
je
vpmaxsd
lahf
pop
out
push
mov
push
imul
push
loopne
imul
pop
push
cmpsb
jne
ret
outsl
nop
dec
outsb
mov
push
cmp
ja
je
or
je
or
sub
sub
sti
xchg
call
scas
cmp
jns
sarb
add
ljmp
dec
ret
xchg
cli
js
jne
xor
jnp
jl
in
and
jmp
cmp
fidivl
adc
adc
xchg
xor
inc
adc
lea
inc
bound
mov
add
imul
test
inc
mov
jbe
mov
clc
cmp
shlb
jae
cmp
push
push
mov
sub
mov
adc
or
add
lahf
daa
mov
or
ret
pop
push
pop
push
push
fstps
in
dec
sbb
adc
mov
sbb
mov
test
xchg
and
xor
pushf
aad
bnd
mov
mov
inc
ret
mov
imul
cmp
sbb
test
out
shrl
sub
or
inc
add
scas
mov
jne
stos
mov
mov
shll
or
push
adc
test
pop
adc
pushf
xchg
sub
ds
in
xchg
lret
insl
inc
mov
mov
or
and
sbb
sbb
hlt
add
push
sbb
adc
fidivs
or
push
stos
cmp
dec
ljmp
xchg
jge
add
pop
and
scas
inc
pop
fdivs
inc
lds
rcll
push
loopne
push
js
mov
cmp
mov
jg
stos
ret
out
je
push
add
xor
pop
dec
enter
or
add
xchg
add
jge
or
or
lock
xor
push
pop
jge
add
add
push
mov
fdiv
push
add
lret
adc
or
mov
imul
fcompl
add
les
stos
xchg
xor
dec
mov
cmpl
lock
mov
mov
and
inc
add
add
add
sub
adc
add
das
mov
inc
ss
test
enter
lahf
dec
xor
fmull
fiaddl
adc
iret
or
jge
mov
jecxz
xor
testb
aas
fwait
js
mov
pop
test
ret
push
das
loop
dec
sbb
nop
push
xor
int
testl
pop
stc
dec
lcall
dec
sbb
pop
sub
cli
xchg
inc
xor
ret
or
mov
stos
arpl
xor
rcrl
pop
inc
and
mov
add
fmuls
jle
jo
das
xchg
pop
adc
in
mov
push
dec
lret
pusha
xchg
dec
adc
pusha
adc
inc
sbb
mov
adc
jle
or
sbb
sbb
ret
repz
iret
sar
dec
push
or
std
decl
or
scas
mov
push
cmp
mov
or
or
adc
inc
cltd
fidivl
xor
inc
cmovg
ret
mov
mov
jl
jl
mov
cmp
mov
push
mov
insl
or
fidivs
add
and
movsb
jne
mov
xor
push
xor
ja
lea
cwtl
jge
mov
call
arpl
cli
pop
hlt
or
xor
xchg
xchg
clc
aam
pop
stos
inc
pop
mov
push
dec
or
cltd
sbb
push
leave
adcl
pop
outsb
xchg
outsl
mov
and
push
daa
rorl
ret
mov
daa
add
movl
mov
or
or
outsl
add
outsb
xchg
adc
and
test
lea
fstps
pop
xor
and
push
sub
xchg
test
push
sbb
inc
inc
sub
pusha
push
cltd
cmp
xor
or
inc
adc
shlb
or
add
shlb
jl
push
adc
mov
add
ret
or
mov
push
or
jae
in
or
adc
cmpsl
popf
jp
popa
pop
pop
fdivrs
mov
mov
loop
mov
inc
leave
push
mov
rcl
add
push
popa
fmull
ficompl
jge
mov
xchg
push
sub
sub
cltd
insl
icebp
add
push
inc
xor
pop
movsl
call
xchg
xchg
pop
aaa
in
mov
jo
dec
cmp
hlt
mov
xor
adcb
lock
in
add
sub
pop
or
ds
mov
sbb
add
scas
add
mov
out
std
inc
loope
mov
xor
jo
adc
mov
push
movsl
nop
imull
mov
mov
mov
addl
and
push
and
push
cmp
dec
sub
call
rorb
add
js
xchg
dec
cwtl
lods
xor
mov
sbb
push
mov
adc
jne
cmpsl
inc
in
push
jo
xchg
or
push
inc
nop
cmpsl
enter
add
push
int
enter
ret
test
jge
cmp
or
popl
dec
or
mov
dec
pop
sbb
ss
mov
or
sub
pushf
mov
add
ss
jecxz
xor
add
mov
pop
jne
sub
adc
les
mov
rcll
adc
adc
xor
test
add
je
test
pop
sub
cmp
push
js
pusha
fsubs
mov
aaa
xor
add
cs
fiadds
sti
or
mov
sti
sarb
sbb
xchg
inc
fiadds
sbb
fsubl
std
and
mov
in
adc
roll
xlat
dec
dec
pop
dec
adc
loopne
pop
mov
subl
sub
rcrl
sti
adc
pop
xor
push
cmpl
mov
add
push
in
jnp
cmc
add
cmpsl
imul
or
sub
movsl
adc
or
mov
and
divb
cmpsb
test
into
jle
mull
fs
mov
pusha
add
xchg
add
in
popa
lods
mov
lcall
sbb
adc
xchg
mov
inc
loope
sub
xchg
fsub
fnstsw
mov
sub
or
clc
xchg
push
xor
sbb
pop
push
das
xor
dec
lods
push
out
call
sub
lods
xchg
or
adc
aad
or
sbb
lock
nopl
push
xor
cmp
pop
rorl
les
outsb
mov
in
cmp
mov
js
lods
repz
arpl
push
cmpsl
arpl
push
test
jecxz
mov
or
push
and
fsubr
jg
jge
in
or
or
in
cmp
jle
shrb
pop
add
and
ljmp
les
lock
xchg
or
add
repnz
mov
inc
sbb
loopne
or
lret
cmp
je
in
dec
mov
push
adc
ss
dec
mov
xchg
loopne
in
xor
fdivrp
and
cmp
hlt
mov
dec
dec
mov
and
inc
dec
dec
xchg
sub
and
push
shlb
je
cmp
or
loopne
push
add
call
stc
sub
push
fisubs
cld
insl
sbb
dec
mov
repz
push
mov
inc
and
leave
inc
add
mov
rcrb
ret
aam
pop
mov
push
cmp
cmc
aaa
inc
mov
cs
push
addb
rolb
push
add
test
loop
jp
jo
mov
cld
inc
test
sbb
mov
jae
push
push
filds
push
cld
xchg
add
add
mov
jmp
cltd
push
xchg
or
push
add
outsb
pop
sub
adc
insb
mov
orl
cmp
adc
stc
mov
imul
divb
sbb
jne
xor
sbb
mov
nop
andb
and
sbb
xor
push
mov
mov
sub
add
lea
xchg
rcrb
xchg
fst
pusha
inc
xor
push
push
xchg
sub
jae
mov
xor
xor
xor
mov
cltd
xor
dec
xor
cld
cmp
fs
lds
shll
inc
and
enter
jne
inc
mov
arpl
jne
ja
and
dec
mov
xchg
xchg
pop
gs
jo
mov
and
insl
push
js
mov
pop
insl
dec
jmp
int
cs
int
test
mov
push
lahf
or
add
jp
push
repz
pop
pusha
addr16
mov
repz
push
push
push
mov
subb
pop
sub
jne
push
cmp
add
cwtl
xchg
adc
icebp
mov
fsts
subl
mov
mov
pop
adc
and
movsl
test
or
mov
jg
pop
inc
sub
sub
test
push
add
cmpsl
pushf
test
int3
sahf
std
fsubl
mov
mov
sbb
lods
testb
jno
or
test
adc
jg
push
test
pop
fucomi
lock
inc
or
adc
fmull
jle
jb
add
pushf
pop
add
sub
mov
cltd
sbb
xor
fdivl
lcall
xchg
sbb
in
int
lods
inc
push
xchg
call
and
pop
fisubs
push
add
shrl
or
fimuls
xchg
sub
fwait
push
add
pop
aas
loopne
loopne
cmp
push
add
push
add
in
and
in
rcrl
jb
enter
stos
mov
incl
jne
cmc
add
push
cmp
pop
pop
mov
adc
jo
push
adc
or
inc
xchg
sub
xor
popf
cmpb
sbb
jl
add
mov
xor
daa
add
sti
lret
loopne
inc
add
and
mov
xchg
ret
pop
dec
sub
shlb
jne
pop
dec
sbb
sub
mov
aaa
adcb
pop
fistpl
int
add
mov
or
sbb
mov
ljmp
cmp
pop
or
fisubrl
pushf
aam
in
push
adc
int3
and
pop
andl
inc
adc
mov
insl
add
sarb
cmp
fstpt
mov
push
xlat
push
ret
push
inc
sbbb
add
or
pop
in
stc
push
or
cmp
jne
sbb
cmp
adc
jl
pop
sarb
mov
sbb
sbb
je
sbb
movsb
push
and
pop
push
pop
ljmp
push
aaa
jmp
loope
mov
jmp
bound
inc
push
cmpb
outsl
jge
andl
fisubrl
mov
push
in
and
jbe
dec
and
push
and
jb
jmp
insl
pop
imul
jecxz
in
or
and
rcr
cli
bound
cmp
push
and
ror
mov
cmp
jns
xchg
adc
enter
inc
subl
push
jmp
push
mov
push
or
jo
ss
inc
mov
jbe
xor
adc
sub
or
sbb
jge
adc
cmp
xchg
push
mov
sub
ret
jns
or
pop
add
mov
add
add
loop
movsl
lea
sub
sbb
nop
or
stos
sar
xchg
jge
ja
xchg
jno
arpl
dec
lods
mov
sbb
test
gs
sbb
adc
sub
push
add
adc
lods
mov
enter
ret
pusha
lock
std
push
xor
mov
add
scas
repz
repnz
mov
cmpsb
cmp
jbe
shll
cmp
push
xor
cmpb
rcr
sbb
cmp
rolb
and
jno
movb
lock
add
bound
add
jns
mov
movsb
xor
cmp
push
push
and
adc
push
jp
add
sub
test
xor
adc
int3
into
aam
dec
stc
add
cmpsb
lds
call
sub
jo
add
mov
int
cmpsl
cmp
push
cmp
push
pop
pop
push
or
sub
lods
enter
add
gs
test
stos
test
add
or
sub
sbb
xchg
push
lea
cmpsl
xchg
leave
cmpb
stos
adc
mov
push
fildl
inc
pop
add
repz
and
lock
adc
xorb
sub
repnz
std
aaa
aas
ja
dec
push
in
push
pop
inc
xor
pop
lret
or
shrb
test
prefetch
adc
mov
insb
fcoms
clc
add
pop
fs
lea
adc
add
inc
stos
test
pop
inc
cld
fistpl
ret
inc
cmp
fidivrs
aad
jne
andl
and
sbb
mov
in
jmp
les
mov
add
dec
push
mov
mov
frndint
je
lds
mov
mov
rorb
xor
push
incb
add
add
cmp
push
sub
xchg
add
andl
jle
jbe
mov
ja
clc
clc
sub
inc
adc
ret
dec
or
lret
and
push
mov
pop
push
push
or
and
push
loope
sub
adc
jecxz
adcb
dec
push
sub
push
and
aad
mov
pop
add
enter
jp
cltd
jo
movsl
sub
stc
push
lea
mov
lods
movsl
sbb
rclb
sub
sub
and
push
sbb
out
inc
and
lds
mov
iret
dec
or
insb
add
cmp
adc
fsubl
clc
add
repz
mov
in
pop
lods
or
dec
inc
jnp
mov
arpl
mov
push
dec
stos
movsl
movsb
or
sbb
mov
add
jg
mov
fs
andl
bound
test
fdivrs
scas
sbb
or
ficoms
mov
nop
inc
sub
fstpl
dec
or
mov
stc
mov
mov
inc
xchg
pusha
inc
arpl
lock
ret
outsl
add
mov
dec
dec
faddl
mov
les
add
and
in
push
sub
cmpsb
mov
ret
push
push
adc
and
stos
push
push
adc
push
or
sbb
stos
sti
mov
mov
jnp
mov
pop
ret
mov
mov
xchg
sbb
gs
xor
add
or
shr
jae
push
lock
push
adc
dec
mov
sub
ss
mov
add
and
cli
and
sub
hlt
xor
pop
pop
xor
mov
mov
mov
push
lcallw
std
jae
and
xchg
add
repnz
shl
lahf
inc
decl
sbb
pop
mov
push
fbstp
les
add
add
push
cwtl
pop
cwtl
ret
mov
push
sbb
jmp
add
or
clc
push
mov
bound
jecxz
xor
ss
push
xchg
in
pusha
push
add
adc
jge
sbb
mov
cld
mov
push
call
clc
pop
mov
sbb
insb
sbb
pop
add
aaa
int3
insl
xor
inc
and
lea
dec
mov
mov
mov
push
cmp
xor
dec
inc
popa
mov
leave
arpl
cmp
pusha
add
test
out
add
bound
enter
mov
mov
unpckhps
push
roll
loopne
rolb
gs
push
pop
daa
lcall
push
add
add
xor
xchg
mov
cmp
out
cmp
jo
enter
sub
mov
outsl
jecxz
or
out
pop
mov
or
push
icebp
jg
or
cmpsl
jle
dec
add
jmp
mov
daa
test
push
into
mov
sbb
out
notb
popf
lock
es
xor
push
xchg
cli
rcll
inc
shrb
and
xor
addr16
or
shll
cmp
adc
add
mov
or
xor
pop
pop
push
mov
cmp
inc
push
dec
mov
clc
fiaddl
pop
and
fldenv
popa
jecxz
stos
push
movl
movl
pop
push
cmp
jae
ss
inc
mov
inc
decl
add
or
or
mov
push
mov
rorb
jbe
inc
add
rcl
xchg
mov
inc
jo
jo
xchg
sbb
movl
in
and
add
movsl
jnp
inc
push
or
nop
rcll
addr16
iret
addb
fildl
sbb
cmpb
and
test
dec
mov
add
int
mov
test
xchg
or
sbb
sarl
gs
lret
inc
add
arpl
pop
xchg
mov
mov
and
sbb
adc
out
gs
xchg
les
adc
push
mov
or
push
mov
int3
push
and
dec
and
mov
dec
sub
cmp
or
and
test
shrl
shlb
sub
xor
jge
xor
out
adc
pop
cmp
and
sbb
inc
dec
jecxz
lahf
adc
push
mov
sti
rep
rcrl
and
inc
xor
or
adc
fcmovne
sbb
jmp
sub
jae
cmp
icebp
fiadds
scas
push
inc
inc
sbb
add
mov
mov
dec
jmp
jne
push
push
inc
push
push
jecxz
dec
mov
cmpsb
xlat
push
and
push
mov
push
pusha
and
dec
adc
jle
push
inc
data16
incb
arpl
call
and
adc
and
adc
aas
xor
out
mov
mov
shrl
andb
in
loop
adc
into
push
rcll
fcmovne
pop
mov
sub
jo
push
and
inc
or
repnz
cs
data16
daa
cmpsb
inc
scas
push
iret
test
or
das
sahf
mov
jae
hlt
jnp
pop
adc
sbb
push
pop
icebp
je
push
ret
sub
mov
mov
and
xor
out
push
xor
xor
ds
lock
or
pop
sub
mov
push
and
inc
sarb
push
push
mov
fcmovu
jl
and
mov
mov
aas
jl
cmp
sbb
sbb
fildll
sbb
loop
mov
adc
adc
add
xchg
cmc
les
popl
inc
aas
lods
or
pop
roll
imul
sarb
dec
jne
jo
decb
es
bound
pop
wrmsr
push
inc
sbb
pop
les
add
mov
mov
dec
roll
cmp
xlat
in
and
adc
mov
movaps
addb
add
inc
clc
adc
and
inc
je
adc
add
or
mov
and
jno
test
and
and
daa
add
jge
mov
pusha
lea
testb
nop
mov
lcall
cmpsb
fld
cld
or
adc
push
or
js
jb
cld
aam
adc
xor
dec
adc
xchg
cwtl
inc
cmp
xorb
insb
fcompl
rorb
jbe
push
or
dec
outsl
mov
mov
int3
sub
sar
xchg
or
add
rorl
jmp
lock
xor
jno
mov
lcall
sub
xor
xchg
inc
jecxz
in
lea
cmp
es
pop
mov
pop
sbb
or
inc
fisubrs
xor
imul
xchg
sahf
ja
test
pusha
sub
adc
pop
inc
lahf
sub
fmul
subl
push
dec
je
mov
dec
sbb
leave
test
sbbb
ret
adc
push
or
and
xchg
pop
add
rolb
loop
fdivrs
fbld
jl
or
arpl
not
aam
ja
mov
push
push
outsl
adc
lcall
jle
or
add
lcall
inc
inc
mov
or
or
fstpl
sub
mov
push
cmpsl
jne
pushf
sbb
rcll
push
xor
movb
pop
and
jb
add
into
jg
inc
adc
scas
push
pshufw
orb
stos
push
orl
and
loope
in
fsubrs
incb
lea
int3
pop
xchg
jp
push
jae
push
adc
or
mov
jb
jae
or
lret
add
psubd
es
hlt
jae
adc
jne
insl
cmp
xor
ret
and
mov
push
adc
pop
mov
push
repz
xchg
or
adc
pop
daa
adc
jb
xor
jo
push
cmp
cltd
jbe
pop
dec
pop
cmp
pop
mov
punpckhdq
dec
sub
stos
jb
push
jns
push
inc
mov
lea
pop
dec
insl
sbb
xchg
in
xchg
stos
push
xor
xor
xchg
pop
mov
cmp
test
leave
add
jno
test
pop
leave
add
leave
sbb
sbb
mov
and
inc
addr16
adc
cmp
cmp
cmp
cmp
mov
rorl
mov
arpl
sbb
enter
add
fsubs
xchg
ja
outsb
pop
cmp
cmp
xlat
lahf
jae
arpl
fwait
je
jmp
jae
add
ss
and
adc
xor
mov
orb
lock
das
mov
je
or
jo
push
pop
xlat
dec
pushf
add
sub
mov
pop
loopne
jne
xor
je
inc
lods
fcmovnu
je
and
or
or
cmp
bound
aam
hlt
or
mov
cmpb
inc
xor
adc
fdivs
subb
push
dec
subb
bound
add
jbe
mov
inc
aas
and
add
lock
add
add
add
and
add
in
inc
and
pusha
es
add
in
sub
add
in
mov
cmp
sub
inc
push
xor
xchg
or
push
aam
push
cmp
xor
add
inc
push
in
and
mov
xor
or
xor
mov
mov
jp
insl
or
dec
fmulp
stc
inc
inc
xchg
fidivrl
es
cmp
pusha
adc
add
or
or
pop
sbb
loope
arpl
sbb
in
pop
xchg
addl
inc
pop
mov
jp
sbb
ficoml
cmp
add
sarb
mov
sbb
add
nop
sarl
test
jge
out
dec
push
fisttpl
dec
js
xchg
leave
test
jl
lret
push
jnp
dec
inc
repz
cmpb
lds
cmpsl
jns
dec
jno
mov
cmpsl
jns
in
loop
fimuls
enter
jle
sub
loopne
mov
aam
mov
jo
cs
inc
test
jge
sub
mov
jnp
inc
or
mov
pop
hlt
mov
xchg
push
xor
hlt
shll
jp
lret
pushf
sbb
subb
xor
xlat
sbb
fcmovnb
mov
xor
mov
mov
in
push
mov
pop
lcall
mov
add
fcmovu
push
in
mov
lock
icebp
or
xchg
jne
xchg
sbb
dec
rclb
inc
fsubl
call
jne
add
outsl
popa
and
stos
mov
pushf
adc
push
cmp
or
inc
imul
push
and
mov
lock
aad
xchg
jno
ret
fidivrs
movsb
ja
jecxz
call
push
mov
addr16
mov
roll
imul
fsubrl
xor
push
inc
idivl
ja
add
xor
je
cmp
push
add
xchg
shlb
adc
addb
mov
or
jbe
lods
push
jmp
cmp
push
xor
push
fisubs
cmp
sbb
pushf
inc
cmpsl
ljmp
pop
xor
negb
dec
xor
jb
clc
scas
cmp
adc
push
subl
mov
int
or
call
pop
cli
or
pop
insl
call
dec
xchg
push
sub
iret
int3
mov
xor
jne
sbb
xorb
push
and
cmp
add
icebp
out
xorb
bound
add
cmp
bound
insl
push
inc
mov
insb
mov
and
mov
std
push
je
mov
lock
dec
sbb
int3
je
call
and
xchg
xor
mov
pop
xchg
mov
aam
jno
or
mov
xor
and
xchg
mov
mov
push
stc
or
mov
aam
lock
adc
dec
mov
call
and
es
inc
jns
push
push
fdivrl
dec
or
cmc
nop
inc
movsl
fadd
pop
cmp
aam
and
inc
mov
jae
cmp
push
jmp
cmp
shrb
jmp
pop
mov
jge
imul
xor
cmp
pop
inc
push
mov
push
adc
test
pop
cli
aam
add
lods
adc
fsubs
add
lods
dec
pop
stos
mov
or
mov
add
cmc
mov
in
mov
ficompl
test
jb
cwtl
enter
adc
sti
lahf
rorl
cmp
jl
mov
adc
mov
inc
push
stos
adc
jbe
jmp
stos
imul
dec
xor
dec
jns
jo
mov
add
into
cmp
leave
cmp
aaa
mov
test
lods
sti
push
push
adc
sbb
jo
mov
push
mov
shrb
dec
imul
push
mov
fmuls
mov
jecxz
add
or
sub
add
insl
pop
or
add
imul
dec
cmpb
xchg
xchg
adcl
push
aaa
fmuls
in
jge
pop
mov
or
idiv
adcb
add
xchg
pop
fldenv
push
push
cli
push
call
js
rorb
ss
cmp
mov
and
inc
or
push
gs
testl
pop
mov
cmpsb
jb
push
push
hlt
pop
xor
push
addr16
push
sbb
call
push
jle
cwtl
bound
sbb
jae
clc
jmp
dec
lds
lock
mov
pop
mov
fwait
mov
nop
pop
add
jmp
loope
lret
mov
jae
xor
jo
testl
lret
dec
jp
bound
cmp
icebp
in
pop
pushl
pop
or
lock
jo
leave
dec
push
sbbb
pop
pop
insb
mov
movsl
in
or
adc
push
pop
int
dec
addl
shll
shll
push
stos
nop
pop
dec
scas
lock
xchg
push
out
sbb
jno
ss
push
outsb
push
dec
movsl
fdivs
xorb
sub
in
mov
dec
push
lods
push
xchg
or
dec
sub
mov
sbb
daa
inc
push
mov
test
vandnps
incb
mov
std
shrb
outsb
and
xchg
test
dec
pushf
movsb
jecxz
and
leave
xlat
pop
push
jge,pn
xchg
lods
icebp
movsb
sub
out
dec
ss
cltd
or
push
mov
fsubrs
sbb
sbbl
cmp
push
dec
popa
dec
cmp
push
sbb
add
pop
jmp
add
sahf
adc
icebp
push
into
jb
sub
xchg
js
or
xor
xlat
cmp
inc
shlb
dec
lods
inc
fs
pop
push
and
addl
shrb
sub
call
stc
push
mov
xchg
xor
mov
shll
and
xchg
js
and
jbe
test
xchg
add
push
arpl
inc
lret
jbe
sub
inc
sub
test
jo
push
push
dec
pusha
xor
dec
push
rcrb
dec
or
lds
push
push
pop
mov
xchg
aam
enter
adc
add
int
jns
push
push
lahf
push
xchg
push
pop
push
dec
mov
add
push
clc
push
adc
test
xorl
or
inc
xorb
mov
sahf
sbb
mov
shlb
bound
icebp
ljmp
insb
push
adc
adc
push
iret
xchg
mov
add
mov
sbb
push
sub
push
cmc
jne
adc
or
pusha
mov
andb
mov
mov
aam
lea
sbb
outsb
fs
push
adc
pusha
or
xor
or
rclb
call
push
mov
add
inc
ret
add
xchg
push
orb
sub
data16
mov
lock
dec
mov
add
cmp
out
push
sbb
push
add
sbb
jecxz
mov
cmp
mov
test
push
inc
push
jbe
mov
push
mov
rcrl
ss
push
mov
add
xchg
mov
scas
xchg
lods
mov
call
xchg
pop
loope
popf
adc
and
jg
and
xor
or
sbbl
dec
incb
pop
xor
xchg
mov
sbbl
pop
push
add
and
push
pop
add
jbe
lock
mov
rclb
lea
cmp
mov
or
test
or
call
test
icebp
push
les
jecxz
dec
clc
adc
dec
xor
leave
lods
call
clc
ja
jp
push
push
sbb
mov
inc
cmp
iret
push
or
xor
hlt
mov
pushf
mov
xor
pop
adc
mov
or
add
sti
ret
xchg
push
enter
or
nop
ret
add
rolb
jo
into
sub
pop
xor
inc
pop
inc
xchg
imulw
pop
or
push
mov
cmp
ss
push
lock
dec
or
jno
call
es
and
sbb
jp
mov
jo
imul
add
mov
sub
loope
lods
jmp
xchg
sbb
jbe
es
sub
xchg
lock
stos
mov
cmpsl
pushw
test
dec
sbb
mov
adc
mov
cmp
ja
aam
movsb
rorb
sub
enter
aas
lea
out
add
or
or
push
lcall
mov
adc
scas
popa
xchg
lea
or
jmp
ret
popa
call
je
cmp
cmp
jne
pop
sbb
add
or
icebp
push
ja
cwtl
dec
mov
lcall
shll
mov
lods
xchg
out
test
push
iret
sbb
cmp
xor
adc
sarl
sahf
push
add
dec
jno
test
and
movb
test
popf
movsb
lds
ret
add
add
and
pop
xor
mov
scas
mov
sbb
enter
repnz
mov
loopne
or
ja
and
sbb
sbb
inc
and
and
and
pop
add
mov
or
push
ja
pop
and
cmp
filds
mov
mov
push
test
jo
cmpsl
push
push
sbb
scas
je
push
sub
test
pop
jge
adc
xchg
cmpsb
mov
popf
push
push
push
mov
outsl
xlat
cmp
pop
nop
push
std
or
mov
mov
mov
push
je
rcll
adc
movsl
dec
dec
lock
or
comiss
inc
pslld
cwtl
sub
or
xlat
outsb
xchg
js
mov
outsb
sbb
push
scas
inc
test
push
add
push
fdivp
mov
popf
pop
out
push
fcoml
js
cmc
shll
jo
add
in
jo
cmpsl
sti
push
pop
xlat
or
jg
movl
push
mov
add
std
and
movzbl
sub
push
push
mov
mov
loop
cmp
incl
incl
push
test
sub
push
jl
dec
orl
test
or
rorb
jno
scas
dec
xchg
ss
mov
xchg
and
and
fwait
or
sbb
add
and
dec
add
add
inc
sub
inc
pusha
das
hlt
jo
in
test
movsb
xchg
test
out
and
insb
data16
push
mov
xor
subl
ja
jo
movsb
jge
ret
xor
xchg
mov
in
and
test
shlb
das
dec
or
add
xchg
ljmp
xor
rcll
or
mov
push
std
dec
imul
sar
test
enter
je
add
push
js
cmp
cwtl
or
cltd
inc
pop
cmp
add
dec
cmp
rorb
aad
add
fstpl
js
pop
add
fcmovb
or
xchg
add
enter
rcrb
in
lret
shlb
loope
addb
adc
inc
enter
test
scas
pop
jnp
lods
add
dec
xchg
stc
push
es
loopne
test
mov
adc
seta
or
jo
add
mov
mov
cmp
ss
hlt
mov
cmp
hlt
mov
sti
xor
mov
xchg
push
jns
and
mov
adc
outsb
and
ja
fidivs
ljmp
pop
add
jnp
jmp
inc
pushf
jmp
nop
jle
adc
cmp
jg
outsb
adc
dec
outsb
cmp
or
outsb
add
push
jge
notl
push
jle
xchg
ja
jb
push
or
jp
outsb
dec
adc
and
addr16
popa
mov
sbb
mov
gs
imul
orb
jge
cmpsb
or
cmp
fmuls
sbb
jns
subl
data16
jmp
inc
jo
pop
pop
jns
add
addr16
and
add
mov
lock
push
in
iret
add
or
or
stc
push
or
dec
lods
movsl
pop
xchg
push
fcoml
push
or
lahf
dec
lock
lret
jmp
pop
cmpsb
or
adc
jnp
call
popf
nop
loopne
fcomp
sbb
sbb
lods
inc
dec
xlat
sbb
call
popa
pop
in
add
adc
ljmp
rcll
push
es
mov
add
roll
pop
mov
push
mov
cmp
mov
scas
inc
adc
push
mov
xor
xchg
lret
xchg
test
aam
sub
js
in
add
jns
add
je
lock
push
push
pop
push
mov
pop
sub
movsl
or
xchg
fs
dec
scas
in
test
in
xor
out
push
and
call
fcomps
mov
and
cwtl
scas
rcrb
jl
rcrb
test
sbb
les
and
outsb
out
xchg
andl
nop
lahf
movsb
sti
or
iret
dec
andl
imul
dec
cmp
mov
dec
mov
pop
pcmpgtd
adc
xor
movsl
mov
stc
push
dec
sbb
mov
jo
pop
xchg
shrb
je
adc
nop
dec
fs
enter
mov
sub
xchg
adc
xchg
jnp
cmp
push
test
jno
daa
inc
out
movl
xor
lcall
fnclex
fcomi
and
pop
outsl
push
nop
int
add
test
out
ljmp
push
sub
fldcw
ret
sbb
lock
cmp
jmp
add
push
icebp
mov
adc
mov
push
icebp
lret
and
insb
mov
cwtl
add
fisttpll
push
adc
sub
jge
imul
addl
pop
or
mov
icebp
and
add
mov
icebp
cli
add
push
cmpsl
clc
aas
cmp
adc
imul
icebp
clc
test
and
inc
or
sub
adc
sub
insl
push
cmc
pop
insl
adc
nop
dec
and
pop
rcr
push
pop
cltd
clc
xchg
into
or
outsb
and
jne
loopne
push
jne
cmp
call
movsb
inc
and
je
cltd
test
sti
arpl
xchg
in
dec
popa
dec
sti
ss
or
sub
movsl
mov
sub
push
stos
push
imul
mov
inc
ss
sbb
mov
mov
xor
mov
inc
or
shrb
jp
push
es
xor
and
sbb
pop
imul
xchg
jbe
icebp
sbb
call
int3
rorl
mov
call
inc
and
cmp
not
pop
mov
mov
rolb
mov
lea
mov
cli
movsl
jg
xorb
divb
rolb
adc
xchg
xor
shr
xchg
test
imul
jb
mov
and
xchg
sub
sbb
test
push
pop
cmp
call
add
aaa
jmp
add
in
xor
cmp
popf
test
ret
add
cs
and
dec
loopne
inc
inc
rclb
jl
sbb
ret
push
movsb
outsl
add
movsb
pop
or
and
sbb
xchg
jo
sub
push
in
les
addr16
mov
mov
add
test
adc
out
inc
mov
add
mov
and
loopne
and
imul
fidivl
rclb
add
mov
mov
mov
add
xorl
jl
adc
jle
iret
push
pop
xor
add
and
enter
movsl
sbb
cmc
dec
dec
mov
and
inc
mov
mov
sub
loopne
cs
xor
push
jb
push
jne
and
stos
pop
lcall
mov
inc
add
outsb
mov
mov
stos
nop
loope
inc
mov
sub
mov
mov
rclb
lock
xchg
in
fidivl
jno
mov
mov
xchg
stos
and
pop
cmpsl
inc
mov
cmpsb
and
mov
push
je
mov
adc
cs
mov
cmpsb
add
testl
sbb
sub
mov
inc
push
and
test
je
mov
and
movsb
add
popa
in
push
sbb
sub
addb
push
push
jle
xor
and
jl
or
push
or
addb
ljmp
xor
or
push
push
add
sbbb
xor
or
aam
cmp
insl
add
mov
sub
push
dec
js
sub
inc
popf
cltd
and
je
add
lret
je
test
sbb
aam
xorb
ljmp
push
hlt
pushf
js
xchg
or
sbb
adc
sbb
push
femms
cmpsb
cs
or
mov
mov
orl
adc
jmp
add
outsl
cmp
push
jbe
in
push
fistl
cmp
xchg
jecxz
cld
sub
cmp
pop
clc
out
adc
push
push
imul
repz
pop
out
aam
sarb
dec
adc
inc
adc
push
cmp
and
jnp
nop
lret
mov
mov
inc
je
pop
push
and
mov
rol
popl
dec
fsubrs
jnp
and
push
jge
xchg
sub
sbb
lret
int3
dec
cmp
adc
pop
dec
ret
ret
inc
fdivrs
mov
sbb
adc
in
das
arpl
rolb
pop
adc
add
mov
enter
sbb
loopne
and
or
jns
and
mov
out
lcall
inc
sub
int
gs
pop
dec
push
push
xor
xor
inc
cmp
ss
aaa
inc
es
push
pop
cmpsl
rep
out
imul
pop
insb
cmpsb
push
push
and
cwtl
sub
subb
xor
loope
push
gs
push
pop
mov
js
das
push
push
jno
xor
jnp
insb
add
lahf
lock
hlt
cltd
cmp
iret
in
push
jl
inc
mov
dec
sub
dec
test
inc
mov
insb
jge
fnsave
or
fiadds
lods
fnstsw
add
or
add
dec
imul
jl
pop
js
test
mov
mov
inc
mov
pop
stc
mov
int3
sub
call
sbb
jns
mov
mov
js
jns
jns
nop
shrb
rolb
sti
or
rcrl
cwtl
inc
and
rolb
movsl
cmpsl
add
cmpb
js
js
mov
adc
out
adc
or
dec
cmp
dec
stos
sbbb
xor
cmpsl
mov
push
shlb
or
das
je
push
cltd
fisttps
test
add
xchg
add
add
mov
sub
push
and
xor
js
rclb
push
adc
mov
scas
shl
subb
les
add
dec
mov
push
sti
or
cmp
lahf
call
push
cmp
inc
fwait
xor
add
add
sbb
xor
push
inc
movsl
test
mov
adc
dec
mov
mov
jge
je
sbb
and
pop
std
les
jne
push
mov
mov
rcrb
or
and
mov
jbe
test
mov
push
mov
jmp
push
cmp
xchg
scas
les
scas
mov
orb
xchg
or
add
pop
fneni(8087
xor
fistl
add
xchg
adc
adcl
loope
js
shll
or
sub
sbb
push
push
and
ljmp
mov
sbb
pop
lds
add
xchg
push
repz
icebp
jo
adc
test
dec
sub
jp
push
push
push
hlt
and
and
jle
jl
and
in
pop
pop
inc
jae
and
es
sbb
cmp
fildl
cs
in
loope
popa
push
sbb
hlt
pop
or
int3
dec
cs
cmp
pop
push
mov
dec
xchg
lret
js
dec
push
lock
or
mov
sub
pop
add
sbbl
push
dec
adc
pop
movsb
jmp
shl
pop
push
and
mov
inc
xor
inc
mov
rol
pop
mov
sbb
sub
iret
add
ret
dec
adc
shll
push
mov
xchg
sbb
sbb
pop
push
mov
pusha
xor
lods
cmp
jne
fs
aam
add
push
das
mov
test
mov
lock
test
push
out
sbbb
nop
mull
sbb
inc
xor
testl
add
imul
xchg
sbbb
aam
mov
jge
or
inc
out
add
or
dec
popa
enter
or
push
mov
jne
mov
loopne,pn
mov
or
add
pusha
sbb
movsb
sahf
call
push
sahf
enter
or
cs
xor
enter
mov
movsl
push
push
movsl
jnp
inc
hlt
fldl
incb
push
clc
fcomp
fnstsw
idiv
scas
leave
and
sub
inc
clc
pop
fsubr
pop
faddp
andl
test
fstpl
xchg
test
adc
xorb
xor
xor
bound
sub
call
lods
xchg
mov
andl
add
or
jbe
push
and
loope
or
leave
add
cmp
call
mov
xor
nop
jb
mov
mov
ficoms
adc
test
iret
sub
jecxz
xor
push
inc
push
xor
or
lea
stc
ret
mov
and
mov
adc
hlt
add
movsl
fwait
negl
mov
and
bswap
hlt
sbb
inc
fcomi
push
push
sub
xor
aam
sbb
add
dec
add
sarl
or
into
lock
push
sahf
dec
jmp
sub
jp
jne
pop
in
sub
xor
mov
add
mov
into
enter
mov
cmp
cli
cmpsb
jge
ret
cmpsl
ret
sub
push
dec
sbb
subl
jbe
test
addps
cmc
and
dec
sbb
and
inc
sub
pop
push
push
xlat
inc
adc
scas
mov
dec
dec
test
lock
lock
add
cmp
lods
gs
xor
pop
or
pop
test
sbb
dec
adc
shrl
into
inc
add
iret
orb
add
data16
mov
repnz
mov
dec
rclb
or
mov
ficompl
data16
or
mov
mov
fcomp
dec
pushf
pop
ja
mov
jmp
inc
push
sbb
cmp
sbb
enter
adc
ja
mov
xor
push
pop
ret
rclb
lock
dec
xor
add
mov
inc
fcoms
hlt
inc
adc
test
pushl
sub
sbb
addr16
xor
movsl
sub
adc
cld
in
outsl
inc
cmp
pop
add
in
push
sub
push
sbb
cmp
pushf
lret
jno
cmc
add
movsl
pop
clc
test
adc
test
inc
xchg
and
cmpsb
adcl
pop
sbb
mov
jo
push
pop
push
jne
psubsb
inc
ss
fcoms
cmpl
push
lret
rcrb
and
pop
scas
pop
inc
insb
add
mov
mov
mov
inc
xchg
xchg
xor
mov
add
mov
and
dec
leave
shrl
imul
cmp
outsb
adcb
rcll
gs
dec
orl
fmull
cmp
roll
add
ds
std
xor
sbb
out
mov
inc
xchg
icebp
scas
dec
and
mov
inc
loope
pop
xchg
xlat
in
push
cwtl
adc
push
hlt
ret
inc
mov
push
daa
es
sub
hlt
xor
jnp
sbb
idivl
popa
cmpsl
xchg
pop
imul
sub
and
xchg
test
inc
pop
xchg
push
andl
push
inc
ret
mov
and
das
outsb
int3
int3
pop
dec
les
add
or
adc
jns
adc
push
jno
sbb
dec
sbb
jecxz
sub
xchg
xchg
lods
jg
sbb
andb
daa
add
sub
jecxz
daa
add
shlb
and
and
pusha
je
and
movsb
jb
in
dec
inc
faddl
push
mov
xchg
sub
cmp
add
sbb
add
cmp
scas
or
add
ret
mov
sub
inc
andl
mov
push
adc
adc
icebp
pop
loope
mov
sub
pop
aas
and
daa
lock
adc
xor
ret
adc
jmp
mov
fsubrl
mov
mov
in
mov
aas
add
fdivl
pop
mov
aad
inc
or
in
scas
sti
shlb
inc
push
add
int
jnp
add
sub
sarb
mov
jo
jg
mov
adc
add
addr16
jl
notb
or
xor
or
cmpb
pop
dec
lods
inc
clc
or
aad
sbb
loope
ss
push
push
insl
loopne
shll
in
mov
xchg
mov
or
sub
mov
sbb
ja
dec
adc
add
and
mov
mov
ret
pop
cmpl
xchg
mov
dec
xchg
sbb
inc
fucomip
sub
fbstp
xor
adc
sbb
jge
inc
push
sub
clc
fs
pop
mov
xor
cmp
and
add
mov
pop
jmp
xor
or
and
jbe
mov
lods
dec
inc
cmp
xor
mov
popa
push
das
and
jl
pop
rcl
adc
xlat
add
mov
pop
je
shll
pushf
dec
loopne
or
sbb
cmp
or
dec
call
cmpl
and
mov
mov
and
jl
push
push
push
loopne,pt
in
mov
mov
daa
daa
shrl
or
imul
stos
push
rorb
sbb
dec
jae
sbb
push
in
lock
in
adcb
push
cmp
xor
sub
or
lock
or
xor
cmp
fmuls
jmp
push
pusha
gs
cmp
or
or
icebp
and
mov
movsb
shrb
inc
in
jecxz
jne
mov
leave
inc
mov
cmp
clc
es
inc
xchg
push
leave
lock
shrb
mov
sub
adc
xchg
push
adc
push
mov
xchg
ljmp
xchg
sub
mov
push
lcall
imul
fmuls
aam
xor
add
les
out
push
adc
or
pop
push
mov
mov
js
or
in
outsl
cmp
xchg
loopne
scas
test
data16
xchg
in
shlb
ja
popa
jo
faddl
insb
push
test
clc
cmp
jne
lcall
orl
pop
add
enter
adcl
repnz
test
repz
xchg
out
add
sar
leave
adc
enter
jbe
test
push
add
pop
sbb
jns
dec
popa
inc
cmp
fbld
pop
clc
jl
xorb
jno
push
shlb
sbb
rcrb
int
repnz
loopne
dec
rcll
jp
dec
aam
pushf
jl
nop
loopne
inc
dec
fwait
iret
xor
xchg
sbb
add
and
push
les
push
sbb
inc
add
jb
testl
sbbb
or
incl
lcall
aam
clc
pop
sbb
sarb
shl
pop
rcl
movsb
mov
lock
add
xchg
fcomip
stc
push
mov
leave
inc
xor
data16
cmpsl
lea
jb
push
sbb
pop
dec
aad
push
push
push
sub
stos
cmc
bound
fld
pop
push
pop
dec
ficoms
jno
adc
lret
inc
fmul
cmp
rclb
add
testl
or
rorl
aas
cmp
call
xor
sub
pop
lds
sub
inc
mov
cmp
jge
inc
jns
pusha
sbb
add
nop
cmp
or
mov
rcr
jo
add
gs
shlb
mov
outsl
movsl
ret
sub
aad
or
jecxz
dec
loopne
sarb
adc
push
and
mov
popa
loope
iret
add
pop
aas
pop
inc
mov
mov
ret
les
and
mov
inc
repz
mov
aaa
icebp
and
xor
or
adc
in
pop
ja
pop
add
call
rolb
ret
aad
sbb
sbb
xchg
fistpl
sarb
cmp
sbb
cli
mov
inc
adc
inc
and
icebp
and
xchg
mov
xor
xor
sbb
xchg
fucomi
sbb
das
inc
push
cmpsl
cs
out
mov
jbe
loopne
xor
outsl
push
dec
je
sub
sub
or
inc
shrb
or
xlat
xor
mov
test
cwtl
dec
mov
inc
fcoms
push
and
lret
fisttpl
jmp
and
cmp
lods
outsl
inc
test
shlb
and
push
sbb
add
push
mov
pop
push
dec
jb
lods
dec
shlb
loope
adc
aad
test
lret
mov
stos
adc
adcl
mov
cmp
rclb
or
rclb
xchg
es
inc
jmp
push
cmp
inc
inc
cmp
pop
mov
aam
mov
dec
loop
xchg
fisubrs
mov
mov
add
fimuls
add
in
iret
mov
or
mov
push
into
inc
clc
imul
fbld
sub
add
push
scas
dec
add
sti
lret
sub
push
xor
add
cmp
add
aaa
or
inc
inc
dec
push
sub
mov
cmp
insl
popf
mov
iret
pusha
in
mov
sbb
jbe
inc
add
pop
andl
dec
xchg
add
andl
sub
pop
lea
cs
loope
repnz
mov
cmpsl
lcall
inc
mov
pop
mov
mov
or
sub
or
inc
into
popa
adc
pop
pop
sahf
xorb
sub
pop
add
aas
cmpb
adc
shll
sub
lock
enter
inc
loop
test
or
clc
shll
push
pop
push
int
xor
cs
pop
jb
cli
std
sub
and
loopne
push
or
push
push
xchg
xchg
cmp
jl
xor
jbe
mov
sbb
packsswb
leave
add
sub
xor
inc
cmp
movsl
test
cmp
ss
ret
and
sbb
adc
sub
into
imul
xchg
outsb
test
bound
xchg
sub
xchg
lods
sub
bound
lock
mov
or
test
mov
sbb
xchg
add
jnp
mov
jle
and
dec
aaa
lods
gs
sar
add
cmp
ja
inc
pop
adc
loopne
mov
or
adc
inc
mov
cltd
outsl
movsb
sub
sbb
test
push
inc
or
inc
sub
imul
jbe
test
pop
mov
mov
add
pop
or
add
mov
adc
ss
xchg
cmp
or
inc
or
sbb
cmpsb
add
rolb
icebp
sub
jmp
xor
mov
jnp
xor
inc
sub
lcall
sub
or
and
pop
cmp
jl
inc
shll
xor
subl
fcomps
xchg
cmp
cmp
pop
add
push
in
aaa
xor
cmpb
es
std
push
out
insb
into
jl
shrl
pop
enterw
and
ffreep
xchg
pop
aad
cmp
push
pop
xchg
mov
push
mov
cmp
daa
xchg
mov
pop
xorb
jl
jmp
or
xor
cltd
mov
cmp
xor
pop
jne
jns
scas
mov
adc
push
jmp
ja
fiaddl
push
sbb
mov
add
jmp
int
stos
pop
xchg
ret
xchg
mov
outsl
lock
jne
inc
bound
into
jl
inc
mov
data16
js
push
jge
lret
adc
ljmp
inc
sub
into
lods
rcll
mov
cwtl
sub
fwait
lea
push
mov
or
inc
test
xor
add
pop
or
stc
icebp
pop
push
pop
cmpsl
mov
xor
inc
or
lods
pop
push
movb
sbb
or
and
jle
inc
lock
push
add
xchg
stos
or
push
clc
mov
and
or
mov
in
add
aad
aaa
push
mov
test
sbb
pop
shlb
mov
and
in
in
add
pop
sub
addr16
into
xchg
xchg
adc
and
push
mov
jecxz
jle
xchg
add
sub
enter
cmp
sub
scas
cmpl
imul
sbb
loope
push
xlat
dec
outsb
fcoms
test
jg
int
mov
ja
mov
push
std
cwtl
mov
insl
popa
mov
xchg
sbb
jge
cmp
lods
sub
aam
dec
inc
xor
xor
rolb
data16
cmp
mov
xor
dec
rcrb
push
fidivrl
inc
xor
push
cmp
xchg
mov
jle
dec
outsb
pop
push
mov
and
push
adc
enter
sbb
stos
movsl
adc
inc
mov
cli
movsl
xor
stos
fnstsw
mov
xor
fincstp
ss
nop
sbb
xchg
adc
add
sub
cltd
aaa
repz
dec
adc
xor
fiaddl
ss
pop
fdiv
je
and
ret
add
fldl
push
mov
imul
sub
cmp
adc
leave
jne
add
jge
jmp
cmp
movsl
sub
movsl
jns
xchg
or
bound
mov
and
xchg
daa
call
add
in
test
cmp
pop
jb
add
inc
inc
xor
pop
es
inc
and
and
adc
push
pop
adc
pop
add
xor
cmpsl
stos
mov
pushf
scas
xor
mov
mov
enter
adc
outsl
fldl
loop
inc
xchg
mov
mov
adc
mov
and
mov
sbbb
sar
insl
sub
movsl
or
sbb
push
inc
add
decl
aaa
and
sbb
test
mov
jb
add
mov
daa
jge
iret
cwtl
scas
add
add
scas
sarb
int
jne
add
jne
pop
push
mov
nop
pop
fisttps
xor
push
adc
push
call
test
scas
push
dec
sub
mov
inc
ror
jnp
push
xor
jo
cmp
int3
or
adc
cmpsl
or
push
sub
mov
sbb
jp
inc
mov
sarb
pop
icebp
scas
shlb
add
lods
inc
out
ss
and
and
push
or
movl
mov
and
sub
push
addr16
mov
popf
xchg
push
nopl
fnstcw
or
mov
mov
sbb
test
loope
fldl
in
movsl
sbb
inc
out
xor
andl
dec
mov
js
dec
mov
inc
pop
loop
inc
popa
jle
sarl
cmpsl
xchg
xor
mov
or
mov
ret
sahf
fcomps
lret
push
imul
or
in
lods
xor
sbb
adc
add
sub
mov
jo
ret
jmp
pop
imul
ja
scas
mov
push
sbb
sbb
sub
fstps
jns
jl
xchg
jo
adc
xchg
sub
insb
cmp
adc
jbe,pn
push
xor
sub
cmpsl
fistpl
xchg
faddl
adc
in
cmp
in
mov
jle
call
idiv
clc
mov
adc
xor
xchg
dec
notl
popa
dec
mov
xor
cltd
rol
leave
or
add
push
pop
or
mov
jmp
inc
fisubs
cmpb
jle
inc
sbb
xor
popf
shrb
sbb
ret
pop
adc
or
add
jl
cmp
cmp
fwait
dec
push
in
popa
ret
subl
es
mov
call
bound
insb
mov
mov
adc
cmpsb
adc
sahf
fisubrs
daa
xchg
sub
lods
jmp
inc
lahf
mov
jg
push
stos
jno
js
cmp
jl
sbb
push
push
sub
mov
dec
mov
gs
add
push
aam
rclb
daa
jo
pop
cmp
push
hlt
stos
cli
lea
lock
adc
pop
outsl
or
and
lds
mov
aas
ja
sbb
rclb
cmp
in
mov
and
fildll
shl
pop
cmc
test
push
add
insl
xchg
adc
stc
invd
or
mov
enter
xchg
call
sub
test
sub
inc
test
inc
sub
jno
jne
xchg
outsl
jmp
test
cli
or
popf
outsb
in
rcll
dec
sub
push
pop
mov
xchg
enter
jmp
mov
sbb
push
subb
adc
xlat
jne
cmp
push
xor
sti
xor
sub
cld
push
lods
nop
fsubrs
lcall
pop
pop
lock
insl
ret
jp
adc
sbb
push
outsl
cwtl
add
xor
push
adc
add
push
icebp
jle
dec
cmp
jg
cld
sub
lock
inc
mov
mov
dec
push
inc
push
cmp
test
movsb
rcrl
xor
jmp
fbld
sbb
sub
add
into
push
push
add
push
add
scas
xchg
lret
adc
add
jp
sahf
hlt
adc
orb
mov
mov
add
jl
jl
ret
movb
out
push
test
xorb
gs
fstpt
ja
data16
call
cwtl
stc
push
clc
hlt
rcrb
repz
sub
lret
add
imul
pushf
sti
sub
xchg
sbb
add
fnstenv
mov
xor
jns
or
or
cmp
mov
lcall
out
and
and
bound
push
jne
daa
add
call
test
shrl
cmpb
imul
repz
mov
test
mov
call
outsb
mov
nop
enter
scas
test
dec
jecxz
sub
mov
lea
jmp
push
mov
push
push
addr16
mov
inc
enter
add
add
add
push
push
dec
or
orb
and
aam
jae
jne
fsubs
mov
mov
jecxz
out
shlb
add
fiadds
cmp
or
push
add
push
sbb
push
xor
add
mov
dec
jb
sub
roll
or
stos
insb
jno
or
inc
cs
or
xchg
addl
or
inc
mov
loop
rorb
es
and
push
dec
push
cli
sbb
in
ss
adc
leave
repz
sbb
or
std
daa
inc
popa
imul
sub
push
add
adc
sbbb
popl
test
pop
fmuls
fwait
push
add
sbb
stos
fldl
adc
enter
mov
adc
sbb
sahf
xorb
mov
and
sbb
roll
mov
pop
or
adc
inc
cmpsb
in
adcl
shrb
mov
ficoml
lock
dec
insl
push
add
cmp
daa
mov
enter
mov
rcll
addps
push
pop
sbb
dec
in
inc
push
pop
mov
lods
js
adcl
sbb
in
pop
pop
xor
or
loopew
ljmp
pop
dec
aad
aam
push
stos
iret
add
sbbl
push
xchg
nop
inc
sbb
gs
dec
fwait
loopne
jo
call
subb
shlb
cmp
xchg
stos
cmp
dec
lock
aam
push
add
jo
sub
add
pop
cmpsl
jo
push
jbe
push
jmp
inc
lock
in
push
lea
xchg
in
addl
sbb
add
aaa
and
add
aam
sbb
das
jne
das
call
fcoms
or
test
cmp
mov
fdivrl
push
sub
loopne
loope
xchg
sub
fsubrl
push
jns
jnp
ret
mov
out
adc
lret
fsubrl
outsb
mov
mov
mov
sbb
inc
int
data16
jge
sbb
push
jle
imul
add
rclb
mov
mov
add
dec
ret
out
xchg
out
sbb
mov
inc
mov
faddl
inc
in
sub
dec
les
mov
mov
pushf
xchg
dec
jmp
movsb
and
adc
adc
fsubl
cmp
or
insl
add
cmp
dec
sbb
jecxz
sbb
add
sbb
mov
pop
roll
sub
sbb
shll
mov
call
rcrl
mov
ja
or
in
push
push
xor
or
push
gs
in
test
adc
addl
mov
mov
jo
push
das
pop
insl
and
jg
test
pop
or
cwtl
sub
aam
mov
jne
lea
je
and
cld
pop
mov
add
pop
test
push
pop
dec
xchg
cmpsl
jnp
pop
jo
sub
jno
sub
shll
add
rcr
push
test
sbb
adc
jae
push
xchg
sub
push
xchg
sub
shlb
push
sete
addb
sub
push
nop
jns
inc
test
insl
test
dec
shlb
or
mov
sub
ss
add
movsb
push
imul
adc
and
or
mov
push
enter
in
stc
push
les
femms
and
shl
push
mov
rcrl
cs
movl
inc
repnz
xchg
add
push
lcall
cmp
jmp
loopne
sbb
add
sarl
jbe
ja
sahf
decl
mov
lea
xchg
fimuls
adc
mov
leave
push
dec
push
lods
xlat
cmp
mov
enter
in
push
or
iret
mov
xchg
rcl
subb
and
mov
cmp
pop
adc
adc
jecxz
lods
sti
jp
js
add
int
push
sbb
mov
or
jp
js
rolb
mov
sub
test
push
popf
hlt
or
ds
add
push
and
xor
clc
rcl
enter
and
inc
cmp
adc
mov
push
mov
or
popa
lea
or
push
movsb
push
push
mov
adc
push
cmpsb
stc
clc
sbb
sbb
or
or
std
pop
rol
rclb
adc
ljmp
sti
outsb
adc
push
cmpsb
or
pop
inc
lret
fsubrp
or
xor
add
jg
push
inc
mov
loopne
push
rorl
sbb
movsbl
cmp
lahf
rclb
adc
jbe
push
paddb
ja
push
mov
cs
dec
call
xor
push
xchg
xchg
mov
sbb
jnp
ljmp
loopne
arpl
adc
adc
jl
bound
in
cld
sub
gs
and
loopne
mov
in
lea
ret
cmp
je
lea
pop
cmp
jl
aam
dec
sarb
pop
sub
mov
mov
loope
dec
xor
cwtl
lods
xor
adc
add
and
mov
test
adc
cmp
add
xchg
pop
hlt
add
cmp
inc
inc
cmpl
inc
outsl
adc
fs
ja
pop
js
xor
loopne
repnz
sbb
std
add
dec
dec
dec
mov
add
push
pop
or
aaa
aaa
mov
or
jnp
or
jbe
jmp
or
aaa
aaa
push
jmp
por
jmp
adc
pop
aaa
aaa
aaa
aaa
adc
push
adc
dec
adc
dec
adc
aaa
aaa
push
jmp
pop
jmp
sbb
xor
aaa
aaa
aaa
sbb
sub
jmp
sbb
and
aaa
aaa
push
jmp
pop
jmp
and
or
sub
and
pop
hlt
inc
lea
ret
xchg
scas
sbb
insb
or
dec
xorl
cli
icebp
push
add
repz
push
or
adc
and
xor
repz
inc
inc
dec
push
repz
repz
pop
pusha
gs
repz
outsl
je
jle
mov
repz
xchg
xchg
pushf
mov
cmpsb
stos
mov
mov
mov
add
push
pop
or
and
dec
add
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
or
cmp
aas
push
popf
adcb
and
mov
roll
cmp
ja
inc
sub
test
mov
inc
adc
ret
fsts
js
fnstcw
jbe
inc
pushf
les
cmp
jo
sub
jo
jo
insb
push
aam
add
mov
aam
and
mov
rorb
cmp
xor
stos
xorb
int3
cmc
enter
jb
inc
lea
mov
pop
out
sbb
xchg
ss
cwtl
lret
cmp
or
out
inc
repz
lods
repz
enter
dec
dec
js
dec
xor
into
jle
fdivrl
lods
sbb
cli
cmp
ds
es
xchg
shll
sub
xor
mov
data16
or
sbb
xor
in
add
push
loope
aaa
adc
lahf
pop
pop
gs
fcoml
mov
mov
pop
sub
cmp
sub
inc
out
shlb
imul
and
jmp
decl
adc
inc
jge
sub
push
testb
cltd
shlb
xor
mov
jecxz
xor
clc
cmp
and
jge
dec
pusha
and
add
dec
dec
add
fistl
xor
pop
sbb
mov
inc
sub
cmc
mov
call
stos
mov
add
test
mov
jbe
xchg
filds
imul
loopne
ss
adc
mov
das
pop
lret
adc
test
sub
lea
lea
cmp
mov
sbb
pop
js,pn
ret
movl
scas
ret
inc
mov
mov
inc
jae
cmp
inc
cmp
sub
xor
add
cvtpi2ps
and
rorb
popf
xchg
scas
mov
xor
push
fldt
mov
lea
imul
cmp
ja
adc
call
dec
mov
stos
ret
and
pop
dec
sbb
pop
rcrb
lock
inc
xchg
add
adc
or
dec
call
icebp
add
clc
fmuls
enter
subb
push
xor
loope
test
add
pop
mov
push
and
add
inc
cld
test
pop
pop
add
fstl
adcb
lods
inc
xor
add
addl
xchg
or
add
std
mov
adc
fdivs
negl
or
call
add
mov
orb
and
and
lock
adc
xchg
inc
jle
add
mov
xor
mov
mov
mov
and
add
sbb
xchg
fldcw
push
sbb
mov
bound
imul
cmp
sbb
adc
sub
push
cmpsl
and
pop
cltd
sbb
pop
stc
push
add
mov
popf
push
or
pop
les
in
in
add
mov
and
push
sub
add
mov
xchg
xchg
ret
and
jae
inc
cmovo
mov
imul
divb
insb
ret
test
ficomps
icebp
mov
adc
jge
inc
cmp
jl
xchg
and
and
pop
mov
mov
jg
push
pop
cmp
add
cli
es
lea
sbb
cmp
sub
and
or
imul
xor
dec
movsb
or
jmp
cli
mov
add
mov
inc
mov
or
jo
xchg
outsl
or
icebp
jl
dec
in
jae
mov
sahf
cmp
push
js
je
jae
movsl
test
pusha
and
mov
pushf
inc
std
cmpsb
jb
cmp
jae
movzbl
rcl
stos
and
pop
push
mov
inc
adc
js
clc
push
add
cmp
or
xor
inc
xchg
pop
push
inc
jecxz
addl
jl
loopne
inc
jg
mov
and
movl
mov
sbb
mov
inc
outsl
push
jmp
pop
push
lahf
cltd
and
jmp
test
sbb
icebp
cmpsb
mov
loope
ret
inc
or
loopne
dec
inc
in
dec
mov
xor
out
or
add
dec
enter
ret
push
mov
mov
add
es
pop
inc
mov
fidivs
pop
sub
or
sbbl
sbb
cld
movsl
daa
or
clc
add
mov
testl
sub
sub
test
and
mov
dec
jns
pop
or
pop
push
data16
fadd
mov
sub
add
adc
adc
das
inc
mov
in
inc
out
adc
inc
adc
push
xchg
loopne
add
mov
rolb
fs
movl
fmull
and
xchg
in
shl
pop
pusha
ret
jbe
push
sbb
ror
inc
fimuls
push
out
inc
or
cltd
aas
lds
in
pop
dec
adc
jno
push
mov
sbb
loopne
gs
inc
xchg
sbb
inc
ja
and
push
or
scas
push
ljmp
push
jmp
js
jmp
mov
pop
dec
jle
or
add
fcoml
dec
pop
pop
mov
push
add
hlt
sub
lods
js
cwtl
inc
mov
clc
je
jmp
push
bound
adc
leave
and
sub
fucomi
sbb
sub
insb
push
mov
test
or
jo
push
ret
lods
sbb
in
ss
popa
dec
movl
add
sbb
das
add
or
add
cmp
inc
push
push
cld
adc
mov
in
lock
mov
test
pop
or
add
inc
frstor
pushf
repz
mov
loopne
jo
je
ss
iret
test
outsl
pop
inc
adc
pop
sbb
lock
sub
dec
inc
sbb
xor
jb
cmp
adc
out
shrb
xchg
sbb
out
push
xchg
outsb
push
push
push
ret
lds
pushf
or
ret
loopne
and
jnp
jo
aaa
add
inc
and
inc
in
pop
ficoms
or
push
nop
pop
int
outsb
shrb
inc
pop
arpl
pop
adc
adc
and
push
sbb
or
out
add
sub
push
push
push
adc
in
dec
enter
lods
push
les
or
add
sub
arpl
mov
push
cmp
push
icebp
add
and
fimull
inc
out
lcall
mov
lcall
or
lea
push
ret
ljmp
stos
cmp
or
je
pop
roll
pop
inc
inc
aad
or
imul
xor
stc
push
or
inc
add
shl
jl
cmc
pop
daa
or
xor
push
mov
bound
jno
lret
xchg
push
pop
adc
icebp
jno
xchg
arpl
sbb
cs
cmp
xor
and
or
sub
cmc
fwait
mov
cld
cmpl
mov
add
inc
movsb
loop
int
pop
out
pusha
ffree
mov
adc
pop
addr16
ljmp
bound
push
js
clc
lock
push
sbb
sbb
cmp
push
mov
push
hlt
or
mov
jb
cmpl
in
je
lea
push
lock
mov
or
adc
push
fdivs
inc
push
jg
pop
and
push
adc
or
pop
adc
xchg
xchg
add
ljmp
int
mov
adc
js
adc
add
mov
cmp
add
pop
repnz
adc
push
out
mov
pop
mov
xor
jecxz
aam
int3
pop
jnp
sub
add
scas
or
adc
out
enter
mov
xchg
andl
xchg
lock
inc
dec
inc
or
dec
enter
mov
cmp
pop
pop
and
pop
pop
repnz
xchg
inc
pusha
cmp
adc
movsb
loope
cmp
ds
lds
inc
xlat
sbb
mov
roll
js
cmovg
pushw
imul
aad
jns
lock
mov
fcom
or
dec
enter
fs
insb
shrl
dec
imul
les
mov
in
es
xchg
and
mov
add
xchg
in
xchg
ss
xchg
jbe
mov
test
push
inc
mov
out
push
cmp
sub
orb
sub
pop
xor
in
xor
xor
mov
icebp
mov
xor
and
stc
xchg
xchg
subl
and
test
les
ljmp
dec
inc
outsl
shrb
jg
xchg
and
adc
add
dec
mov
enter
nop
add
mov
push
dec
sbb
inc
aaa
dec
push
and
and
andl
mov
sbb
lcall
dec
adc
cmp
int
outsl
pop
add
pop
fcmovne
leave
sbb
xor
inc
xchg
push
xchg
pop
es
or
pop
push
jge
xor
inc
js
pop
movsl
je
mov
inc
jo
dec
or
dec
leave
pop
sub
adc
push
testb
daa
mov
lods
dec
js
mov
lea
push
mov
jb
scas
test
pop
adc
insl
push
pushf
and
and
or
sarl
fildl
daa
imul
pop
adc
mov
jo
or
aas
cmp
mov
sbb
int
cmp
jne
inc
xor
sub
mov
adc
mov
testl
pop
push
cmp
je
cmp
push
aas
xor
push
push
es
xor
mov
rcll
and
jg
fimull
mov
mov
mov
jae
jle
pop
dec
int3
subb
or
ret
jmp
sub
mov
pop
add
jmp
push
arpl
jnp
pop
push
test
bound
lcall
and
cs
fidivs
adc
stc
add
adc
xchg
mov
pop
lods
pop
inc
lret
arpl
enter
push
xchg
rclb
repnz
data16
pushf
add
and
and
movzbl
push
xorb
je
and
sti
fwait
test
push
cmp
pusha
cmp
cmp
fdivrs
push
stos
imul
mov
shrb
adc
cwtl
push
aad
sahf
mov
mov
lea
daa
xchg
xchg
jle
fidivs
adc
shrl
ljmp
icebp
push
cmp
jge
mov
aam
inc
leave
ljmp
add
cmp
xor
mulb
xor
inc
and
loopne
mov
sub
mov
les
lock
clc
clc
cld
cmp
jne
jae
movl
sub
push
add
add
lcall
push
and
ja
popa
out
add
dec
je
add
sar
pushl
adc
cmp
dec
or
mov
shr
sbb
mov
or
mov
sub
loope
xor
dec
xor
adc
dec
or
sbb
adc
ja
out
adc
and
fildll
jnp
je
push
add
inc
or
loopne
loop
mov
mov
adc
repnz
movsl
out
pop
add
lret
sub
scas
pop
push
cld
incl
push
mov
test
je
cmp
jne
sbb
pop
sub
adc
mov
shlb
fdivrl
jmp
or
inc
inc
xchg
or
sbb
addb
inc
jmp
sbb
mov
incl
imul
pusha
clc
jb
imull
insl
test
pop
sarl
dec
pcmpeqb
push
add
rorb
sbb
aas
cmp
mov
imul
cmp
or
push
dec
arpl
xor
lock
fistps
je
push
popa
pop
jbe
inc
test
jmp
adc
mov
daa
pop
call
jmp
push
jae
std
int3
xor
repnz
cld
insl
cmp
clc
addr16
jae
cld
lcall
add
push
inc
in
pop
aad
dec
decb
xor
cmp
cmp
je
cmp
pop
cmp
je
cmp
jne
inc
jne
es
clc
into
mov
sub
or
or
mov
out
int3
add
test
in
dec
xor
jb
mov
xchg
cmp
popf
or
test
cmp
jne
dec
test
cmpsl
lea
cmp
jne
mov
push
cmp
pop
aas
pop
xchg
in
push
push
movsl
push
pop
add
xor
insb
aaa
insb
add
cmp
xor
cmp
xchg
notb
mov
jmp
and
push
mov
int
jmp
inc
jl
inc
jg
aaa
jo
fwait
sub
shl
mov
sub
mov
call
mov
fscale
push
nop
sub
les
outsl
adc
pop
xchg
jg
imul
and
dec
mov
insb
cmp
dec
hlt
pop
les
mov
stc
add
fdivl
and
xor
xchg
enter
test
adc
mov
jmp
add
cmp
hlt
imul
mov
mov
inc
cmc
add
roll
in
les
sbbb
andb
clc
sub
mov
daa
test
add
mov
push
gs
das
lcall
xor
fsubs
inc
cmpb
test
sub
lea
idivb
fsubrp
inc
inc
adc
add
jmp
xor
jne,pn
aam
mov
inc
and
xchg
push
cmp
cmc
gs
or
mov
add
or
mov
add
push
cmp
or
inc
and
push
push
mov
cmp
je
cmp
je
or
push
add
mov
and
mov
add
mov
dec
pop
ljmp
gs
xchg
add
jne
mov
pop
loope
lea
or
pop
push
sub
xor
pop
push
roll
adc
cmp
mov
ret
or
pop
mov
cmp
jnp
adc
adcb
stc
add
movsl
mov
mov
test
hlt
notl
pop
xor
test
mov
sub
subl
jp
or
dec
sarb
rolb
or
or
inc
xchg
mov
lock
sub
jge
jne
pop
pop
mov
clc
and
sbb
pop
push
add
in
adc
int3
adc
pop
xor
jl
push
and
mov
cmpl
sbb
shll
adc
add
pop
pop
daa
pop
dec
mov
or
insb
jne
or
sbb
adc
inc
xor
fimuls
outsb
icebp
jmp
rolb
mov
add
sub
bound
int
xor
inc
adc
rclb
movsb
loopne
stc
imul
repz
roll
adc
rolb
push
or
fcoml
ljmp
xchg
shlb
jne
mov
movb
mov
addl
xor
add
incl
cmp
ss
cmpsl
jne
push
cld
leave
ljmp
inc
aaa
xorb
adc
dec
or
sbb
test
ret
cmp
xchg
cmp
mov
xor
cmp
icebp
xor
push
push
mov
push
shrb
ja
or
xchg
js
repnz
push
pop
shl
adcl
dec
pop
jb
outsl
mov
mov
or
adc
inc
jl
jbe
orb
push
jmp
and
push
add
jno
pop
push
cmpb
jne
jno
jb
lods
and
out
pop
and
jb
sbb
shrl
jno
xchg
fldenv
clc
add
add
ret
cltd
cmp
fwait
mov
aas
add
test
adc
rolb
dec
cli
xchg
movsb
push
inc
inc
or
mov
mov
xchg
test
sbb
popa
add
nop
loope
int
adc
int
popf
lods
mov
in
inc
cmp
and
sub
inc
sahf
jb
lds
cs
pop
repnz
inc
push
push
les
in
pop
les
push
addb
rcll
xchg
test
xchg
in
mov
add
sbb
cmp
jnp
dec
or
pop
and
jne
mov
movsl
dec
and
gs
je
je
adc
xor
pop
jae
ret
jb
pusha
ljmp
or
push
insb
push
push
xchg
sbb
mov
shlb
clc
mov
pop
or
subl
push
cmp
xchg
xchg
xor
sub
leave
lock
push
fildll
or
or
add
fldcw
add
pop
lock
add
insl
arpl
mov
sub
adc
add
xlat
mov
sti
fcmovnu
lret
js
or
jl
or
or
adcl
push
rcl
in
rclb
pop
adcb
mov
pop
dec
xchg
push
xchg
dec
nop
mov
cli
xchg
sub
call
inc
mov
fstl
inc
push
sub
ja
mov
and
push
or
sbb
imul
xor
sbb
cltd
or
mov
jge
insl
test
leave
test
rol
lret
xchg
inc
adc
cmp
call
vmovss
std
jae
hlt
xor
sbb
lods
jg
gs
xor
cmp
jb
gs
xor
jmp
push
dec
pushl
jg
dec
test
shll
push
sbb
dec
sbb
test
loopne
xchg
mov
add
aaa
mov
adc
jg
pop
add
xchg
xchg
imul
jle
or
mov
mov
adc
sbb
cwtl
pop
dec
jne
mov
cli
mov
pop
cmp
push
mov
xor
jne
cwtl
push
cmp
bts
inc
dec
or
cmpb
add
xor
push
sbb
inc
pop
push
ret
adc
and
mov
add
outsb
and
les
push
cmp
ret
adc
xor
dec
fsubs
add
dec
and
adc
je
cs
and
dec
nop
mov
out
loope
dec
je
sti
fnstenv
push
orl
inc
cltd
push
sub
sbb
mov
repnz
add
lock
fcoms
ret
add
popf
cmp
sbb
sti
mov
cmpsb
shll
jmp
inc
stc
cmp
mov
out
mov
daa
jne
xor
add
or
and
sbb
aad
jle
push
dec
add
pop
ret
xchg
xchg
jmp
xor
or
in
and
aam
mov
xor
mov
pop
mov
inc
test
shlb
call
cmc
loop
lods
xchg
sbb
add
jg
push
jmp
sbb
in
js
push
dec
ds
dec
aaa
add
imul
mov
and
pop
xchg
mov
imul
push
dec
rolb
or
jne
mov
inc
jno
mov
cmpsb
mov
add
out
adcl
or
cs
lcall
mov
nop
or
cmc
dec
sub
push
mov
test
into
lds
mov
outsb
push
mov
or
pop
cmp
mov
cmpsl
fadd
jmp
mov
addr16
das
adc
lahf
xchg
imul
xchg
inc
xor
mov
mov
sub
and
lods
cmp
xor
bnd
push
push
sbb
in
movl
add
sbb
arpl
jo
orb
divb
xor
pop
loope
sbb
clc
and
clc
cmpsb
or
sub
jbe
xabort
or
imul
lods
mov
movsb
fadds
mov
in
lock
jmp
sbbb
addb
pop
mov
add
push
loope
sbb
adc
pop
inc
cs
dec
jb
popf
add
out
test
xor
adc
fsubr
mov
or
push
or
xchg
test
jne
mov
add
dec
jmp
xor
daa
aam
add
pop
shll
or
dec
xor
test
in
mov
mov
scas
insb
pop
repnz
adc
add
lods
int
xchg
xor
xor
iret
xor
adc
mov
aam
add
in
mov
add
popa
jns
in
in
add
jmp
aaa
add
add
inc
rolb
fsubs
in
enter
es
jo
aas
or
xor
xor
pop
or
std
ret
push
xor
ja
or
pop
cmp
cmpsl
mov
inc
adc
ss
aaa
cmc
cmp
mov
jno
inc
adc
mov
xchg
mov
jle
fisttps
dec
pusha
sti
mov
sarl
js
mov
mov
inc
ss
push
inc
add
loop
sub
xorb
mov
int3
cmp
inc
inc
call
inc
leave
dec
popf
dec
mov
mov
adc
or
push
out
xor
jnp
mov
jns
pusha
cmp
and
cmpsb
push
add
push
add
ret
outsl
aaa
and
nop
cmc
jno
mov
dec
dec
mov
lods
loopne
call
jne
mov
sub
and
sbb
movsb
xor
ret
xchg
outsl
add
lods
mov
pop
add
adc
inc
xchg
mov
xchg
mov
pop
lock
jmp
rorb
stos
adc
adc
or
mov
outsb
inc
add
ret
adc
rolb
mov
sbb
ss
xchg
mov
mov
xor
and
dec
orb
inc
or
jo
bnd
scas
dec
sti
or
outsb
jbe
or
lock
popf
sub
in
sub
sbb
int
movsb
pop
imul
mov
mov
and
adc
inc
jns
adc
jo
cmp
fwait
xchg
test
mov
inc
or
mov
cltd
push
dec
sub
subl
pop
scas
and
adc
push
out
arpl
ret
adc
loope
ja
cmpsb
rclb
clc
add
inc
mov
dec
jecxz
mov
lahf
jo
mov
xchg
cmp
ror
cmp
push
out
inc
add
je
cld
xchg
daa
lock
mov
aad
test
inc
mov
inc
jmp
pop
mov
shr
sub
inc
jne
mov
mov
mov
movsb
adcl
and
push
les
mov
pop
lcall
or
sbb
adc
xor
hlt
jmp
lea
int3
mov
data16
lret
inc
push
adc
cld
cwtl
sub
xchg
or
js
pop
sub
pusha
sbb
add
mov
fcomps
and
js
dec
mov
mov
and
add
adc
jbe
mov
js
dec
clc
gs
push
xor
jmp
popa
loope
jl
and
mov
rep
and
adc
movsl
adc
leave
push
gs
or
shlb
pop
jmp
daa
cmp
add
or
adc
out
fwait
xchg
xchg
mov
adc
hlt
mov
push
pop
cmp
jle
push
sub
out
jae
cmp
pop
mov
fidivs
or
adc
jbe
push
flds
push
dec
shlb
and
cs
sbb
dec
jg
dec
pop
inc
rorb
or
shr
rep
adc
sahf
xchg
leave
data16
movsl
sbb
mov
cmp
jnp
cmp
jb
lea
lahf
jmp
pop
add
cmp
mov
pop
scas
stos
pop
jg
sub
mov
sar
push
sbb
sbb
sbb
xor
sti
loopne
outsl
testb
loop
dec
andl
or
jl
call
imul
nop
push
rorl
mov
add
adc
int3
test
divl
add
cmpsl
hlt
insl
inc
daa
movl
rcrb
add
adc
lds
add
or
add
inc
cwtl
int
outsl
and
mov
hlt
push
mov
push
insb
or
add
jo
sub
add
loopne
cmp
insl
loopne
roll
fadd
pop
add
and
adc
push
lcall
xchg
scas
sbb
jo
lret
or
andl
mov
cmp
sbb
mov
add
aas
adc
sbb
inc
add
inc
pop
mov
pusha
cmp
cmpsl
aam
sbb
sub
je
jb
cmp
sbb
repz
insb
jle
inc
mov
jl
add
jmp
sbb
dec
mov
sbb
xchg
add
rolb
jecxz
in
push
push
pop
ret
or
cmp
call
push
lds
add
aas
pop
cmp
stos
lock
push
jmp
loop
in
mov
pop
sbb
add
test
sti
mov
ja
inc
jmp
push
jl
andl
jnp
xchg
movsb
insl
push
dec
aam
clc
imull
mov
dec
pop
and
jno
aas
loop
add
jo
shrb
adc
insb
pop
add
inc
enter
aam
aad
xorb
sub
insb
sbb
xchg
jb
in
sbb
loopne
lret
aam
dec
iret
or
ret
mov
mov
pop
repnz
je,pt
pop
sub
das
sar
xor
in
fidivs
cld
mov
fidivl
push
push
mov
sbb
xchg
cwtl
outsb
pusha
movsl
enter
jge
ljmp
ss
ljmp
or
mov
sbb
sbb
adc
pop
push
je
inc
jg
and
test
push
sub
xor
out
inc
lods
sarb
xor
nop
mov
adc
clc
push
push
adc
stc
andb
sub
mov
mov
or
sub
loopne
mov
dec
push
jmp
cltd
add
add
inc
push
je
push
add
sbb
lret
push
addr16
nop/reserved
ret
jmp
das
or
push
movl
jno
hlt
mov
outsb
lea
and
pop
mov
sub
cli
pop
insl
ljmp
add
add
or
mov
ret
icebp
cmp
ljmp
mov
add
dec
pop
or
push
lock
insl
lock
or
jo
jnp
sbb
jp
pop
jno
add
movsb
mov
add
sub
inc
jo
ljmp
add
mov
inc
lea
add
mov
pop
add
push
adcb
pop
ret
popa
imul
push
mov
push
dec
outsb
sarl
sub
sub
lock
add
lods
xor
pop
mov
cmpsb
ja
shll
add
dec
call
push
mov
mov
mov
sarb
lret
jne
push
ss
lret
sub
cmp
in
fcomi
jmp
pusha
jle
push
xor
pop
div
add
jb
lea
sbb
cmp
sbb
or
add
lods
push
dec
push
adc
xchg
xor
inc
inc
les
xor
fidivrs
inc
inc
jmp
add
xorl
push
inc
cli
shll
fiaddl
call
cmp
sbb
adc
xchg
data16
add
jo
and
cmp
pop
orl
gs
sbbl
jne
or
cmp
fldenv
dec
xorb
mov
pop
xor
shrl
ret
jo
sbb
adc
fbstp
sbb
sub
jne
bound
shll
adcl
cmp
insl
add
lret
fisubrl
clc
dec
inc
loop
sbb
addr16
shrb
push
pushf
sub
pop
fsubrl
cmp
out
jnp
push
or
add
sub
pop
jno
or
scas
pop
and
testb
bound
sbbb
mov
pop
call
pushf
add
and
clc
jg
aad
jg
fs
test
movd
movaps
out
push
enter
shlb
jle
xor
incb
aaa
das
cli
rcl
lret
je
cmp
stos
xchg
xchg
repz
or
jg
pop
jg
insl
dec
mov
xchg
ret
adc
jnp
mov
jno
test
aam
ret
or
ja
movsb
dec
bound
je
pop
in
out
addb
repnz
roll
lahf
push
dec
sti
jbe
and
mov
sti
ficompl
int
add
sbb
mov
inc
pop
sti
add
mov
push
sub
mov
cli
jl
ja
lret
or
jne
dec
dec
sub
in
push
pop
int3
xor
mov
jmp
pcmpeqd
test
mov
nop
inc
dec
lret
scas
mov
shlb
adc
ds
mov
adc
inc
mov
xor
pop
mov
add
add
sub
jo
mov
addr16
jle
out
and
sbb
cltd
lock
mov
sbb
cmp
jb
pushf
pop
addr16
sbb
scas
xchg
pushf
adc
cmp
sbb
and
xor
push
enter
mov
or
pusha
js
cmp
nop
adc
inc
jae
mov
jp
leave
sbb
mov
in
in
pop
ljmp
and
sbb
xchg
jne
pop
inc
pop
pop
cmp
inc
cs
push
pop
pop
add
pop
out
testb
xchg
add
jne
orl
push
rorl
lahf
mov
push
or
pop
add
hlt
push
lock
dec
mulb
mov
enter
sub
mov
sbb
adc
inc
cmp
rorl
add
je
js
sub
push
cmp
int3
sbb
push
fs
ja
imul
add
mov
push
ja
jge
popa
pop
xchg
inc
sub
sbb
sub
jb
or
and
xchg
enter
divb
pop
sub
add
orl
data16
aas
data16
jbe
mov
add
jbe
sbb
movsl
sti
mov
ds
add
je
jae
push
dec
rcrb
add
outsb
test
inc
insb
pop
imul
inc
mov
jne
mov
addl
shr
arpl
jae
pop
pop
sub
sub
mov
and
rolb
shrl
pop
or
shlb
push
mov
adc
pop
xor
hlt
push
imul
mov
pop
lods
pop
loope
aam
sbb
adc
dec
jnp
mov
dec
pusha
dec
les
cmp
enter
sub
enter
xchg
jg
jb
sti
mov
mov
adc
lods
sbb
inc
ds
xor
jno
add
push
test
inc
cmp
jne
inc
cmpb
out
addb
nop
adc
ja
les
inc
and
adc
cltd
sbb
or
or
mov
pop
mov
mov
daa
pop
fcompl
flds
inc
inc
imul
push
mov
xchg
mov
outsl
cmp
or
jo
les
xor
or
cmp
xor
dec
mov
mov
cmp
leave
es
loope
addb
or
cmp
shr
sub
arpl
push
lret
jne
inc
mov
lds
jg
push
loope
inc
roll
sub
pop
adc
pop
call
scas
xor
or
inc
sub
jecxz
mov
sbb
loop
movhps
cli
inc
pop
jmp
imul
es
mov
cmp
sbb
loopne
pop
dec
adc
fidivs
sub
cli
mov
push
pop
lds
fiadds
push
mov
rcrb
rorb
jp
add
or
push
inc
adc
mov
addr16
push
daa
arpl
loope
inc
aas
sub
xor
lcall
mov
add
mov
dec
sbb
xchg
cmp
push
pop
sbb
rolb
jne
enter
shlb
cmp
shrb
cmp
or
sub
jmp
sub
or
xchg
or
add
pop
mov
lea
and
mov
pushl
and
inc
scas
dec
or
push
test
sbb
pop
sbb
sbb
lcall
pop
scas
lods
ss
loop
ljmp
mov
push
jbe
sub
sub
bound
adc
mov
fistps
add
lea
cmp
fimuls
outsb
push
lret
sub
cmp
jne
fnstsw
testb
pop
or
add
push
sbb
hlt
sbb
cltd
rorb
xchg
add
pop
je
cmp
scas
in
add
or
dec
into
add
mov
mov
cs
sbb
or
xor
loope
dec
pop
add
adc
pop
imul
jp
mov
push
mov
fnstcw
add
sbb
cmpl
loopne
jbe
cs
adc
cmpsl
sub
sub
dec
jl
dec
cmpsb
push
push
adc
push
pop
and
adc
xor
mov
xor
ja
pop
iret
je
and
jl
outsl
divb
add
or
mov
ret
mov
pop
pop
push
lock
push
inc
mov
inc
les
add
mov
inc
shlb
testl
jne
imul
xorb
sbb
cmpsl
mov
add
xchg
scas
inc
loopne
rcrb
aas
pop
lds
add
popl
test
pop
in
jp
cmovns
mov
xor
xor
repz
mov
or
add
jg
push
jo
pushf
sbb
aaa
push
add
mov
fisttpll
push
sub
jmp
push
sub
add
sub
fdivs
mov
cmp
outsl
js
or
pop
mov
sub
in
xorl
gs
mov
pop
sbb
add
cmpl
shl
lock
jl
popa
jae
push
movsb
sub
mov
ja
pop
jbe
lea
push
int3
outsl
adc
sbb
jp
add
leave
mov
shl
push
sbb
cld
jb
out
and
push
clc
jbe
add
insb
test
out
sbb
movups
and
add
jmp
ficompl
adc
jmp
test
jne
test
push
rorl
rolb
push
ja
mov
clc
test
mov
xchg
je
lcall
pushf
pop
shll
cltd
lret
pop
or
cmp
lods
jmp
cs
adc
outsb
imul
add
sbb
sub
add
xor
pusha
mov
cmc
xor
addb
and
or
js
hlt
cmp
ror
jb
push
loopne
sub
dec
add
roll
adc
sub
sbb
rclb
inc
or
dec
mov
sub
rolb
mov
test
shl
ret
adc
sub
lcall
les
dec
sub
mov
out
dec
ret
out
pop
xor
out
sbb
repz
das
ret
jnp
push
shlb
adc
dec
adc
cmp
sbb
rol
sbb
mov
pop
jecxz
inc
repnz
jg
movsl
xchg
add
dec
jne
mov
out
jmp
jo
cs
and
es
pop
add
jne
mov
inc
or
sbbb
push
clc
dec
pop
xor
add
xor
jge
shrb
xchg
pop
jno
stos
add
insb
xor
push
shl
jae
fs
push
outsb
into
adc
outsl
movb
cmp
push
cld
jne
mov
push
fdivrl
aaa
es
jne
pop
fmul
sar
adc
or
and
jb
mov
aas
scas
test
adc
jmp
std
fs
scas
loop
xor
cld
cld
jmp
fcmovnb
lcall
scas
adc
in
adc
adc
inc
inc
inc
dec
jl
orb
push
mov
or
repnz
sub
and
mov
mov
push
hlt
scas
inc
mov
dec
mov
fsubrl
cwtl
mov
shl
dec
and
sub
add
dec
lds
inc
dec
outsl
and
mov
or
add
inc
jo
add
sub
add
adc
pushf
jbe
std
xor
or
adc
nop
or
cltd
and
and
pop
inc
adc
sysexit
pop
xlat
sbb
mov
and
test
adc
shlb
pop
scas
jg
or
rolb
pop
jge
add
dec
aaa
pop
push
repz
mov
pop
add
xlat
xchg
inc
xchg
sub
iret
je
cmp
or
cmp
jg
add
mov
push
dec
popa
test
mov
push
mov
mov
dec
lahf
call
push
push
jp
jbe
xor
js
rorb
ja
jae
out
hlt
test
ja
dec
movb
push
inc
inc
ja
jb
lea
shlb
push
jne
mov
and
or
adc
adc
orb
add
arpl
add
mov
cmp
push
xchg
cmp
mov
mov
cmp
ss
sub
mov
mov
add
shl
mov
push
in
or
loop
andl
dec
aam
inc
test
inc
lods
dec
aam
mov
les
or
inc
xchg
es
cmp
mov
ljmp
cmpsb
push
xchg
or
jp
or
mov
fisttps
sub
cmp
lea
add
not
and
sub
mov
add
add
or
sbb
imul
lret
fsub
xorb
pop
push
mov
push
jo
inc
adc
add
dec
ja
int
fs
jne
pop
mov
push
add
rcrl
inc
or
sti
aas
repnz
stc
and
mov
inc
je
mov
mov
neg
mov
sbb
or
add
popa
lock
push
jmp
or
mov
inc
inc
push
add
loope
sbb
scas
mov
clc
aaa
rorl
mov
inc
cmp
jb
orb
test
jae
in
or
sbb
add
or
sbb
pop
ret
lea
xchg
outsb
int3
push
add
fsubs
out
add
ret
sbb
adc
adc
add
iret
add
push
sub
or
ret
int
test
adc
mov
mov
xchg
negl
add
xor
add
repnz
mov
stos
jo
and
sbb
or
and
jne
inc
xchg
push
or
ret
into
ss
xchg
hlt
fistpll
test
je
push
and
sti
jns
adc
xchg
pop
addr16
sbb
inc
outsb
or
cld
test
mov
dec
sbb
pop
push
adc
mov
xchg
lock
sub
cmp
ljmp
add
jg
rcrb
sbb
pop
add
cld
cmc
pop
test
rolb
stos
cmc
add
call
sub
pop
inc
jmp
cmp
sbbb
jnp
add
add
sub
fcom
lcall
cmpsb
pop
inc
adc
cmp
push
push
xor
adc
mov
sub
je
cmp
and
repz
outsb
add
jne
pop
fmuls
mov
mov
js
adc
mov
xchg
sbb
xor
shlb
dec
mov
and
je
lret
push
or
mov
mov
or
push
jmp
or
sub
pop
movsl
sub
xor
push
add
mov
orb
mov
shlb
scas
inc
xchg
out
push
rclb
shl
cld
or
std
mov
xchg
adc
sub
fstpl
jbe
sbb
xor
lods
sub
cmp
faddl
push
mov
mov
xor
pop
insb
adc
mov
inc
or
scas
xchg
xor
jle
jne
mov
out
dec
jg
mov
mov
inc
mov
dec
jne
fs
add
lock
inc
push
pop
and
add
ds
or
js
pop
ds
sub
sub
shlb
push
push
cltd
push
inc
lcall
or
cmp
cwtl
sarl
adc
aaa
ficomps
inc
inc
daa
dec
or
add
jmp
xlat
sub
pop
insb
sbb
xor
xchg
nop
add
lods
xchg
sahf
sub
stos
bound
push
xchg
mov
xor
imul
add
xorb
inc
pusha
sti
push
adc
jb
lea
push
adc
fsubrs
js
pop
dec
test
mov
sbbb
bound
pop
cmp
call
adc
mov
mov
insb
in
es
mov
cwtl
push
pushf
mov
adc
adc
push
jne
or
add
cmpsl
jo
push
aaa
or
in
fistl
dec
imul
sbbb
cmpb
pusha
int3
movsl
push
mov
in
stos
in
nop
xchg
xchg
leave
popf
adc
or
and
jmp
mov
data16
repnz
mov
test
mov
sub
add
jmp
mov
or
push
xorl
or
sub
fs
jle
xor
inc
inc
nop
jmp
inc
sub
add
scas
add
fdiv
out
sub
mov
mov
add
incl
dec
add
mov
mov
adc
insb
dec
xchg
or
adc
push
test
daa
frstor
lock
push
je
rcrb
cmp
adc
adc
sbb
cmpsb
adc
mov
push
into
and
test
xor
pop
shrb
or
dec
jle
shrb
jo
pop
sbb
jne
ja
lar
mov
or
dec
inc
mov
jb
dec
dec
jge
lods
and
leave
mov
jb
out
push
mov
mov
sub
in
xchg
pop
pop
popa
inc
adc
adc
or
xor
jbe
mov
loopne
push
sub
insb
push
scas
adc
push
cmp
pop
addl
call
jne
pop
xor
es
jbe
mov
dec
and
inc
decl
mov
ficoms
add
in
into
punpcklwd
jp
push
mov
pusha
adc
je
loopne
rcll
nop
mov
add
adc
fwait
mov
xchg
mov
outsb
pop
mov
pop
push
pushf
mov
mov
and
sbb
mov
rorb
dec
mov
xchg
jle
aam
add
adc
and
push
in
sbb
jns
idivl
repnz
movsl
dec
insb
in
add
or
and
push
mulb
push
and
xchg
pop
or
test
test
les
js
stos
cmp
addl
push
mov
push
in
mov
mov
or
adc
dec
or
ja
cmp
adc
xor
push
jo
adcb
faddl
lcall
pop
inc
mov
faddl
notl
pop
add
clc
adc
fs
or
jmp
daa
adc
inc
je
xor
or
mov
or
jbe
call
movsl
jmp
dec
je
add
or
outsl
sub
std
pop
inc
pop
push
or
push
in
lods
sub
jmp
sub
push
sub
push
popa
es
add
push
xchg
data16
jo
cmp
test
adc
push
jbe
sub
add
imul
fimull
push
push
addr16
fistl
fmuls
add
dec
add
push
xchg
jo
inc
jne
pop
ds
popa
inc
mov
repnz
rcll
xchg
push
je
mov
in
sbb
and
test
movsb
dec
xchg
cmovp
pop
jns
je
aaa
and
pusha
mov
jo
daa
push
mov
dec
pop
push
push
add
clc
loopne
dec
jmp
xchg
jbe
leave
add
push
push
push
shll
jmp
or
mov
inc
xchg
inc
das
push
jmp
sub
mov
dec
mov
pop
push
pop
mov
hlt
add
loopne
faddl
fsubrs
sbb
stos
orl
xor
scas
jns
jmp
cmp
jae
mov
mov
push
mov
inc
loope
or
add
push
add
inc
ret
ss
loop
pop
or
movsb
decb
sub
dec
sbb
inc
jmp
push
push
adc
test
lret
cmp
fsubrl
int
pop
lcall
sbb
dec
and
sbb
shl
jg
mov
mov
pop
jle
jo
cwtl
dec
clc
aaa
push
pusha
ss
in
dec
xchg
cli
or
lea
pop
jle
mov
dec
dec
inc
sbb
jns
jae
addr16
arpl
fmull
push
pop
int
add
decl
das
dec
pushl
cmp
sub
push
pop
adc
js
mov
dec
cmpsb
hlt
pcmpgtb
push
pop
sub
ficoml
mov
jmp
adc
push
push
lcall
les
jnp
jo
subb
inc
movb
cmp
push
push
add
fidivrl
push
inc
lods
movsl
sub
cmp
clc
pop
dec
in
cmp
push
and
imul
sarl
inc
xchg
sarb
and
loope
data16
push
inc
cmp
inc
dec
in
aad
fsts
stc
xchg
clc
push
mov
stc
mov
push
xor
mov
cmc
mov
notb
imul
add
mov
jge
insl
cs
in
inc
sub
pop
adc
lods
mov
adc
arpl
cs
add
push
or
les
call
mov
jmp
dec
or
mov
cltd
pop
inc
mov
sbb
mov
orl
cmp
clc
sbb
shrb
xlat
je
xor
hlt
stos
outsl
add
jb
insl
push
pop
jne
or
rsqrtps
ficompl
push
inc
fcmovne
int
push
mov
in
aas
in
push
add
push
push
add
aam
fisttpll
lods
movb
js
rcl
bound
mov
lret
inc
dec
push
xorb
loopne
fiaddl
stos
int
sahf
adc
ret
mov
mov
inc
xor
rclb
mov
adc
call
and
mov
icebp
push
aaa
jb
orl
les
or
enter
cmp
or
sub
mov
cltd
push
ds
hlt
fs
mov
adc
xchg
mov
orl
sbb
xchg
xchg
cli
ja
icebp
adc
movsb
adc
aam
pop
lret
movsb
sbb
sbb
push
mov
xorb
rcrl
lea
dec
fsubs
push
jo
or
xor
in
dec
mov
dec
xor
fidivl
loope
pop
neg
scas
mulps
or
adcb
test
lret
push
pop
jp
rol
stc
and
inc
insb
jnp
sbb
cld
jmp
adcb
loopne
mov
loope
pop
add
push
in
push
xchg
sbb
test
repnz
in
jle
mov
fwait
or
test
cmpb
cmp
or
call
fisubrl
cld
hlt
push
lock
test
sbb
adc
lea
dec
jmp
pop
jae
and
or
dec
in
add
jl
cmp
stc
xlat
repnz
jle
sbb
or
lock
add
push
mov
clc
and
adc
ja
mov
add
les
xor
into
je
fstpt
pop
jne
mov
jno
addr16
dec
jns
mov
adc
enter
add
stos
ret
mov
pop
dec
cltd
sbb
push
add
out
or
leave
aad
and
and
dec
lret
mov
mov
mov
ds
jae
aad
mov
push
cmpsb
fcoms
push
inc
push
push
leave
dec
xor
xchg
adc
pop
scas
push
mov
lea
add
cmp
insb
clc
jp
cmp
jb
sbb
sbb
pop
mov
out
inc
dec
pop
pop
jne
mov
ret
push
jge
roll
lods
or
rep
jmp
mov
push
jb
xor
enter
pop
cmp
idivl
push
hlt
sbb
test
mov
aam
adc
push
pop
xor
mov
or
lods
adc
push
repnz
dec
add
and
cmpsb
nop
inc
add
xchg
mov
cmp
mov
cmp
xor
and
stc
aas
iret
sbb
mov
mov
call
call
hlt
jo
out
hlt
clc
clc
cld
add
movsl
cmpsb
and
add
popa
call
jmp
test
jns
push
fcoml
inc
pop
sti
and
and
daa
mov
xor
jl
cld
pop
and
std
mov
jl
cld
out
cld
popa
neg
adc
lods
xchg
xchg
mov
sub
popf
divl
xor
pop
nop
adc
xor
pop
gs
mov
mov
add
ret
mov
inc
push
mov
sub
push
add
test
mov
push
jb
bound
cmp
repz
ror
fsub
cmp
repz
popa
aaa
sbb
sbb
repz
repz
adc
or
repz
or
or
repz
addr16
inc
or
fiadds
and
push
movsb
loop
bound
push
add
rclb
pop
pop
inc
inc
or
ja
mov
mov
mov
xor
and
leave
and
cmp
orl
lret
inc
je
mov
daa
sarl
jmp
inc
jne
xchg
rorl
ficompl
mov
sbb
rol
cli
add
mov
pop
mov
or
xchg
clc
jmp
mov
and
jne
push
sbb
push
adc
sar
push
loopne
data16
push
mov
add
add
jbe
in
jne
out
dec
jbe
adc
adc
je
xchg
mov
adc
xor
push
gs
pop
iret
sbb
push
stos
and
hlt
fisttpll
jmp
negb
inc
adc
je
movsl
leave
push
test
rcrl
shr
push
fstl
sub
outsb
or
push
sub
push
inc
sbb
or
enter
ds
cmp
add
lock
out
shlb
fs
mov
xorb
adc
or
lock
icebp
sub
push
outsl
fcomps
sti
push
dec
jmp
lods
push
shrl
mov
xchg
mov
ljmp
cltd
adc
push
std
call
cmp
out
pop
push
fmul
adc
shlb
hlt
add
arpl
sub
push
cmpb
lock
sub
call
mov
or
sub
rorb
mov
xchg
outsb
jp
pop
std
movb
jmp
sbb
cmp
std
add
inc
mov
adc
inc
push
sub
cmpsb
stos
lods
rolb
clc
mov
subl
shll
lock
adc
push
es
adc
dec
pop
outsl
jecxz
cmp
mov
xchg
push
sbb
pop
mov
cmp
xchg
push
rcrl
nop
dec
add
cmp
xor
add
mov
or
testb
jmp
or
mov
or
fsincos
add
je
rep
mov
dec
ljmp
push
cmp
add
lcall
adc
jo
xchg
xchg
fistps
cwtl
or
add
fs
popl
sbb
lods
test
add
mov
mov
mov
movl
cmp
sarb
dec
pushf
js
sarb
insb
jecxz
ret
je
out
out
mov
fdivl
in
add
dec
mov
xchg
out
not
fcomps
shrb
or
mov
adc
js
mov
xor
and
or
xor
xlat
push
inc
loopne
pushf
lods
push
sub
xchg
sti
xor
mov
mov
testb
imul
xorl
andl
sub
sub
sarb
cmp
clc
or
ret
jns
jns
les
cmpsl
adc
or
push
scas
cmp
aaa
dec
cld
xor
test
das
xor
and
in
xchg
inc
xor
jno
insl
push
pusha
in
gs
cld
mov
jmp
and
mov
insb
mov
add
push
sub
or
lods
lahf
add
pop
push
dec
and
sbbb
add
jns
fcoml
push
jg
gs
ret
pop
jb
test
daa
or
dec
or
fwait
pop
pop
xor
sbb
jecxz
fwait
add
cld
push
test
call
and
frstor
push
mov
adc
jbe
push
pop
push
sbb
cmp
or
outsl
enter
or
inc
into
mov
add
test
frstor
pop
divl
ljmp
ds
dec
mov
dec
in
adcb
enter
push
das
pop
fmull
dec
sub
add
inc
js
loopne
mov
inc
sbb
ror
insl
xchg
inc
ret
add
rcrb
gs
inc
das
and
mov
and
bound
into
fnsave
or
loope
mov
mov
fadds
or
test
mov
popa
dec
mov
pop
push
imul
in
popf
mov
jnp
pop
cs
adc
jbe
jne
int
das
dec
call
add
xchg
lods
ja
mov
pop
rolb
leave
xchg
call
iret
lret
loopne
cmp
xor
pop
stos
mov
repz
xor
sti
jo
lea
test
jecxz
push
ja
xor
or
stos
push
mov
and
or
mov
shll
push
sar
pop
lods
movsb
in
xorb
es
xchg
add
jb
jne
lea
call
rcr
jnp
pop
cs
les
lret
stos
or
je
or
push
test
sub
fldpi
insb
aam
into
dec
pushf
pop
or
push
lret
in
add
orl
sbb
test
cs
sti
sbb
or
mov
adc
loopne
js
push
mov
mov
sub
imul
or
xor
mov
mov
fsubrs
sbb
hlt
hlt
stc
add
in
jo
and
sub
aad
test
push
ds
jle
in
sbb
sub
adc
xlat
in
out
and
js
add
add
adc
sbb
xor
movsl
mov
incl
insb
cmp
sbb
imul
lcall
andl
sbb
call
add
dec
xchg
add
add
into
pop
xor
sbb
jle
inc
je
pop
jge
cmpb
rolb
and
movsb
nop
mov
pop
sub
adc
ret
xor
adc
out
jge
push
arpl
testl
pusha
stc
add
aaa
jbe
es
outsb
das
mov
add
cmp
testb
ja
push
loopne
xchg
sti
inc
push
or
test
sub
in
mov
sbbb
add
ja
adc
push
push
addr16
and
push
insl
cmp
jl
xor
xor
xor
lods
ret
pushf
sub
shl
mov
mov
shrl
ss
mov
adc
or
xchg
int3
push
sar
in
or
in
cmp
test
addr16
fistpll
pop
out
mov
mov
inc
lods
xlat
mov
dec
pop
sub
pop
dec
loope
cli
sub
mov
xor
clc
call
lea
jmp
jns
je
lahf
xor
pop
js
push
imul
outsb
jo
push
mov
gs
add
addr16
xchg
pusha
je
mov
or
sub
cmpsb
ss
ret
fsubrs
je
xor
dec
aaa
cmp
sbb
imul
les
in
push
xor
mov
daa
sub
gs
cmpsl
fisttps
les
test
stos
mov
mov
jp
mov
inc
jne
movsb
addr16
mov
jno
cli
jge
pop
cmp
jle
popa
mov
mov
and
pop
push
push
andl
and
rcll
adc
mov
push
fimuls
shr
push
push
insb
inc
lea
sbb
adc
cmp
mov
inc
cld
adc
sbb
sbb
mull
push
xchg
sub
inc
sbb
in
inc
pop
inc
xor
mov
stos
cmp
and
sub
popf
push
push
inc
scas
data16
add
adc
sbb
inc
rorl
sub
js
and
inc
stos
pop
cltd
push
xor
mov
shll
pusha
cld
or
mov
jmp
mov
add
mov
arpl
dec
adc
dec
xchg
lock
push
into
pop
hlt
or
bound
inc
mov
rcll
ret
xchg
dec
adc
pop
mov
adc
mov
cltd
rorb
rcrl
jbe
add
pop
sub
pop
jl
inc
and
sub
mov
mov
lock
sbb
or
sbb
sbb
clc
mov
mov
or
test
inc
mov
sti
adc
or
push
inc
inc
stc
clc
xchg
add
cltd
push
jecxz
in
add
jbe
xor
dec
repnz
sahf
mov
mov
mov
inc
push
dec
sub
imul
cmp
addb
cmp
lock
shlb
mov
inc
jmp
nop
mov
rolb
jmp
dec
clc
andb
or
repnz
sar
ret
cmp
pop
xchg
jecxz
push
sub
test
and
add
sub
jns
sub
and
push
cmp
and
decl
pusha
inc
fdivrs
mov
in
jle
cmp
aas
dec
sub
std
mov
jg
loopne
sbb
lock
leave
add
and
pop
test
cmp
adc
xor
push
inc
aam
adc
cmp
push
sub
aam
rclw
pushf
jmp
dec
adc
das
lret
pushf
ljmp
loope
or
mov
daa
sub
sti
aam
push
pop
int
cmp
cmpsb
loopne
mov
out
or
sbb
arpl
addb
sub
add
adc
adc
pop
mov
mov
dec
sbb
pop
mov
pop
pop
adc
mov
fst
mov
mov
aaa
lahf
pop
loopne
sub
testl
inc
cmpsl
stc
cmp
add
imul
lds
insb
push
add
jmp
xchg
dec
and
push
pushl
lcall
jbe
push
inc
cs
ja
dec
jae
dec
ja
ja
xor
shll
ja
ja
imul
ja
add
iret
in
cmp
js
enter
js
js
push
enter
lcall
js
js
add
xor
push
jns
jns
cmpsl
or
adc
imul
mov
hlt
fwait
into
mov
mov
inc
inc
push
cmpsb
loopne
push
lea
pop
adc
xlat
pop
xlat
imul
adc
cmp
mov
loope
ficomps
jmp
ss
mov
dec
or
sub
mov
in
loop
pop
dec
mov
adc
or
push
pop
dec
mov
xor
call
pushf
in
mov
cmpl
sub
in
jle
out
loopne
or
and
fsub
flds
mov
mov
mov
cmp
movb
sti
ds
mov
or
nop
in
add
xchg
xchg
cmp
js
xchg
push
jb
into
js
mov
cmp
sub
xchg
leave
pop
add
adc
and
dec
rorb
pop
xor
jno
jo
aam
fiaddl
jo
fisubl
fwait
rcrb
int3
push
jo
jno
sbb
sub
shlb
leave
and
lods
dec
aam
fcomp
sub
push
add
test
mov
push
in
sbb
pushl
insl
and
divl
test
jp
add
push
mov
mov
stos
mov
stos
dec
call
push
sbbl
or
adc
adc
jns
outsb
adc
jmp
inc
loopne
loopne
loopne
or
loopne
imul
sbb
gs
jmp
lret
sbb
imul
or
jns
movsb
dec
inc
cmpsb
push
cmp
enter
sbb
rcrb
test
sbb
or
insb
add
mov
sbb
or
or
out
inc
xchg
xor
jb
fcompl
and
nop
ret
mov
adc
scas
push
divb
push
or
sbb
cmpsb
push
insb
add
add
test
push
jne
cmp
testb
dec
ss
mov
mov
add
mov
mov
cmpb
mov
sti
adc
lahf
adc
mov
push
outsl
dec
add
dec
ss
push
aad
pop
fdivl
mov
jbe
sbb
mov
sub
enter
sar
xchg
aaa
xchg
xor
stos
mov
and
push
and
sbb
jne
pushl
adc
fcomp
es
mov
in
add
add
add
inc
push
imul
push
dec
ja
fwait
push
into
jl
inc
fs
mov
push
or
cmp
jb
xchg
shlb
outsb
mov
aaa
or
sbb
mov
xor
dec
scas
inc
xorb
and
jecxz
mov
pop
mov
cmpb
bound
add
stos
xchg
psllw
in
xchg
mov
call
imul
dec
sahf
pop
push
ret
jno
mov
lret
pop
jl
xchg
ss
ds
fwait
xchg
or
hlt
or
mov
int3
push
sarb
push
int
cmp
ds
int3
in
insb
push
lea
loopne
push
fld
xor
push
fwait
or
jmp
inc
dec
aaa
lock
adc
push
ret
lods
push
leave
dec
inc
adc
ljmp
xor
xchg
lret
and
cmp
test
cmp
lods
or
jno
sbb
sbb
mov
nop
xchg
mov
rcrb
sti
sbbb
adc
xchg
lret
adc
push
xchg
push
test
pop
push
inc
call
out
call
jb
add
fisubl
push
test
loop
xor
push
cmp
push
jo
jmp
add
shlb
cmpl
test
add
mov
add
movsb
add
sti
push
inc
jnp
xor
das
and
and
push
test
push
xor
xor
adcb
popf
shrb
addl
xlat
jae
mov
xor
lret
test
xchg
sbb
xchg
xor
sbbb
push
jmp
add
xchg
and
enter
mov
add
pop
push
movsl
fnstcw
mov
fldt
cld
xor
pushw
fucom
push
jmp
out
sbb
aaa
notb
mov
sti
dec
jecxz
ret
and
lcall
jbe
incl
jne
push
cmp
aam
das
sbb
fsts
inc
add
add
add
fsubrs
sub
pusha
push
imul
orl
inc
jae
imul
sub
fcmove
ret
pop
fisubl
test
ret
in
jbe
enter
add
push
ja
add
out
mov
js
pusha
xor
aam
loopne
pop
ja
test
or
mov
jo
mov
mov
rorb
adc
mov
adc
pop
ja
adc
and
mov
jae
pop
adc
xchg
dec
xor
ret
outsb
inc
idivb
or
and
xchg
clc
push
sub
mov
pop
add
sbb
mov
inc
inc
xor
call
xchg
xchg
test
leave
dec
mov
scas
and
hlt
adc
mov
repnz
add
mov
jne
jbe
pop
ret
test
or
pop
and
add
pushf
add
adcb
jno
add
dec
fwait
cmp
xor
cmp
cmp
cmp
inc
cmp
adc
cmc
xchg
orb
lret
adc
cmpsl
test
rcrl
movsb
imul
or
xchg
add
js
int
jnp
add
add
xchg
push
jae
clc
add
mov
cmpsb
bnd
divl
test
pop
push
mov
jne
call
int3
mov
int
xor
add
push
cmp
inc
cmp
mov
jne
cs
iret
push
shrb
cmp
daa
in
and
adc
insl
add
add
js
sbb
cmp
stos
insl
in
mov
dec
and
cli
mov
mov
jmp
stc
pop
mov
lret
and
in
call
xchg
lret
rcll
mov
ja
adc
or
sub
pop
dec
repnz
mov
in
test
in
xor
mov
js
sub
xchg
call
nop
fcompl
add
xchg
xchg
or
or
shl
push
mov
test
addb
fcompl
mov
in
ljmp
xchg
lret
aam
enter
xchg
dec
mov
inc
and
inc
add
add
test
xchg
mov
stos
loope
and
push
inc
scas
add
test
test
or
jl
pop
lods
inc
call
ja
xorl
enter
in
adc
mov
pop
fadds
cmc
dec
stos
adcb
add
or
push
xor
jns
sub
add
insl
or
sbb
pop
repz
add
jbe
jbe
imul
fldcw
adc
imul
fmul
push
dec
lea
mov
ret
xlat
insl
mov
add
test
or
sub
mov
jne
mov
iret
adc
and
ret
add
adc
mov
loop
or
push
dec
or
stos
adc
popa
and
jg
pop
shr
lds
mov
add
dec
scas
in
ja
ret
cmp
jne
or
cmp
and
ljmp
dec
or
xorl
jne
push
push
or
rcl
add
xchg
xlat
xorb
mov
jp
push
add
in
scas
mov
add
pop
inc
dec
in
lds
in
sbb
mov
rclb
or
je
dec
rcll
or
push
or
rclb
xor
shll
pop
sbb
inc
and
xchg
pop
dec
clc
cli
enter
add
sbb
sar
inc
inc
mov
add
dec
and
mov
mov
inc
in
repz
add
or
repnz
sub
out
add
sbb
rcrb
fcoml
mov
outsl
add
add
dec
cld
xchg
fdiv
mov
mov
pop
shll
mov
mov
add
ja
sub
sbb
insl
sbb
jmp
inc
lods
ret
jnp
call
or
add
cld
ficoms
push
push
into
xchg
mov
imul
inc
cs
fcomps
ds
scas
movsb
push
inc
inc
cld
adc
sbb
mov
mov
push
sbb
in
decb
adc
adc
imulb
popf
add
push
getsec
js
push
pop
mov
enter
lods
mov
push
xchg
or
rorb
sbb
or
cld
cli
frstor
movsl
sbb
and
cld
jmp
sub
movb
dec
iret
ja
mov
jae
jo
jg
jno
subl
sbb
mov
sub
adc
push
cltd
inc
pop
add
cmp
inc
cmp
push
insl
jp
loopne
jno
out
mov
mov
mov
push
pusha
shll
jb
mov
sbb
adcb
negl
xchg
cmp
jne
movl
fsubrl
mov
incb
cmp
std
jne
shll
cld
add
dec
add
jmp
je
pusha
pop
xchg
rolb
xor
and
push
adc
div
adcb
push
push
cmpl
jnp
shll
xor
clc
adc
pop
xor
dec
xor
sub
std
je
jmp
lock
add
push
cmp
insl
push
aaa
push
and
aaa
stos
dec
dec
mov
jg
and
jnp
jae
cmp
jbe
addr16
shll
jne
add
shll
movl
pop
lods
jnp
lods
imul
mov
cli
loopne
mov
aaa
jmp
inc
mov
movsl
outsb
enter
cli
push
push
jmp
loopne
subb
inc
cmp
insl
jne
dec
ljmp
dec
pusha
shlb
inc
pop
clc
sti
rolb
jge
add
jb
mov
xchg
out
xor
testl
xor
and
dec
add
out
dec
dec
sub
jbe
inc
hlt
loopne
dec
jne
mov
dec
addb
sub
ds
mov
mov
push
add
inc
jbe
mov
push
jle
or
jne
ds
rol
stos
mov
jmp
js
add
push
jnp
cmpsl
cmp
into
clc
push
enter
cld
imul
mov
sbb
pop
lods
lea
jg
pop
bnd
mov
je
loop
test
adc
and
out
push
xlat
adc
jo
in
push
and
add
pop
jno
pop
pop
xchg
xchg
adc
pop
mov
push
sub
push
add
aam
cmp
mov
xor
xlat
testb
insb
ljmp
add
adc
and
sub
pushl
jmp
or
xor
lock
add
or
into
dec
out
inc
jnp
mov
call
or
mov
mov
add
mov
sub
ljmp
subb
sbb
es
popf
mulb
push
jmp
adc
cmp
jmp
add
and
ljmp
push
and
pushf
pusha
and
pop
xchg
ret
xor
push
js
fbstp
nop
out
ret
dec
push
sbb
add
lea
loope
sub
mov
sub
lods
enter
cmpl
or
push
xor
pop
ret
adc
testl
lods
adc
imul
xor
test
add
sub
cmp
test
add
test
dec
sbb
ret
je
cmp
xlat
dec
imul
sbb
pop
adc
in
cltd
sub
dec
not
pushf
sbb
int3
ljmp
sub
xor
or
and
xchg
imul
or
icebp
cmp
cwtl
daa
sbb
ljmp
cmp
faddl
or
imul
dec
pop
cld
mov
add
adc
aad
jns
cmpb
std
cmp
test
ds
call
mov
fstpl
mov
xchg
adc
sbb
dec
or
add
and
stc
stos
in
scas
add
mov
sbb
jo
aad
add
or
xchg
lock
insb
shr
pop
add
jmp
pop
sbb
add
filds
dec
fwait
pop
ret
or
xor
inc
pushf
add
sbb
in
and
adc
std
xor
mov
push
push
inc
fistpl
xor
or
aas
shlb
test
scas
pop
addl
xor
testl
pop
xor
pop
data16
inc
rcrb
pop
sub
inc
or
add
imul
jo
ret
mov
inc
imul
inc
mov
dec
ror
mov
insb
pop
arpl
loopne
pop
pushl
or
imul
popa
faddp
jl
in
add
mov
loopne
dec
mov
lahf
jge
daa
mov
int3
fstpt
push
push
or
xor
cmp
mov
pop
cwtl
adc
push
push
sub
in
adc
xor
rcr
pop
icebp
mov
iret
inc
push
outsb
rorb
adc
mov
scas
add
jno
inc
insb
loopne
andl
inc
sbbl
popa
int3
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
xorl
cmpsl
push
sbbl
add
xchg
jle
or
mov
fucompp
mov
push
popa
je
popf
jge
lret
scas
adcl
lods
adc
mov
fildl
dec
push
gs
outsl
mov
xor
sbb
pop
cmp
cmp
cmpsl
dec
sub
push
add
shlb
or
hlt
lods
and
mov
mov
push
out
inc
je
cltd
inc
sbb
ja
jne
push
mov
nop
je
jno
push
ja
imul
xor
pop
nop
arpl
fistpl
notl
movsb
xor
scas
xchg
shll
hlt
arpl
fwait
inc
jne
cmp
or
lahf
xor
inc
adc
xchg
sbb
sbb
add
pop
mov
lds
mov
dec
insb
jne
cli
and
add
sub
popa
pop
add
rorb
dec
loope
inc
js
jbe
fimuls
fnstsw
in
mov
out
cmp
pop
lahf
or
xor
push
in
mov
or
and
add
sbb
or
and
mov
push
dec
mov
bound
loope
adc
test
add
rorb
adc
add
adc
call
or
and
not
and
or
mov
and
dec
call
push
clc
mov
movl
push
andb
or
imul
mov
das
loopne
mov
int
data16
push
add
pop
fldcw
ds
xor
add
outsb
sub
or
test
iret
mov
imul
mov
sbb
add
ss
push
call
fcmovu
push
or
and
jns
rolb
pop
xchg
cli
jp
pop
jbe
and
add
arpl
jno
xchg
out
in
fiadds
mov
inc
dec
xchg
negl
add
into
das
add
add
sbb
dec
add
add
and
sbb
adc
cld
icebp
clc
cmc
mov
lock
mov
push
lahf
xchg
data16
cli
fld1
js
sbb
or
xchg
fdiv
or
pop
jae
stc
cmpsl
xor
inc
pusha
fidivrl
fwait
xchg
push
push
xchg
jmp
decl
xchg
ja
mov
xchg
add
les
jns
mov
sbb
leave
mov
fmull
fstl
mov
pop
or
adc
xchg
adc
jne
lea
xor
sub
mov
jle
iret
repz
xchg
push
lahf
mull
out
stos
push
mov
mov
push
or
test
pop
mov
test
mov
movsl
movsl
fldl
jle
mov
mov
fildll
shll
jne
inc
cmc
jge
add
adc
sub
ja
bound
pusha
push
inc
mov
jge
hlt
sbb
cltd
jmp
or
add
jg
add
and
or
inc
test
or
clc
ficompl
jmp
adc
xchg
and
ret
and
push
push
test
jmp
adc
or
xchg
testb
aad
fnstsw
push
inc
dec
lea
test
movsb
add
mov
test
jne
or
or
mov
movsl
das
sbb
shlb
lods
cli
or
lods
test
test
std
std
hlt
xchg
and
mov
lods
std
sahf
int3
call
jne
pop
pop
mov
push
pop
push
add
inc
jmp
fwait
outsb
aas
mov
lea
aad
xchg
retw
idivb
ljmp
leave
iret
movsl
pop
push
popf
or
mov
icebp
xchg
xor
xchg
out
adc
or
mov
jp
dec
mov
cmp
mov
mov
test
movsl
insl
gs
scas
jmp
int3
fcoml
or
shl
push
inc
mul
jl
mov
daa
mov
dec
jne
or
pop
cs
pop
add
orl
xor
push
insb
daa
ret
add
mov
arpl
lea
mov
add
sub
loope
rcrl
mov
dec
enter
call
adc
xchg
shlb
fimull
push
subb
or
cmp
jne
inc
sub
pop
aad
pusha
mov
outsb
das
mov
push
cmpb
movl
testl
push
pop
mov
fiaddl
mov
imul
cmpsb
shl
jne
js
ds
mov
andl
scas
scas
das
test
scas
ret
rorl
mov
dec
lret
xchg
lea
jo
sub
pop
or
sub
clc
fs
mov
ret
mov
pop
sahf
adc
push
or
inc
rorb
pusha
sbb
cmc
push
scas
xchg
cli
inc
lea
lods
pushf
jmp
inc
push
dec
scas
out
adc
push
setp
sub
mov
test
cwtl
add
dec
xor
imul
adc
pusha
sbb
lods
movsl
and
add
ret
cmp
rorl
je
sub
jns
pop
in
sbb
daa
mov
cwtl
add
cmp
sbb
inc
cld
lea
popa
xor
cmp
push
lret
jbe
push
pop
enter
xchg
mov
mov
or
or
mov
or
test
aaa
inc
in
push
or
or
in
adc
pop
sub
out
daa
daa
iret
hlt
add
mov
jns
ficomps
lcall
or
ficomps
insl
push
lock
fisubl
jns
adc
leave
jo
adc
add
and
aaa
inc
out
shlb
cmp
push
add
ja
lods
jne
sub
sbb
in
popf
mov
mov
inc
mov
sbb
cmp
xor
call
call
pop
mov
out
mov
loop
mov
in
lcall
mov
or
pushl
into
int
sub
sbb
or
adcl
je
iret
cmpb
int
jmp
cmpsl
int
roll
int3
cltd
or
inc
int
pop
pop
sub
cld
scas
test
bound
ret
clc
imul
jo
inc
add
movb
jp
xor
cmp
xchg
cltd
rcrb
mov
lret
insl
dec
sub
xchg
adc
lret
mov
or
ja
and
lret
mov
jb
lret
daa
sbbl
lea
mov
jmp
xchg
and
lcall
sub
push
fwait
lds
cwtl
sbb
repz
stos
das
sub
push
js
xchg
bound
or
aas
dec
data16
outsb
sub
jmp
or
sub
jmp
dec
mov
jnp
pop
add
mov
shlb
iret
rorb
sbb
xor
mov
loop
push
sub
sbb
jmp
test
push
int3
adc
sbb
jg
mov
loopne
sub
jne
movsl
lock
jne
and
cmp
mov
dec
mov
sbb
push
rcr
sbb
inc
dec
rorb
loope
lods
fxch
push
mov
jne
jmp
fwait
and
pop
sti
mov
mov
dec
lahf
fstpt
sbb
jp
lock
mov
je
push
push
mov
push
mov
dec
sbb
lock
nop
dec
xchg
xor
sbb
jmp
js
push
and
dec
or
dec
xchg
mov
int
jns
or
inc
pop
mov
rolb
add
and
cs
xchg
or
outsb
test
dec
or
pop
mov
mov
mov
test
and
xor
in
mov
adc
pop
push
sbb
cmpsb
lcall
cld
pop
movsl
cmpsb
xor
out
mov
sub
inc
dec
sub
loopne
fwait
iret
scas
lcall
rcll
inc
jne
aas
or
fidivrs
xor
cmp
aas
andl
dec
scas
xchg
movsb
mov
jb
adc
or
outsl
sbb
inc
lods
pop
ret
xchg
xor
cltd
mov
add
or
mov
sahf
out
jo
pop
mov
icebp
sbb
or
loope
mov
cmp
xchg
jl
shlb
shl
js
mov
jns
cld
xor
jbe
push
outsl
pop
add
mov
outsl
xor
jo
add
mov
enter
movsl
cmp
jno
mov
jno
or
jno
jno
mov
jno
insl
or
xlat
adc
and
ss
mov
xchg
xchg
xchg
xchg
in
aad
outsb
hlt
xor
jae
or
mov
lea
push
movsb
jb
stc
jae
ja
addl
outsl
lods
outsb
movsb
xchg
xorl
cmpsb
andl
sub
mov
nop
adcl
sub
sub
sbb
adc
pop
push
ja
movsl
test
jmp
in
scas
xor
xchg
ja
sbb
sbb
outsl
repnz
mov
movsl
stc
pop
movb
mov
mov
add
lods
push
xor
adc
inc
jb
mov
and
movsl
dec
xor
fsubl
xchg
mov
or
pushf
adcb
or
dec
test
xchg
dec
add
lea
imul
push
imul
test
push
and
sbbb
lods
pmaxub
sahf
js
or
xor
hlt
adc
mov
add
stc
cmp
roll
ss
fsubrp
xor
bound
inc
and
dec
loopne
add
pushf
or
pop
cmpb
inc
add
sub
arpl
clc
xor
mov
rcrb
or
sbb
icebp
push
shl
inc
mov
xor
pop
inc
and
pop
pop
imul
add
movb
add
push
aad
loop
mov
mov
adcb
or
stc
mov
lods
test
movsb
gs
jmp
dec
fstpl
stc
cwtl
add
push
jg
inc
adc
mov
and
dec
cld
orl
dec
leave
and
or
pop
outsl
enter
testb
shlb
adc
inc
cltd
divl
clc
add
dec
ret
rol
cltd
push
ds
ss
push
test
cmp
sbb
jne
add
or
add
out
add
fadd
push
xor
push
push
test
fstpt
sti
jb
test
mov
add
or
je
mov
int
lret
sub
ret
adc
std
cld
add
jo
sbb
lret
mov
mov
pop
outsl
mov
push
adc
and
mov
push
cmp
je
or
sub
and
test
std
int3
or
and
jle
popa
add
imul
push
sbb
and
mov
sbb
scas
jo
and
stos
bound
sbb
sbb
ror
sbb
loope
xchg
or
or
sbb
adc
push
add
jp
push
adc
xchg
dec
xor
and
addb
xchg
imul
push
cmp
dec
xorb
pop
fcomps
repnz
inc
jmp
nop
dec
sti
mov
pop
add
add
sub
push
push
dec
or
sarl
mov
add
xor
add
xchg
stos
add
jmp
scas
xchg
test
pop
nop
push
jl
mov
add
xorb
sbb
cld
cmpl
jne
stos
cmp
je
cmp
out
or
cmp
xchg
xchg
fwait
lea
mov
add
push
xchg
jg
je
pop
into
rcll
lock
add
imul
add
adc
jae
xor
mov
xchg
inc
sarb
test
cmp
jne
lock
scas
jg
add
mov
pusha
push
fbld
test
andl
out
orl
or
stc
mov
fs
fs
inc
cmpl
gs
sub
pop
subl
or
pop
cmp
lea
ds
xchg
xchg
xchg
push
push
mov
cmp
jmp
pop
pop
mov
je
call
lret
addl
sbb
mov
jl
jp
cwtl
rolb
stc
lahf
ret
mov
ja
xor
xchg
mov
add
sbb
mov
stos
rcrb
stos
mov
or
imul
add
imul
sub
push
ret
mov
push
clc
cmp
mov
push
push
sub
pop
pop
xchg
inc
push
adc
push
adc
lods
inc
sahf
icebp
fwait
shll
outsl
mov
jbe
add
gs
leave
inc
call
out
outsb
cmp
cmp
lea
pop
mov
imul
dec
and
fistpl
test
mov
jne
dec
adc
or
add
inc
push
sbbl
pop
orl
or
rol
rolb
subb
or
push
push
pop
pop
xchg
lods
add
add
cmp
or
int3
add
gs
cmp
test
mov
enter
or
jne
dec
rorb
mov
cmpsb
mov
jae
dec
add
sub
fimull
movsl
adc
js
fidivrs
add
inc
cs
je
cmp
jb
push
add
cmc
stos
or
js
and
cmp
xor
outsb
ljmp
push
popa
push
pop
jle
xorl
test
lahf
and
cld
add
mov
push
ret
inc
insl
push
mov
test
or
and
cli
jbe
in
sub
mov
pop
and
fs
cmc
dec
sub
xor
push
pop
mov
mov
sarl
mov
or
clc
test
and
lea
int3
add
mov
fdivrs
mov
jg
push
push
data16
jae
lea
push
sbb
pop
add
add
push
xor
out
jp
cmp
or
push
mov
push
jbe
andl
pop
mov
mov
mov
and
nop
push
jmp
mov
enter
enter
je
cltd
sub
mov
enter
push
sub
lea
push
fabs
mov
jbe
adc
push
out
or
or
dec
dec
std
inc
adc
xor
push
push
pop
push
aas
sbb
push
int
sarl
rorb
shlb
dec
or
orb
mov
dec
lock
mov
std
fnstsw
and
xor
mov
xor
movb
jb
push
push
ljmp
inc
call
push
inc
lret
fldl
mov
jp
fidivrs
sbb
fs
inc
aas
or
add
aaa
and
xor
dec
mov
scas
faddl
add
xor
aas
roll
das
rorb
and
into
sub
cltd
sbb
cmp
jb
add
mov
or
lcall
in
imul
pop
pop
push
jg
prefetch
or
mov
fcomip
testl
push
add
and
jo
mov
pushf
and
xchg
adc
xchg
sub
decl
scas
fwait
push
mov
test
pop
jmp
dec
add
jmp
mov
dec
push
pop
jmp
lea
lcall
adc
lahf
pop
pop
inc
sub
push
aaa
xor
push
mov
jne
jmp
popl
adc
daa
je
xchg
into
push
push
mov
movl
xor
ret
dec
adc
jmp
lods
inc
inc
or
idivb
mov
mov
or
push
or
aam
xchg
jo
inc
push
xchg
jno
cltd
xorb
cmpsb
rorb
mov
scas
cli
xor
shlb
push
xor
inc
sub
rorl
inc
or
ja
push
lock
enter
imul
out
sbb
cmp
sub
adc
repz
or
sub
bound
lock
add
push
lret
mov
and
mov
inc
jge
mov
jae
pop
aam
sub
adc
int3
jle
sbb
push
sbb
lea
pop
pop
push
sub
push
lock
nop
popa
cmp
jecxz
or
sub
xchg
int
dec
jbe
pop
mov
add
or
xchg
fistl
imul
inc
pop
rorb
xor
arpl
in
xchg
xchg
das
push
push
jb
pop
iret
and
sbb
addr16
lret
push
add
jnp
incb
insb
fs
enter
loopne
daa
jg
cmpsb
push
cmp
xor
xor
add
into
jnp
xor
or
and
fwait
mov
jle
inc
out
push
jl
or
pop
sahf
lret
push
mov
repnz
mov
cmp
cmp
jmp
xchg
out
inc
adc
or
test
pop
clc
inc
loopne
push
loop
and
pusha
addr16
gs
ja
add
or
inc
inc
loopne
jne
or
push
shrl
and
fdivrp
data16
leave
push
clc
or
hlt
addl
lea
dec
or
test
jmp
and
hlt
div
inc
loopne
mov
and
test
mov
cmp
or
mov
add
mov
push
ret
and
xchg
push
inc
ja
pop
cmpsl
or
push
das
out
rol
clc
xor
xor
popa
popf
jne
mov
fwait
add
xchg
mov
inc
jns
pop
adc
or
cmp
jle
lret
add
dec
cmp
xchg
mov
dec
inc
not
test
pop
or
inc
push
sbb
pop
and
or
js
movsl
out
jmp
sub
testb
icebp
add
xor
cld
sti
std
and
cmp
fcoml
and
hlt
jmp
adc
mov
lods
in
out
pop
jo
dec
fcmovnbe
loopne
add
jecxz
xor
sbb
cmpl
add
das
mov
or
mov
pusha
popa
xchg
mov
fcomps
outsl
lret
dec
clc
jp
jle
jns
rolb
dec
dec
ja
lds
add
out
movsb
je
movl
push
jmp
addr16
dec
arpl
aas
clc
inc
jo
div
lret
jb
pusha
mov
pusha
mov
or
push
aaa
popl
push
xchg
sbb
push
subb
loope
js
out
pop
lea
mov
sub
mov
hlt
mov
lock
cltd
int
add
mov
and
jge
pop
mov
add
mov
or
add
ret
sub
mov
jmp
pop
push
adc
pusha
or
shr
mov
or
fcoms
or
lock
mull
lsl
jmp
push
pop
or
ja
push
push
inc
shr
rcr
shr
rcr
or
mov
repz
addr16
dec
and
imul
div
mul
pop
jb
cmp
or
cmp
or
xor
xor
mov
and
adc
or
adc
push
lret
rcll
cmp
push
sbb
test
sbb
imul
mov
adc
push
inc
sbb
clc
mov
add
negl
inc
out
sub
sbb
popa
xorb
out
inc
and
mov
cwtl
jbe
in
fisttpl
xchg
or
inc
sbbb
cmpsb
mov
pushf
jp
sub
jb
or
testb
jo
mov
icebp
add
mov
mov
test
aas
and
push
inc
jp
inc
cmp
xlat
mov
xchg
sub
mov
push
sub
cmp
push
nopl
or
inc
lock
shr
xor
sbb
inc
mov
and
xchg
clc
sbb
jmp
dec
or
xchg
loope
mov
ret
mov
xchg
mov
out
and
add
mov
push
dec
sbb
lret
lods
ret
xchg
jo
add
and
adc
pop
add
push
dec
js
jne
pop
add
jb
push
jmp
pusha
call
inc
mov
push
mov
test
xor
adc
xor
dec
inc
decb
dec
and
test
dec
pop
into
adc
and
rorb
xchg
mov
loopne
xchg
lock
push
push
jae
add
daa
ffreep
lea
std
loopne
pop
mov
outsb
iret
into
push
push
rcrb
sbb
loopne
pop
lods
fadds
fwait
icebp
pop
and
loope
in
stos
sbb
loopne
iret
decl
mov
clc
add
es
pop
aaa
push
xor
mov
les
jo
adc
dec
adc
addb
mov
arpl
mov
jg
popa
pop
mov
mov
shll
pushl
add
aas
mov
movsb
pop
test
or
add
insl
inc
xor
add
pop
adc
pop
or
aas
dec
mov
cmp
lods
xor
add
sub
scas
sbb
sub
mov
fsubr
push
fldt
pusha
pusha
inc
jmp
aas
pop
push
fs
or
jge
add
mov
jmp
xor
push
cmp
jae
adc
xchg
jo
push
pop
imul
test
jge
dec
push
sub
adc
test
mov
ret
and
inc
daa
loop
pusha
xchg
mov
pop
mov
mov
movb
sub
push
enter
dec
pop
jno
add
rcrb
pop
shrb
scas
sub
jl
pop
or
adc
out
cli
fadd
adc
inc
mov
imul
bound
inc
mov
cmc
aas
sbb
jecxz
inc
inc
cmp
into
in
dec
enter
je
adc
gs
je
add
cld
jmp
or
lock
push
mov
icebp
xor
mov
subb
shl
cmpsb
pop
jl
adc
jne
push
adc
and
or
incl
loopne
mov
push
stos
or
add
ljmp
jg
ljmp
adc
das
pusha
outsl
push
push
dec
adc
fists
cwtl
iret
push
and
lods
push
dec
and
push
repz
jle
jg
outsl
inc
or
jbe
stc
jl
jle
xor
jg
jg
jg
jo
mov
mov
dec
std
adc
mov
repnz
in
rclb
add
lea
lea
inc
out
js
push
mov
fdivs
xor
dec
jo
mov
or
mov
adc
inc
inc
push
negl
ret
incb
popa
ret
mov
lret
ret
cmpb
lret
mov
shr
dec
imul
lods
je
rol
hlt
mov
xor
pop
out
adcl
lock
mov
xor
cltd
int3
and
dec
push
dec
and
outsb
and
mov
sub
sbb
js
mov
in
and
stc
and
ljmp
out
mov
ret
add
test
and
shl
sbb
clc
or
or
add
sahf
cli
insb
dec
clc
jl
js
jnp
pop
add
lret
cmp
into
cmc
jle
mov
in
xor
sbb
pop
rcll
fdivrl
decl
int3
fwait
push
int3
and
test
adc
scas
push
sarb
jle
pop
add
pop
inc
mov
and
arpl
js
cld
pop
pop
pop
cmp
or
sub
xor
push
pop
ja
mov
sbb
loopne
addr16
push
dec
pop
xchg
adc
cmp
and
cwtl
inc
dec
sbb
push
adc
mov
les
nop
xlat
adc
test
cmpsl
xchg
mov
and
or
in
mov
cli
xor
mov
push
je
xchg
cli
adc
pop
dec
add
lea
or
dec
cmp
adc
push
ret
out
mov
mov
xorb
jmp
fs
sub
sub
jle
push
xlat
ret
je
cmp
sbb
xor
cmpsb
add
dec
mov
dec
movb
mov
std
cmp
sub
jno
add
jno
add
and
push
je
push
rorb
mov
pop
sub
negl
push
inc
cmp
lock
push
add
fcomps
push
ds
insb
enter
add
adc
cwtl
add
popa
or
pop
loop
out
pop
or
cwtl
jae
inc
pusha
lcall
cmpsl
add
fs
push
daa
add
dec
je
scas
rorl
sub
and
test
pop
or
adc
adc
lcall
stos
xchg
aas
mov
and
mov
add
add
dec
mov
mov
pop
mov
ja
or
fcmovbe
scas
je
sti
je
add
andl
mov
inc
push
es
pop
pop
mov
pop
mov
push
or
inc
test
fdivs
mov
sub
jne
adc
push
sbb
mov
and
outsb
test
and
mov
jmp
adc
dec
push
aad
lcall
pushf
sub
sub
scas
cmp
or
into
add
adc
das
xor
js
xor
pop
gs
adc
sub
adc
pop
sbb
or
push
inc
fidivrl
cmp
add
and
ss
push
loopne
jl
cmp
lea
inc
or
sbb
add
sbb
mov
push
or
push
lea
adc
inc
xchg
push
divb
mov
test
add
xchg
lea
inc
adc
movsb
push
fprem
leave
xchg
call
or
sti
or
xor
addr16
outsl
xor
jmp
pop
cli
popf
pushl
leave
cwtl
ret
cmp
lahf
push
fisubs
adc
inc
or
add
push
jecxz
adc
gs
adc
push
mov
push
push
nop
rcrl
dec
cs
mov
cwtl
or
dec
movsb
mov
dec
and
dec
push
sbb
dec
adc
clc
xchg
push
lods
mov
cmp
push
or
jle
rorl
or
push
mov
cs
pusha
dec
call
xchg
ret
popa
loope
ljmp
or
add
cmpsb
mov
add
push
cmp
push
add
les
out
or
sub
xchg
pop
push
and
mov
movsb
andl
jge
negl
jmp
mov
stos
popf
sub
add
scas
dec
and
sub
mov
and
inc
jle
sub
cmp
xchg
popa
test
and
or
push
pop
jmp
cmp
xchg
and
and
out
int
lock
push
mov
adc
sbb
mov
sub
or
jmp
adc
mov
jge
push
outsb
idivl
mov
mov
movsb
jne
xchg
negl
dec
dec
jae
imul
sbb
mov
cmp
and
mov
xchg
rclb
dec
lea
bound
movsl
mov
adc
and
inc
cwtl
adc
push
and
inc
ret
daa
pop
stc
sub
cmp
mov
add
sub
mov
icebp
ds
mov
push
jge
or
ja
inc
nop
mov
sub
jno
xchg
cmp
ud0
movsb
testl
xlat
pusha
pusha
and
lret
jmp
mov
dec
dec
or
iret
shlb
mov
in
mov
imul
lock
cmp
push
or
orb
jecxz
push
push
cmpsb
ret
movb
or
pop
fs
sub
xor
xchg
rorb
cmp
hlt
sbb
cmpsl
lods
stos
loopne
out
sub
jp
push
fsubrs
cwtl
jge
inc
int
rolb
dec
adc
push
inc
sbb
xlat
test
cmp
jnp
mov
add
fdivrs
cmp
add
in
mulb
subl
andl
push
loopne
adc
daa
test
add
xor
call
add
mov
mov
pushf
imul
add
mov
push
and
movsl
add
mov
into
divb
jecxz
aam
cmp
hlt
bound
jne
mov
aaa
xor
and
and
or
adc
inc
mov
jae
in
sar
mov
push
or
mov
inc
ja
ja
mov
out
movsl
aas
xchg
add
int3
adc
imul
and
dec
pop
ss
into
ljmp
pop
cmp
add
push
xlat
xor
adc
xchg
pop
dec
xchg
sub
nop
ljmp
rclb
insl
pop
and
inc
add
lods
shlb
or
adc
clc
and
sub
aaa
mov
jb
mov
sbbb
cld
fstl
ficomps
incw
cmpl
insl
mov
inc
sbb
xor
in
sbb
sti
jg
add
cmp
jle
or
sbb
popa
sub
push
aam
gs
call
testb
shr
sbb
mov
push
clc
pop
std
mov
jae
bound
or
adc
inc
mov
dec
test
push
jle
into
sbb
mov
add
shrl
shl
shr
or
mov
insb
imul
sahf
dec
mov
jne
outsb
mov
dec
outsb
adc
adc
push
cmp
sub
jne
inc
loope
mov
rcr
shl
cmc
fiaddl
mov
aas
mov
inc
jmp
out
jmp
push
fsubrs
mov
ja
andl
movsl
scas
js
add
rcrb
int3
int3
jmp
call
or
daa
mov
mov
lret
into
jmp
lods
xchg
movb
jmp
outsb
dec
and
les
or
lods
add
sbb
jae
mov
lret
sub
jmp
sub
xor
mov
inc
cwtl
pop
pop
movups
les
push
or
mov
inc
in
sub
adc
push
sub
std
inc
fildl
xchg
push
loop
sahf
out
lcall
and
sarl
pop
or
push
adc
rcll
sbb
add
testb
adc
sbb
mov
sarb
subb
jl
lods
lods
sbb
jg
inc
sub
dec
jbe
ja
pop
push
mov
push
add
mov
adc
rcrb
push
das
jl
xchg
nop
push
cmp
pop
in
leave
pop
sbb
mov
push
mov
jne
mov
or
xor
out
mov
dec
fldt
jns
sbb
imul
addb
bound
xlat
repz
sbb
fimull
cmp
push
push
adc
imul
sub
adc
ret
dec
or
mov
rclb
dec
jg
icebp
add
and
pop
xor
inc
mov
mov
aas
js
shll
pxor
in
movsb
inc
sbb
roll
les
jg
pop
je
fstl
sbb
push
add
inc
adc
and
push
sub
out
inc
inc
push
xchg
jle
inc
jo
mov
rcl
aaa
sqrtps
testb
pop
jae
or
xor
mov
push
xor
fisubrl
cli
sbb
add
mov
push
mov
inc
inc
cli
pop
pop
or
sub
ja
flds
bound
add
cli
shr
aas
and
dec
add
push
sub
les
pushf
mov
inc
sbb
inc
lods
loope
pop
rcrb
cmp
xlat
jmp
outsl
cld
ja
inc
mov
or
sub
push
mov
mov
dec
sbb
lea
mov
into
leave
dec
mov
xor
cli
dec
xchg
mov
inc
loopne
sub
mov
aas
shlb
add
sub
mov
dec
mov
xor
push
sbb
jo
xchg
shl
mov
xchg
push
loopne
sbb
jmp
gs
movsb
push
sbbb
loop
nop
cmc
mov
xchg
sbb
mov
push
add
cmp
cmp
xor
fdivrl
enter
cmp
inc
loope
push
lea
add
dec
cmp
leave
sar
sub
je
cmpsb
mov
add
mov
dec
adc
mov
sbb
add
adc
cmp
xchg
pop
push
addr16
test
push
and
dec
pop
ret
pop
cwtl
mov
fldcw
or
mov
hlt
and
test
icebp
lods
js
inc
pushl
mov
js
inc
aad
cmp
icebp
cmpb
add
jo
push
push
push
int
push
scas
or
sub
pop
cltd
cmp
sti
xor
inc
mov
loopne
addr16
or
les
mov
jg
inc
js
sub
push
hlt
jl
add
mov
andl
fs
jo
dec
push
imul
mov
out
lret
add
cld
cmp
inc
mov
fsubs
arpl
fstl
loopne
js,pt
pop
push
inc
inc
call
jmp
adc
les
bound
outsb
mov
cmpb
push
dec
hlt
fadds
inc
addr16
xor
or
mov
inc
sbb
xchg
push
inc
lods
inc
add
loopne
insl
xchg
imul
xchg
rcr
cmp
mov
mov
xchg
lods
add
jmp
rcr
push
or
add
mov
mov
or
hlt
fsubs
jne
js
sarl
xor
push
add
ficomps
repz
push
jmp
js
cmp
adc
add
iret
test
int
dec
or
and
nop
rcrb
cmp
xor
jnp
in
decl
mov
inc
mov
sbb
lea
rorl
mov
cmp
xchg
mov
and
mov
std
popa
push
test
lret
jb
fwait
xlat
lock
cmp
mov
mov
mov
cli
or
shufps
aad
nop
int3
mov
push
addl
xor
jb
xchg
lock
iret
dec
push
mov
dec
jbe
mov
mov
daa
ret
sub
add
and
les
adc
xor
push
movsl
andl
or
in
pop
jns
shll
fcoms
add
add
jg
insb
push
mov
pop
data16
sub
or
adc
mov
mov
pop
enter
add
inc
sbb
movsl
jne
pusha
sub
lods
stc
mov
mov
inc
addb
shlb
out
test
rclb
or
adc
loope
fstl
add
jmp
add
or
mov
jno
movb
push
mov
jg
jmp
inc
xor
mov
adc
sbb
mov
or
mov
lods
fucom
loope
cmp
out
dec
mov
mov
insb
clc
push
iret
adc
sub
jne
mov
pop
inc
mov
and
jno
xchg
cwtl
inc
je
or
cmp
aas
and
dec
and
or
or
jmp
sub
jecxz
push
xorl
or
mov
cmp
push
test
dec
push
pop
test
fstpl
lods
or
jl
cmp
or
add
jle
aam
orl
xor
scas
push
sbb
mov
ss
xor
xchg
adc
pop
and
mov
lds
mov
adc
adc
push
in
mov
inc
rorl
cli
inc
add
dec
pop
int
xchg
daa
add
mov
daa
push
push
in
cs
inc
testb
pop
pushf
push
dec
ljmp
mov
add
mov
and
cmp
scas
push
xchg
add
mov
imul
sbb
stos
xchg
lea
jmp
xor
sarb
dec
push
hlt
lea
cmp
dec
mov
outsl
mov
inc
mov
jmp
test
push
scas
mov
push
jge
enter
jl
stos
jmp
popl
std
addl
js
pop
sbb
lea
pop
xchg
or
psrad
mov
std
loop
adc
mov
jb
inc
bound
jp
enter
cmp
dec
add
enter
adc
cli
adc
push
faddl
imul
mov
and
in
aam
dec
add
dec
sbb
cmp
inc
jmp
xor
xor
jge
mov
inc
and
jl
sbb
add
xchg
insb
ret
push
movsb
push
movsl
pop
sti
add
pop
cwtl
adc
gs
cmp
mov
xor
sbbb
xchg
add
jbe
mov
fildll
js
jb
sub
dec
in
xor
gs
add
jmp
mov
scas
pop
sbb
add
xor
mull
lea
add
push
inc
push
sbb
or
and
rcrl
dec
jecxz
pop
push
andl
push
outsb
repz
mov
adc
into
jle
jg
ss
test
push
ffreep
or
push
sbb
fcoml
cwtl
xor
fmull
push
aas
out
mov
pushl
jo
xor
rolb
inc
add
jecxz
pusha
in
xchg
jno
je
shlb
jp
and
adc
insl
push
std
mov
jne
mov
push
js
push
sbb
sub
shlb
push
pcmpeqw
xchg
or
push
add
mov
jmp
loop
shlb
cmp
add
rorb
sbb
lea
mov
jne
pop
add
call
xlat
dec
cmp
arpl
or
cmpsl
popf
dec
addb
add
ljmp
or
pop
insb
jecxz
push
mov
in
imul
adc
pop
mov
enter
xchg
lock
fbld
fcoml
fdivrs
or
xorb
outsl
add
ror
or
cwtl
mov
push
clc
push
pop
andl
jp
in
mov
cmp
andb
jp
cmp
lea
push
cli
jb
clts
std
dec
les
and
adc
out
fsubrl
jmp
mov
push
mov
xchg
or
and
aas
push
jno
fildl
loop
jo
loopne
fnstsw
sbb
pop
cmpsl
shlb
lods
push
in
or
add
sahf
cld
cwtl
pop
add
or
mov
dec
pusha
fbstp
jne,pn
sbb
inc
mov
inc
ja
and
sarb
les
sbb
or
mov
adc
inc
or
cli
fsubr
fstl
call
pop
add
loopne
jmp
xchg
sbb
cmpb
or
inc
daa
push
adc
fs
and
or
inc
fiadds
int
lea
inc
cmp
roll
or
jecxz
insb
mov
addl
mov
bound
sub
lea
or
cmp
push
push
jo
push
lods
adc
js
dec
xchg
stc
jb
push
fstps
sbb
inc
mov
or
in
add
add
mulb
pop
dec
ljmp
sub
inc
sbb
popa
add
jo
jl
pop
ja
push
cs
inc
add
mov
outsb
or
sub
mov
push
pop
dec
pusha
adc
rcr
addl
repz
je
ljmp
cmp
into
lock
ret
add
sub
cmp
mov
mov
push
movsl
mov
inc
iret
mov
xor
js
sarb
das
lret
mov
jb
pop
insb
xchg
push
cwtl
out
mov
pop
mov
cmp
daa
pushf
das
or
outsl
insb
out
outsb
ja
cmp
lcall
mov
sub
addr16
push
or
jmp
add
cmp
push
or
mov
andb
ljmp
in
ja
cwtl
xor
push
cmp
lahf
daa
add
daa
mov
mov
xor
fisttpl
pusha
lods
and
lds
xlat
mov
mov
mov
or
out
rorl
pusha
jns
xlat
or
je
movl
cld
lret
adc
jle
jae
xor
stos
stos
or
xor
outsl
mov
int
test
in
push
arpl
and
jae
in
adc
dec
jg
cmp
call
ja
dec
mov
mov
jo
rcll
jl
sahf
loop
mov
sbb
clc
test
flds
adc
fs
xor
in
and
sbb
test
int
loopne
mov
xor
push
rorl
or
jb
or
adc
leave
leave
in
ss
leave
leave
leave
leave
sub
xor
fwait
push
ror
cmp
inc
and
xchg
fisttpl
inc
cmovs
xchg
xchg
push
push
pop
add
in
fs
in
je
jl
sahf
add
test
and
dec
mov
xchg
cwtl
pushf
cltd
dec
xor
mov
cltd
in
rol
shll
rclb
adc
cltd
fs
call
in
aam
hlt
pushf
fs
dec
clc
cld
add
and
add
fidivl
sbb
es
and
dec
es
sub
dec
es
fs
cmp
es
addb
dec
xchg
dec
xor
dec
mov
pop
dec
xor
and
pusha
sbb
inc
and
decl
sbb
mov
jl
inc
ficoml
add
je
or
xor
mov
xor
xor
push
xor
or
inc
fiaddl
movsb
cltd
nop
test
mov
lcall
cltd
nop
data16
cmp
cmp
lods
inc
movsb
cltd
nop
mov
mov
inc
lcall
notb
push
enter
pop
and
notl
mov
pop
ss
rorl
inc
dec
fbld
or
decl
mov
pop
sarb
bnd
cmp
or
mov
cmp
or
in
dec
outsl
loope
mov
shr
and
and
rolb
and
add
addr16
lret
xor
mov
adc
sbb
shlb
xchg
not
xor
loope
xor
enter
and
shr
and
pop
cmp
jmp
add
lret
add
cmpsb
test
js
lock
or
or
pusha
nop
push
add
sub
shll
insl
or
je
or
or
adc
or
call
add
xchg
outsb
divl
lret
jmp
inc
and
mov
and
cmp
add
aaa
jecxz
sbb
or
out
add
or
cmpsl
daa
cltd
adc
and
pusha
xor
sub
aaa
jge
je
jle
lea
xchg
xchg
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
push
or
jecxz
pop
fstpl
movsb
sub
pusha
fldl
cmp
insl
hlt
cmp
rclb
jmp
add
inc
or
adc
push
sahf
lret
add
add
test
fisttps
call
push
das
shl
ja
out
dec
jne
orl
and
and
push
jmp
testl
out
and
sbb
lcall
es
fsubrl
or
jnp
sti
aaa
and
inc
flds
fstps
jmp
fisttpll
inc
lea
sbb
cld
inc
inc
movsl
pop
hlt
adc
orb
in
push
fcmovnu
repnz
sub
shl
cmp
or
orl
push
xor
mov
pop
fmulp
add
cmp
pop
push
inc
xchg
loope
add
pop
dec
push
cmp
fldz
sbb
lea
dec
test
mulb
sub
dec
jmp
sub
pop
aaa
pop
sub
jmp
sub
sub
sbbl
lods
sbb
test
into
call
mov
xchg
scas
fimuls
mov
jnp
and
or
loop
xor
cmc
jecxz
fstpl
lea
or
hlt
xchg
test
call
repz
les
pop
lret
xchg
jle
inc
shll
or
ljmp
mov
mov
stos
je
jge
test
mov
cld
mov
insl
in
movsb
push
shrl
cmp
sbb
nop
loopne
sbb
or
shrb
push
push
icebp
sbb
shrb
loopne
cmpsb
mov
lds
daa
mov
sbb
pop
movsb
push
shr
push
adc
jg
sbb
pop
or
jno
fistps
cmpsb
lret
adc
push
fcoml
adc
repnz
test
sbb
xor
mov
mov
dec
test
fstpl
ret
call
and
push
je
mov
add
sub
xor
call
cld
jo
scas
test
hlt
cmp
and
dec
movsl
and
test
and
pushf
sub
add
arpl
and
ret
pusha
pop
xor
jmp
jno
int
cmc
gs
inc
and
mov
push
add
mov
lods
sub
sub
or
jge
test
jge
mov
sub
scas
adc
dec
les
ss
jp
fsubrl
lock
add
add
add
rclb
inc
aas
add
dec
loope
jae
stos
push
dec
lock
icebp
cmp
push
add
jae
adc
inc
fcoml
fcompl
arpl
dec
mov
sub
inc
jge
jl
push
jnp
ret
and
add
jbe
add
andl
jo
andl
jecxz
into
xchg
ds
sub
push
loope
push
outsl
in
xor
mov
or
mov
push
movsl
lret
lock
or
xor
js
sbb
incl
cmpsl
insb
add
push
mov
jmp
fsubs
into
pop
cmpb
add
add
in
sbb
test
in
add
imul
enter
inc
outsl
dec
out
fld
fucomp
pop
fld
sub
sbb
out
mov
out
inc
lods
push
xor
test
cmovge
lods
push
and
mov
push
xor
sbb
mov
push
or
mov
fwait
cmpsb
in
or
push
or
push
out
mov
pop
fsubs
jne
push
cmp
cli
push
and
mov
lahf
fsubl
sbb
sub
push
in
pushf
push
push
adc
and
ljmp
mov
fnstsw
movswl
imul
sbb
loop
inc
jle
sbbb
lret
dec
xor
fmull
pusha
outsl
arpl
insl
or
push
mov
jo
pop
js
fldt
fwait
mov
adc
sbb
adc
and
or
sbb
imul
leave
xor
sarl
xchg
push
cmp
hlt
mov
lret
dec
sbb
xorb
scas
or
movsb
mov
push
dec
cmp
push
pop
inc
xchg
subl
jo
and
pop
shlb
and
jns
mov
adc
or
sub
sbb
dec
jo
sub
adcb
add
mov
test
lock
shlb
jbe
mov
inc
movsl
mov
mov
xor
lret
mov
fidivrl
es
outsl
xor
je
inc
test
xchg
adc
dec
mov
fwait
pushf
add
cltd
mov
loopne
xor
inc
aas
or
adc
or
dec
adc
jo
enter
jne
adc
fstpl
lret
je
imul
inc
xor
pop
lret
push
sti
jbe
loopne
or
or
js
mov
lea
repnz
jle
mov
or
or
add
loope
inc
push
or
lds
or
add
pop
xor
dec
aam
jo
pop
mov
es
or
fldcw
cmp
dec
push
or
xchg
push
xchg
dec
add
push
arpl
jmp
aas
sub
adc
sti
add
daa
testb
adc
loopne
test
add
pop
mov
xchg
je
mov
stos
stos
jp
pop
pop
rcll
sub
mov
cmp
orb
in
pop
add
lcall
scas
scas
inc
jns
mov
or
inc
lea
pop
xor
lret
mov
fs
rolb
push
mov
loop
rolb
cmpl
ret
pop
repz
idiv
pop
inc
sbbb
and
mov
out
xchg
mov
aaa
mov
inc
adc
iret
mov
jbe
dec
mov
sbb
cmpb
jb
cmp
and
mov
cmp
fisubrs
sub
jae
and
pusha
add
dec
decb
inc
sarb
cs
test
add
push
and
inc
mov
sub
pop
clc
in
adcl
cwtl
je
inc
mov
or
cmp
mov
std
push
enter
aam
or
rclb
xor
cmp
insl
insb
clc
pusha
mov
movsl
das
decb
mov
loopne
loopne
mov
shl
add
jg
sub
sub
not
js
test
xchg
mov
and
es
sahf
or
push
or
lock
cs
aam
out
xchg
inc
xor
jl
xor
out
pusha
pop
out
xor
sub
inc
sbb
mov
xorb
dec
jns
dec
cs
dec
lea
inc
jno
push
push
rcr
inc
add
sbb
test
mov
rol
int3
loopne
push
out
or
inc
rcrl
dec
xor
add
orl
lods
fsubr
pop
pop
push
push
jb
mov
repnz
incb
mov
xor
cmp
and
scas
shlb
sub
lock
aas
mov
mov
cmp
fstl
movsb
addr16
cmp
dec
push
or
ss
test
inc
add
inc
popa
push
dec
adc
fmuls
nopl
jne
daa
andl
out
into
lea
add
jecxz
je
jl
stos
iret
and
mov
and
adc
jge
mov
and
dec
and
dec
lods
rol
lret
ss
ret
pop
iret
or
fidivl
or
aam
adc
pop
cwtl
cmp
dec
and
add
stos
lret
jne
and
nop
shll
add
lds
cmpsb
mov
cmp
jns
inc
inc
add
addr16
inc
push
dec
mov
inc
pop
add
dec
inc
sbb
je
dec
add
mov
xchg
dec
adc
adc
arpl
je
mov
xchg
pushf
jmp
inc
and
mov
rcrb
cmp
dec
and
js
add
jb
mov
push
insb
push
or
testb
mov
rorl
push
repz
xchg
mov
sbb
push
jo
push
or
mov
adc
scas
cmp
xchg
or
ss
cmp
je
or
pop
or
out
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
data16
and
xchg
add
call
fcompl
fistpll
sbb
shlb
xorl
nop
sub
ss
adc
test
dec
ret
test
jmp
xor
mov
lods
sbb
xor
mov
push
imul
adc
or
outsl
notl
notl
addr16
mov
and
orb
es
in
fnstenv
xlat
xchg
push
xor
fistpll
jbe
or
add
std
rclb
inc
mov
jge
shlb
dec
mov
cmp
test
add
mov
popf
subb
out
lods
cmpl
mov
ret
lea
jmp
jle
pop
lods
jo
dec
pushf
cld
mov
scas
sub
add
movsb
sbb
inc
push
push
pop
add
add
lods
inc
daa
lods
out
xor
jmp
sub
add
push
or
inc
sbb
xchg
das
or
push
or
movsb
inc
out
das
fldl
dec
dec
dec
jns
neg
movb
add
leave
clc
jl
cltd
push
test
jae
xor
and
or
add
xchg
mov
add
popf
js
add
push
rclb
popa
xchg
mov
push
rolb
push
jno
sbb
ss
inc
cmp
inc
pop
cltd
cli
popa
movsb
xchg
sbb
add
pop
cmp
sbbb
mov
ret
dec
iret
ret
jmp
add
rcrl
or
ret
jge
xchg
sub
adc
bound
mov
outsl
fists
shlb
arpl
mov
test
mov
ret
aam
into
and
mov
push
jmp
and
mov
push
cmp
clc
xchg
pop
es
push
fadd
push
xor
xor
ret
push
add
jl
push
mov
fcoml
in
clc
in
and
movb
fmuls
or
xchg
je
adc
orl
or
xchg
sahf
and
aam
lock
cld
push
and
movsl
jae
push
rcll
push
push
test
xchg
incb
pop
ret
xchg
test
pop
in
jl
out
ret
add
or
divb
push
jle
cmp
sbb
add
push
dec
and
add
mov
sub
mov
popa
xlat
inc
dec
sub
leave
and
add
insb
movb
mov
and
mov
test
popf
aaa
inc
mov
fstpt
mov
icebp
add
lock
ret
es
shll
add
xor
xor
inc
aam
sub
add
cmp
call
xor
scas
and
add
jb
cmpsl
or
shlb
sbb
insb
ja
imul
hlt
nop
dec
xchg
mov
sub
adc
es
push
clc
lods
pushf
pop
xchg
ret
sbb
sbb
sbb
shlb
insl
bound
and
jbe
lds
dec
fs
cld
add
hlt
shrd
sbb
dec
cmp
pop
inc
jge
sbb
clc
cmpsb
in
mov
jmp
cmp
xor
out
into
in
xchg
cld
sub
xor
and
jl
jmp
adc
incb
push
adc
test
add
push
bsf
andl
xor
sbb
call
in
and
imul
sbb
js
jg
icebp
pop
sub
jb
xor
pop
out
sbb
or
shl
fimull
mov
and
push
pop
cmp
sbb
adc
push
lock
sarl
push
jg
mov
lods
dec
les
inc
dec
in
jb
or
or
rorb
mov
or
xchg
and
lods
cmp
push
cmpl
push
mov
mov
test
push
loope
es
cmp
mov
adc
adcb
mov
scas
jp
pop
gs
ficoml
sbb
push
sbb
sbb
push
jmp
lock
movsb
adcl
mov
test
xchg
inc
or
js
sahf
jl
cli
ret
aaa
push
pop
or
rolb
lea
and
pop
xor
pop
push
dec
inc
inc
add
je
das
push
repnz
je
add
and
jbe
rolb
jl
into
shll
inc
add
pop
xor
push
sbb
outsb
cmp
andl
enter
sbbb
jp
xor
jne
push
cmp
nop
push
es
imul
adc
sub
inc
pop
inc
mov
leave
xor
enter
sbb
cmc
mov
push
out
dec
fwait
cs
out
push
adc
xchg
add
mov
inc
or
sbb
stc
mov
push
add
jbe
push
fwait
popf
jmp
xor
jo
mov
ds
jle
add
or
pop
pop
mov
sbb
pop
or
imul
mov
insb
fs
je
dec
or
and
pop
or
or
sub
dec
nop
rcrb
popa
cmp
scas
rorb
clc
adc
push
inc
das
popa
sti
orl
mov
mov
pop
or
xor
test
ret
mov
cmp
dec
es
push
xchg
inc
jmp
jne
test
mov
push
mov
and
adc
pop
push
cmp
cmp
mov
cmovs
and
push
mov
clc
sub
jmp
addb
adc
nop
push
push
out
or
test
cmp
mov
notl
or
mov
inc
cmp
clc
xor
add
sub
ss
test
pop
popa
add
push
popa
mov
or
add
and
clc
inc
test
add
push
sbb
adc
nop
rorl
test
pop
pop
jg
ficoml
cld
insl
stos
push
push
push
and
or
xor
leave
xchg
and
ds
pop
ret
push
sub
pop
dec
dec
std
fildl
add
mov
dec
ljmp
imul
shrb
mov
mov
cmc
push
dec
mov
pop
inc
mov
js
and
mov
lds
cltd
fwait
adc
inc
ret
loopne
mov
cmpl
add
out
or
push
push
pop
jo
sbb
mov
and
fucomi
or
mov
dec
cwtl
shlb
mov
push
mov
pop
xchg
or
xchg
shr
dec
xlat
sbb
or
jb
scas
nop
icebp
dec
aaa
dec
jb,pn
pop
mov
inc
ss
push
popa
test
sbb
dec
je
dec
je
dec
push
push
jmp
or
jmp
sub
lea
inc
out
mov
pop
adc
xor
dec
push
push
dec
ja
sbb
ret
fs
pusha
nop
cmp
or
sbb
data16
int3
or
sbb
test
xchg
mov
sbb
sbb
xor
addl
add
adc
cmp
lods
mov
je
mov
mov
xchg
fwait
jp
or
orl
mov
or
dec
insl
mov
or
repnz
fisubl
xchg
jl
inc
xchg
loopne
adc
adc
mov
lret
sub
xor
add
jae
pop
add
mov
aas
xchg
xor
sbb
mov
mov
pop
cmp
mov
or
pop
dec
xor
es
sbb
add
dec
lods
xchg
adc
push
xchg
call
mov
lock
or
cmp
adcb
dec
xchg
or
shr
add
or
int
ljmp
add
shr
or
mov
push
push
adc
mov
dec
call
and
add
mov
notb
lock
sub
mov
movsl
cmp
ja
pop
or
inc
jbe
add
jl
add
imul
fimuls
test
adc
pop
sbb
repnz
inc
fisttpl
cmp
adc
bound
test
xor
lret
lret
clc
andb
pusha
lret
mov
dec
push
or
stc
mov
jmp
rolb
dec
pop
or
movsl
out
nop
mov
ja
sbb
pusha
cmpsb
and
xchg
xchg
leave
mov
es
adcl
cli
ficomps
adc
push
loopne
cwtl
xor
push
add
push
add
xlat
shl
cli
jne
mov
sbb
mov
inc
mov
add
pop
imul
je
data16
sub
mov
push
jbe
test
mov
lock
and
inc
aas
pop
add
add
add
shll
das
and
rcrl
pop
orl
arpl
or
pop
lret
repnz
lea
enter
repnz
xor
pop
or
lret
jecxz
and
addl
lret
xchg
sub
and
test
dec
and
sbb
jo
inc
int
mov
push
dec
or
mov
xor
mov
ss
or
or
cmp
and
seto
and
sbb
fs
pop
cli
add
inc
add
jno
pop
pop
pop
jmp
mov
lret
nop
mov
int3
pop
fucom
push
orl
add
sub
pop
add
inc
add
sub
jno
mov
push
xor
or
cmp
sbb
xor
or
clc
sbb
fistps
and
pop
lret
push
adc
repnz
bound
jo
pop
js
add
jbe
lret
add
outsb
mov
dec
or
ret
sub
js
mov
xor
dec
arpl
orb
ja
lret
push
rcr
adc
stc
jo
mulb
add
cmp
pop
call
and
jmp
imul
sahf
ss
add
call
pushf
movb
jns
add
dec
inc
xchg
or
mov
rcl
add
push
loopne
in
mov
cmp
jle
inc
and
sbb
xchg
ret
mov
pop
scas
es
int
sbb
mov
dec
insb
xor
outsl
mov
fcoml
xchg
xchg
in
xor
cmpb
je
fidivl
push
incl
adc
or
sbb
push
jo
push
pop
xchg
or
add
out
test
and
push
dec
test
insl
fwait
orb
and
aaa
jne
mov
mov
cmp
sub
jmp
xorb
cmp
jne
mov
jnp
in
jmp
dec
add
and
daa
testb
or
or
cltd
or
adc
fxch
aam
sar
roll
leave
add
mov
je
mov
iret
adc
or
rclb
jno
je
xor
divb
mov
addl
movsl
xchg
pop
add
sti
lea
mov
sbb
pushf
xchg
test
add
lret
ds
sbb
and
roll
pop
pop
jmp
sub
add
push
cld
imul
sub
inc
inc
push
neg
neg
sbb
out
adc
sbb
inc
sbb
dec
sbb
xchg
xor
sbb
mov
sbb
push
push
rorl
out
and
fsts
dec
icebp
sbb
adc
test
lret
adc
sbb
mov
and
fwait
test
xchg
cmp
dec
jne
pop
pop
pop
inc
mov
xor
and
or
pop
adc
ret
loope
shr
dec
rorb
sub
adc
cli
xor
jmp
enter
cld
lock
push
js
ret
sbb
adc
pop
das
add
mov
out
sub
lret
inc
mov
jne
into
add
pop
push
jae
adc
popf
insb
sub
hlt
imul
das
add
aad
adc
mov
and
into
jbe
movsl
das
test
aas
xor
pop
jmp
das
jne
ss
or
inc
or
push
jne
pushf
pusha
mov
movsb
xor
inc
xor
addl
cmp
jne
sti
mov
sbb
or
xchg
mov
jo
add
jmp
test
and
rolw
jo
cmp
dec
fst
xor
cld
inc
ss
mov
aaa
dec
sub
daa
leave
test
cmpsb
stc
xor
inc
jp
or
adc
cmpsb
je
cld
mov
xchg
je
aam
jne
pop
cmc
pop
inc
add
add
adc
pop
enter
icebp
lea
mov
ja
inc
and
scas
inc
mov
pop
sbb
adc
es
adc
mov
je
adc
jl
iret
sti
jg
out
push
cmp
ja
add
cmp
adc
cmp
jne
mov
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
cmp
mov
adc
sbb
ss
lret
and
pop
add
add
loopne
cmp
aas
push
jb
scas
pop
push
movb
jmp
dec
lahf
adc
or
sub
adc
iret
cmp
push
push
or
test
push
mov
push
adc
or
inc
add
xor
cmp
sub
out
rolb
mov
aad
sbb
pop
mov
sbb
sbb
mov
sub
push
pop
clc
popa
mov
fdivr
ffree
inc
xlat
inc
jb
mov
push
mov
sbb
inc
xchg
cmp
push
add
push
add
cmp
mov
jmp
adc
shr
shr
fildll
lock
imul
lea
sar
hlt
mov
lcall
movswl
pop
neg
in
xchg
push
push
xchg
push
into
out
jge
cmp
popf
push
sahf
mov
xor
xorl
push
cmpsl
cmp
mov
addr16
dec
push
cwtl
mov
cvtps2pd
push
add
jl
fldln2
or
decl
jle
add
inc
ds
inc
pushf
loopne
pop
sub
mov
outsl
or
test
and
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
inc
jle
mov
mov
inc
sbb
ret
mov
loopnew
and
ds
testl
iret
push
push
fsubrl
adc
xlat
or
inc
mov
lds
loopne
lea
rolb
xorb
inc
mov
imul
push
lea
mov
xchg
push
push
pop
mov
xchg
dec
push
jo
call
xchg
cmpsl
inc
ja
or
ret
movsb
cltd
ret
fcomp
sub
mov
push
insb
in
xchg
mov
mov
cli
mov
in
push
insb
fnsave
rorb
jno
sbb
loope
bound
shll
rol
pop
or
sub
and
and
rorb
sbb
negl
push
lret
movl
mov
and
insl
adc
mov
andb
int3
shrl
loope
shll
or
mov
dec
mov
xor
insb
jge
sar
lock
dec
and
sti
stc
repnz
in
add
cli
divb
add
cmc
mov
add
fadds
loopne
xchg
cmp
sbb
adc
mov
pop
fisubrl
cwtl
fimull
xlat
pushl
and
cmp
xor
and
data16
mov
insb
xchg
cmpsb
mov
enter
xor
xor
mov
sbb
sbb
add
outsb
inc
repnz
pushw
cmp
loop
out
jge
push
sbb
mov
test
push
insl
mov
inc
cmp
dec
in
or
daa
adc
jne
mov
cmp
es
shlb
add
aam
dec
xchg
pop
xchg
int3
jbe
dec
sub
cmp
insb
sbb
shlb
dec
ljmp
xor
test
adc
fmull
or
lret
push
push
lret
fcmovu
sub
insb
xchg
mov
dec
or
insl
test
cli
mov
int3
jg
add
xchg
add
or
sub
or
mov
idivb
or
adc
dec
gs
xchg
lock
xor
cmpb
jge
jge
dec
add
jb
aas
push
and
or
add
fildl
inc
sub
loopne
add
nop
sbb
lret
fstl
add
sbb
sub
setae
mov
idiv
psubq
sbb
movb
and
cmp
jle
push
insl
push
aad
pop
outsb
call
inc
add
cltd
and
or
dec
lea
lret
dec
rcrb
xchg
inc
cli
pop
inc
rcrl
lcall
cld
xor
fiadds
inc
imul
adc
loopne
xorl
call
mov
pusha
or
dec
jbe
pop
add
and
mov
push
in
jo
js
fisubs
daa
add
add
push
sar
sub
mov
ds
pushf
or
int
xchg
xchg
mov
xabort
mov
and
in
inc
dec
enter
ljmp
push
shlb
add
xor
sarb
lret
call
and
testb
or
lock
inc
ljmp
jmp
hlt
mov
orb
sub
cmp
jge
push
lock
incb
bound
movb
dec
cmp
clc
pushf
inc
dec
add
add
fadds
dec
movsb
mov
and
ret
and
cmp
add
or
jo
rorb
cmp
pop
aad
test
jbe
ret
adc
loop
add
push
mov
lods
loopne
adc
adc
mov
push
add
add
add
test
sarb
adc
stc
lret
ret
inc
mull
or
push
push
adcb
push
or
cmc
adc
or
enter
pop
or
jne
or
push
pop
scas
je,pt
cmp
ret
sbb
adc
mov
je
mov
sub
xor
and
push
add
test
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
pop
sub
mov
fisubrl
and
sahf
fld
aam
pop
push
mov
cmp
prefetchw
sahf
inc
ret
or
aad
cwtl
push
loopne
adc
inc
add
imul
push
or
push
lcall
push
adcl
je
inc
sbb
add
je
jmp
pop
jle
pop
or
out
or
add
mov
jle
jne
and
mov
add
test
pusha
aaa
loope
add
shlb
ret
filds
push
cmp
scas
popa
dec
sbbl
xchg
sub
rcr
nop
clc
mov
dec
mov
inc
test
sbb
pusha
lock
push
scas
adcl
cmp
subl
xchg
mov
rcrb
jge
loopne
sbb
rolb
xrstor
loopne
sub
cltd
and
dec
sti
into
or
add
or
cs
mov
add
push
push
mov
mov
sbb
repz
and
sbb
inc
jg
into
jge
lret
into
mov
call
mov
pop
or
faddp
loopne
sahf
pop
mov
sub
hlt
shlb
or
and
dec
sbb
stos
sub
pop
loopne
and
adc
mov
sub
lcall
pop
enter
xchg
out
adc
sub
into
add
movsb
fisubs
push
and
or
test
mov
and
cltd
and
popf
ret
cwtl
sbb
or
sub
jmp
pusha
sbb
mov
lret
fsub
lret
push
cmp
xchg
loop
sbb
pop
mov
add
mov
and
xchg
mov
ds
sub
push
add
xchg
sbb
fsts
sub
mov
mov
push
xor
add
das
and
jl
ljmp
rolb
jmp
lret
dec
add
jo,pn
add
add
repz
xchg
push
sahf
ficompl
dec
les
inc
mov
cmc
sbb
sbb
mov
add
or
out
je
mov
ljmp
hlt
mov
cmp
jb
cmp
jbe
ror
adc
in
mov
fbstp
movsl
pushf
xchg
loopne
mov
cs
cmpb
fisubrl
sub
ljmp
shrl
and
fadd
sbb
jle
add
repz
and
popa
rolb
xor
popa
test
jne
inc
and
add
sbb
roll
jmp
pusha
adc
pop
mov
jno
and
push
push
mov
es
or
in
rcrb
js
movsb
cltd
sbbl
fmul
addb
movsl
test
pop
cmpl
ret
sahf
mov
lret
xor
jb
xor
xchg
dec
cmpsl
xor
cmp
adc
loope
movsl
ljmp
insb
sub
push
mov
aam
inc
push
aaa
sbb
dec
js
add
jle
mov
or
pop
cmp
test
sub
add
mov
clc
xchg
pop
xor
lock
pop
stos
sahf
mov
cs
jl
inc
push
mov
mov
push
bound
stos
and
jl
adc
pop
lds
fstpl
lahf
xor
push
loope
aaa
jno
pop
inc
test
pop
test
mov
hlt
push
sbb
je
and
push
ret
ss
js
push
push
inc
sub
push
or
inc
bound
in
or
pop
and
mov
test
mov
xor
mov
mov
sbb
imul
in
xchg
sub
cli
push
fldcw
xchg
jne
jg
and
sbb
xor
sub
mov
sub
rorb
aad
popa
pop
enter
inc
sbb
lea
sub
push
enter
in
adc
paddd
cmpsl
add
lret
mov
push
mov
je
data16
outsl
cmpsb
loopne
jmp
dec
fs
and
xlat
xor
add
cmp
mov
push
js
push
nop
jno
mov
subb
es
adc
cmp
or
leave
inc
push
jo
inc
sub
enter
cmpsb
mov
xor
pop
dec
cmpsl
cmp
movb
mov
ss
lods
inc
dec
and
inc
xchg
loopne
mov
xor
push
cvtpi2ps
mov
adc
sbb
rolb
aam
xor
and
aam
icebp
xorl
push
push
clc
adc
aad
and
push
fisubl
mov
dec
aas
mov
sbb
inc
mov
repnz
cld
and
push
push
and
movsl
inc
repz
xlat
xchg
jmp
add
mov
pop
sbb
ret
mov
loope
adc
js
inc
cld
add
out
les
pop
dec
pop
test
pop
xor
push
sub
sbb
in
mov
fstl
and
cmp
jmp
jl
push
mov
ret
add
push
shlb
enter
movsb
adc
xlat
dec
or
aam
ljmp
sbb
cld
jae
pop
jmp
jo
inc
popa
mov
addb
rcrb
cltd
add
add
xlat
test
rorl
mov
xor
sbb
pop
pop
push
and
and
fists
pop
sub
adc
lods
pop
rol
sbb
mov
sarl
or
and
ret
cmpsl
add
mov
cmpsb
mov
add
or
pop
dec
jecxz
adc
inc
popa
cmp
test
or
shlb
inc
dec
in
mov
sti
gs
inc
sbb
push
pushf
ret
and
xor
add
pushf
adc
xor
iret
int3
jmp
mov
mov
mov
xchg
add
or
push
loopne
pop
pop
xchg
call
push
rorb
sbb
push
push
push
inc
xchg
clc
pop
mov
push
fadd
les
shlb
dec
cmp
inc
iret
data16
scas
cld
adc
lret
dec
cwtl
mov
int3
roll
call
mov
pop
mov
xor
inc
mov
cltd
enter
adc
adc
cmp
sbb
nop
and
add
xchg
add
rcrb
xchg
lock
jne
mov
repnz
push
mov
sbb
cmp
stos
and
hlt
cmpsb
adc
outsb
insl
clc
pop
xor
push
jne
pop
movsb
or
iret
mov
lahf
push
movsl
int3
sar
addb
ljmp
and
aam
add
clc
sub
icebp
pop
sub
add
add
mov
push
and
or
push
fisttps
jge
dec
ret
xor
std
xchg
rcrl
add
jo
jmp
push
dec
loope
pop
mov
adc
imul
xchg
mov
mov
and
sbb
xchg
shl
and
das
loop
jo
push
jo
lods
arpl
imul
fidivrl
addl
fdivrl
fsubrp
sub
ret
and
rclb
orb
cmp
sub
js
movsb
sbb
pop
jp
movsl
jge
adc
mov
sbb
cmp
ja
jbe
adc
xorl
push
roll
xlat
cwtl
xchg
and
sbb
pop
sbb
cmp
jmp
sub
repnz
fidivrs
test
jg
adc
lock
cs
or
lcall
push
add
das
icebp
cmp
push
pop
or
xlat
shlb
dec
call
shll
mov
lods
pop
push
dec
mov
pusha
jl
ret
pop
add
dec
and
mov
sub
pusha
or
mov
dec
ljmp
sahf
addb
fimull
jp
lock
adc
test
sub
push
pop
sbb
add
pop
repnz
sbb
in
sub
mov
push
inc
jl
clc
incb
je
cmp
cmp
aas
jns
mov
mov
jle
sbb
mov
dec
sarb
adc
jg
mov
push
call
imul
imul
xor
jp
ja
push
cltd
jo
xor
push
addl
insl
jl
or
negb
pushl
mov
push
pushf
xor
add
cmp
idivl
in
xorb
in
or
test
ret
and
sub
inc
stos
xor
dec
push
imul
test
mov
inc
sbb
fimull
push
icebp
mov
std
data16
xchg
xor
dec
call
mov
pusha
jno
push
sbb
test
pop
shrb
push
jae
push
hlt
popa
ret
loopne
leave
or
and
in
mov
jl
mov
test
push
add
add
adcl
add
or
stc
or
mov
loopne
cmp
loop
es
sbb
xor
data16
sbb
jmp
call
loopne
insl
call
inc
cmp
xor
push
push
add
fildl
cli
push
and
or
fdivr
insb
cmovno
jmp
pop
jl
pop
xchg
enter
push
repnz
outsb
cwtl
push
sub
xchg
xchg
rcrb
lods
or
adc
add
sbb
adc
loopne
or
addl
push
ljmp
das
jmp
or
adc
popa
loop
sub
les
and
scas
mov
outsb
outsb
xlat
in
shl
aaa
loope
pop
push
into
fdivs
outsl
inc
je
sbb
insb
xchg
test
inc
aaa
and
jmp
and
ss
pop
leave
cmpl
dec
cmpsb
pop
adc
sbbb
jae
inc
mov
inc
cld
aaa
mov
jle
cmp
jg
push
dec
rcl
sbb
rcl
xor
lock
jge
dec
adc
std
adc
cmp
xchg
outsb
rcrb
pop
push
pop
mov
jl
pop
scas
rcl
stos
ds
cmpl
or
cmp
iret
push
push
fs
call
xor
push
stos
ret
mov
mov
rcr
or
cmp
sbb
shrl
add
mov
pop
cmp
adc
or
inc
add
enter
mov
mov
dec
xchg
adc
dec
inc
mov
ja
dec
adc
repnz
and
je
or
adc
adc
or
fldcw
js
push
sbbb
scas
mov
dec
adc
mov
sbb
or
dec
add
jl
push
scas
cmp
cmp
or
je
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
inc
jmp
pop
add
cltd
jp
inc
push
dec
insb
pop
mov
add
ret
adc
xor
sub
sar
add
and
push
into
icebp
pop
adc
adc
cmp
mov
je
dec
jne
push
lds
pop
push
std
ja
fsubs
les
rclb
sbb
mov
jo
cmp
jmp
adcl
mov
jne
push
sub
sbb
xor
pushl
or
jne
lds
enter
mov
mov
arpl
test
fisttpl
mov
adc
or
sbb
mov
cli
push
je
or
xchg
pop
dec
loopew
inc
sbb
jg
mov
in
sub
and
add
in
xchg
lods
sbb
test
push
inc
inc
hlt
push
cli
push
jb
adc
cmp
pusha
lea
cmpsl
sbb
fstl
ret
cmp
jl
sbb
add
testb
xchg
add
push
int3
push
cmpb
je
sarl
pop
lock
jne
add
xchg
jmp
pop
xor
jnp
ficompl
fcmovb
mov
jo
shlb
jb
arpl
pop
sbb
adcl
addb
mov
push
mov
push
adc
loop
mov
sbb
push
xor
jae
inc
sub
or
pushf
mov
dec
adc
sbb
adc
roll
test
xchg
mov
mov
sub
std
jnp
insl
ret
hlt
jne
adc
fldt
rorb
rcll
test
jno
das
and
xchg
pop
pop
fs
xlat
rolb
pop
jle
sahf
dec
clc
mov
mov
mov
lahf
xor
inc
cmp
jecxz
les
jb
adc
mov
push
stos
lret
shlb
adc
int
jg
jg
movsb
and
add
sub
addb
cmovne
pusha
dec
imul
sbb
push
sub
mov
mov
or
dec
cmpsl
cmp
dec
hlt
adc
pop
cld
cltd
jle
out
cmp
pop
fiaddl
and
push
xchg
inc
sub
fmull
sbb
rol
mov
dec
jg
adc
orl
jg
jmp
adc
or
shrb
ror
sbb
mov
call
loopne
add
adc
cmp
mov
jge
test
lods
jb
or
cmpsl
push
xchg
loopne
loopne
gs
and
mov
pushf
and
cmp
pop
pop
push
js
scas
or
sbb
sub
and
jns
inc
mov
shrb
scas
and
or
push
adc
gs
sub
cmpsl
adc
mov
or
jbe
inc
lret
orl
stc
pop
sti
xchg
or
inc
insb
and
xchg
mov
jne
lock
int
jns
mov
int3
xor
pop
mov
or
sbb
adc
xlat
je
cmp
adc
cmp
jb
imul
add
or
inc
add
dec
inc
dec
loopne
ret
jge
push
ficompl
rorb
inc
sbbl
je
cmp
xchg
das
sub
jns
jb
cmp
jbe
clc
push
sbbl
scas
in
adc
push
imul
call
and
push
imull
jg
inc
mov
and
and
inc
test
je
mov
cmp
shlb
pop
es
jmp
lret
les
inc
scas
push
inc
pop
pop
test
and
adc
or
fs
pusha
push
xchg
mov
mov
mov
lods
pushf
adc
or
push
fwait
and
inc
in
fstl
xchg
popl
les
pop
jle
add
sub
mov
push
ja
pop
test
lahf
and
inc
pop
sub
stc
add
popl
xor
dec
pop
lahf
jne
add
inc
jb
in
add
dec
cmp
mov
dec
cltd
push
pop
push
sahf
pop
enter
and
out
xchg
xorb
out
pop
fiaddl
adc
sbb
shrl
cmpsl
aas
or
add
push
pop
and
and
push
dec
lcall
push
add
pushl
and
fld
fxch
fistps
push
push
ss
insb
or
inc
jp
cmp
jmp
dec
sbb
fistps
icebp
aaa
dec
cmp
ret
rolb
ret
insl
fwait
push
jmp
cmp
fcomp
cmp
adc
ret
sbb
cmpsb
pop
sbb
cmp
cmp
stos
movsl
in
jb
test
jb
jb
or
ss
jb
or
std
nopl
lea
mov
sarl
xor
mov
pop
xchg
rorb
push
ret
jg
shll
aam
jmp
adc
ljmp
insb
mov
movsl
imul
in
and
daa
ss
mov
imul
xor
int
and
xchg
or
adc
aad
pusha
inc
dec
sbb
out
or
add
cmp
dec
test
call
or
enter
enter
mov
adc
add
int3
orb
pop
cld
dec
ss
add
jmp
inc
daa
fs
cs
rcr
inc
test
and
xchg
fists
add
rcrb
jo
inc
xlat
sbb
jge
xlat
sbb
daa
jbe
xchg
jae
sbb
mov
mov
pop
rol
push
adc
adc
mov
mov
filds
add
fs
arpl
jl
cmpsl
cld
into
push
test
xor
sub
or
lock
inc
movsb
mov
pop
popa
sub
pusha
fldenv
test
in
mov
dec
lock
adc
adc
rorl
pop
mov
dec
mov
adc
imul
inc
dec
insb
xchg
outsl
adc
fildl
in
rcll
cmp
add
popa
or
arpl
add
add
fistpl
lock
sub
pop
pop
fstpt
sbb
dec
dec
sbb
mov
inc
mov
lea
mov
in
popf
dec
loopne
cld
adc
cmp
sbb
mov
cwtl
in
js
fcompl
xchg
xchg
cs
daa
addb
dec
daa
insl
rorl
fsubr
outsl
sub
mov
outsb
movsb
les
fs
mov
sarb
fldl
lret
pop
pop
xchg
pushf
or
in
cmc
movl
mov
out
repnz
add
push
jno
pusha
xor
and
fs
dec
jo
js
or
jl
xchg
fsubr
adc
dec
dec
sbb
sub
addl
pop
add
push
mov
call
pop
cmc
insl
jl
std
ret
fcmovnb
lea
int
mov
out
or
adcb
adc
shlb
inc
adc
mov
inc
fs
or
in
in
sti
gs
jge
mov
cmpsl
dec
filds
movsb
fildll
rclb
repnz
push
sbb
sbb
mov
das
inc
jne
test
rclb
inc
mov
pop
aas
ret
sbb
lahf
pop
push
imul
outsl
scas
add
scas
pop
adc
ret
loopne
out
xchg
iret
push
lods
add
icebp
inc
cmp
sub
fstpl
or
inc
or
adc
loopne
adc
mov
loope
roll
iret
add
push
cmp
adc
inc
mov
mov
leave
adc
mov
lcall
or
dec
mov
rol
cmp
ret
push
cmp
lds
lock
inc
and
cmc
dec
lea
pushf
or
adc
test
pop
shl
or
cld
loop
or
push
and
nop
sbb
jecxz
mov
ficoml
add
push
push
xchg
dec
or
pop
or
insl
stc
cmc
inc
insl
push
stc
sbb
sbb
rorb
loopne
mov
push
je
xchg
fcompl
jne
jmp
or
test
mov
mov
inc
in
cltd
imul
in
rorl
adcl
jo
popl
mov
cwtl
xor
fs
adc
xor
in
push
enter
out
stos
mov
and
push
in
push
sbb
add
loope
push
pop
jl
dec
push
movsl
hlt
out
add
ret
push
fadds
cmpsl
push
xor
pop
nop
call
lcall
imul
push
jmp
mov
fildl
adc
sbb
xor
testl
jns
adc
jo
xchg
add
outsb
imul
jb
adc
cmp
or
pop
mov
add
es
pop
add
imul
jmp
mov
movsl
pop
and
lods
inc
inc
mov
in
arpl
sub
mov
and
sbb
mov
fstps
mov
mov
and
lods
ljmp
fsubr
idivl
pop
push
add
pop
or
jmp
loopne
pop
mov
fwait
nop
stos
loop
dec
mov
pop
dec
inc
push
adc
aad
jmp
sbb
xchg
bswap
xor
jg
movsl
sbb
push
sbb
loope
mov
mov
push
xor
xor
in
call
add
push
sbb
cmpsb
sbb
and
push
faddl
int3
int3
jno
loop
dec
fwait
clc
in
insl
or
xlat
or
xlat
xchg
inc
repnz
in
xchg
clc
mov
inc
repnz
pop
ret
push
nop
pop
xchg
lea
xchg
push
in
in
adcb
out
or
shrb
mov
or
icebp
mov
movsb
sti
sbb
xor
shl
sub
add
mov
xchg
out
aad
loop
lds
enter
dec
out
popa
in
xchg
fsubl
mov
or
add
imul
in
dec
imul
or
in
test
sar
push
ret
mov
aam
push
test
push
lock
cs
xchg
or
or
mov
or
mov
or
inc
je
popa
lods
enter
mov
in
aad
hlt
gs
aaa
xchg
dec
jae
adc
test
in
pop
mov
fs
sbb
or
test
xchg
add
std
adc
icebp
aam
mov
and
adc
adc
dec
sub
cmp
imul
arpl
pop
push
and
adc
les
mov
cmp
bnd
mov
add
ret
xor
repnz
shlb
and
movsl
mov
cmp
fdivrl
repz
jo
mov
add
dec
mov
shl
das
popl
and
sub
or
popa
pop
mov
stos
scas
aaa
pop
fs
mov
adc
stos
xchg
xchg
dec
add
sub
add
cld
mov
rolb
inc
bound
call
in
pop
jne
aam
in
hlt
sbb
xor
rcrl
cmc
dec
enter
add
ret
adc
xorl
prefetch
push
das
rcrb
xchg
test
aam
mov
test
jge
sbb
xchg
call
ret
movl
jno
insb
adc
sub
and
subb
stos
dec
pop
push
lea
dec
sub
adc
push
add
xor
jecxz
stos
pop
ja
push
imul
inc
xchg
stos
outsl
in
insl
inc
jno
pavgb
ret
aas
mov
push
daa
cmpsb
add
xchg
sbb
add
inc
in
add
xchg
clc
lock
cltd
in
or
jno
or
std
xor
enter
pop
or
popa
and
arpl
adc
and
fsts
push
jb
icebp
pusha
fistl
sbb
cmp
cmp
call
in
cwtl
stc
sti
mov
repz
rep
sbb
insb
fdivs
jge
lahf
mov
jne
popa
subl
mov
sub
test
jns
xchg
aaa
lock
cli
sub
push
fmuls
sub
shrl
sti
push
cwtl
sti
mov
adc
int3
dec
xor
cld
add
jge
dec
and
inc
jne
shrb
pop
adc
jb
inc
or
or
or
jno
stos
imul
mov
insl
insb
add
movsl
cld
insl
jle
imul
xchg
out
dec
sbb
dec
nop
add
mov
lcall
pop
fs
mov
mov
cmp
add
inc
cmp
mov
pop
or
adc
inc
arpl
and
sub
add
in
hlt
mov
je
insb
out
mov
cmp
pop
inc
leave
loope
call
test
test
hlt
mov
xchg
pinsrw
and
dec
addl
shlb
outsb
push
in
maxps
iret
enter
pop
pop
fistpll
xor
mov
mov
movsl
sbb
sub
add
pop
inc
les
mov
call
mov
sub
add
and
and
push
loop
sete
push
inc
lods
jne
jge
fs
aad
xlat
pop
dec
adc
cmp
xor
push
addr16
xor
aam
xor
inc
sub
fcoms
xchg
lock
jnp
add
jns
or
test
movsb
sub
call
scas
or
pushf
pop
dec
mov
clc
int3
lea
mov
inc
xor
ror
add
aas
fmul
push
daa
dec
cli
adc
in
aas
leave
inc
mov
add
xchg
mov
psubusw
cmc
call
mov
leave
in
jns
shl
adc
mov
ficompl
add
arpl
test
push
data16
outsb
nop
add
inc
adc
ret
int
lds
sub
fidivrl
adcb
fistpl
sbb
cmp
xchg
sbb
cmp
pop
inc
mov
push
fldt
ja
lret
lcall
add
xor
aaa
test
sti
push
push
or
cmp
mov
or
cwtl
and
call
or
popa
pop
push
imul
call
pop
enter
outsb
fistpl
xor
sub
dec
pop
in
mov
push
xor
pop
xor
mov
ja
ret
push
xorb
prefetcht2
stos
adc
add
leave
dec
rorl
repnz
int3
into
adc
fildl
insb
movsb
testl
fdivrs
cmp
test
pop
orb
andb
sbb
daa
cmp
je
cmp
pop
or
loopne
xchg
and
rorb
lcall
shlb
and
outsl
push
fdivr
notb
sub
and
jne
adc
sbb
mov
dec
add
cmp
mov
inc
bound
fisttpll
dec
jne
mov
aam
pop
dec
jg
movsl
dec
imul
xchg
pop
pop
sub
mov
lcall
scas
shl
and
out
or
adc
in
jne
aas
lock
in
addb
sbb
mov
add
rorb
fldl
or
adc
add
imul
jae
sti
or
fs
or
aad
push
test
or
xchg
jbe
inc
pop
jl
sbb
mov
inc
test
inc
inc
push
popa
cmc
sub
fmull
sub
or
cmpsl
bound
inc
push
jne
and
jo
psubsb
pop
in
mul
add
xchg
cmpsl
inc
orb
sub
nop
inc
jl
call
cmp
cmpb
push
sub
or
or
in
adc
xchg
insl
sub
rolb
leave
add
fmul
dec
or
cltd
test
fistl
nop
mov
rclb
or
rclb
mov
pop
dec
jne
sub
in
and
loopne
and
imul
rcl
sbb
imul
in
dec
call
enter
inc
pop
or
adc
faddl
jne
iret
xchg
lret
sbb
cwtl
adc
nop
loope
rorb
mov
in
push
inc
push
fcoms
shlb
add
add
rclb
xor
ret
cltd
xchg
pop
jecxz
jge
stos
cs
dec
lcall
jb
imul
sub
add
adc
and
xchg
mov
sbb
inc
jno
adc
mov
in
xchg
sbb
call
add
in
sbb
fildl
dec
pop
pusha
dec
fcoml
adc
push
xchg
test
call
push
adc
inc
call
inc
sbb
fldcw
mov
inc
mov
push
or
lds
and
inc
adc
popa
cmovnp
orb
test
aam
sub
test
lds
push
dec
sbb
adc
test
mov
push
imul
je
xchg
nop
test
cld
in
adc
sub
pop
sub
push
stos
add
mov
sarb
gs
pop
popa
inc
adc
in
dec
mov
add
daa
int3
adc
fsubrl
mov
sub
imul
inc
fs
dec
lds
adc
adc
mov
jge
sub
xor
sarb
push
movsb
mov
daa
sbb
or
rcrl
shll
dec
sub
push
movsb
push
mov
sub
in
lods
inc
fiaddl
out
xchg
or
pop
inc
sbb
xchg
and
push
sbb
push
movsb
lea
inc
jl
es
fs
xchg
mov
leave
mov
sub
ficoms
xchg
inc
movsl
and
fsubs
test
inc
ficoml
sub
dec
mov
sbb
or
jge
xchg
mov
or
sbb
xor
std
xchg
movsl
dec
push
inc
cmp
cmp
nop
out
lods
push
fadd
lods
push
or
add
clc
cwtl
loopne
and
sub
mov
data16
shrb
xchg
inc
movsl
xor
cmp
or
jecxz
test
test
push
shll
dec
sti
test
out
sub
xorb
xor
and
mov
imul
pop
pop
test
inc
xchg
test
in
xor
leave
aam
imul
and
jne
push
insl
or
arpl
or
sbb
xor
movsl
aam
mov
rcl
and
inc
push
pop
mov
add
mov
add
sbb
push
xor
mov
pop
dec
adc
adc
clc
in
popf
movb
and
loopne
repnz
pop
cwtl
inc
js
lods
jbe
mov
nop
inc
mov
enter
fcomp
add
inc
mov
jmp
adc
fs
push
insl
test
push
dec
cmp
push
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
mov
fdivr
imul
test
push
push
fsubs
dec
adc
shlb
push
sbb
leave
adc
rcl
enter
movsb
sbb
mov
push
and
dec
and
mov
pop
or
or
adc
add
and
or
call
mov
mov
push
jmp
pusha
cs
test
in
mov
roll
js
rorb
cmp
adc
inc
cld
and
jo
sub
and
mov
lods
test
roll
jne
pusha
push
jb
call
enter
cld
mov
cmp
add
int3
test
sbb
lds
cmp
pop
les
dec
jb
pop
ktestw
mov
adc
mov
daa
and
sbb
push
xchg
inc
cmpsb
add
push
inc
mov
push
inc
rorb
pop
and
sub
xor
push
add
xor
mov
fmull
inc
popf
movsl
pop
adc
jns
sub
mov
or
loope
insb
mov
cmp
ja
mov
test
pop
inc
and
loopne
mov
mov
ja
add
dec
sbb
nop
loopne
lret
adc
sub
shrl
adc
ja
loope
sbb
push
test
mov
pop
sub
shrb
adc
push
cmc
test
jge
xchg
jbe
fwait
pushf
cmpsl
lea
add
scas
push
popa
icebp
add
or
xor
std
aam
cmpsb
inc
stos
push
sti
mov
fwait
mov
xchg
mov
pop
push
imul
and
push
sbb
cmp
jno
xor
test
daa
sub
xchg
rclb
or
movsl
jo
imul
dec
push
nop
imul
enter
ficoml
pop
jnp
mov
test
in
sub
pop
ret
add
fiaddl
jne
icebp
mov
test
loop,pt
fs
inc
imul
pop
cwtl
mov
jns
adc
push
adc
or
mov
test
jns
in
ljmp
leave
adc
iret
xor
jb
xchg
adc
imul
xchg
ja
aam
ret
mov
aad
xor
mov
add
fildl
imul
dec
jg
and
loopne
loope
subl
shlb
add
lret
out
popa
cwtl
test
lock
pop
lds
int3
mov
mov
pop
inc
fisubrs
or
cs
or
leave
mov
mov
out
and
fcmovnu
das
jb
inc
rorl
mov
mov
pop
punpcklbw
inc
shl
shrb
cmp
mov
inc
push
dec
imul
pusha
adc
adc
lock
lcall
cmp
jge
fsubl
mov
popa
adc
or
lea
pop
das
dec
sbb
mov
mov
das
fidivl
add
jmp
dec
je
inc
xchg
add
mov
pushf
adc
mov
in
nop
inc
push
int3
nop
icebp
xchg
push
sbbb
shrb
cmp
fsubrs
inc
push
mov
mov
xchg
fcmovne
and
jb
xchg
test
and
pushf
dec
cwtl
pop
nop
bswap
dec
dec
dec
dec
les
dec
movsb
pushf
xchg
mov
dec
jb
cwtl
unpckhps
jb
test
pop
aam
fcoml
dec
and
movsl
push
je
cmp
xchg
dec
pushf
in
add
in
pop
ja
push
cmp
dec
cmpb
jb
xor
or
out
test
rcrb
push
mov
psubw
pop
dec
mov
pop
dec
dec
jecxz
test
sub
mov
lods
negl
leave
adc
dec
dec
push
in
sub
pop
dec
pop
push
enter
xchg
popa
push
loope
mov
mov
or
popf
pop
std
sub
ret
sub
imul
lock
and
xchg
push
pop
sbb
shlb
mov
bound
sbb
dec
adc
mov
arpl
jg
inc
inc
cwtl
mov
push
push
popa
lds
aaa
test
and
and
and
and
movsb
jp
jo
repnz
push
mov
mov
imul
or
xor
movsl
pusha
push
jbe
fnsave
mov
mov
jge
insl
or
jmp
jp
mov
enter
shlb
stos
fiaddl
xchg
and
nop
out
and
sti
lods
xor
sbb
xchg
orl
xor
cmp
imulb
lretw
insl
movsl
insl
daa
outsl
insl
cs
push
or
andb
and
xchg
xor
sub
jns
mov
sub
sbb
adc
addr16
int
pop
mov
inc
stc
ret
sub
xchg
loope
arpl
ja
int
adc
ss
call
and
sub
shrb
inc
dec
or
enter
dec
shr
cmp
popa
push
and
fnsave
leave
stos
inc
rclb
in
pushf
iret
pop
xchg
mov
decl
add
shlb
inc
mov
rcll
in
cwtl
jnp
cmp
popa
sub
nop
orl
add
lods
pushf
mov
dec
xor
pushf
adc
lods
dec
add
fwait
inc
outsl
pop
cmp
fdivs
int3
dec
pop
andb
mov
adc
xchg
imul
pop
pop
ret
andb
imul
in
mov
mov
movsb
xchg
add
xchg
movsb
enter
lods
xchg
push
or
sub
xchg
adc
out
cltd
dec
push
jbe
sub
jb
fwait
test
mov
mov
dec
mov
nop
fs
lods
mov
cmp
rorl
adcb
mov
repnz
mov
inc
mov
das
inc
rorl
xor
sbb
orb
jge
inc
bound
movsb
pop
push
imul
ds
mov
or
test
outsl
sub
sarl
je
jo
sbb
or
cmp
mov
jno
inc
or
dec
lock
daa
or
aam
xchg
orb
sub
dec
sub
cmpb
mov
xor
inc
and
add
or
xchg
test
pop
lock
repz
insl
test
or
adc
dec
adc
sub
xchg
mov
adc
repnz
cltd
in
repnz
cld
insl
or
fwait
jo
icebp
clc
xor
xor
add
lds
xchg
push
jb
icebp
push
inc
and
and
xor
xor
adc
push
xchg
loopne
and
adc
dec
mov
or
add
pusha
and
lret
adc
push
stc
dec
adc
out
call
roll
cltd
ss
add
inc
lods
push
je
push
ds
push
aas
in
sub
arpl
outsl
cs
inc
mov
fcmovnbe
imul
sbb
push
test
lea
stos
push
pop
int3
pop
add
add
add
shll
mov
in
lods
out
xchg
sub
sti
pop
fst
movsb
movsb
adc
hlt
sbb
push
mov
or
xor
inc
sbb
adc
xor
cmp
subl
pop
push
js
adc
iret
push
daa
ud1
adc
testl
dec
sbb
push
mov
out
inc
push
fimull
call
xor
dec
jge
enter
fwait
xchg
mov
movsl
sub
add
and
test
mov
movsl
lods
aas
mov
fwait
jnp
push
push
sub
in
and
negl
push
test
dec
jge
or
xchg
rorb
mov
sub
adc
mov
xor
adc
pop
inc
adc
adc
or
test
push
add
add
push
push
cmp
pop
stos
mov
ret
pop
sub
push
mov
pusha
movsl
sbb
adc
lea
cltd
js
popa
test
xor
or
dec
inc
jmp
push
ret
xor
jne
mov
outsl
fdivrs
ret
xor
std
orl
add
pop
push
xchg
fwait
js
add
lods
sub
test
mov
insl
in
nop
pop
enter
mov
js
addl
adc
test
shlb
adc
addr16
xchg
test
inc
push
insb
dec
xlat
xchg
mov
mov
inc
mov
cwtl
cwtl
in
enter
cmp
jb
je
mov
sbb
xor
ret
inc
add
or
xchg
xor
or
xor
adc
add
xor
ret
xchg
xor
jo
mov
xor
cmp
xor
mov
pushf
pop
mov
adc
mov
xor
cmp
jo
rcrb
dec
xchg
fstl
sub
clc
loopne
mov
mov
inc
int
movsl
test
mov
xchg
and
pushf
andb
scas
sub
jno
add
and
xchg
mov
xlat
push
dec
push
mov
pushf
mov
movsl
cmpb
or
fs
inc
add
push
shrb
in
ret
pop
lea
imul
and
dec
imul
leave
andb
adc
mov
mov
fisubl
mov
or
dec
cltd
shl
decb
xchg
test
sub
push
and
push
in
mov
xchg
jns
push
mov
loopne
lahf
ret
push
cmp
or
movsl
mov
cmp
mov
add
sub
mull
mov
cld
insl
mov
sub
dec
hlt
push
pop
sti
int3
xor
cwtl
int3
inc
xchg
inc
sahf
xlat
imul
inc
jo
in
enter
mov
jb
fsub
mov
xchg
inc
jne
loopne
imul
shrb
sub
std
add
add
jg
pusha
out
cld
adc
add
enter
pop
pop
add
adc
push
push
and
push
fs
sbb
nop
mov
int3
jmp
fidivs
movsb
mov
and
divb
addr16
call
add
push
push
and
mov
mov
sub
nop
sbbl
sbb
lret
jbe
sub
add
adc
test
shlb
loopne
addr16
pop
mov
popa
mov
lcall
lcall
addl
push
adc
fisubrs
stos
jno
pop
pop
adc
pop
mov
dec
push
incl
add
sahf
out
ljmp
mov
shlb
aam
cmp
cmp
repz
adcb
iret
out
push
and
ds
ss
mov
sub
push
cmp
sti
imul
das
push
int
cltd
sbb
add
lcall
inc
orb
jnp
mov
add
adc
mov
rcll
xchg
adc
fwait
fbld
or
cmp
rclb
cmpl
test
out
idiv
add
nop
add
into
pop
adc
test
and
dec
push
imul
lahf
mov
or
outsb
or
inc
add
push
call
das
cmp
add
aas
rdpmc
add
paddsw
imulb
incl
sub
ljmp
mov
and
insb
outsl
arpl
imul
fldt
jb
sub
popa
arpl
jne
mov
jmp
popa
outsb
je
add
das
add
push
insl
adc
pushl
add
push
inc
outsl
jb
js
je
jnp
mov
jae
add
or
add
add
cld
add
add
jne
les
ja
fiaddl
and
jb
dec
push
add
or
cmp
dec
add
aaa
or
ss
add
inc
xor
idivb
add
add
aas
scas
cmp
pop
dec
add
sub
xlat
push
je
push
insl
xchg
je
je
and
jge
push
cmp
dec
fisttpl
cmp
mov
cmpsl
insl
push
push
cmp
fisubs
jae
bound
cmp
negl
imul
cmpsl
mov
imul
js
jp
outsl
or
mov
jbe
arpl
lret
aas
je
mov
jmp
jo
mov
xchg
xor
stos
insl
sub
pop
push
imul
pop
cmp
jne
inc
push
data16
pop
jo
sahf
xchg
out
mov
sub
fs
mov
sub
insb
lcall
repz
lahf
popa
repz
pusha
push
outsb
inc
arpl
xlat
fimuls
daa
jb
xor
dec
jbe
fbstp
pop
out
jecxz
outsb
bound
jnp
notl
jbe
ret
arpl
lds
insl
mov
scas
xor
xor
filds
push
pop
xchg
ret
fcmovb
cmpb
aas
cs
popl
es
xor
outsl
push
ret
add
dec
sub
jg
popa
sub
or
outsl
add
lahf
aaa
jg
inc
rol
ja
iret
fbstp
dec
fs
mov
jne
cmp
divl
jb
jne
outsb
push
stos
jae
jbe
push
and
mov
jmp
jnp
bnd
das
rcrl
push
ret
mov
or
filds
jo
fsubs
aas
or
mov
or
fdivs
sbbl
push
mov
lods
or
xlat
je
cs
aaa
insl
lret
imul
jb
fs
imul
shll
add
rdtsc
pop
cld
call
sub
das
xchg
mov
pop
add
mov
mov
pop
stos
pop
test
fildll
je
scas
cmp
loope
popa
mov
pop
movl
pop
mov
jecxz
push
push
xchg
inc
cmp
cmp
xor
addr16
flds
xchg
std
cmp
ret
and
enter
orb
cmpsb
jnp
adc
adc
in
adc
adc
push
sbb
jl
push
mov
pop
idivl
push
das
ljmp
out
and
out
repz
cmp
jns
jp
push
cld
iret
mov
push
pusha
dec
pop
lahf
push
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
jl
scas
mov
jns
aas
or
pop
ds
inc
mov
xchg
sbb
ds
push
fcomps
daa
outsl
dec
and
or
pop
inc
das
fcmovnb
push
mov
pop
imul
iret
fcmovnu
ss
imul
out
insl
pop
jo
and
arpl
fcmovb
inc
pop
pop
jp
int
jmp
and
sub
aad
mov
fbld
fcmovnbe
outsb
push
ds
neg
iret
mov
insl
mov
jg
jecxz
mov
cmp
cmp
add
jne
dec
fs
dec
and
jns
add
das
cmpsl
std
ss
jns
push
dec
push
inc
inc
arpl
bound
std
fsubrs
mov
dec
arpl
sti
loopne
sub
inc
jne
jne
xor
insb
xchg
loop
fimull
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
cmp
sahf
outsb
jns
jg
addr16
popa
imul
divl
xor
and
daa
out
fstps
clc
sbb
dec
outsl
outsb
and
cmp
push
jne
xchg
pop
dec
scas
jmp
add
out
dec
or
rcrl
jnp
mov
jae
mov
push
inc
push
popa
insb
jne
test
stc
pop
inc
inc
mov
inc
dec
call
jg
es
sub
sub
sub
cs
xor
xor
xor
pushl
aaa
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
push
push
push
pop
out
mov
pop
xchg
pusha
popa
bound
gs
imul
xor
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
xchg
and
lock
loopne
mov
add
orb
mov
ljmp
lret
jno
icebp
pusha
inc
mov
outsl
lcall
clc
ret
movsl
add
xorl
pop
test
outsl
imul
call
std
push
mov
gs
xor
popa
js
fnsave
faddl
dec
pop
add
adc
outsl
ja
ret
jnp
test
int3
adc
dec
push
add
adc
add
add
add
add
xor
cmp
push
add
xor
inc
pop
sub
pop
hlt
and
mov
fcoms
add
mov
add
inc
add
or
xor
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
loop
cs
push
outsb
imul
outsb
and
push
or
adc
pop
xor
daa
iret
leave
ss
add
and
or
nop
xchg
xchg
es
and
push
mov
daa
cmpsl
pop
mov
mov
popf
fsub
hlt
add
lods
mov
lods
push
in
add
mov
sub
pop
out
out
or
push
inc
sub
ss
push
fistps
js
dec
dec
inc
dec
inc
adc
mov
push
nop
fs
je
add
jae
dec
bound
jecxz
push
hlt
je
outsb
data16
push
jbe
dec
fistl
out
je
xor
push
xchg
daa
jae
fstps
lea
mov
outsl
js
in
shlb
xchg
cs
and
aam
imulb
jo
jo
and
and
pop
or
mov
jae
dec
imul
in
jns
inc
mov
ds
cmp
imul
daa
pop
cs
mov
movsb
stos
ss
jns
mov
outsb
lock
je
and
arpl
je
push
rcrb
mov
addr16
outsb
mov
push
insl
jle
jbe
mov
jo
or
sbb
mov
pop
jb
and
xor
push
push
push
lahf
inc
ss
insl
and
lods
in
mov
sarb
pusha
xchg
pushw
cs
inc
imul
pusha
gs
xchg
add
pop
or
sbb
mov
bound
pusha
lock
push
sub
outsb
mov
push
jae
pop
pop
in
adc
cmp
cmp
pop
es
call
mov
clc
addr16
subl
gs
add
icebp
or
cmp
xchg
inc
push
push
push
push
dec
cltd
pusha
mov
testl
dec
push
aam
enter
ffreep
lea
push
dec
dec
jge
push
inc
ds
xor
and
jle
jb
push
imul
call
adc
outsl
jae
xor
xor
das
gs
sbb
push
or
inc
jg
divb
mov
addr16
das
je
jp
scas
mov
daa
xchg
dec
jnp
pop
mov
popw
pop
cmp
pop
fstpt
cmp
or
ds
and
jae
je
sub
inc
jl
push
addr16
addr16
fs
mov
add
sub
push
jnp
cmp
or
sbb
das
push
jb
and
and
adc
xchg
ds
aad
mov
jne
stos
addr16
cmp
add
pop
rcr
ss
gs
imul
lock
addr16
dec
sbb
mov
xchg
sahf
inc
pop
sub
jae
inc
jo
sub
xorl
out
sub
incb
repz
out
sub
add
std
test
cmp
lock
mov
shlb
cmp
repz
mov
lods
test
cmp
repz
cwtl
xchg
nop
mov
outsb
test
cmpb
mov
jg
push
les
insb
push
push
sahf
out
pop
push
push
dec
dec
out
sahf
out
inc
cmp
xor
out
sahf
xor
adc
add
sarl
fmul
test
stc
cmp
repz
sti
out
sahf
cmpsl
les
jns
dec
inc
xor
or
cli
cmp
repz
shlb
iret
repz
stc
int3
test
or
out
push
xor
jg
push
add
ret
push
lock
jle
mov
or
mov
dec
cmp
cmp
test
add
addl
scas
or
stos
cmp
push
and
push
mov
insb
add
add
push
and
add
ja
xor
and
add
pop
sub
adc
inc
adc
jnp
inc
adc
push
pop
fbstp
jle
add
pushl
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
test
sbb
sti
cld
and
movsl
push
loope
or
adc
jmp
push
test
jmp
aam
push
mov
lock
pop
outsb
gs
popa
data16
push
ljmp
iret
sti
cmpsb
pop
jns
push
xor
add
fiaddl
dec
mov
add
push
fdecstp
push
mov
inc
insb
fs
sbb
add
je
xor
jp
or
push
ltr
sub
add
inc
jg
shr
dec
push
push
dec
and
xor
push
dec
xchg
outsl
in
inc
dec
cmovns
add
adc
cmp
adc
adc
lcall
xchg
inc
call
rclb
mov
out
xor
cmpl
loop
mov
ds
pop
adc
sti
aas
repnz
clc
lret
sbb
jb
jge
arpl
cmp
pop
dec
scas
jp
jno
in
fstl
in
pop
repnz
and
cmp
dec
imul
jg
lret
add
inc
mov
mov
sub
fwait
out
paddsb
ss
sbb
pop
jns
ds
xor
incb
pushl
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
call
sar
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
clc
push
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
aas
ljmp
insb
mov
out
leave
ljmp
orb
das
js
cld
popa
push
or
scas
int
mov
leave
hlt
mov
incl
add
scas
lods
dec
lock
xor
pop
mov
in
or
icebp
pop
pop
repnz
addr16
adc
es
mov
popa
inc
outsl
aad
adc
out
dec
inc
add
loopne
xlat
dec
out
clc
push
mov
inc
pop
xchg
adc
sub
mov
enter
mov
mov
das
outsl
jns
outsb
dec
rcr
dec
xchg
adc
or
sbb
mov
mov
jo
out
sbb
push
jae
dec
inc
popa
pop
jmp
and
push
or
xlat
scas
pop
and
out
push
mov
arpl
test
bound
jg
mov
fs
pcmpeqw
loopne
adc
sti
or
ja
popa
daa
sti
shrb
je
cmp
mov
insb
push
mov
je
push
add
xchg
shlb
xchg
lret
xchg
loop
nop
push
clc
arpl
notb
mov
add
mull
mov
mov
and
andb
mov
jae
cmp
out
jae,pt
insl
jle
fs
jnp
push
pop
cmpsl
mov
inc
sub
ret
outsl
popa
add
lahf
arpl
adc
pop
jno
out
fbstp
out
scas
cmp
shll
push
mov
aas
jg
fildl
mov
bound
lods
das
cmpsl
cmp
stos
add
add
test
lock
and
sbb
pop
pop
jns
outsb
xlat
mov
fs
mov
cmpsl
mull
sbb
movlps
call
pop
inc
inc
mov
mov
loop
push
sub
iret
push
push
pop
je
sbb
sub
imull
or
aaa
cmp
xchg
aaa
jecxz
cmp
cmp
mov
pop
inc
or
repz
dec
outsl
jle
pop
ret
ret
gs
jp
jp
add
xor
ja
pop
push
dec
and
adc
insb
jecxz
mov
mov
fmuls
sti
jne
sbb
out
pop
addr16
jns
jecxz
je
push
lods
mov
aas
arpl
daa
pop
arpl
in
sbb
jae
push
sbb
mov
repnz
daa
xchg
pop
out
or
es
add
dec
sbb
inc
add
push
stos
mov
popl
push
ss
add
sub
faddl
and
mov
repnz
jo
add
inc
aas
aaa
or
ret
jle
push
push
ret
pop
xchg
je
jb
push
jp,pt
and
xchg
or
call
test
loop
mov
mov
push
fs
push
sub
out
or
dec
popl
mov
lahf
jnp
mov
imul
adc
aaa
sub
sub
or
dec
pop
js
pop
arpl
sub
push
cmp
das
rdpmc
sub
xor
ret
xchg
push
mov
sahf
mov
sbb
xor
xor
in
add
dec
fisttps
xor
lock
inc
out
repz
pop
cmpsl
vrcpss
lock
dec
push
pop
mov
add
cmp
lahf
dec
adc
fwait
sbb
pusha
subl
sub
outsb
add
add
clc
out
sub
out
pop
push
lret
loopne
stos
outsl
pop
divl
scas
imul
iret
sbb
orb
jg
loopne
stos
mov
mov
lds
lods
xchg
add
mov
mov
push
mov
test
mov
incl
mov
push
es
mov
lock
cmpsl
out
inc
push
das
cmp
inc
inc
mov
out
lret
arpl
jge
sub
lahf
push
out
inc
pusha
stos
ja
inc
add
addr16
mov
mov
ja
ss
mov
dec
push
bound
sbb
xchg
cmc
loope
sub
pop
je
pop
cmpsl
maskmovq
testl
dec
les
pop
stos
or
insl
rorl
dec
cmpsl
xchg
pop
jo
push
int3
push
sub
scas
lahf
inc
imul
dec
cmova
aas
jo
xor
dec
add
mov
lock
filds
jl
jl
cvtps2pi
adc
jl
imul
push
and
cmp
ja
and
addr16
bound
xor
push
das
out
shl
fistpll
inc
cmp
xor
cmp
jns
mov
mov
sub
mov
mov
ja
sbb
pop
arpl
out
jns
insl
inc
sahf
mov
popf
mov
ja
cmp
outsb
iret
clc
data16
pop
arpl
shl
ljmp
imul
jl
outsl
lret
loopne
lock
cmp
cmp
jg
roll
dec
push
sti
rol
stos
xor
xchg
imul
iret
cwtl
loopne
ret
imul
pop
xchg
jl
xchg
fsubp
into
xor
adc
mov
sbb
lods
clc
js
jl
xor
inc
add
jbe,pt
push
outsl
loope
inc
pop
and
addl
mov
add
or
ficoms
xchg
mov
out
or
mov
push
ret
daa
fucomip
add
pop
pop
js
inc
jl
jns
das
jae
adc
push
orb
aas
dec
loop
inc
add
stos
pop
mov
pop
je
pop
fwait
xchg
fbstp
pop
pop
scas
stos
pop
stos
cmpsl
xor
bound
cmp
data16
aaa
push
push
insb
arpl
dec
inc
adcl
aas
popa
inc
in
or
insb
xchg
es
pop
popa
inc
scas
loope
pop
aas
das
imul
es
js
push
xchg
js
dec
pop
and
inc
add
dec
push
jl
mov
rcrb
sbb
adc
push
sbb
pusha
aam
push
push
inc
add
xchg
inc
pop
mov
gs
push
pop
sti
mov
mov
fisubrl
push
sarl
push
shrb
insb
jl
scas
stc
ds
lcall
in
jnp
fildl
push
es
and
mov
mov
jg
push
adc
cs
jns,pt
imul
jge
pop
push
aad
and
add
clc
mov
pop
xorl
scas
mov
push
rolb
push
xor
rcl
jl
repz
push
dec
in
push
sbb
out
out
mov
inc
outsl
jg
push
sub
jns
pop
imul
testl
sti
ficoms
jg
aaa
dec
and
pop
or
lcall
mov
jo
jns
movb
jge
mov
mov
aam
and
jbe
add
insb
pop
aaa
lcall
aas
out
push
push
ja
lret
les
push
push
push
and
or
subl
gs
insl
pusha
push
popa
jne
or
jge,pt
mov
push
dec
bound
xor
pop
sub
and
lods
js
fdivs
adc
setle
jns
push
push
xchg
sarl
cmp
iret
repz
mov
outsb
jnp
idivl
and
bound
nop
outsb
pop
mov
mov
cmp
gs
je
cmp
outsl
inc
shrl
cmpsb
push
jo
jb
das
add
or
jae
cmp
in
pushf
mov
ss
sbb
and
imul
std
andl
arpl
imul
inc
or
subb
shlb
jae
pop
xchg
jne
je
ss
cmp
fildl
or
imul
sbb
jae
data16
sar
imul
adc
push
mov
add
test
decl
push
scas
imul
xchg
push
xor
push
push
pop
push
mov
push
inc
inc
push
daa
inc
pop
inc
mov
push
lahf
add
js
dec
xorb
popa
aas
inc
sbb
mov
out
pop
pop
add
sbb
addr16
adc
adc
enter
or
dec
insl
aaa
cmp
pop
mov
sarl
ja
or
dec
adc
add
sbb
call
ret
aam
fistpll
sub
test
sbb
ja
xlat
push
insl
iret
pop
add
and
or
or
add
test
sub
imul
add
inc
fs
jns
jo
inc
data16
imul
adc
add
sbb
jnp
add
lcall
test
pop
popa
push
dec
xchg
add
add
sbb
dec
adc
xor
inc
das
jo
push
push
and
inc
pop
mov
dec
mov
inc
mov
or
push
or
outsl
jg
push
aas
loope
and
pop
pop
dec
push
mov
dec
sti
xchg
dec
or
xchg
inc
fwait
and
dec
aam
sub
inc
xchg
mov
push
orl
mov
jo
pop
imul
pop
cmpsl
xchg
sub
xchg
pop
jb
cmp
mov
mov
jg
rolb
or
pop
sub
addr16
arpl
outsb
cs
xchg
add
add
jae
fwait
jno
jp
ljmp
mov
fildl
lret
movsl
mov
aaa
mov
bound
inc
arpl
jae
ret
test
aas
adc
jb
xlat
in
mov
xchg
testb
int
test
mov
cli
addr16
push
mov
mov
insl
add
data16
adc
jno
arpl
mov
lret
inc
mov
or
je
xchg
dec
xchg
inc
mov
or
mov
idivl
movsb
movsl
scas
aad
pop
sti
adc
das
sahf
jnp
pop
pop
jg
cmp
sbb
push
roll
inc
push
mov
mov
push
imul
data16
push
jne
xlat
pop
inc
adc
add
sti
dec
mov
sub
fs
inc
or
mov
adc
jns
sub
jecxz
outsl
jo
fwait
mov
loopne
es
jns
adc
push
fildl
cmp
mov
scas
push
and
rcrb
test
xchg
cmp
iret
inc
dec
test
movsb
imul
sub
jmp
iret
out
inc
mov
or
out
adc
or
xor
fsubrl
loopne
ljmp
clc
imul
or
inc
outsl
in
imul
pop
in
or
mov
loop
adc
push
xlat
inc
stos
in
mov
xchg
aas
mov
inc
dec
inc
inc
loopne
mov
mov
cmpsl
dec
add
loop
mov
das
sub
jo
aaa
gs
mov
movsl
add
insl
aaa
xor
test
mov
mov
test
addr16
push
lret
mov
mov
add
outsl
rol
sbb
out
pop
push
out
add
adc
fildl
addb
ret
xchg
imul
push
pusha
push
rclb
push
popf
mov
fdivl
fs
ficomps
mov
rcrb
dec
dec
xchg
or
fwait
sub
mov
subl
cmp
add
cmp
shrb
addb
bound
dec
ret
scas
push
cs
pop
push
adc
jbe
iret
push
sub
cmp
shlb
arpl
aas
pop
or
inc
divl
movmskps
adc
pushl
or
xchg
jle
mov
lock
sbb
push
push
or
push
loopne
clc
dec
fcmovb
ds
add
add
adc
push
fcomps
push
arpl
xorb
fs
add
imul
add
push
xor
pop
aaa
leave
adc
mov
fisttpl
pxor
inc
rolb
dec
lock
fs
jmp
jp
push
lret
mov
loopne
repz
scas
xor
push
arpl
pop
pop
push
xor
imulb
adc
xor
cmp
mov
loop
lahf
xlat
popa
xchg
sbb
cmp
lret
cmp
cltd
xor
bound
imul
cmp
dec
push
adc
ret
or
cmp
addl
xor
lods
insl
inc
stos
push
ret
rcrb
aaa
je
and
sbb
sbb
pop
inc
cmp
xchg
ja
push
jnp
lods
sbb
ja
hlt
pusha
in
jmp
xlat
dec
popl
and
jnp
test
add
inc
cs
setp
hlt
lock
pop
push
repnz
out
lea
push
push
mov
adc
pop
minps
filds
jmp
insl
mov
dec
push
add
test
dec
push
xor
push
or
gs
inc
dec
pmulhw
xchg
jbe
adc
sti
add
movsb
adc
mov
iret
outsl
iret
jp
sahf
jno
addr16
imul
hlt
pop
rcrl
pop
lods
xchg
arpl
push
sbb
sbb
add
add
out
out
jecxz
or
mov
sub
imul
mov
xlat
iret
inc
cwtl
cmp
out
inc
add
clc
push
push
shlb
sahf
add
jg
jns
ret
mov
fwait
int
add
repz
iret
jmp
push
mov
aaa
lahf
data16
mov
inc
aad
sub
sub
xlat
inc
insb
aas
mov
jmp
shlb
aas
xchg
xor
add
dec
popa
lds
arpl
inc
imul
mov
mov
sbb
and
pandn
adc
pop
out
ret
push
shll
jg
pop
pushf
dec
mov
inc
movsb
pop
imul
adc
push
orl
les
fisttpl
inc
test
ret
jg
ret
daa
stos
int3
push
insb
pop
arpl
mov
push
pop
cmp
insl
mov
stos
fucomip
mov
cmpb
cmpsb
ret
xor
or
das
mov
mov
and
lahf
aas
scas
pop
fadds
scas
inc
fildl
mov
xchg
stos
pop
stos
incb
and
lods
imul
fwait
cmp
xchg
xlat
and
add
pop
mov
mov
xor
add
and
clc
fisubrs
push
xor
lret
imul
pop
arpl
jg
iret
jge
lock
jge
shrb
push
xor
and
or
jl
mov
outsb
sbb
and
out
mov
dec
jle
pop
lock
insl
das
aaa
jp
sbb
and
mov
mov
pop
outsb
pop
dec
push
mov
fiadds
mov
xor
pop
xchg
clc
inc
test
lods
bound
inc
adc
inc
daa
jo
xor
xchg
pop
and
inc
pushf
dec
sub
cld
stos
lods
dec
scas
xchg
stos
pop
or
xor
cmpsb
xchg
push
leave
adc
test
repnz
and
sub
cltd
dec
pop
fsubs
in
loopne
nop
jns
pop
and
stos
sub
scas
hlt
mov
jb
add
pop
add
push
repnz
push
or
mov
adc
leave
rcrb
xchg
rcrb
stos
sub
popf
push
jb
dec
test
scas
xchg
test
xor
xchg
mov
xchg
push
leave
push
cmp
lcall
push
leave
push
repnz
cltd
test
imul
xor
mov
pop
testl
mov
cmp
inc
xor
cmpsl
mov
xor
pop
mov
pop
mov
dec
push
inc
inc
or
lea
push
push
adc
inc
cs
imul
movl
dec
inc
inc
lret
mov
iret
dec
movsl
inc
adc
fildll
inc
mov
inc
xor
pop
pop
mov
push
cmpsl
pop
inc
and
mov
nop
or
mov
outsb
xor
pop
loop
xor
rolb
or
inc
repz
inc
test
or
cs
aam
not
rcl
adc
cmpsl
inc
aaa
adc
fisubl
aas
mov
or
or
dec
lret
aas
ss
push
push
inc
xlat
push
test
rclb
xor
movsb
and
mov
adc
sbb
pop
int3
fs
push
scas
addr16
pusha
aad
xchg
fildll
inc
scas
jg
outsl
inc
subl
mov
pop
aaa
adcb
dec
mov
mov
jp
adc
adcl
daa
arpl
mov
mov
ljmp
mov
push
out
aaa
fildll
iret
aaa
outsl
mov
js
scas
push
or
inc
movl
and
aaa
outsl
jecxz
push
dec
popa
add
lahf
push
mov
and
mov
cmp
in
add
aas
inc
jmp
lods
jo
jbe
mov
scas
mov
arpl
push
in
out
mov
add
movsb
or
inc
mov
data16
push
sbb
push
or
nop
mov
pop
pop
inc
mov
push
pop
out
outsl
sub
mov
inc
dec
hlt
pop
mov
in
popa
pop
and
fs
add
subb
inc
pop
mov
and
lods
mov
les
sbb
sbb
sarl
pop
or
sub
xchg
repz
mov
into
add
rol
lret
sbb
xor
inc
mov
sbb
and
std
loope
cmp
jne
arpl
std
daa
je
fs
gs
divl
push
xor
insl
je
push
bound
push
dec
les
outsb
popa
inc
gs
push
jo
add
sub
movsl
inc
addr16
jecxz
sbb
mull
fnstenv
fwait
sarl
mov
les
add
ja
sti
ss
pop
in
sbb
dec
bound
jae
js
outsl
dec
js
fmulp
cmp
xor
data16
xchg
ss
dec
les
dec
rcll
push
mov
iret
and
adc
adc
movsb
fildll
dec
jae
add
hlt
orl
cmpsl
ret
push
mov
stc
cmp
xchg
sahf
repz
pop
jl
push
cltd
sbb
out
dec
sarl
incl
sbb
push
mov
adc
push
mov
push
mov
add
add
jg
mov
jb
push
or
imul
scas
xor
adc
push
ret
pop
add
xchg
shlb
aas
xchg
fcomps
incl
or
or
ret
cwtl
add
add
inc
mov
dec
cmp
push
rcrb
int3
inc
ja
jnp
adc
fildl
fisttps
inc
and
or
idivl
iret
adc
push
mov
add
add
movsb
sbb
sub
pop
mov
push
push
mov
and
rclb
fwait
mov
push
addr16
pop
or
mov
aaa
shl
out
jmp
cs
mov
das
xchg
cmovb
hlt
or
pop
ret
ljmp
add
stos
shrl
or
iret
xor
xor
scas
orl
addb
xchg
dec
insl
lock
fwait
dec
cmpsb
loop
scas
mov
bound
push
push
push
mov
push
in
cs
cmp
xchg
xor
push
pop
and
out
imul
arpl
xchg
in
add
mov
insl
xchg
andb
neg
jnp
mov
jns
xor
mov
fs
dec
stos
push
aam
pop
mov
pop
jecxz
pop
out
mov
shlb
mov
inc
or
out
pop
sub
xor
es
arpl
imul
es
push
jbe
dec
or
inc
in
fidivrs
rorb
mov
ss
push
dec
mov
push
bound
xor
js
adc
xor
xor
jno
test
cs
lret
jb
adcl
es
xor
xlat
cmc
rolb
inc
data16
xor
into
lcall
sbb
cs
fs
mov
mov
cmp
testb
out
cmp
mov
cs
idivl
imul
pop
mov
mov
push
es
ss
outsb
pop
mov
push
xor
dec
jb
das
inc
pop
ret
jnp
pop
dec
es
das
add
fbstp
push
and
or
sysexit
js
pop
ja
iret
jns
dec
cs
sahf
push
jnp
sub
outsl
push
push
neg
insl
sub
push
insl
xlat
fidivrs
mov
inc
ja,pn
xor
push
ds
notl
jp
jp
ds
scas
cmc
push
inc
dec
jg
dec
das
pxor
xorl
pop
outsb
or
outsl
dec
xor
lock
push
into
xor
sbb
jo
outsl
imul
pop
jb
push
and
mov
iret
movb
push
jnp
mov
bound
jecxz
daa
xchg
sub
push
aam
jmp
ret
and
lods
dec
iret
xor
dec
loope
incl
jnp
pushf
cs
sub
add
jle
orb
push
mov
inc
jecxz
lcall
mov
xchg
pop
or
xchg
enter
es
sbbl
add
stos
stos
lods
nop
cmp
bndstx
ret
shlb
inc
cmp
lret
pusha
pop
xchg
adc
push
cmpsl
push
repz
inc
and
add
arpl
arpl
sub
xchg
pop
shrl
stos
scas
lcall
fs
mov
cltd
push
add
out
outsb
cmc
shlb
dec
daa
xlat
sub
adc
or
pop
push
sti
jmp
push
add
dec
and
pop
fwait
jecxz
mov
mov
loop
pop
sbb
out
ss
push
lds
out
notl
ja
adc
inc
dec
cmp
inc
add
mov
sbb
aaa
icebp
es
outsl
popa
fs
outsl
in
fadds
mov
loopne
sbb
jo
pop
shrb
shrb
mov
or
les
imul
and
insb
pushf
in
jle
lods
xchg
rcrb
js
sub
jp
sub
add
sbb
sub
shlb
dec
stos
ljmp
cmc
sbb
xor
clc
sti
jae
add
xchg
out
jbe
pop
xchg
jae
imulb
cs
jmp
xor
sub
and
cmp
flds
mov
lods
push
cs
out
sahf
inc
mov
add
jl
add
xor
pusha
pop
cmp
cmp
fwait
divb
jo
arpl
xor
or
std
or
xor
xor
push
nop
mov
add
das
pop
rol
dec
jmp
xchg
dec
imul
lahf
je
mov
aaa
scas
or
jle
inc
push
stos
mov
pop
or
in
pop
add
inc
xchg
adc
popl
out
das
push
or
js
sub
mov
sub
cmp
sub
push
outsl
loop
ret
pushl
fldcw
jg
ret
inc
sub
lea
mulb
bound
push
test
pusha
ret
insb
repnz
lret
jbe
addr16
pop
xor
push
xor
jmp
fwait
and
cmp
mov
fcmovnb
das
aam
ljmp
xchg
inc
clc
pop
adc
mov
popa
fldt
xor
rep
xchg
dec
ror
dec
push
mov
lahf
lods
push
sbbl
sub
inc
loop
push
out
cmp
jne
iret
pop
dec
adc
xlat
cmp
ds
inc
daa
jns
push
add
pusha
mov
or
filds
sub
and
ret
outsb
dec
arpl
out
xchg
jbe
dec
dec
test
cmc
cmp
pop
outsl
pop
adc
sbb
incl
lahf
xor
cmp
repz
stc
xor
cmpsl
dec
cltd
or
xchg
mov
add
add
pop
or
insb
ss
add
into
adc
int
jnp
jns
and
sub
xor
inc
mov
out
cmp
adc
mov
mov
fisttpl
add
shrb
ret
sub
data16
add
das
or
mov
and
add
ss
int
xchg
rclb
lret
str
insb
add
stc
das
aam
fnstcw
cmp
mov
xor
ret
iret
aaa
fs
lods
stos
and
add
sub
lock
sbb
jg
add
and
add
jmp
add
das
dec
addr16
in
shrb
loopne
xchg
xchg
imul
das
sub
insl
inc
shl
mov
mov
psllw
in
sbb
xlat
aam
sarl
mov
das
mov
aaa
mov
adc
mov
cltd
sbb
daa
nopl
clc
jg
and
mov
mov
negl
push
pushl
mov
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
insb
out
pushl
ss
adc
cli
mov
sub
sub
inc
cmp
mov
sbb
mov
ds
imulb
in
pop
sbb
xor
mov
dec
jg
cmp
cs
pop
sbb
mov
ja
cli
dec
pop
dec
xchg
jecxz
dec
push
pop
mov
xor
adc
call
pop
push
and
inc
sub
ds
hlt
or
dec
sub
jmp
xor
and
push
xchg
or
leave
and
xchg
pusha
add
xchg
inc
jo
inc
add
and
cmp
push
xchg
xchg
andl
iret
leave
jae
push
pop
inc
sub
jb
and
movsb
jns
pop
add
hlt
data16
sahf
xchg
out
cmp
inc
les
cmp
mov
dec
rolb
dec
jo
xchg
test
test
jo
setg
pop
push
xor
lar
mov
aaa
cmp
dec
mov
sbbl
and
pop
pop
mov
mov
fstpt
lret
ss
cmp
mov
sub
adc
inc
push
mov
inc
cmp
inc
stos
inc
cmpsb
adc
jecxz
jp
mov
rorb
cmp
addl
daa
xor
nop
inc
dec
imul
rclb
mov
jne
cmp
xor
lock
popa
outsb
imul
dec
or
pop
stos
cmpsl
add
adc
mov
mov
aam
jg
pop
mov
shlb
push
ret
dec
push
sbb
shrb
lea
inc
mov
dec
push
push
rclb
lods
scas
neg
je
mov
or
add
das
pop
xor
adc
xchg
outsb
gs
inc
dec
cmp
outsl
mov
popa
inc
mov
or
dec
jne
inc
incl
push
adc
scas
push
push
nop
cs
add
cmp
jecxz
adc
xlat
out
push
lcall
push
jb
pop
pop
dec
push
jnp
cmp
outsb
repz
jmp
pusha
cmp
lods
cmpb
cmpb
je
add
jbe
xchg
ljmp
insl
mov
cmp
outsb
sbb
dec
sbb
aaa
dec
inc
arpl
lcall
cs
cmpl
pop
push
push
and
sti
roll
xchg
push
add
iret
jnp
mov
inc
pop
mov
mov
jnp
movb
xor
xchg
je
push
fldl
jecxz
movsl
mov
cmpsl
fcmovu
repz
jnp
pop
or
fisttpl
xor
ds
ja
push
jle
mov
test
push
xchg
repz
add
fstpt
imul
cmp
pop
jns
addl
pop
mov
leave
insb
pop
mov
lods
cmpsl
xor
and
mov
divl
out
cmp
jle
xchg
push
cmp
nop
mov
or
push
ds
jnp
sub
push
ljmp
dec
repz
cmc
cmp
xor
pop
fucomp
lea
popl
aas
push
lret
idivl
dec
add
push
sbb
fiadds
push
mov
inc
lahf
out
lahf
shl
inc
outsl
pop
or
mov
arpl
cmp
inc
push
and
aas
call
cmpsl
pop
push
inc
divb
sti
addl
aaa
addb
out
cmp
sbb
mov
lds
int
out
jns
out
inc
sbb
divl
dec
add
jns
push
out
mov
push
inc
push
dec
dec
es
outsl
inc
cmp
jno
pop
imul
faddl
xchg
push
inc
imul
in
sub
mov
repz
mov
xor
ja
idivb
repz
xchg
gs
in
jo
jno
stc
xor
pop
mov
std
adc
jns
jno
mov
sti
sbb
xor
jo
idivb
cmpsl
stc
dec
cmp
repz
out
or
and
out
repz
mov
call
xor
dec
sbb
scas
sub
adc
and
and
rcrb
push
jmp
push
mov
xor
adc
mov
pop
in
pop
mov
clc
pop
mov
idivb
mov
pop
int3
push
and
pop
sbb
pop
repnz
ds
adc
or
adc
iret
pusha
or
fadd
lea
lidtl
test
aas
testl
dec
sbb
mov
lds
aas
push
xor
scas
and
out
test
and
imul
and
adc
push
js
xor
push
push
fnsave
imul
ret
cmp
cmp
xor
or
xchg
nop
sub
rcrb
fistps
scas
inc
imul
pop
sub
pop
cltd
add
cmp
sbb
fiaddl
mov
push
popa
je
test
dec
xchg
dec
es
dec
test
dec
loop
clc
mov
mov
in
data16
pop
push
ficoml
outsb
ljmp
jmp
jb
add
cmpsl
push
cmp
dec
dec
inc
dec
outsl
mov
or
inc
inc
fisubl
add
cmp
jg
sub
adc
pop
sbb
push
mov
push
jno
cmpsl
repnz
pop
adc
into
scas
sahf
daa
cmp
jo
mov
pop
pop
push
jo
inc
mov
pop
jno,pt
push
iret
inc
ret
pop
push
mov
mov
xchg
popf
mov
dec
lods
frstor
push
xchg
test
fisubrs
and
jb
cmp
outsl
fisttpll
sub
adc
mov
fs
loopne
cmpsl
push
push
arpl
mov
xor
daa
add
repnz
je
ljmp
push
ret
movntps
outsl
cmp
dec
cmpsl
ljmp
jbe
jo
xor
ja
adc
push
outsl
imul
mov
mov
add
mov
shlb
aaa
push
xchg
nop
mov
inc
pop
dec
loope
out
mull
mov
push
and
je
sbb
loopne
lods
pusha
push
jle
rclb
scas
push
dec
xorl
add
inc
add
add
aas
push
dec
adc
xchg
or
jmp
pop
or
mov
scas
das
test
dec
and
inc
pop
push
bound
push
out
popl
jo
ss
addr16
jnp
movsl
push
inc
xchg
inc
mov
jae
fs
fisubl
xchg
inc
es
xchg
pop
push
incl
sti
jp
inc
mov
mov
insl
stos
mov
or
mov
fldl
xchg
inc
sub
add
data16
pop
jmp
fcmovu
ret
divl
scas
outsl
aaa
cmp
mov
out
out
xchg
arpl
bound
testl
scas
iret
popa
push
fsubs
call
popl
push
xor
pop
sbb
or
mov
push
lods
sub
pop
adc
xchg
push
push
add
inc
ret
pop
mov
ret
add
pusha
jo
arpl
ja
fisubs
xor
out
jbe
sub
push
sub
and
pop
inc
scas
adc
add
inc
ret
rorl
jg
jo
jp
push
xor
sbb
mov
xchg
lock
xor
aad
ret
ficoml
mov
push
inc
mov
sbb
jae
and
push
daa
inc
cmp
mov
test
push
add
rcl
push
inc
bound
lock
movb
sub
aaa
imul
mov
push
pop
loopne
xlat
adc
inc
ss
inc
jecxz
jmp
jl
ljmp
mov
cmpsl
push
out
dec
jnp
daa
ret
pop
lock
loop
jmp
testl
pop
pop
inc
mov
or
push
pop
jns
test
and
push
js
imul
cmpsb
lret
test
xor
movsb
es
jnp
out
cmpsl
fnstcw
insl
jo
paddd
add
addr16
jo
jae
pop
ja
sbb
pop
jno
outsl
xor
push
and
and
or
add
xchg
je
jne
or
or
pop
imull
lahf
jg
or
adc
dec
out
pop
mov
dec
jae
mov
push
insl
mov
incl
mov
jb
inc
inc
cvtps2pi
inc
mov
and
push
add
ror
gs
cmp
inc
ret
mov
aas
mov
xor
testl
pop
or
pop
subb
pop
out
push
cmp
sti
jae
add
test
rolb
pop
pop
into
dec
outsb
push
dec
jne
mov
add
pop
xor
mov
push
fbld
dec
pop
shll
pop
pop
and
mov
addr16
push
aam
shlb
jo
push
jb
iret
adc
mov
push
ret
mov
jp
or
xlat
cwtl
mov
inc
outsl
outsb
or
aaa
inc
insb
mov
sysret
daa
sub
push
sub
jecxz
ljmp
stos
xor
push
js
push
add
scas
push
jns
cmpsl
aam
inc
push
dec
inc
dec
push
xchg
add
daa
loop
and
pop
pop
mov
out
sbb
sub
movl
and
push
dec
into
add
mov
fdivrl
lahf
add
and
js
mov
ret
sbb
and
ds
das
sbb
stc
lods
xor
add
ja
mov
and
push
out
out
fdivrp
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
insb
cwtl
shrb
add
sbb
sbbb
out
push
and
out
sbb
fisubl
les
mov
add
aas
push
insb
pop
gs
pop
arpl
shrl
push
sbb
sbb
push
add
push
xchg
or
daa
decb
and
adc
adc
mov
mov
jp
push
int3
mov
stc
xchg
add
sbb
cwtl
mov
int
fisubl
data16
jl
xchg
cli
and
ficoms
in
dec
lahf
jo
pop
insb
fbstp
push
xor
insb
pop
push
leave
sbb
ja
push
dec
sbb
mov
movl
pop
add
out
push
in
add
outsb
or
iret
outsl
xchg
mov
cmpsl
push
xchg
sub
xor
incl
mov
push
jle
inc
sahf
mov
inc
xorl
out
imul
push
mov
test
ja
out
push
imul
inc
outsl
arpl
popa
add
addr16
je
and
and
arpl
push
es
imul
outsb
insb
jns
push
je
and
je
mov
popa
stos
inc
movsb
cmp
out
and
lahf
cwtl
and
xor
and
jo
fcmovb
iret
lea
loop
dec
inc
or
cltd
cltd
push
and
push
push
btc
outsl
fs
gs
jo
mov
fnsave
iret
inc
mov
test
outsl
insl
jne
adc
mov
les
mov
mov
das
cmp
and
movb
bound
aaa
add
rol
inc
insb
iret
jbe
ud0
imul
sbb
lds
outsl
jo
mov
testl
jmp
pop
mov
testb
dec
xchg
dec
inc
xadd
adc
std
das
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
mov
jbe
maxps
loopne
sarl
add
test
outsb
rorb
sub
sub
dec
mov
or
sbb
bound
das
in
outsb
dec
sbb
cld
popl
cmp
fldt
aaa
mov
or
push
xor
inc
jnp
fsubl
iret
push
push
pusha
push
jl
mov
mov
inc
add
lods
pop
cwtl
cmpsl
ja
lahf
add
xorl
test
call
lods
add
outsl
inc
xchg
lods
test
push
fwait
insb
cmp
jnp
mov
push
test
push
cld
push
xor
jnp
jnp
dec
int3
scas
fists
jnp
sbb
pop
pushf
pop
push
imul
xchg
mov
bnd
fdivrl
aad
and
dec
in
les
xchg
outsl
add
bound
scas
pusha
push
push
add
jns
xor
mov
int3
cmpsb
pop
jae
xor
adc
call
dec
loop
xchg
dec
xchg
inc
inc
add
call
in
fwait
inc
push
push
xchg
cmp
bnd
outsl
xchg
push
xchg
cmp
push
test
leave
call
clc
pop
rcrb
out
sub
aas
out
fiadds
daa
hlt
pusha
xchg
jo
jl
sbbl
movsb
stc
pusha
daa
and
jmp
aas
add
jae
hlt
daa
add
scas
jbe
or
xchg
xchg
inc
add
inc
jl
xchg
push
lret
jnp
pusha
push
mov
aaa
dec
jns
imul
xor
lahf
or
movsb
and
xchg
js
jo
sete
xchg
and
bound
iret
test
dec
mov
mov
pop
fs
loopne
addr16
xor
xchg
daa
mull
xchg
xchg
das
or
ss
fsub
add
and
fsub
inc
pop
xor
pop
mov
dec
daa
pop
addr16
in
nop
out
js
nop
packssdw
in
addr16
mov
and
push
fcoml
mov
outsb
outsl
inc
ds
sbb
and
les
lods
sub
adc
jns
inc
ss
cwtl
fs
movsb
xchg
jo
in
add
in
mov
pushf
inc
scas
lods
scas
add
push
leave
jae
out
aam
in
mov
not
inc
cmc
sbb
pop
sub
cmp
insb
subb
push
dec
aas
test
fidivl
shrb
iret
jl
rclb
pop
enter
int3
pop
enter
hlt
mov
and
or
sbb
mov
jge
sub
lahf
dec
lahf
cs
lods
ja
push
pop
insb
cs
or
push
pop
mov
lods
mov
int3
jl
repz
sahf
or
inc
es
test
adcl
or
dec
fwait
pop
bound
mov
jl
push
sahf
outsl
insl
push
fistpll
cld
mov
mov
and
cld
mov
or
add
sbb
les
push
cmpsl
hlt
jns
in
push
dec
pushf
pop
insb
pop
and
repnz
nop
out
cmpsl
js
lods
orl
test
jb
movsb
lock
popf
out
mov
movsb
jl
in
lock
ds
test
test
imul
fdivrl
adc
test
clc
nop
add
push
cmpsl
cwtl
jl
in
cmp
cld
adc
pushf
test
out
push
cltd
nop
out
push
cmpsb
inc
stos
push
jg
nop
xchg
daa
fisubrl
xlat
movsb
sahf
mov
dec
add
xchg
mov
out
add
mov
in
xor
or
bound
push
push
lahf
call
ja
adc
test
movsb
dec
lahf
or
in
inc
aam
in
sahf
in
inc
inc
icebp
mov
mov
fbstp
dec
mov
int3
push
jg
cwtl
js
lcall
cwtl
cmpsl
repnz
enter
int3
pop
repnz
fdiv
clc
shl
test
add
and
imul
jg
xor
or
test
orb
je
leave
xlat
sub
sahf
call
insl
dec
add
clc
es
xchg
sbb
fiaddl
inc
jg
test
cmpsl
shrb
in
lods
mov
test
or
rcl
push
fsubs
cmpsl
rorb
inc
dec
adc
and
fcoms
cmp
lods
jg
subb
js
fstl
dec
add
push
nop
or
mov
jl
lods
ja
loopne
movsb
andb
movsb
ja
out
adc
jg
adc
movsb
lahf
dec
sahf
mov
lods
sbb
mov
movsb
pop
and
add
push
inc
lods
push
in
push
lahf
rcr
pusha
push
dec
enter
movsl
pusha
push
je
les
pop
add
nop
jg
enter
mov
subb
cs
loopne
add
inc
jo
bound
cmpsb
push
loopne
and
xchg
dec
cmpsb
stos
shrb
adc
jbe
xor
jmp
test
cmpsb
call
mov
inc
add
mov
pusha
inc
in
and
in
mov
cs
dec
push
pusha
push
mov
mov
mov
xchg
cmpsl
lahf
mov
inc
ja
lock
in
lock
iret
lods
sub
jg
nop
inc
jmp
xchg
test
jbe
shrb
adc
test
fsubr
shrb
dec
mov
jg
sbb
loopne
pop
call
jl
in
lods
sub
cmp
dec
test
jl
or
fdivrl
mov
lahf
faddl
jl
mov
inc
add
int3
inc
adc
pop
fdiv
test
loop
jmp
and
sub
inc
ja
nop
out
sahf
push
jo
nop
cs
mov
sahf
or
shl
mov
shrb
stos
and
xor
nop
test
lahf
aam
repnz
enter
aam
pop
pop
and
and
test
fisubrl
dec
lahf
ja
or
pushl
lods
push
and
xor
lods
mov
leave
xor
pusha
xchg
imul
sub
jge
cwtl
decl
nop
mov
jb
call
clc
pop
enter
or
push
mov
enter
jl
outsl
xchg
call
repnz
call
mov
aas
lods
decl
xchg
xchg
mov
loopnew
hlt
test
test
lods
rcrb
push
xor
mov
in
jne
sahf
loopne
addr16
jl
pusha
insl
adc
cmp
sub
lods
mov
in
enter
call
pop
mov
mov
mov
ljmp
push
sub
push
push
mov
lcall
call
adc
mov
mov
outsl
pop
pop
add
popf
test
iret
dec
hlt
pop
mov
aad
insb
data16
xlat
data16
sub
jns
mov
fwait
pop
mov
push
aaa
aas
addr16
xor
pop
add
inc
outsl
ja
dec
daa
call
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
scas
in
add
cs
push
fdivs
fidivs
push
insb
push
push
or
mov
call
mov
iret
inc
lock
xchg
out
iret
shlb
ja
ja
push
push
mov
mov
mov
jns
jns
les
repz
xchg
mov
pop
inc
and
inc
cmp
jg
add
out
add
xchg
mov
adc
movsl
addr16
nop
addr16
inc
ds
add
cmp
add
xor
xor
pusha
add
xchg
jns
mov
add
mov
out
or
push
xchg
fmuls
sbb
out
les
add
inc
mov
xchg
and
jmp
sbb
xor
mov
inc
or
adcb
inc
inc
dec
push
sbb
loopne
lock
cld
mov
mov
popa
outsl
add
inc
inc
mov
imul
insb
mov
sbb
fistpll
lds
nop
xlat
ret
lods
pushf
cmp
or
mov
popa
sub
scas
add
sub
out
in
stos
fdivl
fstl
xchg
sbb
xor
or
cmpsb
inc
and
stos
aaa
movsb
mov
pop
sbb
mov
add
sbb
ljmp
bound
xor
repnz
sub
outsl
and
insb
mov
outsl
xchg
or
leave
add
sub
pop
enter
outsl
sub
into
cmpsl
cmp
cwtl
mov
xchg
add
add
aaa
jno
adc
and
mov
loopne
jl
mov
add
dec
push
mov
add
test
jg
xchg
or
dec
ja
inc
pop
enter
or
leave
mov
outsl
sbb
sub
xchg
or
fbld
push
pop
mov
and
push
or
xchg
or
and
loopne
cmp
push
mov
dec
xchg
xchg
dec
out
shll
in
addb
cmpsl
movsb
inc
out
rclb
or
xchg
add
mov
idiv
mov
mov
push
xor
call
and
jmp
rclb
lcall
sub
loope
int
cmp
mov
pushf
push
pop
test
fildl
push
mov
imul
push
xor
sbb
loopne
xchg
loopne
dec
lahf
xchg
push
dec
and
ja
lahf
adc
mov
sbb
stos
outsl
jg
mov
xchg
daa
movsb
outsl
and
push
push
mov
scas
push
rolb
adc
jbe
mov
enter
stos
dec
xchg
mov
test
mov
in
mov
pop
insl
or
or
imul
cwtl
scas
add
ss
fst
or
dec
loopne
sbb
dec
fs
dec
adc
or
and
pop
mov
and
outsl
and
or
mov
adcl
scas
sbb
faddp
push
dec
xchg
aam
aaa
mov
cmpsb
xchg
or
aaa
add
adc
addr16
mov
aaa
cmp
outsl
addr16
sub
add
cmpsl
adc
in
mov
in
add
mov
pop
xor
jg
daa
add
sahf
test
adc
ja
add
in
inc
jg
and
jb
pushf
add
xchg
pop
enter
add
test
orb
jnp
mov
cld
push
mov
arpl
rol
outsl
add
stos
push
imul
aaa
pop
mov
dec
roll
shll
enter
mov
insb
shll
andl
dec
cs
mov
hlt
cmpsb
rolb
imul
iret
in
xlat
andb
add
rol
mov
jl
scas
in
data16
or
outsl
inc
call
push
add
mov
test
push
push
mov
push
and
out
sahf
out
ret
cwtl
jl
or
mov
je
test
ljmp
add
popa
dec
scas
inc
or
lea
jg
and
mov
ret
push
ret
dec
pop
leave
mov
add
in
push
enter
mov
sub
xchg
sub
add
sub
xor
ss
dec
inc
movb
push
cwtl
les
insb
jo
scas
add
push
sbb
mov
add
pusha
and
inc
sar
addr16
test
dec
mov
or
push
xor
ret
push
jb
mov
daa
or
sub
pop
and
cmpsl
inc
shrb
addr16
push
pushf
daa
aas
pop
pusha
stos
addr16
push
stos
mov
pop
dec
movb
hlt
lds
cmp
adc
mov
mov
push
dec
divl
inc
bound
jp
outsl
xchg
pusha
movb
and
je
loope
repnz
mov
add
lcall
nop
loopne
pop
lahf
nop
ds
jb
loopne
xor
in
outsl
inc
inc
push
push
lahf
lods
pop
sbb
ja
enter
test
push
pushf
push
in
fadds
xchg
adc
out
push
sbb
in
addr16
fwait
insl
rcl
out
xlat
push
push
and
inc
push
mov
iret
repz
sbbb
out
cmp
mov
repz
repz
push
andl
in
maxps
pop
jns
jns
mov
cs
sarl
andb
sti
cmp
jg
fldl
bound
push
push
jns
iret
repz
add
fidivrs
pop
fs
or
cmpsb
push
addr16
int
popf
xor
mov
out
addr16
mov
int
push
shl
mov
imul
lcall
outsb
iret
sarl
fists
cmp
jns
in
mov
fdivr
cmp
repz
insl
jns
jmp
sahf
cmpsl
xor
int
repz
repnz
outsl
jo
out
int
imul
add
repz
mov
ds
repz
inc
jae
mov
je
lahf
out
inc
mov
ds
repz
shl
jbe
sarl
xorl
mov
js,pt
mov
dec
in
jp
shl
repz
adc
jno
aad
lahf
out
ds
dec
mov
or
lcall
push
jle
ds
jns
cli
mov
or
jl
out
inc
js
mov
xor
cmpsl
fldenv
sbbl
iret
rep
in
test
insb
stc
cmp
out
or
jns
int
faddp
xchg
mov
jl
cmp
out
add
jns
iret
repz
out
cmp
or
mov
out
sahf
push
xchg
cmc
cmp
sti
cmp
sbb
sarl
cmp
sti
repz
out
xchg
loope
xchg
pusha
xchg
repz
out
xchg
imul
inc
xchg
cmpsl
stc
cmp
mov
ljmp
sahf
mov
xor
cmp
ds
into
add
xor
ficompl
cltd
push
rclb
mov
sahf
out
pushf
js
push
popf
repz
out
sahf
pusha
mov
inc
lahf
cmpsl
stc
cmp
insl
mov
iret
sarl
int
mov
repz
movsb
xor
out
cmp
leave
or
aas
sarb
cmpsb
push
add
imul
test
mov
repz
in
xor
iret
sarl
jne
stos
dec
mov
int
jns
lods
dec
mov
or
cmp
fistps
scas
push
xchg
ds
sarl
dec
out
mov
int
imul
fldcw
aaa
mov
pusha
mov
jo
mov
data16
addr16
ret
push
lcall
out
insb
iret
mov
lret
int3
lret
push
int
jbe
int
shrb
add
rcr
ss
loope
inc
sahf
jmp
sbb
sub
aam
addr16
js
in
sub
xor
add
inc
mov
adc
sub
addr16
scas
add
pop
adc
rcll
inc
pop
mov
sarl
jno
push
arpl
dec
fs
pop
enter
jnp
mov
fdivrs
aas
rorl
int
jg
jg
and
cmp
jg
inc
xchg
and
and
cltd
aas
adc
jp
lcall
pop
fwait
in
pushf
ret
fisttps
sar
rcrl
mov
mov
loop
dec
in
and
shll
in
das
and
enter
and
fwait
cmc
scas
cmc
cmp
xchg
cmp
and
in
jbe
jg
and
in
jge
scas
mov
push
inc
pop
in
inc
inc
pop
daa
mov
daa
nopl
inc
cmc
inc
sarl
sub
or
or
push
xor
sahf
rorb
rcrb
ficompl
pop
adc
dec
xor
cmp
roll
lahf
sbb
and
dec
and
rolb
enter
rcr
pop
jae
inc
aaa
dec
aas
cmpsl
dec
mov
sbb
push
push
pop
push
push
and
pop
pushf
cmp
mov
rcll
push
mov
pop
loopne
add
ficoms
and
addr16
xor
xchg
lret
iret
les
icebp
or
xchg
das
push
dec
jbe
inc
addr16
dec
mov
cmp
out
inc
add
aam
dec
ja
sbb
daa
cmp
mov
out
push
dec
leave
daa
fldt
les
iret
pop
mov
jl
out
mull
lods
addr16
and
sbb
xor
daa
pop
insl
loopne
push
pop
pop
filds
mov
in
aad
push
jb
inc
jae
push
cmpsl
jl
jb
inc
int
aad
cmp
pop
sbbl
xchg
push
icebp
mov
push
cltd
dec
pop
jb
sbb
dec
adc
in
out
test
pop
mov
push
ss
hlt
xchg
jnp
aas
sahf
push
mov
shl
scas
loopne
in
adc
daa
xchg
rorl
pop
scas
cmp
sub
xlat
xchg
add
addr16
mov
pop
inc
les
pushf
popa
ja
lods
xchg
scas
pushf
cmp
or
mov
inc
mov
pop
cmp
jmp
xlat
aas
xchg
push
lds
push
cmp
fnsave
addps
inc
iret
cmp
je
push
shll
push
test
pop
mov
cmpsl
mov
xor
imul
jno
fwait
add
daa
and
dec
and
cmp
pusha
pop
fstps
mov
fldcw
sahf
adc
shlb
mov
fimull
xor
jne
popf
in
out
push
pop
cli
push
add
jecxz
int
popa
add
nopl
xchg
pop
leave
xor
pusha
inc
popa
inc
jae
mov
addr16
addr16
mov
push
das
cmp
cs
dec
outsb
rorb
sub
cmc
or
jl
pop
cmp
and
iret
push
mov
rcr
test
fcomp
ret
push
cmpsl
scas
add
cmp
fdivl
outsb
adc
sub
fcompl
pop
ja
stos
push
mov
cmp
aad
cmp
cmp
in
push
add
mov
mov
lods
jb
enter
cmpsl
sub
arpl
arpl
cwtl
sbb
inc
arpl
add
imul
cmpsl
jnp
outsb
mov
in
orl
cmpsl
xchg
pop
fwait
mov
pop
dec
and
push
push
fnstsw
daa
daa
rcr
out
xor
std
push
or
repz
adc
or
or
or
repz
or
mov
xchg
andb
mov
fldt
orl
movzwl
mov
xchg
inc
pushf
fsubl
xchg
xchg
loopne
inc
ds
repz
add
gs
mov
pop
xor
fdivp
cmp
inc
inc
cwtl
in
lahf
in
inc
leave
cmp
scas
xchg
adc
jo
dec
mov
mov
incb
sbb
nop
xchg
enter
fistps
jb
ret
shlb
gs
mov
gs
or
cltd
loope
sbb
testw
jb
in
inc
dec
out
bound
mov
jg
fists
pop
push
adc
lock
stc
add
loopne
pop
add
pop
dec
mov
mov
fldenv
decl
jns
inc
mov
add
push
add
jbe
out
mov
into
mov
or
push
add
div
mov
pop
mov
sbb
push
pushf
in
addr16
xchg
xor
addr16
addr16
leave
inc
lods
mov
mov
daa
xchg
mov
cld
push
push
cmp
inc
sub
loop
cmp
push
pop
push
cmp
cmp
and
daa
dec
cmp
lcall
mov
nop
scas
iret
subb
lahf
fdiv
leave
dec
push
mov
lds
scas
mov
repz
in
cmp
sbb
imul
fs
adc
or
mov
ds
add
jne
pop
inc
push
daa
dec
push
push
push
jg
mov
pop
les
xchg
jmp
jb
xchg
fwait
mov
add
ja
and
in
in
mulb
in
in
adc
dec
lods
int3
hlt
lds
pop
aas
push
push
loopne
inc
mov
add
sub
repnz
out
insl
inc
je
jg
push
repnz
test
leave
and
cmpsl
call
adc
mov
dec
mov
push
iret
in
popf
mov
ja
je
sahf
pop
and
pop
imul
mov
push
decl
nop
imul
push
add
dec
dec
pop
sbb
iret
mov
scas
setae
mov
xchg
jb
sbb
call
xchg
sub
adc
fldt
lea
add
jae
push
push
push
and
add
repz
cs
add
sahf
cmp
pusha
insb
xlat
or
fcmovne
inc
mov
mov
xchg
loopne
xchg
daa
pop
repz
insl
das
data16
cmp
ljmp
into
xor
andnps
pop
cs
out
pop
cmpsl
push
dec
add
fimull
pushf
xchg
addr16
arpl
push
adc
repnz
mov
daa
push
sub
dec
out
pop
and
push
outsl
addr16
int
xchg
ja
mov
and
xchg
mov
pop
lds
mov
adc
push
or
leave
inc
push
insb
in
xlat
in
and
push
jb
inc
jb
in
in
loopne
adc
decl
jo
popf
sub
mov
dec
and
cmpxchg
imul
xchg
xchg
mov
push
shrb
inc
aaa
inc
push
jb
inc
pop
adc
out
sbb
mov
mov
cmp
outsl
push
ja
out
and
and
orl
out
mov
test
in
test
lock
xor
add
xlat
icebp
stc
jno
dec
sahf
pop
lar
sbb
inc
out
mov
sahf
xchg
out
testl
rclb
pop
push
jle
jo
jo
mov
aam
call
dec
push
enter
add
add
inc
jae
lock
lock
sbb
es
lock
jle
or
jb
xlat
jb
jb
pop
pop
pop
out
jb
jb
jae
addr16
pop
pop
scas
jae
aaa
jae
push
ljmp
cmp
xchg
pop
lock
add
sbb
test
mov
jne
pushf
inc
icebp
sbb
daa
icebp
popf
pushf
je
in
add
je
mov
sbb
je
push
fildll
push
dec
sahf
fildl
fstpl
push
fmuls
loope
cmp
cmp
push
add
std
in
insl
in
das
into
jne
nopl
fstpl
iret
or
push
add
or
fs
addr16
addr16
xchg
xchg
add
dec
ds
mov
mov
xchg
repz
pusha
push
pop
leave
and
test
fisttps
inc
jbe
dec
mov
push
leave
leave
add
popf
or
notl
frstor
daa
dec
hlt
iret
cmp
push
ja
sbb
ja
icebp
in
shr
jns
push
pop
ja
sub
outsl
ja
cmpsb
inc
js
shrd
cmc
dec
mov
paddusb
ja
and
add
xchg
out
outsb
push
push
pop
push
add
jns
pop
popf
cs
js
push
js
in
add
arpl
int
outsl
pop
mov
xchg
adcl
movsb
pop
pop
dec
dec
cs
int3
rcr
fimuls
dec
call
jns
insl
testb
cvtpi2ps
or
sarb
inc
das
dec
push
in
dec
sahf
or
popa
push
insb
js
sahf
out
adc
mov
jns
sub
jae
adc
push
jg
add
add
or
xchg
inc
iret
and
sub
xchg
cmp
push
inc
push
cmp
rep
pop
pop
cs
add
pushf
je
jl
or
lods
nop
pop
xlat
lahf
stos
inc
repnz
mov
add
cmpsl
call
clc
or
pop
and
push
sub
pop
enter
push
jnp
pop
jnp
shrb
popa
jnp
xchg
test
outsl
fstpl
xchg
xchg
pop
out
std
divl
clc
outsl
add
adc
add
push
call
sbb
scas
pop
pop
xor
stc
aam
pushf
dec
adc
and
scas
in
jo
cmpsl
lahf
stos
outsl
add
daa
nop
xor
push
mov
xchg
cmpb
dec
dec
ja
movsl
repz
outsb
pop
cmpsl
lods
mov
push
add
fcmovne
xlat
psraw
or
andl
cli
add
loopne
pop
sub
ja
jo
jg
jge
push
addr16
cmp
ja
add
cs
cmpsb
jp
cmp
xchg
lahf
jge
cmpsl
or
repz
or
lret
sub
cmc
pop
leave
and
push
jle
xor
cmp
add
dec
fs
faddl
iret
mov
addb
cmp
cmp
push
pop
and
leave
rorl
ljmp
int3
addr16
jg
das
push
or
jg
jg
sbb
jb
inc
jg
jg
jg
jg
fimull
jp
add
mov
scas
mov
int
ja
pmuludq
xchg
pushf
loope
jg
add
mov
mov
cmp
in
add
fimull
jo
out
xchg
dec
mov
fcoms
dec
mov
aaa
inc
loope
iret
bswap
xor
hlt
or
mov
push
xor
add
cs
xchg
sbb
add
cmp
sub
or
jae
cmp
inc
or
iret
repz
or
or
repnz
jno
jns
outsb
repnz
adc
leave
repz
mov
in
mov
inc
into
icebp
add
aaa
jb
xchg
pop
mov
xlat
stc
cmpsl
push
aas
ljmp
sbb
dec
cmp
inc
push
fucomi
jbe
xchg
iret
mov
xchg
repnz
add
movsl
add
addr16
and
addl
imul
aam
ja
daa
pop
inc
inc
add
test
movsl
call
addr16
add
add
push
into
leave
push
pop
jg
sub
adc
mov
out
fdivrl
jg
out
dec
mov
push
xcrypt-ofb
cmpsl
scas
jns,pn
dec
mov
or
mov
jns
or
movntq
out
xchg
imull
xlat
push
cmovle
add
cmp
popl
inc
mov
push
pop
push
aas
xchg
addr16
xor
pop
cmpsb
mov
add
into
push
daa
iret
ljmp
adc
ja
lock
sub
es
test
jae
mov
cmp
scas
jg
adc
neg
inc
mov
sbb
out
push
add
pop
or
add
mov
test
add
mov
leave
leave
jae
mov
xchg
setg
das
clc
pop
testl
pushl
add
clc
inc
es
in
movsl
push
rolb
xchg
call
jmp
inc
lcall
orl
sbb
xchg
add
pop
xchg
mov
add
mov
iret
repz
mov
push
or
iret
enter
xchg
clc
mov
push
xchg
repz
repnz
push
add
add
repz
inc
add
add
repz
pop
jle
mov
cmp
repz
rcr
pushl
add
push
xchg
jmp
xchg
cli
das
pop
mov
mov
in
je
lea
fisttps
xchg
add
mov
sahf
movsb
movsl
pop
leave
leave
jl
push
mov
mov
iret
ljmp
jmp
lahf
je
push
popf
outsl
xchg
mov
pop
in
pushl
jb
dec
and
stos
jae
jb
lahf
xchg
and
sbb
rcll
mov
addr16
sbb
mov
ucomiss
cmpl
mov
jb
popa
imul
mov
mov
push
outsl
stos
pop
mov
add
or
xchg
out
je
aad
xchg
call
mov
lea
mov
push
ja
jmp
ltr
push
in
sahf
idiv
inc
push
or
pop
mov
and
and
pop
pop
inc
add
mov
fildll
loopne
cmpsb
mov
mov
inc
push
daa
lods
cmp
cmpsl
popa
out
adc
mov
pusha
add
inc
scas
add
vmovups
xlat
inc
cmp
outsb
pop
fcoml
jg
xlat
ja
adc
das
dec
push
push
mov
mov
dec
pop
push
loopne
in
add
arpl
imul
or
leave
and
or
mov
data16
ja
pop
ret
pop
lret
mov
fnstsw
fisubs
cmp
sbb
mov
mov
xlat
pushf
pushf
pop
xor
outsl
ja
cmp
mov
cmp
ret
fwait
dec
dec
xor
mov
jmp
adc
out
pushf
pushf
pop
pop
pusha
push
mov
das
lcall
xor
dec
mov
out
pushf
push
or
pop
and
je
mov
js
pop
punpcklbw
int
cmp
pshufw
push
int3
int3
jo
cmp
mov
xchg
add
dec
and
scas
and
sahf
outsb
mov
pop
lsl
mov
add
cmpsl
js
rcrb
jb
dec
cs
sub
mov
repnz
cld
add
fmuls
jecxz
xchg
divl
stc
testl
out
fiadds
cs
sbb
and
xor
or
inc
das
daa
iret
repz
push
push
subps
subb
adc
jg
enter
nop
out
nop
rsm
leave
leave
shrl
mov
imul
lret
das
shrd
call
out
xchg
nopl
out
inc
xchg
out
add
adc
addl
out
cmp
xchg
push
add
jns
lahf
mov
mov
cmp
ret
or
cmovs
jae
outsb
xlat
xchg
jg
adc
dec
mov
adc
xchg
sbb
aaa
xchg
out
push
add
sahf
pop
ja
push
xchg
mov
push
xlat
fbstp
in
divps
xchg
pslld
fimuls
or
and
fldcw
pusha
xchg
into
inc
fwait
push
adc
jmp
bts
mov
dec
cs
ret
dec
jo
cmp
lret
xlat
or
push
das
hlt
and
sub
pop
xor
push
aas
push
in
jnp
mov
adc
xchg
mov
insb
push
add
in
in
jl
test
cmp
cmp
mov
xchg
and
xchg
call
dec
dec
mov
add
into
lret
mov
push
dec
sahf
out
addr16
inc
add
dec
icebp
in
add
push
fisttps
pop
aaa
mov
mov
xchg
xchg
xchg
fwait
mov
inc
jmp
aam
into
mov
ret
xchg
call
dec
or
xchg
mov
leave
or
sub
mov
dec
push
subps
push
lds
mov
das
outsl
leave
insl
mov
outsl
cmpsl
iret
scas
pushf
cmp
leave
mov
push
or
addr16
out
adc
and
xchg
jbe
shll
pop
cmovne
in
push
xchg
fisttpl
out
dec
outsb
adc
mov
in
jns
jmp
jne
stc
fists
in
xor
ja
cwtl
int3
xchg
push
int3
ret
cwtl
xlat
popf
xlat
insl
xchg
add
pop
jg
push
out
dec
sahf
add
push
emms
pop
and
pushf
cmp
or
sbb
in
shrl
mov
aas
decl
pop
cltd
das
ficoml
cltd
cmpsl
mov
xor
pushf
pushf
fsubl
cmp
inc
dec
push
mov
mov
hlt
mov
xchg
orl
daa
daa
daa
enter
jecxz
mov
jle
sbb
cltd
jns
sub
lcall
out
and
add
ds
lcall
cmp
outsb
lcall
je
or
cmpsb
ja
cmp
bsf
movq
mov
aas
call
js
decb
fwait
pop
adc
or
daa
iret
repz
cmp
daa
daa
push
pop
adc
dec
sahf
ja
mov
orl
pop
dec
lods
fwait
out
es
iret
sbb
loopne
cmovs
mov
call
sbb
pushf
aas
adc
mov
leave
inc
or
push
movsb
imul
out
jb
ljmp
popf
out
outsb
emms
into
push
add
jns
fst
ficomps
lar
pop
out
jns
out
out
or
or
sahf
fsts
push
or
push
popf
inc
push
cmovle
adc
sbb
popf
mov
lea
mov
scas
mov
push
ds
inc
scas
adc
inc
xchg
rclb
daa
and
dec
push
or
cld
in
pmuludq
out
adc
es
push
add
mov
sahf
pop
cwtl
in
xor
pop
push
popf
call
push
xchg
out
shlb
mov
xchg
push
add
mov
mov
outsl
pop
add
sahf
pop
push
and
scas
push
push
or
mov
sub
pop
mov
js
lahf
pop
mov
sahf
gs
jmp
cmp
mov
cwtl
mov
sarl
pop
pop
outsb
pop
fsubl
lret
psrlq
ja
fistl
mov
lahf
repz
xchg
mov
mov
pusha
pop
movhps
jbe
and
add
push
leave
test
hlt
pop
leave
lret
arpl
int3
pop
add
js
outsl
dec
fstl
ja
inc
outsl
push
xchg
das
nop
fnstenv
inc
and
sub
inc
lahf
pushf
and
mov
and
ret
outsb
xor
decl
or
mov
mov
pop
dec
push
or
iret
mov
into
gs
push
or
repz
xchg
iret
repz
cmpsl
adc
repz
iret
repz
adc
adc
iret
repz
lcall
or
jns
sbb
and
sbb
cmp
cmp
push
adc
cmp
adc
adc
cmp
cmp
push
or
fildll
mov
pop
push
add
pop
mov
arpl
add
imul
in
out
mov
push
jns
and
lods
cmp
pop
leave
testb
scas
sahf
push
mull
pop
arpl
jl
jns
jp
xor
or
and
push
fcomp
add
sahf
add
mov
jns
and
pop
sahf
xlat
pop
ja
mov
push
add
add
add
nop
addr16
mov
jp
js
mov
xor
addr16
mov
pop
jo
das
mov
aad
pop
mov
fstpl
pop
add
jns
sahf
or
in
or
mov
iret
mov
std
paddd
out
dec
and
movsb
jno
inc
inc
scas
dec
movsb
push
movsb
mov
addr16
mov
xchg
push
mov
xchg
mov
in
jns
xchg
in
add
in
hlt
mov
xchg
inc
mov
xchg
orb
mov
jmp
pop
out
fisubs
imull
add
popf
jb
jp
sbbb
mov
xchg
pop
lcall
mov
or
jns
out
or
jae
in
lret
outsl
adc
or
addr16
cmc
adcb
std
add
psraw
xlat
sub
sahf
jne
jns
cmpsb
push
add
push
jp
cmp
push
add
in
jb
iret
cwtl
daa
or
sbb
add
test
xchg
scas
setp
dec
dec
dec
mov
push
shrb
ret
out
mov
js
psrld
fisubl
pop
cmpsl
idivl
pusha
out
add
dec
je
pop
push
daa
test
cmpsl
dec
outsb
xchg
xchg
cmpsl
cmpsl
cmovo
out
jns
push
pop
xchg
fdivs
sarb
fmull
ja
and
into
in
in
int3
aam
fmul
jae
call
movsb
pop
push
incl
test
pop
adc
sub
inc
into
in
mov
addr16
jp
push
out
push
test
xchg
fsubl
xchg
sub
out
in
mov
pop
test
add
push
and
sub
cmp
jns
dec
xchg
push
movq
mov
push
or
push
mov
incb
cmp
incl
sub
jo
mov
and
enter
push
aas
fistpll
cmp
mov
inc
ret
movsl
inc
pushl
xchg
push
leave
aam
test
xchg
mov
pop
stos
hlt
stc
inc
faddl
push
jbe
stos
dec
ss
ja
into
sub
mov
mov
loopne
femms
add
stos
leave
leave
shrl
clts
ret
leave
leave
leave
aam
out
or
inc
sahf
cmp
add
xchg
iret
add
adc
xor
and
xchg
fildl
sub
inc
insb
mov
pop
addb
push
movsl
outsl
mov
fnsave
bnd
push
pop
mov
add
shrl
jns
leave
out
push
or
std
jl
xchg
popa
aas
lods
adc
fstps
cs
push
add
ret
mov
push
lods
out
pop
inc
xchg
dec
dec
pusha
cs
inc
test
lods
jg
ficomps
test
lods
cs
push
mov
psadbw
iret
push
jb
pop
ret
inc
cmp
mov
sti
push
mov
clc
pop
daa
or
inc
out
or
ja
into
leave
or
ja
data16
scas
dec
push
das
pop
out
pushf
add
testl
daa
mov
sub
xor
lods
cmpsl
jne
rcrl
pop
cmpsl
popa
push
add
jae
push
jg
add
xor
xchg
mov
dec
data16
xchg
push
add
in
jns
ds
ja
xchg
dec
les
push
mov
sahf
add
xchg
cmc
sub
clc
xor
leave
sub
add
iret
dec
mov
iret
push
push
in
jb
es
pop
add
cmp
jae
add
leave
repz
std
adc
add
adc
fldl
xor
push
add
push
aad
int
addr16
xor
arpl
test
leave
rep
loopne
outsl
push
add
out
jns
clts
pushf
movsb
or
adcl
or
cmp
jl
adc
lcall
mov
repnz
out
daa
adc
sbb
and
add
jb
fisttps
pop
imul
dec
pop
mov
xchg
dec
fwait
cmp
jbe
rdmsr
cs
push
repz
cmovp
adc
repnz
adc
bound
leave
in
xchg
xchg
adc
lcall
stos
mov
sbb
cmp
scas
fwait
nopl
lret
dec
sahf
outsb
repnz
and
ljmp
repnz
dec
add
in
or
sub
sub
cmp
jns
sub
sub
iret
repz
sub
sub
jbe
cmp
dec
push
cvtps2pd
mov
nop
lods
les
xchg
xor
add
pushf
stos
jno
repnz
inc
in
daa
inc
orl
ja
mov
mov
and
mov
xor
mov
jecxz
leave
js
push
incl
in
ja
xor
inc
mov
dec
ss
iret
add
pop
xchg
or
mov
push
enter
aaa
pop
pop
mov
out
mov
sysret
xchg
or
test
mov
mov
cmp
or
clc
outsl
es
cmp
push
adc
repz
adc
iret
repz
iret
repz
dec
sbb
popa
sbb
repz
sbb
jg
cmp
repz
iret
repz
popf
and
iret
repz
and
and
repz
repz
xor
adc
imulb
popa
aas
or
out
push
sub
pop
sub
into
into
fidivrs
xor
mov
dec
mov
int
into
mov
mov
addr16
and
and
sbbb
sahf
out
mov
xchg
sbb
out
mov
out
sahf
mov
mov
sahf
out
lret
adc
lods
xor
jle
mov
xchg
jae
mov
push
mov
adc
jle
dec
and
mov
mov
inc
mov
mov
stc
adc
add
sahf
pop
push
pop
test
xchg
sahf
out
sahf
or
inc
mov
js
mov
mov
enter
mov
mov
mov
sbb
jb
mov
mov
push
adc
cmp
es
xor
repz
repz
iret
repz
sbb
imul
push
sbbb
and
in
jbe
cltd
mov
outsl
mov
pop
scas
ror
in
orb
paddsb
testl
outsl
or
adc
iret
repz
adc
adc
xor
and
mov
push
or
dec
or
or
jns
out
bound
insl
or
jns
out
addl
add
jns
cltd
cmp
in
outsl
daa
mov
mov
mov
mov
jo
jmp
repz
dec
outsb
sti
ucomiss
iret
insl
in
popl
mov
in
leave
repz
or
sub
rorb
mov
cmp
add
jns
ja
daa
test
add
xchg
xchg
scas
aas
mov
mov
xchg
into
ficomps
out
idiv
movd
mov
pushf
pushf
fmull
das
aaa
aas
inc
pushf
pushf
pushf
pushf
dec
push
pop
addr16
repz
outsl
sbb
sbb
pushf
nop
pop
into
cwtl
mov
jns
mov
mov
pop
fidivrs
sahf
out
add
repnz
or
adc
or
repz
sahf
outsb
and
push
push
add
cmp
cltd
loopne
out
pop
push
addps
push
repnz
cmp
mov
fnstsw
push
add
out
mov
ror
pop
leave
jae
repnz
sahf
or
fsts
or
in
in
mov
push
rdtsc
cmp
out
sahf
fildl
push
adc
cmp
xchg
push
jns
xchg
out
xchg
lahf
sbb
mov
ror
xchg
out
jns
loope
in
mov
and
mov
cmp
cmp
cmp
cmp
dec
pop
gs
dec
sub
mov
decl
add
mov
aaa
jns
and
add
les
push
fadds
pop
loop
ljmp
hlt
decb
or
mov
push
push
push
es
out
cmp
adc
jae
cmp
inc
pop
dec
adc
es
pop
nopw
outsb
sbb
nopl
dec
and
xchg
dec
mov
ret
lret
aad
dec
dec
dec
fucom
in
cmc
mov
aas
std
mov
das
sub
cmp
mov
and
ds
cmovns
pop
cmp
push
add
popa
insl
dec
lock
jp
fists
sahf
out
lods
push
or
pop
aaa
prefetch
rcr
pop
jmp
jg
lahf
mov
mov
outsl
push
adc
fcmovne
cmp
push
stc
sbb
fisubs
sahf
push
rclb
sbb
push
jne
out
sbb
mov
fucomi
in
inc
push
pop
pop
jg
rcrb
sarb
iret
repz
sub
push
sub
repz
lahf
sub
iret
repz
shlb
lret
out
sahf
out
xor
xor
cmp
xor
sarb
idivl
stos
push
cmp
adcb
jecxz
imul
stc
aas
add
inc
in
sahf
out
inc
sbb
sub
mov
inc
dec
dec
push
adc
jp
lods
add
cwtl
bound
push
mov
dec
call
ja
aas
ss
clc
mov
xchg
sarl
jg
shll
out
push
push
flds
in
inc
ds
repz
or
or
ret
iret
repz
pop
push
or
cmp
repz
push
adc
popf
cmp
pop
adc
push
adc
cmp
adcl
outsb
daa
iret
sbb
rcr
leave
repz
fstpl
ss
add
das
or
and
scas
cmc
in
cmp
pop
xor
dec
cwtl
dec
ret
pop
jp
dec
and
jns
ret
test
sahf
ja
mov
push
add
daa
iret
jnp
push
lcall
add
jo
psadbw
pop
sahf
out
jge
or
or
or
cmp
repz
sub
inc
popf
cmp
repz
pop
data16
mov
jl
xchg
repz
xchg
sbb
cmp
sbb
xchg
out
leave
sbb
bound
repnz
shlb
push
and
and
sub
aaa
sub
repz
sub
pop
sub
vmwrite
test
scas
adc
jg
add
int3
lds
das
add
add
hlt
cmp
repz
add
add
outsb
or
ds
push
addr16
and
jg
inc
add
jns
iret
js
fisubrs
outsb
das
outsl
push
pop
jbe
in
negl
xchg
iret
mov
in
sysret
mov
out
fmulp
ret
or
or
or
or
flds
pop
adc
adc
sbb
daa
xor
sahf
out
aas
adc
jns
out
sbb
jns
xchg
xchg
jl
xchg
sbb
out
sahf
out
stos
push
mov
or
xchg
ror
fmul
jecxz
or
repnz
fsubrp
stc
loopne
dec
cwtl
out
xchg
daa
testb
sbb
and
pushf
outsl
inc
pop
inc
inc
daa
push
into
push
pop
divps
push
push
dec
enter
enter
inc
pcmpeqd
in
mov
fwait
enter
enter
in
enter
loope
daa
fsubp
add
in
enter
cmp
gs
femms
adc
daa
push
lret
lea
iret
push
xor
jns
ja
sbb
imul
loop
jbe
or
aam
mov
xlat
mov
mov
iret
fcmove
das
leave
movsl
les
cmc
leave
das
sahf
xchg
dec
mov
wbinvd
add
iret
sbb
ds
and
repnz
dec
push
adc
cmp
pop
push
adc
adc
imul
sbb
sbb
dec
sahf
out
sbb
mov
push
iret
repz
mov
and
aam
and
dec
std
lret
adc
lcall
add
cmp
mov
ss
dec
push
dec
pop
pop
movsb
push
lret
push
dec
push
or
orl
iret
repz
push
cltd
shld
outsb
xchg
daa
out
lret
pextrw
adc
in
fldt
out
cmova
pushf
push
jg
lret
cld
lret
repnz
adc
sbb
dec
sahf
aaa
sub
pop
xor
mov
dec
int3
dec
and
cmp
repz
and
fcmovne
orb
inc
and
and
aas
insb
dec
cmp
push
jl
out
and
sbb
int3
test
int3
pop
movb
int
lods
jbe
push
mov
mov
pop
in
insb
int
int
mov
int
sahf
outsb
sbb
mov
pop
scas
or
movsb
fwait
syscall
aas
fucomi
in
push
or
movntq
enter
adc
sub
enter
xor
into
jg
into
daa
iret
repz
mov
sahf
ja
cmp
int
cs
into
hlt
in
sbb
sbb
leave
repz
cmp
and
pushf
cmp
jne
orb
xchg
daa
mov
dec
mov
sub
out
daa
iret
sub
fsubs
dec
sahf
xor
xchg
out
out
cs
add
jecxz
int
out
pop
sbb
cmp
outsb
aaa
pop
jbe
push
into
pop
lahf
push
jne
iret
leave
repz
cmp
xchg
dec
and
adc
sarb
sarb
jbe
push
mov
push
jae
popf
cmp
lret
das
psraw
cmp
iret
or
testl
sbb
push
adc
cmp
in
adc
inc
push
adc
ja
popf
pop
das
imul
fucomi
in
sbb
jns
xchg
xchg
lods
mov
sahf
ja
fisttpl
out
and
out
fs
mov
rorb
cs
jae
jns
push
push
punpcklwd
insb
daa
iret
repz
ja
and
jecxz
cmp
rcrb
rcll
shrl
sbb
cmp
xor
lea
push
cwtl
cmp
scas
lds
fisttpl
jb
fidivrs
punpcklwd
pop
inc
dec
push
mov
add
rorl
add
pop
dec
dec
sahf
ja
push
pop
lahf
cmpsl
mov
popf
xlat
dec
add
push
mov
sub
mov
outsl
shll
sahf
or
pop
jmp
repz
aam
push
in
ficomps
cltd
fadds
je
loopne
pushf
adcl
decl
rcrl
daa
inc
test
inc
loope
jo
pop
push
test
subb
dec
add
and
sbb
bound
ss
add
add
aas
inc
push
dec
pop
sub
inc
out
xchg
inc
or
pop
inc
ror
add
aaa
insl
mov
les
js
push
in
mov
add
jle
push
or
wbinvd
or
sub
or
push
add
adc
pop
adc
xchg
xchg
fcmovne
and
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
and
movsb
loope
pop
data16
sbb
iret
jo
sbb
add
add
and
or
push
nop
add
incl
pusha
les
arpl
adc
jb
in
mov
movsb
add
cmpsb
fisttps
cs
jb,pt
movsl
sbbl
test
pop
shll
cmovo
pop
inc
mov
or
mov
sbb
in
call
adc
push
ficompl
push
pop
fisubrl
xor
mov
rcr
fsubp
stc
jb
jle
xor
in
jl
js
sahf
out
push
je
insb
push
out
push
dec
inc
xor
out
sahf
sub
sbb
adc
jl
out
or
add
cld
repz
sar
hlt
lock
iret
aam
repz
les
mov
iret
repz
xchg
mov
je
push
jns
push
daa
hlt
pop
dec
mov
in
sahf
out
xor
and
sahf
out
ds
cld
repnz
fadd
mov
sahf
out
mov
iret
repz
out
jo
pop
pusha
pop
push
cmp
repz
inc
xor
repz
icebp
mov
fmul
or
movsb
nop
adc
push
jl
push
push
inc
icebp
and
add
pop
movsb
imul
lcall
fadds
sub
nop
js
mov
push
rorl
add
aas
sbb
testb
push
add
or
scas
jne
inc
mov
xchg
adcb
xorb
icebp
call
push
mov
push
inc
jg
jp
stos
mov
pop
mov
rolb
add
adc
pusha
add
rol
adc
addb
sbb
add
or
daa
inc
pop
mov
mov
push
testl
add
cmpb
push
xchg
mov
cs
mov
push
dec
loopne
pop
jg
push
in
mov
mov
lock
movsl
xor
out
xchg
es
out
gs
adc
sbb
push
sbb
imul
out
add
dec
or
gs
cmp
push
ds
cmc
mov
xor
lock
pmaxub
cmc
jns,pt
jnp
add
mov
jns
out
mov
int3
or
repz
les
mov
out
adc
adc
or
cmp
repnz
pop
pop
push
and
repz
repz
and
and
in
fdivs
adc
psubb
out
pop
loope
loope
imul
daa
xor
js
push
xchg
cld
subb
inc
push
pop
aaa
repnz
xorl
fistl
cmp
pop
iret
repz
js
mov
repz
mov
jnp
xor
dec
insl
add
push
pop
js
out
ja
mov
repnz
xor
das
push
dec
insb
dec
mov
dec
add
pop
enter
mov
cli
or
jl
pushf
or
ret
mov
adc
pop
in
adcb
sbb
lcall
mov
mov
ret
inc
and
sahf
mov
sub
inc
call
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
addl
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
ljmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
ljmp
inc
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
dec
ret
in
cmp
sahf
xchg
pop
lcall
and
inc
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
insb
add
fwait
xchg
and
ret
int3
mov
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
jmp
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
js
push
mov
xchg
aas
and
loop
mov
jp
jmp
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
and
cmp
jp
and
cmp
mov
cmp
pop
cmp
xlat
cmp
mov
sbb
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
incl
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
fstpt
pop
ficomps
frstor
fs
or
test
outsl
out
inc
inc
mov
subl
je
inc
cmp
push
dec
inc
push
pop
jmp
in
jmp
dec
dec
inc
push
dec
inc
aaa
xor
jg
pop
insb
pop
add
mov
call
push
inc
dec
inc
jo
inc
popa
push
outsb
sub
mov
pop
imul
insl
sbb
push
outsl
mov
pop
dec
insb
imul
dec
push
fldenv
cmp
cmp
mov
inc
jbe
je
and
clc
rorl
dec
push
ret
daa
pusha
push
jo
jb
push
add
inc
inc
test
sbb
dec
inc
gs
gs
jbe
orb
push
inc
arpl
imul
shrb
jae
outsl
push
dec
pop
mov
push
push
xchg
mov
out
xorb
dec
dec
add
pop
sbb
das
or
insb
fs
push
fs
or
shrb
sub
pusha
sub
dec
lea
or
dec
inc
dec
daa
call
dec
jae
imul
xor
inc
mov
clc
cmpb
jns
dec
lahf
loopne
dec
push
push
les
push
cmp
data16
jns
xor
lods
dec
mov
adc
insl
inc
inc
je
or
sbb
out
std
lret
add
dec
push
dec
dec
in
bound
sbb
jbe
dec
test
push
mov
inc
mov
add
inc
cli
adc
inc
dec
popa
jne
arpl
cmp
adc
dec
dec
pop
inc
add
push
xlat
push
les
pop
mov
mov
or
inc
in
cltd
add
xchg
push
jmp
push
js
cli
dec
sub
mov
mov
addr16
pop
inc
ficoml
dec
push
loope
mov
jg
mov
push
push
push
push
imul
mov
mov
push
push
jb
lds
enter
push
adc
subb
xlat
mov
clc
jp
lock
push
inc
adc
lods
mov
repnz
mov
insl
cmc
mov
inc
arpl
push
pushf
nop
push
push
cmpsl
pusha
or
inc
push
out
jg
mov
sub
fisttpl
mov
pop
daa
movsl
add
or
mov
data16
add
fisttpl
xchg
outsl
outsl
ja
pusha
pop
es
or
pusha
pop
pop
stos
mov
arpl
aam
les
pop
add
sbb
push
stc
lahf
mov
ja
inc
shll
std
cmpsl
mov
push
mov
dec
scas
push
dec
je
xlat
dec
add
lahf
inc
test
sub
dec
lahf
popl
dec
adc
adc
adc
subl
aas
jo
nop
cmp
or
push
adc
or
cmp
out
dec
rsqrtps
xchg
dec
cli
push
dec
push
inc
daa
dec
dec
aaa
or
xchg
js
sbbl
sub
in
sbb
sbb
push
outsl
mov
imul
dec
push
pop
push
jne
les
outsl
inc
roll
adc
add
mov
or
addr16
iret
mov
popa
or
addb
pop
repz
inc
stos
addr16
xlat
fiaddl
out
jg
cmp
rorb
jns
mov
xor
or
sarl
fdivrs
repz
clc
mov
pop
sub
cld
out
push
add
jns
sahf
cmp
ds
test
enter
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
jmp
aad
mov
rclb
mov
sub
mov
sbb
repnz
repz
test
ficompl
jmp
mov
hlt
movl
inc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
mov
or
call
dec
push
sarl
fdivl
jno
add
aad
mov
lcall
mov
push
movsl
in
lahf
xor
mov
js
stc
pushl
loopne
or
mov
cmp
fs
add
hlt
push
imul
jmp
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
call
mov
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
sti
jg
xchg
pop
cmp
loop
mov
dec
xlat
xchg
fadd
jg
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
call
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
mov
pop
sahf
pop
jge
xchg
shlb
add
lcall
inc
push
imul
xorb
sbb
push
imul
aam
loopne
call
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
call
mov
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
cmp
jmp
mov
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
mov
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
decl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
incl
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
call
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
dec
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sub
sbb
add
cs
inc
inc
mov
mov
pop
add
ds
inc
jne
xor
test
push
imul
dec
je
push
insb
imul
idiv
and
jbe
push
jns
arpl
arpl
rorb
ja
push
inc
insl
insb
das
subb
inc
jne
outsl
insl
mov
dec
adc
inc
insb
fildl
xlat
fwait
pop
fcom
fsubl
fwait
mov
xchg
hlt
jne
mov
dec
inc
js
add
cmp
inc
insl
bound
test
or
inc
inc
ret
sbb
inc
js
push
dec
orl
pusha
pop
sbb
and
aas
pop
inc
fistpll
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
fdivr
pop
sub
xor
xor
xor
pop
jnp
movsb
popa
push
inc
jbe
pop
sbb
mov
fsubs
push
dec
mov
mov
or
ror
and
test
xchg
mov
fbld
push
xchg
fs
push
mov
ss
jbe
arpl
fstps
or
inc
aas
enter
mov
push
ret
mov
sbb
mov
rdpmc
test
shll
or
push
add
insb
popa
jns
aam
bound
push
dec
insb
and
push
inc
popa
xchg
cmp
js
stos
mov
inc
push
add
inc
adc
aas
sub
jg
and
xor
popf
int
mov
inc
aas
insb
push
cmp
aaa
inc
mulb
xchg
sbb
inc
pop
sub
sbb
cmp
jae
idiv
jo
inc
inc
add
ds
mov
lcall
inc
jg
dec
push
dec
dec
lea
or
push
mov
xchg
jle
inc
outsb
jne
jne
mov
xchg
dec
jge
pop
aad
pop
xor
xor
or
add
addr16
aaa
jbe
push
clc
xchg
into
pop
jo
mov
roll
or
adc
aas
aaa
fcom
scas
inc
cltd
dec
add
popa
mov
or
test
orb
and
mov
lahf
push
xchg
test
jo
fisubl
pop
mov
xlat
mov
and
xchg
loopne
cmpsl
sbb
inc
jb
dec
dec
add
jo
roll
push
cmpb
outsl
outsl
test
add
push
push
test
inc
bound
stos
cmp
mov
xor
pop
in
jno
cwtl
sbb
test
pop
cmp
pop
xchg
lock
arpl
test
sarl
jo
push
xor
push
outsl
insb
jns
mov
inc
push
mov
push
and
add
test
in
and
dec
sbb
mov
bswap
inc
push
bound
jo
add
mov
stos
jmp
cwtl
mov
divl
sbb
test
and
jp
rolb
sub
or
jns
mov
add
ret
pop
cld
mov
pushf
dec
scas
addr16
hlt
push
testb
push
in
mov
movsb
adc
stos
outsl
cmc
mov
inc
sub
pop
add
ljmp
test
aaa
push
mov
cs
push
outsb
mov
jb
js
popl
push
daa
aas
pop
push
xchg
or
adc
push
addl
add
add
fsubrs
loopne
adc
dec
sbb
in
add
fildl
add
add
add
add
or
pop
pop
push
or
or
or
or
or
push
adc
push
adc
adc
push
adc
mov
jmp
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
insb
imulb
clc
inc
add
or
xchg
add
add
adc
push
pop
or
add
add
xchg
inc
mov
sarl
cmp
call
adc
push
adc
pop
and
xor
inc
mov
adc
xor
add
inc
mov
js
inc
inc
cmp
inc
push
add
or
or
dec
cmpsl
loope
test
roll
or
adcb
or
add
adc
push
scas
pushf
into
add
adc
pop
testl
adc
push
adc
adc
cld
push
pop
popa
jno
and
adc
mov
or
xor
lock
stos
and
loope
icebp
mov
dec
inc
jo
mov
mov
rorl
mov
fiaddl
or
adc
stos
js
jg
in
push
sar
or
add
lds
cld
fcomip
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
outsb
sar
lcall
std
movsl
jecxz
cli
pop
mov
pushl
mov
xchg
jg
or
insb
sub
addr16
out
or
call
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
mov
incl
or
xor
lcall
mov
fistpll
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
sti
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
mov
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
clc
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
cltd
or
push
sahf
pop
clc
sti
jg
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sti
cld
cltd
inc
sbb
add
incl
jb
mov
or
push
mov
sub
pop
mov
jl
mov
dec
jp
push
gs
jg
sti
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
ljmp
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
subl
jb
adc
push
lock
lods
jp
testb
sbb
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
imul
ljmp
aaa
xchg
in
add
inc
adc
loope
fisttpll
ror
rcrl
cli
push
push
push
idivl
ljmp
dec
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
inc
sar
cmp
sti
punpckhbw
cmpsb
orb
mov
push
sarl
inc
push
sub
xchg
pop
clc
pop
hlt
jg
push
lret
movsb
add
lea
jg
jmp
std
xorb
jg
aad
adc
ret
das
pop
pop
mov
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
jmp
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
jl
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
inc
in
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
sbbb
mov
stos
dec
lods
xor
jg,pn
cmpsl
scas
in
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
decl
idivb
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
lods
andb
add
jg
jle
jg
pushl
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
rol
cld
addl
adc
and
iret
imulb
fmull
enter
jecxz
scas
sub
pop
decl
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
fucomi
xchg
adc
inc
or
pop
jg
add
mov
mov
jg
mov
aad
test
mov
fsubr
lock
mov
iret
push
jbe
push
sbb
addl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
sarl
adc
loopne
and
push
xorl
and
std
stos
jge
push
cmp
dec
push
in
aas
mov
push
imul
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
jmp
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
push
sti
or
jno
pop
nop
mov
lcall
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
incl
fsubr
fistps
lds
fidivrl
jg
jg
mov
pop
add
dec
mov
sub
jge
xor
fcomi
icebp
negb
sbb
cld
addl
inc
sbb
mov
lahf
outsl
int3
push
sbb
aas
pop
dec
pop
test
bound
pop
or
aas
mov
xchg
inc
test
in
jge
popa
push
test
jbe
mov
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
jg
mov
pop
jg
pop
shrb
rcl
jg
adc
pushl
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
cmp
adc
inc
lds
push
pop
adc
imul
or
outsl
incl
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
ljmp
jmp
mov
into
test
xchg
movsb
insb
or
and
xchg
cmpsb
test
fidivrs
clc
insb
test
sar
aas
repz
sbb
lock
in
jmp
out
sbb
and
jle
aaa
clc
push
std
mov
out
sub
mov
jne
or
cmc
mov
decl
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
sarb
out
pop
or
or
dec
ss
sti
adc
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
scas
cli
in
add
pop
in
cmp
jmp
outsl
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
sub
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
adc
loopne
cltd
or
mov
ret
nop
cmp
das
push
mov
add
lock
pop
pop
div
cld
idivl
pop
aas
adc
fs
loope
jae
push
xor
jg
ljmp
cmpsb
jge
fbstp
out
xchg
add
out
insb
clc
pop
inc
icebp
mov
loope
mov
cmpsl
popf
bound
cmp
ja
push
daa
outsl
das
jge
fxtract
mov
call
pop
lock
decb
adc
mov
and
adc
call
add
dec
or
pop
in
mov
inc
add
cltd
mov
mov
aaa
std
fucomip
or
inc
sbb
xchg
rcrl
jle
icebp
ret
ror
sbb
cmp
jmp
jg
idiv
stos
cmp
aas
pop
clc
loope
loope
mov
sub
lahf
jp
dec
add
xlat
mov
inc
rcl
je
xchg
fldenv
iret
mov
mov
lcall
decb
jno
pop
gs
imull
jg
pop
out
jg
jno
ret
xchg
xchg
cmp
xchg
cwtl
arpl
out
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
sbb
jmp
adc
mov
daa
jmp
faddl
mov
mov
outsl
xchg
pop
add
pop
stc
push
dec
out
fistl
movsb
mov
mov
enter
std
repz
add
fsts
dec
dec
add
lcall
pop
inc
add
and
xchg
push
push
nop
mov
mov
iret
and
mov
test
add
jmp
push
add
cwtl
add
stc
sub
lcall
pop
jge
dec
into
add
jne
sbb
lcall
push
cs
call
push
add
mov
out
mov
mov
adc
push
and
scas
push
lahf
mov
call
cmpl
scas
adc
imul
hlt
repz
popl
and
sbb
xor
stos
incl
add
xchg
sub
inc
sub
jp
ret
les
lcall
call
sbb
in
push
xor
les
pop
mov
dec
std
or
inc
mov
hlt
add
pushl
loop
imul
lods
sbb
lods
mov
orb
push
clc
xchg
lret
mov
or
fwait
lock
mov
ret
sti
mov
testb
add
mov
lock
les
fdivs
lods
push
sahf
je
ror
jecxz
inc
fs
push
xchg
inc
dec
and
sbb
xor
jnp
pop
sar
or
enter
cwtl
lret
mov
inc
mov
mov
scas
inc
out
adc
movsb
rclb
push
cmp
fdivrs
xchg
into
mov
or
ret
cmp
clc
outsb
push
mov
ret
imul
decl
aad
xor
inc
outsl
push
out
cmpsb
aaa
dec
xchg
subl
pop
movsb
or
inc
sbbb
sub
movsb
aaa
popf
mov
faddp
push
test
in
jle
push
xlat
push
into
mov
mov
jns
cmpsb
mov
sarb
das
rclb
addr16
sti
jmp
ja
pop
scas
leave
mov
testb
sbb
fwait
jae
je
call
jmp
or
lds
cmp
test
std
ljmp
sbb
push
pop
js
arpl
and
incb
adc
addl
mov
mov
ficoml
sahf
decl
js
loope
aaa
or
dec
mov
mov
test
xchg
push
js
das
fcoml
fidivl
loop
scas
in
aam
xchg
xchg
adc
pushl
subb
lock
jg
cmp
scas
dec
inc
and
mov
xor
mov
mov
ljmp
dec
cmp
arpl
mov
fs
sub
in
test
xor
pusha
jns
std
jg
jno
push
or
mov
cli
push
adc
jle,pn
iret
ds
outsl
add
lcall
xor
jae
mov
fnsave
jl
sub
and
insl
sti
cli
pop
fwait
mov
pop
fldcw
pop
jmp
cmp
sbb
lods
jns
jge
inc
inc
xor
hlt
pop
cs
mov
mov
mov
enter
inc
mov
incl
jb
push
ss
lret
mov
ret
jmp
dec
icebp
test
mov
leave
mov
int
fcompl
je
dec
or
adc
imul
push
push
pop
mov
repnz
ljmp
inc
jecxz
xor
paddq
sbb
cmp
mov
xchg
and
aad
inc
pop
sub
aaa
std
fbld
cmp
or
xchg
paddd
clc
mov
push
cmp
call
ja
fwait
rolb
sub
int3
push
cmp
xor
push
dec
call
jmp
jno
negb
pop
adc
in
cmp
xlat
mov
cmpsb
icebp
pushl
pop
cmp
mov
inc
cli
repz
cltd
and
jmp
mov
mov
mov
fsubrl
das
stos
test
mov
lods
cmpsb
pop
add
stos
je
xchg
mov
push
jo
dec
pushl
push
je
vpaddusw
dec
negl
lods
rcrb
cld
cmc
mov
dec
sbb
dec
ljmp
pop
sub
or
xchg
adc
jne
add
jecxz
lcall
mov
std
ret
jp
xchg
add
mov
xor
lret
loop
incl
add
pop
sub
testb
sahf
lea
jle
leave
mov
xor
pushf
icebp
adc
je
pop
mov
fnstcw
ljmp
jl
lods
xchg
or
andl
or
xchg
out
push
mov
int
mov
push
mov
mov
inc
outsb
jb
movsb
add
dec
aad
jmp
outsl
jg
scas
push
gs
mov
cli
int
test
mov
jmp
test
sbb
pop
leave
lds
dec
sbb
jmp
jb
push
lcall
icebp
jmp
and
add
adc
popl
cmpsl
cmpsb
es
jbe
out
aad
cmp
call
sbb
mov
inc
int3
xor
rcr
jge
or
gs
mov
mov
mov
outsw
in
and
push
cmpsb
xchg
inc
mov
ret
mov
dec
jmp
outsl
dec
arpl
icebp
incl
rol
mov
or
sbb
adc
incb
filds
lcall
gs
xor
shrb
in
lret
push
mov
test
incl
push
std
lods
xchg
mov
and
mov
xor
ds
daa
pop
dec
xchg
or
cmpsb
pusha
imul
lcall
fstps
hlt
imul
xor
xor
std
enter
push
mov
pushl
dec
ret
push
dec
lods
push
fstpt
lret
loope
add
xor
sarb
xor
xchg
decl
stc
inc
xchg
cwtl
iret
mull
ret
loop
ss
repz
inc
fdivl
into
dec
add
mov
ficompl
pop
inc
cmpsl
sbb
sbb
jge
cmp
and
jmp
decl
in
mov
popa
in
icebp
lahf
testl
pop
fisubrl
pop
shrb
mov
xchg
js
lods
inc
arpl
mov
in
test
hlt
pop
xor
adc
clc
cli
push
pop
lods
popa
mov
lods
out
or
aam
test
jg
out
and
lcall
in
cmc
mov
and
xchg
jnp
outsb
fistps
les
lock
cmp
shll
fs
cmp
andb
insb
xchg
dec
push
ror
xchg
sbb
scas
sbb
add
adc
lcall
repz
lock
push
mov
jmp
imul
mov
xlat
jl
mov
sub
lods
cmpsb
clc
shr
shll
or
and
xchg
mov
inc
jno
aaa
jecxz
outsl
adc
pop
jg
decl
cwtl
loop
mov
add
and
je
jp
xchg
pop
jne
dec
test
stc
fs
fmul
mov
xor
imul
ss
out
inc
cld
cli
aas
outsl
xchg
ljmp
mov
jg
stos
push
mov
insl
frstor
mov
ret
adc
or
shll
mov
js
sbb
js
mov
jmp
inc
mov
pop
movsl
iret
stos
bound
mov
call
shll
incl
jb
not
cmp
add
mov
loop
cmpsb
ds
xor
out
jo
je
and
lcall
into
xchg
outsl
mov
dec
pop
jb
jae
loope
cmp
je
dec
xor
jge
leave
sbb
inc
jae
add
mov
jle
mov
sub
pop
stos
clc
ljmp
cmp
int3
lahf
cmp
call
fsin
cmpsb
cld
ljmp
adc
add
inc
bound
cmpsl
add
out
xchg
adc
loopne
jmp
popf
pushf
ret
sub
jns
mov
sub
jbe
xor
dec
jns
inc
inc
inc
sub
jmp
mov
aam
mov
or
out
daa
inc
cmc
jmp
mov
mov
aas
push
int
adc
mov
test
and
or
mov
shl
dec
xchg
mov
jp
ljmp
test
scas
sub
ja
or
outsl
jns
jg
ljmp
out
xchg
cmc
bound
xor
xchg
mov
push
lret
push
test
jmp
fwait
adc
mov
aam
cmp
cmc
leave
xchg
shlb
inc
and
fmuls
leave
aas
js
jmp
incl
pop
push
push
cld
outsl
mov
sbb
lods
mov
ljmp
jmp
imul
push
jnp
push
into
inc
dec
jge
pop
repz
jmp
mov
imul
aad
js
lock
dec
mov
sbbl
jg
sbb
ja
xchg
add
stos
add
rcrl
ljmp
mov
fists
add
inc
sub
into
sbb
pop
push
push
hlt
out
dec
cmp
les
adc
call
pusha
dec
mov
bound
pop
test
mov
mov
je
lds
jmp
xor
rcll
inc
dec
lea
insb
xchg
loope
add
data16
stos
jge
jmp
xorl
push
mov
subl
mov
mov
add
pop
lock
jecxz
mov
sbb
je
std
in
aad
xchg
lret
ffreep
cwtl
xor
push
int3
mov
icebp
add
fwait
cli
call
test
arpl
fsts
jmp
push
test
fwait
xlat
xchg
pop
lahf
bound
mul
mov
leave
addr16
jmp
out
xchg
aas
or
mov
cld
and
mov
and
sub
call
jecxz
adc
in
dec
jns
fsts
cmc
inc
xchg
insl
dec
mov
call
mov
jg
mov
xchg
or
out
adc
testl
imul
xchg
pop
pushl
imul
stc
cmp
incl
loop
cmp
mov
fcmovnbe
dec
pop
add
sub
fisubrs
negb
dec
pop
push
inc
sub
test
mov
icebp
fnstsw
cmc
pop
icebp
xlat
cmp
add
filds
sub
in
inc
out
xor
jns
insl
sbb
jg
repz
push
pop
jp
sub
lret
adc
int
cld
xchg
and
xchg
mov
cmpsl
xchg
pop
hlt
decl
xchg
xlat
lock
jecxz
lret
lret
js
and
call
mov
mov
xor
nop
add
push
jecxz
sbb
jbe
and
decl
mov
popa
push
or
imul
ljmp
jg
xchg
and
adc
hlt
movb
cmpsl
ds
in
ljmp
setp
shrb
enter
add
dec
fwait
sbb
cmp
shll
inc
lcall
mov
xchg
mov
iret
sub
lds
mov
arpl
or
jge
or
inc
test
test
punpckhdq
repz
sbb
inc
pop
xor
add
clc
loopne
cmp
adc
faddp
cmp
sub
std
add
lock
jae
gs
and
int3
ljmp
mov
add
addr16
jae
out
out
repz
in
or
push
mov
mov
decl
lcall
lret
dec
xor
call
sbb
xor
or
jmp
pop
in
mov
test
sub
pop
push
roll
jmp
test
xchg
loopne
lret
hlt
sbb
lea
dec
gs
jmp
xlat
pop
mov
jmp
stos
pop
sbb
cltd
int3
and
sub
xchg
jge
add
push
jo
mov
lds
test
cld
incl
cmp
sub
int3
fsub
xchg
adc
popf
movsb
ds
sub
fyl2xp1
mov
jg
add
jecxz
shlb
push
pop
push
orb
inc
incl
fwait
lods
fldenv
mov
popf
mov
cld
fbstp
loop
lea
push
stos
mov
cmp
notl
pusha
push
pop
xlat
or
ljmp
repnz
or
loopne
ret
xchg
sbb
inc
dec
pop
lahf
inc
pusha
adc
or
outsb
ss
sub
or
xchg
call
std
ljmp
sub
in
lret
rcrl
in
fcomi
out
xchg
mov
ds
jmp
scas
mov
aam
mov
es
call
sarb
add
pop
aad
lock
js
or
jl
jmp
pop
dec
aaa
iret
sahf
movups
xor
push
jns
mov
xchg
lock
out
clc
and
mul
xor
fs
imul
mov
fdivrl
pushl
ja
fidivrs
add
inc
sbb
cmpsl
outsl
push
scas
test
pop
test
outsb
stos
push
sbb
jmp
xor
aaa
cli
or
loopne
insb
xor
inc
fbstp
test
je
mov
fbstp
jmp
inc
xchg
mov
imul
or
imul
dec
jmp
mov
adc
jle
addl
mov
incl
cli
lcall
jp
dec
jae
lcall
call
fcoml
test
sbb
fildl
or
fists
add
hlt
mov
in
and
loope
test
test
mov
xchg
push
cmpsl
cwtl
ljmp
cmp
test
sbb
icebp
push
adc
mov
inc
incl
lcall
adc
sub
push
mov
push
clc
in
test
hlt
fcomip
into
shll
shl
mov
outsl
xor
call
jmp
lea
into
enter
fmull
pop
outsl
fstpl
and
incl
add
daa
xchg
sub
jns
nop
mov
fidivl
inc
push
mov
xorb
das
push
jecxz
dec
arpl
xchg
jecxz
and
scas
fucompp
pusha
out
inc
dec
cmpsl
ret
jmp
pop
xor
mov
in
sub
xorl
push
or
fsubs
jbe
jmp
jae
movsb
add
sbb
sbb
bnd
ds
repnz
inc
cmp
cmp
rolb
adc
pop
cmpsl
jg
jae
addl
lods
add
or
ja
ja
lcall
mov
push
das
loope
shr
inc
add
mov
das
sub
leave
call
mov
and
mov
xor
sub
sub
pushl
stos
ret
pop
scas
xchg
nop
mov
xchg
in
jg
and
pop
or
outsl
lcall
lret
loope
mov
sbb
xchg
mov
shr
inc
jbe
add
mov
adc
int3
lock
cmp
jmp
inc
jmp
pop
jns
add
movsl
sbb
test
les
orl
das
xchg
xchg
imul
jg
ljmp
jno
ja
jp,pt
pop
sbb
and
pop
jecxz
data16
mov
addr16
and
cmp
iret
fsubr
test
push
decl
lcall
pop
cmp
cmp
fadds
mov
jns
movsb
jp
cs
push
sbb
hlt
cmp
push
mov
rorb
lds
loopne
push
dec
das
mov
call
adc
popf
dec
xchg
dec
dec
out
leave
gs
sbb
xor
push
adc
adc
in
jmp
fwait
sub
cltd
call
fdivl
push
arpl
or
lods
lret
out
push
leave
cmp
push
push
pop
lret
outsl
sub
std
adc
dec
xchg
push
dec
fildll
mov
jns
cmpsb
xchg
inc
bnd
test
addr16
addr16
push
push
push
cli
mov
out
cmp
mov
scas
js
call
popf
rcll
aam
ljmp
pop
ss
stos
insb
mov
repnz
adc
sub
adc
mov
mov
hlt
dec
and
jae
and
jecxz
mov
lret
stos
dec
lock
xor
sti
imul
scas
cli
or
orl
ss
std
lock
mov
push
imul
sbb
sbb
sbb
xchg
stos
jmp
inc
mov
jae
mov
data16
cmp
fists
pop
ljmp
push
lcall
sbb
mov
daa
adc
push
addr16
incl
inc
stos
jb
mov
nop
sbb
sbb
mov
in
insb
pop
mov
dec
mov
fmul
jmp
add
mov
dec
inc
jecxz
xlat
and
mov
push
out
scas
xchg
and
decl
mov
jge
sti
outsb
pop
push
insl
es
cli
mov
fidivrs
sbb
sub
dec
call
mov
subb
aam
ss
mov
fnstenv
scas
stos
addr16
xor
cmp
sar
decl
sbb
mov
dec
ss
push
cmp
loop
in
fmull
lock
orb
cmp
jns
jge
dec
pop
lods
push
ss
cmp
cltd
push
add
cs
lds
jp
sbb
jmp
mov
bound
pusha
mov
imul
call
ljmp
in
pop
data16
adc
or
inc
mov
sub
dec
adc
jg
in
pop
addl
fistps
xor
or
or
fldl
mov
lcall
dec
xchg
popf
dec
out
lods
std
dec
cltd
add
sbb
dec
rol
push
inc
ss
lret
stos
cli
mov
int3
jne
xchg
fcompl
mov
push
mov
mov
mov
aas
ficomps
pushl
push
cmp
loop
inc
dec
rcrb
shll
xor
mov
push
mov
mov
pop
mov
int3
jae
cmp
test
es
jg
ljmp
decl
loop
xchg
leave
lret
jle
mov
into
ret
jmp
dec
or
and
dec
xchg
jge
call
addr16
add
into
mov
bound
or
div
loope
daa
call
sbb
shll
gs
push
scas
mov
mov
lods
mov
jecxz
mov
jg
incl
sbb
int3
pop
inc
ret
in
push
in
repz
jno
mov
lcall
cltd
jmp
in
mov
shll
hlt
push
pop
out
je
lcall
incl
arpl
xchg
dec
mov
out
jmp
fbld
mov
and
iret
or
pop
cmpsb
pop
jne
xchg
pop
stos
iret
test
mov
inc
dec
fld
cmpb
push
hlt
rclb
inc
lock
mov
mov
stc
fcompl
cltd
lahf
push
je
call
jnp
lods
mov
rcrb
hlt
sub
cmp
cs
jmp
xchg
shl
jno
jae
fcom
xchg
je
mov
cmp
loop
lea
pop
and
mov
ds
ljmp
ja
or
pop
pslld
gs
cltd
rol
cli
mov
pop
jg
pop
iret
arpl
cmp
sbb
decb
adcl
cmp
inc
fnsave
cwtl
push
mov
outsl
xchg
movsl
ja
imul
out
inc
jl
repnz
jmp
inc
xchg
lds
fwait
ret
clc
push
mov
or
and
mov
jb
inc
loop
jg
mov
cs
mov
out
imul
cmp
fdivrs
mov
xlat
jmp
cmpsl
stos
test
lods
imull
sahf
dec
sbb
jns
ja
shl
mov
sbb
test
push
mov
rol
lahf
jg
sbb
cwtl
mov
pop
lods
cltd
in
mov
popa
out
mov
cmp
ljmp
dec
lds
mov
inc
mov
fistps
add
xchg
cwtl
add
mov
mov
inc
dec
add
std
jb
inc
stos
pop
int3
call
pop
or
mov
in
aas
or
sarb
fildl
add
xchg
dec
and
aas
test
in
pushf
popf
sbb
cli
ljmp
jb
mov
push
dec
pop
pop
jnp
repz
out
pop
out
cmp
lods
lods
je
ljmp
or
ss
imul
dec
dec
xchg
cli
out
lret
movsl
xchg
mov
sbb
push
pushf
pop
sub
adc
rclb
xchg
cmp
leavew
xor
dec
inc
sub
aam
sbb
fisttpl
decl
sbb
push
outsb
cli
js
stc
testb
mov
mov
cmp
inc
inc
mov
incl
jecxz
mov
push
fmuls
insb
sub
lcall
add
jnp
lcall
cld
jns
mov
mov
and
aam
outsb
in
or
pop
mov
outsl
xchg
xor
sbb
push
bound
popl
mov
int3
sub
jmp
scas
push
pushl
and
mov
cs
leave
add
in
dec
jbe
lret
pop
jge
stos
repnz
dec
xchg
fmuls
gs
mov
sub
xor
adc
das
scas
imul
out
movsb
mov
fcomip
mov
jp
cmpsb
in
jmp
sbb
sbb
pop
lds
dec
dec
faddl
movsl
mov
mov
clc
jno
decl
fcompl
mov
movsl
adc
outsl
sub
pop
sbb
xchg
aaa
mov
mov
in
out
sub
xchg
and
lock
ficoml
fbld
test
stos
jns
outsl
rol
out
sbb
or
lcall
mov
pushf
mov
pushf
xchg
mov
lcall
mov
dec
push
add
test
dec
push
enter
pushf
mov
call
jge
cmc
fsubrs
inc
adc
adc
or
insl
jae
sub
or
mov
mov
inc
call
repnz
jmp
ljmp
pop
mov
stos
add
mov
sub
in
dec
mov
jno
sub
xchg
jae
outsl
cli
call
icebp
xchg
cmp
pop
lahf
push
cmpsb
cli
jecxz
popf
sbb
outsb
js
call
fcomps
pushf
push
add
cwtl
mov
sbb
lret
cmpsl
ja
adc
push
adc
ret
sub
fcomip
push
adc
ss
sub
rcrl
jnp
pop
iret
mov
dec
sbb
incl
pop
add
je
cmpsl
mov
push
imul
fs
jnp
xchg
jne
lcall
push
insl
adc
in
pusha
pop
cmp
imul
call
pop
pop
in
sbb
and
jmp
jle
leave
xor
sbb
leave
outsb
xchg
testb
push
jo
js
sarb
std
cmpsb
call
mov
and
test
nop
sbbb
cwtl
pop
cmp
cld
inc
pop
pushl
into
jb
orb
xchg
mov
pop
cmp
movsl
or
inc
lea
mov
or
jg
lcall
mull
enter
push
sti
cwtl
inc
das
call
incl
cwtl
mov
cwtl
mov
push
pop
or
ret
lcall
inc
inc
pop
mov
mov
enter
mov
push
into
pop
test
jle
ljmp
call
jo
sub
dec
cmp
bnd
sub
lea
outsb
in
aaa
sbb
pushl
mov
lock
push
call
and
and
cmp
lods
sbbb
idiv
xor
mov
jmp
data16
mov
ds
pop
icebp
jmp
nop
outsb
cwtl
jns
push
pop
insl
cmp
push
and
repz
lcall
js
sbbl
fisubs
lock
ljmp
loopne
sarb
movsl
push
lcall
lock
repnz
fimuls
test
add
sub
push
addr16
push
push
fdivr
add
into
add
in
loope
mov
xchg
repz
sar
ljmp
push
mov
movsb
dec
out
fisubrs
fmulp
jg
and
repnz
cmp
xor
sbb
mov
movsl
cltd
mov
inc
xor
push
and
xchg
nop
mov
push
inc
inc
sub
popa
push
aaa
pusha
sti
or
sub
inc
fmuls
push
add
iret
jle
scas
add
and
leave
cmp
mov
nop
bound
es
call
out
cs
xor
mov
pop
flds
or
dec
and
mov
lcall
mov
push
les
push
mov
fbstp
enter
dec
inc
or
enter
and
sbb
inc
mov
mov
stc
repz
cwtl
jb
and
sar
pop
decl
inc
imul
dec
cwtl
repnz
loope
inc
mov
adc
out
test
and
cmpsb
sub
xchg
leave
dec
je
pop
std
clc
sbbb
decl
and
mov
call
nop
adc
adc
adc
sbb
mov
push
xor
fcoms
dec
push
push
cmp
and
adc
add
test
cmp
sub
mov
ljmp
pop
push
rorb
aas
jno
pop
mov
ja
fists
mov
dec
mov
mov
cwtl
repz
cli
les
push
fcomip
incl
mov
mov
pop
gs
inc
out
sbb
pop
loopne
dec
loop
pop
imul
sbb
aas
dec
dec
push
sbb
jmp
push
cld
outsl
inc
lahf
insl
jbe
scas
mov
jnp
push
inc
push
pop
or
call
cld
mov
adc
in
out
fdiv
cld
xlat
fidivrs
push
sbb
mov
fistpll
rcll
insb
mov
mov
sarb
test
cmp
imul
cmp
xor
into
adcl
mov
sbb
ljmp
mov
out
cmp
inc
adc
addr16
scas
pop
enter
mov
xor
mov
mov
or
sar
gs
call
in
mov
arpl
inc
fcoms
enter
cli
dec
push
sbbl
inc
jl
mov
or
lods
decl
outsl
lods
inc
push
and
insb
mov
ret
mov
inc
xor
cmc
push
pop
and
or
decl
inc
cmpsb
inc
popa
decl
insb
shll
subl
incl
sar
lret
popf
jecxz
cli
jbe
pop
inc
jecxz
cmp
aaa
test
push
mov
pushf
imul
imul
ret
jns
mov
lahf
lcall
movb
ljmp
sub
adc
leave
lock
icebp
inc
lock
cmp
push
shrb
sahf
adc
adc
xor
sub
daa
fdivr
mov
loop
dec
sbb
scas
cmp
mov
pushf
in
sub
in
xor
in
jmp
sbb
in
sub
pop
iret
xchg
ss
inc
add
jecxz
jno
imul
hlt
cld
mov
lret
fdivr
decl
xchg
cs
fucomip
mov
call
xlat
mov
js
ljmp
into
mov
lock
inc
or
fldl
nop
inc
icebp
mov
mov
js
mov
je
mov
cmp
mov
in
sub
mov
repnz
pop
in
call
xchg
lea
loop
mov
mov
fwait
xchg
imul
push
mov
mov
mov
push
scas
pop
pushl
pop
rcrb
leave
mov
daa
loop
adc
xchg
push
dec
dec
and
lcall
and
dec
xor
xchg
mov
xor
popf
adc
call
cmp
loope
or
lods
out
test
push
pop
sub
xor
test
adc
sbb
cli
cmc
pop
loopne
mov
push
pop
rclb
sub
mov
pop
call
frstor
push
gs
pushf
xor
std
mov
pusha
mov
inc
jge
mov
cld
ljmp
daa
test
xchg
mov
inc
mov
int
cmp
cmpsl
mov
fists
push
pushl
pushf
jae
pusha
in
fsubs
pushf
movsb
int3
lahf
and
xchg
lea
jb
mov
push
dec
add
decl
push
push
mov
xor
and
jl
xorl
es
fstpl
push
jbe
clc
cmp
mov
cmp
sbb
push
cmc
lods
or
leave
mov
ret
faddl
das
jne
sub
mov
dec
fcomip
mov
cmpsb
cmpsb
push
pop
movsl
jae
sub
mov
and
fs
fsubr
push
or
mov
mov
push
jl
fdivrl
ljmp
popf
repz
pushl
insb
data16
loope
jl
push
rcrl
add
adc
lret
stos
pop
icebp
pushl
movsl
in
loopne
xor
js
icebp
shll
push
clc
lret
sub
in
dec
cmp
decl
sbb
sub
dec
aas
jns
mov
punpckhbw
mov
test
in
xor
fbstp
int3
and
inc
fcomip
add
leave
jge
or
std
mov
rorb
mov
pop
mov
test
pop
loopne
dec
fnstcw
mov
sbb
in
test
inc
insb
push
jmp
dec
pop
sub
daa
insb
imul
mov
cs
or
lcall
or
bound
ljmp
add
sbb
mov
popf
cmp
call
test
imul
lcall
mov
pushl
adc
loop
cli
lret
pop
cmc
adc
loopne
in
xor
decl
cmpsb
sub
push
push
dec
icebp
inc
sub
jae
push
mov
icebp
outsb
jmp
int3
sti
call
call
cmp
cmp
shlb
aad
shr
mov
inc
loope
cmp
mov
fists
pop
adc
hlt
mov
xor
inc
xlat
dec
lret
sub
and
imul
in
add
repnz
ficomps
sahf
test
jecxz
mov
std
sub
mov
fwait
imul
adc
adc
xlat
adc
fld
lods
in
lret
sbb
sahf
sub
mov
cld
incl
lock
dec
daa
adc
add
hlt
in
xor
in
das
xchg
jecxz
in
ja
call
adc
mov
mov
mov
mov
mov
leave
cwtl
mov
push
xlat
push
cmp
mov
aaa
daa
cli
arpl
inc
out
jmp
push
push
imul
jecxz
or
faddl
sbb
xchg
add
jg
xchg
pop
mov
outsl
xchg
jno
ds
push
jb
push
adc
ret
jnp
lcall
xchg
icebp
xchg
cmp
out
scas
push
idivl
lods
clc
mov
lods
jmp
mov
call
mov
push
mov
xlat
xchg
or
cmp
lods
pop
arpl
dec
enter
test
mov
insb
mov
mov
adc
lods
imul
lcall
sti
das
cmpsb
or
scas
jb
sub
test
rol
push
xor
lcall
mov
dec
sbb
test
mov
cltd
lcall
sbb
mov
sub
or
sub
iret
mov
mov
mov
in
pop
aad
adc
push
stos
jge
scas
js
stos
mov
jmp
jg
cmp
lret
movsl
cmp
lods
xor
inc
daa
out
or
fnstcw
jmp
decl
or
xor
daa
xchg
or
sub
or
std
xor
loope
movsb
call
or
push
sub
lods
scas
imul
lcall
out
cmpsb
scas
pop
push
fisubs
mov
push
call
jnp
mov
loope
in
cs
push
pop
out
andb
push
insb
sbb
xchg
pop
adc
add
shlb
ljmp
push
lds
lcall
cwtl
mov
sti
movsb
rol
mov
stos
es
out
jae
lock
jmp
mov
int
arpl
sbb
xchg
sub
pop
rorb
fisubrs
stc
adc
jp
push
pop
and
jbe
mov
jg
dec
add
push
mov
fdiv
call
sbb
mov
aaa
cs
insb
decl
pop
cli
or
sbb
dec
in
in
clc
call
outsl
adc
mov
push
adc
push
daa
incl
dec
add
pushf
pop
in
jmp
pop
mov
mov
mov
cmp
aad
cmpsb
cmp
jmp
es
lcall
cs
pusha
jge
stc
mov
sar
stos
pushl
xor
shrb
iret
sbb
ds
movsl
lock
jle
es
mov
pop
aaa
pushf
inc
imul
xor
xchg
inc
fstl
mov
mov
lea
shlb
xorb
xchg
jmp
mov
stos
xchg
sub
dec
xchg
jns
jl
sahf
pop
xor
aam
andl
addr16
je
xchg
fists
dec
jecxz
test
bound
sbb
xor
ja
push
in
mov
ljmp
or
testb
dec
push
or
mov
cmp
orb
and
or
mov
fiadds
lcall
aad
dec
subl
lock
jg
mov
sar
inc
lcall
cltd
mov
jo
adc
or
xchg
mov
call
test
mov
mov
loopne
out
or
sahf
stos
jo
pushl
inc
and
icebp
dec
dec
jl
pop
mov
and
mov
data16
arpl
xlat
hlt
decl
jae
into
push
leave
push
or
shlb
int
test
mov
sbb
fistpll
loop
mov
aaa
jno
rcrb
mov
jbe
mov
ret
lcall
adc
ficoms
rorb
mov
add
push
ljmp
adc
orb
mov
sub
pop
test
push
or
and
int3
xlat
int3
pop
fs
pcmpeqd
decl
loopne
dec
loopne
inc
pop
movsl
inc
int
inc
inc
fildl
mov
cltd
cmp
cmp
incl
or
cmp
int3
mov
push
jle
cmp
icebp
sbb
popl
pop
mov
lcall
hlt
mov
dec
insl
xor
lahf
fwait
cmp
mov
hlt
sbb
ret
addr16
jg
mov
or
insb
or
movsl
sub
add
mov
incl
pop
dec
stos
push
mov
in
mov
data16
cmp
adc
imul
call
adc
mov
inc
mov
ret
or
jge
cmpb
xor
shll
push
jae
jg
jg
sti
push
cmpsb
push
push
or
addb
sub
fwait
dec
cld
decl
repnz
jo
aaa
and
in
call
and
mov
adc
fistl
ja
pushf
loop
sub
jnp
inc
out
xor
sti
cs
xor
test
pop
shll
jl
movsl
pusha
xchg
sub
push
mov
pop
icebp
or
ljmp
mov
es
mov
lcall
mov
xor
jmp
insb
add
pop
imul
xor
cmp
out
pop
jmp
xlat
xor
in
icebp
inc
push
cmp
fs
xchg
js
dec
xor
pop
int3
hlt
adc
call
adc
sub
xchg
mov
test
decl
lock
sub
adc
push
fdivrp
or
call
movsb
movsb
xchg
jns
and
and
mov
or
sub
push
decl
decl
test
mov
loope
out
jo
movsb
dec
stos
inc
ud0
add
fcomip
test
mov
push
add
call
fsts
mov
adc
or
lock
mov
mov
and
int3
push
int
xchg
jle
sub
jmp
ds
sub
adc
pop
push
addr16
aad
mov
xchg
lods
movsb
lock
xor
sbb
ficoms
movsb
or
jmp
sbb
dec
pop
divb
scas
inc
xchg
xchg
adc
sub
jg
data16
dec
sbb
inc
sub
sub
mov
and
enter
adc
sub
lcall
fdivs
pop
adc
lcall
sbb
inc
jge
shll
lea
call
sbb
lcall
mov
fistl
fadds
repnz
xchg
inc
repnz
fbstp
mov
lret
cmc
cld
jno
test
push
scas
lods
sar
cmc
cld
mov
push
andb
dec
lods
xchg
pop
ja
xchg
add
outsb
inc
popf
or
loopne
negl
out
das
jno
shr
xchg
decl
js
push
cmp
pop
movsb
pop
aas
dec
inc
cmpb
jns
repnz
call
mov
mov
lds
repz
sbb
stos
cmp
jns
mov
ljmp
sar
add
loope
inc
in
das
and
movsl
sbb
out
es
call
addr16
scas
sub
sub
jns
jmp
and
cwtl
cmpsl
cmc
mov
jne
jmp
push
xor
mov
je,pt
push
mov
shrl
add
sub
or
xchg
lahf
lret
insl
ja
sbb
cmp
idivl
xor
scas
pop
pop
and
xchg
sub
out
add
inc
lahf
jae
loop
repz
ljmp
add
dec
or
scas
ret
cld
add
xor
movsb
inc
adc
in
call
lcall
mov
sbb
repz
insl
dec
popf
nop
int3
daa
hlt
cmp
mov
ljmp
clc
dec
cmpsb
dec
dec
outsl
pop
xchg
add
mov
clc
jnp
push
idivl
into
lahf
xchg
sbb
call
inc
test
loopne
and
push
in
mov
add
in
hlt
cmpsb
popw
mov
incl
mov
or
push
inc
mov
push
sub
inc
fistpl
mov
dec
pushl
dec
mov
jae
jmp
clc
dec
inc
outsl
ret
shlb
jmp
lods
mov
ret
je
sbb
adc
or
push
pusha
loope
pusha
push
add
fistpll
jae
gs
fisttpll
lea
lret
push
inc
rclb
pop
sbb
pushl
xchg
and
pop
movsb
mov
jbe
mov
dec
sub
xchg
jmp
out
test
out
into
or
sti
jl
shrl
xchg
pop
out
jne
and
push
pop
mov
inc
ret
sub
xchg
loopne
aaa
cwtl
stc
stos
sbb
mov
rcl
push
data16
clc
cmpsb
fdivp
or
xchg
mov
jl
incl
push
iret
je
repnz
unpcklps
int3
arpl
test
imul
ljmp
lods
inc
or
mov
mov
jb
cwtl
ja
push
jge
sub
push
imul
pop
mov
jmp
add
iret
jns
cli
mov
push
cmpsb
popf
loop
fistl
mov
sbb
or
imul
scas
cli
js
or
sub
xchg
movsb
test
out
sar
cld
dec
and
inc
iret
in
pushf
mov
clc
pop
rol
sub
iret
mov
leave
sar
mov
loopne
incl
jge
xor
sub
dec
popa
cmp
jmp
inc
xlat
push
push
inc
aaa
push
cmpsl
add
push
movsl
lds
adc
inc
mov
mov
adc
imul
orl
lcall
es
inc
sbb
mov
sub
xchg
outsb
inc
sub
decl
repnz
shlb
shll
lcall
jg
pop
shr
xlat
les
cmp
sbb
test
mov
jmp
push
rcrl
mov
mov
fisttps
mov
cmp
out
dec
pop
mov
clc
decl
fcomi
add
xchg
cmp
push
cmpsl
inc
addr16
add
lret
call
lods
mov
icebp
mov
cmp
test
decl
call
negl
and
jmp
scas
loop
pushf
inc
jb
mov
hlt
cs
jbe
test
aam
jmp
mov
das
mov
or
xchg
loop
es
call
sbb
in
jmp
cmp
push
mov
insl
inc
xor
inc
add
shrb
xor
incl
cmpsb
cmp
ret
lret
ss
mov
dec
dec
popf
ljmp
jno
call
cld
xor
sub
push
cmpsl
imul
adc
dec
daa
flds
pushl
lods
test
add
xlat
jmp
in
pop
add
cmp
cmpsl
movsl
cwtl
xchg
mov
dec
pushl
and
hlt
or
adc
ss
cltd
pop
cmp
xorb
lcall
mov
mov
push
mov
jmp
clc
rcrb
jo
shr
add
into
test
cmp
jg
out
dec
mov
xchg
and
sahf
add
jnp
dec
popa
fnstenv
icebp
cmp
fcomps
jg
aad
jae
movsb
into
cs
sbb
incl
adc
dec
js
inc
jl
pop
jbe
pushl
pop
scas
int
jnp
cmp
dec
mov
mov
lea
jo
push
mov
fbstp
mov
mov
and
xchg
sbb
jg
push
fstps
push
and
push
sub
fisubrl
add
inc
pushf
add
mov
andb
push
cwtl
in
icebp
adcb
jge
ret
adc
popa
sbb
jmp
mov
icebp
mov
add
adcb
push
inc
mov
cmp
rolb
lcall
sbb
or
cmp
sti
add
xchg
mov
in
mov
ss
adc
insb
rclb
lret
lock
adc
dec
jle
shl
stos
mov
jmp
mov
pop
pop
mov
test
lods
adc
push
sbb
pushf
xchg
ja
mov
vcvtsi2sdl
jbe
push
mov
stos
jmp
cmc
dec
sahf
imul
scas
mov
xchg
insl
xchg
inc
data16
insb
dec
jo
ljmp
push
rol
push
pushf
int3
ss
cmp
pop
or
es
outsb
aad
xor
ljmp
loop
sarl
ret
jbe
xor
lret
sbb
push
sub
mov
insb
adc
stc
and
cmp
jnp
shl
in
enter
push
aam
pop
mov
sbb
lret
ss
push
test
adcl
fs
decl
test
movsl
pop
jge
inc
add
imull
sub
es
xchg
int
mov
mov
decl
mov
push
scas
inc
ret
dec
lock
dec
sti
aaa
add
subb
or
mov
push
pushf
pop
test
incl
mov
mov
cmc
pop
gs
aad
data16
loop
jmp
shlb
gs
call
mov
pusha
dec
mov
xchg
push
mov
dec
js
imul
mov
rcrl
push
xor
cmp
out
out
je
enter
inc
pushl
ss
inc
ficompl
push
jo
adc
pop
mov
pop
pushf
pop
add
adc
lcall
inc
jg
popf
cmpl
cmc
and
fwait
jne
xor
not
pushl
push
mov
in
ja
dec
je
adc
in
cmpsl
pop
test
cmp
push
cmpl
cmp
adc
adc
lret
ja
mov
in
sahf
cld
or
aam
mov
fnsave
xchg
dec
mov
inc
jmp
out
cwtl
ljmp
ljmp
pushf
sti
push
leave
jno
frstor
clc
imul
outsb
inc
jnp
ljmp
adc
mov
xor
mov
fcoml
inc
daa
fisubrs
pop
sub
jg
ljmp
jns
negl
sarb
xchg
jno
jbe
cmp
mov
mov
push
lret
scas
rorl
stc
jae
sbb
jg
xorb
cmpl
shl
in
cld
aad
add
ret
and
mov
dec
incl
lods
cmp
and
jbe
xor
or
mov
pop
jl
call
popl
out
xor
add
stc
add
jge
pop
push
dec
pop
iret
mov
jmp
sub
mov
mov
push
cmpsb
jns
adc
or
add
fnstcw
fidivl
shl
mov
pop
das
mov
ret
mov
lea
push
sub
decl
call
xchg
mov
mov
test
fcomi
insb
test
add
outsl
add
decl
rcrl
adc
ret
or
add
mov
dec
pop
clc
add
pop
dec
loop
mov
sbb
dec
inc
es
adc
cmp
mov
pop
mov
or
inc
mov
push
mov
dec
mov
test
adc
shll
imul
jbe
aaa
rorb
jae
and
ds
cmpsb
push
fstps
cltd
inc
ja
incl
test
mov
push
divl
insl
scas
push
and
mov
pop
cmp
pop
mov
push
sub
cmp
test
shrb
fmuls
inc
loope
pop
add
push
cmp
inc
es
in
pop
inc
jg
inc
adc
shlb
push
mov
dec
dec
sarl
loop
xor
jle
push
aad
incl
int
sti
imul
fimuls
in
mov
or
int3
jne
insb
push
jmp
lcall
push
inc
shr
pushf
adc
sbb
dec
repnz
hlt
and
xchg
pushl
dec
adc
sub
stos
pusha
inc
pop
jle
scas
pop
jp
cld
sahf
cmp
movl
ljmp
dec
lods
bound
repz
test
dec
xchg
sar
into
inc
imul
xchg
pushl
or
add
sbb
pop
dec
in
xchg
test
popf
lcall
mov
dec
out
mov
lock
xor
bound
inc
mov
filds
or
dec
pop
clc
add
fcomp
mov
jnp
add
in
push
lret
inc
call
scas
jbe
test
lret
lods
scas
test
mov
cmp
adc
fsubrl
push
dec
repnz
call
sbb
xor
repnz
and
imul
lods
push
ficoms
dec
loop
incl
pop
ljmp
sarl
dec
xor
not
mov
adc
decl
iret
add
add
inc
fmuls
push
jo
pop
add
les
mov
lcall
decl
dec
fcmove
push
xchg
loopne
fnsave
inc
sbb
ret
int
cwtl
mov
std
cmp
lock
adc
and
push
mov
fwait
push
dec
add
movsl
push
xor
clc
call
pop
push
sub
insl
sub
addr16
gs
inc
adc
ret
shlb
dec
jge
or
call
cmp
mov
xor
cmp
lcall
mov
ljmp
mulb
cltd
cld
or
pop
mov
sbb
inc
inc
leave
rclb
mov
add
push
and
aaa
std
into
mul
sbb
xchg
jne
insl
adc
mov
pop
mov
jge
or
and
ds
mov
clc
mov
jne
xor
and
das
ljmp
sub
push
push
mov
cmc
dec
or
jl
int
mov
jecxz
call
xor
jp
mov
pushl
mov
inc
test
out
jnp
xchg
jno
mov
jnp
xor
icebp
mov
frstor
cmp
lahf
test
lea
int3
lds
and
jns
xorb
pop
pop
jmp
jecxz
mov
sbb
pop
inc
bound
jmp
in
xor
adc
adcb
mov
cmp
cmp
xor
mov
sbb
decl
xchg
xchg
icebp
pop
mov
add
adc
xor
pop
addr16
fs
adc
out
inc
pop
pop
decl
push
cwtl
mov
and
ficoms
ficomps
dec
or
mov
outsb
xlat
aad
jge
insl
inc
jmp
stos
ljmp
sub
dec
in
xor
mov
imul
arpl
pop
test
fs
jg
decl
pusha
xor
es
cmp
sub
ds
daa
xchg
mov
aaa
in
xchg
and
pop
sbb
decl
sbbl
jle
or
popf
call
popf
xchg
jl
pop
pop
jecxz
sub
lds
sbb
mov
dec
jp
lcall
inc
ret
mov
fs
ljmp
out
jb
cltd
or
pop
decl
test
cwtl
pop
push
inc
mov
pop
div
aad
adc
scas
js
imul
cmc
dec
lcall
sub
insl
les
rcrl
insb
inc
jnp
xor
in
gs
add
push
cld
ljmp
inc
cwtl
xor
shrb
sub
sahf
mov
xlat
ror
shl
ljmp
movsb
pop
dec
sub
push
push
js
dec
pop
aad
mov
xor
and
cmp
lret
or
mov
jo
mov
dec
call
and
pop
fiaddl
mov
pop
jge
ljmp
mov
dec
jg
push
cld
pop
pop
or
sti
dec
xchg
jb
call
dec
dec
lret
jmp
or
fisubrl
mov
or
es
jmp
rolb
decl
push
xor
mov
fiadds
pusha
or
jno
inc
push
movsb
mov
call
jmp
push
test
ret
loope
insl
jmp
rcl
outsl
pop
pop
mov
mov
repnz
sbb
test
out
mov
and
jmp
in
lea
ds
adc
xchg
jb
push
sub
inc
jne
mov
shlb
push
jne
sbb
mov
mov
call
std
xor
mov
sub
js
loope
push
std
push
xor
clc
clc
jle
repnz
xor
je
xor
dec
sbb
ljmp
imul
mov
push
mov
inc
mov
push
ds
mov
add
cmp
decl
fs
dec
je
inc
inc
xchg
mov
adc
fidivrl
pop
lcall
and
mov
hlt
test
loope
in
rcr
adc
adc
es
push
into
ret
jmp
cwtl
cltd
adc
fists
mov
sub
aas
fwait
and
push
js
in
push
addb
inc
outsl
test
mov
rcll
loope
mov
mov
pusha
xchg
pop
mov
clc
dec
hlt
or
test
pop
dec
nop
pop
pushf
movsl
and
aam
cmp
add
ljmp
es
test
js
call
roll
push
add
sub
data16
adc
ljmp
das
ds
out
andl
push
into
or
dec
mov
mov
call
pop
pop
push
jg
or
shrl
int
jge
movb
addr16
fcomip
dec
scas
mov
sbbl
lods
pop
je
adc
cli
ljmp
mov
adcb
push
in
pop
in
es
adc
jl
lcall
imul
adc
pusha
jbe
subl
pop
loope
scas
jecxz
jge
add
or
sbb
ljmp
cmp
ffree
movsb
mov
jno
pop
xchg
add
mov
or
dec
mov
cmc
js
mov
int3
push
shll
inc
div
mov
adc
xchg
inc
popf
nop
adc
jmp
mov
cmp
dec
sbb
sub
jbe
and
mov
mov
popa
sarb
mov
sbb
and
mov
mov
mov
jno
jmp
xor
push
push
jle
inc
jae
lret
and
or
shll
out
clc
xor
cmp
push
fimuls
outsl
dec
fwait
push
and
push
cld
addr16
fs
ljmp
pop
dec
jp
push
stos
pop
jge
or
popa
push
mov
cltd
in
or
testl
mov
icebp
pop
dec
adc
inc
sub
popa
xor
jne
dec
jle
lods
jp
bound
rcr
jbe
ljmp
ret
loopne
mov
jae
jmp
int
out
daa
mov
ret
aaa
std
mov
xchg
mov
daa
or
mov
lahf
adc
lcall
push
jp
jae
xchg
popf
inc
lret
ret
inc
mov
cmpsb
or
mov
fidivrs
sbb
loop
dec
inc
decl
mov
insb
jns
jl
lds
add
lret
lcall
inc
aaa
and
in
push
bound
aaa
mov
lret
sahf
aas
ffreep
test
cmp
rorl
ficoms
orb
pop
push
subb
xchg
mov
mov
jmp
xor
xchg
dec
mov
pop
sub
std
lcall
pop
bound
scas
sub
push
loope
dec
dec
pop
insb
or
adc
sbb
and
mov
jmp
outsl
rolb
outsb
out
xchg
push
cmpsb
sub
dec
stc
aad
cmp
sub
add
lcall
push
call
imul
cmpsl
imul
sarb
xchg
pop
sbb
pushl
in
cmp
out
data16
movsl
cmc
xor
sbb
mov
pop
lock
jb
mov
shl
or
imul
imul
test
fwait
ja
loope
jmp
aas
jns
sbb
mov
into
daa
ret
push
fcomi
cltd
mov
in
inc
addr16
add
fnstenv
int3
test
movsl
or
jmp
cltd
mov
std
add
jo
mov
pop
ljmp
int
repnz
dec
pop
ljmp
outsb
push
daa
xchg
adcb
jle
or
bound
loop
lahf
add
decl
insl
andb
test
pop
rcll
push
sbb
jbe
mov
mov
adc
jecxz
mov
cltd
lret
sub
arpl
push
jne
jg
incl
andb
jns
enter
in
ljmp
ljmp
ljmp
mov
mov
popa
out
sti
pop
or
mov
sbb
ja
incl
mov
sbb
insb
ficomps
and
dec
movsl
jmp
mov
mov
inc
fnsave
mov
je
out
jbe
call
or
int
incl
stos
push
push
push
mov
in
rorl
jle
dec
ficompl
cltd
push
fstpl
mov
fstps
clc
je
push
leave
jb
jne
fadds
stos
popa
inc
test
hlt
mov
test
pop
push
pop
call
xchg
in
daa
rcl
sub
in
stos
decl
pop
add
and
xchg
dec
cmp
in
scas
lock
jns
adc
aad
mov
sub
push
out
subb
loope
loop,pt
sti
xchg
fidivl
mov
cli
ljmp
int3
dec
dec
pop
mov
loopne
jo
cmp
mov
pop
xlat
cmp
call
dec
sub
xchg
push
inc
mov
sub
decl
inc
push
cmp
xor
dec
jbe
jg
movsl
incl
into
push
xchg
js
and
pushl
test
pop
push
xchg
test
cmp
push
cmp
xchg
sub
and
call
sub
jle
sti
sbb
hlt
adcl
das
sub
cltd
inc
xor
cmp
nop
imul
xchg
xor
push
jmp
mov
jle
dec
loopne
lcall
push
mov
lock
jge
adc
andl
dec
mov
cs
or
pop
or
dec
jb
cwtl
ljmp
and
cmp
in
das
in
pop
mov
add
inc
test
in
push
cmpsb
mov
add
or
cld
cmpsl
das
repz
fadd
add
inc
xchg
and
sub
dec
sbb
stc
mov
in
cmp
loope
inc
lock
cld
sbb
cld
mov
mov
mov
aas
xor
cmc
rcrb
dec
stos
pop
hlt
inc
in
sar
call
dec
inc
aam
ret
mov
mov
movsb
xchg
sub
mov
lahf
inc
insb
icebp
adc
xchg
decl
mov
jle
enter
cmp
mov
mov
pop
sbb
fists
mov
pop
inc
jle
or
test
push
into
mov
aad
pop
sbb
test
aaa
mov
stos
mov
lahf
hlt
in
mov
stos
jns
call
cmpsl
jbe
adc
jmp
mov
out
rcrb
stos
lods
divl
cmp
mov
dec
dec
and
sbb
cmp
xchg
jg
sbb
cmp
insb
movsb
ret
imul
ret
add
ja
in
mov
mov
mov
sub
pop
push
push
push
push
lea
in
std
cwtl
pop
jmp
mov
insl
and
xchg
cmp
sub
loopne
aad
loopne
sbb
lahf
ljmp
sbb
and
div
ds
fnstcw
repz
inc
bound
cli
call
sub
push
sbb
gs
rclb
and
adc
xor
std
xlat
arpl
xchg
xchg
lret
pop
push
inc
or
mov
ss
inc
pop
or
hlt
adc
ss
ljmp
mov
xor
xchg
ret
jmp
and
xchg
cmpsb
add
decl
out
xor
sub
in
mov
gs
icebp
test
cmp
shlb
incl
xchg
movsl
cmpsl
push
sub
into
push
imul
jmp
sub
adc
adc
ja
or
pop
cmp
loope
push
pop
loope
and
cli
dec
jbe
clc
pushl
mov
sti
bound
andl
enter
sbb
mov
int3
ljmp
and
xchg
insl
ds
push
jle
pop
mov
cltd
and
or
xor
pop
loope
les
xor
call
jg
fcmovbe
pop
push
adc
js
add
xchg
push
or
icebp
in
fnstsw
sbb
call
sarb
sti
jnp
xor
loopne
shl
xchg
jne
mov
inc
movsb
mov
decl
pop
cwtl
mov
mov
mov
loop
mov
xchg
mov
pushl
or
cmp
cltd
sub
test
insb
stc
add
and
jno
lret
sub
incl
orb
clc
fdivl
mov
gs
jg
pop
test
lcall
xor
cmp
xor
fs
pop
arpl
inc
cld
into
roll
add
fadds
push
insb
repnz
sub
push
jbe
test
arpl
mov
movsb
cli
ljmp
jne
ljmp
rolb
movsl
cs
aaa
andl
sbb
jb
int
decl
jecxz
xor
fcomps
or
nop
sub
inc
sbb
lcall
stos
push
jb
inc
adc
sbb
in
mov
jnp
nop
mov
stos
in
call
outsb
dec
js
rcll
movsb
imul
pushf
dec
jmp
inc
popa
clc
mov
es
incl
cmp
pop
mov
fistpll
ljmp
int3
jmp
dec
cmp
fdivl
lods
jmp
call
push
fists
xchg
fnstsw
fsubs
inc
push
dec
insl
xor
iret
ds
dec
jg
add
movsb
aad
adc
sub
mov
sar
call
mov
cmp
add
hlt
repnz
in
out
aas
ret
add
aaa
inc
loopne
movsb
add
push
insb
xor
lret
rolb
int
adc
and
js
mov
cltd
push
adc
loopne
xor
or
shrl
add
fwait
xchg
mov
fistpl
aam
stc
cmp
jmp
xor
movsb
fbld
int3
rcrl
mov
jo
test
and
sbb
stos
cmp
call
rorb
cmp
mov
adc
mov
cmc
jne
orl
pop
dec
jl
or
sti
insl
xor
cmp
sar
outsl
push
popa
pop
fistpl
mov
ja
fildl
push
cmp
mov
icebp
ret
inc
test
add
and
jmp
mov
movsb
mov
jg
call
sbb
push
into
push
leave
dec
ret
lret
pop
cmpsl
ljmp
add
movsl
ret
mov
inc
js
cmc
mov
jecxz
cmp
add
jg
aas
inc
xlat
and
loope
xor
ret
lods
sbb
pop
push
pop
popa
cmc
mov
pushl
mov
call
lods
pop
pop
sbb
leave
mov
push
mov
mov
es
jmp
jns
and
sbb
add
out
cmpsb
daa
fneni(8087
sbb
das
repnz
jg
jmp
shl
cmp
cltd
dec
repz
movsl
mov
mov
jle
xchg
ja
cmpsl
xchg
or
ret
pop
ljmp
cs
aas
jmp
jl
aaa
xchg
pop
in
aaa
loopne
mov
icebp
jns
mov
mov
iret
shrb
pushl
enter
notl
sub
fisubs
pop
adc
dec
jp
movsb
and
jg
rol
mov
loop
or
or
pop
jb
ljmp
xorb
flds
mov
pop
adc
cltd
mov
test
insb
xchg
in
push
ljmp
and
jge
inc
movb
xchg
loopne
fistpl
incl
cld
jecxz
emms
pop
push
push
shlb
add
inc
ss
ljmp
imulb
sysenter
inc
pop
sub
daa
mov
adc
adc
pop
shlb
rorb
enter
sub
stos
test
out
mov
push
push
insb
add
sub
incl
stos
cwtl
jo
lock
fdivrl
lahf
pop
inc
jg
cmp
xchg
enter
ja
data16
lock
decl
ret
mov
xchg
into
and
sahf
sbbb
jns
ds
cmp
mov
jle
cmp
outsb
sub
cmp
incl
add
xchg
push
cmpsb
out
cmp
lods
les
sbb
shr
repnz
decl
outsb
ds
mov
push
pop
lret
jecxz
insl
sub
xor
popf
cmp
std
push
subb
fucomp
and
lcall
push
pop
imul
sbb
pushl
ficompl
in
in
add
jp
mov
popa
adc
icebp
inc
inc
mov
mull
cwtl
int3
lahf
fmull
les
test
sub
and
adc
inc
push
incl
push
jg
movb
mov
push
icebp
scas
pop
sbbl
pop
xor
loop
repz
mov
inc
call
xlat
movsl
jg
fisttpll
push
pop
dec
js
jge
call
xor
mov
int3
add
call
in
out
inc
jnp
pop
sub
push
xor
mov
fisttpll
and
dec
push
mov
xchg
sbb
push
dec
mov
ret
aad
push
bswap
cmp
mov
pop
sahf
das
xor
incl
xchg
jge
dec
rclb
sbb
pop
ljmp
sarb
je
ljmp
rclb
scas
sti
dec
out
fsqrt
insl
sub
inc
and
cld
int
pop
test
cli
je
cmp
lcall
ljmp
push
jp
push
incl
pushf
call
dec
sbb
pop
mov
adc
xor
loopne
cmp
jmp
jge
ljmp
call
stos
loope
lods
inc
mov
jne
mov
test
lcall
arpl
or
adc
push
mov
and
jl
fwait
add
cmp
insb
xor
sub
rolb
or
jmp
push
into
lods
sub
aad
ljmp
jno
sbb
ret
jmp
push
fdivrp
call
push
xchg
jg
call
stc
das
push
dec
xchg
movsb
ret
mov
mov
mov
jmp
imul
mov
shl
mov
adc
leave
pushl
mov
arpl
lods
jle
lret
int3
fwait
or
cs
push
sbb
std
jmp
repz
jae
pushf
inc
xor
cmp
cld
lea
jmp
fldcw
fimuls
pop
pop
bound
bound
stc
sub
mov
inc
lods
push
popf
mov
mov
sbb
push
pop
dec
dec
inc
icebp
mov
push
jnp
pushl
cld
lcall
sets
jno
shrb
sub
pop
or
call
xchg
pusha
mov
in
push
xlat
pop
fs
or
or
xchg
dec
mov
jle
cmpsl
add
pushl
rorl
dec
jb
mov
sahf
mov
stos
mov
shrl
jg
rolb
cmpsb
mov
sti
aad
mov
inc
push
scas
testb
pop
cmc
push
adc
jne
sub
mov
jecxz
pop
push
mov
push
add
pop
mov
addl
sub
mov
stos
js
decl
pop
cmp
mov
sub
adc
jae
nop
rorl
pop
pusha
xchg
sub
dec
sar
pop
jbe
add
pop
cwtl
mov
push
lret
ss
rorb
fbstp
xchg
mov
sbb
sub
inc
shl
mov
incl
push
jg
xor
ret
cmc
mov
push
mov
jbe
dec
cmp
push
xchg
pop
icebp
jg
rclb
mov
cmpsb
jae
testb
inc
dec
adc
pusha
div
mov
in
in
jg
jg
stos
daa
dec
cmp
sbb
call
shl
sub
adc
jbe
inc
push
pop
lods
mov
push
mov
mov
loope
push
mov
out
popa
cmp
pusha
mov
pop
push
sbb
dec
mov
and
roll
or
fbstp
sarl
test
iret
pop
fbld
pushf
ret
call
loop
adc
mov
mov
ja
pop
xor
jecxz
pop
fsubs
hlt
fbstp
pop
shrl
decl
fsubrl
iret
add
and
fs
sahf
push
xor
std
inc
mov
pop
repz
aaa
repz
and
outsl
and
int
pop
cld
cmp
ret
sti
dec
sbb
incl
lods
or
xor
jmp
mov
cmp
iret
xlat
js
jb
daa
lea
sub
in
es
mov
xor
fwait
int
sub
add
fistl
inc
adc
adc
test
test
cmp
pushl
jp
scas
xchg
add
sub
in
fsubrs
mov
aad
popa
mov
shl
jmp
add
push
and
cmpsl
cmpsb
mov
fsubl
cmp
call
cs
xchg
push
cs
daa
nop
pushf
fldt
dec
jne
jbe
pop
xor
inc
mov
pop
inc
mov
inc
loope
dec
push
and
int3
pop
leave
cmpb
jnp
das
xor
insb
mov
pushl
cmc
fiadds
cmpsb
jmp
fwait
dec
mov
pop
cli
call
adc
jl
loop
into
inc
or
cs
scas
stos
ja
hlt
pushl
sub
dec
lds
push
ja
dec
mov
adc
loopne,pn
lcall
and
push
dec
imul
ret
push
call
xchg
pop
inc
call
aam
test
xchg
ficomps
lods
push
sbb
xchg
mov
cmp
ja
sbb
je,pt
in
loopne
pusha
inc
sbb
int
ljmp
or
inc
xchg
push
mov
mov
insl
mov
mov
dec
rcl
inc
add
stos
test
and
pop
dec
or
dec
mov
call
stc
xor
in
dec
sub
loop
stos
popf
and
sbb
cmp
mov
nop
and
incl
cmpsl
aad
in
xchg
push
imul
je
fldt
sub
add
daa
decl
xorb
lock
clc
rcrl
mov
pusha
sbb
or
movsl
xchg
das
push
jecxz
or
xchg
xor
adc
sti
cs
movsl
or
lcall
jp
out
push
popf
dec
ds
mov
fsubrl
inc
and
aam
push
cld
aas
cmp
sti
mov
pusha
lock
hlt
sub
or
test
mov
call
inc
arpl
out
sub
jne
push
inc
lea
dec
push
xor
pop
pop
inc
mov
test
inc
push
sbb
fisttpll
shlb
lret
adc
pushf
mov
mov
pushl
pop
sbb
mov
dec
test
inc
mov
fstpl
cmp
adc
dec
data16
movsb
xchg
or
jmp
lods
xchg
inc
fstpt
and
lret
mov
dec
es
xor
sub
popa
jmp
sub
jge
bound
push
popa
and
dec
push
xchg
inc
sbb
das
shlb
jae
jo
mov
adc
xchg
insl
aaa
pop
sbb
xchg
rcrb
call
idivb
icebp
sbb
xchg
and
sbb
push
mov
icebp
shl
int3
int
ljmp
test
xorl
movsb
nop
xor
add
fdiv
jno
rorl
mov
lock
jg
stos
int3
ljmp
out
and
jmp
movsb
add
add
lcall
inc
rolb
sub
xor
cmp
push
ret
cmc
xchg
adc
or
cmp
mov
mov
and
lods
movhps
testb
and
fsub
mov
sub
decl
xchg
adc
push
push
addr16
sbb
outsb
pop
call
xchg
mov
jns
repz
xchg
mov
pop
cld
incl
inc
popa
imul
adc
stc
mov
sub
ljmp
cmp
test
jmp
xchg
imul
adc
pushl
gs
or
dec
xchg
xchg
xchg
repnz
push
cmp
dec
jge
out
in
dec
mov
incb
mov
cmp
mov
imul
sub
dec
in
and
incl
xchg
pop
jne
or
inc
into
mov
ja
lcall
lds
decl
cmpsb
push
movsl
xchg
mov
mov
mov
pop
test
cmpsl
push
inc
add
stos
xchg
add
incl
mov
pop
push
jg
push
xchg
cld
test
lds
call
push
pop
jecxz
js
push
adc
xorb
push
aaa
mov
call
push
mov
pop
push
add
mov
movsb
outsb
cmp
or
notb
call
sbb
jmp
xor
push
jae
jge
incb
jp
call
mov
mov
lret
rclb
pop
repz
fimuls
orl
fcomip
ret
les
inc
mov
xchg
test
mov
or
incl
cmp
pop
icebp
adc
insl
pop
dec
cmpsb
je
inc
test
pop
mov
inc
hlt
lods
shl
sbb
lcall
sub
rolb
pop
mov
jae
inc
push
mov
mov
xchg
aas
xor
adc
decl
addr16
cmc
iret
lods
je
cmpsl
push
add
nop
jmp
mov
adc
jmp
fwait
mov
cltd
xchg
xchg
fisttps
fcoml
sub
pop
decl
pop
sub
dec
push
inc
ds
jmp
je
or
es
decl
push
mov
push
sbb
out
lahf
add
xor
add
lcall
adc
or
push
sbb
ja
cmp
push
into
or
cmp
pop
ljmp
outsb
in
pop
sub
cmp
pop
and
mov
adc
into
sub
xchg
inc
lock
andl
jg
adcl
mov
inc
mov
push
sub
lret
mov
nop
aaa
cld
decl
dec
stos
xchg
scas
mov
and
out
xorl
ja
int
ja
or
sti
jmp
push
push
xchg
filds
add
dec
leave
bound
cmc
sbb
lcall
repz
decl
cmp
sub
mov
pop
sub
leave
idiv
pushl
pushf
into
shr
in
out
js
lods
sbb
fwait
mov
negb
scas
dec
lcall
incl
jb
in
dec
dec
jb
xor
aad
int3
into
xlat
nop
test
mov
pop
cmc
mov
xorl
xchg
dec
or
test
cmpsb
cld
test
cmp
call
xor
mov
xchg
and
pop
sub
push
push
mov
ds
lcall
and
test
shrb
test
mov
sbb
add
adc
xchg
stc
aad
int
pushf
xor
fucomi
pop
xor
cmp
idivl
stos
inc
fisttps
xchg
inc
ret
leave
test
mov
mov
fst
lret
lock
pop
lock
stos
dec
into
ret
cs
in
cmp
add
mov
pushl
cld
and
add
divb
or
pop
inc
dec
jmp
push
sbb
push
rep
repnz
push
xchg
jg
test
das
jecxz
js
push
xor
mov
call
lret
cmc
push
nopl
push
mov
lods
xchg
adc
fdivrs
out
decl
ret
nop
in
mov
mov
or
ss
leave
jnp
addr16
mov
aas
cmp
push
in
inc
popa
and
sahf
mov
jno
pop
jge
add
push
sbb
test
arpl
jg
pushl
jb
lea
stc
mov
negb
in
sub
lds
sbb
jmp
int
and
addl
sbb
push
adc
aaa
mov
in
inc
movsl
movsb
shrl
sbb
push
test
rcrl
es
dec
jae
les
jae
lcall
pop
imul
xor
jno
push
or
test
sbb
rorb
cmp
mov
cmp
and
shlb
ljmp
sti
dec
movsb
inc
push
cmp
and
jnp
out
xchg
bound
clc
pop
push
mov
clc
xor
add
adc
mov
mov
cli
outsl
pop
push
out
push
inc
jbe
addr16
mov
inc
fisttpll
icebp
xchg
add
xchg
call
dec
es
out
cld
jnp
pop
js
mov
cmc
ljmp
sbb
mov
int3
test
mov
btcl
jno
pop
pop
cmp
aaa
cmp
jns
leave
mov
sub
outsl
bound
mov
push
decl
scas
jle
adcl
adc
pop
arpl
mov
mov
stos
testl
sahf
sbb
inc
lea
mov
fldl
addb
js
insl
xchg
out
sbb
mov
xor
daa
xchg
les
jl
cltd
cwtl
sbb
jno
mov
lods
add
push
testl
adc
lds
push
dec
mov
outsb
jle
or
dec
adc
or
jmp
push
jo
cmp
loopne
clc
jmp
and
mov
int
sbb
cmp
xor
xor
cmp
popa
inc
stos
xchg
ret
cmp
cmp
inc
mov
scas
clc
ljmp
cmp
sub
mov
stc
mov
dec
xchg
mov
cltd
jmp
sbb
mov
das
fcmovnu
cmp
sub
test
jns
test
pushl
call
std
aas
push
mov
sbb
mov
mov
das
add
lods
cmc
jno
inc
mov
sub
scas
sub
or
sbb
push
outsb
dec
xchg
sar
fdivrs
getsec
add
fildll
imulb
js
push
std
ljmp
adc
imul
sahf
lock
sbb
add
bound
push
jg
sbb
mov
mov
outsl
push
rcll
stos
pushf
xor
loop
jecxz
inc
fistpl
push
inc
jl
inc
pushl
aad
sub
xor
sarl
ret
outsb
icebp
inc
mov
cli
pop
mulb
sar
mov
pop
gs
push
jns
or
arpl
movsb
loopne
stos
mov
inc
mov
dec
ljmp
popa
loope
lcall
add
inc
jl
cmp
push
cmc
xchg
sbb
jmp
sti
pushf
popa
orl
ret
mov
inc
mov
mov
mov
cli
push
ja
stos
out
cli
out
test
lock
push
push
inc
and
outsl
nop
adc
dec
inc
jne
push
lcall
fs
daa
mov
loope
jae
jnp
ret
dec
lcall
lcall
movsl
and
mov
aas
jg
inc
jmp
pop
and
mov
lahf
femms
repz
add
jecxz
cs
xor
push
ficompl
movsl
adc
jg
rclb
push
mov
mov
in
rol
push
or
out
andl
lret
mov
pop
cmc
push
add
movsl
add
cwtl
int3
mov
in
fdivrl
cli
das
xchg
icebp
repnz
dec
pop
mov
xor
in
nop
rcr
lahf
dec
and
jl
incl
pop
sub
andl
sub
aaa
jne
jp
sbb
mov
repnz
cmpl
or
inc
iret
mov
int3
les
ljmp
and
cli
mov
repnz
sti
mov
sub
jg
lcall
cltd
jle
int3
cwtl
dec
push
push
push
andb
test
ljmp
xchg
cli
add
dec
fwait
jae
dec
xor
pushf
xor
push
and
les
dec
add
adc
xchg
decl
ja
fistpl
push
dec
fldl
dec
testl
fs
sbb
push
fsubs
ret
push
add
xor
xchg
hlt
call
test
or
push
pop
jns
cli
std
inc
or
stos
mov
rclb
lcall
clc
or
cltd
xor
ljmp
std
idiv
fs
repnz
jnp
sbb
mov
add
mov
adc
cmp
cmp
incl
or
sub
fwait
rorb
xor
push
mov
lcall
mov
ss
arpl
push
mov
or
inc
test
pushl
pusha
loop
ljmp
repnz
dec
sahf
in
push
push
test
sbb
enter
decl
xchg
leave
stos
mov
pop
sub
mov
mov
in
shll
and
scas
clc
dec
xor
xchg
and
ror
dec
jne
pop
cmpsb
jmp
aas
addl
inc
xchg
sbb
jmp
jne
jb
jbe
aad
int
loopne
sub
cmp
and
decl
push
dec
push
test
cltd
mov
out
ret
lea
lcall
push
mov
daa
lock
push
hlt
pop
sarl
sbb
xchg
mov
jns
shll
jmp
mov
clc
hlt
dec
in
xchg
jno
push
ljmp
adc
iret
xchg
in
ljmp
out
jbe
inc
std
sub
cmpsb
sti
out
mov
test
jg
call
ds
mov
mov
test
cmc
add
scas
sti
cwtl
filds
mov
test
add
idivl
add
dec
jns
xchg
push
push
jmp
ret
adc
mov
sub
std
mov
cmp
lcall
lcall
aad
ret
jg
xchg
pusha
std
add
sbb
sahf
push
aaa
ret
test
call
pop
fsubs
mov
test
stos
xchg
jge
lahf
pop
fsubs
jmp
dec
sahf
and
mov
mov
jnp
sub
xchg
pop
out
adc
mov
jno
decl
in
fidivrs
mov
push
inc
xchg
sub
or
dec
das
pop
addr16
fidivs
call
cmpb
stc
pop
andb
mov
and
cmpsb
xchg
rorl
or
pushl
push
inc
pop
sbb
push
lds
adc
add
in
mov
push
pop
fdivrp
lcall
mov
out
mov
jl
inc
cmp
sbb
mov
jmp
daa
in
lret
pop
idivb
mov
mov
nop
jnp
mov
dec
mov
decl
sarb
popf
js
mov
cwtl
fadds
das
xchg
movsl
or
mulb
call
jge
mov
cmp
popa
inc
shlb
mov
jb
push
inc
push
sub
decl
lods
mov
xchg
push
adc
outsb
mov
or
xchg
pop
stos
lret
sahf
inc
mov
mov
push
mov
dec
push
mov
ljmp
inc
cwtl
nop
pop
fists
mov
pushl
or
jo
mov
mov
jge
aas
mov
or
clc
decl
aam
xlat
mov
sbb
push
dec
push
and
ficompl
pop
and
xor
inc
mov
xchg
xor
sub
loop
and
hlt
push
clc
arpl
loop
mov
dec
cmc
adc
bound
sub
test
rcrl
cmp
or
call
cwtl
jmp
add
in
outsl
xchg
pushf
pop
cmp
mov
mov
lcall
and
jns
cmpb
inc
jae
mov
fistpll
mov
in
aad
nop
mov
mov
ret
xchg
and
jge
cld
and
pushl
xor
ds
ficomps
and
lcall
lcall
flds
out
roll
mov
out
rolb
int
mov
adc
mov
shr
push
xchg
int
lods
lods
mov
adc
and
lcall
pop
sub
add
lcall
stc
dec
sbb
nop
sub
ret
xor
lret
test
inc
xor
std
bound
aam
push
fnsave
dec
pop
jne
and
clc
lret
jg
in
mov
add
pop
fs
sarb
fimull
cmpsb
xor
decl
inc
mov
cmp
jae
fbld
jb
mov
mov
push
test
rorl
xor
incl
mov
adc
and
jno
mov
test
jmp
dec
and
push
aas
inc
es
dec
cmp
call
cli
jno
insb
loope
stos
mov
adc
xchg
jne
add
incl
jne
adc
scas
xor
cld
pop
or
sub
mov
mov
call
lahf
pushf
pop
loop
jns
adc
imul
scas
cmp
xchg
mov
iret
jo
mov
sbb
xchg
cmp
aaa
cmpsb
mov
incl
sub
mov
addr16
xor
ljmp
dec
jecxz
xor
mov
xlat
dec
aas
xor
cmp
fsubl
xor
in
stos
in
cmc
sub
and
pop
and
ret
pop
insb
adc
xchg
or
incl
js
mov
or
mov
dec
pop
sub
fisttps
pop
jae
cwtl
or
jmp
cmc
je
add
into
lods
cmp
dec
sti
mov
and
call
sbb
jne
leave
scas
daa
push
ret
mov
mov
xchg
sahf
mov
lcall
jecxz
mov
pusha
nop
cli
sub
cmp
xchg
pop
aaa
ljmp
in
jbe,pt
sbb
pushf
add
jmp
and
out
pop
rclb
xchg
stos
cmp
push
push
scas
jmp
fst
repz
lcall
out
mov
sub
pop
stc
jae
cmc
popa
mov
aaa
enter
cmp
call
push
mov
cmp
test
out
gs
pop
and
jg
ljmp
iret
mov
int3
adc
xchg
inc
arpl
cmp
mov
incl
push
sbb
inc
push
out
sbb
outsl
add
jecxz
inc
inc
mov
mov
sub
fistl
mov
mov
add
and
lret
inc
adc
ret
test
push
push
or
push
cwtl
fsubr
jecxz
rol
lret
aam
int
pushf
mov
fwait
mov
adc
pushl
sar
mov
in
mov
jns
aaa
mov
rcrb
nop
dec
in
sar
lcall
push
stc
push
and
mov
jle
dec
add
stc
mov
cwtl
cmp
mov
mov
fildll
push
cmp
cmp
dec
mov
imul
xchg
cmpsb
add
dec
stos
fcomip
cmpsb
adc
scas
push
jle
inc
jecxz
dec
cmc
xor
loopne
inc
mov
incl
jge
ret
xlat
sbb
test
add
incl
jge
add
ret
loop
mov
movsl
or
decl
add
ret
mov
add
mov
faddl
mov
adc
rcr
rcrb
fdivrp
call
push
addl
repz
iret
cmp
sbb
cltd
insb
push
iret
push
cmc
pop
bound
inc
jne
pushl
sub
mov
dec
sub
adc
test
cmp
div
or
lcall
cmp
dec
fs
outsb
mov
xchg
adc
pop
pop
decl
lea
insb
jl
inc
mov
cmp
mov
shrb
test
out
dec
mov
inc
rcr
pop
add
push
cmc
int
cli
push
loopne
push
jecxz
jb
in
scas
or
icebp
jg
fsubrs
sahf
rcr
sub
aaa
mov
mov
stc
cmpsb
xchg
dec
popf
je
sub
arpl
cmpsl
dec
fwait
in
xchg
cmc
pop
lret
add
add
cwtl
xor
out
or
stc
fucomp
adc
insb
sti
sarl
addr16
cmc
pushf
outsb
outsl
sbb
sub
roll
push
nop
call
ljmp
je
jmp
push
mov
dec
nop
jbe
push
nop
inc
daa
sub
dec
imul
or
mov
pop
adcb
std
in
mov
dec
lods
repnz
mov
out
sub
rorl
mov
pusha
rol
mov
sub
fnop
lea
sub
pushl
push
popf
pop
aaa
mov
xor
mov
cltd
pop
rorb
mov
sahf
in
js
mov
incl
add
mov
cmpsl
push
insb
stos
adc
test
aaa
mov
sub
mov
mov
les
ljmp
inc
call
jle
pop
ja
rclb
jnp
and
daa
xchg
and
dec
les
dec
jecxz
cmp
mov
cmp
lret
dec
js
or
inc
ret
xchg
stos
or
ljmp
test
mov
repnz
mov
movsl
inc
dec
out
ss
cmp
mov
clc
mov
push
pop
dec
dec
out
xor
sbbl
jmp
shrl
bound
mov
ljmp
sbb
push
data16
inc
clc
sub
sub
xor
sti
inc
xor
lcall
pop
mov
mov
pop
lcall
mov
pmaddwd
xchg
loope
mov
mov
adc
fcompl
das
xor
or
out
inc
push
jecxz
out
push
adc
sarb
mov
jg
jno
bound
mov
pop
mov
pusha
push
fstpt
lods
cwtl
push
stos
mov
lcall
cli
jb
add
and
test
in
sub
loopne
dec
call
outsb
push
push
or
xchg
xor
sbb
adc
and
out
mov
std
mov
sbb
cwtl
shlb
cmpl
mov
dec
mov
call
ljmp
movsb
pop
fsubp
sbb
cmpsb
xchg
rorl
pop
js
push
cmc
jp
pop
inc
fs
dec
ret
mov
aaa
push
inc
ret
std
nop
in
and
mov
inc
decl
insb
out
mov
aaa
sti
jns
fbstp
jbe
mov
pop
jnp
cwtl
lret
call
xor
xchg
mov
arpl
std
mov
sub
fistps
scas
mov
loopne
pop
clc
jg
push
imul
pop
stos
mov
sub
dec
aaa
cmp
xchg
imul
jp
addr16
lret
lret
mov
mov
lcall
pop
mov
push
icebp
call
lahf
lcall
test
or
or
aaa
repnz
out
xchg
movsb
arpl
mov
mov
inc
inc
decl
add
xchg
scas
jbe
in
fiaddl
call
std
ljmp
pushf
call
fmull
cltd
pop
inc
movsl
iret
sbb
and
xchg
mov
insb
cld
in
cmc
jmp
push
jbe
cmpb
fdivrp
test
jns
call
ja
lods
sti
ret
sbb
aam
pop
stos
sub
xchg
test
xchg
mov
ljmp
sbb
push
sbb
adc
shrb
mov
lret
mov
pop
popa
fnsave
das
clc
or
loopne
adcl
and
push
jg
sbb
add
enter
sbb
fcmovnu
mov
lret
push
insl
xchg
ret
push
and
out
mov
mov
mov
es
movsb
cmp
aad
push
test
addr16
pop
mov
mov
in
mov
sbb
jmp
push
cwtl
jb
shrl
pushf
out
fwait
cli
xchg
adcl
cmp
or
push
ljmp
jae
sahf
iret
and
rcll
adcb
xor
aam
push
ficoml
incl
cmp
cwtl
sub
das
ja
jg
pop
push
sub
sub
xchg
xchg
ret
mov
push
aam
mov
dec
xchg
mov
lea
jb
pop
mov
int
call
jae
xor
pop
out
push
enter
jae
out
cli
call
dec
stc
iret
jmp
jmp
stc
ljmp
je
inc
in
decl
sub
sbb
rcrl
in
imul
push
pop
frstor
pop
pushl
test
mov
cmpsb
pop
not
mov
insb
add
or
js
incl
loopne
or
data16
cmp
loopne
in
repnz
cmp
ja
aad
pushl
aaa
ds
jo
cmp
sbb
ss
sub
pushl
pop
add
mov
in
movsb
enter
cs
pop
add
loopne
out
int
mov
push
jle
mov
fstps
and
mov
dec
xchg
jge
inc
push
xchg
ret
sub
test
insb
mov
neg
mov
pusha
call
mov
rclb
mov
sub
iret
leave
repz
sbb
es
mov
leave
decl
mov
add
mov
lahf
add
outsl
ljmp
inc
fcomip
aaa
mov
pushf
imul
push
inc
xchg
arpl
cltd
mov
jmp
xlat
mov
adc
mov
add
mov
test
mov
aas
adc
incl
bnd
push
mov
jnp
push
loopne
xchg
add
xor
pop
xlat
xchg
jno
push
and
push
adcb
sbb
sbb
cmp
rcrb
ja
ljmp
aam
xor
fsubl
pop
dec
adc
sti
mov
adc
inc
jmp
xchg
or
sub
add
jecxz
mov
test
jmp
cmp
js
dec
pop
fwait
les
pop
ja
jns
lock
std
mov
xor
call
inc
sub
push
mov
lds
es
icebp
mov
jg
lods
jl
jmp
movsl
pop
or
test
cmp
mov
ljmp
jg
pusha
movb
jno
pushf
mov
js
xchg
mov
lcall
int
mov
cld
adc
pop
add
stos
scas
mov
icebp
roll
clc
mov
jmp
xchg
cmpsb
fs
dec
aaa
and
movsl
jge,pn
xchg
mov
add
clc
repz
ss
decl
pop
xchg
pop
aad
add
dec
scas
add
mov
bnd
dec
aaa
stos
push
sub
decl
mov
lcall
jl
sbb
and
push
push
into
dec
mov
sub
inc
mov
push
daa
lahf
cmp
popf
sar
shrl
sbb
add
xchg
lcall
jg
lcall
jecxz
popa
mov
cmp
and
or
push
jbe
cmp
ds
and
call
mov
stos
ret
dec
adc
push
xlat
vpmulhw
sbb
repz
out
sarl
imul
mov
std
shll
pop
push
cmp
imull
push
or
cmp
sarl
fbld
cmp
inc
add
aam
nop
loopne
sub
jle
lcall
or
in
jp
scas
xchg
pop
adcl
loopne
aam
or
out
cmc
pop
push
aas
lcall
mov
add
sub
dec
subb
ds
jo
lea
data16
mov
leave
xchg
push
inc
push
lods
xor
jmp
fdivl
hlt
es
xchg
push
in
jmp
push
inc
mov
xor
mov
mov
push
setnp
data16
inc
bound
aam
inc
sub
vpshld
mov
lock
movsl
das
arpl
or
cmp
dec
out
inc
aaa
jg
fs
aam
inc
fsubr
pop
scas
std
mov
hlt
push
xor
dec
sub
sbb
in
xor
and
outsl
mov
imul
jmp
in
pop
sbbl
std
jmp
pop
xchg
mov
fists
jp
inc
pop
mulb
lods
push
mov
xchg
rdtsc
sbb
call
sbb
outsb
mov
das
daa
rclb
das
adc
sarl
mov
mov
js
roll
popf
xchg
jne
adc
imul
loopne
insl
sbb
lcall
cmpsl
push
sub
pop
pop
arpl
cli
out
jg
jmp
or
cwtl
mov
cmp
jb
daa
xlat
adc
push
cli
ljmp
jnp
dec
xchg
jmp
rorb
subl
or
mov
pop
dec
loopne
mov
and
cmp
and
pop
clc
jns
jmp
sbb
fstp
cmp
mov
and
xor
xorb
jns
push
dec
adcl
xchg
loop,pt
loopne
filds
jmp
in
test
fbstp
mov
mov
cmp
xchg
addr16
fidivrl
pop
sbb
idivl
mov
sub
push
cwtl
and
mov
adc
pop
jae
lret
insb
loopne
ss
or
enter
add
xor
sti
adc
jno
mov
fisubs
arpl
inc
push
outsb
xchg
mov
or
cmc
push
sub
xor
inc
jmp
lods
mov
scas
ss
test
rcrb
sbb
lds
dec
out
add
in
cmp
call
dec
adc
pop
mov
ror
stos
or
cmp
xchg
cmp
add
sbb
call
popf
ljmp
cli
notb
pop
or
stos
inc
std
das
jbe
in
push
popf
sbb
add
loopne
cmpsl
into
ljmp
aas
int
lods
movsb
mov
mov
call
mov
fisubl
dec
jg
pop
mov
inc
daa
fcomps
xor
jg
jmp
mov
mov
ret
cs
std
out
mov
xlat
out
imul
mov
push
mov
xchg
jecxz
clc
cmp
nop
adc
dec
sbb
popa
addr16
hlt
nop
lcall
mov
cli
popl
jnp
out
push
mov
loopw,pn
call
jo
mov
pushf
repnz
loop
pop
loopne
sub
divl
push
mov
or
or
jmp
pop
mov
push
pushf
xchg
dec
out
call
test
cmc
cmp
mov
push
aas
xor
in
iret
xor
repz
decl
stc
pop
mov
pop
pop
cld
sti
pop
pop
push
iret
pop
leave
add
cld
push
cmp
sub
out
clc
push
out
js
pop
xor
sbb
cli
lea
out
add
fdivr
jne
jmp
mov
and
adc
jae
xlat
pop
mov
or
pop
pop
pop
xor
jecxz
pushl
and
ja
sbb
add
mov
shrl
movsl
out
jg
sbb
scas
outsl
adc
pop
lock
movsb
jo
leave
cmpsl
cmpsb
dec
imul
sub
sbb
mov
and
cld
rcrl
inc
aad
or
out
icebp
and
sbb
sar
pushl
dec
cmp
dec
cmc
fwait
les
jp
dec
fidivl
in
mov
cmpsb
xor
clc
or
add
fcmovnb
xchg
jns
cmpsb
addr16
shrb
jae
sbb
cmp
and
sub
arpl
push
loope
jne
sub
mov
roll
cwtl
sub
dec
cmc
icebp
mov
movsl
jnp
addr16
je
ljmp
mov
mov
call
xchg
int
jnp
mov
ja
xchg
pushl
mov
or
mov
fwait
scas
pop
sahf
test
movsb
ficomps
dec
xor
inc
jg
jmp
roll
movsb
jbe
aaa
xor
lods
pop
es
mov
sbb
and
scas
fdivrs
and
push
pop
pop
dec
fstpl
iret
jmp
dec
mov
in
sti
test
add
fwait
or
pop
push
pop
jns
es
addr16
lcall
dec
mov
cltd
or
sbb
inc
mov
cmp
push
xlat
fs
clc
inc
lcall
call
sar
lock
adc
data16
push
lcall
lcall
jo
mov
and
mov
sub
in
jno
jg
dec
mov
and
xchg
leave
das
lods
fildll
lods
mov
mov
ljmp
faddl
popf
icebp
mov
mov
loope
dec
inc
jns
mov
insb
lcall
pushf
fsubrs
and
mov
lock
cld
lcall
cmc
fdivs
mov
or
and
int
stos
cmp
loop
shlb
out
sbb
mov
and
inc
mov
jmp
mov
lcall
idivl
and
sbb
add
mov
pop
push
ljmp
pop
pop
jmp
into
shl
xlat
sub
pop
cmp
or
sub
in
sbb
ds
out
js
aam
ds
or
icebp
ds
cs
ss
decl
or
cli
dec
xor
mov
pusha
mov
cwtl
bound
dec
mov
ds
movsl
pop
decl
push
ficoms
cmp
pop
inc
div
mov
pusha
loop
hlt
push
push
and
sbb
push
cld
mov
push
neg
dec
or
add
test
lods
mov
divb
dec
mov
push
dec
int3
push
test
push
sbb
add
test
repz
mov
mov
add
into
inc
hlt
aam
sub
and
mov
mov
lcall
mov
into
or
maskmovq
testl
lcall
push
test
incl
pop
and
lcall
pop
lea
ljmp
cmp
mov
dec
mov
out
sbb
scas
mov
or
decl
sbb
sbb
hlt
sub
and
fmul
fists
push
adc
leave
cmpsb
mov
cltd
jg
xor
js
dec
push
sub
js
pop
es
jmp
xchg
rorl
testb
sbb
gs
enter
inc
loop
cmp
jg
lret
test
fisubl
adc
or
int
jns
inc
lret
and
mov
mov
jg
pushl
xchg
pop
mov
loop
xor
test
call
mov
inc
out
push
push
jno
fiaddl
xor
lds
in
scas
fcmovnb
decl
jl
lahf
sbb
js
daa
adc
scas
jo
mov
adc
mov
daa
lcall
or
sbb
insb
cmp
call
xchg
leave
imull
clc
fcomip
iret
or
push
mov
inc
xchg
mov
mov
ja
pop
sarl
push
out
pop
lcall
jo
out
stos
shrl
cmpsb
mov
dec
ret
sar
decl
adcb
out
cmp
call
mov
nop
adc
sbb
outsb
ret
jg
lcall
mov
ret
jae
dec
pop
and
push
and
out
lods
jp
les
jmp
pop
mov
cmp
loop
loopne
add
mov
pushl
test
add
sti
pop
nop
inc
xchg
stos
xchg
jge
je
int
sahf
addl
mov
sub
add
ds
push
stos
jne
add
sbb
fwait
mov
or
cli
push
movsb
sbb
or
loopne
push
arpl
jae
push
add
jmp
mov
mov
outsl
mov
xor
or
dec
mov
aaa
mov
xor
call
lret
loop
jl
js
vpmadcswd
nop
and
dec
lret
outsb
cmp
call
popl
das
cmp
push
mov
lret
cmpl
lret
xchg
frstor
inc
xchg
mov
loope
mov
inc
inc
divb
clc
repnz
sahf
cltd
and
pushl
mov
pop
gs
and
dec
inc
jg
mov
inc
lock
lahf
jg
dec
jo
js
jo
call
out
fs
inc
ds
sub
das
test
out
mov
sub
or
xchg
sub
inc
imul
test
jae
inc
mov
add
pusha
push
pop
rep
hlt
ja
pop
sub
testb
test
mov
fmuls
jmp
sbb
out
data16
sbb
daa
pushl
stos
les
leave
int3
jge
stos
inc
fs
adc
fists
aad
jmp
decl
mov
push
mov
inc
repz
adc
pop
outsl
adc
mov
jmp
sub
sbbl
ljmp
data16
and
pushl
add
pop
cmc
jno
ja
push
dec
lcall
cmp
adc
jne
insl
dec
pop
and
and
fcoms
mov
push
lods
jbe
out
xor
pop
add
jns
clc
dec
mov
push
mov
rol
lds
mov
xor
mov
and
cltd
fs
mov
arpl
xchg
pushl
pusha
sub
xchg
test
int3
xchg
jp
push
je
repz
xchg
inc
call
or
cld
outsb
in
mov
fcos
push
movsb
mov
arpl
movsl
sbb
sbb
in
or
movsl
fwait
iret
cwtl
mov
lcall
cmpsb
jnp
shll
push
out
jmp
or
xchg
dec
adc
xchg
adc
pushl
pop
fidivs
rcrl
xlat
ret
enter
jnp
shlb
enter
push
insb
mov
jg
popf
sub
loope
jp
xor
imul
xchg
pop
xor
or
call
dec
sub
push
jecxz
sbb
jecxz
fstps
xor
inc
negb
inc
push
and
mov
push
dec
icebp
dec
dec
mov
sahf
clc
aam
int
mov
mov
std
pushl
lcall
rcr
aas
xchg
mov
cld
or
mov
dec
rdpmc
lahf
lcall
adc
lods
pop
cmpsb
cmc
mov
cmp
cli
inc
js
divps
fsubrl
xchg
rcrb
lods
cmp
xlat
dec
mov
fwait
xorl
and
adc
popf
or
in
lret
lcall
lock
cli
imul
movsb
pop
cmp
adc
xchg
push
add
jmp
gs
push
add
fsubs
decl
repnz
test
pop
aas
sar
incl
jl
inc
mov
cs
xchg
mov
fisubrs
fs
xchg
std
adc
in
les
sub
sbb
sbb
inc
xchg
mov
sbb
mov
mov
lret
lods
and
pushl
les
and
push
fs
loopne
js
sub
jecxz
adc
rclb
incl
fcomp
jmp
xor
ja
aad
mov
adc
es
mov
xor
mov
out
and
xchg
addr16
sbb
fcmovnbe
jns
inc
and
ljmp
ret
ror
mov
negb
or
bound
push
stos
pop
in
clc
sar
out
push
and
inc
out
mov
subb
in
add
pop
fcomps
and
lcall
xchg
gs
loop
add
or
jne
jle
subb
cmp
fsubr
ud0
cld
pushl
xchg
pop
add
test
je
sbb
mov
outsl
and
lcall
xchg
adc
aaa
cmp
xchg
loopne
rclb
iret
rorb
lcall
mov
sbb
pop
jle
sub
jns
xchg
or
jmp
idiv
out
insb
int
mov
and
rclb
rorl
cmp
repnz
mov
lcall
dec
cmp
aam
or
pop
cmpsl
arpl
sbb
ljmp
ljmp
dec
hlt
adc
and
xchg
out
push
dec
repnz
mov
dec
xor
inc
test
xchg
ret
fisubrs
js
shl
pop
xchg
mov
fcmovu
adc
pop
or
mov
pop
push
cmpsb
lret
js
xchg
push
cs
in
ljmp
xor
dec
mov
mov
mov
pop
in
insl
push
dec
cltd
lret
fldl
les
scas
out
cli
or
clc
inc
pop
add
cwtl
loopne
dec
mov
into
mov
call
rcrb
ljmp
jnp
sbb
stc
xlat
or
ret
aaa
add
pop
adc
xor
mov
xor
outsb
sbb
into
mov
sub
adc
ret
dec
enter
incl
jl
dec
pop
sub
and
jnp
sub
std
xor
adc
idiv
call
sbbl
mov
pop
cs
nop
in
loope
cmp
fildll
mov
test
bound
cmp
stos
jmp
das
in
jo
inc
lods
fwait
cmp
push
pop
jg
pop
dec
test
pop
incl
adc
bound
jmp
sbb
pop
pop
pop
ret
cmpsl
and
cmp
jmp
hlt
mov
icebp
addr16
fstpt
lahf
xor
sti
ljmp
ljmp
push
or
mov
fst
bound
xor
and
call
rol
inc
bound
ds
call
arpl
repz
sub
adc
movsl
cli
lcall
pop
std
decl
incb
push
and
mov
fmull
ficompl
adc
push
lcall
aad
rcrb
mov
dec
sbb
add
mov
fidivs
decl
and
xchg
in
or
adc
mov
lahf
test
bound
dec
shlb
push
inc
inc
iret
pushl
std
test
aam
sub
lahf
jg
sub
pop
das
in
mov
inc
loopne
ljmp
lds
cmp
jle
jnp
daa
or
jns
adc
out
icebp
mov
testl
flds
movsb
rcl
jg
cmp
mov
mov
inc
clc
jl
mov
fmull
sti
int3
xorl
pop
xchg
movsb
pop
leave
mov
enter
push
push
in
push
mov
test
adc
in
push
call
ljmp
stos
insb
mov
ds
mov
fstpl
sbb
mov
inc
mov
ret
cmp
jp
sub
clc
inc
sahf
sbb
mov
aad
push
lret
movsl
push
ljmp
jmp
sbb
mov
add
jb
jl
je
inc
decl
sbb
decl
enter
scas
jno
pop
xlat
aad
xchg
sbb
xchg
jp
aaa
mov
cwtl
inc
push
ljmp
xchg
xor
out
xor
loopne
sti
in
sti
xor
nop
les
mov
ss
nop
aaa
bound
shlb
std
inc
lods
xchg
inc
popf
cmp
jmp
or
aad
mov
ffreep
sbb
cs
mov
pop
sub
outsl
cli
call
in
pusha
mov
test
xor
add
cmp
movsb
repnz
fists
pushl
xchg
dec
jne
mov
and
dec
sbb
decl
scas
jg
inc
xor
pop
mov
jno
cmc
ja
add
dec
adc
into
mov
jae,pt
fbstp
dec
xor
mov
out
shll
xor
push
hlt
call
ret
addr16
cld
pop
cmp
dec
xchg
inc
xchg
call
lcall
int
push
int
and
and
xchg
mov
loopne
enter
pop
sar
pushl
pop
pop
adc
mov
mov
ja
ror
cmp
adc
fstpt
pop
icebp
pmulhw
pop
dec
mov
xchg
jne
test
mov
adc
mov
decl
push
push
stc
sub
adc
push
cmp
xor
ficoml
pop
repnz
lret
decl
and
xchg
pop
pop
jecxz
mov
push
jp
jecxz
pop
and
pop
xor
ljmp
xlat
xchg
fistl
in
popa
jbe
jne
imul
aam
sysenter
lods
lods
cmc
pop
dec
imul
out
sub
xchg
mov
sub
xchg
pushl
xchg
ljmp
mov
call
mov
rcl
sub
aam
inc
shr
inc
and
dec
inc
fsts
mov
lcall
and
in
sbb
jmp
jo
orl
sbb
mov
jmp
mov
mov
cmpsb
into
in
push
popa
mov
push
and
in
neg
movsl
xchg
ljmp
cli
lcall
sbb
movsl
clc
pop
sub
mov
cmp
sub
mov
lcall
jl
cmpsl
sub
scas
inc
push
into
es
cmp
sbb
gs
jg
sbb
jmp
js
std
shrl
call
or
in
or
data16
mov
call
dec
daa
inc
mov
fstpt
outsb
mov
add
lret
js
add
mov
sbb
rcll
test
movsb
xor
mov
mov
and
or
cld
fmull
fadds
xor
test
ljmp
or
jmp
add
les
mov
xor
push
jmp
lahf
mov
or
cltd
mov
inc
int3
out
inc
lds
mov
mov
fadd
vmread
mov
jp
jg
or
push
adc
adc
xchg
adc
pop
fimuls
incl
inc
mov
inc
lods
scas
xchg
jg
and
stc
xchg
lods
out
fildll
jecxz
jmp
adc
lret
ret
test
les
movsb
or
sbb
adc
fnsave
sbb
push
sbb
pop
shlb
jnp
push
rclb
push
mov
lock
fs
push
jne
mov
cwtl
sbb
int
jp
ljmp
mov
lret
mov
into
repz
cmp
hlt
test
loopne
das
fildll
scas
lahf
mov
mov
out
leave
mov
cmpsl
addl
push
xor
into
ds
pop
or
sbb
stc
inc
xor
pop
sub
or
rcll
push
adc
cmp
jl
iret
mov
mov
cld
lcall
test
and
or
popa
add
or
call
pop
pop
movsb
mov
pushl
adc
cltd
stc
push
pop
push
and
imul
fisubrl
aas
jle
shlb
shrl
clc
in
pop
pop
sub
xor
sbb
mov
mov
jmp
jg
test
sub
sbb
xchg
ret
data16
movsb
mov
or
ljmp
inc
iret
aaa
insb
sbb
les
and
mov
or
aaa
das
js
cmp
test
popa
ljmp
test
inc
dec
mov
ljmp
pop
insl
jge
fdivl
add
mov
mov
shll
and
fcmovbe
ror
repz
inc
add
out
gs
push
mov
repz
popf
dec
jg
fadd
adc
orb
sar
incl
push
mov
pop
and
out
xor
jae
clc
xchg
xor
hlt
inc
sub
lcall
mov
adc
lea
mov
adc
scas
mov
adc
mov
movsl
cmpsb
inc
jnp
bound
mov
mov
std
fistps
or
push
loope
ret
or
push
dec
cmp
pop
lods
out
sbb
imul
mov
xchg
and
lcall
punpckhdq
xor
jnp
sub
jle
test
jp
insl
xor
movsl
popa
xor
js
xchg
movsl
rolb
dec
enter
divb
cmpl
fisttps
mov
push
xor
pushf
inc
stc
pop
sub
lods
mov
xchg
fucomp
jmp
aaa
roll
fwait
sti
add
ljmp
sub
xchg
aaa
cld
mov
or
mov
sub
xchg
jmp
inc
mov
pop
cli
push
je
mov
pop
xchg
clc
or
sbb
stc
loopne
cmp
daa
js
inc
mov
loope,pt
mov
into
nop
insb
jb
add
lret
push
dec
mov
arpl
jne
mov
pushf
int
cmpsl
cld
sub
add
sbb
sar
mov
lret
xchg
call
pop
mov
lock
inc
push
jns
jp
in
dec
stos
sub
push
xchg
xlat
push
cmpsb
loope
push
lcall
cmpsl
scas
lods
jae
cmp
push
adc
xchg
dec
or
es
ljmp
pushl
jg
out
jmp
inc
mov
mov
arpl
push
nop
mov
pop
lock
fcomip
jmp
dec
movsl
jl
jp
mov
cmp
scas
mov
loopne
mov
incl
xchg
dec
xchg
add
hlt
mov
push
outsl
divb
fisttps
pop
pushf
sbb
mov
out
mov
cmpsb
imul
dec
pop
stos
and
ds
clc
sbb
ljmp
lea
adc
cmc
shlb
jg
fdivl
and
jbe
fcomip
ljmp
mov
sbb
cmp
sub
fistl
jecxz
jp
inc
mov
call
xchg
lods
or
lahf
pop
mov
mov
xchg
adc
daa
stos
lret
insb
scas
adc
sub
cwtl
repnz
imul
lcall
out
push
lds
in
lahf
push
icebp
xchg
pusha
loopne
call
push
dec
push
jp
cld
xchg
push
inc
movl
cmc
add
adc
aam
ss
xlat
xor
into
movsb
ja
faddp
out
clc
xchg
mov
push
into
mov
xor
aas
ror
fnstenv
shr
js
jg
rcr
imul
loope
fcoms
jp
cli
in
sbbb
std
xor
rorl
andb
js
filds
loop
cmp
je
pop
addr16
stos
cmpsb
sub
subl
jnp
lcall
js
mov
pop
outsb
sbb
testl
xchg
lret
mov
jb
lcall
incb
push
pop
popf
es
jle
fneni(8087
fnstcw
push
or
jg
sub
popf
fbstp
roll
imulb
mov
jp
xor
xchg
hlt
sbb
in
jle
mov
stc
mov
mov
add
loopne
loope
add
jae
sub
mov
push
flds
addr16
fcomip
sub
jbe
dec
add
in
add
rclb
pushl
in
fiaddl
aas
clc
mov
out
mov
js
outsb
test
jg
shl
in
cld
push
aam
addb
mov
jb
lods
or
jmp
sbb
cmc
xchg
fxch
jmp
pop
adc
or
mov
dec
test
mov
mov
scas
jbe
outsl
jg
and
cmp
jmp
inc
mov
xor
call
push
push
ja
pusha
cli
sbb
xor
icebp
call
xchg
mov
mulb
call
push
cli
and
sbb
push
lock
xchg
fisttps
push
ret
and
add
mov
cmp
xor
pop
bound
clc
mov
mov
sub
push
sbb
push
or
insl
sub
adc
mov
mull
in
inc
cmpsb
cmp
int3
leave
out
dec
adc
hlt
dec
push
aad
sub
jg
xlat
add
dec
shll
dec
out
push
add
adc
and
decl
add
add
push
lods
pushf
or
adc
or
aaa
push
into
insb
dec
mov
cmp
dec
es
call
std
pop
test
loopne
das
clc
inc
or
rorb
sti
xchg
inc
mov
mov
jno
and
ret
repnz
push
pushf
add
dec
sti
repnz
call
pop
push
ds
add
fsubl
adc
std
mov
mov
call
dec
std
dec
adc
repnz
fiadds
jo
push
cmpsl
push
cmp
lock
push
jg
push
sbb
pop
push
mov
and
pop
cmp
aas
jge
repnz
pop
pop
lcall
call
inc
xlat
fcompl
aaa
dec
fwait
loopne
jno
sbb
xchg
outsl
rorl
test
aad
bound
decl
in
gs
sarl
sbb
std
fwait
mov
pushf
pusha
movsl
in
xchg
pop
lods
ja
pushl
gs
sbb
pop
pop
pop
mov
pop
pop
pushl
std
cmp
sbb
cmp
popf
pop
lock
out
shll
push
inc
outsl
cli
mov
pop
or
test
ja
movsl
pop
mov
cmpsb
sbb
push
aam
arpl
mov
add
mov
mov
daa
pop
sbb
cmpsl
add
or
ljmp
in
cmp
call
dec
rorb
int
add
sub
xchg
xor
or
les
fisubs
push
lahf
mov
xor
jmp
push
inc
ja
cmp
cmp
leave
push
into
lock
cmpsb
aam
push
jo
jecxz
dec
and
std
and
mov
mov
notb
inc
popa
add
into
call
loope
dec
call
adc
flds
ret
fs
and
rcll
mov
push
jg
mov
mov
add
adc
mov
incl
scas
mov
in
jne
mov
or
das
negl
ljmp
mov
dec
cld
inc
sub
jecxz
mov
jge
aam
add
add
jmp
sbb
ret
jl
dec
cmp
hlt
hlt
dec
add
lea
or
pushl
xor
sub
jl
pop
pusha
imul
fisubs
xchg
stos
cs
decl
lcall
aam
xchg
lods
cmp
jl
ja
mov
lcall
sarl
cmpsb
mov
sbb
add
xchg
imul
mov
lcall
pushf
jge
enter
ds
push
lret
pop
mov
outsl
adc
lcall
or
decl
pop
sbb
test
add
popl
jl
shlb
clc
jne
hlt
xchg
inc
test
mov
lcall
call
xor
mov
das
jge
mov
dec
push
jl
jne
in
sub
and
add
and
mov
movsl
mov
psrad
call
mov
out
push
out
lret
movsb
gs
inc
pop
mov
mov
sub
popf
or
dec
jp
push
mov
loop
cmp
js
mov
sub
mov
sar
pushl
add
mov
sub
and
or
mov
xor
sahf
sub
xchg
es
lret
pop
mov
mov
lods
jp
cmpsl
push
adc
or
gs
push
add
xor
mov
mov
insl
rorl
loope
jmp
movsl
and
mov
jne
in
xor
jecxz
shl
cmp
ficomps
incl
push
sbb
or
fistl
pop
outsb
mov
lods
stos
outsl
pop
insb
jge
shrl
ret
std
pushl
movl
mov
mov
adc
sub
jns
lcall
popa
xchg
push
xchg
push
mov
xchg
fdivrl
in
push
aas
addl
rclb
clc
cmp
out
movsb
stos
and
xor
inc
test
adc
fcomps
cmc
lret
and
pushf
mov
sbb
movb
decl
popa
pop
xlat
test
jns
lds
lahf
push
and
sahf
rcrl
sbb
sub
fcomip
jb
mov
adc
in
adc
dec
ljmp
push
mov
mov
mov
jae
pop
jae
mov
call
inc
cmp
lods
jle
insb
outsb
jmp
push
fdivrs
or
fiadds
testb
sub
xor
mov
pop
pushf
dec
cmp
hlt
jo
add
out
cli
call
push
add
push
loopne
xchg
mov
enter
loop
cmc
inc
mov
clc
sbb
loope
ljmp
pusha
out
sbb
and
fisubrl
and
stc
jmp
sahf
inc
mov
pop
sub
dec
xchg
mov
stc
ja
in
cltd
int3
mov
es
mov
cmc
test
add
jo
mov
decl
decl
sub
cmp
sub
out
or
test
jg
jmp
imul
sti
xchg
movsb
jb
add
scas
cwtl
lods
in
and
sahf
and
incl
mov
push
mul
mov
cli
andb
cmpsb
push
hlt
jge
jmp
ret
xor
fsubp
movsl
dec
imul
ja
xlat
inc
lcall
mov
cmc
push
js
pushl
and
leave
enter
repnz
push
adc
adc
leave
inc
int
insl
push
jae
pop
movsb
hlt
dec
icebp
aaa
and
mov
dec
and
scas
cli
pusha
xlat
out
test
mov
sbb
cld
jg
repnz
aad
lods
negb
or
mov
das
sbb
stos
rcll
call
iret
jbe
repz
test
add
add
push
push
daa
mov
clc
incl
outsb
pop
jae
gs
pop
and
pop
add
jne
add
lcall
int
sub
xchg
lock
or
dec
lods
imul
push
xchg
jg
shrb
mov
popf
or
dec
iret
adc
enter
fdivrp
in
pop
in
enter
ret
jno
pop
das
shlb
ret
insb
ss
sub
or
dec
mov
fiaddl
frstor
adc
mov
mov
loop
fisubl
sbbb
jmp
out
dec
hlt
xchg
push
or
test
jge
movsb
lahf
push
jmp
xchg
addr16
dec
cmp
gs
shr
sbb
cmpsl
mov
dec
aas
push
sub
mov
dec
in
cltd
sbb
decl
jmp
push
push
pusha
dec
sahf
dec
jle
rcrl
int
mov
cli
jle
popa
leave
sbb
add
or
add
ljmp
imul
in
std
xor
cltd
add
mov
adc
inc
aam
ja
push
push
incl
cld
jmp
adc
jne
pushf
add
mov
cmp
xor
incl
in
jl
mov
and
add
sarb
dec
data16
int
or
int
push
fcomip
cwtl
mov
les
int
push
into
and
lods
outsl
sbb
aad
fwait
xchg
iret
incl
cld
pushl
jle
or
imul
insl
jg
in
es
popa
lock
xchg
fsubs
incl
mov
stos
inc
inc
inc
out
mov
mov
out
outsb
mov
call
stc
push
mov
jb
out
fcmovu
and
mov
jl
ffreep
bnd
inc
ficomps
scas
insl
jmp
popf
or
add
xchg
insb
cwtl
in
and
xchg
icebp
decl
repnz
es
and
out
out
sbb
xor
fidivrl
dec
fldenv
loop
pop
inc
cld
dec
bound
cs
je
push
mov
or
cmp
test
loopne
ljmp
jp
dec
or
mov
jnp
inc
mov
jnp
inc
fmulp
aas
testb
jl
pop
jb
jle
push
adc
gs
xlat
repz
hlt
xchg
not
inc
mov
xor
scas
cmp
in
xchg
stc
scas
or
jmp
lret
jb
push
and
shll
mov
sti
xor
popf
push
clc
or
ljmp
and
cld
cld
in
jb
outsl
shll
push
xor
or
in
stc
fbld
dec
mov
into
lock
stos
sub
ljmp
icebp
sbb
mov
or
pop
push
pop
in
inc
aas
stos
filds
dec
pop
bound
cltd
ljmp
paddsb
ss
aaa
add
movsl
enter
subl
subb
int
lds
aad
decl
mov
inc
rolb
frstor
lret
in
pusha
pop
sahf
jne
stos
sti
sub
jne
dec
enter
lret
sub
dec
push
pushf
jnp
cmp
adc
push
popf
xlat
pop
xchg
pop
out
inc
aam
inc
adc
dec
cmp
jno
cs
fs
mov
ljmp
lcall
jg
adc
xor
dec
mov
or
xor
pop
pushl
add
out
and
add
sti
or
hlt
data16
add
dec
or
hlt
stos
sbb
inc
ljmp
mov
fidivl
dec
mov
pop
mov
aam
push
xchg
ljmp
cld
jle
arpl
mov
cld
or
movsb
std
pop
in
insb
std
fildll
add
aam
pop
cmp
or
mov
stos
push
fdivrs
xor
cmpb
pop
cmp
mov
inc
enter
lret
mov
popa
xchg
inc
inc
ss
pop
push
mov
sub
dec
push
push
jo
call
out
jnp
add
push
popa
adc
dec
xchg
sti
lahf
adc
sub
push
loope
jg
shll
ja
pop
dec
in
inc
mov
outsb
cmpl
adc
mov
dec
mov
sarb
scas
jle
add
cmpsb
dec
js
std
mov
pushl
adc
inc
lock
int3
fstl
mov
cli
into
mov
ret
pusha
ljmp
cli
call
scas
pusha
shrb
sbb
xor
orb
loop
icebp
pop
lock
inc
shll
mov
pop
mov
idivb
inc
dec
lock
out
pop
flds
lcall
add
sbb
cmp
mov
es
cltd
and
sbb
jg
call
fucompp
into
or
scas
dec
mov
dec
test
jnp
mov
aad
gs
lcall
push
mov
cmpsl
sbb
lahf
movsl
int3
mov
emms
rcll
clc
pop
adc
mov
ljmp
mov
push
pusha
cmp
add
popa
push
lock
dec
inc
and
push
mov
in
fcmovbe
dec
fdivr
pushl
cld
or
testb
stc
inc
push
push
call
and
adc
das
clc
sbb
adc
test
movsl
cmp
lcall
sbb
sbb
lahf
test
scas
in
sbb
xchg
jae
in
out
vpminud
cmp
mov
les
xor
adc
mov
xchg
fsubl
pop
inc
pushl
shll
sbb
out
or
jnp
mov
sub
mov
cld
sbb
lcall
xor
mov
cs
into
jg
ljmp
lahf
xor
add
aam
or
sbb
add
mov
fnstsw
ja
sub
lahf
inc
lods
push
enter
imul
decl
aad
sub
or
mov
daa
sub
or
dec
push
es
pop
pushl
int3
iret
xor
stc
xor
xchg
aam
rorb
mov
mov
lcall
xor
pushf
subb
test
std
jmp
call
subb
pop
jnp
iret
aas
bound
jns
cld
pushl
jmp
pop
cltd
cmp
sub
ds
and
or
mov
notb
pushl
movsb
jo
mov
xchg
xchg
pop
push
jp
fstl
movsl
inc
mov
stc
in
cmp
std
ja
xchg
sarl
mov
push
and
repz
sbb
jg
xchg
cmp
pop
mov
push
add
cmp
dec
ljmp
repnz
xchg
xor
in
jne
lock
xchg
inc
pushl
stc
dec
sti
sub
mov
ss
adc
jg
dec
cmp
lods
add
dec
pop
mov
enter
jg
dec
mov
inc
or
arpl
out
jnp
pop
mov
xchg
mov
mov
clc
daa
xchg
dec
xchg
mov
cmp
movsl
out
aas
std
rorb
ret
sahf
xchg
mov
jp
subl
call
cwtl
xchg
ss
mov
add
ds
push
pushl
fwait
adc
cs
mov
adc
jno
ret
pop
inc
test
lahf
clc
mov
ret
and
test
rolb
fbld
loopne
adc
jb
daa
mov
scas
inc
jbe
xor
lock
call
lea
cmpsl
dec
jne
fcomi
cmpsb
scas
and
add
pop
mov
mov
push
jmp
push
pop
sub
add
add
adc
xor
ds
icebp
paddq
mov
js
dec
add
adc
fs
sub
cld
sbb
fcomip
out
clc
mov
mulb
adc
out
push
push
add
xchg
je
xlat
call
adc
scas
test
lea
pop
xor
jmp
push
data16
into
cli
mov
int
sbb
insb
xor
pop
or
cwtl
into
mov
push
mov
cld
not
dec
dec
nop
mov
or
push
lea
repnz
mov
lcall
dec
aad
fs
push
sbb
push
xor
jge
or
jmp
add
dec
xorl
mov
call
repz
das
insl
sbb
xchg
leave
std
sarb
mov
mov
push
not
mov
incl
bound
scas
out
and
mul
aad
inc
mov
stos
jmp
pop
push
mov
and
cmp
jg
cwtl
jnp
nop
and
pop
sarb
inc
sti
adc
or
jp
scas
pop
jmp
in
fnstenv
and
dec
sub
das
mov
sbb
loope
jno
sbb
or
add
and
decl
fisttpl
sarl
rcll
pop
fadds
xchg
sar
jmp
jge
sub
push
xchg
add
xchg
xchg
out
dec
sub
mov
inc
pop
cld
scas
jp
jae
adc
add
cmc
jo
mov
decl
cmc
repnz
mov
push
dec
cmp
pop
adc
fldl
test
repnz
clc
int
movsl
xchg
outsb
and
inc
dec
inc
mov
push
xlat
in
sbb
ljmp
or
pusha
jns
cmpsl
add
lahf
cli
lret
in
adc
adcl
repz
jmp
and
scas
mov
mov
aas
cmp
ret
sub
incl
jno
rorl
add
sbb
push
push
imul
jl
pushl
pop
cli
or
pop
shll
fisttpl
scas
ss
sbb
mov
xchg
sbb
ljmp
decl
push
add
mov
outsb
cli
test
bound
insl
fcompl
ret
call
ljmp
lcall
mov
andb
subb
ljmp
lea
push
jns
mov
dec
cld
fwait
aam
fists
cltd
pop
sub
ljmp
jl
sbb
pop
stc
out
mov
sbb
add
jp
inc
shlb
lds
dec
out
loopne
imul
sub
ljmp
in
dec
je
xor
in
out
lods
pop
jo
lahf
js
pop
mov
bound
loopne
inc
xchg
daa
aaa
mov
addr16
mov
arpl
dec
pushf
mov
jmp
hlt
es
mov
shrb
aaa
or
ss
inc
push
mov
incl
int
push
dec
jne
adc
pop
xor
cmp
push
push
hlt
call
pop
cmp
imul
sbb
push
mov
addr16
sbb
cli
lcall
nop
fmulp
add
push
int3
scas
pop
sbb
push
pop
fidivrl
in
fistps
test
shrb
sbb
movsl
fs
cmp
dec
cwtl
nop
addb
cmp
lea
mov
ja
dec
cwtl
jns
push
mov
push
lds
rcll
cmp
sub
mov
mov
mov
jns
lret
int3
test
sub
movsb
push
cmpsl
ljmp
cmp
xor
fsubs
cmp
xchg
das
push
pop
cmp
aad
ret
jmp
adc
xor
push
test
test
jo
and
ljmp
call
scas
fnsave
xchg
inc
cmp
push
into
adc
adc
ljmp
les
scas
lcall
push
dec
push
fwait
mov
mov
arpl
incl
jg
add
scas
aam
cmc
xor
loopne
jnp
test
movsb
inc
cwtl
mov
int
clc
lock
mov
imul
test
int
lcall
or
aas
cmpsb
inc
idiv
mov
daa
fiadds
test
loope
std
jle
push
adc
stc
mov
insl
jecxz
mov
cmp
sbb
ret
addl
or
pop
mov
gs
mov
sbb
add
scas
pop
or
in
ss
jg
push
inc
addr16
pop
inc
bound
fnstcw
sub
mov
or
push
and
pop
enter
jnp
mov
push
sti
xlat
cmc
jb,pn
loope
ficompl
mov
call
sbb
mov
dec
inc
cs
adc
sbb
call
sub
enter
sub
dec
jp
cld
xchg
outsl
and
push
pusha
ret
mov
or
cmp
cwtl
inc
sub
sarl
push
pop
repnz
call
lret
popf
outsl
ds
pop
out
xor
gs
jg
inc
or
out
js
lods
mov
inc
cmp
and
pop
fbld
ljmp
mulb
imul
ljmp
mov
push
fisttpll
mov
es
lret
push
jne
in
sub
mov
arpl
mov
aas
outsb
add
pushl
or
nop
sbb
into
and
jno
mov
sti
mov
adc
or
mov
filds
mov
sahf
sub
sub
mov
mov
sub
lods
jae
pushl
xchg
pop
xor
jmp
div
pop
push
and
sbb
mov
ljmp
fst
rclb
push
inc
fs
out
add
nop
add
not
add
add
fxch
fwait
dec
sbb
cmp
pop
in
rcr
and
inc
jge
cli
fidivrs
cmp
incl
add
sub
testb
lea
dec
les
in
test
cmp
pop
fisttpll
pop
xor
mov
cmp
jbe
lahf
dec
enter
mov
dec
sub
sar
xchg
add
mov
mov
ljmp
fisubrl
push
fmull
mov
mov
push
sbb
push
cli
push
ss
jle
cmp
ljmp
into
dec
dec
xchg
and
lret
mov
dec
xor
dec
in
pop
cmpsb
xchg
add
pop
sar
ja
xor
rcrb
iret
jnp
lods
iret
mov
pushl
xchg
mov
jmp
mov
gs
sarb
adc
cli
push
add
in
cmc
inc
stc
popa
sti
xor
cmpsb
mov
sub
clc
mov
mov
mov
mov
clc
mov
xchg
test
pop
adc
negb
test
cmp
push
dec
cli
pop
hlt
scas
and
mov
xor
jb
mov
pop
ljmp
enter
mov
test
add
or
or
popa
xchg
out
xchg
shlb
je
stos
mov
nop
mov
inc
add
push
into
dec
fisttps
hlt
mov
push
cmpsb
xchg
std
fcmovnu
sub
dec
incl
int3
pop
jbe
mov
pushf
mov
push
push
sub
sub
mov
mov
xor
lret
cmp
call
or
cmp
daa
cmp
stos
shl
sti
in
jmp
add
pop
lock
adc
fstps
or
insb
mov
sbb
push
fcmovu
ljmp
push
xchg
and
dec
subb
enter
cmc
andb
movsl
cli
mov
in
subb
dec
cmp
sbbl
jmp
jae
paddq
jb
arpl
ljmp
shrb
lret
add
out
xchg
loopne
data16
shll
shr
sbb
je
cmp
pop
push
cmp
call
and
jns
inc
inc
push
movsl
lahf
test
cmp
jo
push
scas
fs
rolb
decl
adc
or
mov
inc
int3
cmp
pushf
jmp
mov
xchg
loop
mov
push
jo
notl
and
jmp
add
fcoml
sub
adc
add
mov
ja
xor
mov
imul
out
jmp
decl
xchg
sbb
cli
aam
pushf
insl
or
sarl
outsl
pop
pusha
stos
sub
pop
or
decl
and
mov
mov
iret
test
lods
cmp
push
push
xchg
test
jge
mov
pop
mov
pop
fwait
and
xor
incl
xchg
and
adc
imul
push
cltd
inc
mov
mov
clc
popf
pop
pop
arpl
adc
imull
js
icebp
out
add
leave
cli
mov
in
adc
add
pop
test
fmul
dec
cwtl
test
adcl
and
fstps
rolb
xchg
pop
adc
imul
xchg
cli
and
stos
sbb
movl
popf
mov
cli
push
hlt
xor
pinsrw
adc
cltd
sbb
loopne
ret
sub
ja
sbb
movsl
inc
dec
pop
push
nop
in
out
stos
lcall
xor
int
lahf
cmp
stos
mov
scas
adc
ljmp
pop
cmp
adcb
mov
add
decl
lds
mov
bound
ja
mov
fucom
sbb
popf
push
into
test
jl
push
push
sahf
movb
pop
mov
fidivs
jmp
jle
adcl
cld
lea
stos
add
mov
push
jle
fisttpll
rcrl
dec
outsl
xchg
mov
cmp
repz
sub
xchg
sar
out
fsubr
les
cwtl
movsl
testl
inc
mov
mov
movl
lea
mov
cmovp
std
push
mov
roll
aaa
cmp
push
fstpl
inc
push
cwtl
out
xor
add
ffreep
xorb
in
rolb
dec
sub
add
cmp
mulb
gs
test
adc
xchg
stos
imul
jae
decl
or
aas
mov
push
out
pop
cs
hlt
mov
jbe
push
dec
iret
adc
cld
call
lret
out
jns
mov
std
pop
inc
jg
sub
fldcw
lods
sbb
cmp
push
sbb
jnp
mov
mov
call
loope
enter
pop
stc
inc
push
or
and
pushf
sahf
lods
dec
push
test
cs
jg
insb
cld
ljmp
push
push
pushf
lea
push
and
xor
mov
sbb
movsl
add
push
or
ljmp
pushf
insb
xchg
xor
xchg
adc
loope
fnstenv
push
mov
int3
sub
insb
cmp
decl
into
call
movsl
add
pop
pop
rcl
outsb
outsl
aad
arpl
lcall
lea
fs
xor
sub
and
das
mov
cmp
clc
jmp
xchg
push
pop
cmc
pop
iret
test
jg
lcall
leave
inc
push
aaa
shl
sub
push
inc
add
inc
sbb
dec
xor
test
loop
pop
push
push
clc
pushl
imul
sub
pushl
std
lock
aaa
inc
gs
out
popa
out
jecxz
and
sbb
jnp
cmc
decl
jno
pop
lahf
inc
out
shll
lret
fimuls
data16
fsubl
mov
pushl
push
xor
xchg
sub
pop
jo
pop
imul
xchg
sbb
dec
mov
cmpsb
jmp
mov
and
aaa
popa
mov
test
xchg
ljmp
clc
ljmp
sub
dec
test
fists
add
dec
push
lahf
sti
add
cwtl
movsb
mov
sbb
ljmp
jno
mov
add
orb
xor
bnd
dec
cs
adc
adc
inc
dec
mov
les
decl
mov
or
push
xchg
mov
cs
adc
cli
pop
hlt
call
sbb
xchg
test
jge
scas
popa
mov
sbb
ret
ljmp
cmp
pop
dec
fwait
jbe
or
jge
sub
mov
rcr
cld
sar
jecxz
pushl
cld
ljmp
jns
cld
insl
js
iret
xchg
jns
sub
test
arpl
push
push
ljmp
ficomps
rcrb
dec
sub
test
mov
gs
gs
xor
pushl
cld
pusha
cli
mov
pop
jne
xlat
test
negl
mov
test
movsl
jmp
dec
ret
fwait
clc
pop
data16
ret
and
popf
fwait
cmp
dec
test
shll
cmp
imul
test
jg
push
push
daa
mov
push
inc
pop
ja
adc
or
stos
lea
mov
lcall
out
fiaddl
rsqrtps
mov
sbb
sbb
cld
scas
cli
movsl
inc
stos
push
add
shll
sub
mov
dec
rcll
jle
dec
xlat
in
push
dec
arpl
and
daa
pop
pop
mov
cld
jnp
ljmp
ja
subb
and
dec
push
adc
jecxz
and
dec
pushf
int
fcmovne
mov
or
not
ret
lock
pushl
addb
cmovg
insl
loopne
dec
push
cltd
in
xor
mov
test
loopne
inc
fs
jmp
cmp
mov
inc
sbb
aam
in
cmp
clc
adc
or
addr16
push
pop
xchg
jp
xchg
scas
or
or
decl
pop
fpatan
loop
sbb
subl
inc
icebp
add
hlt
je
aaa
leave
stos
movsb
out
fcompl
mov
stos
movl
dec
dec
or
imul
fcompp
jae
adc
lods
adc
sub
sub
loop
imul
cld
jg
enter
inc
sbb
addl
ljmp
inc
xchg
aas
xchg
push
mov
add
lcall
pop
gs
in
sahf
pop
pushl
jmp
clc
mov
cmp
and
movsl
jp
faddl
incl
lea
adc
fadds
hlt
scas
jae
sub
and
sbb
dec
int
add
jno
sub
decl
push
adc
ja
and
pop
sbb
inc
add
mov
inc
ret
decl
jp
sub
add
push
jecxz
cld
push
pop
or
es
mov
rcll
pop
loope
xchg
mov
push
inc
xchg
ds
xor
shl
push
call
xchg
mov
xchg
adc
lret
pushf
call
adc
cs
jne
int
mov
loopne
movl
cs
push
cld
push
xor
inc
push
in
decl
sub
sub
scas
dec
and
jge
mov
ljmp
ret
and
mov
sbb
jns
je
lds
xor
sti
rol
xor
mov
call
add
adc
xchg
adc
in
imul
lds
sbb
cld
std
push
mov
mov
sbb
jmp
scas
or
sub
popa
adc
pushl
pop
inc
fistps
outsl
cmc
dec
cmpsl
les
mov
fists
mov
int
int
enter
jb
push
push
mov
stos
xchg
adc
scas
adc
cmp
mov
adc
cmpl
pop
push
bound
or
loop
jge
movsb
push
aas
xchg
sub
add
sbb
cs
ljmp
repz
lret
insb
scas
test
push
das
pop
pusha
push
jle
ljmp
jg
mov
bound
pushf
cltd
ss
push
or
rcrb
mov
out
mov
push
ljmp
incl
lods
outsb
cmp
pusha
jae
ds
cli
jnp
lods
add
mov
in
inc
cli
pop
sbb
ljmp
jl
stos
js
bound
push
fdivl
iret
adc
out
outsb
xchg
sahf
mov
es
addr16
cs
or
push
sbb
or
mov
push
push
mov
int
ss
mov
fisubrs
xchg
ja
mov
scas
leave
jle
leave
test
call
lcall
push
add
mov
lret
push
test
outsb
lods
xor
mov
and
decl
das
fsubs
sbb
adc
add
arpl
push
cld
adc
pushl
jne
dec
push
pop
enter
add
sub
aad
xchg
add
sar
es
lret
add
mov
stos
cltd
dec
adc
pushl
inc
call
iret
mov
mov
and
adc
pusha
repnz
decl
cmc
inc
out
ret
ljmp
jle
sub
sub
xchg
push
out
and
aad
sbbb
mov
int3
cwtl
jb
mov
fcompl
adc
cmp
sub
mov
inc
imul
movlps
decl
pop
jmp
test
push
jp
and
pop
in
sbb
push
pop
dec
iret
das
push
pop
clc
test
cwtl
push
push
push
jmp
inc
sbb
jno
sub
sbb
iret
sub
jb
mov
lcall
hlt
leave
inc
push
pop
dec
inc
or
popa
int
cmpb
sbb
in
popa
xor
lcall
lahf
sbb
int3
imul
out
aas
movsl
mov
mov
pop
cmp
sub
sub
stc
pusha
lcall
mov
shlb
test
and
lods
into
mov
shrb
decl
mov
cmp
or
cwtl
ds
adc
and
sbb
call
vxorps
ss
xorl
vmread
nop
data16
out
test
repz
cmp
inc
ds
ljmp
and
push
decl
cmp
dec
ret
jns
test
adc
dec
addl
lea
shrl
pushl
gs
fdivrp
jecxz
push
xchg
in
shll
hlt
adc
clc
xchg
lahf
negb
call
mov
in
push
sbb
scas
subb
inc
sahf
cmpsl
mov
mov
outsb
mov
jmp
fistpll
andb
lods
xchg
in
mov
push
sbb
lret
push
adc
lcall
insl
push
mov
mov
xchg
pop
faddl
push
lea
cmp
lea
scas
inc
out
dec
jnp
xor
mov
call
in
mov
pop
sub
shl
je
test
cmp
xchg
repz
pushl
std
xchg
and
xchg
xchg
leave
lret
imul
push
mov
xor
incl
jge
in
lods
adc
icebp
jno
mov
mulb
xorl
push
int3
jmp
dec
data16
dec
jl
cmp
pop
jmp
push
sub
pop
adc
movsb
sarl
jg
jno
jmp
inc
pop
js
mov
add
sbb
cmp
sub
decl
and
dec
pop
mov
inc
or
push
je
pop
xchg
loop
push
jl
adc
stos
lcall
lahf
andb
jb
pop
dec
nop
or
out
ljmp
dec
nop
decl
movsb
jg
xor
or
mov
lret
inc
ljmp
out
xor
pop
pop
int3
je
push
push
or
cmp
movsl
push
sbb
enter
out
decl
nop
jo
lods
mov
adc
cwtl
and
xor
not
clc
cmp
lcall
lea
lret
lret
mov
push
jnp
sub
call
jmp
xchg
dec
mov
in
xlat
and
mov
lcall
shl
arpl
faddp
or
cmp
dec
insb
fists
adc
jge
xchg
bound
stos
idiv
mov
hlt
data16
mov
test
pop
add
xor
les
test
or
mov
mov
fistpll
gs
mov
imul
das
bnd
jne
dec
dec
test
std
out
and
enter
call
std
fsubl
aaa
loop
jp
sbb
incb
push
and
cmp
loop
repz
cmpb
sub
inc
std
decl
mov
roll
scas
mov
sbb
test
pop
imul
filds
subl
xlat
mov
test
mov
sbb
xor
xor
push
or
mov
jge
in
or
jg
inc
dec
lahf
jg
push
pop
mov
cmp
xor
cwtl
loope
dec
jmp
push
outsl
jle
lahf
xlat
or
stos
stos
pop
push
rcll
jnp
mov
int
inc
push
and
pop
lock
jo
les
mov
jo
push
cmp
mov
int
movsl
add
jmp
cmc
lahf
rol
je
jg
cmpsb
loopne
stc
cli
xchg
cld
mov
jle
push
rorl
mov
repz
adc
mov
mov
sbb
pushl
mov
cld
cs
pop
or
test
addl
ss
lcall
ds
ss
and
mov
out
scas
mov
shll
mov
out
insb
pop
xor
popf
subb
notb
fldt
push
stos
pop
es
sbb
or
call
or
loope
or
mov
xor
aas
xor
js
ljmp
incl
stos
int
xor
popa
aam
inc
movsl
mov
inc
mov
mov
aam
dec
pop
cld
lcall
into
cmp
xor
stos
outsb
xchg
or
xor
jmp
mov
mov
out
insb
mov
jp
mov
push
adc
inc
pushf
mov
je
jmp
test
xchg
outsl
xchg
mov
sub
in
div
dec
fabs
mov
cmp
dec
ss
mov
lods
xchg
rcll
jg
mov
shlb
out
and
push
push
popf
int
jmp
sbb
int
mov
fs
ljmp
sub
sub
pop
inc
cwtl
cmp
jo
mov
rorl
or
test
popf
fists
icebp
jmp
jae
in
sub
stc
daa
adc
test
adc
dec
roll
fbld
xor
into
cltd
inc
mov
add
cmp
adc
iret
stc
lret
out
aam
decb
pop
jle
pushl
jae
int
ret
mov
push
mov
dec
sub
adc
pushl
nop
or
inc
aad
add
mul
cmpsb
mov
in
dec
or
cld
push
aad
add
std
shl
xchg
movsl
push
pop
lock
sub
out
aam
pop
add
popa
mov
out
aas
mov
mov
sub
or
dec
mov
inc
fildll
nop
inc
xchg
or
xor
call
add
hlt
push
mov
push
jbe
jp
adc
cmp
sbb
xor
dec
aas
je
ret
mov
daa
outsb
imul
mov
pushf
in
mov
dec
test
pushl
fimull
sbb
lods
or
sbb
inc
dec
dec
inc
inc
adc
mov
ljmp
inc
ds
out
cmp
adc
sub
sti
decl
ja
into
loopne
enter
jle
jnp
or
adc
decl
jae
xchg
cld
in
cmpsl
testl
pop
stos
fildll
mov
popa
jnp
xor
fdivr
fcomip
lcall
mov
xchg
push
sbb
repz
pushl
xchg
js
idivb
or
sub
ror
insl
mov
nop
test
xor
jmp
mov
cmp
je
cltd
push
out
cmovno
xchg
xor
fdivrs
sti
lcall
jno
lods
mov
dec
xchg
mov
lods
mov
or
fst
cltd
movsb
mov
test
filds
scas
fisubrl
js
insl
xchg
inc
jnp
mov
push
in
incl
or
lret
cmp
pop
outsb
movsl
cmp
sbb
sbb
pop
adc
pop
push
inc
add
incl
lahf
cmpsl
aam
inc
out
enter
loop
jmp
cmp
push
xchg
mov
pushf
fadd
je
icebp
into
cmp
arpl
mov
decl
inc
sar
insl
mov
into
js
bnd
lahf
bound
push
adc
fstpt
decl
fsubr
lret
sbb
pop
je
into
dec
jnp
and
int
cmp
sub
xor
lock
push
movsb
push
xchg
int3
and
pop
nop
xchg
mov
and
sbb
push
mov
mov
jo
push
pop
lcall
sbb
pusha
testl
xchg
test
jp
int
loope
daa
addr16
sub
fnstcw
pop
cmpsl
xchg
gs
cmp
add
inc
dec
inc
dec
lcall
mov
and
incb
cmp
faddp
mov
adc
lret
cmp
mov
pop
lea
push
loope
ss
repz
adc
inc
pop
fwait
xchg
cmp
mov
movsb
adc
xchg
popa
jl
or
push
push
pop
sub
insb
sbb
mov
mov
xor
icebp
mov
cmc
xor
cmp
dec
ret
sub
out
or
pushl
sahf
cli
out
loopne
sti
inc
push
xor
add
mov
sbb
jbe
imul
jnp
rcl
pusha
rol
pop
movsl
cmp
inc
pop
iret
lcall
pop
xor
and
fbstp
sbb
add
hlt
xor
repnz
movsb
and
ljmp
repnz
xor
lahf
orb
jne
jno
stc
xor
jno
adc
jmp
lcall
or
sbb
mov
lret
push
idivb
mov
jl
cmpsl
xor
incl
or
push
std
in
scas
sahf
outsl
in
mov
hlt
and
cld
xchg
and
sar
aaa
mov
movsb
jae
mov
incl
xchg
jle
rclb
jg
mov
and
andb
add
xor
lcall
jle
cmpsb
testl
repnz
test
cld
scas
jno
inc
jno
fdivl
les
xchg
fbstp
mov
movsb
insl
sarb
xchg
mov
pop
push
sbb
shlb
jl
mov
incl
sub
and
push
push
or
push
mov
sub
add
pop
inc
out
dec
sub
sahf
je
inc
xor
xor
cmpsl
sar
mov
sub
lret
shlb
addl
insb
repz
jg
pushl
scas
sbb
loopne
mov
lods
jno
xchg
lret
cld
jae
mov
idivl
icebp
fcomip
push
mov
int
cmpsb
adc
movsb
jns
ds
lods
sar
fistpll
addb
cwtl
fwait
movsl
dec
mov
push
ja
mov
lret
ret
push
pushf
adc
dec
pushf
push
jns
fs
xchg
std
sub
cmp
fcomps
mov
or
dec
mov
sbb
mov
adc
mov
and
inc
pop
jne
out
in
push
jg
lock
and
jge
dec
mov
scas
xchg
cmpsl
cmpsb
rcll
shl
repnz
mov
mov
sub
lcall
aaa
imul
lock
add
movsb
inc
mov
jecxz
mov
push
int3
pop
insb
jmp
xor
insb
call
add
push
cmc
outsl
punpckhdq
repz
cmpsb
add
add
cmp
sbbl
inc
stc
fsubl
fdivr
lcall
dec
in
mov
xchg
rcr
dec
and
lods
and
bound
xchg
xchg
push
xchg
sar
mov
daa
bswap
ret
mov
pop
test
stos
movb
jg
idivb
sub
jo
mov
icebp
add
mov
out
jg
lods
leave
xor
sub
das
xor
pushl
push
cmp
and
xor
cmpsl
test
mov
cli
test
inc
rolb
adc
clc
sbb
jo
lcall
idiv
lcall
inc
sub
int3
mov
sbb
or
test
pop
cli
sarb
stos
ljmp
icebp
add
rcrl
aam
pop
nop
sbb
adc
mov
inc
or
or
iret
sub
push
and
add
add
or
add
and
cmp
incl
and
or
mov
and
js
push
jg
add
movsb
add
clc
pop
jg
popa
push
jb
inc
add
pop
dec
orb
outsl
add
sub
mov
ret
and
scas
jle
test
jg
pop
iret
mov
add
nopl
push
ret
jns
scas
dec
les
dec
and
mov
lret
jg
push
add
xchg
movsl
push
daa
add
xor
dec
and
cmpsl
push
and
cs
push
movsb
aas
xlat
out
push
movsb
inc
scas
push
and
stos
push
and
push
test
and
xchg
jo
push
xchg
imul
loop
push
inc
pop
pop
add
mov
pop
sbb
mov
mov
sbb
inc
mov
pusha
sbb
mov
sarl
pop
les
push
adc
fs
mov
dec
repz
insb
or
lret
imul
imul
imul
bound
push
fldcw
add
fnstenv
fdivs
pop
stos
pop
movsb
xchg
mov
insl
fistps
ss
add
jo
mov
fdivl
jno
add
outsl
push
shll
fidivrl
iret
outsb
or
out
adc
ja
ret
je
fidivrs
mov
cs
mov
xorb
ljmp
pushl
in
movsb
push
add
mov
sbbl
push
mov
pushw
arpl
push
push
push
add
insb
pop
roll
jne
push
aam
push
ret
gs
or
mov
push
pop
dec
ficompl
pushf
addb
jbe
push
data16
jne
notl
inc
xchg
cs
xlat
cmp
out
shlb
lret
stos
aas
jmp
cmp
add
ja
push
push
xlat
jne
add
pop
jbe
fdivs
push
aad
push
xlat
ja
outsb
fiaddl
mov
or
jns
push
jp
jp
mov
or
push
fidivrl
sarl
ja
pop
mov
les
je
jmp
fisttpll
cs
ljmp
xchg
in
xchg
sub
rolb
cs
xchg
xor
xchg
push
setbe
fstpt
dec
fisttpl
push
sahf
in
jge
lcall
push
cmp
pushf
cmp
iret
push
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
std
scas
fst
lahf
mov
mov
push
cmpb
imulb
cld
out
repz
jmp
lock
hlt
clc
stc
cli
push
cmp
sti
cld
std
incb
jecxz
arpl
fwait
int
or
add
jo
imul
xor
add
pop
add
pop
inc
shrb
add
push
mov
add
cmp
xor
ja
push
add
or
add
add
fldcw
or
or
test
test
nop
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
rcrw
adc
mov
pop
stos
femms
lods
lods
pop
stos
insl
addr16
sbb
scas
add
scas
insl
and
imulb
scas
lods
push
and
adc
sbb
int
nop
aaa
sbb
sbb
out
in
scas
mov
and
or
or
mov
xchg
or
lock
in
mov
mov
and
and
mov
and
inc
jo
sub
pop
sub
mov
gs
and
mov
cmpsb
cld
pop
daa
mov
adc
push
pop
xorl
add
pop
cmp
sub
jbe
pop
aaa
cmpsb
add
mov
pop
mov
mov
xor
pop
or
or
add
divl
pop
insl
pop
pop
xor
pusha
cmpl
das
push
cs
xor
add
xor
das
pop
push
push
xor
fbstp
inc
dec
inc
das
inc
inc
xor
adc
push
xor
mov
pushl
push
push
popa
jbe
cmp
jl
jge
jno
outsl
add
pusha
pop
pushw
dec
dec
incl
add
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
es
pop
jle
ja
jns
dec
push
bound
js
ret
adc
xor
jne
je
imul
addb
into
cwtl
nop
push
rcr
add
scas
dec
sub
aas
outsl
out
sti
mov
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
add
in
xlat
push
ja
jb
cs
xor
mov
fucomi
int
push
push
add
mov
and
push
jge
popf
mov
pop
jo
push
push
or
mov
add
ficompl
enter
xchg
jp
inc
dec
popf
mov
aaa
or
add
xchg
jb
rep
pop
sti
push
bound
mov
mov
inc
add
mov
xor
jnp
and
ds
outsb
add
xchg
xchg
lahf
divb
test
push
dec
push
movsb
jae
pusha
shl
add
jb
shll
outsl
pop
xlat
pushf
push
clc
add
push
pop
add
fwait
imul
cs
in
outsl
fisubs
outsb
mov
dec
push
add
ja
sahf
jbe
pusha
lcall
fistpl
imul
stos
das
shlb
fistl
data16
jp
add
js
mov
into
mov
test
shrl
insb
pop
outsb
push
sub
ds
ror
push
ds
jno
sbb
lock
jge
push
jg
fiadds
adc
out
data16
jle
mov
add
xchg
adc
mov
add
test
and
push
loopne
iret
sahf
mov
cmp
add
xchg
in
push
jle
xchg
or
jecxz
or
push
xor
outsl
in
aad
push
divb
fildl
adc
push
sbb
addb
sbb
pop
sarb
bndstx
test
in
mov
push
insb
addr16
xchg
nop
and
out
xchg
in
xchg
cwtl
add
outsb
lock
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
mov
push
lcall
cmpsb
pop
cmp
mov
aam
dec
clc
add
cmpsb
scas
jo
test
sahf
add
subb
pop
jbe
stos
into
shll
mov
lgs
int
mov
fwait
mov
shll
rcr
rcl
mov
push
aad
jle
data16
add
jo
mov
cs
dec
rorb
add
je
dec
add
add
daa
add
mov
pop
repnz
cld
femms
or
or
or
incl
pop
push
adc
push
add
add
std
inc
insl
ds
add
mov
adc
adc
mov
and
sbb
shrb
mov
push
add
and
mov
jnp
loopne
ds
mov
aas
add
lcall
mov
stos
or
aas
aas
nop
out
jns
cmp
aaa
add
inc
sti
mov
sbb
inc
jbe
adc
mov
incl
jle
cmp
scas
xor
dec
mov
in
mov
adc
fnstenv
decb
test
repz
ds
add
xor
pop
mov
ds
lods
stos
test
cmpsl
ljmp
out
cmpsl
cmpsb
cmpsl
add
test
mov
sahf
shll
daa
sub
sub
sub
sub
outsl
add
ss
and
inc
mov
push
push
add
push
push
imul
push
pop
push
push
push
imul
das
pop
imul
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
jmp
je
xchg
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
lds
loopne
jge
test
add
jo
add
decl
or
push
push
add
cmc
repz
dec
xor
sub
cli
push
aas
add
add
incl
xchg
pop
cmp
test
add
mov
add
outsl
fstpt
add
push
fnstsw
repnz
and
adcl
push
jecxz
pushf
add
mov
push
in
iret
sti
dec
sti
lcall
or
mov
push
pop
mov
jo
dec
lret
js
into
xchg
add
jp
add
mov
mov
test
scas
xchg
js
in
and
out
fnstcw
jmp
push
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
data16
int3
fst
es
push
lret
loopne
sub
jle
std
into
fdivrp
mov
pop
inc
imul
xchg
add
test
fldcw
add
jge
sub
xchg
inc
push
dec
dec
dec
dec
xchg
jmp
decl
or
pop
or
add
push
dec
or
adc
cmp
fsubr
in
outsl
adc
dec
or
add
push
adc
add
repnz
inc
or
pop
pop
cmovg
inc
dec
sti
mov
push
dec
sbb
inc
adc
inc
inc
fscale
adc
sbb
dec
add
dec
adc
inc
ds
cmp
mov
or
cmp
cmp
daa
and
aam
ljmp
dec
and
adc
sub
xor
xor
sub
sub
push
test
xor
add
mov
pop
fldt
add
mov
mov
push
add
outsb
mov
push
ds
adcb
outsl
jg
les
add
sbb
pop
adc
outsl
mov
cmpsl
pop
xchg
pusha
add
into
incl
jo
adc
jmp
push
inc
xlat
sbb
mov
outsb
sysret
pusha
adc
sub
dec
sbb
jg
ds
jmp
dec
sahf
mov
in
lock
add
stos
hlt
xorps
ret
push
jg
loopne
or
aaa
or
sub
outsl
pop
pop
sbb
sbb
pop
lahf
xchg
popa
sub
out
cli
mov
jno
add
adc
or
cmpl
inc
test
mov
xchg
jg
sti
adc
jg
das
sti
mov
jb
adc
jle
push
sbb
addl
jg
add
and
or
mov
inc
inc
and
xchg
cmp
mov
idivb
cld
enter
jg
inc
loopne
add
add
in
and
jg
nop
pop
inc
into
jg
adcl
dec
inc
dec
mov
jg
pop
adc
add
inc
data16
mov
sbb
incl
sub
xchg
mov
decl
add
arpl
add
push
add
fidivrs
jg
add
xor
jg,pt
mov
add
push
jbe
pop
add
mov
fadds
jle
xor
inc
test
sbb
xor
xchg
mov
jmp
adc
repnz
lods
jle
lret
imul
test
add
jle
mov
lcall
imul
stos
dec
jg
pop
add
mov
push
andl
rorb
jg
jg
mov
sub
inc
rorb
inc
outsb
jg
decl
bound
mov
and
incl
mov
movb
pop
mov
dec
jg
jle
aam
jne
fdivrp
cmpsb
in
sub
pop
push
stos
pop
stos
pop
pop
insl
fcmovnu
cmp
pop
daa
aas
aaa
mov
mov
pop
pcmpgtb
lods
jle
add
push
inc
push
mov
mov
lods
adc
adc
jle
push
fucompp
sahf
rorb
bound
add
mov
push
mov
mov
push
arpl
pop
fisubl
ret
pop
push
mov
test
out
mov
sub
dec
decl
decl
out
scas
dec
je
adc
or
jle
mov
push
dec
mov
fnstenv
add
push
jne
cltd
fdivrp
ja
push
jbe
adc
jnp
push
jp
out
insb
fwait
decb
js
dec
jbe
pop
add
popf
jmp
adc
es
mov
push
push
outsb
inc
test
ljmp
test
jp
dec
incl
xor
scas
call
popf
push
push
cs
call
dec
call
sahf
jns
test
fiadds
fldt
mov
push
mov
je
mov
jbe
sahf
inc
out
sbb
cmp
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
or
mov
mov
mov
xchg
xor
xchg
xor
sub
sub
nop
daa
ss
cs
nop
fucom
sub
outsb
or
push
decl
xor
push
jg
pop
pushf
push
xor
fnsave
xor
inc
lcall
push
jbe
int3
or
es
mov
add
adc
test
push
in
sahf
sbb
xchg
movb
xchg
adc
mov
add
add
nop
fsubs
push
testl
subb
je
outsl
add
adc
mov
add
cmp
dec
or
add
push
adc
or
jns
pop
push
orl
lea
dec
sbb
inc
and
cmp
lock
mov
pop
cmp
sti
pop
test
or
mov
shrb
pushl
add
out
pop
cmp
or
jmp
je
or
jnp
adc
push
sbb
xor
adc
push
divl
add
sti
xchg
std
sar
push
sub
jmp
syscall
mov
sub
xchg
insb
push
sbb
pop
xchg
dec
sar
es
lcall
or
mov
sub
daa
cld
pop
das
pop
push
inc
fildl
add
push
adc
out
sub
and
vpcomub
lcall
or
pop
adc
xor
adcl
ds
mov
ljmp
or
inc
incl
sahf
or
lret
sub
jmp
int
add
and
cmpsb
call
incl
inc
mov
ljmp
scas
lcall
decb
mov
sbb
and
push
add
test
inc
outsb
inc
iret
jle
adc
sbb
incl
out
adc
adc
mov
or
orl
inc
pop
iret
sbb
jae
decl
sbb
jae
mov
fdivrp
add
sub
xchg
aaa
inc
sbbb
std
fildl
imul
xor
call
addb
dec
outsb
mov
stc
smsw
dec
push
xor
call
jg
dec
push
cwtl
and
testb
xchg
sub
dec
arpl
xchg
decl
adc
jmp
incl
pop
fwait
cld
pop
fcmovbe
pop
pop
inc
je
divb
mov
test
push
shll
mov
mov
roll
dec
push
dec
cmp
sahf
ret
incl
frstor
test
scas
popf
mov
push
inc
inc
pop
inc
outsb
arpl
pop
mov
sahf
int
sti
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
cmpsb
test
cs
dec
xor
mov
jmp
repz
outsb
xchg
outsb
shrb
es
push
das
xor
jb
imulb
push
iret
xor
xchg
insl
pop
daa
outsl
push
xchg
fs
stos
and
dec
notb
push
ljmp
inc
push
sbb
dec
pop
add
aam
movsl
pop
int
repnz
jmp
popf
cmp
aas
jmp
mov
decb
cwtl
xor
int
push
xchg
push
push
aaa
cltd
movsb
mov
push
lcall
jb
mov
xchg
es
xchg
xchg
sahf
notb
sub
jmp
ljmp
aam
jmp
ds
mov
push
add
fidivl
sar
add
js
std
faddl
jge
push
jnp
mov
fwait
or
jl
or
push
imul
jge
jg
es
jbe
adc
fidivrl
push
dec
push
dec
fbld
push
fnstcw
repnz
jae
pop
fidivrl
push
mov
jnp
xor
add
in
add
int3
outsb
nop
testl
add
sbbb
inc
push
add
push
sbb
push
fnstsw
or
imul
addl
es
addl
orb
out
movsl
adc
in
xchg
push
sbb
out
push
sub
iret
out
mov
cli
incl
mov
jbe
clc
push
idiv
mov
jb
sub
jg
mov
icebp
or
cld
mov
out
ja
jno
sub
jg
mov
icebp
fucomip
or
jg
je
daa
jg
jns
add
mov
ja
loope
xchg
jl
cmp
cld
jp
es
xchg
rcll
aaa
incb
jge
and
or
orb
jg
dec
stos
dec
pop
ja
add
clc
orl
fcoms
aam
idiv
push
incl
push
fsub
pop
inc
cli
adc
push
inc
push
int3
mov
jle
mov
fidivrl
arpl
clc
pop
xchg
and
mov
push
cmp
pop
push
pop
sbb
ljmp
and
dec
ds
lcall
pop
lock
push
jns
shl
sub
mov
jmp
xchg
jmp
mov
push
or
int3
data16
mov
call
cmp
xchg
jmp
mov
lret
jg
out
mov
stos
in
xchg
or
pop
push
push
test
ja
inc
or
daa
xlat
push
cmovno
stos
push
push
icebp
cs
out
push
add
mov
sbb
movb
mov
lret
xor
inc
repz
rol
add
dec
stos
lret
adc
repnz
cmp
push
mov
jae
test
pop
push
sbb
out
into
add
push
sbb
push
or
in
frstor
or
inc
or
or
sub
sbb
push
add
adc
nop
push
adc
and
cmp
push
add
push
sbb
or
add
adc
dec
sbbb
js
pop
jae
mov
pop
push
dec
and
lods
mov
or
xor
mov
and
jbe
or
nop
repz
and
mov
push
ss
das
or
sbb
mov
pusha
inc
push
push
push
imul
push
popa
imul
outsl
dec
insl
sbb
push
cmpsb
cmp
mov
jg
inc
hlt
jb
fisttpll
inc
cwtl
cltd
mov
sbb
and
xchg
rolb
push
add
xlat
fsubl
push
pop
add
fists
ss
rorb
lea
add
inc
in
push
jo
aas
outsl
ret
pusha
sbbb
cmc
inc
push
repz
adc
sub
dec
test
push
dec
in
cltd
in
out
xor
sub
jb
inc
or
ret
sbb
getsec
cmp
addr16
jge
std
outsb
jbe
jp
sub
mov
mov
stos
inc
xor
jo
push
xchg
mov
jne
push
mov
pusha
push
rcrb
push
push
ja
mov
popa
push
outsl
dec
jl
lds
pop
stos
dec
adc
clc
pop
pop
xorl
xchg
das
push
jns
pop
insl
cmp
jge
pop
dec
sarl
mov
outsb
nop
fildll
loopne
gs
cmp
adc
ret
mov
sbb
hlt
inc
dec
into
sbb
enter
mov
outsl
ljmp
outsb
movsb
push
cld
in
dec
mov
rcrb
jo
dec
cwtl
dec
outsb
aaa
lcall
mov
adc
sti
rorl
inc
imul
das
sbb
sbb
icebp
cmp
pop
fdivs
push
sbb
es
inc
xchg
sarb
pop
sbb
js
adc
dec
jae
movb
ret
push
jg
dec
inc
dec
fistl
inc
sbb
test
ret
xlat
arpl
andb
int3
fidivl
xorb
adc
sbb
hlt
mov
out
ret
mov
xor
inc
test
test
pop
push
jecxz
xchg
test
jge
fcoms
lods
mov
sub
clc
xchg
sti
popa
es
push
rorb
inc
inc
push
sbb
test
lcall
jo
je
insl
lds
push
xchg
in
insl
sbb
xchg
mov
sbb
lret
mov
push
inc
jne
sub
pop
push
mov
sbb
cmp
jno
xor
negb
adc
jns
adc
andb
outsl
and
nop
mov
push
or
mov
push
xor
xor
sub
pop
sub
inc
je
pop
xor
shll
dec
adc
loope
subb
and
and
ja
inc
daa
adc
mov
stc
in
ret
and
ja
popf
repz
sti
add
adcl
and
fisubrl
stos
fsts
aad
push
icebp
lea
jge
mov
jbe
mov
jmp
adc
and
adc
insl
xlat
xchg
jge
movsb
sub
je
add
in
call
mov
inc
in
jae
xor
sahf
xor
and
cmp
rolb
jno
pop
loopne
xorb
in
pop
add
fistl
outsb
jae
inc
imul
sub
test
adc
roll
sbb
sti
inc
xchg
imul
push
das
sub
mov
mov
cmp
sub
scas
gs
sbb
roll
xor
add
jecxz
sub
mov
mov
xchg
ja
and
cld
testb
and
jno
lods
test
iret
sub
popa
mov
fadd
int3
adcl
dec
nop
mov
pop
or
sbbb
popa
fnstenv
gs
mov
cmp
pop
pop
jg
and
mov
inc
push
scas
push
pop
imul
addr16
loop
push
mov
cmp
fnstsw
xlat
inc
sbb
pushf
ror
and
inc
and
outsl
mov
inc
sbb
imul
fstps
hlt
movsl
cmp
or
pop
dec
dec
adcb
xlat
in
cmp
movsb
inc
insb
sub
or
mov
add
les
das
inc
inc
xlat
jle
inc
ror
fs
inc
imul
fldenv
push
push
leave
xor
cmp
sbb
scas
xor
in
mov
sahf
daa
push
shll
sbb
bnd
push
outsl
sub
push
xor
mov
popa
xchg
stos
dec
hlt
notb
outsl
xchg
mov
xor
hlt
mov
jne
jns
push
insb
sub
aaa
sti
js
inc
repnz
xchg
dec
mov
data16
insb
push
mov
or
inc
xor
testl
push
push
xchg
and
adc
outsb
inc
mov
sbb
pop
pop
and
roll
ja
sbb
and
aad
add
sbb
xor
sub
sub
in
insl
repz
sar
pop
add
add
sbb
mov
xor
xchg
movsb
dec
adc
shll
push
adc
or
mov
roll
add
es
add
pop
into
cmp
repnz
mov
pop
add
or
fadds
and
mov
inc
lcall
sub
xor
mov
adc
outsb
cmp
cmp
or
insl
mov
lods
or
imul
mov
stc
add
pop
push
test
add
scas
mov
push
inc
enter
les
bound
mov
dec
lock
cmp
jecxz
or
inc
pop
xor
lret
jge
jne
cmp
adc
enter
scas
sbb
inc
lcall
jne
sub
dec
jb
push
outsw
sbb
in
sbb
aas
or
cmp
test
ret
xor
push
dec
lods
or
xchg
ret
push
jbe
xchg
sbb
sub
jle
inc
outsl
fisttpll
xor
mov
cmp
sub
xchg
add
lea
popw
push
sub
xlat
adc
adc
insl
dec
or
mov
inc
fidivl
inc
xorb
and
sbb
insb
mov
insb
mov
cmpsl
inc
ret
and
mov
test
cmpsl
addr16
sbb
adc
mov
insb
lret
push
mov
xchg
cmovns
or
shll
push
or
sub
inc
dec
test
shll
mov
addr16
jo
push
arpl
test
int3
and
pop
push
mov
popl
roll
cmc
inc
cwtl
shrl
sbb
mov
shll
mov
cmp
cmp
jns
push
lea
and
jp
subl
push
out
jmp
mov
outsb
or
scas
pop
push
jo
shrl
pop
pusha
ret
aas
scas
inc
cwtl
mov
sub
pop
mov
lock
mov
inc
add
add
push
and
mov
lds
sahf
pop
pusha
push
mov
lret
push
push
inc
xchg
incl
push
bound
mov
fsubrs
xlat
push
or
cmp
jbe
add
pop
dec
mov
out
inc
scas
mov
dec
dec
ja
imul
shll
add
aaa
mov
out
push
and
or
rolb
inc
push
jecxz
jp
cmp
mov
mov
decl
adc
add
jo
dec
push
fadd
popf
lahf
loopne
or
or
mov
adc
add
jp
daa
jmp
push
adc
xchg
pop
xchg
cmpsb
or
ss
verr
lds
pop
cmp
adcl
fisttpl
int3
jmp
cmpsb
push
pop
scas
and
test
shll
arpl
add
test
adc
jnp
and
add
or
xchg
out
push
cmpsb
mov
bswap
push
inc
ja
adc
inc
cs
test
jo
or
push
pop
push
dec
rcrb
stc
faddl
xchg
push
enter
lods
lock
lcall
into
pop
dec
frstor
int3
ss
xchg
and
mov
inc
and
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
