divl
in
mov
mov
add
push
call
int3
cs
mov
or
lock
call
test
je
push
push
pop
pushf
mov
test
inc
out
pushl
cmp
add
and
jbe
cmp
jae
dec
movzwl
std
fistpll
jl
add
sbb
xor
jmp
and
neg
sbb
and
pop
pop
pop
ret
fwait
popa
outsl
jmp
or
call
push
push
shrl
addr16
or
add
pop
pop
push
push
mov
lock
xor
mov
push
mov
ds
ffree
inc
cld
add
jmp
inc
jnp
testb
push
sahf
push
mov
fsubp
lods
adc
push
xchg
mov
xchg
push
sbb
add
cmp
test
jne
fnstsw
inc
sub
ret
mov
jmp
pushl
ja
inc
ret
lea
or
pop
rolb
lock
dec
test
jg
add
cs
add
pushl
fbstp
mov
add
jnp
icebp
mov
mov
call
incl
push
push
push
or
add
rcl
jge
adc
je
xor
clc
ja
add
lods
andl
sbb
adc
adc
pop
sti
push
jnp
rcrb
adc
mov
mov
push
pop
lock
adc
and
loopne
pop
jae
mov
or
or
pop
cmpsl
loopne
shlb
in
dec
fwait
popa
xor
cmp
lea
push
call
sbb
sbb
sahf
addl
add
pop
in
test
call
and
shll
lock
adc
sub
ds
add
lret
enter
fld
xchg
jae
and
sti
ret
ja
faddl
adcl
push
and
push
add
lahf
push
dec
cmp
and
add
pop
movsl
cltd
and
mov
push
sbb
test
hlt
loope
int3
pusha
push
or
lods
dec
ljmp
aas
pmaxub
push
add
jne
sub
push
icebp
fdivs
mov
ja
add
push
pop
pop
ja
lea
xor
push
mov
cmp
je
outsl
ljmp
or
sbb
push
clc
jge
push
call
mov
push
mov
pop
mov
ret
lds
fnstenv
pop
test
fldt
sub
inc
clc
sub
or
ss
shr
dec
push
sub
pop
cmp
xor
pop
pop
es
cld
mov
pushl
divb
mov
push
mov
sub
inc
push
js
jmp
cmp
ja
lea
aam
pushl
lahf
and
cmc
sbb
jmp
lods
pop
and
into
jg
mov
dec
stos
js
js
pop
clc
jg
mov
movb
pop
sbb
pop
mov
jmp
loopne
sarb
or
jg
cmp
int3
jne
push
mov
cmp
std
ret
je
push
push
push
sbb
clc
pop
push
sti
je
in
inc
add
push
add
inc
add
sbb
or
add
cld
call
dec
push
adc
mov
sbb
push
push
jbe
cwtl
cmp
push
inc
inc
push
jae
mov
js
push
cmp
jo
adc
dec
add
add
add
fiaddl
aaa
daa
fistl
int3
test
clc
add
push
loope
jne
or
outsl
pop
aad
jb
dec
pop
pop
mov
or
loop
pop
push
adc
enter
sar
xlat
jne
push
jno
in
cmp
jge
mov
inc
push
sbb
js
js
pop
adc
sub
mov
inc
lea
push
push
push
movsb
pop
pop
mov
adc
testb
cmp
jle
stc
cmpl
or
in
pop
jmp
jmp
xchg
cmp
jge
rolb
jg
inc
jle
add
cltd
lods
sar
add
icebp
mov
push
aam
ret
mov
cmp
nop
cmp
jl
add
cli
push
jne
sub
jmp
fsub
nop
jl
jbe
inc
add
or
xchg
adc
adc
mov
jo
mov
xchg
pop
dec
or
test
jle
push
mov
setns
adcb
mov
rcrl
jp
cmp
adc
jecxz
adc
push
push
aad
ja
jae
clc
loope
and
sbb
adc
shll
add
and
jecxz
js
mov
pop
rorb
inc
clc
xchg
push
cmp
cltd
mov
xchg
sbb
and
add
out
fisubl
adc
jle
xor
jg
pushf
imul
fmull
je
and
je
out
clts
jae
and
jmp
push
fs
pop
test
aad
xchg
mov
adc
jo
dec
clc
imul
mov
mov
jle
cs
outsb
or
dec
addl
hlt
add
pop
or
pop
or
and
pop
adc
jle
adc
ds
ret
add
jb
pop
or
imul
pop
pop
lock
nop
jmp
add
cmp
je
cmp
add
pop
shlb
cmp
jne
push
push
mov
fadd
pop
jbe
js
jbe
or
adc
or
add
pushf
fisubrl
scas
pop
add
mov
mov
and
and
inc
sub
inc
out
ret
into
aad
aaa
icebp
or
aaa
loopne
and
xchg
mov
in
pop
or
pop
in
cli
push
xor
cmp
loop
add
sub
jne,pt
push
in
mov
aam
push
push
mov
test
sbb
js
push
mov
mov
or
daa
addb
clc
pop
pop
pop
mov
repnz
mov
mov
jne
cmp
jl
add
lock
push
js
int3
cs
push
pop
fmul
sub
sub
add
sbb
or
sbb
mov
sbb
loopne
sahf
iret
fnstsw
mov
frstor
fwait
mov
pop
cmp
stc
pop
clc
jl
ja
lcall
and
mov
mov
inc
orl
cmp
mov
mov
std
stos
or
add
adc
loopne
test
push
xor
inc
in
pushf
or
scas
cmp
sub
mov
imul
mov
xchg
pop
push
insl
xchg
int
fdivp
add
add
sbb
int
int
add
mov
shll
inc
out
sbb
mov
xchg
popf
push
jns
testl
cmpsb
mov
ret
xor
dec
pop
movsl
or
sub
adc
scas
jb
loopne
fnstcw
fnstenv
cld
mov
push
sysret
incl
push
or
ret
je
and
sbb
jne
out
mov
sbb
inc
mov
pop
mov
sub
pop
std
jae
into
fnsave
leave
lea
dec
fmuls
pop
mov
js
and
scas
cmp
lret
xchg
aam
pop
stos
rcr
orl
movsl
mov
push
xchg
push
cmp
adc
in
jle
jge
cs
jae
add
jns
in
sub
cmpl
cwtl
mov
jge
adc
bnd
hlt
sub
cmp
add
shll
cmp
sbb
push
adc
or
scas
hlt
dec
fwait
orb
push
mov
mov
xor
or
dec
popa
mov
daa
jmp
jmp
or
pusha
aaa
ja
xchg
mov
jno
cmp
fistps
or
lcall
sti
stc
aas
push
adc
xor
push
fldl
movl
sub
call
or
cmc
mov
inc
sbb
js
mov
lods
mov
mov
mov
or
dec
mov
cmp
inc
popa
xor
int
in
sbbl
in
push
mov
sub
sti
cmpb
add
adc
xor
push
mov
mov
and
popw
cwtl
in
add
fs
sub
cmp
adc
aam
pop
push
adcl
fnsave
mov
shlb
add
test
pusha
dec
push
mov
pop
cmpsl
mov
mov
mov
xor
negl
push
rorl
ljmp
or
sub
push
js
and
fildl
push
sub
clc
leave
sbb
btr
movsb
js
pushl
fistl
imull
clc
fcomps
sar
ds
roll
lock
loopne
add
jne
push
inc
lea
ljmp
shlb
mov
ss
fisubrl
popa
jns
js
sub
mov
sub
test
pop
pop
add
dec
mov
mov
push
push
jg
or
popa
cltd
cmp
add
add
sbb
ret
and
andl
push
popa
loopne
or
cmp
sbb
hlt
jl
ret
pop
ror
mov
ja
test
fldl
fisubrs
stos
mov
stc
sbb
mov
fs
inc
lods
jnp
scas
and
mov
push
cmp
movsl
sahf
or
xor
inc
add
sub
push
sahf
dec
or
sbb
sbb
orl
jmp
mov
or
xchg
test
jo
or
add
mov
mov
pushf
sub
xor
rcrb
ret
in
scas
adc
or
inc
and
adcb
add
in
jae
cwtl
dec
adc
out
cmp
je
pop
or
xor
aam
jno
rclb
xlat
lea
push
or
mov
xor
add
inc
cmp
lea
pusha
adc
or
push
pop
popa
imul
stos
inc
or
mov
push
push
dec
std
cmpsl
jns
mov
dec
fadds
movsb
mov
or
or
mov
les
dec
sub
jo
rcrb
fildll
fwait
xor
mov
inc
call
xor
shll
lods
sbb
push
imul
in
add
xchg
push
lea
aaa
add
loopne
jae
cmpsb
adc
popf
add
push
icebp
jns
test
in
mov
shll
shr
lock
imul
pushl
in
inc
je
sbb
lock
cmp
pushf
lahf
lock
cmp
jne
ret
adc
inc
mov
ret
push
xchg
cltd
push
mov
cmpsb
ret
xor
aaa
or
mov
fwait
push
insl
imul
clc
fcompl
arpl
or
sbb
mov
push
out
das
xchg
mov
out
insb
fildl
loopne
aam
call
jl
mov
cmpl
mov
push
lods
fwait
je
add
cmp
je
jmp
or
pop
add
add
add
fldt
pop
testb
scas
roll
loope
pop
scas
or
enter
add
shll
jl
mov
test
sub
and
out
and
mov
js
mov
aad
ds
fistpl
fistpl
jae
nop
cmpsb
sti
inc
je
arpl
sbb
leave
and
cmp
xor
pushf
mov
enter
mov
or
jae
cwtl
or
cwtl
pop
dec
notb
int3
mov
lock
push
rcrl
mov
imul
rclb
or
sbbb
pop
cltd
xchg
lret
push
rcl
or
cmp
sbb
push
dec
andb
js
push
mov
mov
sahf
cmpsl
jg
adc
jo
das
mov
sbb
mov
jmp
fcoml
dec
out
mov
dec
inc
jge
out
sti
in
inc
jo
push
jl
adc
cmp
jl
movsb
fdiv
adc
loopne
imul
test
xor
jae
rorb
inc
mov
fcoms
xchg
xchg
ret
int3
and
xchg
push
pushf
sbb
sbb
pushf
in
mov
jae
push
repnz
int3
sbb
int3
out
out
fsubrp
les
int
cltd
xchg
fdivp
mov
sbb
filds
sbb
sub
pop
leave
enter
lods
jmp
rorb
inc
sbb
sbb
push
push
je
fcom
jno
push
dec
jmp
ja
sub
add
add
add
pop
fbld
sbb
push
mov
cmpsb
add
jg
jle
aaa
adc
fsubl
push
jne
or
push
fcoms
fisttps
or
dec
add
adc
cld
negb
push
mov
pushf
sub
push
xchg
and
sbb
sub
lods
or
add
ss
test
fs
and
gs
dec
es
aam
dec
or
xor
addb
and
adc
and
mov
fists
std
sbb
loop
mov
call
rolb
repz
inc
push
mov
mov
cmp
fiadds
xchg
jb
mov
fildl
adcl
lret
test
in
dec
xchg
mov
and
jae
cmp
adc
adc
call
xor
add
and
jge
hlt
mov
sarb
xchg
fimull
pop
jb
mov
jne
nop
sub
mov
shll
xor
adc
mov
rclb
std
adc
pop
rorl
popf
movsb
inc
or
adc
sarb
aad
inc
inc
sbb
das
movsl
dec
aaa
pushw
lock
or
imul
into
push
sbb
inc
push
lods
sbb
jl
sbbb
or
mov
dec
jb
mov
cmp
mov
dec
ja
test
dec
cmp
sbb
push
int3
loop
push
ret
push
mov
test
stc
adc
mov
outsb
inc
jne
aam
into
mov
stc
cmp
push
inc
mov
std
add
adc
inc
or
and
adc
jecxz
stos
icebp
mov
sub
je
nop
cmpsl
mov
pop
imul
or
xchg
sbb
push
cld
rcrb
or
fdiv
fistpl
pusha
xor
jne
pop
daa
dec
push
jp
inc
ds
cmp
ret
sbbb
push
jns
inc
nop
out
mov
popf
jb
jb
outsl
sbb
or
add
ret
inc
rorl
into
inc
frstor
movd
add
add
lea
or
lahf
xor
add
clc
mov
je
or
je
xor
push
push
add
jecxz
subb
ror
icebp
mov
mov
xlat
and
mov
xor
adc
and
xlat
or
add
lret
roll
hlt
mov
in
and
cmp
test
xor
or
xor
and
jne
and
sti
std
sub
pop
hlt
je
push
push
pop
loop
mov
test
mov
push
pop
ljmp
loopne
mov
xor
lock
sbb
add
pop
mov
rcr
mov
stc
add
sahf
cmpsb
sbb
sahf
sub
mov
mov
dec
cmp
add
cld
push
addb
insb
jno
cmp
and
rol
call
ret
or
mov
sbbl
jo
popf
outsb
mov
cmpsl
and
xchg
pushf
std
daa
out
outsb
cmp
add
push
hlt
rolb
mov
sbb
in
daa
dec
cmp
popl
push
test
xor
xor
popf
mov
mov
and
mov
push
ljmp
sub
movsb
shrl
sub
xor
and
sti
jae
out
xor
int3
in
xor
mov
subb
push
test
sub
enter
cwtl
cmp
xor
push
ret
push
hlt
insb
xor
inc
mov
ss
pop
insb
adc
push
cltd
or
rcll
aaa
sub
dec
pusha
cmp
inc
mov
sbb
pop
add
add
jo
cmp
cmp
leave
jo
ffree
rorl
cmp
xchg
xchg
test
jae
or
les
rorb
in
inc
rcrb
cmp
mov
mov
test
mov
xchg
or
movsl
pusha
dec
testl
dec
fcompl
sbb
rorb
mov
sub
jno
cmp
adc
dec
sub
cvttps2pi
negl
enter
inc
loopne
popf
leave
cmp
cmp
sbb
mov
pop
adc
dec
xlat
xchg
jb
xor
stos
gs
and
inc
sbb
mov
outsl
inc
xor
mov
pop
outsl
loopne
mov
aam
cmp
push
add
xchg
and
xor
stc
pop
mov
xor
ficoml
roll
adc
int3
cmp
push
add
mov
pop
adc
cmp
pop
cmp
xor
and
pop
and
test
sub
fadds
xor
jmp
fldcw
mov
hlt
lds
js
decl
jne
gs
cmp
mov
push
bound
mov
mov
mov
inc
or
test
adc
incb
cmp
cltd
mov
xchg
jnp
int3
cmc
pushl
dec
mov
jnp
stos
loop
fnstsw
andl
jge
xchg
adc
in
jge
dec
je
cmc
adcb
pop
jo
out
ja
test
fstl
icebp
ficoms
push
je
push
idivb
loopne
push
jl
sub
lcall
xchg
fisttpl
std
xor
cmpl
lock
sub
cs
sbb
mov
sbb
push
loop
lock
sbb
jmp
cmp
jl
jne
push
mov
mov
test
pusha
sub
das
bnd
jmp
mov
mov
sysret
in
push
out
xchg
icebp
rorb
stos
push
loopne
int3
add
add
outsb
xchg
sbb
jmp
out
jl
mov
inc
push
mov
scas
loope
in
aad
jge
orb
cmove
mov
cs
lret
loopne
jbe
cmovp
mov
in
add
add
mov
test
subl
xor
enter
sbb
mov
cmp
or
fcomip
loopne
mov
jno
jp
bound
je
xchg
inc
out
or
push
and
mov
push
into
add
outsb
mov
adc
pop
out
jne
or
je
jo
hlt
aad
out
jb
or
or
mov
jg
sbb
sar
int3
adc
xor
sub
sarl
ror
shll
push
pop
ret
cmpsl
test
mov
lods
fwait
push
or
aam
jne
popf
jp
jnp
add
inc
shrb
test
or
mov
mov
not
add
push
cs
lahf
je
fnstcw
loopne
shl
add
push
sbb
fsub
push
out
inc
out
add
je
aad
or
arpl
outsb
imul
or
mov
pusha
xchg
inc
or
movsl
loopnew
imul
push
dec
or
xor
lret
cld
jg
push
test
mov
mov
or
les
or
pop
inc
imul
inc
int3
add
mov
or
cwtl
sbb
jge
push
fadd
or
sarb
in
sub
pushf
movzwl
jnp
and
lock
out
mov
ss
jmp
jge
imul
push
scas
in
test
adc
lock
lahf
nop
stos
push
xor
dec
mov
test
push
add
jecxz
das
xor
mov
cltd
jecxz
mov
mov
pcmpeqb
pop
pop
mov
mov
pop
aaa
addb
sti
lock
jle
push
cmp
lock
cmp
fidivs
push
daa
pusha
push
add
test
divb
movsb
sub
pop
or
push
push
inc
push
jbe
cmp
lods
cmp
dec
inc
jno
mov
mov
faddl
pusha
jle
shlb
cmp
push
push
aad
add
add
call
pop
xlat
inc
pusha
fcoms
sub
pop
push
stos
xchg
sbb
lar
xchg
ja
call
pop
lea
ds
and
and
mov
jge
push
push
jne
inc
cwtl
xorl
loop
add
inc
rorl
shl
dec
inc
les
ja
in
dec
movhps
stos
dec
loopne
mov
js
mov
add
loopne
or
sbb
insb
mov
mov
bound
in
add
sub
push
aaa
dec
jp
adc
jl
add
in
inc
out
jne
add
add
or
inc
cmp
in
shlb
ret
and
xchg
add
mov
xlat
loope
add
or
adc
and
inc
mov
jl
fdivrl
xchg
ds
add
adc
dec
out
loopne
pop
cld
loopne
cmpb
es
aam
dec
push
adc
test
fbstp
rcrb
push
loop
or
mov
test
or
pop
adc
mov
loopne
and
mov
inc
aas
and
cld
in
mov
mov
mov
cmp
adc
mov
jp
dec
dec
xchg
sti
scas
lods
and
mov
push
mov
lret
sbb
jno
bound
sbb
iret
add
inc
mov
adc
cmp
inc
dec
test
test
mov
xor
sbb
ret
xadd
push
rorl
rcll
addl
test
iret
addr16
outsb
stos
add
loope
scas
adc
enter
pop
call
push
inc
and
or
jge
icebp
mov
inc
mov
in
or
shll
subb
xchg
sahf
data16
cmp
mull
add
and
add
cmovns
inc
or
loopne
push
mov
sub
repz
lock
and
fmull
push
pop
lock
xor
add
pop
mov
mov
lock
jge
shlb
or
inc
gs
rclb
sbb
push
fcoms
clc
pop
ss
fsubl
in
mov
loopne
data16
inc
clc
fwait
inc
mov
pushl
sub
and
ret
shr
movzbl
push
adc
push
ret
push
push
inc
push
add
mov
mov
sbb
shr
mov
popf
cmp
in
xor
add
and
mov
popf
jo
out
adc
addl
fistpl
mov
push
jne
scas
or
lret
call
popf
movb
mov
jmp
mov
push
movsb
repnz
pop
insb
xor
cwtl
ret
push
shll
shr
dec
leave
inc
push
cmp
aad
mov
lock
sub
popa
dec
rclb
lahf
movb
add
clc
cmp
xchg
test
inc
cld
cld
rorl
jb
xor
cmpsl
mov
jg
add
cmp
jb
mov
pop
xor
out
testb
mov
lcall
lea
clc
push
cmpsb
pop
aad
fs
add
popf
js
pop
sbb
add
in
jle
push
mov
add
pop
cld
sub
mov
pop
mov
add
in
cmp
jg
lret
icebp
xor
addl
or
pop
xor
pop
sbb
hlt
shr
sub
fwait
pusha
mov
sub
add
imul
sti
push
push
add
push
jne
and
adc
data16
mov
pop
jmp
loope
sbb
subb
test
add
mov
loopne
add
rolb
ret
pop
inc
add
test
xorb
ss
pusha
sbb
pushw
add
mov
icebp
jns
and
dec
hlt
jg
aas
xchg
fs
push
gs
sub
faddl
enter
push
leave
push
ret
ficomps
or
xor
push
dec
cmp
js
mov
and
or
or
adc
inc
ret
mov
xchg
or
loop
jno
push
pop
int3
andl
inc
andl
cmp
ja
jl
mov
call
jmp
or
cli
push
or
adc
xchg
lock
add
jne
in
adc
or
cmp
xsha256
cmpsb
push
push
or
adc
push
push
xchg
cmp
fwait
jae
cmpl
ja
add
lret
push
lcall
mov
or
gs
hlt
iret
je
lea
adc
outsb
cmpsl
jno
dec
fcoms
aaa
les
sbb
inc
addb
addr16
inc
adc
subb
sbb
mov
sbb
je
test
mov
test
enter
jl
add
js
or
int3
cld
cmp
ja
fmuls
xchg
shrl
cs
insl
lock
mov
push
fists
mov
pop
je
rep
xor
jp
mov
pop
or
mov
mov
mov
xchg
mov
or
xchg
jmp
inc
mov
sub
mov
fidivrl
jg
testl
dec
in
adc
jo
jle
nop
aas
dec
mov
add
mov
aas
jo
je
push
and
xchg
jp
nop
jb
mov
fs
call
sub
or
idivb
sub
add
push
xchg
ja
mov
sub
clc
jne
cmp
je
pushl
movb
push
sti
jnp
mov
push
push
and
mov
add
or
mov
lods
jecxz
or
idivl
mov
pop
aas
cltd
pop
aad
stos
in
xor
inc
pop
xorl
out
ret
push
pop
or
pop
mov
call
adc
pop
mov
add
jns
test
pop
xorb
cmp
adc
cltd
mov
ds
lock
push
adc
sahf
or
cmpsl
mov
test
std
loopne
push
je
lea
cmp
inc
lock
push
stos
dec
add
add
inc
out
dec
aas
and
inc
sahf
or
push
cli
or
repz
ret
pop
add
and
and
shrl
jb
add
loope
mov
in
pusha
fidivs
test
shrl
pop
cmp
cmc
push
pop
jmp
arpl
sarb
push
fsubrs
pusha
sti
pop
ljmp
adc
cs
jg
jecxz
andl
push
insb
dec
dec
xor
clc
add
mov
rorl
push
aad
sbb
mov
push
das
push
loope
or
jle
sub
jae
add
or
lods
mov
call
or
adcl
cmp
popa
or
clc
sub
inc
into
adcb
push
lock
sub
fldt
inc
inc
xor
cltd
and
add
mov
mov
clc
lods
inc
push
popa
xchg
pop
push
cli
js
xchg
jmp
push
adc
cmpsb
arpl
inc
inc
ja
add
xchg
fsubrs
add
test
dec
es
cmp
add
call
aad
fptan
or
and
dec
add
push
push
xlat
add
test
hlt
push
enter
stc
int3
jns
mov
js
sarb
add
mov
adc
mov
push
fadds
into
test
cmp
cld
or
pop
xor
rcrl
dec
cmpsb
test
jmp
sbb
cmp
mov
cltd
add
nop
mov
add
outsl
and
mov
in
test
push
mov
lahf
and
or
cmp
scas
xor
ror
js
dec
dec
push
adc
pop
dec
push
sub
adc
je
sub
inc
aam
mov
mov
xor
adc
negl
dec
push
jae
push
mov
sub
push
sbb
push
cmp
add
sbb
loopne
addl
pop
xor
mov
clc
loope
lret
sub
incb
inc
nop
pop
or
lods
ja
stos
lock
cmc
jo
cmp
pop
call
adc
pusha
leave
sbb
clc
sub
sub
jns
mov
dec
and
cmp
in
in
adc
or
inc
inc
int3
push
lea
data16
xor
add
or
and
pop
out
xor
adc
or
lods
mov
pop
mov
and
mov
int3
cmp
or
sbb
das
pusha
dec
mov
xor
addl
and
fsubr
lea
addr16
gs
push
lods
nop
adc
sbb
ret
in
and
and
pop
inc
sbb
insb
sbb
sbb
sbb
insl
add
test
loop
jmp
xchg
pop
femms
or
or
outsb
or
sahf
sahf
xchg
push
les
and
stos
mov
mov
movups
jg
mov
cmp
popf
cmpl
jbe
data16
in
mov
inc
mov
cltd
pop
idiv
bound
enter
adc
push
adc
sarb
roll
jle
push
jno
push
rclb
jmp
push
mov
mov
mul
sbb
dec
xchg
fildll
pusha
xor
xchg
mov
jno
push
push
test
dec
data16
cmp
scas
je
pop
mov
add
push
into
fisubrs
pop
dec
je
mov
je
sub
test
out
jge
lcall
insb
dec
sahf
adc
mov
add
inc
mov
pop
faddl
jmp
pushf
jmp
pop
jne
cmpsb
sbb
test
rclb
sar
incl
push
mov
xor
stos
sbb
and
or
adc
inc
loopne
lret
sbb
out
fildll
pop
push
mov
mov
fidivl
idivl
dec
add
and
xor
lcall
test
divl
xchg
andb
pushl
js
mov
adc
mov
mov
and
sub
jmp
mov
shlb
jp
cmp
sbb
sbb
jae
mov
jmp
inc
sbb
leave
adc
cli
mov
sbb
jge
lahf
add
sahf
lock
jmp
sti
movsl
inc
jae
je
xchg
push
and
jmp
and
rcrb
cmp
jmp
xchg
sbb
dec
scas
bound
push
dec
fimuls
inc
push
push
push
orb
cmp
sar
dec
add
repz
lods
mov
pusha
push
insl
sti
lahf
scas
inc
sbb
mov
mov
add
pushw
and
out
adc
inc
pusha
lea
push
jno
inc
adc
sub
mov
or
int
sahf
addl
pusha
push
push
push
or
xchg
xchg
and
and
push
dec
push
jl
mov
or
lea
push
lea
push
push
push
push
add
push
lea
cwtl
jge
mov
xchg
fidivs
mov
inc
cmpsb
add
dec
mov
inc
test
xor
add
xchg
sub
ja
inc
fildl
adc
xor
lock
pop
push
jne
daa
xchg
jb
cmpsl
push
pop
lea
je
fcmovbe
cmpb
and
sbb
push
aam
mov
pop
push
push
test
out
add
loopne
fnstcw
dec
inc
aaa
push
xor
mov
mov
cmp
fldt
cmp
adc
mov
mov
aas
jbe
fs
scas
in
add
scas
call
cmpl
add
adc
pop
sahf
pusha
and
dec
hlt
rorb
pop
inc
sub
insl
pop
inc
insl
add
aas
repz
add
dec
jne
push
add
inc
dec
or
test
es
test
jp
and
lods
loopne
lcall
in
pop
dec
repz
popf
movsb
out
in
push
dec
pop
in
ja
ret
adc
in
mov
xchg
sbb
push
sub
je
xor
xchg
ret
add
cmp
mov
nop
mov
dec
rol
mov
jnp
jne
cmp
js
push
push
cmp
mov
shrb
pushl
in
shl
sbb
add
sub
je
mov
sbb
add
nop
mov
xchg
rcrl
and
ret
sbb
rclb
pop
adc
popa
aam
push
aam
push
sbb
js
in
jl
sub
lret
ror
push
int
sub
add
pusha
or
inc
shlb
push
fstpt
mov
cmp
popa
sub
fdivr
pop
or
movsb
ret
ret
rorb
aaa
sbb
mov
int3
cmp
jne
push
sub
xchg
mov
pop
mov
push
pusha
mov
js
and
shlb
je
push
rclb
rolb
mov
es
jo
and
sti
aaa
or
mov
jne
call
push
or
popf
sbb
mov
adc
push
les
shrb
clc
lcall
push
mov
shrl
lock
pshufw
je
sbb
orps
cmp
loop
jge
ficomps
or
cmp
in
dec
jmp
sub
adc
insb
fcomi
fwait
in
jmp
mov
add
mov
inc
adc
sbb
dec
rorl
mov
ja
mov
cmc
lock
cs
imul
jbe
lea
rep
out
in
jp
pop
adc
arpl
ja
rcrb
fadds
adc
in
lods
or
arpl
xor
and
mov
jae
jo
inc
pop
jno
sub
nop
lock
pop
or
in
sbb
dec
dec
fstpt
xor
cmp
or
iret
dec
imul
stos
add
sbb
push
push
mov
neg
sbb
and
push
or
test
sahf
sub
mov
jbe
xchg
xchg
or
aad
adc
pusha
xor
mov
mov
adc
mov
push
dec
mov
jmp
sar
sbb
or
push
or
jno
and
add
dec
lea
pop
icebp
and
pop
push
ss
pop
nopl
loopne
idivl
push
pop
or
push
dec
lock
jge
add
pushl
test
cltd
dec
in
push
sbb
push
adc
sbb
xorl
adc
jmp
mov
cwtl
sub
fmuls
dec
jne
roll
add
mov
ret
inc
cmp
scas
mov
adc
pop
cmpsb
ret
fldcw
icebp
sbb
or
xchg
lcall
push
js
ja
xchg
add
test
shll
sbb
mov
in
push
inc
addr16
popa
shrb
sub
cmp
es
xor
cld
incl
jne
movb
jmp
cmp
jne
sbb
fldz
xor
scas
les
test
cwtl
mov
std
les
xchg
jnp
pop
ret
or
in
dec
aas
mov
pop
stos
pusha
xor
jle
add
mov
sbbb
adcb
in
mov
jne
or
fimull
popf
dec
daa
mov
movsb
xor
dec
sub
push
mov
lods
dec
cmp
es
push
mov
leave
push
jns
fistpl
divb
pop
cmp
iret
push
adc
xorl
mov
mov
xchg
push
mov
std
ljmp
nop
add
fistps
cltd
scas
adc
int3
aam
and
mov
sub
daa
cmp
push
test
sub
adc
ds
or
push
add
dec
xchg
mov
mov
xor
sub
push
lret
jl
xchg
repnz
push
jbe
xor
mov
adc
and
pop
adc
jge
mov
adc
rcrb
test
fbstp
jmp
inc
jl
xchg
dec
jae
inc
inc
fldl
fsubl
loop
add
pushf
frstor
in
push
push
push
add
movsl
mov
cmp
lock
stos
mov
xchg
mov
jle
dec
sbb
and
add
add
jno
dec
shll
sbb
leave
jae
mov
popa
in
ds
and
ja
sti
insb
fsubrs
pop
sbb
adc
test
xor
adc
add
push
je
or
call
add
repz
or
pop
hlt
test
jmp
mov
test
cld
sbb
add
repz
sub
sbb
lea
jbe
loopne
cmpb
xor
je
ficomps
enter
jp
mov
xor
jmp
inc
std
aad
mov
fadds
push
jbe
cmp
out
sahf
adc
sbb
and
repz
stos
addr16
push
xchg
dec
mov
insb
stos
push
call
pusha
mov
add
cmp
xor
push
in
xlat
lret
adc
pop
push
popa
push
sbb
int3
jo
sub
push
or
pop
cmp
fbld
je
fcmovb
adcl
jno
loopne
fnstsw
push
xchg
xor
sbb
adc
jnp
testb
sarb
inc
xor
orl
dec
jl
mov
cltd
mov
mov
cmp
out
popf
addr16
mov
dec
adc
sbb
or
fistpll
lret
adc
jge
adc
pop
push
idivl
mov
idiv
push
mov
push
push
mov
mov
into
idiv
data16
cli
call
jp
test
jg
adc
push
inc
mov
or
cmp
es
pusha
scas
mov
mov
or
add
add
add
sti
mov
stos
insl
in
or
out
fcomp
pop
pusha
push
pop
xor
incl
popa
fmuls
sub
mov
je
push
sbb
mov
xor
jp
xor
pop
xchg
ret
inc
mov
pusha
js
imull
jg
fs
lret
jl
movl
adc
test
insl
mov
ss
cld
jnp
iret
push
fistpl
pushf
movb
sbb
hlt
fnstcw
dec
lea
mov
jge
adc
sub
cmp
or
out
jg
nop
or
out
insb
mov
outsb
mov
mov
test
jns
faddl
out
js
xor
xor
mov
fdivrp
mov
xchg
out
ds
sub
mov
mov
mov
pop
cmpsb
filds
inc
les
cmp
pop
jl
jmp
into
push
cmp
or
clc
fiaddl
movsl
shl
hlt
jmp
push
xchg
cli
out
add
pop
mov
ja
aaa
cmpsl
pop
jne
pop
pop
movb
push
loope
dec
addr16
outsb
mov
xor
sbbb
clc
mov
hlt
or
rcrb
pop
jne
adc
clc
lea
fsubs
add
pop
push
jbe
pusha
push
gs
fcomps
imul
fs
and
cmp
sbb
test
aad
dec
push
dec
lret
pop
pop
into
rolb
adc
adcb
arpl
mov
int
sub
inc
aam
aam
mov
add
daa
cmp
sbb
and
cltd
add
inc
sub
repnz
enter
mov
imul
xor
push
gs
loope
pop
xor
fmul
addr16
sarl
xor
jns
fbstp
ret
inc
jne
sti
mov
add
aas
shrb
xchg
jp
xlat
std
push
leave
test
inc
add
add
idivl
pushf
mov
mov
icebp
lea
push
mov
push
rorb
mov
cmp
test
fimull
inc
mov
rcll
dec
mov
add
inc
mov
or
aas
jecxz
mov
andl
pop
adc
sub
sub
jle
sbb
jnp
add
xor
inc
into
test
mov
push
and
inc
insb
lret
scas
sbb
leave
add
push
sbb
lahf
stos
test
mov
add
shlb
popa
pop
add
mov
cmp
sbb
add
stc
pusha
dec
sbb
push
push
outsl
jnp
test
mov
test
cli
cwtl
push
nop
lret
and
cmp
roll
aaa
sbb
cmpb
inc
and
mov
xor
xor
and
xor
xchg
insb
xchg
cmp
arpl
mov
icebp
inc
inc
jae
outsl
aaa
push
add
push
mov
mov
setb
cmp
mov
sub
cmp
mov
add
xor
sub
andl
push
lea
push
stos
mov
lods
aaa
orb
jle
loopne
icebp
sub
or
jmp
insl
lret
aam
fcomps
je
dec
mov
fdiv
daa
add
push
mov
dec
hlt
mov
call
test
outsl
xor
cmc
jb
iret
cld
push
add
shrl
inc
insb
xlat
shrb
xlat
das
push
mov
jp
pop
mov
adc
jl
je
push
loop
pop
pusha
jle
cmpsl
idiv
test
inc
pop
jmp
jo,pt
adc
jg
push
xchg
sahf
or
adc
sub
pusha
sbb
mov
add
scas
jmp
push
add
xor
adc
sub
mov
xlat
sti
in
aas
jmp
test
stos
cwtl
insb
add
pop
adc
loop
icebp
jl
arpl
push
icebp
mov
add
push
fs
mov
loopne
sub
add
push
dec
cmp
xor
inc
inc
bound
add
cmp
cmp
outsl
add
jmp
inc
pop
xchg
mov
out
int3
xor
adc
add
test
and
mov
das
repz
shl
arpl
cmpsb
mov
call
je
in
in
movl
adc
gs
test
add
addl
sub
les
lret
pop
jo
addr16
repnz
or
test
lea
mov
mov
or
rorl
int3
add
or
in
jnp
repnz
cwtl
push
in
xor
xor
out
enter
xchg
xor
add
xchg
xor
add
add
std
push
rorl
jg,pt
push
js
push
sbb
into
mov
dec
mov
les
jmp
push
sbb
cwtl
pop
sbb
insl
push
pop
mov
dec
sub
ljmp
pop
cmp
pop
mov
test
rcrb
dec
dec
insl
and
push
insl
cli
stos
dec
adc
cmp
rcr
lods
adc
mov
push
jb
fisttps
leave
adc
push
push
int3
mov
xor
pop
loop
adc
mov
out
mov
jbe
adc
inc
push
xchg
nop
jnp
imul
pop
cmp
adc
adc
and
xor
adc
pop
je
mov
and
cltd
cmp
pushf
adc
outsl
leave
adc
sti
pop
pop
or
andl
dec
cmp
mov
sbb
clc
pop
push
xor
ret
je
popa
sbb
loop
neg
jno
cmp
push
dec
mov
jmp
dec
mov
sub
hlt
jge
js
push
mov
lcall
and
add
pop
inc
pusha
inc
xor
jmp
cmpsl
xchg
sub
insb
and
sub
leave
imul
into
jge
mov
push
mov
cmp
sbbb
mov
push
pusha
jle
call
pushl
inc
mov
cld
jg
jns
inc
mov
fsubr
inc
lcall
sbb
jg
aaa
inc
popa
out
call
add
xchg
sbb
inc
out
sub
add
or
inc
pusha
in
mov
clc
mov
jo
sub
inc
sete
das
insl
add
cli
into
and
inc
xchg
rolb
insl
push
push
clc
ss
insb
or
loop
rorl
sti
sbb
fdecstp
pop
movsb
jno
dec
out
mov
mov
add
imul
mov
mov
or
bnd
dec
jle
and
add
es
and
sub
cmp
jo,pt
push
pusha
push
dec
js
ret
push
aam
lods
pop
test
lock
adc
shlb
sbb
mov
ret
orb
push
cmp
sub
lock
test
js
ret
xor
dec
add
sbb
fwait
call
jnp
mov
jne
fldcw
mov
scas
push
iret
ss
xchg
mov
test
mov
daa
push
mov
push
or
out
dec
imul
arpl
div
add
test
aaa
xchg
adc
mov
jne
nop
pushw
pusha
adc
push
cmp
adc
dec
clc
rcrb
pop
cmpsb
add
repnz
outsb
sbb
lcall
fldt
dec
sub
addb
scas
sahf
and
sahf
loopne
sub
jmp
jle
xchg
push
lock
int
xor
mov
adc
xchg
mov
push
shlb
mov
lods
add
dec
push
fdivs
insb
repz
or
adc
jecxz
daa
push
sarl
adc
clc
dec
mov
mov
pop
ret
bound
xchg
adc
nop
pop
popa
movsl
mov
in
bound
outsb
rorl
sub
jns
mov
sub
add
adc
mov
mov
in
mov
and
ret
xchg
push
or
inc
call
insb
and
mov
or
ja
lahf
mov
shll
mov
movl
rorb
orb
jno
movl
push
sbb
in
pop
jbe
dec
sub
jl
sub
sbb
shrl
andl
cmovbe
xor
mov
call
push
cmp
jecxz
mov
cmp
xchg
push
or
ljmp
aaa
sub
or
imul
mov
mov
jo
repz
es
cmc
popf
inc
add
jmp
mov
lock
or
jo
or
lods
ljmp
or
aas
test
je
mov
data16
and
popf
shr
mov
sbb
divb
push
nop
sbb
test
orl
inc
cmp
push
cmp
dec
lret
in
sbb
pop
int3
neg
testl
aaa
andl
or
jno
cmp
add
arpl
jmp
outsb
data16
mov
jge
rcrl
lret
mov
push
je
mov
add
and
cmp
add
and
loopne
dec
mov
and
pop
in
test
sbb
mov
enter
andb
sbbb
adc
in
out
xchg
mov
int
repz
mov
mov
add
mov
fnstenv
out
push
inc
add
cli
push
enter
sbb
mov
test
sbb
and
mov
mov
sub
and
sub
push
cmpsb
or
push
mov
aam
fmull
jo
push
cmp
jmp
add
dec
sbb
fstps
roll
adc
mov
lahf
xchg
mov
fcoms
lcall
add
sbb
sub
pop
inc
pop
or
jo
mov
jo
xchg
adc
out
xchg
sbb
mov
test
xor
cld
or
test
sbb
test
aaa
sarb
test
and
fsubrl
add
pop
out
or
adc
fnstsw
pop
popf
nop
clc
repnz
adc
push
xchg
data16
push
mov
mov
push
setne
subb
add
insb
sbb
xor
mov
jecxz
sbb
decb
mov
cwtl
cmpsl
pop
lea
movsl
push
or
add
adc
mov
or
fsubrl
cltd
mov
pushl
scas
daa
je
addl
pop
push
fs
pop
and
and
lea
test
mov
js
mov
mov
mov
pop
and
fwait
cmpsl
jmp
daa
cmp
call
sub
call
cmpb
push
fnsave
arpl
pop
or
scas
jmp
pushf
push
or
inc
ficoms
mov
shl
fucomip
pushf
jne
cmp
xchg
fstl
pop
mov
or
jmp
jl
cmpsl
pop
or
push
in
loopne
add
mov
rorb
inc
lock
shlb
int3
jecxz
cmc
aad
dec
mov
or
mov
dec
mov
lcall
or
fidivrs
jne
xchg
arpl
pushf
adc
adc
xor
pushf
push
mov
rcrl
pusha
nop
pop
and
or
pop
or
out
add
xor
and
sbb
push
or
pop
rorb
movsb
sbb
cli
js
inc
pop
add
adc
push
sbb
lds
sbb
loopne
push
stos
inc
imul
mov
repz
fimuls
out
mov
sub
rclb
cwtl
xchg
inc
push
jle
xor
add
je
mov
jecxz
stos
es
jge
adc
mov
call
mov
pop
pop
mov
pop
pop
mov
mov
pushf
jbe
arpl
mov
loope
mov
test
mov
insb
stos
imulb
sarl
in
pop
xchg
rorl
pop
test
or
aam
div
pop
clc
pop
or
push
mov
pop
mov
cs
test
test
scas
push
arpl
pop
data16
push
or
and
jae
cmp
mov
mov
cmp
ret
andb
test
dec
insb
fidivrl
mov
mov
cmp
in
add
xchg
iret
push
adc
push
pushf
test
xor
pop
cmp
adc
xchg
stos
fdivr
outsb
ljmp
mov
loop
pop
sbb
pop
dec
pushf
mov
push
add
lea
fsubr
sub
cmp
lea
push
scas
dec
out
ljmp
arpl
clc
inc
lcall
test
cmp
stos
rorl
push
xorb
ret
mov
mov
in
test
sub
cli
aam
mov
xchg
xor
fsubrp
roll
ret
adc
rcll
push
adc
or
dec
clc
test
adc
xchg
outsl
je
cld
rolb
dec
outsl
ljmp
or
jg
push
ret
mov
add
inc
out
dec
sbb
ss
lahf
mov
mov
xor
sbb
add
pusha
mov
popa
inc
xchg
js
fsubr
les
mov
js
push
add
pop
inc
popf
lret
inc
cmp
ror
out
lret
xchg
mov
mov
dec
push
movsb
push
or
loopne
add
mov
xchg
scas
sub
fwait
sahf
nop
loop
andl
dec
sub
adc
or
scas
setns
repnz
ljmp
mov
mov
frstor
pop
fidivs
add
test
push
and
add
jns
aaa
mov
mov
add
xchg
pushf
ss
pushf
inc
xor
lret
mov
dec
or
add
jecxz
ljmp
aad
push
xchg
cmp
loope
push
mov
test
jae
dec
je
aam
mov
xchg
mov
sbb
dec
jne
je
xchg
es
push
iret
mov
adc
pop
cltd
mov
jecxz
test
pusha
adc
sbbl
out
add
loopne
and
movsl
xchg
rorl
inc
loopne
push
or
dec
inc
mov
pop
fsubrs
fcoml
mov
or
push
stos
sbb
mov
cmp
add
push
fdivs
pop
loope
repnz
sbb
push
test
pop
pop
add
adc
sbb
js
orl
daa
test
sbb
int
dec
ljmp
je
int
push
mov
jo
shr
mov
push
inc
leave
xorb
pop
test
cmp
or
sub
push
and
rolb
stos
lret
sub
popa
xchg
mov
xchg
sbb
jnp
roll
or
sbb
andl
xlat
sahf
push
lock
or
rorb
sub
incl
movsb
cmpsl
mov
jne
push
pop
cmp
mov
push
shlb
mov
sub
andb
sbb
hlt
es
adc
pushf
mov
out
rorb
jns
cs
cmp
pop
inc
lea
mov
das
clc
fists
and
call
jge
and
mov
add
cmp
mov
mov
sub
and
stos
mov
lods
adc
sub
sub
xor
ljmp
mov
and
mov
add
test
mov
hlt
mov
shlb
lret
lods
aas
hlt
in
xor
xchg
mov
dec
in
sub
aas
aam
pop
mov
sbb
and
xor
xlat
jge,pn
icebp
or
sub
pop
and
jns
into
int3
xor
dec
mov
dec
or
push
clc
cmc
dec
sahf
mov
jns
xchg
mov
sbb
pop
insl
fcompl
jns
rolb
mov
es
xchg
mov
mov
popf
call
mov
rorb
inc
inc
pop
jmp
sbb
inc
and
jmp
jns
int3
test
dec
pop
loope
mov
pop
pop
dec
loope
inc
sub
jp
push
add
pop
clc
or
pop
sbb
mov
fisttps
je
lock
lods
enter
mov
std
lock
cmp
out
or
and
je
dec
dec
dec
in
push
sbb
mov
adc
popa
dec
popa
mov
xor
and
fsubr
wbinvd
and
jne
add
jecxz
push
or
jle
jl
sbb
aas
dec
xlat
daa
shrb
rclb
inc
push
push
mov
mov
aaa
addl
inc
lcall
imul
push
pusha
inc
pop
push
sub
adc
pop
mov
sub
add
jae
repnz
fisttpl
or
lock
bswap
dec
xorl
inc
or
adc
mov
ret
enter
cli
fildl
xchg
out
cmpl
test
ljmp
cmpsb
or
lret
adc
unpcklps
xchg
int3
push
lea
jp
bound
pop
and
jne
int3
xor
push
pop
inc
js
sub
add
dec
xchg
ret
lods
inc
pusha
or
imul
pcmpgtw
mov
hlt
fwait
mov
lret
leave
cmpsb
inc
rorb
dec
es
daa
jmp
push
sarl
xchg
mov
hlt
inc
push
inc
sbb
dec
pop
in
push
sbb
or
popf
das
mov
adc
das
jp
pop
jae
js
push
cmp
int3
xchg
pusha
sti
jg
mov
adc
add
mov
xor
xchg
fistpl
aaa
add
mov
mov
iret
les
xorl
loopne
lret
push
mov
jp
push
ret
sub
std
mov
cmpb
pop
push
mov
mov
loopne
adc
pusha
mov
test
push
xchg
adcl
sti
or
push
push
mov
mov
jne
xor
movsl
enter
push
sbb
adc
adc
xor
in
pushf
jne
jbe
fsubs
imul
insb
cmpb
addr16
mov
jmp
in
loope
mov
int
pop
mov
int3
loope
clc
je
sbb
int
sub
adc
and
lcall
mov
sub
lea
push
lea
push
fisubl
mov
push
into
push
pop
bnd
mov
jp
mov
add
xchg
cmc
push
popa
jge
idiv
lret
cmp
jl
mov
mov
int3
xor
sarl
pop
sub
cmp
jle
xchg
fildl
jne
cmp
jne
lea
mov
or
or
pop
cld
pushf
insl
sub
add
jns
jg
add
push
insb
shll
mov
push
outsb
or
movsb
bound
mov
mov
push
add
mov
or
sbb
ficomps
ss
iret
xor
scas
ja
xchg
fadds
test
sub
mov
push
cmc
stos
add
pusha
push
add
and
sbb
sahf
inc
add
mov
lcall
mov
roll
shl
jbe
add
cmp
clc
add
mov
add
and
jne
popa
pop
mov
adc
or
or
mov
inc
mov
inc
xorl
mov
lahf
jbe
test
or
or
xchg
and
inc
test
mov
jns
pusha
jl
iret
addr16
sub
sbbb
hlt
aaa
or
pop
sbb
enter
push
push
in
mov
clc
xor
cwtl
call
sbb
xchg
fst
jae
jp
jmp
imul
movsbl
shrl
cld
leave
add
inc
mov
adc
int
add
jbe
cmp
mov
adc
adc
push
mov
xor
mov
cmp
je
inc
xchg
cmp
jne
call
xchg
pop
push
or
push
pop
cmp
jmp
loope
in
divb
push
rclb
loopne
adc
inc
or
adc
lds
rcl
lods
dec
loopne
sti
cltd
faddp
jmp
jl
ret
push
push
dec
mov
cli
jmp
mov
shlb
roll
inc
cmp
mov
jo
loopne
cmp
or
ret
out
mov
cmpl
rcrl
jb
or
pop
addb
or
outsb
sbb
fnstcw
dec
or
jle
jmp
andl
mov
inc
lret
lea
inc
pop
dec
stos
xchg
mov
adc
dec
or
push
lea
push
mov
cmpsl
cmc
cmp
je
ret
je
xchg
pusha
pop
push
jg
mov
ret
sub
insb
xor
xchg
jmp
lods
dec
sbb
push
mov
sub
sub
outsb
jge
loope
jne
inc
push
sbb
push
sub
jg
test
arpl
mov
mov
imul
rcrb
sbb
mov
pusha
sub
xchg
jno
add
jns
mov
mov
daa
nop
cmp
add
sub
jp
fcmovb
add
bound
out
pusha
loopne
add
ljmp
push
push
mov
neg
push
insb
add
scas
dec
popl
testl
out
jne
push
jge
adc
je
inc
jmp
fdivrl
mov
testb
inc
inc
int
or
loope
mov
sbb
dec
jns
dec
xor
and
sbb
mov
ret
fdivrs
dec
push
xor
push
jbe
shlb
ss
rorl
xchg
xor
and
pop
sub
and
fstpt
inc
pop
outsb
pop
sbbb
popa
fiadds
mov
dec
jnp
jno
fisubl
dec
or
xchg
addb
sub
or
pop
es
cwtl
inc
sti
call
mov
jo
add
xchg
fsubs
dec
lock
add
das
and
inc
add
fiadds
cmc
cmpsb
mov
push
or
mov
sub
in
incb
xor
push
mov
test
lods
cmp
pop
add
fs
sahf
cmp
in
sub
mov
fisubrs
sbb
add
jmp
pop
dec
js
jl
adcl
push
das
scas
addl
add
arpl
sbb
push
add
add
push
adc
pop
ret
lret
jg
pop
ss
dec
cmp
pop
push
or
xchg
pop
sub
sbb
cmp
nop
inc
insb
push
adc
dec
lahf
or
push
and
sub
into
movsb
jmp
popa
cmp
push
add
and
inc
or
stos
lahf
push
adc
aad
loop
les
test
or
jnp
push
call
push
shrb
aaa
dec
add
or
dec
adc
jecxz
sub
icebp
mov
pop
or
push
mov
fs
cmp
inc
decb
int3
js
cmc
mov
addb
pop
rcrl
fcoml
mov
test
aaa
xchg
push
xlat
cld
into
xchg
shlb
faddl
add
jle
leave
jbe
inc
adcl
sub
shrd
dec
jnp
pop
or
mov
lods
subl
add
xor
je
or
and
jl
test
sub
out
add
mov
mov
xchg
js
sub
movsb
sbb
and
xchg
xchg
imul
shrb
ljmp
adc
jl
fcmove
dec
push
adc
cmp
xchg
pop
cmp
inc
mov
lock
cmp
push
mov
pop
push
dec
loopne
push
mov
hlt
xchg
jo
adc
dec
sbbl
pop
or
in
lea
pushf
adc
in
hlt
xor
xchg
nop
xchg
and
or
push
ficoml
pop
aaa
pop
and
insb
xor
lret
stos
inc
adc
add
or
sub
idivb
cld
push
mov
push
pop
pop
mov
mov
pushf
fidivrl
cmp
adc
mov
jecxz
mov
jne
scas
in
push
cld
push
cmp
adc
mov
add
stc
sub
add
cmp
cmp
cli
pop
sbb
mov
jae
xchg
xor
mov
repnz
sbb
insl
sub
sub
inc
mov
pop
stos
push
test
js
push
pop
loopne
lcall
pusha
jo
mov
repnz
sbb
xor
setl
lea
push
cs
jl
andb
sbb
icebp
or
int
xchg
jl
inc
add
mov
rolb
enter
dec
and
inc
or
pop
cwtl
pop
push
mov
ds
insb
out
mov
and
test
pop
and
dec
inc
sub
js
xor
mov
lock
mov
test
enter
clc
ret
sbb
push
mov
sbb
add
push
xchg
adc
sbb
push
sub
xchg
xorl
mov
or
rcrl
in
pusha
outsb
sbb
xchg
cmp
movsl
repz
sub
pop
or
fdivr
loop
xchg
jmp
mov
rolb
ret
sbb
scas
fldt
imul
loopne
xchg
cmpsl
call
nop
lret
and
and
data16
adc
sub
adc
shll
and
mov
and
adc
shr
add
mov
jns
lret
push
pushf
sub
sahf
loope
adc
cmp
mov
add
sbb
add
dec
or
jo
adc
or
pop
inc
dec
mov
das
loopne
dec
in
adc
mov
push
or
mov
addb
xchg
jbe
push
mov
sbb
test
pop
push
daa
frstor
icebp
test
sub
movsl
inc
lock
adc
or
mov
inc
adcb
jmp
popa
jg
adc
push
jmp
jb
or
mov
mov
adc
call
sbb
lods
int3
dec
inc
lods
push
push
sub
push
pop
fnstenv
mov
and
daa
jge
dec
sbb
in
lret
xchg
lea
shl
or
stc
sub
mov
xchg
pop
mov
inc
sub
push
add
movsb
mov
enter
add
push
jns
cs
dec
iret
pop
add
xlat
lock
mov
movsb
rcll
orl
mov
push
or
in
or
test
in
xor
sbb
ss
cmc
stos
mov
jecxz
mov
ret
sbb
add
dec
xchg
les
cmp
jnp
lea
pop
aas
cmpb
mov
xor
cli
popa
jne
add
lcall
add
dec
adc
and
popf
out
scas
xor
add
divb
loopne
xchg
push
xchg
mov
adc
cmp
loopne
mov
lcall
inc
ret
lock
cmp
or
xlat
loopne
or
sbb
mov
call
fwait
dec
or
insl
test
adc
rcr
jg
push
sahf
lock
push
shlb
outsb
std
jle
push
push
negl
mov
outsb
adc
dec
clc
sub
int3
add
mov
ja
push
xchg
test
cmp
jae
jl
or
cmp
stos
mov
aam
mov
lcall
ret
pop
cwtl
loopne
xchg
fcoml
lds
lock
fdivl
mov
mov
add
mov
in
jmp
cltd
aas
or
adc
rcll
out
sub
popf
sbbb
add
andb
mov
lahf
cmpsb
dec
pop
push
dec
mov
cmp
sbb
mov
or
sbbl
popa
not
nop
repnz
jbe
hlt
and
mov
ffreep
push
fldl
dec
in
or
sbb
dec
inc
cmp
movsl
mov
fwait
push
lahf
push
pop
push
stos
xor
sti
push
push
pop
dec
mov
sub
mov
dec
shlb
push
xor
add
push
ret
bound
and
or
stc
dec
mov
mov
int
sbb
nop
push
test
stc
pop
ret
or
lock
fbld
jbe
or
in
xlat
push
or
rclb
mov
stc
or
test
mov
push
or
or
pop
adc
mov
hlt
jecxz
leave
xor
jne
add
daa
lods
adc
in
pop
sti
lods
shl
and
cmp
in
cmpb
test
pop
mov
idivl
or
jnp
orl
push
push
shlb
clc
pop
insb
and
shrb
and
jg
imul
add
cmp
jne
jp
ret
popa
add
cmp
push
xor
xor
out
xor
dec
cld
je
mov
test
push
sub
cmp
lea
mov
aad
mov
mov
cltd
cmp
out
int
shll
adc
push
inc
xor
pop
or
xchg
mov
sub
std
ret
les
cmp
jo
loopne
adc
aas
stos
rorl
fdivs
inc
xor
xor
jle
inc
add
cmp
jae
cmp
adc
jo
cs
aam
out
ror
push
jmp
in
xchg
in
rorb
hlt
mov
jmp
or
and
cmc
mov
xchg
push
pushf
out
add
mov
mov
test
jmp
fsubl
and
hlt
cmc
ss
shrl
cld
push
mov
insb
push
push
push
fwait
jo,pn
movsl
push
das
add
addb
xchg
iret
cmp
ret
push
andl
mov
cmp
mov
jecxz
and
mov
cvttps2pi
adc
mov
in
shr
push
dec
ja
inc
ret
adc
add
test
mov
ret
iret
in
incl
xchg
lock
mov
xor
pushl
mov
aad
adc
enter
adc
adc
repz
cmpsl
scas
rorb
adc
test
cmp
mov
cmpsl
dec
or
imul
mov
mov
xor
xchg
xor
mov
cmp
rcrl
add
mov
lods
jae
push
inc
xor
les
mov
lods
xor
and
mov
sbb
ffreep
inc
or
movsb
jecxz
sbbl
or
push
cmp
mov
call
add
push
cmp
xor
and
mov
ret
in
cmpsb
add
out
and
shrb
add
pop
leave
inc
add
push
in
and
xor
dec
push
jmp
and
addl
clc
mov
and
dec
in
jno
stos
in
call
andl
and
pop
xorl
mov
in
xchg
test
jl
or
loop
or
push
stc
fisubrl
sarb
jmp
out
push
icebp
mov
sbb
mov
andl
ficompl
mov
cli
or
jnp
loop
or
mov
in
test
sub
sub
test
push
sbb
jne
pop
xlat
mov
add
jl
mov
xchg
and
mov
insl
inc
jl
test
mov
test
dec
cmp
cmpsb
lret
inc
movsl
lods
in
pop
mov
iret
daa
jmp
inc
loopne
dec
dec
stos
orl
faddl
jae
xor
int
mov
in
add
cmpb
xlat
mov
jmp
mov
xlat
cmpl
xchg
test
fdivr
shll
xor
jmp
fxch
adc
loopne
xor
test
jmp
sub
movsl
pushf
rcrb
add
out
rcr
rolb
dec
shrl
mov
cmp
rol
xlat
shrl
sub
jbe
mov
lea
movl
push
xor
inc
adc
cwtl
dec
xor
adc
xor
push
or
dec
xchg
shll
mov
insl
fwait
cmp
fstl
mov
imul
jecxz
adc
in
adc
ret
xorl
mov
andl
push
aam
aam
or
or
pop
or
inc
adc
xchg
adc
inc
loop
push
dec
xor
dec
push
shlb
clc
je
dec
jne
inc
movsl
adc
xor
adc
jnp
shr
and
fistpl
adc
fwait
add
rcll
push
push
dec
in
bswap
pop
xorl
repz
sbb
mov
mov
sbb
mov
xchg
rcrl
jge
std
andl
pop
je
jp
test
inc
xor
pop
inc
xchg
daa
xor
and
jne
and
jp
cli
jb
lea
or
in
add
push
push
jne
xor
inc
jmp
shrd
subl
loop
daa
xchg
ss
cs
cs
hlt
je
mov
pusha
push
inc
mov
add
mov
jge
movzbl
push
or
rol
push
ret
lea
lods
repnz
jo
adc
and
add
or
pop
ffree
fists
push
cmp
je
sub
outsb
je
fisubs
inc
push
nop
lock
mov
nop
jge
cmpsl
mov
sub
xor
mov
adc
mov
stc
cmp
lock
jbe
mov
sbb
cmp
fmuls
insb
mov
pop
lods
mov
jmp
cmp
je
aaa
mov
inc
add
adc
jo
and
addr16
add
adc
add
xchg
adc
pop
repnz
pop
add
add
out
dec
addb
jb
add
or
lret
xor
popa
add
xchg
pop
cmp
loopne
or
push
xorb
lcall
mov
push
xlat
mov
add
xor
adc
pop
in
jge
pusha
es
loop
fnsave
push
pop
les
push
movsl
mov
jo
adc
inc
inc
mov
mov
push
push
pop
inc
dec
call
add
sub
into
push
and
xchg
xchg
xchg
pop
xchg
push
sahf
in
daa
or
add
cmp
imul
xchg
dec
pop
or
mov
or
push
or
fmulp
sub
ja
cmpsb
sbb
add
sub
and
or
pop
out
mov
dec
add
push
mov
pop
pop
leave
jecxz
cmpsl
scas
iret
xchg
sbb
movsl
imul
movsb
add
add
and
xchg
dec
mov
xchg
stos
cltd
daa
test
int3
push
add
push
push
ja
jge
push
data16
dec
test
and
cmp
fnstcw
lods
jns
test
sbb
dec
sbb
dec
xor
inc
add
rcll
and
mov
cmpsl
inc
cmp
shll
add
mov
sti
jno
dec
jmp
jp
int3
adc
xor
aad
fsubr
mov
or
dec
inc
aad
adc
mov
mov
ret
rolb
mov
sbb
pop
testb
icebp
sub
push
cmp
pop
test
xor
inc
pop
jno
pop
cmpsl
lods
or
loopne
loopne,pt
in
add
ljmp
loopne
je
divb
or
dec
mov
xchg
push
in
call
je
jno
mov
out
xchg
dec
dec
dec
jge
addb
inc
jae
push
dec
mov
mov
sub
popf
test
scas
xor
dec
pop
adc
cltd
loope
cli
add
or
sub
pop
and
fistl
jae
loope
cmpsl
loop
or
mov
nop
movsb
sub
js
cltd
dec
not
rorb
inc
or
daa
mov
lea
iret
in
xor
or
push
pushf
sbb
sub
add
lods
mov
leave
or
imul
shlb
xchg
or
lahf
ds
ret
inc
push
andb
jno
orb
sbb
xor
rcrb
test
jns
lods
call
jne
aaa
ror
lret
pop
mov
addr16
sbb
popa
test
or
xor
xor
insb
cmpsl
sbb
testl
sbb
es
push
push
mov
adc
test
mov
ret
inc
enter
mov
clts
lods
cmp
dec
shlb
sbb
dec
inc
or
fimull
jg
sbb
or
loopne
adc
test
add
into
fisubrs
mov
lea
add
arpl
pop
lea
mov
dec
inc
sbb
ret
pop
sbb
shl
jno
lahf
dec
pop
xor
mov
mov
push
enter
movsb
push
cmpsb
xchg
out
xlat
in
shlb
gs
cmp
mov
call
daa
pop
add
cs
movsl
adcl
adc
cwtl
out
adc
and
cmp
lret
sub
subb
mov
in
movsl
lock
cld
in
and
popa
or
cmp
mov
or
aas
dec
pushf
mov
ds
jg
insl
loop
es
outsl
inc
mov
rep
ss
mov
and
add
jb
rclb
jo
dec
stos
adcb
push
rorb
sbb
pusha
hlt
in
rolb
mov
push
outsl
out
push
scas
rolb
lea
mov
in
adc
mov
movb
fwait
push
sub
mov
aaa
sub
push
sbb
subl
sbb
and
sbb
cmp
xchg
and
and
cmp
mov
fbstp
sub
int
sbb
pop
pop
test
jl
pop
mov
js
sbb
xchg
inc
cmp
cmp
sbb
rclb
adc
dec
cmp
adc
ds
out
xchg
add
jb
xorb
loopne
pusha
loopne
loopne
mov
pop
orl
lret
aaa
dec
or
mov
sbb
cmp
adc
and
or
or
inc
sub
decl
cmp
and
add
test
pop
add
stos
adc
std
dec
daa
or
sbb
inc
mov
jb
xchg
add
push
sbb
insb
push
mov
sbb
and
cmp
sahf
adcl
sub
and
push
imul
inc
dec
test
lods
and
int3
and
sarl
and
and
xchg
fldl
pop
and
inc
and
in
xlat
pop
jnp
or
pop
mov
mov
push
aam
es
popf
mov
sub
xor
adc
scas
sti
xor
sub
sub
and
mov
or
imul
cmp
dec
out
push
rolb
stc
mov
dec
cs
add
xor
push
out
mov
les
rcll
imul
dec
lcall
ja
adc
je
nop
sub
lea
jb
xor
sub
lahf
or
pop
jl
aaa
popf
pop
mov
orb
sti
repz
add
fdivs
movsb
dec
cmp
adc
ss
testl
sub
mov
mov
sub
cmp
push
jno
sbb
mov
out
cmp
push
adc
pushf
xchg
or
cmp
inc
push
dec
sarl
test
cmp
dec
pop
arpl
cmp
inc
mov
arpl
or
sbbl
negl
push
inc
adc
fists
in
mov
push
or
mov
pusha
or
and
xor
out
sub
lea
adc
sbb
cmp
add
xor
les
enter
push
or
jb
dec
aaa
leave
add
cs
sub
cs
or
popf
daa
rclb
out
movsl
into
sbb
orl
or
out
push
pop
lds
or
test
pop
push
andl
out
mov
repnz
out
ss
ret
lea
dec
push
cs
jg
fxch
mov
mov
loope
and
push
hlt
fistps
push
pop
mov
enter
imul
je
scas
push
mov
dec
jbe
adc
test
enter
xor
mov
imul
dec
push
rol
js
cmp
add
in
jge
lods
add
mov
add
or
rcll
ret
dec
and
les
sbb
fscale
dec
push
aam
and
xor
lea
push
inc
add
cmpl
sbb
xchg
add
mov
jp
sbb
xchg
outsb
cs
cmc
jge
sbb
popf
dec
push
inc
cmp
inc
mov
cld
cld
or
test
jmp
mov
sbb
ret
pop
ret
and
loopne
sub
nop
rclb
fadds
push
xchg
rcll
mov
inc
sbb
imul
xor
mov
aas
sbb
or
push
adc
cmc
aaa
xor
inc
or
lret
pop
push
pop
jmp
fstl
adc
push
cmp
dec
xor
mov
out
add
or
dec
imul
push
loopne
stc
and
jae
push
loopne
adc
dec
push
mov
outsb
imul
push
sub
shl
xor
hlt
ret
cmp
mov
cmpsl
cmp
push
xor
out
push
test
and
iret
xor
add
sub
push
sbb
clc
push
xor
pop
sbb
repnz
orb
jns
and
fidivs
xchg
ret
in
sub
fdivs
cmp
lea
scas
cmp
mov
and
int
xor
push
and
or
jmp
xchg
cmp
and
stos
fs
jmp
cmp
or
xchg
and
and
leave
or
push
xchg
dec
xchg
fadds
jne
test
loop
ss
es
call
je
jo
filds
pop
popf
push
jp
and
sub
jno
cmc
daa
sub
inc
fwait
dec
ret
ljmp
mov
pop
push
sub
xor
jb
scas
nop
sub
jae
or
dec
fdivl
cs
mov
mov
aaa
push
pop
stos
fildl
out
mov
push
sbb
imul
push
pop
mov
das
sbbl
xor
xor
mov
outsb
dec
mov
push
and
jle
inc
mov
jo
jns
in
jae
push
push
jp
mov
add
xor
or
or
cmp
add
test
push
dec
dec
fwait
nop
or
and
add
xor
rclb
add
dec
xor
int
adc
cmp
inc
dec
add
sbb
dec
push
ds
mov
cmp
sbb
and
push
stos
mov
or
add
cmp
movl
inc
pop
repz
or
mov
sbb
pushf
inc
or
dec
in
in
mov
cmc
lock
rcrl
xor
lock
xchg
push
cmp
notl
rcr
push
insb
sbb
insl
xchg
mov
add
inc
or
mov
fdivrl
adc
in
push
or
xor
xor
mov
cli
cmp
jne
movsl
pop
xchg
xchg
je
in
popf
lods
xor
je
mov
rcrl
dec
xchg
icebp
push
add
rorb
fwait
fs
pop
xor
pushf
mov
xchg
testl
js
mov
cmpb
stos
adc
or
int3
inc
mov
lods
push
inc
push
int3
out
and
ss
push
sbb
fdivrl
cwtl
or
test
dec
pusha
add
dec
cmp
xchg
insl
cmp
xlat
adc
lock
sub
pusha
addl
mov
bound
pushf
xchg
pop
in
push
xor
cltd
in
cmp
mov
jge
push
cmpsb
xchg
mov
mov
ret
dec
ja
sbb
sarb
mov
adc
inc
test
enter
xor
adc
jnp
loop
xor
dec
inc
xchg
repnz
mov
inc
popf
cmc
fstpt
pop
push
into
jmp
mov
jl
gs
sbb
mov
or
rolb
test
adc
insl
and
mov
xlat
mull
xor
movsb
cs
loopne
adc
sbb
mov
shr
push
lcall
sbb
xor
rcrb
cmp
and
test
sub
cmpb
fcomps
les
mov
inc
cmpb
xor
rcrb
pop
repz
movsb
cmc
orb
rorb
je
loope
jb
jo
icebp
mov
xchg
adc
pop
ja
mov
and
mov
jne
inc
jne
shrl
sub
push
movsb
pop
xor
loope
cmpl
jmp
je
push
addr16
in
xor
es
add
aaa
xchg
and
jg
push
mov
in
pushf
mov
push
andl
ja
jo
movl
xor
fmul
fcoml
inc
push
or
jecxz
add
jmp
cwtl
mov
jne
movsl
dec
xor
test
in
mov
lods
es
cwtl
cmp
cmp
sbb
mov
xchg
lea
shr
rorb
arpl
lock
filds
add
cmp
sub
adc
or
mov
cs
loopne
and
and
mov
add
mov
inc
pop
shl
mov
mov
ret
mov
clc
dec
les
popf
jl
fcoms
add
mov
dec
js
push
mov
cmp
add
mov
add
inc
push
inc
jmp
popl
sub
sub
bound
xor
gs
int
xchg
add
sbb
dec
movl
pop
xchg
adc
adcb
jb
jecxz
loop
xor
mov
add
inc
sub
or
inc
sahf
inc
orl
in
out
sbb
movsb
cmp
cwtl
adc
dec
gs
or
nop
mov
cmp
push
fadds
jno
or
xor
or
dec
push
push
dec
test
inc
add
sbb
and
push
add
add
dec
sbb
fstp
cmp
js
dec
mov
addb
mov
xor
push
jne
push
popf
xchg
sbb
in
dec
hlt
inc
cld
bound
push
cmp
jle
add
jecxz
es
inc
add
outsb
mov
pop
dec
shlb
mov
ret
mov
add
mov
andb
push
dec
into
jmp
pop
inc
adc
nop
loopne
adc
mov
sarl
enter
push
mov
adc
pushf
push
cmp
or
mov
negl
inc
xlat
and
dec
adc
int
mov
push
sub
mov
sub
pop
or
arpl
and
pop
and
inc
fsubr
inc
add
out
pusha
cmp
adc
sbb
mov
es
mov
inc
cmp
push
sub
mov
arpl
add
outsb
jecxz
or
movl
push
in
sub
push
and
in
dec
and
mov
mov
pop
enter
or
mov
or
xchg
test
dec
pop
mov
clc
cmpsl
rcrl
mov
int
adc
test
push
mov
push
xchg
push
bound
xor
sbb
sbb
add
scas
loop
xchg
jo
push
or
xlat
push
sti
movsl
mov
dec
sbb
adc
loopne
xor
cmpsb
rcrb
adc
mov
cmp
adc
adc
pusha
divl
roll
sbb
adc
popa
and
and
mov
or
jg
sbb
call
push
jnp
std
lock
in
orl
pop
enter
xor
ja
add
mov
cwtl
pop
adc
push
out
ret
cmp
call
add
roll
and
shrl
pop
sbb
in
jmp
and
jmp
lea
pusha
adc
dec
ret
in
jo
les
xor
pop
mov
lods
xchg
adc
sub
repnz
enter
pushf
bound
shl
or
add
adcb
xor
nop
push
xchg
mov
notb
jl
pop
xchg
pop
pop
sahf
inc
sub
mov
in
jge
and
xor
inc
xchg
adcl
leave
rclb
pop
pop
cmp
sarl
push
pop
dec
outsl
add
popa
jne
lds
sbbl
or
push
daa
cmc
sbb
sub
xor
sbb
mov
sub
incl
pop
jo
sub
pop
ret
sbbb
jmp
sbbb
or
push
xor
mov
cmp
jno
dec
adc
inc
rorb
adc
aam
mov
push
stos
fmuls
add
out
add
dec
and
scas
movsb
and
sub
pop
scas
and
xor
dec
cmp
xor
sub
adc
lods
and
pop
pushf
lret
js
push
xor
imul
sarb
pop
pop
adc
fstps
sub
adc
les
mov
push
pop
and
sbb
std
jbe
mov
in
hlt
cmp
jge
repz
into
sbb
or
mov
push
xor
push
cld
aam
dec
cmpsl
rorl
and
jno
enter
push
test
in
adc
mov
fld
lea
push
mov
or
fwait
rorb
mov
jecxz
ja
js
jp
in
cmp
jb
cmpb
mov
inc
xor
and
jno
adc
mov
incl
data16
mov
push
xchg
jno
sbb
mov
jbe
andl
cld
mov
imul
jmp
push
lods
lea
jmp
xor
pop
pop
ds
pop
mov
pop
pop
mov
jmp
pop
aaa
addr16
icebp
mov
sub
xor
add
test
sub
mov
jbe
cmp
adc
ss
fisttps
dec
add
mov
xor
hlt
pop
popa
hlt
shll
mov
imul
jae
add
cmp
mov
inc
icebp
push
add
or
or
dec
add
pop
jmp
add
pop
in
pop
adc
adcl
jo
fwait
sub
mov
imul
and
ss
dec
pusha
sti
sub
cs
push
xchg
or
push
movl
cwtl
or
push
xchg
and
subl
mov
push
and
or
repnz
int3
scas
je
sbb
jo
pop
xlat
add
test
orb
cmc
jbe
leave
add
push
fstps
jbe
scas
push
adc
aaa
fsts
push
fwait
sub
test
call
rcrl
cmp
insb
mov
dec
js
jo
mov
cmp
and
push
lahf
fcompl
inc
je
add
dec
xor
int
insl
add
dec
add
sub
int
inc
mov
fidivl
dec
ret
sbb
je
push
pusha
repz
push
push
mov
push
out
daa
ljmp
and
sbb
movsb
pop
insl
icebp
cmp
fdivl
out
adc
mov
scas
xor
and
add
adc
shll
add
xor
in
mov
and
push
push
xor
mov
push
add
fcoms
sub
mov
fidivrs
sub
push
add
int3
loopne
or
mov
push
pop
sub
add
or
pushl
cmp
pushl
das
add
or
cli
adc
sub
call
pop
or
jbe
ficomps
daa
pop
and
movsl
mov
test
ljmp
repnz
sbb
and
push
pusha
sbb
movlhps
iret
push
std
jo
push
sub
pop
sub
popf
sub
outsb
scas
popa
or
xchg
movl
jb
sub
jae
enter
mov
aaa
and
mov
adc
push
aad
lret
push
push
cmc
sub
inc
dec
movsl
push
xchg
xchg
sub
and
in
jp
pop
int
push
adc
sub
adc
jl
adc
xorl
push
xor
jle
and
addl
ret
pop
sarb
sbb
pop
mov
aad
push
push
jbe
mov
cmp
pop
mov
roll
add
incl
add
shll
sbb
cmpl
sbb
aas
cmpsb
push
jne
cmp
je
cmp
je
cmp
je
cmp
je
mov
loopne
push
inc
inc
push
inc
add
push
in
iret
and
jne
push
aas
push
jle
mov
mov
add
pusha
inc
popf
sbb
std
lock
mov
cmpb
dec
xchg
popf
fcoml
nop
inc
mov
fnstsw
sarb
fimuls
sbb
adc
xchg
jmp
sub
mov
sbb
jmp
push
nop
sbb
pop
adc
xor
cltd
cli
aas
lods
sbb
lea
add
push
sbb
inc
add
in
nop
lea
imul
pushf
inc
in
imul
cmp
and
inc
cld
inc
adc
and
sub
aad
cmp
sbb
ficompl
leave
sub
leave
sub
je
jnp
shr
rol
sub
and
daa
add
adc
xchg
mov
adc
aaa
and
or
sti
and
mov
in
push
clc
push
fwait
inc
mov
jno
sbb
loopne
xlat
movsb
push
jl
out
dec
mov
lea
pop
faddl
pop
adc
add
aaa
push
push
pushf
pop
cmp
fs
rcrb
mov
ljmp
and
and
fwait
add
gs
sub
leave
xchg
pop
repnz
arpl
cmp
popa
cmp
mov
mov
adc
dec
add
sbb
rorb
sub
aam
pop
mov
xchg
imul
in
mov
adc
fidivrs
in
inc
outsl
shll
jne
nop
xchg
fsubs
cmp
inc
push
lea
test
jne
cmp
xlat
call
loope
xor
xor
dec
xor
in
movsb
mov
push
add
call
or
pop
cmp
mov
arpl
sub
lods
xchg
and
adc
jbe
mov
jg
dec
imul
in
push
decb
scas
cmp
je
ret
add
enter
cli
push
in
repnz
cmp
in
in
in
je
loop
sub
cmp
mov
mov
push
add
movl
lret
and
test
gs
and
mov
les
xchg
pop
xor
and
push
mov
ret
sub
add
popf
jno
cmpsl
jge
sub
or
or
call
adc
int3
js
and
xor
enter
enter
daa
flds
ljmp
or
mov
rcl
sub
inc
sub
pop
or
pop
into
push
jnp
inc
dec
inc
push
inc
rcl
mov
add
popf
ret
xor
shrb
jmp
in
icebp
cmp
lock
jo
jo
push
or
mov
jmp
pop
icebp
jmp
icebp
popf
rcrb
ret
push
sub
cld
mov
bound
movsl
add
aas
sbb
and
or
mov
xchg
pop
jae
inc
aas
icebp
nop
pop
add
push
push
xchg
in
aam
push
mov
mov
sub
cltd
les
jmp
dec
clc
sub
push
sar
or
decl
mov
push
push
push
push
xchg
out
push
jo
lock
xor
mov
pop
ss
pop
or
pop
pop
roll
jne
mov
call
test
inc
subb
call
nop
push
cmp
jne
and
mov
fs
int3
ss
decl
cmpsb
inc
fst
cmp
add
xchg
enter
and
dec
push
adc
push
dec
shlb
xor
adc
subb
adc
or
adc
rorl
xchg
fiadds
jmp
and
les
inc
imul
add
push
popa
fadds
imul
inc
js
cmp
ficoml
mov
push
inc
cwtl
ror
cmp
push
mov
inc
shr
repz
lea
mov
inc
add
adc
pop
add
mov
mov
lods
fnstsw
mov
mov
push
pushf
cmp
jle
rcrb
cmp
js
add
xor
out
sbb
jbe
js
cwtl
subb
enter
adc
mov
sbb
jnp
sbb
cmpsb
jl
add
xlat
mov
inc
push
js
pop
jl
cwtl
ss
cmp
xor
pop
pushl
loopne
jno
in
mov
dec
and
ds
sub
shrb
sub
add
cltd
lcall
sbb
sbb
jg
add
aad
jo
pop
stos
adc
dec
outsl
mov
enter
push
jno
inc
cmc
imul
push
data16
rcll
add
xchg
mov
pop
dec
jl
inc
aam
pop
ds
push
mov
sahf
shll
rolb
cmp
adc
xchg
fwait
cmp
push
mov
test
jb
or
add
cmpl
dec
push
push
aas
in
in
xor
jmp
addl
xchg
mov
sub
mov
in
push
jne
push
push
fmul
outsl
lods
mov
push
out
jg
sbb
add
push
les
pop
xor
xor
sbb
add
scas
pop
xchg
insb
fmull
jecxz
add
test
or
pop
pop
xchg
mov
dec
add
add
fisttpll
dec
push
or
test
inc
inc
cwtl
ror
les
test
in
out
jnp
neg
bound
jne
enter
sahf
testb
les
add
push
pop
lods
imulb
int3
mov
arpl
loop
ljmp
sub
dec
hlt
push
fidivrl
jecxz
xchg
pop
dec
pop
addps
add
sar
dec
mov
adc
or
pop
int3
je
jbe
pop
mov
clc
adc
aam
sbb
xchg
fsubr
leave
mov
insl
sbb
les
mov
dec
addr16
in
push
adc
add
lock
ret
xchg
pop
push
xor
lret
push
dec
movsl
dec
fmull
test
lds
pop
cmp
test
mov
jno
and
sbb
mov
gs
inc
ret
in
sbb
dec
push
stos
add
add
ret
jg
ljmp
xor
mov
push
lods
imul
inc
jo
mov
adc
inc
xchg
lret
aaa
add
clc
xor
xchg
jno
jge
fildll
test
adc
lcall
rcll
hlt
ret
push
mov
aas
jge
fcomps
jno
push
sarl
cmp
pop
cmp
sbb
fchs
jmp
push
push
lea
pop
rol
push
loopne
or
sbb
push
xchg
test
sub
jo
cmp
fld1
adc
adc
rcrb
inc
in
rcr
xorb
fwait
cld
test
pop
mov
fildll
fdivrl
sub
add
cmpb
jne
cmpb
jno
or
inc
pop
add
mov
add
lock
movb
push
idiv
jnp
repz
pop
mov
cmp
jl
arpl
xadd
and
rcrb
or
sbb
dec
insl
daa
xor
mov
cmp
jb
xchg
filds
inc
paddsb
dec
outsl
orb
mov
sub
jmp
inc
popl
lcall
dec
movzwl
mov
std
pop
cmpl
push
adc
rorl
sahf
push
nop
or
xor
sarb
xor
sti
cmp
and
and
loope
cmovnp
cmp
sbb
or
mov
sbb
jge
scas
loopne
inc
push
pop
push
call
leave
ljmp
xor
push
mov
pop
and
pop
and
enter
jmp
dec
cmp
jne
jb
xchg
fsubrl
xlat
cmovg
pop
dec
pop
and
push
fmuls
jo
pop
andl
and
lea
xchg
xchg
jo
popf
fsubrs
and
rcrl
sbb
xchg
sbb
and
movsl
adc
push
jns
sbb
jns
push
push
icebp
jo
adc
jp
adc
cmp
and
out
inc
lods
inc
pop
outsl
out
mov
cmp
movsl
push
xor
rcll
scas
jl
sub
inc
adc
ja
add
addl
dec
or
movsb
push
nop
xchg
xor
adc
aam
sub
push
inc
dec
jns
and
or
push
xor
push
jae
jno
arpl
push
jmp
inc
iret
cmp
mov
shrb
jne
cmp
in
add
pop
inc
mov
sbb
sub
orb
pop
mov
scas
or
xor
nop
and
lods
shl
xor
pop
pop
imul
fcoms
stc
push
xchg
lds
fcoml
cmp
addl
pop
push
mov
inc
call
dec
push
or
or
sbb
sub
and
cmpl
das
loopne
ficomps
jne
das
add
jmp
or
cmp
pop
dec
das
and
cmp
es
fwait
in
fsub
mov
mov
mov
in
or
icebp
cli
ret
mov
jbe
fadds
xor
scas
movsb
outsb
aas
lea
mov
or
mov
cmp
pop
jne
sub
jne
pop
stos
inc
pop
and
nop
mov
and
sub
data16
je
cmp
and
pop
adc
adc
cli
add
mov
pop
pop
xor
aas
adc
pop
adc
push
fnstsw
inc
subb
jge
fdivrs
mov
loopne
out
jne
inc
sbb
inc
icebp
fnstsw
sbb
mov
xor
movsl
scas
adc
sbb
mov
xchg
jo
roll
xor
sbbl
push
mov
stc
mov
mov
bnd
dec
incl
jne
movsl
mov
clc
dec
mov
ret
test
cmp
jne
mov
lahf
adc
xchg
add
adc
repnz
xor
addr16
jmp
scas
jmp
inc
pop
xor
leave
or
and
mov
daa
cs
adc
jl
jae
cld
stos
sbb
xor
mov
rclb
or
enter
mov
lea
jmp
push
sub
dec
pop
pop
ret
addl
or
and
pop
inc
lods
movsb
ret
sbb
test
call
push
and
jge
sub
pushf
inc
push
pop
scas
test
cmp
das
mov
add
adc
add
push
daa
aad
xchg
xor
inc
add
divl
add
mov
addr16
add
roll
or
mov
cmp
and
push
popf
stos
pop
aaa
es
push
pushf
and
lcall
pop
pop
push
loopne
repz
push
push
mov
push
push
push
dec
sub
cld
mov
sti
out
inc
add
repz
mov
pop
popa
pusha
sbb
fisttpl
inc
jmp
mov
cs
pop
sub
out
mov
incl
popa
jo
cmp
sbb
mov
sub
sbb
repz
aas
jne
push
call
sbb
or
sub
inc
sbb
subb
mov
sub
fdivs
push
xor
clc
pop
fwait
aam
mov
xor
push
rcll
add
sbb
call
pop
pop
lock
andl
xchg
int
jno
cltd
push
pop
mov
mov
dec
mov
add
outsb
es
arpl
pop
add
loope
rolb
es
or
add
shrb
orb
lahf
rolb
lahf
mov
cmc
pusha
adc
sub
pushf
cmpb
repz
arpl
in
repz
cli
cmpl
movsl
cmp
xorb
int3
xor
sbb
mov
mov
xchg
and
testb
dec
sbb
mov
jmp
scas
pop
inc
mov
xor
loopne
jle
inc
push
jns
in
movsb
rolb
cmpb
push
or
xchg
or
jns
sti
or
outsb
sbb
int3
xchg
xor
or
jmp
mov
adc
mov
sbb
pop
adc
sub
in
or
les
mov
jge
pop
lea
jl
inc
jne
cmp
int
xor
nop
int
push
bound
js
ret
inc
clc
push
xor
pop
sahf
and
xchg
xchg
loop
cld
hlt
and
iret
mov
test
or
jmp
sbb
adc
mov
or
mov
jno,pn
mov
adcb
inc
mov
lds
add
outsb
lret
pop
aas
stc
inc
or
add
popf
andb
sub
fldt
jb
and
testb
pop
or
push
inc
cmp
jmp
push
fidivl
fidivrs
lods
lock
cmp
out
pop
jecxz
mov
xchg
cmp
or
pop
and
xorb
xchg
add
imul
add
insb
xor
scas
addl
dec
and
rorl
idivl
xor
pop
stos
sbb
xor
and
jmp
cmp
jne
xor
shll
scas
add
ss
stos
jl,pt
xchg
xor
xlat
or
in
jmp
sbbb
push
push
jo
outsb
cs
clc
stos
xchg
pop
pushf
jne
push
push
and
out
fbld
ret
sbb
shr
cmp
enter
in
out
sbb
iret
adc
add
cmp
int3
mov
fistpl
cmpl
shl
adc
dec
fcompl
cmp
xor
or
pop
or
or
cmp
je
mov
or
dec
neg
test
push
push
push
push
lret
xchg
mov
inc
push
push
mov
int3
mov
mov
and
add
and
or
cwtl
insb
test
inc
icebp
xor
jne
rol
sub
fidivs
adc
fdivrl
pop
push
lock
mov
mov
add
lea
dec
push
jl
add
fsubrs
adc
add
jns
mov
and
call
insb
mov
adc
adcb
pushf
ss
inc
or
mov
in
xchg
pop
fists
mov
push
xor
adc
cmp
jbe
dec
and
cmp
adc
es
sub
sbb
jno
jle
add
leave
inc
and
mov
adc
dec
xchg
adcb
enter
and
loopne
es
push
cwtl
sbb
adc
xchg
xchg
push
push
and
mov
cmp
jns
imul
add
addr16
jno
aam
shlb
mov
pop
sub
or
and
push
pop
or
or
loope
pop
movb
data16
or
fadds
mov
dec
out
pop
or
cmp
aaa
push
cmp
in
dec
cmp
vaddsubps
push
pop
mov
cmp
loop
insb
sub
xchg
scas
add
cmp
pandn
push
loope
mov
add
xor
jo
inc
push
pop
mov
and
sbb
add
or
scas
inc
add
cmp
and
sbb
je
sub
and
fs
es
clc
xor
mov
cmpl
push
and
add
cmpb
xorb
mov
mov
push
popa
jno
or
aas
dec
dec
or
cmp
mov
pop
adc
test
add
mov
or
mov
or
mov
or
scas
fisttpll
sub
cmc
push
dec
inc
adc
arpl
inc
xor
shl
jmp
rol
pushf
xor
sti
pushf
lret
pop
sbb
mov
test
insb
pop
adc
frstor
cmp
loope
add
and
xchg
cs
and
sub
hlt
mov
int3
icebp
flds
or
pop
push
jo
adc
xchg
ja
sbb
mov
in
or
test
rclb
dec
push
pusha
mov
pop
pop
jno
inc
xchg
loopne
outsl
mov
jl
imul
lea
fcmovnb
mov
hlt
mov
dec
mov
loopne
arpl
pop
mov
dec
sub
or
imull
pusha
movsb
and
movsb
jns
push
sub
sbb
int
pushf
adc
jge
dec
sbb
sub
adc
mov
mov
pop
xchg
cltd
pop
inc
mov
add
mov
and
push
mov
sub
xchg
push
ret
popa
cltd
inc
push
movsl
int3
shlb
push
add
sbb
sti
sub
mov
daa
pop
andl
mov
repnz
or
sbb
mov
mov
hlt
repnz
xchg
mov
sub
addr16
push
jg
mov
ret
xchg
nop
movsb
cli
movsb
mov
cltd
mov
and
dec
fisubl
and
xlat
adc
sub
adc
mov
cmc
sbb
popf
cld
icebp
sbbb
sub
std
repz
cmc
sub
sub
int3
adc
fdivrs
jmp
dec
dec
xchg
faddl
test
popa
mov
cmp
aas
inc
loope
rorb
imul
or
mov
jb
or
in
push
push
or
xor
outsb
add
xchg
cwtl
fwait
clc
dec
gs
lock
inc
mov
leave
shll
test
sahf
xchg
adc
stos
into
or
inc
ficoms
add
lock
repz
in
movl
pop
daa
push
mov
pop
inc
and
push
inc
lahf
adc
or
add
add
addb
popa
lret
mov
or
mov
sbb
out
addr16
inc
movsl
jne
leave
call
adc
daa
lock
or
in
lods
xchg
dec
shll
lock
lret
sub
jl
add
cltd
ret
push
adc
shll
ds
inc
aad
stos
jge
and
sbb
and
loope
pop
adc
scas
sbb
xor
inc
adc
cmp
xor
test
push
dec
sahf
sub
test
shlb
push
ret
jmp
adc
or
xchg
push
inc
dec
cmovge
and
mov
fsts
subl
ja
sbb
or
test
mov
cmp
or
mov
lcallw
jno
fldt
push
mov
dec
ret
add
mov
shlb
mov
mov
push
inc
imul
xchg
cmp
test
push
push
push
mov
jo
push
mov
sub
popf
sar
and
addl
mov
jl
pop
jmp
mov
add
je
dec
call
inc
sub
or
loope
test
xor
mov
jne
xor
add
sar
jns
ret
fldl
sub
inc
xchg
mov
dec
sub
xchg
or
lock
je
jo
cltd
addb
lods
cmp
jcxz
dec
or
ret
or
push
cmp
sbb
sub
or
jl
jne
mov
pop
and
insb
js
je
imul
rol
cmc
mov
movsb
adc
scas
mov
inc
inc
push
xor
and
fldl
rorb
push
mov
or
adc
dec
xchg
test
dec
je
and
or
movl
test
jb
mov
add
test
ds
pop
or
jl
fdiv
inc
clc
xorb
xor
fisttps
pusha
cmp
adc
mov
adc
or
push
lcall
mov
ljmp
mov
mov
xchg
mov
popf
pop
pop
mov
pop
add
js
cmp
cmp
mov
adc
pop
cmc
jp
push
ret
mov
pop
jo
fisubrs
mov
inc
push
ret
xor
add
xor
femms
dec
jae
bound
xor
jno
leave
or
cmpsl
imul
test
loopne
pushl
jge
daa
mov
cmp
jo
jne
or
sbb
xlat
cmpl
fsubrs
jmp
xor
mov
xorl
sbb
sub
pushf
mov
ret
dec
and
inc
movsl
or
add
jle
test
jns
cmp
loopne
ret
jge
mov
popa
push
test
push
and
les
mov
int3
pop
inc
je
adc
jle
and
nop
cmp
pop
adc
or
push
sbb
fnstsw
pop
inc
data16
and
cmp
jle
xchg
jb
subb
push
mov
cmp
adc
jo
aad
adc
dec
adc
rorl
sbb
mov
adc
sbb
pop
jle
jmp
repnz
add
loop
or
or
add
pop
rclb
mov
add
jb
xor
inc
dec
xchg
inc
sbb
aas
mov
push
mov
pop
mov
test
sub
and
les
adc
inc
cmpsb
sahf
adc
xor
cli
testb
cmpsb
inc
and
sub
in
cltd
dec
xor
dec
mov
pop
mov
xchg
jae
add
add
mov
sbb
push
cmp
add
jge
pop
mov
add
or
xlat
mov
xor
add
add
ret
cmp
push
push
das
mov
call
movsb
fcoml
and
xchg
sar
xchg
out
pop
cmp
jne
mov
in
idivb
mov
jmp
xor
nop
sbb
inc
mov
jp
and
sbb
sub
push
dec
pop
dec
sub
dec
mov
pop
or
sub
inc
movsb
mov
in
push
popa
mov
fbld
push
sbb
loope
pop
aad
insb
lahf
call
movsb
mov
adc
and
dec
enter
push
inc
or
repnz
or
inc
bound
fiadds
daa
add
xchg
dec
test
jns
test
in
orl
cmp
test
ds
mov
mov
jp
push
push
jno
or
pop
call
sub
pop
clc
fcoms
cmp
xchg
cmp
divb
std
call
inc
fadds
jmp
loopne
sub
or
jnp
or
sbb
adc
pop
push
pusha
sub
mov
call
jl
or
xchg
pop
pop
or
and
lea
decl
jge
or
sbb
sub
sbb
pusha
sbb
or
fsubrs
data16
and
inc
adcb
xlat
out
xor
sub
mov
addl
push
fsubl
fisttpl
pop
insl
mov
mov
xchg
int3
mov
add
mov
and
and
pusha
xchg
iret
mov
or
push
popa
ret
cltd
push
cmp
popa
les
or
add
insb
popf
rol
loope
or
mov
sub
dec
push
mov
cmp
test
inc
cs
push
xchg
mov
das
test
cmp
jnp
cmp
xchg
shrb
add
testb
adc
mov
push
sbb
pop
fcomi
insb
pop
lds
xchg
ss
push
loope
aaa
in
dec
add
imul
mov
and
mov
pop
pop
out
add
and
add
adc
or
add
jne
rol
rorl
shr
stos
adcb
push
je
mov
cmp
push
pop
popa
pop
ret
jle
cmc
bound
and
push
jae
pop
insl
add
rcl
dec
push
test
pop
or
inc
mov
xchg
or
mov
xor
imul
push
or
jno
pop
sbb
mov
fnstcw
jmp
cltd
aaa
pop
out
push
push
xchg
or
adc
movsl
jg
scas
sbb
push
inc
inc
stc
in
mov
test
mov
in
dec
jmp
je
push
xor
in
add
or
xchg
adc
dec
ud0
jne
mov
cmp
loop
lock
push
pop
inc
rolb
sbb
orb
ja
data16
lds
jecxz
xor
or
push
cmp
into
mov
lods
or
xor
inc
imul
sbb
xor
iret
push
sub
lea
lods
or
cmpsl
add
or
push
or
sbb
adc
sbb
push
mov
dec
or
in
movl
arpl
adcb
loope
arpl
scas
sub
xor
loope
cli
dec
loopne
xor
js
xchg
out
movsl
dec
fcoml
cltd
aam
test
sbb
or
subl
mov
mov
jno
fwait
mov
mov
xchg
fisubs
jns
test
cmpsl
pushf
in
xlat
inc
orl
cmp
add
pop
adc
pop
lods
pop
fstp
adcb
jg
ss
push
push
ret
sub
pop
aas
and
push
push
jle
dec
sub
mov
mov
xchg
aam
mov
pop
scas
sub
add
and
jnp
push
pop
arpl
sub
bound
pop
mov
mov
mov
sahf
xor
inc
adc
rcrl
push
pop
pop
lahf
test
in
adc
jne
and
shll
cmpsl
xchg
or
clc
faddp
in
test
pop
imul
sub
stos
pusha
push
repnz
addr16
imul
pop
and
movsl
repnz
and
adc
flds
adc
jb
pop
inc
cmp
fildl
jbe
inc
mov
push
adc
fldcw
inc
sbb
sbb
popf
fstpl
push
and
dec
pop
insb
stos
pop
inc
pusha
mov
push
mov
or
fwait
sbb
insl
inc
adc
test
xchg
mov
mov
dec
xor
add
fwait
and
add
push
inc
and
cld
jmp
push
jl
xchg
mov
add
mov
std
add
lea
lea
fisttpll
jno
in
dec
and
aad
loopne
fidivs
fdivs
add
movsl
mov
mov
sbbb
testb
movsl
pop
lods
pop
fldenv
xor
xchg
sub
dec
stc
mov
das
add
sub
xchg
mov
cmpsl
jge
push
cld
mov
inc
cmp
rorb
adc
jmp
int
jbe
cmp
jl
or
sbb
popa
jp
adc
jge
test
cmp
in
add
pop
out
decl
add
inc
jmp
movw
rcll
adc
inc
stc
in
push
adc
jae
inc
pop
flds
push
cltd
pop
idiv
dec
insb
arpl
jmp
sub
adc
inc
or
addb
cmp
stc
lds
mov
es
ds
pop
pop
mov
jne
sub
out
push
popf
sti
popa
add
dec
loope
out
gs
mov
ss
sbb
inc
or
sbb
push
or
mov
popa
lock
add
pop
sbb
dec
add
push
or
mov
fidivl
and
aam
or
adc
cmpl
or
inc
mov
push
adc
fists
fs
xor
add
insb
insb
inc
into
mov
scas
lcall
xor
mov
enter
cs
xlat
outsb
daa
push
cmp
into
fdivs
mov
and
nop
sub
mov
dec
leave
orl
push
rorl
xlat
jne
aam
pop
or
pop
les
sub
pop
pop
push
xchg
orb
adc
push
clc
lsl
lret
enter
sbb
add
lods
add
dec
push
movl
insl
or
jb
mov
negl
sarb
and
or
aad
mov
fcoml
mov
dec
rcrl
and
mulb
push
inc
enter
adc
stc
push
rorl
jb
and
xchg
sub
enter
pusha
pop
xchg
add
inc
push
inc
mov
sbb
sti
pop
and
test
inc
and
call
fs
das
and
fwait
ret
pop
sbb
and
stc
lock
jbe
or
mov
cwtl
sbb
subl
adc
mov
cmp
pop
sbb
jno
lds
jae
push
cmpsb
xorb
jne
je
nop
sbb
pop
jnp
lock
and
cmp
add
pop
call
jb
push
mov
push
mov
mov
leave
nop
bnd
jbe
sub
data16
lods
xor
inc
push
push
pop
xchg
in
cmp
leave
jae
lds
xchg
inc
enter
enter
cld
add
add
or
adc
add
or
add
add
inc
dec
xor
push
adc
adc
je
imul
adc
and
xlat
push
pop
sbb
arpl
xchg
add
addb
sbb
daa
sbb
ret
xlat
leave
loope
or
gs
adc
jne
loopne
shrl
mov
ret
ja
add
dec
lock
push
movsl
lea
dec
scas
cs
loope
mov
sti
xor
js
push
jbe
call
lea
cmp
add
std
dec
out
out
std
or
cld
rolb
and
loopne
add
push
cmp
jae
dec
mov
rorl
stos
add
sbb
out
xchg
mov
cld
in
and
inc
push
adc
add
add
std
or
negl
ret
rcll
push
and
sub
adc
cltd
fimull
xchg
inc
stc
xchg
or
push
nop
add
add
int3
popf
mov
adc
js
sbb
aad
mov
imul
test
pop
xor
std
sub
push
and
mov
ljmp
push
xor
mov
add
dec
dec
jbe
cmp
mov
pop
cli
xor
push
or
pop
add
sub
and
mov
aaa
aad
sbb
iret
and
or
or
and
mov
fmul
and
pusha
das
incl
insl
pop
insl
icebp
int
jae
adc
imul
jbe
pusha
aaa
dec
xor
insl
and
push
push
jns
sub
mov
xor
mov
xor
add
pop
in
pop
mov
push
jne
xorl
cmp
or
add
andb
sbb
add
push
sbb
shrb
sbb
nop
testb
inc
subb
add
sbb
sub
nop
inc
xor
int
sbb
call
push
and
dec
insl
dec
pop
add
lcall
loopne
xor
push
pop
push
pop
mov
and
push
popa
or
push
mov
cmp
fiaddl
push
out
add
out
test
lods
lahf
add
mov
cmpb
jb
lea
ret
es
xchg
cmp
jle
push
adc
arpl
cwtl
lods
add
adc
jl
pop
pop
pushl
adc
ds
cmp
mov
pop
add
sub
cs
sarl
inc
shrb
sbb
rcl
imul
insl
mov
jecxz
mov
adc
outsl
adc
test
bound
cmp
fdivr
mov
std
incl
movsb
pusha
fcompl
fnstsw
test
je
sbb
aas
add
test
xor
pop
push
push
fldl
push
sbb
cmp
add
std
jbe
sbb
and
aam
aas
sub
into
fstpl
pop
orb
das
mov
fcompl
mov
jo
jnp
xchg
popf
xchg
testl
fsub
pop
fsubrp
pop
and
and
adc
ljmp
xchg
pop
int3
shll
insl
ss
push
push
ja
push
jne
xchg
push
and
ja
push
adc
push
js
sub
add
je
jle
jg
fwait
add
dec
or
cmpb
jne
mov
sbb
orb
out
cmp
jmp
push
push
insl
orb
lea
cmp
or
push
mov
sbb
data16
sbb
dec
call
pusha
por
cld
test
aaa
cmp
cld
add
test
push
shll
cmpsl
pusha
cmp
add
mov
inc
sbb
sbb
add
sbb
ficoms
xor
inc
adc
sbb
mov
adc
add
jmp
sub
movsb
jbe
leave
stc
mov
lods
jb
xchg
test
jnp
cwtl
mov
inc
aaa
push
rcrl
fs
inc
mov
or
movsl
mov
call
int
adc
or
subb
and
insl
mov
adc
inc
mov
xchg
test
ja
sbb
addr16
pop
adc
test
fsubrl
in
pop
or
loope
repz
xor
push
jle,pt
cmp
pop
pop
adc
add
mov
je
adc
sbb
ljmp
mov
in
jg
iret
push
lea
sub
add
arpl
add
arpl
outsl
adc
test
adcl
mov
cmp
imul
ds
adc
mov
add
adc
push
add
in
mov
mov
xor
cli
ds
rol
popa
jno
xor
inc
sub
cmpsl
test
pop
lods
pop
adc
adc
ss
call
adc
inc
xor
inc
or
add
pop
imul
add
add
dec
pop
mov
or
xor
sahf
rclb
mov
mov
adc
push
dec
sti
cmp
mov
and
and
and
push
rorl
aad
int
arpl
in
pushl
fdivs
add
fldcw
adc
out
and
ret
insb
pop
lock
adc
call
push
cmp
mov
mov
nop
push
pop
lcall
daa
inc
loopne
inc
jge
push
mov
js
mov
push
push
mov
adc
adcl
pop
pusha
mov
bound
gs
dec
test
sub
push
sbb
pop
jno
movsb
jecxz
inc
jno
mov
dec
jno
pop
and
mov
insl
inc
icebp
and
mov
push
mov
fs
mov
push
clc
sub
dec
sub
dec
lods
mov
add
sbb
dec
jne
mov
and
jmp
imul
sub
add
stos
mov
inc
cs
dec
jmp
sub
xor
mov
ret
mov
sub
fmull
jmp
mov
ss
xchg
test
jmp
add
lcall
inc
sub
add
test
push
jmp
cmp
inc
fists
cmp
in
inc
pop
insb
and
inc
push
nop
movsb
mov
int3
in
jb
and
adc
xor
inc
lcall
enter
jbe
dec
pusha
adc
xchg
mov
aam
clc
push
cmp
and
adc
cmp
nop
inc
inc
push
fs
inc
push
je
nop
nop
inc
push
cmp
cmp
loopne
andb
inc
mov
adc
mov
aad
push
adc
fwait
and
pop
push
imul
jge
xchg
fwait
iret
repz
movsl
scas
mov
out
cmp
inc
or
out
xor
jns
out
outsl
jns
lea
mov
jns
out
rcr
out
sti
shlb
mov
push
les
mov
mov
mov
pop
jge
fucom
sbb
mov
scas
pushf
add
push
sub
cmovnp
adcb
mov
addr16
test
je
dec
and
outsb
add
lea
mov
je
arpl
cmp
cmpb
outsl
adc
bound
test
jo
lea
cltd
add
pop
lock
push
push
les
cwtl
test
jmp
mul
test
out
fcompl
aas
ret
cmp
fisubrl
es
or
int3
and
mov
mov
pop
fsubl
jo
test
scas
les
ss
mov
inc
dec
imul
ret
pop
pop
xlat
jl
xor
nop
mov
adc
lds
arpl
mov
push
or
insl
loope
in
dec
sti
adc
popf
inc
or
xor
push
nop
cmp
sbbb
fstps
dec
and
inc
pop
and
stos
inc
lods
mov
mov
add
ja
jcxz
ret
clc
sahf
xchg
hlt
pop
xchg
cmpsl
jg
dec
jae
mov
add
pusha
dec
jae
les
rorb
jns
jo
push
dec
shr
add
lods
jnp
pop
push
or
or
jo
lahf
or
pushf
stos
mov
or
mov
fidivrl
cwtl
sbb
xchg
mov
mov
enter
mov
pop
cmp
mov
je
or
cwtl
loop
sbb
mov
mov
push
cmpsb
cmp
sahf
adc
jge
popa
push
mov
dec
xlat
xchg
xor
add
pop
fldpi
js
insl
or
jno
jbe
ret
cmp
pop
mov
xchg
mov
insl
ret
mov
xchg
xchg
mov
adc
xlat
add
pop
std
lods
cmp
sbb
testb
mov
adc
dec
xchg
js
mov
je
xor
roll
dec
jmp
and
or
jl
loop
pop
xor
mov
jo
ds
jns
sbb
fcoms
out
sbb
push
mov
xchg
mov
hlt
ss
xor
pop
push
mov
jo
and
sarb
movsb
sub
and
rorb
jo
mov
and
xor
sub
and
cmp
dec
cwtl
pushf
and
mov
or
lcall
and
shll
mov
and
xchg
out
rcrb
jo
out
out
jl
xchg
sbb
xchg
out
movsb
sbb
call
pop
repnz
enter
pushf
push
sbb
push
jnp
lea
xchg
fwait
cmpsl
push
cmc
sub
shl
inc
jle
sub
jmp
jo
fsubrs
add
test
leave
movl
pop
dec
cmp
inc
inc
or
stos
mov
out
vmread
push
dec
stos
cmpb
sbb
gs
add
add
in
sub
adc
inc
pop
xchg
xor
hlt
outsl
les
cmc
adc
jecxz
int3
jno
xor
aas
popa
adc
jmp
adc
add
mov
mov
cmc
xchg
nopl
pop
lcall
xor
pop
loopne
sub
fdiv
movsb
sub
push
ret
xchg
ret
push
xchg
sub
dec
xchg
cmp
or
jmp
jmp
mov
xor
rcrb
hlt
adc
call
push
xchg
sub
jae
ss
xchg
std
cmp
mov
xchg
xor
shll
xchg
xchg
add
imul
movsb
clc
test
or
std
pop
pop
sbb
adc
inc
pop
mov
das
cs
lcall
push
imul
mov
cltd
pop
jmp
mov
add
je
test
dec
ljmp
dec
daa
stos
xor
push
jnp
add
repnz
jae
add
lea
dec
cmpsl
cmc
fsubrl
lods
xorb
or
je
ss
dec
scas
and
xor
and
and
pop
jmp
push
sub
mov
cmp
repnz
or
out
lea
pop
sub
cmp
lahf
add
mov
nop
data16
push
mov
aaa
xchg
pop
imul
adc
pop
aad
std
or
and
push
xchg
leave
ret
outsl
inc
test
xor
das
pop
sub
add
pushf
add
pop
or
mov
loopne
movsl
adc
in
dec
sub
cmpsl
and
les
data16
inc
in
cmp
mov
sbb
or
fadd
push
inc
arpl
push
loopne
std
and
jmp
shrb
xchg
aam
lret
pop
inc
cmpsl
and
movsl
adc
or
cmpsb
mov
jle
lock
xchg
dec
sbb
jno
mov
lods
inc
js
bound
pop
sub
or
iret
or
sbb
mov
mov
mov
repnz
push
cwtl
int3
out
mov
fadd
pop
xchg
mov
xor
mov
je
push
or
jbe
mov
stos
push
xorb
sarb
dec
jmp
jno
call
shl
adc
xor
add
add
xchg
dec
jae
xchg
push
data16
addl
aam
lea
shlb
movsb
dec
shrl
test
jl
movsb
rorb
push
push
cltd
nop
data16
popf
push
pop
pop
and
movsl
mov
mov
mov
xchg
add
mov
xorl
sbb
lods
add
insl
dec
jb
and
popf
mov
scas
xor
push
push
aaa
pop
insb
pop
fcmovnb
outsl
pop
scas
pop
in
pop
repz
insl
sub
xor
push
pop
ret
jbe
pop
or
roll
dec
imul
mov
dec
cld
sti
push
lods
inc
lcall
adc
scas
clc
in
add
and
mov
or
and
sub
int
push
loopne
push
sub
and
cmp
or
test
fmuls
or
mov
jnp
add
or
mov
jo
loopne
mov
push
loope
or
push
insl
xchg
jg
xchg
cltd
cmp
fcompl
sub
sub
jp
test
aas
sub
or
xor
dec
or
test
fisttpl
std
pop
in
inc
xor
xchg
adc
je
subb
pop
shl
pop
push
lahf
jae,pn
mov
pop
movsb
mov
or
pusha
pusha
call
xchg
push
movsb
and
fs
sub
insb
lahf
cmp
or
scas
fwait
sbb
sbb
sarb
pushl
out
addb
pop
dec
add
push
sub
xchg
adcb
sbb
stc
mov
fmull
andb
mov
push
pop
lods
pusha
xchg
pop
clc
jno
pop
cld
sbb
sub
adc
mov
push
mov
sub
gs
in
imul
enter
pop
pop
jne
fsub
push
push
nop
xor
dec
pop
mov
add
rolb
push
imul
cmp
jo
jmp
push
aaa
dec
mov
and
cmp
inc
xor
mov
cwtl
movsb
cmp
xor
es
ret
cmpl
and
dec
jb
insl
pop
scas
shlb
pusha
cwtl
js
enter
add
xchg
test
push
movsb
mov
fs
test
nop
mov
fdivs
cmp
adc
sbb
sbb
loope
es
or
icebp
or
pusha
aad
daa
add
dec
jb
push
test
xchg
mov
fwait
or
add
test
clc
or
mov
sub
or
pop
pop
add
pop
lcall
pusha
jg
mov
gs
jb
pop
cwtl
push
int
sub
incb
jnp
or
cmp
or
ljmp
push
cmp
mov
test
sbb
jb
addr16
inc
loope
jo
and
add
sub
push
or
jo
nop
aaa
int3
addl
mov
popf
pop
mov
scas
adc
cmp
and
mov
xor
sub
pop
push
cwtl
popa
in
call
mov
sbb
cmp
aad
nop
inc
insl
push
jecxz
ret
adc
mov
dec
scas
push
movsl
in
adc
sbb
and
cmp
push
mov
sbb
cmp
cmp
xadd
and
pusha
ljmp
or
push
idiv
adc
or
jb,pt
fnstcw
imul
mov
mov
jg
lahf
ror
loope
je
push
addl
imul
pop
lcall
aam
aam
xor
pop
cmp
enter
xlat
jbe
mov
lock
push
inc
mov
fs
mov
std
lods
push
sub
inc
or
hlt
addl
pop
xchg
push
or
iret
jne
mov
mov
mov
dec
or
enter
jae
inc
dec
add
cmp
pop
mov
and
je
mov
dec
rorl
dec
pop
ss
jmp
push
and
or
jnp
dec
imul
rorb
mov
adc
mov
mov
loopne
dec
cmp
shrb
outsb
add
daa
gs
inc
daa
pop
jns
xchg
fstpl
movsl
add
or
fidivrs
mov
jmp
mov
lock
sub
addl
mov
adc
and
mov
in
cld
rcll
sbb
mov
sbb
xor
pushl
pop
mov
and
xor
xor
dec
add
xchg
push
adc
lods
jbe
imul
stos
popa
add
mov
in
imul
decl
gs
cmp
jl
call
jg
je
cmp
or
jl
lea
rol
add
mov
repnz
push
add
pop
dec
add
ret
inc
mov
js
xor
sub
es
mov
add
and
adc
pop
add
mov
scas
popa
cltd
and
cs
addb
in
and
das
adc
mov
xlat
js
xor
ret
cmc
and
and
rorl
cmc
call
mov
std
mov
cmp
jg
cmpb
je
dec
and
jge
and
loopne
push
test
mov
stc
dec
shr
repz
sahf
and
sbbb
mov
or
leave
dec
cmc
and
addr16
dec
leave
popa
sti
popa
in
and
add
pop
data16
imull
div
in
jl
sub
aaa
inc
sub
sarb
add
adcb
pop
adc
subb
dec
push
inc
xchg
sub
movsb
adc
mov
cmp
pavgb
adcl
movsb
adc
or
or
push
test
push
xchg
fcmovne
jns
fcoms
xchg
pop
push
jo
popf
or
xor
jp
sub
inc
scas
lods
adc
mov
cmp
mov
aam
and
popa
push
adc
dec
xchg
mov
adcb
add
dec
sbb
outsl
cmpsl
int3
fwait
dec
sub
dec
fdivrs
or
mov
or
or
add
fldenv
flds
fdivs
pop
fisubrl
sbb
push
sbb
jae
andl
dec
sbb
les
or
add
sbb
or
inc
leave
insb
mov
bound
sbb
movl
into
xorb
cwtl
sub
subb
sub
popa
push
dec
or
loope
sub
mov
adc
aad
lock
repz
lcall
and
push
adc
or
fcomps
cmp
add
jns
lcall
sahf
mov
test
cmpsb
adc
or
or
or
push
cmp
out
push
dec
mov
adc
xchg
pop
lret
add
sub
loopne
mov
lret
insl
out
int
pop
or
and
inc
lods
cs
adc
dec
in
lea
fwait
and
outsl
ficomps
xadd
adc
and
or
add
sub
jge
mov
xchg
sbb
jnp
inc
add
cmp
jae
cmp
fadds
cmp
aas
adc
lock
clc
hlt
push
mov
add
xor
and
mov
nop
dec
imul
movsl
cli
in
insl
out
loop
sub
lds
aam
mov
cmpsl
aad
sbb
mov
add
enter
mov
or
addr16
shlb
pop
inc
imul
addr16
add
pushf
data16
int
dec
outsb
cltd
sub
daa
sub
dec
stos
xor
xor
lock
in
pop
in
das
popa
out
xor
sbb
bound
scas
lods
sbb
cmp
jecxz
jno
loope
and
mov
xor
jmp
jp
sbb
pop
movb
adc
rcrl
inc
ds
mov
push
cmpsl
je
stos
mov
test
fs
inc
outsl
insl
mov
cmp
cmp
test
add
popa
ss
mov
push
or
scas
dec
aam
cmp
hlt
je
out
les
cltd
mov
mov
ljmp
jno
sbb
les
test
sbb
in
and
or
cmp
jg
push
push
or
or
or
leave
jne
xlat
push
add
xchg
or
sub
add
imul
addr16
std
lock
test
sub
dec
icebp
xlat
adc
or
dec
adc
pusha
shlb
push
xor
jne
je
inc
add
outsb
dec
cmp
jl
loop
loop
inc
test
js
loope
arpl
add
ret
mov
inc
int
xorl
push
iret
inc
push
mov
push
or
je
out
popa
leave
cmp
sbbl
mov
pop
push
nop
rolb
add
xchg
push
enter
mov
xor
adc
test
es
xor
sub
lods
jbe
cmp
dec
xor
mov
in
xor
and
pop
inc
lea
cmp
clc
mov
xchg
ror
sub
sub
les
dec
popf
shll
xchg
call
rdtsc
xor
enter
or
lahf
mov
add
in
jmp
lods
or
adc
inc
ja
addr16
imul
and
push
lcall
xor
jne
das
mov
push
sahf
fdivrl
ljmp
in
cmp
in
jne
es
mov
add
lock
jne
mov
push
into
gs
xor
add
filds
lea
inc
lcall
xor
sub
dec
push
lret
adc
push
and
cmp
addr16
in
subb
mov
or
jno
shrb
add
je
std
push
addr16
sbbl
repnz
sbb
or
or
xor
clc
ja
pop
or
or
cli
pop
bnd
adc
and
in
cmp
dec
inc
out
gs
cmp
sbb
add
ss
inc
add
inc
add
inc
or
push
dec
lods
sbbb
add
cltd
sub
fbld
jb
add
addb
add
or
add
mov
mov
pushf
push
xchg
pop
push
mov
push
jmp
fdivr
nop
push
shl
cmp
je
push
push
xchg
add
aas
lret
add
push
into
xor
cmp
jle
fidivrs
dec
push
push
cmp
int3
aas
push
rorb
jge
cli
mov
jmp
xchg
loop
fwait
out
add
adc
or
fisttpl
adc
icebp
mov
push
sbb
rcl
xor
shl
mov
loopne
sub
movzwl
jl
adcb
insb
push
fstpl
xor
sub
push
cmp
cmp
dec
es
rcrb
push
cmp
add
lret
mov
add
add
pop
and
cmc
sub
sar
inc
push
push
push
push
add
aaa
xchg
push
mov
adc
pop
xor
sbb
mov
pop
loop
lcall
test
loopne
lret
sahf
es
addb
mov
mov
and
inc
shl
scas
loopne
test
pop
inc
push
lcall
lahf
lea
adc
ret
add
cmp
push
nop
popa
sbb
inc
lock
mov
cmp
fs
xor
inc
pusha
or
cwtl
leave
je
fldl
jl
rcrb
pop
inc
cmp
inc
je
cmp
adc
jns
out
jne
daa
bnd
adc
hlt
jne
lods
sahf
out
or
jne
or
adc
sbb
pusha
push
mov
int
js
ret
adc
pop
xchg
fldl
aad
pop
and
dec
insl
push
dec
jp
bound
divb
inc
dec
push
incl
mov
mov
fldcw
mov
dec
mov
pop
mov
fstpl
hlt
sbb
lods
inc
lea
sub
fmuls
push
aaa
or
adc
and
jb
ja
lret
mov
add
push
dec
mov
cld
sub
daa
dec
lret
cltd
fisttpl
and
aad
lock
mov
int3
push
mov
out
ret
sbb
and
aas
jge
xchg
flds
mov
ds
inc
mov
push
push
fstl
pop
mov
pop
jno
neg
loopne
shlb
lea
cmp
in
adc
pop
push
xchg
xor
js
sbb
cli
push
cmpsl
mov
popf
ss
ret
jl
es
test
and
mov
dec
or
push
sbbl
push
xchg
insl
mov
xchg
out
dec
jmp
adc
jmp
orl
outsb
rorb
pusha
cmovns
mov
inc
or
fcmove
pop
mov
fs
push
fs
pushf
push
jne
push
repnz
add
and
enter
xchg
test
ficoml
add
mov
mov
sub
or
aas
repnz
push
data16
pop
mov
jae
adc
in
shl
or
fmuls
or
ffree
push
push
or
or
into
inc
cmpb
out
or
xchg
mov
or
adc
add
rolb
add
sub
insb
and
inc
add
xchg
popa
push
xchg
or
jl
je
fldcw
or
lods
pop
inc
das
mov
push
adc
pop
or
sub
ss
adc
push
jmp
and
or
cld
imul
xchg
lea
orb
add
lret
pop
pop
lds
push
mov
pop
mov
mov
rorb
jnp
imul
xorl
cmp
and
out
dec
das
sub
scas
mov
pop
lret
mov
or
xchg
jae
jmp
loop
pop
cmp
pusha
sbb
xor
add
rcrb
xchg
daa
dec
xchg
xor
sbb
scas
adc
push
mov
xorl
jne
mov
dec
das
sarl
and
mov
xor
push
les
dec
out
mov
or
nopl
xchg
pop
adc
adc
xor
pop
adc
leave
and
cmp
sbb
fsubs
popa
adc
lds
sbb
cmp
jmp
fadds
dec
enter
sbb
add
outsl
push
adc
lds
adc
dec
nop
je
sbb
mov
rolb
and
adc
and
insb
loop
and
and
xchg
sbb
and
lds
add
cmp
sub
stc
jb
add
push
push
lea
mov
leave
inc
lcall
repnz
dec
xlat
les
or
or
push
test
pop
xlat
fldl
mov
test
xchg
js
fimuls
subl
es
pop
add
hlt
rolb
sbb
adc
jle
dec
js
adc
jae
jg
popf
cli
push
je,pn
push
in
jg
push
push
mov
lea
jo
popl
add
arpl
mov
mov
add
mov
and
push
aas
lock
lock
jne
sbb
add
xlat
sub
leave
movsb
push
hlt
clc
or
push
mov
pop
or
adc
cmpsl
adc
in
ljmp
cs
add
add
push
daa
push
jp
vphsubsw
call
jb
pop
daa
xor
movsl
jne
movsb
and
in
call
loop
popl
adc
sub
pop
cmp
lahf
and
jmp
xchg
loopne
add
add
sbb
cmp
call
mov
out
add
ja
out
dec
movsl
inc
pop
adc
data16
xor
fbld
or
pop
icebp
fisubl
je
mov
mov
dec
out
dec
dec
dec
mov
ficompl
sub
push
call
xchg
cmc
and
xor
int
add
mov
leave
pop
pcmpeqd
xchg
push
add
and
push
sbb
jno
int3
pop
cmpsb
push
lcall
outsb
xchg
aaa
sbbb
test
jecxz
add
repnz
adc
add
and
adc
fcoml
push
cmp
add
test
adc
hlt
mov
sti
popf
enter
push
jne
sub
outsb
push
test
ljmp
and
add
push
adc
pop
shll
pop
adc
cmp
xor
cmp
aaa
xor
dec
inc
jo
in
push
adc
or
mov
dec
add
fcoml
pusha
cmp
frstor
jmp
stos
or
mov
dec
or
inc
inc
inc
or
shrb
idiv
push
add
js
cld
ja
and
pop
push
push
adc
arpl
or
and
je
mov
stos
adc
movsl
shlb
cmpsl
les
test
mov
adc
add
or
inc
ror
push
ds
aas
leave
nop
rolb
mov
dec
fld
sbb
or
inc
add
ret
stos
fcoml
pop
or
bndstx
add
jmp
or
aas
jae
loop
cmp
xor
shr
aam
xchg
inc
out
int3
addb
icebp
mov
jmp
jne
push
and
ret
fwait
std
cmc
aaa
hlt
lods
pop
leave
dec
adc
pop
pusha
fsubl
into
daa
fcmovb
sub
add
cmp
je
push
inc
or
mov
das
mov
mov
in
scas
pop
inc
clc
pop
inc
pop
test
mov
push
gs
je
push
nop
gs
add
jge
bound
and
mov
mov
mov
xchg
sub
fdivl
push
cli
jns
jns
shlb
pop
andb
jns
mov
mov
or
loope
dec
mov
jne
push
push
lock
test
xor
or
in
adc
xchg
aas
mul
pop
add
aam
shll
ret
adc
sub
repnz
rorl
insb
js
jl
int3
mov
dec
fildl
je
movsl
ja
or
add
jae
push
cmpsl
mov
icebp
je
adc
das
and
xchg
add
sbb
clc
out
iret
imul
ds
ret
cld
testl
jae
movsbl
movsb
cmp
push
mov
add
lahf
cli
xchg
cmpsb
stc
mov
add
sbb
pop
adc
pop
jmp
enter
incl
sarb
lea
and
dec
inc
faddl
dec
jmp
shl
movsb
incl
or
add
inc
cmp
jl
cmpl
ss
out
xor
cltd
and
add
sar
add
push
add
outsl
jnp
push
xor
pop
ss
cmp
ret
and
jne
fildl
inc
jg
lret
shr
lret
mov
dec
dec
aaa
sub
cld
xor
push
mov
and
loopne
push
js
sub
movsl
mov
stc
xchg
add
push
jp
jbe
fs
pop
jo
shld
lea
jne
push
fsubrl
sbbl
adc
or
adc
cmp
or
outsb
xchg
push
clc
sub
add
icebp
inc
insb
mov
mov
ja
cli
js
inc
mov
add
dec
jne
pusha
xchg
pop
into
jge
arpl
adc
pop
imul
sbb
add
aaa
lahf
push
ret
or
mov
adc
icebp
lods
or
jmp
add
pop
cmpsb
cltd
rclb
adc
dec
push
cmpb
scas
xor
push
mov
cmpsl
loopne
add
frstor
imul
push
fwait
jge
fcomp
pop
lods
xor
and
or
cs
pop
sbb
je
cmpsb
push
movl
mov
mov
outsb
push
inc
fisttpl
hlt
add
nop
je
pop
js
aam
xor
rclb
sbb
dec
pop
and
mov
inc
stos
out
xchg
push
add
sti
sarl
adc
push
push
nop
cmp
out
cmp
mov
pop
outsb
pop
sub
pop
jb
pop
add
jmp
push
or
dec
dec
push
imul
add
notb
sbb
fisubrl
jns
push
and
or
rorl
lods
ret
popa
lods
or
pop
pop
mov
loop
mov
pop
inc
aas
push
jp
decl
xor
sbb
les
sbb
adc
nop
sbb
add
add
pop
mov
mov
test
xlat
xchg
pusha
mov
bound
xor
addr16
lea
rorb
test
ret
or
add
test
shlb
mov
jp
fdivl
dec
cmp
push
and
filds
and
popa
stos
jae
mov
cli
mov
ficoms
mov
mov
test
cmp
incb
add
mov
push
push
jnp
adc
dec
das
push
sub
and
add
mov
cmp
jecxz
pop
dec
ja
adc
mov
mov
add
add
mov
lret
xchg
shlb
pop
mov
mov
or
xor
sub
mov
jmp
push
mov
rep
adc
aam
xlat
scas
xchg
fldcw
inc
add
jl
mov
xor
bound
pop
aam
inc
cmc
jmp
sbb
mov
and
cmp
sbb
mov
jmp
mov
inc
adc
js
add
mov
xchg
dec
call
pop
lcall
aad
rorb
cmp
int3
mov
mov
sbb
addl
sti
loopne
incl
sti
push
pop
cmp
sbb
jne
shrl
repz
inc
pop
pop
shlb
insb
mov
mov
lods
cmpsl
call
out
dec
test
das
cs
push
jecxz
sub
les
loopne
test
jb
es
xchg
xchg
xchg
insl
or
push
cwtl
cmp
cli
pop
lret
scas
arpl
movsl
xorb
or
lea
dec
popa
xchg
inc
rclb
fdivs
push
push
test
aam
jo
mov
bound
jge
clc
jl
lods
mov
jge
and
cmp
push
inc
push
sbb
sbb
je
cmp
daa
movsbl
rcrl
ret
out
add
sahf
mov
scas
nop
enter
inc
loopne
jmp
mov
out
sub
sbb
cmp
cs
mov
pop
xchg
in
movsb
xchg
lea
sub
rolb
sub
test
es
movsl
arpl
mov
and
xchg
push
or
xchg
cs
repz
push
push
mov
mov
lea
fs
nop
lcall
loope
pop
jbe
jmp
aas
popl
nop
in
sub
lods
xchg
pop
sbb
inc
and
jmp
rcrb
dec
adc
xchg
cmpsb
in
in
ffree
repz
dec
cs
add
rolb
sub
inc
dec
jns
xor
add
outsb
mov
mov
inc
mov
lock
jmp
into
insb
jae
or
mov
mov
jle
xchg
mov
mov
clc
pop
mov
cld
insb
jmp
or
push
add
das
stos
shrb
dec
pop
adcb
or
scas
cmpsb
lcall
xchg
les
loopne
ss
push
inc
or
les
adc
adc
add
movzbl
mov
inc
mov
mov
cmp
add
mov
xor
mov
test
pop
sub
push
push
scas
loop
mov
or
add
sbb
pop
jnp
lods
add
push
mov
nop
adc
push
nop
add
or
cld
push
push
cld
scas
push
leave
push
xor
mov
inc
call
jne
pop
pop
mov
jge
cli
lea
out
dec
outsl
ret
in
aam
inc
add
push
imul
add
dec
adc
or
ds
push
sti
xchg
je
xchg
in
mov
dec
push
stc
pop
jp
in
push
xor
nop
nop
cwtl
ret
push
ret
jne
les
mov
xor
xchg
cwtl
lcall
outsl
mov
push
enter
xor
shll
ja
mov
cmp
mov
ljmp
adc
xor
jle
mov
in
pop
movsl
inc
mov
ret
xor
mov
adc
mov
or
arpl
nop
mov
and
adc
add
xor
or
and
push
sbb
fmuls
out
sub
fsts
test
pop
rclb
mov
jmp
pop
push
popa
jmp
inc
or
add
adc
adc
mov
pusha
imul
aaa
ss
decl
lea
cmp
jbe
cmp
jbe
mov
sbb
push
pushf
mov
xchg
add
fstl
or
mov
cwtl
sbb
fmulp
add
insl
add
fisttpl
les
or
xor
sub
xor
cmp
mov
dec
das
jecxz
inc
je
dec
icebp
jne
push
fstps
notl
ljmp
jmp
aas
jmp
push
mov
inc
dec
inc
mov
jge
divl
push
mov
je
cld
les
stc
jb
ret
nop
nop
and
adc
mov
test
mov
mov
cmp
mov
fmull
xchg
hlt
js
test
inc
je
lea
or
push
xchg
and
push
jb
add
and
leave
sti
es
push
cmpl
testl
cmp
mov
das
mov
nop
mov
pop
test
movsl
stc
jmp
fisttpl
push
stc
jge
cmpb
aas
mov
adc
pop
or
cli
xchg
jl
push
sub
sti
out
in
jge
sti
adc
ror
xchg
xor
adc
adc
dec
sbb
and
movl
dec
in
xor
xchg
aas
mov
xchg
and
mov
cmpl
int3
shll
push
mov
stos
push
mov
xchg
mov
xor
int3
iret
andb
ret
mov
je
or
decl
push
pop
xor
inc
pop
sti
ss
daa
cmp
or
pop
add
lds
adcl
and
sbb
scas
lods
or
mov
and
insb
xor
mov
sti
dec
mov
insl
call
or
shlb
sub
inc
sub
or
call
pusha
scas
or
mov
xlat
dec
add
shlb
je
mov
shrb
lea
je
lea
mov
and
mov
enter
mov
int
sub
jecxz
data16
push
lcall
adc
push
jo
subb
xchg
lea
push
push
lret
pop
movl
aas
in
or
fdivl
add
shlb
cmp
aam
stos
hlt
jmp
dec
xchg
fsub
mov
inc
js
imul
sbb
adc
mov
add
sub
insb
or
sub
add
ret
sbb
sub
add
cmp
pop
xor
unpckhps
pushf
insl
mov
sbb
inc
call
jecxz
adc
mov
pop
fidivrs
or
mov
or
mov
test
and
mov
xchg
jmp
andb
or
mov
jg
xchg
clc
and
gs
or
add
cmp
push
cmp
cmp
rolb
mov
emms
mov
jmp
push
pop
xchg
aaa
mov
adc
push
loopne
xor
rolb
and
leave
out
nop
push
lret
pusha
mov
scas
push
push
sbb
outsb
dec
in
mov
add
aaa
movsl
xchg
jne
pop
xor
sub
or
cltd
fsubrs
shld
pushf
jne
add
pop
sub
ss
sub
shl
add
add
sbb
lahf
test
pop
out
sarb
push
adc
lret
pop
xchg
or
cmp
add
push
xor
mov
or
adc
out
fmul
hlt
rcr
jle
loopne
mov
leave
inc
pop
push
lock
imul
add
cld
je
add
mov
test
mov
call
cmp
popa
or
mov
xor
adc
adc
jge
sub
xchg
sbb
add
das
inc
pop
pop
sbb
mov
mov
pop
ret
cmpsl
fwait
lea
or
pop
xlat
add
and
xchg
mov
movsl
fwait
cmp
jae
loopne
or
push
mov
scas
movsb
pop
orb
adc
push
aas
or
cmp
dec
mov
je
test
adc
test
dec
fs
arpl
enter
mov
test
sbb
push
xchg
dec
sahf
cltd
scas
mov
add
adc
int
and
jne
pusha
ret
push
sub
gs
lcall
sub
dec
add
pop
add
sbb
pop
mov
jnp
repz
xor
xchg
jg
pop
cwtl
insl
outsl
push
jae
bound
mov
pop
aas
insb
pop
ja
cmp
jmp
stos
cmp
into
mov
xor
enter
mov
mov
push
and
mov
jnp
js
popf
mov
inc
xor
test
sbb
xchg
sbb
test
add
mov
push
inc
fcoml
ret
or
enter
aas
mov
jnp
mov
lea
jne
ds
or
or
or
or
sub
xor
orb
xlat
shlb
xchg
push
inc
loope
push
add
inc
and
sbb
inc
and
dec
and
and
inc
pop
cmp
xchg
xor
or
add
bound
cmp
dec
or
inc
mov
mov
add
pop
xchg
sbb
mov
xor
and
out
imulb
cwtl
push
dec
jo
dec
pop
inc
ljmp
sti
push
jo
xchg
inc
cli
push
clc
hlt
dec
call
das
add
sbb
cmc
add
mov
daa
in
and
lcall
xchg
mov
ficoml
jns
lahf
push
inc
adc
jne
xlat
nop
xchg
adc
mov
movsb
mov
fcoms
out
adc
mov
pop
add
pop
pushf
xchg
outsb
mov
int3
adc
shrl
sbb
sbb
lret
cmp
xlat
sub
cmp
push
sub
cmpsl
cld
test
xor
or
sub
sub
roll
lods
push
inc
popf
std
add
and
xor
shrb
xchg
mov
test
dec
push
pmulhuw
jge
sub
mov
scas
xchg
inc
add
fcomi
into
pop
call
inc
and
popa
push
das
lock
adc
clc
jecxz
xchg
pushf
cmp
ds
clc
xor
cmp
shlb
in
aaa
popa
push
inc
add
nop
stos
cwtl
sbb
je
add
push
sbb
lahf
insl
or
mov
push
and
push
inc
adc
mov
icebp
cmp
repnz
jmp
inc
in
in
pop
loopne
xor
cmp
je
or
jg
jne
mov
cmp
addr16
je
cmp
jne
mov
sbb
add
loopne
add
dec
lea
jo
cmp
or
mov
dec
xor
push
cmpsb
pusha
add
jg
sub
inc
adc
je
testl
inc
push
sbb
cld
cmp
jbe
sti
call
mov
xchg
inc
cmp
je
sub
inc
jmp
inc
and
or
test
clc
pop
mov
pop
outsb
jp
inc
push
cltd
sti
push
rorb
add
mov
repnz
je
fwait
dec
add
enter
lret
or
arpl
add
mov
xor
data16
in
inc
test
push
jne
mov
rcll
jl
sti
cmp
outsb
hlt
cmpb
insb
dec
std
pop
xchg
adc
je
mov
sub
jbe
cmp
mov
push
cmp
fnstsw
sub
xor
inc
jge
hlt
adc
pop
add
cld
inc
pcmpgtb
cmp
sbb
push
jmp
loopne
test
jae
jne
mov
cli
mov
jno
xor
mov
callw
mov
faddl
inc
imul
sub
pop
shl
add
jmp
pushf
aas
insb
adc
sahf
loope
and
cmpsb
and
mov
hlt
js
fs
jne
xor
pop
mov
dec
lock
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
pusha
jo
add
test
jne
xchg
push
add
xorb
push
add
add
aaa
push
leave
lret
cmpl
loopne
stc
inc
jg
or
jge
mov
or
jle
es
sub
sub
and
pop
adc
fsubrl
pop
jl
or
adc
push
clc
pop
inc
popa
inc
test
pop
lea
cmp
jbe
mov
pop
arpl
pop
add
and
adc
je
test
jne
pop
or
inc
xchg
std
sub
jb
push
or
push
xor
xor
add
adc
movb
inc
enter
js
adc
rcrb
or
rcll
jg
xchg
scas
jl
jno
mov
inc
and
dec
push
ret
push
jbe
loop
mov
mov
and
daa
sbb
inc
packsswb
inc
push
lcall
jbe
clc
push
push
jne
add
pop
push
pop
push
jg
pop
call
cmpsb
sub
mov
jl
pushl
push
and
jbe
mov
cmpsl
ljmp
fdivp
adc
sub
or
add
xchg
push
ss
add
pop
inc
loop
or
push
dec
adc
movsl
loopne
shrl
mov
inc
cli
xor
pushl
xor
adc
adc
pop
pop
xchg
push
and
shrl
pop
cmp
mov
orl
das
mov
jbe
ljmp
sbb
pop
pushf
int3
sub
movsb
mov
and
dec
sub
pop
cmp
dec
insb
test
inc
inc
and
data16
add
fnstsw
jnp
mov
outsb
xor
test
ss
movsl
sub
out
rolb
fcoms
popl
mov
sub
and
shl
mov
or
je
cs
and
dec
and
jae
loopne
sub
or
movsb
mov
sti
mov
sub
cmp
add
sub
or
or
pop
mov
pop
cmp
xor
aaa
pop
xor
fcmovbe
dec
mov
jl
add
cmp
clc
jbe
das
add
push
sbb
adc
mov
inc
jmp
add
sahf
jl
and
xchg
jne
sarb
pop
pop
add
mov
jg
pop
jecxz
fistl
pop
or
subb
mov
arpl
inc
jo
xchg
je
adc
dec
das
pop
sti
pusha
jb
cmp
incl
push
mov
and
or
push
mov
mov
mov
add
dec
fwait
mov
out
loop
xchg
sbbb
inc
rcrb
push
add
rolb
cmp
xorl
xchg
pop
push
cltd
test
xchg
pushf
sbb
push
and
add
xchg
xor
cmp
sti
xchg
shr
push
out
push
imul
nop
sub
lods
inc
fstl
mov
cmp
or
push
mov
xchg
inc
xchg
fsubrs
jb
push
xchg
dec
add
inc
xor
and
cmc
dec
mov
and
adc
fldln2
push
cmp
sbb
sbb
fcmovb
call
sbb
dec
and
adc
addr16
jle
sub
lea
sbb
mov
lods
pop
add
mov
jmp
or
add
lret
mov
and
popa
and
cmp
test
push
sbb
push
test
push
sbb
jne
subl
mov
sarl
das
movl
inc
add
cmpl
enter
xor
rcr
fists
cmc
inc
cmpl
add
cmp
pop
push
cs
aam
je
add
das
lods
adc
jmp
movl
je
test
cmp
lock
lea
mov
inc
inc
inc
ljmp
fwait
mov
jne
push
sarl
cmp
pop
mov
jmp
test
syscall
movsl
aaa
add
cmp
iret
ret
adc
rcll
insl
in
jmp
pushf
pop
sbb
lret
in
hlt
push
ret
jo
fistl
lcall
inc
mov
xchg
pusha
jne
xlat
lcall
mov
orl
jno
jge
mov
jmp
mov
push
cmp
je
adc
or
jne
xchg
add
mov
pop
pop
jmp
mul
clc
or
push
inc
inc
incl
jge
mov
icebp
cmp
pop
loopne
pop
mov
mov
sub
jg
shl
jge
leave
sbb
adc
mov
cltd
and
sub
testl
add
test
jecxz
cmpl
repnz
xor
mov
loopne
aas
push
adc
mov
xor
inc
adcb
inc
sub
in
repz
popf
and
insl
in
adc
pop
je
imul
addb
inc
dec
fs
sub
call
dec
je
add
mov
sbb
dec
xchg
jo
and
orl
rclb
or
xor
mov
cs
jno
fiaddl
ja
and
fsubr
push
pop
data16
ret
push
test
pop
cmp
inc
add
push
les
and
sti
push
push
cmp
push
les
cmpb
mov
les
mov
mov
movsb
dec
inc
std
jbe
add
sbb
pushf
jbe
pop
mov
or
sub
and
lret
push
sub
mov
xor
cmp
mov
or
push
sub
adc
rolb
sub
xor
add
ret
sbb
cmp
xor
movsl
xlat
lret
add
and
mov
lock
adc
and
adc
in
add
pop
shlb
adc
push
adc
nop
negb
push
add
push
dec
sbb
or
repz
movl
test
or
mov
dec
inc
mov
aam
decb
cmpw
jne
or
add
daa
mov
inc
jnp
add
pop
loopne
mov
sbb
lcall
fidivs
popl
fnsave
sbb
adc
inc
inc
mov
jp
push
pop
jmp
je
cs
sar
mov
je
jg
sbb
or
sti
and
add
mov
addl
adc
loope
test
mov
push
sbb
jmp
fists
lock
hlt
or
leave
out
xor
sti
es
sti
jnp
fiadds
dec
pop
push
mov
mov
in
inc
jae
fs
sbbl
ret
mov
mov
scas
xchg
inc
cmp
sbb
mov
jne
je
mov
cs
push
je
je
mov
cs
std
add
dec
add
jl
or
or
adc
loope
inc
incl
test
xor
mov
inc
sbb
int
frstor
nop
mov
ret
and
pop
sbb
mov
jb
rorl
add
pop
push
addr16
test
and
push
icebp
jno
push
sub
std
xchg
xor
push
pop
add
sbb
je
jnp
jbe
push
adc
ds
adc
dec
adc
lret
xchg
fiadds
lcall
in
jno
ficomps
lock
cmp
jne
or
lock
mov
cmp
jo
mov
jo
sbb
in
mov
je
or
daa
dec
add
lcall
xor
aas
stos
or
js
mov
sbbl
add
incl
cmp
adc
push
addb
and
adc
imul
jo
fcmovnb
dec
add
push
fdivr
jne
fnstenv
imulb
testb
mov
mov
hlt
cmpsl
push
mov
adc
add
icebp
lea
adc
mov
fisubrs
jnp
jle
or
in
inc
aam
data16
shrl
inc
icebp
fisubl
add
sbb
xor
cmp
lea
push
mov
movl
inc
add
dec
hlt
je
mov
arpl
sub
add
fs
add
mov
hlt
cmpl
cli
add
push
inc
mov
aaa
enter
mov
jb
daa
and
adc
mov
aaa
icebp
roll
add
ljmp
adc
dec
jmp
mov
and
enter
sarl
sbbb
pop
pop
mov
push
push
popa
lea
push
mov
cmc
jmp
jno
daa
push
add
cs
add
pop
xchg
jbe
push
push
pusha
push
rclb
loopne
jge
pop
pop
adc
mov
adcb
out
ffree
adc
out
mov
js
adc
mov
inc
pusha
cmp
mov
xchg
push
cmpb
sub
xor
addb
inc
lods
pop
jnp
inc
and
push
mov
adc
movsl
scas
cmp
push
aaa
jecxz
xchg
and
test
add
adc
xchg
subb
cmp
lcall
fsub
push
adc
adc
sbb
push
xchg
push
test
pusha
es
in
clc
mov
adc
mov
jp
loope
and
mov
pushf
sub
pop
mov
xor
jmp
sub
push
jo
inc
inc
mov
arpl
sub
inc
add
test
sbb
sub
in
push
test
inc
and
jne
and
shl
push
add
jo
pop
sahf
or
fsubl
sbb
inc
pop
push
cmpb
dec
mov
ljmp
dec
dec
jne
cmp
pop
js
push
sbb
cmp
or
sbb
imul
jg
jbe
out
and
push
aas
in
shr
mov
jmp
xchg
cmp
rolb
ljmp
xchg
sbb
mov
sbb
fimull
mov
dec
fmuls
fdivl
in
or
ljmp
jnp
xor
lods
sub
rclb
mov
pop
imul
and
in
movsb
cmpb
adc
nop
shll
sbb
dec
scas
pop
aas
and
mov
and
mov
js
sbb
je
jo
out
repnz
daa
inc
mov
addb
jmp
pop
inc
ret
outsb
adc
mov
xor
cmp
sbb
add
ret
add
mov
lds
mov
dec
pop
orl
addb
and
inc
ficompl
stos
js
xchg
mov
push
loopne
push
rorb
loope
scas
push
subl
push
pop
leave
out
sti
je
addr16
mov
push
fstpl
rep
inc
je
testb
popf
in
mov
stos
or
je
adc
xor
mov
retw
adc
mov
push
cmpb
cmpsb
inc
popf
loopne
popf
add
sbb
shll
adc
push
push
or
push
jmp
sbb
sbb
popa
pop
push
inc
xchg
or
clc
test
decb
cmp
jns
push
push
addb
cmp
outsb
mov
cmp
jp
inc
test
xchg
inc
sub
push
push
sbb
rolb
mov
in
dec
sbb
mov
push
rcrb
or
mov
pop
inc
fldl
push
cmp
jle
jne
rolb
or
xchg
push
add
push
push
or
xchg
push
movsb
iret
jno
movsl
mov
xchg
mov
xchg
orl
sbbb
in
pop
lods
xor
mov
jo
movb
cltd
cmp
add
jo
add
push
rcrb
out
scas
inc
cmp
push
cmc
je
jmp
mov
daa
push
push
inc
add
jp
xchg
inc
inc
jnp
inc
sti
roll
mov
mov
mov
pop
inc
and
pop
xor
push
inc
mov
movsb
mov
xor
and
mov
dec
loopne
les
cmpb
xor
add
push
inc
faddl
adcb
sub
sti
jecxz
test
jle
fcoms
mov
add
cmp
clc
mov
in
xor
scas
sub
ja
addl
sbb
sub
sub
push
int3
insb
mov
out
mov
or
push
cmpsl
add
fsubrs
add
or
loop
add
push
js
or
add
push
and
daa
pop
stos
jle
push
lds
repnz
lock
rorb
add
jo
fs
hlt
xor
xor
addb
mov
or
xor
cmpsb
xor
pop
aas
xor
add
cmpsl
jnp
test
add
popa
adc
pop
divps
pmulhuw
inc
dec
ret
fists
aaa
ja
aad
fnsave
in
mov
push
pop
mov
adc
or
cmpsb
insb
or
rcrb
add
into
mov
sub
or
xchg
mov
inc
adc
mov
jl
std
data16
ficoml
or
adc
mov
pop
cmp
dec
sbb
xor
cmp
adc
cmp
and
pop
xchg
aam
push
adc
push
aad
scas
into
adc
pop
dec
es
or
sbb
fildll
inc
arpl
add
cmp
inc
xor
cmp
insb
fiaddl
dec
inc
dec
inc
adc
push
fimull
int3
lea
inc
ret
rorb
lods
cmp
push
into
std
mov
andb
add
stc
lods
or
lds
mov
pop
pop
push
sub
or
and
aaa
mov
je
add
pop
ret
or
loop
popa
cs
lret
jns
and
sub
aam
xor
xor
push
jbe
and
adc
sbb
jo
xchg
adcl
daa
sbb
mov
out
jo
rorb
lret
repz
jg
cmp
push
mov
push
ja
add
js
xchg
imul
and
ja
addb
movl
adcl
mov
adc
insl
bound
or
mov
xor
dec
or
inc
sbb
insl
dec
rclb
adc
or
dec
mov
add
mov
inc
les
xor
testl
add
adc
and
int
push
xchg
push
inc
imul
les
add
dec
testb
adc
outsl
pop
lahf
cmpsl
push
and
sub
jl
mov
mov
sbb
fsubrl
lret
mov
xchg
dec
ljmp
xchg
repnz
and
xchg
jbe
adc
inc
cmp
mov
nop
pop
adc
inc
or
and
cmp
in
add
jbe
xchg
aaa
push
div
movb
lods
insl
imul
and
lret
dec
aam
mov
and
push
daa
enter
rorl
add
sub
jnp
cli
mov
lahf
mov
ljmp
mov
repnz
push
sbb
xchg
sbb
mov
pop
fld
xchg
mov
sbb
mov
adcl
mov
or
jmp
adc
add
pop
mov
inc
arpl
mov
sub
hlt
mov
xor
or
pop
xor
cmp
daa
xchg
jo
mov
and
bound
mov
loope
adc
or
push
dec
or
cmp
push
enter
xchg
roll
sbb
inc
adc
int
int3
nop
testb
fimull
and
xchg
cld
jmp
aaa
nop
or
xchg
pop
popa
pop
subb
test
mov
add
dec
lods
or
fdivs
pop
pop
leave
jne
pop
shlb
aas
dec
xchg
inc
mov
push
xor
sbb
lods
fcoml
adc
xor
sbb
rcrb
inc
push
and
imul
test
sub
mov
decb
xor
pop
jmp
adc
mov
xchg
je
adc
push
dec
xor
jl
mov
push
adc
xchg
mov
loopne
loop
push
adc
cmp
sahf
adc
and
and
rcll
jbe
adc
out
int
dec
scas
data16
xor
add
std
add
dec
cmp
in
aas
sahf
inc
loopne
add
xor
rolb
lcall
scas
hlt
sub
sub
fdivl
ret
in
popa
add
mov
test
je
sub
xchg
mov
shll
mov
loope
cs
icebp
xchg
push
bound
add
jne
mov
enter
mov
jne
cmp
push
pop
enter
jmp
std
mov
outsb
mov
or
push
je
dec
adc
fcompl
test
mov
out
popl
rorb
enter
mov
lds
sbb
sub
stos
dec
rorb
cli
rorb
and
lds
mov
xchg
call
cmp
pop
sbb
dec
shrb
cmpl
adc
add
jb
jmp
mov
incb
push
and
nop
lahf
mov
mov
loope
and
loope
inc
jo
and
inc
popf
and
push
out
xchg
ljmp
sub
popa
push
mov
cltd
cltd
push
or
popa
xchg
repz
xchg
push
adc
sbb
pop
in
imul
push
mov
imulb
mov
jno
shlb
adc
jmp
pushf
mov
cmp
mov
jmp
test
sub
add
add
cmp
or
mov
inc
pop
fadds
pop
cli
mov
pop
mov
xchg
jne
mov
jmp
data16
arpl
and
leave
outsb
pop
or
sbb
test
adc
std
filds
cmp
mov
adc
add
stos
or
sub
cmp
shlb
clc
jbe
sub
add
mov
xchg
cmp
movsb
push
pop
or
add
mov
push
int3
ljmp
sbb
add
pop
lods
call
push
jb
mov
sbb
out
or
push
inc
push
pop
dec
cmpsb
sbb
pcmpgtb
jbe
ljmp
stos
push
mov
push
popa
int
jp
cmp
inc
rolb
jmp
push
mov
mov
enter
hlt
jne
je
jb
sub
sub
add
out
xor
adc
call
ja
sub
js
xor
sarb
fldt
or
inc
pop
data16
xor
jl
mov
jmp
push
push
mov
adc
add
in
or
cmc
xchg
movsl
and
push
insb
rolb
inc
les
lods
ret
push
outsl
mov
adc
sub
cmpsl
nop
adc
xor
adc
ficoms
xor
sub
and
scas
mov
jne
mov
dec
call
daa
xor
lea
dec
out
daa
add
ss
pop
pop
xor
andl
push
out
ret
pop
enter
adc
int
enter
adc
adc
test
jb
in
adc
adc
enter
adc
adc
loop
sub
jl
jo
push
xor
mov
cmpsb
or
push
inc
bound
pusha
test
pop
bound
or
pop
loop
jo
out
jb
and
lea
add
pop
jbe
loopne
push
shrb
jle
add
push
inc
les
or
rcrb
lods
push
in
mov
aas
jae
mov
inc
and
das
jmp
cmp
addb
dec
in
divl
xchg
pusha
mov
jg
xchg
adc
movsl
insb
sbb
dec
jnp
js
and
adc
inc
or
mov
lods
sti
mov
cmp
add
mov
addr16
rcll
loopne
into
mov
or
int
rol
mov
mov
rcl
mov
push
add
xor
push
push
inc
push
sub
nop
imul
jne
xorb
pop
popf
ljmp
pop
xchg
movsl
cmp
mov
and
mov
cltd
ljmp
das
mov
adc
or
mov
insl
jnp
jle
pop
das
cmc
ret
and
sbb
ret
data16
dec
cmp
cs
dec
mov
pop
aad
mov
add
loope
imul
mov
xchg
or
cmp
xor
mov
inc
or
lea
push
inc
xor
push
sbb
and
dec
js
and
lea
insb
mov
mov
push
rcll
adcb
push
rcll
dec
pushf
fisttpl
sbbl
and
test
cltd
sarl
push
lahf
inc
loope
jo
push
insl
inc
out
dec
cmp
push
cli
adc
std
jbe
mov
sbb
push
pop
rorb
or
add
incl
cmp
xor
cmp
data16
cmp
add
mov
sbb
mov
pop
sub
mov
inc
or
xchg
jecxz
or
pop
dec
xchg
add
int3
pop
push
mov
ljmp
and
data16
add
cs
push
clc
dec
add
daa
sub
adcl
pop
lock
mov
jmp
daa
push
xor
xchg
inc
adc
push
adc
inc
inc
cmpsb
inc
fs
cmp
scas
push
sahf
lea
adc
add
mov
jbe
push
sbb
cmp
pusha
sti
mov
lea
push
xlat
jb
push
fs
xchg
mov
jo
js
fstps
ds
sbb
jno
ret
sbb
lahf
cmp
xor
out
mov
jle
or
je
pusha
mov
inc
sbb
cmc
inc
aad
xchg
pop
jle
push
mov
jmp
pop
mov
sbb
rol
sbbl
movsb
mov
shll
inc
cmpsb
sbb
into
push
pop
mov
or
mov
cmp
sahf
js
insb
sbb
in
gs
or
in
aaa
sub
inc
lock
jb
addr16
ds
dec
inc
add
inc
pop
repz
iret
cmpsl
or
rolb
sbb
loop
xchg
add
fsub
aaa
or
rolb
rcrb
imul
push
cmpl
cmp
mov
loopne
push
cs
or
xchg
dec
sbb
cld
push
and
add
jmp
push
mov
pop
xchg
pop
or
ds
popf
pushf
cs
add
sbb
js
xchg
cli
add
shl
adc
or
sbb
cmp
stos
add
loop
scas
scas
jmp
sar
stos
aam
add
data16
movsl
mov
lahf
loope
movsb
sub
fwait
add
mov
inc
das
test
xor
mov
cmp
xchg
inc
mov
push
mov
xor
cld
lock
push
push
cmp
aad
bswap
insb
add
and
dec
sub
pop
flds
addl
inc
rcrb
sbb
cmpsl
cmc
aad
and
push
mov
aam
pushf
xor
cwtl
lods
and
mov
lea
jge
mov
add
adc
stc
inc
stos
push
mov
loop
add
cmp
test
sub
jo
js
and
pop
fstl
pop
cmp
int3
nop
push
clc
xchg
xor
loopne
and
dec
iret
pushf
cmp
popa
mov
pushf
dec
ja
rorl
xor
int3
data16
hlt
sahf
push
pop
jp
inc
cmc
lea
int3
pop
lret
sahf
mov
ret
fs
push
inc
adc
sbb
lods
cmp
lret
push
cmp
pop
fs
mov
bound
and
cmp
sbb
fwait
push
and
push
sub
sub
leave
scas
in
xor
pop
ja
rolb
jne
mov
fs
aam
adc
jp
aam
push
xlat
jnp
lds
dec
xor
mov
cld
jno
jg
decl
and
sbb
cld
rolb
inc
mov
stos
out
repz
adc
bound
inc
repnz
shll
add
daa
xchg
ja
jno
mul
es
add
cltd
sbb
pusha
ja
popa
inc
add
pop
adc
jo
or
in
add
les
insb
sbb
or
xchg
stos
clc
shlb
int
and
jmp
lea
xchg
jae
fdivr
dec
dec
aas
jl
jmp
adc
dec
lods
push
add
outsb
cmp
mov
pop
pop
sub
or
mov
mov
je
pop
leave
sarb
jae
loopne
cli
or
fcompl
lea
orl
in
test
xor
out
test
cltd
mov
mov
ljmp
in
repz
push
jae
lea
jmp
cmpl
cmp
jg
sub
shll
sarb
mov
or
xchg
and
mov
mov
and
loop
in
pop
mov
dec
bound
mov
hlt
xchg
inc
insl
adc
dec
xchg
fidivrl
push
movsl
pop
add
aad
pop
pop
add
jecxz
frstor
aas
mov
push
sbb
je
mov
add
popa
mov
add
add
pop
xchg
cmp
pop
sti
loopne
stc
out
push
jnp
push
jb
sub
pop
xor
jae
dec
xor
or
cmp
outsb
rolb
fs
cs
icebp
pop
add
in
sbb
shl
pop
cmp
nop
xchg
test
mov
xor
lahf
dec
popa
imul
sub
mov
and
lret
and
aam
cmp
dec
dec
sub
mov
mov
jmp
jo
test
xchg
add
movsb
xor
jnp
inc
sbb
push
xchg
aam
and
mov
lea
jmp
cmp
or
pushl
icebp
mov
mov
in
xlat
xchg
sub
or
jbe
stc
sbbl
mov
mov
or
jmp
sbb
aam
rcrl
arpl
mov
adc
fwait
in
xor
fbld
push
in
sub
sbb
mov
and
nop
mov
mov
jb
dec
enter
ficomps
rcrb
jnp
je
cmpb
movsl
sub
xor
pusha
shlb
and
cmp
dec
push
shrb
dec
outsl
xchg
insl
sub
or
lret
push
pop
lea
sub
jmp
repz
roll
or
andb
dec
jecxz
inc
testb
cmpsl
xchg
hlt
mov
mov
or
push
out
or
fidivs
je
mov
or
shlb
xchg
pop
out
jmp
fnstenv
push
or
je
test
iret
mov
movsb
dec
cmp
cmp
std
test
cmp
dec
or
sub
lea
adcb
cld
cmp
rcrl
and
mov
nop
test
dec
mov
xchg
sbb
xchg
inc
cs
hlt
jns
lock
jb
pop
and
pop
or
pop
pop
pushf
pusha
sub
xor
and
cmp
jae
fsubrs
or
push
sub
sbb
je
push
adc
hlt
jne
push
js
pop
scas
pusha
add
adc
loopne
fnstenv
xor
lods
push
mov
adc
adc
repz
sub
loopne
and
mov
scas
out
or
inc
mov
mov
pop
test
cmp
rcrb
xor
sti
lahf
aad
cmp
sbb
mov
outsl
pop
inc
cs
dec
pop
orb
xor
inc
xchg
add
mov
das
loop
lahf
push
hlt
neg
sbb
and
cmp
or
mov
sub
sti
sub
push
adc
lret
pop
push
push
add
and
push
jae
mov
loopne
sub
clc
mov
or
paddw
push
add
mov
enter
add
in
test
fldcw
mov
aas
sahf
jo
jnp
lods
in
loope
shll
scas
sub
in
cmpl
jne
cmp
jbe
or
jne
jne
pop
adc
lock
mov
jae
inc
sub
push
nop
pop
int
gs
imul
mov
movsl
sub
pusha
shll
movsb
xchg
add
ret
or
sbb
xor
test
push
int3
out
inc
jge
cmp
push
inc
push
test
push
pushf
movsl
das
loop
daa
test
or
add
rep
sbb
aam
mov
cmp
and
je
fidivs
push
mov
add
or
pop
push
pop
movsl
mov
aam
inc
lcall
adc
lahf
xchg
lea
push
mov
imul
or
addl
ret
xor
ds
pusha
and
in
inc
movsl
mov
xchg
sub
out
lahf
out
add
pop
shl
or
mov
mov
adcl
sub
pop
movsb
or
movsl
clc
fsubrl
pop
imul
out
adc
dec
mov
daa
in
insl
jge
mov
push
stos
push
js
ds
in
mov
sbb
sbb
rcr
sti
inc
sbb
pop
xor
or
cmpl
add
adc
jmp
push
inc
aaa
adc
pop
xor
pushf
out
inc
ret
stos
mov
push
mov
pop
cld
mov
jge
jg
or
push
cmp
movaps
sbb
pop
jb
or
adcb
ss
sub
or
cmp
adc
jo
adc
roll
sub
xchg
stos
xchg
dec
jmp
lea
cmp
inc
inc
xor
cmp
addr16
inc
dec
mov
xor
xor
lods
cmp
pusha
cmp
sbb
xor
inc
subl
les
cmp
mov
or
add
testb
add
jnp
mov
or
dec
arpl
jp
rolb
rcrb
ss
pusha
jbe
xor
mov
sub
mov
cmp
cmpsl
pop
icebp
or
mov
mov
hlt
push
xlat
popa
mov
xor
xor
adc
ljmp
cmp
daa
sbb
push
and
sub
imul
out
add
mov
ljmp
std
fsubrs
cmpsb
mov
je
aaa
fwait
sub
mov
ds
cmp
sahf
test
pop
sbb
xchg
cmp
cmp
add
mov
repnz
add
sarl
imul
pop
enter
ljmp
lock
call
inc
ret
mov
shlb
sbb
inc
add
andl
jmp
inc
inc
mov
jecxz
call
lods
addr16
pop
arpl
test
xchg
stc
test
xor
inc
scas
data16
add
cmp
fsubr
adc
xor
repnz
xlat
add
cmp
addr16
and
or
push
jmp
xchg
xchg
adc
and
mov
or
or
and
jno
xor
sbb
loopne
xor
or
xchg
inc
sub
bound
imul
into
pop
loopne
enter
jno
mov
push
and
xor
mov
xchg
mov
je
mov
nop
cmpps
clc
adc
scas
in
jbe
sarb
cmp
out
pop
adc
sub
fcomps
add
and
sbb
fdivrl
push
jle
out
pop
sbb
mov
loope
or
jge
adc
add
mov
shll
orb
jmp
lea
adc
inc
cmpl
mov
gs
sub
out
pushf
test
pushl
dec
jmp
in
rcr
push
sbb
mov
mov
add
dec
test
add
or
loopne
xchg
cmp
or
adc
lods
cmp
jb
out
int3
rcrl
mov
mov
enter
repnz
fldt
lea
fistps
fistpl
adc
add
xor
outsb
je
add
popf
pushf
xor
je
add
sub
cmp
lods
push
fimuls
fldenv
je
dec
push
xchg
fs
push
jae
mov
decl
fs
ja
cmpb
jne
fidivl
test
and
test
sbb
pushl
popa
pop
push
jb
adc
in
les
xchg
rorl
mov
pop
push
fmulp
pop
push
dec
or
dec
mov
loope
xchg
lea
mov
jae
aam
dec
jmp
je
stc
jae
leave
jmp
dec
jnp
ffree
sub
dec
and
je
ja
int3
mov
push
xchg
nop
rcrb
movsl
adc
add
mov
fisttps
sub
loope
add
pop
dec
add
adc
pushf
dec
push
mov
mov
out
mov
xor
lea
rcll
jae
adc
fld
adc
ljmp
mov
testb
out
das
dec
and
and
push
shrl
filds
fdivrl
bound
fnstenv
and
pop
push
push
dec
adc
outsl
xor
jle
movsl
sub
popf
rclb
enter
rcr
xchg
mov
ja
shrl
or
mov
test
imul
or
fsub
add
or
add
add
xor
aaa
inc
scas
push
push
arpl
xchg
pop
lahf
mov
xor
int3
pop
add
sub
xor
loope
pop
mov
punpckhdq
cld
je
lea
add
call
xchg
inc
je
dec
dec
mov
add
adc
xorl
jbe
sbb
xor
je
data16
daa
and
bound
cmpsl
lea
cmp
inc
xor
xchg
cmp
decl
sahf
cli
xor
arpl
jbe
mov
rorb
out
add
xchg
das
xchg
addb
or
mulb
and
push
sbbb
rol
mov
push
mov
mov
sahf
fucomip
mov
push
cmpb
ret
push
jae
lea
pusha
or
scas
sbb
sbb
push
cmpl
adc
dec
pop
ret
les
lret
mov
inc
or
outsb
sbb
inc
jbe,pt
mul
adc
imul
push
mov
cmpb
xor
push
je
cmp
jae
inc
jmp
push
enter
sub
mov
xor
or
dec
dec
mov
xchg
loope
test
jo
and
mov
loope
ret
mov
dec
in
push
sti
add
inc
sahf
icebp
xlat
in
push
cltd
sub
testb
push
mov
and
test
sub
push
jne
aam
movsl
mov
popf
jae
mov
xor
or
pop
push
fistl
or
lea
stos
mov
cmpsb
jns
dec
cmp
and
jbe
test
andl
push
lea
ja
sub
xchg
or
out
jmp
push
inc
pusha
lret
sahf
sub
sub
jae
and
pop
jns
aam
inc
roll
xor
sahf
ljmp
fsubrp
sbb
mov
into
mov
fwait
insb
idivl
mov
fwait
stos
lds
add
mov
lock
cmp
jb
inc
mov
push
adc
ds
push
adc
jo
push
mov
mov
lods
enter
orb
and
scas
jnp
sub
push
inc
or
add
in
adc
es
inc
mov
pop
repz
or
and
in
pop
mov
aaa
and
push
dec
sbb
ja
or
jg
shll
fdivrl
fadds
or
jmp
push
scas
testl
movsb
test
mov
data16
xchg
mov
jg
cmp
pusha
sub
dec
lods
out
popf
dec
daa
add
xor
jmp
subb
cmp
loop
push
add
inc
add
push
and
xchg
add
push
pop
shrl
loopne
or
cmp
stos
cmc
push
cmp
cli
add
jmp
pop
add
xchg
rcrb
cltd
dec
sub
fiaddl
mov
rol
push
push
sbb
cmpl
xor
adc
add
cmp
or
in
or
push
sub
fcmovnb
gs
push
sbb
dec
or
dec
and
sub
cmp
and
add
jle
add
adc
enter
add
xchg
add
dec
or
dec
sub
ret
rcr
pop
or
rep
mov
subl
inc
or
mov
xchg
iret
addr16
or
ds
xchg
icebp
push
mov
addr16
sarb
push
mov
jmp
push
cmpl
xor
jne
pushl
sbb
scas
push
mov
dec
cmp
add
add
add
clc
jne
loop
sub
pusha
pop
es
movsl
fnstcw
mov
jb
lea
adc
clc
add
cmp
rclb
cmp
hlt
jmp
push
insb
xor
out
or
test
fstpt
lds
inc
mov
or
cs
mov
cmp
mov
stc
ja
icebp
cmp
pop
dec
pop
sub
lahf
and
notb
test
orl
mov
adc
or
mov
dec
sub
sbb
cmp
test
inc
bound
jo
add
ja
sbb
push
dec
cltd
mov
mov
jnp
enter
sbb
sub
pop
rcrb
push
aaa
arpl
jns
add
push
pop
jl
mov
xchg
das
mov
pop
jno
mov
test
cmp
dec
pop
push
and
test
inc
xchg
lods
cltd
jmp
jge
pop
dec
inc
push
rorl
push
jnp
pop
inc
cwtl
imul
daa
sub
cli
gs
jle
jne
lcall
cmpsb
ja
inc
movsb
in
jne
adc
ja
xor
test
lock
adc
das
mov
mov
or
and
add
add
sti
pop
test
xchg
cmp
fsts
add
aas
adc
ret
xchg
or
cmpl
or
pop
out
pop
stos
adc
adc
shll
mov
push
or
lock
enter
dec
or
inc
jle
call
adc
sbb
orl
xor
daa
push
push
xchg
mov
sub
xlat
adc
add
aam
xor
sub
fadd
or
mov
aaa
sbb
sub
or
cmp
add
test
cld
cmp
mov
push
loope,pn
into
xor
mov
clc
push
lea
iret
aam
or
ret
dec
adc
push
mov
loopne
enter
sub
mov
movsl
and
pop
imul
push
mov
pop
fdivs
mov
add
cmp
mov
je
sbb
js
and
aas
inc
push
stos
insb
cmp
adc
mov
loope
stos
daa
movb
insb
dec
dec
mov
les
sub
push
mov
mov
pop
xchg
clc
add
add
cld
test
mov
or
sbb
rorb
es
cltd
sar
pop
bswap
into
in
pop
or
pop
push
jne
nop
std
push
and
push
psllq
add
pop
xor
push
xchg
mov
aaa
dec
mov
jmp
pop
xor
or
mov
stos
xorl
add
push
in
js
xor
mov
ljmp
inc
dec
call
pop
shrb
pop
adc
and
adc
loopne
imul
popf
add
sub
mov
push
fidivl
or
shr
mov
rcr
jne
push
jmp
mov
mov
fsts
pop
add
psrlq
decb
cs
mov
orl
in
add
cld
gs
sbb
cmp
inc
daa
mov
hlt
leave
xor
push
out
enter
jno
or
xorb
or
movzwl
test
je
test
popf
fisubrs
xchg
xchg
mov
sbb
mov
pop
push
jmp
lods
or
mov
jp
jae
cmpl
push
inc
jo
add
add
das
jmp
xchg
mov
pop
fidivl
add
sbb
adc
daa
dec
clc
ds
fisttpl
sub
push
inc
loop
sub
loopne
popa
xor
xchg
and
sub
scas
sbb
xorb
inc
sbb
or
pop
mov
outsl
test
aaa
inc
ret
js
add
jl
dec
push
nop
pusha
pop
rclb
add
xchg
mov
fidivs
mov
mov
pusha
pop
sti
stos
pop
inc
adc
dec
cwtl
int
push
xor
push
cli
cmp
add
pop
jle
call
mov
mov
push
push
and
xchg
xchg
outsb
dec
and
in
lahf
dec
or
jmp
add
cmpsb
sbb
fsubl
ret
dec
cmp
inc
or
test
movl
pop
or
or
stos
enter
mov
outsl
insb
mov
sub
push
mov
daa
mov
hlt
mov
push
pusha
repnz
in
ret
jp
add
jmp
push
xor
push
cld
sbb
cmp
ret
jge
sbb
cmp
sti
orb
dec
clc
loopne
mov
pop
clc
and
sub
std
test
push
sub
fdivrs
mov
sub
cs
and
scas
fisubrs
add
adc
popa
inc
test
mov
xchg
rcl
push
push
push
pop
pop
loopne
push
mov
mov
add
sbb
cmp
push
push
daa
jge
adc
or
sarl
or
mov
mull
inc
adc
mov
test
xor
add
jl
subl
popf
pop
nop
jae
sbb
gs
xor
lea
sub
call
rorb
int
pop
pop
insl
jecxz
jg
adc
jp
add
or
or
call
jmp
sub
lock
sub
push
movl
jo
dec
add
inc
jmp
jle
rorb
ror
rolb
push
ja
mov
and
pop
clc
push
cld
mov
cwtl
cmp
repnz
fbstp
je
xor
fstl
mov
sbb
push
push
dec
push
cmp
lock
xor
mov
mov
cmp
dec
mov
dec
rcl
pop
pusha
sub
jbe
or
sti
mov
out
pusha
jmp
into
out
push
loope
mov
loopne
shl
dec
xor
dec
inc
push
loop
add
add
decb
and
sbb
ds
inc
fs
and
stos
push
popf
test
loop
sbb
aaa
add
test
or
imul
std
imul
je
or
or
ss
jne
movsb
rorl
sbb
dec
bound
add
dec
lock
test
push
xor
mov
add
or
sbb
cmc
jb
jl
push
push
pop
mov
out
adc
sub
and
lods
test
dec
inc
in
jnp
subb
mov
cwtl
fistpl
push
jo
ret
out
fsubl
negl
psllq
mov
popa
cmp
xlat
inc
add
jmp
mov
xchg
or
cwtl
add
or
popf
icebp
shl
adc
xchg
dec
js
jae
mov
xchg
xor
cwtl
pop
or
dec
out
xor
rcll
test
rcrb
xor
jp
xchg
jmp
cs
push
es
jecxz
mov
in
add
cwtl
fmuls
jge
jp
push
cmp
inc
adc
inc
mov
sbb
loope
shlb
sti
loopne
mov
xor
test
mov
push
inc
fsubrs
adc
mov
push
xchg
lods
adc
or
sub
fldt
rolb
xor
push
pop
adc
into
xor
add
mov
push
lret
call
sub
push
push
and
js
push
sbb
add
or
les
lock
test
pop
aam
inc
cmp
xor
sub
add
fwait
pusha
xor
daa
mov
or
add
loope
mov
movsb
jg
icebp
jmp
adc
insb
add
dec
lock
or
rorl
sub
ljmp
mov
sbb
xchg
rolb
loope
add
mov
cld
inc
test
adc
jb
pop
push
aam
enter
enter
sub
adc
sbb
jb
pop
xchg
or
in
fbstp
xchg
or
cwtl
nop
pop
add
je
and
cltd
inc
stos
jle
sub
jp
push
clc
enter
pop
push
dec
push
fcom
aam
adc
movsb
adc
and
or
nop
xchg
dec
aam
ret
stos
in
fdivrs
jl
popa
add
dec
ja
and
cmp
cmpl
out
insb
sarb
or
jne
aaa
mov
mov
mov
js
xor
imul
test
push
pop
sub
dec
aas
and
jmp
ss
idivb
mov
inc
sub
dec
dec
inc
pop
call
das
push
adc
rclb
inc
insl
incl
mov
imul
inc
add
jmp
push
aam
xchg
clc
and
add
push
ljmp
jl
push
mov
cmovge
mov
cs
js
je
jbe
dec
cwtl
or
cli
mov
add
test
add
or
push
xor
popf
add
sti
fildl
or
add
push
lea
je
mov
adc
dec
bound
clc
dec
pusha
jmp
add
sbb
mov
or
and
lret
push
inc
mov
dec
add
push
sbb
mov
pop
xchg
ftst
mov
mov
inc
jp
aam
push
adc
pop
pop
add
sbb
adc
pop
inc
stos
xor
adc
xor
sub
fldl
add
fiaddl
gs
pop
mov
loopne
mov
in
push
insb
shlb
add
daa
bound
xchg
inc
in
push
cs
outsb
mov
sbbb
addr16
mov
xorl
cmp
push
ja
xor
dec
enter
sbb
negb
pop
inc
adc
xor
rorb
cmp
mov
fimull
mov
iret
adc
cmp
inc
ret
pop
pushf
outsl
or
sbb
pop
mov
push
rolb
imul
js
mov
or
insl
aaa
or
imul
jae
pop
imul
push
int
negb
aas
or
sbb
dec
adc
sub
and
jne
push
lcall
add
sub
inc
data16
pop
mov
and
data16
add
pop
adc
shrl
dec
in
pop
lock
pop
in
cmp
je
adc
dec
es
sub
xor
sub
adc
movsl
cmp
ja
jns
ss
and
inc
call
add
push
mov
cmp
scas
cmpsb
jmp
push
aas
cmp
sub
lahf
repnz
push
jnp
add
inc
jmp
rolb
or
hlt
jno
cmp
addr16
jb
test
mov
pop
pop
imul
mov
and
sbb
scas
sbb
push
inc
shll
andb
push
jne
rorl
adc
leave
or
push
test
test
pop
pop
test
add
loopne
adc
aam
cwtl
push
or
lea
dec
pop
hlt
lock
xchg
pop
loopne
pop
mov
xchg
fldl
push
push
mov
popa
pusha
mov
ja
jb
and
cmpsl
aam
jl
mov
shrl
js
lret
push
push
push
movb
je
and
ds
loopne
jae
ja
sbb
adc
addb
mov
test
xchg
mov
cmp
subl
sbb
inc
push
jle
add
sbb
mov
cmp
imul
mov
lcall
je
push
add
fsubr
std
fmull
andl
sub
cli
mov
test
aas
je
xor
xor
addr16
scas
sub
dec
sbb
adc
int
adc
and
nop
in
jle
movb
sbb
push
cmpsl
adcb
mov
test
xchg
addr16
or
fadds
sbb
sbb
add
nop
insb
push
sbb
cmp
imul
push
ljmp
andb
and
lret
push
push
rcrb
cmp
clc
rclb
add
mov
push
mov
inc
lods
or
aam
jne
cmp
imul
pop
adc
loop
int
jg
roll
adc
add
mov
lea
or
or
xchg
add
mov
ret
jl
xor
pushf
jne
lods
inc
shlb
jb
mov
xchg
add
leave
lea
out
cmp
es
iret
shr
jle
lea
fstl
xor
xor
sub
cmpsl
test
loope
shlb
push
jmp
xchg
xchg
ret
mov
sub
push
mov
shl
ret
mov
and
add
popa
movsl
test
xor
jmp
or
je
sbb
xor
pop
mov
fidivrs
xorl
jl
ja
insb
lock
out
jne
orl
ret
std
dec
adc
imul
cmp
pop
ret
jmp
fbld
or
adc
add
test
mov
pop
or
mov
movsl
sub
add
mov
lds
add
lods
push
out
data16
sub
mov
dec
and
in
xchg
les
mov
add
test
push
jne
mov
loop
push
shrb
pop
mov
lds
ss
cmp
je
xor
lahf
mov
xorl
pop
jae
insl
fwait
push
lahf
and
hlt
cld
inc
rcr
xlat
xor
dec
mov
addr16
aad
adc
xchg
sub
lock
sbb
pop
testb
je
daa
and
mov
jl
push
jmp
stos
sbb
into
cmp
lods
ds
cwtl
insl
push
push
mov
jl
inc
mov
rorb
add
push
aas
mov
aas
xchg
adc
out
loop
ljmp
sub
idivb
addr16
mov
test
jae
jne
popa
movl
sub
sbb
cmpb
mov
shlb
and
sub
sahf
mov
and
sti
insl
adc
pop
mov
push
cmp
or
ss
jp
xor
enter
daa
call
or
or
test
push
mov
push
sub
dec
jb
sbb
lock
fstl
lea
add
jo
loopne
or
pushf
and
fisubs
mov
adc
lods
adc
lods
xor
lock
outsl
sti
push
and
inc
lock
add
sbb
adc
sbb
je
mov
push
gs
je
pop
push
sbb
fs
pusha
insb
adcl
fsubrl
or
dec
pop
cmp
mov
icebp
xlat
testl
je
cmp
je
popf
add
mov
lds
arpl
ret
mov
imul
mov
hlt
sti
cmp
pop
mov
sub
inc
and
dec
add
jne
mov
dec
roll
mov
adc
push
mov
sub
lock
lock
pop
lock
lock
inc
mov
mov
loope
hlt
dec
jmp
mov
push
push
pop
pop
sbb
add
sbb
sbb
jo
lods
shll
and
fistpll
in
push
mov
lret
add
push
and
ss
jge
shlb
push
lock
sub
xor
cmp
xor
jne
add
sahf
push
flds
and
pop
cs
sbb
push
test
or
or
inc
ret
push
xor
sbb
ret
and
pop
mov
sbb
adc
and
fisubrl
inc
in
jne
adcb
and
shlb
xor
sbb
jns
pop
mov
lea
std
jo
ljmp
in
popf
and
cmp
jns
push
ret
jmp
clc
xor
test
je
push
aas
jne
js
in
sti
outsl
fcoms
je
mov
pop
cmp
sbb
jg
rcrb
fidivrs
insl
movsb
sub
sub
cmpb
loopne
in
je
sbb
add
pop
and
js
push
and
xorb
jle
push
lea
test
mov
mov
sbb
dec
push
add
sbb
or
adc
mov
fcoms
js
les
jo
popa
add
mov
leave
push
push
xor
push
or
xorl
sub
jns
rorl
inc
sub
subl
ret
hlt
add
lock
mov
mov
mov
or
cmp
cmpsb
mov
dec
mov
add
sbb
cltd
lret
stos
mov
dec
xchg
mov
dec
scas
loope
enter
add
pop
mov
insb
inc
cmpl
daa
dec
xchg
pop
sbb
or
inc
pop
jg
adc
jbe
push
jne
and
mov
sub
xor
inc
xchg
push
andl
outsl
mov
ljmp
nop
xorl
out
insb
cmp
jmp
inc
sub
icebp
sub
xchg
dec
pop
xchg
mov
aad
into
add
adc
mov
adc
and
push
pop
xchg
mov
push
pop
and
sub
ret
sub
divb
sub
push
adc
mov
jecxz
cmp
dec
in
adc
sub
lahf
push
adc
inc
push
sub
stos
pop
pop
adc
js
daa
mov
stos
add
mov
hlt
testl
or
add
add
movsb
shrl
push
inc
jge
push
ljmp
xor
fmull
push
rcl
out
pop
mov
mov
sti
aam
ficoms
maskmovq
js
inc
xor
stc
movsl
add
add
ret
mov
bndldx
sbb
adc
or
push
push
xchg
fcoml
jp
loop
jmp
daa
or
cmp
sbb
sbb
mov
andb
jae
and
mov
orl
xor
add
push
cmp
js
jns
aaa
cmp
loope
mov
cmp
xchg
push
pop
push
hlt
and
test
jne
mov
sub
sti
aam
sbb
and
cwtl
push
xor
divl
push
cmpsl
jns
cmp
insb
in
mov
int
adc
ret
lea
test
inc
cmc
xchg
jmp
push
sub
dec
cwtl
sub
pop
icebp
push
pop
insl
cmp
mov
and
jecxz
sub
jp
push
inc
aad
aas
adc
ret
or
pop
xchg
jae
and
jae
sbb
push
cwtl
dec
pushf
flds
cmp
jp
xchg
and
mov
iret
rorb
lret
or
push
ds
or
fprem
xchg
outsb
adc
mov
adc
cmp
jp
add
inc
mov
pop
call
push
xor
mov
sub
shlb
imull
jmp
andl
xor
out
inc
mov
xchg
jp
divb
push
add
push
push
xor
dec
outsb
xlat
dec
cltd
sbb
inc
orl
inc
leave
pop
loopne
and
sub
and
cmp
jge
loopne
add
or
mov
and
mov
shr
and
push
mov
adc
add
shll
add
pushf
push
inc
push
add
ja
inc
xor
test
bound
push
inc
mov
js
pop
jmp
xchg
test
cmp
mov
xchg
adc
or
sbb
sbb
add
mov
add
ja
or
out
sub
add
cwtl
xchg
add
repz
push
inc
xor
cmp
ret
rclb
sbb
sahf
or
cmp
mov
mov
dec
adc
js
movl
push
push
push
fcom
test
hlt
dec
ret
or
inc
push
fs
push
cmp
daa
or
clc
mov
add
jmp
sub
loopne
push
pop
pop
adc
sarl
insl
inc
cmc
js
mov
ds
js
pushl
popf
mov
pop
mov
rcrb
dec
jnp
mov
test
push
mov
inc
out
or
rcl
and
lahf
or
insb
ret
into
int3
pop
pop
xor
xor
sbb
and
mov
enter
jl
andl
adc
js
popa
or
outsb
mov
pushf
cltd
arpl
outsb
inc
leave
pop
fs
imul
shll
dec
xor
pop
jo
push
and
sbb
jecxz
scas
inc
xor
lock
adc
cmp
lcall
add
xchg
sarb
sbb
adc
imul
adc
inc
inc
loope
push
std
and
cld
jl
call
xor
mov
test
sub
pop
add
adc
xchg
sub
xor
inc
mov
pop
and
push
pop
cmp
adc
adc
mov
push
gs
sbb
enter
fdivs
sub
jno
jecxz
xor
movsl
add
sub
inc
or
mov
movsl
mov
push
pop
lock
fcoml
push
adc
bound
rcrl
lock
repnz
cmp
cmp
add
ja
imul
push
jg
aaa
ret
testb
je
mov
xchg
sub
or
js
std
fbstp
jl
loope
xor
push
popa
jg
or
adc
push
andb
incb
push
fistpll
xchg
ds
mov
inc
mov
mov
int
leave
pop
adc
add
cmc
mov
mov
bnd
mov
mov
pusha
inc
mov
aas
mov
stos
add
data16
add
sub
or
mov
pop
insl
and
movsl
or
rcr
sarl
aaa
add
or
cmp
cmp
inc
mov
daa
cmp
push
nop
or
xorl
and
mov
jbe
sub
lea
mov
cmp
test
cmpxchg
mov
jae
lock
icebp
imul
push
mov
add
mov
mov
mov
imul
and
fimuls
add
dec
jbe
cwtl
fs
repnz
adc
outsl
dec
fsubrl
fwait
test
nop
shlb
pushf
mov
jne
jb
push
sahf
aam
mov
aad
test
push
add
sbb
fcomps
push
je
mov
and
and
push
cld
inc
xor
push
mov
sbb
mov
sbb
xchg
outsb
movsb
popf
pusha
xchg
mov
idiv
nop
fsubs
mov
or
cltd
idivl
test
imul
mov
cwtl
add
mov
pop
or
sub
movsl
pusha
insb
in
xor
addb
mov
lds
scas
inc
or
add
movsb
jl
adc
pop
xor
and
lods
push
addl
push
pusha
or
jmp
fldenv
sbb
push
mov
inc
fst
sbb
je
gs
push
sbb
push
inc
adc
adc
std
je
add
sub
push
test
push
or
int
subl
add
jge
outsl
pushf
adc
cmpl
cmc
sub
inc
push
popa
and
sahf
jno
adc
inc
sub
inc
adc
mov
mov
lea
pusha
nop
mov
or
inc
sub
sbb
mov
shll
mov
pusha
cli
xchg
sbb
adc
sub
cmpsb
sbb
mov
push
in
push
or
jae
mov
add
pop
roll
mov
or
inc
dec
loope
sub
inc
jne
sub
orl
sahf
sbb
mov
in
cmp
movsl
cltd
imul
mov
dec
insb
xor
or
addb
ret
testl
sbb
test
push
adc
lahf
jp
jge
adc
sbb
dec
in
dec
cmp
jo
jne
adc
xchg
sub
enter
add
mov
sbb
int3
adc
rolb
outsb
pop
cmp
fs
in
inc
add
mov
jl
rorl
pop
push
and
pop
aam
aas
cmpsl
outsb
cmp
jmp
ss
cmp
pop
mov
cmpl
fucomi
inc
cli
push
cld
jnp
push
daa
add
inc
mov
mov
pop
adc
inc
insb
shr
inc
add
cmc
ljmp
inc
subb
xchg
sbb
pop
pop
fisttps
add
cmc
xor
mov
insb
std
cmc
add
sbb
pop
and
adc
or
push
mov
in
inc
lret
inc
fsubs
jne
mov
es
sbb
xlat
mov
and
je
xlat
shlb
push
jl
jo
pop
adc
inc
lock
nop
add
addr16
aam
insl
dec
clc
jns
pop
pop
ja
or
and
ja
sbb
idivb
add
pop
test
jmp
mov
aam
in
dec
adc
pop
in
sti
jno
xchg
sbb
mov
push
xchg
push
mov
mov
imul
inc
pusha
pop
iret
js
sub
push
sbb
adc
cltd
fmull
jl
lock
mov
and
adcb
and
das
xor
std
int3
adc
inc
mov
mov
cmpb
dec
adc
push
add
jne
xchg
adc
out
movb
pop
dec
sub
mov
inc
inc
inc
loopne
xchg
xor
je
xchg
and
shll
jns
dec
jne
pop
lcall
movsb
and
jmp
sarb
add
ljmp
and
add
push
sub
pop
mov
dec
push
lea
cmp
mov
sub
or
add
in
lds
idivb
addr16
add
and
pop
xchg
jbe
daa
pop
push
cmp
popa
insl
mov
or
sub
jo
in
pop
shr
jo
cmp
xor
push
sbb
adc
lcall
iret
sub
and
jae
dec
inc
das
cmp
cmp
or
push
iret
push
hlt
inc
xchg
lret
jne
and
pop
shlb
jbe
pop
mov
sbb
push
cmp
xor
inc
pop
cmp
inc
add
sti
jecxz
or
je
in
shl
or
fstpl
inc
mov
sbb
xlat
dec
int3
mov
push
push
ds
add
xor
adc
xor
cmp
pop
adc
in
and
lcall
movsb
loopne
push
das
cmpsb
test
mov
cmp
inc
sbb
mov
push
mov
ficoml
les
jnp
loope
aad
adc
cmc
pop
or
fs
add
or
inc
or
pop
testl
ret
loope
jmp
es
inc
push
test
and
dec
and
enter
or
cmp
fisttps
repz
or
cmp
mov
xor
fildl
xchg
adc
lds
sbb
mov
sub
mov
add
and
dec
dec
mov
mov
into
add
inc
xor
sbbl
jnp
xor
adc
lock
jo
aaa
push
loopne
add
testb
add
mov
lods
or
js
neg
ret
xlat
loope
test
dec
shll
jae
mov
cmpsb
add
js
add
adc
inc
subb
adc
sti
or
jo
push
or
sbb
and
sbb
fstpt
sbbl
sub
pop
mov
lods
push
push
sub
insb
dec
and
out
mov
push
jmp
push
push
adc
xchg
adc
jo
push
cmp
addr16
rcrl
push
cmpl
jo
testl
sbb
rclb
pop
jo
and
shll
xchg
out
psraw
add
in
mov
add
mov
mov
dec
push
mov
cmp
nop
push
rcr
lock
scas
xchg
mov
cmp
add
rcl
adc
pusha
adc
adc
sahf
push
mov
mov
inc
pushf
inc
and
stos
sti
jp
xchg
adc
and
addr16
adc
mov
ja
in
daa
sbb
leave
jnp
jmp
jmp
in
or
xor
mov
ja
clc
push
or
lea
pop
xchg
cmp
das
dec
sbb
jecxz
pop
popf
push
xor
test
adc
std
xchg
xchg
cmp
inc
shl
rcr
lahf
test
adc
adc
lret
adc
ret
xor
and
enter
and
and
popf
and
mov
arpl
andl
fucomi
lahf
sbb
bound
sub
sub
mov
adc
sub
icebp
and
das
adc
mov
cmp
add
mov
cmp
sbb
mov
push
sahf
xchg
jnp
pop
or
mov
cmp
les
adc
adc
movsl
xor
inc
roll
into
loope
or
out
xorl
dec
inc
outsb
jmp
dec
addr16
push
adc
clc
cmp
jle
jg
xor
push
xor
mov
loop
js
mov
mov
inc
mov
mov
rorl
sub
out
test
inc
pop
adc
mov
mov
sti
xchg
pop
or
adc
cmpsb
mov
push
xchg
jae
std
and
test
mov
andl
fldl
in
push
pop
lods
xchg
test
call
xchg
push
and
leave
sub
jp
cmpl
sub
add
mov
dec
lret
lcall
outsb
xchg
add
in
imul
test
xor
fs
frstor
or
push
adc
movsb
mov
pop
inc
aas
push
jnp
sub
adc
aas
mov
pop
shlb
dec
inc
push
or
xor
cmp
lods
add
sbb
add
int3
push
adc
test
xchg
jns
or
add
mov
cmp
push
or
lea
fsubrl
push
ret
jge
gs
sub
adc
aam
test
add
cmp
cmp
daa
inc
and
lock
je
adc
fmull
push
or
pop
test
popl
sbb
push
test
push
dec
cmp
fcoms
cmp
ds
dec
sbb
ljmp
and
xor
mov
add
mov
inc
pop
test
inc
fldenv
jne
shl
and
inc
movb
inc
dec
movsl
in
icebp
jne
sti
dec
movsl
add
ret
mov
jmp
into
int3
test
jmp
mov
dec
inc
aam
add
imul
sub
dec
inc
test
adc
adc
lret
orl
into
and
sbb
inc
inc
mov
jl
or
dec
inc
out
ret
rorl
ret
pop
ret
dec
jle
dec
push
pop
inc
push
inc
push
fs
popf
pop
shlb
mov
fs
pop
or
adc
lret
or
nop
addl
pop
orl
lea
das
je
xchg
inc
mov
inc
sbb
add
dec
sub
aam
jl
jo
mov
push
dec
push
inc
and
aam
mov
dec
dec
sti
sbbl
nop
ja
lock
sub
mov
movsl
sbb
push
sti
cmpsl
inc
test
pop
enter
ret
push
fwait
add
sbb
or
incb
sarl
fs
nop
ret
mov
push
dec
bound
pop
sbb
and
dec
lock
cmp
addl
iret
enter
push
mov
cmp
inc
sbb
ret
js
and
adc
jmp
push
xor
divl
sti
out
mov
sahf
out
bound
adc
adc
dec
ficoml
adc
or
and
or
jne
fidivl
dec
mov
les
bnd
mov
addr16
mov
pop
adc
inc
cli
jp
mov
xor
inc
sub
pop
push
mov
xor
jne
mov
je
ret
or
cmp
gs
test
xor
dec
bound
pushf
push
mov
adc
pop
hlt
or
sbb
sbb
stos
roll
mov
and
ficoms
push
test
and
sub
outsl
jo
in
aas
aas
je
scas
xchg
test
aad
adc
loopne
fsubl
jb
dec
shl
add
outsl
js
pop
add
insb
add
xor
or
xor
xchg
jle
adc
adc
add
cmp
ja
push
sbb
in
pop
orb
and
pop
testl
pushf
add
sbbl
into
ja
push
sub
imul
inc
sbb
inc
jno
sbb
out
or
add
push
sub
loope
or
xor
imul
test
cmp
mov
scas
test
and
fisubrs
cltd
jno
mov
add
add
push
mov
ficompl
inc
mov
xchg
xchg
aam
fcomps
mov
jge
add
imul
xor
xchg
push
sub
sahf
sub
int3
negb
push
inc
xor
hlt
jo
scas
xor
aaa
pshufw
mov
sbb
dec
dec
inc
hlt
shrb
xor
inc
cmpsl
adc
sbb
lds
push
stos
xchg
add
jnp
xor
inc
sbb
pop
out
push
pop
jl
cmp
mov
inc
or
jle
push
push
loopne
cltd
jnp
shlb
dec
xor
stos
lret
xor
mov
add
pop
pop
xor
movb
test
or
jp
inc
jae
test
xchg
je
dec
test
lods
inc
adc
or
in
mov
enter
ds
push
pop
pop
cmp
push
clc
test
call
push
rorb
xorl
popa
fidivrl
mov
and
push
jecxz
jp
bsf
mov
or
dec
sub
sbb
icebp
fiadds
or
sub
and
cmp
sub
rcr
popa
es
push
jmp
subl
adc
push
dec
insb
movsl
mov
mov
mov
cmpsb
push
mov
jg
in
js
add
insl
test
js
mov
add
out
je
mov
or
lock
packsswb
sti
fiadds
sarb
sbb
xchg
into
xchg
xchg
inc
ss
adc
inc
xchg
mov
sbb
and
mov
roll
dec
sbb
inc
sbb
inc
test
and
mov
loop
imul
adc
adc
dec
out
and
xchg
loopne
dec
imul
lock
lea
out
or
mov
adc
push
inc
rcl
add
add
call
sub
hlt
mov
xor
or
add
rclb
add
test
sbb
lcall
aam
mov
cmp
pop
sbb
pop
or
movsl
xlat
cli
pop
fsubrl
push
push
lock
inc
jo
movntps
and
xor
out
bound
sub
and
inc
cmp
scas
add
lock
sub
sbb
mov
add
fs
sbb
sbb
cmp
bnd
shl
pop
inc
in
cmp
pop
in
fildll
in
sbb
pop
gs
in
rorl
inc
lock
pop
lock
jl
cmpsl
arpl
mov
pop
or
push
add
and
sub
ljmp
mov
push
dec
cmp
jbe
jmp
sub
adcb
add
inc
outsb
andl
imul
popa
cmpsl
std
cmp
mov
and
pop
icebp
sub
adc
or
sarb
je
cmp
je
pop
dec
cmc
fisttpll
adc
push
adc
push
ret
push
mov
repnz
dec
add
or
sti
xor
sub
clc
pop
mov
adc
dec
rorb
push
inc
dec
dec
sbb
jmp
je
cmp
jne
pushf
fsts
jo
or
pop
ljmp
and
lods
cld
inc
mov
push
push
dec
mov
jb
push
xchg
pop
jo
rorl
stos
leave
call
adc
pop
jmp
sbb
sub
pop
addl
add
iret
add
pop
xchg
cmpb
and
sub
cli
push
sub
inc
push
add
test
roll
mov
push
lds
push
xor
in
ret
rcrb
jge
xchg
cmc
xchg
iret
inc
lea
lcall
add
bound
shl
adc
stos
inc
cs
push
stos
in
or
rolb
lock
add
cmpsl
sbb
pop
pop
dec
xor
lret
adc
or
movsl
out
mov
mov
or
je
adc
inc
push
sahf
xchg
sbb
dec
sbb
test
pop
in
nop
dec
cmpsb
add
es
xchg
and
jmp
jne
cltd
add
add
push
movsb
sub
jle
xchg
jle
sub
or
push
ja
lods
xor
push
adc
push
les
pop
pop
in
sbb
xor
cmp
in
xor
cmp
enter
cmp
or
add
in
sarl
sbb
inc
pop
push
in
sbb
inc
jne
dec
jno
loopne
sub
ret
je
inc
add
pop
insl
xchg
sarl
inc
push
rorb
cmpsl
sti
add
insl
push
push
cmp
les
int
or
sbb
and
ss
pop
pop
dec
push
push
nop
lret
push
sahf
out
jns
xchg
push
jns,pt
icebp
sub
mov
pusha
addr16
ret
mov
push
pcmpeqw
add
andl
mov
and
push
push
push
pop
sbbb
add
mov
lret
insl
sub
push
sbb
sub
adc
pop
push
imul
pop
pop
lds
jle
add
lret
push
push
mov
outsl
sbb
pusha
test
inc
iret
in
fsubl
hlt
pop
mov
popa
mov
je
ret
mov
push
sahf
mulb
mov
push
sub
aaa
shlb
div
cmp
adc
mov
outsl
or
mov
dec
faddl
jg
add
mov
pop
inc
mov
sbb
hlt
cltd
fsubl
js
mov
xlat
int3
cmp
adc
and
movsl
mov
popf
call
shr
call
clc
xor
addr16
pop
testb
out
cmp
jne
orl
inc
mov
fisubs
aaa
dec
jmp
test
add
popa
pop
mov
push
xchg
inc
mov
mov
xor
sbb
xor
ljmp
mov
adc
jb
mov
cwtl
loopne
jne
or
sbbb
lock
pop
add
pop
push
inc
sahf
mov
jg
jne
mov
sub
push
repnz
jl
and
push
sub
jne
or
push
into
int3
xor
test
jne
aam
pushf
cmp
inc
out
imul
add
xor
add
xor
in
sbb
insb
mov
pop
add
or
dec
or
push
mov
mov
out
lcall
add
mov
xlat
shl
sub
clc
adc
cmc
dec
jp
je
cmpsb
out
add
ret
or
cmpsl
jno
outsl
call
add
and
jae
test
in
cli
mov
in
mov
lahf
inc
adc
sub
push
addr16
ret
js
add
cld
jbe
push
fwait
mov
sub
push
inc
lods
add
ja
rolb
sub
mov
add
mov
cmp
jne
and
adc
mov
add
ret
in
xchg
dec
add
sub
mov
jb
mov
popa
inc
pusha
jmp
ror
push
add
movsb
loopne
les
inc
pop
lds
add
dec
push
jl
jmp
stc
cmp
call
mov
or
add
lods
mov
xor
sbb
je
sub
adc
mov
cmpxchg
adc
daa
xchg
add
cmpsl
mov
psubd
out
pop
push
push
push
test
in
cmc
add
cmp
add
aaa
mov
inc
std
adc
adc
or
adc
mov
or
and
call
adcl
lea
cmp
mov
jb
or
add
ret
or
inc
fcompl
pop
or
adc
ficoms
sbb
mov
fisubrl
mov
ret
sbb
inc
call
add
jecxz
mov
cmpsb
scas
mov
adc
aad
sub
test
dec
push
adc
dec
shrb
xorl
dec
dec
lods
mov
enter
ret
pusha
lock
das
sub
jg
sbb
mov
mov
mov
cli
add
out
shll
push
leave
push
xor
pop
or
push
pushf
movsl
pop
fwait
add
cmp
mov
fnstcw
jno
outsb
push
subb
sti
inc
inc
lock
add
mov
add
dec
dec
dec
pop
lods
sbb
sar
pop
aam
leave
push
movsb
mov
nop
mov
sub
or
or
and
pop
push
adc
repnz
sbb
push
dec
stc
add
aad
adcl
push
lea
add
call
mov
cmp
push
cmp
or
pop
ret
push
pop
pop
jmp
sbb
sbb
inc
sub
pop
xchg
add
xlat
jle
xchg
or
movsl
imul
push
shrl
xchg
add
inc
lods
mov
pusha
adc
aad
repnz
mov
andb
adc
jae
sahf
adc
cmp
inc
rclb
mov
or
clc
sbb
rcll
ret
or
xorb
rolb
push
ljmp
mov
inc
inc
mov
mov
push
clc
and
pop
inc
andb
dec
or
or
fistpll
lock
and
push
rclb
xchg
and
cmc
mov
cmpb
push
push
xchg
push
xchg
decl
mov
pop
sub
xchg
mov
or
in
inc
or
push
std
movsl
cmp
pop
andl
xchg
inc
and
sbb
xchg
jge
dec
xor
and
pop
pop
jnp
stos
scas
add
push
stos
and
test
mov
push
xor
jae
jbe
sbb
pop
aaa
in
mov
xor
dec
int3
subb
mov
iret
in
call
cmp
xchg
sbb
into
jbe
push
cmp
adc
out
clc
sub
push
int3
sbb
clc
pop
jbe
test
iret
jp
dec
push
push
dec
push
push
push
test
outsb
leave
sub
insb
sbb
adc
loope
test
pop
and
sub
movsb
adcl
ljmp
lret
jo
mov
lea
mov
sahf
movsl
pop
xor
repz
sbb
adc
add
cmp
jbe
mov
shlb
adc
enter
or
and
aam
or
sbb
xchg
inc
mov
add
jb
popa
and
mov
dec
add
dec
add
jp
nop
add
and
and
movsb
shrb
rorb
dec
add
mov
mov
mov
push
jl
cld
ficoms
sub
mov
push
aaa
sub
jo
push
mov
jo
sub
rorl
mov
mov
rcll
mov
popa
xchg
mov
xchg
mov
dec
adc
add
push
sub
push
push
pusha
xor
push
adc
and
push
loop
call
add
cmp
rep
sti
mov
mov
lock
mov
pop
ret
aaa
xor
and
xchg
sbb
xor
cmp
sbb
push
popa
mov
shll
jns
mov
test
dec
ds
xchg
or
pushl
js
lock
or
inc
addl
xchg
sti
push
hlt
mov
inc
hlt
add
sub
xchg
std
push
sbb
push
inc
fs
and
lods
daa
add
ljmp
insb
add
mov
sub
cwtl
mov
movsl
sbb
cmp
or
mov
pop
das
add
inc
jne
loopne
les
add
push
stos
and
add
sub
xchg
ss
add
xchg
movsb
cs
cwtl
pop
adc
push
adc
mov
mov
mov
outsb
push
clc
shrl
sarb
sbbb
std
ljmp
cld
push
in
ja
pop
cmp
jge
pop
addr16
or
pop
add
stos
inc
and
sbb
sub
lea
ret
push
mov
dec
push
cmp
movl
leave
mov
cmp
outsb
cmp
pop
arpl
sbb
arpl
adc
aam
dec
sbb
xorb
or
cmp
xchg
cltd
mov
test
pop
mov
cmpb
insb
or
or
add
push
jo
mov
rclb
or
pop
mov
sub
cld
adc
sbb
inc
je
lods
fnstsw
pop
jp
inc
push
add
sbb
fistl
test
mov
pop
lods
mov
xorl
mov
cwtl
inc
in
movsb
dec
je
inc
mov
inc
in
inc
push
mov
sbb
jl
test
jg
movsl
sbb
jg
rolb
andb
sub
mov
fidivl
cmp
or
loope
popf
fadds
es
out
cwtl
xchg
xor
mov
shr
not
push
or
push
fists
sbb
sub
xchg
lods
push
es
xor
push
add
push
mov
xor
pop
addr16
shrb
iret
vmovsldup
lcall
or
sbb
ja
cmpsl
jns
xor
sarl
adc
sub
sahf
out
dec
dec
dec
pushf
sbb
and
dec
pop
inc
clts
lahf
test
movl
pop
clc
jno
movl
xchg
push
cmp
adc
xorb
add
incl
add
shll
add
jno
or
xor
pop
or
push
push
mov
adc
or
cmp
pop
jecxz
pop
je
lret
add
in
test
addr16
xchg
cmp
push
mov
push
shlb
lds
in
cmp
xchg
inc
in
sub
inc
adc
pusha
jp
lret
xchg
push
add
add
adc
add
sbb
sub
jl
lret
inc
push
add
dec
pop
xor
loopne
push
adc
imul
mov
and
ret
inc
loopne
dec
cmp
rorl
cmpl
insb
lods
mov
test
loopne
cmpsb
sar
testb
cmp
push
cli
das
bound
mov
xchg
rol
jo
fcmovnb
sahf
and
cmp
fiadds
dec
sub
push
jo
fmull
xchg
and
push
push
ret
repz
mov
xor
jge
xor
cmp
icebp
sbb
sbb
dec
and
hlt
cmp
xor
or
pop
push
mov
rep
insl
dec
mov
es
add
jmp
sub
jae
mov
ficomps
scas
dec
xor
sbb
sub
add
mov
sub
pop
push
mov
es
adc
jae
push
push
xchg
int3
mov
push
push
mov
or
loopne
adc
nop
inc
inc
cmp
je
pop
sub
cmc
lods
add
pop
adc
push
arpl
leave
aas
mov
inc
lock
mov
push
push
jl
sbb
adc
imul
mov
jge
xor
rcrb
insb
sub
pusha
mov
enter
into
in
push
mov
jo
dec
lea
scas
push
iret
test
mov
das
inc
add
lret
push
xchg
dec
mov
sub
push
push
push
fcmovnb
rcll
push
add
in
rcrb
mov
push
xchg
mov
push
sub
add
add
mov
shlb
xchg
push
movsb
mov
je
inc
and
loope
mov
add
adc
adc
ret
jno
incl
xor
aaa
je
add
jnp
out
mov
inc
adc
sbb
sub
cmp
inc
ss
mov
sbb
xlat
pop
push
inc
mov
sbb
sbb
aam
push
loopne
xor
cmp
cmp
decb
es
bound
pop
jmp
mov
sbb
adc
push
insb
xor
add
inc
subl
xor
adc
inc
pop
outsl
jb
int
pushl
xchg
sub
test
js
mov
mov
adc
adc
and
fistl
xlat
add
stos
push
rcrb
xchg
andl
xor
push
or
xchg
pushf
xor
adc
testb
in
lcall
dec
test
ret
or
bound
and
addl
push
adc
roll
or
cmp
jbe
or
sti
addb
pusha
ss
shrb
or
mov
mov
and
rol
add
inc
or
add
rcrb
sbb
lock
pop
dec
dec
jae
mov
inc
xor
sub
jecxz
xor
xchg
in
jbe
mov
push
jb
cmp
aas
pop
add
push
or
jge
pop
sub
jnp
fidivrs
sub
add
sbbl
nop
pusha
sub
or
pop
dec
pop
dec
imul
and
leave
sbb
xchg
xor
jecxz
test
inc
dec
dec
add
inc
dec
jl
jbe
adc
dec
ret
and
rclb
push
rcrb
push
lods
xchg
pop
adc
cmp
dec
mov
pop
pop
jl
int3
sti
ret
jo
leave
jbe
adc
push
mov
je
push
cmpsl
adcl
je
mov
jl
jno
push
mov
mov
push
inc
adc
jnp
inc
or
and
pop
iret
jbe
add
jl
shll
insl
jne
pushf
sbb
sub
mov
push
and
sbb
pop
push
pop
inc
dec
aad
cmp
insl
jno
adc
adc
stos
ds
loope
push
inc
jmp
dec
ss
sbb
dec
add
jne
sub
out
outsb
sar
pop
jp
sub
fstpl
mov
push
mov
cli
cmp
jb
jae
ror
mov
test
es
aam
adc
hlt
jae
addb
inc
mov
jns
leave
or
mov
adc
push
push
addr16
hlt
inc
add
and
in
add
xor
sub
mov
jo
push
xchg
mov
or
pop
ja
jp
pop
adc
sub
or
adc
loope
inc
add
and
pop
dec
add
jo
inc
xor
push
mov
inc
and
adc
or
xor
les
jo
sbb
decl
test
push
cmp
nop
dec
push
in
popf
sbb
add
push
sbb
push
das
arpl
cmpsb
out
pop
cmp
inc
test
aad
lock
ss
push
movsl
or
js
xor
pop
mov
pop
mov
cmp
call
add
xchg
inc
mov
push
inc
shll
daa
addr16
inc
fbstp
push
cmpsb
mov
imul
pop
or
rcrb
inc
ds
enter
fadd
subl
mov
insb
adc
daa
or
ja
mov
cmp
add
jbe
sbb
dec
or
and
inc
sbbw
dec
outsb
fistpl
dec
and
dec
enter
push
or
cmpsb
dec
pop
fwait
mov
mov
roll
lahf
sbb
cmp
insb
insl
rol
mov
push
cltd
or
add
cmp
pop
add
out
hlt
inc
jb
insb
fs
push
ret
or
pop
sub
jo
test
add
push
xor
push
or
imul
repz
clc
test
push
movsl
arpl
andl
sbb
test
push
adc
push
pop
pop
xchg
push
mov
mov
or
add
enter
js
inc
insb
aas
and
xchg
or
and
and
fsubl
cld
es
or
sbb
sub
nop
daa
sub
nop
sub
nop
sub
add
nop
sub
fsubrl
jmp
jmp
cmp
gs
ds
xor
or
push
cltd
xchg
dec
inc
sub
and
sti
frstor
or
xor
sbb
pop
mov
mov
sbb
dec
ja
es
xor
cld
popa
ret
xor
or
in
pusha
adc
mov
test
pop
add
or
fwait
pop
pop
inc
sbb
adc
cltd
dec
sbb
rcll
mov
push
pop
je
in
out
sbb
xchg
shlb
mov
aas
lods
mov
hlt
cmp
push
int3
orps
mov
push
out
lock
sbb
fldz
std
jmp
sbb
mov
push
lods
shl
sti
icebp
xchg
jle
adc
add
sub
loopne
ficompl
cmp
xchg
pop
int
outsl
jmp
cltd
push
xor
or
inc
movsb
and
andl
mov
lea
push
pop
mov
insb
xor
pop
into
add
es
mov
gs
pop
mov
inc
xchg
movsl
mov
push
adc
test
adcl
jl
xor
jne
movsb
push
mov
fadds
adc
loop
daa
jl
and
insl
mov
push
lea
push
mov
and
leave
xor
adc
test
sbb
lods
xchg
adc
xchg
mov
cltd
cltd
nop
jns
inc
sub
inc
or
addr16
push
adc
gs
dec
mov
movsl
add
test
jns
mov
xor
jg
jle
add
xor
adc
mov
mov
jecxz
bound
mov
pop
lds
and
push
es
jnp
sahf
out
fiadds
or
mov
lahf
imulb
fimuls
enter
repz
xor
shr
adc
rol
aam
and
or
xchg
popf
in
cld
jge
mov
jl
clc
jl
adc
push
arpl
daa
adc
lahf
xor
pop
push
xchg
dec
cmpb
mov
jne
jg
dec
ds
xor
enter
arpl
mov
repnz
pop
and
lods
pop
add
mov
push
popa
lea
adc
mov
xchg
clc
adc
xchg
cmp
les
lock
jecxz
inc
mov
adc
adc
jne
xchg
cmp
xor
mov
fs
loopne
mov
sub
mov
lea
mov
incb
mov
pop
push
jp
xor
fidivl
iret
push
inc
int
mov
mov
add
and
outsb
sbb
les
xchg
or
jae
mov
inc
or
sub
jg
mov
cmp
jne
sbb
add
sbb
inc
imul
scas
cmp
jb
and
xor
dec
xchg
fsts
jb
jmp
pop
or
mov
out
cmp
add
adc
es
mov
lea
and
adc
ret
nop
aad
sub
pop
jb
add
insb
lcall
xor
sub
sub
addb
or
cltd
inc
movsl
pusha
loop
frstor
mov
andb
shll
fwait
hlt
sahf
xchg
aam
add
mov
daa
mov
out
add
inc
rcrb
add
fsubs
shlb
pop
lock
push
push
pop
dec
sbb
dec
or
mov
rcll
jmp
dec
xor
adc
and
popa
mov
js
push
cmpsb
orb
mov
clc
mov
mov
test
xor
adc
popf
xchg
and
cmpsb
mul
push
das
sbb
dec
jmp
and
sub
xor
push
xor
sbb
sub
sahf
mov
aam
faddl
decb
xor
or
gs
jge
orb
mov
je
cwtl
inc
add
or
push
lcall
and
and
pop
pop
loopne
aam
add
pop
adc
fdivs
adc
int3
jge
jg
clc
dec
push
mov
mov
pop
jle
adc
test
push
jge
sbb
cmp
or
dec
cmp
jg
mov
out
ret
in
pop
clc
jl
mov
inc
sti
and
adc
sbb
sub
hlt
jbe
jmp
cmpsl
arpl
pushf
sub
pop
ret
and
rolb
int3
out
pop
std
and
pop
mov
testl
outsl
push
andb
rolb
jbe
cmp
ja
inc
stos
mov
push
insl
push
push
sub
inc
mov
jmp
mov
andb
dec
cs
pop
sbb
sub
movb
mov
cmp
dec
push
sbb
int
lea
or
push
add
pop
sub
jecxz
fnstenv
cmpsl
add
fnstenv
ja
cmp
aaa
inc
sub
inc
add
push
sbb
push
mov
shlb
loop
pop
or
nop
adc
cmp
and
adc
and
ret
inc
mov
sbb
inc
int3
scas
dec
adc
fdivrs
inc
jns
adcb
orl
ds
ftst
popa
xchg
and
es
jne
cmp
sub
add
fcoms
push
les
push
into
fwait
dec
push
cmpsl
mov
dec
test
jns
adc
or
sbb
xor
push
lds
adc
adc
pop
mov
or
fisubrs
inc
loop
inc
shl
popa
inc
mov
loopne
mov
push
add
or
or
pop
or
nop
pop
lods
aad
test
jecxz
push
xor
faddl
leave
test
dec
incl
adc
mov
adc
push
jae
or
loopne
bound
dec
xor
je
les
add
jbe
lods
lret
push
add
mov
sbb
pop
sbb
pop
push
nop
adc
add
je
loopne
mov
int3
pop
es
or
pop
fsub
mov
loope
fistl
testl
or
inc
inc
pop
nop
inc
pusha
push
arpl
lods
fadds
sbb
stc
dec
xchg
ljmp
adc
xchg
insl
inc
cwtl
or
fldenv
jno
icebp
fwait
in
pushf
and
push
cmpsl
or
js
mov
pop
adc
pusha
bound
mov
jbe
cmp
push
pop
xor
rclb
aad
flds
or
push
pop
mov
shll
adc
cltd
push
loopne
sub
push
arpl
je
lock
cld
pop
sub
and
cmp
jmp
hlt
lods
inc
cmpl
rcrl
pop
pop
pop
lods
push
push
jbe
mov
xor
add
push
push
or
xchg
cmp
shrl
jmp
or
dec
sbb
push
xchg
push
sbb
sbb
rorl
mov
aam
aam
sub
jg
inc
add
sbb
addl
shrb
fwait
xor
pop
push
adc
out
lret
mov
ret
add
push
adc
icebp
or
scas
dec
ret
bound
push
mov
mov
push
adc
clc
add
cmp
dec
add
adc
add
cmc
lahf
pop
mov
mov
test
mov
and
enter
insl
pushf
xchg
dec
or
xchg
loope
lea
mov
sbb
loopne
ljmp
xchg
or
rclb
inc
pop
mov
subb
popa
cwtl
movsl
add
inc
and
mov
out
fsubp
sbb
xchg
add
sbb
cmp
dec
mov
add
add
je
loop
cmpsb
and
incb
mov
add
cmp
xlat
lods
push
cltd
nop
sbb
push
adc
push
mov
bound
pushf
ja
mov
test
call
add
mov
mov
xor
xchg
and
inc
lods
xchg
rcrb
in
and
clc
and
incb
pop
xor
mov
sub
pop
push
out
pop
mov
mov
pop
jno
pop
pop
js
sub
and
lea
and
and
adc
sub
mov
in
call
rolb
add
pop
loopne
sbb
fsts
lea
dec
xor
data16
push
ss
lret
shlb
inc
cmp
in
add
fisubrs
enter
push
imul
mov
fcomp
mov
sub
push
add
push
lcall
idivb
or
rolb
jo
or
jo
xbegin
jae
faddl
or
icebp
andl
aad
das
stc
dec
add
dec
test
adc
add
fsubrp
sbb
lret
pop
add
gs
test
std
push
lods
in
xor
or
lret
mov
and
or
std
add
mov
call
rcl
and
xor
inc
pop
popf
and
scas
fdivl
mov
push
adc
mov
push
rorl
push
xchg
ja
xor
push
pushl
fldcw
mov
into
jo
pop
adc
and
fstpt
dec
and
or
mov
mov
lea
mov
in
adc
xchg
outsw
cmp
add
aaa
or
jg
jp
cmp
inc
cmp
nop
fmull
or
add
inc
adc
cmp
mov
ljmp
cwtl
outsl
push
lcall
and
cmp
sbb
inc
inc
pop
iret
inc
adc
sbb
scas
mov
std
xchg
popf
mov
addr16
xchg
mov
and
les
divl
and
iret
sbb
incl
outsb
cmpl
nop
popf
mov
movsl
flds
test
mov
sbb
loope
sbb
sahf
mov
ja
hlt
mov
or
stos
cmp
xchg
loopne
popa
and
loopne
add
mov
call
adc
xorl
jb
andl
or
lcall
dec
sub
cmpsl
jmp
push
adc
cmpsb
outsl
xlat
es
inc
in
adc
mov
jle
mov
push
xor
sarl
jo
orps
sub
push
movsl
sub
jnp
push
adc
dec
dec
and
adc
cwtl
sub
inc
jl
lock
scas
out
stc
fistpll
sbb
push
outsl
adc
sbb
loop
dec
dec
mov
ljmp
xlat
test
cmp
imul
addr16
jmp
ret
stos
loope
and
rcl
jmp
inc
sbb
ret
lea
lcall
jne
mov
hlt
inc
cmc
xor
out
mov
add
repnz
mov
outsl
cmp
loop
and
dec
inc
testl
jge
dec
in
cmp
add
push
jl
sbb
push
sbb
pop
jg
push
and
pop
push
pop
bound
lds
xor
ret
lock
add
xlat
jp
xchg
push
leave
jecxz
aad
jo
xor
add
and
imul
out
xchg
lret
pusha
mov
push
xor
mov
call
add
flds
pop
ljmp
dec
movsl
add
jnp
pop
dec
adc
sbb
and
add
adc
push
push
xchg
mov
fcoml
mov
jge
mov
cld
xchg
and
jno
andl
addl
cld
lea
mov
push
sbb
subl
test
rcpps
pop
push
pop
jge
adc
mov
sub
orl
pop
clc
orl
mov
fcoml
cmp
or
popa
sub
mov
sub
add
inc
or
std
xor
jb
cmp
idivl
outsl
xor
ljmp
stc
sub
outsb
add
je
fs
sub
add
les
loope
xchg
sub
or
cmp
jg
jo
dec
pcmpeqw
stos
ret
fidivl
add
loopne
out
or
dec
cwtl
inc
adc
xchg
inc
xchg
out
cmp
push
sub
scas
test
outsl
pop
jo
xor
dec
push
in
add
js
sbb
arpl
mov
sub
mov
or
xchg
cmp
mull
movsb
xor
add
fdivrp
pop
jb
sub
fnstenv
inc
inc
jmp
inc
fs
cmp
pushf
or
pop
sti
fmuls
push
mov
insl
inc
insb
ret
xchg
sub
add
add
xor
dec
test
add
ret
jp
push
test
insl
mov
xor
cs
jne
push
sub
ss
sahf
lock
mov
stos
cmpsb
nop
movsb
ljmp
sub
dec
leave
add
add
into
or
outsl
dec
les
mov
dec
adc
leave
inc
add
cmc
les
push
cli
sbb
roll
ret
int3
mov
push
rcrb
or
push
mov
dec
jge
sub
sbb
stc
cmp
data16
add
loopne
xor
mov
push
stc
dec
aad
xchg
dec
dec
lods
pop
cmpsl
sub
fsubrl
cld
cli
lea
je
rol
jbe
push
push
xor
inc
movsb
lret
dec
fwait
ljmp
lret
cli
imul
xchg
test
cmp
ficoms
mov
dec
sbb
and
outsl
xor
mov
daa
push
sbb
les
mov
mov
and
adc
mov
shl
out
pop
or
pop
mov
dec
add
xor
movsb
mov
sbb
mov
sbb
lahf
xor
pop
xchg
mov
xor
arpl
add
inc
das
xor
mov
cmpsl
pop
jbe
mov
call
push
icebp
cmp
fsubs
cmp
mov
es
pop
cmpsl
shrb
inc
std
inc
test
std
pop
rol
test
add
lret
xchg
sub
movsb
bound
sbb
insb
ljmp
jae
sbb
adc
push
jno
fld
in
sub
inc
es
xchg
xchg
addb
or
adcl
mov
add
adcl
add
jo
dec
adc
add
jo
xchg
loopne
pop
inc
mov
mov
or
scas
dec
mov
push
in
add
xchg
adc
cld
dec
aas
stos
dec
pusha
imul
push
inc
mov
inc
insb
push
bound
cmp
xlat
push
outsb
dec
ljmp
ret
das
ret
dec
push
lahf
aad
or
loop
push
sbb
movsl
cli
push
icebp
inc
add
aas
dec
or
subb
jl
sbb
push
mov
into
fmull
xor
test
sti
gs
cmp
dec
pop
cmp
cmpsl
mov
pusha
cmp
sub
int3
dec
jl
sbb
mov
jge
sarb
add
cmp
lods
ljmp
and
jecxz
add
xor
test
mov
dec
xchg
in
cmp
push
es
push
xlat
pop
cmp
lds
imul
jno
dec
xor
fcom
mov
jle
fnstsw
and
loop
lcall
add
xorl
mov
sbb
sbb
mov
add
divb
and
or
xchg
mov
pusha
rolb
loope
rolb
in
out
mov
testb
call
add
aaa
flds
fs
mov
adc
imul
push
jns
dec
clc
lock
arpl
cli
roll
jl
mov
inc
sbb
lds
aaa
mov
xor
decl
mov
inc
mov
pusha
shlb
popa
and
push
xor
sub
dec
call
xchg
sbb
adcl
out
rcl
add
mov
inc
sbb
iret
adc
inc
push
mov
add
mov
popf
jo
faddl
imul
gs
lea
rcll
cltd
push
add
push
in
movsl
int
lds
aad
add
and
rorb
mov
fstpt
fisttpl
shlb
add
dec
xchg
mov
pop
inc
movsb
xor
lods
dec
subb
sub
jmp
cmp
pop
sub
or
pop
push
clc
and
jb
sbb
addb
call
ret
loop
and
lahf
stc
adc
and
mov
xor
xchg
pop
lock
hlt
cmpl
cltd
or
je
scas
cmpsl
jmp
rclb
aam
loopne
push
rolb
add
clc
stos
sub
daa
inc
cmpb
add
inc
cmp
pop
int3
add
dec
push
xchg
push
call
dec
add
and
je
mov
mov
inc
mov
inc
xor
mov
jecxz
aam
jge
cmp
pop
add
in
mov
adc
xor
xchg
jecxz
fcoms
call
rcll
shlb
push
fstps
sti
insb
mov
xchg
fdivr
lea
xchg
das
push
cmp
push
test
pop
sbb
popa
stos
mov
aaa
xchg
push
call
push
in
inc
add
movsb
rcll
dec
in
adc
push
inc
sbb
imul
and
test
mov
test
cld
add
or
add
or
nop
or
or
sbb
inc
sbb
mov
and
dec
sub
push
sub
push
shr
sub
add
lock
jmp
inc
push
femms
or
or
pop
loopne
test
cltd
adcb
xor
int3
add
lea
movsb
je
adc
fmul
idivl
add
enter
or
adc
jns
sub
into
push
adc
pop
ret
bound
sbb
in
pop
rcrb
or
popa
xchg
and
and
js
lods
jnp
dec
dec
push
imul
dec
movsb
stos
push
xchg
mov
mov
mov
or
rolb
ffree
enter
add
ss
rorl
mov
xchg
outsl
pusha
jge
pusha
das
sbb
movsl
mov
repz
and
ret
pop
imul
sub
cmp
test
cmp
xchg
andb
repz
push
and
fildl
and
test
loope
mov
jbe
add
push
push
xor
and
roll
loope
jno
test
fisubs
push
push
xlat
rolb
inc
adc
or
pop
insb
mov
cwtl
es
stos
orl
adc
mov
add
pop
push
push
mov
mov
jmp
loopne
mov
test
sub
hlt
push
clc
jne
lods
xchg
lock
mov
jl
push
std
or
push
nop
fwait
shlb
inc
xchg
pop
sbb
mov
out
pop
negb
or
repz
shr
aam
jle
popa
mov
xor
jmp
pxor
insb
std
xchg
lock
jns
mov
mov
dec
ds
xchg
cmp
adc
cmp
mov
mov
add
mov
mov
adc
mov
lret
cmpb
jne
inc
add
jns
add
in
ret
leave
push
add
add
mov
dec
movsb
mov
mov
sub
arpl
les
addl
mov
add
adc
test
cmc
jo
std
and
inc
fmuls
push
mov
xchg
dec
xor
movsb
inc
add
jns
cmpsl
jns
mov
mov
cmpsl
jns
cmpsl
mov
lcall
shlb
mov
add
mov
in
inc
and
push
sar
or
adc
lock
test
int
sub
sub
dec
adcl
mov
jbe
jb
js
and
cmp
inc
inc
mov
push
mov
xchg
test
repnz
icebp
inc
fdivrs
fistpll
xchg
dec
inc
lcall
nop
cltd
js
xor
pop
add
push
movsb
adc
fwait
call
inc
jl
jl
fisubl
adc
mov
mov
cld
leave
add
cwtl
dec
mulb
add
daa
lret
lcallw
xor
insb
pushf
add
js
test
cltd
lret
or
in
adc
push
pop
or
mov
xor
adc
push
nop
int
and
add
outsl
dec
adc
cmpb
jne
cmp
jle
inc
push
or
addb
mov
pop
mov
xchg
neg
shr
andb
pusha
push
enter
xor
sub
les
cld
jbe
dec
xchg
push
andl
inc
js
das
jmp
xor
es
dec
add
sub
aaa
pop
iret
fists
repz
in
pop
inc
mov
aaa
cmp
insb
sub
les
imul
jl
sbb
cmp
out
xchg
jo
inc
or
es
shrb
jecxz
mov
mov
imul
push
push
in
addb
mov
call
and
stos
daa
sub
frstor
add
jb
mov
xchg
cmp
and
aaa
stos
jge
push
inc
pop
push
loopne
jge
push
add
dec
xchg
pop
push
sub
sbb
mov
inc
hlt
jg
out
scas
lods
pop
mov
je
or
adc
push
gs
jne
dec
push
insb
out
fdivrl
cs
jne
test
jmp
call
sbb
adcb
jle
cmp
scas
imul
loop
int3
mov
xor
cltd
sbb
loope
pop
loope
loopne
dec
shlb
inc
or
in
pushf
and
jge
jae
movsw
nop
mov
stc
dec
mov
aam
dec
pop
leave
lods
sarl
jne
lods
decl
mov
push
lcall
adc
add
je
push
jecxz
popa
mov
mov
out
mov
call
loope
into
add
scas
test
dec
add
scas
scas
sbbl
add
out
adc
leave
les
inc
or
fisubrs
mov
pop
in
inc
jns
jmp
arpl
movsl
inc
je
loopne
addl
mov
test
or
mov
sub
add
cmp
or
pop
js
enter
add
call
add
dec
data16
insb
loope
add
add
cmp
shlb
sarb
in
clc
xchg
pop
pop
lret
xchg
cmp
sbb
sub
push
jmp
shlb
test
xorl
jmp
je
mov
rcrl
inc
scas
adc
loop
add
test
aad
or
nop
or
je
cmpsl
cli
loopne
xor
js
sbb
hlt
clc
adc
lock
sbb
jmp
add
jle
jp
push
push
movsl
sbb
mov
fstl
cltd
fcomp
fnstsw
ljmp
push
lods
fldl
pop
fsubr
pop
subl
sbb
push
cmp
lods
ret
push
adc
jp
cs
add
jmp
rorl
subl
cmp
xchg
lock
push
lods
xor
and
jge
or
pop
adc
iret
cmp
jle
dec
sub
movsb
cmp
insl
call
dec
add
fldcw
es
add
adc
adc
pop
clc
iret
movsb
lock
repnz
xor
push
push
add
push
add
pusha
addr16
inc
cmp
movsb
xor
js
or
enter
adc
or
mov
cmp
sub
es
lock
std
mov
dec
cmp
je
adc
outsb
cld
or
fsubrs
insl
push
push
mov
push
pop
add
lods
sbb
daa
xor
push
sub
loope
outsl
loope
add
pop
push
inc
out
ss
jmp
xor
dec
hlt
jge
and
mov
test
add
rclb
push
push
pop
mov
pop
push
lock
test
or
jmp
xor
pop
lret
or
sub
jns
push
lcall
mov
pop
sub
jne
jg
push
pop
add
cmp
stos
movsb
test
adc
jg
sbb
push
pop
test
scas
out
fwait
hlt
dec
dec
rcl
ror
inc
inc
ljmpw
push
rolb
push
sti
and
or
jns
mov
mov
push
call
pop
or
mov
incl
pop
lods
inc
sbbb
test
cmp
pop
insb
mov
adc
and
int3
das
sbb
imul
pusha
xor
adc
sar
dec
mov
add
push
decl
and
inc
jp
adc
iret
mov
push
push
arpl
and
xor
dec
inc
nop
lret
and
xchg
scas
dec
in
out
mov
mov
daa
bound
mov
loope
enter
xchg
jno
lock
and
stos
add
xor
sbb
aad
call
pop
cmp
aad
or
lea
inc
sub
add
sbb
cwtl
cmp
inc
inc
lcall
loopne
add
leave
or
jns
daa
dec
aam
imul
fcomps
mov
mov
gs
fiaddl
ffree
add
pop
and
test
mov
insb
cmp
in
fisubl
sub
sub
push
xor
or
mov
ret
sti
add
pop
cmp
lds
bound
pop
mov
xor
test
bound
hlt
dec
sub
push
push
mov
dec
lock
orb
insl
adc
dec
sbb
fisttpl
or
push
push
or
leave
std
xor
xor
and
and
test
in
leave
popf
in
pusha
jno
mov
mov
ret
clc
jbe
lock
sbb
out
pop
dec
inc
adc
and
and
xchg
lock
mov
push
and
push
gs
push
push
push
hlt
xor
lock
in
and
cmp
ret
enter
cmpsb
xor
sbb
andl
mov
js
xchg
ficoml
in
and
push
adc
mov
cmpsl
inc
sub
ja
jmp
jecxz
lret
das
push
jno
pop
in
mov
mov
and
je
add
and
sub
jb
and
cwtl
mov
xor
daa
add
dec
jb
je
and
push
inc
mov
das
inc
xor
orb
mov
cmp
push
out
out
sahf
movsl
ret
mov
add
mov
sub
into
dec
sub
addl
adc
mov
mov
sub
pop
mov
mov
push
loope
dec
pushf
jmp
xor
adc
stos
leave
out
sbb
mov
outsb
mov
mov
and
push
adc
add
aaa
or
dec
pop
stos
lea
push
shr
adc
push
add
adc
lahf
mov
push
insl
inc
aas
hlt
aam
mov
inc
push
xor
pop
or
fcomps
adc
or
sbb
test
ss
lahf
ds
lahf
add
insl
loopne
test
cmpb
sub
inc
call
imul
es
ja
sbb
add
jmp
mov
dec
aaa
mov
sbb
add
fnsave
xor
mov
jmp
pusha
xchg
cmp
sbb
push
repz
test
sbb
bound
cmp
rolb
mov
rcr
jmp
xor
cwtl
mov
pop
or
and
icebp
mov
loop
inc
mov
push
jl
lods
inc
popa
fsubr
adc
sub
sbb
and
stos
push
cmp
pop
je
push
mov
push
pusha
lock
in
es
mov
cmp
call
ja
mov
add
add
addr16
inc
or
mov
inc
push
test
pop
mov
cmp
push
scas
push
jp
xor
inc
push
inc
cmp
stos
inc
mov
inc
cmp
repnz
push
in
lock
sbb
push
ss
or
sbb
xor
outsl
movsb
loopne
push
or
lock
addl
loope
xor
insl
leave
ret
ret
jmp
mov
or
and
xchg
dec
lea
inc
into
cmp
ja
add
pop
push
mov
xor
or
jo
sahf
push
cli
es
lock
sub
fiadds
imul
movsb
inc
add
push
scas
fisubs
lods
sti
mov
jb
cmp
jecxz
push
or
push
inc
mov
cwtl
and
fmuls
xlat
cmpsl
repnz
les
aam
mov
adc
rorb
les
or
vpbroadcastb
jbe
lcall
je
clc
sbb
aaa
mov
inc
xchg
cmp
jne
orl
call
test
shlb
ret
dec
scas
sarl
lea
loope
mov
repnz
repnz
addb
xor
xor
sahf
add
std
dec
xchg
pop
dec
or
cmp
dec
push
insb
test
outsb
jb
jmp
push
xor
cmp
test
cmp
mov
nop
nop
push
dec
lods
push
mov
or
faddl
repz
loopne
cmovb
or
xchg
mov
aas
orb
fwait
sbb
cmpl
add
add
mov
and
testl
sti
sbb
add
daa
pushf
or
clc
andl
cmp
dec
aaa
sarb
mov
gs
push
add
cwtl
mov
cmp
xor
in
jne
fwait
sahf
cmp
adc
add
push
in
pop
push
out
push
jne
push
dec
and
sbb
mov
jmp
in
add
ror
je
xlat
push
or
mov
enter
xchg
xchg
scas
or
fcoms
popf
jge
mov
xlat
cmp
inc
sub
lahf
jp
and
push
push
inc
test
sub
es
add
push
hlt
jge
pop
or
popa
jge
aam
add
in
add
dec
lods
mov
addb
mov
mov
inc
push
rep
and
stc
mov
ret
sub
xchg
mov
add
xchg
cmpsb
pop
push
jecxz
loopne
les
mov
add
loopne
push
mov
dec
cltd
pop
cltd
xor
adc
mov
push
pushf
mov
xor
repz
add
ficoml
xchg
and
test
shr
jo
pop
xchg
fucomp
fld
rcrb
sbb
inc
sbb
insl
int3
sub
push
push
pop
fstpt
add
rorb
and
cli
xchg
xor
mov
add
movsb
xor
addr16
faddl
les
pop
wbinvd
testb
es
popf
ljmp
rcrl
pusha
into
lret
inc
pop
push
decb
je
sub
pushf
roll
mov
or
notb
es
cs
or
mov
and
movb
lahf
push
jg
enter
mov
icebp
lods
mov
pushl
insb
adc
popf
or
pop
add
xor
pop
dec
jnp
test
adc
xchg
adcl
push
xor
sub
mov
xchg
xchg
test
sub
pop
mov
hlt
jg
ret
or
insl
sub
xchg
or
or
or
je
inc
fsubrs
rol
cmp
mov
les
mov
movsb
push
and
imul
pushf
pop
and
pusha
push
lret
aas
cmpsl
push
fsub
cmp
jg
cmpb
je
mov
jmp
std
mov
jnp
and
out
xchg
orb
jge
sub
mov
inc
and
sub
push
xor
or
add
cmp
add
rcl
push
push
jbe
push
inc
inc
dec
push
inc
pop
add
xor
cld
and
stos
mov
xchg
push
and
jle
inc
xor
sbb
jbe
sahf
in
cmp
ljmp
push
add
lea
iret
mull
lahf
and
insl
add
loopne
jnp
pop
mov
push
in
pop
or
or
out
mov
imul
inc
push
push
and
sbb
add
in
xor
enter
adc
push
push
xor
cmpsb
and
lods
pusha
xchg
xchg
pushf
jne
xor
roll
xor
aad
ret
scas
mov
mov
sub
pushf
push
push
mov
jb
repnz
cmp
push
outsb
adc
stos
in
mov
adc
dec
cs
or
sub
nop
add
or
push
dec
ljmp
add
lods
nop
aam
pop
ljmp
and
dec
lcall
fsubl
fidivs
xchg
call
dec
sub
shl
inc
cmp
add
popa
add
aad
push
sub
in
push
sub
adc
push
add
lods
adc
sub
enter
fs
push
dec
es
jp
nop
imul
inc
or
sub
imul
clc
or
cmp
ja
jecxz
inc
addr16
lock
push
hlt
cwtl
andb
test
cltd
jne
cmp
xor
int3
push
push
inc
mov
pop
xor
dec
fucomp
and
pop
sub
shll
ljmp
mov
dec
pop
fwait
inc
adc
mov
add
xchg
sub
xor
test
xchg
add
ret
cmp
dec
insb
into
cmovl
mov
js
mov
jp
enter
mov
and
push
sbb
je
repz
repz
inc
or
insb
sti
iret
xor
jne
inc
mov
xchg
jl
mov
ja
lcall
mov
idiv
add
cmp
jne
lea
xchg
jmp
int
or
adc
js
enter
push
mov
dec
push
add
cmp
es
and
push
fs
mov
jno
pop
cmp
lret
jmp
push
shlb
sti
sbb
xchg
push
sub
sub
cmpb
repz
or
lcall
cwtl
mov
and
lea
dec
clc
jge
inc
jg
or
add
movsb
jle
jno
sbb
hlt
cmp
je
xchg
je
push
lret
inc
pop
and
subl
fadds
push
jmp
imul
fsubrl
pop
jl
jle
je
or
jmp
jl
out
pop
jmp
push
cli
clc
jmp
xorb
cld
adc
das
or
and
insl
bound
insb
ljmp
mov
pop
inc
sbb
jl
dec
and
loop
jge
mov
mov
push
outsb
js
cmpsl
jnp
leave
inc
cmp
bound
pop
mov
sub
push
dec
and
pop
call
add
xor
stc
enter
iret
add
add
push
cmp
mov
xor
push
sbb
lock
addr16
push
pop
call
cmpb
jne
cld
js
add
pop
jne
cmp
add
movb
push
jae
js
ret
jbe
gs
xlat
and
jne
hlt
inc
cld
lahf
add
pop
pop
sbb
or
cmp
sbb
cld
push
push
clc
mov
lcall
jno
and
xor
scas
cmc
adc
add
es
dec
xchg
lds
movb
inc
cmp
add
xchg
add
or
xchg
adc
push
push
jmp
push
lods
fistl
xchg
sbb
test
ret
mov
fsubp
fists
iret
xor
arpl
dec
jp
adc
push
push
sahf
jmp
loop
jg
inc
gs
mov
rolb
add
dec
sbb
push
dec
fdivrl
imul
jne
imul
or
scas
mov
mov
and
inc
pop
or
inc
inc
pop
push
cs
dec
mov
mov
cwtl
out
inc
call
pop
and
jbe
xor
dec
and
push
jg
aas
jne
inc
sub
xchg
jne
push
or
scas
and
addr16
nop
mov
xchg
pusha
pop
stos
mov
mov
rcrb
mov
push
sti
loopne
and
loopne
dec
in
pusha
xorl
test
sbb
imul
imul
loope
sbb
xor
fadd
orl
loopne
clc
int3
into
cmp
rcl
int3
or
sbb
mov
cmpsl
add
or
jmp
inc
sub
sub
cmp
ds
add
mov
adcl
jno
gs
pop
pop
xchg
fsubs
inc
push
or
int3
inc
and
xchg
adcl
add
add
add
mov
test
pop
icebp
sub
rolb
xchg
inc
dec
sbb
lock
xrelease
mov
sub
jge
add
bound
pop
mov
dec
sbb
push
and
jmp
mov
ss
shlb
inc
sahf
dec
test
xchg
mov
inc
adcb
adc
jns
shl
test
jne
add
loopne
xchg
loop,pt
lock
adc
imul
in
test
scas
addr16
and
add
cld
dec
jg
rorb
test
mov
es
cmp
leave
shl
sti
add
push
inc
push
xor
and
sub
subl
pop
in
and
addb
icebp
fwait
sbb
insl
ss
mov
add
dec
pop
adc
dec
inc
mov
daa
daa
fiaddl
dec
xchg
rol
add
pop
pop
lods
sbbb
and
add
inc
call
mov
add
mov
rorb
xorl
movl
icebp
fwait
rcrb
out
inc
adc
sbb
add
pusha
add
sbb
shrb
jle
jge
test
pop
aaa
subb
cmpsb
add
mov
mov
ret
push
push
xchg
mov
pop
lds
icebp
inc
pop
adc
add
lea
xchg
inc
mov
inc
add
sbb
cmp
and
mov
cmp
xchg
test
je
mov
and
daa
sub
lahf
or
jge
in
aas
cmp
js
das
fwait
or
popa
data16
repnz
mov
xchg
popa
sub
inc
bsf
testb
adc
sub
jge
mov
cmp
add
push
or
push
and
clc
fisubl
push
cmpsb
xor
inc
into
inc
lods
adcl
dec
in
mov
jae
add
jbe
jns
and
adc
in
sub
or
jg
cmpl
sbbl
loope
push
cltd
or
push
loopne
test
sbb
jno
mov
loop
arpl
mov
mov
sub
jo
cmpl
lahf
inc
and
adc
lret
sbb
xchg
lock
in
pop
adc
xchg
or
cmp
out
aad
inc
add
xchg
lods
push
loop
jmp
inc
mov
adc
cmp
jl
push
push
push
jp
add
clc
add
or
iret
xor
xchg
fbld
xor
pop
ja
int3
xor
popl
and
dec
or
ror
ljmp
in
call
pop
stos
pop
movsl
sbb
add
or
shl
imul
sbbb
pop
sub
mov
push
jmp
shlb
sbb
lret
add
or
lods
arpl
jo
fisttpl
mov
jne
jecxz
cmp
xchg
or
popf
dec
add
loopne
test
sub
das
add
or
pop
fldcw
cmc
push
sbb
add
push
popa
les
and
sub
sub
push
cltd
movsb
xor
inc
inc
dec
adc
xor
cld
ret
dec
sbb
sub
adc
adc
lock
mov
insl
inc
fsts
rol
fs
cwtl
or
dec
insl
push
test
pushf
loope
or
fldt
lods
and
sub
mov
bound
add
push
cmp
mov
add
insl
pop
add
sbb
add
insl
orl
inc
fistl
mov
xor
mov
int
mov
sbb
popf
add
nop
push
xchg
sbb
dec
je
mov
xchg
sub
add
in
movsb
jnp
jmp
call
inc
scas
push
sub
pop
adc
or
and
pop
imul
jo
add
loop
pop
dec
stos
loop
mov
std
push
pop
mov
push
inc
add
push
iret
adcl
pop
aaa
or
and
pop
push
and
add
or
xorl
xor
adc
xor
sub
mov
jg
outsb
add
xor
cmp
add
loope
jle
fsubl
push
push
push
in
cmp
push
scas
in
pop
or
xchg
xchg
dec
or
cmpl
fiadds
cmpsl
add
and
fisubs
mov
pop
pop
enter
or
xor
push
sbb
sbb
adc
push
dec
mov
pop
shlb
aad
inc
jb
aad
adc
loopne
pop
sbb
push
in
roll
and
mov
dec
ret
rorl
xor
in
jo
lret
shr
inc
cs
xor
inc
push
cmp
sub
daa
adc
mov
adc
loopne
jae
push
icebp
or
add
or
sbb
sbb
es
testb
pop
sbbl
sarb
ret
pusha
jb
or
sbb
add
inc
sub
dec
dec
mov
push
sbb
inc
subb
xlat
xchg
or
into
ds
adc
push
jae
call
inc
sahf
mov
ds
xchg
imul
push
imul
add
addl
push
add
lods
adc
pop
movsb
sub
lret
pop
cmpsl
and
in
in
lock
insb
sbb
xor
dec
pop
rolb
pcmpeqd
push
dec
add
xchg
push
in
push
mov
mov
or
in
and
andl
and
popa
insb
fiadds
ja
sub
cmp
mov
js
rclb
pop
rcl
xor
push
and
xchg
add
test
push
loope
imul
mov
mov
jmp
push
aas
mov
pusha
aad
leave
aam
aaa
mov
aam
mov
push
cmp
dec
mov
stc
testb
add
rclb
mov
out
rorb
or
outsb
push
ljmp
xor
je
cmp
mov
mov
mov
xchg
pop
shrl
jbe
xchg
mov
adc
add
pop
dec
inc
sbb
cld
outsb
cmp
ss
adc
or
lock
adc
push
fcmovnbe
int
andl
cmp
add
sub
nop
pop
shrb
add
mov
add
cmpsb
enter
adc
in
shll
cmp
cmpsb
nop
lret
out
sbb
cld
add
je
xchg
jbe
lods
push
push
xor
or
mov
or
addb
dec
mov
rclb
mov
pop
ret
or
pop
or
cmp
ds
add
test
lock
mov
lret
add
into
pop
aam
lret
hlt
or
loop
cld
inc
lret
add
mov
push
inc
sub
or
push
inc
pusha
mov
xchg
pop
inc
test
mov
or
cwtl
sub
mov
lret
imul
fcoml
jg
mov
cmp
cmp
lea
adc
test
pop
jnp
movsl
mov
inc
in
shll
pop
sub
test
lret
add
cmp
mov
push
scas
movsb
cmp
clc
cmp
stos
ds
push
adc
lcall
pop
ficomps
das
out
mov
mov
data16
mov
dec
lahf
pushw
mov
jbe
ret
lock
pusha
movsb
stos
mov
xchg
mov
mov
push
mov
push
xor
mov
cs
sarl
sti
rorl
or
push
lods
shl
push
inc
mov
popf
pop
lds
loop
push
xchg
pusha
mov
movl
xorb
mov
inc
mov
sbb
mov
sbb
fstps
and
cmp
jecxz
adc
rcrl
adc
mov
test
imul
mov
xchg
cmp
cs
jg
iret
iret
add
mov
std
movsl
mov
cmp
cld
sub
cmpsl
frstor
pop
adc
xchg
pushf
lret
in
adc
shrb
add
mov
scas
jp
or
add
outsb
lds
push
popf
hlt
or
inc
xchg
std
cmpb
rcrb
enter
or
inc
cmp
adc
jnp
hlt
mov
je
aas
lods
inc
and
add
in
movsl
mov
pop
ss
cmp
mov
test
loope
xlat
inc
push
cmp
shll
cld
movsb
push
or
jmp
cmpb
shlb
or
pop
outsb
orb
je
xchg
movsb
and
jle
jmp
cmpb
sub
mov
mov
push
aas
cwtl
ljmp
xchg
movsb
adc
shlb
test
jnp
dec
movsbl
sub
jne
lret
cmp
jb
jbe
mov
cld
je
outsb
push
or
movsb
aaa
cmp
pop
add
loope
or
inc
cli
sub
cmpsl
push
inc
lock
push
inc
dec
insb
inc
or
lea
add
and
cmpps
pusha
inc
add
xor
mov
orl
xchg
jo
fstps
bnd
mov
jl
cmp
pop
fadds
sub
fwait
sub
pop
adc
push
dec
popf
imul
mov
call
popf
idivb
push
xor
xor
in
lock
push
shl
push
and
ja
xchg
dec
push
add
xchg
push
mov
sbb
pop
std
repnz
mov
subb
iret
push
add
pushf
pushf
pushf
pushf
add
push
pop
outsb
lahf
pushf
pushf
or
or
jnp
or
jbe
outsb
outsb
outsb
or
jno
jmp
push
jmp
por
outsb
outsb
outsb
adc
pop
adc
pop
adc
push
adc
dec
outsb
outsb
outsb
outsb
adc
dec
adc
aas
pop
jmp
outsb
outsb
outsb
outsb
sbb
xor
jmp
sbb
outsb
outsb
outsb
outsb
sbb
and
pop
pop
jmp
push
and
or
or
adc
inc
sbb
mov
jb
cmpsl
add
cmpsb
sahf
pop
pop
sahf
out
sbb
incl
push
or
sbb
out
and
xor
inc
out
sahf
out
push
pop
pop
bound
insb
jno
jnp
jns
out
test
jns
out
mov
out
sahf
mov
rol
sar
mov
nopl
add
add
push
pop
or
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
arpl
cmc
jb
cmc
sub
cmp
clc
mov
fcomps
loopne
lea
or
inc
cmp
mov
lea
or
or
mul
or
push
out
imul
test
cmp
mov
or
je
jp
repnz
inc
jbe
pop
mov
sub
scas
xchg
sti
cmp
inc
lea
fsubl
sbb
mov
mov
fisubrl
cmp
add
inc
jb
jp
adc
sbb
pop
and
pop
mov
bound
add
sub
mov
jo
adc
sub
sahf
cmpsl
ljmp
lret
lea
mov
fdivrl
or
push
mov
mov
xchg
rcr
inc
add
mov
cmp
je
loopne
jmp
xlat
xorb
or
les
inc
pusha
cpuid
sub
arpl
jo
pop
ja
push
fmul
inc
dec
pop
es
dec
push
pop
mov
and
addl
out
lock
adc
sbb
ljmp
add
scas
and
and
in
push
mov
mov
test
cmp
add
pop
dec
mov
test
test
lea
lds
dec
sbb
xor
sbb
incl
pop
mov
ret
movl
pusha
ret
lods
xor
cmp
cmp
xchg
aas
clc
or
add
loopne
ret
add
mov
mov
jb
or
inc
das
fsubs
movb
or
leave
mov
stc
jns
clc
pushl
lea
imul
cmp
ja
push
pop
pop
adc
mov
cmp
sbb
lcall
nop
push
in
lock
xor
pop
push
icebp
xor
rol
add
adcb
or
cmp
scas
les
hlt
cmpsb
or
jns
cltd
pop
notb
and
mov
push
and
shlb
outsb
fidivs
lds
push
je
sub
sbb
inc
pop
stos
xchg
adc
add
mov
incb
jbe
je
add
mov
test
add
and
lods
inc
and
dec
mov
lock
cmp
adc
and
xchg
push
cmp
loop
ljmp
and
lcall
and
clc
or
test
lret
adc
add
push
pop
mov
cmp
movl
sbb
loopne
movsb
sbb
or
cwtl
andl
shll
insb
icebp
enter
and
xor
add
sbbb
mov
push
les
and
mov
jno
xor
and
pop
and
dec
repz
je
add
nop
faddl
sbb
loop
adc
fildl
cs
mov
pusha
inc
sahf
ljmp
adc
jle
mov
cmp
cld
jo
cli
es
lea
cmp
lock
jne
or
js
cs
jge
out
and
jp
mov
adc
and
push
aad
or
test
mov
or
test
imul
fimuls
sahf
cmp
push
insl
xor
out
dec
sti
sub
jae
ds
jmp
daa
int
xchg
and
jmp
daa
push
das
hlt
fwait
das
push
jmp
and
movzbl
call
orb
add
and
test
sbb
add
movsl
and
or
addl
pop
push
inc
in
ss
dec
jecxz
mov
xlat
or
popf
leave
jp
mov
movl
pop
rclb
aaa
lods
mov
or
lahf
xchg
ja
jmp
cmp
sbbb
icebp
sub
mov
mov
inc
inc
in
add
pop
fcompl
push
or
nop
dec
rorl
add
insb
jbe
xchg
mov
sbb
sub
and
js
jne
imul
mov
xlat
fildl
test
sbb
int3
cld
push
lods
sub
jns
xor
in
sub
push
dec
or
les
addl
add
pop
or
fwait
and
add
add
mov
cmp
jne
mov
inc
adc
xchg
sub
sub
and
out
push
xor
mov
xchg
add
cltd
sub
or
adc
push
ja
testb
sbb
scas
dec
in
lods
mov
add
mov
sbbl
insb
and
ret
es
push
mov
or
cmp
hlt
add
add
gs
dec
or
nop
scas
sbb
ds
ja
xchg
test
push
mov
out
loop
pop
push
ljmp
fadd
cmp
jmp
fdivrl
imul
xor
cmp
xchg
add
mov
and
arpl
xabort
daa
jmp
out
popf
cmp
xor
and
mov
sub
jp
xchg
out
mov
mov
adc
enter
and
jnp
push
pop
fwait
push
or
push
insb
mov
cmovb
jmp
cmp
add
pop
imul
pop
fdivs
or
jmp
push
push
cmp
add
jg
push
aam
pop
adc
outsl
mov
adc
cmp
adc
ret
xchg
or
cmpsb
inc
addb
loopne
jo
scas
icebp
out
je
ss
sub
cmovnp
cmp
ret
ret
or
mov
loope
mov
and
insb
sarb
adc
jnp
scas
pop
arpl
xchg
and
dec
arpl
cmp
movsb
fimull
push
push
ret
popf
push
and
int3
les
scas
sahf
mov
dec
outsl
and
inc
and
inc
in
pop
mov
push
nop
pop
int
adc
xchg
and
clc
push
sbb
dec
ficompl
sbb
es
adc
mov
cmc
pop
mov
je
inc
int3
push
mov
xchg
imul
inc
subl
insb
mov
push
pop
js
mov
push
mov
push
js
bound
inc
fcmovnbe
push
push
cmp
and
push
mov
inc
sarl
shrb
ds
mov
pop
inc
imul
xor
lea
in
loopne
mov
cmp
shll
inc
pop
inc
scas
popa
shlb
in
nop
jl
pushf
adc
stc
push
add
ret
adc
subl
icebp
cltd
or
dec
int
cmpsl
jno
adc
add
insb
vmovupd
cs
mov
frstor
cmpsb
push
sub
test
icebp
loope
and
push
xchg
out
mov
adc
out
pusha
mov
mov
movb
ret
cmp
xchg
cltd
pop
adc
lock
sbb
fs
xor
insb
pushf
js
sbb
mov
inc
mov
sbb
jge
sbbb
mov
in
mov
sbb
dec
inc
jecxz
adc
mov
mov
xor
daa
xor
push
jg
subb
mov
adc
shr
pop
jle
ljmp
test
mov
inc
inc
sub
cmp
mov
xchg
negb
xlat
cmp
sbb
movsb
sbb
lods
pop
das
adc
push
imul
xor
adc
sbb
jnp
popa
dec
jl
sub
push
das
cmp
add
xor
repnz
roll
je
xchg
cs
addl
inc
pushf
jmp
mov
ret
pop
and
notb
lods
addl
jnp
ds
sub
dec
push
lds
les
bt
adc
mov
mov
or
cld
loopne
mov
mov
push
xor
sbb
mov
insb
dec
dec
xchg
aam
imul
adc
lods
jnp
and
enter
ror
mov
xor
pop
call
jb
scas
hlt
xor
jbe
es
fs
lock
inc
sbb
push
cltd
mov
out
push
orb
sub
int3
push
stc
and
and
jg
cs
xor
psubusw
xor
fcomps
jb
imul
xor
sub
sub
xor
or
sti
cli
xchg
pushf
sub
xchg
xor
leave
add
adc
fdivrl
cmpsb
mov
sbb
out
mov
and
stos
or
sarb
adcb
mov
sbb
loopne
test
and
and
andl
es
loopne
fidivs
sub
dec
adc
cmp
fistpl
cmp
outsb
lcall
xchg
xabort
jb
push
pop
enter
xor
loopne
dec
jne
and
pop
movb
adc
mov
or
xchg
adc
xchg
and
lods
push
inc
stos
cmpsl
dec
xchg
xor
frstpm(287
enter
or
scas
test
bound
push
insl
push
leave
sub
inc
xchg
cmp
ljmp
in
fildl
daa
imul
sbb
sti
dec
loope
adc
ja
jbe
cmp
sbb
int
adc
sti
cmp
jne
and
movb
jmp
mov
mov
mov
les
xor
test
jp
push
cmp
push
outsb
adc
inc
inc
mov
fisttpll
xchg
or
jno
and
and
fimull
jnp
xchg
ds
or
xor
out
cmpb
adc
subb
das
movb
inc
sbb
inc
mov
pop
add
push
neg
pop
push
test
bound
inc
ret
push
shrl
push
mov
fisubs
adc
dec
test
jmp
xor
addr16
xchg
xor
mov
and
xchg
cmp
pop
jnp
pop
mov
add
xchg
sub
mov
add
lds
adc
mov
cmpsl
movzbl
xor
xorb
add
in
or
xor
or
repnz
push
cmp
pusha
enter
cmp
mov
push
push
fidivrl
adc
mov
rolb
mov
push
sbb
mov
cli
adc
push
bnd
sub
mov
je
cmp
stos
mov
ret
sub
push
cmp
jge
mov
push
push
adc
lea
cmp
pop
rcrb
lds
js
mov
mov
lea
or
or
lock
pop
hlt
clc
clc
cld
lods
add
or
add
cs
add
xchg
or
push
add
add
push
test
cmpsb
std
mov
add
dec
je
add
adc
cmp
pop
aas
dec
or
mov
shr
sbb
loopne
lret
inc
xor
out
pop
and
sbb
or
lcall
mov
add
mov
les
adc
or
mov
xchg
adc
je
dec
je
push
add
out
loop
and
mov
jle
or
inc
add
jmp
ljmp
scas
add
push
add
inc
jnp
lds
sbb
adc
mov
dec
and
shrb
add
jo
lock
xor
add
jmp
into
xor
inc
cmp
dec
xor
sbb
or
gs
insb
ret
cltd
idiv
inc
inc
imul
add
les
lock
cld
mov
mov
pop
lea
loopne
loopne
popa
mov
add
or
cmp
push
pusha
xchg
push
mov
or
add
adc
push
push
pop
gs
lock
out
imul
fistl
pop
jbe
inc
test
jmp
daa
pop
xchg
mov
loopne
sbb
bnd
cld
insl
addr16
jae
push
fwait
cmp
add
xchg
jp
push
ds
jne
decb
push
jns
sub
cmpsl
adc
cmp
je
cmp
adc
cmp
mov
jne
inc
jne
mov
sub
inc
daa
mov
push
mov
test
adc
pop
xchg
add
fdivl
mov
nop
cmp
mov
push
andb
add
sub
adc
ss
js
outsl
mov
rolb
sbb
push
push
add
add
cmp
add
call
in
dec
push
or
mov
jmp
mov
popa
push
jmp
inc
jl
rcrb
inc
jg
aaa
push
add
shl
dec
xchg
mov
lret
mov
mov
and
jg
std
fisubrs
jg
imul
or
xchg
and
dec
cmp
adc
cmp
lcall
pop
push
push
and
jno
mov
scas
and
mov
pushl
and
ja
inc
push
push
inc
cmp
pusha
mov
insb
xor
fs
imul
call
inc
sub
or
ret
popf
daa
lcall
adc
orb
sub
ret
add
test
mov
stos
pop
sub
aas
sbb
das
xchg
xor
xor
fcomps
inc
cmpb
mov
addb
push
loopne
jl
pop
cmpb
in
inc
inc
inc
out
jmp
xor
aam
adc
or
xor
pop
adc
xor
xchg
pop
int3
popa
push
inc
push
les
jle
push
sarb
push
cmp
dec
and
lret
out
mov
test
aas
pushf
adc
dec
pop
pop
add
in
orl
adc
movb
inc
ljmp
xchg
and
inc
cld
sbb
scas
lret
push
add
mov
mov
pop
pop
add
cld
adc
or
push
sub
outsl
pop
cs
pop
adc
adc
je
and
ja
or
or
rol
mov
adc
adcb
cld
lods
add
rol
or
mov
popa
or
or
icebp
and
mov
movsl
adc
test
clc
andl
xor
add
int3
pop
xchg
test
adc
xchg
mov
cmp
bound
mov
push
sub
jge
jne
daa
sub
add
jmp
mov
sti
pop
push
add
loope
sub
repz
mov
cmp
xor
push
ljmp
inc
or
dec
jg
inc
jne
icebp
les
adc
icebp
movsl
xor
xchg
pop
fists
jne
add
push
adc
mov
addb
jmp
inc
loopne
xor
mov
mov
adc
sub
stos
dec
in
popa
add
and
cmp
mov
xchg
or
jl
loop
adc
add
push
or
sub
add
cld
cmp
push
int3
sub
aas
mov
movb
xlat
and
push
push
mov
fidivl
xchg
imul
push
cmp
cmp
xchg
push
sarl
add
xchg
add
or
jg
and
sbb
mov
ret
sbb
pop
stc
cmp
inc
jbe
add
in
sub
stos
xor
cmp
rcl
inc
push
in
call
mov
lods
jno
or
push
loop
repnz
sarl
xorl
and
cmp
or
or
or
or
dec
push
in
jmp
jmp
cmp
jmp
sub
adc
int3
inc
push
les
outsb
pop
push
jne
imul
out
lods
mov
push
les
movsl
sbbl
inc
jae
cmp
pop
pop
cmpb
neg
push
nop
fwait
mov
aas
add
mov
popf
lods
aam
je
lcall
aad
add
mov
scas
inc
mov
test
cmp
or
lea
push
push
push
addr16
adc
push
inc
mov
subb
fbstp
out
enter
cmp
lea
mov
add
hlt
repnz
adc
xor
lcall
jp
mov
add
adc
rorl
hlt
xor
xchg
inc
mov
jnp
sbb
push
stos
mov
jnp
mov
dec
dec
inc
dec
sbb
or
add
or
sub
test
lret
inc
les
jo
adc
jae
hlt
or
aas
sbb
xchg
adc
or
bound
ds
xor
pop
lea
adcb
scas
add
jo
shl
les
lods
cmp
mov
bound
xchg
stc
shlb
imul
or
xor
and
pusha
mov
add
adc
cs
jne,pt
xlat
pop
sahf
popa
sbb
lret
pop
orl
push
jo
push
jnp
mov
push
push
or
shl
insb
push
shl
jmp
xchg
pop
xor
mov
cmp
ret
orb
sub
xchg
sub
jae
lahf
add
adc
xchg
loop
xchg
sub
push
addr16
cs
mov
mov
add
or
pop
mov
mov
xchg
sbb
inc
mov
cltd
push
jl
pop
push
xchg
aam
test
leave
add
pop
jns
jmp
xor
imul
adc
rorb
lock
adc
dec
inc
pop
mov
inc
cmp
jb
test
push
lds
rorb
xlat
fdivs
push
ret
jne
icebp
lcall
add
xor
push
sub
pop
cmp
push
mov
add
cmp
mov
inc
ljmp
mov
adc
sbb
and
jne
cli
mov
leave
inc
je
cmp
not
mov
and
cmp
jmp
inc
icebp
cmovge
aas
cmpb
enter
lea
jo
inc
dec
pop
inc
push
lahf
push
inc
aam
sbb
or
nop
ds
test
loopne
sub
shlb
xor
or
orl
test
lods
fucomip
dec
shrb
mov
and
inc
jle
lods
jne
pop
sti
fnstenv
push
add
inc
out
adcl
pop
sbb
and
das
or
xchg
fcoms
sbb
add
das
out
in
sti
mov
cmpsb
inc
stc
cmp
pop
popf
inc
inc
mov
std
push
sarb
daa
jne
xor
jne
lea
imul
mov
jb
insb
add
sub
iret
jnp
aaa
hlt
in
add
fcomi
shrl
je
mov
and
inc
jne
rcrb
aad
adc
rclb
iret
sbb
fdivrl
sahf
mov
dec
aaa
loopne
pop
add
pop
shl
pop
sub
clc
sbb
lcall
dec
sub
sub
inc
and
shll
adc
lret
cmpsb
jmp
push
mov
xor
adc
inc
lcall
sbb
nop
or
or
test
sbb
or
out
adc
jno
adc
push
mov
ret
cmp
xor
jae
ret
xor
loopne
push
or
push
lahf
xchg
sub
push
xchg
inc
and
cmpsl
xor
pop
insl
or
in
dec
pop
cmp
and
xor
lock
pop
in
jl
loopne
movl
sub
mov
jno
push
aam
out
pop
out
loope
test
loope
mov
enter
sub
cmp
xor
loope
mov
lahf
mov
cld
lods
mov
or
xor
andl
mov
adcl
cmp
adcb
mov
in
movsl
push
push
jmp
adc
pop
dec
rcl
push
cmp
push
popf
add
clc
test
jmp
fsubr
rcrb
mov
jg
sub
std
mov
sbb
outsb
adc
mov
mov
bound
and
daa
adc
gs
and
fnsave
add
mov
sub
add
add
add
sub
adc
mov
add
sbb
insb
and
sub
or
mov
adc
es
add
inc
xor
or
int
inc
test
xorb
lds
cmp
repnz
and
mov
add
int
mov
mov
and
je
inc
mov
add
ja
les
push
mov
push
popa
add
aad
pop
or
ret
imul
arpl
adc
jp
inc
dec
push
xor
mov
add
movsb
dec
inc
adc
mov
and
ds
sbb
adc
icebp
inc
add
xor
mov
mov
xor
inc
xor
pop
mov
push
and
pop
or
lock
jmp
mov
push
lcall
shr
adc
cmp
push
adc
mov
imul
add
sub
data16
cmpsl
mov
push
xchg
pop
imul
adc
or
pop
mov
outsl
repz
mov
daa
pushf
jecxz
add
mov
ret
pop
pop
or
pop
or
test
or
outsb
dec
arpl
xchg
mov
push
sbb
push
lods
cwtl
sub
je
and
pop
jp
mov
shl
add
inc
mov
pusha
mov
rorb
adc
or
adc
mov
shlb
inc
bound
and
xor
lahf
ss
and
test
push
cmovbe
pop
and
out
adc
dec
fimuls
loop
inc
or
jo
nop
out
jo
sti
or
mov
add
cmp
cmp
sbb
int
adc
cmp
mov
ja
lods
push
sbb
js
insl
jl
adc
mov
hlt
jo
or
or
orb
dec
sub
loopne
jns
push
push
ljmp
cltd
rclb
sbb
push
adc
mov
sbb
das
dec
aaa
jo
xor
dec
iret
sub
pop
shrb
popw
cmp
ja
mov
sub
mov
and
push
dec
test
insb
aam
test
and
jne
mov
mov
push
or
cmp
rorl
jne
pop
push
jae
test
jmp
inc
or
dec
test
add
outsb
fists
xchg
sbbb
andnps
icebp
loope
pushl
mov
mov
pop
fmuls
mov
jmp
lea
or
dec
daa
test
adc
in
aam
mov
bound
sbb
cmpl
andb
xor
pop
inc
mov
sbb
dec
cmpsb
add
and
adc
add
pusha
push
inc
fmuls
xor
in
push
and
inc
fdivrs
adc
cmp
adc
out
sub
xchg
mov
js
mov
inc
sub
xor
sub
ljmp
mov
jnp
rol
dec
push
aad
mov
push
mov
fwait
jl
jnp
add
pop
add
cmp
jmp
jne
repz
leave
push
inc
pop
out
push
std
sti
add
pop
adc
pop
aad
lea
lea
out
jae
cmp
pop
sbb
jmp
inc
or
or
sbb
adc
mov
adc
sub
or
push
test
popa
imul
sbb
pushf
push
jae
jo
movhps
mov
jb
mov
popa
fs
or
push
lea
sub
iret
pop
iret
in
pop
or
es
shll
pushf
es
mov
cmp
push
test
xchg
test
or
jle
adc
daa
movl
xchg
sbbb
decl
mov
xchg
add
stc
jae
push
out
add
dec
adc
mov
pop
dec
bound
in
cmp
push
adcb
sub
add
cmp
insl
loopne
or
adc
mov
in
shll
rcrl
repz
dec
add
fildl
cwtl
or
aad
lods
mov
xor
jno
shlb
daa
adc
cmp
sbb
addl
outsl
pop
mov
xchg
pop
psraw
sbb
subb
cmp
jb
push
orl
pop
dec
jae
lahf
adc
jno
pop
mov
ret
jb
sub
insb
push
ss
adc
ds
xchg
mov
je
sar
xor
add
sar
or
stc
sahf
cmp
test
push
das
lods
add
sub
pop
dec
sbb
mov
movsb
push
jg
dec
cmpsb
popf
pusha
cmp
pop
sbb
mov
lock
xchg
inc
xor
push
push
ds
jno
addr16
pop
push
shrb
insl
ret
push
lock
and
adc
pop
orb
adc
jo
and
int
pop
and
cmp
mov
or
jle,pt
loopne
push
push
add
test
xchg
inc
and
jmp
mov
aas
out
ja
mov
mov
sub
pop
mov
jo
sub
daa
mov
mov
xor
mov
in
pop
lock
je
adc
gs
mov
sbbb
add
hlt
jmp
mov
notrack
or
call
xchg
inc
enter
scas
jge
push
mov
or
aaa
add
std
les
jae
dec
pusha
add
mov
lea
insb
repnz
stos
orl
xchg
and
sbb
and
adc
daa
adc
sub
pop
push
test
clts
jo
adc
adc
and
sbb
mov
out
cmpsb
test
sub
dec
sbb
loopne
inc
push
jne
inc
addl
pushf
fdivrs
push
push
movb
cmp
sbb
pop
addr16
or
sbb
cmp
xor
adc
push
xorl
pop
movsl
xadd
notl
mov
jb
push
ret
or
jmp
outsl
and
sub
pushf
mov
test
or
sub
mov
sbb
push
jmp
add
inc
xorl
inc
push
je
cmp
jbe
push
rclb
and
inc
cmpb
mov
lret
daa
nop
sub
rorl
add
or
or
subl
cmpsl
aad
ljmp
add
cmp
pop
stos
dec
mov
imul
push
xchg
jbe
push
je
jp
bound
jno
sbb
jo
jl
addr16
loopne
pop
nop
mov
sbb
dec
insb
mov
adc
push
dec
or
push
pop
cli
dec
sbb
cmp
jo
out
fsubs
pop
xchg
xor
cmp
mov
xchg
sub
test
loopne
jo
pop
subl
enter
mov
pop
cmp
mov
stos
ret
or
or
ljmp
and
push
fisubrs
add
mov
cli
mov
mov
aad
in
add
aad
out
or
mov
jl
mov
loop
movzbl
mov
div
sbb
or
in
add
mov
push
push
add
adc
ret
sbb
dec
xchg
pop
or
inc
cwtl
mov
inc
inc
notb
mov
sti
dec
subb
jp
je
mov
mov
mov
add
ja
ss
popf
add
or
lret
jo
enter
test
shrl
mov
mov
popa
rorl
call
adc
out
pop
pop
adc
push
and
fs
push
xchg
mov
cmp
movsl
in
popf
lods
rolb
shlb
dec
rclb
test
rolb
sub
and
fildll
mov
ficoms
fcoms
pop
add
push
or
lret
pop
pop
nop
jo
lods
in
je
and
icebp
inc
cmp
mov
pop
in
out
cmpb
xor
sbb
ss
xchg
sahf
or
lods
mov
pop
fcmovb
daa
leave
mov
andl
jl
fidivl
or
push
popa
loope
pop
ror
push
cmp
pop
roll
jne
pop
cld
por
addl
jne
ljmp
sbb
inc
dec
out
addb
inc
fdivl
testb
fildl
notl
and
shl
or
mov
adc
call
add
mov
inc
cmp
add
push
cld
mov
sbb
adc
xabort
sub
push
mov
popa
imul
push
or
push
dec
aad
orl
dec
or
lods
sbb
stos
pop
jmp
xchg
dec
jnp
movb
sahf
push
push
add
sbb
pop
ja
add
ret
or
jle
fisubl
mov
mov
dec
push
rolb
push
push
aaa
int
mov
shl
ret
data16
add
and
sub
xor
insl
leave
loop
add
out
xchg
inc
ret
push
jg
add
loopne
lahf
jo
shr
ds
scas
pop
and
outsl
mov
inc
add
cmpb
sbbb
jne
fnstcw
mov
sti
mov
imul
fs
test
jmp
movq
fidivrs
movapd
mov
enter
shlb
lcall
push
add
lret
add
test
insl
mov
or
jl
and
lret
or
jg
dec
dec
jmp
scas
mov
xchg
ret
adc
jnp
mov
sub
mov
add
adc
js
add
push
add
adc
xor
adc
outsb
fisubrs
ret
mov
lock
mov
mov
mov
int
sti
mov
fcmovb
sbb
adc
inc
pop
int
clc
fwait
inc
sub
push
movq
and
dec
or
and
mov
pop
ja
inc
jbe
rorl
mov
pop
xor
out
mov
add
jne
orl
mov
imull
hlt
push
mov
nop
out
push
mov
hlt
sbb
push
and
mov
fwait
int3
lret
sub
pusha
shrb
push
mov
les
cmp
cmp
shrl
sbb
adc
shll
shlb
lret
outsb
push
push
adc
sbb
cmpsb
je
scas
out
mov
data16
aaa
push
imul
jno
cmpb
rcrl
push
adc
orl
movsb
adc
xchg
lock
sub
ja
xor
sahf
push
jo
jns
lock
mov
stos
into
mov
mov
xchg
xor
cmp
pop
sbb
push
lret
mov
xorb
or
imul
dec
imul
and
add
push
pop
adc
scas
hlt
repz
pop
sahf
mov
mov
loope
mov
push
imul
loope
mov
test
or
ja
jle
pop
sahf
add
jmp
and
jb
sbb
sbb
pop
or
fistps
clc
lea
testb
adc
mov
or
push
sbb
inc
sub
inc
sub
cs
jmp
cld
jmp
mov
data16
test
dec
in
dec
dec
mov
dec
dec
dec
dec
cld
push
mov
repz
mov
sbb
push
add
sub
adc
jmp
xor
test
addb
inc
cmpsl
daa
nop
xor
push
cmpsb
or
pop
xor
rcrl
adc
inc
test
popf
loopne
cs
lea
cwtl
popa
imul
sbb
pop
sub
add
aam
aam
adc
cmc
push
add
push
test
push
cmp
popa
nop
gs
push
ret
sub
lahf
rcrb
dec
aam
adc
add
mov
mov
sub
add
movsb
rorl
xchg
in
repz
mov
dec
jbe
push
xor
pop
div
shlb
add
mov
scas
fiadds
or
dec
je
and
jg
sbb
adc
repz
pop
mov
push
in
ret
xor
es
mov
dec
adcl
leave
add
mov
js
fdivr
push
or
xor
daa
add
jb
pop
negb
aam
insb
jb
pop
cmp
push
xor
pushf
fimuls
icebp
inc
lret
pushf
push
xor
cmp
push
push
push
pop
mov
and
or
je
xor
adc
fcmovb
xchg
inc
ret
cld
ss
shrb
dec
std
testb
test
xor
sarl
dec
scas
add
lods
pop
aam
je
pop
sub
or
push
add
jp
cmpb
stc
enter
stos
mov
push
jmp
cbtw
cmp
sbb
sub
sub
fst
pop
or
and
xor
cltd
aam
push
jmp
push
push
mull
faddp
das
repnz
lahf
pop
sub
dec
add
loopne
imul
jle
clc
dec
jge
stos
mov
push
mov
aaa
push
inc
dec
or
or
lods
sbb
or
xor
mov
inc
les
push
fimull
js
jne
idivb
adc
test
xchg
cs
ja
mov
add
stos
push
push
add
cmpsb
mov
sahf
push
lock
jns
shlb
orps
mov
xor
sahf
imul
dec
es
and
inc
mov
stos
jo
packsswb
sbb
adc
xor
push
push
lret
jmp
lret
sbb
pop
xor
gs
iret
mov
lea
inc
xchg
jo
pusha
loopne
adc
add
test
stos
sbbb
push
mov
sbb
push
add
sbb
sbb
cli
mov
mov
pop
lcall
mov
push
cmp
jge
inc
sbb
out
push
pushf
out
mov
pusha
faddl
roll
sub
add
adc
aad
dec
sbb
stc
xchg
sti
std
nop
push
push
adc
push
pop
and
enter
lds
imul
pop
fmuls
aaa
movsl
lods
and
dec
movsb
icebp
or
mov
pop
push
and
mov
add
dec
enter
movsb
popa
andb
push
xchg
into
xchg
jne
dec
push
pop
cmp
mov
or
or
mov
aad
push
push
and
add
add
mov
jb
enter
stos
popa
add
and
test
in
aas
sbb
lea
or
and
add
mov
xchg
sbb
push
fimuls
je
or
jl
and
lret
mov
pop
add
mov
sub
dec
nop
push
inc
xchg
loopne
jg
leave
sahf
xchg
xor
inc
fstp
sub
jmp
cmp
jne
sbb
jmp
adc
jne
dec
fldl
mov
popf
nop
mov
stos
inc
adc
popl
jp
push
xor
sbbl
mov
pop
and
or
mov
fmull
pop
mov
mov
add
adc
not
mov
and
push
in
or
lahf
inc
ret
hlt
mov
and
lret
adcl
lcall
add
sbbl
leave
stos
jae
outsb
cmp
push
add
and
and
dec
test
and
rcr
pop
cmpsb
mov
pop
or
scas
push
adc
shl
cld
std
mov
call
sbb
jl
stos
mov
add
ja
xchg
xor
rcrb
popa
cld
jbe
mulb
insl
loopne
rorl
push
adc
adc
out
mov
scas
adc
pop
and
pop
cld
popl
inc
xor
cs
push
pop
ret
mov
push
sbb
push
loopne
add
xor
cmp
add
lock
sub
repnz
adc
call
movsl
adc
pop
xchg
and
dec
inc
std
pop
dec
mov
shl
xchg
or
shr
rep
adc
data16
push
sub
enter
dec
sbb
lea
push
pop
les
daa
daa
aaa
imul
mov
mov
aad
rclb
cmp
add
push
ja
jne
mov
adc
dec
inc
or
jmp
fdiv
ljmp
sar
stc
and
mov
inc
je
mov
test
or
fwait
outsb
inc
push
jo
gs
cli
or
ret
dec
fistps
xor
add
or
sti
mov
pop
mov
cmp
mov
inc
cmp
jb
ret
push
inc
cwtl
jns
or
ljmp
or
or
cld
sub
icebp
sbb
cmova
or
or
and
cmpl
pop
mov
cld
pushf
outsb
jne
fwait
aam
add
xor
push
cmp
jne
mov
push
cmp
rcr
cmp
jne
es
jne
call
into
or
lods
cli
jb
jmp
xor
push
dec
loop
adc
repz
cmp
jmp
std
std
jmp
cld
lods
cmp
adc
icebp
nop
adc
dec
dec
jl
shr
dec
lods
add
in
repnz
ret
mov
jbe
lods
xchg
pusha
outsb
pop
popa
mov
outsb
outsb
jge
jne
and
mov
sbb
sub
add
pop
inc
or
add
int
or
inc
jo
or
sub
sbb
adc
pushf
jbe
sbb
pop
std
cmp
nop
or
or
xchg
pop
xor
or
and
pcmpgtb
pop
cmp
mov
scas
sti
adc
stos
xchg
mov
loop
sbb
mov
adc
imul
aaa
test
fbld
movsb
pop
push
cmp
xlat
pusha
addr16
lahf
xchg
lock
cmc
or
mov
je
je
inc
jl
cmp
jg
add
add
push
insb
bound
fsubrp
adc
test
inc
popa
jge
push
push
push
push
sbb
mov
and
rclb
arpl
ja
xlat
insl
aam
jae
out
sub
push
mov
jmp
mov
fidivs
in
or
push
dec
mov
sbb
cwtl
xor
je
mov
sbb
jmp
mov
pop
mov
pop
lods
clc
pop
adc
push
lods
add
ret
dec
adc
pop
loopne
jne
cmpsb
loope
loope
shrb
cmp
push
pop
ret
push
xor
mov
xlat
add
push
add
ret
lea
outsb
into
push
or
or
push
add
sbb
mov
test
adc
add
mov
sbb
push
sub
or
shl
push
adc
jle
or
test
xor
add
add
sbbl
jo
jbe
jno
and
sbb
or
adc
cld
jne
shlb
xor
cld
decl
leave
stos
ss
cmp
je
test
je
cmp
movsb
out
and
fdivrl
aam
xchg
pop
addr16
outsb
or
or
enter
adc
xor
push
add
adc
push
add
pop
cmpsb
xor
add
add
pop
js
sub
mov
dec
clc
sti
roll
in
add
repz
add
dec
xor
fidivrs
sbb
addb
push
dec
in
push
adc
jo
mov
dec
aaa
test
add
mov
mov
cmp
mov
ret
mov
and
subb
add
pop
jo
push
cwtl
and
ret
inc
adc
out
xchg
jo
sbb
sub
jo
icebp
aam
mov
sub
sbbb
pop
or
int
jg
movsl
jae
cwtl
call
rclb
add
dec
mov
shr
cmpsl
sbbl
out
and
xor
inc
lods
inc
scas
push
inc
or
fldl
sbb
call
push
or
sarl
ljmp
add
fs
mov
loop
push
lods
jmp
mov
movb
pop
jmp
clts
pop
mov
add
mov
or
stos
push
and
push
gs
push
xor
cmp
imul
mov
push
pop
add
rorl
loopne
sti
pop
icebp
nop
ss
sbb
popl
add
pop
mov
jp
mov
ss
dec
push
das
cmp
mov
jmp
mov
negl
sub
mov
add
inc
push
test
incl
mov
and
test
cmp
mov
sub
xchg
add
sub
push
frstor
loop
mov
int3
rolb
flds
xorb
les
xor
push
push
and
and
jmp
xor
add
add
dec
lock
mov
out
mov
cmp
sub
dec
or
push
mov
pop
rcrl
jne
cmpsl
push
adc
sbb
mov
jecxz
gs
push
jnp
sub
lock
sahf
test
mov
shl
das
hlt
stos
rclb
cmp
loop
and
sbb
add
and
sub
adc
add
jge
mov
sbb
pop
inc
lea
pop
clc
aaa
ljmp
add
loope
lea
add
lock
and
sub
xor
lock
jno
sti
fldl
lock
mov
xor
lea
subl
sub
ds
inc
add
lea
sub
pusha
fcoms
jbe
sbb
sub
in
inc
dec
jae
xor
inc
mov
clc
adc
in
xchg
imul
adc
loopne
into
stos
mov
mov
xchg
sbb
jne
shlb
aad
cmp
jb
or
imul
call
sub
sub
jbe
cmc
pop
or
ljmpw
mov
fisubs
and
push
bound
add
int
add
inc
cmp
pop
dec
addb
pop
pop
pop
sub
mov
pop
pop
xor
sub
js
shrb
js
int
add
add
rcrb
js
ret
lods
and
adc
inc
inc
fcoml
mov
push
lods
mov
cmp
mov
pop
fiaddl
lea
mov
mov
call
jbe
push
cltd
pop
idiv
ljmp
lods
nop
cli
jle
adc
mov
aaa
dec
mov
mov
xor
pop
sub
test
jb
jmp
cmp
jae
dec
popf
sbb
pop
jae
pop
dec
add
loopne
cmp
push
dec
mov
mov
jne
add
sub
fistpl
xlat
and
inc
cmc
cli
sub
pusha
mov
mov
sbb
pop
jbe
test
nop
jnp
dec
insl
loopne
dec
adc
addl
adc
insl
fstpl
sbb
sbb
inc
dec
es
push
jne
sub
loopne
xor
pop
push
adc
add
inc
decb
aaa
stc
mov
mov
ds
mov
dec
movsl
sbb
push
pop
das
and
pop
decl
sahf
mov
je
xchg
or
add
jmp
fcmovb
cltd
push
adc
mov
and
je
or
xor
or
push
mov
ja
pop
sub
or
pusha
ret
push
and
dec
stos
pop
mov
push
cmpsl
pop
lret
rcrl
adc
jg
enter
fidivrl
jb
insl
or
addr16
jge
dec
call
xchg
cltd
pop
idiv
cmp
roll
pop
mov
push
popa
inc
mov
cmp
and
xchg
cmc
cs
add
sub
mov
sub
fnstcw
fs
mov
outsb
lret
push
dec
push
icebp
das
sbb
imul
add
jmp
jb
sbb
add
pop
adc
popl
xchg
movsb
or
test
ret
pop
leave
sbb
sbb
mov
decb
scas
xchg
push
jmp
shll
jne
incb
je
inc
adc
mov
addr16
mov
sbb
add
push
push
je
pop
push
call
gs
addl
gs
mov
and
dec
and
inc
xor
jecxz
pop
or
ret
sbb
pop
daa
cltd
cmp
jle
mov
ficomps
pop
dec
xchg
pop
adc
pop
mov
xlat
rcrb
loope
xchg
sub
mov
and
jne
mov
fs
scas
scas
loopne
pushf
add
enter
sbb
or
cmp
ret
loopne
cmp
cmp
in
pop
push
mov
push
fs
mov
xchg
dec
adc
cmp
es
sub
adc
sbb
js
or
push
pushf
fs
cmp
iret
rorl
push
icebp
xchg
or
inc
xchg
dec
jmp
and
rolb
sbb
fmul
mov
jb
mov
xchg
orl
adc
subl
mov
mov
jne
or
mov
loopne
data16
idivl
adc
adc
or
repnz
enter
add
push
cmp
cmp
notb
sub
cli
xchg
pushl
lods
js
rorb
ljmp
push
imul
rorl
mov
arpl
dec
push
jb
in
test
pop
mov
inc
repnz
mov
aad
xor
sahf
insb
andl
push
adc
je
mov
rol
es
je
mov
mov
sbb
mov
adc
pop
lcall
jnp
dec
inc
jae
je
popa
ds
push
in
cmc
andb
sbb
add
xorb
pop
roll
sub
dec
push
mov
adc
adc
lret
dec
sbb
fisubs
or
mov
or
sub
sbb
or
icebp
adc
mov
das
ret
mov
add
push
pop
push
andl
add
dec
mov
sarl
sub
test
mov
inc
sar
sub
pop
int3
inc
adc
xor
scas
scas
add
add
js
or
push
ret
pop
leave
lret
repnz
es
int3
mov
popa
dec
mov
push
popf
push
xor
adc
loopne
hlt
push
mov
and
mov
xchg
sbb
dec
movsb
js
pop
inc
sub
sahf
xchg
cmpsl
inc
andl
sarb
mov
mov
shlb
in
rcrb
lds
vandnps
ret
inc
dec
mov
or
adc
jl
mov
dec
adc
inc
loopne
dec
inc
dec
lcall
jle
mov
jmp
lret
dec
mov
scas
dec
cmc
sbb
and
scas
iret
or
jnp
push
sub
mov
jp
sbb
dec
loopne
adc
inc
and
sub
fsubs
push
rcl
test
mov
imul
sbb
movsl
adc
mov
jne
or
sahf
lahf
int3
xor
jns
and
push
mov
stos
rcl
push
mov
nop
jbe
or
jo
push
insl
inc
ret
mov
push
ljmp
mov
shl
xor
je
sbb
inc
push
jmp
aaa
incb
pop
cmpb
jne
inc
inc
mov
mov
mov
loopne
push
dec
inc
inc
pop
cld
ja
or
cmp
sbb
pop
sub
cmp
rcrb
cmc
and
dec
mov
and
xor
ja
pop
adc
or
mov
dec
testb
inc
repnz
push
push
xchg
dec
mov
sub
ss
sbbb
and
mov
mov
dec
or
push
inc
and
std
lahf
mov
adc
jmp
aam
clc
adc
call
in
jne
add
shll
mov
je
test
add
mov
jb
das
icebp
push
xchg
or
hlt
mov
test
jge
add
mov
dec
inc
jge
and
repz
add
cmpsl
add
mov
add
cli
push
dec
xor
dec
mov
das
int3
add
test
sub
roll
cmp
and
fiadds
mov
subb
adc
out
es
setbe
jo
ret
test
test
std
sahf
add
mov
jb
rep
jmp
mov
or
or
mov
pop
push
add
test
cmp
pusha
nop
wrmsr
jle
sti
push
in
or
les
shrl
push
dec
mov
add
add
mov
mov
dec
add
add
add
sub
movsb
cmpsb
nop
inc
xor
xchg
and
push
xor
jns
out
and
adc
cmp
aaa
adc
in
inc
in
call
repz
in
lock
jecxz
cmp
hlt
clc
clc
cld
cld
lea
mov
clc
repz
popa
sbb
jmp
mov
insb
or
or
pop
sti
and
and
daa
mov
xor
jl
cld
pop
and
std
aas
insb
jle
cld
out
push
in
neg
rcll
and
inc
jno
daa
stc
sub
mov
nop
or
push
and
fisubrl
rcr
mov
add
sahf
inc
push
out
mov
dec
in
add
xorl
addr16
mov
bound
or
iret
repz
test
mov
pop
iret
shl
ss
sbb
repz
sbb
adc
or
iret
repz
or
add
mov
xchg
push
add
and
adc
push
add
pop
push
lods
push
add
int3
or
adc
lock
sub
rorb
test
push
cmp
jge
mov
je
aas
or
cmp
testb
push
outsl
pop
mov
jmp
add
xor
repnz
rol
cli
add
or
pop
sub
or
pop
mov
jmp
pusha
sbb
jne
push
sbb
mov
adc
sar
push
mul
cmp
inc
and
cmp
inc
sbb
push
inc
mov
fidivs
adc
addr16
push
sbb
ljmp
adc
movl
pop
int
push
adc
or
sub
or
jmp
imulb
cmp
push
scas
roll
lods
sub
sarb
sbb
rorb
andl
icebp
shll
adc
xor
cmpsb
test
sub
or
nop
popa
or
icebp
dec
aas
nop
test
and
aam
pop
sub
push
rcr
or
cmp
inc
enter
add
push
leave
inc
cs
pop
cs
cmp
inc
loopne,pn
cltd
outsl
pop
inc
pause
xchg
add
sbb
jecxz
mov
inc
inc
cmp
testl
cmp
daa
cmc
out
shll
mov
in
add
mov
fisttpll
mov
jne
push
or
cmp
fdivs
stos
mov
inc
jecxz
dec
ljmp
call
pop
repz
dec
add
mov
adc
in
jnp
shll
dec
in
data16
dec
sbb
or
call
stc
imul
pushf
dec
dec
dec
imul
add
stos
or
test
xor
iret
sbb
push
cmp
dec
mov
daa
dec
clc
mov
in
and
dec
rcrl
hlt
fcoml
shll
fcmovnu
imul
ret
lods
sub
mov
fucom
in
inc
pop
inc
imul
aaa
push
loopne
pop
pop
mov
dec
sbb
sub
addb
xchg
andl
jl
push
dec
daa
push
adc
mov
pop
push
xor
jno
jl
add
or
std
fcoml
lods
popf
aam
sarb
mov
xchg
clc
or
test
mov
shrb
lock
je
out
test
fisttps
mov
aaa
jle
in
xor
cmpsl
adc
loop
lock
pop
in
xchg
data16
clc
jno
insl
push
jne
lods
pop
scas
call
xor
push
mov
pop
add
fs
cwtl
mov
sti
mov
mov
gs
add
test
mov
and
xchg
inc
call
dec
pop
push
subl
fdivs
dec
and
add
adc
add
mov
inc
shlb
or
aam
mov
in
push
iret
loopne
mov
adc
test
inc
inc
mov
popf
or
push
xchg
and
pop
inc
movsb
push
push
adc
adcb
adc
shll
push
adc
fiadds
in
pop
push
adc
xchg
subb
jo
into
setns
jb
pop
and
aad
pop
pop
daa
xor
mov
or
inc
pop
sub
lahf
mov
test
inc
icebp
mov
je
or
and
xchg
mov
rcr
test
aas
jb
in
addb
clc
pop
adc
nop
rclb
roll
mov
sub
sub
pusha
and
pop
aad
addb
inc
loop
push
cmp
and
jecxz
stos
mov
addl
call
xchg
sub
push
int
xchg
es
xchg
neg
sub
push
pushf
dec
mov
adc
sbb
pushl
insl
pop
mov
cmp
add
lahf
mov
test
jp
add
push
mov
stos
mov
stos
movsl
mov
in
jge
lock
shrl
sbb
adc
jmp
inc
loopne
movsb
jmp
hlt
or
or
pop
adc
add
in
and
inc
add
imul
or
movsl
dec
dec
push
dec
push
flds
leave
pop
out
add
xchg
cs
push
pop
sbb
loopne
mov
nop
clc
pop
cmp
enter
lds
imul
xchg
add
cld
adc
push
or
jb
dec
xlat
fistpl
add
fldcw
lahf
addl
add
aam
testl
and
xchg
lock
adc
out
aas
push
je
ficoml
cmp
dec
adc
jne
sbb
pop
push
gs
pusha
std
std
cmpps
and
jecxz
es
imul
scas
mov
subl
xor
ss
sahf
jge
mov
sub
sub
lea
sahf
xchg
sub
out
stc
das
adc
sub
push
pop
leave
mov
inc
sbb
sub
mov
adc
sbbl
jne
pushl
adc
notl
mov
sub
push
add
or
jp
repz
sub
dec
roll
imull
ss
mov
sbb
adc
add
sbb
hlt
and
push
add
inc
loopne
and
jnp
out
or
and
xchg
xor
aaa
insl
dec
scas
in
pop
cmp
jecxz
sub
pop
popa
push
sbbb
nop
sahf
sub
xchg
and
or
ror
bound
nop
sbb
test
push
imul
jmp
ret
pop
xchg
dec
rorb
lret
pop
jl
jmp
lods
xchg
jo
mov
insb
int3
push
fdivrs
frstor
push
es
shlb
or
mov
xchg
pop
dec
loope
loopne
xor
push
mov
mov
fcoml
pop
jp
ret
jp
push
cli
sub
rcr
mov
mov
xor
nop
data16
xchg
push
and
aaa
add
push
or
or
inc
mov
or
pop
inc
mov
in
test
fs
in
push
cld
mov
push
imul
and
sti
sbbb
dec
fs
push
cld
dec
xchg
aam
inc
xchg
inc
aaa
mov
cwtl
sbb
add
push
xor
repnz
and
loop
into
dec
and
loop
xor
push
cmp
insb
xor
and
jo
jmp
mov
cmp
or
inc
loopne
add
mov
push
in
lods
add
jnp
xor
sbb
adc
scas
sbb
xchg
rcrl
sub
rcr
sub
adcl
xchg
mov
aaa
cmp
dec
adc
lret
test
mulb
inc
or
mov
mov
pop
jl
xchg
sub
stos
mov
adc
lret
hlt
add
clc
xchg
add
xchg
lret
rolb
jne
dec
fwait
push
rcll
iret
xor
dec
mov
arpl
bound
xchg
xchg
sahf
sub
pop
test
movsl
or
movsb
mov
in
cmp
cs
outsb
loope
and
push
mov
push
mov
or
mov
lcall
add
inc
loopne
mov
push
test
inc
fmuls
inc
fs
cmp
scas
mov
pop
divl
push
das
xor
int
cld
mov
dec
cmpsb
addl
xor
js
jg
inc
dec
ljmp
jns
hlt
pop
leave
sti
mov
rcrl
xorb
sbb
lcall
mov
cmp
and
ljmp
sbb
fcmovu
mov
sub
je
or
or
jno
cmp
or
xchg
loope
and
pop
pop
cmp
or
cli
add
jmp
andl
add
xor
dec
jle
jae
mov
adc
push
cmpl
ror
mov
sub
cmp
add
jle
ret
lods
addb
add
xor
bound
mov
pop
lea
xchg
lret
test
jp
mov
imul
sub
cmp
jmp
movsb
into
icebp
dec
out
jae
adc
lds
mov
sbb
aad
dec
jmp
incb
push
es
iret
filds
mov
aam
dec
ret
cli
push
enter
lahf
cmp
cmp
mov
adc
into
iret
movsl
or
mov
inc
mov
push
adc
popf
loop
mov
jl
ljmp
lea
cmp
ja
movsbl
add
xchg
pushl
daa
add
subb
clc
lods
adc
roll
mov
and
push
mov
data16
orb
pop
sbb
enter
ret
jb
xchg
push
jb
movb
rorb
add
mov
bound
jne
loopne
pop
or
add
cmpsl
in
add
lret
add
orb
leave
mov
sti
xchg
jnp
stos
insb
mov
loopne
lahf
popa
mov
imul
cs
sub
pop
xor
push
pop
xchg
xchg
call
mov
inc
mov
push
or
inc
fadd
push
jae
je
loop
fdivrs
sbb
lahf
sahf
dec
cmp
inc
adcb
sub
aad
mov
mov
ret
rclb
xor
sbb
jb
adc
inc
mov
fiaddl
inc
fs
or
sub
cmp
push
outsl
ss
push
lcall
lods
je
mov
push
add
ret
push
jns
jp
rorb
jge
aad
rolb
xchg
nop
mov
in
or
jbe
mov
inc
push
lods
sub
clc
inc
mov
les
push
mov
mov
adc
or
stos
shr
es
ret
test
mov
out
xchg
insl
into
test
sbb
sahf
add
pusha
and
jne
xor
jl
cmpsb
add
mov
adc
lea
or
decb
cmp
or
add
mov
movsb
loopne
and
jo
outsb
pop
sbb
sbb
sub
fisubrs
pusha
push
mov
stos
sbb
aad
je
pop
cld
push
cmpsb
xor
adc
aam
or
insb
adc
aam
mov
adc
fdiv
addl
aaa
push
jno
mov
sub
lock
cmpsl
jl
shrb
testl
adc
rorl
xchg
jno
repz
movsb
add
sub
jl
cmp
jbe
cmp
adcb
jle
jl
jge
and
je
outsl
scas
negb
lock
adcb
add
jmp
test
adc
jo
pop
mov
test
or
cwtl
cli
sub
mov
insl
mov
or
adc
daa
int3
mov
fisttpl
rol
ficompl
test
add
sbb
push
push
or
aam
mov
orl
loopne
mov
jg
jge
test
push
sub
inc
imulb
cli
addr16
and
iret
clc
lcall
idivb
paddusb
cmp
pop
push
jle
pop
mov
push
loopne
push
mov
mov
add
mov
or
jl
andl
cmpb
jge
daa
or
dec
or
mov
fildll
xchg
lea
push
ret
push
add
dec
aad
subl
sbbb
mov
jl
adc
push
push
je
dec
add
rcrb
and
jo
sub
loope
mov
in
loopne
push
in
testb
pop
insb
int3
call
cmc
sbbb
or
pop
mov
jo
dec
daa
add
pop
inc
sub
push
dec
or
add
mov
lds
adc
insl
test
mov
add
sarl
data16
sub
in
mov
push
inc
or
sbb
sub
cltd
fimull
sub
mov
xor
adc
fcoms
neg
ret
cmpsl
nop
push
xor
fs
fisubrl
jg
pop
sbb
les
mov
mov
or
mov
dec
jo
movsl
lea
pop
clc
xor
xchg
dec
inc
or
xor
xchg
pop
in
cltd
push
push
push
mov
cld
add
mov
mov
inc
xor
mov
dec
jmp
cmp
int
sub
inc
das
ficoms
frstor
into
add
lods
andb
xchg
nop
ret
or
add
inc
jmp
dec
data16
outsb
mov
add
ss
sti
add
xchg
negl
add
mov
roll
xchg
pop
fldl
cmpsb
js
or
sub
add
adc
jmp
add
int3
mov
sub
jecxz
pop
mov
push
adc
sbb
fwait
sub
fdivs
xchg
mov
xchg
or
roll
es
dec
pop
adc
add
mov
push
xor
movsl
pusha
push
jecxz
les
push
push
adc
jne
jno
adc
cwtl
or
inc
cmpb
hlt
in
sbb
add
add
sub
push
insb
add
dec
fiaddl
and
jmp
inc
fsubrp
sbb
jl
sahf
rcl
dec
push
add
push
sub
mov
out
adc
js
daa
pop
mov
mov
cmp
push
fdivr
xor
lea
mov
test
xorl
push
ljmp
fldt
push
push
mov
pop
sarb
inc
or
cmpl
daa
and
cmp
add
adc
test
sbb
add
cltd
mov
ret
incl
jne
and
xor
sbbb
jg
mov
dec
dec
les
push
lea
or
xchg
mov
xorl
loopne
fildll
sbb
out
or
loopne
push
hlt
insl
inc
jl
mov
push
loopne
leave
ret
movsl
imul
jo
jne
mov
cs
add
inc
mov
dec
xor
xor
adc
leave
cmp
xor
pop
push
movsl
insb
fstpl
pop
add
jb
movsl
push
aaa
mov
movsl
or
pusha
movsl
scas
movsl
push
outsb
stos
sbb
jne
jnp
cmpsl
jbe
mov
outsl
xor
sbb
pop
scas
or
pop
je
inc
inc
cmpsl
inc
xor
rorb
push
xor
xor
sbb
arpl
aaa
stos
xchg
movsb
repnz
push
stos
mov
mov
mov
mov
jl
es
sbb
inc
scas
dec
inc
call
cmpsl
jge
cmp
cwtl
pop
jno
jge
cmc
push
hlt
lods
outsb
lods
sub
mov
mov
add
repnz
dec
es
movsl
dec
add
movsb
jg
fstp
pop
shlb
xchg
inc
clc
mov
push
and
xor
mov
push
cwtl
cmpsl
mov
cwtl
lods
inc
and
enter
dec
sbbl
jno
add
lea
leave
leave
pop
mov
lret
jns
pop
mov
pop
dec
add
fdivs
call
jns
inc
fsubl
push
in
cwtl
test
xchg
inc
push
arpl
dec
xchg
mov
repnz
nop
and
pushf
cwtl
mov
nop
mov
add
and
pushf
leave
add
aad
jb
mov
fcmovu
cmp
negb
or
adc
cld
hlt
lds
insb
sahf
fisttpl
sub
mov
fdivp
adc
mov
xchg
pop
enter
adcb
ficoms
or
mov
popa
or
fistpll
push
dec
fistpll
neg
xchg
push
and
adc
cmp
out
add
cld
hlt
or
push
inc
fistps
jmp
push
pop
fs
test
push
sbb
mov
fidivrs
cmp
push
lock
cmp
mov
sbb
sbb
fcomip
mov
nop
push
cwtl
mov
test
mov
add
inc
sahf
in
add
mov
push
hlt
addl
repnz
mov
rcrb
cmc
std
or
xchg
mov
les
xchg
cmp
jne
add
add
jmp
adc
sub
xchg
rcl
jmp
and
sbb
adc
popf
ret
dec
jle
mov
in
ja
nop
add
add
or
cmp
and
ljmp
jne
sub
dec
dec
mov
xor
xor
shlb
popa
mov
sbb
shll
xchg
sbb
out
scas
mov
push
add
add
hlt
push
sahf
into
mov
push
imul
inc
xor
sbb
or
dec
lahf
js
pusha
dec
in
adc
or
lock
xor
aam
rclb
mov
cmpsb
sbb
pop
pop
xchg
imul
fsubl
push
add
shll
adc
enter
add
into
mov
mov
mov
dec
lea
out
daa
or
pop
jmp
sbb
mov
xor
int3
pusha
aaa
or
pop
adc
add
jo
xchg
icebp
hlt
mov
testl
popf
out
and
add
aam
test
sub
rcr
sbb
aas
push
push
sub
mov
ret
imul
jbe
loopne
mov
fstp
pop
xchg
push
out
lcall
sub
push
nop
scas
cmp
jbe
outsl
inc
inc
cld
and
dec
and
divl
int
push
orb
mov
lods
jmp
sbb
ss
mov
adc
getsec
xlat
mov
out
xlat
inc
js
lahf
pop
sub
mov
out
lea
pop
and
mov
dec
movsl
cmp
or
loopne
loop
or
dec
inc
cmp
jb
cmpb
inc
mov
dec
add
inc
jo
fld
sub
insb
lret
push
cmpsb
xchg
pop
rcrl
add
scas
inc
arpl
fwait
sub
lahf
les
js
movsb
cmpb
sahf
push
add
pushf
mov
mov
dec
mov
pop
insb
push
mov
xchg
jmp
mov
inc
cmpsl
sarl
inc
mov
arpl
push
cwtl
cmp
jne
movl
mov
inc
shll
jmp
sub
rorb
or
mov
mov
cmp
pop
or
addb
inc
sub
push
xchg
test
xor
cmp
mov
jl
xorb
cmp
inc
repz
clc
rclb
cmp
sub
std
and
in
push
jmp
lock
mov
loope
ljmp
inc
ret
sub
push
aas
rolb
std
push
lcall
call
loope
gs
mov
cmpsl
cmpsb
add
inc
push
leave
inc
cmc
mov
fmuls
leave
add
cs
loopne
mov
push
jnp
sbb
hlt
sub
xchg
inc
ds
mov
fistpll
inc
cmp
or
ljmp
jo
jo
inc
xchg
push
jg
jge,pt
add
jb
mov
add
inc
stos
inc
xor
push
jl
xchg
and
xchg
or
add
pusha
xchg
jne
mov
dec
xor
dec
loopne
sbb
jle
fninit
or
xor
push
mov
push
jle
or
jne
lock
rorb
stos
mov
jmp
js
add
push
jnp
cmpsl
cmp
iret
adcb
sbb
adc
shl
incl
mov
sbb
lea
popa
or
push
fsub
adc
jo
into
xchg
xor
cli
insl
sbb
mov
nop
and
mov
and
int3
jge
ret
xchg
pop
jne
sbb
pop
push
dec
int3
push
xor
pop
push
aam
xor
xlat
testb
insb
ljmp
sub
adc
and
jle
push
or
mov
rcl
fwait
les
into
dec
out
divl
pushf
inc
jmp
xor
dec
sbb
mov
mov
add
add
adc
aad
ljmp
adc
jno
daa
ljmp
mov
jmp
popf
jmp
dec
and
sti
xchg
and
addr16
filds
int
sub
fwait
mov
ljmp
pop
pusha
and
or
cmc
das
adc
fs
xchg
xchg
jno
subb
xor
mov
xlat
fimull
lea
or
push
jnp
test
mov
js
cmpl
ret
adc
xor
push
jo
and
and
lods
inc
push
jo
xor
inc
or
push
sbb
mov
sub
pop
xorb
sar
cmp
pop
cmp
jne
sbb
lds
lods
pushl
xor
imul
sbb
ficomps
inc
xchg
pop
cmp
sub
pop
mov
mov
mov
popa
and
clc
ss
add
je
cmp
ljmp
jle
jg
cmp
dec
faddl
or
imul
fcmovnb
cmp
inc
add
adc
lock
aad
jns
inc
pop
pop
sbb
cmp
sub
lahf
mov
loop
shrb
push
mov
sbb
sbb
cmpsl
or
aas
mov
mov
andl
leave
push
add
lock
stos
push
or
add
add
ja
aaa
sbb
insb
leave
lea
cmc
jle
inc
jmp
pop
push
dec
dec
les
out
out
fld
inc
mov
mov
sbb
cwtl
sub
inc
mov
loop
sbb
mov
xor
fists
push
push
rcrb
scas
aas
mov
scas
mov
test
shlb
sub
insb
lds
movl
or
mov
lods
out
or
imul
jg
jo
mov
lahf
xchg
jbe
push
xor
inc
xor
imul
pop
dec
pop
arpl
in
and
rorb
jae
push
or
dec
pop
adc
inc
cmp
inc
and
push
xchg
lret
mov
aas
mov
push
ds
aam
in
addr16
call
xor
shl
pop
pop
push
and
pop
jnp
aaa
jmp
xor
cmp
dec
in
cmp
roll
sbb
sbbl
sub
enter
dec
and
cmpsl
add
and
sbb
jns
jmp
add
xchg
xor
mov
insb
and
pop
cmp
cmc
adc
xchg
imul
inc
insl
pop
test
lds
jge
add
mov
mov
inc
and
scas
mov
jmp
ret
lfs
mov
test
shlb
mov
daa
ret
popf
scas
add
daa
call
daa
mov
call
and
mov
adc
xchg
jo
pop
mov
ja
test
push
and
sub
or
or
pop
stc
sub
push
fs
pop
fistpl
outsl
inc
stos
xor
dec
jge
jae
vcmpps
add
dec
ficompl
push
cmp
or
roll
cmp
lock
mov
adc
popa
sbb
ja
aaa
cmp
jle
lret
sub
push
andb
or
lret
jne
sub
movsb
jge
inc
push
sbb
adc
out
cmp
jne
xor
and
pause
dec
or
or
sub
or
xor
loopne
nop
shll
pop
or
inc
xchg
lcall
loopne
pop
jb
adc
negl
add
jno
ret
je
orb
aas
dec
mov
fstpt
loopne
jo
xchg
add
inc
in
mov
fwait
cs
push
dec
test
aam
lock
inc
call
mov
jno
jno
mov
sub
es
inc
jns
add
ss
ja
dec
dec
add
es
movl
and
sbb
mov
aas
clc
and
mov
pusha
in
xor
pop
lods
and
or
push
xor
adc
orl
sarb
push
outsb
adc
add
pop
lea
sub
ret
push
cwtl
fs
lock
xchg
pusha
xchg
lds
lahf
push
test
out
mov
add
mov
and
jne
addb
test
and
mov
mov
adc
test
inc
cld
jb
test
mov
jecxz
push
inc
add
push
je
jmp
lods
ret
cltd
pusha
int3
lret
fadd
adc
pusha
jb
and
cld
addb
push
mov
or
outsl
mov
add
sub
xor
divl
adc
ljmp
je
or
jg
inc
ret
dec
dec
pop
bound
jle
jg
out
loopne
popa
add
sub
mov
sbb
incb
and
stos
bound
addr16
mov
cmp
aas
in
je
fs
fs
sbb
or
sbb
fistl
add
mov
inc
add
shlb
jle
not
push
adc
nop
pop
sub
lock
jp
mov
pop
xchg
mov
sbb
das
dec
and
not
and
or
mov
movsl
cmp
rcrl
nop
clc
enter
push
jg
lret
daa
add
jbe
gs
lods
aas
sub
mov
push
imul
sbb
enter
push
mov
test
loopne
lods
in
pop
fdivl
add
imul
xor
or
test
js
sub
add
cwtl
pushf
lea
fmul
add
add
adc
xchg
adc
mov
mov
fldl
or
movsb
sarb
dec
outsl
test
ds
cmp
enter
sub
xchg
jmp
sbb
ja
mov
cmpl
xor
popa
sbb
inc
sbb
cmp
in
xchg
inc
pop
mov
into
das
mov
pop
add
je
dec
add
mov
mov
and
sbb
adc
inc
push
sub
js
test
sbb
push
push
lahf
enter
inc
in
ficomps
pop
pop
shl
fstpl
xchg
inc
fs
add
xor
adc
cltd
dec
imul
mov
mov
and
inc
pop
dec
inc
enter
inc
jmp
jns
jmp
cmp
pusha
fdivs
mov
lock
push
in
xchg
jne
add
and
jns
adc
cwtl
movsb
push
lods
mov
out
sahf
mov
cmp
in
cmc
push
fsubs
sbb
fildll
or
xor
in
pop
lock
and
ret
int3
and
enter
fdivrs
xor
xor
loop
cmp
inc
dec
push
jnp
adc
cwtl
sbb
xchg
les
loopne
ja
push
push
cltd
jmp
inc
faddl
xorl
sbb
test
test
or
jmp
out
jp
xchg
and
ret
and
push
push
test
jmp
xor
or
sbb
ds
mov
add
push
mov
testl
bound
test
pushf
lcall
xchg
cld
clc
andl
add
xor
pop
add
scas
movb
pop
pop
or
push
adc
mov
mov
sbbb
pushf
inc
daa
icebp
push
sbb
xchg
lock
inc
lcall
or
lock
jl
or
iret
push
jmp
rclb
repnz
ret
cwtl
add
lret
outsb
scas
jmp
jnp
inc
mov
ficomps
dec
fwait
cmovns
jp
pop
dec
push
mov
or
sbb
or
add
mov
mov
inc
cltd
out
bound
add
cld
nop
ss
or
xor
fsubrs
mov
sub
rorb
lea
cmp
orb
pop
ja
cs
adc
mov
cmp
ficoms
xor
cmc
pop
add
pop
sub
pop
push
sbb
test
cmp
and
lods
clc
sub
mov
test
jae
pop
addb
xor
adc
call
add
fidivs
adc
ja
pop
jmp
sbb
fwait
out
and
add
iret
orb
add
or
stos
add
jmp
lcall
push
es
jae
jl
push
test
and
insb
lahf
mov
xchg
dec
mov
lods
or
lea
inc
cmp
lcall
je
pop
sub
pop
pop
mov
cmp
adc
push
xchg
push
das
or
dec
jmp
or
mov
add
and
rcll
xor
jb
inc
ljmp
cwtl
andb
jne
inc
and
inc
stc
push
sbbb
xor
leave
xchg
rcll
clc
stc
out
mov
or
dec
push
insl
xor
cmp
daa
push
push
lea
mov
sbb
jp
adc
and
xchg
stos
shrb
lea
nop
dec
sbb
adc
or
into
and
loop
jg,pt
cmp
push
aad
sub
adc
dec
inc
cs
pshufw
daa
cmpsb
xor
sbb
insb
pop
and
in
dec
int
orb
or
nop
cmpl
xchg
cmpb
outsb
lea
lahf
pushf
jp
or
fs
cmp
mov
stos
adc
add
fdivr
pop
mov
sbb
and
add
lods
pop
cmp
add
mov
pop
repz
cmpsl
pop
or
pop
aad
fwait
adc
in
cmp
jb
div
fistps
mov
out
add
xor
adc
pop
adc
push
movsb
decb
sub
cmp
jne
fwait
inc
pop
ja
and
clc
sahf
and
mov
mov
xchg
inc
enter
sarl
pop
andl
or
stc
mov
jl
je
fs
aas
icebp
jle
cmpsb
jmp
cmp
scas
or
outsb
cmp
xchg
mov
dec
cmp
push
xchg
cmp
jb
push
cmp
mov
pop
xchg
mov
xlat
pusha
rol
rcrb
xor
pop
rcll
xchg
test
sahf
pop
mov
daa
shrb
sub
pop
sub
loope
cli
lock
cld
adc
and
mov
cmp
aam
movlps
jbe
stc
jg
sub
adc
inc
inc
jmp
adc
cmc
jbe
push
shl
mov
mov
in
fstpt
out
loopne
sbb
mov
inc
push
xor
cmp
jl
mov
inc
push
jne
jnp
push
push
dec
xor
lret
adcl
popa
arpl
int
cmpb
add
add
test
pop
push
jle
and
ret
cmp
in
or
ss
enter
mov
adc
out
sub
ja
mov
loopne
aam
add
in
lods
dec
lret
xchg
je
sub
mov
cmpsb
popa
ljmp
leave
xor
fsubrs
xchg
adc
repnz
xor
mov
cmc
xorl
pop
xchg
inc
fcmovnb
inc
or
add
jb
push
gs
jo
pop
inc
popf
adc
dec
test
inc
xchg
dec
xchg
inc
test
cmp
pop
dec
push
or
xchg
add
inc
dec
daa
adc
jmp
jae
cmp
push
xor
dec
jmp
xor
dec
pushf
andb
inc
orl
or
loopne
mov
add
inc
pop
je
mov
es
xorl
xchg
es
push
mov
pop
add
shr
xor
in
mov
adc
add
mov
setle
inc
or
lcall
or
or
cmp
sub
rorb
mov
or
into
inc
add
xor
int
shrl
pop
add
adc
je
adc
or
rorb
mov
sbb
mov
push
rolb
inc
pop
sarb
push
iret
enter
pop
inc
mov
xor
cmpsl
sbbl
sbb
hlt
pop
inc
jge
inc
push
loopne
fbld
lock
or
dec
inc
inc
shl
out
stos
orb
jb
push
loopne
jmp
int3
pop
sub
push
push
jl
aam
orl
mov
push
addb
jne
hlt
push
pop
jae
mov
push
clc
sub
ja
cmp
leave
jp
cmp
add
xor
lock
or
fistpll
outsl
push
add
ret
push
sar
inc
push
jb
jg
mov
call
data16
je
sbb
pop
sbb
sub
sub
shr
ds
inc
out
loopne
pop
cld
fcoms
adc
xchg
subl
adc
repz
ret
pop
push
lds
add
jmp
jl
mov
sbb
es
ret
outsb
enter
test
movw
mov
dec
add
pop
movb
xor
shrb
push
sti
add
jle
jb
push
push
lret
lahf
lods
ror
test
lret
sbb
icebp
or
ret
mov
add
outsl
fcomp
jge
mov
add
fstpl
cmp
add
arpl
mov
mov
andl
pusha
pop
orb
add
sahf
pop
or
cmp
or
rorb
into
pop
aas
js
add
sub
shll
mov
jl
punpcklbw
jle
repz
dec
incb
jbe
dec
loope
rclb
or
push
add
or
mov
adc
or
clc
aad
clc
add
cmpsb
jmp
jns
pop
sub
push
sub
dec
hlt
or
jmp
mov
add
sbb
xchg
inc
pop
jl
clc
repz
xchg
out
jmp
xor
push
orb
jmp
sub
cmp
mov
pop
jmp
lea
inc
addl
dec
sarb
push
in
sub
xor
mov
inc
or
add
addl
daa
je
push
mov
bound
daa
pusha
movl
inc
repz
mov
out
pusha
sbb
inc
dec
inc
jp
push
fisttpll
mov
or
fcomi
dec
clc
sbb
sbb
xlat
cmpl
ds
out
mov
push
add
test
cmp
adc
jmp
je
jnp
add
dec
dec
shlb
or
and
lock
sti
jmp
pop
mov
push
inc
inc
xor
and
adc
scas
push
pop
mov
test
ret
pop
fsts
inc
xor
lock
add
pmuludq
pop
inc
or
mov
fisttpl
cmp
pop
push
pop
push
sbb
cmpsb
adc
xchg
out
pop
pop
xchg
pusha
pop
lock
jns
ja
fs
sbb
fbstp
jp
je
or
test
sbb
add
iret
fnclex
dec
push
and
into
sub
mov
aaa
aam
or
fcomps
imul
outsb
push
lock
mull
add
sbb
adc
xchg
mov
mov
jmp
popf
in
cli
ljmp
repz
dec
mov
mov
out
jb
cmp
or
ficomps
or
xor
and
aas
dec
popa
push
or
ficoml
xor
lret
iret
sbb
mov
adc
inc
or
sbbb
and
and
adc
ja
add
add
inc
loopne
xor
or
pop
adc
jne
dec
inc
pop
vmovapd
cwtl
and
add
cli
sub
or
jnp
mov
rcrl
or
or
jl
mov
cltd
jnp
pop
call
lock
lods
sub
call
pop
fidivs
outsb
xor
add
push
jmp
test
xchg
add
push
push
push
fldcw
inc
pop
pop
lock
dec
je
outsb
mov
int
or
mov
add
or
push
dec
dec
loopne
dec
pushf
sbb
or
nop
mov
pop
sub
dec
test
lret
cmp
and
out
lea
shr
mov
mov
divl
push
popf
insl
add
mov
test
mov
mov
add
sbb
jl
ja
pop
jb
jp
or
inc
push
into
jnp
dec
dec
or
fwait
into
xchg
and
aam
xchg
leave
jmp
fs
addb
in
aam
ja
push
test
mov
or
xadd
mov
cmpsl
and
inc
cmp
or
cmp
out
nop
adc
cmp
jb
mov
xchg
out
and
sub
jecxz
jmp
adc
sub
mov
mov
or
or
dec
mov
xchg
push
fisubl
rol
wbinvd
xchg
jmp
mov
mov
adc
sbb
dec
sub
andb
jmp
add
jo
xor
dec
addr16
stos
jb
push
je
test
push
loop
ljmp
xchg
add
jp
xor
add
pop
and
and
or
mov
leave
or
add
out
push
jne
mov
sbb
enter
jle
repnz
push
pop
sbb
cmp
cmp
dec
cltd
pop
mov
or
faddl
mov
je
loopne
rorl
cli
idivl
pop
push
mov
push
dec
add
or
out
adc
cmpsb
sti
jmp
les
mov
mov
mov
or
jp
xor
mov
loop
mov
outsl
pop
mov
add
dec
cmp
in
add
lds
xor
cmp
stos
sbb
and
push
add
mov
stc
sahf
insl
popf
ret
mov
imul
bnd
es
mov
push
xor
sarb
ret
ret
jp
sbb
mov
inc
outsl
fsubr
push
fldt
jnp
xor
sub
out
outsb
int3
push
pop
push
daa
dec
adc
int
movsl
mov
jne
test
adc
repnz
scas
outsl
jo
push
jb
cmp
insb
popf
push
cmpsl
or
or
call
icebp
repz
fimull
inc
and
fnstenv
imul
inc
fidivl
test
xchg
mov
lahf
das
adc
add
inc
push
movb
mov
rcrb
sbb
adc
sub
xor
cmp
inc
jmp
pop
ret
sbb
lds
cmp
jne
imul
push
xorb
push
xor
or
push
adc
cmp
and
push
push
outsl
shrb
je
pusha
scas
ljmp
shl
xor
icebp
xor
das
test
mov
and
push
xchg
jne
push
adc
fstp
loopne
or
incl
cmpsl
push
mov
mov
stos
dec
add
test
jb
inc
and
jo
clc
outsl
jae
and
shr
je
orb
add
push
dec
adc
push
and
fbstp
cwtl
xor
dec
and
push
jg
out
repz
jle
inc
or
jbe
jle
xor
stc
jl
jg
jg
jg
jo
mov
xchg
test
aaa
dec
jne
adc
pop
mov
pop
ffreep
gs
adc
push
adc
xchg
out
fidivl
add
dec
mov
or
inc
inc
or
negl
ret
mov
dec
sub
sub
push
mov
inc
push
mov
shr
pop
int3
roll
fs
dec
cmp
mov
addb
jp
outsb
add
or
pop
dec
jmp
sbb
mov
fisttpll
adc
push
sub
jmp
testb
push
mov
or
push
bound
jne
mov
or
mov
jle
sbb
js
add
pop
inc
fs
lfs
add
cli
and
shl
sbb
ret
jl
or
add
jl
jns
and
cmc
jae
stos
ljmp
or
sub
in
pop
movsb
inc
shlb
lock
and
outsb
and
xchg
rcll
pop
orl
xchg
inc
lcall
shr
xchg
push
pop
xor
pop
adc
mov
pop
inc
sbb
push
gs
pop
imul
adc
cli
sbb
arpl
in
or
xchg
adc
ja
insb
lods
sbb
adc
test
push
dec
pop
and
in
inc
int
add
adc
imul
add
mov
data16
add
or
mov
clc
outsl
push
mov
or
xor
mov
sub
in
mov
je
xchg
cli
adc
mov
pop
inc
lea
lea
or
cmpl
adc
int3
aas
in
ds
adc
sbb
sbb
aas
xor
mov
in
fcomps
add
inc
add
imul
fimuls
movsl
lods
loopne
enter
ret
push
adc
adc
dec
or
js
mov
ss
sti
dec
dec
and
pushl
add
jno
push
test
loop
mov
subb
jecxz
aam
xor
pop
icebp
js
rorb
inc
cmp
ds
aas
je
mov
sub
cwtl
add
inc
adc
enter
add
sub
push
jns
aam
jl
or
lods
pop
sub
inc
loope
shr
push
and
cmp
and
sbb
jne
push
jns
pop
push
and
inc
ds
push
je
add
aas
pop
push
je
scas
ds
addb
sub
adc
jg
fcomp
aam
je
cmp
sbb
es
fisubs
mov
cwtl
or
andb
mov
or
pop
and
je
sub
sub
dec
insb
test
jle
lds
rolb
xor
test
and
jae
push
pop
sbb
pop
dec
lret
lcall
addb
pop
test
push
addr16
fimull
das
xor
and
gs
add
sub
add
xor
adc
addb
mov
xchg
out
lods
jae
addb
cmp
lea
add
adc
xor
dec
sub
sub
or
push
push
mov
xor
inc
mov
add
push
push
add
push
pushf
insb
jl
rcrb
adc
paddq
sbb
xor
imul
jg
xchg
popf
pushl
leave
mov
mov
inc
push
cmp
xchg
mov
xchg
shlb
insb
cltd
or
add
sub
push
orl
fs
inc
mov
inc
push
push
nop
jo
dec
mov
cwtl
or
subl
dec
and
aad
sub
add
cmpsb
test
cmp
test
or
mov
inc
jmp
push
mov
cs
sbb
ja
sbb
addr16
sub
sbb
or
jmp
mov
dec
xor
push
cmp
test
leave
and
idiv
sub
or
fnstcw
mov
lea
or
mov
loopne
sub
adc
jmp
mov
sub
xor
orl
mov
xor
jle
adc
fs
xor
stos
jmp
sahf
shl
dec
push
ljmp
xor
mov
push
jae
out
add
mov
jmp
stos
or
sbb
mov
jae
mov
push
insl
movsl
test
clc
jmp
adc
fistpl
shlb
mov
mov
nop
add
jne
lret
sti
lods
mov
dec
jae
imul
sbb
nop
or
pop
jmp
and
pop
and
mov
fs
mov
cwtl
leave
pop
pop
sahf
sbb
push
sub
inc
mov
orl
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
xchg
mov
cmpb
push
je
pushl
repnz
test
or
or
nop
mov
xchg
jo
xchg
push
add
inc
testl
mov
jecxz
fldl
pop
push
rclb
ss
dec
or
iret
push
add
clc
mov
jge
and
xor
dec
xor
cmp
and
sarl
jecxz
push
push
das
add
mov
jg
xor
mov
into
dec
add
pop
adcb
mov
mov
add
sarl
pop
push
mov
cwtl
jge
sbb
subl
dec
adc
outsb
mov
lods
sbb
xlat
test
mov
mov
push
pop
test
and
sub
je
jecxz
inc
jbe
call
frstor
sub
xor
xor
jne
and
and
adc
inc
lds
mov
or
call
addr16
and
push
mov
mov
addl
dec
pushf
imul
add
cli
cmp
jb
movsb
jge
movsl
add
and
pop
cmpb
lcall
movsb
movzwl
mov
aas
or
call
shll
roll
es
lea
nop
mov
icebp
inc
and
xlat
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
pop
ret
and
jne
inc
testl
push
icebp
adc
les
test
jne
jge
jne
inc
or
cmp
subb
cmp
push
xlat
xor
mov
xchg
pop
dec
xchg
adcl
nop
mov
rol
push
cwtl
xchg
test
push
pushf
data16
cmp
lea
lcall
xor
mov
adc
xchg
jle
adc
scas
ret
xor
cmp
jb
cmp
jae
mov
dec
mov
cld
fsubs
xor
test
add
sti
movsl
dec
add
add
sbb
push
mov
nop
add
test
les
mov
push
sub
aam
call
sub
or
shr
outsb
or
push
mov
pop
mov
dec
and
inc
mov
push
test
test
add
negb
lods
pop
sub
cmp
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
and
pop
jne
outsb
mov
fnsave
mov
aam
loop
ss
hlt
cmp
pusha
imul
lock
add
fidivl
add
pop
aam
ljmp
jmp
movsl
pop
in
aad
fisubrl
adc
cmp
nop
mov
or
fbld
js
jl
dec
int3
int3
jmp
mov
or
daa
mov
xor
jmp
lods
xlat
mov
ljmp
jno
pushf
gs
lods
add
and
ss
lret
jp
lret
add
mov
das
lcall
negb
xor
adc
aam
sbb
inc
mov
inc
add
xchg
add
movsb
xor
push
mov
cmp
cmpsb
jmp
and
js
out
nop
jnp
in
pushf
adc
mov
push
mov
or
addb
mov
push
adc
sbb
mov
inc
fisttps
push
push
push
fidivrl
adc
push
xchg
xor
jge
out
fwait
cmp
jns
sbb
rcll
mov
or
pop
sbb
arpl
test
fisubs
xchg
out
adc
pop
add
sbb
aam
sahf
rcrb
add
cmp
cmp
test
dec
in
sub
add
mov
or
mov
or
mov
sbb
imulb
es
shlb
mov
xor
cmpl
insb
rol
pop
mov
add
mov
hlt
in
push
notl
mov
sub
loopne
call
dec
shrl
inc
jne
aam
jg
adc
ja
pop
je
dec
push
dec
test
inc
adc
and
cli
stc
repz
inc
inc
inc
jo
mov
rclb
aaa
mov
cmp
or
xor
mov
stos
ss
punpckhdq
fistl
sub
mov
mov
inc
xchg
fsubrp
fmull
pop
pop
ret
andb
subb
push
mov
bound
sarb
cli
shr
add
xchg
dec
call
mov
pop
pusha
inc
shll
lcall
stos
arpl
xor
sbb
cmp
dec
sbb
lods
adc
pushf
fwait
or
and
add
dec
loopne
inc
mov
nop
inc
mov
imul
mov
daa
hlt
push
mov
sub
sbb
outsb
mov
push
inc
or
xchg
clc
mov
push
jl
push
pop
jecxz
xor
or
push
jne
sarl
out
jnp
or
lds
cmp
mov
inc
add
fcompl
loopne
add
jno
mov
xor
loope,pn
out
and
insl
push
outsl
adc
or
sub
sub
shrb
pop
push
push
ret
pop
pop
push
pcmpeqw
xchg
popa
lods
and
mov
ds
ret
mov
mov
adc
or
gs
mov
sub
adc
lds
push
clc
or
push
add
push
add
mov
cmp
pop
incl
icebp
imul
add
loope
adc
in
imul
dec
or
lret
xor
je
xor
inc
mov
popa
fstpl
sbb
fdivl
or
push
mov
xchg
and
or
negl
push
jne
mov
push
or
mov
mov
push
push
inc
loopne
les
pop
jbe
sub
push
push
nop
sub
xor
and
adc
jmp
mov
daa
mov
rclb
mov
or
or
add
inc
or
pop
sub
mov
test
ficompl
dec
fcoml
loopne
pop
mov
pop
push
pop
inc
in
xchg
add
sub
cld
cwtl
lods
or
jo
sub
fidivl
jne,pn
sbb
inc
fs
mov
sub
jo
sbb
aas
adc
cmp
mov
mov
mov
mov
fsubr
fldl
push
icebp
pop
add
push
cmp
pop
jmp
cwtl
lcall
add
mov
inc
aaa
sub
insb
daa
push
adc
lock
jbe
or
or
mov
pushl
sti
ljmp
jb
ret
push
lahf
popa
cwtl
fdiv
add
cmp
mov
pop
sbb
pop
pop
jo
in
sbb
dec
sub
fsubs
push
sbbb
dec
insb
mov
jno
push
mov
sbb
or
sbb
push
jbe
fsubrs
aam
inc
adc
adc
out
sub
call
pop
pushf
lahf
push
aaa
dec
cmp
pop
imul
add
push
add
pop
fisttpl
jo
mov
sbb
push
cs
xchg
nop
cmp
or
xor
movntps
add
adc
cmpb
repz
imul
xor
push
cmp
jo
push
mov
push
sub
je
jge
hlt
jmp
loop
jg
popl
jno
pusha
nop
ds
pop
je
rcr
adc
mov
mov
adc
xchg
lret
and
xor
xor
sbb
or
js
add
mov
scas
sbb
aas
inc
or
sub
in
pusha
stos
adc
sbb
mov
lock
push
or
xor
push
pop
or
sub
andl
and
xor
fstpt
mov
and
ja
sbb
out
jnp
or
fstl
daa
cmp
cmp
cmp
adc
sbb
and
xchg
adc
and
and
imul
clc
loopne
dec
pop
jo
jne
stos
out
shrl
ss
sahf
mov
loopne
lods
out
pop
pushf
ret
inc
loope
cmp
arpl
adc
push
push
js
das
shlb
xchg
fstp
or
bound
add
shrb
sbb
clc
xchg
push
pop
inc
sti
push
repnz
mov
dec
sbb
daa
jmp
imulb
repnz
jo
fmuls
xor
adc
ja
dec
dec
dec
jne
mov
jno
dec
jns
xchg
loope
inc
mov
dec
cs
or
leave
cmpsb
enter
mov
stos
shlb
test
rcrb
sar
dec
pop
mov
aaa
add
subb
cmp
dec
xor
xchg
aam
clc
sbb
ret
add
mov
dec
add
mov
add
leave
pop
sub
pusha
mov
xchg
pop
or
cmpsb
pushf
jne
iret
and
popa
sub
xlat
jmp
aaa
cmpsl
pusha
mov
dec
jb
or
js
adc
fcoml
mov
iret
int
imul
fcoms
movsl
xchg
jb
outsl
jbe
inc
and
add
clc
mov
adc
je,pt
shl
int3
jb
lret
xorb
rorl
mov
lock
aaa
pop
dec
xor
loope
push
mov
xchg
sbbl
push
loopne
sbb
jp
dec
lock
rolb
rcll
pop
jno
and
xor
sbb
xor
lds
push
into
ja
xor
or
cmp
shll
push
icebp
jnp
pop
jmp
lret
inc
loopne
loope
push
lea
add
fsubr
decl
leave
sar
mov
aas
or
outsb
stc
fisubs
mov
je
xor
sbb
insb
mov
ror
inc
adc
fidivrs
orb
pop
xor
mov
movsl
add
loopne
inc
pop
ret
add
inc
int3
int
pop
dec
fidivrl
je
sbb
ljmp
inc
cld
test
icebp
jns
push
sarl
icebp
je
cmp
mov
lock
mov
jb
sahf
sub
dec
jbe
sti
xor
inc
mov
ret
xor
and
neg
or
dec
iret
sbb
mov
out
dec
dec
adc
push
hlt
mov
andl
dec
inc
cwtl
mov
dec
and
xor
pop
mov
out
lret
add
cmp
fsubs
mov
and
je
xchg
lcall
adc
sbb
bound
inc
outsb
outsb
add
adc
hlt
fmull
sub
mov
xchg
cmp
pusha
enter
inc
xchg
add
jnp
outsb
push
jae
or
shll
mov
inc
mov
fdiv
imul
mov
add
test
adc
ja
jno
add
jecxz
mov
sarl
cmp
push
adc
add
pop
xor
cmp
movsb
sbbl
ficomps
cli
imul
daa
push
add
cmovns
iret
test
mov
mov
pop
sbb
pop
add
sbb
or
cmp
shr
in
mov
in
mov
inc
mov
sbb
xor
lea
xor
mov
fildl
jecxz
inc
pop
shlb
mov
int
lcall
loopne
cwtl
mov
mov
cmp
jne
dec
mov
shufps
mov
inc
addl
movsb
lds
xchg
and
out
sub
jne
mov
sarb
cmp
ret
sub
xchg
les
sub
int
push
push
lahf
dec
andl
clc
inc
fs
pop
jns
push
adc
fiadds
into
jg
sbb
mov
fxch
sub
sub
mov
int3
test
sub
and
adc
mov
imul
popa
add
daa
sub
jne
lea
pusha
lods
stc
cmp
mov
shlb
test
mov
add
push
or
mov
jmp
lret
int3
jae
cmp
add
imul
or
loope
fsubrl
orl
imul
jo
mov
or
mov
pop
mov
test
outsl
sbb
stos
xchg
aas
push
jae
loope
out
adc
mov
loope
sub
es
lcall
adc
sub
jne
mov
pop
inc
mov
and
jno
xchg
cwtl
inc
outsl
loopne
and
inc
cmpb
test
inc
and
sbb
jp
in
pop
or
jmp
enter
jbe
test
inc
mov
xchg
pop
adcl
push
les
test
adcl
jg
adc
or
arpl
orl
in
stos
or
sbb
xor
jp
adc
adc
mov
and
out
les
jb
int
pop
pusha
pusha
sub
xchg
rolb
lods
test
sub
add
adc
adc
jle
and
inc
sub
arpl
cmp
dec
or
les
jnp
add
ficompl
jg
pop
or
sub
mov
arpl
nop
xor
xchg
outsb
mov
mov
ds
mov
mov
pop
ljmp
ja
dec
or
pop
sarl
push
test
push
mov
push
fs
and
sbb
shrl
sub
pop
inc
add
adc
ljmp
jo
out
xchg
test
test
mov
je
les
xor
test
mov
adc
sarl
aad
or
arpl
push
or
adc
ss
jb
sbb
sub
jb
jb
xor
cmp
icebp
inc
and
daa
daa
daa
mov
cmovs
leave
leave
add
pusha
leave
leave
leave
leave
fs
leave
leave
je
jl
movsb
cmp
test
mov
cltd
cwtl
pushf
mov
movsb
test
and
dec
xor
enter
mov
rorb
cltd
ss
cltd
fs
loopne
call
dec
aam
hlt
push
xchg
dec
es
cld
jecxz
jo
fwait
adc
dec
xor
or
adc
and
sbb
and
and
dec
sub
and
dec
xor
cmp
xchg
dec
roll
dec
dec
es
jbe
mov
daa
cltd
fs
pop
pop
pusha
sbb
xchg
push
dec
in
je
les
xor
xchg
pop
cs
and
dec
cs
les
mov
rorl
xor
out
xchg
mov
and
leave
xchg
sbb
jb
and
pop
movsb
cmp
cmp
inc
pop
repnz
dec
sti
les
pop
cs
shlb
inc
adc
push
or
adc
testb
or
lahf
adc
or
adc
arpl
pop
push
fimuls
add
testb
xchg
and
dec
call
pop
jo
ljmp
not
xor
loope
xor
and
mulb
daa
pop
shr
add
jmp
cltd
in
add
jo
aas
push
mov
or
pop
and
or
dec
add
add
add
or
xlat
int3
mov
jb
shll
and
shll
sub
add
leave
add
outsl
or
std
or
jmp
inc
ja
frstor
cld
mov
and
aaa
int3
in
out
jecxz
sbb
add
or
jmp
and
xor
lahf
adc
and
sub
and
jge
aaa
jge
je
mov
sti
out
sti
fstl
sbb
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
push
or
push
jmp
out
jecxz
movsb
repnz
adc
fnstsw
mov
jnp
pusha
pusha
fldl
cmp
mov
nop
mov
arpl
pusha
sub
adc
es
adc
sti
add
push
out
lret
test
fisttps
aaa
sbb
into
mov
stos
das
lods
or
sub
cmp
ljmp
fldl
pop
negl
cmp
and
subb
sbb
xorb
sbb
jmp
outsb
xchg
js
and
or
jnp
jg
dec
mov
fstps
jmp
fisttpll
es
outsb
mov
jg
bound
mov
hlt
adc
mov
fimuls
pop
sub
or
neg
lea
cmp
and
dec
add
adc
test
mov
inc
xchg
fs
aaa
sbb
inc
dec
or
cmc
sub
and
jne
aas
cltd
pop
dec
jmp
sub
sub
leave
sbbl
mov
jmp
fldcw
dec
test
into
adc
push
leave
jle
xor
push
mov
or
sub
mov
testl
xchg
inc
sub
push
mov
pop
sub
pop
in
pop
cli
stos
subb
inc
cmp
repz
fcompl
push
add
xor
push
or
mov
or
lods
adc
xor
sub
add
mov
shrl
sbb
mov
orl
loopne
ss
push
push
sub
push
pop
jmp
pop
shrb
lock
ds
ret
adc
mov
dec
xchg
sahf
push
pop
ss
pop
inc
lea
push
add
mov
nop
addl
gs
mov
cmpsb
lret
add
adc
adc
repnz
fisubs
add
push
test
add
add
shlb
arpl
mov
add
cmp
je
clc
and
sub
sbb
xor
lock
or
mov
cld
sbb
hlt
inc
or
les
and
js
push
dec
pushf
sub
rclb
adcb
and
das
loopne
xchg
mov
add
cmp
or
gs
dec
cmpsl
mov
xor
pop
fmull
mov
inc
test
or
cmp
dec
popa
addb
fucomip
pop
and
or
jo
mov
sub
out
gs
nop
aam
pusha
fmul
in
dec
adc
daa
mov
add
add
decl
rol
jae
inc
push
mov
fidivs
and
push
das
mov
jo
adc
das
movsl
loopne
pop
adcb
sbb
inc
mov
fimuls
shlb
aaa
mov
jl
push
jnp
or
test
pusha
andl
dec
je
sbb
jecxz
into
int3
rclb
aad
cld
push
jge
dec
frstor
push
frstor
mov
incb
sbb
jno
or
mov
scas
lcall
or
pop
imul
decb
mov
test
into
pop
clc
mov
jmp
pusha
fdivrs
push
and
adc
ret
fs
mov
mov
dec
sub
aad
aam
aaa
dec
out
fld
fucomp
pop
fsts
gs
mov
xor
test
xchg
orl
dec
inc
sub
mov
enter
shll
push
or
cmpsb
in
xchg
sub
or
push
or
ret
fwait
push
out
mov
push
addr16
daa
or
jge
cmp
es
fsubrs
sub
lods
xorb
jo
addw
ljmp
or
insl
in
or
loop
inc
fld
and
or
sub
sbb
xor
fdivl
sti
or
insl
or
push
mov
addb
decb
fldt
fldl
clc
test
fsubs
outsb
fwait
sbb
or
movsb
inc
adc
and
or
call
movsb
fldpi
xor
push
sub
pop
pop
outsb
les
inc
je
sbb
mov
scas
xsaveopt
or
arpl
mov
add
cmp
xchg
add
mov
and
pop
mov
jmp
and
adc
push
dec
decb
js
leave
je
out
inc
mov
mov
dec
mov
or
mov
bnd
lret
je
and
jb
cmp
ja
dec
loope
testl
ret
cmp
jne
xchg
or
icebp
cmpsb
rorl
adc
mov
jb
neg
mov
fcmovne
add
inc
and
mov
or
lods
sbb
std
or
loope
push
or
sbb
insl
add
adc
xor
rcrl
xchg
pop
loope
push
je
dec
or
popa
sub
xor
test
push
adc
add
jecxz
mov
jmp
aas
xchg
push
mov
cmp
xchg
test
inc
in
or
add
jl
adc
fisubs
stos
stos
bound
andl
jnp
sub
jo
mov
and
sbb
mov
pop
add
adcl
sbb
fdivrs
dec
or
inc
lea
pop
inc
sub
fsubrp
sub
inc
shrl
test
xor
inc
notrack
loop
rolb
outsl
inc
jmp
cmpl
out
xchg
add
repz
mov
mov
push
and
iret
loopne
adc
iret
adc
jle
lea
cmp
daa
jo
test
or
or
cmp
jae
inc
sbb
or
sbb
das
dec
inc
sbb
jae
ret
outsb
xchg
dec
js
adc
sbb
lea
jns
xor
pop
pusha
or
mov
push
scas
adc
xor
icebp
add
je
or
dec
or
cmp
xor
cli
ret
stos
inc
jmp
lret
dec
mov
loope
ljmp
adc
clc
pusha
mov
movsl
das
fadds
call
inc
iret
decl
and
mov
sub
not
loopne
pop
popf
loopne
test
jb
mov
and
mov
out
add
loop
or
and
aam
out
xchg
add
jbe
push
les
add
inc
mov
into
xchg
sbb
add
lock
or
dec
jns
mov
push
adc
dec
lds
faddl
cli
push
sbb
sbb
jl
dec
or
inc
add
dec
or
adc
lcall
xor
dec
cli
loop
sbbb
jmp
pop
push
jae
insl
mov
repnz
test
sub
mov
dec
jns
cmp
loopne
adc
push
ret
aas
mov
sbb
addl
addb
filds
stos
push
imul
jmp
inc
xor
xorl
in
xor
inc
lret
addl
popa
mov
filds
and
gs
push
add
lea
push
jl
mov
rcll
mov
and
dec
xor
cltd
fsubrl
jge
mov
xchg
and
jecxz
enter
add
adcb
loope
and
pop
lock
addb
cmp
push
pop
in
and
jmp
and
sub
add
inc
rolb
test
xor
sbb
dec
adc
out
push
xor
enter
mov
add
adc
add
mov
sub
cmp
push
movsl
in
int3
dec
cwtl
ret
clc
and
xchg
jmp
inc
insb
pusha
dec
sbb
mov
cmp
jne
jbe
test
sahf
jb
daa
movsl
push
add
dec
push
dec
push
rorl
insl
push
xor
cmp
pop
xchg
out
add
pop
or
mov
mov
pop
mov
lret
cs
or
incl
or
or
out
mov
dec
cmpb
je
mov
orb
sbb
add
or
mov
mov
mov
sub
fcompl
jp
sbb
jg
pop
ljmp
stos
add
push
in
lock
mov
adc
and
add
divl
repnz
icebp
jns
icebp
adc
lret
test
push
add
adc
adc
movd
add
sub
sbb
xchg
ret
fadds
xor
add
outsb
mov
push
xchg
jbe
or
add
xchg
jno
popa
sub
cmp
ret
push
popf
insl
and
sbb
adc
dec
pop
sub
inc
or
icebp
inc
push
clc
add
or
popa
popf
movsb
mov
xchg
ret
mov
add
aam
imul
cmp
mov
inc
test
inc
sbb
sbb
subb
jmp
sub
add
ds
xchg
pusha
fdivs
and
add
add
push
push
inc
mov
or
cld
or
fadd
inc
add
fs
or
imul
push
or
insb
out
or
or
fsubl
jl
jo
pop
into
adcb
push
mov
rolb
xor
sti
gs
mov
lock
mov
push
jge
push
xor
or
pop
xchg
sub
in
xor
ret
ret
push
stc
add
cmpsb
imul
std
inc
dec
ja
ret
jmp
push
daa
pop
clc
fucomp
scas
or
jbe
loopne
xchg
jge
xchg
sub
adc
loopne
insb
test
xchg
out
filds
xchg
adc
shlb
or
add
inc
mov
mov
add
movsl
aam
dec
loopne
adc
push
jmp
arpl
pop
jb
push
mov
push
and
push
add
les
fadd
push
pop
xor
mov
xor
push
cld
stos
cmp
jge
mov
insl
in
and
call
enter
and
xchg
push
adc
mov
lods
and
insl
jp
sub
push
sahf
fcoml
inc
sub
lret
mov
push
xchg
push
std
imul
mov
lea
fsub
dec
cmp
sbb
jp
in
pop
adc
imull
add
sub
xor
test
orl
push
push
fdivrs
bound
std
das
pushf
stc
rclb
sub
leave
and
add
add
sbb
movb
pop
and
cmc
or
je
call
inc
popf
neg
sbb
mov
mov
adc
jg
ret
fsubl
shll
add
xor
jmp
mov
js
add
add
in
shr
pop
inc
xor
mov
insb
push
adc
movsb
or
cmpsl
or
mov
sub
or
mov
nop
rclb
adc
adc
sub
push
clc
mov
gs
bound
or
xor
clc
cmp
add
lods
insl
cld
rcrb
shrd
sbb
sbb
mov
inc
jge
sbb
mov
mov
lea
push
mov
data16
and
xor
insl
adc
insb
and
dec
cld
sub
mov
or
rorl
inc
call
push
sbb
jo
gs
mov
aad
fimull
ret
mov
mov
lret
jo
cmp
in
and
jg
shrl
jl
pop
sbb
js
jg
cmp
or
scas
jmp
adc
loop
neg
mov
cmp
sarl
aas
addb
jb
sbb
out
fs
xchg
pop
cmp
xor
mov
mov
push
jg
in
lcall
dec
iret
xchg
imul
dec
pop
or
or
push
imul
add
and
jnp
inc
and
in
ja
fstps
js
mov
enter
adc
mov
icebp
cmp
dec
adc
testb
lret
cmp
fiaddl
lcall
add
jnp
sbb
push
sbb
mov
test
push
lock
sahf
fwait
adc
mov
movsl
mov
jl
inc
add
aaa
push
lods
mov
aas
loopne
inc
mov
xchg
and
insb
jmp
das
push
inc
lock
fdivs
and
jb
cmp
jbe
jl
fwait
adc
or
push
mov
or
mov
xlat
add
outsl
rcr
addb
fs
push
divb
push
cmp
xor
push
cli
push
sub
xchg
or
add
sub
push
fiaddl
shl
sub
mov
push
push
push
push
adc
out
dec
out
fdivl
rcrl
jl
loopne
jge
inc
pop
sub
lcall
int
xor
and
sbb
and
push
fldcw
mov
sahf
clc
gs
or
pop
mov
sahf
and
clc
jbe
enter
popa
je
inc
je
dec
and
aaa
jmp
xor
std
jmp
js
adc
and
inc
mov
sub
sbb
enter
clc
mov
xlat
jo
xchg
push
add
adc
enter
cmp
or
adc
cmp
push
dec
cmp
jl
mov
pop
push
in
push
lret
sbb
movsb
popw
movsl
and
jmp
push
add
shlb
out
in
pusha
and
push
push
dec
or
rcrl
jle
ljmp
add
stos
or
jo
outsl
xchg
inc
js
jo
cmc
in
push
or
mov
and
add
sti
inc
hlt
or
jmp
push
in
mov
xchg
nop
insl
xchg
adc
aam
and
in
cmp
cmp
inc
int3
sarb
dec
lea
rorl
cmp
jmp
push
test
and
add
daa
inc
or
loopne
cmp
mov
mov
cmpsl
cmp
je
rcrb
dec
dec
mov
mov
add
addb
pop
sub
mov
xchg
imul
mov
jno
aaa
inc
jmp
in
mov
pop
ja
sub
and
mov
jne
or
iret
xor
inc
pop
dec
cmp
dec
mov
fnsave
push
dec
icebp
sar
mov
out
push
jecxz
sub
add
sbb
inc
jp
lret
mov
or
pop
inc
xchg
ret
xor
int
into
or
mov
pop
pop
insb
adc
gs
cmp
add
das
pushf
adc
jne
out
adc
rolb
sbb
cmp
into
add
mov
fildl
jge
inc
xchg
jmp
pop
add
les
inc
clc
inc
fwait
push
pop
sbbb
dec
mov
cli
out
xor
test
or
lods
cltd
dec
shlb
sub
and
add
popa
fstpt
adc
jmp
leave
xchg
dec
std
add
mov
xchg
sub
and
cmp
rorb
sub
mov
push
dec
cmp
mov
js
and
inc
mov
adc
jmp
inc
ljmp
loopne
ret
bound
cmpl
ret
push
or
push
xchg
push
sbb
shlb
aaa
mov
or
mov
lock
add
add
imul
pop
pop
jo
and
rorb
es
aaa
add
or
push
jae
lret
inc
xor
sbb
lock
xchg
lods
jnp
cmpl
adc
data16
sub
or
mov
jne
push
push
jmp
cmp
cmc
jmp
movsl
cmp
pop
mov
dec
adc
rcrb
in
js
and
cmp
jmp
ret
test
sbb
aad
dec
and
push
ja
push
aad
data16
cmp
lret
loopne
xor
cmpsb
add
add
cmp
or
mov
jmp
push
mov
pop
sbbb
push
cs
in
stos
inc
subb
in
cmpsb
sahf
jp
mov
fprem
outsl
mov
out
int3
or
and
cmpsl
in
jmp
insb
push
lds
adc
sbb
sbb
cs
fiaddl
movsl
int
push
into
sub
xor
add
xor
aam
insb
xchg
ret
mov
sbb
jle
andl
mov
sub
gs
adc
pop
adc
add
mov
lea
in
scas
movsl
andb
inc
or
push
lret
icebp
filds
test
pop
add
or
fdivr
outsl
xchg
pop
add
shr
or
mov
adc
push
adc
test
and
add
mov
fldenv
dec
sahf
adc
rolb
repnz
out
add
in
jp
mov
rolb
cmp
mov
xchg
jbe
jbe
add
jl
in
sbb
cmp
js
mov
int3
fimuls
add
add
sti
and
inc
addl
fidivrs
xlat
mov
bound
add
xor
and
into
clc
subb
xchg
mov
lea
sarw
cmpb
cli
dec
fisubrl
dec
adc
or
mov
add
out
jle
loopne
and
xchg
movsb
xchg
ss
dec
sub
addb
add
adc
adc
adc
in
pushf
rclb
testb
pop
rolb
mov
push
sbb
mov
test
add
ret
fiaddl
pop
inc
mov
shll
add
mov
data16
out
jnp
les
nop
sahf
in
mov
push
add
dec
mov
test
push
mov
or
les
jp
loop
jno
loop
xor
outsl
shlb
sarl
outsb
or
jae
fadd
add
rorb
add
sbb
insl
xchg
mov
push
add
adc
fstpl
shl
or
das
push
sbb
movsb
pop
mov
pusha
push
ljmp
push
xor
push
enter
ljmp
pop
push
jno
sarl
outsl
sbb
stos
jb
dec
in
sub
jg
mov
cmp
jle
inc
and
lea
mov
mov
mov
mov
test
or
ss
pop
cmp
jmp
adcb
cmpb
jl
ss
add
dec
fiadds
inc
push
push
incl
adc
push
enter
mov
or
or
push
add
lods
push
push
inc
arpl
and
push
popa
stos
insl
das
out
orb
pop
ljmp
xchg
push
add
shr
dec
adc
sub
jmp
mov
jne
loopne
imul
add
add
adc
mov
adc
rorb
push
das
or
orl
fst
pop
lods
inc
fwait
or
jp
sbb
movsb
mov
or
dec
xor
jecxz
mov
sbbb
rclb
mov
mov
sahf
jne
sub
mov
cmp
xor
rclb
push
loopne
test
sti
and
xor
push
adc
dec
add
out
insl
or
fdivrl
add
add
sub
mov
inc
inc
out
sahf
loopne
out
neg
neg
sbb
sub
dec
repnz
sbb
adc
data16
sbb
cmc
adc
sbb
xlat
pop
fcoms
adc
and
fldcw
fcomi
sbb
lret
push
adc
sbb
and
push
or
jb
dec
jns
js
mov
daa
pop
pop
pop
sbb
jbe
adc
or
jae
lods
rcl
ljmp
clc
and
shr
sbb
repz
inc
idiv
and
add
mov
subl
add
cmp
repnz
inc
sbb
enter
adc
sub
push
add
pop
push
mov
inc
data16
inc
push
push
inc
jbe
es
shl
xor
lock
mov
cmpb
push
cli
or
out
fstp
mov
push
mov
into
jbe
shrl
mov
mov
push
jecxz
mov
adc
push
sbb
push
xor
xchg
inc
and
adc
cmp
bsf
adc
and
adc
or
add
mov
mov
sub
cwtl
aam
icebp
dec
lcall
cmp
pusha
adc
xchg
lret
arpl
aad
mov
aaa
dec
cmp
je
add
add
add
cmp
test
mov
dec
add
imul
daa
loopne
jg
add
sub
add
and
imull
ds
dec
test
dec
inc
or
daa
xchg
xchg
or
mov
push
call
push
mov
cli
enter
sub
add
inc
call
rcrb
mov
call
or
inc
inc
imul
sti
aas
insb
and
movb
cmpsb
or
push
mov
xchg
aaa
cmp
lcall
js
data16
adc
add
outsl
pusha
movw
jb
xlat
add
int3
rcrb
jno
mov
mov
pop
loop
rcrl
mov
loop
mov
outsb
lret
mov
sar
pushf
mov
sub
andb
sbb
nop
inc
xor
adc
add
jo
movsb
mov
add
push
jle
imul
mov
sbb
jmp
xchg
out
add
imul
lea
sar
ror
and
nop
mov
mov
es
ljmp
mov
cmp
push
fmuls
mov
jbe
mov
cmp
xor
add
cmpsl
or
and
cwtl
adc
fimull
push
or
lahf
call
add
aam
decl
jle
repnz
sti
mov
in
shll
in
mov
std
insl
orl
and
lea
inc
xor
into
andl
dec
push
sahf
sarb
test
ja
mov
inc
in
addr16
xor
loopne
push
mov
and
leave
inc
call
lods
cli
leave
push
fs
inc
or
cld
xchg
xchg
mov
jne
lea
mov
add
mov
push
mov
push
lea
adc
ljmp
xchg
add
or
dec
push
cld
ja
call
or
ret
cmpsl
adc
shll
leave
stos
pusha
data16
shrl
stos
lods
leave
mov
lods
and
fnsave
lea
cmp
cmp
cmp
fmuls
sarl
addr16
rol
pop
or
and
jp
or
ds
test
jno
push
lret
xor
es
lods
inc
test
clc
cs
or
mov
jg
out
mov
test
pop
shr
or
mov
dec
xor
pop
mov
leave
mov
dec
and
mov
in
dec
div
add
xchg
repnz
mov
mov
int3
shr
sbb
sbb
loopne
push
orl
mov
cli
adc
and
lret
pop
cwtl
aam
pop
fidivl
dec
add
pop
xor
hlt
mov
xor
and
pop
sbb
jecxz
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
or
data16
popa
add
adc
repnz
pushw
inc
cmp
or
sahf
mov
out
enter
subb
lret
dec
xchg
dec
or
inc
daa
adc
jne
bound
and
arpl
mov
jne
fdivrs
aam
in
xchg
xor
int3
push
and
pusha
inc
mov
test
dec
adc
test
xor
and
or
cmp
dec
movsl
int3
lret
fcmovu
xchg
push
test
int
sbb
pushf
cli
mov
int3
jg
add
xchg
add
lret
idiv
adc
rol
adc
jg
mov
dec
and
dec
gs
lock
out
or
add
enter
movsl
jne
dec
inc
lock
aas
push
adc
add
imul
pop
push
in
or
sub
add
lret
mov
outsb
mov
xor
pop
dec
sub
mov
movw
add
inc
push
cmc
inc
mov
or
cmp
jle
push
pop
outsb
call
fadds
jne
cltd
test
xchg
gs
push
push
push
shl
add
and
mulb
dec
pop
inc
rcrl
ficomps
fcoms
xor
fiadds
orl
insl
call
int3
jmp
loopne
call
leave
out
es
lea
push
js
or
and
mov
jp
in
fists
out
push
sti
je
test
mov
xchg
rcll
sub
les
enter
orb
sbb
in
push
movsl
outsb
mov
cs
rolb
push
mov
inc
dec
enter
sahf
mov
rclb
jae
add
insl
or
mov
test
call
call
testb
mov
inc
scas
add
dec
jecxz
or
ljmp
sub
cmp
jge
sub
cmpb
mov
mov
xor
mov
repnz
inc
andl
out
dec
add
add
fadds
inc
jp
pop
add
jb
mov
rcrl
inc
jp
jne
dec
mov
jb
add
int
mov
in
jp
add
dec
and
add
push
or
mov
mov
enter
add
add
xchg
cmpsb
rolb
adc
and
ret
pusha
dec
fisttpll
or
call
mov
inc
and
add
push
push
rolb
jne
or
adc
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
xchg
and
int3
std
test
add
mov
or
push
ret
xchg
xchg
ret
mov
add
add
cmp
leave
lahf
test
lret
push
cmp
pop
cmp
xor
into
add
xor
inc
and
jg
aam
pop
and
pop
pop
inc
pop
add
mov
ret
jne
or
mov
inc
ret
or
sbbl
movsl
push
dec
rolb
addr16
movsb
jne
or
or
push
add
add
add
cmpl
push
or
add
mov
pop
jle
mov
or
adc
xlat
push
pop
adc
mov
pop
xchg
adc
jne
fs
lahf
out
and
mov
shll
sub
out
and
xchg
push
pusha
push
or
scas
clc
add
dec
popa
cmp
ja
shrb
popf
and
jo
clc
mov
lock
je
jnp
or
cmp
scas
orl
adc
sub
subl
lret
outsb
lock
loopne
xor
push
or
in
stmxcsr
loopne
xor
repnz
test
add
or
add
or
xor
mov
adc
xchg
jp
mov
mov
iret
xor
sbb
xor
inc
jg
into
cmp
into
mov
add
sub
sub
idivl
ja
pop
nop
pop
sahf
pop
mov
rolb
icebp
pop
and
shlb
or
sbb
or
mov
add
popf
mov
sbb
lcall
add
leave
lahf
pop
addr16
pushf
xchg
out
adc
add
and
pop
movsl
movsb
andl
pop
stos
add
test
and
popf
ret
cwtl
sbb
roll
sub
jmp
push
cmp
xchg
ds
lret
adcl
inc
push
xor
popa
or
out
pop
or
or
mov
scas
test
mov
sub
jno
xchg
mov
xlat
or
enter
mov
add
fwait
sbb
flds
lretw
mov
in
lea
cmp
rcrl
adc
lret
pop
or
jl
inc
imul
lret
and
je
fldcw
jmp
js,pn
add
pop
bnd
pop
ret
ret
sbb
clc
or
sbb
xorl
je
dec
sub
inc
mov
test
mov
out
je
test
dec
dec
not
adcb
mov
mov
cmp
jb
cmp
jbe
dec
and
rcrl
xor
movsl
gs
pushf
xchg
loopne
lea
adc
imul
sub
sbb
push
or
aam
sbb
mov
sub
adc
aam
or
pop
sbb
add
rolb
inc
movsl
test
fs
adc
mov
and
adc
das
mov
loopne
nop
imul
xor
and
mov
xor
mov
ret
je
adc
mov
aam
icebp
in
imul
sbb
sbb
push
bound
hlt
add
pop
mov
adc
dec
leave
jae
pop
push
rcrl
dec
test
pop
dec
add
mov
sub
push
sub
dec
lret
ret
aad
jo
cs
push
imul
mov
mov
jmp
lea
dec
stc
mov
movb
push
cmp
push
fldenv
dec
add
jne
pop
add
pop
jmp
push
dec
dec
das
loope
sbb
mov
mov
push
cli
inc
jbe
push
dec
insl
movsb
mov
add
push
push
adc
sub
aaa
mov
sub
lahf
push
inc
mov
inc
mov
aaa
pop
in
cltd
stos
nop
inc
ror
popf
lret
sbb
hlt
call
xchg
or
dec
ret
push
push
push
and
rcrb
xorl
dec
mov
cmp
xor
or
pop
add
clc
mov
sbbb
cmp
test
mov
and
sbb
jne
je
in
sbb
push
jecxz
clc
cli
jle
mov
je
mov
jns
out
jg
xor
sub
popa
jecxz
mov
dec
push
push
pop
cmp
adcl
mov
loope
enter
mov
add
sbb
into
push
sbb
pop
nop
adc
inc
mov
push
push
sbb
push
xchg
cmp
dec
sub
outsl
fs
cs
or
ss
subl
push
js
xchg
mov
mov
xchg
mov
repnz
sbb
inc
insl
xor
adcl
adc
shlb
clc
andl
sub
add
xor
sbb
loopne
jno
stos
and
ret
ret
hlt
dec
pop
lods
xor
je
mov
adc
sbb
sbb
cltd
dec
insb
sbb
ja
push
btc
xorl
ret
sub
add
xor
xorl
inc
fimull
insl
jmp
pop
dec
jmp
inc
push
add
push
jno
cmp
add
inc
add
lahf
jne
and
enter
rorb
dec
inc
add
in
dec
lock
pop
xor
subsd
int
pop
inc
jp
out
xchg
xor
add
add
push
pavgb
int3
add
push
fisttps
xchg
xor
dec
and
shrb
and
aaa
dec
nop
sbb
xchg
hlt
es
pop
je
dec
test
inc
shlb
fldcw
add
bound
fildll
inc
rorb
push
cmp
jmp
or
fstps
icebp
mov
mov
jae
rolb
insl
mov
and
jmp
cmp
adc
mov
fcomp
fcoms
enter
test
cmpsb
pop
add
or
jnp
orb
fs
mov
mov
sub
mov
mov
loopne
pop
xchg
xor
pop
xchg
add
rcrl
mov
andl
mov
clc
int
xchg
add
pop
les
mov
fdivrl
fs
xorb
repz
shl
inc
cld
adc
add
and
cmp
mov
xor
or
and
dec
or
into
imul
xor
jbe
adc
adc
mov
push
or
lods
and
adc
dec
adc
and
add
and
push
sub
cs
call
in
mov
popa
sbb
outsb
aaa
inc
fcoms
push
mov
imul
sbb
lock
xchg
cmpsb
dec
int3
out
or
adc
adcb
add
iret
push
or
enter
loop
pop
sub
test
mov
inc
sarb
xchg
and
dec
or
std
rol
and
loopne
ret
insb
jmp
call
jmp
shl
gs
and
inc
cwtl
test
add
cmp
repz
and
inc
jo
arpl
imul
sub
loopne
cmp
mov
and
js
fsubrp
sub
sbb
clc
in
mov
mov
imul
add
cmp
jge
cmp
xchg
sarb
or
mov
jge
adc
mov
stos
dec
loopne
sbb
cmp
ja
jbe
push
arpl
test
sub
jo
roll
cwtl
inc
push
jle
jns
sbb
push
pop
inc
lret
test
cmp
jle
ja
inc
repnz
aam
jg
adc
lods
mov
inc
mov
jbe
xchg
or
pop
mov
insl
mov
pop
lods
icebp
cmp
push
pop
mov
popf
inc
shlb
xor
sbb
into
lock
fcoms
fwait
mov
pop
mov
dec
mov
and
popl
push
leave
mov
aaa
lock
subl
adc
sub
mov
mov
add
loopne
movsl
xchg
sub
and
out
cwtl
hlt
gs
add
cmp
mov
in
fldl
arpl
adc
data16
sbb
cmp
shrl
xor
xor
mov
aaa
mov
adc
or
nop
xor
or
and
inc
and
push
add
iret
mov
leave
dec
add
and
aas
dec
add
dec
push
push
pop
pop
pop
inc
or
push
mov
aad
repnz
repnz
test
call
or
test
or
mov
xchg
push
inc
sub
mov
pop
cmp
cmp
jg
andl
das
xor
mov
mov
lock
xor
loope
aas
add
jg
and
sbb
mov
pop
push
data16
push
push
adc
cli
jl
sbb
rcrl
inc
adc
mov
ja
lret
adcb
outsl
ret
pop
dec
mov
in
sbb
dec
es
xchg
add
iret
test
jmp
sub
and
xor
sahf
inc
push
in
adc
or
mov
xchg
mov
and
and
xor
jne
inc
sbb
shr
or
mov
jge
push
imul
addr16
arpl
inc
and
inc
js
inc
push
push
out
mov
leave
jae
sbb
pop
xchg
adc
xor
cmp
movsl
sub
jno
jl
push
clc
add
push
add
add
sub
sub
sub
std
sbbl
cwtl
pusha
xor
pop
jle
push
push
push
add
or
sbb
mov
push
sbb
and
icebp
pop
je
push
push
push
add
stos
es
mov
or
fstpt
add
xchg
push
rorb
inc
adc
pop
jl
loop
es
sub
lret
fidivrl
cmp
test
outsb
sbb
call
nop
sub
push
inc
cmp
jns
fldcw
loopne
out
or
test
cmpb
xor
mov
and
add
and
mov
mov
imul
adc
aaa
mov
dec
test
xchg
mov
push
push
cmpl
cwtl
fildll
mov
ja
push
fsubs
dec
rcl
pop
cmp
mov
dec
pushf
pop
adc
test
or
sbb
push
jle
cmp
jg
xor
ficompl
adc
fldenv
fsub
mov
pop
mov
fidivrs
sub
xchg
ss
loope
lcall
pusha
fmuls
rcl
jnp
adc
mov
cmp
hlt
xor
add
inc
and
fwait
and
lcall
sbb
lods
mov
rcrl
add
cltd
jo
push
in
clc
inc
scas
add
in
dec
mov
xlat
cmp
adc
mov
shll
or
xor
pop
andb
inc
xor
cmp
add
or
dec
push
lret
testb
sbb
xorb
pop
ja
xor
mov
repnz
and
andb
enter
test
jb
adc
and
addb
pop
je
or
mov
mov
test
adc
inc
inc
add
ss
jl
xlat
jg
mov
pushf
cmp
add
mov
xchg
je
mov
nop
imul
pop
sbb
sbb
pushf
testb
mov
cmovs
adc
dec
sub
push
sbb
push
cmp
cmpsl
xor
push
and
pushf
jecxz
or
pop
adc
adc
mov
popa
inc
mov
cli
mov
push
pop
sbb
sbb
adc
adc
jmp
xor
or
mov
ljmp
movsl
add
cmpsb
rclb
add
xorl
aaa
cmp
shr
call
pusha
scas
jmp
mov
arpl
pusha
rorl
sub
inc
test
pusha
ljmp
and
stos
add
cli
dec
loope
inc
sbb
fnstenv
mov
jecxz
jmp
pop
lea
adc
push
push
xchg
lods
add
mov
js
fsub
scas
icebp
sub
push
jo
jb
and
mov
xchg
sbb
push
sarb
xchg
sbb
hlt
cmp
jl
cmp
mov
add
push
xchg
push
cmpb
fstpt
cwtl
sub
add
and
ret
lcall
or
pop
ljmp
shll
inc
cld
xchg
test
sbb
rolb
cmp
adc
hlt
dec
test
sbbb
enter
jnp
mov
ret
mov
sbb
jae
ljmp
or
add
adc
pop
mov
fsub
xchg
mov
adcb
ds
std
hlt
jne
adc
add
and
or
rcll
ror
aad
mov
and
ja
pop
pop
cmp
scas
aam
fcomps
jle
mov
pop
add
push
dec
adc
inc
xor
inc
jnp
loope
and
jecxz
push
push
dec
dec
mov
mov
icebp
lcall
xor
int3
mov
scas
jne
jg
add
jno
imul
xor
sub
test
add
push
dec
push
rcrl
mov
jl
hlt
adc
inc
cld
or
or
lea
add
inc
mov
jbe
add
cmpsl
or
inc
mov
push
cmp
add
dec
jg
adc
orl
jg
jmp
adc
pop
adcb
mov
rcrl
mov
jnp
rolb
adc
cmp
jb
add
adcb
mov
inc
pop
aaa
pop
pushf
and
dec
adc
dec
push
jae
inc
jno
pop
scas
or
test
pop
and
jns
xlat
lret
inc
bound
subl
hlt
test
mov
inc
cmpl
test
mov
inc
lret
push
test
pusha
stc
pop
sti
sub
add
cs
and
push
jp
xor
inc
stos
arpl
xchg
hlt
or
ljmp
mov
adc
xlat
je
cmp
adc
push
nop
icebp
push
ljmp
adc
or
testb
cmp
add
stos
jge
push
outsl
add
and
push
ss
and
jb
je
cmp
scas
mov
xor
cmp
jbe
clc
bound
scas
sbb
jp
push
inc
add
gs
cwtl
dec
shr
jmp
das
outsl
fdivl
das
sbb
mov
pop
addl
push
mov
adc
push
ds
scas
inc
mov
shrb
fstpl
pop
jmp
sbb
cmp
xchg
push
inc
insb
leave
rcrb
insl
cmp
fs
lea
mov
test
dec
in
popf
mov
sbb
and
mov
test
test
popf
pop
jb
jno
fdiv
push
cmpsb
mov
lock
frstpm(287
xor
enter
insl
or
xor
sub
adc
cmpb
jnp
mov
mov
mulb
xchg
call
leave
dec
in
lock
xchg
mov
inc
lock
fwait
loopne
pop
jne
add
jb
orb
add
scas
xchg
cmpsl
in
jns
loopne
dec
push
sbb
cmp
and
shl
loopne
ret
dec
hlt
sarl
lret
mov
ljmp
or
cmp
inc
xchg
xor
sahf
add
fcomps
sbb
jnp
dec
in
add
leave
mov
xchg
mov
in
pusha
pop
test
sbb
fdivr
or
adc
jl
xor
or
testb
mov
jbe
inc
in
or
mov
lret
mov
repnz
and
pusha
bound
push
and
adc
adc
pusha
and
xchg
insb
or
inc
enter
ds
mov
pop
int3
pop
pop
or
cwtl
mov
inc
jle
icebp
jle
fcoml
or
sbb
mov
rolb
daa
mov
cmpb
aaa
cltd
nop
js
repnz
cwtl
mov
mov
enter
dec
jg
ret
cmpsb
xchg
push
mov
call
add
xchg
test
sbb
xchg
fs
aam
add
movsb
xchg
in
adc
mov
xor
in
cmc
aas
fdivs
jae
adc
xchg
pop
cld
popa
jae
jno
pusha
xchg
dec
es
fs
fs
js
sub
nop
jl
sub
bound
add
call
pusha
lock
enter
scas
sbb
pop
addb
fdivrs
adc
add
add
out
inc
add
xchg
sbb
inc
xorb
andl
mov
popf
movsb
fldenv
adc
daa
pop
enter
pushf
les
push
and
rolb
bound
sti
in
sti
gs
pusha
rolb
and
repnz
data16
sti
fimull
fwait
sub
bound
inc
pop
cmp
mov
aaa
ret
sbb
stc
pop
push
outsl
mov
inc
add
sbb
jae
inc
and
test
lahf
mov
jge
or
add
repnz
aam
sub
cmp
stos
test
mov
nop
ds
or
std
cs
lock
leave
leave
leave
or
or
fcmovb
or
dec
repnz
mov
test
add
mov
xor
or
in
cmp
test
repnz
sbb
adc
jne
lds
dec
xor
jmp
adc
mov
enter
aam
mov
sub
sti
cld
mov
inc
xchg
xchg
or
inc
das
dec
sub
mov
ret
push
mov
insl
lock
xchg
sbb
mov
pop
or
pop
add
jae
add
or
or
adc
add
jl
mov
add
movsb
or
js
jnp
imul
lock
mov
outsb
in
dec
sbb
movsb
loope
sti
and
loopne
cltd
or
dec
in
cmc
in
pop
ljmp
xor
movnti
loopne
xchg
add
lock
sub
ljmp
sti
sbb
pop
icebp
mov
jmp
push
leave
fstl
int3
stc
cwtl
lods
add
mov
lock
mov
xchg
lods
cmp
mov
jne
movsl
dec
inc
cmpsb
outsb
mov
jno
jmp
rolb
in
push
xchg
xor
push
js
and
add
ret
stos
mov
imul
call
inc
mov
pop
and
dec
rorl
xchg
fisubrs
xchg
sbb
fs
dec
dec
dec
or
call
dec
aam
xchg
add
push
lea
mov
addr16
cwtl
pop
mov
loop
lods
in
addr16
in
orl
mov
in
adc
ss
pop
push
es
ss
and
add
pop
test
or
and
mov
mov
or
pop
mov
outsl
mov
add
add
popl
mov
scas
sbb
in
movsb
or
mov
repnz
xchg
inc
or
mov
add
loop
adc
pop
lds
dec
pusha
je
jb
and
pop
xchg
push
mov
cmp
adc
nop
add
xlat
sbb
sbb
and
nop
xchg
sub
nop
sub
cltd
cmp
int3
mov
xchg
jecxz
sbb
stos
mov
xchg
pop
jo
cmp
xchg
or
or
sbb
or
fadd
xchg
or
je
inc
addr16
and
jae
or
sbb
mov
inc
cmc
or
adc
sub
lock
dec
aam
adc
mov
dec
and
test
add
shlb
sub
cmp
xchg
push
xchg
ja
inc
sbb
out
xchg
popa
cmp
sbb
pop
push
pop
pop
loopne
lods
mov
xchg
sbb
push
nop
adc
inc
inc
xor
cmp
cmp
xchg
cwtl
pop
xchg
les
xchg
push
in
addl
call
outsb
test
xchg
jmp
in
not
ret
adc
sbb
push
leave
sbb
stc
mov
pushf
inc
push
cmp
nop
ja
fsubs
aam
das
rcrb
mov
int3
jno
test
push
sbb
insl
or
pmulhuw
imul
pusha
adc
leave
add
add
test
cwtl
insb
push
add
test
pop
xor
push
pop
xchg
add
movsl
and
repz
loope
lahf
xchg
outsb
jo
insl
adc
jmp
pop
lods
bound
mov
or
daa
in
stos
in
stos
add
jns
push
pop
push
sbb
cwtl
and
rclb
popa
push
movsl
gs
mov
fcmovnb
lock
add
rorb
les
push
xchg
push
sbb
js
dec
pop
inc
rolb
push
dec
cltd
cmp
sub
aas
faddl
cmp
mov
bound
sbbb
cli
dec
jo
mov
inc
adc
popf
jo
pop
inc
xor
jne
xchg
lcall
push
sub
mov
lcall
mov
xchg
sbb
xchg
fsubrl
pop
daa
aaa
insb
pusha
xchg
pop
movsb
mov
fiaddl
aad
xlat
jo
jns
fwait
and
xchg
cmp
mov
pushf
inc
cwtl
fwait
inc
mov
lods
inc
push
cld
jne
push
cmp
lods
cmpsb
adc
push
nop
fwait
mov
sub
inc
xchg
rclb
cli
sub
cltd
nop
in
inc
das
nop
fcomps
pushf
dec
sbb
roll
mov
inc
adc
bt
mov
sbb
jecxz
pop
mov
hlt
out
in
pop
and
mov
rorl
pop
push
xchg
jb
pop
int3
pop
orl
unpcklps
fcoms
cmp
outsl
aam
cmp
inc
or
jns
pop
ljmp
add
cmp
sbb
cmpsl
scas
sahf
dec
daa
xor
or
lahf
loope
adc
ficoml
adc
jo
jmp
in
xchg
dec
cmp
jnp
adc
in
and
idivl
dec
popf
mov
test
adc
mov
or
jae
mov
mov
repnz
jo
jg
push
inc
jge
xchg
sbb
adc
push
sbb
or
mov
aaa
inc
ss
loopne
std
test
add
add
xchg
rorb
xchg
dec
loopne
bndstx
push
aaa
mov
rclb
xor
mov
pop
ret
aam
inc
cmp
xor
push
cmp
nop
or
or
adc
or
dec
and
mov
inc
aaa
mov
push
jne
inc
loope
sbb
sub
or
cltd
mov
sbb
cld
jmp
add
fwait
nop
sub
pop
fst
or
outsb
leave
add
push
and
aad
jg
pop
mov
push
fdivrl
aad
movsl
pop
sbb
and
pushf
adcl
lock
push
mov
fs
cmp
cmpsl
xchg
jecxz
push
fdivrl
cmpsb
or
adc
mov
xor
aam
mov
mov
popa
cmpl
push
push
dec
adc
and
ja
sbb
mov
aam
adc
jo
out
in
leave
jno
lea
fdivs
subl
stc
aam
inc
jb
adc
lea
jb
mov
mov
cwtl
xor
test
lret
test
dec
lea
add
inc
dec
ja
cli
notb
jns
imulb
lods
das
or
pusha
rcrb
outsl
xchg
pop
cmpb
mov
nop
add
and
cmpsl
test
in
rorl
or
mov
sbb
jns
mov
insb
xor
lret
je
andl
jbe
es
mov
cmp
lods
imul
add
mov
and
pop
in
dec
jno
cmp
lcall
jo
or
push
mov
in
mov
push
mov
jne
in
lcall
jne
add
sub
lods
cmp
mov
shrl
adc
push
mov
stos
cmpl
xchg
rclb
jae
sti
sbb
test
not
ret
icebp
add
jecxz
add
push
inc
lods
and
in
add
push
pusha
or
sbb
lea
mov
data16
pop
dec
push
and
push
popa
subb
pop
cmpsl
lock
xchg
call
bound
mov
and
add
in
or
push
jl
shlb
scas
add
mov
mov
dec
inc
push
nop
imul
cmp
push
push
or
inc
adcb
scas
mov
in
in
call
jb
in
pop
je
dec
dec
mov
jne
sahf
cmpsl
push
mov
nop
negb
insb
aas
jmp
adc
testb
shl
xor
mov
add
aam
xor
adc
cwtl
std
inc
dec
addb
adcl
jb
imul
dec
aas
xchg
dec
or
or
sbb
lea
shrb
popf
je
int3
adc
mov
mov
scas
orb
mov
and
lret
adc
push
mov
addr16
addr16
rorl
and
jae
cs
adc
pop
mov
inc
mov
adc
scas
mov
inc
aam
cmp
mov
adc
fadds
in
xor
les
rorb
sub
in
adc
jmp
insl
adc
ret
rcr
mov
pop
inc
daa
pushf
or
inc
pop
insl
add
mov
xchg
jne
bound
cwtl
push
sbb
push
xor
mov
out
adc
adc
rorl
lods
in
cmp
sbbl
fisubl
test
aad
loopne
test
jne
jne
xor
add
aas
popa
inc
pop
mov
mov
jne
movups
mov
test
lret
jne
movl
aas
cmp
xor
adc
add
jmp
mov
pop
and
xor
jmp
mov
or
xchg
test
mov
int3
xor
jo
mov
dec
cmpsl
sahf
xor
add
clc
mov
mov
sub
cmp
xor
in
pop
and
mov
stc
push
jge
cwtl
enter
cs
test
popf
sub
mov
lret
je
pushf
mov
mov
sbb
mov
lods
push
sub
aas
loopne
add
mov
adc
adc
mov
push
aad
jge
loope
or
sbb
and
mov
or
pop
add
fildl
nop
mov
dec
nop
sub
mov
adc
lds
shrb
pushf
sub
int3
or
jmp
mov
push
or
jne
test
push
stc
xor
std
out
mov
or
dec
arpl
mov
or
or
int3
aam
adc
adc
xlat
xor
or
lods
adc
mov
int3
or
sbb
aam
test
enter
mov
sbb
sti
mov
out
xchg
adc
mov
fisubl
js
sbb
sbb
push
pop
lds
push
shr
aas
push
xor
jno
loopne
int3
sub
xchg
mov
mov
scas
push
addr16
push
or
dec
fstp
movsl
mov
faddl
or
dec
nop
xor
mov
and
mov
repz
andb
les
push
fxch
rorb
mov
imul
fwait
shlb
mov
test
addr16
fsts
jb
cld
jp
notl
adc
mov
test
sbbl
dec
scas
sbb
and
out
pop
fcompl
and
ret
movsb
fcomps
sub
mov
ret
test
addl
ret
xor
jmp
adcl
ret
sub
orl
sub
gs
int3
xlat
and
adc
nop
cmp
ret
flds
sub
pop
sub
cmp
mov
lods
mov
cmp
mov
js
jns
lds
fwait
mov
inc
inc
mov
fmuls
jns
pop
subl
adc
push
gs
in
and
sbb
repz
sbb
pop
xor
and
push
loopne
js
lock
and
push
mov
pop
pop
adc
mov
mov
nop
cmpsl
mov
movsl
dec
sbb
jb
fistps
sti
sbb
fs
pop
inc
lock
pop
jle
xor
scas
iret
sbb
movb
adc
inc
jb
sub
icebp
das
xor
dec
enter
dec
outsl
int
ss
add
rol
cmc
push
loop
or
mov
sub
cwtl
dec
stos
les
pop
mov
pop
rorb
jae
push
nop
lods
jmp
mov
mov
or
fdivrl
in
mov
punpcklbw
mov
mov
fs
add
xchg
mov
push
insl
imul
push
pusha
adc
dec
push
xchg
dec
cmp
sbb
and
dec
es
inc
sub
add
add
push
and
rorl
push
and
adc
adc
orb
shlb
out
xchg
ja
add
fmull
and
leave
lret
fmuls
les
sub
int3
or
push
dec
loopne
addb
mov
add
sbbb
xlat
adc
xor
shlb
movsb
stos
dec
jmp
pop
int
dec
mov
stos
popf
push
inc
mov
add
or
std
aam
xor
ret
xchg
cmp
xor
mov
add
in
lahf
push
in
sbb
sbb
insb
mov
jbe
and
stos
sbb
into
mov
mov
into
fmul
xor
push
test
push
sbb
push
cmc
adc
xchg
push
fldenv
add
mov
push
jg
sub
gs
push
pop
aas
rolb
movsb
movsl
sbb
in
mov
push
add
cmp
es
test
pop
lds
inc
fmull
fwait
and
add
jl
sub
add
or
insb
rcrl
mov
shrl
addr16
add
jno
popf
call
shl
shl
xorl
sub
sub
adc
xor
mov
shlb
shl
add
push
add
mov
cmp
fildl
xor
roll
mov
sbb
cmpsl
push
aad
lret
adc
aam
sbb
inc
aas
pop
or
jbe
dec
xchg
aam
es
sbb
push
loopne
fsubr
mov
pop
lods
push
mov
fwait
mov
arpl
mov
mov
jbe
jo
jg
mov
iret
aad
sub
mov
dec
insb
jp
or
jg
inc
out
test
in
ficoml
or
mov
mov
xlat
cmp
pop
fcoms
dec
adc
je
mov
push
or
or
sbb
mov
inc
pop
add
subb
and
rclb
int3
test
jb
dec
test
mov
movsb
lods
fisubrs
rolb
test
dec
cwtl
inc
dec
outsb
pop
push
mov
nop
sbb
jb
pop
mov
loope
mov
xchg
je
push
pushf
pushf
inc
and
shll
xchg
pop
push
pop
add
rcl
imul
icebp
test
pop
leave
dec
mov
mov
out
loopne,pn
pop
lds
inc
and
dec
subl
leave
cmpsl
xor
fwait
nop
ds
pop
mov
bound
xchg
icebp
inc
test
loope
dec
push
jmp
lahf
das
mov
mov
mov
popa
adc
or
pop
and
dec
add
mov
sbb
mov
loope
fdivrl
push
inc
xchg
cmp
ja
xor
ret
movsb
dec
mov
jno
pop
nop
outsl
push
push
ja
adc
dec
add
push
dec
mov
stos
ficompl
in
add
fldl
lds
xor
stc
std
pop
dec
mov
sbb
cmpl
mov
ss
and
and
jge
push
cmp
push
stos
push
notl
dec
xor
adc
or
pop
mov
inc
mul
or
pop
adc
dec
sub
push
add
fcmovb
push
or
test
mov
popf
cmp
movl
pop
sbb
ss
mov
addl
and
loopne
pop
pop
vmulps
mov
pop
in
sub
inc
and
xor
jo
iret
sub
aam
icebp
inc
or
sbb
and
leave
les
inc
div
add
addr16
pop
int3
das
or
insl
sbbb
cwtl
stos
xchg
cltd
inc
and
add
cs
mov
mov
pushf
push
push
fadds
repnz
xchg
dec
xor
adc
xor
and
xchg
jl
pop
enter
les
cwtl
mov
push
shlb
fildl
enter
int
pop
shll
inc
xchg
insl
scas
aad
jl
cmp
lahf
cmp
sbb
rcr
icebp
add
movsb
movl
jmp
inc
cmpsb
pop
dec
insl
push
inc
loopne
shl
mov
cs
loopne
bnd
xchg
xor
and
adc
pop
and
or
in
xchg
subl
add
data16
mov
sub
jne
xorb
xchg
sub
push
add
jnp
xorb
pusha
and
mov
or
pop
push
fxam
inc
pop
or
fdivs
in
fidivl
push
cmp
in
and
xor
xchg
xchg
xor
cmpl
or
dec
mov
lds
xor
add
and
push
lods
jbe
sub
adc
push
mov
and
cltd
hlt
repnz
pop
or
add
push
jo
xor
test
or
lds
clc
mov
out
push
pop
adc
inc
in
or
and
sub
pop
bswap
xlat
ret
int
adc
mov
mov
and
pop
inc
xchg
bound
gs
repnz
int3
dec
sub
pop
scas
lock
adc
outsb
or
in
leave
push
sbb
ret
mov
or
sub
pop
pop
adc
aaa
adc
lods
arpl
enter
fdiv
lds
jle
sbb
cmp
xchg
sbb
call
out
add
add
jp
sbb
iret
sub
sbb
xor
fmuls
pop
outsl
or
pop
fstp
push
mov
sub
pusha
cwtl
fisubl
pop
lds
xchg
outsl
pop
aad
sub
ss
icebp
mov
adc
nop
mov
inc
push
mov
rcll
inc
xchg
add
roll
sbb
xor
imul
pop
or
cwtl
sti
mov
pop
sub
cmp
es
or
test
es
icebp
add
scas
or
sub
fcomps
inc
xorl
cltd
adc
mov
push
scas
add
add
sub
pop
inc
xchg
rolb
test
out
add
xor
add
sbb
adc
pop
nop
xorb
jb
rcrb
ljmp
add
ja
jge
int
xchg
xor
ret
in
sbb
xorl
cmp
pop
imul
push
popa
sbbb
pop
scas
lods
or
mov
in
cli
mov
pop
push
sub
mov
push
pop
sbb
jl
cmp
pop
inc
adc
into
lcall
mov
dec
and
rorb
or
adc
adc
subb
inc
or
add
mov
js
orb
add
add
ss
orb
loop
or
insb
sbb
xchg
movl
xor
out
xchg
dec
or
sbb
nop
and
cmp
cwtl
nop
fwait
movsb
or
adc
pop
shlb
adc
cmp
mov
mov
xchg
repz
sub
nop
psubusb
sbb
fcoms
ret
inc
int
push
in
mov
mov
bound
sbb
sbb
and
fimull
adc
cmpsb
sbb
xchg
adc
mov
test
insl
ret
inc
add
jo
jbe
push
ret
leave
pusha
lods
pusha
and
add
push
insb
loope
dec
shrb
add
enter
and
lods
push
nop
jecxz
and
inc
pop
mov
sbb
jecxz
jecxz
dec
sub
or
icebp
inc
loopne
lods
mov
sub
movl
nop
or
imul
test
fldl
pop
mov
xlat
mov
es
loope
dec
inc
ret
popf
push
scas
out
dec
mov
dec
mov
mov
sti
add
pusha
movsb
jb
cmpsl
lods
test
cmp
push
ljmp
leave
pop
lods
xor
cmp
test
je
sbb
push
out
sti
xchg
dec
inc
push
pop
cmp
ja
add
ret
test
dec
cs
sbb
cltd
test
pop
sarb
jne
movsb
mov
out
and
scas
pop
xchg
ret
pop
subl
mov
je
dec
push
and
loopne
scas
shl
mov
add
dec
fldl
mov
inc
push
and
pop
fs
push
fs
fs
pop
pop
mov
sbb
xchg
cs
imul
fcompl
adcb
ret
bound
jl
or
ret
je
push
or
fnsave
dec
add
shr
stc
pusha
insb
int
fsubr
daa
inc
lods
mov
fsubl
add
pop
inc
pop
push
pop
add
repz
test
dec
ja
cltd
cmpsb
iret
repz
cmc
cmpsl
add
iret
repz
xchg
lods
loop
cmp
push
inc
add
push
clc
push
mov
ss
cwtd
jl
cltd
scas
mov
mov
mov
cmpsl
and
inc
call
clc
jnp
mov
add
adc
mov
sarl
xchg
adc
or
cmp
rclb
cmpl
test
rcrb
add
nop
add
into
pop
adc
test
pop
cltd
push
mov
insb
sahf
imull
push
push
mov
adc
sbb
js
popf
xchg
add
aas
rdpmc
add
pop
in
adc
add
pop
sub
xorb
andl
insb
outsl
arpl
pop
aam
je
outsl
outsb
cmp
mov
gs
idiv
fildll
push
je
arpl
jne
jb
outsb
je
add
push
jb
outsb
or
add
outsb
adc
mov
insl
or
jg
add
mov
or
in
imulb
push
jb
gs
sub
or
outsl
imull
in
xchg
stos
je
imul
and
and
sbb
dec
add
add
pop
pop
in
dec
add
inc
xor
inc
push
add
stos
mov
push
add
pushf
sbb
sti
push
stos
xor
sub
gs
divl
push
je
and
inc
divl
dec
adc
fistpll
fildll
push
or
bound
jns
push
jne
imul
or
jbe
out
divb
insb
jp
outsl
or
out
fisttpl
adc
imull
lret
aas
and
outsl
jmp
xchg
out
mov
arpl
xor
mull
lret
stos
insl
sub
push
cmp
ja
cmp
mov
sub
data16
xorb
fistpll
xchg
ds
jp
sub
das
sub
jecxz
lcall
pusha
sbb
lahf
popa
push
outsb
fimuls
push
or
pop
xlat
jae
daa
dec
jbe
iret
ja
push
pop
out
xor
fnstcw
je
adc
sbb
lock
mov
scas
mov
imul
insl
mov
iret
xor
push
filds
push
das
pop
xchg
popa
in
jb
ret
fidivrl
push
xor
mov
das
lock
or
daa
outsl
xchg
jo
andl
push
mov
sub
xchg
ret
mov
mov
aaa
jg
add
fbstp
fisttps
jne
xor
xchg
jb
jne
pop
rorl
inc
jnp
and
bnd
mov
sbb
sub
cmp
cmpsb
ljmp
outsl
pusha
or
iret
arpl
sbb
push
mov
fnstsw
and
mov
insl
mov
imul
add
inc
in
imul
shll
jnp
push
dec
cmpsb
rdtsc
cmpsl
outsl
pop
lock
sub
pop
xchg
lret
sbb
jb
cmp
add
pop
stos
mov
mov
lret
je
scas
sbb
popa
mov
mov
scas
pop
dec
jne
popw
pop
jecxz
test
sub
insb
add
dec
addr16
pop
ret
fs
add
mov
mov
call
jb
enter
call
sbb
sbb
mov
sbb
mov
xchg
and
sbb
mov
stc
repnz
js
jns
jp
xchg
and
cld
xchg
pushl
loope
cmpsl
lds
addr16
mov
sub
sub
push
cmp
inc
push
mov
xchg
jae
lret
or
add
pop
ja
add
mov
dec
insl
jnp
mov
imul
arpl
fcmovb
inc
jecxz
mov
call
cmp
out
std
imull
sub
insb
adc
add
fadds
add
push
add
add
add
xor
cmp
pop
dec
aaa
xor
push
push
mov
mov
mov
pusha
push
jo
out
into
fidivrl
or
cmp
add
sbb
add
addb
add
xchg
shr
int
test
add
orb
sti
outsb
push
cmpb
push
and
sub
jb
insl
int
adc
push
jo
add
adc
cmp
mov
outsb
fucomip
fbld
push
add
mov
jns
add
das
das
and
movsb
cmp
push
cmovno
dec
sbb
xchg
stos
daa
push
jno
xchg
jbe
dec
pop
lods
mov
push
dec
mov
jne
add
jnp
in
sbb
dec
pop
imul
jno
les
inc
data16
idivb
inc
adc
mov
outsl
jo
les
and
add
inc
inc
das
pop
mov
ss
imul
iret
jns
aad
mov
out
sti
push
outsb
jnp
sub
pop
xlat
mov
inc
jae
push
imulb
push
sti
ret
sub
pop
outsb
fiaddl
push
dec
mov
push
ds
insb
fcmovnbe
pop
neg
iret
mov
mov
lahf
jg
dec
cmp
dec
cmp
insl
insl
cmp
add
dec
and
xor
add
push
das
das
adc
nop
mov
insl
bound
pop
dec
outsl
jbe
arpl
xchg
je
inc
jne
jne
jle
sahf
jmp
push
outsb
cld
jo,pn
imul
jb
outsl
bound
pushf
jae
into
inc
popa
outsb
adc
jae
cmp
xchg
popl
ja
ja
pushf
addr16
popa
je
jb
xor
mov
push
push
gs
sbb
mov
sahf
adc
outsb
and
jbe
out
pop
dec
inc
aas
add
mov
dec
or
adc
rorb
jae
push
push
dec
xchg
jl
dec
push
popa
insb
jne
inc
inc
insb
fs
lcall
fldcw
leave
loopne
das
add
xchg
orb
sar
lret
jno
icebp
pusha
xchg
or
ret
movsl
add
xorl
outsl
ljmp
data16
mov
push
outsl
aaa
mov
bound
gs
xor
popa
js
addl
je
pop
dec
pop
adc
add
inc
ror
push
push
outsb
imul
xor
ss
push
fcmovu
add
add
or
pushf
sbb
pop
jb
or
leave
and
fs
xchg
mov
mov
sahf
test
lret
or
or
loopne
and
mov
aas
inc
sub
sub
cs
xor
xor
xor
ss
cmp
mov
cmp
inc
inc
inc
inc
dec
dec
imul
dec
dec
dec
dec
ss
push
sub
fildll
pop
pop
pop
pop
pop
xchg
mov
cld
jmp
bound
gs
imul
jno
lea
js
jp
jl
jle
nop
push
inc
push
arpl
rcll
jmp
inc
push
pusha
mov
jl
cwtl
out
pop
ja
aaa
adc
push
inc
sub
dec
xor
pop
dec
dec
inc
dec
inc
adc
push
mov
fs
cs
jae
dec
bound
je
mov
outsb
data16
push
jbe
dec
inc
jnp
mov
imul
daa
pop
fidivrl
sub
mov
outsl
js
push
xchg
xor
repnz
inc
outsl
insl
jo
xlat
xchg
cmp
jo
and
and
daa
aaa
jbe
rcr
les
dec
imul
mov
arpl
jo
ds
cmp
dec
inc
daa
daa
pop
and
outsl
ss
jns
mov
insb
and
jnp
push
in
and
rolb
sbb
cmp
outsb
jle
jbe
jnp
outsb
xor
outsb
pop
outsl
mov
dec
je
imul
add
jbe
push
push
lahf
int
xorl
imulb
push
jp
pop
jbe
sbb
xchg
pushw
popl
pop
xor
faddl
mov
cmp
gs
push
inc
inc
add
daa
xor
rorl
or
lock
mov
outsb
mov
pop
pop
pop
push
push
jae
or
scas
lods
jbe
aas
cmp
adc
push
pop
push
test
push
subl
gs
mov
add
bound
or
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
enter
stos
popa
mov
pusha
lods
fbld
dec
jge
or
imul
push
imul
push
jo
or
xchg
or
sbb
xor
das
mov
or
jno
jnp
subl
push
pop
das
je
cmp
xchg
daa
xchg
cmpsl
cmp
popw
pop
cmp
insl
lahf
es
or
ds
and
sbb
sub
sub
sub
push
pop
jle
out
sub
in
pop
ds
and
sbb
sahf
daa
mov
sub
mov
pop
pop
and
and
rolb
scas
into
jle
push
mov
ja
dec
dec
pop
pop
jne
jp
sbb
jne
add
push
inc
aad
das
jo
mov
xor
gs
imul
loope
lods
les
push
imul
outsb
adc
sub
inc
out
jo
sub
add
fs
into
cmp
repz
cmp
jnp
iret
repz
add
clc
in
push
mov
fucom
push
fmull
pop
aam
cmp
repz
ror
enter
lock
int
loopne
mov
lods
fwait
addr16
cld
push
test
mov
out
cmp
sub
pushf
xor
out
aaa
and
push
mov
jnp
iret
loope
mov
push
test
cmpb
cmp
je
iret
push
iret
fs
push
dec
push
inc
scas
out
ss
sbb
adc
cld
fdivrl
jl
int3
inc
lret
clc
push
iret
repz
fdivs
cmp
repz
inc
cmp
and
addr16
in
xchg
insb
out
cmp
mov
leave
xchg
leave
fidivrs
push
fmulp
inc
leave
andl
sub
and
sbb
sub
insb
and
add
addl
cmpl
mov
and
sbb
add
add
add
add
add
ja
cmpsb
add
insb
cmpsl
or
addb
in
add
push
pop
fists
sbb
das
jle
add
fisttps
addl
mov
xchg
xchg
xchg
xchg
call
fwait
pushf
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
test
clc
stc
cli
sti
cld
std
jmp
addb
mov
adc
decl
adc
xchg
inc
push
and
mov
outsb
gs
popa
pushw
xchg
push
dec
data16
pop
jns
movsl
xchg
cli
repz
xor
add
or
mov
outsl
insl
das
in
push
arpl
jo
fs
out
jne
sbb
out
jp
popf
jne
cld
inc
str
xchg
int3
pcmpgtw
xor
push
inc
pushl
xor
jb
push
xor
push
dec
inc
dec
pop
mov
dec
inc
add
adc
sub
or
jo
adc
incl
into
mov
mov
push
imul
loop
mov
ds
pop
adc
std
pop
jns
clc
lret
sbb
jb
jge
arpl
cmp
inc
mov
scas
jp
jno
in
fstl
repnz
or
mov
and
cmp
dec
imul
aas
iret
lret
add
inc
mov
mov
sub
testl
inc
sbb
pop
jns
ds
xor
lcall
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
mov
jmp
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lret
cld
lcall
imul
or
cmp
jle
inc
mov
xchg
push
pop
xchg
sub
lahf
jg
pop
mov
out
leave
ljmp
orb
cmp
decb
popa
push
or
scas
int
mov
leave
hlt
mov
inc
xor
sahf
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
into
or
icebp
pop
pop
repnz
mov
or
es
sbb
add
xlat
pop
loopne
scas
or
push
add
jbe
dec
cmp
inc
inc
or
outsb
jbe
pop
add
ljmp
insl
scas
sub
hlt
dec
mov
or
jb
stc
dec
jecxz
idiv
jns
imul
cmp
and
jae
pop
movsb
daa
xchg
pop
jl
imul
xchg
gs
mov
ljmp
and
and
push
dec
imul
and
gs
fisubrs
test
mov
add
lcall
xor
ja
popa
xchg
cmp
jmp
pop
rcll
jae
insb
lea
jo
xchg
hlt
push
lahf
fldln2
cltd
dec
in
jb
popa
addr16
push
cli
mov
fstpl
dec
jo
addr16
xor
outsl
sbb
xor
and
jns
jo
jmp
mov
ret
in
jae
shlb
push
push
sub
add
shll
adc
data16
mov
sub
arpl
adc
out
inc
cmpsb
aam
jbe
fs
cmpsb
sbb
sbb
xchg
jle
push
mov
shrl
cmp
push
add
shll
and
jnp
out
jo
jbe
mov
gs
addr16
jo
into
jns
mov
cs
test
push
cmp
jne
push
nop
or
addr16
jne
loopne
lsl
dec
js
sub
flds
ja
and
rcrb
jecxz
cmp
add
mov
imul
adc
jo
xchg
sbb
pop
push
dec
and
cmp
xchg
bound
aaa
pop
xor
sbb
das
push
add
jp
cmp
arpl
sbb
in
mov
es
adc
lea
inc
push
pop
jae
data16
pop
bound
jo
jb
sbb
pusha
fwait
mov
addr16
pop
push
mov
cmp
jp
shl
xor
addr16
je
push
in
inc
arpl
arpl
cld
decl
das
and
and
and
and
cmp
sub
js
js
aad
pusha
or
cs
daa
js,pn
insb
xor
xor
in
cmp
ret
or
jae
arpl
sub
js
mov
pop
xchg
and
jns
and
outsl
cwtl
jg
jp
mov
and
stos
jbe
daa
sub
outsb
push
cld
je
or
push
cli
hlt
hlt
fcoms
push
ds
push
cmp
xchg
jae
outsl
ja
popa
push
mov
aas
es
cmp
clc
imul
orl
pushf
mov
adc
sub
xor
imul
push
add
addr16
adc
insb
sarb
ficoms
sub
mov
data16
push
dec
dec
dec
inc
and
inc
movsb
or
jne
add
dec
outsl
orb
pusha
adc
xchg
jne
ss
adc
addb
add
cmpsl
dec
add
out
pushf
jbe
lahf
pop
outsb
jb,pn
aam
adc
in
outsb
out
xor
sub
aas
outsl
jae
orps
or
dec
inc
into
bound
adc
addr16
and
jne
nop
push
movsl
or
jo
sbb
jns
ret
xor
jne
out
sbb
or
xchg
stos
ret
popa
inc
out
jb
ljmp
cs
cmp
cs
adc
push
in
mov
push
imul
dec
aas
sub
insb
sub
mov
pop
push
inc
je
imul
push
jp
mov
loopne
inc
outsl
stos
pop
outsb
shll
lods
add
js
push
jo
push
pop
adc
push
xchg
xor
inc
gs
mov
jecxz
dec
ja
sbb
aaa
out
dec
inc
mov
add
xchg
inc
jns
out
lods
mov
inc
daa
jl
jl
add
rorl
sub
add
dec
loopne
jl
cli
loopne
sbb
sbb
sbb
imul
addr16
in
push
and
push
in
add
pop
mov
jl
jns
psubusb
jl
push
or
mov
jl
mov
push
add
insl
mov
xor
ja
mov
xlat
outsb
mov
popa
or
mov
insb
jae
jno
arpl
aam
roll
xchg
jl
jo
loopne
int3
push
shl
xorl
mov
pop
test
je
les
data16
sub
divb
dec
lret
or
adc
lods
jbe
push
xchg
push
mov
push
cmp
pop
mov
push
mov
mov
push
push
dec
add
test
sbb
push
pop
or
and
test
sbb
addb
lods
cmp
imul
push
push
test
jae
inc
dec
xchg
int
mov
shll
cld
pop
push
fcmovu
adc
outsb
pop
shrl
inc
jb
inc
inc
pop
bound
data16
rorl
push
insl
rcl
mov
daa
stos
popa
pop
andb
je
aas
mov
xlat
mulb
jle
dec
cmp
js
jmp
ret
push
add
imulb
add
ss
or
addr16
iret
cmp
lock
or
loop
adc
sbb
sbb
add
cmp
add
lahf
pop
add
add
pop
shlb
fdivp
outsb
bound
cmpsb
add
aas
dec
cs
ds
add
inc
mov
neg
inc
aaa
push
fiadds
ds
inc
xchg
push
inc
adc
fidivrs
jnp
jg
inc
push
in
cs
fnstcw
mulb
inc
mov
out
mov
pop
out
scas
jnp,pn
faddl
add
nop
stos
jg
mov
aas
ss
loope
es
dec
push
nop
xchg
popf
popa
xor
stos
push
mov
iret
sti
mov
subl
and
and
cmp
popa
push
xor
add
inc
add
adc
push
sbb
xchg
or
push
fdivrs
je
out
inc
int
cwtl
mov
insb
or
xor
sbbb
push
sbb
ds
or
les
test
jae
aas
mov
push
popa
into
xchg
mov
ror
daa
cmp
test
cs
clc
andb
imul
push
xor
cmp
cvttps2pi
idivl
cmp
mov
insb
pusha
xlat
push
popa
adc
xor
cmp
mov
mov
bound
jns
out
push
xchg
pushf
mov
iret
mov
das
test
fstl
adc
hlt
cmp
dec
jle
cmc
cmp
adc
ret
dec
loope
xchg
adc
dec
cmp
pop
jae
cmp
jbe
sahf
sbb
and
and
loop
icebp
cmp
and
xor
mov
dec
pop
adc
addr16
dec
movsb
xor
and
adc
fidivl
adc
dec
in
fdivrl
sbb
adcl
push
shll
mov
sbbl
aaa
cmpsl
scas
pusha
test
fdivrl
xchg
ja
cmp
push
aam
inc
mov
loope
gs
push
sbb
pop
inc
jb
xor
push
mov
outsl
sbb
or
outsb
imul
or
adc
add
xor
mov
mov
push
movntps
sbb
loope
icebp
popa
imul
stos
pop
imul
inc
mov
enter
push
outsb
cmp
jbe
mov
stc
aad
nop
ja
jnp
stos
iret
add
addb
lock
cs
mov
or
or
js
and
or
ret
in
or
pop
pop
dec
sbb
lahf
jbe
mov
inc
fs
rorl
lods
and
and
xchg
adc
pop
in
inc
cwtl
subl
leave
sbb
inc
sub
fsubs
fiadds
shlb
add
dec
flds
movsb
sbb
ss
outsl
test
or
or
inc
je
mov
popa
mov
ret
pop
mov
push
inc
dec
cs
ja
out
scas
addl
test
cmp
cmp
lock
or
imul
and
mov
imul
sbb
das
out
cmp
sbbl
and
push
ret
mov
mov
mov
rolb
test
sub
dec
mov
sahf
sbb
sub
add
mov
cmp
sbb
in
xor
xor
push
test
jl
dec
push
jne
and
mov
ss
inc
js
fs
enter
push
ud2
push
inc
jbe
mov
popa
jae
push
jecxz
xor
push
cmp
andb
int
jne
test
pop
and
ja
push
fimuls
mov
das
test
jno
inc
sub
sbb
jbe
adc
jg
lods
xor
push
dec
popa
push
push
inc
dec
gs
inc
adc
pop
pop
cmpsl
test
daa
das
ljmp
add
notb
addr16
sbb
push
cmp
add
xchg
mov
push
sbb
inc
ret
scas
aam
out
jb
ret
cmpl
shlb
lea
shrl
jns
outsl
cmpsl
ret
add
jb
movsl
fsubl
sub
dec
insb
jns
xor
pop
ds
xchg
adc
sub
test
imul
jb
insb
pop
mov
ja
inc
mov
xlat
push
inc
sub
arpl
and
data16
inc
and
je
push
add
xchg
jb
movsl
cmpl
movl
dec
fs
mov
sbb
mov
aaa
add
adc
cmp
pop
daa
outsl
imul
jp
cmp
jg
dec
subl
push
dec
sub
sbb
mov
dec
jne
das
sbb
rcll
bound
imul
adc
ficoml
push
jns
push
or
cmp
mov
xor
rcrl
lock
mov
jo
dec
cwtl
popa
icebp
fsubs
push
push
mov
cmp
mov
jb
mov
dec
inc
loope
into
mov
xor
jne
push
aaa
fdivs
rorb
pop
xchg
dec
dec
inc
jecxz
jg
push
pop
push
lcall
pop
pop
jb
fists
sahf
adc
inc
sub
sarl
push
xor
and
or
bound
pusha
and
addr16
cwtl
jge
sbbl
es
mov
test
adc
cmp
outsl
sbb
push
ss
or
out
sbb
and
inc
int3
add
mov
pop
pop
jnp
sub
in
xor
addl
push
sub
stos
cs
outsb
movsl
pop
fldt
nop
add
cmpsl
pop
push
daa
cmp
pop
scas
scas
pop
pop
xor
and
pop
cmp
xor
jo
ja
push
push
cmpsl
pop
ficompl
dec
xchg
dec
pop
mov
add
mov
les
fcom
or
cvtpi2ps
add
push
add
js
popa
addr16
insl
mov
xchg
xchg
add
out
aaa
and
xchg
add
sbbb
or
out
mov
add
pop
add
dec
dec
testl
in
push
dec
inc
lcall
inc
dec
or
test
das
cmpsl
and
sub
pushf
or
mov
and
mov
flds
sub
adc
out
dec
dec
or
cmp
std
inc
hlt
mov
push
inc
pop
inc
push
or
loope
adc
inc
push
incb
dec
dec
mov
mov
push
fnstcw
stc
das
jle
dec
jnp
fdivl
add
aaa
cmpsl
pop
daa
push
adcl
into
pusha
test
adc
mov
pop
mov
cltd
clc
test
aaa
push
outsl
jb
jno
jo
xchg
bound
fdivs
pusha
xchg
andb
adc
loopne
je,pn
mov
adc
aas
jb
pushf
jo
stos
cs
cmp
sub
iret
mov
push
ljmp
inc
inc
jmp
in
in
pop
ss
int
add
pop
repnz
hlt
mov
fdecstp
js
mov
sub
aam
clc
xor
fwait
out
mov
and
jl
call
or
xchg
jg
cmpsl
fistpll
and
and
pop
push
add
add
push
mov
bound
pop
push
cwtl
fchs
add
mov
cmp
pusha
push
mov
xor
add
roll
mov
xor
mov
test
xchg
fbstp
inc
cmp
push
ja
inc
and
daa
and
loopne
jne
xchg
or
pop
push
stos
push
loopne
and
sbb
loope
adc
outsb
arpl
sbb
pop
lret
adc
sbb
add
das
addb
push
cmpsb
cltd
mov
push
ja
shll
pop
outsb
jl
pop
mov
cli
lea
loopne
sub
popa
lds
sub
or
inc
add
bound
add
and
inc
xor
sbb
and
jge
ds
pop
inc
xor
mov
push
and
lret
cmp
cmp
movsb
dec
push
outsb
adc
inc
out
stos
clc
adc
cmp
outsb
mov
adc
ja
add
cmpsb
adc
and
adc
adc
in
insl
jae
mov
cmp
bound
xchg
cmp
rcrl
pop
aam
dec
sahf
ss
cmp
push
adc
push
fwait
inc
xor
loopne
pop
and
lock
push
dec
cld
dec
scas
xchg
stos
lods
pop
push
jb
mov
and
dec
shl
mov
push
leave
test
cmp
push
leave
push
shrl
dec
dec
mov
inc
dec
mov
leave
push
jb
dec
call
push
inc
pop
inc
push
jb
pop
inc
pushf
inc
dec
lods
xchg
stos
in
clc
movsb
jnp
pop
push
filds
test
stos
stos
in
inc
push
add
dec
scas
xchg
test
stos
mov
les
filds
stos
mov
inc
and
in
inc
int3
mov
pop
and
inc
stos
jmp
cmp
sub
scas
xchg
stos
fs
aas
aas
cmp
xchg
pushf
push
ds
mov
ds
dec
lahf
les
dec
sar
popa
je
push
mov
mov
and
adc
push
xor
out
cld
les
dec
mov
loope
mov
stos
cmc
dec
push
sbb
jne
sub
push
ficoms
daa
and
inc
push
pusha
int
dec
mov
pop
jnp
sbb
jecxz
sbb
mull
scas
das
jne
addr16
andb
adc
mov
jbe
inc
jnp
or
pop
dec
dec
add
push
fidivl
mov
inc
fisubl
comiss
insb
test
or
pop
repnz
popa
aam
in
xchg
inc
mov
mov
pop
xchg
inc
xchg
stos
icebp
inc
jae
daa
sbb
add
cmovae
mov
aaa
mov
mov
inc
push
dec
insb
or
pop
test
out
das
pushl
incl
aas
idivl
cmpsl
or
arpl
fimull
jne
push
pop
mov
inc
or
fisubrl
testl
mov
xchg
pop
mov
adc
jg
in
pusha
insl
outsl
ja
add
test
dec
add
jb
mov
push
push
test
or
adc
jne
pop
jbe
jb
mov
seto
push
divl
das
outsl
or
xlat
dec
dec
dec
push
cwtl
or
out
pop
into
xchg
push
inc
das
shl
xchg
lods
test
mov
movsb
out
push
jnp
and
push
cld
mov
xor
ret
jp
sbb
inc
push
pop
dec
inc
push
or
add
push
or
add
push
add
mov
push
push
push
xchg
inc
push
inc
inc
and
push
sub
inc
test
rol
add
add
bound
adc
adc
xchg
es
je
push
mov
fs
shll
jo
sbb
or
punpcklbw
xchg
dec
scas
mov
in
push
dec
jae
inc
inc
call
cmp
int3
xchg
lahf
popa
inc
insl
out
sbb
push
idivb
fs
mov
xor
or
jno
inc
add
mov
sbbb
imul
cmp
jg
addr16
aas
pop
adc
sbb
jns
out
push
andl
xchg
lcall
xor
dec
xchg
dec
sub
inc
test
mov
mov
add
push
push
adc
jns
and
sub
xor
inc
mov
mov
insl
jo
out
mov
mov
popa
xchg
add
shrb
xor
shrb
xchg
pop
fwait
dec
mov
adc
pop
add
aaa
pop
sbb
lret
ss
int
str
add
inc
movsl
add
incl
inc
push
xchg
out
sahf
xlat
jle
push
dec
pop
dec
es
out
sahf
xor
cs
or
addl
sub
ss
mov
inc
das
inc
bnd
pop
imul
mov
popf
test
push
push
and
bound
ds
dec
jo
popa
jl
add
daa
or
pop
and
test
inc
test
outsl
push
ret
xchg
das
loopne
inc
pusha
push
jb
inc
es
add
push
xor
sbb
mov
sub
in
sbb
and
mov
pop
not
ss
push
cs
xor
push
xor
insb
inc
or
jne
push
push
dec
cmpsl
into
jne
xchg
xor
add
stc
pop
cmp
and
iret
add
or
push
out
adc
sahf
pop
ret
lods
scas
and
dec
loop
loopne
leave
push
dec
test
mov
scas
and
sbb
xchg
jbe
dec
pop
dec
xchg
movsb
lods
add
bound
les
cmpsl
out
push
jl
push
push
jb
add
fucomip
lcall
fistpll
dec
data16
pop
sub
bound
push
imul
cmp
dec
addr16
imul
dec
imul
jns
dec
inc
insl
dec
push
push
jb
inc
xor
outsb
jns
xor
incl
pop
jae
fs
dec
dec
dec
push
bound
mov
mov
clc
or
addr16
je
dec
aaa
aaa
mov
inc
add
mov
out
add
inc
xor
inc
push
imul
inc
incl
dec
jbe
jae
jbe
dec
jb
ss
jns
push
push
xor
pushl
xor
xor
pop
push
imul
cmp
xor
dec
ja
loopne
jle
data16
xor
push
xor
jo
lahf
push
mov
sub
dec
fs
bound
inc
out
cmp
add
dec
push
push
inc
push
push
js
inc
dec
inc
dec
push
imul
fwait
std
outsl
cs
push
inc
push
imul
push
push
push
dec
xor
dec
inc
fs
inc
xor
inc
dec
push
xor
and
lods
fucomp
jns
inc
sub
pop
data16
dec
inc
dec
jp
mov
push
dec
push
sub
xor
push
dec
push
insl
dec
jg
insl
push
inc
pop
ja
xor
dec
push
dec
jp
jp
xchg
pop
jp
mov
out
dec
inc
dec
aas
xor
push
xchg
push
fdivs
xor
int
push
ss
ss
xor
dec
pusha
push
fcoms
xchg
imul
add
cltd
dec
push
inc
mov
push
push
add
and
add
nop
sbb
push
dec
lods
dec
or
pop
stc
inc
movsb
pop
mov
out
xchg
dec
jbe
shll
cmp
push
outsl
inc
jo
and
rolb
int3
add
sbb
lret
ss
gs
and
bound
into
mov
add
mov
adc
xchg
add
pushf
adcb
cmp
popa
push
push
bound
sbb
fimuls
jae
add
les
inc
int3
test
add
xor
jge,pt
notb
push
gs
push
cld
xor
roll
mov
pop
push
dec
fcmove
call
sub
inc
out
insb
pop
call
jne
fimuls
pusha
push
fistps
inc
add
sbb
xor
push
sbb
dec
loopne
loop
test
mov
pusha
cmp
fs
jge
sbb
xor
cmp
in
push
inc
sub
or
idivl
cmp
test
loopne
push
inc
xchg
fidivrs
rcrl
addr16
xor
nop
sbb
mull
pushf
nop
pop
out
push
outsl
sti
xorl
movq
jne
sbb
imul
jno
sub
iret
xchg
out
push
pop
push
inc
push
add
movsb
cs
and
mov
in
dec
push
inc
cmp
xor
cmc
jne
cmp
jne
repnz
ss
xor
xor
xor
xadd
scas
dec
jo
add
push
xchg
fnstcw
orl
dec
aam
hlt
sub
cmp
out
out
inc
pop
push
fsubl
inc
pop
inc
mov
or
outsl
xchg
push
mov
pop
int3
pop
mov
ret
xor
std
cmc
ljmp
in
push
hlt
dec
ja
pusha
into
mov
popa
mov
xor
xchg
xchg
sub
dec
mov
lods
sub
xchg
jmp
outsb
and
aaa
mov
pop
inc
dec
xchg
and
sbb
pop
sub
pop
loope
or
cmc
addr16
xor
popaw
insb
push
insl
addr16
insl
add
mov
outsl
dec
lea
lret
enter
sub
jns
push
pop
iret
je
mov
outsl
stc
imul
sub
cmpsl
add
push
jmp
xor
xor
pop
fcom
jbe
pop
sbb
and
inc
das
or
out
cmpxchg
pop
sub
mov
call
inc
push
push
jmp
fdivl
dec
dec
inc
je
push
cmp
mov
inc
cld
hlt
push
push
ss
push
call
cmp
stc
stos
shll
ss
outsb
push
jnp
ja
into
jl
push
pop
mov
mov
ret
push
rorb
xchg
add
fs
sti
push
pop
insb
loop
das
nop
and
pushl
aam
adc
and
mov
add
adc
aaa
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
lahf
in
pop
subb
mov
dec
fsubs
hlt
jmp
sbb
mov
pop
dec
xchg
add
mov
jecxz
dec
push
pop
adc
jb
mov
pop
push
and
cmp
xor
aaa
aaa
xor
dec
fdivl
adc
dec
ficompl
inc
push
dec
push
in
ficoml
push
dec
dec
and
les
je
and
mov
fldt
ljmp
int3
mov
and
mov
pop
jb
insb
xor
and
cmp
inc
sub
jl
das
cltd
sbb
dec
das
adc
inc
orl
xorb
mov
push
mov
inc
add
push
xor
je
ss
pop
aam
dec
stos
stos
clc
pop
and
dec
pop
orl
mov
pop
push
ffreep
insb
pop
ja
jnp
insl
stos
cmp
xor
sub
les
sub
movb
inc
inc
mov
popf
lods
xlat
int3
pop
jne
adc
inc
dec
sbb
adc
mov
jbe
push
xorb
cltd
jmp
je
les
bound
add
es
inc
data16
adc
push
sahf
fwait
and
add
add
fisubl
xlat
pop
jae
rorl
jae
outsl
or
lea
xchg
das
dec
lods
insl
xchg
mov
das
jnp
inc
pop
lret
das
dec
push
fisubl
fiadds
mov
icebp
dec
outsl
je
ja
iret
sbb
das
pop
sbb
test
outsb
ja
ret
inc
and
xchg
daa
dec
push
fwait
and
call
stos
sbb
jne
inc
mov
inc
push
outsl
movsb
xchg
loope
dec
push
cli
paddusb
sub
and
lret
sbb
xchg
aas
cmp
xchg
mov
pop
adc
cmp
or
jns
dec
les
and
cmpsb
xor
filds
sbb
xor
leave
inc
sbb
nop
andb
push
int3
ds
pop
lea
inc
fucomip
add
insl
and
sahf
inc
rclb
gs
and
xchg
mov
lret
mov
dec
push
je
jae,pt
in
jns
int
dec
aad
mov
pop
insb
mov
aam
je
ljmp
out
mov
loope
add
pop
adc
divl
pop
xchg
insb
cmpsl
push
sti
inc
ficoms
sbb
add
sarb
imul
bound
popa
mov
les
pusha
xchg
or
bound
push
adc
shll
pop
and
out
daa
mov
loope
popa
pushf
scas
clc
enter
mov
out
fildl
add
and
push
negb
inc
jo
es
push
das
mov
sahf
mov
adc
fwait
addr16
addl
jo
dec
iret
rep
sahf
mov
mov
decb
jne
idivl
das
dec
push
mov
daa
repnz
mov
cwtl
xor
push
xchg
fstpt
push
pop
cmp
xor
xchg
movsb
outsl
pop
xor
xor
sahf
in
in
into
pop
xor
push
xor
push
dec
jecxz
xor
pop
jns
xor
cmc
jno
sti
nop
seta
mov
mov
sahf
out
lock
xchg
inc
jmp
sahf
int
ss
cltd
ss
pop
mov
out
fldcw
sbb
scas
ja
dec
scas
rcr
ja
push
je
push
insl
out
cmp
es
mov
cmp
popf
mov
divl
inc
and
adc
push
jae
fnstcw
and
shll
sahf
aas
pusha
andl
sbb
xchg
daa
movsb
out
ss
jns
sahf
or
incl
xchg
popa
ljmp
mov
outsl
push
loop
out
sahf
sub
push
js
mov
loopne
add
push
jg
jns
out
cmp
sub
sahf
out
jb
test
fwait
out
adc
incl
or
aad
pop
dec
sbb
scas
inc
mov
and
adc
and
and
rcrb
xchg
adc
push
mov
xor
fmuls
icebp
rclb
test
mov
cs
pop
and
push
mov
add
les
add
idivb
loop
xchg
mov
sbb
pop
sbb
pop
repnz
ds
adc
or
adc
iret
pusha
or
fwait
test
adc
inc
and
pop
inc
add
cmp
subl
call
mov
add
mov
ljmp
daa
inc
sbb
push
or
aaa
insl
mov
cmp
cmp
rcr
and
jae
fisubl
dec
sbb
ljmp
dec
add
cmp
dec
inc
sbb
dec
mov
rorl
push
inc
xor
push
cmpsb
push
insb
pop
mov
jo
mov
out
push
jns
push
adc
neg
or
das
push
pxor
xchg
xchg
outsb
push
inc
imul
jae
outsb
iret
push
pop
retw
popa
mov
in
test
push
dec
mov
ja
push
mov
out
xorl
test
je
sub
and
push
xor
push
js
xor
mov
sahf
les
mov
cmp
cmp
outsl
gs
sub
les
popf
xchg
dec
arpl
rcll
mov
cmp
push
mov
push
dec
mov
inc
and
stos
fildl
test
dec
push
dec
mov
cmove
adc
imul
pop
push
gs
pop
sub
jb
movsb
mov
outsl
xor
leave
es
sub
inc
jne
or
xor
pop
adc
sub
idivl
je,pn
and
xchg
cs
push
and
inc
jnp
shlb
xor
jo
dec
add
dec
adc
inc
imul
shr
adc
idivb
push
dec
dec
push
inc
push
dec
push
imul
in
push
xlat
pop
push
add
sub
push
mov
or
or
push
cltd
xchg
mov
sbb
insb
mov
daa
mov
and
lock
jo
add
push
xor
in
imul
or
xlat
popf
inc
cmp
sub
mov
xor
jmp
mov
pop
shrb
mov
das
jp
fs
ljmp
mov
clc
pop
inc
dec
and
push
push
inc
mov
add
out
lods
xchg
xor
push
imul
inc
ficomps
mov
and
xchg
sub
or
inc
push
imul
or
arpl
fiadds
and
sbb
fbld
sahf
pop
cmp
sbb
xchg
das
pusha
mov
ja
sbb
xchg
ret
push
in
fnstcw
lea
or
cs
or
roll
sub
xor
xor
cmp
cmp
pop
aam
xor
mov
dec
pop
addl
inc
pop
shlb
add
mov
pop
inc
pop
lea
fistl
inc
pop
inc
callw
das
dec
inc
push
test
cwtl
stos
inc
add
aad
sub
jmp
push
out
xor
mov
mov
movsl
push
fwait
notl
add
and
sub
int3
aas
inc
scas
cmp
outsl
sbb
jg
add
inc
test
dec
push
or
test
pop
sub
dec
sub
mov
pushf
sahf
sub
es
jbe
lock
xchg
pop
aaa
push
pop
aad
cmp
aas
sub
js
cmp
or
inc
and
inc
jb
pop
dec
mov
scas
adc
iret
inc
pop
pop
mov
iret
fisubrs
inc
dec
inc
daa
inc
pop
dec
ret
xor
push
push
push
push
push
inc
push
pop
dec
int3
sub
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
xchg
popa
xchg
ds
dec
inc
push
sbb
pop
push
dec
dec
push
pop
inc
insl
popa
mov
xchg
mov
in
pavgb
mov
pop
cmove
push
push
jns
adc
jo
stos
add
xchg
cmc
dec
outsl
dec
insb
jb
mov
and
push
or
fistl
add
insb
je
xor
dec
mov
cmp
addr16
loopne
mov
pop
jno
outsl
xor
push
adc
cmovno
add
loopne
pop
or
jb
and
mov
pop
inc
sub
lock
outsl
pop
lret
inc
outsl
jl
ljmp
cmp
mov
xchg
stos
xor
shrb
inc
xchg
add
sub
lock
das
add
dec
cmp
insb
and
cmp
jg
mov
das
adc
jp
insl
inc
jle
push
sarl
addb
jne
cmp
into
je
mov
jbe
cmpsl
push
popa
xorl
fsubrs
push
xor
cmp
mov
lahf
adc
add
out
dec
mov
pop
outsb
daa
mov
or
push
push
xchg
pushf
and
pop
jg
inc
mov
adcb
pop
lahf
push
pop
cs
add
push
inc
push
dec
sarb
adc
out
xor
popf
add
imul
sbb
inc
sub
lahf
add
pushf
jle
push
add
xchg
jae
add
cmp
and
push
lahf
sahf
inc
cmp
sub
flds
js
add
mov
sub
inc
or
jle
out
addr16
dec
or
jl
and
pop
inc
ja
dec
das
lods
pop
pop
or
test
mov
out
shrb
pop
push
and
lods
insl
or
por
inc
insb
dec
jge
cltd
sbb
ds
outsb
add
pop
push
loopne
sbb
push
lods
push
mov
imull
cmpsb
hlt
xor
insl
mov
iret
in
add
inc
mov
fsts
int
mov
push
stc
push
pcmpeqb
lahf
outsb
lahf
insl
ss
in
jbe
mov
lock
pushf
push
mov
xor
inc
aas
lahf
mov
mov
mov
lock
push
add
inc
push
and
repnz
ficomps
adc
dec
test
movsb
outsl
jmp
pop
pop
iret
cmpsb
push
push
inc
not
xchg
inc
lods
adc
or
outsb
neg
sub
insl
clc
es
lods
mov
mov
nopl
cmp
or
cmpsl
push
and
arpl
jmp
fdivp
xchg
clc
xchg
push
mov
std
stc
pop
cmp
sahf
ss
lods
fldenv
mov
jecxz
dec
aad
jns
push
call
push
cld
add
cwtl
add
ret
push
imul
movsb
pop
aas
popa
jle
push
adc
sub
arpl
lds
xor
add
adc
mov
xchg
shlb
add
imul
add
jb
lods
lock
in
inc
dec
inc
and
dec
add
push
nop
push
insb
stos
jo
outsl
pop
adc
iret
movsl
add
pop
insb
adc
pop
lea
mov
mov
pop
xchg
gs
sub
or
addr16
cmp
sbb
sub
jae
dec
pop
push
push
inc
mov
lahf
cmp
mov
inc
inc
ljmp
cs
dec
jp
sahf
int
pusha
sub
test
mov
xchg
dec
adc
xchg
in
xchg
dec
inc
xadd
sbb
inc
cmovo
add
inc
mov
cmp
lock
ds
jo
maxps
loopne
ret
nop
aas
mov
lret
inc
inc
movd
mov
out
insl
into
add
lret
sbb
lcall
inc
dec
test
nop
push
add
in
test
adc
pushf
js
sbb
movsb
aas
add
test
popl
fistpll
in
out
ss
dec
mov
inc
add
adc
or
sub
cmp
add
inc
daa
and
idivl
lahf
push
cmpsl
mov
fdivp
ss
enter
push
inc
push
js
adc
subb
sub
sub
outsl
loopne
push
lock
push
fdiv
add
aaa
pop
add
push
xor
add
rolb
lds
insb
mov
popa
push
das
outsl
xchg
xlat
stos
add
lods
xlat
bound
enter
pusha
add
xchg
hlt
cld
cmpsl
lahf
and
cs
pop
enter
popa
aad
cmp
cmp
dec
jle
inc
adc
outsl
xchg
lock
cmp
bnd
xchg
lock
pop
and
sbb
in
nop
aam
inc
or
les
bound
xchg
dec
lock
fistl
outsl
xchg
je
notb
insb
jg
pop
daa
test
popa
pshufw
inc
cmp
inc
jae
pop
add
movsb
aam
inc
dec
enter
aas
out
inc
fmuls
or
dec
push
daa
pop
jnp
in
outsl
xchg
daa
xor
cmp
test
sub
add
pop
js
in
pusha
lahf
adc
add
pusha
aas
cmp
es
dec
dec
outsb
and
outsl
add
add
pop
ja
enter
aam
mulb
in
nop
cs
jo
or
notl
push
jb
fsubs
cmp
push
hlt
inc
dec
enter
idivl
cmp
fisttpll
testb
addr16
add
and
add
fsubrs
or
negb
test
or
mov
int3
aam
popl
push
cmp
out
cmp
push
mov
js
insl
outsl
xchg
js
daa
dec
mov
ja
pusha
push
push
enter
enter
nop
xchg
out
call
loopne
addr16
daa
in
sub
ds
push
out
sub
xor
addr16
push
iret
les
jo
mov
repz
adcb
dec
add
pusha
je
inc
cs
rcl
daa
push
or
mov
ficompl
lahf
test
shll
push
jb
iret
test
fdivrs
enter
add
jnp
sahf
or
pop
enter
lock
mov
inc
pop
adc
cs
jbe
lahf
add
pop
and
lahf
test
pop
inc
mov
jae
adc
test
nop
mov
fstps
hlt
inc
or
test
mov
fwait
out
jle
cmpsl
inc
dec
pop
dec
or
jg
test
cmpsl
sub
pushf
mov
notb
and
mov
enter
inc
inc
dec
push
cmpsl
sub
ja
pop
loopne
jle
cmpsl
mov
inc
pop
hlt
pop
sahf
pop
pop
add
nop
mov
fwait
out
cwtl
lods
dec
cwtl
pop
enter
mov
divb
inc
push
dec
cmp
or
cmp
mov
inc
inc
push
loopne
adc
test
jg
cmp
repnz
test
in
sub
cmpsl
test
aad
and
inc
adc
mov
inc
add
daa
fs
insb
inc
sub
and
jnp
dec
lahf
insb
ja
enter
pushf
js
pop
and
repnz
pushf
js
and
test
enter
pop
enter
ja
ss
hlt
inc
sbb
push
dec
jo
mov
lahf
addr16
stc
pop
vcvtsd2si
mov
stos
fiadds
push
mov
push
add
push
shll
loopne
push
cmpsl
fs
pop
mov
push
daa
inc
and
xor
push
sahf
pop
pop
andb
cmpsb
out
je
addr16
cs
push
cmpsl
fs
jmp
fsubl
mov
push
cmpsl
mov
ja
ss
or
sbb
sub
insl
dec
push
mov
mov
pop
inc
inc
insb
push
sbbb
add
or
mov
aas
push
cmpsl
mov
filds
dec
add
dec
adc
and
aas
push
cmpsl
cs
movsl
jg
cld
pop
push
jl
push
cmpsl
push
cmp
in
das
xor
aas
pusha
cmp
push
int3
lahf
dec
add
lods
fs
add
or
sbb
lods
loopne
enter
dec
out
sub
rcrl
xor
adc
jg
les
sahf
mov
mov
rol
ja
mov
lock
pop
adc
or
push
inc
sub
dec
pop
xor
inc
inc
and
dec
inc
andb
ja
inc
xchg
inc
sbb
mov
add
jg
scas
jbe
iret
jo
clc
lahf
jo
inc
or
xchg
jbe
mov
dec
push
pop
cmpsb
lods
insl
pop
push
sub
jg
rolb
shll
mov
pushf
inc
es
push
rolb
cwtl
mov
out
decl
fsubr
jp
call
lock
test
xor
xor
sahf
inc
dec
ficoml
ja
cmp
jns
addb
hlt
test
cmp
adc
movsl
into
jo
sahf
in
pop
add
jo
aam
daa
fs
dec
and
xor
dec
or
sbb
push
inc
or
insl
jg
aam
and
aam
repnz
xor
lea
cmp
fsubr
das
popa
and
lods
push
add
pop
out
inc
dec
sub
shll
lahf
pusha
iret
cmp
cmp
inc
dec
jl
nop
loopne
add
pusha
add
shrb
lahf
or
rcr
adc
dec
decl
push
xor
rolb
push
inc
or
in
inc
cmpl
xor
mov
ficoms
lahf
fs
push
jb
es
add
push
jnp
push
adc
and
daa
cmp
mov
ja
pop
push
jb
iret
test
repnz
enter
movsb
enter
mov
mov
ja
lahf
add
push
adc
mov
outsl
sub
hlt
movb
enter
call
ja
xor
xchg
lods
mov
lods
notl
insl
inc
outsl
aas
data16
add
sub
adc
adc
and
sub
jnp
lea
addr16
jl
mov
cmp
push
insb
push
js
orb
pop
pushf
or
pushf
test
jo
ret
push
sub
xchg
test
neg
inc
xchg
lock
mov
popf
nop
loopne
and
and
and
push
cmp
mov
js
push
insb
push
js
inc
out
es
add
subb
or
lock
inc
or
mov
call
and
xlat
inc
mov
xchg
mov
daa
fwait
mov
push
call
cs
iret
jnp
test
in
push
mov
push
call
bound
inc
jo
inc
push
add
bound
jbe
adc
dec
mov
dec
cmp
push
dec
push
adc
adc
ss
inc
sbbb
xchg
nop
pushf
lods
mov
movl
aas
add
add
out
fldl
dec
sub
push
call
xchg
inc
inc
cmp
xor
mov
adc
mov
add
divb
push
cwtl
pop
enter
int
nop
dec
fs
sahf
addr16
mov
cmp
out
pop
cmp
pop
in
enter
cmp
pop
sahf
pop
pop
pop
iret
repz
in
enter
iret
out
ss
call
mov
pushf
andb
and
push
mov
push
es
dec
ja
inc
adc
das
inc
dec
xchg
inc
xlat
mov
ss
call
mov
lock
cmp
pop
enter
inc
add
cmpsl
lret
mov
daa
add
jecxz
sahf
sbb
into
push
mov
add
push
adc
ja
and
pop
testb
xchg
inc
add
jns
dec
outsl
push
pop
cmp
or
inc
pop
and
push
cmp
outsl
sbb
inc
inc
cmpsb
movsb
xor
nop
or
xchg
out
lods
and
or
cmp
int
testl
repz
add
lcall
push
je
fs
ljmp
add
orb
out
xor
and
or
dec
in
xor
stc
push
lock
pop
cmp
add
scas
add
pop
inc
add
adc
in
push
rorb
loopne
xor
push
nop
sub
dec
mov
jb
ljmp
dec
testl
fs
stc
pushf
fisubrl
xlat
aaa
pop
fsubs
add
add
jns
mov
push
pop
fs
clc
jl
sub
out
mov
add
mov
adc
enter
mov
jbe
movl
sub
and
pop
dec
enter
pop
pop
push
push
sbb
outsl
add
push
dec
and
adc
test
push
fimuls
call
and
repnz
and
add
stc
push
cmpsb
rolb
xchg
je
shlb
add
js
cmp
mov
inc
xchg
je
xor
addr16
mov
data16
test
aaa
pop
lcall
pop
hlt
push
jg
jl
mov
es
inc
jbe
dec
jns
sti
xchg
popa
insb
push
js
clc
or
xor
push
faddl
outsl
into
pop
test
aas
mov
mov
pop
fcmovb
add
sbb
aaa
in
rcrl
popa
adc
sbb
divl
loopne
dec
enter
popa
pusha
outsl
sbb
add
push
push
out
jbe
faddl
push
daa
sbb
or
outsb
mov
mov
add
gs
sub
adcb
or
bound
mov
cwtl
scas
bound
xor
cmp
bound
dec
xor
mov
stos
cmp
xchg
daa
xlat
and
mov
pop
dec
arpl
pushf
sbb
push
inc
lods
popf
sub
pop
arpl
arpl
nop
mov
orb
inc
sbb
aad
mov
adc
lcall
sbb
mov
aaa
mov
lcall
or
arpl
push
data16
outsb
jl
stos
and
iret
lock
pushf
nop
adc
inc
add
rolb
sbb
mov
in
gs
add
adc
jo
inc
es
add
cwtl
imul
leave
jg
nop
push
out
cmpsb
movsb
add
les
scas
push
nop
int3
iret
mov
xor
lretw
out
popf
sub
data16
cmp
sub
stc
push
jb
rorb
icebp
dec
push
pop
inc
je
mov
js
jecxz
cwtl
aaa
push
enter
adc
dec
aaa
add
xchg
hlt
pop
xor
sbb
enter
iret
xchg
jl
fisubs
xlat
add
push
sbbl
xchg
out
sahf
mov
dec
or
push
push
xor
xchg
pop
int3
repz
jnp
push
clc
push
imul
sahf
int
push
dec
xchg
mov
mov
or
xchg
or
aaa
testb
popf
sub
push
rorb
imul
inc
outsb
pop
or
fcomip
in
cmp
imul
pop
test
hlt
popl
inc
xlat
aaa
movsl
aaa
cmp
push
fsubs
mov
pop
scas
add
int3
outsl
out
push
popl
or
fimull
adc
stos
dec
push
or
inc
out
mov
sub
fdivs
pop
data16
aam
aas
mov
push
sbb
sbb
jecxz
nop
adc
inc
push
push
or
mov
dec
dec
testl
sar
or
out
imul
cs
dec
outsl
aaa
loopne
jb
je
daa
lock
loopne
pop
enter
daa
add
xor
inc
lahf
fimull
pop
cld
ja
repnz
enter
jo
nop
inc
fcomps
lahf
jo
daa
xchg
xor
ja
rolb
dec
mov
mov
add
test
or
insl
sbb
mov
lods
ds
addr16
mov
adc
daa
insl
fs
jo
sbb
fiadds
xor
movb
sbb
dec
mov
insb
push
push
inc
gs
sahf
out
cmp
out
adc
lahf
out
xchg
mov
stc
cmp
repz
jns
cmpsl
es
addr16
iret
repz
sbb
insb
pushf
ret
out
adc
ja
or
xor
sbb
push
popf
cld
ds
repz
pop
dec
into
push
mov
in
jl
out
out
leave
out
popa
dec
push
push
mov
enter
cltd
mov
ds
dec
ja
into
cmp
repz
sqrtps
ja
push
push
dec
push
lea
int
or
push
mov
icebp
or
mov
ds
repz
cmp
in
push
jns
out
sub
sahf
shl
int
in
adc
jle
repz
out
pop
outsb
stos
cld
pop
pop
iret
repz
xor
mov
cmp
jo
mov
iret
repz
cmpsl
loopne
pop
ja
data16
rcrl
pop
inc
jg
int
jns
fisttpll
pop
sub
lahf
out
mov
popa
scas
jl
cmpsl
stc
sbb
lods
in
arpl
iret
shll
loopne
fs
out
hlt
sbb
aaa
jae
insb
ds
sar
dec
sbb
sahf
out
out
xchg
push
imul
lret
push
push
jl
jns
out
sti
push
imul
stc
cmp
repz
pop
insl
sarl
sbbb
jns
iret
divb
outsl
push
repz
or
popa
movsb
iret
repnz
imul
sub
lahf
cmpsl
stc
cmp
pop
jae
xchg
push
je
ds
mov
adc
repz
out
ret
push
jns
out
js
xchg
fistps
jns
stc
cmp
pop
andb
jns
jl
cli
cmp
out
ds
jl
insb
xchg
lret
sarl
jo
data16
mov
imul
push
jne
stc
xor
out
sub
adc
sahf
cmpsl
pusha
mov
out
ds
fdivr
cmp
mov
out
cmp
sub
sbb
inc
sar
push
mov
repz
repz
cli
xor
sarl
test
jnp
jns
iret
daa
lea
out
ja
out
cmp
dec
push
push
out
xor
mov
cmp
sahf
insl
mov
xchg
je
jmp
out
sub
xchg
int
repz
fcoms
xchg
repnz
out
ds
sub
in
shrl
cltd
pop
fwait
and
jne
mov
sahf
popf
sahf
push
jle
mov
lcall
subl
mov
stos
push
lods
cmpsb
lods
push
fnstcw
or
xor
add
add
pop
int3
sbb
sti
fisttpl
pop
add
aam
sbb
sub
xchg
pop
into
dec
pop
pop
movaps
add
pop
and
cmovle
in
ja
pop
sub
aaa
pop
fwait
jp
pcmpgtb
pop
mov
push
xchg
and
inc
cmpsl
add
rorl
inc
aas
pop
and
cmpb
pop
push
fdivrs
ja
mov
cld
aas
bound
cmp
dec
mov
incl
mov
aaa
mov
imul
aas
je
popa
xlat
dec
mov
dec
xchg
ss
inc
fistpll
xchg
cmp
mov
push
popf
sub
inc
lds
mov
out
sarl
enter
call
dec
adc
jnp
mov
jl
in
popf
bound
aam
mov
jg
addl
cmpsb
setp
and
pop
xlat
mov
pop
ja
sbb
addr16
or
fnstcw
cli
mov
mov
pop
add
pop
mov
out
jl
mov
pop
insb
daa
mov
add
movsb
sbb
xchg
sbb
and
sub
add
fisubl
push
ja
in
mov
push
pop
fistpll
addr16
dec
outsb
fisttps
and
jo
mov
push
add
or
xchg
and
add
add
filds
imul
jns
dec
in
in
cmp
push
pop
xchg
mov
add
cs
in
and
sub
xor
mov
scas
inc
fisubrl
jns
add
jp
scas
in
daa
fs
ss
xchg
sbb
jb
dec
ss
ss
jp
leave
mov
adc
fildll
mov
imul
scas
jnp
daa
jnp
daa
nop
pop
test
cmp
mov
lcall
mov
jnp
daa
pushf
outsl
stc
pop
push
jno
push
inc
aam
add
in
ret
cmp
and
add
push
add
adc
xchg
pop
push
fcoms
jb
add
sbb
fiadds
sbb
mov
mov
mov
psrlw
dec
faddl
jge
cmp
mov
add
movsb
mov
mov
popa
mov
fisubl
lock
cs
jle
xor
frstor
mov
ja
fldt
cmp
mov
push
daa
decl
jnp
cmp
push
or
mov
in
add
cmp
jle
dec
pop
and
add
push
and
jg
xchg
leave
leave
leave
xchg
lcall
cmp
mov
mov
daa
mov
frstor
xchg
and
std
cmp
mov
sub
cmpsl
mov
in
movsb
push
cmp
dec
cmpsl
push
pop
pop
daa
xchg
xchg
push
pop
pop
cld
cmp
loopne
sub
cmp
cmp
lds
enter
or
or
or
lcall
cmp
cmp
sbbb
mov
cmpsl
sbb
ds
inc
push
mulps
add
filds
call
dec
mov
mov
rorb
sbb
xchg
icebp
add
and
push
das
cmp
xchg
and
cmp
cmp
rclb
orb
rolb
iret
mov
fstpl
cmpb
pop
scas
add
and
mov
pushf
or
jno
cwtl
pusha
cmp
orl
cmp
cmp
add
add
inc
mov
add
add
xchg
pop
arpl
outsb
out
xlat
dec
outsb
and
out
lahf
sbb
dec
dec
lods
mov
mov
in
jmp
and
or
in
jnp
adc
and
add
fucomi
xor
das
inc
cmovns
in
ror
pop
or
stos
inc
cmpl
dec
dec
leave
add
daa
dec
rorl
xchg
pop
ds
out
test
push
mov
xor
pop
and
jb
cmpsl
aas
adc
and
sub
enter
add
add
jg
or
into
jecxz
ret
dec
cltd
filds
dec
movl
dec
dec
adc
aas
xchg
xchg
xchg
pop
rolb
push
mov
leave
dec
in
xlat
loopnew
js
imul
lods
pop
in
or
das
daa
loopne
arpl
and
insl
xchg
seto
adc
inc
xchg
mov
insl
movsb
jnp
xchg
add
fstp
add
push
inc
mov
aas
pop
outsb
adc
xchg
int3
daa
in
sbb
adcb
inc
add
leave
and
push
pushf
xor
aas
push
pop
pop
mov
or
cmp
sub
lods
mov
mov
jo
daa
mov
mov
mov
mov
xchg
daa
and
push
loope
or
pushf
cmpsb
test
and
inc
sub
inc
cmp
fldl
xchg
add
pushf
pushf
jne
test
xor
xor
jb
and
adc
xor
xchg
pop
insl
and
scas
jl
or
daa
mov
call
aas
fs
leave
mov
mov
daa
in
out
xchg
push
roll
in
in
jbe
and
inc
scas
pop
mov
jl
pop
mov
or
cmovs
outsl
fs
rolb
jbe
mov
aas
mov
ja
wbinvd
nop
push
jne
mov
mov
inc
fcomp
fisttpll
xchg
xor
ja
ja
sbb
mov
das
mov
mov
dec
jb
loop
jp
mov
or
inc
inc
in
lods
push
das
add
inc
cmp
pop
push
push
add
add
lea
pop
jle
or
inc
mov
addr16
cmpsl
add
das
fildl
in
mov
fadds
inc
and
sub
cmp
push
pop
pcmpgtw
paddusw
ret
jle
push
mov
xor
or
int3
pop
or
mov
inc
mov
inc
mov
adc
fbstp
pop
rclb
cmp
jbe
pop
mov
dec
add
leave
les
mov
dec
incl
pop
jb
push
nop
and
sub
xchg
pop
jb
jbe
pushf
mov
pusha
push
push
cltd
movsb
test
movsl
sbb
xchg
pop
cmp
dec
add
in
popf
mov
cmp
orps
pop
xchg
pop
and
fists
daa
sub
pop
mov
rcll
popf
hlt
notl
addb
xchg
mov
aam
or
in
cmp
test
xchg
sub
sbb
xorl
cmp
dec
xchg
inc
mov
addr16
jbe
and
dec
js
inc
jno
shlb
mov
mov
sahf
mov
cmpsl
xchg
adc
loopne
test
lock
push
rcll
xchg
xlat
daa
cmp
xchg
push
jg
and
sbb
push
in
pushf
iret
push
arpl
jbe
pop
rorb
or
push
mov
pop
leave
dec
add
fstps
cmp
or
cmp
fstps
mov
push
add
jge
mov
incb
call
arpl
pop
pop
fwait
cmp
or
unpcklps
mov
dec
cmovl
dec
pop
push
add
addr16
pop
xchg
adc
dec
push
mov
pushf
xchg
xchg
mov
mov
pop
lds
int
stc
aam
aad
xchg
or
aad
in
dec
or
sbb
mov
add
sub
aaa
in
popf
mov
push
dec
pop
leave
arpl
outsb
jns
pop
test
enter
movsl
cmpxchg
xor
mov
xchg
push
dec
repnz
xchg
in
fisttpll
ucomiss
add
xchg
movl
add
xchg
incl
mov
lcall
stos
shr
int
mov
jne
sets
clc
push
add
jg
je
xor
push
je
imul
pop
push
push
pop
in
shrl
mov
popf
pushf
mov
mov
divl
in
xchg
mov
pop
aam
faddl
add
in
push
hlt
cld
or
and
push
push
or
adc
or
in
enter
push
xor
adc
cmp
fs
dec
adc
dec
inc
mov
adc
dec
and
or
push
add
scas
leave
mov
mov
in
cmp
push
xor
cmp
inc
dec
add
push
xchg
xchg
add
xlat
or
das
stos
and
mov
dec
cs
xchg
add
clc
jb
outsb
inc
push
add
push
aaa
fwait
add
inc
push
inc
das
imull
nop
dec
fwait
pop
das
pop
enter
setnp
jbe
orb
movsb
push
imul
jb
and
loopnew
or
sbb
push
mov
pushf
push
sahf
xsha1
cmpsb
mov
pushf
pop
mov
sbb
or
fadd
jmp
popf
sbb
sbb
sub
ss
add
imul
jno
orl
mov
inc
fiadds
cmpxchg
xchg
cmovg
add
pop
and
popf
mov
dec
push
addr16
daa
orl
not
loopne
daa
out
loopne
or
jmp
js
push
es
pop
adc
pop
adc
sahf
adc
and
and
popf
mov
call
adcb
cmp
cmpl
add
iret
xchg
pop
inc
into
pop
sahf
hlt
add
dec
add
lahf
sub
dec
enter
jg
push
pop
add
lods
adc
push
sbb
test
das
push
lcall
mov
mov
xchg
push
mov
outsb
and
daa
cmp
cmp
andl
xchg
adc
sbb
aad
and
loopne
test
sub
push
ss
and
scas
shrl
add
cmp
dec
dec
cs
je
nop
add
sahf
xchg
and
lods
add
mov
jb
enter
or
or
or
xchg
xor
jg
in
test
push
inc
push
push
inc
mov
push
popa
push
outsl
push
jge
mov
enter
cltd
push
test
js
push
fmuls
pop
jecxz
out
pushf
dec
inc
sub
repnz
aaa
add
and
sbb
add
add
pop
adcl
mulb
add
je
mov
loopne
xor
cmp
xor
js
push
es
jge
dec
push
push
sbbb
push
pop
push
jg
pop
push
adcb
das
push
in
jbe
int3
iret
lods
daa
fmul
pushf
nop
or
mov
xchg
movsb
xor
adc
inc
iret
ja
ret
inc
stos
daa
mov
ds
sub
add
pop
lea
lods
push
add
mov
movsb
mov
pop
push
clts
pop
mulb
out
hlt
xlat
bound
fidivl
xor
cmp
movsl
test
dec
xor
pop
pop
push
pop
je
movsl
jl
jbe
cmp
scas
aas
mov
add
xchg
xchg
loop
cmpsb
or
pop
and
fstpl
push
add
ja
pop
mov
outsb
sbb
xchg
push
popl
xchg
xlat
leave
enter
das
cmpsl
add
mov
mov
mov
cmpsl
pushf
cmp
pop
pop
add
xor
popf
and
in
fcmove
dec
popa
out
test
mov
fistps
lcall
stos
add
xchg
push
pop
cmpsb
aad
pushl
pop
int
jbe
jb
sbb
and
sub
das
mov
fucomi
ss
outsl
ss
push
or
push
testl
inc
pop
pop
jp
mov
add
xchg
sbb
test
or
jg
orb
scas
ret
pop
into
sbb
das
enter
lods
push
or
pop
add
jb
and
sub
push
or
lea
or
pop
jns
orl
xchg
pop
fwait
iret
mov
adc
sbb
xor
pushf
pushf
fsubp
out
pop
mov
ffree
stos
das
pop
adc
xchg
sbb
daa
ja
nop
xor
popf
pop
pop
bound
int3
rorl
inc
popl
cmp
mov
add
ret
adcb
add
xchg
mov
pusha
add
push
lods
mov
pusha
dec
push
pop
jbe
dec
cs
xchg
add
jl
xchg
adc
dec
mov
xchg
iret
pusha
pushf
pop
jo
jo
adc
mov
mov
lods
pusha
ljmp
xchg
popa
or
lret
popa
adc
dec
add
je
inc
push
add
mov
jo
movsb
shrd
sub
xchg
pop
and
pushf
bound
aaa
ljmp
xchg
and
and
mov
dec
xchg
mov
push
add
xchg
xchg
out
push
lcall
mov
or
in
mov
mov
xchg
out
cmc
lsl
pop
cmpsl
xchg
fisttpl
cmovb
mov
add
mov
scas
out
xchg
fildl
mov
shll
enter
add
add
mov
in
or
or
xchg
daa
and
or
and
ror
xchg
push
das
aam
pop
stc
mov
mov
push
js
cmpb
jns
xchg
push
add
cwtl
inc
sahf
mov
pop
test
add
test
or
in
in
jbe
or
hlt
paddb
gs
inc
cmpsl
jmp
lahf
mov
pop
sub
add
fiadds
in
imul
notb
mov
lock
xor
addb
into
sahf
pushf
ror
psrlw
dec
loope
or
stc
ror
xchg
or
or
cwtl
dec
sub
push
mov
outsb
pop
popa
pop
push
out
and
xchg
mov
pop
aas
data16
xchg
mov
ja
xor
cmp
in
in
testb
add
or
dec
sbb
movsb
comiss
pop
rcr
dec
popw
inc
push
dec
pop
testl
pusha
dec
addr16
fsubl
dec
jb
push
ret
mov
ja
push
lahf
addr16
out
addr16
mulb
pop
sahf
incb
push
push
mov
push
pop
push
fisttps
cmp
inc
movsb
push
test
push
cltd
push
aas
test
cmpsb
mov
shrb
mov
mov
cmpsl
mov
mov
mov
fidivl
imul
sbb
leave
imul
in
movsb
jbe
cmp
pop
leave
dec
gs
add
cmp
fwait
ja
inc
jb
mov
inc
sahf
mov
into
add
out
mov
testb
xlat
or
lcall
inc
ss
sub
xor
cmp
xchg
mov
push
xchg
int3
fs
and
dec
insb
pop
mov
pushf
pop
mov
ja
lahf
cmpsl
xchg
outsb
add
push
sahf
fmull
rcr
psrad
add
or
dec
mov
sbb
leave
sub
jl
xchg
pop
pop
push
push
mov
mov
mov
mov
mov
cmp
cmp
jns
mov
push
negb
xor
insb
push
xchg
jecxz
cmp
jb
push
ja
addr16
mov
pop
xchg
mov
test
inc
ret
outsb
sbb
insb
in
in
push
sbb
insl
add
fmull
push
or
dec
je
mov
xchg
divb
add
mov
popf
pop
leave
dec
ja
xchg
lret
fsubrl
rorb
in
inc
sub
popf
mulb
movsl
mov
outsb
pushf
pushf
mov
push
pop
inc
inc
repnz
inc
sahf
mov
push
scas
mov
imul
inc
mov
inc
dec
cs
pushf
repnz
outsl
add
mov
pop
outsl
sub
outsb
addr16
outsl
xor
add
xchg
xchg
daa
and
add
enter
ja
or
lea
leave
mov
push
les
repnz
ficoml
in
inc
mov
adc
push
or
jb
xchg
and
sbb
push
sbb
mov
sub
xor
mov
ljmp
cmp
repz
jno
add
inc
mov
and
xor
xchg
mov
cwtl
jno
fsubr
add
jno
push
iret
imul
pushf
jae
pop
jnp
addl
popf
mov
mov
xchg
or
mov
fisttpll
dec
in
dec
pop
sub
mov
popf
adc
sub
add
cltd
popf
pop
xor
push
add
in
inc
add
loope
pop
mov
daa
clc
jo
or
psrlw
pop
xchg
add
sbb
jnp
test
or
mov
leave
scas
or
fisttpll
push
add
lcall
inc
mov
add
add
sub
in
dec
push
add
pushf
mov
mov
pushf
mov
pushf
pushf
mov
mov
and
inc
ret
xor
out
cmpsl
mov
shlb
sbb
push
and
in
jbe
rdmsr
cmp
push
pcmpgtd
outsb
mov
gs
pcmpeqw
jne
add
in
and
inc
cwtl
push
aas
xchg
daa
out
push
add
ror
rol
enter
jno
mov
repz
jg
hlt
xlat
jne
add
in
xor
and
repnz
insb
jne
inc
test
pop
jne
add
add
add
push
jb
rorl
or
cmpsl
scas
fsts
push
movl
cmpsl
jb
push
fbld
pop
mov
hlt
nop
or
sub
fsubs
cmp
or
jbe
push
or
mov
add
call
xchg
xchg
xchg
dec
cmpsb
inc
data16
mov
xchg
jnp
sahf
leave
inc
jb
cmpsb
ret
sbb
cmp
in
loop
pminsw
repnz
add
inc
mov
add
or
das
ja
ja
popf
pop
mov
mov
pusha
push
pshufw
subb
add
pop
nop
push
cwtl
pop
mov
daa
daa
add
test
lea
add
adc
sub
adc
jbe
leave
adc
daa
repz
jmp
pop
push
rol
in
and
mov
push
imul
stos
leave
insb
cmpsl
jbe
lds
cs
cmp
in
push
mov
xchg
add
je
ljmp
repnz
daa
in
sbb
lcall
and
imul
xchg
dec
das
addr16
outsb
jns
testl
stos
add
das
jns
inc
sub
jns
fsubp
or
pop
jp
push
adc
and
in
fs
xor
inc
inc
pop
mulb
dec
or
push
or
or
cmp
cmp
or
aas
addl
lock
pushf
pushf
xor
test
mov
aas
movsb
inc
xor
mov
cmpsl
fildl
xchg
cmp
aad
enter
daa
xchg
push
call
push
inc
push
jnp
add
dec
add
cltd
in
enter
divb
sub
add
dec
mov
dec
push
add
and
arpl
jae
or
dec
jne
mov
jnp
lcall
cmpsb
scas
movzbl
jbe
bswap
iret
or
xor
dec
scas
icebp
jl
unpcklps
pop
add
add
fsts
push
or
sbb
xor
or
or
inc
mov
adc
jb
enter
adc
adc
adc
in
lock
sti
sbb
in
enter
sbb
sbb
in
in
push
adc
in
adc
adc
in
in
push
or
movsl
sub
cwtl
jge
int3
sahf
mov
add
add
test
mov
add
dec
fisubl
into
repnz
sbb
dec
ja
sub
xchg
mov
daa
pop
push
outsl
out
cld
addr16
stos
btr
insb
test
pop
adc
fiadds
or
popf
pop
out
ja
mov
lock
aaa
insl
sub
add
ja
mov
cmp
enter
out
push
out
gs
adc
cmp
fisubl
cmp
and
addr16
stc
ss
jo
in
mov
mov
out
dec
int
add
xorb
push
out
push
cmp
mov
pop
sahf
pushf
pushf
pushf
outsl
jns
or
dec
dec
inc
mov
das
or
or
xchg
and
rolb
jnp
mov
addl
pushf
movups
sbb
daa
add
or
mov
push
iret
inc
iret
daa
push
scas
or
dec
daa
pcmpgtw
es
daa
pushf
push
adc
mov
iret
mov
ljmp
dec
ss
daa
push
nop
mov
fisttpll
mov
call
aas
or
outsl
mov
in
pop
in
outsl
testl
out
orb
or
sbb
and
or
push
adcb
adc
cmp
flds
leave
sarb
dec
adc
jns
add
in
lret
add
pusha
mov
rorl
dec
jnp
or
push
sbb
insb
dec
lds
das
rorl
outsb
cmpsl
push
insb
push
testl
int3
ja
mov
bsf
or
loope
jb
inc
test
in
inc
push
outsl
test
mov
outsl
test
mov
dec
push
add
pop
add
fs
gs
aas
and
jne
jne
jne
xchg
and
xor
lea
or
xchg
adc
adc
push
pushf
xchg
out
jl
dec
pop
xor
rep
test
add
sbb
daa
and
fisttps
and
push
sub
xlat
enter
cmp
or
test
mov
fisttpl
push
ja
pop
xchg
push
mov
pandn
out
in
jo
push
out
notl
dec
jmp
and
aad
cs
or
cmpsl
mov
pop
femms
scas
mov
mov
inc
adc
adc
mov
xchg
nopl
sahf
mov
pop
daa
sbb
das
sbb
aaa
aas
pop
cmova
and
mov
and
and
pop
addr16
outsw
dec
outsl
es
ja
sub
sub
enter
sub
sbb
jb
sub
mov
pop
mov
es
inc
and
and
ja
xlat
test
inc
push
cmp
pop
inc
repnz
xor
nop
xor
cld
add
inc
jmp
in
add
sbb
jbe
inc
mov
dec
add
jbe
xchg
mov
in
mov
xlat
adc
xchg
rcrb
xchg
outsl
mov
iret
aas
add
cmp
push
psraw
dec
in
pop
es
pop
lret
add
testb
add
daa
xlat
xlat
pusha
add
sbb
inc
xor
dec
mov
push
push
xlat
dec
mov
leave
in
leave
in
mov
push
jnp
jb
push
add
add
pushf
cmp
ja
or
mov
xchg
and
lods
or
or
in
lds
rclb
fistl
out
and
sbb
adc
adc
add
xchg
push
adc
sbb
and
inc
mov
sub
xor
cmp
sbb
dec
push
push
pop
pop
and
and
ja
andb
and
and
pop
cmpsb
xchg
js
mov
mov
and
aas
mov
jmp
and
add
pop
mov
jb
or
or
or
inc
cmp
or
jb
push
addps
pusha
adc
xchg
and
jo
js
adcb
seto
fwait
sbb
sbb
sbb
mov
leave
sbb
out
ror
xchg
and
add
and
loope
push
jns
and
mov
mov
and
das
push
add
push
dec
and
dec
push
pop
pop
pop
pop
or
enter
push
mov
jb
push
orb
adc
inc
cwtl
mov
pushf
pushf
fmull
pop
ror
dec
inc
sahf
pushf
sbb
testb
add
push
inc
pushf
mov
fcoml
aas
iret
mov
push
add
add
jb
mov
nop
cwtl
das
mov
test
mov
repnz
fsubrp
adc
cmp
cltd
pop
hlt
cld
jge
jb
adc
sbb
sub
jns
jb
cmp
sbb
sahf
mov
and
push
push
cmp
and
lea
push
fwait
add
mov
ret
lret
pop
inc
fimuls
aad
pmulhw
in
add
cmc
std
push
pop
mov
mov
pop
leave
in
and
push
push
cwtl
dec
sub
mov
pushf
cmp
add
jns
test
xchg
and
add
xor
leave
mov
or
or
cmp
jnp
or
out
push
paddw
popf
int3
mov
adc
adc
push
sub
cltd
mov
aas
dec
andnps
cmp
cmp
pusha
sbb
jbe
sbb
sahf
mov
xchg
xchg
daa
and
in
enter
out
and
jnp
add
sbb
es
leave
leave
xor
push
imul
jae
xor
jb
jns
jo
cmpsb
nop
scas
and
sbb
mov
mov
in
xchg
into
nop
nop
fidivrs
or
or
decb
setno
daa
daa
daa
daa
push
push
push
es
xchg
daa
daa
cs
fsts
dec
adc
jb
enter
sbb
jbe
rcrl
cmp
jle
xchg
loopne
test
rol
lret
sub
aas
xchg
ljmp
cs
xchg
add
test
xchg
sub
xchg
flds
xchg
inc
add
dec
push
pop
bound
enter
pop
js
orl
cmp
cmp
movsb
or
out
push
mov
cmp
rorb
xchg
xchg
adc
xchg
xchg
and
adc
and
int
fisttpl
out
icebp
sbb
enter
sbb
pop
sbb
pop
sbb
jb
sub
aas
xor
and
xchg
and
push
and
and
in
jne
subb
sub
sub
sahf
mov
sub
stc
sub
enter
comiss
xor
in
xor
xor
push
xor
pop
scas
push
testl
push
ss
jecxz
pop
cmp
daa
pop
mov
xchg
xchg
lcall
push
movsl
add
fnstcw
xor
pop
inc
into
sahf
mov
out
pmuludq
jmp
outsl
daa
inc
xchg
or
jb
enter
adc
dec
adc
bound
vmread
int3
sahf
pushf
mov
movsb
jb
mov
pop
cmp
jns
pop
out
paddb
pushf
pushf
mov
adc
sbb
popf
xor
sub
fldcw
push
je
dec
dec
xchg
adc
in
fsts
stos
mov
cmovbe
add
add
dec
loope
in
or
xchg
add
outsl
mov
prefetch
sbb
and
mov
dec
cmp
inc
dec
cvtps2pd
xchg
xchg
mov
pop
adc
adc
jnp
xchg
xchg
sbb
sbb
mov
mov
popf
int3
psrlq
pop
cwtl
push
jmp
into
aas
hlt
and
and
and
cmp
ss
sub
sub
cmp
inc
dec
punpckldq
test
xor
push
cwtl
negl
iret
push
int3
add
add
add
and
in
out
push
idiv
dec
in
addr16
cltd
push
dec
or
xchg
xchg
movb
test
leave
in
cltd
xor
pop
cmp
scas
push
add
enter
jae
jle
cmp
jb
mov
xchg
or
mov
push
mov
adc
adc
adc
adc
jmp
pushf
jecxz
aas
cltd
test
sbb
or
or
inc
mov
sbb
sbb
dec
xchg
xchg
pop
pop
pop
push
jb
in
enter
and
jl
rcrb
sbb
cmp
call
daa
in
xchg
jo
fistps
enter
add
femms
repnz
fs
add
xor
sbb
dec
or
popa
or
xchg
xchg
and
orb
xchg
cwtl
mov
mov
jb
adc
adc
in
xor
pushf
cmp
adc
adc
das
daa
sbb
mov
cmovs
and
or
push
addl
xchg
mov
lahf
pushf
lods
pop
push
mov
fs
enter
push
or
and
fs
or
fsub
or
out
push
hlt
aas
popf
or
into
sahf
mov
scas
push
sbb
adc
sub
xor
sbb
enter
sbb
push
fs
push
jae
sub
and
popf
les
popf
push
pslld
fnstenv
pop
sahf
or
movlps
and
sbbl
aas
xchg
xchg
mov
dec
or
push
or
xor
enter
adc
xorl
xchg
mov
in
lods
jg
lahf
lods
sbb
mov
in
sbb
sbb
sbb
cmp
lahf
add
xchg
and
push
sbb
es
and
enter
push
minps
leave
lret
sub
jo
nop
inc
repnz
lahf
in
hlt
in
in
xor
addr16
add
stos
jg,pn
jbe
pop
mov
push
dec
pop
cs
mov
cs
cmp
mov
out
cmp
cmp
inc
add
push
xchg
xchg
xchg
xchg
add
or
mov
fs
leave
add
xchg
mov
in
stos
das
mov
xlat
pop
loop
jbe
enter
clc
mov
push
pop
cmp
cmp
pop
jno
jl
sbb
sahf
mov
sbb
dec
mov
mov
mov
cmp
push
es
daa
data16
jno
jno
das
sub
in
leave
enter
xchg
das
pop
popf
xor
in
in
fs
aas
test
das
mov
in
mulb
ss
aam
jl
add
sbb
or
inc
sahf
int3
sahf
cmp
pop
cmpsl
xchg
lret
inc
in
mov
sbb
mov
push
mov
xchg
xchg
add
das
js
jae
nop
das
fwait
xsha1
cmpsb
or
mov
fists
ljmp
mov
leave
enter
and
cs
mov
xchg
mov
pop
inc
sbb
packuswb
dec
dec
outsb
pop
jb
mov
xchg
xchg
and
mov
and
add
jecxz
jb
enter
sub
sub
jns
jnp
inc
stos
sub
mov
cs
sahf
mov
das
loope
pop
in
dec
pop
sahf
divl
cmpsb
add
minps
mov
jae
jle
pop
sbb
cmp
pop
loope
push
sbb
addr16
jnp
cmpsb
push
inc
add
and
xchg
add
jb
mov
pop
pop
arpl
pop
sub
jge
xchg
rsqrtps
jno
lahf
cmpsl
dec
mov
mov
iret
in
jbe,pn
fdivrs
or
dec
or
push
loopne
pop
xchg
jg
nop
pop
jno
aaa
dec
jmp
js
mov
pop
adc
rclb
inc
and
daa
and
mov
mov
sbb
and
or
test
notb
repz
and
mov
daa
nop
mov
out
sub
xor
add
add
jnp
push
jo
jg
popf
mov
cmp
mov
push
test
in
dec
adc
xor
add
addl
adc
rorb
aaa
fiadds
jp
hlt
cs
inc
push
insb
pop
mov
fnstcw
add
push
sbb
pusha
scas
pop
inc
push
dec
aaa
or
aaa
movl
out
addr16
jns
out
sbb
dec
sahf
out
or
or
jbe
xchg
fdivl
or
jbe
sub
das
leave
leave
in
in
xor
outsb
mov
push
addr16
das
push
xorps
mov
push
and
cs
pop
andb
cmp
addl
sub
jbe
leave
cmpsl
mov
into
aas
xlat
sbbb
sbb
data16
push
icebp
inc
mov
mov
push
push
xchg
adc
xchg
adc
add
add
jno
sub
mov
add
imul
stos
arpl
adc
xchg
das
clc
or
or
andb
stc
enter
pop
movsl
sbbl
mov
shll
cltd
sbb
mov
in
ja
inc
mov
iret
mov
in
call
fildll
jle
adc
push
ficompl
push
pop
enter
fisubrl
xor
fcomp
loopne
jb
jle
xor
mov
faddp
addb
js
jo
jns
out
push
out
sahf
out
xor
sbb
out
sahf
sbb
or
add
jns
ja
cld
push
clc
hlt
in
iret
cmp
loopne
rcrb
enter
push
iret
repz
movsb
cwtl
mov
jmp
sub
push
pop
addb
pusha
jns
fadd
or
push
pop
push
push
out
sahf
out
inc
cmp
sub
rep
sahf
sbb
ret
clc
in
sarb
cmp
movsb
pushf
xchg
mov
jns
repz
insb
fs
out
sahf
pop
push
dec
cmp
sbb
cmp
add
ret
aam
sahf
out
les
pusha
pushf
out
push
mov
icebp
inc
leave
pusha
push
pop
dec
push
push
roll
lahf
inc
fsubrs
aad
clc
mov
gs
cmp
sbb
mov
es
add
sbb
or
inc
jle
xor
cwtl
outsb
jae
add
hlt
test
cmp
jo
icebp
call
push
nop
test
push
inc
jg
sbb
push
ljmp
xor
push
pop
rorb
loope
cmp
inc
aam
dec
out
rorb
shl
mov
sti
add
add
add
das
pop
ror
outsl
iret
inc
les
pop
add
test
popa
outsb
pop
inc
js
push
iret
fildl
pop
jl
bound
out
pop
and
fmuls
jb
enter
sets
mov
mov
into
mov
fsubrs
pusha
and
aas
orb
js
pop
adc
push
add
and
das
inc
adc
cmp
cmp
in
in
enter
adc
inc
sbb
jb
cmp
wrmsr
sbb
push
and
xchg
and
sbb
adc
adc
xchg
enter
lahf
xlat
clc
es
sbb
out
clc
mov
out
pop
cmp
rcll
inc
jg
xor
push
cld
jb
ja
movsb
aaa
bnd
add
iret
mov
jns
out
pop
cmp
pop
js
mov
addb
repz
jge
xor
dec
insl
add
push
pop
shl
iret
ja
mov
bnd
shl
sahf
dec
das
push
dec
insb
fldenv
sbb
fists
nop
xchg
cmp
mov
cli
or
nop
psubw
or
ret
mov
adc
enter
cwtl
push
and
mov
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
outsl
loopne
jmp
xchg
ljmp
push
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
das
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
inc
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
in
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fdiv
jmp
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
iret
int3
mov
sbb
int
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
mov
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
sbbl
std
scas
push
xchg
jge
pop
ficomps
frstor
shlb
outsl
inc
xchg
ja
out
shrl
dec
dec
inc
push
dec
inc
aaa
xor
mov
push
jg
lcall
push
inc
dec
bound
push
inc
pop
subb
jbe
test
mov
insl
outsl
mov
pop
dec
xchg
jge
sbb
bound
sub
push
push
push
pop
push
orl
xor
push
or
push
bound
test
out
rcrb
inc
add
push
sbb
pop
mov
push
or
mov
pop
mov
jbe
xchg
xchg
dec
andl
test
add
cmpsb
das
rol
inc
js
nop
push
lods
and
das
dec
test
or
jmp
dec
mov
lea
daa
daa
dec
jae
imul
inc
and
addr16
orb
inc
inc
jns
dec
adcb
mov
push
push
sbb
lcall
push
push
dec
push
pop
sub
adc
inc
out
test
sub
xchg
orl
dec
bound
inc
or
scas
test
push
mov
or
dec
xchg
int
cmpsb
inc
ljmp
sub
dec
adc
mov
bound
xchg
jae
pop
mov
pop
adc
ja
push
insl
inc
movsb
sbb
push
insl
or
push
or
fimull
rolb
push
add
add
lods
mov
push
push
or
ret
addr16
inc
or
mov
das
push
jb
cmp
xlat
push
mov
mov
push
and
jg
mov
pop
daa
test
pop
stos
push
push
cmpsl
mov
out
lds
mov
jg
xchg
ss
into
pop
popl
mov
pop
xchg
rolb
push
sub
flds
pop
sub
insl
add
xor
inc
xor
ja
push
ret
inc
bound
pop
xor
adc
jae
dec
lea
lock
ja
sbb
mov
or
push
dec
scas
mov
adc
add
inc
dec
or
stos
pusha
mov
add
sarb
jg
pop
jb
add
loopne
mov
iret
aas
jmp
pushf
add
stos
mov
adc
cmp
cmpsl
push
aad
arpl
test
inc
shr
sbb
inc
imul
cmpsl
sbb
push
mov
cmpsb
mov
cmpsb
add
push
mov
outsl
mov
mov
out
sbb
cmpsb
iret
mov
push
inc
iret
pop
les
test
sbb
sbb
xlat
fildll
inc
out
jg
add
xor
rorb
adc
xor
cmp
repz
shlb
pusha
dec
sub
xor
push
les
outsl
add
sub
outsl
adc
and
sub
jns
push
ds
push
and
decl
mov
add
sub
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
decl
dec
mov
mov
sub
mov
sbb
dec
jno
repz
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
incl
mov
xor
filds
or
shrl
cmp
ficoms
push
xlat
enter
call
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
mov
mov
jl
das
adc
stos
sbb
mov
inc
inc
fdivl
jno
add
aad
mov
mov
incl
movsl
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
insl
pop
cltd
cli
decl
xchg
insb
fs
add
hlt
push
imul
fdivs
jmp
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
mov
mov
aam
movsl
fisttps
xchg
fadd
shll
jmp
incl
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
push
stos
inc
add
adc
or
and
test
or
mov
popa
into
push
stc
fdivrp
lcall
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
jmp
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
pmuludq
push
shlb
add
inc
push
imul
xorb
sbb
push
imul
lcall
sbb
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
pushl
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
and
pushl
fmuls
scas
testb
pusha
jp
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
pushl
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
insl
add
push
or
addr16
jb
push
mov
mov
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
dec
inc
out
add
fcomip
mov
mov
cmp
roll
pop
fadds
je
ja
push
ljmp
imulb
xchg
jg
add
jbe
push
jns
dec
dec
ljmp
popf
mov
ja
push
inc
insl
inc
pop
add
jns
inc
andb
lret
push
xchg
pop
xchg
dec
push
fcmovu
xlat
rorb
sbb
jns
jp
or
aam
fwait
inc
insl
bound
aas
testb
ret
jnp
js
pop
dec
mov
mov
dec
and
and
aas
pop
inc
insl
ljmp
inc
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
add
or
xor
bound
scas
cmp
inc
jbe
pop
and
inc
add
cmpsb
fs
mov
push
inc
rolb
add
or
aam
sahf
mov
cltd
push
or
or
aam
outsb
imul
pop
test
ss
sub
mov
cmc
insb
jmp
inc
ss
mov
adc
js
rcll
add
sub
add
pop
dec
pusha
and
xor
mov
aaa
mov
inc
push
rol
add
ficoml
jae
inc
ljmp
adcb
aas
or
add
inc
test
sbb
inc
pop
mov
xchg
inc
inc
add
push
cwtl
fstl
ds
scas
add
mov
iret
int
inc
inc
add
lahf
or
push
sbb
mov
dec
insb
push
in
xchg
pop
insl
dec
add
jmp
push
pop
xor
xor
insl
fwait
cmp
add
jns
mov
into
pop
imul
mov
jns
pop
inc
cmp
or
idivl
aaa
popa
std
or
add
movsl
add
call
outsl
inc
add
adc
dec
xor
mov
jo
sbb
or
mov
or
add
add
daa
and
mov
and
and
dec
popa
jo
push
addb
push
mov
add
outsl
inc
bound
es
jno
push
mov
xchg
pop
cmpsb
push
adc
xchg
add
sub
scas
add
cmp
jecxz
add
adc
push
adc
push
cmp
mov
or
xchg
inc
lea
add
das
xchg
stos
push
push
inc
sub
pushf
push
clc
lret
in
add
adc
xor
jl
xlat
inc
push
bound
shll
and
insl
pop
pop
pop
jg
ja
ret
xor
sub
xor
adc
cmpb
sub
add
jmp
mov
add
xchg
mov
push
pop
loopne
cmp
push
pavgb
and
dec
stos
dec
cmp
fisttps
xchg
in
push
aas
pop
mov
pop
cmp
mov
xchg
push
sub
cmp
or
les
push
loop
aaa
adc
push
push
cwtl
loop
and
mov
call
test
test
ja
inc
push
adc
sub
add
loopne
mov
push
cmp
fiaddl
sbbb
ficoms
enter
adc
test
in
sbb
dec
pop
nop
ja
push
out
stos
inc
test
or
pop
mov
int
push
dec
add
mov
mov
add
lock
test
cmp
fists
mov
or
cmpsb
dec
shrd
sub
in
sub
pop
lea
in
bswap
mov
into
jmp
jmp
jmp
repnz
in
push
pusha
imul
aas
lret
cli
push
cld
add
imul
in
push
inc
es
add
dec
fimuls
and
add
sbb
insb
daa
test
cmp
adc
adc
add
jbe
cltd
in
verr
pop
mov
add
sbb
add
mov
xor
xor
push
test
mov
mov
cs
test
push
loop
adc
push
add
test
pop
add
cs
and
add
adc
lods
add
jb,pn
fs
mulb
inc
inc
dec
lret
das
and
cs
mov
cmp
dec
or
shlb
fstpl
xlat
out
add
ret
sbb
jb
and
repz
test
push
dec
sbbb
add
ja
ds
adcl
sub
inc
mov
dec
sbb
xchg
mov
rorb
adc
jbe
push
sbb
push
icebp
daa
cltd
jnp
jne
mov
orb
xor
dec
adc
pop
mov
sbb
add
mov
scas
shlb
push
xchg
jmp
outsl
subb
dec
fucomi
gs
add
jns
fistpll
or
rolb
ret
aam
inc
orl
call
inc
dec
pop
ljmp
int3
loope
add
mov
sub
mov
mov
mov
sub
or
shl
sub
mov
sbb
add
or
xor
or
data16
cmpps
addr16
and
and
push
mov
in
fstpt
movzbl
or
rcll
subb
les
add
fcmove
aam
sbb
test
cs
or
sub
add
sub
push
jp
pop
jecxz
cmp
cmp
sub
in
or
fiaddl
sub
push
ret
mov
and
mov
mov
and
jmp
mov
push
pop
xor
pop
ret
push
outsb
sbb
jb
sub
sub
out
clc
pushf
and
aad
or
aam
es
jne
push
inc
imul
add
push
cltd
aam
adc
inc
push
pop
lods
adc
fwait
arpl
imul
mov
add
dec
and
movl
dec
dec
cmp
insb
push
inc
adc
negb
hlt
push
mov
rcl
push
dec
mov
push
lea
push
movsl
test
or
add
sub
dec
mov
imul
or
enter
and
push
push
fldt
repz
testb
dec
in
push
leave
push
xor
adc
jmp
cltd
cmp
or
pop
add
mov
dec
or
push
adc
add
mov
mov
jmp
arpl
or
sahf
sbb
mov
jp
dec
pop
push
ret
movsl
jecxz
nop
rorb
xor
mov
sbb
pop
cltd
test
inc
jbe
sahf
lea
test
and
mov
xchg
xchg
out
loopne
pop
testb
inc
aas
sub
es
push
aam
in
jecxz
call
add
movb
dec
adc
insl
mov
add
push
mov
aam
lea
or
popf
outsb
out
or
lds
sbb
popa
pop
adcl
dec
push
in
rol
push
andb
add
sub
mov
adc
rcll
jnp
add
and
or
mov
loop
insl
mov
xlat
hlt
sahf
ret
or
mov
jne
inc
repnz
mulb
cli
sbb
add
int
adc
jne
jge
in
push
fwait
and
aas
jb
fnstenv
adc
xchg
popf
pop
mov
and
or
xchg
pusha
inc
incl
les
push
sbb
dec
call
push
push
ror
ret
imul
push
enter
push
mov
movsb
jno
sbb
sub
setnp
cmp
nop
sub
add
xorb
add
mov
sbb
int
push
lea
leave
mov
push
sbb
jp
dec
insl
adc
push
lea
xor
lds
mov
pusha
cmc
xlat
pop
jp
push
or
inc
loopne
add
pop
neg
xchg
and
push
gs
add
xchg
sbb
test
ja
inc
push
jle
mov
rolb
ja
xchg
stc
call
jnp
adc
in
ret
andl
cmpsb
jl
subl
imul
pop
call
dec
rcr
and
push
call
pop
add
fldt
dec
push
pop
xchg
and
scas
add
scas
popl
addb
sbb
aam
xchg
rcll
adc
leave
xlat
sub
xchg
loope
call
mov
enter
test
je
mov
push
ds
pop
cmp
std
or
xchg
sub
sti
push
jne
xchg
xchg
push
sub
lea
mov
mov
test
adc
cld
nop
pusha
jl
sarl
out
hlt
jmp
inc
adc
xchg
faddl
push
insb
sarb
enter
loope
call
cmp
orb
sub
xchg
addl
bound
out
popf
mov
lods
or
ja
inc
shl
pop
mov
xchg
xchg
lahf
sti
scas
xchg
sbb
mov
pop
cld
dec
call
in
dec
push
inc
mov
pop
dec
jmp
loopne
test
sub
lods
cmp
pcmpgtb
cs
pop
push
add
mov
jae
shrl
or
test
or
dec
cmpsl
push
add
ficoml
jp
cmpsb
cmpsb
rolb
xor
and
repz
sbb
mulps
dec
or
ja
mov
ret
sub
or
sti
jno
or
and
inc
movzbl
leave
cmpsl
gs
dec
test
cmpsl
xor
popa
push
push
adc
pusha
xchg
sbb
cmpsw
push
sub
push
imul
lds
and
push
pop
lahf
insb
sbb
stos
mov
movsl
gs
xchg
cltd
es
push
pop
fisubl
bound
pop
outsl
inc
orl
hlt
push
mov
loope
sub
xchg
cld
push
outsl
imul
adc
pop
add
jo
jo
test
mov
push
add
sbb
js
dec
mov
cmc
xor
jp
push
cmpsl
imul
cmp
jge
movl
loope
add
aaa
sbb
sbb
jmp
loop
fmuls
in
imul
into
out
movsl
insl
push
push
push
dec
fsub
repz
sbb
sbb
inc
pop
dec
push
fcmovb
pop
pusha
push
int3
call
xchg
and
and
cmp
cs
sub
pop
sub
jnp
xchg
mov
lods
repz
bound
andb
xchg
pusha
or
and
out
xchg
andb
fcompl
jb
fwait
jne
mov
xor
test
mov
testl
xchg
xchg
dec
xchg
test
in
mov
lea
adc
pop
sub
add
adcb
cltd
es
pop
mov
adc
in
mov
mov
add
sub
daa
shlb
fildl
or
cmpsb
imul
fiadds
out
outsl
subl
sbb
call
cmp
hlt
fdivrp
xor
cmp
fdivs
pop
loop
lock
cmp
es
dec
rcrl
das
jb
stos
pop
mov
push
push
repnz
mov
ds
insb
int3
xchg
aas
xor
lcall
out
imull
cmp
mov
outsb
adcl
add
mov
in
rorb
adc
lcall
pop
adc
orl
sarb
add
rep
shll
mov
std
jb
movsb
push
inc
inc
out
mov
into
addr16
add
mov
ss
rcll
fisubs
nop
bound
adc
inc
in
rcrb
adc
add
mov
ja
add
and
push
xlat
pop
cmpsl
fisubs
sub
push
pop
sbbl
aad
packuswb
inc
shlb
mov
push
ret
push
push
inc
mov
push
pusha
cmp
push
jb
adc
dec
je
ljmp
pop
ljmp
ret
push
stos
je
popa
pop
sbb
mov
add
sbb
nopl
popa
je
mov
sub
sahf
pop
in
stos
inc
fistpl
or
push
jno
pop
cmc
adcl
pop
xchg
ret
jge
test
adc
push
iret
movsl
or
in
lea
sbb
and
into
cmpsb
mov
fiaddl
mov
divb
leave
push
imul
loopne
pop
cmpsl
cmp
adc
and
jl
aas
js
mov
cmpsb
cmpsl
xor
je
ficoms
or
mov
push
dec
add
push
or
mov
data16
scas
dec
adc
mov
mov
pop
sbb
sbb
adc
cmp
lock
jle
sbb
adc
cmc
jbe
pop
dec
pushl
push
pop
add
andl
push
mov
in
push
add
outsl
imul
pop
adc
cmp
inc
scas
adc
ficomps
and
xor
loopne
or
cli
call
jne
pop
or
int3
in
sub
adc
mov
mov
push
ds
pop
lds
or
sbb
dec
test
push
insb
cmp
loope
rolb
mov
es
xchg
sbb
or
push
push
fsub
adc
or
mov
cmp
mov
ja
mov
inc
mov
push
mov
mov
pop
and
sbb
mov
je
in
in
in
cmp
mov
fwait
mov
xor
mov
lcall
push
sub
mov
cmp
mov
mov
imul
popa
mov
in
mov
in
aas
les
fists
scas
aam
sbb
sbb
jne
mov
sbb
xor
cmp
les
std
fidivrs
into
jbe
xor
inc
ds
mov
jl
dec
mov
and
mov
xor
xchg
cmpsb
adc
jmp
in
xor
faddl
inc
popf
sbb
push
sub
mov
inc
push
mov
sahf
xchg
sbb
cmp
mov
mov
sbb
lcall
aad
mov
pop
je
push
push
mov
jecxz
repz
pop
mov
push
cs
pop
jg
lea
jb
jae
hlt
sbb
cmp
mov
mov
in
rorb
int3
pop
and
push
sarl
push
rolb
in
add
or
push
jne
jl
idivl
jecxz
mov
lods
adc
pusha
mov
arpl
mov
cwtl
pop
in
imul
lods
daa
ds
inc
xor
sbb
scas
jns
or
xchg
sub
ljmp
ss
ljmp
push
add
add
out
mov
movsb
sahf
enter
jl
roll
mov
lock
jo
add
mov
fsubr
ss
or
mov
inc
and
push
in
inc
xchg
ja
xor
inc
dec
pop
and
je
or
jne
addb
or
je
mov
mov
cmp
adc
cwtl
xchg
and
mov
je
or
iret
mov
add
es
fimull
sbb
xor
bound
jmp
mov
fs
push
test
loopne
mov
adc
movsb
inc
adc
jle
sbb
mov
push
cld
lcall
iret
xlat
cli
es
mov
pop
cltd
insb
cld
adc
mov
pop
ja
enter
lods
push
mov
xor
mov
lock
or
rorb
dec
mov
jbe
xchg
inc
pop
inc
pop
jne
xor
pop
fnop
add
xchg
xchg
fiadds
xor
sarb
sbb
inc
test
or
jg
jne
push
loopne
lods
sbb
push
mov
mov
notl
push
inc
rcrb
fildl
add
out
adc
mov
dec
test
roll
jbe
mov
stc
or
or
shr
pushl
or
jecxz
mov
jnp
mov
cmp
std
std
outsl
inc
in
scas
push
xor
jo
inc
cmp
or
inc
rcr
cmp
mov
mov
sub
jns
jmp
mov
dec
xor
shll
testb
adc
pop
dec
inc
adc
adc
pop
in
lret
lret
lock
sub
stc
jno
movsb
test
dec
adc
std
jl
add
nop
push
sbb
cmc
xor
cmp
arpl
mov
lods
out
and
cmp
xlat
adc
jns
js
dec
add
mov
mov
push
pop
movsb
enter
loopne
push
mov
mov
cmp
mov
mov
jmp
cmp
lods
arpl
test
mov
add
orb
jmp
insl
test
fcmovnb
push
xor
mov
adc
or
rcrb
push
fiadds
aam
roll
mov
push
dec
jae
xchg
nop
stos
daa
fdivr
add
pop
xchg
adc
cmp
scas
pop
cmp
push
or
popf
mov
es
orl
inc
jecxz
fwait
xor
pushf
enter
call
pushf
cmpsl
pop
ds
sub
sub
inc
jbe
pop
dec
add
lea
dec
dec
or
dec
sub
inc
adc
push
imul
push
or
enter
fs
fsubs
jne
xor
push
in
std
jmp
and
xor
pop
call
inc
jmp
in
in
andb
or
jle
or
xor
mov
push
mov
js
int3
rcrb
sarb
add
dec
jl
or
cmp
adc
ret
mov
or
dec
lret
sub
push
cmpsl
inc
lods
loopne
mov
or
rorb
test
dec
adc
xor
mov
roll
push
mov
xor
mov
sbb
cmp
jl
pop
lods
sub
sbb
jmp
or
lcall
or
popa
andb
or
or
test
dec
and
pop
or
xor
cmp
sub
push
aaa
mov
push
mov
xchg
and
clc
pop
addb
or
cmp
pop
out
addl
movsl
outsb
push
xchg
ljmp
or
shll
lds
iret
mov
cmp
ss
mov
nop
add
call
nop
scas
or
xor
in
mov
inc
mov
mov
mov
push
push
mov
lea
push
fs
adc
xchg
stos
push
inc
stos
std
mov
je
cmp
jbe
mov
xchg
jne
adc
subb
mov
push
and
std
pop
orl
jnp
imul
push
in
xor
push
mov
xchg
clc
push
mov
lea
clc
test
inc
mov
jae
add
add
push
outsb
es
inc
jmp
xor
imul
pop
xor
fwait
add
popa
rol
xchg
test
push
scas
jb
clc
mov
arpl
ret
rorl
xchg
mov
inc
xor
xor
test
paddb
inc
dec
jnp
jbe
fwait
jmp
push
mov
cmp
mov
dec
pop
push
cld
sbb
push
addb
in
mov
into
jno
sbb
or
addl
rclb
add
and
stos
stos
loopne
sti
push
jmp
je
mull
adc
lock
jle
ror
push
addb
cmp
inc
orl
cmc
mov
sub
pop
push
inc
icebp
lds
lea
mov
lock
xorb
stos
inc
mov
jne
data16
sti
adc
push
mov
sahf
push
push
cmpsb
aam
in
fcoml
mov
pushw
sar
fsubrl
call
xor
fsubrs
push
push
and
fadds
push
add
pop
scas
mov
je
jae
js
push
push
orb
imul
shll
push
sete
repnz
sub
cmp
cmp
sbb
mov
xchg
mov
imul
mulb
mov
jmp
add
lock
pop
and
jb
sbb
mov
sub
sub
das
mov
mov
lock
dec
push
hlt
ret
mov
mov
jns
mov
ss
clc
and
cmp
mov
sbb
push
mov
add
je
outsb
imul
adc
rcrl
and
inc
roll
add
imul
outsl
loopne
jno
or
push
mov
sbbb
mov
rdmsr
call
je
xor
or
pop
call
movsb
lea
mov
sbb
and
and
imul
outsb
jne
addr16
sbb
pop
sub
cmp
push
int3
jae
in
sbb
jne
into
cmp
sub
mov
jmp
ss
cmp
mov
es
pop
mov
rol
leave
loopne
push
out
je
int3
jecxz
decb
or
jns
outsl
orl
pop
icebp
aaa
jmp
nop
xor
push
sahf
jae
cmp
lret
mov
sarl
movb
movsl
cld
adc
mov
je
subl
inc
jmp
mov
setb
push
fildll
adc
xchg
cmp
lcall
push
fs
call
aad
inc
lcall
dec
jl
js
cmpsb
mov
negb
add
divl
xor
fxtract
jg
rcrb
insb
pop
xorb
pop
xlat
jmp
outsb
mov
push
or
aam
pusha
movl
push
loop
and
adc
add
addl
fdivrp
xlat
jnp
jne
add
push
call
in
cmp
in
movsb
jmp
js
sbb
lret
dec
je
and
insb
sub
mov
sbbl
addr16
cmp
jbe
lock
icebp
mov
or
hlt
ds
or
bound
jb
clc
je
push
stc
sub
rcrb
out
xor
or
push
sbb
add
arpl
jo
or
mov
pop
cwtl
or
popf
pushf
or
cmp
push
daa
cld
test
test
stos
push
inc
rcrb
lock
inc
mov
push
inc
mov
aad
andl
add
lock
push
dec
lea
pop
je
or
call
orb
xor
outsb
xor
mov
and
push
xchg
icebp
xchg
fsubs
nop
push
decl
or
and
pop
fadds
dec
jne
movzbl
add
je
dec
adc
aam
nop
mov
mov
adc
pop
orb
incl
nop
sbb
xchg
cltd
les
test
jmp
std
mov
jge
jmp
and
adc
push
push
push
fildl
outsb
ret
adc
cmp
inc
cwtl
cmp
fcmovu
adc
inc
xor
inc
pop
rorb
sub
or
mov
ss
push
mov
out
add
imul
mov
loopne
sub
inc
test
sub
and
lret
push
js
daa
adc
or
call
push
xor
pop
das
dec
adcb
je
rorb
dec
mov
inc
fcoml
stos
inc
je
outsb
or
clc
cmp
mov
mov
push
fwait
sub
aaa
pop
aas
dec
sti
cmpsb
mov
cmp
aas
outsb
or
ds
adc
and
je
lods
je
cmp
test
fiadds
enter
fcomip
mov
fdivl
adc
pop
inc
nop
adc
and
adc
jg
push
ljmp
out
xor
notb
xchg
push
scas
and
mov
push
add
pop
mov
jb
jmp
mov
cmp
int3
es
xlat
cli
pop
in
mov
jne
sarb
push
hlt
or
js
sbb
mov
xor
call
inc
mov
and
int
mov
mov
xchg
sbb
inc
pop
push
mov
sbb
les
xor
pop
or
mov
add
lcall
xchg
sbb
and
popl
mov
adc
xchg
add
adc
add
or
pushf
mov
sub
je
sbb
push
push
movsl
loope
xchg
cmpsb
pop
lret
std
sbb
loope
sbb
add
cmp
sti
or
jmp
inc
adc
in
dec
pop
or
push
loopne
je
test
xor
mov
arpl
pop
inc
cmp
mov
sbb
push
or
and
add
dec
inc
inc
mov
push
push
mov
pop
cmp
les
int
add
rolb
and
adc
rorb
pushf
sbb
sub
dec
cmp
pop
popa
push
xchg
add
nop
dec
or
adc
inc
ljmp
test
or
jp
jle
mov
cmc
xor
daa
callw
pop
call
xorl
jmp
cmp
sti
push
jmp
inc
adc
sti
out
iret
data16
call
and
pop
dec
adc
sub
je
pop
xchg
cmpsl
outsl
add
mov
jo
out
gs
pop
cmp
or
test
add
fdiv
fstpl
call
enter
scas
nop
repz
pop
jmp
js
add
jge
int
cmp
jmp
cmp
out
adc
push
xchg
sbb
xchg
rorb
adc
scas
jmp
xor
mov
je
push
into
cmp
sbbb
sub
ficompl
mov
add
sub
inc
jmp
xchg
jne
inc
xchg
sbb
push
pop
inc
ljmp
push
adc
pop
or
repnz
xor
adc
jmp
enter
or
dec
mov
push
jo
adc
add
mov
mov
inc
fiadds
mov
dec
incb
cmp
es
cmpsb
add
fisttpll
and
ljmp
mov
jle
outsl
shll
xchg
mov
popa
sub
es
orl
or
imul
dec
push
jo
incb
pop
xor
dec
adc
xchg
or
jmp
fptan
js
sbb
js
sbb
int3
test
and
imul
cs
xor
add
adc
dec
push
sbb
and
test
mov
adc
push
push
adc
push
jns
push
outsl
pop
aaa
sub
or
repz
popa
pop
mov
add
int3
inc
int3
and
mov
scas
add
mov
daa
add
add
xchg
pop
shlb
add
or
adc
rorb
push
daa
fwait
outsb
pop
pop
pop
aaa
and
les
pop
and
rcll
cs
xor
or
add
add
sbb
add
dec
sub
add
pop
dec
add
fs
lods
and
loope
jmp
loopne
shlb
or
push
inc
dec
scas
inc
fadds
inc
cs
out
jnp
lea
push
in
nop
je
mov
ret
inc
lea
mov
cmp
fldl
sub
sbb
jecxz
iret
adc
add
ret
add
inc
sbb
mov
sahf
xlat
jmp
jecxz
push
mov
adc
mov
adc
lds
inc
inc
lock
daa
pop
nop
or
out
add
and
dec
or
rolb
ret
rolb
fldl
xor
mov
cmp
repz
ror
jecxz
sbb
inc
jns
aaa
ret
inc
cld
or
push
adc
add
ret
inc
xchg
xor
int3
add
je
mov
push
pushf
add
xchg
mov
xor
notl
fnsave
sbb
sbb
imul
idivl
xor
push
pop
jmp
outsb
or
xor
xor
xor
sub
les
cmc
inc
or
lahf
ret
out
inc
xor
push
pop
add
and
add
add
add
aas
or
push
xor
jo
cmp
dec
sahf
divl
je
xchg
add
mov
add
cmp
push
jb
push
gs
pop
xchg
out
addl
sub
or
or
and
add
or
or
or
cs
in
add
or
or
pop
and
or
xor
push
push
push
lret
add
xor
adc
pop
adc
inc
adc
cmp
enter
int
push
xor
pop
enter
adc
mov
adc
adc
adc
push
adc
xor
inc
pop
pop
ja
cs
and
sbb
xchg
aaa
add
addr16
sahf
sbb
fcompl
cmp
mov
push
sbb
cmpsb
repnz
push
sbb
mov
xor
addr16
sahf
sbb
cmpb
inc
negb
pop
sbb
jne
add
add
sub
lock
jg
push
mov
lcall
pop
sarb
pop
jmp
fwait
xor
push
in
push
in
imul
sahf
dec
push
jns
rol
adc
in
cmp
repnz
mov
cmp
mov
mov
aas
sub
call
xchg
push
in
adc
xchg
sub
rorl
pusha
in
sahf
ljmp
in
jmp
push
push
xor
or
in
in
xchg
jb
out
repnz
in
cmp
mov
pop
leave
xor
out
xchg
out
out
sbbl
pop
insl
nop
lock
dec
icebp
rolb
in
icebp
das
jnp
and
enter
repz
push
pop
in
std
hlt
hlt
imul
pop
hlt
xchg
std
cmc
cmc
dec
sahf
xchg
stos
cmp
in
in
negl
addb
gs
clc
clc
clc
or
aas
stc
stc
in
sahf
xchg
and
cli
add
das
nop
addr16
sti
fdivrp
cld
ffreep
inc
outsb
cld
je
cld
push
push
nop
shlb
cmpsb
in
ss
xor
sbb
xchg
mov
xor
push
ret
imull
sarl
shlb
cld
rorl
dec
jle
pop
jmp
or
jecxz
fsubp
push
xor
xchg
xor
ficoml
dec
push
cmpl
cmpsb
loopne
adc
inc
or
out
lea
xchg
scas
call
pop
sti
adc
dec
adc
push
sbb
setb
push
cltd
or
jmp
and
mov
lcall
jns
xor
cltd
and
cli
or
jae
repz
sbb
sbbb
cli
stc
loopne
repnz
stc
imul
stc
div
divl
xchg
xchg
clc
cltd
sub
nop
mov
rclb
sbb
mov
xchg
or
cmp
mov
in
jmp
mov
jb
test
out
test
push
pop
aad
xabort
jmp
mov
lcall
jns
xor
pushf
and
and
aad
imul
xchg
in
aad
fdiv
out
mov
sbbl
jb
imul
ljmp
push
jmp
testl
testl
mov
into
mul
sub
nop
mov
movsb
mov
repnz
and
repnz
inc
repz
setb
sub
or
lcall
div
mov
add
mov
clc
clc
xor
pop
cmp
push
pop
pop
cmc
cli
cli
inc
mov
mov
pop
repnz
cmc
cli
hlt
sub
inc
repz
pop
lock
push
jo
adc
mov
add
sti
push
movsl
jmp
loope
repnz
loop
pop
hlt
shll
or
cmp
hlt
in
add
repz
leave
and
repz
xchg
cmpsb
jb
or
and
repz
inc
xlat
dec
repz
out
inc
or
in
xor
in
xlat
repnz
repnz
cmp
test
cmp
icebp
mov
icebp
das
xchg
pop
jns
sbb
adc
repnz
repnz
dec
xor
mov
icebp
test
cmp
leave
sub
int
jne
stc
mov
dec
icebp
xor
jb
icebp
or
out
lock
mov
cmp
scas
lock
jp
jmp
or
mov
ffreep
push
inc
div
rolb
aaa
inc
cmp
cmp
ret
mov
adc
mov
push
mov
mov
jb
add
jne
stc
mov
dec
icebp
dec
add
movsb
xchg
cmpl
ss
int
gs
imul
and
add
ret
and
dec
push
nop
push
jns
int
imul
out
insb
ds
dec
adcl
ss
sub
push
jecxz
repz
mov
cmpsl
jae
insb
sbb
push
push
sahf
negl
dec
xchg
gs
dec
outsb
fdivrs
out
jns
faddp
fistpl
add
shrl
fdivs
rorl
ret
inc
or
xchg
lods
jle
adc
pusha
rcr
add
cmp
push
add
fwait
les
add
lock
add
shrl
sbb
dec
push
mov
sbb
inc
xchg
pusha
mov
insb
fsts
hlt
sbb
flds
popa
or
lret
test
add
pusha
subb
and
in
fsubl
call
push
push
je
jmp
xor
sub
test
push
shlb
or
xor
divb
cltd
movsl
or
add
mov
sub
adc
cmp
pop
xor
mov
adc
push
rcll
add
hlt
psubsw
jbe
cmp
sub
adc
and
stos
and
loopne
aas
jbe
add
jae
adc
jg
arpl
jns
call
xor
pop
call
pop
inc
test
add
add
das
push
xchg
mov
icebp
xchg
pop
scas
rolb
push
in
js
or
sbb
xor
xor
add
sbb
popa
mov
pop
push
outsb
or
mov
adc
fs
and
inc
dec
pop
test
inc
test
inc
pusha
push
add
inc
jbe
sbb
or
rolb
data16
sbb
inc
and
inc
push
repnz
push
push
sbb
dec
inc
stos
mov
shl
cltd
fisttpl
jl
pop
pop
inc
or
fnstenv
push
in
xchg
push
xor
adc
dec
test
clc
add
push
mov
sbb
mov
mov
xlat
inc
cmp
cmp
adc
ss
les
loop
cmp
iret
sub
mov
lock
jecxz
movsl
and
cli
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
in
call
popf
mov
sub
sti
iret
les
popf
mov
xchg
push
mov
mov
xor
in
push
test
xchg
or
les
or
roll
push
es
add
cmpl
push
push
cltd
mov
fwait
in
xchg
mov
fcomps
out
xor
xor
pop
xchg
push
xchg
dec
test
or
sbb
in
adc
lea
fcomps
pushf
pop
or
rcll
sahf
psubw
mov
jmp
imul
lcall
out
nop
add
inc
mov
sti
pop
fisubs
mov
outsl
mov
imul
js
push
inc
data16
mov
inc
pop
movsl
mov
pushf
dec
enter
es
push
pop
jb
mov
movsb
or
hlt
jae
enter
or
dec
je
or
inc
mov
or
inc
push
jl
test
or
insb
or
ds
andb
fadds
adc
jmp
jmp
ret
jmp
jne
js
add
gs
mov
and
in
sbb
inc
xor
movsl
mov
imul
stc
cmp
fs
cmp
imul
outsl
sub
js
push
lcall
pop
in
inc
cmp
call
ss
push
out
fs
adcb
dec
repz
jle
pop
push
or
cmp
and
lcall
xchg
cs
sub
in
lock
cmp
and
arpl
imul
jp
imull
pushl
cmpsl
loope
add
pop
das
je
shr
mov
pop
aaa
sarb
in
push
or
or
add
es
lret
ljmp
frstor
sbb
nop
adc
adc
es
aas
adc
push
addr16
mov
push
insl
cmp
jl
jmp
xor
add
mov
jmp
ret
dec
mov
shrb
or
aam
test
adcb
push
lods
cmpsl
add
movb
add
jno
sarb
and
adc
mov
dec
pop
aaa
inc
lods
xlat
mov
push
mov
mov
add
push
cmp
stos
sub
inc
xor
icebp
je
dec
cmp
cmc
add
push
lods
loope
push
jmp
or
pop
or
inc
push
mov
jmp
hlt
test
jmp
add
add
fsubrs
jmp
mov
inc
push
push
cmp
inc
fistl
push
xor
xchg
sbb
adc
sbb
push
sahf
and
mov
sbb
fsubl
addr16
jae
imul
out
sbb
mov
pcmpeqb
xor
movsl
sbb
pop
sub
rcll
adc
dec
add
push
imul
push
push
mov
xorb
mov
inc
cld
adc
and
xchg
mov
sub
inc
sbb
and
test
gs
push
lock
repnz
popf
push
push
loopne
inc
xchg
cmp
mov
push
adc
shlb
aas
int3
je
mov
push
pusha
push
mov
stos
lods
js
push
mov
daa
push
jmp
cmpl
ja
sbb
outsl
add
repz
ret
ror
arpl
pop
mov
das
sbb
push
push
into
xor
and
rorb
inc
xorb
add
pop
adc
and
jmp
ret
add
jge
sub
add
cmpsb
sbb
mov
insb
jmp
or
adc
lea
lret
or
or
cmpb
fiadds
cmpb
sub
mov
xchg
jmp
inc
mov
faddl
hlt
push
pop
sbb
dec
shlb
add
mov
mov
jmp
dec
fs
repnz
sar
ret
or
add
dec
inc
pop
std
push
sub
lahf
imul
pop
rorl
les
test
fmuls
pusha
or
sub
or
inc
fcomps
jle
cmp
cmpb
call
add
fisubs
sbb
lea
lock
xchg
add
xor
ds
insb
psubusb
sub
push
or
or
sub
andb
jmp
mov
in
pushf
loopne
loopne
jle
inc
xor
xchg
cmp
aam
add
pop
push
sub
or
jg
jmp
sub
jmp
mov
xor
rcrb
mov
xor
push
jo
mov
movsl
scas
add
adc
push
mov
arpl
int
pusha
adc
jmp
cli
movsb
adc
shr
data16
data16
adc
fndisi(8087
pop
mov
jp
or
pop
cmc
cmp
add
pop
iret
sbb
push
bound
pusha
jl
out
push
cmp
inc
and
xlat
aas
ss
dec
je
sub
mov
or
scas
and
mov
and
push
sarb
adc
add
sbb
push
push
addl
mov
into
movsl
mov
xchg
dec
mov
or
scas
xor
adc
movb
scas
mov
jno
dec
and
dec
call
ss
sbb
mov
inc
ret
es
mov
push
adc
dec
mov
xchg
lods
mov
adc
fs
int3
xchg
addb
imul
sbb
add
loopne
add
imul
test
adc
shll
dec
imul
push
subb
mov
xchg
mov
pop
rolb
ds
mov
add
loopne
mov
xchg
imul
nop
pop
rcl
movsl
add
test
imul
push
arpl
pop
dec
je
inc
scas
pop
jl
pop
dec
fs
outsl
push
loope
je
xor
adc
aad
imul
xor
mov
xchg
add
add
nop
imul
pop
movsl
add
or
mov
rcll
pop
add
loopne
imul
shrb
add
imul
jae
push
or
shrl
imul
repz
scas
test
shl
mov
rorb
cmp
adc
imul
imul
add
inc
sub
push
imul
adc
imul
adc
shrb
shlb
rolb
xchg
add
sbbb
imul
imul
imul
dec
add
sbb
xor
add
adc
cmpsl
xchg
imul
imul
imul
ss
or
outsb
stos
adc
imul
subb
xor
inc
sub
mov
jo
out
imul
inc
out
jb
jno
sbb
sub
add
test
jbe
dec
movsl
imul
xchg
add
push
pop
imul
dec
sub
test
add
js
add
push
pusha
and
add
push
imul
mov
add
nop
add
sub
imul
aam
sbb
loope
popa
cs
xchg
add
into
mov
dec
pop
cmpsb
sbb
mov
add
mov
das
sbb
addb
dec
xchg
add
and
sbb
fisttpl
lds
rclb
mov
mov
aam
add
imul
sub
imul
add
add
imul
adc
and
movsl
add
imul
test
adcb
hlt
xor
insb
or
or
bound
add
ss
int
mov
add
in
push
or
mov
dec
cmp
or
cmp
mov
add
or
and
or
sbb
pop
call
pop
imul
es
mov
imul
andw
sub
mov
add
jbe
inc
movsl
add
add
add
lahf
cmp
jmp
xchg
and
sarb
in
imul
imul
ret
imul
jp
push
pop
xchg
out
dec
push
dec
jecxz
cli
inc
push
sub
je
xchg
add
mov
lods
add
test
imul
movsl
add
sub
adc
mov
imul
shrb
mov
xorl
mov
mov
sub
cltd
inc
inc
inc
lcall
inc
inc
inc
cmp
inc
push
inc
inc
inc
inc
pop
dec
dec
mov
cmp
or
mov
call
adc
push
dec
push
popa
jo
xchg
imul
daa
adc
xchg
jno
addr16
ss
jmp
ja
or
aaa
imul
and
dec
popf
aaa
dec
mov
daa
icebp
mov
repz
adc
in
pop
xchg
mov
inc
pop
mov
pop
fs
or
mov
push
mov
das
cmpsb
test
dec
pop
ret
sub
fildl
inc
push
mov
inc
add
xor
cmp
jbe
cmp
in
lods
ret
mov
addb
into
push
inc
dec
fucomi
xor
inc
popf
test
jp
push
loopne
pusha
xorl
mov
fildl
inc
fptan
jo
int3
add
jl
dec
inc
imul
pop
and
rcrb
pop
push
clc
adc
adc
ja
gs
sbb
loope
inc
xchg
add
xor
xchg
xlat
jae
sub
pop
mov
icebp
inc
les
push
or
and
ficoml
push
xchg
pop
dec
pop
loopne
mov
mov
addb
or
cmp
sub
das
mov
or
push
adc
das
das
and
adc
mov
je
push
adc
cmpl
push
mov
cmp
test
sbb
push
mov
test
adc
loop
push
jae
mov
rcll
cwtl
jnp
inc
dec
xchg
inc
mov
push
scas
push
andb
push
xchg
js
aam
dec
mov
shr
rolb
jl
loopne
or
in
cli
stc
imul
xor
fsubrl
jg
dec
ret
insb
inc
jmp
push
jo
test
mov
jmp
insb
jmp
adc
es
adcb
add
mov
fwait
rcll
subb
add
xchg
loopne
outsl
adc
pushf
scas
outsb
adc
cmpsl
loope
jl
inc
stc
push
clc
adc
xor
adc
xor
mov
lcall
stos
xchg
fbld
dec
or
sub
outsb
adc
adc
push
sbb
call
push
adc
and
jbe
fimuls
call
push
cmpsl
adc
addr16
and
inc
mov
out
sbbb
push
cwtl
inc
negl
adc
and
or
ret
push
inc
xchg
ret
sbb
or
adc
rcl
or
push
adc
jo
rorl
inc
sub
inc
pusha
rcll
adc
out
sub
mov
and
push
mov
or
repz
adc
add
frstor
je
adc
and
sbb
jbe
ja
clc
cs
call
fldl
jmp
pop
xor
call
outsb
jo
mov
mov
sbb
xchg
add
xor
arpl
add
push
fldl
pusha
mov
outsb
add
add
or
add
ffree
xor
or
add
iret
aad
inc
out
arpl
arpl
arpl
sbb
enter
add
nop
arpl
and
mov
pusha
add
mov
arpl
add
scas
mov
xor
arpl
mov
out
push
adcl
add
mov
scas
adc
jne
and
ja
jae
lea
and
add
cmp
mov
call
movsb
add
lret
cmp
je
dec
dec
or
add
and
and
and
and
imul
lds
xorb
or
pusha
and
fstl
or
mov
in
clc
pop
and
add
inc
out
mov
andb
dec
movb
outsb
adc
in
adc
and
and
es
and
test
and
clc
mov
push
and
inc
lea
je
inc
xor
mov
aad
and
add
in
and
mov
add
popa
push
add
cmp
push
cmp
mov
or
xor
leave
std
orl
pop
aam
je
and
and
dec
and
pusha
cmp
or
je
add
dec
and
out
jp
xor
sarl
nop
mov
mov
inc
aaa
adc
xor
pop
inc
xor
adc
xor
inc
pop
pop
or
and
test
stos
push
addb
or
add
add
or
and
insl
bound
popa
into
loope
cwtl
pushf
adc
pop
fidivrl
sahf
in
rorb
jge
lods
jb
fstl
add
inc
out
mov
out
dec
pop
add
lock
adc
adc
adc
loope
add
lret
rcrl
sub
test
xor
mov
sub
push
sub
add
ljmp
iret
mov
mov
dec
js
sbb
adc
pop
cs
xchg
ffree
or
int3
out
mov
enter
call
push
push
adc
fists
push
or
add
add
push
push
mov
mov
rorb
inc
adc
xchg
inc
mov
pop
data16
loopne
add
roll
push
andl
sbb
inc
test
int3
or
stc
cs
loope
lea
nop
mov
in
shl
jge
xchg
insb
mov
add
and
fwait
push
add
pop
add
push
mov
mov
pop
inc
xor
add
aaa
pop
ret
add
or
sub
pop
mov
sbb
push
or
push
int3
mov
mov
adc
popf
inc
add
or
xchg
call
mov
adc
pop
lcall
sbbb
test
jae
aas
pop
inc
sbb
dec
pop
jmp
not
pop
dec
pop
and
inc
mov
insl
movsl
test
add
add
mov
pushf
sub
movl
jecxz
repnz
ljmp
jne
js
aad
rcl
or
inc
je
mov
sbb
or
cmovb
add
dec
loopne
aad
pop
or
data16
jle
or
mov
shll
mov
repnz
pop
pop
inc
add
cmp
push
mov
imul
sub
mov
cwtl
add
push
mov
test
mov
loope
lret
loop
jecxz
add
or
sbb
jns
and
mov
lds
or
pop
jp
ret
or
fs
stos
addr16
loopne
cmpsl
rcll
xor
add
push
in
into
in
mov
adc
jle
push
ljmp
enter
faddl
xor
lcall
sbbb
and
xor
xchg
rol
xchg
push
push
and
push
cmp
roll
sti
dec
push
xor
and
add
sbb
dec
rcl
es
and
and
mov
pop
push
sahf
pushf
clc
add
xor
nop
repnz
inc
pop
nop
imul
xor
lea
shlb
sbb
sbb
aaa
aad
dec
orl
sbb
fstpt
sbb
sbb
loope
pop
or
sbb
xchg
inc
xor
mov
aaa
sbb
mov
loopne
mov
rorb
and
mov
ret
sbb
leave
inc
inc
inc
pusha
mov
mov
sub
lret
pop
or
and
pop
pop
ss
rcl
sub
mov
xchg
daa
fwait
pop
xchg
bound
mov
sub
cmp
in
in
and
dec
shrb
push
jne
jmp
test
int3
in
xorl
jle
sbb
test
dec
orl
or
lds
sub
cmp
test
inc
add
or
daa
outsl
and
insl
jb
adc
mov
dec
test
push
inc
enter
stos
insb
adc
test
testb
dec
call
jecxz
jo
adc
and
lock
mov
mov
mov
shr
dec
sub
jne
cmp
xchg
dec
adc
jecxz
call
jmp
fsts
pop
leave
adc
push
dec
mov
int3
inc
popa
cs
mov
inc
adc
pop
and
ret
icebp
xchg
lds
call
ret
mov
daa
pop
sub
and
mov
adc
pop
rcr
push
orl
pop
mov
loopw
mov
inc
lea
iret
sarl
rcrb
mov
outsl
mov
ss
adc
sbb
loop
cwtl
add
add
cmp
jecxz
mov
loopne
popw
mov
inc
pop
ds
pusha
push
mov
add
push
pop
xor
mov
pop
lock
add
mov
pop
mov
mov
or
int3
add
rolb
add
loope
lea
call
jno
daa
daa
push
cmp
test
mov
push
sbb
dec
push
or
mov
pop
scas
data16
jne
sub
call
pushf
es
xchg
sbb
mov
jae
jne
nop
mov
dec
out
lods
mov
nop
popf
mov
ss
push
adc
sbb
or
pop
popf
push
stos
and
icebp
repnz
outsb
dec
xchg
jno
mov
mov
push
push
push
cmc
movsb
in
scas
movl
cmc
dec
pop
adc
imul
addr16
cmc
and
out
loopne
add
movsb
mov
hlt
and
cmc
inc
or
mov
aam
add
inc
push
pop
fildll
cmc
dec
hlt
push
lcall
sbb
pop
inc
dec
sbb
pop
mov
ficoml
out
roll
jo
push
pop
cmpsl
xor
movsb
pop
lcall
loope
pop
loopne
cmp
xor
dec
jno
mov
push
sbb
aad
pop
aad
push
sub
lret
xchg
and
dec
push
dec
sbb
loop
test
inc
pop
add
loope
pop
rcll
dec
push
pop
xlat
and
mov
dec
pop
movsb
int
lods
mov
or
xorl
ljmp
lds
ret
add
xor
movsb
and
jno
imul
dec
adc
jno
pop
ss
mov
and
pop
jecxz
ret
mov
mov
int
popa
mov
inc
push
mov
pop
jb
mov
pop
fadds
jecxz
inc
pop
pushf
pop
imul
sbb
stos
pop
hlt
dec
sbb
dec
pop
push
cs
imul
test
jecxz
pop
push
sbb
ret
popa
add
pop
mov
test
jnp
xor
jbe
mov
aam
mov
and
adc
jl
push
add
pop
out
lcall
sbb
dec
sbb
or
sbb
lods
mov
pusha
mov
test
pop
inc
aam
popa
xor
cmpsb
lea
jno
inc
pop
xor
pop
xor
pop
fcoml
loope
ffreep
mov
adc
dec
xor
repnz
jg
push
dec
sbb
add
rclb
xchg
insb
push
popf
sbb
imul
or
ja
push
sbb
xor
mov
sub
int3
sub
lds
inc
and
shl
test
push
pop
xor
mov
out
iret
lds
xlat
pop
ret
into
add
or
ficomps
subl
adc
pop
in
mov
mov
mov
inc
sbb
les
push
int
xor
dec
lret
cmp
pop
or
test
cwtl
mov
mov
shrb
stc
xor
cmp
xchg
inc
insb
add
sbb
insl
pop
add
aaa
call
or
scas
addl
stc
or
add
add
mov
stc
adc
rol
cmp
or
pop
or
js
mov
rcrb
cmp
sbb
sub
jbe
or
push
sbb
mov
clc
cmp
pop
add
hlt
data16
cwtl
add
add
cmp
lods
add
mov
je
xchg
gs
add
loopne
inc
negb
or
xchg
add
fiaddl
pop
adc
xor
in
xchg
fucomi
mov
popa
add
jae
lock
ds
outsl
leave
add
and
mov
mov
push
mov
push
and
fcompl
push
jns
test
add
addb
test
ret
mov
and
cmp
call
js
xchg
pop
dec
xor
enter
lahf
nop
dec
cs
test
nop
add
nop
add
hlt
push
add
mov
clc
dec
xor
jmp
dec
inc
dec
aas
insb
lock
rclb
add
and
aad
cmp
pop
inc
mov
jmp
pop
cmpsl
pusha
cmp
and
test
in
enter
jl
out
jmp
adc
inc
add
js
pop
sbb
sbb
push
sbb
rcrb
repz
je
inc
lret
sti
mov
cmc
jns
test
js
fs
daa
imul
jle
push
movsb
mov
mov
inc
dec
icebp
bound
bound
icebp
pop
mov
add
or
cmp
xor
mov
fistl
cmp
neg
das
or
out
and
cld
dec
jae
movsl
xor
insb
dec
pop
or
lret
iret
push
in
add
xlat
adc
iret
push
and
sbbb
jle
enter
iret
push
xor
add
int3
iret
mov
iret
enter
mov
iret
sbb
push
push
iret
insb
inc
dec
test
into
push
xor
iret
sbb
iret
or
int
fs
jl
lcall
iret
add
and
and
sub
push
cltd
push
and
inc
stos
cmp
mov
push
xor
mov
imul
pop
int3
sub
in
mov
mov
or
sbb
add
inc
push
xor
inc
in
imul
sti
sbb
sbb
add
add
push
push
sbb
push
mov
mov
cmpsb
shrb
les
push
fcoml
xor
mov
pop
sbb
shrb
ret
push
and
inc
inc
notb
dec
xchg
test
insb
add
and
adc
push
sbb
inc
bound
call
mov
in
outsl
nop
lcall
aaa
adc
pusha
dec
sub
push
add
pop
or
cwtl
or
push
pop
adc
daa
add
mov
sbb
xor
aad
je
fnstenv
loope
sbb
int3
xchg
or
xchg
stos
sub
inc
or
inc
sbb
sbb
cmp
cmpsl
aaa
sbb
fstl
inc
addr16
aam
mov
mov
or
aas
xor
pandn
repnz
das
shlb
call
pop
push
adc
and
adc
call
jb
xchg
add
call
lock
call
cmp
loopne
call
add
int
inc
call
mov
dec
call
push
call
in
call
pusha
call
das
pop
mov
insb
call
je
inc
out
xchg
gs
pop
jl
push
xchg
jbe
add
sbb
cmp
mov
mov
cs
dec
in
sbb
push
add
sub
in
fsts
adc
push
les
pusha
in
mov
xchg
mov
adc
xchg
dec
in
jae
push
push
cs
xchg
dec
in
cmp
xor
in
mov
cld
push
cs
dec
adc
add
pop
lods
push
or
leave
gs
loope
lret
adc
jb
pop
sub
sbb
and
xchg
lret
and
sub
mov
jle
sub
push
test
outsb
nop
lret
dec
cmp
xor
je
cs
adc
xchg
dec
in
or
dec
add
jo
sub
add
or
aam
insb
cmp
outsb
and
or
mov
cwtl
sahf
sar
cmp
pushfw
and
mov
je
data16
dec
sbb
and
adc
pushf
xor
daa
inc
sbb
mov
push
and
int
dec
mov
mov
mov
call
shlb
int
les
dec
xor
daa
add
dec
mov
fcomps
mov
fldl
outsb
add
push
or
and
jo
addr16
mov
jnp
inc
lock
je
jmp
lcall
pop
mov
sbb
mov
dec
push
fs
add
dec
or
push
cmp
xchg
aam
add
pop
pop
pop
rolb
inc
popf
cmc
add
shlb
jae
or
jmp
es
pop
dec
adc
lds
dec
inc
sub
lds
lds
rolb
es
arpl
jno
daa
cmp
les
daa
cli
pop
pop
xchg
in
daa
sbb
call
xchg
in
shrb
daa
dec
xor
rcrb
mov
cs
stos
mov
in
xchg
and
xchg
das
das
dec
mov
mov
dec
movsb
inc
shlb
nop
or
call
push
xor
pop
adc
adc
dec
mov
push
mov
sbb
jecxz
or
cltd
mov
mov
dec
xchg
add
sbb
push
mov
or
add
cltd
rolb
sbb
inc
mov
aaa
cltd
pop
mov
cltd
push
mov
stc
mov
enter
mov
cmpsl
pop
jmp
push
or
xor
cltd
jno
or
cltd
nop
int3
fs
push
push
cltd
dec
lcall
inc
xchg
mov
fs
out
jmp
mov
add
rcrl
lods
pop
add
fbld
fs
in
bound
or
sbb
and
push
in
outsb
push
mov
cmp
xor
push
mov
push
adcl
sub
jb
mov
cmp
push
adc
in
push
mov
sub
pop
lds
adc
test
bound
adc
movsb
stos
mov
push
pop
inc
add
outsl
add
dec
dec
and
and
imul
dec
adc
jecxz
xor
rorb
jecxz
cwtl
add
add
jecxz
add
sub
xorb
lahf
add
dec
je
jecxz,pn
adc
fstl
ljmp
xorb
loop
and
mov
push
ret
add
sbb
xor
add
cmpsl
mov
js
lods
cmp
cltd
std
or
adc
mov
add
sub
xor
rcrb
mov
xor
xor
adc
fisttpll
adc
jp
add
jecxz
add
pushf
call
dec
xchg
jecxz
push
dec
addr16
pop
rolb
cmp
lcall
add
adc
or
jecxz
xchg
sbb
and
in
pop
jge
fldl
and
test
add
adc
xchg
sub
bound
add
add
adc
jo
shlb
pop
jecxz
insl
test
adc
sti
call
jae
jecxz
adc
je
fsub
jno
and
jecxz
mov
xor
loopne
mov
lea
jecxz
add
add
pop
pop
dec
js
jmp
push
mov
xchg
mov
out
push
adc
ret
add
out
ja
mov
test
ss
shl
or
add
pop
mov
addb
push
out
fcoms
rcrb
inc
mov
out
test
push
mov
sbb
and
adc
sbb
xor
push
ss
pop
pusha
and
fsts
lds
loopne
fldl
mov
mov
xchg
push
mov
mov
mov
or
inc
mulb
push
pop
dec
repz
jo
sub
or
test
mov
pop
or
mov
rcrb
or
pusha
adc
gs
xor
inc
pop
lods
mov
mov
bound
mov
lea
sub
adc
sbb
mov
js
push
bound
mov
out
fnstcw
xchg
fs
and
insb
sub
lcall
xlat
add
and
dec
xchg
xlat
nop
cmpsb
sub
cwtl
adc
test
popa
pop
insl
mov
pop
inc
arpl
cmp
leave
xchg
xlat
fadds
xor
mov
loope
xchg
insb
xlat
imul
xor
lcall
xlat
xor
test
push
inc
es
aam
shll
mov
popa
or
jmp
sub
fnstenv
ret
cld
add
loopne
enter
or
negb
dec
or
cld
jb
xor
or
shr
push
rcr
mov
dec
push
and
adc
pop
fdivl
lret
rcl
fildl
loope
dec
inc
and
out
mov
mov
mov
fbstp
addl
add
call
pop
icebp
and
rcrb
fisttpll
lods
test
pop
xorb
pop
sub
jbe
xchg
adc
mov
into
dec
inc
and
jle
cld
rolb
loopne
mov
cmp
cwtl
incb
xchg
adc
nop
fwait
pop
push
dec
inc
xchg
pop
xchg
addb
cmpsb
test
mov
push
push
shl
dec
xor
sub
call
test
pop
mov
enter
add
and
mov
push
push
outsb
and
push
addb
call
xor
push
stc
jmp
or
cmp
dec
pop
je
loopne
or
nop
repz
xor
dec
cmp
push
sbb
faddl
out
add
mov
pop
dec
push
add
add
sbb
dec
aaa
sbbl
sarl
add
push
inc
adc
test
repnz
nop
out
nop
fistl
shll
xchg
adcl
pop
shll
sub
sub
sbb
sbb
and
mov
call
mov
add
adc
and
sub
jo
pop
mov
lds
inc
iret
pop
addr16
cli
push
pop
adc
test
in
push
xchg
sub
adc
mov
inc
imulb
call
ror
popa
lret
adc
es
jp
mov
xchg
cli
push
push
cld
sahf
jg
push
mov
rolb
and
test
jge
jae
xchg
mov
push
add
pop
pop
pop
imul
and
xor
pop
mov
mov
xor
mov
into
cmp
and
or
push
ja
lods
mov
lock
cltd
sub
or
inc
push
xor
gs
and
jae
jae
sbb
adc
push
pop
jae
and
pusha
sub
or
or
jae
and
mov
add
pop
fcoml
dec
shlb
out
or
adc
stos
sahf
sbb
and
adc
and
sbb
jmp
hlt
jae
sbb
jg
dec
andl
shrb
sub
jbe
add
or
arpl
popa
push
popf
int
mov
pop
push
sbb
call
xor
aas
cs
cmp
out
pop
pop
fucom
sbb
adc
mov
stos
jg
loope
xchg
or
and
push
movsl
hlt
cld
jecxz
add
jb
nop
out
mov
cmp
jne
fistpl
adcb
adc
rclb
or
ljmp
or
dec
inc
push
push
xchg
push
imul
xor
movsb
mov
sti
fwait
repz
adc
cmpsb
dec
inc
xchg
push
jo
repnz
adc
stos
xlat
fwait
push
jnp
and
testl
dec
out
jb
adc
bound
jge
mov
enter
jb
insl
ss
dec
jae
fidivl
movsb
xchg
dec
mov
sbb
shl
jge
inc
fidivl
pop
imul
in
popf
mov
jb
push
sbb
aam
ret
daa
call
in
data16
and
pop
xor
and
push
and
sub
movsb
repz
mov
lret
call
add
repz
xor
ss
cmpsb
mov
pushf
cmpl
mov
icebp
jbe
xchg
test
inc
push
cmpl
xor
adc
and
and
cltd
adcl
sbb
push
rorb
sub
mov
xchg
dec
xor
jmp
rorb
and
inc
and
add
mov
les
dec
iret
andb
popa
cmp
iret
imul
out
sbb
out
fadd
scas
sahf
mov
jns
out
bound
sub
sarl
or
sbb
aam
out
fnstsw
pop
push
lods
push
mov
int3
loop
push
inc
push
push
sub
sti
sahf
out
push
nop
movsb
push
push
xchg
jl
iret
repz
push
inc
ss
cmp
je,pt
push
sahf
out
cmp
push
repnz
fmulp
negl
xchg
mov
ret
cmp
sbb
incb
add
es
loop
cmpsl
stc
cmp
sbb
sahf
out
mov
sbb
cmp
shll
pushf
scas
lret
ds
call
sub
out
sahf
inc
pop
data16
nop
jns
out
sahf
lods
mov
ficomps
decb
ss
inc
push
pop
adc
js
out
jb
jle
popa
idivb
sahf
mov
daa
rol
loop
clc
pop
mov
cmp
cmp
aaa
je
fs
push
cmp
adc
daa
mov
mov
jbe
add
fwait
insl
aad
jae
jbe
push
cwtl
cmpsl
insl
mov
add
out
iret
dec
test
xrelease
push
jbe
lea
test
push
lret
lcall
clc
jp
imul
mov
jo
mov
pop
inc
pop
cmp
testb
out
es
dec
jg
cmpsb
adc
fisubrl
lea
sbb
bound
push
ret
sbb
stos
dec
pushf
imul
xor
push
outsl
xchg
and
adc
add
xchg
and
scas
dec
imul
lret
push
fwait
in
cli
add
xor
xor
sbb
xor
sbb
outsl
ss
mov
mov
icebp
pop
or
addr16
bound
arpl
jg
mov
scas
fnsave
push
jns
loopne
out
mov
jae
push
subl
lcall
stos
insb
jns
mov
or
mov
fldt
mov
mov
fiaddl
xchg
add
and
jge
jo
mov
jnp
push
adc
mov
mov
pcmpeqd
and
imul
je
cmp
loopne
inc
mov
stos
inc
sub
out
jg
popa
xlat
jb
cs
sti
fisubrs
data16
adc
addr16
push
insl
push
push
and
pop
js
aas
ret
je
repz
aad
data16
andl
pop
fwait
ret
or
jb
jo
mov
add
mov
dec
call
xor
jae
xchg
sub
dec
in
enter
pop
sbb
jnp
inc
xor
sub
sub
sub
inc
inc
xor
sub
pushl
xor
xor
jge
xor
xor
inc
xor
dec
push
fisubrs
mov
xor
cmp
out
in
lahf
sbb
xor
xor
aaa
clc
inc
inc
xor
mov
pop
das
andb
orl
xchg
cwtl
jne
test
inc
pop
inc
rcrl
inc
fidivrs
cmp
push
idivb
inc
or
push
and
inc
aaa
adc
js
cmp
xor
dec
sahf
or
inc
add
pop
push
jp
adc
cmp
push
negl
dec
mov
and
sub
and
xor
add
loope
sbb
outsl
mov
dec
xchg
push
add
andnps
lcall
setb
out
adc
push
sub
out
into
repz
cmp
in
ret
xchg
ljmp
add
movd
cmp
cmpsb
push
hlt
dec
lahf
bound
push
and
jg
mov
mov
or
push
outsl
ret
imul
cmp
je
push
push
imul
push
and
inc
cmp
adc
xor
add
mov
push
mov
dec
jge
jp
add
sub
push
mov
xchg
neg
rolb
fsubp
inc
inc
dec
insb
insb
mov
xchg
and
outsb
adc
push
icebp
ret
mov
scas
cmpsb
outsb
dec
adc
inc
xor
or
pop
jne
insb
jno
adc
inc
scas
nop
add
push
push
cmp
popa
int3
jp
cltd
mov
push
lds
cmpb
and
nop
mov
jnp
inc
push
imul
mov
dec
outsl
sub
or
daa
scas
lods
popf
fimuls
scas
je
dec
fs
imul
fs
jo
sub
add
add
or
and
inc
test
add
xor
inc
add
sub
loop
ja
lahf
inc
or
push
pusha
loope
and
test
and
aas
xlat
scas
andl
inc
nop
mov
fildl
or
push
adc
dec
loopne
inc
repnz
inc
adc
rolb
and
nop
pop
cmpsb
cmp
xlat
mov
lock
jbe
sbb
push
dec
and
xchg
mov
pop
nop
sub
inc
cmpsl
or
dec
push
push
aad
adc
cmpsl
jns
or
adc
sahf
out
sub
loopne
adc
jae
mov
das
push
adc
cmp
jae
xchg
adc
push
sbb
sbb
stc
enter
sbb
std
iret
jae
rcrl
push
das
push
pop
nop
imul
cmp
js
imul
push
jns
stc
jp
push
cld
dec
pushf
out
fdivr
mov
cmpsl
mov
out
les
fwait
and
ja
ds
adc
das
bound
mov
inc
dec
mov
es
inc
aaa
pop
inc
out
ja
push
ds
and
dec
inc
and
jle
push
sub
loop
andb
xchg
adc
cmp
repz
lock
repz
repz
les
lea
pushf
push
xchg
call
rcll
sbbb
insb
push
iret
jnp
mov
sahf
repnz
dec
inc
inc
cmp
xor
sahf
out
xor
and
out
sahf
out
sbb
or
repz
or
cld
or
hlt
cmp
repz
enter
iret
rep
nop
jo
xor
jns
iret
adc
pop
int3
mov
sahf
out
sahf
insb
inc
sub
adc
cmp
sarl
fcom
les
js
sub
out
sahf
out
add
repz
sbb
add
call
orb
loop
and
inc
and
insb
sbb
mov
ss
sub
fmull
cs
jnp
test
inc
cmpsb
cmp
dec
adc
xor
jbe
sbb
sub
inc
mov
out
mov
pop
push
inc
dec
cmp
add
push
out
cmp
idivb
sti
jb
jne
arpl
cltd
cmp
push
jae
dec
imul
shrl
cs
dec
add
push
jecxz
gs
adcl
mov
cmpsb
mov
and
inc
mov
out
dec
jl
mov
and
sbb
lds
daa
push
push
ja
mov
push
jmp
pop
mov
fcmovb
gs
dec
outsl
cs
sub
mov
aaa
xor
add
pop
pop
cltd
mov
icebp
cmp
jo
jns
bound
mov
js
shrb
mov
iret
out
mov
andb
rolb
ret
jns
xor
adc
and
add
decl
push
inc
push
xor
xchg
cld
inc
inc
mov
add
add
out
mov
les
jg
pop
jne
pop
adc
add
xor
lcall
and
xchg
pop
sub
inc
fcoms
into
ss
cmp
pop
pop
push
gs
adc
jo
bound
stos
cmp
xor
fbld
push
push
push
insb
das
inc
leave
jmp
mov
add
cmpsl
ja
lahf
add
das
add
cmp
xchg
loopne
adc
and
push
mov
dec
test
rorb
adc
data16
in
mov
insb
pop
rolb
in
aas
jg
fsubr
and
aam
cmp
ret
dec
mov
aas
sete
int3
rorl
ljmp
adc
outsl
jb
dec
xlat
jns
jecxz
test
sti
cltd
ss
in
insb
push
lcall
lret
icebp
jns
test
adc
sbb
push
popf
jl
in
mov
push
push
aas
sbb
mov
cmpsb
jg
mov
cmp
mov
shlb
aam
pushf
sub
sarl
vmptrst
enter
je
mov
leave
and
pushf
push
sarl
jbe
insb
rcr
in
jp
pop
imul
pop
loopne
pop
repnz
dec
adc
out
imul
lock
enter
mov
sbb
xor
mov
sbb
arpl
mov
sahf
or
inc
je
dec
imul
sbb
pushf
mov
sub
lods
push
lcall
scas
pop
push
and
std
mov
xor
push
add
push
outsl
ja
xor
adcl
jb
ja
cmp
push
add
loope
call
movsb
and
pop
and
leave
and
add
dec
or
inc
repnz
push
or
add
fucomip
cmc
inc
dec
fimuls
jno
sbb
sbb
xchg
ja
outsl
add
adc
inc
add
insl
jo
mov
pop
outsb
push
add
pop
dec
add
xchg
das
add
add
cli
add
mov
push
popa
jae
push
jae
push
dec
movsb
loopne
adc
inc
les
push
push
add
xchg
and
sub
fidivl
or
push
sub
jecxz
inc
sbb
addr16
jmp
add
adc
push
es
push
add
mov
into
dec
mov
inc
push
mov
aam
scas
xor
das
push
mov
xchg
or
cmp
push
jo
jb
ret
fdivrl
cmp
fwait
or
movsb
and
pop
add
roll
mov
cmpsl
xor
push
addr16
inc
loop
outsb
sbb
sahf
xor
outsl
adc
popf
adc
and
mov
pusha
inc
and
adc
scas
and
inc
mov
fimull
and
xchg
xor
mov
mov
fcoms
cmp
inc
add
push
fbld
jne
lahf
gs
or
adc
rolb
inc
daa
lods
addr16
outsb
es
rclb
inc
jecxz
and
inc
jp
pop
inc
cmp
ds
data16
movsb
inc
lahf
xor
mov
xor
dec
sub
inc
loope,pn
out
pushf
call
adc
jle
loope
jle
and
push
dec
jo
loope
pop
adc
int3
rcr
lahf
outsb
xor
bound
and
sub
mov
outsb
andb
or
shrb
stos
xchg
stc
add
mov
xor
rorl
sub
cmp
inc
insl
xor
xor
dec
dec
pop
add
sbb
roll
arpl
mov
ja
mov
lret
push
outsl
ror
mov
dec
xchg
xorb
roll
add
push
fs
xlat
or
sbb
cmp
rorb
movb
mov
rolb
xor
arpl
jb
sub
adcl
out
add
ss
jo
jp
mov
cmpw
ja
push
mov
aaa
dec
inc
dec
pop
or
movsb
in
xor
inc
cmc
andb
pusha
pushf
sbb
sub
xchg
gs
out
enter
inc
roll
inc
jp
mov
sub
jo
add
xchg
add
cmpsl
jno
pop
mov
push
inc
dec
fs
sub
add
dec
test
jo
imul
jno
cmp
and
rolb
arpl
sarl
pop
roll
in
xchg
cmpsl
ljmp
dec
imul
adc
jae
arpl
fcmove
pop
add
rclb
into
out
ss
add
push
loopne
loopne
mov
imul
mov
push
and
jns
add
jne
inc
jae
jo
adc
add
je
push
inc
test
add
push
orb
add
mov
xorl
jecxz
sarb
into
insb
sbb
mov
dec
jle
nop
cltd
push
jae
inc
movb
dec
sbb
jp
sbb
and
fbld
pop
sub
out
sbb
stos
xor
push
std
fwait
xchg
jge
inc
andb
cwtl
aam
push
movsl
push
and
jecxz
aas
dec
add
in
aam
inc
cli
inc
add
sbb
pop
add
test
out
jge
pop
push
insb
push
sbbb
push
and
push
punpcklbw
repz
pop
and
add
dec
adc
inc
cmp
stos
dec
testl
add
pop
pop
pop
cmp
add
in
aam
inc
inc
cmp
inc
xor
xchg
es
clc
sti
push
mov
inc
cmp
imul
pusha
jmp
pop
pop
and
movsl
pop
hlt
mov
ja
aad
sub
fdivs
inc
sub
mov
enter
mov
pop
push
or
push
add
mov
daa
sbb
adc
adc
add
dec
repz
clc
out
lock
repz
mov
cmp
mov
test
pop
mov
jns
xchg
nop
mov
jo
pusha
push
pop
iret
repz
push
inc
cmp
and
pushf
out
cmp
adc
in
lock
pop
mov
loopne
fdivrs
repz
enter
repz
repz
mov
iret
repz
cmp
sub
sbb
sahf
out
cmp
add
in
hlt
in
jns
out
in
int3
mov
mulb
mov
js
cmp
jnp
push
inc
sub
and
or
jmp
es
inc
mov
xor
adc
add
vandnps
divl
push
mov
push
mov
in
mov
stos
push
add
out
pop
aaa
sbbb
lock
push
nop
push
repnz
andb
lods
shlb
and
aaa
maskmovq
divl
shrl
pop
mov
add
jno
add
neg
mov
add
mov
inc
dec
pop
mov
pusha
addb
mov
xor
sub
inc
inc
push
mov
scas
imul
pushl
push
iret
jae
test
sbbl
dec
mov
addb
inc
lods
in
mov
push
pop
jo
jno
insl
pop
add
in
cmp
dec
loop
call
and
test
and
dec
mov
pop
add
insl
xor
xchg
sub
cs
clc
insl
jbe,pn
and
imul
mov
and
pop
rorb
mov
es
xor
adc
addr16
ret
add
sbb
jo
cmp
dec
add
ja
sub
and
pop
cs
adc
jne
inc
and
lret
and
adc
insb
push
insb
fiaddl
shrb
scas
divb
fcomps
sbb
inc
add
sbb
pop
adc
push
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
decl
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
fbstp
xor
xor
dec
xor
xchg
shll
inc
ss
ss
push
add
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
cmp
cmp
sub
ret
add
push
lock
idivl
ljmp
or
xor
xor
push
xor
xor
das
clc
ljmp
js
popf
xor
xor
xor
xor
xor
xor
lock
pushl
mov
xor
xor
xor
xor
out
xor
lock
jb
jge
mov
xor
xor
fidivl
scas
xor
es
pushl
fnsave
out
xor
loopne
call
jno
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
orl
add
or
mov
cmp
cmp
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
clc
lret
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
pop
cmp
cli
jmp
imul
cmp
cmp
stos
incl
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
pop
add
into
aas
out
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
xor
inc
inc
xor
pop
xor
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
ljmp
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
cld
cmpsb
call
loope
std
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
mov
sbb
pop
sar
cld
push
or
cmp
pop
xor
push
xor
adc
jmp
xor
xor
xor
xor
xor
xor
ret
xor
aas
clc
pop
xor
lcall
clc
xor
xor
jmp
incl
nop
xor
out
in
xor
scas
clc
xor
aaa
arpl
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
inc
jno
jg
stc
cmp
cmp
cmp
push
loopne
mov
and
cmpb
ds
aas
jmp
xchg
outsb
xor
xor
mov
xor
sbb
xchg
cmp
cmp
mov
mov
fists
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
jg
aas
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
out
sti
inc
xchg
cmpsb
jo
and
xor
add
or
jg
xor
xor
xor
fisubrl
xor
cli
aas
loop
xor
xor
xor
mov
xor
xor
decl
shlb
ss
add
or
aaa
incl
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
decl
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
fcmovb
incl
cmp
push
mov
cmp
lods
jecxz
pop
cmp
cmp
cmp
inc
cmp
dec
cmp
popa
cmp
aas
cld
jg
cmpb
cmp
push
stos
cmp
cmp
es
aas
or
cmp
cmp
cmp
cmp
cmp
repnz
push
jbe
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
cmp
cmp
cmp
sbb
cmp
dec
cmp
jmp
addr16
lea
scas
cmp
jg
cwtl
ds
ds
ljmp
data16
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
adc
into
or
push
xor
insl
jmp
push
sahf
xchg
les
fidivl
in
mov
xor
xor
xor
xor
xor
jg
mov
xor
xor
xor
xor
xor
xor
incl
cld
mov
cmpsl
xor
xor
scas
jno
xchg
xor
xor
xor
pop
filds
push
xor
xor
mov
mov
xor
fwait
sahf
cmpsb
mov
sbb
cli
bound
scas
cmp
sbb
loope
or
aaa
cmp
mov
mov
data16
dec
cmp
cmp
cmp
cmp
test
add
jle
push
or
xor
cmp
bound
data16
push
mov
jb
jbe
xchg
ja
js
jge
cmp
cmp
sarb
cmp
cmp
cmp
cmp
jle
mov
cld
mov
cmp
ja
lahf
xor
xchg
aas
push
pop
lock
xchg
mov
insl
xor
mov
xor
mov
stos
xor
push
ss
fiadds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
repnz
fisttps
cmp
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
sbb
cmp
xchg
cmp
cmp
cmp
mov
and
cmp
pushl
cmp
fdivrs
push
aas
jne
mov
scas
mov
jg
mov
fwait
xor
xor
dec
add
push
repnz
aas
xor
jmp
pop
xor
fsub
adc
es
dec
ss
call
xchg
movsb
ss
enter
in
and
cmp
sbbl
cmp
mov
test
jl
dec
ljmp
stos
pop
push
imul
cmp
test
mov
ret
ljmp
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
cld
adc
xchg
cmp
cmp
pop
sarb
inc
cmp
cmp
cli
or
pop
and
push
cmpb
cmpsl
ds
test
aad
ds
ret
idivl
add
sbb
addr16
loope
mov
sub
rol
lcall
loopne
xchg
xor
xor
pop
xor
xor
cmp
or
xor
xor
xor
pop
std
pushl
xor
mov
xor
push
lcall
pushl
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
call
add
cmp
cmp
mov
cmp
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
lcall
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
cld
aas
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rclb
fwait
lock
xor
adc
xor
jae
push
dec
cli
cmp
jne
jg
xchg
xor
xor
xor
sbb
xor
xor
ljmp
aas
push
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
int3
cmp
cmp
cmp
ljmp
out
xor
aaa
and
jg
into
cmp
inc
xor
xor
lcall
decb
das
ret
lods
xor
int3
mov
xor
xor
call
xor
cmp
sub
sub
xor
sarb
inc
cmp
cmp
cmp
sub
xor
fidivs
cmp
jl
cmpb
cmp
sub
lahf
push
mov
stos
jo
fmulp
cmp
mov
cmp
cmp
aad
push
pop
mov
cmp
inc
lock
dec
cld
push
mov
sahf
or
adc
sbb
and
and
clc
add
sub
sub
xor
cmp
inc
cmp
aas
xchg
dec
cmp
pop
cmp
cmp
insb
cmp
mov
cli
jl
cmpb
push
mov
nop
lods
or
cwtl
mov
sub
xor
inc
lock
jg
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
sarb
clc
mov
aas
loopne
clc
jbe
push
out
ret
or
xor
xchg
xor
xor
xor
jmp
inc
xor
xor
cwtl
xor
xor
xor
xor
adc
xor
xor
fbstp
mov
jb
inc
xor
xorb
and
fimuls
xor
call
outsl
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
pop
std
das
ret
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jg
incl
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
fisttps
push
nop
aaa
xchg
aaa
cwtl
into
mov
incl
add
aaa
mov
mov
aaa
enter
mov
aaa
aam
fdivs
fcompl
in
mov
lock
hlt
xor
aaa
hlt
add
or
or
xchg
adc
adc
sbb
cmp
cmp
mov
mov
hlt
jg
fidivs
cmp
pop
sahf
jl
cwtl
cmp
cmp
add
jmp
sub
cmp
cmp
cmp
cmp
push
cmp
stos
stos
jl
test
mov
mov
call
lods
cmp
mov
cmp
adc
adc
add
movsb
in
fisttps
sti
lss
or
or
repz
or
mov
ljmp
stc
idiv
push
and
mov
faddl
out
out
lcall
dec
add
rclb
lret
push
add
pop
sub
adc
shlb
jo
push
sbb
pop
shrb
add
out
sub
popa
sub
cmp
pop
daa
out
or
inc
out
dec
or
xchg
out
add
lods
sub
sbb
int
out
addb
les
add
fisubrs
cmpsl
jo
outsb
jns
dec
push
and
dec
mov
sub
in
out
pop
dec
jnp
rolb
push
shr
adc
lods
rcrl
pop
stos
dec
mov
add
and
shrl
inc
xlat
and
dec
cltd
into
loope
inc
push
mov
sub
clc
in
mov
loopne
push
ss
adc
je
jp
aam
sbb
popa
and
imul
addb
cmp
jae
dec
sahf
lea
clc
xchg
or
lock
pop
mov
mov
rorl
lock
pop
sbb
in
push
mov
les
cmpsb
gs
xchg
mov
push
fisubl
xchg
and
push
mov
push
movsb
dec
jae
loopne
adc
insb
leave
adcl
adc
xor
xor
das
inc
xor
dec
pop
and
rol
sub
movsl
pushf
loopne
cld
push
and
pop
cmp
sbb
pop
lret
push
xchg
popa
mov
in
test
test
xchg
jns
addl
mov
mov
sbb
shl
cmp
and
lret
imul
cmp
outsb
int3
inc
aam
insb
sub
in
in
inc
jp
add
outsb
or
push
mov
das
jge
fldl
outsb
and
or
jb
lea
mov
sti
xchg
call
inc
ja
push
lea
cmpb
popf
pop
inc
lahf
xchg
xor
lods
add
or
xor
or
stc
je
int
inc
xor
push
inc
sub
aaa
push
mov
outsl
sarl
bound
lea
fistl
push
push
pop
jb
andb
sub
xor
or
mov
aam
cmp
cmpsl
or
mov
lea
call
movsl
mov
and
xor
cltd
jb
add
lcall
pop
add
or
mov
mov
addr16
dec
inc
cmp
andb
call
lret
jmp
xchg
dec
cmp
js
popa
stos
dec
jmp
psllw
decb
cmp
mov
mov
test
jo
xor
and
cli
xor
call
lods
mov
inc
xor
lret
push
add
pop
push
es
rcll
mov
inc
and
push
mov
mov
jmp
lods
xor
cs
push
loop
sbb
cld
adc
add
xor
imul
pop
add
stos
push
dec
ja
add
jo
jl
fs
xchg
add
push
mov
push
adc
aaa
ja
dec
cld
sub
or
jge
test
push
int
cmp
xchg
or
xchg
add
xchg
mov
and
orl
lock
call
aad
ret
add
into
mov
lea
inc
or
pop
out
fistl
lret
or
xor
pop
pop
push
xchg
loope
comiss
add
pop
pop
or
jbe
fiadds
dec
test
mov
or
sub
pop
add
lods
adc
iret
popf
jnp
lock
xchg
push
and
fsubr
pusha
mov
cmp
xor
loope
jbe
shl
or
jge
out
call
push
pop
xor
jge
adc
push
popf
imulb
cmp
rorb
push
mov
push
sbb
test
rcll
add
push
movlps
or
push
imul
scas
cmp
pop
or
adc
adc
loop
pop
add
decl
add
cmp
ret
pop
hlt
sub
rorb
in
inc
loopne
inc
lcall
xchg
or
pusha
push
insb
ljmp
dec
repnz
mov
jmp
mov
lret
mov
mov
pop
cmp
xor
or
mov
pop
test
outsl
pop
mov
test
adc
pop
cmp
loopne
or
push
lea
clc
idiv
dec
nop
xchg
repz
test
and
jbe
loopne
sub
jl
pop
xor
add
mov
push
ljmp
mov
rorl
mov
push
add
mov
jno
cmpsb
xchg
mov
hlt
mov
jge
xlat
call
add
fdivp
dec
xchg
sarb
xchg
add
loope
adc
dec
pop
mov
push
adc
dec
cmp
add
and
add
movsl
adc
or
icebp
push
cmp
jmp
dec
add
pop
push
in
divl
lcall
sub
bound
push
aaa
and
les
mov
rcll
and
push
inc
xchg
pop
cmp
sarb
mov
bound
sbb
cmp
and
cmp
sbb
cmp
pop
int3
mov
sarl
mov
dec
ljmp
fwait
inc
xchg
cmp
imul
inc
cmp
xchg
cmp
add
cmp
in
or
xchg
inc
movsb
xchg
xchg
enter
add
stos
lds
dec
dec
ljmp
bound
sbb
inc
xchg
popl
dec
and
dec
jp
inc
or
push
insl
lods
pop
andl
lcall
sub
lock
add
inc
movsb
inc
lahf
and
outsb
adcb
adcl
sbb
mov
inc
push
shrb
xchg
loop
test
jmp
test
rcll
push
subl
push
es
clc
push
adc
dec
or
movl
ja
push
xchg
jae
add
fsubrl
add
cmp
outsb
mov
out
scas
outsb
or
xchg
mov
or
pop
adc
adc
pop
add
lret
inc
dec
pop
and
mov
popa
jge
mov
push
andl
nop
mov
popa
cwtl
adc
pop
cmp
push
inc
sbb
call
mov
and
call
push
notl
pusha
mov
cmp
popa
add
adc
sbb
call
mov
mov
adc
adc
or
lret
nop
jb
and
inc
popa
mov
nop
orb
sahf
jle
sub
or
jmp
psubq
pop
call
add
pop
sahf
scas
inc
nop
jb
pop
es
aam
pop
inc
pop
jo
scas
aam
pop
ret
call
es
bound
idivl
fdivr
mov
and
addl
pop
xor
push
adc
aaa
add
inc
leave
and
xlat
inc
and
sub
loop
dec
push
mov
outsb
inc
sbb
sub
sbb
js
inc
adc
insb
xor
addb
sbbl
dec
pop
sub
or
scas
lds
push
xchg
addb
inc
mov
cmp
or
sub
popf
xchg
sub
mov
inc
sbb
sbb
call
dec
or
mov
mov
add
sbb
mov
mov
cmp
xor
xor
add
rcrb
dec
lahf
into
sti
mov
andb
pop
loopne
add
fs
xchg
sbbb
add
xor
jp
push
or
ja
ret
xor
mov
pop
cs
into
test
mov
mov
mov
push
fnstcw
cmpl
or
sbb
pop
andb
fwait
popf
mov
cs
nop
repz
in
nop
push
adc
rolb
hlt
add
test
mov
pop
dec
ja
jno
pop
xchg
cmp
repz
dec
inc
cmp
pop
test
xor
repz
jmp
pop
mov
pop
test
sbb
lret
and
mov
and
mov
nop
xor
push
push
jl
in
pop
pop
pop
add
push
ja
sbb
pop
mov
push
fadds
mov
call
adc
or
push
pop
cmp
jnp
inc
sub
xor
inc
pop
mov
jo
pop
add
pop
out
sub
imul
ds
stc
push
or
jns
push
lods
nop
and
dec
sbb
hlt
and
push
addr16
popf
pusha
push
mov
in
cmpsl
or
or
mov
and
mov
dec
retw
test
mov
pop
or
enter
pusha
hlt
push
hlt
pop
popa
loope
test
pop
push
sbb
pop
cmpsl
ret
mov
and
adc
lcall
in
orl
sub
sub
and
add
int
sub
sub
sub
shlb
lcall
sub
in
add
sub
cmp
and
sub
sub
pop
dec
sub
sub
inc
and
sub
cmpsb
imul
or
or
xor
sub
cmp
and
mov
mov
sbb
add
pop
mov
ret
popa
bound
repz
jns
fadds
add
subl
addr16
inc
fistl
stc
push
scas
or
mov
or
lret
ret
cld
sub
sbb
mov
test
add
adc
out
psubsb
push
inc
lcall
shrb
or
mull
push
je
sub
and
repz
mov
pop
les
cwtl
or
cmpl
bound
adc
inc
inc
jge,pn
shl
ds
sub
iret
push
xchg
in
mov
adc
pop
rcrb
sub
inc
or
iret
pop
nop
xchg
rorl
adc
addb
arpl
adc
and
bound
mov
bound
mov
adc
mov
sbbb
inc
loopne
inc
daa
push
fs
jmp
out
movsl
mov
ret
call
enter
enter
jae
cmp
mov
mov
movsb
jp
repnz
hlt
fisttps
push
dec
and
jo
inc
dec
pushf
cwtl
dec
jns
mov
cld
add
xchg
pushf
adc
push
xchg
jns
mov
in
aad
lods
mov
jns
xor
and
adc
xor
jno
jge
rol
inc
test
mov
cmpsb
lcall
mov
xchg
cmp
xor
setns
pop
sbb
adc
or
and
addr16
jns
sbb
fiadds
sbb
mov
jns
pusha
sub
in
bound
js
or
mov
dec
jns
xchg
mov
sbb
icebp
sbb
lcall
mov
icebp
mov
aam
add
mov
sbb
mov
and
pop
loope
mov
imul
ss
add
xchg
ret
aad
sbb
jmp
dec
gs
jmp
outsb
cmpsl
sbb
or
add
loopne
mov
xchg
xchg
hlt
mov
or
pop
add
incl
into
add
dec
and
xor
and
sbb
shrb
push
adc
dec
gs
adc
popa
dec
and
fs
mov
dec
mov
dec
xor
dec
frstor
rcr
insl
arpl
mov
pop
mov
xor
push
notb
shll
mov
add
sub
cmp
enter
stos
add
push
or
jne
dec
jmp
dec
je
dec
lods
add
mov
addr16
add
out
sub
fidivrl
adc
mov
pop
js
mov
inc
cs
je
cmp
mov
leave
shl
ret
js
subl
cmp
fisttpl
adc
push
pop
pusha
push
xor
in
add
and
popa
cmp
cmp
sbb
ficoml
data16
lods
insl
push
mov
andl
xor
mov
xor
and
lock
adc
xor
mov
lds
outsl
cmp
sbb
pop
mov
sub
sub
clc
out
jne
jle
xor
rclb
pop
clc
int3
sub
fisttpl
pop
mov
movsl
and
mov
jae
ficompl
cwtl
xchg
jb
xchg
cmp
lret
push
xor
orl
add
dec
pop
mov
and
fildll
push
lods
movsl
add
mov
fistpll
je
test
sub
lea
push
call
mov
out
or
pop
push
call
mov
pop
jmp
mov
mov
jl
daa
sbb
mov
lret
fs
mov
jo
push
je
pop
mov
dec
enter
add
xchg
nop
or
inc
call
and
inc
inc
lea
or
inc
inc
mov
and
sbb
mov
mov
adc
xorb
mov
pusha
and
aaa
mov
and
es
das
push
nop
in
jno
adc
pushf
sbb
jnp
dec
or
push
or
jnp
dec
cmpsl
std
pop
ret
or
mov
nop
dec
testl
xchg
out
rol
and
inc
mov
or
aaa
mov
push
dec
nop
pop
out
push
mov
lahf
data16
lock
sub
push
rolb
sub
mov
mov
andb
or
nop
out
lods
xorb
inc
mov
je
push
xor
in
fimull
orl
test
iret
inc
cmp
mov
pop
mov
or
mov
xor
ret
mov
loope
into
cwtl
pop
push
ds
bound
out
jnp
nop
mov
loope
xor
shlb
mov
idivl
js
mov
mov
es
mov
cltd
sbb
arpl
cmp
inc
cmp
sub
inc
cmp
and
es
ds
or
nop
mov
dec
das
adc
fcomip
add
es
jo
inc
shlb
mov
es
addr16
mov
mov
scas
or
sbb
xchg
call
and
xor
je
dec
or
sbb
mov
mov
mov
pushf
movsl
movsb
nop
adc
inc
scas
sbb
ljmp
into
or
shll
aad
test
and
cmp
mov
insl
lcall
inc
jb
aad
aad
outsb
popa
call
in
jb
enter
inc
pop
fcmovnu
adcb
pop
call
pushf
push
aam
push
sbb
xor
aad
cmp
inc
lahf
enter
or
aad
cld
push
inc
or
aad
dec
inc
add
cmp
cwtl
lahf
sbb
push
rorl
sbbl
ficoms
pushf
addb
mov
mov
mov
mov
sub
repz
xchg
inc
add
das
mov
gs
sub
jmp
mov
leave
add
sahf
and
call
popa
add
jb
pop
xchg
enter
cmp
xchg
xchg
mulb
lock
mov
dec
lock
daa
and
and
or
cmp
pop
fmul
rorl
and
push
jns
enter
fistl
pop
inc
add
push
enter
mov
nop
xor
add
jno
bnd
push
dec
loope
and
call
cmp
and
shl
jnp
scas
cltd
inc
leave
sti
loopne
pop
mov
xor
roll
or
add
push
fsubrl
dec
xlat
xchg
push
xchg
dec
push
pop
nop
xchg
adc
or
add
movsb
xchg
add
movsb
xchg
roll
push
and
mov
stc
loopne
inc
ret
subl
pop
sti
stc
adc
stc
movsl
cs
ret
stc
and
inc
ret
push
stc
roll
std
mov
mov
fdivs
mov
fcoml
mov
push
push
pop
stc
pop
lds
rcll
push
stc
arpl
int
sub
call
enter
xchg
call
sbb
adc
fnsave
movsb
xchg
fisttpll
cmp
xlat
test
xlat
or
enter
daa
inc
dec
pop
xor
sub
xor
add
in
jmp
mov
fcompl
mov
pop
mov
rol
jmp
lret
xor
movsb
jmp
dec
pusha
and
xchg
jne
xchg
iret
repnz
je
add
fcmovnu
sub
out
xchg
call
sbb
test
cmpxchg
icebp
sbb
add
aas
adc
pop
sbb
sbb
and
inc
aas
iret
aam
jb
adc
and
xchg
push
call
cmp
test
xor
sbb
add
mov
lods
xchg
mov
pusha
add
repnz
sbb
ret
call
sbb
mov
test
out
loop
or
hlt
je
aam
xchg
lret
jge
or
add
push
mov
xchg
js
jl
sbb
rcl
add
jl
rcrl
rcll
push
lret
fsub
xor
imul
mov
xchg
rcr
into
push
push
aad
cmpb
push
mov
jl
mov
ret
or
jno
daa
test
shrl
popa
mov
ljmp
pop
shll
sbb
shrl
adc
mov
xor
stos
cwtl
mov
sbb
cmp
add
les
or
fmull
sub
or
or
test
pop
mov
enter
sub
pusha
xor
xchg
sbb
and
xchg
add
dec
in
xchg
pop
imul
push
fadds
add
adc
dec
xor
scas
mov
cmp
mov
cmp
sub
enter
adc
loope
mov
daa
mov
repnz
lret
add
jge
push
adc
adc
loopne
popa
pop
adc
loopne
popa
sub
sbb
andb
pop
into
cmpb
jp
fxch
and
rcll
pop
rcll
dec
dec
sbb
arpl
xchg
shrb
or
movsl
shlb
mov
add
push
and
pop
dec
add
movsl
adc
or
shll
test
xor
lock
ss
mov
cwtl
insl
add
shrb
mov
fiadds
push
outsb
fcmove
rclb
das
mov
xchg
adc
mov
xchg
cmp
stc
outsb
sub
pusha
pop
js
shrb
push
xor
fstpt
push
adc
adc
dec
adc
movsl
fwait
or
push
pop
cmp
dec
adc
push
xchg
mov
adc
jne
out
mov
inc
cli
sub
shrb
pop
lock
rcr
push
sub
jl
sub
mov
jbe
sub
adc
jnp
in
leave
push
aad
sbb
mov
ljmp
push
dec
fcoml
push
lret
pop
adc
xchg
jmp
ds
test
bnd
add
call
cmp
mov
cmp
dec
test
push
mov
sarb
aad
mov
push
in
dec
das
lcall
mov
push
add
dec
dec
out
mov
lds
mov
pop
pop
outsl
les
outsb
cmp
vpsubusb
jb
lds
mov
push
xlat
std
xchg
out
mov
outsb
push
inc
mov
pop
popf
addb
mov
inc
loopne
mov
aam
cmp
je
pop
addr16
or
sbbl
aaa
test
fdiv
pop
jmp
jne
call
push
push
aaa
pop
repz
cs
and
or
rorb
cli
jne
mov
sub
xor
cli
mov
pop
sbbl
outsb
ret
pop
adc
and
jae
mov
mov
dec
jp
push
xchg
sub
sub
or
mov
sub
inc
dec
sbbl
pop
test
cmp
pop
jp
insl
xor
mov
or
out
mov
pop
rorb
add
test
enter
sbb
mov
adc
jno
sbb
inc
pop
hlt
aam
sub
mov
aaa
test
inc
roll
enter
xchg
inc
dec
jecxz
loopne
mov
shll
pop
pop
shlb
js
pop
test
jle
pop
inc
cs
dec
or
iret
shlb
adcb
xchg
push
stos
sub
and
pop
mov
mov
jmp
adc
jo
js
in
dec
leave
in
sbb
push
xchg
leave
add
int3
stc
adc
pop
loopne
pop
sbb
dec
pop
or
xchg
xchg
xchg
mov
pop
mov
xchg
mov
cmp
xchg
mov
sbb
xchg
mov
sti
mov
lock
fdivrs
sarb
mov
repnz
test
mov
repnz
mov
js
cmp
inc
pop
push
pop
mov
and
dec
mov
push
jb
subl
sbb
cmp
inc
pop
mov
sbbl
out
fstpt
nop
mov
and
cmp
lods
mov
nop
sbbl
mov
enter
push
pop
mov
pop
cmp
ds
sbbl
sbb
enter
mov
sbb
and
jecxz
fdivrs
add
mov
lods
mov
mov
mov
cmpb
nop
mov
and
cmp
inc
mov
sub
mov
inc
or
mov
fsubl
in
clc
rcll
fs
xor
and
dec
rcrb
and
xchg
fistl
cld
xchg
mov
int3
dec
lcall
enter
sbb
push
xor
daa
int
or
and
jb
mov
enter
sub
cmp
pushf
xor
daa
stc
mov
jb
mov
dec
dec
jae
push
cli
cmp
mov
mov
mov
orl
inc
dec
lock
adcb
xor
sub
aad
sub
test
inc
sub
or
add
js
add
and
sahf
xor
sub
leave
sub
mov
mov
and
mov
cmp
add
jns
dec
enter
mov
hlt
imul
pop
sti
testl
insb
or
pop
scas
aas
call
sub
inc
adc
sub
add
mov
jg
xor
jecxz
jmp
mov
pop
mov
sbb
push
or
lea
and
and
inc
jns
add
adc
rcrb
out
and
pop
adc
addr16
punpcklbw
jns
jmp
adc
mov
jns
and
dec
push
push
jns
inc
xchg
sbb
rcr
push
adc
adc
push
add
mov
jbe
test
xchg
in
and
jb
inc
rcrb
jmp
sarb
add
sbb
dec
mov
jns
dec
mov
adc
pop
jns
add
andb
xchg
inc
int
add
pop
pop
inc
jns
test
loop
adc
jns
add
lea
rclb
adc
inc
jno
xchg
cs
loopne
movsb
xor
fldcw
xchg
mov
imul
xchg
cmp
test
shrl
and
stc
lret
mov
or
and
or
or
stc
mov
mov
popf
test
mov
sarb
movsb
shll
add
xor
xor
mov
rcrb
stc
in
dec
inc
mov
jbe
or
inc
fwait
and
fdivrl
cmp
shlb
rcll
cmpsl
and
mov
stc
push
shlb
cmp
ljmp
addr16
pushf
xchg
loop
adcl
fcoms
rcrl
cmpl
adc
sbb
pop
cmpsl
and
call
dec
inc
xor
or
movsb
and
cmpb
adc
lahf
xchg
cmp
stc
push
sbb
sbb
cmp
cmpsl
and
push
fisubrs
out
adc
stc
xchg
add
add
adc
inc
inc
stc
movsb
roll
fdivl
call
jecxz
stc
push
sbb
pop
lods
and
add
loop
stc
test
ret
and
or
lret
xor
jne
shlb
das
and
je
mov
icebp
int
jmp
pushf
xchg
clc
or
and
and
xor
andl
ja
popa
nop
sahf
subl
xor
aaa
ficoml
in
push
xor
xchg
stc
jae
sub
mov
sbb
or
stc
xchg
cmp
scas
dec
inc
stc
xor
push
stos
hlt
sbb
jbe
enter
loopne
movsb
stc
inc
lcall
les
jp
lds
cli
jmp
xor
xor
xchg
add
push
cmpsl
and
push
push
stc
cmp
xchg
cmpsl
and
rcl
inc
cmc
or
stc
lds
pusha
int3
in
cmpsl
and
push
sbb
dec
inc
shl
add
push
inc
leave
push
jo
stc
clc
aad
push
sbb
or
sbb
movsb
ret
stos
sar
imul
cmp
negl
stc
in
imul
les
xlat
stc
addr16
rcll
dec
out
cmp
jmp
jp
and
shl
cmp
cmp
stc
nop
mov
cmp
push
aam
sbb
push
hlt
cmp
mov
sbb
in
dec
sub
testl
loop
movsb
rcrl
stc
imul
add
dec
shrl
xor
dec
inc
stc
dec
cmp
inc
xor
fcomps
xchg
or
xor
imul
addl
addr16
jo
shlb
add
dec
adc
jb
std
push
xchg
out
mov
stc
fsubr
pop
lds
stc
jg
rcll
dec
sbb
xchg
and
stc
out
and
cmpsl
and
inc
push
inc
out
fmuls
popa
mov
repnz
popa
nop
int
into
dec
pop
leave
and
int
inc
dec
push
push
hlt
mov
lods
out
adcb
cltd
nop
mov
mov
imul
dec
call
pop
and
and
and
cmpsl
mov
int3
add
jmp
dec
call
push
call
movsb
mov
ss
dec
shlb
daa
lcall
push
cwtl
or
dec
or
subl
in
into
mov
scas
mov
xor
pop
movsl
xchg
aad
pop
add
add
hlt
sbb
cmpsl
mov
mull
pop
xchg
and
add
dec
push
mov
xchg
fisttpll
and
dec
add
mulb
popf
out
xchg
cmpsb
inc
lahf
bound
in
js
and
test
js
push
mov
out
shlb
test
dec
iret
repz
fs
mov
into
lcall
push
test
jns
ds
bound
jns
out
mov
shl
iret
repz
clc
push
stos
adc
cmp
iret
repz
jle
sahf
stos
repz
repz
out
sahf
out
stos
es
push
data16
out
sahf
sbbb
out
loop
add
sbb
lock
aas
adc
int
jns
jge
inc
daa
adc
adc
push
int
xor
sub
add
ja
outsb
dec
mov
jno
jg
sbb
push
fcoms
sbb
aad
cmp
cmp
jl
push
call
mov
mov
stos
stos
ljmp
adc
or
or
adc
rorb
push
adc
push
adc
xchg
sbb
jns
sbb
sbb
rcrl
and
rolb
sahf
push
pop
sahf
enter
and
jns
repz
js
jns
daa
sahf
out
jp
push
cld
adc
lds
ret
mov
outsl
loopne
mov
shlb
add
adc
add
lods
add
pusha
xchg
xor
jns
out
dec
inc
xor
sbb
repz
adc
add
xchg
icebp
in
cmp
repz
loopne
fcom
repz
repz
enter
repz
mov
lods
test
mov
pushf
cwtl
xchg
nop
mov
cmp
xrelease
cmp
je
insb
push
repz
pop
push
push
dec
repz
repz
inc
inc
xor
out
ds
and
nop
lock
pushf
jl
cmp
cmp
sarl
fdivrs
iret
repz
pop
dec
and
stc
cmp
sbb
add
mov
lahf
out
sahf
pushf
je
and
lea
jl
ja
push
nop
fs
lea
fs
in
enter
adc
pop
add
sub
push
nop
inc
push
nop
push
test
rolb
orb
aaa
xor
jbe
mov
sub
jo
adc
jg
pop
test
sub
push
xor
ja
add
popa
pop
and
and
adc
ss
js
or
add
outsl
sbb
pop
add
or
cld
pushl
mov
das
loopne
repnz
shl
mov
lret
je
or
imul
push
daa
inc
or
mov
fnsave
sbb
jo
jnp
fdivrs
mov
aas
insl
leave
push
dec
lods
pop
adc
clc
mov
and
push
lock
inc
adc
add
or
insl
daa
andb
sarl
jle
xor
push
insb
add
popw
adc
or
sbb
pop
jecxz
rolb
lea
cmp
fimull
in
into
ja
aas
pop
xor
daa
jb
shlb
fsubrs
inc
pop
dec
push
mov
jge
xor
mov
pop
pop
inc
fbld
inc
cmpsb
inc
aas
sbb
daa
or
sbb
jg
push
mov
and
jb
aas
cmp
pusha
in
sbb
pop
jo
mov
xchg
cmp
jg
push
dec
rorb
jo
pop
push
mov
mov
lock
cli
ud0
xchg
lea
out
adc
in
add
push
nop
imul
out
add
insb
es
mov
dec
insl
sbb
and
aaa
add
xor
push
inc
cmp
outsb
jbe
xchg
neg
insl
iret
push
sbb
or
jno,pn
clts
push
inc
mov
or
push
hlt
push
add
push
cmpsb
mov
xchg
or
jne
mov
pushf
roll
je
loop
cltd
les
or
mov
mov
push
xchg
xchg
movb
call
aaa
pushf
push
fists
imul
lret
cmp
and
mov
movsb
add
xor
xor
hlt
sub
mov
add
xchg
mov
pop
pop
push
adc
addl
mov
pop
sub
mov
lret
dec
add
fcompl
xchg
bound
sbb
lods
push
insb
sub
push
or
or
sbb
insb
xchg
orl
mov
sbb
daa
stos
mov
mov
mov
sbb
rol
nop
inc
add
mov
sbb
inc
sbb
mov
sub
mov
mov
xchg
pop
imul
inc
sub
ffreep
bound
sbbb
jmp
xor
add
cmp
xorb
aaa
add
int
lds
dec
mov
movsb
sbb
inc
pop
or
jae
or
mov
cmp
mov
lods
test
repz
repz
xchg
mov
fisubrs
pop
pop
push
push
jns
out
dec
dec
inc
inc
cmp
jns
out
xor
sub
stc
dec
sahf
adc
add
cld
xchg
hlt
sahf
out
sahf
call
shlb
jns
mov
mov
push
test
jl
sahf
out
sahf
insb
fs
dec
cmp
iret
mov
xchg
mov
iret
repz
sarb
repz
sub
jns
jo
push
inc
cmp
sub
out
cmp
or
xchg
in
jns
out
enter
jo
mov
dec
or
dec
pop
sub
jbe
div
mov
dec
popf
enter
test
test
cltd
stos
dec
sbb
sub
sub
push
mov
push
push
add
inc
mov
xchg
cs
ss
loopne
leave
pop
jg
push
dec
mov
in
pop
enter
jnp
mov
outsb
ret
lcall
add
fistpll
fsubrs
add
jae
sub
add
and
adc
add
sub
mov
mov
mov
dec
jnp
iret
xor
xor
sahf
xor
mov
push
xor
push
xor
xor
xor
aaa
fbstp
outsl
xchg
arpl
cmp
fisttps
notb
cmp
bound
mov
fwait
cmp
nop
icebp
jg
cmp
dec
cmp
xchg
lahf
cmp
ret
clc
mov
mov
and
pop
ds
data16
sub
add
fs
imul
aas
jecxz
call
dec
sub
sub
aad
incb
xor
push
lds
out
outsl
nop
jno
push
out
xor
repnz
xor
xor
mov
xor
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
xor
clc
cmp
test
mov
xchg
xor
icebp
fucomip
xor
xor
and
sub
std
pop
sub
sub
xor
xorb
xor
xor
fwait
fs
mov
and
sub
xor
xor
push
mov
pushl
shlb
enter
push
xor
and
sub
insb
ss
sbb
jecxz
ss
push
or
jmp
jp
aaa
cmp
insb
cmp
sub
leave
jbe
cmp
sbb
sbb
and
aas
jl
mov
sub
xor
jp
test
mov
xchg
repnz
cmp
pop
dec
cmp
rorb
jecxz
cmp
xchg
arpl
cmp
dec
cmp
push
ret
clc
dec
cmp
cmp
inc
idivb
cmp
cmp
xchg
xor
cmp
adc
cmp
int3
cmp
fnstsw
ds
ds
cmp
dec
out
xchg
icebp
aad
cmpsl
aas
mov
aas
repnz
xor
wrmsr
and
and
push
xor
xor
mov
jle
xor
jle
xor
sbb
lods
test
dec
xor
aam
fidivl
mov
dec
in
dec
xor
cmpsl
loope
fs
xor
outsl
test
lret
sbb
jecxz
add
mov
and
aaa
in
outsb
pop
pop
push
call
push
cmp
inc
js
jle
xchg
cmp
cmp
sbb
pop
aad
aad
in
adc
incb
xchg
cmp
mov
cmp
jl
cmp
cmp
dec
push
fwait
popa
cld
int
insl
cmp
jnp
subb
cmp
cmp
cmp
cmp
dec
xor
cmp
cmp
cmp
or
dec
sbb
sbb
cmp
nop
push
xchg
xor
inc
jp
fdivr
or
mov
cmp
cmp
cmp
sub
jecxz
aaa
xchg
and
cmp
push
ds
ds
clc
aam
clc
pop
es
adc
and
dec
aas
push
aas
dec
mov
dec
push
insb
sbb
pop
ficompl
out
nop
jno
xor
inc
daa
aaa
add
xor
mov
cmc
xor
xor
shlb
fcomip
sub
inc
xor
insl
xor
test
sbb
fdivr
xor
adc
ljmp
loope
xor
aaa
jnp
jecxz
sbb
mov
or
cmp
mov
adcb
inc
xchg
mov
bound
ss
lcall
inc
cmp
mov
mov
pop
cmp
outsl
sub
inc
xor
inc
sub
jg
cmp
ja
or
cmp
cmp
cmp
cmp
cmp
mov
or
cmpb
dec
jp
pop
cltd
cmp
cmp
xor
inc
sbb
es
sub
outsb
sbb
mov
inc
outsl
or
js
mov
xor
xor
adc
xor
mov
push
cmpsb
xor
xor
add
xor
sbb
xor
jns
mov
out
push
adc
sbb
popa
cld
pushl
das
ss
mov
mov
aaa
pop
dec
pop
cmp
push
mov
lret
jecxz
fdivp
cmp
cmp
cmp
mov
ljmp
fisubl
imul
cmp
cmpsb
cmp
cmp
cmp
inc
jecxz
clc
test
lahf
cmp
aas
iret
aas
loope
pop
cmpl
xor
xor
xor
pop
sar
jae
test
xchg
mov
fbstp
icebp
ss
test
push
push
push
mov
or
pop
mov
xor
ss
aaa
gs
decl
gs
cmp
cmp
cmp
cmp
cmp
or
rcrb
xor
or
jecxz
in
xor
xor
ss
jle
clc
add
ret
cmp
fiaddl
inc
cmp
push
lock
dec
ljmp
out
pmaxsw
xor
adc
push
sbb
sbb
mov
xor
cwtl
xor
orl
sbb
xor
inc
xchg
jecxz
stos
inc
jb
mov
nop
shll
pop
in
hlt
cmp
dec
add
adc
icebp
cmp
or
xor
sahf
js
jl
mov
mov
mov
sbb
jl
shlb
dec
int3
xor
into
fsubs
sbb
shl
lds
call
mov
or
or
adc
xor
icebp
push
cmpsl
ss
inc
xor
and
outsl
and
push
xor
pop
mov
insb
mov
or
divb
popa
inc
jl
nop
xor
movsb
xor
sbb
shlb
push
sbb
cmp
call
in
call
xor
push
clc
lods
testb
ret
sub
test
mov
add
jbe
xor
outsb
xchg
jbe
xor
mov
enter
aam
lock
xor
xor
enter
addl
sub
inc
xchg
add
push
inc
add
insb
scas
xorb
test
xor
stos
inc
mov
mov
xor
xor
xchg
push
inc
jecxz
xor
push
shr
push
loopne
lock
sbb
sbb
clc
and
xor
into
sbb
stos
loope
or
sbb
aas
je
add
cld
xor
test
pop
add
sbb
pop
sbbb
repz
sahf
cmp
pop
lcall
mov
dec
xor
xor
xor
mov
es
jl
loopne
call
test
xor
xor
xchg
cwtl
xor
out
movsb
jo
adc
repnz
addr16
inc
xor
jg
test
pushf
sarb
test
push
mov
lret
jo
nop
test
mov
inc
add
and
hlt
push
add
inc
dec
inc
pop
and
fcmovnu
jae
inc
clc
add
add
or
in
add
pop
pop
push
or
or
or
or
or
adc
aaa
xchg
or
adc
mov
adc
adc
adc
add
data16
or
pop
vunpcklps
rolb
or
xor
add
and
sahf
add
out
imul
cmpsb
add
xchg
mov
std
inc
mov
sub
mov
jb
imul
lcall
add
add
push
adc
incl
ret
adc
adcl
shl
and
bound
js
xor
or
xor
bound
inc
inc
pop
inc
adc
aaa
cmpsl
mov
add
ss
adc
mov
xchg
int3
and
xchg
cwtl
inc
sub
mov
add
arpl
pushf
into
loopne
adc
push
lods
stos
add
pop
scas
cmp
adc
fdivr
pop
lods
push
adc
pop
popa
jno
and
adc
mov
add
and
push
lock
loope
icebp
dec
inc
jo
mov
mov
rorl
adc
mov
adc
dec
fiaddl
or
js
inc
in
push
sbb
or
fcomip
jg
adc
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
inc
and
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
mov
or
xchg
jg
or
insb
sub
addr16
out
jmp
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
decl
fisubrl
in
mov
orb
int3
lcall
mov
add
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
sti
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
mov
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
cli
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
mov
push
sahf
pop
clc
sti
jg
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sti
cld
cltd
inc
sbb
add
incl
jb
mov
or
push
mov
sub
pop
mov
jl
mov
dec
jp
push
gs
jg
sti
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
ljmp
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
subl
jb
adc
push
lock
lods
jp
testb
sbb
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
imul
ljmp
aaa
xchg
in
add
inc
adc
loope
fisttpll
ror
rcrl
cli
push
push
push
idivl
ljmp
dec
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
inc
sar
cmp
sti
punpckhbw
cmpsb
orb
mov
push
sarl
inc
push
sub
xchg
pop
clc
pop
hlt
jg
push
lret
movsb
add
lea
jg
jmp
std
xorb
jg
aad
adc
ret
das
pop
pop
mov
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
jmp
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
jl
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
inc
in
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
lock
push
sarb
lods
xor
sbbb
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
decl
push
jo
pusha
imul
add
mov
cmp
xchg
mov
fcmovnu
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
sar
pushl
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
rol
cld
addl
adc
and
iret
imulb
fmull
enter
jecxz
scas
sub
pop
decl
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
fucomi
xchg
adc
inc
or
pop
jg
add
mov
mov
jg
mov
aad
test
mov
fsubr
lock
mov
iret
push
jbe
push
sbb
addl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
sarl
adc
loopne
and
push
xorl
and
std
stos
jge
push
cmp
dec
push
in
aas
mov
push
imul
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
jmp
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
push
sti
or
jno
pop
nop
mov
lcall
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
xor
fistps
ljmp
cld
lds
fidivrl
jg
stos
pop
repz
jg
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
aas
mov
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
std
cmpsl
cmp
aas
test
bound
pop
outsl
xchg
inc
test
in
jge
decl
lock
lcall
fsubs
shl
dec
cs
dec
adc
lahf
mov
or
out
lcall
jg
addl
mov
adc
stos
pop
jg
pop
shrb
decl
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
cmp
jmp
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
mov
imul
or
inc
pop
xor
rorb
and
add
ljmp
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
push
mov
aas
repz
sbb
lock
pop
jle
shr
out
sbb
aaa
clc
push
std
mov
and
or
out
sub
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
outsl
sub
call
faddl
xchg
lcall
jne
pop
sti
adc
dec
ss
lods
movsb
or
incl
pslld
pushf
imul
jl
in
add
imul
out
scas
cli
pop
in
cmp
jmp
mov
sub
ljmp
lock
jmp
hlt
dec
mov
xlat
inc
jo
inc
aas
mov
jg
mov
sub
outsl
mov
or
daa
jp
std
adc
cltd
or
mov
ret
das
ret
nop
cmp
das
incb
lock
pop
pop
div
cld
adc
push
mov
js
fs
sbb
stc
lahf
loope
jae
jmp
push
das
je
jge
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
jle
insb
sbb
fbstp
cmpsb
bound
das
hlt
mov
out
es
call
xor
decb
pusha
xlat
pop
push
adc
mov
and
call
or
dec
in
loope
or
mov
cmp
int
add
push
pop
aaa
std
out
nop
or
sbb
mov
mov
aas
icebp
ret
inc
xchg
sahf
ror
sbb
aaa
inc
stos
cmp
cmp
shrb
mov
push
clc
loope
loope
mov
lahf
jp
inc
rcl
dec
add
xlat
rcrl
sbb
iret
fdivrl
xchg
lcall
xchg
mov
repz
movsb
pusha
shlb
xchg
sarl
pop
out
jg
jno
ret
fs
cwtl
scas
xchg
cmp
inc
sbb
incl
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
test
mov
in
sbb
xchg
imul
loopne
adc
sbb
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
les
push
inc
pop
adc
dec
dec
test
and
dec
push
xor
add
push
sti
pop
inc
add
sbb
or
nop
mov
xor
pop
iret
and
jg
jae
imul
fldt
movsb
xor
push
cmp
sub
xchg
or
adc
pop
cmp
imul
imul
xor
gs
incl
sbb
or
and
inc
adc
jbe
gs
call
push
jo
pop
icebp
push
mov
ficompl
ss
andl
shrb
sbb
call
mov
xchg
stos
sbb
pop
ret
mov
mov
sbb
repz
mov
add
call
leave
push
or
stc
mov
and
xor
push
mov
adc
fstl
lds
fidivrs
lds
test
or
decl
jbe
out
sub
jno
dec
cmpsl
sarl
lods
std
in
xchg
test
decl
aad
and
push
push
in
push
sbb
pop
test
bound
sbb
pushf
test
cmp
decl
ja
int
ret
jne
mov
cmovb
lret
adc
pop
inc
daa
sub
jbe
dec
jl
and
sar
xchg
pushf
aad
mov
sbb
jno
or
cmp
mov
mov
ret
incl
cltd
jge
xor
nop
jmp
fidivrs
daa
inc
fiaddl
add
lcall
or
leave
sbb
push
xor
mov
add
call
cmp
jnp
inc
push
popf
call
in
cmp
cmp
test
fildl
mov
inc
pop
lods
cmpsl
xchg
xlat
stos
cmp
mov
dec
mov
cmp
cltd
sti
lret
mov
xchg
test
pushf
mov
dec
adc
sub
cmpsb
push
mov
pushl
and
inc
xchg
add
push
insb
or
pushl
xchg
fsubl
dec
into
lahf
push
sbb
sar
ljmp
ljmp
add
dec
xchg
mov
add
loopne
ret
popa
pusha
lods
jmp
mov
fdivl
lea
decl
cmp
cwtl
je
add
inc
into
ds
jecxz
sbb
js
and
lcall
dec
and
mov
and
lret
dec
aas
fcoms
add
inc
sbb
mov
jo
movsb
jnp
fisubrs
add
add
pop
outsl
cmpsb
add
fucomi
movsb
jae
inc
iret
enter
mov
pushl
lahf
xchg
stc
or
push
adc
sti
jb
cmp
push
clc
push
adc
sub
adc
imul
or
rcl
sub
jnp
dec
xorl
xchg
add
dec
loopne
add
jae
decl
or
sub
imul
fnstcw
clc
dec
cltd
mov
cmc
xor
lcall
inc
dec
fdivr
mov
cmpsl
ficomps
cmp
inc
cmpsl
sub
cli
sbb
in
scas
push
dec
sbb
push
adc
sbb
sbb
jo
cmp
sti
mov
push
xchg
mov
sahf
jecxz
and
lcall
mov
mov
mov
cwtl
pushf
mov
imul
push
dec
push
call
aad
mov
sub
loop
or
mulb
inc
push
das
or
add
push
pop
cmp
jecxz
push
mov
xchg
ja
adc
sbb
inc
or
incl
mov
xor
aad
push
sub
pop
mov
jge
cld
insb
adc
lock
js
stos
ret
into
lret
scas
and
aad
imul
dec
ret
dec
fisttpll
adc
jg
mov
enter
sub
sbb
mov
xlat
leave
mov
lcall
rorb
cmpb
loope
and
xor
or
or
xchg
xchg
stos
mov
pushl
sarl
loopne
pop
or
push
xchg
mov
mov
lcall
in
jmp
cmp
out
xchg
pcmpeqb
jno
xchg
push
cld
cmc
xchg
in
test
jmp
sahf
js
sbb
add
pushf
mov
std
xchg
sub
add
out
pushl
shlb
gs
pop
mov
das
adc
mov
lret
jmp
fwait
jno
scas
loopne
ret
scas
jmp
xchg
push
or
jmp
jnp
pop
es
cwtl
rorb
lcall
out
sbbl
add
mov
xlat
mov
pop
daa
jne
pop
add
push
loopne
lret
or
fstpl
decl
jns
jg
inc
sbb
pusha
fiadds
push
jns
inc
cmpsb
ja
jns
mov
scas
inc
jmp
in
jle
mov
xchg
rcrb
les
repnz
mov
testl
jno
sub
lods
jp
fs
cli
mov
adc
jle,pt
loop
or
adc
xchg
jp
es
enter
imul
pop
cmp
lods
mov
dec
pop
push
sub
dec
mov
sbb
scas
push
emms
fdivr
sbb
mov
hlt
mov
clc
jne
vpsrlq
sbb
push
and
inc
call
data16
push
inc
cmp
push
movsl
movl
rcll
lahf
daa
imul
sbbb
and
mov
push
cmpsl
test
fisubs
push
inc
lret
out
sub
pushl
pusha
cmpsb
push
scas
repz
int3
mov
xchg
fildll
or
js
call
es
xchg
scas
enter
jne
sub
lcall
mov
xchg
js
shrl
sbb
aam
sbb
adc
movups
sar
ljmp
pop
movsl
fildl
xchg
sahf
adc
fwait
dec
adc
lods
lldt
incl
clc
xor
adc
add
ja
dec
out
push
xor
test
fwait
xor
fsubrl
sbbb
clc
xchg
lret
cltd
sbb
pop
and
mov
out
mov
decl
jg
es
idivb
or
adc
sub
enter
dec
and
pop
inc
insb
les
adc
stc
xor
repz
xchg
jle
insb
push
add
cmpsb
mov
call
push
mov
jae
mov
inc
sbb
mov
add
push
fadds
gs
loop
xchg
outsl
popa
pop
cwtl
hlt
subb
aaa
or
cmc
pop
cmp
stos
popa
push
and
out
or
loop
add
std
jge
aas
inc
fldcw
cmp
and
xchg
jae
push
dec
xchg
mov
pop
mov
int3
decl
ss
bound
dec
mov
adc
inc
xlat
mov
stos
fstps
in
insb
lcall
decl
pushf
cmc
cmc
or
inc
sub
js
push
lds
in
incl
orl
mov
nop
jnp
int3
leave
aad
fdivrs
xor
mov
roll
les
lret
fnstsw
int3
push
ljmp
dec
movsb
xlat
arpl
leave
dec
imul
xchg
fcmovu
loop
jg
push
add
enter
cwtl
xor
or
ss
xchg
mov
jae
push
jg
loop
or
or
inc
shlb
decb
fwait
mov
inc
rcl
roll
dec
adc
push
mov
mov
dec
dec
fwait
into
fidivs
jb
inc
pop
adc
sbb
sar
lcall
icebp
pop
fs
fxch
test
scas
scas
inc
stc
shr
inc
or
sub
xlat
jg
movsb
ljmp
mov
mov
call
movsl
shll
pop
cmp
push
leave
lret
outsl
bound
and
rorb
das
clc
lcall
fistps
jae
mov
aaa
and
sub
enter
mov
scas
fmul
or
mov
cmpsl
mov
inc
pop
push
mov
into
cmc
decl
insl
jl
cmp
lahf
xchg
cmp
mov
xchg
fs
push
jg
test
cmp
jb
push
cs
or
loopne
mov
aas
scas
mov
jmp
or
sub
aad
xchg
xchg
pop
dec
add
jmp
aaa
leave
lret
test
pushf
jo
stos
test
aaa
dec
in
sub
xchg
jle
pop
int
xor
clc
sbb
call
and
xchg
add
loope
loop
pop
fdivrl
loop
or
sub
and
loopne
aad
cmp
lcall
incl
xchg
mov
dec
mov
adc
jno
int3
add
sbbl
jmp
enter
arpl
std
mov
fadds
xchg
cs
out
xchg
adc
cmpsb
push
pop
mov
mov
sub
ret
repnz
adc
push
jmp
mov
push
call
xlat
clc
cmp
jae
stc
sti
add
cwtl
cmp
incl
dec
divl
loope
cmpl
outsb
scas
mov
clc
adc
xor
negb
in
out
jg
and
cli
add
stos
stos
subb
movsl
mov
pop
dec
or
sbb
lcall
mov
add
dec
push
push
pop
and
fwait
jp
negl
dec
push
ljmp
jmp
cwtl
inc
cmpsb
stos
in
xchg
cmp
lcall
scas
sti
jle
cmc
sbb
insb
push
mov
pop
xlat
jg
jecxz
mov
cmp
dec
clc
or
jmp
les
lds
mov
fwait
pop
add
idivb
xchg
lcall
and
mov
call
idivl
hlt
popa
das
cmp
fimuls
ret
push
dec
adc
cmc
jmp
mov
mov
add
ja
jmp
bndstx
pop
subb
mov
mov
mov
jne
or
cld
jo
sar
dec
xor
mov
push
ja
not
xchg
mov
xor
stc
mov
sbb
and
pop
decb
imul
in
iret
cmp
mov
mov
nop
cmp
adc
gs
or
sub
pop
add
sbb
cs
arpl
mov
adc
jg
pop
fmul
fistl
inc
push
pop
adc
jg
xchg
fsts
or
aad
or
fdivs
pushl
inc
add
outsb
std
push
jns
cmp
pop
mov
jno
cld
js
ret
xchg
jbe
daa
and
mov
sbb
adc
jle
mov
inc
out
fisttpl
insb
xchg
and
stc
mov
insb
add
arpl
scas
jno
repnz
dec
lret
xchg
dec
push
or
mov
decl
jl
mov
mov
rcrb
fsubrp
movsb
lret
jmp
mov
shrb
adc
in
lret
mov
add
ret
incl
decl
inc
jmp
sbb
jle
mov
dec
push
cld
inc
fistl
int3
or
aaa
test
mov
push
out
xchg
jae
ss
cli
add
decl
shr
and
sub
pop
jo
xchg
in
and
mov
and
mov
lods
or
lea
out
test
aam
iret
push
hlt
incl
push
lods
dec
adc
lahf
and
clc
inc
decl
in
and
ret
sbb
jb
outsl
mov
sub
sbb
cmp
iret
sbb
sbb
shrl
es
call
lret
inc
lret
popf
cbtw
jecxz
ss
jg
or
and
jl
dec
scas
mov
mov
aad
pop
mov
jmp
and
inc
shl
fldl
out
js
in
data16
ret
rcrb
popf
decl
cmpl
inc
mov
pop
fdivs
inc
bound
inc
inc
loop
adcl
mov
dec
scas
jl
xor
pop
mov
insb
dec
pop
or
pushf
shll
mov
adcb
jno
add
jmp
dec
push
lahf
cmp
sub
es
xor
ds
into
mov
adcb
cmp
xchg
mov
dec
jp
negb
rorl
mov
inc
and
das
addr16
sub
shrb
sub
stc
push
pop
sbb
mov
lods
lret
fdivr
decl
in
lds
jae
jb
cmp
xchg
pushf
into
out
cs
sar
sbb
pushl
imulb
mov
imull
cs
mov
mov
mov
insl
lret
decl
cs
push
sbb
icebp
mov
enter
test
or
mov
mov
pusha
ja
lds
insb
lret
and
jmp
and
jne
lds
out
clc
push
cwtl
rcrl
dec
fiaddl
mov
and
or
mov
decl
push
sbb
movsl
cltd
roll
in
dec
mov
out
gs
popa
movsb
out
cli
mov
ret
stos
mov
movsl
xor
lcall
jnp
hlt
fcom
repz
outsb
mov
ss
in
repnz
fs
mov
adc
decl
pop
jbe
aas
cld
subl
in
rclb
dec
arpl
bound
inc
jmp
decl
arpl
jnp
cmp
out
jge
xchg
fs
insl
movsb
iret
in
lcall
pop
cli
pop
cmp
pop
outsl
pop
mov
push
sbb
mov
mov
xor
cmp
pushl
lds
pop
push
inc
sbb
sarb
dec
jae
enter
cmp
xor
xchg
fidivl
outsl
clc
mov
insb
lahf
repz
data16
mov
mov
rcll
mov
adc
stos
inc
dec
lcall
dec
and
dec
or
and
xor
or
pop
cmp
mov
jmp
ret
js
sub
lods
aam
cmp
aaa
sbb
hlt
in
pop
daa
mov
leave
fbstp
into
sbb
fs
push
rol
rol
cltd
scas
push
sub
cwtl
imul
jg
call
adc
dec
sti
es
out
dec
mov
nop
les
mov
aaa
mov
movsb
dec
jl
mov
inc
or
je
push
lret
cvtps2pd
add
mov
xor
es
add
mov
jo
outsb
jg
sub
data16
fisttps
arpl
insl
ja
mov
ljmp
rorb
dec
loope
sbb
xor
cmp
les
jge
pushl
leave
stc
mov
push
mov
dec
mov
and
pushl
adcl
loope
xlat
in
inc
or
in
out
addl
lcall
sbb
aad
insb
cmpsb
jge
add
mov
nop
add
push
mov
inc
imul
mov
mov
push
loope
call
xchg
pop
lock
mov
insl
and
aad
dec
orl
pop
std
fmulp
fsts
inc
and
jg
and
pop
cld
test
jecxz
outsl
mov
xchg
dec
stc
pop
lcall
jecxz
pop
cld
movsb
stos
sahf
cmc
hlt
jecxz
xor
insb
ds
dec
sahf
das
cld
mov
in
cli
or
inc
pop
mov
aad
shlb
and
cmp
call
rorb
scas
sahf
mov
js
inc
pop
inc
mov
jb
stos
sub
stos
mov
xchg
aas
sti
push
lret
loop
mov
mov
loopne
into
jp
shl
iret
mov
pop
lock
xor
and
cmp
lret
mov
mov
push
dec
add
fmul
push
inc
dec
inc
out
mov
pop
sub
jmp
ja
jo
jb
cld
adc
mov
pushf
test
out
inc
lret
inc
xor
xor
mov
stos
xchg
ljmp
pop
inc
xor
mov
out
jmp
in
sti
jo
jo
add
icebp
testl
dec
mov
fisttpll
daa
in
pop
dec
cli
lahf
mov
dec
cmp
roll
in
push
aaa
sahf
incl
hlt
stos
in
leave
mov
nop
xchg
mov
fsubrs
xchg
pmullw
decl
test
inc
pusha
mov
adc
cmp
mov
add
jmp
pop
sub
lahf
sbb
adc
or
push
push
lock
insb
incl
cld
es
push
sub
jmp
incl
std
pop
and
ds
xchg
or
stos
jecxz
cmp
adc
ficoml
shlb
repz
xor
stos
cmp
dec
inc
adc
sbb
pushl
scas
inc
lods
dec
push
aas
mov
inc
add
pusha
sbb
xchg
jo
out
mov
xor
ljmp
incb
mov
test
popl
sub
paddd
stos
fldcw
incl
xlat
bnd
loopne
into
push
lock
repnz
ror
lds
test
jp
pop
cmp
sbb
xor
push
inc
call
fs
adc
add
sub
movsl
call
mov
loopne
mov
push
push
pop
cmp
xor
add
pop
lock
pushl
jp
pop
xchg
xchg
lods
movsl
test
data16
add
incl
out
dec
lds
mov
mov
mov
sub
jns
movsb
xlat
mov
cs
push
inc
loopne
fucomip
dec
in
decl
lods
push
inc
shrl
iret
push
mov
pop
or
pop
sbb
decl
mov
and
out
stos
cmpl
mov
lcall
nop
mov
pop
scas
outsl
or
fcomi
push
loop
cmpsb
pop
lcall
lods
mov
dec
mov
pop
lock
pusha
adc
shll
leave
adc
fidivrs
dec
sbb
jo
aaa
jge
dec
mov
les
out
mov
int3
dec
lcall
scas
adc
jl
pushf
sti
movsl
mov
xchg
mov
negb
imul
sub
add
lcall
inc
mov
test
inc
push
ss
out
cli
incl
push
loop
jmp
in
sub
jnp
popa
pop
xchg
cmpsl
bound
sub
add
xchg
fsubr
cmpsl
imul
out
and
in
jp
es
fsubrl
xchg
movsl
mov
in
incl
sub
fildl
rcrl
bound
aam
mov
mov
ljmp
adc
ja
daa
sarb
inc
push
lods
cmovno
test
fisubrs
jns
in
mov
call
stc
sub
adc
mov
mov
add
mov
push
loope
lods
lret
push
call
out
movsb
iret
and
adc
push
clc
out
repnz
mov
call
push
adc
cs
cmp
pop
sbb
shll
cli
inc
cmp
bound
mov
adc
jmp
pop
pop
push
arpl
out
lea
out
cmp
jne
xor
adc
ljmp
push
rcrb
pop
push
add
mov
sbb
xchg
add
lods
ss
mov
cs
inc
mov
adcl
or
mov
pop
add
insl
jmp
add
jnp
pushl
or
inc
push
add
adcl
or
outsb
or
mov
call
shlb
adc
mov
popa
mov
cld
into
pop
scas
jns
xor
out
nop
clc
cmp
decl
mov
mov
jbe
push
lods
push
adc
scas
mov
scas
sub
mov
stc
stc
lcall
sarl
lret
cmp
or
fnstenv
add
mov
jne
mov
mov
jmp
add
in
lods
mov
inc
lea
cwtl
add
inc
pop
je
ja
cmp
call
out
out
xor
iret
dec
xchg
sub
and
out
mov
dec
jns
repnz
pop
test
aad
jne
int3
sub
sti
addb
dec
and
or
xchg
faddl
sub
add
inc
jl
xor
incl
fsts
pushf
fs
pop
mov
sub
mov
pushl
std
decl
dec
fstpl
leave
xchg
jp
pop
and
pop
inc
pusha
fcomip
jns,pt
mov
jae
ds
xchg
fwait
xor
xchg
sbb
xor
decl
add
fmulp
inc
sub
or
lret
out
mov
call
scas
fisubs
mov
pop
fstps
mov
js
insb
mov
jmp
inc
push
mov
cltd
mov
rolb
mov
pushf
cltd
xor
mov
adc
jmp
data16
rol
stc
cmp
shll
arpl
adc
xlat
stos
aas
push
push
cltd
xor
in
jne
mov
jle
xor
testl
push
stos
stos
xchg
js
insb
loopne
test
test
adc
push
test
xor
cld
into
or
call
xchg
mov
leave
out
bound
pushf
popa
outsb
jnp
xchg
push
adc
mov
pushl
out
jle
or
jnp
pop
jo
imul
mov
cmp
cmp
sub
sbb
fwait
ja
add
pop
and
mov
xor
call
jo
sahf
stos
jns
into
mov
xchg
push
jge
test
jno
bound
shrb
or
fcmovbe
mov
incl
jno
inc
test
dec
mov
fimull
out
xchg
and
and
loop
mov
loope
lret
sub
ljmp
imul
cmpsl
aam
enter
lret
mov
imul
lcall
ret
cmp
adc
bound
mov
adc
icebp
ss
adc
jmp
push
or
jp
cmp
arpl
adc
push
adc
jecxz
pop
mov
jmp
jbe
xchg
lahf
data16
clc
bound
and
pop
adc
movsl
and
sbb
out
cli
mov
push
jl
jl
push
das
cmp
dec
leave
inc
sbbl
outsb
ficompl
bound
sbb
lock
sarb
mov
call
aas
ljmp
mov
and
scas
and
cmc
inc
adc
adc
mov
stc
dec
and
xor
aaa
cld
call
loopne
loope
adc
sbbb
cmp
out
pop
cld
sub
xor
cs
sbb
repz
pop
inc
fadds
inc
ss
cld
lcall
xor
mov
xchg
adc
mov
inc
lahf
les
insb
addr16
call
xchg
xlat
ja
fstl
lret
dec
sti
mov
int3
int
sub
mov
stc
imul
ds
rcrl
test
ss
xlat
pop
push
test
out
mov
fistpll
es
imul
cmpb
mov
jle
or
aam
and
ret
aad
lcall
adcb
cltd
push
cmp
and
lcall
aad
pop
out
cmp
mov
xor
pop
in
dec
adc
cld
jmp
daa
add
not
and
sub
pop
and
pushl
cli
push
add
mov
ljmp
jb
test
fcoms
or
mov
fisubl
test
dec
cltd
pop
pop
loopne
ja
sti
sbb
mov
mov
cmp
stc
gs
sar
test
mov
push
xrelease
mov
mov
xor
pushl
push
xor
mov
jnp
adcl
adc
es
inc
mov
jb
xchg
ljmp
add
cmp
jecxz
js
popf
jmp
into
or
inc
add
jp
or
ficomps
bound
sbb
mov
inc
cmp
and
clc
sbb
decl
test
mov
mov
fnsave
xchg
gs
lahf
bound
addr16
mov
incl
fildll
push
push
lahf
sub
lea
push
bound
mov
mov
xchg
push
xchg
hlt
rcrb
mov
pushf
sarb
xchg
mov
jmp
cmpl
push
je
sub
inc
int3
lret
loopne
lock
mov
iret
gs
and
ret
pop
mov
and
sti
and
mov
dec
push
cmp
call
push
push
lret
cmp
fdivrl
mov
lcall
pop
mov
mov
jp
sub
push
pop
or
mov
sar
cmp
scas
xor
or
ds
inc
pop
pop
sub
add
xchg
jmp
int3
add
jg
pushl
or
xor
data16
pop
test
mov
ret
addr16
inc
jo
xchg
arpl
mov
decb
mov
pop
pop
xor
cli
lret
mov
fstpl
pop
adc
outsl
clc
call
mov
pop
imul
movsl
loopne
xchg
lods
xlat
push
pushl
scas
popa
push
pop
insb
push
cld
jns
mov
jae
movsb
mov
inc
call
mov
incl
data16
mov
shll
les
out
rcll
in
ss
ja
mov
push
and
mov
jns
aaa
xchg
xchg
pop
test
or
cwtl
jns
lcall
push
and
push
push
jnp
testl
les
mov
xor
call
sbb
and
add
aad
xor
loop
push
jl
decl
fimuls
sub
pop
sbb
das
add
pop
jb
and
stc
inc
icebp
cmp
push
mov
fsubr
mov
cwtl
lret
push
mov
push
or
lock
nop
std
xchg
fs
insl
jno
pushl
out
adc
fdivr
or
push
xchg
movb
nop
mov
and
mov
pushl
cld
jmp
pop
bound
fdivrs
test
bound
dec
or
mov
jmp
out
and
inc
shll
mov
gs
sbb
outsb
rcrb
push
xor
mov
incl
fistps
inc
js
inc
inc
fwait
rorl
cmp
dec
jg
mov
call
ljmp
sub
adc
or
aam
xchg
pop
inc
out
fisttpl
mov
jnp
cmp
ret
dec
movsl
add
adc
inc
mov
mov
stos
mov
xchg
sub
les
xor
add
dec
mov
mov
xor
inc
or
leave
cmpsb
push
repz
and
mov
dec
ret
adc
movsb
fiadds
xchg
jbe
mov
lea
fs
lcall
cmp
popa
frstpm(287
xchg
xchg
orl
cltd
subb
pop
jle
movsl
rclb
pop
stos
ret
xchg
ljmp
movsb
jo
sub
sbb
adc
cwtl
pop
dec
or
into
pop
ret
or
leave
jmp
incl
pop
mov
add
sub
sub
sbb
imul
cld
add
or
xchg
call
pop
xchg
mov
adc
and
popf
inc
loopne
shr
movl
lcall
jns
movsl
jecxz
mov
ror
cmc
inc
and
sub
inc
xchg
in
fsts
mov
sbb
dec
out
push
push
add
call
decl
and
push
add
xlat
inc
test
xchg
dec
lret
rorl
sti
mov
lcall
loope
cmpsl
call
inc
sti
xor
popf
sti
incl
jg
imul
cltd
addr16
lds
aaa
fucomip
cltd
andb
out
or
push
cmc
enter
adc
int
fbstp
mov
jp
pushl
mov
mov
xor
push
fsubl
std
jp
dec
sub
jo
incl
fbstp
jl
dec
cmp
lods
sub
pop
out
insb
push
mov
pusha
lods
jg
inc
xorl
or
sub
jmp
push
je
inc
popf
and
adc
clc
pushl
mov
pop
addl
lahf
cld
push
jg
fisubrl
frstor
add
inc
outsb
dec
ficoml
cmpb
mov
addr16
and
mov
inc
xlat
lea
mov
jl
sbb
adc
jle
and
jno
arpl
push
push
mov
lahf
inc
ljmp
mov
mov
ds
out
iret
sub
push
pusha
or
jbe
lcall
xlat
adc
movsb
outsb
and
sarl
ljmp
int3
sti
xor
mov
movsl
xor
ds
negb
lret
adc
shll
push
add
add
mov
or
popa
ljmp
iret
pop
dec
cld
hlt
stos
push
lcall
fstps
int3
not
dec
or
pop
xchg
mov
addr16
inc
add
outsl
shlb
decl
mov
jg
rolb
pop
je
inc
rcrb
xchg
in
xor
ljmp
jo
and
mov
mov
scas
dec
and
mov
mov
aaa
repz
jmp
mov
mov
add
jno
xchg
mov
mov
jmp
js
in
pop
mov
cld
jp
or
cmp
pop
and
xchg
sbb
nop
sar
inc
xor
add
and
in
std
pusha
sbb
or
decl
aas
es
mov
inc
rcrb
stc
sub
fwait
je
cs
bound
jecxz
hlt
jmp
ror
fisubs
inc
sahf
sub
jle
add
xchg
lret
pop
jg
mov
aad
ja
cmp
sahf
insl
mov
sbb
sbb
sbb
gs
ljmp
mov
scas
daa
sahf
or
inc
addb
or
pop
dec
jecxz
sub
mov
lods
iret
mov
ja
and
sub
hlt
pop
movsb
pushl
sub
hlt
imul
mov
xor
lret
fidivrl
ja
out
incl
arpl
in
lret
or
jns
mov
lahf
stc
jae
cltd
popa
sub
mov
int
out
clc
mov
mov
xchg
fcoms
inc
adc
fstpt
daa
mov
pop
pushf
dec
push
incl
jecxz
cmpl
std
mov
dec
rclb
ret
add
into
out
in
pop
xchg
jg
mov
or
mov
cs
mov
test
roll
mov
push
xchg
push
cmp
and
adc
push
leave
mov
mov
lods
pop
loopne
ljmp
fisttps
dec
mov
pop
cli
rcr
jmp
jmp
iret
repnz
cmp
leave
mov
fcompl
push
repz
nop
test
push
ljmp
pusha
push
insb
dec
cmp
movl
mov
push
enter
and
jp
push
mov
int3
shld
mov
pop
rorb
call
cmpsb
sbb
mov
pop
fldcw
mov
addr16
dec
out
jmp
sbb
sub
xor
push
sbb
jno
out
add
adc
cli
push
std
call
jl
enter
jb
xorl
stos
inc
imul
out
sbb
insl
fsts
mov
and
sahf
push
gs
fsubl
pop
lcall
dec
xchg
in
dec
out
outsl
in
or
lods
or
addl
lock
mov
aas
mov
mov
inc
dec
pop
xor
add
jle
push
sbb
repz
cwtl
inc
cmp
repz
jmp
sbb
rorl
or
pop
xchg
xchg
in
mov
cmp
fldt
xor
pop
test
sub
ret
cmpsb
iret
imul
sbb
insb
and
aad
and
loopne
pop
add
test
decl
out
push
adc
rcl
mov
lret
movsb
les
in
jns
mov
jo
sti
jb
jl
decl
outsl
xacquire
adc
pop
pop
push
dec
std
and
adc
out
cwtl
mov
pop
popa
clc
nop
jo
ljmp
add
sahf
or
xlat
int
pushl
and
movsb
jnp
in
cmc
insl
js
or
add
inc
or
cmc
xor
inc
pushl
icebp
mov
and
loope
ficompl
mov
mov
inc
mov
sbb
xchg
cmpsl
add
lods
add
and
inc
cmpsb
sub
and
lahf
pop
push
ljmp
ss
imul
lahf
sub
loope
xchg
inc
addr16
mov
push
push
add
jmp
test
jmp
jg
or
sub
pushl
sub
std
cwtl
xchg
adc
and
mov
mov
aaa
mov
aas
pop
mov
sbb
dec
mov
xchg
out
cld
mov
mov
mov
jns
and
mov
mov
in
fwait
jb
adc
dec
es
lcall
sahf
loopne
cmp
out
jmp
incb
mov
popf
cli
bound
sbb
data16
push
jp
aaa
incl
and
cmp
lret
add
sub
sti
stos
sarl
cwtl
insb
clc
decl
setns
inc
jne
sti
jnp
daa
push
cltd
jp
scas
sbb
or
arpl
out
sahf
push
icebp
rol
leave
xchg
fsubl
fistl
xchg
mov
mov
xchg
dec
js
cmp
aaa
pop
sarb
push
xchg
cs
insl
sar
lcall
add
push
xchg
push
in
adcl
loop
testl
jmp
ret
shl
add
ja
add
xchg
test
adc
hlt
jecxz
adc
stc
out
or
lcall
push
jmp
jmp
mov
dec
or
test
bound
pushl
inc
cld
cs
push
rcr
add
jle
pop
scas
cmpsb
push
cld
pop
sbbl
sub
xchg
mov
jg
mov
mov
xchg
fadd
fs
xor
xor
mov
or
popa
xor
pop
bound
in
inc
adc
loope
fcmovb
sbb
lcall
ret
inc
ret
cld
std
inc
push
loope
push
fisttpl
push
dec
sti
leave
pop
pop
mov
test
jmp
xlat
sub
cmp
lds
xchg
pop
jmp
loopne
fildll
sub
sbb
mov
pushl
push
mov
scas
push
cmp
jae
rorl
stos
cld
mov
in
add
adc
push
movsb
nop
sub
sbb
lcall
sub
insl
sub
add
call
adc
shlb
ljmp
sub
rclb
pop
sbb
in
xchg
mov
jp
jge
ficoml
mov
mov
fcomp
xchg
imul
inc
insb
mov
inc
test
sbb
int
aas
mov
fs
add
scas
mov
es
lcall
dec
test
push
movsl
cmp
cld
pushl
add
or
cwtl
loope
into
aaa
inc
or
aad
sbb
jp
lock
pop
imul
imul
add
xor
decl
mov
push
pmullw
repnz
ljmp
decl
pop
xor
sbb
sbb
inc
mov
xchg
pusha
ds
mul
mov
mov
int
lahf
les
or
xor
push
sbb
decl
test
and
hlt
arpl
lcall
cmpl
es
call
ret
test
add
xchg
mov
push
mov
iret
add
fldenv
or
shlb
cmp
pop
fldt
dec
rolb
and
inc
stos
cmp
xchg
outsb
sbb
decl
pop
ss
and
mov
test
adc
ljmp
xor
lods
push
clc
test
out
xchg
jbe
xchg
imul
pusha
xchg
push
imul
push
fcomip
lcall
jle
mov
xor
jmp
in
shrb
mov
pop
xchg
rorl
das
sar
ljmp
sub
aas
pusha
jae
xor
adc
stos
mov
ja
mov
and
xchg
outsl
adc
in
sbb
add
mov
lret
shl
mov
ljmp
lcall
add
addb
in
adc
incl
mov
jp
out
shlb
sbb
mov
pop
and
divl
and
test
clc
mov
mov
adc
popf
test
into
imull
imul
push
call
or
repnz
and
inc
sub
and
pop
hlt
incl
xchg
cmp
mov
sbb
sub
test
inc
adc
or
call
addr16
nop
push
out
mov
dec
and
xlat
dec
or
push
rcrb
sbb
clc
jle
aas
add
cltd
jmp
add
push
cmp
fists
xchg
ljmp
jo
in
ds
mov
call
cli
mov
js
pop
and
mov
sbb
jg
or
sub
pushl
sti
jo
jl
inc
dec
xchg
push
push
jae
movsl
popf
aaa
pushf
rcll
outsb
ljmp
test
and
and
jbe
mov
int
push
dec
les
ret
out
ret
pushl
pop
test
push
inc
dec
inc
dec
lahf
es
aas
and
push
ljmp
decl
jg
in
movsl
dec
lds
in
mov
scas
pop
test
ljmp
adc
sahf
daa
lcall
jo
pushf
jmp
mov
push
lcall
mov
push
jbe
loopne
insl
mov
sub
dec
push
mov
das
rcl
xlat
int
xchg
ljmp
or
insb
and
nop
mov
or
arpl
jns
xchg
scas
push
jle
rclb
fs
cmpsb
clc
cmp
cmc
or
cmp
mov
push
aaa
subl
pusha
rcll
hlt
testl
cmp
cltd
nopl
ljmp
mov
add
mov
mov
shll
jns
fimull
sub
jecxz
jbe
daa
popf
cmp
xchg
je
cmp
sub
cmpl
dec
inc
xor
pop
imul
ljmp
adc
push
adc
push
nop
lds
repz
mov
mov
lret
or
shl
popf
jae
loopne
sub
fwait
xor
jmp
xor
xchg
pop
popa
mov
repnz
mov
or
loope
rcr
mov
fdivrp
mov
dec
lret
xchg
mov
or
aad
es
mov
mov
pop
or
das
add
sub
xchg
aas
in
nop
mov
pop
stos
lock
sub
adc
fdivr
mov
ljmp
mov
int3
lods
scas
xlat
dec
outsl
cmp
stos
clc
or
sbb
pop
sti
call
in
xchg
sub
pop
mov
lock
jle
test
ljmp
test
xor
rcll
dec
stos
je
idivb
add
jp
mov
rol
out
jecxz
pop
clc
call
das
lea
cmpsb
jmp
dec
jnp,pn
movsb
repnz
pop
pushl
cmp
sub
dec
ret
and
or
bound
mov
sub
incl
rolb
ds
jbe
and
mov
pop
and
mov
clc
lcall
inc
pop
sbb
and
ret
lahf
shll
cmp
pushl
push
and
adc
add
hlt
hlt
or
mov
push
sbb
pushl
pop
xchg
in
mov
and
ret
dec
xchg
int3
pop
cmp
mov
and
out
call
push
push
jne
inc
or
fists
aam
pop
dec
add
mov
insb
test
sub
sar
stos
test
lds
jge
jbe
mov
ja
xchg
push
sub
loopne
ljmp
cli
cmp
mov
or
in
xchg
repz
and
push
mov
incl
leave
pop
stos
sub
xor
jnp
xchg
dec
and
incl
sbb
mov
inc
daa
nop
push
dec
int3
aam
add
outsb
adc
incl
pop
jl
lock
add
dec
cmp
popf
jecxz
xchg
inc
pop
out
je
pop
mov
aaa
std
incl
mov
ja
hlt
ljmp
push
xor
mov
mov
arpl
adcl
in
mov
sub
ljmp
sub
mov
xor
mov
pop
iret
adc
jmp
mov
mov
lret
dec
adc
int
les
idivl
scas
insl
in
sub
dec
jg
push
pop
ds
and
add
call
pop
clc
stc
or
pushl
sub
and
js
pop
and
xor
mov
pop
test
xlat
lock
loope
xorb
incl
pop
out
inc
adc
xchg
mov
xchg
mov
lea
push
decl
push
roll
or
jecxz
in
mov
ljmp
mov
movsl
fcmovnu
dec
dec
pop
lods
inc
pop
out
and
xchg
lret
popf
stc
decl
add
rcrl
loope
aas
xlat
test
inc
ret
int
int
pop
gs
aaa
inc
icebp
sub
ljmp
dec
jge
inc
jp
fcoml
and
mov
xor
cmc
iret
xchg
sbb
gs
mov
adc
jmp
and
cmp
fnstenv
sub
mov
add
pop
pusha
inc
idivb
and
ljmp
hlt
call
gs
sbb
sbb
sahf
sbbb
mov
lret
adc
test
pop
stc
push
adc
xchg
jb
daa
lock
sbb
pop
std
jmp
lret
sbb
mov
push
repz
push
xor
orb
call
ljmp
cmp
cmpsb
xchg
adc
lea
dec
jle
std
mov
jb
jbe
test
jmp
cli
mov
jmp
inc
jl
pushf
sbb
lock
mov
xchg
cmp
mov
lcall
push
sub
frstor
mov
xlat
xchg
jbe
and
mov
repnz
decl
dec
aaa
arpl
add
jne
scas
imul
push
mov
incl
dec
sahf
add
xor
out
lea
mov
adc
jge
mov
fcompl
mov
add
jo
shll
fwait
sbb
ljmp
xlat
es
leave
pushf
or
mov
xchg
aad
scas
adc
xchg
test
xchg
lret
sub
lock
push
addr16
push
cld
idiv
call
cli
mov
in
sub
out
lcall
stos
pop
sbb
data16
mov
incl
adc
inc
push
scas
mov
call
add
outsl
and
inc
lret
inc
xchg
inc
pop
sub
aad
mov
shr
sub
aas
cwtl
data16
or
ljmp
aas
jl
in
and
or
ja
rclb
cmp
psubsb
jae
or
xchg
mov
daa
loop
hlt
fwait
push
dec
ja
lcall
adc
call
repz
test
xchg
sahf
out
icebp
push
loop
mov
int3
popa
dec
pop
cld
jns
or
inc
inc
push
ljmp
mov
cmpsl
jg
and
pop
xorl
addr16
push
mov
jg
dec
test
fisttpl
cmp
pop
aas
into
nop
jg
repnz
repnz
int3
scas
scas
jg
outsb
imul
decl
imul
sbb
fwait
push
sub
pop
cmp
push
fldl2e
mov
pop
cmpsl
sub
call
fcmovnbe
or
pop
iret
add
xlat
pop
cld
aad
xchg
sbb
cld
pushl
rcll
jl
push
popa
iret
xorl
jmp
pusha
lods
cmp
movl
dec
jl
pop
cmpsb
and
jl
sub
arpl
mov
add
decl
mov
popf
ret
push
cmp
cmp
pop
repz
cs
push
push
cmp
imul
fcmovb
sahf
push
jmp
fldt
pushf
xor
mov
je
sbb
test
sub
cs
xor
dec
mov
mov
fxch
jae
adc
imul
jg
shr
jl
pop
es
sti
movsl
ficoms
leave
and
pushf
jns
popa
pop
mov
xchg
ja
stos
xchg
dec
in
pusha
pop
inc
or
decl
jecxz
ds
subb
decl
arpl
aas
mov
push
pop
pushl
popa
inc
inc
and
fs
pop
rorb
xchg
xor
outsl
fcomip
lcall
sub
rclb
adc
jo
xchg
js
jl
inc
dec
cwtl
cmp
std
xor
and
cltd
stos
movsl
sbb
pop
into
decl
imull
ss
cmp
imul
icebp
jno
mov
lcall
add
and
aad
xchg
mov
and
mov
sub
pop
xchg
or
decl
jb
xor
pop
mov
stos
cmp
inc
sub
flds
lock
jmp
dec
jl
inc
out
in
add
aaa
or
daa
cmp
mov
scas
xlat
jp
xor
dec
push
out
add
xchg
xor
xor
mov
dec
es
jmp
dec
int
fsubl
cltd
std
popf
push
mov
fcomps
fsubs
xor
popa
mov
cld
jmp
iret
cs
push
pop
sub
xor
adc
cmp
jge
jge
push
arpl
ret
xor
sbb
in
lahf
push
decl
mov
push
adc
les
or
scas
decl
cwtl
fidivl
into
lea
jg
cmp
mov
pop
adc
jmp
nop
push
repz
adc
sub
data16
call
sub
jmp
mov
ds
push
dec
pop
mov
stos
xor
and
mov
add
out
or
fsubrs
scas
sub
mov
testb
incl
loopne
adc
ficomps
mov
fidivrs
cvtdq2ps
andl
ljmp
popf
jp
dec
insl
or
aad
scas
xchg
xchg
push
mov
mov
inc
mov
adc
sahf
mov
cmpsb
mov
add
hlt
je
and
jns
adcb
decl
pop
and
das
cmpl
jp
shll
fldenv
push
in
mov
mov
ret
pushl
push
movsb
andb
ja
xchg
int3
cmc
jbe
scas
mov
sbb
adc
inc
loope
jne
pop
jg
jl
push
sub
je
leave
dec
out
cli
incl
mov
dec
aas
insl
push
push
mov
arpl
sbb
decl
jnp
cs
insb
pop
jl
int3
mov
adc
enter
xchg
lret
mov
bound
push
cmc
push
aad
lods
sbb
mov
dec
test
push
fnstenv
add
pop
xlat
arpl
pop
jp
inc
sub
inc
das
in
jo
lods
adc
mov
shl
out
jmp
stos
mov
jp
jg
fsubrs
cs
jmp
fbld
xchg
pop
scas
insl
sti
push
mov
xor
repz
clc
xchg
or
push
lds
aaa
and
fsubrs
ds
stos
and
xor
dec
ret
popf
ljmp
mov
repz
icebp
inc
jecxz
loope
cmp
add
or
shll
inc
lods
pop
decl
and
xchg
lock
jbe
dec
out
popf
cltd
cwtl
jae
cltd
mov
mov
stos
int
push
cs
cmp
mull
mov
lock
cltd
or
inc
jp
loope
push
cmpsl
jecxz
leave
dec
pop
sub
icebp
lcall
mov
xor
outsl
out
outsb
repz
aaa
icebp
jecxz
movsb
jle
or
repz
pushl
mov
sbb
lods
adc
out
pop
dec
sbb
mov
clc
popa
xchg
push
pop
lods
inc
sub
or
int3
movd
jmp
mov
inc
push
pushf
dec
lds
add
and
gs
mov
jmp
sti
cmp
dec
dec
or
and
add
jg
addr16
mov
jmp
mov
mov
push
in
mov
pop
fs
dec
fdivrs
add
sbb
popa
test
push
xor
xor
cmp
cld
decl
mov
mov
or
mov
mov
push
or
jae
xor
mov
test
fsubrl
sar
call
rcl
push
out
pop
jne
lock
aaa
lock
lods
fisttpl
pop
cmp
push
xor
pushl
decl
cs
push
sub
cmpl
cmp
jge
xor
push
movsl
adc
xor
jmp
sbb
sahf
aaa
popf
adc
mov
scas
pop
out
dec
popf
shl
fnstenv
xor
jmp
pop
mov
mov
movsl
repz
adc
sbb
dec
popl
rcll
incl
lret
sub
push
in
shlb
rcll
fwait
or
das
clc
dec
scas
lea
ficompl
jmp
push
push
lods
in
addr16
jb
sbb
incl
cmc
inc
scas
in
jecxz
dec
int
sub
mov
mov
lret
lods
incl
jl
sub
stc
jle
ficoml
push
out
shrl
out
mov
sub
nop
out
ljmp
cmpsl
les
hlt
pop
mov
ljmp
sar
leave
ret
inc
mov
rcrl
jle
jne
xor
daa
cmp
aam
cld
jmp
out
mov
iret
add
mov
fstpt
punpckhwd
call
add
clc
leave
inc
mov
sarb
cld
fistps
fimull
and
dec
sbb
pop
idivb
imul
clc
jae
push
add
test
push
pusha
decl
xchg
adc
inc
jecxz
push
sbb
add
jnp
lea
pop
popa
loope
cwtl
xchg
decl
ret
inc
stos
pcmpeqb
cs
mov
dec
and
jns
stc
mov
aam
mov
jmp
sbb
mov
iret
and
enter
movsl
ljmp
mov
xlat
fidivs
iret
jo
outsb
fucomp
loopw
xchg
mov
das
rcrb
mov
xor
push
dec
mov
dec
loope
aam
xor
cmpsl
call
es
insb
cmp
ljmp
xchg
xor
cs
pop
pop
mov
pop
or
rcll
xchg
ljmp
lcall
mov
sub
add
lds
xchg
mov
lods
fsubr
dec
jg
jle
add
in
adc
scas
cmpsb
outsb
stc
adc
daa
pop
mov
ljmp
sahf
dec
movsl
movsb
daa
mov
arpl
cmp
decl
pop
fldl2e
pop
xchg
ss
enter
aad
test
loopne
sub
mov
addr16
iret
notl
or
js
mov
out
or
decl
dec
in
popa
cmp
dec
nop
lock
mov
test
dec
xchg
pop
sub
scas
fnstcw
mov
dec
mov
movsl
je
fbstp
loope
hlt
cmp
pushl
movsb
push
mov
dec
subb
out
mov
aas
adc
dec
in
ljmp
insl
ljmp
jmp
stos
jne
jmp
sarb
leave
pop
pop
jmp
pop
sbb
sti
idiv
into
cmp
sbb
das
clc
lcall
adc
xchg
sbb
and
scas
fcompl
mov
in
call
cmpsl
jbe
push
pop
push
lret
xor
xor
insl
and
les
ss
xor
mov
repz
mov
jle
addr16
pop
rcll
sub
cmp
sub
sub
jbe
cmp
inc
dec
lds
xor
mov
xor
fisubs
nop
jo
inc
sub
dec
and
sbb
cmp
sarb
out
shlb
rclb
xor
pop
movsbl
pop
lock
mov
inc
sti
and
xchg
xchg
inc
stc
or
loopne
cmpl
scas
rcll
call
jne
add
mov
popa
sub
out
popf
lahf
loope
mov
loopne
call
xor
test
sbb
sub
repnz
xchg
pop
inc
push
std
jns
jge
icebp
leave
push
jp
dec
gs
pop
leave
pop
adc
mov
test
mov
pop
dec
or
lcall
cmp
hlt
in
addr16
movsl
dec
add
les
pushl
sbb
inc
mov
imul
inc
jge
cmpsl
negl
dec
mov
movsb
call
jl
int
movsl
jmp
add
mov
fstl
xor
adc
jmp
test
add
movsb
xchg
lods
push
je
sbb
push
dec
int3
xlat
dec
out
icebp
incl
imul
mov
mov
scas
xor
adc
sbbl
pop
push
cmp
iret
loopne
cmc
xor
mov
mov
push
jo
loope
jmp
ljmp
adc
mov
cli
sub
pop
mov
push
lea
inc
jl
add
decl
out
or
mov
sub
dec
pusha
outsl
mov
jno
dec
fisubs
icebp
lcall
sahf
hlt
jg
lock
add
stos
mov
orl
xor
lahf
sub
std
cli
mov
ljmp
clc
hlt
adc
dec
mov
sub
inc
in
sarb
mov
les
and
call
pusha
test
xor
sbb
sub
mov
mov
lcall
icebp
test
jbe
leave
nop
add
nop
cmpsb
je
ret
sbb
call
sbb
and
lea
mov
push
sti
fnstsw
pop
lock
mov
cld
dec
jno
xor
insb
stos
loopne
sbb
in
mov
sbb
sbb
lcall
es
pusha
dec
std
movsl
aad
jmp
enter
dec
jne
xchg
imul
or
fisubs
enter
test
jp
add
lods
mov
sub
sub
insl
insl
xchg
jmp
insb
cmp
xor
fnstenv
mov
sahf
shlb
lods
xorb
les
push
push
cli
jecxz
add
call
cmp
sub
and
ljmp
andb
or
lcall
in
push
ss
rsm
mov
mov
call
hlt
lcall
out
mov
add
jae
dec
dec
jl
insl
in
sahf
imul
cs
mov
push
mov
lods
lea
xchg
negb
xchg
pop
pop
leave
or
pusha
les
clc
ljmp
inc
outsb
mov
in
inc
xor
cmp
in
out
add
mov
call
cmp
mov
mov
mov
xchg
cmp
adc
jno
paddusb
xor
jmp
cli
cli
adc
pop
xchg
loop
mov
in
lahf
call
repz
dec
cs
pop
sub
lret
clc
or
cmp
test
aaa
rolb
leave
mov
call
inc
lret
orl
mov
cld
fiaddl
adc
cmp
decl
iret
test
ret
push
inc
dec
mov
push
into
int
pop
aam
pop
test
repnz
ljmp
pushl
xchg
loope
aam
nop
pushf
jae
pop
out
jbe
iret
out
dec
aad
pop
and
push
inc
sbb
mov
mov
nop
fs
mov
loop
xchg
inc
hlt
sub
sub
dec
movb
jnp
or
mov
scas
fdivs
cmp
outsb
pushf
cmpsb
mov
insb
push
std
jmp
sbb
pop
xchg
mov
inc
and
loopne
das
push
stc
push
and
jmp
mov
push
xor
fidivl
pop
push
or
dec
dec
ss
rcrb
mov
ljmp
dec
xor
pop
mov
ds
ret
loopne
add
adc
fistpll
mov
sub
dec
push
pop
fldl
xchg
in
hlt
add
jae
jns
movsl
push
std
decl
int
inc
inc
push
dec
out
adcl
cmp
mov
loopne
das
rcl
in
insb
sub
addr16
add
fnstcw
cmp
in
cmp
movsb
xor
sub
mov
repnz
fadds
int
push
jp
insl
movaps
inc
mov
mov
out
ret
mov
push
iret
or
scas
inc
mov
incl
ss
rorl
mov
push
push
mov
sbb
leave
ljmp
lods
pop
or
sbb
hlt
jle
pusha
mov
das
cli
incl
fstpt
imul
jns
lahf
dec
lods
jbe
clc
ss
and
ret
jne
mov
fdivr
jmp
dec
xor
sbb
push
mov
bnd
mov
jne
mov
loop
sar
sbb
data16
stc
hlt
or
mov
dec
lret
sub
lock
jl
sbb
dec
repnz
mov
les
cmp
or
cmp
repz
decl
pop
mov
cmpl
call
xchg
in
mov
mov
jmp
dec
mov
je
out
aam
and
sub
data16
cmpl
lcall
lret
or
out
lock
push
sub
push
test
cmpsb
mov
lcall
mov
sbb
xor
rcll
cmp
mov
ljmp
das
dec
sahf
cmp
mov
ljmp
pop
jle
popa
pop
scas
pop
inc
sbb
std
and
das
jmp
lcall
pop
gs
sub
popf
lahf
xor
cli
jl
scas
add
fbld
lcall
sub
xor
mov
xor
dec
out
call
clc
push
scas
push
push
adc
addr16
mov
push
sbb
cwtl
int3
mov
imul
cmp
adc
mov
and
das
popf
mov
jmp
sar
jp
in
out
popf
lods
outsb
inc
lods
push
push
out
ja
jg
jo
test
push
clc
ljmp
call
out
cltd
mov
pop
cmpb
mov
adc
push
adc
popf
and
lods
add
or
out
shrl
mov
pushl
fsts
mov
or
fisttps
mov
loop
cmpl
decl
jnp
and
iret
and
leave
pop
lret
cmp
insb
xchg
insl
adc
mov
mov
dec
imul
xchg
dec
jns
les
push
incl
push
jne
mov
jg
loop
adc
fiadds
lds
dec
add
out
jns
lcall
fists
dec
sub
sub
repz
inc
addr16
mov
dec
loop
incl
jae
mov
movb
cmpsb
xchg
xchg
fwait
call
jle
or
out
mov
call
or
xchg
stos
lock
es
bound
aad
call
cmpsb
xchg
cmovb
xchg
sbb
jo
cmp
mov
lret
out
mov
pushf
adc
push
inc
xor
xchg
mov
xchg
je
loope
loopne
pop
jmp
jae
xor
mov
xchg
call
in
or
jp
push
pop
cmc
xchg
insb
mov
push
mov
or
and
push
cs
ljmp
fistpl
inc
xor
bound
dec
repnz
int3
int
mov
jo
jg
addr16
out
movsb
repnz
daa
push
enter
mov
sarb
lods
das
sbb
decl
pop
xchg
inc
rcr
shrb
call
loopne
stc
lock
mov
jb
decl
jge
cmc
pop
jno
loopne
mov
aaa
andb
push
call
cmpb
mov
sbb
inc
dec
ficoms
arpl
cmp
aad
popl
bound
imul
xchg
sub
or
sahf
decl
sub
aad
js
leave
and
xchg
push
pusha
jecxz
adc
stos
cmpsb
add
mov
jge
push
dec
adc
lods
jmp
es
pop
dec
mov
dec
pop
sub
call
in
jl
xchg
stos
in
orw
sbb
imul
fcomip
incl
lahf
add
pop
dec
dec
loop
mov
and
js
and
and
decl
sub
ja
pushf
mov
in
test
loop
cmp
test
mov
lcall
pushl
push
scas
jae
mov
inc
cli
js
push
mov
cltd
mov
cmp
or
dec
daa
inc
and
fmuls
or
or
leave
fdivr
xchg
rcll
and
push
sbb
fisttps
cmp
xchg
mov
inc
xor
lret
mov
jge
loopne
dec
jmp
pushl
push
add
lcall
mov
pop
xchg
fcmovu
shll
push
push
decl
sbb
jp
or
mov
adcb
ss
sub
pop
scas
xchg
movsb
mov
std
mov
cmp
push
cmp
xchg
inc
xor
leave
fidivl
push
movsl
jecxz
lcall
loope
pmuludq
incl
dec
sbb
std
mov
aaa
pop
iret
inc
es
test
sbb
popa
sbb
je
dec
orb
shl
ljmp
fdivrs
adc
fs
fmuls
test
sti
aas
pop
xor
inc
fdivs
mov
ljmp
fmul
cs
arpl
rcrl
mov
jp
aas
sbb
movsl
push
xchg
pop
ljmp
js
ret
loope
in
and
iret
mov
in
cmpsl
sbbb
lock
lds
or
into
arpl
add
incl
lods
icebp
sbb
jg
loop
ret
push
decb
stos
mov
pop
mov
sub
out
xchg
adcb
dec
cmc
icebp
fcmovb
cs
lret
sub
lcall
insl
adc
add
adc
dec
inc
dec
insb
sti
xor
xchg
add
xchg
inc
and
pushl
imul
inc
mov
inc
int3
cmp
ds
and
mov
ret
das
sar
bound
lret
jnp
jle
add
and
or
cli
scas
xor
jp
dec
gs
fistl
sbb
mov
adc
ljmp
ljmp
int3
jb
push
push
imull
jb
mov
sub
ds
mov
call
out
jge
or
scas
scas
dec
fwait
sub
jbe
or
mov
sbb
mov
mov
mov
addl
stc
outsb
mov
arpl
sbb
push
ljmp
jbe
fsubl
lcall
dec
mov
iret
movsb
sar
lcall
jge
pop
adc
test
out
sbb
lock
lock
mov
jne
mov
ds
cmp
mov
test
and
sbb
lcall
addr16
cmp
aas
lret
or
mov
mov
dec
mov
subb
adc
arpl
les
adc
push
dec
dec
add
push
test
sbb
aas
loopne
rorb
orb
push
mov
sahf
cmp
and
fstp
or
gs
outsl
sbb
xor
sub
mov
mov
add
pop
pop
cmpsl
fs
mov
sahf
cld
in
push
jg
lcall
insb
div
lret
imul
dec
rcr
fstps
dec
aam
inc
jns
mov
and
jl
inc
jl
divl
mov
insl
out
jmp
insl
lock
or
cmp
cmp
xor
cmp
pop
sahf
ljmp
sbb
adc
add
mov
add
ja
daa
std
out
sbb
aam
xor
jmp
and
sub
lds
jmp
jnp
mov
pop
in
cmp
lcall
mov
jmp
xor
mov
pop
jmp
push
das
fimull
enter
mov
mov
push
mov
fs
mov
bswap
fs
sub
stos
adc
loopne
and
je
fcomip
aad
adc
push
sbb
add
jl
xchg
pop
add
incl
add
add
push
jle
pop
movb
cmpsl
add
cwtl
jg
js
cltd
xlat
fldcw
pop
hlt
pop
dec
outsl
add
mov
in
out
add
inc
mov
decl
ljmp
bound
inc
gs
mov
pop
pop
dec
xchg
pusha
pop
sarl
and
sub
and
fildl
mov
cld
sti
gs
outsb
jbe
adc
aas
adc
into
je
pop
loopne
dec
mov
sbbb
or
cs
mov
xchg
cmp
and
push
insl
inc
jo
mov
pop
fs
cmpsb
mov
sub
into
mov
dec
lret
arpl
test
outsl
ss
int
in
dec
inc
cmp
jmp
test
add
xchg
or
mov
or
and
gs
shll
mov
push
ja
incl
stos
ret
mov
jbe
ret
xchg
fisubl
cmp
shlb
decl
and
or
sbb
pop
dec
stc
setg
cmc
shlb
fisubs
iret
incl
mov
je
sub
ret
imul
mov
in
pop
push
jg
decl
mov
test
add
call
sub
ret
cmp
add
rcrb
dec
dec
mov
rcll
hlt
incl
push
xchg
sbb
mov
inc
daa
ret
or
add
aaa
jl
ds
lret
pop
movsb
idiv
ljmp
jne
ficoms
and
cmp
dec
jns
fidivl
add
push
mov
xchg
jmp
out
les
enter
jp
push
loop
dec
dec
mov
dec
rcr
xorb
rolb
pop
or
cmpsl
jns
or
outsb
push
test
xchg
mov
xchg
pop
ljmp
or
cmpsb
mov
jp
clc
movsl
push
ljmp
out
lcall
inc
test
pop
xchg
cmp
subw
mov
push
mov
cmp
insb
sahf
in
sub
add
inc
cmpsl
rolb
out
cwtl
negl
cmp
pop
cmpsb
xor
jnp
sub
pop
dec
subl
pop
in
jbe
push
push
decl
jbe
inc
mov
add
dec
mov
pop
inc
and
and
push
mov
fcoms
lcall
outsb
mov
psubsb
push
test
inc
sahf
cmp
cmp
cltd
or
repnz
ljmp
call
std
fadd
xchg
adc
shlb
mov
jp
pusha
xorl
popa
lcall
pop
jle
loopne
imul
xchg
cs
enter
fisttps
push
inc
ret
inc
stos
xor
cmc
jns
lcall
cmp
jg
mov
fcoms
out
inc
xor
push
int3
loop
xchg
xor
add
gs
ja
aaa
mov
cmp
ljmp
adc
insb
xchg
xchg
adc
jns
or
xor
xchg
mov
mov
and
or
or
sub
xchg
jae
cmp
subl
jg
inc
cmp
push
shll
xchg
add
cs
jns
cwtl
jmp
mov
cmc
daa
enter
mov
ljmp
or
mov
lock
cld
mov
sub
lods
xor
incl
out
adc
or
xor
out
test
daa
mov
mov
icebp
lcall
scas
out
dec
mov
imul
fcmovnu
sbb
mov
repz
push
fbld
aad
fldenv
pushf
test
bound
lahf
and
xor
hlt
std
incl
add
xchg
int
mov
rorb
or
xlat
cmpsb
or
dec
insb
cmpsl
hlt
mov
cwtl
adc
shlb
in
test
mov
cmc
adcl
sbb
dec
sub
jo
aaa
adc
mov
mov
ljmp
gs
cld
pop
lea
cmp
lcall
push
fs
mov
in
xchg
or
xor
mov
pop
mov
push
lea
jmp
bnd
loop
push
pop
add
or
aam
mov
pop
jne
dec
pop
fsubs
mov
push
cld
pop
xlat
ja
mov
add
or
push
lock
test
xor
lds
movsb
pop
adcl
xchg
test
sub
incl
cmp
jbe
popa
mov
out
sbb
fiadds
xor
decl
adc
sub
dec
adc
xor
mov
xchg
frstor
loop
mov
jmp
outsb
rolb
dec
cltd
fldlg2
addr16
incl
mov
ds
movsb
jle
jecxz
mov
stos
xchg
xor
pop
sub
mov
sbb
lods
push
cmpsb
enter
inc
fsubrs
in
push
enter
ss
hlt
fcoml
add
sub
jl
and
mov
xchg
rolb
call
and
in
mov
jmp
adc
sub
jmp
out
rclb
call
pop
mov
adc
cmp
es
dec
pop
clc
mov
out
decl
cmp
enter
clc
stc
lcall
mov
jo
pop
xlat
sbbl
inc
jnp
incl
std
or
stos
in
shl
into
mov
mov
and
cmp
xchg
or
xchg
mov
jmp
push
xchg
loope
adc
jnp
xor
xor
jns
cmpsb
jne
xor
lcall
mov
push
sub
cmc
pop
pushf
pop
lock
adc
ret
mov
repnz
inc
ja
mov
or
stos
pushf
fmul
add
loopne,pt
leave
jb
add
pop
ljmp
and
dec
push
or
rorb
pop
cltd
pop
mov
sbb
pop
lock
incl
pop
sub
sub
cmpsb
adc
test
out
push
inc
push
ret
and
iret
std
dec
sub
add
jl
xchg
enter
adc
push
jmp
dec
ret
push
lret
mov
ja
outsb
inc
aaa
adc
addb
inc
jg
aam
add
ljmp
rol
test
dec
mov
fnstsw
daa
mov
lret
push
cmp
lods
jne
cmp
ljmp
ss
icebp
sbb
call
adc
pop
fists
cmp
out
fs
mov
push
daa
sbb
push
sarl
decl
out
data16
or
jecxz
add
aam
jg
sbb
sbb
arpl
dec
subl
sbb
call
test
lods
mov
cmp
xor
mov
aaa
fs
lret
aam
cmpsb
ljmp
jne
lahf
ljmp
aad
cmp
jno
je
ljmp
adc
aaa
in
push
pop
xor
jmp
test
icebp
sub
out
addr16
adc
pushl
mov
or
ja
dec
jp
popa
xlat
lahf
inc
cld
call
lcall
pop
jno
xchg
fwait
mov
mov
push
mov
sarl
pushl
push
adc
xchg
add
and
iret
mov
mov
pop
xchg
int3
jno
decl
ds
mov
or
lret
pop
mov
xchg
add
andb
jo
imul
xor
push
lds
out
popa
dec
lds
pushl
xor
xchg
jl
ja
repz
inc
sahf
ljmp
cli
cwtl
and
and
push
dec
sub
fstpl
filds
mov
adc
cmpsb
jo
jmp
dec
mov
or
leave
sub
pop
fs
add
sbb
stos
dec
sub
and
lea
sahf
add
ss
pushl
add
movsb
jmp
mov
push
pop
push
les
mov
lcall
data16
or
dec
rclb
in
sub
hlt
or
scas
mov
xor
in
adc
shlb
int
inc
lods
ret
loopne
push
arpl
xor
xor
dec
nop
mov
pop
xchg
jns
iret
dec
jmp
cwtl
sub
pop
mov
jmp
sbb
inc
test
inc
lret
stos
add
insb
stos
scas
imulb
jbe
fcomip
incl
inc
sbbb
mov
xor
test
insb
lcall
jle
mov
and
and
test
add
or
pushl
jae
stc
sbb
mov
dec
stc
mov
mov
lret
pop
fs
cwtl
aaa
dec
pop
add
or
out
clc
dec
mov
jnp
outsb
jle
adc
test
mov
idivl
xchg
pop
pushf
pop
inc
mov
push
dec
outsl
mov
pushl
add
inc
ljmp
call
std
inc
mov
or
js,pt
add
cmp
sarb
shrl
jno
sbb
ljmp
pop
adc
inc
fcoml
and
dec
mov
cmc
inc
or
sbb
pusha
test
add
xchg
xchg
push
js
mov
xor
cld
lea
stos
xor
leave
ja
jge
xchg
push
push
add
aam
ds
call
adc
lods
mov
inc
cmp
ljmp
shr
pop
icebp
xchg
and
fistpll
sti
pushl
pop
cmp
outsb
sti
sbb
sbbb
inc
xlat
shl
inc
insl
js
pushl
or
and
sbb
sbb
ds
jo
jnp
repnz
daa
xchg
or
jmp
jo
inc
std
xchg
cmpsb
dec
repnz
std
jp
out
aad
xchg
sub
aad
data16
pop
add
decl
jg
cmp
xchg
dec
lcall
aad
leave
into
xor
adcb
decl
jp
sarb
sbb
fadd
test
ss
adc
fsub
fimull
int
push
decl
and
imul
ret
lret
cld
scas
jo
mov
mov
or
sbb
adc
sub
inc
push
repz
insl
pop
insl
fisttps
mov
and
sub
ljmp
ljmp
push
imul
jne
out
dec
fstpt
cs
dec
decb
push
inc
push
icebp
ljmp
jno
cmpsb
jl
pop
loopne
mov
sahf
shll
push
xchg
jns
xchg
lods
inc
adc
sbb
jecxz
xor
xor
mov
ljmp
cli
mov
leave
cld
cli
bnd
mov
mov
out
jmp
ljmp
incl
loop
sti
push
pop
cltd
sbb
inc
psrlw
inc
xchg
xchg
sbb
mov
push
mov
or
incl
das
out
pop
dec
adc
jecxz
or
xor
dec
cmp
aad
pop
xchg
idivl
lcall
aas
mov
jecxz
xor
movq
pusha
scas
andb
lock
idiv
lds
pop
cmp
pusha
lret
inc
xchg
inc
outsb
xor
enter
testb
orl
inc
sbb
lcall
dec
call
cmp
inc
and
pop
icebp
pusha
in
sbb
ret
lods
cwtl
dec
popa
and
sbb
dec
call
cld
scas
cs
popf
stos
jae
cwtl
cld
fld
push
xorb
addr16
loopne
decl
mov
xor
inc
mov
lret
jle
lcall
mov
pop
daa
cmpsb
mov
popa
insl
ret
push
mov
fs
jnp,pt
xor
icebp
in
sarb
decl
xor
test
sub
aad
adc
jbe
pop
mov
mov
insl
aas
cmpsb
lea
sahf
jg
inc
mov
cmpsb
insb
cmp
imul
push
cmp
les
ret
jle
pop
incl
mov
pmulhw
xchg
inc
dec
outsl
jle
cmp
mov
pop
sahf
mov
lcall
fsubl
cld
xchg
aad
xor
das
aad
sti
je
mov
mov
out
pushl
lods
push
ds
fistl
adc
int
mov
aam
xchg
in
xlat
fcmovu
clc
js
cmp
call
pop
pop
movsl
test
hlt
mov
sbb
jecxz
in
aad
mov
cld
call
mov
sar
aam
aam
jno
xorb
call
pop
ja
out
and
cmpsb
cli
push
aas
orl
sub
cmp
test
add
pop
lcall
divl
cmc
sbbb
xor
push
ss
and
addr16
push
mov
mov
pop
adc
xlat
pop
mov
lahf
jnp
lock
std
add
cwtl
cld
ret
add
push
xchg
adc
bound
sbb
jecxz
dec
jb
pushl
ret
mov
jns
out
popf
inc
push
sbb
pop
inc
mov
pop
cmp
ljmp
cli
mov
mov
cli
adc
enter
push
addr16
push
and
push
mov
js
xchg
popa
push
mov
icebp
arpl
aas
out
aad
cld
mov
jmp
mov
out
push
int
adc
jbe
pop
setp
mov
fs
ljmp
ficompl
pusha
push
cs
push
mov
scas
jge
cs
loopne
push
mov
mov
dec
sti
ret
hlt
mov
mov
cltd
xlat
push
mov
xchg
or
mov
in
mov
ds
jecxz
movsl
mov
movsb
dec
inc
aam
loope
sub
mov
ja
daa
pop
xlat
ds
clc
popa
xor
repnz
lods
pop
movl
ds
ljmp
out
xchg
ret
stos
cmpsb
test
mov
test
stc
and
mov
aas
ds
in
cmc
decl
insl
and
cmpsb
add
cltd
push
rorb
and
clc
ljmp
push
les
fsubl
in
sub
rorl
mov
sub
mov
and
es
add
inc
ficoms
sbb
movsl
popl
mov
mov
repnz
cmpsb
xchg
ss
cmc
testl
cmp
mov
xchg
ds
xor
and
or
clc
pushl
push
test
stos
faddl
jno
xor
add
lcall
push
mov
fsub
enter
xchg
rclb
xchg
clc
popf
aas
jge
mov
mov
mov
jnp
push
mov
cmp
add
adc
fcom
loop
mov
xchg
bound
loope
lcall
sbb
cmp
pop
xorl
xchg
or
cmp
cmpsl
fld
xor
push
ret
inc
outsl
popa
mov
xchg
jmp
cmp
incl
pop
out
loope
mov
dec
sub
and
xchg
out
insl
addr16
sub
adc
add
ljmp
dec
shr
test
test
or
xor
mov
loopne
mov
jmp
in
dec
jnp
xor
pop
or
stc
pop
ret
jmp
jg
scas
push
cltd
and
lcall
repz
out
aas
and
sbb
adc
jecxz
repz
inc
in
in
rol
lods
xlat
add
aam
ja
push
lcall
aam
sbbl
into
and
inc
call
adc
test
push
leave
das
jl
cli
leave
lods
lea
xorb
insb
jg
mov
push
nop
inc
dec
loope
mov
mov
or
in
lret
push
jl
jns
sub
daa
mov
push
mov
out
push
out
adc
cmpsb
js
decl
and
and
rcrb
push
add
jno
dec
xchg
pushf
pop
mov
dec
inc
pusha
incl
add
imul
sbb
xchg
mov
mov
das
aam
popa
cmp
push
ret
and
cmpl
and
adc
mov
out
ljmp
es
mov
xorl
in
sub
jmp
jl
dec
cmp
fwait
pop
push
sub
and
call
xchg
lds
cs
inc
ds
pushl
aad
int
and
ja
mov
cwtl
hlt
xchg
sbb
imul
sar
call
jmp
ja
enter
fwait
sbbb
fdivs
in
mov
mov
fisubrl
movsb
ret
jl
cltd
subl
ret
jg
cmp
lcall
in
stc
cmp
add
or
insl
sub
test
sub
decl
push
inc
xor
icebp
or
mov
jge
mov
sbb
call
mov
sbb
leave
out
push
arpl
fbld
test
mov
cltd
jecxz
jmp
adc
inc
xchg
in
out
rolb
cmp
mov
push
addl
icebp
test
outsl
mov
outsb
and
fistl
adc
pmuludq
ss
inc
sahf
into
enter
ljmp
mov
xor
repnz
pop
addb
push
adc
jb
and
stos
or
or
xchg
fisubrl
jg
push
push
sahf
push
ja
cmp
in
pop
outsb
dec
out
mov
repnz
sub
pop
not
in
rorb
pusha
lods
jmp
cltd
into
push
push
sbb
fs
repnz
ror
and
mov
lcall
dec
xor
nop
and
divl
push
outsl
dec
add
pusha
loop
jmp
jmp
xorps
aas
pop
and
incl
jns
cmp
adc
push
out
pop
and
jb
sbb
xchg
jnp
or
subl
ficoms
cmp
ljmp
inc
dec
testb
sub
xchg
sti
in
xor
cltd
xchg
jl
inc
dec
incl
fs
sti
push
or
repz
xchg
pop
jmp
in
lahf
add
decl
and
xchg
shl
dec
outsb
push
mov
idivl
jb
fwait
repz
stc
mov
add
scas
pop
pop
data16
sbb
ljmp
push
push
xchg
repnz
aam
insb
mov
hlt
mov
xor
jg
call
aas
pop
jo
pop
pop
jae
mov
mul
lcall
mov
aaa
cld
decl
insb
int
fwait
xchg
adc
not
ret
movsb
and
jmp
std
mov
scas
dec
push
xlat
lds
daa
scas
ret
sbb
add
jp
mov
hlt
xor
push
push
jmp
and
xchg
fsubrs
pop
sbb
aaa
arpl
stos
cli
pop
stos
or
sub
xor
outsl
sub
insl
jnp
adc
mov
sub
movsb
mov
mov
push
std
xor
imul
aaa
std
mov
push
jo
addb
jns
cmp
or
jne
adc
xchg
push
ret
ds
dec
mov
jnp
pop
sbb
repnz
jmp
mov
mov
mov
jb
sbb
push
mov
lea
call
or
adc
or
jg
loop
fcom
jmp
leave
push
daa
rclb
outsl
clc
pushl
aaa
or
ja
ds
mov
les
cmp
decl
leave
pop
int3
cmpsl
cmc
mov
idivb
dec
js
mov
lods
jb
lock
and
fidivrl
or
push
popf
sub
inc
shrl
out
idivl
lock
xchg
dec
jg
mov
xchg
gs
push
lret
push
mulb
aam
mov
popa
xchg
cltd
cmpsb
dec
repz
jle
inc
inc
out
ja
xlat
cmp
pop
jmp
stos
icebp
sbb
sub
out
push
cltd
cmp
test
pushl
mov
mov
mov
push
fsubrl
jle
imul
jg
inc
addr16
das
cld
lods
imul
loop
cmc
sbb
pop
mov
mov
jne
ljmp
pop
pop
sbb
repz
add
call
push
in
pop
or
mov
pushl
leave
xchg
xchg
inc
call
lods
cwtl
add
inc
andb
inc
imul
mov
sbb
loop
dec
sbb
out
insl
mov
and
dec
out
dec
push
andb
pushl
ficoms
cli
xor
bound
test
and
mov
cmp
mov
cmpsl
jb
ljmp
fildll
sub
dec
insl
mov
inc
adc
nop
adc
addr16
mov
sbb
mov
xchg
imul
ja
adc
std
pop
inc
cwtl
fsub
loopne
add
pop
es
pushl
xlat
pop
and
imul
pop
mov
cld
mov
adc
mov
clc
aas
xchg
cmp
and
or
incl
xchg
xchg
jbe
jge
lods
lcall
mov
decl
sbb
arpl
repnz
mov
ds
inc
fimull
inc
mov
mov
mov
fstpl
call
imul
clc
jle
mull
sub
cmp
jmp
xor
popf
push
nop
iret
mov
call
jnp
sbb
cld
call
into
or
ret
int3
jmp
jmp
loopne
dec
pop
fists
mov
jb
push
adc
inc
sub
test
call
pop
in
cmp
hlt
shrb
cmp
sbb
mov
dec
pushl
lret
aad
mov
sarb
inc
and
jno
adc
or
fildll
arpl
push
hlt
imul
in
ret
fdivrs
stos
decb
mov
shrl
mov
dec
xchg
sbb
call
pop
jecxz
mov
mov
adc
pop
ja
aam
or
in
xchg
scas
ss
cmp
cmp
and
push
sbb
cli
sahf
cwtl
lret
rorb
mov
mov
popa
outsb
sbb
repnz
or
jg
js
xchg
inc
mov
scas
cmp
int3
shlb
call
pop
mov
fs
lcall
ds
xchg
mov
cmp
xchg
push
jbe
xor
hlt
cs
das
decl
out
lcall
hlt
pop
push
mov
sub
stc
push
pusha
fs
mov
les
xchg
mov
push
mov
aad
ds
adc
push
insl
cld
daa
xchg
gs
pop
pop
inc
sbb
decl
mov
mov
xor
insl
push
inc
cmp
stc
int3
test
or
sbb
sbbl
popf
cmp
pusha
in
ret
mov
call
stc
add
mov
mov
js
dec
jp
shl
adc
aad
leave
pop
mov
cs
pushl
cmpsb
pop
jo
fidivs
adc
jecxz
stos
xchg
ja
push
mov
icebp
and
cmp
mov
call
cmp
mov
or
ljmp
cmp
dec
mov
jp
lock
add
jae,pt
xor
test
jne
sarb
hlt
lock
loop
mov
inc
clc
icebp
jno
scas
pop
imul
mov
es
or
jnp
mov
push
xchg
hlt
bound
sbb
call
cmp
incl
hlt
in
jmp
aam
add
mov
jg
lcall
xor
cltd
inc
leave
jnp
enter
nop
xor
int
push
mov
in
push
pop
sub
cmp
mov
dec
or
lret
nop
pop
cmp
and
sar
incl
adc
das
sbb
enter
dec
insb
outsl
int3
xor
pushf
call
das
incl
push
cltd
cmpsl
cmp
repnz
aam
hlt
mov
mov
sbb
xchg
sbb
lahf
js
sbb
daa
rdpmc
xchg
and
loop
lcall
jbe
jge
in
pusha
sub
sub
test
out
jne
lret
leave
lcall
mov
clc
dec
mov
pop
orb
je
push
rcl
popaw
pop
mov
inc
xor
pushl
cmp
gs
or
mov
and
mov
jmp
aas
and
pushl
shlb
popl
jno
pop
adc
push
dec
shrb
les
repz
jmp
cmc
incb
xchg
std
mov
in
insb
pop
xor
movsb
mov
xchg
inc
fldenv
xor
fcompl
inc
icebp
insb
data16
push
sahf
sbb
jg
lods
mov
sahf
or
mov
loop
arpl
fcomip
sbb
mov
jmp
adc
ja
out
fdivs
enter
js
outsl
pop
adc
decl
sub
sub
inc
add
sub
stos
mov
ficoml
les
ljmp
das
sbb
jae
popf
sub
cmp
jae
gs
push
xchg
mov
mov
lcall
add
sub
call
lret
xchg
sti
add
outsl
aad
das
cli
pushl
gs
adc
xlat
push
cmp
pop
movsl
jbe
rcrl
cwtd
jg
loope
dec
je
add
aas
in
pop
mov
or
mov
ret
or
jecxz
mov
jg
in
int3
arpl
lcall
cmp
mov
imul
testb
rolb
push
inc
aam
movsb
push
push
jmp
mov
mov
xchg
add
decb
int
test
pop
mov
lahf
mov
dec
rol
and
mov
popa
sbb
jmp
mov
popa
ds
or
mov
xchg
insb
cmp
sub
fwait
lds
scas
jns
cs
stos
shlb
daa
cmc
hlt
rcll
pop
cs
jle
jmp
mov
mov
cmpsb
test
cmpsb
sbb
call
cmp
jo
push
xchg
roll
stos
gs
movsb
jg
and
in
mov
mov
call
adc
mov
shr
jecxz
nop
ljmp
sub
mov
jle
jl
mov
cltd
sub
lea
mov
lret
dec
dec
call
insb
mov
pop
mov
pop
popf
lods
stos
jmp
pop
cmp
sti
jno
sbb
pop
mov
dec
hlt
js
bound
xor
push
xor
mov
insb
or
jge
loope
rcrl
outsb
lds
call
cld
mov
lcall
sub
movsl
lea
lcall
ljmp
enter
or
stos
sbb
pop
mov
ds
pop
mov
scas
lcall
jp
add
mov
jmp
loopne
shl
cmp
and
fwait
ja
lock
jp
xlat
push
fildll
out
lret
notl
in
or
scas
incl
cmp
shrb
mov
sbb
cltd
dec
cs
xchg
adc
mov
add
incl
inc
fstpl
aam
rcrl
lahf
mov
jle
leave
cltd
gs
rcll
jmp
jb
rep
xor
out
and
div
pop
les
pop
pusha
lock
and
cld
out
in
incl
cs
dec
cltd
sbb
mov
pop
dec
int3
add
lret
cmp
decl
mov
imul
lret
loopne
lods
add
sahf
cwtl
or
xchg
jp
ljmp
push
sub
outsb
push
jo
inc
stc
and
sub
push
jns
call
mov
dec
fisttpll
cmp
stos
loope
adc
scas
pinsrw
or
cwtl
int
dec
fcomip
jmp
adc
aas
and
pushf
out
jg
daa
push
fisubs
jg
decl
xchg
clc
mov
frstor
xchg
xchg
sbb
sti
nop
std
outsw
xor
incl
lea
fists
add
mov
ficoms
pop
cli
pop
incl
jecxz
dec
lret
outsb
sub
repz
fs
pop
jle,pt
xor
rcrl
adcb
roll
pushl
fdivrs
stc
push
push
push
xlat
es
jmp
mov
pop
mov
jp
cmp
mov
push
cmp
pop
fnstenv
pop
std
pop
stc
mov
lcall
cmp
mov
push
mov
stos
lea
insb
push
out
in
das
clc
jmp
mov
pushl
sbb
shll
push
cmp
mov
and
jb
ljmp
daa
or
adc
push
outsb
xor
dec
clc
cld
sbb
loopne
adc
jg
outsb
clc
sbb
sub
sub
sub
stos
xchg
mov
sub
test
decb
inc
shlb
adc
in
mov
jl
mov
cli
lahf
dec
push
jno
notrack
dec
pop
outsl
push
or
jns
fcomip
incl
imul
push
mov
repnz
mov
call
and
incl
mov
cmpsl
xor
loope
xlat
push
pop
mov
js
fcmovne
fldt
pushl
popf
ljmp
pop
cmp
pop
subl
or
loop
adc
dec
dec
xchg
push
lcall
jl
push
aas
int
adc
enter
incl
mov
out
jmp
rol
xlat
icebp
les
lret
xor
in
cmpsl
dec
push
insl
and
hlt
cmp
insl
rorb
test
out
loopne
pop
jmp
loope
pop
in
pushf
incl
dec
pushf
adc
push
xchg
cmp
pushf
xchg
loopne
mov
jg
push
or
inc
xchg
call
xchg
sub
sbb
sub
inc
call
jne
mov
std
push
add
cmp
dec
jmp
dec
mov
int
mov
dec
sub
ja
movsb
jl
mov
xor
dec
insb
std
lcall
pop
cld
mov
push
in
jp
stos
adc
mov
xchg
je
das
mov
and
pop
pushl
sbbb
sbb
xchg
add
rorb
in
out
es
dec
lcall
lahf
cwtl
or
push
mov
stos
fildll
or
xlat
mov
mov
jl
inc
jbe
into
xor
xorl
rclb
ljmp
test
aaa
mov
sub
dec
lods
iret
je
fwait
add
mov
and
add
movsb
imul
popa
jns
dec
call
xor
out
mov
scas
es
popf
sub
mov
push
xor
inc
incl
cld
jmp
cld
push
pop
jg
push
or
dec
das
jl
pushf
or
inc
je
testl
mov
test
loope
sbb
mov
push
les
mov
ja
ds
xchg
fwait
or
test
decl
jne
pop
call
mov
pusha
and
mov
push
mov
jmp
scas
adcb
lock
and
ss
aas
std
xchg
fcomip
in
out
cli
lcall
adc
fstl
jl
sbb
lcall
adc
lock
fcomps
xchg
lods
lret
jmp
push
inc
lock
in
jecxz
jg
mov
sub
mov
push
test
push
leave
jno
cmp
jg
lock
loop
cmp
test
sbb
daa
lds
jae
sbb
incl
cs
shl
hlt
jle
out
loopne
cmc
adc
lcall
xchg
mov
push
sahf
and
xor
cmpsl
push
inc
inc
lods
cli
decl
adc
inc
mov
push
pop
out
push
adc
cli
pop
shr
fdivrs
mov
jmp
mov
push
testl
das
or
lret
faddp
incl
jp
mov
ja
cli
and
xchg
cmpsl
jge
dec
jns
out
mov
xor
addr16
xchg
aas
pop
adc
jmp
cmp
ud0
call
jae
call
addr16
dec
daa
adc
dec
aad
mov
mov
pop
adc
ljmp
lds
jge
adc
fcmovnb
add
lcall
mov
fwait
jge
out
icebp
leave
cmp
cwtl
jns
sub
xor
call
pushl
bound
or
fs
mov
sbb
mov
pop
cmc
jg
push
bound
loop
nop
push
cmp
cmp
push
bound
dec
xor
dec
dec
fucomi
dec
fcmovnb
outsb
mov
jmp
jo
pop
dec
data16
leave
xchg
jb
mov
jno
pusha
push
pop
je
js
add
sub
jg
jnp
iret
lret
cmp
mov
mov
xor
mov
cld
lcall
sub
stc
cli
dec
in
pushl
add
mov
js
pop
jmp
push
lods
cmp
dec
jge
cmc
outsb
jnp
cmp
push
call
add
mov
push
filds
pushl
cld
push
loopne
xor
pop
adc
xor
mov
or
aam
push
mov
in
aam
in
int3
push
in
jns
push
aam
lea
lea
sbb
fmull
pop
inc
scas
push
fidivrs
mov
cmp
mov
pop
push
jb
cmpsl
jp
pop
jl
stos
sbb
adc
ljmp
fisubs
pop
cltd
das
test
or
mov
loope
ds
sub
mov
out
xchg
dec
dec
fdivr
xchg
mov
fs
and
add
jl
inc
xchg
jmp
pop
mov
addr16
pop
loopne
adc
in
cmp
leave
mov
rcrb
outsb
stos
addl
hlt
int3
aam
push
out
stos
mov
in
sub
mov
lods
faddl
incl
xor
push
aam
mov
dec
dec
or
fwait
out
lret
dec
add
sbb
and
adc
push
jo
mov
repz
pushl
out
in
push
cmp
or
cmpsl
xchg
xor
and
jns
fstps
inc
adc
cmc
ljmp
into
rolb
pusha
xor
sbb
pop
sbb
out
lods
mov
pushl
into
arpl
aaa
adc
lret
jbe
fcmove
mov
cmp
xor
jle
mov
incl
insl
out
sahf
loop
loopne
popf
push
jo
cwtl
add
lods
lcall
mov
adc
decl
xor
sub
mov
or
jl
andnps
jmp
push
mov
pop
aaa
adc
lea
outsl
test
cmpsl
dec
rclb
aad
sub
and
decl
push
repnz
xchg
sti
sbb
clc
or
das
xor
push
mov
jg
std
adc
enter
pop
lret
aas
fstl
mov
incl
out
test
sub
scas
add
sbb
pushf
jbe
mov
in
lcall
subb
into
mov
and
jmp
shlb
add
test
ja
mov
popw
xchg
cmp
mov
adc
andb
push
xchg
push
lret
xor
push
and
mov
in
mov
fld
idiv
gs
push
daa
ror
mov
inc
jmp
std
jmp
push
das
jecxz
push
adc
jl
and
popf
jg
xchg
mov
mov
call
fnstsw
mov
test
adc
xchg
lret
dec
in
xchg
jl
sub
gs
add
push
push
ret
sub
and
push
inc
add
ds
adc
fldcw
test
decl
xor
nop
pop
jg
subl
xchg
mov
sub
data16
or
sbb
call
das
roll
repz
mov
xorb
repnz
in
cmc
mov
dec
inc
pop
leave
repnz
scas
mov
sbb
push
dec
mov
ret
add
lahf
add
incl
add
into
inc
rorl
mov
adc
divl
cmp
sub
out
push
mov
xor
and
frstor
stos
pop
jb
in
fadd
mov
or
sbb
jecxz
mov
popf
orb
jp
push
mov
xchg
lods
sub
jmp
aad
push
nop
lds
aam
pop
inc
xchg
arpl
lahf
fwait
popf
sbb
xchg
loopne
incl
and
jecxz
in
mov
add
into
in
imul
cmp
ret
sub
lods
push
call
bound
aas
int3
insl
xchg
inc
and
mov
lret
mov
shrb
decl
imul
pop
and
into
sbb
xor
xchg
sbb
push
mov
out
js
cmpl
loopne
mov
js
cmpsl
xor
push
aaa
loop
push
lcall
sub
push
inc
lods
mov
fwait
or
dec
rcrl
insl
popf
sarb
pop
mov
pop
mov
popa
rolb
cwtl
jmp
cmp
js
pusha
push
cmp
in
inc
xchg
pop
cld
or
pop
adc
pop
incl
adc
sub
mov
xchg
pop
outsl
out
ss
out
cmpsl
sbb
mov
inc
outsl
mov
and
or
mov
icebp
loopne
andl
mov
jecxz
push
inc
mov
cmp
mov
les
xchg
es
dec
adc
xchg
dec
fisubs
subl
gs
mov
and
clc
test
jmp
push
mov
jmp
scas
fnstenv
jmp
fisubrl
pop
imul
and
call
je
mov
sbb
out
addl
fwait
sbb
std
xchg
adc
pushl
mov
out
dec
testb
fnstsw
movsb
int
sub
add
sub
jo
scas
adc
sbb
out
lcall
jg
or
mov
add
nop
add
mov
pushl
and
mov
in
push
mov
ss
and
sbb
loop
sub
mov
jg
ljmp
fsubrl
jo
or
loop
lcall
enter
ficoml
mov
out
cs
dec
adc
mov
insb
pusha
lock
int
ljmp
cli
movsb
push
out
add
xlat
clc
decl
sub
mov
push
test
mov
xchg
cwtl
add
mov
fbld
in
rorl
aam
into
aam
sbb
scas
add
in
xchg
jns
out
xor
push
mov
add
cld
ljmp
xchg
pop
lods
loopne
mov
int
outsb
inc
roll
incl
lock
in
xchg
mov
and
icebp
cvttps2pi
add
pushl
stc
jns
adc
sbb
dec
xor
test
lods
cmpsl
push
push
pop
jmp
fwait
je
into
cmp
clc
ljmp
hlt
push
and
cmp
in
das
cltd
movsb
dec
push
inc
add
lods
dec
lahf
call
pop
jg,pt
scas
jae
clc
inc
add
dec
int
xchg
fldt
ret
xchg
loop
jns
mov
mov
or
adc
add
hlt
jg
sub
fisttpll
fisttpl
lods
fdivp
lcall
add
out
cmp
add
inc
sbb
inc
jl
jno
fcoms
mov
push
jg
mov
xchg
jg
mov
orl
roll
jmp
pop
push
js
cmp
add
ret
and
mov
jmp
pop
jg
lock
and
mov
mov
add
and
mov
ljmp
aaa
mov
ds
pop
and
and
lock
mov
cld
dec
mov
mov
arpl
mov
xchg
lcall
hlt
mov
in
lods
jl
shlb
aad
sar
into
out
mov
mov
sahf
xchg
adc
rol
cli
imul
sbb
test
into
mov
stos
ljmp
cmp
jno
mov
or
xchg
movsb
or
xchg
lret
inc
aaa
adc
inc
enter
lcall
cld
or
adc
and
orb
pusha
jge
mov
inc
stc
pop
mov
mov
add
cwtl
lret
or
pushf
mov
push
mov
decl
xor
inc
das
cli
popf
sbb
outsb
fwait
or
add
adc
clc
nop
hlt
popf
aad
mov
sbb
pop
fwait
jne
xchg
rorl
lret
imul
dec
inc
call
loopne
mov
js
xor
jl
xchg
popw
fmull
mov
in
stos
add
idivb
dec
inc
aam
mov
mov
jae
xchg
xchg
pushl
or
push
push
pop
pop
pop
mov
testb
int3
adc
mov
xchg
mov
lcall
cmp
mov
arpl
and
fwait
pop
testl
call
ja
xchg
mov
int3
je
movsl
push
rorb
sub
mov
sbbb
ljmp
adc
ja
mov
jo
cmpsb
pop
mov
jecxz
lcall
ja
call
mov
ds
inc
xor
mulb
pusha
lds
out
mov
jl
mov
xchg
popa
mov
jmp
popa
cmp
inc
insb
jl
ljmp
add
call
fsubs
and
mov
fisttps
jnp
cld
jbe
jns
out
mov
fstp
clc
mov
incl
lcall
cmp
or
or
jg
decl
test
push
fadds
add
add
add
les
push
movsl
add
inc
xor
ss
xlat
bound
mov
loop
outsl
cmc
ljmp
paddq
adcb
int
stos
xchg
movsb
jle
call
lcall
and
repz
sbb
aad
loop
pop
in
shrb
es
jns
stos
jg
inc
xchg
mov
pop
xchg
fs
mov
cltd
push
mov
arpl
stc
aad
xchg
fdivp
std
fstpt
jne
je
jb
sub
loopne
dec
jae
rep
int
push
push
js
test
jmp
repnz
sahf
into
pop
cmp
add
mov
lock
sarl
adc
inc
add
sub
ljmp
insb
int
mov
lock
cs
iret
jmp
mov
sbb
into
pop
lcall
pushl
out
jo
cmp
pop
popf
jne
roll
sub
lock
fists
jl
stos
into
mov
xchg
mov
pop
test
iret
inc
out
dec
ja
out
clc
mov
and
repnz
xchg
call
cmp
je
daa
xchg
xchg
out
mov
cld
mov
fsubr
mov
mov
bound
outsb
ljmp
decl
test
xchg
sbb
repnz
dec
aaa
pusha
jle
std
fildll
sub
outsb
scas
aad
push
fndisi(8087
popf
cmp
jl
inc
pop
cmp
stc
push
xor
fbld
imulb
adc
sahf
shlb
mov
test
stc
out
mov
push
cmp
xchg
movsb
sti
ret
iret
enter
lock
nop
ret
fs
jmp
rorb
mov
mov
mov
clc
movsl
sbb
fisubl
xor
and
incl
lcall
insl
aas
fs
rol
test
cmp
mov
and
icebp
jb
push
cmp
xchg
outsl
inc
cmp
ljmp
pop
cmc
out
clc
jecxz
adc
sbb
cmovge
call
fwait
jnp
les
jge
call
jns
loope
and
decl
mov
inc
lds
fidivrs
fwait
shll
push
push
inc
add
jmp
lock
push
loopne
aaa
leave
rcll
mov
pop
ja
inc
cli
lods
or
and
add
ljmp
adc
fsubrl
mov
jns
adc
sub
ja
cmp
lcall
rcr
cmp
subb
inc
xchg
xchg
jecxz
sbb
pop
jl
sbbl
cwtl
imul
or
sbb
fnsave
pop
cmp
jne
xchg
movl
mov
imull
int
movsl
inc
push
dec
fwait
rolb
das
mov
pushf
and
dec
dec
fcomip
ljmp
shlb
xor
jb
lahf
mov
xchg
adc
movsb
lea
jmp
mov
pop
dec
loop
std
test
js
loope
or
outsl
mov
inc
push
adc
xor
jg
pop
and
in
jl
mov
pop
imul
jg
or
push
jmp
lods
cs
addr16
xchg
and
imul
mov
mov
xor
inc
dec
cld
das
xchg
push
mov
aas
pop
int3
int3
jno
in
sbb
mov
stos
inc
mov
mov
push
jno
inc
mov
push
sub
cmp
ljmp
mov
fdivrs
test
mov
aad
sbb
jmp
pushf
pop
push
inc
dec
imul
and
xor
mov
cli
and
les
int3
in
shll
or
mov
jge
imul
and
es
mov
sarl
jmp
mov
jne
gs
xchg
mov
imul
psubsb
das
jp
faddp
dec
cmp
stos
movsb
ficoml
jmp
stos
rcll
adc
mov
daa
or
imul
jecxz
mov
fcomip
add
mov
jmp
inc
add
and
jmp
imulb
sub
ja
push
cld
sbb
jg
dec
adc
leave
xchg
fidivs
loope
cld
shrl
out
dec
es
pushl
in
cmp
shlb
mov
nop
pusha
outsl
push
out
scas
in
xchg
xor
test
inc
imul
stos
stos
xchg
sbb
pop
mov
cmc
sbb
fwait
pop
push
adc
ror
sub
mov
adc
add
arpl
pushl
or
movsb
add
roll
mov
arpl
mov
call
aam
outsl
test
or
aaa
stos
add
mov
push
jg
jmp
sbb
call
dec
xor
fwait
cmp
mov
push
jp
lcall
movsb
jmp
jl
cld
and
cmp
out
mov
shll
xchg
int3
xor
fwait
mov
popf
enter
sbb
cwtl
testb
sbb
push
clc
ljmp
js
cwtl
hlt
outsl
adc
call
sbb
sbbb
lret
enter
decl
into
push
rcl
pop
add
or
lcall
push
stos
inc
cmp
scas
aaa
or
mov
xchg
pop
cs
jno
das
sbbl
je
aam
lahf
or
xor
jg
je
cmpsb
add
bound
fbstp
adc
and
cld
movsl
iret
cmp
lahf
ljmp
push
sub
fldenv
fistpl
mov
jbe
sti
sub
push
pop
cmp
jmp
cld
mov
lea
pop
push
cld
decl
cwtl
inc
add
sub
stos
push
push
add
sahf
push
mov
mov
mov
jge
xchg
pop
push
cmpsl
xchg
int
fmul
cmovbe
decb
cmc
jg
xchg
outsl
xor
fwait
pusha
ret
sbb
xchg
mov
aad
popf
fisttps
dec
xor
push
data16
and
mov
dec
and
cmp
addr16
ljmp
add
or
adc
pop
in
and
mov
mov
adc
xor
sub
lods
test
lcall
and
icebp
mov
in
mov
push
mov
scas
andb
sbb
inc
inc
and
stos
mov
mov
lret
sbb
mov
push
pop
outsb
imul
pushl
daa
pop
add
xchg
mov
inc
out
inc
push
lea
pop
xor
int3
push
or
pusha
mov
jmp
mov
inc
mov
cmc
into
lods
cmpsl
aad
xchg
insb
pusha
jmp
mov
les
fildll
out
push
xchg
int3
loop
lods
out
scas
cmpsl
xchg
adc
inc
xchg
mov
push
and
jmp
popa
in
idiv
out
cltd
dec
sbb
jno
out
jge
in
and
inc
es
jg
lods
rcr
pusha
inc
fisubl
xchg
fs
xchg
mov
cmp
es
xchg
mov
jp
pushl
jp
icebp
mov
add
xor
jp
xchg
xchg
test
imul
jmp
jmp
sub
jecxz
lahf
in
dec
cmp
in
incl
loop
jb
or
pop
insl
repz
adc
push
shlb
pop
inc
push
jle
icebp
fmulp
loopne
gs
push
clc
mov
xchg
pop
mov
push
xor
or
pop
mov
lcall
mov
mov
jbe
icebp
inc
adc
add
mov
dec
std
mov
gs
shrb
or
mov
stos
int
loopne
lcall
aaa
adc
and
inc
in
testb
pop
mov
incl
stc
push
int3
add
inc
and
out
lcall
mov
ljmp
add
jle
or
std
xor
lret
inc
pushf
xchg
or
mov
mov
insl
aad
test
xchg
xor
cwtl
pop
push
mov
ljmp
xor
int3
push
mov
jp
cmp
inc
dec
push
pop
imul
push
pop
call
loopne
push
mov
push
stos
mov
mov
cmp
jg
enter
dec
pop
sti
mov
stos
outsl
sbb
bound
ja
mov
addr16
jns
dec
lcall
lods
rorl
insl
xchg
pop
repz
adc
mov
sub
aad
pmaxsw
jnp
std
dec
cs
jo
mov
mov
or
adc
insl
fs
mov
inc
test
mov
pusha
mov
aad
xor
cwtl
in
out
sub
call
daa
mov
enter
add
ljmp
negb
dec
std
and
ja
call
scas
push
lods
jg
mov
cld
or
addr16
repz
add
push
cld
sub
push
and
les
mov
insl
nop
or
push
int
xchg
or
inc
pop
test
mov
cmp
inc
push
add
pop
jmp
or
adc
in
add
push
adc
decb
sbb
movsb
sbb
mov
call
add
sbb
mov
push
ljmp
test
ljmp
pushl
mov
mov
pusha
outsl
sbb
ret
pop
pop
xor
xchg
cmp
repz
ljmp
incl
cmp
inc
dec
rolb
dec
outsb
sbb
sub
pop
das
push
adc
stos
push
pop
shr
pop
test
shlb
stc
xor
lret
inc
inc
push
stos
test
les
fs
call
cli
ret
pop
insl
adc
jmp
add
daa
mov
shl
inc
pop
xchg
xchg
push
push
leave
cmp
pushl
cwtl
sbb
cmp
fsubr
pop
aas
push
jne
cmp
lea
roll
dec
into
sti
popa
lea
nop
adc
clc
cmp
pop
mov
decl
pushl
mov
cltd
dec
das
outsl
addr16
mov
mov
clc
test
add
sahf
add
js
call
divb
sub
push
icebp
insb
xchg
or
pushl
fists
mov
sub
sub
mov
fs
pushl
push
fstpl
sbb
sub
sti
in
push
gs
pushf
push
scas
outsl
in
mov
shlb
aam
outsb
push
mov
sub
inc
sub
ds
ljmp
mov
or
mov
jnp
add
mov
lcall
mov
movl
rcll
xor
cmp
test
or
and
dec
sbb
leave
push
repz
lds
adc
mov
incl
jl
cli
aam
fisttpll
mov
xor
int3
push
push
inc
jns
pop
cmp
jecxz
cmp
mov
add
lock
lods
adc
add
nop
adcb
in
cwtl
adc
mov
sahf
pop
jl
out
ud0
mov
mov
fstps
test
mov
jno
in
xor
ljmp
fsubl
mov
popf
and
mov
xchg
lea
movsb
pop
fbld
and
lcall
popa
sub
test
adc
cld
pop
mov
jmp
das
int3
jl
out
int
sub
mov
xchg
push
lret
pushl
xchg
xchg
sbbb
loope
cmp
pop
adc
sub
int
sbb
popf
fwait
jmp
adc
in
bound
and
sub
dec
jle
shlb
btr
call
and
shlb
sbb
loopne
add
xchg
mov
cmp
push
inc
jne
inc
dec
xchg
outsl
fwait
jecxz
mov
movsl
lock
jge
mov
call
adc
test
shll
jno
xorl
lret
and
xor
ljmp
cltd
inc
daa
sub
inc
daa
in
push
cmpsl
scas
call
inc
std
scas
mov
lcall
popf
jg
mov
outsb
jne
das
addr16
mov
ljmp
push
mov
test
scas
sahf
sahf
jnp
loop
incl
xorb
das
mov
stc
data16
in
fmuls
je
push
sti
orb
aad
mov
sbb
or
mov
pop
insl
adc
pushf
cmpsb
mov
push
cmp
jmp
pusha
pop
add
xor
mov
or
or
into
jo
push
decl
jb
lock
aas
lcall
sub
insb
loop
ds
fwait
sar
dec
cmpsb
cmp
mov
icebp
inc
mov
mov
es
ret
loop
dec
sub
adc
test
pop
mov
addl
adc
jmp
add
sub
jg
xorl
gs
in
cltd
pop
repz
mov
vpacksswb
xchg
nop
xchg
testl
enter
rorb
pop
fwait
sbb
jno
aam
enter
cmc
pop
pop
loopne
mov
cmpsb
cli
xor
add
sub
out
leave
insb
dec
jp
jl
jns,pt
jg
in
pop
js
in
iret
scas
flds
mov
sub
int3
rcl
push
decl
dec
pop
arpl
mov
inc
mov
jle
testb
xchg
push
mov
ljmp
iret
pshufw
lods
push
inc
xchg
add
jmp
fcomip
dec
sub
adc
mov
push
and
sarb
call
mov
in
lcall
mov
push
test
jg
xchg
aad
add
dec
cmp
xchg
xchg
or
lcall
loopne
push
xor
dec
out
fwait
jle
inc
sub
mov
jnp
incl
inc
adc
jmp
hlt
xlat
xchg
mov
dec
adc
xchg
push
mov
sbb
mov
mov
rcrl
pop
fwait
out
mov
incl
sub
cltd
mov
jbe
jg
xor
out
ret
sbb
push
repnz
call
std
call
jmp
shrb
std
inc
or
pusha
mov
xor
out
xor
mov
in
jg
add
pop
js
push
imul
ljmp
and
movsb
lock
out
push
sub
lcall
push
or
out
cwtl
mov
scas
mov
jmp
js
int3
dec
sbb
aam
add
aad
cmp
push
pusha
add
inc
sub
cmp
jge
mov
ljmp
fdivrp
cmpsb
aas
aam
pop
pushf
cmp
add
lods
add
adc
dec
mov
test
fmull
sbb
mov
test
addr16
sbb
lcall
jl
leave
or
test
and
jl
lcall
xor
movsl
in
sub
cmp
mov
mul
imul
jmp
sub
mov
or
mov
sahf
das
popa
mov
jmp
xchg
enter
idiv
pushl
push
cltd
pop
test
add
pop
xchg
cs
push
mov
popl
mov
mov
add
cmc
stc
mov
mov
jg
and
inc
mov
add
ja
mov
sub
ljmp
call
incl
fisttpll
int
jl
bound
add
lcall
stos
jle
push
sub
ljmp
mov
divl
push
imul
ljmp
mov
loope
leave
hlt
test
in
nop
pop
jmp
nop
pop
aas
inc
jmp
into
sub
mov
jmp
inc
mov
and
sub
jb
jp
aas
push
mov
push
stos
pop
jo
lock
incl
loope
mov
sub
sub
fisubl
test
ljmp
int3
mov
sahf
jo
add
pop
std
jne
push
cltd
mov
incl
or
cmpsl
inc
clc
inc
dec
dec
or
ret
cli
mov
adc
jl
mov
outsb
push
pop
test
mov
fnstsw
or
loopne
jg
and
push
rcll
pop
rolb
fisttps
push
xchg
fisttpll
mov
sub
push
mov
repz
pop
loopne
push
and
fcom
je
testl
jg
mov
jne
cmp
pop
inc
insl
xchg
mov
lods
mov
xchg
jb
incl
rolb
iret
dec
cmp
sbb
cwtl
cmp
mov
lods
push
hlt
dec
dec
incl
ss
inc
mov
jecxz
push
pop
lock
insl
lods
pusha
stc
sub
ss
mov
dec
sbb
mov
push
fs
pop
sbb
iret
lahf
repnz
and
pop
push
test
fs
jle
cmpsl
sti
cld
out
out
pop
addl
in
addl
pop
add
incl
mov
mov
push
fcompl
pop
mov
sbb
push
lods
push
ja
and
call
cmp
das
pop
and
jae
xlat
fcmovnu
in
cmp
xor
clc
adc
cld
ds
xor
sarb
test
and
out
lods
mov
mov
enter
inc
mov
fistps
dec
addr16
cmp
jl
in
gs
inc
sub
inc
mov
addl
xlat
incl
pop
fstp
mov
lret
call
xchg
test
sbb
iret
ja
fidivrs
decl
mov
mov
ds
leave
imul
xchg
js
aaa
mov
adc
mov
ret
push
pop
dec
sbb
popa
lock
mov
bound
std
jnp
insb
xchg
mov
or
ret
ret
movsl
and
sbb
push
jg
fldenv
andb
jg
aad
out
pop
dec
lods
xchg
and
sbb
push
jne
cmp
jns
jl
decl
jae
jl
cmpsl
add
xor
stos
addb
test
sbb
clc
hlt
push
divb
fidivrs
jg
lock
jmp
shr
sub
call
daa
cld
dec
sub
inc
mov
jmp
ret
fisttpll
mov
jge
lods
popa
das
aas
cmpsl
jbe
fwait
push
xor
pushl
xchg
mov
test
or
push
rorb
test
ja
adc
jmp
push
mov
jmp
and
loopne
dec
adc
lcall
jnp,pn
adc
pop
popf
lahf
pop
mov
fstl
lea
fisubrl
inc
call
filds
adc
aad
out
xchg
and
xchg
dec
popf
or
sbb
in
mov
xchg
in
in
decb
mov
dec
xlat
pusha
das
hlt
decl
mov
js
gs
leave
lds
loopne
cmp
pushl
iret
fidivrs
push
loop
adc
lods
cmp
xorl
popa
mov
std
decl
call
adc
in
leave
jbe
lock
icebp
dec
ljmp
lcall
inc
cmpsb
fildl
or
and
incl
and
lahf
iret
adc
out
shlb
mov
movsl
cmp
xor
inc
repz
ljmp
mov
mov
push
mov
sub
jle
lcall
incl
cmpsl
ljmp
dec
inc
jmp
mov
rol
jl
cmp
outsb
xchg
push
ljmp
pushl
lahf
xor
arpl
push
pop
sbb
sbb
sahf
xor
test
push
adc
imul
or
mov
sub
iret
out
loop
fsts
std
or
iret
xor
push
jp
jo
adc
xchg
decl
cmp
pop
mov
sub
sub
adcl
ss
mov
xor
scas
xchg
test
adc
ret
insb
pop
fsubr
lcall
das
xchg
ljmp
out
das
ret
xchg
ror
xchg
jecxz
jae
addb
pop
imul
js
incl
in
ja
sub
inc
negl
addb
sbb
pushl
add
imul
pop
add
popf
sub
incb
or
xchg
and
mov
pushl
mov
das
jb
out
push
cmc
dec
jmp
mov
jne
push
lcall
or
mov
stos
sti
inc
incl
call
ljmp
dec
mov
adc
sub
psubusb
fcmovbe
std
stc
fwait
mov
imul
mov
cs
fildll
or
cli
loopne
jb
mov
aaa
dec
pushf
repnz
sbb
ljmp
orl
xchg
pusha
pop
xor
jecxz
sub
xchg
pop
aaa
mov
pushf
adc
xchg
mull
and
loope
nop
pop
lret
test
in
mov
hlt
mov
lcall
je
es
xor
movb
xor
in
das
inc
int3
arpl
out
repz
push
jg
inc
push
imulb
inc
clc
adc
mov
mov
push
daa
popa
daa
int
dec
jbe
incl
sub
and
or
cmp
mov
xchg
cld
hlt
lds
jb
lret
lcall
sahf
aad
sub
rcrl
cmp
cmpsl
jno
pop
sbb
push
dec
or
lods
jo
popa
fldcw
idiv
add
push
pop
mov
push
push
in
addr16
mov
imul
xchg
aam
jb
and
iret
fwait
fwait
rorl
nop
aas
and
ljmp
jnp
fwait
rcrb
dec
lret
mov
sub
movsl
push
inc
das
imul
bound
lcall
sarl
add
pop
mov
jp
mov
or
pushl
jecxz
test
cmpb
jb
insb
imul
push
xchg
jp
cli
in
xchg
ds
push
pop
call
push
push
mov
in
in
cltd
out
xchg
and
dec
adc
js
adcb
jbe
sahf
cmpsb
call
dec
jle
ret
jmp
aad
and
outsl
mov
insb
ljmp
xchg
lock
jg
aad
mov
mov
lock
inc
cmc
xchg
sbb
lds
mov
outsl
add
sbb
fnsave
enter
cmp
adc
push
jo
iret
adc
ljmp
xor
out
jecxz
push
cmpb
adc
mov
or
mov
rolb
imul
pop
mov
lods
insb
lock
scas
mov
vcvtsi2ss
lcall
fwait
add
add
mov
leave
in
mov
outsl
das
mov
pushl
xor
pop
cmp
cltd
sbb
xchg
cmpsl
inc
mov
cmpsb
sub
pop
in
mov
add
dec
sub
dec
scas
in
in
jge
fstps
xor
dec
mov
and
jb
mov
add
mov
push
pop
les
jmp
add
js
dec
push
mov
lcall
mov
aaa
sub
add
mov
scas
mov
aad
call
ret
decl
xchg
negl
stos
shlb
idivb
mov
dec
sar
lcall
pop
pusha
shlb
pop
push
and
push
in
xor
loope
and
int3
jmp
std
jle
jbe
out
jmp
and
lods
test
cmp
sub
dec
test
inc
jo
notb
push
cltd
repnz
outsb
xchg
call
fs
cld
sub
and
stos
daa
jno
fcmovnb
mov
adc
and
push
add
lcall
add
movb
pop
xchg
mov
pop
add
lods
push
adc
cwtl
ficompl
cmp
sub
mov
sti
outsl
outsl
stos
push
cld
aaa
idivl
aam
cwtl
ljmp
dec
imul
lods
pop
cltd
inc
pop
rcrb
adc
fcmovnu
dec
shll
dec
pop
add
hlt
inc
dec
out
adc
and
test
decl
or
mov
sub
es
inc
xchg
out
stos
mov
pushl
ret
shl
and
sub
aaa
bound
rclb
clc
cmc
mov
loope
pusha
mov
jmp
mov
lahf
inc
lea
repz
push
xor
adcl
clc
lcall
and
push
mov
imul
outsl
ljmp
clc
cmp
jmp
fcmovb
mov
xor
not
les
inc
cmp
and
xchg
push
das
mov
dec
notb
das
push
int
das
push
xchg
mov
adc
push
es
fcoml
in
pushl
cmp
js
pop
push
mov
pop
inc
jp
pop
call
push
add
pop
in
mov
scas
es
jno
movd
cld
adc
and
mov
fs
dec
inc
fnstcw
pop
push
pop
dec
pushf
mov
out
std
dec
pusha
mov
or
fbstp
push
mov
inc
xchg
jp
inc
outsb
sbb
jno
jle
adc
sub
mov
decl
xchg
mov
hlt
int3
pop
lds
or
or
jmp
ud0
scas
jns
fistl
adc
into
adc
or
loopne
mov
out
sahf
pop
pop
cmpsb
cmp
sub
aad
inc
in
hlt
icebp
rorl
inc
das
cli
push
inc
fistl
aaa
fs
inc
in
mov
pushl
xor
aam
dec
and
or
xor
xor
mov
mov
pop
outsl
lcall
mov
lret
das
movsl
fadd
mov
in
std
and
repnz
cmp
incl
hlt
fwait
jns
xor
fwait
xlat
inc
xchg
xchg
fisttps
mov
add
jne
jg
ret
mov
xor
cmp
test
fmuls
incl
push
movsb
lahf
rorb
dec
cltd
xchg
pop
add
in
jge
mov
addr16
aam
mov
incl
pop
in
lret
mov
add
dec
xchg
imul
fsubrs
sahf
ss
ljmp
fcmovnb
or
imul
push
mov
xchg
fistps
cmp
out
pushf
adc
daa
in
mov
push
stos
adc
cwtl
int
inc
mov
dec
xchg
xchg
scas
jo
mov
enter
adc
xchg
and
or
lods
sub
cmc
jg
jo
nop
adc
mov
repnz
push
jno
andl
in
xchg
movsl
lcall
pop
jp
repnz
dec
mov
cmp
lahf
jge
push
sbb
push
mov
jmp
xchg
out
clc
pop
mov
cli
mov
mov
pop
jmp
push
mov
call
icebp
xor
xor
xchg
shlb
pusha
jnp
mov
and
lods
mov
pop
movsb
mov
pushf
and
shrl
fs
jmp
add
in
icebp
insb
cmp
sarl
enter
sahf
sub
ret
in
decl
pushl
adc
pop
pop
fwait
test
les
mov
add
pushl
mov
add
mov
push
test
incl
mov
add
rcl
repnz
mov
adc
xchg
das
jnp
cltd
out
sbb
lcall
xchg
fstpl
lock
mov
nop
ds
dec
pop
movsl
clc
or
mov
push
jg
cmp
xchg
insl
cmp
dec
jecxz
adc
dec
iret
sub
jg
jbe
cmpsl
adc
pop
fidivl
push
mov
pushl
movsl
ficoml
rcr
popa
cld
call
jecxz
jp
mov
pop
xchg
aaa
fwait
mov
lcall
nop
fwait
push
mov
movb
fldt
pop
xchg
mov
sub
decl
addr16
or
mov
dec
and
inc
jmp
fists
dec
lret
jg
es
jne
xchg
and
shl
jo
adc
and
jb
xchg
push
test
mov
sbb
lods
xchg
inc
pushf
xchg
in
roll
jg
push
inc
stos
ret
lods
and
mov
mov
inc
pushf
mov
lcall
xlat
lret
jg
ret
iret
add
or
shrl
rorl
fdivp
scas
stos
movsl
popf
mov
repnz
daa
jnp
call
mov
insb
idivb
pushf
movsb
xor
jbe
pop
or
add
dec
sbb
push
inc
cmpsb
jle
icebp
int3
iret
cmp
setnp
decl
shlb
dec
sbb
xchg
daa
aad
push
adc
idiv
pushl
push
jge
ror
mov
shrb
sbb
ret
clc
movsl
adc
inc
fldt
in
or
cli
incl
push
test
jbe
mov
arpl
call
cmp
sub
mov
inc
aas
pop
mov
lcall
mov
mov
clc
jmp
jb
and
inc
les
fcompl
jbe
jno
add
hlt
into
add
imul
add
mov
stos
mov
mov
repz
add
sbb
es
flds
call
add
shll
mov
inc
xchg
push
dec
popf
and
adc
inc
fmuls
cmp
icebp
mov
les
mov
sarl
adc
mov
xor
mov
in
or
add
dec
pop
roll
lret
loopne
push
push
lcall
adc
fcoms
push
cmp
jle
std
cs
mov
xchg
sub
incl
scas
lods
bound
mov
test
aad
xlat
push
icebp
add
in
inc
cmp
js
shr
ficompl
mov
jl
inc
xabort
cs
icebp
xor
call
imul
ret
and
in
mov
test
rcrl
cmpsb
pop
cmp
movsb
aad
pop
jnp
mov
jmp
add
mov
fstpl
cmp
jecxz
mov
and
decl
test
push
xchg
bound
mov
pop
sbb
mov
xchg
sub
cmp
lock
in
mov
lods
dec
aam
iret
xorl
call
push
popa
mov
dec
repnz
addl
inc
pusha
cmp
pushf
mov
mov
cmp
pop
jl
pop
pushf
or
mov
xchg
jnp
push
jns
pushf
dec
mov
cli
inc
xchg
hlt
hlt
pop
in
mov
cmp
incl
dec
pop
jecxz
mov
or
add
jae
movsl
xchg
or
decl
inc
and
jmp
aam
mov
xor
hlt
roll
and
inc
add
pushf
mov
ljmp
mov
outsb
ljmp
mov
cli
jl
sti
je
pop
pop
shlb
test
and
ljmp
test
stos
adc
adc
sub
or
jb
clts
push
pop
cld
xchg
mov
and
jge
movsl
jle
and
xchg
rol
iret
inc
rcll
mov
mov
outsl
es
sarb
or
aam
data16
sub
push
or
push
cmpsl
mov
ds
jbe
into
cmp
mov
lock
add
mov
rorb
lahf
cmp
mov
add
jb
push
push
pop
scas
mov
rorl
mov
in
loop
lds
lcall
lods
sti
push
push
jmp
xor
jne
mov
shlb
aam
js
or
dec
adc
cwtl
mov
dec
push
int3
dec
add
daa
sbb
dec
sbb
sub
sub
call
sub
stc
enter
xchg
push
adc
mov
into
inc
add
rorb
hlt
mov
decl
in
nop
mov
fwait
dec
sub
push
mov
outsl
and
lcall
cmpsb
mov
push
pusha
adc
push
loop
add
icebp
into
addr16
adc
cs
pop
and
fldenv
imul
xor
jg
pop
cmp
lods
and
jl
scas
push
jg
xchg
lcall
sub
mov
mov
sahf
outsl
mov
mov
dec
cmpb
inc
jnp
daa
or
or
in
push
ja
ljmp
xchg
fnstenv
push
xchg
cmp
jp
inc
sahf
add
out
cmpsb
mov
xorb
ja
adc
pop
out
div
xchg
cs
jl
into
mov
jno
ja
cmp
add
rolb
andl
sar
pushl
sbb
mov
sbb
icebp
sbb
add
sar
inc
std
xor
mov
repz
out
ja
push
dec
push
and
sti
lahf
jg
add
in
rorb
mov
es
lcall
call
aad
bound
xchg
mov
int
cli
jle
or
daa
outsb
and
xchg
jns
sbb
imul
cmp
push
mov
jmp
stc
int
std
jmp
push
out
lret
mov
int3
lcall
in
xchg
mov
xor
mov
gs
sub
int3
mov
in
jge
test
push
scas
es
test
adc
ret
inc
xor
daa
iret
pop
shl
mov
and
cmp
mov
aad
inc
add
jge
mov
inc
mov
adcb
pop
or
fldt
ljmp
out
shl
xchg
jae
rep
loop
inc
sahf
fildll
mov
cmp
or
adc
inc
das
cld
loope
mov
in
test
aas
mov
fidivs
lds
add
notb
jmp
js
jg
xchg
mov
pop
jbe
fdivl
sbb
push
push
add
mov
rcrb
mov
cld
ljmp
mov
mov
out
ljmp
scas
pop
hlt
mov
add
arpl
or
cmovg
inc
stos
insb
mov
mov
incl
mov
enter
jo
lock
in
in
scas
lea
jb
popf
add
push
sbbl
pushl
ss
push
test
aad
mov
mov
subb
pop
sub
xchg
mov
call
ds
jmp
insb
or
stc
jmp
in
stos
jl
or
shlb
or
pushl
dec
je
push
inc
push
and
popa
pop
dec
pop
mov
jl
out
clc
call
mov
in
movsl
sbb
sti
xor
sub
adc
mov
add
decl
adc
out
jge
jmp
sbbl
xor
fcomip
pusha
xchg
jmp
cmp
xchg
xor
je
repz
adc
lahf
cmpsl
ss
test
das
inc
add
data16
mov
les
xchg
jge
mov
add
aas
lea
or
inc
jns
mov
cmp
fabs
call
dec
mov
and
sub
or
jg
jp
movsb
dec
sbb
cmpsl
pop
jmp
into
jl
cwtl
xor
fcmovne
cli
mov
xchg
and
sub
mov
cmp
jg
mov
push
mov
mov
aas
stos
rorb
ror
xor
decl
xor
shlb
into
call
fnstsw
dec
sbb
sbb
jmp
mov
loop
jnp
mov
cmpsb
pop
aas
sbb
xchg
dec
enter
jge
pop
fucompp
imul
arpl
mov
test
jecxz
sahf
sub
ljmp
fisttps
xlat
push
out
mov
lods
jns
mov
lret
dec
cmp
lock
sti
dec
mov
xor
xlat
mov
jmp
add
push
fwait
push
and
sub
add
or
jmp
push
pusha
movsb
mov
or
push
out
xchg
imul
pop
out
xor
js
ret
call
outsl
ljmp
mov
aam
imul
lea
mov
xchg
fidivs
ret
data16
repz
push
stos
cmp
jg
sbb
sbb
mov
jp
scas
outsb
in
adc
push
cld
lcall
or
out
pop
or
iret
jg
ds
mov
pop
xor
xchg
xchg
lock
dec
mov
xchg
movsb
jb
mov
dec
rol
in
popa
lcall
mov
test
mov
or
adc
decl
and
shr
inc
mov
inc
hlt
shrl
sub
cmpsl
cmp
inc
jg
sbb
push
repnz
out
into
dec
xor
cmp
cmpsb
out
pop
mov
jno
lock
xchg
neg
cli
cwtl
lahf
sbb
fwait
adc
mov
repz
pushl
inc
arpl
mov
adc
call
scas
pop
or
add
mov
incl
sbb
sub
adc
sbbb
adc
int
aaa
jne
add
pushl
sub
mov
jnp
nop
lcall
cmp
in
and
lret
mov
ljmp
stc
sbb
cmp
fs
add
aas
imul
test
mov
pop
push
shlb
pushf
add
and
xchg
cmpsb
pop
pop
add
jmp
js
sbb
out
movsb
jbe
xadd
jmp
inc
inc
imul
push
icebp
sbb
mov
jmp
shrb
fadd
adc
xchg
inc
cltd
jmp
aam
lcall
jne
mov
xlat
inc
jo
xchg
sub
inc
sbb
insl
clc
dec
jno
lods
in
mov
push
cmp
sub
push
sbb
mov
fcoml
cwtl
imul
cld
aaa
cld
xchg
xchg
lods
xchg
inc
stos
add
ja
lret
cli
ja
nop
iret
sub
adcb
adc
ljmp
push
scas
inc
sahf
and
data16
sbb
or
test
add
incl
push
pop
cli
pop
adc
fisttpl
test
adc
cmpsl
outsl
jl
scas
inc
and
and
jns
push
pop
mov
lcall
mov
xchg
mov
pusha
sahf
add
bound
push
xor
loopne
ljmp
lcall
pop
and
mov
mov
inc
cwtl
jne
or
lcall
mov
push
inc
pushf
dec
fsubrs
fstl
dec
aam
jecxz
sbb
out
adc
pop
std
jmp
push
xchg
pop
xchg
andl
xchg
push
ja
xor
mov
shl
int
sbbl
mov
pop
jge
jns
testb
es
jae
dec
icebp
lcall
popa
dec
jl
dec
je
pop
add
addb
dec
and
filds
mov
pop
stos
pop
loopne
mov
shr
mov
lock
jmp
sbb
push
scas
push
jne
push
xchg
imul
icebp
jg
stc
incl
das
and
or
adc
ret
cmpsb
jl
pop
mov
sbb
cmpsl
test
ja
jmp
imulb
je
push
loop
add
xchg
and
push
lock
incl
addr16
adc
mov
sti
mov
outsb
es
incl
orb
ss
lods
inc
sbb
ja
sub
jo
jmp
cltd
or
inc
lret
pop
push
xor
push
mov
jbe
jb
jns
fcmovbe
mov
test
icebp
clc
cmp
xchg
add
inc
pop
xchg
push
cmp
jg
fildl
xor
sbb
mov
mov
xchg
and
xlat
xchg
call
mov
test
stos
xor
jmp
jmp
cli
insl
fdivl
inc
ja
cmp
ljmp
xchg
testb
dec
push
test
sti
dec
push
dec
ja
pushf
mov
decl
mov
leave
inc
jmp
stc
or
jg
fucom
mov
iret
movsl
iret
jg
jg
test
dec
adc
pop
cmp
out
mov
add
mov
out
ljmp
mov
or
xor
mov
mov
fwait
adc
incl
adc
mov
sbb
movsl
lea
mov
cli
pop
mov
pop
jno
fildl
push
cmp
fldcw
xor
and
lcall
outsb
fisubrs
pop
pop
testl
jg
shlb
jb
or
mov
mov
jne
or
push
xorl
xrelease
jp
sbb
inc
adc
call
push
hlt
cli
mov
mov
cmp
testb
mov
xchg
movsb
push
push
mov
jl
adc
rolb
shr
lcall
stos
and
sbb
loop
nop
xchg
mov
push
mov
mov
cmp
fstl
xor
leave
stos
jge
rcl
movsl
stos
inc
shrb
push
out
out
pusha
dec
decb
pop
rorl
clc
cmpsl
aas
push
leave
pop
dec
clc
push
call
dec
jmp
adc
mov
cmpsb
aaa
sbb
ds
adc
mov
decl
imul
jmp
repnz
mov
push
lret
adc
xchg
push
mov
lcall
add
dec
fwait
mov
insl
xlat
mov
xchg
lcall
sub
jbe
aam
xchg
int
ffreep
mov
ljmp
inc
mov
lods
bsf
mov
mov
outsb
inc
push
es
lcall
in
lods
and
sub
mov
xchg
es
xor
cli
ljmp
icebp
and
sbb
and
lods
sbb
in
lret
adc
add
mov
aam
loope
push
jp
jle
cmpsl
inc
mov
xor
lea
lcall
sarb
push
imulb
mov
xor
cmp
push
test
cmp
sub
aaa
xchg
and
xor
lds
int3
pop
mov
call
cli
sarb
dec
test
sub
nop
or
and
ljmp
or
mov
jmp
in
cmp
cld
push
loope
dec
adc
sub
decl
xchg
adc
sub
inc
in
mov
fdivrl
jge
push
jg
mov
sbb
mov
pop
sub
push
call
mov
in
in
jbe
ret
adc
cmp
jmp
je
lds
push
jbe
and
data16
jo
mov
mov
cli
lcall
jnp
test
lahf
push
insl
addr16
mov
incl
ret
pop
sub
fwait
mov
mov
fiadds
into
xor
scas
movsl
push
dec
and
dec
lock
jnp
sbb
push
test
popa
push
repz
inc
ret
dec
cmp
movsl
fwait
cmp
mov
xlat
lea
enter
sub
mov
cwtl
add
mov
mov
and
jns
call
push
push
mov
jno
inc
push
out
adc
and
jno
sar
pop
add
pop
adcb
cmp
add
int3
inc
or
push
cltd
in
xlat
inc
lahf
dec
rolb
cmpsl
mov
sub
int
pop
pop
cmp
cmp
mov
inc
fcmovbe
test
adc
mov
rdpmc
adc
aaa
xchg
fwait
push
std
call
scas
push
jl
mov
mov
call
pop
mov
ds
inc
call
fcompl
adc
pop
jbe
mov
jmp
call
xor
rcrb
add
dec
mov
sub
mov
mov
inc
andl
out
sub
cwtl
idiv
ret
mov
loopne
andb
lods
cmp
popa
stos
sti
add
clc
mov
mov
and
arpl
dec
cmp
mov
cmp
push
jbe
xchg
lcall
movsb
cmpsb
sbb
lock
jl
adc
sbb
xorl
mov
fs
pop
icebp
jmp
cmp
mov
add
loope
cs
sbbb
mov
xor
jmp
or
xlat
inc
jecxz
repz
nop
mov
push
mov
mov
popf
mov
test
pop
test
adc
mov
fdivrs
jg
xlat
mov
out
sbb
movsb
and
mov
lcall
or
ds
shlb
inc
pop
or
mov
mov
sbb
lret
bound
sbb
std
cmp
test
decl
stos
sarb
jno
jbe
lea
cmp
std
adc
adc
xor
ljmp
test
sbb
fldt
add
dec
or
jmp
in
push
xorb
mov
test
and
or
cli
xor
mov
inc
into
loop
cmp
daa
add
decl
add
mov
mov
testl
fwait
fwait
out
ud0
jg
push
dec
je
dec
mov
push
and
stc
mov
bound
call
ja
push
push
stos
les
fidivrl
dec
cmp
orb
adc
movsb
and
xchg
dec
sbb
aas
adcl
sub
mov
loop
sarb
adc
pop
imul
out
jl
lcall
fnsave
cs
fists
push
sbb
mov
call
sub
sbb
popf
imul
jle
xchg
imul
mov
mov
mov
out
fcoml
pop
fsubl
dec
and
push
ss
and
mov
push
push
pop
inc
mov
enter
pop
hlt
lcall
cwtl
sub
sbb
adc
lock
sbb
test
dec
xor
not
inc
sahf
mov
xchg
subl
cltd
mov
add
push
and
fisttps
stos
scas
js
std
add
dec
insl
int
pop
scas
subb
je
mov
lods
push
ljmp
push
mov
add
push
mov
hlt
pop
jg
inc
pop
sub
arpl
jg
push
mov
fsub
push
cmp
rcll
sbb
sbb
repnz
in
lret
pop
pop
fldcw
push
cmp
inc
cmpsl
ljmp
mov
cmp
xchg
popf
cmp
insl
pop
mov
das
icebp
addb
sub
pop
lret
jne
xlat
js
xchg
inc
pushl
push
jne
sbb
or
out
mov
loopne
test
lods
pop
ds
shr
pop
mov
pop
pop
addb
push
push
lea
pop
jle
ljmp
sub
and
lcall
dec
xchg
push
push
dec
push
mov
lods
xor
xor
push
cmp
xchg
dec
pop
cmp
pop
pop
dec
lea
dec
or
xor
mov
fnstenv
sbb
fs
pop
xchg
mov
pusha
jmp
jecxz
sub
ljmp
bound
adc
push
or
xor
pop
cmpsl
shll
fwait
insl
mov
int3
xchg
popf
xor
adc
les
add
cltd
aam
ljmp
adc
incl
pop
ret
xchg
imul
and
lcall
push
sub
orl
incl
xor
mov
lods
or
test
lcall
cmp
sbb
fcmove
push
cli
fistpll
insl
stos
adc
sub
lcall
pop
jo
imul
shll
cmp
lcall
and
mov
leave
inc
das
lcall
adc
std
pushl
xchg
scas
or
mov
inc
push
mov
or
add
mov
call
iret
fstpt
lods
sbb
pop
jns
jo
bound
inc
mov
fadd
sbb
daa
mov
jp
popf
ss
ficoms
lods
bound
xor
pusha
iret
pusha
jmp
mov
sub
mov
push
inc
addr16
testl
int3
out
cmp
imul
lret
cmp
movl
cld
sahf
jle
scas
and
mov
fs
inc
repz
lahf
xchg
test
outsb
flds
adc
sub
jbe
mov
ss
mov
pushl
jbe
mov
ds
mov
inc
pop
imul
loope
pusha
inc
adc
in
outsl
test
sahf
out
cltd
mov
mov
sti
fisubl
add
call
mov
icebp
pop
shlb
dec
sub
xor
jae
into
xor
orb
lcall
jmp
dec
pop
inc
int
fstpt
mov
and
test
sub
stos
dec
adc
push
daa
sub
jecxz
mov
call
dec
lds
xor
jae
jmp
jg
jmp
push
add
test
cmp
jge
inc
ja
je
xchg
adc
cltd
push
pop
push
mov
inc
push
aas
sbb
je
loop
pop
add
pushl
xchg
enter
iret
pop
add
cld
push
pop
push
shll
in
pop
arpl
xchg
and
dec
outsl
xorb
incl
or
rol
out
dec
dec
mov
jmp
out
pop
sbbb
stc
or
pop
jbe
fsubs
mov
xor
jno
xor
jb
inc
imul
mov
add
mov
push
int
adc
mov
sub
mov
push
mov
adc
std
inc
adc
mov
test
mov
int3
or
jle
and
sbb
mov
repz
mov
mov
stos
sub
pushf
push
test
fistpl
hlt
stos
mov
mov
pop
or
loopne
pushl
add
shlb
and
dec
fistl
lods
cmp
add
cmp
push
xor
rcrb
xor
rcrb
dec
fdivrp
ljmp
sar
mov
lret
sbb
icebp
add
aad
das
adc
dec
stos
mov
jmp
jecxz
mov
cmp
adc
mov
dec
scas
ret
or
decl
push
dec
popf
mov
mov
adc
add
sarb
pop
or
aam
jns
sbbb
pop
jns
xor
out
dec
stos
notl
popf
stc
call
das
xor
aam
push
fiaddl
pusha
jl
jecxz
jmp
add
adc
mov
adc
fistps
ljmp
rolb
insl
sub
adc
lret
xchg
dec
xlat
mov
nop
int
inc
mov
pop
fs
call
jb
movsb
movsb
jae
in
xchg
into
sbb
push
mov
mov
ljmp
out
in
orb
sbb
xor
xchg
fimull
jbe
xor
mov
ljmp
sahf
cmp
mov
add
lea
in
xchg
jae
xchg
and
stc
xchg
xlat
cli
insb
imul
jecxz
push
orb
mov
dec
xchg
call
or
dec
lods
xor
lahf
xchg
jb
imul
push
xchg
push
pushl
sub
test
and
fistl
jl
dec
stos
jbe
push
je
xchg
popf
incl
fcmovnbe
xchg
and
int
sbb
mov
jbe,pn
imul
repnz
ljmp
pop
xchg
pop
push
aam
out
mov
cmp
dec
outsl
outsb
add
mov
pop
and
add
out
loope
stos
mov
jmp
xchg
xor
fisttpll
andb
adc
inc
lock
mov
clc
hlt
je
inc
in
adc
fcomps
cmp
sbb
sub
mov
or
fsts
push
pop
cli
daa
data16
incl
hlt
roll
sub
xlat
sahf
inc
das
mov
scas
pop
mov
nop
mov
push
loope
call
sahf
adc
out
ret
or
cwtl
ret
mov
fimuls
jbe
dec
mov
adc
pop
sbb
jb
jne
jl
ret
mov
add
pusha
cmp
movl
dec
inc
cld
ljmp
sti
dec
cmp
das
sbb
dec
jbe
mov
adc
add
icebp
pop
test
sarl
popa
cld
incl
out
cmp
bound
test
push
mov
mov
mov
repz
bound
fwait
xchg
and
fcoml
push
push
pop
out
ljmp
mov
or
movsl
test
andl
call
daa
mov
cmp
decl
out
nop
push
mov
cmc
lahf
dec
sbb
inc
push
and
insl
push
xor
aad
aad
dec
xchg
outsb
xchg
mov
cmp
jo
push
dec
adc
push
ljmp
mov
pop
pop
iret
jmp
loopne
pop
js
adcl
jo
xchg
push
aas
push
popf
test
adc
out
xchg
inc
xor
stos
push
xor
add
and
add
xchg
dec
sub
mov
call
call
lods
add
push
pop
xor
cmp
push
cmp
outsb
ds
pop
in
adc
adc
notrack
cli
dec
mov
es
mov
sub
mov
shl
ljmp
cli
adc
mov
lock
or
subb
es
mov
adc
cmp
add
xchg
adc
out
loopne
sbb
stc
adc
fcmovb
ret
lcall
sub
sbb
mov
loopne
outsb
add
mov
movsl
mov
push
cmc
sti
xchg
sahf
adc
icebp
cmp
out
mov
mov
cmpsb
les
xchg
repnz
out
fsubrs
cmpsb
mov
mov
ljmp
cs
sahf
xchg
in
cmp
sub
cmp
aad
sbb
or
jle
fisubrs
push
jbe
daa
add
push
xor
or
mov
lcall
mov
gs
or
mov
aaa
adc
pop
into
push
cmpb
mov
sub
mov
cld
push
inc
nop
addr16
loopne
push
fisubrl
jg
pop
jp
out
lahf
mov
scas
jae
mov
adc
jg
dec
imull
out
decl
add
xchg
cmc
ljmp
cmp
imull
sbb
insb
pop
xor
fnstenv
sbb
pop
mov
in
push
in
rcrb
xor
sahf
and
ljmp
lea
push
pop
leave
daa
sub
js
aaa
enter
cwtl
lds
pop
loop
push
mov
push
movsb
pop
cmp
push
jne
jne
ds
inc
ret
mov
movsb
call
nop
push
pop
insl
lahf
mov
pushf
nop
repz
lock
ds
adc
call
xchg
shrl
jmp
bound
mov
dec
pop
call
inc
pop
fmul
dec
cwtl
mov
and
xor
adc
dec
mov
xchg
sbb
call
jno
cmp
lret
push
pop
jae
mov
jns
inc
or
fldt
xor
xor
loop
pop
pushl
sti
xchg
pushf
sbb
imul
shlb
decl
or
cmpsb
stos
out
xor
std
pop
nop
mov
lret
pop
adc
jnp
jg
lret
jg
inc
jb
pop
add
sti
ret
and
inc
adc
lcall
in
call
adc
nop
mov
pop
push
nop
sar
testl
lcall
push
add
js
icebp
jno
sub
lds
in
dec
sbb
xchg
mov
xlat
movsb
dec
int3
xor
js
xchg
adc
mov
scas
ljmp
push
int3
adc
into
pop
orl
imul
push
add
aam
sub
sub
mov
and
loopne
jge
outsb
lds
insl
sarl
inc
xor
fisttpll
sub
fiaddl
inc
ret
dec
jbe
in
jne
ss
faddl
lcall
sbb
xor
insl
xor
inc
dec
minps
cld
sub
decl
nop
clc
mov
and
movsl
xchg
pop
or
push
inc
xchg
push
ds
sbb
or
jmp
fsub
outsl
incb
cmpsb
incb
mov
outsl
lret
and
shrl
mov
mov
or
inc
pusha
enter
call
mov
mov
lret
inc
ljmp
sbb
sub
icebp
mov
add
lock
fucomip
mov
imul
fbstp
lods
or
xchg
imulb
jp
or
jae
imul
ljmp
test
icebp
lods
sub
dec
stos
bound
movb
por
sbb
ja
ljmp
jecxz
xchg
orl
decb
dec
cmc
inc
loop
mov
push
pusha
cld
in
mov
fcomip
call
jbe
xchg
adc
test
lret
pusha
dec
ret
xor
in
hlt
cmp
adc
pop
mov
outsb
js
cs
lcall
outsb
and
pop
cmp
aad
loopne
in
push
out
sub
outsb
or
idivl
mov
and
das
adc
inc
roll
mov
adc
jb
pusha
xchg
mov
lock
pushl
shl
xchg
iret
pop
cwtl
sub
dec
pusha
out
test
leave
jecxz
stos
outsl
pop
cmc
or
movnti
int3
test
dec
roll
icebp
ss
mov
mull
dec
shrl
sub
xor
pop
sti
or
inc
adc
outsb
outsb
lret
arpl
lahf
popf
addl
pushl
inc
cld
btc
sahf
iret
pop
xor
loopne
pop
cwtl
stos
daa
xor
xor
call
dec
imul
inc
pop
ljmp
das
jo
and
leave
out
mov
adc
dec
jl
call
adc
addb
ret
ret
ds
xlat
pop
movsb
lcall
push
insb
mov
pop
inc
mov
jmp
repnz
xor
mov
jnp
decl
ror
pop
cmp
xor
and
repz
jp
mov
or
sub
data16
jae
xchg
leave
fwait
xlat
cmp
push
fidivl
mov
sti
mov
mov
mov
or
xchg
cmpsl
pop
xor
add
jle
stc
pop
push
adc
xchg
pop
xchg
ljmp
xchg
sti
sarb
lds
orb
loop
sbb
rclb
popf
imul
xor
loope
mov
out
pop
pop
rcrb
call
or
xchg
cli
clc
daa
in
cmp
lods
sub
push
and
push
daa
sbb
je
cmpsb
loop
mov
pushf
fcomip
inc
push
push
cmp
or
mov
mov
and
mov
call
loop
xor
mov
cmc
fisubl
scas
sub
sbb
fildll
into
and
stos
mov
push
loop
pop
add
test
push
dec
xor
sti
ljmp
cli
inc
insl
push
call
test
stos
xchg
or
pop
test
pop
inc
add
stos
clc
jl
dec
icebp
arpl
push
loopne
ljmp
or
pop
adc
repnz
ja
mov
adcl
push
jae
pushl
sbb
jmp
add
xor
jns
sbb
inc
jnp
in
mov
cmp
outsl
push
ljmp
clc
lcall
gs
dec
repnz
adc
jne
or
pop
and
leave
inc
gs
jmp
nop
mov
mov
push
mov
sub
jecxz
pop
cmc
push
sub
sub
jle
sbb
stos
ds
xchg
lcall
push
pop
cli
mov
jg
dec
jno
imulb
fdivrl
ret
dec
repz
iret
cmp
incl
adc
fwait
ljmp
fildl
mov
sbb
mov
mov
mov
dec
stc
adcb
cmpb
mulb
lcall
cmp
loopne
and
or
fsubl
adc
ljmp
cmpl
js
hlt
pop
add
fs
bsf
jl
sub
jle
mov
cli
loopne
pop
jmp
adc
jne
bound
addr16
shll
les
xchg
and
push
bound
mov
lcall
addr16
mov
adc
push
mov
movsb
stos
jne
pop
fstpl
shl
mov
mov
call
inc
inc
xor
xor
movsb
and
dec
xchg
jmp
stos
and
stc
push
je
push
push
mov
jns
fsubp
vfrczpd
pop
repnz
mov
aaa
sub
fcmove
add
mov
cmp
lods
xchg
je
push
testl
mov
test
push
xor
jae
cmpsb
dec
out
mov
insb
or
sti
in
dec
outsl
dec
xchg
int3
sub
mov
scas
clc
outsl
clc
cmp
lds
mov
stc
push
push
addb
inc
pusha
test
je
xor
ds
or
lods
and
rclb
cmc
popa
xor
pop
push
inc
std
add
pushl
nop
xchg
cmc
test
pop
and
push
mov
mov
jp
jmp
cmp
mov
out
jge
jo
mov
sti
cwtl
xor
repz
xor
or
in
mov
xor
mov
xor
lcallw
jmp
or
mov
repz
cwtl
cmpsb
lea
jmp
mov
push
sbb
adc
pop
xchg
xor
sub
cmc
push
adc
je
ljmp
jmp
lds
es
lcall
and
aaa
adc
mov
mov
or
cmp
jae
enter
jmp
xchg
jl
pop
xor
xlat
dec
ret
add
sub
push
insb
push
aam
out
ss
inc
jg
ljmp
sti
out
es
es
inc
jg
jno
arpl
push
push
cmp
nop
xchg
subb
in
sar
in
pushl
das
ss
xlat
and
sub
orl
iret
and
or
lcall
loop
bound
in
xchg
cld
cmp
fs
cld
fcos
mov
ds
pop
sub
call
out
dec
xchg
popf
data16
or
sub
xor
mov
insb
pop
xlat
lret
xchg
lds
sarb
lods
movsl
dec
xor
or
ljmp
in
cwtl
aam
inc
push
mov
ret
les
xor
ss
stc
ljmp
loop
cmp
mov
xor
jp
sbb
in
pushl
das
dec
shlb
mov
loop
dec
mov
push
stos
aam
add
adc
xor
inc
jno
das
mov
pushl
testb
ss
or
xor
es
jmp
jo
jg
sub
in
adc
jns
pop
es
repnz
call
dec
mov
push
jp
sub
dec
lods
push
jmp
int3
cs
outsb
sti
sbb
jge
push
pop
jecxz
push
test
lods
movsl
dec
and
lcall
sub
xorl
in
jmp
int
sbb
outsl
pushf
or
cmpsb
je
sbb
jns
ret
test
sbb
adc
lahf
lods
push
sbb
inc
test
ficomps
test
cltd
jge
pop
cli
inc
and
out
outsb
mov
ljmp
repnz
call
xchg
xor
pop
imul
jae
cltd
push
mov
inc
xchg
sub
and
scas
js
jg
cs
jne
xchg
popa
lret
adc
inc
adc
push
push
idivb
call
inc
sub
enter
mov
or
shlb
adc
mov
inc
jno
sub
repnz
lret
cmp
out
add
leave
test
movsb
rcll
iret
sbb
ljmp
cld
mov
jecxz
cld
mov
in
jne
lcall
ror
in
dec
insb
dec
stos
dec
jp
xor
xchg
cmpsb
sbb
dec
repz
cmp
cmpsb
sbb
sar
ljmp
adc
push
pop
mov
pop
loope
fs
mov
sub
cmp
rcll
add
shrb
ds
stos
div
mov
frstor
xor
sub
inc
cmp
push
call
lret
inc
xor
mov
sbb
sbb
bound
mov
push
fdivrl
leave
rcrb
jbe
jbe
and
pop
mov
pop
in
in
push
out
jg
lret
clc
sub
outsl
fldl
cwtl
xchg
sub
cmp
ja
clc
push
inc
repz
xor
push
lret
lds
ljmp
lock
ja
add
push
adc
pop
inc
lods
iret
idivl
ljmp
xchg
sbb
ljmp
push
xor
aam
sub
or
mov
cwtl
lahf
clc
aam
les
jecxz
out
jb
jns
sub
and
je
xchg
mov
sbb
or
inc
adc
out
xchg
fmul
loope
xchg
xchg
nop
cli
or
and
and
dec
pop
pop
cli
loopne
das
iret
pusha
sbb
and
data16
xchg
xchg
fmuls
outsl
mov
ljmp
cld
loop
enter
xor
arpl
mov
int3
ja
jno
xor
mov
pushl
jp
xchg
dec
jmp
sbb
cmpsb
jmp
fbld
rol
ja
fdivrp
lcall
adc
sub
iret
push
dec
xchg
in
pop
mov
adc
sbb
mov
test
pushl
js
fsubrs
scas
and
imul
and
test
cmp
mov
mov
incl
dec
inc
mov
and
je
out
sub
mov
mov
xor
jnp
cld
push
in
movsl
in
mov
sub
cld
mov
dec
clc
xchg
nop
js
push
incl
in
mov
push
mov
in
in
mov
fidivrl
mov
in
cltd
adc
fimuls
pop
loope
sarb
or
ljmp
pop
mov
jae
pop
stc
jl
sbb
inc
jnp
rolb
pop
outsb
inc
or
pushl
and
dec
popf
jne
test
inc
lea
rcl
fdivp
and
xchg
adc
pop
fnsetpm(287
les
lock
push
inc
dec
or
mov
and
mov
lock
push
push
incl
dec
xchg
xchg
mov
scas
outsb
mov
jae
enter
bound
lods
cli
push
jno
push
fnsave
pop
mov
jmp
and
push
sti
js
sbb
jnp
or
pusha
mov
aas
insl
lock
inc
mov
sbb
dec
into
sbb
adc
sub
ljmp
fsubrl
push
xchg
lcall
fs
xor
nop
xorl
and
mov
fbld
jae
out
sahf
outsb
scas
cli
mov
sub
add
sarl
andb
call
insb
inc
cld
push
movsb
or
clc
sbb
mov
enter
decl
mov
jno
adc
mov
jno
icebp
test
icebp
ljmp
jbe
adc
pop
movsl
jg
sahf
adc
mov
xor
enter
fabs
mov
sub
shrl
mov
mov
movb
and
jbe
and
xchg
dec
dec
push
in
pushl
mov
js
sbb
jae
xor
and
mov
jmp
push
loope
jb
push
dec
mov
xchg
push
push
lea
pusha
sti
mov
lcall
imul
hlt
pop
inc
cmp
adc
jp
lret
dec
push
loopne
push
inc
sbb
decl
cli
test
pop
xchg
push
movsb
add
push
call
popa
scas
pop
lahf
lock
ljmp
dec
pop
inc
js
mov
xor
push
test
jmp
out
sub
dec
movsb
mov
mov
sar
jmp
jle
mov
addr16
jns
hlt
push
inc
jnp
in
test
xor
fwait
loopne
lcall
or
push
lcall
add
mov
xor
sbb
in
mov
cmp
jg
ljmp
notl
mov
dec
mov
rolb
cli
ret
cmc
adc
ljmp
ja
lods
mov
mov
jecxz
push
inc
pop
les
xchg
test
push
adcb
call
push
jnp
push
sbb
cmp
out
cmpsb
in
ret
in
movsl
cmpsl
imul
mov
fcomip
ljmp
hlt
insl
int3
or
xchg
xor
movsl
mov
adc
dec
int
pop
xchg
imulb
jae
jmp
int3
cmp
arpl
cmp
push
fs
loop
cmp
jmp
rclb
ss
push
pop
dec
cmp
or
nop
xchg
in
rcrl
push
mov
dec
xor
sub
rcrb
push
decl
mov
xor
dec
aam
inc
call
xchg
rorb
push
out
cli
pushl
icebp
lods
and
test
xor
cmp
pop
fwait
xchg
pushl
shrl
push
out
mov
xor
test
nop
push
xchg
leave
out
mov
nop
fs
mov
pushl
data16
pop
pop
xor
pusha
push
add
out
ret
in
mov
daa
jle
incl
lods
ret
subb
ret
scas
cmpsb
dec
mov
mov
pop
fistl
mov
push
pop
sahf
xor
hlt
jns
cmpsb
dec
lds
dec
mov
scas
lcall
stos
and
shl
xchg
mov
push
sbb
test
push
push
movsl
fimull
xchg
call
addb
sarl
inc
adc
movsl
popf
mov
jg
mov
test
cltd
out
xchg
ljmp
aas
adc
in
stos
lret
fldl
mov
outsl
xor
mov
repz
incl
adc
inc
shll
push
cwtl
dec
arpl
cmpsb
inc
loope
ljmp
movsb
shlb
inc
psrlq
jg
cmpsl
sub
int
cmp
jg
mov
cs
std
dec
mov
jno
sub
nop
push
jb
pop
test
add
or
xor
mov
sub
pop
ja
lahf
mov
xor
add
stos
adc
xor
pusha
cli
fildll
out
in
inc
push
sbb
or
das
dec
dec
cmp
negl
ds
and
mov
mov
mov
mov
and
sbb
push
jmp
std
or
and
jbe
aam
stc
adc
inc
push
sar
call
frstor
punpcklwd
push
stos
jnp
bound
in
inc
or
sub
incl
movsl
jno
jo
cmpsl
adc
aas
dec
call
fs
mov
adc
test
scas
lahf
sub
mov
ljmp
add
cmpsb
add
push
xorb
fmuls
lds
stc
push
in
pop
jecxz
fwait
fsts
fwait
mov
jp
cmp
mov
mov
pop
mov
push
sub
inc
movsb
mov
movsb
in
xor
mov
es
ss
push
iret
data16
pop
enter
mov
outsb
cli
stc
jmp
jecxz
pushl
push
sub
sahf
lock
testb
inc
sbbb
clc
dec
jmp
ret
fdivrp
sbb
in
nop
lds
and
pminsw
scas
mov
pushl
xchg
or
clc
stos
xchg
cmp
test
ss
loopne
push
je
lcall
sbb
xchg
dec
or
dec
inc
jl
mov
inc
scas
daa
sub
xchg
ljmp
mov
int
or
test
je
mov
fldt
hlt
xor
mov
pop
hlt
decl
pop
in
adc
testl
inc
loope
test
je
movsb
and
call
mov
push
scas
int
bound
dec
lahf
pop
adc
lcall
test
jmp
fsubp
xchg
dec
aam
repnz
or
ret
enter
or
pushl
loope
adcb
and
jne
and
cmc
add
xlat
insb
dec
out
jmp
div
mov
inc
xchg
lea
leave
sbb
in
inc
hlt
in
adc
sub
decl
aaa
add
mov
inc
sbb
lea
inc
xchg
add
push
popf
add
jo
xchg
push
sub
call
push
inc
scas
push
inc
insb
mov
xor
xor
mov
sub
lahf
inc
pop
or
jbe
dec
sub
pop
inc
mov
test
jo
and
dec
lcall
inc
clc
aaa
cmc
subb
andb
mov
xor
sub
decl
jns
rolb
pop
add
sbb
jp
sbb
and
sti
outsl
cld
lcall
repz
mov
mov
sbb
aas
scas
dec
icebp
lret
pop
jno
iret
push
adcb
sub
add
in
in
lcall
jmp
in
cs
mov
jmp
jle
notl
add
and
rolb
ljmp
stc
lods
es
rorl
pop
jns
test
cmp
add
jne
or
pushl
mov
xor
xor
pop
testl
ja
bound
inc
fisttps
filds
jno
and
lcall
das
push
std
sbb
mov
or
js
rcrl
inc
and
fcomip
jmp
inc
enter
lea
sub
aaa
jg
pop
stc
jmp
or
jg
add
cmpsw
push
test
push
cs
mov
cmp
sub
ret
jecxz
loop
sbb
xlat
pushf
add
roll
in
das
mov
jbe
push
dec
push
aam
stos
sbb
push
push
inc
push
and
cli
pop
mov
out
call
sbb
adc
cmp
adc
pop
int
test
mov
ficomps
iret
or
popa
leave
fdiv
std
icebp
add
test
movsl
push
lret
push
lcall
call
testl
ja
icebp
outsl
outsb
xchg
or
dec
test
add
sub
lcall
fsubl
add
push
fimuls
mov
adc
loop
jae
aad
xchg
xchg
pushl
mov
bound
adc
lret
int
enter
test
xor
dec
sahf
ljmp
mov
xchg
in
mov
shrl
imul
push
dec
ret
sar
movsb
push
push
sbb
rcrb
das
pop
or
out
mov
aam
cmp
mov
ja
inc
mov
sbb
test
pop
repnz
pop
mov
xor
dec
jg
pop
xchg
pop
std
fidivrs
in
sub
adc
inc
imul
push
int
clc
jg
lcall
dec
arpl
inc
pop
lock
roll
inc
inc
sar
cld
ljmp
sub
sub
stos
push
push
jne
inc
outsl
pop
jnp
add
ljmp
pop
ret
aam
js
and
sbb
xchg
outsb
cmc
mov
lods
pop
sahf
xlat
xchg
jg
fidivs
dec
and
js
mov
xchg
push
rcrl
xchg
clc
pop
mov
mov
or
daa
add
mov
push
loope
mov
out
hlt
leave
mov
stos
and
jb
call
stc
pop
out
mov
mov
js
movsb
push
add
mov
jmp
pop
dec
and
int
jmp
aam
jbe
sub
fcomps
jp
cs
mov
cmp
aad
call
call
add
pop
pop
pop
push
insb
jle
xor
lret
push
push
or
push
jb
out
xor
jb
inc
stc
push
adc
or
fstl
push
scas
pop
cmc
outsb
pop
hlt
outsb
test
xor
add
lahf
mov
data16
or
cmp
inc
subb
jecxz
imul
fistl
adc
mov
cli
movsb
loopne
imul
push
ds
cmp
xor
cld
test
inc
mov
inc
pop
lods
sbb
lods
iret
nop
add
xchg
pushl
lods
push
xor
inc
pop
jno
dec
xor
sbb
addr16
les
in
push
xchg
pop
lods
dec
xor
cmp
arpl
adc
or
outsl
cltd
push
sbb
ret
int3
scas
or
sub
or
repz
pop
jge
stos
lea
cld
adc
inc
lret
lret
sbb
push
negl
pusha
push
xchg
pop
inc
aad
imul
adc
mov
add
cmp
fldt
pop
push
mov
cmp
rcr
lahf
lock
mov
int
mov
cmp
dec
movsl
dec
imul
incl
call
or
in
andl
and
das
inc
or
mov
mov
lods
cltd
rcrb
sub
js
das
stos
shl
jle
ret
fwait
cli
cmp
xchg
inc
enter
es
ljmp
in
xor
pop
addr16
ljmp
das
arpl
adc
jmp
cmp
sub
mov
incl
xchg
outsl
mov
sub
stc
inc
idivb
ljmp
sbb
arpl
adc
pushl
jmp
or
pushf
mov
idivb
push
aam
jnp
repnz
incl
sarb
mov
adc
mov
mov
shlb
lcall
lock
jecxz
push
cmp
imul
pop
dec
lods
subb
adc
aam
and
cld
out
cli
sarb
sub
xor
mov
ret
in
mov
test
popf
push
fucomi
dec
cltd
cmp
decl
and
ja
xlat
popf
xor
sub
mov
sbb
jmp
fidivrl
shr
into
xor
lods
sahf
pop
xchg
push
mov
jecxz
pop
fdivs
and
lcall
ja
pushf
push
call
or
mov
in
mov
jns
call
inc
mov
call
push
inc
xchg
in
xchg
inc
push
or
fwait
cld
xor
add
inc
jecxz
sub
fcmovb
or
js
pushl
sahf
fs
pop
popl
stc
add
in
popf
ss
test
loope,pt
mov
push
lcall
pop
fidivs
lret
jg
and
adc
jo
sub
fmuls
stc
incl
and
or
les
enter
ret
xchg
pop
cld
mov
cmpb
push
adc
int3
orb
incb
push
int3
xor
into
lret
sbb
imul
fsubrp
pop
fiadds
decl
scas
stos
and
add
mov
negb
insl
insb
mov
jne
js
int3
pushf
mov
push
cmp
jmp
adc
pop
mov
enter
outsl
into
mov
sti
hlt
mov
pushl
mov
add
sahf
jbe
lret
test
decl
xchg
in
sub
test
or
cli
push
mov
or
mov
lcall
sub
xorl
fists
in
xchg
mov
repnz
outsb
dec
loopne
jmp
push
adc
xchg
imul
decl
adc
xchg
lret
jbe
dec
pop
imul
test
push
movsb
movsl
mov
popf
test
add
dec
ret
adc
xchg
push
sub
notb
pop
into
movsb
adc
xchg
dec
jbe
popf
mov
cwtl
sbb
and
testb
lcall
cmc
das
jo
iret
pop
cmpsb
cmp
icebp
adc
pop
jle
push
push
rorb
loope
call
loope
mov
xlat
bound
ljmp
xor
mov
push
pusha
jg
inc
add
mov
sbb
sahf
or
pop
ja
in
test
inc
cli
cmc
xor
icebp
arpl
andb
outsl
pop
xchg
vmaxss
xor
inc
pop
out
decl
rorl
mov
sbb
dec
sub
inc
cmp
jmp
arpl
clc
mov
mov
jecxz
inc
xor
fsts
inc
inc
icebp
sar
incl
push
xchg
mov
pop
xchg
repnz
mov
ljmp
es
dec
in
ljmp
sbb
cmp
adcb
pop
ja
mov
lcall
aaa
add
push
fwait
sub
mov
add
std
and
adcl
or
push
fsts
jnp
lock
out
sahf
jl
outsl
dec
pop
cmpsl
imul
in
out
outsb
jb
repnz
test
decl
test
addr16
lea
scas
fstpt
mov
mov
in
int
popf
cmp
pop
cld
call
mov
je
push
lret
aaa
pop
mov
pop
adc
lahf
decl
mov
scas
popf
in
add
pop
ud1
cmp
xor
pop
pop
fdivrp
decl
adc
sbb
pop
jae
mov
dec
adc
jmp
test
push
adc
mov
sbb
push
mov
jae
adc
out
jmp
and
mov
cmp
imul
sbb
mov
push
lcall
pushl
jo
js
pop
mov
in
pusha
push
int3
mov
pop
mov
pop
pop
xchg
insb
or
call
dec
xor
pop
out
inc
inc
in
push
push
jg
stos
cmp
xchg
xor
negl
incl
out
adc
and
leave
in
add
fistps
paddusb
fwait
jecxz
jbe
in
ja
mov
in
cmp
ret
movsl
lret
rorb
sbb
or
pop
jo
or
cmp
loopne
cmp
loope
fsubl
mov
adc
mov
scas
ja
adc
nop
aas
call
cmpsb
rorl
ds
and
inc
add
jg
mov
dec
adc
insb
sub
cmpl
hlt
lds
sbb
pop
add
push
xor
sbb
pusha
pop
sbb
in
cs
fcomip
shl
cmp
xchg
inc
movsb
xchg
test
outsl
cli
filds
les
scas
outsb
movsl
sub
out
adc
mov
add
pop
push
push
daa
add
or
lcall
lods
mov
stos
or
dec
push
mov
repnz
aas
stc
popa
push
incl
adc
or
outsl
test
jne
pop
loop
data16
or
sub
cmpsl
stos
push
dec
cli
push
out
sub
ret
pusha
scas
in
into
lahf
adc
xor
jo
and
jmp
rcll
pop
push
inc
xor
cmp
imul
arpl
incl
cwtl
jmpw
jns
jae
push
scas
and
inc
mov
inc
cli
mov
xchg
lcall
cmpsl
rorb
add
jge
jne
mov
mov
out
mov
insb
inc
loopne
lahf
lods
and
jb
test
or
jo
cli
mov
push
test
cmpsb
roll
call
xor
jge
fidivrs
jo
divl
lret
loope
in
mov
lcall
repz
pop
in
dec
and
sbb
call
shl
or
mov
nop
rclb
adc
lret
test
mov
ljmp
rorb
movsb
cmc
jo
neg
lea
ror
test
push
ret
stos
push
or
mov
add
test
jmp
aad
andl
lretw
mov
lods
xchg
mov
xchg
pushl
mov
mov
and
insb
pop
mov
outsb
repz
adc
popa
lret
xchg
push
ljmp
jne
mov
and
jl
cmc
ds
std
fisttpl
outsb
xor
in
dec
or
sub
stos
test
lcall
ja
cli
in
insl
das
jl
lock
data16
loope
or
fimull
jne
pop
std
call
je
mov
add
enter
push
cltd
leave
shrl
pusha
mov
lcall
andb
mov
call
xchg
inc
les
icebp
mov
addb
mov
mov
into
pop
movsl
add
jae
out
ret
incl
fcmovu
pop
dec
cmpsl
mov
data16
sti
pop
lds
push
ja
and
aam
pop
and
mov
in
sub
jmp
insb
subb
insl
movsl
and
pop
sar
ret
mov
dec
xor
pushl
incb
push
inc
push
fildl
out
mov
or
xor
push
das
cmp
in
xor
jmp
test
incl
mov
repnz
inc
sbb
mov
outsl
hlt
jae
adc
push
mov
cs
mov
or
test
adc
movsl
jb
sbb
fsubr
dec
test
outsl
std
xlat
outsl
out
hlt
pushl
addr16
push
jecxz
ljmp
sar
std
dec
rcl
xor
and
fucomip
ret
enter
push
aaa
push
pusha
scas
jae,pt
ss
stos
xchg
and
sbb
jbe
call
fsts
movsb
dec
push
mov
call
imul
pop
jb
push
jnp
xchg
movsb
sub
sub
push
sub
gs
insb
je
lahf
cld
incl
cld
leave
mov
shr
push
mov
and
dec
aam
pushl
or
fisubrl
push
mov
jnp
clc
xlat
sub
dec
xchg
fdivr
jmp
lcall
int
inc
in
rclb
add
dec
or
enter
es
inc
mov
loop
bound
test
push
xchg
lcall
mov
xchg
jl
ljmp
std
ljmp
pop
push
dec
pop
pop
dec
adc
mov
jl
cld
mov
mov
or
and
dec
out
xchg
or
xchg
outsb
inc
iret
xor
mov
rcll
push
mov
push
dec
mov
hlt
movsl
icebp
outsl
scas
aaa
cwtl
mov
dec
daa
and
and
lahf
push
add
fcompl
lea
loope
dec
js
or
mov
call
es
mov
cmp
add
xchg
hlt
pushf
shl
jb
fldl
popa
gs
hlt
scas
cmpsb
gs
pushf
dec
xchg
push
inc
xor
fucomip
out
fstps
mov
dec
movsb
cwtl
enter
movsb
and
pushl
or
pop
je
push
push
ret
sub
mov
ljmp
sub
push
ja
inc
mov
outsb
add
mov
fdivl
arpl
dec
add
movsb
cmpsl
inc
sub
jge
test
pusha
dec
mov
sub
fbld
ds
cmpsb
jae
mov
xchg
pop
mov
jg
push
cmp
stos
in
loop
adc
imul
jnp
lods
fnstenv
mov
bound
pushl
inc
pop
sub
scas
mov
jb
cmp
inc
sub
cmp
rcll
mov
outsl
outsb
cld
rclb
or
add
lock
cltd
jg
fucomp
pop
cmc
cwtl
loop
sbb
adc
xorb
loop
pop
cmp
popf
adc
push
fistpll
gs
mov
xchg
cmpsb
or
call
and
pop
sub
jg
xchg
mov
pop
inc
jle
mov
into
cmp
aas
outsl
push
inc
xchg
mov
sbb
mov
imul
mov
inc
mov
jmp
or
push
scas
add
ljmp
push
sub
insb
int
shrb
jnp
jno
mov
mov
mov
std
sbb
jnp
push
jmp
aas
mov
enter
testb
jne
mov
or
jae
or
inc
xchg
cmp
movsb
push
cmpsl
nop
fadd
inc
repnz
xchg
pop
add
pushf
arpl
jle
sub
jmp
shrb
mov
cmp
mov
sbb
js
mov
ja
std
sbb
lcall
mov
mov
insl
mov
sub
pop
in
popf
cli
sub
lcall
adc
insl
sub
cwtl
stos
test
clc
push
ret
inc
push
mov
cld
lcall
jo
lret
data16
fisubl
insb
push
cmp
dec
lret
sbbb
sub
adc
insl
mov
mov
ljmp
sub
stos
nop
sub
jg
sbb
in
stos
es
ljmp
mov
je
jnp
push
dec
jb
xchg
es
pop
add
sbb
pushf
test
lret
sbbl
add
sub
decl
xor
ds
push
popf
inc
in
popa
leave
inc
test
clc
movsl
mov
mov
dec
pop
vunpckhpd
adc
enter
es
repnz
lret
call
ss
push
adc
jbe
gs
and
dec
fnop
cld
decl
cs
mov
lods
and
jle
test
add
sub
cld
ja
stc
lds
aaa
mov
jno
lret
push
or
test
and
sub
or
pop
out
sub
mov
push
ret
jg
loop
das
cli
call
or
dec
mov
push
sub
js
movsb
test
jbe
jmp
push
aaa
jae
pop
jns
mov
or
push
mov
push
mov
pushl
cmp
outsl
or
subl
xor
fists
fucomi
jmp
lret
test
push
adc
or
pop
das
push
push
and
mov
mov
xchg
mov
mov
andb
xchg
scas
mov
and
and
lock
jo
add
mov
and
pop
ja
int3
adc
ljmp
lods
pop
cld
inc
stos
adc
inc
mov
or
loope
and
inc
jmp
cmp
add
outsl
fwait
sub
xchg
fildl
cld
inc
inc
lcall
idivl
push
out
out
mov
xchg
xor
ljmp
test
push
int3
popf
sbb
dec
xchg
cmp
ret
ret
int3
or
fcoms
movsb
aad
psadbw
or
jo
jnp
mov
pcmpeqb
adc
jg
xchg
es
push
nop
push
clc
or
xchg
cmpb
add
jmp
fs
stc
inc
mov
jle
cmp
ficoms
jnp
dec
sbb
dec
out
xchg
cmp
pusha
xchg
jae
add
iret
cltd
cltd
fsubs
ljmp
rol
mov
incl
int
pop
popf
mov
mov
sbb
push
out
aaa
cmp
jl
pop
jb
loop,pn
sub
mov
mov
jecxz
rcll
lcall
sti
testl
test
ror
outsb
or
mov
iret
incl
and
bound
mov
cmpsb
cs
cmp
inc
test
gs
call
cld
cmp
push
clc
and
cmp
push
fdivr
movswl
icebp
ljmp
sbb
mov
mov
mov
scas
repnz
pushl
fcomps
sbb
sbb
popa
sahf
mov
dec
andl
inc
push
and
inc
incl
sahf
mov
mov
fistpll
push
xor
shlb
pop
inc
hlt
mov
insb
filds
cld
dec
imul
mov
repnz
push
or
and
aam
mov
ret
fimuls
xchg
jno
sbb
xchg
decl
mov
test
lock
cmp
add
ret
ljmp
pop
jae
fs
adc
push
in
mov
int
inc
ja
call
scas
shl
push
mov
mov
or
leave
into
es
cmp
fiaddl
rclb
decl
jmp
sahf
insl
negl
aam
mov
or
loope
jmp
mov
mov
xchg
or
aas
pushl
nop
repz
mov
jl
sbb
adc
sbb
aaa
sbb
sti
mov
rolb
jmp
adc
mov
push
outsb
lods
dec
hlt
sarb
jg
push
push
xchg
adc
cld
in
adc
or
dec
cmp
sub
lahf
xlat
lcall
or
inc
pop
adcl
roll
push
mov
pusha
mov
and
pop
cld
pop
push
in
dec
stos
icebp
mov
fisttps
mov
jb
pop
dec
jno
dec
jg
push
inc
mov
xchg
cwtl
cld
mov
mov
mov
decl
inc
out
add
jmp
inc
cmp
push
in
inc
cs
mov
das
lahf
clc
push
data16
mov
mov
int
repz
cmp
bound
mov
lcall
popf
in
xchg
add
inc
xor
sbb
into
sub
ja
adc
sbb
js
addr16
pusha
enter
jbe
fldl
mov
dec
jl
testb
out
xchg
rorl
scas
push
dec
cwtl
lods
dec
cli
jmp
jmp
adc
cmpsl
in
loope
out
fwait
cltd
out
stc
fs
and
hlt
ret
ret
cld
jbe
sub
mov
pop
jmp
int3
inc
mov
mov
jbe
xchg
sub
xchg
inc
lods
mov
pusha
lock
call
or
rol
jns
inc
mov
mov
or
jmp
cld
pop
push
rolb
imul
mov
adc
push
mov
outsl
loopne
std
and
sti
lcall
decl
sbbw
sbb
mov
call
shll
test
sbb
rcrb
lods
call
sahf
enter
pushf
mov
dec
push
push
lret
ds
sbb
push
and
out
nop
dec
loope
cmp
out
xchg
sbb
and
ljmp
bound
movsb
dec
xor
int
ret
push
inc
and
lcall
fisttpll
mov
cmp
and
lds
sub
jg
jle
mov
sub
add
fsubl
xor
mov
sub
call
push
loop
shll
cmp
orl
push
mov
cli
cmp
mov
xchg
add
sar
nop
call
int3
aad
adcb
addr16
pushl
std
jmp
dec
dec
rorb
es
sbb
int3
pop
push
insb
ds
push
lcall
es
cmp
movsl
xchg
mov
pop
dec
sub
mov
incl
bsf
fs
jnp
test
imul
mov
xchg
push
cmc
stos
adc
mov
ljmp
sbb
test
jle
jb
in
or
sub
jmp
in
rcrb
call
gs
ret
testb
in
stc
dec
cmp
enter
inc
stc
or
out
dec
adc
fldcw
fcomps
stos
pop
pop
fnstsw
mov
int3
hlt
scas
mov
decl
paddusb
test
aad
push
and
xchg
cmp
and
jl
pop
inc
or
jp
cld
pop
lahf
mov
and
xor
lcall
pop
sub
into
adc
flds
cmp
lahf
std
cmpsb
jae
pushl
push
and
std
test
sahf
pop
shll
popf
dec
pop
pop
cmc
ret
pop
sbb
fmull
inc
pop
xchg
lods
ljmp
ficompl
fsubr
add
notl
lcall
cmpsb
pop
mov
mov
cmp
push
dec
add
movsb
fistps
xor
mov
add
bound
jbe
je
adc
sub
jmp
cmpsb
jno
push
pop
in
adc
in
jmp
outsl
gs
or
push
push
dec
add
mov
cmp
jno
xor
xor
push
jo
cmp
fmuls
roll
xchg
mov
incl
jle
sbbl
test
mov
mov
into
je
scas
lret
jmp
lcall
hlt
addr16
mov
adc
push
dec
jne
leave
imul
incl
mov
leave
sub
test
mov
ret
stos
inc
push
loopne
add
adc
mov
notb
add
fcomip
call
stos
out
add
add
add
adc
stos
addl
movsb
xchg
pop
daa
mov
pop
add
fiaddl
pop
xor
clc
call
subb
xchg
pop
cmp
mov
mov
pop
dec
dec
incl
jecxz
sahf
inc
stos
cmpsl
sbb
pop
das
lods
call
push
enter
inc
mov
scas
mov
popf
xor
inc
xor
mov
jmp
mov
repnz
ja
jnp
scas
xchg
push
sub
xchg
mov
inc
in
mov
call
call
setae
lahf
enter
pop
mov
push
js
sbb
add
je
fnstsw
mov
add
xor
xchg
xchg
mov
jge
jo
push
pop
bound
mov
or
push
adc
aaa
mov
decl
ss
loopne
and
adc
add
jl
add
aam
call
mov
mov
lahf
and
inc
jo
adc
mov
icebp
mov
jg
sbb
sub
mov
shlb
pusha
hlt
inc
xor
xchg
pop
dec
adc
decl
sub
inc
xchg
lahf
xor
ja
cmp
xchg
cmp
jb
pop
fcomip
lcall
and
int3
into
test
int
mov
mov
out
nop
cs
decl
loop
pop
pop
push
adcl
daa
jae
sub
jbe
repz
mov
xchg
hlt
push
add
push
mov
int3
in
inc
movsb
inc
or
std
jmp
xor
mov
dec
div
daa
outsb
incl
xor
les
xchg
lea
jecxz
aam
pop
imul
add
mov
pop
jp
outsb
scas
jb
fcmove
insl
and
push
pushf
in
pushl
pop
pop
aas
nop
cmpsb
cltd
int3
add
jge
xor
adc
push
outsl
sbb
in
stc
cmc
pop
rcr
and
adc
test
aaa
mulb
cmp
hlt
pop
pushl
cmp
outsb
iret
arpl
cmpb
jbe
sti
xor
pushl
mov
push
mov
jno
push
lods
fcmovbe
cmp
sbbb
cmp
pop
dec
cmpsb
incl
std
mov
das
jl
mov
in
mov
ret
cmp
jb
js
cltd
mov
lcall
js
mov
add
in
pop
sbb
rorl
data16
imul
push
mov
into
loopne
sub
aaa
lea
dec
mov
jb
insl
aas
push
jbe
aas
test
lcall
mov
insl
mov
push
in
xchg
fldl
rcrl
adc
incl
xlat
fcom
notl
loop
adc
xor
adc
lret
pushf
add
add
cs
mov
inc
inc
sahf
movb
and
jbe
es
jo
add
lods
ds
idiv
mov
xchg
fsts
push
push
push
cmpsl
mov
push
jl
jp
jae
mov
mov
dec
mov
in
enter
xchg
push
inc
fimuls
dec
sbb
fldl
sbb
sub
fisttps
mov
ljmp
insb
sbb
inc
add
jle
or
out
xor
pop
les
incl
insl
mov
mov
gs
cmp
add
fsubs
fstpl
idivb
data16
push
lock
test
in
shlb
incl
ss
cli
mov
ss
or
clc
dec
inc
adc
insb
jp
popf
cld
nop
cld
push
inc
popa
int
fwait
pushl
test
pop
pop
call
int
movsl
sbb
cwtl
mov
xor
sbb
movsl
xchg
or
and
mov
outsl
mov
dec
push
push
sub
mov
mov
iret
sbb
call
ds
shlb
sbb
jno
or
sub
decb
in
jmp
inc
sub
inc
jns
mov
pop
iret
xor
outsl
sbb
jp
adc
es
inc
call
je
loopne
and
std
xor
faddl
cmp
dec
ds
cli
sbb
inc
pop
dec
mov
mov
dec
inc
imul
ficomps
std
push
call
cmpb
aam
pop
push
cmc
fwait
call
inc
bsr
sub
mov
stos
dec
mov
fcoms
xchg
insb
cld
inc
lahf
mov
test
es
imul
xor
xchg
mov
cmpl
jmp
adc
notb
repnz
fs
mov
jns
push
push
shlb
ret
ret
push
call
pop
inc
ret
push
xchg
loop
sub
mov
inc
lcall
jae
push
adc
outsl
dec
sar
gs
aaa
in
dec
in
in
jno
cmp
mov
xor
ret
into
clc
xor
stos
aas
and
lcall
dec
xor
lods
jmp
inc
cli
das
clc
cmp
add
lcall
rol
mov
ja
mov
popf
inc
cwtl
add
test
cli
mov
mov
adc
nop
sbb
pushf
cltd
in
adc
inc
mov
inc
mov
adcl
insb
pop
inc
jp
lock
loopne
sub
inc
adc
jae
sbb
dec
iret
sbb
push
mov
adc
sti
cmc
adc
or
cmp
dec
clc
xchg
popa
divl
arpl
sti
lcall
xor
push
jg
sbb
pop
mov
pop
dec
adc
insl
dec
pop
fldenv
mov
xor
icebp
enter
xor
push
xorl
cmp
mov
inc
ret
lcall
jle
adc
outsb
jge
xchg
sub
fs
xor
rorl
int
jl
sub
call
dec
setne
cli
sub
je
push
adc
xchg
pop
push
add
dec
enter
jle
in
pushl
sahf
fnstenv
notl
jo
add
push
mov
mov
cs
xor
stos
mov
repz
jns
test
jge
pushf
dec
mov
sbb
pop
daa
dec
sbb
add
push
in
push
mov
xchg
mov
iret
roll
stos
cmp
jmp
ljmp
loope
jns
adc
add
xor
ss
in
das
testl
decl
inc
inc
inc
push
pop
aas
or
fadd
sti
jmp
mov
cmp
cli
cmc
fs
fucom
roll
outsl
clc
jmp
sbb
xchg
dec
adc
movsl
test
je
jecxz
subps
jo
adc
iret
jnp
js
outsl
andl
or
and
negb
and
and
pop
and
popf
outsl
cli
jmp
aam
fnstenv
stc
mov
test
cmc
scas
scas
jns
push
inc
call
cmp
shlb
ja
cmp
mov
scas
cli
lahf
sub
jl
push
call
push
inc
and
mov
in
xchg
jb
andb
mov
fisubs
pushl
adc
js
dec
jmp
movsb
js
xchg
jb,pt
push
xchg
inc
xchg
mov
push
cltd
add
call
nop
push
jmp
jnp
scas
pop
cmpsb
cmpl
jns
adc
jnp
sahf
into
adc
dec
sbb
out
lahf
subb
adc
fists
pop
aad
jg
cmc
dec
pushf
dec
push
mov
jae
lret
cmpsl
mov
pop
jmp
lds
mov
dec
loope
pop
lret
cvtdq2ps
inc
cmp
repnz
imul
xchg
mov
sar
lcall
xor
lret
stos
dec
ja
shlb
sbb
cmp
les
jns
lods
clc
cmp
push
loope
test
sub
out
and
xor
movsl
sahf
jmp
push
sub
push
test
or
flds
movsb
ljmp
lcall
inc
rorb
and
ffree
adc
and
sub
incl
data16
call
mov
jg
gs
mov
or
dec
add
int3
push
decl
fcmovb
adc
mov
adc
xchg
cmpsl
and
add
or
lcall
inc
push
push
push
push
test
inc
loope
cmc
mov
pop
pop
outsl
xchg
lret
add
or
decl
and
repnz
outsl
cli
cmp
fcomps
xchg
mov
pop
popa
ja
scas
push
shl
and
xchg
inc
adc
xchg
daa
leave
les
adc
lea
outsl
cli
ljmp
jo
push
adc
push
fidivrl
cmp
inc
stc
sub
rolb
mov
into
xchg
push
in
xchg
cmpsb
push
adc
js
cmp
inc
sti
cmpsl
xchg
mov
jg
xchg
insb
xor
mov
adc
and
pushf
adc
inc
imul
decl
outsl
add
inc
and
enter
mov
pop
dec
pop
xlat
daa
pop
jnp
xchg
stc
cmp
loope
rolb
lods
loope
push
adcl
mov
insb
fisubrs
push
pop
pop
jmp
pushl
xchg
push
xor
mov
push
daa
stos
push
clc
popf
pop
jg
jbe
outsl
imul
mov
das
lcall
adc
mov
jmp
ss
icebp
xchg
nop
sbb
daa
jmp
es
push
cmpb
jmp
fwait
mov
stos
push
sbb
data16
pop
pop
cli
pushl
push
xor
loope,pt
push
aas
push
cmc
cmp
push
jne
in
les
sub
lcall
and
jge
cwtl
nop
sar
rcrb
lds
jnp
incl
cli
clc
adc
jb
daa
out
test
add
fsubrp
adc
pop
mov
mov
cli
lcall
or
push
add
fisubs
xchg
jne
xor
xchg
in
xor
pushl
xlat
push
idiv
ret
mov
sti
lcall
xchg
or
pushf
mov
sub
pop
pop
inc
xchg
je
pop
dec
ficoms
ljmp
mov
xchg
cmp
adc
jae
or
rcl
and
popf
decl
fneni(8087
fwait
mov
xor
push
movsl
dec
nop
mov
dec
es
out
test
pop
and
jo
out
pop
xor
orl
and
shll
jg
mov
enter
fdivrl
out
rorb
js
popf
stos
xor
subl
stos
jmp
xchg
xor
sub
push
fcoml
mov
pusha
int
add
xchg
rclb
add
sbb
mov
mov
outsl
clc
decl
sub
nop
les
scas
ja
adc
pop
jb
daa
fmull
jp
repnz
fdivrs
call
xchg
adc
loopne
incl
jl
cmp
notl
dec
fdivs
hlt
outsl
sti
xchg
inc
mov
mov
jecxz
mov
jo
xchg
jg
ss
jg
fwait
test
fsubrs
pop
ljmp
push
jns
jmp
ds
fs
push
or
xor
cmc
out
mov
mov
adc
ss
add
push
dec
out
xchg
or
cmpb
jmp
in
or
test
and
in
jmp
stos
add
pushl
in
jns
mov
jp
sbb
mov
fcom
cmpsb
js
ljmp
inc
and
lcall
pop
adc
sbb
addr16
cmp
inc
popa
add
out
sbb
mov
xchg
inc
call
sbb
xor
mov
addl
stc
mov
push
xchg
jg
daa
clc
icebp
out
mov
mov
rorb
incl
jl
out
xlat
mov
mov
mov
pop
int
int3
imul
pushl
shr
bound
adc
adcl
std
adc
popa
movsb
push
les
pushl
pop
jbe
push
insb
inc
rclb
mov
call
rcrb
dec
lcall
arpl
or
cmp
ljmp
adc
fnsave
jns
arpl
push
in
push
dec
or
rolb
lea
ljmp
xchg
fimull
es
fisubrl
orb
xor
mov
incl
mov
xor
jle
rol
mov
xor
repnz
lds
pushl
repz
movsb
mov
lea
or
jge
sbb
cmpsl
lret
mov
cld
das
cli
decl
scas
popa
xchg
icebp
or
lods
cld
dec
adc
xchg
adc
sbb
ret
leave
call
movsb
lock
in
into
inc
cs
and
iret
sar
inc
mov
lahf
insb
ret
dec
aad
lods
pop
mov
dec
and
push
cmp
push
jecxz
call
js
cmp
push
aam
xlat
imul
je
movsl
sub
cmc
fwait
sub
outsb
jne
sub
call
or
in
pusha
adc
xor
pushf
enter
push
xchg
mov
jmp
inc
fs
lds
sbb
nop
add
sub
pop
cmp
pop
add
mov
outsw
sub
pop
out
pop
test
cwtl
sub
lahf
lcall
stos
cmp
xor
push
cmp
imull
add
and
je
mov
pop
mulb
and
cmp
ss
fldl
sub
cmp
rolb
pushl
movsb
mov
mov
pop
jecxz
ja
cld
xchg
aas
shll
cmp
nop
xchg
mov
mov
sub
and
inc
out
ds
lcall
ss
in
lea
push
and
adcl
jecxz
mov
and
xor
out
decl
shl
push
push
or
or
pop
adc
ret
out
aam
lea
mov
incl
aam
mov
jge
shl
lock
lcall
repnz
mov
push
and
cmp
int3
jmp
and
das
nop
push
xor
addr16
decl
hlt
sti
insl
nop
cmpb
add
leave
jbe
adc
test
inc
in
out
sbb
incl
fidivl
mov
test
pop
out
mov
incl
popa
inc
cmp
call
pop
mov
sub
xchg
add
jbe
mov
mov
pushl
stos
lcall
pusha
out
inc
fxch
mov
mov
dec
ret
mov
cld
lcall
jno
iret
cmp
outsl
push
sbb
mov
push
out
pop
repnz
xor
ljmp
mov
fwait
mov
stos
rorl
jno
sub
fs
push
mov
fs
shl
jmp
cmpsb
push
iret
mov
repz
sub
or
cmp
or
xor
lcall
lds
lods
int3
push
sbb
jle
loop
xchg
cmp
and
mulps
mov
lods
cmp
lcall
sti
add
mov
inc
jmp
mov
jg
fistpll
lcall
mov
fsub
std
jae
push
dec
in
testb
fdivp
fbstp
xchg
jmp
pop
sub
int
sbb
ret
imul
rorb
push
ret
decl
mov
int
test
push
ret
dec
sahf
leave
aad
xchg
sbb
call
sbb
out
inc
dec
shll
popa
hlt
pop
das
add
aam
xor
les
pop
icebp
push
lret
nop
movl
pop
dec
xor
mov
mov
fmull
shl
inc
clc
filds
loope
lcall
int
and
movsb
dec
les
sub
mov
ljmp
cld
fsubrl
ficomps
mov
inc
pop
push
xor
mov
add
ljmp
loopne
jae
sub
loope
ret
pmulhw
push
and
adc
decl
mov
xchg
xchg
les
call
lcall
pushl
aad
xor
dec
gs
call
xor
adc
incl
sbb
sub
dec
cmp
adcl
inc
insl
push
jo
lcall
bound
decl
ficompl
popf
sbb
or
insb
hlt
cmp
lret
lahf
es
jbe
add
daa
das
cwtl
decl
and
sbb
repz
pusha
movsl
push
shrl
xchg
test
arpl
dec
and
pushl
loopne
or
jge
mov
mov
mov
mov
mov
mov
sub
mov
adcl
je
xor
xlat
test
xor
jmp
adc
aaa
xchg
mov
repnz
and
scas
push
sub
addb
incl
shrb
fs
int3
ds
mov
mov
push
adc
jmp
and
mov
pop
sub
ficoml
ljmp
pop
sti
cmpsl
cmp
clc
push
lret
mov
jge
filds
sahf
adc
cs
mov
xchg
ret
xchg
push
call
roll
ror
sarl
and
pop
inc
push
addl
in
inc
fisubl
bound
ljmp
incl
popf
mov
cmp
mov
test
and
outsb
pusha
xchg
jnp
aad
lock
out
aad
mov
shlb
inc
inc
push
inc
and
cmp
aaa
sub
pop
lret
and
lahf
les
cs
sti
jno
sbb
outsb
pop
ret
loopne
shrl
jle
aad
dec
cmp
outsl
stos
jecxz
dec
jecxz
jecxz
rcrb
fistpl
mov
in
pop
in
xchg
rolb
shrb
jae
ljmp
in
orb
cmpsl
loopne
rcll
pusha
test
or
mov
fdivrs
outsb
pop
cmp
ljmp
aaa
outsl
cmpsl
arpl
push
cmpsb
out
lock
incl
add
sub
push
cli
push
aas
cli
fildl
cmp
ljmp
or
dec
in
aaa
movsl
outsl
movsb
movb
sti
jns
repz
xchg
and
leave
pop
sar
jmp
jg
or
std
push
mov
lds
scas
push
jl
jecxz
mov
inc
mov
call
aam
lret
ja
add
mov
aaa
scas
sbb
test
js
xor
shl
jmp
push
xchg
adc
nop
aam
ficompl
clc
loope
sbb
leave
cmp
or
push
ja
mov
and
pop
push
sti
or
mov
xchg
movsb
rcrb
adc
cmp
cs
add
dec
das
mov
incl
mov
in
dec
sbbl
in
ds
out
mov
subl
aas
add
test
lods
mov
andb
je
addr16
ror
push
inc
push
pop
sbb
push
sahf
lcall
jmp
imul
out
xchg
in
in
sbb
mov
mov
cmpsl
decl
push
les
mov
mov
add
or
out
pop
imul
cltd
xor
in
ljmp
dec
subb
adc
adc
pop
rorb
or
jbe
and
pop
pushl
repz
cmp
xchg
movntq
stc
add
jecxz
xor
dec
arpl
xor
popl
les
pop
pusha
in
lcall
test
mov
call
mov
movsl
bound
fs
enter
add
mov
ja
mov
push
inc
dec
stos
push
mov
jge
jle
adc
xchg
mov
clc
cmp
cmp
inc
pop
negb
outsb
lods
cmp
sbb
push
inc
int3
add
incl
mov
rcll
dec
aas
pop
out
xor
movsb
mov
lcall
push
mov
xor
cld
mov
lcall
cmp
cmp
and
add
sbb
xchg
sbb
mulb
in
xchg
cmc
ljmp
hlt
fdivrs
lods
inc
cmp
mov
xor
movsl
js
in
loopne
xchg
jne
iret
mov
cmp
and
mov
out
ret
aad
cmpsl
movsl
cli
sub
mov
incl
dec
cs
ret
std
aas
incb
mov
rcll
sbb
cli
mov
ljmp
sahf
ja
add
sub
xchg
adcl
pop
stos
sbb
add
sbbl
jmp
and
in
and
shrl
lret
add
roll
test
roll
inc
decl
scas
pop
movsb
mov
mov
pushf
popf
xor
pop
mov
incl
xlat
jns
fisttpll
xchg
push
stos
pop
es
shlb
push
jle
ss
adc
cmp
ljmp
out
jo
rcll
scas
jns
lahf
ss
jmp
lcall
adc
mov
repnz
clc
add
bnd
add
pop
adc
jmp
push
aam
fldcw
xor
jo
push
or
add
test
jns
and
cli
jne
lret
dec
lret
std
mull
cmpsb
mov
rol
mov
sahf
mov
push
test
mov
jmp
in
movq
std
lock
mov
adcb
movsl
shl
jg
mov
inc
push
or
xchg
xchg
daa
icebp
sub
mov
mov
or
pop
leave
xor
int
leave
gs
cld
cmp
shrl
decl
cli
sub
decb
push
add
mov
out
clc
fs
loop
popf
nop
mov
cli
mov
adc
and
pushf
xchg
push
xorb
add
dec
dec
jmp
stos
stos
mov
pop
insb
push
lcall
scas
sub
sti
lods
bound
jbe
rcr
lcall
inc
and
pusha
lret
cld
stos
inc
push
and
in
xor
cmc
pushl
mov
mov
cmp
mov
and
call
sbb
aaa
cmp
dec
mov
clc
jmp
repz
pop
bt
rclb
clc
clc
aam
pop
loopne
mov
jge
and
cs
stos
mov
decl
rclb
inc
dec
jle
fwait
jns
cld
dec
cmp
daa
rcll
ljmp
data16
pushl
dec
mov
dec
in
push
sub
mov
adc
arpl
mov
std
scas
shrl
xor
cld
decl
cmpsb
fcmovb
and
mov
inc
xchg
adc
stos
mov
ret
fbstp
orb
xor
jl
movsl
or
and
int3
scas
jle
cmp
scas
push
xlat
dec
pop
sub
popf
adc
movsl
sbb
loopne
lods
mov
pop
sub
dec
lcall
dec
data16
mov
sbb
xor
push
and
pushl
mov
inc
test
ds
add
adc
xchg
jle
dec
fdiv
dec
push
cmpsl
sbb
push
cld
cmp
in
push
xchg
push
cmpsb
dec
out
cmp
xchg
mov
adc
mov
add
call
or
ret
sub
pop
xchg
stc
push
push
lret
lods
sbb
sarb
mov
loop
dec
xor
rcrl
push
xchg
sub
lret
repz
das
sar
arpl
adc
sarb
xor
mov
cwtl
mov
cld
mov
xchg
icebp
jmp
mov
fcoml
or
dec
cmp
cmp
setae
fwait
lea
lcall
jmp
mov
add
mov
pop
mov
mov
push
lret
lock
decl
out
xor
notb
mov
sbb
and
ja
rorl
jmp
jmp
rcl
or
add
mov
pop
mov
outsl
mov
fsubs
mov
jg
out
nop
lock
sbb
adc
push
pop
inc
lret
fimuls
cmp
icebp
sbb
xor
inc
mov
test
incl
adc
jns
cmp
aam
outsb
xor
lock
xchg
sahf
pop
jbe
xchg
je
cwtl
divb
imul
js
sbb
and
sbb
xor
lahf
je
nop
icebp
scas
out
jmp
add
xchg
xchg
cwtl
cmp
int3
jecxz
das
fnstenv
cld
fcoms
loopne
nop
jp
cmp
sbb
ljmp
bound
inc
dec
pop
addr16
jp
shrb
cld
add
lcall
sbb
fstl
cmp
dec
iret
lahf
and
or
adc
ds
xchg
xorl
lcall
cmpsl
xlat
push
dec
mov
mov
or
add
push
fwait
cmp
xlat
fbstp
pop
sbb
pushl
sbb
movsl
nop
xor
lods
mov
out
stc
or
lret
scas
out
cmp
push
add
pop
adc
ret
dec
std
mov
pusha
sbb
pusha
push
sub
xchg
mov
pushl
pusha
daa
stc
in
and
rorl
lock
loope
notb
sar
dec
pop
xor
sub
pop
mov
cwtl
mov
call
jnp
bound
nop
out
mov
mov
icebp
sbb
pushf
leave
mov
in
pop
rcrl
xor
fbstp
sbb
mov
mov
sub
xchg
inc
cmp
lods
ljmp
xchg
or
stc
mov
leave
jmp
arpl
std
movsl
xor
stos
xchg
xor
dec
adcl
sti
and
lock
dec
mov
xor
cli
pop
inc
lds
cmp
sbb
inc
out
in
adc
dec
push
cmp
push
rcll
icebp
xor
lea
add
pusha
push
xor
add
movsb
adc
icebp
mov
xor
lcall
jle
mov
mov
mov
outsl
test
clc
mov
jnp
ljmp
ss
filds
push
mov
ds
out
mov
inc
or
cld
ljmp
int3
dec
and
jle
mov
mov
add
call
and
mov
mov
inc
mov
sbb
dec
cmp
mov
jo
mov
ficomps
jnp
pop
repz
dec
jo
std
mov
andb
fdivrs
in
in
pop
dec
pop
pop
mov
inc
mov
call
enter
sarb
or
pop
mov
cmp
lahf
cmc
pop
clc
sub
incl
push
cmpsb
ds
jno
or
add
das
sarl
rorl
add
sbb
insb
mov
push
repz
iret
and
roll
scas
dec
xchg
insl
fisubrs
pushl
sub
jb
add
insb
xor
cmp
ljmp
insl
sub
push
mov
inc
push
ret
jp
jg
aad
sbb
jl
imul
push
leave
outsl
int
call
or
std
movups
andl
sbb
jecxz
fmulp
jae
jae
inc
mov
out
add
dec
repnz
push
popa
ljmp
mov
mov
and
jo
dec
and
repz
das
jae
adc
addr16
ljmp
cmc
mov
movsl
nop
das
je
mull
je
lret
insb
sar
or
incl
pop
leave
test
add
push
hlt
rolb
incl
xchg
xor
mov
or
sti
xor
loopne
ret
lcall
fiadds
in
fmuls
jmp
test
std
xchg
or
fldt
cmp
pop
imul
push
pushl
cwtl
xor
lahf
xchg
rcrl
jns
imul
stc
gs
in
mov
incl
outsb
xchg
pushf
pop
mov
cmp
sub
test
arpl
jge
leave
pop
std
mov
fadd
inc
rorb
ficomps
cli
fs
pop
push
popl
mov
outsl
lods
leave
sahf
push
dec
jge
add
xor
sbb
xor
shll
sub
mov
in
clc
ds
push
mov
and
dec
into
cmp
xchg
sbb
ljmp
cld
push
xchg
clc
pop
les
shl
sti
mov
in
pop
test
inc
and
hlt
cmp
aas
push
push
xor
add
inc
movsb
cmp
xchg
mov
or
inc
lods
sub
int3
add
sbb
lcall
in
movsb
stc
cmp
push
shll
icebp
negb
or
sti
xor
ficompl
ljmp
jmp
mov
jmp
sbb
outsl
stc
aas
stos
adc
mov
decl
es
dec
mov
adc
mov
dec
outsl
iret
inc
mov
ljmp
adc
loopne
loope
int
and
lods
daa
sti
xchg
xor
ficoml
out
jmp
pop
push
std
inc
sbb
mov
mov
int3
lgs
ret
lcall
inc
lock
popf
inc
out
jg
sub
jecxz
test
lret
jmp
fildl
sub
arpl
orl
call
dec
push
mov
loopne
testb
out
mov
and
mov
and
mov
pop
inc
das
xchg
test
xchg
outsl
lret
das
adc
mov
adc
jmp
hlt
mov
ds
jns
ret
inc
cmpsb
pusha
mov
insl
insl
mov
call
dec
cmp
idivl
mov
cld
mov
or
mov
insb
aaa
push
nop
add
mov
pop
adc
jnp
mov
lea
mov
pushl
loope
push
xchg
mov
ljmp
scas
mov
xchg
insb
insb
lcall
out
jl
xchg
test
jb
leave
stc
mov
pop
test
shrd
xor
stos
into
call
mov
insb
enter
push
add
mov
lds
loope
mov
cmp
std
ljmp
lahf
cmp
dec
add
mov
rol
stos
lods
push
jbe
inc
mov
lds
push
cld
xchg
shlb
mov
mov
pop
addr16
loopne
aas
mov
sub
insb
xchg
lods
dec
sarl
or
pop
dec
jle
xor
cwtl
or
jg
fwait
rcrb
scas
pop
call
mov
mov
sub
dec
ljmp
ret
test
inc
sbb
mov
mov
pop
push
data16
add
cld
arpl
test
inc
shrb
loopne
add
pop
repnz
jmp
pop
ret
cld
inc
sub
mov
push
mov
xchg
mov
fimuls
pop
mov
das
clc
incl
sbb
rcll
jae
lret
cmp
pop
lret
xor
inc
jmp
inc
adc
negb
mov
push
cmp
push
addb
xlat
decl
fwait
or
jns
in
sbb
add
xchg
mov
lret
lods
push
pushl
mov
cli
dec
js
in
nop
das
cltd
inc
pop
lea
insl
lods
mov
jg
decl
aam
xchg
mov
nop
shrb
xor
out
addr16
out
pushl
loopne
movsb
loopne
daa
pushf
push
push
pop
iret
sbb
inc
aaa
mov
pop
or
loop
lods
mov
fldcw
lahf
dec
add
aas
jecxz
fnstenv
pop
jb
mov
test
int3
push
inc
je
lds
iret
mov
imul
lret
je
fdivrl
add
cmp
pop
in
std
gs
sahf
sar
mov
shlb
call
hlt
jmp
sub
rclb
into
repz
test
js
push
nop
fdecstp
addr16
adc
call
pop
jnp
fnstenv
lods
mov
pop
sbb
mov
push
mov
mov
pushl
cmp
popf
sahf
mov
insb
fwait
xor
bound
inc
jp
fwait
aam
xor
or
sbb
stos
rcll
cmc
pushl
jle
mov
adc
inc
aad
fisttps
ds
pop
sbb
xlat
and
daa
pop
push
pop
dec
mov
mov
fdivr
jbe
mov
xchg
xchg
jg
outsl
out
sarl
push
mov
xor
decl
sbb
mov
ret
idivl
and
ja
loope
cmp
pop
push
sbb
sbb
hlt
outsl
test
xor
jg
add
enter
in
int3
inc
pop
inc
les
jno
push
imul
shrl
add
mov
cs
fnstenv
ja
dec
in
je
xchg
cli
in
std
sub
in
pusha
and
lcall
movsl
rcrl
mov
ret
mov
mov
andb
inc
js
decl
lret
into
test
test
sub
jnp
ret
ja
fimuls
jmp
inc
cmp
push
les
sub
fiadds
aam
out
ja
lods
xor
and
cmp
cltd
jmp
dec
xor
or
inc
adc
loop
inc
call
xchg
jge
sbb
lcall
aam
cltd
nop
out
dec
mov
add
mov
clc
mov
or
lods
leave
fistpll
ljmp
rorb
xor
xchg
pop
xchg
jg
dec
mov
fwait
jg
call
cmpsb
cmp
xchg
ret
push
out
sbb
pop
jae
pushf
std
cmp
ljmp
mov
fldt
cltd
in
fwait
in
int
dec
nop
cmp
jp
cmc
imul
mov
out
rorb
leave
jb
test
dec
xor
lds
mov
lock
decl
push
inc
icebp
or
shlb
out
in
in
rcrb
in
or
outsl
cli
fdivp
sub
test
xchg
test
out
mov
xchg
test
fisttpl
push
test
lock
sbb
push
test
insl
imul
lcall
jne
lret
mov
fcoml
outsb
cmp
out
movsb
add
mov
jg
sbb
cwtl
out
inc
pusha
push
adc
imul
repnz
mov
test
mov
dec
es
jae
add
adc
pop
pop
pushf
or
out
incl
cmpb
test
out
jmp
enter
xlat
sub
mov
sbb
xlat
fdivl
ret
pop
dec
faddl
push
loopne
sub
jg
ljmp
cltd
daa
mov
movsb
dec
xchg
sbb
xchg
popf
cli
ljmp
push
int3
mov
decl
ficompl
pop
pop
aas
dec
push
std
rclb
sbb
mov
repz
pushl
xor
mov
mov
xchg
push
scas
sub
add
push
mov
nop
int3
push
addb
or
jg
int3
mov
pushf
test
invd
sub
ljmp
out
mov
mov
jmp
pushl
aad
jno
inc
sub
stos
inc
and
mov
jo
scas
stos
mov
mov
mov
sbb
dec
mov
loop
xlat
test
pop
fwait
cmpl
and
pushf
shlb
stos
mov
xchg
jl
fsubl
push
int3
push
sbb
testl
pop
add
push
xor
lds
incl
inc
int3
and
call
sbb
scas
sbb
add
push
loop
cmpsl
dec
faddp
hlt
incl
dec
cmc
push
insl
mov
pop
into
xchg
xor
jae
push
jb
dec
mov
fidivrs
fists
fld
sets
or
sti
aam
add
fisttpll
mov
xor
incl
out
repz
add
adc
push
fmull
mov
icebp
pusha
cltd
cmp
pop
cmc
cmc
push
loope
push
pop
pop
repnz
mov
sbb
jb
and
cmp
push
pop
fs
decl
inc
or
movsb
cs
andl
imul
mov
jg
fidivrl
imul
rcrb
sbbb
jmp
stos
fisttpll
push
mov
push
push
pop
out
aaa
mov
incl
repnz
push
adc
xchg
out
xchg
jno
jecxz
xchg
adc
jb
loopne
decl
inc
and
sub
mov
or
mov
jbe
inc
add
loope
dec
pop
cmc
call
push
mov
stc
pop
pop
into
and
cmp
mov
sar
cmp
adc
mov
mov
push
adc
sbb
enter
sbb
xor
das
rorb
jmp
mov
mov
hlt
inc
stos
jg
xchg
ds
arpl
dec
pop
add
add
decl
inc
outsl
ds
jo
push
rcr
pop
in
jmp
iret
stos
pop
sub
push
push
out
pop
pop
movsl
aam
fwait
dec
imul
repnz
xchg
jns
dec
pushf
pusha
insb
shll
pop
and
outsb
jbe
pop
sar
mov
pop
xchg
iret
lretw
cli
and
idivl
sub
hlt
pop
sub
pop
comiss
in
mov
cmpsb
push
btc
and
lods
jb
pop
cmp
jecxz
adc
aaa
inc
add
int3
inc
xor
mov
call
fbstp
push
xchg
dec
cmc
decl
dec
enter
sub
fs
test
adc
pop
cld
dec
add
js
inc
add
ljmp
out
test
push
sbb
andl
sbb
adc
mov
inc
adc
or
lret
call
cld
jns
jnp
icebp
fistl
test
nop
mov
idivl
jg
lcall
sbb
fs
adc
push
xor
mov
std
push
or
iret
lds
mov
mov
xchg
je
loop
pop
jp
jno
mov
xlat
mov
aad
cld
gs
sar
sbb
dec
push
mov
mov
cld
imul
decl
pop
ret
mov
pop
mov
pop
cmp
lcall
test
movl
cmp
cmc
push
xchg
nop
outsb
incb
incl
cmovb
aas
addr16
loope
pop
adc
pop
pop
xor
jl
jb
push
adc
jg
incl
pop
and
pop
leave
arpl
push
jae
mov
dec
lcall
scas
call
std
call
pop
nop
cmp
not
fdivp
pop
cwtl
and
aam
jb
pop
xor
jmp
mov
mov
mov
les
lret
cmp
mov
out
mov
lcall
sbb
jne
mov
mov
push
divb
loope
adc
aas
adc
data16
stos
or
mov
rcrl
add
push
rcl
outsb
jne
lahf
arpl
decl
sbb
ss
jp
rcrb
add
int
fldcw
mov
mov
movsl
scas
push
int
mov
push
push
push
pushl
and
sbb
mov
cmpsb
sub
sti
inc
repnz
and
repnz
ljmp
inc
or
xor
push
or
cmpb
cmp
call
ljmp
xchg
insb
fstpt
xor
dec
xchg
aaa
cs
std
pop
lahf
fistpl
and
xchg
mov
jmp
cmp
stc
mov
push
mov
pop
aad
es
add
les
cld
mov
decl
sub
cmp
lret
or
shrl
xchg
push
sub
test
mov
lods
jge
mov
ja
insl
sbb
lret
cmp
movsb
les
adc
fcom
clc
jp
add
mov
ljmp
clc
push
push
sbbl
out
dec
sbb
iret
sbb
pushl
das
mov
or
add
jecxz
stos
cmp
sbbb
adc
lods
loopne
pop
sub
imul
aaa
or
cmp
nop
iret
loop
sbb
iret
jl
jmp
push
bound
mov
in
lds
mov
pop
jg
call
mov
dec
jg
movsl
mov
cmpsb
xlat
mov
aaa
cmp
sti
adc
rcrb
int
and
jns
jg
out
shrb
jmp
mov
repz
pusha
xchg
insb
repz
lods
fsubr
cmp
mov
pushl
add
pop
mov
jno
lock
dec
jmp
pop
push
push
fndisi(8087
ficompl
incl
jp
and
pop
mov
cmpsl
aam
or
fs
xchg
jp
mov
xor
icebp
jmp
ret
pop
sbb
inc
loopne
repz
mov
mov
ret
ret
xor
outsb
lcall
inc
add
push
mov
lret
sbb
cmp
and
inc
jl
sbb
and
sub
fwait
pop
movsl
cltd
ljmp
inc
fiadds
and
dec
and
mov
out
aam
icebp
sbb
ljmp
lock
lea
stos
in
inc
lret
xor
into
or
incl
mov
stos
lcall
loopne
lcall
leave
jbe
ds
imul
xchg
xchg
filds
sbb
and
imul
bound
out
nop
orl
dec
arpl
dec
hlt
adc
insl
cs
mov
sbb
dec
popf
insb
dec
das
fnsave
decl
sub
cmpsb
xchg
push
fnstsw
pop
pusha
sarl
add
in
adc
lods
mov
leave
dec
and
cmpl
mov
fwait
pinsrw
int3
jl
jmp
popa
sub
cld
test
test
inc
add
adc
push
imul
push
cmpl
or
test
test
out
jp
fistps
lea
xor
sar
imul
or
mov
pusha
lods
test
incl
add
sbb
mov
pop
lcall
test
jg
in
loopne
popa
fwait
ss
mov
and
adc
jno
shrb
dec
add
ljmp
sbbb
shrl
fcoml
dec
xor
call
cmp
test
xchg
scas
xor
jmp
mov
sub
mov
mov
mov
scas
shll
outsl
jl
in
icebp
ds
loop
push
test
add
jne
mov
decb
xor
pop
fdivrl
push
and
gs
incl
daa
daa
sub
std
dec
out
jno
add
aaa
pop
ljmp
je
sub
clc
pop
divb
push
inc
rolb
jne
shrb
stos
push
call
aad
subb
loope
mov
lock
incl
lds
inc
daa
hlt
xorb
xchg
jo
pop
cmp
jno
mov
pop
inc
lret
xor
jmp
pushf
pop
movb
inc
movsl
push
icebp
xchg
and
push
mov
ljmp
std
xchg
or
jae
xorl
pop
cwtl
rcrb
sub
sahf
dec
push
daa
dec
inc
xor
inc
mov
outsb
xor
xchg
inc
dec
incl
pop
sbb
fmuls
push
jle
aad
adc
mov
mov
xchg
lcall
shrb
clc
fcomip
jecxz
call
sub
jmp
mov
rcll
push
inc
add
push
loop
test
xor
adc
sub
push
sbb
roll
or
mov
movsb
pop
xor
cmp
sub
inc
idiv
icebp
sahf
cltd
lahf
divb
mov
clc
call
es
xor
int3
mov
data16
in
bound
mov
jmp
sti
push
inc
test
jo
stos
mov
ror
push
test
jp
cmpsl
sahf
ljmp
cmpsl
push
enter
mov
inc
mov
dec
popa
mov
rcrb
add
dec
lock
js
sbb
das
mov
loope
out
jle
dec
cmp
mov
lea
cmpsb
leave
fists
mov
pop
ljmp
ljmp
mov
adc
or
cmp
scas
and
loop
shl
fiaddl
mov
dec
xor
jg
push
add
out
test
add
sbb
jg
mov
les
fsubs
xchg
xor
jmp
popf
cltd
jecxz
int
shl
push
xor
mov
mov
cltd
scas
xor
das
pop
jp
pop
add
push
call
repnz
push
jno
xor
adc
jl
aad
inc
inc
xchg
mov
jmp
push
push
pop
ror
call
dec
adc
push
fsubs
repz
imul
jo
and
popf
sbb
mov
jb
push
outsl
jmp
sub
push
pop
mov
lea
xor
mov
out
cli
aam
movsb
ss
sub
decl
push
xor
stos
ret
jns
inc
int3
fcomp
push
xchg
mov
jg
cmpsl
adc
mov
pushl
pop
repnz
rorl
mov
or
push
mov
jo
out
push
test
or
lods
loope
cli
incl
movsl
stos
jne
stos
call
mov
aas
mov
sahf
fmuls
in
outsl
xor
cmp
stos
das
fsubr
add
sti
adc
xchg
int
or
jmp
cld
mov
or
xchg
gs
push
add
ja
decl
jo
push
sbbl
pand
push
cmp
lods
add
xlat
fsubrp
push
or
inc
out
or
cmp
aaa
cmp
sbb
movsl
xchg
jae
adc
aaa
dec
incl
in
cmp
mov
sbb
inc
pop
xchg
and
addl
jp
ret
int
xchg
jbe
mov
mov
xchg
mov
out
clc
incl
mov
fmul
xor
mov
dec
ret
lret
incl
iret
pop
ljmp
xor
lcall
dec
jo
sub
cltd
pop
pop
mov
jmp
andl
mov
mov
jmp
push
inc
sbb
jo
cld
int
fs
aam
and
popf
inc
cli
fwait
sub
pop
test
sbbl
ljmp
jmp
loopne
daa
mov
cli
test
sbb
adc
xchg
push
int
bound
incl
enter
push
xchg
xchg
cmp
idiv
pushl
push
js
xor
push
adc
cwtl
imul
dec
mov
sbb
ljmp
lret
xlat
xor
mov
xchg
aad
hlt
popf
sahf
shlb
clc
pushl
mov
cmp
mov
mov
fwait
popf
push
lahf
out
sti
mov
lea
repnz
incl
add
cld
sub
js
mov
pop
sbb
hlt
fcomip
dec
add
call
jns
lock
push
fdivrp
incl
rcl
repz
ret
or
lahf
inc
dec
imul
pop
fs
inc
jg
ljmp
out
push
sbb
stos
cmp
bound
or
cmpl
jbe
arpl
jmp
leave
xchg
add
out
mov
iret
shll
mov
xor
push
inc
jae
js
pop
xor
mov
lcall
xor
imul
js
adc
rorb
mov
pushl
xlat
xlat
inc
add
pop
fs
bound
das
sub
cmpsl
sbb
or
adc
jne
lock
pop
sbb
insb
sbb
es
jmp
mov
mov
mov
frstor
sub
orl
aaa
mov
incl
addb
add
stos
outsb
inc
dec
xchg
call
mov
lcall
imul
into
mov
pushf
mov
jecxz
cmp
clc
dec
mov
pop
jmp
lahf
js
call
fs
cmc
cmp
daa
leave
lea
lcall
test
test
jbe
inc
scas
mov
jmp
shl
cs
push
lcall
dec
lods
adc
lods
mov
xlat
into
inc
jae
ds
push
dec
loopne
andl
aad
loope
mov
call
lock
in
mov
scas
mov
decl
lahf
pop
push
out
fisubrs
mov
sub
data16
mov
inc
inc
jmp
or
movsl
dec
loope
outsl
fcom
fnstcw
testl
dec
xchg
iret
mov
bound
loop
out
jle
add
pushf
enter
sbb
orb
js
xchg
xor
adc
imulb
lret
xor
mov
mov
fcoml
je
aas
mov
lret
fucomi
imul
push
mov
das
je
dec
xor
ss
ljmp
lcall
dec
push
xlat
icebp
cmpsb
pop
movsb
data16
addr16
xchg
jecxz
inc
arpl
jmp
xchg
js
mov
stos
neg
dec
data16
pop
adc
dec
jbe
in
pop
sub
js
lcall
cld
jmp
imul
pavgw
push
inc
rorb
outsb
adc
pusha
stos
inc
aad
ljmp
fwait
ds
sbb
push
popf
adcb
sbb
sub
pushl
cld
jmp
ret
loopne
fiaddl
lods
cwtl
das
lods
add
daa
icebp
sti
jmp
movsl
pop
dec
jl
mov
or
or
or
loope
inc
leave
or
push
cmp
adc
sti
aad
lods
ljmp
mov
xchg
call
cmp
or
xchg
lods
mov
cwtl
lods
popf
push
dec
mov
and
pushl
inc
in
push
das
ja
shlb
fstpl
stos
das
repnz
incl
shlb
add
lods
ja
js
add
gs
sarl
xchg
push
push
add
ljmp
aad
xor
cld
cmpsl
hlt
mull
jle
jg
dec
call
subb
pusha
andb
mov
xchg
out
ds
adc
xchg
mov
call
cmc
je
jns
push
iret
insl
pushl
dec
jmp
jne
adc
mov
mov
fcmove
pop
mov
sti
jns
negl
jo
sbb
lcall
popa
dec
xchg
popa
pop
popa
add
addl
dec
fisttps
incl
subl
and
loope
mov
push
xchg
inc
mov
hlt
xchg
dec
xchg
sub
call
xor
sbb
int3
fs
in
cld
lret
fsubrl
mov
add
dec
sub
ljmp
int3
mov
sbb
test
mov
aaa
add
mov
adc
cmpl
mov
lcall
ds
push
add
scas
ss
inc
push
or
out
dec
sbb
bound
fidivrs
fbld
jno
in
fidivrs
add
adc
idivl
outsl
mov
mov
shrb
decl
aaa
lcall
mov
mov
loope
jae
mov
lcall
or
xchg
pushl
repnz
mov
dec
cld
push
mov
mov
mov
pop
hlt
jmp
pop
or
mov
popl
lock
adcl
das
sbb
pushl
ficompl
push
mov
fsts
std
mov
jge
ret
loope
sarb
out
ficompl
dec
lret
popf
fcoml
test
mov
pusha
adc
mov
decl
movsb
cmp
cltd
gs
xor
sbb
les
lret
dec
call
aas
cs
leave
add
dec
jbe
enter
sub
push
mov
xor
add
fcom
das
js
add
mov
mov
push
test
mov
daa
pushl
sbb
sti
push
repnz
push
xchg
js
cwtl
cmpsl
or
xchg
xchg
pushl
testl
cmpsl
aad
push
popa
clc
mov
lods
or
negl
outsl
iret
sub
cld
adc
ret
pop
xchg
mov
cld
jge
mov
lods
in
dec
add
jecxz
movsb
sub
or
loop
push
cltd
cmp
mov
sub
cmp
adc
adc
sbb
jns
xor
jns
addr16
in
outsb
sbb
cmp
stos
in
or
cs
pushl
cmp
test
xor
push
mov
sbb
dec
adc
inc
adc
mov
xlat
out
xchg
or
add
std
jecxz
mov
shll
rcrl
sub
mov
mov
mov
clc
incl
inc
adc
fistpl
daa
arpl
loop
mov
decl
mov
pushf
aaa
leave
in
rcrl
jb
push
mov
lret
inc
mov
decl
lods
pushl
movsb
mov
pushf
mov
xchg
sbb
scas
pop
and
and
subl
sub
push
std
ljmp
fsubl
stos
inc
jb
xor
jg
xor
bound
jp
arpl
jmp
pop
cmc
incl
test
test
push
push
xchg
or
and
mulb
ljmp
lock
pop
ja
xchg
clc
or
sbb
pop
sbb
cmpsb
fsubrl
aaa
aad
daa
int
push
or
lcall
test
lds
jg
pop
xchg
cmp
jmp
test
dec
test
sub
jmp
lods
mov
xchg
decb
lods
aam
ret
pop
inc
xchg
scas
dec
jp
and
xchg
mov
cmp
lahf
xchg
xchg
aad
test
jecxz
mov
les
shlb
inc
aad
call
ds
lods
mov
shlb
adc
mov
xchg
call
add
shrl
cmp
and
pusha
idiv
incl
insb
cmp
cwtl
inc
lods
loopne
aam
jb
xchg
adc
shll
jg
and
repnz
imul
mov
popa
xchg
or
mov
dec
xchg
jp
ja
call
fsubrs
push
nop
ja
sub
cli
add
adcb
adc
outsl
xchg
out
cmp
and
jae
into
mov
dec
out
cli
ret
mov
push
lahf
into
in
popa
nop
push
jno
cmpsl
xor
and
fisttpll
xor
outsw
xor
jmp
mov
pop
sbb
jge
lahf
or
mov
inc
lcall
xlat
pop
and
pusha
cmc
int
sbb
adc
pop
fists
or
inc
jecxz
lods
loope
iret
in
out
ss
sub
mov
and
incl
push
orb
lock
mov
imul
sub
jg
push
xchg
sub
test
or
adc
jle
je
rolb
cmp
clc
je
into
push
dec
xor
scas
gs
cmp
call
dec
xor
pop
sarl
or
xchg
shrb
cs
sub
pop
adc
mov
scas
test
scas
call
repnz
or
mov
add
xchg
xorl
push
adc
loop
mov
sti
js
adc
or
pop
fstl
pushl
adc
dec
gs
jp
push
push
mov
pop
cmc
test
xchg
out
sub
pop
and
decl
adc
add
sahf
leave
mov
out
lods
lcall
cmp
pop
adc
test
cs
inc
fldt
sbb
dec
mov
iret
xchg
mov
push
jle
sub
dec
loop
cmp
dec
xchg
dec
push
or
leave
inc
jne
mov
jecxz
cmp
push
add
fcomip
pushl
loopne
subb
dec
ret
sub
xor
sbb
xchg
movsb
and
decl
jl
push
adcl
int3
in
je
pop
fwait
mov
fstl
mov
decl
and
pop
ficoms
pop
in
fbld
push
push
sub
das
clc
jnp
xchg
scas
cmp
jmp
cli
xor
push
imul
aaa
push
popf
faddl
jne
mov
cmp
popl
sub
mov
scas
push
mov
dec
dec
adc
add
sbb
push
call
or
hlt
jbe
cmp
push
fs
and
shll
and
outsl
enter
incl
and
push
enter
stc
cmp
add
lock
jmp
bound
lcall
ds
in
mov
pop
pop
xchg
jp
stos
test
ret
repnz
pushl
pop
lds
scas
cmp
jo
sub
lods
stos
les
test
mov
mov
call
and
test
es
lcall
pushw
ss
inc
testl
xlat
lock
jb
or
cltd
orb
dec
xchg
aas
js
or
add
mov
push
daa
adc
or
in
adc
mov
repnz
repnz
cmp
test
out
adc
enter
sbb
decl
cs
add
xchg
cli
loop
adc
mov
dec
and
add
lds
addl
sub
into
mulb
mov
stos
push
add
mov
or
sahf
pop
sbbl
lods
ljmp
and
xchg
ret
pop
sti
cmp
mov
sbb
cmp
stos
popa
test
or
or
sarb
clc
sti
loope
imull
mov
cmp
shrl
cmp
subl
ljmp
test
push
ja
je
jg
mov
rorb
xor
loopne
inc
jbe
jns
lock
decl
xor
jbe
in
negl
xor
jnp
sub
mov
jg
or
shrb
out
pop
sahf
lahf
outsl
lods
rep
test
lcall
in
add
cmpsl
sar
bound
movsl
idiv
lret
fnstcw
jne
xor
jg
pushl
xor
sbb
stc
fsubs
dec
bound
pusha
ja
push
pop
test
std
sbb
push
cmp
adc
pushf
mov
cli
xor
lahf
mov
pushf
out
mov
sub
jg
push
lods
pushf
cmpsb
lods
scas
cwtl
mov
in
jecxz
mov
adc
leave
xor
testb
cmp
sbb
jne
sub
and
pushf
ss
xchg
cmp
test
mov
and
ret
sbb
call
iret
inc
mov
mov
subb
jle
and
mov
cmc
push
jne
mov
out
dec
xchg
push
mov
sarb
sub
xlat
add
loope
cltd
sar
ljmp
movsb
cmp
xor
out
dec
sub
inc
lahf
pushf
test
cwtl
jmp
sarl
test
push
int
lahf
aam
jle
add
pop
and
jge
xor
sbb
push
pop
mov
in
pushf
mov
ficoml
cmc
movsl
in
addb
pop
add
call
lcall
arpl
add
jmp
cmp
jmp
aad
sub
in
mov
sbb
mov
dec
decl
or
mov
pop
xchg
pop
mov
jl
rclb
mov
ffreep
add
ret
incl
fwait
sbb
inc
cmc
sub
pop
add
push
inc
or
insl
pop
push
insb
ret
pushl
jnp
xor
sub
sub
dec
les
xchg
repz
lock
jmp
addl
push
call
sbb
mov
fucom
mov
mov
pop
popa
dec
or
fsubl
in
add
cmp
push
xlat
jmp
sbb
inc
mov
xchg
xlat
test
aaa
jmp
mov
xor
lcall
cmp
or
out
cmp
jns
fwait
int3
mov
cmp
cltd
mov
mov
in
sbb
decl
jns
xor
test
inc
or
lcall
fldenv
decl
and
scas
or
mov
push
test
scas
jecxz
iret
outsb
mov
cmp
or
mov
pushf
push
fwait
adc
adc
js
pushf
dec
imul
inc
out
jecxz
fmuls
pushl
push
push
or
cmpsl
jl
push
mov
mov
repnz
pushl
flds
pop
mov
repnz
sbb
or
out
mov
dec
insl
out
push
les
jmp
subb
pop
roll
in
popf
enter
rorl
xchg
adc
push
call
daa
mov
outsl
push
cmp
in
ret
sti
push
cld
mov
inc
lods
cmp
mov
sub
fcompl
insl
inc
and
jno
lods
xchg
adc
mov
fcoml
mov
popf
out
aad
orl
ljmp
mull
outsl
popa
xor
mov
cmp
ret
cmp
sub
jbe
pop
into
or
stos
into
sub
int
hlt
mov
dec
push
mov
cmpsl
push
jo
mov
jmp
push
sub
lds
xlat
movl
add
fnstenv
dec
jmp
push
pop
aam
loope
insb
xor
mov
popa
mov
andb
in
nop
incl
and
into
imul
ret
xor
mov
dec
sub
ljmp
fisttpl
cld
jo
push
xchg
sarl
sub
push
das
cld
jno
dec
sbb
out
clc
jmp
dec
pop
sahf
mov
mov
cltd
jmp
fs
push
lods
decl
xorl
adc
lea
mov
jb
ljmp
pusha
sub
decl
push
into
stc
ret
jb
movsl
mov
ljmp
jb
into
inc
cmp
mov
scas
xchg
dec
xor
mov
sar
lahf
or
mov
mov
arpl
or
adc
mov
sbb
mov
ljmp
cld
ss
gs
out
pop
cmc
lcall
pop
inc
scas
adc
out
jmp
push
xchg
xchg
pusha
sar
dec
incl
or
imul
adc
add
pop
es
dec
xchg
pop
popa
xchg
inc
pushl
out
push
jns
andb
rcrb
movsb
sbb
jmp
xchg
ja
xlat
jb
mov
pop
arpl
inc
mov
mull
mov
dec
imul
lahf
movsl
or
pusha
pop
inc
movb
sub
jp
fsubrl
sub
incl
shll
fmul
popf
pop
jno
push
dec
test
dec
fcom
test
push
in
inc
stos
push
sbb
sbb
leave
cwtl
rcrl
lock
xchg
xchg
mov
cltd
sub
mov
pop
fcomps
xor
pop
adc
jl
insb
fidivrs
stc
loope
aam
push
mov
shll
dec
or
push
pop
out
das
pop
fidivs
in
mov
add
xchg
or
mov
pop
inc
mov
or
push
adc
iret
xor
cld
or
sbb
iret
out
addr16
decl
xchg
dec
mov
out
push
cmpsb
mov
std
out
test
xor
jge
pop
and
pop
jns
les
inc
jmp
or
mov
cltd
lahf
pop
push
lods
lea
push
lds
sar
pushl
lret
cmpsl
fldl
xor
and
add
sub
sbb
lods
out
in
les
dec
inc
addb
pop
mov
and
popf
inc
ljmp
cltd
mov
dec
mov
jne
sub
movsl
sub
xor
mov
lods
int3
iret
repz
mov
push
mov
dec
lock
jecxz
push
out
jbe
add
pop
xchg
push
cmp
mov
cmp
enter
sub
dec
mov
pop
push
cltd
scas
mov
mov
and
inc
jo
inc
mov
xor
mov
fisttps
aad
int3
inc
mov
lods
loope
pop
cld
push
xor
fcomip
cli
add
insb
mov
std
inc
xor
sub
addr16
or
call
cmp
or
insb
xlat
outsb
add
lret
jle
mov
pop
jle
cmp
add
shlb
pushf
jb
int
popf
test
pop
aad
add
pushl
push
dec
and
test
testb
pop
push
mov
ds
jl
lret
andl
aas
and
into
pop
cmpsb
in
mov
jmp
stc
push
add
or
loopne
mov
ljmp
pop
sbb
divl
adc
inc
pop
jmp
dec
sbb
pusha
adc
push
out
int
arpl
dec
xor
xchg
in
fdivr
ljmp
ljmp
pop
pop
mov
aaa
fwait
push
pop
pop
sahf
bnd
dec
pushl
outsl
sti
in
imul
daa
add
and
lret
mov
lea
jle
ljmp
cli
mov
inc
xchg
shl
pop
bound
adc
lods
mov
and
adc
dec
call
pop
pop
mov
inc
jmp
mov
nop
add
or
mov
xchg
clc
mov
mov
loopne
mov
inc
mov
jbe
lcall
xchg
mov
mov
das
imul
sub
xor
test
and
push
mov
pop
loope
aad
ret
lahf
lret
ja
ja
xchg
ljmp
sub
pop
pmuludq
push
add
ljmp
scas
add
dec
lods
inc
out
mov
leave
int3
movsb
movsb
cli
lock
ljmp
loope
cltd
xorl
incb
mov
scas
add
pop
cld
jmp
and
cmp
adc
test
iretw
stos
mov
ja
lcall
jecxz
cmp
int
or
xchg
lcall
in
fcoms
arpl
in
sbb
ror
sub
cmpsb
incl
cmc
sub
sarb
lea
decl
pushf
mov
xchg
sub
pushf
sbb
cld
lea
adc
jp
pop
sbb
incl
aaa
int
push
pop
sub
add
imul
inc
push
call
dec
imul
mov
fsts
lds
enter
dec
xor
lcall
shl
inc
lret
adc
icebp
dec
cmp
sbb
push
or
mov
or
jle
cli
pushl
daa
xchg
mov
daa
pop
dec
movsl
push
or
add
mul
call
es
ljmp
notl
jo
xor
pop
push
cmp
and
lock
stos
lret
dec
movsl
xor
lcall
lods
sti
sub
in
mov
mov
rorl
sbb
push
bound
push
inc
add
jg
in
sub
mov
in
mov
mov
dec
push
adc
mov
jns
jmp
lcall
adc
push
mov
lret
test
xchg
std
loopne
jbe
addr16
gs
jne
ljmp
pop
inc
sbb
mov
dec
test
mov
mov
push
lahf
push
sbb
out
outsb
pop
aam
and
xchg
jae
sub
jl
mov
mov
cmpsl
int
mov
movsl
aas
iret
sar
mov
pop
mov
clc
push
mov
decb
ljmp
push
xchg
scas
ret
mov
fs
in
jge
jmp
int
push
rorl
mov
ja
adc
sbb
or
test
mov
bound
stos
inc
adc
xlat
push
add
in
and
mov
jnp
movsl
incl
xchg
nop
lahf
test
push
rcl
rcll
pop
ljmp
iret
rcll
cmp
mov
xchg
inc
pop
pop
mov
or
fildll
insl
push
out
cli
jl
and
cmpsl
mov
ss
pop
push
pop
fs
in
out
xor
sbb
call
fwait
xor
xor
adc
or
inc
lods
sub
hlt
call
lret
add
clc
dec
out
and
rorb
sbb
inc
inc
fnstsw
xor
test
mov
xchg
rclb
dec
push
arpl
loopne
idiv
ljmp
out
adc
dec
xor
xor
xchg
cmp
jne
xchg
inc
xor
aad
nop
xchg
cmp
jmp
enter
cs
mov
popf
or
repnz
jne
popa
data16
sbb
jmp
sub
cmpsb
xchg
arpl
aaa
mov
pop
dec
add
stos
add
clc
stos
fwait
scas
jmp
ret
jb
data16
jne
mov
mov
cmp
gs
pushl
cld
js
pop
ficomps
loope
mov
out
ficoml
mov
or
ljmp
inc
clc
aam
sbb
insl
das
cltd
cld
cld
or
fistpll
xchg
decl
push
inc
inc
loope
fstl
push
add
sar
jns
es
adc
rcll
jle
or
gs
mov
jmp
repz
jl
push
sbbb
cld
movsl
dec
ss
cmpsb
shr
cmpsl
cmp
mov
decl
adc
dec
jno
in
fwait
movsb
out
jbe
cmpsb
jecxz
leave
in
out
xor
mov
decl
xor
repnz
lods
push
or
and
sti
pop
arpl
sti
sub
lret
push
add
insl
add
pop
aaa
sub
mov
xor
pusha
into
jbe
xchg
push
mov
sbb
cmp
pop
sbb
jmp
adc
call
inc
sbb
fstpt
in
int
mov
pushl
mov
data16
adc
mov
cltd
movsb
stos
push
pop
inc
xor
push
push
push
leave
call
jle
cmp
mov
movsl
sub
sarl
mov
xchg
lods
data16
repnz
push
fiadds
lcall
xor
je
pushf
lds
cmp
xchg
mov
jmp
push
inc
rcrl
push
mov
and
out
dec
mov
sub
sub
dec
icebp
cmc
sbb
pushl
jmp
jl
mov
jne
rolb
add
loope
jmp
lcall
das
xchg
jae
jg
hlt
into
mov
std
jb
std
leave
inc
ret
xor
jnp
loopw
rorl
xor
fadds
or
test
rcrl
scas
sbb
dec
mov
cmp
ljmp
and
mov
sub
jns
dec
in
cmp
jne
xlat
adc
popa
fstpt
xchg
repz
leave
jne
ret
adc
repz
jp
aad
mov
decl
mov
lcall
dec
rcrb
sbb
rcr
jmp
incl
out
jnp
lret
pusha
adcl
jg
push
fisubs
cmp
sbb
and
loop
addl
mulb
fnstcw
call
rorl
mov
jp
add
shrb
rcrl
mov
movsl
or
cmp
xchg
lock
fsubrp
int3
cmp
pop
pop
sub
addb
lcall
xchg
push
mov
xor
mov
mov
popf
filds
and
pop
xchg
sub
scas
leave
icebp
dec
call
inc
jbe
mov
sub
mov
cmpsl
and
fiaddl
fsubr
push
mov
sbb
pushl
cmp
popa
popa
and
pop
push
xchg
jb
and
nop
pusha
jnp
pop
cmpsb
adc
or
ds
ljmp
sar
xorl
clc
cmp
sahf
adc
cli
mov
mov
psrlq
dec
sbb
incl
bound
cmp
xor
out
ror
inc
pop
aam
gs
xor
dec
mov
mov
mov
jne
aam
and
data16
mov
add
mov
aam
test
orb
sahf
pop
adc
arpl
or
gs
pop
cmp
inc
xchg
sub
inc
shrl
add
jae
rcr
addb
pop
imul
incl
pop
in
cmp
ja
add
add
mov
jg
and
pop
or
inc
add
in
mov
add
dec
orb
jnp
lahf
pop
inc
mov
iret
and
and
sub
add
mov
add
icebp
dec
lock
inc
xor
inc
in
repnz
xor
popf
jno
fstpt
jnp
xchg
movsl
push
daa
add
xchg
dec
and
fdivp
add
es
push
movsb
push
movsb
repz
incl
push
and
stos
push
and
push
test
and
mov
mov
xchg
imul
push
inc
pop
pop
add
stc
pop
lods
push
mov
pop
sbb
add
pop
pop
and
popa
push
add
pop
out
cmpsb
ds
les
push
adc
outsl
mov
adc
add
imul
imul
out
push
sub
lret
mov
sub
push
fsts
fdivs
sahf
data16
mov
stos
pop
stos
mov
mov
jbe
add
jo
mov
push
ss
test
push
shll
push
jo
push
fidivrl
iret
outsb
or
push
ret
mov
sbb
jns
out
jge
fisttps
aam
xorb
ljmp
movsb
push
add
mov
cmpl
jae
shlb
mov
push
jge
sub
jne
push
aam
clc
imul
add
mov
or
dec
add
sbb
push
data16
inc
xchg
ja
aaa
add
push
push
shlb
lret
insb
pop
rep
stos
aas
add
ja
push
loopne
lods
sti
push
xlat
jne
add
ja
push
pop
fsub
mov
aad
push
xlat
ja
js
push
jns
or
mov
jp
inc
push
fidivrl
sarl
adc
push
fldl
insl
mov
inc
jmp
ljmp
xchg
insl
inc
ja
in
xchg
sub
xchg
xor
xchg
ss
ja
setbe
xor
mov
jmp
ss
aaa
push
lcall
push
pop
jnp,pt
cmp
pushf
cmp
popf
xchg
popf
aas
jbe
mov
push
sahf
inc
push
lahf
inc
lahf
mov
fdivr
idivb
mov
add
fadd
add
cld
out
iret
repz
hlt
clc
stc
cli
aas
iret
repz
cld
std
incb
jecxz
insb
lock
mov
jae
add
imul
popa
push
add
pop
add
int3
data16
pop
add
pop
sbb
add
mov
fistpll
add
add
or
mov
or
outsl
or
or
repnz
stos
test
test
or
aam
pop
or
or
pop
pop
adc
adc
lods
outsb
push
rcrb
push
lods
lods
popf
lods
dec
rcrb
pop
push
scas
fcmovnu
stos
mov
scas
scas
insl
lods
pop
pop
adc
mov
add
sbb
push
pop
scas
sbb
scas
scas
scas
and
sbb
nop
fwait
and
mov
mov
push
inc
push
xorl
pushf
sub
sbb
lock
xchg
push
xor
mov
and
and
outsl
push
and
mov
fwait
and
pop
sub
mov
cld
test
pop
sub
popa
and
mov
add
es
fimuls
pop
aas
cmp
mov
push
dec
pop
cmp
push
mov
cmp
cmpsb
add
mov
pop
xor
insl
insl
push
pop
pop
or
or
add
out
addr16
insl
pop
pop
xor
sbb
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
pushl
in
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
inc
xor
push
xor
push
insb
pop
cmp
jl
jge
jno
int3
sub
cwtl
add
pusha
pop
pushw
decl
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
cld
jg
lcall
mov
mov
inc
xchg
push
dec
in
fisttps
jle
je
push
bound
js
lock
cmp
je
pop
inc
mov
jg
fsubs
arpl
addb
int3
and
fdivl
add
scas
dec
sub
aas
outsl
out
sti
mov
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
and
in
xlat
push
ja
jb
cs
xor
mov
add
scas
sbb
sbb
and
jge
popf
mov
pop
jo
push
lahf
adc
mov
add
inc
jae
int
testb
xchg
jp
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
std
int3
xchg
jb
bound
mov
mov
mov
push
sahf
mov
mov
das
mov
pushf
data16
xchg
outsb
add
xchg
xchg
pop
push
data16
dec
jnp
test
push
dec
push
movsb
jae
add
jb
lcall
pusha
shll
outsl
pop
xlat
pushf
push
rorb
add
aaa
out
adc
lcall
outsb
mov
dec
push
scas
push
inc
push
sub
mov
fistpl
imul
stos
push
add
in
pop
jmp
add
js
mov
data16
out
test
shrl
insb
pop
outsb
push
outsl
adc
push
ds
insl
sub
sbb
jg
fiadds
or
out
data16
mov
in
adc
mov
add
test
add
push
loopne
iret
sahf
mov
xchg
add
jb
out
in
addr16
mov
jle
or
jecxz
or
repz
jle
aad
push
divb
fildl
adc
push
in
jge
dec
adcl
sbb
addl
test
test
sbb
test
in
shll
mov
push
xchg
nop
and
out
xchg
or
in
xchg
lock
sub
sub
divb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
sbb
push
cmc
sahf
xor
lcall
fcmovb
out
pushf
cmp
aam
sbbl
cmpsb
scas
jo
test
sahf
mov
pop
jbe
stos
into
shll
push
jl
push
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
hlt
andb
ret
data16
add
addr16
push
dec
out
je
push
int
inc
mov
add
mov
movzwl
inc
fimuls
or
or
or
es
push
in
pop
nop
mov
add
adc
adc
ds
pop
enter
mov
mov
mov
xor
ds
xchg
push
mov
and
sbb
add
mov
add
and
cld
push
imul
mov
aas
and
sub
xor
insb
xor
aas
aas
cmp
cmp
adc
cmp
sbb
sub
ds
jbe
cmp
ficompl
inc
cmp
or
ds
mov
jge
lods
popf
dec
aas
adc
ds
xor
cmp
decb
test
mov
jbe
mov
ds
add
sub
ds
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
ret
clc
add
test
push
cmpl
lods
lcall
push
sub
add
add
pushl
xor
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
mov
pop
ljmp
mov
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
cli
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
mov
pop
adc
cmp
or
push
sbbb
and
mov
incl
pop
xchg
orl
or
jmp
cli
cmc
repz
dec
xor
mov
out
mov
mov
add
add
mov
add
lock
mov
push
mov
fnstsw
repnz
jg
test
xchg
addr16
add
pushf
add
mov
in
add
ret
push
in
lcall
or
mov
mov
push
dec
lret
js
mov
xchg
add
mov
mov
test
scas
lea
rclb
mov
nop
sub
sub
xchg
push
sub
mov
fsts
nop
sub
xchg
xor
xchg
xor
cmp
outsb
lcall
leave
jbe
div
fisubs
sahf
in
fidivrl
shlb
iret
push
lret
inc
adc
loopne
push
std
into
incb
inc
sub
imul
mov
insb
mov
add
test
jg
jle
jge
adc
mov
add
dec
dec
decb
dec
add
pop
add
push
dec
or
adc
cmp
mov
mov
or
add
push
adc
enter
add
or
pop
pop
cmovg
in
lcall
and
dec
and
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
ljmp
cmp
cmp
cmp
daa
and
sbb
pushl
jp
and
add
dec
ss
xor
sub
sub
or
push
add
sti
addb
mov
pop
mov
mov
mov
popw
mov
mov
add
outsb
mov
push
lret
or
outsl
bound
add
pop
push
enter
or
or
outsl
mov
cmpsl
dec
xor
or
into
incl
jg
sub
inc
xlat
sbb
shll
or
push
jnp
pop
mov
es
xor
cmpsb
pop
daa
iret
fdivrp
sysret
in
lock
pusha
rcll
punpcklwd
rcll
inc
sbb
or
push
lock
outsl
pop
mov
sub
sahf
jg
test
sub
lahf
mov
into
adc
out
cli
mov
add
mov
cli
filds
add
cmp
pop
jg
add
xor
cli
inc
test
adc
les
or
jg
inc
mov
cmp
pop
das
sti
mov
pop
pop
add
jle
rcll
mov
sti
jg
jo
insl
pop
xchg
ret
mov
adc
and
pop
test
sbb
push
les
dec
idivb
ljmp
cld
add
and
bound
or
push
or
std
test
add
xchg
les
xchg
pop
jg
push
orl
add
mov
or
sub
decl
push
loopne
xor
inc
xor
incb
jg
and
adc
xor
incl
jg,pt
sbb
sbb
mov
shl
pop
pop
xor
mov
jle
mov
push
sub
sbb
and
xchg
ffree
mov
push
call
and
xor
lods
jle
lret
imul
mov
xchg
add
inc
imul
scas
jle
mov
lcall
push
popa
mov
xchg
cmp
jg
sbb
adc
data16
sub
add
pop
inc
sub
cmpsb
xor
add
jg
adc
add
pop
adcb
dec
jg
mov
mov
fldcw
pop
push
stos
pop
stos
sbb
mov
pop
daa
aas
or
mov
aaa
pop
pop
add
xchg
pop
jle
add
inc
push
je
or
mov
daa
mov
fstl
cwtl
adc
xchg
push
bound
add
pop
cmp
mov
insl
jnp
jae
pop
daa
push
arpl
fmuls
mov
push
mov
fcmovnbe
out
decl
cmp
push
dec
push
or
inc
pushf
push
xor
ljmp
or
dec
sbb
test
mov
push
and
or
dec
lcall
fnstenv
add
push
jne
pop
or
sarl
push
jbe
out
adc
mov
jnp
push
jp
push
out
popf
insl
js
dec
jbe
pop
add
mov
fdivrs
popf
nop
popf
adc
push
outsb
ds
or
cs
jle
into
or
dec
incl
or
ljmp
lcall
adc
xchg
dec
ja
mov
mov
nop
neg
xchg
jp
int
push
push
mov
test
fwait
adc
sahf
inc
out
and
push
xchg
insl
mov
popf
inc
push
pushf
cmp
sub
roll
cltd
mov
neg
mov
xchg
xor
xchg
xor
sub
sub
nop
daa
and
xchg
cs
mov
mov
cmp
xor
mov
push
mov
xchg
jg
pop
fnsave
xor
inc
inc
jae
pop
sahf
movb
es
sbbb
xor
inc
pop
and
ja
dec
inc
stos
fnsave
push
xchg
movb
push
les
aaa
mov
ja
add
les
inc
sbb
cmp
scas
adc
jno
push
sbb
add
outsl
or
sahf
sub
or
sub
push
cmp
jmp
adc
pop
push
orl
lea
jns
jno
popf
push
imul
mov
sbb
test
push
lock
cmp
cmp
icebp
test
jp
imul
add
cmpb
push
decl
pop
add
jmp
cmpsl
push
mov
sub
push
push
sbb
nop
add
xor
sbb
jle
sti
out
andb
std
into
jmp
syscall
jbe
add
mov
sub
push
mov
sub
outsl
add
pop
lcall
or
mov
sub
iret
add
daa
cld
pop
mov
adc
das
pop
cld
call
push
adc
popa
sti
push
rcrb
std
out
and
seta
lret
inc
lcall
or
xor
or
mov
mov
arpl
cmp
incl
incl
decl
call
sub
mov
mov
pop
push
or
mov
sub
dec
or
dec
outsb
decb
mov
xor
clts
add
adc
punpckhbw
or
iret
jle
adc
inc
mov
inc
sti
out
paddq
push
lcall
add
pop
dec
incl
pop
or
push
outsb
push
ljmp
add
or
push
je
sub
pop
lds
adc
push
std
jmp
insl
or
push
add
or
andb
mov
decl
jg
dec
aaa
push
popa
cli
idiv
loop
add
imul
adc
xchg
decl
push
xor
incl
fcmovbe
inc
xorps
aaa
mov
xor
push
shll
adc
jne
roll
dec
hlt
pop
and
sahf
ret
incl
lcall
ljmp
lahf
inc
inc
dec
mov
inc
pop
inc
pop
mov
aaa
push
pop
sahf
movsb
dec
push
stos
int3
jnp
fwait
push
popf
inc
cmpsb
dec
dec
inc
negb
dec
mov
shlb
int
insl
push
shrb
rcl
outsb
shrb
fwait
dec
mov
jb
inc
mov
push
iret
insl
jmp
daa
outsl
pop
imul
push
push
dec
stos
xchg
dec
push
cmp
lcall
xchg
dec
dec
pop
add
adc
push
repnz
jmp
insl
popf
cmp
aas
decb
xor
fs
xor
data16
leave
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
jnp
leave
cmc
xchg
ja
dec
dec
sar
pushl
and
incl
int3
jb
test
ficoms
les
mov
push
add
or
outsl
aad
or
faddl
jge
push
rep
iret
data16
jp
or
jl
or
push
fimull
fdivrl
jge
jg
es
fldcw
xor
jbe
adc
fidivrl
push
dec
push
mov
fistpll
push
repnz
jae
pop
fidivrl
push
mov
or
out
add
in
add
int3
outsb
nop
mull
dec
adc
pop
mov
stc
sbbb
rclb
outsl
mov
push
adc
adc
int
out
in
push
addb
jnp
lahf
dec
es
addl
orb
aas
lds
jg
and
xchg
out
push
sub
iret
in
xchg
mov
cli
pushl
clc
xchg
stc
push
jb
jmp
fnstsw
mov
icebp
dec
pop
cld
sti
ffree
and
jno
sub
jg
or
mov
movl
je
daa
jg
mov
mov
jns
dec
loope
xchg
cld
xchg
pop
jle
dec
es
xchg
aaa
cld
jge
add
and
mov
jg
dec
stos
push
andb
sarb
mov
dec
and
movsb
push
jmp
decl
pushl
push
fsub
pop
shlb
push
int3
fstl
adc
mov
fidivrl
cmp
jbe
mov
cmp
pop
nop
cmp
scas
jmp
test
ds
popf
adc
sti
lcall
push
jns
mov
subb
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
stos
in
dec
jg
out
mov
or
cmp
inc
add
ja
cmc
in
daa
cmc
inc
or
pminsw
out
and
loop
jmp
mov
sbb
add
sbb
inc
xorl
or
call
add
sbb
gs
ret
out
jge
push
adc
add
push
inc
lahf
loopne
sub
and
adc
call
sbb
shrl
sub
push
repnz
test
pop
push
sarb
mov
add
push
sbb
push
or
es
jae
and
add
insl
push
sbb
outsb
or
mov
adc
dec
inc
inc
add
and
cmc
sub
test
fdivl
rcrb
or
fs
fsubl
adc
add
add
mov
xchg
inc
inc
loopne
and
mov
sbb
push
fiaddl
repz
imul
cmp
adc
sbb
cmp
push
mov
sub
addr16
sbb
ficompl
and
call
pop
or
inc
add
stos
pop
test
scas
jo
inc
test
inc
sub
sbb
pop
mov
fcompl
add
sbb
sbb
cltd
add
push
cmp
inc
mov
xor
movsl
shl
outsl
or
aas
les
push
xor
mov
and
or
rcll
xchg
bound
mov
push
add
sbb
adc
lods
or
adc
popa
bound
inc
cwtl
mov
pop
test
scas
sbb
sub
and
nop
movb
movsb
mov
dec
addl
sbb
add
add
push
and
dec
pop
je
orb
mov
pop
sub
dec
jecxz
insl
adc
adc
add
mov
pop
add
mov
lahf
push
add
adc
sbb
push
fadds
dec
and
shll
rcrb
lcall
add
shr
aam
loope
xor
outsl
pop
cmp
cvtdq2ps
mov
jbe
mov
sbb
xor
stos
mov
jbe
insl
pop
adc
sub
adc
xor
ja
movsl
sbb
add
sbb
xchg
mov
inc
add
xor
inc
dec
xchg
inc
out
add
push
movsl
inc
jecxz
jb
mov
cmp
dec
sidtl
sub
add
in
or
mov
insl
cmp
add
xorl
jmp
dec
add
movb
jno
xchg
test
add
add
dec
sbb
fwait
es
fcomps
cmpsb
sbb
xor
sbb
dec
aad
and
lahf
test
xor
loope
jb
adc
add
or
jbe
dec
outsl
sub
mov
shl
adc
mov
xchg
pop
cmpsb
icebp
push
cmp
cmp
and
aas
inc
je
outsl
adc
orb
inc
lret
cmp
xchg
popa
std
push
aas
mov
mov
sbb
push
jns
push
xchg
push
pop
movsl
fwait
push
or
xchg
leave
adc
daa
imul
add
xchg
imul
xchg
movb
or
pushf
sbb
test
add
lret
and
sub
jo
jno
mov
sarl
shll
lods
cmc
pusha
sahf
addl
pop
mov
jns
push
sbb
insl
pop
mov
shrl
xchg
or
popa
add
add
and
loope
push
icebp
outsb
push
jne
push
xchg
pop
or
jg
and
or
insl
jp
add
push
add
add
lods
add
jne
sub
dec
mov
adc
and
lock
leave
and
xchg
add
popa
fwait
adc
sub
dec
push
jne,pt
mov
sub
outsl
inc
push
popa
les
mov
scas
inc
rcr
mov
out
das
shlb
dec
pop
add
add
mov
xchg
cmp
cmpb
pop
xor
dec
rcll
push
jo
sar
and
lods
fdivs
pop
pop
ficompl
pop
add
pop
sbb
ds
inc
mov
insb
push
mov
rcpps
and
push
jb
inc
inc
inc
and
fisubl
shlb
mov
push
xchg
mov
fucomi
insb
push
sbb
push
mov
daa
push
mov
xchg
jo
push
cld
xchg
mov
push
loopne
pshufw
mov
das
inc
repz
stos
dec
sub
dec
arpl
add
cmp
push
gs
clc
movsb
inc
popf
lods
xor
push
les
push
cwtl
test
sub
inc
xor
mov
push
not
and
addb
aas
xlat
fwait
xchg
sbb
pusha
mov
and
icebp
aaa
ret
inc
je
insl
dec
outsb
dec
or
add
in
xor
sbb
xor
lds
sub
ret
push
js
mov
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
iret
xor
inc
or
push
lcall
or
inc
mov
mov
add
dec
mov
push
insl
xchg
pop
sbb
inc
inc
test
enter
and
inc
push
imul
inc
xchg
int3
out
insb
add
mov
ljmp
sbb
je
push
cmp
imul
sub
in
mov
andb
sub
or
insb
or
into
movsb
in
inc
insb
int3
pop
cwtl
or
and
data16
lret
cmp
mov
orl
and
inc
push
inc
add
sbb
xor
lret
data16
inc
stos
push
or
push
outsl
subb
in
mov
std
mov
loopne
adc
loope
inc
mov
sub
adc
mov
outsl
roll
mov
arpl
jmp
outsl
mov
push
cwtl
lock
imul
iret
daa
cmp
fiaddl
rolb
add
loop
mov
repz
leave
sub
adc
lods
cs
sub
xchg
ja
inc
das
adc
outsb
jecxz
cs
add
push
push
mov
cmc
gs
arpl
pop
xlat
adc
shr
inc
xchg
bound
mov
orb
mov
or
pushf
mov
fs
add
push
add
mov
loope
sarl
mov
decl
ffreep
mov
ss
mov
psrlw
out
insb
enter
daa
push
std
sub
sub
ja
sub
mov
cltd
in
ret
jne
js
jecxz
movsl
outsb
fistl
inc
sub
and
and
xchg
ret
icebp
adc
lret
inc
dec
mov
push
and
shll
add
fcoms
push
out
shl
xor
push
imul
stos
push
lods
ja
call
inc
sahf
outsl
pop
insl
addl
and
push
nop
sub
push
and
xor
jecxz
or
popa
std
pop
fcoms
add
iret
jo
test
jns
and
xor
cs
fdivr
orb
sbb
push
inc
and
and
data16
rcrb
add
inc
xor
subl
sub
or
cmp
dec
add
test
divb
je
int3
imul
mov
lahf
and
sub
dec
mov
aaa
pop
pop
rcl
lock
xor
dec
push
mov
std
jg
dec
add
sbb
adc
sub
or
sbb
add
jg
or
add
and
and
push
xor
xor
aas
sti
insl
in
adc
add
push
add
push
or
or
add
adc
mov
decb
or
jo
sub
fisubl
push
js
or
push
or
jo
sub
or
into
es
push
adc
dec
inc
pop
adc
sbb
push
sub
push
sar
fcmovnu
push
inc
sbb
sbb
cs
punpcklwd
jle
sti
inc
andb
or
and
bndldx
add
xor
incl
adc
sbb
push
add
add
adc
or
sbb
push
sub
sub
push
fistpl
and
cs
or
push
or
fldt
cmp
pop
add
adc
ss
sbb
subps
inc
sbb
sbb
mov
jnp
push
sub
and
and
adc
ret
in
lcall
es
sub
sbb
lods
add
adc
adc
sbb
mov
movsb
xchg
pusha
loop
and
mov
xor
test
push
adc
sbb
push
or
xor
or
or
or
sbb
or
jg
outsb
add
xor
out
or
and
mov
pop
mov
lock
xchg
fisttps
or
mov
adcb
movhps
pop
jbe
and
adc
daa
add
lcall
push
xor
sub
jle
sub
aas
fstpt
and
sub
or
cmp
es
xor
dec
sbb
lock
ds
push
bswap
add
or
das
call
sub
adc
or
push
push
lods
adc
adc
or
push
or
pop
aaa
in
jg
mov
and
adc
daa
adc
lcall
or
xor
push
sbb
and
and
adc
sbb
sub
and
mov
or
and
inc
and
or
add
mov
and
or
jg
adc
pop
dec
adc
or
pop
adc
sahf
and
pop
pusha
clc
adc
or
pop
in
adc
push
add
hlt
mov
sub
add
jg
lock
mov
or
sbb
xor
jp
or
inc
aaa
cld
ja
pop
and
push
adc
pusha
inc
adc
xor
or
sahf
adc
or
inc
and
jle
mov
mov
xor
and
aas
push
sbb
xchg
jb
xor
cmp
adc
cmp
mov
xor
jp
cmp
adc
sub
lock
add
lock
unpckhps
clc
sar
lock
add
cmp
fimuls
or
adc
mov
push
jge
fdivs
and
mov
or
push
aaa
mov
scas
clc
sbb
cs
outsl
dec
adc
lock
add
lea
push
fmull
das
pop
inc
lock
push
pop
jge
das
fidivrl
jge
sbb
jnp
push
adc
mov
pop
imul
dec
xor
jo
push
jae
hlt
add
arpl
rolb
push
and
inc
sbb
adc
jg
outsl
push
dec
sarb
inc
mov
adc
pop
cmp
lcall
sub
push
insb
adc
push
sbb
popa
adc
sbb
cmp
bound
adc
lock
pop
cmc
fldt
or
add
insl
rorl
adc
pop
adc
add
cltd
and
sbb
inc
adc
sahf
adc
pop
cld
mov
cmp
adc
lods
lock
adc
sub
incl
adc
sbb
cmp
push
pop
and
adc
out
pop
hlt
sbb
and
dec
sbb
lock
or
or
push
or
es
dec
aaa
pop
add
pop
imul
cld
call
pop
bound
xor
and
add
add
mov
adc
inc
hlt
push
mov
orl
ljmp
shrl
inc
cmp
popa
pushf
insl
mov
and
dec
sbb
sbb
adc
xor
daa
jg
cmp
sbb
femms
push
sbb
sbb
adc
aaa
and
push
lds
aaa
lock
cmp
adc
ljmp
xchg
ds
or
adc
cmp
dec
jnp
jne
and
adc
arpl
sub
inc
and
jg
add
cs
xor
adc
lock
add
or
cltd
in
jns
and
inc
adc
push
sbb
add
imul
inc
push
sbb
and
inc
lock
add
sub
jbe
fdivp
pop
sti
adc
outsb
inc
stos
jge
adc
sbb
adc
push
nop
or
mov
add
es
and
and
outsb
jo
pop
or
add
stos
sbb
inc
in
fildl
pop
test
sbb
sub
loope
mov
sahf
sbb
pushf
jle
scas
cli
sbb
loopne
movsb
or
insb
cwtl
and
push
cmp
and
jl
mov
push
add
push
or
sbb
fists
push
pop
in
push
adc
adc
neg
fldt
dec
and
or
xor
cmpsb
push
xor
outsl
add
jl
dec
inc
mov
dec
dec
dec
push
outsl
cli
pop
jne
mov
xor
xor
inc
and
das
dec
fildll
cs
mov
sub
decl
sbb
sbb
push
xor
xor
jne
dec
and
inc
adc
shlb
test
inc
adc
ja
add
fldl
add
add
xchg
hlt
mov
or
mov
fildll
cmp
call
sbb
sbb
inc
push
push
rorb
push
fildl
cld
push
rolb
and
adc
lock
add
sub
sub
sub
or
jecxz
out
xchg
jb
sub
add
es
lock
adc
daa
pop
scas
clc
mov
or
lret
adc
adc
aaa
dec
or
inc
adc
mov
jae
pop
mov
scas
push
cld
jg
add
push
adc
dec
stos
daa
pop
enter
ja
jg
inc
or
push
adc
jg
popf
and
or
bound
sbb
imul
or
dec
pop
cmp
test
or
xchg
in
outsl
in
mov
xor
push
dec
ss
add
adc
pop
sbb
add
jne
mov
mov
popfw
pushf
sbb
push
xchg
bts
mov
push
xchg
cmp
add
sbb
sub
or
push
and
cld
or
or
or
dec
sub
sub
sarl
xor
push
or
pop
inc
adc
and
push
inc
inc
push
int3
loope
sub
add
pop
insb
xchg
js
test
or
inc
jno
dec
repnz
aas
fs
mov
lods
dec
aas
scas
xor
xor
sbb
pop
add
push
sub
popa
add
sbb
adc
adc
pop
aaa
and
es
aas
enter
js
xlat
sbb
daa
adc
test
sahf
sbb
ljmp
pusha
sub
lock
add
inc
lock
add
push
or
add
xor
or
pop
or
sbb
mov
cmp
adc
pop
or
and
push
sbb
call
cmp
adc
adc
push
sbb
pusha
push
sub
or
and
inc
or
mov
push
or
adc
or
ljmp
sub
push
or
adc
adc
push
push
sub
jle
pop
cmc
adc
pop
sbb
pop
xor
and
adc
cs
das
clc
mov
test
jmp
xor
dec
add
decl
and
xchg
xchg
pop
pop
lock
add
mov
adc
sbb
je
add
dec
and
sti
xchg
out
and
push
push
inc
pop
sub
aas
pop
or
clc
outsl
lods
sbb
cmp
add
mov
push
lods
loope
cmp
add
pop
xor
sub
es
lock
in
xor
add
loopne
jns
sbbl
mov
or
movntps
push
pop
adc
adc
push
mov
sbb
decl
sbb
pop
dec
sub
jne
sub
imulb
sub
cvtps2pd
pop
sub
sbb
inc
push
push
aaa
or
pop
jg
jg
fxsave
sub
enter
or
or
jg
pop
mulb
or
sbb
or
push
or
cld
ja
cmp
mov
and
adc
sub
or
sbb
ficoml
and
dec
mov
add
or
decl
pop
push
xchg
movsl
adc
pop
sub
mov
inc
sti
fcomip
bound
mov
test
dec
popf
xor
pusha
push
or
xchg
xor
xchg
or
adc
mov
je
adc
ljmp
lcall
add
wbinvd
daa
or
cmovae
fstpt
cmp
sahf
xor
sub
sbb
movzwl
lock
or
fisubl
sbb
fcomip
ljmp
inc
inc
inc
inc
cmp
dec
test
adc
cmp
mov
xor
popa
pop
sbb
push
aaa
sub
adc
bound
scas
pop
arpl
pop
adc
and
xor
inc
cmp
pusha
ds
mov
sub
adc
adc
pushl
adc
or
or
pop
xlat
stos
sbb
push
xor
lcall
roll
inc
sub
inc
xor
sbb
and
gs
add
xor
and
aaa
mov
sub
adc
and
das
mov
pop
aas
push
add
and
mov
inc
adc
or
ljmp
push
inc
dec
pop
dec
cltd
aas
push
cmp
cmpsl
pop
fidivrs
inc
adc
pop
mov
dec
pop
popa
adc
hlt
sbb
add
std
pop
adc
fldcw
es
and
or
and
sub
jmp
sbb
pop
xor
data16
jne
mov
push
sbb
leave
lock
repnz
or
mov
dec
adc
notb
lea
add
repnz
sub
xchg
mov
pop
and
xor
lock
add
popa
push
add
out
cwtl
subb
and
add
insb
arpl
lods
jo
push
dec
add
pop
sbb
mov
xor
enter
cmp
adc
mov
loopne
lfs
pop
lods
pop
sub
outsl
adc
push
sbb
aas
adc
adc
pop
cmp
sub
sub
in
push
push
or
dec
pop
sub
xor
adc
cld
inc
andb
sbb
or
sbb
push
in
push
add
adc
ds
xor
call
or
pop
adc
or
and
adc
es
je
adc
imul
adc
xlat
rolb
in
and
or
std
mov
and
jb
and
add
inc
pop
or
inc
mov
or
add
sbb
add
cwtl
ret
outsb
and
cmp
cmp
ud0
push
pop
mov
mov
or
or
dec
sub
inc
push
pusha
adc
push
pop
xor
pop
xor
pop
dec
dec
outsb
pop
push
mov
cmp
push
sbb
arpl
cmp
and
pushl
aas
mov
dec
sbb
pop
lock
add
dec
cmp
adc
or
fisttps
push
dec
cmp
adc
jo
cmp
ret
jmp
imul
pop
sbb
and
push
dec
aad
fistpl
add
ds
int3
dec
addr16
or
bound
add
ret
testb
repz
fstpt
inc
or
xor
mov
push
add
adc
scas
filds
xor
adc
inc
or
or
push
adc
sbb
cli
add
aaa
popa
push
sub
push
test
sbb
inc
adc
mov
sbb
sbb
push
pop
xchg
push
sub
fwait
and
and
or
inc
es
inc
mov
or
xor
call
push
sbb
cmp
push
or
inc
inc
cmp
jo
popa
xlat
insl
lds
orb
incb
add
push
pop
jne
push
es
repnz
data16
dec
icebp
pushl
adc
dec
pop
and
adc
jg
inc
push
aaa
lods
add
call
bound
cmp
daa
cmp
and
jae
sbb
push
insb
sbb
das
cli
decl
sub
and
inc
pop
adc
sbb
pop
cmp
adc
lea
fs
and
push
cmp
or
fwait
lock
sbb
add
lcall
sbb
mov
mov
mov
add
outsb
cmp
sub
jmp
cmp
add
outsb
xor
pop
mov
out
xchg
and
inc
sbbb
inc
inc
cltd
push
aaa
clc
push
aad
xor
ss
or
inc
xchg
sbb
push
cwtl
adc
inc
pop
mov
ja
push
xchg
push
dec
movups
shrl
or
sbb
push
push
pop
adc
pop
or
fidivrl
outsb
into
jb
and
push
pcmpgtw
test
jle
loop
and
cwtl
cs
cld
mov
aaa
sbb
mov
or
push
out
sbb
les
adc
xor
or
sub
scas
fisttpl
xor
and
or
inc
mov
push
lock
mov
adc
add
or
mov
pop
xchg
or
shl
add
and
cmpsb
aad
rcrl
or
pop
push
adc
loopne
imul
lock
xor
repz
scas
dec
sub
push
pop
pop
dec
push
aas
nop
pop
shll
pop
sub
sub
dec
je
and
xchg
incb
aad
lea
inc
repz
mov
adc
pop
push
pushf
add
pop
mov
adc
or
ret
push
and
adc
cmpsb
cmp
bound
or
decl
jnp
adc
or
jo
mov
or
or
push
xor
adc
xchg
dec
cs
pop
push
dec
or
xchg
and
push
fisubl
sbb
or
add
mov
bound
mov
lock
jg
lock
add
and
in
pop
add
cs
push
cld
ds
stos
notl
imul
and
add
cmp
jg
xor
or
or
and
xor
outsl
pop
fiaddl
orb
sbb
aam
sub
sarl
ret
js,pn
lret
push
add
sbb
fidivl
or
adc
shrb
push
sub
jp
or
dec
adc
sti
or
mov
adc
lcall
push
and
push
lcall
cltd
rorb
clc
pop
inc
sub
prefetcht2
ds
outsb
sub
push
mov
pusha
pop
add
dec
in
sbb
inc
jmp
sbb
lods
mov
pusha
add
cltd
js
loopne
jbe
pop
add
inc
xchg
adc
shlb
or
es
ja
or
inc
jbe
sub
push
push
adc
test
cs
add
iret
inc
jo
sub
cmp
addl
sub
adc
sbb
mov
adc
mov
or
or
adc
shll
sets
mov
and
push
adc
das
dec
mov
or
bound
dec
xor
add
dec
add
xor
lock
popa
clc
or
nop
pop
lcall
adc
lods
ret
loopne
adc
push
push
das
notb
sbb
push
popa
or
movl
outsb
movsb
push
inc
hlt
ja
sbb
or
sbb
lock
sub
fbld
pop
or
xchg
pop
mov
lock
add
shlb
incb
popf
sarb
and
cmp
push
lock
adc
subl
add
adc
add
pop
std
inc
je
sub
and
inc
or
or
loope
push
mov
sbb
inc
lock
add
shl
add
cmp
inc
inc
adc
pop
and
cmp
push
das
push
jb
or
adc
and
mov
mov
ss
pop
test
push
jbe
cwtl
adc
mov
mov
adc
movsl
add
jo
test
xor
ror
add
pop
cmp
pop
push
mov
lods
adc
pushf
into
loopne
mov
mov
and
ss
sbb
into
lock
fildl
lock
or
add
add
es
mov
cmp
add
cmp
add
sbb
add
sbb
fucomip
jg
pop
xor
xor
sub
dec
dec
push
mov
sub
nop
dec
and
outsb
cmp
and
sub
xor
and
dec
and
fcmovnbe
sub
push
dec
inc
inc
and
xor
mov
jno
dec
and
dec
and
cmp
sub
xor
mov
and
xor
pop
cmp
push
lock
cmp
sub
cmp
fildl
fldt
dec
sub
cmp
sub
dec
pop
sbb
fcoml
in
fcmovnbe
add
add
mov
push
and
js
mov
sti
pop
cmp
and
xor
xchg
aam
dec
push
push
push
and
jl
dec
xchg
outsb
fdecstp
cmp
movsl
test
push
adc
pop
jg
dec
ret
pusha
inc
aas
dec
jne
cmp
sub
lods
cmpl
pop
cmp
xor
inc
cmp
sub
mov
xchg
push
and
movsb
dec
fildll
idivb
cmp
jo
xor
inc
mov
inc
or
add
hlt
mov
pop
dec
inc
cmp
lock
cmp
sub
stos
mov
pusha
xor
or
add
or
jle
lret
add
mov
test
add
or
pop
push
add
pop
sub
or
xchg
enter
into
mov
or
push
in
pop
out
add
mov
sbb
cs
or
movsl
test
or
push
sbb
mov
add
clc
sbb
rclb
jmp
push
mov
les
adc
push
mov
insl
aam
lock
jl
test
xchg
lock
add
adc
cmp
or
mov
lea
add
fldenv
add
js
or
dec
mov
test
bound
add
inc
jno
lock
fisttps
xor
push
rcl
add
or
add
dec
inc
cmpsb
add
sub
add
push
out
fisttpll
or
adc
sbb
add
das
add
mov
or
fisttpl
fisubl
adc
arpl
adc
icebp
mov
inc
add
and
and
test
mov
inc
adc
or
sub
test
and
in
add
pop
fisubl
jo
cmp
adc
mov
adc
and
jae
xchg
push
sbbl
divb
dec
adc
outsb
xor
dec
and
pusha
pop
insb
mov
push
mov
mov
sub
mov
lods
pusha
stc
leave
xchg
iret
or
in
sub
andl
push
inc
imul
xor
add
push
adc
mov
ret
sbb
add
adc
cmp
and
imulb
adc
and
js
and
add
or
add
or
jge
out
out
dec
sub
adc
sbb
and
xor
imul
sub
or
fcmovnbe
sub
subb
pop
jmp
sub
jnp
test
inc
push
mov
or
fcmovnb
stc
and
or
fadds
cmp
mov
or
sarl
mov
or
mov
cmpl
inc
push
push
mov
ret
fsubs
sub
mov
pop
add
arpl
popf
arpl
fadds
add
adc
xchg
sbb
in
cmp
mov
or
fists
lods
movsl
andb
push
xor
fcomps
int
and
adc
sbb
stc
adc
imul
pop
pop
test
inc
mov
and
dec
sub
popf
xchg
aaa
out
inc
insl
insl
mov
daa
inc
jne
insl
add
jg
insl
sub
push
pop
fists
adc
adc
gs
sub
jmp
out
stos
adc
lea
add
push
push
pop
mov
sbb
push
dec
xor
and
std
add
inc
xor
std
ret
or
aam
lret
aad
and
inc
mov
sub
test
add
sbb
mov
imul
adc
mov
xor
pop
xchg
inc
cmp
sbb
rclb
addl
jecxz
push
ret
xor
add
ds
adc
push
rorl
out
adc
sub
adc
pop
and
push
add
push
shl
rcl
add
sbb
or
inc
mov
adc
xor
jg
and
cwtl
sbb
adc
sbb
movsb
add
or
insl
pop
addb
push
mov
jbe
pusha
or
outsl
jo
cld
or
xchg
adc
fimull
add
cmp
sub
sub
push
lods
add
sub
lods
add
and
mov
sub
cmp
xor
sbb
xchg
or
push
cmp
or
mov
not
push
xor
pop
add
xor
sbb
sbb
sub
int3
sbb
dec
dec
and
xor
lret
push
cmp
and
sub
and
mov
mov
push
sbb
sbb
sub
dec
cmpsb
jno
pop
push
inc
sbb
pop
sub
add
pusha
add
cs
les
dec
xchg
ss
dec
pop
rcl
and
add
mov
es
mov
outsb
inc
insb
xor
add
aad
sbb
cmpsb
movsb
enter
and
mov
inc
mov
pop
addb
push
xor
pusha
arpl
je
sub
mov
popf
fsubrl
sbb
popf
and
add
cmp
sbb
aam
or
cmp
push
xlat
fcomps
in
jns
add
push
popf
sbb
adc
in
or
xor
dec
js
jbe
jle
ret
or
or
push
dec
xchg
and
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
and
nop
jge
add
