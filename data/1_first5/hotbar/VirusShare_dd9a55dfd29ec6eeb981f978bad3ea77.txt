divb
in
mov
mov
test
inc
add
add
int
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
add
stc
out
aas
mov
test
je
cmp
pcmpeqd
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rcll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
adc
movl
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
push
mov
call
pushl
mov
fwait
cltd
fildl
mov
fbstp
mov
mov
andl
mov
push
lcall
mov
hlt
cs
xchg
adc
push
sti
lcall
mov
fcomps
sub
dec
shrb
in
dec
inc
in
or
cmpsb
stos
mov
or
jbe
lcall
ror
push
jo
sbb
mov
outsb
xchg
incb
call
sbb
jnp
dec
add
pop
pop
pop
jle
call
inc
mov
lea
mov
adc
pushf
cld
add
xor
push
in
loopne
dec
or
jbe
ret
enter
ja
enter
xchg
push
mov
xchg
mov
inc
add
add
inc
fisubs
das
and
add
rolb
xlat
push
mov
push
in
sbb
push
or
sbb
push
lock
or
ja
aad
jnp
mov
aas
fadd
jae
cmc
jne
mov
pop
pop
push
jno
cmc
jmp
aad
or
push
push
sbb
outsb
or
sub
add
sbb
enter
add
push
mov
mov
aaa
xchg
xor
bound
std
pop
sub
lock
push
mov
cmp
add
loopne
or
jge
insl
sub
dec
cli
mov
mov
xor
mov
pop
ret
push
js
and
pop
jae
xlat
fstpl
cmp
pop
inc
sub
inc
add
inc
clc
sub
enter
or
into
flds
inc
ss
push
sbb
shll
testl
pop
adc
push
ja
lods
inc
test
jne
loopne
jne
xchg
ja
add
jmp
cli
js
mov
cmp
jg
mov
adc
adc
ret
pop
dec
ds
add
pop
pop
jp
pop
movsl
pop
enter
or
rclb
mov
sub
aas
cld
push
mov
sar
imul
cld
ja
adc
ret
mov
clc
add
push
push
jmp
jmp
pop
in
nop
xchg
adc
leave
aam
enter
cs
orb
ret
cli
jg
adc
cld
clc
fistpll
iret
jle
mov
cmpl
or
cld
loope
pop
push
out
jmp
push
cmp
jge
push
std
add
inc
jle
add
pop
cltd
jge
enter
cmpsb
push
aam
push
sahf
lock
add
push
sub
add
push
cmc
sbb
jne
test
incb
add
xor
jle
fistpl
adc
pushf
mov
cmp
out
mov
or
adc
lea
fwait
or
cmp
sti
insl
mov
xor
into
mov
aam
pop
sub
sbb
cmpsl
jo
fdivrs
out
jnp
mov
cld
fsubrs
inc
stos
mov
repz
xchg
or
test
jle
cmp
jbe
mov
mov
inc
mov
rcrl
inc
icebp
roll
xchg
pop
jmp
push
mov
adc
decl
mov
jns
sub
nop
lret
lea
inc
sbbl
jmp
or
add
fucom
fmuls
lcall
hlt
jle
xor
jbe
push
and
hlt
jg
pusha
cmp
sub
cmpsl
std
xor
xor
push
push
shr
imul
cmp
jle
mov
add
int3
out
or
add
cmp
cmp
jae
push
cmp
xor
adc
inc
xchg
pop
lock
add
addr16
add
jb,pt
mov
adc
mov
push
lea
ljmp
sbb
mov
js
cmp
adc
push
push
rcrb
mov
decl
xchg
call
insb
or
sub
cmpsb
rolb
adc
sbb
out
cmp
jo
inc
sub
sbbb
aad
aaa
add
push
jg
jns
or
pop
pop
or
cmp
sub
add
xor
jno
cmp
jne
push
push
lock
push
les
jl
in
js
push
mov
mov
pop
push
test
or
pop
pop
pop
pop
andl
adc
mov
ret
pushf
mov
jne
mov
test
je
movl
jo
add
pushf
repnz
push
ss
movl
sub
mov
mov
xchg
iret
jle
mov
movsb
sbb
or
les
mov
je
jl
dec
jnp
pushw
mov
test
mov
enter
dec
imul
jmp
lods
mulb
add
and
xor
cmp
xor
pop
psubd
push
xlat
inc
inc
push
fld
incb
adc
sbb
ficompl
jge
xchg
push
loopne
add
int
pop
fs
sbb
pop
add
int
int
dec
add
and
push
lea
push
inc
inc
ja
daa
fadds
iret
cmp
inc
pop
push
add
adcb
mov
xor
sub
mov
in
into
in
test
mov
or
loopne
scas
inc
dec
add
cmc
jo
lahf
sbb
push
ss
je
rcr
dec
bound
adc
out
or
jne
dec
adc
mov
fisubl
pop
jnp
mov
pop
mov
test
pop
push
leave
jb
cmp
adc
sbb
and
dec
mov
push
rclb
push
arpl
pop
jnp
mov
mov
or
push
adc
jge
cs
xchg
jecxz
pusha
xor
add
or
dec
sahf
outsl
jp
cltd
or
push
lahf
rcr
lea
sub
or
shll
or
popa
add
and
push
adc
sbb
add
push
jle
mov
sub
in
add
adc
dec
or
sub
scas
ljmp
sbb
mov
jno
fldcw
lahf
insb
out
xchg
adc
lods
sbb
lcall
inc
inc
les
push
adc
xor
cvtps2pi
shrb
repz
sub
call
lds
cmc
mov
inc
aaa
push
lock
add
add
add
outsb
mov
cs
scas
insl
or
out
pusha
inc
fmull
int3
shrl
inc
add
push
mov
sbb
dec
out
lock
xor
xchg
inc
and
jl
out
pop
mov
add
sbb
sbb
jne
lret
pop
cmpsl
andl
sbb
push
cmp
fistl
pusha
add
mov
cli
pop
nop
or
jmp
mov
shrb
mov
sbb
sbb
nop
dec
nop
daa
xchg
lds
scas
roll
mov
mov
mov
pop
pop
rorl
adc
lods
push
pop
or
and
push
js
and
adc
adc
popa
add
les
loopne
cmp
mov
jg
std
neg
sbb
inc
inc
adc
andb
jle
or
cmpb
stos
mov
sbb
jo
and
push
lods
movsl
jno
sbb
bound
cmp
xlat
test
mov
push
and
test
pop
and
xchg
and
adc
and
cmp
test
lods
or
loopne
loope
decl
adc
lahf
cmp
cld
mov
sbb
repz
aaa
out
push
xor
icebp
push
push
js
adc
pop
adc
lock
test
fmuls
in
clc
jbe
pop
mov
sub
jmp
mov
dec
imul
xchg
inc
add
jecxz
xchg
and
xor
into
andl
or
dec
mov
je
add
push
icebp
into
scas
mov
dec
or
or
push
data16
sbb
or
rcrl
inc
xchg
sbb
pop
aas
push
and
inc
and
or
push
jo
scas
mov
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
and
jno
and
ret
lahf
cmp
push
push
or
mov
xor
dec
pop
inc
outsl
aam
fmuls
mov
push
push
ror
mov
push
add
enter
lcall
push
mov
or
mov
push
mov
orb
addr16
jl
or
sysenter
shlb
xchg
fisubrl
insb
repz
or
leave
add
sub
in
dec
mov
test
popa
jbe
dec
add
mov
fcoml
mov
mov
or
push
mov
in
test
into
fsubrl
or
push
adc
call
jb
popa
scas
ja
mov
dec
loope,pt
lea
out
cmp
and
test
jno
clc
addl
adc
sub
dec
mov
xor
fimull
jge
outsl
sbbl
push
cld
das
cmp
mov
out
add
xchg
js
inc
loopne
or
movl
imul
fildl
int3
aam
jnp
cmp
push
lea
mov
jle
test
mov
push
addb
or
pusha
sarb
ljmp
xor
lock
pop
js
inc
pusha
je
in
lock
push
movb
fidivrs
jo
insb
pop
test
cmp
mov
test
pop
cmp
dec
sbb
mov
fiadds
push
sbb
sub
std
outsl
div
fistpl
fistpl
jae
ret
je
push
rcrl
sbb
stos
and
jnp
ret
nop
es
xchg
out
nop
nop
aam
and
sbb
cmp
or
pushf
or
es
repnz
pushf
pusha
dec
mov
and
mov
dec
add
xor
inc
sbb
lock
push
repnz
nop
xchg
add
fs
xchg
rcl
push
cmp
test
jl
scas
cmc
add
test
lea
jno
repz
xor
arpl
cld
sub
lock
xor
sub
pushf
sbb
pop
mov
hlt
fcoml
dec
outsb
cmp
fsubp
mov
dec
in
mov
add
cld
fs
mov
sti
inc
mov
adc
and
repnz
cwtl
adc
pop
inc
or
int3
in
leave
xchg
int3
insb
les
les
adc
cltd
mov
sbb
enter
mov
cltd
xchg
out
lods
sbb
sub
and
jmp
shlb
rorb
insb
sbb
and
sbb
mov
shll
pop
lock
jmp
dec
adc
pop
push
sbb
add
mov
scas
iret
adc
cmpl
jo
push
fmuls
add
adc
jmp
or
pusha
adc
push
in
add
sub
mov
in
xchg
ds
pop
push
xor
shrb
aam
pop
mov
add
mov
sbb
mov
dec
mov
lock
clc
fsubr
aam
or
mov
shlb
in
js
push
push
call
mov
pop
sbb
add
sub
sub
adc
jge
shrb
xchg
movsb
and
mov
and
sbb
pop
jae
mov
cmpsl
push
mov
clc
fs
test
lds
pop
hlt
mov
mov
mov
test
mov
push
mov
xor
jl
mov
sbb
pop
and
addr16
les
jae
adc
ja
and
outsb
daa
add
fcoml
or
sbbl
adc
xchg
push
jle
pop
jne
xor
in
inc
mov
fcmovne
push
pop
inc
pop
pop
and
jmp
loopne
or
xor
shll
ja
or
dec
mov
or
adc
fwait
jno
add
stc
outsl
sbb
das
pop
push
lea
and
sub
add
adcb
push
lea
add
mov
mov
dec
or
or
in
lret
or
ret
mov
add
adc
test
stos
adc
roll
movsl
jno
sub
push
pop
insl
mov
jns
shr
into
adc
cmc
sub
dec
mov
mov
add
cmc
inc
xor
pushf
mov
mov
subl
sbb
pop
push
xchg
xchg
add
popa
jae
neg
pop
inc
jne
loopne
add
add
stc
shr
push
sub
sbb
push
in
push
dec
pop
arpl
xchg
popf
cmp
lret
adc
cmp
cmp
je
mov
sahf
les
rolb
and
nop
pop
stc
mov
lea
mov
mov
add
popf
addb
add
pushl
xor
rclb
cmp
or
aad
lock
lahf
add
pushf
and
pop
fwait
in
in
and
adc
call
daa
add
add
xchg
add
pop
and
fcoms
xor
leave
xor
cmp
fldcw
xor
pop
hlt
je
addr16
andl
xchg
push
test
mov
movsl
pop
or
dec
xor
xor
xchg
stos
jae
out
test
cmp
daa
add
fcmovu
jg
popa
push
pop
mov
jmp
roll
add
sahf
sub
sahf
cmpsb
sbb
mov
mov
jb
mov
fs
inc
and
cmp
ss
mov
fucomi
popa
loope
lds
jns
call
xorl
or
add
add
aad
xchg
adc
and
ljmp
push
aas
decb
inc
push
or
je
push
loope
and
test
test
inc
fsubrp
adc
rclb
sub
pop
repnz
push
sub
push
ljmp
sub
jne
add
push
sub
add
jno
sub
sbb
inc
lret
ret
inc
lcall
xor
mov
mov
stos
add
and
cmpsl
jne
add
fcompl
aas
insb
cmp
out
xor
jbe
aaa
xor
test
dec
rclb
push
movsb
mov
loope
push
loope
sub
ret
jne
fdivl
mov
sub
loope
mov
push
xchg
cmp
sub
sti
mov
adc
cmp
sub
cmp
xchg
adc
aas
adc
jecxz
add
rclb
push
push
add
add
inc
cmp
insl
clc
dec
push
push
mov
mov
ss
lock
cmp
loopne
popa
jo
fmull
or
enter
mov
cmp
mov
and
push
mov
sub
and
cvtps2pi
sub
mov
inc
ficoms
dec
das
push
lock
xor
push
pop
xchg
lahf
xor
sub
pop
sbb
insl
adc
testb
mov
cmp
mov
gs
mov
cltd
sbb
outsl
inc
stos
pop
out
sbb
cmpsl
xchg
insl
outsl
loopne
cmp
inc
mov
jae,pt
mulb
add
inc
push
xor
stc
pop
ficoms
xor
push
add
dec
sbb
pop
aad
or
ss
xor
push
and
push
add
and
cmc
sub
enter
sub
les
xor
sub
or
decl
xor
and
lahf
jne
inc
mov
adcl
aas
fadds
shll
cmpsl
mov
mov
es
adc
stos
into
and
inc
ret
jge
popa
mov
mov
add
or
cwtl
mov
aaa
loopne
dec
add
cmpsb
and
cmc
adc
inc
pop
ret
push
jo
jo
gs
adc
mov
js
sub
pop
or
je
mov
xchg
adc
push
adc
mov
jmp
je
ja
outsl
or
mov
cs
xor
pop
sahf
divl
jne
push
sub
mov
clc
jmp
or
jo
lret
jne
push
outsl
cld
and
dec
scas
jno
das
cmp
pop
sbb
xor
and
test
add
cld
ret
or
jge
mov
add
icebp
imul
cmp
xchg
popa
stos
bound
movb
popf
std
add
and
leave
add
dec
jl
leave
add
inc
mov
mov
push
out
loop
ret
adc
push
inc
cwtl
pop
popf
cmp
shl
jo
lea
push
push
push
and
out
push
or
adc
int3
ret
inc
add
in
into
rorl
mov
dec
fcoms
call
inc
xchg
sub
sub
sbb
setne
pushf
roll
xorl
jo
shl
jb,pn
pop
outsb
sub
jne
or
loopne
in
out
je
sub
adc
mov
add
das
add
sti
sub
es
enter
push
inc
faddl
iret
sbb
sub
out
add
add
call
pop
xchg
cmpb
push
jne
or
mov
emms
xchg
cmp
dec
jbe
add
pop
test
call
and
sub
aad
fadds
dec
shlb
jle
add
cld
inc
mov
imul
loop
out
inc
out
xor
and
je
push
mov
fnstenv
int3
lock
lds
loope
push
jnp
add
cmpsl
pop
xchg
push
mov
les
mov
mov
test
push
mov
or
aad
fwait
add
or
enter
inc
int3
cmp
mov
or
fsubl
inc
faddl
add
loopne
insl
adc
mov
aas
movzwl
test
cmc
jg
and
popf
dec
dec
je
sub
out
dec
pop
pop
jmp
bound
jge
imul
push
jmp
adc
int
or
mov
adc
lret
mov
sub
sbbl
xor
int3
mov
aaa
xchg
mov
addr16
xor
out
bound
jecxz
aas
inc
jae
test
mov
mov
stos
je
cmp
fistpll
mov
xor
inc
mov
out
pop
lock
jle
mov
test
sahf
pop
daa
push
mov
xor
adc
ret
jle
into
mov
sbb
push
sbb
add
xchg
sub
add
jbe
iret
int3
add
mov
bound
loopne
clc
pop
filds
lcall
mov
add
int3
add
mov
fadds
int3
mov
pop
add
jo
push
popf
arpl
mov
shrl
xorb
inc
add
sbb
push
andb
es
push
hlt
jge
dec
or
scas
ret
push
hlt
adc
push
daa
iret
xor
icebp
xor
cmpl
subb
stos
sub
sub
sbb
mov
add
insl
fwait
mov
or
push
lods
pop
sub
in
add
mov
cltd
sahf
xchg
xor
jl
adc
mov
fcoms
xchg
or
fndisi(8087
lcall
add
jns
loop
movsb
jl
loop
xchg
push
push
add
push
iret
dec
mov
add
scas
adc
dec
inc
cmp
enter
push
es
cmp
lock
mov
jl
enter
sbb
aaa
xchg
push
ret
push
mov
inc
loopne
sbb
gs
cli
stos
pop
lcall
call
push
imul
lods
pop
insb
cli
subb
out
and
dec
add
jo
clc
adc
mov
sbb
xor
outsb
loop
adc
cwtl
test
push
mov
fdiv
and
inc
push
in
pop
mov
lock
adc
or
jge
xchg
adc
popa
loope
rorl
cmpsl
and
mov
xor
mov
stos
or
scas
in
push
movsl
insl
mov
and
pusha
scas
sbb
movsl
add
jmp
mov
loope
adc
loope
mov
sub
push
add
in
push
pop
push
push
call
and
cwtl
mov
addl
pusha
jno
loopne
int
cmp
and
adc
pop
call
push
inc
cmp
loop
in
mov
cwtl
iret
pop
ret
shll
push
jo
jl
push
mov
add
and
sbb
cmp
or
rcr
inc
adc
cmovns
ret
adcb
cmpxchg
in
adc
or
cmp
dec
push
rolb
or
adc
pop
shrb
add
xor
mov
push
punpckhwd
jbe
or
nop
shlb
aam
xchg
xchg
xchg
mov
adc
aam
and
lock
fdivr
dec
sbb
xchg
mov
shrb
je
pushl
call
js
fsub
cmp
ret
shr
movzbl
push
adc
push
ret
push
shlb
push
inc
push
mov
dec
mov
mov
jle
cmp
sti
dec
popf
cmp
jb
or
mov
dec
pop
or
or
shll
xor
clc
xor
jo
fs
pusha
lods
or
xor
xor
mov
or
add
mov
addr16
in
sarb
jmp
xchg
inc
mov
js
jle
push
sub
inc
push
push
aaa
sarl
push
cmp
jg
mov
jmp
loop
rorb
leave
loope
fistps
cmp
cs
pushf
in
cli
enter
test
int3
ss
or
mov
adc
cs
push
jl
mov
push
jne
test
fnstcw
or
pop
jmp
mov
push
jg
sbb
arpl
add
and
xchg
call
or
cs
add
iret
outsb
sub
xor
ljmp
clc
mov
mov
lea
cmp
jae
mov
mov
jmp
incl
xor
sub
and
div
cmp
call
inc
add
sbb
cmpl
mov
lods
add
fbld
sahf
imul
add
adc
sarb
fistpll
and
stos
les
mov
cmp
cmp
aad
std
adc
cld
ret
lcall
fisttpl
mov
sub
xor
dec
add
lea
pusha
pop
sbb
and
push
push
pusha
or
push
jnp
outsb
nop
adc
cmp
dec
hlt
xchg
add
aaa
rolb
lock
mov
mov
stos
sub
mov
dec
cld
dec
or
jbe
xorb
int3
and
ljmp
lcall
sbb
leave
js
push
hlt
jg
pop
lret
in
insb
xor
inc
jno
sub
dec
jmp
cmpl
push
inc
inc
pop
fidivl
xor
add
movl
push
push
push
inc
arpl
ret
jecxz
inc
add
insl
jno
add
inc
add
inc
mov
hlt
jl
repz
sub
pop
jmp
or
rclb
test
mov
cmpsb
cmp
filds
test
movsl
mov
mov
jae
ja
push
sbbl
inc
pop
mov
push
xchg
lret
push
popf
xchg
mov
scas
pop
mov
hlt
lea
push
add
bound
lods
stos
cmpsl
pop
mov
dec
mov
dec
scas
test
mov
pop
mov
push
push
pop
and
rep
push
jbe
jl
mov
mov
sub
cmp
pop
sbb
mov
push
sub
jmp
movl
mov
clc
sub
pusha
cmp
pop
shrb
adc
mov
xchg
mov
or
decb
mov
je
push
and
adc
jb
or
data16
mov
jb
mov
or
mov
push
insb
scas
xchg
xchg
sub
inc
shrl
clc
ss
icebp
je
sar
shll
cmp
je
pushl
movb
test
pop
sti
dec
hlt
jmp
push
push
push
and
sbb
mov
pop
mov
sbb
leave
shrb
push
leave
out
loop
inc
loop
push
sbb
sub
setne
shl
ret
xchg
xchg
outsb
pop
xchg
pusha
cmpb
call
adc
rcrl
pop
js,pt
jo
jg
orb
aad
pcmpeqd
pusha
sub
add
subb
inc
inc
mov
sbb
cmp
jne
add
xchg
mov
add
int3
add
roll
popf
mov
sbb
sbb
push
mov
addl
aad
out
cmp
clc
out
sbb
pop
hlt
xor
add
out
add
je
push
lods
push
push
pop
add
xor
add
in
add
xor
sub
inc
pop
push
inc
adc
pop
cmpsl
cmp
jecxz
pop
hlt
sub
adcb
jg
sar
or
std
push
inc
jmp
mov
fs
mov
ret
insb
cld
fadds
lea
jbe
mov
push
mov
pop
push
popa
lcall
push
aad
cmp
lock
je
movl
sbb
mov
inc
mov
sbb
and
jp
lods
cmc
push
sub
mov
es
ds
mov
jge
adc
add
xlat
jecxz
xor
pop
mov
movsl
mov
mov
or
in
cmp
mov
sbb
push
fistl
push
jbe
adc
sbb
push
sub
sub
lods
add
cmc
or
lods
xchg
lods
cmp
push
add
lods
jecxz
aaa
mov
aas
and
xchg
add
sub
add
insb
fdivs
push
sub
or
fldt
push
sub
test
xor
nop
jecxz
outsl
rol
dec
push
inc
aad
cmp
push
adc
loop
push
adc
mov
pop
stos
or
sbb
mov
in
cmp
adcl
mov
daa
xchg
cmp
test
lret
xchg
mov
cmp
pushf
sub
js
and
adc
xchg
pop
call
loope
shrb
in
and
int
sbb
push
stos
xor
push
adc
daa
les
pop
cmp
aas
in
add
bound
jmp
and
add
insb
aas
adc
roll
enter
sbbb
in
nop
aas
sub
inc
dec
sub
int3
and
mov
ds
add
rcl
ds
or
mov
push
add
xor
push
dec
cmpsl
dec
xorl
push
out
dec
push
push
cs
mov
inc
adc
aad
fldl
adc
leave
add
enter
stc
push
repnz
mov
mov
jns
jg
xor
push
inc
sahf
rorb
mov
in
jmp
icebp
scas
adc
inc
add
orl
fists
negl
and
or
sub
clc
adcb
xchg
or
stos
es
push
lock
inc
gs
mov
add
leave
and
clc
sub
and
and
dec
cs
adc
adc
xor
inc
mov
add
or
cs
adc
mov
mov
scas
cmp
adc
pop
or
sbb
mov
mov
mov
iret
jae
mov
jno
or
or
ds
pop
ret
and
push
lea
cmp
daa
adc
js
inc
xchg
inc
adc
icebp
lea
lods
push
mov
jecxz
mov
push
and
and
sbb
and
int3
mov
sbb
sbb
add
inc
push
movsb
sub
pop
cli
inc
push
pop
pop
cmp
mov
push
inc
icebp
pusha
pop
sbb
cmp
mov
js
adc
ja
in
sub
cmp
adc
and
test
add
inc
pop
sbb
push
cmp
fistl
lcall
push
cltd
pop
negl
ret
jne
jle
push
adc
sarb
roll
jle
push
pop
jmp
push
and
sti
push
dec
mov
mov
popa
aaa
pop
lret
inc
xor
fldt
jbe
mov
jns
data16
cmp
stos
je
pusha
jmp
sub
dec
je
and
es
test
xor
fdivrs
dec
into
jmp
mov
mov
mov
or
mov
inc
mov
jecxz
ficoml
pop
jne
pop
pop
std
mov
rclb
add
call
repnz
jg
jmp
fimull
push
xlat
inc
loopne
cmp
mov
sub
push
mov
add
jg
mov
loope
jp
and
gs
and
push
or
xchg
push
xor
push
push
daa
pop
pushl
js
mov
and
mov
mov
and
inc
ret
jmp
mov
rol
jmp
cmp
sbb
sbb
jae
mov
jmp
inc
sbb
leave
adc
cli
mov
sbb
jge
lahf
add
sahf
lock
jmp
sti
movsl
inc
jae
je
xchg
push
and
jmp
and
rcrb
cmp
jmp
xchg
sbb
dec
scas
adc
and
push
jns
out
push
push
bound
jne
cltd
out
cmp
pop
adc
mov
mov
rorl
add
pushw
and
mov
enter
sbb
inc
sbb
dec
sbbl
push
pusha
lea
pop
adc
sub
fistps
aaa
sub
or
orl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
lcall
push
dec
push
mov
in
lea
push
lea
push
push
push
push
add
push
lea
sbb
dec
cmp
add
dec
mov
inc
test
add
xchg
cltd
lahf
jl
push
inc
sbb
mov
aas
orb
push
mov
or
aad
divl
testl
sbb
nop
jbe
xchg
cwtl
jo
je
xchg
sbb
push
mov
pop
push
jle
sbb
movl
movsl
jo
push
pop
or
cmp
xchg
jmp
fstpl
push
jb
mov
ret
adc
or
jnp
arpl
aaa
jne
movl
add
jnp
sarl
movsb
push
cmp
jmp
icebp
int3
sbbb
and
mov
mov
lcall
movl
sub
sti
xor
ret
insb
loope
sbb
or
jae
push
es
push
push
mov
cmp
lahf
and
sbb
leave
and
in
adc
cmc
in
sbb
movsl
push
push
push
ljmp
mov
add
roll
fnstsw
jno
jge
lea
mul
push
rolb
shl
and
jg
cmp
push
push
push
cmp
mov
js
lret
scas
adc
imul
mov
lock
inc
jl
sbb
jbe
jg
inc
inc
push
push
popa
into
test
sbb
push
xchg
pop
js
fbld
push
aam
das
adc
in
bound
cmp
jne
int3
push
sub
and
std
add
fmull
adc
dec
fildl
cmp
shrl
inc
add
cmp
and
std
ret
rcll
sub
adc
scas
xor
std
add
jecxz
int3
cmp
jne
push
sub
xor
pop
fdivrs
add
mov
xor
or
je
es
testb
add
mov
sub
mov
mov
enter
mov
pusha
cmc
pop
pushl
call
push
or
bound
jl
mov
and
pop
es
push
dec
lock
inc
push
mov
mov
push
dec
lock
div
push
dec
je
cmp
push
dec
push
call
cli
cmp
je
sub
sub
mov
pavgw
pusha
cmp
in
dec
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
and
cmp
xor
push
or
rcr
sbb
lea
rep
push
in
push
or
mov
and
out
or
loop
sub
xchg
adc
clc
rclb
pop
lock
ret
insb
add
das
leave
cmpsl
lods
lock
fisubl
mov
fstp
cmpsb
imul
adcb
push
roll
inc
push
push
bound
je
or
push
push
fstps
leave
and
push
push
mov
mov
lds
sahf
sub
loopne
cmp
in
push
aaa
test
rorb
mov
shlb
inc
cmpsb
out
jl
dec
mov
add
adc
adc
sbb
mov
je
push
mov
call
pushl
and
mov
notb
pop
insl
jo
pop
jge
ret
pop
sarb
pop
setp
add
push
sub
jno
or
dec
mov
aam
jne
pushl
pop
test
sbb
push
adc
xor
pop
xchg
fadds
test
bound
mov
scas
push
aam
inc
xchg
fmuls
and
dec
test
xor
adc
std
sbb
inc
cmp
scas
cmp
je
cmp
jbe
jo
mov
push
cmp
sbb
leave
jno
mov
inc
out
testb
mov
add
mov
add
in
ljmp
mov
daa
add
es
xor
icebp
incl
jne
movb
cmpsl
enter
or
pop
repz
jae
fldz
jno
popa
xor
ds
cwtl
jno
loop
sahf
jo
movb
insl
aas
cmp
mov
cmp
hlt
mov
jbe
lea
sub
lret
mov
jmp
xor
inc
shlb
rcrb
test
and
and
jbe
test
fimull
popf
sub
and
daa
mov
mov
dec
or
ljmp
shlb
pop
push
adc
push
popa
movsl
call
mov
in
lods
nop
pop
cmp
iret
push
adc
enter
pop
xchg
loopne
cltd
add
mov
pop
cmp
adc
push
cld
hlt
jl
shlb
add
add
mov
mov
ja
sbb
je
pop
cmp
pop
xchg
js
movsl
mov
or
adc
cmp
cli
ds
or
clc
or
sbb
gs
xor
push
lret
jl
sahf
ja
jbe
andb
jbe
xor
or
mov
adc
and
inc
jge
mov
or
rcrb
test
outsb
mov
bound
add
cmp
lcall
inc
pusha
fmull
imul
push
out
push
loopne
push
push
aaa
movsl
addb
stos
inc
rcrl
pushf
mov
and
fiadds
in
dec
mov
inc
add
add
jno
insb
pop
int
out
negl
popa
in
adc
cmp
push
add
mov
jge
jmp
and
test
dec
adc
fmuls
cmpsb
loopne
jo
add
repz
nop
or
jns
pop
sbb
add
enter
mov
adc
test
in
fadds
push
adc
lea
cmpb
out
and
xor
je
push
pop
cmp
in
push
hlt
pop
push
call
enter
xor
sub
sub
push
push
ja
in
scas
mov
adc
sbb
and
and
mov
add
fisubrs
add
pop
sub
push
cli
or
push
rcll
push
test
add
pop
xor
mov
xor
push
call
jmp
fs
popa
add
xchg
stos
cltd
sub
push
jecxz
dec
or
xor
cmp
jo
xor
loopne
mov
inc
lea
clc
andl
xchg
jbe
xchg
jl
mov
jmp
cld
adc
pop
jl
mov
cltd
mov
and
lea
push
decl
int3
into
mov
orl
loope
lea
fisttps
mov
jge
mov
outsb
mov
idiv
push
mov
push
push
mov
sub
push
ret
xor
idiv
lock
cli
jecxz
cmp
inc
jp
fstpt
mov
test
rcrb
rcrb
call
pushf
loope
pusha
scas
mov
inc
mov
loop
adc
add
mov
jae
lock
push
stos
in
or
out
je
in
pop
in
pop
pusha
push
pop
insb
xor
loopne
add
sub
xor
pop
add
sbb
mov
aam
into
jp
xor
pop
lcall
pusha
js
jmp
lock
fs
or
xchg
dec
xlat
sbb
mov
cmp
in
jbe
lahf
xor
ficoms
sbb
dec
lea
xchg
mov
adc
std
out
xchg
sub
cmp
or
or
jecxz
jge
jmp
mov
hlt
fildl
scas
out
hlt
mov
test
jns
faddl
or
sub
xor
inc
sbb
mov
fdivrp
mov
sub
mov
lea
test
mov
inc
js
shll
enter
jl
jmp
sarb
xor
push
mov
mov
or
clc
fidivl
jmp
push
cmp
or
mov
pop
push
pop
mov
sbb
mov
inc
add
rclb
jle
mov
inc
inc
fmull
lods
aad
xor
rorl
lret
mov
scas
stos
xchg
inc
cld
inc
aam
clc
lea
dec
xlat
and
cmpsl
je
scas
shlb
gs
mov
push
leave
mov
jecxz
pop
and
leave
test
jmp
out
xchg
dec
mov
sub
pop
leave
arpl
sarb
sub
mov
mov
add
lods
add
push
and
cltd
or
push
push
sub
and
repnz
cltd
jl
imul
fs
loope
ret
xchg
loope
pop
iret
fimuls
xchg
mov
xor
pop
aas
mov
jne
sti
add
clc
or
test
jge
outsl
jl
jmp
punpckhdq
into
cs
sub
xor
add
test
push
mov
lea
push
mov
jne
aas
fsubrl
inc
mov
inc
mov
push
lods
xor
lahf
mov
test
add
or
dec
or
add
add
cltd
out
cmp
xor
dec
inc
sub
mov
sub
lock
roll
fsubrs
push
add
lret
push
cmpsl
sub
mov
fwait
lods
sbb
insl
xchg
pop
loop
popa
scas
sbb
in
fs
sbb
test
xchg
mov
lret
ds
subb
lods
pop
xchg
jl
fimull
pop
int3
out
pop
pop
adcl
or
and
in
ret
mov
loope
sub
test
mov
addr16
inc
cli
and
lds
xchg
push
cmp
testb
aaa
and
mov
pop
mov
and
fcomps
xchg
dec
push
ret
mov
pop
mov
fs
inc
mov
icebp
inc
sub
inc
sub
pop
int
push
mov
clc
setb
test
pop
add
add
enter
shlb
push
jl
xor
dec
adc
data16
mov
or
clc
aad
add
jle
je
push
jmp
jo
loope
pop
lcall
add
push
movsb
insl
dec
in
add
add
jo
jl
dec
mov
adc
adc
imul
je
dec
imul
sti
xchg
add
shrl
inc
ss
mov
das
push
mov
jp
pop
mov
push
adc
sarb
push
cmp
jl
inc
aaa
sbb
or
jp
fdivrl
xor
or
mov
stc
jmp
rorb
icebp
and
sbb
cmp
ljmp
sti
pop
shrl
test
jne
cwtl
mov
enter
add
aam
jo
clc
add
aam
xchg
mov
das
loopne
repnz
das
sub
pusha
imul
testl
push
and
scas
mov
mov
mov
ret
scas
arpl
push
push
sub
pop
pop
jmp
mov
push
je
pop
mov
ja
test
popa
lock
add
pushf
loopne
inc
sub
or
add
or
lret
into
xchg
std
jo
xchg
adc
add
jmp
inc
inc
les
xchg
xor
aam
inc
add
cltd
lods
push
inc
ss
pop
in
les
inc
addr16
dec
enter
aam
imul
enter
push
add
shll
leave
jae
add
in
movsb
push
fadds
ss
jnp
dec
test
sub
push
jns
popa
jo
insb
fmull
dec
inc
add
fsubl
lret
sbb
xor
pushl
lret
push
sti
pop
sub
and
les
cwtl
test
pushf
mov
out
dec
rcrl
int3
sbb
scas
test
add
dec
cmpsb
call
xchg
jle
lds
pop
addb
add
adc
lea
mov
push
ja
dec
and
push
dec
push
sub
pusha
sbbb
xor
pushl
scas
push
push
test
pop
push
or
and
pop
sub
add
cmp
and
dec
movsl
pop
or
pop
leave
nop
or
push
mov
add
out
jb
mov
iret
rcpps
xor
and
dec
sbb
add
lret
mov
mov
pop
dec
fisubrl
movq
int3
jmp
and
mov
enter
mov
lret
cmpsb
dec
xchg
je
or
fistpl
cmpsb
pusha
pop
sbb
mov
push
pushl
adc
dec
pop
lea
les
stos
xor
dec
cmp
mov
sbb
loop
imul
test
je
inc
sbb
mov
test
je
cmp
push
dec
mov
jmp
dec
mov
pop
ljmp
js
push
mov
outsb
pushf
jge
add
scas
add
dec
inc
pusha
inc
xor
shlb
xchg
sub
mov
jle
fmulp
js
cmp
jge
mov
mov
clc
out
insl
jl
movb
pusha
jle
jmp
add
in
pushl
inc
mov
roll
mov
dec
dec
fadds
std
push
and
xchg
rcr
imul
inc
sub
jecxz
out
aad
subb
xchg
mov
or
in
sbb
fdivl
adc
pop
enter
jae
sbb
cmp
jg
repnz
in
mov
add
and
cmp
cmovle
jbe
xchg
data16
loope
jl
lock
xorb
push
push
in
sbb
lods
stos
push
or
sub
xor
data16
add
jno
dec
out
xlat
and
sbb
sbb
lods
add
adc
sub
jo
imul
adc
ret
add
xlat
data16
repz
pop
shlb
xchg
mov
imul
sarb
add
ss
rorb
xchg
pop
int
pop
mov
mov
xor
xlat
sub
sbb
or
mov
dec
dec
cmp
pop
mov
push
das
mov
mov
mov
leave
add
cltd
fcmovu
push
iret
ss
in
xchg
outsl
mov
out
push
mov
lds
or
cmp
sti
add
adc
sbb
mov
nop
das
mov
iret
sub
aaa
dec
in
pop
or
adc
push
sbb
cmpl
jl
inc
orb
adc
add
mulb
pop
xor
stos
imul
repnz
call
cwtl
sbb
lock
and
push
xchg
adc
or
icebp
xchg
or
mov
or
stos
and
in
sub
movsb
inc
add
jle
outsl
mov
subb
add
or
loopne
xchg
jle
jge
inc
pop
sbb
or
sub
add
mov
jmp
push
pop
and
cmp
xor
xor
cmp
je
cld
data16
mov
in
jp
push
adc
xor
jp
lods
ds
cmp
inc
or
add
das
and
cmp
push
pop
adc
inc
pop
addr16
inc
push
or
jno
cmpsl
data16
pop
test
push
sbb
dec
push
mov
sbb
sbb
jl
adc
movb
mov
and
jae,pt
push
clc
mov
movsb
sbb
in
add
int3
pop
adc
dec
push
push
pop
or
test
cwtl
and
add
rolb
mov
and
mov
loop
mov
test
mull
in
add
clc
inc
pop
mov
jl
leave
xor
add
rolb
dec
cmp
cld
mov
xor
add
cld
add
push
inc
pop
inc
and
mov
push
mov
push
mov
jp
cmp
add
xor
ret
add
pop
std
lea
andl
mov
sbb
add
or
repz
rclb
pop
lock
out
addr16
movl
dec
xlat
js
cmp
sub
xchg
push
idivl
sub
data16
hlt
or
mov
mov
xchg
subl
push
cmp
push
and
rolb
repnz
sbb
adc
js
mov
mov
and
std
inc
std
sbb
std
in
out
popl
sbb
fdivrs
xchg
adc
inc
xor
inc
inc
mov
mov
mov
xor
shll
jae
push
mov
in
jbe
loopne
cmpsl
push
sbb
stos
js
lock
xlat
or
xor
test
sbb
lock
rcrl
jb
test
aam
fs
sbb
lock
inc
insb
stos
clc
and
outsl
loope
xchg
adc
dec
jnp
les
mov
enter
fiadds
sub
jno
jne
cmp
in
shrb
and
call
xor
adc
mov
shlb
sbb
loope
rorb
cmc
orb
or
adc
xchg
arpl
mov
add
add
jg
push
leave
ret
xchg
mov
push
sarl
dec
and
stos
sub
jnp
lar
mov
mov
gs
push
inc
adc
loopne
cmp
in
scas
scas
mov
pusha
in
add
adc
xor
adc
sbb
ret
adc
popa
inc
mov
sbb
cli
adc
inc
test
pusha
add
push
and
adc
sbb
inc
sbb
sbb
inc
or
data16
dec
pop
jae
sbb
sub
add
rclb
stos
mov
lods
rclb
mov
lret
or
sti
std
mov
movb
pop
loopne
sub
inc
js
jnp
js
packuswb
pop
cmp
ss
jl
inc
lock
loopne
test
sub
setne
xchg
lea
add
jo
pusha
xchg
aaa
repz
lea
in
push
lock
cmp
push
mov
xor
roll
adc
mov
fucomip
or
xchg
sub
add
dec
nop
add
mov
pop
aad
mov
movsb
movsb
imul
inc
xchg
sub
movsl
or
lds
mov
adc
add
loopne
and
jge
cmp
cmpl
leave
loopne
sarb
pusha
test
mov
sahf
or
daa
in
dec
mov
sub
mov
and
pop
shlb
cli
fisttpl
xchg
neg
mov
sbb
mov
xor
jg
adc
lret
mov
cmp
push
setl
rclb
scas
sub
cmp
in
push
push
jno
testb
mov
imul
stos
aaa
in
xchg
mov
push
sbb
test
dec
sarb
roll
jmp
xor
push
mov
mov
mov
jl
gs
pop
fnsave
jne
and
or
adc
subl
cli
mov
fcoml
je
mov
add
or
xorl
out
pop
iret
test
xor
adc
aam
mov
adc
or
dec
adc
push
dec
add
test
pop
xchg
sbb
inc
jb
push
mov
push
scas
int
popf
int
js
pop
add
mov
outsb
movlps
pop
loopne
adc
mov
push
mov
xor
inc
mov
aaa
xchg
fstpt
xor
add
jge
mov
add
jecxz
pushf
movzwl
pop
pop
jmp
pop
xchg
pop
pop
lea
inc
mov
mov
xor
adc
arpl
cmp
adc
rclb
mov
test
adc
xor
jbe
shll
dec
adc
inc
or
fnstsw
fnsave
test
mov
cli
popa
lret
call
int
jle
add
test
scas
push
arpl
pop
push
fsubrs
jne
push
inc
js
lock
sarb
lock
xor
subb
lock
cmp
aas
mov
cmp
fdivrs
fucomip
add
push
adcb
cmp
push
outsl
das
adc
xchg
sub
fcmovnbe
mov
movsl
jb
and
notb
jo
mov
jae
adc
sahf
ret
pushfw
mov
mov
out
mov
lea
push
mov
and
lock
in
cmp
add
into
cmc
aaa
pop
pop
mov
mov
je
add
mov
sbb
out
lea
mov
or
sar
fdivr
insl
sub
addl
rorl
ret
mov
sbb
mov
sub
test
mov
xchg
sub
jnp
dec
jb
mov
add
and
or
icebp
addr16
mov
add
inc
out
data16
jb
ss
push
aam
mov
lret
adc
jne
jmp
ss
in
cwtl
sub
hlt
aam
adc
add
jp
jp
mov
aas
in
imul
sub
enter
push
outsl
lock
insb
mov
and
add
or
scas
ret
add
rolb
pop
fs
adc
jns
or
push
mov
xchg
cmpsl
imul
and
push
gs
fisubrs
and
sbb
or
lods
fdivl
add
sbb
and
outsl
inc
jl
aaa
les
imul
pushf
mov
inc
out
jne
adc
sahf
pop
inc
gs
or
pusha
popa
sbb
enter
cmp
xchg
xchg
mov
test
jae
mov
jge
jbe
pop
ljmp
shlb
inc
test
push
jl
rorb
cmp
fcoml
push
mov
leave
push
mov
test
pop
loop
in
jbe
push
icebp
and
and
test
imulb
shll
int3
shlb
push
add
sbb
push
dec
in
xchg
xchg
inc
rolb
mov
or
xorl
je
pushf
xchg
and
into
popa
and
add
and
pop
dec
popa
pop
loope
pop
je
sub
adc
and
es
or
shll
adc
rcr
jns
pop
popa
divl
daa
or
mov
dec
push
lods
out
icebp
loopne
jl
je
push
in
mov
pusha
lcall
stos
fs
push
mov
and
je
pop
aam
jbe
nop
test
xor
es
mov
fistpl
pusha
loopne
dec
xlat
jnp
mov
or
sbb
push
dec
xchg
sbb
jge
xor
or
rcrb
push
pop
inc
push
jno
decb
mov
cmpsl
mov
jne
push
pop
cmp
ja
add
xor
jmp
andb
ss
and
adc
js
cmpsl
pushf
mov
movsl
stos
pusha
xchg
out
rorb
jns
jo
idivb
push
lea
cmp
push
and
aam
jge
pop
adc
add
loopne
pusha
das
cmp
mov
inc
das
xchg
or
mov
ss
pop
inc
jp
nop
sub
sahf
add
sub
shl
or
xchg
movsl
sbb
or
xorb
mov
jge
mov
xorb
ja
sub
push
sub
adc
inc
cs
aam
jo
das
call
test
xor
lcall
xchg
xor
fs
jno
push
add
pop
into
scas
repnz
movsl
fisubrl
int3
xor
cwtl
scas
outsb
push
rorb
cmp
xchg
push
and
xor
sub
adc
cmp
adc
and
int3
sub
jg
aam
fadds
sub
mov
mov
mov
nop
rorb
xchg
mov
sub
fwait
xchg
sbb
loope
loope
addb
scas
inc
mov
sub
push
testl
cmpsl
xchg
shrb
test
pop
cmp
lea
xorb
enter
sub
orl
leave
mov
daa
adc
push
mov
mov
push
jecxz
in
aam
popa
les
fcompl
cmp
sbb
pusha
dec
add
mov
incl
push
fnstenv
lea
adc
xchg
mov
add
inc
cwtl
or
pusha
mov
push
jle
sbb
leave
mov
sbb
pop
mov
loop
ss
movsb
xchg
pop
scas
push
sub
add
add
fsubr
test
cmp
ja
loopne
cmp
dec
xorl
push
or
and
inc
xor
mov
cli
inc
clc
cltd
pop
add
addr16
jmp
cmpl
mov
jne
mov
sbbl
and
adc
int
ror
sbb
fildll
movsl
mov
divl
mov
test
sub
nop
mov
sub
test
or
bnd
mov
push
sub
push
fldenv
sub
add
sub
push
inc
loope
mov
adc
sub
pusha
cmpb
mov
xor
xor
pop
dec
push
xorb
shr
sbb
add
push
sub
gs
and
pop
cmp
aad
push
add
cmp
mov
pop
mov
xchg
sbb
int3
rolb
pop
orl
lahf
das
loopne
push
pop
andl
mov
mov
sub
push
arpl
insl
or
stos
out
jno
in
lods
repz
mov
inc
outsl
out
fldenv
repz
adc
clc
fimull
js
rorl
je
inc
sahf
or
dec
push
push
push
pop
je
pop
jb
ss
jae
rorb
dec
sub
outsb
incl
fisttpl
lea
push
sahf
pushl
mov
sbb
inc
push
ficomps
rcr
es
rcrl
mov
call
pop
sub
roll
push
mov
mov
pop
add
sub
jl
push
pop
inc
add
cmp
or
movzwl
push
push
aam
scas
mov
push
inc
inc
or
jns
mov
enter
orb
push
push
fbstp
mov
push
pop
jmp
lods
les
or
enter
je
or
mov
ret
push
in
pop
mov
popa
test
scas
std
mov
lea
push
jae
jbe
pop
cmp
pop
push
jmp
mov
popf
lods
addr16
int3
cmpb
push
sbb
lods
test
adc
sub
std
mov
test
pop
out
and
mov
in
test
aaa
ret
adc
adc
and
ret
fcomp
push
mov
je
cmpb
addr16
stos
push
aaa
cmp
jmp
stos
push
cmpsl
xorps
loopne
pop
xchg
loope
and
aam
je
xchg
jp
cmp
push
pop
mov
js
pop
cld
push
lea
push
inc
mov
xor
ja
and
push
bound
sub
xchg
mov
add
int3
dec
fimull
push
stos
addr16
push
xchg
outsl
fildll
jl
insb
mov
int3
xor
sarl
pop
sub
cmp
lea
mov
cmp
jne
es
das
test
sbb
or
sahf
lods
stos
sti
xchg
mov
add
push
ss
pop
movsb
dec
jo
dec
sub
dec
cmp
je
sub
rcrb
pushw
push
loope
and
in
sahf
sahf
push
pushf
cltd
ret
dec
f2xm1
dec
loope
sahf
adc
push
sar
dec
inc
add
nop
jmp
sub
adc
cmpsb
dec
jmp
push
mov
lahf
in
xor
mov
sbb
fldcw
fisttps
js
dec
or
in
push
mov
xorl
dec
adc
mov
add
sub
dec
xchg
cmp
add
mov
ja
rorl
icebp
jp
cmp
and
in
scas
pop
out
outsl
lock
adc
xchg
cmp
adc
mov
shrl
or
mov
inc
fadds
cmp
adc
or
mov
jne
outsl
loope
notl
ja
inc
das
fwait
incl
scas
pop
add
and
jle
jbe
push
mov
outsb
clc
dec
add
sbb
cmp
je
sti
mov
xchg
jnp
mov
roll
push
push
jg
inc
or
pop
pushl
xrelease
mov
je
pop
cmpsb
xchg
cmp
add
cmpsb
push
push
xchg
adc
xchg
cmpsl
ret
outsl
jmp
sub
sub
dec
and
js
es
jb
dec
or
push
rcl
and
add
ds
cmpl
jb
dec
add
lahf
push
add
add
movd
mov
inc
add
test
popa
adc
imul
adc
cli
add
arpl
in
dec
mov
sahf
icebp
mov
push
leave
push
cmp
je
xor
cs
xor
seto
jle
ss
mov
push
xor
add
mov
cmpsl
mov
push
xor
lock
aas
jbe
dec
insl
iret
shl
push
sbb
or
inc
or
inc
sub
mov
in
inc
add
pop
add
sub
inc
or
jbe
inc
sbb
adc
add
xchg
jbe
or
jl
out
and
data16
cmpsl
icebp
xor
daa
int3
add
fs
lods
add
or
iret
mov
stos
add
sbb
mov
into
xor
or
jl
aam
adc
fistpll
push
imul
adc
add
nop
clc
or
in
mov
insl
mov
mov
test
cmp
je
sbbb
add
cmp
je
mov
loop
add
add
cmp
fisubrs
fsubs
rolb
xchg
imulb
test
xchg
adcb
add
xchg
test
mov
adc
call
push
push
jle
jmp
and
add
mov
loope
xchg
push
inc
cmp
jae
dec
cmp
inc
add
inc
pop
mov
jmp
mov
dec
sbb
add
jne
xor
jl
push
or
mov
push
aad
sub
push
push
inc
jmp
scas
inc
mov
movsb
inc
mov
test
scas
sbb
sub
lcall
int3
mov
push
pusha
push
cmc
pop
or
pop
shlb
or
dec
jae
mov
imul
pop
or
mov
push
mov
mov
fsub
fmuls
int3
xlat
and
mov
sbb
cld
movsl
or
pop
cmpl
lret
fdivrs
and
ja
add
mov
push
aam
or
mov
inc
shl
jmp
push
push
xchg
inc
jle
test
dec
jns
mov
pop
sub
add
ret
aad
inc
jae
dec
or
inc
jge
push
notb
jae
dec
add
pop
and
ja
psrlq
inc
adc
inc
or
pusha
or
push
lcall
dec
or
mov
xchg
inc
sbb
jg
mov
push
push
push
inc
sub
adc
push
sbb
cmp
or
push
cmc
pop
js
mov
repnz
imul
mov
jmp
fs
dec
pop
push
jb
es
pusha
sub
addb
xchg
ret
mov
movl
mov
xchg
lret
or
loop
add
decb
pop
jl
inc
ret
je
mov
mov
pusha
mov
cmp
sti
dec
lahf
shlb
xchg
rcll
mov
and
add
jge
data16
outsb
push
add
inc
push
jecxz
fisubl
test
orb
mul
and
push
clc
fsubrl
test
sbb
pop
notl
das
movsl
clc
push
test
pop
push
jbe
test
stc
mov
add
and
popl
mov
aaa
orl
fists
xchg
cmpsl
testb
jbe
mov
shr
mov
neg
push
mov
mov
in
jp
adc
js
or
out
jne
test
clc
mov
push
je
inc
jmp
scas
arpl
push
in
or
int
xorl
add
push
cwtl
insb
jb
push
dec
inc
add
adc
or
iret
mov
iret
cmp
fsubl
or
call
cmp
mov
xchg
inc
test
std
daa
loope
lods
xor
test
cs
xchg
cwtl
jge
jae
imul
jno
jl
orb
cltd
mull
mov
pop
cmp
jnp
mov
xorl
sub
mov
jne
ret
and
mov
inc
or
push
mov
mov
test
inc
xchg
add
mov
lods
add
add
mov
inc
add
mov
and
out
in
push
or
and
jle
insl
call
notb
notb
push
shlb
rcrl
sub
sbb
test
mov
imul
push
movsl
sbb
je
mov
mov
dec
js
jl
andl
inc
add
cmp
adc
lcall
adc
push
add
mov
cmp
andl
orl
movl
add
pop
jne
pop
mov
push
adc
stos
pop
xchg
pop
sub
fisubl
jo
sbb
pop
popf
outsb
pop
fs
cmp
sub
dec
sbb
ret
test
inc
add
jg
subl
or
pop
int3
lret
adc
mov
test
mov
sbb
cs
outsb
inc
js
or
and
xchg
jg
aas
sbbl
push
push
push
xchg
dec
add
pop
or
push
jmp
ret
and
xchg
je
mov
or
jp
test
sbb
sbb
mov
mov
inc
and
mov
es
test
stos
repnz
popf
dec
and
xchg
add
mov
and
xorl
inc
adc
lock
ds
xor
sbb
mov
sub
add
cwtl
jge
jbe
cmc
adc
lods
add
push
add
ja
or
add
push
adc
sbb
sub
sbb
sub
sbb
dec
dec
and
adc
pop
jb
or
jae
mov
sub
dec
mov
adc
cmp
jb
push
xchg
sub
ret
pop
add
ficomps
repz
jg
or
inc
and
iret
mov
xlat
ljmp
movsl
adcl
xchg
arpl
mov
cmc
mov
xor
and
adc
push
xchg
or
push
lea
pop
insb
xor
les
ljmp
scas
mov
shrl
adc
bswap
lea
loopne,pn
fwait
cwtl
ljmp
hlt
enter
clc
dec
dec
imul
mov
adc
xor
js
adc
fwait
sub
into
dec
add
cmp
aaa
cmp
inc
sbb
pushl
sbb
xor
xchg
mov
jecxz
xchg
mov
sub
sti
lea
and
sbb
cmpsl
ss
xor
pop
shlb
dec
push
das
sbb
add
or
enter
pminsw
add
xchg
sub
lea
push
andb
iret
cltd
sbb
insl
ss
inc
xchg
jecxz
adc
cwtl
dec
mov
loop
jecxz
pop
mov
cmpl
lock
hlt
dec
and
inc
or
mov
xchg
xchg
test
cmp
adc
inc
push
add
sbb
cmp
push
pop
aaa
leave
mov
or
addl
add
and
pop
pop
push
mov
push
sub
cltd
jnp
pushf
sbb
jb
mov
int
sbb
xchg
dec
stc
inc
lcall
or
xlat
ret
sti
faddp
shl
xor
fildl
inc
sub
push
ret
loope
or
inc
inc
pop
jbe
inc
jno
sub
data16
add
and
in
and
jb
sbb
and
push
mov
daa
std
lods
mov
and
inc
add
and
pusha
sbb
adc
push
xor
push
test
ljmp
lret
or
mov
les
loope
and
lret
xchg
fdivrp
jbe
mov
dec
dec
or
in
adc
adc
push
push
and
daa
pop
adc
adc
lods
daa
inc
leave
mov
add
push
mov
daa
lcall
enter
push
and
inc
fisubrl
repz
add
sub
sub
in
sub
push
jmp
popf
or
or
loopne
push
mov
js
icebp
js
xlat
inc
mov
or
pop
outsb
in
popa
push
test
pop
cmp
daa
lret
neg
mov
pop
sub
sub
inc
mov
or
in
movb
cld
cmpsl
orb
hlt
inc
hlt
stos
add
lcall
mov
fisttpll
adc
insb
testl
ret
dec
xor
add
test
xor
ds
cltd
or
scas
sbb
sub
enter
lea
xlat
push
decb
push
sbb
pusha
rcrl
jmp
loopne
movsl
outsb
adc
insb
pop
and
cmpb
lea
xchg
add
mov
sub
inc
pop
loope
or
inc
push
aas
idivb
inc
sub
cmpsl
push
sub
lock
xor
cld
nop
cmp
mov
xor
in
sub
bound
pop
dec
sahf
movlps
shll
sbb
lret
or
mov
xchg
mov
int3
push
pushf
in
fisubl
adc
push
test
xorb
pop
mov
lock
adc
scas
in
sbb
push
xchg
int3
cmp
mov
dec
push
pop
mov
fsubrs
push
lea
jl
xchg
lea
in
das
cmp
aad
cmp
daa
loopne
adc
xchg
pop
push
adc
loope
aaa
insb
popf
hlt
movsb
pop
lds
aaa
in
in
jnp
test
jo
adc
pop
mov
dec
mov
ss
add
pop
nop
push
mov
ret
inc
add
data16
or
lds
dec
movsb
mov
inc
pushf
sbb
mov
je
divb
nop
pop
adc
shlb
sub
xchg
cmpsb
sti
int
cmp
xchg
push
sbbl
dec
pop
push
fnstsw
xchg
xlat
mov
pop
loope
or
mov
add
lods
mov
jns
pop
pop
js
rorl
adc
stos
and
push
xor
hlt
or
mov
dec
in
cltd
roll
insl
jecxz
and
inc
inc
pop
mov
popa
pop
fildl
push
adc
pusha
mov
les
dec
xor
or
xchg
sarb
push
loopne
arpl
aam
and
xor
sbbb
movsb
xor
in
mov
js
add
and
ret
cmp
js
or
cmpb
inc
pop
pop
push
pop
or
mov
nop
ss
cmpsb
xchg
jnp
orl
push
fisubl
or
mov
inc
je
sub
ficoms
pusha
roll
inc
pop
cmp
stos
test
jne
mov
lahf
dec
cmpsb
cmp
roll
xchg
adc
or
out
sarb
push
and
mov
or
test
xchg
jle
jne
push
mov
add
stos
cs
add
cmpsb
dec
in
mov
shll
inc
lds
mov
mov
or
push
adc
movups
mov
push
aas
xor
test
inc
cmp
and
pushf
mov
rorl
outsl
jle
cmp
jae
arpl
sbbb
adc
in
aam
out
ds
nop
lods
jne
int3
and
pop
cmp
or
test
pop
movsl
inc
movsb
jmp
test
or
fiadds
push
aas
cmp
fsubrp
add
test
hlt
je
and
dec
lods
ret
mov
fcom
outsl
cmp
dec
insb
push
push
push
and
repnz
mov
js
aas
xor
rorl
cmp
or
mov
fcmovnb
iret
mov
sub
in
movsl
xchg
adc
adc
insl
adc
and
scas
jge
adcb
loopne
imul
xor
sbb
sub
inc
adc
test
jg
push
jmp
nop
inc
outsb
pop
and
add
in
or
adc
push
mov
stc
je
adc
in
push
pop
adc
lods
or
push
xor
add
sub
xchg
mov
cmp
mov
or
scas
jmp
and
sub
sbb
dec
cmp
dec
pop
adcl
push
pop
pusha
lock
les
push
add
int3
mov
xor
xchg
sbb
jo
loopne
jmp
aam
dec
pusha
pop
adc
xor
jg
and
pop
mov
test
sbb
xlat
popf
jle,pt
shlb
punpckldq
rclb
dec
add
add
mov
call
push
add
xchg
push
push
sub
fmuls
mov
mov
cmp
inc
add
and
iret
adc
nopl
inc
xor
push
lea
sbb
out
or
fidivrs
int3
pcmpgtb
je
and
mov
cli
mov
push
test
js
mov
and
pop
adc
cmp
push
add
and
das
jecxz
dec
cmp
cmpb
xchg
popa
les
mov
mov
or
lods
xorb
roll
cmc
mov
enter
les
inc
and
paddusb
pushf
or
pop
jbe
aaa
fs
mov
cmp
lods
call
pop
sub
daa
jmp
cs
inc
add
push
mov
jno
stc
cmpsl
or
jae
nop
xor
add
insl
mov
fdivrl
dec
jl
pop
push
out
xchg
sbb
popa
call
xor
roll
mov
xchg
mov
shlb
aas
paddsb
clc
and
jo
fiaddl
ficomps
pop
cs
fstl
cmp
dec
xlat
scas
sub
aad
cmp
popf
jb
push
mov
pop
push
pop
mov
adc
adc
test
cmpl
inc
or
je
aam
ss
adc
cwtl
mov
jecxz
outsb
insb
fwait
scas
mov
daa
scas
loopne
scas
jge
and
add
adc
aas
scas
xor
mov
outsl
mov
add
ss
cmp
mov
inc
fdivrp
xchg
lds
cmc
sbb
push
mov
popf
shl
mov
sub
xor
dec
push
je
dec
jne
or
cmpsb
sti
in
in
dec
imul
adc
push
and
and
lahf
lock
pusha
mov
xchg
cmpsl
add
adc
hlt
cmp
sub
dec
lods
push
add
cmp
je
mov
je
mov
sbb
ret
rorb
sub
mov
orb
imul
outsl
jg
lea
push
lea
cli
jb
lea
or
adc
dec
outsb
les
push
sbb
or
das
add
popf
lea
and
test
bound
test
xor
and
mov
lods
pop
outsb
or
ret
sbb
daa
sbb
push
push
or
repz
jb
orl
sti
xorl
mov
lock
imul
cmp
testb
adc
dec
mov
xor
int3
mov
and
je
lret
dec
push
testl
or
xor
sbb
inc
inc
mov
sti
inc
xor
fmuls
or
or
call
lret
jmp
sbb
les
or
push
pop
cmp
add
jo
adc
jne
mov
push
cmp
add
cmp
jge
or
test
push
cmp
jmp
cmp
push
push
and
cmp
and
fsubrs
ret
subb
mov
mov
aaa
movsb
aas
sub
dec
les
xlat
jg
mov
xor
std
mov
mov
je
xlat
sbb
mov
adc
push
or
sbb
jg
inc
jne
or
enter
pusha
pop
add
movl
add
push
push
and
sub
push
sbb
xorps
insb
nop
inc
dec
adc
dec
imul
fs
add
push
mov
pop
test
inc
inc
sub
fdivs
lcall
or
xor
xchg
push
mov
ja
jge
mov
push
mov
or
inc
cmp
dec
jbe
test
inc
pop
out
xor
mov
jmp
pop
cs
ret
sbb
add
insb
inc
and
mov
jp
and
adc
push
jb
iret
test
lods
cld
mov
xorl
insb
mov
mov
in
or
mov
lea
or
mov
in
dec
or
sbb
xchg
adcl
sub
fs
mov
mov
xor
mov
lods
mov
jae
inc
out
in
in
add
cmp
and
xchg
push
ja
mov
sub
popf
mov
call
cmp
cmpb
je
push
pushf
mov
sub
dec
outsl
call
jnp
movsl
dec
sbb
stos
push
xchg
cmpsb
mov
sub
lods
or
mov
dec
push
fdivrl
mov
or
ret
call
fs
lcall
hlt
xchg
ret
lds
cmpsl
mov
mov
in
mov
pop
mov
pop
xor
lret
daa
movsl
jnp
mov
jae
mov
cmp
lds
fadd
sbb
ror
lock
push
add
push
add
ror
cmc
xorl
dec
push
jbe
mov
nop
faddl
jmp
jp
adc
rolb
inc
cmp
xchg
int3
popf
pushf
jmp
or
inc
enter
cmpsb
mov
mov
call
lods
aaa
pushf
dec
mov
pop
sbb
addr16
rcll
sbb
mov
adc
je
adc
add
sbb
push
je
incl
cmp
jo
fdivrl
mov
push
jle
dec
outsb
xchg
shlb
aam
dec
and
dec
pop
leave
cmpb
or
inc
xchg
sbb
pop
push
test
in
test
sbb
or
mov
add
mov
adc
add
aas
jns
pop
cmp
insl
sbb
test
shl
aaa
sub
xor
lods
push
mov
popf
or
fdivl
inc
aad
sub
andl
out
sarb
cmp
lods
xor
addl
mov
test
push
jb
sbb
dec
pop
insb
xor
sbb
pusha
xchg
push
xor
loope
popf
add
jle
lock
dec
cwtl
test
jo
push
jnp
outsb
or
inc
sub
jge
repz
jns
hlt
adc
aas
cs
insb
test
lods
xchg
dec
aas
cli
insb
or
movsb
push
cmp
add
add
adc
add
test
sbb
jb
scas
pop
mov
out
cmp
shld
fisttpll
cmp
movsb
sub
mov
stc
mov
in
cmp
cmp
fidivrl
adc
push
dec
dec
xchg
and
sbb
mov
dec
dec
cmp
and
jl
in
sbb
sub
leave
xchg
xor
jl
les
push
add
xchg
push
mov
sub
mulb
ss
movsl
push
sbb
rorb
xchg
loope
xor
loopne
dec
xor
pop
xchg
adc
xchg
xlat
or
addl
push
and
add
add
pop
cmp
fistps
xor
and
xor
dec
add
or
movsl
dec
and
or
loope
adc
enter
add
and
enter
testl
add
sti
xchg
pop
add
cld
xor
test
pusha
das
dec
mov
enter
scas
clc
inc
push
sub
xor
push
dec
and
jmp
push
loope
dec
sbb
mov
imul
sbb
mov
pop
push
sub
push
cltd
mov
and
xchg
and
stos
sub
xchg
add
xchg
ss
jns
add
enter
push
int3
js
insl
or
cmp
scas
jnp
popf
daa
xor
or
mov
sub
push
popa
mov
cld
pop
imul
push
cmp
or
and
mov
cmp
and
mov
jmp
lock
jo
mov
inc
sub
xor
outsb
xchg
or
mov
add
nop
je
xor
cmp
xor
xor
xor
imul
dec
sub
pop
inc
push
movsb
mov
adc
sbb
sub
jno
or
pushf
inc
aaa
ss
adc
or
test
pop
dec
cmp
je
jae
mov
cmp
les
mov
jno
in
cli
jp
push
stos
adc
out
je
jno
movb
mov
cmp
movsb
pusha
sbb
outsl
pop
sbb
inc
jne
lea
orb
jae
rcrb
push
mov
xor
xor
inc
inc
mull
mov
push
adc
jo
cltd
mov
and
mov
aad
ja
push
js
adc
imul
push
repz
push
push
mov
iret
xor
add
push
sub
scas
push
mov
mov
push
clc
out
mov
ljmp
push
cmp
push
adc
enter
in
add
add
xor
sbb
add
fs
pop
pop
mov
mov
aad
jae
push
jno
fsubs
or
sti
jmp
ret
cmp
decl
xchg
lret
and
pop
lea
in
iret
in
mov
sub
mov
push
mov
hlt
jne
mov
lahf
sbb
daa
pop
fistps
pop
or
mov
pop
mov
push
pop
mov
sub
pop
add
mov
dec
lret
mov
dec
int3
test
lock
or
or
and
dec
mov
inc
xchg
loopne
push
jg
jp
lods
lea
sub
icebp
loopne
fimull
jnp
and
xchg
les
dec
loop
or
pop
out
pop
dec
push
add
cmp
sbb
iret
mov
sub
inc
bound
jne
ds
fdivs
mov
shl
sub
imul
mov
rcl
mov
xchg
shll
cmp
dec
pusha
imul
minps
xor
jo
xchg
adc
mov
pop
lahf
mov
sarl
pop
mov
pop
jge
push
hlt
xchg
jle
add
sbb
fstl
push
out
shrl
push
cmpsb
or
cmpsl
fistpl
push
rcrl
in
roll
cmp
mov
dec
push
mov
mov
mov
rclb
push
test
jb
in
xor
xchg
cmp
xor
cmp
orl
push
mov
adc
sub
push
popf
adc
push
and
arpl
sti
das
push
bound
aad
xor
lock
jg
sub
shrl
push
test
jae
xchg
mov
dec
test
popa
jne
int
leave
cmpb
leave
and
mov
mov
mov
dec
push
movsb
sbb
popa
sbb
push
sbb
mov
iret
mov
xchg
push
xor
ret
in
xor
dec
and
and
in
dec
lds
je
add
push
xchg
and
cmp
and
sub
movsb
jnp
daa
mov
movsb
fwait
dec
and
pop
xorb
dec
and
enter
xchg
push
in
sbb
out
sub
in
dec
and
out
jb
sbb
pop
in
sub
leave
adc
xchg
sbb
and
mov
andl
dec
loopne
pop
add
andb
rorl
pop
imul
xchg
test
loope
mov
add
test
stos
lock
or
sbb
iret
push
jae
roll
xorl
push
loop
leave
xchg
and
sub
int3
add
and
push
pop
add
dec
insl
mov
enter
xor
xor
insl
mov
fadds
shll
es
add
call
adc
xrelease
in
cmp
rolb
cmc
xchg
orl
add
inc
test
pop
adc
fs
or
add
and
aad
jno
nop
xchg
shlb
loope
adc
fnstenv
and
cmp
inc
je
jo
ds
repnz
sar
jl
xchg
push
repz
fs
ret
adc
daa
xor
fwait
adc
or
shrb
cmpsl
sbb
cmp
pusha
jle
test
js
neg
cmp
jge
push
fsts
xor
loopne
sbb
xchg
or
movsb
jl
fiaddl
add
lods
ror
loopne
xorb
push
das
adc
dec
popa
push
or
adc
rcrb
ds
xor
dec
adc
jle
inc
cltd
mov
ss
arpl
dec
push
add
adc
or
mov
jle
into
jae
inc
add
outsb
mov
or
shlb
loopne
mov
cmpsl
jnp
push
andb
push
lock
inc
orb
cltd
ljmp
ret
shlb
jle
xlat
pop
sbb
loop
inc
lret
inc
fdivrl
mov
lock
cmp
ret
sub
jecxz
rclb
loopne
push
mov
cmpsb
dec
adc
lods
lods
cmp
or
push
arpl
adc
cmpsl
mov
into
and
dec
lock
hlt
ret
mov
mov
mov
js
and
mov
add
lds
mov
sub
ret
add
xor
xor
lods
pop
aaa
dec
and
push
popf
add
les
sbb
cwtl
mov
pop
cltd
data16
testl
fisubl
mov
cmp
xor
sbb
daa
or
ja
out
orb
sbb
dec
mov
or
insb
dec
lock
dec
pmuludq
sub
sub
les
rorl
xor
shll
pop
fcoms
or
mov
or
imull
xorl
daa
cmp
adc
mov
jo
add
jo
mov
lret
lcall
sbb
and
dec
iret
inc
xchg
popf
mov
js
dec
je
fadds
loopne
cmovge
stc
adc
or
push
jns
adc
enter
pop
rol
movsb
imul
adc
add
adcb
adc
jbe
popa
ds
push
ret
jo
ljmp
pop
mov
mov
pop
mov
mov
cmp
mov
add
or
mov
dec
lea
inc
xchg
sbb
xor
xchg
sbb
mov
ret
adc
inc
pop
dec
xor
fcomps
sbb
push
pop
or
jb
and
xor
adc
push
cmp
mov
fnstsw
dec
lahf
sbb
inc
xchg
lods
adc
adc
xlat
lret
xor
mov
jns
adc
sub
ret
sti
add
cmp
mov
inc
gs
enterw
push
js
sbb
sbb
cmp
clc
cmp
scas
pop
push
xchg
inc
testb
outsb
mov
pop
dec
das
push
sub
cmp
pop
mov
mov
in
push
cs
xor
in
dec
xor
pop
lea
pop
pop
push
push
xor
sbb
push
cmp
sbb
jno
test
or
inc
stos
incl
movsb
inc
inc
or
xor
mov
adc
cmp
adc
mov
sbb
xchg
aaa
mov
int3
push
adcb
adc
sti
nop
dec
pop
daa
cmpsl
or
sub
sets
mov
movsl
mov
and
dec
xor
and
jmp
dec
repz
inc
dec
dec
fwait
cwtl
popa
add
xor
leave
arpl
ja
cmp
loopne
and
push
jbe
cmp
popf
fisttps
and
repnz
mov
mov
ds
js
lea
cmp
cmc
and
cltd
rclb
addb
sbb
cmp
pop
sahf
add
icebp
push
sub
sub
jge
and
in
scas
bound
add
xchg
iret
clc
cmpsl
mov
sti
push
or
fnstenv
add
jmp
test
add
pop
imul
andl
xchg
mov
aam
cmp
and
lods
xorl
and
cmp
mull
scas
adc
and
aaa
mov
int3
out
push
adc
inc
daa
scas
and
outsb
cmp
in
cmp
cmp
adc
and
cltd
sub
sbb
push
sub
pushf
inc
and
push
adc
adc
fmuls
inc
adc
and
cmp
inc
or
push
adc
repz
sub
and
dec
in
shrb
inc
pop
xor
xor
add
push
subb
mov
cmp
jmp
push
pushf
cltd
pop
dec
popa
cmp
rcrb
repz
jecxz
and
push
je
aaa
js
cmp
sbb
popa
pop
adc
mov
inc
rcrb
movb
dec
addl
ret
push
je
push
push
cmpsb
cmp
xchg
fwait
lods
push
dec
loopne
xor
mov
mov
lea
fmull
dec
xchg
push
daa
push
sub
add
adc
xchg
pusha
and
jae
es
xchg
movb
xchg
jmp
adc
fldenv
mov
push
rcrl
icebp
push
pop
cltd
or
sub
movsb
fcomps
lods
mov
sbb
xor
inc
jns
out
add
mov
dec
movl
add
cmp
test
mov
jp
dec
or
dec
add
movb
push
addl
aaa
add
add
pop
jl
fsub
xchg
orl
cmp
cmpl
test
jecxz
lods
mov
or
jle
push
movl
xchg
or
add
sub
add
jbe
mov
mov
movsl
lock
shl
lcall
movb
pop
aam
and
loope
adc
addl
out
jo
hlt
icebp
push
aad
sub
dec
jl
das
movl
mov
cmp
cmp
adc
ja
xchg
cmp
xlat
mov
dec
sarl
pop
push
push
sbb
outsl
dec
sbb
xchg
mov
and
jecxz
fisubrl
cmp
or
daa
dec
jo
add
pop
mov
pusha
push
dec
lcall
inc
into
and
jge
adc
sti
dec
pop
fs
mov
xchg
ficoml
sbb
call
cli
inc
hlt
jmp
cli
mov
mov
fdivrs
fcoml
sbb
out
icebp
inc
push
into
int
mov
adc
movlps
iret
mov
inc
shll
rolb
jno
js
scas
jle
dec
loopne
adc
cmp
add
lret
inc
stc
pop
and
sub
in
sbb
rcll
adc
jle
movl
or
in
shr
sbb
mov
cmp
xchg
pop
add
cmp
loope
push
iret
mov
lds
test
sbb
sbb
lcall
pushf
jecxz
divb
ficompl
hlt
in
out
sub
jge
mov
shrb
xor
cmp
jl
cmp
inc
cld
bound
push
push
fcmovb
ret
push
mov
adc
js
mov
addr16
jp
xchg
loope
std
js
pushf
rclb
loope
or
idivl
adcb
sets
or
push
or
xchg
dec
scas
test
pop
cmp
movb
pop
mov
adc
cld
arpl
mov
mov
adc
adc
add
ret
lea
xchg
fimuls
mov
mov
mov
incl
add
dec
mov
mov
popa
add
and
sti
jne
movsbw
dec
fildl
jns
jne
and
or
aaa
mov
adc
fwait
dec
inc
push
add
jge
insl
add
out
mov
push
lds
inc
hlt
scas
insl
mov
inc
lods
sbb
inc
mov
mov
dec
ds
je
mov
addl
or
shr
push
mov
lea
daa
add
nop
add
sbb
mov
xor
scas
popf
loopne
mov
mov
adc
cmp
sub
scas
pop
push
movsl
dec
ss
sti
sbb
push
hlt
mov
mov
sbb
jl
dec
cmpsl
mov
pop
cwtl
cs
sbb
inc
dec
sub
and
add
add
add
sbb
xchg
xor
inc
and
loopne
out
jae
push
adc
sbb
adc
shrb
xchg
xchg
xor
inc
es
les
add
sbb
testb
fcomps
lds
insl
mov
lret
xchg
mov
mov
int3
sbb
mov
dec
and
leave
or
jg
sbb
ljmp
mov
sub
cs
and
lahf
sbb
ljmp
cld
adc
in
or
arpl
mov
mov
repnz
loop
pop
add
addb
imul
inc
xor
in
lods
or
jno
stos
icebp
icebp
je
sub
cmp
pop
test
jne
fdivrs
push
or
inc
sub
mov
and
and
xchg
das
push
sub
and
mov
andl
xchg
push
push
lock
paddsw
fiaddl
push
dec
mov
popa
fcomi
in
add
movsb
mov
call
jns
sbb
dec
hlt
addr16
call
cmp
pop
pop
dec
mov
out
out
xor
shll
iret
add
push
fiaddl
lods
inc
xor
push
xchg
rcl
mov
add
push
aam
filds
dec
dec
int3
jmp
sub
mov
jnp
roll
dec
clc
pop
movl
jmp
lock
lock
test
mov
and
dec
loope
push
pusha
and
fnstcw
aam
or
push
push
push
mov
inc
popa
mov
mov
push
pushf
sub
adc
lahf
inc
jo
jge
jae
sbb
jno
loopne
lds
outsl
jg
not
mov
adc
fs
inc
sub
inc
xchg
cld
push
push
or
add
inc
pop
pop
jle
in
lea
jmp
add
add
or
add
mov
dec
inc
inc
add
add
push
mov
inc
test
addr16
add
adc
xor
sbb
and
jge
inc
sub
xor
addl
add
mov
mov
or
clc
add
add
mov
jp
in
push
push
and
adc
push
cmp
hlt
nop
sub
sub
push
and
sub
call
jno
push
add
push
push
imul
push
push
pusha
in
pop
push
mov
or
shrl
je
pushf
cwtl
in
push
cmpsl
mov
aam
xchg
mov
scas
adc
call
test
lock
inc
cwtl
cmp
cmp
jne
sbb
adc
jle
and
cmp
mov
cmp
mov
lea
dec
push
and
nop
xor
inc
push
push
hlt
dec
lods
lods
mov
dec
xchg
nop
xor
mov
pushf
orb
pushf
nop
dec
imul
mulb
add
aam
insb
shrl
test
xchg
imul
inc
jo
movsl
cs
pop
sti
xor
mov
inc
cwtl
lcall
orl
mov
cmp
lea
mov
lea
in
imul
idivl
mov
adcb
movsb
dec
mov
sti
pushl
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
adc
jb
js
mov
xchg
cmpb
inc
mov
cmpl
push
cmpsb
out
cmp
add
add
loop
or
and
cmp
cld
push
lcall
mov
mov
jno
xchg
mov
xor
and
movb
adc
pop
push
sub
enter
aad
mov
sbb
inc
push
pop
pop
sbb
repz
arpl
mov
push
mov
sub
in
jae
ret
xchg
push
sbb
cmp
xchg
nop
loop
fcoml
jg
push
push
rcl
ja
xor
push
pop
dec
push
pop
cmp
push
add
call
mov
into
shll
lahf
sbb
push
cmp
lcall
adc
adc
clc
jo
or
jnp
add
sbb
mov
movsl
push
push
je
pop
push
push
adc
loopne
push
fists
push
xchg
jnp
lea
in
arpl
test
xlat
cmc
data16
inc
push
movsb
sahf
js
loopne
mov
mov
push
in
jg
adc
push
int3
sub
testb
lods
scas
push
cmp
mov
add
xchg
push
xor
dec
das
call
and
pop
or
int
push
jo
out
push
popl
xchg
inc
rolb
daa
or
adc
outsb
mov
inc
in
out
loope
loope
bound
pusha
enter
xor
in
out
les
inc
jmp
and
dec
mov
and
jge
scas
push
int3
pop
mov
add
cmp
or
mov
xor
mov
jae
or
rorl
mov
xor
dec
pop
sub
cmp
adc
inc
rol
jmp
sbb
lock
je
bound
pop
loop
push
jno
adcl
ret
sub
adc
push
or
aam
pop
add
bound
or
mov
and
mov
add
aam
xor
sub
dec
dec
push
and
mov
push
jbe
cmp
je
jge
test
test
sbb
mov
test
xorb
popa
push
shlb
inc
lret
jno
loope
dec
cmpsb
add
jle
add
push
pop
and
xor
inc
lock
pop
mov
orb
insl
adc
lds
sbb
insl
dec
in
mov
and
test
mov
gs
out
jmp
retw
pop
sub
push
lods
mov
cmp
push
rcrl
inc
mov
sbb
rcr
jmp
test
pop
pop
rol
push
loopne
or
mov
push
lret
mov
test
adc
xor
push
outsb
mov
fldcw
pusha
lret
or
js
inc
jb
sbb
cmp
or
dec
and
or
mov
mov
stc
jle
add
cmpw
sbb
push
sarb
push
push
loopne
add
pop
push
pop
mov
les
add
stc
hlt
push
je
pop
jo
add
pushl
into
jns
adc
pop
jns
mov
push
xchg
adc
pop
mov
or
les
push
sahf
ret
dec
popa
pusha
jne
dec
dec
push
add
jp
sub
jmp
cmpsb
aaa
add
jae
or
movzwl
inc
call
add
pop
or
inc
test
mull
nopl
add
cmp
add
mov
subb
ss
adc
ret
add
mov
xorl
cli
pusha
fwait
mov
in
pop
mov
icebp
aad
sbb
je
cs
xchg
sbbl
and
popa
xchg
icebp
mov
jne
mov
cmp
jne
cmp
mov
jb
fs
push
jle
cmp
insl
add
pop
dec
pop
in
push
mov
xor
lea
jo
fmull
in
jo
and
jle
lcall
ja
loopne
insl
pop
adc
sbb
cmp
stos
mov
sub
push
dec
push
sub
pushf
push
test
pusha
popa
jge
add
aaa
lret
dec
add
or
dec
xlat
add
mov
adc
movsl
xchg
sbb
mov
scas
les
and
inc
pusha
jne
jbe
cmp
fldl
aas
nop
xchg
inc
or
xor
dec
sub
lock
jns
pusha
and
mov
test
shrl
adc
add
adc
xchg
push
test
cmp
pop
rorl
or
dec
inc
push
lcall
sbb
cmpsb
sub
out
in
add
dec
arpl
popa
inc
adc
sub
mov
add
js
mov
pop
adc
test
lock
push
add
xchg
and
push
roll
push
cmp
jl
adc
xor
test
sbb
or
add
push
ret
add
into
dec
xor
xor
or
std
lds
or
sbb
daa
adc
jle
push
cmpl
pop
jo
or
jb
jnp
add
and
inc
mov
sbb
jge
jae
cmpsl
mov
sub
mov
push
jge
and
icebp
mov
mov
cmpl
mull
mov
les
push
enter
dec
decl
xor
dec
cmp
ljmp
inc
dec
pop
jne
test
pop
push
call
ja
insb
and
xor
or
loopne
outsb
punpckhbw
je
push
and
inc
pop
hlt
add
scas
push
and
lret
in
icebp
dec
ret
dec
je
ret
push
jns
in
push
or
mov
sahf
out
mov
add
lock
setbe
les
inc
inc
icebp
fisubrs
xchg
nop
outsb
sbb
fdivr
loopne
movsl
push
sbb
pop
inc
adc
or
pop
pop
pop
inc
in
inc
mov
and
dec
xor
mov
stc
and
adc
loope
incl
cli
dec
jmp
mov
pop
movsb
and
jne
adc
jo
cmp
add
pop
in
adc
inc
mov
fs
add
rcrl
fisubrl
stos
shll
lret
xchg
dec
mov
imul
fcomps
fsubrs
sbb
jecxz
les
xor
push
inc
aaa
std
dec
cmp
mov
xor
jmp
push
in
inc
cmpsb
push
das
pop
sbb
xor
ss
sbb
jmp
adc
pop
push
cwtl
sub
andb
jo
fucomip
inc
les
inc
fs
in
or
push
pop
push
inc
dec
sub
cltd
mov
xor
sub
dec
mov
loop
cmp
inc
add
ja
negb
mov
fs
sbb
and
cmpl
or
mov
push
loop
mov
pushf
and
jnp
adc
mov
mov
mov
sbb
push
push
ret
inc
push
mov
dec
push
lods
add
clc
push
dec
sub
mov
inc
push
mov
iret
shlb
dec
inc
movsb
dec
in
int
jmp
push
sub
fidivrs
fists
pop
dec
mov
enter
dec
inc
roll
test
test
push
xchg
mov
shlb
jne
push
call
sbb
test
sbb
mov
in
inc
test
and
cwtl
pop
je
xchg
jecxz
pop
cmp
fwait
int3
ret
mov
sbb
jmp
dec
push
repnz
testl
push
sub
inc
movsb
xor
adc
test
mov
jno
insl
loopne
dec
mov
mull
je
sub
pop
ja
cmp
leave
in
or
mov
loop
stc
test
or
leave
pop
dec
fists
or
out
enter
or
mov
adc
add
xor
dec
xlat
scas
push
subl
adc
or
stos
mov
daa
lret
test
dec
push
xchg
add
jecxz
jge
ret
and
test
cmp
cvtdq2ps
or
or
ficompl
cld
dec
add
jmp
lret
mov
dec
pop
adc
shrb
lods
les
enter
rolb
pop
cmp
pop
sbb
push
adc
sub
enter
adc
inc
or
pop
mov
and
loope
pop
push
pusha
or
jle,pn
subb
mov
push
push
ret
in
lea
or
and
xor
les
js
pop
pop
cmp
push
cmp
add
clc
pop
jne
cmp
cmp
push
and
imul
mov
clc
push
xor
pop
jle
fsubrs
imul
cld
hlt
mov
test
or
and
sub
rclb
rcrb
mov
xor
adc
adc
push
push
filds
sbb
add
mov
movsb
cmpsb
jmp
mov
popf
loop
push
out
xor
adcl
pop
push
mov
adc
cmp
jmp
fldt
or
xor
out
fadds
push
mov
pop
push
dec
sub
mov
sub
or
dec
imul
arpl
js
sbb
sbb
push
xor
and
jmp
cmp
jne
xor
inc
add
inc
enter
scas
sbb
jmp
ss
mov
pop
mov
xchg
dec
into
cwtl
mov
pop
leave
adcb
push
mov
pop
xchg
stc
and
mov
adc
sti
mov
shrb
ljmp
mov
push
push
push
jno
jmp
lods
or
imul
mov
stos
or
push
jno
mov
rcrb
gs
stos
jno
dec
xor
xor
jl
les
pop
sub
cmp
jl
add
jae
cli
incb
and
addr16
xchg
jns
cmp
insb
push
push
push
adc
and
pushf
inc
mov
mov
decl
and
or
lret
and
jae
sbb
cmp
adc
sbb
cmc
push
jno
add
push
loopne
adcl
jecxz
or
jae
nop
add
dec
push
mov
adc
loopne
int
bnd
imul
lret
stos
pop
mov
outsb
or
lock
push
in
add
rol
sbb
or
mov
rcll
mov
or
and
scas
xchg
pop
iret
add
jno
pop
andl
xchg
mov
sub
cmpb
sub
add
repnz
call
sub
push
xchg
mov
add
mov
or
inc
sub
sub
jne
push
rorb
sub
xor
xor
cmp
js
xor
adc
pop
adcb
sub
nop
or
sbb
jl
fldl
push
cmp
jb
cmc
or
or
icebp
push
lods
inc
and
test
scas
in
mov
jl
sbb
std
mov
cwtl
popf
or
push
or
dec
xchg
mov
xchg
add
es
rorb
shl
cmpsb
dec
mov
lcall
scas
and
ud0
test
add
adc
mov
push
movsb
pop
sbb
loop
cmp
xor
inc
js
push
lock
xor
fwait
push
andl
daa
adc
pop
inc
push
or
sbb
jo
jno
cmc
cmovge
or
shl
add
or
shr
sub
mov
and
adc
cltd
arpl
xor
movsl
and
pop
xlat
adc
push
stc
movsl
sub
popf
nop
outsb
bound
mov
jmp
mov
or
arpl
aas
shll
lds
jmp
mov
mov
push
jge
movsl
push
mov
leave
adc
sbb
inc
jp
push
mov
sub
and
mov
xchg
sub
popa
sbb
leave
lods
xor
imull
pop
lret
mulb
xor
scas
xor
aaa
mov
jecxz
pop
jb
push
sub
dec
push
mov
pop
xor
daa
sub
repz
movsl
pop
cmpsl
sbb
push
dec
dec
sub
dec
xchg
inc
push
popa
add
pop
lahf
shlb
je
add
push
adc
add
andl
mov
and
or
sbb
mov
ja
xlat
pop
cli
in
in
repnz
mov
cwtl
stos
xorl
js
adcl
pop
xor
dec
and
shrb
inc
cwtl
cmp
stos
push
sub
lock
nop
xor
icebp
aad
pop
add
xchg
cld
test
and
cld
icebp
sbb
pop
sub
cltd
inc
dec
push
stos
lock
lods
call
movsl
in
mov
lret
call
mov
mov
andb
add
adc
rcr
aas
sub
popa
lcall
xchg
mov
inc
xor
sbb
pop
mov
test
adc
jb
mov
gs
fldl
dec
push
imul
sbb
shlb
or
and
xor
fists
cwtl
das
outsl
and
movsb
pop
xchg
inc
mov
pop
xchg
ficoms
or
icebp
push
xchg
das
xor
loopne
rol
xor
je
dec
scas
lea
push
pop
sub
and
sbb
adc
les
add
xchg
add
inc
xor
jnp
and
pop
fisubl
sbb
push
push
shlb
adc
data16
sub
in
xchg
or
adc
mov
adc
ret
jns
mov
jp
mov
neg
mov
sbb
xor
jmp
rcrl
adc
push
enter
inc
adc
sbb
push
xor
add
loop
psraw
outsl
mov
fists
and
movsl
das
push
pop
xchg
cmovp
adc
or
sbb
stc
sahf
ljmp
dec
inc
into
dec
inc
jb
or
je
sbb
dec
test
dec
mov
jne
fs
aaa
roll
faddl
xchg
adc
and
inc
push
inc
add
push
out
dec
or
imul
dec
in
adc
sbb
lahf
adc
sbb
xchg
adc
adc
push
ja
shll
loope
add
movzwl
add
or
adc
cmp
mov
in
push
sub
filds
inc
sub
sub
sbb
inc
or
enter
xor
ds
mov
adc
push
mov
orb
ret
or
js
xor
jl
adc
pushf
cmp
jbe
or
fiaddl
push
inc
cmpb
arpl
jo
push
mov
xlat
xchg
push
or
and
dec
sarl
push
out
mov
adc
in
mov
es
xor
aaa
sahf
bnd
popa
or
mov
dec
and
movsl
imul
rorl
out
xor
or
sldt
sarl
lods
adc
mov
jmp
adc
add
into
in
sbbb
and
sbb
ja
sbb
ds
mov
inc
clc
and
push
sbb
and
add
pop
inc
fidivs
pop
or
insl
adc
push
adc
inc
inc
adc
add
les
dec
inc
clc
pop
mov
ret
dec
cmpsl
push
mov
imul
out
pop
pop
fnop
mov
mov
adc
ret
subl
sbb
fs
vmovntpd
sbb
ret
xor
xor
sti
adc
loopne
or
push
pop
adc
enter
push
pop
push
inc
xchg
dec
xorb
ret
mov
mov
jae
and
test
fdivs
sbb
mov
jmp
inc
lcall
out
out
mov
mov
bound
jl
jb
pop
cmpsl
jp
adc
lcall
jno
add
rclb
adc
rcrl
adc
jo
push
push
mov
es
outsb
xlat
jge
mov
xor
and
inc
icebp
push
or
inc
xchg
sbb
shl
xor
push
pop
xchg
jle
sbb
pop
xchg
mov
xor
cmp
cmp
arpl
xor
mov
mov
dec
hlt
push
inc
es
and
push
push
sbb
and
aaa
mov
dec
pusha
sub
or
shlb
hlt
xchg
sub
cli
adc
in
adc
adc
lds
mov
fwait
pop
push
loopne
push
jns
dec
add
scas
mov
jge
popa
sub
loopne
push
rclb
out
sub
add
ss
push
adc
addb
inc
jmp
push
and
jmp
nop
push
mov
stos
stc
mov
cwtl
xchg
sarb
or
push
lods
and
nop
pop
mov
or
adcb
and
repz
addb
pusha
mov
or
mov
test
xchg
addr16
push
fwait
mov
push
inc
inc
sbb
clc
pop
rcll
mov
jge
add
jns
push
mov
cli
push
push
mov
push
test
fstps
test
pop
lock
bound
fisttps
fcoml
loope
jb
in
and
aad
inc
rolb
fldcw
lods
rcll
std
jne
stos
push
push
aas
jmp
subb
popa
xor
cmc
add
iret
and
je
pushf
stos
mov
and
jae
cmp
ret
aaa
dec
and
push
adc
das
and
pop
repnz
dec
or
adc
add
ret
xchg
add
pushf
or
test
dec
test
fiadds
sub
test
loop
mov
push
mov
pop
adc
push
adc
push
sbbl
andl
sbb
shlb
mov
add
rolb
pop
hlt
adc
or
out
scas
sbb
adc
pop
sub
popa
cmp
push
adc
rolb
and
dec
mov
testl
data16
jg
inc
ficoml
adc
and
das
mov
push
mov
dec
imul
dec
or
lea
lock
lea
and
fildll
jl
jmp
loope
dec
imul
aaa
sbb
pusha
sbb
adc
jo
loopne
mov
dec
or
testl
movsl
mov
xor
and
sbb
paddusb
add
fistpl
orb
leave
push
inc
mov
sub
mov
insl
and
loope
rclb
movsl
mov
into
jno
mov
sbb
rolb
push
or
push
mov
add
adc
add
xor
or
dec
imul
mov
push
sbb
inc
mov
sub
fcom
dec
jne
xchg
repnz
xchg
mov
adc
jp
and
adc
mov
movsb
lea
inc
push
jle
fwait
mov
das
fadds
out
push
adc
scas
enter
pop
testl
fcompl
inc
mov
pop
pop
lock
mov
cmp
mov
addb
adc
loope
loopne
jne
mov
int
mov
push
rcl
cmp
je
push
or
sahf
test
cld
jle
inc
ljmp
xchg
pop
jmp
mov
or
xor
faddl
mov
lods
jmp
loope
iret
push
sub
shll
xchg
or
or
loopne
test
cmp
push
pop
push
push
pusha
cmp
xor
fs
andl
fldl2t
sbb
xor
sbb
imul
out
dec
scas
inc
mov
sbb
pop
cmp
cmpsb
xlat
push
push
movsl
iret
sbb
add
sub
push
divl
rcr
xor
inc
test
or
in
ja
hlt
or
add
mov
aaa
and
mov
das
into
movsl
inc
and
cs
orl
lahf
and
mov
or
push
adc
cs
dec
cmp
cmp
adc
mov
jne
ret
push
cmp
scas
or
shrl
enter
es
xor
iret
push
sub
lea
push
sub
or
mov
or
jo
leave
cs
hlt
les
movl
and
push
push
sarl
add
cwtl
mov
lods
into
movsl
adc
xchg
popa
testl
dec
adc
adc
mov
aaa
cmpsl
push
or
and
outsl
jbe
enter
push
and
add
inc
inc
mov
dec
popa
cmp
lret
and
adc
xchg
push
addr16
rclb
imul
pop
std
jbe
add
push
imul
push
test
sub
add
dec
push
xor
mov
mov
push
sahf
pop
pop
xor
push
jnp
mov
sbb
arpl
idivl
flds
push
mov
in
iret
call
xor
inc
adc
rcrl
push
pop
or
pop
jne
cwtl
pusha
lods
pop
jg
inc
sahf
xchg
xchg
or
clc
insb
dec
or
or
sub
test
pop
or
mov
frstor
or
add
xchg
or
mov
repnz
push
nop
test
sub
cmp
fldenv
std
lds
push
jno
adc
pop
cmp
mov
les
stos
pop
or
mov
mov
and
add
and
cmp
fidivl
lods
or
sub
cmp
sub
cmp
and
insl
addl
int3
sbbb
mov
push
inc
popa
dec
mov
push
mov
sbb
test
mov
push
and
dec
popa
call
adc
stc
popa
pop
sub
mov
adc
mov
je
push
add
js
adc
test
rorb
xchg
rcl
or
xchg
sbb
fcoms
fsubs
add
movsl
mov
sbb
je
push
dec
call
pop
push
sub
jecxz
jp
mov
sbb
mov
add
shll
push
cmp
add
jle
mov
mov
int
pushf
and
adc
cmp
stc
out
inc
push
cmp
jle
cmp
jp
push
cmp
cmp
dec
clc
negl
mov
push
add
inc
jmp
inc
and
aas
fs
movw
mov
mov
mov
in
je
mov
inc
or
fs
pop
idiv
lock
pop
in
adc
rorl
ds
cmp
adc
mov
adc
adcb
stos
lods
test
testb
sbb
imul
jns
push
popa
or
pop
push
jbe
push
sub
xchg
shl
inc
add
outsl
xor
dec
mov
xchg
xchg
add
or
xor
test
mov
ficomps
cmpsl
rcrl
and
je
mov
pushf
cmp
xor
adc
adc
cmp
jo
sbb
push
daa
int
push
xchg
int3
cmp
push
mov
dec
sub
mov
add
xchg
or
pop
add
adcb
movsb
push
or
or
add
nop
dec
enter
inc
js
jns
xchg
ss
roll
cmp
add
or
inc
adc
cltd
in
or
cltd
inc
and
adc
add
loopne
and
cmp
sbb
push
push
shlb
pop
sub
or
nop
jl
popf
js
ja
je
les
filds
or
into
cmp
add
adc
add
rclb
lea
pop
dec
push
inc
dec
or
adc
or
shrl
jb
and
add
nop
lret
push
xor
dec
scas
xchg
and
or
dec
xor
or
rolb
cmpsb
or
pushf
push
mov
mov
iret
mov
outsl
or
pop
movsl
add
push
mov
pop
add
or
lods
stos
jmp
add
sub
rcll
aaa
sbb
dec
xor
sbb
sub
adc
mov
add
sub
add
test
sub
mov
sbb
outsb
xchg
and
add
rcr
and
push
outsb
and
loopne
rcrl
sub
sarl
push
fstl
subl
incl
and
push
xorl
in
mov
lods
push
xor
cmpsl
std
bts
push
or
push
xchg
fs
in
je
enter
xchg
cmp
enter
and
adc
adc
sbb
or
pusha
mov
leave
adc
inc
jb
sbb
mov
pop
adc
pop
add
nop
or
xor
xchg
adc
cmp
and
xchg
sbb
xchg
push
loope
push
mov
push
jo
jge
jl
roll
push
cmp
add
xchg
repnz
mov
or
adc
loope
dec
or
aaa
fwait
sub
sub
inc
out
adc
xor
rol
bound
sbb
sbb
push
and
and
push
dec
xor
nop
out
add
imul
jae
jb
pop
int
stc
mov
std
sub
arpl
xchg
add
ja
xchg
popa
xchg
add
and
gs
icebp
xchg
adcl
or
mov
cld
arpl
jns
add
insb
pop
adc
mov
adc
stc
bound
pop
lcall
or
add
adc
mov
fwait
adc
repz
sbb
pop
push
enter
or
jecxz
inc
adc
icebp
and
test
lea
fcomps
pminsw
or
jo
xchg
sub
insl
arpl
test
and
sbb
or
pop
xchg
sub
cmpsb
inc
ljmp
push
std
enter
rolb
pushf
fiaddl
jbe
insl
mov
flds
adc
push
push
inc
lcall
sbb
dec
or
pop
dec
scas
loop
sti
rcll
mov
loopne
out
popa
fcoms
mov
cmp
in
pop
xchg
push
loope
mov
lock
add
imul
mov
pusha
pop
xchg
or
rcr
sub
pop
add
test
add
inc
xchg
jp
clc
or
push
jne
push
dec
testb
and
add
leave
sarb
sub
cmp
and
add
add
and
jg
and
in
adc
sahf
cmpsl
popa
fwait
sub
push
imul
xorb
pop
add
cmpsl
stos
pop
xor
notl
data16
mov
ja
xchg
inc
push
push
jno
mov
dec
mov
xchg
clc
dec
loop
and
scas
xor
jg
test
and
shl
add
movsl
inc
add
cmp
jl
push
cmp
sarb
arpl
icebp
cmp
loope
add
outsl
sbb
push
add
push
lret
in
mov
xchg
jmp
jbe
aaa
add
in
orb
lods
xchg
nop
pop
xchg
adc
outsl
out
loop
nop
fmuls
es
or
xchg
outsb
inc
aas
push
push
fldl
punpckhwd
sbb
loopne
les
nop
add
ds
fs
in
pop
push
push
fldl
fisttps
pmuludq
sbb
cmp
ds
mov
fsubrl
insb
mov
fstpl
pop
movsl
test
mov
insl
pop
or
adc
pop
mov
or
fsub
pop
fsubrp
out
mov
jb
push
loopne
or
push
les
cmp
inc
aaa
dec
xor
fs
aad
in
idivb
mov
inc
ret
adc
rclb
jb
scas
sub
adc
xchg
insb
into
adc
or
shll
pop
inc
movsb
mov
inc
sbb
mov
jge
sub
fidivs
or
insb
insb
xlat
cmp
adc
xor
insl
test
push
add
daa
cmp
rolb
cmp
ret
ja
lock
inc
push
mov
push
sbb
dec
shr
daa
and
jnp
ret
fidivrl
sbb
add
rolb
test
dec
jp
daa
add
push
or
fstl
jmp
and
insb
mov
ja
jo
inc
mov
or
leave
and
dec
stos
sbb
sub
clc
clc
mov
push
lea
cmp
jb
stos
xor
shld
cmpsb
jno
mov
jb
in
ljmp
ss
push
and
push
rclb
or
mov
adc
add
push
leave
adc
cli
notb
mov
push
adc
push
push
dec
xor
jle
popf
pusha
or
cli
mov
pop
push
push
sarb
add
fdivrs
pop
nop
leave
sub
nop
push
incl
jecxz,pt
gs
dec
dec
dec
push
inc
roll
add
push
lcall
fcmovnbe
ja
dec
incl
push
push
cmp
push
adc
mov
sbb
push
push
orb
xor
je
jle
cmp
cmpw
jne
pop
outsl
jle
inc
adc
inc
inc
cld
cmp
jge
jge
dec
push
push
jl
mov
inc
sbb
sti
jg
stc
std
mov
or
sbb
jo
cmp
out
popw
jle
and
or
push
push
movsb
jle
push
push
push
xor
xchg
mov
imul
sbb
and
dec
addb
lods
mov
xchg
addb
ret
lcall
or
dec
inc
xchg
add
add
pop
add
push
sbb
sub
iret
xor
jb
inc
cmp
imul
jge
mov
sub
mov
cmp
lods
inc
xor
xor
inc
push
test
mov
or
push
push
mov
push
adc
jne
test
adc
std
mov
leave
pop
push
in
xor
xchg
jp
jo
andb
daa
movlps
xchg
mov
scas
mov
ret
test
jecxz
and
cmp
lahf
cmpl
call
pop
cwtl
jo
gs
lds
adc
xor
gs
mov
xlat
sub
cmp
add
popf
push
mov
sbb
jne
cwtl
out
inc
push
sbb
push
add
xchg
ds
and
ret
pop
add
shlb
pusha
ja
sub
call
hlt
shrl
xlat
sarb
ret
lcall
cli
xor
sbb
xchg
mov
mov
mov
push
mov
and
dec
push
inc
add
aas
or
inc
add
adcb
add
pop
loopne
adc
push
adc
cwtl
ljmp
xor
push
cltd
adc
jnp
or
mov
ljmp
movl
lods
dec
sub
fadds
lea
loope
rcll
ret
outsb
imul
add
test
mov
adc
inc
loope
dec
stos
push
daa
nop
adc
mov
mov
dec
adc
jo
adc
push
fiadds
sub
add
mov
inc
push
push
fmul
jp
addb
adc
jge
out
push
ja
sub
adc
xor
movsb
sub
dec
mov
fisubrs
jp
test
cwtl
adc
mov
icebp
sti
and
test
xlat
out
pop
mov
loopne
ret
je
sub
dec
sbb
xor
sub
dec
jne
sahf
jb
inc
adc
pop
stc
scas
lcall
mov
js
jmp
stos
jl
adc
adc
pop
push
or
push
jmp
push
mov
sub
and
push
sahf
cmpsb
sbb
pop
adc
scas
mov
mov
add
mov
nop
pop
mov
out
por
ss
add
loopne
lahf
inc
adc
xchg
or
shrl
mov
insl
out
add
xor
dec
jbe
pop
adc
push
adc
mov
push
add
xchg
mov
lock
in
and
orl
xchg
inc
sbbb
cmp
inc
in
sbb
sbb
pop
pop
inc
dec
inc
xchg
out
pusha
mov
pop
cmp
sub
pop
push
repnz
daa
fmul
push
insl
in
cmpb
pusha
adc
cmp
dec
jnp
or
xchg
lds
in
mov
daa
inc
dec
imull
xor
ja
mov
lea
fsubrl
push
cld
imul
dec
mov
out
and
sbb
sbb
cmp
js
jg
dec
out
dec
lahf
push
jge
insb
in
adc
push
push
imul
in
in
push
xor
out
sahf
out
push
or
and
das
cmp
push
pusha
jns
out
insb
cwtl
mov
sahf
out
lret
ljmp
scas
or
push
sub
jns
out
cmp
push
pop
sahf
out
sahf
push
pushf
ret
jns
mov
test
addb
xchg
add
add
sub
inc
add
mov
jle
dec
pop
cmp
mov
loop
lock
xchg
add
adc
gs
sbb
sub
jp
int
shr
jno
add
sub
iret
pop
cmpsb
or
aas
insb
sub
fwait
jmp
jl
mov
sub
xor
inc
pushf
push
imul
cmp
decb
add
out
fcompl
nopl
xchg
push
mov
inc
adc
xor
std
xor
and
add
lods
pop
add
xor
dec
roll
cmpsl
inc
movnti
and
add
enter
mov
mov
repz
dec
test
pop
jo
adc
adc
inc
jo
movsb
xchg
push
mov
das
imul
sbb
ja
rorb
cmp
pop
sti
sbb
js
scas
mov
push
cmp
push
adc
addl
push
in
add
imul
lret
sub
xchg
out
pop
xor
int
mov
rorb
and
xor
mov
adc
jge
push
push
cs
jmp
dec
and
js
inc
popa
mov
or
sub
lods
lret
imul
test
sub
dec
insb
orb
cltd
shrb
lds
sub
pop
and
jo
enter
or
sub
dec
lcall
xor
inc
ja
adc
mov
adc
dec
orl
sbb
jnp
loope
add
test
pop
dec
push
fcmovne
pop
adc
inc
fwait
xor
mov
xor
xlat
rol
pop
test
or
movsl
xchg
rcrl
xor
fnstenv
subl
cltd
lret
push
inc
pop
adc
das
sbb
int3
cmpl
mov
mov
jnp
jne
js
popa
dec
int3
mov
ret
or
jne
icebp
ret
xchg
fwait
je
icebp
lods
fwait
insl
mov
daa
xchg
fiaddl
je
in
sub
rolb
movsl
ror
std
sub
or
aas
xor
mov
xor
sarl
enter
aad
pop
dec
inc
cmp
test
cmp
fdivrl
push
cmp
xor
push
mov
and
sahf
nop
lret
outsl
lods
push
cs
int3
aam
or
sub
inc
cmpsb
fistpl
in
es
mov
lcall
lcall
test
nop
mov
xor
enter
add
add
lea
jnp
dec
cld
jns
lret
test
cmpsl
mov
sbb
push
jno
xor
push
insb
mov
sbb
jp
sbb
add
repz
dec
sbb
sub
mov
cmp
test
cmp
adc
inc
cld
push
lock
adc
sbb
dec
sbb
dec
sbb
and
sub
and
jb
xorl
and
dec
dec
test
addl
sub
movsb
sub
and
negb
lock
lods
sub
cmp
sub
push
cmp
mov
xchg
iret
cld
jmp
pop
lods
pushl
addl
xor
lds
mov
ss
leave
clc
popa
aad
pop
inc
mov
or
mov
mov
aad
xor
rcrl
aaa
push
fcoml
es
inc
out
lock
mov
mov
fmul
push
push
jo
xor
enter
stos
shrl
and
std
test
insb
loop
movsb
mov
cmp
xchg
sub
leave
cmp
push
or
sub
ds
and
or
add
mov
cmp
or
nop
and
cmpsb
or
in
ds
inc
xor
sbb
scas
es
and
setg
mov
pop
inc
push
pop
addl
loopne
or
sub
js
add
aaa
push
adc
dec
sub
xchg
pop
sub
cmp
test
inc
pop
mov
inc
jno
movsb
add
loopne
sbb
stos
stc
test
mov
push
sub
and
shl
inc
ss
or
inc
cmp
and
lea
inc
lcall
mov
mov
rorb
mov
xlat
inc
ljmp
mov
cmp
fs
sti
mov
pop
fwait
jle
push
hlt
jge
mov
fcmovnu
jae
int
push
mov
scas
lods
add
out
into
or
xchg
add
clc
psrad
adc
mov
es
movl
mov
pop
fwait
lcall
fmull
lea
loope
xlat
mov
outsb
in
orb
pop
dec
ljmp
pop
push
call
cmp
adc
cmp
adc
push
sbb
ss
in
jno
cmp
xchg
mov
test
dec
xchg
fcomps
les
or
mov
pop
dec
sahf
inc
sahf
mov
dec
lcall
dec
sahf
fsubl
je
xchg
fistps
fidivrs
dec
adc
xor
fisubs
adc
insl
ja
jae
daa
lock
enter
mov
shrb
dec
inc
addl
push
pop
xchg
push
pop
subl
mov
push
fildl
push
cltd
sbb
jl
push
scas
or
jl
nop
fwait
or
pop
pop
mov
add
lods
cltd
and
sub
gs
pop
daa
aad
test
mov
leave
imul
and
inc
xchg
inc
inc
lcall
and
xor
pop
cmp
sbb
pop
xchg
add
cmc
daa
push
imul
adc
mov
and
imul
pop
imul
out
out
test
push
push
adc
xchg
cwtl
je
pushf
es
dec
cltd
mov
daa
test
xor
int
and
jo
adc
dec
dec
push
roll
imul
add
dec
es
in
call
popf
or
xor
lcall
push
xor
movl
mov
and
fnstsw
nop
xchg
adc
fdivrs
mov
cli
inc
mov
rolb
mov
push
rcrb
js
push
xchg
add
add
xor
faddl
mov
shll
xlat
fisubrs
dec
sub
cltd
cmp
repz
xchg
call
popa
pop
or
mov
push
jo
pop
mov
push
stc
or
sti
mov
fsubrs
sar
or
test
jns
imul
pop
inc
pop
sub
push
xchg
push
sub
mov
test
jge
nop
rcrl
lahf
fidivl
lods
out
adc
add
adc
sbb
jo
fsubs
adc
jo
adc
xor
sbb
mov
dec
fisubrs
xor
push
mov
add
pop
pushl
dec
sbb
rcrb
jmp
cmc
mov
test
test
xchg
mov
clc
gs
sbb
mov
sbb
int
addl
or
mov
aam
add
sbbb
sub
sbb
inc
daa
adc
jb
push
int
stos
lea
mov
or
dec
and
mov
sbb
insl
and
jnp
es
shr
daa
adc
push
adcb
xchg
and
daa
pop
fwait
ljmp
pusha
cmp
fs
into
sub
clc
mov
adc
pop
mov
jbe
sbb
push
mov
sbb
push
aam
push
mov
sub
add
mov
stc
sub
sub
add
dec
roll
push
pusha
push
xchg
adc
test
cmp
int3
les
push
add
push
sbb
imul
adc
pushf
fstps
or
xchg
je
pop
inc
adc
fisttpll
inc
adc
adc
adc
imul
jb
mov
push
mov
inc
test
nop
lret
or
cli
jne
fdivrl
dec
sub
or
inc
and
add
int3
mov
mov
je
or
inc
fimull
inc
or
inc
jae
addl
inc
mov
mov
push
sub
and
fcmovbe
rorb
sti
and
cmp
push
push
push
dec
ret
or
in
cmp
fwait
dec
jmp
add
dec
add
xchg
cmpsb
sbbl
jl
enter
xchg
inc
in
lock
scas
add
es
test
xchg
mov
jno
test
mov
mov
sub
in
jns
loop
repnz
jmp
cmpb
into
sub
sub
sbb
sbb
fisttps
jmp
mov
sub
leave
xchg
invd
lret
xchg
mov
push
xchg
movsl
adc
mov
push
add
cmp
inc
mov
inc
jg
sbb
sub
fsubrs
ljmp
clc
jno
and
sub
cltd
mov
jb
mov
ds
inc
loope
mov
outsb
push
lock
addl
nop
push
adc
add
xor
sub
and
xor
pop
cmp
dec
push
adc
xlat
jbe
add
inc
mov
jne
inc
ficoml
fmull
ret
jl
add
push
repnz
inc
mov
push
hlt
subl
or
iret
jne
test
mov
repz
lds
shll
inc
or
lods
enter
iret
je
mov
dec
sar
hlt
push
cli
bound
add
jmp
inc
fcomps
sub
sub
push
cmp
mov
xchg
cwtl
cld
mov
mov
inc
insl
fs
xor
inc
sub
call
orl
arpl
mulb
insb
push
mull
or
into
dec
sub
jmp
adc
cmp
push
movsb
push
aad
push
movb
or
adc
sub
movsb
in
stos
mov
pop
or
sbb
test
push
rorl
dec
add
and
cmp
adc
adc
dec
dec
add
cltd
popf
loope
insb
jmp
jae
sbb
sub
cmpb
push
or
cmc
pop
shrb
add
add
mov
stc
and
jg
je
cmp
or
mov
jmp
movzbl
movb
movsbl
shr
mov
es
std
add
pop
dec
add
mov
pop
or
cmp
faddp
mov
adcb
faddl
jno
jo
inc
loope
pop
and
cmp
add
xchg
or
mov
add
push
xchg
push
mov
push
or
cmp
add
in
stos
add
insl
xor
sub
add
pop
rcll
push
push
movsl
in
inc
lock
rcr
inc
mov
or
cmpb
je
dec
and
add
or
mov
mov
cmc
mov
jmp
sub
mov
cwtl
pop
xor
out
or
inc
inc
fnsave
sub
pop
movsb
adc
incb
cmp
outsb
cmpl
cmpsb
jo
js
sbb
mov
and
cmpb
mov
and
enter
std
cmp
inc
push
leave
addr16
mov
xchg
add
jbe
scas
xchg
repnz
scas
add
repnz
movsl
xchg
xor
mov
jecxz
addb
rcl
push
mov
icebp
xchg
dec
sub
dec
xchg
rolb
sub
jge
mov
es
sub
insl
and
dec
pushf
es
daa
pop
sbb
fisttpl
or
sbb
int3
mov
and
and
push
dec
jb
es
ds
mov
stos
mov
pusha
sbb
add
lods
sbb
lods
in
ss
mov
icebp
add
add
stos
mov
test
mov
xrelease
or
mov
push
xchg
mov
mov
mov
pop
ljmp
jne
inc
add
xchg
lods
add
mov
lods
dec
lcall
daa
test
adc
pop
adc
xor
sbb
or
dec
test
nop
xchg
arpl
fs
add
inc
ret
loop
and
or
sbb
test
jle
fmul
repz
adc
fstl
adcb
xor
movsb
out
into
loope
dec
rolb
push
pop
push
add
das
pop
and
or
adc
pop
mov
adc
fmull
mov
xor
shl
push
inc
sbb
mov
sub
jo
rol
add
adc
fcomps
lock
ljmp
enter
gs
in
shrb
add
pop
enter
push
ret
xchg
push
add
loop
fiaddl
sbb
add
ljmp
and
sub
outsl
sub
sub
sub
push
dec
and
push
negb
lret
sbb
aaa
sbb
pop
stos
cmp
pop
xor
ret
or
or
xchg
add
lahf
pusha
push
jmp
in
or
add
test
aaa
loope
lods
xlat
mov
das
jae
xor
dec
sarb
pop
andl
pop
aam
push
mov
sub
shlb
int3
ret
mov
sub
xchg
mov
adc
xchg
xor
pop
sub
test
push
iret
ret
je
pop
mov
fldenv
stos
mov
es
mov
mov
sbb
mov
add
dec
cmpsb
cwtl
rclb
or
cmpl
mov
mov
ljmp
adc
push
add
shrb
inc
dec
hlt
and
mov
mov
mov
fists
xor
jne
je
inc
mov
sarb
js
add
sarb
mov
jnp
jnp
mov
bound
pop
xlat
add
cmp
jno
ja
int3
fsubr
ss
test
adc
mov
adcb
push
and
cmp
adc
push
movsl
push
adcl
cltd
fidivrl
nop
rolb
nop
dec
push
enter
enter
xor
xor
adc
pop
addr16
adc
jbe
mov
lea
mov
pop
call
lods
inc
jne
and
fdiv
in
pop
mov
cmc
stc
jp
add
cmp
dec
jecxz
jl
or
les
xchg
jbe
fs
xchg
call
loopne
mov
sbb
mov
and
rorb
xor
sbb
enter
inc
push
scas
lods
xor
xor
je
jge
mov
mov
inc
loope
rorb
nop
popa
outsl
das
mov
or
cmpsl
jne
ja
dec
in
cmp
test
jne
es
or
mov
movsl
push
pop
xchg
jno
cmp
lock
aas
mov
sbb
gs
add
test
jecxz
push
lcall
mov
adc
push
movsl
push
inc
lea
clc
or
mov
cmp
addr16
cmp
sbb
rorb
fmuls
out
xor
mov
bound
clc
imul
movl
out
popf
and
push
cmp
dec
mov
mov
jle
test
fadds
mov
jg
xchg
pop
and
inc
add
inc
or
inc
daa
mov
and
push
adc
adc
jle
adc
sbb
push
movsl
mov
mov
add
pop
mov
pop
ret
ret
adc
push
xchg
mov
push
push
mov
mov
push
fst
pushf
and
adc
inc
sbb
fstpt
movsb
movsl
inc
data16
cmp
mov
out
jne
daa
bnd
adc
hlt
lock
iret
jne
or
jne
or
rcrb
loopne
mov
or
lahf
xor
in
sarl
mov
rolb
fcmovbe
pop
mov
lock
push
push
lea
movl
adc
sbb
push
insb
add
mov
inc
in
push
mov
fstl
mov
das
call
mov
pop
hlt
lea
shll
hlt
cs
pop
xor
nop
rorb
or
inc
add
inc
je
jo
movsb
faddl
movsb
iret
mov
jp
repnz
push
aaa
mov
inc
xlat
mov
or
mov
and
pusha
lea
cmpsl
mov
jae
scas
jae
sarb
fsubs
clc
lahf
mov
mov
or
jne
shll
fstl
popf
sub
fcom
test
rcrb
dec
in
adc
mov
and
movsb
jl
adc
in
cli
pop
xlat
sbb
lahf
push
ss
pop
adc
mov
and
aad
add
pop
subl
mov
aas
push
xchg
push
cltd
shrl
lahf
aas
add
call
xorl
mov
mov
xchg
fwait
or
test
mov
enter
fs
jne
fmuls
jne
cmp
rcrb
and
enter
ss
lea
pop
add
mov
mov
fisubrs
sbb
inc
pop
dec
push
cmpsl
mov
les
adc
out
or
fiaddl
data16
adc
pop
data16
or
mov
jbe
add
mov
fmuls
rorb
cli
adc
or
into
inc
subl
fisubrl
sub
xor
mov
add
out
mov
push
dec
push
repnz
and
popa
add
adc
xchg
xchg
inc
and
fldcw
or
push
jb
clc
jge
pop
xor
xchg
cmp
call
rcr
inc
aaa
xchg
movl
mov
scas
adc
pop
push
jmp
rcr
sub
push
and
add
das
sarb
divl
das
cmp
loope
ret
xchg
mov
mov
push
stos
jnp
and
inc
jmp
fs
push
addb
mov
addl
js
xchg
xor
ret
dec
lea
ret
jecxz
cmpl
bound
dec
or
pop
mov
popf
sbb
mov
xor
dec
mov
cmpb
mov
inc
push
or
ljmp
cmp
xor
stos
idivl
cld
or
dec
repz
sbb
es
add
sbb
xchg
adc
js
adc
xchg
inc
es
adc
sti
sti
shrb
jno
gs
mov
leave
and
mov
push
sub
pop
xor
test
mov
dec
shrb
sbb
adc
pushf
xor
xorb
push
xor
fcomps
and
movsb
cltd
and
mov
test
and
or
and
and
stc
mov
daa
ja
adc
in
dec
scas
sbb
xor
sahf
mov
dec
adc
add
jg
jae
jbe
leave
test
daa
inc
push
and
pop
shrl
pop
popl
call
je
adc
dec
in
insb
and
add
push
sbb
add
mov
xchg
adc
jno
mov
outsb
inc
popf
xor
xor
adc
mov
inc
or
pop
in
rcr
cltd
les
jle
dec
js
scas
dec
cld
adc
jae
je
push
push
mov
adc
lea
add
inc
sbb
fdivl
loopne
sbb
fcompl
and
js
adc
fwait
mov
movsb
out
jae
push
pop
and
rolb
test
adc
push
push
or
movl
adc
add
pop
movsb
mov
cmpsl
sub
push
adc
test
fadds
dec
pop
call
je
cmpsl
popf
jne
adc
or
jnp
sub
sub
mov
add
and
pop
loope
inc
repnz
movsb
pop
cmpsb
mov
add
loopne
fdivl
push
sub
call
daa
mov
xchg
mov
add
fmull
shlb
fwait
inc
lock
add
test
mov
je
cmp
mov
adc
movsb
add
leave
mov
adc
xor
push
call
push
adc
test
cmc
jo
pop
xchg
add
xchg
or
andl
lret
or
movl
sub
adc
jae
xchg
or
mov
jb
or
syscall
jle
addl
cs
push
and
inc
and
out
mov
push
cmp
ds
ljmp
inc
xlat
fisubs
and
jne
mov
imul
push
ljmp
and
add
mov
pop
subl
sbb
cmp
xor
push
insb
rcll
xchg
test
dec
call
jo
cmp
in
dec
ret
in
mov
fdiv
push
pop
and
push
mov
test
mov
cltd
and
fstl
push
jae
sub
clc
push
add
js
sbb
fwait
push
push
adc
and
xchg
decb
je
mov
rolb
and
cmp
sbb
mov
pop
sbb
movsl
or
inc
pop
adc
sub
cmp
push
pop
andb
add
jmp
mov
ret
int
adc
sbb
push
mov
setge
call
aam
jp
jmp
out
je
test
inc
cmp
add
add
fisubrl
dec
cmpb
push
xor
mov
lret
pop
shlb
xor
add
jns
pusha
push
mov
xor
jecxz
and
push
pop
addb
push
mov
sbb
mov
je
dec
adc
push
jne
movsb
and
fcoml
and
outsl
inc
mov
mov
sbb
fstpl
clc
xchg
jl
jmp
mov
push
xchg
mov
rolb
dec
add
mov
addr16
sub
pop
xor
movsl
jne
stos
insb
movsb
push
push
mov
jmp
fadds
jo
inc
sti
inc
in
add
push
add
pop
subb
lcall
push
mov
sub
sbb
in
or
or
push
cmp
sbb
add
call
lock
test
mov
jbe
clc
ss
adc
aam
jo
scas
jo
and
add
dec
add
movsl
ja
nop
cwtl
dec
or
inc
or
xor
cmp
je
dec
mov
dec
or
xor
add
dec
cld
popa
enter
xchg
ret
dec
lahf
push
push
clc
push
iret
pop
mov
ds
ret
loopne
dec
cmc
js
hlt
jae
movsbl
frstor
loopne
sbb
mov
cli
xchg
cmpsb
stc
mov
add
sbb
pop
inc
push
ds
jmp
enter
decl
inc
incl
add
or
jecxz
mov
incl
or
add
inc
cmp
jl
push
jne
insl
cld
decl
cltd
and
add
sar
add
sbbb
jle
clc
xor
xor
ss
cmp
jecxz
call
add
or
adc
js
add
mov
dec
jne
fs
adc
mov
imul
scas
add
rcrb
pop
pop
fmuls
jmp
mov
push
sub
jp
jbe
pushl
shld
lea
roll
inc
adc
roll
pop
adcb
fimull
and
jns
fsubr
mov
jl
lcall
add
push
fsubrs
mov
lret
clc
std
out
mov
mov
mov
add
fistl
cltd
gs
pop
jg
xor
inc
add
cmp
pop
xchg
out
xor
sbb
add
aaa
lahf
push
ret
or
add
ds
and
add
xchg
add
pop
cwtl
sub
xor
and
test
pop
test
mov
push
addb
sub
mov
add
jp
add
sbb
inc
lret
xor
sbb
dec
leave
repz
cmp
cmp
xchg
mov
repnz
icebp
jo
stos
sub
and
outsb
dec
or
add
nop
adc
bound
leave
loopne
cld
push
jecxz
js
lea
push
jmp
shl
push
mov
dec
push
cmp
lahf
mov
outsb
rcrl
cld
cmp
out
fcomps
jne
outsb
pop
nop
push
dec
pop
add
pop
jb
jmp
push
loopne
jb
add
push
push
sub
mov
and
pop
dec
out
dec
mov
add
xchg
or
inc
or
add
push
lea
test
mov
jno
push
fmuls
pop
mov
mov
push
push
xchg
fmul
xchg
xchg
fxch
jmp
push
push
icebp
add
mov
mov
sbb
clc
nop
lea
les
or
push
mov
and
lret
shl
cmp
push
pushl
orb
arpl
in
std
shlb
dec
mov
sbb
popf
fcmovnu
pop
pop
add
or
adc
ret
rcl
cmp
ljmp
mov
or
shlb
xchg
sub
adc
adc
out
out
push
negb
cs
dec
add
rol
push
jmp
aas
mov
shl
sub
mov
pop
lcall
aam
outsl
xchg
fcomps
jge
je
inc
das
daa
aad
adc
lret
or
adc
sbb
mov
add
jne
sbb
aam
imul
loope
jl
mov
jb
mov
aam
pop
mov
mov
xorb
int
mov
aam
jne
jle,pn
add
push
jmp
mov
mov
jb
addb
cmpb
pop
mov
cmp
sbb
loope
cmp
mov
xor
les
pop
incl
mov
push
pop
cmp
sbb
test
pusha
clc
clc
mov
shl
je
adc
cmpsl
call
out
xchg
mov
js
das
sub
pop
and
fsts
inc
fidivrs
jge
nop
xorl
rclb
add
mov
and
sbb
cmp
xor
and
add
sub
lret
inc
test
scas
and
jbe
mov
and
cwtl
loopne
fdivrl
je
lea
jge
sub
lcall
test
sub
daa
movsbl
shl
dec
je
fsubr
add
mov
dec
test
push
mov
add
mov
test
lahf
xchg
push
clc
pushf
mov
test
in
orb
add
xchg
push
jns
cs
mov
nop
insb
push
add
push
add
and
mov
aam
jno
jmp
or
sub
in
xor
push
dec
pop
shrb
dec
push
shl
inc
xchg
add
rclb
xchg
cmp
cmc
sbb
in
pop
xchg
mov
loope
inc
aas
cld
les
clc
push
inc
mov
adc
xchg
inc
xor
sbb
mov
add
sbb
cltd
add
xchg
add
mov
clc
in
adc
repz
gs
inc
inc
mov
jo
hlt
and
fdivrs
lock
mov
jae
scas
pushl
or
xchg
mov
scas
sti
loope
mov
clc
pop
mov
sarb
iret
push
mov
outsb
push
push
clc
das
imul
sub
jno
inc
jo
or
add
push
inc
jl
hlt
mov
xchg
push
fmull
ret
add
mov
add
movzbl
mov
lcall
inc
mov
mov
cmp
jl
or
ds
dec
clc
addl
mov
jle
sub
push
jle
fcompl
or
orb
or
mov
shrl
movb
add
push
imul
jne
lcall
push
leave
push
xor
mov
inc
call
jne
pop
or
cmp
mov
and
jp
pop
jb
jo
xor
add
js
mov
insb
and
cmp
imul
jmp
or
cli
stos
and
push
adc
adc
in
and
lret
or
in
xor
pop
mov
fyl2x
test
xchg
lahf
les
pop
repnz
mov
mov
cmovno
mov
cmp
push
enter
mov
cmp
mov
scas
and
xchg
xor
loope
pop
mov
pop
movsl
adc
popa
imul
push
add
xor
mov
xor
pop
jl
inc
xor
and
adc
sub
inc
in
add
lods
cmp
mov
and
enter
lahf
fdivrs
sbb
push
popa
xor
popa
push
pop
je
in
xchg
mov
add
push
mov
cmp
loop
mov
push
xchg
fmull
test
test
sub
dec
pusha
stos
in
lret
lea
cmp
jbe
cmp
jbe
mov
xchg
aad
lret
repnz
fdivl
jle
roll
not
mov
and
insl
mov
pop
psadbw
sbb
fdiv
pop
or
add
popa
test
sub
pop
fcmovnb
add
icebp
cmp
jl
inc
jmp
push
fcoms
dec
mov
call
push
push
mov
cmp
mov
and
rcrl
xchg
jle
sti
lds
mov
shlb
sbb
hlt
enter
xchg
push
sub
fsts
mov
push
mov
test
xchg
sub
mov
es
call
push
fcomps
pop
sarl
sti
lea
or
xchg
push
push
xchg
movsl
ja
sub
xchg
jl
stc
or
gs
lret
mov
adc
aas
push
mov
into
cmp
add
mov
inc
test
lds
xchg
cmc
je
aam
mov
mov
insl
sub
movsl
sub
pushf
jmp
cmp
xchg
dec
add
inc
mov
dec
repz
mov
rorl
je
mov
sbb
push
xchg
and
loope
sbbl
les
and
and
add
and
push
and
xchg
cmpl
pop
and
cmp
shrl
test
into
push
repz
mov
loope
loope
fldl
out
lret
cmp
rolb
inc
jle
orl
add
ret
push
push
mov
fidivl
push
mov
push
adcl
cmp
sbb
cmp
out
xchg
mov
push
push
fldenv
pop
loopne
mov
inc
rolb
arpl
mov
sbb
test
shrb
stos
jle
add
rolb
inc
fsubrs
add
push
aam
jge
xchg
shlb
adc
out
add
rcrl
adc
pop
adc
mov
or
out
fdivl
mov
daa
loopne
je
aad
cmovge
pop
call
in
daa
xchg
data16
mov
sbb
lret
setae
xor
popf
add
dec
sbb
xchg
andb
out
loopne
out
orb
push
or
or
dec
insb
sub
pop
fidivrl
aaa
aas
push
fisubs
jmp
push
pop
fcompl
add
jne
ret
cmp
adc
inc
add
sbb
adc
fists
insb
or
sub
add
les
mov
scas
sbbl
jo
fstl
jg
jmp
pop
je
inc
insb
ret
ljmp
insl
pop
sub
adc
aam
and
lret
popf
sub
or
aam
dec
flds
push
and
or
add
jb
cs
lea
out
je
pop
dec
dec
pop
xchg
je
int3
or
jmp
push
pop
scas
es
pop
dec
gs
repz
jmp
loopne
incl
inc
dec
mov
loope
addb
aad
fs
decl
ret
add
xchg
sbb
fsubr
and
mov
adc
mov
xchg
sbb
add
pop
inc
jo
push
push
push
mov
xchg
pop
mov
add
adc
push
adcl
push
in
aas
dec
lahf
pop
push
jo
pushf
cli
push
pushl
xor
int3
inc
cmpsl
cmp
mov
sub
cmp
sub
push
loopne
jmp
push
pop
push
sbb
in
or
loope
mov
sub
loop
lret
cld
xor
nop
cmpsl
or
push
rolb
clc
bound
mov
pusha
daa
sbb
pop
clc
jne
mov
mov
push
outsl
adc
sbb
mov
pop
leave
xlat
jp
adc
cld
out
mov
ss
pop
or
loop
leave
clc
ja
xor
cmp
pop
out
jmp
mov
mov
push
adc
push
push
call
cmp
sbb
jmp
sbbl
in
add
adc
in
xchg
call
popa
ror
sub
pop
mov
push
divl
cmp
hlt
cs
mov
or
hlt
cwtl
ljmp
nop
push
jbe
sbb
or
divl
jp
pop
mov
mov
mov
dec
pop
add
xor
out
push
in
fsubl
cmp
movb
cmp
dec
mov
xor
addr16
pop
testb
sub
movb
movsb
add
add
mov
sbb
sub
sti
dec
ret
rorb
mov
bound
out
adcl
test
shlb
or
insb
pop
jmp
js
lea
sub
adc
adc
gs
sbb
sub
mov
pop
mov
in
movsl
daa
ss
nop
jae
jo
insb
jle
sahf
test
inc
sub
or
xor
sub
inc
fwait
sbb
mov
das
sub
push
or
pop
push
jno
sub
push
cs
mov
ret
inc
mov
pop
sbb
mov
mov
pop
mov
int
and
sub
sub
xor
dec
xor
push
fistps
xchg
push
inc
loope
xchg
jae
repnz
in
and
sbb
stos
and
and
lds
aad
dec
adc
xchg
xor
das
int3
jo
mov
mov
xchg
dec
sbb
cs
add
cmp
jno
inc
sahf
pop
mov
xchg
mov
shrb
and
imul
rorb
sub
mov
cld
insl
push
xchg
cmp
pop
push
mov
adc
popa
jne
in
fimull
daa
mov
das
dec
pop
loopne
adc
cmc
inc
mov
test
shll
adc
adc
int3
notl
out
xchg
and
int3
and
mov
and
xor
test
pushf
mov
push
daa
call
sbb
enter
lea
or
mov
cmpsl
pop
xchg
adc
or
test
imul
sbb
jl
ret
test
inc
adc
mov
in
ret
sbb
lds
dec
sub
fcoms
inc
imul
add
xor
add
cmp
cmp
sbb
cwtl
cmp
pushf
adc
or
sub
xor
cs
inc
or
mov
int3
ret
inc
outsl
dec
add
vpminsd
or
mov
add
clc
sbb
shrl
adc
stc
pushl
jae
jae
or
pop
and
xchg
imul
adc
fsubrl
and
fmull
into
add
hlt
pop
jecxz
sub
mov
add
pusha
push
insb
mov
cmp
out
insb
adc
cwtl
stos
add
push
rcr
scas
movsl
outsb
pop
mov
lea
iret
mov
push
movsl
fs
mov
loope
ss
push
cmp
dec
adc
cmp
cli
pop
or
mov
push
rcrb
xor
pop
aam
sub
xchg
fld
fbstp
push
cmp
jb
cmp
jbe
test
xor
sbb
inc
icebp
in
dec
aaa
popa
push
ret
in
push
xor
dec
je
add
mov
sbb
outsb
mov
into
or
or
roll
inc
in
adc
popa
cwtl
lret
stc
hlt
les
adc
pop
js
repnz
xchg
ret
mov
icebp
add
aaa
in
xor
cmp
je
in
mov
or
mov
cmp
addr16
je
cmp
jne
mov
sbb
dec
clc
push
cmp
sbb
dec
lea
ret
sahf
negl
dec
mov
dec
xor
push
cmpsb
test
in
mov
inc
adc
je
testl
xchg
test
in
cmp
jbe
add
jg
loope
pop
add
inc
cmp
je
sub
inc
jmp
inc
push
xchg
xchg
mov
addl
adc
sbb
pop
push
inc
sub
call
or
mov
rcrl
mov
cmp
je
aam
xchg
jne
mov
cwtl
push
adc
into
inc
jl
push
xor
rcl
inc
adc
adc
and
pop
dec
cld
inc
subb
add
cmp
and
cmc
xor
jle
sub
lea
mov
cmp
jb
pop
mov
xchg
sub
sub
aaa
cmp
jge
add
push
xor
and
sar
cld
rol
pop
mov
xor
pushf
cmpsl
sbb
inc
or
loopne
jne
ss
jno
pop
push
in
dec
pushl
and
mov
mov
inc
call
add
jae
fneni(8087
adc
sarb
shl
add
jmp
pushf
aas
insb
sti
and
cmpsb
and
or
adc
fs
jne
xor
and
lock
sub
push
mov
or
push
orb
divb
shlb
mov
test
jne
mov
or
push
call
orb
add
int3
pop
mov
push
lret
int3
inc
jg
or
jge
fdivrl
jle
es
sub
rcr
outsb
fildll
and
pop
or
jl
or
adc
pop
dec
popa
adc
jbe
lea
sbb
cmp
jbe
push
hlt
pop
arpl
and
sbbb
je,pn
test
jne
pop
jo
arpl
imul
lock
push
dec
push
cld
lods
mov
xor
adc
movb
inc
rol
dec
in
push
sub
inc
xor
xchg
adc
negl
and
add
std
push
mov
inc
and
push
adc
add
mov
or
loopne
add
daa
cmovg
and
dec
inc
adc
cs
push
lcall
mov
push
dec
lods
rolb
jb
aam
xchg
cld
adc
subb
ror
mov
push
mov
insb
mov
adc
lods
or
data16
add
xor
jmp
pop
mov
stos
out
push
push
push
imul
pop
push
js
into
test
xchg
adc
dec
pushf
sub
and
jg
jl
jecxz
ficoms
cmp
push
mov
or
xchg
mov
or
push
sbb
or
int
jp
pusha
test
insb
push
adc
push
mov
jae
loop
inc
out
add
dec
test
xchg
aam
or
xchg
add
mov
sbb
sub
in
repz
and
sbb
fsubr
dec
nop
pop
push
andl
cmp
mov
xchg
pop
cltd
aaa
mov
pushf
inc
push
movsl
or
cld
jno
mov
xor
arpl
adc
sub
push
pop
push
movl
push
adc
dec
or
xor
or
roll
pop
mov
cmp
inc
or
incb
inc
loopne
xchg
push
mov
lods
int
int3
add
add
mov
andb
xchg
loopne
cmp
scas
jo
clc
or
xor
int
cmpl
or
orb
push
pushl
cmp
imull
pop
lea
outsb
fsubr
jae
add
push
pop
push
cmpl
push
je
mov
mov
in
jbe
pop
psubd
in
or
roll
rcrb
push
sub
enter
mov
pop
push
inc
rcrb
int
fbstp
fbld
jbe
mov
jge
push
gs
add
loopne
jnp
sti
inc
inc
fwait
cmp
inc
sub
pop
pop
xchg
inc
pop
nop
push
mov
cmp
je
cmpsl
popf
mov
test
push
movsl
push
das
fisubl
dec
add
mov
sbb
or
je
test
dec
push
inc
inc
adcb
jmp
xor
push
fs
inc
xor
dec
adc
rcrb
cwtl
rcr
push
jmp
enter
mov
sub
lods
inc
js
cld
pop
orl
adc
push
sbb
clc
mov
fimull
sti
xchg
lea
sbb
shl
addl
inc
push
rorl
in
mov
iret
loopne
push
loop
inc
and
je
nop
rcl
rcpps
sub
cmp
add
add
pop
inc
inc
cmpsl
mov
mov
push
out
push
les
push
pop
mov
push
and
mov
xor
or
pusha
jb
add
ljmp
add
ret
dec
sbb
jbe
je
push
rorb
fdivl
mov
aad
pushf
sahf
das
push
and
sub
cltd
adc
xchg
pop
fmuls
push
ljmp
add
mov
cs
mov
sti
in
fsub
sub
and
inc
inc
push
push
popf
mov
mov
addl
addb
xchg
push
dec
push
cwtl
xchg
pop
popa
push
inc
push
and
movsb
pop
sti
lea
or
fdivs
pop
fstpl
pop
or
and
xchg
cmp
xchg
add
leave
add
mov
fs
test
and
cmp
xchg
and
jns
pop
dec
fistpll
dec
or
int3
rolb
fstpl
adc
push
xchg
xor
test
push
movsl
lods
cmpsb
pop
or
imul
pop
testl
rcrl
ret
cwtl
cmpl
dec
push
bound
xor
push
or
lret
or
push
push
inc
dec
mov
aad
pop
mov
sti
xor
insl
jnp
das
movl
and
js
fmul
cmpl
stos
faddl
outsl
mov
andl
in
ret
aas
sub
inc
sub
sbb
dec
test
enter
loopne
mov
inc
je
fstps
or
pop
jge
fadds
mov
rcrb
jne
push
inc
xlat
daa
adc
cmp
mov
pop
in
sbb
das
push
cmc
push
sbb
pop
mov
push
xor
test
test
out
push
mov
dec
cmp
adc
push
leave
lret
adc
mov
add
insl
lods
ficoms
inc
xchg
adc
mov
fcmovnb
mov
xchg
jne
mov
icebp
cmpsl
ret
push
movl
mov
xchg
sub
in
cmpsl
mov
jnp
inc
mov
aas
je
cmp
cmpsb
shlb
push
pop
jne
aam
sbb
flds
cmpsl
jne
push
imul
jbe
inc
pop
jne
pop
call
pmulhw
test
xorb
insl
in
xor
stc
jbe
jle
inc
jne
jmp
sbb
sub
mov
mov
sbb
mov
push
sub
pop
sub
jnp
xchg
push
mov
sbb
shlb
je
pop
in
jo
and
sub
mov
pop
pusha
pop
je
sti
mov
and
into
jno
and
imul
adc
int
lret
jae
scas
jg
add
push
or
daa
mov
testb
mov
sub
incb
je
add
cmpl
lock
pop
xchg
mov
orl
sbb
or
pusha
push
scas
or
inc
decb
cmp
push
scas
or
or
lock
push
add
add
push
jo
jge
mov
push
cmp
aas
mov
std
push
mov
test
dec
adc
push
inc
fdivs
les
pusha
add
test
xchg
and
pop
pop
xchg
sub
mov
push
xchg
rcll
xlat
push
mov
push
push
pop
pop
xchg
lret
in
pop
pop
pusha
pusha
fs
ret
mov
repnz
push
pop
inc
or
popa
push
sub
add
add
sbb
clc
sub
imul
insb
adc
and
insl
jg
sub
sub
sbb
or
jmp
push
cs
add
push
adc
shrl
add
icebp
lods
ret
mov
and
push
or
inc
adc
push
lret
aad
adc
test
push
pusha
sbb
jno
jecxz
les
stos
stos
inc
mov
jbe
or
bound
decl
add
daa
mov
shlb
xor
leave
es
pop
sbb
or
hlt
scas
sbb
ljmp
or
aas
push
loop
mov
lret
cli
jp
push
pop
pop
lea
jmp
shr
mov
je
fists
add
or
sti
and
add
mov
addl
testl
sbb
fstpt
pop
push
and
cmpsl
cmc
testl
popf
push
mov
and
push
xor
sti
jae
or
addr16
imul
mov
mov
shll
mov
mov
rep
mov
jb
jne
and
test
sbb
in
loope
jge
mov
je
clc
jg
pusha
cmp
and
push
mov
je
mov
cmp
push
jo
add
ss
in
xlat
push
inc
or
dec
out
pop
inc
flds
or
je
jg
add
xor
mov
adc
sbb
mov
mov
cmp
je
push
pop
daa
inc
mov
les
add
pop
sbb
pop
bound
xor
leave
clc
cmp
std
push
lcall
into
sbb
jbe
push
adc
pop
je
ds
jae
pop
imul
add
add
add
call
lcall
pop
push
push
xor
shlb
or
or
cmp
adc
js
imul
mov
int
mov
test
jl
push
sbb
ret
add
es
lcall
cmp
sub
or
inc
js
bound
andl
xlat
sub
incl
cmp
xor
inc
or
push
adc
mov
hlt
mov
sub
mov
sbb
clc
jne
push
lahf
pop
ja
xor
mov
es
mov
cmp
hlt
cmpsl
cs
mov
lea
add
pusha
je
divb
push
lea
push
nop
jle
or
push
inc
add
andb
mov
xlat
test
jge
jb
push
fsubrl
xor
inc
cmp
lea
jns
adc
inc
hlt
mov
lock
add
cli
hlt
sbb
push
pusha
sub
dec
mov
and
cmpsl
lock
loop
inc
inc
mov
cli
add
js
dec
inc
push
rcl
pop
int
add
mov
xchg
stc
dec
les
mov
scas
daa
mov
jecxz
mov
dec
mov
bound
ret
and
add
subb
cli
cmpb
fdiv
push
popa
orb
lea
xor
cmp
orl
int
and
push
fcomi
mov
cmpl
adc
adc
mov
push
rolb
inc
rcll
hlt
test
and
mov
cmpsb
push
or
clc
mov
loope
mov
mov
inc
xor
jb
pusha
scas
xchg
push
cmpb
pop
lods
gs
jns
adc
add
jle
aad
and
mov
loopne
movsl
movsw
mov
loopne
and
xor
sbb
loop
and
sub
in
imul
sbb
pop
mov
push
test
pusha
es
faddl
in
clc
inc
je
adc
bound
adc
inc
xor
int3
mov
mov
inc
cli
fnstcw
out
clc
jmp
sub
push
iret
xchg
adc
push
xor
or
and
inc
add
dec
push
aaa
loopne
rolb
sub
aam
ficoml
adc
movsb
add
lea
lock
push
jmp
mov
lret
add
in
push
insb
pop
les
or
mov
cmp
mov
sbb
mov
dec
dec
jne
adc
sbb
or
addl
inc
jo
xchg
sbb
addb
jbe
push
aas
in
shr
mov
jmp
xchg
cmp
cmpl
out
cmp
cmpsl
cltd
aam
leave
push
ficoms
int3
repnz
inc
shlb
dec
aam
int3
sarb
scas
fmuls
fcoml
lea
sbb
pop
xor
push
movsb
fwait
les
test
mov
cmp
aam
ds
out
scas
and
pop
mov
sub
roll
dec
xchg
inc
push
push
dec
push
mov
mov
push
mov
es
test
or
mov
and
inc
mov
pusha
incl
incb
jl
jmp
pop
out
and
mov
fwait
cmpsb
sbb
loope
sbb
sbb
add
or
lds
mov
pop
leave
stos
cmp
adc
push
movsb
movl
sbb
in
stos
push
out
test
daa
mov
cmpsb
je
and
xor
daa
mov
pop
add
xor
fsubs
jge
inc
adcb
aad
dec
dec
rep
clc
int3
mov
shlb
aam
adc
add
cmp
jmp
lock
dec
clc
inc
push
jge
and
xor
lock
pop
jo
jmp
inc
ds
lret
clc
inc
js
push
push
adc
lods
or
sbb
push
xor
mov
jge
lods
push
push
or
add
or
pop
int3
cmpsb
bound
nop
or
aas
ret
or
pop
pusha
dec
adc
aas
sbb
inc
xchg
loope
mov
sbb
pop
ds
hlt
sub
stc
mov
sarb
cmp
rolb
xor
mulb
jecxz
xorl
clc
push
pushw
or
cli
subb
inc
xchg
xlat
xlat
mov
or
cmpsb
call
sbb
popa
pop
leave
sub
jg
inc
clc
pop
mov
cmp
push
das
loope
pop
push
push
fs
add
add
ja
into
add
ljmp
adc
push
loopne
and
rclb
inc
dec
cmp
out
popf
orb
xchg
ret
fdivs
inc
xchg
rcrb
jle
jne
pop
and
xchg
inc
dec
or
xorb
xchg
lods
mov
mov
fnsave
test
pop
ret
pushl
push
iret
iret
pop
inc
and
ja
cmpsl
jo
je
jo
cltd
jo
push
add
mov
jo
in
jge
sbb
into
cmp
inc
stos
jle
or
int3
daa
push
pusha
xchg
xchg
sbb
popf
or
lock
cli
adc
adc
mov
pop
iret
mov
mov
add
sbb
fiaddl
xlat
push
loopne
lock
xchg
cmp
or
daa
ret
cmp
xorb
aaa
ljmp
pop
outsb
mov
inc
jle
enter
add
jne
cmp
cmp
loopne
mov
in
xor
scas
sub
ja
test
lds
out
sbb
dec
ret
or
rolb
dec
mov
xchg
ds
or
push
cmpsl
mov
fsubrs
shrb
or
sub
add
push
or
mov
jle
push
xchg
addr16
xchg
xlat
loopne
add
hlt
push
jo
push
repnz
fdivl
mov
outsl
adcb
dec
xchg
or
adc
sub
iret
pop
cltd
xor
lcall
test
add
popa
adc
cmp
pop
mov
pop
pmaxsw
incl
adc
jbe
fidivs
xlat
xor
mov
add
push
or
push
lea
aam
stos
rcrb
lea
jmp
jecxz
fwait
dec
adc
sub
jp,pn
push
jmp
inc
cli
test
pop
mov
inc
jnp
mov
or
add
pop
test
xor
mov
dec
or
adc
es
sbb
cmpsb
imul
popa
cld
xor
jb,pt
and
add
xor
inc
sbb
pop
or
xor
add
dec
repz
push
add
ret
fbld
jb
fstps
mov
test
sbb
jle
jnp
jge
cmpsl
push
and
xchg
or
or
and
inc
shrb
leave
xchg
push
insb
push
test
aaa
mov
lds
arpl
cmp
or
or
test
jns
add
adc
test
iret
push
shlb
icebp
rclb
insb
fs
imul
daa
data16
outsl
ss
push
push
inc
pop
in
fdivs
inc
fsubl
ret
or
xor
push
das
dec
and
sub
xor
lret
jg
jg
xchg
jns
add
pop
iret
mov
cmp
dec
fstpt
and
addb
pop
movl
cmp
inc
dec
test
inc
dec
int
adc
xor
andl
and
dec
sbb
sub
cwtl
dec
or
sub
shrb
push
es
enter
mov
mov
or
adc
lcall
xor
lret
mov
inc
mov
out
or
dec
sub
fcmovbe
mov
or
roll
push
and
sub
cli
add
addl
xchg
mov
add
fsts
or
or
js
jmp
fimull
sub
pop
jle
mov
je
sbb
ljmp
xor
push
lods
add
inc
or
and
cmp
sbb
mov
and
ja
enter
mov
sub
dec
aam
lcall
adc
xor
cmc
mov
les
fidivrs
and
mov
std
dec
js
insb
orl
push
cmp
fstpt
xchg
flds
popf
mov
sbb
mov
xorb
sbb
sbb
jnp
cwtl
movsb
jmp
jge
sub
notl
push
push
dec
ja
fsubrs
call
push
jae
rcrl
call
inc
sbb
das
sbb
loopne
sub
jne
aaa
cmp
mov
roll
mov
xor
mov
adc
adc
xchg
test
gs
dec
ficompl
dec
mov
pushf
imul
jne
ljmp
adc
dec
xchg
int3
mov
and
inc
mov
pop
movsb
inc
pushf
mov
xchg
jne
mov
or
testb
mov
lods
or
lods
shlb
add
push
test
push
xor
lahf
push
or
add
sub
cmp
mov
aam
pop
sbb
rcrb
sbb
push
jmp
mov
push
or
popa
push
sub
push
and
sub
mov
fsubl
pop
jmp
adc
mov
pusha
jne
or
xor
cli
std
incb
jge
bound
test
xchg
xchg
aam
out
push
sub
rolb
sub
clc
call
fcoms
push
and
jmp
pop
cmp
jbe
adc
scas
jmp
data16
sbbl
jecxz
adc
cmp
enter
dec
loopne
mov
addb
mov
xor
cmp
lret
cmpb
stos
sahf
pop
jbe,pn
fdivl
ret
repz
mov
add
or
insb
sbb
popa
out
fidivrs
jp
xchg
mov
shll
mov
pop
loop
push
lods
mov
loop
xchg
out
mov
mov
jno
enter
mov
inc
sbb
jne
cmp
push
fsubr
adc
cld
mov
inc
rclb
dec
dec
xor
inc
rcrb
mov
push
cmpsl
test
das
inc
push
outsb
imul
inc
and
fstpt
add
lcall
data16
enter
int3
xor
cmp
or
mov
and
jae
pushf
add
outsl
cmp
jmp
mov
or
push
push
fwait
mov
mov
add
add
arpl
xchg
push
or
push
mov
sub
mov
push
xchg
cltd
push
or
push
and
xchg
xor
fld1
or
loopne
cmp
shrb
cmc
jnp
mov
mov
cmp
pop
xchg
pushf
fs
pop
pusha
ljmp
sub
lock
popa
sub
es
sbb
into
xchg
imul
addr16
out
inc
and
jne
fwait
sub
popf
cmp
int3
pop
push
add
and
mov
das
mov
pusha
mov
lods
xor
js
mov
inc
in
cvtps2pd
sub
cmp
add
rcrb
jbe
sub
add
mov
icebp
das
movsb
push
pop
mov
add
or
dec
lret
push
inc
pop
std
cmpl
shlb
or
inc
lea
sub
inc
push
rorl
aas
popa
lea
jbe
ret
sti
mov
dec
aas
xor
insb
int
dec
inc
jp
cmp
pop
push
andb
sbb
xchg
sub
int3
push
popa
dec
xlat
ds
jne
dec
add
hlt
sub
add
out
xor
lock
dec
add
or
add
mov
ljmp
push
or
inc
ret
jns
popa
sub
sub
adc
push
in
sbb
je
out
adc
test
lret
imul
jne
ret
add
push
sub
adc
ret
sub
push
add
pop
adc
pop
pop
movsb
sub
xchg
adc
arpl
push
imul
fstl
adc
in
aad
adc
je
pop
jb
inc
dec
xor
ss
xchg
fucom
hlt
inc
pop
rcr
cmp
inc
clc
enter
inc
pushf
and
pop
fmul
add
jg
lret
lods
cld
push
pushl
push
ds
xchg
and
rcrl
neg
sbb
inc
push
test
jp
cmp
es
mov
clc
adc
lock
add
aas
mov
nop
fmuls
loopne
enter
xchg
aad
je
pop
sbb
fsub
add
jge
lea
cmp
add
call
arpl
into
and
add
stos
cmp
popf
xchg
pop
adc
jae
dec
xchg
adc
orb
dec
sub
jb
adc
es
adc
enter
adc
adc
imul
and
subb
sub
orb
jae
sub
rcll
enter
push
mov
data16
hlt
cmpl
je
cmp
or
stos
cmp
xlat
test
lret
pop
cmpsw
or
xor
mov
outsb
or
ja
ds
mov
mov
xchg
test
inc
sub
inc
lret
std
add
dec
aas
inc
ss
test
cmp
in
inc
inc
in
jl
inc
and
out
add
adc
mov
cmpsl
std
jo,pt
sarb
ja
bound
add
pop
out
or
push
push
jecxz
xchg
pusha
es
sbb
mov
in
mov
add
inc
push
stos
sub
xchg
lods
out
int
push
test
jl
dec
ret
pusha
in
jg
shlb
or
lret
push
sub
push
adc
add
in
lods
test
add
lret
sbb
in
add
xor
xor
add
popf
sbb
test
pop
cpuid
inc
mov
mov
xor
and
daa
push
hlt
and
jle
mov
add
and
mov
mov
loopne
icebp
add
addr16
lea
mov
dec
stos
popf
mov
bnd
cmpl
sbb
sti
sahf
xchg
push
out
mov
test
push
insl
loope
xor
cli
pusha
adc
cmp
mov
js
ja
dec
data16
inc
xchg
loope
ret
adc
mov
or
nop
in
pop
sub
fstps
lods
cmp
jbe
push
push
push
pop
inc
dec
jg
dec
loop
test
jmp
xor
dec
cmp
mov
mov
adc
pop
test
adc
add
sbb
adc
dec
ret
pop
pop
inc
jo
pop
addr16
add
div
mov
pop
or
stos
fdivs
inc
add
sbb
outsb
sub
fisttpl
adc
nop
jecxz
ss
ljmp
outsl
addl
cmp
cmp
into
popf
jne
jg
jle
add
ja
aad
fdivrs
jl
pop
add
sub
loop
or
or
mov
xrelease
and
repnz
mov
mov
ret
imul
push
and
into
fnstcw
loope
jle
pusha
jmp
pop
lock
lods
imul
in
adcl
mov
push
insb
pop
inc
and
cld
rolb
mov
inc
xor
ret
push
lahf
push
adc
pop
xchg
sub
xchg
dec
nop
push
add
push
and
cmovae
or
fldl
inc
push
test
cmp
jl
dec
lea
jle
lea
nop/reserved
inc
mov
pop
push
repz
dec
jno
int
adc
jecxz
mov
sub
cli
daa
mov
filds
nop
adc
imul
pop
mov
xchg
das
sub
xor
arpl
or
in
dec
ret
dec
int
repnz
scas
jae
push
cmp
ljmp
ja
addb
mov
mov
lea
inc
lea
loopne
adc
into
pop
rcrl
xchg
idivl
inc
dec
hlt
jg
std
adc
roll
push
mov
cmpl
push
mov
inc
mov
or
int
add
popf
cs
xor
sbb
pusha
ret
push
dec
gs
clc
add
lret
pop
rorl
mov
inc
push
into
or
test
test
push
pop
jl
push
xor
loop
jp
xor
adc
movsb
cmp
std
add
in
hlt
jbe
stc
shlb
das
sub
into
inc
syscall
xchg
push
push
mov
cli
cmc
scas
push
faddl
adc
push
inc
arpl
mov
dec
sbb
das
cltd
xor
and
sbbl
inc
xor
shll
sbb
jne
xchg
or
mov
add
push
lret
adc
push
lock
bound
pop
mov
sub
dec
fnstsw
push
out
cmp
push
sbb
dec
xchg
xchg
fsubrs
repnz
jmp
pusha
sbb
adc
lods
mov
mov
add
andl
lea
insl
push
or
pop
xchg
in
bound
int
pop
cmp
xor
out
daa
add
or
aas
mov
add
mov
dec
jecxz
daa
sahf
mov
sub
rorl
pusha
stos
lea
rcl
xchg
push
sub
push
jns
pop
add
movsb
sub
pop
jo
adc
mov
adc
inc
dec
or
add
inc
mov
dec
xchg
push
jne
pop
bound
lcall
pushf
mov
enter
mov
cmp
jne
add
test
adc
mov
push
inc
sub
insl
jmp
loope
lock
xor
sarb
and
cmp
popa
jmp
xchg
popf
aas
dec
cmp
out
or
add
pop
add
push
jecxz
or
and
fldt
fadds
fdivs
xorb
or
fistps
pop
hlt
add
leave
adc
jbe
inc
cmp
jmp
cwtl
adc
testb
lret
mov
sbb
rcl
out
sbb
scas
cmp
das
sbb
data16
and
sbb
in
pop
or
std
mov
cmp
jl
jmp
mov
popa
test
xchg
or
test
and
xchg
cmpsl
lret
fs
or
insb
insl
mov
sub
sahf
mov
loopne
jmp
pusha
in
lea
and
rcl
mov
shrb
pop
decl
pop
pop
mov
add
cmp
jae
lea
jmp
sbb
or
je
inc
cmp
jbe
pop
sub
or
sub
xchg
push
lahf
push
in
loope
mov
adc
jmp
sub
or
adc
sbb
jecxz
dec
push
mov
adc
xor
mov
jne
xchg
sub
push
shl
gs
fcomip
scas
bound
hlt
imul
jl
call
repnz
add
mov
pop
mov
ss
stos
or
out
inc
push
add
mov
pop
xchg
sub
ds
adc
jnp,pn
js
inc
xor
jb
ret
add
pusha
loopne
mov
adc
punpcklbw
sti
add
js
mov
mov
pop
add
push
xor
rcrb
faddp
repnz
adc
dec
mov
stc
notl
flds
xchg
ss
shr
notl
add
dec
aam
jb
cmpb
aam
mov
inc
fwait
mov
in
inc
lds
lret
push
sti
imul
mov
or
rcl
jecxz
push
int
xchg
push
je
mov
movsb
jg
sbb
mov
jmp
cmp
mov
push
and
push
adc
test
add
xchg
and
pop
inc
outsb
scas
cmp
out
or
fsubrs
hlt
push
fsubs
insl
hlt
lds
push
push
sbbb
or
push
sub
or
lods
fcomps
lret
jae
push
sub
roll
pop
in
daa
outsl
call
adc
pop
or
imul
or
or
xchg
add
nop
adcb
addb
push
rcr
inc
je
xchg
xor
inc
xchg
cmpsl
shlb
or
enter
lret
push
pushf
sbb
jbe
push
pop
sbb
adc
pop
xchg
outsl
sub
or
xabort
adc
addl
xlat
ljmp
push
pop
xor
mov
inc
sti
testb
adc
and
loopne
rclb
add
pop
mov
jb
je
sbb
lods
push
cmp
data16
movsb
aam
push
or
cmp
shlb
cld
je
test
addr16
rorb
clc
jne
mov
inc
lret
jle
push
test
cmp
dec
or
sub
shrb
test
cmp
add
test
or
jnp
imul
jbe
sbbl
hlt
loop
mov
or
push
add
lods
and
pop
push
call
push
cmp
call
add
sbb
fxtract
jne
in
inc
pop
push
js
fistl
add
clc
sar
sub
jne
mov
pop
lods
push
mov
sbb
cld
stc
repz
fmuls
inc
popa
inc
dec
dec
inc
add
mov
xlat
or
loope
test
ja
push
cmp
insl
push
push
shrd
mov
arpl
mov
mov
or
pop
cmp
mov
pop
fisubrl
xchg
in
out
mov
test
neg
sbb
jle
xor
and
bnd
movzwl
push
cmp
rclb
mov
mov
inc
clc
mov
ret
leave
xchg
jp
and
popf
cmpsb
cmp
je
adc
cmpsb
in
stos
jo
sub
cmpl
popl
dec
jbe
jnp
sub
mov
mov
test
je
inc
adc
jg
mov
cmpl
jne
cmp
jbe
jnp
mov
or
jne
push
mov
dec
rorb
sub
hlt
cltd
xchg
adc
test
dec
cmp
or
lgs
mov
push
jmp
rcll
aad
ja
addr16
inc
pop
or
repz
push
or
xchg
adc
test
fimuls
das
cmp
subl
jns
adc
or
sbb
inc
mov
popa
stos
mov
xor
jl
loope
sub
cmp
sub
cmpsb
add
push
cmp
iret
outsl
pop
inc
sbb
fstl
dec
add
xor
add
add
lods
js
addr16
les
sbb
mov
adc
pusha
das
mov
inc
and
or
xor
fdivs
sub
adc
jnp
aad
into
das
movsl
js
fstpl
std
call
or
movsl
clc
jns
dec
push
sub
adc
xor
lahf
sti
fldenv
enter
push
inc
sub
push
cwtl
scas
cmp
test
adc
sahf
sub
lock
dec
cwtl
inc
mov
in
fcmove
sbb
pop
xor
test
jl
jmp
popf
sbb
mov
and
sbb
mov
scas
popa
aad
testb
es
pop
dec
test
inc
loope
jecxz
mov
inc
stos
jl
sub
add
jmp
mov
pop
jecxz
test
movsl
dec
and
or
push
insl
cs
mov
add
iret
mov
xchg
xchg
xor
test
mov
divl
xor
xor
std
inc
cmp
leave
ror
jae
cmp
push
fidivs
adc
pusha
sarb
sub
mov
jo
xlat
pop
cld
cmp
and
dec
ljmp
push
cmpb
mov
jb
push
jae
nop
shr
jb
push
pop
xor
mov
nop
xchg
pusha
mov
cmp
adc
cmp
push
jo
fisubrl
dec
mov
pop
cs
movsb
adc
xor
outsb
and
push
lret
std
pusha
mov
jg
push
jno
rorb
fisttps
fadd
dec
push
and
test
and
popf
ret
xor
mov
lcall
dec
clc
add
xor
aas
jmp
mov
popf
add
inc
cltd
xchg
pop
sbb
sbb
shll
push
add
dec
mov
push
xchg
adc
in
cld
out
arpl
adc
cmp
std
cmp
lock
mov
movsl
fsubl
jno
mov
cmp
cmpsl
and
jge
cmpsl
shll
outsl
sbb
cmpsb
cmp
packsswb
mov
mov
adcl
fdivl
or
xor
fs
jge
and
icebp
cmp
add
cmp
xlat
or
addr16
call
push
je
push
es
cwtl
pop
jl
push
and
mov
adc
add
xchg
lods
mov
push
dec
jo
xor
add
sub
mov
or
add
dec
push
outsl
shll
adc
mov
adc
mov
xchg
je
mov
sub
sbb
inc
cmc
sbb
mov
clc
mov
cmp
in
arpl
and
int3
out
add
push
aam
mov
mov
mov
sbb
push
sbb
sbb
fmull
cmpsb
push
add
push
jle
ret
inc
shll
mov
mov
leave
insl
inc
sahf
mov
dec
loope
andl
or
je
mov
addb
testl
subl
fstl
pop
fdivrs
cmp
jbe
es
push
add
ret
pop
mov
mov
inc
sub
mov
or
dec
rcll
and
xchg
icebp
add
or
xor
cmp
adc
mov
mov
jae
pop
jnp
sti
jb
mov
and
sub
je
inc
add
lea
push
pop
sahf
add
pushf
mov
xor
test
sbb
add
popf
pop
sbb
call
push
xor
mov
push
fisubrl
cmp
mov
push
mov
js
adc
add
jo
push
jae
lea
ja
cmpb
jne
ret
fiaddl
add
clc
sti
inc
mov
push
push
lea
jae
stc
add
push
xchg
sbb
pop
hlt
stos
pop
mov
andl
lea
sbb
cmp
mov
sub
or
dec
cld
ret
mov
lea
add
fcomps
adc
outsb
sbb
stc
jae
or
push
inc
sub
dec
and
dec
ja
push
xchg
and
cltd
lods
add
sbb
cmpsl
cwtl
loopne
pushf
mov
mov
dec
dec
ret
inc
adc
or
cltd
ficomps
movsl
mov
push
sbb
adc
cs
mov
imul
xor
and
jae
adc
les
jmp
imul
push
hlt
sub
das
dec
and
sub
inc
push
pop
xchg
lret
dec
lods
add
or
cmp
xor
pop
push
lea
cmp
sbb
sub
popf
movsb
scas
dec
out
ja
or
jb
pop
adc
fisttps
addr16
out
mov
cmpsl
xor
fsub
add
add
add
add
add
push
sbb
ret
push
gs
adc
lea
notb
sub
mov
mov
mov
ljmp
mov
lock
mov
movsl
movsl
sarl
sbb
mov
repz
mov
mov
xor
je
inc
and
data16
xchg
or
sbb
mov
add
push
inc
add
or
mov
jmp
insl
pop
jmp
push
jnp
dec
add
cmp
inc
pop
jmp
and
filds
jmp
mov
cmc
add
es
jmp
xchg
add
push
xor
or
mov
pop
jecxz
cmp
ja
cmpb
xchg
lock
cmp
xchg
cs
mov
pop
adc
mov
cmpb
ret
push
jae
lea
push
dec
mov
sbb
inc
push
pop
jg
pusha
pusha
stos
mov
or
jmp
pop
ret
scas
fdivs
pop
or
ret
jo
pop
cmpb
cmc
loopne
adc
insb
les
popa
xchg
fdivl
imul
xor
fnstenv
inc
jmp
push
cmp
cmp
leave
push
mov
fs
ss
jo
ret
sbb
cmp
mov
jge
outsb
xor
and
ret
nop
lret
sub
jmp
push
sti
outsb
je
or
cmp
ficoms
out
insb
testb
mov
movsb
mov
divb
fnstcw
cmc
dec
in
rol
push
push
push
add
push
add
sbb
popf
scas
lea
test
outsb
and
pop
cmp
or
jno
test
cli
repz
cmp
sub
cmpl
pop
mov
xchg
jae
int3
inc
mov
icebp
push
fidivrs
jnp
aaa
xchg
or
out
jmp
push
inc
add
mov
mov
and
pop
and
std
pop
push
inc
data16
pop
cmpsb
shll
dec
ret
shl
in
cmp
cmp
dec
and
inc
ja
inc
cmpsl
mov
cmp
cmc
lret
inc
pop
cmpb
xchg
fldt
push
inc
or
insl
test
pop
mov
cmp
inc
scas
jnp
sub
push
inc
or
add
mov
inc
inc
es
fadd
pop
add
fstpl
ret
inc
and
xchg
inc
add
rol
sbb
add
std
jno
ds
or
pop
rorb
inc
mov
pop
add
cmp
arpl
addr16
in
and
cmpsb
imul
imul
lods
sub
xor
pop
sbb
pop
in
sahf
ret
movb
sbb
or
jbe
add
lock
int
add
inc
arpl
and
xor
add
inc
mov
mov
pop
lret
in
add
mov
mov
out
or
add
cmc
push
cmp
ss
jmp
jl
loope
pop
imull
mov
sub
and
inc
inc
add
sbb
mov
mov
adc
std
rep
fadds
pop
lods
adc
imul
js
ds
add
clc
xor
pusha
cld
cs
xchg
pushf
cmc
test
shlb
cmp
sbb
pop
ret
pop
pop
jg
icebp
ss
cmpl
lcall
shll
adc
stos
outsl
pusha
jo
adcl
push
daa
and
pop
cld
dec
jge
inc
xchg
sbb
pop
adc
sub
je
test
lcall
fimuls
or
or
mov
add
xchg
rorl
aas
fcmovb
or
sbb
outsl
int
push
add
or
mov
shlb
loope
sbb
adc
dec
inc
ss
ss
adc
or
mov
dec
sub
sub
nop
test
test
pop
xor
leave
add
and
pop
xor
ret
mov
xor
pop
xchg
loopne
mov
xchg
push
sub
loope
xor
jecxz
lahf
mov
mov
mov
push
into
sub
and
insl
push
dec
sub
mov
add
mov
push
mov
and
int3
or
test
out
jnp
pop
subl
clc
stos
sbb
stc
scas
jle
jne
mov
sub
lds
pop
push
push
fisubrs
sbb
jmp
cwtl
rol
or
push
xchg
or
mov
adc
dec
push
push
rorl
fs
push
sbb
mov
add
insl
adc
std
std
es
and
js
mov
fildl
fstps
adc
fsubrl
adc
clc
sbb
aaa
or
sarb
sbb
leave
dec
push
fdivl
int
data16
mov
sub
rcl
push
out
pop
or
pop
xor
mov
cmp
cli
push
andb
adc
or
push
and
cmpb
test
mov
push
or
incl
push
push
enter
pop
ds
xchg
orb
push
push
sub
jmp
jno
popa
lcall
outsl
ret
pushf
out
cld
out
lahf
add
out
adc
pop
jl
xchg
fdivrp
fidivrs
aaa
gs
call
xchg
aad
loopne
int
imull
mov
mov
loopne
pushf
dec
jo
adc
jae
loopne
or
pushf
and
sbb
inc
adc
pop
fwait
ret
adc
sbb
sbb
dec
sub
ss
aam
cmp
addb
pop
pop
dec
mov
fbld
add
mov
add
jle
adc
ss
or
rcll
in
xchg
enter
xchg
dec
pop
push
mov
lock
xchg
dec
rcrl
insb
call
cmpl
xlat
sub
push
inc
dec
jns
mov
inc
and
jmp
cmp
or
aam
push
clc
push
push
pop
add
adc
js
fcmovne
fsubr
pop
ds
push
mov
xchg
loopne
mov
fidivs
adc
shll
loopne
lods
sbb
add
mov
and
push
jb
push
push
jecxz
sbb
and
dec
clc
loope
jl
js
fndisi(8087
clc
test
loopne
and
cmp
add
xchg
mov
inc
mov
sbb
ret
adc
repz
pusha
pop
add
ror
inc
push
inc
sahf
push
loope
sbb
ja
sub
imul
push
cld
mov
in
and
sub
rclb
rorl
enter
sbb
push
mov
xor
and
push
lret
or
mov
popf
sub
mov
xor
inc
add
cmpsb
or
or
mov
inc
stos
or
mov
test
leave
xor
sbb
out
inc
dec
ffreep
daa
adcl
adcl
push
daa
and
cld
and
sbb
repz
push
scas
call
cld
push
fsts
add
js
or
cmp
sti
dec
push
sbb
and
dec
push
ss
movsb
jne
xor
fcomps
stos
ret
xchg
cmpsb
loopne
jne
mov
shr
pop
loopne
sbb
clc
test
xchg
push
clc
popa
in
lret
xchg
inc
test
mov
add
push
push
inc
mov
and
adc
daa
jge
adc
lock
xor
lods
ret
loopne
jl
test
es
adc
scas
cmp
bound
inc
pop
jecxz
pop
jl
subl
add
cmp
into
sbb
insl
loopne
cmp
sahf
push
lea
outsl
push
enter
daa
lods
pop
dec
and
adc
jne
int
jg
and
adc
mov
push
nop
pop
inc
mov
hlt
dec
sub
push
sub
push
cli
push
or
pop
dec
add
inc
or
mov
into
lods
or
gs
push
loopne
and
cld
pop
call
lea
sahf
mov
push
sbb
subl
fldl2t
inc
mov
pop
push
dec
push
cmp
push
mov
aas
inc
iret
pop
cmp
popaw
popf
test
push
dec
mov
dec
pop
sub
loope
cs
into
imul
shr
into
out
push
loope
add
pusha
sbb
outsl
or
idiv
pop
pop
cltd
out
jmp
je
add
pop
cmp
das
outsl
push
xor
add
add
jne
inc
aas
and
push
jecxz
add
dec
adc
jl
mov
inc
mov
imul
mov
es
jl
aas
dec
mov
lea
ds
adc
sub
xchg
add
xor
or
dec
jns
adc
lret
iret
sbb
shrb
adc
insl
aaa
pop
dec
adc
shlb
inc
add
jmp
sub
popl
inc
shrb
inc
push
movsb
stos
rorl
fcoml
dec
and
xor
or
je
inc
dec
ret
je
inc
adc
jnp
ja
sbb
setb
or
push
dec
rolb
or
sub
sub
adc
and
sbb
les
in
js
je
xchg
inc
subb
cwtl
mov
xor
cmp
sbb
loope
mov
sub
or
jb
dec
push
sub
mov
and
test
imul
push
add
mov
xchg
and
adc
js
sar
add
inc
add
sahf
add
xor
rolb
pop
inc
sbb
inc
pop
scas
sub
inc
add
enter
leave
mov
shll
push
cmp
test
inc
in
mov
jnp
mov
inc
test
jo
roll
xor
ret
mov
push
push
dec
enter
ja
dec
xchg
sbb
push
cmp
imul
xchg
cmp
mov
xor
sbb
movl
push
shufps
pop
dec
mov
rorb
popf
or
pop
sahf
shr
test
add
xlat
shr
sti
lods
addr16
jne
andb
jo
cmp
or
fildl
divb
push
add
es
jno
add
jne
pop
xchg
rorb
or
pop
mov
mov
or
jne
mov
shlb
pushl
es
mov
rorb
mov
pop
push
js
popf
fists
lahf
cmp
ja
lock
mov
lea
push
js
into
add
fmuls
sbb
add
jo
push
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
fisubrl
rorb
push
mov
sti
loope
fists
movsb
inc
mov
std
sbb
jge
push
cmp
aad
mov
adc
xlat
mov
mov
push
sbb
jl
adc
repz
xor
ret
or
les
imul
outsl
jp
or
jbe
mov
loopne
push
sbb
mov
jbe
fcompl
dec
scas
lcall
inc
neg
js
jnp
mov
enter
dec
add
jg
push
jnp
pusha
cltd
gs
lods
push
sub
ret
mov
inc
pop
push
cmp
push
jmp
mov
dec
sub
adc
daa
adc
lret
inc
cmp
insl
add
adc
mov
enter
xchg
pop
push
rcll
js
loope
aam
push
shl
pop
xchg
js
dec
adcb
andl
sbb
xchg
dec
cli
rolb
push
jne
dec
cli
or
fidivl
jne
sub
sbb
jne
add
out
rorb
jne
push
push
je
mov
or
sbb
dec
jno
and
cmp
js
enter
cld
push
lds
jmp
mov
dec
sbb
and
fs
mov
cmp
je
add
xchg
or
push
or
loopne
inc
lods
jne
xorb
cmpsl
xor
jb
push
rclb
cmpsl
fsubs
imul
data16
cmp
inc
xlat
push
aaa
push
jnp
push
sbb
push
push
cmp
and
jg
fdivrl
jl
mov
mov
adc
lret
jae
rolb
fidivs
pop
sbb
out
push
sbb
push
cmc
push
jno
ja
fdivrs
pop
xor
inc
xchg
and
rcrl
push
test
dec
outsl
fdivl
mov
mov
add
je
stc
lds
clc
mov
mov
adc
lcall
pop
clc
or
loopne
pop
imul
or
add
push
or
add
xchg
add
mov
mov
mov
or
inc
adc
xor
sbb
adc
inc
dec
dec
clc
fstl
jl
adc
sub
js
xor
pop
add
sbb
cmp
add
dec
push
cs
add
lods
lds
in
arpl
add
shll
mov
aam
push
push
shll
insb
jo
push
ss
je
jl
add
int
or
call
sub
mov
sti
or
mov
jbe
or
xor
xor
addr16
scas
sub
inc
sbb
pop
js
sub
int
pop
adc
and
pop
movb
sbb
mov
mov
cwtl
sbb
sbb
xchg
fmuls
imul
sbb
nop
add
js
jo
sbb
add
nop
fs
push
cmp
sbb
jle
add
adc
add
jo
js
pop
dec
dec
push
cmp
sub
or
or
sbb
dec
and
adc
add
pop
inc
xchg
add
adc
lea
jne
cmp
gs
sbb
addps
push
mov
ja
mov
adcl
sub
mov
iret
pop
test
xor
pop
dec
lret
lea
rol
cli
sbb
popl
lock
and
jne
sbb
or
mov
pop
dec
dec
fs
mov
es
add
in
mov
addb
mov
xor
or
or
xor
repz
push
sbb
sub
dec
and
mov
test
jo
and
or
add
shl
ret
mov
pop
and
ds
sbb
pusha
and
movsb
addl
xor
jnp
fstpl
jle
ret
sbb
xorl
or
addl
jne
orl
xor
inc
dec
adc
imul
data16
test
mov
xchg
mov
add
add
push
test
stc
fldl
jb
sbb
das
add
lods
cmp
int3
dec
jo
sub
adc
imul
inc
xchg
les
mov
jge
xchg
scas
add
xchg
xchg
mov
mov
mov
sub
or
clc
loopne
xchg
and
icebp
loope
data16
cmp
xchg
loopne
jne
xor
jb
inc
xchg
ja
fwait
sub
lahf
jo
cld
shll
push
dec
mov
add
sub
sahf
loopne
and
movsb
into
js
jmp
lock
or
out
mov
or
sbb
into
cmp
jle
cwtl
scas
push
push
pop
add
inc
cmp
push
jbe
push
push
popf
lock
dec
xchg
adc
cli
out
fidivrs
outsb
push
adc
jnp
shlb
lods
pop
mov
cmpsb
xor
sub
cmovo
dec
dec
push
adc
push
std
dec
or
int3
jnp
and
loope
and
pop
push
ret
test
inc
xchg
fdivl
rclb
pop
xor
xchg
adcb
mov
jmp
call
test
sub
cmc
inc
xchg
enter
in
inc
nop
repnz
push
jo
daa
test
scas
rorb
push
outsb
dec
jb
sbb
cli
nop
outsb
adc
lea
jg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
addb
or
lock
hlt
mov
and
inc
lock
cmpl
add
sti
mov
pcmpgtw
jae
orl
ror
and
icebp
or
out
movsb
xor
shll
pop
pop
lds
lcall
sbb
cmp
loopne
mov
cli
je
popf
add
loop
enter
scas
dec
xor
negb
push
cmp
lea
push
icebp
push
insb
sbb
sti
push
sub
inc
and
jmp
push
jne
sbb
roll
or
push
insb
pop
or
jnp
and
cld
nop
in
cwtl
mov
mov
fbld
and
fstpl
mov
test
push
cmp
and
int
cltd
push
push
pop
fiaddl
shr
mov
mov
ret
lret
mov
lret
and
push
imul
movsb
cmp
xor
cmp
fisttpl
inc
std
mov
and
pop
insl
imul
mov
push
ret
movsb
arpl
cs
aam
fstpt
pop
cmpl
mov
jbe
pop
jle
jge
and
gs
jbe
jne,pt
sbbb
test
inc
sahf
mov
pusha
and
fidivrl
in
insb
mov
push
test
popa
loope
movsb
jbe
add
mov
sub
cs
adc
xor
dec
je
push
aas
jne
outsb
mov
imul
mov
add
sbb
pop
mov
pop
pushf
cwtl
fidivrs
inc
shrb
or
sub
mov
cmp
test
or
xchg
div
push
lock
and
dec
push
lea
push
pop
cwtl
push
out
sub
mov
add
lret
push
or
add
mov
dec
mov
push
lock
fdivrs
mov
and
push
add
testl
popa
add
push
test
xchg
fldl
out
push
and
add
add
sub
js
pop
arpl
arpl
mov
lea
outsb
cwtl
mov
movsb
imul
cmp
or
sbb
inc
adc
add
jb
pusha
jne,pn
and
xlat
dec
pop
mov
cmp
fdivs
sbb
dec
sarb
loop
sub
outsl
std
push
inc
add
es
xchg
pop
xchg
into
mov
stos
push
sbb
mov
sti
data16
je
lret
jbe
and
xor
jne
or
xchg
adc
or
push
pop
add
push
test
test
or
popa
ret
popa
dec
sub
out
and
mov
or
mov
adc
push
jb
cmp
push
jns
popf
or
pushf
sahf
adc
dec
xor
out
xor
lcall
mov
daa
and
sbb
push
ljmp
adc
xchg
dec
inc
vaddsubps
push
mov
or
or
ja
mov
mov
inc
pop
mov
mov
cmpl
pop
incb
jae
xor
push
fmuls
cmpsl
cmp
aad
push
dec
out
es
pminsw
push
jle
testl
xchg
pusha
imul
rcrb
bswap
inc
lcall
xor
or
jecxz
xchg
push
dec
pusha
xchg
cmp
xor
mov
movsl
add
cltd
fmuls
dec
jae
sbb
and
and
popl
addb
das
pusha
pusha
pop
add
shrl
xor
xlat
mov
or
or
jmp
xor
repnz
jl
jge
push
cmp
and
cmp
mov
dec
sbb
fdivp
fs
push
dec
xor
or
movsl
out
jne
jae
dec
repz
and
lea
push
inc
and
fimuls
cmpsb
divl
push
and
aam
in
adc
add
jl
repnz
pop
ljmp
loope
pop
rorl
aam
pusha
or
insl
imul
cmp
sbb
and
or
pop
jnp
and
or
jl
aas
push
test
and
imul
stos
sbb
or
push
and
pop
mov
rolb
popf
mov
jg
adc
mov
lret
adc
dec
dec
std
lret
push
fmuls
je
in
cmp
push
ljmp
add
loope
jp
add
mov
cmp
mov
push
cs
leave
int
mov
push
roll
or
and
arpl
sub
or
adcb
test
or
or
imul
adc
popa
and
dec
addb
xor
call
push
xchg
and
add
pop
mov
loope
jecxz
push
xor
xorb
cmpsl
mov
push
fbld
aad
xchg
push
xor
push
loope
clc
push
or
or
push
jbe
pop
mov
xchg
filds
mov
sub
sbb
pop
pop
mov
and
popa
mov
sbb
xchg
jnp
sbb
insl
sub
add
or
cmp
div
push
inc
xor
xor
cmpsb
sub
pop
xor
add
loopne
loope
mov
fwait
xchg
cmp
add
popa
das
in
mov
and
test
daa
js
mov
les
loop
movsb
push
push
push
addr16
push
test
xor
xor
loope
outsl
push
pushf
iret
pop
dec
jmp
in
test
cmp
nop
orl
lods
or
push
dec
pop
pop
pop
jmp
sub
push
inc
in
add
lock
es
bound
add
mov
aaa
push
lods
stc
inc
cmc
js
sbb
xchg
mov
or
jmp
or
mov
das
push
sub
jnp
pop
mov
pop
add
push
subb
pop
fmull
ret
push
inc
xor
mov
mov
xchg
xor
xor
or
ret
inc
negb
rcll
add
mov
jl
and
pop
xchg
mov
push
or
js
jb
repnz
stos
popf
jne
or
rcrl
jo
or
loop
and
dec
xor
pop
sub
in
mov
jo
sbb
jp
adc
scas
inc
xor
add
push
fcoml
inc
cmpsl
shll
sub
and
jo
or
lods
mov
adc
pop
adc
add
pop
pusha
or
add
adc
rolb
scas
andl
rorl
dec
jl
and
shlb
sbb
adc
sbb
je
push
pop
popf
mov
shll
push
loopne
push
pop
jmp
and
mov
icebp
jno
jecxz
adc
pop
bound
jb
fsubs
or
mov
pop
and
dec
addb
mov
sub
mov
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
and
bound
or
in
mov
sarb
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
xor
add
sahf
add
add
ss
push
fisttps
add
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
outsb
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
mov
addr16
sti
movsl
push
push
cmp
sbb
pop
pop
arpl
mov
dec
imul
cmp
scas
lods
cld
push
test
adc
adc
pop
out
sti
or
or
pop
add
ds
lds
mov
sbb
data16
push
mov
xchg
or
mov
mov
inc
js
fadds
lea
adc
ljmp
inc
cld
adc
pop
clc
add
daa
push
pop
add
jae
inc
pushf
jmp
es
or
dec
fwait
decl
out
inc
ficoml
push
push
push
inc
movsl
stos
lcall
pop
cwtl
imul
cltd
idivl
push
xorb
pop
mov
lds
loop
fldenv
in
inc
rclb
xchg
ret
mov
push
in
pop
and
nop
dec
or
mov
movsb
stc
rorl
loopne
pop
sbb
add
mov
out
addr16
push
push
addl
aas
movsl
add
xchg
and
xor
push
push
mov
js
add
pop
popf
xchg
testb
rep
xchg
fcomp
scas
es
dec
adcl
out
mov
sbb
adc
xlat
sbb
data16
rcr
adc
sub
mov
cmpsb
adc
add
stos
loope
sti
arpl
sub
mov
movsw
fucomp
push
imul
xor
and
sbb
jbe
push
push
add
xor
sub
sbb
inc
mov
pop
lret
xor
push
or
jae
push
sbb
or
add
xchg
lods
fcomp
mov
shl
orl
cmpsl
ss
cwtl
pop
inc
in
ret
std
cmp
dec
xchg
popw
xor
add
add
mov
mov
or
ds
adc
sbb
adc
inc
cmp
adc
sbb
andb
xchg
push
jne
loope
xchg
imul
pop
loopne
jmp
shlb
insb
add
push
cltd
sbb
push
lcall
and
add
cmp
adc
aas
loope
mov
and
jbe
mov
mov
aad
and
cli
push
cld
out
adc
push
dec
pop
movsl
jge
inc
aas
jge
movl
shr
inc
add
push
sti
rolb
dec
and
das
or
adc
cmp
fiadds
loope
sbb
or
pusha
insb
std
jg
roll
pop
pop
popa
inc
sbb
lcall
in
repz
jecxz
dec
dec
push
stc
pop
insl
out
in
cld
mov
jae
movsl
mov
insl
dec
mov
or
fimull
sbb
push
sbb
push
arpl
push
pop
adc
inc
lock
and
inc
je
pop
adc
add
add
lret
push
idivl
dec
add
xor
lret
xchg
pop
push
cwtl
add
shll
push
rcrb
pop
mov
xchg
lock
in
cmc
mov
subb
pop
in
jge
shrb
inc
xchg
add
xchg
jge
bswap
or
jmp
and
arpl
add
mov
add
push
jmp
xor
je
lods
adc
cmc
mov
cli
cmpb
mov
pushl
dec
test
mov
inc
xor
mov
inc
scas
add
or
xor
je
loopne
dec
icebp
mov
sbb
jg
add
call
loop
movsb
mov
call
push
push
out
xchg
push
pop
mov
and
lea
jo
jns
aas
loopne
mov
add
xor
pop
sbb
cmp
add
sbb
jbe
es
sahf
pop
pop
sbb
repz
push
repz
inc
inc
stos
jo
sbb
in
xor
push
sub
cmp
hlt
sti
dec
sbb
cmp
push
xchg
or
jb
nop
mov
or
add
test
pop
ljmp
xchg
cmpsl
jecxz
add
mov
add
popa
mov
cld
fistpll
cmpl
sub
xchg
popf
or
inc
cmp
xchg
sub
add
and
in
lea
sbb
push
scas
add
ret
lahf
push
outsb
fstl
sbb
push
and
jns
pop
je
sub
clts
lcall
xchg
xchg
in
mov
mov
sbb
fcoms
pusha
andl
and
cmp
push
jbe
dec
testb
mov
les
arpl
cmp
cmc
pop
and
dec
insl
sub
mov
cmpsb
jo
rcl
loopne
pop
testl
pusha
je
testl
adc
fsubrp
jge
js
pcmpeqw
inc
or
dec
or
mov
xorl
adc
or
xor
pop
aaa
sbb
lock
popa
loop
push
mov
mov
pop
mov
and
push
add
into
or
orl
add
insb
nop
push
pushf
jmp
test
xor
sub
jecxz
xchg
lock
or
loopne
xchg
inc
div
jle
jle
xor
or
ret
add
and
scas
dec
xchg
out
ret
ror
adc
mov
or
insl
jne
bound
nop
imul
adc
pop
sub
jae
add
dec
cwtl
push
and
std
xchg
pop
es
js
movl
pop
pop
push
push
insb
and
inc
fs
dec
fmuls
push
xor
xchg
data16
sbbl
xlat
pop
insl
mov
cmp
mov
push
xor
clc
push
imul
testl
xorl
lret
mov
dec
sub
pop
loope
pusha
and
sub
add
ds
xorl
adc
xor
push
add
add
repnz
push
lret
mov
rol
femms
aad
adc
pop
add
sbb
mov
mov
jbe
sti
cmp
and
sub
jno
jl
jno
xchg
sti
adc
sbb
das
in
daa
dec
loop
shlb
adcb
sbb
push
add
xor
fcomps
or
lea
inc
lret
cmp
xchg
mov
adc
pop
add
stos
pop
cld
adc
push
adcl
or
daa
cmp
inc
shl
xchg
mov
or
adc
adc
mov
je
in
adcb
loop
pop
jno
imul
push
xchg
add
adc
notl
pushf
push
cmpsb
jne
ret
outsl
std
adc
mov
sti
dec
ja
je
addb
or
je
or
sub
jbe
xchg
scas
cmp
or
cmp
adc
xchg
or
add
cli
js
jne
sahf
push
or
xchg
jnp
and
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
insl
pop
or
adc
push
add
sub
ret
enter
add
cvtps2pd
sbb
out
push
mov
xchg
ds
or
cmp
adc
push
jae
jecxz
mov
xor
dec
mov
clc
adc
sahf
xor
cmpsb
or
cmp
dec
rolb
inc
push
adc
or
push
pop
pusha
jg
mov
push
sbb
adc
jbe
lcall
adc
test
xchg
and
mov
xor
ss
test
mov
or
incl
insb
add
xor
inc
dec
je
sub
xlat
jmp
out
or
jo
testb
outsb
fucomi
lods
and
scas
in
stos
mov
add
mov
ret
push
adc
inc
add
dec
adc
mov
add
sahf
insb
ds
in
mov
push
or
divl
xlat
jo
ret
sbb
in
sahf
movsl
pop
and
push
lds
lea
and
add
dec
or
jne
jnp
inc
dec
mov
and
or
inc
inc
xchg
jne
loope
push
adc
sub
cmp
or
pop
fsubl
xor
and
incb
out
je
push
loope
add
cmp
xchg
nop
ret
xchg
push
adc
add
push
jge
sbb
or
call
or
pop
or
fs
push
push
mov
xchg
xor
in
test
jo
pusha
daa
push
pop
push
jecxz
addr16
sarb
xchg
cmp
inc
add
shlb
fsubl
and
les
dec
xchg
dec
push
dec
ljmp
mov
jge
gs
mov
cmp
add
add
in
repnz
pop
add
mov
pop
test
or
adc
dec
adc
xchg
add
pop
mov
pop
push
lods
jecxz
adc
dec
insl
or
mov
lods
xchg
push
add
fcoml
nop
cmpsl
ret
sub
in
push
xor
fmuls
mov
lcall
push
add
fsubrs
or
clc
xchg
fbstp
inc
xchg
adc
pop
push
lahf
cmpsl
arpl
pop
adc
addr16
jl
mov
adc
shll
aas
mov
hlt
dec
aam
pop
inc
add
cmova
sbb
lret
pusha
das
xchg
in
xchg
push
xchg
dec
pop
aaa
dec
les
and
out
mov
lods
or
sbb
scas
jne
push
test
std
in
sahf
push
adc
bound
adc
movsb
sub
push
cmp
ret
pop
or
fidivl
xor
inc
inc
jl
jp
movsb
xor
push
mov
or
adc
cs
xor
or
fisubrs
mov
mov
dec
out
sbb
test
mov
mov
add
push
xor
pop
pop
scas
xchg
ds
inc
fcoml
in
call
lock
in
negb
push
or
aaa
sub
test
stos
inc
mov
jbe
mov
imul
xchg
xchg
pop
sub
outsb
test
outsl
cmpsl
dec
push
and
dec
je
movsl
fcompl
add
dec
imul
bt
sti
ret
pushf
jle
shl
movl
or
xor
data16
add
sbb
movsl
aas
xchg
pop
sbb
push
arpl
sub
loop
cmp
push
or
cwtl
sbbl
pop
or
xchg
xchg
xchg
inc
inc
inc
ss
pop
out
or
sub
popa
bound
push
sbb
jne
pop
orl
ds
jbe
push
add
jo
xchg
jae
in
inc
jo
int3
cmpsl
sbb
aam
or
mov
or
and
pop
push
inc
leave
mov
rcl
add
pusha
jne
es
dec
sahf
cwtl
fbld
subb
xchg
push
sub
sub
push
pshufw
roll
int
lcall
push
aaa
in
mov
addr16
cmp
hlt
inc
loop
inc
inc
mov
jl
pop
jp
dec
adc
mov
or
call
int
pop
or
nop
cmp
sbb
add
mov
add
cltd
fcoml
mov
mov
je
test
sarb
add
mov
adcl
or
push
and
add
test
and
inc
sub
adc
out
test
inc
add
push
das
adc
popa
sub
popa
daa
cmpsb
js
test
adc
inc
or
jne
cmpsl
insb
adc
xchg
pop
int3
xchg
mov
sub
pop
mov
xor
add
leave
sub
cmp
pop
movsl
jbe
or
and
cmp
and
sub
xor
mov
or
cli
fimuls
jnp
mov
or
ss
and
fwait
cmp
cmp
pop
pop
push
sbb
inc
enter
jne
data16
mov
rorl
inc
sub
movsl
cs
in
inc
mov
aaa
jg
ret
shlb
mov
or
jo
push
jp
or
mov
popa
inc
jmp
xchg
pushf
push
cs
mov
jnp
out
sub
or
jl
sbb
cmp
sub
pop
das
push
sbb
jmp
add
pushf
std
and
adc
insl
mov
push
dec
adc
and
push
out
sub
loope
xor
adc
pop
cmp
mov
adc
xlat
pop
add
jb
add
and
mov
xor
movb
add
and
pusha
popa
add
xor
ja
clc
xchg
adc
jno
sub
into
jle
fcompl
arpl
cmp
jbe
pop
mov
lods
mov
lcall
ss
adc
test
addb
fsub
xchg
add
adc
push
sub
xor
jecxz
add
loop
jo
push
das
jnp
adcl
mov
sub
xchg
sbb
out
mov
lea
adc
pushf
leave
nop
rol
shrl
sbb
int3
sub
repnz
cwtl
dec
mov
xchg
cmp
cmpsl
pop
and
and
in
addr16
cmp
lods
repz
scas
inc
mov
popf
mov
test
jecxz
mov
and
xchg
enter
fsub
jg
hlt
add
repz
dec
js
pushf
lock
add
sbb
adc
mov
adc
fs
stc
imul
pop
add
or
daa
xor
punpckhwd
mov
je
cmp
je
loopne
push
pop
or
ljmp
or
fsubrs
dec
mov
dec
orb
dec
add
int3
add
and
in
inc
roll
dec
xchg
dec
aas
shll
xchg
sub
je
adcb
push
stos
je
cmp
add
xchg
sbb
fwait
addr16
sti
fadds
mov
fisubs
inc
cmpsl
xchg
inc
cld
imul
scas
adc
push
mov
outsb
call
and
mov
add
rcrb
daa
sub
mov
cmp
cmc
xor
sbb
xchg
sub
addr16
jle
mov
mov
movb
and
pop
mov
sub
loop
jp
sub
shr
cld
inc
mov
jo
pop
push
and
out
mov
cld
pushf
js
and
mov
jl
lds
jmp
test
cltd
push
push
leave
orl
dec
or
mov
inc
and
adc
sbb
adc
sbb
lahf
dec
lods
push
sub
push
fimull
xorb
test
and
scas
sbb
push
sbb
jne
xchg
cltd
lea
sbb
jmp
in
or
inc
and
sub
add
inc
sub
das
imul
lea
xchg
mov
or
roll
mov
movsb
cltd
lea
jae
mov
xor
cmp
xor
pop
lds
push
rorl
fs
and
inc
xchg
ret
enter
inc
inc
out
push
enter
jne
dec
and
add
mull
int
enter
push
insb
fnstenv
sti
and
insl
push
subl
add
adc
data16
push
jmp
les
iret
shll
jecxz
jp
pop
push
push
xchg
sub
mov
xchg
pusha
lret
push
push
pop
push
inc
jle
cmpl
xor
imul
dec
sub
jne
push
cmc
mov
and
xor
dec
adc
in
mov
nop
sub
or
popa
addr16
pop
adc
and
pop
lcall
loope
cmp
inc
sub
xchg
movsl
ss
lock
test
pop
cmpsw
push
or
or
fldenv
mov
sbb
push
xor
movsl
bound
sbb
insl
or
test
sahf
iret
dec
mov
jg
jo
or
and
or
dec
fsubrl
jle
jno
js
and
call
hlt
cltd
fdivl
xor
into
clc
inc
xor
iret
in
add
push
in
aam
mov
mov
movsl
sbb
frstor
dec
pop
int
push
mov
push
push
add
aad
mov
sbb
shl
dec
adc
imul
fidivrs
sbb
pop
aas
loopne
loopne
xchg
in
add
xor
push
in
and
xchg
jl
sbb
stos
mov
jns
mov
incl
jne
cmc
add
pop
and
xchg
std
ljmp
sbb
repnz
sbb
popf
add
sub
xor
popf
jecxz,pt
mov
jg
jne
push
loopne
fsubrs
push
int3
add
inc
mov
adc
adc
or
xlat
int
sub
loopne
lds
lods
and
movsb
pop
xchg
dec
lahf
dec
in
jb
mov
sub
dec
jne
das
mov
push
mov
or
or
xor
sbb
fiaddl
add
mov
rol
repz
subl
scas
call
mov
rolb
inc
pop
clc
loopne
push
jae
push
cmp
pop
sbb
adc
push
aam
addl
mov
insl
add
xchg
sub
cld
aaa
cmp
xorb
lret
or
cltd
mov
cltd
adc
test
outsb
sbb
xlat
mov
dec
or
add
adc
xor
cmp
jne
sbb
loopne
xchg
jl
or
test
ret
shll
sub
mov
dec
xor
les
mov
push
push
add
shl
bound
inc
push
ret
push
or
out
mov
rcrl
jl
or
xchg
push
sbb
dec
or
push
and
xchg
shr
xor
int
ficomps
inc
add
in
adc
or
xchg
shl
popa
scas
imul
leave
insl
nopl
add
dec
enter
jo
sub
xor
fwait
mov
adc
push
rorl
clc
sbb
inc
mov
js
imul
adc
jge
adc
jo
xor
decl
dec
leave
rorl
enter
jl
adc
xchg
ret
loopne
cmpsl
test
pcmpgtd
or
jnp
push
loop
jo
je
pop
and
lds
pop
inc
xor
lock
dec
mov
push
and
adc
or
por
mov
pop
or
or
push
sub
cmpsl
sub
xchg
addl
add
subl
das
mov
add
sub
pop
repz
push
aaa
sub
add
rcll
scas
cltd
xor
leave
push
xor
enter
jmp
cmp
lods
dec
xorb
pop
add
mov
mov
es
mov
inc
lock
add
add
xchg
mov
cld
pop
and
push
add
push
push
movsl
add
mov
push
sub
in
push
cmp
sub
stc
add
test
push
mov
lcall
fcomp
cmp
push
lea
add
mov
mov
inc
cmp
push
cmp
push
pop
shrb
xor
movsb
movsb
inc
pusha
sbb
cs
xor
ret
test
test
cmp
cmp
sub
cmp
int
aad
imul
in
cld
mov
mov
mov
ljmp
xor
and
inc
xor
and
lock
nop
xchg
add
outsb
mov
frstor
and
ja
push
pop
inc
dec
add
or
mov
inc
lea
jae
pop
adcb
vmovhpd
mov
ret
data16
scas
or
subb
mov
add
lret
xor
cli
inc
mov
jne
xor
jg
inc
ret
inc
cmp
fistl
andl
dec
inc
and
movsl
scas
add
in
push
pop
or
loope
or
scas
mov
inc
push
jae
pop
inc
mov
jnp
cld
je
lret
inc
xchg
inc
mov
pop
mov
notb
pusha
xor
idivl
cmp
push
nop
repnz
insb
addl
jle
mov
aaa
lock
push
ja
clc
hlt
push
icebp
push
inc
sbb
push
aam
mov
push
test
mov
push
push
rorl
in
jle
mov
nop
nop
add
jb
pusha
cmpsb
push
xor
add
pop
in
or
dec
enter
pop
inc
xchg
jo
repz
lea
mov
push
movsl
mov
rorb
sub
add
cmp
loopne
insb
mov
pop
sbb
mov
push
leave
inc
or
mov
jmp
out
adc
sbbb
cmpsb
xor
jge
mov
jge
pushf
mov
movsl
mov
dec
or
lret
pushf
mov
stos
add
push
dec
stos
mov
sbb
inc
mov
fisttps
inc
dec
out
inc
and
or
adc
rorb
dec
add
inc
mov
ds
out
ficoms
sbb
xchg
push
fiadds
pop
or
push
mov
movsl
xchg
rorl
mov
mov
inc
nop
pusha
pop
shrl
mov
fs
mov
jecxz
dec
fsubl
add
push
in
jb
fmuls
sub
pop
popa
adc
dec
cmp
rcrl
push
adc
sbb
lock
adc
and
call
ret
dec
sti
mov
mov
fmuls
pop
ret
aaa
xor
and
xchg
sbb
faddl
cmp
sbb
push
pusha
cwtl
mov
rorl
jae
mov
sbb
jno
dec
loope
arpl
pop
and
add
xor
adc
add
test
jge
das
push
hlt
pop
xor
imul
mov
lods
lret
ret
cmp
sub
jae
or
cmp
rorb
lret
fadds
cmp
jno
push
push
test
push
es
inc
xor
rclb
push
mov
sbb
add
popa
sub
pop
sub
sbb
add
push
mov
sub
sbb
adc
outsl
sbb
fadds
jecxz
push
jecxz
daa
roll
imul
push
clc
cmp
pop
ffree
adc
jge
out
lcall
ja
jg
push
call
clc
pop
gs
inc
or
inc
pop
add
lcall
nop
jbe
sub
lea
std
loopne
add
sub
push
cmp
ret
xor
sub
inc
popa
sbb
andl
pop
push
leave
nop
sbb
cmp
adc
pusha
int
mov
or
adc
enter
inc
xor
lock
inc
sub
add
add
ret
inc
push
inc
push
sti
jl
test
jg
cmp
jg
jle
mov
or
ret
mov
loopne
pop
daa
cmp
ret
mov
pop
out
lcall
inc
jle
dec
add
jmp
not
mov
mov
push
sbb
dec
popa
jbe
out
lock
es
xor
pop
dec
fadds
push
lds
andl
add
jg
mov
add
sbb
sub
repnz
xor
xor
jno
cmp
jns
inc
push
inc
push
add
xor
inc
add
cmp
xor
fldenv
add
addr16
or
inc
add
dec
repnz
add
adc
incl
add
and
popl
dec
jl
add
or
arpl
in
adcl
dec
and
push
xor
jno
mov
dec
jecxz
ja
aad
mov
add
imul
movl
cltd
or
dec
rcrl
inc
push
pop
xchg
sbb
iret
inc
adc
roll
push
and
incl
pop
adc
sbb
cli
jo
shrb
add
mov
scas
or
pop
hlt
gs
add
rcll
mov
arpl
dec
arpl
pusha
or
sarb
push
inc
cmp
inc
lcall
cmp
push
mov
dec
jb
mov
inc
sti
and
add
lods
dec
pusha
and
dec
mov
sub
or
dec
jmp
push
lret
or
xor
jge
enter
je
pop
cmp
sub
iret
sbb
inc
cmp
fisubrl
and
clc
push
sti
rep
lcall
cs
or
jmp
sub
cmp
jp
pushl
cmp
and
adc
and
sbb
andl
mov
adc
pop
push
push
push
enter
push
push
mov
sub
into
cmpsb
xlat
push
and
push
mov
pop
lods
rcrl
dec
adc
xchg
data16
dec
les
or
sub
std
inc
fcomp
pusha
adc
adc
sbb
mov
and
xchg
mov
cmpb
adc
mov
jle
pop
xchg
lea
xor
int
mov
imul
sbb
adc
xchg
into
and
fs
repnz
fsubl
xchg
mov
push
mov
test
mov
arpl
jae
or
xchg
das
out
jnp
pop
adc
push
push
dec
sbb
orb
addb
inc
ja
xor
pop
fwait
pop
push
data16
pushf
push
push
cmp
gs
or
xchg
clc
mov
push
sbb
jo
pop
add
pushf
sub
mov
xchg
push
mov
ljmp
pop
js
inc
push
push
sbb
xchg
push
pop
pop
arpl
fidivrl
xor
pop
arpl
sahf
shlb
cmp
sti
push
add
lock
cld
loopne
xor
roll
inc
inc
sbb
and
sarb
movsb
in
das
sub
loopne
mov
add
add
push
jmp
push
loope
sbb
adc
cmp
repnz
loopne
add
outsb
push
xchg
rclb
ss
sbb
jo
adc
xchg
mov
mov
sub
jno
jb
mov
clc
adc
or
fadds
fidivrs
call
or
enter
jp
fdivs
dec
add
icebp
or
testb
sub
test
jle
jnp
movsl
add
sub
or
push
push
xchg
ret
xchg
add
rcrl
aas
xor
cmp
aaa
lock
jae
cmp
lock
add
arpl
sbb
push
inc
or
push
push
adc
inc
outsl
mov
mov
push
clc
add
loope
inc
sub
or
add
rcrb
inc
movsb
jmp
cmp
je
dec
dec
icebp
mov
push
mov
push
add
jecxz
dec
xchg
push
arpl
jb
mov
push
push
or
pop
rclb
aaa
dec
sub
inc
or
ret
popa
loopne
cmp
mov
mov
and
or
push
scas
or
imul
adc
push
rcl
jl
clc
int3
loope
add
adc
push
adc
add
sub
lahf
and
adc
dec
sbbb
or
imulb
mov
push
push
imul
pop
or
adc
and
leave
adc
lcall
push
mov
pop
add
or
sbb
and
xchg
push
mov
xchg
pop
add
sbb
sub
mov
sbb
push
call
xor
adc
sbb
jge
pop
or
inc
jmp
dec
imull
mov
orl
jne
mov
dec
test
fsubrs
incb
mov
xor
jp
cmp
inc
mov
add
jb
jae
rcrb
push
mov
lea
hlt
jae
pop
jae
or
add
pop
out
mov
jo
ret
and
xchg
push
icebp
js
mov
jge
xor
mov
or
fs
jecxz
add
sbb
inc
sub
jb
and
sbb
pusha
mov
dec
pop
xchg
mov
sub
cmp
out
sub
rep
inc
je
push
inc
mov
mov
push
pop
dec
xorb
lods
in
xchg
stos
popl
sbb
xchg
stc
mov
mov
jg
and
fsin
mov
cmp
enter
sbbl
sbb
push
push
inc
push
add
push
cli
paddw
repnz
pop
xor
push
ss
push
and
jo
cmp
or
inc
shr
ret
insb
add
sbb
or
addb
jbe
push
inc
fbstp
in
scas
sbb
mov
imul
outsb
jl
push
pop
dec
mov
adc
lock
add
inc
mov
subl
addr16
adc
je
sbb
daa
or
cmp
jmp
outsl
cmp
insl
jnp
inc
and
je
ja
xchg
enter
add
fsubl
lahf
outsl
adc
or
fsubrs
insl
lahf
jae
arpl
ja
sbb
cmp
scas
scas
ss
arpl
cmp
cmp
mov
jae
shl
jae
mov
inc
mov
or
jo
xchg
lea
xor
xor
mov
scas
cmpsl
jne
push
xor
je
fdivrl
and
or
xor
add
mov
pop
push
or
movsl
dec
add
dec
test
lods
mov
and
push
pop
pop
enter
xor
sub
push
nopl
push
nop
xchg
add
and
nop
inc
and
inc
push
nop
inc
and
push
es
sub
nop
inc
jo
nop
inc
push
nop
mov
inc
push
sub
cs
es
mov
push
pusha
call
sbb
xchg
xor
cmp
push
push
nop
sub
mov
and
mov
divb
jne
cmp
pop
push
xlat
cmp
mov
mov
add
jne
and
sub
stc
sbb
sbb
fidivrl
lcall
pop
fisubrs
or
or
mov
or
sbb
sbb
sbb
inc
add
cmp
push
jbe
insb
pop
mov
call
adc
sbb
sarb
loop
dec
std
add
xor
mov
add
sbb
sub
faddl
fcomps
mov
ja
inc
insl
sub
or
jbe
jae
test
mov
shlb
add
mov
out
sub
mov
imul
enter
cli
fsubrl
loopne
hlt
sahf
cmpsl
shr
aam
push
xor
xor
or
jge
mov
loopne
jo
pop
arpl
sub
xchg
mov
mov
call
fwait
mov
sbb
dec
mov
pushf
sbb
cmpb
push
or
xor
in
adc
inc
or
adc
mov
add
int3
pop
in
push
mov
pop
rclb
bound
rorb
adc
or
dec
jne
pop
lock
add
pusha
mov
fadds
sub
mov
or
sub
push
ret
adc
add
inc
sbb
add
arpl
into
das
fs
popa
test
sbb
pop
sbb
dec
loope
xchg
sti
mov
xor
sbb
and
call
push
mov
mov
or
dec
adc
push
xor
rcll
ja
push
push
sub
je
pop
adc
xchg
rorb
add
lock
rolb
subl
or
jbe
lods
add
fcompl
jmp
cmp
sahf
xchg
sbb
pushf
aad
sbb
inc
add
movsb
pop
xor
mov
xor
jb
jns
xchg
mov
pop
or
pusha
lock
mov
in
inc
add
int
movsl
shl
and
and
test
inc
jbe
lea
fwait
mov
xor
dec
dec
inc
adc
push
sub
or
shll
dec
jb
and
dec
incl
pusha
or
mov
je
in
or
mov
shrb
add
rcl
or
ret
daa
xchg
nop
cwtl
push
sbb
pop
insb
mov
mov
add
clc
lock
and
dec
dec
sbb
and
add
xchg
add
jno
xor
add
sub
imul
xchg
mov
or
inc
cmp
sub
aam
js
loopne
pop
push
bound
or
rcrw
pop
sarl
dec
ret
in
push
jns
enter
es
xor
inc
cmp
mov
mov
call
sub
cmp
adc
mov
inc
or
jae
sbb
add
sbb
xchg
push
jmp
xchg
pop
xchg
popa
pop
jge
dec
xchg
movsl
imul
dec
or
push
push
es
xchg
ret
xchg
aam
add
fsubs
jecxz
pop
lods
inc
pop
jnp
mov
jg
mov
push
insb
cli
fdiv
sub
in
rorl
les
cwtl
inc
loopne
les
and
and
mov
movb
cmp
jl
mov
adc
aaa
and
or
pop
adc
stos
jb
sbb
js
xchg
push
cwtl
jb
add
mov
lea
imul
sbb
pop
or
dec
sub
ljmp
shrl
inc
fnsave
inc
ja
icebp
or
pop
mov
in
add
lcall
lds
and
add
add
jne
popa
shrb
pop
add
or
mov
gs
sti
data16
or
in
jge
pop
add
bound
lea
test
inc
add
xchg
jbe
push
aam
push
cli
push
call
scas
sub
or
lea
orb
mov
cmp
sahf
cmp
jecxz
or
push
gs
fdivl
call
into
jb
push
add
push
fsts
ficompl
es
push
sbb
in
push
xor
sarb
cmpsb
adc
jle
iret
xchg
mov
pushf
mov
leave
add
lock
mov
push
inc
xchg
fwait
add
sub
movsb
jmp
loope
mov
jg
sub
mov
adcb
jmp
dec
lret
cmp
and
cli
inc
pusha
iret
sbb
call
pop
or
popf
add
mov
daa
mov
es
inc
lock
movsb
push
in
or
dec
out
xchg
xor
or
lock
loopne
jb
in
shll
and
pop
leave
nop
shrb
je
pushf
jne
sbb
rcrl
ss
rorb
movsl
fmuls
lods
push
rorl
add
retw
inc
mov
loope
inc
mov
movsl
push
mov
inc
or
int
leave
xor
into
sub
fwait
sub
incb
mov
fcmovnbe
sub
pusha
add
mov
mov
pusha
ror
mov
mov
das
xor
sbb
rolb
gs
icebp
fmuls
out
rol
xchg
or
mov
xchg
pop
loope
sub
negl
scas
or
or
pusha
push
clc
jo
daa
push
sub
pop
xor
stos
mov
shrb
sbb
loope
jmp
jl
cmp
xor
aas
icebp
push
cs
sub
xchg
js
sarl
mov
dec
jmp
sub
inc
shlb
jbe
mov
sbb
scas
pop
mov
or
add
stc
push
jno
ret
ds
xor
gs
idivb
das
and
add
and
xchg
add
adc
xchg
pusha
xor
cmp
sub
arpl
inc
cmp
sbb
lret
adcb
xchg
repnz
push
dec
pusha
xor
dec
outsb
call
or
lds
push
push
cmp
xchg
aam
enter
adc
add
aad
jns
push
push
lahf
push
mov
mov
add
push
push
test
flds
or
nop
jp
or
add
push
mov
outsl
push
adc
mov
gs
js
adc
adc
mov
mov
sub
cmp
je
iret
or
insb
push
adc
nop
cmc
xchg
add
cmpsb
push
pusha
test
or
jno
sbbl
imul
push
out
in
add
pop
inc
xchg
ljmp
xchg
int
jae
or
rclb
push
sbb
mov
mov
inc
add
mov
enter
push
in
pop
dec
mov
int
loope
add
push
push
sbb
cmp
je
push
add
adc
push
mov
mov
or
push
xchg
cmp
inc
in
push
cmp
cmp
sarl
pop
adc
bound
inc
pop
ja
xchg
arpl
add
mov
mov
adc
and
or
das
sub
in
xchg
pop
insb
mov
adc
cmp
xor
incb
pop
xor
xchg
mov
inc
push
add
or
fsubrl
mov
sbbb
jbe
dec
xchg
insl
imul
cmpb
dec
and
jl
cmp
adc
in
push
aam
or
call
inc
jecxz
mov
cmp
bound
sub
xchg
mov
aam
push
cmp
pop
xchg
int
int3
clc
push
ss
lret
cld
mov
dec
aas
mov
inc
push
mov
aam
or
xor
or
jb
ret
cmp
mov
or
pusha
imul
sbb
enter
or
rolb
pop
faddl
jo
cmp
inc
addb
push
lcall
mov
sub
das
xor
mov
dec
fucomip
adc
je
cmp
and
jne
push
pop
and
lods
xchg
loopne
inc
in
jns
xlat
adc
test
mov
nop
pop
and
xchg
xchg
cwtl
pushf
push
movsl
into
es
test
lods
lods
push
adc
sub
fdivs
lcall
ss
ret
stos
jg
pushf
lcall
xchg
cmp
mov
pop
aam
add
cmp
out
sbbb
movsb
inc
ficomps
mov
pop
adc
std
popa
cmovnp
mov
mov
jmp
cmp
cmp
mov
sub
mov
fwait
or
jae
mov
and
jo
xor
add
popa
call
push
cmp
xchg
jge
lea
push
sbb
sbbb
add
sub
fimuls
add
mov
sbb
cmp
enter
xchg
sbb
inc
hlt
test
push
or
mov
mov
mov
mov
pop
sbb
push
add
dec
jo
jecxz
inc
xchg
pop
xlat
add
test
popf
movsb
mov
rolb
mov
dec
bound
mov
and
lahf
sbb
jo
push
shll
mov
lea
rorb
adc
sub
lods
push
adc
jae
xchg
fcoms
filds
pop
fistpll
sub
pushf
out
rol
jp
lods
or
push
test
jo
cmpsl
push
push
push
xor
ja
adcl
add
ret
cmp
mov
cmpsb
mov
adc
push
push
push
mov
outsl
xlat
nop
or
adc
ljmp
jp
aaa
push
fidivrs
arpl
je
rcll
rcr
int
movsl
push
daa
and
das
push
les
pop
stc
mov
cmpb
and
lock
push
loopne
push
sbb
lret
adc
fs
scas
inc
sbb
push
mov
xor
fsub
fdivp
mov
xlat
outsb
push
testl
cmp
cli
imul
movsl
jbe
xchg
push
pop
xlat
xchg
sbb
out
in
loopne
push
mov
mov
mov
mov
cmp
pop
je
push
mov
les
and
add
scas
loop
and
adc
mov
pop
in
lret
sub
jl
jo
xchg
pushf
test
or
call
scas
cmpsl
dec
sbb
pop
pop
or
mov
inc
adc
and
dec
push
inc
lock
add
sub
push
nop
outsl
or
jo
movsb
pop
dec
add
add
and
lahf
inc
mov
jp
xor
test
jb
cmpsb
out
out
xchg
jo
mov
pop
push
mov
mov
out
pop
push
xor
pop
push
ret
cwtl
cmp
sub
lret
in
nop
mov
ja
addb
leave
adc
les
sbb
out
adc
and
ja
insl
rcl
mov
pop
mov
fsub
scas
lea
clc
ss
mov
xor
je
add
imul
js
add
dec
push
pop
sub
cmp
nop
iret
mov
push
cmpsl
add
out
push
fs
pop
add
in
jecxz
imul
cmp
repnz
in
gs
sub
or
roll
or
enter
push
push
les
shrl
outsb
lock
inc
bnd
es
loopne
test
insl
or
push
inc
pop
jmp
outsl
adc
mov
sub
in
mov
mov
icebp
cmp
inc
hlt
loop
xchg
push
cmpsb
bound
mov
dec
xor
mov
push
jns
test
jle
xchg
lcall
mov
sub
pop
rol
adc
je
data16
out
cwtl
shr
outsb
jle
push
ret
jg
outsb
adc
mov
fildl
es
or
outsb
add
mov
jge
push
jle
xchg
mov
push
or
jp
psubusb
bound
das
adc
jne
jge
adc
fstps
push
lock
jmp
or
cmpsl
xor
je
push
cmpsb
dec
cmp
mov
shlb
jp
sbb
and
pop
je
sub
data16
fs
inc
jmp
sahf
push
fisubs
cli
incb
call
and
jne
add
push
loope
push
xor
dec
adc
andl
adcb
add
or
adc
adc
lret
imul
cmpsb
roll
push
push
bound
push
data16
stos
cs
xlat
mov
sbb
pop
mov
loopne
shlb
shr
aas
rolb
sbb
ret
ja
xchg
push
dec
out
push
pop
push
out
dec
roll
adc
push
mov
add
mov
cwtl
adc
ja
lods
lods
scas
jb
push
push
flds
xor
adc
test
aam
or
js
sub
pop
mov
sbb
incl
cmp
push
pop
push
sub
add
shrb
xor
subl
add
in
push
add
xchg
aad
or
pop
push
fmuls
iret
shlb
sbb
add
sub
jbe
stos
mov
hlt
imul
sbb
les
aam
andl
fcoml
rcr
shlb
sub
or
enter
inc
imul
imul
movsl
rorl
dec
inc
dec
add
xor
js
xor
out
and
push
dec
cmp
sbb
and
into
addl
dec
add
shlb
jl
dec
lcall
add
dec
dec
enter
loope
push
jnp
call
inc
pushf
pop
inc
adc
test
int
mov
out
movl
in
inc
inc
lcall
and
pop
outsl
or
fnclex
push
ljmp
adc
mov
inc
nop
out
dec
fldcw
cmp
sbb
fmul
add
add
jmp
push
adc
andl
push
icebp
dec
sub
mov
nop
mov
dec
sub
xchg
push
mov
jmp
in
cmp
daa
frstor
pop
fwait
mov
add
push
adcl
mov
or
movsb
mov
cmpsl
fistl
aas
mov
test
aad
add
pop
push
xor
test
test
xchg
add
push
dec
lds
into
sub
and
sbb
sarb
sub
or
daa
pushl
jne
dec
pop
out
cmp
incl
ss
popf
xor
test
pop
dec
pop
cmp
mov
das
outsl
shrb
inc
mov
mov
popf
sub
idiv
xor
mov
add
mov
sub
cmp
in
ss
sbb
inc
iret
jno
jno
mov
sbb
or
jp
add
sbb
sbb
arpl
inc
pop
pop
cs
shrl
pop
sub
adc
fmull
imul
pop
cmp
or
sbb
jne
dec
and
mov
call
lds
dec
cmp
test
js
mov
testl
fadd
jl
xor
mov
xlat
and
mov
icebp
mov
ret
dec
xor
loop
push
or
mov
call
push
or
clc
adc
mov
sub
mov
add
idiv
or
pop
outsb
pop
cmp
call
cmp
jbe
add
jmp
add
mov
mov
push
and
pushf
push
fdivs
add
inc
jbe
inc
xchg
adc
mov
push
adc
sbb
pop
test
or
cmp
and
push
xor
pop
add
mov
sub
adc
fists
push
adc
mov
aam
mov
xchg
test
rorl
or
and
imul
push
adc
pop
or
in
stos
nop
cltd
outsb
cltd
test
addb
fstpl
insl
daa
add
dec
xchg
enter
add
mov
aas
andb
push
pop
add
arpl
cmpsb
in
and
inc
cmp
je
mov
jno
and
pop
mov
pushf
jne
jo
cmc
push
jo
mov
sbb
mov
aaa
adc
je
mov
add
js
xor
fld
sub
and
add
outsb
mov
out
jge
mov
push
sbb
imul
mov
addr16
push
and
pop
test
add
fimull
jno
inc
ret
inc
xor
lds
mov
push
mov
lcall
mov
ret
sbb
cs
pop
inc
jecxz
sub
add
push
and
lahf
dec
cmp
sub
je
insl
mov
addb
les
int3
adc
js
cmpsb
xchg
fistps
sbb
out
adcb
jmp
cmp
cmp
call
jp
cwtl
jl
arpl
push
rclb
je
xor
ret
inc
or
lock
cs
push
add
sbbb
xor
or
aam
popa
jmp
insl
add
mov
sub
push
dec
js
cs
inc
popf
nop
and
je
add
xchg
je
lretw
je
mov
cmp
aam
test
pop
fstpl
mov
or
sbb
int3
xor
xor
jbe
fmull
and
push
femms
dec
pop
enter
or
out
mov
pop
sbb
lahf
or
or
jp
jmp
in
and
aam
fistl
mov
sbb
cld
push
adc
cmp
mov
frstor
fxch
or
fcompl
fcomip
push
pop
out
aam
mov
js
inc
adc
fst
testb
push
push
outsl
popf
cmc
mov
mov
and
sub
xor
adc
movsl
adc
sub
push
andl
das
sbb
movsl
mov
aam
lds
and
inc
fdivrs
aam
fcmovnu
cs
aas
movsb
xchg
cmp
add
idivl
mov
adc
pop
xor
add
cmpsb
leave
loopne
movsb
adc
fdivrl
xlat
bound
jl
add
inc
xchg
jge
mov
push
push
xor
or
xor
xor
popa
shr
es
push
pop
cmp
fiaddl
rep
sbb
inc
cmp
addb
cltd
sbb
adc
mov
gs
mov
pop
sbb
mov
xor
mov
sbb
in
adc
or
lock
cmpsl
iret
les
push
lahf
jge
dec
arpl
movsb
fiadds
pop
push
jae
popa
push
dec
test
xor
sbb
xchg
orb
mov
push
push
add
or
or
outsl
pop
test
mov
ret
mov
dec
fdivrs
mov
adc
push
dec
nop
mov
in
sub
call
sbb
lret
lret
lret
mov
mov
js
into
lret
lret
int3
nop
shrb
add
ja
cmp
push
lea
adc
add
jo
add
sbb
jge
sub
fmulp
pusha
aas
mov
insl
test
test
lret
mov
or
pusha
ljmp
and
pusha
sbb
mov
orl
or
xchg
pop
mov
adc
jne
je
jge
addb
push
add
mov
add
add
in
orl
popf
add
mov
js
mov
xchg
adc
mov
stos
xor
and
les
adc
adc
add
sub
aam
jge
negl
int3
jmp
add
subb
xor
and
xor
imul
add
inc
insl
scas
iret
lods
daa
or
gs
jp
jge
je
sbb
pop
std
faddp
jg
mov
and
lods
xchg
or
popa
dec
xlat
and
out
sub
aad
jle
dec
xchg
xchg
and
les
push
sub
repnz
or
aaa
faddl
sbb
or
bound
push
or
pop
mov
cmc
stc
stos
addb
pop
cmp
adcl
loope
shll
aaa
sbb
cmp
push
gs
inc
adc
adc
clc
sbb
ljmp
or
adc
jo
jns
and
ret
add
out
mov
inc
cmpsl
jno
lock
les
push
push
push
and
jle
test
xchg
test
add
movsl
in
in
popa
lock
and
insb
mov
add
xchg
fwait
dec
mov
mov
sub
sbb
es
inc
inc
insb
or
dec
mov
lock
lock
decb
imul
inc
imul
movd
cs
push
pushf
arpl
test
sub
sar
pop
pop
add
inc
cmp
les
dec
xor
cmp
push
ds
cltd
cmp
mov
or
mov
push
add
cmc
dec
std
adc
les
jle
push
mov
cmc
jle
daa
test
imul
mov
xor
lods
dec
or
jne
insb
pextrw
aaa
or
inc
loope
movb
test
xor
shlb
pop
adcl
adc
mov
xor
xchg
sub
dec
add
xchg
push
push
xor
add
add
mov
repz
enter
leave
je
sbb
cld
add
sub
jne
mov
jmp
fldl
aam
lcall
ret
pop
pop
sahf
enter
cmp
test
les
mov
movsl
push
push
movsl
fwait
cli
aaa
sbb
inc
hlt
fstl
xor
fcomp
fnstsw
add
mov
inc
clc
pop
fsubr
pop
faddp
andl
sbb
and
and
or
add
sub
inc
dec
cltd
adc
loopne
fstl
ss
xor
dec
cwtl
loope
push
inc
popa
out
push
pop
pusha
ljmp
adc
sub
mov
arpl
jp
inc
loope
shl
test
iret
sub
es
lds
or
adc
into
popa
jns
ss
dec
adc
fisttps
push
ljmp
jmp
jle
inc
xchg
fs
push
push
shrl
inc
mov
sbb
add
dec
test
sbb
add
into
lock
push
test
push
sahf
dec
dec
sub
mov
lret
pop
in
sub
in
add
aas
adc
dec
add
mov
sahf
xchg
loope
add
xor
dec
hlt
jge
adc
jl
cmp
xchg
jnp
outsl
push
xchg
fadd
movl
push
shr
ud0
add
mov
pop
ret
rorb
xor
rorb
aaa
test
test
stos
add
jle
add
cmp
sbb
dec
pusha
sub
pop
jle
cwtl
mov
dec
adc
shrl
fs
push
fmul
inc
add
jb
add
and
dec
jns
mov
mov
dec
inc
jno
adc
cmpb
add
add
or
inc
jecxz
out
mov
pop
loop
xchg
sar
stos
jg
rol
outsb
imul
adc
clc
sbb
test
stos
mov
lock
ret
mov
std
add
orb
ret
jne
push
and
nop
sahf
or
mov
decl
inc
adc
test
xor
leave
cwtl
nop
cmp
xor
xor
xchg
jo
and
cld
cmovp
imul
sub
and
mov
cmp
jno
or
in
cmc
aaa
test
adc
cwtl
out
xor
fists
or
push
cmpb
or
cltd
clc
xor
repz
jne
test
inc
pop
push
jne
pandn
inc
aas
fcoms
adc
inc
add
les
and
add
lcall
insl
mov
rcl
mov
sbb
and
scas
sbb
ret
cld
and
les
add
push
mov
in
adc
stos
faddl
push
ret
cmpsb
jle
cmpsb
xor
adc
outsb
sbbb
test
or
test
dec
mov
fdivrl
nop
pop
push
add
add
lret
adc
popa
sub
mov
loopne
push
ds
std
xor
loope
adc
mov
out
push
jno
notl
dec
add
rolb
mov
inc
sbb
in
push
push
hlt
ret
or
in
loop
add
daa
int
repnz
in
or
mov
xor
hlt
sbb
idivl
popa
push
icebp
dec
ret
cmpsl
fnsave
push
lock
test
jmp
and
hlt
dec
rol
add
push
xchg
adc
sub
bound
jne
mov
mov
jnp
stos
lock
mov
orb
nop
pop
pop
push
dec
jns
push
cmp
sbb
jle
and
mov
lods
jg
dec
push
in
loope
cld
jecxz
push
in
inc
shlb
mov
push
andl
xchg
lret
dec
inc
xchg
movsb
jb
fsubrl
sub
or
mov
push
pushf
jmp
lds
ret
mov
add
adc
add
popa
mov
jnp
dec
test
lds
loopne
imul
adc
push
jecxz
push
add
ss
loopne
cmpsl
leave
setl
das
dec
stos
xor
lret
xor
leave
out
int3
xor
inc
add
adc
add
loope
push
ds
jo
add
push
or
loope
scas
repnz
push
add
ja
add
lcall
loopne
jg
mov
daa
mov
js
in
mov
jne
or
add
or
cmp
adc
xchg
pop
xchg
push
or
scas
clc
ss
ret
mov
addr16
push
push
insl
loopne
orl
test
xchg
mov
or
pop
rolb
push
ja
popf
xchg
cwtl
and
out
add
and
mov
pop
xchg
test
add
popf
mov
pop
add
cmpb
sub
subb
shlb
sub
mov
push
sub
mov
push
imul
dec
cmp
faddl
or
pop
pushf
mov
jnp
sbb
pop
xor
adc
cmp
fdivl
inc
lea
inc
out
imul
sub
jle
addb
jl
mov
adc
add
add
in
mov
inc
sub
cmp
inc
add
add
dec
loopne
push
xor
or
xor
push
lcall
add
cs
iret
dec
push
adc
andb
movl
rclb
mov
mov
dec
dec
mov
es
ss
imul
inc
cmp
out
xor
push
in
lock
inc
jo
add
push
cmp
xor
daa
sub
dec
nop
pop
or
lock
outsb
enter
jmp
dec
gs
pop
arpl
pop
or
or
icebp
and
mov
movsb
shrb
cmp
shl
dec
jnp
add
add
or
lock
stc
dec
rolb
gs
mov
fisubs
adc
push
mov
loopne
mov
test
loop
mov
ja
aam
xchg
xchg
cmpsb
sub
in
lods
into
fiaddl
pop
fadds
aam
imul
les
add
clc
pop
loopne
push
cld
or
aas
loopne
xchg
or
sahf
cmpsb
add
clc
in
test
sbb
mov
and
imul
fmuls
xchg
xor
sbb
insb
push
test
jne
mov
sbb
aas
std
into
and
rolb
sbbb
and
xor
sub
cmp
test
add
bound
fs
movsb
jns
std
jmp
jb
and
sbb
push
rcl
sbb
xchg
cmp
jb
dec
clc
pop
clc
jl
test
dec
sbb
sbb
adc
mov
loopne
in
xor
jbe
dec
aam
loopne
daa
pop
push
push
inc
dec
fwait
enter
sbb
add
xor
push
les
repnz
inc
push
add
orl
dec
xor
sbb
xchg
xchg
pop
out
dec
mov
ds
aaa
sarb
add
push
cmc
or
mov
inc
cmp
cmpsl
push
in
mov
stc
inc
push
int
xor
data16
popf
ss
push
sbb
pop
push
sub
dec
push
sub
lods
cmc
bound
bndstx
dec
ficoms
stc
adc
sub
popa
enter
movsb
dec
sbbl
and
add
push
lahf
dec
in
sub
cmp
push
setg
or
add
mov
mov
or
inc
and
push
push
clc
fwait
inc
push
add
push
hlt
jge
inc
xorl
aaa
cld
inc
stos
add
adc
sahf
pusha
add
or
call
into
pop
xor
shlb
mov
in
jo
mov
popf
cwtl
outsl
xchg
or
sub
mov
sarb
adc
jmp
xchg
mov
popa
push
ffree
add
pop
inc
cmp
sbb
and
pop
and
mov
xor
adc
add
and
lods
push
ss
aad
pop
adc
pop
movsl
cmp
cmp
jmp
call
pop
ret
ficompl
or
aad
into
sub
sbb
sbb
cmp
sbb
jmp
pop
sub
add
adc
jno
or
xor
test
xor
sbb
inc
add
inc
push
cmpsl
jp
mov
xor
or
jo
mov
jmp
mov
inc
sub
cmp
push
sub
loopne
sbb
pop
cwtl
dec
push
mov
and
pushf
cs
fdivs
sub
xor
adc
and
push
inc
and
lret
cmp
rclb
lods
outsl
lods
sbb
push
adc
lds
add
lods
push
sub
sub
dec
jb
movsb
aas
inc
test
es
adc
aad
xchg
xorl
test
inc
or
jl
icebp
pop
push
push
insl
add
pop
je
pop
mov
or
inc
movsb
nop
inc
inc
cmp
sbb
pop
push
mov
mov
cwtl
enter
jno
in
push
mov
aas
add
xchg
jge
loop
cmp
fidivs
out
add
and
mov
rolb
pop
call
dec
lea
mov
cmp
incb
and
xor
push
xchg
rcrb
cmp
out
dec
sub
in
push
jl
dec
loop
jns
inc
inc
dec
push
daa
mov
sub
pop
sbb
xor
mov
or
out
mov
xchg
testb
inc
andl
dec
xchg
push
dec
or
cli
xor
enter
or
add
out
mov
lea
add
in
cmp
sub
inc
mov
or
pusha
lock
push
or
add
dec
add
outsl
adc
jno
lea
sbb
aas
andb
push
push
in
jmp
push
xor
out
xor
shlb
add
inc
push
jg
int
jns
push
inc
xor
in
cli
std
jb
out
add
test
out
dec
in
cmp
push
sbb
xor
sahf
adc
leave
xor
or
add
xchg
sub
dec
aam
jb
mov
enter
and
cmp
pop
mov
and
sbb
mov
sub
mov
sbb
lret
cwtl
mov
bound
cs
pop
xchg
icebp
fs
pop
push
pop
ror
cwtl
mov
inc
clc
inc
or
ss
sbb
inc
ja
or
jle
and
mov
sar
add
aas
inc
enter
ja
inc
pop
adc
or
enter
sbb
add
repnz
in
and
push
xchg
push
push
inc
push
and
mov
insl
pop
xchg
bound
or
xchg
test
fdivl
cld
jecxz
loope
aam
or
add
fwait
loop
adcl
adcl
add
jb
mov
pop
rolb
pop
dec
pop
cmp
cltd
inc
lods
mov
outsb
bound
sahf
add
inc
jns
je
xor
or
sub
or
and
pop
cmp
mov
pop
jl
xor
lret
into
push
inc
or
or
dec
cli
xor
push
pop
add
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
mov
ret
pusha
mov
in
scas
xor
xor
in
pop
je
push
mov
cmp
xorl
or
or
push
xor
xor
push
cltd
in
testb
xor
pop
jne
jns
das
shl
pop
sbb
nop
notb
add
sbb
in
aad
je
sub
dec
int
stos
in
loope
mov
outsl
lock
jne
nop
fmuls
into
jl
inc
mov
sub
mov
jge
lds
ljmp
inc
sub
xor
fs
in
cmpsb
mov
data16
fs
es
mov
cmp
push
insb
add
clc
add
and
pop
push
pop
inc
mov
nop
xor
mov
js
add
ss
sbb
push
jmp
add
add
or
jecxz
clc
inc
add
punpckhbw
inc
add
fs
stos
or
push
clc
mov
and
pop
mov
movsl
lods
add
aad
push
mov
loop
test
adc
adcl
cmp
and
pop
and
dec
addr16
test
insb
add
push
mov
pop
loopne
push
sbb
add
or
add
repnz
add
xor
mov
sti
ss
in
mov
mov
pop
jecxz
lds
dec
daa
xchg
outsb
fdivrs
dec
imul
das
cmpl
mov
rol
push
std
dec
xor
pop
arpl
pop
insl
popa
out
push
fwait
dec
sbb
icebp
jecxz
out
jge
cmp
lods
dec
inc
add
xchg
jle
fcmovnb
mov
movsl
loopne
jbe
xchg
dec
xor
ret
movsb
add
cmp
ret
fidivl
push
push
cmp
push
adc
jle
data16
adc
jne
inc
mov
add
mov
inc
pop
cmp
enter
movsl
mov
inc
jbe
adc
mov
cli
movsl
cmp
lods
push
bound
test
mov
call
mov
push
rolb
sbb
and
rorl
int
pop
sbb
fwait
aam
fwait
inc
ss
pop
notb
push
sub
popf
xchg
push
bswap
rolb
push
sbb
ss
adc
adc
leave
jne
push
jmp
cmp
and
cmpsb
mov
adc
bound
leave
fs
sbb
pushf
inc
xlat
test
lcall
and
ja
gs
inc
xor
and
repnz
jb
and
adc
push
or
dec
or
dec
pusha
je
mov
loopne
or
add
or
ret
enter
lret
mov
sbb
pop
xchg
mov
mov
sbb
mov
xchg
mov
mov
int
jg
test
movsl
or
pusha
cmp
add
in
dec
cmp
shlb
fiaddl
mov
mov
leave
push
mov
pop
xchg
mov
mov
jecxz,pn
dec
insb
divb
mov
jne
add
jne
fiaddl
imul
xchg
xchg
sbb
mov
add
adc
dec
lock
inc
mov
adc
test
scas
movlps
sub
xchg
xchg
inc
rolb
out
lret
jo
mov
fs
imul
push
inc
mov
inc
loopne
sbb
sbb
jmp
mov
sbb
adc
mov
add
adc
xchg
and
ljmp
dec
sub
xor
lods
inc
pop
and
inc
or
pop
add
sbbb
rcrb
sbb
or
mov
mov
popa
sbb
xchg
mov
arpl
dec
loope
or
dec
jnp
dec
inc
adc
push
arpl
fs
inc
mov
xor
mov
xchg
adc
jle
sarl
js
inc
clc
xor
mov
popa
pop
adc
pop
test
push
movhps
hlt
adc
in
and
fldl
inc
add
pop
and
push
adc
xchg
push
movsl
leave
ja
cmc
xor
ret
cmc
add
push
add
lcall
dec
lret
or
data16
bound
mov
dec
pusha
fmuls
and
mov
xchg
mov
fldl2t
adc
add
popa
imul
jle
call
jno
and
dec
sub
ret
popa
sub
orl
pusha
xor
js
or
jns
and
adc
push
add
inc
loopne
or
lea
mov
jle
setge
outsb
loope
push
test
pusha
lock
sbb
push
cmc
outsl
ja
pop
add
jl
add
jl
movl
inc
popa
ret
movsb
dec
push
lahf
sub
test
sub
xlat
and
jns
add
mov
ds
icebp
adc
or
push
jl
mov
jmp
inc
lahf
mov
dec
mov
cmp
js
cmp
jl
push
push
push
or
mov
shl
or
mov
iret
mov
ret
test
es
hlt
stos
cli
loopne
add
repz
cmp
inc
outsl
test
add
les
loop
in
cmp
and
jae
movb
loop
frstor
xor
in
loope
imul
jmp
and
add
icebp
or
xchg
jl
or
or
stc
inc
lret
mov
rorl
pop
xchg
call
in
test
aad
sbb
cmp
orl
add
out
test
rorl
add
mov
or
mov
es
sbb
sbb
test
adc
fiaddl
push
xchg
mov
clc
cmp
rorb
hlt
mov
push
lods
bound
add
sbb
cmp
adc
pop
pop
push
mov
outsl
mov
popa
mov
int
ror
stos
fs
sbb
popf
cmp
pop
sbb
jle
jle
icebp
pop
decb
cmpsb
cld
sub
lock
cmp
and
add
adc
enter
xor
push
outsb
mov
add
push
mov
stc
add
push
push
add
push
std
xchg
mov
or
scas
flds
hlt
adc
adc
add
mov
addb
sbb
sbb
jo
mov
add
test
xorb
cmc
xchg
movsb
fstpt
push
lcall
cmpsb
add
dec
loope
hlt
rclb
repz
popa
jo
sbb
and
pop
sub
dec
add
mov
mov
shlb
xchg
addl
dec
xchg
sarb
or
add
xor
and
lcall
nop
icebp
inc
inc
push
and
lds
cmpsb
xchg
je
mov
dec
push
out
lahf
in
mov
daa
or
xor
sbbb
add
xor
out
pop
adc
inc
scas
mov
mov
fdivr
mov
add
xor
mov
jecxz
cmpsb
ret
lea
jmp
fs
mov
mov
loope
mov
ficoms
and
test
pop
jb
add
lock
dec
scas
in
sub
jae
push
ret
adc
arpl
adc
jecxz
xor
mov
push
andb
xorl
mov
mov
dec
xchg
dec
push
add
scas
cmp
mov
pusha
push
push
xor
or
jo
inc
push
jb
adc
dec
insl
test
or
mov
sbbl
fs
adc
pop
add
dec
or
or
adc
js
and
jns
mov
push
dec
push
cli
ss
gs
pop
jb
or
sbb
push
repnz
or
lods
mov
daa
in
lret
cmp
push
and
inc
adc
push
roll
pop
push
jb
push
xor
femms
ret
shlb
aaa
jl
mov
or
dec
std
xor
adcl
add
pop
adc
pop
int3
ds
or
pusha
or
adc
mov
leave
push
mov
inc
ret
inc
add
push
inc
pop
adc
cmp
push
adc
cmpl
nop
adc
jmp
push
add
lock
out
fimull
fwait
add
mov
inc
sbb
and
xor
inc
add
imul
inc
add
loopne
lgs
pop
mov
pop
pop
or
ja
mov
push
push
inc
dec
dec
addl
xor
mov
xor
jl
adc
loope
mov
clc
inc
sbbl
dec
fstps
push
add
jge
inc
fs
ret
jo
cltd
lods
imul
mov
loopne
subb
xchg
stos
xchg
cmp
stos
cmp
push
test
add
xchg
mov
aam
sbb
add
xchg
or
adcl
hlt
push
jmp
in
push
nop
xchg
fildl
mov
mov
cltd
push
in
andl
sbb
add
call
das
push
test
fdivs
jne
cli
fdiv
xchg
add
jl
sub
add
sub
mull
fs
fadd
xchg
sbb
lret
adc
js
hlt
ja
mov
int
mov
mov
add
outsl
mov
imul
add
rclb
mov
ljmp
fcmovnb
pushw
out
xchg
out
mov
sbb
mov
addr16
stos
inc
in
les
js
xchg
hlt
mov
pusha
mov
imul
movsb
and
adc
aas
adc
jb
or
push
sub
or
loopne
lahf
xor
jecxz
arpl
dec
sbb
shll
mov
push
fcoms
pop
inc
sub
mov
sarl
pop
shrl
push
call
push
push
mov
or
in
mov
das
push
push
xor
or
adc
fsts
push
or
adc
pop
push
sarl
adcb
add
test
dec
jo
das
pop
push
jecxz
mov
outsb
jmp
cwtl
cmp
dec
aam
adc
mov
lea
mov
mov
stos
mov
push
outsl
test
sbb
jnp
adc
shll
and
and
cmp
test
outsl
mov
in
push
dec
sbbb
lock
stos
ds
push
adc
clc
xorl
lods
pop
lock
inc
test
lods
addl
pop
dec
cli
mov
mov
add
cmp
and
mov
popf
notb
push
mov
push
enter
mov
push
mov
cmp
and
shl
push
mov
icebp
sahf
ss
and
movl
inc
out
in
in
enter
mov
push
xchg
mov
cmp
jmp
pop
sbb
nop
dec
lret
cmp
icebp
jecxz
pop
mov
jno
rorb
dec
sub
and
mov
enter
test
and
sbb
push
inc
mov
sbb
repnz
adc
mov
sbb
dec
sub
mov
scas
mov
cmp
rolb
movb
push
popf
hlt
or
ds
cmp
push
add
fs
inc
rcl
enter
cltd
int3
inc
cmp
adc
mov
and
das
je
aas
lods
xchg
or
add
loopne
sbb
mov
mov
xchg
or
sbb
sbb
movsb
cmp
adc
or
shrb
mov
shr
mov
fists
mov
mov
mov
jle
jmp
cmpb
push
lret
add
jg
push
inc
add
fstl
push
fmull
rol
mov
jne
movsbl
mov
pop
lahf
addl
clc
adc
jbe
push
paddb
ja
push
mov
lret
or
jge
insb
mulb
xor
dec
jp
dec
sub
outsl
dec
sbb
and
pusha
mov
jl
ret
lahf
bound
inc
jmp
cmp
add
cli
sub
mov
jmp
mulb
mov
test
pop
cmp
jl
nop
cli
dec
lods
cmp
xchg
lods
add
mov
lahf
mov
and
and
scas
dec
xchg
lods
xor
test
pop
lods
adc
cli
xor
rcll
adc
add
rcrb
hlt
add
pushf
mov
inc
pop
xor
or
imul
xchg
iret
xorb
and
outsl
or
loope
or
sti
push
std
add
loop
push
leave
leave
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
pop
hlt
inc
jno
xor
ret
loopne
int
dec
cmp
popa
xor
sahf
mul
mov
out
icebp
push
idiv
out
fidivrs
push
clts
pop
pop
daa
sahf
out
sahf
das
aaa
cmp
inc
dec
jns
out
push
push
pop
pop
fs
sahf
out
outsb
jae
jge
out
sahf
addb
sahf
out
mov
fnstcw
rcrl
add
add
push
pop
or
and
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
and
mov
ret
jne
sub
fcomps
mov
push
sbb
inc
inc
nop
inc
ljmp
loop
add
movsl
jge
pop
leave
fnstcw
in
fisubrl
enter
xor
hlt
pop
add
jo
out
lcall
add
iret
rorl
or
xor
fwait
xor
sub
xor
test
test
mov
jb
inc
lea
sub
loope
sbb
call
adc
mov
loopne
popa
out
add
and
adc
and
test
lahf
push
ret
mov
lods
cmp
ja
jb
flds
mov
cmp
aam
inc
mov
or
es
sbb
mov
jl
mov
push
loope
sub
pop
gs
fcompl
repnz
mov
push
icebp
inc
mov
dec
sarb
call
adc
sbb
ljmp
jecxz
inc
jge
movsb
inc
mov
inc
fidivrl
sbb
add
jp
jo
mov
lea
shr
and
mov
xor
pop
xchg
push
movb
cld
inc
pop
pop
mov
ret
movl
rol
sbb
pop
cmp
mov
dec
cmp
jbe
mov
fmull
push
add
int
out
or
jge
adc
push
pop
rorb
test
and
rorl
xchg
bound
xor
jno
fmull
lea
imul
and
xor
lret
out
jbe
jbe
push
lcall
ss
sbb
pop
rclb
lock
add
mov
dec
inc
das
in
or
sub
add
inc
add
or
sbb
hlt
mov
add
pop
mov
push
and
loopne
mov
pop
mov
jl
pusha
xchg
outsb
jo
inc
pop
stos
xchg
popa
cmp
push
scas
mov
fimull
inc
insl
mov
inc
out
incb
loope
out
pop
adc
sub
xchg
mov
test
adc
adc
jo
inc
je
cmp
scas
push
fdivl
mov
add
outsl
sbb
mov
and
shl
lret
out
push
sbb
adc
call
xor
sub
mov
mov
sbb
mov
cmp
and
pop
cltd
and
enter
and
xchg
ja
repnz
add
sbb
add
and
mov
pop
push
add
xchg
sbb
push
xchg
ror
inc
add
push
subl
inc
and
sbb
fidivrl
cmp
jl,pn
outsl
sbb
les
sub
out
adc
jle
arpl
cmp
jne
lea
cmp
ret
add
jg
and
or
js
mov
inc
ret
js
lods
nop
push
sahf
push
push
add
mov
inc
mov
or
filds
outsl
or
icebp
jl
dec
dec
sahf
cmp
push
test
js
jmp
and
test
xchg
cmpsb
jb
pusha
and
push
dec
daa
pushf
cwtl
sub
cmc
fwait
cmp
jae
movzbl
rorb
xlat
push
add
cmpsb
adc
mov
dec
xchg
and
or
jmp
mov
inc
or
or
push
push
inc
in
addb
or
jl
jmp
mov
mov
and
cwtl
and
movl
sbb
and
lods
add
pop
ret
shrl
cltd
ja
jmp
push
jbe
jo
pusha
mov
and
call
ret
cmp
rorl
xor
out
and
mov
or
add
add
daa
push
push
mov
es
pop
lcall
jne
testb
fwait
xchg
int
insl
pop
mov
adc
push
push
sbb
jl
mov
test
adc
repnz
in
or
sub
sbb
add
add
test
pop
or
cmp
dec
cli
mov
sarl
add
mov
mov
inc
hlt
roll
xor
inc
pop
and
inc
mov
pop
ret
loopne
pop
or
imul
dec
xchg
sbbl
inc
xchg
nop
mov
addl
cmp
scas
fmull
movsl
add
mov
add
test
jb
sbb
shll
mov
enter
add
mov
int3
lds
in
jno
push
icebp
jmp
popa
push
jne
mov
inc
ja
fcompl
add
push
ljmp
push
jmp
movsb
or
outsl
pop
dec
inc
clc
xor
test
fists
dec
xor
ret
dec
pop
pop
mov
jno
and
hlt
sub
mov
je
cmp
push
bound
andb
enter
jno
loope
xchg
xorb
outsb
cld
push
xor
jp
push
mov
and
pop
ds
jae
lods
sbb
dec
push
mov
or
inc
push
mov
pusha
cmp
jb
mov
testl
in
push
shrb
aam
jg
insl
bound
push
enter
and
addl
ds
rolb
jae
mov
lock
or
xlat
clc
ss
xor
mov
mov
ret
or
mov
push
sbb
xor
dec
sarb
adc
cmp
scas
inc
arpl
xor
dec
je
jnp
dec
ficoms
ret
pusha
adc
insl
ret
xchg
loope
lcall
mov
and
inc
in
mov
dec
push
nop
pop
int
mov
repnz
sbb
xchg
nop
xor
or
sbb
cli
lahf
ljmp
nop
fsubs
popf
fucomp
inc
pop
adc
addr16
scas
inc
sbbl
and
dec
loope
pop
stos
mov
arpl
mov
xorb
mov
push
inc
xor
cli
xor
dec
jl
and
mov
mov
adc
aam
or
xor
or
mov
xor
lea
push
rol
ret
test
cmp
lcall
inc
pop
inc
inc
jmp
bswap
in
or
pop
ret
adc
stc
push
or
shlb
idivl
popa
cmp
or
xor
dec
mov
aam
cmpsl
jno
adc
xchg
jo
cmp
sbb
ret
pop
jl
cs
fisttpll
mov
and
mov
jae
mov
push
cmpsl
sbb
push
sub
push
shrb
push
adc
mov
and
insl
lods
sbb
pusha
pop
mov
or
pop
ljmp
bound
push
pop
push
imul
or
push
hlt
cmp
sub
add
pop
in
or
cmp
inc
mov
movsb
movsl
popa
inc
xchg
mov
loop
mov
push
fdivs
inc
push
hlt
sbb
push
scas
call
and
dec
sub
stos
movsb
pop
ljmp
xchg
xchg
adc
mov
adc
add
push
jle
mov
cmp
sbb
push
xchg
stos
pop
das
adc
adc
out
and
dec
xchg
mov
pop
arpl
jecxz
jnp
sub
loop
dec
add
test
mov
pop
mov
mov
fwait
rorb
sub
xchg
adc
adc
xchg
inc
daa
fs
dec
inc
sub
ds
mov
jns
sub
xchg
inc
pusha
cmp
lock
ds
mov
sbb
lods
xor
stos
mov
outsb
xchg
or
mov
pop
enter
ljmp
insb
lods
shlb
lret
pop
mov
insb
enter
jle
fs
imul
sbb
dec
bound
push
lods
lea
mov
jb
xchg
js
leave
xchg
or
xor
cwtl
and
inc
and
jns
jnp
test
adc
in
out
push
push
lods
add
sub
jbe
pop
and
and
push
xor
psubusw
xor
xchg
sub
ret
imul
stc
and
addr16
ljmp
xor
outsl
shlb
das
cmc
loopne
inc
leave
adc
adc
sbbl
insb
mov
pop
roll
add
shrb
jmp
adc
xor
cmp
or
mov
push
and
cmpsb
imul
pusha
pop
sub
inc
loopne
dec
repz
adc
cmp
fistpl
cmpsb
cmp
add
pop
fcmovne
leave
sbb
xor
pop
ret
push
and
fcmove
popf
sbb
xchg
xor
push
cltd
pop
cli
or
dec
mov
cltd
sarb
loop
mov
rclb
mov
lods
dec
sbb
inc
mov
sbb
lea
push
scas
and
pop
test
insl
push
push
test
cld
mov
mov
cmpl
sub
sbb
jne
imul
orl
adc
dec
mov
sbb
int
cmp
jne
and
mov
mov
les
clc
dec
push
push
pop
cmp
inc
sbb
xor
push
jp
push
push
fsubl
inc
inc
mov
fsubrl
xor
adc
loope
fs
scas
insl
fimull
ss
ds
mov
add
stc
aam
jle
sub
fwait
mov
mov
daa
add
cmp
outsl
xor
pop
add
jmp
fstp
push
popa
pop
push
test
aaa
bound
cmp
lea
je
test
mov
fidivs
mov
or
push
stc
adc
sbb
shrb
mov
dec
sub
xor
enter
xchg
xor
xchg
xchg
inc
outsb
push
sbb
sahf
and
and
cmpsb
fs
add
mov
in
ja
arpl
je
or
lret
es
sti
bnd
aad
pop
push
cmp
pusha
cmp
xchg
jne
push
cmp
mov
mov
adc
cwtl
push
aad
dec
mov
mov
lea
daa
call
pop
cmp
shrl
push
cmp
jge
mov
mov
inc
pusha
leave
ljmp
cmp
inc
sub
sbb
dec
enter
mov
mov
cmp
mov
or
lock
clc
clc
cld
sub
jae
movl
mov
or
push
add
popa
lcall
aaa
in
ja
fnsave
add
dec
je
add
adc
aas
sar
cmp
dec
or
mov
shr
sbb
sbb
mov
sub
jae
loope
xor
push
clc
adc
or
cmp
js
mov
adc
loope
out
add
adc
je
dec
je
sbb
insl
push
add
inc
icebp
mov
out
pop
mov
repnz
inc
add
jmp
sub
decl
xor
add
mov
in
mov
cli
mov
adc
mov
pushf
cmp
rorb
and
mov
xor
add
jle
test
clc
xor
inc
xorb
inc
jmp
sbb
bound
insb
ret
cltd
idiv
inc
inc
imul
and
jb
test
adc
cmc
cmp
dec
xor
add
add
aas
cmp
mov
stc
data16
push
push
or
push
adc
push
push
lock
dec
add
out
fistl
ret
sbb
jne
jmp
daa
xchg
xor
pop
call
ret
aaa
push
xor
dec
mov
repnz
cld
insl
addr16
jae
ss
imul
lcall
lea
push
ds
jne
cs
in
nop
xchg
jl
sub
sbb
cmp
ljmp
pop
je
cmp
pop
cmp
je
cmp
jne
inc
jne
mov
sub
mov
or
and
adc
ret
or
fisttpl
xorb
sbb
sbb
clc
cmp
jne
xlat
mov
add
loop
cmp
jne
mov
sbb
ja
test
cmp
or
add
xor
sub
jmp
push
jl
or
jg
mov
dec
sub
xor
and
popa
push
jmp
inc
jl
adc
jg
aaa
push
add
shl
in
or
jmp
mov
iret
mov
mov
outsl
adc
test
xchg
je
lcall
sbb
jl
rcrl
sti
push
pop
in
icebp
popa
jecxz
mov
jmp
test
xor
sbb
subl
pop
subl
inc
cmp
sti
inc
jl
pusha
mov
jg
xor
pmaxsw
xor
jo
mov
roll
ret
popf
aas
cmp
lods
daa
lcall
mov
shr
shrb
rolb
ljmp
mov
jge
inc
out
insl
push
lds
xchg
xor
xor
fsubs
inc
cmpb
mov
ret
adc
pusha
and
idivb
fsubr
inc
inc
sbb
adc
inc
out
jmp
xor
sub
cmp
xor
and
adc
pop
or
lock
jo
into
or
ja
mov
cmp
insb
and
dec
subb
and
and
jmp
pop
cmp
add
les
out
cmp
jle
movb
fnsave
mov
cltd
fs
push
pop
out
loope
jne
mov
mov
pop
cmp
sub
xor
roll
insl
shr
pop
adc
je
and
jne
ret
or
pop
outsl
jnp
jbe
rclb
adc
adc
test
pop
sbb
adc
lea
push
dec
push
sub
xor
andl
mov
push
add
roll
pop
ret
push
sbb
sbb
mov
push
lock
sub
jge
jne
pop
mov
push
repnz
jp
pop
mov
add
cmpsl
push
add
repz
add
sub
mov
daa
jno
or
inc
add
jg
js
inc
or
sarl
insb
xchg
pop
sbb
or
cmp
jne
add
push
adc
inc
lock
imul
jmp
inc
rolb
mov
pop
jl
xlat
push
add
jle
sbb
imul
iret
xchg
shll
imul
jmp
jl
loopne
add
add
sub
test
in
add
cld
cmp
push
int3
sub
aas
mov
movb
jbe
xor
push
sub
imul
push
cmp
mov
cld
sub
cmp
inc
push
lock
jns
addr16
push
roll
sub
ret
cmp
mov
push
daa
inc
js
push
imul
cmp
sahf
xchg
and
js
sbb
cmp
jno
or
adc
push
repnz
sub
faddl
or
inc
mov
leave
enter
or
cli
movb
jbe
orb
push
inc
js
shr
mov
add
cmpb
jne
imul
mov
imull
jge
les
jae
sbb
cmp
push
sub
xor
and
mov
xchg
std
mov
mov
mov
aas
add
test
adc
rolb
dec
cli
xchg
movsb
push
inc
inc
or
mov
mov
xchg
test
jnp
std
jmp
addl
push
adc
or
mov
aaa
out
cmp
filds
jecxz
in
test
mov
xor
dec
jg
repnz
adc
add
mov
add
sarl
rcl
or
xchg
sub
inc
xor
in
push
mov
mov
dec
dec
lds
in
cmp
mov
scas
fs
js
cmpsb
push
inc
inc
inc
adc
push
and
sbb
or
adc
or
dec
inc
insb
je,pt
inc
add
and
pop
loopne
xchg
rclb
mov
pop
push
mov
rorl
dec
imul
test
mov
fildll
pop
add
imul
lds
push
scas
push
push
and
adc
pop
jo
mov
xlat
push
call
sti
fcmovnbe
xor
jnp
jo
js
js
push
jnp
into
out
idivl
push
push
xor
in
shlb
pop
push
push
push
mov
adc
mov
xchg
sub
xchg
call
xchg
inc
push
sub
rcrb
mov
imul
and
xor
add
mov
subl
shll
std
jmp
mov
bound
insl
test
sub
cmc
push
subb
lret
sahf
xor
fsubrs
shll
push
loope,pn
xor
lea
add
mov
pop
inc
xor
cmp
jb
pusha
hlt
cli
es
aas
push
dec
dec
rol
mov
or
sbb
fadd
je
ret
cmpsb
ss
stc
sbb
testl
push
or
mov
xor
cmp
sub
mov
xchg
xchg
lods
sub
add
sbb
mov
and
sbb
push
mov
cwtl
pop
dec
jne
hlt
jge
cmpsb
loope
leave
inc
je
cmp
not
mov
inc
mov
in
sbb
mov
inc
daa
aas
cmpb
add
sub
push
lahf
push
inc
push
rcll
push
jge
sbb
add
sub
test
adc
les
movsb
mov
xor
inc
push
push
add
dec
mov
pop
ret
fbld
popa
aaa
les
nop
mov
dec
shlb
push
lods
jne
pop
sti
fnstenv
push
add
inc
out
or
lret
repnz
sbb
and
das
or
xchg
adc
sbb
add
das
out
in
sti
mov
cmpsb
inc
stc
cmp
pop
popf
inc
inc
mov
add
cmp
jne
xor
sar
add
jne
sbb
xor
lea
iret
repz
clc
jmp
xor
call
in
push
add
ficompl
fdivs
mov
jne
mov
pop
shrb
lods
xchg
sbb
sbb
add
enter
add
enter
dec
aaa
push
add
and
cmp
prefetchw
xchg
mov
push
mov
mov
inc
jno
or
xor
inc
mov
cmpsb
jmp
adcl
or
imul
push
sub
nop
or
les
push
mov
test
shll
xchg
jno
and
push
bound
add
aad
cmpsl
fcomp
je
sbb
shrb
addr16
das
or
xchg
sub
shrb
xchg
inc
xor
and
push
jmp
mov
shrl
lock
pop
cmp
sbb
in
movl
add
pop
jmp
in
add
dec
andl
pop
clc
out
sbb
divb
xor
rclb
enter
mov
pop
mov
loope
mov
or
lods
mov
movsb
mov
xor
andl
mov
sbbb
addb
push
mov
add
push
fistl
push
jmp
adc
pop
mov
sarl
push
popf
add
out
add
jmp
fsubr
ret
mov
or
je
sub
nop
test
add
and
and
add
add
adc
inc
and
sbb
pop
or
push
xchg
adc
test
int
mov
vmread
xor
xlat
fisubl
adc
adc
push
jo
xor
rcl
add
adc
lods
add
lea
in
in
add
popa
jns
out
jmp
aaa
xlat
add
sub
rolb
add
cmp
xchg
cmp
and
mov
cmpsb
adc
les
ret
mov
adc
jae
adc
pop
cmp
push
sbb
ss
pop
push
fbstp
push
xor
jne
inc
sbb
inc
sbb
adc
imulb
jnp
xchg
lea
fwait
jle
mov
mov
sarl
js
mov
and
xor
jno
pop
mov
ss
mov
or
jmp
cmovnp
pop
sub
jmp
mov
inc
call
push
xchg
lods
int
fcmovnbe
adc
pop
out
adc
jo
out
out
mov
cmpb
cmp
adc
outsl
pop
push
ret
pop
cmp
outsl
add
imul
mov
mov
in
cmp
rorb
or
rorb
push
inc
sbb
inc
mov
ss
mov
enter
je
ljmp
fadds
cs
jmp
xchg
icebp
add
adc
jl
xchg
lret
mov
adc
push
xor
ret
add
lret
clc
push
ljmp
mov
push
jg
pushf
or
out
adc
push
cmp
push
or
add
or
jo
and
mov
inc
sti
or
jbe
repnz
xor
and
sbb
int
and
mov
dec
mov
ja
pop
rcll
push
inc
mov
pusha
pushf
out
test
je
inc
or
or
dec
sub
subl
xor
push
push
push
ret
adc
loope
adc
les
inc
mov
sbb
icebp
adcb
std
pushf
mov
cmp
rcll
pop
pusha
in
mov
and
mov
pop
sub
ficoms
cmp
pop
jp
aad
test
xor
jne
mov
mov
je
jp
sub
adc
inc
jne
pop
push
jae
and
es
xchg
adc
pop
shlb
cmp
inc
push
lock
and
loop
aaa
lahf
ds
xor
push
lcall
jmp
cmp
xchg
fdivrp
dec
pop
adc
cmp
das
or
adc
xchg
lock
cmpl
loop
push
test
sbb
xchg
or
add
inc
dec
imul
mov
popf
fwait
dec
nop
lcall
out
jle
ret
and
add
cmp
jge
jo
mov
js
sub
test
push
add
scas
push
test
jnp
pusha
mov
xor
aas
cmp
push
mov
jo
scas
gs
jl
jp
clc
addb
jmp
dec
jbe
xor
add
or
adc
fbstp
and
xchg
push
push
insb
dec
jmp
pop
push
ds
std
cli
lods
sub
out
jae
cmp
pop
mov
sub
push
jmp
sub
enter
fldcw
adc
add
xorb
and
mov
jge
push
jg
add
test
aam
pop
mov
shll
ljmp
pusha
xlat
mov
inc
push
je
jp
add
jnp
std
mov
fucomp
pop
dec
push
push
push
ss
cli
add
out
dec
nop
mov
ret
pop
sbb
pop
lock
shr
add
leave
data16
mov
movsl
fs
dec
sbb
in
inc
add
dec
movb
loope
addr16
and
iret
pop
mov
push
scas
stos
pop
aaa
cltd
sahf
into
and
sub
nop
and
push
sbb
rclb
mov
movsl
sub
push
jae
shll
cmp
ja
scas
shlb
std
sub
outsb
sub
or
jl
ljmp
lea
xorb
pop
dec
push
rorl
jbe
pop
cmp
xchg
cmp
jo
jbe
add
mov
xchg
andb
or
ds
add
ret
cmpsb
cwtl
int
inc
pop
popa
add
outsl
cmp
pop
js
jge
cmp
or
fwait
mov
pop
jnp
ret
add
loope
adcl
add
insl
add
pop
fwait
je
or
adc
push
or
xchg
scas
sub
push
loopne
fisttpl
sub
imul
sbb
push
out
les
je
shr
rcll
mov
icebp
cmp
sbb
shrb
bound
sbb
repz
es
xlat
loopne
adc
dec
inc
or
jmp
popa
sub
xchg
xor
mov
cltd
push
cli
push
das
sub
push
sarb
push
inc
ret
or
mov
mov
loope
push
and
aas
pop
cmp
push
jmp
lcall
sub
call
dec
and
mov
mov
xor
aad
mov
sbb
sbb
dec
fcmovnbe
loopne,pt
clc
imull
push
dec
pop
std
sbb
cmp
and
push
xor
jo
shrb
adc
in
inc
jo
sbb
mov
sub
loopne
sbbl
in
sbb
push
iret
rcl
xorb
adc
lcall
mov
push
xchg
cmp
hlt
inc
adc
loop
repnz
je
sar
adc
pop
es
mov
mov
ds
sbb
mov
inc
outsb
movsl
hlt
nop
inc
xchg
push
push
pop
mov
push
jg
rcl
cltd
aam
sbb
call
stos
fsubs
push
mov
je
xchg
sbb
fisubrs
test
push
mov
sbbl
pop
dec
pop
pop
add
popa
lock
adc
and
sbb
loopne
inc
repnz
mov
cmp
jnp
add
adc
or
shll
jmp
add
add
xor
cld
pop
cmp
je
cmp
jbe
push
xor
lods
inc
ret
je
rcrl
loop
cwtl
lret
lea
pop
push
movl
adc
inc
movsb
nop
roll
sub
or
cltd
jle
sbb
cli
pop
inc
imul
and
lcall
cmp
cmc
or
test
xchg
add
pop
or
or
cmp
or
add
jne
mov
sbb
cmp
scas
xorl
jo
mov
pop
stos
ljmp
test
add
push
cmp
lock
subb
jb
adcb
pop
cmp
sbb
loop
mov
mov
data16
push
inc
cmp
push
inc
xor
push
sbb
and
shll
jp
fdivs
and
add
popf
fnsave
jne
push
nop
dec
rclb
cmp
or
pop
pop
or
jne
push
sub
fcomi
ss
cmp
add
in
push
inc
pusha
jle
push
xor
pop
div
dec
cmpl
std
jb
lea
int
sbb
pop
adc
or
xchg
jmp
lods
push
dec
xor
push
inc
fidivrs
xchg
dec
push
adc
xor
jmp
add
push
add
xorl
jb
addl
mov
cltd
adc
mov
push
and
dec
mov
jo
out
add
or
pop
nop
push
sbb
sbb
dec
adcl
fstl
dec
add
or
dec
sbb
pop
dec
mov
pop
pop
push
cmp
out
cmpsl
mov
cmp
fbstp
push
sub
sub
jne
shll
or
adc
out
adc
add
pop
cmp
lret
fiaddl
inc
bound
sub
loop
pop
out
shrb
pop
in
jnp
lods
test
fwait
jmp
mov
push
jl
cmp
jo
cmpl
scas
pop
and
and
rolb
sbbb
psubusw
mov
jae
test
push
and
clc
jg
fs
test
pusha
ficomps
sti
jmp
movq
movaps
push
clc
repz
outsb
jae
xor
jle
xor
cli
rorb
das
jo
lret
je
cmp
cmp
or
dec
mov
xchg
mov
cmc
mov
adc
jnp
mov
push
and
je
adc
adc
or
outsb
adc
sub
mov
mov
outsb
ficoms
mov
add
std
imul
addps
int
add
loopne
fcmovb
sbb
sbb
xchg
pop
pop
and
push
xor
mov
rclb
clc
ja
movb
test
adc
rcrl
icebp
xor
mov
mov
repnz
push
subb
shlb
push
pop
stos
and
adc
adc
mov
adc
add
adc
push
inc
mov
or
jns
negb
sbb
mov
lock
inc
push
jne
inc
loop
daa
or
jns
daa
testb
mov
push
push
movb
or
ret
sbb
pushf
pop
addr16
sbb
sbb
sbb
data16
pop
clc
mov
sbb
and
enter
cli
xchg
adc
sub
mov
jnp
stos
xchg
and
add
or
push
iret
inc
mov
push
js
jmp
xchg
ucomiss
jne
adc
loopne
add
xchg
mov
mov
or
push
arpl
dec
aas
inc
hlt
or
insb
xor
pop
outsl
push
mov
mov
hlt
int
ss
xchg
add
nop
cltd
sub
nop/reserved
or
inc
into
adc
push
orb
push
push
cmp
enter
int3
mov
sbb
push
pusha
and
and
je
add
lcall
pop
cli
fiadds
fildll
cmp
jb
or
xchg
loope
add
test
mov
sub
sbb
fcompl
inc
pop
hlt
out
data16
movsb
in
xchg
xor
dec
nop
je
mov
cltd
pop
pop
inc
ret
add
push
jmp
jae
enter
pop
dec
adc
sbb
mov
pop
or
push
mov
add
inc
fsts
shr
arpl
rcrl
icebp
mov
pop
rcl
add
andl
lea
mov
adc
lcall
mov
mov
pushf
inc
hlt
insl
and
push
dec
js
mov
movb
and
add
pusha
adc
cwtl
xor
sgdtl
cmpsl
mov
jmp
cmp
jle
and
decb
sub
adc
pop
or
mov
ss
cmp
add
cmp
decl
shrb
je
cmp
jne
inc
cmpb
out
addb
or
and
mov
inc
inc
and
adc
or
or
mov
sub
ret
daa
mov
ljmp
cwtl
adc
inc
xor
hlt
mov
add
dec
mov
outsl
cmp
or
jo
loop
lret
ss
in
pop
lock
cmp
cmp
xor
pop
clc
inc
mov
cmp
sahf
leave
es
loope
pop
fdivp
or
lret
jne
dec
jmp
shl
xchg
cltd
loope
and
push
lret
jne
inc
les
jne
push
lds
jg
push
loope
mov
sub
pop
and
pop
hlt
jp
push
fldcw
fadds
js
adc
inc
sub
icebp
pop
rorb
or
cmp
adc
mov
inc
imul
jmp
or
pushf
ficoml
or
sbb
push
cltd
pusha
mov
adc
repz
outsb
push
add
push
pop
sub
sub
lds
fidivs
and
sub
aad
and
iret
shl
add
loope
inc
cmp
adc
fdivrl
addr16
arpl
push
add
sub
push
jge
fsubs
aam
add
jns
lock
sti
cmp
xor
adc
push
xor
or
pop
jne
sbb
ds
addl
imul
inc
enter
mov
repz
ds
push
jo
je
mov
add
cmp
jp
mov
aad
cltd
sub
pop
and
or
inc
cmp
sbb
sbb
jp,pn
lods
inc
lcall
push
cmc
mov
arpl
xlat
xor
dec
xchg
add
jbe
sub
cli
aaa
pop
shrl
pop
cmp
pushf
mov
cmp
into
lea
cmp
push
popa
aaa
adc
lret
sub
dec
jnp
xchg
sbb
push
adc
or
add
out
mov
jne
pop
sub
sbb
test
add
adcb
je
jne
stc
outsb
test
loopne
sti
shrb
and
pop
push
xor
add
in
xor
pop
aam
cmp
pop
or
xchg
rolb
and
push
add
data16
or
inc
mov
fadds
mov
rorl
call
and
xor
ds
ljmp
sub
pop
dec
cmp
repnz
shlb
jns
ja
pop
shrl
jl
jge
cmp
adc
dec
or
and
or
push
push
pop
pop
inc
scas
jmp
les
mov
addl
fwait
mov
push
add
fldl
sub
jne
imul
sbb
cs
enter
cmp
push
dec
or
cmp
xorb
fcomps
pushf
stos
cld
pop
insb
add
jecxz
jecxz
lret
mov
in
fimuls
adc
and
fadd
les
pop
xor
or
mov
jle
add
jg
mov
es
js
push
ljmp
in
xchg
sub
mov
sub
xor
sbb
xor
mov
mov
outsl
jmp
sbb
js
or
pop
push
sub
xor
je
ret
pop
fisubl
outsl
cs
cmp
add
add
shl
ret
pop
cld
push
add
xchg
clc
pop
jle
push
fimuls
jle
ja
pop
jbe
lea
adc
sbb
and
or
jp
dec
mov
leave
push
sbb
inc
pusha
add
push
clc
push
arpl
jbe
add
and
add
sub
xor
xor
xor
popf
lods
pop
pop
cmp
popa
mov
mov
adcb
in
das
mov
test
cmp
pushf
lods
pop
scas
xorl
in
add
int
mov
mov
je
mov
sbb
ss
mov
lret
pop
shrl
hlt
testl
cs
loop
add
or
test
sbb
cs
lods
push
xchg
mov
xor
push
xor
loopne
xor
and
mov
js
hlt
pop
lods
xchg
adc
out
push
mov
sbb
sbb
add
inc
sub
dec
add
adc
dec
or
ror
or
sahf
out
mov
inc
sbb
test
shl
push
mov
inc
sub
push
call
cmp
loopne
test
pop
pop
mov
jo
pop
ret
out
jnp
mov
xor
pop
cmpsl
stc
mov
ret
rclb
xchg
or
push
ret
cmp
cmpsb
or
out
push
out
xor
rclb
scas
icebp
push
and
repnz
aas
xchg
push
ret
and
jp
daa
dec
insl
aad
icebp
jne
jmp
lods
repnz
jecxz
push
push
test
lods
cmpb
dec
xor
flds
rcrl
cmovs
dec
dec
pop
xor
out
xor
pusha
dec
pop
jo
iret
adc
ret
std
insb
xor
push
rolb
xor
into
rclb
std
aaa
jecxz
dec
cmp
push
cld
jne
mov
outsb
sahf
out
push
cmp
jne
es
jne
sub
out
call
aam
adcl
leave
sub
jb
mov
lahf
xlat
aam
dec
or
adc
jmp
std
mov
push
jno
xor
cld
cld
jmp
fninit
ljmp
nop
adc
adc
inc
inc
inc
es
inc
push
out
stos
push
test
add
fdiv
mov
adc
xchg
sbb
outsl
jle
hlt
lea
mov
adc
repnz
and
adc
outsb
and
mov
aaa
adc
aas
lea
adc
add
adc
add
adc
pop
mov
xor
xor
dec
dec
xor
pop
pop
adc
xchg
pop
pop
inc
imul
push
sarl
leave
jp
sbb
pop
aam
es
adc
outsb
or
add
adc
ja
shll
repz
add
pop
add
xlat
inc
jnp
cli
xchg
fbld
sub
iret
je
mov
inc
or
jg
inc
or
hlt
add
mov
cmp
test
mov
mov
mov
push
push
pushf
cltd
mov
mov
or
push
mov
lret
xor
mov
jb
lea
push
mov
leave
in
and
and
rolb
cwtl
xorb
and
xorb
pusha
pop
loop
pop
js
lods
test
sub
cmp
adc
or
cmp
inc
popa
xchg
sbb
add
push
mov
xchg
push
cmpl
xor
mov
pop
mov
push
sub
nop
ret
adc
mov
and
lods
dec
aam
les
inc
mov
pop
in
adc
iret
es
jl
cwtl
push
dec
mov
rcrb
cmpsb
push
adc
or
ret
pusha
xchg
and
je
fbld
lcall
or
add
not
and
sub
loopne
shrb
sub
mov
cmp
cmp
loop
sbb
lret
fsub
xor
outsb
sbb
push
orb
and
inc
adc
lcall
lock
add
ja
sbb
pop
mov
sarb
mov
or
incl
stc
and
mov
inc
je
mov
mov
pop
popa
pushf
neg
mov
sbb
or
or
std
add
add
xor
pusha
repz
into
loope
sbb
scas
sbb
mov
mov
add
mov
inc
cmp
jb
jo
adcl
shll
cmp
outsl
xorl
leave
add
or
inc
and
fdivrs
loop
mov
ret
adc
dec
loope
ret
iret
pop
fisttps
pop
push
sub
or
ret
shl
push
fisttps
outsl
adc
jle
divl
lret
add
mov
sbb
xor
push
mov
jo
and
sbb
or
inc
push
add
out
jne
push
and
adc
out
cltd
call
ss
and
mov
je
test
je
cli
and
add
repz
push
aam
xchg
pop
addr16
xor
out
inc
outsb
or
cld
das
mov
sbb
lahf
cmp
dec
adc
xor
icebp
adcb
lock
pop
sahf
cmp
sub
hlt
jae
pop
or
jl
and
lret
mov
mov
pop
add
clc
in
pop
jle
addb
or
jns
notl
pop
cwtl
inc
jno
pop
inc
jmp
cmp
add
add
add
sub
mov
xor
jg
push
inc
adc
cmp
sub
rclb
mov
cmp
pop
in
js
or
and
adc
push
clc
adc
pop
rorb
jle
aaa
outsb
fmuls
adc
mov
sub
or
int3
lret
hlt
aaa
or
mov
and
je
lret
sbb
hlt
mov
jne
inc
dec
push
sbb
add
adc
mov
xor
or
mov
mov
lea
mov
add
push
inc
push
mov
and
mov
cs
mov
loopne
leave
adc
push
scas
movb
rcl
mov
ss
repnz
xor
pop
and
cmp
lods
mov
or
add
loope
push
sub
mov
scas
mov
xchg
add
getsec
jne
mov
std
jmp
or
add
repz
add
push
ret
lahf
test
sbb
or
mov
bound
xlat
jnp
jp
lds
push
xchg
push
inc
push
movsb
add
add
pop
xor
adc
call
xor
push
sbbb
ret
jmp
sbb
pop
insb
sbb
xor
loopne
or
inc
dec
jne
mov
je
push
jg
cmp
and
lret
test
fisubs
and
int
jo
or
adc
jb
lea
push
adc
fldl
dec
test
add
dec
inc
mov
push
pop
cmp
mov
or
adc
push
ret
mov
es
mov
nop
push
pushf
mov
popa
mov
outsl
daa
adc
push
jne
or
add
nop
out
jmp
or
cmp
xchg
movsl
insb
jmp
dec
pop
dec
sbb
sbbb
cmp
inc
pusha
shlb
mov
in
mov
xchg
leave
outsl
or
or
and
jmp
mov
data16
and
cmpl
pop
mov
shrb
add
jmp
mov
or
aam
xorl
or
stos
xchg
clc
pop
hlt
fs
jle
sub
movsl
inc
nop
jmp
inc
sub
add
scas
add
fdiv
fsubrp
sub
mov
mov
add
incl
inc
add
mov
mov
adc
dec
xchg
or
adc
push
test
pop
frstor
lock
push
je
rcrb
cmp
adc
int3
add
data16
adc
mov
push
into
and
test
xor
pop
shrb
or
dec
jle
shrb
jo
pop
sbb
jne
ja
lar
mov
or
inc
aas
call
jmp
subb
push
lods
and
leave
mov
push
out
dec
mov
mov
sub
in
xchg
pop
adc
int
mov
loope
loopne
in
int3
aam
pop
fiadds
push
sub
insb
push
mov
cmp
pop
addl
call
jne
pop
aaa
cmc
es
jbe
cmpsb
cltd
pop
idiv
scas
stos
movb
push
mov
mov
aad
and
push
rcll
mov
pusha
adc
shll
ror
and
dec
add
ficoml
add
mov
dec
xor
test
xchg
push
pop
push
pop
or
call
inc
mov
sahf
out
sbb
mov
mov
or
mov
cmpsb
add
add
sbb
inc
adc
jnp
out
or
repnz
add
imull
pop
or
mov
div
push
and
xchg
loopne
mov
inc
add
push
ret
add
jge
mov
stos
push
push
pop
dec
push
push
mov
fbstp
mov
adc
pop
jbe
and
lods
add
addl
xlat
leave
add
or
jg
in
xor
or
jbe
aaa
add
xor
push
push
faddl
idiv
addl
fisubrs
lods
popf
addb
sbb
adc
mov
imul
or
call
ret
jbe
push
sti
jmp
dec
je
add
or
pop
inc
mov
mov
data16
push
js
jbe
inc
add
sub
push
aad
push
cmp
mov
jmp
push
mov
push
lea
push
test
imul
add
add
inc
xchg
push
rorb
mov
push
addr16
jne
mov
and
insb
packuswb
add
dec
and
inc
jne
jmp
push
repnz
cmpsb
adc
cmp
and
jecxz
dec
xchg
cmovp
test
aad
or
inc
mov
mov
push
mov
add
movb
cld
call
or
js
dec
mov
xchg
jbe
leave
add
ja
push
jmp
rorb
add
dec
inc
cmc
sbb
fidivrl
jmp
sub
add
mov
pop
mov
and
fcoml
xor
lods
cmp
sbb
js
imul
and
and
fimuls
mov
inc
aas
cmp
jae
movl
sub
jl
inc
push
adc
sub
pop
scas
test
call
mov
out
mov
loop
pop
lea
add
sub
dec
sbb
jecxz
movsl
sub
push
push
adc
test
cmpsb
sbb
fst
fsubrl
fsts
xor
mov
or
dec
and
loopne
shl
jmp
arpl
mov
pop
jle
pop
pop
imul
ss
cli
or
out
popf
mov
lea
xchg
xchg
and
dec
imul
sbb
addr16
add
insb
sbbb
add
or
scas
xchg
xchg
imul
or
and
push
add
mov
mov
inc
mov
fnstcw
sub
xor
adc
cmp
push
mov
sti
add
sbb
psadbw
into
cmp
lret
adc
add
sbb
push
push
jo
cmpsb
inc
lods
movsl
stos
sbb
scas
insl
or
cmp
pop
rolb
xorb
sarl
inc
push
roll
jns
jb
data16
push
mov
cmp
inc
test
xchg
clc
push
mov
stc
mov
mov
cmc
int
pop
cltd
mov
fs
lods
jmp
pop
lcall
call
movsl
adc
fisttpl
xchg
xchg
mov
cs
add
rcll
sbb
cmp
addr16
inc
mov
jmp
dec
or
cmp
stos
cltd
pop
inc
mov
inc
add
push
adc
out
es
mov
inc
and
and
mov
xlat
je
xor
push
jne
add
stos
into
inc
inc
push
inc
dec
pop
lret
mov
cwtl
push
push
loope
pop
cmp
mov
js
in
push
add
dec
loopne
js
aam
aad
sbb
mov
pop
insb
adc
movsb
lret
inc
dec
mov
jo
or
insb
fiaddl
stos
jge
mov
test
pushf
ret
out
jecxz
mov
push
mov
and
or
push
orb
pushl
lea
lret
or
jb
pop
mov
test
cwtl
test
add
popa
adc
xorb
pop
fucomi
cmp
and
inc
inc
cmp
xchg
mov
sub
jl
jge
lret
sbb
dec
xchg
or
out
ljmp
repz
sarl
mov
shlb
inc
pop
fsubr
sub
leave
inc
in
movsl
fnstcw
aam
xor
or
fs
fmull
mov
xor
call
shlb
and
dec
pop
dec
daa
gs
lock
testb
outsl
lock
or
inc
sub
rclb
pop
gs
push
rorl
mov
and
sbb
dec
cld
jmp
inc
loopne
jnp
push
mov
add
push
lea
mov
add
cmp
sbb
test
ja
pusha
in
fsubrp
or
cmpb
rorl
orl
in
rclb
cmp
rolb
jmp
pop
adc
push
sub
or
int
sub
cmp
xlat
xor
loopne
push
jle
call
lock
sub
clc
std
and
loopne
fidivl
movsl
stc
rcll
es
push
ret
into
pop
jne
mov
mov
xor
pop
enter
dec
xor
adc
imul
dec
pop
dec
stc
dec
orb
dec
inc
aad
jns
xchg
mov
xor
mov
add
push
aad
xor
sub
mov
and
push
and
dec
and
test
cmp
jp
and
test
mov
cmp
lret
or
data16
jb
aam
push
sbb
shlb
mov
loopne
pop
and
add
loop
push
dec
pop
pop
jne
out
pop
test
jge
rcrl
sub
movsl
jmp
pop
and
inc
test
cmp
mov
jb
test
enter
mov
cmp
rclb
negl
adc
xor
and
jbe
bound
inc
add
add
mov
mov
test
add
cmpsb
movsl
cmp
push
nop
inc
xor
xchg
jns
or
movsb
push
pushf
push
xchg
jns
out
test
inc
mov
mov
cmp
in
call
iret
repz
hlt
hlt
clc
clc
sub
test
cld
cli
or
pop
jo
add
sbb
cmp
repz
fadds
in
push
mov
lock
nop
inc
pop
push
ret
pusha
pop
sti
and
adc
push
lea
jl
cld
pop
in
cmp
and
std
cld
out
pop
popa
or
popf
insl
neg
adc
or
daa
stc
outsl
mov
mov
pusha
pusha
pop
nop
jo
xchg
fwait
sbb
jns
mov
mov
push
jbe
out
add
cmpsb
and
push
add
nop
dec
dec
addr16
mov
out
gs
mov
cmp
dec
adc
push
and
xor
ds
cmp
popa
aaa
sbb
repz
repz
adc
adc
repz
adc
or
add
xchg
je
push
icebp
jns
test
mov
sub
and
inc
pusha
daa
ja
nop
jb
xlat
cmp
xor
lock
clc
and
cld
cmp
daa
mov
push
mov
adc
inc
je
mov
xchg
inc
lds
testb
jne
ret
call
daa
daa
sbb
fldl
cli
add
aam
pop
jl
or
pusha
xchg
add
andb
jne
push
sbb
sbb
mov
dec
sar
push
loopne
pop
pushw
ss
mov
loope
adcl
xchg
sub
and
scas
adc
and
cmp
mov
push
enter
lds
lds
and
jmp
testb
cmp
push
mov
fstl
roll
sub
dec
rclb
inc
or
inc
push
movl
and
test
out
mov
fs
mov
pop
or
sbb
fs
iret
push
test
or
jmp
lods
push
rcrl
and
mov
cmp
or
push
add
adc
or
rclb
cmp
aam
inc
and
xchg
mov
pop
lock
sub
mov
jge
push
lock
inc
xor
pop
call
xor
inc
loop
cmp
and
dec
pop
push
mov
jb
xor
les
jp
pop
push
inc
jmp
adc
ret
jge
add
xchg
add
push
pop
cld
push
shrl
mov
aam
movsl
push
jmp
je
clc
mov
or
rol
pusha
dec
stc
repnz
inc
inc
sub
dec
js
adc
test
mov
fidivrl
mov
xlat
inc
and
movsb
adc
mov
pop
dec
cmp
cmp
xor
jp
add
add
je
sub
pop
outsb
shr
cld
jmp
sub
rorl
lret
je
rep
adc
ljmp
fidivrl
in
in
testl
jl
adc
gs
insb
data16
in
or
fs
out
pop
pushf
popl
psubusb
stc
add
mov
loopne
adc
inc
lcall
cmpsl
fstp
mov
js
mov
or
sbb
clc
xchg
shlb
or
add
adc
enter
cmp
bound
cmp
push
dec
insl
cmp
js
mov
or
sub
xor
js
ror
xlat
mov
pop
ret
push
sub
sub
xchg
sub
int
andl
insb
movsl
je
sbb
popa
dec
pop
push
xor
fcmovne
lret
arpl
loopne
fcoml
lret
mov
mov
pop
pop
pop
jle
in
popf
enter
rolb
les
out
imul
fbld
aam
aaa
dec
cld
xor
push
rcrl
pusha
adc
and
pop
rorb
in
xchg
pop
sbb
int3
jno
insl
push
jne
inc
and
cld
mov
or
pop
in
and
mov
insb
mov
insb
or
xchg
inc
and
mov
ror
jmp
pop
ljmp
cli
nop
imul
sbb
and
jg
adcb
ret
sub
test
pop
or
pop
clc
call
pop
ja
lods
imul
mov
push
pusha
notb
aam
adc
hlt
scas
xor
mov
adc
jbe
push
inc
inc
jne
inc
call
jge
mov
int3
lods
mov
sbb
fmul
test
test
pop
divl
ss
les
popa
xchg
dec
dec
mov
dec
cmp
or
pop
and
repnz
ljmp
jns
pop
test
or
roll
movsb
adc
xchg
add
xor
mov
xor
cmp
push
pop
lds
ret
loop
enter
dec
or
push
mov
into
fnstsw
loopne
sqrtps
dec
jmp
pusha
arpl
ss
leave
mov
xor
cmp
push
push
into
push
adc
inc
jmp
add
js
movsb
push
iret
lock
rol
jbe
push
dec
cmp
or
dec
add
push
jmp
add
adc
dec
es
test
jmp
lcall
cmpl
mov
jp
jne
push
cmp
dec
jg
das
add
fcoms
or
je
movq
cmp
mov
xchg
lret
gs
shl
ret
fdivrs
xchg
popf
jne
sub
inc
jo
cltd
pop
je
adc
in
mov
fbld
xor
xchg
call
push
sub
subl
or
add
cmpl
push
sar
lahf
xor
jle
lea
mov
dec
inc
test
jle
jo
loopne
sbb
adc
push
sar
pop
lods
movsb
add
xchg
push
lret
out
add
call
pop
cs
mov
or
pusha
les
lret
dec
movsl
rcl
fmull
add
jl
sbb
xchg
or
sahf
pushf
lret
and
push
pop
add
jnp
mov
mov
and
fdivs
or
mov
adc
icebp
fsubs
sub
jo
add
fdivr
shll
mov
rorb
pop
xorb
inc
or
ja
movsl
mov
es
add
enter
movsl
hlt
hlt
mov
je
add
add
data16
loope
mov
fmulp
push
add
lods
js
mov
add
in
fidivl
mov
sbb
pop
js
add
movb
inc
xor
movsl
cmp
pop
jne
incl
pop
lcall
imul
sub
js
push
or
add
rorl
lret
inc
call
mov
push
das
add
sub
push
out
dec
mov
inc
je
mov
push
or
add
nop
push
repz
subl
movsl
push
test
pop
xor
adc
ja
lea
arpl
mull
xor
mov
dec
ret
xchg
aaa
jne
das
mov
adc
fadds
clc
ds
dec
and
in
mov
sub
mov
xchg
push
notl
es
mov
mov
mov
or
push
clc
stos
mov
addl
inc
push
insl
cmp
xor
arpl
sbb
jmp
push
shl
xor
bnd
add
dec
mov
cmp
inc
xor
or
push
in
test
test
or
push
imul
repnz
fisttps
movsl
jmp
xchg
pop
mov
inc
lods
xlat
mov
sbb
pop
dec
mov
dec
jp
mov
inc
mov
xor
mov
je
sub
in
cmp
movsl
add
pop
addb
push
sub
mov
gs
add
mov
in
je
or
mov
outsb
mov
ss
xor
insl
push
sub
or
aaa
xchg
rcr
test
mov
or
or
add
cs
jb
pop
je
mov
or
jo
lods
adc
test
stos
fiaddl
add
shlb
in
scas
aaa
mov
dec
jne
movsb
addr16
mov
jmp
ja
fistps
jle
popa
mov
ja
clc
and
pop
push
rclb
adc
data16
rcll
adc
pop
sub
push
shr
push
push
dec
add
add
push
pop
mov
mov
inc
cld
adc
and
sbb
mov
ret
push
xchg
sub
inc
sbb
mov
cmp
rorb
repz
dec
push
pop
jne
popf
push
push
inc
push
addl
lds
xor
inc
inc
cmpb
jne
xor
nop
jmp
sub
mov
push
push
xor
jae
pusha
cld
fprem1
shrb
mov
mov
repz
andl
sahf
push
dec
clc
movsb
repz
or
push
push
into
xor
jno
fisubrl
mov
rorl
rcll
sbb
pop
nop
lcall
push
or
sbb
sub
cltd
sbb
sbb
pop
jl
fs
movsl
pusha
xor
neg
mov
and
jmp
ret
jnp
or
jecxz
pop
cmpsb
sbb
mov
add
mov
or
and
lea
or
push
inc
sbb
xor
cltd
push
pop
push
or
daa
mov
mov
outsb
repnz
sahf
add
mov
ja
sub
inc
cmp
ss
pop
xchg
andb
or
and
add
movb
inc
jmp
nop
or
fimuls
dec
test
pop
push
repnz
and
mov
sar
ret
and
pop
std
mov
xchg
add
sub
push
xor
add
and
mov
subl
sbb
or
or
mov
fdivr
in
jle
jle
adc
cmp
mov
or
add
fsubp
cmp
mov
add
and
test
mov
adc
xor
cmpsb
leave
pop
inc
aam
adc
js
cmp
push
cmpsw
sub
jmp
dec
adc
aad
and
xor
add
sbb
lcall
iret
out
sti
fsubr
push
pop
int
flds
pop
sub
sbb
subl
mov
xor
adcb
testl
mov
mov
push
cli
movsb
add
loope
adc
mov
in
cmp
icebp
mov
pop
or
testl
inc
add
imul
lahf
cmpsl
push
jo
sbb
inc
inc
add
pusha
sub
nop
ja
jbe
ja
push
add
sti
sbb
test
mov
aam
aas
stos
sub
adc
jo
aas
xchg
cmp
jnp
inc
push
cmp
sub
add
ja
lahf
xlat
loopne
sbb
jmp
ja
push
push
add
cld
js
and
adc
nop
adc
xor
pop
js
orb
inc
pop
aas
push
push
add
out
fnsave
ror
mov
loopne
js
fsubp
or
inc
or
fiadds
and
inc
add
push
mov
lea
mov
sbb
sub
pop
mov
xchg
push
xchg
inc
fsubp
adc
and
aad
pop
test
dec
pop
arpl
pop
adc
mov
add
adc
mov
mov
push
es
sbb
push
lock
or
lock
pop
fsts
mov
dec
add
xchg
push
dec
icebp
push
addr16
nop
fimull
mov
call
in
loope
sub
imul
sbb
jo
out
loopne
or
and
fsub
pop
inc
pop
mov
mov
mov
je
lds
mov
jle
mov
or
movsb
mov
xchg
mov
push
jb
into
js
movsb
dec
cmp
cmp
fwait
sub
mov
and
dec
rorb
pop
jno
mov
js
add
mov
fisubl
lcall
aas
icebp
gs
push
mov
inc
push
push
and
push
lods
lods
aam
sbb
testb
inc
xor
adc
pushl
insl
and
out
pop
call
lahf
xchg
test
jp
add
sub
mov
inc
setne
jmp
xchg
push
andl
jae
mov
adc
jmp
inc
loopne
loopne
pop
shlb
loopne
sub
pusha
das
jecxz
fnstcw
sbb
imul
or
mov
ret
flds
leave
push
sub
sbb
xchg
cs
push
pop
sbb
pusha
xchg
repz
cmc
mov
lret
clc
insb
add
subl
fsubr
inc
xchg
outsb
popa
pop
inc
push
jb
in
addl
sub
jo
sbb
aam
jl
xor
sbb
add
add
imul
pop
and
pop
dec
nop
jo
jbe
mov
sub
andb
inc
adc
mov
jp
push
xor
add
insl
jmp
mov
pop
xchg
jo
mov
adc
mov
push
and
xor
ss
fmull
xor
sub
lea
xchg
out
enter
sar
push
xor
cmp
adc
mov
push
and
out
jne
pushl
sub
xchg
push
pusha
sub
notl
cwtl
pop
push
add
inc
push
add
add
aam
jl
inc
test
out
pop
movsb
or
mov
push
clc
sub
sbb
push
jb
sbb
push
test
mov
sbb
mov
and
cs
ja
scas
inc
xorb
addl
sub
cmpb
add
mov
psllw
push
xchg
add
inc
push
adc
inc
push
add
repz
pop
push
ret
mov
mov
pop
jl
stc
ds
outsb
fwait
xchg
or
hlt
mov
lahf
insb
int3
push
pop
es
aaa
imul
mov
jge
mov
in
fdivl
sub
push
fld
es
xchg
test
mov
ljmp
outsl
lock
lock
push
leave
dec
adc
fsubrl
dec
pop
xor
mov
loopne
and
mov
and
add
xor
push
sbb
or
inc
inc
andb
data16
sbb
xchg
cmpsb
mov
lea
push
cld
mov
fwait
les
pop
sti
sbbb
cld
dec
xchg
inc
daa
add
js
stos
xor
orb
dec
add
jb
sub
inc
adc
fwait
and
add
pop
cmp
jg
scas
or
leave
cmp
or
loopne
mov
xchg
and
call
push
cmp
pushf
rclb
push
or
pop
jle
sbb
imul
or
sub
inc
inc
aam
daa
sub
gs
aaa
cmp
dec
adc
lock
lods
lret
test
jo
mov
aaa
xchg
cmpsl
or
adc
movsl
add
pop
lods
movsl
pop
xor
hlt
arpl
adc
outsb
sbb
sub
sub
adc
loopne
or
in
push
outsl
mov
iret
movzwl
stos
or
repnz
les
mov
pop
pop
add
and
push
loope
push
ljmp
cs
ja
je
xor
cwtl
test
fdivr
add
mov
rorb
mov
and
pop
shl
dec
rcrb
pop
ja
dec
leave
ret
mov
rcll
loope
jns
dec
xor
ret
fldl
xor
adc
mov
dec
fildl
push
xor
add
pop
adc
arpl
push
bound
sub
aaa
call
lcall
leave
xor
leave
jecxz
inc
cmpsb
cmp
enter
adc
adc
push
fldl
jns
rcr
cmp
and
jne
jbe
add
scas
or
pop
and
jnp
sbb
adc
cmpb
fistpl
cmp
inc
cmp
pushf
pushf
pushf
das
es
stc
adc
fiadds
movsb
loopne
xlat
in
cltd
in
rorb
xor
pop
in
xchg
cmpsb
mov
lea
ja
push
dec
push
enter
add
add
cmp
add
pop
adc
daa
adc
lret
leave
clc
adc
cwtl
lret
mov
mov
dec
insb
xor
xor
loope
push
mov
lret
int3
mov
jb
in
int
add
inc
leave
mov
in
pop
or
call
pop
cmp
mov
adc
xchg
xchg
pushf
cmp
mov
movsb
repnz
andl
nop
imul
js
sbb
in
mov
inc
and
out
add
mov
mov
jns
stc
inc
andl
es
sub
xchg
call
leave
xchg
rcll
xor
jbe
adc
lcall
or
leave
mov
xchg
iret
and
fdivl
dec
push
nop
pop
call
and
cwtl
in
in
lods
pop
es
and
dec
fmuls
pop
dec
or
or
xor
and
movsb
cwtl
dec
cmpsb
add
aam
in
ret
add
pop
decl
aam
pop
sub
xor
adc
or
mov
js
or
cmp
outsb
or
xchg
test
lock
pop
lods
xchg
dec
shlb
call
add
sbbl
dec
test
cmc
sub
inc
xor
repnz
mov
and
addb
out
jnp
out
cmpl
jnp
xlat
xchg
and
shrd
cmpsb
int3
pop
lods
mov
ret
bound
lret
lea
jns
and
mov
lret
jne
fmuls
int3
sbb
xchg
ret
jp
pop
xchg
sub
cs
das
or
shll
loopne
adc
add
mov
pop
xchg
out
shlb
mov
pop
dec
mov
adc
and
xchg
mov
shrb
dec
add
xor
push
xchg
push
push
cwtl
popf
jle
sbb
cmp
lds
inc
dec
pop
add
dec
scas
negb
or
add
or
sti
add
in
cmp
and
ljmp
cmpsb
add
adc
ljmp
xor
rclb
mov
push
ficoms
sbb
shrl
ret
xchg
imul
inc
sbb
add
ja
fcmovu
add
mov
mov
movsb
outsl
xchg
xor
je
jo
or
jo
or
test
adc
or
push
mov
lock
xchg
xorl
sbb
and
call
enter
ret
stc
add
ret
rclb
stos
aas
add
mov
mov
inc
sub
ja
mov
mov
inc
in
sbb
adc
daa
or
nop
aaa
dec
cs
sbb
mov
cli
loopne
lea
loopne
mov
outsl
jne
shl
add
pop
loop
cld
hlt
mov
mov
inc
popf
out
and
mov
jecxz
add
add
ja
sub
rolb
or
movsb
das
add
mov
xor
dec
enter
jbe
loopne
jne
dec
cld
ficoms
push
push
sub
xchg
jne
das
cmp
sub
xchg
out
cmp
jbe
dec
inc
inc
cld
mov
and
inc
lret
cmp
orb
xchg
insb
notl
mov
cld
or
nop
mov
push
pop
mov
lea
pop
mov
ja
mov
or
rorb
sbb
in
inc
int
and
lea
cli
sbb
call
push
cld
jmp
movb
add
dec
dec
iret
aaa
clc
mov
mov
insb
lea
push
push
and
popf
sti
push
test
mov
cmp
xor
push
sbb
add
jnp
add
mov
insb
in
cmpsl
jmp
adc
movb
push
fbld
xor
andl
jne
movl
testb
xor
mov
inc
std
jne
lods
jmp
sub
rcrl
push
xor
add
jmp
pop
pop
add
mov
fwait
and
push
add
mov
fcomi
lods
add
push
mov
fadds
jp
jg
jnp
xor
xor
call
xor
loopne
out
into
std
out
push
jmp
lock
pusha
ljmpw
pushf
mov
or
push
and
aaa
lcall
push
xchg
les
jnp
jae
fs
or
push
call
into
adc
call
test
movl
inc
sbb
lods
sub
jmp
leave
out
loopne
mov
aaa
rcrl
outsb
enter
sti
sti
inc
add
subb
inc
cmp
ljmp
jno
loope
add
incl
out
inc
add
jge
add
jb
mov
mov
inc
adc
push
bswap
jo
sbb
add
mov
and
stos
roll
jne
mov
dec
cmpsl
inc
orb
aam
shl
outsb
das
mov
jbe
mov
or
dec
jne
out
dec
ret
scas
stos
mov
jmp
xchg
or
jmp
imul
into
or
repnz
push
add
adc
push
sub
mov
imul
cmp
push
push
xchg
or
and
dec
pop
inc
mov
mov
sbb
push
and
fcoml
sahf
sub
push
mov
mov
pop
pop
push
dec
mov
fimuls
cltd
dec
sbb
push
sti
popf
cmp
cmp
inc
jo
insb
ljmp
add
pusha
shll
sub
push
or
inc
ret
shl
clc
add
out
neg
imul
jmp
xor
mov
sbb
mov
je
jmp
add
ret
sub
mov
imul
stos
push
out
and
es
test
and
xchg
outsb
inc
imul
add
add
sarl
std
inc
lret
and
or
jne
pop
xor
gs
bound
xor
sbb
mov
lea
test
adc
or
fisttps
add
cmpl
xor
adc
rorb
add
movsl
sub
push
call
xor
pop
sub
sub
test
cld
sbb
sarl
hlt
ret
je
cmp
callw
or
pop
add
mov
lods
pushl
imul
inc
mov
cltd
and
iret
dec
not
das
adc
int3
ljmp
jnp
cmp
gs
adc
sbb
sub
or
pop
sbb
cwtl
daa
sbb
outsl
ljmp
jle
jg
sarl
push
imul
cld
loop
push
dec
mov
add
add
adc
jns
jle
jp
cmc
cmp
xor
and
push
ret
call
mulb
addr16
push
call
sbb
xchg
js
and
pop
enter
test
mov
lock
jle
test
jo
or
mov
pusha
sub
addb
pop
jmp
and
dec
jb
imul
inc
xor
test
inc
pushf
adc
pushf
sbb
mov
dec
leave
and
pop
mov
sbb
push
stos
adc
rorb
mov
push
scas
pop
cs
mov
js
cwtl
loopne
test
push
hlt
lahf
inc
movl
push
clc
pop
data16
imul
jo
jae
or
lock
dec
add
jg
dec
pop
cmp
xchg
mov
roll
inc
jae
inc
fidivrl
xor
mov
mov
pop
xchg
pop
arpl
in
test
sbb
imul
lods
fiadds
in
mov
mov
mov
pop
dec
dec
pushf
mov
mov
jge
xchg
xchg
xchg
cmp
ds
or
adcl
inc
push
inc
call
xor
fnstenv
not
fdivl
xchg
or
pop
jecxz
ret
dec
cmp
mov
jno
ss
inc
and
cmp
xor
add
nop
add
mov
nop
dec
pop
cmp
pop
and
jle
sbb
repnz
adc
jecxz
dec
sub
dec
mov
imul
cmp
xor
xchg
cmp
mov
sub
jge
push
fcoml
adcl
and
sbb
or
pushf
ja
push
jbe
gs
jo
movsb
mov
pushf
cmp
cmp
sub
sub
out
push
es
adc
fwait
andb
test
sbb
add
sbb
inc
insl
lcall
xchg
scas
mov
into
xorb
jb
enter
inc
pop
fcmovnu
adcb
pop
movl
fwait
mov
jo
inc
jne
cmp
or
lahf
xor
inc
adc
xchg
sbb
sbb
add
pop
mov
lds
mov
dec
jl
push
cli
and
add
sub
popa
pop
add
rorb
dec
loope
add
jbe
fimuls
fnstsw
movsb
xor
pop
xor
push
in
mov
or
and
add
sbb
or
xor
sbb
pop
or
adc
bound
ret
adc
test
add
adcb
adc
adc
mov
mov
push
ljmp
enter
or
mov
xchg
mov
orl
testb
rorl
pop
inc
mov
pop
aam
test
push
into
push
js
dec
data16
push
add
lret
fidivrl
ds
sub
movsb
xor
les
je
push
or
aam
sub
pusha
sbb
fsubl
add
insb
test
adc
push
xlat
or
imul
push
fldl
or
jecxz
rcl
fiadds
xchg
pop
jp
xchg
popf
pop
dec
enter
bnd
in
jno
xchg
mov
jp
cmp
pop
in
sbb
popa
jo
into
das
add
shr
pop
lahf
sbb
dec
add
sbb
cmp
sbb
adc
add
clc
cmc
mov
lock
cs
lahf
out
cmp
cmp
pusha
pop
pop
fld1
js
sbb
dec
sbb
add
gs
or
addr16
fwait
lret
mov
mov
pop
repnz
push
les
jns
mov
and
stc
mov
fmull
fstl
mov
add
adc
subb
lea
xor
adc
into
nop
ret
mov
cmp
aad
out
jbe
sahf
out
cmp
dec
or
add
lcall
pop
mov
jns
mov
mulb
xor
pop
add
dec
push
mov
mov
pop
and
jne
inc
shll
scas
in
hlt
fnstsw
cmpsb
sub
les
push
and
inc
popl
xorl
mov
cltd
jmp
inc
faddl
add
jl
and
push
inc
imull
jmp
test
and
jmp
xchg
cmp
and
ret
and
push
push
test
das
enter
shlb
movsb
lcall
and
ret
dec
les
push
pushf
aam
test
data16
xor
rorb
push
adc
or
nop
add
sbb
xchg
lret
lret
or
int3
js
pop
cs
cmp
push
or
xchg
das
sahf
sub
jne
mov
pop
mov
push
dec
push
add
jae
add
jp
xchg
data16
dec
inc
jmp
ret
jno
push
clc
pop
mov
cmp
mov
adc
loopne
pop
movsb
jno
mov
nop
cmp
or
pop
push
mov
in
jb
mov
dec
xchg
inc
inc
out
in
pop
ficoml
int3
sarb
jge
popf
in
lret
adc
dec
dec
jne
leave
in
jne
or
add
jb
mov
add
xlat
ret
add
mov
dec
ljmp
imull
popa
mov
and
inc
mov
push
sub
call
xor
call
or
adc
sub
ret
sahf
sbbl
jne
inc
sub
lret
mov
mov
and
std
bound
jb
jne
cmpb
pop
jb
ret
ja
cmp
inc
xor
and
mov
ret
cmpb
xchg
cmpsb
rorb
jmp
cmp
test
pop
xor
mov
andl
scas
scas
ret
jle
addr16
pop
ds
lock
loopne
popa
xchg
loopne
jb
pop
or
dec
addl
jecxz
clc
imul
es
lock
mov
jle
push
or
mov
add
cld
mov
iret
nop
cmc
push
inc
lea
js
xor
inc
cmpsl
jo
cmpsl
push
dec
push
pop
cld
sub
test
add
dec
jnp
push
xchg
scas
cmp
lea
stc
mov
jo
sbb
pop
push
jmp
add
sub
sahf
xchg
cmp
push
pop
sub
xlat
loopne
mov
out
cmpb
push
je
movzwl
lea
popa
xor
cmp
push
mov
int3
clc
jno
enter
xchg
mov
mov
or
or
dec
add
or
mov
out
xor
xchg
pop
pusha
dec
or
push
or
inc
mov
adc
adcl
test
hlt
into
nop
cmp
lcall
std
and
or
scas
mov
addr16
movsl
lock
cmp
icebp
push
jnp
orb
jno
leave
rolb
xchg
in
dec
pop
gs
add
ja
sub
adcb
mov
jno
mov
mov
add
or
mov
loop
xchg
pop
xchg
sbb
or
jo
imul
mov
mov
mov
pop
xor
or
ja
xchg
lea
outsb
adc
scas
jg
or
jg
adc
mov
inc
nop
pop
test
jge
push
inc
dec
xchg
jl
insl
sub
or
push
or
cld
scas
test
outsl
mov
daa
add
pop
repz
jo
inc
add
aam
push
jae
nop
aad
loope
ljmp
push
xchg
out
ret
sbb
jnp
inc
inc
or
mov
jnp
mov
push
fcoml
lret
adc
inc
enter
jnp
jle
adc
imul
xchg
jne
sub
addr16
popa
xor
sbb
scas
mov
bound
data16
inc
ja
loope
popa
aas
dec
cs
sbb
rcrb
das
in
push
pushf
jmp
push
mov
pop
and
orl
ret
lcall
or
dec
xor
push
sub
sbb
dec
xor
jmp
test
sbb
jg
outsl
notl
int3
cmp
xchg
ret
test
jne
ja
cmp
rcl
mov
dec
mov
sbb
inc
jae
adc
fisttps
into
xorl
lods
subb
add
pop
jmp
pusha
pop
in
addr16
mov
mov
dec
lahf
fstpt
sbb
roll
icebp
mov
je
push
push
mov
mov
in
popa
enter
nop
dec
ret
add
jmp
sub
sbb
pop
cli
lcall
int
and
into
adc
mov
inc
pop
rolb
mov
ret
or
adc
mov
sbb
adc
daa
pop
mov
sub
push
mov
clc
enter
mov
nop
mov
leave
push
xchg
fcmove
mov
sub
stc
cmpsl
xor
cmpsb
andb
mov
mov
orl
imul
lahf
iret
scas
lcall
and
adc
inc
mov
xor
xchg
and
and
and
mov
in
stos
jno
fidivrs
mov
xor
xor
xchg
inc
out
adc
pop
or
or
inc
sahf
out
pavgw
jle
pop
pop
outsb
enter
ret
mov
mov
xchg
xchg
xlat
jo
mov
push
shll
and
adc
out
popa
adc
iret
rcll
pop
add
mov
arpl
add
add
adc
pusha
outsl
inc
out
inc
scas
movsl
cmp
fimuls
mov
pop
fstp
mov
in
jno
dec
imul
jno
adc
mov
aaa
xchg
and
je
push
fnsave
jo
mov
int
xchg
mov
inc
aaa
add
push
enter
test
or
dec
xchg
inc
push
xchg
xchg
lret
ljmp
and
xchg
and
inc
jp
inc
movsl
loope
jecxz
in
jmp
rorl
int3
sbb
mov
movsb
push
dec
dec
subl
jne
xor
push
ja
sub
in
fdivs
and
dec
scas
xor
xchg
fnstsw
mov
sbb
inc
and
add
inc
clc
mov
sub
lods
dec
push
add
mov
sbbl
mov
les
xchg
xchg
xchg
mov
and
test
mov
mov
push
xchg
xchg
leave
jne
mov
dec
imul
in
cmp
push
stos
lods
lods
add
push
nop
lods
minps
js
or
test
hlt
adc
lods
pop
addr16
mov
int
imul
dec
nop
pop
mov
test
shlb
movl
cmovno
addl
push
scas
xor
clc
xor
pop
je
insl
or
cmp
push
jo
pop
and
rclb
bound
ljmp
xor
add
xor
or
leave
in
inc
pusha
mov
or
xorl
push
sbb
or
sub
or
jl
adc
sbb
or
iret
push
shlb
push
icebp
jmp
push
outsb
scas
shlb
repz
add
push
jg
mov
jnp
pop
jmp
inc
sbb
dec
fwait
xchg
or
or
or
cmpsb
in
ljmp
dec
pop
jb
scas
and
push
and
add
shlb
cltd
sub
inc
or
les
jecxz
dec
ds
shlb
test
imul
ret
pusha
mov
out
add
insl
mov
and
mov
mov
loopne
rcr
ret
rcr
inc
test
jb
out
in
xor
or
je
jmp
in
dec
popa
sbb
lret
sub
ret
adc
pusha
jb
and
cld
or
rcrl
lret
mov
loopne
or
push
outsl
mov
push
dec
mov
xor
mov
cmp
je
or
mov
pushf
pop
hlt
xor
movsb
and
jle
popa
add
sub
mov
sbb
mov
shll
fucomip
stos
bound
inc
cmp
push
sbb
ret
or
or
std
das
nop
or
mov
test
jne
cmp
push
inc
pop
inc
shll
mov
movsl
add
or
sub
or
lods
inc
add
push
push
cmp
or
mov
pop
adc
mov
fcomps
lret
enter
sbb
stc
or
jb
addr16
mov
push
dec
or
rcll
mov
stos
add
fs
add
or
jle
xchg
stos
add
jmp
scas
jl
lds
xor
shll
mov
orb
pop
xorb
js
add
out
sbb
stos
cmp
je
cmp
and
cmp
and
push
mov
mov
inc
mov
add
rcll
lock
push
sbb
add
or
ret
mov
out
push
inc
shlb
add
xorb
add
sbbl
dec
pusha
loop
add
push
test
aaa
call
cmp
ljmp
stc
mov
fs
mov
cmpl
pop
xorl
xchg
test
xchg
xchg
inc
scas
or
dec
cmp
mov
xchg
cmp
xchg
push
push
cmp
mov
pusha
jmp
fs
ror
xor
mov
rcll
pop
or
add
shrb
iret
add
ja
xor
inc
xchg
mov
push
sbb
and
dec
or
mov
add
inc
or
push
cmp
add
popa
sti
ret
mov
push
clc
cmp
sub
outsb
inc
pop
hlt
and
test
push
xchg
inc
push
shrb
lock
adc
lods
inc
mov
adc
stos
gs
jmp
fwait
shll
js
xchg
mov
pusha
dec
inc
call
mov
dec
lea
pop
hlt
vandnps
and
mov
xor
dec
out
dec
pop
mov
jne
add
in
int3
mov
or
out
inc
or
sbbl
subl
and
data16
rolb
add
xor
adc
adc
and
xchg
lods
outsb
incb
xor
adc
mov
ret
int3
xor
cld
enter
out
mov
push
or
jne
dec
cmpsb
rorb
jge
jae
xchg
loopne
mov
push
fldl
sub
fidivrl
movsl
fwait
mov
adc
jmp
add
js,pt
inc
cs
je
cmp
cmc
push
dec
push
stos
cs
or
int
mov
js
and
cmp
push
cs
inc
in
pop
pop
jle
in
pop
xorl
jmp
aam
add
sbb
mov
jmp
or
push
mov
pop
std
cmp
cli
xor
jo
ret
dec
in
sub
pop
and
dec
sub
sub
fs
shlb
fcmovnbe
pop
mov
xor
mov
mov
and
or
mov
clc
int3
pop
xchg
loopne
mov
push
scas
orb
dec
dec
or
and
jae
lea
add
add
lahf
dec
add
xor
dec
out
pop
das
adc
orl
andl
pop
mov
mov
sub
xchg
rolb
jbe
add
loopne
push
push
je
cltd
jp
call
clc
push
sub
lea
push
fldcw
pushf
testl
mov
add
mov
push
cmp
add
and
decl
push
pop
push
int
daa
add
fadd
mov
nop
sbb
pusha
shlb
dec
or
push
popa
lock
movw
mov
adc
mov
and
xor
dec
out
jbe
inc
inc
cld
add
int
mov
ljmp
inc
call
push
add
push
ret
mov
out
frstor
cmp
fs
push
or
aas
or
add
add
lea
daa
pop
or
andb
push
xor
aas
cmp
aas
js
sahf
or
rorb
and
into
sub
shll
mov
xor
lds
sub
xchg
jle
dec
dec
inc
loope
imul
lea
or
mov
popa
cmp
pop
hlt
or
sbb
sar
shl
add
xor
or
mov
nop
mov
in
cli
push
add
inc
jo
stos
mov
add
mov
xlat
push
push
sbb
test
fldl
sub
andb
sbb
negb
or
das
sbb
loopne
inc
push
icebp
inc
sub
push
fcmovnbe
add
mov
jne
sahf
test
inc
jmp
call
fchs
push
daa
je
push
mov
movl
sbb
add
loop
inc
add
jmp
lods
inc
add
cmp
pop
sub
mov
or
add
push
fwait
xchg
dec
sub
aam
nop
nop
adc
push
jno
mov
xchg
dec
out
mov
push
push
jmp
add
div
shlb
push
fistpll
dec
sub
shll
dec
adcl
mov
enter
movsl
int
xchg
jbe
add
test
sbb
adc
bound
lock
not
push
lret
cmp
lea
aad
subb
test
jb
jae
mov
andl
inc
mov
cmp
aas
jb
push
sbb
mov
cmp
rcll
testl
or
sub
lea
daa
xchg
or
leave
pop
mov
in
out
add
inc
push
push
rol
into
mov
or
xor
test
das
inc
xchg
xchg
das
aaa
sbb
mov
push
jb
pop
sbb
jnp
addr16
addr16
add
jnp
fs
icebp
incb
cmp
ss
pop
daa
jg
xor
cmp
jmp
mov
icebp
int
inc
or
mov
pusha
adc
jle
and
scas
bnd
push
pop
adc
lret
es
in
xor
xor
cwtl
in
cmp
sbb
ljmp
jbe
mov
inc
test
add
aas
fnclex
xorl
push
cltd
dec
add
cmp
add
fscale
ja
push
js
addl
mov
or
data16
leave
push
clc
add
and
stc
push
cmp
add
push
add
daa
pop
mov
inc
rolb
sbb
out
lock
and
and
push
lods
pop
push
dec
push
js
lea
or
jb
mov
call
and
dec
adc
push
jnp
xor
out
cmpl
inc
and
jne
aaa
add
xchg
enter
and
add
movsb
pop
sub
add
and
sarl
sbb
push
xchg
xchg
fnsave
mov
jge
inc
push
sbb
cmp
jne
inc
int
sarb
js
mov
adc
idivb
loop
or
cmp
lods
cld
sti
scas
push
jno
std
mov
and
hlt
jmp
push
inc
subl
hlt
out
loopne,pn
ja
out
fcmovnbe
loopne
push
xor
cmp
add
inc
jnp
jmp
das
or
cmp
es
inc
mov
jno
jno
mov
scas
mov
sub
dec
ja
adc
addl
movl
mov
sub
out
imul
shlb
jb
pusha
lods
and
or
push
loope
push
add
dec
mov
add
mov
add
outsb
adc
pop
lea
add
in
call
aad
mov
push
dec
inc
xor
mov
and
fmul
mov
enter
add
jb
mov
pop
xchg
fdivs
sbb
and
sub
sarb
pop
push
ss
rolb
and
push
or
std
jnp
fcoms
or
lock
mull
out
int3
jnp
lsl
jmp
push
pop
push
push
inc
shr
rcr
and
push
cld
shr
rcr
or
mov
repz
dec
fucomip
andl
mul
pop
jb
cmp
or
pusha
out
out
jb
cmp
or
xor
and
test
or
ficoml
mov
lret
iret
pop
xchg
push
dec
sub
insl
inc
and
sbb
push
mov
jne
adc
mov
adc
pop
jbe
add
cmpl
add
shrb
fldenv
sub
sbb
mov
cwtl
jbe
out
or
xchg
or
inc
addb
cmpsb
dec
movl
bound
add
or
cmp
inc
cmp
insl
dec
in
add
push
mov
add
lret
negb
adc
jge
inc
jp
mov
mov
mov
push
movsb
push
lock
dec
loopne
sbb
jne
addl
push
sub
cmp
and
inc
pusha
or
jmp
push
push
sbb
and
insl
adc
push
clc
sbb
daa
lret
jmp
dec
and
test
dec
lret
dec
or
and
and
add
rolb
pop
adc
xor
loope
and
jo
add
fcompl
sub
inc
add
xchg
cld
mov
jne
sbb
popf
sub
mov
je
xchg
arpl
pop
inc
cmp
mov
and
pop
mov
inc
mov
cmp
lcall
in
roll
push
repnz
inc
decb
dec
inc
pop
sbbb
pop
ret
adc
daa
loopne
push
into
add
hlt
pop
push
pusha
inc
or
clc
mov
mov
movsl
or
lock
push
jmp
aam
sahf
xchg
push
std
shl
push
daa
or
add
testb
and
pop
lods
fmuls
fwait
loope
dec
insl
lock
clc
pop
sbb
decl
mov
adc
clc
mov
push
andl
adc
jo
adc
push
mov
lock
mov
mov
jg
mov
jmp
mov
popa
push
sub
mov
add
push
jb
fisubs
mov
and
cmp
pusha
inc
xor
add
rolb
push
or
repnz
cmp
jno
mov
cmp
ret
scas
int3
sub
mov
fwait
mov
fsubr
push
cmovns
mov
ds
loope
cmp
jne
and
mov
jmp
adc
outsl
push
xchg
outsl
jmp
jbe
jae
adc
jo
push
cmp
or
xchg
sub
or
mov
adc
in
cmp
inc
ret
mov
sbb
inc
inc
fidivl
fucomp
daa
sbb
mov
movb
push
or
inc
sbb
lods
pop
imul
jno
mov
or
jl
cmp
jg
inc
jmp
cli
fdivs
inc
pop
lds
jecxz
notb
add
push
inc
mov
jge
aas
sbb
cmp
inc
enter
in
test
sbb
or
js
loop
adc
je
mov
pusha
pop
fadds
lock
xor
pop
je
pop
icebp
xor
loop
inc
fs
dec
adc
mov
std
insb
jne
push
adc
and
add
sbb
push
mov
stos
int3
addb
jle
lods
pop
sbb
ljmp
test
nop
das
fbstp
push
dec
adc
push
and
stc
jl
pusha
lods
push
dec
and
push
jg
mov
inc
or
jbe
jle
xor
std
out
es
jg
jg
jo
mov
std
pop
and
jne
repnz
in
in
enter
pop
ffreep
lea
adc
js
sbb
test
shll
shll
lock
xor
dec
sub
xchg
or
shl
inc
inc
push
negl
ret
mov
test
shrb
lret
ret
mov
shr
or
pusha
test
ret
insl
jne
and
xchg
inc
rol
mov
mov
pop
test
test
pop
movsb
mov
stos
mov
cwtl
and
mov
and
mov
inc
adc
scas
ret
mov
sub
in
and
lds
shr
push
pop
inc
mov
ret
das
in
jo
add
cli
and
shl
sbb
lock
or
fnstsw
fistl
shl
jl
js
jnp
pop
daa
cmpb
cmpb
adc
jno
sub
inc
mov
xchg
and
jecxz
sbb
pop
ret
pop
rcll
mov
mov
aaa
int3
mov
sub
je
adc
jmp
orl
add
call
repz
pop
cmp
or
mov
pop
in
rcl
push
pop
jne
lcall
mov
subb
add
lea
and
sahf
cmp
inc
clc
xor
les
orb
sahf
addr16
and
or
mov
and
or
xor
mov
push
fisubrl
push
je
xchg
cli
adc
lea
lea
or
dec
imul
pop
and
mov
jmp
fs
arpl
mov
jle
add
cmc
mov
xor
xorl
enter
dec
add
imul
adc
adc
pop
mov
cld
loopne
mov
sbb
in
out
dec
and
pushl
add
jno
push
add
sbb
and
push
mov
mov
jp
sub
sbb
rolb
out
loopne
push
inc
cmp
ds
mov
push
push
push
ds
or
push
xor
insb
enter
pop
loope
adc
adc
or
mov
jl
fs
and
adc
sarl
rclb
sbb
sbb
fs
dec
je
test
daa
jl
outsb
sub
jnp
hlt
adc
xor
pop
push
sbb
aas
test
add
ds
add
jbe
icebp
xchg
adc
xor
mov
pop
fcmovbe
scas
je
iret
xchg
fisubl
out
data16
es
pusha
xchg
ss
pop
pop
mov
je
xorb
rcrl
or
sub
push
mov
sub
pusha
push
test
jle
mov
fs
xor
loopne
mov
jmp
addb
pop
jo
jl
loope
add
lret
ret
leave
cs
das
xor
sbb
xor
pop
icebp
arpl
gs
adc
add
js
inc
sub
or
cmp
dec
or
gs
into
lods
adcb
ss
lds
sbb
jge
mov
add
adc
push
lds
inc
add
inc
mov
test
das
flds
xchg
adc
enter
movsb
push
push
call
inc
jle
clc
sysexit
ss
and
ljmp
les
xor
leave
cmp
push
inc
adc
cmp
pop
mov
shll
and
add
pop
or
add
mov
sub
inc
adc
or
pop
mov
inc
mov
push
push
nop
imul
fcomps
shll
mov
cmp
loop
dec
and
shrb
push
lods
mov
cmp
sti
add
or
push
mov
cs
sbb
ja
test
cs
iret
and
dec
and
add
cmpsb
mov
mov
xchg
test
add
add
mov
sub
or
sub
jg
xchg
and
rorb
notb
jmp
mov
stos
popf
adc
adc
shlb
dec
and
outsl
mov
mov
fs
test
jmp
dec
push
insb
lods
adc
in
jbe
sbbl
mov
cld
int3
jg
mov
lock
jo
adc
sbb
push
mov
ret
ss
adc
clc
pop
jge
push
sahf
andl
mov
nop
fisubs
mov
dec
dec
jae
imul
sbb
pop
or
push
jmp
loopne
or
and
outsb
mov
rclb
bound
repnz
sub
mov
bound
int3
pop
mov
and
lahf
inc
addb
sub
cmp
mov
insb
movsl
jbe
sub
mov
lods
inc
stos
loopne
je
mov
dec
faddl
insb
push
jge
inc
nop
mov
mov
loop
cld
cmp
jbe
testl
cmpl
pop
orb
or
xchg
call
mov
data16
repnz
test
lea
cmp
mov
push
jg
cmc
jecxz
push
sbb
pop
push
push
inc
jmp
cmp
xor
xor
mov
icebp
inc
loop
dec
sahf
hlt
clc
push
ret
jne
out
add
cmc
push
adc
fcomps
cwtl
jge
add
mov
pop
push
sbb
pusha
insb
mov
mov
mov
xor
sub
jmp
push
jp
dec
call
in
pop
jle
xor
adc
push
push
add
push
loopne
adc
cld
test
nop
nop
mov
ljmp
lods
sarl
add
mov
mov
je
lock
pushf
imul
add
mov
push
hlt
jge
movsl
add
test
lea
enter
xor
call
or
scas
sti
outsl
xor
and
and
or
and
ficoml
andl
pop
lret
sti
mov
push
or
mov
sub
ja
mov
and
sub
xchg
inc
testl
adc
iret
push
les
xchg
into
dec
inc
jne
inc
or
cmp
inc
add
push
scas
addr16
and
call
test
or
xchg
test
push
pushf
fstpt
lea
lcall
or
adc
lock
or
ret
ljmp
bnd
pop
pop
add
gs
inc
ja
mov
incw
cmpl
insl
mov
push
xor
jg
aam
push
test
jg
add
dec
cmp
jle
or
xor
cmp
mov
test
shll
shr
mov
add
or
shr
and
or
or
push
clc
pop
gs
mov
dec
sub
inc
mov
imull
fists
je
orl
cmpsb
push
out
or
fcom
insl
fsubl
clc
mov
mov
mov
jne
outsb
mov
mov
mov
mov
aas
mov
ja
push
cmp
dec
test
dec
jbe
mov
jo
lock
rcr
fiaddl
mov
testl
jmp
out
jmp
or
inc
mov
in
lods
mov
test
cmp
aam
nop
mov
push
push
cmp
mov
loope
jl
loopne
xor
dec
int3
int3
jmp
out
hlt
push
nop
daa
mov
sub
into
jmp
lods
mov
shr
add
jae
jno
mov
test
les
push
xor
sbb
movsl
mov
push
lret
das
sub
test
sbb
push
sahf
sbb
movups
fidivs
les
mov
inc
mov
adc
push
movsb
inc
in
xchg
add
lods
pop
movsl
fiaddl
lahf
out
mov
jae
lock
cmp
repz
dec
lds
loop
push
mov
dec
jle
popa
daa
rcll
incb
jne
testb
adc
sbb
mov
fiadds
subb
imul
or
sub
jg
lret
sbb
dec
push
mov
cmp
repnz
push
add
pusha
rcrb
pusha
push
adc
nop
push
das
jl
push
cmp
pop
in
mov
pop
sbb
out
mov
sbb
sub
aas
and
mov
cmp
or
rorl
in
jns
sbb
push
bound
xchg
ret
add
imul
mov
sbb
push
fscale
inc
xor
imulb
es
insl
imul
dec
ret
mov
jecxz
rolb
adc
mov
pop
lea
push
pop
pop
rolb
jbe
mov
sbb
push
adc
mov
mov
call
sbb
inc
jne
loop,pt
push
loop
jg
pop
je
subl
out
sub
inc
adc
and
aas
jg
and
inc
inc
inc
jo
mov
rcr
push
test
shlb
mov
jo
testb
adc
imulb
cmpsb
push
xor
xchg
add
xor
and
xchg
loopne
aam
or
inc
cli
pop
pop
ret
in
addb
dec
push
mov
bound
add
cli
shr
add
sub
sbb
and
add
dec
adc
inc
and
dec
lods
mov
inc
lods
cmovno
pop
jne
rolb
jmp
repz
push
outsl
cld
push
or
sub
mov
jb
adc
mov
iret
lea
push
andb
mov
leave
sub
ret
inc
cmp
xchg
and
movsb
mov
mov
mov
lahf
rorb
xchg
adc
fstps
ret
nop
mov
scas
push
shll
pop
bound
mov
sbb
jmp
sbb
pop
jp
push
sub
pop
jno
enter
push
sbb
in
cmp
test
repz
test
jmp
mov
popl
pop
cli
or
push
lea
add
dec
cmp
leave
sar
pop
cmpsb
mov
aas
or
add
pop
clc
dec
adc
sbb
mov
xor
stos
inc
pop
scas
test
xor
sub
loope
push
and
xor
xor
dec
pop
ret
or
inc
cltd
insb
mov
push
subl
push
inc
jmp
xor
js
ljmp
cmp
push
cmp
mov
push
js
push
adcb
jns
dec
pushf
pushw
push
sub
xchg
enter
ficomps
mov
add
mov
loop
sub
mov
xor
pushf
sub
rorl
cmp
xor
push
hlt
mov
andl
add
add
fs
pop
and
sbb
fwait
pop
sti
out
push
ret
lret
add
cld
cmp
fsubs
movsl
test
fcomip
fdivs
mov
call
jmp
bound
inc
outsb
pop
ja
push
dec
hlt
cmp
add
adc
rorb
call
dec
xchg
push
push
data16
fimull
add
or
sarl
fs
add
or
ja
mov
pcmpgtb
mov
add
scas
or
or
pop
divl
add
mov
sbb
add
clc
add
mov
dec
call
shl
rcl
sarl
add
pop
mov
imul
daa
push
adc
adcl
add
adc
dec
je
ret
push
negb
mulps
addl
pop
hlt
jb
mov
adc
push
sysenter
sbb
insl
push
sbb
dec
xor
cmp
cmp
stos
mov
ds
test
shll
and
lret
xchg
adc
mov
cmp
mov
mov
cli
or
shufps
scas
mov
les
adc
aad
pop
pushf
sub
sub
loop
lea
dec
add
and
cmp
ret
sub
add
insb
jmp
add
xor
sub
andl
dec
jae
in
pop
jns
or
fiadds
into
jg
sbb
bound
xchg
mov
pop
data16
gs
jle
add
test
sub
and
mov
inc
dec
leave
imul
pusha
aad
mov
movsl
jne
jb
or
mov
stc
sbb
ret
jge
mov
or
xor
shlb
cmp
test
shl
mov
or
push
fs
or
push
xchg
push
pop
call
add
dec
push
mov
pop
cwtl
test
aaa
mov
add
jmp
inc
xchg
loope
dec
mov
pop
mov
adc
in
dec
outsl
sbb
ja
outsb
push
jae
adc
push
ja
add
addr16
sub
lcall
push
mov
negb
add
mulb
mov
add
js
xor
dec
push
cmp
aas
and
popf
jge
leave
sbb
or
jmp
dec
sub
adc
movsb
inc
mov
push
or
movsb
sub
pop
test
fdivrl
insb
loopne
cmp
inc
les
or
sbb
or
sbb
movsb
icebp
jbe
jmp
sbb
xor
mov
jno
cltd
adc
add
mov
lds
mov
test
adc
xchg
in
mov
push
lcall
dec
inc
ret
xchg
cmp
add
push
xchg
mov
cmp
and
mov
mov
pop
pushf
push
pop
push
out
movsl
or
fcompl
pop
inc
cld
das
and
ret
mov
and
cmp
jae
fistpl
xchg
inc
adc
inc
and
loop
mov
outsb
les
pop
xor
push
adc
dec
mov
outsl
test
cmp
mov
stos
sbb
push
jmp
test
push
jge
inc
insb
lahf
je
inc
cmp
shrb
add
or
in
js
pop
sbb
outsb
push
ja
dec
and
pushl
std
mov
pop
cmp
sub
pop
adc
jp
enter
loope
dec
add
inc
push
or
adc
and
cmp
xor
push
mov
cmp
sub
dec
fs
cli
push
dec
out
roll
inc
jmp
xor
test
jge
mov
or
add
add
mov
lods
xchg
ret
imul
push
movsl
pop
pop
icebp
fisttps
adc
and
pop
add
sub
sub
mov
push
or
sbb
sarl
sub
push
bound
add
sub
pop
add
jmp
mov
mov
pop
lock
dec
les
es
cmc
dec
adc
jbe
push
jo
orl
jo
cmpsl
testl
push
jo
psrlq
mov
cwtl
in
shlb
fsubrl
jle
clc
mov
push
jecxz
or
mov
data16
push
pop
cwtl
mov
outsb
push
jne
push
aas
out
arpl
jge
int
xor
pop
aas
loopne
stos
xorb
push
add
xor
and
daa
pusha
cmp
shlb
xlat
sub
adc
insl
push
std
adc
mov
ret
sbb
sub
adc
push
ret
push
pcmpeqw
cmp
lcall
or
jno
addb
or
lea
pop
add
pop
jns
cwtl
fildl
ss
mov
js
pop
mov
push
das
ds
cmp
cmp
add
dec
ss
imul
add
loope
bound
mov
in
imul
dec
or
mov
iret
xchg
sti
mov
xor
andl
js
loope
cmp
jg
cmpb
pop
sub
ss
or
jne
rol
les
xor
mov
push
sbb
popa
adc
ficompl
xchg
adc
lods
fcmovbe
std
dec
les
jb
pcmpeqb
adc
dec
je
out
fsubrl
push
jae
mov
jmp
mov
je
jl
mov
cwtl
xchg
mov
pop
loop
inc
push
jo
loopne
fst
jb
fstpt
sbb
pop
lods
push
in
add
outsl
xchg
sahf
cld
add
mov
adc
test
dec
pusha
mov
mov
inc
pusha
jne,pn
sbb
ja
rol
inc
mov
sahf
cmpsb
adc
adc
add
mov
mov
aaa
stos
sub
cli
fsubr
fstl
call
jecxz
xchg
add
pop
xchg
loopne
jmp
cwtl
cmp
or
adcb
imul
shlb
movl
and
movl
fmulp
inc
cmp
roll
xchg
xor
dec
sbb
insb
xchg
inc
push
mov
xorl
bound
cltd
lea
mov
jno
cmp
push
adc
js
or
xchg
stc
jb
sbb
add
inc
or
sub
call
or
push
add
negb
add
or
out
and
pop
inc
sbb
cmp
ret
adc
ja
stc
xor
fcoml
daa
push
xor
notb
in
or
inc
and
xchg
mov
pop
add
or
nop
orl
shl
dec
nop
or
je
lcall
push
subl
into
jo
les
lods
lds
sbb
nop
adc
mov
adc
clc
inc
lea
mov
rcl
mov
xor
add
pop
ret
mov
push
mov
je
mov
pop
insb
xchg
push
pop
mov
mov
neg
push
das
or
aaa
movsl
mov
outsl
adc
cmp
imul
jp
or
and
dec
test
push
cwtl
hlt
xor
cld
add
adc
sub
dec
xor
pop
cmp
adc
in
mov
mov
xor
jo
notb
daa
out
adc
dec
mov
add
push
adc
mov
fisttpll
sbb
hlt
stos
mov
xor
sub
iret
or
ret
or
ja
jle
cmp
lcall
stos
test
and
outsl
pusha
lods
data16
jb
pop
jecxz
arpl
cmp
sbb
mov
jg
cmp
ljmp
push
jecxz
call
es
and
repnz
dec
dec
jno
push
in
mov
inc
push
and
sbb
adc
stos
fs
jmp
dec
movsl
out
mov
mov
sbb
sarl
cmp
imul
in
sbb
sbb
sbb
in
in
sub
xor
loopne
in
cmp
in
movsb
int
inc
and
inc
cmovs
leave
leave
leave
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
sbbb
jl
sbb
test
fs
xchg
cwtl
es
fs
pushf
mov
repnz
mov
leave
and
int3
and
es
sarb
xor
fsub
in
dec
xor
and
aam
xor
and
hlt
clc
cld
jo
inc
dec
add
add
add
insl
fiaddl
or
adc
dec
sbb
and
dec
xor
sub
dec
xor
xor
cmp
dec
shll
inc
dec
es
jbe
dec
mov
cltd
fs
dec
pop
pop
pusha
cmp
or
sbb
je
or
je
faddl
add
rorb
or
mov
mov
xor
and
mov
lahf
xchg
and
lcall
dec
dec
xor
sbb
sbb
and
and
cmp
add
cli
lods
rorb
inc
mov
mov
test
dec
mov
pusha
and
mov
pop
adc
mov
sub
rorl
push
ret
fbld
or
xor
fdivr
rorl
inc
mov
fcom
sub
push
or
xor
leave
mov
add
lock
inc
in
xchg
jmp
and
ret
push
test
and
enter
add
or
xor
into
stos
add
lods
shlb
divb
loope
xor
and
fildl
add
jmp
gs
add
cli
rcr
push
test
js
lock
jns
test
adc
dec
xchg
mov
or
cmp
hlt
mov
icebp
and
je
add
or
ret
or
cltd
adc
leave
add
adc
lock
and
mov
popf
mov
add
jl
and
jecxz
sbb
mov
or
adc
lea
and
dec
jp
or
aaa
jge
je
inc
pop
movsb
es
xchg
fnstcw
jge
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
xor
add
jecxz
xchg
push
sahf
adc
fnstsw
pusha
mov
fldl
cmp
dec
xchg
pop
roll
testb
sub
jne
adc
sti
add
and
pop
jns
out
test
fisttps
ret
xor
lock
inc
das
xchg
or
sub
call
and
or
jb
sbbb
and
imulb
push
orb
call
pop
sbb
lcall
and
or
fwait
adc
jnp
inc
flds
fstps
jmp
frstor
pop
test
outsl
loopne
jne
in
inc
mov
hlt
adc
orb
test
and
push
pop
sub
shl
fldl
cmp
lea
push
and
xchg
sti
test
js
adc
or
push
inc
hlt
pop
dec
ror
enter
sbb
out
movb
pushf
sbb
mov
xchg
lods
sbb
test
jmp
sub
sub
jmp
sub
inc
dec
push
jp
push
or
psubusw
xchg
out
add
adc
xor
scas
mov
rclb
mov
inc
testb
icebp
or
inc
and
test
mov
cli
cli
lret
jmp
or
add
fadds
push
scas
in
and
in
inc
test
cli
repnz
add
fwait
ljmp
cld
fs
mov
test
jle
ret
cli
shrl
push
pop
orl
scas
dec
test
loopne
or
push
push
pop
jmp
pop
push
test
adc
cmpsb
roll
adc
mov
inc
outsb
mov
movsb
ja
xor
jle
push
xor
sub
add
or
or
cmpsb
lret
popl
xchg
mov
adc
repnz
test
add
lea
add
loopne
mov
call
pop
cmp
je
negb
jl
jge
imul
mov
sbb
hlt
adc
mov
adc
pop
pushf
sub
mov
shlb
and
pop
mov
or
pop
xor
jmp
iretw
jp
jno
aad
inc
ficoms
mov
push
add
js
movsb
add
pusha
imul
ss
ja
jo
inc
sub
scas
adc
mov
and
lock
dec
pop
ds
push
mov
add
xor
jae
rcr
mov
fcomi
cwtl
mov
int
xor
jbe
push
das
adc
inc
addr16
dec
pushf
mov
test
mov
adc
mov
mov
sub
rolb
data16
je
insl
rorb
and
rolb
loopne
lret
std
loope
es
sub
xor
pop
int
xchg
shufps
mov
pop
lret
lock
or
sti
js
mov
imul
decb
mov
inc
sbb
and
pop
add
xorb
adc
sbb
test
leave
pusha
or
cmc
or
out
fld
fucomp
sub
lock
fstps
out
mov
cmc
cmpsb
inc
push
xor
test
lods
push
dec
pop
and
mov
push
das
int
sub
shll
push
or
fwait
cmpsb
in
xchg
or
push
or
push
out
lods
pop
les
push
push
sti
inc
push
or
push
and
mov
jmp
sbb
sub
adc
inc
push
push
push
adc
xlat
fidivl
xor
aas
pop
xchg
xchg
stc
mov
fnstsw
lgs
or
mov
loop
mov
fld
and
xchg
xor
fdivrl
mov
xor
or
insl
or
push
mov
shrb
js
fldt
sbbb
fwait
test
fsubs
es
ficompl
fwait
sbb
and
jle
inc
repnz
mov
lods
ret
fldpi
xor
xor
rcll
add
pushf
je
lret
dec
sbb
xorb
push
cmp
xsaveopt
xchg
insl
test
mov
mov
cmp
test
or
mov
xchg
out
jmp
and
and
loopne
jns
or
push
jg
aad
or
addb
dec
dec
xor
fwait
jg
mov
enter
inc
js
test
lock
mov
xchg
push
jbe
mov
push
mov
decl
insl
sahf
pop
lret
push
ja
inc
mov
test
sbbl
push
fwait
pushf
add
lcall
popf
xchg
repz
add
subb
push
jo
cltd
sarb
fwait
mov
and
nop
lret
je
sub
mov
daa
pop
cmp
outsl
mov
rorl
inc
orl
mov
fildll
repnz
or
or
loope
nop
push
inc
cmpsb
push
or
inc
add
loope
rcrl
adc
sti
das
and
xorb
fisubl
scas
push
test
push
or
and
gs
add
pop
cli
sub
inc
test
xlat
roll
daa
testb
test
xor
out
jbe
jl
xchg
std
aam
outsl
xlat
lods
lock
stos
jp
pop
pop
xor
movsl
dec
jp
in
sub
call
cmp
or
pop
add
jp
ljmp
adc
scas
inc
outsl
and
or
inc
lea
pop
xor
lret
arpl
aaa
sbb
mov
xchg
test
lret
loop
rolb
cmpl
mov
repz
std
jle
adc
pop
pop
and
mov
out
insb
lock
mov
inc
adc
iret
mov
mov
mov
mov
stos
and
push
loopne
cmp
jb
cmp
or
add
dec
cmp
xor
jmp
sub
jae
or
inc
dec
testl
adc
cs
or
sarb
push
and
adc
enter
or
je
inc
mov
addl
or
inc
frstor
lock
inc
cld
push
mov
add
or
xor
js
mov
pop
roll
cmp
jg
push
inc
loopne
mov
shl
sub
sub
test
push
rorb
push
into
and
pop
aaa
xor
push
or
and
aam
mov
mov
stos
push
jl
inc
and
jno
out
pop
pop
sub
jne
xchg
je
lahf
fs
pop
dec
jns
mov
jb
lea
push
rorb
inc
lods
sbb
and
test
lea
push
push
lods
rol
out
pusha
push
aas
dec
or
inc
rcrl
dec
xor
mov
jno
lahf
add
mov
lods
fsubr
pop
sub
push
jb
push
repnz
arpl
aam
mov
dec
jns
shlb
cmpsl
bound
cmc
hlt
push
aas
mov
sub
lea
push
xor
inc
xor
fldl
dec
mov
movsb
shrl
cmp
aam
cmp
adc
jl
push
ss
shll
adc
jb
subb
loopne
jne
daa
andl
or
out
pop
or
nop
jl
stos
iret
and
outsl
mov
or
sub
push
in
xchg
jge
and
rcl
xchg
push
fimull
inc
dec
lods
shl
test
ret
pop
lret
or
fidivl
les
or
or
add
add
cmp
cmpsb
cmpsb
stos
sbb
dec
jmp
nop
lock
mov
shl
and
mov
rolb
cmpsb
mov
add
add
inc
mov
rolb
push
dec
data16
inc
mov
add
inc
sbb
mov
inc
dec
dec
scas
lret
push
pop
jne
add
dec
adc
movsb
test
testl
mov
mov
xchg
js
add
inc
inc
mov
inc
inc
push
lods
jge
inc
mov
mov
rorl
push
movsb
lods
fadd
repz
add
xorl
pop
xchg
xchg
xchg
adc
fidivrl
lret
cs
or
ss
cmp
je
incl
xor
mov
dec
cmpb
je
mov
jg
mov
cmp
pop
jne
dec
mov
inc
inc
mov
cltd
mov
mov
and
adc
fistpll
xchg
xor
add
dec
and
sub
fdivr
adc
aam
rclb
sbb
cs
jmp
xor
mov
xor
or
add
test
adc
mov
outsb
inc
push
add
adc
jno
fcoms
add
and
push
test
push
sub
jne
xlat
imul
stos
hlt
sub
or
add
mov
push
cmp
ret
push
fstl
or
je
clc
rorb
cmp
sbb
sub
test
add
mov
popf
loopne
pop
clc
outsb
mov
repz
push
cmp
sub
jle
lds
xchg
adc
add
sbb
xor
lock
ret
inc
inc
sub
add
adc
push
mov
push
movsb
jno
or
hlt
mov
adc
pusha
inc
ljmp
dec
dec
jns
neg
movb
xchg
mov
jbe
jl
cltd
push
test
xchg
dec
adc
and
or
add
xor
add
add
ja
xor
fs
push
xorb
rclb
and
cmp
add
sbb
cltd
xchg
or
xorb
sbbb
ret
dec
imul
add
mov
pusha
ret
mov
test
lahf
iret
ret
jmp
add
xchg
lret
or
insb
xchg
xchg
sub
adc
lds
sbb
adc
fsts
mov
mov
dec
fsubrl
sbb
or
sbb
aam
rcr
adc
push
jmp
inc
and
dec
fmuls
pop
js
cmp
push
xchg
cmp
adcb
pop
adc
adc
push
mov
in
and
call
pop
xchg
or
mov
rorl
or
cmp
dec
shlb
inc
xor
xchg
sahf
xchg
clc
push
lahf
ret
cld
push
and
xchg
into
sub
call
adc
imul
xchg
incb
pop
or
ret
dec
pushf
faddl
dec
lock
pop
ret
add
or
fiadds
cmp
sbb
push
fdiv
aas
test
enter
js
subb
fcompl
mov
push
js
sbb
das
sub
leave
and
add
insb
movb
std
or
xchg
iret
and
mov
pushf
inc
popf
neg
sbb
movsb
mov
and
or
das
adc
jg
ret
inc
sbbb
shll
add
xor
xor
dec
inc
popf
sub
add
cmp
jnp
jmp
inc
xor
mov
jb
inc
loope
push
add
sbb
cwtl
fisubs
insl
mov
mov
sub
jg
hlt
nop
rcll
or
adc
push
and
lods
mov
sbb
rol
fsubs
cmp
xor
jbe
push
cld
movsl
mov
or
shrd
sbb
xor
dec
cmp
mov
scas
sbb
clc
arpl
mov
jmp
mov
and
xor
out
imul
sub
inc
aaa
pop
cmp
shll
incb
push
adc
xor
jp
xor
cmc
mov
sub
xor
xchg
jo
mov
and
jne
shrl
mov
sarl
jg
sbb
xor
mov
jne
jmp
adc
fimull
push
icebp
cmp
jl
pop
push
shll
fistps
push
push
sbb
mov
push
add
in
lock
sarl
std
test
jl
jg
mov
js
dec
inc
dec
pop
or
dec
sahf
sbb
xlat
lcall
cmp
adc
mov
shrl
in
ja
xchg
icebp
push
sbb
or
es
sub
jbe
inc
adc
dec
cmc
movmskps
sbb
movw
push
inc
jp
fidivrl
shlb
add
loopne
push
sbb
mov
jmp
lods
add
push
inc
mov
add
out
lods
dec
ret
xchg
incl
inc
xchg
inc
or
or
adc
lock
ret
aaa
push
lods
ficomps
or
aas
pusha
addb
push
mov
push
xchg
dec
and
insb
jmp
das
push
inc
lock
fdivs
and
jb
cmp
jbe
jl
or
or
push
mov
or
mov
inc
push
add
sbbb
daa
nop
push
divb
push
cmp
mov
nop
or
mov
dec
sub
sub
dec
cmp
leave
xor
enter
push
push
cmc
mov
mov
shll
cld
jl
rorb
sub
out
adc
pop
scas
stc
mov
rorl
cwtl
push
add
push
jmp
xor
dec
pop
gs
or
pop
data16
shr
mov
lods
or
lea
imul
inc
je
repnz
mov
cmpsl
jmp
xor
insl
jmp
sub
add
lcall
xchg
sbb
jp
push
cmpsb
rorb
call
adc
push
jo
mov
push
add
pop
shll
xor
add
inc
loope
ret
pop
cmp
imul
shrl
ret
test
mov
or
push
adc
jle
mov
cmp
testl
push
movsb
ja
clc
push
xchg
sarl
push
in
hlt
bound
rcll
sub
push
test
xchg
loopne
cmp
testl
sbb
je
cmp
aas
push
or
cmp
addl
mov
mov
loopne
imull
lods
add
xchg
jmp
add
addl
adc
mov
or
pop
nop
movsb
mov
pop
pop
push
ljmp
lods
mov
sub
int3
inc
mov
and
leave
icebp
and
insb
pop
sub
movsb
push
push
stos
movsb
scas
lcall
addr16
flds
mov
xor
or
cmp
mov
inc
pusha
or
cmp
push
add
mov
sub
cmc
xchg
or
mov
pop
adc
mov
adc
mov
cmp
sbb
lods
pop
adc
mov
cmpl
push
or
aam
cmp
mov
push
mov
shlb
dec
clc
scas
jg
in
imul
pop
mov
shr
mov
pop
cmp
aam
scas
es
and
add
pop
jb
andl
adc
jge
inc
jne
sub
je
dec
je
dec
push
push
jmp
mov
cmc
jmp
mulb
call
orl
pop
adc
jmp
mov
jmp
jno
or
add
fistps
and
sahf
andb
data16
int3
or
pusha
xchg
loopne
pusha
mov
loopne
sbb
ret
xor
jno
sbb
or
push
jne
adc
fdivp
adc
adc
and
outsb
ljmp
lcall
add
push
or
lea
sub
stos
inc
imul
mov
enter
xchg
dec
repnz
inc
adc
fiaddl
into
or
mov
sub
xor
sbb
push
push
or
adc
mov
mov
mov
pop
sbb
add
push
pop
mov
adc
push
dec
mov
or
push
and
sbb
add
xchg
inc
fiadds
jnp
dec
push
rcll
call
inc
ljmp
inc
aaa
pop
ljmp
sar
add
out
pop
add
or
scas
add
shr
or
mov
fistpll
adc
test
and
add
mov
leave
test
adc
adc
mov
push
mov
add
mov
add
movsl
insl
and
dec
inc
clc
movsl
je
inc
jl
in
sbb
cmp
lcall
pop
dec
adc
je
sbb
call
repnz
loopne
dec
fidivrs
inc
adc
sub
dec
xor
bound
xor
out
inc
adc
lret
clc
xor
mov
mov
cmp
orl
stc
rolb
dec
xchg
mov
xor
nop
mov
icebp
mov
shlb
push
fbld
mov
mov
movsl
xchg
or
addl
in
or
nop
clc
add
pop
add
mov
add
cli
jne
mov
push
addb
test
add
push
or
pop
inc
mov
shll
adc
or
in
jbe
test
push
sahf
mov
sbb
adc
mov
mov
loop
push
sbb
leave
rol
xchg
nop
sbb
test
pop
jns
xor
pusha
je
xor
cwtl
sbb
pop
or
nop
sbbl
nop
jno
add
lret
int3
test
mov
lret
xchg
dec
jo
mov
int
push
dec
dec
or
iret
sub
sbb
add
inc
inc
mov
sbb
stos
fisttps
pop
xlat
inc
sbb
inc
and
fs
adcl
ret
stos
sbb
xchg
mov
mov
cvttps2pi
add
shr
rolb
cmp
jne
subl
int3
pop
or
sub
jecxz
out
mov
mov
cmp
fdivrp
push
inc
aad
xor
push
mov
clc
xchg
imul
push
test
mov
sub
test
sbb
rcr
or
inc
adcb
mov
mov
std
adc
dec
loopne
les
je
data16
add
outsb
mov
sub
push
xchg
adc
rcl
popf
xor
add
fmuls
add
test
mov
xor
je
clc
shlb
negb
add
inc
test
aas
cmp
and
jmp
ss
add
out
add
call
ss
or
cmp
adc
mov
cltd
pop
mov
add
inc
add
repnz
pop
mov
in
mov
cmp
jle
inc
and
add
or
shlb
pop
sbb
xor
leave
inc
xor
sub
pusha
mov
fucomp
fcoml
xor
mov
mov
je
out
xor
rolb
aam
push
fstl
inc
popa
add
insl
push
add
push
xor
jmp
das
push
fisttpl
dec
imul
mov
ds
mov
cld
or
push
dec
mov
aaa
cmc
je
push
hlt
pop
movsb
mov
and
jne
cmp
jne
or
mov
dec
add
mov
negb
add
adc
rorb
push
or
test
or
adc
fprem
std
jne
out
roll
leave
add
je
add
sub
adc
mov
jg
lock
xchg
push
aad
ss
divb
pop
sahf
jne
std
mov
movsl
sti
in
adc
pop
add
repnz
mov
sbb
add
outsb
add
mov
dec
and
and
adc
sub
lea
rclb
and
and
sub
cld
imul
adc
fdiv
fiaddl
fsubp
fisttpll
inc
ss
dec
add
xorl
xchg
adc
int
push
sbb
fcoms
adc
and
xchg
cmpsb
xchg
sbb
fcomi
sbb
xchg
inc
sub
adc
sbb
or
sbb
mov
dec
fsubs
fwait
dec
jne
or
pop
aam
mov
insl
mov
and
lods
rcl
ljmp
dec
and
shr
sub
xor
mov
xor
jmp
enter
popf
maskmovq
cld
lock
je
rorb
sub
mov
addr16
js
sbbl
push
mov
pop
fbld
loopne
jae
adc
inc
ljmp
or
std
movsl
mov
je
push
and
into
jbe
aas
dec
das
jge
xor
dec
adc
dec
xchg
or
or
adc
push
pusha
add
dec
inc
xchg
addb
enter
into
paddusb
sub
in
shll
sbb
or
daa
in
sub
add
aam
adc
gs
outsl
pop
cmovno
in
dec
jge
cmp
stos
cs
xchg
adc
adc
sahf
cld
inc
ss
push
nop
aaa
dec
sub
cmpsb
pop
add
dec
stc
xor
jns
cmp
out
cld
mov
adc
ficompl
pop
lods
test
adc
add
xchg
jo
subl
enter
fs
xor
cmp
xor
pop
pop
xchg
lea
xchg
clc
push
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
xchg
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
fadds
and
imul
test
test
aas
sti
pop
leave
insl
scas
pop
push
movb
jmp
or
cmp
je
mov
iret
cmp
pop
js
pusha
test
push
mov
dec
dec
call
movw
jb
call
daa
cltd
mov
pop
xchg
adc
pop
push
daa
jno
mov
jb
jne
sbb
mov
shlb
loope
mov
fdivr
inc
jne
adc
or
sub
bound
out
andb
sbb
je
dec
into
push
add
jle
add
cmp
mov
movsl
ja
imul
call
jg
add
inc
imul
lea
sar
ror
cmp
mov
pop
neg
lods
testb
mov
mov
cmp
popf
and
mov
shl
inc
call
roll
ss
into
sti
add
addr16
adc
push
cwtl
mov
push
test
lods
xor
jb
jl
in
jbe
pop
or
dec
jle
repnz
addb
les
mov
scas
adc
test
and
and
mov
adc
xor
mov
cmpsl
add
into
sahf
add
decb
xchg
and
lahf
fsqrt
and
adc
inc
testl
cmp
ljmp
stos
inc
inc
or
cmp
lock
mov
mov
jne
lea
rolb
rolb
fs
mov
push
lea
mov
or
jb
pop
xchg
push
push
or
xchg
addb
mov
movsb
mov
cmp
shll
sub
insb
in
pusha
data16
sub
xchg
mov
mov
push
insb
jge
adc
repnz
and
mov
lcall
lock
lret
clc
rcr
and
bound
rorb
mov
cld
add
shr
or
and
shlb
ret
sbb
push
lret
lcall
mov
es
mov
les
or
ret
les
jle
int3
shrl
loope
shr
or
mov
sti
jmp
xor
cli
push
mull
lea
adc
xchg
and
push
pop
scas
xor
testb
dec
cli
cli
inc
inc
lret
repz
cli
div
pop
dec
or
add
xchg
dec
xor
test
add
cwtl
nop
loopne
sub
arpl
jge
sbb
adc
and
xchg
cmp
fimull
xchg
xorb
cli
fidivl
fldenv
enter
jg
or
jo
dec
divb
rorb
mov
imul
divb
inc
sbb
inc
shll
test
push
sbb
loop
popa
orl
sahf
jge
mov
test
movsl
inc
pop
inc
pop
mov
dec
in
aam
daa
adc
jne
push
or
hlt
xchg
out
and
sbb
cmp
mov
adc
int3
jbe
dec
or
sbb
test
add
sub
xor
ljmp
adc
or
fmull
or
mov
sbb
fiaddl
mov
cmpl
adc
jp
jmp
mov
pop
add
add
addb
adc
or
into
or
or
jb
adc
lock
nop
das
test
jge
or
mov
and
mov
or
cmp
jne
jne
sbb
in
or
or
enter
lret
push
mov
add
sbb
popa
mov
dec
sub
mov
aas
and
negb
inc
add
inc
mov
pop
xchg
push
pop
outsb
call
xchg
lods
out
hlt
cltd
test
mov
sbb
jne
or
cli
pop
xchg
fsubrl
mov
cmp
fcoms
xor
fiadds
jnp
lock
imul
jmp
cs
call
mov
loope
outsb
xor
pop
add
and
mov
push
in
add
into
fisubs
add
sti
add
push
sar
ja
into
sbb
loope
rcl
or
push
or
rclb
push
stc
ljmp
ss
fimuls
lea
sahf
mov
add
add
sub
test
call
es
add
or
sub
into
or
mov
inc
ljmp
jmp
add
or
dec
ret
aad
incb
jge
sub
cmpb
or
imul
fs
mov
repnz
pcmpeqb
fidivl
cmp
dec
movsb
mov
and
ret
and
cmp
add
or
jo
rolb
cmp
pop
aad
test
jbe
ret
adc
loop
add
push
mov
lods
loopne
adc
adc
mov
push
add
add
add
test
sarb
adc
stc
lret
ret
inc
mull
or
push
push
adcb
push
or
cmc
adc
or
enter
pop
or
jne
or
push
pop
scas
je,pt
cmp
ret
sbb
adc
mov
je
mov
sub
xor
and
push
add
test
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
pop
sub
mov
fisubrl
and
sahf
fld
aam
pop
push
mov
cmp
prefetchw
sahf
inc
ret
or
aad
cwtl
push
loopne
adc
inc
add
inc
push
imul
push
or
push
lcall
push
adcl
je
inc
sbb
add
je
jmp
pop
jle
pop
or
out
or
add
mov
jle
jne
and
mov
add
test
pusha
aaa
loope
add
shlb
ret
filds
push
cmp
scas
popa
and
daa
in
push
jo
rcr
nop
clc
mov
dec
mov
inc
test
sbb
pusha
lock
push
scas
adcl
cmp
subl
xchg
mov
rcrb
jge
loopne
jl
rolb
clflush
lock
sub
cltd
and
dec
sti
into
or
add
or
cs
mov
add
push
push
mov
mov
sbb
repz
and
sbb
inc
jg
into
jge
lret
into
mov
call
mov
pop
or
faddp
loopne
sahf
pop
mov
sub
shlb
or
pop
insb
test
sub
add
jae
addl
les
mov
test
lahf
pop
and
jecxz
xchg
out
adc
add
lock
movsl
movsb
jnp
clc
cmp
call
lods
and
cltd
and
cs
sbb
es
sub
jmp
roll
jmp
xchg
lret
push
xor
pusha
push
mov
mov
loopne
mov
add
cltd
push
lds
fsts
xchg
mov
cli
test
enter
rorl
clc
xchg
sbb
add
scas
sub
mov
lea
gs
or
in
hlt
test
push
fadds
jge
testb
or
jns
je
cmp
fs
cmp
jo,pn
or
xchg
or
repz
or
js
dec
adc
or
jno
sbb
jbe
dec
or
sub
loope
cld
mov
into
cmp
je
mov
cld
scas
push
mov
or
or
cmp
jbe
pop
aas
or
sub
jmp
push
jl
movsl
pushf
xchg
loopne
int3
xchg
mov
test
aaa
imul
add
mov
cmpl
ret
insb
fstpl
pop
dec
jle
push
push
out
fwait
repz
and
pop
add
ret
push
daa
ljmp
pop
mov
mov
sub
pop
xlat
adc
test
js
pushl
pop
add
and
jo
fistl
and
push
push
mov
popa
add
fstl
and
or
fadds
cmp
sub
or
dec
push
rclb
cmp
lret
in
cmp
inc
and
dec
leave
je
dec
push
test
mov
dec
pop
ljmp
into
orb
dec
fldl
aaa
sbb
dec
mov
repnz
xlat
jmp
sbb
or
pop
cmp
push
js
addb
mov
fldlg2
add
into
push
adc
pop
jmp
cmp
lock
jno
sahf
mov
lods
mov
add
xchg
push
push
mov
add
stos
pop
xchg
push
js
jl
cmp
adc
dec
fidivrl
loope
aaa
imul
and
addb
push
outsb
pop
inc
xlat
inc
ss
ret
push
add
mov
sub
cs
xorb
inc
insb
add
inc
or
pop
pop
xor
ret
mov
addb
mov
mov
mov
pusha
gs
sbb
mov
je
in
lret
insl
push
clc
cli
in
mov
lret
sub
test
sbb
xchg
arpl
paddusb
sub
sub
outsb
or
push
mov
lret
mov
add
insl
cmpsl
mov
add
loopne
push
pop
nop
jmp
push
loope
dec
idivb
shrl
push
jmp
dec
fs
and
jnp
xor
cmp
mov
push
js
xlat
xchg
mov
xor
or
mov
sbb
inc
insl
push
test
jne
inc
sub
adc
cmpsb
mov
push
test
sub
add
mov
dec
loopne
test
and
mov
sbb
mov
push
pcmpeqb
jg
subl
aam
mov
and
push
pop
cmp
jbe
clc
inc
aam
adc
and
pop
movsl
gs
inc
pop
int3
sbb
or
dec
lods
and
mov
mov
in
repnz
xchg
inc
cld
and
jmp
and
lea
add
xlat
xchg
pop
rolb
inc
mov
xchg
jne
mov
sub
cmp
mov
sbb
add
test
pop
xor
xchg
hlt
rorl
sbb
lret
add
lea
movsl
fwait
mov
mov
adc
outsb
cmp
fnsave
mov
inc
cwtl
push
std
clc
addr16
nop
loope
outsb
dec
bound
pop
sbb
pop
imul
enter
pop
jmp
add
mov
pop
push
mov
js
in
mov
and
addb
in
call
push
sar
cmp
pop
xor
sbb
adc
sbb
xor
and
pop
xchg
pop
cwtl
pop
sub
inc
and
xchg
ljmp
cmpsl
aas
adc
les
mov
cmpsb
sahf
imul
in
addr16
clc
add
push
xor
daa
sub
imul
cltd
test
mov
sti
gs
mov
pop
sub
push
pushf
ret
movsb
add
mov
test
push
icebp
push
add
push
lahf
xchg
inc
ror
int3
jmp
ret
mov
sbb
xchg
add
lahf
add
rorl
insl
cld
mov
sub
adc
stc
pop
pop
xchg
xchg
rclb
loopne
cmpsl
mov
push
mov
bound
cmp
pop
mov
sub
ret
add
sahf
mov
data16
sbb
call
cwtl
es
or
imul
inc
int
stc
dec
or
into
and
mov
pop
mov
xchg
xor
jns
adc
or
push
jg
rcrb
mov
sbb
mov
scas
cmp
xchg
pop
inc
out
mov
rcrb
stos
mov
repnz
lods
dec
add
add
pop
sub
or
pop
xor
outsb
insl
clc
pop
add
ret
pop
sub
iret
mov
shrb
std
dec
incl
add
mov
xor
mov
ret
pop
sub
popa
mov
imul
test
push
xor
fcoms
dec
or
or
xchg
std
data16
sbb
pop
movl
push
add
jmp
add
sbb
adc
sbb
gs
in
inc
js
out
or
test
adc
mov
aaa
inc
jo
arpl
imul
xchg
xorb
cmp
cmp
ja
mov
jmp
or
movsb
loopne
cltd
out
adc
aam
dec
inc
imul
add
pop
call
add
aas
or
adc
movsb
out
lock
jp
inc
mov
sbb
cmp
ja
insl
int
loop
test
add
or
push
mov
cwtl
out
add
mov
addr16
push
sbb
mov
out
inc
pop
xchg
jp
repnz
in
neg
push
dec
test
jg
adc
lock
testl
jo
bound
push
icebp
pop
add
xchg
shll
cmp
mov
pop
shlb
popa
shr
cs
into
lock
xor
inc
adc
inc
or
ret
ljmp
aaa
add
stos
test
in
mov
pusha
or
movsb
pop
push
and
pop
pop
das
add
lea
push
dec
aas
leave
jp
adc
mov
cmp
and
and
push
add
pop
outsb
imul
repnz
insl
or
test
or
pop
pushl
push
inc
inc
loopne
pop
cmp
dec
dec
or
cmp
popa
lock
in
xor
mov
das
dec
sarb
aas
dec
cmpl
mov
add
outsb
or
or
addb
je
cmp
bound
cmp
cwtl
xor
jp
adc
cmp
add
xorb
pushl
mov
hlt
jge
in
sbb
shr
inc
jl
addl
idivl
shl
rcrl
or
mov
mov
cmp
lods
test
push
and
and
inc
sbb
sub
xchg
fimull
jo
lea
jo
xor
sub
and
jne
sbb
jl
sbb
jle
dec
sbb
lea
leave
aam
push
insb
int
aaa
inc
in
xor
mov
mov
les
xor
pop
sbb
push
or
add
add
flds
sar
add
aas
mov
push
shr
add
sbb
pushf
sbb
push
out
mov
aam
test
ds
xchg
dec
je
inc
push
add
dec
lahf
dec
les
jl
jg
aad
in
and
add
fs
pop
jl
mulb
adc
push
repnz
xchg
or
cmp
rolb
and
dec
push
sbb
shr
call
adc
mov
sbb
hlt
inc
xchg
pushf
inc
and
add
movsb
dec
and
sub
scas
mov
in
sbb
into
outsb
loope
fdivs
das
gs
pop
inc
jo
loope
je
push
push
lods
inc
aaa
and
jmp
and
ss
pop
leave
cmpl
dec
cmpsb
pop
adc
sbbb
jae
inc
mov
sub
mov
cmp
jg
push
dec
shlb
xor
mov
dec
lea
mov
fadds
call
cmpsb
jmp
push
ds
and
inc
outsb
fadds
jle
mov
shl
dec
shll
stos
ds
cmpl
pop
mov
cld
iret
push
pop
cmp
movsl
and
frstor
mov
lods
mov
or
cmp
inc
in
popa
mov
dec
xlat
in
mov
pop
cmp
adc
and
cmpsb
es
test
mov
mov
cmp
or
jp
cmpb
dec
inc
lock
dec
jb
int
js
repnz
and
mov
add
loope
push
cmp
dec
cmp
jbe
inc
outsb
sbbb
cmp
in
pop
je
shrb
cmpl
adcb
dec
mov
ss
jmp
imul
ja
popa
xchg
in
or
je
mov
sbb
roll
sub
push
cli
rcrb
add
pop
add
cmpsb
mov
daa
inc
push
dec
sbb
call
add
xor
add
xor
or
shrb
cli
and
test
and
adc
adc
cmp
inc
repnz
je
mov
cld
pop
dec
jne
push
lods
ja
add
fcoms
jmp
xor
pop
add
inc
popf
ds
mov
cmp
push
pop
movsb
sti
adc
and
xor
or
push
sub
mov
aas
mov
aaa
lds
enter
subb
mov
arpl
mov
add
dec
sub
and
lret
scas
daa
std
mov
loopew
pop
add
inc
sbb
adc
in
sub
and
inc
jmp
in
xchg
sbb
addb
adc
mov
push
push
or
stos
cmp
sub
addr16
push
mov
xchg
js
cmp
jl
imul
or
inc
mov
leave
add
mov
xchg
push
shl
mov
jp
cwtl
sub
add
and
sbb
and
popa
lods
jne
add
in
les
arpl
iret
xor
pop
sbb
pop
fmuls
cmp
adc
jle
test
enter
inc
mov
mov
mov
aad
loop
mov
xlat
inc
test
lcall
dec
adc
sbb
adc
push
shrb
leave
test
xchg
push
mov
pusha
add
fdivs
mov
mov
es
or
shl
push
mov
mov
out
adc
pop
fs
pop
test
pop
movsb
pop
lock
jle
dec
in
js
sahf
dec
add
sbbl
cmp
adc
popf
sub
sbb
adc
dec
or
push
push
adc
int3
jg
and
xchg
jg
add
jno
inc
addb
movhps
sbb
pop
push
xor
or
fisubl
adc
xchg
dec
hlt
adc
pop
cld
or
negb
lea
add
mov
jbe
add
push
loope
xchg
fdivrl
fdivs
add
dec
jg
adc
orl
jg
jmp
adc
or
cmp
xor
xorb
and
pop
mov
and
cmp
mov
sahf
jb
sub
jb
or
cmpsl
cmp
loopne
gs
inc
pop
aaa
pop
pushf
and
js
inc
push
jg
jae
pop
sub
pop
scas
or
or
push
pop
and
jns
mov
pop
cmp
scas
and
adc
repnz
cmpsl
adc
int3
add
es
mov
js
add
stos
pop
sti
inc
insb
jne
push
mov
ja
test
adc
sub
xchg
fidivrl
andl
mov
xlat
je
mov
pop
loopne
cli
es
mov
and
cmp
jb
testb
loopne
mov
add
cmp
dec
xor
js
jbe
or
jge
push
jmp
inc
mov
fiadds
sbbl
je
cmp
clc
jns
pop
cmp
sub
pop
adc
daa
clc
push
push
or
test
int3
xor
sub
push
inc
shrb
lret
push
call
and
inc
and
cmp
jg
add
push
sub
and
dec
outsb
sbb
cwtl
hlt
sahf
test
shlb
pop
es
jmp
jle
pop
es
aas
push
inc
pop
pop
cltd
mov
iret
pop
sti
or
push
xchg
xchg
push
mov
mov
mov
mov
inc
sbb
or
int
or
add
fiaddl
fldl
aad
lods
mov
xor
or
in
mov
adc
and
sub
add
add
stc
add
inc
data16
dec
mov
xchg
add
nop
add
add
inc
xchg
mov
push
push
daa
pop
inc
ficomps
out
pop
sub
xorb
adc
sbb
jp
out
mov
adcb
xlat
fidivl
sarb
stos
fdivs
aaa
adc
inc
pop
aas
xchg
out
je
pop
and
fld
fxch
mov
inc
inc
fbstp
insb
pop
rol
mov
rcl
cmp
clc
jbe
fsubrp
pushf
jns
fstps
icebp
popa
insb
insb
loop
ret
rolb
insb
push
jmp
cmp
in
adc
enter
adc
ret
out
inc
lods
mov
sbb
adc
rorl
pop
gs
or
mov
xchg
inc
mov
xchg
mov
or
jg
xor
or
in
daa
and
sarl
pushf
fidivl
fnstenv
inc
pop
adc
jg
leave
and
hlt
rorl
jmp
adc
arpl
in
ljmp
test
mov
cld
xchg
dec
in
inc
mov
inc
add
inc
inc
fsubs
rol
pop
call
jmp
sub
xor
sbb
push
jns
aad
outsb
adc
aaa
jbe
pop
pop
cmpsl
add
cmp
cltd
adc
cmp
daa
in
inc
push
in
lock
and
inc
or
fsubs
pop
imul
and
jmp
or
cwtl
adc
dec
leave
ficomps
add
mov
adc
add
add
nop
push
push
inc
das
add
push
xlat
ret
in
mov
arpl
mov
xor
roll
sbbb
shr
push
push
sub
sbb
pop
sbb
jmp
push
jb
add
inc
lahf
fadds
iret
dec
in
into
loopne
fcom
addl
lock
insb
insb
cmp
ret
movsl
and
test
add
cmpsb
xchg
xor
enter
xchg
or
insl
push
mov
mov
xor
dec
ret
repnz
dec
mov
in
inc
jl
shll
in
inc
adc
xchg
pop
mov
cmp
or
nop
ficoml
xorb
popa
rcll
hlt
sub
or
imul
fistpl
mov
mov
pop
pop
mov
in
out
sbb
dec
mov
mov
call
in
es
mov
xchg
sbb
mov
sbb
mov
jl
push
js
fmull
leave
add
inc
push
jb
pop
enter
mov
rclb
cmpsb
call
fsubrl
rclb
les
arpl
push
or
xor
xor
adc
xchg
in
in
unpcklps
cmc
movl
mov
out
repnz
add
push
jno
pusha
xor
and
fs
dec
jo
js
or
jl
mov
fsubr
adc
fwait
pop
inc
pop
ficomps
rcrl
and
fsubs
inc
pop
adc
sub
fwait
or
pop
mov
ss
adc
jnp
dec
mov
mov
mov
test
pop
roll
xlat
in
sti
gs
mov
arpl
push
fildll
je
sbb
sbb
in
xor
jne
dec
adc
loop
dec
adc
cltd
sub
pop
push
jb
into
adc
xchg
shrl
or
mov
pop
ds
inc
bound
jl
xchg
dec
mov
shlb
cmp
or
cmp
scas
add
add
inc
les
jmp
rorl
xor
ds
add
push
inc
fiadds
push
xor
je
repnz
push
hlt
enter
aam
nop
test
add
aas
inc
imul
loop
cmp
jle
cmp
ret
push
inc
loop
lock
lock
js
insl
sub
movsb
xchg
xchg
sbb
inc
xchg
cmpsl
fsub
sbb
xor
call
in
inc
inc
push
nop
jecxz
stos
and
or
lods
lea
fisttpl
insb
mov
xchg
sbb
sbb
fcoms
in
loopne
jl
lods
sbbb
or
neg
adc
jne
jge
push
aad
test
cltd
or
imul
xor
fs
cmc
test
in
sbb
and
xor
pop
inc
pop
push
adc
inc
adc
mov
test
or
sbb
and
sbb
inc
cmpsb
dec
add
loopne
mov
or
pop
sub
andl
ret
cmp
push
call
sub
pop
push
int3
js
call
cmpsb
ss
addr16
push
lock
push
add
mov
call
pop
mov
adc
jge
mov
inc
dec
pusha
push
cmp
call
sub
add
mov
leave
or
jb
inc
pushf
sub
or
xchg
rol
scas
inc
ja
pushf
inc
pop
dec
sub
sub
xchg
jmp
xlat
roll
jecxz
ljmp
outsl
push
mov
add
out
xor
dec
add
xchg
adc
push
pop
in
pop
ljmp
ljmp
mov
test
push
sub
push
push
inc
test
jmp
cmp
adcb
cmp
lcall
or
push
loope
aad
pop
dec
in
shr
add
dec
popa
push
adc
rcrl
mov
je
dec
mov
add
in
das
in
lea
sahf
in
or
fmull
and
push
faddl
enter
in
lods
in
add
jns
xlat
mov
cmp
sbb
xlat
flds
loopne
nop
decb
xchg
xchg
decb
inc
in
imul
pop
push
in
in
adc
jne
jnp
jne
sub
xchg
jge
sbb
or
or
nop
roll
sbb
jl
movsb
sti
push
leave
pop
aaa
sbb
sti
sbb
xchg
das
adc
test
sbb
out
imul
out
dec
push
popf
loop
outsl
cld
out
lea
or
sbb
fsubl
mov
imul
movnti
loopne
fdivl
imul
dec
push
dec
mov
xchg
inc
jns
repnz
aam
add
cmp
mov
or
sbb
enter
or
and
push
cmp
lods
js
enter
mov
aad
push
xor
jbe
gs
imul
test
xchg
pop
mov
adc
add
xor
or
or
pop
jb
or
roll
xor
adc
mov
inc
dec
imul
dec
sub
in
mov
adc
push
and
adc
cmp
adcb
push
repnz
cmp
xor
sbb
ret
sbb
sub
or
mov
cs
push
in
repnz
sbb
sub
fadds
inc
repz
jne
js
pop
dec
xor
lods
repz
mov
xlat
in
xor
dec
or
adc
adc
iret
xor
ss
addr16
xor
mov
sub
push
and
ljmp
pop
pop
daa
fimull
in
aas
call
cmp
aam
cmp
stc
enter
hlt
jnp
add
mov
dec
movsb
addb
and
cmc
mov
dec
fmuls
das
rcrb
cmp
pop
test
push
push
adc
in
call
psubsb
das
dec
jb
daa
loopne
jno
insb
test
in
adcb
adc
inc
lds
adc
mov
insb
in
test
outsl
leave
mov
add
ja
cmpsl
sub
xlat
jne
mull
adc
mov
loopne,pn
aas
in
dec
lds
fucom
out
das
inc
xchg
cmpsb
add
enter
testl
pop
stos
adc
inc
or
and
cmp
and
xor
pop
fnstcw
push
jo
dec
adc
mov
adc
dec
or
icebp
fsubrs
std
dec
stc
mov
test
pop
jne
cmp
pop
sbb
cs
and
or
mov
fucom
mov
xchg
inc
lock
lods
leave
fdivrs
test
loope
cmp
mov
hlt
cli
add
sti
inc
call
pop
add
icebp
insl
cmpb
enter
or
or
sbbb
or
mov
enter
and
push
mov
test
imul
jo
cld
fwait
cwtl
stc
mov
or
stc
popf
andb
mov
cmp
or
inc
pop
test
bound
and
adc
sub
or
and
fucomi
adc
or
test
push
jl
in
inc
pop
inc
dec
or
ficompl
pop
rorb
pop
mov
fsubl
fildll
cs
push
fs
pop
daa
cmp
mov
shlb
cltd
sub
shlb
push
rolb
pop
inc
iret
mov
jp
xchg
lret
orl
nop
push
xchg
std
add
paddusb
xchg
pusha
xlat
test
xlat
mov
in
enter
jge
pop
xlat
sarb
add
xor
fdivrl
dec
dec
rcrl
aam
fadds
enter
aam
jb
ret
test
sbb
mov
fcom
fdivr
add
aad
jl
adc
inc
sbb
test
lock
inc
stos
xor
push
imul
mov
repz
lea
pop
fidivl
gs
adc
imul
ljmp
inc
cmpsl
mov
add
ljmp
loopne
call
adc
in
jns
scas
and
mov
out
jae
adc
enter
test
int
jb
cmp
test
add
aad
mov
mov
jl
xor
xor
or
test
and
pop
jb
cmp
cmp
sub
aas
pop
fldenv
mov
dec
sbb
and
cs
dec
push
test
sti
enter
roll
add
mov
ret
loope
or
ret
shrb
in
in
arpl
call
or
adc
imul
es
sub
push
inc
lds
add
fcoml
mov
mov
adc
ret
js
sbb
add
pop
lea
sbb
popf
fs
sub
or
cwtl
push
inc
sti
dec
sbb
int3
push
mov
sti
cmc
xchg
dec
int3
ret
adc
pushf
push
pop
and
testl
cmp
push
jp
xorb
stc
cmpsl
ss
push
andl
lcall
mov
inc
dec
ror
jecxz
jo
dec
sarl
or
mov
xchg
movsl
mov
inc
push
popa
mov
in
inc
fdivr
notb
sub
js
es
dec
adc
add
repz
mov
pop
mov
add
xor
mov
sbb
out
es
or
mov
mov
jo
push
lods
lcall
in
and
or
stc
lods
dec
dec
mov
sub
jmp
popa
lock
jmp
es
adc
inc
push
arpl
ljmp
rorb
push
xor
ja
and
xor
add
add
not
ret
lahf
pop
dec
adc
sub
lock
inc
xor
imul
cmc
cltd
dec
pusha
mov
ret
and
movsl
adc
sub
push
mov
and
movsb
and
call
or
pop
in
testl
adc
enter
xchg
insb
pusha
roll
adc
ss
das
push
or
int3
test
insl
cmp
pop
leave
add
lods
pop
dec
or
enter
fadds
nop
mov
bt
or
sbb
inc
jp
lock
sbb
sub
setl
adc
add
arpl
mov
rorb
dec
inc
xchg
xlat
pop
call
insb
aam
gs
cwtl
sbb
adc
fcoml
xchg
lret
nop
adc
inc
lea
ss
adc
xchg
push
push
pop
rclb
or
pop
xchg
xchg
add
gs
push
adc
or
iret
adc
mov
lcall
xchg
jbe
cs
shll
rolb
adc
orb
adc
loope
mov
adc
les
cs
sub
rcrb
sub
jb
adc
divl
in
stos
xorl
or
in
pop
dec
or
cmp
fmul
adc
lock
inc
jmp
adc
jne
popf
inc
xor
mov
mov
in
fstpt
inc
test
gs
in
addb
adc
mov
xor
adc
mov
add
hlt
or
popa
mov
inc
test
fiaddl
test
adc
xchg
test
fisubrl
dec
adc
aas
mov
inc
or
test
adc
xchg
enter
mov
or
pop
xor
and
ficoms
xor
sbb
test
mov
int3
mov
mov
lods
in
imul
mov
sbb
mov
xor
cmpb
imul
push
cmp
dec
rep
jge
cwtl
jo
add
or
popf
dec
push
imul
pushf
mov
push
scas
int
dec
mov
and
imul
xorl
dec
arpl
or
mov
sbb
mov
xchg
cmpb
movsb
add
jl
jl
dec
es
jl
xchg
loop
xor
sub
aaa
flds
push
sbb
pop
das
jns
pop
nop
ss
sub
jo
sbb
add
movsb
and
decb
inc
and
jo
ret
xor
std
xlat
mov
pop
mov
sbb
jge
sbb
mov
mov
push
mov
lods
cmpsb
push
inc
push
nop
push
les
or
xchg
pop
xor
shll
xor
rcr
jmp
add
dec
leave
lcall
sbb
sbb
insb
sub
call
repnz
cmp
je
nop
add
fidivrs
push
mov
mov
cmp
add
pop
xor
pop
js
fs
inc
push
mov
nop
mulb
popl
mov
adc
sbb
test
fs
nop
ret
test
dec
cwtl
pushf
aam
and
cmpsb
inc
lret
rcl
fdivrs
in
add
in
popa
xor
leave
fdivl
sub
popa
shlb
sbb
jne
shlb
mov
push
sbb
pusha
mov
imul
mov
test
fdivs
and
mov
clc
pop
jmp
xchg
sub
inc
xchg
or
inc
and
and
or
and
push
jp
idivl
mov
test
xchg
dec
push
fsubrs
push
outsl
sbb
push
insl
pop
je
fs
push
adc
adc
cltd
push
cltd
fs
sbb
cltd
fs
and
cmpsb
pusha
xchg
dec
sub
xor
pop
cmp
pop
fdivr
xchg
inc
hlt
dec
adc
das
in
mov
loop
cwtl
fwait
or
mov
lea
push
cltd
fsub
aad
sahf
or
ds
xchg
inc
or
pusha
shrb
stos
aam
inc
pop
adc
popl
sbb
and
stos
fwait
movlps
loope
in
pusha
cmpsb
enter
test
in
mov
loope
push
test
rcrb
push
test
push
jecxz
add
inc
pop
leave
sbb
or
inc
and
test
movsb
nop
leave
inc
mov
xor
and
loope
dec
popa
jnp
int3
adc
ret
pop
int3
pop
adc
xchg
rorb
push
les
leave
push
inc
mov
and
les
shll
loopne
lcall
adc
push
inc
fs
jb
push
push
sbb
pop
enter
bound
ret
or
scas
in
aam
aam
sarb
sub
xor
pop
cmp
enter
fdivs
cwtl
mov
inc
add
insb
inc
pop
cmp
aam
push
jo
pop
adc
arpl
sub
xlat
push
and
ja
inc
push
or
mov
add
pushf
mov
roll
pop
xor
push
insb
and
add
push
loope
jo
shrl
aam
mov
sub
xor
nop
test
xor
insb
das
mov
inc
dec
push
and
rorb
inc
inc
in
or
sub
xchg
imul
std
xlat
and
popa
push
rcll
jns
imul
mov
fmuls
mov
cwtl
fldcw
and
xor
sub
add
daa
aam
sbb
in
and
in
movsb
sbb
aaa
and
adc
sbb
mov
insl
dec
notl
leave
add
adc
stc
cmp
xchg
add
test
push
and
or
cmp
in
xor
fwait
adcb
js
mov
jae
sbb
cmp
push
shrb
inc
mov
insl
leave
in
jns
test
or
mov
inc
imul
test
in
push
dec
sbb
sbb
repnz
xchg
sbb
pop
mov
test
jno
xor
test
xor
dec
fcompl
pop
outsl
out
insb
add
add
sub
jg
sahf
pop
add
fdivs
mov
adc
popa
leave
and
popf
loopne
cmp
dec
mov
push
or
arpl
sbb
mov
test
xlat
dec
dec
adc
aam
or
scas
lods
jbe
aam
pop
aam
mov
sbb
fbld
or
out
fildll
pop
into
das
punpckhdq
pop
mov
sub
jg
pop
or
rcr
cmp
mov
das
and
push
enter
dec
sbb
sbb
dec
fwait
adcb
xchg
lock
cltd
mov
flds
in
mov
shrb
test
jmp
das
roll
xchg
mov
dec
aam
test
repz
jge
cmp
pop
sub
mov
fs
movsb
fisttpl
stos
dec
je
leave
and
push
cmp
xchg
pushf
adc
mov
les
nop
icebp
sbbb
pushf
sub
jb
shrb
adc
in
xorb
mov
mov
subb
and
mov
bswap
les
cmp
cmp
cmp
pushf
xchg
mov
int
leave
int
adc
in
leave
pop
aam
rorl
dec
and
cmp
adc
pushf
xor
dec
imul
jo
or
adc
insb
arpl
fisttps
pop
adc
xor
mov
adc
inc
mov
out
mov
shlb
push
mov
cmpsb
stc
insl
cmp
icebp
jecxz
xchg
jbe
or
sub
arpl
and
jns
xchg
push
push
enter
cmp
icebp
loope
dec
inc
xchg
in
mov
sbbb
std
cmp
sub
pop
movsl
adc
inc
test
adcl
shlb
push
stos
shlb
adc
in
call
and
cmp
sbb
stos
or
lock
fs
lods
addr16
test
fs
fs
mov
jo
xor
dec
fimuls
mov
adc
add
add
lea
xor
movsl
lds
jns
pusha
cmp
fldl
push
sub
mov
cmp
jbe
jmp
adcb
arpl
shl
xor
sbb
gs
pop
fwait
add
data16
shrb
stos
mov
lahf
mov
sbb
pop
jle
dec
xor
adc
shr
add
imul
mov
call
inc
add
je
repz
add
sub
ficoml
and
pop
dec
adc
addr16
or
sub
sub
ds
sub
push
adc
loope
ja
aam
aad
loopne
ja
nop
or
call
pop
sub
ljmp
or
les
inc
sbb
popa
push
and
mov
adc
ljmp
xchg
xchg
iret
int3
inc
cmc
xchg
mov
or
inc
test
adc
add
lret
imul
fadds
shrb
mov
rolb
pusha
xor
lods
dec
mov
pushf
adc
xchg
shlb
inc
insl
xlat
pop
xlat
mov
dec
push
ss
stc
int3
das
xor
xchg
mov
xchg
adc
sbbl
cwtl
lods
mov
sbb
pop
popf
cmc
cwtl
sarb
bound
inc
enter
mov
out
sub
rcrl
add
sub
pop
mov
fcoms
jo
leave
out
or
test
in
sub
sbb
xchg
adc
mov
mov
imul
ret
inc
push
sarl
repnz
jno
adc
inc
hlt
repnz
mov
pop
inc
shrl
cwtl
inc
push
movsb
and
xchg
or
mov
movsb
mov
and
pop
lods
or
sub
ds
mov
roll
stos
push
fidivl
jo
sbb
sarl
sbbb
lock
adc
push
addl
pop
xor
cmpsb
or
lock
inc
sbb
insb
inc
daa
or
and
inc
xchg
pop
sub
pop
dec
shr
sub
pop
sub
loop
in
in
hlt
lds
sub
xor
or
in
xchg
test
loope
adc
repz
cmc
or
cltd
adc
mov
push
sub
xor
inc
mov
pop
push
and
clc
repnz
in
repnz
dec
cmp
pop
cltd
cld
insl
cld
icebp
mov
add
repz
xchg
and
test
mov
adc
mov
and
and
rclb
xor
push
xchg
roll
out
inc
loop
and
jbe
fsubr
call
lea
shrl
mov
inc
add
mov
inc
mov
adc
outsl
insb
mov
aas
in
das
fadd
addb
popf
inc
mov
mov
ficomps
dec
fisttps
sbb
out
push
add
pop
int3
ficompl
test
add
sbb
or
add
mov
add
out
add
mov
mov
adc
sti
movsb
adc
scas
add
sub
scas
inc
xchg
mov
fiaddl
add
push
xorb
imul
xorl
cmp
xor
sub
sbb
pop
adc
iret
push
jp
nop
jmp
adc
testl
lods
aam
or
fisubl
inc
aad
call
xchg
inc
xchg
jo
in
push
dec
sbb
fwait
xchg
mov
sbb
adc
sbb
cmp
pop
lods
fisttps
pop
or
bound
ss
aam
stos
loopne
adc
and
arpl
sub
and
repz
cs
and
sub
fiaddl
adc
inc
test
push
repz
lods
or
push
popa
add
ret
inc
ret
push
xchg
mov
sub
movsl
lea
push
mov
adc
lods
cltd
js
icebp
pop
nop
jecxz
push
repnz
inc
repnz
dec
jge
xchg
aas
ret
jb
push
stc
xor
std
xorl
sbb
xor
pop
lods
or
loope
dec
push
xchg
xchg
sub
push
insl
mov
call
andb
rcr
in
sbb
xchg
dec
cli
inc
adc
sbb
adc
pop
jb
push
jb
mov
scas
test
cwtl
jno
movsb
add
sbb
ja
test
jns
or
adc
ret
sbb
dec
xor
ret
inc
add
mov
idivl
pop
test
adcb
jns
sarl
cmp
xchg
cmp
cmp
sahf
leave
mov
lds
out
mov
lcall
sbb
dec
mov
push
or
pop
sub
clc
loopne
add
adc
mov
in
mov
int
mov
bound
and
sbb
fidivl
lea
dec
and
cwtl
mov
mov
fwait
orb
push
ret
inc
add
pop
sar
ret
pop
pusha
int
fsubs
or
adcl
mov
sub
pop
dec
rclb
fwait
fs
dec
mov
jno
dec
lods
mov
pop
jno
mov
jnp
push
daa
xchg
sbb
pop
scas
in
or
ljmp
lds
dec
push
int3
push
lret
pop
ret
push
mov
testb
push
jbe
inc
js
sub
pop
inc
test
cmp
mov
mov
dec
cltd
nop
mov
push
imul
push
xor
repz
pop
and
outsb
or
test
inc
jae
push
scas
mov
jecxz
imul
sbb
sbb
mov
xor
std
add
sbb
data16
sti
and
add
fdivr
adc
add
mov
pop
cmp
xchg
add
adc
repz
stc
enter
push
mov
jg
mov
dec
jmp
jno
mov
or
pushf
mov
in
xchg
add
push
jbe
pop
push
and
xchg
push
popa
dec
mov
sub
mov
sbb
lret
and
in
push
dec
lea
xor
or
xor
loopne
in
ret
mov
add
mov
xchg
loope
ret
je
pop
push
sbb
or
or
pop
fwait
jge
mov
pop
pop
adc
pop
mov
or
jg
push
cmp
test
add
jns
notl
jns
inc
add
repz
out
inc
rorl
iret
repz
jg
mov
in
pop
push
cmp
jnp
and
inc
pop
add
fldcw
mov
data16
jnp
cmpsl
jl
mov
push
sub
and
shr
incl
or
jnp
mov
add
adc
mov
rcll
xchg
adc
mov
or
outsl
cmp
adc
mov
test
add
nop
add
into
pop
adc
test
and
stos
push
movl
iret
jnp
push
pop
ljmp
stc
inc
add
or
call
mov
aas
rdpmc
add
movzbl
fsubrs
xorb
mov
xor
mov
bound
and
insb
outsl
arpl
imul
insl
mov
cli
jb
sub
popa
arpl
jne
jb
xlat
out
jmp
je
add
das
add
push
insl
adc
fbld
inc
outsl
jb
js
je
jb
std
in
fimuls
or
outsl
add
add
add
mov
push
jne
les
mov
and
jb
dec
push
add
dec
mov
add
add
or
jp
dec
data16
cmpb
dec
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
or
adc
push
jno
cmp
push
jo
jo
ss
lahf
outsl
aas
or
add
pop
scas
ret
sbb
xchg
push
mov
sbb
push
pusha
xlat
aaa
cmpsl
or
insl
lret
imul
jb
fs
imul
shll
sub
rdtsc
cmp
inc
xchg
ret
or
clc
das
xchg
sbb
push
lods
sbb
add
pop
pop
sbb
push
stos
pop
insl
sub
lret
je
scas
cmp
push
out
popa
mov
jg
cmp
sbb
fisttpll
movsb
pop
jecxz
push
push
sub
xor
cmp
xor
addr16
flds
xchg
std
cmp
ret
and
enter
orb
cmpsb
jnp
adc
adc
in
adc
adc
push
sbb
jl
push
mov
pop
idivl
push
das
ljmp
out
and
out
repz
cmp
jns
jp
push
cld
iret
mov
push
pusha
dec
pop
lahf
push
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
jl
scas
mov
jns
aas
or
pop
ds
inc
mov
xchg
sbb
ds
push
fcomps
daa
outsl
dec
and
or
pop
inc
das
fcmovnb
push
mov
pop
imul
iret
fcmovnu
ss
imul
out
insl
pop
jo
and
arpl
fcmovb
inc
pop
pop
jp
int
jmp
and
sub
aad
mov
fbld
fcmovnbe
outsb
push
ds
neg
iret
mov
insl
mov
jg
jecxz
mov
cmp
cmp
add
jne
dec
fs
dec
and
jns
add
das
cmpsl
std
ss
jns
push
dec
push
inc
inc
arpl
bound
std
fsubrs
mov
dec
arpl
sti
loopne
sub
inc
jne
jne
xor
insb
xchg
loop
fimull
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
cmp
sahf
outsb
jns
jg
addr16
popa
imul
divl
xor
and
daa
out
fstps
clc
sbb
dec
outsl
outsb
and
cmp
push
jne
xchg
pop
dec
scas
jmp
add
out
dec
or
rcrl
jnp
mov
jae
mov
push
inc
push
popa
insb
jne
test
stc
pop
inc
inc
mov
inc
dec
mov
xchg
and
sub
sub
cs
xor
xor
xor
pushl
aaa
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
adc
push
push
xchg
pop
ljmp
movsb
icebp
pop
pop
pop
pop
aam
popa
bound
gs
imul
xor
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
xchg
and
lock
loopne
mov
add
orb
mov
ljmp
lret
jno
icebp
pusha
inc
mov
outsl
lcall
clc
ret
movsl
add
xorl
pop
test
outsl
imul
call
std
push
mov
gs
xor
popa
js
fnsave
faddl
dec
pop
add
adc
outsl
ja
ret
jnp
test
int3
adc
dec
push
add
adc
add
add
add
add
xor
cmp
push
add
xor
inc
pop
sub
pop
hlt
and
mov
fcoms
add
mov
add
inc
add
or
xor
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
loop
cs
push
outsb
imul
outsb
and
push
or
adc
inc
sbb
jo
daa
iret
leave
ss
add
and
or
nop
xchg
xchg
es
and
push
mov
daa
cmpsl
jnp
mov
lret
cmp
stos
aad
cmc
pop
lods
mov
lods
push
in
add
mov
sub
pop
out
out
or
push
inc
sub
ss
push
fistps
js
dec
dec
inc
dec
inc
adc
mov
push
nop
fs
je
add
jae
dec
bound
jecxz
push
hlt
je
outsb
data16
push
jbe
dec
fistl
out
je
xor
push
xchg
daa
jae
fstps
lea
mov
outsl
js
in
shlb
xchg
cs
and
aam
imulb
jo
jo
and
and
pop
or
mov
jae
dec
imul
in
jns
inc
mov
ds
cmp
imul
daa
pop
cs
mov
movsb
stos
ss
jns
mov
outsb
lock
je
and
arpl
je
push
rcrb
mov
addr16
outsb
mov
push
insl
jle
jbe
mov
jo
or
sbb
mov
pop
jb
and
xor
push
push
push
lahf
inc
ss
insl
and
lods
in
mov
sarb
pusha
xchg
pushw
cs
inc
imul
pusha
gs
xchg
add
pop
or
sbb
mov
bound
pusha
lock
push
sub
outsb
mov
push
jae
pop
pop
in
adc
cmp
cmp
pop
es
call
mov
clc
addr16
subl
gs
add
icebp
or
cmp
xchg
inc
push
push
push
push
dec
cltd
pusha
mov
testl
dec
push
aam
enter
ffreep
lea
push
dec
dec
jge
push
inc
ds
xor
and
jle
jb
push
imul
call
adc
outsl
jae
xor
xor
das
gs
sbb
push
or
inc
jg
divb
mov
addr16
das
je
jp
scas
mov
daa
xchg
dec
jnp
pop
mov
popw
pop
cmp
pop
fstpt
cmp
or
ds
and
jae
je
sub
inc
jl
push
addr16
addr16
fs
mov
add
sub
push
jnp
cmp
or
sbb
das
push
jb
and
and
adc
xchg
ds
aad
mov
jne
stos
addr16
cmp
add
pop
rcr
ss
gs
imul
lock
addr16
dec
sbb
mov
xchg
sahf
inc
pop
sub
jae
inc
jo
sub
xorl
out
sub
incb
repz
out
sub
add
std
test
cmp
lock
cmp
xor
push
shlb
cmp
repz
mov
lods
test
cmp
repz
cwtl
xchg
nop
mov
outsb
test
cmpb
mov
jg
push
les
insb
push
push
sahf
out
pop
push
push
dec
dec
out
sahf
out
inc
cmp
xor
out
sahf
xor
adc
add
sarl
fmul
test
stc
cmp
repz
sti
out
sahf
cmpsl
les
jns
dec
inc
xor
or
cli
cmp
repz
shlb
iret
repz
stc
int3
test
or
out
push
xor
jg
push
add
ret
push
lock
jle
mov
or
mov
dec
cmp
cmp
test
add
addl
scas
or
stos
cmp
push
and
push
mov
insb
add
add
push
and
add
ja
xor
and
add
pop
sub
adc
inc
adc
jnp
inc
adc
push
pop
fbstp
jle
add
pushl
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
test
sbb
sti
cld
mulb
push
movsl
push
loope
or
adc
jmp
push
test
jmp
aam
push
mov
lock
pop
outsb
gs
popa
data16
push
ljmp
iret
sti
cmpsb
pop
jns
push
xor
add
fiaddl
dec
mov
add
push
fdecstp
push
mov
inc
insb
fs
sbb
add
je
xor
jp
or
push
ltr
sub
add
inc
jg
shr
dec
push
push
dec
and
xor
push
dec
aaa
adc
inc
dec
cmovns
cmove
pushf
ret
push
adc
sub
adc
dec
adc
inc
call
rclb
mov
push
imul
jnp
inc
loop
mov
ds
pop
adc
jns
rcrl
lret
sbb
jb
jge
arpl
lds
adc
dec
scas
jp
jno
in
fstl
fisubrs
and
cmp
dec
imul
aas
repnz
iret
lret
add
inc
mov
mov
sub
notb
ss
sbb
pop
jns
lcall
fdivrp
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
loopne
ljmp
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
clc
jmp
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
ss
bound
xchg
sub
pop
mov
jg
mov
jns
mov
dec
test
shrl
or
mov
leave
hlt
mov
sahf
neg
call
lods
dec
lock
xor
pop
mov
pop
or
and
pop
repnz
xor
mov
and
es
inc
pusha
mov
push
int
jb
out
dec
inc
xlat
inc
xorb
dec
out
dec
and
inc
or
lret
or
add
push
into
mov
inc
inc
loopne
mov
mov
das
outsl
jns
mov
dec
xchg
pop
and
jmp
adc
or
sbb
push
jae
add
mov
mov
data16
scas
mov
dec
loopne
js
mov
arpl
addl
jg
or
subb
fs
pcmpeqw
jbe
ss
or
loope
popa
daa
sti
push
call
je
or
lods
fucomip
jae
insb
push
or
and
mov
jl
loopne
lret
xchg
loop
addr16
xor
sub
testb
test
xchg
pop
or
mull
roll
nop
nop
push
outsl
mov
push
push
loope
pop
jae
jae
mov
jle
fs
push
push
lods
cmp
pop
sbb
inc
sub
loopne
mov
or
test
pop
out
inc
mov
pop
out
rcrl
push
sbb
aaa
push
mov
sub
push
hlt
lock
daa
jnp
push
mov
shll
or
ret
jecxz
push
xor
lret
jg
out
scas
adc
push
sbb
pop
jns
mov
xlat
jg,pn
rol
cmp
mov
cmpsl
mull
je
or
mov
mov
icebp
mov
mov
lods
push
pop
je
sub
iret
push
push
pop
je
cmp
or
push
push
add
cmp
ret
aaa
jecxz
scas
push
sbb
inc
xchg
insl
popa
add
adc
outsl
or
ret
test
push
jp
jp
add
imul
bound
xor
lret
insb
jecxz
jg
xor
mov
and
pop
inc
addr16
out
xlat
in
iret
out
pop
addr16
je
out
pop
aas
jo
mov
arpl
daa
pop
arpl
das
iret
lods
mov
push
jae
push
mov
rorb
xor
sbb
adc
sbb
xchg
pop
jmp
js
mov
dec
sbb
cmp
fwait
jae
icebp
mov
add
popl
mov
ss
bound
sub
daa
mov
cmpps
add
repnz
mov
inc
aas
jle
fdivl
adc
push
push
xchg
je
or
aas
pop
jb
push
loop
stc
call
push
arpl
arpl
pop
call
jp
outsb
mov
push
inc
add
push
sub
mov
or
jmp
bound
dec
cmp
fimuls
in
mov
pop
dec
aaa
inc
loope
fdivrs
mov
arpl
shl
jae
sub
push
ret
xchg
push
mov
subb
ret
cmp
inc
xor
arpl
add
dec
ja
int
fisttps
inc
out
iret
daa
imulb
cmp
lahf
push
js
mov
ret
jg
push
jne
cmp
movl
adc
fwait
xorl
sub
mov
out
shrl
xor
add
out
pop
push
lret
pop
fdivs
pop
divb
iret
imul
and
dec
aas
jno
stos
and
lahf
xchg
fadd
dec
mov
mov
lods
xchg
out
rorb
mov
es
test
mov
lock
mov
ja
es
stos
inc
mov
cmpsl
out
inc
push
inc
mov
das
cmp
imul
lret
arpl
dec
pop
dec
insb
lahf
push
out
inc
inc
cmp
ja
sbb
xchg
ja
inc
shll
ss
mov
aaa
mov
dec
sbb
push
bound
xchg
div
loope
ds
je
pop
inc
unpcklps
cmpsl
lsl
inc
aaa
in
dec
les
or
inc
push
insl
rorl
sub
jo
out
nop
push
scas
lahf
inc
imul
mov
jo
outsl
push
aas
inc
jo
xor
inc
fiadds
filds
add
inc
jl
sub
outsb
jmp
pop
nopl
pop
imul
push
and
xor
js
and
addr16
bound
mov
out
push
das
out
out
shl
mov
adc
push
inc
cmp
jns
jae
mov
jl
push
out
mov
mov
mov
imul
popf
xor
out
jns
insl
inc
mov
add
ja
shl
lods
repz
outsb
jo
iret
clc
popw
popa
pop
arpl
jp
daa
shl
ljmp
fwait
add
jl
outsl
lret
jl
loopne
lock
bound
jns
shll
roll
push
sti
sarl
stos
inc
mov
ret
xchg
imul
iret
mov
imul
cwtl
loopne
jl
xchg
jl
mov
xchg
into
xor
ret
adc
out
sbb
jl
lods
clc
js
xor
inc
add
ds
outsl
pop
and
inc
dec
mov
stos
addl
add
adc
push
ficoms
xchg
roll
sbb
mov
push
jl
daa
ds
daa
icebp
mov
jns
jecxz
sbb
das
jae
insl
daa
inc
test
aas
mov
push
inc
add
inc
pop
das
js
aam
stos
pop
mov
xorl
lods
ret
pop
pop
cmpsl
sbb
lcall
jge
aaa
push
xchg
add
mov
or
xchg
mov
or
pop
aaa
pop
pop
fwait
push
pop
popa
inc
aas
lcall
and
loop
sbb
dec
js
push
add
imul
inc
add
dec
push
lret
int
aam
dec
sbb
dec
add
push
sbb
cmovbe
inc
add
xchg
ss
xor
and
rolb
xchg
ss
shll
mov
push
xlat
jle
push
aad
mov
ds
mov
out
cmp
or
and
mov
out
mov
push
test
push
xchg
cs
jge
aam
ds
xor
pop
imul
idivl
test
add
lds
dec
into
lods
pop
xchg
mov
mov
es
sarl
xlat
push
pop
dec
jmp
push
push
pop
mov
or
push
xor
jns
out
dec
pop
outsl
bound
dec
negl
push
push
pop
sti
ficoms
inc
jg
aaa
dec
and
cmp
inc
daa
setp
movsl
fwait
pop
pop
jae
ret
and
xorl
pop
popa
mov
mov
jge
push
mov
arpl
add
adc
sub
adcl
popa
lret
push
out
jae
push
push
and
outsl
les
cwtl
push
gs
insl
pusha
push
popa
jne
or
jge
or
and
dec
bound
xor
scas
popa
sbb
pop
fldcw
jno
sbb
jb
jns
sbb
pop
push
pop
mov
mov
xchg
pushf
mov
repz
out
mov
sbb
pusha
sahf
bound
jne
into
outsb
les
add
pop
pop
out
jno
dec
loope
cmp
ds
mov
cmpsb
push
jo
jb
outsb
jb
out
jge
and
ss
sbb
pop
insb
imul
cmp
and
jae
imul
cmp
fs
adc
xor
push
inc
xorb
loope
and
ss
cmp
pop
inc
cwtl
or
imul
frstor
sub
ja
incb
and
sbb
jo
mov
fcom
test
mov
sub
xchg
push
mov
bound
ret
fsubl
inc
out
dec
push
inc
daa
call
js
or
hlt
dec
aas
mov
sub
mov
test
shlb
adc
pop
or
jnp
cmpsl
imul
or
cmp
add
adc
fiadds
cmpb
push
adc
ja
jae
xchg
pop
and
mov
mov
scas
mov
jbe
inc
ja
push
xchg
iret
push
les
mull
or
negl
sbb
icebp
ja
aas
and
and
fs
push
xchg
push
imul
addb
mov
xorl
or
pop
xchg
mov
aaa
ret
adc
sub
dec
xchg
addb
and
es
inc
das
mov
adc
and
call
mov
mov
dec
jno
rcll
roll
push
push
daa
cmp
movsb
outsb
dec
pop
pop
dec
icebp
push
loope
dec
sti
xchg
mov
inc
xchg
inc
fwait
movsb
add
jp
lds
inc
inc
push
xchg
outsb
popf
addr16
orl
mov
xchg
pop
imul
imul
push
xchg
rorb
push
adc
mov
jg
cmp
push
popa
and
and
cs
gs
shrb
add
arpl
outsb
aad
jp
ret
in
data16
push
jecxz
sbb
push
ret
jnp
pop
bound
inc
nop
or
aas
jae
mov
jb
fs
xchg
testb
stc
push
jle
sbb
cmpsl
cmpsb
push
sbb
pop
hlt
cli
fs
sub
aaa
scas
pop
cmp
loopne
out
outsl
push
loopne
mov
dec
data16
aaa
push
or
dec
mov
inc
dec
mov
jae
push
xchg
dec
pop
call
pop
push
add
adc
imul
pop
lods
sarb
arpl
hlt
jge
pop
sti
jnp
inc
das
aad
add
sahf
jg
push
call
inc
aas
inc
push
fisubrl
mov
push
stos
mov
pop
adc
sti
dec
mov
testl
fs
mov
jb
pop
jns
jno
insl
pop
sub
pop
lods
mov
es
jns
or
sbb
scas
adc
and
imul
push
push
iret
sub
mov
dec
imul
je
inc
mov
and
adc
lret
rorb
jnp
push
cmpsb
sbb
imul
cmc
push
cs
cmpsl
push
cs
xor
cmp
jmp
lods
divb
cld
mov
inc
pop
fisttps
sub
fisttps
out
and
xlat
jbe
or
push
imul
aas
imul
adc
pop
inc
pop
mov
add
add
cmpsl
aaa
inc
jno
frstor
das
mov
aaa
gs
rolb
sbb
mov
adc
mov
xchg
mov
xchg
inc
addr16
push
icebp
nop
inc
dec
jns
mov
imul
arpl
jae
sub
fists
divb
test
subb
popa
mov
xchg
push
daa
shll
mov
pusha
loopne
push
lahf
dec
imul
shrl
mov
push
ficoms
mov
adc
mov
shll
jmp
pop
jmp
inc
imul
xchg
lods
pop
fildll
ss
aad
es
roll
xchg
xor
pop
sbb
and
cmp
xchg
iret
push
mov
mov
aas
push
xchg
and
xor
mov
aas
incl
cld
les
mull
sub
jmp
xchg
jne
arpl
imul
pop
cmp
addr16
pop
sub
push
push
movsb
clc
dec
and
adc
xchg
push
out
mov
fwait
ds
mov
add
pop
inc
imul
dec
jae
arpl
fs
add
add
jbe
push
xor
pop
in
mov
fistl
out
das
xor
inc
xor
cwtl
sub
pop
fs
cmp
lret
push
or
sbb
dec
ret
imul
pop
lea
insl
push
lcall
icebp
mov
xlat
jge
adc
popa
xchg
mov
push
fwait
lret
int3
sbb
mov
or
inc
addr16
push
or
dec
sub
inc
sub
mov
imul
inc
loope
inc
fwait
xlat
movsl
sbb
fisttpl
and
stos
push
lods
or
push
pop
out
xchg
push
loope
sti
or
or
inc
cmp
aas
ja
push
mov
mov
xor
xor
sub
dec
or
and
inc
pop
sarl
stos
xorb
inc
js
sahf
lcall
adc
es
push
mov
mov
pop
minps
add
push
jmp
mov
add
add
ret
push
mov
test
repz
cmpsl
xchg
ja
js
jbe
push
fs
or
notl
and
dec
iret
outsl
iret
mov
pop
addr16
mov
pop
rcrl
mov
xchg
arpl
pop
jne,pt
or
add
jbe
push
pop
fistpll
out
jno
push
fucom
jmp
pop
mov
test
pop
fildl
inc
cwtl
cmp
sarl
inc
add
xchg
repz
sti
in
mov
jg
mov
ds
out
push
ss
aad
pop
mov
cmp
out
xor
jmp
int
mov
or
cmovno
fists
ret
fdivrs
and
sub
mov
ret
add
arpl
fiadds
pop
cmp
arpl
mov
cmp
inc
mov
sub
jo
pop
xlat
ja
push
jae
jae
cmp
mov
push
sbb
sbbl
pop
jo
and
mov
cmp
adc
lods
fdivs
xchg
scas
cwtl
mov
adc
loope
add
ljmp
ret
xor
pop
imul
sub
fsubrl
mov
loopne
lahf
aas
scas
mov
clc
les
mov
xchg
lea
or
add
and
pop
mov
or
mov
das
adc
xor
pop
lods
push
push
xor
and
daa
mov
fwait
push
mov
add
lahf
pop
arpl
inc
lods
add
jnp
iret
and
jnp
jge
shlb
xor
xor
and
fs
data16
lods
mov
movsb
cmp
jo
mov
pop
jle
cmc
push
lods
pop
insl
das
aaa
cmp
dec
loopne
ffreep
jae
mov
add
mov
fsubrl
bound
mov
fisubl
bound
jnp
sub
pop
or
shlb
inc
repz
jb
js
or
pop
popf
mov
in
stos
inc
pushf
dec
pop
and
stos
in
cltd
lods
pop
dec
and
test
xchg
adc
test
scas
xchg
test
xchg
mov
xchg
push
leave
sub
cmpsb
test
sub
and
cmp
cltd
dec
pop
in
movsb
cwtl
push
leave
stos
in
hlt
mov
and
in
lods
mov
scas
add
mov
pusha
or
mov
fs
push
repnz
lahf
jo
pop
and
stos
in
cltd
subb
push
leave
fcomps
jns
fcompl
xor
fwait
push
jb
dec
mov
scas
xchg
test
dec
xor
test
push
leave
push
pop
or
ret
adc
testl
mov
dec
dec
imul
jg
pop
clc
imul
push
sbb
mov
adc
sbb
lret
pop
imul
lods
xlat
shrb
push
xor
cmp
add
inc
mov
insb
pop
dec
iret
dec
andl
xchg
fildll
inc
mov
inc
xor
push
cmpsl
pop
dec
pop
adc
mov
aaa
mov
mov
dec
mov
and
aas
lea
lea
movsl
repz
adc
mov
test
insl
push
imull
cmpsl
inc
sbb
adc
push
sub
inc
mov
mov
or
mov
mov
cmpsl
inc
and
popa
das
bound
outsl
scas
inc
arpl
in
ss
push
scas
addr16
stos
cltd
aas
xchg
pop
test
neg
scas
stos
mov
fimuls
cmpsl
ret
mov
fbld
inc
pop
aaa
and
xchg
inc
mov
xor
jp
mov
mov
js
sbb
insb
xor
ljmp
ret
mov
outsl
shl
inc
iret
aaa
vmovhps
scas
push
insb
andb
das
push
inc
mov
pushf
ret
add
lahf
adc
add
jmp
xchg
gs
add
inc
pop
loope
pop
pushl
mov
jg
aaa
add
imul
mov
inc
fildll
pop
jmp
inc
aas
push
sbb
push
and
mov
mov
mov
rclb
outsl
jbe
inc
mov
insl
push
dec
push
xlat
fwait
ret
push
call
jae
sub
adc
add
inc
pavgb
fcomps
out
and
cmp
sbb
mov
sarl
pop
rcl
sub
sub
outsb
push
xchg
cmp
xchg
push
lret
sbb
jmp
add
adc
inc
sbb
adc
dec
sbb
lret
sti
jne
addr16
je
fs
gs
sbb
xor
insl
je
push
bound
push
outsb
popa
inc
gs
push
jo
push
adc
dec
orl
dec
mov
inc
push
mov
mov
lock
les
sti
ss
add
dec
bound
jae
js
mov
dec
js
xor
data16
insl
add
lret
test
xchg
jo
shll
iret
and
jecxz
xor
sub
fnstsw
pop
xchg
and
add
mov
push
lods
outsl
dec
inc
dec
out
cmpsl
lret
push
mov
cltd
cmpsb
sti
sub
int
jns
mov
out
sahf
imulb
push
inc
pop
and
xor
pop
push
or
mov
push
test
inc
xlat
popa
adc
lahf
jl
mov
bound
jb
test
add
sbb
imul
das
test
push
or
mov
lods
push
mov
push
pop
nop
sub
mov
mov
xlat
pop
sub
shlb
aas
insb
sub
cmp
jns
xor
xor
or
ja
jnp
adc
pusha
repnz
dec
cmovno
das
fistl
or
popa
inc
imul
add
or
push
jns
inc
fiaddl
inc
xchg
ret
inc
ss
pop
mov
push
or
fwait
lcall
test
idivl
adc
jbe
shl
push
mov
push
out
dec
imul
nop
das
xchg
cmovbe
shl
inc
jo
ret
scas
test
outsl
xchg
aaa
jo
lods
stos
rol
mov
mov
stos
xor
andl
xchg
pop
dec
test
pop
insl
lock
xchg
ja
dec
cmpsb
loop
mov
push
bound
push
mov
push
cs
cmp
mov
xor
out
dec
add
es
push
xchg
psubsb
xor
cmp
jb
inc
xchg
cmp
paddsw
inc
pop
ret
fs
dec
stos
push
jbe
loop
je
xor
jecxz
out
pop
jg
shlb
mov
inc
js
pusha
jns
inc
lcall
cmp
arpl
imul
ja
pop
add
dec
or
fiadds
mov
ss
push
sbb
dec
mov
bound
xor
mov
incb
repz
inc
ffree
inc
cs
lret
jb
and
cmp
push
xor
xchg
ds
outsb
sbbl
data16
mov
into
and
jnp
lcall
out
pop
adc
inc
mov
cmp
testb
mov
xor
push
mov
xlat
or
loop
imul
testl
mov
push
es
ss
cmp
pop
push
push
xor
dec
jb
sbb
sti
lock
inc
pop
dec
es
das
add
xor
fbld
data16
inc
pop
push
ret
sti
mov
iret
jns
dec
cs
sahf
ret
push
sbb
push
outsl
push
push
ficoms
sub
push
fidivrs
cs
mov
inc
ja,pn
xor
mov
jp,pt
jp
ds
lods
mov
jp
dec
jg
dec
js
push
jl
xor
das
imul
js
outsl
pop
outsl
dec
xor
js
push
into
xor
and
and
test
and
dec
outsl
dec
mov
popl
js
lock
jnp
xor
jecxz
mov
jbe
push
inc
mov
ret
andl
or
incl
loope
test
adcb
add
fs
lock
mov
mov
add
scas
aad
jg
sub
fildl
ja
mov
push
inc
push
pop
push
push
int
lods
es
cltd
out
mov
and
test
stos
punpcklwd
sbb
xchg
push
fadds
xchg
sub
les
sub
imul
sti
repz
inc
add
sbb
pop
mov
loopne
sbb
inc
stos
scas
pop
rclb
cmpsb
mov
add
out
mov
jo
outsb
dec
daa
inc
fisttpl
xlat
sub
lahf
pop
sub
jno
push
sti
adc
pop
push
jmp
test
dec
pusha
iret
out
or
rolb
cmpsl
push
mov
out
mov
notl
add
push
fwait
ja
rolb
mov
jnp
push
dec
inc
mov
insb
outsl
popa
fs
outsl
in
mov
call
and
adc
pop
pop
mov
jg
sarb
mov
pusha
addr16
xor
iret
push
iret
xlat
lcall
mov
sbb
jle
lods
jo
pop
sbb
js
sub
and
add
or
fs
out
mov
xor
jle
into
sti
jae
sbb
add
pop
xor
out
jae
or
lods
pop
aas
jmp
idivl
sub
iret
imul
and
mov
lods
jns
out
push
cs
mov
lahf
out
add
jbe
inc
xlat
pop
insb
ja
pusha
cli
cmpsb
std
outsb
pop
cmp
jne
jo
arpl
xor
jg
push
inc
je
ja
xor
xor
push
add
aas
inc
adc
xchg
pop
mov
push
inc
jmp
xchg
lcall
lea
outsl
rclb
push
add
lods
pop
add
inc
xchg
pop
mov
xor
fiadds
push
sub
add
rorb
js
lock
aas
push
sbb
fwait
ja
sub
imul
ljmp
sbb
cmpl
push
addr16
or
mov
cmp
mov
arpl
ret
movsb
mov
push
mov
inc
xchg
les
adc
mov
repz
mov
iret
add
sub
xchg
push
push
xchg
mov
push
push
gs
test
adc
orl
jns
add
iret
mov
iret
fbld
dec
lods
daa
mov
repnz
outsb
dec
arpl
jae
push
popa
dec
xorl
mov
push
pop
outsl
pop
adc
jne
dec
cmp
xor
xlat
push
push
andl
imul
or
xchg
add
add
add
int
add
or
adc
fidivs
jns
and
sub
xor
data16
inc
mov
mov
mov
loopne
mov
popa
xchg
add
shrb
fldcw
ret
sub
shrb
xchg
pop
ss
data16
add
and
add
outsb
pop
sbb
lret
insb
ss
int
add
add
inc
jnp
scas
fyl2xp1
das
incl
lahf
add
das
xorl
mov
out
lea
outsb
shll
out
jmp
or
inc
adc
ds
add
dec
shrb
ds
inc
roll
add
jle
add
or
jg
push
pextrw
mov
add
das
dec
cmp
andb
inc
xor
mov
xchg
popw
cmp
outsl
insw
aaa
das
sub
jecxz
imul
iret
mov
orb
push
pop
push
mov
out
sbb
mov
jge
push
mov
mov
dec
mov
cmp
inc
imull
push
add
nop
add
pop
shlb
mov
mov
idiv
in
lcall
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
sti
call
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jg
aas
cmp
mov
sbb
mov
ds
or
xor
pop
sbb
xor
mov
pop
insb
pusha
decl
mov
sbb
mov
cmp
dec
pop
dec
xchg
jecxz
dec
push
in
pusha
dec
mov
add
jg
nop
mov
pop
push
and
lret
adc
push
dec
cmp
add
sub
mov
daa
push
add
leave
xchg
test
inc
mov
xchg
inc
fadd
push
add
and
punpckhbw
in
push
fs
pop
mov
xor
jb
leave
sub
adc
imul
out
cmp
cmp
inc
sahf
dec
dec
sahf
les
dec
xor
dec
xchg
inc
outsl
adc
and
test
mov
lahf
xor
or
jo
xorl
mov
dec
mov
mov
arpl
adc
aad
sbb
cmp
jnp
cmp
xchg
cmp
sub
adc
filds
negl
inc
imul
addr16
stos
inc
cmpsb
clc
js
inc
mov
xor
out
cmp
mov
pop
movsb
inc
dec
imul
les
imul
pop
dec
or
cmp
popa
outsb
imul
dec
add
or
addl
or
push
mov
pop
adc
dec
xchg
inc
sub
xor
test
rcll
pop
dec
push
push
lock
scas
neg
je
and
cmp
lahf
fistpl
xor
or
gs
push
mov
sbb
and
rol
aas
aaa
adc
jne
inc
jmp
dec
sub
test
mov
mov
inc
out
in
mov
out
xchg
add
mov
pop
jb
pop
pop
dec
aam
fmuls
sub
cmp
xor
xlat
pop
stos
mov
stos
sub
xor
outsl
jbe
popa
pop
and
outsl
dec
fwait
test
inc
push
push
inc
outsl
inc
xchg
push
pop
or
dec
inc
arpl
test
push
mov
dec
test
bound
es
mov
test
pop
ds
push
dec
pop
data16
negl
mov
inc
push
cwtl
addb
insb
addr16
idivl
mov
xchg
fisubl
push
aam
cmp
repz
ljmp
in
jns
sub
jb
pop
decl
dec
pop
xor
add
jbe
loope
push
jecxz
push
test
cmp
outsb
inc
xchg
fstpt
repz
push
loop
inc
fiaddl
mov
ds
movntq
and
fidivrl
ja
insb
adcl
mov
in
add
ficoml
jb
jge
hlt
mov
out
mov
mov
mov
mov
cmpsb
nop
mov
outsb
and
ja
negl
jl
jae
dec
push
pusha
xor
cmpsl
stc
push
cs
push
cmp
mov
push
mov
xchg
ds
mov
aas
push
dec
cld
mov
push
jns
ret
testb
push
out
jae
mov
inc
push
fists
dec
jns
pop
lahf
push
mov
stc
dec
repz
inc
mov
fbld
cs
adc
addb
jnp
in
or
pop
adc
lods
push
sub
repz
imull
xor
fistpl
ss
call
pop
adc
push
inc
add
jo
mov
out
es
push
cmp
scas
dec
es
inc
cmp
cmp
sub
outsl
push
jl
repz
faddl
mov
ds
xor
cmpsl
shl
int
loope
xor
hlt
imul
push
pop
and
out
out
sahf
push
rclb
mov
lock
arpl
push
jnp
xlat
cmp
mov
testb
subl
push
sub
cmpsl
stc
mov
fildl
cmp
repz
jb
test
iret
out
or
xor
lds
pop
dec
sbb
scas
sub
mov
test
and
and
rcr
mov
jg
push
push
mov
xor
adc
mov
lds
mov
das
jbe
mov
loopne
mov
sub
int3
push
das
in
sti
and
pop
sbb
enter
adc
push
cmp
iret
pusha
or
mov
pop
adc
add
or
inc
sub
sub
mov
pop
lds
add
mov
lds
and
ja
outsb
outsb
inc
mov
xor
push
js
cmpsb
mov
imul
insl
gs
cmp
dec
xlat
push
dec
xchg
xchg
jp
mov
fwait
push
lods
les
inc
push
imul
or
jne
sub
xchg
aaa
sbb
fiaddl
mov
push
popa
lea
shlb
mov
dec
icebp
sbb
pop
inc
int
xchg
jbe
sub
pop
push
aam
push
adc
fnsave
push
daa
jb
lods
out
cmpsl
push
inc
xchg
nop
mov
adc
dec
jmp
inc
add
xor
fidivrl
pop
sti
mov
pop
sub
push
dec
pop
sbbl
adc
lahf
cmp
push
cmpsl
repnz
inc
mov
and
mov
cmp
push
jo
inc
pop
xor
pop
loop
test
pusha
jno
ret
mov
sbb
stos
mov
stos
in
mov
dec
xchg
cmp
daa
fs
dec
ret
jb
sbb
xchg
fdivrp
xor
test
add
mov
dec
inc
addr16
push
arpl
inc
add
mov
add
cmp
add
ljmp
push
ret
inc
aam
and
outsl
fsubs
dec
std
jno
pcmpgtb
jo
xor
sub
sub
add
outsb
push
jnp
jae
add
dec
and
jmp
pushl
and
movsl
adcb
lcall
pop
xorb
inc
call
shrl
add
scas
push
dec
insl
aam
repz
dec
adc
add
mov
pop
mov
aas
xchg
and
or
sbb
pop
pushl
aaa
mov
mov
scas
das
or
adc
inc
mov
jbe
rcrb
mov
pop
addr16
dec
aad
mov
xchg
inc
and
testb
or
inc
inc
inc
es
mov
and
mov
addr16
pop
ficoml
mov
cmp
jg
mov
inc
sub
push
push
pop
les
push
add
xchg
xorl
mov
mov
imul
clc
add
out
out
fcmovb
xchg
das
testl
scas
iret
popa
mov
rolb
mov
xchg
das
cmpsb
pusha
mov
pop
sbb
insb
sub
das
pop
pop
insb
sbb
or
pop
dec
push
push
mov
and
ret
pop
mov
mov
mov
add
arpl
jb
dec
add
arpl
out
jbe
stos
push
inc
or
xlat
and
fcompl
inc
xchg
add
dec
repnz
jg
hlt
jo
push
push
xor
mov
loope
in
cli
add
xor
pop
mov
jne
cmp
sbb
loopne
jecxz
jae
or
inc
cmp
or
repnz
lods
cmc
lods
ja
pop
push
inc
loopne
lea
inc
popa
mov
jp
aaa
jp
inc
pop
imul
daa
lock
pop
cmovae
pop
lds
lahf
inc
push
clc
push
dec
ljmp
xchg
push
iret
inc
cmpsl
push
xchg
divb
pop
mov
jmp
idivl
pop
arpl
inc
ja
pop
inc
mov
push
pop
jns
mov
inc
pop
ja
rcl
push
xlat
cmpsb
jl
gs
pop
das
adc
dec
dec
movb
or
popa
insl
lea
jo
je
add
addr16
jo
jae
daa
pop
jno
outsl
xor
push
or
mov
jae
insb
inc
inc
aas
pop
sub
mov
jns
je
jne
or
scas
das
or
scas
sub
adc
out
and
dec
jae
mov
push
insl
mov
dec
incl
push
mov
sub
ret
daa
inc
punpckhwd
arpl
dec
outsb
push
nop
andb
xor
add
or
aas
dec
pop
sub
mov
das
imull
xor
pop
and
mov
sbb
aam
sub
insb
lds
jg
sub
adc
cmpl
ljmp
push
les
push
outsb
add
pop
mov
dec
pop
dec
cmovp
mov
sub
test
mov
aam
push
push
jb
push
sahf
adc
mov
mov
mov
pusha
or
fistl
cwtl
out
inc
outsl
outsb
or
aaa
inc
insb
test
sysret
jno
push
jp
inc
outsb
jo
inc
adc
xchg
sub
mov
aaa
jbe
stos
out
push
arpl
add
scas
mulb
inc
push
dec
inc
dec
push
xchg
loop
and
xor
pop
ja
andl
fiadds
jg
ret
cmp
jle
add
and
push
dec
into
add
add
test
jb
inc
fdivrl
adc
inc
mov
or
xchg
rcrb
mov
add
ret
or
add
pop
daa
daa
daa
push
and
pushw
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
ds
add
out
dec
es
js
insb
cwtl
pop
out
shrb
pop
push
and
fisubl
sbbb
les
add
sbb
aas
arpl
pop
gs
pusha
nop
loopne
out
ds
push
mov
lods
pop
push
sbb
jo
ret
add
mov
push
push
inc
add
incb
lea
dec
and
or
jp
pushl
mov
stc
pop
dec
rolb
pop
sbb
mov
lahf
test
push
and
stc
mov
push
pushf
sbb
lahf
shrl
imulb
sub
clc
mov
daa
sbb
loopne
fadd
push
cmpsl
sbb
shlb
ljmp
mov
push
mov
clc
out
cmpb
es
sti
mov
iret
outsl
icebp
mov
xchg
or
cmpsl
adc
cmp
push
daa
call
mov
push
filds
enter
insb
dec
mov
dec
lock
adc
push
loop
scas
inc
jb
rcr
or
push
imul
inc
outsl
arpl
popa
push
test
je
and
and
arpl
mov
dec
or
je
mov
cmp
je
and
je
mov
popa
stos
orl
out
inc
fdivrl
cwtl
and
xor
and
jo
jo
test
dec
inc
push
sbb
xor
and
push
push
pop
jbe
add
outsl
fs
gs
jo
or
mov
mov
push
addl
jne
daa
adc
add
or
addr16
and
push
mov
pop
gs
inc
or
cmpsl
test
negb
popa
pop
pop
inc
popa
imul
xor
sbb
outsl
jo
popa
imul
fstl
dec
sub
jno
xlat
sub
mov
adc
xchg
dec
inc
xadd
pushf
cmp
sti
sbb
inc
cmovo
fcmovnb
adc
cmpb
aas
nop
jo
xchg
pop
pavgb
jp
sub
add
mov
jg
inc
test
lock
popa
add
mov
fmul
sbb
cld
popl
cmp
ret
add
push
aas
aaa
mov
push
addr16
dec
inc
insl
out
int
add
push
push
pusha
push
jl
or
lods
inc
add
mov
test
add
jl
idivb
daa
mov
fsub
xchg
cmp
call
mov
daa
outsl
inc
xchg
lods
test
push
xchg
daa
xchg
inc
iret
jnp
jge
test
push
cld
push
xor
push
imul
dec
int3
scas
fucomip
sub
sbb
pop
pushf
out
fimuls
jb
xchg
mov
mov
dec
fdivrl
xor
jg
orb
lahf
add
fsubr
xchg
pop
push
scas
pusha
push
push
mov
daa
iret
mov
negl
jno
and
out
xchg
lahf
clc
add
stos
sbb
inc
inc
add
call
insl
sbbl
out
sahf
outsl
xchg
push
in
pushf
push
mov
or
fisttpl
lahf
rcrb
out
sub
popa
out
addr16
ficomps
xchg
jo
jl
les
outsl
fiaddl
xchg
fnstsw
add
and
daa
add
xchg
enter
xchg
xchg
inc
add
pop
jl
xchg
push
push
pusha
push
mov
call
iret
insb
insl
ja
les
mov
addb
or
sbb
xchg
inc
add
scas
or
adc
ja
pop
in
mov
pop
push
in
mulb
mull
mov
cld
dec
xor
xchg
daa
mull
push
xchg
das
or
iret
in
add
push
shrb
jnp
sti
pop
pop
xor
daa
jl
or
addr16
jl
cmp
bnd
nop
jl
popa
insl
andl
in
xchg
rcrb
fcoml
and
in
dec
enter
push
and
les
out
mov
addr16
adc
daa
out
dec
enter
push
movsb
xchg
jo
mov
pop
and
aad
scas
add
push
pusha
aaa
jns
not
in
ds
cmp
aam
mov
xor
fwait
test
sub
cmp
insb
lods
mov
dec
aas
ja
pop
bnd
shrb
pop
enter
repnz
enter
int3
faddl
mov
and
or
sbb
sub
lahf
mov
fidivl
in
nop
addr16
pop
insb
jl
mov
nop
out
sahf
jl
mov
mov
int
jns
or
sbb
cs
cltd
test
shl
push
dec
jl
fwait
pop
pop
push
jo
push
mov
jl
push
fisttps
jns
mov
cmpsl
cld
mov
mov
and
pop
mov
in
xor
push
les
mov
hlt
push
dec
enter
pushf
pop
insb
push
dec
push
jg
lahf
out
sahf
js
lods
rorb
add
mov
lock
out
mov
movsb
adc
mov
popf
push
nop
or
cmp
push
test
movsb
stc
lods
sub
cwtl
sub
mov
fcoms
cwtl
cmp
repz
sahf
pushf
test
cmp
mov
inc
sahf
push
push
cmpsb
inc
stos
imul
inc
push
jl
nop
xchg
daa
movsb
sahf
mov
in
mov
dec
add
cs
enter
mov
pop
call
push
lods
sub
ja
movsb
stc
lahf
adc
test
dec
lahf
test
in
inc
aam
hlt
inc
cs
or
jge
and
xor
dec
mov
xorps
jg
enter
cwtl
js
pop
insb
push
pushf
mov
pop
enter
int3
faddl
clc
shlb
fwait
pop
jb
add
shll
xor
inc
mov
cltd
lods
lods
jg
xor
jge
test
in
nop
or
mov
pop
mov
fcomps
iret
test
enter
loop
nop
mov
out
imul
xchg
inc
jg
shrb
ds
repnz
jl
mov
mov
insb
or
sub
pop
rol
shl
mov
xchg
push
cmpsl
rol
and
push
cmp
push
dec
cmpsl
jg
bnd
iret
subb
js
mov
dec
add
out
mov
inc
cs
jl
bnd
loopne
movsb
sbb
sub
sub
loopne
nop
dec
lods
jg
adc
xchg
lahf
dec
jmp
js
ss
cmp
mov
iret
test
inc
lods
push
nop
movsl
adc
pop
imul
inc
nop
push
movsl
adc
push
les
mov
jb
jg
scas
jbe
iret
mov
out
or
loopne
xchg
mov
sbb
push
loopne
hlt
fiaddl
cmpsb
pop
lahf
fsubrs
jbe
iret
inc
lock
xor
and
movsl
scas
cmpsb
call
inc
push
cs
pusha
inc
in
pop
adc
lahf
pusha
inc
in
fwait
nop
iret
test
add
mov
mov
aam
jg
mov
push
lahf
mov
fidivl
lock
lcall
lock
jg
and
test
dec
cltd
fsubrs
push
add
inc
lock
test
sub
das
push
inc
jg
enter
sbb
nop
or
fdivrs
mov
push
dec
test
iret
lods
inc
fstp
rep
jg
fdivrl
mov
and
lahf
faddl
pop
dec
repz
int3
fmull
test
insb
inc
jmp
movsl
jbe
inc
xor
imul
in
sahf
or
nop
or
rclb
jl
out
shrb
dec
and
xor
mov
ja
aam
sbbl
push
bound
xor
pop
rcl
stc
or
lahf
ja
xor
mulb
lods
lahf
xor
test
mov
pusha
xchg
inc
imulb
aas
cwtl
incl
in
mov
mov
jae
out
rorb
pop
enter
out
and
lcall
xor
mov
sub
outsl
repz
enter
fs
push
enter
outsl
or
aas
lods
decl
xchg
xchg
pushf
inc
lock
loopnew
hlt
test
inc
sahf
adc
rcrb
push
xor
popl
es
ljmp
mov
sub
daa
aas
jae
mov
daa
addr16
sub
xchg
negl
mov
bound
enter
push
addr16
pop
add
int
pop
scas
iret
test
and
sub
fs
fsubrs
adc
subb
pop
mov
inc
inc
mov
cmp
outsb
mov
dec
hlt
mov
mov
or
aam
push
pop
xlat
data16
bound
fsub
cltd
fcomps
push
mov
addr16
roll
add
dec
sub
fnstcw
dec
xchg
sub
mov
xor
mov
dec
jns
xchg
add
cs
pop
iret
mov
pop
mov
push
insb
ds
jns
push
or
mov
dec
repz
mov
aam
mov
shlb
xor
mov
push
push
mov
jns
jns
mov
mov
xor
out
les
mov
xor
iret
repz
inc
and
enter
cmc
and
push
adc
mov
insb
movsl
addr16
inc
les
fnstcw
rol
add
cmp
add
imul
mov
or
scas
in
mov
jg
out
mov
xchg
fmuls
sbb
push
jb
inc
mov
roll
ja
insl
mov
ja
xchg
and
add
and
dec
outsl
pop
leave
and
mov
inc
push
pushf
and
in
inc
inc
loopne
xchg
cld
mov
add
inc
insb
adc
and
mov
movsl
jge
lcall
insb
mov
outsl
add
cmp
filds
pushf
in
pop
or
cmp
xchg
pop
mov
add
scas
xorb
outsb
mov
fbstp
jbe
dec
mov
movsb
mov
push
mov
pop
push
les
add
insb
push
ljmp
add
sbb
or
enter
mov
ret
sarb
outsl
add
sub
mov
jo
sub
dec
xchg
out
aaa
cwtl
mov
sahf
out
mov
mov
and
mov
sub
xchg
cmpb
or
ja
mov
sub
adc
jg
daa
push
xor
sub
and
sbb
sub
fildll
filds
daa
push
xor
and
pop
popa
xor
push
jmp
sub
sub
scas
xchg
in
out
ret
sub
add
sahf
cmpsl
pop
cmp
add
xlat
push
mov
adc
dec
sahf
or
dec
ss
es
in
sahf
outsl
movsb
idiv
leave
mov
or
add
pop
call
sarb
jmp
xor
push
sub
cmp
xchg
push
mov
pushf
push
adcb
scas
sbb
xchg
push
xor
adcl
mov
ss
es
dec
lahf
xchg
push
or
sub
mov
and
mov
mov
xchg
daa
fistpll
xchg
mov
mov
fisubrl
adc
pop
and
enter
sbb
dec
mov
cmpsl
push
and
pushf
cmp
push
xlat
scas
loope
mov
xchg
dec
sbb
negb
or
lcall
sbb
dec
loopne
fs
xchg
mov
mov
or
mov
add
inc
shrb
mov
cmp
div
jg
add
pop
pop
mov
scas
rcrb
xchg
xor
aam
aaa
mov
push
sbb
xor
or
mov
cmp
outsl
add
scas
dec
mov
dec
push
pushf
nop
mov
mov
aam
dec
jnp
jo
daa
add
jg
sub
mov
shlb
leave
mov
xchg
inc
jg
addr16
iret
test
je
mov
push
jb
add
les
sub
mov
push
cld
push
rol
lods
aad
mov
aaa
lds
pop
pop
mov
xchg
adc
ss
insb
rorl
aaa
add
testl
push
hlt
cmpsb
or
mov
dec
xchg
add
iret
cltd
mov
out
jl
daa
or
mov
adc
mov
add
push
lcall
push
and
in
ret
cwtl
rcrl
or
test
scas
add
decb
ret
xchg
mov
or
ss
inc
xchg
ret
push
ret
outsl
add
aaa
imul
mov
nop
fwait
mov
rolb
cmpsb
add
add
scas
in
dec
add
shll
les
and
mov
add
mov
add
sub
orb
lcall
adc
inc
or
out
pop
rol
out
aam
or
add
cmpsl
inc
lods
add
daa
aas
xor
andl
push
sbb
mov
mov
add
gs
test
dec
divl
mov
inc
xchg
pusha
loopne
call
xor
lahf
mov
je
mov
mov
incl
mov
xor
lahf
nop
or
pop
enter
sub
push
push
lahf
lods
shrb
ja
enter
mov
adc
pushf
push
in
inc
out
add
xchg
in
dec
test
int3
decl
jo
addr16
lock
push
lcall
adc
sbb
cmp
out
loopne
xor
push
test
iret
repz
jo
jl
out
shl
pop
sub
repz
dec
jl
fldl
pop
sahf
out
sahf
sub
out
out
fidivrs
pusha
mov
mov
adc
mov
ds
arpl
sbb
in
iret
sarl
iret
ljmp
jns
leave
cmc
and
repz
repz
mov
jmp
jns
out
push
iret
repz
pop
imul
sahf
out
sbb
jl
lret
stc
cmp
repnz
icebp
imul
roll
insb
sarl
inc
test
sbb
iret
repz
pusha
subl
jns
outsb
pop
lahf
ret
outsl
lcall
dec
jo
xor
out
mov
cli
ja
popf
xor
cmpsl
stc
jb,pt
lods
or
jns
iret
repz
xor
out
fstl
jne
jp
imul
jbe
mov
in
ja
fnop
js
repz
adc
mov
sbb
sahf
pop
xchg
mov
sahf
out
cmp
mov
out
idivl
dec
jge
push
cmpsl
jecxz
repz
sub
xchg
mov
xor
jg
orb
jl
jns
add
out
ds
subl
leave
sub
filds
sahf
cmpsl
stc
cmp
adc
dec
repz
or
sahf
cmpsl
stc
daa
mov
mov
repz
mov
std
xor
jae
out
mov
ret
out
lea
int
mov
movsb
clc
out
ds
nop
mov
out
cmp
adc
jl
ljmp
jo
mov
xchg
pop
sahf
cmpsl
stc
cmp
or
cmp
sarl
dec
jg
int
jns
loope
push
push
cmpsb
in
imul
pop
cltd
push
test
les
fwait
ss
addr16
aas
pushf
ds
repz
es
cmp
out
jns
pop
lahf
inc
jne
mov
aaa
mov
dec
repz
mov
push
mov
cmp
repz
fdivr
pop
cmpsb
xchg
cmp
repz
and
sahf
cmpsl
stc
and
test
cmp
cmpsb
stc
cmp
out
ja
cmpsl
loop
lods
sarl
bound
fwait
out
ds
mov
outsb
scas
cmpsb
push
sbb
out
xor
out
cmp
out
add
xchg
mov
mov
mov
int
popf
ret
imulb
inc
mov
ss
int3
lret
push
jp
mov
jo
shlb
xchg
outsb
fwait
add
decb
nopl
sub
push
aas
aam
jb
in
mov
aas
loop
inc
xor
dec
pop
add
inc
notl
push
sub
jns
adcl
sbb
push
cmp
mov
and
shrb
xchg
pop
rcll
bound
pop
enter
arpl
fnstsw
mov
jle
ret
jle
dec
mov
sub
jg
jg
jnp
and
cmp
aas
rcll
and
xchg
sub
and
scas
dec
jb
dec
push
pushf
and
mov
mov
rcrb
lahf
mov
add
flds
sbb
loop
test
mov
jns
das
test
cmpsl
nop
adc
cmc
mov
push
adc
sub
push
aas
test
inc
fs
cmp
and
in
scas
mov
fldl
inc
pop
daa
mov
jge
inc
inc
daa
nopl
inc
pop
sarl
lods
and
pop
push
mov
fcoml
into
pop
dec
sub
scas
rorb
sarb
adc
inc
inc
mov
rorb
push
pushf
mov
add
push
lahf
js
sahf
orl
mov
mov
shrb
and
adc
cmp
push
addb
jne
xor
push
ja
cmp
pop
pushf
subps
scas
push
fsubr
xchg
push
push
pop
loopne
add
and
inc
shll
iret
ficomps
xor
or
or
cmp
lahf
push
dec
pop
stos
dec
mov
in
add
iret
cmp
rcr
and
sub
sbb
daa
cmp
push
pop
out
push
dec
lcall
inc
addr16
insb
fbstp
xlat
sahf
fucomi
mov
addr16
dec
cs
mov
fimull
aad
fabs
or
dec
dec
addr16
pop
lahf
mov
mov
daa
daa
arpl
scas
cmp
push
push
push
das
mov
cmp
mov
jp
inc
dec
mov
out
xchg
mov
fcmovu
push
nop
decb
in
and
call
push
inc
adc
scas
out
popf
mov
outsl
add
nop
inc
add
das
daa
jg
test
into
je
mov
shll
xchg
out
das
aaa
lahf
add
push
lock
clc
notl
fmuls
pop
sbb
push
rorl
or
pop
mov
pop
daa
cmp
fucomip
inc
or
dec
insl
push
ret
or
push
outsl
mov
or
dec
shrl
add
aas
lahf
pop
rolb
xchg
adc
dec
push
adc
push
mov
jl
jecxz
imul
push
loopne
pop
ja
sub
aaa
push
pop
inc
push
push
out
sahf
add
pop
pop
add
add
or
repnz
dec
jb
mov
sub
pusha
fisubl
fisubl
push
mov
mov
xchg
mov
in
push
std
mov
add
and
xor
nop
shl
pop
popa
filds
mov
mov
cmp
fisttpl
lods
push
iret
aam
dec
sbb
and
mov
mov
in
fdivr
mov
cltd
in
outsb
or
xchg
leave
leave
enter
inc
dec
mov
decl
xchg
sbb
pushf
jmp
in
jbe
cmpsl
mov
in
stos
add
in
out
xor
out
ficomps
fsubrl
pmaxsw
pop
pop
roll
arpl
xchg
and
arpl
aas
arpl
cmp
in
arpl
add
jmp
imul
push
or
repz
xchg
or
push
mov
push
mov
inc
daa
in
pop
loopne
xchg
fcomi
ud0
adc
or
lahf
cmp
jns
neg
cmovle
xchg
pop
add
in
add
sub
xor
ficoms
push
add
jg
fbstp
dec
ds
cmpsl
inc
fildll
mov
xor
call
ja
outsl
and
iret
repz
push
add
add
cmp
push
pop
pusha
or
repnz
ror
leave
leave
shl
xchg
pushf
stos
es
mov
mov
inc
loopne
nop
inc
repnz
jmp
mov
inc
dec
mov
dec
loopne
inc
clc
loopne
ret
xchg
call
data16
jmp
outsl
inc
pop
fnsave
and
push
iret
data16
out
push
add
mov
xlat
nop
popw
dec
jnp
aas
fwait
popl
cmpsl
pusha
inc
pop
imul
xchg
inc
rolb
sbb
imul
in
addr16
ja
inc
pop
xor
adc
addr16
insl
pop
leave
push
mov
daa
mov
cwtl
lock
xchg
xchg
pop
pusha
mov
adc
loop
and
fidivrs
mov
jecxz
jecxz
imul
and
or
push
hlt
loopne
repnz
and
inc
jbe
push
pop
xchg
fwait
in
pushf
push
jae
in
push
push
lock
mov
jne
jge
popl
push
jg
push
add
cs
pusha
xchg
cmp
filds
enter
pop
jne
inc
in
or
xor
push
in
or
imul
xchg
pop
mov
decb
xchg
in
mov
inc
in
xchg
mov
or
xchg
push
jb
mov
out
add
pusha
jo
insb
mov
ja
push
addr16
push
addr16
or
add
jae
inc
ja
in
inc
repnz
fisttps
out
push
leave
add
addr16
pusha
jp
leave
xor
jo
fucomi
jmp
xchg
mov
push
and
out
movsb
out
dec
leave
mov
call
adc
scas
xor
mov
dec
mov
push
push
dec
cs
cwtl
jg
loopne
push
sbb
push
addr16
repz
add
add
repnz
repz
add
jns
js
imul
enter
in
lahf
xlat
xchg
imul
jne
push
push
adc
xchg
shrl
jmp
push
jmp
pushf
and
pop
cmp
dec
adc
in
jmp
lods
cmp
fcompl
je
stc
cmp
push
pop
push
sub
and
in
fs
ret
add
push
mov
call
push
mov
insl
faddl
dec
and
cmp
jmp
out
pop
and
xor
addr16
int
xchg
cmpsb
mov
leave
jno
fisubl
in
pop
xlat
mov
rclb
outsb
call
xchg
dec
and
and
xchg
push
test
pop
scas
js
in
inc
fstl
or
cmp
or
rclb
adc
imul
in
mov
pop
daa
mov
mov
push
in
mov
xchg
dec
je
jo
aaa
pop
pop
mov
pushf
inc
das
je
push
ja
cmpsb
scas
mov
dec
cmpsb
mov
js
push
daa
inc
add
mov
out
cmpsl
inc
push
dec
cmp
aaa
dec
out
in
inc
enter
pop
out
jo
scas
and
xchg
dec
movsb
xchg
mov
cmp
pop
ljmp
and
sbb
adc
dec
sahf
xlat
pop
and
add
stc
dec
lahf
dec
jno
popa
xchg
iret
enter
imul
inc
daa
xchg
jno
repnz
mov
add
add
push
mov
andb
xchg
push
push
fsubr
ja
xchg
lahf
jo
jno
shlb
jno
jns
xchg
xchg
jno
jno
jb
push
push
in
xchg
sbb
push
and
dec
xor
sub
dec
pop
jb
test
leave
pushf
lock
push
cmpsb
in
lods
dec
add
mov
cmpsl
mov
inc
ds
lock
push
dec
enter
out
imul
fucomp
push
lahf
cli
jb
dec
and
movbe
jae
mov
popa
jae
push
punpckhbw
jbe
ja
iret
jae
cs
repnz
pop
push
add
mov
mov
das
into
je
movlps
mov
adc
arpl
cmp
je
mov
pushf
pop
xor
jne
loop
and
test
adc
scas
jns
addr16
decl
push
aad
repz
clc
adc
xchg
cmp
jne
push
mov
jne
push
das
popa
jne
push
inc
mov
shrb
leave
pop
pop
loope
jbe
pop
in
cld
iret
pop
jbe
hlt
push
in
jbe
jbe
dec
adc
fs
inc
cmpsb
ja
jp
sarb
xlat
das
pushf
jbe
push
xor
hlt
fidivl
mov
wbinvd
ja
cmp
sbb
fucomip
xchg
or
push
add
jmp
cmp
pop
aas
arpl
and
push
push
cmc
nop
cmpsl
repz
test
add
jns
leave
ror
add
mov
cs
hlt
jg
and
or
js
jns
sahf
and
sub
push
cmp
in
in
dec
das
push
or
mov
das
js
or
jae
cmp
mov
cltd
movsb
ds
iret
adc
js
xchg
jl
adc
idiv
push
or
int
xlat
dec
cmp
addr16
addr16
jns
cmpsl
sbb
jns
push
add
mov
sbbl
mov
cmp
cltd
mov
pop
test
or
leave
dec
int3
xlat
loop
pop
daa
or
mov
mov
push
cmpsb
push
mov
ljmp
add
push
inc
push
push
or
jae
jle
add
xchg
je
out
sub
cmpsl
push
clc
mov
push
out
xchg
inc
mov
push
rorb
scas
loopne
mov
jmp
in
stc
stc
stc
outsl
mov
cli
movl
and
jnp
stc
fbld
or
cmp
inc
push
add
jnp
test
fistpl
imul
xchg
outsb
push
mov
or
scas
dec
cli
jg
dec
dec
dec
idiv
pop
jl
jns
repz
add
add
mov
das
jl
aaa
sbb
insl
notb
xlat
imul
imul
sbb
popf
or
mov
mov
loopne
leave
xchg
sti
fldz
fmull
in
xchg
pop
add
and
mov
sbb
jge
ficoml
jge
jge
mov
and
jge
jb
fs
hlt
mov
cld
dec
xorb
dec
fdivrs
adc
dec
dec
cld
or
xchg
xor
iret
jle
sbb
jle
ret
mov
sub
pushl
xchg
fildl
ja
daa
cmp
lock
inc
mov
inc
std
daa
pop
dec
and
iret
fucom
aad
or
in
iret
jo
jg
mov
cmp
jg
push
aaa
pop
sub
sub
cmp
repz
add
cmp
leave
repz
or
iret
repz
jo
js
cmpb
repz
mov
repz
mov
repnz
fwait
unpckhps
mov
es
jg
sbb
mov
jmp
and
aas
loop
cmp
sbb
movsb
insb
push
mov
inc
xor
push
mov
fdivr
jecxz
mov
outsb
pmaxsw
and
jb
rcll
addr16
dec
aad
xchg
pop
pushf
mov
pop
sub
add
cvtps2pd
cmp
das
sub
cmp
fnstsw
dec
addr16
add
jb
add
add
xorl
adc
xchg
mov
mov
xlat
mov
mov
dec
or
jns
jns
fimuls
out
lret
movsb
fnstsw
clts
cmpl
aam
dec
fimuls
dec
incb
decl
arpl
lahf
das
jbe
push
xchg
pop
pop
addr16
dec
les
or
ja
ds
pop
or
push
andb
out
popf
adc
adc
ja
xchg
in
adc
mov
int
adc
lahf
rorl
push
and
scas
xchg
push
add
jmp
iret
mov
dec
pop
pop
push
add
in
cmp
insl
or
dec
sahf
xchg
xchg
add
dec
cs
add
dec
test
mov
mov
loop
clc
fcomip
push
lcall
add
in
xor
loopne
add
scas
add
iret
pop
test
push
jae
in
into
adc
sbb
xchg
xchg
pop
dec
add
das
nop
test
test
out
out
pushf
outsb
iret
out
mov
add
pop
loop
lcall
scas
mov
or
or
xadd
out
xchg
mul
aas
and
adc
push
add
cmp
repz
add
outsl
repz
repz
iret
repz
popf
or
fsubr
cmp
call
test
push
add
dec
xchg
adc
mov
das
inc
imul
filds
xchg
xorl
or
cs
xchg
xchg
fs
pop
ja
jnp
xchg
cmp
mov
pop
lahf
add
fwait
in
out
push
aam
sbb
xchg
fldt
fidivrs
aam
xchg
mov
mov
decl
xchg
orl
mov
push
mov
dec
or
daa
mov
setnp
jmp
dec
addr16
decl
mov
dec
repnz
add
js
mov
mov
daa
out
mov
dec
add
push
push
mov
lock
andb
leave
sub
inc
or
daa
ret
lret
das
psubw
fsubl
mov
iret
sbb
testb
or
mov
add
cmp
mov
pop
mov
lahf
jbe
out
dec
cmpsb
sbb
adc
fnstsw
into
daa
and
sbb
ror
in
mov
out
scas
decl
sub
int3
scas
jl
mov
mov
orb
jbe
ja
loopne
jns
sarb
iret
sbb
push
pushf
mov
mov
jp
jns
pop
pop
add
das
divps
in
aaa
mov
or
mov
or
inc
mov
test
insl
stos
mov
lahf
aas
stos
cmpsl
push
fdivrs
cmp
ja
pop
addr16
ja
mov
leave
xchg
and
mov
mov
leave
leave
inc
dec
push
pop
sub
arpl
xchg
xchg
xchg
or
xchg
add
xchg
addr16
ja
cmp
mov
or
bound
pusha
stc
enter
and
cmpsl
sub
cmp
jbe
mov
pushw
add
in
loopne
xchg
in
xchg
mov
mov
and
xchg
out
movsl
pop
wbinvd
add
mov
cmp
in
in
jne
xchg
pop
and
add
test
xlat
lea
lsl
mov
daa
fisubrl
fsubs
std
syscall
mov
sbb
das
sub
dec
push
dec
adc
xchg
das
mov
push
outsb
mov
or
mov
jns
xchg
add
dec
mov
sldt
cs
out
or
or
je
leave
in
das
femms
cli
sub
xchg
iret
syscall
adc
sbb
push
out
mov
pop
push
add
das
dec
dec
sahf
outsb
pop
arpl
out
in
pop
jae
das
jns
scas
or
in
outsb
mov
xlat
mov
pop
and
in
lock
add
in
stos
inc
push
add
add
pop
in
jle
push
lahf
pop
bswap
repz
bound
pop
insb
or
and
mov
nop
xor
lods
in
mov
pop
jo
pushf
aaa
loopnew
call
repz
cmp
xor
sub
das
xchg
cmp
push
add
pop
push
out
btr
pop
shlb
jbe
dec
testl
pop
or
pop
or
sahf
ja
mov
pop
pcmpgtb
add
dec
push
dec
je
and
adc
xchg
inc
ja
fisubrl
add
pop
aas
out
fnsave
pop
push
aas
push
iret
loop
and
cmpsl
push
cwtl
dec
repnz
adc
cmp
xchg
cmpsl
sub
cmp
fisubrl
push
xchg
push
fists
push
xor
outsl
rcll
fsts
xchg
out
icebp
stc
add
enter
adc
aaa
xor
cmp
xlat
inc
fisubrl
mov
push
xchg
iret
dec
adc
pop
dec
dec
es
xchg
ja
mov
iret
leave
in
mov
cs
pmaddwd
dec
add
sub
daa
mov
xchg
xor
cmp
dec
cs
imul
push
pop
mov
mov
repz
pushf
xchg
fwait
push
mov
or
test
cmp
in
icebp
stc
add
mov
out
xchg
xchg
inc
xchg
pop
leave
mov
outsl
ja
and
add
lcall
out
or
lds
call
add
mov
aaa
insb
ja
xchg
and
xchg
das
scas
scas
sub
es
stos
push
mov
dec
xchg
test
jbe
rcl
lea
test
dec
adc
sarl
outsb
daa
mov
psrlq
xchg
outsb
xor
and
out
or
adc
dec
dec
sbb
sub
cmpsl
push
out
in
jns
dec
push
mov
pushf
pushf
pushf
cmp
mov
addb
call
inc
les
iret
repz
loop
in
add
add
add
rorl
cltd
pop
cltd
and
push
ja
jbe
or
pop
ja
movd
movq
or
aas
mov
mov
daa
aad
loopne
in
sbb
cmp
cli
add
cmp
sbb
les
inc
adc
push
lock
aam
lahf
iret
outsb
push
pop
mov
sbb
dec
jns
sbb
iret
in
movsb
mov
mov
ja
xchg
sbb
add
addr16
sbb
mov
addr16
or
sbb
xchg
push
pop
maxps
incl
mov
out
scas
jae
xchg
lods
mov
outsl
mov
out
cmp
test
repz
jae
aad
fisttpll
mov
or
cmc
paddw
outsl
ljmp
in
setle
pushf
adc
in
xchg
push
pop
pushf
arpl
jb
pushf
mov
xchg
out
push
mov
aaa
sbb
sbbl
outsl
mov
mov
or
sub
xchg
inc
out
mov
imul
sbb
daa
aam
jo
push
xchg
jo
outsl
testl
dec
sahf
ja
cs
bswap
lret
lret
pop
mov
test
xchg
pushf
sub
sbb
orb
xchg
sbb
mov
mov
sahf
das
push
sahf
pop
push
jl
push
cmp
push
push
sahf
pop
sub
stc
xchg
cmp
sahf
leave
leave
in
push
pop
pop
punpcklwd
mov
fidivl
test
shld
ffreep
insl
stos
jecxz
push
dec
outsl
iret
inc
jne
in
xlat
pandn
xchg
out
cmp
inc
mov
clts
push
testl
pushf
or
jecxz
push
loop
pop
cs
add
inc
loopne
pushf
and
stc
in
mov
dec
pop
xchg
pop
int3
pop
hlt
orb
imul
inc
daa
negl
mov
outsl
and
and
cmpsb
xchg
jp
lahf
jmp
not
xchg
adc
ret
lahf
mull
outsb
jbe
loop
aas
add
out
jmp
sbb
and
das
add
dec
sahf
out
add
repz
repz
or
jno
repz
cmp
jl
xchg
iret
popf
push
test
mov
cmp
repz
adc
adc
repz
repz
adc
adc
cmc
push
mov
sbb
out
push
push
sbb
sbb
leave
dec
aaa
prefetcht1
push
leave
leave
leave
leave
adc
leave
leave
leave
adc
femms
insb
push
test
or
add
sbb
sahf
cmp
sbb
push
add
ja
ret
and
in
xchg
and
daa
je
sbb
ja
lcall
stos
push
divl
je
ret
stos
inc
in
daa
xor
outsl
jb
xor
clc
and
and
fldl
cmp
mov
mov
mov
iret
repz
cmp
ss
testl
mov
dec
inc
outsl
addr16
pushf
pop
xchg
popf
fsubs
shr
aam
shrb
rcrb
ficompl
loop
ljmp
pop
pop
add
xchg
testl
or
adc
inc
cmp
bndldx
out
and
adc
andb
push
out
jo
out
mov
mov
mov
xchg
and
out
fsubp
mov
scas
pop
notb
mov
and
xor
daa
pop
push
pop
movsb
rep
xchg
movsb
push
add
test
mov
cmp
or
out
sahf
or
or
pop
fmull
aas
les
clc
jb
jb
add
out
adcb
idiv
out
lods
es
into
dec
inc
ja
movsl
xchg
out
push
inc
push
dec
push
add
es
movsl
push
outsl
or
daa
fcomip
push
add
inc
mov
in
shrl
jbe
in
lods
lfs
mov
lock
les
int3
movsl
call
movsl
ret
or
dec
daa
mov
rcll
or
and
sub
mov
pop
sub
xchg
cmpsb
lods
mov
sub
xchg
xor
pushf
cmp
leave
cmp
dec
push
adc
xchg
xchg
pand
leave
jne
mov
cmp
mov
into
pslld
mov
xchg
add
inc
or
fildl
sub
cmp
outsb
sub
pop
ja
lcall
xchg
fildl
out
cmp
xchg
pop
add
leave
in
and
adc
push
jns
fisubrs
test
inc
inc
in
fmull
xchg
rcr
cltd
pop
daa
or
inc
and
adc
fwait
add
stos
and
pop
lahf
or
lock
nop
sub
daa
mov
add
mov
sbbb
call
test
and
mov
pop
addr16
lock
test
pop
sbbl
xchg
test
clc
sub
cmp
push
lahf
stos
je
mull
push
adc
push
jb
jb
sbb
sub
jb
inc
or
pop
andb
popa
imul
xchg
pusha
ss
pop
pushf
cmp
jbe
sahf
add
or
jbe
fwait
dec
shll
pop
adc
stos
ljmp
dec
outsl
or
sbb
pop
adc
pop
pop
syscall
cs
mov
sub
xchg
out
cmovnp
or
jl
jp
aas
stos
aaa
seto
lahf
stos
sub
xchg
xchg
or
stos
nop
pop
mov
xchg
fcoml
push
lahf
aas
std
mov
mov
or
scas
jo
pop
in
lods
nopl
adc
pusha
je
pop
lret
push
nop
cmp
sbb
out
or
or
pop
mov
jb
jecxz
out
lods
dec
lods
inc
mov
das
xchg
adc
jae
mov
xchg
cmpsl
push
ret
add
pop
shrl
mov
jo
pop
adc
ja
lods
and
fiadds
wrmsr
lods
ja
mov
push
out
jb
shll
mov
lret
rorl
add
fldenv
xchg
lock
into
lock
scas
aas
push
scas
push
scas
jmp
repz
push
push
add
xchg
cs
outsb
repnz
add
daa
daa
daa
mov
pop
add
add
iret
repz
or
out
fwait
adc
dec
and
push
data16
adc
xor
mov
xchg
out
scas
cmp
add
fstpl
movq
in
es
mov
cmp
or
jl
jle
adc
mov
scas
fnstsw
pop
push
xlat
pop
mov
push
scas
pushl
sub
jae
testl
punpckhbw
or
push
repz
testb
jo
movsb
fwait
cmp
nop
adc
mov
fsub
es
jae
call
int3
pop
ljmp
pop
dec
sahf
outsb
repnz
adc
and
and
sub
dec
cmp
es
sub
sub
repz
push
sub
pusha
sub
iret
repz
sub
fcmovne
repz
orb
fnstcw
xor
xor
dec
xchg
inc
pop
mov
iret
movsb
xor
fstpl
sbb
les
test
add
mov
ror
mov
xor
pop
mov
push
add
jl
push
mov
pushl
push
pop
packuswb
jns
add
or
or
jmp
pop
mov
cmpsl
rcrb
pop
lret
in
jbe
aam
das
out
out
setle
sbb
testb
vmwrite
adc
out
sahf
out
inc
adc
sahf
out
sahf
pusha
adc
jns
out
test
sbb
sbb
out
sahf
mov
mov
sahf
out
shll
frstor
out
jns
out
icebp
and
and
repz
or
daa
cmp
repz
sub
sub
cmp
repz
push
pop
fucomi
jbe
aas
addr16
outsl
jg
lahf
jg
repz
fists
and
and
cmp
repz
enter
repz
repz
loopne
call
sbb
pop
mov
mov
out
xor
scas
or
adc
adc
or
jb
mov
cmp
inc
mov
pop
js
stos
insb
outsl
bound
repz
add
iret
repz
das
mov
iret
mov
push
or
iret
repz
or
or
clc
jns
enter
mov
push
movlhps
jns
out
and
sub
sahf
out
sahf
xor
ds
adc
push
push
pop
pop
imul
jae
sbbb
out
sahf
mov
xchg
sbb
sbb
scas
push
mov
xchg
out
iret
fldcw
loope
jmp
outsl
hlt
cld
scas
pop
mov
movzbl
out
sahf
aaa
sbb
sbb
pop
sub
push
xor
push
mov
push
adc
jns
addr16
adc
jo
inc
scas
mov
or
out
sahf
mov
nop
or
jns
or
sahf
out
les
iret
cmp
xlat
loope
das
fadds
icebp
repz
sti
mov
inc
cmp
and
mov
xor
ucomiss
cmp
cmp
add
sahf
out
push
or
mov
xchg
int
scas
or
and
add
stos
dec
repz
in
mov
in
jbe
leave
lret
in
in
pop
hlt
pmulhuw
cld
add
or
iret
leave
leave
in
sbb
and
xor
fcmovne
repz
adc
daa
mov
pop
gs
insl
jne
daa
daa
daa
daa
test
cmp
movsl
sbb
sbb
daa
mov
shrb
scas
hlt
mov
decl
mov
iret
jae
adc
sbb
and
out
jbe
cmp
ss
or
mov
btc
push
data16
dec
jbe
add
daa
iret
adc
jle
xchg
iret
adc
sub
jg
mov
iret
shl
add
testl
in
add
pop
sbb
or
or
or
cmp
pop
push
subps
packuswb
fucomi
jb
jge
mov
xchg
jns
xchg
out
sahf
test
out
mov
xchg
out
jns
jmp
idivb
ds
mov
and
out
and
pushf
pushf
fmull
dec
pop
outsl
sahf
pushf
pushf
pushf
jp
nop
fwait
mov
pop
sub
inc
pop
ds
mov
xchg
rorb
mov
mov
push
pop
fwait
lock
sbb
and
push
sub
or
leave
leave
leave
leave
dec
push
pop
fs
adc
test
xchg
out
mov
aaa
nopl
movsb
sbb
sbb
sbb
or
aas
fbld
ja
psubw
mov
in
sbb
sub
aas
xor
dec
mov
aas
je
aad
outsb
scas
jg
mov
jb
repnz
xchg
mov
pushf
pop
bswap
aad
push
or
jns
out
or
prefetch
or
adc
pop
pop
mov
xor
mov
adc
cmp
mov
push
mov
jns
cmp
jbe
push
sbb
mov
push
sbb
jns
in
mov
jge
pop
fucomi
in
jbe
jg
lahf
test
sahf
jnp
mov
fistps
push
sub
out
mov
out
sahf
out
loopne
jmp
sahf
ja
sahf
divb
scas
add
xor
out
mov
xor
push
xor
jnp
ss
aas
loopne
cmp
cmpsl
stc
cmp
cmp
cmp
sarb
fucomi
enter
sarb
sahf
out
cmp
inc
push
outsb
mov
out
pop
insb
das
ja
xorb
lea
mov
add
xchg
dec
dec
mov
inc
inc
enter
cmp
sarb
jg
shr
jns
in
test
push
sbb
cmp
cmp
cmp
dec
pop
push
or
sahf
out
adc
adc
leave
leave
repz
adc
jns
ficompl
in
psubq
out
sbb
ret
push
and
pabsd
inc
dec
movaps
xchg
xchg
pop
outsl
ret
rorb
sbb
push
stc
leave
pushl
mov
inc
mov
icebp
in
cmc
ret
pop
daa
iret
repz
add
rep
cvttps2pi
or
daa
iret
jae
push
inc
dec
or
arpl
out
dec
push
outsb
vmwrite
fisttpll
out
adc
jns
out
adc
adc
jns
pop
push
enter
fidivrs
in
sbb
hlt
cs
cmp
in
sbb
pop
and
cmp
and
and
and
rorl
bound
sub
fcmovne
repz
sub
repnz
pextrw
push
repnz
xor
movsb
mov
jg
repz
push
add
and
sub
jle
pop
push
test
lds
lds
or
inc
jbe
in
fs
mov
je
fucomi
int3
iret
xlat
out
loop
pop
mov
iret
repz
or
add
jg
out
outsl
push
push
or
sbb
or
xor
pop
jns
imull
inc
push
adc
push
adc
sahf
out
push
out
sahf
out
pop
lcall
sbb
sahf
out
aad
loopne
popf
cmp
testb
push
pop
fstl
iret
sbb
aas
and
movl
add
jne
clc
inc
and
add
sub
sbbb
inc
popf
mov
pop
push
out
sahf
ja
push
add
dec
sahf
add
jns
jns
das
rol
faddp
jmp
xor
jns
test
enter
iret
fwait
cmp
adc
and
push
adc
daa
iret
repz
inc
adc
pop
fucomi
in
push
push
push
daa
iret
repz
sbb
outsl
movzwl
das
pop
dec
in
fstpl
push
add
rcll
leave
das
leave
pop
pop
dec
sbb
and
sub
das
pop
sahf
ja
je
or
inc
or
iret
repz
push
push
or
ja
popf
outsb
aas
jns
sbbl
repz
xchg
push
adc
adc
popf
lods
aas
mov
mov
jns
sbb
fimull
sbb
cmp
repz
ljmp
std
leave
pop
and
mov
lret
cmp
inc
bswap
repz
push
lret
dec
add
repz
pop
orb
jns
or
aaa
jns
femms
ret
cmp
repz
fcoms
jecxz
daa
iret
jae
adc
add
das
sysexit
cmp
jns
adc
push
cmp
repz
sbb
iret
repz
sbb
xchg
out
pop
pop
imul
inc
aas
dec
and
cmp
and
add
ror
sub
dec
add
cmc
dec
dec
push
aas
sub
aaa
add
sbbl
bswap
and
sbb
int3
pop
int3
daa
int3
inc
sub
jb
fbld
add
je
mov
mov
mov
fcmovne
rorl
add
or
jns
or
syscall
adc
add
insl
jbe
int
push
int
sbb
cmp
xchg
out
sahf
inc
adc
pop
sahf
out
sahf
addr16
sahf
xchg
out
aad
loopne
sbb
cmp
testb
dec
or
sbb
in
into
and
inc
and
push
and
repz
mov
mov
daa
lret
iret
in
movsb
es
das
sub
sub
jmp
into
iret
add
out
pushf
mov
xor
pop
leave
repz
sahf
xor
sub
push
sahf
fildl
gs
sahf
jge
jns
in
in
xchg
setle
cmp
cmp
xchg
mov
cwtl
into
iret
sub
pop
ud1
iret
mov
das
fmull
push
out
fisubrs
hlt
das
decl
or
xchg
out
and
sub
js
mov
das
inc
cmovle
inc
sbb
and
dec
sarb
jbe
ja
push
pop
test
fcmovne
repz
repnz
daa
jecxz
push
stc
dec
fidivs
jnp
rorl
mov
sbb
and
pop
and
jns
jg
mov
xchg
daa
iret
repz
mov
addr16
rcrb
rcrb
and
fmulp
repz
inc
push
xor
xchg
out
pop
xor
mov
ss
fucomi
in
ror
fmuls
jecxz
mov
xchg
out
stc
add
jb
dec
fwait
mov
pop
add
mov
dec
mov
add
xchg
mov
push
add
dec
test
rcrl
rorb
outsb
jb
add
push
loop
and
mov
in
das
setg
cmp
pop
adc
sbb
or
mov
push
xlat
in
into
sbb
fadds
pop
je
or
sub
jg
int
add
add
notb
add
inc
cmp
adc
xor
dec
push
test
bound
loopne
add
dec
dec
xchg
nop
add
add
aas
inc
push
dec
sbb
mov
pop
mov
pusha
mov
scas
pop
cmp
dec
aaa
test
dec
shlb
sahf
cmpsl
fldt
xlat
sbb
or
leave
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
aaa
sbb
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
jns
xchg
addl
fisttpl
mov
mov
into
aas
xlat
sbb
lcall
dec
add
mov
sbb
fwait
adc
add
inc
mov
ret
mov
mov
and
adc
jb
add
jbe
shlb
and
jb,pt
movsl
sbbl
test
pop
shll
cmovo
pop
inc
mov
or
mov
sbb
in
call
adc
push
ficompl
push
pop
fisubrl
xor
mov
rcr
fsubp
stc
jb
jle
mov
sub
inc
sahf
out
lds
je
insb
push
fs
push
dec
inc
out
sahf
out
sub
sbb
sahf
out
sahf
adc
or
add
cmp
sarl
clc
hlt
lock
int3
repz
les
mov
iret
mov
mov
iret
repz
je
push
or
mov
mov
cmp
repnz
xor
and
push
cld
repnz
repz
fadd
mov
repz
repz
nop
mov
iret
jo
pop
pusha
pop
push
dec
jns
out
inc
xor
add
jns
cmp
fmul
mov
movsb
nop
mov
pop
fistpll
jl
push
push
inc
icebp
jg
pop
add
icebp
adc
je
xor
push
xor
push
jo
rcrb
insl
test
add
notb
jp
mov
add
add
rorl
testb
sarb
or
and
push
les
xor
push
xorb
inc
in
fyl2x
call
push
mov
dec
jecxz
add
push
jnp
stos
subb
cmpsb
in
push
add
push
adc
add
sub
jg
add
push
inc
rolb
sbb
mov
add
mov
out
es
pop
push
testl
das
outsl
test
pusha
data16
iret
push
pop
pop
test
cs
ss
mov
mov
pop
in
push
dec
mov
pop
out
andl
out
xchg
popf
enter
pop
or
adc
xor
jnp
sbb
push
sbb
div
cmp
mov
push
inc
and
push
sbb
lock
jns
repz
paddq
xor
mov
pop
adc
mov
jns
out
mov
int3
or
repz
les
mov
out
adc
adc
or
push
popl
jns
out
push
and
and
and
jns
out
and
jb
add
clc
or
out
pop
imul
daa
xor
testb
xchg
scas
shrl
inc
cmp
xorl
jns
xlat
pop
cmp
pop
js
mov
fidivrs
aam
adc
xor
dec
insl
add
repz
cmp
xchg
mov
sahf
shl
bnd
das
push
dec
bound
pop
shrl
nop
sub
enter
inc
dec
cli
or
or
ret
mov
in
and
adc
lret
and
sbb
into
sbb
rorl
incl
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
incl
inc
mov
repnz
test
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
pushl
pop
cmpsb
pusha
rclb
popa
sar
mov
cli
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
sbb
int
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
call
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
incl
in
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
inc
pop
aas
xchg
les
jne
int
mov
addr16
in
lods
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jmp
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
pop
cli
decl
xchg
mov
fmull
call
jmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
dec
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
lcall
push
xchg
jge
pop
ficomps
frstor
xor
sub
jmp
and
inc
inc
pop
insb
insl
jno
add
inc
je
add
inc
inc
push
dec
inc
pop
push
out
push
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
fldt
pop
fisubrl
mov
call
push
inc
dec
inc
jo
inc
popa
shrl
push
outsb
jbe
imul
andl
or
fdivrs
dec
insb
imul
dec
push
push
or
or
cmp
lret
inc
jbe
je
adc
movzbl
inc
dec
push
cwtl
cmp
jo
jb
push
or
inc
test
out
dec
inc
gs
gs
inc
add
and
inc
push
dec
arpl
mov
arpl
mov
filds
sub
bound
outsl
push
dec
pop
in
adc
pusha
mov
pop
push
xchg
out
cmpb
adc
mov
sbb
les
pusha
and
ds
bound
push
push
fs
inc
inc
add
aas
dec
les
dec
dec
inc
dec
daa
mov
jae
imul
xor
inc
cmp
inc
inc
jns
dec
push
xchg
lahf
push
push
les
sbb
cmp
data16
je
dec
mov
pusha
push
mov
mov
sbb
out
pop
push
lock
dec
dec
in
pusha
imul
bound
jbe
dec
test
sub
or
dec
jmp
sub
insb
inc
cmpsb
dec
iret
rcrb
popa
jne
arpl
add
sbb
dec
dec
pop
add
mov
xlat
push
xchg
movsl
pusha
push
xor
pop
mov
inc
inc
and
add
jo
inc
xchg
push
jmp
push
js
cli
dec
sub
mov
nop
add
push
push
add
add
push
xor
push
push
imul
mov
jo
outsl
push
jb
addr16
push
insb
mov
mov
das
push
xlat
lods
inc
addb
jne
push
or
adc
gs
push
ret
lcall
push
mov
push
inc
arpl
push
test
push
cmpsl
cwtl
aaa
and
out
mov
inc
push
jg
xchg
insb
mov
mov
push
add
or
sub
inc
xor
xor
ja
xor
insl
ja
ret
xor
inc
ja
pop
test
arpl
and
ljmp
mov
loopne
and
ja
lcall
mov
cmpsl
push
dec
pop
mov
dec
mov
inc
adc
lahf
sub
dec
inc
pop
adc
aam
sub
test
rcrb
sbb
dec
iret
aas
jae
adc
call
insb
push
test
inc
push
cmp
je
mov
pop
stos
test
push
dec
dec
mov
js
test
mov
xor
sbb
push
sbb
imul
dec
push
pop
push
jne
les
or
pop
adc
fadds
mov
mov
addr16
aam
pop
xor
inc
iret
sub
insl
push
pop
les
repz
xor
addr16
mov
xlat
out
iret
imul
mov
movsb
cmp
repz
jo
xor
jns
out
or
fdivrs
insb
push
clc
mov
bound
adc
mov
add
jae
cmp
mov
jo
cmp
enter
decl
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
lcall
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
decl
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
jmp
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
sar
ljmp
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
sbb
sahf
mov
add
scas
or
pushl
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
mov
xchg
sbb
push
sub
insb
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
sub
cld
sti
pop
popa
mov
into
pop
cmp
loop
mov
dec
xlat
fistl
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ljmp
xchg
ja
int3
add
mov
das
es
lds
or
sub
pushl
ret
shlb
sbb
ret
es
pushf
mov
decl
ljmp
test
ss
jmp
addr16
jb
push
mov
dec
mov
loop
ljmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
pushl
ficompl
int
mov
mul
ja
outsl
ja
mov
out
cli
inc
pushl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jmp
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
test
sub
popl
idivb
mov
mov
test
push
mov
inc
jne
pop
jp
sar
push
imul
insb
imul
add
lcall
jbe
push
jns
arpl
arpl
ja
rorb
push
inc
insl
jns
insb
das
adcb
jne
outsl
insl
insb
mov
dec
inc
xchg
fcmovnbe
cwtl
inc
inc
jle
add
mov
push
xchg
push
push
cmp
jne
cmovns
clc
inc
insl
test
mov
or
test
inc
inc
js
pop
ret
sbb
dec
orl
fistpll
xor
pop
inc
cmp
pop
bound
fs
pushl
aaa
aaa
cmp
popa
arpl
cmp
arpl
or
xor
adc
gs
xor
fmuls
jnp
push
inc
jbe
pop
sbb
mov
mov
push
dec
inc
sbb
out
sahf
add
rclb
adc
int3
and
dec
xchg
sub
fbld
jbe
fs
fstps
mov
jbe
arpl
or
inc
sub
mov
dec
jle
inc
mov
push
sub
xchg
sbb
js
sbb
aaa
add
test
mov
push
xchg
insb
popa
jns
or
mov
popa
xchg
mov
aaa
je
adc
stos
aaa
aas
inc
push
jge
pusha
inc
lret
mov
rorl
dec
aad
xchg
push
inc
mov
dec
push
xchg
mov
inc
mov
sbb
inc
pop
sub
sbb
es
inc
inc
inc
mov
testw
ds
and
mov
mov
dec
dec
or
xchg
push
or
push
fistpll
sbb
ja
mov
insl
jne
fisubrl
mov
mov
pop
aad
xor
xor
or
aad
arpl
add
addr16
add
into
pop
jo
inc
mov
rorl
jg
adc
mov
dec
mov
popa
stc
add
push
rorb
outsl
xor
dec
xchg
push
lcall
test
jmp
pop
addr16
mov
sbb
ss
xchg
daa
mov
add
or
add
dec
popa
jo
inc
roll
push
aas
push
outsl
outsl
test
mov
push
push
jno
test
inc
xchg
mov
in
sbb
sbb
in
nop
pop
jno
cwtl
test
xor
add
xchg
lock
cmp
out
sarl
jo
push
add
push
outsl
insb
jns
push
push
mov
push
mov
and
addr16
add
dec
roll
aas
inc
mov
inc
push
bound
xchg
jo
arpl
or
mul
inc
cwtl
mov
xor
mov
stos
add
and
rolb
add
sub
divl
ret
pop
cld
mov
pushf
dec
scas
addr16
hlt
push
testb
push
in
mov
movsb
adc
stos
outsl
cmc
mov
inc
sub
pop
add
ljmp
test
aaa
push
mov
cs
push
outsb
mov
jb
js
popl
push
daa
aas
pop
push
xchg
or
adc
push
addl
add
add
pop
adc
fdivr
inc
jo
clc
loopne
adc
adc
inc
mov
fldt
sahf
mov
add
or
pop
pop
push
loope
sti
decl
or
or
or
or
or
adc
adc
push
adc
fidivrl
or
pop
sbb
adc
adc
adc
outsb
mov
add
or
adc
pop
adc
std
or
sub
rolb
or
xchg
add
add
adc
pop
add
outsb
add
and
rclb
adc
inc
jb
imul
lcall
ds
xor
adc
pop
and
xor
inc
rclb
in
pushl
lock
bound
js
push
or
xor
rclb
dec
add
or
rol
cmpsl
and
test
rcll
inc
sub
lds
test
fwait
add
add
pushf
into
cmp
add
add
sub
cmp
adc
aaa
incl
push
pop
popa
jno
and
adc
mov
inc
repz
adc
loope
icebp
adc
sbb
mov
mov
xor
add
rcll
add
js
adc
pop
and
or
pushl
cld
pop
add
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
inc
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
add
jmp
clc
cmpl
jg
or
insb
sub
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
pushl
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
mov
rolb
js
pop
mov
popl
movb
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
ljmp
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
es
jp
push
out
or
cld
push
pushl
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
call
mov
jmp
sbb
add
xchg
lods
mov
out
pop
jb
mov
or
push
mov
lcall
int
inc
fwait
sbbb
mov
dec
jp
push
gs
idivb
jg
hlt
push
add
stc
loope
mov
sar
andl
fstp
adc
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
lcall
icebp
paddb
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
cmpl
fbld
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
hlt
es
or
icebp
aas
std
cli
push
push
jg
je
idivl
cmp
sub
inc
scas
inc
mov
jg
cs
pushl
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
mov
lcall
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
push
xor
jmp
lcall
pop
hlt
lret
movsb
add
filds
lea
jg
gs
std
xorb
jg
das
sar
aad
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
lcall
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
idiv
call
or
adc
and
sbb
xchg
jo
and
out
test
pushl
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
call
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
pop
cld
pushl
xchg
or
mov
stos
dec
lods
xor
jg,pn
jg
loopne
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
call
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
idiv
jmp
shrl
icebp
ja
xor
cmp
xchg
mov
cwtl
pop
add
lcall
ftst
jbe
xchg
and
pushl
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
lock
cmp
fmull
enter
jecxz
scas
incl
in
pop
mov
sub
mov
dec
incb
fisubrl
loopne
sti
lds
mov
or
cld
inc
or
bound
repnz
jg
mov
aad
jbe
test
mov
mov
iret
push
out
jbe
push
sbb
stos
icebp
pop
incb
jno
outsl
sti
ljmp
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
mov
sar
xorl
push
fisubrl
imul
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
fistpll
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
decl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
dec
xor
lock
inc
cmpsl
enter
mov
fwait
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
add
insb
test
aas
repz
or
mov
mov
in
jmp
out
sbb
aaa
clc
push
std
call
jl
icebp
fs
mov
out
jne
or
cmc
mov
push
mov
fimuls
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
outsb
cli
fucomi
pop
or
or
dec
ss
fidivrs
leave
inc
lods
movsb
or
repnz
mov
aad
pop
and
imul
cmpsl
lret
pop
in
cmp
jmp
lock
adc
jmp
hlt
dec
mov
jg
mov
aas
mov
jg
mov
incl
fmull
addr16
sbb
cld
daa
jp
std
adc
mov
fildl
or
mov
ret
nop
cmp
das
incb
add
lock
pop
pop
div
cld
idivl
fs
xlat
and
loope
jae
jmp
shrl
je
jge
idivb
mov
add
out
icebp
pop
and
mov
loope
mov
cmpsl
popf
sti
mov
test
ja
push
xchg
outsl
das
jge
outsl
ss
call
cmc
pop
mov
dec
push
adc
mov
and
ret
or
out
cltd
cmp
add
incl
cmp
inc
add
fs
cmpsb
loop
pop
aaa
std
fisttps
jnp
cmp
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
into
icebp
mov
jg
mov
fidivrl
mov
pop
clc
loope
loope
mov
lahf
xor
add
xlat
rcll
je
xchg
fldenv
iret
fdivrl
and
lcall
decb
jo
pop
gs
adc
jg
pop
out
jg
jno
ret
cmpsb
stos
movsb
and
arpl
mov
out
inc
push
dec
jge
pop
clc
xchg
cmpsb
cld
ljmp
ds
inc
mov
in
sbb
xchg
imul
pop
inc
xchg
outsl
jmp
std
mov
inc
add
faddl
mov
or
lcall
imul
pop
stc
push
dec
out
fstpt
mov
add
popf
pop
stos
adcb
fsts
dec
adc
and
add
movsl
data16
push
sti
push
sti
pop
inc
add
aaa
enter
push
nop
mov
jmp
and
add
dec
jae
test
daa
dec
pop
nop
jmp
mov
add
push
in
jb
jl
push
xor
or
push
jp
and
mov
cli
in
mov
adc
dec
push
push
inc
stc
dec
cli
push
mulb
in
cmp
cmp
in
arpl
stos
pushw
jmp
scas
mov
icebp
cmp
adc
and
inc
hlt
icebp
jo
jg
pop
sbb
filds
jle
testb
add
sbb
neg
repz
repz
mov
stos
cltd
orb
or
inc
outsb
cmp
push
pop
ljmp
decl
sbb
mov
or
sti
in
filds
jmp
stc
xor
imul
push
adc
test
xlat
sbb
adc
cwtl
iret
adc
cli
test
push
outsl
aaa
repz
cmp
and
adc
inc
dec
and
sub
lahf
add
pop
pop
fstps
hlt
push
sbb
imul
cld
push
aam
call
sbb
sbb
xor
adc
sub
or
push
xchg
xor
daa
fs
jg
push
xchg
pop
mov
js
push
pop
rorl
lret
fwait
out
adc
push
shrl
jae
popa
ljmp
xchg
arpl
mov
incl
sub
test
inc
mov
xchg
fwait
push
jns
js
mov
pushl
mov
cmpsl
lea
add
jp
fsubs
inc
pop
fcomps
add
lcall
mov
dec
or
sub
xchg
cmp
and
imul
cltd
les
iret
pushf
xchg
mov
dec
or
shlb
mov
inc
or
jo
push
aaa
aas
push
rorb
call
pusha
popa
sub
mov
cltd
popf
lock
sbb
mov
hlt
sbb
divb
cmp
fcmovnbe
sbb
incl
push
or
cmpsb
mov
dec
in
push
call
pop
sub
hlt
sti
push
or
mov
lcall
mov
xchg
mov
ret
in
div
pop
and
sub
mov
loopne
xchg
lcall
call
xchg
and
adc
call
mov
cld
pushl
pop
xchg
sub
push
hlt
shrb
adc
out
jb
xchg
cmp
pop
sar
inc
pop
xchg
adc
aaa
scas
jmp
ret
jecxz
adcl
cmp
into
add
jne
cwtl
sar
loope
lods
adc
frstor
pusha
out
bound
mov
ljmp
shrl
push
fcoml
jmp
pop
adc
cli
mov
mov
inc
jp
dec
shl
aam
cs
jne
cmp
pop
insl
stc
inc
les
ja
out
xchg
dec
subb
lds
in
add
or
adc
mov
dec
ljmp
push
cmp
cmpsb
fs
pop
in
jmp
pop
hlt
xlat
cli
jg
mov
ljmp
jnp
xchg
test
push
pop
scas
stos
mov
jmp
pop
mov
cmp
out
loop
pop
std
jnp
sub
push
cwtl
adc
push
lret
bound
sbb
call
popa
out
jg
mov
pop
int3
movsb
mov
test
jae
sar
decl
mov
lods
sub
lahf
inc
sub
or
mov
decl
inc
ljmp
lds
rcrl
and
dec
inc
bound
mov
inc
jg
decl
pop
sub
cld
push
leave
fldt
jns
jb
sbb
push
incl
sti
movsl
nop
mov
movsb
mov
rorb
push
jmp
out
stos
les
or
push
cmc
dec
cmc
incl
or
pusha
push
dec
ficoml
xchg
add
test
add
stos
xorl
push
stos
pushl
xor
mov
xor
mov
stos
add
push
in
ret
incl
in
jmp
fistpll
loop
popf
daa
sub
repnz
mov
jo
repnz
jg
arpl
and
mov
mov
dec
scas
out
in
daa
cmp
dec
test
aaa
popa
pop
imul
andb
xor
aam
push
inc
lds
add
ja
sbb
mov
incl
inc
int3
cld
stc
push
mov
lret
je
stc
loopne
fnstsw
mov
xchg
jb
aaa
incl
push
ficoms
rclb
test
pop
or
add
das
in
pop
mov
test
ljmp
cs
dec
cmp
jne
sub
aad
ficompl
and
and
mov
xor
mov
cmc
mov
mov
mov
jno
mov
ljmp
dec
adc
adc
stos
mov
andl
das
es
cld
and
and
sbb
call
mov
stc
push
push
mov
mov
nop
xor
mov
into
and
mov
je
push
inc
cmp
pop
out
sub
aad
pop
fwait
xchg
sbb
xchg
cmc
sub
imul
ljmp
or
int3
inc
in
xor
in
inc
jns
lds
add
push
xor
call
xlat
mov
sbb
xor
sbb
sahf
mov
aad
adc
decl
out
cmp
loopne
mov
push
popa
mov
push
jp
addr16
pop
xorb
push
xlat
xchg
add
jmp
les
and
adc
clc
fnstenv
inc
xor
nop
lock
js
arpl
fmull
sbb
jecxz
jg
and
cmp
flds
es
xchg
pop
inc
push
dec
push
adc
ljmp
sti
das
loopne
cli
and
jge
lret
lret
insb
and
add
push
add
lods
jmp
add
cmp
loopne
jle
mov
arpl
jno
call
cs
pop
ss
cmpsb
in
outsb
add
cli
fnsave
fmuls
mov
stos
pop
inc
pop
inc
fwait
xchg
jmp
dec
movsl
mull
movsb
stos
mov
ds
cwtl
out
icebp
push
and
or
mov
jb
call
jb
data16
mov
test
in
fstps
add
pop
pushl
dec
ljmp
mov
daa
xor
push
sub
xchg
pop
fbld
cld
div
ja
dec
dec
mov
or
mov
mov
daa
pop
mov
push
sar
adc
in
jp
stos
clc
lret
lret
arpl
test
jb
aas
scas
imul
jg
sbb
or
pop
sahf
xchg
adc
inc
out
adc
lret
aaa
lock
jp
jbe
xchg
call
subb
jb
dec
in
xor
mov
decl
outsl
pop
lcall
loopne
sti
cmp
out
mov
sub
ljmp
jnp
jns
add
add
ret
test
adcb
out
ficompl
incl
popf
ja
xor
dec
xchg
cltd
dec
repnz
pop
and
fs
mov
sbb
js
aad
mov
mov
lcall
repnz
mov
aad
push
jg
pop
sahf
mov
shll
pushl
cld
push
addb
fbstp
jl
jne
mov
in
mov
loop
insb
sbb
xchg
inc
pop
xor
mov
rolb
mov
pop
aaa
cli
out
popf
pop
gs
cmpsl
outsl
jb
fnsave
mov
fwait
mov
pusha
cld
jg
jl
inc
and
loope
popf
jl
insb
mov
inc
rclb
sub
jg
add
cmpsb
or
mov
adc
sub
decl
stos
int3
adc
into
out
shll
mov
popf
dec
or
mov
push
neg
pop
cmp
fcoml
jb
and
mov
cmpsb
test
xchg
jbe
cmc
push
repz
decl
mov
push
movsl
and
daa
jae
arpl
ljmp
jp
call
lret
outsl
jp
arpl
pop
shrb
orb
push
jmp
add
popa
push
dec
xchg
xchg
xor
mov
lock
xlat
ja
add
dec
dec
test
cmpl
pushl
inc
xchg
xor
jmp
das
lret
sub
or
sbb
lcall
and
push
jo
and
aam
cld
into
mov
fisttpl
test
incl
pop
dec
xor
xchg
pop
xchg
or
sbb
dec
mov
mov
cmp
pop
and
xchg
pop
sub
sbb
insl
mov
cld
mov
jp
int3
lret
sub
rcr
mov
aaa
fdivrs
mov
mov
or
mov
idivb
cmp
call
outsb
test
sub
jo
repnz
arpl
xchg
fadds
pop
inc
fwait
dec
fstpt
mov
jnp
cmpsb
pop
jp
sub
add
mov
ljmp
shlb
into
jle
push
push
push
or
pop
pop
fldl
outsl
cmp
scas
dec
mov
imul
jmp
jae
clc
and
cmc
ds
adc
stos
mov
testb
test
incl
cmpsb
in
hlt
adc
add
sti
xchg
mov
fists
fnstenv
in
push
js
cltd
add
xchg
mov
iret
ror
cmpl
jg
enter
data16
dec
cmp
call
push
jp
in
xor
rcll
add
jbe
add
repnz
dec
mov
dec
loop
aas
lods
test
push
inc
pusha
lea
push
sub
add
jp
mov
imul
inc
jg
cmp
xchg
scas
stos
les
xchg
jmp
mov
inc
sbbb
pushl
jmp
aas
and
imul
xchg
jmp
dec
stos
dec
lea
jp
add
lcall
lods
xchg
xor
insl
inc
dec
cmc
jno
push
fcoml
outsb
nop
pop
stos
pop
fsubl
pop
sbb
push
cld
call
ror
scas
insl
movsb
adc
lods
call
jo
xor
imul
jl
sub
test
mov
aaa
std
lcall
mov
cmpsl
jp
pop
or
push
inc
cmc
mov
pop
xchg
sub
fcoml
and
lahf
pushf
cmp
cmpsl
add
push
dec
mov
lret
mov
xor
incl
pop
out
dec
fsts
andl
out
testb
push
inc
gs
cltd
push
cmpsl
cli
lds
lcall
push
mov
and
xchg
inc
sub
aas
js
stc
mov
dec
xor
cmpsb
mov
movsb
lcall
mov
shll
and
adc
and
bound
xchg
mov
cmp
mov
mov
mov
lock
ds
add
inc
push
xchg
scas
lds
xchg
and
mov
fistpll
jmp
aaa
leave
mov
push
jge
ja
dec
mov
push
adc
push
fwait
les
cli
jb
mov
ror
push
push
fisttpl
and
test
stos
stos
mov
lcall
lock
xor
mov
call
push
out
inc
sub
cli
incl
ret
int3
popf
popf
adc
xchg
xchg
mov
sub
out
cli
cmpsb
stos
sbb
test
sub
rolb
std
repnz
xor
punpckhwd
aaa
push
adc
jg
jp
test
sub
mov
mov
pop
mov
ss
inc
xor
psllq
dec
cli
int
or
inc
mov
mov
xor
mov
aam
adc
xor
dec
lret
jg
cli
push
cmp
pop
ljmp
inc
aam
roll
inc
jae
subb
xchg
xor
lcall
and
jg
jmp
adc
push
daa
loope
dec
sbb
test
jp
jmp
xchg
pop
pushf
daa
mov
push
push
mov
rcrl
jmp
pushl
mov
fbld
push
and
cmp
and
scas
xor
ss
sbb
das
scas
xchg
push
ja
mov
into
sub
mov
dec
mov
hlt
imul
pop
add
or
or
dec
sub
push
nop
in
leave
dec
jno
movsb
dec
xor
xchg
or
icebp
cltd
dec
sbb
shrb
mov
decl
or
xchg
and
xchg
dec
shll
or
out
add
jbe
pop
incl
jae
pop
popa
call
mov
and
roll
lret
lcall
rorb
pusha
jne
mov
shll
cs
mov
out
pop
fcomip
jl
push
mov
add
ja
sub
xchg
popf
stos
jnp
addr16
and
call
pop
mov
popf
mov
jnp
pusha
xchg
dec
xor
add
test
cmpsl
xlat
clc
enter
call
daa
mov
mov
and
cld
test
push
mov
pop
push
sub
movsl
jmp
mov
cmp
pop
int
sub
scas
outsb
mov
out
dec
das
cs
push
out
decl
lock
aad
imul
popa
adc
sub
testl
jl
xchg
jns
dec
aam
jmp
sarb
into
fimuls
in
push
fistps
enter
push
aam
xor
js
mov
mov
loope
decl
out
enter
daa
enter
mov
and
call
jo
mov
arpl
repz
in
jg
nop
cmc
pop
sub
divb
call
cs
mov
shlb
add
clc
jg
mov
ja
cmp
mov
dec
movsb
push
jle
push
call
and
push
rol
incb
test
mov
lahf
fiaddl
pushl
inc
and
pop
lcall
xchg
xchg
rorb
mov
sbb
mov
lret
cmpl
ds
lods
loope
testl
daa
stos
imul
imul
cmp
sarl
mov
bound
femms
sub
mov
lods
inc
insl
add
call
rol
inc
mov
or
xchg
jmp
into
xchg
jae
faddl
adc
fistps
sbb
mov
sub
sub
negl
lret
fstl
jno
cmp
mov
mov
ss
inc
fsubl
rcrb
dec
xchg
outsb
test
incl
or
sbb
sbb
shrl
cmc
xchg
sbb
mov
das
and
lret
lcall
xor
outsl
mov
add
clc
push
std
sbb
scas
jns
incl
cmpsb
mov
mov
lret
lock
push
cmp
xor
mov
push
push
adc
mov
inc
mov
ret
rorb
jb
inc
decl
xchg
sti
xchg
dec
xlat
xor
imul
cmp
mov
pop
popf
lock
into
mov
mov
rorb
mov
aas
inc
pop
xchg
and
cli
cmc
addr16
lds
dec
ljmp
shlb
aas
sarb
in
pushl
mov
mov
adc
adc
jne
mov
inc
ret
pop
inc
fidivs
push
push
push
ja
push
jl
jg
lret
xchg
fwait
cmp
sahf
add
jle
push
insb
add
fists
push
decl
out
in
subl
ljmp
mov
adc
in
push
call
inc
mov
out
push
rolb
sub
xchg
mov
mov
stc
or
test
push
and
call
push
cli
sbbl
fnsave
lods
mov
pusha
test
dec
adc
stos
xchg
repz
lcall
inc
lcall
mov
push
inc
fimull
jp
or
and
stc
les
into
xorb
rorb
jb
outsb
stos
das
jp
ljmp
push
scas
mov
pop
pop
xor
sbb
mov
sbb
push
mov
lcall
inc
dec
pop
fidivs
mov
xchg
jecxz
mov
pop
sbb
dec
fldenv
aam
and
iret
hlt
pop
fdivs
jns
popf
or
mov
ret
fimuls
out
push
stos
call
xchg
inc
aam
push
lds
inc
inc
xor
clc
out
sti
mov
test
xchg
mov
pop
pop
loopne
decl
int
or
mov
testl
cld
adc
addr16
xor
sub
ljmp
sbb
xor
mov
ss
add
shl
dec
mov
das
cmp
incl
inc
cltd
addr16
mov
std
dec
mov
pop
jmp
push
ljmp
cmp
push
jle
xchg
or
pushf
stc
jne
add
movsl
dec
gs
jmp
scas
int
mov
sbb
sub
fbld
mulb
and
or
jmp
les
xor
lock
mov
movsl
cld
xor
lcall
sub
sub
ljmp
ficompl
push
sub
lret
shll
inc
sub
insl
sbb
xor
notrack
dec
fdivrl
jne
inc
lret
jo
and
mov
sidtl
jecxz
xchg
movsl
fwait
lcall
lods
xchg
aam
repnz
mov
xchg
sbb
test
lea
sub
mov
dec
out
cmpsl
push
test
pop
push
mov
mov
mov
popf
xor
popf
push
mul
jno
lods
addl
xchg
or
testb
mov
cmpsb
pushf
cld
iret
or
popf
sub
push
xchg
jo
out
mov
ljmp
call
cmp
adc
sahf
dec
push
mov
int
dec
pop
jnp
hlt
test
mov
sbb
ljmp
sub
jb
mov
dec
xchg
or
hlt
fists
mov
out
pop
xchg
sar
jg
pop
enter
xchg
mov
dec
jbe
inc
inc
mov
test
ss
decl
in
test
ret
jno
sarb
cmp
fcomp
rcl
cwtl
lcall
push
jmp
xchg
push
xor
imul
and
incl
cld
lcall
gs
repz
gs
aad
cwtl
sub
cmp
add
dec
jle
enter
push
hlt
sbb
sbb
movsbl
jmp
jnp
inc
clc
mov
inc
lret
into
fs
shr
mov
and
sti
or
out
incl
sbb
sub
pop
jns
dec
enterw
xchg
cmp
pop
mov
ljmp
mov
repz
hlt
fcmovb
test
mov
xchg
mov
push
sub
dec
pusha
mov
decl
xlat
jmp
insb
imul
popa
mov
mov
or
je
aad
incl
sub
rorl
gs
jnp
sub
xchg
and
jg
daa
adc
insl
sbb
mov
and
adc
es
out
cmp
fildll
xor
sti
mov
add
lock
inc
out
add
mov
imul
mov
shlb
mov
mov
add
jne
xchg
cli
xor
ljmp
add
outsl
push
add
mov
adc
scas
push
xchg
cmpsb
fldenv
dec
fdivr
out
cli
dec
mov
pushf
sbb
pop
jb
push
dec
subl
cld
sbb
ljmp
adc
into
sbb
add
mov
outsb
xchg
mov
repnz
mov
cmp
sub
push
fidivrl
gs
clc
incl
dec
lahf
insl
push
jae
std
cmp
adcb
ljmp
xorb
or
clc
jge
in
pusha
dec
inc
int
cmp
sub
or
push
push
cld
decl
push
iret
push
mov
add
lods
into
test
push
sbb
or
rcll
pop
inc
cld
add
jmp
jg
jle
mov
idivb
scas
mov
sub
das
leave
outsl
cld
pushl
aaa
xor
out
aas
add
int3
popa
and
lds
xor
js
lcall
in
jg
lret
mov
xor
pop
incb
in
push
xchg
mov
cmpsb
jecxz
adcb
pushl
out
or
mov
in
or
adc
xchg
and
in
test
sahf
pop
fdivrl
push
testb
dec
lcall
ja
fwait
mov
cmp
cmp
push
xor
lds
out
clc
inc
lock
cmp
inc
xchg
pushf
mov
mov
pop
arpl
into
ljmp
pop
icebp
mov
push
and
inc
repnz
jo
fiadds
mov
mov
jg
push
push
pushf
stos
ja
je
mov
pop
in
sti
cmp
push
jge
jmp
movsb
aaa
mov
sbb
jo
int
outsl
or
add
jl
add
inc
scas
inc
inc
cmp
adc
pop
push
jmp
push
add
lods
clc
mov
stos
dec
or
and
mov
cmp
lret
sbbb
incl
int3
insb
and
mov
and
cwtl
mov
arpl
imul
pushl
push
std
hlt
and
fisttpll
and
stc
cmp
mov
inc
xchg
or
das
clc
cli
pop
rcr
loop
mov
pop
pushf
sub
aas
rcrl
add
push
sub
call
out
sbb
mov
inc
ja
iret
pop
jl
out
gs
adc
les
int
incl
test
pusha
inc
stos
pop
jae
adc
sbb
fcompl
xchg
cvtdq2ps
jl
pushl
in
movsl
pop
push
fldl
dec
outsl
lret
loop
pop
push
lahf
ds
lahf
inc
lret
jmp
lcall
ljmp
push
dec
inc
insb
icebp
pop
add
inc
mov
add
mov
imul
fsts
mov
push
sub
out
cmp
mov
xchg
pop
loope
push
cmpsl
loopne
xor
push
es
call
clc
cmp
fcompl
xchg
cmpsl
and
mull
ljmp
ficoml
push
insb
mov
inc
cltd
xor
movsb
aas
stos
push
rorb
pop
inc
out
data16
decl
jns
pop
push
pushf
sbb
mov
data16
andnps
mov
test
call
lahf
and
sahf
ficompl
jle
daa
mov
repnz
pop
ret
icebp
push
sbb
push
popf
fs
sbb
pop
adc
xor
call
loopne
ss
sbb
push
enter
cmp
or
fmul
cltd
or
xchg
jns
dec
push
adc
mov
adc
and
adc
addr16
sbb
idiv
jmp
in
xor
popf
add
mov
lahf
roll
lods
push
pop
pop
sub
xchg
pop
add
jmp
ss
lock
add
arpl
bound
gs
adc
aam
cmp
jmp
ds
cli
jno
adcb
test
fisubs
jle
jne
sbb
in
add
ljmp
je
pop
les
jge
push
cs
push
dec
inc
movsl
mov
fwait
decb
bnd
and
in
sbb
pop
jecxz
add
aad
ljmp
jmp
sbb
frstor
lods
inc
inc
in
xchg
test
jg
inc
and
xor
fisttpl
xor
lods
ss
shr
mov
push
xchg
pop
cmc
cmp
test
sbb
inc
ss
or
data16
push
leave
add
incl
jge
xchg
pop
adc
pop
ss
sub
loopne
aas
sarb
movsb
xor
arpl
dec
pop
stos
mov
push
dec
sbb
aaa
cld
ljmp
dec
arpl
mov
mov
cmpsb
std
push
add
xchg
jbe
xor
decl
xor
pop
call
loop
jo
data16
inc
in
mov
or
lcall
popf
ret
sti
mov
or
ljmp
pushf
shrl
insl
cld
cwtl
sbb
shll
push
mov
pop
sahf
les
and
cmp
xchg
ljmp
jp
int3
or
lock
xchg
or
push
sub
ljmp
xchg
rcr
mov
adc
clc
add
loopne
outsb
mov
mov
jl
fcoml
imul
nop
lods
dec
mov
in
mov
daa
cld
jg
mov
decl
mov
out
int
es
mov
and
out
adc
bound
mov
clc
pushf
rcrl
mov
loope
mov
rdtsc
clc
sbb
jmp
pop
call
cmp
xor
inc
jp
call
jl
imul
int3
inc
mov
sbb
das
cmp
iret
mov
inc
enter
pop
ljmp
pop
jb
xor
loope
in
jle
cmpsb
jno
jge
pushl
inc
cmc
xchg
iret
lea
fidivrs
adc
cmc
push
in
ror
xor
mov
xor
inc
adc
jmp
ds
fadd
lret
lds
sar
mov
inc
jp
mov
call
push
addr16
bound
xchg
mov
mov
xchg
push
inc
jmp
out
mov
sub
adc
push
insl
cltd
jl
lcall
fsubr
adc
mov
sub
sub
les
jmp
push
es
pop
inc
es
lret
pusha
or
push
sbb
jle
mov
test
mov
sahf
pop
adcb
and
xchg
pop
dec
js
dec
test
jmp
cld
xlat
mov
jmp
ror
insb
idiv
and
mov
ljmp
ss
dec
adc
or
idivb
cli
popf
adc
cmp
and
inc
xchg
dec
fldcw
faddp
fldcw
ret
sbb
cmc
xlat
mov
adc
mov
movsl
cltd
das
clc
jmp
pop
adc
mov
out
or
mov
mov
pop
call
sti
lds
jmp
pop
add
xor
movsl
in
jmp
mov
sbb
mov
lcall
das
cli
inc
and
inc
push
jl
xchg
pop
jecxz
pop
push
or
ret
movsb
cli
test
call
push
rcr
insl
or
out
cld
mov
xchg
std
ds
out
scas
je
pop
insl
cli
loop
push
das
clc
jmp
inc
mov
inc
ret
xor
mov
push
clc
mov
pusha
insl
repz
jp
mov
inc
test
iret
lret
in
cmp
push
mov
inc
jnp
ds
int
lcall
mov
rorb
push
mov
mov
insl
push
pusha
cld
gs
cmp
jbe
decl
push
lods
pop
xchg
fsubl
je
mov
mov
pop
cmp
pushl
ret
lea
or
or
add
inc
std
dec
cmpsb
das
repnz
call
lea
push
das
inc
je
push
adc
push
and
incb
and
xor
rolb
jb
pop
scas
repz
jbe
ljmp
fld1
lcall
loopne
ror
nop
not
sbb
dec
adc
dec
and
imulb
rcll
incl
dec
jl
loope
lcall
in
sbb
and
xorl
lcall
das
in
mov
fildll
addb
pop
packsswb
incl
mov
iret
movsl
out
test
xchg
add
mov
stc
aas
inc
popa
sub
jbe
pop
jne
ljmp
pop
and
or
mov
nop
jle
fcoms
fdivr
inc
mov
lcall
push
cltd
popf
lcall
pop
push
cld
xor
loop
xchg
stos
and
jge
or
adc
mov
sub
and
add
or
inc
push
mov
mov
lds
decl
dec
pushf
xchg
jge
xor
add
jo
jmp
movsl
aam
decl
mov
ficompl
xchg
inc
in
xchg
cmp
push
subb
cmp
jg
mov
xchg
lret
mov
loop
mov
lods
mov
or
or
inc
pop
repnz
jge
mov
sbb
daa
cmc
cli
mov
jmp
pop
dec
incl
and
pop
sbb
and
popf
test
pop
addl
in
cmp
lock
call
ror
adc
ja
or
mov
in
mov
mov
arpl
mov
jmp
push
jg
in
lahf
fs
xor
in
aaa
shlb
push
das
push
sub
xchg
ljmp
push
xchg
loopne
iret
out
jp
mov
push
scas
test
cmp
hlt
mov
push
adc
lcall
cmp
pop
pop
aas
sub
mov
mov
dec
int
push
push
and
jge
push
ljmp
mov
jne
push
lods
out
shrl
fildll
lods
pop
orb
mov
jb
xlat
jmp
and
stos
out
or
and
fldcw
ds
mov
adc
cmp
ljmp
inc
fdivr
push
les
jmp
insb
add
pop
ljmp
pushl
xor
aad
push
hlt
daa
mov
inc
fisubs
sbbl
loopne
xchg
mov
push
jmp
dec
adc
inc
fdivs
mov
xor
and
jmp
xor
push
mov
and
call
inc
adc
jmp
sub
pusha
mov
enter
xor
cmpsb
fisubl
incl
fcmove
sbb
xor
repnz
pop
inc
inc
ficoml
pop
faddp
push
cwtl
xor
jmp
mov
std
mov
hlt
notl
fiadds
jns
xor
cmp
cmp
mov
gs
rcrl
adc
pushf
aad
sbb
aam
js
out
ret
lcall
stos
hlt
loop
test
mov
gs
add
clc
rclb
std
call
xchg
fidivs
fldt
cmc
pop
jmp
out
shl
mov
rcrl
lods
and
add
add
pushl
xor
out
in
movsb
and
xchg
cmpl
ja
insb
les
add
in
adc
xor
sbb
add
mov
xchg
xor
sbb
leave
insb
cmp
mov
test
push
orb
movsb
hlt
adc
mov
and
pop
in
int
repz
test
ret
adc
ret
mov
sar
lret
mov
int
pop
mov
and
lcall
in
dec
mov
out
adc
and
repnz
inc
xchg
lock
pop
stc
jg
cmp
repz
ljmp
push
loope
aas
push
fsubp
stos
dec
stos
rol
mov
lcall
jmp
shrb
jecxz
test
sub
aad
les
hlt
mov
push
push
mov
call
cli
mov
adc
cld
jmp
in
xchg
insl
ds
cmp
jmp
or
jg
ljmp
mov
xchg
pop
or
add
into
or
daa
add
sti
cmp
ljmp
add
and
inc
lods
out
dec
mov
mov
or
out
push
out
and
pushf
decl
add
in
lret
adc
mov
jp
sarb
arpl
inc
out
pop
idiv
incl
push
sbb
mov
int3
cmp
dec
rcrb
jns
outsb
or
popa
incl
incl
cmpsl
mov
xorb
xchg
negb
pop
push
lea
jnp
ljmp
cltd
cmp
xchg
clc
incb
cmp
sbb
mov
cwtl
arpl
lcall
loopne
ja
sbb
adc
rcrl
jmp
sub
std
ljmp
inc
int
push
ljmp
fcmovbe
gs
test
mov
push
inc
scas
daa
test
fdivp
inc
sbb
push
rclb
in
cmc
sbb
xchg
jnp
pushl
cmpl
inc
mov
adc
fidivrl
or
push
movsb
inc
jbe
pusha
xchg
arpl
sub
inc
mov
cmpsl
stc
inc
mov
loopne
inc
pushf
mov
js
jg,pn
fisubs
mov
call
or
push
jae
add
test
testb
clc
sbb
or
adc
call
in
icebp
lcall
in
mov
or
jmp
cltd
pop
stc
cs
xor
push
xchg
xor
cmp
mov
jecxz
shrl
jmp
cltd
pop
mov
xor
push
sub
jg
sbb
push
inc
movsl
mov
jp
outsl
call
jns
lods
xor
and
jae
ljmp
dec
lock
push
jl
cmp
fs
lock
add
leave
add
cs
mov
lcall
mov
sub
mov
jno
and
stc
pusha
xchg
popa
jp
cwtl
rcrb
lcall
pop
addr16
mov
jbe
movsl
aad
lretw
stos
sbb
pop
lahf
je
cmp
decl
roll
pop
xchg
xchg
jge
cli
outsb
and
push
cmc
mov
std
push
ds
inc
cmp
lcall
mov
cmp
lret
cmp
sbb
stos
or
cmp
adc
hlt
lret
sbb
push
lcall
nop
lcall
int3
movsb
pop
cmp
pop
and
shlb
lock
aas
xchg
add
inc
sahf
pop
xor
jge
add
add
jmp
hlt
cmpsb
sbb
push
mov
cli
decl
adc
sbb
mov
mov
cmc
lahf
inc
andb
fmull
jl
mov
cmp
jle
into
jbe
out
adc
enter
iret
incl
xlat
pop
out
cld
int3
inc
mov
in
and
les
and
sbbb
inc
and
call
loop
xchg
cmp
roll
roll
jb
pushf
fcmovnbe
xchg
repz
je
xor
xchg
gs
mov
mov
call
and
xor
and
push
push
daa
je
lods
jno
cmp
xchg
js
mov
out
sar
nop
fcomip
jmp
or
push
adc
pop
cmp
mov
ja
out
sub
pushl
sub
pop
jle
jnp
push
pusha
xchg
mov
and
push
xchg
add
es
pushf
mov
out
clc
std
xchg
daa
std
adc
in
push
lock
jne
push
cwtl
test
aad
rorb
jmp
mov
dec
sbb
lds
add
ret
push
imul
add
cmp
test
dec
adc
lock
hlt
mov
add
pop
into
mov
mov
push
iret
loopne
xor
lea
lock
test
sub
shl
lret
decl
insb
inc
pusha
aaa
adc
push
fistps
test
cltd
xchg
mov
hlt
decl
aas
orb
dec
mov
test
pop
mov
xor
aaa
mov
out
add
push
fs
jg
pop
addb
mov
loopne
and
fildl
cmpl
addr16
sahf
das
lcall
in
stos
outsb
in
fs
and
adc
jl
decb
inc
mov
insb
std
mov
cmp
je
or
mov
push
cmpsl
dec
and
test
in
sub
adc
inc
decl
movsl
js
xchg
ret
enter
nop
aaa
sahf
outsl
jecxz
jmp
or
inc
jo
lods
pop
lcall
shlb
lahf
mov
mov
jecxz
test
jbe
shrb
stos
jp
std
push
adc
ffreep
rolb
jb
sahf
sub
pop
mov
and
jb
out
mov
aas
clc
inc
pushl
mov
xchg
enter
lret
or
sub
repz
or
inc
fs
pushl
std
jmp
test
ret
adcb
daa
fwait
and
pop
cld
fstps
pop
es
ljmp
cld
pop
sbb
and
std
in
dec
sbb
and
enter
dec
or
cli
mov
ds
mov
loop
and
test
jecxz
or
pop
jl
lahf
xor
cmc
insl
aas
mov
push
sub
mov
and
mov
fmuls
push
fs
sar
decl
pop
stos
loop
icebp
and
sub
pop
pop
or
dec
sbb
std
lcall
lods
jg
iret
jmp
mov
lret
mull
dec
dec
pushf
or
add
call
xor
sar
dec
push
and
in
cld
adc
loopne
lcall
adc
or
movsl
xor
sahf
inc
and
xor
stc
pop
mov
fadds
movsl
stos
push
sub
pop
add
sub
xchg
xor
jp
mov
rorl
mov
sub
jg
fstp
sub
insb
add
cmpsb
test
xor
dec
jg
fisttps
or
in
xchg
shlb
fs
stos
dec
mov
call
push
imul
ficompl
sub
filds
lock
mov
cmp
insl
sub
xchg
cmp
call
and
test
jecxz
mov
xchg
dec
xchg
sbb
gs
mov
sbb
mov
sti
inc
cltd
adc
loopne
ljmp
push
sarb
add
xlat
loope
pop
jb
shrd
add
and
pop
shll
stc
inc
repnz
push
push
test
pop
push
mov
test
mov
out
inc
nop
inc
xor
dec
mov
call
pop
sub
jge
jp
pop
jns
stos
scas
mov
call
loopne
mov
adc
dec
mov
int3
insl
dec
adc
fstpl
sub
jg
incl
adc
bound
movsb
cmp
mov
cmp
push
mov
loopne
fbld
jle
xchg
add
jns
iret
mov
cmp
xchg
sub
insl
hlt
hlt
aaa
mov
xchg
jo
ret
mov
sarb
fucomip
lret
out
lret
leave
mov
in
stc
movsb
pop
push
sub
jns
fwait
lahf
mov
loop
jne
inc
and
sub
xchg
jecxz
xor
push
sub
jns
scas
loopne
dec
in
push
and
add
fcomip
mov
jb
fiaddl
xlat
movsb
mov
lds
dec
je
lcall
mov
test
push
add
es
inc
lcall
pop
jnp
jge
int
sbb
incl
xor
lahf
jnp
push
pop
jg
jno
lcall
xchg
ljmp
stc
lcall
lock
mov
mov
out
clc
mov
xor
jmp
dec
mov
popf
jmp
xor
mov
add
incl
sti
dec
sbb
fadd
push
stos
mov
ds
pop
insl
ss
roll
call
rcll
lock
pop
and
into
mov
jge
xchg
out
cli
lock
adc
and
test
idivb
cmpsl
scas
pushf
xor
pushl
stc
xchg
fcoms
jp
mov
mov
in
push
dec
or
xor
push
cld
std
jecxz
add
cmp
inc
pop
dec
out
in
cmp
arpl
sbb
jg
aaa
arpl
and
adc
pop
dec
sub
jge
jecxz
dec
jnp
sbb
pushl
aam
stos
jo
in
roll
mov
sbb
mov
cs
jecxz
and
mov
decl
or
push
mull
push
adc
bnd
dec
or
or
imul
sbb
pop
adc
lcall
int3
or
out
stos
lcall
imul
testl
es
stc
xchg
std
adc
pop
rcll
and
cmpb
jg
cmp
mov
ljmp
shlb
and
mov
and
mov
outsb
mov
add
daa
sub
icebp
test
and
subb
dec
loope
cmovbe
loop
xchg
add
lcall
lea
in
jge
mov
jl
sub
jb
mov
ljmp
mov
pop
push
sahf
leave
pop
push
sub
ljmp
inc
sbb
pop
js
xchg
cmp
xchg
mov
pop
repnz
cmp
out
pop
inc
adc
es
jno
adc
into
xor
sub
fwait
jmp
ljmp
sar
adc
das
sti
xor
shrl
jl
mov
and
stos
jmp
nop
arpl
pop
pusha
js
push
push
lret
push
push
cmp
test
push
or
pop
cmp
int
nop
xlat
negb
xor
cwtl
xor
sbb
and
and
and
mov
add
push
out
lods
std
mov
pushf
clc
int3
sbb
incl
lahf
mov
cli
cmp
cmp
fwait
fs
imul
bound
cli
mov
add
inc
pop
dec
jle
cli
addb
xchg
es
mov
lret
mov
xchg
mov
pop
mov
cld
testb
push
mov
stos
add
scas
xor
sbb
cmp
mov
enter
pop
lcall
daa
ljmp
cli
mov
inc
insl
bound
sub
push
jle
or
pop
pushf
lcall
mov
push
jns
or
popa
inc
aad
idivb
add
xor
or
aam
test
jns
orl
ret
push
pop
mov
add
xchg
xor
xlat
incl
movsb
pop
push
lock
ret
xor
jmp
pop
repz
or
cmp
sbb
push
arpl
incl
mov
xchg
test
ss
je
test
repz
ss
cmp
ja
add
mov
push
ret
sarl
mov
push
pop
arpl
dec
xor
scas
xor
mov
pushf
lods
jg
inc
jl
jmp
enter
mov
scas
out
ret
stos
mov
dec
ljmp
mov
incl
sbb
jno
imul
stc
ja
fisubl
xor
lcall
incl
out
cmpsl
cmpb
cld
sub
lds
leave
or
xor
inc
sti
cmp
mov
inc
daa
out
xchg
std
test
mov
mov
and
pop
jl,pn
in
add
fs
jg
ja
mov
out
cmp
or
icebp
movsb
add
bound
in
dec
mov
inc
inc
test
lret
aam
fcomps
sbb
xor
test
add
push
push
sar
mov
lods
sbb
sub
xchg
mov
push
popa
and
adcb
mov
es
insb
call
lods
ljmp
lcall
xchg
xchg
push
cs
sbbb
add
jg
sar
jmp
jl
pop
add
test
cld
dec
fwait
xor
sti
hlt
mov
fwait
and
imul
out
cltd
ffree
mov
lds
pop
jno
mov
pop
orb
inc
xor
dec
xor
arpl
clc
incl
and
or
sub
cmpsb
mov
jns
xor
out
and
push
insb
aas
xor
imul
adcb
pop
mov
inc
imul
mov
dec
push
inc
cld
xor
lcall
sbb
repnz
xlat
inc
and
aas
dec
fidivs
test
std
jmp
pushf
repz
fcomps
sub
inc
adc
test
mov
pop
ret
call
push
pop
mov
or
xor
hlt
xchg
ja
jns
dec
pusha
dec
iret
cmp
mov
push
sub
ljmp
frstor
jle
int
mov
js
mov
inc
lret
mov
xor
shrb
out
lret
test
cmp
sbb
call
push
les
mov
mov
xor
int
xor
mov
lea
mov
insb
fsubs
movsl
rclb
push
sbb
push
add
repz
jmp
decl
mov
pop
scas
pop
icebp
ss
test
pop
in
icebp
push
int3
lods
enter
loopne
lcall
push
push
push
pushf
jne
push
stos
test
ficoms
pop
pop
and
xor
xchg
mov
mov
fildl
ret
push
sub
and
mov
fsubrs
mov
popa
mov
or
test
add
pushl
jbe
and
add
mov
sbb
mov
sub
inc
fstp
pop
xlat
mov
push
in
mov
jno
mov
ss
lock
lret
adc
popf
test
btc
scas
inc
add
push
test
pop
push
jae
in
out
incl
cmp
sbb
jge
test
mov
dec
cmp
ljmp
mov
pop
or
decl
mov
adc
cltd
aam
iret
sub
adc
arpl
pusha
add
xor
mov
insl
in
decl
fldl
sbb
int3
push
mov
sub
test
and
or
pavgb
ljmp
loope
ficoms
test
sbb
mov
or
nop
push
insl
cwtl
mov
mov
fimuls
fstl
push
repz
rorl
out
subl
jmp
movsb
or
das
jg
inc
pop
fidivs
jl
mov
sub
jg
sub
not
and
push
push
push
add
mov
sub
add
add
mov
stos
jno
inc
jmp
adc
sbb
and
test
push
fmuls
test
aas
and
sbb
sbb
mov
clc
mov
loopne
xchg
add
mov
aad
mov
clc
dec
mov
shrl
adc
push
sbb
cmp
jo
or
ljmp
sar
jno
add
mov
dec
mov
rcr
jbe
sbb
decl
sub
cli
sbbb
push
lea
inc
int3
pop
stos
adc
fmull
jle
dec
push
jg
mov
fisttps
mov
mov
imul
fidivrs
cmp
jns
adc
test
test
cmp
xchg
sti
mov
ljmp
push
adc
sbb
sbb
mov
jecxz
jg
and
sbb
or
dec
insl
push
gs
add
sub
popf
dec
and
lcall
hlt
cmp
fwait
mov
add
inc
jecxz
das
dec
xor
jns
call
fbstp
in
mov
cmp
jle
cmpsb
mov
movsb
jne
jl
incl
xchg
push
stos
pop
lock
or
movsb
mov
bnd
and
fs
inc
es
insl
arpl
les
pushl
pop
cld
push
push
aad
ffree
out
fcomip
gs
dec
mov
pop
add
decl
test
in
xchg
add
jns
sub
ja
fldenvs
test
ja
and
leave
jns
ds
js
mov
mov
adc
pop
fidivl
jl
pop
repnz
mov
decl
pop
stos
xor
dec
insb
lret
in
and
arpl
mov
xor
scas
incl
sub
rcr
test
sbb
mov
fisubrs
push
adc
mov
lcall
pop
pop
sahf
movsb
outsb
or
test
gs
out
push
push
xchg
fs
and
inc
lock
inc
inc
cmc
pop
xchg
dec
sbb
inc
sub
ret
sti
fs
mov
fidivl
pop
xor
jne
mov
cmp
outsb
add
push
and
fwait
loopne
das
clc
ljmp
xor
jge
cli
xor
adc
les
stc
mov
incl
add
sti
and
les
addr16
mov
out
push
ljmp
lcall
cmp
add
rolb
mov
std
xlat
lea
test
inc
cmp
inc
pushf
dec
xchg
mov
aam
cmpb
ror
andl
pop
sub
jmp
push
inc
fldcw
inc
jl
push
in
mov
xor
push
jae
inc
imul
dec
add
test
jmp
sbb
dec
lods
xlat
push
popa
cltd
mov
or
fwait
xchg
or
iret
push
ja
icebp
jns
mov
mov
rorb
imull
pushl
ficompl
in
lret
aaa
sarl
into
hlt
ret
std
cld
repnz
mov
pop
icebp
xchg
cmc
out
inc
pushl
fistl
hlt
arpl
sbb
dec
aad
jbe
add
or
mov
jle
mov
mov
mov
std
mov
rol
outsb
sub
mov
decl
and
in
dec
cltd
lret
push
mull
adc
mov
lods
fsubp
jg
ljmp
dec
xchg
out
loop
xor
pop
xchg
ja
das
xor
das
stos
jp
ja
pop
js
jg
push
pop
into
sbb
loope
xor
test
icebp
fsubrl
or
repnz
popa
pop
imul
imul
ret
fbstp
sbb
in
addr16
cmpl
and
out
dec
imul
push
std
inc
stc
mov
popa
or
sub
pushl
in
cmp
inc
in
fimuls
insl
jne
out
stc
cmp
loopne
push
jns
test
call
ss
sbb
and
int3
sbb
jne
cli
jl
sbb
lcall
sub
rolb
arpl
test
pushf
sbb
cld
gs
ja
xchg
lcall
sbb
dec
sbb
jo
iret
or
xchg
sub
mov
xchg
rcll
mov
jle
stos
jo
lret
adc
or
test
lods
fwait
divb
jmp
and
loop
jns
popf
bound
outsb
out
gs
add
mov
pushf
mov
es
jecxz
xor
push
repnz
mov
call
nop
fcmovnu
loop
jne
xor
adc
mov
inc
btrl
push
out
hlt
cltd
mov
mov
xchg
xchg
pop
pusha
push
push
popl
decl
xor
cmp
adc
mov
shll
or
ljmp
push
mov
xchg
test
or
repz
call
sti
cs
sbb
call
add
jnp
test
insl
add
shrl
pop
punpckldq
adc
jge
enter
pushl
sar
call
and
mov
jmp
rorl
cmp
jg
inc
mov
add
or
pop
dec
cmpsl
dec
iret
mov
stos
sbb
add
push
mov
cli
decl
sub
test
flds
mov
or
push
shr
or
mov
arpl
jno
in
pop
add
sarb
mov
mov
jg
xchg
dec
ret
rol
imul
sbb
mov
or
pop
arpl
test
xchg
out
sbb
stos
decl
inc
in
mulb
icebp
or
xchg
and
dec
leave
repnz
cmpsb
pop
jp
lcall
push
outsl
inc
ret
cs
aad
test
dec
mov
test
cmp
sahf
inc
scas
arpl
popf
adc
call
enter
popa
xchg
pop
sahf
ja
bound
mov
dec
lahf
call
cmp
adc
frstor
imul
cld
in
cmp
push
sti
lock
data16
out
andb
repz
jmp
mov
mov
lds
pop
xchg
ss
push
pop
mov
pushl
mov
push
dec
in
cltd
or
mov
loopne
nop
int
mov
icebp
loopne
call
mov
sub
sbb
cmp
mov
mov
fbld
ljmp
rcrl
fistpll
mov
sbb
call
push
fistpll
push
cmp
aas
cmpsl
and
orb
sahf
mov
ljmp
add
insb
mov
sti
xchg
mov
xchg
xchg
movsb
xchg
xlat
xchg
lcall
inc
sbb
int
xchg
fwait
in
pop
pop
dec
xchg
push
imul
mov
aam
jnp
iret
sbb
es
xchg
fdivrs
mov
mov
cmp
pop
and
adc
mov
out
call
push
test
inc
int
aaa
ja,pn
xchg
insb
xor
and
add
xchg
pop
outsb
pop
sbb
jmp
fcompp
mov
sti
in
jb
into
in
cmp
pop
jmp
shlb
push
aam
pushl
adc
ljmp
xor
mov
sbbl
stc
xorps
push
jmp
lcall
adc
fsubrl
or
add
mov
enter
jb
addl
pushf
fwait
jae
cmp
pop
cmp
shl
cmp
xchg
test
ljmp
mov
fcomi
nop
test
ret
or
outsb
pop
dec
faddp
dec
test
and
xor
and
in
or
pop
cmpsb
stos
incl
mov
dec
xor
or
or
xor
and
xlat
subb
outsl
adc
jae
roll
incl
clc
xchg
aaa
aaa
xor
adc
nop
jge
pushf
xor
ret
jns
xchg
jmp
jnp
cmpsb
cmp
jno
es
cmp
bound
or
xor
sbb
push
ret
clc
jns
pop
adc
push
or
int
mov
std
lcall
imul
popa
jne
lods
loop
dec
xor
enter
out
cli
mov
call
cwtl
dec
in
mov
cmp
mov
xlat
jge
xor
int
neg
inc
rcrb
xor
and
out
clc
incl
fs
or
std
test
in
dec
fsubl
incb
pushf
push
outsb
sahf
pop
loope
inc
push
es
outsl
lea
mov
cmp
cmpsl
les
fadds
addl
xlat
jecxz
dec
jge
test
jo
pop
ficompl
sahf
push
std
scas
test
ret
mov
repnz
add
mov
cmp
or
js
sbb
ljmp
and
cs
shll
inc
shr
xlat
inc
call
dec
mov
imul
and
inc
mov
lock
or
repz
jp
jnp
jmp
adc
fnstsw
cmc
mov
loop
mov
aas
and
or
cmp
fbstp
dec
and
push
xor
rorb
mov
sub
out
add
incl
push
pop
bound
and
xor
loopne
fiaddl
xchg
call
decl
adc
sub
cmp
jns
push
fsubl
xchg
dec
and
ja
pop
inc
xor
lock
mov
jp
pop
add
mov
arpl
jne
aas
cmp
icebp
mov
cltd
lret
or
imul
mov
imul
dec
mov
mov
mov
fdivl
incl
lret
push
imul
or
incl
sub
mov
dec
inc
sbb
mov
mov
call
sub
xchg
add
push
jno
xchg
lea
lahf
sbb
sbb
rorl
cld
aam
xchg
sbb
xchg
shlb
jl
mov
mov
pop
add
dec
add
subl
insl
imul
bound
int3
pushf
ds
lock
jnp
ds
push
int
mov
fdivrs
add
mov
cli
sahf
out
cmp
ljmp
or
pop
add
in
push
sahf
mov
imul
inc
in
clc
movsb
mov
xor
aaa
cld
decl
or
into
ret
push
cmp
les
inc
push
dec
inc
js
incl
mov
inc
dec
push
cmc
inc
outsb
icebp
add
push
mov
in
scas
sar
out
lds
sub
or
bound
aad
sbb
hlt
inc
jne
out
cli
mov
dec
shlb
fistpll
lret
sbb
dec
xchg
lods
jns
fcomip
jmp
lcall
pop
lods
xchg
aad
movsb
jno
call
sub
pop
and
sbbl
push
bound
push
mov
and
mul
jnp
sub
rcr
xchg
ljmp
addr16
inc
ror
addr16
rorb
cmp
bound
mov
mov
nop
inc
icebp
pusha
stos
mov
loopne
sub
cs
jmp
negb
lcall
push
add
arpl
cs
jo
push
add
xchg
pusha
xchg
or
cmpsl
lret
sbb
frstor
cmp
push
popf
mov
jb
add
shl
cli
push
mov
mov
add
cld
cmp
pop
mov
repnz
decl
inc
bound
ret
push
add
adc
pop
mov
add
pop
in
inc
inc
arpl
jmp
test
jbe
inc
cli
push
dec
jecxz
lds
mov
dec
xorb
jl
sbb
dec
ljmp
insb
aad
jne
and
mov
call
add
call
std
mov
movsb
notb
aam
pop
icebp
sub
pop
pop
sahf
xchg
add
mov
xchg
jg
rorl
inc
push
mov
mov
addr16
mov
ror
repnz
xchg
pop
cmc
ljmp
dec
add
adc
pop
cmp
adc
lods
cmp
mov
icebp
dec
adc
lock
and
fwait
mov
dec
das
outsb
and
das
mov
sbb
incl
add
mov
adc
shll
sub
dec
cmpsl
xlat
and
push
push
incl
rcrl
jno
lods
sbb
and
pushl
dec
or
cmpsl
enter
and
pushf
jb
dec
inc
fmuls
lret
lock
call
popl
js
cltd
movsb
decb
push
call
dec
jbe
lods
mov
jns
cmp
clc
stos
icebp
mov
aaa
int3
outsl
ror
arpl
dec
xor
and
decl
sub
icebp
jmp
ds
add
fildl
sbb
push
and
cmp
call
clc
mov
jle
fwait
insl
mov
cmc
push
push
mov
push
test
cmpsl
inc
mov
sarb
sub
mov
ss
ss
insb
jno
rcl
cmp
aad
jns
scas
inc
mov
stos
xor
mov
sub
dec
shlb
lahf
or
cmpsb
cmpsb
in
add
sbbb
aad
std
jnp
or
ror
adc
xlat
jae
iret
xchg
adc
pushl
push
xchg
fstpl
mov
daa
loopne
imul
outsb
jno
inc
aad
pop
cmp
push
jg
mov
lods
int3
fsubrp
dec
sbb
test
scas
mov
mulb
mov
out
nop
dec
loope
sbb
xor
and
sub
add
jae
jp
out
cwtl
rcrl
insb
jnp
add
scas
fdivs
mov
dec
enter
push
addr16
dec
popf
lret
push
popa
mov
dec
call
rorl
lods
adc
rcl
inc
popf
push
push
rorb
pop
fwait
jo
jmp
in
mov
addr16
ljmp
mov
in
mov
mov
adc
mov
xchg
adc
cmp
jmp
lods
dec
lret
inc
in
inc
out
jns
add
bound
xor
pushl
cmpsb
or
divl
inc
mov
push
cmc
imul
lcall
or
dec
imul
loop
cmpsb
lret
or
cmp
cmpsl
divl
pop
mov
push
or
adc
add
loopne
popa
lret
movsb
lret
xchg
lcall
adc
repnz
outsl
mov
das
dec
movsb
sub
movsl
lea
xchg
fwait
call
lcall
rorb
in
insb
or
shll
es
mov
shll
xchg
xchg
std
decl
push
jne
cmp
aaa
mov
pop
scas
xchg
sub
jle
mov
pusha
flds
lods
sbb
mov
ljmp
ss
xchg
and
and
aaa
and
in
repnz
int3
scas
cmp
mov
push
insl
and
decb
jl
push
shl
call
cld
cmp
dec
shlb
mov
sbb
les
lcall
in
xlat
mov
jecxz
lcall
outsb
movntq
out
dec
mov
cld
adc
sbb
test
es
inc
nop
popa
cmp
mov
lds
test
ret
cmp
xor
pop
or
lds
inc
jg
sarl
cmc
rcll
js
pop
sbb
js
loopne
ret
add
hlt
cmp
xchg
js,pt
xor
ds
xchg
xlat
std
xchg
cwtl
xor
push
ljmp
or
inc
daa
daa
pop
js
scas
pop
push
outsb
call
jmp
inc
cmp
xchg
jecxz
dec
dec
dec
std
push
cli
cs
or
insb
ficoms
lcall
pop
jmp
mov
inc
mov
bound
ret
jge
or
in
insl
or
out
lcall
shl
gs
mov
cmpl
and
dec
add
inc
dec
mov
lahf
mov
ljmp
adc
pop
push
jbe
mov
lret
loope
mov
xchg
inc
lds
pusha
cs
cmpsl
fnsave
lcall
xor
pop
ret
xchg
insl
rcr
cli
sbb
mov
cltd
mov
jle
cld
sub
pop
push
cs
add
push
ds
jge
sbb
mov
and
rcll
mov
lods
cmp
or
inc
add
dec
inc
adc
jo
scas
daa
jb
cld
aaa
lock
xor
stos
jg
cmp
xchg
xor
icebp
jne
fsubrs
mov
sbb
pop
pop
mov
dec
push
ljmp
lock
fbstp
jmp
clc
and
push
cld
jl
mov
call
cld
mov
sbb
aam
push
fwait
push
fwait
jp
cmp
lcall
repz
adc
adc
pop
mov
lock
inc
lret
or
mov
or
lock
pop
lock
lods
sub
ja
jb
aas
mov
dec
xorb
mov
decl
xchg
addr16
test
and
sbb
lock
jb
test
or
jp
sar
cmp
and
sahf
in
xor
or
sub
int
outsl
daa
rol
out
lods
or
push
cmp
lcall
in
cltd
cli
mov
jno
aaa
jnp
or
cmp
insb
cmp
jo
pop
outsb
dec
sbb
sbbl
sbb
stc
jle
mov
mov
sub
dec
mov
mov
add
cltd
sti
inc
fdivrs
sarl
lret
push
push
jae
cli
stos
jmp
or
mov
cmpsb
out
adc
ffreep
jno
popa
std
xchg
jb
aaa
or
add
jl
push
iret
cmp
cltd
dec
push
mov
mov
std
call
out
imul
pop
dec
xchg
lret
es
xchg
test
lcall
mov
pop
out
xor
cmp
adc
arpl
sub
mov
call
pop
jg
xor
std
mov
shl
test
jmp
push
adc
fsubl
adc
lods
pop
repz
mov
and
jns
mov
sahf
out
lods
lcall
sbb
sbb
test
ror
incl
xor
out
jl
sbb
int3
mov
punpckhwd
call
xchg
fwait
loopne
pushl
or
mov
xlat
mov
jb
lds
lret
dec
pop
fs
daa
or
incl
insl
jp
mov
jb
jle
jle
xchg
or
mov
test
lods
idivl
inc
sub
in
lahf
bound
adc
mov
jmp
popf
push
ja
pusha
cmc
movsl
mov
int3
pop
ds
jp
bound
loop
iret
cltd
aam
adc
sbb
cmp
bound
xor
inc
outsb
in
daa
xor
loopne
mov
ss
lods
pushl
lock
bound
mov
jecxz
jp
adc
lcall
pop
jo
movsl
inc
push
int3
inc
push
cli
adc
mov
mov
scas
jl
gs
add
pushf
adc
add
pop
aaa
ret
int
ljmp
push
xor
add
push
jmp
mov
mov
fmuls
popf
clc
pop
hlt
ljmp
adc
xor
jmp
pop
inc
push
xor
adcb
dec
and
cmp
sub
jmp
flds
insb
loopne
out
dec
leave
cmp
lcall
pushf
jmp
sbb
loopne
aas
mov
push
inc
xlat
rorl
clc
fbstp
mov
mov
pop
mov
mov
insb
sbb
xor
mov
pop
hlt
jmp
or
iret
and
mov
movsl
mov
aaa
sti
sbbl
xchg
sti
sub
jmp
mov
loop
mov
push
and
mov
mov
push
es
pushf
push
pop
cmp
or
shlb
push
lcall
test
ja
in
aam
sub
lds
jp
dec
cmp
loope
sbb
dec
dec
xchg
cli
jnp
mov
lcall
xor
pop
push
or
out
xchg
mov
mov
mov
loope
xor
shrb
das
add
clc
xor
sbbl
scas
ljmp
out
adc
dec
pop
ret
dec
adc
data16
dec
add
sbb
gs
incl
iret
mov
call
pushf
lock
inc
xchg
dec
in
ret
in
imul
jmp
cmp
leave
pop
mov
jle
xlat
jnp
xchg
insb
pop
mov
leave
cltd
insb
cmp
faddl
enter
scas
and
cmpl
aaa
pop
bound
pop
je
fnsave
ljmp
push
sahf
and
pop
stc
shll
adc
sub
pop
mov
stos
xchg
dec
out
push
ja
inc
mov
pushf
pop
cli
sbb
decl
lret
mov
loop
xchg
mov
ja
shlb
insl
jle
sub
repz
jno
xchg
cli
call
std
hlt
je
sar
add
inc
mov
and
mov
pop
cmp
incl
sbb
pop
stos
push
add
add
mov
popf
movsb
push
mov
lock
mov
popa
aam
sti
ljmp
je
mov
push
mov
in
ja
pop
dec
adc
lret
mov
sub
jmp
push
aaa
call
out
daa
push
shlb
mov
jmp
pop
sbb
std
or
insb
mov
cmpb
int3
xor
cli
lock
jns
jmp
xor
and
incb
imul
das
adc
cld
gs
addr16
inc
push
in
test
push
dec
incl
push
stos
or
adc
ud1
in
push
add
mov
xchg
cmp
and
cmp
decl
lahf
pop
nop
cmp
in
mov
test
mov
fldcw
gs
lret
lahf
mov
and
push
out
xlat
movsb
das
pop
sbbl
imul
cmp
outsl
mov
cmp
pop
add
decl
insl
inc
and
mov
xchg
jbe
jle
inc
mov
dec
mov
loop
add
jmp
push
es
js
js
inc
in
adc
jno
inc
sub
fldenv
pop
sub
lret
pop
lock
sbb
or
push
in
xchg
popf
jnp
pop
mov
in
pop
mov
fstpl
repnz
notb
mov
leave
jbe
jg
sbb
rorl
xchg
cmpsl
loop
pop
sbb
sub
mov
in
fdivp
push
aad
jmp
mov
inc
jecxz
xchg
mov
in
jecxz
movb
push
movsl
pop
mov
decl
pop
pop
and
ret
pop
rolb
lods
ljmp
pop
sub
sar
lcall
mov
push
xchg
pushf
pop
push
out
test
fbstp
mov
mov
add
es
es
cmp
and
jo
add
mov
shlb
xor
mov
mov
mov
stos
data16
xchg
aad
xor
ljmp
aam
inc
dec
arpl
les
mov
lcall
mov
lcall
jmp
and
pop
es
cltd
jae
push
add
add
dec
jg
pusha
cmp
outsl
ret
cli
inc
inc
mov
stos
sbb
adc
loope
dec
mov
aaa
sbb
jmp
cmpsl
fidivrs
cltd
mov
sbb
push
fldenv
mov
xor
cs
aaa
pop
js
arpl
jne
adc
mov
jmp
adc
js
pop
in
in
xchg
movsl
jecxz
add
lret
mov
shll
cmc
cld
xchg
aaa
pop
cmp
sbb
pop
cltd
jle
mov
int
call
fisubl
pop
or
mov
xchg
orl
pop
jge
popa
sbb
loop
inc
fcomip
sbb
cs
ss
daa
adc
aam
jmp
inc
lods
jb
into
mov
xor
sub
xor
xor
jmp
pusha
or
cmp
add
nop
pusha
fiaddl
pop
xchg
stos
sbb
repz
rorb
xor
lds
in
and
cmpsb
mov
imul
lcall
and
push
sbb
cltd
arpl
lock
mov
or
daa
imul
lcall
add
lret
outsb
call
subl
dec
mov
add
sub
inc
sti
in
icebp
push
incl
test
orl
enter
mov
jno
mov
addr16
pop
gs
inc
outsl
andb
adcb
mov
push
xchg
enter
pop
inc
fmul
imul
xor
sti
mov
andl
test
in
jo
xorl
decl
xchg
out
mov
mov
rclb
mov
pop
in
pushl
fsts
mov
int3
cmp
dec
xchg
inc
xor
ret
or
gs
rcrb
pushf
push
pushl
cwtl
roll
mov
idivl
movsl
cmpsb
and
dec
cwtl
sub
mov
add
pop
pop
test
mov
lds
add
das
dec
mov
lcall
pop
xchg
mov
mov
lea
xchg
loopne
pushf
push
inc
js
lds
sub
jmp
stc
movsl
aam
jne
dec
ds
inc
cmp
cmp
dec
lcall
aaa
je
fsubs
xor
mov
adc
sub
incl
les
outsb
jg
adc
push
fs
sub
loopne
inc
loope
or
push
add
incl
inc
pop
xor
xor
mov
aas
icebp
mov
cs
push
push
sub
push
sahf
je
mov
call
mov
lds
mov
pop
mov
lea
mov
mov
dec
xor
mov
add
xor
mov
mov
push
jmp
cmpsl
mov
lret
ja
jl
bound
and
mov
in
adc
cmpsl
in
jmp
lcall
hlt
into
das
jnp
test
sub
jb
addr16
cltd
or
hlt
cmpsb
ret
mov
or
adc
ljmp
or
add
jbe
mov
jne
call
lods
call
pop
repnz
test
pop
pop
cmpsb
mov
arpl
pop
int
das
in
ljmp
daa
clc
inc
out
cmp
pop
and
lret
cltd
jmp
add
push
jmp
fbld
add
ret
out
sub
or
xor
imul
jg
ds
fisttps
adc
mov
call
outsb
jo
movsb
xor
es
sbb
fdiv
ljmp
push
fcomi
mov
or
jbe
jae
sbb
lea
jnp
incl
mov
inc
mov
sbb
rcr
scas
dec
loop
insl
xor
int3
jl
or
leave
outsl
in
in
pusha
int
shll
push
jb
adc
pop
cld
ja
je
jp
mov
enter
in
mov
out
adc
xchg
mov
jmp
scas
xchg
cld
call
addl
cmpsb
or
out
xchg
call
mov
fiadds
xchg
and
out
jne
pop
jmp
fiaddl
pop
sar
push
or
arpl
push
mov
mov
test
aas
js
cltd
leave
jg
xchg
dec
popf
dec
fcmovu
and
xor
daa
lds
xchg
mov
dec
push
mov
fiadds
xor
arpl
jo
push
sbb
xchg
ja
repz
stos
push
lcall
test
fmul
push
std
or
adcl
sub
lcall
out
cmp
iret
test
push
test
inc
push
mov
ja
mov
dec
test
int
mov
fld
std
xchg
imul
lea
add
into
shl
jo
jl
in
cld
and
out
dec
jp
jae
push
lds
mov
into
mov
push
or
mov
jg
ljmp
cwtl
mov
in
into
jbe
jge
das
jle
psubusb
jmp
incl
out
lods
pop
pushf
cmp
rsm
push
xchg
clc
xor
sub
jae
xor
sub
xchg
out
push
xchg
cli
or
add
iret
sub
jmp
loop
subps
shl
pop
clc
and
clc
jle
jns
or
cmp
pop
pushl
popa
add
push
jns
and
lcall
int3
pop
cmp
cmc
dec
aaa
push
out
dec
insb
cwtl
fcmovnu
and
adc
mov
call
in
out
leave
pop
lods
mov
push
mov
data16
push
aas
xor
add
enter
fisubrs
repz
lock
add
pop
adc
or
or
imul
movsl
push
pop
insl
incl
xchg
or
pop
call
cmc
mov
push
ljmp
clc
mov
scas
sbb
stos
cmp
sub
loopne
and
jns
sar
decl
sbb
sub
jae
inc
outsb
pop
ss
inc
std
add
out
cmpsl
cltd
dec
popa
lahf
ret
mov
xlat
enter
jae
sbb
jo
sub
les
push
pop
mov
lcall
mov
movsl
xor
loopne
mov
repz
mov
xor
mov
xchg
jns
ss
outsb
mov
cld
fs
rcrl
scas
ljmp
or
in
mov
dec
adc
xchg
pop
pop
iret
ljmp
das
pop
pusha
std
pop
lods
xlat
out
int
dec
and
call
dec
inc
arpl
dec
pop
and
out
adcl
sti
test
int3
repnz
fisttpl
shlb
js
jbe
add
and
rcll
cmc
iret
cmpsl
add
mov
push
add
pop
sub
nop
imul
mov
cmp
push
jg
push
mov
in
rorl
push
dec
scas
shll
loope
enter
push
call
ret
mov
aad
mov
loope
lcall
push
mov
cmp
cld
in
dec
jle
push
jb
mov
ret
xor
or
inc
pop
inc
mov
aaa
scas
inc
cltd
outsb
loopne
subl
sbb
mov
int
mov
decl
fdivl
es
push
and
dec
pop
jge
sti
lcall
outsb
repnz
ss
lods
mov
push
jb
pop
in
out
rcrb
mov
pop
mov
and
jmp
mov
add
repnz
add
shll
jb
iret
push
xchg
add
ss
mov
lea
jmp
xchg
pusha
dec
ss
mov
js
xchg
adc
gs
xchg
or
xchg
jmp
pushl
jmp
pop
loopne
jg
in
les
pop
jnp
incl
adc
fadds
adc
dec
or
cmp
cmpsl
sbb
mov
inc
shl
nop
test
addr16
sbb
decl
xchg
lods
aas
aam
fwait
fidivrl
js
lret
sub
cmp
add
sub
sbb
mov
je
inc
mov
mov
subb
jne
out
mov
ljmp
ljmp
fcomp
lcall
push
push
std
xchg
and
pushf
pop
mov
call
fstps
pop
rcrl
cld
or
sbb
push
jns
inc
push
in
push
enter
ljmp
imul
xor
pop
sbb
out
jmp
in
fcomps
ficompl
stc
bound
pop
lea
mov
shrl
inc
ret
inc
cmp
mov
pop
sub
cmp
andl
call
je
mov
pusha
adc
ja
push
or
pop
loope
mov
incl
push
inc
push
pop
outsl
jp
fdivrl
push
dec
mov
sbb
leave
xlat
insb
addb
das
shr
scas
dec
push
sub
or
test
test
hlt
inc
call
pop
outsb
and
cmc
xchg
aas
outsl
icebp
out
sub
mov
cmc
sarb
mov
jmp
sahf
addb
adc
cmp
insl
loop
jno
jns
push
lret
mov
inc
in
fadd
lcall
cwtl
jp
push
and
pop
daa
movsb
mov
xchg
sbb
dec
ds
ljmp
shlb
pusha
lret
push
xchg
or
mov
mov
dec
cs
orb
ret
icebp
scas
repnz
out
imul
jne
adc
mov
xchg
popw
std
mov
or
or
pop
mov
mov
mov
sub
adc
fisttpl
jmp
add
loopne
sub
inc
push
mov
ljmp
dec
push
call
aad
pop
mov
cmp
ljmp
lock
rcl
jne,pn
jmp
frstor
jnp
mov
rorl
push
fsubr
stos
mov
enter
je
les
xchg
xchg
sti
inc
mov
inc
movl
sub
cli
dec
loopne
xor
pop
insb
mov
lcall
and
add
xchg
inc
loopne
cmp
into
xchg
and
pushf
pop
and
inc
incl
cwtl
or
test
ja
pop
shlb
incl
xor
in
mov
push
mov
cwtl
testl
mov
jg
ss
adc
cmpsb
daa
imul
decl
sub
clc
lea
add
mov
or
xchg
jge
in
jmp
repnz
mov
lods
ja
fs
dec
jb
lret
les
sbb
loope
cmp
push
ja
cmp
xor
and
leave
xchg
sub
and
into
mov
adc
push
jl
das
repz
jge
or
test
ds
decb
adc
mov
idiv
mov
aad
enter
pop
mov
mov
fdivrl
xorl
xchg
std
out
clc
lcall
andb
ss
cmp
sbb
insl
adc
out
fcomip
pop
loopne
adcb
insb
lcall
fdivrp
lcall
adc
je
xor
inc
int3
dec
cli
pop
push
xchg
ss
in
arpl
call
or
add
or
adc
adc
cltd
adc
aas
jl
pushf
xchg
out
cmp
decl
push
hlt
ret
ror
xor
pop
dec
aad
lret
es
jns
pop
mov
jmp
jnp
lods
pop
cmpsl
mov
int3
mov
mov
or
inc
mov
lds
loop
sub
das
shlb
and
pushl
mov
push
arpl
pop
xor
sbb
sub
call
ss
adc
mov
jae
cmp
mov
subb
inc
mov
ja
mov
jl
push
out
or
leave
xor
jmp
and
jb
and
mov
jmp
insb
cmp
push
xchg
fdivr
mov
or
inc
jmp
add
loope
sub
or
adc
cmp
jnp
stos
jbe
xor
dec
ljmp
push
or
rorb
dec
mov
inc
cmc
sbbl
decl
imul
xchg
subb
test
adc
clc
insl
xlat
std
enter
outsb
xlat
pushl
sbb
jbe
mov
or
pop
fstpt
mov
jg
das
loope
imul
adcb
and
gs
lods
je
out
mov
cmp
mov
jo
nop
push
in
imul
jb
ffreep
cld
or
dec
jl
jns
mov
fisttpl
mov
mov
int3
mov
xor
orl
push
pop
gs
fcomip
ljmp
cmpsb
cmpsb
fwait
sti
into
dec
scas
mov
sti
push
xchg
dec
mov
jo
dec
filds
pop
ud0
lcall
jecxz
push
aas
pusha
dec
fwait
nop
scas
fisttps
js
imul
out
push
es
dec
inc
xor
imul
jb
cmpsb
jo
xchg
xchg
or
or
adc
lcall
adc
sahf
inc
lret
pop
mov
jg
out
cmp
in
aaa
and
incl
pushl
push
inc
test
sub
inc
ficomps
xchg
pop
dec
sbb
and
xchg
roll
decl
in
jle
lods
pop
cs
push
xchg
std
jb
add
dec
add
dec
bound
lcall
jecxz
push
cltd
or
xchg
add
fistps
xor
jo
push
fisttpl
pop
mov
jmp
stos
nop
jg
les
push
ja
setnp
jl
push
dec
mov
inc
jb
sub
jge
pop
cwtl
inc
and
mov
fnstenv
pushl
xchg
cmc
adc
push
shrb
lods
push
or
adc
mov
roll
pop
xchg
jne
lcall
and
inc
push
icebp
mov
cmp
lahf
jae
xchg
fdivr
aam
jno
imul
xchg
or
add
pop
and
or
movsl
mov
mov
idiv
fcomip
dec
push
cmp
xchg
icebp
pop
jb
xchg
and
xchg
bound
in
dec
loop
incl
loop
pop
xchg
hlt
cmp
sbb
pop
cmp
jbe
pushf
push
decl
push
jo
mov
xchg
xor
add
inc
loop
push
movsl
inc
cwtl
scas
nop
cmp
rcrb
ja
cmpxchg
mov
orb
in
pop
cld
ljmp
cmpsl
lods
inc
push
test
adc
loopne
push
mov
jle
dec
jnp
outsb
fwait
cli
xor
outsl
push
mov
mov
stc
adc
testl
cmp
bound
pop
inc
mov
paddusb
ljmp
jns
icebp
call
mov
lret
mov
and
dec
inc
and
or
mov
and
pop
hlt
xchg
out
mov
repz
das
sar
add
mov
outsb
add
jb
out
mov
mov
ret
jnp
int
push
inc
subl
cmp
inc
fcmovnbe
cwtl
inc
in
mov
inc
sar
clc
call
ss
test
xor
xorl
scas
cmp
or
sbb
call
in
cmp
es
inc
mov
push
in
cs
lods
jo
shlb
and
sub
jle
loop
jl
xor
pop
mov
outsl
push
jo
xchg
test
jg
ds
pushl
mov
fisttps
ja
sub
sub
xor
adc
shrl
and
test
jbe
mov
xchg
outsb
inc
jg
xor
or
sbb
adc
pop
push
or
cmc
adc
fneni(8087
ret
xor
jmp
jecxz
mov
push
sbb
pop
push
mov
lahf
mov
jp
mov
fistpl
add
clc
lret
scas
cs
xchg
sub
xor
or
test
lods
xchg
inc
test
cmp
dec
mov
mov
insb
mov
insb
mov
int3
dec
xlat
divb
mov
cmp
inc
adc
dec
add
cmp
adc
shrb
movsl
sub
sar
decl
pop
bound
lods
dec
push
subl
pop
xor
aam
jmp
stc
lea
add
sbb
call
adc
xor
jae
add
outsl
sub
add
mov
incl
leave
and
movsb
mov
dec
sub
leave
in
jmp
adc
sub
outsl
cli
ljmp
sbb
jo
clc
fisubrs
cmp
and
in
xchg
outsb
push
arpl
and
inc
cwtl
cwtl
pop
enter
mov
hlt
stc
std
testb
aad
push
pushl
std
jbe
nop
mov
fimuls
sbb
pop
ds
daa
stc
fisttpl
ljmp
out
pop
sbb
js
sbb
lss
mov
cli
lahf
nop
add
test
lods
insb
inc
push
imul
jno
in
call
jmp
or
inc
or
pop
push
jmp
movntq
and
dec
fdivl
jo
js
push
testb
lahf
push
leave
jg
pop
lock
cs
and
lret
imul
loopne
lock
loop
inc
call
push
jae
mov
ljmp
pop
push
inc
stos
and
incl
scas
dec
cmc
sub
test
pop
mov
and
es
push
mov
and
icebp
addr16
xor
aaa
mov
mov
xlat
lcall
jae
or
push
xchg
in
fsubrl
dec
call
xor
push
sbbb
in
dec
dec
hlt
pushf
ljmp
push
xchg
incl
shll
dec
out
lods
sbb
push
jns
mov
shlb
adc
inc
fs
jg
lds
add
movsb
mov
mov
int
push
mov
fnstsw
popf
or
mov
decl
mov
popa
xchg
and
push
xchg
adc
xor
cmp
mov
pop
cld
decl
or
and
repz
out
lret
cmp
insb
push
fnsave
inc
out
div
push
push
dec
test
pop
loopne
imul
lret
out
ljmp
mov
testb
add
sbb
movsl
jno
xchg
mov
pushl
pop
sub
clc
push
ret
xchg
cmc
cmc
pushf
dec
ror
mov
mov
jg
dec
imul
aad
mov
rcrl
decl
int3
pop
sub
jne
bound
lods
into
sbb
adc
into
inc
inc
mov
lcall
jl
lcall
xor
cmp
sub
lods
shrb
in
mov
decl
jo
inc
pushf
cmpsb
xchg
lret
lahf
cmp
pop
xor
fildl
imul
add
ljmp
ret
dec
or
xor
sahf
outsl
outsb
mov
jns
mov
xchg
pop
jns
into
fcomp
xchg
adc
dec
lcall
cmp
mov
pushf
int
ja
mov
loop
mov
out
popf
lods
incl
cmp
nop
inc
mov
lock
aam
aam
loope
shll
jg
clc
jmp
dec
cltd
ds
sbb
adc
cmpb
ljmp
fcomip
shlb
mov
popf
xchg
xlat
hlt
insb
lock
cltd
in
dec
cmpl
sar
sbb
cli
loop
xlat
repnz
pushl
cmp
repnz
jle
dec
repnz
mov
je
mov
pop
pop
jecxz
test
sub
jae
xor
lea
sti
mov
push
test
movsl
dec
xor
mov
push
and
mov
rclb
scas
ja
popf
lea
daa
xchg
cmp
inc
dec
mov
pop
insl
icebp
call
movsl
inc
dec
or
sbb
sarb
and
jmp
iret
and
pusha
jmp
popf
inc
pop
cmpsb
jp
repz
mov
add
xchg
fmuls
mov
mov
repz
inc
mov
repz
jo
nop
mov
ficompl
incl
inc
add
or
xor
add
cld
sar
decl
jl
dec
jl
add
enter
stos
cwtl
clc
fldcw
std
add
test
incl
sub
pop
mov
cmp
or
mov
lret
scas
mov
jmp
jae
fcmovnu
mov
imul
popa
dec
inc
or
out
push
adc
xor
cli
iret
and
xor
dec
xchg
sar
ljmp
imul
jno
sarl
insb
mov
xlat
adc
or
adc
push
mov
push
mov
repz
call
cmp
leave
mov
or
mov
pop
iret
jge
repnz
push
adc
jmp
xchg
mov
mov
mov
mov
xchg
sub
inc
mov
aas
stos
jecxz
rorb
in
or
fsubr
insl
fstps
mov
push
push
mov
push
cwtl
adc
push
call
xchg
fwait
cmp
mov
jnp
mov
dec
or
sub
sub
ljmp
jns
jno
pop
xchg
cltd
pop
dec
pop
mov
sub
int
lds
inc
int3
mov
or
ja
jl
out
push
cs
aad
popa
sbb
inc
int
adc
mov
call
mov
add
hlt
dec
pop
dec
jo
int3
rolb
rcr
pushf
mov
mov
lcall
xlat
dec
sbb
lcall
or
mov
mov
sbb
jge
ds
xor
flds
fwait
mov
scas
xor
arpl
pop
pop
mov
xchg
ljmp
dec
cmpsl
rcrl
popf
push
fdivrs
clc
ret
xchg
add
adc
cltd
fcomip
incl
jns
mov
stc
sar
sti
test
rclb
fstpl
sbb
mov
dec
sub
sub
ljmp
rcl
jb
cld
inc
sub
cmp
aam
shlb
add
add
inc
cmc
ret
push
pushl
jecxz
dec
sub
mov
jle
sbb
stc
in
fildll
stc
decl
mov
test
xlat
sub
les
pop
sbb
sbb
mov
jmp
push
ss
and
loopne
sub
insl
mov
lahf
jb
push
cmp
push
and
test
dec
dec
faddl
and
testb
pop
push
ret
mov
nop
call
loopne
mov
out
mov
popf
mov
popl
inc
pop
push
test
shlb
mov
pushf
in
sbb
decl
loop
call
sbb
or
inc
nop
fs
xor
rcr
sbb
cs
push
cmp
dec
xor
or
lret
mov
mov
cmp
testl
pop
cmpb
cmpsl
sahf
push
ret
xchg
iret
sarb
push
arpl
or
cli
push
push
jb
mov
jmp
push
sub
outsb
stos
dec
stos
lret
lcall
inc
push
jecxz
push
cmp
sub
std
shl
jbe
lret
pop
dec
dec
ud0
aaa
cld
pop
add
js
xchg
lcall
ds
test
movsl
in
and
jmp
ret
jle
mov
sbb
push
inc
lahf
dec
inc
daa
sti
loope
pop
mov
jg
incl
adc
cmp
aaa
arpl
mov
xor
mov
stos
push
mov
inc
iret
push
jmp
jbe
pop
in
in
jl
scas
clc
repz
xor
xor
xor
mov
push
adc
xor
push
into
bnd
xor
xchg
shlb
int3
pushl
pop
outsl
roll
dec
inc
push
pop
mov
lahf
mov
dec
mov
cmc
fwait
stos
cs
push
int
dec
xor
aam
xor
insl
mov
int3
mov
test
popa
cmp
jmp
scas
leave
sbb
sahf
in
aaa
mov
lcall
sarb
push
add
lcall
lret
ja
lods
shlb
lahf
imul
mov
push
gs
jg
inc
cld
lds
xchg
mov
mov
jae
incl
lahf
and
jo
sbbb
pop
mov
push
aaa
aad
jae
sti
mov
enter
rcll
pop
mov
fidivs
pop
test
sub
push
cmp
xor
fwait
xor
pop
arpl
iret
cmp
incl
stos
mov
push
jp
xor
gs
and
out
or
pop
add
jg
dec
inc
dec
js
cmp
mov
pusha
sbb
jbe
mov
sub
push
in
sbbl
and
pop
enter
jno
pop
mov
cmp
out
out
xchg
mov
mov
cwtl
inc
loopne
pop
mov
dec
faddl
sti
mov
jg
jmp
inc
std
mov
inc
out
xor
pop
jmp
push
mov
shlb
sarb
cmp
sahf
stc
iret
cmp
adc
js
aaa
insb
mov
loope
dec
ljmp
sub
and
add
cltd
pop
lcall
ljmp
addr16
test
cld
xchg
cmovl
push
out
outsl
fsubs
fmuls
push
cli
and
cmp
cmp
sub
stos
jns
insl
sahf
insb
xor
fstpl
jp
nop
adc
cmp
ljmp
shrb
dec
scas
sub
addl
out
ret
fsubrs
jb
xlat
add
mov
mov
stos
fisttps
mov
insl
ljmp
cmp
dec
mov
stc
sbb
jo
enter
xchg
pop
rcll
jl
call
push
std
fstl
popf
test
ret
jae
rol
js
mov
dec
cltd
icebp
cmp
lret
jecxz
jns
inc
dec
lret
call
and
inc
test
xlat
lock
sub
insl
mull
loopne
cli
ss
decl
dec
push
mov
test
push
cmp
stos
adc
jnp
cld
adc
adc
loope
xor
ljmp
cld
and
pop
sub
mov
push
shll
and
and
sbb
mov
lcall
aaa
cli
rol
sbb
mov
adc
push
push
stc
arpl
std
xor
loopne
movsb
lret
out
decl
int
sbb
xchg
in
push
cmpsb
jp
gs
imul
das
cmpl
cmp
nop
and
fs
loopne
dec
out
jp
cmp
inc
sbb
add
jb
cmpsb
mov
les
ljmp
adc
es
pusha
ja
mov
pop
and
xor
add
lret
inc
mov
fs
decl
mov
push
mov
lret
xor
fildl
bound
mov
pop
rcl
adc
dec
add
sahf
cmpsl
sbb
add
std
shr
sub
pushl
aas
iret
mov
pop
xchg
push
ljmp
dec
jno
imul
xor
jecxz
jmp
int3
inc
mov
data16
lret
fcomps
arpl
cmpsb
cmpsl
loopne
cld
mov
jg
sar
pop
adc
mov
inc
sbb
pop
test
js
xor
incl
sub
add
popf
addr16
testl
jb
cmc
idiv
lcall
rcll
xchg
in
shrl
incl
hlt
xchg
fisttps
push
inc
shr
push
push
mov
xor
aas
mov
mov
cmc
add
lret
call
lea
and
outsb
ljmp
sbb
jge
lret
loop
lcall
imul
add
sub
jae
sub
ret
call
cmpsb
lahf
int3
push
cld
outsb
bound
cmp
in
or
in
push
sub
pop
sahf
cmpl
jmp
test
push
xchg
xor
inc
or
test
inc
je
push
in
call
inc
pop
mov
and
mov
insl
pusha
out
test
pop
push
icebp
sbb
dec
sub
xchg
jo
call
or
decl
and
sbb
lahf
sbb
sub
stos
je
or
xchg
xchg
movsl
mov
ret
adc
ljmp
xchg
lret
test
js
cmp
out
andl
out
and
stos
test
sub
jg
jne
repz
xchg
mov
mov
sub
decl
and
sahf
ss
push
lahf
mov
lret
mull
testb
mov
das
cmp
out
xchg
sbb
ds
pop
xchg
repnz
and
aaa
ret
mov
stc
and
mov
arpl
movb
imul
ds
cli
push
push
loop
outsb
inc
sbb
or
sahf
pop
lods
jp
pop
adc
push
push
in
add
fidivrl
aas
xor
incl
xor
xchg
cmp
mov
add
pushf
stos
ds
decl
fdiv
les
shrb
xchg
pop
jmp
cmpsb
pop
mov
and
decl
pop
ljmp
jp
jae
rcrb
pushl
sbb
scas
jb
dec
inc
pop
xchg
add
xchg
push
lcall
aad
sar
pushl
test
mov
cmp
test
loop
jmp
sbb
or
mov
cmp
dec
jb
or
outsl
xchg
jae
das
sar
push
pusha
cmpl
iret
jmp
orl
faddl
incl
ja
arpl
pushf
add
inc
sub
cmpsl
mov
adc
push
or
cmp
jg
aad
jg
sbb
ljmp
pop
icebp
call
add
push
dec
xor
mov
popf
incl
test
adc
inc
cwtl
ljmp
push
mov
push
cmp
jmp
lcall
es
sbb
sbb
dec
lcall
loop
pushl
mov
stos
pop
and
fists
ret
sbb
div
mov
sub
nop
sub
sbb
push
incl
push
xchg
out
mov
rcll
and
lahf
es
adc
pop
sar
fistpl
sub
adc
sti
insl
mov
aaa
loopne
cmp
repnz
call
loope
lret
shll
xor
sub
mov
movsl
into
xor
or
jb
movsl
imul
ljmp
nop
movsl
aad
push
sbb
mov
lods
movsb
cmpsl
mov
mov
pop
fcomip
mov
insl
xor
rorb
jmp
sbb
mov
inc
out
fucomi
pushl
jae
add
jno
std
dec
int3
in
add
into
jb
test
inc
fucomp
addr16
cmp
sahf
mov
imul
dec
xchg
push
inc
add
xchg
outsl
enter
push
insb
fwait
cmp
mov
adc
jo
cltd
xchg
dec
push
out
test
sbb
xor
jmp
jno
loopne
mov
icebp
push
ljmp
lcall
arpl
cmc
jns
inc
mov
rolb
call
sbb
pushw
icebp
jl
jmp
and
cmp
jg
mov
add
adc
incl
les
stos
mov
fwait
pop
sbb
cmp
add
jg
incl
shl
stc
fistps
jp
iret
inc
mov
push
inc
or
cmp
add
das
cli
call
test
lret
sarb
sbb
jne
fwait
decb
fcmovne
les
outsl
clc
decl
es
jae
mov
mov
gs
sbb
xchg
cmp
ljmp
add
pop
cwtl
mov
xor
dec
sbb
mov
or
into
clc
jns
cmp
decl
mov
das
xchg
cmp
xlat
or
out
sbb
cmpsl
in
mov
sarb
pushl
in
mull
or
aam
lock
lret
in
lods
pusha
mov
les
xchg
jecxz
lahf
and
aam
ja
jmp
pop
mov
sub
leave
sahf
loop
cmpsl
pop
test
addr16
lods
xor
call
rolb
or
lcall
xchg
cmp
mov
ljmp
loope
mov
arpl
sub
popf
inc
push
or
fmulp
cld
ja
ss
gs
fwait
jns
dec
std
mov
pop
adc
loope
icebp
sbb
pushf
movsl
mov
inc
jg
add
mov
data16
call
and
push
sbb
in
jge
ds
jmp
dec
daa
ljmp
xchg
mov
lret
fsubrl
adcl
shll
sbb
adc
insl
test
inc
push
xchg
adc
icebp
out
ss
cmp
aam
rorl
shr
dec
ljmp
or
add
mov
stos
jge
inc
adc
out
imul
pushl
or
or
bound
flds
dec
sti
je
push
cmp
pop
pop
jnp
out
arpl
and
cmp
fcomps
sub
sub
test
pushl
in
xchg
ds
dec
pop
sub
dec
cltd
jbe
das
mov
lds
add
pop
std
out
aas
dec
push
stc
push
out
push
inc
cli
and
cmpsb
divl
dec
aad
mov
mov
sar
sub
clc
pop
in
push
jns
out
pop
shll
jae
cmp
pop
xchg
call
push
dec
dec
jecxz
iret
comiss
dec
push
mov
adc
hlt
pop
call
cwtl
pop
xor
and
dec
out
push
incl
xor
mov
push
test
push
add
mov
xorb
in
push
cmpsb
out
ja
jb
ljmp
push
jp
mov
dec
mov
inc
int
std
rcrl
repz
add
mov
adc
lcall
xchg
adc
push
test
adc
arpl
gs
or
int
xlat
jg
mov
orb
sub
lret
push
and
inc
leave
xor
mov
ljmp
nop
ror
and
mov
pop
sub
lods
mov
pop
sbb
rorb
lods
sub
mov
inc
js
insb
test
jnp
daa
pop
adc
cmp
ja
lcall
cli
jmp
xchg
or
rcr
stos
xor
adc
sbbl
ljmp
out
popf
cmp
xor
cli
fs
xchg
aam
pop
fs
mov
mov
cld
xor
xor
je
out
xlat
in
imul
repnz
movsl
cltd
ret
stos
addb
jg
jmp
int3
loopne
jae
rclb
push
xor
or
sub
lahf
mov
fidivrl
mov
or
sub
adc
mov
mov
cmc
call
in
jl
jg
mov
aas
jmp
mov
mov
jne
push
lret
pop
test
mov
sahf
mov
icebp
mov
mov
shl
push
dec
ljmp
shrd
and
add
je
push
out
aaa
call
ds
leave
shll
xchg
push
call
stos
pushl
mov
pop
sbb
test
or
dec
inc
sahf
xor
daa
sti
out
cli
inc
mov
add
dec
scas
insl
jnp
ss
sbb
fiaddl
clc
jg
test
jmp
or
cmp
addr16
mov
out
pop
sub
test
mov
sti
shlb
std
shrb
push
push
push
fs
dec
arpl
mov
push
mov
inc
cmp
fildll
mov
int
or
je
xchg
inc
push
jnp
aad
cli
rorb
mov
insl
and
mov
push
fwait
pop
mov
decl
mov
repnz
loope
in
mov
scas
jecxz
push
mov
jg
jbe
stos
jnp
hlt
call
int3
cmc
sbb
or
int
mov
inc
clc
outsl
dec
or
incl
cmp
and
and
fstp
mov
pop
aaa
or
xchg
jmp
scas
iret
mov
call
out
sbb
add
xchg
dec
repz
ret
mov
dec
das
aaa
adcl
sub
mov
leave
inc
mov
fildll
lock
incl
inc
and
xchg
je
xor
mov
xchg
and
xchg
stc
inc
arpl
or
rclb
jg
sti
or
repz
cmc
les
push
cmp
adc
adc
cli
insb
jl
jae
push
sar
stc
lcall
inc
sub
and
loope
xor
shlb
mov
push
and
sub
jl
push
pop
or
mov
xor
stc
and
xchg
inc
sbb
and
loopne
dec
ljmp
pop
dec
mov
sub
movl
loope
sti
nop
add
push
out
mov
dec
fnsave
out
sub
ror
xchg
mov
pop
popf
add
stos
dec
inc
incl
sub
fwait
xchg
repz
lods
and
cmc
add
das
mov
imul
cmc
incl
jns
mov
enter
push
aad
sti
pop
xchg
pop
lods
int3
sub
ja
clc
decl
shrb
jl
lret
mov
mov
sahf
stos
call
in
xor
lsl
fmull
in
js
fwait
lret
inc
negb
and
int3
and
xor
cmpsl
push
push
push
sub
mov
icebp
pop
fimuls
jmp
cmpsl
fsubrl
aam
fisubrs
cmp
or
pop
sbb
push
sbb
adc
call
adc
jp
popf
cltd
pop
call
cli
xchg
insl
inc
sahf
or
call
mov
pusha
and
xor
dec
loop
ljmp
push
popf
out
in
aaa
jne
dec
sbb
hlt
add
lods
gs
inc
stc
xchg
push
pop
data16
call
clc
and
push
push
pop
push
sbb
xchg
ds
rorl
pop
or
out
jb
repnz
or
lods
adc
jmp
out
clc
jnp
push
mov
cmp
aaa
mov
mov
mov
int
in
decl
aad
push
dec
stos
std
cmp
sahf
pushf
cmc
mov
call
sahf
push
cmpsl
fdivrs
incl
cmc
cmpsb
dec
out
push
iret
fmulp
xchg
mov
and
and
idivl
and
xabort
mov
divb
lea
mov
xor
mov
jns
lret
xor
js
jo
jmp
stos
add
ljmp
xor
xchg
adc
insl
bound
push
loop
cltd
pushf
mov
sub
bound
xor
xor
xor
sahf
test
imul
fisubs
push
movsl
dec
jne
mov
scas
fnclex
pop
mov
sub
sbb
fnsave
pop
inc
xor
inc
ljmp
xor
lods
cmp
cld
inc
stos
ja
aam
ret
add
inc
pop
pop
cmp
jg
jne
pushl
xchg
jecxz
pop
inc
arpl
or
loop
push
xor
ret
pop
pop
ret
cmp
repz
es
dec
and
mov
or
xchg
inc
ret
arpl
sti
mov
ret
pop
lock
fwait
aam
jnp
ljmp
xor
mov
jns
pop
insb
jmp
movsl
lock
cltd
push
notl
jge
xor
cmp
jl
pop
ret
movsl
hlt
or
lea
arpl
mov
fwait
or
jbe
lahf
xchg
nop
inc
lods
add
fdivr
mov
shrb
mov
sbb
mov
stos
das
mov
loop
ret
sti
or
fstp
out
xchg
not
and
and
mov
push
jp
mov
jb
arpl
mov
decl
fcmovnu
or
xchg
mov
in
pop
shrl
push
lods
bound
push
pop
pop
fs
inc
mov
lret
insb
sub
ds
cmp
pushf
mov
jp
loop
ja
lcall
filds
bnd
xchg
mov
stos
pop
insb
xchg
mov
leave
hlt
xchg
jg
in
cli
mov
push
test
sbbl
test
and
xor
mov
mov
and
push
sbb
pop
lock
push
or
xchg
incl
es
pop
and
add
cs
mov
fadds
fildl
std
pop
cmp
jb
and
arpl
xor
insb
pop
adc
mov
lcall
sahf
xor
daa
aaa
hlt
mov
jae
por
add
popa
push
inc
es
xchg
jnp
pushl
std
inc
or
adc
push
mov
sarb
inc
adc
and
push
xor
std
mov
sub
ds
or
dec
sub
sbb
fldcw
in
fildl
repz
cmp
dec
in
movsb
out
test
push
push
mov
xchg
mov
mov
ljmp
sahf
aas
lock
mov
pop
cmp
xorb
or
cmc
fwait
repnz
sar
jmp
push
sahf
push
test
dec
adc
cmp
cld
add
jmp
imul
sbb
fdivrl
sbb
test
mov
ret
lret
imul
pop
icebp
xchg
jae
ss
fs
loope
scas
out
sbb
fdivl
jo
les
mov
jge
cmp
lcall
sbb
imul
inc
outsb
mov
xchg
inc
iret
sub
cmpsb
rorl
lahf
cmpb
or
mov
pop
inc
int
call
xor
orl
aaa
test
icebp
add
xchg
lcall
mov
inc
lcall
lret
xchg
push
imul
test
xchg
ret
sbb
cmp
mov
xor
fdivrs
ljmp
in
pop
cltd
outsl
sub
addr16
in
fisubrl
fdivp
out
and
test
gs
jmp
push
xor
xchg
insb
shll
jp
pop
push
stos
push
push
lahf
mov
push
cs
cmpsb
mov
cmp
ja
lcall
pop
clc
or
loop
cmpsl
cmpsb
or
mov
daa
hlt
sti
lcall
stos
xchg
cmp
sub
xchg
in
fs
mov
cs
mul
imul
in
rcr
adc
and
xor
lods
cs
inc
inc
lahf
bound
sbb
lret
xchg
jg
lods
imul
loope
popf
xor
lcall
ljmp
or
push
mov
fs
mov
cmp
cmc
adc
loopne
pop
lret
repnz
in
scas
xor
ljmp
jae
sbb
jg
fdivrl
sub
xchg
and
leave
lods
jne
mov
ljmp
imul
push
mov
stos
sar
ret
out
pop
adc
out
out
cmc
jmp
cmpsb
mov
mov
xchg
int3
loope
insl
inc
inc
mov
repz
jb
inc
cmp
mov
mov
gs
stos
push
add
repz
mov
xchg
rcl
mov
jp
jns
scas
push
ss
mov
sbb
push
mov
mov
sar
incl
js
mov
ret
repz
adc
repnz
xchg
dec
cld
xchg
dec
xor
and
pop
ljmp
aam
loope
and
popa
out
cli
jmp
pop
mul
mov
incl
adc
xor
adc
cmp
into
out
lods
jle
add
mov
push
mov
loope
jmp
cmpsb
call
cmp
push
jle
jecxz
lahf
dec
xchg
jl
pop
out
movl
pushl
sbb
in
push
jnp
dec
mov
addr16
xchg
jbe
mulb
scas
cli
incl
jecxz
push
gs
jnp
adc
push
div
call
lds
orb
neg
inc
push
mov
nop
into
stc
and
es
xchg
push
pushl
jp
xchg
cs
rcrb
or
shll
loop
cmpsb
sar
ljmp
ja
pop
shlb
push
mov
js
dec
out
adc
shll
shrl
push
mov
fwait
loop
es
jmp
int
inc
je
pop
aas
mov
jg
int
in
fcoml
mov
in
adc
aam
push
rcrb
adc
pop
je
mov
sub
push
mov
add
sub
dec
push
jg
fs
jmp
cmp
dec
mov
cmp
decl
stos
push
or
stos
inc
fldcw
xor
xor
imul
ljmp
xor
mov
mov
cmp
jge
or
pop
js
add
out
imul
call
lret
inc
idivl
jp
mov
and
ja
cmpsb
pusha
jle
push
mov
ljmp
es
andl
mov
loope
push
mov
cmp
adcb
scas
mov
push
out
push
inc
inc
inc
sbb
incl
ljmp
or
ja
pop
sub
out
std
sub
fcompl
dec
lock
movsl
loope
cwtl
sub
mov
je
add
sbb
icebp
inc
jne
nop
xchg
fldcw
sbb
dec
mov
dec
dec
dec
pop
les
jmp
test
sub
incl
mov
test
inc
fsubrl
fwait
sahf
mov
movsb
cpuid
mov
jbe
mov
xchg
rcrb
add
sub
mov
or
mov
fisttps
in
sbb
movsl
test
mov
cmp
popl
pop
daa
sub
popa
stos
and
das
push
rcr
cwtl
sub
pop
mov
jg
cmp
call
in
lods
adc
jmp
sub
dec
nop
adc
movsl
std
mov
mov
cmp
jp
fisttps
ret
inc
movsb
and
dec
push
lcall
jl
pop
jge
aad
call
inc
das
daa
sbb
add
movsl
enter
decl
and
pop
mov
je
hlt
add
sahf
in
shlb
call
lahf
lock
pop
cmp
xor
imul
fbld
cmpsl
sub
call
std
lods
call
fmull
mov
rcr
or
aas
aam
clc
incl
xor
pop
mov
in
clc
aas
pop
adc
rorb
ja
es
push
je
lcall
mov
pop
out
in
pusha
push
cmpsb
loope
sbb
lret
outsb
push
enter
mulb
push
imul
pushl
cmpsl
push
out
jmp
xchg
out
sahf
adc
jb
and
pop
mov
ret
idiv
jg
in
aaa
mov
call
lret
mov
inc
daa
leave
fdivr
scas
imul
pop
insb
pop
xor
in
decb
jo
add
test
cmpb
call
sub
xor
xchg
in
xchg
inc
push
scas
adc
inc
in
jne
or
and
scas
sub
incl
sbb
stos
dec
rolb
lods
xchg
shl
pop
mov
mov
adc
push
mov
mov
sti
fcos
jmp
mov
pop
movsb
cmpsl
pop
mov
xchg
push
xor
loopne
inc
fisttps
mov
sub
int3
lods
pop
jl
mov
add
je
pusha
cmp
pop
pop
add
shrb
sbb
dec
es
fimuls
xor
mov
push
lcall
mov
sub
mov
bound
loop
xchg
xchg
gs
es
pop
fldt
insl
decb
dec
or
pop
sti
jbe
nop
out
notb
gs
lds
pop
xor
inc
xlat
movsb
in
decl
cmc
imul
xchg
mov
jnp
inc
mov
jp
push
xlat
decl
pop
mov
mov
dec
imul
or
jne
add
ljmp
sbb
ss
fistps
cmp
sbb
mov
jecxz
dec
sti
push
jle
call
mov
inc
cld
inc
mov
fcomp
mov
lcall
mov
jge
les
xor
icebp
out
sar
incl
push
inc
mov
test
popa
xlat
movsb
inc
sub
test
sbb
inc
std
fistpll
mov
sub
adc
cmp
clc
sbb
pop
lahf
pop
pushf
fcmovnu
xlat
jge
out
les
push
loop
dec
add
xchg
decl
fwait
call
jl
dec
je
jae
pop
loop
in
xor
xorl
inc
js
jae
cmp
lods
or
es
test
cmp
pushl
push
pushf
fistl
jnp
andl
loopne
mov
cmpsl
rcll
cmp
fildll
or
test
lea
jnp,pn
call
push
xchg
xchg
hlt
popf
aaa
xor
push
jb
loope
ljmp
shll
aaa
fldt
in
js
in
sar
jg
cmpsb
jmp
push
mov
adcb
xor
jecxz
into
cli
call
fwait
in
sub
pop
add
loop
daa
pop
mov
sub
sub
lds
call
inc
ljmp
sbb
mov
sub
lock
daa
xchg
outsb
cmp
pushf
mov
decl
test
mov
test
inc
popf
xchg
incl
push
inc
pop
test
cmpl
and
mov
insl
sub
pop
add
jmp
mov
dec
lods
lahf
out
test
rolb
cmp
jmp
fdivr
ljmp
lret
cwtl
roll
sub
adc
in
daa
gs
xlat
add
cmp
cli
fdivr
ljmp
cmp
jo
xchg
mov
fldt
iret
and
xlat
ljmp
sub
call
dec
add
pop
sar
pushf
fnstcw
movsl
pusha
aam
dec
and
sbb
sbbb
adc
jmp
pop
sbb
mov
dec
pop
adc
lods
daa
sbb
rorl
test
xchg
call
popf
cmp
rcrb
leave
cli
adc
mov
pushl
ret
mov
xor
sbb
mov
adcl
std
decl
out
and
adc
mov
inc
sbb
adc
lock
xor
stos
inc
je
push
popf
ljmp
cli
lcall
push
jbe
mov
aaa
and
daa
mov
fsts
sub
push
gs
lea
setb
sti
pop
daa
jmp
push
sub
iret
clc
jg
cs
imul
add
in
mov
pop
ret
lock
pop
cmp
mov
ljmp
mov
add
sbb
iret
in
out
mov
or
dec
daa
insb
or
jmp
shrl
fcmove
popf
mov
idivb
sahf
pop
sbb
sbb
jb
iret
pop
adc
repnz
lods
jp
ss
dec
les
xor
cmpsl
jnp
and
outsl
sahf
daa
roll
cmp
aam
dec
int
mov
shrb
in
lods
cld
cmp
cld
call
out
and
jmp
push
pop
arpl
pusha
add
gs
aaa
jle
mov
test
sbb
pop
je
notl
mov
jmp
pushl
lahf
jne
xor
incb
mov
sub
insl
cmp
dec
mov
mov
in
or
mov
pop
pop
cmc
cld
out
jl
dec
in
inc
decl
pop
push
popl
orb
jo
imul
xlat
dec
rcrl
call
jo
lods
mov
dec
and
lahf
rorb
in
rcrl
mov
imul
stos
cmp
xchg
pushf
test
popf
daa
das
ja
and
mov
movsl
cmp
fcomip
add
sub
les
push
or
cmp
out
jno
test
data16
call
and
adc
push
add
pushl
mov
adc
cmp
xchg
add
xchg
or
aaa
or
movsl
lcall
aam
jo
sbb
sbb
scas
aas
jge
sbb
push
sub
xchg
inc
in
jmp
xchg
pushf
mov
jg
pop
or
mov
cmp
call
sbb
xor
or
sub
push
lods
jae
inc
ss
in
add
cmc
mov
fld
fdivs
or
js
scas
sub
stos
popa
adc
cmp
and
jmp
mov
cmp
fildl
movsb
out
movsb
insb
popf
or
push
push
ss
mov
decl
inc
cltd
jbe
jae
push
xor
gs
imul
xchg
or
icebp
mov
mov
test
mov
and
fbld
push
ljmp
popa
sbb
clc
mov
push
movsb
stc
sti
call
pop
mov
pop
and
sub
vpacksswb
inc
xchg
js
xchg
sbb
jg
sub
pop
add
jge
add
movsl
pop
pop
push
shld
and
pusha
std
loop
aam
ror
inc
dec
repnz
int
pop
popf
fildll
ss
shl
sub
lahf
in
into
xchg
and
dec
sar
or
and
icebp
out
push
cmp
pop
sub
pop
cmpsb
xchg
push
dec
sub
mov
pushl
jb
std
or
jmp
push
ficomps
insl
pop
test
jg
jno
hlt
mov
pop
mov
jne
pushf
jg
repz
or
xor
push
add
lcall
bound
pusha
mov
jbe
adc
mov
sub
dec
push
mov
jmp
mov
xchg
movsb
xor
pop
cwtl
loopne
jo
fs
add
mov
and
sub
call
sub
jo
imul
pop
arpl
fwait
repnz
ds
ds
jnp
xor
push
mov
popf
popf
imul
je
dec
incl
jmp
or
lock
or
pop
jl
jb
ret
mov
and
push
mov
sbb
repz
jbe
cs
mov
mov
int3
popf
add
cmp
push
shr
dec
mov
dec
lods
sub
aam
lods
sbb
xor
pop
aas
cltd
jg
xlat
call
int3
or
iret
jle,pn
add
ljmp
dec
arpl
mov
lods
and
mov
push
push
cmp
mov
jmp
push
mov
inc
pop
fisubrs
xchg
mov
incl
cwtl
in
gs
test
or
dec
adc
mov
mov
push
aad
incb
fcmovne
push
add
js
ljmp
in
lods
push
je
cmp
mov
ljmp
push
push
push
int
inc
lods
fs
aas
addr16
lcall
shll
cmp
aam
cltd
jp
stos
repnz
aaa
insb
aad
loopne
out
xlat
xchg
int
inc
dec
xchg
cmpsl
inc
nop
popa
subl
sub
cmp
jmp
aad
jns
in
mov
addr16
push
xor
cli
incl
pushf
push
mov
outsl
xor
lds
lret
fisttpl
pop
pop
sub
push
mov
xchg
hlt
cmp
mov
icebp
icebp
mov
mov
inc
sub
jg
test
sbb
xor
ja
cmp
xchg
jnp
adc
andl
imul
cltd
into
fs
fsubl
dec
scas
mov
push
es
aam
nop
cmp
clc
call
lods
mov
mov
inc
call
loop
es
sub
adc
testb
test
jecxz
hlt
outsb
stos
inc
add
cli
add
sub
ds
sub
cmp
mov
push
push
sbb
fcomip
xchg
fildll
scas
add
pushl
xchg
je
loope
xlat
add
add
fidivl
stos
daa
movsl
mov
or
adc
subb
cld
sahf
in
mov
inc
xor
add
sbb
sub
int
iret
scas
push
out
dec
push
movsb
mov
xor
xor
mov
dec
in
jmp
mov
or
pop
jmp
adc
lods
xchg
push
adcb
cmp
mov
push
pusha
sbb
lock
dec
mov
mov
dec
enter
sti
repz
mov
decl
jb
pop
or
push
out
inc
pop
mov
imul
shlb
mov
fistpl
pop
iret
mov
xchg
out
leave
push
sbb
mov
ljmp
iret
inc
jp
stos
mov
sbb
mov
cld
mov
xor
cmpsb
loopne
incl
jns
fldenv
add
leave
cs
or
das
in
lods
cld
mov
fcomi
pop
add
imul
movsl
aam
push
xorb
jbe
jmp
iret
or
sarb
insl
dec
ljmp
and
push
stos
pop
int
mov
jno
in
out
pop
add
adc
add
lcall
push
sub
xchg
enter
test
jns
mov
pushf
out
decl
sbb
ret
ret
pop
lock
xorl
aad
or
call
jge
mov
faddl
xchg
cmpsb
jo
movsb
dec
dec
in
dec
cmpsb
aaa
cmc
repnz
xchg
sub
cli
hlt
in
incl
lock
addb
mov
dec
lods
mov
mov
hlt
addr16
jg
lcall
jo
xchg
mov
repz
mov
push
jno
decl
lock
add
mov
pop
jns
mov
inc
jmp
movsl
es
jg
daa
jmp
xor
or
jae
dec
outsl
insb
je
lea
or
pop
jle
clc
jmp
movsb
lds
js
gs
xchg
sbb
fnstenv
adc
jp
adc
sub
inc
cmpsl
je
sbb
cmpsl
lret
cmpsb
cmp
cli
mov
call
xchg
push
stos
inc
pop
sarb
push
hlt
sbb
jmp
sbb
cs
call
popa
adc
pop
loop
xchg
sbb
les
xchg
or
push
pop
dec
popa
sti
in
jmp
push
cmp
add
rolb
cmc
push
push
inc
popa
xor
scas
icebp
lcall
xchg
gs
leave
mov
stos
mov
aaa
mov
xchg
insb
rclb
call
cmp
addr16
fwait
xchg
arpl
in
mov
fiadds
mov
test
cmp
dec
ljmp
lret
call
push
gs
icebp
decl
ss
push
nop
out
in
into
cli
jnp
decl
jl
jp
mov
ss
testb
or
dec
in
testb
icebp
jo
mov
mov
and
lock
daa
in
adc
lahf
sub
sbbb
push
test
repz
jg
cmp
ljmp
pop
stc
or
test
ret
mov
push
imul
xor
in
outsl
push
iret
fsts
decl
xor
or
xchg
fcos
ja
pushl
ficomps
shl
xchg
in
jle
push
inc
cld
inc
mov
cwtl
and
scas
xchg
inc
inc
testl
mov
adc
push
ret
enter
adc
jmp
cli
stc
enter
mov
mov
mov
dec
mov
sbb
lcall
pop
mov
fwait
sbbb
adc
enter
and
test
push
int
ss
decl
cwtl
les
cli
add
loopne
sbb
idivb
dec
cmp
kmovw
incl
mov
xchg
mov
adc
jnp
dec
fsubr
cli
loopne
sbb
repnz
lcall
cld
call
leave
mov
cmp
outsb
sbb
add
dec
jb
popa
xor
out
adc
push
sbb
je
inc
mov
pop
sbb
mov
adc
les
ljmp
push
loop
lods
fistl
je
das
xchg
push
dec
mov
pop
ret
sbb
jle
adc
pushl
aam
sub
ja
mov
or
sub
in
mov
xchg
xchg
sbb
dec
popa
inc
mov
addl
icebp
insl
movsb
add
lods
call
push
and
fildl
jae
ja
outsb
repz
ficoms
mov
adc
or
jl
ja
fwait
mov
call
std
dec
repnz
add
push
mov
mov
cmc
outsb
cmp
repz
test
pop
movsb
std
jmp
imul
fdivrl
insl
mov
and
test
fidivrl
pop
dec
cmp
pop
jg
ljmp
mov
pop
sbb
mov
xchg
sbb
stos
out
call
stos
push
jg
cmovno
mov
jo
adc
push
shrl
mov
dec
sub
push
cmc
loope
cmp
pusha
cmc
jnp
adc
inc
push
jg
pusha
mov
and
mov
mov
xor
cmp
xor
cmp
lahf
pop
sbb
outsb
dec
push
and
jg
es
or
fbstp
popa
out
fwait
xchg
in
and
sahf
adc
push
inc
mov
in
ljmp
inc
lods
dec
and
negb
jbe
pushl
sbb
push
aad
shrb
shlb
stos
pushl
mov
repnz
mov
xchg
lahf
jnp
mov
daa
push
and
jmp
ficompl
in
sbb
out
std
xor
or
jb
xor
lods
in
imul
rorb
iret
data16
es
xor
pop
lahf
sub
add
mov
pushl
mov
dec
jbe
adc
fiaddl
xor
pop
pop
adc
mov
addr16
aam
incl
lods
inc
bound
or
into
pop
jp
mov
test
mov
insb
rcrl
call
dec
lods
sti
rorl
repnz
fs
push
xor
dec
mov
cmp
mov
out
dec
into
jmp
jg
xchg
dec
push
mov
sub
add
add
cmp
xchg
ret
out
mov
add
nop
add
inc
insl
es
imul
cmp
push
sbbb
and
push
lods
xchg
pop
add
and
sti
popf
out
mov
gs
sub
mov
inc
inc
out
lcall
mov
push
adc
imul
inc
nop
call
outsb
movsl
rcll
add
jo
sti
push
call
jmp
jmp
cmp
jmp
pop
or
decl
leave
imul
lahf
and
xor
pushf
add
pop
das
inc
pop
lret
lret
sbb
insb
sub
insb
fdivl
mov
pushf
add
jae
sahf
cmp
test
into
popf
push
fcoml
mov
pushf
stc
inc
ds
push
into
xor
mov
xchg
mov
rcrb
movsl
hlt
lcall
lahf
data16
rolb
xchg
mov
jp
and
xchg
and
push
push
dec
and
clc
push
pop
and
cmc
in
mov
adc
and
cld
and
decl
fisubs
mov
in
dec
adc
jns
lea
fs
ljmp
mov
sub
mov
ja
push
ret
jg
sar
pushl
mov
jns
mov
cld
jo
mov
sub
sub
fidivrl
lcall
loopnew
or
lret
push
scas
movsl
xorl
ret
push
mov
xchg
sahf
mov
sub
dec
test
sar
lcall
in
xor
sub
stos
aam
push
inc
out
push
dec
cmp
jb
dec
clc
inc
iret
push
std
lcall
cmp
jae
jge
cs
push
cwtl
jns
push
jg
sti
ficomps
out
or
cltd
fcoms
call
or
jle
or
ljmp
add
fwait
std
add
mov
loopne
ret
sar
lcall
mov
mov
ret
jb
push
dec
mov
das
mov
cmp
stos
fisubrl
decl
mov
movb
push
pop
push
fs
stc
scas
xchg
stc
lret
pushf
in
xor
test
ljmp
lret
insl
xor
jmp
cltd
cmc
lret
lcall
push
mov
mov
inc
mov
sub
cmp
pop
push
inc
mov
out
mov
incl
lea
pop
lret
sub
fsubrp
ljmp
dec
xlat
xor
push
sbb
or
or
ljmp
or
scas
add
lods
lock
or
jge
xchg
flds
arpl
xchg
out
jp
mov
dec
lods
mov
fcomip
add
nop
cld
ljmp
les
rcrb
lcall
mov
mov
int3
and
and
xchg
xchg
fistps
lea
pushl
xchg
repnz
xchg
popa
push
jae
std
pop
mov
lock
jg
jp
gs
cmp
repnz
push
mov
ja
data16
aad
bound
daa
or
in
jno
lods
mov
test
adc
insl
lcall
or
clc
mov
cli
jmp
aas
or
and
sub
pop
fmul
mov
leave
cmp
xchg
inc
insb
push
mov
pop
mov
mov
sarb
jmp
int
test
push
xor
imul
mov
fcmovbe
std
sub
icebp
stos
fwait
ja
loopne
mov
mov
mov
push
repnz
xchg
cli
sub
decl
es
jns
imul
mov
xchg
dec
cmp
mov
mov
add
ds
ljmp
cmpsl
inc
pop
xor
cmpsb
stos
cmpsl
or
jo
adc
mov
loop
pusha
mov
decl
inc
cmc
mov
shrl
outsl
sbb
and
dec
jnp
mov
xchg
shl
xlat
inc
mov
mov
mov
decl
aad
dec
dec
faddl
in
jns
in
out
adc
addr16
rcrl
decl
bound
movsl
dec
xor
test
and
or
inc
dec
fiadds
aam
cmpsb
incl
add
cmpsl
insl
pushf
pop
xor
call
mov
adc
push
add
push
mov
addb
fmull
pop
addr16
and
lods
add
add
cmp
dec
out
addr16
cmp
adc
fwait
mov
dec
daa
mov
ss
and
rcrl
data16
and
ljmp
test
paddusb
xchg
call
cltd
mov
stos
sub
addb
lcall
mov
mov
mov
lcall
aam
adc
add
pushf
decl
adc
jmp
outsb
lods
dec
call
sti
iret
jmp
call
out
mov
xchg
out
add
psubb
ljmp
jle
out
rcrl
sti
inc
arpl
sbb
sar
lcall
std
cmp
mov
xchg
push
sub
imul
lcall
pop
mov
movsl
ret
jmp
adc
mov
pop
cld
fcomip
sub
into
loop
test
pop
inc
nop
adc
decl
leave
jg
cmp
pop
xor
jb
jno
cltd
neg
and
cmc
sbb
pop
dec
pushl
cs
jbe
and
xchg
sbb
lock
mov
and
push
jp
and
int
jmp
rol
bound
cld
pop
jne
lods
gs
ljmp
sub
call
lods
fstpt
sahf
cmp
mov
stos
lock
inc
aad
mov
xor
jg
aad
lahf
jge
sub
sbb
jp
push
and
add
dec
mov
mov
pop
push
andl
fcmovnbe
ljmp
insl
jp
lcall
cmp
mov
mov
sarb
rorb
cmp
cltd
pop
jb
lods
dec
and
adc
pop
pop
loopne
ljmp
lea
cmp
pop
loope
adc
mov
das
out
ret
jge
imul
mov
xor
jnp
sti
dec
notb
int
mov
aad
adc
adc
nop
dec
ja
pop
inc
mov
cli
adc
cmp
pop
jno
add
cmc
xor
sti
mov
out
icebp
push
lcall
lea
dec
clc
mov
xchg
ret
inc
or
rcll
adc
repz
adc
rorl
call
rorb
pop
xorb
add
mov
mov
push
into
cmpsb
sarl
mov
cmp
pop
lods
mov
into
add
push
pusha
pop
out
dec
into
lret
adc
mov
fcmovnu
mov
ljmp
and
fildl
in
mov
jo
or
jg
sub
xchg
pop
clc
in
push
and
pop
mov
fs
mov
cmpsb
sbb
inc
pushl
xor
arpl
mov
ret
out
stos
sub
shl
clc
and
insl
push
sub
lcall
jb
push
xchg
jge
ljmp
insl
mov
fistps
xchg
mov
sub
call
inc
mov
cld
push
pop
scas
inc
adc
push
sub
loop
fs
gs
fdivrl
and
cmp
jmp
pop
lods
mov
stos
arpl
cmp
jbe
cmc
pushf
fwait
xor
or
movb
cltd
call
hlt
daa
pop
popf
push
out
push
jg
popf
xchg
jle
mov
xchg
loopne
lcall
std
aad
cmp
cmp
mov
jo
jl
xchg
ljmp
and
sti
sti
or
aas
add
pop
fidivl
movsl
jnp
popf
scas
cmp
adc
inc
lcall
or
xlat
lret
mov
orl
adc
mov
pop
loop
pop
loopne
ds
jp
decl
sbb
mov
rcrb
stos
fsubr
rcrb
sub
ds
lcall
xor
gs
bound
cld
push
jmp
movsb
in
jl
mov
cmp
xor
imul
pop
jmp
rol
jns
xchg
movsl
pop
inc
mov
pop
lahf
mov
push
clc
inc
fldenv
inc
stc
les
je
fs
jne
xchg
push
dec
bound
lock
cld
xchg
daa
popf
fimull
addb
add
sbb
decl
das
outsl
out
mov
pop
sbb
fcmovbe
mov
or
fisubl
outsb
lock
scas
ja
jl
adc
jmp
stos
das
cld
dec
cli
es
mov
inc
cmp
or
ljmp
xchg
scas
cwtl
sbb
int3
pop
hlt
ja
dec
mov
cmp
rcrl
clc
cmp
xchg
jp
clc
ds
adc
loop
stc
fstpl
mov
inc
int3
pop
inc
js
jmp
xchg
incl
mov
sbb
cld
loop
jge
rcll
lcall
jmp
xor
push
mov
mov
adc
int
pushl
aaa
ret
mov
mov
adc
cmp
jge
sbb
push
mov
dec
add
fcomip
pop
rcrb
adc
push
pop
sahf
imulb
addb
mov
clc
incl
loope
outsl
imulb
mov
loop
ljmp
pushl
lock
test
lcall
pop
scas
mov
push
ljmp
add
mov
add
push
notl
mov
jo
cmpsb
shll
mov
shrl
call
pushf
push
lcall
lcall
mov
stos
sbb
jno
mov
shl
pop
cmp
enter
testb
decl
repnz
xchg
xorb
xchg
jbe
test
mov
push
aam
pushl
rcrb
aad
pop
cmp
adc
xlat
les
inc
je
mov
cmp
loopne
cmc
in
push
sbb
add
ljmp
mov
repz
jg
xlat
push
iret
shlb
std
ret
in
or
call
jmp
sub
test
mov
mov
fbld
pop
cmp
test
fs
ret
push
aam
les
push
hlt
sub
icebp
sub
incl
in
gs
cmp
jl
stos
cltd
rol
or
pushl
ds
orb
push
movsl
in
mov
jecxz
cmp
pop
jecxz
xor
js
icebp
push
lea
jg
sarb
jle
add
mov
ja
jo
pop
sub
addb
add
xchg
leave
xor
loop
mov
cmp
pusha
cmp
arpl
jmp
call
mov
repnz
ffreep
sbb
mov
aad
popf
sbb
jno
pop
incl
lock
xor
cld
sbb
scas
mov
mov
imul
rorb
pop
dec
cmp
enter
jp
out
jns
mov
push
call
out
jns
divb
hlt
mov
mov
lcall
jo
scas
out
and
iret
or
mulb
test
lods
fstps
dec
lcall
adc
inc
inc
scas
ret
xlat
add
repnz
cmp
incl
fscale
rorb
out
mov
jmp
test
popf
lcall
ljmp
sbb
mov
fiaddl
xor
cmp
mov
jle
mov
pop
jle
push
insb
mov
decl
mov
addr16
daa
dec
insl
xlat
punpckldq
and
fcompl
pushl
in
adc
lock
mov
int
adc
fsubs
or
js
inc
inc
dec
out
repnz
es
inc
jp
into
sti
mov
mov
fs
orl
pop
mov
ljmp
fisubrs
outsl
sbb
repz
inc
fcmovnu
xchg
dec
je
mov
bnd
mov
push
outsb
mov
sub
pusha
xorl
decl
popa
pop
js
lcall
sbb
ret
push
sub
and
sub
addr16
sarl
nop
cmc
ljmp
bound
test
out
adc
xchg
jge
sbb
arpl
push
adc
inc
mov
dec
mov
scas
push
ror
call
iret
fdivl
push
fcomip
fxam
inc
out
mov
retw
call
xor
jo
int
mov
decl
outsb
inc
inc
out
mov
or
jl
scas
push
mov
push
insl
stos
sub
shll
clc
push
push
xor
decl
cmpsl
sbb
fs
mov
into
mov
ds
test
pop
test
bound
sar
adc
sub
dec
in
push
jo
stos
decl
call
jbe
call
cmp
nop
cmp
add
pop
es
rol
das
adc
in
and
push
fsubrs
ret
repz
scas
mov
adc
mov
insl
in
jmp
aas
jecxz
inc
push
subb
mov
add
add
das
jl
push
movsb
push
sub
popf
jb
jmp
add
push
xorl
lods
sub
fcmovu
push
mov
mov
lods
push
mov
jg
call
jle
push
sub
lea
and
movsl
push
adc
mov
in
ljmp
scas
lcall
push
imul
enter
pop
mov
add
aaa
mov
fwait
cmp
test
loopne
xor
ror
in
out
adc
decl
fcomip
dec
pop
mov
sub
shrl
mov
data16
out
cmpsb
scas
fbld
inc
out
test
sbb
dec
imul
jl
cwtl
jg
cmpl
lock
push
mov
aaa
outsl
cli
ljmp
pushf
add
fadds
mov
loopne
sbb
mov
fmuls
and
call
pop
lcall
dec
xchg
push
cmp
mov
lret
mov
stos
cmp
adc
pushf
push
jle
inc
and
lret
and
jmp
pop
jecxz
scas
fmull
pop
or
test
mov
addr16
lods
xchg
pop
pop
and
aad
sub
xor
in
xchg
into
outsl
les
out
subl
loope
adc
push
pusha
mov
push
jo
or
aaa
cmp
or
cmp
aad
cmp
xchg
xor
nop
mov
inc
push
mov
shl
adc
filds
dec
pushf
xor
push
repz
aad
lea
push
test
bnd
insl
sbb
inc
idivl
dec
insl
sbb
movsb
mov
loopne
jecxz
sbb
or
cld
inc
pop
js
test
ljmp
enter
mov
shrl
test
pop
imul
repnz
int
mov
inc
mov
movl
pop
add
movsb
add
add
push
sub
push
mov
stos
lods
mov
movsb
mov
or
jmp
and
popf
data16
test
rcll
and
ss
adc
mov
popf
jae
lcall
mov
mov
mov
or
bswap
cld
cmpsb
adc
clc
loope
add
mov
lcall
test
jle
jno
fcom
test
movsl
jl
adc
fcmove
sar
pop
leave
out
test
loop
mov
adc
int
inc
in
and
pop
jnp
jmp
inc
xchg
jg
sub
mov
jbe
adc
sahf
mov
mov
jle
decl
stos
aam
popa
stos
es
pop
in
cmp
add
pop
mov
add
test
add
insb
subb
mov
lcall
cmp
push
enter
dec
mov
xchg
testl
xchg
mov
mov
sub
orps
sbb
aam
call
jns
add
push
jne
push
std
jp
pop
movsb
bound
fldt
pop
push
jp
or
add
mov
popf
lock
scas
ret
call
pop
ja
push
ss
inc
pushf
insb
inc
jmp
or
das
pop
jge
push
lret
xor
pop
dec
out
and
ss
dec
leave
repz
pushl
outsb
pop
std
mov
sbb
sbb
ljmp
jmp
jns
push
cli
and
dec
into
lea
sub
push
sarl
sub
push
les
xchg
mov
cld
dec
inc
pusha
or
or
dec
movsb
insb
push
mov
add
adc
jge
jbe
pop
nop
ss
mov
ljmp
incl
cmpsl
cmp
in
lock
movl
pop
adc
fstpt
mov
stc
mov
sub
dec
jnp
test
jbe
sbb
scas
jbe
xlat
hlt
sbb
jg
out
jbe
xchg
xchg
xchg
sbb
mov
pop
xchg
imul
xchg
js
push
add
decl
test
ret
addb
jbe
add
out
fiadds
or
int
pushl
mov
add
outsb
cmc
fnsave
js
jne
lods
jecxz
push
xchg
cvtps2pd
decl
pushl
jge
mov
fadds
adc
push
sbb
sbb
decl
out
sub
xchg
fcomps
inc
pushf
xor
fld
sub
sbb
xor
mov
in
mov
cltd
add
mov
inc
aad
mov
decl
mov
xchg
cli
sub
or
rorb
rolb
jmp
and
mov
dec
ss
ret
inc
out
in
dec
jl
stc
lret
inc
fldl
ljmp
bound
sub
jle
mov
int
or
aas
leave
loop
cmpsb
pop
aad
sbb
sti
xchg
xor
test
mov
out
shrw
pop
cmp
sub
decl
out
daa
mov
out
stc
out
lret
xchg
pop
push
xchg
cmpsl
mov
mov
lcall
sbb
sub
out
xor
pop
subl
call
sbb
andb
pop
pushl
mov
cmp
adc
popa
or
jbe
iret
and
xchg
xchg
jns
adc
pop
loop
cmp
repz
test
mov
loop
mov
fistps
sub
push
rcl
fsubrp
xchg
cli
ljmp
cwtl
cmp
sbb
xor
lock
in
jle
ljmp
shl
addr16
jo
push
in
jmp
push
or
xor
sbb
fbstp
test
bound
imul
mov
sub
ljmp
sbb
cmp
std
lock
pop
adcb
aas
xchg
inc
mov
mov
xchg
sbb
jb
jo
subl
jne
pusha
adc
stos
jae
jge
arpl
cs
mov
xchg
movsb
aas
hlt
stos
sar
sub
mov
cltd
call
outsl
cltd
mov
mov
cli
adc
jbe
rcl
xchg
rorl
xchg
fwait
xchg
incl
push
jmp
mov
push
cmpsb
cwtl
ja
sbb
jmp
cmp
imul
call
inc
mov
fmull
mov
mov
or
sbb
iret
ljmp
xchg
in
lret
bound
pop
mov
and
out
es
adc
mov
jg
dec
out
jle
sbb
and
and
pop
addr16
or
dec
sbb
ja
lcall
movsl
shrl
adc
mov
mov
and
xchg
call
cmpsl
xchg
fwait
test
dec
mov
lret
add
push
add
mov
mov
jecxz
mov
ds
call
jo
test
mov
sub
test
push
int3
xchg
std
pop
test
cmc
push
sbb
push
stc
xchg
cmpl
pop
cmp
mov
ljmp
push
ljmp
cltd
mov
inc
jmp
fnstsw
push
call
lock
js
lods
das
push
xor
repz
mov
or
enter
mov
repnz
dec
mov
sub
xor
cmp
xor
mov
xor
and
mov
fnstenv
push
sbb
push
inc
sbb
mov
pop
decl
mov
and
xor
lret
int3
pop
mov
jp
mov
shr
loopne
inc
cmp
jmp
rorb
mov
inc
adc
in
dec
cmp
mov
int
lret
cli
ljmp
lock
ljmp
fidivl
in
stos
mov
pop
jge
and
rorl
and
scas
repnz
dec
add
jns
lods
cmp
test
ficompl
pop
mov
decl
and
into
jns
mov
dec
push
sahf
fldcw
hlt
dec
cld
or
repnz
sbb
xchg
es
decl
or
jbe
fsubrl
add
dec
insl
pop
jb
pushf
inc
or
movsb
imul
daa
pushl
lcall
sbb
mov
add
imul
repz
call
movsl
mov
inc
iret
pop
or
inc
fcmove
hlt
aas
ljmp
add
pop
pushl
cmp
xchg
cmpsl
fnsave
add
jl
fldl
jno
push
dec
sar
js
jle
fdivrl
jb
sub
scas
in
aam
pop
inc
jbe
push
push
xchg
leave
fstps
stos
mov
incl
or
pop
out
pop
loope
jno
arpl
dec
mov
mov
mov
lcall
ret
push
adc
rcrb
pushl
int3
push
xor
mov
outsl
add
js
cmp
loope
push
adc
xor
pop
lret
cs
jmp
in
jecxz
jns
jp
jns
jne
inc
test
sub
mov
in
ljmp
popa
test
rorl
push
push
sbb
out
test
inc
stos
push
jns
rcrl
pop
cld
push
and
push
lret
mov
shr
mov
xchg
add
xchg
pushf
or
mov
sar
ss
xor
mov
lcall
jge
jge
cmp
dec
popf
jae
jmp
pop
jg
and
add
mov
jbe
faddl
int3
test
cltd
daa
xor
faddp
pop
cmp
js
pop
mov
inc
repz
mov
sar
addb
pushl
ja
pop
fistl
push
imul
mov
mov
mov
decl
mov
adc
xchg
mov
cmp
call
loop
outsl
rcll
gs
in
aaa
xchg
cmpsb
push
cld
ja
fnsave
or
push
push
push
bound
xchg
add
mov
mov
addr16
sub
push
jg
cltd
shll
mov
arpl
push
lea
xchg
icebp
call
call
mov
xor
std
popa
push
dec
or
movsl
xor
push
shl
lcall
xor
arpl
repz
lea
jge
mov
jmp
decl
mov
adc
std
xchg
movsb
dec
jp
out
mov
shlb
lods
lock
sbb
pop
cmc
scas
mov
pop
jne
scas
ds
jb
sarb
call
std
cmp
aad
iret
jns
out
test
outsl
jecxz
mov
xor
movsb
or
das
cli
pushl
fldt
xchg
fcoms
xor
in
mov
and
dec
in
scas
mov
test
adcl
lahf
jnp
mov
test
mov
jnp
lcall
sbb
int
clc
and
jle
mov
scas
lret
fidivs
cmp
test
mov
scas
aaa
movsl
rcl
inc
sub
movsl
add
iret
mov
addb
or
pop
movsb
mov
add
insl
mov
and
ja
or
js
push
jg
add
pop
jg
insb
dec
push
js
add
pop
dec
orb
lods
add
inc
mov
adc
adc
mov
push
nop
scas
pop
sub
jg
lds
insl
inc
add
nopl
aad
sahf
push
scas
dec
mov
push
or
pusha
or
jno
mov
jnp
xchg
movsl
push
daa
add
dec
jnp
fists
push
and
cs
push
movsb
iret
cmc
jnp
movsb
inc
scas
push
and
stos
push
and
push
test
into
push
and
imul
push
inc
pop
pop
add
adc
pop
sbb
mov
sbb
add
ljmp
push
add
push
ds
les
adc
adc
adc
fs
mov
add
insb
or
lret
imul
imul
imul
mov
mov
jbe
fnstenv
data16
fdivs
pop
stos
pop
stos
mov
clc
clc
insl
sti
out
ss
add
jo
mov
push
shll
add
outsl
lods
loopne
insl
push
shll
fidivrl
iret
outsb
or
push
ss
mov
sbb
jns
out
jge
mov
mov
xorb
ljmp
movsb
push
add
mov
jl
stc
mov
shlb
mov
lcall
add
jne
shr
data16
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
mov
push
data16
inc
ds
scas
cmp
push
push
shlb
mov
outsb
outsl
stos
aas
jne
fsts
xlat
jne
add
push
jbe
fdivs
push
aad
push
xlat
ja
aaa
in
add
js
push
jns
push
jp
jp
or
addr16
push
fidivrl
sarl
mov
add
add
cmpb
je
ret
insl
pop
lods
inc
jmp
ljmp
xchg
scas
insl
call
push
pop
cs
xchg
xor
xchg
push
fldl
pop
xor
idivb
aaa
push
lcall
push
cmp
in
ret
addr16
pushf
cmp
popf
xchg
popf
aas
push
sahf
xlat
outsb
push
inc
lahf
mov
mov
jle
jecxz
push
imulb
movl
out
sahf
xlat
out
push
hlt
clc
stc
cli
out
sahf
sti
cld
std
incb
jecxz
arpl
ss
lods
adc
add
jo
imul
fs
add
pop
add
pop
mov
add
or
or
add
mov
fdivrl
add
add
add
sub
or
outsl
xchg
aas
fldt
pop
or
test
test
pop
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
add
int3
adc
lods
add
pop
pop
add
stos
femms
lods
lods
pop
mov
insb
pop
push
scas
add
scas
insl
lods
pop
add
pop
adc
and
adc
sbb
mov
scas
scas
scas
scas
sbb
mov
mov
fcompl
and
mov
or
mov
push
add
push
and
cmp
and
mov
mov
pop
and
mov
and
add
dec
sub
cmp
sub
stos
in
mov
mov
xchg
sub
pop
push
es
pop
and
cmp
pusha
fwait
dec
pop
cmp
std
jg
fistpl
cmpsb
add
mov
pop
xor
data16
pop
pop
or
or
add
out
jle
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
fidivrs
push
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
incl
sub
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
addr16
dec
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
inc
jmp
mov
pushf
fwait
lcall
mov
jle
int
mov
inc
xchg
push
dec
ja
jns
dec
push
bound
jg
fwait
push
js
imul
add
mov
pop
jg
xor
push
mov
mov
orb
pop
sub
mov
inc
movsb
adc
idiv
jge
jb
mulps
add
push
mov
mulb
cmpsb
push
mov
xor
xor
ja
push
ja
push
clc
divb
cs
xor
mov
fnstsw
add
mov
and
push
mov
ds
pop
xchg
jo
push
inc
mov
cmp
mov
in
das
clc
insb
inc
add
jae
xchg
jp
inc
dec
popf
fbld
mov
aaa
mov
add
xchg
jb
lods
std
add
push
bound
mov
mov
jg
jns
push
sahf
mov
insb
add
mov
into
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
mov
sti
dec
movsb
jae
add
jb
shll
outsl
inc
pop
or
push
pop
adc
pop
xchg
imul
lcall
outsb
scas
divb
out
mov
dec
push
add
ja
sahf
jbe
in
daa
mov
fistpl
imul
stos
push
add
in
pop
jmp
add
js
mov
data16
out
test
shrl
insb
pop
outsb
push
outsl
clc
xchg
ja
ror
push
ds
jno
add
jge
or
xchg
xchg
fisttpll
lock
mov
mov
hlt
fisttpl
mov
add
test
add
push
loopne
iret
sahf
mov
xchg
add
jb
out
in
addr16
mov
jle
or
jecxz
or
repz
jle
aad
push
divb
fildl
adc
push
in
jge
dec
adcl
sbb
addl
test
test
sbb
test
in
shll
mov
push
xchg
nop
and
out
xchg
or
in
xchg
lock
sub
sub
divb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
sbb
push
cmc
sahf
xor
lcall
fcmovb
out
pushf
cmp
aam
rcrb
jle
push
cmpsb
scas
jo
test
sahf
add
insl
adc
into
shll
pop
mov
mov
int
mov
mov
sarb
dec
rcr
rcl
mov
movsb
pop
adc
ret
data16
add
addr16
cmp
out
je
inc
jne
and
sbb
add
mov
femms
or
or
mov
inc
sbb
es
push
adc
push
add
nop
add
adc
ds
add
enter
mov
adc
sbb
xchg
push
mov
cld
sbb
mov
push
add
and
loopne
ds
push
imul
sub
scas
add
and
insb
xor
iret
adc
cmp
sub
mov
sbb
inc
mov
sub
scas
cmp
inc
jle
ficompl
xor
dec
popf
imull
or
dec
cmpsl
jge
lods
aas
adc
ds
xor
dec
fidivs
cmp
test
mov
ds
divb
xor
pop
mov
clc
std
mov
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
inc
dec
test
mov
mov
ds
xor
sub
sub
sub
sbb
add
add
add
ss
and
inc
mov
push
push
push
push
push
imul
sar
jl
push
push
imul
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
decl
je
xchg
jns
jle
addl
stos
cli
jno
outsl
outsb
pushf
sti
lds
pop
daa
mov
adc
addb
add
add
incl
or
add
cmc
repz
dec
xor
sbb
add
add
add
incl
xchg
pop
cmp
test
add
mov
add
outsl
fstpt
fstpt
push
mov
fnstsw
repnz
test
adcl
gs
jecxz
pushf
sub
outsl
scas
negb
in
lcall
or
sarw
or
jae
std
jg
enter
xchg
add
mov
mov
jmp
mov
add
mov
out
es
nop
sub
jbe
sti
push
sub
nop
sub
xchg
xor
insb
xchg
outsb
lcall
leave
jbe
fwait
in
testl
mov
shlb
iret
push
inc
clc
cltd
int
loopne
push
std
into
popa
adc
mull
fstps
out
xchg
add
test
jg
jle
add
int3
add
nop
or
rolb
cld
pop
repnz
dec
dec
dec
dec
dec
add
pop
add
push
mov
inc
decb
add
cmp
adc
dec
or
add
sti
arpl
inc
add
or
pop
pop
xrstors
inc
push
dec
sbb
inc
idivl
in
adc
inc
inc
adc
sbb
dec
add
dec
adc
ljmp
dec
sub
cmp
cmp
cmp
cmp
daa
and
sbb
pushl
mov
and
add
dec
ss
xor
sub
sub
inc
in
and
add
mov
pop
mov
ss
mov
mov
mov
mov
sbb
pop
add
outsb
mov
push
ds
fwait
or
out
bound
add
or
enter
mov
jns
outsl
mov
cmpsl
lods
dec
xor
pop
mov
jmp
sub
sbb
inc
shll
pop
xor
or
mov
es
fidivs
xchg
sarb
daa
iret
les
in
lock
shll
hlt
xorps
add
push
jg
lock
sbb
or
push
outsl
pop
sub
shrb
push
or
rcrl
inc
mov
mov
lods
push
out
cli
mov
cmp
ret
cli
fists
xor
add
pop
jg
enter
addr16
or
test
push
xchg
orb
sti
jg
shll
mov
scas
insl
rcll
inc
dec
sti
jg
pusha
adc
add
ret
jg
adc
and
call
push
les
jg
cld
jg
lods
add
cld
bound
and
inc
jo
cmpsb
std
ja
jg
or
push
or
inc
leave
add
inc
mov
fs
pusha
mov
mov
adc
lret
andl
add
add
test
sub
xchg
xor
mov
jg
xor
lret
xchg
add
fcomps
add
jg
lods
add
xchg
jbe
mov
add
jmp
sbb
scas
incl
add
incl
stc
mov
and
imul
pop
mov
andl
scas
jle
and
pop
or
push
xor
jg
rolb
jg
shlb
cmp
push
push
push
pop
sbb
add
push
mov
cmpsb
incl
adc
jg
ss
les
inc
pop
add
mov
ljmp
call
ljmp
stos
insl
in
popf
testb
pop
add
daa
aas
xor
mov
pop
pop
add
in
push
pop
pop
jle
add
xor
push
rolb
sub
or
lahf
mov
pushl
push
jle
push
dec
xchg
push
bound
add
mov
mov
insl
iret
das
pop
daa
push
arpl
xchg
popa
das
les
push
mov
insl
xlat
out
mov
decl
dec
push
and
pushl
lds
ljmp
sub
jle
jle
and
or
push
inc
into
push
fnstenv
add
fimuls
push
jne
pop
push
jbe
inc
fisubl
test
push
jnp
push
jp
mov
or
push
js
dec
jbe
pop
jne
mov
fdivrs
into
pop
es
push
outsb
aam
jne
ljmp
call
or
lcall
outsb
ss
decl
sub
je
jmp
xchg
mov
inc
subb
jns
fiadds
test
push
push
mov
insl
mov
sahf
inc
out
nop
popf
adc
mov
xchg
mov
mov
inc
push
pushf
cmp
mov
pop
cmp
cmpsb
test
xchg
xor
sub
fldt
out
nop
sub
nop
daa
ss
cs
outsb
repz
shlb
lcall
push
incl
incl
jg
sbb
cmpsl
dec
pop
fnsave
xor
decl
sbb
sahf
data16
ss
rcl
push
or
push
add
pop
ja
jbe
or
dec
push
xchg
movb
mov
test
cmpl
divb
mov
add
add
in
adc
and
dec
adc
mov
push
insl
sbb
add
andb
movsl
and
mov
or
mov
push
repnz
fistl
negl
orl
lea
jmp
or
imul
mov
sbb
xchg
xor
ljmp
adc
pop
cmp
cmovb
push
icebp
imul
push
in
add
mov
add
cmpb
decl
jbe
xor
out
pop
idiv
mov
dec
sahf
mov
popf
or
sbb
inc
push
call
add
cmp
sti
xchg
jge
adc
std
into
jmp
syscall
mov
arpl
call
incb
mov
or
xchg
call
lcall
or
mov
sub
daa
cld
pop
das
mov
cld
lcall
jmp
sbbb
out
add
push
jbe
adc
lcall
or
mov
sbb
sti
cmovno
test
inc
fsin
incl
ljmp
ljmp
or
mov
sahf
sub
data16
inc
xor
or
sbb
sbb
sub
push
leave
jae
outsb
decb
mov
mov
arpl
mov
mov
adc
enterw
adc
and
out
montmul
cmpsb
xchg
mov
push
sub
xchg
pop
dec
ljmp
or
push
mov
push
ljmp
add
outsb
fdivrp
push
sub
mov
sub
pop
sub
push
std
incl
imul
push
mov
jbe
xor
cmpsl
cld
pop
stc
packsswb
leave
sub
inc
test
xlat
jg
cli
dec
mov
loop
add
xchg
int3
and
movsb
push
xchg
decl
call
incl
fcmovbe
ficoms
inc
xorps
aaa
mov
cmp
shll
mov
push
dec
sahf
movsb
testl
call
adc
push
insb
mov
ljmp
lahf
inc
inc
push
sbb
inc
pop
es
mov
aaa
push
pop
sahf
movsb
dec
push
stos
int3
jnp
fwait
push
popf
inc
cmpsb
dec
dec
inc
negb
dec
mov
shlb
int
insl
push
shrb
rcl
outsb
shrb
fwait
dec
mov
jb
inc
mov
push
iret
insl
jmp
daa
outsl
pop
imul
push
push
dec
stos
xchg
dec
push
cmp
lcall
xchg
dec
dec
pop
add
adc
push
repnz
jmp
insl
popf
cmp
aas
decb
xor
fs
xor
data16
leave
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
jnp
leave
cmc
xchg
ja
dec
dec
sar
pushl
and
incl
int3
jb
test
ds
inc
or
neg
je
aad
or
faddl
dec
fstpt
push
jnp
jp
fnsave
testb
jl
or
jl
add
movq
es
jbe
fwait
cltd
std
jle
repnz
push
dec
push
dec
repnz
repnz
jae
fistpll
pop
fidivrl
push
mov
jnp
jge
hlt
in
and
cli
int3
outsb
nop
negl
and
shll
pop
add
push
or
jne
push
adc
adc
or
imul
cmp
jnp
lahf
dec
es
incb
in
inc
and
orb
call
in
xchg
out
push
sub
iret
outsb
test
outsb
out
mov
cli
pushl
or
clc
push
idiv
push
outsb
sbb
jb
sub
jg
mov
icebp
dec
pop
fildll
jno
sub
jg
sub
je
daa
jg
mov
sub
xchg
pop
ja
loope
xchg
sub
in
cld
jp
es
xchg
filds
push
jo
incb
out
mov
jg
and
in
sarb
sub
lods
ja
dec
and
nop
sahf
jg
jge
idiv
sbb
test
fsub
pop
jge
jmp
int3
jge
push
and
arpl
fiaddl
nop
fidivrs
arpl
clc
jbe
inc
jp
lods
mov
push
pop
push
pop
test
push
pop
or
scas
call
ljmp
clc
mov
jp
int
push
jns
shl
sub
mov
jmp
ja
mov
xchg
jmp
mov
push
xchg
mov
lock
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
mov
push
add
ljmp
adcb
xlat
push
cmovno
adc
adc
xchg
dec
adc
add
imul
ja
sbb
movb
sub
sarb
iret
or
popa
pop
dec
aad
mov
jnp
clc
push
lret
adc
dec
add
xchg
sahf
push
push
les
mov
pop
mov
pop
push
sbb
push
dec
jae
jle
push
and
sbb
push
sbb
ljmp
sub
push
call
adc
xor
push
adcl
add
rcr
adc
nop
jle
push
sbb
and
or
or
dec
push
push
adc
jb
gs
xor
pop
jae
lea
pop
and
push
dec
mov
or
dec
push
ljmp
imul
ljmp
mov
insb
push
ss
das
and
out
sbbl
xchg
lock
test
push
pusha
inc
jbe
sti
out
push
imul
push
popa
imul
outsl
jb
nop
jo
xchg
cmp
jge
jg
inc
hlt
jb
fisttpll
pushf
inc
call
jbe
sub
rcll
adcb
push
out
sub
sbb
push
xor
mov
test
push
dec
xchg
lea
fadds
sbb
fimuls
add
outsl
sbbb
cmc
inc
push
repz
mov
sub
or
popf
mov
dec
in
cltd
jg
shll
sahf
lret
gs
adc
pusha
inc
cmpsl
jmp
js
inc
mov
jne
addr16
jge
std
outsb
jbe
pop
and
push
pop
mov
stos
inc
inc
mov
jo
push
add
testl
in
mov
ljmp
pusha
or
mov
push
int
jo
je
ja
xchg
push
imul
clc
pop
pop
push
jns
pop
insl
cmp
jge
mov
popf
adc
or
push
outsb
nop
fildll
call
cmp
cmp
lods
mov
gs
lea
lcall
sahf
je
mov
into
sbb
es
mov
mov
jo
xor
fs
push
cld
in
dec
mov
rcrb
cmovne
push
gs
dec
outsb
aaa
lcall
mov
push
fcomps
imul
das
sbb
mov
outsl
pop
mov
push
sbb
add
les
lods
xor
sbb
mov
jae
movb
dec
inc
dec
fistl
inc
mov
popaw
or
adc
sbb
mull
andb
xorb
adc
xor
jns
out
lock
in
loop
leave
xor
inc
insb
sbb
or
test
pop
pop
and
push
daa
jge
xchg
pusha
sbb
je
xchg
sti
popa
es
push
jbe
or
inc
push
pusha
cmpsl
inc
push
sti
test
push
out
dec
or
cmp
ss
mov
in
push
xchg
in
insl
ss
insb
sbb
sbb
mov
not
lret
jne
sub
sub
mov
pop
outsl
cmp
jno
or
pop
sarb
adc
and
push
addb
sbb
adc
xchg
lret
pop
pop
adcl
xor
enter
sbbb
xor
inc
or
or
adc
lcall
cmp
cmp
push
mov
pop
pop
push
stc
ja
popf
repz
push
mov
push
fnstenv
fsts
push
mov
pop
lea
jge
dec
add
jne
jbe
in
xchg
mov
jo
sbb
bound
inc
and
stos
push
adc
mov
sahf
in
ret
push
movsb
sub
je
add
mov
mov
or
inc
jo
jae
xor
test
sub
scas
push
fcomi
xor
xlat
pop
xchg
adc
arpl
out
sbb
jo
fldt
sbb
out
in
jb
test
inc
sub
loopne
sbbl
adc
inc
push
jno
popa
xchg
dec
mov
jo
cmp
js
roll
scas
gs
xchg
add
rorl
add
cmp
sbb
xchg
gs
loopne
gs
xchg
ja
and
loopne
daa
dec
gs
inc
arpl
lods
test
iret
sub
adc
sub
push
je
pop
sub
pop
or
pop
out
into
popa
sub
fld
cmp
insl
adc
push
pop
inc
xchg
cmc
cwtl
imul
add
js
fidivrs
dec
xlat
inc
sbb
xchg
jbe
and
inc
xchg
mov
insl
inc
sbb
cmp
xchg
repnz
fcompl
or
pop
dec
add
shrl
lret
pop
imul
sub
inc
insb
sub
mov
pop
insb
rcpps
js
adc
push
sub
inc
inc
xlat
adc
add
out
gs
in
inc
imul
xor
subb
push
sbb
pusha
mov
ret
sahf
daa
fwait
jo
rorl
bnd
push
outsl
sub
cmp
push
inc
push
popa
xchg
stos
dec
inc
mov
aad
xchg
mov
rcl
ficompl
dec
jne
jns
mov
sti
js
inc
repnz
push
hlt
data16
pop
push
mov
mov
inc
fbstp
and
inc
dec
push
not
xor
pop
xor
mov
adc
or
sbb
jne
outsb
inc
shrb
push
sub
sbb
sbb
pop
and
and
sbb
fs
mov
aad
add
out
pop
aas
das
out
sub
stos
insb
mov
cmpsl
js
int3
sar
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
sahf
imul
adc
adc
mov
xchg
pop
add
es
cmp
inc
push
inc
outsb
adc
jl
sbb
and
mov
and
fmuls
ss
push
outsb
cmp
sbb
fsubs
out
mov
jmp
sbb
mov
push
push
imul
stc
add
or
ss
stos
inc
insb
scas
mov
dec
xchg
adc
push
and
pop
xor
xorl
sbb
cmp
jecxz
or
aad
cltd
movl
aad
loop
jge
jl
mov
enter
bound
scas
lcall
jne
and
andb
mov
sbb
cwtl
adc
pop
aas
ss
fimuls
iret
xor
push
mov
xor
xchg
ret
inc
sbb
xor
pop
loopne
fldcw
mov
aaa
xor
jnp
inc
inc
xor
mov
jbe
lret
inc
lock
sub
in
divb
xchg
insb
mov
lea
xor
or
mov
mov
mov
mov
mov
scas
add
rclb
xor
xchg
enter
out
cmp
mov
mov
jbe
je
insb
mov
in
cmp
add
aas
push
push
mov
mov
and
loop
or
hlt
pop
push
in
mov
dec
insl
nop
mov
fisubl
dec
test
adc
fs
adc
ret
push
rol
dec
cld
addr16
and
arpl
push
cltd
mov
test
pop
xor
lea
push
jg
mov
mov
pop
adc
or
and
inc
sbb
or
lds
nop
fs
xchg
loope
mov
cmp
jns
dec
lea
sbb
dec
shlb
lods
and
mulps
das
push
aad
xchg
cmp
js
pop
push
jo
roll
add
aas
scas
ret
insl
inc
sub
lods
xchg
sbb
mov
pop
lods
mov
sbb
outsl
fsubrl
and
repz
mov
incl
push
inc
xchg
lea
jecxz
incl
sub
mov
sbb
inc
mulb
add
pop
dec
mov
out
add
test
imul
jl
jae
xor
jo
test
sub
loope
rolb
lcall
dec
gs
mov
push
xor
adcl
add
outsb
add
add
inc
push
mov
or
enter
jns
daa
dec
ds
adc
add
das
or
xchg
jge
movsb
mov
or
adcl
prefetch
js
push
int3
jmp
push
nop
xor
fmuls
push
add
dec
push
cmp
or
cmp
add
push
add
or
jb
xor
in
push
add
mov
popf
jge
push
out
inc
cs
add
stos
fidivrs
push
pop
push
dec
rcrb
loopne
push
xlat
out
xor
push
adcl
xchg
lods
lock
push
jbe
js
dec
and
fldt
ss
jg
mov
dec
xchg
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
