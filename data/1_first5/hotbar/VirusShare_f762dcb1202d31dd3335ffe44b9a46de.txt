divl
in
mov
mov
cwtl
js
add
add
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
xchg
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
fildl
cmpsl
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
xor
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
pushf
push
mov
gs
push
mov
enter
add
mov
emms
inc
cld
add
or
mov
mov
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
add
incl
sti
inc
add
add
call
jle
add
mov
mov
jmp
push
mov
lock
add
sahf
or
sbb
pop
pop
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
sub
outsb
sub
xor
push
push
cwtl
in
add
mov
add
cmp
mov
fchs
fsubrs
cmp
add
data16
mov
sbb
push
push
lods
or
fdiv
fistpl
fldt
inc
add
test
mov
ds
je
pop
add
pop
mov
push
cmp
loopne
cmp
rorb
sbb
cmp
sbb
push
sbb
loop
icebp
cmp
add
push
add
sbb
pusha
les
xchg
dec
sarl
mov
add
sub
in
mull
pop
pop
sub
jl
mov
push
popf
call
cltd
ss
sbb
adc
xor
js
in
push
push
mov
jg
push
sub
inc
mov
pop
idiv
fcoml
push
mov
pop
jge
mov
jmp
rorl
movsl
push
pop
and
push
inc
inc
dec
push
jae
jno
and
andl
push
add
inc
inc
data16
and
jecxz
inc
xor
inc
andb
int
not
fnstcw
jbe
loop
sub
ljmp
jae
ret
out
push
adc
mov
add
hlt
fisttpll
ds
add
divl
cwtl
and
jo
sub
push
jae
mov
jb
das
push
fnstsw
add
pop
jnp
addb
or
mov
sbb
mov
test
jnp
repnz
sbb
pop
push
and
lahf
getsec
out
add
addl
mov
push
icebp
xor
js
int3
inc
sbb
outsl
pusha
shrb
adc
dec
push
push
iret
xchg
add
mov
push
mov
inc
add
lock
push
pop
adc
cld
mov
call
mov
and
inc
dec
mov
sub
rclb
pop
xchg
cmpsb
sbb
je
or
enter
shl
sub
pop
nop
xlat
cmp
and
std
repz
mov
push
mov
ret
andb
mov
aam
push
add
aam
or
js
push
inc
mov
int3
push
mov
int3
pop
pop
or
jo
insb
clc
dec
nop
in
xchg
in
push
mov
sbb
xor
dec
prefetcht2
loop
pop
cmp
dec
je
xchg
cmp
xchg
adc
dec
daa
sbb
loopne
inc
adc
outsb
push
fidivs
push
xor
adc
sub
xor
sub
push
adc
xchg
repnz
push
iret
dec
cvttps2pi
repz
jmp
enter
adc
mov
pushf
lcall
and
rolb
fnstcw
cmc
push
or
adc
aaa
adc
movl
cmpsb
sbb
sbb
push
sahf
adc
push
pop
fcmovu
dec
test
sbb
pop
sbb
sarl
cwtl
or
sahf
std
and
pop
adc
jmp
cmpsl
adc
js
sbb
mov
jmp
repz
push
jae
push
mov
push
pop
dec
mov
pop
mov
mov
cmpsb
mov
inc
clc
push
jecxz
mov
push
push
test
mov
hlt
ret
mov
adc
sub
out
fistpll
mov
jo
push
push
push
push
adc
fwait
lock
je
ret
testb
mov
add
and
pusha
push
mov
jmp
loope
cmp
outsb
and
sti
ds
mov
sub
lcallw
push
mov
sysret
jle
movsl
cltd
mov
icebp
mov
jl
or
jecxz
or
mov
mov
or
pusha
rclb
mov
mov
lea
push
add
jle
sbb
je
mov
mov
lea
fistl
push
mov
aaa
je
sub
mov
icebp
add
loop
dec
insl
lea
jno
insl
mov
inc
sbb
or
mov
das
add
inc
mov
inc
or
dec
mov
adcb
cmp
or
imul
mov
fwait
and
xor
or
mov
push
arpl
mov
rcll
sub
cmp
inc
and
xor
pusha
out
mov
pop
cmc
push
stc
test
mov
daa
push
mov
xchg
cmpsl
xor
sbb
bound
in
xor
pushw
mov
ret
push
mov
cmp
jbe
fcmovu
push
dec
inc
jnp
paddd
sbb
jns
es
jmp
push
add
push
mov
push
lock
clc
inc
lock
jne
pop
mov
sub
loopne
xchg
jl
test
push
mov
sub
dec
pushl
pop
in
adc
adc
ficoms
adc
mov
pop
xlat
test
fnstenv
mov
lds
ljmp
push
push
push
mov
cmp
das
out
sub
and
jo
sbb
pop
cmc
mov
sub
call
mov
test
jne
fs
inc
adcl
jl
jmp
pop
push
adcb
mov
jne
push
push
pop
push
pop
xor
adc
cmp
cli
test
mov
ret
clc
mov
or
sbb
mov
inc
in
mov
and
ds
ja
aad
mov
adc
stos
push
jg
popa
daa
ljmp
enter
test
push
dec
push
andl
push
mov
xchg
nop
mov
cmp
jl
push
mov
cmp
jg
mov
pusha
adc
adc
pop
ret
push
daa
or
data16
mov
icebp
or
push
push
dec
int3
pop
scas
hlt
jbe
mov
and
movb
adc
sub
push
cs
out
dec
mov
aam
push
mov
sub
pop
js
sub
pop
cmp
mov
jge
jmp
pop
ss
cmp
je
movb
mov
pop
jg
ret
adc
push
pop
lea
push
mov
out
mov
cli
cmp
ja
add
jmp
mov
jbe
jno
addr16
dec
or
mov
and
jo
pop
inc
leave
ret
icebp
cmp
negb
idivb
cmp
je
or
std
cli
out
roll
push
hlt
dec
mov
jmp
inc
pop
xorb
add
sbbl
push
cmpsb
shlb
mov
jmp
xchg
mov
cmpl
sarl
pop
push
ja
lea
insb
push
mov
clc
cmp
jmp
xchg
pop
clc
andl
cmp
js
arpl
adc
pop
and
shl
xchg
add
nop
test
je
add
rorb
mov
ss
pusha
adc
push
movsb
mov
and
divb
push
push
push
xor
cmpsl
pushf
sub
fmull
sbb
push
pop
ss
push
push
popl
adc
push
and
pop
xchg
sub
lods
arpl
shlb
ret
fcompl
lods
mov
adc
lahf
push
adc
inc
add
cmp
popl
cmc
in
push
sub
push
mov
in
pop
jl
in
pop
cmp
mov
fs
idiv
pop
cld
cmp
je
cmpl
pop
mov
cmp
jne
push
push
imul
jo
ret
jl
pop
jmp
push
mov
mov
stos
cmp
xor
bound
sub
push
inc
sub
inc
inc
or
or
fstps
pusha
inc
fidivrl
inc
clc
jg
inc
fmulp
cmp
jo
movb
or
dec
aad
or
lods
add
out
int3
iret
mov
or
inc
push
inc
decb
or
shlb
adc
ret
popa
pop
out
inc
pop
or
sbb
les
das
inc
cmpsb
dec
push
mov
adc
or
jl
mov
outsl
icebp
and
jne
test
sti
jmp
push
push
call
into
or
push
dec
into
adc
push
lds
ss
xchg
jmp
mov
cli
pushf
inc
mov
hlt
push
fdivrp
mov
mov
shlb
adc
stos
push
adc
lods
adc
jbe
cmpsb
mov
ret
inc
or
push
or
pushf
cli
xchg
push
jae
loop
add
lret
mov
addb
jmp
cmpl
lahf
cmp
xor
cmpl
jle
jg
lds
push
cmp
jge
mov
scas
sbb
ret
ret
shlb
mov
and
cmp
sub
test
cmp
mov
scas
or
mov
jbe
sbb
add
add
or
mov
add
push
inc
adc
ret
jae
ds
xor
neg
je
jge
dec
jle
ficomps
loope
or
fadds
or
mov
aaa
js
lods
stc
or
adc
lahf
out
xchg
sarb
cmp
mov
sahf
xlat
xlat
popf
es
or
pop
adc
or
cmp
movsb
or
lea
js
mov
adc
add
in
mov
cs
out
push
fimuls
pop
mov
jo
popf
xchg
sbb
clc
mov
push
fcoms
lea
push
cld
mull
cmp
pop
pop
jmp
mov
es
mov
jecxz
orb
jp
movl
add
fisubs
adc
sbb
test
out
and
cmc
push
test
je
push
cmpsb
std
pand
sub
js
mov
shlb
movsl
push
xor
inc
mov
enter
add
mov
or
inc
shll
sbb
orb
fsts
nop
cmp
sti
stos
add
sbb
mov
inc
and
mov
ret
xor
add
xchg
xchg
lret
int
sbb
or
pusha
and
jmp
add
cld
icebp
cmp
mov
push
push
call
push
pop
gs
adc
sbb
in
pop
sbb
inc
and
and
sbb
das
sbb
sbb
add
jbe
or
mov
adc
pop
pop
dec
mov
pcmpgtd
xlat
add
and
repnz
adc
adc
push
mov
adc
pop
adc
jb
dec
or
mov
or
xor
cmp
ja
xchg
or
mov
in
cmp
adc
and
stc
adc
cmp
pop
test
adc
sbb
push
cmp
mov
dec
hlt
mov
push
cltd
pop
mull
add
inc
mov
push
je
and
adcb
jmp
dec
call
mov
mov
xor
es
xor
mov
scas
push
jbe
call
mul
jmp
push
sahf
lods
lret
and
jmp
sub
dec
je
xor
je
sub
shr
adc
jmp
dec
fs
cs
xchg
jo
jno
aas
mov
je
mov
sti
xchg
sub
test
jmp
call
jecxz
pop
jne
mov
rorb
add
stc
or
insb
xor
sub
or
stos
sti
push
add
mov
scas
adc
or
mov
sub
mov
xchg
adc
push
mov
push
faddl
negl
hlt
mov
mov
fdivr
mov
push
and
push
or
add
sub
jo
js
mov
in
push
in
push
in
in
in
pop
xor
adc
xchg
divb
inc
sbb
adc
jmp
cmp
je
cmp
push
ret
imul
jmp
inc
sbb
out
scas
xor
leave
adc
adc
xor
dec
fnstsw
or
cmp
jmp
sbb
shlb
imul
and
jno
xchg
jmp
data16
sbb
push
jo
or
push
cmp
inc
iret
repz
pop
jae
mov
repz
xchg
lahf
stos
push
push
jge
mov
lret
aad
cmc
jp
or
or
cmp
lock
adc
push
push
pusha
aaa
cmp
adc
and
cmp
or
clc
movb
sbbl
adc
cs
xchg
adc
hlt
test
push
das
fisubs
dec
mov
pop
push
lea
push
subl
cs
push
lea
jns
fdivrp
cmp
mov
in
aam
les
addr16
or
xchg
dec
push
inc
mov
or
cld
adc
movl
push
outsl
ret
in
imul
ja
push
sbb
xchg
dec
xor
mov
jo
and
dec
dec
ficompl
add
fsts
dec
add
and
mov
ja
mov
sub
jo
cmp
sbb
add
xchg
pop
pop
leave
subl
arpl
jmp
orl
inc
mov
add
nop
sub
mov
mov
adc
iret
xchg
sbb
lret
sbb
dec
repz
mov
adc
add
ret
adc
inc
push
push
stos
popf
aad
repnz
cs
aam
clc
pop
not
and
loopne
js
mov
adc
mov
pop
mov
jnp
jecxz
sarb
push
push
inc
cmp
nop
mov
aas
add
push
push
push
push
mov
loope
mov
mov
or
iret
cmp
push
push
pushf
push
int
scas
mov
mov
or
sub
dec
jp
or
or
pop
pop
daa
test
push
outsb
lea
je
mov
in
mov
shlb
mov
aaa
pop
pusha
jle
in
and
cmpl
push
loopne
inc
xor
adc
push
fs
cmp
js
dec
pusha
adc
sub
loop
xor
pushf
jecxz
jmp
mov
push
and
push
xor
sti
hlt
mov
pushl
mov
adc
dec
adc
repz
in
push
push
dec
lea
or
test
pop
pop
cmp
je
dec
call
cltd
sub
sar
add
pushf
xor
imul
in
dec
in
data16
mov
add
mov
inc
adc
push
add
dec
cmp
pop
leave
lahf
push
or
xor
popf
inc
adc
push
add
ret
add
repz
mov
popf
inc
add
sbb
or
and
sub
pop
pop
cmpsb
sub
ds
mov
sbb
cmp
adc
ljmp
jg
mov
sbb
and
and
cs
add
divb
out
pop
andl
cmpsl
xor
jbe
add
inc
cmp
cmp
mov
push
rol
lahf
push
enter
insb
cwtl
push
test
push
lea
dec
maskmovq
sbb
and
test
dec
mov
sbb
mov
inc
xchg
dec
push
clc
mov
cmp
ljmp
xorb
into
inc
inc
xor
int
push
mov
out
sub
dec
mov
je
push
mov
or
in
sbb
jmp
pushl
and
xor
out
ret
scas
incl
and
add
movsb
mov
mov
inc
cli
pop
stos
mov
cmpl
je
cmpl
test
or
in
dec
je
mov
xchg
sub
mov
sbb
jg
jmp
mov
aaa
insl
pop
push
cmp
push
pop
loopne
loop
mov
pop
inc
mov
imul
ss
push
cwtl
loop
aas
js
push
push
mov
cltd
pop
sbb
in
cmp
hlt
movb
add
lock
lods
dec
div
fldz
bound
sbb
pop
insb
movb
outsl
sti
aas
mov
jecxz
and
jl
gs
mov
dec
popf
out
cmp
xchg
pop
xchg
push
and
test
add
ss
pop
test
test
jmp
mov
dec
mov
and
popf
push
imul
sbb
addr16
mov
test
and
and
pop
lea
inc
dec
push
xchg
sub
pop
jle
pop
cmp
jle
jbe
adc
cmp
lret
jns
fldcw
cmp
mov
shlb
mov
push
and
push
sub
out
sbb
or
nop
or
movl
sahf
leave
lret
dec
loope
push
xor
sub
or
or
daa
cmp
ret
and
xor
ret
push
adc
cmp
or
dec
push
mov
sub
xchg
pop
sbb
int
sbb
shl
sbb
xor
addb
xor
cmpl
pop
push
pushf
lcall
jnp
cmpsb
lock
sbb
test
icebp
mov
aaa
faddl
sub
xor
cmp
das
cld
rorl
inc
pusha
fmull
gs
cs
jnp
sahf
sbb
add
xor
pop
push
cmp
ret
rcrl
cmpb
xchg
leave
lock
adc
or
les
shrb
pop
ds
rorb
pushf
in
push
adc
aad
push
shll
test
loop
pushf
and
sub
loop
mov
rorl
mov
ds
add
push
addl
or
dec
mov
fstpt
call
xlat
stos
fcoms
pop
dec
dec
or
sbb
mov
es
or
adc
js
ret
cmp
in
mov
lret
xchg
or
cmp
or
sbb
cltd
push
inc
mov
mov
sbb
addb
push
adc
pop
xchg
or
cld
je
ds
outsb
js
sbb
mov
je
cwtl
pop
or
shrl
xchg
das
enter
jmp
stc
sub
sub
or
fadds
push
cmp
cmp
and
cmp
and
lock
dec
jmp
nop
push
sub
xchg
mov
pop
inc
scas
shlb
mov
loopne
loope
push
push
loopne
push
push
mov
in
adc
lcall
jno
mov
lcall
cmp
dec
push
xlat
rolb
ret
mov
js
outsb
pusha
popa
ds
call
and
cmp
and
popf
mov
loopne
pop
fidivl
cwtl
adc
andl
out
bound
aas
mov
cltd
mov
jmp
xlat
add
sar
push
push
xor
ss
aad
daa
jl
dec
inc
dec
xlat
div
push
cmpsb
lock
adc
out
icebp
mov
push
inc
jge
mov
fcomip
sti
push
pop
fisttpll
jo
push
adc
iret
aas
mov
jle
mov
fwait
inc
jp
mov
dec
pop
mov
add
jne
loopne
jbe
sbb
aaa
adc
jmp
add
cmpsl
int
mov
rorb
push
leave
mov
inc
jecxz
stos
int
xchg
rorb
out
clc
or
rorl
push
ljmp
hlt
jle
jg
test
pop
lea
cltd
idivl
mov
inc
mov
xor
and
jl
divl
into
mov
lret
jl
movl
adc
test
or
insb
mov
pop
jbe
lahf
xor
cmc
testl
mov
lods
lea
clc
add
pop
negl
sub
cmp
or
jmp
lods
sti
lahf
or
jmp
mov
pop
hlt
fildl
not
fildll
pusha
or
add
add
pop
or
clc
sub
xor
mov
fdivrp
mov
mov
rolb
pop
add
pop
mov
inc
fidivrs
out
push
add
add
inc
mov
xor
or
clc
fidivl
jmp
gs
testb
sahf
lods
jmp
jne
xor
jo
pop
add
jl
dec
call
push
icebp
mov
aad
mov
mov
mov
js
shr
test
flds
jge,pn
lahf
jl
cld
push
and
clc
mov
or
sbb
mov
xchg
lahf
je
je
mulw
push
sbb
sbb
pop
and
loopne
imul
sbb
cmp
sarl
add
cmp
and
adc
cmp
xchg
push
test
jo
sub
mov
rcrl
arpl
clc
test
call
xor
sbbb
int
gs
mov
xor
aas
xchg
dec
push
xor
jne
mov
xchg
xchg
pushl
incl
push
rolb
leave
push
leave
add
shl
pop
inc
loope
mov
add
jl
loop
push
mov
icebp
lea
data16
sti
push
mov
push
lret
push
std
mov
jns
pop
sbb
adc
push
mov
sub
fnsave
decb
dec
add
push
fisubs
ret
xor
aaa
mov
hlt
xor
push
adc
mov
push
outsl
orb
push
push
sbb
in
dec
jb
and
push
add
test
aam
cld
xor
cmp
loopne
add
push
fs
out
or
push
pop
adc
mov
xchg
dec
sbb
ja
mov
dec
pop
repnz
dec
push
repz
mov
and
xor
rcrl
dec
mov
pop
xchg
and
jl
add
and
mov
shrb
mov
push
xor
sub
scas
mov
pop
mov
pop
cmp
xchg
xchg
push
mov
sbb
setb
test
jne
mov
sarb
sub
outsl
lods
loope
sar
xor
and
adc
or
push
pop
adc
dec
sarb
je
sub
pop
stos
jne
jmp
mov
mov
nop
movsw
pusha
insl
lock
hlt
mov
add
push
add
xor
sbb
fstps
sub
and
inc
inc
scas
movsl
cmp
push
xchg
lock
jge
mov
scas
ljmp
or
adc
or
push
vucomiss
rolb
dec
sub
movsl
into
cmp
xchg
and
mov
fdivrs
xlat
adc
cli
cs
add
and
sbb
fisttpll
pop
pop
ror
and
clc
ret
in
or
and
push
je
and
je
into
icebp
mov
shr
hlt
pop
or
in
ret
les
jo
lods
loopne
std
xchg
pop
inc
hlt
cmpsl
mov
and
std
leave
adc
mov
or
add
arpl
fs
sub
ss
jmp
aaa
loop
xor
lock
rcrl
mov
sbb
push
xchg
ja
push
pop
add
push
push
push
shlb
add
mov
loope
adc
aas
jl
push
outsl
pop
and
outsb
mov
push
in
cmc
pop
dec
lods
test
setne
test
je
ja
add
lock
testl
jne
push
and
sbb
mov
jmp
divb
jbe
in
clc
arpl
jnp
cmpsl
inc
or
pop
mov
gs
push
sbb
push
mov
inc
movsl
or
push
sarl
inc
roll
pop
js
les
pop
and
mov
test
sbb
or
or
add
jnp
mov
add
sbb
and
and
test
jne
or
imul
jnp
xchg
and
call
dec
or
sub
mov
inc
insl
call
dec
clc
repnz
loope
jmp
push
mov
decl
inc
repz
call
mov
push
pop
fisubrl
rcll
cmp
shrl
shl
dec
imul
call
push
jbe
or
push
push
clc
iret
push
jle
rorb
push
stos
inc
repz
in
cltd
sub
or
filds
orb
xor
add
mov
and
test
sub
and
cmp
dec
mov
push
mov
adc
adcl
stos
or
leave
mov
adc
and
and
add
fistps
pop
push
scas
lea
push
jle
std
sub
jge
inc
icebp
add
pop
cli
mov
cmpb
pop
out
je
popf
sub
add
repnz
xchg
inc
bound
mov
add
cmp
je
fucomip
and
mov
sub
je
movl
das
sbb
inc
add
sub
stos
add
loop
or
and
mov
pop
cmp
ret
pop
xchg
or
push
pop
call
add
xchg
sbbb
lret
popf
addr16
xchg
mov
cltd
stc
movsl
loope
jns
xchg
xchg
mov
cld
push
mov
sbb
sbb
push
jbe
loop
pusha
xor
enter
daa
add
lods
sbb
iret
jo
pushl
fdivl
andb
inc
adc
jle
and
adc
jge
jl
addl
dec
adc
sbb
push
aaa
sbb
fsubr
mov
and
push
int3
mov
lahf
loop
adc
push
jmp
push
out
nop
call
scas
adc
int
imul
mov
adc
shrb
sub
rolb
xchg
loopw
loopne
pop
or
or
lcall
pop
push
fcomps
sbb
aam
adcb
inc
in
hlt
or
imulb
test
push
movl
hlt
cmpsb
adc
and
or
and
adcl
shrl
xchg
mov
mov
test
pop
neg
fs
bnd
stc
mov
imul
jmp
or
add
leave
repz
jno
xlat
jecxz
sub
pop
loope
ret
xor
cmpsl
push
lods
popf
inc
inc
push
sub
addl
mov
or
inc
fidivl
lds
push
mov
in
sub
xchg
or
and
shrb
sbb
mov
mov
insb
mov
add
mov
out
lahf
jnp
xor
mov
lahf
add
bound
inc
inc
and
pop
sbb
cmp
mov
xchg
jno
adc
xchg
xchg
orb
mov
mov
js
xlat
imul
dec
lds
sub
pop
es
stc
out
les
xor
xchg
sbb
mov
test
loopne
das
movsb
push
rclb
lcall
or
jne
mov
imulb
shrb
or
rcrb
jae
loopne
push
loope
mov
sbb
ds
mov
mov
ljmp
mov
mov
add
sub
mov
push
gs
jge
cwtl
sub
xor
orl
sbb
jns
stc
or
fstpl
pop
mov
or
or
mov
sub
and
pop
cwtl
push
stos
sub
lods
fisubs
push
mov
inc
or
popa
and
pusha
push
aam
mov
mov
cmp
aaa
jo
rcl
and
mov
adc
sbb
das
test
shrb
repnz
jo
ja
and
mov
adc
out
or
ret
and
adc
jnp
and
iret
push
jae
cmp
in
adc
add
mov
repnz
sbb
es
add
ret
jns
or
push
daa
psllq
adc
or
sbb
lods
dec
leave
pop
inc
andl
dec
and
leave
sub
fadds
dec
dec
cmpsb
xor
or
test
xor
in
cli
in
test
popf
or
push
out
adc
lock
sbb
mov
inc
ds
sbb
lret
shll
add
hlt
inc
xor
rolb
xor
xor
jb
cld
sbb
xchg
push
test
in
pop
mov
jne
ds
loope
loopne
hlt
push
sbb
test
adcl
xor
or
pop
cld
or
dec
or
mov
shrb
inc
xchg
cli
cmp
mov
xor
add
incb
add
add
add
fisttpl
shrl
int
xor
popf
cld
push
outsl
imul
ret
push
cwtl
adc
out
push
sbb
sbb
ret
and
ss
xchg
sub
insb
inc
sbb
and
jb
inc
sub
push
mov
std
jno
fcmovne
mov
adc
pop
push
xchg
incb
js
jo
nop
pop
cltd
sub
inc
push
xor
or
pushf
dec
jae
pop
pop
emms
cmp
xchg
push
iret
add
mov
mov
insl
add
hlt
int3
mov
push
sbb
les
sti
mov
xor
cmp
jle
jl
pop
add
cwtl
pop
mov
mov
cmp
cli
insl
out
mov
mov
jmp
std
xor
dec
mov
push
cltd
add
lret
sub
mov
add
pop
jbe
cmp
cmpsb
or
inc
cmpsl
fcompl
test
or
and
mov
iret
jne
orl
loopne
jmp
outsl
ret
mulb
inc
push
je
fildl
push
or
popf
inc
dec
push
mov
push
push
cmp
aam
mov
xchg
or
lock
lock
je
cmp
add
xor
dec
xchg
xor
je
cs
xor
cli
add
jns
push
add
pop
bnd
in
lret
add
xchg
or
dec
in
add
sti
xor
mov
in
or
push
sub
inc
dec
ja
mov
lea
sbb
dec
les
or
mov
enter
sub
call
repnz
mov
pop
bnd
adc
fs
pushf
and
and
out
push
or
ret
sbb
sub
cltd
cs
inc
inc
adc
add
js
inc
push
cmp
insb
sbb
add
jb
pushf
shr
imulb
repnz
inc
push
sbb
int
or
notl
in
add
cltd
mov
int3
sub
roll
jg
movsl
pop
sub
fnstcw
add
cmp
xchg
adc
adc
ja
sahf
adc
or
fistl
inc
fsts
push
mov
sub
push
add
inc
and
add
add
jno
gs
pusha
movsl
hlt
xor
or
adc
popf
je
add
xchg
dec
testl
sti
test
stos
push
out
push
mov
pop
lret
push
js
lods
inc
adc
push
arpl
add
int3
pop
xchg
loopne
pop
push
aam
mov
test
push
xchg
adc
imul
sbb
push
sub
cmp
push
gs
pop
or
xor
js
pop
mov
imul
mov
and
or
inc
xchg
adc
inc
adc
lret
jne
jns
xlat
inc
rorl
mov
sub
in
push
sbb
sbb
or
dec
mov
or
cltd
sbb
testl
icebp
out
repnz
movsb
push
sbb
jne
pop
movsb
xor
jecxz
xor
jb
push
mov
sub
lock
add
test
jo
movsl
ljmp
inc
pusha
sub
sbb
imul
js
jg
xchg
fisubl
mov
xchg
outsb
dec
pusha
jne
push
loopne
cltd
nop
or
and
xchg
imul
add
xchg
inc
sub
js
push
mov
daa
push
cmc
sub
xchg
and
ficompl
sbb
inc
push
mov
or
ss
jg
pop
pop
jnp
add
push
sbb
leave
mov
inc
dec
test
jbe
lret
rcrb
pop
sub
jp
lds
pop
popa
sbb
inc
ss
in
mov
dec
rcll
loop
sbb
mov
sbb
dec
cwtl
or
mov
loopne
icebp
dec
jp
cmp
mov
test
ret
jbe
lcall
cli
add
push
fwait
cmpsb
inc
sahf
js
js
pop
adc
or
test
dec
leave
or
sub
loope
xchg
add
jb
mov
mov
pop
gs
and
inc
cmp
sbb
fildl
jge
adc
cmp
jns
pop
mov
aaa
jo
cmp
jge
in
clc
lock
mov
add
mov
popf
adc
dec
push
addr16
scas
rclb
pusha
add
sub
cs
loope
pop
hlt
pop
pop
out
add
sbb
push
mov
pusha
or
cmp
push
push
or
add
add
dec
arpl
or
push
into
popa
aad
aam
jp
add
push
and
sar
jp
push
pop
pop
test
pop
push
and
xor
movb
mov
xchg
orb
jge
or
jo
push
xchg
and
pop
xchg
xor
mov
inc
insb
js
lock
xor
xlat
mov
xchg
addr16
inc
push
mov
push
mov
push
into
aam
scas
mov
mov
sub
jmp
dec
pop
or
xchg
cs
test
jnp
jb
outsl
mov
and
lret
lcall
inc
xchg
and
xlat
xor
pusha
add
or
cmp
push
push
loope
jle
adc
lods
pop
mov
add
jae
loope
jge
aaa
sbb
vmread
js
ret
test
fsts
or
pop
nop
adc
test
mov
fisubs
in
inc
outsl
sub
loop
pop
hlt
btr
test
cmp
jne
sti
aas
decl
notl
push
jmp
mov
cmp
jne
sbb
sti
arpl
push
sbb
adc
sbb
jmp
sub
adc
mov
adc
dec
xor
pop
test
je
adc
adc
stos
sub
arpl
xor
xor
pusha
mov
js
and
sub
cld
sbb
mov
mov
mov
add
sete
jne
push
inc
inc
sahf
adc
xlat
add
repnz
push
sbb
add
mull
lods
xchg
dec
mov
push
and
in
jmp
movsl
test
push
mov
adc
gs
fwait
push
sbb
xor
sub
or
and
adc
clc
add
xchg
data16
sub
jge
pop
pop
inc
mov
push
lods
push
testl
or
dec
and
mov
sub
imul
jmp
idivb
xchg
mov
es
addr16
pop
or
and
sbb
add
and
lret
inc
mov
add
push
outsl
push
inc
pop
jb
in
mov
enter
pop
mov
les
xor
cli
xor
push
xchg
jecxz
roll
arpl
aaa
fs
lock
mov
mov
ret
mov
sub
in
stos
bnd
cltd
jne
stos
scas
xchg
xor
in
mov
aad
push
xlat
sbb
rolb
mov
mov
aam
mov
pop
push
addr16
sbb
outsl
push
xor
inc
sub
lds
std
mov
idivb
jge
out
iret
push
mov
dec
loop
fisubrs
addr16
cmp
mov
jb
cmp
lock
xor
add
mov
out
rorl
push
adc
mov
adc
add
pop
insl
add
push
and
insb
aaa
cmp
adc
push
fists
cmp
or
mov
push
dec
mov
and
divb
leave
push
repnz
ret
pop
scas
lock
sub
pop
nop
cli
add
test
dec
clc
mov
push
mov
inc
incb
pop
push
mov
jne
test
mov
push
pop
lods
ja
shlb
fimull
clc
jb
repz
pop
mov
lods
in
stos
or
or
into
movsb
mov
mov
es
loope
dec
test
inc
xor
jo
push
subb
aad
test
cmp
sldt
adc
stos
clc
xchg
aas
sbb
jno
mov
inc
add
push
inc
add
cli
mov
inc
rol
inc
mov
fcmovu
loopne
add
cmp
adc
sub
jns
pusha
orl
sub
dec
dec
sete
test
xor
lock
inc
in
icebp
cwtl
fmulp
ret
shr
repz
xchg
lret
and
sub
fdivs
aas
or
mov
mov
lock
adc
shll
dec
push
cmc
cmp
je
or
clc
cmp
jae
adc
mov
flds
fcomps
fucom
and
daa
and
orb
pop
shll
push
add
mov
mov
mov
dec
cmp
dec
hlt
jge
enter
testl
mov
outsb
and
fdivr
or
jmp
les
ljmp
xorl
sahf
pusha
pop
inc
push
sbb
pushl
leave
jl
mov
cmp
jg
loope
shl
cli
sahf
aam
ficoms
add
mov
mov
and
xchg
negl
inc
outsl
or
add
repz
push
stos
pop
mov
inc
addr16
sti
movsl
nop
sbb
fwait
out
pop
xor
lock
sbb
pop
or
mov
nop
mov
add
sub
popa
jbe
add
pop
xor
pop
add
jge
xorb
mov
sub
adc
mov
ret
mov
movsl
int
push
cmp
iret
je
mov
sti
nop
scas
bound
jle
sbb
cmp
enter
sbb
sbb
cmpsb
cmp
fxtract
jge
or
rorl
push
cli
cmp
mov
mov
adc
out
inc
js
js
xchg
push
add
sub
cmp
mov
jle
imul
jne
orb
sbb
lret
ret
test
aam
in
or
aaa
jp
movsb
mov
adc
push
setb
adc
xchg
adc
push
pop
push
xchg
cwtl
ret
push
push
mov
pop
push
movl
jg
jecxz
mov
xor
int3
insl
jp
sarb
push
cli
or
andl
movsb
lcall
pop
pop
mov
add
movsb
jb
lea
dec
mov
jne
sub
stos
sub
mov
pop
ffree
or
mov
in
or
fnsave
adc
push
sbb
mov
mov
mov
xchg
xchg
mov
or
and
add
jecxz
sub
mov
repnz
xor
sbbb
jo
push
in
adc
popa
mov
outsb
or
dec
mov
pop
mov
cmp
push
inc
pop
adc
inc
and
jmp
sbb
xchg
jb
adc
loop
jne
mov
or
mov
cltd
mov
test
lahf
mov
or
or
loop
and
in
popa
je
inc
cmp
mov
pop
jg
adc
add
add
call
pop
das
push
pushl
jle
xor
or
adc
in
ljmp
mov
jmp
or
mov
fnstcw
mov
push
push
aas
scas
test
imul
aam
xlat
add
xor
mov
in
inc
test
mov
ss
adc
xor
mov
jp
push
push
or
push
sbb
adc
fsubrs
mov
sbb
aaa
add
cmp
pop
jmp
push
jl
adc
dec
aaa
in
add
push
sti
adc
repz
les
std
sbb
add
pop
adc
loop
push
mov
adc
cli
je
sti
ja
dec
mov
lock
push
mov
add
mov
loop
cmp
repnz
sbb
cmp
or
pop
loop
hlt
push
inc
mov
xor
aam
inc
shrb
shrb
jbe
fnsave
sub
and
lock
adc
jbe
addl
int
call
cltd
aad
ret
dec
add
sahf
aad
cmp
or
pop
jb
bound
sbb
popa
mov
xor
and
scas
inc
jne
sbb
notl
popf
call
sub
jl
arpl
jmp
out
adc
adc
into
inc
xor
out
mov
es
xor
insb
je
or
lahf
add
or
sbb
jne
movsl
lea
test
mov
xchg
or
push
dec
push
adc
jo
xchg
jae
xchg
les
pop
cmc
jmp
cld
pop
lock
arpl
mov
dec
adc
hlt
xchg
movsb
push
adc
xchg
in
dec
or
imul
addb
xchg
inc
rolb
lods
mov
in
push
push
and
jmp
lock
ret
dec
dec
int3
pop
add
flds
shr
push
push
es
ss
push
add
sbb
adc
adc
mov
or
sbb
in
and
sub
sbb
sub
pop
int
sbb
add
movb
fs
lret
pop
or
lock
pop
jle
out
or
insl
ds
call
js
shlb
sub
push
xor
xor
popf
add
aam
pop
mov
verr
sar
inc
push
arpl
lock
icebp
roll
jmp
push
icebp
es
lock
push
scas
mov
pop
sbb
cmp
popa
in
adc
daa
push
dec
adc
cmp
sub
push
rorl
jne
mov
popa
cmp
dec
sub
push
stc
jb
clc
negl
scas
je
sbb
and
pop
pop
imul
shld
jp
fcmovnu
pusha
mov
pop
leave
sbb
jecxz
pop
aas
insb
adcl
xor
mov
mov
pop
cmp
and
in
push
add
jne
arpl
push
enter
mov
pop
push
loopne
add
daa
js
push
shlb
mov
sub
add
mov
pmaxub
insb
ss
add
push
dec
adc
cs
roll
add
add
cmp
shrb
and
je
pushf
mov
shl
fdivrl
push
pop
push
xchg
adc
nop
or
sti
mov
stos
add
pop
leave
pop
test
loopne
jno
pop
shlb
je
or
cmp
je
push
mov
pop
dec
inc
push
jae
sahf
adc
xor
push
push
insb
adc
sbb
enter
movsb
xor
daa
xchg
and
pop
ret
xor
lea
jb
lods
cmp
inc
cmpsb
mov
imul
adc
cmp
push
xor
sti
jmp
mov
sub
jne
xor
push
push
inc
adc
cmp
js
or
mov
push
lock
mov
pop
push
addl
lea
or
push
mov
add
or
rolb
je
add
fiaddl
mov
lcall
cmp
sub
mov
imul
jo
fimuls
loopne
jg
outsb
or
call
mov
pop
shl
pop
hlt
shr
das
rol
pop
adc
push
sub
sub
popa
lock
jle
iret
push
push
add
push
xlat
push
fnsave
or
dec
jp
clc
in
popf
cmp
add
add
or
jp
mov
inc
test
lods
hlt
addl
enter
dec
sbb
jp
es
push
es
add
dec
mov
mov
push
push
mov
xor
or
cmp
sbb
fildl
es
xchg
add
movsl
in
movsl
or
push
push
insb
into
or
subl
dec
mov
or
or
clc
aaa
add
add
push
mov
push
call
ret
jo
pop
add
lock
test
outsl
pop
push
mov
cmp
je
sbb
loop
xchg
mov
mov
clc
cmp
xchg
lcall
pop
and
movsl
shlb
mov
out
mov
sbb
xor
sub
ret
jp
pop
sub
shrb
pop
pop
add
push
pop
push
mov
out
jnp
lret
out
sub
jecxz
push
and
cmpsb
xor
or
subl
cs
scas
sub
inc
inc
or
mov
mov
or
decl
cmp
je
push
lea
push
jbe
fnstcw
cwtl
arpl
cmp
sub
push
sbb
inc
adc
pop
lcall
xor
sub
dec
in
cld
sarb
loop
sarl
aas
push
adc
gs
rcrb
and
dec
mov
mov
push
clc
add
or
in
inc
lods
jbe
fucomp
xor
push
mov
neg
push
add
lea
test
call
pop
push
loope
in
or
add
mov
sbb
scas
je
lock
lods
negl
movsl
inc
jge
test
ja
jbe
or
aas
push
movsl
push
push
xor
push
push
cmp
je
fcmovu
cmp
jo
push
push
xchg
mov
inc
add
fiadds
push
mov
sti
mov
cmp
je
push
push
aas
sub
mov
xor
mov
ret
jmp
dec
addb
fdiv
mov
add
test
mov
push
lret
and
cld
push
xor
adc
push
test
loopne
in
and
push
push
imul
cli
testb
mov
xchg
sahf
into
gs
scas
in
incb
jp
inc
push
and
add
mov
sbb
test
je
push
std
dec
int
xchg
dec
cmpl
je
ret
scas
mov
pop
or
and
sub
xchg
push
adc
adc
andl
adc
mov
ret
add
jb
pop
mov
push
ljmp
sub
adc
dec
fisttps
and
cmpb
mov
jb
mov
or
js
lea
in
cmp
je
cmp
roll
aas
cld
je
cmp
jne
add
cmpsb
mov
mov
ja
cmc
je
es
andb
or
and
clc
dec
jno
mov
outsb
pop
mov
cmp
xor
push
pop
mov
pop
clc
and
cld
ret
adc
sbb
add
cmpsb
mov
dec
lea
cmp
jne
xchg
adc
add
xor
jl
push
mov
mov
or
push
jns
ret
stos
aaa
pusha
xchg
jge
xlat
cld
xor
push
jle
insb
jmp
sub
cld
or
mov
adc
leave
lods
pop
and
sub
ret
add
andb
ret
push
add
xchg
push
jb
cmp
ja
pushf
cmp
or
sub
sbb
inc
aaa
push
loopne
shll
push
ret
mov
pop
push
call
add
push
adc
popa
sbb
lock
add
pop
push
inc
adc
jne
add
cmp
repz
repnz
js
lock
adc
in
mov
fbstp
mov
mov
cmp
add
mov
cmp
gs
cmp
je
cmp
jne
mov
sbb
add
out
cmc
push
dec
inc
repnz
mov
pop
dec
xor
or
jne
jmp
testb
pushf
testl
scas
inc
sbb
cli
cmp
jbe
dec
test
pop
add
add
outsl
fs
dec
inc
jmp
inc
and
scas
orb
xor
pop
mov
fs
xchg
or
dec
rorb
mov
loopne
jl
lahf
and
lock
je
mov
lea
push
sahf
clc
adc
or
enter
cs
in
inc
xor
inc
cmp
cld
pop
sahf
jne
cmp
notb
mov
pop
cmpb
insb
test
in
mov
clc
je
sub
or
cmp
or
ja
shrb
enter
test
aas
xchg
cld
add
push
scas
out
xor
cmp
push
sub
push
jae
jo
dec
jno
cmpsb
inc
sub
popa
loop
jne
loopne
xchg
mov
clc
inc
loopne
inc
adc
movzwl
ss
data16
mov
aaa
jb
cmp
rol
shl
add
jmp
cwtl
aas
pop
icebp
fmull
mov
inc
orl
test
es
je
fs
jne
xor
and
sub
je
push
mov
or
add
test
ljmp
jae
mov
jmp
dec
shlb
cld
mov
mov
sub
lea
cmp
call
out
xor
push
or
movsl
push
lret
cmp
jg
or
jge
outsb
outsb
outsb
xchg
mov
or
jle
es
sub
outsl
sub
and
pop
cmp
jl
pop
jle
pusha
jg
cld
aad
inc
test
jp
jb
jbe
mov
or
test
fwait
and
or
repz
je,pn
test
jne
je
outsb
and
es
jb
xchg
je
je
xor
and
adc
movb
jmp
push
sub
push
sbb
adc
add
incl
push
push
mov
inc
and
cmp
out
adc
icebp
mov
push
mov
push
mov
inc
push
hlt
loop
jp
inc
es
mov
push
inc
popf
lods
scas
adc
shrb
push
movl
sub
mov
cld
or
xor
push
test
pusha
stos
orl
fs
sahf
sbb
xchg
or
push
mov
jne
out
pop
cmp
add
mov
xchg
jmp
lods
push
sbb
mov
pop
sub
mov
inc
mov
movb
mov
inc
lea
mov
inc
mov
pop
add
pop
jb
sbbl
loopne
sub
cmp
mov
repnz
es
loopne
inc
das
mov
or
lea
pop
cwtl
xor
sbb
lahf
inc
mov
stos
dec
daa
mov
add
lret
addr16
fadds
push
push
jmp
and
jae
mov
lea
push
ret
insl
and
cmp
daa
push
into
divl
xchg
adc
mov
fld
push
pop
cld
adc
sti
mov
sub
jp
or
pop
mov
xlat
sti
pop
daa
dec
add
sub
and
inc
ss
adc
dec
ds
push
rorb
movb
adc
rcrb
mov
push
push
mov
push
or
add
inc
inc
jp
inc
ficompl
es
jl
add
cmp
mov
mov
pusha
add
mov
add
mov
inc
inc
sahf
jb
rcrl
push
cmp
lock
popa
mov
and
pop
pop
add
inc
xchg
xchg
pusha
push
les
sbbb
mov
outsb
addl
popa
sub
pusha
sti
pusha
jb
cs
or
arpl
pop
cwtl
and
add
inc
fisttpl
mov
xchg
andb
sahf
cmpsb
pop
data16
pushl
push
rcrb
mov
pop
dec
add
mov
mov
and
call
sub
in
jmp
xchg
jne
fxch
loope
lahf
jne
addl
xchg
or
les
sbb
pop
mov
rolb
jne
iret
push
leave
or
inc
xor
mov
and
nop
cmp
sbb
enter
add
stc
test
sbb
test
cmc
mov
call
cld
ret
pusha
inc
imul
faddl
push
pop
pop
cmpsb
aam
push
push
cli
xor
jecxz
mov
xor
mov
add
jbe
in
jl
sahf
pusha
es
push
shrb
sub
and
pusha
div
cmp
test
cmpb
adc
jge
fdivl
jne
sbb
out
hlt
lods
cmp
jnp
das
movl
add
inc
mov
bound
cmpl
dec
adc
inc
sarb
data16
add
push
pop
inc
push
aas
jp
mov
sbb
lcall
scas
movsb
fbld
inc
je
enter
lock
push
lds
lds
add
inc
xchg
mov
loope
jge
pop
and
aaa
sbb
das
mov
inc
fistpl
mov
shll
iret
adc
in
lock
push
aam
fsubr
cmp
in
shr
insb
test
jo
push
push
es
sbb
and
fsubrs
sbb
inc
push
call
xor
push
xchg
ss
sub
jge
test
inc
cmp
add
shrl
jae
jmp
pop
inc
cmp
je
lea
pop
mov
ret
pop
jne
les
aam
adc
in
pop
cmp
mov
sub
sub
mov
inc
call
shlb
jl
push
sahf
ja
push
jmp
test
movsb
push
adc
cltd
test
jge
dec
fchs
xor
addl
mov
je
jmp
add
sub
mov
push
and
test
add
enter
popa
dec
add
push
fsubl
ret
or
mov
loop
dec
popa
in
adc
pop
sbb
js
mov
pop
push
fnstsw
movsl
pop
xor
mov
mov
sub
adc
add
addb
ror
jne
mov
test
rcll
jo
mov
sub
mov
mov
cs
lret
movsl
or
xor
cmp
mov
inc
mov
add
mov
aas
shlb
add
jbe
sbb
lock
adc
mov
jmp
xor
xor
push
cmp
fst
mov
cmp
dec
cmp
ja
xchg
mov
and
mov
sbb
sub
sub
xor
mov
cmp
add
sbb
aas
or
adc
push
jge
and
xchg
mov
or
insb
push
or
clc
in
add
dec
test
jmp
pop
xchg
add
xor
or
inc
pop
lock
push
cwtl
push
aas
cmc
add
jge
in
or
sbb
movsl
cmp
in
fsubr
scas
adc
pop
sbb
push
inc
pop
mov
cmpsb
and
mov
push
push
inc
push
hlt
aas
cmp
popf
dec
sahf
lods
mov
mov
cwtl
insl
xchg
or
xor
inc
add
orl
mov
jl
orl
sbbl
pop
inc
dec
adc
add
inc
dec
fidivrl
sbb
mov
push
push
lock
lea
jo
pusha
push
inc
imul
inc
repnz
sarl
test
ja
pop
das
pop
fadds
or
or
add
mov
mov
lcall
je
mov
xor
jmp
pushl
mov
loopne
in
dec
ret
out
out
jne
cld
in
xor
test
mov
mov
repz
add
add
push
pushf
mov
call
ret
andl
add
cmpsb
std
das
mov
inc
jle
add
fucomi
ud0
push
std
das
mov
jg
mov
lea
lret
mov
jnp
ret
fiadds
pop
xchg
shlb
shll
in
mov
dec
bound
or
cmp
je
in
inc
insl
or
sarl
dec
add
nop
sbb
daa
push
xchg
rclb
imul
pusha
jo
out
in
jb
xchg
mov
icebp
mov
xor
sbb
out
xchg
mov
les
orb
cmpb
xchg
int3
cmp
xchg
mov
pop
xor
sbb
push
adc
shl
or
jo
sahf
xchg
call
dec
lock
xchg
pop
daa
loopne
or
in
xor
lcall
or
bound
xchg
adc
adc
xchg
inc
cmp
inc
out
and
or
cmp
subl
subl
test
push
pop
loopne
shrl
sarb
sbb
fimull
add
loopne
push
or
cmp
in
mov
lock
imul
inc
enter
shlb
inc
xchg
cmpsl
jnp
mov
popa
adc
pop
or
cmp
scas
dec
or
mov
inc
notb
aaa
sub
call
xchg
mov
sbb
cmp
sbb
xchg
pushf
xchg
sbb
jmp
pop
or
push
pop
mov
mov
push
pop
cmpsb
frstor
je
xor
mov
add
pop
repz
adc
dec
sbb
push
xor
test
push
cmp
and
sbbb
sub
sahf
cmp
jge
or
pop
sub
add
dec
test
sbb
fistpll
add
mov
add
or
sbb
push
adc
xchg
mov
andl
rorl
pop
inc
lock
add
rorl
lcall
hlt
cs
jecxz
push
movl
xor
or
or
jle
mov
cld
popf
mov
cmpsb
mov
in
add
mov
hlt
lcall
lods
cmp
int3
stos
bound
ret
xchg
icebp
stc
cmp
pop
or
cmp
inc
inc
or
loop
addr16
sub
out
push
adc
mov
xchg
int
lea
popa
incb
inc
lea
push
sub
dec
inc
inc
cmp
sbb
lahf
inc
xor
ret
mov
or
and
and
and
clc
and
pop
inc
ljmp
cmp
bound
cwtl
adc
imul
adc
enter
imul
cmp
inc
pop
cmp
scas
and
adc
mov
add
rorl
mov
push
incl
xchg
mov
subb
sbb
or
xchg
pop
sub
xchg
add
lret
jle
adc
adc
jbe
shrl
or
mov
add
push
int3
inc
dec
add
add
cmpsl
jno
and
fsub
mov
mov
pop
sahf
add
mov
jo
xchg
jo
icebp
add
movsb
cmp
loopne
inc
ret
xor
push
fcomps
mov
add
push
and
ljmp
inc
dec
mov
pop
pop
push
or
out
and
rorb
xchg
repnz
lea
popf
loop
ret
pop
cmp
mov
xchg
mov
push
fimuls
cmp
push
lods
popf
pop
pop
mov
xchg
sbb
outsl
jp
shlb
sub
lahf
rclb
inc
out
inc
orb
cmp
aad
lock
push
push
pop
xor
in
push
mov
or
or
stos
mov
shll
dec
rolb
shlb
adc
dec
mov
ret
pop
inc
push
push
insl
pop
pop
push
filds
in
add
or
fwait
xchg
insb
nop
mov
push
add
shll
loope
repz
or
test
ret
mov
neg
push
inc
inc
mov
mov
add
jp
movsb
push
nop
add
test
test
or
sbb
or
sub
xor
pop
andl
xchg
sub
test
stos
adc
mov
add
jge
add
push
rcrb
mov
cmpsl
mov
pop
in
clc
cli
out
out
and
mov
outsb
pop
push
movsl
mov
lea
out
fs
sbb
and
push
sbb
xor
xor
push
add
and
and
cmp
or
xor
lret
mov
add
enter
and
icebp
pop
or
test
mov
cli
sub
scas
out
adc
cli
xor
inc
mov
stos
fbld
bound
or
scas
mov
jno
adc
mov
and
push
cmp
pop
or
cli
mov
cmp
sub
dec
fiaddl
sbb
sbb
xchg
inc
adc
add
fs
pop
cltd
add
inc
adc
add
aad
push
pop
push
iret
imul
add
fcoml
mov
sub
xchg
popa
mov
and
mov
sbb
xor
add
adc
insb
pushf
sbb
ljmp
inc
rol
or
lods
and
or
pop
jge
sub
lock
jmp
xor
stc
jo
jl
inc
clc
and
or
out
add
dec
push
push
sub
cmp
out
cmp
add
mov
inc
jnp
jne
mov
fwait
rolb
push
lods
cmpsl
add
inc
mov
addl
sub
shll
push
push
sbb
enter
pop
and
jl
sub
jo
inc
add
cli
adc
test
shl
popf
and
mov
jge
inc
mov
push
inc
cmpsb
stc
xchg
ficomps
cmp
dec
js
jle
jmp
cmp
and
ds
iret
xor
loope
dec
out
inc
cmp
dec
lcall
stos
ss
mov
aaa
xor
loopne
or
sub
mov
cvttps2pi
es
jne
and
pop
add
xchg
xor
push
pop
push
ljmp
sub
add
loope
in
das
push
adc
and
xor
es
sbb
cmp
push
icebp
dec
sahf
iret
xchg
sbb
add
dec
and
xchg
dec
xor
and
insb
popf
adc
icebp
push
and
sub
daa
jecxz
adc
push
mov
loop
mov
sub
popf
xor
jno
bound
loop
imul
sub
adcl
loopne
pop
mov
aaa
ss
dec
push
loopne
cmp
into
les
lea
incl
and
test
jg
scas
call
add
test
adc
out
mov
add
xchg
push
cld
dec
push
insb
cmpsl
or
xor
and
or
xor
clc
xchg
dec
dec
inc
call
and
fiadds
sbb
add
in
xchg
xchg
xlat
mov
and
jo
sbb
jo
sbb
xor
xor
xchg
inc
cmp
jne
mov
jmp
pop
adc
jge
lods
pusha
daa
add
or
popf
pop
insl
push
add
xchg
jno
sbb
xchg
dec
andb
sbb
jne
add
sub
aaa
lcall
lds
lds
mov
cmp
scas
sub
xor
sub
das
sub
and
sub
xchg
mov
push
ret
stos
and
in
add
loop
aam
push
add
add
dec
aaa
rcrb
or
push
or
stos
lea
cmpl
aad
call
mov
xor
mov
add
push
in
into
adc
jg
mov
cli
dec
mov
int
xor
mov
inc
add
lret
mov
cli
mov
movsb
shlb
repnz
cmp
jb
in
adc
inc
mov
adc
cwtl
xor
cmp
add
or
adc
mov
sbb
or
inc
lock
daa
push
subl
and
xor
out
andl
add
or
push
mov
fsubrp
shlb
in
jge
popf
xorb
arpl
mov
cmpsb
lret
and
lret
movsb
iret
push
lea
les
xor
ss
and
or
imul
mov
add
add
aam
or
sub
test
call
and
test
adc
push
jo
cmp
in
dec
lea
jbe
jge
ljmp
or
ret
xchg
pop
popa
loope
repnz
adc
pop
xchg
addb
adc
fstps
xor
sysenter
mov
int
cmpl
test
add
sarb
ss
enter
mov
xchg
push
int
push
adc
inc
cmp
fmul
adcb
jl
mov
pop
decl
mov
prefetch
or
add
aaa
sub
push
push
or
sbb
adc
ss
xchg
imul
adc
mov
or
cmovo
mov
push
push
iret
xchg
dec
cmp
push
sbb
xchg
lret
or
lea
mov
inc
ror
push
cmpsl
or
pop
aaa
addb
ja
sub
pop
mov
or
aam
and
jmp
sbb
iret
scas
lods
mov
sub
aaa
sbb
cmp
add
xor
pop
movsb
add
test
pop
pop
xchg
add
stc
or
pop
adc
aaa
stos
mov
out
andb
adc
and
push
gs
cmp
test
push
add
fcompl
or
mov
test
mov
adc
cmpsl
call
mov
or
inc
inc
bound
xchg
scas
mov
or
bound
or
mov
js
mov
push
dec
das
nop
mov
aas
mov
movsl
call
push
pop
sub
xor
inc
inc
in
aas
xor
out
cltd
insl
fimuls
ds
dec
xor
flds
sarb
push
jle
ficoml
fiadds
cmp
sahf
test
or
adc
xchg
add
fstp
popf
mov
push
add
leave
rcrb
les
aaa
fstl
jae
dec
mov
cli
jmp
push
push
or
outsl
cs
out
add
ret
mov
nop
inc
adc
lea
push
adcb
mov
arpl
add
outsb
adc
push
outsl
push
or
push
daa
sbb
xchg
in
rcrb
push
push
lock
shll
xchg
inc
inc
in
adc
mov
jge
adc
ljmp
mov
or
test
rcrl
xchg
into
rclb
inc
xchg
or
inc
push
xchg
fwait
lahf
mov
sub
mov
mov
sbb
push
fsubrs
adcb
mov
or
adc
in
inc
ja
and
and
sbb
test
push
setb
pushf
fidivrl
hlt
add
and
cmpsb
push
pop
xor
jb
push
adc
mov
sub
jbe
pop
jecxz
mov
sbb
xor
adc
int3
inc
rclb
fdivrs
fmuls
fsubl
loopne
pop
sbbb
fs
and
mov
push
mov
shr
pop
push
adc
daa
rcll
pop
lods
mov
xchg
pushl
push
cmp
outsb
outsb
cmp
jle
or
js
sbb
add
dec
pushf
nop
xchg
in
jmp
mov
popa
xor
push
push
cmpsl
mov
jne
ret
adc
movzbl
push
sub
sub
cs
jg
xor
sbb
mov
rolb
inc
fs
fdivrp
sbb
adc
fistpl
mov
dec
outsl
push
xchg
dec
hlt
fnstenv
je
sub
fcoms
and
push
jmp
push
jecxz
rcrb
das
jmp
addb
xor
lock
movsb
mov
movd
push
test
adc
add
adc
push
inc
push
int
rorb
setne
imul
cmp
addl
xchg
xchg
cltd
popa
pop
or
js
sbb
mov
sbb
aaa
and
or
mov
xchg
mov
cmp
dec
leave
push
aaa
outsb
or
add
mov
movl
and
inc
jne
jns
lcall
push
jge
jle
and
push
or
push
decl
pop
cmp
jne
push
daa
or
xchg
push
push
xor
outsb
dec
xor
mov
or
adc
cmpb
mov
and
cmp
js
mov
int3
clc
loopne
aaa
xor
cmp
cmp
je
xchg
lock
mov
movb
adc
xchg
push
push
push
and
enter
pushf
iret
aas
mov
cs
fiaddl
and
and
mov
sar
repz
xchg
in
mov
jns
add
pop
or
addl
lock
xor
fs
xchg
loopne
je
sub
hlt
roll
imul
xchg
pop
sbbl
mov
ljmp
xchg
in
push
fwait
scas
rorb
movsb
cmp
cmp
mov
imul
xchg
mov
lret
inc
mov
mov
ret
mov
inc
insl
mov
jg
lret
push
sbb
adc
add
inc
movsb
xchg
push
or
hlt
mov
and
mov
test
sbb
jg
xor
push
mov
adc
lea
mov
or
icebp
imul
dec
adc
lea
jle
mov
and
call
pop
das
add
mov
test
pop
push
sub
bound
loopne
push
movl
ret
sub
ss
bound
inc
xchg
xchg
pop
testl
push
xlat
mov
addl
xor
push
pop
stc
fdivrs
cmp
mov
xchg
jne
sub
sbb
mov
loop
xchg
cmp
sbb
cmp
or
and
and
mov
jb
scas
jmp
fcomi
cmp
out
leave
jb
ret
mov
and
nop
popf
imul
sbb
jb
or
jns
push
test
mov
cld
loopne
cmp
push
inc
pop
stos
adc
add
add
in
je
lods
addb
adc
mul
jbe
ljmp
mov
mov
inc
cmp
jb
pushl
push
adc
mov
test
icebp
flds
cmp
ja
jae
pop
or
sbb
dec
sbb
ds
imul
adc
mov
adc
push
inc
push
add
add
cltd
pop
jae
mov
sbb
and
sub
mov
es
popf
fstl
fwait
mov
lea
mov
popa
ficompl
add
fcompl
xchg
dec
cmpsl
xchg
jae
pop
sarl
js
cltd
or
loopne
xor
mov
adc
out
mov
xor
dec
cld
test
lea
lea
inc
pushf
mov
mov
sahf
adc
dec
mov
xor
inc
arpl
mov
mov
mov
and
shlb
pushf
and
inc
adcb
xor
fdivrl
mov
icebp
es
cmpsb
push
mov
cwtl
push
rcr
das
aam
jl
inc
mov
cs
dec
mov
push
je
mov
sbb
out
inc
inc
in
pusha
divb
andl
rolb
xlat
orl
push
loopne
add
push
dec
inc
test
or
sbb
cmpsb
cmc
and
jecxz
arpl
roll
jl
jo
push
int3
test
enter
sbb
xor
cmp
jne
insl
rcll
fnstenv
push
mov
dec
or
in
and
js
pusha
int
ret
pop
ljmp
sti
dec
movsl
pop
mov
mov
test
leave
mov
movsb
cli
push
into
jmp
bound
dec
or
lock
lea
clc
scas
xor
rcr
push
ss
insl
jb
lods
lods
xor
or
cmp
inc
pop
cwtl
jne
and
mov
mov
loope
inc
das
outsb
test
jns
es
faddl
or
push
lods
sbb
insb
ret
and
sub
add
adc
inc
sbb
insb
and
jmp
or
insb
sub
mov
mov
inc
adc
jno
lahf
out
data16
cmp
inc
xchg
or
int
xchg
es
jg
pushf
or
add
test
dec
mov
inc
dec
jno
lcall
mov
xchg
jg
cmp
std
or
and
cmp
add
inc
push
clc
add
testb
pushf
lods
es
loop,pn
jmp
xor
sub
adc
je
or
push
sbb
sub
or
movl
pop
mov
repnz
mov
sti
cs
das
cmpsl
hlt
add
bswap
sub
notb
cmp
xlat
mov
into
jmp
pop
popa
cmp
pop
mov
or
mov
jmp
pop
mov
jl
lods
xchg
cmp
jge
mov
mov
sbb
add
lcall
push
push
xor
or
sbb
or
add
and
mov
jnp
test
movzwl
std
outsl
jecxz
adc
adc
sub
inc
shrl
lods
inc
ret
rcll
xor
test
ret
pop
push
push
or
sub
mov
clc
dec
pushf
lock
lahf
push
adc
out
iret
ficoms
aas
les
mov
sub
add
movsb
sahf
inc
out
daa
adc
ja
add
clc
mov
pop
push
mov
roll
stos
mov
movl
mov
push
mov
rclb
sbb
add
pop
loope
push
and
mov
fprem
inc
pop
pop
mov
xor
loop
cs
mov
testb
ret
int3
pop
adc
push
xchg
mov
add
dec
or
fwait
clc
or
and
mov
inc
cmp
jbe
push
xor
je
out
inc
cs
mov
mov
repnz
pop
adcb
inc
cmp
jb
stos
imul
data16
inc
icebp
xchg
push
push
pop
add
shlb
sub
mov
mov
jg
push
sub
dec
and
push
in
sbb
jne
lock
test
mov
test
pop
bound
add
insb
mov
or
inc
nop
mov
adc
push
negb
dec
cmp
jae
xor
or
add
scas
and
adc
mov
add
cmp
adcl
mov
mov
mov
push
mov
or
add
push
or
jmp
or
mov
psllq
mov
scas
or
mov
push
or
dec
cmp
lret
adc
sub
bsf
sti
fmuls
inc
sub
mov
or
scas
in
aaa
add
rclb
adc
fucom
lds
xchg
inc
rorb
cmp
push
enter
inc
xchg
stos
ljmp
mov
stos
int3
aad
movd
jno
ficoml
adc
notl
add
lods
sti
inc
cmp
jl
dec
in
jns
sti
mov
pop
sbb
add
sbb
jmp
aaa
call
pop
out
es
mov
arpl
adc
xchg
sbb
dec
cli
push
int3
push
xor
jae
je
pop
add
in
sub
ret
mov
push
add
test
adc
sbb
cld
push
dec
inc
push
adc
jnp
xor
sub
pop
or
xchg
cmp
xor
push
push
outsl
adc
adc
dec
in
jg
and
push
test
ds
icebp
add
xor
mov
xor
xchg
inc
push
out
lea
in
ja
or
mov
cwtl
dec
or
push
cmp
xchg
and
fsub
in
inc
add
mov
or
lretw
dec
add
or
outsl
add
test
mov
mov
xlat
jmp
les
jl
or
xor
push
jbe
into
mov
add
add
cld
out
sarl
mov
div
pop
dec
and
js
inc
cmp
mov
dec
or
sbb
dec
cmp
les
stos
jmp
jnp
jb
push
mov
imul
cmp
jne
mov
cmp
xchg
loope
xor
mov
xchg
js
lock
mov
jne
lods
push
js
adc
jle
pop
imul
push
add
inc
pop
out
out
mov
rcrb
dec
add
pusha
sbb
movlps
or
sub
andb
and
adc
pusha
and
data16
in
lods
sbb
aam
sub
pusha
mov
scas
rcl
fildll
push
je
mov
call
push
mov
dec
and
mov
or
scas
jo
xchg
jmp
fstpt
fs
sti
jl
jmp
ret
mov
mov
negb
xor
pop
loop
mov
fildl
fadds
addr16
gs
clc
loopne
sldt
xor
adc
jbe
inc
cmp
ficoms
cmp
ja
mov
cmp
ret
push
int3
pop
arpl
shlb
xchg
jne
loop
dec
roll
in
hlt
ja
mov
mov
or
out
stos
fisubrs
or
pop
or
js
rcrl
cmp
orl
inc
jl
sub
jmp
mov
icebp
pop
cli
movsl
int3
push
enter
sarb
aaa
sti
pop
sub
or
inc
inc
cmp
jbe
inc
fisttps
cmp
fs
pushf
es
clc
sub
loope
popa
and
push
inc
fstl
jmp
sub
jae
sbb
cmpl
in
mov
jo
mov
ds
pop
lock
iret
hlt
sbb
dec
fdivr
adc
pusha
add
jge
pusha
add
loop
inc
cmpsl
mov
les
jne
or
mov
pop
aad
and
ret
addl
daa
add
cmp
adc
int3
pusha
sub
repz
mov
hlt
add
iret
pop
add
sub
cltd
fwait
in
ss
mov
pop
cmp
outsl
or
add
sbbl
adc
add
add
add
and
aas
sbb
or
mov
sbb
cmp
mov
pop
mov
and
jo
ret
out
bound
and
hlt
test
shrl
dec
popf
ret
in
mov
int3
inc
sbb
mov
rcrb
stos
loopne
sub
dec
leave
jb
add
pushw
push
je
lret
ret
and
pop
mov
loopne
les
jmp
push
mov
xor
lods
pop
loopne
jae
cs
xchg
cld
add
xchg
add
jle
xchg
loopne
sbb
dec
rclb
add
add
cmpsb
fwait
inc
sub
pusha
fmuls
fwait
fwait
or
sbb
add
inc
push
arpl
adc
dec
movsl
rorl
ret
mov
lods
cld
or
nop
pusha
xor
mov
rorl
mov
add
inc
inc
pop
jb
lock
xchg
in
xor
rcrl
mov
icebp
add
dec
popa
cltd
pusha
add
sbb
jmp
dec
xor
aad
adc
dec
adc
addr16
or
and
add
adc
lea
push
lea
pop
shlb
pop
rorb
mov
inc
cmp
push
jmp
cmp
les
mov
lahf
add
lret
or
sub
fimull
jnp
cmp
aam
fdivs
xor
lea
jb
cmp
push
outsl
mov
cmp
dec
inc
jns
dec
dec
clc
jne
sti
int
imul
aaa
js
mov
sub
lea
mov
push
pop
pop
stos
adc
or
cmp
and
jbe
inc
cs
hlt
negb
scas
jns
or
push
adc
pop
inc
add
dec
pusha
push
mov
call
inc
pusha
mov
sbb
fxtract
jne
mov
js
fistl
inc
or
cld
loopne
fnstenv
mov
shrl
xchg
dec
xor
in
add
nop
data16
jb
fcmovbe
cld
clc
pushl
cmp
pushf
mov
lea
mov
pop
xchg
test
sub
mov
mov
xchg
or
xor
sbb
xchg
pop
add
mov
push
mov
xor
and
je
mov
cmpsl
or
adc
mov
inc
push
jb
pop
inc
loop
loopne
lods
and
push
mov
dec
add
jns
mov
inc
inc
adc
es
arpl
jge
and
bound
or
cmp
mov
orb
add
mov
js
xor
mov
mov
cmc
add
mov
and
cmp
movsb
ret
jne
push
ja
out
push
jle
dec
hlt
popf
ret
das
sub
dec
inc
xchg
add
lea
sahf
dec
int
lret
cmpsl
in
xor
aas
imul
mov
out
inc
jne
sub
das
push
jmp
sbb
add
mov
das
push
xor
nop
out
or
jnp
fcmovnbe
mov
lea
addr16
adc
icebp
sbb
loopne
xorb
cmpsl
sbb
or
xor
mov
bound
repnz
add
test
add
in
adc
popa
push
andl
movzbl
add
mov
sub
mov
add
or
mov
in
cmp
pop
or
xor
int
or
jle
jl
push
rcrb
pop
push
push
inc
call
mov
cld
stos
add
mul
seto
sarb
mov
or
mov
or
adc
mov
int3
test
cmpsb
cmp
sbb
jl
loopne
fsubrp
sbb
pop
or
or
clc
pop
pop
ljmp
sbb
loopne
testl
nop
mov
addr16
jecxz
inc
cmp
inc
int3
inc
mov
jl
jle
push
add
mov
pop
jo
mov
add
fldcw
adc
std
xor
or
adc
mov
mov
sbb
sbb
sbb
jae
data16
add
and
push
xor
add
mov
jmp
pop
nop
int3
mov
ret
inc
push
add
pop
ds
xchg
cmp
loop
xor
sub
je
xchg
jns
xchg
xor
addl
repnz
pusha
or
jo
rorb
lret
cmpsl
push
pop
add
loopne
mov
push
mov
inc
cwtl
mov
jne
cmp
jbe
mov
add
pop
fidivs
pop
js
pop
sbb
adc
call
sbb
add
add
or
jbe
xor
fists
mov
subl
daa
insb
add
in
aam
sbb
jnp
loopne
repz
sub
and
loopne
pop
and
ljmp
nop
mov
pop
ret
test
dec
jne
insb
cmp
cmp
rorb
dec
and
test
rorl
cmpb
push
mov
adc
loopne
or
ds
jmp
adc
push
aas
enter
mov
mov
add
gs
rorb
aad
lret
sub
push
ljmp
das
gs
jo
xchg
sub
push
loop
dec
movsl
mov
sub
xor
hlt
inc
addb
into
jmp
push
imul
lret
mov
mov
movb
cmc
daa
lret
fstpl
or
mov
jb
addr16
je
mov
fimull
push
dec
xchg
or
cmp
pusha
push
inc
and
pop
pop
cmp
pop
jg
sbb
cmp
aas
test
jge
jb
inc
add
lidtl
lahf
dec
push
dec
push
mov
or
ljmp
mov
mov
add
adc
je
addb
add
mov
xlat
ficoml
aaa
push
cmp
and
push
int
mov
xchg
nop
cmpsl
adc
fisttps
sahf
mov
adc
mov
cwtl
sub
stc
or
add
add
adc
enter
flds
les
pop
popf
add
insl
ret
inc
add
out
inc
sbb
lock
stos
xor
or
xchg
xchg
push
mov
mov
pop
repnz
add
xchg
push
add
cli
push
sbbb
and
call
test
add
movsb
jecxz
in
lods
filds
inc
out
or
xchg
mov
rolb
shrl
sbb
jp
xor
or
cmp
iret
pop
mov
adc
jne
in
in
jl
cmp
push
jmp
clc
mov
dec
movsb
or
lahf
cmpsl
call
mov
inc
orps
popa
andps
adc
inc
shr
popl
or
ja
clc
add
clc
jno
sub
rcll
or
and
icebp
or
dec
and
add
jne
sbb
repz
sub
or
sbbl
sti
lea
jno
lahf
or
cs
pop
clc
sbb
lea
addr16
mov
movl
cmp
add
mov
or
lock
insb
inc
fiaddl
addr16
fsubr
fnstenv
out
push
pushl
push
scas
xchg
in
xchg
and
js
push
push
loope
xor
sub
jo
pop
pop
sub
test
pop
push
and
rorl
xchg
mov
sub
dec
mov
sbb
push
insb
in
mov
test
adc
xor
test
fisubrs
in
jo
sub
mov
js
test
dec
xor
cmp
das
fsubl
mov
cmp
jb
sbb
imul
xchg
mov
roll
int
cmp
add
lea
mov
mov
fld
mov
rolb
mov
shll
add
movsl
or
popf
aad
aas
xor
sub
and
mov
addr16
je
dec
adc
push
lods
add
pop
lea
in
sti
lret
rclb
das
push
enter
call
mov
ret
mov
sbb
push
cmp
pxor
push
lcall
js
in
rclb
addr16
cmovg
jmp
movb
insb
out
iret
int3
cmp
jae
sub
loopne
mov
adc
cs
adc
mov
int
ljmp
push
push
cmc
mov
dec
sub
dec
xor
imul
imul
cmp
das
adc
dec
idiv
lcall
mov
xor
data16
mov
cmp
sti
adc
inc
ja
sbb
or
jae
xor
mov
push
aam
cmp
xchg
jle
sub
shll
cltd
push
fistpll
insb
int3
add
insb
mov
add
add
cld
orl
jb,pn
call
push
test
insl
enter
scas
adc
addl
fildl
loopne
add
pop
add
test
jne
add
addb
dec
test
sbb
mov
lds
xchg
push
push
roll
xor
lea
or
mov
out
test
and
in
inc
addl
call
repz
pop
mov
adc
or
test
scas
je
jecxz
loopne
loopne
fisttps
xchg
or
mov
xchg
or
push
orl
lds
or
cmp
mov
adc
add
add
sbb
push
pop
pushl
jmp
add
pusha
outsl
lret
repz
jle
jb
jnp
out
push
dec
mov
mov
mov
adc
scas
ds
and
push
out
mov
pop
push
push
push
mov
mov
jg
test
lock
cmpb
mov
jb
push
jae
lea
push
sub
dec
dec
add
sbb
popa
lcall
aas
loop
xor
ja
push
popa
loop
ret
test
and
enter
or
mov
pop
jmp
sbb
fisubl
lock
test
push
sarb
cmp
push
cmp
jae
inc
jmp
mov
or
mov
jnp
jge
add
out
test
add
ss
fsubrs
sub
add
add
sub
into
or
int
jbe
pop
pop
aas
jmp
xchg
adc
adc
cltd
push
push
add
jne
or
inc
pop
sahf
shll
in
jb
shll
shll
or
mov
or
sub
sbb
cmp
aas
addb
out
sub
pop
jno
mov
cld
pop
pop
int3
jno
mov
adc
or
add
fldl
and
add
add
ss
sbb
in
pop
nop
fimull
or
les
in
cmp
push
inc
and
inc
mov
add
je
mov
call
adc
ja
cmpb
push
push
or
add
mov
lock
sbb
rorb
cld
add
sub
lret
inc
and
pusha
push
fadds
cli
mov
adc
data16
icebp
mov
sub
push
inc
or
add
mov
jbe
mov
aam
std
jnp
jp
into
and
add
mov
jmp
mov
adc
shlb
lea
cli
ja
cmpb
add
push
imul
ret
push
xor
add
mov
xor
scas
or
pop
xor
adc
or
push
pop
fadds
arpl
push
addr16
cmpsb
imul
lods
cltd
jle
pop
sub
stos
and
adc
sbb
insb
inc
movb
add
cwtl
cli
xor
push
or
add
out
sbb
push
cmp
cmp
repnz
fadd
outsl
lret
dec
add
push
aad
icebp
mov
lret
stc
mov
sub
pop
push
test
out
xor
movsl
sbb
push
cmp
mov
jmp
test
mov
jne
mov
mov
addr16
push
mov
dec
in
pop
add
adc
icebp
sbb
add
xchg
int
pop
xchg
mov
test
and
mov
mov
flds
cmpsb
movsl
xchg
sbb
addb
ljmpw
dec
pop
mov
fisubrl
or
adc
push
mov
pusha
sbb
add
push
int
inc
mov
mov
and
in
imul
aad
add
mov
mov
in
lock
xchg
add
or
mov
icebp
adc
test
push
pop
cmpsb
nop
xchg
inc
cwtl
jns
rclb
fisubs
repz
mov
adc
dec
popa
fs
or
into
inc
fdivrl
inc
add
outsb
hlt
jg
frstor
hlt
enter
push
push
repnz
ja
push
push
cmpb
jne
inc
jns
es
int3
mov
adc
scas
scas
or
aaa
lea
test
mov
shrb
sub
aam
ret
sbb
test
or
or
jb
enter
push
mov
cmp
test
push
add
cmp
fcmovbe
push
popa
and
push
push
sbb
jle
xchg
add
ss
pop
mov
and
add
das
or
sar
dec
movsl
xchg
enter
jge
roll
scas
push
sbb
fsubrl
popa
sbb
sbb
ss
fwait
and
jnp
add
imul
inc
cmp
cli
flds
sub
cwtl
ret
das
add
jo
rclb
or
mov
jns
movsl
fsubrs
adc
adc
fwait
into
call
outsb
cmp
xor
mov
pop
inc
adc
enter
ljmp
sahf
add
pop
cmpb
int3
je
xor
test
scas
adc
jns
mov
and
mov
fs
adc
in
jns
mov
daa
and
rclb
push
cmovbe
mov
loope
push
push
dec
scas
adc
sbb
xor
dec
jns
and
or
lds
mov
pop
scas
push
ret
dec
popf
movsl
fsts
int
sbb
adc
dec
loop
test
jg
jmp
lea
fisubl
xor
push
adc
cmp
mov
push
mov
lret
push
xor
mov
imul
pop
inc
sub
and
and
mov
mov
push
sti
add
and
fildll
loopne
scas
sub
add
cmpl
dec
adc
xchg
pusha
sti
mov
jmp
lods
jnp
mov
mov
inc
adc
and
aad
std
mov
bound
inc
out
cmp
mov
xor
lods
mov
adc
orl
pop
jl
iret
fstpl
push
lea
jbe
pop
pop
mov
in
sub
ja
jmp
push
fistpl
clc
out
sub
js
dec
ljmp
stos
sub
cmpsl
fisttps
push
pop
sbb
shlb
stc
add
andb
and
push
dec
add
sbb
call
push
movsb
movsl
in
aas
add
cld
adcb
rcrl
fdivrs
aad
sub
push
and
xor
mov
or
and
xchg
stc
lret
and
roll
sti
fmuls
sbb
sbb
std
lods
bound
dec
add
loopne
dec
out
arpl
int3
sbb
loope
mov
aad
test
dec
call
xor
repz
xchg
and
outsb
dec
push
pop
pop
add
cltd
aad
sbb
into
or
outsl
jae
or
dec
sub
cmp
mov
sbb
mov
add
push
or
je
sbb
mov
mov
test
les
js
push
pop
test
pop
imul
popf
pop
inc
cmpsb
or
cmp
add
adc
inc
rorb
xchg
xor
data16
nop
cmp
push
sbb
movsb
in
popf
lock
mov
lret
add
enter
aad
pop
add
dec
arpl
dec
adc
xor
and
xchg
mov
lods
sub
imul
out
inc
movsb
cmp
inc
inc
add
mov
xchg
dec
sahf
iret
mov
enter
sbb
inc
sub
cmpl
jmp
sbb
dec
mov
inc
sbb
xor
or
sbb
cmp
push
dec
xor
mov
movsl
rcll
push
push
pop
test
test
and
sti
add
pop
lods
push
rorb
aaa
dec
xchg
add
mov
inc
mov
lea
sub
pop
or
add
shlb
loopne
ficompl
call
scas
xchg
clc
sbb
push
mov
ret
push
push
aaa
lods
pushf
lods
ret
sub
fdivrl
pop
mov
loopne
shrb
add
pop
loopne
fsub
xchg
push
mov
push
lcall
int3
out
ljmp
cmc
aad
sbb
or
lock
enter
and
pop
enter
sbb
mov
int
cmp
ret
outsb
sbb
int
mov
mull
and
dec
pop
sti
and
xor
pop
ljmp
cmp
popf
add
cmp
and
push
mov
or
scas
shlb
imul
mov
cmpsb
push
add
test
mov
stos
inc
cld
ds
push
add
orl
dec
int
ret
push
lea
daa
xchg
add
test
push
sub
aas
ret
adc
sub
in
int
xchg
ret
xor
sbb
dec
mov
pop
or
scas
movsb
sbb
dec
lock
arpl
dec
inc
pop
cmp
je
mov
insb
xchg
fildl
das
xor
shlb
mov
cmp
call
cmp
jl
jno
or
jl
jo
popf
stos
je
dec
sarb
fcoml
sbb
mov
test
inc
add
push
inc
push
cmp
jle
inc
adc
out
and
cmp
pop
ljmp
stos
jns
xchg
test
xor
jnp
leave
dec
adc
sub
test
je
adc
mov
jne
mov
xchg
adcb
inc
cmpl
loope
pop
xchg
jge
mov
das
imul
aaa
int3
fcoml
mov
shll
sub
cmp
call
add
or
pop
es
or
sub
jmp
xchg
icebp
add
or
mov
pop
inc
mov
cltd
xor
in
or
jns
cld
push
and
rcr
es
mov
cmp
mov
xchg
outsl
aam
les
addr16
push
cmpsb
leave
or
add
jmp
inc
imul
adc
lock
call
leave
add
lods
fs
je
int3
test
pushf
loopne
mov
pop
and
inc
cld
dec
pop
lock
sbb
fdivl
and
jge
les
mov
sbb
cmpsb
lcall
push
mov
jmp
call
push
and
pop
addb
sbb
daa
adc
fstpl
and
out
mov
and
jne
shrl
jne
xchg
nop
mov
int3
ret
jo
add
xlat
ljmp
jge
cmp
sub
cmp
loopne
enter
push
cmp
jb
mov
inc
add
loopne
jb
loop
mov
cmp
or
or
testb
push
cmp
dec
push
push
and
cmp
jne
pusha
outsb
sub
imul
cltd
jb
rcrb
hlt
scas
jne
arpl
mov
lea
subl
inc
or
test
or
testb
icebp
and
je,pn
cmp
jle
inc
cmp
movb
dec
add
add
sbb
jl
ja
insl
mulb
fsubrl
pop
mov
pop
cmp
add
subl
mov
dec
data16
and
rorb
push
mov
rorb
test
mov
xchg
adc
fmull
mov
adc
mov
push
xchg
mov
and
outsl
test
daa
sbb
sbb
adc
mov
pmuludq
push
or
pop
test
pop
or
popa
or
in
jae
mov
mov
jno
rorl
push
adc
mov
pop
outsb
jo
mov
repnz
or
ror
addr16
add
or
push
aaa
or
pop
jbe
dec
push
push
cmpsl
pop
or
push
push
push
cs
pop
mov
jo
ds
adc
test
ds
jp
or
ret
aas
aaa
and
mov
mov
push
addr16
add
cmpl
hlt
jmp
xchg
cmc
ret
add
mov
sbb
mov
test
inc
push
sbb
mov
icebp
into
inc
and
add
call
les
mov
insl
mov
inc
adc
test
add
xchg
mov
sar
add
or
ficomps
testl
xchg
lods
pop
inc
gs
insl
xchg
mov
inc
sbb
push
jb
and
adc
call
cmp
ljmp
inc
mov
jecxz
aas
xchg
andb
lea
xchg
sub
sarl
nop
ja
adc
es
adc
jg
test
jp
xchg
inc
mov
xchg
push
sbb
loopne
adc
mov
push
and
xlat
xor
sti
sub
xor
jb
ja
ret
sub
adc
insb
mov
fdivl
push
add
imull
and
add
jle
fisubrs
cmpsb
mov
in
pop
push
in
cld
jno
sub
repz
mov
orl
insb
mov
nop
and
movsb
test
mov
mov
mov
mull
xlat
sbb
pushf
push
dec
sub
adc
sbb
cmp
lret
movsb
push
sub
xor
daa
xchg
xchg
or
cmp
test
or
movsb
jb
cmp
push
xchg
lret
punpckhbw
mov
inc
insb
push
pop
cld
loope
jnp
jmp
pop
mov
enter
jns
pop
jb
mov
pop
int3
rcl
xchg
shlb
loopne
push
mov
pop
push
or
sahf
fsubrl
dec
fdivr
xchg
ficomps
push
movl
add
push
push
sahf
in
popa
mov
mov
jo
push
add
push
push
addb
pushf
xor
push
xor
mov
mov
iret
add
jbe
mov
sbb
xchg
add
nop
int3
enter
xchg
shlb
dec
cmp
adc
adc
push
xor
dec
push
jb
fs
inc
inc
sbb
enter
xor
enter
sub
enter
and
adc
xchg
adc
cs
fisttpl
adc
push
mov
enter
mov
push
adc
add
push
dec
cld
push
xchg
scas
icebp
lret
add
cmp
mov
push
orl
push
sub
and
add
loopne
mov
and
push
push
in
xor
int
daa
adc
dec
jne
cmpsl
push
repz
adc
cld
pop
or
sub
icebp
andl
das
mov
addr16
jp
add
and
cld
add
inc
or
addl
sbbb
mov
movsl
sub
or
mov
dec
add
cs
xor
sbb
dec
fiaddl
add
inc
adc
pushl
push
mov
pushl
push
popa
mov
cmp
xor
push
and
adc
loopne
adcl
loope
inc
das
sbb
call
dec
pop
icebp
mov
add
rclb
dec
and
inc
or
jmp
lea
insl
adc
filds
rcrl
pop
jo
insb
es
mov
loop
add
mov
jmp
popf
je
mov
addl
push
add
add
sbb
xchg
dec
enter
outsl
xor
push
inc
add
out
xchg
mov
or
inc
cwtl
push
rolb
xchg
xchg
cmp
ss
scas
gs
adc
adcb
test
fcoms
clc
sub
rorb
cwtl
int
pop
cmp
loopne
mov
add
fstpt
ljmp
mov
xchg
pop
mov
out
add
sbb
push
mov
js
lods
push
add
ja
mov
test
clc
ss
cli
cmp
sysret
aam
mov
int3
sbb
shrl
mov
fstpl
fwait
mov
les
sbb
push
aad
xchg
loopne
icebp
mov
xlat
add
pop
dec
xor
shlb
mov
stos
push
add
fmull
sub
add
das
add
and
cltd
lds
dec
cmp
sbb
gs
or
es
mov
sbb
icebp
push
fisubrs
cmp
into
mov
je
sub
ret
insb
xchg
sub
xchg
cmp
push
and
lea
adc
mov
jbe
push
xor
test
cmp
test
xchg
inc
jge
push
mov
pusha
icebp
inc
jo
popa
cmp
pusha
and
inc
fwait
sub
mov
adc
out
movb
cmp
test
hlt
cs
dec
iret
sub
movsb
orl
sbb
cld
dec
or
andb
mov
sub
popa
inc
sub
fstl
je
hlt
jg
lcall
adc
add
jmp
add
sarb
or
stos
push
cmpl
sbbb
js
push
add
dec
adc
push
and
and
aas
push
sub
add
inc
mov
add
dec
sbb
lahf
fld1
xor
push
insb
add
les
lods
inc
es
sub
addb
adc
mov
inc
and
pop
xor
sub
and
mov
or
and
ss
and
cmc
sbb
out
fnstcw
icebp
cmpsb
adc
and
dec
xchg
sub
mov
sub
add
mov
fidivs
aaa
pusha
mov
orl
mov
popf
movsl
popa
and
inc
inc
pop
xor
inc
enter
mov
and
push
pop
shrb
jl
add
push
add
and
or
mov
icebp
and
dec
mov
pop
repz
add
xchg
out
loopne
mov
clc
xor
frstor
shlb
or
sbb
xor
jg
push
mov
loope
dec
imul
dec
pusha
sub
ret
leave
aas
imul
push
test
push
leave
mov
iret
pop
and
dec
lea
mov
inc
xchg
push
mov
es
sub
add
adc
xchg
jecxz
gs
rclb
js
in
or
add
repz
xchg
mov
mov
sub
push
cmp
xchg
inc
repnz
dec
jmp
cmp
mov
mov
imul
mov
jnp
dec
cmp
cmp
sbb
mov
push
ja
and
dec
repz
cmp
xchg
addb
jecxz
or
lock
mov
push
sbb
pushl
lock
jmp
nop
push
dec
nop
je
cmp
mov
in
adc
xor
pop
rorl
and
xor
sbb
add
mov
push
or
inc
dec
push
mov
mov
pop
fisttps
ret
shll
pusha
push
push
add
ud1
or
imul
mov
add
lret
mov
ds
cmpsb
or
cmp
rcrl
and
shlb
pop
es
mov
adc
or
inc
pop
orl
mov
enter
cmp
cmpl
outsb
xchg
push
or
mov
adc
mov
nop
in
lods
pusha
mov
movsb
cmc
mov
je
add
dec
mov
je
sbb
mov
mov
leave
jg
jno
adc
or
sbbl
pop
movsl
out
dec
dec
aad
xlat
add
mov
fsubrl
inc
cmc
hlt
jmp
inc
add
sbb
sub
push
imul
test
popa
jno
insb
nop
sub
icebp
add
scas
test
mov
ficoms
xchg
mov
bound
or
dec
in
inc
lods
push
outsl
leave
inc
aam
mov
xchg
cmc
sbb
lahf
das
fcmovnb
or
stos
subl
xor
ret
jmp
push
addr16
sub
push
popa
call
popf
cmp
mov
pinsrw
notl
xchg
xor
inc
mov
inc
mov
xor
enter
arpl
or
or
mov
mov
xchg
ret
pop
jnp
in
sbb
lock
inc
movsl
roll
scas
loope
and
std
orl
xor
loopne
mov
or
dec
mov
inc
and
or
add
std
mov
test
incb
xor
inc
mov
repnz
cmp
in
add
les
jo
aas
jecxz
bound
pop
sbb
sbb
cld
pop
sub
repz
add
enter
xchg
push
push
push
loop
push
add
push
add
pop
sub
dec
xchg
mov
js
or
in
adc
adc
out
adc
cwtl
mov
das
ss
dec
mov
adcl
rcrl
movsb
or
push
push
sbb
adc
test
fiaddl
enter
addr16
jo
pop
jl
rorl
add
leave
in
call
add
mov
sbb
repnz
adc
out
sub
daa
pop
jns
mov
inc
sbb
fs
stos
in
adc
nop
inc
or
mov
inc
movsl
or
nop
addr16
lret
pop
and
in
sbb
test
iret
lret
push
or
adc
pop
and
in
xor
cmpsl
sbb
sub
jecxz
mov
aad
mov
xchg
mov
out
adcb
call
sbb
or
stos
std
dec
sub
and
les
pushl
push
fldenv
cmp
sbb
enter
insb
push
xchg
pop
adc
mov
pop
int3
pop
jb
aas
push
xor
jbe
mov
cmp
pusha
subb
sbb
dec
or
jmp
inc
into
sar
add
push
inc
loop
lock
inc
pop
push
out
inc
std
orb
add
or
mov
add
xor
jge
xchg
popa
add
pop
jmp
mov
icebp
insb
shlb
mov
mov
cmp
mov
subb
adc
jg
sub
mov
mov
pusha
sbb
orl
jg
xchg
in
test
add
inc
sbb
sbb
mov
js
adc
add
addr16
and
push
inc
inc
lock
loop
pop
xchg
push
jge
mov
lcall
inc
int3
movl
cwtl
cmp
mov
push
cmp
cltd
loope
or
testb
fidivrs
in
mov
add
xchg
aas
mov
rcrb
std
or
repz
adc
adc
pop
add
dec
push
inc
add
clc
or
aaa
repnz
xor
dec
push
test
push
scas
orb
aad
popa
jecxz
mov
es
inc
xchg
fisubl
adc
adc
outsl
lahf
bound
add
movsb
xchg
andb
mov
push
push
jmp
cmp
pop
mov
sub
push
popf
pushf
xor
stc
push
xor
xor
pop
sub
push
cmp
sti
xchg
jns
jp
cmp
aaa
mov
add
jb
push
jl
faddl
add
loopne
dec
sbb
cwtl
xchg
xchg
orl
lock
dec
pop
addb
sub
test
or
xor
pop
iret
and
pop
ja
push
xchg
sub
adc
sub
xor
arpl
and
cmp
jb
inc
mov
cmp
mov
or
cli
adc
insb
cmp
pop
lea
dec
push
enter
test
cmp
pop
adc
push
mov
push
test
arpl
jns
js
test
fiaddl
mov
mov
into
fs
xorb
add
dec
mov
and
lock
aaa
or
xor
mov
sti
je
mov
inc
pushf
inc
int3
out
or
push
shrl
fsubrl
mov
pop
and
nopl
or
adc
xor
cld
jecxz
les
xlat
cltd
scas
fwait
lock
adc
add
and
or
pop
xor
dec
rcr
or
xor
cmp
dec
shll
push
push
pop
pop
mov
pusha
push
gs
push
pop
sbb
je
adc
lea
pop
and
pop
xor
xor
and
in
adc
and
sbb
push
cmpsb
adc
movb
mov
jb
or
dec
cmp
pushf
add
mov
mov
pop
pop
imul
dec
cmp
imul
aas
adc
pop
xor
cmp
addb
lea
mov
test
mov
sarl
push
and
mov
dec
jns
fnstsw
fimull
sub
sub
jbe
sti
sbb
pop
adc
or
or
fs
cltd
jle
xchg
xor
inc
dec
mov
sbb
rcrb
push
pop
pop
and
insb
sbbl
or
adc
xchg
xchg
cld
push
mov
mov
mov
xor
lea
pop
jb
mov
nop
cmp
sub
dec
out
mov
cld
xchg
mov
ja
mov
xor
mov
loop
fwait
mov
and
ret
jnp
ds
mov
pop
and
xor
push
rorb
jge
xchg
adc
jnp
xor
in
sbb
bound
pop
sbb
insl
mov
mov
and
push
fwait
push
lret
push
outsl
mov
sbb
xor
mov
or
jmp
or
imull
test
ret
shll
xchg
mov
add
xor
cmp
loopne
cmpsb
mov
xor
stos
and
insl
xor
lea
add
pop
inc
int3
faddl
push
add
cmpsl
add
loopne
add
cli
mov
sbb
cmp
jmp
lock
pop
cmp
imulb
stc
mov
jle
xchg
add
fdiv
sbb
xor
lock
repnz
xchg
jmp
cltd
rorb
push
cwtl
cmpl
adc
inc
pop
sti
mov
jnp
cld
or
js
jne
add
repz
jnp
scas
jge
icebp
rclb
pushfw
jle
mov
in
add
jmp
push
jmp
xchg
xor
mov
insb
je
jae
lea
fsts
iret
xor
cmpsb
pop
loopne
jbe
stos
outsb
xor
sbb
pop
pop
call
decl
xchg
jnp
ljmp
add
cmp
out
jno
and
add
sbb
nop
jmp
leave
pop
mov
jecxz
lds
bound
je
loopne
jle
push
je
shrb
rcrb
or
fisubrs
lock
adc
and
jne
cmpl
xor
in
stos
push
pushl
mov
or
lods
push
lock
test
jmp
and
push
nop
xchg
iret
adc
test
aas
sbb
or
push
icebp
imul
inc
test
cld
push
add
jmp
in
mov
aam
inc
movsb
push
push
sbb
mov
mov
test
movsb
push
add
pop
lcall
mov
mov
adc
in
call
adc
xchg
cwtl
jns
sub
das
jno
xchg
sub
mov
adc
and
testb
sbbb
xor
adc
popl
loop
fmuls
addb
inc
adcb
loopne
orb
push
ret
mov
int
push
adc
or
popa
sbb
pop
jne
add
cmp
jo
pop
divb
mov
pusha
or
xchg
xor
arpl
push
lcall
sbb
pop
push
fs
or
fsubr
addr16
push
mov
fildll
insl
cltd
nop
push
iret
in
bound
inc
call
fimuls
call
inc
jb
popa
lods
push
je
and
popa
add
repz
adc
mov
rcrb
sub
pop
jmp
aas
jge
add
jo
xor
push
and
jnp
ds
sbb
xchg
int3
flds
jnp
insb
insl
rclb
push
dec
and
in
in
push
rorl
mov
jecxz
push
or
add
pop
sub
pop
cmc
push
mov
lahf
orb
mov
cld
adc
jb
imul
pushf
sbb
shrl
cmpl
adc
push
sbb
shlb
leave
xor
sbb
popf
push
sbb
fstpt
or
test
rcrl
cld
enter
jg
pop
sub
pop
add
inc
and
out
dec
test
in
mov
lea
jg
sbb
loopne
cmpb
je
add
inc
cmp
pop
and
mov
in
push
jno
inc
jmp
gs
ret
dec
push
cltd
jno
or
nop
dec
or
std
inc
sub
stc
lds
mov
sbb
idivl
cmpsl
add
sbb
fists
xor
mov
aam
adc
nop
icebp
in
lcall
mov
sbb
dec
xor
inc
pop
repnz
popa
and
cmp
mov
inc
add
or
test
int
push
jp
pop
inc
mov
mov
mov
xchg
inc
ficoms
adc
xchg
sbb
xor
sbb
push
bndstx
cmpb
roll
adc
or
js
or
push
push
lret
or
and
subb
pop
inc
fsubp
in
sbb
mov
or
add
add
jl
out
mov
dec
mov
mov
fcoms
push
push
pop
sbb
add
mov
push
sbb
sbb
sbb
pop
inc
mov
data16
mov
jb
sbb
ljmp
lret
sbb
stos
pop
shl
mov
cmp
test
shll
pop
mov
pop
call
cmp
sbb
dec
lods
nop
sbb
xlat
mov
roll
test
push
fsubl
xchg
xor
lea
mov
pop
xor
loop
int
xor
mov
sub
xorl
sarb
sbb
add
or
pop
iret
cmpsl
out
test
mov
movsb
mov
and
mov
mov
jnp
mov
dec
movsl
add
sarb
cmp
mov
mov
orb
clc
ss
test
and
scas
pusha
push
pop
jmp
push
or
call
jbe
ja
lcall
test
xor
adc
jge
jb
lret
icebp
dec
rolb
int
es
and
cmp
ret
clc
ret
jne
and
sbb
push
addb
fs
test
clc
pop
push
add
push
pushl
aaa
pushl
nopl
in
sub
rclb
dec
jl
stc
adc
enter
xchg
int3
and
xor
pop
jo
popa
sbb
in
mov
das
outsl
test
lods
andl
jp
push
std
adc
dec
add
add
adc
push
loopne
push
mov
pmaxsw
test
pushl
stos
pop
adc
enter
push
bound
rcll
out
movsb
lds
or
xchg
or
sbb
in
cwtl
lods
dec
or
lahf
xchg
jbe
push
adc
stc
pop
pop
daa
jo
test
mov
in
lret
mov
shlb
clc
mov
pop
subl
fcoml
test
popa
fcoms
or
sub
inc
xor
int
in
sbb
xchg
xchg
inc
movsw
adc
adc
shlb
stc
mov
int3
nop
add
inc
sbb
in
inc
inc
push
sub
leave
les
fstpl
adc
mov
imul
mov
andb
test
or
dec
ds
loopne
sbb
sbb
fcompl
cmp
out
push
sbb
push
push
sbb
test
sub
rep
or
sbb
jmp
jb
sbb
mov
dec
fisubrl
xchg
pop
repnz
add
rorb
or
mov
pop
xor
stos
mov
enter
fcom
mov
movb
ja
mov
or
sbb
jo
ja
push
sbb
push
jne
aaa
loope
pop
sub
push
xor
xchg
idivl
mov
inc
bnd
xor
mov
test
pop
ficoml
jno
rcll
repnz
in
add
ds
push
aad
ss
mov
cltd
jp
xchg
icebp
inc
rorl
pop
popf
mov
call
sbb
stos
push
sub
push
adc
mov
in
add
jmp
pop
sub
xor
xor
xor
adc
xor
cwtl
cmp
xor
or
shlb
xor
cs
pop
sub
aaa
push
pushf
pushf
or
cmp
std
cmp
mov
call
ret
cmp
dec
mov
fldenv
dec
fiadds
fdivrs
cmpsl
pushf
adc
lock
dec
xchg
sbb
add
jae
push
xor
fimuls
sub
cli
cmp
sbbl
enter
sarb
xor
cmp
cmp
inc
xchg
and
push
add
lea
mov
sub
orb
or
imul
in
bsf
mov
rcrb
sbb
xor
xchg
adc
mov
dec
pusha
ss
push
pop
push
jb
fiadds
jmp
leave
enter
cmp
rclb
ret
inc
adcl
push
daa
cmp
sahf
and
push
sbb
gs
xor
inc
lds
mov
push
mov
sahf
xchg
pop
mov
ljmp
stc
push
ret
sub
jo
push
or
fiadds
outsb
daa
jnp
aaa
inc
lods
sbb
mov
aas
in
jbe
dec
andl
pop
cmp
in
push
mov
dec
jbe
insb
adc
cltd
cmp
mov
sub
nop
add
adc
lea
int
cwtl
dec
cs
pop
or
dec
mov
mov
hlt
rcr
or
mov
aaa
rcrl
adc
mov
xchg
test
imul
and
mov
adc
or
insb
fbstp
dec
outsb
adc
pop
push
aaa
mov
jmp
pop
inc
sbb
or
push
xor
push
xor
lcall
inc
cmpsb
push
je
dec
dec
jnp
nop
or
inc
lods
push
sub
lds
mov
and
and
popf
andb
stos
adc
and
test
fcompl
movsl
mov
int
dec
adc
std
mov
hlt
jle
sub
sbbl
ljmp
sub
ret
pop
or
push
mov
cmpsl
icebp
mov
or
sar
inc
popf
jne
jle
rol
es
lea
hlt
scas
mov
xorl
adc
pop
push
cmp
rorl
mov
adc
nop
lock
xchg
add
js
dec
sbb
xor
movsb
mov
icebp
inc
xor
leave
push
lea
fwait
or
jg
in
stos
ret
test
jo
enter
cmp
int3
in
test
imul
shlb
dec
mov
test
xchg
addl
pop
jb
stos
jecxz
push
adc
sub
in
aam
mov
js
add
outsl
popa
lds
roll
push
xor
es
jp
adc
mov
outsb
push
js
int3
sub
sbb
ret
add
out
adcl
adc
decl
mov
jmp
test
jl
cmp
clc
push
push
add
js
pop
fnstsw
dec
push
lods
cmpsl
adc
inc
lds
or
movsl
mov
xor
cmp
or
call
push
imul
test
fs
cmpl
add
test
jb
xlat
and
mov
push
jnp
inc
xor
and
dec
enter
lock
adc
js
push
push
outsb
fcomps
sbb
adc
in
test
or
push
rorb
jl
arpl
mov
xor
insb
movsl
movsl
xchg
push
and
cmp
inc
and
push
nop
ja
pop
push
adc
das
jge
jnp
adcb
enter
xor
inc
inc
cmp
movzbl
or
pop
ja
lods
inc
imul
dec
insb
scas
push
push
mov
dec
lcall
shufps
push
test
sarb
or
loopne
jno
je
shll
pop
xor
rorb
mov
mov
in
gs
mov
mov
push
shl
jg
cmp
jne
sbb
push
popf
stos
lock
in
mov
xor
inc
lret
cmp
call
repnz
pop
xor
push
jo
cmp
xchg
or
fimull
adc
lret
data16
jno
push
arpl
xchg
pusha
pop
xor
andb
mov
xor
cmp
je
pop
and
add
mov
xchg
in
dec
mov
add
adc
fdivl
lods
pop
jmp
imul
pop
movsb
cmp
and
sahf
out
pop
mov
pop
cmp
mulb
mov
add
and
jle
ds
std
dec
cmp
jae
add
and
sbb
xchg
cmc
jecxz
pop
imul
dec
movb
or
add
sbb
dec
inc
loope
aad
inc
jo
test
push
es
in
dec
sbb
fstps
mov
inc
add
aaa
lods
mov
and
and
sub
lock
or
bound
add
push
stos
adc
mov
mov
mov
movsb
add
outsl
mov
data16
push
pop
inc
push
xlat
cmp
or
and
lods
mov
iret
nop
jno
jns
sub
xor
clc
ret
push
leave
movl
ret
lock
pop
mov
lea
dec
sarl
outsb
cmp
sub
push
sbb
loope
idivl
lea
sub
mov
ss
es
pusha
sub
and
sub
dec
dec
and
add
add
dec
insb
test
in
fmul
into
mov
add
sbb
pop
lcall
xchg
lcall
in
adc
dec
jo
push
sti
shrb
sbb
sbb
or
pushf
shrl
push
xor
xor
test
addr16
cwtl
sbb
or
loope
subl
adc
push
xchg
dec
fsubl
lods
add
iret
push
out
mov
mov
movsl
inc
idiv
movsl
test
push
inc
mov
dec
repnz
xchg
lods
test
pop
mov
xchg
mov
and
dec
sbb
sbb
mov
daa
xchg
aam
or
jmp
psllw
or
xor
das
rclb
sbbb
test
lock
jo
xchg
inc
push
mov
mov
inc
das
jbe
mov
fcompl
add
mov
mov
outsb
cmp
das
fldl
jne
mov
fcomip
push
dec
mov
cmp
je
cmp
je
cmp
je
cmp
movsb
cmp
or
inc
clc
inc
pop
pop
push
jbe
jno
mov
cmp
adcb
js
movsb
pop
push
xor
movsb
mov
mov
shrb
daa
jns
test
push
orl
sahf
loop
xchg
pop
bound
mov
pop
cld
mov
adc
stc
daa
or
jl
cli
jns
enter
call
and
push
sbb
cld
adc
pop
ror
fstps
fs
pop
int3
push
adc
dec
or
jge
mov
or
pop
mov
icebp
sbb
mov
mov
mov
cltd
pop
add
mov
fsubl
add
jo
xchg
int3
cmp
loopne
gs
add
or
insl
add
mov
or
aaa
and
cmp
pop
xor
dec
sub
sub
outsl
mov
decb
push
inc
mov
add
or
cld
test
mov
lcall
jo
faddl
cld
aam
loopne
pop
mov
test
inc
out
imul
inc
and
and
jo
and
and
movq
nop
clc
and
arpl
loopne
and
shl
sarl
dec
xchg
in
loope
adc
pop
and
enter
adc
repz
pop
es
rcrb
or
mov
push
add
push
inc
mov
push
rolb
xchg
pop
inc
mov
sbb
cmp
dec
push
movsl
or
jo
test
mov
orb
or
pop
mov
sbb
andb
cld
cmpsb
mov
mov
lret
in
xlat
xor
sbb
and
jo
sub
test
pop
inc
cmc
in
pop
adc
jae
sbb
dec
js
lods
push
cld
sarb
test
mov
inc
fstps
movb
icebp
add
mov
add
in
and
leave
mov
in
rol
test
rcll
loop
pop
jb
mov
and
cs
rorl
call
repz
mov
ret
adcb
push
lea
xor
inc
movsb
pop
clc
jg
cmp
je
push
pop
js
aaa
mov
enter
cmp
inc
lock
inc
mov
add
movl
ss
add
outsb
jbe
xchg
push
cmpb
xlat
push
add
inc
popf
push
test
rcrb
test
mov
out
mov
jecxz
jbe
and
enter
pop
lea
xor
adc
std
iret
push
inc
and
inc
sub
daa
sbb
cmc
adc
cmp
push
push
mov
pop
push
inc
out
in
sar
cmp
jl
xchg
popa
cmc
adc
clc
mov
lods
je
mov
or
mov
pop
lods
jl
or
and
push
inc
and
mov
in
in
add
lods
mov
add
sub
movsl
add
movsl
out
xor
pop
xor
insb
sub
inc
and
push
inc
clc
mov
push
idivb
push
inc
clc
mov
sub
sub
iret
xor
or
cli
cli
pop
mov
stc
cmp
ds
add
sbb
cmp
add
dec
fmull
pop
nop
test
jnp
cmp
dec
pushl
jne
cmp
jne
lea
mov
fs
les
add
insl
push
sub
cld
test
insl
push
push
pop
cmp
dec
bound
mov
add
lret
adc
mov
cli
add
imul
adc
or
xor
mov
sti
push
into
inc
push
add
jbe
jmp
push
pusha
push
nop
mov
sbb
mov
mov
mov
or
add
xchg
xor
jne
out
fisubrl
cld
into
adc
pop
sbb
or
ret
enter
mov
adc
sub
push
stc
jb
fsubrs
mov
loope
push
fdivrl
cmp
jle
pushl
enter
dec
pusha
jle
movsl
xchg
pop
lea
or
inc
sub
inc
mov
adc
aad
jo,pt
jle
push
push
and
call
sbb
inc
adc
mov
arpl
ss
inc
jae
dec
lahf
push
sbb
sbb
sub
inc
jl
push
sbb
or
dec
add
js
ficoml
movsb
lret
or
dec
add
or
mov
dec
add
mov
add
lea
mov
pop
ficoml
mov
sub
gs
or
sbb
int3
ficoml
dec
xchg
jl
add
add
xchg
cmp
bnd
cmp
cmp
push
adc
adc
subb
jo
or
jnp
je
mov
jecxz
out
rol
dec
push
xor
push
sub
loopne
sub
pop
sub
lock
dec
lods
add
lcall
xchg
sahf
jns
xchg
test
mov
push
in
add
test
push
pop
out
fs
add
lea
xchg
aam
ret
cmp
scas
cmp
or
inc
dec
stos
dec
stos
mov
scas
in
or
adc
push
mov
adc
ja
push
jb
mov
inc
and
sub
arpl
and
inc
pop
or
test
inc
pop
sbb
movsl
mov
test
pushf
lret
jae
adc
xchg
data16
cld
push
jo
arpl
nop
adc
js
stos
mov
mov
lods
mov
pop
aam
adc
test
mov
add
pop
ljmp
jns
mov
cmp
xor
inc
pop
jmp
push
add
out
test
xor
xor
push
push
pop
leave
test
and
pop
adc
sbb
hlt
xor
add
test
loopne
fs
insb
sti
sbb
dec
xchg
loop
push
or
xor
movsb
nop
pop
and
icebp
xchg
push
fiaddl
sub
ret
add
test
xchg
cmp
test
popa
in
mov
adcl
pop
xchg
mov
ljmp
or
push
cmp
dec
movsb
aas
xchg
push
into
mov
mov
nop
push
int3
sbb
add
sub
daa
je
inc
sub
cmp
lahf
dec
loopne
jecxz
add
movsb
call
pop
push
mov
lret
leave
fwait
cmp
jmp
rolb
dec
loopne
cmp
pop
fldt
push
mov
xchg
pop
insl
arpl
and
inc
sub
add
lds
pusha
shlb
inc
dec
outsb
hlt
pop
xor
mov
bound
adc
push
xchg
and
ret
insb
or
sub
mov
addl
or
inc
sub
dec
cltd
push
enter
jae
or
mov
pop
test
fldl
or
mov
dec
adc
dec
pop
push
or
jne
cmp
setl
data16
in
add
rcrb
xor
ret
xor
cwtl
add
mov
icebp
mov
fnstenv
or
sbb
ret
movsl
mov
mov
andl
and
jle
sub
insb
filds
or
fstl
popf
sbb
out
cmp
mov
jl
sub
xchg
pusha
pop
pusha
mov
int
add
fistps
or
sub
daa
lock
sbb
push
mov
push
loope
jnp
lret
and
roll
ret
stc
test
dec
inc
ret
int
add
mov
repnz
mov
sbb
xlat
jmp
xor
pop
test
jbe
cmp
imul
xlat
stos
mov
sbb
sbb
xchg
out
push
sbb
xchg
mov
loop
jge
dec
dec
inc
pop
or
inc
and
shrb
rcll
or
pop
push
outsb
aas
rcrb
push
sbb
xor
xchg
scas
adcb
jnp
mov
and
shll
jbe
push
inc
pop
mov
add
dec
xor
cmp
sub
mov
mov
push
shrb
xchg
das
inc
nop
or
jmp
rorb
hlt
int
pop
dec
pusha
dec
add
and
clc
test
mov
lar
sti
sbb
cwtl
fsubrl
dec
sahf
out
mov
lds
push
adc
push
das
es
adc
cmp
insb
sbb
or
pop
jmp
pop
pop
cmp
add
rcrl
in
lock
mov
dec
scas
jmp
xor
stc
push
sbb
in
push
sbb
sub
jo
enter
inc
add
aam
aas
and
add
cli
gs
cwtl
test
push
mov
cmp
fmull
or
es
jle
push
rcr
rdmsr
out
in
jg
sub
cmp
pop
jne
dec
sub
mov
aad
movb
inc
mov
push
mov
daa
dec
daa
je
and
and
xorl
and
adc
sbb
or
mov
in
dec
xchg
push
and
cmpsl
inc
out
xchg
loope
sub
addr16
inc
sub
in
in
mov
out
add
push
adc
sub
lcall
sbb
roll
push
rcll
add
fsubl
je
gs
inc
fmull
add
sbb
dec
addr16
dec
and
dec
pop
imul
aad
xchg
add
das
sub
push
jbe
cmp
xor
and
xchg
lcall
lods
sbb
cmp
push
sub
jb
pop
call
ret
icebp
fwait
loop
stos
stc
data16
or
sub
sbb
mov
cld
pop
sbb
std
jnp
sub
add
jmp
dec
sub
add
stos
imull
popf
or
xor
hlt
xchg
aad
add
pop
ljmp
xchg
imul
fs
es
in
dec
lahf
cmp
dec
nop
and
mov
outsb
ret
mov
adc
pop
je
jp
push
add
cltd
xchg
insb
add
add
push
insl
push
sbb
rolb
inc
lret
adc
mov
cmp
adc
sbb
xchg
cmp
imul
jns
es
or
jmp
sub
out
inc
jmp
sbb
fwait
inc
push
ficompl
lcall
inc
and
sub
and
jp
fwait
xor
pop
add
sahf
mov
pop
sbb
xor
sub
jge
or
dec
adc
adc
and
scas
or
push
mov
pop
pop
and
mov
dec
jle
pop
xchg
and
das
sbb
aaa
lea
out
and
and
cltd
inc
cmpsb
leave
or
movsb
mov
sbb
cs
lds
loopne
aam
je
pop
xor
icebp
mov
cmpsl
xor
push
movb
cmc
xor
ja
push
pop
xor
or
xchg
movsb
cmp
stc
add
dec
lods
cmp
mov
push
xchg
fldlg2
jbe
clc
inc
loopne
pop
pop
mov
xchg
lea
imul
lcall
mov
adc
fs
cmp
xchg
insl
iret
out
adc
push
xchg
xchg
and
mov
mov
rorb
or
xchg
add
data16
pop
jne
jl
imul
fisubs
arpl
xchg
jmp
cmp
es
movsl
sbb
xor
fwait
mov
mov
xchg
fbld
das
ret
rolb
cmpb
inc
and
add
push
add
ds
jg
icebp
movb
push
sbb
sub
cmp
pop
jl
pop
cwtl
dec
nop
mov
or
inc
push
in
fisttpll
test
xor
into
test
cmp
mov
imul
call
test
push
lds
ret
outsl
adc
jge
rol
xor
pop
inc
jne
cmp
mov
jae
push
inc
inc
imul
mov
push
sti
or
loop
loopne
loopne
dec
pop
mov
sti
jns
movsl
mov
test
hlt
dec
or
adc
sbb
mov
dec
or
xstore-rng
cmpsl
add
or
cwtl
sbb
call
movsl
std
jecxz
and
add
inc
cwtl
addb
lods
or
test
pop
mov
push
jno
add
or
sub
add
xor
and
jmp
cmp
jne
xor
sub
out
stos
enter
push
mov
sahf
dec
ja
sub
andl
jmp
pop
adc
and
or
adc
addr16
or
and
pop
cmc
insl
test
loope
push
push
or
jl
sub
jne
push
adcl
and
ja
test
cmp
mov
mov
dec
cld
mov
mov
shl
lea
aam
push
sub
push
or
lock
dec
jns
mov
pop
mulb
xor
push
mov
jbe
jmp
dec
inc
add
jo
test
push
push
mov
or
push
clc
inc
add
xchg
shld
insl
fisttpl
adc
xor
sub
inc
sbb
lret
test
mov
orl
icebp
mov
pop
fcmovnbe
adc
mov
movsl
pusha
xor
aaa
jne
in
ret
out
adc
or
dec
cmp
cmpl
push
push
lea
cmpsb
flds
ret
or
dec
or
dec
hlt
test
rorl
ljmp
sbb
fdivs
aam
jp
fs
push
ljmp
xchg
mov
mov
push
and
cmp
push
cwtl
test
popa
lock
sub
sbb
shll
xchg
sbb
cwtl
rorl
outsb
xor
fisttpll
into
xchg
test
inc
cmpsb
sahf
sub
test
inc
loope
rorb
inc
test
xor
call
mov
sub
or
or
xor
inc
nop
add
push
mov
lcall
and
stos
mov
int
aaa
or
sub
cmp
mov
jmp
xchg
jbe
subb
cmp
push
push
js
cmp
movsb
sahf
insb
in
jl
and
mov
mov
and
adc
icebp
pop
cmpsl
dec
inc
cmp
or
jae
adc
push
lahf
cld
stos
rcrb
and
inc
jmp
inc
fisttpll
cmp
or
stos
push
add
jne
movb
hlt
dec
mov
push
mov
add
int3
je
outsb
push
pusha
push
adc
push
pop
test
scas
pop
sbb
cmp
jg
adc
sar
test
cmp
test
rol
add
lods
jmp
jg
push
inc
fistl
pop
fdivs
in
or
mov
push
ss
cli
xor
push
push
and
nopl
sub
inc
or
sbb
popf
add
fldenv
adc
and
cmpsb
cmpsl
xchg
in
ret
push
mov
jb
fadd
repz
rorb
lock
fcmove
sbb
dec
loop
in
xchg
pop
ja
clc
jp
andl
inc
je
test
mov
or
ret
or
mov
pushf
mov
xor
mov
pop
adc
push
sarb
dec
jl
enter
jp
mov
adc
push
cmpl
or
inc
pop
iret
or
or
cmp
popa
mov
add
mov
or
clc
mov
out
sbb
scas
test
add
out
mov
push
sub
or
add
and
mov
push
rcl
push
inc
iret
shrb
jl
out
or
adc
xor
fcmovbe
inc
sub
inc
shlb
xchg
cwtl
xor
or
mov
jb
push
push
jecxz
sbb
adc
or
adc
jp
out
je
mov
xchg
dec
fs
jo
movb
orl
push
in
pop
mov
push
leave
dec
mov
in
pusha
mov
test
cmp
je
jmp
push
adc
xlat
sub
popa
mov
push
add
jle
pop
je
push
mov
or
jge,pt
lret
aas
dec
xor
ss
jo
in
push
sub
or
push
mov
mov
mov
cmp
repnz
sbb
mov
in
loop,pn
add
ja
or
movsb
mov
loope
imul
inc
lret
add
call
add
enter
ret
pop
dec
adc
sbb
or
adc
cmovnp
mov
sbb
mov
pop
das
add
lcall
xchg
icebp
jno
pop
in
popa
jne
mov
lock
imul
xor
or
push
ret
in
aad
int3
xor
xchg
jo
mov
sub
push
push
addr16
xchg
cs
lar
add
push
push
icebp
and
stos
pop
add
push
loopne
ljmp
mov
sbb
adc
jbe
inc
mov
aam
fs
subl
je
test
sarl
add
lcall
push
push
or
ss
xor
call
fsts
shrb
pop
loopne
test
repnz
mov
int
push
lahf
xchg
fbld
loop
inc
es
loopne
incl
xor
xchg
dec
xor
aad
mov
sub
push
sub
push
mov
dec
add
inc
test
dec
sti
or
mov
cwtl
pushf
cmpsb
movsb
cmp
sub
in
leave
lock
push
aam
add
mov
push
ss
pop
test
adc
out
mov
adc
inc
sbb
jb
push
dec
je
rcll
aam
pop
les
push
adc
sub
sarb
pop
pop
ret
ror
stos
mov
fxch
fst
add
mov
or
push
rorl
lock
dec
shr
mov
xor
sub
push
mov
lods
dec
pop
fdivs
push
cli
das
push
push
xor
add
clc
cmp
xor
testl
pusha
sbb
dec
add
dec
and
or
add
pop
add
jbe
jae
cmp
push
idivb
add
shlb
cmpsb
aas
lds
test
and
adcl
jmp
jmp
cmp
and
aad
cli
dec
sbb
fadds
or
inc
pushf
les
cmp
cmp
or
pop
mul
xor
push
jno
lock
or
xchg
or
push
pop
shrd
jle
sub
inc
gs
mov
sub
push
pop
inc
dec
jae
mov
push
jmp
adc
or
jne
test
orl
sbb
insb
push
scas
mov
pusha
lock
dec
scas
fmull
mov
rolb
xchg
push
and
shl
adc
pop
rcrl
mov
add
pop
jmp
adc
xor
push
addb
mov
ret
rorl
mov
js
ret
inc
xchg
or
icebp
mov
push
movhps
push
push
cmp
cmp
je
outsb
mov
and
or
add
jp
adc
inc
je
hlt
push
out
inc
adc
xor
lea
aaa
dec
test
inc
ja
push
js
lcall
adc
mov
xor
xchg
push
cmp
xchg
push
pop
sub
aaa
push
and
add
mov
rorb
adc
jnp
mov
xor
inc
push
mov
shr
cs
mov
sub
mov
insb
loop
mov
iret
jb
push
xorl
repnz
sbb
mov
inc
ret
loop
insb
mov
push
mov
xchg
test
xor
xchg
inc
lock
mov
ret
jl
test
or
fs
loop
mov
in
add
or
mov
in
xchg
es
lock
lret
jmp
dec
mov
call
js
leave
add
xchg
adcl
mov
stos
push
dec
sub
cmp
pushw
push
add
bound
sbb
jno
or
add
and
shll
or
xor
xchg
mov
fs
mov
fcompl
ds
xchg
lods
xchg
jmp
add
mov
adc
sbb
dec
inc
pop
push
gs
pusha
push
mov
inc
clc
pop
pop
mov
sbb
xor
add
and
add
jns
push
xor
jmp
pop
rclb
fdiv
pop
shlb
mov
jge
sub
fnstsw
push
flds
jnp
mov
cmpsb
pop
and
rorb
lahf
pop
pop
out
cmp
movb
notl
xchg
push
mov
je
aas
sar
inc
or
jae
add
iret
repz
push
jae
arpl
push
sahf
push
push
push
je
inc
or
das
iret
mov
insb
jne
or
cmp
mov
push
push
sub
jp
sbbb
cmp
push
jb
loope
and
xchg
jnp
daa
mov
fldt
mov
sub
cmp
inc
inc
pop
mov
into
ret
cmp
je
scas
mov
sti
mov
nop
fisubrs
xchg
sub
sub
xor
popa
fadd
add
fistps
xchg
jmp
push
iret
dec
inc
add
pop
mov
aam
xorb
push
inc
cmp
xor
inc
push
aaa
mov
scas
rclb
orb
push
mov
or
sbb
push
xor
jo
sub
cmpb
xor
xor
and
adc
fisttpll
push
test
jae
add
pop
fmul
sub
xchg
push
add
stc
loop
loopne
or
dec
loopne
adc
or
lea
stos
sub
testb
pop
je
dec
mov
or
sbb
xchg
rclb
shll
bound
mov
push
pop
int
mov
mov
add
ficompl
mov
adc
cmpps
jmp
sbb
add
aam
test
add
sbb
cmc
and
mov
inc
and
add
cmp
pusha
lcall
jo
js
sahf
add
jl
mov
ret
fsubr
call
fiadds
sti
or
pushf
testb
sub
lods
int
gs
inc
mov
xorb
push
and
add
rcrb
dec
cmp
rcr
mov
xchg
int
cltd
mov
add
loopne
push
sbbl
pushl
or
xchg
add
test
js
or
xorb
or
insb
push
or
push
cmp
xor
push
and
ret
mov
sub
arpl
and
popa
xor
mov
pop
cli
sbb
and
inc
adcl
and
adc
and
mov
dec
jo
fs
aas
pusha
sbb
xor
arpl
dec
pcmpeqw
or
adc
xchg
addr16
adc
popf
adc
fisubl
pop
mov
sub
add
testb
fbld
jmp
cmp
sbb
and
mov
sub
or
sbb
ror
test
lcall
pop
jle
push
ja
clc
xor
inc
mov
jb
mov
add
stos
sbb
in
shr
mov
push
dec
dec
ror
jo
mov
rolb
test
jbe
mov
jne,pt
cs
pop
mov
dec
ret
faddl
addr16
rclb
jbe
add
mov
push
rol
inc
ficompl
shl
ret
mov
orl
test
mov
pop
stos
pop
jne
lea
add
ret
adc
pusha
lock
adc
push
lret
mov
adc
ret
add
andl
out
dec
je
das
sbb
mov
fstpt
test
jg
adc
cs
das
or
incb
cmp
push
jns
out
add
cmpsl
loopne
es
cmp
pop
inc
pop
pop
pop
dec
stc
shlb
add
inc
xchg
out
ja
sbb
fnop
add
sub
add
mov
js
in
popa
or
pop
mov
popf
add
inc
cmp
mov
je
imul
es
divb
inc
xchg
ja
fwait
lret
push
fildl
cld
ljmp
sub
sub
and
cmc
pop
dec
push
scas
iret
js
sbb
xchg
or
adc
cmp
mov
mov
jns
nop
mov
sbb
jns
cmp
cmp
or
jmp
cmp
pop
scas
or
arpl
cwtl
dec
xchg
sbb
jmp
or
js
inc
arpl
movsb
pusha
outsb
dec
or
sub
lock
dec
or
cmpb
jge
xor
arpl
es
add
movsb
add
inc
inc
cmp
or
pop
xor
sub
jecxz
mov
jle
rorb
or
mov
sbb
and
jge
inc
push
cmp
xchg
sub
add
add
mov
jmp
sahf
scas
jo
sti
and
push
and
mov
adc
daa
loop
sub
arpl
sbb
push
enter
push
push
neg
adc
fisubrs
jo
rcrl
lods
in
rcrl
je
inc
mov
fs
xchg
pusha
pusha
insb
insb
adc
sbb
loope
rclb
add
inc
inc
cltd
mov
insb
pop
mov
icebp
and
std
add
mov
je
cmp
jg
divb
mov
in
mov
mov
and
loopne
pop
cmp
je
xor
insb
sbb
adc
push
sub
dec
icebp
push
xchg
inc
pop
xchg
jmp
lea
pop
fcompl
sbb
push
sbb
leave
add
push
imul
jne
lock
dec
js,pn
into
adc
lock
dec
inc
cs
lock
das
mov
jmp
jmp
repz
jl
jbe
adc
lods
adc
sbb
jmp
add
xchg
int
mov
sbb
push
lock
add
add
push
mov
and
testl
clc
and
and
inc
cmp
test
and
mov
movsb
jl
testb
out
inc
sub
add
and
cmp
mov
popf
faddl
je
test
ljmp
sbb
sub
and
daa
movsl
push
xor
dec
in
ret
push
sbb
push
lods
lds
push
insb
outsb
icebp
and
clc
dec
push
jge
jne
pop
pop
xchg
lret
lcall
cs
push
call
popa
pop
jae
adc
jle
jne
jae
xor
clc
or
xchg
call
out
scas
lods
xchg
stos
or
xchg
mov
pop
mov
int
fidivrs
inc
movsb
das
clc
outsb
mov
mov
fwait
jns
and
fs
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
ret
sub
add
pop
jl
nop
lock
lret
push
or
xor
nopl
lods
add
adc
pushf
add
fcoms
mov
adc
sub
inc
dec
in
push
push
scas
and
lods
test
test
orl
sub
pop
arpl
pop
cmp
imul
sbb
ret
test
push
fsubs
mov
mov
and
push
and
icebp
pop
cmp
adc
add
clc
xor
ss
sbb
dec
mov
sbb
pop
loopne
or
test
ja
fwait
js
dec
push
lock
lock
es
jg
ljmp
push
cmpb
xor
pusha
mov
adc
mov
cmp
and
pop
xlat
jo
sbb
or
push
mov
es
pop
xchg
adc
and
sub
or
pop
cmp
push
xchg
into
test
jecxz
lock
push
xor
xor
loopne
cmp
ds
insl
jmp
jnp
verr
and
lea
jmp
loopne
inc
adc
leave
pop
cmpl
cmp
or
adc
mov
mov
sarl
push
fsubr
scas
add
mov
movb
push
and
test
add
mov
and
fisttpll
shrb
adc
mov
iret
pop
sahf
and
daa
test
in
mov
mov
mov
mov
stc
mov
mov
xlat
loopne
sbb
mov
loopne
push
mov
ret
push
cli
or
xlat
ss
mov
aaa
push
xchg
popa
lock
cwtl
bound
int3
push
adc
insl
cmc
pop
xor
das
inc
cmp
lods
mov
ljmp
mov
daa
pop
out
faddl
and
inc
ret
mov
jne
dec
inc
and
jne
imul
int
dec
push
insb
movsb
mov
das
inc
popf
inc
cmp
jnp
cmp
push
rolb
decl
push
out
pop
icebp
rorb
dec
dec
push
or
ret
push
push
sub
and
in
mov
cmpb
inc
dec
sbbl
jp
push
push
mov
repz
in
adcl
popa
in
stos
sbb
inc
mov
jl
pop
cmp
push
movd
lock
popa
inc
sbb
and
inc
scas
mov
jge
orb
pushf
js
dec
xchg
rcrb
jmp
xchg
mov
add
push
jmp
sbb
cmp
xor
jmp
add
movsb
adc
xor
jp
data16
adc
push
pop
sub
rorb
jo
ret
inc
and
lret
adc
xchg
xchg
decl
sub
xor
fstpt
add
xor
mov
pop
out
stos
jmp
push
xchg
ret
adc
fmuls
dec
xor
call
call
movups
or
pop
mov
ret
out
mov
jns
ljmp
xor
pop
xor
mov
mov
push
or
jo
push
mov
mov
pop
jmp
xchg
fimuls
repnz
or
adc
add
xor
and
filds
mov
sub
push
sub
dec
jle
cmp
sbb
push
cmp
ret
and
xor
and
sub
cmp
je
int
ret
sbb
sbb
adc
jno
pop
test
add
sub
push
cmpsl
or
ss
sub
push
orl
loopne
test
xchg
test
sbbb
inc
xchg
dec
jno
andl
cmp
jae
pop
pop
or
or
jo
or
push
sbb
push
sub
popf
scas
jl
inc
outsl
push
pop
loop
loop
lea
mov
sbb
add
add
cmc
ss
push
inc
add
sub
rcr
movsb
test
fwait
or
ret
pop
pop
pop
pop
xor
idivb
imul
shr
or
add
mov
jl
andl
push
push
push
pop
sbb
rorl
sub
je
xor
outsb
inc
or
pop
pop
mov
mov
cmp
pop
cmp
xchg
dec
sbb
sbb
adc
mov
dec
cwtl
push
xor
arpl
and
imul
dec
stos
clc
shrl
es
mov
test
mov
sub
jae
push
mov
cmp
inc
dec
cmp
sbb
xor
jl
adc
push
sub
inc
cmp
adc
push
in
shl
js
push
jmp
add
jbe
insb
dec
dec
adc
sbb
inc
push
inc
adc
xor
push
or
inc
add
xor
jmp
into
add
pop
pop
xor
aad
fbstp
mul
lods
and
jb
push
les
movsl
fbstp
mov
pusha
sub
test
in
or
mov
incl
stos
xchg
cmp
cmp
cmp
pusha
pop
xor
add
sbb
testb
es
push
mov
jae
mov
decl
sarl
add
or
or
sbb
addb
add
addr16
mov
mov
push
ficomps
mov
mov
scas
push
mov
aaa
dec
jae
lahf
sbb
lahf
inc
add
andl
mov
in
out
and
mov
mov
push
push
lea
adc
popf
mov
lahf
aaa
add
or
add
cmc
or
sbb
aas
push
push
test
mov
mov
mov
imull
rol
fbstp
add
insl
mov
lods
cmp
jne
scas
mov
and
mov
iret
xchg
cli
jg
outsb
inc
loop
ss
push
push
push
ret
and
push
mov
or
and
mov
mov
xor
and
jge
and
jmp
cltd
leave
enter
mov
or
ret
pop
and
push
pushf
mov
sahf
out
sahf
testb
or
aad
subl
dec
push
pop
mov
inc
push
pop
push
add
inc
push
shll
sub
or
jp
test
xchg
push
pop
mov
arpl
popa
xchg
pushl
mov
loopne
iret
jmp
repnz
and
fwait
jmp
sarl
rclb
lea
dec
mov
cltd
notl
mov
fisubrl
insl
mov
add
test
pop
xchg
push
jo
dec
mov
scas
test
and
add
adcb
and
pop
sub
add
or
je,pn
or
pushf
xor
aad
fiaddl
addr16
xor
xor
aad
add
xchg
cs
cwtl
gs
add
add
push
inc
and
push
xor
icebp
xchg
js
xor
gs
out
gs
dec
push
mov
bound
add
ret
or
fildl
pushl
rcl
lods
or
cwtl
rorb
sub
ss
lods
int3
test
add
xchg
sbb
push
pusha
dec
insb
enter
mov
jo
add
or
mov
movsl
mov
push
ds
mov
lods
xchg
adc
mov
xor
push
lods
cli
or
in
inc
inc
test
ss
adc
cmpsb
push
xor
outsl
clc
xor
cmp
push
sub
sbb
fstl
mov
push
push
xor
movsl
ret
push
or
jae
movsb
xor
add
fsubrs
gs
mov
cmpsb
adc
andl
mov
jp
test
stos
add
push
adc
insb
add
mov
add
sbb
cmp
adc
xchg
sbb
cmp
hlt
lods
das
jg
or
jge
xchg
inc
jae
adc
sbb
cltd
cmp
cmp
jne
sub
mov
mov
xor
cs
pop
pop
or
and
dec
repz
push
mov
push
lcall
push
arpl
shl
pop
push
jmp
pop
and
aas
xadd
imul
jnp
jae
xchg
fadds
sbb
cli
push
cld
mov
pusha
jle
dec
in
jge
movl
inc
in
inc
insb
shr
inc
add
loopne
fs
and
fimuls
and
pushw
cmp
pusha
adc
inc
iret
jo
dec
mov
pusha
insb
std
fcmovb
mov
mov
fimull
adc
mov
out
add
imul
dec
mov
jb
les
loop
lock
cmp
sbb
mov
and
push
ljmp
dec
push
je
push
add
pop
js
mov
hlt
rol
scas
lcall
mov
sub
xchg
leave
mov
mov
out
jecxz
sbb
jle
push
push
dec
add
mov
movb
jb
sbb
xor
cmp
in
sbb
shlb
push
cmp
hlt
fisubrl
inc
add
out
adc
pop
lea
adc
push
insl
mov
add
out
movsl
add
pop
mov
cmp
movsl
rcrb
ret
ret
je
cmpb
ud0
rcr
daa
dec
cmp
testb
movb
addr16
sahf
ds
push
cmp
mov
sub
inc
mov
vcvtpd2psy
daa
ss
sub
add
or
enter
add
mov
int
sbb
push
push
push
xchg
mov
sbb
push
pop
mov
lea
lock
fldenv
push
push
sub
xchg
inc
aaa
jbe
add
or
js
fmull
and
mov
jmp
xchg
add
cltd
rcll
lret
sti
push
jo
dec
in
jmp
mov
test
aaa
jp
or
inc
jo
adc
mov
ja
addr16
jmp
adc
imul
mov
push
add
jbe
jle
adc
popf
push
jo
filds
sbb
mov
push
push
dec
lods
in
dec
dec
cmp
xor
je
pop
sbb
cmpsl
or
lea
push
daa
push
popa
mov
jns
lds
fldl
pop
mov
jge
push
mov
lods
push
sbb
out
xchg
or
pop
adc
test
cmpsb
push
mov
or
test
lea
jg
or
mov
inc
mov
mov
dec
mov
sbb
lcall
pop
xor
stos
add
sub
push
jo
jecxz
inc
je
imul
and
popa
xchg
iret
sub
mov
or
mov
movsb
out
aaa
dec
or
hlt
cmpb
loope
xchg
push
mov
sub
test
aaa
sbb
or
jmp
or
jge
mov
addr16
ficompl
into
andb
lods
nop
push
pushf
into
cmp
cmc
jmp
xorl
cltd
shl
inc
and
push
lret
add
rolb
mov
mov
in
push
aad
mov
push
mov
add
xor
dec
lret
rcll
and
and
insb
es
cmc
xchg
mov
push
stc
push
sub
mov
lods
jae
push
push
pusha
cwtl
in
pop
es
out
dec
lods
jl
movl
lret
push
mov
add
jle
xor
insl
lea
push
aaa
mov
dec
mov
inc
sbb
bound
adc
scas
call
adc
testl
xchg
push
jae
pop
ret
cmpl
inc
imul
xor
push
cmpb
mov
ficompl
pop
dec
pop
lods
push
push
mov
fdivp
or
xchg
add
and
sub
enter
aaa
adc
addl
loope
add
sub
xor
inc
rorb
mov
or
into
shrb
cs
inc
filds
cmp
and
jp
mov
ds
popf
out
loopne
xor
xchg
mov
mov
push
push
nop
insl
rolb
or
jno
dec
cld
or
push
ret
push
push
cltd
mov
xorl
dec
pop
add
cmp
loopne
add
and
and
xor
ret
divb
cmp
add
pop
sbb
sbb
push
adcb
sbb
inc
jecxz
stos
aam
pushf
pop
andl
xor
imulb
adc
ja
je
or
je
or
sub
xchg
scas
inc
rcr
cmp
inc
hlt
xchg
mov
cmpl
mov
push
push
fists
or
loope
jnp
lahf
negb
push
jmp
cmp
adc
dec
movsl
test
push
cmp
pop
push
inc
mov
push
inc
add
lds
daa
dec
imul
add
jno
and
clc
push
shr
loope
in
mov
ret
and
inc
jne
mov
cli
test
sub
adc
je
shlb
sub
mov
or
adc
pusha
daa
mov
adc
pop
cltd
and
add
icebp
lret
add
mov
mov
and
imul
sarb
sub
jmp
inc
cmpsl
add
movsb
ljmp
push
arpl
adc
in
adc
mov
movl
add
fs
sub
cmpl
adc
filds
test
jle
or
leave
js
jg
sbb
add
int3
adc
push
cmp
pop
push
and
inc
movsl
jo
lods
adc
mov
sub
fmull
popa
jl
push
pusha
daa
xchg
js
mov
and
cmpsl
push
icebp
sbb
dec
stos
xchg
lods
adc
cmp
nop
or
push
cmp
rcr
fimull
jns
fcompl
pop
mov
das
or
push
ljmp
inc
push
inc
push
cmp
and
in
push
test
into
shrb
push
mov
add
jb
test
mov
cmp
nop
sub
in
xchg
xchg
xchg
push
dec
test
mov
mov
in
imul
adc
jno
xchg
cmp
jne
std
in
xor
jge
mov
xchg
insb
jecxz
dec
and
and
scas
pop
add
xor
inc
dec
xchg
mov
jmp
add
fwait
int
les
enter
and
iret
and
sbb
mov
stos
call
leave
jns
cmpsb
fs
ret
rorb
cmpsb
ret
push
mov
xchg
lods
pop
ds
fdivrs
repz
sbb
nop
out
xor
fistl
sub
fisttpll
inc
dec
fnstcw
and
mov
inc
add
push
mov
pop
jge
loopne
or
test
ja
cmpsb
cmp
in
cmpsb
dec
arpl
aam
and
cmp
lcall
or
in
cmp
aaa
addl
aas
cmp
and
in
cmpsl
jnp
push
ret
fs
cmp
and
mov
lcall
cmp
mov
mov
ret
jno
int3
les
fs
push
adc
sbb
mov
js
sbb
fstpt
sbb
pop
das
leave
loope
jge
shl
pop
or
and
push
sub
pop
rcrb
mov
push
jecxz
and
sbb
shr
mov
ret
cmpsl
add
jo
sbb
movsb
popf
das
or
adc
sbb
fwait
push
xchg
or
sbb
push
push
mov
loop
test
inc
cmp
hlt
cmp
jmp
push
hlt
int3
sub
stos
dec
lcall
push
xor
mov
les
push
mov
inc
push
push
sub
jg
les
outsb
or
daa
movsl
mov
xor
mov
dec
or
xchg
inc
push
jne
add
sbb
cld
or
movsl
xchg
popf
int
push
lahf
dec
in
sub
push
push
push
hlt
mov
push
sub
or
aaa
cwtl
mov
pop
pop
test
push
ret
pop
dec
or
test
andb
test
outsl
lret
cltd
xor
pushf
je
and
movsb
and
rolb
loope
sbb
xchg
mov
pop
aam
mov
test
or
or
push
int
testb
mov
sbb
or
dec
sub
and
call
adc
sub
inc
add
pop
xor
test
push
pushf
mov
jmp
xchg
nop
mov
pop
les
mov
jbe
lods
mov
rorl
add
jg
cmp
mov
dec
jae
call
or
or
arpl
pop
cmp
inc
call
addr16
sbb
incl
add
push
jae
pop
xorl
or
in
inc
inc
fs
sub
pop
xchg
sahf
ret
inc
dec
sub
jno
sbb
lods
into
pop
movsl
xchg
push
cli
in
fisttpl
orb
dec
lret
push
xor
nop
adc
loop
sbb
xor
xchg
push
mov
jno
sub
push
add
pushf
push
int3
cmp
fsts
ja
sub
push
shlb
mov
push
andb
push
push
lea
push
cmp
add
inc
mov
addb
jg
sbb
outsl
inc
out
add
in
pop
sbb
mov
add
inc
iret
inc
push
scas
mov
add
or
inc
and
dec
or
or
shlb
jg
adc
mov
mov
and
or
mov
sti
cli
shlb
in
pop
jne
es
shl
push
stos
add
out
xor
daa
cmp
pop
push
push
mov
push
mov
jge
jo
xchg
imul
push
jl
lea
and
adc
int
cmc
dec
or
call
add
jl
sbb
dec
cmp
sbb
inc
push
add
and
or
inc
or
or
mov
mov
sub
jo
shlb
cmpl
add
setl
dec
adc
inc
notl
das
dec
pop
dec
mov
mov
cmp
sub
mov
push
enter
xor
lret
inc
fdivrs
clc
lret
and
mov
xorb
push
mov
sub
xor
fildll
jne
mov
push
mov
lret
shl
orl
std
scas
pop
sbb
and
clc
or
inc
adc
mov
test
mov
mov
leave
loopne
jecxz
jo
or
xchg
push
movups
push
sub
pop
dec
sbb
xchg
sbb
mov
repz
pop
fimuls
test
es
in
aaa
stos
xchg
jecxz
sub
adc
sbb
cmp
jge
xchg
mov
adc
icebp
es
adc
call
mov
inc
sbb
in
aaa
rcll
addl
push
stc
pop
cmpsl
movl
sub
je
call
js
or
test
bound
sbb
adc
pop
inc
sub
push
adc
das
imul
cmpb
dec
pushf
mov
fsubl
fwait
push
stos
add
pop
mull
sti
and
add
add
insl
xchg
mov
add
outsb
decl
jnp
or
push
cmp
cwtl
ret
enter
dec
jmp
into
mov
mov
mov
push
in
and
test
lret
test
outsl
gs
jl
adc
or
xor
sbb
leave
ljmp
fisttpl
fs
sbb
sub
cmp
or
add
push
pop
and
or
push
pop
sub
lahf
push
inc
push
add
dec
push
add
inc
fildll
push
ljmp
lea
push
and
adc
inc
out
or
add
popa
rcr
gs
fildl
jmp
mov
cmp
or
mov
adc
repnz
cld
push
dec
mov
push
movsbl
mov
gs
mov
lret
add
pop
imul
push
adc
mov
xor
mov
add
sbb
push
sti
loopne
popa
enter
sub
xchg
fsubr
add
and
push
mov
pop
cltd
or
adc
mov
and
and
leave
lahf
iret
or
and
pop
mov
mov
sbb
or
or
xchg
jmp
enter
mov
cmpsl
xor
jb
inc
push
push
sub
xchg
dec
mov
addr16
sbb
sbb
or
mov
push
leave
rclb
and
sub
cmp
lret
cmp
es
mov
dec
jle
xchg
and
or
loop
fwait
inc
xchg
mov
sbb
pop
mov
xchg
orl
add
cmp
inc
sbb
xor
mov
add
lods
cmp
push
or
mov
mov
push
and
push
dec
push
mov
sti
cmp
nop
pop
test
pop
mov
cmp
xor
adc
lods
adc
loopne
aas
inc
rol
dec
sub
jne
push
add
data16
xorb
add
sahf
add
mov
sbb
or
sbb
mov
fadds
and
or
adc
test
ja
add
sbb
test
cmp
int3
inc
and
in
inc
push
adc
loopne
inc
add
push
movsl
push
push
loope
bound
dec
sbb
test
cmpsb
xor
les
xor
daa
jp
mov
mov
and
pop
pop
pop
jo
lds
dec
loopne
sub
xchg
mov
sbb
lahf
repz
repnz
xor
inc
shlb
and
loop
lret
in
push
in
sub
cmpsl
call
xchg
call
cmp
dec
jg
inc
jno
add
clc
sti
sarl
or
sub
adc
enter
pop
inc
xor
pushf
fdivp
or
ds
mov
lods
adc
inc
cmp
out
roll
cmp
lock
and
jne
adc
pop
add
js
or
sub
mov
in
cmp
inc
retw
mov
mov
add
adc
cwtl
mov
jno
push
or
xchg
or
add
jne
std
int3
or
jne
enter
movsb
aam
cwtl
insb
dec
or
repz
insl
ret
sub
aaa
ss
out
test
and
pop
inc
out
lods
sbb
rorb
or
test
inc
mov
pushf
jb
push
sub
dec
rorl
add
mov
mov
loopne
dec
mov
pop
scas
in
push
sbb
jmp
mov
bound
rcl
jge
stc
jl
ljmp
mov
daa
push
in
add
testl
and
push
nop
addr16
and
adc
sahf
mov
add
leave
push
jl
cmp
jae
mov
shl
mov
xor
out
pop
cmp
mov
mov
popa
dec
mov
js
and
add
imul
pop
mov
mov
add
bswap
inc
jmp
push
pusha
mov
cmc
push
add
outsb
int3
xor
icebp
mov
loopne
jl
xor
loop
pop
mov
movsb
leave
shrl
stos
sub
enter
sahf
or
jge
cmovge
sbb
mov
adc
addl
and
and
les
push
js
aam
adc
loopne
adc
xor
jle
mov
cli
and
push
adc
sub
pop
mov
mov
arpl
frstor
scas
xchg
andl
inc
xor
mov
mov
push
xchg
rol
fsubl
enter
jns
push
sbb
push
and
ljmp
mov
dec
jmp
cmp
ja
pop
pop
lret
sub
dec
mov
mov
jecxz
sahf
push
loop
dec
push
insb
enter
push
imul
test
xor
cmp
jns
add
gs
jge
je
xor
xor
fsub
mov
scas
ret
mov
and
test
mov
cmc
imul
out
shll
push
leave
push
xor
aad
mov
push
lret
and
repnz
cmp
add
adc
mov
inc
sbb
sbb
add
lock
mov
enter
dec
sbbl
insb
mov
cld
and
popa
push
sahf
and
mov
ret
orl
cmpsb
rcr
inc
push
dec
stc
add
test
out
adcl
push
lea
add
call
mov
cmp
push
inc
lock
inc
ret
push
pop
and
push
out
cmc
test
jp
call
test
inc
xlat
out
mov
push
lea
push
sahf
add
pop
pop
and
inc
and
out
xor
scas
ret
push
pusha
scas
inc
enter
test
scas
cmp
xchg
lods
inc
cmpsb
or
sbb
inc
add
xor
or
clc
rorb
and
push
and
dec
arpl
mov
push
aaa
cmp
push
fsubl
add
sbb
inc
sbb
add
mov
outsb
test
push
outsb
pusha
sub
add
je
push
mov
cmp
push
dec
pop
adc
sbb
jle
xchg
xlat
xchg
jle
adc
adc
and
add
sub
test
addb
lods
jecxz
or
or
loopne
negl
mov
cmp
fdivs
andl
out
loop
js
mov
into
xchg
jnp
mov
add
shrb
mov
repnz
outsb
pop
mov
movsl
adc
adc
and
pop
add
jb
cmpl
lea
dec
lea
pop
push
xor
push
push
adc
mov
popf
xchg
push
mov
data16
fcompl
mov
or
add
jno
movb
xchg
aam
jne,pt
repz
mov
add
mov
mov
xor
sbb
and
cwtd
pop
ret
mov
in
imul
sbb
cmp
or
hlt
jo
jmp
aam
and
or
ljmp
add
mov
push
xor
outsb
enter
pop
mov
jmp
or
fcoml
lods
lds
inc
enter
iret
in
pop
or
push
imul
push
or
pusha
pop
add
or
aas
mov
js
pusha
xchg
lods
lods
inc
or
test
xchg
in
pop
adc
push
test
fadd
xchg
jl
mov
xchg
sub
xor
sub
pop
pop
pop
xor
pop
daa
lret
push
jo
jae
fnstenv
roll
pop
daa
mov
xor
push
sbb
or
cmpl
mov
pop
sbbb
dec
fcoml
and
or
or
ss
lahf
add
loopne
lret
or
cmp
or
add
jne
das
add
sub
or
mov
cmp
mov
xchg
dec
je
sbb
or
sbb
add
or
fadds
repz
xadd
or
and
sbb
pop
dec
xchg
lock
pop
push
jo
push
je
and
outsb
sub
stos
imul
clc
je
sbb
ja
shll
or
jl
push
clc
roll
das
lock
push
ljmp
cld
clc
loop
loopne
jge
call
icebp
sub
out
lea
inc
fisttpl
dec
xchg
pop
mov
sbb
out
and
push
xor
testb
inc
cmp
jb
insl
into
push
repnz
shrl
lea
and
xchg
scas
jns
or
divb
mov
pop
xchg
adc
mov
mov
xor
mov
cmp
call
push
cld
push
xor
icebp
pop
lret
xor
push
neg
sbb
inc
je
scas
movsl
outsl
xchg
ret
jp
inc
cmp
mov
pop
in
popf
xchg
rcrl
leave
orl
jbe
dec
pop
je
fisttpl
mov
xchg
inc
cmp
inc
push
pop
stos
fsubrs
test
pusha
shlb
js
jb
adc
inc
push
aam
xor
mov
sub
mov
insl
sbb
or
insb
lock
add
ja
sub
add
jmp
xchg
jb
cltd
push
aas
jmp
jp
lahf
sbb
out
or
lret
mov
shll
push
dec
pushf
cltd
xor
les
fisubl
js
inc
pop
fdivrp
xchg
xchg
fbld
sub
mov
xor
lret
lret
lret
xor
cmp
xchg
pop
out
lret
inc
test
int3
dec
sbb
popf
jmp
movl
cwtl
jge
add
add
jge
sbb
shlb
adc
push
sub
sub
cmpsb
sub
sbb
cmpsl
mov
add
cmp
cmp
stos
or
or
push
lods
push
ss
lods
fisubs
lock
test
xor
jb
cmp
cmp
add
adc
rclb
adc
xchg
into
mov
jb
outsl
scas
mov
push
icebp
pop
or
outsb
mov
xlat
es
subb
testl
nop
stos
scas
inc
pop
mov
xchg
add
inc
orb
jmp
jp
lods
std
push
iret
movb
cltd
xchg
movsb
adc
cmp
add
cmovae
shrb
pop
mov
adc
mov
dec
popa
inc
mov
pop
je
imul
int3
je
imul
cmp
xchg
pop
or
into
fidivs
cmpb
cmp
inc
es
jno
dec
andl
sub
xor
dec
fisubrl
push
mov
jne
pop
cmp
sbb
add
loope
pop
lea
adc
rep
bound
cmp
jle
sub
jmp
sub
jae
shl
and
inc
mov
jno
gs
sbb
andl
mov
adc
or
and
nop
and
jae
ja
pop
in
and
xlat
push
and
icebp
push
or
push
mov
mov
adc
push
les
je
inc
sub
xchg
test
cmpb
push
xor
lret
cmp
inc
inc
mov
add
sbb
out
std
xor
inc
es
xchg
pop
mov
dec
mov
adc
clc
lods
cmp
jne
sbb
xor
test
and
xor
and
push
popa
ficompl
enter
add
js
xchg
fldt
ret
jg
hlt
add
sub
push
jo
inc
pop
lret
cmp
sub
lret
mov
mov
xchg
test
popa
sarl
pop
insb
and
push
or
sub
sub
xor
push
xacquire
adc
nop
pop
mov
push
push
clc
pop
test
lret
xor
add
lret
loop
and
pop
push
or
pop
adc
push
push
push
pop
jp
sar
call
stos
cwtl
xor
and
push
add
call
add
add
push
mov
orb
mov
sbbl
fisubs
add
aas
cmp
push
adc
adc
jno
pushl
sub
sbb
and
dec
rcl
js
push
and
pop
movsb
xlat
mov
adc
arpl
jns
push
and
add
xchg
js
inc
pop
inc
sbb
sbb
iret
loopne
push
xor
sbb
and
sarb
mov
jne
sbb
decb
mov
push
bnd
roll
pusha
and
jo
inc
add
add
aas
sbb
push
popa
xor
insl
or
push
and
je
adcl
lret
or
cmpsb
pop
cltd
dec
shr
push
or
pusha
mov
mov
push
push
push
icebp
jl
ret
push
push
adc
add
mov
or
jb
adc
sub
xor
adc
mov
in
dec
mov
add
pop
or
xchg
mov
mov
jle
fildl
xlat
mov
addr16
sbb
adc
int3
adc
add
pusha
pop
or
jge
shrb
mov
adc
setae
add
jno
bound
xchg
nop
cli
testb
enter
stos
data16
popf
movl
or
or
dec
dec
xchg
ret
popa
insb
loope
test
push
adc
rorl
or
cmp
subl
adc
inc
cmp
clc
cmpsl
dec
imul
or
stos
pop
subb
ljmp
push
shrb
sub
sar
sarl
clc
jecxz
clc
jbe
or
add
push
or
shr
outsb
ret
inc
mov
push
mov
in
inc
ret
pop
loopne
je
sub
jecxz
out
add
sub
in
mov
add
jmp
jmp
shrb
pop
lea
xchg
inc
dec
mov
out
ror
sbb
or
and
ja
pop
testb
adc
mov
fdivp
push
in
gs
sarl
mov
xchg
fdivl
cmp
cmp
xchg
jl
pop
in
mov
popa
loope
and
lea
mov
mov
dec
inc
add
shll
jne
xchg
nop
inc
out
xchg
push
mov
lea
sub
or
add
inc
outsl
add
stos
or
rolb
jl
dec
xchg
in
loopne
pop
cmovle
mov
lret
pop
in
inc
adc
fs
xchg
or
push
mov
imulb
pop
dec
ss
arpl
dec
add
add
cmpsl
jp
jne
sub
sbb
pop
cmp
dec
shl
add
cmp
jb
pushl
jo
dec
adc
push
clc
or
jmp
xor
jae
inc
mov
sbb
adcb
and
xor
shrb
subb
bound
pop
clc
inc
mov
push
xchg
mov
sbb
test
mull
mov
out
mov
dec
xor
out
xor
lods
add
adc
inc
and
movsl
dec
jmp
les
pop
adcl
scas
sub
xchg
add
ret
xchg
and
add
testl
int
dec
scas
xchg
sbb
subl
movsl
jnp
add
jbe
sbb
daa
or
in
and
cmp
sbb
cmp
fisttpl
cmp
btr
mov
leave
insl
jb
loopne
arpl
adc
add
sub
cmp
dec
enter
add
mov
lahf
jmp
inc
push
mov
call
mov
ficoml
daa
mov
movl
cld
addb
add
mov
or
xorl
push
and
jne
push
xor
or
ja
je
pusha
test
pop
add
add
daa
add
push
movsl
lea
lcall
add
adc
movsb
add
lods
cltd
out
cmp
push
jmp
push
add
inc
cmp
add
push
xor
inc
aas
and
and
cmp
cmp
dec
and
cmp
insb
and
inc
es
cmp
cmp
les
inc
push
hlt
sub
and
jb
xchg
insb
or
jmp
push
nop
sub
enter
inc
push
push
xor
fdivl
xor
loopne
negb
or
xor
mov
mov
jo
repz
lea
shl
sbb
test
pusha
pfmul
cmp
pop
ss
in
or
pusha
push
fucom
push
out
or
inc
shr
pop
adc
or
add
adcl
xor
add
fdivrl
xchg
rol
mov
lds
xchg
adc
inc
adc
popa
xchg
push
push
mov
dec
loope
sbb
push
or
nopl
pop
or
adc
and
or
leave
ret
shll
add
mov
mov
or
fnstcw
inc
mov
xlat
and
push
mov
sbb
xchg
loop
cmp
inc
sahf
cmp
xchg
xorb
es
push
fdivrp
add
lods
mov
imul
or
pushf
fisttpl
mov
ss
mov
imul
icebp
ss
leave
push
mov
cmp
or
mov
ret
push
adc
lock
push
repnz
inc
cmp
es
ds
jp
dec
pop
pop
push
mov
jo
ds
loop
fsubrl
and
xor
leave
jecxz
loopne
mov
test
or
or
pop
jne
stos
lods
rol
sbb
pop
ret
add
push
mov
adc
lcall
cltd
outsl
add
popa
pushw
testl
xor
es
and
dec
and
cmp
xor
sbb
arpl
movsb
jle
mov
or
shrb
sbb
adc
cmp
jne
lahf
or
push
and
outsb
je
push
scas
andb
add
sti
sbb
inc
sbb
jnp
or
ret
je
push
sbb
sarb
mov
imul
mov
jmp
xor
lods
iret
push
push
and
cmp
aas
and
iret
outsb
stc
gs
lods
jae
dec
push
pushf
and
or
or
gs
mov
jmp
or
xor
adc
movsb
outsb
shlb
xchg
subl
clc
je
rolb
dec
mov
push
push
mov
sbb
jg
dec
notl
pop
jle
sub
fcmovnb
sub
dec
loope
rorb
mov
addb
sbb
sahf
in
sbb
movsb
add
call
xor
movsb
sub
scas
push
mov
cmp
jp
add
inc
and
cmp
add
cmp
mov
or
jl
cwtl
push
fildl
repz
fucomip
arpl
repnz
push
push
das
or
test
mov
sbb
aas
and
xor
or
mov
repnz
iret
xchg
fsubrl
or
movsb
jne
mov
or
roll
or
addb
stos
sub
inc
jge
xchg
push
add
call
and
mov
call
les
sub
int3
test
xchg
aas
or
fsub
leave
addl
mov
outsl
clc
xor
insb
inc
lcall
int
xchg
push
popfw
in
xchg
je
mov
and
in
lahf
add
or
and
cmc
pushf
adc
xlat
push
jge
arpl
or
cmp
push
lock
orl
mov
sbb
and
mov
pop
and
cmp
jl
cmp
jle
cmp
outsb
xchg
lods
jg
jp
or
pop
mov
je
sbb
mov
inc
cmpsb
cmp
clc
cmp
jge
mov
pop
in
out
xchg
and
cmp
jl
je,pn
cmp
je
nop
clc
sub
xor
lock
movsl
pusha
lcall
lods
and
enter
or
sbb
test
cs
out
testl
hlt
roll
mov
push
push
sbbl
scas
test
test
lahf
sarb
adc
mov
mov
lock
jl
faddl
in
rcrb
mov
fmuls
out
mov
pushl
rclb
adc
mov
rorl
adc
mov
filds
add
xchg
inc
pusha
and
ret
inc
loopne
fmuls
dec
pushf
push
push
insl
cli
push
jne
cmpsl
xlat
push
and
pop
ds
mov
lret
rcr
add
xchg
or
inc
shlb
sub
or
rcrb
popf
aam
sbb
in
clc
cmpsl
je
xor
pop
mov
sub
inc
push
loopne
test
mov
movb
lret
and
aaa
push
lea
or
mov
sub
cs
mov
sbb
call
inc
jmp
sbb
dec
push
mov
xchg
pusha
cmpsb
rorb
pushl
mov
cli
cmp
mov
adc
add
push
inc
cmp
cwtl
pusha
jge
in
inc
cmp
pop
push
cmp
pop
push
pop
adc
or
pushf
and
inc
imul
hlt
dec
gs
sbb
dec
and
adc
or
mov
pop
pop
addr16
add
pusha
or
push
pop
and
fistpll
and
cmp
aam
mov
clc
scas
mov
xor
jmp
mov
mov
sbb
jo
mov
pop
xchg
adc
and
add
xchg
push
sbb
lahf
push
test
inc
insb
adc
push
movb
jo
push
fldcw
or
and
rorb
je
adc
push
mov
xor
sbb
test
out
lods
sub
push
inc
pop
pop
dec
cmpsb
pop
add
mov
or
lret
testl
pop
or
nop
icebp
dec
sti
imul
xchg
ret
sbbb
inc
aaa
popf
outsb
mov
dec
inc
aam
fs
or
sbb
outsl
lea
push
xchg
xlat
loope
les
dec
push
add
xor
pop
aad
dec
push
sbb
xchg
xchg
and
stc
lock
add
jbe
jmp
outsl
femms
movsb
ret
add
cmp
and
and
add
and
add
fwait
arpl
push
sbb
in
lock
inc
jl
fucomi
or
jl
gs
or
dec
lea
call
pushf
add
mov
dec
dec
mov
in
test
cmpsl
add
stos
pop
add
jne
jno
das
or
loop
mov
int3
sub
mov
sbb
xchg
xor
or
push
sbb
jb
les
add
add
loopne
add
xchg
sub
xchg
sub
ret
inc
mov
addr16
fsubl
jge
nop
das
pop
hlt
in
mov
cmp
sbb
leave
or
mov
fsubrl
rorb
and
daa
je
cmp
insl
adc
and
pop
push
inc
add
push
sbb
mov
dec
ret
jecxz
jno
adc
pop
popf
lock
mov
jne
xor
jle
lods
xor
clc
push
jle
dec
add
and
out
xchg
jl
xor
cmp
xor
insb
mov
insb
jbe
push
outsb
sub
push
repnz
jmp
and
sub
insb
jne
inc
xchg
cmpsb
cltd
jae
cmp
or
test
jns
mov
inc
shl
mov
fdivrs
add
icebp
and
shrb
imul
shlb
daa
sbb
rorl
mov
and
orl
js
movsb
push
shrl
xlat
dec
dec
mov
sub
test
jnp
subl
add
jae
roll
add
test
pop
adc
mov
push
shr
xor
push
mov
mov
repz
fdiv
rcrl
or
push
pop
sub
or
sub
push
lret
pop
test
push
add
sub
sahf
and
dec
rcrl
add
inc
mov
push
sbb
jne
jl
mov
jg
mov
inc
leave
sbb
xchg
dec
sub
shll
les
cmp
sbb
loope
push
inc
orps
and
insl
mov
sub
sub
iret
aas
das
pusha
cmc
or
sub
lea
pop
pop
mov
mov
add
dec
fdivrs
jecxz
cmp
lds
es
or
popa
inc
or
inc
cmpsl
mov
adc
shrl
or
sar
fildl
add
sub
dec
jns
mov
mov
add
inc
or
adc
add
movsb
fimull
add
add
or
or
lods
push
pop
data16
sbb
inc
dec
inc
push
push
mov
ret
mov
aam
adc
lret
pop
add
ja
mov
mov
rorl
or
or
sub
mov
pop
pop
sub
cmp
mov
lods
xchg
fcoms
pop
fldcw
out
pushf
xor
bound
cs
inc
add
push
jnp
adc
adcb
pop
add
pop
inc
jmp
adc
lret
sub
push
lea
inc
and
nop
and
or
jo
push
push
mov
in
push
adc
fst
pop
test
and
or
stos
sub
jge
adc
sbb
jae
jae
pop
sahf
push
xchg
sub
call
push
inc
sbb
sbb
div
je
into
xor
push
daa
sub
jle
clc
xor
incl
and
add
or
in
stc
pop
add
add
dec
nop
pop
mull
sub
mov
push
or
and
mov
mov
push
fsubrs
testl
pop
je
fldl
or
sbb
dec
in
sub
push
cmp
fbstp
inc
add
bnd
push
divb
out
stc
jns
clc
jne
or
jne
adc
movl
pop
andl
inc
fs
mov
and
dec
pop
mov
push
mov
push
jb
cli
inc
xlat
jae
mov
pop
clc
and
andl
test
add
or
pop
jecxz
mov
mov
mov
decl
push
add
dec
sbb
mov
icebp
ret
rol
lea
notb
sti
cmc
sbb
and
out
adcb
cs
inc
push
imul
adc
push
sbb
sub
cmc
sub
ss
fsubrl
imul
jne
push
dec
cmp
mov
push
adc
cwtl
loop
xchg
out
cmpsb
loopne
sti
movsl
pmaxub
adc
lcall
jno
hlt
nop
and
aas
sub
addb
ret
push
jle
hlt
push
or
fmull
or
pop
scas
mov
sbb
mov
xchg
sub
aam
mov
pusha
xchg
jle
jbe
dec
or
push
ficoms
push
or
inc
daa
nop
mov
sub
pushf
mov
test
shlb
jl
mov
mov
push
add
rcll
fstpl
pop
push
out
daa
cmp
popa
mov
xor
or
cwtl
pusha
add
sbb
mov
pushf
xchg
pop
adc
dec
or
push
pop
mov
push
lods
shr
imul
les
lahf
adc
lret
sbb
imul
test
cltd
sbb
leave
pop
push
cs
sbb
fs
add
add
and
int3
test
sub
xor
dec
les
adc
cld
adc
xchg
push
mov
enter
push
mov
enter
jno
add
popa
adc
jl
xor
xor
repz
enter
pop
fldl
fstl
mov
rorb
lods
inc
rclb
or
fs
xchg
fmuls
mov
enter
jo
loopne
popa
adc
lea
frstor
xor
iret
pop
adc
and
pop
imul
mov
cmp
adc
mov
insl
and
or
dec
add
or
xor
pop
clc
pop
xor
jae
sub
mov
call
push
loope
jns
loopne
pop
pop
or
std
mov
xor
mov
aas
mov
loopne
ret
cli
or
mov
push
int
push
test
cmpsb
cwtl
and
pop
rcrb
stos
push
test
sti
sarb
push
push
cmp
loop
test
fiaddl
push
fs
add
adc
add
add
pushf
mov
movsb
add
scas
pusha
js
sbb
imul
cmp
jl
enter
mov
shrb
mov
add
fdivrs
push
fdiv
or
xchg
add
add
add
sbb
es
fists
xor
push
push
out
loopne
inc
iret
pop
pusha
test
bound
int
push
or
dec
insb
mov
and
add
mul
fldl
xchg
mov
repz
or
or
push
scas
rorb
mov
cmp
cmpsb
das
ret
cmp
or
xchg
gs
into
sbbl
mov
mov
adc
sub
dec
test
sbb
jmp
test
ljmp
push
pusha
jb
lods
call
jmp
sbbb
cs
xor
mov
sarl
imul
ret
repz
pop
in
jne
xor
sti
xchg
push
push
adc
ret
mov
mov
add
loope
mov
test
add
or
add
loopne
jmp
xor
dec
xor
sub
and
cs
xor
cwtl
mov
in
or
xor
lods
movsl
push
mov
loope
rol
inc
cmc
pop
shrb
cmp
cmp
jg
in
sbbl
jmp
sbb
pop
test
add
cmp
sub
clc
push
add
inc
lret
pop
push
orl
or
adc
inc
add
jno
pop
aad
xor
ja
push
insl
fmulp
or
sub
adc
fildl
icebp
push
mov
loope
in
xchg
jb
dec
rclb
or
int
xchg
sbb
fs
pop
inc
inc
or
sub
incb
das
mov
aad
shlb
push
pop
outsb
or
jmp
cmp
mov
lock
or
xorb
mov
push
pusha
enter
push
jae
outsb
sub
clc
pop
inc
dec
orl
add
mov
jo
mov
pushf
shll
popa
ror
js
push
shll
cmpsb
pusha
or
in
shr
rcrl
in
mov
andb
mov
pop
adc
das
push
clc
mov
mov
inc
bound
add
jno
stc
lods
or
sbb
jle
add
sub
push
mov
or
mov
push
or
cmc
adc
stos
fisubrl
push
sbb
adc
dec
or
pop
insl
xchg
sbb
xchg
aad
push
or
push
shll
movsl
inc
dec
xor
movsl
test
sub
test
push
popf
negl
int
push
xchg
test
and
movsl
sub
movsl
scas
mov
gs
adc
sbb
stc
jno
xor
frstor
shll
adcl
setge
jl
ret
push
add
popf
jnp
mov
inc
aam
scas
inc
inc
push
mov
mov
fisttpl
sbb
pop
lock
adc
push
ljmp
add
adc
nop
dec
iret
imul
xchg
xchg
repnz
push
mov
pop
xchg
mov
inc
subl
ja
mov
scas
iret
mov
fsubrs
add
cs
rorl
push
jl
rcl
push
cs
xchg
mov
aas
inc
sub
inc
popa
add
int
or
add
xor
dec
dec
mov
add
pop
movsl
inc
rolb
or
mov
flds
mov
fcoms
loop
test
fwait
inc
push
int
pop
mov
pop
cwtl
xor
add
pushf
test
pop
bound
mov
aaa
xor
rcrb
clc
test
sti
repnz
push
pushl
cmpsl
out
push
dec
leave
mov
ss
mov
mov
clc
push
xor
mov
lods
or
call
pop
mov
sbb
mov
adc
pop
insl
cmp
shll
daa
sbb
inc
pop
seta
filds
mov
jo
add
ret
dec
dec
clc
movsb
inc
stos
jp
add
shrl
xlat
mov
xchg
xor
adc
and
ss
jle
add
pop
fsubrs
push
add
std
fcompl
add
xor
and
stos
movsb
and
push
jnp
add
mov
adc
pusha
jo
or
dec
test
sbb
nop
pop
push
icebp
sub
inc
shr
sbb
movsb
sub
insl
pop
aam
daa
fbld
out
cmc
inc
mov
sub
js
adc
pop
addr16
and
test
inc
cld
in
cmpsb
jge
mov
adc
cltd
jb
jge
out
and
les
xor
daa
and
sub
hlt
dec
push
and
into
movsb
add
cmp
jbe
cld
adc
and
push
and
pop
or
cwtl
ss
sbb
inc
int
fimuls
push
mov
mov
mov
lcall
popa
mov
push
scas
or
imul
pop
std
cmpsb
mov
sub
and
popf
add
mov
sahf
jo
xor
xor
sub
mov
les
mov
add
or
jl
outsl
in
push
add
push
lods
push
sub
jmp
std
mov
or
add
jmp
sbb
cwtl
lods
aam
cmp
shll
test
and
in
rol
das
sbb
clc
or
pushl
adc
or
test
xchg
dec
push
scas
push
jo
sbb
mov
or
sub
pop
cmp
dec
mov
stc
adc
rcrl
mov
cmpsl
xchg
add
cmp
push
int
dec
rcll
mov
outsl
mov
enter
pusha
inc
call
or
mov
and
les
sbb
repnz
dec
nop
push
repnz
or
push
pushf
pop
mov
pop
xor
pusha
lods
shrl
push
cmp
or
and
mov
or
insb
xchg
insl
or
xor
inc
movsb
mov
and
or
xorb
push
adc
mov
and
and
mov
shlb
inc
dec
cwtl
dec
and
out
cmp
mov
es
movsl
mov
subl
push
je
test
xchg
sbb
les
lock
popf
adc
inc
sbb
and
mov
int
pop
cmc
sbb
mov
pop
or
test
rclb
or
xor
and
jbe
pop
gs
jecxz
add
clc
je
mov
mov
mov
lods
jns
and
popa
and
push
leave
je
rorb
cmc
insl
and
test
xchg
pop
fisubl
in
and
inc
push
out
sub
lea
push
sub
and
inc
sbb
lds
daa
daa
mov
xchg
xor
je
or
outsl
or
push
cli
inc
lods
dec
loopne
push
dec
mov
adc
dec
adc
lret
sbb
insb
aad
add
imul
mov
sub
js
loope
jbe
and
aas
and
push
ss
icebp
gs
daa
adcb
cmpsl
mov
loopne
or
int3
lock
mov
xchg
ret
jne
mov
inc
ds
cmpb
sub
in
movsl
nop
push
xor
inc
cmpsl
dec
dec
int3
es
inc
lods
push
xorb
lods
mov
xchg
std
jnp
nop
sahf
fwait
cmp
push
sti
mov
imul
jp
or
imul
orl
dec
inc
adc
xor
xchg
getsec
mov
sub
cmp
idiv
mov
or
decl
fdivrl
lret
mov
fcompl
dec
add
testb
pop
mov
and
std
and
jmp
mov
int3
and
ret
sbb
push
fldenv
sbb
movsb
in
int3
jne
lcall
movl
in
lahf
loop
lock
add
mov
dec
or
push
add
lock
inc
mov
xchg
push
add
push
adc
xchg
je
sub
or
out
add
bound
fcom
xor
hlt
out
jno
push
dec
mov
test
xchg
xor
pop
movsl
or
test
xor
cltd
mov
pop
push
inc
sahf
nop
push
push
add
push
push
gs
sub
or
lret
cli
xchg
xlat
xor
xchg
out
call
leave
nop
fsubl
or
dec
adc
testb
shll
pop
outsb
dec
inc
sub
or
and
inc
sbb
add
test
and
test
mov
div
inc
cmp
jae
dec
rclb
inc
mov
pop
outsb
inc
dec
lret
push
aaa
adc
add
in
ret
xor
mov
mov
push
fs
cmp
jmp
imul
rolb
ret
pop
neg
sub
sub
insb
mov
aam
push
scas
shlb
jb
cmp
je
cmp
or
adc
mov
xchg
mov
jne
and
rolb
push
mov
test
decb
pop
cs
jne
nop
fidivl
outsl
xchg
pushf
mov
cmp
jne
arpl
ret
insb
loop
sahf
xlat
add
lret
xor
jns
jl
push
inc
iret
lds
imul
dec
jno
pop
sub
mov
in
jl
adc
add
mov
loopne
loopne
fcoms
mov
add
add
inc
mov
dec
add
push
dec
sub
cli
xchg
fnsave
popa
or
sbb
add
lret
add
cld
fnstsw
test
cs
and
add
sbb
sbb
shrl
inc
insb
imul
mov
ror
lea
and
aas
inc
jl
div
dec
loop
fstpl
and
insl
clc
push
sub
or
and
fldz
out
cmp
xor
pop
lods
and
pop
fsub
pop
fsubrp
xor
jge
mov
sub
mov
stc
cmpl
or
pop
icebp
and
add
push
rclb
xchg
sub
and
add
pop
aam
sub
dec
je
add
shrl
xor
adc
hlt
cwtl
mov
push
push
in
pop
mov
mov
dec
adc
sub
sbb
push
shrl
add
dec
pop
mov
data16
lods
cld
jmp
push
add
push
xchg
push
jmp
push
or
iret
ds
ss
shlb
loopne
jl
lods
cld
in
jle
push
enter
and
adc
sbb
repnz
fsubl
js
mov
sub
iret
out
addr16
adc
or
cld
mov
es
fmuls
adc
cmp
lods
fildl
xor
sbb
lret
push
push
pop
addl
adc
in
aas
add
cwtl
and
xchg
adc
into
lock
mov
pop
pushl
lahf
jns
xchg
mov
adc
and
adc
fists
lea
and
shlb
xchg
or
jg
fwait
dec
rcll
inc
into
jo
push
push
sbb
add
fwait
xchg
cmp
sub
sbb
shlb
mov
fchs
xchg
xchg
fsubrs
int
sti
pusha
gs
hlt
imul
sbb
sbb
leave
cmpxchg
mov
xor
movsl
sbb
cmp
add
mov
xchg
push
mov
mov
inc
xchg
push
push
addr16
xor
push
inc
sahf
fst
aas
dec
sbb
loopne
adc
mov
add
enter
sbb
ss
sbb
sbb
decl
push
jbe
mov
push
sbb
cmp
push
push
pop
jecxz
or
out
out
jl
jne
inc
adc
out
sahf
outsl
orb
out
into
fucompp
clc
or
repz
sarl
dec
pop
insb
jnp
repz
mov
sahf
out
cmp
icebp
add
or
jns
out
sub
dec
pop
push
jns
out
mov
dec
sahf
in
mov
pop
cmp
les
pusha
mov
add
add
pop
push
add
roll
ffree
ret
and
add
out
out
icebp
mov
cs
push
pop
mov
xchg
test
aam
add
ja
xchg
jl
mov
scas
and
add
jne
mov
hlt
jo
scas
fcos
cmp
pop
ret
xchg
xchg
popa
aam
add
mov
rcr
pop
lea
fildl
fs
ss
nop
xor
pop
leave
mov
sbb
inc
pop
sub
adc
imul
aaa
int
cwtl
and
mov
xor
xor
push
mov
aas
imul
das
sbb
pop
adc
in
adc
or
mov
sti
call
sbb
lret
icebp
lods
push
orl
inc
insl
das
addr16
nop
sub
into
xchg
shll
push
shll
push
push
aaa
sbb
add
cmp
loope
and
mov
fisttpll
push
dec
fisttps
movb
es
shlb
xchg
or
adc
cmc
dec
or
sub
aam
push
pop
jle
jnp
pusha
int3
rolb
push
mov
arpl
jecxz
inc
in
pop
jbe
push
mov
inc
or
add
cmc
cmp
roll
pop
mov
sbb
addl
mov
push
inc
and
enter
adc
fcomps
or
bound
sbb
inc
adc
push
xchg
dec
aad
imul
jp
inc
insl
cmc
sub
push
jne
add
jmp
push
nop
mov
sbb
repnz
nop
das
sbb
rclb
stos
add
ss
sub
sbb
or
dec
jb
iret
fsubrl
shlb
xor
addr16
dec
adc
push
scas
pop
or
dec
cltd
mov
push
xchg
stos
pop
leave
fwait
sub
lock
loope
cmpsb
push
push
add
aaa
stc
adc
add
in
call
mov
mov
leave
xchg
cmp
adc
fcmovb
push
sbb
rcrb
popa
mov
test
movsl
or
in
pop
adc
sbb
push
mov
xchg
adc
jo
xchg
adc
lea
mov
sahf
hlt
ret
std
inc
movl
leave
lock
ret
mov
iret
xor
adc
in
add
shlb
mov
sub
fwait
or
test
adcb
pop
ret
adc
cmpsl
jo
and
ret
icebp
bound
push
popa
xchg
ret
adc
insb
push
push
mov
std
xor
add
adc
lea
sbb
out
adc
pop
push
cld
inc
mov
or
je
shrb
or
sub
push
and
add
scas
mov
fimull
insb
add
or
std
or
in
popa
add
add
test
sbb
sbb
adc
movsl
xchg
lods
cmpsl
xchg
and
add
add
adc
mov
push
add
mov
xchg
mov
cmp
lcall
stc
pop
mov
add
mov
jb
dec
gs
mov
bound
sbb
mov
mov
fidivrl
pop
mov
std
adc
shrl
push
xchg
bound
mov
rcl
or
jns
and
mov
addr16
leave
arpl
dec
add
movl
fwait
xor
push
add
out
add
mov
xor
or
sub
add
pushf
pop
and
push
rolb
add
add
or
push
push
je
xor
lods
lea
mov
sbb
add
pusha
aaa
clc
xor
add
aam
loope
push
push
mov
fs
sub
adc
or
test
repnz
cltd
adcl
mov
push
jg
rcrb
push
scas
icebp
push
sub
addl
mov
sbb
inc
add
or
sub
add
ret
add
and
jno
lods
push
inc
add
lcall
and
xchg
pushf
enter
add
and
sub
add
add
push
xchg
ret
test
add
cld
inc
incl
scas
xorl
add
jo
ds
xchg
cmp
push
sub
ljmp
movsb
xchg
movsl
jns
add
insl
add
repz
insb
insl
cwtl
shll
sbb
add
ss
and
jecxz
cmpb
je
lea
add
scas
pushf
in
cmp
or
sub
adc
roll
in
dec
mov
aam
ret
jne
leave
arpl
sub
xor
pop
nop
push
cmp
adc
sbb
ds
arpl
dec
and
and
dec
pop
fdivrs
pop
je
data16
aas
jge
jmp
test
xchg
rol
sahf
inc
lcall
add
inc
les
push
or
daa
mov
test
cmpsl
icebp
stos
or
cmp
xor
sub
incl
mov
aaa
jne
fldl
dec
jecxz
push
or
fmull
mov
loopne
fildl
sbb
adc
lret
sub
or
and
jp
add
inc
cmp
jb
add
and
andl
push
jge
mov
lret
push
rcl
fs
insb
popa
push
push
xchg
jge
pop
sub
pop
xor
push
pop
in
jmp
xchg
mov
and
mov
push
addb
pop
xchg
enter
aam
test
add
cmp
cmpsl
or
pop
rorl
shll
add
js
std
or
adc
push
loope
aaa
mov
cmp
mov
pop
adc
cmovno
sub
pop
loopne
pmaxub
movl
xchg
jmp
mov
inc
insl
dec
call
mov
or
push
fcmovnbe
sub
nopl
stos
and
nop
inc
stos
sub
add
fisttpll
inc
pop
push
outsb
lock
iret
xor
pop
push
lods
fcoml
inc
iret
filds
mov
xor
or
sub
dec
add
lcall
sbb
adc
rorb
lea
and
inc
inc
test
mov
inc
adc
fmull
orb
cmp
dec
mov
or
shr
and
cli
inc
jl
or
sbb
popa
xchg
out
jle
xor
jle
cmp
je
mov
mov
push
add
std
or
incl
mov
mov
push
pop
cltd
idiv
sti
cmp
push
mov
jmp
shrb
add
mov
xchg
pop
push
add
and
sbb
mov
fcmovnb
push
lock
int3
add
push
mov
dec
push
inc
std
lcall
adc
addr16
stos
pop
enter
call
inc
xchg
dec
in
push
in
in
in
nop
cmpsl
sarb
call
cltd
or
and
lret
cmp
mov
dec
jnp
mov
fsubl
enter
pop
push
aaa
lcall
push
jne
xor
push
dec
shll
sahf
and
mov
mov
in
jmp
pop
push
les
and
test
dec
aam
mov
push
push
push
rorl
inc
mov
and
pushl
test
mov
add
ljmp
popa
mov
arpl
mov
xchg
mov
or
or
je
int
dec
sub
aam
outsb
adc
mov
jb
lcall
aam
movsb
out
push
movntq
xchg
movsl
xor
out
lock
pushf
sub
xchg
orb
or
and
in
push
or
adc
sbb
lret
mov
sub
add
cmp
adc
inc
xor
jb
mov
sbb
and
rcl
xchg
xlat
outsb
push
pop
divb
push
jns
mov
push
push
pusha
pop
push
jle
imul
in
cmp
adc
and
inc
xor
sarl
sbb
jae
out
cltd
fmul
inc
or
dec
imul
in
nop
push
fsubrs
fs
mov
adc
cld
movsb
mov
push
cmpsl
stc
in
push
and
xchg
xchg
out
pusha
shlb
in
push
and
add
pop
xor
test
adc
callw
and
and
add
lret
in
mov
mov
es
cmp
daa
cwtl
adc
xor
push
jmp
sub
test
push
dec
add
xor
xchg
sbb
push
dec
jb
pusha
cwtl
enter
dec
nop
pop
push
sbb
sbb
push
andb
mov
pop
sbb
js
out
inc
cmp
leave
mov
push
fldcw
xor
fiaddl
xor
call
aaa
repnz
sbb
sub
sbb
add
sub
and
imul
sub
ret
cmp
push
add
dec
popf
idivb
aaa
clc
push
add
pop
mov
xor
ret
cmp
sub
enter
jge
push
jne
add
and
fsts
push
pop
cltd
mov
out
loop
jno
or
movsb
movl
lds
ret
add
add
adc
inc
hlt
loope
add
push
mov
pop
test
jge
sbb
sbb
push
sbb
pop
sub
in
int3
push
rorb
xor
pusha
add
repz
shl
or
adc
int
dec
add
or
add
iret
fs
das
pop
pop
add
inc
xchg
int3
sbb
jl
sub
in
in
pop
aad
dec
add
or
repnz
xchg
aam
push
xchg
or
dec
mov
dec
cmp
push
or
jo
loopne
or
gs
sbb
inc
mov
stos
sbb
lds
mov
pop
pop
cmp
movsb
add
sti
jle
xor
xor
daa
test
ret
ud0
sub
adc
mov
xorb
rolb
mov
shr
xor
aaa
sub
and
cmpb
adc
dec
sub
mov
pop
shrb
test
xchg
mov
js
jg
pop
add
push
and
pop
rclb
adc
nop
mov
dec
movsb
jo
jo
bsf
push
cmp
inc
aam
mov
fsubrs
sub
lcall
inc
ss
dec
imul
push
fldenv
popa
pop
sarb
or
xor
dec
mov
add
orl
mov
adc
sbb
notl
inc
and
and
aam
hlt
fs
xchg
mov
pop
bnd
adc
ds
push
sub
test
frstor
je
add
pop
cmp
add
or
dec
xor
mov
push
sub
inc
mov
add
cmp
fistpll
mov
cmp
jmp
add
push
movsl
push
pmovmskb
arpl
out
and
xor
add
and
addr16
les
fsubl
jmp
push
mov
xor
jle
sti
jge
shrb
mov
cmp
ja
dec
push
pop
jno
mov
xor
aaa
pop
cmp
adc
cli
fcoml
movsbl
and
add
loopne
add
mov
sbb
push
movl
pop
lods
push
adc
mov
test
loopne
sub
sti
lcall
push
rcrl
jmp
or
imul
dec
jle
fadds
cmp
sub
in
adc
outsl
adc
ret
xorl
cltd
xchg
gs
pop
xchg
cmp
jecxz
movsb
and
inc
fs
cmp
mov
adc
jge
cmp
add
movsb
add
enter
add
add
jne
or
mov
je
cmp
sbb
cmp
cld
jl
cmp
les
sti
jge
sub
add
add
scas
movsl
jbe
add
adc
mov
inc
addr16
in
stos
mov
lret
push
jae
mov
fsubrs
push
adc
inc
xchg
and
xchg
lcall
add
in
xchg
rorb
xor
pop
and
adc
shlb
and
mov
aam
pop
fucomip
adc
adc
push
cmpb
fsub
cmp
cmp
hlt
inc
nop
out
rorl
mov
mov
and
roll
cld
mov
aad
rcr
adc
xchg
cmp
or
push
mov
rorl
add
dec
push
adcl
cmp
add
nop
mov
mov
mov
outsl
loope
inc
dec
push
add
sbb
mov
rcrb
je
cmp
inc
jp
add
pop
je
pop
xchg
sete
adc
sub
pop
xorb
in
add
in
adc
adc
andb
rolb
jns
test
js
popa
fdivrs
ret
dec
add
xchg
push
lahf
and
cmp
and
sub
jne
ja
add
mov
aad
movsl
in
jmp
daa
jmp
int
cs
out
mov
xchg
cmp
adcl
or
mov
shll
aam
cmp
sub
pop
push
cmp
inc
cmp
in
xchg
out
cmp
es
mov
cmp
adc
cmp
sub
add
push
add
xor
sub
jp
jne
and
add
and
xchg
inc
mov
inc
enter
sub
cmp
mov
movhps
xchg
adc
arpl
xor
cmpsl
jno
out
jns
dec
push
es
jle
lock
adc
mov
les
out
in
cmp
jne
inc
jmp
adc
in
pop
rcrl
cmp
sarb
xchg
sub
out
push
push
xor
inc
add
mov
and
adc
mov
add
popf
frstor
lods
and
insb
insb
pop
xor
aam
add
add
es
push
or
test
out
aad
inc
add
jo
sub
add
addr16
add
push
cwtl
js
cmp
clc
sbb
inc
pop
movsb
mov
inc
nop
push
std
into
add
adc
out
fists
dec
xchg
or
loopne
inc
mov
cmpsl
ret
call
data16
movsb
cmp
inc
add
mov
and
test
xchg
jg
xchg
inc
pusha
in
adc
cwtl
inc
pop
sbb
or
cmp
test
shll
pop
dec
gs
xorb
inc
cmp
add
and
js
roll
or
pop
adc
jno
or
or
sub
inc
mov
xchg
add
adc
test
dec
push
sbb
scas
sub
xchg
lock
div
out
push
dec
push
add
cmp
dec
data16
xor
rclb
adc
inc
mov
rcrb
pop
inc
iret
adc
xor
push
push
or
aad
adc
fstpl
push
sub
mov
inc
push
lods
stc
xchg
jo
mov
mov
out
test
loopne
jae
adc
lods
movsl
xor
sarl
add
nop
nop
mov
popf
push
cli
aaa
mov
add
push
inc
adc
cmpsb
inc
lcall
enter
adc
pop
mov
pop
cmp
data16
popa
stos
push
or
loop
add
dec
mov
insl
jne
or
push
mov
or
or
fidivrs
shl
add
fs
out
pop
shrb
cmp
sub
sbb
sub
xchg
dec
jecxz
xor
push
cld
mov
sbb
sbb
sbb
add
jb
fidivrl
test
loope
rclb
sarb
imul
loopne
clc
or
in
inc
je
cmp
jne
mov
dec
pop
sbb
movsl
in
pusha
ljmp
mov
push
or
xchg
test
in
mov
adc
cmc
push
imul
mov
pop
mov
add
push
cltd
jb
or
inc
popl
sub
ret
adc
movb
ret
out
add
add
push
cmp
jg
test
adc
push
or
dec
fcmovb
xchg
xor
mov
inc
dec
jge
or
pop
mov
addb
xor
cmp
jae
mov
push
jecxz
mov
dec
dec
push
mov
jmp
js
xor
dec
or
mov
jne
das
jne
sub
add
cli
push
fsubr
adc
fisubs
cmpsl
pop
xorl
pop
adc
hlt
leave
xchg
xor
jle
ss
xchg
test
lahf
fldcw
push
or
push
loope
add
outsb
ret
ret
pop
leave
ret
push
jb
and
inc
mov
sbb
leave
push
movsb
lea
add
rclb
mov
or
mov
mov
popf
cmp
outsl
imul
insl
push
lea
xor
lahf
sbb
pop
push
pop
add
push
and
inc
or
add
add
pop
sub
mov
rcll
lds
lock
pop
push
imul
sub
inc
mov
inc
cmp
xor
in
xorl
dec
xchg
add
lcall
cmp
jecxz
insl
pusha
mov
fidivs
jo
sbb
dec
inc
aam
add
xor
add
pop
test
mov
mov
pop
or
or
xchg
dec
add
lods
xor
push
and
sbb
lcall
xor
xlat
subb
test
cmpeqps
icebp
pop
inc
test
lods
sbb
aad
jg
stc
je
pop
or
push
movsb
pop
test
enter
and
mov
and
or
shrl
imul
shr
xchg
test
cmp
repnz
cmp
push
inc
dec
xchg
add
fiaddl
adc
orl
jo
orb
dec
or
popf
iret
mov
add
andb
xchg
sbb
inc
cmp
add
js
push
sub
outsl
nop
adc
pop
add
out
push
push
orl
lahf
lods
fimuls
mov
mov
push
movsl
cltd
add
xchg
je
push
push
scas
je
or
lock
dec
push
mov
xchg
int3
rcrl
push
movsb
or
sub
adc
sar
popf
sar
and
add
xor
mov
or
pusha
mov
test
jmp
pusha
test
mov
inc
adc
jp
sub
add
inc
push
inc
mov
and
rorl
jnp
xchg
pop
add
iret
xchg
dec
xlat
push
inc
or
call
push
push
shlb
dec
sbb
lret
adcb
sbb
xchg
inc
lods
sub
and
mov
and
mov
aas
xchg
jns
mov
or
xchg
add
mov
mov
pushf
push
jge
push
sub
pop
inc
repz
sbb
and
jbe
adc
sub
xchg
and
cmovo
or
or
cmp
dec
repnz
push
push
jb
push
adc
out
mov
fwait
add
dec
ret
push
shll
pop
or
adc
test
add
adc
xchg
jmp
pop
xchg
pop
test
adc
outsb
push
sbb
mov
sbb
mov
call
aam
popa
cmp
pop
ret
push
arpl
mov
clc
jl
add
push
sub
mov
and
pop
add
bound
or
std
sbb
cmp
sbb
dec
inc
mov
sbb
or
in
add
mov
or
dec
inc
add
xlat
rorb
pop
push
inc
sbb
sub
adc
mov
pusha
push
or
xchg
mov
mov
pusha
sub
clc
xor
adcl
insb
sbb
mov
pop
xchg
pop
loopne
je
and
jo
sbb
push
adc
or
pop
movsb
rcll
cmp
daa
push
imul
loopne
test
jmp
sub
add
push
cmp
mov
mov
test
push
sbb
push
xchg
fnstsw
sbb
mov
sub
and
adc
fs
mov
fdivrp
mov
ffree
test
and
mov
outsl
mov
add
imul
outsb
in
xor
and
popa
jb
push
xchg
and
and
adc
lds
mov
test
mov
je
pop
and
aaa
scas
shr
data16
push
mov
dec
and
push
pop
aad
cmc
xorb
lds
add
mov
mov
pop
add
aaa
cs
aad
xlat
aaa
test
fdiv
flds
or
sbb
push
or
push
xchg
shlb
jne
push
add
cmp
in
push
adc
sub
dec
je
push
mov
in
sbb
add
sub
and
sbb
pop
add
dec
cmp
add
lea
add
data16
adc
sbb
popf
icebp
rcl
sub
repnz
pop
xlat
push
ret
fidivrs
push
mov
add
push
movsb
inc
andb
es
add
dec
xor
mov
mov
sub
push
push
add
arpl
or
add
or
sbb
xchg
adc
push
lods
xchg
mov
je
dec
dec
dec
and
adc
orb
jb
add
or
adcl
add
inc
pop
push
add
lahf
je
jmp
adc
lods
insb
dec
pop
and
mov
daa
stos
rolb
cmp
and
dec
mov
add
sbb
or
mov
orb
add
mov
dec
ret
lock
xor
test
jbe
pop
ret
xchg
dec
push
cmp
jle
pop
or
cmp
mov
xor
ret
andl
pop
xchg
sbb
and
mov
enter
js
int3
das
lret
sbb
add
mov
and
loope
add
pop
imul
shrl
push
dec
add
leave
add
xchg
inc
cld
sbb
pop
shr
sub
lock
incl
icebp
or
xor
sbb
mov
repz
sbb
sub
cmpsb
test
sbb
gs
cmp
pop
mov
sbbl
cmpb
push
movsb
rol
push
or
fldl
pop
ret
sub
lods
sub
adc
xlat
adc
sbb
scas
sbb
sub
or
fimuls
dec
stos
or
fdivrs
pop
fdivrl
jmp
xor
aaa
push
or
pop
rorl
out
cmpsb
in
in
mov
push
and
popa
xchg
lea
into
into
jmp
fdivrl
adc
pop
mov
movsl
pop
dec
js
add
pop
psubw
out
xchg
andb
ja
aam
sub
cmp
scas
sub
dec
cmp
stc
pop
xabort
rolb
pushw
movl
call
pop
loopne
adc
xor
jns
inc
push
or
and
into
pop
in
inc
cmp
push
outsb
clc
clc
jb
jmp
pop
sub
repz
add
push
aad
xor
or
rol
dec
mov
inc
push
test
mov
ljmp
mov
ret
fcoml
mov
jb
inc
add
and
xchg
mov
nop
cltd
out
dec
dec
push
iret
pop
sbb
and
pop
xchg
cmc
jle
adc
sbb
js
sub
xorb
daa
xor
pop
dec
mov
add
test
fiaddl
jns
xchg
jl
es
dec
xor
pop
jb
ret
sub
adc
add
or
jge
push
fmull
or
mov
xchg
pop
pushf
adc
xor
shl
inc
adc
dec
std
test
sub
pop
inc
jne
aam
in
adc
add
push
es
mov
pop
adc
je
cld
and
add
insl
mov
pop
adc
and
idivb
or
xor
cmp
cmp
into
inc
dec
ret
push
dec
mov
pop
int3
mov
jbe
add
mov
sbb
xchg
cmp
add
add
xor
test
test
xchg
cmp
std
sub
pop
or
or
in
sarb
sub
sar
fbstp
loope
loopne
ret
push
xchg
std
dec
mov
cmpsb
fidivrs
movsb
adc
cmpl
jne
jae
sbb
stc
inc
dec
or
lret
or
negl
lods
add
pop
push
xchg
mov
push
mov
iret
iret
or
cmp
lock
inc
lea
mov
lahf
xor
lcall
push
push
test
popf
cmp
dec
fsub
aas
test
inc
jne
cmp
cld
mov
cmpl
lahf
subb
pushl
pop
inc
jmp
popa
jmp
xor
js
adc
adcl
flds
ret
mov
mov
mov
arpl
mov
sub
cs
xor
cmp
and
add
and
push
les
sub
sbb
shlb
inc
cwtl
mov
out
faddl
fsubs
xchg
mov
sbb
add
fadd
adc
jno
es
rep
or
and
or
dec
insb
xor
or
mov
jmp
push
ret
sahf
inc
and
push
popa
mov
mov
dec
fcoms
push
test
test
or
in
jno
out
loopne
pop
or
and
pushf
jecxz
jnp
sub
cltd
dec
adc
ja
insl
or
addr16
jo
mov
push
or
mov
dec
ret
les
sub
out
call
mov
jne
inc
dec
push
sub
loopne
js
sbb
xor
pusha
pop
xor
loope
test
pushf
inc
jb
adc
or
xchg
fisttps
jo
or
scas
cmpsb
push
jp
mov
arpl
scas
sbb
imul
push
adc
cmp
and
jb
xor
cmp
cmp
push
call
xor
adc
push
adc
lcall
sub
inc
pushl
fisttpl
adc
add
pop
sbb
dec
inc
loopne
ror
push
cmp
dec
movsl
sbb
mov
outsl
mov
iret
push
xchg
pop
popa
inc
or
sub
sbb
mov
push
inc
or
or
cli
jbe
popf
or
lahf
lock
imul
sbb
or
test
add
aam
les
sbb
decl
movb
cmp
push
cmpb
iret
and
enter
rorb
shll
push
ss
mov
mov
fisubl
add
add
test
popa
cwtl
test
inc
or
sub
adc
mov
outsl
mov
test
sub
or
aas
push
and
sahf
adc
cs
or
movsl
push
test
ljmp
mov
out
push
cmpsl
popf
jl
pop
faddl
pop
inc
and
inc
popa
xchg
mov
xor
xchg
push
ja
adc
cmp
or
call
cmp
ds
xor
and
js
xchg
test
adc
roll
push
xor
aad
or
or
add
repnz
xchg
pusha
leave
or
mov
sbb
ret
xchg
les
pop
setbe
fdivl
or
call
in
dec
fistpl
xor
das
movl
addb
mov
sbb
add
or
lret
inc
cmp
in
lods
jg
int3
add
loop
and
add
movsl
and
push
mov
mov
ret
or
xor
mov
clc
push
and
and
add
push
cmp
add
mov
dec
fcomip
jne
leave
cmp
or
adc
movsl
and
sub
dec
inc
popa
adc
push
jecxz
adc
mov
push
stos
out
mov
inc
adc
mov
cmpb
lret
dec
pusha
shl
dec
pop
adc
sbb
push
xchg
sbb
nop
xchg
and
lret
mov
adc
xor
sarb
shr
shl
add
adc
out
rcr
sbb
adc
sub
mov
daa
mov
lea
shlb
dec
aam
dec
dec
xchg
or
sbb
fwait
push
push
pop
das
jp
out
icebp
and
addl
es
mov
pushf
or
sbb
test
aam
les
loopew
and
fxch
push
and
lea
add
idivb
pop
out
inc
mov
push
or
push
or
pop
lahf
aam
call
adc
sbb
pop
sti
sub
push
pop
fs
adc
inc
jbe
lret
icebp
rep
popa
std
ss
and
enter
fmul
dec
test
fdivrs
data16
in
inc
xchg
xchg
sub
jecxz
aad
pop
sarl
test
rolb
scas
pusha
rorl
adc
cli
mov
dec
loop
faddl
sbb
aam
and
push
jmp
popa
das
repz
cmpl
pusha
cltd
mov
sarb
loopne
lea
push
insb
jo
lock
inc
je
scas
add
pop
ret
jns
push
pusha
xchg
mov
dec
cli
jge
jmp
ja
je
popa
jo
jp
loopne
int3
xchg
mov
or
sbb
lods
push
adc
xor
test
rorl
and
fistpll
mov
xor
mov
or
sub
jle
mov
jmp
dec
add
jnp
lahf
mov
mov
xchg
div
mov
push
aaa
jmp
xorb
sbb
sub
fldl
shll
addb
pushf
aam
add
insb
jle
adc
adcl
icebp
sub
mov
call
cmp
adc
fstpl
push
es
dec
iret
add
mov
inc
sbb
cmp
rcrb
clc
dec
leave
add
inc
dec
mov
nop
mov
loopne
mov
mov
and
movsl
push
jmp
lcall
dec
popa
mov
stc
arpl
loope
adc
ljmp
jmp
dec
inc
mov
mov
sbb
in
dec
gs
clc
or
cmp
lods
in
adc
hlt
pop
pop
mov
inc
add
mov
push
cld
jmp
sub
mov
int
push
add
fwait
add
sahf
sub
test
mov
jmp
sbb
js
sbb
inc
aaa
sarl
jge
sti
outsl
cmpl
push
hlt
xor
jmp
nop
mov
sbb
fdivrl
cmp
adc
int
out
adc
lock
mov
jge
fnstcw
cld
ljmp
cmp
sub
add
into
jmp
mov
ror
and
loop
nop
inc
aad
mov
inc
pop
cld
pop
add
sahf
data16
and
mov
aas
or
sub
arpl
ss
xchg
shlb
cmpb
int
inc
xchg
repnz
push
sub
iret
test
mov
inc
inc
pop
dec
adc
xchg
mov
mov
push
adc
push
push
push
call
cmp
inc
push
xor
clc
shrl
fmuls
pushf
divb
cmpsb
mov
pop
imul
mov
rolb
imul
rolb
cmp
add
fisubrl
clc
or
inc
outsb
add
lahf
fildll
hlt
mov
push
adc
fsubr
push
add
mov
es
les
xorb
mov
mov
cmp
sub
cmpl
aad
mov
cmp
inc
mov
addl
jp
sub
sbb
pop
movsl
rcrb
and
lock
movsb
add
lods
ss
jns
lods
dec
push
inc
aas
dec
xchg
call
addb
outsb
movsl
loope
repnz
sub
xchg
int3
mov
call
and
adc
mov
in
mov
jne
xor
testb
mov
dec
fcomps
dec
cmc
jecxz
cs
or
in
push
imulb
shl
push
aad
fmul
movsl
movsl
idivl
dec
jle
sub
sub
sarb
lock
movzwl
inc
mov
inc
call
in
stc
lock
mov
cwtl
imul
sbb
imul
into
sub
adc
jnp
or
sarl
xchg
jle
jns
pop
mov
lret
sub
pop
jbe
insb
fidivrl
mov
pop
test
les
rorl
fistpl
push
cmp
in
daa
in
add
add
movsb
add
fdivrs
stos
int
scas
inc
cmp
or
add
repnz
lods
pop
ret
insl
loop
hlt
or
cmp
and
xor
mov
stc
inc
cmp
stc
sbb
int3
std
mov
hlt
push
loop
repnz
das
in
popa
cmpsb
dec
add
js
or
pop
pop
mov
aaa
mov
movsl
movsw
push
push
gs
movsb
mov
cli
jg
mov
mov
adc
ljmp
or
das
out
mov
cmp
jle
movb
cmpb
adc
imul
ja
jg
push
and
lds
dec
cmp
movsbl
xor
mov
pusha
sub
ss
push
push
in
cmpsb
dec
jnp
adc
and
pop
es
stc
push
cld
je
xchg
sub
cmp
and
mov
xchg
push
divb
pop
inc
in
xchg
je
into
pop
mov
lcall
ljmp
and
jle
or
mov
fcoms
stos
dec
or
fs
mov
and
or
push
xchg
pop
adc
sbb
call
inc
lahf
xor
cmp
les
je,pn
add
mov
inc
xorl
insb
roll
cmp
push
push
lock
stos
fdivp
inc
loope
or
ficompl
clc
das
mov
loop
mov
sbb
jle
xchg
daa
in
and
pop
push
add
daa
daa
daa
daa
add
push
pop
daa
daa
or
or
jnp
or
fwait
fwait
fwait
fwait
jbe
jmp
or
por
fwait
bound
jmp
adc
pop
adc
push
adc
fwait
fwait
fwait
fwait
dec
adc
dec
adc
aas
pop
jmp
fwait
fwait
fwait
cmp
jmp
sbb
xor
jmp
sbb
fwait
fwait
fwait
fwait
es
and
pop
pop
jmp
fwait
fwait
fwait
adc
jmp
and
or
jmp
and
push
push
stos
xchg
fimull
push
cltd
adc
loop
mov
lcall
mov
paddb
scas
mov
sahf
out
mov
out
sahf
out
call
repz
cld
add
cmp
repz
pop
and
cs
repz
cmp
cmp
dec
push
push
pop
pusha
jg
fbld
push
pop
or
and
or
or
push
movups
adc
adc
push
pop
adc
sbb
sbb
push
pop
and
and
aas
sub
clc
inc
addb
mov
jge
xor
shll
xor
jmp
adc
xor
dec
pop
pop
add
mov
mov
shlb
and
lock
das
lret
fistl
push
and
xlat
fwait
adc
neg
nop
sahf
aaa
adc
cld
rcll
adc
sub
fwait
add
inc
dec
cmp
xchg
lret
sbb
sub
in
fcoms
dec
xor
push
cmp
insb
inc
and
pop
jo
mov
or
xchg
aam
push
lret
lods
mov
adc
push
jo
aad
pop
cmp
bound
pop
push
enter
add
push
iret
mov
xor
sub
lret
xor
pop
mov
xor
mov
add
add
add
push
inc
pop
jmp
pop
sub
mov
call
jns
rorb
jnp
or
mov
bound
adcb
mov
adc
sbb
std
sbb
popa
insl
std
js
mov
das
add
adc
cmc
adc
call
push
mov
sbb
pushl
xchg
shlb
adc
xchg
push
je
sub
pop
ss
xor
xchg
test
push
jne
or
or
push
jns
cmpsl
pop
push
jne
xchg
hlt
jge
push
push
pop
loopne
or
adc
mov
push
mov
pushf
fdivrp
jmp
mov
adc
jne
and
scas
jne
push
iret
add
jno
aas
clc
or
std
add
mov
sub
movl
in
sbb
push
mov
pop
sub
or
jge
xchg
push
adc
push
push
loope
rorb
mov
je
dec
repnz
sbbb
movsb
xor
lock
adc
mov
je
xchg
clc
cs
je
mov
xor
or
adc
sarl
and
icebp
inc
or
xchg
pop
sbbb
mov
rcl
clc
orb
loop
loop
ret
clc
mov
pop
xchg
xor
lret
inc
dec
mov
btc
mov
adc
adc
dec
add
dec
negl
adc
push
popl
fwait
dec
ds
mov
int3
loope
xchg
push
xchg
add
xchg
sub
xor
or
inc
test
andl
or
jl
subb
dec
mov
pushf
jno
mov
or
aam
push
adc
pop
in
in
or
push
test
loope
in
aad
add
jl
movsb
jo
sbb
mov
add
mov
jmp
je
mov
movsb
mov
rolb
cmc
dec
push
add
dec
push
cmc
add
or
loopne
inc
data16
arpl
mov
mov
or
cmpsb
jge
push
add
popf
fadds
mov
imul
popa
loop
sbb
sub
xchg
or
js
movsl
cld
movsl
aam
cwtl
add
push
rorl
xorl
mov
mov
inc
mov
inc
scas
push
add
pushf
dec
dec
push
sub
fdivl
loope
sarl
push
jmp
pop
icebp
jne
push
add
push
add
orl
enter
movsl
mov
test
sub
and
in
addb
enter
in
or
add
add
subb
je
into
jp
dec
rclb
jmp
cld
jmp
add
mov
xchg
push
cmpsl
or
pop
push
inc
iret
sahf
add
xor
sbb
add
adc
inc
xchg
dec
shl
ficomps
int3
mov
subb
lock
push
adc
int
ret
adc
and
enter
or
or
notl
inc
add
sti
adc
sbb
int3
pop
inc
inc
sbb
dec
add
inc
or
mov
sbb
dec
shrb
push
shrb
pusha
pop
pop
push
popa
inc
scas
push
pop
push
inc
popf
add
push
in
les
pop
dec
shlb
aaa
test
mov
scas
inc
bnd
adc
or
aam
ror
lret
jge
push
inc
iret
mov
or
aam
add
inc
and
or
jo
mov
mov
push
in
adc
scas
sub
push
test
xchg
jbe
aam
xlat
mov
sbb
pop
lcall
push
loopne
lret
call
in
cmpsb
imull
mov
repz
rolb
cld
loope
sub
sub
sub
inc
loope
daa
faddl
aaa
aam
je
dec
repz
add
add
sbb
or
test
fsubrl
mov
test
xchg
sbb
cmpsl
sbb
lods
add
je
add
pushl
mov
pop
mov
repnz
add
daa
or
bound
lea
adc
sbb
lock
push
push
insb
add
das
loopne
cmp
mov
lahf
xor
mov
test
dec
or
add
sbb
jne
daa
cmp
pop
dec
mov
inc
add
mov
je
xchg
add
cmp
loopne
push
xchg
mov
cmpsb
push
jae
leave
stos
loop
xchg
out
inc
in
test
add
dec
mov
xor
adc
sbb
aaa
sub
nop
dec
pop
sub
das
inc
inc
add
enter
call
cli
iret
mov
jg
hlt
movaps
pop
jne
pushf
and
or
je
loope
ja
adc
cmp
jl
movsb
hlt
mov
dec
xchg
push
xor
mov
push
xor
xor
push
mov
std
xchg
das
jns
insl
nop
jge
in
or
sbb
fs
in
ds
push
sti
popa
mov
xor
inc
cld
and
and
push
add
or
shr
push
cmp
jne
cld
in
push
cmp
fisubrs
test
scas
pop
mov
mov
sub
cwtl
mov
stc
jg
mov
in
lcall
xchg
sbb
xor
sbb
fisubs
test
push
ret
int
loopne
xor
ret
lods
mov
pop
mov
or
es
test
loope
cmpsl
sarl
outsl
add
inc
adc
loope
push
adc
push
add
jmp
loope
push
push
icebp
or
xchg
pusha
or
jb
faddl
aas
xor
pop
and
push
push
mov
imul
push
push
enter
and
dec
leave
jae
or
rcrb
leave
adcl
and
jae
or
push
mov
inc
pusha
cmpb
outsl
lods
sbb
movb
mov
adc
lods
or
mov
add
cmp
jle
addb
mov
push
adc
pop
int
pop
dec
and
lea
lea
cmp
jae
or
ficoms
sbb
imul
xor
or
repnz
jge
decl
popa
pop
sub
movsbl
mov
cld
bound
push
inc
cmp
jbe
xchg
mov
inc
rolb
arpl
sub
push
push
sub
push
fisubrl
sub
or
ds
inc
add
jecxz
mov
aam
inc
jns
pop
xor
cmp
inc
frstor
inc
dec
aas
dec
aaa
dec
in
adc
pop
sbb
xor
pop
enter
mov
inc
sbb
push
test
pop
fs
js
jmp
pop
addb
mov
xchg
cwtl
sbb
dec
pushf
inc
fsts
sbbb
punpckhbw
pop
pop
xchg
xorl
inc
decl
add
jle
cmpb
leave
add
add
pop
xor
jbe
adc
enter
adc
inc
dec
negb
jl
sub
cld
arpl
int3
lea
add
or
lcall
imul
ret
xor
inc
mov
jns
cmp
jmp
pop
sbb
sti
lods
sub
inc
and
fdivs
pop
pop
jno
cmpsb
jo
sbb
jl
jmp
out
push
mov
xchg
sbb
dec
loop
dec
mov
sti
and
push
test
pushf
and
and
add
dec
add
jle
pop
jmp
rcrl
ss
in
shll
inc
xchg
sub
lea
pop
mov
sub
ss
je
js
addb
mov
sbb
lcall
imul
sub
int3
ficoml
test
test
js
jl
add
and
ljmp
lea
mov
sarl
xlat
jle
lcall
pop
lock
inc
add
mov
xchg
mov
icebp
imul
sub
inc
hlt
mov
incb
pop
add
pop
es
ds
aam
or
mov
xchg
adc
adc
and
add
pop
loop
mov
pop
inc
sti
push
pop
push
loope
repz
push
lods
dec
push
sar
mov
fistpll
pop
pop
cmp
and
jo
pop
cs
adc
bound
movsb
xchg
loope
add
out
lock
add
das
and
aaa
aaa
ret
add
jo
lods
aad
mov
loope
test
or
sub
sbb
shlb
popa
loopne
jns
jge
jb
inc
mov
scas
sub
rorl
cmp
jns
lods
add
add
gs
jge
jae
or
pop
test
das
jmp
in
repnz
sbb
addb
test
xchg
clc
test
push
push
dec
js
cltd
cmp
or
adc
add
mov
xchg
mov
popf
mov
adc
popf
lods
inc
xchg
inc
movsb
mov
adc
mov
or
daa
dec
test
aaa
xor
push
rcll
sbb
jno
je
je
xor
adcl
popa
repz
decb
loope
enter
push
jmp
add
fiadds
andb
xlat
jmp
pop
cmpxchg
inc
xor
test
mov
xor
icebp
dec
cmp
cmpl
dec
push
mov
cld
mov
dec
add
dec
or
sub
add
pop
fsts
adc
out
add
movsb
bound
add
mov
sbb
loope
scas
cltd
or
frstor
adc
jne
popf
add
scas
addb
int
pop
xchg
add
adc
pop
push
lods
xchg
outsl
xchg
push
add
mov
aaa
aad
rcll
mov
jno
add
mov
pushl
push
inc
xchg
and
add
outsl
xor
sbb
push
pop
inc
insb
and
sub
push
jl
dec
pusha
push
fstpt
sarl
lods
and
cltd
jo
bound
mov
sub
pop
sub
pusha
int
and
aad
add
push
in
push
jmp
pop
cmpsb
push
xchg
outsb
and
push
testl
lret
sti
and
push
dec
mov
mov
mov
cmpsl
adc
push
inc
cmp
cmp
pop
mov
sti
cmp
lcall
cmp
aam
jmp
cwtl
push
adc
jbe
ljmp
jle
cwtl
jbe
push
cmp
fwait
mov
mov
das
sub
pop
pusha
movsb
cmp
jl
add
mov
popa
daa
or
mov
inc
lock
xor
pop
test
lea
push
jg
mov
sub
cwtl
rcr
add
setl
lea
scas
pop
adc
daa
mov
push
movsb
mov
pop
int
mov
lahf
shlb
sbb
xor
xchg
push
jle
popa
inc
pop
cmp
mov
mov
lahf
mov
jmp
pop
test
jmp
inc
ret
jmp
mov
mov
mov
xor
mov
pop
sbb
add
pop
jne
inc
xchg
nop
add
rcrb
pop
dec
subb
mov
dec
adc
push
out
push
push
sbb
int
sysenter
push
xor
sarl
push
push
lods
daa
xchg
cmp
pop
loopne
pop
mov
pop
mov
cwtl
dec
popf
in
push
and
jbe
subl
testl
into
xor
xor
out
sbb
adc
sarb
lock
fisttpl
adcl
out
pop
cs
jmp
repnz
scas
sbb
aas
pusha
xchg
addl
push
adc
inc
push
and
pushf
and
pushf
fs
mov
das
push
rorl
add
faddl
fstl
fldz
fcomp
loopne
adc
fnstsw
mov
pushf
fnsave
pop
fsubr
pop
faddp
cmp
mov
adc
fidivrl
jle
adc
push
dec
ret
clc
cmp
cmpsl
movsl
push
add
xchg
inc
push
mov
xchg
or
hlt
pop
inc
xchg
nop
hlt
jl
cmp
xchg
push
ret
push
lea
xor
mov
jmp
loop
add
lods
sbb
add
sbb
mov
push
icebp
das
fwait
pop
pop
xchg
fdivl
shlb
add
loopne
xor
xor
andb
jg
subl
fldl
ret
push
inc
cs
and
mov
dec
mov
lea
ja
xor
je
shll
mov
aam
adc
popa
add
test
dec
inc
mov
or
adc
or
inc
inc
mov
ja
push
leave
js
fldl
ficoms
das
int3
dec
jg
test
or
pop
lds
or
in
lahf
out
shl
fimuls
enter
cli
fsubrl
loopne
rorb
push
ljmp
adc
pop
pop
pop
cli
repz
push
cli
xchg
jle
arpl
out
mov
push
mov
inc
adc
inc
push
sbbl
cmp
pop
mov
inc
pop
and
sbb
push
ss
roll
xor
sbb
adc
push
enter
and
push
aam
test
jge
xchg
insl
push
les
dec
adc
mov
addr16
xchg
xlat
pop
mov
xor
mov
dec
xchg
lods
fcomps
add
push
cltd
and
or
cmpsl
inc
inc
insl
rolb
loope
mov
imul
loop
and
xchg
mov
jecxz
jge
sti
push
ss
and
fistl
mov
inc
orl
add
aaa
mov
dec
jb
or
aaa
add
popa
in
test
push
push
fdivrl
inc
pop
mov
sbb
lahf
lret
add
push
or
and
pop
jb
adc
xchg
out
or
push
or
pop
pop
lods
mov
or
lods
adc
insb
push
stos
rolb
sbb
loope
rorb
stc
in
movsb
jo
xor
cmpsb
fcmovb
cmp
das
or
mov
int3
jo
or
xor
jno
or
pop
pop
and
mov
cmp
jmp
push
out
dec
mov
repnz
jae
cmp
and
lock
xchg
pop
push
inc
loopne
or
pop
add
into
pop
dec
aaa
xchg
xchg
cwtl
movhps
sbb
push
inc
or
pusha
or
mov
pop
push
ficoms
pop
push
push
and
push
pop
push
mov
test
mov
pop
movq
cmp
inc
fs
push
cwtl
out
xor
mov
je
cmp
push
andb
rcrl
add
fldl
sahf
fstpl
ficomps
loope
sbb
movsb
pop
inc
or
fs
add
aam
cmp
call
jl
mov
out
je
xor
push
jmp
adc
les
or
push
shrl
cmp
imul
add
fisttps
cmp
dec
fnstcw
lods
inc
adc
inc
lret
add
push
inc
or
or
ss
or
jae
add
lds
test
and
jg
shr
es
push
or
inc
cli
mov
jb
or
scas
jnp
jg
and
mov
lea
outsb
popa
pop
jbe
vunpckhps
push
xor
pop
out
xchg
push
push
mov
inc
add
xchg
cmp
jbe
mov
pop
push
push
cmp
push
push
dec
adc
inc
outsl
push
pop
mov
movsl
add
shr
test
mov
int
mov
loope
add
or
in
repz
sbb
stc
inc
sbb
add
push
pop
mov
push
xchg
and
js
xor
jle
loop
pop
mov
inc
xchg
push
xchg
dec
iret
call
lods
sub
or
outsl
cmp
lcall
push
dec
push
xchg
dec
insb
sub
xchg
cmp
popf
pushl
iret
sbb
sarb
popa
inc
out
shlb
jl
out
sbb
xchg
aad
mov
pop
fldln2
decl
inc
stos
mov
cs
mov
push
call
push
and
mov
push
and
lock
imul
cmp
xor
dec
lret
and
leave
test
or
xchg
or
dec
pop
sbb
push
aaa
add
add
fists
iret
lods
push
and
ret
push
addl
cmpsb
xor
enter
push
mov
pop
pop
mov
xchg
ja
push
sbb
fmuls
push
dec
test
push
je
mov
inc
sbb
pop
xchg
or
or
repnz
or
push
and
pop
push
aad
push
mov
mov
ror
test
inc
add
jns
push
xchg
pop
int
loope
add
imul
sbb
add
add
cmc
mov
pop
pop
and
call
dec
or
pop
mov
jo
jb
or
add
inc
loope
repz
cmp
test
test
divl
push
sub
mov
addl
sbb
mov
inc
jbe
push
push
sbb
xor
sub
fidivrl
mov
xor
mov
mov
rcrb
push
ss
or
or
mov
jge
push
jbe
pop
or
sub
and
sar
and
mov
sub
fisubrl
xchg
pop
test
mov
mov
and
inc
rcpps
sbb
push
adc
sub
xor
mov
roll
stos
xor
ljmp
cwtl
inc
loope
push
push
dec
ret
and
xchg
dec
loopne
cmpsl
push
daa
lock
adc
sbb
or
inc
ret
addr16
add
pop
jns
iret
sbb
jl
xchg
add
xchg
mov
push
test
dec
sub
push
adc
push
cmpsb
inc
sarl
and
mov
add
mov
or
mov
stos
pushf
mov
mov
pop
or
sbb
mov
ja
or
mov
jb
daa
aaa
icebp
fiaddl
pop
lret
sbb
scas
and
mov
pushf
shl
pop
mov
mov
js
aaa
nop
nop
or
jo
je
add
lods
outsb
cmp
push
jbe
pop
adc
push
xor
mov
sbb
add
add
xor
repnz
jmp
mov
adc
mov
add
pushl
nop
loop
mov
sbb
xor
fld1
inc
ds
sub
xchg
push
in
das
movsl
addb
pop
movsl
sub
or
xor
pop
cmp
pop
clc
nop
fistpll
mov
jle
rorl
sbb
adc
lret
sbb
lods
sbb
ja
addl
testb
fcmovu
sub
in
inc
fsubrl
or
in
sbb
scas
mov
mov
sbb
and
jb
pop
xor
stos
xor
incl
cli
xor
sub
add
push
push
and
js
das
ss
xchg
xor
addr16
sbb
imul
lods
and
fistps
es
push
adc
add
mov
add
lret
dec
sub
mov
and
pop
inc
or
cmp
pop
or
pop
add
push
sub
or
add
lret
sbb
dec
pop
sub
adc
xchg
nop
dec
push
or
xchg
fwait
and
and
inc
pop
inc
jo
lods
or
sub
cmpsl
push
dec
in
sbb
sbb
cmp
fldt
xchg
cltd
jns
aaa
mov
sbb
adc
adc
inc
mov
out
add
out
fs
es
xchg
pusha
pop
add
jo
scas
and
sbb
inc
and
sub
xor
cmp
je
mov
mov
outsl
inc
fs
lcall
add
and
mov
add
pusha
loopne
xor
enter
add
jl
loope
dec
and
add
loopne
or
nop
clc
push
lret
lods
lcall
cmp
aam
andb
or
dec
or
push
push
and
testb
mov
cmp
mov
inc
test
cmp
push
push
jmp
pop
and
in
daa
mov
and
jb
popa
cmc
add
aam
xchg
push
rcll
jns
pop
adc
inc
mov
lods
std
add
push
movsb
dec
scas
sbb
scas
pop
mov
pop
xchg
lock
jmp
int3
add
mov
xchg
dec
ret
adc
sbb
sbbb
sbb
insl
inc
shlb
push
push
imul
and
fsubr
call
sarb
test
adc
ss
xchg
mov
lock
adc
xchg
cmp
test
mov
repnz
or
and
add
nop
inc
pop
jo
mov
in
fs
mov
mov
in
ds
push
je
push
pusha
inc
cmp
inc
mov
or
adc
call
shll
pusha
pusha
ljmp
push
call
and
push
loopne
outsl
cmp
mov
dec
lcall
fnsave
inc
in
daa
jns
add
add
jl
test
jno
dec
bnd
adc
and
dec
add
add
testb
add
lds
mov
push
loopne
mov
movzbl
insl
add
xor
xchg
or
jbe
clc
dec
or
ljmp
shl
push
jl
mov
lods
pop
ret
add
sub
pop
jo
mov
shrb
push
xchg
lahf
cmc
loopne
xor
add
sarb
add
roll
or
lahf
aam
mov
add
or
mov
adc
cmp
or
mov
orl
push
and
jge
adc
fldl
xchg
adc
add
add
mov
push
mov
adc
dec
ss
rcrl
jg
js
push
dec
xlat
loop
xor
iret
inc
mov
nop
cmpsb
xor
cmp
scas
gs
hlt
dec
adcl
incb
test
mov
rorl
pop
or
mov
je
outsb
and
jne
fdivrl
mov
mov
outsb
syscall
inc
mov
pushf
jne
mov
rolb
rolb
push
mov
cli
js
pushf
les
dec
cld
adc
fadds
and
lock
push
insb
adc
fldcw
jle
mov
mov
loope
and
jle
loopne
sti
mov
repz
pusha
pop
js
pop
sub
les
cmp
sbbb
gs
aaa
mov
test
add
ret
outsl
subb
sbb
dec
inc
pushf
nop
jmp
jnp
mov
test
mov
cmp
lods
movl
loopne
adc
sbb
lea
stos
mov
test
inc
movb
rcll
lcall
aaa
insl
dec
cmpsl
cmp
popf
adc
mov
xor
dec
lcall
imul
divl
mov
test
in
add
jge
cld
pop
cmpb
incl
push
xchg
push
jp
pop
fwait
push
pop
sbb
enter
adc
and
loop
cmp
addr16
dec
adc
std
in
lret
notb
cmp
fsub
or
fimuls
push
push
jae
mov
mov
stos
cli
mov
xchg
popf
adc
push
push
cmp
ret
or
jne
sarl
movsl
std
sbb
jne
enter
lods
pop
mov
mov
mov
xchg
movsb
mov
sbb
push
pop
push
stc
sbb
cld
clc
or
inc
bswap
arpl
add
mov
mov
push
std
mov
inc
movzbl
and
add
dec
or
push
add
filds
fdivrs
push
lea
movsl
add
out
jnp
adc
push
inc
imul
jb
mov
xchg
cmpb
rcrl
test
mov
jbe
fimuls
pop
push
push
and
pushl
fcomps
std
pop
inc
pop
cmp
rorb
sbb
adc
in
sbb
lods
lea
pop
sbb
jmp
push
xchg
data16
dec
mov
adc
notl
jmp
pop
add
popa
mov
out
pop
or
sbbl
insb
inc
xor
fwait
xor
lock
jne
push
nop
pop
sub
scas
outsl
and
nop
cmpsl
test
jns
jns
icebp
jbe
test
cmp
and
mov
insb
adc
push
dec
pop
enter
lret
dec
sbb
xchg
add
jno
xor
dec
push
enter
or
mov
fisubrl
inc
mov
icebp
andb
pusha
push
or
lods
rorl
xchg
xor
fadds
lock
cld
jae
lret
xchg
sub
xchg
sahf
and
test
sbb
mov
adc
inc
in
mov
cs
adc
push
mov
popf
fucom
add
stos
rorb
test
out
add
pop
mov
dec
push
mov
ret
xchg
add
push
fcomp
cmp
test
dec
stos
int3
adc
ds
test
leave
das
es
ror
ret
sbbl
in
pop
push
test
jne
cwtl
loop
ret
fwait
mov
imul
or
in
dec
pop
jo
int
adc
call
in
loopne
xor
adc
adc
lock
xchg
adc
je
cwtl
andb
sub
mov
adc
xchg
mov
das
xor
and
and
or
inc
js
push
pop
mov
les
pop
xor
and
add
out
pop
fwait
or
mov
sarb
daa
lret
mov
jne
and
out
addr16
pop
dec
movsb
int3
mov
or
xor
shr
sub
mov
mov
cmp
nop
in
fbstp
add
aaa
mov
xchg
or
sbb
sbb
xchg
or
cmp
push
out
lcall
inc
mov
pop
cld
or
dec
adc
jbe
pop
and
lock
sbb
cmp
pop
mov
or
mov
inc
mov
sbb
adc
pop
adc
clc
mov
xorl
xor
pop
aas
pop
sbbb
test
popa
sbb
sub
pop
mov
pop
inc
push
and
mov
push
xchg
hlt
push
movsb
cltd
les
pop
pop
dec
add
xchg
mov
bound
or
xlat
inc
std
sub
inc
sub
cltd
jae
mov
pusha
ljmp
or
adcl
or
sub
mov
dec
cmp
scas
jbe
cli
sbb
cmpsl
mov
jl
ja
pop
stc
aaa
lea
and
test
hlt
aad
jg,pn
jg
adc
sbb
push
shlb
adc
imul
sti
das
push
sub
shll
inc
inc
jmp
inc
fs
xchg
lret
and
inc
mov
test
and
icebp
add
sbb
mov
inc
int3
shlb
daa
push
jmp
test
add
dec
add
sub
or
sub
imul
fisubl
stos
arpl
popa
dec
les
or
mov
lea
fnstcw
jp
mov
pop
in
roll
jo
cltd
and
aam
xor
dec
add
je
add
jno
out
scas
outsl
jo
and
xchg
cmpsl
pushf
ret
aam
pop
in
mov
xchg
ss
in
pop
inc
push
pop
sub
shr
add
jl
xlat
pop
movsl
insl
fcoms
dec
dec
xchg
lcall
push
mov
mov
mov
xor
dec
and
cwtl
lret
adcb
fsub
imul
mov
shlb
adc
push
cmp
inc
xorl
frstor
and
insl
mov
pop
les
enter
sub
outsl
fsubrs
jnp
in
aam
push
and
insb
and
pop
sbb
or
les
shlb
scas
lds
mov
imul
push
sub
push
dec
clc
or
je
and
pop
sbb
dec
fwait
outsl
jle
mov
fisubrs
nop
pop
xchg
mov
mov
and
mov
in
xchg
xor
lcall
adc
rclb
pop
mov
shlb
mov
aaa
xor
outsl
pop
push
sbb
mov
iret
jmp
add
and
adc
jl
dec
inc
and
inc
push
and
fstps
jge
dec
add
or
mov
outsl
xchg
cmovno
inc
cmc
test
xor
clc
add
loop
icebp
and
clc
repz
insb
rorb
ljmp
imul
sub
test
test
cmp
rol
bound
and
mov
adc
sub
fdivl
push
mov
xlat
xor
pop
not
sub
test
divb
divl
or
sub
ss
and
push
dec
mov
ror
test
jl
repz
mov
pop
sub
push
addr16
jne
jbe
test
and
insb
inc
mov
insb
stos
inc
sbb
scas
xchg
imul
adc
xorl
jge
aaa
and
pop
dec
outsl
add
mov
cmp
jmp
xchg
addb
pop
cmp
dec
add
pop
punpcklbw
xor
shr
xor
xchg
bound
jb
pushf
cmp
push
not
loop
dec
cmp
test
jo
push
pop
push
movl
decl
cmp
jbe
add
jmp
add
mov
je
imul
testb
lock
push
add
jp
test
add
arpl
lea
mov
xchg
pusha
jl
add
movsb
flds
or
or
bound
sbb
jp
daa
pusha
mov
inc
push
xchg
shlb
shrb
add
bound
and
loope
les
jge
push
inc
push
jo
adcl
cmp
xor
rcrb
jge
jno
daa
sahf
sbb
iret
jne
push
or
mov
jg
push
jb
push
or
nop
ret
adc
enter
rol
xor
mov
mov
xchg
inc
adc
leave
mov
fwait
mov
push
adc
nop
test
xchg
jo
add
gs
push
sbb
push
xchg
inc
push
test
jecxz
add
dec
mov
pop
cmpsl
push
sbb
sub
adc
mov
scas
push
sahf
add
adc
pushf
test
ret
sbb
and
dec
dec
adc
sbb
xlat
mov
or
mov
dec
cmp
sbb
and
popf
and
push
repnz
pop
xchg
mov
into
add
cmp
and
pop
push
pusha
sub
push
dec
sbbb
mov
add
addl
adc
out
lods
fidivs
add
dec
cmpsl
add
pusha
fistps
negl
bound
adc
add
or
and
jl
add
push
jmp
and
loop
cmp
cmpl
jns
sbb
inc
imull
and
mov
dec
mov
dec
mov
es
lret
xchg
cmp
mov
add
push
aas
xchg
mov
sbb
xorb
push
aad
loop
inc
add
push
test
mov
or
pop
mov
xchg
xchg
adc
add
jle
and
push
aaa
push
pop
js
jmp
out
add
or
mov
repz
sub
ret
or
mov
mov
lcall
add
sbb
inc
roll
rcl
out
adc
add
dec
mov
ss
jl
mov
inc
push
or
or
cwtl
push
shrb
orl
mov
or
dec
adc
sbbb
clc
xchg
imul
cmp
mov
push
and
or
clc
and
xor
stos
sub
ffreep
mov
cmp
aad
push
mov
cwtl
cmp
sub
pop
inc
sub
cmp
js
push
push
movsb
or
or
sbb
loopne
lods
xor
rcrl
add
add
cs
adc
add
dec
repnz
mov
dec
enter
sbb
and
inc
or
nop
cwtl
test
push
sbb
js
or
push
iret
call
jae
add
mov
shl
call
add
and
push
add
sbb
sbb
add
adc
add
mov
je
cmovb
dec
or
push
push
fstpl
repz
loopne
mov
scas
inc
andb
push
neg
sub
or
test
mov
leave
pop
cltd
xor
mov
jnp,pt
daa
push
test
lret
cwtl
sub
cltd
xor
dec
je
and
pop
push
add
xor
and
push
test
lods
mov
lods
dec
pushf
inc
sub
mov
mov
insb
fs
imul
xchg
mov
insl
fdiv
cld
aam
or
dec
mov
adc
fmul
xchg
rolb
int3
jge
add
sub
movsb
cmp
clc
movsl
outsb
insl
jne,pn
and
sbb
loope
cmp
push
mov
repnz
xchg
cmpsb
rcr
push
fidivl
push
int
jo
add
loope
sbb
insb
dec
push
pop
pusha
popf
insb
clc
mov
movsb
test
inc
mov
add
inc
mov
sbb
dec
leave
repz
or
lods
jbe
xor
cmp
pop
or
xor
push
push
mov
enter
mov
leave
test
loopne
loopne
xchg
sbb
ja
faddl
les
and
pop
mov
pushf
jge
in
add
lock
lcall
call
add
jle
test
arpl
push
fwait
mov
rolb
xchg
or
ds
sbbl
sub
sub
and
ret
test
popf
bound
pop
cli
adc
push
cmp
lret
divb
add
mov
shrb
or
mov
sub
arpl
sbb
inc
sub
adc
cmp
daa
in
test
fldl
into
scas
mov
or
inc
and
test
fdivr
aaa
push
mov
cs
fadd
sub
dec
or
jne
xor
cmp
xchg
pushf
pop
lock
adc
ds
scas
stc
xchg
aam
and
in
push
push
frstor
cmc
jo
in
outsb
or
mov
cmp
jecxz
aas
popf
stos
push
nop
data16
dec
xchg
dec
and
aas
lods
jne
cltd
push
adc
or
ja
test
push
cmpb
je
js
stos
mov
mov
push
ja
push
test
mov
imul
jne
mov
xchg
mov
pushf
jecxz
jb
sub
nop
and
inc
rclb
ss
lods
cmpsb
nop
pop
mov
mov
push
insb
pop
jmp
fcmovnb
sahf
or
mov
mov
mov
xchg
or
or
dec
cli
sbb
jne
push
out
js
mov
fstpl
stos
popa
inc
bound
add
daa
call
push
aaa
movsl
inc
call
or
or
or
push
fisubl
in
mov
and
adc
jg
sub
pop
int3
dec
and
mov
negl
xchg
mov
add
jns
cmp
addl
pop
inc
xor
hlt
dec
mov
and
and
and
add
sub
or
push
or
sub
add
js
push
cmp
push
adc
cmp
icebp
xlat
insb
adc
inc
ficompl
addr16
scas
add
push
scas
lcall
and
or
cmp
shrb
lock
hlt
out
pop
jne
cld
sub
push
adc
sub
inc
inc
push
push
add
push
adc
lods
and
push
pushl
or
mov
pop
cmp
js
push
arpl
adc
sub
dec
push
icebp
jecxz
add
add
sub
je
xlat
mov
xor
in
sbb
mov
repz
sub
in
cmpsb
sub
and
sub
in
movsb
repnz
xchg
cmpsl
popa
sub
mov
xor
pop
mov
jmp
popf
lahf
add
sub
daa
push
mov
or
push
adc
dec
jl
adc
mov
push
cmp
adc
adc
inc
pop
gs
push
mov
xchg
inc
ja
xchg
daa
lock
mov
add
push
push
or
xchg
inc
or
inc
lahf
add
xor
or
xchg
dec
mov
cltd
xchg
and
sub
lea
inc
sbb
cmpsl
mov
mov
add
scas
pop
add
sti
xchg
push
rcrl
je
jge
add
cmp
pop
popf
sub
daa
inc
inc
push
and
xor
js
sub
and
xchg
sub
clc
xor
les
inc
mov
add
je
and
and
imul
add
in
mov
push
fsubp
enter
jmp
xor
xor
pop
mov
inc
cld
inc
push
xor
mov
aaa
cwtl
dec
or
add
adc
pop
adc
push
jns
cld
pop
imul
and
js
adcl
xor
push
movb
in
xchg
add
add
popa
xor
dec
pop
inc
push
repz
clc
xor
add
push
filds
pop
cmp
andl
push
vmread
ja
mov
mov
shlb
push
adc
inc
add
imul
in
insb
jns
xor
sbb
and
inc
and
adc
dec
sbb
or
repz
and
mov
mov
hlt
mov
sbb
sbb
pop
in
out
ja
xchg
pop
push
outsl
push
push
sarb
shll
push
push
ret
fcom
cmp
sbb
push
adc
cmp
in
push
cmp
xor
enter
push
pushl
stos
mov
loope
dec
cmp
xor
or
test
vhaddpd
fimuls
movsb
push
in
xorl
and
or
mov
lcall
sub
test
xchg
push
cmp
icebp
adc
je
push
xor
jp
mov
or
sbb
push
and
jbe
jg
ret
cs
jmp
push
fistpll
xor
pop
in
inc
mov
sub
lds
xchg
nop
mov
outsb
and
add
push
cmp
inc
xor
pop
sub
mov
cmp
iret
cmp
es
in
add
cltd
adc
sahf
push
xlat
das
push
push
stc
pusha
or
xchg
xchg
or
test
inc
inc
pop
movsb
adc
xor
mov
cs
fdivl
les
dec
mov
cmp
add
push
lods
sbb
jge
push
pusha
sbb
je
rorb
push
adc
mov
popa
int3
call
cld
push
inc
or
sbb
add
pop
shl
pop
fmuls
mov
push
dec
sbb
icebp
hlt
les
test
das
xor
test
add
jne
push
dec
ljmp
dec
mov
adc
and
iret
or
sbb
adc
outsl
or
aam
push
test
mov
mov
xchg
sbbb
adc
mov
roll
inc
loopne
fcoms
push
sbb
pop
enter
cltd
sub
fldt
insl
cs
int
in
pop
mov
loop
adc
cld
popa
in
push
mov
stos
lret
ret
ds
fwait
lods
sbb
rolb
dec
cmc
ret
stos
imul
mov
lcall
add
shrb
push
enter
mov
add
pushf
movsb
rcrl
sbb
aam
xchg
addl
mov
or
or
in
mov
adc
add
lock
es
in
add
or
insl
in
adc
or
fcomip
rcr
jo
pop
lea
add
popa
aaa
out
in
xor
cmp
mov
rol
mov
ror
xor
shr
xor
test
rol
mov
rol
xor
shr
xor
add
add
or
pop
xchg
add
jl
ds
or
jae
mul
out
or
and
xor
add
add
aam
and
sub
add
push
xor
into
or
testl
add
xor
and
and
xchg
push
aam
sbb
xor
test
repnz
push
imul
pop
pop
inc
sti
outsb
push
or
xlat
ret
rcl
add
subl
add
xor
xor
call
sbb
call
and
push
sub
ljmp
int
ret
shr
add
push
xchg
or
cmpsb
mov
xor
in
imul
shl
in
push
cmp
bound
rorb
cwtl
add
pop
aaa
mov
lock
sbb
cltd
call
xor
loopne
loopne
in
movsb
jb
call
cmp
loopne
xor
imul
fdivs
pop
xor
jge
int3
loope
lods
cmp
addb
lahf
mov
push
xor
and
and
out
iret
or
out
into
add
and
shrb
inc
adc
sbb
mov
addb
pop
inc
inc
jo
ret
push
jo
rcll
add
mov
cwtl
pusha
lcall
mov
adc
push
loop
sti
rcrl
mov
add
add
pop
bound
jbe
call
insb
fisttps
or
clc
jp
push
and
add
inc
lcall
inc
nop
cmpsb
imul
int3
popl
ror
lret
inc
add
aas
mov
xchg
cmpsl
rorl
and
stos
addb
aam
aaa
xor
and
dec
sub
dec
shl
call
lret
int3
inc
shr
rolb
inc
or
push
xorl
push
push
push
xor
shlb
rcrb
inc
sub
dec
xchg
sub
xchg
pop
adc
jo
add
or
xor
jb
push
sahf
dec
aam
or
pop
mov
xor
fcoms
sub
xchg
xor
adcl
push
and
or
push
push
rorb
pop
cmp
xchg
or
add
pop
sbb
push
dec
mov
push
cmpsb
repnz
rolb
push
xadd
or
xchg
or
in
mov
add
inc
inc
pusha
and
sbb
pusha
pop
mov
rclb
adc
orb
rorl
and
jno
addl
in
fs
dec
dec
and
xchg
icebp
stc
stc
stc
mov
das
add
cmp
xchg
inc
push
inc
mov
dec
imulb
imul
fcoml
sbb
jo
adc
in
pop
movsl
out
push
sbb
cmc
cmp
xorb
fisubrs
dec
dec
or
sbb
add
sub
mov
adc
sahf
dec
loope
incl
pop
std
pop
loop
push
lea
in
add
sub
adc
pushw
test
xor
adc
mov
test
jmp
jp
sarb
rol
and
or
or
mov
adc
imul
in
rolb
cmpsb
mov
adcl
sub
sbb
push
loopne
lea
jmp
std
stos
push
lea
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
lock
sub
push
loope
lock
inc
adc
jl
sub
mov
pop
cltd
inc
sti
cmp
jbe
or
fs
ljmp
dec
popa
lret
push
jae
push
pop
pop
adc
xchg
sub
sub
stos
or
lods
cli
popf
pusha
mov
or
fbstp
and
mov
outsl
pop
loopne
ror
mov
inc
out
push
xchg
or
xchg
ljmp
mov
shll
pop
in
jbe
adc
mov
movsb
mull
sbb
sub
xor
and
push
inc
mov
test
dec
jmp
add
pop
lea
jmp
out
push
and
add
test
or
push
nop
aas
arpl
push
ret
and
adc
sub
sub
gs
movsl
push
in
add
ja
lods
or
inc
icebp
lds
dec
loope
add
push
mov
pusha
or
and
xor
rep
or
push
inc
jns
and
in
in
jb
mov
andl
adc
movsb
lock
das
jge
dec
add
dec
add
lock
inc
pusha
xor
inc
call
pusha
sub
loope
inc
test
pop
sbb
shrb
push
or
dec
xor
mov
ret
in
or
xor
shll
sub
and
inc
pop
or
or
pop
ret
dec
dec
jge
mov
adc
and
adc
out
sub
les
sub
push
lea
xchg
cmp
fadd
push
sbb
pusha
push
out
xor
cmc
mov
mov
sbb
push
xor
arpl
cmp
inc
cmp
sub
cmp
sub
sbbb
pop
adc
push
adc
arpl
test
and
add
int
or
mov
in
loopne
add
add
rol
addr16
jle
es
movsb
into
inc
add
sbb
push
mov
mov
dec
pop
enter
xchg
or
pop
dec
cwtl
std
inc
add
in
inc
fisubl
cmpl
or
out
int3
mov
outsl
or
sub
inc
sub
cwtl
sub
ljmp
mov
or
test
loope
adc
and
mov
lahf
mov
add
sub
add
sub
lods
ds
mov
pop
popf
xchg
and
lods
push
and
stc
lea
in
add
lahf
std
jno
push
and
mulb
mov
cmpb
jnp
movsb
filds
pop
mov
push
jb
test
xor
lahf
int3
jle
insl
cmp
mov
jmp
xchg
cmp
push
out
and
and
lcall
add
test
dec
mov
and
insb
loopne
push
inc
into
inc
sub
mov
inc
mov
pushf
loopne,pn
fldl
inc
sbb
es
stos
mov
mov
frstor
push
sbb
in
aaa
add
mov
mov
cld
push
mov
sub
movsb
cmp
push
cs
inc
adc
decb
je
cmp
push
stc
ss
fdiv
xor
xor
and
iret
and
push
mov
xor
je
and
outsl
cmpsb
lea
adc
sub
push
sub
inc
js
or
mov
xor
bound
push
push
xchg
sub
and
ret
sub
mov
cmp
xchg
lods
and
mov
add
dec
dec
push
dec
out
jge
int
gs
xor
xchg
test
dec
dec
or
lret
out
cs
add
enter
cli
scas
inc
cmp
jne
dec
inc
or
push
push
adc
mov
aas
or
fistl
testb
sbb
cmp
mov
mov
pop
and
lret
sub
loope
xor
jo
out
fistl
sub
push
rclb
pushw
int3
xorb
push
dec
mov
in
mov
dec
pop
cmp
pushf
roll
aad
xchg
and
mov
xor
fsts
cli
je
out
dec
pop
test
jbe
push
push
mov
adc
push
jae
push
stos
repz
mov
sarl
jb
jmp
sub
jbe
push
inc
faddl
jns
je
cs
inc
iret
push
push
fcoml
adc
pop
in
call
mov
fidivl
and
mov
mov
mov
clc
push
add
push
sbb
js
xchg
test
popl
push
xchg
or
divb
dec
icebp
subl
jne
sahf
sahf
xchg
arpl
adc
addb
vpcmpeqd
movhps
xor
mov
xchg
or
aam
mov
addr16
jle
adc
or
sbb
xor
shl
rcrl
mov
fwait
push
pop
dec
inc
jb
ss
scas
mov
sarl
mov
jbe
sub
sbb
roll
in
pop
push
imul
cli
push
mov
mov
push
call
loopne
push
shr
jno
dec
mov
push
adc
scas
cs
sbb
dec
mov
mov
jmp
inc
push
fwait
and
cmc
dec
bound
xchg
dec
add
sahf
xchg
jbe
push
push
scas
xchg
or
jle
jmp
pop
pushl
pushf
and
and
sub
xor
popa
jmp
xor
sub
sub
xchg
mov
ret
subb
add
push
xor
and
pop
inc
sahf
add
insl
add
mov
add
int3
addl
testb
sub
mov
inc
mov
inc
add
loope
xchg
jmp
add
jo
popf
divb
xor
dec
pop
cmp
and
stos
aad
iret
add
adc
jno
sti
insl
cmpsl
lock
iret
insl
sub
mov
add
add
push
mov
push
dec
push
sbb
dec
jp
add
add
scas
bound
dec
mov
cmpsb
pushf
in
dec
inc
adc
loope
pop
pop
inc
aaa
inc
mov
roll
lahf
bound
stc
ja
ja
roll
iret
jb
mov
push
mov
adc
shl
mov
mov
rclb
gs
push
xor
push
arpl
or
jmp
and
jno
add
add
inc
pop
mov
jno
test
out
adc
addl
lods
sub
ret
dec
lahf
mov
dec
xor
cmp
mov
jmp
cmpsb
lock
lret
inc
dec
xor
pop
ret
jmp
sub
int3
in
outsl
cmp
leave
mov
lret
add
push
add
inc
add
popa
dec
add
mov
shrb
stc
jo
and
out
mov
mov
mov
out
fldl
inc
cmp
mov
pop
ljmp
sub
mov
pusha
adc
sbb
nop
in
xchg
movzbl
pop
cwtl
xor
mov
pop
adc
int
movsl
insl
test
jmp
lret
add
repz
mov
xchg
sarb
or
repnz
imul
adc
add
add
imul
aaa
shrb
lock
lahf
cmp
fnstcw
jge
je
mov
sub
push
or
pop
push
mov
lea
sti
add
push
inc
cmp
jl
pop
into
ret
push
push
inc
lods
mov
jle
add
in
shlb
push
xor
ret
mov
and
test
or
adc
js
xor
lea
notl
ss
xor
sbb
jle
dec
sub
add
push
xor
xor
pop
ret
push
das
fwait
loop
inc
lea
push
jl
sbbl
or
add
and
test
ret
push
adc
sbb
mov
dec
mov
or
loopne
sbb
jnp
sbbl
push
inc
inc
loope
lea
stos
jne
inc
insb
nop
fmuls
sub
comiss
inc
add
cltd
aam
and
pop
jmp
xor
mov
sbb
xchg
add
or
outsb
mov
ficompl
shl
and
add
mov
enter
shl
add
lock
and
xadd
and
mov
mov
sub
mov
fisubl
movsb
mov
cmpsb
and
mov
add
jne
mov
jge
dec
inc
mov
push
fidivrs
pusha
add
insb
xor
push
or
add
sub
pop
popa
pop
gs
sbb
bound
js
push
adc
inc
dec
xchg
lock
push
mov
jge
dec
add
loop
adc
jl
lock
jp
inc
hlt
sbb
data16
jne
or
pushf
enter
das
dec
jg
xchg
jno
cmpsl
jne
std
cld
shrl
loope
scas
jl
out
add
imul
push
int
sbb
adc
add
or
adc
jle
xor
out
cmp
stos
loope
and
xlat
sti
fwait
mov
jbe
fbstp
mov
icebp
cmp
xchg
and
sbb
and
bound
adc
sbb
mov
sub
add
push
sbb
dec
aaa
push
xor
or
daa
mov
xor
jns
jae
rcrb
leave
adc
or
xchg
or
in
jno
sub
push
or
in
loop
iret
xchg
xorb
inc
loop
and
cs
pop
cmp
pusha
test
andb
xor
or
jae
ror
mov
mov
adc
add
xor
aam
xor
int
fisubrl
sub
dec
sub
arpl
loope
add
mov
loopne
pop
add
enter
fldt
jl
push
or
or
jmp
push
js
cmp
jbe
mov
jmp
das
loop
movsb
fnsave
sub
cmp
mov
bswap
cmp
pop
adc
stos
add
add
adc
out
or
inc
sub
pop
dec
or
out
and
add
cmp
dec
lock
push
ret
adc
inc
test
jecxz
out
cs
pusha
cmp
arpl
hlt
loopne
insl
cmpsl
ficoms
mov
sbb
sbb
insb
stc
ss
out
or
fldt
loop
add
mov
rcll
push
pop
lret
add
xchg
xor
or
and
std
xchg
xor
pushw
sbb
mov
popa
add
mull
dec
popf
xorb
loopne
ret
mov
sbb
pop
jmp
push
xor
adc
inc
push
or
sarl
mul
sub
or
sub
je
ret
mov
cmpsl
push
mov
sub
xor
je
xchg
and
jl
or
ret
loopne
cmp
or
pop
or
sbb
cmp
or
add
sub
sub
push
cmovle
or
xchg
call
mov
jns
jo
inc
or
push
ret
roll
and
mov
cmp
pop
inc
mov
push
and
adc
push
insb
ffree
mov
ja
mov
mov
add
ret
pop
dec
out
or
xchg
cwtl
xbegin
xor
xor
insl
scas
cmp
add
bt
sub
or
sbb
mov
mov
adc
or
imul
push
or
or
inc
inc
inc
je
nop
andl
mov
sbb
das
ret
cwtl
pop
sub
mov
insl
icebp
add
pop
icebp
cmpl
packuswb
add
rolb
sti
dec
lret
lods
loopne
push
out
mov
cmovle
pop
push
sub
aam
cltd
push
push
push
sbb
rcrb
nop
xchg
pop
aas
adc
add
pop
sbb
mov
add
mov
adc
in
mov
stos
imul
mov
sbb
mov
inc
push
and
sub
xchg
ss
nop
mul
callw
inc
dec
aas
xor
inc
add
jle
jle
data16
fcomps
add
icebp
xchg
inc
cmp
jo
push
in
les
and
jne
push
add
aam
sub
nop
xor
push
mulb
das
pop
pop
pushf
movsb
add
xor
pop
jmp
and
or
pop
addr16
mov
call
arpl
daa
sbb
je
mov
push
or
jne
shrb
repnz
insb
inc
or
or
mov
sahf
dec
jo
jb
xor
pop
add
rcll
imul
cmp
or
or
aas
add
sub
inc
jo
jne
orl
nop
or
mov
addb
lea
sbb
sbb
sbb
adc
add
out
paddb
or
lret
jne
and
add
ret
lea
jns
and
add
sub
std
sub
hlt
ret
sbb
cmp
je
push
cli
sub
adc
testb
je
cmp
mov
push
add
push
add
push
cmp
xchg
jmp
sub
fisubrs
sub
sbb
push
adc
add
add
mov
sub
add
dec
popa
pusha
je
adc
cltd
lret
sbb
lock
and
aad
push
lods
inc
out
aas
clc
and
sbb
xor
add
sub
xchg
cmp
and
and
pop
add
icebp
jmp
out
jp
mov
dec
ret
adcl
inc
push
insb
jne
jg
push
popa
bound
dec
adc
xor
lock
stos
mov
sqrtps
fisubrs
enter
xorb
stc
push
pop
addl
je
pop
inc
hlt
push
push
mov
mov
test
sbb
or
inc
push
inc
shlb
push
mov
cmpb
push
insl
mov
sub
or
addb
lods
cmp
dec
push
push
sbb
sarb
in
pop
xorb
xchg
push
test
push
xor
pop
call
and
scas
rcrl
std
add
jg
or
mov
rorl
sbb
mov
cmp
sbb
cmpsl
loop
mov
roll
add
sbb
pop
leave
jmp
lea
push
jl
mov
dec
loopne
dec
adc
or
inc
add
mov
leave
lret
into
jne
pop
jl
push
cmp
pop
or
push
or
jmp
testb
xor
lret
jmp
push
pushf
mov
dec
pop
pop
xor
mov
shll
out
nop
inc
icebp
pop
addr16
adc
into
mov
int3
out
std
add
cwtl
nop
inc
fcomps
xor
sub
jbe
insl
pop
cmp
push
or
xchg
pop
and
cmp
dec
jb
les
test
stos
jb
je
jne
push
xchg
xchg
pop
pusha
cltd
test
sub
push
pushf
add
push
jo
sbb
jae
mov
mov
les
jecxz
mov
jl
sbb
dec
hlt
movhps
dec
dec
negl
and
test
jp
sbb
addb
rclb
and
adc
decl
pop
mov
pop
sti
sub
rorb
cmp
ja
dec
jo
sub
sub
push
sahf
xor
mov
pop
push
sbb
pop
add
push
and
mov
test
push
pop
pusha
pusha
cmp
or
or
je
out
mov
out
xlat
push
inc
add
pop
cmp
int
sbb
cmp
int
cld
lcall
xlat
movsl
fsubrp
outsb
dec
roll
cmp
int3
add
cmp
and
and
add
roll
dec
and
add
fcomi
call
jle
rolb
in
xchg
mov
add
sbb
cmpl
xor
jb
test
mov
push
adc
jo
sbb
add
int
lret
push
imul
enter
cld
pusha
adc
fiaddl
cmp
mov
cmp
jno
push
lods
add
stos
adc
cmp
fdivs
add
mov
out
or
fwait
add
insb
xchg
inc
shrb
or
sbb
xchg
mov
xchg
or
inc
stc
add
pusha
xchg
fcoml
mov
cmpsb
adc
test
adc
adc
dec
adc
sub
or
jmp
mov
out
inc
inc
xchg
mov
push
in
mov
cmp
insl
loopne
ljmp
mov
das
movsl
inc
jb
sub
enter
adc
rorb
add
int
cmp
sub
aad
dec
test
popf
ret
xchg
jg
scas
outsb
adc
sub
xchg
xor
orb
push
and
scas
jae
les
adc
push
mov
repz
into
imul
nop
imul
mov
jbe
test
mov
sbb
push
lods
and
ds
mov
or
cmp
in
or
insb
popa
mov
or
adc
pop
test
mov
fcmovbe
aas
pop
cmp
pop
mov
ficoms
ret
clc
dec
dec
pop
jge
dec
cmp
adc
xor
push
adc
jmp
jmp
subb
scas
cmc
push
fildl
and
mov
jb
std
push
and
mov
pop
nop
ret
roll
and
mov
mov
je
sbb
jno
jo
subb
jle
mov
sbbl
outsb
dec
ss
add
ja
or
add
mov
clc
jae
mov
adc
add
add
jmp
insl
mov
rcrl
push
inc
mov
rorb
xor
sti
in
cwtl
mov
negb
or
mov
loopne
xlat
xchg
imul
dec
cmp
xchg
dec
push
xchg
jne
dec
fcmovb
jnp
adc
pop
popf
sbb
ret
or
cmp
nop
call
cmpb
adc
adc
sub
rcpps
xchg
stos
xor
cltd
test
cmp
cmp
icebp
out
jb
loop
jmp
shl
ss
loop
push
mov
lods
scas
sbb
mov
mov
adc
adc
push
loopne
lods
add
fidivs
int3
push
rcrl
push
mov
and
mov
lret
push
sub
js
sti
mov
mov
movsb
jbe
mov
cmp
pop
and
or
inc
test
stos
and
pop
clc
pop
out
ret
lahf
frstor
les
fdivrl
push
xchg
pop
nop
ret
push
loopne,pn
xor
cwtl
add
sub
test
loopne
ja
adc
xor
and
cmp
push
jmp
outsb
repnz
push
mov
popa
add
and
cmc
push
inc
or
fisubrs
fsts
in
mov
fidivs
mov
xor
or
xor
shll
push
dec
adc
mov
sbb
mov
insb
or
out
iret
xchg
sub
jne
je
jmp
or
ret
jno
mov
dec
sub
sub
movsb
dec
out
out
jns
shlb
inc
sbb
add
sbb
add
cmp
cltd
jg
jmp
mov
sub
jb
scas
mov
xor
icebp
negl
pop
jnp
loope
inc
cmp
mov
ljmp
xchg
push
aaa
and
pushf
es
push
mov
movl
pop
les
gs
adc
mov
xchg
adc
test
add
call
push
lcall
or
imul
and
add
in
and
inc
jmp
dec
push
and
xchg
fidivrs
inc
test
jmp
pop
stos
adc
sub
jb
push
cmc
dec
dec
push
pop
in
and
lahf
js
push
lods
jl
loope
lret
xor
push
push
push
js
push
push
jmp
fs
cmpsl
and
jo
inc
jp
adc
mov
push
jo
push
mov
jno
imul
jecxz
cmp
push
xchg
push
mov
xor
loop
dec
insb
movsl
sub
mov
bound
shll
mov
fnsave
orl
and
jmp
adc
daa
mov
add
push
ja
sarl
icebp
ret
sbb
inc
imul
shll
mov
and
mov
and
cmp
cld
shlb
add
or
jns
lods
lods
add
sub
mov
inc
xchg
sub
xchg
test
testl
inc
js,pt
xor
aaa
dec
repz
add
shrb
movsl
pushf
pop
and
popf
mov
push
xor
pop
or
and
outsb
cltd
cmp
clflush
or
in
dec
and
mov
jne
fnstcw
mov
and
clc
jg
fistpll
dec
test
movd
movaps
fiadds
jae
xor
jle
xor
test
ror
test
mov
mov
and
lret
or
jg
jnp
ret
mov
test
jg
jnp
mov
cmc
negl
mov
adc
or
add
adc
ja
fdivrp
add
repnz
divb
mov
mov
mov
or
pop
enter
mov
repnz
idivl
ret
adc
dec
sbb
push
fistpl
xchg
dec
cmpsl
nop
and
fcmove
dec
imul
ss
adc
das
adc
add
sub
lds
push
mov
adcl
xor
aam
movsb
adc
mov
push
push
ret
jge
mov
jge
push
loop
ret
jge
pop
test
or
xchg
sahf
fldl
shrb
cltd
adc
test
jle
rcll
and
push
pop
inc
pop
or
add
fmul
popa
stos
cmp
dec
jg
icebp
jb
neg
jbe
or
rorl
je
xor
jmp
loopne
add
or
in
loop
je
rep
mov
dec
add
dec
ljmp
and
sub
sub
inc
push
int
mov
and
ljmp
or
jb
pop
fadds
jns
pop
push
pop
and
pmuludq
insl
dec
pop
pop
scas
push
mov
decl
push
cmp
cmp
jb
rep
jmp
push
sub
nop
sub
cmp
jae
add
jb
inc
add
xor
push
ss
sub
movsb
or
out
enter
pop
imul
add
add
notb
lea
dec
dec
sub
int3
add
movl
addr16
add
add
dec
or
push
xor
sub
iret
jns
sbb
or
inc
in
cmp
repz
in
in
lock
repz
hlt
clc
clc
cld
fldt
push
mov
lret
add
fldz
jns
adc
jmp
and
inc
xchg
mov
or
add
jno
fsubs
push
lea
jl
cld
mov
and
std
cld
out
lock
scas
adc
mov
xchg
stc
sub
sub
or
mov
sub
push
fiaddl
jl
sub
add
push
adc
inc
push
out
push
add
lods
pop
push
mov
cmp
pop
add
ljmp
mov
or
push
mov
pop
lahf
out
int3
aam
sub
sahf
sbb
sbb
adc
jns
out
adc
or
or
sahf
out
add
inc
adc
fiadds
sbb
aaa
ficoms
add
push
add
sub
daa
ja
daa
mov
cmp
and
xchg
mov
int3
mov
and
andb
pop
add
je
pop
sbb
outsl
jne
negl
push
outsl
adc
mov
cmpsb
mov
testb
add
ret
cmp
scas
add
sbb
mov
push
cmp
mov
loopne
das
inc
inc
sub
push
mov
jmp
jp
je
mov
data16
rorl
sahf
mov
xor
popf
pop
xlat
fstps
mov
jne
enter
das
push
inc
les
imul
cmp
sahf
les
sbb
je,pn
cmpsl
ljmp
xchg
cmpl
xchg
sub
adc
jne
popf
int
push
and
test
hlt
loopne
adc
rorb
and
mov
sub
mov
fcomi
arpl
or
add
sahf
cmp
iret
jne
xchg
jmp
push
and
test
loop
push
pop
add
or
push
or
xchg
inc
push
xchg
mov
sbb
push
adc
adc
jne
inc
cmp
mov
xor
pushl
xchg
shrb
mov
dec
inc
inc
xor
cltd
adc
push
push
adc
and
pop
and
pusha
jmp
pop
popf
and
or
dec
dec
and
js
pop
sub
cmp
cmp
into
or
leave
xor
fwait
dec
sahf
out
dec
adc
push
add
push
push
lret
lcall
pop
or
push
or
enter
add
and
cmp
cmpb
andb
stc
js
add
or
mov
inc
hlt
cmp
add
je
into
mov
add
adc
add
enter
out
xchg
fistps
ret
mov
shl
fcmovbe
fdivp
shlb
dec
leave
sbb
or
or
inc
pop
cmp
cmp
mov
mov
push
cltd
lcall
inc
cmp
aam
inc
mov
cwtl
sbb
xchg
push
pop
sti
jg
jmp
jnp
andb
lock
push
xor
inc
add
push
mov
movl
aaa
fsubrl
cmp
and
adc
xchg
ret
mov
bound
or
inc
add
mov
in
sub
les
sbb
xchg
sbbb
cs
push
adc
and
add
in
mov
aad
and
iret
insb
and
jne
and
dec
and
sub
jge
sbb
xchg
pop
dec
and
pushf
mov
jmp
ja
in
pop
sub
mov
dec
sbb
inc
and
rcrb
cli
cmp
ja
cs
and
movb
or
mov
movsb
icebp
neg
mov
dec
dec
cli
or
add
jmp
fdivs
adc
ds
sbb
mov
cld
jb
outsl
ljmp
pop
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
out
push
dec
hlt
cmp
jb
lret
ret
adc
push
lea
lret
and
or
add
js
fs
or
addl
and
xor
in
push
cmp
jb
lea
and
mov
sbb
mov
incl
test
test
je
cmp
jne
mov
push
mov
std
jne
es
jne
push
mov
cmpsl
call
in
subl
pop
mov
aas
adc
push
dec
cld
cmp
out
jmp
adc
jmp
std
std
jmp
mov
repz
cld
ret
pmaxub
adc
adc
fucomi
jno
push
jb
push
push
movb
xchg
stc
hlt
or
cwtl
inc
pop
jb
xor
cld
add
xor
push
mov
or
testb
andb
test
adc
jo
js
je
adc
jne
out
inc
mov
aad
mov
std
or
daa
jns
movsl
xor
rorl
add
cmp
xorb
or
loope
sbb
add
jne
mov
sub
aaa
test
stos
add
mov
aam
and
add
ret
push
adc
xchg
xlat
jg
cmp
jg
add
mov
mov
imul
call
repnz
push
popa
mov
cmp
cld
and
xchg
dec
mov
mov
mov
xchg
and
mov
loopne
les
push
pop
div
jb
push
xor
mov
pop
clc
js
push
mov
xorl
cmp
lods
pop
sub
pop
adc
cmpsb
push
arpl
mov
xor
pop
or
jb
sub
mov
cmp
or
push
pop
gs
sbb
mov
shll
xlat
and
add
and
gs
add
outsl
adc
sarl
or
pusha
add
add
xabort
loope
andb
sub
sbb
pop
mov
call
leave
sub
jp
fnstenv
pop
push
or
push
mov
mov
adc
jle
mov
xlat
pop
pop
cli
cmpsb
cmp
shr
inc
ffree
jns
gs
xor
pop
xor
cmp
jne
orl
jmp
adc
jne
clc
mov
dec
adc
sarb
adc
cmp
inc
sbb
or
orl
and
mov
insb
adc
pop
jne
dec
add
sbb
add
lds
lock
or
test
dec
clc
sub
mov
jmp
cmpb
xchg
fidivs
lret
sub
cmp
ja,pn
xor
pop
mov
dec
adc
sbb
loope
sbb
and
mov
and
dec
pusha
addr16
je
push
xor
pop
cld
insb
and
lds
add
inc
cmc
mov
nop
test
jne
test
jne
push
or
scas
inc
xorl
in
lds
mov
inc
mulb
clc
scas
je
xchg
mov
sub
pop
movb
into
jae
cmpsb
mov
pop
das
in
bound
test
push
push
pop
pop
sbb
imul
add
xchg
pop
jg
jmp
push
mov
mov
or
and
je
test
sub
pushf
inc
inc
popa
add
loopne
stc
aas
pop
or
jbe
add
lea
add
shll
lods
jbe
dec
or
adc
jmp
jno
add
add
aad
out
push
data16
mov
xchg
dec
jp
jne
testb
xchg
rcrb
adc
push
adc
mov
lret
or
adc
pop
rcl
aas
and
sub
inc
inc
data16
mov
clc
dec
and
push
adc
in
adc
cwtl
adc
sbb
mov
cmp
mov
test
mov
inc
xor
inc
test
sbb
adc
rorb
jmp
add
test
add
sbb
fidivrl
mov
push
aas
push
es
push
adcl
cs
out
add
inc
dec
push
cmp
sub
stos
lock
sbb
push
ds
cmp
dec
push
movsb
ret
stos
and
adc
decb
loope
push
mov
mov
test
bound
add
add
push
andl
add
sbb
pop
push
ds
lock
jbe
fstps
sbb
sub
or
xor
mov
mov
pop
dec
insb
adc
adc
fiadds
adc
repz
fists
shl
or
jne
ror
xor
adc
xchg
and
stc
sub
in
push
adc
sbb
in
add
mov
arpl
or
jle
mov
mov
sbb
or
aas
sbbl
mov
test
pavgw
ret
jne
push
out
cmp
sarb
sbb
pop
push
mov
inc
pop
jmp
pop
mov
inc
push
xchg
inc
jo
push
rclb
add
dec
mov
inc
and
push
lret
or
jg
test
shll
fnstenv
cmp
call
push
outsb
das
xchg
sbbl
and
icebp
add
or
dec
mov
nop
scas
out
ret
daa
push
ss
jp
loop
jge
cmovne
add
adc
jg
mov
inc
incb
sub
aaa
insl
and
add
sbb
clc
lahf
xchg
push
clc
push
push
push
mov
les
fcmovnbe
adc
pop
je
adc
sbb
je
inc
stc
xlat
rorl
icebp
push
sti
pop
adc
xchg
ja
loopne
xor
jecxz
xor
dec
dec
or
outsl
cmp
dec
mov
push
inc
insb
pop
xchg
ficomps
add
pushf
mov
xor
shl
sarb
insl
push
int3
lods
fwait
jle
push
mov
and
xor
pop
jo
cld
jl
adc
push
jg
roll
loop
mov
pop
shr
dec
shlb
lock
add
add
jle
aas
dec
mov
jb
xor
repnz
icebp
mov
xlat
dec
jecxz
or
and
loopne
or
pusha
sbb
or
rclb
push
mov
inc
jle
inc
xor
jl
cmpsb
mov
adc
add
mov
and
push
rorb
mov
sbb
or
sub
push
mov
mov
shll
popf
addr16
jmp
cwtl
pop
pop
fmuls
cmp
test
add
adc
push
xor
ljmp
push
jp
and
xlat
test
sub
aas
mov
cmp
je
cmpsb
mov
xor
ret
in
fdivrl
cld
mov
clc
pop
hlt
loop
or
xor
sbb
sub
sbb
or
insb
add
add
stc
mov
cwtl
mov
push
pop
sbb
test
out
sahf
outsb
or
mov
and
jle
pop
fldcw
outsl
sub
inc
out
mov
mov
sbb
shr
ret
mov
pop
xchg
incb
cmp
jne
or
mov
adc
add
stos
dec
data16
adc
add
xorl
adc
ret
jne
cli
lods
shrl
rcrl
add
xchg
iret
dec
mov
add
fstpl
add
jo
in
test
jmp
mov
in
ret
dec
test
pop
lods
push
push
pop
push
mov
inc
cwtl
xor
add
pop
push
dec
pop
aas
mov
cmp
jp
sbbl
mov
cmp
je
push
jbe
add
mov
adc
mov
jo
adc
ljmp
mov
ret
ja
and
push
sar
ret
pop
loope
xor
pop
rorl
andl
mov
dec
or
add
xchg
lret
fsubrl
add
mov
or
push
inc
dec
test
add
jb
enter
test
inc
push
rclb
xor
cmp
test
xlat
xor
pop
push
test
jo
pop
sahf
fcoml
jle
cmp
xor
adc
bound
fistl
loope
adc
test
jmp
cmpsb
push
ds
fsubl
and
xor
jge
lods
jns
orb
in
dec
or
cltd
and
and
sti
inc
iret
push
push
pop
jle
mov
xor
xor
mov
add
push
fs
sbb
repz
lahf
ret
lea
mov
adc
imul
jbe
pop
add
add
pop
enter
add
push
repnz
sbb
jmp
jno
repnz
je
lcall
and
add
ror
repnz
xchg
pop
push
xor
inc
enter
or
xchg
add
mov
cmp
or
sub
sahf
xchg
add
or
or
movsl
test
or
mov
lcall
and
enter
push
jb
jb
ja
push
orps
adc
sahf
xchg
add
pusha
adc
xor
inc
or
adc
iret
in
out
adc
out
rclb
add
adc
adc
lea
cltd
adc
xchg
add
push
push
or
push
push
pop
pop
repnz
xor
sbb
lcall
sbb
add
mov
sbb
sbb
sbb
sub
je
pop
sbb
cmp
inc
sbb
and
xor
repnz
inc
push
pop
pop
sub
pushl
add
add
sub
cmp
fcom
imulb
add
cmp
xchg
fisttps
clc
dec
lock
or
add
inc
test
push
in
iret
pop
sti
cmp
je
lcall
rol
lea
adc
aad
cmp
add
jns
mov
jns
fwait
out
push
fcoml
xor
add
call
in
call
and
enter
inc
jmp
cmpb
jmp
in
jb
jmp
in
in
psubusb
in
cltd
mov
add
inc
in
sahf
out
out
sbb
sbb
jge
sbb
nop
out
test
lock
xchg
add
icebp
icebp
in
cmp
repnz
sahf
lret
add
std
repz
test
hlt
hlt
rorl
sahf
xchg
add
pusha
hlt
fwait
mov
jb
inc
jg
mulb
mov
pop
idivl
or
std
clc
clc
clc
and
sbbb
repnz
push
lock
cli
cli
inc
enter
sti
sbb
stos
jns
aaa
xchg
cld
cld
cld
je
cld
push
divps
mov
repz
repnz
sbb
stos
fistpl
enter
sbb
roll
insl
cmp
push
lahf
jb
mov
ror
pop
or
xor
cmpsb
dec
add
jecxz
jecxz
pop
push
adc
in
push
xchg
add
icebp
inc
mov
sub
stc
daa
sbb
sbb
out
adc
enter
add
mov
dec
sti
sub
and
mov
cs
cltd
in
add
and
mov
xchg
inc
add
js
out
out
sbb
pusha
sub
push
lock
cmp
add
cli
push
cli
push
push
adc
orb
stc
and
push
stc
xchg
pop
stc
out
imul
fwait
and
add
xchg
pop
leave
adc
out
clc
cmp
lret
sti
repnz
push
fdivr
cltd
mov
scas
enter
inc
inc
lock
push
into
xlat
ja
dec
dec
and
or
xchg
xchg
je
sub
mov
fstl
xlat
in
icebp
mul
pop
popa
leave
mov
shl
scas
mull
mul
sbb
xlat
enter
cltd
out
leave
mov
adc
and
cmpsb
jb
pusha
sbb
adc
xchg
ljmp
scas
pop
mov
xchg
lret
adc
xchg
negb
lcall
mov
testb
pop
add
sbb
xchg
cmc
repnz
jno
xchg
mov
cmc
pop
jne
sub
divb
out
fwait
and
sbb
and
scas
lret
jecxz
stc
popa
cmp
mov
mov
pop
jne
add
pop
and
hlt
sbb
das
pushw
data16
pop
ja
test
idivl
jo
aam
pop
int3
sti
lahf
pusha
adc
jle
push
ds
cwtl
test
loope
add
jae
loope
repz
leave
and
mov
adc
xchg
repz
sub
in
repz
inc
pop
lret
inc
repz
and
sbb
jmp
xchg
inc
mov
xchg
repnz
xchg
pop
jo
sbb
dec
in
in
cmc
pop
daa
xchg
inc
and
add
adcl
xchg
pop
loope
sbb
mov
adc
add
popa
leave
mov
xchg
cmpsb
jb
cmp
mov
adc
cmc
add
cmp
leave
jecxz
ffree
lock
pop
adc
loop
sar
cmc
jne
mov
lock
pop
xchg
xchg
sbb
in
and
test
push
xchg
jle
ss
push
repnz
sub
out
jmp
and
and
cmovno
cmp
pop
in
push
add
add
bound
jb
stos
add
shlb
les
pop
enter
adc
jne
daa
cmp
or
cmp
dec
add
sahf
and
ljmp
or
cmc
and
stos
push
inc
add
cmp
fxch
pop
sub
xor
int
sahf
dec
jge
mov
pop
push
lcall
push
sbb
pop
int
repz
mov
dec
rclb
iret
repz
push
std
pop
popa
inc
dec
outsb
cmp
sarl
fimuls
mov
orl
xchg
push
mov
push
inc
imul
lret
ret
test
pop
aam
lock
cs
add
cwtl
jge
push
imul
loope
or
fistpl
pop
jp
arpl
rcrb
inc
negb
or
adc
or
push
add
addl
add
jnp
movsb
push
js
fcomps
sub
add
and
add
insb
sub
cs
push
popa
sub
lahf
or
mov
imul
add
or
lea
jecxz
inc
push
dec
test
ret
push
jl
shlb
adc
add
add
adc
xchg
std
movsb
jb
movl
dec
rclb
sub
inc
dec
aam
pop
mov
adc
in
lds
jne
insl
in
adc
inc
mov
add
cld
repz
jb
pop
and
and
or
lcall
add
sub
pop
rcrb
enter
out
mov
in
shl
daa
imul
mov
mov
adc
popa
js
in
popa
js
xchg
add
push
cmp
dec
outsl
cmpsb
or
adc
mov
adc
je
pop
shll
pop
mov
add
sbb
pop
cmp
loop
notb
je
rolb
xor
orps
add
pop
mov
jne
ljmp
push
pop
inc
ja
push
add
or
mov
pop
inc
out
xchg
aam
jmp
mov
add
int3
insb
adc
movsb
jne
jo
sub
bound
xorl
jbe
add
xchg
add
inc
adc
stos
fstps
stc
aad
lahf
and
lret
shl
mov
ss
mov
mov
inc
inc
cmp
mulb
sbb
mov
out
jns
mov
dec
mov
incl
xchg
push
mov
pop
pop
push
outsb
jecxz
mov
cwtl
ja
scas
sbb
cmp
push
je
pop
test
push
les
pushf
cltd
jecxz
xor
dec
popa
mov
aad
or
test
ljmp
testb
mov
jo
xchg
jmp
lret
clc
cmp
out
in
or
jge
popa
sub
roll
shr
sub
add
testb
frstor
add
and
jmp
mov
mov
pop
mov
pop
fimuls
jne
int3
ret
add
mov
inc
and
adc
aaa
inc
dec
pop
add
sbb
jbe
inc
push
push
outsb
xor
das
int3
adc
mov
push
dec
push
mov
push
jl
cmp
decl
jne,pn
xor
xchg
sarb
lret
aad
xor
aaa
jbe
push
cltd
pop
idiv
mov
push
pusha
or
add
dec
mov
dec
sbb
mov
mov
xor
xor
les
cmp
jae
dec
mov
lret
mov
jbe
movlps
push
mov
dec
call
sub
add
sub
daa
ret
inc
adc
loopne
movsb
pop
out
flds
jg
or
mov
insl
cmovae
call
mov
mov
sbb
dec
dec
je
pop
mov
jne
cmpsb
and
lcall
push
aam
jbe
xor
pop
ffreep
imul
mov
push
cmp
movsb
adc
movsb
das
sbb
pop
or
xchg
inc
mov
insl
filds
pushf
cltd
shl
stc
mov
xor
pop
push
push
pop
add
push
popa
es
jle
test
push
add
push
adc
out
and
fisubl
pop
and
adc
mov
leave
push
dec
mov
xorb
cmp
jle
sub
sub
insl
or
jl
aas
jge
lods
adc
cltd
pop
idiv
pusha
mov
jge
int
inc
xor
xchg
inc
out
cmp
insl
xchg
cmc
es
repz
jmp
or
and
mov
or
push
cmp
enter
fisubrl
shlb
jl
mov
shll
adc
fisubrs
or
je
insb
sub
and
sbb
sbb
adc
mov
add
sbb
or
imul
add
adc
cmp
jbe
inc
jo
incl
pop
and
ds
adc
sbb
jbe
cmp
nop
pop
sub
sub
insl
pop
jne
push
lock
mov
cmp
je
sub
outsl
push
xor
loope
push
jmp
int3
icebp
jecxz
jge
pop
je
sbb
test
jecxz
jl
fs
addr16
xchg
adc
outsl
out
sbb
int
int3
dec
jo
or
pop
je
dec
inc
add
dec
jne
sub
fwait
or
adc
lcall
lret
mov
les
movsb
lahf
pop
pop
mov
cmovne
or
cwtl
mov
and
js
xchg
inc
aaa
subl
jns
pop
repz
movsb
cmp
pop
stc
pop
push
adc
inc
fucomi
pop
lcall
push
push
pushf
push
pop
mov
das
bnd
inc
mov
loopne
or
adc
sub
push
push
movsb
xchg
daa
fcomp
xchg
adc
sbb
and
jge
add
or
push
cld
mov
xor
add
jnp
lea
push
loopne
adc
adc
or
or
cmp
out
call
inc
dec
out
push
stos
out
push
pushl
iret
add
ljmp
pusha
movsl
xchg
rorb
jg
js
and
push
pop
shlb
jl
fcom
rolb
dec
js
jo
dec
sahf
jp
scas
fildl
adc
mov
pop
push
movl
decl
inc
jg
mov
jne
lea
cmp
inc
bound
ret
mov
add
clc
mov
inc
inc
cmp
cs
add
cmp
insb
in
pop
lcall
fadds
mov
movsl
test
or
dec
mov
ficoms
mov
and
sbb
fsts
add
jmp
pop
inc
pop
mov
incl
ljmp
jo
fdivr
jl
inc
sub
sbb
or
lret
pop
jmp
imul
dec
dec
sbb
adc
dec
negl
push
add
dec
mov
add
push
std
xchg
aad
orl
pop
sub
push
sub
mov
addr16
test
loopne
xor
adc
test
push
aas
in
pusha
cmp
pusha
adc
pop
or
jb
sarl
adc
shll
pop
dec
inc
or
sbb
push
pop
add
popa
mov
imulb
add
rcr
frstor
sub
dec
movsb
jb
inc
lret
dec
pop
jns
xchg
addr16
inc
sub
inc
sbb
test
adc
lahf
lock
xchg
dec
and
push
inc
ret
stc
cmp
lea
bound
jne
jmp
adc
inc
rorl
or
pop
adc
aam
dec
jmp
shr
je
dec
sbb
insb
into
xor
xchg
movsb
jns
incb
pop
stos
shrl
jne
mov
stos
lods
xor
xchg
clc
ret
jno
and
in
xchg
in
lcall
movsb
adc
cmpsb
or
sbb
dec
js
or
inc
pmuludq
xchg
xchg
cmp
je
mov
xchg
push
loopne
push
sbb
call
cmp
cmp
cmpsb
mov
add
cmpsl
mov
sbb
or
push
jmp
cmp
ja
xchg
incb
and
inc
inc
outsb
xor
pop
mov
xor
or
add
mov
movsb
cltd
pop
xlat
xor
mov
xor
mov
and
adc
es
inc
jmp
les
lcall
sub
nop
push
inc
sub
inc
mov
enter
jo
inc
lcall
dec
push
nop
add
add
inc
std
mov
leave
mov
fbld
pop
fldz
push
out
mov
xor
adc
add
sub
sub
dec
ret
std
jmp
cltd
rep
push
sbb
cmp
testb
nop
xor
in
inc
cltd
je
push
orb
pop
loopne
adc
add
daa
xor
sbb
push
outsb
or
mov
adc
gs
cld
jmp
pop
arpl
xchg
push
jno
sub
mov
mov
jno
inc
mov
jno
call
cli
dec
pop
lcall
inc
add
enter
sub
fs
sarl
adc
push
cmp
xchg
pushf
xor
or
or
popa
sbb
in
cld
add
daa
aad
xor
dec
out
inc
mov
add
jbe
js
jp
xchg
adc
push
incb
jo
scas
jb
cmpsl
dec
or
rcl
and
adc
sarl
or
aad
fisubrl
pusha
mov
pop
mov
sbb
shll
in
and
orb
lcall
mov
popf
sahf
enter
sbb
scas
lret
sbb
insl
cmp
lcall
cs
in
jne
ret
push
mov
jmp
mov
sbb
inc
loope
add
dec
lcall
std
data16
sub
mov
insb
cwtl
add
sahf
adc
sbb
adc
and
inc
loope
fnop
js
stos
loope
jp
fldenv
push
add
push
jmp
lcall
cld
arpl
imul
test
pushf
fidivrl
cmpsb
xchg
ja
pop
jecxz
or
sub
and
mov
add
and
loopne
add
or
enter
mov
cli
inc
mov
sbb
sbb
pop
or
push
jbe
sbb
jo
xchg
jle
in
adc
add
imul
inc
loop
add
cmp
jle
cwtl
or
inc
fisttpll
out
notl
pop
inc
sub
pop
lcall
xchg
cmp
enter
imul
cmp
push
pop
or
or
shrl
loopne
and
insb
cmp
fadds
in
sarb
scas
dec
jecxz
mov
call
sbb
adc
dec
idivl
dec
adc
or
incl
pop
notb
sub
mov
mov
imul
enter
push
test
gs
add
ret
inc
adc
or
xchg
xorl
aad
gs
mov
sbb
xchg
shlb
jecxz
insb
push
push
fdivs
lea
loopne
out
into
or
sbb
and
call
pop
mov
pop
cltd
mov
add
xor
add
jecxz
stos
xchg
out
jnp
je
out
test
xor
push
dec
or
pop
mov
testb
push
fs
mov
lock
sti
sbbb
bound
lea
dec
xchg
lock
sub
cwtl
clc
stos
cwtl
xlat
mov
mov
clc
jl
jg
pop
fdivr
into
or
add
push
cmp
inc
mov
out
add
add
fidivs
stc
mov
and
repz
and
repz
cwtl
cwtl
mov
push
call
loopne
cli
sbb
fcomps
lcall
cmp
shlb
sub
add
test
or
add
adc
test
cmp
push
inc
add
jbe
lods
lret
test
xchg
add
in
mov
mov
adc
sti
mov
xor
mov
repz
sbb
stc
pushf
popl
mov
call
test
push
mov
add
cmp
push
insb
loope
xor
push
xchg
xor
inc
fbld
push
dec
mov
xor
push
pop
push
loope
adcb
adc
int
dec
lock
sub
fcoml
mov
jecxz
sub
pusha
cld
sub
xor
push
and
or
xor
adc
or
push
or
push
imulb
test
or
rol
sbb
or
loope
or
add
add
lock
inc
pop
sub
mov
cmp
dec
std
inc
dec
jne
lea
or
or
lret
fstpl
add
pop
test
push
ds
xorb
ret
outsl
lock
mov
dec
adc
loop
mov
sti
push
movb
popf
out
xchg
pusha
mov
add
push
sub
xor
mov
leave
test
hlt
inc
cmp
popf
out
mov
fdivr
fimull
mov
out
adc
aad
jns
std
out
fidivs
push
inc
inc
sahf
addb
cmovs
dec
and
int
pushl
dec
push
sbb
push
mov
and
je
and
aas
gs
int3
or
test
add
mov
jmp
mov
mov
push
leave
sub
mov
cmp
add
lea
sub
ja
lret
add
jmp
jl
in
jae
ljmp
add
inc
add
add
and
inc
or
jl
leave
push
test
mov
jg
or
popa
pop
rol
ja
enter
shlb
jecxz
add
inc
or
add
xorb
negb
cmp
inc
js
dec
cltd
jno
or
mov
jns
mov
pop
add
jecxz
scas
jmp
cmp
or
cmp
mov
dec
add
push
cmpsb
push
sub
xorl
xchg
inc
negb
nop
fstpt
std
jne
loopne
fldt
push
js
cld
stos
enter
rcrl
out
shrb
jo
mov
mov
add
imul
dec
mov
sbb
ret
or
es
xor
or
sbb
fs
rcll
or
loope
dec
mov
and
xor
bound
mov
mov
jnp
jae
dec
or
cmp
jbe
aam
jmp
jne
mov
test
cmp
mul
test
insl
mov
test
aas
and
imul
mov
mov
aaa
jmp
add
jg
cmpsb
fisubrl
push
loopne
andb
jg
or
lcall
pusha
and
jne
and
pop
outsb
incl
loopne
and
jmp
inc
or
negl
push
insb
inc
adc
push
lcall
mov
inc
mov
inc
inc
inc
dec
jne
mov
xchg
shrl
add
dec
pop
js
jle
xor
clc
or
mov
inc
dec
jne
adc
jnp
bound
incb
adc
add
gs
gs
mov
cmp
jne
loopne
dec
inc
bound
and
jge
loopne
adc
add
mov
xchg
or
mov
pop
mov
stos
xor
push
dec
inc
mov
sbb
add
sahf
pusha
lock
test
xor
loopne
xor
pop
mov
lods
xchg
cmpsb
push
shlb
xor
dec
mov
xchg
xlat
cli
pop
fld
push
push
test
mov
xor
lret
insl
mov
and
fs
xchg
cmp
out
mov
inc
pop
ret
adc
dec
loopne
lcall
fucomip
or
pop
sub
jmp
xor
dec
sbb
mov
sub
fstpl
xor
add
push
ss
sbb
ss
push
out
arpl
adc
mov
fwait
outsl
jp
xor
cmp
add
jbe
cmp
adc
insl
inc
jge
leave
cmpl
or
push
and
pop
movl
testl
outsl
cmp
adc
mov
es
pop
dec
lock
pop
pushl
imul
mov
jno
mov
cmp
inc
inc
sbb
mov
and
fidivl
sub
and
inc
ficompl
mov
pop
cmp
in
xchg
out
cwtl
mov
jne
stc
and
aaa
out
jle
cld
fldt
or
push
cmpl
loopne
cmp
add
pop
cmp
es
outsb
mov
dec
subl
and
push
inc
xor
movsb
mov
out
adc
mov
xchg
rorb
sub
fisttpl
cmpsb
or
iret
cmp
ret
jo
xchg
pusha
nop
sbbb
cmp
mov
mov
test
and
arpl
sub
pop
inc
notl
sbb
test
mov
outsl
rcrl
pop
xchg
test
and
ret
dec
test
jle
sbb
jo
adc
fs
lods
or
pusha
adc
and
test
jb
jmp
push
ficomps
shll
mov
push
pop
mov
fldl
push
adc
and
fucomip
pop
sbb
push
cmp
shrb
add
daa
mov
std
mov
cs
mov
dec
fisubs
ljmp
dec
sarb
add
inc
jb
or
test
mov
ror
cmpsl
out
call
jg
and
dec
addr16
nop
loope
in
adc
mov
out
xor
mov
xchg
out
decb
bound
inc
jge
jl
test
pop
dec
repnz
add
cmp
and
and
sbb
sub
into
pop
insb
push
cld
push
jo
testb
sub
repnz
mov
test
loope
xor
movsb
xchg
jne
imul
cmpsb
insb
push
icebp
and
jae
bound
scas
and
cmp
adc
or
outsl
mov
dec
pop
xchg
mov
rorb
dec
push
sub
mov
rclb
dec
ljmp
xchg
sbb
orl
adc
rol
jns
xor
not
movsb
imul
iret
adc
mov
arpl
data16
xchg
bound
add
nop
sub
cmp
nop
add
inc
inc
dec
ret
add
and
clc
jne
daa
jle
pop
sbb
push
sub
xor
jmp
adc
jbe
fsts
jge
push
mov
adc
fistps
adc
or
mov
insb
sbb
mov
jge
adcl
fadd
mov
mov
test
mov
mov
xchg
pushf
cmpl
jbe
mov
imul
pushf
shr
mov
cmpsb
and
daa
test
addr16
or
ja
fdivs
mov
xchg
mov
jo
imul
lret
inc
mov
and
mov
mov
gs
xchg
sub
scas
dec
mov
nop
and
xor
push
inc
ja
add
das
and
xchg
fsubp
mov
pop
inc
les
jns
add
mov
rorb
leave
mov
das
mov
pop
jg
sbb
push
push
push
fimull
loopne
fcoml
jg
push
mov
mov
clc
or
pop
pop
popf
enter
shrb
pushf
popl
jp
jle
sarl
hlt
aaa
dec
cld
adc
sub
mov
pop
xchg
mov
add
fdivs
pop
setg
inc
cmp
mov
nop
pop
pop
pop
sbb
mov
xchg
in
cmovo
push
js
jmp
jge
js
ret
mov
sahf
pop
mov
mov
or
dec
cld
push
bts
jmp
mov
es
mov
or
js
in
xor
mov
lret
mov
aas
push
dec
xor
clc
pop
fsubs
add
sub
adc
ja
xchg
mov
lock
cmpb
mov
fsts
and
into
imul
push
fadds
mov
jnp
in
push
mov
fs
mov
cmp
and
mov
mov
mov
iret
repz
push
adc
and
xor
clc
cmp
inc
lea
inc
pusha
or
js
xchg
add
cmpb
cmpsb
xor
cmpsb
sbb
push
sub
and
clc
ljmp
mov
pop
ret
cmp
sbb
lods
js
lcall
lcall
cli
cli
dec
jo
popa
adc
cwtl
adc
or
dec
cmp
jge
inc
mov
add
test
cmp
iret
shlb
popl
add
inc
add
aam
jno
loop
and
adc
mov
add
add
and
clc
test
xchg
idivl
aas
add
xor
insl
scas
inc
or
sbb
jmp
je,pt
call
cltd
and
enter
cltd
xor
push
enter
cmp
inc
or
je
insb
popf
fs
adc
loopne
jae
fs
lcall
push
pop
sub
push
jge
jmp
out
add
and
insl
add
aam
fcomps
or
jne
or
push
insb
loopne
and
je
sbb
inc
lods
ja
adc
bound
xor
lock
mov
push
int3
inc
sub
popa
in
and
arpl
xor
and
clc
xor
je
outsl
push
outsb
cmp
mov
mov
popa
jo
repnz
adc
test
ja
enter
subl
je
movl
enter
and
fdivr
cltd
mov
hlt
jecxz
xchg
or
adc
add
pusha
in
add
push
xchg
mov
and
addb
mov
xchg
adc
jno,pt
jno
pusha
xor
decl
inc
sbb
mov
or
add
dec
clc
jge,pt
test
or
fmull
mov
jg
mov
or
inc
stos
pop
mov
pop
push
push
add
xchg
das
ss
push
lret
imul
add
push
inc
pusha
or
arpl
xor
mov
and
mov
incl
and
dec
jecxz
imul
rcl
dec
mov
cwtl
test
mov
mov
add
adc
xorb
add
popa
or
dec
or
mov
cmp
sbb
add
jecxz
imul
mov
mov
mov
inc
cltd
adc
jbe
and
dec
fstl
inc
call
push
sbb
or
dec
test
in
testl
or
push
and
push
mov
add
dec
xchg
pop
mov
sbb
xor
dec
add
and
jns
or
aam
inc
rorb
push
sub
pop
sub
mov
shl
add
mov
test
or
and
or
call
mov
add
add
xor
push
push
lock
mov
dec
jmp
inc
and
aas
inc
popf
testb
rcrb
mov
jg,pt
add
push
jmp
clc
std
ja
movsb
ljmp
cmpl
pop
lods
add
test
cmpl
les
xor
pop
in
rorb
nop
cs
push
je
sub
imul
fcompl
xor
sti
rorb
lret
in
mov
in
mov
cs
hlt
fadd
fdivs
jno
sti
mov
xor
scas
mov
and
mov
adc
mov
andl
leave
test
icebp
mov
pop
in
or
imul
add
imul
clc
mov
or
adc
adc
ret
orb
ljmp
arpl
cmovb
test
push
clc
add
fs
sbbb
push
xchg
aaa
test
xor
lahf
inc
mov
lea
aam
mov
fsubs
mov
scas
pop
lret
testb
je
or
sub
je
sbb
pop
xor
pushf
pop
or
add
xchg
push
or
fs
adc
adc
jo
push
sbb
aam
arpl
mov
mov
adc
clc
arpl
lret
dec
lock
ja
movsl
mov
mov
leave
test
out
roll
hlt
stc
outsb
outsb
fwait
add
je
insb
je
adc
test
data16
insb
xor
popa
lds
sbb
mov
outsb
xlat
pop
and
pop
or
xor
sbb
add
orb
loopne
mov
movsl
incb
fnstenv
xor
jb
or
imul
outsl
cmc
jne
inc
lcall
aam
dec
ret
je
mov
sbb
push
mov
lret
pop
pop
xlat
mov
xchg
or
or
sbb
fidivs
je
cmp
adc
or
pop
mov
add
mov
ret
add
hlt
fadd
mov
cld
shl
or
dec
nop
and
cmp
inc
push
jae
sbb
test
cmpsl
loope
rol
rcll
fldt
jne
das
mov
adcl
jne
pop
push
pop
sbb
dec
and
mov
in
or
loopne
ret
out
sub
in
or
in
shrl
inc
mov
nop
jmp
add
bound
push
insl
cmp
ret
subl
shlb
int3
lret
xor
sub
test
testb
or
dec
lret
ss
int3
push
cmp
xchg
mov
pushf
jg
xchg
out
testb
mov
inc
aam
inc
pushl
mov
push
jns
or
jnp
jge
lcall
xchg
adc
mov
cmpsb
add
cmp
xor
add
lea
jae
cs
sbb
loope
test
sub
loop
push
push
mov
adc
jmp
push
push
outsb
je
test
xchg
push
xor
jne
popa
aas
add
xor
fildll
test
inc
sub
je
data16
mov
add
movsb
orb
adc
les
add
cs
addb
adc
add
ret
imul
mov
jne
mov
jmp
cmp
std
pop
jle
insl
cmpl
incl
xor
mov
xor
int
lods
sbb
adc
mov
pop
mov
cmp
xor
adc
sti
scas
cmc
xlat
mov
adc
dec
sub
dec
rclb
or
bound
lea
and
lcall
mov
cwtl
inc
call
in
sub
nop
cmpb
jne
mov
stos
mov
push
and
xor
cwtl
push
push
outsb
mov
add
out
addr16
incb
pop
dec
mov
adc
inc
daa
add
adc
push
pop
data16
push
loope
ds
sub
lret
mov
xchg
jne
push
mov
fbstp
inc
push
fwait
imul
add
or
mov
aaa
int3
je
cltd
dec
ret
js
sub
add
pop
jl
jae
inc
movl
in
sub
nop
pop
inc
cmp
rorb
add
test
pop
mov
or
jne
and
lea
outsb
das
sbb
rorl
push
push
inc
jle
ds
adc
cmp
push
nop
xchg
clc
cmp
jg
sahf
add
mov
dec
jmp
pop
xchg
sub
mov
faddl
aas
test
into
cmp
jmp
dec
shlb
xor
xorl
mov
cmp
loop
loope
or
mov
inc
inc
pop
repz
and
adcl
gs
lea
sti
cs
data16
mov
jmp
and
sub
push
test
lcall
mov
sub
cltd
sub
sub
sub
or
pop
shl
push
jp
jb
or
lahf
imul
lea
or
stos
bound
add
push
jbe
dec
test
pop
sbbl
jne
pop
pop
xchg
ljmp
faddl
fistps
rcll
dec
sarl
pushf
test
out
cmp
mov
jg
ret
push
adc
sti
dec
xor
xor
imul
jl
testl
pop
xchg
iret
adc
push
or
daa
pop
mov
loope
mov
mov
sub
lock
movsb
cmp
test
sub
pop
movsb
bound
into
mov
push
movsb
xchg
xchg
cmp
cmpsl
mov
dec
xchg
push
cmpsb
add
fdiv
mov
lea
push
mov
mov
and
arpl
push
rclb
nop
pop
ljmp
mov
insb
or
and
lea
decb
push
lock
cltd
inc
gs
mov
and
rolb
and
lcall
mov
sub
mov
mov
jbe
aam
add
push
push
clc
mov
push
rol
or
jl
push
pop
data16
cmp
mov
push
aas
xor
cwtl
out
clc
fs
xor
pop
cmc
pop
ffreep
in
sahf
nop
pushf
jge
xor
and
or
sbb
cmp
and
jmp
lods
arpl
outsb
push
xchg
push
jo,pt
arpl
push
push
pop
adc
xor
loope
insb
sbb
inc
xchg
sbb
sarl
ret
xchg
mov
or
sbb
dec
movsb
lea
jl
nop
rorb
adc
pop
shlb
cld
iret
mov
or
imul
add
jmp
test
fmull
sub
and
and
pop
fdivl
rclb
or
sbb
xchg
aad
ljmp
loopne
adc
cld
shr
mov
imul
popf
mov
inc
and
dec
or
pusha
jecxz
xchg
outsb
push
sub
xor
cld
inc
add
ret
sar
ja
jne
sar
dec
cmp
jbe
push
outsl
mov
or
subb
jae
mov
cmp
lret
lea
not
and
decb
jne
add
sbb
out
sub
lea
xor
sbb
pop
add
push
or
lods
fldl
iret
cld
add
pop
and
xchg
push
add
push
or
std
mov
pop
clc
and
notb
in
notl
shlb
and
sti
add
sub
jecxz
bound
cmp
cs
js
mov
imul
or
bound
jno
xchg
lcall
not
and
dec
or
sub
stos
cmpsb
jl
fisttps
das
mov
xor
sub
add
mov
push
or
insb
and
ficoms
mov
lea
mov
inc
cmpl
or
adc
pusha
mov
add
rorl
inc
sbb
mov
lods
or
mov
sbb
mov
iret
push
fucomip
sub
lods
dec
push
mov
ljmp
inc
mov
addl
jp
je
jb
or
cmpsb
jecxz
repnz
pusha
dec
loope
or
sbb
pop
testb
dec
or
jp
push
call
aas
test
mov
push
or
xor
andl
mov
adc
inc
dec
xor
and
pushl
push
push
adc
mov
and
mov
int
mov
fildll
enter
adc
sbb
je
divl
push
jbe
insl
or
faddp
std
cmp
mov
inc
movsl
mov
pushf
pop
stos
imul
test
outsl
push
xlat
cmp
inc
mov
addl
xor
les
xor
push
repz
adc
test
stos
movl
and
inc
mov
movsb
adc
fucomi
fstl
xor
fwait
orl
incl
imul
push
push
mov
pop
mov
fisttps
add
inc
ljmp
inc
lret
test
incb
pop
pop
and
fnop
add
or
hlt
lret
or
mov
mov
rolb
loopne
in
popa
xchg
mov
sub
cmp
xchg
inc
sub
shr
mov
jbe
clc
or
push
insb
in
adc
movsb
out
jae
or
adc
cmp
jne
lock
call
dec
jne
bound
cld
push
je
clc
add
inc
dec
dec
mov
cmp
sub
sub
fs
mov
mov
inc
mov
lock
pop
test
inc
jne
or
lds
ljmp
into
xchg
or
adc
ror
xor
sub
pop
shr
add
imul
push
cs
mov
icebp
clc
mov
add
and
pushf
jle
int3
add
fnstcw
repz
js
enter
sbbb
push
pop
mov
pop
inc
stc
cs
clc
rolb
xorb
shl
int
pop
push
nop
dec
or
std
sub
or
into
add
sub
adc
lods
std
lret
adc
xor
decl
outsb
nop
hlt
fstpl
lea
jbe
int3
sbb
or
dec
shll
pop
push
lcall
lcall
add
adc
js
pop
outsl
adc
jmp
aaa
js
xor
test
iret
adc
push
adc
inc
insb
xor
and
int
dec
mov
sub
jl
popf
inc
std
mov
jge
das
outsb
in
mov
inc
dec
insb
pop
xor
push
sar
dec
adc
add
pop
jge
ret
and
xchg
movsl
cmp
xor
cmp
insb
sahf
loope
dec
je
fisttps
dec
push
fstps
fbstp
ja
push
push
push
add
dec
lods
adc
dec
lea
mov
out
dec
cmp
xchg
mov
push
pop
mov
lods
decb
into
mov
out
cmp
bswap
xor
cmp
dec
rolb
sbbb
cmp
dec
insb
cmp
lods
pop
cmpl
movsb
ret
inc
cmp
push
push
push
jge
jo
dec
add
shr
adc
cld
jo
sbb
or
mov
dec
or
test
cs
nop
cmp
and
decb
xlat
mov
push
fwait
out
ret
adc
adc
call
sbb
mov
jne
jmp
fcmove
jae
jnp
add
xor
aaa
jl
cmp
arpl
out
xchg
shlb
test
or
push
sub
rolb
pushl
sbb
dec
sbb
and
mov
mov
dec
pop
iret
jne
or
data16
jno
mov
inc
push
rclb
xchg
out
repz
shrb
mov
and
jne
mov
push
pop
aad
xor
leave
inc
test
inc
push
adc
mov
out
icebp
sbb
pop
lock
dec
dec
inc
dec
add
xchg
sbb
dec
dec
adc
mov
xchg
cmp
test
pop
mov
add
inc
mov
decb
jne
push
repnz
jp
or
sub
dec
mov
pop
pusha
dec
bound
dec
push
and
jo
push
clc
into
xor
sub
jns
jp
pop
mov
push
data16
das
pop
xor
mov
lea
cmp
inc
aas
jge
or
push
or
dec
hlt
pop
adc
jl
push
inc
push
inc
or
push
mov
mul
mov
mov
mov
addl
push
sbb
push
shrl
push
lea
daa
mov
dec
jne
cmp
add
and
and
add
icebp
loopne
repnz
sbb
in
cmp
add
pop
jb
or
xorl
clc
sub
add
fistpl
adc
cmp
xor
jbe
test
mov
add
ret
clc
xchg
or
push
add
add
mov
adc
pop
fcmovnb
xor
cmpl
mov
addl
adc
shlb
dec
mov
add
xchg
inc
xlat
orl
xchg
cmp
in
inc
inc
cmp
cmp
sub
or
push
mov
sbb
in
add
add
repnz
or
push
xchg
or
sbb
mov
pop
mov
orl
push
dec
push
test
inc
add
jb
xor
mov
pop
aam
fisubs
lods
fldl
xor
lahf
incl
adcl
loop
push
divl
push
cmp
jne
push
mov
mov
mov
sbb
lds
or
sbbl
js
push
adc
fdivrs
loopne
mov
cmpsl
pop
jl
daa
je
dec
shlb
imul
loop
insb
int3
push
mov
add
or
je
rcll
into
adc
movsb
shl
sbb
pusha
mov
pop
dec
mov
add
pop
or
jno
imul
add
subl
enter
cmpl
jle
add
add
lods
aam
xchg
dec
jp
hlt
mov
jne
popa
sbbl
mov
mov
stos
xchg
add
fldcw
call
movzwl
or
int3
test
scas
jl
lods
in
je
into
rcr
cmp
mov
push
stc
inc
rorl
subb
or
dec
test
enter
mov
sub
pop
xor
ja
or
adc
movsb
xor
xchg
mov
mov
ror
dec
xor
sbb
adc
sti
jne
inc
xchg
cltd
mov
lret
pop
add
fdivs
xchg
arpl
stc
sub
rcrl
mov
lea
stos
mov
leave
stos
mov
enter
orb
mov
iret
xor
mov
aas
insb
jne
jp
xor
adc
repz
shr
mov
mov
inc
fimuls
adc
xor
cmp
mov
gs
inc
push
cmc
jmp
sbb
dec
int3
les
test
movsb
xor
ret
jne
jns
movsb
in
add
or
nop
mov
sbb
adc
and
sub
push
xlat
aam
xchg
xor
inc
pop
dec
cmpsl
call
enter
and
xchg
leave
enter
and
in
repnz
sbb
xchg
xchg
dec
neg
lret
xchg
and
dec
xor
or
outsl
lahf
call
push
pusha
lahf
or
nop
xorl
aas
addl
mov
cmpsl
out
fdivl
or
adc
lahf
jb
mov
call
mov
mov
pop
mov
xor
hlt
xor
out
xchg
nop
cmp
lods
in
nop
lret
lods
ror
add
xchg
xchg
movsl
loop
sbb
enter
push
inc
xor
in
mov
xchg
sub
or
les
xchg
in
or
push
in
inc
jb
pop
in
leave
add
les
jb
popa
mov
mov
icebp
rol
cld
enter
cmp
mov
sysret
add
or
add
arpl
iret
shrl
mov
push
mov
mov
sub
lock
xchg
xor
sbb
adc
xchg
jno
daa
cmp
push
jns
cli
adc
xchg
loopw
lcall
mov
test
mov
cwtl
mov
xchg
test
push
leave
pop
xor
je
dec
cs
fwait
rcll
jmp
cmpsl
mov
sbb
shlb
shrl
test
or
adc
inc
dec
push
lods
inc
faddl
mov
or
push
inc
loope
inc
mov
add
mov
popa
cmp
lods
popa
adc
js
add
mov
cmpsl
outsb
jecxz
repz
ret
dec
or
or
mov
lret
pop
inc
add
mov
or
in
sarl
add
hlt
inc
ja
stc
mov
aaa
inc
cmp
mov
fmuls
nop
cmp
cmp
adc
ret
pop
test
mov
int3
pop
mov
lret
les
push
or
shll
enter
cmpsl
fs
pushf
rol
popa
add
xor
dec
sbb
clc
shll
sti
cld
std
cwtl
cmp
inc
and
xchg
movb
pushw
mov
fcoml
cmpsb
dec
imul
xor
jg
pop
push
mov
sbb
add
push
pop
sub
insl
push
lea
add
add
and
xchg
xchg
push
or
mov
xchg
and
lcall
add
push
fldl
or
fldl
or
aaa
jno
mov
and
mov
push
out
add
push
leave
pop
jbe
sub
cmp
rorl
mov
sbb
adc
cmp
das
in
mov
xchg
dec
je
add
push
or
je
or
sti
fsts
push
pop
xor
je
add
sub
out
sbb
add
or
push
js
xor
rcrl
aas
fwait
and
stc
fwait
add
inc
sbb
jmp
lret
xchg
adc
push
sahf
lret
add
pushf
cld
lock
xchg
aaa
clc
push
hlt
lock
adc
jbe
push
push
pop
push
call
push
adc
inc
sbb
lock
mov
aaa
jne
das
and
or
inc
lock
out
ficoms
pop
outsb
ja
jns
repz
in
mov
jle
in
add
gs
xchg
faddl
mov
sub
enter
dec
shlb
in
or
push
xchg
leave
push
mov
jg
push
pop
and
jne
ds
xor
call
sub
negl
dec
push
and
inc
ds
test
clc
add
push
call
xchg
inc
faddl
pop
or
frstor
popa
push
jmp
push
lods
sub
test
fmull
jae
sub
inc
jp
cmp
test
jne
int3
call
adcl
imul
mov
mov
push
pop
pop
aam
cmpsb
or
lcall
add
mov
mov
gs
adc
mov
je
xchg
mov
xchg
lret
sub
icebp
ret
js
test
adc
hlt
mov
mov
movsb
aad
add
sbb
xchg
lods
mov
test
or
sub
jmp
in
rol
ror
xchg
add
and
sbb
jle
or
inc
into
jne
dec
pop
mov
push
pop
mov
clc
dec
ja
ret
sar
xchg
or
testl
jg
xchg
dec
push
lahf
dec
sbb
pop
sar
fbld
ret
and
cmpsl
adc
flds
mov
mov
iret
iret
mov
rolb
loopne
lret
inc
mov
push
add
sahf
aad
std
mov
inc
jno
push
pop
ja
stos
arpl
mov
push
pop
cs
and
std
lods
push
into
andl
sub
lcall
mov
cwtl
mov
mov
dec
dec
push
pop
or
xchg
dec
popw
add
sbbl
xor
pushf
sbb
iret
mov
cmp
lods
in
mov
or
pushf
and
repnz
sarb
lods
es
mov
call
mov
push
or
inc
lods
add
insb
xchg
cmp
lahf
pop
call
cmp
inc
sub
in
adc
pop
and
cmp
jne
inc
xor
pop
xor
jne
inc
jne
cmp
inc
xor
xchg
inc
rclb
test
cmp
push
int
xor
cmpsb
outsl
lds
js
cmp
mov
lods
cmp
js
in
iret
jmp
ret
and
test
lea
mov
jg
loopne
cltd
mov
inc
jl
cmp
clc
call
bnd
popf
orb
add
and
sub
sahf
or
dec
mov
cld
sti
push
inc
cmp
fisttpll
jg,pt
popf
in
mov
jge
mov
mov
jbe
mov
cwtl
add
test
dec
mov
nop
cwtl
xchg
stc
mov
push
adc
push
loopne
adc
mov
popa
pop
sub
orb
sbb
cmpsb
fcmovbe
jns
daa
aad
shll
addr16
cld
rclb
dec
pop
lret
sub
inc
dec
lds
enter
jnp
jmp
mov
sub
jno
jmp
inc
mov
pop
mov
cmp
je
testl
insb
lcall
jb
ret
in
or
test
sti
jecxz
pop
lret
xor
mov
add
adc
std
xor
pop
xor
addr16
mov
jns
lock
fdivr
adc
insl
xor
mov
fbstp
shll
in
outsl
rol
add
jno
popa
and
sti
and
popf
mov
sbb
std
call
cmp
push
mov
shl
enter
mov
popa
cmpsl
pop
jb
jge
mulb
push
shrl
mov
inc
mov
mov
nop
std
lds
fistpll
arpl
cltd
sub
out
imul
call
push
jb
dec
or
jae
daa
rdpmc
sub
push
mov
push
fs
mov
mov
mov
xor
lods
mov
add
pop
leave
aad
test
sahf
aad
test
stc
sub
test
imul
test
sbb
adc
cmpsb
repnz
inc
pop
inc
inc
adc
sub
and
fld1
cmp
cmp
mov
sbb
call
sbb
std
lock
xor
jmp
cmpsb
ret
mov
jns
jecxz
std
mov
xor
inc
repz
mov
cmp
push
fdivrp
or
ds
cs
adcb
push
sub
test
sub
dec
jmp
dec
mov
push
push
cmc
rorl
xchg
lret
pop
lock
xor
jge
jmp
push
sub
sub
or
sbb
jge
mov
cmp
jmp
test
push
jle
mov
dec
test
lahf
xchg
jne
lea
push
lock
pop
xchg
std
dec
cmpl
sbb
fbstp
enter
pop
insl
mov
movsb
adc
js
sarb
pop
inc
push
inc
lret
or
dec
out
jne
cmp
xchg
sbb
jo
hlt
or
xor
inc
ds
das
push
or
xchg
clc
dec
pop
jno
push
je
sbb
test
sub
gs
loopne
cmp
inc
enter
das
and
rclb
and
add
les
iret
sarl
mov
adcl
mov
and
leave
and
test
and
pop
mov
nop
pop
and
cmp
mov
repnz
xchg
jno
push
or
jmp
push
adc
sub
cmp
ja
add
and
stc
dec
push
or
xlat
icebp
or
loopne
jo
lock
inc
ret
pop
pop
pop
out
fprem1
loope
xchg
ds
mov
lock
jns
lret
dec
cmc
dec
dec
push
dec
pop
lea
add
fsubrs
js
push
lea
test
leave
jns
jb
repz
movsl
call
mov
rcr
in
push
push
pop
leave
jns
and
and
leave
jns
test
lret
mov
pop
and
out
jb
jns
jns
pushf
xchg
xchg
xchg
int3
les
out
xor
aad
push
push
adc
push
enter
mov
sub
dec
in
ja
sbbl
xchg
outsl
movsb
xor
popa
pushf
inc
dec
push
and
lds
pop
jns
insb
scas
lods
test
mov
aad
lcall
hlt
aam
adc
enter
lea
pop
pop
movsb
push
cmp
out
cmc
loope
addr16
mov
insl
and
test
out
mov
in
test
pop
insb
dec
inc
cmpsl
add
mov
mov
mov
pop
inc
popa
imul
in
pop
pushf
pop
repz
stos
pop
mov
arpl
adc
pushf
and
push
xchg
jl
xor
aaa
mov
movsb
push
mov
pushf
mov
imul
leave
dec
jns
sub
enter
xor
pushf
movsb
bound
nop
sbb
aas
dec
repz
sbb
adc
test
inc
cs
test
test
scas
nop
test
xchg
stos
pushf
pushf
nop
fs
inc
scas
nop
nop
pushf
push
cmp
cmp
cmp
dec
mov
pop
rorb
add
adc
jl
mov
popf
shrl
mov
fcom
inc
add
iret
push
or
gs
cmp
cs
mov
test
mov
shr
and
and
mov
sbb
jg
adc
and
pusha
movsl
push
test
lea
push
stos
dec
mov
push
mov
adc
cltd
cs
add
cli
sub
or
lret
cmp
push
loop
add
cmp
test
lret
xor
jmp
adc
inc
xor
js
add
test
push
add
adc
pop
jg
dec
xchg
dec
rep
ss
neg
pop
iret
sub
mov
sub
push
xchg
push
add
add
rorb
xchg
cmpsb
xor
xchg
popa
or
xchg
popa
or
or
push
or
adc
filds
sbbl
dec
adc
push
and
xor
dec
push
pop
xchg
out
outsl
inc
or
jbe
jle
sbb
push
sub
mov
loopne
andl
adc
imul
leave
adc
enter
or
or
push
sub
dec
test
and
call
mov
sub
je
or
cmp
lock
ja
cmc
or
shrl
shll
fld
xlat
xor
adc
in
lock
rep
jge
mov
xchg
xor
sbb
adc
test
lock
or
enter
mov
test
sbb
add
sbb
add
pushf
pop
vcvtps2pd
jne
xor
test
enter
sbb
cli
jne
imul
or
int
jl
icebp
mov
divl
xchg
lahf
pusha
or
jp
ja
add
sbb
inc
sbb
cmp
dec
xor
jl
popl
out
push
mov
sub
cmp
inc
add
jne
push
pop
and
out
mov
sub
xor
js
loopne
stos
adc
data16
xchg
inc
add
and
pushl
or
inc
adc
pop
cld
push
mov
stos
pop
jg
pusha
outsl
mov
test
je
divl
adc
lods
fstps
pop
add
cmp
je
aaa
mov
sbb
pusha
mov
adc
push
and
jne
lea
popa
add
fists
add
les
mov
push
fstps
mov
je
jmp
bound
add
insb
mov
aad
lret
cmp
or
outsb
pop
inc
inc
jp
in
cs
add
dec
test
sub
dec
ret
dec
das
mov
repnz
mov
mov
mov
inc
push
in
inc
add
xchg
adc
pushl
sbb
loope
dec
jmp
shlb
dec
and
cmpsb
jno
xchg
mov
rclb
lahf
or
jp
filds
and
cmp
fwait
xchg
fisttpll
add
je
hlt
daa
clc
inc
imul
pushl
testl
jmp
ss
ret
mov
enter
sub
pop
aaa
test
pop
xor
lcall
ret
or
jae
imul
jge
lock
sahf
pop
adc
or
mov
push
xor
mull
negl
pusha
cmp
xchg
inc
push
pop
push
mov
fistps
rcr
shr
rcr
or
jne
div
pop
dec
ljmp
mul
pop
jb
cmp
or
cmp
or
xor
and
mov
or
fcmovu
fiaddl
lret
iret
adc
or
push
pop
push
cmp
mov
bound
jmp
jge
sar
pop
clc
mov
movb
pop
les
aas
data16
movb
mov
fcomps
push
icebp
dec
imul
xor
adc
push
and
pop
and
lea
xor
add
sbb
or
test
cld
sub
mov
xchg
cmp
cwtl
and
adc
mov
roll
or
call
jle
jecxz
sbb
inc
bound
cmpsb
mov
ret
cmp
out
mov
and
mov
lods
and
dec
lret
je
pop
dec
sbb
cmp
mov
inc
cmp
decl
jle
jne
lea
mov
paddd
mov
sbb
push
rcll
aam
push
ljmp
outsb
mov
in
dec
ret
cmc
jne
mov
add
lea
xchg
adc
in
xor
adc
pusha
loop
rcl
sbb
lock
jo
mov
imul
xchg
mov
inc
jne
lcall
add
add
jl
mov
push
mov
loope
and
push
pop
mov
xchg
jo
and
pushf
inc
stos
fwait
aas
add
lock
mov
sbb
push
stc
mov
adc
xchg
sbbb
inc
sub
dec
repz
add
push
push
mov
data16
lret
iret
add
add
add
sub
and
or
int
inc
sbb
lock
jo
push
xor
inc
or
mov
push
jge
in
loope
gs
mov
frstor
add
or
mov
push
lock
adc
lods
inc
rcrb
pusha
hlt
adc
add
xchg
int3
inc
cmp
push
sub
cltd
lock
scas
mov
push
insl
mov
jl
pop
cmp
loopne
and
xchg
pop
je
lea
and
cld
add
les
xor
pop
ret
out
mov
test
xchg
hlt
or
addb
insb
call
das
je
mov
fdivrp
iret
lods
iret
or
push
sub
or
mov
shl
push
adc
mov
out
loopne
xor
ret
sarb
xor
add
xor
jo
and
or
and
sub
push
or
xchg
jne
mov
mov
pop
inc
xor
push
xchg
mov
jl
cmp
je
ss
fmul
repz
adc
xchg
pop
lret
adc
outsb
or
cld
push
or
or
popf
adc
and
scas
and
pop
pop
mov
movl
mov
mov
jae
rorb
insb
clc
jo
push
jp
adc
icebp
lods
movsb
repnz
cmp
jge
add
and
jb
cmp
jo
and
inc
fildll
dec
push
mov
cmp
roll
inc
out
xor
inc
dec
sbb
aad
fimull
adc
and
outsb
or
jno
mov
push
dec
sbb
mov
sbb
mov
pop
or
jb
inc
sub
paddsw
lahf
push
push
xor
mov
push
cs
or
clc
cmp
lock
add
das
add
add
mov
push
cs
test
push
xchg
sub
inc
and
pop
dec
or
subb
pop
dec
push
lock
les
xchg
cmp
out
cmc
adc
sub
or
mov
ja
push
pop
mov
test
pop
insb
bound
shrb
jbe
add
or
sbb
out
push
push
fs
ret
xor
inc
movsb
push
and
jne
addl
sar
add
pop
push
outsb
and
sbb
int3
add
sub
and
js
test
repz
lock
sbb
or
and
leave
loopne
ja
and
andl
cmp
sbb
loop
sub
fs
in
mov
sbbl
pop
orl
sbb
cmp
lea
nop
cmc
push
scas
push
cmp
mov
jo
inc
lock
popf
sbb
sbb
push
sbb
int3
pusha
les
add
xchg
outsb
jae
sub
dec
or
dec
rcrl
push
or
add
cmp
icebp
imul
outsb
or
daa
and
mov
in
hlt
add
pop
add
push
aaa
push
add
outsb
push
and
inc
ljmp
inc
jp
mov
or
lock
divl
loope
shll
and
adc
jne
fs
inc
mov
jecxz
fcomps
shrl
push
jbe
pop
xchg
lea
pop
push
add
inc
sub
sbb
jmp
mov
push
xchg
push
push
mov
mov
push
or
cmp
or
adcl
idivl
push
les
mov
in
sub
je
mov
aaa
adc
scas
push
or
je
aas
push
cltd
xor
mov
aam
out
mov
jne,pn
sbb
inc
mov
cs
sub
adc
in
jbe
lret
jge
mov
mov
pop
mov
adc
and
fstpt
mov
sbb
rolb
lds
dec
jmp
push
dec
cwtl
inc
sbb
loopne
ds
add
xor
add
or
sub
adc
fnsave
lcall
jmp
pop
add
fmuls
jo
std
mov
je
enter
jmp
cmp
sbb
sbbb
pop
movsb
ret
xorb
mov
sbb
xor
movsl
mov
js
and
push
out
jbe
cmp
bound
and
cmp
jbe
loopne
inc
movsl
hlt
int3
std
jmp
dec
add
mov
cmp
or
aaa
dec
outsl
mov
cltd
imul
sub
jp
pop
cmp
inc
test
xor
popf
or
xchg
lods
push
jmp
mov
pop
inc
jg
push
pusha
pusha
sbb
mov
jp
sub
sub
xchg
fadds
inc
jnp
dec
push
hlt
jge
push
jmp
shll
mov
mov
in
fxch
adcl
popa
lcall
pop
je
cmp
push
inc
cmp
dec
mov
ret
sub
repz
mov
mov
in
daa
mov
inc
popa
xor
ret
dec
add
add
in
cmpsl
lods
pop
stc
sbb
jb
or
out
mov
movl
sbb
mov
add
adc
stos
roll
jo
xchg
shrb
inc
and
cmp
pop
dec
or
cmc
cmpsb
pop
mov
push
lcall
adc
int3
add
xor
movb
mov
mov
aaa
inc
cmp
xor
xor
cltd
or
testl
movb
fcom
cs
or
ja
cmp
testl
dec
jmp
xor
cmp
es
inc
inc
adc
stos
popa
je
pop
inc
push
add
lea
mov
inc
pop
je
pop
es
cwtl
mov
popf
jb
je
andl
xor
or
push
xor
loopne
outsb
adc
push
es
pop
mov
xchg
mov
or
ds
dec
call
and
cmp
and
inc
mov
mov
jns
fcmovu
add
xor
inc
pop
ficoms
pop
add
popa
adc
push
enter
ljmp
cwtl
mov
imul
inc
push
mov
out
xor
sbb
pop
fsubr
mov
mov
ss
and
aas
andb
mov
fldl
inc
stos
je
gs
mov
push
inc
dec
shl
psllq
push
ss
stos
xor
sub
mov
orl
or
rcr
push
push
add
and
shll
arpl
fs
jne
add
clc
pop
and
adc
jo
xchg
gs
push
xlat
aas
adc
or
pop
dec
je
enter
or
jne
repnz
test
loopne
cmp
push
sar
jp
rclb
adc
xchg
pop
dec
cmp
and
dec
dec
xor
aad
mov
sub
jo
hlt
xor
sbb
cmpsl
test
addb
popa
popa
lods
sbb
or
sti
or
out
int
pop
rolb
mov
loopne
pop
fs
push
frstpm(287
xor
xchg
pusha
mov
xor
imul
add
pop
push
dec
cmpb
ficomps
test
adc
jmp
rep
cmpsl
add
orb
or
or
mov
and
push
and
xor
ret
xchg
inc
mov
in
add
mov
jge
xor
pop
mov
or
movsb
pop
loop
out
inc
cs
mov
loop
sbb
inc
cmpsl
pop
pop
sbb
fidivl
jb
mov
movd
add
and
jle
and
andb
cmp
daa
adc
sub
mov
mov
inc
cmp
insb
loopne
adc
test
jle
and
add
jecxz
lcall
add
movsb
inc
inc
sbb
aas
dec
jp
cmp
mov
add
out
add
fildl
pop
push
cs
imul
inc
add
and
mov
or
jns
inc
sti
jle
incl
hlt
inc
adcl
sub
xorl
push
cmp
push
adcb
jb
xchg
andl
testb
mov
shl
mov
push
inc
in
fwait
cmpsl
adcb
mov
rorl
mov
inc
idivb
add
loopne
lock
sub
mov
mov
fmuls
push
add
jl
add
loope
pusha
push
dec
dec
notb
jae
push
imul
mov
ret
arpl
popf
bound
inc
mov
dec
jp
or
mov
push
mov
fiaddl
push
rclb
lock
pop
or
mov
mov
dec
mov
or
adc
lock
adc
in
div
push
roll
push
clc
pop
mov
sub
mov
or
les
jb
rcrl
add
clc
add
ret
sub
fadds
sahf
sub
dec
dec
jl
rorl
in
mov
adc
push
sub
idivl
mov
lods
pop
aaa
cmp
mov
sub
xchg
clc
jae
adc
add
es
sub
cmp
add
xchg
insl
imul
add
imul
push
jae
sbb
and
lods
notl
add
pusha
mov
mov
enter
inc
inc
adc
xchg
push
stc
xlat
aas
jl
adc
out
pop
test
pushf
cmpsl
repnz
nop
adc
ds
test
sbb
cmp
mov
mov
pop
pop
fnclex
sahf
dec
popa
xchg
test
adc
sbb
jne
xor
or
ficomps
sbb
sbb
add
sti
or
add
int3
out
pop
and
daa
inc
xor
push
push
push
xor
mov
add
popa
add
push
subl
stos
mov
insl
in
in
mov
jp
lods
xor
or
xchg
fcompl
cwtl
xchg
sarb
sti
mov
imul
cmp
jno
xchg
lock
andl
mov
aad
js
push
and
or
inc
push
es
movsb
movsb
jbe
or
pop
mov
icebp
ret
push
pop
cmp
or
adc
add
xorb
jmp
pop
ja
and
xor
push
pop
cmp
dec
add
sub
or
sarb
outsb
xchg
and
sbb
aam
push
cmp
ret
xor
mov
loop
pop
clc
sub
push
and
pop
add
push
mov
jne
fwait
push
mov
call
call
or
aam
mov
sub
adc
outsl
jo
push
mov
jae
adc
lods
push
jmp
imul
xor
filds
inc
push
fsubl
fsubs
jmp
mov
daa
push
push
push
mov
aam
leave
enter
or
ret
mov
inc
push
add
imul
xchg
mov
xor
add
adc
inc
jmp
scas
hlt
pop
inc
fsubrs
jbe
cmp
imul
enter
push
mov
mov
mov
loopne
cltd
imul
adc
cmp
loope
sbb
adc
mov
mov
cmpsb
rcrb
adc
or
arpl
imul
ja
shrl
mov
push
ja
cld
and
push
ja
incl
push
leave
mov
mov
leave
inc
enter
sbb
enter
arpl
call
mov
push
sbb
movl
sub
sbb
push
sbb
fnstcw
inc
mov
nop
pop
adc
xlat
mov
mov
mov
cmp
decl
rolb
add
repnz
mov
sbb
or
shrb
in
sub
decb
cmp
dec
dec
inc
loopne
jne
cwtl
int3
stc
sub
mov
push
andl
mov
or
add
addb
mov
clc
jg
push
push
add
in
mov
mov
mov
je
test
jle
cmp
jl
and
mov
fisubrs
enter
loopne
sub
adc
add
sub
add
idivl
xorl
outsb
or
push
and
out
jmp
adc
jge
mov
jae
xlat
sahf
sub
sbb
adc
ret
sub
push
xor
push
pop
adc
and
and
inc
sbb
shrb
jmp
mov
adcl
adc
xor
popa
sbb
ret
clc
adc
arpl
mov
or
push
sbb
and
jg
filds
test
popa
cmp
mov
push
mov
inc
or
push
adc
imul
add
add
push
js
mov
int3
mov
xor
push
add
add
outsb
or
jg
add
lods
xor
add
inc
pop
fcompl
jle
test
fwait
pusha
pusha
push
add
bound
push
push
loop
sbb
add
test
pop
jg
mov
xor
fs
pop
jl
mov
sub
movsb
flds
sub
leave
into
pusha
test
or
movsl
mov
xor
fneni(8087
orb
sarb
xchg
cmp
or
gs
add
jle
sbb
or
sub
sahf
arpl
fsubrs
mov
push
mov
mov
call
mov
add
inc
inc
push
clc
pusha
and
jnp
jg
pusha
ss
fs
jp
outsl
mov
in
cwtl
sbb
pusha
mov
pop
cmp
fcoml
ja
cmp
clc
cmp
jae
jo
push
insb
cmpsb
mov
cli
jle
pushf
jg
mov
scas
or
mov
fldpi
mov
pop
ret
jbe
xchg
lods
adc
xor
out
inc
xorl
cmpsl
and
and
push
or
test
inc
scas
rcrb
rolb
pop
flds
jle
mov
sub
movsl
and
lods
and
sbb
test
ja
lods
push
sahf
add
in
ffree
mov
aaa
lock
sub
testl
jbe
push
or
dec
or
add
and
sbb
xor
or
loop
mov
out
add
add
pushl
add
je
cmp
cmp
repnz
loope
push
dec
cltd
sbb
push
adc
in
xor
icebp
sbb
outsl
mov
cltd
ja
mov
pop
adcl
or
jg
add
scas
pop
add
idivl
jmp
cmp
or
neg
arpl
popa
xchg
je
mov
rcrl
mov
jmp
outsl
sub
inc
xor
sbb
rolb
mov
aaa
inc
sbb
nop
jmp
jno
add
add
mov
mov
call
sbb
mov
adc
adcl
add
fxch
out
mov
cmpsl
insl
or
pop
mov
jmp
xor
add
cmp
push
mov
cmp
sub
sbb
add
and
jp
fcoml
push
icebp
imul
inc
outsl
sbb
or
out
pop
popf
pusha
dec
xor
xor
jns
inc
mov
test
ja
mov
mov
mov
andb
stc
cs
sbb
stc
pop
je
pop
cmc
and
mov
ret
ss
imul
mov
and
add
fs
bound
inc
test
jne
mov
cmp
jae
push
cmp
xchg
ret
mov
inc
movsb
dec
and
loopne
adc
jbe
outsl
pop
jns
jle
pop
lock
jne
inc
ja
and
push
mov
popa
int3
into
push
ljmp
jb
mov
gs
movsb
sub
dec
inc
cmpl
push
mov
dec
dec
xor
and
movsb
jp
sub
stos
insl
leave
mov
icebp
cmp
scas
mov
lret
repz
add
sub
imul
mov
cmc
adc
lret
inc
shll
imul
or
jne
jmp
insb
out
loop
frstpm(287
or
push
fmulp
push
push
arpl
adc
dec
out
mov
in
pop
push
add
xchg
and
xchg
pop
jle
rcr
push
xchg
fistpll
pop
pop
xor
inc
dec
inc
pop
dec
jp
jecxz
sbb
seto
subl
shrb
mov
inc
push
or
aam
mov
loope
test
jle
add
cltd
sub
bound
pop
clc
dec
inc
cmp
mov
adcl
sbb
adc
add
stos
jo
jl
and
outsb
mov
mov
aam
repnz
pop
shrl
in
pusha
jbe
add
lock
in
fistl
xor
dec
jg
adc
orl
call
lret
pop
hlt
sarb
shrb
pop
out
or
sbb
insb
rcl
hlt
out
nop
fadds
mov
jne
jo
pop
scas
pop
and
negb
std
jb
popa
aam
mov
faddp
add
or
push
cmp
notl
hlt
cmp
ljmp
push
es
mov
and
fdivs
xchg
enter
inc
lret
xor
adc
jl,pn
repnz
xor
push
or
push
or
mov
mov
mov
nop
adc
xlat
je
cmp
adc
cmp
jb
cs
loop
testb
loopne
and
sub
push
add
mov
mov
inc
jmp
inc
movb
and
cmpsb
add
fbstp
cmpl
sub
pop
adc
or
aam
push
or
inc
adcl
push
or
call
jmp
das
xor
repz
or
mov
jecxz
push
out
xor
mov
mov
jmp
shlb
jl
and
pop
cmp
fstpl
pop
jmp
jecxz
inc
add
pop
or
pusha
je
sub
xchg
push
mov
add
pop
or
imul
mov
sub
fs
pop
sub
sbb
dec
jle
outsb
je
xchg
cli
adc
xor
lea
adc
cmpsb
or
in
add
mov
cltd
inc
int3
cmp
jo
fsubr
repz
mov
mov
popl
pop
push
std
pop
nop
loope
cld
push
jmp
and
je
insl
movb
mov
push
cltd
xor
cmpb
add
inc
mov
jnp
inc
movsl
dec
and
xchg
lcall
aas
orl
mov
mov
sarb
call
rcrl
ljmp
jbe
arpl
js
cmp
xor
out
shlb
lock
fs
pop
pusha
or
lods
movsl
push
mov
dec
movsb
adc
cwtl
push
movsl
mov
xor
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
mov
dec
cmp
pushf
fmull
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
testb
cltd
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
sbb
sub
sub
adc
and
mov
or
lock
hlt
and
lods
pop
sub
jle
or
clc
mov
nop
adc
cld
adc
or
sbb
or
pop
xor
and
or
aas
and
fwait
and
or
or
pop
pop
adc
repnz
jo
add
out
inc
ret
cmp
add
cmp
rcl
add
dec
jne
xchg
mov
or
lret
sbb
sbb
lea
imul
adc
adc
jb
std
or
xor
dec
sbb
xchg
test
es
das
sbb
popa
lcall
xor
int3
push
aam
repnz
lods
sub
push
add
gs
call
or
clc
adc
mov
cmp
mov
dec
inc
movsb
mov
fdiv
dec
add
pop
cmp
add
or
in
inc
pop
das
cmp
rcrl
sub
ja
push
add
add
ss
adc
in
pop
rcrb
test
add
push
dec
sar
fmuls
in
pop
addb
push
popf
fsubrl
int3
sbb
mov
mov
shlb
sbb
sbb
dec
sub
je
push
pushf
insl
dec
jnp
or
sub
and
and
mov
xlat
nop
mov
jge
insl
jecxz
and
add
mov
gs
ret
addr16
movb
fistl
test
cmp
xchg
pushl
add
add
dec
cmpsb
outsl
pop
xchg
incb
inc
dec
mov
popa
hlt
push
fwait
cmc
push
adc
jmp
add
ret
xor
and
jg
xor
push
loopne
jmp
jbe
out
cltd
fmuls
adc
cwtl
fsubrs
pop
pop
mov
mov
iret
int
add
popa
mov
fstpt
add
and
roll
popf
xor
cwtl
es
into
decl
loopne
loopne
bound
int3
cmp
adc
add
xchg
push
icebp
jle
or
or
jb
push
mov
pusha
mov
jmp
fsubrs
adc
sbb
cmp
enter
mov
xadd
and
xorl
pop
push
call
notb
sti
jmp
inc
push
shlb
fwait
mov
inc
push
fiaddl
mov
add
push
sahf
outsl
jmp
dec
and
add
in
add
bound
xor
inc
lahf
out
adc
cmp
xor
jne
fstpt
mov
or
in
mov
jo
add
push
push
test
xor
xchg
adc
and
out
imul
add
sar
mov
or
xchg
sbb
xchg
subb
sbb
aad
test
adc
test
xor
push
loope
sbb
inc
std
stc
popf
add
mov
inc
cmpsb
jno
aam
nop
xchg
inc
insb
sbbb
push
sbb
popf
mov
inc
pushl
mov
enter
jns
dec
sub
add
faddp
shll
inc
popf
pop
addl
pop
push
xchg
jns
pushf
ss
mov
inc
sbb
adc
mov
jno
into
outsb
pop
cmp
in
lods
mov
ret
mov
adc
push
hlt
mov
rorb
xchg
stos
jmp
lret
ljmp
xchg
into
popa
jp
sub
add
loope
insl
mov
mov
lret
xor
push
pop
mov
adc
inc
call
jmp
push
dec
call
lea
push
sarb
es
inc
cs
je
mov
jnp
xor
jge
dec
pop
pusha
fcoms
push
inc
fisubl
xchg
lea
jl
dec
sarl
sub
popa
pop
jmp
cmp
test
mov
cmpsl
incl
cmpsb
int
rcr
roll
push
or
out
rolb
jno
add
jecxz
xlat
mov
imul
cmp
jne
movzwl
ds
movl
sbb
out
jp
sub
int
push
jmp
pop
mov
je
jne
dec
pop
lock
test
sbb
aam
clc
fcoms
sub
aad
cmp
sbb
decl
lods
fisttps
cmp
sub
pop
movsb
xchg
adc
push
sysenter
in
js
sbb
dec
add
xchg
sbbb
popa
push
insl
call
neg
mov
push
xchg
mov
jbe,pt
sub
sub
scas
jnp
push
mov
cmp
mov
aas
js
mov
inc
cmp
cmpsb
aas
movb
inc
mov
jnp
jbe
adc
cmpl
fmuls
jo
dec
pop
push
and
inc
adc
ja
inc
add
add
daa
jmp
ss
or
pushl
roll
lods
in
movsl
inc
cs
dec
add
sub
rclb
sub
lods
push
orl
pop
dec
fistl
sbb
or
jns
mov
lret
bound
pop
add
add
aas
mov
push
stos
xchg
dec
dec
stc
pop
xchg
pop
mov
add
and
orb
add
sub
and
cmp
addb
test
mov
notl
pop
lock
sub
in
or
sub
out
xor
jmp
or
loopne
es
pop
rcr
ret
sub
faddl
test
test
add
fidivs
lret
jmp
or
and
push
sti
mov
out
inc
jl
lea
ret
ret
mov
mov
pushl
lods
adc
gs
mov
dec
sub
ljmp
scas
cmp
adc
jle
xchg
or
xor
cmp
mov
cmpb
mov
sbb
dec
outsb
jg
or
iret
movsl
loopne
or
cmp
pop
enter
and
push
ja
xchg
int3
test
jbe
adc
and
push
sahf
subb
ret
push
sub
loopne
fnstenv
lods
dec
sbb
incl
push
test
cld
sar
or
cmp
mov
adc
add
adc
arpl
xor
dec
adc
xchg
xor
jmp
packssdw
lods
adc
cmp
and
ljmp
test
adc
pop
push
add
inc
xor
mov
adc
add
inc
sti
jno
jge
mov
dec
jne
inc
sbb
push
test
xor
xchg
data16
sarb
or
shll
ret
adcl
pop
inc
inc
push
mov
out
pushf
cli
push
mov
ficompl
inc
mov
mov
add
mov
movsb
into
jo
aam
arpl
add
xor
xlat
cmp
cmp
nop
negb
xchg
movl
sbb
or
dec
push
sbb
or
daa
pop
notl
and
pop
mov
or
pop
inc
out
arpl
push
pop
cmp
icebp
sbb
rclb
nop
mov
fadd
notb
adc
jge
addr16
pop
sub
inc
adc
leave
or
adc
lahf
and
rclb
mov
jns
mov
fsubs
dec
and
sbbb
loop
lea
push
xor
lods
pop
pop
jbe
inc
and
jg
add
addl
xchg
mov
imul
pop
xor
add
iret
mov
push
xchg
inc
jl
lock
inc
js
ss
cmp
dec
xchg
sbb
mov
push
push
and
shr
push
lea
cmp
shlb
xor
in
mov
or
popf
mov
nop
push
popa
add
bound
js
xchg
jns
add
add
xchg
rcr
mov
mov
jge
adc
push
or
mov
test
adc
pop
dec
adc
mov
leave
adc
sbb
lret
push
jecxz
dec
sarb
mov
loop
and
mov
shrb
daa
movsb
arpl
test
pop
xadd
movsl
cmp
and
pop
add
sbbb
push
sub
pop
or
dec
jnp
stc
or
push
cmp
sub
sbb
push
cmp
cmova
mov
push
mov
jmp
sarb
insb
sub
inc
mov
test
sti
enter
mov
sub
fs
jns
sti
test
push
cmp
xor
ljmp
pop
jb
nop
dec
push
dec
pop
mov
jno
jg
mov
das
push
aam
inc
leave
add
sbb
dec
and
sbb
sbb
sub
sbb
and
sbb
cmp
pop
shrb
adcb
testb
dec
and
jbe
mov
dec
mov
insb
cld
adcb
cmp
jo
mov
int3
aas
repnz
das
adc
inc
dec
sbb
jl
push
jle
add
adc
adc
or
std
pop
xor
sub
or
add
or
test
stc
inc
xchg
mov
es
pop
mov
fs
jne
or
adc
test
or
inc
jnp
or
mov
test
jmp
loopne
mov
add
inc
sbb
mov
push
mov
dec
or
ror
push
jae
gs
push
call
rorl
and
in
scas
jmp
add
or
adc
push
inc
adc
rolb
adc
pop
mov
xor
in
add
pushf
pop
sub
je
push
cwtl
cpuid
cmp
add
das
adc
mov
and
data16
pop
testl
mov
stc
and
inc
jo
or
daa
or
js
sub
sahf
out
push
or
or
rcll
or
repnz
pop
lock
mov
dec
add
and
test
and
jb
xchg
and
mov
or
nop
nop
divb
loope
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
add
lock
push
jbe
cmp
test
adc
cwtl
push
in
test
add
mov
inc
dec
fildl
pop
lret
sbb
or
andl
sub
jmp
pop
clc
incb
jmp
sbb
std
or
jmp
inc
and
mov
and
mov
dec
and
jecxz
jge
push
cmpsb
mov
xchg
jmp
std
fldenv
cmp
add
and
dec
mov
cmp
add
mov
sbb
loope
ds
and
aas
pusha
adc
out
mov
pusha
loope
pop
sub
cltd
push
mov
dec
and
adc
out
and
fnstsw
pusha
pusha
popf
cmp
push
pusha
insb
loop
sub
adc
sub
adc
sti
add
pop
jns
testl
fisttps
inc
sbb
push
test
mov
dec
jne
orl
mov
shlb
or
testl
subb
pop
mov
jb
sbb
jmp
leave
int
jbe
and
inc
add
adc
outsl
movb
push
fldl2e
push
jecxz
mov
or
pop
push
cmpb
jb
adcl
out
add
cmp
jno
hlt
arpl
fadds
adc
push
xor
nop
clc
adcb
adc
xor
lret
mov
jp
or
inc
aam
xchg
push
dec
xor
aaa
sbb
inc
jp
in
xchg
fcompl
fnstsw
stos
adc
mov
add
sub
sub
jmp
push
in
shrb
push
push
or
fimull
mov
inc
inc
sbb
test
int3
adc
ds
sbbb
ret
pop
cmc
jnp
push
xchg
clc
sbb
ss
inc
adc
fstpl
xor
loopne
pop
adc
stc
into
jbe
or
pop
shl
or
fdivrl
xchg
mov
add
mov
div
pop
gs
jb
enter
add
xchg
push
inc
xchg
mov
into
pop
clc
sbb
pop
not
insl
in
mov
icebp
inc
call
fs
or
loopne
mov
adc
push
pushf
push
push
sahf
jmp
pop
movsb
or
in
aam
jo
adc
adc
and
andl
out
pop
aam
test
pop
sub
mov
jle
inc
lcall
add
loopne
aaa
sbb
pop
test
add
add
pop
popa
jno
loope
out
out
jne
push
push
shlb
mov
inc
inc
loope
add
mov
or
mov
fs
and
xorb
push
xor
add
or
test
das
adc
jg
sub
adc
or
and
pop
sub
push
orb
pop
sbb
push
mov
or
scas
mov
inc
rcll
push
pop
idivb
or
incb
jno
mov
dec
inc
and
add
cmp
and
or
mov
inc
adc
or
mov
push
mov
divl
fdivl
sub
pop
mov
jg
mov
fmul
dec
insb
lds
loop
mov
add
pop
add
cmpb
add
lea
push
or
in
or
sar
sbb
loop
xor
repnz
adc
cmp
jg
add
dec
popa
push
cmpb
sub
frstor
js
inc
jnp
adc
adc
cmpl
push
lret
sbb
dec
inc
jno
pop
cld
ret
xor
clc
jge
inc
sub
add
icebp
into
jl
loope
ret
sub
dec
cmp
sub
jg
or
xchg
flds
push
cmp
sbb
pushf
mov
xor
add
sbb
out
cld
jno
xchg
push
pop
fadds
into
enter
aaa
mov
jbe
push
imulb
pop
cwtl
sbb
mov
xor
test
push
push
stc
jne
dec
pop
or
mov
aad
icebp
sbb
mov
aam
gs
or
aaa
dec
pop
xchg
stos
inc
add
or
push
out
mov
out
inc
and
mov
je
mov
cld
push
add
sbb
sub
jp
sbb
ljmp
jl
mov
aad
push
fldl
inc
xor
popa
fcmovu
pop
sbb
loop
inc
flds
movzbl
and
adc
push
repnz
or
mov
mov
fldt
add
adc
int3
and
sbb
outsl
cmp
push
aam
or
jle
call
loope
jb
mov
adc
nop
mov
loop,pt
and
inc
je
sbb
adc
xchg
scas
push
mov
xchg
and
and
test
mov
mov
jle
fwait
cmp
repz
out
add
push
mov
test
popf
jbe
rolb
sub
adc
mov
mov
fidivrs
push
cwtl
inc
shlb
or
pusha
sub
cmp
sbb
xor
dec
lds
rorl
mov
jnp
xor
enter
movsb
lcall
adc
lock
adc
or
inc
loopne
sbb
insb
test
sbb
inc
je
push
inc
dec
test
mov
or
inc
shlb
sti
jbe
shrl
push
mov
mov
pop
add
adc
mov
or
gs
sbbl
insl
dec
gs
add
adc
pop
xor
or
ljmp
mov
mov
dec
subw
movsb
cmp
inc
inc
faddl
and
repz
dec
rolb
adc
xlat
jg
mov
fchs
mov
nop
xor
or
jle
shrb
sub
mov
sub
push
data16
add
mov
push
daa
mov
mov
test
jne
or
jl
mov
and
or
stos
stos
test
call
lcall
jg
test
mov
cltd
and
add
or
pop
cltd
sbb
pop
add
gs
dec
jns
dec
out
xchg
mov
xchg
loopne
lea
pop
subb
inc
rorl
cmp
or
in
pop
pop
inc
aam
loop
rolb
adcl
shlb
repz
push
cltd
shlb
idivl
mov
out
mov
inc
mov
dec
jl
sub
dec
jbe
dec
data16
daa
icebp
mov
add
test
cltd
js
xor
cmp
sbb
dec
outsb
das
lods
jg
adc
jb
incb
jae
mov
mov
adc
cs
sub
jns
and
and
cmpsb
fiadds
les
xchg
push
add
hlt
ljmp
sti
cmp
dec
dec
stos
test
ds
and
cmpsb
daa
stos
test
aam
xor
inc
inc
xchg
loop
or
rorl
mov
clc
out
ret
cli
out
and
push
cld
not
in
popf
inc
stos
insl
inc
je
and
cmpsb
and
sahf
pop
ds
push
or
push
and
icebp
jne
shl
and
mov
or
inc
shl
clc
loope
inc
mov
jl
mov
movsl
data16
fs
aam
les
inc
mov
pop
lahf
cltd
inc
jno
dec
mov
hlt
test
inc
jno
add
push
pusha
addb
mov
inc
sub
lea
dec
add
inc
sbb
dec
mov
fs
push
pop
xor
jg
xor
add
adc
dec
lds
inc
lock
push
sbb
add
mov
jecxz
mov
leave
fs
mov
dec
sbb
loopne
cmp
imul
mov
or
dec
add
or
pop
dec
xor
gs
xor
add
xor
out
xchg
mov
mov
out
and
add
add
lcall
ret
jge
dec
add
sub
shl
out
sbb
fldenv
aas
add
loopne
inc
adc
mov
add
loop
xchg
aam
and
bound
pop
pop
push
enter
daa
inc
daa
inc
push
push
repnz
adc
or
sbb
xchg
adc
adc
inc
adc
adc
lahf
aas
adc
sbb
in
push
and
adc
push
and
adc
imul
add
mov
mov
xor
push
and
jl
adc
sbb
cmpsb
xor
movsb
mov
shr
xchg
ljmp
mov
sub
lods
mov
lcall
aad
or
jmp
xor
or
xchg
add
push
sub
mov
int3
mov
test
enter
cmp
ja
push
dec
jmp
fs
outsb
daa
sub
mov
insb
jecxz
rolb
call
add
pop
cmp
inc
mov
jmp
add
jo
push
sub
std
sbb
mov
jmp
cmpsl
mov
in
jbe
mov
add
call
lds
cmp
jle
adc
mov
rclb
xor
add
ficoms
dec
push
mov
inc
push
jbe
push
lods
loopne
popf
adc
sub
or
sub
push
jmp
mov
mov
sbb
dec
ja
mov
ret
outsb
mov
mov
pop
jge
pop
jnp
jae
cmp
test
movsb
jbe
nop
mov
adc
dec
dec
jae
popa
inc
cs
imul
sbb
push
gs
pushf
mov
scas
inc
add
outsb
mov
dec
decb
dec
lods
out
push
sub
ja
adc
gs
orl
lods
jnp
or
femms
and
andb
cmp
mov
jo
test
mov
and
call
mov
shll
push
add
inc
test
nop
mov
rorl
pop
cmp
jnp
push
push
add
add
testl
push
add
rcr
hlt
pop
test
lds
fwait
mov
mov
mov
imul
mov
pop
rolb
or
jecxz
ret
jmp
mov
jmp
push
cwtl
pop
pop
ret
sbb
xor
push
mov
dec
sub
or
lret
dec
lods
lods
shll
xor
pop
dec
pushf
xor
sub
jge
neg
add
dec
adc
sbb
mov
and
cmp
stos
out
mov
sbb
rcr
cmp
mov
jge
jle
mov
sub
xor
jne
and
lods
inc
out
mov
add
test
addr16
inc
and
push
inc
mov
andl
rorl
cmp
jb
mov
dec
mov
and
lea
dec
or
xchg
es
mov
idivl
sbb
push
xor
and
and
and
pop
mov
nop
shrb
cmp
mov
cld
mov
sbb
ja
ja
out
xor
mov
pop
push
es
scas
movb
testl
mov
adc
les
test
int
filds
jne
inc
or
cmp
lods
mov
jne
hlt
int3
add
jne
add
jmp
mov
mov
jp
test
rcrl
pop
pop
pop
or
add
lea
inc
rcrl
mov
bound
add
sub
add
cld
lea
cmp
dec
lock
adc
and
jbe
sti
dec
push
js
subl
lcall
inc
cld
push
cmpsb
cltd
xor
stc
jg
add
push
sbb
jp
dec
test
js
and
add
pop
nop
shll
hlt
or
cld
pop
lods
add
or
shr
add
shll
gs
out
mov
sub
mov
jg
or
adc
inc
mov
les
add
notb
mov
lods
mov
ss
sti
jg
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
mov
aam
shrl
popa
es
mov
add
push
push
mov
and
mov
inc
mov
pop
add
fisubl
shll
fcmovbe
sti
pop
rcrl
push
out
fiadds
push
call
or
scas
fidivl
mov
jb
xchg
mov
fmull
or
fisubrl
orb
cmp
call
mov
pop
jmp
push
push
into
jmp
scas
jmp
rcrl
xchg
rolb
add
lcall
adc
shrb
add
jp
lret
jnp
into
mov
sub
add
negb
cmp
sbb
movups
sbb
xor
or
push
stos
mov
call
xchg
xchg
loop
lock
cmp
jns
out
push
rolb
cmp
xchg
divl
out
ficompl
dec
std
push
inc
lcall
lahf
inc
sbb
push
pushl
cmp
call
inc
sub
dec
test
pop
jne
cmp
add
mov
inc
mov
mov
mov
or
rorl
dec
pop
cmp
aad
mov
in
mov
xchg
sub
or
pop
sti
scas
push
xchg
xchg
adc
inc
cs
or
testb
stc
gs
or
decl
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
push
lock
inc
mul
pop
add
add
or
pop
jmp
or
pop
jae
sbb
add
clc
inc
cwtl
jecxz
or
xchg
testb
or
jl
jbe
lahf
xor
inc
in
sub
das
xchg
aam
xchg
inc
push
fdivrl
hlt
test
add
push
adc
insl
mov
xorb
push
pusha
xor
movsl
lar
pop
xor
or
das
inc
mov
addr16
rcrb
pop
xchg
mov
popf
cli
jne
inc
mov
shlb
fdivs
or
rorb
or
add
addb
aam
imul
pop
clc
jmp
lahf
push
cmpl
ja
or
lret
mov
mov
loop
aas
sub
mov
mov
add
dec
sarb
add
mov
loopne
ficoml
xor
mov
es
sbb
sbbb
add
add
lcall
jmp
leave
sub
sub
add
adc
das
sub
pop
xor
mov
push
mov
mov
out
dec
inc
mov
cs
add
mov
jl
repnz
xor
push
or
add
testb
loop
shlb
jp
or
push
sub
mov
push
repnz
sub
and
adc
xor
push
es
mov
lock
inc
mov
push
adc
jmp
ja
push
ret
jbe
shlb
add
dec
adc
shlb
jge
mov
rcll
ret
lahf
adc
pop
xor
shlb
enter
xchg
test
js
push
sbb
mov
mov
cs
js
mov
xor
sbb
add
push
mov
lea
jle
and
pushl
ret
xor
xchg
into
adc
testl
in
arpl
call
jo
inc
adcb
xchg
addr16
rorb
fsubr
inc
and
lea
inc
adc
inc
add
mov
cmpl
mov
mov
loopne
push
mov
fldcw
or
sar
out
dec
xorb
jno
lcall
mov
cld
push
cmp
cmp
lds
xchg
mov
inc
enter
aaa
adc
mov
inc
mov
sbb
dec
pop
call
into
inc
xor
leave
and
add
mov
addr16
and
enter
mov
dec
jecxz
and
fwait
mov
pop
aas
mov
jecxz
mov
jg
ret
daa
xor
or
jne
mov
cmp
sahf
movbe
mov
or
out
scas
test
movb
adc
popa
and
and
or
push
add
xor
sub
mov
mov
rclb
sub
adc
cmpsb
add
jo
push
movswl
movd
les
sub
ret
pop
nop
mov
data16
cmp
add
mov
add
dec
sub
js
lods
enter
out
pop
pushf
dec
cmp
ss
mov
push
cmpsl
clc
mov
or
jg
outsb
cmp
xchg
stc
inc
add
dec
lret
cltd
pop
shr
out
xchg
clc
sub
mov
push
shrl
or
cmp
jo
incb
push
push
xor
inc
or
or
pusha
add
adc
sti
xchg
inc
out
and
mov
pop
sbb
js
jg
clc
push
add
in
push
sub
or
inc
adc
neg
cmp
mov
lock
pop
xchg
add
inc
shll
pop
mov
dec
fs
sbb
or
lock
mov
cli
jne
inc
push
push
jg
lods
jb
jnp
and
dec
dec
inc
dec
and
pop
pop
or
or
jae
lcall
dec
andl
sub
subl
cmpsb
stc
in
or
mov
add
sub
mov
and
test
jbe
out
mov
mov
loopne
push
scas
pop
call
pop
fistps
js
mov
and
sub
push
imul
xchg
addl
inc
inc
and
inc
adc
inc
daa
jp
jge
mov
jne
and
adc
outsb
push
cs
push
mov
xchg
add
or
pusha
daa
out
into
mov
adcb
xor
filds
sbb
test
or
pop
or
add
pop
push
nop
dec
ds
shl
jne
cmp
dec
mov
inc
lret
jbe
sbb
mov
inc
rorb
push
push
lea
mov
stos
sub
adc
push
push
insl
push
jmp
insl
cmp
cld
cld
jl
fimuls
mov
mov
inc
aam
out
xchg
or
mov
inc
shlb
sbb
mov
cmc
inc
fsubr
sbb
jns
fldt
nop
call
je
or
push
ds
pop
data16
insb
outsb
lret
ss
inc
popa
je
inc
je
testb
jmp
xor
adc
xor
enter
cmp
scas
or
xor
dec
dec
xor
repz
les
jbe
call
call
dec
add
push
pop
clc
fstps
or
mov
or
inc
xchg
in
adc
inc
push
shlb
add
rol
or
mov
add
nop
sbb
into
rcr
sarl
or
lock
and
mov
push
inc
push
inc
push
or
ja
stos
fbstp
ds
jmp
repz
jbe
mov
addb
cmp
dec
movsl
sbb
sub
xor
xchg
rol
mov
cmp
jmp
sbb
mov
rcll
movsb
dec
jo
jo
and
movsl
mov
xor
cmp
lahf
dec
add
jbe
sub
and
repnz
je,pn
pop
popf
ret
sub
xor
dec
lods
dec
aaa
test
adc
mov
sub
push
mov
jne
clc
sub
push
cmp
xchg
xorb
mov
enter
xchg
sub
mov
pop
js
mov
inc
mov
adc
xor
sbb
mov
mov
cmpl
pop
lret
or
push
ljmp
push
mov
adc
adc
ss
and
dec
sub
or
jp
pop
call
jp
or
mov
test
adc
or
notl
cmp
mov
mov
jb
fdivs
jge
enter
pusha
mov
jno
adc
jecxz
lret
testb
sbb
xor
negl
mov
or
das
out
pop
cmp
add
xor
mov
mov
arpl
nop
add
adc
sub
sub
xchg
mov
push
jae
aaa
push
push
jmp
or
jmp
testb
je
push
ljmp
adc
add
or
negl
pop
scas
ss
int
jae
adcb
cmp
jne
cwtl
mov
xor
mov
aaa
xor
hlt
mov
mov
push
and
add
adc
icebp
adc
adc
js
push
push
sbb
jne
in
and
ds
push
push
mov
aad
or
cwtl
sbb
jns
push
imul
lea
mov
push
cld
cwtl
adc
fs
fcompl
or
mov
sub
rolb
adc
dec
xor
add
in
addr16
test
ret
jnp
mov
js
hlt
fsts
cmp
js
inc
or
push
mov
pusha
push
add
hlt
xor
repz
or
popa
mov
int3
fadd
movsb
or
xor
jnp
rcrb
xlat
xchg
loopne
adc
jge
imull
add
pusha
xchg
sbb
push
lcall
ds
dec
subb
ss
lahf
adc
adc
sub
push
pop
call
and
xor
cmp
icebp
das
mov
jmp
sub
in
mov
rolb
mov
orl
ss
es
fdivl
stc
inc
inc
test
data16
sub
aam
sbb
push
push
cmp
mov
push
outsl
cmp
mov
push
punpcklwd
pop
mov
jmp
push
lret
cld
jo
pop
fwait
clc
dec
mov
pop
in
mov
or
das
adc
fldcw
push
testl
shl
cld
pop
rcrb
in
repnz
push
orl
xor
push
cmp
sub
popa
dec
xchg
adc
or
sbb
sub
push
lea
aad
cld
sbb
mov
mov
pop
inc
xor
aam
mov
mov
leave
push
adc
sysexit
cwtl
pop
inc
push
ffree
ljmp
test
subl
test
adc
sub
inc
sub
or
cmp
adc
movsl
rclb
sbb
mov
inc
cltd
push
pop
decl
loopne
jb
lea
out
sbb
ret
mov
mov
add
lret
mov
adc
js
mov
inc
and
shll
mov
mov
mov
add
sub
jmp
mov
orl
or
push
cs
loop
xchg
lds
push
or
mov
jne
js
and
sbb
push
sub
orl
cmp
add
loopne
mov
pop
rorl
and
adc
es
or
or
xor
add
fcmovb
jmp
shr
or
mov
add
testb
or
bound
scas
push
or
mov
cmp
aam
test
shll
sahf
xchg
je
ljmp
es
fnstcw
jo
mov
mov
loop
ds
add
enter
lea
mov
shr
cmp
mov
pop
inc
mov
adc
sub
push
jp
adc
pop
add
mov
dec
push
dec
jbe
push
cmp
add
push
adc
out
jo
mov
cmp
sub
pop
and
xor
es
fiadds
cli
and
adc
pop
xor
or
shl
andl
and
aad
adc
push
add
ds
mov
into
clc
stos
testb
xchg
sub
or
test
test
scas
subb
sbb
lret
je
dec
call
aam
or
enter
and
cmp
faddl
xor
movsb
ficoml
sbb
xor
mov
mov
negb
xchg
out
sub
add
jne
pop
call
or
sub
pmulhuw
jne
add
call
and
add
dec
and
and
inc
cmc
outsb
inc
inc
cli
mov
jns
cwtl
cli
push
and
adc
push
cs
testb
orl
inc
push
ja
in
loopne
mov
adc
add
xchg
movsl
lret
pop
mov
fstl
jbe
cmp
lock
jl
cmpb
loopne
dec
fnstcw
mov
incb
push
dec
insb
xor
sbb
push
xlat
xor
stos
mov
adc
inc
push
push
mov
push
aam
shrb
push
iret
ds
inc
adc
fnstenv
lret
jne
xchg
inc
and
or
pop
add
sub
and
pop
inc
inc
gs
adc
sahf
mov
pushf
jbe
dec
dec
add
mov
lock
adc
enter
out
or
test
adc
push
mov
xchg
stos
fcmovu
add
shll
in
fisttps
test
je
mov
add
or
cmpsb
cs
repnz
mov
or
pop
pop
lcall
mov
jne
movsw
xor
stos
add
out
movb
hlt
pop
jmp
xchg
or
xchg
xchg
mov
jmp
in
scas
lods
mov
ret
hlt
xchg
stos
enter
adc
lock
div
fdiv
fiaddl
sbb
js
jns
sbb
inc
sbb
inc
jo
inc
xchg
sbb
xchg
adc
sbb
push
inc
and
fldcw
xchg
cmpsb
and
mov
xchg
inc
adc
sbb
and
inc
cmp
fisubrl
ret
fwait
dec
jne
insl
mov
pop
adc
mov
insl
stos
pop
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
aas
into
mov
idiv
mov
mov
cld
lock
je
scas
hlt
xchg
divb
or
add
sbb
push
rcll
or
and
test
and
add
adc
call
jne
xchg
ds
in
cmp
je
push
or
into
jbe
jns
add
ret
test
sub
sub
pop
into
mov
push
mov
add
push
add
fs
lret
pop
int3
sbb
cwtl
cmp
pusha
adc
xchg
sahf
rcll
and
sarb
pop
mov
push
pop
and
lock
xor
inc
xor
pop
dec
cmp
int3
ljmpw
and
jo
enter
aaa
dec
fidivs
or
pusha
mov
jge
dec
xor
dec
cmp
mov
sub
testb
mov
xchg
call
or
je
or
mov
mov
mov
cmpsb
sbb
jg
es
mov
je
les
mov
cmp
jb
cmp
ja
add
cmp
adc
cmp
jne
cmp
inc
push
inc
shll
leave
adc
mov
xor
idivl
pop
loopne
push
dec
add
test
push
or
adcb
adc
shlb
push
mov
xor
mov
xchg
outsb
sbb
xor
pop
pop
push
inc
or
cld
add
or
jmp
notb
dec
fdivs
push
xchg
js
mov
fwait
inc
ljmp
stos
imul
hlt
xor
or
imul
xchg
mov
sahf
es
sbb
cmp
cltd
outsl
hlt
movb
add
adc
push
hlt
push
push
pop
fsubr
aad
dec
pop
pop
mov
js
add
inc
adc
int
aam
add
outsb
xlat
mov
jno
cmp
push
lea
pop
inc
jp
inc
mov
cmp
cs
xchg
xor
xorl
push
xorb
sbb
in
or
arpl
sarl
adc
arpl
inc
test
add
mov
sbb
add
cmpsl
std
adc
movb
push
rcl
sarl
out
aam
xlat
fsubrs
mov
out
fstpt
mov
sbb
fidivrs
movb
jmp
or
push
in
rorb
into
or
cmp
test
mov
mov
divb
add
mov
mov
add
scas
mov
add
sbb
mov
pushf
and
sub
push
inc
out
xchg
divb
in
mov
call
pop
idivl
faddl
cmp
das
or
idiv
sbb
push
push
mov
bound
ret
pop
adc
push
test
sbb
pop
insb
mov
imul
or
adc
jg
sbb
dec
lea
sar
inc
shll
js
mov
les
or
fisttpl
mov
mov
out
loop
shll
mov
pushf
sub
cmp
adc
sub
outsl
push
adc
mov
adc
add
xor
sti
add
es
out
sub
and
jl
or
inc
mov
or
dec
xchg
push
or
adc
inc
add
hlt
sub
shl
mov
pop
testl
into
and
pop
cltd
js
lea
pop
sbb
lcall
mov
inc
ss
nop
xchg
ja
add
push
lods
mov
addr16
sub
in
inc
pmulhuw
ljmp
loopne
inc
or
sub
stos
mov
sub
test
rol
inc
jnp
dec
test
rolb
push
mov
mov
fstpl
dec
xchg
mov
or
or
dec
push
push
add
movsb
sub
cmp
pop
rcr
mov
movsb
sub
dec
repz
addl
mov
jge
jl
dec
rcll
cwtl
ret
and
rorb
stc
jle
jle
inc
fcomps
jne
jecxz
adc
enter
add
fbstp
loopne
cmp
shlb
les
ret
push
lret
lcall
test
adc
xchg
lock
dec
inc
lods
ss
shrl
shlb
shl
jmp
lret
dec
repnz
push
pop
add
lock
imul
mul
test
inc
cli
testb
inc
xchg
repnz
pop
adc
prefetcht0
mov
and
loopne
notb
stos
xchg
mov
mov
adc
test
adc
dec
push
clc
xor
repnz
sub
xchg
and
mov
rolb
cmp
clc
mov
jae
cmp
mov
lock
xor
add
push
ljmp
or
pushw
sub
loop
movsl
mov
jge
xchg
inc
or
int3
mulb
push
sbb
lock
xlat
mov
inc
andb
adc
xor
out
mov
push
in
inc
shlb
pop
jo
xchg
fdivrs
aam
inc
inc
test
je
sub
mov
lods
dec
add
icebp
inc
cmp
xor
ret
adc
cmpsl
call
push
cld
lea
fiaddl
xchg
fnstcw
int3
pop
insl
push
inc
add
inc
aaa
dec
lods
lods
rolb
cltd
add
sbb
clc
sbb
xchg
add
sbb
in
mov
negb
negb
gs
xchg
addr16
mov
cmpb
or
jge
or
xor
jno
sbb
jmp
add
jne
pop
push
stc
inc
sbb
in
inc
push
das
inc
inc
sub
mov
adc
je
cwtl
sub
pop
jbe
pop
sub
fildl
pop
adc
inc
add
inc
mov
push
add
test
pop
pushw
nop
cmp
cmp
mov
adc
adc
fsts
or
pop
shr
xchg
nop
mov
or
mov
shll
js
jne
sbb
neg
and
and
jbe
imul
jmp
loopne
clc
push
adc
lock
call
and
cmp
pop
andb
or
jmp
dec
icebp
ret
sbb
and
xchg
mov
lock
mov
add
imull
into
out
enter
or
or
cmp
movsl
push
test
stos
jbe
lods
xchg
sub
mov
and
mov
cmp
test
shlb
add
testl
jne
icebp
dec
sbb
sbb
testb
lock
inc
inc
pop
or
xchg
inc
in
aas
insl
dec
add
add
xor
push
jg
jmp
cmpb
or
add
dec
cmp
into
dec
mov
add
add
fadds
dec
xchg
mov
adc
mov
add
sahf
fidivrs
jne
dec
mov
jb
int
scas
xor
sub
dec
orb
icebp
loop
add
push
add
mov
ret
adc
movsl
jge
enter
or
adc
test
add
test
mov
lret
mov
ret
mov
dec
inc
and
or
or
adc
fisttps
jmp
cmp
and
xchg
push
or
add
lret
or
pop
pop
aam
iret
je
add
adc
ss
add
mov
mov
xchg
adc
popa
push
jae
mov
ret
mov
mov
pop
and
cmp
xor
into
pusha
pop
pop
adc
inc
mov
mulb
rcrl
dec
mov
enter
ret
jne
or
pop
mov
adc
inc
ret
and
adc
push
pop
jae
or
or
push
add
add
add
cmpl
push
or
add
mov
scas
movsl
and
pop
mov
cmc
and
pop
es
xor
out
pop
mov
and
and
and
pop
fabs
mov
mov
push
dec
pop
mov
xor
cmp
pop
pop
jb
push
push
add
shrl
cld
cld
iret
enter
je
ja
or
push
mov
jg
rclb
dec
addr16
sub
dec
popf
or
jge
adc
adc
pop
mov
pop
out
cmpl
ss
or
add
xor
mov
add
add
loopne
add
inc
xchg
pusha
mov
xor
in
lock
inc
jg
into
into
sub
pop
and
inc
pop
sub
push
pop
nop
dec
xor
pop
cwtl
pop
mov
cmpb
rolb
push
pop
add
lock
sbb
cmp
insl
pop
or
lcall
xor
cs
shl
adc
add
and
enter
add
bound
or
je
test
mov
inc
sub
lcall
sub
jmp
mov
lret
in
lret
push
xor
popa
testb
or
scas
sbb
int3
insb
aad
dec
xchg
jo
or
inc
leave
jo
jae
cs
lods
pop
fmul
cmp
push
xchg
push
mov
xor
push
dec
sub
lods
and
cmp
mov
loop
jle
xor
push
ss
ficomps
adc
sbb
jne
ret
and
daa
aas
enter
sub
adc
jge
gs
mov
mov
push
aaa
in
ljmp
pusha
pushf
stc
outsb
icebp
mov
inc
jno
jecxz
sbbb
stos
jnp
cwtl
dec
sbb
xor
and
and
pop
mov
cwtl
orb
andb
jmp
loopne
mov
mov
xchg
mov
loopne
inc
add
mov
out
je
push
call
je
jb
mov
lret
inc
inc
int3
call
jle
popa
out
enter
lds
dec
add
jo
and
int
jbe
push
js
jmp
or
xor
dec
imull
or
jl
mov
lock
fistpll
sbbb
sbb
pushf
pop
jns
push
sbb
mov
mov
add
and
loopne
jne
jne
cld
lods
test
mov
adc
or
dec
insl
mov
inc
jo
aas
sbb
jnp
inc
pushl
leave
and
or
pop
test
ja
testb
xor
mov
hlt
jno
inc
aam
pop
popf
mov
fcoms
dec
movb
pop
mov
xor
dec
sub
enter
adc
test
and
insb
psubd
je
mov
or
xchg
lret
fcoml
and
pusha
xchg
lret
in
dec
inc
sbb
clc
and
and
sbb
cld
pop
jge
lea
xor
pusha
push
pop
rolb
ss
imul
popa
add
movsb
xchg
lods
cmpb
jl
and
xor
in
sbb
inc
and
adc
dec
mov
adc
adc
push
add
inc
addr16
les
sub
or
pusha
add
test
inc
daa
jmp
push
push
xlat
pop
test
pop
xchg
jb
cwtl
and
fistl
lods
fsts
xorb
clc
or
and
lods
mov
sbb
je
loop
lahf
insb
iret
shrb
hlt
or
pop
sub
jne
push
inc
cmp
popl
lods
movsb
xor
jmp
imul
add
mov
fisubrl
imul
mov
cmp
inc
aam
xor
sbb
dec
outsb
pop
mov
fldcw
cmp
inc
add
xchg
rolb
pop
pop
jle
pop
add
pusha
mov
adc
rclb
test
or
pop
inc
fsubl
pusha
jns
cmp
dec
sbb
dec
shll
inc
insl
mov
add
addl
fimuls
or
push
xor
call
mov
roll
sub
fcomp
cmp
mov
xor
mov
test
adc
mov
xchg
pop
fistpl
pop
nop
sbb
sti
das
jae
fsubs
loope
out
adc
lods
loopne
jmp
dec
loop
adc
xchg
fisttps
sbb
out
cmp
mov
js
mov
inc
aas
xchg
pusha
and
mov
rcll
mov
add
aad
js
sbb
push
pop
inc
std
inc
sar
sbb
jge
pop
push
das
std
inc
sbb
pop
fs
sbb
call
push
or
loope
pushl
push
and
push
adc
cmpsb
inc
hlt
xor
sub
or
add
rclb
push
mov
xchg
pop
testb
mov
testb
or
ds
push
mov
inc
and
sbb
cs
xchg
stos
add
dec
popa
adc
fdivl
and
push
pop
or
xchg
mov
pop
test
fs
daa
loopne
inc
push
daa
ljmp
mov
bound
add
xchg
fistpll
scas
inc
std
andl
push
push
iret
add
aaa
push
cmp
adc
add
or
pop
inc
das
mov
loopne
mov
xor
subb
and
add
nop
or
or
loope
and
mov
mov
aad
push
out
cvttps2pi
mov
test
cmc
push
dec
fbstp
add
fld
adc
mov
push
xor
adc
jmp
fsts
jno
outsl
cwtl
mov
xor
ss
add
jmp
cmp
fcomp
pushf
fstpl
adc
test
cmpsb
pop
or
pop
push
xchg
push
push
jge
add
dec
sub
lcall
mov
and
dec
in
lock
push
jo
popa
xchg
int3
xor
or
mov
add
fsubl
sub
lock
in
leave
test
gs
loopne
mov
adc
in
in
pushf
fsubrs
aad
and
jbe
cwtl
jecxz
jbe
xchg
inc
enter
dec
outsb
inc
pop
clc
dec
add
jo
jns
loopne
dec
cmp
pop
fimull
or
shlb
insl
jb
int3
sbb
call
sub
orb
jp
jo
push
dec
rcll
jp
pop
sbb
xor
adc
push
adc
xor
sbb
mov
fdivs
data16
add
outsb
nop
push
pop
jl
mov
push
xor
loopne
cmp
xor
sbb
in
mov
jge
fldenv
xor
adc
cs
fwait
jne
cmp
sub
mov
adc
pop
xor
cmp
out
sub
jl
mov
mov
sbb
lret
cmpsb
mov
jns
leave
subl
mov
ss
sub
sub
inc
mov
sti
xor
mov
or
and
movsl
pop
and
jecxz
sub
pop
adc
call
loope
xchg
sar
or
xchg
sbb
test
movsb
aam
xchg
in
dec
push
aad
mov
or
in
mov
in
movups
pusha
shll
fadds
sub
fstpl
cmpb
lods
in
pop
in
lock
roll
lock
dec
repnz
pop
hlt
add
in
loope
push
jl
insl
repz
in
push
loopne
xor
lock
or
adc
les
fs
insl
mov
adc
xor
cmp
aam
pushf
call
ss
hlt
addb
mov
in
and
xor
sub
leave
mov
lods
andl
push
jno
loopne
cli
fadd
cmpsb
dec
sbb
cltd
aam
xchg
xchg
dec
imul
test
in
loopne
xchg
xor
test
cmpsl
rolb
or
adc
pop
pop
xchg
sbb
xchg
dec
xor
and
dec
xor
inc
mov
dec
fs
fld
insb
out
add
js
add
pusha
jl
lock
add
add
sbbl
dec
push
enter
scas
scas
and
jne
xor
xlat
stos
adc
cmpsb
in
inc
in
mov
sbb
sbb
aam
xchg
pop
push
pusha
in
in
outsb
adc
insb
inc
rolb
lods
cmpsl
jmp
dec
mov
call
mov
lret
js
test
xchg
adc
pop
xorl
data16
mov
sldt
sahf
aaa
hlt
nop
or
and
adc
mov
aam
xor
daa
jns
test
int3
aad
or
inc
and
fcmovnbe
pop
lds
xchg
mov
xor
loopne
mov
roll
insb
xchg
mov
lds
mov
add
in
adc
sahf
dec
call
mov
xchg
cmp
pop
fadds
push
or
stos
and
pushf
inc
insl
adc
and
and
hlt
mov
lock
inc
shrl
mov
movq
fwait
loopne
in
nop
enter
mov
in
negb
leave
popa
inc
nop
mov
xchg
cli
xchg
push
mov
sbb
fmuls
sub
or
ss
out
sub
dec
lcall
sub
cmp
fs
cmpb
loope
cld
dec
clc
out
mov
sbb
pusha
mov
jecxz
push
and
or
aam
sbb
mov
xor
dec
test
add
adc
add
sub
lock
mov
call
shrd
mov
daa
daa
enter
sbb
jge
and
inc
mov
movsb
test
sbb
and
rorl
xchg
out
ret
sbb
cwtl
pop
mov
push
adc
lahf
hlt
jb
rorb
nop
mov
fisttpll
subb
fsubs
xchg
dec
xor
xchg
popa
push
mov
fmull
or
das
sbbb
cmpb
xchg
xor
xchg
and
xchg
jbe
mov
shrb
int3
inc
mov
inc
xor
ficompl
das
unpcklps
mov
inc
adc
push
mov
fcoms
and
xchg
loopne
jecxz
add
fdivl
mov
sub
mov
push
ret
mov
es
or
sti
pop
enter
enter
ret
imul
xchg
lret
fdivr
dec
inc
xchg
test
mov
add
rolb
and
repnz
in
inc
jbe
addb
push
sub
xor
adc
aaa
xchg
pop
cltd
fs
add
and
adc
or
jne
and
xchg
inc
test
adc
xchg
sub
and
mov
push
sub
sub
lock
dec
and
sqrtps
xchg
das
jb
or
aad
pop
adc
dec
xchg
add
in
in
dec
loopne
xchg
ljmp
sbb
pop
xor
pop
lods
inc
mov
sub
pushf
or
rolb
adc
xchg
xchg
add
stos
add
push
inc
stos
jmp
loopne
test
adcb
cwtl
jne
pop
cwtl
push
ss
stos
add
sbb
outsl
enter
sub
lock
mov
mov
xchg
imul
sbb
xchg
imul
cltd
popa
sbb
pop
mov
or
jb
and
and
or
mov
mov
aaa
call
sub
push
lcall
aam
mov
movsl
mov
or
dec
and
in
sub
inc
xchg
push
jnp
dec
or
jnp
adc
sbb
leave
mov
xlat
lods
fwait
cs
mov
in
rorb
mov
sub
dec
cmpsb
mov
stos
adc
jl
or
in
sbb
adc
in
aam
xchg
add
add
push
arpl
lds
sti
stc
cld
mov
xchg
nop
incb
dec
es
popf
std
mov
in
repz
push
aam
xchg
lock
call
push
loopne
movb
push
cmp
in
sahf
sub
or
sahf
push
mov
loopne
dec
mov
adc
aad
xlat
or
or
or
or
push
shl
push
stc
shlb
push
push
imul
xchg
inc
mov
and
inc
int
lahf
cmp
jo
mov
fdivs
imul
inc
aad
dec
inc
je
dec
nop
daa
shll
pushf
fsubl
lods
mov
int3
enter
pushf
sarb
mov
cwtl
shll
fistl
dec
outsl
movsb
pop
test
dec
shrb
jae
lcall
pop
and
movsl
mov
push
test
inc
add
push
sub
jo
adc
or
or
aad
mov
mov
add
push
imul
push
sub
mov
jnp
add
popl
inc
lcall
inc
xchg
mov
mov
les
or
mov
jg
ss
and
add
add
sarl
jne
and
test
fldenv
or
cwtl
pop
or
sub
pusha
adc
pusha
rol
movsl
stos
cmp
jno
cmp
inc
jmp
mov
sbb
pusha
add
sbb
add
adc
push
pop
cmpsb
sub
ficoml
call
test
in
and
imul
test
ret
daa
nop
popa
push
mov
mov
js
xor
rclb
leave
addl
bound
xor
test
mov
inc
sbb
das
les
rorb
aas
movzbl
dec
add
dec
and
adc
enter
jno
sub
test
fmull
repz
xlat
push
dec
loopne
insb
les
mov
lahf
xor
xlat
test
mov
push
adcb
std
daa
and
std
mov
pop
adc
mov
inc
insl
xchg
add
insb
xchg
test
and
dec
xor
adc
test
lret
and
int
and
cmp
and
lods
dec
in
pop
fistpll
mov
xchg
xchg
jne
xor
inc
push
inc
mov
stos
faddl
fdiv
stos
arpl
mov
fdivr
adc
test
pusha
inc
aam
inc
mov
popa
nop
popa
xchg
cmp
std
clc
jmp
ror
cmpsb
mov
mov
dec
push
inc
mov
cwtl
mov
shr
push
mov
andl
fsubs
insb
jne
aas
fmuls
pop
dec
ret
lock
lods
or
test
jns
dec
xor
roll
xchg
jbe
push
outsl
xor
fwait
in
roll
lcall
and
in
scas
fs
mov
and
and
call
adc
cmp
scas
or
sahf
sbb
mov
xorl
adc
test
add
push
jg
dec
dec
pop
mov
movsb
loopne
shll
mov
rcrl
sbb
mov
rorb
es
pop
fildll
aam
or
xchg
pusha
mov
adc
and
sub
cltd
adc
adc
sub
iret
shl
dec
push
mov
loop
mov
cltd
movsb
sbb
adc
fs
test
insb
adc
inc
push
pusha
out
and
add
enter
enter
pop
enter
les
mov
andl
add
mov
in
in
in
dec
mov
popa
cltd
or
push
or
mov
or
sarl
mov
je
inc
fcompl
mov
shrl
mov
aam
and
mov
dec
stos
inc
inc
sbb
pop
out
es
cmpsb
pop
add
pop
push
sub
jb
aaa
clc
mov
outsb
bound
sti
push
xchg
in
inc
mov
pusha
aad
mov
xorb
ss
lock
movl
mov
ret
inc
dec
or
sbb
leave
sub
mov
outsb
or
or
cltd
shrb
push
push
jmp
or
xchg
mov
sbb
inc
mov
dec
add
jo
int
dec
xchg
and
cltd
push
leave
mov
or
ljmp
cmp
xchg
adc
or
add
adc
and
xchg
xchg
int3
and
sub
mov
pop
aam
iret
mov
ret
aaa
fsubrs
bound
aad
add
stc
or
mov
lahf
jne
lds
jbe
dec
aam
pop
dec
lea
stc
mov
sbb
test
add
push
sbbb
cltd
dec
out
call
and
and
pop
mov
cmp
mov
or
or
xchg
out
adc
xor
mov
mov
sarb
pop
fcmovne
mov
sub
roll
fsubrl
pop
dec
push
push
invd
pop
pusha
inc
fs
pop
lds
push
jb
push
add
xor
out
das
xor
add
movsb
cmp
or
sub
cmp
pop
push
out
inc
sbb
and
movsb
cmp
cmp
imul
psrld
aam
cmp
xchg
lret
add
adc
push
push
in
std
add
test
and
aaa
pop
int
xor
gs
test
or
cmp
inc
cs
xor
sub
and
sbb
ret
mov
lret
in
cmp
pusha
shlb
push
or
mov
jge
sbb
cmp
out
push
shll
nop
dec
push
sub
ss
test
adc
in
add
insb
ret
arpl
adc
pusha
test
test
call
adc
andb
scas
rcrb
pusha
je
inc
scas
adc
cltd
movsb
pop
je
test
and
xchg
jecxz
dec
mov
lods
fwait
stos
jo
fwait
and
js
push
mov
add
fsubl
nop
and
leave
leave
and
inc
test
pushf
dec
jb
mov
or
xchg
test
enter
outsl
adc
xor
mov
roll
lds
rorl
loopne
test
mov
and
sub
loopne
icebp
fnstenv
fdivs
or
call
cmp
adc
pop
ss
and
adc
add
inc
mov
add
jge
add
mov
mov
dec
pop
cmp
std
enter
add
or
xchg
or
movsl
aam
fldl
add
and
fists
sbb
and
pusha
inc
xor
jb
push
aam
add
fdivs
std
xchg
mov
jl
adc
cmp
add
ss
cmp
sbb
pop
or
mov
stos
mov
push
sub
jecxz
inc
pop
nop
cmp
divl
dec
psubsb
mov
sbb
enter
mov
enter
and
sbb
enter
sub
leave
mov
cmp
daa
pop
sub
sbb
in
incb
cmp
sbb
pushl
addb
sub
mov
mov
cmp
out
je
cmp
dec
stc
insb
stos
mov
mov
dec
or
test
adc
or
insb
sbbl
stc
in
push
loope
movsb
in
lret
push
push
mov
aas
mov
js
add
nop
sub
pop
mov
int3
lret
movsl
xadd
xor
test
sbb
test
inc
shr
enter
sbbb
int
sbbb
insl
sub
mov
adc
ror
pop
jo
cmpsl
andb
xchg
pop
ret
into
or
mov
push
jne
es
and
iret
adc
adc
sbb
push
or
call
inc
adc
cmp
and
xchg
inc
mov
loopne
adc
and
mov
and
sti
pusha
shll
xchg
push
call
mov
clc
das
mov
shlb
mov
or
ss
jo
roll
and
mov
lods
aam
xchg
adc
or
and
or
bound
sbb
stos
or
sbb
sbb
mov
clc
xor
imul
loopne
call
pusha
les
rclb
xchg
sub
insb
sbb
cmp
dec
fwait
hlt
scas
sysret
enter
les
lds
sbb
add
jl
mov
jbe
push
int3
cltd
cmp
aad
lods
cmp
or
sub
fsubrs
adc
sbb
push
mov
pop
repz
fprem
in
add
jle
inc
adc
xchg
mov
pusha
xchg
mov
mov
inc
daa
push
mov
test
movsb
test
xlat
mov
sub
adcl
or
scas
in
adc
les
int3
and
shlb
push
int3
xchg
clc
nop
add
ljmp
mov
or
cltd
inc
in
add
enter
addr16
jbe
sarb
or
adcl
xor
mov
jge
bound
test
mov
add
lock
adc
sbb
sbb
ret
add
add
push
push
xor
and
adc
mov
mov
sbb
arpl
insl
pop
enter
clc
add
enter
push
jnp
cmp
in
js
dec
sub
sbb
stos
mov
mov
jmp
dec
push
and
mov
add
jae
sti
clc
adc
dec
adc
adc
or
push
push
repz
hlt
cltd
loopne
cmp
cmp
das
ss
and
aam
fsubrl
or
mov
in
andb
pop
fcoms
fnsave
popf
jne
repz
loope
fidivrs
mov
and
or
pop
pop
dec
jmp
ret
mov
movsb
in
mov
dec
cwtl
shrl
loopne
adc
es
popa
rorl
test
fimuls
in
push
fmull
sub
imul
and
adc
xchg
sbb
add
pop
xor
mov
push
fadds
dec
fistpl
fs
imul
je
push
nop
pop
cltd
orb
jbe
icebp
dec
adc
inc
pop
insl
add
or
ficoml
leave
pop
nop
insb
adc
filds
faddl
adc
push
cmpl
dec
adc
mov
nop
or
adc
das
in
xchg
pop
outsb
int
push
xchg
cmp
push
lock
and
adc
cmpsb
lock
bound
aam
in
lahf
mov
aam
xchg
divb
mov
pop
push
loopne
lahf
lock
pop
inc
mov
jle
push
mov
pusha
or
mov
lahf
push
test
pop
push
add
mov
mov
fs
add
mov
and
into
daa
inc
sbb
push
jmp
sbb
mov
jp
adc
and
or
push
lea
sbb
fisttpl
push
cmp
xchg
mov
push
pop
out
aam
shll
fistl
add
hlt
mov
fs
fsts
or
call
push
mov
mov
push
jnp
push
add
cmp
push
pop
sub
push
cmpw
xchg
dec
aam
jo
cmp
cmpsb
pop
mov
std
imul
and
mov
nop
fwait
insl
mov
pop
rol
imul
xor
mul
pop
push
js
inc
scas
mov
mov
ljmp
dec
mov
fistpl
or
jnp
mov
add
dec
cs
and
shlb
leave
or
adc
aaa
dec
mov
out
leave
ljmp
cmpb
or
sahf
push
or
je
jo
push
pop
push
dec
add
incl
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
decl
inc
adc
pop
pop
popa
bound
gs
jmp
push
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
out
subl
adc
mov
rcll
xchg
adc
push
or
cmp
in
cld
outsl
cmp
adc
adc
roll
out
jl
sarl
aas
testb
pop
adc
jg
rol
roll
aam
outsb
je
jb
outsl
arpl
fs
sbbl
jb
push
dec
imul
dec
push
idivb
es
ret
jg
outsb
gs
xor
cs
adc
popa
and
xchg
pusha
sti
popa
je
outsl
outsb
push
mov
pop
lock
push
jnp
popa
rdpmc
add
call
mov
sub
xor
fbstp
outsl
jb
js
je
jb
gs
cmp
or
outsl
mov
jb
add
add
add
je
push
andb
je
mov
popa
jb
mov
inc
imul
dec
xor
xor
testl
insl
cmp
out
stc
sub
dec
and
jns
add
das
or
in
mov
dec
push
inc
inc
gs
insl
out
out
or
daa
dec
outsl
jbe
dec
arpl
out
lock
femms
jo
sub
addr16
dec
jne
repz
mov
inc
jo
imul
jb
push
inc
into
cmp
insb
adc
xchg
cmp
sahf
jae
xchg
xchg
cltd
mov
push
jne
xor
loope
and
daa
push
scas
clc
std
adc
aaa
sbb
dec
js
push
jne
pushf
jae
jbe
inc
sub
cmp
push
popa
das
jo
or
cmpsl
cmp
lock
mov
mov
add
push
test
shll
inc
test
std
shl
jmp
sub
sub
cs
movsl
cmp
cmp
ds
inc
lea
dec
push
das
pop
pop
adc
insl
cli
push
push
cmp
jge
jg
cmp
fildl
imul
out
adc
or
adc
lock
push
inc
insb
jae
repnz
fs
mov
inc
mov
cmp
mov
xor
imul
and
dec
push
push
insl
in
inc
sbb
or
dec
dec
inc
sbb
lods
and
add
xor
sbb
cmpsl
jp
inc
outsb
push
jo
imul
insl
push
xor
int
mov
je,pn
jo
ret
push
xchg
idivb
and
fsub
xchg
enter
and
scas
cltd
fsts
adc
or
xorb
insb
mov
and
daa
mov
jne
scas
sbb
dec
insl
and
insl
push
xchg
add
notl
sub
aaa
add
mov
sub
inc
lcallw
out
fldl
mov
and
in
cmp
mov
sbb
jp
xorl
push
pop
es
or
outsl
je
push
or
push
and
push
ds
lods
rorl
fidivrl
add
mov
xchg
sarb
daa
sub
es
and
das
arpl
cmp
arpl
dec
popa
sub
mov
in
mov
fiadds
inc
xchg
mov
imul
pusha
int
int3
or
push
sbb
lock
popa
pop
enter
xor
jo
and
gs
push
fistps
adc
int
push
or
xor
scas
shll
hlt
or
rol
dec
add
pushf
sahf
dec
dec
aaa
ja
rcll
test
outsl
outsl
lods
pop
and
jae
fs
mov
cli
jbe
add
inc
mov
mov
cmp
push
gs
sbb
mov
mov
xlat
outsl
push
or
jno
lret
mov
push
cmp
lret
xor
inc
aaa
sbb
push
pop
insl
in
ljmp
imul
icebp
or
outsb
popa
pop
or
push
jmp
pop
sbb
inc
insl
mov
mov
fldl
or
adc
and
push
xchg
cmp
out
dec
pusha
or
and
pop
push
fldl
mov
push
jae
or
arpl
jo
cmp
pusha
jo
sub
push
mov
rcll
push
sub
lret
inc
sub
scas
dec
andb
jmp
lods
and
cmp
cwtl
ja
mov
out
inc
inc
and
dec
mov
adc
cmp
jg
lcall
loopne
es
add
cmpsl
popf
sub
rol
das
lret
jno
sti
jg
push
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
data16
loopne
imul
fcompl
add
add
xor
sub
popa
js
jae
jno
jnp
je
pop
dec
pop
add
add
mov
jae
imul
outsb
xchg
testb
push
add
adc
add
mov
push
add
add
add
and
subl
cmp
pop
or
aaa
ds
push
pop
hlt
and
repz
push
js
or
sub
sti
mov
xor
xor
sbb
addb
in
add
xchg
test
add
imul
pop
daa
push
cmpb
push
out
int3
sahf
and
sub
jb
int3
push
int3
mov
into
jo
add
push
push
inc
add
or
push
stos
int3
js
jo
imulb
pop
dec
rorb
sbb
add
lea
cs
nop
xchg
mov
xchg
inc
cmc
and
xor
pop
push
adc
push
inc
or
xor
js
or
test
dec
add
and
dec
adc
loope
data16
int
test
loope
fs
in
cli
mov
push
push
and
and
sub
leave
inc
repnz
dec
add
test
sbbl
add
addb
ret
push
and
add
pop
add
sbb
pop
fiaddl
add
add
add
stos
pusha
push
mov
mov
pop
add
aaa
inc
push
pop
roll
and
jmp
addb
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
adc
dec
clc
stc
cli
sti
cld
std
inc
add
lea
push
inc
pushl
aas
sbb
or
cmp
test
fists
outsl
ja
repz
cs
jae
jb
bound
push
mov
inc
data16
dec
cmp
inc
arpl
mov
jne
daa
pop
lea
dec
mov
jbe
in
inc
outsl
js
push
push
inc
push
mov
aaa
imul
out
mov
xchg
mov
mov
in
sti
pop
jbe
dec
imul
mov
imul
ds
and
inc
jb
jns
sub
daa
pop
enter
in
adc
mov
aaa
call
arpl
pop
or
cmp
outsb
adc
rcrb
arpl
mov
push
outsl
shr
in
pusha
inc
jbe
push
push
push
outsb
pushf
push
fs
and
cwtl
sub
dec
pop
ss
popl
das
add
cmp
push
sbb
and
insl
es
dec
lahf
sub
cwtl
xchg
mov
xchg
pop
pop
pop
push
push
jae
imul
pusha
insb
mov
xchg
add
movsl
jae
addr16
xor
ja
das
outsb
gs
mov
data16
and
dec
testl
into
mov
outsb
mov
push
cmp
push
scas
dec
jge
push
sbb
aas
jg
mov
imul
sbb
fistpll
xor
jae
and
jg
cmp
push
sbb
jg
test
mov
or
stos
outsb
aad
das
je
outsl
xchg
push
mov
mov
popw
stc
iret
rcrl
pop
cmp
cmp
add
ds
push
das
push
sub
cmp
push
jle
sub
sub
cwtl
jnp
into
addr16
sub
sub
push
xlat
ret
gs
inc
jmp
movb
lahf
cmp
push
dec
in
mov
pop
pop
cwtl
jb
jne
shrl
push
jb
imul
mov
ss
lret
pop
loopne
sbb
cwtl
pop
popa
pop
es
jo
sub
mov
jl
lahf
sahf
out
outsb
sub
or
inc
add
clc
add
loopne
sahf
out
aam
shlb
add
sti
push
in
cmp
mov
inc
push
xchg
nop
out
sahf
out
mov
xor
lahf
jo
or
add
int
jge
dec
inc
shrb
fs
adc
cmp
out
pop
scas
cmpsb
push
out
cmpsl
cmp
addb
cmpsb
dec
cmp
repz
inc
push
cmp
xor
repz
repz
and
adc
iret
aas
iret
or
hlt
incl
sarb
jl
cmp
cmp
repz
clc
incb
mov
cmp
repz
inc
cmp
add
jns
out
std
lock
movsb
int
jns
jl
sub
in
sarb
repz
jo
sub
push
cmpsl
pop
aam
lcallw
shlb
jns
push
xor
sub
ljmp
cwtl
cmpsl
pop
push
sub
aas
sbb
jae
jb
xor
dec
test
lods
movswl
das
in
sub
add
sarb
insb
cmp
inc
mov
inc
dec
jae
insb
inc
gs
insb
inc
push
sbb
dec
inc
dec
xor
jg
ret
scas
inc
dec
dec
dec
push
push
ret
push
dec
inc
dec
add
dec
dec
inc
add
ljmp
and
adc
sub
adc
and
std
incl
popa
into
mov
mov
cmp
inc
loop
mov
ds
pop
adc
jg
cld
clc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
fcomip
das
in
scas
jp
adc
fisubrs
xchg
out
enter
cmp
dec
imul
sti
dec
lret
add
inc
mov
mov
sub
fwait
mov
inc
sbb
pop
jns
ds
xor
incb
fisttps
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
lcall
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
mov
loopne
cmp
inc
mov
xchg
push
pop
mov
ds
xchg
mov
scas
lods
rclb
mov
std
xchg
cwtl
iret
adc
push
pop
jg
dec
enter
hlt
and
or
insb
sahf
mov
jle
add
push
sbb
push
push
ret
lods
inc
inc
or
outsb
jbe
and
add
out
mov
inc
xorl
gs
out
out
cmp
push
bound
out
aam
dec
push
dec
push
sub
out
dec
mov
sub
add
cs
sbb
ds
sbb
cs
dec
add
std
out
call
adc
dec
pop
push
pop
sub
or
dec
daa
add
sbb
sbb
inc
push
inc
inc
pop
ds
sub
sbb
adc
jbe
push
or
lods
mov
sub
cmp
sub
sbb
jle
fstpl
pop
xor
add
sbb
pop
sbb
xor
push
cmp
sub
aas
adc
inc
inc
adc
or
and
lods
cmp
fistpll
or
ljmp
cmp
sbb
js
and
das
adc
sub
daa
push
cmp
cmp
inc
out
sbb
mov
push
and
push
push
push
sub
cmp
cmovle
sub
mov
push
cmp
xor
orps
or
push
push
sub
inc
xchg
pop
dec
jnp
ja
dec
push
push
add
or
sbb
and
adc
or
adc
inc
mov
je,pn
lea
push
or
ss
sbb
and
pop
adc
std
xchg
cmp
push
pop
sbb
sbb
addr16
popa
inc
sbb
adc
das
sbb
xor
cmp
rol
cmp
int3
or
or
push
fadds
outsl
dec
adc
out
push
call
ds
sbb
adc
js
sub
stos
pushf
imul
popf
cmp
push
mov
add
mov
cmp
es
pop
push
gs
xor
jb
es
push
dec
push
push
xchg
mov
and
xor
push
das
and
aas
push
add
in
add
inc
push
mov
sbb
inc
sbb
ja
lds
push
xor
ds
movsl
inc
inc
jnp
ljmp
add
fs
adc
dec
cwtl
in
push
cmp
mov
daa
jo
push
xchg
xchg
sahf
out
sahf
xchg
lahf
mov
dec
repz
lods
ds
push
xor
stc
mov
push
out
add
adc
cmpsl
stc
sahf
push
adc
clc
daa
push
out
sub
push
cmp
bound
push
add
sub
mov
scas
adc
sub
inc
test
daa
adc
jp
lahf
loope
adc
push
popa
push
and
or
inc
popa
outsb
bound
lods
adc
push
jmp
popa
add
add
imul
push
xor
mov
clc
popf
cvttps2pi
cmp
mulb
ds
aas
ds
iret
repz
push
test
mov
jns
aas
dec
dec
pop
gs
lahf
out
xchg
imul
shlb
arpl
jno
pop
adc
pushf
fdivl
dec
sbb
pusha
push
pop
adc
mov
adc
adc
xor
clc
fisubs
sbb
sbb
loope
scas
push
pop
sub
cs
std
into
aad
push
pop
or
or
sub
xor
nop
pop
or
jmp
xor
push
repz
xor
or
pop
daa
pop
aad
jae
xor
push
jmp
mov
pop
arpl
daa
sub
in
add
or
or
inc
pop
pop
mov
and
insb
pusha
cmp
fildll
rorl
inc
cmp
pop
or
pushf
add
pop
pop
xor
shll
mov
iret
faddp
cmp
dec
cmp
and
out
adc
ret
test
out
sub
ret
cld
xor
inc
push
or
pop
adc
jecxz
sbb
mov
inc
scas
jge
xor
mull
hlt
xchg
push
outsb
scas
sbb
push
add
adc
inc
sub
or
frstor
aas
xor
xchg
dec
adc
nop
fldcw
adc
pusha
sub
cs
test
and
out
adc
mov
das
push
cmp
je
jbe,pn
daa
add
lods
out
pop
cld
jbe
inc
pop
pop
shr
sarb
cltd
pop
or
add
into
fidivrl
or
daa
and
add
and
out
jo
rcrl
inc
pop
and
or
pop
xchg
jle
mov
xchg
cmp
cld
cs
out
jmp
sbb
pop
mov
or
mov
jb
adc
daa
add
jle
subl
push
add
push
sub
ds
pop
push
dec
or
cmp
add
sbb
mov
testl
pop
push
inc
insl
sub
icebp
jle
xchg
lcall
sub
or
sbb
sahf
sbb
push
popa
cmp
xchg
out
cmpsl
daa
lds
xor
in
test
int3
loopne
loop
lods
cs
or
inc
popa
mov
in
adc
xor
xor
dec
out
pop
dec
es
inc
and
adc
mov
mov
dec
xchg
or
popf
sbb
pop
shrl
sbb
cmp
inc
adc
mov
sub
ja
insb
loope
adc
jbe
xchg
or
add
jmp
inc
lret
or
push
mov
hlt
gs
pop
shlb
cs
int
test
mov
and
decl
dec
sub
bound
inc
inc
add
rorb
pop
or
lods
inc
daa
mov
or
cs
sub
or
sub
xor
xor
push
or
movsl
pop
add
cwtl
mov
pop
jnp
pop
and
les
fcoms
lods
sub
adc
xor
sbb
adc
cmp
pop
add
push
pop
pop
sbb
or
push
inc
sub
push
std
cmc
or
aas
inc
push
add
or
pop
mov
cmp
or
push
mov
sbb
pop
insl
movb
ljmp
popa
shll
popa
jp
mov
xor
add
cld
push
sub
ds
jae
insl
popa
imul
sub
push
push
fsincos
sarb
push
push
popf
mov
fcoms
inc
push
adc
push
rclb
push
leave
enter
stc
cmp
push
rolb
imul
mov
test
addb
cmp
and
add
sub
iret
pop
adc
outsb
or
mov
jns
fiaddl
or
aas
pop
push
std
pop
sub
or
or
pop
mov
sub
inc
mov
fsubrs
pop
mov
sub
inc
dec
pop
daa
lret
pushf
jns
fists
inc
sbb
in
inc
dec
or
mov
cmp
and
sub
loopne
mov
xchg
add
js
pop
lds
add
dec
jge
fisttpl
and
pop
mov
add
rorb
popa
inc
cmp
push
add
sub
fistl
les
sbb
cs
testl
mov
sub
xor
sub
inc
and
jl
and
push
sub
sbb
aaa
inc
pop
out
sbb
int3
mov
cs
cmc
call
rcrl
insb
outsl
jb
bound
cmpl
je
add
dec
and
jae
popa
arpl
pop
xchg
je
aas
notb
sbb
xchg
dec
insl
je
ljmp
and
xor
js
add
add
adc
inc
inc
jae
push
cmpsb
fwait
popf
imul
and
incl
outsl
cmp
dec
push
push
push
das
xor
add
dec
sub
in
arpl
stc
pop
sbb
mov
fildll
inc
das
adc
rorb
filds
sub
out
outsl
inc
mov
dec
push
das
cmp
xor
je
sub
fisttpl
jae
push
rorl
lock
push
sahf
push
jb
clc
xchg
jb
arpl
jns
imul
xchg
fnstsw
je
xlat
out
push
out
call
or
fadds
inc
add
inc
cmp
loop
scas
mov
incl
jnp
dec
pop
xor
push
dec
push
sbb
xor
rcr
push
inc
adc
inc
das
dec
and
das
das
cli
cmpsb
dec
push
dec
dec
push
xchg
dec
cs
daa
dec
test
sbb
iret
dec
cs
xor
jne
or
inc
inc
popw
mov
pop
adc
jle
fisubs
and
xor
mov
sbb
insl
fisttpl
xor
lock
addr16
add
test
daa
and
dec
sub
enter
mov
loop
sbb
adc
ret
and
loopne
jno
or
out
adc
sbbl
or
push
aaa
bound
xorl
inc
or
inc
mov
adc
xchg
ds
jbe
and
push
aas
hlt
jne
adc
into
sbb
cmp
jmp
sbb
sbb
xlat
dec
push
notb
pop
dec
loope
and
push
xor
pop
and
push
daa
test
mov
into
adc
adc
ds
adc
loopne
das
add
pop
pop
aas
lds
in
adc
pop
pop
or
inc
xor
push
or
inc
popf
daa
das
sub
and
sbb
pop
shrl
lds
je
call
out
adc
pusha
test
jns
add
push
sbb
mov
in
dec
mov
movsb
jecxz
xchg
in
xchg
out
std
add
cwtl
mov
daa
aam
insb
cwtl
sbb
mov
sbb
and
xor
push
jo
adc
icebp
nop
shll
call
addb
lock
sarb
push
jge
inc
sub
cmpb
pusha
movsb
aas
dec
cwtl
pop
and
insl
and
push
call
dec
cmpsb
cmpsb
sub
sub
jne
cmp
adc
fdivs
mov
jns
and
xlat
aam
sub
jl
imul
test
jae
mov
push
test
xor
push
es
inc
jge
pop
inc
pop
pop
push
cmp
mov
adc
pop
inc
pop
cmpsl
push
jecxz
imul
adc
sbb
fistps
mov
pop
pop
adc
mov
pop
inc
daa
xchg
pop
sbb
jnp
test
push
jnp
lret
dec
sub
mov
inc
pop
sbb
mov
mov
pop
mov
gs
or
fstpt
xchg
icebp
sub
imul
inc
cmp
mov
sub
adc
push
or
das
mov
and
push
xchg
push
or
call
mov
jl
dec
faddl
std
jecxz
dec
inc
daa
cmp
insb
xor
sbbb
pop
call
lds
and
add
enter
or
push
fcmovnbe
in
add
or
cmpsl
push
hlt
xchg
imul
ret
add
jge
dec
orps
and
or
pushl
pop
push
or
or
push
pop
push
inc
push
add
or
mov
add
or
mov
dec
sub
pop
int3
dec
inc
add
or
or
pop
push
adc
je
and
mov
xor
xchg
xor
sbb
clc
xchg
ffreep
test
sub
or
daa
or
lock
xchg
es
ficomps
jmp
scas
inc
dec
dec
test
pop
inc
cmp
dec
movsl
and
or
xor
fdivp
adc
inc
stos
or
cld
push
adc
je
cmp
cmp
cmp
out
push
imul
in
sahf
xchg
cltd
or
es
test
ds
add
sarb
in
in
sub
mov
and
scas
xor
sbb
cmc
xor
jnp
stos
inc
sub
pop
add
gs
add
adc
mov
sbb
jno
out
adc
insl
xchg
ss
and
cmp
sbb
aam
lods
dec
xchg
cmp
and
dec
pop
xchg
testb
inc
push
dec
xor
aas
cmp
jbe
in
add
fiaddl
push
fwait
push
push
xor
inc
dec
ror
xor
xorl
fcomps
test
mov
push
pop
pop
movsl
adc
arpl
outsl
mov
ret
jo
hlt
lods
call
pop
decl
mov
out
sub
cmovne
enter
push
and
dec
push
adc
and
ss
push
movq
or
scas
mov
adc
xor
mov
cmpsb
sbb
ret
nop
pop
cmp
or
inc
loop
adc
inc
popf
and
adc
sbb
idivl
sbb
pop
pop
push
orb
ds
jl
call
adc
gs
fimuls
sub
push
add
cmp
lret
inc
daa
xor
test
push
sbb
xchg
add
and
inc
xor
lcall
fisubrs
xchg
or
and
pop
lea
popa
mov
adc
push
aas
adc
and
lods
dec
insb
push
inc
mov
mov
idivl
fadds
icebp
out
mov
aas
push
xchg
add
aaa
fbld
rorb
push
es
sub
fistps
je
jo
insb
gs
hlt
cld
xchg
xchg
fs
mov
pop
loope
adc
xchg
or
inc
jb
imul
stc
sub
cmp
sbb
stc
xor
mov
inc
xchg
inc
arpl
sti
inc
ss
jp
sahf
dec
inc
dec
repz
dec
shl
inc
push
pop
jo
int
jns
mov
mov
outsl
push
fidivs
call
pop
add
or
push
dec
dec
int
pop
in
add
aaa
shlb
mov
mov
pushl
pushl
ljmp
mov
ja
mov
lods
pop
dec
jmp
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
mov
fnstcw
sub
mov
sbb
in
pop
enter
ds
pop
sbb
xor
mov
add
lahf
jo
fsubs
sbb
cld
lcall
mov
pop
dec
xchg
pop
shl
dec
push
and
mov
pop
push
es
jg
xor
aaa
aaa
xor
cmp
xchg
js
dec
test
hlt
rclb
push
or
inc
jb
in
mov
mov
push
dec
imul
fisubl
sub
sahf
xchg
sub
sub
in
mov
das
pop
call
daa
iret
fdivs
cmp
inc
test
cwtl
add
leave
jae
dec
js
mov
out
loopne
je
inc
js
cmp
cmp
mov
add
add
dec
dec
pop
int3
lods
lods
test
xchg
dec
test
outsl
or
sub
push
dec
sub
cmp
ss
cmp
xor
sub
sub
xor
inc
xor
inc
or
or
xor
add
push
sub
cmp
insb
push
outsb
add
inc
mov
mov
lock
js
mov
addr16
xorb
xor
ret
dec
jp
sahf
push
jb
or
lret
bound
clc
lret
jne
cmp
popa
outsb
mov
push
pop
adc
testl
and
mov
andl
fcomps
pop
pop
adc
inc
mov
das
arpl
inc
or
das
jnp
shlb
pop
push
dec
jl
push
mov
ds
adc
out
push
sbb
xorb
pop
mov
mov
mov
pop
testb
and
aaa
dec
xor
sub
ja
cld
aas
pop
pop
dec
inc
adc
sub
add
dec
or
mov
inc
dec
outsb
in
pop
adc
sbb
sub
clc
inc
sbb
xor
jns
mov
inc
vmovhps
call
inc
movsb
loop
rclb
and
push
loopne
inc
test
pop
adc
and
or
adc
push
push
sub
cmp
out
fidivl
sti
into
int
pushf
sub
inc
mov
imul
mov
into
pop
jae
push
inc
mov
movsl
inc
outsl
sahf
out
adc
jecxz
and
fldenv
jnp
push
cld
roll
xchg
jl
jnp
or
rcrl
idivb
inc
ror
and
pop
fs
ret
push
add
movsl
and
sti
mov
es
fistps
mov
push
lahf
lock
iret
mov
orb
push
sub
data16
imul
popa
scas
dec
and
lret
insl
sahf
add
dec
and
dec
mov
jl
leave
mulb
addr16
push
mov
addr16
mov
lods
mov
push
jp
jns
sahf
cmpsl
stc
cmp
xor
jl
int
out
jns
cwtl
pop
pop
into
inc
mov
mov
mov
dec
push
mov
mov
insb
out
jns
test
repz
fnstenv
jnp
sti
cmp
push
cmp
push
test
fnstcw
daa
iret
xchg
mov
inc
lea
sarl
leave
push
fildl
in
sbb
loope,pn
mov
into
push
sahf
pmaxub
mov
jo
popa
das
push
lods
int
data16
sbb
aaa
jecxz
push
fisttps
nop
xlat
pop
out
cmp
push
jmp
fdivr
mov
scas
xchg
and
fidivrs
mov
mov
push
lahf
out
fisubrl
cltd
movsl
and
pop
and
sbb
repz
jg
repz
ja
mov
lods
jnp
xorb
jno
imul
clc
push
sahf
dec
std
int
imul
jmp
jmp
test
cwtl
xor
out
mov
dec
insb
ds
repz
enter
mov
cmp
roll
insb
mov
mov
cmp
loop
sahf
popa
stos
rorl
addr16
mov
jg
dec
fisubrs
adc
and
and
rcrb
push
call
popa
stc
push
mov
xor
adc
mov
das
jbe
mov
scas
int
mov
leave
mov
pop
in
loop
and
push
pop
mov
add
idivb
adc
sar
mov
push
and
pop
sbb
enter
adc
iret
decl
xchg
inc
repnz
iret
pusha
or
cs
add
or
inc
add
xor
xchg
mov
inc
fisubrl
push
jae
les
test
pop
aas
inc
push
mov
lea
inc
sbb
or
aaa
push
inc
sbb
aas
jo
ja
jae
fisubl
push
mov
das
cmpsb
jae
dec
mov
sbb
cmp
dec
je,pn
fisubrl
insl
push
ljmp
cmpsb
dec
add
push
inc
out
jb
jbe
push
insb
pop
push
dec
pop
je
xlat
jp
mov
or
jp
das
push
bnd
push
in
outsb
pop
jbe
out
or
adc
push
pop
retw
pop
test
inc
dec
or
nop
dec
js
dec
mov
ja
mov
xor
cmp
push
js
dec
imul
and
fs
push
fists
cmp
push
ds
add
mov
mov
insl
jo
es
insb
je
sub
jns
addr16
jo
jae
es
outsl
and
cmpb
sub
fnsave
cmpsb
mov
mov
repz
xor
xor
xor
xor
xor
cmp
cmp
mov
xor
xor
cmp
push
add
or
xchg
xor
xchg
or
sub
out
into
std
ficompl
dec
pop
inc
add
lock
pop
dec
or
stos
inc
dec
add
sbb
ds
and
cli
add
sahf
sub
mov
int
movsl
es
adc
adc
push
fdivrs
ds
sub
rcrl
ljmp
sub
arpl
addb
add
notb
push
or
pop
xor
jo
dec
sub
pop
push
pop
sbbl
loopne
pop
sbb
movsb
repz
loope
cmp
inc
inc
add
sbb
outsb
and
pop
dec
inc
addr16
fwait
inc
jnp
pop
cmp
add
sbb
sbb
in
jmp
xor
fiadds
dec
fbstp
jnp,pt
in
or
sub
sub
dec
or
or
and
sbb
push
xor
pop
or
sub
pop
rcrb
outsl
add
cs
jmp
pop
addr16
sub
dec
repnz
ret
dec
lcall
ljmp
pop
pop
cmp
push
ja
inc
jge
arpl
pop
or
pop
fcoms
pop
in
xor
or
jb
fldt
aaa
fucom
inc
in
mov
cmp
sbb
inc
daa
adc
push
push
or
insl
in
jns
sub
lods
mov
dec
add
lea
or
daa
add
insl
mov
stos
bound
mov
pop
mov
xorb
das
fisubrl
pop
divl
iret
mov
arpl
loope
adc
ret
adc
jno
push
lds
sub
popa
mov
test
daa
pop
xchg
lds
das
dec
lahf
fiaddl
test
pop
pop
mov
js
sbb
pop
and
xorl
sahf
push
aas
xchg
or
push
lock
mov
scas
lods
loopne
imul
daa
lahf
push
jo
loopne
xchg
outsb
ficompl
addb
pop
int
xor
adc
out
arpl
pop
aam
xor
adc
popa
popa
popf
fwait
mov
and
movl
fisubrl
lcall
fwait
push
push
daa
pusha
push
ret
pop
cld
dec
pusha
mov
pop
cmp
add
sub
js
xchg
xor
jl
jl
icebp
lock
fadd
sbb
or
bound
mov
pop
xchg
jno
ja
sub
or
addb
int
daa
add
cmpsl
xchg
insb
pop
push
ja
mov
pop
jae
inc
ret
aad
and
pop
add
xchg
push
stc
stc
push
sbb
in
add
push
sbb
inc
test
es
pop
adc
cmp
das
sub
pop
sbb
pop
inc
sbb
pop
ret
nop
popf
lock
lock
dec
lcall
neg
or
and
cmp
jo
xor
sub
inc
add
push
daa
jno
lea
inc
lret
sub
inc
testb
das
fisttpll
fwait
cmp
pop
cwtl
adc
adc
fwait
or
adc
lds
bound
shrl
dec
pop
jl
push
inc
inc
mov
pop
inc
inc
daa
dec
test
adc
test
push
mov
clc
jle
and
mov
and
or
out
jmp
adc
test
xchg
enter
repnz
mov
pop
pushf
push
push
pop
cltd
xchg
loope
pop
sub
push
push
add
sbb
call
mov
or
dec
or
data16
add
cmpsl
pop
adc
aas
and
shll
dec
adc
jo
cmpsb
inc
cmp
add
pop
or
adc
mov
push
stos
cli
sub
dec
scas
and
inc
data16
lods
pushf
push
ds
fcmovu
pop
pop
pop
sbb
adc
cwtl
cmp
add
imul
mov
ljmp
mov
sbb
cltd
mov
insb
fs
add
ljmp
mov
xor
rcrb
xchg
inc
adc
cmp
in
rcrb
inc
adc
ds
sbb
scas
mov
lcall
inc
hlt
adc
gs
adc
mov
loopne
xor
and
mov
cmp
pop
xor
int3
push
inc
push
and
negl
and
sbb
pop
aam
adc
push
mov
adc
addr16
adc
loope
or
dec
fdivl
jp
jno
lahf
popa
hlt
adc
xchg
xor
cmp
and
icebp
xchg
inc
xlat
ljmp
inc
mov
pop
mov
das
jo
daa
and
inc
sbb
out
imul
out
dec
pop
or
stos
xor
inc
notl
popa
xchg
test
add
repz
adc
pop
sbb
iret
repz
push
andl
repz
add
or
fwait
int
roll
or
sbb
or
add
sbb
and
sub
xor
inc
mov
sti
out
mov
mov
mov
ss
int
popa
xchg
sbb
sub
add
fldcw
xchg
pop
adc
insb
ss
and
add
add
push
dec
str
fldcw
add
inc
stc
das
incl
test
adc
xchg
imul
pop
pop
cs
and
ficomps
mov
das
adc
mov
test
sub
mov
lea
cmpsl
pop
dec
or
jo
and
or
movsb
push
xor
xor
xor
add
add
pop
xor
idiv
or
xor
in
or
add
add
dec
sbb
fistpll
adc
push
pop
push
add
pop
inc
push
adc
pushl
add
sbb
aas
sub
cmp
or
add
add
sub
dec
enter
sub
sbb
or
sub
pop
and
push
inc
pop
cs
sar
sub
push
adc
xor
sbb
inc
xor
addb
push
lret
out
push
incl
cmp
add
cmp
push
pop
sub
sub
sbb
daa
sub
decl
cmp
add
adc
push
and
adc
add
pop
sbb
mov
incl
sub
sbb
or
sbb
push
xor
push
sbb
sub
cli
ljmp
mov
sub
daa
dec
das
or
pop
aas
dec
sbb
cmpsl
flds
add
pop
loope
cmp
and
nop
mov
and
imul
sbbb
push
pop
dec
mov
adc
and
mulb
push
sbb
lods
sbb
push
loop
arpl
daa
inc
adc
pop
test
add
mov
test
iret
inc
lock
and
das
sbb
mov
rorb
clc
and
and
pop
sub
loop,pn
xchg
push
push
dec
sub
inc
cmpsb
mov
or
jo
xchg
ficoml
bound
mov
mov
add
xchg
sbb
in
dec
push
push
lahf
loope
dec
or
push
push
inc
push
sbb
dec
push
dec
add
xor
test
add
cwtl
mov
pop
dec
into
xchg
and
push
dec
push
aas
add
daa
inc
dec
mov
jl
push
daa
pop
aas
xor
ja
orb
fucomip
mov
pop
dec
daa
pop
daa
xor
imulb
dec
sub
pop
and
sub
aas
add
adc
sub
aas
ss
das
mov
incl
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
jmp
xchg
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
call
cld
cwtl
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
incl
sub
and
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
lcall
xor
adc
shll
ja
daa
mov
mov
mov
sbb
decl
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
mov
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
decl
sbbl
int
pop
sub
inc
outsb
pop
aas
insb
xor
dec
cmp
aaa
popa
and
add
mov
cmp
adc
push
xor
and
dec
xor
dec
dec
xor
dec
push
inc
xor
inc
push
sub
inc
cmp
insl
sub
ljmp
js
sub
ss
jo
push
jnp
and
daa
imul
jl
and
dec
cmp
xor
xor
xor
sub
pop
xor
xor
push
inc
jle
stc
lret
add
inc
pop
inc
inc
xor
and
aaa
inc
push
inc
outsb
pop
pop
lcall
pop
ss
cmpsl
xlat
push
pop
cs
and
ret
adc
mov
or
xlat
es
xor
in
bound
sbb
aaa
inc
pusha
xor
pop
xchg
pop
add
out
pop
outsb
jo
cld
scas
out
in
bound
cmp
ds
push
adc
adcb
inc
imul
loop
jg
inc
xor
fdivl
pop
sbb
xor
push
call
adc
mov
jle
or
popf
or
lock
inc
sbb
les
cwtl
mov
fldcw
sub
mul
pop
js
dec
loopne
int
loopne
or
xor
lods
mov
jb
ja
cmpsl
popa
sub
mov
in
push
pop
notl
sbb
jp
pop
mov
xchg
pop
or
push
sbb
mov
fmul
mov
loop
sub
pop
lock
push
mov
mov
adcl
sbb
pop
cmp
inc
inc
cmpb
cli
pop
outsb
lret
inc
div
rcrl
jge
sbb
xorb
jne
push
and
mov
push
in
add
popf
add
pop
lods
or
hlt
test
rorb
xchg
push
add
in
cs
inc
inc
sbb
xor
cmp
pop
pop
in
pop
mov
jmp
jo
testb
adc
scas
inc
cmp
shl
adc
rcll
adc
mov
sahf
push
int3
mov
dec
movsb
mov
xchg
adc
push
addr16
or
mov
test
push
adc
jb
inc
add
das
outsb
outsb
je
outsl
push
cmp
xor
js
xor
jae
into
leave
fsts
cmp
xor
ret
shlb
ret
mov
aad
mov
adc
insl
loop
mov
or
xor
lcall
dec
mov
xchg
popa
je
push
xchg
insl
data16
mov
push
out
mov
aas
adc
and
or
arpl
loopne
push
gs
pop
pop
push
aas
jbe
outsb
dec
lds
pop
sub
or
push
test
pusha
fdivs
dec
xor
movsb
lods
push
insl
lret
xchg
dec
adc
data16
dec
aas
sbb
add
test
std
pop
iret
and
jae
sbb
or
dec
andl
cmp
pop
sbb
inc
or
push
dec
stos
inc
pop
movsl
jno
ds
adc
adc
ds
movsl
inc
xlat
das
mov
pop
sbb
pop
faddl
pop
push
xor
pop
sub
dec
jle
insb
jmp
pop
push
inc
sbb
push
mov
push
shrb
stos
inc
dec
popa
dec
jp
push
adc
das
ja
jb
pop
repz
sbb
sarl
pop
inc
jne
dec
mov
xor
nop
or
xchg
cmp
leave
cmp
inc
dec
inc
popa
push
sub
mov
jg
sub
test
or
or
inc
out
pusha
adc
push
or
push
mov
call
sbb
insl
mov
aaa
daa
sbb
cmpsl
fs
jo
sub
or
outsl
or
aad
push
mov
imul
in
xchg
mov
dec
cmp
movsl
adcb
pop
pop
dec
lgs
test
ljmp
incb
rcrl
adc
push
and
pop
scas
ds
arpl
adc
pop
daa
mov
loop
aas
je,pt
mov
lods
add
push
push
cmpsb
sub
xorl
dec
inc
inc
sbb
lret
mov
mov
aam
mov
inc
pop
lods
xor
cmp
inc
sub
or
pop
inc
outsl
sbb
adc
cmc
ja
mov
inc
sub
std
cmp
xor
adc
sub
push
insb
sahf
or
jmp
ja
and
je
jne
add
jne
lahf
imul
mov
les
pop
pop
movsl
pop
jmp
sub
dec
sbb
pop
xchg
xor
xor
add
imul
dec
pop
fwait
and
movsl
xor
pop
imul
scas
cs
sub
jnp
lods
inc
addl
pand
lods
scas
push
add
xor
push
or
adc
add
dec
push
jo
hlt
cmpb
sbb
out
push
adc
and
and
nop
or
insl
das
cmpsb
inc
and
inc
aam
pop
mov
xor
dec
cmp
movsb
arpl
gs
push
gs
movsl
shlb
lods
push
insb
fs
call
dec
and
addr16
popa
aam
push
dec
sbb
outsl
insb
push
jmp
jae
movzbl
xchg
jbe
push
punpckhwd
dec
outsb
push
sub
pusha
mov
push
add
dec
daa
insb
jae
ret
add
and
loopne
inc
dec
inc
push
pop
xchg
cmp
mov
dec
xlat
jb
gs
sbb
push
dec
popa
daa
inc
or
fdivp
fwait
pop
daa
dec
inc
jmp
pop
push
dec
jb
add
pusha
and
cmp
pop
out
addb
loop
adc
and
pop
and
xchg
dec
lahf
cmp
orb
adc
push
inc
cs
add
or
mov
testb
jns
jb
push
test
push
adc
jle
push
rorl
dec
push
aas
enter
or
xchg
mov
es
push
sarb
pop
or
jnp
xor
inc
dec
insb
dec
sbb
adc
jb
inc
repnz
test
repnz
push
cli
add
pop
mov
mov
cltd
add
pop
rolb
xlat
and
adc
pop
and
or
int3
in
stos
int3
lcall
sub
cmp
sub
xlat
adc
sbb
pop
pop
dec
sub
mov
arpl
insl
adc
adc
dec
insl
or
lods
push
pop
outsl
sbb
xor
cmp
adcb
loope
cmp
sub
sbb
dec
aad
cmp
jmp
xchg
dec
insb
inc
add
lea
xor
xor
add
cmpsl
and
push
hlt
push
aam
push
test
int
inc
das
xchg
insb
dec
ds
les
add
dec
inc
int
std
fisttpll
shll
cmc
inc
fistpll
inc
xchg
inc
cmovo
divb
cmpb
aas
mov
jo
mov
fistpl
inc
dec
add
daa
mul
dec
inc
rclb
in
jne
aaa
pushf
push
inc
pop
cmp
ja
xchg
push
mov
dec
movsb
in
add
in
mov
hlt
pop
push
push
sbb
add
outsl
ror
push
aaa
jnp
imul
lahf
add
test
daa
mov
repnz
out
push
xchg
mov
fdivrs
les
les
push
loopne
iret
aam
aas
jg
out
mov
dec
outsl
cwtl
sbb
and
inc
jb
push
jb
xor
push
jb
push
sub
and
push
jb
add
adc
daa
pop
or
mov
push
mov
fsubs
out
sbb
push
push
lods
pop
nop
sarl
je
add
pop
or
jnp
out
pop
aam
fs
dec
out
idivl
pop
push
mov
fs
hlt
pop
movb
mov
les
mov
pop
in
xor
push
js
and
cmp
add
xchg
int3
icebp
mov
inc
dec
mov
jo
scas
loopne
mov
dec
lcall
sbb
mov
pop
or
add
mov
loopne
sahf
neg
xor
push
test
push
dec
nop
lods
in
sti
out
push
mov
mov
xor
ja
fstl
je
xchg
xchg
mov
sub
dec
rorb
dec
es
push
adcb
inc
adc
xor
pop
dec
outsl
add
ret
push
filds
jae
pop
jb
adcb
sbb
inc
outsb
push
jb
cmp
cmp
dec
sahf
testb
pop
add
and
filds
push
fs
pop
and
mov
add
pop
outsl
out
xchg
sub
orb
nop
xor
pop
mov
pop
aam
pop
pop
sub
mov
hlt
pop
scas
add
push
sbb
outsl
out
dec
xchg
pushl
inc
xchg
in
xor
xchg
out
pop
fmul
pop
leave
mov
fildll
and
mov
out
pop
fs
xchg
out
fidivrl
enter
add
cmp
pop
movl
lods
inc
fs
pop
sub
xchg
mov
orb
push
mov
sub
cmpb
nop
xchg
push
xor
pusha
sbb
imul
dec
push
pop
pop
fistps
mov
popa
outsl
add
and
and
add
leave
add
push
mov
add
pop
call
insb
scas
add
adc
out
jecxz
shll
pop
cmpsl
add
adc
push
sbb
addr16
rcrl
sbb
outsl
fdivs
aam
jmp
push
in
daa
and
add
xor
push
pop
cmpsb
pusha
imul
add
popa
push
fimuls
pushw
and
jg
push
mov
and
push
add
idivb
pop
nop
xchg
push
xor
pusha
and
adc
mov
ja
popf
nop
popa
adc
divl
xchg
nop
sbb
in
xchg
outsl
sbb
xchg
pop
mov
xchg
daa
testl
mov
bound
in
hlt
gs
mov
movl
mov
sub
xchg
js
verr
jp
jae
or
sbb
in
test
bound
xlat
or
imul
popa
enter
add
shll
xlat
or
xchg
loopne
pushf
adc
les
add
test
sub
add
fimull
xor
popa
xor
outsl
and
sub
call
and
and
arpl
push
js
add
aaa
shlb
inc
mov
xor
add
subl
dec
xchg
clc
and
mov
shlb
inc
mov
dec
sahf
or
add
gs
popa
xchg
sub
jo
pop
enter
addr16
add
jb
iret
test
push
dec
sub
jmp
xchg
push
sub
lock
outsl
add
ss
adc
subl
pop
mov
pop
adc
pushf
data16
add
inc
dec
and
aam
jb
negl
pop
lock
add
sbb
sbb
xlat
sbb
xchg
or
sahf
iret
jne
or
daa
pop
xchg
pop
in
jbe
lods
or
add
xor
add
xchg
mov
pop
xor
push
in
push
push
cmp
repz
enter
cmp
xchg
sahf
out
xchg
mov
nop
push
cwtl
xchg
sub
repnz
scas
aas
or
push
movsb
push
test
movsb
xchg
pop
or
inc
cs
in
pop
in
movsl
dec
testl
shrb
push
clc
add
mov
subb
ss
add
mov
and
push
pop
fiaddl
addr16
mov
or
lods
insl
cmp
test
or
push
enter
add
mov
pinsrw
imul
push
outsb
shlb
xchg
fimull
push
mov
pop
cmp
daa
cmp
orl
es
imul
push
xor
out
mov
loopne
adc
inc
push
mov
mov
cwtl
imul
andb
les
outsl
sub
aam
mov
xchg
cld
and
insb
data16
add
outsb
mov
data16
xor
sbb
push
das
pusha
outsb
repnz
in
pusha
insb
jo
aas
fdivs
fsubrs
addr16
pusha
ret
pusha
aas
pop
out
shlb
insb
mov
sbb
jb
pusha
jbe
or
lods
dec
jns
cmpsl
flds
and
xorb
adc
lods
cmp
mov
cs
dec
mov
iret
repz
cld
and
sarl
push
jb
sbb
cmp
ds
mov
daa
jnp
push
sahf
cmpsl
stc
cmp
mov
repz
repz
push
jb
out
ds
mov
nop
iret
repz
mov
xorb
mov
cmp
adc
dec
repz
or
sahf
out
fmuls
cmpl
fdiv
xor
dec
push
lahf
lret
repz
and
iret
repz
mov
jmp
lcall
test
sbb
into
push
outsl
push
xchg
adc
mov
mov
stc
cmp
xor
dec
repz
inc
mov
cmpsl
stc
inc
jl
dec
nop
ljmp
mov
jns
iret
shll
pop
xchg
dec
xchg
cmp
out
adc
lcall
in
xchg
lahf
sahf
cmpsl
fnstcw
push
cwtl
inc
cmpsb
icebp
ds
sarl
xlat
cli
push
lcall
incl
or
xor
divl
pushf
jne
fldcw
popf
push
js
repz
lahf
shl
mov
jl
mov
pop
int
imul
pop
movsb
jle
cmpsl
stc
cmp
or
lahf
out
xor
shlb
sahf
cmpsl
stc
xor
push
test
jns
jge
stos
mov
stos
cmpsl
stc
cmp
cmpsl
ret
lods
jnp
sarl
loop
lods
pop
mov
xor
scas
stc
xor
ja
push
iret
pop
mov
and
inc
mov
xchg
dec
mov
cmp
cmpsl
mov
mov
xor
out
lcall
dec
out
insb
loop,pt
adc
fistpll
mov
test
or
cwtd
aam
out
xadd
enter
iret
repz
xchg
hlt
addr16
stos
cmp
repz
cmp
imul
sbb
push
fwait
in
dec
leave
cmp
out
lahf
mov
fwait
int
sti
stos
int3
inc
sub
int3
into
iret
dec
rclb
stos
rcrl
aam
pushf
add
xor
cmp
sbb
sub
inc
jno
pop
add
push
outsb
pop
leave
jae
je
mov
dec
mov
cmp
movsl
add
xchg
mov
in
adc
fnsave
add
pop
paddq
mov
pop
xchg
sbb
adc
and
rorb
out
pop
inc
ss
inc
push
in
jb
mov
ret
dec
xor
xor
push
mov
cmp
popf
mov
aaa
fiadds
repnz
mov
enter
dec
ja
and
push
pop
lods
rclb
cmp
pop
out
fldenv
scas
jg
jg
mov
out
cmpb
test
leave
mov
aas
fmuls
xchg
push
fisttps
mov
leave
scas
ss
aas
sbb
sbb
aas
sbb
push
in
push
fnstsw
iret
sub
test
jmp
xchg
mov
mov
mov
repz
mov
stc
and
sub
mov
cmp
call
std
cs
incb
mov
mov
aaa
pop
xor
inc
jmp
ja
popl
push
mov
mov
incl
mov
dec
jo
mov
pop
in
xor
movnti
and
dec
cmc
loope
lahf
add
adc
cmpsb
cmpsl
in
or
push
inc
pop
leave
or
rorb
sbb
scas
subb
lock
inc
xlat
pushf
sahf
sub
or
dec
call
dec
jg
push
xchg
jmp
cmc
pop
cmp
dec
and
pop
aas
bound
xor
adc
mov
pop
js
pop
mov
les
inc
push
inc
test
mov
add
das
jns
cmp
inc
dec
in
js
nop
and
fdivrl
js
shrb
pop
divb
xchg
cmp
pop
inc
fs
jns
pusha
ret
push
iret
mov
psubw
scas
data16
jns
fstpl
xchg
push
add
push
out
pop
movsb
xchg
jb
jb
iret
xlat
pushf
dec
pop
jb
cmp
add
ficoml
adcb
push
sub
lods
divl
call
clc
and
jbe
and
inc
sbbl
jnp
jnp
xchg
push
xor
and
das
mull
scas
push
inc
das
cmp
imul
inc
add
aam
and
mov
in
add
shll
out
sub
jl
push
fs
daa
inc
lahf
hlt
add
jl
int3
inc
pop
jae
pushf
sbb
add
mov
push
lret
adc
enter
jge
jge
dec
cmpsb
in
mov
pop
dec
leave
mov
pop
and
xchg
mov
lea
in
test
jns
push
add
repz
add
add
repz
fiaddl
decl
nop
jl
js
lock
or
jle
push
add
xchg
mov
or
enter
jle
jp
sahf
or
pop
add
and
js
bound
jp
jne
xorb
jl
xchg
jg
sahf
ja
jb
mov
cmpsb
add
xchg
out
jns
roll
dec
and
cs
pop
jnp
cltd
in
xchg
jnp
jnp
jnp
sbb
repnz
dec
jnp
cmp
cmp
push
outsb
fnstsw
cmpsl
popf
in
jbe
fstpl
movsl
shrd
fsubl
xchg
iret
pop
dec
and
add
adc
btr
daa
js
jl
sub
out
add
shlb
sbb
inc
repnz
xchg
and
inc
pop
shr
xchg
orl
mov
mov
mov
mov
xchg
mov
mov
repnz
enter
inc
pop
mov
push
push
daa
dec
addb
ja
test
nop
jl
pop
cmc
movl
cmp
and
scas
dec
and
jg
xorl
dec
lahf
fnstcw
cmp
daa
adc
xor
iret
xchg
xchg
adc
jle
push
jle
inc
jb
push
jle
dec
jle
mov
leave
leave
push
pop
arpl
add
sbb
jb
jo
sbbl
pop
xor
or
ja
mov
jns
in
out
jle
jle
jg
jns
jns
jg
jg
jg
push
sahf
out
sahf
or
inc
or
sahf
out
or
or
sahf
out
movd
mov
xchg
adc
out
adc
adc
sahf
out
pop
in
repnz
sub
call
sub
test
arpl
add
cltd
dec
adc
fcmovnbe
aaa
ja
inc
cmp
mov
xchg
and
les
addr16
aam
in
cmpsl
in
enter
xchg
sub
fsubs
xchg
xchg
xchg
mov
push
jle
xchg
add
repz
xchg
das
sahf
xorl
pop
les
in
pop
roll
inc
pop
add
push
in
rolb
add
dec
mov
pop
add
fsubp
es
mov
push
xor
aaa
add
mov
and
sub
vorps
xor
cmp
out
sbb
push
fdivl
adc
jns
xchg
mov
loopne
and
insb
pop
mov
inc
jb
pushf
push
test
mov
sbb
mov
mov
pop
xor
subl
and
imull
push
ret
mov
insl
mov
cmp
and
cmp
sbb
pop
push
pcmpgtb
dec
and
decl
mov
mov
in
pop
mov
in
xchg
adc
call
dec
ja
pushf
sub
sbb
daa
cmp
sbb
push
incl
dec
imul
in
addl
mov
setno
stc
xchg
add
js
xchg
cmp
bound
rorb
inc
in
rcll
add
test
fs
fists
aam
fmull
mov
and
leave
xchg
adc
xchg
mov
add
or
xchg
xchg
xchg
xchg
sbb
and
sub
xchg
xchg
xchg
xchg
cmp
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
femms
jb
jb
or
jb
jb
or
push
jb
jb
add
popa
jb
add
mull
mov
ret
leave
out
mov
xchg
add
adcb
mov
nop
push
mov
inc
data16
xchg
adc
mov
add
mov
mov
jns
int3
mov
mov
mov
aas
in
unpcklps
ja
push
push
cld
add
xor
dec
fmull
inc
mov
or
leave
loopne
push
add
mov
pop
mov
xchg
cmp
ja
mov
mov
les
bswap
mov
je
lds
bswap
aad
repnz
repnz
dec
or
std
or
inc
ds
or
add
in
jne
xchg
idivl
cmovle
add
inc
or
mov
lcall
aas
jle
add
pop
repnz
cmp
or
push
ja
push
ja
es
adc
daa
or
mov
mov
sahf
aaa
jb
cmp
add
out
dec
pop
add
pop
add
mov
test
xchg
pop
out
mov
fistpll
cmp
mov
out
add
inc
mov
adc
xor
cmp
add
notl
leave
inc
repnz
mov
hlt
jp
leave
leave
leave
orb
leave
scas
mov
sahf
out
sahf
iret
or
or
or
or
or
repnz
loopne
or
xchg
iret
insl
in
inc
mov
add
xchg
pushf
pop
and
xchg
lock
test
mov
fisttpl
pop
mov
push
add
leave
in
in
adc
mov
lea
sub
cltd
pop
or
mov
call
addl
xchg
inc
scas
leave
pop
enter
jno
stos
lret
fadd
or
iret
popf
xchg
mov
test
xchg
mov
mov
dec
sahf
xchg
lds
ret
cmp
in
jg
leave
sub
inc
mov
xchg
and
jb
ljmp
inc
mov
adc
pop
mov
mov
mov
bound
jb
cmpb
mov
push
lcall
or
and
lcall
call
inc
mov
xor
jns
xchg
pop
and
in
in
jno
add
jb
sahf
pop
movsb
scas
addr16
leave
leave
leave
inc
aad
jmp
imul
out
sahf
add
sub
or
or
inc
nop
cmpsl
xchg
iret
or
imul
nop
mov
leave
mov
iret
ror
fimull
or
or
jns
cmp
add
and
sbb
cmp
enter
xchg
push
xchg
pop
xchg
and
dec
lcall
cltd
addr16
pop
leave
jae
mov
jb
loopne
and
pop
add
or
adc
cmp
mov
xchg
xchg
xor
stos
xchg
mov
mov
sahf
out
add
fildl
in
xchg
rcl
push
cmp
dec
xlat
pushf
inc
aas
xchg
mov
xchg
push
mov
scas
xchg
addr16
mov
roll
sub
cmpsb
aaa
enter
fstpl
cli
push
ja
popf
push
enter
popf
das
ds
xchg
out
pushf
jg
xchg
dec
push
add
jbe
je
add
pop
xchg
xchg
leave
rep
and
jbe
or
out
mov
mov
leave
arpl
xchg
xchg
das
push
add
idivl
sahf
ja
in
inc
std
add
arpl
pop
leave
jae
add
mov
outsb
daa
arpl
outsb
mov
sbb
pushf
pop
xchg
pushf
cmpsl
data16
leave
jae
mov
in
aad
in
and
out
add
enter
xchg
adc
pushf
ljmp
xchg
mov
or
inc
repnz
push
or
bswap
pop
in
mov
mov
add
bnd
loopne
pop
repz
ds
xchg
jns
cmp
xchg
lock
xchg
sahf
out
sbb
xchg
ss
add
add
xchg
out
jns
add
dec
xchg
push
xchg
enter
pop
xchg
data16
outsb
xchg
es
xchg
out
xchg
or
repz
or
or
pop
push
pushf
pushf
pushf
pushf
add
iret
repz
sbb
cmp
repz
sbb
sbb
iret
push
pop
into
vmwrite
sahf
and
fsubp
and
js
out
and
cmp
ss
xchg
sub
and
cmp
cmp
fisttpll
gs
xchg
add
mov
in
pop
sahf
or
repnz
leave
xchg
add
shr
in
jmp
push
out
movsb
sbb
in
into
pop
push
pop
push
pop
cltd
mov
pop
fs
pop
imul
pop
mov
dec
jg
cltd
mov
adc
adc
in
out
pushf
mov
xchg
das
mov
stos
mov
ror
fldenv
push
mov
repnz
inc
push
ljmp
push
daa
fdivl
jnp
outsl
adc
push
xchg
and
dec
pop
ss
add
xorl
repz
outsl
or
inc
vpmaxsw
pop
sbb
daa
jo
or
movsb
iret
lods
jno
mov
mov
ja
pop
mov
mov
xchg
out
movsb
fistps
jg
lcall
adcb
ficompl
popf
out
push
jns
movsl
sub
daa
push
out
daa
fwait
inc
das
fwait
aaa
fstcw
mov
fwait
mov
mov
and
dec
sahf
add
fwait
jmp
mov
fwait
inc
mov
ds
iret
repz
inc
mov
and
lds
push
dec
sub
cmpsl
dec
push
lock
in
pop
pop
gs
cs
dec
dec
pop
insl
pushf
rclb
sub
mov
ror
xchg
xchg
mov
pop
hlt
or
ficoms
and
xor
pushf
cmpsl
dec
push
mov
xchg
push
pop
pusha
xchg
lret
mov
popf
mov
xchg
mov
popf
cmpsb
popf
bswap
jae
jb
mov
jbe
cmp
ficomps
out
out
sahf
or
or
dec
rorb
push
sahf
in
ror
sahf
push
sahf
adc
test
bound
pop
repz
enter
add
fnstsw
iret
add
js
popa
pop
push
incb
test
adc
mov
fs
pop
leave
out
pop
mov
mov
in
add
outsl
or
ficoms
jns
stc
mov
lahf
ss
inc
lahf
lahf
fnstsw
ja
push
or
out
insl
fildl
nop
lahf
shrb
outsb
mov
divl
in
pop
fisttpll
pop
enter
sub
lahf
call
jl
pop
push
mov
mov
mov
in
xchg
xchg
mov
add
addr16
jge
pushf
out
or
pop
xchg
push
or
inc
push
jb
add
cmpb
jns
stos
or
xor
nop
ret
and
rcr
fmulp
add
jmp
aaa
jns
lar
adc
jb
stc
mov
pop
inc
daa
cmp
mov
stos
bswap
dec
add
out
outsb
mov
gs
insl
add
leave
rorl
add
mov
pop
xchg
pop
popf
pop
movsl
jbe,pt
cmp
or
or
inc
into
cmc
lds
mov
out
adc
in
mov
add
xchg
inc
iret
sub
xor
inc
cmp
fimull
test
push
pushl
repnz
xchg
lods
loopne
rcr
stos
iret
daa
mov
mov
adc
icebp
inc
jmp
add
sbb
fcomp
fucom
fnstcw
rclb
add
scas
and
bound
mov
adc
and
inc
add
mov
jl
mov
in
jl
std
inc
lock
loopne
mov
scas
push
xchg
xchg
out
cmp
pop
jle
shll
loop
pop
pop
pop
pop
in
mov
push
out
sahf
out
or
or
sahf
das
movsbl
movsb
inc
movsb
pushf
call
cmp
mov
cmpsb
and
out
daa
leave
movsb
das
mov
jb
movsb
fldenv
jno
inc
icebp
movsb
stc
push
pop
sbb
inc
push
ljmp
mov
push
mov
pushf
pushf
cmp
inc
mov
movsl
movsl
out
xchg
adc
cmp
mov
pop
das
repnz
outsb
invd
movsl
push
or
leave
repz
or
mov
mov
movsl
psubsb
shll
roll
loope
mov
das
mov
enter
test
inc
repnz
jmp
cmpsb
mov
and
in
cmpsb
cmp
icebp
in
add
pop
cmpsb
outsl
adc
cvtpi2ps
or
cmp
xchg
out
test
add
cmp
mov
push
push
cmpsb
mov
cmp
shlb
fidivrs
cmpsl
mov
jns
and
cmpsl
and
and
in
sahf
out
pop
dec
or
pop
fisttpll
push
xcrypt-ctr
cmpsl
fistps
jb
xor
bound
push
jb
jp
cmp
adcb
push
mov
mov
sbb
add
int
aad
xor
mul
fucom
and
sbb
nopl
pop
out
push
or
jns
out
add
add
add
cmp
xor
test
xchg
and
test
test
aaa
jns
pusha
push
or
pop
and
addl
mov
fwait
mov
inc
repnz
into
cs
test
fisubrs
das
pmaxsw
or
div
shlb
cli
jae
pop
jo
xor
pop
mov
push
xchg
or
or
mov
jns
jl
or
mov
mov
inc
dec
lock
test
outsb
cmovno
dec
add
fwait
cmp
lar
mov
xor
xchg
popa
test
outsb
daa
mov
testl
mov
xchg
mov
loopne
add
mov
add
stos
fmull
xchg
outsl
sbb
dec
addr16
xchg
cmp
out
pop
push
ja
push
xchg
or
ret
int
aad
pop
dec
adc
sti
pop
add
jae
stos
pxor
push
add
push
shl
sbb
shrb
lsl
adc
mov
out
push
stos
pop
stos
mov
fdivl
pxor
pop
vmwrite
add
jg
rorb
out
or
ds
into
xchg
stos
lahf
stos
xchg
in
leave
out
nop
mov
nop
cmp
inc
sub
iret
pop
jo
repnz
mov
dec
push
in
iret
mov
out
test
ljmp
enter
lods
ljmp
inc
dec
lods
es
xchg
pushf
push
lods
lock
fcoml
insb
mov
mov
mov
inc
repnz
cwtl
mov
mov
cld
mov
std
lods
aaa
add
add
xor
daa
sub
sahf
xor
scas
lods
xchg
je
jl
leave
inc
jb
test
scas
addr16
mov
xchg
or
loop
ljmp
dec
or
add
jae
sidtl
sbb
xchg
int
loop
scas
ja
sub
dec
cmpsl
push
pop
push
leave
jae
and
xchg
add
pop
mov
cs
out
ret
add
out
jno
fdivl
pop
push
cmp
mov
js
lea
xlat
cmp
inc
cld
jo
out
add
push
scas
leave
jae
lea
iret
or
xchg
sahf
ja
mov
mov
push
mov
add
push
add
scas
adc
mov
repnz
lahf
cli
scas
add
or
cmp
rep
cvtpi2ps
or
or
loopne
repz
cmp
inc
dec
mov
in
jg
push
mov
mov
jne
add
jbe
lea
xchg
xchg
add
daa
adc
mov
in
jbe
rcr
psllw
stc
mov
add
adc
bnd
push
fistps
mov
mov
cmp
cmove
insl
in
mov
pcmpgtd
leave
leave
leave
xchg
leave
leave
leave
loop
adc
leave
in
in
sbb
push
das
jno
iret
leave
leave
lods
mov
mov
push
aad
cmp
xchg
repz
sahf
xchg
out
sbb
dec
and
lret
mov
or
push
xchg
mov
jae
xor
jg
lds
pop
stos
mov
mov
rolb
mov
sti
add
adc
mov
fwait
scas
and
dec
rol
jb
jb
data16
mov
test
jbe
jb
mov
daa
adc
xor
shr
repnz
cli
add
jns
adc
push
sbb
movsl
cmp
mov
mov
mov
into
jbe
push
daa
dec
mov
push
mov
stc
int3
xor
mov
outsl
adc
sub
in
xchg
pop
xchg
pop
popf
stc
and
scas
int3
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
stc
pop
js
mov
jno
jl
sahf
ja
jns
mov
mov
push
push
lahf
jns
out
pop
cmpsl
and
out
and
and
sahf
out
sahf
and
and
sahf
out
daa
repz
or
sub
or
lds
sbb
cs
sub
xor
dec
pop
bswap
jae
dec
push
das
pop
pop
add
stc
jmp
mov
mov
test
pop
mov
in
mov
mov
iret
rcrl
dec
dec
dec
mov
leave
out
fisttps
push
lds
sbb
mov
mov
in
in
sbbb
mov
inc
into
icebp
add
bndstx
and
sub
cmp
cmp
stos
daa
mov
out
mov
lret
xchg
daa
daa
daa
shl
btrl
xchg
pop
pop
push
and
iret
and
imul
outsb
daa
iret
jae
sub
iret
leave
repz
sub
iret
sub
popf
fisttps
out
xor
imull
xor
sbb
jmp
mov
incl
jl
outsl
pop
sub
sahf
iret
xchg
mov
xchg
mov
stc
inc
mov
and
add
ss
mov
add
pop
and
jne
add
xchg
xchg
orb
mov
ret
cmp
int
fmuls
in
jns
or
or
stc
dec
fidivs
repnz
adc
push
sbb
sahf
out
jns
xor
jns
push
push
pop
imul
je
sbb
jns
sahf
sbb
dec
sahf
out
pop
mov
and
daa
hlt
in
xlat
mov
cmp
xchg
decl
mov
add
das
mov
pop
mov
movsb
push
mov
jns
xchg
out
pop
or
mov
jg
or
iret
repz
seta
xchg
out
cmp
cmpsl
push
adc
mov
adc
lar
aaa
add
jns
iret
sbb
xchg
push
gs
xlat
incl
sbb
lret
lret
push
xor
push
mov
mov
push
add
jp
daa
daa
sbb
aas
sub
and
mov
or
push
add
xchg
sahf
fucomi
jbe
mov
cmpsl
push
pushf
jb
mov
mov
out
jbe
xchg
rolb
jecxz
psllq
mov
xchg
cmp
inc
fwait
js
mov
dec
cvttps2pi
pop
inc
cmovle
sub
or
orl
mov
jbe
jb
int3
xchg
daa
adc
sub
out
testl
dec
pop
roll
and
xor
cmp
mov
pop
pop
outsl
vmwrite
ja
push
add
add
sahf
out
test
add
int
mov
ror
jb
jb
das
jmp
sti
sub
jmp
xlat
outsb
cmp
mov
ds
leave
xrelease
inc
add
cmp
jno
jns
ret
xchg
xor
ret
decl
out
lods
lahf
mov
mov
dec
int3
add
iret
in
in
or
das
call
pop
ret
jae
mov
add
aaa
repnz
iret
add
and
ret
lcall
daa
daa
fisttpll
xchg
repnz
mull
leave
leave
leave
inc
vpmullw
leave
leave
fucom
test
xchg
pop
mov
sbb
imul
in
movsl
sar
cmpsl
push
stc
pushf
cmp
pop
jbe
arpl
dec
ror
in
and
cmp
mov
pop
jo
ja
pop
flds
loope
das
or
or
adc
sbb
rcrl
aaa
aas
xchg
cmp
iret
add
push
dec
sahf
ja
jb
jbe
addb
in
jns
mov
aaa
jns
in
int3
call
push
add
bswap
sub
push
clc
lret
lret
add
push
sbb
and
mov
lret
lret
das
cmp
inc
push
pop
pop
mov
pop
data16
jno
jl
mov
xchg
popf
test
mov
mov
mov
ljmp
leave
leave
mov
sbb
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
pop
push
adc
iret
sub
sub
sub
sahf
ja
aaa
inc
fidivs
dec
xor
jns
out
xor
outsb
sahf
out
sahf
xor
xor
sahf
out
aaa
lcall
out
cmp
dec
sahf
cmp
fcompl
ds
fwait
cmp
repnz
std
cmovb
repz
or
inc
adc
iret
repz
sub
inc
aas
dec
fcmovne
repz
dec
push
pusha
pop
sahf
xchg
xchg
xchg
imul
dec
daa
dec
aaa
jns
sqrtps
daa
mov
enter
add
sbb
rorl
iret
adc
sbb
and
daa
jp
pop
sub
xor
iret
cmp
inc
leave
push
mov
iret
addr16
leave
leave
leave
outsl
ja
jg
pop
mov
pop
xchg
iret
and
xchg
push
push
dec
in
inc
out
ret
xchg
xchg
inc
push
daa
pushf
or
pushf
movsb
jg
sbb
pushf
in
pop
add
inc
fnsave
pop
clts
add
dec
dec
adc
stc
mov
lret
cwtl
leave
cmp
lret
out
lret
and
pop
push
js
or
mov
lahf
jo
push
insl
and
xchg
xchg
xchg
pop
mov
cmp
jbe
stc
add
or
lret
pop
pop
jae
stc
fisttpll
mov
lret
xor
cmp
pop
dec
or
popa
in
repnz
insb
ja
and
in
lea
pop
sahf
adc
dec
iret
repz
push
cmp
mov
sbb
sbb
fucom
mov
push
sbb
sbb
sbb
pushf
cmp
push
daa
xor
cmp
leave
cmp
pop
out
jbe
imul
or
popf
xchg
das
mov
in
mov
fsub
int3
fxch
sahf
pop
fs
int
adc
push
int
jg
push
int
int
int
jns
inc
ja
add
leave
repz
cwtl
push
push
mov
dec
mov
mov
int
int
push
push
fidivrl
rorl
in
mov
int
pop
pop
pop
sti
int
into
adc
adc
sbb
daa
xor
cmp
sbb
push
setnp
xchg
push
pop
push
push
imul
jg
and
push
out
daa
iret
and
imul
andl
mov
stc
orl
addr16
inc
inc
add
fwait
lret
xchg
cmpsb
daa
sub
sub
fimull
fistpl
into
lahf
or
iret
das
out
sbb
and
sub
cmovno
jns
pop
dec
or
push
dec
movsl
inc
aas
or
mov
add
jg
iret
setp
movsl
xchg
out
pushf
mov
push
add
adc
fsub
push
or
mov
movsb
fwait
sysret
das
iret
fmulp
xchg
jae
or
adc
push
push
adc
xchg
and
ds
xor
aas
rorb
fsubr
cs
rcl
push
das
mov
xchg
add
mov
adc
or
and
xor
mov
pop
in
fcomip
pmulhuw
lock
iret
add
push
xchg
xchg
out
add
adc
sahf
and
jae
cmp
inc
pop
dec
adc
iret
adc
lahf
jnp
jns
out
pop
sbbl
xchg
rcrl
fwait
shll
shrb
fistps
into
rorb
xlat
pminsw
sahf
aaa
jb
cmc
roll
rorb
push
push
push
dec
sahf
out
pop
and
sub
cmp
in
or
push
or
jb
mov
pop
jns
repz
jae
adc
es
adc
movhps
mov
cmp
sbb
fmull
in
mov
pslld
sbb
push
xchg
negl
jg
or
pop
adc
push
iret
repz
sahf
and
sub
and
iret
leave
repz
and
repz
cmp
imul
xchg
out
fiadds
xchg
sahf
ja
mov
ret
push
xor
cmp
mov
fsts
aam
adc
fists
sbb
xor
mov
inc
dec
sbb
movsl
les
xchg
adc
inc
push
xchg
mov
sbb
pop
out
insb
out
movsb
cmpsl
ss
aas
inc
push
xor
not
rcrb
inc
inc
aas
dec
xchg
inc
push
scas
pop
inc
sub
jbe
xchg
inc
aaa
jns
pop
sub
cmp
push
cmp
in
in
add
add
add
or
xchg
fcmovne
leave
or
or
or
or
daa
adc
fmull
leave
adc
and
popf
pushf
inc
push
addr16
das
push
sysret
mov
in
push
mov
insl
push
and
leave
repz
sbb
push
pop
xchg
fucomi
addb
orl
addb
pushf
fmull
fbld
or
sbb
data16
and
and
sbb
dec
jmp
out
inc
cmp
xor
lahf
out
sahf
sub
sbb
clc
call
in
call
cmp
repz
ror
enter
iret
rcrb
test
cmp
cmp
nop
push
mov
rep
pusha
push
push
dec
pop
clc
cmp
inc
sub
or
adc
inc
mov
sbb
push
adc
and
movsl
adc
int3
xchg
adc
push
sbb
push
std
imul
inc
aaa
pop
pop
and
mov
adc
cmp
push
mov
pop
lock
movsb
add
cmpsb
fisttps
mov
movsl
sbbl
cmp
mov
decb
inc
out
in
jbe
pop
inc
mov
iret
mov
in
sbb
in
call
adc
aas
and
pop
fidivrl
xor
fcomp
loopne
pop
push
mov
jle
testb
decl
sbb
pop
add
or
xor
cmp
clc
jle
inc
aaa
push
jle
pmovmskb
add
mov
sub
inc
mov
aas
pop
add
daa
xor
out
jg
repz
les
or
out
ds
adc
jp
jle
out
sbb
cmp
repnz
in
mov
imul
pop
fsubr
and
xor
out
and
out
fnstsw
ljmp
addl
sti
les
out
les
cmpsb
aas
sarb
icebp
xchg
push
add
pop
or
fcoms
movsb
sub
pop
jle
loop
mov
add
add
cmpsl
xor
xorb
lcall
push
mov
push
rolb
jle
adc
insb
dec
not
push
push
xchg
aas
pop
push
lea
aaa
daa
idivl
sbb
pop
xor
dec
call
in
cmp
pop
jg
out
out
fcoms
inc
inc
sub
testl
daa
dec
dec
inc
inc
imul
dec
rolb
iret
repz
sbb
sbb
cmp
add
add
and
add
repz
xlat
push
xor
idivl
add
test
jge
lock
in
push
and
lock
jnp
das
pop
or
cld
adc
cmp
sbb
hlt
sbb
adc
sarb
out
sbb
push
rclb
jns
out
and
sahf
and
and
stc
adc
clc
ret
es
mov
adc
frstor
filds
mov
xorb
xor
xorl
pop
cmp
pop
jns
out
js
mov
repz
dec
repz
xor
add
imul
pusha
movsb
mov
jae
das
push
dec
mov
xchg
xchg
push
loopne
mov
add
cli
or
or
ret
sysret
stc
and
and
adc
mov
mov
sbb
into
sbb
rorl
and
lcall
lods
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
lcall
inc
in
adcl
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
jmp
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
call
mov
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
call
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
cmpsl
hlt
pusha
les
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
sbb
push
cmp
int
mov
addr16
xor
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
in
call
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jl
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
call
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
shrl
or
pop
enter
pop
inc
inc
je
inc
inc
push
dec
dec
in
je
jnp
cmpsl
add
cmp
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
mov
sub
pop
sbb
mov
repnz
push
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
decl
xchg
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
xchg
in
pusha
aad
jno
mov
inc
aam
aaa
std
ljmp
fimull
movsl
cli
test
xor
leave
mov
jecxz
jmp
ljmp
jne
filds
or
shrl
push
ficoms
push
xlat
enter
call
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
jmp
or
adc
stos
sbb
data16
inc
fdivl
jno
add
ljmp
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
pushl
dec
test
xchg
sbb
push
sub
insb
fs
incl
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
cmp
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
cli
incl
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
jg
adc
ret
movsb
sti
hlt
shrl
imul
mov
sarb
pushl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
call
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
decl
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
test
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
ljmp
mov
mov
mov
aad
mov
call
xchg
shll
push
repnz
pushl
icebp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pushl
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
jg
and
ja
int3
add
mov
das
es
lds
or
ljmp
sarb
push
pop
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
ss
decl
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
call
in
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
fcomip
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
mov
clc
sar
imul
push
js
or
push
addl
test
add
popa
cmpsl
notl
pusha
rorb
imul
jg
push
scas
fcompl
fldenv
filds
add
ljmp
lds
mov
jmp
jbe
repnz
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
sub
add
sub
int
pop
xor
sub
pop
and
push
adc
adc
cmpl
push
xlat
out
sahf
out
fcmovnu
xchg
out
sahf
fstp
loop
in
jns
out
call
out
sahf
in
in
repz
cmc
idivb
out
idiv
stc
cli
sti
mov
daa
adc
push
mov
inc
cmpsl
movsl
adc
test
mov
fs
movl
dec
bound
rol
insl
bound
push
dec
ss
ss
pop
stos
std
popa
je
push
cltd
out
aam
das
aas
and
inc
dec
push
push
lods
dec
inc
jns
xor
pop
inc
cmp
pop
bound
xor
aaa
idiv
cmp
popa
arpl
cmp
arpl
or
xor
aam
xor
bound
popa
clc
shl
push
inc
jbe
pop
insb
imul
insb
gs
push
dec
in
test
add
add
and
push
inc
push
jno
push
adc
or
or
fs
gs
je
scas
or
push
jbe
and
sub
mov
push
and
jle
gs
inc
mov
adc
xor
dec
mov
arpl
faddl
cmpsb
sub
insb
popa
jns
push
pushf
imul
pop
rcrl
xchg
cmp
outsl
adc
aaa
aas
pusha
pop
push
cmovb
aas
rorl
popl
subb
daa
imul
int
pop
xor
mov
aas
push
mov
mov
movsb
mov
fldenv
sbb
inc
pop
mov
jg
jbe
jae
inc
inc
inc
add
ds
shlb
mov
adc
mov
int
push
dec
cmp
inc
add
insl
inc
mov
ffreep
xchg
arpl
and
jne
jno
lret
popa
mov
jne
mov
xor
xor
inc
cmc
mov
or
add
addr16
out
fstl
xchg
into
pop
jo
testb
les
lods
pusha
inc
mov
aas
aam
inc
adc
add
lret
in
push
add
or
pop
outsl
xor
leave
xor
lcall
test
mov
or
rclb
inc
xorb
vmread
frstor
rcll
dec
popa
jo
cmp
mov
outsl
adc
mov
fdivs
adc
push
lds
xor
pusha
xor
nop
test
pop
cmp
arpl
cmp
mov
jo
push
dec
adc
push
xchg
sbb
outsl
insb
jns
das
aad
or
inc
jb
push
cmpsb
gs
cmpsl
mov
arpl
inc
mov
test
test
push
bound
ja
inc
jbe
push
shll
mov
dec
ja
dec
xor
daa
das
adc
int3
lcall
push
add
add
xorb
jmp
cmp
adc
lods
xor
pop
inc
dec
test
xchg
xor
cli
or
aas
adc
aas
adcb
outsb
rclb
inc
push
inc
cmc
sub
bound
outsb
arpl
and
xchg
sub
pop
push
jnp
cltd
pusha
in
insl
mov
add
aaa
inc
jne
push
rcll
adc
push
xorb
mov
andb
sub
inc
inc
and
add
ss
push
mov
push
decl
pop
inc
dec
pop
ds
fdivr
loopne
adc
mov
sbb
pusha
add
sahf
mov
add
add
outsl
incl
or
pop
pop
push
or
or
or
or
or
dec
sub
adc
push
adc
push
add
outsb
xlat
decb
pop
sbb
adc
adc
adc
add
data16
loopne
mov
or
rolb
mov
jo
add
and
add
sahf
add
sti
add
inc
push
add
test
xor
add
imul
call
fdivrl
call
xor
adc
pop
and
xor
add
jmp
inc
mov
adc
xor
cmpb
or
add
cmp
in
adc
add
add
arpl
add
push
adc
inc
or
add
xor
pusha
pop
adc
mov
scas
pushf
into
add
adc
add
pop
scas
cmp
adc
jl
pop
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
lcall
and
and
mov
mov
adcb
mov
fiaddl
or
and
dec
ljmp
cli
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
inc
aas
imul
fdivrl
add
mov
mov
loopne
mov
fnstcw
adc
rcll
dec
mov
inc
dec
pop
cmpb
ret
ja
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
xor
inc
xchg
jg
xchg
jl
add
sub
incl
adc
sbb
cli
and
mov
fiaddl
jg
cmpsb
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
call
sub
pop
mov
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
call
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
jg
sar
lcall
fs
scas
mov
pop
pop
mov
popl
movb
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
imul
out
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
lcall
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
sti
ljmp
push
out
or
push
sahf
pop
clc
sti
in
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
mov
xchg
outsl
xchg
add
pop
lock
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
stc
in
div
mov
sbb
mov
sar
andl
aas
icebp
testb
mov
inc
push
pop
xor
jns
mov
in
repnz
jno
pop
mov
jg
jg
scas
cld
or
push
inc
sbb
paddb
incl
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
push
lcall
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
in
aaa
fldln2
fildl
stos
es
or
dec
fisttpll
out
aas
std
push
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
jmp
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
popl
or
mov
cmp
das
jmp
xchg
pop
clc
pop
hlt
sub
push
aad
add
lea
jg
gs
std
xorb
decl
imul
outsl
adc
ret
das
pop
pop
pop
shlb
stos
jg
out
sarb
sbbl
jno
or
sarb
std
pop
inc
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
dec
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
pushl
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
call
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
fcmovu
ds
cmpsl
scas
popa
in
pop
or
pushl
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
outsl
adc
out
jae
shrb
shlb
out
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
repnz
jg
adc
loopne
sar
adc
paddsw
lahf
xor
imul
dec
sahf
cmpl
mov
aas
mov
fsubrl
orb
and
jg
ret
push
clc
xchg
pushf
mov
repnz
loope
cld
push
and
mov
adc
inc
aas
push
rcrl
lahf
loope
pop
rolb
pop
inc
jb
fistpl
adc
call
jno
repz
fbld
nop
mov
inc
sti
arpl
daa
std
or
sbb
lock
jg
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
ds
fistps
lds
fidivrl
jg
stos
pop
ds
ljmp
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cld
addl
sbb
mov
lahf
outsl
imul
clc
int3
push
sbb
pop
xchg
incl
test
bound
pop
outsl
xchg
inc
test
jg
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
pushl
jp
adc
lahf
mov
or
out
lcall
jle
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
cmpsl
dec
sbb
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
adc
jp
clc
insb
test
jle
in
aas
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
fs
sub
nop
out
jne
or
jg
inc
xchg
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
outsl
sub
call
faddl
xchg
lcall
jne
pop
sti
adc
dec
ss
lods
movsb
or
lahf
nop
jnp
repnz
mov
das
or
xchg
imul
aad
or
pop
in
cmp
jmp
mov
adc
aaa
insl
pop
lock
jmp
hlt
dec
mov
cmp
psadbw
xlat
inc
aas
mov
jg
mov
sub
mov
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
nop
cmp
das
incb
lock
pop
inc
orb
div
cld
idivl
mov
sbb
stc
lahf
loope
jae
jmp
shrl
je
jge
call
push
fbstp
out
xchg
add
out
icebp
mov
loope
lock
js
cmpsl
popf
sti
mov
fbstp
adc
push
adc
jge
aaa
loope
cmpsb
out
cmp
call
xor
incb
mov
adc
mov
and
imul
iret
cmp
or
mov
cmp
int
add
push
pop
aaa
cmp
std
fisttps
inc
pop
cmp
ret
sbb
xchg
fimull
xchg
popa
mov
ret
ror
sbb
aaa
sub
icebp
mov
adc
mov
sub
or
cmp
clc
loope
loope
mov
lahf
jp
mov
adc
mov
jb
jmp
xor
mov
iret
fdivrl
xchg
lcall
decb
xchg
mov
xchg
adc
into
sarl
pop
out
jg
jno
ret
nop
mov
testb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
in
xchg
pop
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
lcall
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
cli
and
sti
push
sti
pop
inc
xchg
cltd
pop
adc
push
inc
sub
scas
cmp
int3
pop
iret
and
incl
mov
add
mov
cmpsb
int
xchg
pop
push
adc
push
inc
call
les
das
inc
mov
fcmovbe
enter
push
mov
mov
dec
test
ljmp
popa
lods
pusha
push
mov
cltd
in
pop
sub
das
dec
push
cli
lret
imul
jb
jge
jmp
dec
test
jnp
mov
iret
popl
push
cmp
sbb
stos
push
add
js
pushl
jmp
jle
aam
pop
adc
cmpb
sbbl
mov
dec
rorl
push
xchg
lret
gs
mov
xlat
sbb
outsl
add
xchg
test
mov
std
xchg
inc
std
lcall
mov
xor
stc
ret
jg
pop
in
sub
inc
adc
out
cmp
xchg
fsubs
sub
loop
pop
into
pushl
push
jecxz
call
pop
insb
frstor
dec
mov
test
outsb
inc
jge
lret
mov
sub
pop
adc
call
inc
push
push
cmp
loop
and
mov
xchg
or
and
lcall
sbb
xor
loope
mov
mov
xchg
push
fisubrs
pushl
insl
mov
mov
daa
leave
push
mov
adc
fdivrs
cmp
cmc
enter
nop
jns
imul
add
cmpb
mov
pushf
iret
push
notb
dec
push
enter
incl
stos
sbb
xor
rclb
mov
mov
je
mov
call
push
jmp
push
bound
push
ficomps
xorl
push
int
cmpsb
push
cmp
fistl
lcall
out
push
arpl
and
push
pop
popa
mov
loope
js
mov
sbb
push
test
jbe
cltd
inc
mov
movsb
imul
lcall
mov
jo
mov
popa
scas
iret
pop
lods
push
jp
cmp
ss
jmp
cld
imul
cmp
mov
xchg
notl
lods
sbb
pop
add
sbb
cmpsl
out
mov
cmp
test
ror
pop
sar
gs
push
out
adc
xor
adc
sahf
add
out
mov
or
jae
aas
inc
mov
dec
insb
dec
dec
aas
jmp
sub
or
out
mov
dec
jmp
xchg
or
push
xlat
jg
mov
pop
and
ret
cmp
fisubrs
sbb
in
add
cmp
push
scas
cmpb
xor
mov
lods
xchg
jne
cmp
xlat
dec
js
rorb
xchg
pop
jle
pop
pop
inc
mov
jns
adc
movsb
lods
incl
imul
pop
mov
nop
and
dec
mov
out
mov
push
repnz
adc
cmp
cmp
sub
or
mov
popa
xor
ds
les
lds
add
sti
jb
adc
adc
sar
mov
pop
jl
sti
inc
inc
dec
pop
data16
inc
mov
call
std
stos
lcall
test
and
int3
adcb
mov
repz
call
jbe
sub
shrl
cmp
or
mov
lods
add
lods
and
jg
mov
call
jle
pop
jns
sub
pinsrw
pop
xchg
aam
das
pushf
or
cli
loopne
mov
test
out
call
or
mov
in
and
incl
jl
adc
in
sub
push
adc
pop
lock
fwait
sub
jae
aam
pushl
scas
xchg
cld
sbb
shlb
push
mov
shrb
jmp
out
fs
jae
xor
loope
ljmp
inc
scas
sub
addb
arpl
mov
mov
ljmp
add
fisubs
dec
sub
jle
shlb
movsl
or
imul
lcall
data16
cmpsl
cmpsb
sahf
push
pop
pop
ret
adc
fnsave
xor
push
mov
insb
mov
lock
cs
jp
mov
push
sbb
mov
or
lcall
and
test
into
rorb
aas
adc
and
bound
call
cmp
scas
sbb
addb
stc
mov
stos
ds
out
xor
sub
jns
lahf
jbe
fimull
or
adc
adc
std
pop
sub
jge
fimull
clc
test
sahf
movsb
inc
cmp
cmc
pop
rclb
and
dec
cmp
xchg
and
push
jbe
push
jecxz
rcrb
decl
sbb
or
adc
jbe
inc
cmp
xchg
aas
push
inc
and
outsl
mov
jno
ljmp
test
hlt
leave
das
mov
std
pop
fadd
nop
repz
push
aad
ljmp
cli
lret
fwait
sarl
mov
dec
arpl
inc
jnp
leave
roll
inc
jbe
jle
cwtl
adc
xor
test
rol
repnz
hlt
into
cmpsb
jmp
xlat
cmc
adc
and
lods
stos
lcall
fnstsw
test
int
sahf
push
sub
pushl
dec
imul
dec
mov
sub
out
movsl
lods
jns
cld
pop
dec
xor
pushl
push
add
jb
fdivrl
dec
push
movsb
stos
lahf
insb
in
test
ljmp
lcall
xor
add
icebp
sbb
lcall
ljmp
dec
fs
sub
das
stc
cmp
orb
jg
push
pop
dec
out
ds
scas
sbb
ljmp
mov
sbb
ror
xor
das
mov
mov
and
cli
fsts
jns
mov
mulb
iret
imul
dec
xchg
add
mov
ljmp
xor
aad
sarl
inc
scas
icebp
dec
dec
mov
pop
in
sbb
add
inc
sti
add
fwait
mov
mov
and
cmp
outsl
aam
insl
pop
lods
inc
mov
mov
mov
mov
dec
mov
jecxz
scas
cmp
mov
push
lcall
mov
cld
cmc
pop
jg
ja
out
xor
out
insl
adc
std
inc
mov
mov
ja
dec
push
incl
mov
ja
jnp
rol
inc
jae
sbb
clc
scas
xor
clc
xchg
out
outsl
add
data16
hlt
mov
jecxz
dec
pop
jmp
pushf
mov
imul
in
push
sti
jg
je
stc
pop
jbe
sbb
js
push
sub
inc
inc
out
mov
das
js
push
repnz
test
ljmp
adc
fimuls
mov
sub
popf
aas
mov
inc
outsb
adc
mov
sbb
add
je
test
sbb
xchg
jg
ret
ljmp
cli
insl
xchg
scas
jae
push
mov
std
popa
repnz
mov
aad
pusha
rcr
movsl
mov
xor
pop
fcos
mov
inc
jbe
leave
mov
out
fldenv
adc
and
jmp
test
mov
dec
adc
sub
mov
xlat
xchg
pop
cmp
shr
data16
adc
cmp
ja
dec
sbb
cld
sub
ljmp
cvtdq2ps
push
das
ret
lock
fcmovbe
movsl
lods
fisubl
into
lods
incl
mov
and
mov
outsb
inc
cmp
and
scas
fs
or
repz
cmp
push
lock
jecxz
pop
jbe
fs
stos
call
mov
js
xchg
mov
mov
and
lret
aas
sub
add
ljmp
std
lahf
into
pop
les
adc
es
push
loopne
fisttpll
es
movsl
ret
pop
cmp
or
sbb
call
xchg
insb
sbb
mov
and
sub
push
jo
call
sub
mov
adc
xchg
loopne
and
mov
inc
and
inc
or
divl
xchg
mov
cmp
dec
jno
movsl
adc
not
loopne
insl
jle
jecxz
call
jge
cli
jle
cmpl
xor
dec
dec
push
fldt
push
adc
arpl
mov
ljmp
fildll
aam
pop
inc
sub
mov
jl
jg
stc
shufps
cmpsl
sub
or
pop
jae
cmp
out
clc
daa
sub
pushl
gs
mov
loope
adc
ss
cmp
inc
push
inc
xor
xchg
in
sub
das
add
or
ljmp
xchg
or
jmp
inc
jecxz
pop
pop
inc
jns
mov
inc
rolb
add
leave
jb
push
roll
ds
inc
push
out
mov
pop
imul
sbb
mov
xchg
or
jne
dec
enter
lcall
sahf
in
incb
test
cmp
fstpt
rcll
outsb
lods
in
lea
sbb
ds
jns
and
pop
mov
aas
push
sbb
and
ljmp
pushf
sub
cmp
decl
incl
std
jne
add
mov
sub
cmpsb
add
mov
xor
jmp
mov
rcrb
out
push
loope
fimull
movb
hlt
imul
sti
jg
in
movsb
addr16
cmpsb
dec
sbb
mov
das
inc
faddl
and
cmpsb
leave
cli
jmp
mov
add
jecxz
cwtl
daa
pop
cld
jno
dec
push
addr16
cmp
lods
mov
lods
cmp
divl
adc
fcomip
fnsave
divb
loop
stos
pop
jb
and
xchg
mov
inc
push
and
xchg
sbb
data16
mov
sub
xor
add
cld
push
imul
jmp
mov
subb
jbe
imul
iret
push
iret
xchg
popf
dec
xchg
mov
cmp
repnz
push
stos
pop
push
pop
stos
push
fmuls
imul
or
add
lcall
cli
pop
add
add
jmp
into
or
lods
add
xchg
xchg
stos
mov
lcall
test
dec
inc
lret
jl
out
mov
xchg
xchg
and
addr16
popa
add
sbb
dec
sbb
cld
pushl
sbb
outsb
in
sub
push
mov
pop
xchg
pushl
incl
push
pop
mov
aas
jbe
scas
lcall
inc
fmul
sub
cmp
xor
or
sub
add
leave
sub
aad
xchg
lcall
cmp
jle
fcompl
sbb
mov
xor
sbb
mov
jmp
outsl
clc
mov
les
cld
mov
and
sahf
cltd
addr16
cmp
push
mov
test
repz
notb
andb
jb
mov
decl
and
jge
mov
cltd
icebp
adc
shrl
mov
sbb
cmp
sub
fistl
cmc
jmp
cld
or
cmp
sub
xchg
xor
std
mov
in
cmc
push
or
mov
jg
cs
in
insb
pop
es
cwtl
mov
inc
push
clc
lcall
push
fidivrl
push
fmull
push
jae
clc
sbb
mov
push
pusha
lret
mov
clc
cmp
movsb
push
shrl
cwtl
jbe
shlb
xchg
ffree
out
into
jle
incl
andb
lret
imul
mov
push
in
inc
mov
pop
inc
call
dec
ret
push
mov
jno
aaa
test
pop
pushf
hlt
cmp
lea
xchg
or
mov
xor
inc
aam
decl
movsl
jp
sbb
insl
adc
push
rcrl
lds
subb
pop
jl
and
dec
push
mov
sub
insl
in
enter
mov
xchg
push
adc
jg
push
aas
ljmp
ret
jbe
fisubl
mov
xor
call
or
pop
sar
xor
call
fsubs
jp
imul
test
aaa
std
jno
dec
pusha
mov
adc
enter
sub
test
mov
loop
jmp
aaa
roll
lods
jmp
pop
inc
sbb
sub
pop
ss
add
popf
fnstsw
test
cmpsl
test
movsl
icebp
decl
daa
xchg
scas
sub
fdivl
xchg
jmp
jp
mov
jmp
lcall
inc
jns
add
fsubs
mov
rcrl
inc
push
and
mov
imul
cli
fmull
cmovle
cmc
jecxz
adcl
stos
lcall
scas
popf
shlb
jecxz
lods
mov
lods
xchg
pushl
pusha
xor
lcall
and
jge
and
mov
in
push
sti
mov
push
ljmp
mov
imul
in
cmpsl
nop
divb
xor
shll
dec
push
pop
jnp
icebp
cltd
mov
call
icebp
outsl
stc
fildll
sarb
mov
push
insb
dec
jecxz
fisubrs
inc
or
mov
add
pop
jecxz
adc
xor
or
cs
loop
lods
sbb
pop
add
std
lcall
xchg
jmp
mov
push
loopne
ret
lret
insb
out
scas
arpl
sub
outsl
mov
mov
xchg
push
test
mov
mov
pop
pop
xor
jl,pn
inc
jbe
sbb
fldenv
out
popf
and
ret
adc
jmp
jne
inc
and
pop
inc
test
lds
decl
lret
push
stc
out
ds
sub
sti
cmpsb
adc
mov
adc
pushl
lret
inc
in
push
int
in
int3
out
shlb
mov
xchg
inc
jne
sbb
in
mov
inc
push
popf
mov
enter
fists
mov
inc
inc
stos
push
cmp
push
roll
aas
lods
mov
add
adcl
insl
push
scas
mov
jns
push
or
out
jmp
mov
jg
pop
mov
stos
roll
mov
ja
adc
enter
pushl
and
dec
pop
ficoml
pop
mov
mov
cmpsl
enter
inc
and
mov
jne
gs
movb
mov
jne
mov
xchg
pop
adcb
mov
or
jns
and
pop
jmp
lret
inc
add
dec
sahf
iret
int3
xor
roll
add
pop
aas
ss
jg
and
in
mov
orl
and
sbb
hlt
xchg
out
aas
lahf
xchg
int
mov
pop
lahf
mov
and
clc
lea
or
jne
fimuls
repnz
jg
incb
xchg
or
xor
addr16
mov
adc
jmp
aam
cmp
push
andb
ds
cmpsb
aad
shrb
lods
xchg
scas
out
dec
lret
les
es
cld
adc
loopne
incl
inc
add
jbe
pop
cs
decl
inc
adc
aam
decl
mov
sub
mov
adc
push
mov
call
mov
jo
out
subb
add
jmp
gs
mov
mov
insb
sub
outsl
or
test
test
sbb
pop
das
pop
lea
adc
out
and
fcmovne
mov
sbb
jmp
rcrb
jae
decl
movsl
jbe
push
sahf
imul
cmp
pop
lods
jnp
and
and
and
mov
inc
fnstsw
and
cs
testb
inc
add
rdmsr
decl
aaa
xchg
ret
into
addr16
xor
cs
mov
mov
pop
push
cmc
xchg
int3
outsb
push
xchg
subl
xchg
dec
stos
idivl
lods
adc
cmp
movsb
scas
mov
stos
jmp
lcall
push
fimuls
mov
mov
pop
and
cltd
xor
jmp
in
rcr
jmp
rcll
sbb
in
mov
jmp
cmpl
or
ja
shlb
inc
clc
pop
inc
inc
negl
push
pop
dec
and
sub
xor
mov
shrb
jae
incl
mov
int3
adc
jns
inc
mov
adc
cmp
bound
decl
iret
mov
or
cmp
call
sbb
add
xchg
clc
and
add
aad
mov
mov
ljmp
pop
mov
loope
outsb
popf
xchg
jmp
lcall
push
mov
out
fmuls
dec
or
insb
inc
mov
dec
fs
mov
call
scas
push
in
jl
call
or
sbb
call
mov
decb
div
adc
xor
or
repz
inc
ljmp
scas
push
leave
lcall
jae
in
stos
pop
sbb
ja
push
sub
lock
test
pop
sub
mov
dec
mov
mov
cwtl
incb
cmp
cli
push
loopne
mov
call
and
das
xchg
jmp
xor
add
inc
sarl
fdiv
notl
leave
jae
sub
cs
xchg
jb
push
out
push
jbe
ljmp
mov
xlat
sbb
nop
test
add
ja
xchg
push
push
add
or
jg
mov
jae
es
or
rcrb
or
incl
cmp
sbb
mov
push
jge
sbb
xchg
mov
scas
jle
jle
jnp
mov
in
leave
mov
dec
ljmp
mov
mov
call
xchg
push
bound
aam
mov
adc
inc
fxch
mov
mov
test
xchg
mov
xor
jns
pop
mov
int3
xor
pop
mov
hlt
add
push
mov
cld
cld
clc
or
movsl
xor
mov
sub
js
add
cltd
shr
xor
jg
sub
push
sbb
add
pop
jns
pop
pop
mov
fucom
mov
jp
push
adc
mov
mov
sbb
nop
jne
cmp
call
sbb
jl
cmp
sbb
mov
into
fstl
test
incl
sbb
sbb
pop
fidivs
addr16
into
mov
sub
mov
add
call
aaa
leave
xchg
sbb
movb
cmp
cld
ljmp
push
adc
push
sbb
mov
push
clc
mov
mov
enter
pushf
pop
add
mov
fistpll
and
or
cwtl
push
leave
add
es
mov
cwtl
les
and
call
mov
dec
ss
and
lfence
add
in
inc
dec
in
mov
push
jl
adc
lods
mov
add
sub
incl
mov
ret
pop
fsts
or
loope
mov
call
push
outsb
icebp
sub
insb
arpl
fdivrp
nop
ja
or
fnstenv
mov
repz
inc
pusha
data16
popa
mov
cmpsb
ljmp
lret
js
fdiv
cmp
mov
addr16
addr16
loope
dec
pop
and
cmpsb
aam
dec
jmp
mov
repz
daa
cmp
jbe
loope
mov
imull
mov
sbb
lds
lcall
cld
loope
add
xor
leave
fidivrl
xor
lret
outsb
aad
and
lahf
push
mov
mov
mov
sub
in
fisttps
in
aaa
mov
jmp
fimuls
inc
cmp
ja
jne
lahf
fwait
xchg
or
fstps
in
movsl
adc
mov
jmp
xchg
xchg
sub
call
cmpsl
mov
xlat
ja
mov
imul
and
mov
ss
sar
jg
call
xor
aas
adc
mov
mov
dec
cmc
test
dec
sti
xlat
pushl
insl
jecxz
pop
mov
idiv
cli
gs
xchg
add
cmp
pusha
jnp
ljmp
mov
pop
repz
cmp
divl
mov
lds
into
inc
test
adc
ljmp
sub
fs
int3
xchg
and
xor
rcrb
jge
jmp
lds
addr16
jmp
sbb
adc
fwait
sub
icebp
jge
lock
mov
mov
mov
jnp
cwtl
xchg
call
push
cwtl
push
inc
jl
rorb
test
pop
mov
lcall
outsb
push
insl
jmp
mov
xor
in
jb
mov
inc
inc
mov
add
mov
jmp
rolb
xorl
test
dec
movsl
xchg
and
mov
int
pusha
idiv
incl
fists
stc
in
fisubrl
jb
cwtl
mov
imul
arpl
outsl
jge
test
jns
add
call
ja
cmp
fisubl
loope
cmp
repz
sub
jmp
js
arpl
adc
mov
out
xchg
lea
inc
push
lcall
decl
bound
xor
lds
xlat
cmc
sub
int
jmp
call
mov
insl
jp
pop
dec
frstor
fchs
pop
mov
ret
sub
and
adc
jp
cltd
pop
call
icebp
das
pusha
adc
out
movsl
mov
dec
shll
lret
pop
add
xchg
pop
jo
push
pop
xor
femms
cltd
aas
adc
cli
dec
mov
dec
out
mov
rcrl
decl
cs
add
shrb
jo
adc
shlb
pop
loopne
jmp
ret
push
adcl
xor
mov
ljmp
push
sub
sub
arpl
cltd
xchg
dec
mov
sti
sbb
insb
adc
pop
insl
mull
sar
mov
aaa
pusha
jmp
cmp
push
fnstsw
les
movsl
inc
call
ljmp
fildl
jae
icebp
cmp
cmp
fcompl
fistpll
aas
nop
dec
psrld
movsl
std
ljmp
clc
aam
xchg
stos
aaa
mov
pop
dec
cmp
sarl
lahf
jge
or
jo
add
jg
sub
xchg
mov
xchg
add
fcom
xchg
into
outsb
cs
incl
sub
jle
int3
orb
repz
incl
sub
ljmp
stos
notb
bound
mov
aad
outsb
dec
ljmp
mov
std
faddp
sahf
add
or
push
ja
cmp
jecxz
ds
inc
cli
stos
mov
decl
cld
mov
pop
inc
imul
mov
aam
sbb
sti
jge
lahf
fstl
xchg
pop
push
rcrl
aas
jmp
inc
jmp
out
mov
cmp
aas
shlb
jae
dec
jns
push
sbbb
push
les
nop
xchg
push
lahf
mov
dec
rorb
jne
push
ret
mov
fistl
cmc
mov
fmull
jo
aas
sub
in
fstpl
mov
aam
cli
cmp
jns
mov
stos
and
push
push
subl
cmp
incl
pop
xchg
fstpl
pop
adc
clc
incl
mov
movsl
sbb
mov
push
gs
daa
inc
push
ss
xchg
insb
fcomip
add
fimuls
call
jl
in
in
lret
pop
and
jge
push
repz
jo
xchg
sbb
out
lret
add
aam
pop
mov
inc
scas
lcall
xchg
fldln2
pop
push
mov
cmp
insl
jge
cld
adc
mov
dec
cmp
ljmp
xchg
bound
push
push
jbe
aas
push
xchg
sbb
push
jle
xor
add
cli
aam
loope
fiaddl
daa
pushf
push
ret
dec
mov
cli
inc
mov
sbb
mov
shrb
pop
mov
dec
dec
push
or
lea
out
loopne
mov
cmc
fistpll
or
incl
mov
addr16
clc
and
pop
push
sub
sbb
jo
mov
incl
pop
or
hlt
lret
mov
jp
add
cmp
test
aas
jnp
imul
fcomip
decl
test
je
inc
je
and
out
in
cld
ja
incl
call
mov
mov
iret
out
mov
addb
pop
dec
hlt
push
cli
sbb
pushl
cli
fnstcw
pop
mov
sub
push
stos
lret
icebp
in
pop
cmc
dec
mul
cmp
decb
pop
cmp
les
ljmp
andb
ljmp
aam
lds
lods
push
negl
js
xorl
imul
push
adc
test
out
and
enter
int3
stos
xor
or
test
pop
imul
test
popa
adc
or
cmp
call
arpl
incl
fsts
jmp
bound
mov
adc
in
inc
in
adc
jmp
add
jmp
adc
int
inc
ljmp
push
push
lcall
cld
decl
int3
mov
mov
jge
jb
jmp
scas
scas
push
inc
sti
and
cmp
mov
mov
call
mov
jne
mov
fiaddl
insl
adc
std
je
or
arpl
movsb
insl
test
scas
pushl
lret
movsl
inc
sub
jmp
push
lret
sub
dec
mov
push
xchg
xchg
adc
lcall
js
enter
push
mov
ss
mov
ljmp
test
cltd
mov
cmpb
mov
or
test
dec
iret
leave
gs
addr16
and
pop
xchg
sti
pop
sub
xchg
paddsw
data16
aam
lcall
or
inc
jae
std
sub
mov
pop
lock
daa
das
inc
mov
inc
popa
mov
jl
mov
jbe
repz
fstpl
data16
iret
cmp
sbb
sub
pop
fiaddl
inc
jb
sbb
fldcw
or
mov
inc
fnstenv
cbtw
ss
popf
fbld
aas
or
xor
add
xor
loopne
lcall
jge
cmp
fbld
in
rorb
mov
sbb
in
js
ljmp
mov
dec
jmp
sbb
fbstp
loop
pop
pusha
pop
jg
decb
inc
fidivrl
xor
cmpsb
dec
dec
mov
or
in
fs
mov
inc
sbb
lcall
fsubrs
pop
dec
jp
ljmp
in
dec
bound
test
std
add
pop
jns
das
out
sbb
mov
and
pop
std
inc
clc
into
jle
movsb
adc
and
jp
mov
xchg
pop
cmpsb
movsb
lcall
push
lds
sub
ja
ret
or
jb
ljmp
adc
stos
lea
fstpl
sub
mov
cmpsl
out
cltd
mov
add
es
in
jnp
das
mov
std
cmp
outsl
cltd
dec
das
dec
sub
fwait
int
outsl
shrl
mov
dec
cmp
mov
dec
cmpsl
pusha
and
dec
fs
xor
xchg
pop
lods
stos
sub
push
jp
mov
arpl
pushf
incl
xchg
rolb
orl
mov
fadds
mov
incl
dec
pop
push
pushf
in
out
aaa
lcall
out
jecxz
push
notb
mov
push
loop,pn
ficompl
dec
dec
rcrl
scas
push
sbb
sbb
sub
leave
xlat
mov
jecxz
arpl
flds
outsb
daa
repnz
stos
fwait
or
lock
aam
imul
mov
adc
xor
lcall
jmp
adc
jle
pop
sub
mov
mov
fmull
ret
jnp
push
xchg
mov
inc
push
inc
roll
xor
cmp
fcompl
pushl
mov
repnz
data16
mov
enter
cmp
mov
xchg
jg
mov
xor
jnp
arpl
in
pushf
int3
lods
mov
lds
cmp
lock
call
aas
insb
adc
jno
jg
jg
and
mov
xor
add
clts
push
cwtl
lods
aaa
cld
ljmp
and
enter
stos
out
push
push
shlb
push
xchg
dec
jmp
add
sti
inc
inc
pushf
pop
dec
clc
xlat
int3
lret
sbb
out
scas
xchg
enter
jg
sub
call
jl
loopne
xchg
push
xorb
mov
xor
sub
pushl
imul
popf
xor
and
roll
inc
push
and
pusha
stos
arpl
int
incl
and
pop
or
mov
stc
or
push
xchg
sbb
lcall
aad
cmp
dec
addr16
lahf
rol
mov
push
fwait
shrb
xchg
mov
jecxz
fcomip
ss
ljmp
push
push
and
dec
add
mov
xchg
aas
shll
fnop
push
iret
stc
cmc
andl
fcos
decl
aaa
add
mov
jbe
jg
push
std
lret
or
pop
add
ret
adc
cmp
aaa
cld
scas
mov
jo
and
outsl
inc
pop
call
and
add
mov
push
cmp
jns
and
decl
cld
pop
movsl
dec
nop
cmpsl
mov
xor
mov
xor
mov
jo
xorb
add
cmpsl
out
call
xorl
fwait
nop
xchg
jge
xchg
lret
add
lahf
jns
leave
jbe
dec
imul
cli
jmp
pop
fisubrl
mov
lods
pop
cltd
aam
in
in
xchg
incl
pop
fcmovnb
int3
outsl
outsb
push
outsl
js
call
cmpsb
int
loope
inc
sarb
mov
mov
push
dec
test
pushf
push
loop
in
ss
popf
push
pop
mov
imul
push
stos
inc
inc
push
sub
sti
or
push
mov
jmp
xorb
push
cmp
pop
xchg
and
sbb
lahf
cmp
mov
lcall
mov
xchg
xchg
fs
das
das
sbb
pop
clc
jp
and
out
xchg
jmp
xor
push
sub
inc
jmp
popf
cli
stc
adc
sub
pop
and
xor
nop
lds
adc
sbb
shll
mov
sub
xchg
xchg
xor
jp
aad
xlat
push
bound
testl
mov
std
decl
or
outsl
lea
push
xor
jg
icebp
and
push
dec
pop
loop
out
clc
pushl
sub
xchg
out
notl
push
scas
or
pop
fistl
mov
shll
mov
cmp
jg
pop
pop
and
xchg
stos
stc
rorl
lds
pop
or
cwtl
mov
jns
jg
call
jae
cltd
add
orb
mov
mov
pushf
loopne
mov
add
lcall
mov
mov
and
shll
cmp
imul
lods
mov
scas
push
ret
xchg
fistpll
or
lcall
push
fs
cltd
ds
ret
and
push
data16
sbb
dec
push
adc
ljmp
pop
ret
movsl
adc
adc
imul
lcall
mov
jns
cmpsl
movsl
and
fdivrp
cmp
and
mov
adc
mov
sub
pop
std
or
pop
or
test
test
ljmp
incb
lret
jne
bound
cmpsb
mov
push
in
bound
out
push
mov
fsubl
call
xor
clc
xor
pop
and
xchg
adc
sub
bound
jmp
ja
cmp
xor
push
jge
mov
mov
sti
lcall
push
imul
mov
mov
in
pop
insl
push
decl
or
imul
mov
fcomip
xchg
mov
adc
out
jne
daa
les
mov
stc
popa
pushl
mov
cmp
adc
call
inc
cmp
inc
xor
adc
or
mov
scas
fimuls
xchg
push
jae
insl
pop
or
mov
pop
inc
ljmp
xchg
lds
addr16
in
cs
cmc
leave
out
push
pop
imul
jmp
pop
pop
sarl
fisttps
cld
sbbl
mov
pushl
inc
add
mov
fadds
out
xchg
sub
ret
cltd
cmp
outsb
mov
insl
daa
sub
pop
jge
cltd
push
adc
fldenv
jg
lret
pop
call
sbb
out
push
mov
cmp
in
cltd
jae
add
add
jecxz
sub
jge
loop
aad
mov
mov
lock
and
movsl
clc
and
push
js
adc
dec
mov
mov
repz
mov
call
or
and
scas
cli
fcoms
stos
stc
inc
push
rcr
scas
fstpl
sbb
lcall
dec
neg
in
push
out
hlt
lea
jb
push
mov
lcall
pop
mov
jmp
jg
insb
xor
mov
pop
out
xor
sub
pushl
xor
adc
shll
aas
movsl
into
push
lds
std
mov
lock
ljmp
iret
in
mov
call
ret
xchg
repnz
pop
outsb
fcmovb
pop
dec
jecxz
xor
inc
iret
and
or
or
sbb
aad
jne
cli
adc
fnsave
testl
in
mov
js
call
outsb
or
cmp
sahf
dec
enter
push
imul
sbb
pop
fistpll
test
mov
dec
lock
jle
popa
pop
lahf
jnp
sbb
call
mov
dec
loope
mov
mov
clc
cld
inc
cmpsb
je
inc
cltd
cwtl
outsb
xchg
xchg
cmpsb
and
push
int3
or
je
xchg
out
jecxz
lcall
pusha
sbb
adc
hlt
adc
sti
pushl
fcomps
pop
and
cs
push
cmp
aas
mov
iret
sub
jg
ljmp
sbb
std
leave
xchg
js
or
mov
mov
fwait
push
lcall
sti
push
and
sub
nop
arpl
cmp
fisubs
sarb
pop
pop
fcomip
decl
pop
push
daa
ds
sbb
fdivrs
repnz
or
push
enter
push
ja
clc
dec
aas
mov
jle
cwtl
xchg
ljmp
inc
lods
push
mov
outsl
mov
incl
aas
mov
and
pusha
movsb
and
roll
icebp
xorb
mov
andl
std
jmp
mov
cmp
jnp
in
je
fsts
add
xor
or
bound
dec
imul
sbb
adc
sti
sbb
aad
push
lock
stos
adc
push
add
clc
push
iret
test
aam
fcomip
decl
mov
xor
aad
in
xorb
cwtl
loope
mov
fs
jp
repz
fprem
add
mull
jp
mov
mov
sbb
call
cmp
mov
repz
mov
sbb
clc
decl
push
sbb
repz
stc
or
in
incl
popw
sub
mov
or
xor
push
out
scas
jmp
pop
addr16
clc
test
stos
add
adc
dec
lret
andl
test
jne
dec
jg
push
fstpt
ds
ror
jmp
lcall
imul
sub
loopne
negb
push
pop
mull
rolb
lcall
cmp
aad
mov
adc
mov
stos
fs
cmp
and
lods
and
adc
lcall
xlat
mov
stc
rcll
mov
nop
mov
jo
sub
mov
ljmp
jae
pop
fidivs
mov
sbb
fcoms
stc
pushl
std
ljmp
lret
and
hlt
mov
hlt
cmpsb
nop
dec
cli
shll
std
mov
incl
loop
cmp
push
lcall
enter
ret
inc
add
repnz
and
xchg
nop
pushf
insl
incl
mov
jge
xchg
push
cmc
negl
outsb
jg
repnz
adc
jo
inc
imul
popa
call
int3
call
jbe
clc
dec
imul
or
mov
loopne
sub
test
add
push
xchg
mov
or
lcall
cmpsl
or
aam
cmpb
sub
mov
fidivl
or
pushl
mov
sub
add
int3
xchg
push
xchg
lods
mov
stc
enter
xor
ljmp
daa
mov
jge
add
mov
mov
xor
fmuls
call
bound
xchg
jne
pop
scas
mov
mov
push
loopne
pop
jmp
jo
add
lcall
arpl
push
je
jae
xor
add
loop
add
lcall
mov
loop
div
cmp
mov
fs
xor
mov
stos
and
nop
inc
subb
jecxz
loop
vunpcklps
bound
jle
lea
add
xchg
fimull
arpl
roll
push
cmp
sbb
cltd
ljmp
cltd
or
fwait
es
sub
mov
or
jno
sbb
sub
jl
imul
cli
dec
fs
xor
xlat
pinsrw
cmpsb
fisttps
test
sbb
or
pusha
into
jmp
xor
mov
cmp
push
sub
frstor
mov
or
mov
fldl
call
insl
pop
arpl
sub
mov
dec
sbb
ljmp
sahf
xchg
jp
movsb
xchg
sub
fcoml
mov
dec
mov
inc
adc
lds
repz
inc
sbb
gs
test
lcall
inc
sbb
xchg
and
pop
lcall
scas
dec
repnz
push
adc
lcall
ja
sub
and
add
pop
popf
sbb
push
mov
ljmp
or
push
adc
dec
out
scas
mov
cmp
pushw
cltd
and
aaa
dec
sub
scas
xor
int
out
jl
xchg
aam
xchg
call
pushf
cwtl
fwait
add
push
xchg
movsl
bound
call
xorl
sti
mov
mov
pusha
jecxz
push
and
jmp
push
inc
or
mov
mov
loopne
rcll
clc
mov
jecxz
aad
mov
push
jno
push
jp
xchg
adc
rorl
xor
call
loopne
jmp
push
push
mov
jbe
ret
outsl
dec
sub
out
lahf
mov
jmp
enter
pop
loope
mov
pop
addb
add
jbe
pop
dec
xchg
jns
mov
and
decl
aas
inc
sub
adc
sbb
sbb
push
jp
scas
in
nop
aas
push
stos
push
jbe
js
lds
movsb
adc
es
sar
jb
pop
or
cmc
clc
lcall
insb
add
incl
push
push
pop
or
lods
repnz
sub
cmp
mov
push
addl
xlat
mov
ja
jmp
lods
in
outsb
add
inc
fisubs
xorb
and
cmp
fdivrp
jo
or
push
iret
and
xchg
mov
xchg
push
rorb
imul
test
inc
xchg
call
aad
cmp
or
call
xor
sbb
int
popf
lret
xchg
ret
icebp
sbb
nop
cmp
mov
adc
popf
stos
out
xor
sub
mov
movsb
in
arpl
out
ja
pop
scas
adc
jns
rcrb
fimull
lods
decb
push
or
rorl
pushf
ljmp
xchg
ffree
jp
and
dec
in
cltd
cmp
sbb
lds
sub
out
data16
pushl
aaa
xor
xchg
aad
stc
gs
mov
pop
jo
rclb
cli
jne
mov
loope
call
bnd
into
repnz
pop
adc
icebp
mov
xor
mov
fcomi
pusha
sar
dec
jo
cmpsb
pop
dec
mov
cmc
fsubp
dec
xchg
es
rcll
and
ljmp
cltd
scas
aaa
cld
leave
push
nop
js
dec
out
addb
inc
push
lods
cmp
out
imul
cltd
insl
jg
sahf
decl
adc
aam
adc
pop
cmpsb
jbe
jge
sub
cmp
cltd
adc
call
and
dec
shrl
push
cmp
int3
push
mov
mov
gs
leave
cmp
pop
insl
or
and
lea
sub
in
mov
inc
and
dec
scas
mov
repz
mov
cs
and
pushl
dec
adc
movsl
fmul
push
sub
imul
xchg
sahf
add
jecxz
pushl
out
jae
or
cli
cmp
or
and
push
push
fxtract
in
fcomps
mov
cmp
push
mov
mov
pop
xchg
or
mov
mov
fcomip
sbb
sub
cmp
pusha
mov
and
jno
lock
ljmp
ss
mov
add
pop
jmp
das
das
fsubrs
fsubrs
jmp
lcall
jo
mov
notl
pushf
divl
push
mov
xor
or
inc
cwtl
sbb
adc
mov
cmp
xor
pop
push
jle
outsb
dec
push
pushf
popf
push
ficomps
icebp
movsb
incl
dec
mov
cwtl
sub
and
mov
js
xchg
jmp
addl
dec
fdivs
xchg
dec
ja
fsub
fsub
data16
dec
sbb
lods
insb
loopne
das
adc
jmp
sbb
xchg
mov
mov
sub
in
adc
outsl
bound
xchg
ret
xchg
scas
cld
imul
sub
cmp
int3
ret
test
mov
sub
out
outsl
imul
fmul
icebp
jp
addr16
sbbb
flds
and
test
aas
in
fcomps
decl
in
inc
cmp
and
fmull
cmpsl
pop
and
mov
pushl
iret
out
ds
orb
int3
sub
fisubrl
mov
outsb
xchg
pushl
xchg
and
fcomip
sbb
pop
int
sub
repz
and
aas
int3
xchg
mov
cmc
mov
icebp
les
adc
ljmp
daa
cs
lcall
ret
mov
sub
fs
mov
roll
sbb
cmp
dec
and
add
mov
cwtl
arpl
andb
cmp
push
sbb
mov
xor
leave
leave
into
loopne
mov
test
push
sub
in
adc
jge
mov
nop
pop
sub
add
fstl
lods
dec
out
pop
xchg
stos
mov
sahf
loop
jmp
in
icebp
jbe
das
xor
stos
sti
inc
shrl
mov
lods
ja
pushf
in
dec
add
lcall
aad
cmp
clc
bound
fs
and
dec
fisubrl
jno
ljmp
push
lret
shll
enter
adc
in
addr16
xor
imul
hlt
sti
cmp
mov
lahf
bound
cltd
and
jle
dec
pop
xor
lcall
sub
inc
in
sub
addr16
sub
lret
xchg
fstps
jge
mov
mov
cld
mov
popf
inc
mov
adc
xor
push
and
testl
ljmp
mov
xchg
out
sti
adc
pop
lock
xchg
xor
inc
ljmp
add
scas
adc
clc
fidivrs
push
or
clc
xchg
pop
ljmp
js
jno
movsl
adc
data16
mov
ljmp
add
fwait
je
pushl
jge
shrl
leave
pop
jnp
andl
lods
popa
jle
dec
dec
jb
mov
icebp
das
sar
and
ret
int
cmp
std
fadds
inc
add
arpl
pop
adc
mov
xlat
shlb
xor
fmuls
push
ljmp
aad
mov
dec
mov
cli
pop
notb
and
lods
mov
decl
ja
ds
jg
stos
and
mov
sbb
cltd
ds
jge
in
mov
call
repnz
mov
cmp
pop
push
cmpsl
mov
jbe
decl
and
inc
loop
cmp
outsl
mov
and
cltd
bound
add
dec
stos
call
jns
mov
lea
cmp
mov
pushl
fcmove
cwtl
sbb
cmp
bound
inc
mov
stos
repz
xor
mov
inc
sbb
fwait
mov
fcoml
mov
and
hlt
pop
mov
dec
or
fadd
imul
decl
cmp
lret
xchg
jp
jl
inc
cmp
fsubl
push
cmp
jg
jecxz
cmp
lods
lods
and
ljmp
jae
shlb
mov
xchg
ja
sarb
pop
cmove
mov
push
jb
decl
mov
stc
jae
scas
imul
sbb
and
loopne
call
mov
cld
xorl
adc
in
cmp
mul
fs
or
or
dec
incl
xchg
hlt
outsb
fmuls
dec
stc
inc
xor
lcall
jp
adc
test
decl
lods
movsl
daa
mov
insl
xor
push
mov
mov
scas
or
sar
push
lcall
lahf
fisttps
xchg
negl
shrl
inc
mov
andb
mov
jae
cs
dec
sbb
call
sbb
sub
ljmp
lcall
xor
rcr
ret
inc
inc
scas
or
hlt
or
pushl
gs
lret
ror
cltd
jns
inc
inc
jne
sub
out
aaa
ds
dec
dec
cmc
call
into
int
pop
dec
enter
mov
testl
loope
out
push
xor
adc
icebp
shrl
sti
gs
test
cmp
xchg
fisttpll
jmp
pop
or
cmp
cli
cmp
iret
repz
dec
inc
cld
decl
dec
xchg
mov
inc
shl
insl
es
adc
shlb
pushl
ljmp
cwtl
stos
sub
subb
icebp
add
test
sub
or
sbb
decl
ds
repz
sti
adc
call
sbb
stc
cld
push
in
cmp
pop
ficomps
push
xchg
inc
mov
sbb
inc
xchg
imul
dec
mov
test
inc
popa
in
cmp
orl
insb
shrb
lcall
cmc
js
cmpsl
mov
jmp
sti
lock
jo
sub
jmp
pop
push
xchg
sbb
lret
xor
xchg
jnp
pop
sbb
jmp
cld
ljmp
sbbb
mov
dec
xor
sub
mov
and
loop
jmp
xor
lret
shl
js
cwtl
pop
shll
ffree
out
orl
pop
inc
ret
inc
inc
adcb
hlt
mov
mov
mov
mov
xchg
mov
ficoml
jns
loopne
xor
inc
cmp
pop
jge
insb
inc
sbbb
lods
push
sbb
pushl
jae
push
cltd
iret
push
rorb
push
sbb
pop
mov
nop
popa
insl
mov
in
sub
dec
inc
cmpsb
cmc
and
sbb
mov
mov
and
jg
imul
sbb
nop
or
fldenv
scas
fsubrl
ret
popa
rolb
fldln2
scas
outsb
lock
das
jmp
repnz
mov
xor
rcl
cli
fld
or
mov
ljmp
dec
cmpsb
mov
scas
mov
fs
into
xchg
cli
in
add
add
outsb
sub
pop
les
fisubl
lahf
mov
pop
and
scas
pop
fdivrl
push
lock
xorb
or
sbbl
ljmp
xchg
pop
or
sbb
subb
sti
adc
jo
lods
arpl
push
in
sub
repnz
es
adc
test
lcall
dec
rcrb
in
int3
and
aam
sbb
jl
xor
mov
and
ds
incl
jmp
cmp
jnp
inc
mov
pusha
jns
mov
out
iret
adc
call
bound
xor
cltd
mov
jle
jge
and
subb
mov
xchg
xchg
outsb
sub
incl
pop
push
mov
xor
add
aam
adc
inc
mov
in
fisttps
nop
call
add
outsb
movb
pop
jle
xchg
cmpsl
mov
in
ljmp
jo
push
aaa
lahf
movsl
sbb
ja
cmp
cs
les
dec
test
pushl
mov
push
mov
push
dec
inc
and
aam
sahf
jl
dec
nop
mov
ljmp
add
xor
jp
lock
rcrb
out
mov
push
jns
xchg
rcl
jg
incl
jmp
leave
sub
scas
inc
js
xchg
xchg
std
and
cmp
std
mov
shlb
jg
inc
movsl
test
sbbb
and
jecxz
int
or
call
xchg
fs
and
imul
cmp
cmp
fbld
pushl
inc
and
cwtl
pop
sbb
lock
xor
sub
add
out
fildll
sbb
incl
or
push
addr16
pop
pop
mov
jl
out
sub
pop
sbb
in
push
pushl
xchg
pop
je
sub
mov
scas
sbb
lahf
ss
jmp
add
jg
ljmp
mov
jmp
insb
push
int
test
cwtl
pop
movsl
and
jmp
pop
outsl
or
mov
inc
sbb
int
fcoms
push
sbb
lcall
je
shll
mov
mov
jmp
shll
pop
pop
pushl
decb
mov
xchg
sbb
sbb
xchg
ret
push
adc
adc
outsl
out
add
dec
mov
push
aaa
insb
scas
mov
mov
push
mov
in
mov
lcall
push
xchg
lahf
sbb
movq
cmpsb
jle
je
lret
sbb
adc
pop
loop
jge
inc
ljmp
jae
jno
push
ja
and
xchg
fsubs
jl
add
es
mov
sub
mov
bsf
mov
cld
call
pop
aad
dec
push
ljmp
mov
add
add
pushl
fninit
loop
xchg
clc
divl
dec
and
loopne
lahf
or
cli
jne
and
loope
out
mov
jecxz
inc
arpl
mov
jb
repz
or
das
clc
inc
push
adc
jo
lods
jb
mov
aam
xor
gs
fdivl
stc
iret
mov
sbb
lock
movsb
push
movsb
stc
out
popa
pusha
jne
dec
cmp
pop
decb
jmp
lcall
pop
mov
push
push
xor
jmp
push
or
lods
hlt
cli
aad
and
fs
lcall
push
mov
jmp
std
mov
and
lea
lcall
cltd
sub
mov
or
lea
movsl
pop
mov
ljmp
out
repz
insb
mov
push
aad
dec
ficomps
jo
push
out
call
lahf
mov
add
and
pop
pop
not
lea
pop
xor
sub
out
icebp
inc
push
incl
pop
xchg
adc
xchg
xor
cmpsb
add
and
pop
pop
jb
xlat
mov
fadds
imul
pushf
int3
iret
rolb
mull
jno
in
cmc
int
jmp
call
cld
test
inc
inc
add
add
pop
adc
out
xchg
mov
sub
cmp
clc
incl
pushf
pushf
mov
sbb
push
push
mov
popf
repnz
ljmp
repnz
leave
in
cmpsl
mov
inc
stos
push
pop
jno
cmp
fstps
arpl
stos
or
lcall
mov
mov
pop
or
jno
data16
aad
fiadds
ud0
mov
mov
xchg
lea
mov
scas
call
rol
or
or
inc
mov
ds
dec
sub
push
push
lds
sub
mov
decl
push
pop
sahf
ret
mov
cltd
call
pop
mov
mov
cltd
mov
call
dec
sbb
mov
call
lds
mov
sub
jl
dec
pusha
sbb
div
jg
mov
and
orl
outsl
add
sti
dec
jmp
popf
add
xor
insl
jne
decl
adc
test
xchg
sbb
add
add
insl
cmp
loope
ds
fists
mov
shll
das
decl
lock
out
mov
jle
addr16
loope
movsl
rsqrtps
jg
pushl
mov
xchg
clc
push
or
shll
mov
popa
or
dec
mov
aas
mov
sar
sub
sub
push
cwtl
cmc
xchg
sti
mov
ljmp
xchg
cwtl
lcall
add
mov
cmp
xchg
enter
int
call
cmc
jle
decb
jle
xlat
push
xchg
mov
mov
rolb
iret
xchg
add
into
lcall
jmp
incl
mov
mov
mov
popf
push
lahf
test
call
js
sub
fdivl
adc
jg
pushl
lahf
data16
jmp
in
jge
jb
aam
push
jae
lea
inc
loopne
ljmp
jecxz
aad
fs
pop
add
mov
mov
push
lcall
xchg
fcompl
pop
stos
std
movsl
adc
enter
cmp
aas
push
cmp
scas
push
lods
mov
shrl
or
ljmp
adc
shlb
cmp
lcall
lea
sbb
jl
jne
adc
lea
movsl
shlb
in
je
ljmp
out
fildl
adc
sub
sbb
inc
jnp
lcall
xchg
mov
fidivrs
mov
pushf
test
pushf
lcall
aam
in
iret
test
jg
push
mov
enter
dec
xor
shl
stos
inc
cs
inc
push
sub
loop
call
push
lret
icebp
and
mov
xchg
xchg
sub
popf
shll
imul
pop
clc
inc
jl
push
sub
loope
lock
dec
movd
jmp
cmc
fisttpll
jmp
lret
hlt
test
popl
lods
adc
lcall
xor
jnp
decl
mov
cmc
repz
inc
insl
fiaddl
fxam
bound
pop
ljmp
cli
test
jae
xor
fmuls
insl
cmp
mov
in
cmpsb
push
dec
xchg
cmpsl
loopne
xor
jae
lods
sbb
push
sbb
jne
pop
icebp
cmp
pop
sub
mov
add
in
xchg
clc
ds
std
mov
mov
jnp
je
and
rorb
dec
push
aaa
mov
xor
incl
mov
xor
mov
xchg
std
cli
mov
dec
jbe
imul
and
jle
ljmp
inc
xchg
mov
aad
adc
adc
aam
fdivrp
in
mov
scas
sub
jle
cmpl
fs
mov
addr16
dec
cmp
mov
pop
dec
insl
adc
jp
mov
or
aam
pop
mov
push
data16
jmp
jne
imul
scas
dec
scas
sub
std
push
jecxz
mov
adc
xchg
push
aad
stos
sbb
sbb
adc
mov
cmpl
stos
fwait
int
push
inc
or
inc
pop
stos
lods
sub
mov
je
lods
enter
add
and
dec
or
loopne
jo
arpl
sbb
mov
mov
xor
decl
ljmp
repnz
fstl
sbb
aaa
pop
cmc
imul
and
incl
bnd
xor
sub
ret
insl
loope
mov
xchg
pop
mov
inc
push
add
pop
pushf
shl
pushf
mov
xchg
sbb
ljmp
push
add
or
pusha
xchg
pop
rclb
out
les
emms
and
inc
bound
mov
shr
xchg
mov
xchg
xchg
sub
mov
jmp
leave
push
add
mov
daa
call
pop
stos
mov
loope
adc
push
and
sbb
lret
jb
int3
bound
sub
lcall
inc
sbb
inc
sub
xchg
inc
insl
insl
stos
add
adc
cwtl
in
nop
xchg
push
out
fcomip
std
fimull
xor
and
jg
iret
jge
js
movsl
push
and
sub
decl
in
mov
push
cmpsl
inc
fwait
movsb
push
sbb
gs
mov
add
inc
icebp
fs
incl
add
aad
xchg
xchg
test
pop
stc
inc
pop
adc
mov
push
jno
mov
movsb
and
cmp
push
outsb
sub
mov
sub
pushl
mov
mov
jo
daa
test
pop
aam
mov
daa
mov
insl
pusha
lods
xor
jmp
lds
enter
popf
outsb
cmp
mov
add
insl
scas
sub
jl
lret
pushf
xlat
sub
rcll
adc
mov
fstpl
decl
mov
xor
xchg
imul
lock
pushf
xchg
mov
jp
mov
ljmp
or
jg
movsb
cmp
cmp
push
push
or
add
dec
cli
bound
cmc
pop
es
incl
xchg
xor
fcoml
iret
add
imul
mov
pop
ds
testl
dec
add
cmp
sbb
mov
mov
xchg
or
out
daa
pop
dec
mov
divb
loopne
jo
in
adc
pop
jge
sahf
cwtl
jb
sub
cmp
popa
lcall
sub
test
ss
movsb
jl
jnp
cld
pop
jmp
pushl
out
ret
fbld
popa
add
or
sbb
fldt
mov
xchg
jb
orl
or
int3
pop
shll
mov
jmp
mov
sub
mov
push
push
in
pop
mov
lcall
andl
cmpb
sbb
mov
pushl
mov
out
frstor
cmpsl
clc
sub
xor
dec
sub
jnp
jno
xor
insb
cmp
add
insb
into
out
ret
addb
sti
jns
pop
push
jb
mov
enter
pop
lcall
mov
bound
xor
and
shl
fisttps
mov
or
mov
dec
fdivp
sub
mov
jecxz
mov
add
jecxz
arpl
ret
pop
mov
fwait
dec
mov
insb
iret
daa
aad
dec
cwtl
mov
dec
cmpsb
pop
in
into
jb
dec
mov
jmp
jmp
add
shlb
je
push
inc
cs
rclb
hlt
inc
das
bound
mov
sbb
filds
cmpsl
movsb
push
jg
ljmp
mov
push
jo
add
adc
push
cld
jmp
ret
and
push
leave
jp
inc
out
dec
pop
and
and
pusha
push
sbb
jg
ss
lds
lea
xor
aam
jecxz
jmp
xlat
cmp
inc
inc
divb
xchg
mov
pop
sub
mov
inc
fbld
mov
cmp
pop
pop
leave
roll
fisttpll
mov
mov
dec
lcall
gs
lods
jb
pop
sbb
stos
lds
ja
insl
mov
push
or
jl
in
incl
sub
ja
mov
out
fmull
inc
jp
cli
push
mov
repnz
scas
pushl
repz
clc
cmp
add
loope
jns
jecxz
xor
sub
or
iret
inc
jne
lcall
cld
push
cli
cmpsb
jns
inc
jns
or
clc
insl
jecxz
nop
out
fadd
pop
inc
xchg
xor
stc
inc
test
lcall
enter
jns
xchg
cltd
arpl
fwait
add
jo
adc
gs
xchg
adc
and
jmp
xor
push
das
mov
push
push
ja
xchg
mov
jns
mov
jno
mov
mov
fsubs
cltd
stos
cmp
xchg
adc
push
ret
cmp
jns
sbbl
mov
adc
ljmp
pop
aad
bound
adc
jge
into
xchg
mov
pop
adc
jg
cli
repnz
xor
mov
sub
mov
mov
std
jl
and
cmp
pop
pop
in
mov
addr16
adc
cld
je
ret
mov
js
mov
mov
clc
xchg
ljmp
push
dec
lock
mov
cld
test
push
xor
in
jne
leave
icebp
lahf
add
adc
stos
data16
push
mov
push
stc
outsl
mov
xchg
push
ret
pop
hlt
rolb
push
xor
mov
mov
fidivrs
and
push
in
out
pop
sbb
fdivrs
and
jmp
lods
xchg
mov
mov
leave
jmp
out
imul
xchg
fs
cmp
push
jmp
fucomip
pusha
repz
xchg
mov
shll
outsl
inc
int3
inc
test
rolb
sbb
and
sub
fiaddl
pop
cli
sbb
aam
mov
mov
xchg
pushl
cmp
nop
dec
ja
in
jmp
cmp
dec
sub
rcrb
mov
sti
push
icebp
jge
xchg
std
dec
inc
adc
loop
adc
xor
pop
sub
dec
mov
outsb
mov
jmp
jl
and
cmp
decl
xchg
inc
bound
pop
adc
and
pop
rcrb
pop
push
lock
xchg
fbld
je
jnp
fisubs
ret
cmp
popf
inc
adc
dec
ljmp
push
cmc
add
sub
int
fs
pop
xchg
ret
jecxz
ljmp
ja
shr
add
loop
bound
or
rcr
sbb
or
mov
imul
js
pop
loopne
jmp
and
xor
mov
sbb
out
sbb
out
push
sub
ljmp
sbb
shll
inc
pop
cld
lcall
data16
lea
xchg
mov
ljmp
cmpsb
jo
or
mov
or
mov
or
push
cmpb
sbb
popa
sub
jp
pop
xlat
stc
mov
mov
sbb
fs
hlt
push
in
loope
add
push
int
add
xor
shlb
xor
or
test
decl
fsubrs
or
into
dec
xchg
insb
adc
stc
dec
and
das
clc
or
cmp
btr
stos
push
xlat
iret
cmpsb
and
rcl
out
dec
out
cmp
jne
scas
imul
mov
inc
xor
xchg
in
push
cmp
out
jl
stos
push
dec
fstpt
icebp
cwtl
xchg
sbb
pop
add
or
adc
std
ljmp
jnp
lock
ds
cmp
ss
pop
push
push
mov
cs
pushl
cmp
in
cmpb
andb
push
imul
mov
pop
cld
inc
mov
cmc
aaa
sbb
ljmp
repnz
imul
fists
sub
scas
xor
push
pushl
mov
adc
and
je
xlat
and
lock
and
pop
hlt
dec
xor
cs
repnz
cmp
mov
lcall
sub
das
jns
sbb
add
popa
jo
jecxz,pn
pop
push
adc
std
inc
out
scas
std
cmp
out
cs
iret
icebp
adcl
scas
outsl
dec
pop
cmpsl
cmp
jne
mov
lds
cmpb
loop
lret
sub
or
ljmp
je
imul
push
mov
pop
je
shl
scas
jg
cmpsl
mov
pushf
adc
cmc
xchg
dec
outsl
adc
jp
mov
aaa
mov
enter
aam
sbb
jg
lcall
push
mov
cmpsl
js
cmp
inc
fcomip
sbb
push
cmpsb
scas
out
jns
in
push
pop
adc
out
clc
pop
inc
in
sub
js
add
and
dec
push
inc
int
mov
les
pushl
and
pop
xchg
int3
push
push
orb
jae
test
dec
and
call
dec
jbe
pop
stos
jae
jmp
pop
icebp
or
int3
int
ja
dec
dec
mov
decl
sbb
sbb
adc
fisubrl
lods
lcall
mov
jmp
in
roll
pop
dec
test
pop
cmp
clflush
pop
int
out
mov
and
sar
jmp
push
xor
jo
mov
sbb
mov
ljmp
lret
lahf
mov
jnp
js
mov
jo
adc
movsb
movsb
aaa
cld
decl
xor
mov
dec
cmpl
push
xorb
cmp
dec
mov
sahf
jmp
mov
xor
aas
rorl
pop
jmp
cmpsb
testb
xor
xchg
fiadds
cmpsb
sub
add
xor
lods
and
ljmp
inc
xor
insl
jl
cmp
lret
arpl
mov
data16
mov
pushl
lea
cltd
aad
mov
das
xor
cltd
les
test
cltd
rcrb
sbb
lcall
add
pop
fs
test
addl
jbe,pt
jp
das
cld
ds
lcall
xchg
inc
rclb
dec
push
adc
insb
inc
cmp
inc
xlat
movsb
sbb
iret
incl
mov
xor
dec
pop
fisubs
into
fldt
dec
cld
decl
test
mov
pop
int
mov
jmp
imul
nop
jnp
orl
fidivrl
js
lock
cmc
notb
sbbb
inc
cs
decl
test
mov
testl
xchg
jp
xor
call
daa
test
pop
or
xchg
movsl
jnp
repnz
adc
call
and
test
cmpsl
fs
pop
test
xchg
sub
xchg
test
std
call
add
or
stc
jae
pop
xchg
and
ljmp
stos
dec
pop
rcrb
stos
mov
push
lcall
and
insb
mov
sbbb
mov
filds
ss
ljmp
cmc
jb
jle
jg
mov
call
mov
push
subl
sub
jmp
enter
xchg
out
in
pushl
pop
xchg
cmp
das
push
push
pop
pop
jo
into
cli
clc
ljmp
rcll
push
dec
add
int
fistpll
mov
sbb
jle
call
push
outsl
cmp
jnp
sahf
jl
ljmp
mov
add
mov
rorl
test
enter
cld
pushf
xchg
ret
loope
jmp
cmc
xchg
nop
sarl
mov
and
mov
dec
mov
cmp
insb
jns
and
mov
lcall
pop
or
push
xchg
cld
jb
xchg
jne
adc
or
test
aad
sub
hlt
loope
mov
imul
jnp
ret
mov
in
fadd
lock
iret
lea
loope
xchg
mov
bound
lret
ljmp
clc
xor
pusha
mov
dec
dec
adc
iret
sbb
dec
xlat
push
pop
and
lcall
push
mov
imul
sarl
icebp
shl
jne
inc
xor
mov
ret
ljmp
fdivrp
xor
jnp
stos
pop
lock
lret
rol
ljmp
repz
dec
sub
ja
mov
call
lcall
and
daa
rorb
fstps
dec
ret
mov
add
pushl
fscale
jg
xor
mov
jmp
movsb
fndisi(8087
inc
inc
mov
insb
cmpsl
pop
test
push
add
xchg
sbb
dec
out
xchg
xchg
mov
ja
sbb
sbb
xor
dec
adc
push
jl
sbb
scas
insb
shlb
sbb
push
leave
mov
mov
mov
outsb
fdivs
add
incl
mov
jmp
push
xchg
mulps
cmpb
sbb
xor
insl
sub
jg
cli
cli
add
movsb
push
lcall
dec
or
loop
stos
sub
cli
rol
mov
pop
or
addr16
decl
xchg
nop
aas
sbb
push
mov
sbb
mov
enter
xor
xchg
dec
neg
sti
inc
pushf
arpl
test
pop
xchg
dec
sub
adc
mov
inc
sar
fmuls
addl
cmp
mov
daa
jne
psadbw
cmp
decl
mov
fidivl
or
pop
adc
loop
ja
sbbl
ds
xchg
repnz
incl
jecxz
sub
sar
arpl
arpl
shlb
push
test
popf
mov
sti
cs
and
jmp
dec
std
shll
inc
mov
enter
dec
jge
decl
dec
or
dec
stos
fsts
cwtl
or
sbb
jg
inc
test
push
fistl
cmp
add
call
mov
jg
fld
add
dec
xchg
insl
adc
or
xchg
les
incl
sbb
lret
add
cmp
adc
int3
shll
clc
dec
mov
mov
ja
subl
movl
ret
lahf
or
mov
inc
jae
dec
fdivrs
test
xlat
iret
lret
pop
cmp
lcall
cmp
test
dec
sti
lret
and
in
insl
mov
test
in
jb
imul
fadds
in
iret
insl
mov
pop
dec
es
loop
add
xchg
mov
call
imulb
mov
xlat
pop
adc
out
and
cmp
pusha
dec
in
push
lock
incl
rcrl
fcompl
dec
fadd
jge
xchg
addb
rorl
adc
adc
push
pop
adc
idivb
iret
repnz
filds
pop
inc
sub
or
cmpsb
xlat
repnz
jp
push
or
xchg
stos
cmp
pop
cmp
push
out
dec
or
mov
mov
repnz
jmp
mov
inc
ja
xor
pusha
les
icebp
adcl
lods
mov
push
movsb
add
xor
cmpb
ljmp
inc
in
push
push
cmc
pop
int3
mov
scas
push
scas
push
std
lcall
mov
mov
cmp
pop
mov
mov
jo
xor
lcall
lret
insl
lds
mov
jl
sub
mov
stos
aad
imul
adc
jmp
jnp
or
mov
test
popf
inc
shll
inc
out
dec
push
adcl
pop
adc
jmp
cltd
dec
adc
stc
inc
xor
gs
mov
push
loope
add
fcos
lcall
xor
in
or
xor
das
movsb
in
mov
fs
jno
xchg
pop
cmpsl
lahf
rorl
pushl
movsb
jmp
ret
decl
jecxz
jns
dec
mov
xchg
inc
in
inc
jae
pop
fwait
xchg
decl
push
mov
push
fmulp
lret
push
popf
ret
mov
cmp
lret
mov
or
sahf
push
mov
cmc
decl
xlat
les
sarl
dec
cmp
sbb
loop
out
ljmp
arpl
mov
incl
std
sub
pop
in
cld
idiv
fcomip
fisubrl
leave
dec
leave
mov
aas
or
lret
loope
aaa
adc
loope
cmpsb
jmp
lret
pop
pusha
in
jle
inc
popf
imul
fxch
xchg
sbb
mov
cli
je
hlt
and
movsl
xlat
push
adc
and
mov
repz
inc
sbb
ljmp
loopne
xor
dec
xchg
fnstenv
add
mov
jno
add
std
mov
pop
aam
pop
cmp
push
mov
jmp
je
cmp
cld
or
push
adc
push
imul
popa
gs
dec
add
jmp
les
xchg
xchg
jl
divl
cmp
cmpsl
sbb
jb
outsl
xchg
jnp
mov
gs
ljmp
dec
jbe
int
cmc
imul
enter
jg
ljmp
sub
roll
cmpsl
push
mov
dec
inc
ds
stos
shr
cmp
test
xchg
push
mov
aam
pushl
imul
sub
cmc
and
add
stc
fnstsw
mov
mov
xor
in
out
xchg
and
lods
in
adc
cs
adc
sub
cli
mov
add
mov
stos
test
jecxz
jmp
or
stos
fdiv
or
cmpsl
push
mov
repnz
mov
mov
lds
pop
xchg
sahf
push
stos
and
cs
mov
adc
xchg
sub
cmpl
lcall
icebp
mov
dec
fdivrs
dec
js
vpshaq
scas
scas
sub
add
ljmp
mov
lock
xchg
lret
push
lea
add
popa
adc
stos
cmc
pushl
pop
push
push
dec
bnd
sbb
cmpb
xchg
in
repz
sub
lcall
push
jmp
adc
lret
adc
ds
mov
in
add
sbbl
in
lock
das
fmuls
ljmp
aas
test
aam
in
jg
xlat
xchg
mov
dec
jb
testb
outsb
popa
jnp
cltd
and
data16
ljmp
push
cs
dec
mov
fsts
insl
lret
sahf
sbb
lods
fbld
ret
sub
cmp
adc
fs
out
dec
cmp
mov
lcall
mov
loop
aam
shll
test
mov
sub
jle
daa
mov
jmp
mov
in
mov
and
ja
mov
mov
ret
bound
mov
js
mov
sub
decl
pop
sbb
sbb
loope
lret
adc
adc
xchg
mov
sbb
icebp
test
in
decl
jmp
outsb
jge
inc
and
jmp
rolb
sbb
adc
cmpsl
mov
jmp
adcl
or
jo
pop
xchg
adc
push
lcall
jb
xor
mov
enter
iret
cmp
jno
mov
or
adc
push
loopne
ffree
scas
fsubs
add
pop
jo
cmpb
sub
cmpb
les
or
incl
in
sarb
mov
cld
sbb
imul
add
inc
not
out
cli
mov
inc
lods
movsbl
push
pop
fwait
mov
cs
ret
shll
std
cmp
jmp
inc
pop
insb
pop
outsb
push
pop
fld
add
cmpsl
fstpt
pop
pop
sbb
ret
dec
adc
add
enter
inc
aaa
push
xor
xchg
mov
pushl
mov
xchg
and
mov
inc
scas
mov
xchg
jle
mov
je
cwtl
vpmacsdqh
dec
lcall
adcb
cld
mov
or
jmp
jl
fs
pop
adcb
lods
cmp
inc
mov
xchg
pop
jnp
push
jmp
xor
add
add
jge
leave
push
pop
scas
les
mov
jno
jmp
xor
inc
mov
cmpsb
jmp
mov
outsl
lcall
std
insb
pop
cmp
int
lock
hlt
jb
ds
int3
jne
dec
sbb
sub
inc
scas
or
jmp
negl
iret
aad
xchg
push
sbb
leave
add
fwait
pop
dec
pop
ss
jmp
jae
lods
in
xchg
and
adc
push
les
or
xchg
jne
call
pop
lods
adc
insl
iret
fmulp
pop
mov
ljmp
lods
push
mov
pop
lcall
and
cmp
pop
popf
mov
add
arpl
jmp
in
cmp
sarb
jmp
rcr
lds
mov
jge
mov
pop
cld
aaa
jl
inc
and
ljmp
sti
pop
adc
outsl
jle
lahf
adc
out
or
cwtl
leave
or
mov
inc
incl
arpl
out
in
jl
lea
fmull
push
or
ljmp
pop
in
nop
dec
lods
mov
ja
lcall
cmp
mov
sar
incl
adc
es
mov
mov
lret
inc
adcl
test
lcall
jle
dec
pop
stos
xor
sbb
mov
popf
xchg
call
jl
test
pusha
sahf
lds
or
jp
out
sahf
push
xchg
icebp
addl
lret
ljmp
cli
sub
and
rcrw
or
aad
std
cmp
mov
lcall
xchg
outsb
fidivs
adc
jmp
mov
cmp
and
pop
mov
test
pushl
mov
gs
dec
cmp
jb
and
sbb
or
inc
into
mov
sahf
inc
sbb
decl
mov
lret
or
pop
pop
lock
sub
cmpsb
and
clc
mov
dec
sbb
cli
jne
test
push
and
or
jg
add
ljmp
repz
mov
pushf
mov
add
pusha
cmc
mov
push
sbb
sbb
jno
stos
out
clc
push
je
mov
jne
clc
mov
sub
inc
fcmovbe
frstor
dec
nop
es
cmp
in
icebp
ffree
cmovle
push
inc
outsb
push
push
hlt
nop
ret
pop
shll
clc
dec
sbb
push
or
cwtl
fldpi
aad
pushf
idivb
in
sub
add
pushl
fimull
ret
mov
adc
inc
dec
or
and
incl
push
sub
ret
push
cwtl
sarb
jno
push
mov
inc
stos
or
push
xchg
mov
imull
pop
sbb
mov
incl
push
addr16
push
jae
cld
ja
mov
pop
iret
mov
pusha
imul
cmp
pushl
lods
sahf
fldt
out
loopne
fcom
inc
int
sub
jl
jae
imulb
hlt
stc
cmpsb
xor
xchg
insl
push
xor
out
into
je
decl
dec
cmp
jge
mov
dec
xor
lret
or
idivb
dec
popf
mov
jge
and
into
xchg
cmp
adc
out
jb
fs
sar
clc
jg
subb
jle
or
loopne
test
lcall
mov
jl
or
pop
push
rolb
call
test
mov
push
push
jle
rcr
cltd
dec
enter
loope
adc
inc
loope
ljmp
loop
iret
xor
movsl
insl
push
loope
or
adc
in
cmpsb
aaa
lea
movsl
adc
pop
andb
mov
es
aad
jns
rcrb
sbb
dec
lcall
ljmp
decl
dec
dec
pop
fisubrs
enter
lods
cmp
mov
jmp
push
cmc
push
lahf
add
mov
push
in
sub
push
dec
push
sbb
or
stos
or
mov
sbb
mov
leave
fcompp
gs
int3
inc
or
sub
push
ret
pusha
sub
xchg
xor
cs
jne
scas
decl
xor
adc
jnp
les
mov
add
ljmp
sub
insl
out
push
dec
mov
pop
cmpsl
adc
jnp
xor
sbb
mov
lcall
pop
imul
cld
dec
cmc
adc
dec
movsb
test
arpl
jg
pop
into
cld
sbb
popl
int3
jge
outsb
insb
repz
repnz
lahf
js
fldt
enter
dec
pop
scas
mov
fwait
test
cmpsb
in
sub
das
cmpsl
push
cmp
decl
cmp
xchg
push
push
mov
inc
xor
mov
loope
pop
std
stos
lods
bound
lret
jg
addr16
xor
jmp
xor
cmp
adc
xor
push
sbb
addb
repnz
sbb
ljmp
ja
xchg
mov
add
xchg
dec
leave
jnp
outsb
cmpsl
adc
stos
subl
ret
cli
cmp
imul
or
dec
mov
imul
mov
outsb
lcall
daa
adc
call
dec
popa
jmp
arpl
cmpsb
lcall
sub
decl
imul
push
imul
adc
add
mov
lret
sbb
jns
or
call
out
bound
push
mov
in
push
sahf
or
imul
pop
jnp
out
jge
cld
jne
loop,pt
fmul
or
in
sub
xor
and
push
not
daa
xchg
es
jns
add
mov
shlb
inc
push
pop
cld
mov
rclb
mov
int3
push
cli
fs
fdivl
sbb
pop
pop
jb
stos
lret
repnz
call
std
mov
mov
popf
es
addr16
int
jg
lret
jge
clc
pushl
xor
test
daa
jne
pop
cltd
jns
inc
mov
pop
jecxz
jle
loope
outsb
out
ljmp
and
les
testl
and
cmp
pop
push
mov
cmp
call
cmp
imul
lea
test
push
adc
dec
mov
mov
repnz
cmc
fmull
and
xlat
adc
mov
pop
sub
sahf
aad
mov
js
xchg
int
popf
push
or
dec
mov
rcl
jnp
cwtl
addb
ljmp
pop
sbb
shll
jnp,pt
mull
lods
in
out
out
hlt
jg
mov
sub
mov
cmp
mov
cltd
xchg
pushl
std
pop
je
mov
xchg
ret
out
sbb
ljmp
xlat
cmpsb
add
js
or
mov
adc
mov
std
add
jmp
pop
fs
mov
imul
out
mov
mov
xchg
std
call
pusha
lods
ret
cmp
scas
and
sub
out
pop
icebp
lahf
pop
xor
jg
test
movsl
mov
out
leave
dec
into
div
sub
call
es
mov
fistpl
iret
out
or
dec
sub
mov
lods
sub
incl
jne
int
cmpsb
sub
push
sub
or
inc
cmp
imul
jmp
psllq
inc
mov
sub
frstor
and
inc
xor
xchg
subb
fistps
and
sub
inc
xchg
xchg
mov
inc
loopne
aas
mov
xchg
leave
scas
inc
mov
sbb
movsl
cmp
push
and
cmpsl
add
jmp
sub
fisubs
cmp
mov
sbb
out
xchg
loop
incl
out
repz
cli
pop
ss
pop
rcll
lods
cli
or
lar
push
xor
sti
mov
jmp
mov
insb
clc
icebp
add
lds
inc
xchg
mov
add
fwait
rorb
mov
int
outsl
xorl
inc
inc
sub
call
push
icebp
xchg
aad
int3
and
or
sub
pop
lcall
dec
sbb
fildl
neg
dec
mov
push
aam
out
inc
out
imul
pminsw
xlat
add
dec
pushl
sub
pop
push
and
inc
inc
push
ret
int
push
inc
pop
loop
ljmp
sub
mov
insb
lods
mov
push
inc
sub
leave
sub
mov
jno
decl
loope
data16
mov
pcmpgtd
xchg
jecxz
add
and
sub
fildll
repz
call
cwtl
stos
cmp
xor
out
lock
rolb
pushf
pop
push
ljmp
or
repnz
xor
push
sbb
lods
push
add
mov
ljmp
fbstp
mov
sbb
loopne
inc
gs
push
in
add
in
sbb
dec
or
mov
jmp
ljmp
data16
arpl
arpl
ljmp
push
sbb
sub
jbe
inc
or
mov
out
cli
cmp
call
popa
mov
stc
shrb
repnz
push
cmpsb
sbb
cmpb
in
pop
jg
jmp
cmp
bound
sub
js
std
decl
push
mov
sbb
dec
stos
int3
add
cld
jnp
data16
adc
sbb
push
rorl
xor
lret
nop
nop
lds
adc
sar
lcall
sbb
dec
scas
test
mov
mov
in
adc
cmp
xchg
loopne
push
inc
in
inc
mov
adc
jbe
xor
push
dec
cli
push
loop
out
imul
jg
xchg
sbb
loop
subl
push
pop
push
fisubs
pop
ror
inc
ljmp
jecxz
rolb
imul
dec
push
adc
ljmp
or
lds
ljmp
sub
scas
mov
rorb
test
fisubrs
movsl
std
mov
incl
clc
mov
jp
in
jne
sahf
xor
sub
icebp
jmp
dec
loopne
mov
mov
cld
mov
xchg
out
push
lret
mov
loopne
les
adc
jg
dec
sbb
lock
fadds
lahf
jl
outsl
or
add
aad
incl
movl
fstl
gs
repnz
fdivrl
lahf
mov
xchg
call
std
pushl
cmp
sub
cmp
mov
xchg
or
lcall
xchg
mov
leave
out
pop
and
idivl
pop
mov
adc
ljmp
jl
divl
outsl
dec
je
ds
or
push
sbb
into
inc
pop
in
sahf
test
cwtl
cs
pop
outsb
lods
dec
out
repnz
fs
lret
jp
sub
sub
mov
lods
add
dec
lahf
mov
stc
and
adc
aam
pop
je
test
call
insl
popf
sbb
cmp
push
pop
ja
jbe
arpl
jno
push
jb
push
sub
ficoms
adc
cmp
sbb
rcl
icebp
dec
mov
xchg
cld
lret
xchg
cwtl
add
dec
pop
movsb
mov
jp
mov
mov
pop
dec
mov
ficoml
ret
dec
gs
push
femms
jno
or
mov
pop
loop
cs
jl
adc
sub
decl
mov
lcall
xor
pop
shl
dec
shl
movsl
fadd
scas
decl
repz
test
push
mov
mov
imul
insl
test
mov
int3
push
lcall
repz
xchg
idiv
xor
sub
call
popa
mov
scas
loopne
jmp
popa
sub
pop
dec
cmp
stos
mov
mov
cmp
cmc
nop
js
or
pop
push
pop
xchg
enter
sti
rcrl
mov
push
xchg
je
jg
out
sbb
xchg
ret
outsb
ds
mov
call
inc
jbe
mov
and
idivl
sub
inc
adc
les
aaa
test
pop
lods
jmp
push
mov
in
adc
aaa
jl
mov
push
inc
daa
or
inc
add
pop
decb
int
dec
or
mov
and
dec
xchg
adc
and
push
out
insb
push
inc
or
jnp
sbbb
push
xor
jno
lret
xor
stos
addb
inc
jb
ja
mov
adc
je
aaa
mov
es
jo
imul
jnp
fisubrs
ss
add
adc
push
push
adc
bound
popl
cwtl
shrb
pusha
inc
add
scas
dec
cmpsb
xchg
fwait
sub
add
addb
daa
sbb
out
imul
push
dec
gs
std
in
incl
lahf
push
outsl
outsl
insb
push
push
outsb
popa
jo
push
ret
adc
xchg
lds
push
jnp
mov
mov
and
pop
push
or
cmp
or
cmp
inc
clc
dec
insb
push
ret
movsl
shlb
push
js
arpl
inc
and
ficompl
sahf
pop
inc
lea
in
hlt
push
popa
add
dec
shrb
cmp
inc
jns
hlt
outsb
aaa
xchg
push
imul
adc
clc
std
cmp
push
and
add
jbe
dec
mov
out
mov
insl
push
dec
imul
sub
xchg
jo
mov
int3
insb
cmp
inc
jl
loopne
dec
push
int3
and
dec
outsb
imul
dec
mov
ds
outsb
xchg
cwtl
sub
iret
dec
adc
out
pusha
popa
aas
flds
sub
inc
push
insb
addr16
clc
mov
adc
dec
mov
inc
inc
push
pusha
cmp
push
fisubs
add
popf
mov
mov
push
pop
ds
insb
jne
mov
sarl
inc
jne
xchg
mov
xchg
mov
dec
push
inc
in
insl
adc
jo
inc
push
fildl
inc
mov
fcomps
pop
push
mov
mov
in
mov
popa
subl
mov
mov
arpl
push
jns
mov
inc
mov
fdivrl
jecxz
shl
push
push
push
hlt
fs
js
inc
flds
in
popa
or
cmp
xor
xor
xchg
andb
fsts
or
dec
nopl
push
pop
pop
sub
push
cmpsb
mov
addb
inc
loope
dec
adc
orl
add
jns
mov
jns
test
and
mov
or
int
push
inc
inc
stc
cltd
sub
jo
xor
pop
and
popw
adc
shlb
lret
mov
mov
push
inc
xchg
popa
and
fldl
ss
ljmp
jecxz
pushf
inc
or
pop
dec
inc
dec
out
or
inc
mov
sub
sub
mov
or
fs
xchg
pop
popf
bound
lods
xor
js
cmp
loopne
fs
test
stos
pop
push
add
cmp
ja
and
and
inc
popa
push
push
cmp
es
jp
fcmovnbe
inc
mov
fs
jg
cmp
adc
sub
add
mov
cmp
aam
xor
or
pop
dec
mov
cld
test
mov
dec
push
pusha
or
and
sub
pop
imul
push
pop
aad
jns
cmc
ss
inc
inc
mov
or
out
sti
sub
push
inc
sbb
imul
mov
mov
add
sub
push
mov
cmp
es
mov
xor
inc
lock
push
outsl
or
stos
pushf
subl
daa
cmp
cmp
in
xchg
or
add
jnp
pop
aaa
cmp
pop
or
xlat
test
or
push
and
sbb
push
jne
inc
fmuls
lods
and
adc
fbld
jecxz
add
or
dec
xor
cmp
mov
xor
inc
add
test
ret
inc
inc
dec
outsl
cmp
pushf
mov
mov
adc
dec
xorb
imul
scas
les
rclb
push
outsl
add
ret
fadds
jnp
arpl
add
inc
data16
fisubrl
rcl
cmp
mov
mov
mov
xchg
data16
in
andb
arpl
std
movsb
add
cs
pop
lock
jg
xchg
xor
cmpl
jp
inc
sbb
pop
jmp
fcompl
int3
repnz
mov
sbb
clts
pop
imul
cmp
test
adc
ss
insl
mov
mov
out
dec
mov
adc
ja
outsb
sub
icebp
lds
mov
mov
xchg
je
mov
push
outsl
jbe
jb
leave
and
lahf
nop
cmpsl
push
loope
nop
inc
cs
jo
inc
inc
push
arpl
gs
arpl
ficompl
popf
inc
imul
mov
pop
xor
mov
test
jp
fwait
push
inc
insb
jle
jge
pop
inc
subb
lcall
pusha
out
xor
aad
adc
mov
ret
lock
pop
and
leave
adc
js
inc
nop
push
xor
mov
and
sbb
dec
add
pushf
int3
mov
push
lds
mov
in
jnp
test
inc
dec
push
push
pop
xor
ret
ficomps
shlb
loop
mov
outsb
inc
push
push
dec
rorl
adc
push
and
pop
cmp
out
mov
jns
je
insl
dec
outsb
dec
or
mov
cmp
jnp
sar
pop
add
add
cmpsb
xor
mov
xchg
xor
imul
or
cmpsl
imul
xchg
mov
inc
push
addb
pop
adc
cmp
ds
fisubrs
inc
jb
outsb
add
lea
jl
outsl
bound
dec
movsb
bound
orl
inc
jb
stos
jg
mov
insb
inc
jae
fcmovu
fcmovu
or
shll
xchg
cs
js
add
push
mov
ljmp
sbb
jo
sahf
and
rclb
movb
pop
test
loopne
imul
mov
repnz
cmp
shrb
scas
mov
ficoml
fisubl
pop
push
icebp
inc
mulb
js
pop
nop
mov
fwait
rcl
lods
or
mulps
jnp
push
inc
fildll
ja
rolb
inc
mov
data16
cmp
sub
mov
sub
mov
dec
push
mov
divb
or
xchg
push
push
insb
mov
cmp
mov
gs
cs
jo
xchg
dec
push
xor
pop
xchg
xchg
jge
js
lret
aad
enter
xchg
hlt
dec
push
andb
jge
pop
inc
in
and
adc
adc
sub
add
sub
sbb
sbb
sbb
cmp
cmp
outsb
push
push
adc
lret
clc
ret
insb
sub
jmp
imul
repnz
fstpt
dec
insl
fs
dec
jno
addb
jo
dec
xchg
jg
sbb
enter
push
test
mov
cmp
lds
or
sub
dec
fistps
mov
lds
cwtl
lds
shll
fs
lds
cmp
add
dec
icebp
icebp
sbb
aad
jg
or
jmp
lea
inc
ss
bound
pusha
lods
add
repz
pop
push
xchg
pop
lea
js
pop
lods
mov
psrlq
mov
pop
mov
cmp
push
cmpsb
push
inc
sbbl
push
sub
mov
adc
out
lahf
enter
or
adc
and
and
push
mov
fsubs
test
js
pop
lret
push
push
inc
out
adc
xchg
push
adc
xchg
pop
scas
xchg
dec
push
bound
mov
jae
sbb
sub
pop
loope
jne
mov
pop
dec
xchg
add
add
jmp
adc
and
negl
in
adc
int
sbb
pop
sbb
pop
or
outsl
push
dec
test
mov
adc
and
push
shl
mov
enter
pushf
add
incl
dec
jp
iret
fneni(8087
add
pop
dec
imul
imul
add
inc
repz
pop
or
je
fdivrl
repnz
fs
push
add
xchg
inc
push
mov
mov
pop
inc
pop
dec
push
xchg
test
or
cmp
add
and
jb,pn
es
push
sbb
negl
push
int3
push
xchg
and
and
test
fisubl
adcb
add
cmp
jae
arpl
adc
lahf
loope
insl
popl
lock
add
add
inc
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
