fcomp
decl
push
jns
add
mov
or
sbb
or
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
sbb
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
imul
mov
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
ss
ja
mov
push
push
sbbl
xor
das
dec
jb
outsb
push
cs
pop
mov
dec
shrb
mov
adc
push
lea
push
ficoms
push
add
mov
xchg
or
sub
rclb
ffree
add
xchg
dec
add
paddd
nop
mov
cmpl
jne
push
add
push
jl
jmp
xor
sbb
add
inc
sarb
icebp
out
xor
inc
hlt
push
and
shll
mov
sbb
fst
loopne
sbb
push
push
mov
adc
data16
mov
mov
inc
lock
lret
mov
or
lds
fcomps
and
fists
int
push
sub
push
lock
push
push
nop
and
or
sub
jbe,pt
jae
cmp
add
cmp
push
mov
dec
add
ss
iret
aaa
jl
jbe
add
xor
sbb
sete
sub
push
push
into
lds
and
nop
or
leave
mov
dec
in
sub
xlat
cmp
outsb
pmaxub
les
add
push
push
hlt
inc
jns
sub
sbb
inc
add
dec
pop
push
jl
and
push
add
out
ror
inc
and
add
mov
xor
mov
push
daa
frstor
inc
aam
xor
leave
xchg
jg
push
push
dec
push
mov
lea
cld
js
lret
mov
dec
jl
push
adc
in
dec
add
sbb
inc
lret
add
and
sbb
test
stos
cmp
and
pop
sub
stc
icebp
cmpsl
jmp
mov
and
mov
test
push
mov
clc
pop
jge
mov
movsb
pop
pop
cmpsb
mov
pop
ret
xor
stos
out
pop
adc
dec
push
sub
push
insb
insl
push
add
and
jl
enter
lret
pushf
inc
les
add
leave
lcall
pop
add
std
in
test
clc
mov
sub
push
mov
sub
js
mov
push
pusha
lods
or
rcll
inc
enter
push
and
mov
sub
push
in
push
int
and
push
add
out
in
push
push
sub
fucom
imul
popf
add
bnd
xchg
out
sbb
add
inc
add
dec
in
dec
inc
push
cmp
bswap
push
add
call
inc
mov
negb
cmp
lock
je
or
pusha
inc
push
push
adc
aas
sub
push
das
repz
sbb
inc
hlt
nop
test
gs
push
shlb
mov
or
dec
push
push
pushf
adc
pop
sub
sub
pop
pop
pop
and
xchg
js
or
roll
xor
xor
add
setg
imul
ret
in
lea
push
add
lods
cltd
fistps
ds
xor
jge
sbb
scas
push
subb
lock
aas
jg
dec
or
test
push
adc
adc
fsubrl
push
sbb
pop
add
and
mov
adc
stos
in
jb
sub
insb
pop
pop
sbb
jb
push
and
pop
and
lahf
lock
push
scas
das
xor
jne
fsubr
mov
jae
add
xchg
push
mov
push
or
add
push
push
jns
arpl
push
cmp
test
sbb
cmpsl
pusha
sub
sete
test
test
push
mov
or
sbb
jmp
and
enter
iret
xor
adc
pop
insb
pop
jne
add
xor
and
xchg
lret
push
cmp
ljmpw
or
pusha
mov
pop
mov
push
mov
mov
adcl
or
jo
jle
je
adc
or
insb
icebp
and
push
inc
jle
je
xor
xchg
adc
push
and
push
push
fwait
lods
adc
push
dec
xchg
adc
pop
push
push
subb
xor
push
or
jle
adcb
cmpsb
jo
push
ljmp
jl
ret
filds
mov
mov
push
cmp
adc
loop
cmpsl
sbb
push
inc
or
xchg
inc
pop
scas
inc
sbb
std
inc
mov
inc
cmp
add
nop
push
mov
jle
push
inc
add
outsb
sbb
ret
jle
test
xor
lock
xlat
pushf
sti
mov
icebp
and
sbb
fisubrl
lods
cmp
int
inc
jle
ret
shlb
push
pop
dec
mov
out
call
leave
mov
stc
je
test
mov
add
jg
loop
push
mov
xor
fmull
mov
inc
add
and
das
pop
xor
push
sub
mov
jmp
push
mov
cmp
mov
mov
push
cmp
or
dec
cmp
inc
imul
fs
push
mov
jp
or
movlhps
mov
pop
sbb
sbb
dec
loopne
lcall
sub
mov
js
in
out
cmpl
cmp
add
test
xchg
or
outsb
fs
ds
pop
push
xor
sbb
adc
push
adc
lcall
cld
xor
xor
cmp
adc
and
add
popf
dec
test
inc
mov
fldenv
xchg
sbb
adc
loop
inc
mov
xchg
int3
daa
add
jmp
jle
or
loopne
fs
cltd
das
insb
or
mov
mov
in
mov
mov
jl
lahf
mov
int
shll
adc
add
dec
sarl
mov
and
sbbl
and
adcl
div
repnz
lea
test
icebp
jns
jl
nop
xchg
daa
or
push
xor
and
push
lcall
pop
add
push
lods
mov
xor
lds
test
jg
inc
cmp
jmp
cmc
or
lea
pop
push
lea
pop
pop
and
xor
sub
mov
les
das
jns
jo
push
push
jne
in
pop
lret
and
cmp
outsb
pop
xchg
dec
lods
stc
cmp
lcall
cmp
xlat
pop
push
mov
xchg
jmp
adc
sbb
pop
fadds
call
jle
jne
mov
sub
xor
push
sbb
push
pop
stos
dec
push
cmp
je
sub
cmp
je
ljmp
leave
sbb
or
sbb
adc
fwait
cmp
or
mov
cmp
cltd
mov
gs
mov
mov
jg
add
inc
shrb
cwtl
add
loopne
scas
push
mov
rcrl
ss
push
push
jg
mov
jne
push
call
inc
cmp
jl
add
incb
xlat
ret
in
inc
jbe
pop
push
push
push
js
inc
scas
cltd
or
cmp
sbb
adc
jbe
xchg
push
xor
sbb
fdivr
dec
jp
mull
push
loope
dec
testb
jne
pop
xchg
push
shlb
add
in
and
add
movzwl
in
add
xlat
lock
mov
je
push
xchg
into
push
sbb
aaa
std
jmp
mov
lea
add
inc
test
jne
sub
push
push
inc
mov
cld
mov
aam
adcb
mov
ficoms
icebp
mov
adc
aas
push
xor
stc
sbb
shlb
jnp
pop
dec
out
lea
fbstp
iret
add
add
idivb
xor
mov
cmp
jl
mov
xor
stc
pop
insb
pop
pop
ret
mov
xor
xchg
add
sbb
sub
dec
outsb
mov
push
jl
add
sbb
push
pop
push
ss
movsl
shl
pop
jne
pop
mov
orl
or
mov
push
lea
adc
imul
sahf
adc
pop
cmp
fists
or
mov
or
mov
sub
test
jge
push
in
loope
loop
sub
xchg
or
mov
stos
or
jle
mov
mov
cmp
pop
jg
sbb
in
inc
clc
mov
lea
rol
cmp
cmp
outsl
push
jg
ds
ja
add
jmp
insb
fcoml
add
pop
mov
test
pop
cs
hlt
fwait
or
jo
jg
mov
out
movb
pop
pop
clc
and
enter
mov
enter
sub
je
cmpl
std
or
mov
jge
sub
add
movw
mov
jnp
pop
or
xchg
push
mov
ss
pop
pop
in
push
dec
mov
cmp
shr
loop
mov
sub
or
jge
cmp
nop
pop
movsb
push
and
idivl
or
jp
rorb
sahf
or
jne
fsub
add
push
cld
mov
popa
push
lret
push
adc
cld
cmpb
std
ja
add
push
push
sub
ret
sub
xchg
push
imulb
push
popa
pushf
adc
and
adc
shl
dec
or
loopne
mov
mov
add
inc
or
jge
xchg
jp
push
push
push
pop
loop
popa
inc
daa
push
push
push
or
out
sbb
fcoms
push
push
lea
sbb
or
lods
cmp
shlb
xchg
xlat
or
or
cmp
or
outsl
enter
imul
sub
mov
xchg
pop
fmuls
add
testb
or
mov
mov
jg
call
lret
dec
mov
fldcw
xor
inc
outsl
xchg
imul
mov
aaa
add
mov
adc
je
cmpl
lea
jl
mov
push
jne
push
jns
imul
call
dec
test
push
int3
loop
sub
or
out
and
hlt
push
push
sbb
daa
or
pop
daa
xor
mov
inc
inc
or
inc
or
ret
sbb
xor
imul
cltd
push
ficompl
add
inc
aas
xor
jno
inc
or
cmp
lea
dec
lds
push
and
leave
ret
and
arpl
ficoms
mov
cmpb
loope
mov
cltd
cmc
sub
test
jne
cwtl
icebp
filds
pop
mov
push
cmp
and
jnp
fcmovne
in
loop
pop
push
push
int
prefetcht0
cwtl
sub
push
pushf
push
mov
mov
rorb
cmp
sub
lock
pop
andb
xor
cmp
jge
jmp
inc
add
mov
push
xor
push
lods
mov
lea
xor
adc
add
in
sub
add
add
js
mov
cmp
je
stos
push
loop
pop
jle
mov
jmp
in
jp
cmp
cmp
add
imul
add
shlb
ret
pop
pushf
inc
or
movsl
jg
jno
ljmp
push
dec
decb
fsubp
loopne
xor
stc
ret
mov
enter
and
les
rorl
jg
mov
mov
or
add
ret
push
adc
push
jae
cli
adc
cmpsl
sub
cmp
jge
ret
sub
jle
mov
jno,pt
je
fiaddl
pop
xor
shr
lock
hlt
cmp
in
or
jb
lret
pop
sub
mov
rorl
addl
rorl
and
movsb
jb
jo
addb
jl
icebp
icebp
sbb
push
add
and
mov
pusha
sbb
add
push
pop
xor
or
and
and
mov
add
fstp
push
jb
cmp
lods
add
xchg
pop
mov
inc
loop
test
sub
fdivl
insl
int
insb
mov
addps
mov
cmp
adc
mov
shlb
jb
pop
fistpll
test
pop
bound
in
xchg
or
sbb
push
mov
cmpsl
dec
cmp
cmp
notb
cmp
cmp
test
and
dec
or
push
shlb
gs
sub
lea
scas
sbb
negb
je
mov
adc
adc
test
int3
mov
pop
xchg
lahf
xor
imulb
push
and
adc
pop
sbb
cmpsb
jns
sbb
pop
and
sbb
pusha
das
stos
xor
incb
mov
adc
rclb
add
dec
pop
outsb
or
sbb
xor
lock
xlat
push
lea
add
ret
pop
inc
mov
out
pop
mov
mov
pop
mov
aas
mov
xchg
pop
leave
inc
add
pop
or
cld
inc
cs
rcll
je
sbb
push
push
sbb
add
push
and
fsubrp
mov
inc
xchg
jg
dec
cs
pusha
jg
sbb
test
pop
and
push
jl
sbb
pop
sbb
pop
rcll
incl
fildll
push
sub
cs
daa
jb
or
mov
iret
outsb
mov
xchg
lock
ret
mov
pop
fildl
inc
cmp
loop
imulb
push
sub
loopne
and
je
or
pop
outsl
cmpsb
fxrstor
sbb
test
push
inc
push
sbb
push
push
push
in
in
rolb
fstl
push
pop
ret
shlb
xor
je
mov
push
mov
push
sub
in
cmp
in
ljmp
inc
pop
sbb
and
jle
lock
ljmp
dec
or
jmp
ret
pop
add
pop
lock
rcr
jle
sbb
sbb
mov
in
cmp
pop
and
xor
or
ja
je
push
adc
daa
ljmp
rcrl
je
mov
jecxz
xchg
mull
loope
jmp
xchg
ds
mov
fldt
movsb
movb
xchg
sbb
or
xor
dec
adc
fisubl
mov
add
clc
push
in
repnz
dec
je
jmp
fidivrl
inc
jp
mov
jg
shrl
rorb
clc
sbb
push
mov
daa
xchg
xchg
add
mov
incl
insb
or
enter
leave
and
das
dec
rcrl
xchg
push
dec
sbb
adc
std
inc
stc
mov
jl
push
lea
cmp
call
mov
sbb
adc
mov
or
in
mull
cmpsl
mov
xor
xorb
in
mov
xchg
dec
cmp
add
enter
mov
xchg
divl
jmp
fstpl
lret
mov
stc
lret
movsl
mov
lods
scas
sub
inc
into
fidivs
lods
xor
je
fdivl
scas
repz
cmc
jmp
ss
test
repz
pop
xor
rcr
dec
repz
aaa
lahf
mov
popf
fdivrl
mov
mov
pop
or
rcrb
andb
mov
add
and
sahf
in
sahf
in
or
mov
call
add
jb
pop
jae
dec
ljmp
repnz
add
push
daa
or
jecxz
push
call
mov
pop
push
lea
push
pop
dec
std
push
ficoml
add
push
lea
cmp
out
jle
xchg
push
enter
dec
aam
les
lret
pop
push
pop
sahf
ret
mov
insb
xchg
push
inc
jle
jmp
push
push
cmp
sbb
pusha
pop
int3
stos
xor
jle
push
std
test
cmpb
mov
cs
pop
mov
nop
xchg
enter
call
test
and
add
add
cwtl
les
testl
cwtl
movl
xorl
pop
mov
xchg
sahf
cmp
pop
std
or
and
xor
push
mov
jno
add
mov
or
push
push
jbe
xor
sbb
xchg
add
push
outsb
rolb
sub
mov
in
imul
mov
out
sbb
xchg
enter
pushl
mov
js
cmp
sbb
out
sub
mov
dec
dec
push
inc
lods
inc
and
pop
pop
add
sub
incl
push
setne
push
push
dec
and
add
xor
push
aas
mov
dec
pop
pop
popl
nop
rcpps
dec
pop
hlt
push
push
push
inc
lods
loope
cmp
je
lea
push
add
rolb
add
mov
loope
pushf
push
mov
mov
sahf
pop
mov
xchg
push
ss
lahf
pusha
xchg
dec
cmp
sbb
stos
cmpl
jne
mov
cli
adc
pop
adc
test
mov
xchg
in
ret
or
xor
jecxz
loopne
xlat
push
push
lea
es
adc
pop
ss
dec
lods
data16
push
mov
mov
insb
push
dec
dec
mov
push
push
mov
je
dec
adcb
mov
inc
or
rcrl
ret
add
out
inc
aas
mov
lcall
push
mov
add
mov
inc
add
mov
cmp
cs
mov
aas
adc
xchg
insb
es
xor
push
inc
in
xor
test
sarb
imul
mov
iret
repz
adc
xor
cmp
loopne
jl
inc
or
push
xor
sub
push
xchg
mov
push
adc
or
sbb
adc
pushf
inc
neg
sbb
lret
in
sub
loop
out
cld
call
pusha
adc
popf
jecxz
mov
sbb
aam
push
outsb
addb
adc
int
lcall
int3
add
adcb
sbb
test
jecxz
push
sub
test
add
addb
mov
jle
or
in
repz
out
mov
mov
lret
into
jnp
cmp
adc
movsb
cmp
cmp
lock
cmp
mov
inc
loopne
sahf
test
push
push
jnp
out
push
cwtl
add
jmp
lret
xor
push
push
adc
loope
push
and
push
add
cwtl
aas
cmp
cmp
cs
jo
lret
push
mov
mov
cs
mov
jo
rcrl
push
xchg
xchg
sarb
mov
mov
inc
jg
cmp
je
cmp
inc
pusha
pusha
add
mov
repz
lea
cld
jb
jg
jmp
pop
cld
stos
fnsave
xor
cmp
aad
push
pop
cmpsl
adc
shlb
mov
call
mov
popa
push
jno
icebp
mov
sub
jb
dec
mov
call
cmp
dec
je
enter
clc
jle
mov
ret
scas
xchg
cmp
dec
pop
jecxz
add
push
xchg
stos
sbb
sub
incl
jne
push
mov
dec
sub
inc
and
sar
pop
or
or
loopne
jb
pop
in
mov
sbb
pop
push
fstpl
jecxz
pop
out
orb
push
fwait
imul
mull
aas
movsb
push
mov
fcoml
test
inc
mov
sbb
or
lods
and
xchg
adc
mov
push
adc
nop
and
test
mov
or
push
push
dec
sbb
dec
ljmp
mov
sub
addb
mov
inc
lahf
push
rorb
mov
push
pusha
insl
movsl
jne
test
push
push
push
pop
loopne
popa
nop
cmp
sub
push
push
lea
cmp
push
jp
xor
add
mov
lahf
adc
or
js
jmp
jg
addb
cltd
loope
pusha
push
push
test
sbb
add
inc
cmp
pusha
imul
xor
mov
dec
add
fwait
push
data16
add
or
lds
or
call
mov
mov
and
push
push
repnz
push
push
and
jo
push
cmp
leave
xor
xor
sub
adc
inc
ja
mov
bound
adc
sbb
test
aaa
faddl
aad
or
shrb
cwtl
imul
inc
pusha
fmull
rclb
pop
pop
and
inc
ret
jl
inc
lods
mov
or
push
xchg
cmp
test
ja
movsb
lock
sub
es
add
add
add
popa
mov
imul
inc
dec
and
add
push
lds
pusha
les
mov
loop
sbb
enter
mov
push
or
dec
inc
sub
js
push
add
push
mov
scas
add
xchg
mov
push
and
jno
jb
jp
loop
lock
xor
sub
dec
or
or
or
push
mov
es
add
xorb
jno
nop
cmp
inc
adc
add
xor
cmpsb
sbb
xorl
fdivrs
hlt
adc
xor
push
jecxz
scas
stos
xchg
push
push
lds
push
cmp
jns
in
cld
cld
add
js
std
call
cmp
jb
jge
xchg
lock
nop
inc
das
jbe
push
stos
jo
sub
cmp
or
inc
test
add
dec
or
jmp
push
mulb
out
and
push
fisubrs
add
and
add
inc
dec
cmp
iret
add
addb
cmp
nop
xor
and
int
dec
dec
sbb
shll
push
push
push
popl
push
push
je
lea
ss
jmp
out
movb
or
mov
sbb
mov
push
popa
push
clc
movsl
mov
adc
adc
xor
push
sub
in
inc
pop
dec
jbe
out
add
jbe
mov
cmp
nop
dec
adc
imul
lea
mov
andl
cmp
sub
fadd
cltd
and
incl
rol
push
sar
push
inc
mov
fstpl
daa
jl
dec
pop
inc
sub
add
insb
es
add
mov
mov
dec
dec
mov
imul
sar
mov
shr
add
mov
imul
js
repnz
push
lahf
xor
or
in
jle
cmp
jmp
stc
inc
ret
cmc
sub
mov
mov
add
pusha
adc
push
push
enter
lea
ffree
jg
sbb
divl
jg
pop
dec
loope
or
pcmpeqw
push
shl
mov
adc
sbb
xor
ficomps
pop
or
or
cmp
sti
lea
or
cmp
xor
and
in
sbb
xor
inc
out
add
lods
or
out
dec
push
dec
test
adc
repnz
sbb
sub
inc
pop
sub
jle
fldz
data16
cmpsl
inc
out
pop
pusha
push
ljmp
cmc
sub
sub
sbb
jp
icebp
pop
push
adc
fstpt
cltd
idivl
je
add
aaa
ds
lea
pusha
cmp
xorps
sbb
loope
add
mov
or
add
adc
jle
cmp
add
in
xchg
xchg
lret
jmp
jbe
fwait
or
ljmp
mov
ljmp
sub
cmp
or
out
or
jmp
mov
lea
mov
rclb
and
push
faddl
outsb
fcmovu
xor
sub
xor
mov
fdivrp
jno
ds
shll
mov
test
sbb
inc
mov
mov
mov
jns
inc
push
push
fsubrp
xor
xchg
cmp
add
or
mov
std
lcall
fidivl
shl
insb
xor
pop
fiaddl
jo
pop
repnz
in
add
movb
addr16
sbb
stos
add
cli
shlb
sub
push
dec
jbe
inc
xlat
pop
shll
push
adc
jecxz
rolb
sbb
outsb
mov
sbb
adc
xchg
mov
outsl
lahf
arpl
je
xchg
mov
xchg
xchg
and
inc
andb
xor
lods
test
dec
or
push
add
mov
movsl
jno
sbb
mov
mov
xor
sub
mov
inc
test
lea
dec
and
invd
adc
sub
cmp
lea
or
inc
cmpsb
cmp
mov
mov
pop
mov
or
mov
xchg
jmp
loopne
lods
or
adc
pop
ret
sub
add
or
and
inc
mov
cmp
loopne
sbb
inc
arpl
scas
pop
clc
mov
inc
pop
mov
in
stos
dec
and
push
mov
push
inc
and
outsb
mov
add
mov
pop
xor
pop
inc
std
test
je
rcll
fs
or
notb
sbb
fisttps
fisttps
add
lock
jae
inc
leave
inc
mov
jg
jle
fwait
jmp
fstpl
inc
fnstenv
push
mov
movl
adc
addl
test
ja
adc
push
push
xorl
orl
and
mov
inc
sbb
adc
inc
pop
int
fdivr
orl
setl
push
and
js
pop
cmp
sbb
lds
lods
loope
mov
push
rcll
cmp
mov
repnz
or
xor
pop
and
pop
and
jmp
sbb
pop
mov
inc
movsl
mov
pop
ret
lahf
or
int3
xchg
pop
orl
addb
xchg
shlb
or
add
mov
adc
cmp
setb
mov
mov
sub
cmp
setae
lcall
and
add
mov
int
out
lret
mov
outsb
or
pop
jae
loopne
call
add
dec
in
inc
push
mov
shll
lock
push
adc
dec
jo
dec
rcll
push
es
pop
pop
scas
and
mov
and
test
mov
dec
xor
push
pop
cmp
pusha
push
mov
mov
dec
mov
sbb
sbb
fldl
push
jbe
mov
nop
clc
adc
sbb
push
add
dec
in
dec
push
and
add
cmpsl
jg
int3
in
dec
pop
sbb
add
out
mov
iret
call
jge
lea
jae
push
pop
jns
lahf
or
mov
cmp
ja
movzbl
xor
adc
or
push
sti
inc
pushf
fnstenv
jnp
sahf
idivl
test
test
push
jno
imul
jge
add
add
add
or
or
add
xlat
dec
jo
add
popa
adc
pop
pusha
or
mov
dec
popa
and
js
mov
or
sbb
push
and
inc
xor
mov
movl
mov
dec
add
xor
pusha
jmp
les
pop
push
mov
jg
push
add
lea
mov
mov
xlat
sub
add
cmp
outsl
ret
pop
pop
add
iret
push
mov
cltd
adc
mov
pushf
ss
adc
push
mov
sbbb
and
add
mov
add
jo
adc
pop
fisttps
add
mov
call
and
mov
or
sub
std
push
push
cmp
aad
dec
sbbb
or
and
mov
pop
inc
pop
adc
mov
sbb
mov
fisubl
or
xor
jo
mov
inc
test
rolb
rcll
adc
subps
roll
and
test
cli
fmul
rorb
mov
imul
sbb
movsb
dec
mov
in
cwtl
push
pusha
mov
lds
repnz
pop
stc
push
jmp
aas
push
nop
and
leave
es
jne
sbb
je
push
mov
mov
mov
sub
stc
icebp
and
or
jecxz
and
mov
push
sub
sti
shll
sbb
cmpsb
std
out
fsubs
mov
adc
mov
jge
push
or
movsb
fs
push
or
and
and
add
push
push
dec
jl
es
push
aad
add
stos
mov
jg
mov
sub
arpl
imul
outsl
add
and
sbb
inc
ljmp
add
ret
daa
cmp
lea
inc
xchg
push
push
adc
add
lock
lret
push
push
mov
mov
add
cltd
insb
cld
sub
add
movsb
mov
ret
sub
ds
in
daa
add
cmp
push
add
scas
mov
ss
add
add
fcmovnu
int
add
fcomps
push
and
xor
add
sub
lret
mov
push
sub
dec
dec
jo
fisttpl
lods
jl
ret
adc
xor
xor
fstpt
and
inc
push
add
jne
adc
and
mov
pop
push
add
fidivs
or
fs
pop
call
inc
in
call
mov
push
pop
jno
cmp
lods
mov
or
loopne
jecxz
add
push
mov
xlat
jae
pushf
or
cmpsb
ret
push
adc
add
add
adc
mov
loop
sbb
int
out
mov
mov
inc
es
pop
movl
mov
test
push
sub
pop
int
push
push
lock
add
push
mov
mov
adcb
mov
repnz
push
leave
xor
and
cmc
or
adc
and
adc
repnz
adc
and
test
imul
sub
add
aam
adc
mov
pop
push
sub
pop
adc
mov
push
or
adc
outsl
test
add
ja
jnp
adc
adc
movsb
into
rclb
lahf
in
scas
sub
mov
cmp
insb
mov
inc
aam
cmp
dec
sbb
insl
push
fmull
xor
mov
sbb
mov
insb
inc
sub
push
adc
cs
xchg
push
loope
ss
dec
je
mov
xor
and
mov
adc
xor
lret
ret
rorl
subb
hlt
mov
repnz
jl
cld
xchg
sbb
add
pop
mov
mov
les
jle
bound
int3
add
xor
push
inc
dec
sub
jb
sub
sub
loope
int3
add
std
stc
mov
int3
mov
jne
icebp
or
or
sbb
jmp
and
test
mov
movl
add
xor
jne
mov
fiaddl
in
ss
inc
pop
mov
sbb
cmp
in
les
iret
pop
mov
popa
add
les
mov
mov
or
sub
jb
or
sbb
lods
dec
or
add
push
pop
push
xor
and
rcrb
pusha
mov
lret
jne
div
in
das
mov
mov
jo
pop
push
pop
mov
daa
sub
and
push
adc
or
sbb
add
adc
sbb
push
out
add
lcall
shll
add
xor
lahf
sbb
std
mov
mov
push
pop
jns
rolb
push
sbb
dec
rorl
sbb
loopne
aad
push
sub
sbb
jnp
xchg
push
pop
movsl
fcomi
dec
sub
lock
shlb
push
add
xchg
mov
movsb
xchg
add
mov
inc
sbb
mov
xor
or
sub
xor
mov
dec
jb
cmp
jne,pt
pop
sbb
push
mov
and
adc
stos
inc
outsb
cmc
jbe
cmp
lds
clc
xor
mov
adc
add
test
and
ficomps
add
sbb
jbe
das
aam
jmp
sbb
jne
loope
push
add
push
loopne
or
push
cmc
data16
cmp
bound
xor
xor
lret
in
fucom
and
xor
xchg
and
and
orl
and
stc
push
and
rorl
cwtl
pushf
setle
jge,pt
daa
jmp
lret
shlb
test
and
and
or
or
xor
cmp
pop
dec
ljmp
push
mov
loope
push
shl
mov
and
sbb
push
add
pop
sub
cmp
xchg
add
les
xor
fbstp
jp
xchg
push
push
xor
push
push
sub
fwait
push
xor
or
xchg
lods
les
cli
add
sbb
jno
mov
xor
and
fwait
push
adc
mov
mov
loopne
push
sahf
aas
push
push
sbb
pop
je
rolb
jl
popa
lock
mov
push
in
push
test
seto
or
or
addb
in
lahf
add
sbb
xor
addl
inc
sbb
mov
add
add
sub
outsb
sbb
shll
fwait
add
push
push
leave
sub
cs
xor
add
xor
fs
pop
push
add
push
push
cmp
roll
and
cs
or
loopne
sub
push
add
es
ficompl
aas
icebp
xchg
int3
add
adc
pusha
inc
sbb
insb
lret
xor
loope
add
push
andb
push
jb
ror
dec
ss
push
repz
shlb
in
sbb
add
mov
push
cmp
cmp
les
in
mov
push
repnz
subb
test
sbb
call
xchg
cmpsl
dec
cmpsb
push
cld
fidivl
pop
add
shr
jnp
cmp
xor
push
je
test
add
jmp
mov
xor
sbb
mov
cmp
cmp
test
inc
ss
inc
cmp
push
mov
stos
dec
cmp
mov
inc
pusha
and
imul
push
testl
adc
pop
insl
sub
mov
leave
into
in
sbb
push
icebp
fldt
test
jmp
push
sbb
insl
push
sub
and
or
or
hlt
add
inc
sbb
adcl
in
dec
cs
cmp
lods
nop
xchg
mov
adcl
insl
daa
inc
cmpsl
lahf
mov
mov
mov
movb
in
pop
pop
lock
inc
pusha
pop
add
inc
mov
cmp
jo
sub
sub
pop
jp
arpl
push
insb
add
push
jge
adc
jg
inc
movb
cmp
aaa
in
loopne
pop
hlt
in
inc
outsl
add
sti
out
adc
jl
repnz
aad
int3
mov
sbb
mov
cmp
sbb
icebp
stos
and
loop
sub
in
inc
and
add
or
test
call
mov
sbb
sub
add
pop
aad
bound
xchg
les
outsl
add
cmp
enter
sub
inc
xor
aam
mov
xor
movsb
push
adc
or
jmp
hlt
push
popf
mov
lods
inc
adc
movsb
dec
test
adc
in
xor
and
push
push
sbb
mov
sub
cmc
loopne
jno
fs
scas
sbb
pop
rcll
mov
rcrb
ljmp
dec
push
into
je
push
imul
je
cs
in
xor
out
xchg
sbb
mov
fwait
into
sub
movsb
dec
mov
call
mov
fmull
mov
cs
and
fs
test
add
sbb
push
add
dec
pop
push
pop
out
lea
enter
mov
sub
pop
xor
popa
adc
push
imul
cli
test
or
dec
lods
sub
loope
push
test
popa
xchg
int3
popa
add
add
arpl
or
pop
mov
testb
pop
xor
fs
mov
fmull
fsubs
adc
jl
adc
add
into
ja
leave
adc
lret
inc
ds
pop
xor
xor
or
xlat
cmp
push
roll
jmp
fists
push
mov
and
xchg
sbb
enter
add
or
sub
pop
pop
int
or
mov
stos
add
lret
pop
mov
daa
clc
or
sbb
pusha
test
adc
add
bound
movsb
or
int
gs
adc
sti
jno
in
leave
mov
movaps
nop
push
adc
enter
adc
or
xchg
jl
xchg
or
mull
movsb
sbb
and
or
scas
sysret
xlat
adc
ret
adc
push
adc
sub
sbb
inc
and
dec
enter
push
pushf
cwtl
movsb
imul
pusha
ds
sub
and
cwtl
push
pop
dec
dec
fists
cmp
adc
imul
jo
xchg
and
adcl
inc
enter
popf
mov
inc
and
adc
inc
and
adcb
inc
es
adc
pop
int3
sub
adc
dec
sbbl
push
jg
repnz
cmpsl
popa
push
or
iret
and
cwtl
add
push
and
pushf
sbb
testl
xor
decb
push
pop
in
addb
add
ret
lea
sub
test
hlt
inc
adc
jns
and
sbb
rclb
inc
pop
add
sti
xchg
mov
loop
es
mov
mov
aam
add
add
dec
adc
push
ret
test
add
roll
movsb
mov
mov
pop
pop
mov
jae
or
les
and
int3
xchg
or
loopne
cmp
orb
sahf
jns
push
sbb
in
mov
push
mov
pop
fisttps
and
and
leave
jmp
ja
sub
cmp
inc
cmp
jno
xchg
pop
add
adc
out
add
es
aad
in
mov
xor
push
add
mov
sbb
sub
push
ret
dec
enter
push
in
dec
xchg
pop
imul
mov
dec
sbb
adc
imul
ret
out
push
daa
lea
xchg
sbbl
sub
cli
out
adc
pop
or
cmp
sahf
add
cmp
int
pop
out
movsb
sub
jl
or
mov
mov
fstl
mov
pop
mov
mov
adc
mov
and
or
cmp
pushf
jg
xchg
inc
inc
mov
test
pusha
sub
adc
push
cmp
and
mov
dec
jb
sbb
dec
leave
in
dec
adc
out
movb
repz
xor
fdivl
adc
cmp
int3
inc
and
je
insb
push
test
movsb
cltd
inc
sbbl
and
addb
fsts
shlb
push
sahf
orl
leave
add
rorb
pop
xchg
cmp
sub
test
jecxz
adc
iret
fisttpll
xchg
outsl
add
add
push
xchg
jnp
jne
lea
mov
dec
mov
inc
push
add
or
mov
dec
clc
and
sub
sub
or
jge
fsubrs
xor
xor
lcall
mov
lret
and
test
jle
jg
or
scas
xor
xchg
movb
hlt
into
or
xor
mov
roll
push
add
int
arpl
xor
in
xor
repnz
push
andb
push
add
addr16
jmp
shl
daa
shlb
push
dec
inc
cmp
test
rcrl
fwait
pop
push
dec
imul
andl
les
scas
mov
pop
adc
lahf
adc
aaa
jno
pop
loop
add
push
or
inc
add
sub
push
mov
push
lea
addb
mov
push
fisttps
lcall
andps
test
in
mov
pop
nop
inc
aam
daa
mov
push
adc
sub
add
test
test
aas
lea
aas
imul
sbb
xor
cmpsl
aas
cmp
fwait
inc
ss
es
dec
add
scas
xchg
xor
jle
or
test
and
cmp
mov
les
jg
jno
jns
mov
icebp
test
sbb
movsb
sbb
fisttpl
cwtl
sbb
notl
dec
add
push
pop
add
jns
pusha
add
jle
jno
dec
and
scas
je
mov
test
ljmp
sbb
test
jns
inc
and
mov
out
jae
scas
test
or
or
inc
in
fists
add
mov
mov
dec
adc
add
inc
pop
sbb
movl
push
push
test
mov
subb
jo,pt
aam
push
add
jo
xlat
jecxz,pn
aaa
cwtl
test
and
adc
rcrb
incb
jle
mov
add
push
add
mov
or
popa
pop
outsb
jns
gs
push
xor
push
add
ss
lahf
mov
jg
xor
pusha
mov
es
cmpsb
and
mov
add
push
mov
mov
push
outsl
pop
or
cmp
push
push
stos
rol
mov
xor
inc
pusha
in
sbb
push
pop
rol
sbb
pop
jno
mov
jp
jle
aas
js
mov
adc
mov
out
decl
lea
sub
mov
loopne
pop
cld
jo
sbb
fimuls
add
jne
adc
add
cmpsb
jle
movb
pop
push
lret
mov
xor
mov
sbb
faddl
orb
lock
into
sbb
dec
mov
cmpb
adc
cmpsl
add
adc
mov
pop
push
test
or
add
rclb
movb
add
out
or
push
jmp
mov
cs
add
int
jb
je
test
mov
add
pusha
aam
mov
dec
sub
or
push
imul
mov
add
push
add
dec
outsb
push
addl
add
push
xchg
inc
mov
cmpsl
cmp
icebp
pop
dec
mov
sub
push
adc
sub
shlb
das
dec
cmpsl
inc
insb
pushf
xchg
jmp
pop
pop
and
cmp
loope,pn
cmp
xchg
imul
push
inc
jo
cmp
and
lahf
lock
adc
cmp
add
ret
je
inc
mov
xchg
fs
xlat
insb
loopne
push
aas
push
push
cs
std
fsubrs
inc
sbb
xor
cmp
test
loopne
push
push
and
xchg
jne
jne
insl
mov
stc
paddq
cmp
add
mov
xchg
aam
lods
jbe
adc
push
push
pop
inc
jno
sub
leave
sub
and
and
call
jno
xor
and
add
mov
je
xor
sbb
jne
xchg
inc
add
cld
js
sete
aam
push
push
lcall
mov
or
enter
pop
adc
add
sub
dec
xchg
ss
mov
mov
xor
push
sub
jne
or
fcmovnbe
mov
fcoml
ret
incl
cmp
roll
enter
clc
andl
push
add
cmp
pop
and
dec
test
cmc
imul
lock
bound
add
sbb
jo
inc
sti
mov
out
enter
xor
dec
ret
add
iret
scas
push
out
ficomps
and
out
sarb
push
sbb
mov
add
clc
shl
mov
cmp
pusha
mov
or
or
fs
repz
xchg
add
push
mov
mov
pusha
mov
adc
setge
fdivr
movsl
pop
sub
mov
movsl
pop
xor
cmp
add
cmp
lock
pop
imul
jle
jl
sub
fmuls
dec
and
xchg
inc
ret
xchg
xor
inc
or
shll
insb
pop
leave
sub
lahf
add
popa
dec
mov
jo
test
and
test
push
or
jno
sub
or
adc
adc
add
inc
xchg
dec
mov
sbb
jmp
sub
jle,pt
adc
xchg
adcl
sub
jo
or
divl
daa
ret
aam
dec
aaa
inc
inc
cmpl
mov
push
mov
outsb
cmp
daa
adc
fsubrl
xor
push
andl
push
cmp
or
mov
sub
mov
jge
fisttpl
mov
inc
push
push
icebp
push
jns
mov
and
sbb
push
adc
out
fucompp
push
push
leave
xchg
lea
mov
push
scas
adc
and
inc
jle
push
clc
push
lds
adc
push
sbb
sbb
mov
xchg
pop
inc
outsl
nop
sub
adc
sbb
inc
mov
add
push
mov
dec
or
mov
fisttps
sti
rcrl
adc
ret
mov
stos
and
xor
loop
scas
imul
outsb
negl
cmp
shlb
adc
sub
and
mov
sbb
into
fnsave
mov
dec
stc
mov
sbbl
rol
xor
pop
cmpsl
fnstenv
xor
push
movsl
jge
jbe
loopne
inc
ljmp
ds
xchg
mov
test
je,pn
push
mov
mov
ret
repnz
xchg
push
pop
push
adc
or
fwait
mov
inc
or
pop
push
mov
decl
xor
hlt
cmp
jne
cmp
imul
inc
aas
mov
ja
bnd
push
rclb
mov
cmp
shl
daa
scas
cmp
add
cmpsl
sahf
insb
aas
push
mov
cmpb
adc
sti
adc
xchg
sub
pop
leave
loop
sbb
jae
mov
dec
lea
adc
add
sub
out
movsb
sbb
pop
adc
push
push
push
imul
inc
sbb
add
ds
push
inc
sub
ds
fidivrs
sub
bound
pushl
mov
jb
mov
sub
cmp
jg
mov
sbb
sbb
sbb
jmp
fsubr
sbb
mov
or
xchg
ss
out
int
mov
push
xchg
sbb
add
sbb
mov
sbb
aaa
int
jae
adc
inc
lds
inc
add
sub
pop
insb
rcr
sar
loop
hlt
cmpsb
jmp
sub
je
cmpb
stos
xchg
jp
lahf
add
or
push
rclb
fldt
xchg
add
sub
pop
loopne
add
adcb
jnp
xor
lret
lret
add
cmp
push
cmp
ret
or
or
cmp
jge
add
jae
cmp
add
and
or
ret
xchg
cmp
movl
dec
mov
es
out
imul
jno
enter
push
sbbl
loopne
popa
adc
jl
mov
clc
adc
call
push
add
push
repz
push
ret
pop
aam
test
gs
cli
inc
xchg
dec
dec
cld
sub
adc
pop
lea
mov
dec
call
add
test
mov
pop
repnz
jno
mov
hlt
sub
sbb
pushf
mov
or
push
pop
ret
inc
jb
or
fnstenv
lods
add
inc
fisttpl
jo
dec
lods
loope
sub
sub
loope
mov
mov
add
hlt
push
adc
pop
mov
repz
add
ret
jg
nop
sbbl
adc
sub
sub
rolb
jmp
add
add
andl
lods
push
sbb
roll
push
outsb
ret
sbb
push
addr16
imul
inc
jle
fs
pop
inc
aas
pop
mov
ret
aas
cmp
adc
cmp
js
xchg
add
jbe
movsl
add
push
mov
jns
ljmp
inc
dec
mov
outsb
add
in
xor
outsb
ret
pop
pop
leave
push
pop
sbb
subb
ss
xlat
sbbl
push
adc
imulb
push
loope
ret
pop
mov
je
push
sbb
and
or
and
movsl
adc
das
loope
inc
dec
decl
imulb
rcr
add
mov
and
adc
cmp
xorb
jle
lock
xchg
rclb
imulb
lock
loop
pop
popa
test
xor
xor
or
popf
jo
addb
orb
je
add
into
lods
pop
sub
lea
cmpsl
push
lea
shlb
dec
scas
pop
addl
int
adc
das
push
push
mov
push
push
popf
icebp
xchg
std
jp
lods
dec
gs
outsb
push
add
and
xlat
or
add
shr
pop
and
repnz
hlt
xchg
adc
lea
lea
imul
mov
sbb
pop
data16
mov
pop
popa
loopne
roll
mov
pop
ljmp
pusha
add
mov
aas
outsb
aas
clc
mov
inc
add
or
repnz
inc
or
jbe
dec
flds
sub
nop
adc
inc
mov
imul
mov
sbbl
loope
xchg
fisubl
rolb
inc
mov
add
mov
shrb
adc
jmp
xchg
jmp
pop
pop
or
pop
adc
bound
out
mov
iret
or
sub
je
xchg
mov
xor
jle
mov
and
push
andl
rorb
dec
mov
aam
jg
in
add
sahf
mov
push
loopne
mov
xchg
xor
mov
push
sub
push
fiadds
mov
xlat
shrb
in
pop
push
push
jnp
fcomps
test
lods
adc
xchg
xor
cmp
push
lds
xor
or
jmp
rorl
addr16
xchg
fcmovu
cmpsl
out
xchg
push
and
nop
sub
dec
jae
fstl
xor
test
pop
iret
push
ret
test
shl
paddusw
add
fadd
add
push
popa
cmp
je
sti
jmp
aad
in
sbb
in
add
cmp
xor
rorb
or
sub
xor
sub
xor
sub
adc
add
or
lock
push
mov
dec
xchg
mov
sbb
jbe
pop
xchg
xchg
cld
sarb
mov
sub
nop
daa
or
cmp
test
nop
xlat
sub
add
pop
push
or
push
push
xchg
rorb
push
mov
push
imull
test
sub
xchg
test
nop
psrld
mov
mov
xor
push
xor
or
sbb
repz
aam
cmp
popa
imul
adc
mov
and
int
xchg
rolb
jnp
adc
pop
jb
adc
mov
push
leave
adc
test
cmp
jmp
js
incl
sub
or
fsubrs
sbb
scas
pushf
jne
sbb
pop
sti
hlt
or
addr16
push
jle
push
or
andl
cmp
inc
push
mov
add
sbb
add
sbb
mov
mov
scas
pop
subb
mov
xchg
into
add
jno
dec
fistpl
shll
lock
jle
push
arpl
xor
push
jp
and
cmp
xchg
push
jecxz
or
adc
popf
int3
and
sub
daa
mov
rorb
sbb
sbb
loope
pop
pusha
xor
xchg
mov
mov
dec
dec
enter
sub
scas
xchg
or
addl
cli
inc
ljmp
lds
xor
fmuls
inc
int
mov
lea
sub
cmp
jo
inc
adc
orl
push
add
subb
clc
cmp
dec
aad
pop
movsb
or
jecxz
mov
fistps
pop
adc
sub
inc
jle
out
and
push
adc
out
xor
int3
push
mov
test
fxch
adc
lods
mov
dec
xchg
lea
adc
cld
xor
inc
jecxz
cmp
push
dec
mov
xor
add
cmp
sbb
rcll
sub
push
push
or
xchg
mov
add
and
sbb
jns
push
dec
jo
int3
pop
mov
push
push
push
popf
or
inc
sub
fsubrp
xchg
jo
jae
cmp
cwtl
aaa
cmpl
mov
sbb
inc
or
icebp
add
sub
mov
mov
adc
inc
adc
jecxz
fimuls
mov
ret
adc
add
adc
and
lock
test
into
jl
call
jg
push
test
fldl
shll
stos
dec
adc
xchg
adc
enter
sbb
mov
push
insb
push
and
inc
jmp
cmp
sub
sub
dec
inc
push
sub
mov
jl
or
mov
push
cltd
dec
adc
xorb
enter
popf
and
stos
add
add
inc
insl
sub
push
pop
push
jecxz
dec
ret
fistpll
xchg
dec
xchg
push
adc
sub
fsubrs
flds
pushf
pop
leave
add
add
or
adc
rcll
dec
enter
add
push
push
pop
dec
mov
xchg
dec
pop
push
add
int
sbb
popa
lret
inc
add
insb
dec
inc
add
inc
add
mov
inc
add
inc
stos
das
mov
pop
xchg
lea
fcompl
jl
xor
add
jge
loop
jl
lock
popf
xor
jl
fiaddl
iret
jp
and
movsb
insl
fsubrl
add
push
sbb
out
add
lret
mov
or
push
push
fidivs
add
movsl
insl
ss
and
int3
push
push
adc
add
negl
mov
xor
mov
js
mov
jmp
push
sub
add
pusha
push
inc
or
bound
sbb
add
dec
and
ret
clc
sar
nop
xchg
clc
mov
mov
jae
fcmovne
scas
or
je
dec
pop
sbb
add
inc
xor
or
nop
cmpsl
cmp
jl
push
mov
adcb
add
mov
mov
shlb
xchg
xlat
inc
sub
xlat
std
xor
push
add
fnsetpm(287
stos
sbb
inc
dec
inc
mov
add
or
dec
adc
leave
or
and
ret
movsb
push
dec
scas
cmpb
dec
mov
or
inc
test
adc
xor
ret
scas
enter
sub
or
mov
sbb
fs
lea
add
rcr
addb
fisttpl
sub
add
xor
pop
cmp
pop
mov
pop
pop
js
nop
je
mov
in
xor
or
mov
sub
movsb
jne
cs
cmp
fdivrl
cmp
mov
rorl
fistpll
orb
std
imul
pop
sbb
add
in
enter
mov
in
cld
mov
sub
or
jge
insl
mov
or
cmp
dec
add
pop
out
scas
jo
push
cmp
sahf
pop
push
push
cmp
jo
into
or
rcrb
sbb
loopne
imull
sub
mov
lsl
pop
push
push
push
push
add
push
pop
ficoms
push
push
add
mov
lds
push
test
xchg
push
add
add
push
movb
mov
adc
xor
xchg
add
fsubr
lds
arpl
aam
and
xor
jge
iret
js,pn
jg
or
fldl
ja
js
sbb
push
pop
or
push
ljmp
sbb
xorl
sub
and
test
dec
pop
push
cld
scas
xchg
fsubrs
incl
in
mov
pop
pop
xchg
lahf
jle
inc
push
lcall
sbb
push
outsl
sbb
add
or
jle
ljmp
inc
push
or
rorl
ret
cmpsl
xchg
lock
or
sbb
outsb
push
shll
mov
ret
arpl
or
adc
push
pop
pop
jmp
push
cld
push
ljmp
test
add
xor
cmpsl
jmp
push
nop
pop
mov
push
and
movl
les
mov
sbb
rol
add
cmp
push
call
addr16
rorb
pushf
movzwl
sbb
shll
lock
sbb
aam
mov
sbb
push
push
gs
in
lret
clc
push
push
ds
sub
push
es
test
and
inc
cli
inc
ret
push
cmc
or
mov
sbb
push
push
cmp
and
jmp
adc
cmpb
mov
das
pop
xor
roll
pop
sbb
add
pop
xor
popa
or
or
clc
jl
push
fdiv
inc
decl
je
push
sahf
mov
pop
addr16
fiaddl
les
mov
and
pop
sbb
cwtl
mov
sub
pop
push
xlat
jge
cmp
mov
xor
and
push
js
sbb
push
push
adc
add
push
mov
sbb
pop
sub
inc
mov
cmpsl
sarl
cld
xor
negb
jns
add
sbb
or
enter
cmc
outsb
pop
and
pop
ja
jmp
xor
leave
cmc
push
cmp
in
xor
test
xor
sub
xor
cli
ret
loope
push
or
or
or
mov
pop
xorl
insb
shlb
mov
push
mov
or
mov
push
out
mov
sbb
loopne
add
push
or
sarb
add
lock
push
pop
inc
xchg
pop
add
dec
cmp
es
adc
addr16
adc
repnz
shlb
inc
pop
lret
or
pop
ret
loop
dec
popf
fistps
repnz
std
stos
or
or
adc
gs
inc
add
push
push
dec
cli
jle
inc
scas
or
inc
clc
xor
incb
sub
gs
jo
loopne
fmul
pop
lock
mov
int3
xchg
dec
sbb
add
mov
bound
pop
loopne
mov
lock
loope
pop
sbb
push
cmp
movsb
inc
aam
lods
inc
sbb
rcll
fisttpl
sti
push
rcl
jbe
add
jle
or
jnp
jae
mov
mov
pop
fildll
roll
fcompl
inc
xchg
ret
add
mov
jl
mov
cmp
and
inc
adcl
sub
js
pop
fdivrl
xlat
mov
sbb
push
test
sti
pop
test
add
sbb
scas
pop
ret
negl
and
movb
imul
xchg
loopne
loope
inc
addb
adc
mov
adc
jo
cmp
lea
jne
push
mov
adc
das
clc
arpl
cmpsb
mov
mov
jecxz
mov
test
rclb
loop
adc
add
mov
or
cli
pop
movl
or
testl
mov
pop
shl
imul
cmp
mov
enter
jb
add
dec
test
dec
faddl
pop
sbbb
mov
dec
cmpsl
xchg
add
mov
ret
xlat
imul
outsb
in
movzbl
xchg
loopne
pop
ja
adc
inc
shll
popl
stc
and
or
add
ret
ss
push
add
or
mov
pop
jnp
add
daa
aas
adcb
jl
pop
clc
pop
ja
and
mov
or
add
add
xlat
mov
dec
mov
enter
repz
fcmovbe
cmpsb
jae
and
xlat
in
dec
sbb
ljmp
jb
out
mulb
int
push
icebp
sbb
clc
and
sbb
xor
cs
das
je
or
imul
scas
mov
je
or
jne
mov
inc
je
mov
lea
dec
mov
sub
outsb
mov
sahf
inc
clc
aaa
fldt
pop
decl
cmp
or
jmp
push
out
mov
es
test
fidivs
push
and
add
or
add
add
pop
sub
inc
jmp
inc
and
les
sub
cmp
dec
pop
push
icebp
add
sbb
xadd
cmp
mov
dec
incl
not
out
movb
aas
push
mov
mov
loop
sub
test
sarb
pop
mov
and
mov
ds
sub
cmp
inc
sbb
cmp
sbb
mov
fisubrs
out
jl
jb
dec
adc
sbbl
movsb
cmp
adcb
ret
dec
push
sub
inc
jmp
mov
jne
mov
and
push
mov
fstp
and
adc
insl
add
mov
cli
and
fsubrl
add
push
leave
insb
loopne
int3
outsb
cli
ljmp
filds
xor
cmp
ja
pushw
shlb
xor
sub
cmp
cld
aaa
out
inc
ja
and
ljmp
cmp
xor
add
int
insb
cmp
cmp
aaa
popf
lods
or
xchg
mov
sahf
add
mov
xchg
mov
mov
aas
xchg
negl
ret
fsubr
push
cwtl
aas
or
aas
xor
and
lcall
or
je
add
stos
jne
aam
xchg
ret
push
test
xchg
push
or
scas
incl
jae
mov
inc
divb
pusha
aas
adc
jo
and
loope
jne
adc
mov
test
dec
call
xor
or
inc
add
mov
leave
jne
lret
cmp
testl
adc
and
test
adc
mov
pop
test
jne
into
sub
es
adc
jb
xor
dec
cmp
fists
and
add
add
inc
ss
notb
xchg
subl
push
jae
push
pop
add
mov
and
mov
adc
and
cmp
mov
lods
out
dec
imul
adc
sbb
jae
add
jbe
sbb
in
pop
ja
ret
stos
mov
mov
pop
jo
sbb
xchg
pop
push
aad
sub
add
pusha
sub
inc
mov
adc
aam
ret
ret
xchg
xchg
cwtl
mov
das
pop
sbb
pop
add
pusha
jbe
mov
mov
sahf
add
cmpb
sbb
xchg
or
xchg
shrl
out
not
aas
scas
sbb
mov
pop
add
repz
add
mov
adc
aam
div
movsl
cs
das
mov
or
mov
or
or
mov
push
xor
push
inc
mov
add
mov
cmp
inc
pop
inc
fs
mov
pop
lret
dec
xor
inc
jg
test
add
or
push
ret
dec
shrl
jo
lea
xchg
out
lods
cmp
aam
test
mov
add
mov
sub
add
and
xchg
add
push
cmp
adc
je
cmp
je
xchg
jae
jecxz
add
rcr
je
sub
es
pop
ss
and
or
inc
and
popa
mov
jmp
xor
cwtl
cmp
xor
loope
mov
test
loop
mov
mov
xchg
mov
jbe
lea
sbb
xchg
xchg
add
out
les
or
dec
cmp
paddsw
add
add
pop
leave
fmull
adc
pop
mov
test
xchg
jmp
xchg
ficoml
pop
test
cmp
je
push
shrl
jle
lock
pop
push
sahf
out
inc
jbe
mov
push
adc
and
push
pop
cli
out
cmp
mov
inc
push
xor
xor
jbe
loope
ds
and
inc
sbbb
je
pop
inc
cmp
jb
mov
or
jb
mov
or
or
push
xchg
lea
mov
jle
fdivrs
mov
or
mov
into
repnz
js
jno
cltd
clc
push
push
lahf
mov
or
imulb
mov
daa
mov
jb
mov
lea
inc
int
pop
lock
lea
add
and
les
lods
cli
mov
pop
and
orb
add
hlt
fs
push
lea
inc
xchg
mov
popf
pop
lahf
addl
lods
cs
inc
movsl
xor
adc
xorb
inc
sub
add
sub
test
push
lea
sbb
and
inc
jg
xchg
or
xchg
ret
lret
jns
in
dec
test
add
mov
cld
ret
mov
test
testl
inc
leave
and
xor
and
adc
ds
sub
mov
mov
cmpsl
and
sub
sub
mov
adc
sti
aam
mov
mov
xor
mov
mov
fs
pop
push
fists
cmp
fdivrs
pmaxub
mov
and
rol
inc
cmp
jne
ficoml
mov
jl
adc
mov
jb
push
mov
jne
or
iretw
cmpsb
iret
add
ret
adc
inc
rclb
and
fimull
jns
add
mov
add
rolb
divl
jns
jmp
push
or
mov
shlb
or
sbb
pop
cmp
in
lea
mov
push
inc
inc
inc
jne
push
push
mov
pop
movb
cmp
outsl
insb
mov
mov
rcl
out
and
dec
pop
jbe
rcrl
add
xor
xor
out
ljmp
cltd
cld
leave
and
fstpl
mov
out
jnp
and
jle
push
sbb
das
clc
aad
pop
push
jmp
push
cmp
push
jb
or
pop
mov
dec
ret
mov
jmp
lock
cmp
je
cmpb
ljmp
adc
mov
jmp
cmp
adc
loopne
inc
inc
inc
loop
pop
orl
ds
lock
sub
addr16
test
jne
les
xchg
cwtl
rorl
scas
call
js
add
xchg
outsb
mov
out
stos
out
lock
pop
sarl
cmp
or
pop
insb
mov
mov
pop
inc
inc
mov
pop
fimuls
aad
xorb
and
push
cmp
rorb
jb
mov
xchg
and
in
sub
xchg
out
cmp
inc
mov
jbe
cli
and
in
lret
pop
add
or
sub
and
push
inc
roll
jmp
insb
xchg
enter
je
or
je
push
pop
cmp
jne
shr
sbb
rorb
pop
not
adc
sub
xchg
xchg
or
js
movsl
pop
cmp
ss
movl
mov
mov
movsl
jns
or
rorl
and
push
jecxz,pn
sbb
xchg
push
sub
jnp
xor
inc
and
inc
push
cmp
xor
mov
in
dec
cmp
mov
fxch
dec
dec
cmp
nop
mov
adc
out
inc
and
pusha
jno
mov
pop
xchg
sub
mov
mov
dec
xor
xor
sub
cmp
xchg
rcr
xlat
hlt
jb
dec
adc
mov
sub
inc
rclb
adc
dec
jmp
in
xchg
mov
mov
lock
addr16
or
sbb
orb
inc
mov
outsb
or
fcoml
and
fldt
cmp
or
pop
inc
jnp
adc
loopne
inc
loop
popf
lret
jg
push
push
ds
jo
mov
push
or
xor
inc
inc
push
and
add
push
push
test
int3
sub
shll
int
loop
ds
add
ss
push
rorb
adc
dec
adc
lret
mov
push
mov
cmp
dec
sub
cmp
adc
cmp
xorl
or
inc
sbb
insb
filds
nop
je
push
add
add
adc
add
rcrl
push
push
or
insl
negl
inc
adc
cmp
mov
call
sbb
notb
pop
push
pop
test
int3
mov
jle
mov
subb
xor
xor
orl
push
ds
out
test
add
scas
aam
sbb
in
dec
ljmp
or
mov
cmpb
or
add
shl
or
add
jmp
or
jno
or
inc
dec
data16
sub
push
or
cmp
pop
dec
xchg
nop
les
dec
inc
adc
sbb
cltd
lds
imul
out
or
aas
adc
add
sub
jle
or
or
js
push
pushf
push
mov
test
pop
and
sbb
stc
dec
mov
cmp
dec
cld
add
sub
sub
insl
loop
push
dec
inc
fcmovb
clc
sub
shl
or
inc
fildl
repnz
push
sub
mov
cmp
lods
rcll
sbb
push
into
pop
jg
sub
or
sarl
fldl
cmp
sub
push
jbe
popf
and
loopne
push
cmpsl
imul
je
cmp
out
xchg
xchg
pop
ret
lock
or
or
ds
ficoms
sub
lret
or
insb
into
xor
add
rol
ret
adc
js
pop
stos
sbb
xchg
in
push
fidivl
jb
mov
and
fdivl
add
or
add
xchg
nop
out
out
jne
xor
adc
pusha
sbb
xor
adc
mov
xchg
iret
pop
add
xchg
sub
sub
mov
inc
mov
pusha
xorb
push
pop
in
outsb
jno
ret
test
jl
pusha
and
cmpsb
adc
test
jno
loopne
or
aaa
push
pop
popa
xchg
imul
imul
dec
or
lock
sbb
xlat
push
inc
push
push
adc
mov
inc
and
mov
jnp
mov
mov
push
fsubrl
cli
sahf
adc
and
pop
ret
xchg
lods
push
xor
fstp
arpl
jb
push
mov
bound
push
sub
out
movl
cmp
or
add
add
data16
adc
dec
sbb
xor
mov
cmp
and
and
ret
out
xchg
icebp
and
pop
sbb
repz
sbb
add
pop
idiv
inc
or
pushl
adc
pop
push
jl
imul
add
pushf
aam
mov
fbstp
dec
or
in
pop
push
mov
cwtl
loopne
dec
aaa
push
les
sahf
mov
add
adc
xchg
mov
loopne
data16
and
xor
or
rcrb
out
sbb
dec
jns
push
xor
push
xor
sbb
pop
sub
adc
mov
dec
xchg
or
jecxz
add
mov
inc
inc
jnp
or
pop
fadd
sbb
push
dec
cmp
les
inc
mov
add
cs
ret
hlt
jle,pt
jnp
lds
jl
ja
lods
push
sbb
hlt
inc
js
mov
sbb
hlt
sbb
jecxz
cmp
int
jmp
lods
and
test
push
jae
pusha
nop
add
and
mov
mov
inc
push
and
test
sbb
push
inc
add
mov
pop
adc
add
popf
cmp
mov
add
cmp
fmull
sahf
data16
rolb
jae
inc
sbb
mov
sbb
mov
and
jecxz
loop
mov
enter
adc
mov
enter
cmpb
pop
mov
ret
fwait
mov
out
jmp
inc
mov
mov
add
push
push
pop
mov
cwtl
or
decl
mov
call
or
or
call
jg
in
inc
lock
fiadds
sti
pop
mov
mov
sbb
pop
sar
lods
mov
xor
inc
mov
add
cwtl
jne
xchg
jecxz
xchg
add
dec
out
addr16
xor
cwtl
inc
outsb
cmp
fisubs
aam
aaa
out
jecxz
jl
inc
cmp
stos
sbbb
nop
shlb
add
xor
and
je
add
adc
adc
push
mov
or
sub
mov
jno
out
divb
adc
movsb
pushf
push
daa
add
xchg
mov
inc
add
aas
imul
mov
add
rorb
mov
or
mov
or
fstps
sub
push
jnp
xchg
int3
dec
int
sbb
inc
pop
push
mov
push
loop
cmc
jle
out
lods
jp
rolb
rorb
test
cmp
jae
cmp
dec
push
xor
xor
add
add
xor
lahf
add
xchg
int3
add
test
or
adc
xor
nop
xchg
popa
cmp
jge
and
mov
adc
mov
mov
and
adc
xor
dec
add
xrelease
fnstenv
mov
ss
lock
out
insb
push
iret
insb
cwtl
lock
pusha
sub
loopne
cmpsb
and
or
push
mov
add
fs
aam
push
lods
xor
pushf
dec
or
mov
movsb
enter
or
mov
mov
pop
push
push
mov
xchg
cmpsl
repnz
pop
cmp
sub
xor
or
loope
into
inc
xor
push
ffree
in
roll
or
push
ficoms
dec
dec
sbb
jo
push
cltd
roll
cld
call
incl
cmp
pop
jl
mov
push
wbinvd
adc
clc
fwait
pop
sub
adcb
jmp
xchg
rclb
loop
mov
mov
xchg
push
ret
cltd
mov
mov
sti
inc
add
jno
add
and
jnp
push
shr
mov
dec
jnp
lods
mov
pop
ds
je
mov
fmull
loop
enter
add
push
cmp
and
sbb
or
enter
adc
xor
push
lret
and
xor
xor
inc
aaa
pop
mov
lcall
and
push
cmpsl
pop
add
cmp
push
dec
adc
movsb
icebp
jbe
jge
xchg
jae
clc
mov
push
pop
xchg
pop
push
sub
xchg
xor
mov
nop
jl
test
test
call
std
mov
aaa
jo
sbb
fdivrs
adc
shlb
sahf
pop
or
jecxz
lock
pop
xchg
add
lds
sti
clc
add
movsb
xor
xor
xor
mov
add
push
mov
add
insb
and
push
mov
cmp
mov
out
adc
push
test
movsb
ljmp
arpl
adc
inc
add
adc
mov
ljmp
lcall
xor
std
cmp
sub
lods
cmp
adc
push
fcoml
imul
fabs
fsts
js
sbb
mov
push
xchg
and
mov
cmp
jae
or
cld
pop
test
add
leave
hlt
add
mov
out
and
cwtl
jns
adc
shll
enter
dec
mov
jp
sarb
dec
adc
fs
inc
add
cmp
and
inc
sarb
lahf
cmp
sbb
jne
lock
mov
add
xchg
or
mov
add
sbb
or
test
mov
test
push
ja
pcmpgtd
ret
lods
push
jmp
dec
jo
lods
mov
xor
add
repz
inc
repz
in
pushf
xor
cmp
bound
mov
rcr
pop
ljmp
scas
push
xor
push
test
andb
adc
test
ucomiss
cld
insb
xchg
ficomps
xchg
sbb
cmp
gs
pop
fisubrl
imul
and
sbb
adc
lret
sbb
daa
movsl
in
xchg
sub
and
sub
sbb
out
sub
xchg
fstpt
out
sub
or
in
sub
imul
xor
icebp
stc
out
sub
or
movsl
int
jle
xchg
or
insl
jecxz
push
jmp
pop
pop
and
jo
inc
jno
jnp
popa
sub
jno
adc
add
sbb
test
and
and
dec
push
pop
jne
gs
dec
bnd
or
mov
inc
add
cmp
inc
push
add
in
outsl
ret
out
sub
dec
in
das
mov
dec
add
add
mov
mov
add
aaa
mov
cwtl
sbb
dec
insb
and
sub
daa
sbb
sbb
cmp
sbb
xor
xor
dec
push
int
sbb
int3
test
xor
jmp
add
pushf
hlt
fcmovnu
mov
outsb
add
mov
sbb
rol
lcall
fs
and
sbb
fcompl
or
xor
pusha
push
jns
insl
inc
dec
mov
mul
add
or
push
sbb
dec
xor
cmp
cmpl
clc
and
mov
add
sbb
cmpsb
push
ss
jo
lcall
xor
sbb
jae
incb
adc
mov
push
adcb
roll
add
rolb
push
outsl
daa
cmp
sbb
es
pop
xor
mov
xchg
mov
mov
cmpsl
mov
or
inc
insb
outsl
testb
daa
test
sub
rcrb
and
adc
mov
out
faddl
inc
adc
jns
push
and
sbb
es
dec
sbb
mov
movb
dec
xchg
mov
test
cmp
jp
sbb
cmp
mov
xchg
and
dec
or
adc
and
test
jbe
popl
add
cmp
xchg
jmp
imul
dec
cmp
inc
jg
add
and
pushf
mov
xchg
inc
or
orl
inc
fidivrs
add
inc
add
sbb
pop
xchg
dec
jnp
inc
loop
mov
add
jo
and
neg
ret
pop
dec
clc
cmp
xchg
or
ds
cld
mov
add
mov
jmp
add
pop
mov
pop
mov
sub
xor
inc
jbe
add
lret
mov
mov
lret
mov
dec
cmp
loopne
lcall
inc
and
mov
icebp
dec
sub
or
gs
in
pop
sbb
sbb
and
lock
ljmp
and
mov
push
pop
movsl
sbbl
pop
xchg
inc
stc
sbb
sub
addl
mov
push
push
mov
pop
repnz
nop
sbb
movsl
add
add
mov
xchg
repnz
dec
push
or
cmp
or
mov
jge
xor
sbb
cld
jl
push
movsl
sub
add
pop
sarb
bound
pop
out
decb
add
orl
stos
cltd
or
push
jmp
sub
push
push
inc
adcl
stc
stos
xchg
in
ja
mov
sbb
shlb
ret
ljmp
nop
cmpsl
push
daa
sbb
movsb
dec
je
je
add
popa
add
mov
push
push
out
and
ret
cmp
and
or
outsl
push
push
sub
xchg
test
sub
rcl
adc
pusha
inc
aam
sub
xor
outsb
and
mov
popa
sbb
adc
or
and
arpl
pop
cltd
xor
mov
in
push
add
addb
iret
push
repnz
sbb
repnz
add
or
iret
add
add
xor
rcrl
adc
xchg
aam
inc
mov
pop
push
fimuls
les
xchg
sbb
cmp
or
loop
fcmovb
int
cmp
cmp
andl
mov
xchg
aaa
gs
mov
or
addb
jb
loopne
add
pop
aam
repnz
and
and
dec
insl
fs
push
add
jp
pop
xor
notl
jne
dec
add
push
imul
ror
scas
sbb
add
mov
dec
fld
aaa
mov
movsl
push
out
test
daa
call
dec
xor
movsb
cmp
inc
mov
or
inc
pushf
mov
push
xor
jb
jmp
inc
or
lret
push
or
loopne
sbb
jmp
or
adc
sbb
outsb
loope
pop
aad
xor
xor
jecxz
hlt
lea
inc
xor
fstl
jecxz
movsb
mov
adc
int
jge
add
inc
daa
clc
stos
and
shr
cmp
xchg
pop
mov
push
mov
push
add
xor
sbb
push
das
mov
fwait
mov
jo
xchg
andb
and
add
decl
jno
je
or
push
lea
inc
scas
add
rcrl
add
cld
cmpl
inc
out
adc
addr16
xchg
xor
rcr
sbb
mov
fucomi
mov
lea
mov
aam
jb
call
adc
loopne
or
jge
adcl
decb
pusha
and
call
pop
inc
and
sbb
jmp
adc
mov
mov
dec
addb
push
dec
or
lcall
in
scas
sub
dec
daa
dec
add
pop
ds
cmp
inc
xor
push
mov
and
pop
js
sahf
xchg
sub
cld
sbb
popa
jp
push
ret
js
push
je
mov
out
test
test
ret
pop
or
bound
loopne
xorl
dec
xchg
cld
push
sahf
mov
push
adc
and
push
repz
mov
and
adc
shl
jns
sub
sbb
mov
sbb
sub
test
ljmp
mov
add
add
or
or
shrb
cltd
and
pop
jno
jns,pn
jg
sahf
push
xchg
push
lds
mov
adc
mov
rorb
cmp
sub
mov
lods
mov
adc
rorb
pop
add
push
jmp
inc
push
mov
or
add
pop
xchg
test
push
sub
into
into
mov
dec
cmp
aas
cmp
pop
inc
adc
xchg
and
jo
or
hlt
into
test
push
push
gs
ds
xor
lea
push
adc
mov
jl
in
jecxz
fdivr
sub
adc
mov
imul
test
shr
adc
dec
lods
lods
jnp
push
push
xor
push
xor
and
ret
pusha
xor
loop
lds
add
insb
loopne
ss
lret
scas
add
movb
bound
jmp
mov
mov
cmpl
sbb
push
addr16
xchg
cmpb
in
ret
pop
sbb
xchg
add
add
mov
rclb
sbb
pop
add
add
pminsw
shufps
push
int3
jo
lds
or
jae
fimuls
adc
pop
add
cmp
rorl
xchg
xchg
sub
and
dec
push
or
lock
or
mov
rorb
ljmp
mov
adc
push
mov
and
or
clc
pop
adc
dec
je
sarl
cmp
cmp
push
mov
sbb
mov
add
jmp
daa
or
xor
sbb
jbe
add
jae
pop
adc
aas
push
push
lea
je
and
pminsw
je
mov
movl
inc
sub
testl
pop
mov
icebp
push
or
jg
rclb
popl
adc
jl
imul
gs
sbb
jne
cmp
je
push
push
cmp
pop
sbbb
rcll
fistl
push
sub
jecxz
sbb
mov
test
test
push
xor
mov
mov
pushl
xor
xchg
xor
jl
pusha
push
in
mov
pop
movsl
mov
mov
xchg
dec
jmp
push
icebp
cmc
mov
push
mov
xorl
adc
pop
mov
insl
mulb
pop
mov
or
push
mov
mov
test
rclb
pop
subl
mov
out
mov
add
shll
jbe
and
sbb
popa
mov
cmp
xchg
lret
push
stc
sub
inc
mov
outsl
mov
cmp
lret
or
xor
mov
pop
or
popf
les
or
dec
or
xchg
push
enter
push
pop
lock
push
push
sub
dec
sbb
enter
nop
loope
enter
or
pop
xor
out
xchg
fstpl
lea
in
push
pushf
lea
push
adc
cld
hlt
les
cmp
adc
int3
sub
sub
mov
sbb
and
mov
xor
nop
into
es
mov
dec
mov
pop
inc
test
cmp
call
push
sbb
xor
xchg
add
je
sub
cltd
xlat
int3
xchg
sbb
push
daa
inc
jl
in
jp
mov
dec
add
pusha
jno
pop
mov
imul
push
sbb
jo
dec
mov
push
push
test
or
sub
lock
les
lock
xor
push
mov
lock
pop
jo
out
ljmp
adc
mov
inc
push
mov
dec
mov
dec
mov
push
es
int3
jbe
call
pop
es
push
insl
cmp
out
jbe
cmp
sbb
push
mov
mov
sbbb
mov
mov
push
pusha
mov
jbe
pop
test
jge
cmp
adc
push
mov
cmc
mov
cmp
je
sub
mov
movsl
dec
or
mov
lret
push
inc
add
xor
lods
jb
pushl
push
loop
add
lahf
loopne
push
dec
test
movsl
fwait
sbb
sbb
lcall
add
mov
cmp
mov
pop
push
dec
fsubr
call
jge
mov
add
add
rcr
sub
push
mov
mov
inc
loop
bound
mov
xlat
ss
pop
aad
and
cmpsl
pop
mov
push
je
sub
imul
adc
mov
std
push
xrelease
adc
add
inc
or
sub
mov
sbb
and
sub
add
int3
mov
in
out
mov
mov
or
mov
mov
jo
push
lods
xor
cmp
fsub
lds
lea
adc
add
das
and
pop
pop
jo
imull
sbb
xchg
or
cmpsl
outsb
push
adc
cli
mov
add
enter
stos
xchg
jbe
aas
pop
mov
les
jecxz
rorb
mov
xor
adc
add
shrb
mov
ss
test
sbb
adc
xchg
inc
mov
adcl
rol
mov
and
add
sbb
sbb
inc
xchg
sbb
dec
in
xor
xor
lea
cmpsb
jle
in
je
sub
jns
adc
jmp
xor
out
cmpl
test
cmp
mov
push
mov
mov
fs
and
addl
mov
mov
jmp
insl
or
icebp
cmpsl
fisubrl
call
jmp
pusha
add
push
push
pop
push
por
or
push
or
shlb
mov
jl
call
shlb
xor
dec
inc
dec
movsb
and
mov
mov
jle
ja
push
mov
repnz
push
jp
fcmovnu
mov
decb
push
mov
add
dec
sub
pop
mov
add
inc
data16
sti
rorb
scas
addr16
cs
addr16
movsl
and
jo
sbb
add
cmp
mov
adc
xchg
dec
test
or
xor
sbb
mov
push
jbe
jb
pop
addb
cmp
push
jmp
add
and
xchg
jl
stc
or
jle
adc
dec
nop
mov
ss
jb
mov
jae
jne
push
std
pop
lock
push
push
orl
cwtl
aas
add
push
je
xor
cmp
jge
xchg
jle
mov
push
xchg
fisttps
fidivrs
pop
clc
loope
shr
jg
mov
xor
test
jno
rolb
fsubl
push
fcoms
pop
add
adc
inc
and
mov
push
inc
cmp
mov
mov
or
mov
adc
and
mov
adc
add
fsubrs
or
xchg
add
sbb
stos
mov
bound
jnp
mov
or
and
inc
cmp
lea
jl
imul
push
push
xchg
add
and
push
push
inc
adc
popa
dec
in
or
push
sahf
movzbl
rclb
fs
sub
and
int3
rolb
add
aad
xor
add
cwtl
adc
lahf
out
shll
cmp
sahf
or
inc
sbb
mov
mov
inc
or
decb
dec
and
fadds
imul
add
fsubr
jns
fiadds
out
decb
xor
test
lds
add
lahf
and
repnz
into
mov
sub
in
pushl
jp
jl
push
je
cmp
mov
mov
adc
sub
imul
and
xchg
ja
jg
popf
out
adc
mov
jmp
or
decl
and
mov
push
jge
cmpl
inc
xlat
push
sbb
mov
add
mov
fildl
es
dec
test
iret
add
pop
sbb
cmp
push
flds
pop
ret
xchg
pop
outsb
push
ret
pop
movzwl
dec
call
leave
mov
dec
add
jmp
adc
add
mov
sub
sahf
push
movsl
mov
nop
clc
dec
cmp
mov
fucomip
or
mov
cmpsb
fistps
gs
cld
adc
sub
jns
int3
sbb
ret
pop
psubq
inc
sub
push
or
inc
add
sbb
mov
insl
lea
in
sbb
add
and
scas
movsb
push
mov
push
dec
sub
or
pop
add
add
movsb
dec
jmp
or
clc
inc
lea
loopne
push
mov
push
aaa
pop
sub
sbb
adc
fucomp
pop
push
pop
stos
dec
cli
test
incl
rclb
lock
add
cmp
jbe
pusha
cmp
add
mov
add
lcall
sahf
addr16
and
ret
fwait
movsl
lds
xchg
ljmp
shrd
lret
sub
iret
inc
hlt
dec
mov
lds
rolb
dec
and
or
bndstx
dec
sbb
mov
nop
cmpsb
inc
inc
pop
faddl
cmp
paddq
lahf
les
or
xchg
inc
aam
push
rolb
cmpsl
mov
mov
mov
test
lods
aam
mov
lods
imul
daa
faddl
pop
push
dec
shl
enter
lea
adc
mov
mov
jo
mov
add
mov
add
in
mov
cmp
or
adc
cmpl
test
mov
out
push
sub
push
gs
mov
add
inc
and
or
data16
mov
push
addb
adc
pop
mov
inc
mov
xlat
sbb
xchg
sbb
xor
scas
cmp
adc
and
out
sbb
mov
xor
cwtl
mov
jle
enter
sub
add
test
je
pop
sbb
jmp
push
lcall
pop
jg
insb
jmp
test
loope
mov
cmp
fsubr
or
lea
dec
pop
push
aaa
adc
adc
hlt
add
pop
iret
add
or
pop
in
adc
push
insb
and
dec
enter
sbb
push
mov
adc
adc
je
pusha
jmp
mov
sbb
sub
push
add
int
mov
adc
jmp
push
jo
inc
scas
fisttps
sbb
loop
scas
sub
cmp
fildll
xor
in
mov
data16
aaa
mov
mov
unpcklps
sbb
loop
add
adc
aam
inc
add
mov
jmp
repz
or
adc
cmpsb
es
adc
push
outsl
test
lea
mov
jmp
and
enter
lock
ds
mov
pop
cs
out
ret
lcall
push
push
lcall
or
mov
inc
in
je
xor
mov
lock
cbtw
sub
jmp
pop
mov
pusha
fmuls
in
fsubrl
in
mov
addb
cmc
lret
jno
mov
hlt
mov
icebp
ret
mov
enter
in
lea
push
nop
jecxz
inc
aam
fcoms
mov
jp
idivb
int3
test
lea
mov
ret
sarb
jne
inc
xlat
loop
sub
inc
in
out
loopne
xor
shrl
push
loopne
cmp
mov
lock
insl
testl
inc
addl
jge
push
lcall
in
movsb
push
call
ficoml
aam
add
and
add
ffree
cmpsl
jne
push
push
inc
clc
push
add
ja
add
mov
sub
mov
sub
enter
cmp
cmp
adc
lods
cs
push
repz
mov
outsb
out
add
inc
add
call
or
inc
stos
push
mov
push
cmpsl
xor
sbb
add
popf
imul
pop
negb
and
mov
adc
push
icebp
dec
mov
shl
add
inc
add
mov
addl
add
push
enter
xor
pop
lods
sbb
jl
add
add
into
adc
or
fldcw
mov
sbb
mov
mov
adc
jbe
roll
xor
fiadds
mov
jbe
lds
shrl
rolb
lahf
iret
out
inc
add
sbb
arpl
cmp
mov
dec
or
stos
jle
cmp
fisttpll
les
loop
pextrw
lar
int3
sub
aad
mov
fistps
lods
inc
add
push
call
shl
jbe
add
sub
or
xchg
lods
jbe
shlb
sbb
xor
inc
add
add
and
mov
adc
adc
push
push
cmpb
push
popf
adc
insl
test
fcompl
inc
sbb
sbb
push
popf
xchg
add
aad
imul
sbb
jle
mov
outsl
out
addl
and
mov
jg
ret
lahf
ret
sbb
mov
mov
aaa
adcb
sbb
outsb
cmp
imul
fistps
cmp
adcb
and
sbb
cmp
lret
fistpl
mov
sahf
dec
or
and
hlt
incl
sti
jmp
inc
sub
movl
sub
mov
jle
lea
into
jnp
loope
pop
push
push
jl
inc
mov
imull
cli
adc
adc
mov
mov
sub
sbb
je
jmp
je
add
fs
daa
jo
push
adc
popa
push
cld
test
aad
fadds
and
sub
jae
aam
jb
repz
rolb
clc
pop
pop
jg
int3
out
out
jnp
sub
push
sbbl
pop
cmp
inc
and
je
lds
lods
es
fdivs
cmp
xor
inc
push
add
pop
ss
or
pop
xor
loop
repz
in
sub
arpl
jb
push
adc
pop
enter
push
xchg
sbb
stos
cli
mov
imul
mov
xor
addl
aas
test
xchg
mov
cli
inc
nop
push
push
xor
data16
and
sbb
mov
test
arpl
ficomps
clc
int3
adc
sbb
add
add
mov
lea
mov
in
cmp
je
dec
in
stc
push
push
aam
iret
jmp
lea
shl
and
inc
hlt
push
push
rcrl
inc
push
jbe
icebp
loopne
inc
mov
jecxz
dec
jns
xor
sub
pop
rcrb
mov
iret
popa
sbb
lea
push
or
in
ljmp
dec
popa
and
movsl
xor
push
loop
sub
loop
mov
mov
lock
pop
fdiv
cld
adc
nop
adc
mov
cwtl
insb
popa
jmp
std
sbb
ret
and
cmp
pop
add
bound
fnsave
cmpb
rcr
sub
pop
rcl
add
movsl
cltd
pusha
into
push
jne
mov
filds
or
loopne
addb
pop
push
xor
inc
inc
mov
sub
xchg
rorb
mov
cmp
pop
test
or
es
mov
inc
adc
xor
ret
pop
cmp
test
push
dec
cmpsl
das
cmpb
cmpsb
push
les
cmp
push
dec
stos
imulb
mov
and
or
push
test
out
sahf
negb
dec
in
inc
adc
in
testl
push
mulb
lock
scas
mov
mov
fwait
xchg
leave
mov
aam
lock
sub
ss
xchg
gs
mov
xchg
jbe
or
pushf
push
cli
inc
pop
adcl
dec
inc
shl
inc
jbe
jns
xor
push
cmp
je
inc
add
add
pop
jne
mov
push
popa
cmp
stos
aam
pop
adc
lcall
cmp
jbe
insb
popf
pop
inc
and
sub
and
popa
xor
mov
sbb
pop
and
add
cs
xchg
lds
add
imul
cmp
loopne
in
push
xor
js
cmp
jae
dec
add
cmp
std
pop
stc
sbb
sbb
cld
mov
add
push
adc
call
cmovnp
adc
sbb
aas
pop
das
rcr
cli
push
ss
or
rorl
lds
mov
mov
pop
das
and
inc
aam
xchg
xchg
jp
fisubl
sbb
mov
or
sbb
add
pop
xchg
mov
xchg
jmp
add
je
pop
push
or
adc
or
mov
cmpsl
mov
je
data16
and
in
ret
mov
fmull
and
fcomps
jle
xor
lea
dec
push
mov
out
inc
cmp
xor
or
jno
xchg
cmp
cltd
or
stc
pop
dec
mov
mov
push
add
dec
lea
xor
insl
orb
ret
je
mov
pop
rolb
adc
mov
push
adc
inc
cs
icebp
pcmpgtd
push
loope
push
pop
inc
pop
sub
das
inc
test
and
adc
mov
or
popf
sub
fucomi
adc
lea
pop
mov
or
in
adc
arpl
push
cltd
cmp
jne
mov
adc
sub
pop
imul
pusha
mov
jb
push
pop
xor
bound
stos
sub
mov
mov
pop
mov
loopne
das
cmp
pop
jge
popa
mov
loopne
das
inc
loopne
mov
loope
test
and
sti
jmp
lea
sahf
push
and
mov
push
add
or
sti
pop
sub
push
dec
push
imul
mov
xchg
in
stos
inc
adc
pop
jo
jg
daa
clc
mov
sbb
ret
fisubl
cmp
mov
inc
dec
test
xor
ret
or
xor
test
push
popf
rol
aam
add
cmp
jl
dec
dec
sub
daa
adc
adc
imul
and
lock
xchg
sub
push
mov
gs
push
or
sarl
add
pop
or
inc
sbbb
insl
jmp
xchg
cmp
sbb
flds
flds
cmp
xchg
not
push
cmp
inc
fmulp
dec
mov
jo
leave
dec
and
xchg
mov
push
sbb
sub
fmuls
push
cltd
ret
sbb
jae
adc
add
pop
jmp
outsl
test
test
add
pop
inc
inc
adc
dec
or
ret
nop
or
xchg
pop
sbb
adc
add
dec
inc
shr
mul
seto
pop
neg
or
push
jo
shl
mov
cmp
jne
or
filds
outsb
fisubs
add
dec
into
add
push
cmpb
dec
xlat
xor
jp
cmp
jbe
xor
push
or
or
andb
jne
jns
add
inc
add
outsb
dec
or
inc
bound
jb
xchg
scas
push
mov
jecxz
xchg
sarl
push
movsb
or
prefetcht0
movsb
clc
or
pop
mov
sbb
movb
es
adc
mov
push
sbb
or
sub
dec
and
cs
jl
or
pop
lock
sti
add
iret
jl
jmp
movb
push
dec
iret
xor
test
xchg
jmp
iret
pop
incb
mov
enter
dec
test
jb
mov
dec
mov
mov
xorl
mov
xchg
jo
jbe
add
test
ret
jae
shrb
nop
xor
cmp
ja
fistps
add
inc
es
mov
shlb
mov
subl
push
mov
add
inc
inc
push
mov
lock
or
mov
call
xchg
add
test
sbb
sub
insb
push
mov
or
inc
mov
add
push
cmp
xor
lods
inc
adc
inc
mov
cmp
rolb
pop
mov
xor
inc
adc
repz
and
push
mov
push
arpl
lds
or
add
out
inc
and
pop
pop
loopne
inc
sbb
xchg
stc
xchg
xchg
pop
cmpsl
insl
dec
or
sbb
add
in
insb
testl
jb
jae
push
push
jl
fs
mov
or
gs
inc
inc
shll
out
mov
js
xor
inc
daa
push
mov
xor
inc
jae
cmpb
add
sbb
xor
movsb
or
xor
add
or
dec
cmp
popa
jmp
push
jmp
scas
or
add
push
xchg
mov
dec
inc
inc
add
les
cmp
xor
mov
add
je
cmpsb
es
pop
add
ret
xchg
arpl
jg
cmp
add
sub
lds
inc
adc
adc
fistps
add
jo
mov
loopne
xor
fcomps
loope
jge
inc
sbb
xchg
leave
lret
lahf
or
iret
mov
test
dec
inc
jbe
lea
sbb
add
mov
sbb
shrb
push
les
loopne
push
fsubrs
testl
int
clc
lea
mov
lea
mov
or
push
mov
rorb
movl
jne
lea
or
and
push
jl
sub
sbb
inc
fwait
fs
mov
aam
push
repz
inc
or
fcoml
cmp
mov
int3
inc
sahf
dec
jo
sbb
sbb
cmp
and
xor
lea
adc
mov
mov
xchg
dec
cmp
out
rcr
adc
push
incl
stc
mov
test
pop
push
dec
lock
jl
imul
jmp
es
adc
add
jmp
push
rolb
loope
pusha
addl
clc
inc
add
out
mov
xor
push
or
push
mov
xchg
cld
cmpsl
fadds
shlb
cmp
pop
cmp
mov
push
fistpll
or
lds
sbb
dec
pop
pop
and
add
movl
cmp
inc
enter
sti
inc
cmp
mov
aam
jmp
iret
xchg
mov
mov
scas
enter
or
repnz
loopne
call
divb
xor
lods
or
mov
mov
jg
inc
cmpsb
movsl
sbb
or
push
test
inc
das
fs
push
jne
mov
cmpsb
and
add
sub
adc
dec
in
or
fs
leave
cmp
xor
sbb
je
lods
push
adc
push
lods
movsb
sbb
xchg
or
push
xor
mov
xor
xor
pop
adc
insb
add
or
cld
add
push
out
loop
mulb
loopne
sub
cmp
push
push
push
add
mov
jmp
shrl
loopne
sti
push
insl
loope
sub
cli
cs
mov
sahf
jne
fimull
dec
mov
add
adc
lea
mov
mov
mov
mov
push
mov
imul
dec
mov
sbb
or
roll
push
push
mov
push
fsubrs
jge
jecxz
loope
repz
or
cmc
lods
sbb
out
or
pop
mov
dec
test
xchg
or
xor
mov
add
out
jb
aam
test
add
sub
sub
mov
dec
out
mov
mov
xchg
jge
aam
fsts
je
add
roll
inc
in
aam
lds
test
adc
ja
mov
ds
sahf
add
fldpi
pop
popf
dec
sub
jns
and
inc
cltd
or
sbb
sbb
sub
pop
push
push
aam
add
inc
fidivrs
push
and
and
mov
jmp
jae
stos
pusha
or
push
scas
add
mov
insb
push
cltd
sub
jmp
movsl
push
shrb
sti
pushf
adc
mov
shrl
lock
fnstenv
jb
inc
adc
cmp
sbb
cmp
stc
bound
sbb
pop
cld
dec
call
mov
movsb
cmp
add
test
dec
sub
call
cmp
jae
mov
faddp
or
ret
jmp
adc
cmpsl
roll
dec
aaa
dec
rcr
inc
inc
jmp
or
and
clc
jae
lea
insl
clc
jmp
cmpb
jne
cmpb
jne
lds
sti
shl
or
mov
les
sti
fildll
neg
sbb
and
add
sbb
jl
stc
lods
out
pushf
sbb
or
cmp
cmp
orl
or
and
pushf
sti
pushf
inc
pushf
sbb
repnz
test
jmp
push
jl
xchg
imul
enter
push
push
sbb
sbb
push
arpl
nop
shll
jmp
mov
jp
jmp
xor
xor
mov
aad
mov
pushf
mov
and
push
ljmp
pop
jmp
pop
push
xchg
adc
ret
cmp
pop
cmp
push
xchg
cmp
fwait
push
and
push
mov
push
rolb
pop
fdivrs
push
insb
and
sarb
test
pop
dec
pop
push
mov
insb
jne
adc
arpl
pop
lret
inc
imul
mov
or
dec
add
aam
sub
out
jmp
call
push
mov
xchg
je
nop
jecxz
rcr
sti
jle
xor
xlat
or
and
les
aam
push
jne
stos
jmp
mov
popw
inc
mov
incl
xor
movsb
jne
or
mov
sahf
xchg
xchg
jmp
jae
mov
test
je
call
jle
pop
add
ret
push
jae
jo
sub
sbbl
je
add
popf
mov
dec
pop
push
popa
iret
js
lcall
fbstp
insb
push
lea
sbb
scas
sbb
ret
fcomip
testb
sbb
push
pop
xchg
or
les
fstl
adc
repz
and
rolb
push
fistl
ret
lret
cmpb
je
popf
adc
mov
hlt
push
loop
fidivs
cmp
mov
xchg
push
mov
movb
push
negb
sub
fimuls
pop
sbb
lea
jecxz
lods
lods
movsb
add
push
ret
in
lea
push
lods
jno
mov
or
jnp
inc
lea
inc
mov
inc
sub
pop
ficoms
add
jno
lods
lea
adc
push
xchg
mov
add
jne
push
orb
fdivs
push
inc
push
sahf
div
cs
push
sbb
pushf
xchg
push
lea
loope
cmc
test
lods
jmp
mov
pop
icebp
testb
test
sub
inc
jge
mov
or
je
mov
xchg
cmc
lret
push
push
ljmp
add
ret
sub
lods
or
pop
jno
lret
and
jo
mov
push
and
cwtl
clc
xor
jmp
or
lret
movb
adc
lods
push
pop
pop
jno
dec
repz
into
push
xchg
and
adc
add
xor
lret
jl
inc
stos
add
ss
adc
cmp
sub
xchg
sbb
push
push
or
adc
pushf
test
jl
int
mov
xchg
adcl
mov
cmp
inc
pop
clc
pop
les
jl
pop
jae
je
adcl
and
psubb
sbb
sbb
or
fucom
enter
mov
test
cmp
jb
leave
popa
jmp
movsl
sbb
sbb
enter
inc
mov
push
hlt
adc
test
out
dec
or
je
inc
inc
es
mov
or
inc
lret
into
xor
pusha
movsl
lcall
xor
or
mov
arpl
pop
ret
into
lret
or
subb
pop
push
and
fmuls
push
sbb
adc
mov
imul
lock
addl
sarb
inc
xchg
fs
icebp
mov
mov
sbb
sbb
call
push
push
enter
out
dec
jno
jne
stos
add
mov
test
mov
sub
add
dec
mov
cmp
adc
gs
mov
lret
dec
imul
pop
sub
bound
jl
adc
sbb
push
lods
adc
mov
cs
fldcw
xchg
ds
and
jb
fcomps
es
mov
outsb
pop
fsubl
xchg
arpl
mov
aad
and
add
leave
ljmp
jbe
mov
in
cmc
ja
or
je
mov
clc
test
mov
push
rclb
adc
mov
rcr
in
push
push
or
sbb
jbe
push
or
lahf
add
or
inc
sub
inc
and
push
loope
je
mov
dec
dec
adc
cmp
jb
pop
inc
mov
insb
and
sub
cs
cmc
and
add
js
aas
xchg
fimuls
ficoms
mov
sub
jmp
mov
mov
rorb
int3
xlat
aaa
int
rcl
dec
push
adc
fs
inc
push
outsb
add
cmp
xchg
mov
cwtl
adcb
pop
adc
push
push
les
jbe
mov
mov
or
ror
or
outsb
or
add
adc
aaa
xchg
mov
into
pop
fadds
mov
pop
sub
dec
mov
or
lcall
sbb
test
push
dec
inc
cwtl
fxch
popf
xchg
jg
imul
jmp
shlb
in
leave
test
mov
sbb
xor
sbb
sub
inc
mov
test
and
sahf
adc
cmpsl
pop
push
or
pop
add
mov
icebp
mov
aas
add
and
es
mov
repnz
ret
and
mov
add
and
dec
pop
xorb
repz
rol
int3
or
call
xor
dec
sti
lret
mov
popf
pusha
sub
mov
mov
fcoml
mov
or
add
stos
gs
bound
sbb
and
out
cmpsl
xchg
jbe
leave
mov
mov
cmp
hlt
loop
jl,pt
push
mov
outsb
cmpb
jne
inc
inc
xor
cmp
mov
dec
or
or
icebp
loopne
jne
cmpsb
in
adc
jp
push
push
sbb
push
mov
and
les
xor
sbb
sbb
or
add
xor
iret
sbb
test
inc
call
mov
icebp
dec
aad
dec
jmp
mov
jo
mov
mov
push
pop
adc
stos
add
mov
sbb
push
xchg
jmp
push
js
xor
nop
mov
add
movb
push
add
imul
inc
mov
and
add
or
and
lea
sbb
cmpl
sub
lock
jmp
enter
test
loope
mov
lea
cbtw
scas
cwtl
inc
sub
add
pop
jmp
scas
pop
dec
xor
mov
es
xor
mov
mov
shlb
push
clc
fsubs
push
shl
push
push
adcl
test
and
jne
adc
pushw
rol
imul
and
test
in
testl
sbb
rorl
js
adc
aaa
jnp
add
mov
inc
jp
mov
jg
movsb
cmp
mov
push
push
or
push
push
js
fnstcw
call
xor
lods
adc
lock
fldenv
clc
push
imul
adc
js
lods
test
and
pop
inc
mov
fcmovne
leave
xchg
je
sub
sub
sub
dec
add
xchg
xchg
or
adc
mov
push
or
cwtl
clc
or
pop
push
xor
rcrb
push
stc
or
inc
sbb
and
call
in
pushf
add
mov
shlb
and
pop
arpl
imul
sbb
push
inc
fnstsw
das
jne
cmpl
lahf
add
shll
test
mov
cmpsl
add
or
addl
or
jecxz
aam
sub
mov
mov
push
pop
and
mov
movsb
je
pop
dec
imul
cmp
sbb
fistpl
loopne
or
cmp
je
and
loopne
sbb
sub
add
inc
adc
cmpl
sbb
int3
add
adc
leave
jae
xchg
and
and
cmpl
add
xchg
hlt
push
lds
jb
jnp
xchg
ja
mov
mov
xchg
dec
pusha
sbb
shrl
or
jle
dec
roll
sbb
push
pusha
jmp
test
cmp
adc
pop
insl
mov
mov
mov
outsb
and
jne
sarb
movsb
push
jo
js
xor
push
push
dec
pop
push
lock
mov
push
pop
fisttpll
enter
inc
aam
loope
int
je
lds
xchg
inc
adc
shll
dec
push
pop
and
sbb
push
push
pop
clc
pop
xchg
fbld
cmc
push
adc
loopne
xlat
push
add
sbb
int
sbb
inc
sbb
mov
inc
outsl
add
and
cltd
insl
mov
dec
rolb
cltd
dec
sahf
inc
adc
jo
cmp
adc
and
push
loope
add
adc
cwtl
pop
and
push
enter
and
inc
cmpsb
mov
jl
xor
push
push
fs
lea
adc
sbb
sbb
mov
dec
sbb
mov
sbb
shr
xchg
cmc
add
cld
test
incl
inc
mov
jp
mov
cmp
outsb
loopne
fldenv
cmp
fiaddl
aad
pop
sbb
pop
stos
enter
push
push
inc
cmpsl
or
loope
mov
xor
jmp
pop
cmp
fs
mov
add
lea
jo
adc
addl
stc
mov
dec
cmp
push
xor
cmp
dec
fidivl
jns
or
int3
jo
jnp
push
shlb
push
pop
xchg
test
sub
and
cwtl
add
adc
adcb
ret
and
xchg
dec
dec
cs
fwait
pop
sti
xor
add
adc
push
cmpsb
nop
scas
adc
add
sbb
jl
add
adc
or
push
or
adc
sbb
inc
insb
inc
repz
js
mov
movsb
pusha
and
add
movsl
nop
stos
add
nop
cltd
mov
mov
pop
or
stc
hlt
push
add
loop
push
test
shlb
lret
pop
imul
sbb
arpl
gs
dec
or
sbb
and
add
inc
adc
add
sub
in
fildll
mov
dec
dec
or
add
in
dec
dec
dec
push
es
or
test
aaa
roll
test
and
rcll
push
adc
call
pop
sbb
es
cwtl
sbbb
rcl
sub
and
dec
pop
sbbb
jge
mov
into
adc
mov
hlt
outsl
movsb
push
pop
mov
mov
dec
jge
icebp
iret
sbb
loop
add
in
mov
xchg
flds
pop
push
lea
push
int
push
pushf
add
inc
cmpl
shrb
xchg
lea
jne
andb
dec
jbe
dec
call
pusha
xchg
les
xor
mov
les
scas
or
lret
rclb
je
sbb
inc
lock
or
dec
jo
dec
push
xchg
sbb
shll
fmul
addr16
test
jo
sahf
in
inc
loopne
xor
mov
inc
and
arpl
int3
push
fsubl
aam
add
in
sub
mov
lcall
ret
cmp
adc
and
test
pusha
xor
test
icebp
or
aam
push
or
push
or
push
aad
lret
stc
mov
add
int3
pop
adc
xor
std
ret
push
enter
pop
cmpsb
push
dec
lock
push
adc
push
dec
lock
lods
insl
and
sbb
mov
js
push
lsl
movsl
aam
pop
imul
xchg
jno
and
lea
add
int
or
and
or
jae
and
andb
cmp
push
mov
lret
aad
mov
jno
test
into
loope
insb
mov
and
leave
and
sbb
repz
add
pop
sbb
pop
xchg
lret
mov
ret
adc
add
pop
mov
mov
inc
js
lods
loope
cmp
mov
lcall
dec
xchg
add
or
jb
jne
cmp
or
divb
aas
push
sbb
and
cld
jp
ret
pop
or
shlb
mov
popl
scas
push
push
scas
pusha
mov
dec
inc
mov
and
rorl
or
popf
or
aam
jmp
jl
lahf
mov
shll
or
sbbb
int3
das
cmp
pop
lret
inc
mov
add
push
and
add
inc
dec
push
pop
mov
jl
push
jge
pop
add
dec
adc
jb
add
ds
and
jo
pop
mov
adc
sbbl
sbb
add
sbb
scas
and
add
adc
lea
orb
aad
sbb
rorl
setns
mov
mov
addr16
mov
jae
test
push
daa
aam
pop
punpcklwd
ret
das
dec
hlt
sub
cltd
cmp
movsl
pop
hlt
lcall
icebp
xor
fucom
inc
sub
xor
mov
cld
int3
je
jne
xor
jne
inc
aam
lahf
shrb
int3
xchg
or
mov
pop
mov
cmp
orl
test
xor
movntq
xchg
sub
jmp
leave
fwait
test
gs
push
call
or
mov
add
insb
dec
js
inc
push
push
daa
test
dec
ret
int
xchg
push
in
push
in
jo
mov
test
test
or
mov
push
int3
add
nop
dec
and
xchg
mov
cmp
insb
bound
push
pop
mov
daa
mov
or
push
sbb
mov
sbb
push
movsb
rclb
push
inc
sbbl
js
pop
add
loop
addb
shll
inc
stos
popa
adc
push
mov
xor
or
imul
daa
pop
mov
pop
dec
push
xchg
test
xchg
sub
mov
or
or
xor
test
cmp
movsb
nop
test
sub
mov
xchg
sub
xchg
mov
xchg
and
out
in
cmp
adc
adc
mov
adc
sub
sbb
sbb
jo
adcl
in
das
mov
fisubs
add
inc
pop
inc
enter
ja
loope
jae
push
leave
aad
out
cmp
mov
adc
mov
inc
lea
cs
jmp
lret
shrb
scas
pusha
pop
xor
cltd
add
lcall
lea
ljmp
mov
mov
outsl
and
push
push
mov
sbb
arpl
ljmp
add
inc
push
cltd
clc
add
jb
add
inc
add
cmp
jae
cmp
ss
pop
add
adc
fistpl
sti
stos
add
ja
push
push
push
add
push
add
sbb
push
sbb
test
mov
inc
sub
dec
cmp
imul
je
add
das
andl
jmp
inc
add
cmp
jl
pop
call
xor
sub
cs
mov
mov
lcall
mov
mov
mov
push
movb
aaa
movsb
adc
add
mov
xor
mov
lcall
xor
sbb
and
fcoms
in
sbb
inc
mov
or
gs
pop
push
mov
cmpb
pop
ret
push
mov
add
add
sbb
xorb
sub
ss
sub
mov
xchg
or
inc
add
xchg
pusha
cmp
xchg
or
push
xchg
sbb
and
pushf
cmp
test
push
adc
and
push
insb
mov
push
sbb
sbb
lcall
sub
inc
and
jne
or
mov
xor
or
jno
test
push
js
hlt
inc
pop
insl
dec
dec
int
inc
or
add
pop
aas
shrl
dec
loopne
push
icebp
or
cmp
push
add
cmp
fldl
push
mov
loopne
or
dec
or
dec
rcrb
mov
pop
mov
jge
mov
jno
stos
sbb
seto
in
sbb
adc
dec
sahf
or
xchg
icebp
cmp
in
sbb
repz
add
int3
fidivl
or
rcrb
repnz
sub
xor
xlat
jbe
dec
or
lock
lock
or
push
je
push
push
lahf
loop
bound
loope
jmp
jmp
mov
fiaddl
test
cmpsl
test
lock
dec
dec
mul
jl
jge
sub
fcomps
hlt
adc
fstl
adc
and
cmp
sub
cs
out
bound
xchg
dec
and
arpl
inc
sbb
inc
xor
and
int3
sbb
xchg
mov
xor
jl
push
addr16
add
mov
out
xor
jle
fisubs
lret
mov
jmp
sub
adc
push
cmp
ret
rorb
pop
mov
push
mov
push
mov
add
and
push
mov
movb
cmpl
mov
add
push
mov
mov
adc
mov
inc
inc
imul
pop
mov
dec
adc
push
pop
and
mov
mov
jmp
xchg
xor
or
inc
dec
enter
int3
decl
inc
outsl
arpl
and
dec
fcompl
fcoms
jo
push
sti
adc
and
data16
xchg
and
add
mov
pop
add
adcb
pop
add
dec
mov
sub
and
xchg
je
adc
add
sub
popa
popf
dec
scas
jmp
scas
pushf
addb
test
push
push
push
test
sbb
adc
aam
cmpsl
or
xor
add
add
add
sbb
add
add
and
and
xor
or
xchg
add
or
add
inc
sub
cmp
inc
nop
lret
or
push
push
dec
pcmpgtb
add
test
adc
pushf
lea
xlat
and
mov
in
or
xchg
or
or
int3
shr
xor
pop
add
dec
jge
movsb
in
mov
or
fsubl
dec
imul
adc
sub
pop
incl
divl
pusha
add
pop
mov
outsb
add
lret
mov
jbe
push
push
enter
leave
inc
repnz
add
add
test
mov
cmp
jbe
or
push
cmp
sbb
test
jge
roll
sbb
pop
shlb
dec
jae
int3
adc
xchg
adc
sub
jmp
nop
pop
push
cmovae
jmp
and
setb
imul
imul
or
xchg
xor
xchg
data16
xor
xchg
data16
push
and
sub
add
xchg
xchg
or
xchg
data16
or
jl
insl
mov
sub
lcall
insb
or
mov
repnz
add
add
add
aaa
in
movsb
adc
jne
ds
lret
xchg
mov
stos
and
push
sbb
or
inc
int
add
adc
inc
and
and
mov
pop
orl
and
loope
jmp
sbb
xchg
decb
jne
orl
lret
push
push
inc
and
clc
int
and
jne
lea
filds
pushf
xor
sbb
push
or
add
add
cmp
or
cmp
cmp
adc
xor
filds
mov
into
jae
push
push
movsl
adc
jb
inc
daa
pop
mov
fldenv
inc
inc
or
pusha
push
cltd
sub
pop
sub
sub
sbb
test
nop
pop
sbb
in
push
mov
xor
sbb
aaa
mov
inc
push
sbb
mov
hlt
push
cmc
arpl
jl
test
aam
sub
rclb
inc
mov
sub
xchg
dec
movsl
cs
push
pop
push
test
and
call
and
and
add
inc
xchg
xchg
mov
sbb
adc
iret
jnp
mov
mov
push
jp
test
movsb
mov
sbb
popf
cmpsl
or
and
add
lock
push
fdivr
jns
int
insb
int3
xchg
and
jl
sbb
sbb
in
and
jns
scas
and
sbb
xchg
jno
jb
mov
sbb
or
or
add
cs
mov
push
or
add
sub
cwtl
fdivrl
aam
cmp
xor
pop
iret
scas
mov
mov
cmpsl
movsb
arpl
ja
jl
je
push
adc
add
jb
add
test
add
and
adc
sub
adc
int3
and
jl
dec
cmpsb
test
lea
cmp
push
push
bound
or
nop
pop
mov
add
shrb
out
push
scas
int
lds
cmc
add
ss
popa
mov
or
cmp
sbb
adc
das
outsb
add
and
pop
shld
rorb
adcb
icebp
xor
stos
mov
sarl
or
xchg
inc
push
push
adc
jmp
test
dec
adcb
pushf
mov
mov
pusha
and
hlt
fwait
movsl
pusha
adc
xchg
cmpb
and
lods
call
hlt
mov
loopne
out
lock
push
mov
add
push
cli
test
in
js
ds
ret
and
mov
cmp
jnp
lea
add
adc
lods
dec
imul
nop
sub
inc
and
lcall
call
or
add
out
out
xchg
push
push
inc
popa
push
inc
cld
nop
jb
dec
daa
add
test
mov
sbb
out
pop
and
pop
push
lea
test
dec
push
pavgw
das
fists
mov
or
idivl
movb
rorb
jnp
and
jne
lea
cmpsb
icebp
add
cmp
dec
dec
testl
xchg
cmp
icebp
xchg
outsb
lahf
orl
pop
int
pop
inc
dec
filds
cmpsb
sbb
loop
sub
add
push
push
add
jle
movsl
dec
in
jmp
sbb
jge
jae
push
or
decb
lsl
jmp
mov
dec
and
sub
and
sub
add
jb
divb
mov
mov
jnp
add
pop
daa
mov
cmp
and
lea
sub
push
fs
shlb
ja
xchg
add
jmp
imul
aaa
cltd
inc
outsb
pop
fs
add
add
fadd
push
pushf
jo
sbb
rolb
push
and
cmpl
adc
insb
pop
fs
sbb
call
test
mov
mov
sbb
dec
rolb
repnz
xor
andl
sub
push
xchg
or
outsb
adc
cmp
cltd
dec
push
pop
mov
test
gs
lret
inc
and
sbb
lret
adc
enter
cvttps2pi
dec
adc
cs
dec
adc
mov
adc
imul
insb
xor
fs
push
lcall
lret
fldt
dec
xor
push
sbb
js
sub
dec
inc
mov
pop
ja
xor
xchg
test
mov
mov
icebp
inc
cmp
dec
xchg
jo
cs
js
add
add
cmp
daa
push
insb
push
cld
jo
leave
adc
xchg
sbb
movsl
dec
lcall
test
out
jo
inc
and
mov
pop
xchg
ficoml
push
jl
lods
push
push
or
arpl
pop
sbb
shrb
roll
test
jle
or
adc
rorl
inc
add
dec
popf
xchg
lcall
jmp
sbb
insb
int
add
cltd
push
pop
pop
mov
pusha
sbb
push
iret
cmp
sub
movsb
xlat
xor
xor
or
jmp
and
bound
sbb
or
cmpsl
mov
pop
clc
push
fcmovnbe
fadds
addb
xor
daa
push
imul
cmp
fdivp
jne
sbb
sbb
fsubl
push
movsb
repnz
sbb
filds
xchg
pop
push
sbb
xchg
mov
jge
out
add
xchg
sbb
pusha
push
sbb
cmp
and
pop
pusha
sti
add
push
pusha
mov
aas
push
jns
in
inc
cmp
test
sub
pop
xchg
sbb
lret
jp
dec
lahf
test
lds
mov
dec
mov
adc
jo
jle
mov
push
dec
insb
push
clc
mov
and
dec
mov
outsl
rclb
incl
lahf
or
adc
les
mov
pop
xchg
outsl
sbb
jno
xchg
cld
std
push
sbb
or
cmp
dec
or
xchg
push
imul
repz
cmp
mov
mov
fisttpl
cs
stos
dec
adcb
adc
mov
xor
xor
ljmp
adc
lods
outsl
mov
mov
dec
cmp
pop
push
clc
jl
mov
loopne
popa
sub
adc
pop
xchg
push
xchg
sub
dec
jne
mov
test
in
jnp
inc
adc
and
push
or
sbb
aad
push
mov
jp
dec
lods
dec
mov
sbb
xor
xor
pop
and
add
lea
or
add
test
mov
cmp
and
inc
fnstsw
lret
js
jp
rorb
pop
or
or
pop
dec
add
fdivrs
xorl
sbb
sub
test
pusha
adc
jle
call
dec
jl
jne
ljmp
in
mov
je
or
adc
jns
mov
test
andb
jmp
ret
adc
xchg
xchg
cmpsl
inc
xor
sub
mov
xor
add
cmp
inc
mov
sub
idivb
test
test
pop
jge
mov
cmpsb
cmp
mov
jp
or
fisttpl
hlt
dec
lahf
movsl
or
cmp
jae
pop
ds
scas
adcb
add
sbbl
add
rcrl
xor
adc
das
push
aas
add
cmpsb
push
mov
push
clc
mov
arpl
mov
jmp
add
lea
inc
lcall
rolb
xchg
js
adc
cmc
xchg
xor
xchg
mov
adc
inc
mov
jle
test
dec
push
add
jns
rolb
imul
pop
push
push
and
add
sub
dec
arpl
andl
adc
shlb
nop
push
inc
mov
add
push
out
mov
lds
and
lods
movsb
pop
push
ss
add
fldl2t
aaa
mov
js
test
cmpsb
push
push
fs
adc
call
xchg
inc
mov
fidivs
stos
enter
sbb
mov
cmp
push
lcall
inc
ljmp
call
jno
aaa
add
or
push
adc
lds
imul
xor
test
push
add
add
lret
adc
mov
inc
xchg
or
sahf
pop
cwtl
add
mov
xor
loop
sbb
sub
dec
push
xor
iret
cmp
xchg
lds
xchg
adc
mov
add
sub
pusha
lcall
pusha
pop
icebp
add
shll
push
dec
push
imul
pop
fnstcw
into
loop
ja
xor
cmp
adc
or
xchg
add
and
ret
inc
loop
psadbw
xchg
or
shrl
inc
je
mov
stos
adc
cli
push
xchg
mov
js
and
push
adc
incl
dec
add
xchg
clc
lret
mov
or
popa
adc
pushf
cmp
sub
int3
mov
imul
add
jo
sub
addr16
mov
addr16
add
outsb
test
mov
adc
enter
cmp
adc
dec
mov
repnz
push
or
nop
cmp
lcall
and
je
mov
loope
lcall
inc
jg
and
dec
cmpsl
add
inc
inc
inc
in
push
in
adc
push
movsb
inc
pop
dec
push
adc
sbb
invlpg
jnp
inc
lcall
mov
iret
gs
and
sub
pop
jmp
add
dec
mov
dec
gs
insb
sbb
inc
leave
test
dec
xchg
pop
jnp
fists
dec
mov
pop
dec
jb
nop
inc
popf
je
jo
popf
pop
dec
fstpt
add
and
adc
shl
ret
fistl
xor
cmc
fs
pusha
xchg
jl
outsb
xchg
fildl
push
out
jnp
mov
js
or
sbb
or
dec
or
movsb
mov
pushf
or
clc
aas
jg
je
and
repnz
sub
jl
gs
cvttpd2pi
mov
xchg
mov
mov
addl
and
lahf
test
and
sub
mull
jmp
sahf
and
popf
lret
wrmsr
mov
shrl
push
jl
xchg
xlat
xlat
inc
dec
cmp
add
cmpsl
mov
fs
and
je
cld
xor
ret
aaa
and
fs
roll
ret
sub
add
bound
int
xchg
sbb
out
mov
lea
or
mov
push
or
inc
inc
pop
pop
or
iret
add
imul
inc
xor
jno
mov
cmp
push
jge
bound
negb
fldcw
jno
outsb
xchg
mov
mov
pop
xchg
adc
ljmp
add
sub
sbb
ss
fbld
ds
pop
insb
add
jb
lea
push
xor
push
or
rorl
inc
addr16
inc
pop
sbb
lret
rorl
add
insb
and
test
loopne
ret
das
add
js
loope
pusha
sbb
add
cwtl
push
xor
jge
cmpl
pusha
push
jns
insb
mov
mov
or
jo
cwtl
shrb
pop
or
sub
xor
cs
or
pop
pop
add
and
ljmp
dec
ret
mov
imulb
pop
cmp
and
lret
push
pop
or
and
inc
push
pop
xchg
aad
adc
inc
and
inc
mov
jo
inc
lock
dec
push
xchg
xchg
inc
and
subb
xor
scas
jno
push
cltd
add
mov
or
mov
push
pop
test
test
shl
inc
stos
test
fs
push
add
popf
fs
addl
add
test
shrl
adc
daa
test
inc
xchg
or
cmp
mov
cmp
jbe
arpl
iret
inc
pop
and
xor
lahf
fidivl
aas
mov
and
push
sub
scas
call
pushf
push
pop
mov
incl
lock
push
fcomi
xchg
inc
mov
fldt
sbb
shlb
and
mov
std
mov
sbb
xor
sub
push
push
add
add
outsb
ljmp
cltd
xchg
mov
or
cltd
test
pop
push
sub
xchg
fstps
lcall
ret
cwtl
sbb
ret
lahf
stc
push
aas
je
sbb
adc
lock
push
sbbl
subl
cmc
or
test
shll
mov
sbb
sbbl
and
or
insb
sub
arpl
pop
or
jo
dec
push
pop
xor
fs
lret
mov
dec
popa
cmp
xor
and
ds
dec
or
push
mov
fisttpl
and
push
scas
add
xor
jnp
popa
and
loope
in
stc
cmp
loop
inc
sbb
rorl
jnp
rcrb
push
loope
out
sub
test
push
add
or
mov
and
cmpb
pushl
or
inc
cmp
insl
and
pushf
push
je
mov
push
push
pop
cli
mov
mov
pop
xor
mov
outsl
repz
push
dec
pop
xchg
cmp
push
pushf
push
sbb
mov
mov
or
add
daa
sub
dec
cmpl
push
xor
adc
xor
add
dec
mov
and
add
hlt
es
pmaxub
fisttpl
dec
mov
mov
push
jb
clc
inc
loope
dec
in
sbb
popf
lcall
push
jmp
bound
sub
cmp
jae
mov
nop
sbb
outsl
popa
cltd
sbb
and
lock
cmpb
sbbb
xchg
push
add
insb
jg
shlb
mov
xchg
sbb
push
cmp
mov
or
push
pop
std
adc
pop
push
adc
push
js
cli
filds
and
pop
pop
add
call
inc
add
xor
scas
inc
mov
xor
out
pop
mov
fucomi
add
sbb
sub
fwait
sbb
stos
fs
popa
xchg
jmp
imul
sbb
jne
sub
xor
dec
lock
inc
loop
sbb
in
popa
sub
lret
sbb
inc
test
or
cmp
jne
cmp
adc
inc
inc
push
push
sbb
cmp
pop
push
jns
adc
pop
outsl
push
and
sub
sub
outsl
and
sbb
pop
or
enter
dec
sbb
jo
out
jle
rolb
add
pusha
pushf
setge
cmpsb
aas
data16
mov
mov
fs
shrb
pop
adc
adc
ss
loop
adc
sti
jnp
add
mov
cmp
push
push
push
rolb
lret
repnz
mov
and
push
loop
es
dec
inc
or
add
sbb
jb
jno
loopne
xor
jmp
test
dec
mov
lea
jbe
jle
fisttps
inc
sbb
add
lret
adc
leave
push
sbb
xchg
jae
mov
and
and
push
xchg
ljmp
mov
adc
add
pop
sbb
push
push
cmp
mov
mov
add
mov
add
imul
dec
out
mov
adc
mov
push
das
adc
outsb
xchg
mov
and
pop
les
cwtl
dec
add
jg
push
jecxz
mov
and
sub
jmp
popl
outsb
in
in
push
jo
pop
cmp
dec
push
loopne
aaa
jno
push
fsubrs
xor
push
cmp
jae
jnp
cmp
inc
aaa
lea
lret
ja
icebp
or
addl
cwtl
jns
mov
test
js
push
nop
add
pop
push
or
in
or
or
add
mov
jmp
pop
lcall
adc
ds
jne
insl
add
adc
add
add
iret
js
mov
add
add
movl
mov
cltd
inc
rclb
inc
dec
sub
test
add
jns
sub
or
adc
ss
nop
sub
stc
ss
mov
inc
cli
cwtl
rorb
push
and
jp
cmp
push
nop
orl
sbb
mov
pop
and
mov
push
hlt
dec
dec
outsb
jle
dec
or
jge
pop
push
imul
push
push
pop
sbb
mov
nop
out
push
sub
aaa
jb
in
mov
js
cmp
je
push
pop
push
push
daa
or
inc
sbb
ljmp
xor
jbe
push
pop
add
jecxz
in
test
das
sub
cmp
pop
lods
mov
xchg
pop
or
and
shrb
lock
ret
cmp
inc
js
ret
or
ret
and
lods
sbb
cmpsb
clc
call
daa
cmp
adcb
add
loop
sub
mov
mov
and
rolb
mov
pop
push
cwtl
test
xchg
sbb
call
aam
subb
bound
icebp
mov
and
adc
or
test
in
bound
pop
inc
jne
cmc
hlt
jle
push
mov
sub
seta
mov
repnz
fsts
mov
or
adc
sbb
mov
sbb
add
pop
pop
or
pop
sbb
or
jbe
sbb
clc
sbb
in
pop
push
int
xor
add
or
push
push
mov
enter
pop
movsl
add
add
shl
stc
cwtl
les
leave
inc
push
and
push
xchg
or
adc
and
add
sbb
sub
int
add
or
fisttpll
lea
jno
add
int3
cmp
outsb
sub
pop
sub
mov
xor
xor
dec
mov
lret
nop
outsb
adcb
xor
pop
add
xchg
pop
cmp
add
sub
fnsave
push
js
or
push
pop
jl
andb
xchg
negl
and
mov
es
arpl
and
clts
and
xchg
sbbb
cmp
inc
loopne
test
dec
loop
mov
shlb
adc
fstl
inc
push
test
mov
push
push
sub
sub
pop
lods
cld
inc
leave
pop
push
sbb
push
dec
rorl
or
jl
sub
mov
sbb
js
lcall
or
movsb
sbb
insb
inc
insl
and
fs
ret
push
and
sub
pop
add
pop
dec
dec
push
or
shlb
int
sub
adc
and
mov
add
sbb
ss
xchg
jmp
movb
inc
call
cmp
xchg
pop
insl
inc
adc
and
dec
mov
and
mov
subb
test
aas
mov
mov
xor
add
sbbb
or
pop
fs
sbb
cmp
adcl
mov
seto
mov
xchg
cmp
imul
adc
mov
push
add
stos
es
cmc
jmp
add
mov
push
scas
fst
aam
sub
push
mov
and
xchg
push
dec
or
clc
add
xor
pop
cld
cmp
xor
add
jae
mov
mov
sbb
ret
aad
jb
lds
mov
sbb
mov
push
mov
jbe
sbb
inc
stc
lret
pop
adc
cmp
pop
in
mov
mov
or
xchg
mov
jg
dec
jmp
sub
call
lea
xchg
mov
add
mov
mov
cmpl
mov
inc
imul
xchg
cmp
movsl
movsl
mov
orb
insl
addb
pusha
cmp
or
adc
dec
cmp
jmp
pop
adc
mov
pusha
cmp
pop
insl
jecxz
xor
cmp
mov
paddq
add
nop
push
jns
or
adc
std
imull
dec
push
sub
cmp
mov
add
pop
stos
nop
lret
adc
test
jnp
dec
es
out
sti
dec
psubw
inc
inc
ret
adc
push
aad
fildll
inc
inc
je
cmp
inc
dec
mov
xor
and
lods
mov
test
xchg
xor
js
lock
popa
sub
push
incl
icebp
xchg
mov
push
lret
shrb
fistps
fdivr
mov
push
icebp
add
in
ret
inc
shlb
adc
lods
push
sahf
orb
cmpsb
push
adc
mov
sbb
xor
mov
sub
add
sbb
aad
and
or
add
cmpsb
sub
test
sbb
fcmovnu
loopne
shrb
sub
je
push
jne
lea
xchg
dec
rcll
add
add
in
fs
mov
jg
dec
pop
iret
mov
pop
sbb
rclb
push
push
mov
pop
mov
insb
orl
lock
mov
icebp
inc
mov
pop
popa
and
popa
jne
jne
mov
or
jmp
push
and
push
cmp
inc
mov
popf
add
sbb
or
dec
sbb
and
and
pop
pop
jno
nop
lret
sbb
and
xor
add
xchg
sbb
jmp
add
rolb
and
adc
jo
mov
mov
xchg
jno
insb
mov
pusha
pop
dec
loop
jo
sbb
add
addl
mov
lret
sbb
scas
popa
sbb
xor
mov
adc
pop
dec
cwtl
dec
lahf
and
subb
stc
call
push
sbb
mov
cwtl
pop
add
cmpb
popf
cmp
inc
and
jp
fs
sub
mov
sub
ss
and
push
aaa
mov
or
mov
dec
mov
mov
or
sti
or
sbb
jno
ret
inc
addr16
and
xorb
adc
add
psubsb
inc
dec
cli
rorb
roll
mov
int3
pop
scas
xorl
dec
sbb
test
movsl
inc
pop
and
push
cld
pop
hlt
jo
and
sub
add
dec
jo
rcrb
inc
or
mov
shrl
pop
inc
mov
in
sub
push
imul
push
sbb
insb
dec
xorb
mov
ss
fcomip
dec
push
sbb
lea
ja
push
push
pusha
mov
adcb
ljmp
push
mov
cmp
imul
mov
insl
dec
cmp
xor
pop
cmp
pop
in
sbbl
jl
adc
mov
movsb
push
out
imul
add
push
pop
ss
pop
xor
rcll
in
sub
nop
pop
push
push
test
ret
sbb
or
sub
push
push
fsubl
xchg
and
enter
pusha
dec
inc
push
push
in
adc
or
xchg
push
pop
cmp
xchg
and
and
cmpsb
loope
mov
test
mov
xlat
jo
adc
movl
arpl
adc
sbb
adcb
jbe
and
testb
je
sbb
fs
and
mov
add
rcr
mov
orb
mov
push
push
arpl
and
jno
and
enter
inc
daa
insl
xchg
pop
inc
imul
stos
and
in
cmpl
and
sub
xchg
cmp
and
add
shlb
sbb
movl
adcl
or
pop
lcall
sbb
scas
adc
adc
sub
movsl
add
dec
pop
ficomps
das
sub
add
sbb
dec
mov
adc
aad
sub
sub
sub
orl
cmp
jne
xchg
push
push
lret
enter
push
inc
push
cmp
dec
push
sub
adc
push
push
sub
xor
inc
cs
data16
sub
lret
les
and
ret
insb
cmp
insl
and
xor
pusha
sub
xor
sub
pop
iret
push
nop
add
sub
add
or
push
or
adc
adc
and
jg
mov
add
icebp
adc
jbe
in
xlat
fdivrl
cmp
mov
pop
push
aaa
cmp
or
sbb
test
je
add
inc
push
xchg
dec
adc
pop
jno
shrb
push
es
rcrl
out
cmpsl
push
orb
cli
sbb
push
jns
adc
orb
push
test
lods
dec
insl
add
mov
adc
add
xor
daa
pop
and
jbe
aas
call
lea
sbb
mov
push
loopne
adc
push
lea
cmp
sbb
ljmp
adcb
inc
nop
xchg
jnp
and
test
xchg
cmpsb
jle
lock
mov
adc
mov
sarb
cmp
je
js
sub
adc
and
xchg
xlat
in
adc
adc
sub
sbb
mov
and
mov
adc
or
movb
and
push
popa
aam
cmc
out
and
popa
or
add
addr16
rolb
inc
push
sub
adc
sbb
popa
fistl
pop
or
inc
push
adc
add
xor
add
or
sub
stos
adc
adc
roll
dec
xchg
add
adc
dec
subb
dec
enter
clc
push
mov
adc
lsl
orb
subl
adc
add
cmp
pop
jb
pop
inc
sub
sub
and
jmp
test
mov
fsubrs
mov
xor
mov
arpl
dec
sbb
loope
xchg
int
dec
mov
test
or
or
scas
push
adc
xor
adc
mov
and
jno
cmpsl
adc
push
and
and
pushf
push
and
sbb
sub
leave
add
jge
pop
xchg
and
push
scas
xor
adc
test
orb
adc
lret
push
and
inc
mov
add
push
xor
inc
mov
sub
imul
cmp
cmpsl
and
lods
movsl
xor
jbe
out
cs
rorb
add
imul
ja
in
insl
sbb
les
adc
inc
push
pushf
push
sbb
jns
out
test
or
lds
es
lret
push
push
mov
fnstenv
xchg
adc
push
xor
leave
add
xor
faddl
mov
push
shrb
pop
xor
stc
cmc
in
push
jo
push
cmp
mov
in
push
adc
push
sub
push
nop
or
pusha
push
ret
add
adc
in
insb
lea
cld
xchg
ja
push
sub
push
cmpb
insb
add
sbb
cmpsl
cld
pop
or
xchg
or
test
test
in
test
leave
jae
ret
shll
call
dec
push
inc
pop
leave
jae
xor
xor
mov
dec
sbb
aam
adc
add
add
cmp
lahf
cwtl
js
pusha
or
fld
adc
push
shlb
mov
mov
add
inc
or
in
inc
add
jo
sbb
mov
cmp
aam
adc
or
mov
outsl
pop
mov
test
dec
sbb
add
sub
cs
movsl
dec
arpl
cmp
xorl
fnstenv
out
insl
cmp
mov
xor
sub
femms
mov
pop
add
push
or
xchg
inc
pop
and
pusha
push
pop
push
add
test
adc
shlb
adc
add
xlat
sbb
mov
enter
add
sbb
lret
in
push
mov
faddl
or
dec
aas
mov
clc
out
loopne
pop
xor
or
repnz
cmpsl
and
nop
pusha
xchg
loopne
test
int
fdivr
xchg
and
outsl
into
jmp
pop
add
addb
insl
xchg
aad
movsl
pop
inc
stos
xchg
cwtl
push
ret
in
sbb
sub
add
cmp
pop
mov
cmp
je
repnz
mov
mov
or
add
addb
xor
mov
nop
xchg
or
pop
inc
adc
leave
pop
cmp
sub
mov
pop
dec
adc
sahf
notl
or
mov
loopne
mov
xchg
and
mov
sarl
or
test
hlt
push
push
adc
dec
test
xchg
rclb
sub
add
adc
push
adc
push
mov
stos
test
xchg
rcrb
pop
ljmp
int3
push
enter
sbb
or
addr16
or
cmp
leave
sub
push
add
jae
sub
and
xchg
push
enter
jo
xchg
in
or
adc
dec
testl
sub
push
adc
vmovlpd
movsl
rolb
push
dec
adc
cltd
es
dec
mov
and
lods
cmc
mov
and
cmp
xchg
mov
in
push
mov
call
cmpsl
movsl
sbb
leave
sbbl
mov
inc
xor
enter
sbb
cwtl
sbb
inc
dec
push
in
xchg
sbb
repz
push
in
sbb
push
cmp
inc
add
mov
push
inc
add
xchg
xchg
out
mov
and
and
and
inc
and
cltd
es
inc
sahf
or
add
sub
in
sub
testl
push
jb
mov
or
mov
cmp
cmp
and
cltd
dec
pop
or
sbb
adc
out
jmp
das
aam
xchg
adc
call
push
mov
or
sbb
dec
and
pusha
add
cmp
and
mov
rol
jge
cs
cmpsb
movsl
pop
add
and
imul
mov
xor
loope
push
push
xchg
pop
inc
inc
bound
sub
mov
xor
xchg
nop
jmp
sbb
sbbb
pop
xchg
xchg
sub
add
add
push
sbb
inc
stc
adc
cmpsb
cmp
sub
sbb
xchg
ret
cmc
dec
cmp
mov
jno
ja
jne
daa
or
mov
jl
in
movsb
imul
aaa
test
hlt
inc
and
leave
and
cld
inc
fsubs
scas
repnz
sbb
bound
mov
add
repz
out
mov
pop
sbb
adc
push
or
inc
imul
inc
bound
adc
aas
jmp
out
push
out
adc
and
ret
nop
or
or
fs
xchg
test
hlt
stos
addr16
jae
inc
dec
movl
rcrb
inc
nop
addr16
mov
sahf
or
lods
ds
stos
ss
dec
cmp
dec
cmp
enter
cmp
push
cmp
xchg
sbb
jne
in
dec
push
or
inc
jge
adc
lea
std
push
adc
repnz
xchg
mov
mov
jmp
or
or
push
dec
xor
nop
mov
jg
push
sub
mov
mov
push
jb
xchg
pop
mov
lret
andl
xchg
jne
add
fs
idivl
mov
add
and
jo
lock
xor
add
pop
jb
enter
or
clc
and
jb
xor
xor
test
cmp
mov
rorl
mov
push
and
adc
mov
aas
sub
jl
sbb
fdivrs
daa
pop
push
in
mov
fcomip
cmp
jecxz
loop
push
pop
jo
sti
push
pop
add
xchg
sbb
rcll
push
ljmp
mov
stc
jl
cmp
adc
adc
push
lods
lods
nop
mov
or
adc
xor
xor
and
and
nop
pop
dec
dec
rcrl
or
fsub
and
pop
mov
push
and
push
and
add
and
in
fmull
pusha
push
lret
dec
add
nop
pop
cmpb
mov
xchg
add
ds
fs
lock
add
ret
mov
sub
sub
and
push
xor
add
fmuls
inc
dec
cmpsb
in
and
or
cmp
mov
call
dec
dec
dec
or
mov
inc
dec
dec
push
ret
adc
shlb
xchg
sbb
dec
fstp
inc
mov
lret
xchg
xlat
mov
push
dec
dec
mov
or
lds
cli
sbb
loopne
ret
mov
stc
and
jp
sub
or
and
pop
dec
sub
dec
cmp
and
adc
mov
cmp
and
insl
mov
mov
int
push
sbb
cmp
mov
ret
inc
xchg
sbb
dec
sub
add
pop
bound
nop
or
cmp
ret
sub
push
push
mov
sub
push
mov
loopne
mov
xchg
push
mov
dec
lea
cmp
test
jle
in
movl
fisubrl
and
xchg
push
ficoms
adc
push
call
cltd
add
adc
xor
adc
mov
addl
mov
pop
mov
sub
xor
or
add
push
inc
or
in
pop
or
push
mov
or
fs
lea
cmp
jae
jae
xor
push
sub
test
fimuls
pop
push
insb
imul
or
lret
lret
jb
push
jo
add
inc
push
ja
lea
xor
pop
xchg
sahf
mov
popa
in
push
and
test
jne
cmpsl
imul
xor
cli
mov
mov
and
inc
mov
sbb
insb
push
das
js
cmp
adc
adc
mov
je
aad
xor
pusha
inc
pop
sbbl
adc
adc
dec
xchg
add
push
daa
jo
mov
xor
rorb
dec
enter
sub
int3
aad
movb
dec
cmp
leave
jae
xor
xchg
add
popa
xchg
cmp
cmp
dec
es
je
xchg
dec
popa
push
inc
ss
pop
pop
cmp
add
xor
ljmp
push
or
push
ffreep
pusha
mov
mov
pop
sub
jo
int
or
push
xor
add
and
lods
or
pop
inc
ret
adc
mov
pop
push
push
cmp
jae
call
jns
ret
mov
fidivs
mov
pop
cmp
jae
mov
add
loope
sti
fstl
inc
jne
mov
pushf
push
push
aas
lcall
stos
jmp
stc
inc
leave
aad
out
insb
std
nop
shlb
pop
fistpl
test
decb
dec
mov
sbb
sub
cli
test
fidivs
add
cltd
cmc
adc
push
xor
jl
inc
cmp
pop
bound
sti
xchg
or
jle
jmp
push
adc
mov
inc
sbb
incb
push
push
mov
pop
rcrb
lcall
lret
or
inc
push
aas
ret
xlat
or
scas
or
loope
push
cs
mov
xchg
jl
push
push
jmp
mov
sbb
inc
es
sbb
js
pop
fisttps
ret
add
or
sub
and
es
inc
jo
imul
or
mov
push
add
xor
lret
cmp
push
scas
filds
dec
inc
in
shrb
in
xchg
and
and
cmpsl
mov
aaa
les
cmp
pop
arpl
push
lods
test
adc
dec
cmp
and
add
pop
movsb
adc
bound
jne
sbb
jmp
sbb
and
push
mov
lods
jl
movsb
push
jnp
and
add
or
add
loope
mov
push
mull
pop
sub
or
or
xor
imul
sub
xor
cmpsb
and
notl
xchg
sub
int
sub
xor
push
ds
cmp
cwtl
call
xor
inc
lds
cs
in
or
dec
jns
push
sub
rol
das
mov
or
add
push
test
mov
pop
sub
or
xor
adc
jge
nop
pop
and
mov
inc
enter
sub
add
xor
dec
lds
jo
jg
addb
and
adc
lahf
bound
add
lock
insb
sub
adc
and
lcall
sub
and
insb
mov
push
fcoml
pop
add
xchg
loope
inc
adc
and
mov
adc
popa
xchg
fists
std
or
mov
and
imul
jg
mov
dec
jle
cmp
jae
mov
add
inc
cmpsb
lods
or
push
jno
fcompl
sbb
std
jl
aad
pop
cltd
adc
pushf
outsl
sar
std
pushl
addb
xor
jo
in
ja
cld
std
add
xor
lahf
sarb
pop
sbb
inc
add
dec
ss
cmp
push
and
stc
push
das
test
ror
push
fisubrs
inc
mov
pop
push
xchg
or
sbb
inc
mov
mov
sbb
add
dec
sub
mov
sub
mov
lahf
insb
addl
test
lea
inc
popa
add
dec
cmp
add
mov
sbb
test
add
add
inc
add
shll
adc
pop
push
imul
xor
insb
pop
xchg
ss
dec
cmp
hlt
and
adc
pop
mov
or
loopne
push
lds
or
pop
in
adc
lock
cld
mov
sbb
mov
inc
jo
test
jb
test
out
pop
lods
mov
inc
cmp
jae
pop
or
insb
cmp
pop
mov
jmp
adc
add
sbb
inc
adc
lods
mov
mov
movsl
lods
cmp
cs
jnp
cmp
push
insb
push
xchg
ja
insb
mov
push
or
add
inc
push
ss
adc
inc
add
outsb
mov
cmp
addl
adc
inc
jmp
roll
leave
dec
addb
inc
mov
pop
or
sbb
mov
dec
mov
in
jle
mov
lea
add
push
shl
test
jle
lea
int3
dec
dec
aaa
jb
xchg
dec
rorl
lea
int3
adc
test
mov
test
push
popf
notl
ret
and
jmp
fcompl
adc
and
sbb
xor
scas
test
lods
push
mov
aas
mov
pop
repz
jb
mov
mov
sti
cmp
dec
mov
jne
sbb
push
xchg
mov
popf
xchg
jne
or
fdivrs
sbb
jge
mov
shll
pop
call
pushf
adc
or
fsts
sbb
les
out
add
andl
adc
add
adc
arpl
sbb
xor
xchg
dec
or
popf
scas
pand
lds
test
sub
adc
movb
cmp
or
cmp
jne
lock
jbe
push
pop
je
pop
add
in
shlb
push
cmp
pop
or
test
inc
fdivrs
ret
xchg
push
push
sbb
insb
sbb
push
fmuls
shrb
mov
pop
ljmp
js
sub
stc
testl
mov
or
adc
je
cmp
je
cmp
sub
decb
je
push
jnp
jb
imul
pop
dec
lock
fwait
mov
mov
lea
lock
mov
mov
loope
xchg
cmc
push
add
push
ret
sub
mov
and
dec
inc
hlt
inc
and
mov
shr
imul
push
adc
sub
cmpb
push
push
mov
ret
add
icebp
cmp
je
adc
and
cmovno
shll
nop
pop
dec
pop
inc
xorb
pushf
add
sbb
cmc
insl
jle
adc
add
cmp
adc
mov
and
testl
push
movsb
add
add
inc
xchg
cmpsb
dec
orl
add
mov
pop
push
stos
or
or
xchg
push
add
das
popa
pop
das
imul
test
add
push
or
xor
das
cmpb
jmp
mov
shll
mov
mov
imul
lds
or
lahf
and
cmp
adc
and
pop
sub
sub
push
shll
adc
icebp
push
mov
jnp
rolb
adc
cmpsb
mov
mov
mov
in
and
xchg
adc
xchg
data16
test
jge
pcmpgtw
sub
or
pop
and
push
dec
les
mov
push
or
fwait
lret
sbb
cld
psubb
cld
rclb
add
arpl
les
mov
dec
adc
and
andb
xor
enter
xchg
scas
xor
cld
ret
pop
test
enter
fdivs
out
pop
pop
nop
vmread
mov
adc
mov
enter
inc
les
sub
and
and
out
sbbb
inc
arpl
push
mov
dec
xor
push
jno
dec
lock
aad
sbb
cltd
add
push
adc
push
adc
shrb
adc
mov
pop
push
ja
fmuls
rorb
sahf
xor
mov
add
adc
rorl
inc
xchg
pop
add
loopne
shrl
ret
and
xchg
jp
sub
imul
inc
sbb
sarb
clc
dec
and
adc
test
inc
dec
pop
inc
mov
or
outsb
push
call
jb
ficoml
mov
or
mov
mov
bound
mov
mov
xor
fwait
call
outsl
sub
add
inc
rclb
sub
pop
mov
dec
rorl
nop
sub
aad
gs
int
js
add
push
jp
mov
into
ret
add
jns
inc
pop
fimull
add
jns
dec
jge
stc
mov
ljmp
sbb
paddsw
pop
sbb
or
in
cmpsb
mov
and
add
mov
push
mov
dec
nop
and
inc
cmp
shr
cs
in
call
sti
and
mov
shlb
jne
mov
sub
cmc
push
es
jne
mov
xchg
lea
fld
fldenv
mov
pop
outsl
and
mov
movsl
inc
mov
push
pop
mov
mov
mov
or
mov
dec
adcl
call
sub
aad
cmpsl
es
sbb
mov
sahf
outsb
pusha
pop
stos
push
mov
fbld
pop
xor
dec
enter
sub
adc
lret
or
adc
push
loop
scas
sbb
pop
add
jbe
cmp
inc
popf
xor
mov
mov
dec
cmp
push
mov
xor
sub
or
mov
lahf
stos
popa
cmp
push
cmp
inc
scas
es
xor
arpl
outsl
dec
or
xor
mov
xor
sub
xchg
jo
push
imul
ret
pop
stos
insb
inc
rclb
xor
push
in
bound
push
cmpsb
cmp
hlt
sub
movl
jo
fildll
fisttps
and
pop
lea
es
add
and
add
push
jo
jnp
popf
bound
and
lret
add
mov
lods
and
mov
mov
cmpsl
mov
test
loope
stc
or
cli
es
xor
testb
lahf
jl
xchg
out
pop
pushf
and
push
sub
cmp
sbb
sahf
push
addb
pusha
sahf
add
add
sub
add
add
or
mov
xor
cmp
lahf
adc
rorl
adc
sbb
inc
mov
pop
and
sub
jle
push
subb
sar
push
inc
adc
fcoms
stc
push
outsb
add
movsl
shrl
stc
push
pop
xchg
imul
inc
es
das
add
and
cmpb
lock
adc
jge
jne
cmp
jne
dec
mov
inc
push
sbb
insl
cltd
lods
add
push
pop
xchg
push
inc
push
cs
add
push
call
mov
mov
call
add
inc
add
icebp
add
hlt
subb
imul
loopne
fisubrl
sub
push
mov
mov
sub
push
sub
pop
lds
jnp
and
pop
dec
sbb
push
cs
imul
out
addr16
test
push
jo
mov
inc
stos
lds
or
faddl
xor
adc
fimull
push
mov
nop
cmp
inc
pusha
mov
adc
inc
jmp
push
cmp
adc
adc
push
sbb
or
mov
adc
out
pop
sub
sbb
stc
bound
out
mov
stos
cli
or
int
push
cmpl
add
movsl
and
push
ss
mov
pop
cmpl
mov
ss
decb
sub
push
sub
push
push
push
mov
aam
mull
push
inc
add
push
mov
adc
mov
and
loopne
jo
mov
mov
push
xchg
in
xor
push
test
shr
ja
or
sbb
adc
adc
out
int3
jmp
cmp
inc
add
inc
rorb
push
stos
test
inc
dec
jl
jecxz
xor
add
jb
jmp
scas
push
or
inc
dec
add
adc
jge
test
loopne
xor
adc
jae
and
rorl
mov
xchg
sub
adc
mov
sub
push
xchg
push
cmp
mov
arpl
mov
add
adc
inc
cmp
cmp
sti
jb
cmp
pop
sbbb
push
mov
adc
shrl
inc
jne
lcall
jb
or
sbb
jl
push
and
rol
push
sub
or
add
xor
mov
cmp
xlat
mov
lock
adc
adc
sbb
dec
adc
es
imul
nop
add
mov
sub
clc
adc
xor
in
mov
mov
mov
or
sarb
inc
xchg
mov
pop
or
int3
lods
pop
sub
das
and
pop
push
jg
lods
lret
popa
adc
mov
and
pop
in
or
inc
dec
dec
push
gs
or
mov
dec
push
enter
mov
add
sbb
mov
sahf
test
sbb
push
pop
and
sbb
hlt
lds
cmp
in
je
scas
test
adc
push
sbb
sti
xchg
orb
ja
cmpsl
insl
rorb
bound
addr16
add
mov
sti
push
ret
divl
add
dec
mov
or
sub
cmp
jecxz
adc
movl
aad
mov
and
inc
rorb
adc
xchg
push
adc
add
cmpsl
lock
pop
mov
jmp
push
add
jo
jnp
mov
in
or
inc
dec
mov
adc
mov
add
pop
xchg
inc
xor
imul
fdivs
xor
jg
pop
pop
add
dec
movsl
mov
rcrl
dec
pop
adc
jle
cmpb
cwtl
fldenv
cmp
jo
js
pop
pop
leave
and
pop
je
xor
and
leave
outsb
or
mov
pop
inc
dec
hlt
sahf
inc
mov
mov
ret
inc
cmp
and
or
and
and
int3
and
mov
neg
add
mov
add
loope
xchg
xor
mov
mov
mov
pushf
add
or
lret
bswap
sub
push
or
xorb
push
push
mov
daa
pop
mov
lds
adc
xor
ja
or
xor
jnp
and
bound
cmp
and
or
notb
pop
or
inc
sub
and
lcall
leave
test
popa
test
fmulp
movb
or
sbb
jns
cli
in
adc
adc
add
lcall
lock
xorb
iret
clc
sub
push
mov
or
xor
lret
push
inc
xlat
adc
mov
pop
jecxz
adc
or
mov
aaa
subl
add
sbb
pop
dec
andl
test
into
push
subl
adc
lea
jl
decl
cmp
jb
sub
jmp
push
dec
movzwl
dec
pop
cmpl
dec
std
adc
ret
lret
ja
pop
add
cmp
add
fisubs
or
pop
xchg
sbb
inc
and
sub
inc
call
add
sub
popa
nop
loopne
cmp
in
add
aad
cmp
dec
push
push
push
roll
inc
cmp
lahf
jmp
fstps
push
mov
cli
inc
ret
or
jle
push
adcb
jne
or
sub
cmp
mov
in
iret
test
mov
add
add
sbb
push
adc
sbb
jecxz
add
sub
mov
xchg
jb
cmp
test
adc
push
inc
lds
inc
mov
fcomps
insl
add
push
fbld
mov
push
pop
aas
lret
sub
push
push
push
and
and
push
and
or
dec
sbb
add
and
mov
cmp
rorb
xor
cmp
mov
mov
sbbb
xchg
rcrb
sbb
sbb
jns
mov
movsl
push
xor
pop
lds
inc
push
or
leave
sbb
mov
ds
xchg
adc
rolb
ja
insb
dec
movsl
je
cmp
mov
loope
sub
mov
add
mov
sbb
rolb
and
push
ss
push
mov
inc
inc
cmp
and
cltd
sub
xor
or
cmp
lds
lea
lcall
add
push
adc
push
xor
mov
dec
outsl
mov
ret
add
cmp
xor
and
movsb
mov
repnz
add
mov
push
sbb
lret
fistl
inc
cmp
xor
cmp
mov
loopne
adc
mov
add
iret
cmp
ret
ret
pop
ret
scas
in
add
mov
loop
stos
sub
mov
jg
adc
xchg
lret
shr
and
add
and
inc
sbbl
imul
cmpsb
sbb
mov
jnp
sub
push
sub
jbe
adc
je
adc
sbb
fstpl
inc
fwait
sbb
adc
jle
add
push
add
add
mov
and
aas
adc
pop
add
push
mov
cmp
lcall
inc
adcl
jo
xor
pop
push
jecxz
mov
dec
out
addb
mov
and
adc
push
inc
inc
push
xor
cmp
xchg
cmp
push
rep
adc
dec
and
or
nop
push
inc
insl
xlat
mov
dec
hlt
jo
lea
sub
sub
add
repz
cmpb
jne
sbb
cmp
xor
and
fwait
add
xor
add
dec
adc
cltd
outsl
in
xchg
push
stos
lds
icebp
push
mov
sbb
xor
pushf
and
add
sbb
cwtl
inc
bound
or
scas
dec
sbbb
xor
jae
push
leave
leave
push
lret
adc
sbbl
inc
xorb
pop
cmp
mov
imul
xchg
test
xchg
push
sbb
push
sub
push
push
outsl
xor
and
dec
es
pushf
mov
sub
sbb
dec
ss
in
xor
push
inc
in
cmpsl
gs
insb
jnp
mov
test
add
scas
sbb
add
push
push
xchg
popf
push
lock
inc
add
dec
jbe
dec
dec
stos
adc
xchg
adc
mov
dec
subb
mov
aad
pop
pop
jle
mov
push
dec
ret
add
sbb
jg
push
adc
repz
add
lods
das
sub
inc
es
cli
add
lahf
cmp
push
insb
cmp
leave
push
lods
mov
ret
push
cmpsb
pop
push
inc
les
pop
dec
sub
jne
and
iret
add
lahf
rorl
jnp
rorl
mov
fsubrs
shrb
fmuls
popf
aas
push
imul
mov
mov
push
fs
jo
inc
dec
call
rorb
or
adc
popa
inc
mov
js
aaa
add
add
or
enter
push
addr16
leave
inc
and
push
add
sbb
dec
jne
mov
push
push
jl
sub
xchg
add
loop
and
cli
sbb
sub
jb
add
lret
sbb
jmp
dec
sub
cmpsb
pop
and
pop
js
push
pop
pop
pop
inc
pusha
push
xor
and
in
sub
insb
popa
leave
mov
das
in
push
sbb
sbb
jnp
pusha
js
xchg
inc
mov
call
xor
js
mov
push
inc
xor
sbb
pop
leave
jo
lret
pusha
adc
and
jl
js
cmpl
inc
or
sbb
mov
test
cmpsl
add
xchg
mov
cmp
sub
cmp
je
xchg
mov
or
jae
pop
cmp
sub
insb
xor
rorb
lds
dec
fsts
mov
add
scas
push
jb
inc
mov
xchg
cmp
mov
dec
adc
and
dec
xchg
jo
and
in
jmp
jae
xchg
dec
dec
adc
subl
pop
jmp
fwait
add
test
jns
add
add
xor
inc
push
add
enter
sahf
and
and
sub
jae
inc
sbb
nop
push
js
jne
push
std
cmp
lock
ss
sbb
dec
aas
lret
jns
shrb
push
pop
fs
addr16
pop
or
xor
int
push
push
stc
add
inc
pusha
sub
iret
jae
push
sbb
add
lods
adc
xchg
adc
ljmp
aas
and
inc
out
mov
aaa
cmp
mov
push
add
jmp
or
mov
adc
xchg
shrl
mov
mov
icebp
addr16
mov
sub
mov
adc
adc
andl
inc
in
sub
inc
and
pop
inc
aam
push
add
push
popf
add
or
dec
push
nop
mov
sahf
rolb
push
push
and
mov
adc
and
xor
data16
inc
nop
scas
adcb
mov
and
mov
ret
add
adc
movsb
push
enter
test
xor
push
push
mov
testl
rorl
lret
push
add
rclb
enter
pusha
push
dec
push
pusha
mov
lds
mov
pop
add
into
sbb
nop
sub
pop
loope
fwait
and
cmp
mov
pop
repnz
pop
pop
adc
lcall
inc
incl
pop
scas
mov
adc
mov
aaa
fbld
cmc
or
push
or
add
inc
and
jmp
imul
pop
cmp
and
daa
sbb
add
mov
ret
mov
mov
mov
out
pushf
outsl
call
jno
mov
cmp
mov
je
jge
add
addr16
lret
jge
incb
js
loope
incl
push
add
add
imull
mull
cmc
std
mov
je
mov
mov
or
xchg
das
adc
adc
cmp
stos
cwtl
lahf
clc
xorb
pop
mov
mov
mov
add
dec
cmp
mov
push
lcall
js
fadds
fcomps
aam
or
js
in
pop
jno
dec
pusha
scas
repz
sub
or
add
movsb
sub
scas
rcrl
outsb
add
or
outsl
imul
fisttpl
push
mov
dec
cld
cmp
ret
pushf
fchs
mov
push
xchg
rcll
xchg
in
ja
add
div
sti
rcl
push
dec
xchg
pop
adc
pop
mov
sbb
dec
jo
aad
jb
and
jns
sub
test
cmp
or
cwtl
add
into
data16
and
leave
dec
fmul
sub
xchg
push
xor
adcl
pop
xor
jo
fbld
mov
add
dec
push
inc
addl
pop
xor
orb
push
lcall
inc
orb
into
mov
dec
adc
cmp
jmp
mov
ljmp
push
sub
fmull
or
push
xor
dec
add
cmpb
add
xchg
dec
orb
aas
rolb
incb
mov
cmp
jp
jae
cmp
dec
ljmp
adc
clc
iret
cmpl
mov
imul
enter
push
inc
or
xchg
xchg
and
dec
and
add
inc
sbb
enter
cmp
pop
lahf
pop
sub
xchg
movsl
push
mov
xchg
mov
push
imul
sub
or
dec
or
jg
mov
mov
mov
mov
in
sbb
popa
mov
inc
inc
or
and
pop
aas
xchg
add
add
aam
shll
pop
addr16
aas
fld
add
xor
adc
or
lds
push
sbb
popa
addl
test
or
ret
add
or
mov
inc
je
xchg
aad
add
jg
jl
cmp
sarb
xlat
xchg
mov
sbb
pop
mov
movb
jle
add
movsb
mov
fidivrl
add
mov
imul
mov
mov
jmp
faddl
pushf
enter
pop
call
out
and
ljmp
inc
loopne
jo
int3
aas
out
js
sub
int3
into
pop
cmpsb
and
add
cmpsl
sub
or
lods
filds
mov
push
push
and
adc
call
inc
sbb
mov
push
mov
fiaddl
ret
das
insb
or
push
call
adc
das
adcl
scas
popa
mov
faddp
xlat
dec
int
mov
les
cmp
test
test
jle
or
incb
push
lea
or
pushf
dec
and
enter
test
push
xchg
lds
xchg
dec
cld
xor
into
sbb
ficoml
loopne
cmpsl
dec
push
ret
push
punpckhdq
pop
int3
dec
cmpsl
rorl
adc
std
dec
test
aaa
xchg
xor
cmp
cmp
je
push
push
je
xlat
dec
mov
imul
dec
loop
add
imul
call
add
int3
je
jne
sbb
outsb
pop
clc
inc
mov
inc
jns
shl
xchg
mov
sbb
aas
cmp
dec
ja
push
das
add
ret
mov
pop
jmp
xor
push
mov
or
jg
push
inc
in
pop
pop
mov
test
cli
push
jmp
lea
rcrl
insb
scas
xor
sub
out
xchg
jne
insb
dec
sbb
popf
add
mov
mov
into
jle
ret
mov
pop
sub
mov
push
mov
lcall
add
jl
cmpl
test
inc
fidivrs
xchg
sbb
ret
and
inc
add
imul
push
orl
mov
push
mov
and
push
call
sbb
ja
hlt
xor
push
ret
pop
push
cmpl
scas
imul
movsl
mov
adc
push
lock
movb
loopne
mov
pop
push
rolb
mov
ds
or
xor
in
xchg
leave
pop
xor
out
and
mov
clc
add
es
loopne
lea
push
push
adc
int3
jle
jl
mov
ds
push
in
or
int3
in
cmp
adc
adc
adc
adc
mov
adc
adc
jbe,pn
pop
leave
stos
jmp
dec
and
jb
pop
mov
or
xor
mov
mov
add
mov
pop
in
lock
imul
scas
and
cmc
call
push
mov
add
xlat
push
sbb
and
push
data16
insb
xor
jae
in
pusha
aaa
mov
xchg
incl
je
jmp
add
testb
outsb
push
push
add
call
mov
jns
mov
sub
jge
and
inc
rcrb
inc
gs
push
push
and
add
jl
sub
xor
movl
mov
dec
add
xor
inc
push
adc
mov
or
nop
sarb
pop
push
ret
add
dec
gs
add
pop
rcrb
mov
es
enter
and
mov
or
aas
sub
lods
pop
pop
aam
stc
mov
lret
sbb
adc
loopne
dec
mov
add
das
add
push
cmp
mov
incb
sbb
jne
mov
push
add
xor
dec
jne
mov
addl
shlb
shl
stc
lock
mov
test
roll
push
rorl
cmp
not
cltd
pop
mov
out
mov
add
push
push
icebp
xor
int3
stos
lock
mov
fmuls
sarb
mov
cmpsb
mov
cmp
inc
or
leave
adc
js
mov
lock
subl
je
mov
and
rorl
adc
push
mov
sub
jne
xor
add
aaa
leave
call
std
xor
push
sub
inc
incl
pusha
push
push
xchg
and
xchg
and
lock
ret
cmpb
add
mov
jo
cli
data16
or
sti
outsb
mov
mov
pop
pop
cmp
sub
sub
push
popf
neg
hlt
incb
add
inc
or
mov
cwtl
pushf
cmc
ret
cmpsb
movsb
sub
sbb
mov
push
jo
clc
mov
push
sub
or
push
ss
or
pop
les
adc
mov
jnp
inc
lods
or
lock
pusha
push
int
subb
mov
pop
cmp
pop
ret
shrl
enter
fldcw
jae
int3
fst
or
push
roll
and
inc
dec
pop
push
xchg
jmp
lods
dec
sti
hlt
sarb
inc
mov
into
scas
mov
cmp
push
out
das
push
lret
xchg
add
bound
xor
and
cmp
pusha
sub
imul
sbb
cmp
adc
dec
or
fsubrs
pop
mov
sub
xor
dec
sub
idivb
add
shlb
pushf
cli
mov
mov
imul
push
xlat
aad
insb
xor
mov
fwait
adc
sbb
push
adc
je
stos
test
xchg
mov
sub
ljmp
cmp
or
mul
xor
push
jecxz
aaa
je
in
jno
inc
adc
xchg
shlb
push
push
pop
mov
jp
and
adc
test
jo
rorl
test
inc
push
outsb
jns
mov
xchg
cld
jmp
adc
sbb
sbb
in
adc
add
add
mov
insb
push
mov
xchg
movsl
movsb
call
dec
popa
jbe
scas
adc
sub
cmpsb
mov
call
mov
mov
out
dec
add
adc
iret
lcallw
xor
and
push
jl
cli
cs
mov
pushl
outsl
push
ret
cmp
xchg
imul
in
push
or
pusha
movsl
sbb
pop
cmp
sbb
pop
je
add
sbb
outsb
mov
dec
pusha
add
inc
call
aad
inc
in
data16
sbb
andl
aaa
dec
popl
loop
adc
push
push
pop
lret
pop
in
insb
adc
add
sti
push
movsl
dec
or
push
xchg
sbb
stos
imul
arpl
add
xor
mov
in
jnp
pop
xchg
nop
mov
pop
cmp
shr
push
lret
mov
leave
data16
or
mov
mov
loopne
test
xchg
sbb
cmp
sbb
loop
or
test
and
mov
test
mov
ficompl
mov
inc
lahf
mov
push
roll
clc
sub
jl
pop
lock
lods
and
scas
dec
cli
pop
aam
aaa
sahf
jo
adcb
pop
cmp
pushf
push
daa
mov
xorb
cmp
cmp
mov
jmp
cmp
ficompl
push
cmp
cwtl
push
rcrl
out
out
mov
adc
mov
xor
movsl
xchg
in
jl
and
mov
arpl
fs
scas
mov
mov
hlt
sub
add
push
ret
in
jge
sub
or
insb
mov
dec
xchg
pop
pop
pop
push
ljmp
push
sbb
in
and
adc
divl
xchg
repnz
push
mov
mov
cmp
divl
pop
ja
test
sub
jb
mov
dec
rcl
and
js
and
sarb
or
pop
pop
mov
jmp
jo
clc
aam
push
pusha
push
mov
loopne
enter
dec
xor
insl
jne
cs
add
push
jae
arpl
push
jne
push
push
je
inc
or
xchg
out
xor
or
and
jle
lahf
and
mov
into
push
push
inc
inc
in
sub
scas
lea
js
cmp
dec
push
jo
ja
lock
popf
pop
cmp
je
adc
cmp
dec
push
das
popa
pop
mov
and
je
push
fidivs
push
or
jmp
inc
dec
fcoml
cmp
je
push
pcmpeqw
mov
cmp
push
movb
mov
lock
sbb
scas
orl
xchg
or
cmp
xor
dec
in
xor
push
sahf
xchg
shrb
or
clc
mov
in
mov
sub
push
loopne
and
pop
inc
cmp
push
xchg
sbb
push
sbb
push
push
adc
xor
out
out
push
cmp
scas
pusha
or
jae
add
ret
mov
add
stc
mov
aas
push
cmp
jne
clc
les
adc
fcomp
mov
je
adc
testl
and
in
cmp
or
hlt
hlt
lcall
dec
mov
or
std
sbb
mov
xchg
sub
inc
push
and
rorb
sbbb
add
std
mov
push
lcall
add
jle
sbb
jp
adc
or
add
cmpsb
imul
cmpsb
imul
fcomps
fwait
sar
stc
mov
imul
or
mov
imul
mov
pop
scas
sub
push
and
pop
je
or
add
xchg
daa
xor
int
adc
and
push
loop
pushl
xor
mov
rcrb
fadds
sbb
xor
add
and
xor
push
xor
cmp
shlb
lret
jbe
push
test
adc
cmpsb
subl
scas
jo
int3
cmp
jne
mov
jne
xor
inc
cmp
jne
dec
nop
mov
xor
add
das
nop
sar
bound
pcmpeqw
mov
or
idivl
dec
dec
push
ljmp
add
int
imul
or
sti
and
adc
fbld
jmp
cmp
in
pop
and
sbb
xor
or
daa
jne
sbb
pop
inc
repz
ror
test
lcall
add
cmovae
js
mov
push
xor
add
xorl
test
xor
sub
leave
lea
jne
xchg
js
and
test
add
sbb
sbbb
loopne
mov
aad
test
in
repnz
inc
or
add
sahf
outsb
rcrb
decl
add
and
pop
decl
push
rol
ljmp
add
xchg
add
push
mov
jmp
pop
jge
jne
lea
repnz
add
or
adc
pop
iret
push
lock
notb
in
or
ret
inc
sbb
test
adc
cmp
fldenv
pushf
loopne
adc
mov
adc
pop
mov
incb
in
cmp
repnz
out
add
movsb
sti
cltd
iret
cmp
mov
push
stc
xchg
mov
insl
jmp
out
fnstcw
add
mov
stc
push
adc
clc
loopne
mov
stc
xchg
jecxz
lock
mov
sysret
je
icebp
jne
in
ds
xor
ja
arpl
ficompl
pusha
fldcw
outsb
test
scas
mov
lods
push
scas
adcb
jmp
and
push
andb
idivb
outsb
jne
or
adc
shrb
jne
stc
mov
inc
sbb
add
push
lret
clc
dec
cmp
add
mov
movsl
cmp
mov
stos
cmc
or
jmp
cmp
shrb
dec
xchg
cmpl
cmpl
cli
mov
adc
insl
decb
rolb
cmc
push
push
call
es
push
cmp
shlb
adc
inc
clc
fidivrs
pop
xor
push
or
nop
fcmovnu
jge
loop
mov
lahf
pusha
mov
mov
inc
mov
xchg
jmp
sub
lds
xor
adc
sbb
sbb
dec
jecxz
pusha
add
or
jo
pushl
mull
sbb
fisttpll
dec
xor
lock
add
add
fdivrl
inc
notl
xchg
inc
js
shlb
sbb
lods
mov
daa
add
mov
je
cltd
test
mov
xchg
inc
inc
pusha
insb
insb
cmp
fs
dec
or
adc
lcall
ret
ja
inc
arpl
and
in
dec
jo
loope
adc
je
cmp
je
lret
cli
ret
imul
add
mov
pop
sbb
roll
mov
and
xchg
jbe
cmp
je
xor
imul
lock
push
sub
lds
inc
pop
xchg
jmp
lea
dec
fsubr
orl
sub
push
add
mov
mov
adc
lock
in
cld
lock
cmp
pop
cmpsl
addb
push
lret
push
push
adc
repz
or
add
ja
or
dec
ss
mov
jo
mov
mov
sbb
add
add
push
mov
out
mov
into
lea
pop
test
pop
cs
push
pop
mov
mov
push
leave
inc
push
cmp
dec
cmpsb
je
push
mov
pop
jl
testb
sbb
inc
sub
add
add
and
mov
dec
xlat
test
test
ljmp
pop
pop
adc
jbe
push
cmp
scas
pushf
call
jle
leave
dec
and
push
sbb
and
pop
insb
jns
insb
push
jno
int
push
push
jge
jne
enter
sbb
mov
add
xchg
cs
mov
imul
pop
ret
insb
sub
lock
outsb
sbb
jl
pop
out
fcoms
jmp
xchg
and
insb
testb
repnz
cwtl
fidivrs
test
sub
push
test
sarl
sub
jo
cmp
je
sahf
lret
sbb
add
js
data16
or
cwtl
dec
push
lea
push
pop
cwtl
push
adc
xchg
add
lea
fsub
add
lret
push
or
or
and
sbb
lods
add
xchg
jbe
data16
xchg
fcoms
cli
les
jl
out
xchg
pop
xor
pop
add
mov
mov
push
adc
enter
adc
fsubrl
mov
in
jge
push
pop
arpl
and
js
xorl
arpl
and
mov
cmp
std
movsb
and
mov
jg
jb
and
xorl
dec
inc
cmp
je
inc
or
jne
inc
in
pop
loopne
or
jge
and
clc
fimuls
insl
daa
jg
and
sbb
jg
xor
arpl
sbb
mov
cmpsb
inc
scas
add
ret
pop
mov
pusha
pop
addl
or
mov
sbb
xchg
adc
and
shlb
adc
pop
or
push
pop
into
jecxz
inc
cs
lock
xchg
sbb
in
cmp
sub
insb
mov
aam
lret
or
inc
repz
shlb
pop
add
lcall
lds
mov
arpl
or
adc
push
push
pop
dec
cmp
jbe
jmp
loop
fwait
cmpl
cmpb
test
fs
test
pushf
popa
mov
cmp
rolb
jo
outsb
sub
mov
jo
lret
pop
mov
shrb
ljmp
xchg
popf
push
dec
pop
mov
movsl
add
idivb
je
mov
fs
adc
loopne
call
push
out
jo
push
les
outsb
mov
cli
sar
cmp
stc
scas
lea
xor
add
test
mov
mov
or
stos
sub
dec
mov
test
popf
push
int3
add
mov
test
add
test
mov
or
test
inc
xor
je
cmpsl
daa
jae
add
inc
lcall
sbb
dec
jae
inc
or
adc
mov
xchg
adc
cmp
push
or
pop
arpl
push
sbb
pop
dec
ret
out
push
sbb
sub
cmp
sbb
gs
lods
and
sub
movntps
xor
imul
mov
add
pop
push
ret
loop
icebp
add
and
sbb
mov
xchg
sbb
jl
or
sbb
cmp
lds
and
sub
mov
jb
push
xor
js
sbb
sbb
sbb
xchg
mov
push
pop
pop
push
push
aaa
jle
sbb
xor
push
cmp
xorb
cmp
push
fidivl
dec
mov
pop
sub
test
inc
and
mov
cld
shr
ret
xchg
std
decl
lret
outsb
xchg
cs
mov
mov
imul
jmp
cmovno
jecxz
fistl
adcb
and
mov
xor
shlb
sbb
mov
push
jo
bound
push
mov
pop
cmp
jno
push
repz
push
loope
ss
push
xor
push
or
or
push
sbb
xchg
fcom
and
xchg
fmull
orb
mov
push
lret
outsl
adc
push
and
cwtl
mov
mov
enter
sub
sub
jp
pop
sbb
out
push
xchg
pop
mov
xor
or
cmp
push
and
jo
xor
sbb
add
loop
cmpl
xorb
xor
movb
out
mov
and
int
addl
add
pop
dec
cwtl
test
adc
addr16
inc
cmp
mov
stc
andl
mov
xchg
sbbb
sub
outsb
jl
aas
sbb
lcall
pushl
loope
push
pop
mov
lea
jmp
scas
in
out
jmp
mov
ss
mov
rcll
cmp
xor
outsb
mov
or
xor
test
sbb
out
pop
popa
cmp
jge
push
inc
idivb
lret
and
push
inc
lock
ss
mov
jl
andl
pop
xchg
inc
sbb
add
adc
je
jl
cld
and
xchg
lods
sbbl
dec
xlat
inc
or
dec
cltd
gs
fistpll
mov
mov
push
dec
outsb
aam
or
mov
lea
xor
loope
xor
lods
push
stos
addb
pop
and
push
test
or
pop
push
mov
lret
or
mov
push
push
or
mov
cld
adc
repz
add
xor
jl
mov
add
xchg
test
push
idivb
jle
xlat
shr
pop
add
lock
insb
dec
dec
adc
adc
push
inc
xor
adc
inc
push
add
loopne
and
fdivs
dec
into
xor
addl
in
sbb
pop
pop
jb
jmp
loope
push
scas
and
push
xor
pusha
mov
movb
push
je
sbb
or
test
add
jne
xorb
mov
sub
pop
faddp
sbb
testb
std
lcall
xchg
jno
mov
fdivrs
and
dec
jl
loope
xor
xlat
roll
add
addb
adc
adc
pop
xchg
push
nop
lock
mov
data16
push
adc
inc
int
mov
lret
mov
jl
fbld
sbb
nop
fldt
cwtl
xor
push
mov
mov
mov
xchg
movswl
add
and
cmp
add
dec
add
in
lahf
aaa
add
arpl
pushf
add
jb
add
fstpl
mov
test
aaa
stc
je
xor
dec
insb
scas
xchg
test
lods
cmp
fbstp
add
fisttpl
mov
xor
pusha
cli
adc
push
push
lret
push
add
mov
testl
push
push
xor
push
test
and
in
cltd
mov
mov
nop
jmp
gs
xor
nop
data16
push
pushf
pushfw
inc
xlat
adc
aam
mov
mov
shlb
push
mov
inc
push
jne
mov
adc
or
daa
add
pop
jmp
jae
push
jo
jmp
insb
or
mov
pop
and
pop
push
push
pop
cmp
lods
mov
cltd
roll
idiv
sub
xchg
jle
mov
dec
loope
jo
mov
inc
or
mov
lea
rcll
inc
and
or
or
pushf
mov
je
pop
xor
orb
mov
xchg
xchg
dec
mov
cwtl
cmp
add
adc
and
push
addl
test
cmc
cmp
add
add
in
je
icebp
pop
mov
add
adc
int3
xchg
andl
cmp
xchg
adc
decl
dec
mov
adc
es
mov
aaa
jle
ret
sbb
add
xchg
movsb
xor
or
fsubs
cmp
loopne
rolb
int
or
mov
xchg
sub
aam
scas
sub
rolb
mov
adc
mov
in
add
jge
ljmp
and
pop
and
and
dec
cli
imul
ret
mov
lods
int3
mov
fisubrs
cmp
pop
jae
mov
lock
adc
add
push
fbstp
insb
mov
adc
in
andl
adc
dec
push
push
jmp
lods
lea
add
jo
in
pop
inc
xor
cmp
sub
lods
sbb
lahf
hlt
lods
adc
orb
jge
cmp
sbb
push
loopne
lret
cmp
cmp
mov
pop
fdivl
cmp
loope
cld
cmp
mov
and
jle
loop
push
mov
push
push
push
mov
add
xor
mov
pop
popa
mov
sbb
xor
cmp
aas
xchg
das
je
sbb
xlat
adc
es
jo
add
test
loope
xchg
inc
cli
push
cld
mov
or
cmp
in
jg
lahf
outsl
jge
movl
shr
inc
add
mov
loop
arpl
adc
loop
repnz
shrb
adc
push
sub
cmp
insb
std
mov
decb
pop
pop
data16
fldl
xor
in
adc
adc
jge
pop
clc
adc
mov
lock
sub
bound
clc
jp
sbb
mov
jno
ja
push
adc
pop
adc
adc
hlt
rcr
mov
pop
fistl
jns
scas
ret
test
push
mov
cmc
sbb
repnz
jnp
dec
insb
or
lods
inc
in
jecxz
adc
or
inc
xchg
push
xchg
mov
and
lcall
rclb
addr16
xor
push
or
cmp
sbb
adc
push
fnsave
out
movsl
addl
loope
test
sbb
jo
jge
fimull
cmpb
ud0
push
inc
stos
fdivs
adc
jp
notb
inc
xor
out
andb
xor
add
pop
adc
mov
pop
dec
sub
add
sbb
adc
xor
sub
rolb
sub
sub
push
pop
mov
add
push
lea
push
jb
mov
add
jbe
mov
pusha
or
and
sub
dec
out
push
aas
or
dec
sub
add
pop
and
xchg
sti
addb
ss
rcll
lret
dec
in
fs
jmp
mov
mov
inc
jo
out
bound
cmp
fmuls
mov
inc
adc
in
pop
js
mov
mov
lds
call
or
orb
xchg
adc
sbb
cmc
jg
push
mov
mov
xchg
mov
mov
lret
stos
jo
stos
adc
adc
sbbl
cltd
inc
push
dec
cmpl
add
and
jb
stc
dec
lock
sub
sahf
push
push
cmp
jge
push
add
dec
aam
push
or
adc
adc
sub
subb
xchg
or
fisttps
xorl
pusha
lock
adc
inc
adc
test
mull
push
cmp
bound
cmpsl
mov
push
xchg
mov
adcb
jb
pop
push
rcrb
pop
add
andl
lods
push
xchg
iret
rorb
call
pusha
mov
jne
lds
popf
lcall
or
loope
xchg
ret
or
filds
aaa
sbb
xor
xor
pop
ds
jmp
or
xchg
adc
add
ficoml
into
lret
out
inc
xchg
adc
sbb
nop
lcall
pushf
mov
jl
jno
neg
je
add
shl
inc
mov
testl
add
lcall
aaa
ds
add
push
js
and
jne
adc
lret
push
int
fcoml
and
sbb
inc
nop
jne
imul
inc
ret
fimull
push
mov
pusha
mov
add
jae
push
push
sbb
and
fdivrl
sbbl
jae
lods
jmp
pop
pop
push
push
xorb
nop
in
or
add
rcl
and
dec
in
roll
mov
and
outsb
mov
stos
in
dec
mov
add
sbb
test
test
push
gs
shrb
es
outsl
ret
testl
mov
fnstenv
or
sbb
push
inc
movsl
mov
subl
subl
jo
xor
pop
cmp
pop
dec
pop
lods
push
push
scas
mov
add
mov
mov
mov
fisubl
shrb
jns
les
adc
or
cmp
mov
sti
sub
xor
jge
xchg
mov
in
lea
in
lock
and
push
das
mov
xchg
inc
testl
movsb
sub
or
lods
mov
pop
xchg
mov
pop
inc
push
push
mov
in
pop
dec
js
rcr
sbb
jbe
push
push
pcmpeqb
mov
xchg
mov
dec
pop
cld
fisttpl
mov
jbe
loopne
add
ret
testb
fs
add
cmp
mov
sbb
jno
jnp
adcb
ja
inc
popf
mov
andl
out
ret
outsl
mov
incb
shlb
mov
je
or
je
or
sub
xchg
adc
adc
and
adc
test
adc
add
xor
sahf
ss
jne
lcall
bound
stc
mov
clc
push
jmp
cmp
adc
imul
xor
push
iret
inc
push
inc
adc
push
add
cmpsb
lds
mov
dec
cltd
lods
or
jbe
jl
cmp
inc
jmp
jb
sub
es
add
push
inc
mov
dec
mov
add
je
lds
mov
mov
or
mov
pop
or
adc
pop
ljmp
cwtl
sbb
test
scas
xor
and
fimull
xor
sbbl
push
movb
or
push
adc
and
dec
je
sub
bound
mov
push
lods
data16
adc
add
mov
push
scas
push
adc
fldt
xor
daa
or
loop
mov
stc
sub
cwtl
jmp
jno
ds
in
outsb
pop
cwtl
nop
mov
dec
pop
insl
lea
xchg
push
pop
add
adc
jo
stos
test
jb
negl
sbb
mov
or
push
andl
in
aam
mov
rcrl
sub
je
and
scas
sbb
adc
mov
fcoml
add
add
je
shrb
fimull
inc
push
inc
add
add
jecxz
movsl
pop
loopne
push
movsl
push
mov
fmul
or
sbb
xchg
ss
or
in
push
push
rcll
add
int3
jb
cld
xor
push
addr16
stos
xor
popa
sbb
xchg
jecxz
xchg
pushf
xchg
xchg
mov
push
cs
out
cmpsl
dec
idivl
add
xchg
les
pop
inc
pop
push
and
mov
and
dec
pop
and
mov
and
pushf
mov
shlb
call
cs
pop
cmp
call
jns
push
enter
and
jo
mov
inc
dec
sub
sbbl
scas
cmp
call
mov
and
push
sbb
call
cmp
add
push
mov
xor
aam
int3
or
mov
aam
aas
dec
cmpsb
mov
rcrb
add
mov
or
add
jl
mov
dec
adc
mov
pop
push
adc
leave
push
dec
jmp
sbb
adc
pop
arpl
adc
xchg
and
cmp
mov
pushf
xchg
cs
add
xlat
fidivrs
mov
adc
or
add
jmp
xor
or
movsb
popf
das
or
adc
sbb
inc
inc
xchg
or
dec
shl
aaa
shll
dec
imul
and
xor
pop
pusha
ret
sub
adc
xor
icebp
pop
mov
mov
or
push
fs
mov
lcall
sbb
jnp
scas
push
xor
inc
enter
jg
inc
push
jne
adcl
jmp
xor
mov
in
shll
cmp
faddl
pop
inc
cmpsb
nop
fsubs
push
sub
pusha
test
mov
rol
fcoms
push
adc
sub
sub
push
and
cwtl
je
call
pop
nop
adc
pop
push
xchg
clc
or
mov
xor
dec
mov
add
inc
inc
add
or
or
mov
adc
repz
sbb
sbb
cmp
lret
mov
clc
dec
push
inc
ss
inc
lea
pop
push
or
push
jmp
add
aam
fcomps
inc
dec
gs
push
mov
mov
mov
cmp
cmp
add
jg
int
sahf
imul
xor
xor
sbb
dec
pop
add
mov
sarb
xor
add
incl
push
dec
cld
pop
mov
cld
cmpsl
mov
stc
loopne
mov
inc
xchg
push
sbb
pop
add
push
lock
dec
mov
shl
into
pop
jp
sti
arpl
fs
jb
cmp
push
shlb
sub
sub
sub
mov
rol
adc
or
and
lea
jo
mov
insb
sbb
push
sahf
xchg
push
js
mov
and
push
add
cmpl
mov
xor
or
aam
dec
xor
aaa
or
pop
sub
xchg
mov
adc
push
addb
dec
inc
or
xor
loopne
jg
dec
jnp
clc
data16
jl
mov
cmp
popa
mov
add
xchg
mov
jno
add
dec
cmp
add
in
xchg
loopne
and
xor
cmp
in
mov
sti
and
shrl
pop
jne
es
xchg
dec
add
in
or
or
sbb
pop
popa
push
mov
cs
sbb
ret
shl
push
movsb
jns
rcll
add
loope
xor
xchg
push
jg
int
dec
dec
out
dec
or
negl
outsb
sarb
pop
sbb
les
sahf
jbe
sbb
adc
xchg
adc
nop
add
imul
out
into
ret
jecxz
dec
adc
int
scas
xchg
and
add
sub
adc
pop
add
outsb
sbb
sub
xor
mov
inc
cmp
ljmp
es
push
stos
add
pop
movb
sbb
push
cmp
lods
add
or
std
test
mov
stc
mov
shll
mov
mov
inc
sub
scas
fdivl
ss
dec
adc
pop
sbb
push
loope
push
dec
fs
mov
jbe
push
push
sub
sbb
jmp
adc
xlat
xor
aaa
add
pusha
xchg
xchg
testb
pop
or
xor
aas
cmp
les
sahf
add
pop
ficoms
repnz
sub
test
or
inc
shr
stos
or
jo
cmp
push
xchg
xchg
mov
es
sarl
inc
add
dec
xchg
mov
add
cli
call
jb
add
sub
je
push
adcb
call
enter
jne
jno
ret
adc
or
pop
mov
sub
or
cmp
cmpsl
fstps
push
add
and
add
jo
mov
subl
dec
dec
cli
add
pop
je
or
xor
xchg
mov
popf
push
stc
loopne
push
adc
xorl
mov
xor
mov
fstpt
hlt
jp
lcall
inc
or
push
sbbb
in
divl
mov
inc
sbb
mov
mov
cli
fiadds
or
sub
cmp
sub
cld
mov
pop
dec
and
pushf
push
adc
and
call
pop
ljmp
clc
push
cld
push
je
pop
xor
test
repz
add
nop
fs
and
adc
scas
nop
lret
sbb
mov
inc
pop
lret
popa
inc
mov
pusha
mov
xchg
jns
cmp
repnz
sub
rcrb
add
mov
or
je
dec
out
add
repnz
adc
daa
int3
ja
and
pusha
sbb
in
xchg
mov
inc
push
cltd
add
push
enter
daa
rorl
and
repz
and
push
add
orb
mov
and
ds
popl
push
adc
sub
lea
add
clc
or
xchg
add
daa
fmull
mov
jmp
push
xor
and
push
push
sub
push
in
sahf
and
xor
push
jns
sub
cmp
push
pop
sbb
sbb
cmp
pop
ss
xchg
inc
ret
cmp
mov
pop
jns
push
inc
lret
sub
mov
mov
cmpl
sbb
mov
lods
add
jmp
dec
pop
jns
add
adc
int
pop
and
push
dec
jmp
xchg
iret
push
push
push
lock
into
cmp
sbb
jecxz
sbb
jl
sti
and
cmp
xchg
test
into
pop
test
stos
out
xor
pusha
test
hlt
inc
test
mov
xchg
pop
or
ret
dec
push
push
add
xchg
cli
call
mov
dec
adc
push
dec
sub
ror
add
inc
add
or
dec
cmpl
adc
sub
pop
jmp
pushl
sub
inc
movsl
sub
lea
add
xor
sub
mov
xor
mov
mov
movsl
cld
mov
push
sbb
adc
mov
push
js
or
adc
adc
cwtl
sahf
stc
fdivr
or
jge
sbb
xchg
xlat
testb
arpl
mov
fmuls
popa
jno
jecxz
jae
or
sub
mov
scas
adc
and
scas
dec
inc
rolb
mov
out
xchg
loopne
js
sbb
cld
stc
mov
lcall
jbe
pop
mov
call
xchg
call
cmp
jo
add
lock
fnstcw
mov
sbb
sub
cmp
add
leave
aas
xchg
xchg
fdivp
or
xchg
fcmovnb
lds
lods
pop
or
adc
sub
repz
xor
push
sub
push
push
push
lock
daa
fwait
sub
jne
pop
add
mov
and
or
lcall
mov
adc
push
or
add
xor
jno
xchg
mov
loop
sbb
dec
dec
xchg
outsl
add
mov
int3
or
notb
shlb
loopne
mov
mov
or
roll
xchg
imul
in
ret
cmpsb
cmp
mov
lea
test
inc
rolb
lock
cmp
jbe
inc
mov
inc
pop
sub
push
push
add
and
mov
xchg
or
xchg
jns
jne
orl
pusha
dec
xchg
out
fwait
mov
adcl
sbb
loopne
clc
out
cwtl
stc
push
int3
mov
int3
cmp
push
jle
call
adc
stos
and
xchg
adc
add
sarb
push
push
dec
push
cld
cmp
jae
mov
ret
cmp
jl
cmp
jae
jmp
mov
and
out
pop
cmp
or
ret
jne
pop
adc
push
pop
stos
push
insb
je
hlt
pop
adc
or
not
cmp
fwait
or
xor
cli
stos
inc
jmp
and
rolb
lods
loop
cmp
xchg
or
lods
sbb
loopne
jl
xor
pop
mov
or
add
call
xchg
pop
cmp
and
and
das
or
mov
rclb
cmp
test
inc
jp
pushf
decb
stos
es
aad
and
pop
pop
nopl
outsb
push
xorb
inc
outsb
mov
push
push
das
mov
gs
cli
cld
loopne
mov
loope
adc
mov
and
push
mov
cmpl
rcrb
scas
cmc
xchg
lock
add
repnz
mov
pop
xchg
rorb
and
add
add
mov
sbb
or
jmp
xor
mov
jg
pop
shl
shr
adc
jne
imull
push
dec
movsl
popf
imul
mov
mov
insb
call
imul
sbb
aas
sti
cmpsl
jo
add
js
lock
jns
ret
stos
or
add
sbb
xor
xor
cld
jecxz
movsb
cmp
or
test
ret
push
xchg
test
mov
cmp
jbe
mov
xor
ret
push
xor
push
jns
mov
lds
pop
leave
or
sbb
and
cmp
popa
or
pusha
jb
stos
movsl
imul
sub
stos
inc
jno
dec
xchg
aaa
test
dec
cmpsb
dec
dec
and
mov
in
pop
test
cmp
push
inc
pop
nop
das
inc
xchg
sbb
pusha
loopew
push
inc
dec
dec
repz
jle
add
test
dec
loopne
push
cmp
push
hlt
out
lea
add
mov
cmp
push
addl
pop
adc
lock
inc
js
inc
gs
xchg
jbe
mov
sarb
adc
push
sbb
sub
in
pop
xchg
or
jae
add
mov
pusha
cmp
adc
mov
test
sub
xchg
movb
or
inc
xchg
sbb
xor
out
adc
xchg
mov
or
sbb
movsb
add
push
cmp
jb
cmp
cmp
ficoml
fwait
inc
adc
inc
jmp
xor
ljmp
incl
aas
ja
push
push
push
xchg
xchg
cmpsl
fwait
inc
pop
mov
jg
pop
fiadds
mov
es
lods
ret
push
add
pop
jmp
xor
sub
dec
adc
adc
jne
ret
add
mov
jle
push
cltd
insl
lock
int3
inc
adc
sbb
jo
popf
xor
insb
jmp
mov
sahf
push
daa
dec
test
addb
adc
add
adc
popf
xchg
cmp
and
adcl
dec
sub
dec
stc
jo
dec
mov
cmp
inc
jmp
or
mov
and
scas
inc
xchg
xchg
mov
inc
lahf
add
sub
shlb
and
popa
sbb
sub
mov
mov
xchg
dec
leave
mov
xchg
lcall
push
test
pop
adc
push
add
arpl
jae
es
ja
or
add
push
inc
jne,pt
push
sbb
repz
jb
mov
mov
mov
vmwrite
add
inc
adc
add
mov
cmp
dec
mov
sbb
gs
imul
mov
imul
jecxz
and
inc
cmp
andl
add
pop
mov
mov
xlat
scas
loopne
pop
loopne
test
dec
mov
mov
mov
and
dec
fsubrl
adc
les
pop
js
dec
imul
mov
dec
xchg
jecxz
mov
dec
pop
cmp
inc
adc
sub
popa
leave
mov
adc
push
xor
mov
sub
push
push
lret
cli
rep
mov
sub
cmp
jbe
or
xor
mov
pop
cmp
push
jp
pop
sub
cltd
xchg
sbb
or
cmp
pop
rcr
jge
mov
and
lcall
xor
pushl
leave
or
push
mov
icebp
and
sub
add
lods
xor
bound
mov
mov
scas
scas
cmp
mov
add
cmp
push
sbb
nop
cmpb
outsl
push
push
inc
lcall
xor
inc
or
or
roll
jno
cmpsb
loop
pop
or
inc
popa
std
loope
je
mov
push
sbb
adc
stos
xor
clc
mov
and
les
arpl
jl
mov
clc
rcll
push
mov
mulb
cld
or
sarl
jge
push
lods
mov
push
pop
repnz
xchg
repz
inc
and
rcr
lods
jbe
sub
lea
ret
loop
lock
int3
pop
js
test
ljmp
iret
test
lea
adc
lahf
jnp
mov
push
or
test
pop
sbb
fadds
aam
sbb
ds
inc
xchg
adc
pop
cmp
cli
pop
push
cld
ret
cltd
adc
push
xor
jbe
neg
sbb
inc
je
xor
cli
jp
inc
mov
mov
sahf
dec
call
xchg
add
cmpl
sbb
xchg
mov
sbb
xorb
lret
adc
or
or
and
lds
pop
pop
sti
jl
test
mov
imul
mov
stos
inc
or
mov
mov
ret
mov
jns
push
and
jge
mov
push
sbb
jle
dec
add
jmp
leave
pop
xor
xchg
push
aas
int3
dec
out
xchg
je
jnp
shll
push
xor
add
dec
je
addr16
add
scas
add
ja
test
stc
lea
mov
je
or
jl
sub
xor
xor
cmp
inc
les
cld
dec
dec
sub
pop
cmpsl
les
jns
aam
add
sub
enter
pop
pop
lock
jno
inc
add
mov
sbb
lods
inc
aad
out
movsl
sub
push
mov
inc
add
decl
jo
xchg
add
jg
push
inc
je
aaa
push
xchg
push
loopne
adc
lods
fisubs
mov
add
and
ljmp
add
adc
ret
push
mov
sub
cltd
sub
out
jnp
icebp
pop
or
pop
out
push
aad
adc
leave
sub
jmp
scas
inc
pop
jne
lea
pusha
mov
ds
push
or
hlt
or
jb
pop
rclb
or
push
push
dec
mov
arpl
push
imul
mov
cmp
sbb
and
repz
adcl
addl
push
icebp
ret
pop
loope
jo
ljmp
mov
xchg
je
cmp
cmp
sub
mov
add
orl
dec
sub
or
adc
push
sub
push
xor
test
enter
push
daa
pop
cmp
sub
mov
jne
push
adcl
mulb
ss
rep
bound
xchg
fisubrs
sub
jmp
sub
jae
test
not
and
push
les
sbb
loope
lds
pop
push
push
and
jae
push
jo
pop
xchg
mov
dec
add
fbld
data16
inc
sub
jb
mov
pop
push
les
cwtl
or
inc
shll
add
dec
xor
or
sbb
jbe
inc
test
xchg
addr16
or
cmp
xor
out
xor
call
and
sub
addr16
or
gs
xchg
mov
add
movsl
movl
hlt
dec
jo
sbb
inc
xor
insb
pop
pop
mov
inc
hlt
cmp
fildl
cmp
mov
jmp
adc
add
fldl
inc
popa
shlb
add
add
push
inc
add
ds
inc
xchg
cmc
push
int
cld
inc
jge
test
cmp
push
shrd
push
cld
clc
pop
jmp
xor
add
lret
loop
mov
xor
jnp
pop
adc
push
sub
sub
cmp
in
mov
mov
push
sub
dec
sar
call
mov
hlt
push
mov
mov
push
sbb
mov
push
push
adc
add
xchg
pop
jne
les
pushf
mov
pop
or
xchg
ljmp
mov
push
sbb
scas
adc
dec
rclb
sub
push
adc
jns
int3
arpl
and
add
dec
xchg
add
mov
bound
cwtl
sbb
push
sbb
and
sarb
dec
jne
cld
loopne
mov
push
pusha
mov
add
add
pusha
push
push
movsb
rcll
xchg
lsl
jo
add
xchg
ds
cld
push
mov
popa
xor
and
je
mov
dec
sbb
testl
cmp
cmp
lcall
sub
nop
jo
xchg
mov
mov
subb
cmp
xchg
fsubs
sbb
test
mov
or
mov
lock
adc
dec
mov
je
das
ror
call
lret
mov
lds
in
rcrb
js
or
mov
rolb
or
adc
int3
adc
mov
add
inc
jge
rolb
inc
sub
fnsave
nop
pop
xor
and
movsl
xchg
js
mov
test
jle
testb
inc
jle
push
movsl
ljmp
icebp
mov
loope
sub
insl
popa
scas
daa
movsb
lret
insl
insl
adc
sahf
shrl
or
cmp
xorl
mov
or
pushf
or
cld
rcll
loope
cmp
je
lcall
outsl
out
adc
push
add
rol
add
clc
jbe
or
add
jmp
cmp
jmp
add
add
mov
mov
test
enter
andb
inc
mov
push
dec
ljmp
add
cmp
sarl
or
dec
mov
adc
and
addl
roll
test
add
lock
cwtl
ret
lea
mov
fdivp
sahf
pop
inc
cmp
jne
dec
or
mov
cmp
pop
or
or
push
pop
mov
add
pop
pop
and
lea
xorl
cmpl
or
rcrb
or
sbb
inc
xlat
pop
arpl
adcb
push
sbb
or
xchg
pop
or
loopne
call
imul
mov
adc
enter
ret
jo
dec
call
je
jnp
pop
or
mov
and
pop
fdiv
push
mov
pop
sbb
enter
arpl
push
in
sbb
dec
add
jne
sub
ss
incb
lea
jp
cmp
xor
push
push
cmp
mov
jb
pushl
mov
pop
sahf
add
or
pop
jmp
xor
jae
and
and
mov
xor
rcl
adc
add
sub
add
add
dec
inc
add
sub
movsl
out
cwtl
hlt
xchg
lea
addr16
dec
push
mov
ficomps
inc
and
inc
sub
imul
cli
lods
inc
lea
mov
enter
pop
ret
cmp
inc
dec
and
cmp
repnz
fs
cli
jbe
push
enter
pop
pop
pop
add
lock
dec
movsb
adc
fisubrl
nop
sbb
sbb
add
mov
out
outsb
roll
mov
mov
mov
or
imul
pop
or
inc
in
adc
add
and
int3
and
and
mov
and
adc
repz
xchg
or
shlb
sub
inc
mov
cmp
jbe
nop
add
ja
daa
cmp
fstpt
fisttpl
jbe
mov
ja
mov
or
adc
or
xchg
fcoml
fldt
aas
cmp
sbb
add
sbb
jmp
jl
mov
adc
daa
pop
mov
xchg
movl
inc
jle
mov
or
les
inc
loopne
mov
add
cmp
and
and
pop
je
pusha
mov
push
lock
inc
cmpsb
dec
mov
dec
or
es
sub
pop
rol
xchg
ss
mov
lcall
sub
dec
push
shlb
fs
mov
and
in
cmp
add
in
and
cmp
and
and
mov
in
sub
xor
das
sub
sbbb
addb
push
fcomps
jnp
mov
xor
push
call
xor
or
shrb
xor
or
xor
mov
mov
shrb
sbb
rclb
scas
lea
movsl
mov
ffree
in
push
jmp
add
ss
push
movl
sbb
mov
adc
cs
sbb
pop
adc
mov
mov
and
push
ret
xor
hlt
add
xchg
xchg
test
js
les
or
ret
cltd
fsubrs
sub
mov
cmp
rcll
or
add
daa
mov
iret
adc
add
insl
push
adc
aam
faddl
inc
cmpsb
imul
cli
ja
xor
pop
lcall
push
loop
pop
out
sti
push
adc
sysexit
lds
fidivl
add
andb
push
pop
sbb
mov
cld
lods
lds
vmaskmovdqu
shl
add
rcrl
iret
or
jno
movsb
sub
orl
in
sbb
xor
sbb
sbb
insl
test
mov
sub
push
cwtl
push
in
adcb
or
push
pop
ds
sbb
cld
pop
enter
outsl
cmp
stos
fstps
insb
movaps
dec
stc
mov
push
pop
or
add
pop
pop
xchg
addr16
loopne
sbb
push
push
int
and
outsl
dec
je
add
or
in
xchg
add
dec
pop
call
daa
test
loope
pop
je
es
je
int
jmp
add
ret
mov
pop
cmp
xsha256
cmpsb
push
dec
das
mov
add
ret
cmp
cmp
jne
sbb
loopne
sbb
aaa
nop
out
in
test
in
push
cmpsb
mov
cmp
jle
pop
or
je
les
inc
cs
lret
movsb
daa
push
push
loope
push
mov
add
push
cmpb
popa
push
scas
push
jae,pn
outsb
sbb
pusha
mov
and
scas
mov
or
jmp
leave
lds
fwait
xchg
jmp
cmp
push
arpl
mov
cmc
insl
je
orl
lock
in
and
add
mov
add
mov
or
push
add
addl
add
int
and
adcb
dec
fisubrl
dec
add
out
ret
sub
push
and
rolb
pop
add
jo
dec
sub
adc
in
pop
sbb
mov
fadds
push
sub
pop
jmp
cmp
loope
inc
add
inc
push
push
or
repz
cltd
ret
sbb
dec
mov
jb
mov
int
addl
cmp
jmp
add
dec
cmc
add
pop
and
stc
xor
push
adc
dec
fadds
jns
inc
sub
or
gs
pop
xchg
loopne
in
test
leave
or
adc
cs
mov
jmp
push
bound
imul
jo
js
jmp
xor
xchg
stc
cmp
adc
call
fistpl
push
popa
xlat
push
xor
fs
iret
add
and
or
xor
subl
jmp
push
cmpsl
ja
aad
outsl
clc
xor
xchg
inc
ljmp
int
xchg
push
popfw
sub
fstp
cld
lock
xchg
je
call
popa
dec
in
or
add
or
jae
leave
push
lock
pushf
push
cmp
jbe
in
mov
mov
or
aad
mov
jb
and
lock
sbb
dec
mov
jecxz
lock
fmuls
cltd
pop
fiadds
inc
add
repz
cwtl
lea
je
std
jg
sub
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
roll
inc
cmp
aas
lods
mov
add
xor
dec
cmp
jge
mov
out
xchg
fildl
pop
and
cmp
jl
je,pn
inc
clc
sub
js
pop
adcb
lcall
iret
jae
fcomps
mov
ret
jp
sbb
pop
pop
and
xchg
clc
mov
testl
inc
and
inc
mov
push
call
dec
lds
mov
mov
enter
or
sub
orb
sbb
push
jmp
add
pop
stos
hlt
jge
add
ret
pushl
sub
mov
add
inc
push
pop
and
and
or
xchg
pushf
insl
pop
xor
xor
push
daa
mov
and
add
xorb
sub
lock
insl
pop
test
int3
mov
mov
mov
jne
push
add
into
xlat
pusha
lock
mov
adcb
dec
ficoms
push
and
adc
cmpsl
cmpsb
ret
sbb
ret
pop
rcr
sar
dec
push
add
pop
mov
sub
inc
sub
cmp
outsb
leave
inc
gs
rcr
fistl
loop
sbb
mov
pop
mov
and
cltd
cs
repnz
lret
adc
insl
call
mov
inc
inc
loopne
loope
inc
or
dec
push
out
nop
pusha
clc
aad
leave
fcomps
dec
or
xchg
sbb
fidivrs
mov
popl
xchg
jecxz
sbb
je
mov
out
jo
add
je
inc
and
mov
push
fwait
sub
or
cmpsl
aad
inc
xor
das
xorl
js
cmp
sub
sbb
or
lock
imul
pop
pop
pusha
testl
cmp
pop
mov
mov
mov
adc
cmp
lea
sub
adc
sbb
sahf
or
xor
mov
orl
adc
dec
je
adc
fiadds
xor
bound
sbb
movsb
clc
sub
outsb
push
sub
or
inc
push
add
pop
outsb
int
ret
add
data16
pop
lret
je
cmpb
movsl
ror
sub
push
pop
or
mov
ss
rclb
ret
addb
inc
shr
sbb
and
add
push
dec
orl
loope
mov
xor
mov
cwtl
sti
mov
cltd
cmp
xor
or
or
jl
dec
pusha
add
inc
cli
jne
and
and
jbe
jmp
push
bswap
xorl
rclb
add
sar
lock
add
sbb
gs
mov
sub
sub
jbe
dec
pop
fucomi
jae
add
ds
pop
push
test
mov
pusha
pop
pop
push
ss
inc
mov
bound
or
xor
pushf
and
jp
add
push
and
in
andb
loopne
mov
mov
enter
in
dec
shll
cltd
test
adc
inc
cmp
add
in
inc
cmpsb
ret
or
mov
mov
xchg
mov
fwait
movb
fsubrl
xchg
je,pn
jo
jmp
cld
shrb
jecxz
in
xor
inc
imul
sbb
icebp
mov
mov
pop
mov
test
je
or
je
cmp
test
and
pop
mov
add
add
push
sbbb
push
scas
inc
rol
std
inc
jg
xchg
sbb
mov
add
xor
and
test
sbb
pop
dec
add
and
test
je
push
jne
in
test
bound
sbb
movsb
or
push
inc
repnz
adc
sub
cmp
cmp
jnp
add
arpl
and
rclb
scas
jns
mov
fs
inc
pop
pop
pusha
icebp
into
addb
push
mov
js
add
pop
jmp
adc
adc
xchg
pop
loop
pop
xchg
iret
cmc
enter
imul
jb
dec
and
sbb
mov
jno
ds
cmc
aad
pusha
add
dec
xchg
cmp
adc
cmp
xor
stos
rorb
mov
add
xorb
pop
test
mov
sbb
push
xor
inc
shrl
jle
mov
sub
inc
jle
enter
pandn
sub
inc
ds
or
add
push
lea
push
mov
add
mov
sbb
sub
push
pop
cltd
inc
hlt
les
mov
push
cli
push
lret
xor
std
sub
jl
xor
fbld
push
hlt
jg
mov
sub
iret
push
cmp
pushf
mov
push
aas
add
jmp
lock
movsb
push
ret
orps
adc
sahf
mov
call
xor
xor
loope
lods
sbb
or
decb
push
bound
pusha
pop
mov
add
push
ljmp
cmp
outsl
aad
nop
push
push
ja
mov
pop
pop
mov
cmp
adc
cs
adc
shrl
ds
add
add
xchg
sbb
dec
jns
jb
js
loopne
inc
push
adc
outsl
pop
push
cmp
mov
insb
add
mov
jg
mov
data16
pop
xchg
mov
ret
push
out
aaa
push
test
dec
sahf
sbb
dec
std
mov
mov
jle
ja
mov
ds
mov
mov
push
mov
push
cmp
pop
xchg
arpl
or
push
sub
fsubl
ret
jmp
adc
xchg
jae
dec
notb
pop
xor
rcl
sti
pop
push
xor
add
addb
jne
jmp
push
mov
lea
pushf
pop
push
or
les
pop
or
loope
sbb
mov
add
in
adc
fwait
shrb
or
or
sub
sbb
push
inc
mov
jnp
cmp
adc
cmp
push
bound
js
xchg
out
cmp
sbb
push
inc
xchg
test
sbb
adcb
je
popa
pushf
cmp
and
mov
incl
ret
inc
sub
aaa
xor
sub
dec
push
dec
xor
mov
pop
inc
pushf
pop
jle
inc
add
and
pusha
mov
sti
loope
and
clc
ljmp
fsubrs
stos
push
pop
je
fldl
rcll
fstpl
dec
cld
lds
js
ss
pop
inc
jne
repz
mov
adc
adc
jne
push
divb
cmp
iret
iret
or
jne
or
jne
or
sbb
ret
mov
into
fstpl
andl
aam
loope
andb
movsb
or
jg
sbb
frstor
or
push
pop
insb
sbb
jg
aam
arpl
loopne
testl
or
pop
jecxz
scas
and
stos
outsl
mov
movsl
movsl
lea
movsl
push
mov
cld
repz
jo
jge
js
inc
cmp
sbb
push
jae
mov
push
lea
gs
fmulp
loopne
loope
push
data16
out
push
push
aaa
add
lods
pusha
adc
xchg
insb
xchg
movsb
jge
jne
cmp
sub
jo
in
push
or
fimuls
testl
or
icebp
and
xor
cmp
lret
and
sub
and
push
adc
lods
je
mov
add
mov
or
data16
ljmp
add
dec
jno
jbe
inc
or
orb
rclb
fcmovbe
sbb
mov
pop
jge
and
push
std
xor
cmp
push
pop
or
push
pushf
adcl
add
std
mov
imull
mov
jmp
xor
mov
add
jns
popa
dec
push
push
adc
adc
push
daa
nop
sbb
dec
ds
nop
pop
loopne
fiadds
hlt
xor
sub
inc
or
sub
aam
or
push
shr
xchg
inc
ss
mov
ficoml
or
xor
sub
push
add
ja
push
mov
mov
sub
jo
sub
adc
lcall
inc
or
jno
cmp
arpl
xchg
add
cmp
hlt
xchg
fistpll
mov
add
dec
int3
adc
outsl
jno
dec
insl
sub
mov
jno
movsb
leave
enter
adc
enter
mov
imul
cltd
nop
inc
fisubrs
enter
sbb
add
and
test
stc
fdivrl
mov
push
or
xchg
add
leave
enter
sbb
xchg
jge
and
repnz
pop
inc
jo
loopne
push
xor
in
call
adc
sub
add
sub
jb
rolb
push
ror
enter
jb
sarb
mov
test
mov
movsb
ja
jge
push
and
xor
jl
je
pop
aas
xor
xor
test
popa
push
loopne
jl
shrb
mov
sahf
add
dec
scas
push
outsb
mov
repnz
and
mov
bound
ret
pusha
or
cmp
jle
cmpsl
mov
xor
sub
cwtl
ja
int
test
or
add
mov
cmc
test
adc
jp
pop
jge
fbstp
aaa
hlt
inc
push
cmp
jnp
repnz
add
add
shrb
cs
data16
push
or
sbb
popa
jl
fistpl
dec
lahf
dec
sarb
into
shll
cli
xor
mov
add
xor
lock
adc
call
and
or
dec
push
add
add
fmull
lss
cltd
or
jle
push
mov
frstor
mov
call
mov
push
mov
jno
test
xchg
sub
call
add
mov
dec
mov
cmc
push
les
test
adc
ret
cmp
loop
fsubrs
decl
ret
imulb
push
lea
jne
add
jb
fmull
fdivrs
and
lock
mov
and
jg
test
pop
in
pusha
push
aas
xor
adcl
adc
outsb
movsb
mov
inc
loopne
mov
test
movsb
loope
out
jne
xor
pop
ret
jnp
ret
add
cmp
sbb
or
xchg
cmp
mov
bound
movsb
or
xor
fdivrl
loopne
je
shrb
push
and
sbb
mov
jno
inc
mov
xor
sub
fstpl
mov
cld
mov
jle
inc
push
mov
lret
adc
popa
sbb
inc
mov
inc
fcoml
pop
dec
sub
lds
cmp
push
into
nop
aas
inc
sub
data16
and
sbb
add
test
adc
pop
push
andl
dec
mov
repz
mul
shrb
or
pushf
or
sti
daa
in
xchg
sbb
out
out
fdivrs
or
es
imul
ljmp
jp
movsl
sub
jecxz
gs
rcr
insl
dec
jo
sub
and
fildl
divps
add
mov
mov
pusha
ret
lea
mov
es
out
incl
mov
das
push
xor
mov
int3
cld
popa
pminsw
lods
adc
add
stos
scas
push
pop
faddl
outsb
inc
dec
clc
ja
sub
dec
and
dec
clc
enter
test
or
loopne
inc
subb
lcall
push
push
adc
push
or
fisubrs
js
cwtl
sbb
mov
enter
push
adc
adc
or
ljmp
fsubs
and
pop
push
fsubrl
jle
cmc
ret
add
in
stc
mov
call
push
int3
push
or
pop
cmpsl
mov
mov
icebp
dec
lods
push
or
adc
clc
push
add
test
jae
aam
cmp
ret
push
or
mov
sbb
lahf
lea
rcl
in
cmp
xchg
fsubrs
mov
and
ret
ljmp
and
lahf
push
rcl
cmc
lahf
sbb
dec
xor
and
lock
lahf
mov
lahf
or
mov
ljmp
or
inc
lahf
or
xor
pop
push
test
dec
cmpsl
scas
push
into
fcmovnb
leave
mov
jb
in
lock
imul
mov
inc
pop
out
cld
add
adc
jge
xor
add
push
or
lds
arpl
or
mov
mov
lods
cmp
mov
aam
adc
ret
test
lock
and
out
sbb
xor
insb
sub
addr16
add
mov
add
rcrb
subl
movsl
int
cs
sub
inc
stos
les
and
and
mov
sbb
test
arpl
aad
xor
push
sub
testb
xor
mov
jo
popw
jno
and
mov
xlat
dec
ss
enter
es
mov
mov
fidivl
addb
sti
movl
jmp
aaa
pop
pop
andl
test
shrb
xor
jecxz
push
in
ja
cltd
adc
jl
call
jg
jmp
call
jmp
pop
and
mov
sarb
sub
mov
push
lea
aaa
subl
lock
testb
dec
aas
sub
dec
rolb
test
fnstsw
push
lods
fiaddl
sahf
cmp
bound
add
push
inc
mov
inc
aam
xchg
adc
outsb
movsb
orb
add
ret
sbb
mov
dec
inc
sub
xchg
sub
addl
sbb
push
into
adc
cmp
movsl
or
mov
addb
add
jbe
xor
jne
inc
loop
and
push
jge
subl
stos
inc
and
lahf
mov
and
les
jle
sub
shl
mov
mov
in
movsb
adc
xchg
jge
clc
mov
or
test
das
push
push
add
mov
mov
jmp
jge
test
in
push
test
adcb
imul
fsubl
cmp
jne
popf
clc
jno
push
es
fimull
and
dec
call
mov
nop
aas
mov
pop
and
jne
inc
mov
pop
or
push
rorl
cld
out
pop
cmpsb
push
add
lcall
in
add
jno
dec
js
hlt
jnp
dec
outsl
outsl
lods
or
dec
add
punpckhwd
dec
add
repnz
add
inc
sub
add
add
loope
jb
je
inc
inc
add
xor
add
mov
push
push
mov
adc
mov
jnp
or
cmpl
lods
mov
add
mov
pop
jle
add
movsl
aad
xor
rcrb
sti
pop
icebp
idiv
clc
or
pushl
sbb
popa
cld
nop
jo
leave
sbbl
addb
sbb
add
sbb
out
test
movsb
and
dec
and
add
in
push
mov
jo
nop
xchg
sti
dec
icebp
dec
or
add
outsb
pop
stos
divl
sahf
movsb
add
or
test
js
mov
xchg
out
sbb
rolb
or
and
or
cmpsl
enter
sahf
orb
pop
pop
es
dec
in
pusha
lods
or
iret
pop
adc
cmpb
jo
pop
enter
orb
aas
mov
or
xor
movsb
or
ret
and
xorb
sub
sub
mov
cmp
leave
jae
inc
inc
dec
out
or
dec
push
pop
hlt
mov
and
iret
clc
mov
jmp
mov
and
adc
shrl
loope
sbb
andb
mov
cmp
cmp
imul
pop
and
jb
jp
and
orb
mov
test
pop
rcr
test
adc
sub
push
cmp
pop
subl
mov
or
cmpsl
out
test
enter
leave
ja
sub
pop
rclb
push
daa
sbb
pop
and
pop
adc
push
fisubs
data16
iret
cwtl
and
push
sub
and
or
test
and
and
and
daa
push
or
sbb
andb
jnp
add
push
in
mov
lea
xchg
insb
mov
inc
push
sbb
adc
pop
or
xor
mov
outsb
add
addb
push
pop
add
add
add
imul
sbb
aam
or
mov
ljmp
jl
cmp
ja
je
push
clc
into
mov
cmovl
add
adc
xchg
pusha
inc
in
jns
orl
inc
jnp
and
pop
add
mov
xor
cmpsb
movsb
adc
push
inc
mov
xlat
jo
enter
shlb
sub
mov
or
jo
dec
sub
lds
mov
mov
repnz
mov
xor
cs
add
add
mov
imul
lret
lcall
repnz
es
add
jmp
das
sub
aam
je
mov
int3
xlat
push
scas
mov
push
xchg
adc
add
outsb
in
jne
xor
je,pt
xchg
xchg
jnp
xchg
scas
mov
movsb
jae
sbb
push
sbb
stos
mov
ds
inc
rorb
xor
in
xchg
xor
gs
fsts
lock
fstps
sbb
sbb
adc
sub
mov
push
cmp
dec
imul
gs
sub
mov
push
stos
pop
xor
push
hlt
ss
dec
jecxz
and
xor
and
jp
push
inc
push
jle
mov
mov
xchg
out
add
push
mov
pop
jne
cmp
push
sbb
pop
stc
and
pop
mov
xor
mov
ret
add
aaa
aam
mov
cs
clc
fcoms
push
je,pt
test
rcrb
jle
jbe
push
sbb
out
push
xchg
call
gs
in
aas
xchg
push
out
repnz
inc
push
loope
pop
sbb
sar
lods
jge
xchg
data16
sbb
movsb
xor
and
ror
pop
rclb
add
push
xor
jmp
jbe
mov
or
popf
or
jb
inc
add
add
xor
addb
jecxz
and
adc
push
test
div
inc
cmp
jae
adc
inc
inc
addl
test
mov
mov
mov
pop
xor
adc
mov
and
mov
dec
clc
into
or
ret
push
xor
test
adc
fldl
xchg
movb
dec
les
data16
sbb
fisubl
inc
imulb
nop
dec
sbb
mov
cld
in
rol
in
insl
pop
ja
inc
dec
pop
movsl
mov
jmp
inc
sbbb
jg
adc
cmp
sar
jne
inc
sbb
cmpsb
sbb
cwtl
cmp
sub
int3
inc
pusha
or
and
add
popa
xchg
subb
adc
dec
sahf
inc
mov
or
bound
add
sub
xor
and
inc
cmpsb
arpl
and
adc
lods
inc
es
adc
lods
inc
loope
sub
push
push
call
repnz
jg
push
repz
sbb
or
and
mov
rolb
ret
pop
and
jp
pop
cld
or
or
cmp
je
jo
nop
cmpsl
cmp
xchg
push
lods
and
pop
cmp
jne
push
mov
lds
xchg
cmp
jne
jmp
mov
ret
roll
push
test
xchg
sub
loop
and
or
jmp
rorb
jmp
sub
inc
mov
or
and
int3
rclb
adc
or
icebp
mov
cwtl
xor
or
cmp
je
lahf
dec
mov
pop
or
and
or
push
icebp
lret
sbb
fs
imul
aaa
jecxz
push
pop
jge
fwait
add
lock
push
or
pop
lcall
rol
push
popa
inc
dec
jns
inc
dec
lods
ja,pn
or
adc
fiadds
cmp
and
adc
and
gs
incl
or
pop
orb
sbb
mov
ds
sbb
jg
pop
inc
sub
adc
mov
loopne
repnz
fildl
ficoml
flds
fsubr
add
or
je
sbb
mov
dec
adc
sbb
lahf
push
and
push
dec
adc
sub
loopne
les
adc
xchg
mov
jp
add
shlb
or
and
test
ret
or
std
fcmovnu
loop
xchg
aas
pushf
std
jbe
sbb
fstpl
and
insl
clc
push
andb
mov
out
jg
push
sbb
add
sbb
or
fsub
xor
es
jge
dec
mov
mov
or
sbb
jno
test
add
sub
and
xor
push
shl
and
mov
scas
add
dec
ljmp
pop
dec
je
add
dec
cmp
adc
imul
pop
je
rcr
cs
sbb
sbb
dec
cmp
nop
icebp
sub
rclb
adc
push
push
adc
fsts
aam
push
add
aaa
pop
add
pusha
rcrl
push
push
iret
dec
sub
sarl
int3
mov
cmp
adc
outsb
cltd
adc
icebp
in
ficoms
daa
mov
scas
dec
adcl
leave
out
push
jp
xchg
iret
pop
fldenv
mov
sbb
xor
add
lea
ja
cwtl
in
sahf
inc
dec
dec
push
pop
dec
and
outsl
mov
adc
je
nop
cmp
fs
push
push
out
sub
and
cmp
push
push
leave
test
sub
xor
mov
loop
into
or
out
inc
and
xor
and
cmp
pop
adc
push
jae
xchg
mov
and
pop
push
in
push
into
gs
xchg
pop
pushf
dec
shrb
fwait
sbb
ret
mov
jbe
mov
push
mov
es
fcompl
mov
hlt
and
or
push
cltd
fs
push
push
dec
fisttpl
imul
lret
push
and
pslld
mov
lret
ss
mov
and
adc
xchg
lods
and
shll
shlb
or
aam
data16
jge
jge
gs
add
lock
sub
push
es
sbb
or
frstor
inc
add
daa
jbe
push
es
jmp
fisttpl
rcpps
jne
es
rorb
cmp
xchg
push
cwtl
enter
bound
mov
or
jne
lret
push
out
sahf
out
push
int
jns
mov
adc
cmp
repz
pop
insb
jge
repz
repz
mov
shl
out
lcall
cmp
pop
imul
sahf
out
scas
rcl
repz
and
adc
sub
sbb
dec
add
or
ljmp
push
ljmp
pushf
jbe
f2xm1
mov
fstl
cltd
sub
lods
add
inc
and
mov
mov
sub
inc
push
addb
mov
mov
fcmovb
add
add
test
cmp
add
pop
jp
shll
daa
or
lds
mov
fsub
lds
push
mov
js
lds
aaa
test
xchg
push
and
pop
push
pop
adc
ja
push
push
ss
xlat
pop
dec
add
inc
add
and
add
add
pop
lock
push
imul
sub
add
lcall
rclb
mov
adc
rorl
xor
in
call
loop
outsl
add
call
add
stos
mov
inc
and
add
pusha
aam
sub
leave
xchg
or
add
nop
test
add
lds
inc
mov
mov
out
or
sbb
dec
hlt
adc
enter
scas
mov
add
or
fcmovne
xor
push
inc
mov
sub
leave
mov
dec
jle
jo
add
aaa
jae
ja
inc
cs
loopne
push
popa
add
call
dec
cs
xchg
push
add
xchg
or
mov
aaa
or
xchg
outsl
in
in
mov
xchg
xlat
xor
ret
push
push
movsb
add
jle
add
inc
adc
add
pop
addr16
sub
mov
mov
faddl
hlt
into
daa
nop
mov
pop
mov
rcrb
jno
mov
add
ss
shl
lcall
cmpb
add
leave
add
stc
or
cmp
cmp
sub
push
sub
sbb
sub
popa
mov
inc
mov
test
inc
mov
adc
xlat
xchg
mov
sbb
dec
ret
xor
pop
cmc
dec
ds
push
push
cmp
push
fs
scas
or
ret
movntps
cmp
ss
in
cmpsb
xor
and
mov
push
mov
or
add
fidivl
push
rclb
popa
xchg
add
sbb
rorl
or
xchg
mov
dec
adc
sbb
mov
pusha
xor
lock
dec
sub
movl
lock
stos
sbb
jg
adc
cmpsb
loop
push
mov
in
push
jns
inc
add
mov
mov
jns
pusha
jb
sub
mov
xchg
add
adc
adc
pop
jecxz
jo
test
and
sub
es
adc
ret
lgdtl
nop
int
es
mov
push
adc
add
out
push
xchg
add
fs
inc
or
les
or
jno
xor
test
add
rcl
or
adc
or
cmc
or
add
xor
gs
mov
and
xchg
test
cmpl
add
or
xchg
push
lods
jl
fsubl
sbb
jno
add
and
add
imul
inc
xor
insb
mov
push
lcall
push
sbb
rcrb
movsb
inc
adc
jae
pop
sbb
or
jne
jge
shll
test
push
bound
cltd
add
iret
sub
pop
push
ret
add
rolb
or
or
cs
dec
and
cltd
adc
sbb
inc
pushf
sbb
mov
add
ret
test
xor
add
add
pop
or
inc
add
mov
fwait
xor
rcll
or
add
inc
add
xchg
cmp
push
enter
add
dec
inc
lds
dec
mov
in
sahf
xor
add
add
add
or
and
into
ret
or
adc
and
and
inc
add
pop
ffreep
sub
sbb
shll
push
cli
lcall
add
push
les
aaa
ret
ljmp
bound
mov
or
pushf
cmp
xchg
sbb
adcb
mov
xor
leave
add
and
bound
add
xor
jno
add
add
sarb
shlb
push
and
add
push
xor
movsb
xchg
into
outsb
sub
cmp
mov
aam
iret
xchg
es
cmp
mov
dec
jbe
mov
dec
pop
sub
in
sub
push
in
push
lret
mov
rcll
lods
mov
cmpl
dec
adc
stos
add
scas
push
inc
in
dec
jge
jge
dec
je
jnp
or
cmp
inc
add
out
or
cmp
xor
or
addr16
scas
add
pop
dec
jge
mov
sub
and
push
add
dec
mov
sub
or
mov
add
mov
je
in
bound
inc
cmp
mov
add
lret
scas
bound
push
arpl
add
fmul
rolb
test
xor
imul
sti
ja
sub
xchg
jno
rcrl
mov
or
sub
xor
pushf
idivl
call
or
add
mov
rorl
andb
addl
push
sbb
lret
clc
mov
mov
add
sub
test
push
sbbb
sbb
lret
jp
js
out
push
jl
push
mov
or
xchg
xor
fdivrs
ret
adc
lret
pop
mov
cmpsl
and
sub
or
sbb
mov
xlat
movsb
sbb
in
mov
pusha
out
popa
sub
testl
mov
sbb
popl
pop
and
mov
and
inc
sub
cltd
mov
add
push
in
lret
dec
xchg
xchg
jns
push
sub
sbb
sbb
test
out
inc
lret
enter
nop
dec
add
aad
jbe
test
pop
movl
push
cmovns
ljmp
jecxz
rol
jbe
cmp
mov
adc
cwtl
mov
sub
sbb
test
inc
and
inc
lea
pushf
mov
scas
add
lods
mov
jmp
aam
inc
rclb
icebp
push
dec
daa
or
lea
xorb
lods
mov
adc
lret
pop
call
leave
adc
rorl
js
jge
adc
dec
jecxz
pop
or
stos
or
stos
pop
stc
mov
pop
lods
xor
xchg
shll
mov
sar
sub
cmp
mov
jl
shr
and
cli
inc
jl
or
sbb
popa
jp
adc
cmp
cmp
je
loope
sti
add
add
inc
jmp
movb
mov
add
fs
pop
idiv
pop
repnz
add
cmpsl
in
xor
enter
mov
popa
pop
fdivs
movsb
jmp
adc
adc
mov
mov
cmpsl
push
test
pop
sbb
mov
cltd
pop
sar
and
mov
cmp
ror
sahf
push
icebp
jmp
orl
dec
or
dec
inc
in
mov
in
in
je
hlt
incb
loopne
or
xlat
ljmp
dec
ficomps
cmp
cli
cmp
fidivs
hlt
push
and
push
push
adc
test
xorb
cmp
gs
mov
fldcw
jge
out
lret
push
rolb
in
lea
sbb
cmp
test
or
loop
scas
andl
jmp
pop
fmuls
xor
jp
push
test
mov
or
test
jl
and
daa
or
fxtract
shrb
and
xchg
or
cvtpi2ps
repz
call
enter
sub
sbb
jmp
push
push
xor
adc
repnz
mov
movb
push
sub
adc
lods
in
cmp
push
push
pop
movsb
adc
mov
mov
cli
jmp
daa
mov
gs
sarl
daa
push
jl
jbe
add
sbb
cmpsb
jns
cs
enter
movsb
js
enter
fs
mov
adc
enter
xorl
call
pop
sbb
mov
xor
mov
sbb
sbb
daa
cmp
dec
int3
jns
les
push
push
pop
imul
cmp
and
sub
scas
sub
xchg
xchg
xchg
and
pusha
shr
mov
and
and
add
imul
xor
mov
fwait
insb
shl
sbb
test
jno
mov
xor
dec
in
mov
icebp
pop
jbe
jb
jo
icebp
dec
add
cmp
dec
scas
jns
ret
pop
mov
push
sub
shll
push
inc
adc
fsubrl
push
leave
and
pusha
cwtl
xchg
pushf
dec
jb
nop
pop
mov
inc
or
leave
and
adc
cmpsb
imul
shld
mov
jl
int3
and
dec
in
mov
and
in
cmp
fsubrs
ja
aam
xor
dec
rcl
dec
aaa
in
sub
js
test
adc
sbb
pop
cmpsl
xor
xchg
xor
divl
sub
cmpsl
iret
pop
cmp
dec
adc
push
outsb
mov
fadds
add
dec
push
rorb
les
loopne
push
mov
xchg
mov
in
sbb
jnp
fldz
inc
pop
xor
out
movsb
fcompl
sbb
fsubl
popa
or
add
nop
pop
scas
lods
je
pop
loopne
mov
mov
in
aam
xor
xor
cmp
adc
loopne
xor
call
inc
mov
ds
enter
pop
add
sbb
imul
xchg
lret
rolb
enter
cmp
insl
call
jb
add
cmp
xor
or
roll
outsb
and
mov
add
xchg
add
fcoms
ja
push
cmp
js
cmp
punpckhwd
or
loopne
dec
jb
push
stc
or
test
xor
punpckhwd
pop
pop
addr16
hlt
xor
and
inc
adc
jle
repz
movsb
cs
xchg
lea
add
sbb
ret
mov
pop
pop
mov
push
outsl
imul
dec
push
and
sub
das
scas
out
adc
pushf
push
loopne
pop
imul
push
or
movsl
aas
hlt
pusha
fs
add
inc
sub
jmp
sbb
mov
pop
pop
sbb
pop
inc
popa
push
fdivrs
sti
push
sbb
pushf
fstl
or
and
fisubs
sub
add
mov
inc
inc
sub
rorb
xchg
jle
push
and
pusha
inc
and
sbb
fnstsw
sbb
sub
xchg
fsubrl
das
xor
hlt
pusha
mov
mov
xor
mov
add
insl
je
push
sub
push
sub
xor
je
test
stos
dec
adc
cmp
and
and
in
rcrb
pop
xchg
add
jmp
dec
loop
push
or
andl
sub
jge
shlb
mov
and
mov
rclb
adc
xchg
xor
pextrw
inc
sbb
nop
sub
and
dec
pop
and
push
pop
adc
lods
push
pop
aas
or
xor
cmp
cmp
push
cmp
jge
fmuls
arpl
cmp
ja
fcoms
add
pop
xchg
sbb
ss
xor
pop
xlat
notb
rcrl
movsbl
mov
sub
out
mov
or
icebp
adc
inc
nop
les
loopne
and
jo
aam
jge
aaa
xor
xchg
push
xchg
int3
cld
pop
or
pop
cli
imulb
shrb
pop
fiaddl
xchg
loop
mov
jo
jns
pop
incl
adc
jbe
mov
sbb
cmp
loopne
imul
insb
add
mov
rorb
mov
loop
pop
dec
sub
and
cmpsb
sub
or
inc
xchg
mov
or
mov
push
xor
cmp
decb
add
ret
out
add
das
sub
pminub
cmp
push
pop
movsl
push
loopne
push
sbb
or
adc
or
adc
out
cli
test
imul
or
xor
push
or
repnz
cmpb
xor
fisttpll
ficoms
jne
insb
mov
jp
xor
roll
sbb
and
xchg
imul
add
xchg
jl
lcall
js
int3
or
adc
fsubrs
mov
icebp
iret
adc
xor
aam
pop
pop
cmpl
sub
dec
lcall
cmp
sbb
sub
notb
scas
push
push
cmc
clc
into
and
add
dec
aas
stc
xchg
push
push
pushl
mov
loopne
mov
sbb
int3
push
sub
add
xchg
call
mov
fwait
push
pop
add
mov
adc
pop
and
or
fcmovne
cmp
add
leave
popa
aad
adc
flds
in
adc
inc
sbb
mov
repz
xchg
inc
pop
sahf
cmpsl
sub
pop
mov
jae
mov
xchg
fidivrl
cmp
aaa
cltd
clc
ret
inc
xchg
lret
rcrb
push
les
adc
daa
andb
std
out
push
sbb
nop
add
jmp
ds
sub
pop
or
mov
ds
cmp
out
lret
or
pop
dec
sub
push
and
mov
test
mov
xor
loopne
and
leave
mov
jbe
push
add
popa
iret
in
inc
ja
sub
fiadds
int
test
jl
xchg
cmp
subl
or
cmp
push
gs
push
cmp
in
cmp
inc
cmp
xchg
sub
xor
ljmp
pop
stc
jns
lret
sbb
adc
cmp
dec
add
cmp
xor
or
dec
jne
cmp
or
inc
push
xor
nop
sarl
inc
call
aam
mov
cmp
sub
dec
push
jmp
ret
or
rclb
sub
lods
jge
jge
dec
push
jo
pusha
std
popa
inc
add
lock
adc
adc
pop
sbb
add
ds
adc
pop
and
jl
cld
aas
je
pop
cli
mov
cmp
cmp
dec
inc
leave
and
mov
push
xor
mov
push
push
adc
push
fs
lret
in
sbb
adc
pop
lods
add
mov
pusha
popa
not
cmpsl
xchg
cwtl
cltd
add
insb
push
sbb
xchg
adc
pop
rcr
es
imul
or
inc
mov
cmpb
push
outsb
cmp
push
xchg
pop
adc
outsb
out
and
iret
shrb
sahf
ror
cltd
and
sti
and
cmpl
loopne
push
cmp
jne
and
and
push
roll
outsl
cltd
or
mov
call
pop
int
add
enter
xorl
and
imul
rol
jne
js
add
xchg
btrl
adc
mov
cmp
imul
mov
push
fs
xchg
mov
mov
out
push
cmp
clc
inc
or
push
mov
or
or
lds
jnp
or
xchg
sub
pop
adc
sub
mov
in
js
call
mov
cld
cmp
scas
push
cltd
outsl
push
push
xchg
popa
mov
push
add
popf
dec
jno
and
xchg
fcoms
mov
dec
in
mov
push
insl
lods
and
jp
jmp
and
lret
subl
aad
lea
ret
lods
mov
sub
adc
lahf
lds
icebp
add
push
inc
gs
jae
fcoml
or
cli
es
orb
mov
inc
sub
insb
or
loop
daa
push
and
pusha
or
inc
fnstsw
imul
inc
push
xchg
jge
jbe
shrb
lods
ret
les
and
pop
inc
cmp
jge
popa
es
lret
push
jmp
ficomps
arpl
jbe
insb
daa
push
add
in
inc
or
or
add
jmp
xchg
inc
pop
push
lea
rcrb
add
sbb
sbb
sub
movsl
sub
jp
call
sbb
popa
je
or
ljmp
adc
repz
mov
mov
adc
int
mov
or
loope
mov
jnp
outsb
mov
push
add
push
cltd
jb
push
dec
cmp
or
ret
mov
or
inc
xchg
cmp
or
dec
inc
fistpll
add
push
fists
adc
addl
test
cmc
dec
lea
popl
adcb
adc
xchg
lcall
add
cmp
mov
not
jae
mov
icebp
jp
and
inc
push
adc
nop
cli
mov
jmp
mov
movsl
loope
push
int3
insl
mov
mov
out
fimuls
push
cli
push
js
add
fcompl
loope
pop
sub
jl
cmpl
push
pop
pop
pop
js
mov
xor
loope
pop
dec
mov
popf
sbb
and
and
dec
push
mov
scas
leave
loope
push
dec
push
in
cwtl
les
out
inc
dec
and
dec
and
aam
push
pop
bound
add
sub
mov
in
jecxz
notb
pusha
pop
push
push
mov
test
push
pushf
divl
sahf
rcr
lcall
mov
push
cld
push
nop
adc
xchg
sbb
sbb
imul
mov
or
movsb
adc
rclb
jo
pusha
or
xchg
sbb
push
jne
xor
in
xchg
mov
xor
cmp
cmp
push
or
rcrb
in
xor
into
data16
mov
cwtl
loope
fadds
pop
push
fists
and
mov
inc
cmp
push
add
fstps
sbb
mov
mov
jge
push
dec
adc
addb
mov
or
mov
mov
loop
mov
shr
pop
adc
pop
add
push
adc
pusha
sbb
sbb
int3
sub
clc
sub
fstpt
push
into
and
pushf
xor
sub
xchg
andb
and
xchg
or
data16
push
inc
jb
or
cmp
cmp
or
shll
aaa
lea
pop
jne
bound
jp
js
and
leave
push
faddl
fimull
sbb
add
mov
add
ljmp
mov
push
cmp
sbb
xorl
push
packsswb
sub
scas
aam
imul
pop
and
xor
pop
sub
dec
xchg
add
into
mov
mov
jl
pop
popf
add
mulb
lret
or
adc
push
movl
inc
add
pusha
add
dec
fprem
jmp
cmp
cmpsb
push
xor
cmp
push
mov
orl
add
addl
cmp
mov
mov
add
mov
je
xor
jecxz
pop
cmp
cmpb
or
mov
fidivrs
add
jb
ret
sar
and
pop
dec
add
js
pop
jp
fs
inc
mov
iret
push
popf
fldenv
mov
sub
mov
pop
add
idivb
or
adc
push
out
ja
in
in
xor
pop
xlat
das
mov
dec
inc
push
insb
pop
addr16
lods
or
mov
adc
testb
pop
push
cmp
xchg
sbb
xor
cmp
pop
jl
or
inc
sbb
or
test
lret
or
add
push
or
pusha
and
cmpl
or
xor
cld
or
and
inc
or
pop
inc
adc
mov
repnz
sub
push
adc
inc
std
mov
push
mov
loope
xor
jns
ja
cltd
movsl
cmp
sub
adc
sub
mov
adc
imul
and
adc
mov
cld
cmc
xor
outsb
psrlw
mov
out
or
outsb
mov
xchg
add
sub
pop
jmp
fwait
jo
shl
punpckhbw
sub
es
shrl
pop
and
add
ret
adc
icebp
mov
or
lret
sbb
shll
scas
fnstsw
push
inc
sbb
add
loopne
shl
push
dec
scas
and
bound
push
inc
pop
cli
insb
pushf
data16
cltd
ss
add
sub
js
and
push
and
movsb
jbe
mov
outsb
xor
inc
pop
mov
shl
addr16
sub
cmc
xchg
enter
insb
mov
jecxz
nop
xchg
cmpsb
ss
lods
cmp
mov
pop
ret
dec
jae
mov
pop
or
rcrl
xor
and
mov
sbb
inc
dec
add
push
add
fldenv
in
and
andb
movsb
mov
sub
fsubl
or
sbb
sbb
test
leave
or
xchg
iret
cmpsl
and
scas
pop
mov
imul
testl
push
mov
and
and
addr16
in
or
sub
cli
pop
pop
mov
aam
insl
rcrl
addb
pop
push
int
es
fidivs
add
lods
adc
sub
add
mull
leave
bound
test
pop
or
mov
aaa
pusha
xor
push
sub
add
fwait
daa
mov
loop
sbb
cmp
cwtl
or
rorl
add
in
lods
ds
test
jbe
mov
pop
mov
inc
mov
sub
jl
hlt
pop
in
mov
xchg
je
push
pop
and
mov
stc
sbb
cmc
sub
orb
pop
aam
add
push
lods
pop
outsb
mov
mov
xor
popa
mov
adc
dec
xor
cwtl
sub
inc
xchg
les
pop
xchg
mov
sub
push
mov
adc
add
add
rorb
scas
cmpb
adc
push
addr16
je
lea
sub
dec
mov
mov
test
test
lea
or
cmpsl
and
ss
loope
push
sub
xlat
push
xchg
lock
or
cmp
cmp
push
cwtl
sbb
or
adc
and
cmp
sub
add
lds
insb
lcall
cld
ror
andl
dec
push
sub
mov
hlt
add
and
add
mov
push
pop
dec
int3
xor
add
sub
xor
dec
cltd
sbb
jle
dec
enter
int
sub
add
adc
outsb
lods
cld
daa
orb
add
rorb
btc
xor
pop
and
xor
sbb
and
xor
mov
mov
push
repnz
sarb
dec
xlat
mov
jb
xchg
xchg
incl
inc
add
xor
push
mov
and
rorl
shlb
sarb
repnz
cmp
pop
dec
cmp
nop
ret
push
insl
andb
rol
push
or
in
or
xchg
int3
push
rorl
adc
sbb
or
ds
cmp
or
rcrb
ss
out
pop
push
mov
clc
xor
push
mov
and
jg
sbb
dec
outsb
dec
pop
add
mov
and
pop
gs
and
and
push
mov
pusha
push
test
sbb
or
add
subb
popa
xor
pop
shufps
je
dec
ja
movsl
loope
jg
push
inc
lock
sub
add
pop
pusha
loope
jno
jb
mov
sbb
test
rolb
mov
xchg
inc
adc
test
shrb
cmp
xor
sbb
jle
inc
cmp
jb
jmp
xchg
cmp
repnz
addb
push
data16
divl
mov
mov
jo
cs
test
pushf
add
pop
push
xor
sbb
add
inc
and
jo
aaa
add
imulb
and
pop
pop
pop
sbb
push
mov
add
call
int3
jo
pusha
mov
arpl
das
cmp
pop
in
test
xchg
insb
jae
sub
andb
sbb
sub
andl
fs
sub
outsb
mov
mov
adc
or
or
lahf
das
sbb
push
repz
xor
xor
decb
in
dec
les
test
mov
inc
sub
push
xchg
imul
xchg
adc
jl
push
pop
add
xchg
jbe
inc
dec
pop
call
cmc
or
lcall
sti
pop
and
outsl
xchg
or
xor
push
mov
xor
sbb
jmp
movsb
push
or
add
scas
test
jnp
add
push
push
hlt
dec
pop
in
add
push
add
dec
add
cwtl
mov
push
std
ficoms
stos
xor
push
or
jmp
rcl
cmp
pusha
add
test
pop
mov
push
mov
jl
sub
or
shlb
jbe
xchg
fdivl
js
jge
mov
push
add
pop
mov
fisubl
enter
push
add
pop
rclb
push
add
mov
xor
cmp
lea
loope
ret
adc
popf
movsl
xor
jnp
mov
in
shrl
fmull
cmp
lods
cmpsb
roll
outsl
sub
cmp
jmp
jb
mov
cmpl
loopne
adc
pushl
fstpl
push
frstor
ds
dec
ja
rclb
adc
or
inc
int3
test
adc
dec
aaa
pop
dec
lea
pop
push
jns
xor
popa
popa
in
pop
push
lea
cmp
or
mov
cmpl
sub
inc
dec
sbb
jae
inc
jmp
pushl
or
add
xchg
pop
stos
sbb
pop
xor
and
imul
dec
test
pop
int3
insb
inc
scas
adc
stos
or
mov
rol
inc
es
push
das
cmp
in
mov
popl
jge
adc
add
push
or
bound
int
loope
push
fcoms
popa
inc
push
cmp
mov
je
mov
sub
in
cmp
xchg
add
test
inc
or
inc
loopne
loopne
mov
dec
mov
movsb
mov
xor
sub
inc
jmp
sub
call
and
out
pop
sbb
ljmp
mov
test
mov
inc
jge
xchg
cwtl
and
pushf
dec
test
and
push
fdivl
rclb
inc
out
sub
cmc
jl
ljmp
mov
cmp
adc
push
add
push
push
sbb
rclb
adc
shll
stc
mov
pop
nop
pusha
loope
test
jl
pushl
ljmp
inc
pop
xor
xchg
mov
push
pusha
push
testl
mov
outsl
mov
pusha
cmp
jl
add
bound
push
push
out
push
push
inc
in
dec
push
xchg
mov
or
out
cmp
je
filds
xor
pop
sahf
sbb
or
dec
lcall
and
sbb
jecxz
jns
add
mov
repnz
xchg
lods
adc
in
nop
or
je
sbb
pop
mov
xchg
xor
pop
and
push
push
or
inc
and
push
cwtl
sbb
and
jl
and
xchg
pop
call
mov
push
add
loope
adc
dec
aas
xor
std
jmp
mov
int
loopne
outsl
add
mov
inc
cmp
xor
cmp
xchg
mov
out
push
or
in
in
push
test
jmp
jb
dec
out
loopne
fadd
imul
inc
lock
push
pop
lret
fbstp
pop
adc
and
data16
subl
ja
daa
push
std
cmpsb
mov
push
shrb
ds
add
pop
sub
push
inc
adc
mov
scas
mov
dec
mov
inc
hlt
xor
mov
negb
pop
and
sbb
popa
mov
dec
movl
in
mov
int3
adc
rorl
mov
and
jmp
mov
xchg
out
lea
fldt
xchg
dec
jo
add
or
sub
xor
push
orb
adc
adc
fldenv
dec
inc
sbb
and
and
je
lock
sub
jne
sti
push
dec
clc
jb
and
jl
cmpsb
adc
mov
shll
add
sub
or
mov
lahf
rol
test
mov
or
inc
mov
and
aam
push
loopne
or
sbb
jo
pop
cmc
not
test
adc
clc
pop
mov
jnp
or
and
jmp
nop
lds
mov
inc
add
xor
mov
add
inc
xor
sbb
not
ficoml
mov
icebp
adc
mov
dec
addr16
aam
lea
push
cmp
rorl
pusha
mov
sbb
jne
mov
push
in
fs
pop
sbb
popf
out
xor
fdivrl
fs
lea
and
adc
inc
pop
push
adc
ja
mov
push
cmp
dec
jb
inc
push
mov
xchg
push
sub
pop
sbb
mov
fmull
in
clc
mov
mov
rclb
test
loope
test
ret
imul
jmp
adc
add
mov
fistl
sub
add
sub
loop
adc
jne
pop
jl
call
rep
mov
push
jb
mov
loop
cs
aam
andl
dec
shll
push
das
adc
xor
loopne
mov
je
adc
jns
test
ja
mov
mov
cmpsl
push
adc
jbe
mov
hlt
or
cmp
mov
cmp
movsl
mov
push
shrb
xor
bound
clc
adc
fwait
cmpsl
andl
cmp
rcrb
bound
add
repz
hlt
jnp
adc
je
pop
imul
jl
stos
jmp
adc
or
sbb
pop
mov
adc
cld
into
add
dec
sub
xchg
pop
cli
sbb
lret
aaa
jge,pn
orl
pop
add
sahf
jmp
neg
xlat
test
sbb
jmp
mov
out
loope
xchg
sbb
push
sbb
loope
sbb
sbb
and
inc
cmp
pusha
adc
outsb
inc
push
dec
cli
pop
xchg
sbb
loopne
inc
xchg
jmp
push
ret
pop
mov
dec
jle
pop
mov
adc
incl
dec
push
xlat
add
fcomps
inc
add
test
jle
push
sbb
lahf
pop
icebp
add
push
jge
inc
add
mov
mov
jae
mov
cmp
comiss
in
inc
add
mov
sbb
pop
add
movsb
mov
sbb
jp
sbb
mov
jno
es
jg
jo
cmp
push
adc
popa
fistps
jp
ret
les
inc
mov
inc
les
xor
shr
and
ljmp
vpsrld
mov
cmpsb
xchg
ljmp
pop
enter
fdivl
jle
add
push
mov
mov
jmp
inc
add
sbb
out
mov
sahf
movntps
adc
inc
mull
push
xchg
fnstsw
jmp
pop
clc
jne
loopne
pop
outsl
cmp
cmp
cmp
test
dec
test
sbb
ljmp
push
dec
cmp
and
xorl
jl
xor
sub
jb
loopne
fcoms
mov
out
push
fwait
jg
dec
rcrl
push
in
and
inc
mov
cmp
inc
inc
je
rolb
xchg
fcoms
pushf
mov
in
sarb
nop
cli
pop
roll
push
imul
mov
mov
das
or
scas
daa
add
call
fcom
fidivrl
xor
and
sub
shll
sbb
and
jb
add
icebp
and
or
xor
inc
jp
icebp
adc
cld
dec
adc
test
jp
lahf
mov
movsb
push
mov
aam
test
loopne
add
pop
test
loopne
mov
jne
jecxz
mov
mov
jmp
cs
xor
cmp
loopne
adc
xchg
mov
ss
mov
sbb
aad
xlat
sbb
addb
cmp
incb
loope
xchg
jnp
sbb
popf
mov
push
push
push
xor
cmpsl
add
enter
aaa
clc
push
cmp
jbe
mov
call
adc
mov
mov
in
mov
rcr
jl
push
vmread
jp
sti
xchg
enter
js
mov
test
push
or
insl
shl
jnp
aaa
push
shl
aad
fmul
push
xchg
fdivp
pop
dec
jl
imul
sahf
push
ss
adc
adc
push
mov
incb
jl
cmp
outsb
push
pop
jp
mov
dec
mov
jne
jb
cmp
ljmp
and
cmp
lods
outsb
hlt
cmp
jle
dec
pop
mov
mov
or
sahf
mov
push
mov
jl
jge
sbb
cmp
pop
adc
adc
hlt
cmpsl
repnz
add
movsl
nop
arpl
adc
scas
inc
cmp
mov
pop
nop
rolb
test
push
loop
mov
arpl
cmpb
sub
or
fistpl
mov
jns
outsl
jl
mov
jo
inc
mov
add
cmp
mov
dec
mov
jb
add
loopne
cmpsb
pop
pop
mov
sti
rep
movsw
push
loope
add
cld
movsb
mov
push
es
hlt
call
mov
adc
ljmp
or
mov
test
sti
jne
cmp
jle
movb
cmpb
ss
adc
fnstsw
mov
mov
push
enter
shr
add
movsbl
xor
ror
ss
pop
and
push
push
mov
adc
sbb
jbe
push
cld
je
js
jae
push
push
popf
dec
and
shll
dec
push
cli
cmp
test
jnp
addl
shll
sbb
pop
fst
outsl
jge
inc
ljmp
les
or
aaa
mov
adc
ljmp
sbb
and
shl
cmp
jl
adc
sbb
int
adc
mov
add
mov
sbb
lcall
push
out
dec
push
pop
cmc
ss
popa
in
mov
fwait
cmp
push
push
lods
or
lock
xor
inc
test
rolb
clc
dec
and
push
mov
pop
or
mov
movb
imul
cmp
cmp
push
pop
or
fdivrl
or
jnp
or
jbe
jmp
or
push
jmp
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
push
jmp
pop
jmp
sbb
xor
fcompl
jmp
sbb
es
and
push
jmp
pop
jmp
and
or
cmp
add
adc
fimull
push
add
ja
xchg
push
mov
bound
es
popa
and
dec
xor
addb
dec
outsl
ja
xchg
cmp
cmpsl
scas
mov
repz
repz
iret
repz
xlat
fsub
out
lock
add
or
out
push
adc
sbb
out
sub
or
add
testb
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
dec
dec
mov
and
or
add
sbb
or
or
inc
pop
addl
repnz
out
fbld
cmp
add
idivl
mov
js
nop
fistpl
push
or
jl
mov
js
xor
test
mov
fdivs
sub
mov
xlat
in
xchg
sbb
pop
movsb
xor
add
sub
cmp
inc
add
clc
filds
pop
sub
mov
inc
cmp
jbe
dec
pusha
mov
ficomps
popa
dec
test
test
mov
push
push
push
mov
push
enter
inc
push
or
push
orb
dec
scas
mov
ja
lcall
imul
pusha
test
or
sub
mov
cmpsl
leave
adc
loope
mov
and
mov
aas
lock
and
enter
inc
xorl
sbb
sub
xchg
jns
add
add
jne
sub
inc
jp
inc
enter
or
xchg
jo
nop
pop
rorb
push
sub
fsub
mov
add
jmp
xchg
adc
mov
and
sbb
test
adc
or
incb
fsts
sbb
fwait
add
push
push
push
pop
xor
lods
dec
test
xor
ja
mov
add
ljmp
mov
and
lods
pop
mov
bound
push
pop
cmp
dec
call
sti
push
xor
data16
out
decb
sbb
adc
fsts
mov
lock
pop
sub
jae
mov
int3
arpl
xchg
fidivs
xchg
push
imul
test
ss
push
sbb
jb
lret
aaa
xlat
adc
mov
pop
sub
push
ljmp
jle
cmpsl
bound
lcall
mov
outsl
push
jne
into
nop
add
pop
loopne
xchg
les
mov
cmpsl
lock
sarl
xchg
pop
or
out
mov
jmp
scas
add
sbb
sub
push
insl
dec
jne
pop
insb
jmp
inc
xchg
jbe
cld
push
roll
push
pop
mov
loopne
sbb
pop
cmp
xchg
or
rorb
and
js
mov
dec
call
inc
leave
jno
or
sbb
jmp
push
mov
ret
add
xor
cltd
cmpsl
lock
push
push
lock
clc
adc
into
xor
cmp
cmp
push
adc
xchg
or
jl
adc
adc
or
mov
sbb
lret
and
shll
frstor
fnstcw
xchg
xchg
xchg
xor
mov
xchg
scas
add
fbld
jo
popl
xor
dec
push
mov
add
ret
cmpb
push
push
add
ret
orb
mov
clc
mov
es
cmp
je
or
sbb
lods
mov
inc
mov
xlat
mov
cmp
movsb
mov
mov
mov
mov
or
or
lret
sbb
inc
cmp
mov
dec
xor
mov
xchg
push
or
sbbl
les
dec
xchg
loop
push
inc
and
inc
lret
cli
sub
and
lret
lods
push
rcrb
enter
and
popa
int3
sbb
xor
roll
shl
ror
add
enter
cmp
sahf
fmul
shlb
jecxz
aad
mov
inc
pop
xor
andl
mov
cmp
jbe
sbb
push
add
push
les
push
movsl
ds
or
push
inc
jo
cmp
jne
test
inc
inc
push
enter
pop
imul
aas
jmp
add
mov
pop
popf
dec
les
add
inc
fsubrs
std
and
xchg
dec
das
xor
mov
loop
je
nop
push
adc
jmp
loopne
cmp
orb
nop
dec
roll
iret
negb
lock
enter
add
loopne
or
and
loopne
push
dec
leave
xor
repnz
enter
add
enter
xor
and
add
adc
add
sbb
cmp
les
mov
xchg
push
add
pfrcp
pop
push
je
mov
cltd
push
or
pop
xor
add
push
push
mov
add
adc
movsb
mov
out
mov
pushl
ljmp
ss
sub
sub
or
pop
and
in
fstpl
lods
pop
lahf
pop
dec
adc
dec
es
jb
sub
insb
loope
push
insl
ret
and
sub
fcompl
movb
xor
in
pop
jle
inc
pop
loopne
cmp
popf
pop
nop
jge
mov
sub
sub
bound
test
adc
add
daa
mov
jl
add
popa
aaa
andb
adc
adc
movsl
mov
popa
fcoml
int3
cmp
push
loope
sub
jo
pusha
in
jmp
mov
mov
jl
jge
fisttpll
out
es
fiaddl
add
sub
in
add
cmpsb
push
subb
in
xchg
pushf
jno
popf
cmp
cmp
push
mov
adc
and
adc
dec
dec
add
inc
sub
sbb
inc
inc
arpl
or
hlt
push
pop
jno
jae
xchg
imul
js
cmp
add
stos
pop
mov
idivb
je
in
jmp
add
cmp
jle
arpl
jb
inc
xchg
and
or
jo
fcom
and
out
and
pop
sbb
adc
idivl
repnz
push
or
lcall
popa
adc
call
mov
lods
cmp
jne
sub
cmp
je
mov
pop
lcall
sbb
jns
or
loopne
push
xor
jbe
add
sub
lock
sbb
push
add
jns
in
or
sbb
sbb
lock
push
jb
xchg
xchg
iret
sbb
inc
xchg
mov
inc
jbe
ret
mov
add
icebp
push
mov
cmpsl
cltd
jne
xor
lahf
imul
and
xlat
or
int
push
sarl
arpl
sbb
sbb
cmp
ss
pusha
inc
scas
pop
and
faddl
add
pop
and
and
arpl
jl
push
outsb
xor
inc
popl
push
and
jg
or
andb
bound
add
xor
inc
mov
push
or
sub
add
sbb
rolb
dec
call
xor
dec
enter
test
xor
sbb
sbb
pop
dec
sub
and
push
jmp
enter
sbb
xchg
je
sub
mov
sub
jb
adc
movb
pop
adc
push
push
movsb
lock
jl
jae
add
push
push
sub
xor
jle
filds
or
ds
inc
add
orl
fs
inc
pop
inc
pop
inc
jbe
je
push
aas
pusha
adc
and
inc
insb
jo
pop
js
enter
clc
cmp
rolb
out
inc
push
mov
lahf
nop
fidivl
outsb
xchg
aas
fs
cwtl
pop
xchg
outsb
xchg
outsb
pushf
pop
mov
xor
lods
mov
mov
mov
ljmp
adc
das
paddusb
dec
cmpsb
fidivl
sbb
aas
and
setge
cmpb
and
or
add
lea
push
mov
pop
push
push
movb
mov
aaa
sub
jbe
nop
lret
ret
and
inc
add
pop
mov
push
cmp
jl
sub
lea
ret
mov
inc
repnz
je
outsb
add
lea
ja
jecxz
or
sbbl
fildl
xchg
fistpll
cmpsb
bnd
lock
mov
lods
sub
inc
and
in
sti
cmp
outsl
and
pop
jl
jmp
out
push
xchg
push
pusha
enter
les
call
sahf
mov
aas
push
fdivr
cmp
je
and
into
push
cli
and
and
insl
dec
jne
call
rorl
js
sbb
sbb
mov
das
sub
or
je
js
rorl
jl
and
jmp
fwait
dec
push
mov
imul
fs
je
mov
add
cmp
call
xor
mov
add
xlat
pop
add
adc
cmp
or
cmpb
mov
lea
add
jg
fisttps
fisttpl
cmp
maxps
ss
cli
xor
sbb
pop
fstpt
and
lock
pop
sub
aam
pushf
inc
dec
xchg
js
stos
add
adc
adc
mov
and
js
add
pop
jne
push
inc
pop
inc
push
cwtl
das
adc
xchg
push
jp
push
jne
and
pushf
push
mov
mov
add
add
xor
add
clc
cmp
jne
mov
ljmp
inc
mov
and
test
jg
or
jle
sbb
addl
and
jecxz
dec
ret
xchg
mov
sahf
sbb
lret
outsb
xor
pusha
sbb
inc
push
movsl
and
add
dec
push
clc
jmp
mov
adc
lret
cmp
cmp
movups
mov
cmpsl
ss
xchg
cmp
les
and
mov
ljmp
stc
inc
ds
fwait
adc
sar
mov
aas
jne
push
adc
adc
insb
cmp
mov
mov
mov
sbb
mov
movsb
cmpsb
sub
ljmp
inc
add
nop
pop
in
push
cltd
ss
sub
inc
sbb
in
ss
push
push
imul
mov
mov
jne
into
push
into
push
mov
mov
jmp
mov
or
push
jmp
js
xchg
or
or
jne
lds
rcrb
fldl
or
js
rorl
test
jo
lods
repz
pop
and
ret
sbb
xor
push
or
add
sbb
sub
lea
mov
sub
jnp
aaa
sub
ret
js
fsubr
insb
xchg
int
fildl
lds
xor
mov
testl
lds
in
xchg
push
stos
sbbl
addr16
test
cmpl
push
mov
mov
xchg
cmp
jp
jp
pop
repnz
push
xchg
mov
add
sbb
add
lock
test
pushf
xchg
xor
inc
or
sbb
imul
mov
and
jmp
pop
jo
mov
jmp
jne
xor
push
xor
movzbl
nop
adcb
cwtl
xchg
sbb
mov
cmc
and
dec
pop
sarl
jmp
adc
or
adc
out
mov
mov
inc
pushf
mov
add
mov
adc
push
mov
and
or
push
test
xchg
or
or
in
ds
mov
jae
insl
dec
mov
je
lods
inc
xor
inc
jle
or
test
mov
sub
fmuls
fmuls
pop
mov
inc
das
add
mull
xchg
bound
mov
sub
sub
or
mov
lods
jecxz
loope
aam
adcb
ss
mov
pop
jp
pop
mov
rcrl
icebp
les
les
or
xlat
inc
or
aas
xor
icebp
pop
inc
rcrl
mov
loope
aaa
jle
and
mov
adc
pop
inc
js
pminsw
dec
jmp
inc
mov
adc
lds
pushf
rcrl
sub
shl
push
pop
bound
lea
add
mov
fldenv
push
and
leave
out
shll
sbb
push
sub
push
pop
in
scas
enter
lods
push
inc
mov
inc
pop
sbb
and
lea
outsb
adc
in
push
mov
inc
and
push
push
or
adc
sahf
mov
shlb
fcoms
ret
xchg
fisubl
push
adc
push
adc
jl
movsl
or
and
fs
aas
push
subl
test
adc
imul
pop
pop
push
adc
adc
mov
pop
subb
or
cmpsl
faddl
loop
add
fstl
fldz
fcomp
fnstsw
push
das
lock
push
in
pop
fsubr
pop
faddp
je
push
pop
xchg
mov
insb
sbb
or
ja
popl
loope
pusha
in
int3
hlt
cmp
cmp
xor
xchg
addb
inc
imul
dec
or
lock
dec
popa
clc
hlt
add
cltd
mov
test
cmpsb
nop
adc
add
sbb
push
pop
xchg
lcall
in
stos
out
inc
mov
fnstsw
cmp
push
lcall
in
out
xor
xor
fwait
push
xor
push
add
sbb
add
bound
nop
into
lret
outsb
xchg
ficomps
xor
inc
mov
jge
mov
pop
xor
mov
ror
test
push
pop
mov
xor
imul
add
lods
add
hlt
jp
dec
addr16
lea
pop
push
addr16
sahf
out
or
mov
imul
enter
cli
fsubrl
loopne
out
add
out
jl
sub
xor
setl
or
jp
or
dec
sbb
push
inc
leave
dec
rclb
xchg
adc
cmp
jne
ja
mov
mov
jge
push
ror
movb
loop
or
ffree
adc
add
sbb
adc
rol
rolb
push
sub
outsl
dec
pop
cmpsb
sub
dec
sbb
sbb
or
mov
add
push
lods
lret
lods
xchg
stc
sbb
push
cmp
sbb
xchg
and
or
cmp
xchg
cmpl
xor
xlat
ficoms
js
fdivrs
das
popa
or
mov
sti
out
ss
fisubrs
sub
add
push
ljmp
adc
int
out
or
aaa
add
jne
add
pop
dec
mov
push
cmp
cmpb
fcompl
out
lret
dec
cmp
jb
push
or
and
pop
jb
adc
and
sub
or
je
mov
es
inc
mov
sbb
xchg
or
fisttpll
adc
ficomps
movsb
add
ret
mov
mov
inc
xchg
adc
dec
add
sub
das
sbb
xor
and
push
pop
cli
icebp
test
jne
je
push
pop
bound
fst
jl
add
inc
test
test
fcmovnbe
sub
xchg
adc
jnp
push
lock
xorl
and
and
jbe
add
add
dec
pop
inc
cmp
pop
dec
orl
fsts
adc
pop
imul
xchg
cmp
dec
xchg
inc
and
nop
ficompl
test
psubsw
std
rcrl
test
pop
adc
adc
mov
dec
loope
or
bound
jae
and
cmpsl
cmp
insb
mov
sahf
inc
pop
fcoms
and
adc
loop
ljmp
arpl
pop
rolb
push
push
std
push
loope
pusha
cmp
cs
pop
fidivl
sbb
push
jmp
dec
add
adc
movsl
jo
cmp
fldenv
add
mov
imul
in
sbb
dec
movsl
jne
mov
adc
aam
pusha
or
in
or
lret
flds
aam
mov
repz
out
sbb
daa
sub
jge
fidivrs
jg
and
add
popa
pop
jbe
divl
dec
push
jno
movsl
lods
push
dec
mov
pop
andb
das
imul
inc
pop
dec
lea
push
mov
int
fsts
push
dec
stc
or
dec
sub
mov
xor
sbb
lcall
fmuls
cmp
cld
xchg
jnp
adc
or
shll
inc
in
enter
or
inc
cmp
pop
insb
sub
inc
push
mov
or
pop
xchg
xchg
loop
pop
daa
mov
jno
push
rcrb
mov
or
sbb
movsl
ja
inc
scas
xor
je
and
cli
inc
jb
push
mov
mov
push
fnsave
xor
mov
dec
lret
sbb
addr16
or
aam
jecxz
mov
fwait
insl
in
inc
push
mov
shrb
mov
es
add
pop
fsts
mov
mov
lock
addl
push
pop
cmp
mov
lock
and
and
mov
lock
add
call
mov
mov
pop
xchg
arpl
xchg
pop
add
cmovns
lods
push
xor
outsl
push
repz
nop
mov
lods
pop
insb
mov
ljmp
push
inc
inc
add
xor
dec
lea
popa
mov
test
xor
sbb
xchg
rcrb
js
dec
leave
xor
fs
mov
jecxz
ljmp
xchg
sbb
repnz
outsl
xchg
jo
pop
imul
dec
aam
ret
xchg
sub
lods
or
lret
and
adc
lock
xor
mov
dec
in
sub
scas
or
pop
cmp
or
in
sbb
bound
nop
add
jno
lea
inc
add
fsubrs
mov
test
leave
mov
xlat
mov
nop
inc
sub
xchg
add
fdivrl
js
xor
aam
lahf
xchg
xchg
add
data16
mov
push
jbe
pop
push
add
subb
xchg
jo
mov
sbb
mov
pushf
mov
imul
add
lock
dec
lcall
lock
jge
dec
xor
aaa
adc
inc
sub
and
inc
add
repz
cmp
jmp
push
in
mov
mov
or
push
imulb
add
out
vrcpps
push
add
movsb
xchg
je
inc
lock
dec
in
daa
push
push
mov
mov
push
sub
inc
gs
and
add
ret
lahf
inc
sbb
push
push
lds
sarb
and
pop
pop
adc
push
add
adcb
mov
scas
xor
rcrb
and
push
push
mov
push
orb
add
cmovns
adc
dec
shrb
or
adc
cs
and
and
adc
rcll
dec
lock
sbb
pop
or
and
in
inc
lock
push
jno
push
dec
xchg
dec
mov
sub
fisubrs
loope
in
mov
test
mov
pop
xchg
mov
clc
push
pusha
push
add
push
pop
add
xchg
int
xchg
jecxz
popf
cmp
std
pop
mov
js
lods
xlat
test
push
mov
mov
xchg
xchg
aad
pop
aam
and
mov
xchg
add
in
add
add
das
xchg
xor
mov
sbb
pushf
or
enter
pop
sbb
pop
jnp
add
or
lahf
mov
xchg
mov
nop
push
adc
loopne
xorl
push
mov
bound
inc
add
or
fcoms
mov
popf
aam
inc
push
outsb
or
fisttpl
jecxz
loopne
faddl
or
dec
adc
incw
lock
push
push
sbb
or
popf
das
cmp
movsb
dec
or
lahf
mov
sub
xchg
and
add
mov
mov
add
xor
neg
sti
mov
shr
or
lret
push
add
pop
call
or
or
leave
mov
loop
adc
ds
mov
jne
in
inc
icebp
xor
cmp
sub
andb
push
loopne
push
xchg
jo
lock
sti
adc
jne
std
inc
or
xchg
test
mov
push
sbbl
mov
cwtl
push
pop
popf
mov
mov
test
mov
jmp
aad
or
sub
adc
sbb
add
rorb
pop
jo
sub
and
pop
pusha
scas
and
or
inc
sub
es
mov
ficoml
cli
adc
pop
lods
dec
push
push
and
dec
jo
ror
pop
pop
test
add
xchg
jo
test
test
xchg
arpl
jns
lock
mov
fwait
dec
or
ret
push
sub
mov
movsb
ret
and
push
andps
icebp
jmp
cmp
sub
xchg
dec
push
cmp
aad
mov
jl
xchg
mov
or
or
ss
lods
pop
rcrb
out
mov
add
fisubrs
movl
sub
push
enter
adc
dec
xorb
cli
cmp
imul
sbbl
cmpsb
cmp
pop
jmp
lock
and
jl
das
xorb
jb
in
loop
lds
pop
sbb
mov
mov
push
or
and
jne
adc
sbb
pusha
mov
lcall
cmpsl
push
and
add
or
int3
lea
aam
xor
xchg
mov
xor
aam
and
shld
ja
out
push
cltd
cmp
pavgb
fs
push
ret
push
push
jo
push
je
bound
dec
add
adc
xor
lcall
mov
push
loopne
inc
xchg
cmpsl
or
jmp
addb
repnz
pop
rcr
mov
mov
rclb
shlb
lret
and
pushf
lcall
pop
rolb
mov
adc
repnz
sub
push
fwait
mov
stos
test
mov
add
test
mov
inc
push
sahf
mov
inc
iret
stos
dec
mov
dec
mov
sub
data16
sub
test
pop
je
mov
out
movzbl
pop
mov
mov
nop
popf
push
clc
mov
incb
jno
mov
pushw
jl
dec
push
or
imul
inc
lret
test
push
add
push
or
xchg
clc
loopne
das
aaa
test
adcb
xchg
push
xchg
add
mov
ja
shrl
or
or
sbb
stos
test
dec
rorb
cmc
and
add
or
sub
xor
pushf
add
add
inc
test
or
pop
cmp
lret
inc
push
addb
test
add
lahf
arpl
test
mov
or
push
jecxz
dec
add
jl
push
adc
imul
mov
cmc
or
xchg
hlt
and
hlt
insl
add
cmp
cmp
jo
add
je
or
cmpsb
jne
je
in
cmpl
xorl
xchg
movl
sti
add
mov
clc
lds
jo
ret
push
sub
nop
mov
or
lods
sahf
xchg
mov
repnz
jo
clc
pop
push
in
cmpb
mov
push
ja
or
mov
hlt
stos
add
mov
jno
je
inc
imul
pop
jl
xor
cmp
mov
test
hlt
add
lret
lock
fwait
loope
js
leave
pop
cmp
shrb
push
sbb
or
xor
push
push
inc
push
movsb
jb
nop
nop
add
nop
lcall
shlb
mov
lahf
sbb
pop
or
xlat
test
dec
or
mov
loopne
jp
mov
lea
nop
mov
repz
jne
adc
or
xchg
gs
cmp
push
mov
ret
fdivl
xor
pop
and
mov
jge
pop
mov
in
cld
pop
sbbb
push
es
insl
xor
pop
sbb
sahf
hlt
push
mov
shlb
inc
aam
addr16
pop
nop
jbe
jl
adc
cmp
fimuls
xor
insb
dec
dec
shrl
lods
mov
cmp
cmp
fistpl
dec
push
fs
aam
push
rol
inc
ja
cmp
insb
dec
xchg
jno
jge
or
sub
cmp
inc
jo
or
inc
jmp
add
cld
or
cmp
rep
mov
inc
idivl
sbb
cmp
xor
inc
pop
movswl
outsb
sbb
jns
dec
or
ja
clc
mov
inc
outsb
jl
push
stos
xchg
sbb
add
pusha
pop
jns
adc
call
and
jb
dec
popa
xor
jns
push
mov
mov
insb
xor
mov
insl
lret
sub
push
push
and
loop
lahf
sbb
inc
pop
cmp
pusha
xchg
out
jg
pop
adc
pop
mov
dec
sbb
test
add
mov
insl
mov
adc
sub
fdivs
es
sbb
mov
add
pop
stc
pop
sub
pop
inc
sbb
pop
cwtl
mov
stos
movsl
pop
pop
in
pop
mov
mov
and
jl
push
pop
dec
mov
cmc
xor
mov
push
outsl
lods
insl
or
push
cmp
pop
xchg
jb
sub
sub
jno
mov
mov
subb
pop
dec
sar
mov
clc
lods
jp
cmp
xor
loopne
lock
insb
or
mov
xor
push
mov
cwtl
fisubl
or
or
test
sar
pop
mov
lds
inc
mov
fsubrs
or
push
dec
stos
sti
and
push
push
imul
cs
add
rcll
add
mov
push
push
test
xor
push
out
sbb
and
cmovbe
rol
jmp
or
dec
loopne
add
jns
mov
lahf
push
fs
fists
int
push
test
cmpb
sub
mov
cs
cli
or
xchg
test
loop
mov
jo
mov
movsl
xchg
or
insl
cltd
outsl
or
cmp
sbb
inc
sahf
xchg
lret
call
sbb
mov
add
push
adc
ror
stos
and
leave
push
mov
dec
adc
rcrb
inc
fs
jne
and
ret
and
lea
xchg
pop
mov
sub
inc
or
jnp
orb
test
mov
push
negl
or
or
call
push
cmp
mov
add
jne
bound
push
daa
fs
cmc
add
add
addr16
push
jne
pop
inc
dec
dec
dec
movsb
pop
push
mov
mov
dec
fidivl
mov
outsl
or
pop
lcall
leave
decl
cmp
mov
add
or
outsl
or
lock
or
je
pop
push
mov
dec
sete
filds
jne
cmp
dec
adc
lock
xor
or
pop
les
inc
or
mov
adc
sahf
jno
and
addr16
xchg
xor
ja
mov
add
jb
fwait
and
push
or
movl
cmp
mov
mov
popa
pop
adc
mov
call
out
dec
push
push
or
cs
push
xchg
or
lock
and
cmp
jg
mov
add
or
push
add
mov
lea
ja
ja
cmpsl
mov
or
xor
rclb
stc
jge
fwait
add
xchg
jbe
push
jg
outsb
push
mov
cmp
jle
ror
push
imul
jg
stos
je
push
cmp
jne
inc
inc
jmp
pushf
push
fisubrs
and
mov
aas
cmp
div
dec
lfs
or
and
mov
rolb
xlat
ret
repnz
or
push
sahf
shl
jne
mov
aam
hlt
mov
stos
push
mov
pop
jp
push
mov
aam
jb
dec
iret
in
inc
add
dec
je
or
dec
pop
add
cmpsb
xor
sbb
push
push
pop
clc
rorb
pop
in
mov
pop
ss
pusha
lret
in
pop
mov
sbb
scas
adc
shl
adc
push
cmp
or
sub
lcall
inc
push
xchg
subb
push
inc
mov
ss
sub
jne
push
lods
dec
jns
inc
dec
pop
push
push
sbb
in
adcb
addb
push
pop
add
add
push
mov
fsubrl
jp
mov
inc
movsl
sbb
enter
mov
jnp
jnp
in
aam
nop
nop
mov
clc
addb
push
imul
mov
mov
clc
or
je
push
or
cmpb
xchg
int
ljmp
arpl
pop
and
jp
mov
and
leave
xor
mov
pop
mov
andb
or
or
mov
and
mov
dec
int3
pop
and
scas
push
cwtl
mov
mov
xchg
mov
lods
xchg
inc
cmpsl
nop
or
or
mov
add
enter
mov
test
dec
mov
xchg
or
jl
in
dec
ss
sub
call
xchg
sub
xchg
aad
sti
push
inc
sub
xchg
xchg
xor
adc
xchg
jne
xor
mov
aas
and
and
icebp
dec
ret
aas
cmp
add
stos
adcl
jno
ficoml
pop
xlat
or
adc
adc
fisubrs
ret
test
setne
mov
loopne
cmp
scas
mov
or
je
lcall
inc
cli
loop
scas
mov
je
cltd
test
lret
cmp
xchg
add
xchg
jo
or
inc
push
cli
adc
adc
or
outsl
loope
push
int3
xor
int3
mov
movsl
xlat
add
pop
ret
xor
test
and
pop
fsubs
push
cmp
loope
inc
scas
mov
dec
xor
mov
cmp
jl
dec
inc
dec
int
sub
push
shll
mov
cwtl
repz
fcomps
jo
ret
inc
adc
stos
je
test
xlat
aad
and
pop
mov
sbb
add
push
mov
mov
mov
cltd
pop
pop
mov
loope
cmp
aad
jl
mov
or
std
and
add
incl
lcall
shlb
cli
shr
xor
in
mov
mov
scas
loopne
sar
lea
test
xlat
movl
pop
push
call
add
aaa
jmp
add
mov
in
jg
notb
add
inc
push
mov
push
out
adc
test
and
add
sbb
and
mov
xor
sarl
shl
cvttps2pi
mov
clc
cwtl
cmp
mov
or
mov
push
push
sahf
and
mov
inc
cmp
push
add
mov
inc
aas
jb
mov
sub
clc
jne
push
push
scas
push
mov
aaa
pop
ffreep
jne
sub
add
jb
and
sbb
ret
xor
fmull
mov
add
test
sbb
pushf
inc
mov
add
add
add
bound
sbb
imul
push
push
aaa
jbe
jnp
iret
mov
aaa
mov
repnz
jmp
pop
mov
or
and
pop
xor
xlat
adc
or
jo
and
sub
test
jnp
pop
sbb
les
mov
movb
mov
push
xchg
mov
imul
pop
push
imul
or
and
ljmp
jno
je
mov
ret
inc
sbb
push
in
xchg
and
es
jbe
jae
ret
in
and
sbb
adc
inc
push
std
mov
add
mov
cmp
lods
fs
push
push
mov
fldcw
ret
lea
lods
adc
mov
mov
push
inc
push
jle
pop
jmp
sbb
push
push
or
fdivrl
cmp
mov
jns
aaa
mov
shrb
xorb
xchg
mov
rol
mov
inc
xor
js
inc
cmp
inc
mov
out
ss
stc
inc
mov
movsb
xor
or
sbb
xor
xor
or
and
repnz
pushf
add
out
fistl
or
xlat
mov
sub
pop
dec
outsl
loopne
or
lods
mov
push
inc
push
icebp
ret
orb
mov
add
adc
inc
push
adc
subl
mov
pop
in
or
in
mov
and
pop
addr16
or
push
push
xchg
test
and
mov
adc
xor
fs
push
push
push
scas
mov
sbb
enter
push
push
mov
mov
adc
bound
cmp
in
xchg
insb
sbb
cmp
push
mov
ret
push
xor
pop
jmp
or
adc
dec
sub
mov
adc
xchg
or
jbe
inc
adc
jb
inc
cld
pop
test
pop
jne
mov
pop
cli
push
add
dec
xlat
sub
cmp
sub
adc
in
xchg
and
mov
jns
mov
dec
mov
add
mov
and
imul
pop
mov
pop
inc
repz
mov
enter
and
pop
push
push
addr16
outsb
movsl
dec
sub
popf
imulb
adc
and
mov
lods
pushf
or
pop
add
add
jl
or
dec
add
int
sarb
push
mov
jo
push
xlat
clc
sarl
push
mov
fmuls
xlat
sub
jbe
inc
pop
pop
mov
lds
add
pushf
pop
jmp
xchg
lock
push
lcall
aad
cmpsl
in
sbb
andb
jle
inc
sub
lret
mov
or
jl
mov
mov
test
mov
xchg
addr16
push
imul
pop
xchg
push
cwtl
sub
lods
sub
pushf
cltd
dec
pop
sub
sbb
pop
push
push
insl
imul
sub
jl
test
aam
in
dec
ja
push
lods
dec
in
lahf
mov
xlat
ret
mov
push
sub
fisttpll
cld
and
mov
mov
xor
dec
gs
or
xor
inc
push
push
ds
repnz
adc
xor
in
pop
sub
add
rclb
pop
popf
ret
shlb
or
js
es
sbb
unpcklps
orb
dec
rorb
mov
push
dec
push
nop
inc
or
cmc
inc
decb
pop
push
rorl
dec
int3
cmp
dec
inc
pop
mov
pop
xchg
xchg
pop
and
inc
or
cwtl
sub
imul
stos
push
pop
in
cmp
out
cmpsl
or
jbe
in
lods
fnstenv
sbb
scas
jp
es
out
add
loopne
adc
inc
push
aam
inc
add
xchg
mov
aam
xchg
scas
add
push
cmpsb
adc
pop
inc
mov
mov
imul
or
daa
call
mov
and
or
addr16
sbb
cld
mov
cmp
outsl
lods
aas
scas
xchg
adc
sub
ret
inc
test
iret
fnstsw
push
scas
dec
cmp
jmp
lret
jmp
push
pop
and
movsb
je
push
inc
and
lock
incb
mov
pop
lea
fstps
mov
shll
jae
cmp
sbb
lock
adc
xor
pop
gs
mov
cs
insl
bound
mov
mov
or
push
leave
out
insb
xor
mov
js
xchg
mov
and
arpl
in
cltd
sub
orl
cmpsl
adc
aaa
aas
decb
mov
xchg
xor
xchg
shlb
add
orb
push
xchg
out
inc
repnz
lcall
jmp
inc
mov
pusha
subb
js
mov
pop
repnz
loopne
dec
je
or
and
data16
dec
jmp
jmp
inc
test
xchg
cmp
xor
sub
js
aaa
pop
inc
mov
movsb
rclb
nop
push
in
push
dec
ret
call
shlb
ss
fcomps
aaa
hlt
mov
mov
adc
and
adc
out
add
aad
sbb
lret
jne
push
out
pop
pop
shl
fsubl
fstpl
xchg
mov
or
andb
psubsb
pop
leavew
rcrb
cmp
xor
loopne
mov
je
adc
push
fs
xchg
pop
lods
mov
mov
mov
or
push
inc
xchg
push
or
int3
cmpsb
push
push
mov
std
cmp
adc
adc
xor
inc
push
repnz
adc
roll
push
pop
mov
jno
fsubrs
xchg
imul
pop
sbb
push
mov
inc
xchg
icebp
sbb
adc
orb
pop
add
mov
and
in
mov
dec
cli
test
xor
aam
notb
or
adc
lret
insb
bound
repnz
jle
adc
es
push
add
push
negb
xlat
push
push
mov
into
sub
inc
lea
push
sub
out
xchg
push
add
mov
pop
push
icebp
mov
adc
pop
cltd
push
pop
push
movl
ret
jo
das
pushf
sbb
add
xchg
inc
ret
fldcw
mov
testb
jbe
and
sbb
pusha
stc
cmp
mov
in
leave
adc
fsubl
repnz
pop
xor
or
xor
push
push
leave
into
fwait
bound
and
loopne
dec
or
adc
push
sbb
pusha
dec
mov
add
push
jl
mov
test
dec
mov
add
mov
dec
mov
clc
mov
and
ljmp
mov
shlb
mov
add
iret
xor
jmp
adc
mov
xchg
push
adc
pop
inc
and
push
inc
mov
andl
mov
ficoms
or
ret
clc
push
jb
pusha
push
xor
jbe
mov
inc
mov
cwtl
push
xchg
and
push
notb
inc
adc
add
jecxz
nop
jecxz
test
gs
push
inc
mov
insb
push
cwtl
test
scas
mov
sub
insb
cld
pop
add
shll
nop
push
inc
inc
mov
mov
cmp
push
push
mov
mov
test
push
data16
iret
push
add
repnz
xchg
pushf
push
rcrb
add
push
xchg
cs
and
jl
pop
ret
mov
pop
aad
lcall
xor
mov
and
dec
in
imul
xor
popa
pop
inc
mov
xor
jecxz
cmp
and
push
lock
subl
mov
inc
xlat
pop
cmp
mov
sub
paddsb
out
jl
xchg
xchg
ja
cmp
or
mov
ffree
push
pop
push
adc
pop
or
addl
cmpsb
dec
sub
or
mov
aaa
icebp
cmp
popa
adc
dec
jle
sahf
and
clc
notl
cmp
lret
mov
lcall
xor
addr16
pop
push
cwtl
mov
std
outsl
push
push
jo
push
mov
and
push
pop
mov
adc
cmp
aam
pusha
push
lock
jbe
jmp
push
lods
negb
add
mov
roll
or
addl
test
cmp
lds
push
jl
js
inc
fs
in
andl
fiaddl
or
mov
mov
mov
sti
je
push
push
and
push
add
rclb
pop
mov
and
mov
daa
cltd
jmp
inc
mov
bnd
inc
add
mov
cwtl
fcomps
sbb
pushf
xor
xchg
and
rol
sub
imul
adc
mov
cmp
loop
mov
push
xor
in
add
adc
fs
cmp
push
stc
pusha
or
jns
xor
or
negl
sbb
mov
int
cmp
cmp
je
bound
xor
nop
push
xor
adc
adc
imul
test
pop
mov
mov
adc
add
sbb
mov
pop
int3
call
dec
inc
enter
push
jg,pt
and
lods
call
push
jmp
push
adc
and
sbb
sbb
ljmp
fs
and
jne
xchg
mov
adc
int
mov
jl
adc
adc
cmp
mov
push
lea
aaa
push
cltd
pop
loop
xchg
push
lcall
dec
vpunpcklbw
cmp
xor
lock
xchg
adc
gs
jmp
add
mov
loopne
sbb
push
jg
sbb
jp
loopne
push
push
push
cmc
sbb
out
and
inc
int
in
pop
mov
and
adc
mov
das
imul
mov
mov
ret
rorb
dec
cmc
ret
imul
xor
pop
jne
mov
push
rorb
cmc
shlb
and
mov
dec
js
test
stos
dec
lret
inc
cmpsl
rcl
inc
aas
push
loopne
jne
xlat
cmp
rolb
push
or
fistpl
inc
bound
loopne
dec
fs
test
ret
in
lcall
shl
sub
ljmp
pop
adc
mov
in
xor
pusha
mov
rol
mov
jg
inc
lret
pop
xor
shr
xor
sub
jnp
xor
shr
xor
adc
add
add
add
mov
mov
out
pushf
movsb
fs
or
jae
in
fisttps
and
xor
add
add
aam
sub
mov
roll
jge
add
rclb
mov
stos
cwtl
repnz
cli
fisubrs
shrb
and
and
xchg
push
aam
aaa
adc
xor
push
fs
xor
repnz
repnz
movsl
rcrb
or
mov
neg
push
or
xlat
ret
rcl
add
add
push
rol
sbb
add
add
in
imul
aam
call
push
scas
sub
ljmp
push
lcall
add
push
sub
dec
shll
fcomp
loopne
jae
imul
lret
xor
call
xchg
shl
in
push
cmp
jns
mov
sbb
push
bound
pop
mov
or
cmp
pop
aaa
mov
loopne
shll
cltd
call
xor
loopne
loopne
in
dec
in
call
jo
loopne
xor
sarl
rcl
xorl
xor
sub
int3
and
jle
add
mov
aam
in
push
xor
and
and
mov
imul
or
add
and
lods
or
xor
push
test
adc
add
jo
ret
rcll
add
adc
adc
shlb
xrelease
add
adc
push
rcrl
cmp
jne
mov
filds
cltd
sub
shlb
jbe
call
cmpsb
and
fisubl
add
lcall
shll
fdivrs
inc
cmpsb
imul
popl
nop
in
shlb
lret
ret
int3
inc
mov
rorl
lds
cli
stos
inc
sub
adcb
adc
cmp
sub
shll
in
in
fstps
shr
rolb
add
adcl
sub
jge
shlb
es
lcall
movsb
imul
call
add
nop
xchg
inc
push
jb
push
xorb
dec
cmp
out
in
push
dec
mov
or
inc
sub
xchg
pop
push
xor
pusha
add
orl
push
dec
xorb
pop
cmp
xor
pop
dec
pop
pusha
push
dec
xchg
mov
cmpsb
rcrb
push
add
or
push
or
mov
imul
inc
pusha
push
jb
add
pop
mov
mov
or
adc
add
fs
adc
mov
in
sbbl
sub
dec
dec
and
xchg
cmpsb
dec
icebp
stc
stc
stc
add
cmp
pop
dec
mov
xchg
inc
mov
lods
add
dec
xchg
fmuls
adc
shll
loopne
xor
fidivl
adc
in
add
and
mov
pop
mov
mov
adc
out
pop
add
sub
mov
push
add
rcrb
cmp
jb
lea
cld
into
lea
xor
pop
cld
sub
cwtl
cli
in
cmp
lea
pop
xor
jp
icebp
insl
std
and
sub
sarb
adc
or
rorb
or
or
push
add
mov
adc
cmp
xlat
data16
jae
mov
ds
and
mov
lock
aas
lea
jmp
repz
mov
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
add
adc
mov
mov
xchg
sub
mov
cmp
jbe
nop
mov
add
sti
dec
aam
repnz
sub
fcomp
jle
jae
push
pop
fadds
rep
or
cmc
cmp
sbb
in
testb
mov
outsl
pop
loopne
cmpsb
mov
mov
xchg
or
xchg
ljmp
adc
mov
sub
cmc
test
enter
push
sub
fmuls
sbb
xchg
notb
jno
sbb
ja
adc
js
fdivl
ja
out
popa
or
loop
pop
out
icebp
mov
pop
in
xchg
jl
push
fistps
shlb
lcall
pop
push
shlb
pop
push
jne
pop
dec
inc
cmp
mov
sbb
mov
mov
sahf
and
inc
or
xor
sub
push
outsl
lock
dec
push
cmp
out
or
xor
ja
addb
lock
fcmovb
testl
add
push
clc
jle
inc
dec
loop
addr16
add
cmp
dec
add
insb
fs
pop
adc
lds
test
inc
adc
adc
cltd
ret
cld
push
adc
push
xor
sbb
dec
dec
or
pusha
ljmp
shll
xor
pop
push
andb
dec
xchg
into
mov
sub
or
jns
push
add
inc
dec
call
scas
inc
inc
cmpsb
inc
jno
and
jnp
pusha
mov
sbb
lods
mov
fwait
nop
pusha
push
ljmp
adc
pop
push
cmp
cwtl
pop
movsb
xchg
and
in
inc
cmp
sub
cmp
push
mov
pusha
sub
sbb
test
mov
and
add
adc
jo
jle
mov
xchg
dec
cltd
or
fsubs
add
jle
add
lock
aam
adc
push
push
inc
xchg
arpl
or
pop
inc
or
jbe
push
pop
nop
push
lret
incb
stos
mov
push
sar
xor
loope
or
in
mov
adc
inc
out
and
pop
comiss
pushf
sub
jns
in
mov
mov
gs
xor
push
in
ret
scas
push
inc
icebp
push
rcrb
add
les
xor
dec
xchg
mov
push
loop
mov
lea
bound
add
adc
and
fadds
sub
jo
icebp
mov
mov
inc
pop
xor
out
and
test
xor
fs
into
jle
push
rclb
pop
inc
xor
pop
cmp
test
fsubrs
xor
sub
and
cmc
xlat
or
testb
xchg
inc
mov
mov
and
insb
loopne
cld
inc
rcrb
jnp
lahf
pop
push
pushl
add
call
jmp
mov
test
inc
adc
jo
repnz
mov
cmpl
push
push
arpl
mov
dec
into
cld
lods
mov
and
std
xor
push
cmp
push
push
xchg
xorl
shrl
or
leave
fisubl
ds
movsl
fstpt
loop
mov
aaa
xchg
rcll
into
adc
sub
inc
xorb
pop
cld
ja
jo
je
cmp
jbe
jns
jns
jmp
adc
fs
mov
lcall
adc
ret
or
pop
stc
mov
and
and
insb
xor
sub
cmpl
jbe
cmpl
pop
clc
repz
or
or
sahf
jmp
push
hlt
sub
test
jbe
mov
adc
es
dec
push
pop
or
sub
dec
or
pop
mov
in
add
sbb
cmp
lcall
dec
push
sub
mov
xor
fsubrl
in
adc
mov
dec
sbb
cmp
adc
cmp
add
or
mov
adc
xor
ds
out
push
clc
imul
pop
pop
mov
sbbb
fucomip
xchg
xorb
cmp
es
mov
out
jbe
jnp
sbb
jo
mov
les
das
adc
jae
push
ret
mov
loop
ljmp
push
dec
in
push
mov
sub
pop
inc
add
xor
mov
sub
ja
out
int3
xor
mov
fprem
and
mov
push
pop
mov
cs
sbb
jp
jno
or
jb
dec
sub
dec
push
std
adcb
test
in
and
pop
jmp
inc
jae
pop
and
ja
sbb
aad
jbe
mov
push
dec
mov
inc
mov
mov
jne
test
xor
and
cwtl
add
mov
lods
pop
addr16
or
sbb
adc
adc
adc
and
loopne
subl
and
ret
add
sarl
mov
mov
movsb
ja
add
roll
push
mov
rclb
push
mov
add
adcl
fcompl
jno
cmp
jbe
shlb
jb
and
sub
xor
lcall
sub
or
and
jecxz
add
cwtl
stos
add
sub
and
and
push
cmp
xor
inc
adc
inc
cmp
loope
mov
or
jo
xchg
clc
add
movsb
sub
push
lods
jecxz
push
loope
loopne
xorb
in
mov
adc
inc
adc
or
imul
jae
loopne
sbb
sbbb
or
imul
je
add
sarb
mov
scas
je
cmp
cmp
lods
subl
inc
lea
test
jl
mov
or
jecxz
cmp
or
pop
mov
jno
jle
xor
add
sub
imul
enter
ja
mov
add
ss
das
enter
fcompl
leave
inc
dec
frstor
and
cmp
ja
jae
ss
jb
roll
sbb
adc
xlat
inc
adc
adc
jle
sub
rorb
jnp
mov
inc
mov
or
pop
loope
or
cmp
cli
push
jmp
push
mov
xor
jns
mov
jmp
mov
adc
sbb
data16
jbe
pop
out
dec
xchg
mov
xor
add
scas
sub
lret
sub
aad
inc
pop
inc
push
loope
fisttpl
cmp
ret
jmp
xchg
xchg
dec
test
fsub
fsub
mov
fidivs
xor
mov
cmp
pushf
xor
jo
mov
mov
jle
cli
data16
stc
inc
mov
mov
push
jl
mov
jl
in
ficomps
inc
cmp
mov
movb
clc
sub
cltd
adc
into
jbe
sub
nop
sub
movzbl
xchg
inc
dec
mov
jne
insl
pop
add
and
add
pop
sar
add
xor
loop
mov
mov
or
repz
and
push
dec
add
jo
out
add
imul
sbb
jmp
test
fnstcw
jge
je
test
daa
jne
mov
xorb
pop
xor
jo
outsl
xor
and
push
xor
inc
cmp
jl
pop
decb
xchg
mov
jbe
mov
aaa
ret
push
xor
pop
addl
xor
lock
adc
dec
push
and
je
lret
or
fs
xor
mov
or
jle
push
sub
xor
xor
out
flds
das
add
mov
lcall
xchg
stc
pop
test
lock
sbb
push
inc
arpl
adcb
nop
adc
test
aaa
pop
mov
xor
aaa
daa
ja
push
cmp
jl
cs
inc
add
inc
add
push
fdivs
ss
inc
les
mov
jmp
lea
xor
bts
nop
std
pop
or
testb
jne
push
or
in
inc
and
sub
adc
inc
xor
add
xlat
mov
mov
adcb
mov
inc
in
mov
in
das
cmp
loope
and
add
mov
enter
shl
add
ret
mov
incl
add
lret
mov
fidivrl
movsw
movsb
mov
push
pop
les
push
fildll
jp
jge
into
adc
insb
or
fidivrs
cmp
push
pop
inc
and
xor
push
imul
add
sub
sub
sbb
or
mov
xchg
xchg
lock
jne
insb
push
dec
jge
inc
es
sub
pop
in
hlt
lcall
dec
stos
call
jmp
lret
and
icebp
jmp
fistps
dec
sub
xchg
call
loope
mov
sbb
inc
shlb
and
xor
sbb
mov
sbb
cmpsb
cld
sbb
jno
jb
and
shll
mov
stos
xlat
icebp
popf
jbe
mov
decb
mov
and
sub
push
mov
ljmp
adc
mov
add
push
sub
dec
sti
stos
jl
lods
or
add
dec
in
pop
lock
adc
int
push
pop
inc
push
adc
inc
xor
imul
adc
inc
xchg
or
cli
in
daa
jecxz
push
mov
ficoms
popa
mov
enter
jo
or
lds
jmp
daa
cld
shrb
cwtl
cs
mov
dec
orl
xor
xor
loop
or
pop
add
xor
in
inc
sbb
inc
adc
push
sub
cltd
lock
fwait
mov
lock
cmp
jg
subb
jl
push
pmaxsw
ss
jmp
push
js
testb
xor
call
nop
loope
int
jo
pusha
or
mov
fldl
add
adc
out
xchg
jno
pop
inc
jge
sbb
adc
dec
sbb
stos
add
push
dec
mov
push
push
sub
adc
cwtl
enter
jno
jecxz
nop
imul
add
sbb
stos
mov
lods
mov
push
jmp
sbb
xorb
sbb
jmp
fptan
insl
jae
sbb
leave
cmp
testb
arpl
mov
push
mov
fiadds
or
sub
mov
lahf
notb
sbb
mov
inc
and
gs
adc
fmul
pop
pop
ret
mov
popa
push
or
pop
jmp
or
pop
rorb
push
or
imul
cmp
addr16
lock
jae
and
adc
jmp
pop
cmp
add
push
cmc
imul
or
int3
pusha
shlb
sbb
adc
dec
xor
lret
jo
adc
or
enter
or
clc
jo
jmp
lea
sbb
push
mov
mov
dec
mov
stos
push
mov
scas
cmp
repz
or
shr
js
sbb
or
or
push
pop
cltd
fisubrs
sub
pop
inc
mov
test
aam
adc
ja
mov
push
gs
mov
lods
cmp
enter
call
mov
call
mov
loopne
inc
adc
mov
xor
xlat
bt
cmp
ret
xchg
mov
mov
pop
out
xor
jne
push
xor
xchg
sbb
xchg
jo
outsb
mov
clc
je
int3
nop
aaa
and
mov
dec
add
push
jecxz
push
das
pop
sbb
xchg
inc
loopne
fistpl
cmpl
add
cli
pop
test
mov
sti
pop
push
call
loope
jb
push
pop
pop
mov
jnp
xor
push
pop
push
push
push
sub
dec
add
insb
sahf
jae
jp
push
cmp
pop
addl
xorb
pop
sub
in
mov
push
and
lods
test
add
xchg
xchg
add
into
xor
icebp
scas
in
adc
sbb
mov
mov
jne
cmp
adcb
leave
add
push
inc
add
push
and
dec
rorl
pop
lret
push
aas
jo
adc
and
and
xor
out
add
sti
mov
mov
cmp
in
mov
sbb
ret
lcall
mov
out
inc
sub
pop
jae
pop
sub
or
sarb
add
jno
jmp
jne
cmpsb
pop
in
repz
add
cmp
sub
arpl
or
adc
insb
mov
or
in
insb
xor
adc
cld
test
sbb
dec
jo
add
sahf
jmp
filds
pop
cmp
sub
cltd
es
or
nop
or
lcall
jne
addl
jne
push
icebp
cli
es
out
push
dec
ret
lock
cld
ret
testl
je
outsl
dec
pop
pop
mov
std
sub
sub
iret
push
add
add
add
adc
sbb
sbbl
pop
jg
je
sarl
sbb
in
std
das
shrb
mov
cli
testb
je
cmp
mov
popa
cmp
mov
mov
cmp
xchg
jmp
sub
jnp
xchg
cwtl
add
push
adc
add
add
out
ds
mov
sub
rcr
popa
mov
push
xor
add
pop
in
push
pop
add
push
push
cmp
sbb
push
pop
mov
push
add
jo
es
loop
jae
loopne
adc
and
icebp
jmp
arpl
sbb
xor
lock
ret
adcl
outsl
pop
dec
jne
jg
add
xorl
dec
popa
pusha
inc
dec
hlt
jnp
outsl
add
add
ret
pop
adc
ss
jne
xchg
push
pop
ja
cmp
xor
jecxz
jg
cmpsl
xor
hlt
push
push
mov
push
arpl
or
leave
or
inc
mov
xor
pusha
idivb
inc
adc
jno
mov
add
popa
aaa
xor
push
push
sbb
xor
xchg
sub
mov
subb
mov
pop
mov
and
scas
rcrl
std
add
mov
mov
rorl
sbb
mov
push
es
add
repnz
icebp
jb
or
inc
fiaddl
pop
cmpb
cld
inc
outsb
pop
leave
jmp
lea
push
sbb
push
dec
pop
sbb
adc
or
inc
bndstx
test
leave
lret
sub
sub
cmp
aas
dec
or
stc
jmp
ret
notl
mov
lret
inc
aas
push
jnp
sqrtps
pop
xor
sbb
decb
and
xor
sbb
push
or
adc
sbb
or
int3
out
std
cwtl
or
stos
sbb
xor
js
into
movb
mov
sti
adc
cmp
jae
and
jl
pop
sbb
jne
cmp
jne
push
mov
adc
xchg
xor
inc
inc
xchg
pop
xor
push
insb
sbb
push
and
orl
mov
scas
jae
and
iret
and
cmp
sti
jno
adc
push
add
imul
xchg
sbb
pop
pop
sbb
xchg
and
xor
sub
cmc
incl
push
insb
pop
xchg
inc
in
sti
sub
loopne
xchg
loopne
sbb
fistps
pop
sbb
test
or
fisubl
mov
je
xor
rol
pop
cltd
push
and
inc
cmp
pop
adc
scas
or
incl
enter
adc
imul
lock
pop
mov
lcall
shlb
and
sbb
lcall
pop
loopne
enter
and
dec
rorl
in
arpl
adc
and
push
out
fildll
ja
xor
dec
push
cltd
cmp
push
xchg
pop
dec
sub
cld
sub
into
add
jnp
pusha
jo
dec
mov
pop
into
popf
dec
xor
insl
sub
test
pusha
ja
pusha
dec
sbb
loopne
js
cmp
inc
or
jo
or
adc
in
clc
or
mov
adcl
push
ljmp
fadd
push
sub
dec
mov
xor
movsb
out
push
andb
bound
sub
aad
sbb
cmp
dec
adc
fildl
test
inc
call
xchg
xor
scas
jl
cmp
jbe
mov
cmp
pop
add
aad
cmp
cmp
cmc
stos
das
jne
or
push
ds
popa
test
adc
push
subl
pop
push
pop
sahf
inc
enter
xor
cmp
jmp
addl
test
pop
ja
push
and
pop
cmp
loop
lods
pop
in
add
pop
add
jle
loop
dec
pop
dec
pusha
and
adc
add
ficompl
xchg
cmp
in
scas
mov
pop
jmp
add
add
lds
addb
out
mov
dec
push
or
jnp
xchg
push
fstpt
inc
cmp
aaa
cmp
loopne
je
xor
adc
popa
adc
pop
jne,pt
aaa
xchg
sahf
testl
sub
fucomi
es
inc
out
add
ja
add
dec
push
xorb
ds
jae
pop
or
add
stos
cmp
andl
mov
mov
inc
fsubrl
add
je
sar
xor
rcr
addl
sbb
mov
and
bnd
push
lods
cmpsb
push
ret
cmp
inc
mov
dec
loopne
pop
xchg
jns
jg
add
ret
fisttpl
mov
and
mov
inc
sbbb
in
pop
push
aam
inc
aaa
push
xchg
xchg
rcrb
dec
jnp
mov
mov
inc
and
push
or
jb
mov
add
in
mov
cmpsl
dec
push
mov
adc
pop
inc
insb
ret
ffree
sub
pusha
loope
jp
cmpsb
jecxz
dec
add
dec
jbe
rolb
mov
push
cltd
or
lods
push
lock
mov
inc
in
inc
dec
xchg
jp
rorb
jbe
cld
mov
rcrb
or
adc
push
cmp
in
xor
ret
das
pop
lahf
lods
inc
daa
shll
inc
ljmp
mov
xlat
pop
adc
ljmp
adc
sub
sub
dec
jo
jle
xchg
repnz
push
cld
cmp
push
das
cmp
push
push
mov
add
cli
cmp
je
inc
add
sub
jo
movsb
or
push
mov
inc
jp
or
inc
ljmp
dec
pusha
add
insb
sbb
adc
push
cmpl
pop
sbb
sbb
lahf
pop
je
jmp
or
push
dec
cmp
xchg
sub
out
pop
lret
push
jns
add
dec
lds
sbb
out
cmpxchg8b
sub
pop
outsl
xchg
jmp
mov
adc
stos
and
icebp
cmp
fnstsw
push
jnp
mov
inc
cmp
mov
pop
or
dec
or
push
aaa
and
pushf
es
jecxz
dec
xchg
leave
dec
inc
pop
pop
rol
mov
or
loop
or
mov
sbbl
mov
fmull
inc
and
lahf
sub
or
cmpsl
or
ret
sub
mov
orb
adc
sbb
cmp
inc
sbbl
mov
in
mov
jnp
jmp
sub
sub
push
add
jb
ficoml
in
mov
jge
mov
repnz
push
push
test
push
add
inc
pop
pop
jmp
cmpsl
and
aaa
mov
pop
cltd
adc
dec
add
jne
mov
mov
cmp
mov
popa
test
sub
mov
mov
cmp
jne
push
jno
sarb
xor
jmp
ja
dec
addb
jmp
adc
mov
mov
pusha
jne
inc
xor
push
mov
scas
dec
sbb
adc
shll
or
jle
pop
or
xor
cmp
mov
je
movl
cld
and
add
add
xchg
test
fsubrl
mov
dec
or
rcrb
ret
and
push
js
inc
repz
rcrb
sub
push
jne
into
add
sbb
hlt
int3
add
inc
jg
mov
or
scas
pop
inc
cld
pusha
sbb
and
push
pop
cmp
mov
push
and
clc
jg
mov
test
movd
movaps
out
push
enter
shlb
jle
xor
cmc
or
das
cli
rcl
lret
je
in
pop
adcl
repz
or
jg
sub
lcall
adc
jmp
xor
jnp
mov
pop
jg
sbb
adc
or
add
adc
or
jns
loopne
cmp
xchg
repnz
imul
add
pop
sti
roll
xor
pop
enter
shrb
es
jns
ret
adc
dec
sbb
adc
cmp
or
jmp
sub
movsb
popf
ja
ja
mov
pop
cmp
adc
mov
in
adc
xor
push
cmp
xchg
js
pop
decl
dec
adc
pop
hlt
aam
fs
sub
push
les
cmp
jge
mov
mov
and
pop
cmp
mov
mov
repz
cmp
inc
jbe
dec
leave
cmp
fdivrs
add
pop
aam
in
and
fists
mov
adc
jnp
add
mul
xchg
dec
fwait
scas
je
sbb
push
in
jp
stos
nop
mov
mov
inc
inc
push
lcall
cmp
outsl
decl
je
insb
jmp
mov
mov
cmp
jne
pushf
pop
pop
or
xchg
or
movzbl
jno
mov
cmpsb
xchg
shufps
dec
test
mov
push
sbb
je,pn
cmpsl
xchg
adc
clc
mov
xchg
stos
sbb
call
arpl
or
popf
dec
inc
and
hlt
pop
and
adc
xchg
sub
pop
das
shl
hlt
fcomi
arpl
adc
pop
sub
test
jmp
push
or
add
mov
aad
clc
push
pop
add
push
xchg
sub
fs
inc
push
mov
dec
inc
mov
adc
outsb
xor
jne
inc
cmp
push
xor
jne
push
out
decl
loope
inc
inc
xor
andb
push
push
adc
and
pop
and
xchg
jmp
adc
sub
add
dec
psrlw
xchg
xor
cmpsl
sbb
rcrl
adc
xchg
and
add
repnz
adc
push
add
push
cmovo
push
lret
adc
xchg
es
or
addb
sbb
add
dec
xor
popl
xchg
out
add
pop
jecxz
stos
subb
addr16
into
repz
inc
lea
hlt
cmp
cmp
jecxz
adc
loopne
fscale
cmp
sarl
sub
add
ret
out
jnp
outsl
adc
loope
shlb
dec
leave
sbb
sbb
insl
imul
rolb
cmp
mov
mov
shl
shrb
outsb
cmpsb
mov
cmp
aam
lret
jne
sbb
add
daa
xchg
adc
shrl
add
loope
pop
ret
push
int3
ss
pop
pop
idivl
add
jmp
xchg
pop
mov
stos
andb
xchg
push
cmpsl
inc
and
inc
or
sbb
out
testb
or
cmp
orl
push
mov
pop
or
dec
mov
orl
sbb
rcll
cld
push
cmp
mov
adc
dec
push
cmpsl
loopne
push
inc
mov
and
addl
pop
push
or
inc
imul
mov
addb
pop
std
push
les
jns
jmp
mov
ja
les
hlt
sub
into
push
shufps
clc
test
fmuls
lret
cli
or
add
jmp
or
mov
es
adc
movsb
jbe
or
cld
jb
ljmp
mov
into
jmp
mov
dec
mov
mov
dec
dec
mov
inc
dec
cmp
insb
repnz
ret
sub
mov
or
add
jmp
cmp
jp
enter
mov
mov
test
das
arpl
ds
orb
jb
cmp
jb
lea
adc
test
mov
out
mov
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
dec
push
xor
adc
or
fcomi
cs
jb
jmp
adc
push
aas
iret
iret
jnp
jmp
adc
jmp
std
std
jmp
in
int3
icebp
cmp
cld
ret
pmaxub
popa
xor
mov
adc
idivb
push
inc
jb
push
push
movb
xor
andl
mov
mov
ret
stc
push
addr16
loope
or
inc
jl
shl
mov
inc
and
dec
jle
or
es
popf
cmpsl
push
ds
inc
fidivl
push
out
aad
jg
or
dec
scas
or
cltd
dec
sbb
push
inc
loopne
dec
mov
enter
pop
cmpsl
loopne
fs
or
jge
sbb
mov
aas
push
enter
add
cltd
add
adc
into
or
rcll
push
adc
or
jg
daa
ds
in
dec
sbb
lret
mov
loope
mov
mov
and
clc
cmpsb
in
and
and
xor
push
jmp
push
outsl
fildll
xchg
and
sub
inc
push
push
pop
shrb
div
jb
pop
adc
rolb
sbb
xor
or
jmp
pop
sub
sbbb
pop
adc
push
mov
xor
pop
jne
sub
sub
rolb
dec
cmp
jo
fsubrs
push
gs
arpl
adc
mov
add
xlat
nop
xlat
and
xchg
adc
gs
add
outsl
adc
enter
dec
lret
sub
loope
stos
cmc
pop
in
push
sub
add
sub
push
or
add
scas
pop
test
jp
ljmp
jl
or
lods
push
mov
inc
cmp
mov
pop
pop
add
and
xchg
dec
popf
cmpsl
push
xor
decl
cmp
jne
orl
jmp
adc
jne
sub
push
cmp
sbb
add
test
and
cmp
push
xor
dec
scas
add
or
or
push
stc
and
or
adc
jne
dec
add
add
lds
or
lret
or
add
dec
jbe
out
jg
ljmp
sbb
roll
je
mov
sub
cmp
lock
xor
add
cmp
jae
push
mov
inc
and
pop
lods
mov
stos
and
dec
test
or
xor
je
jg
sub
and
imul
add
inc
cmc
mov
and
add
sbb
addb
or
or
sub
cld
mov
inc
mulb
mov
and
push
add
add
into
mov
mov
in
rol
sub
xor
pop
adc
pop
pop
aaa
push
push
push
lock
xchg
cmp
jne
cmp
jmp
push
mov
ud2
cmp
push
and
pushf
pusha
add
inc
or
cmp
int3
jbe
loopne
data16
jge
stos
mov
xor
mov
call
mov
pop
sub
pop
mov
jo
jmp
jno
jbe
ss
enter
add
enter
cmc
mov
loop
jne
idivb
or
adc
xchg
cs
lret
sbb
in
shlb
adc
xor
repz
push
xchg
in
mov
popf
clc
inc
xor
xor
roll
adc
sbb
mov
test
mov
adc
sbb
push
mov
jmp
data16
pusha
fidivl
inc
es
mov
scas
adc
push
aas
push
repnz
scas
add
pop
insb
inc
mov
sub
push
inc
dec
scas
mov
inc
jno
lock
leave
jl
sbb
lods
mov
sahf
dec
push
jo
add
ja
sbb
adc
in
lret
lret
push
cmp
shrb
xor
jmp
and
add
add
mov
aas
push
xor
inc
movsl
and
out
pop
cmp
movsl
add
and
sbb
or
adc
scas
dec
adc
inc
adc
nop
fcomps
or
inc
add
adc
fidivs
sub
cmp
push
cmpps
cmp
fucom
mov
and
int
shlb
cmp
jb
lea
push
adc
push
pop
dec
ss
imul
add
ss
pop
lahf
and
push
je
sub
inc
movb
mov
add
push
mov
jnp
adc
ja
add
dec
or
push
inc
insb
sbb
popa
jo
and
push
add
dec
adc
push
pusha
jmp
pop
pop
cmp
mov
jae
mov
push
push
sub
dec
shlb
cmp
mov
pop
lcall
xchg
pavgw
repnz
sub
das
popa
subl
xchg
and
push
sub
sbb
xchg
add
aad
mov
add
stos
and
push
xor
or
loope
dec
and
sub
mov
inc
adc
stos
add
mov
inc
mov
bound
pop
cmp
cmpsl
pop
cwtl
inc
pusha
push
rclb
xchg
mov
je
adc
les
push
pop
ss
pop
lahf
sbb
adc
and
push
inc
in
ss
sub
and
ja
ficomps
cltd
movsl
mov
aad
xchg
fiaddl
mov
xchg
dec
rcll
push
std
xor
sbb
cmp
aad
push
popf
and
pop
add
fmull
or
lock
out
jb
pop
add
cmp
cmovp
push
inc
in
ret
in
rorl
in
xor
repnz
sbb
mov
fcompl
repz
pusha
out
mov
push
or
and
inc
push
outsb
in
jge
mov
rolb
dec
mov
pop
je
push
das
add
leave
sub
xor
add
mov
sub
cmp
mov
sbb
mov
pusha
cmp
jne
dec
pop
pop
fmuls
inc
xchg
jo
fdivrl
loopne
out
add
cmp
jb
xor
in
pop
cmc
in
std
sbb
ss
jp
and
xlat
test
sub
pop
mov
cmp
je
cmpsb
fsub
inc
mov
jb
shr
lahf
push
jbe
ret
and
hlt
pop
pop
push
mov
dec
lods
es
push
sbb
lods
sub
xor
loopne
test
xlat
sub
and
sbb
mov
out
sbb
pop
sbb
push
mov
insl
xchg
mov
jecxz
movsb
sub
xchg
xchg
fisttpll
int3
cli
lret
cltd
xchg
jns
stos
ss
xchg
jo
aam
mov
pop
ret
xchg
sub
add
and
fcomps
push
sub
or
cmpsb
loope
andl
clc
and
dec
pop
mov
add
cmp
adcl
mov
sbb
outsb
mov
push
push
jbe
test
add
xchg
jo
add
in
mov
mov
daa
sub
insb
push
and
leave
jbe
sbb
xor
aam
jge
pop
and
push
jl
loope
push
and
inc
fistpll
and
cmp
sbbb
out
fbld
pop
push
inc
iret
fiaddl
adc
ss
push
or
lock
pusha
adc
pushf
cmpb
mov
test
or
test
xor
pop
cs
fcoml
jle
lcall
fcoms
mov
mov
sub
inc
push
and
mov
jmp
out
push
ror
jl
inc
out
in
dec
or
xchg
xchg
xchg
int
dec
mov
mov
pop
jle
mov
jl
mov
add
xor
jo
sub
xchg
fiaddl
mov
lea
repz
imul
jo
pop
add
and
enter
daa
add
push
repnz
adc
imul
repnz
je
lcall
flds
add
add
sbb
push
xchg
sub
pop
jb
or
enter
or
dec
jb
cmp
or
sub
pop
enter
pop
or
test
loop
or
cmpb
add
nop
ja
inc
or
add
ja
xor
and
push
rsqrtps
adc
pop
in
lods
pop
adc
fwait
sub
popa
in
cmp
sahf
lret
add
ds
add
adc
add
sbb
inc
ficoms
adc
adc
enter
push
push
repnz
push
pop
pop
pop
lcall
mov
sbb
sbb
enter
call
pop
and
sbb
sbb
fstl
add
je
pop
sbb
aaa
xor
sbb
sbb
cmp
inc
inc
push
pop
pop
leave
clc
decl
jne
add
add
sub
cmp
jae
pop
push
add
add
cmp
xchg
pop
and
idivb
inc
add
in
push
in
jno
lcall
in
repnz
lea
or
out
jns
in
in
cmp
enter
fwait
out
sbb
out
enter
cmpsb
add
call
inc
fsubrp
nop
adc
jb
mov
ljmp
jmp
jmp
push
push
and
in
in
out
repnz
inc
in
repnz
sahf
out
out
enter
jge
sbb
push
imul
lock
cmp
icebp
icebp
inc
sahf
xchg
add
repnz
mov
repz
pushf
lcall
or
in
sbb
pusha
fwait
mov
cmp
pop
jg
notb
repnz
idivl
fsubs
dec
in
std
clc
clc
clc
cltd
add
inc
push
adc
inc
stc
sbb
iret
in
cld
cli
cli
iret
jns
sbb
sti
sbb
stos
cld
xchg
aaa
jb
cld
cld
je
cld
push
pmaxub
rorb
addr16
sbb
adc
sbb
call
xor
pop
sub
add
popf
arpl
in
mov
js
xchg
or
ds
jecxz
and
movsb
jecxz
mov
enter
in
push
in
stos
icebp
inc
mov
ret
daa
xchg
sti
out
xchg
add
dec
out
cltd
outsb
pop
leave
and
sub
adc
xchg
sti
sbb
lcall
dec
push
jno
in
add
mov
cli
rolb
sub
out
out
cltd
jns
xor
das
cli
and
and
cli
sbb
jmp
cltd
nop
stos
in
sar
push
sub
stc
rclb
fstpl
div
and
int3
jmp
pop
fwait
xor
das
xchg
inc
pop
add
stc
out
clc
lret
and
mov
lcall
add
cld
inc
cld
subl
inc
pusha
scas
out
mov
sbb
jp
pusha
pushf
inc
insb
cld
or
loop
loop
push
mov
loop
icebp
mul
mov
shl
scas
imull
xchg
xchg
jg
mul
sbb
inc
or
out
bound
jno
out
inc
testl
jno
imul
loop
push
shl
pop
mov
adc
xchg
xchg
negb
insb
out
out
mov
les
negb
in
repnz
add
dec
push
cmp
cmc
repnz
jb
or
cmc
pop
leave
mov
adc
mov
dec
cmc
idivb
pusha
pop
xchg
div
jns
and
pop
add
clc
clc
lock
stc
popa
movsl
test
hlt
cli
cli
imul
test
hlt
in
repnz
hlt
push
hlt
shll
mov
das
pushw
jmp
data16
hlt
idivl
jo
insb
out
push
sti
lahf
loope
dec
sub
xor
cmpsb
test
loope
loope
cmp
mov
scas
repz
xchg
mov
test
imul
sbb
repz
repz
jns
repz
movsl
test
bnd
cmc
mov
sub
shll
repnz
mov
in
in
and
les
jns
jne
repnz
je
push
adc
icebp
cmp
mov
icebp
mov
icebp
test
sub
icebp
cmc
push
jno
imul
xchg
pushf
dec
jecxz
fldl
lock
popf
lock
stc
cmc
scas
adc
and
push
lock
sbb
push
lock
test
ss
outsb
sub
ds
add
sub
mov
rol
in
jb
mov
push
add
and
enter
stos
add
and
dec
add
push
jnp
add
sub
lods
loopne
jne
or
fs
orb
add
sahf
and
inc
ja
add
xor
and
mov
jle
inc
add
push
jl
popf
dec
add
loope
sahf
out
insb
in
dec
push
jb
push
pop
data16
jl
dec
loop
ret
inc
iret
repz
out
dec
push
xor
pusha
shrl
movsb
inc
mov
rorl
scas
stc
cmp
adc
xchg
xchg
popl
add
mov
sbb
push
push
roll
jbe
adc
jne
add
divb
mov
mov
add
cmp
ret
test
push
test
aad
or
inc
cld
jb
test
mov
and
or
je
int
push
cmp
adc
inc
dec
push
cmp
cld
mov
push
ss
and
xlat
hlt
push
add
rcl
adc
test
movsb
sbb
cmp
mov
adc
mov
leave
cmp
je
or
in
push
push
jb
loopne
and
jle
or
cmp
or
sbb
lea
call
inc
fdivs
fildll
insl
jnp
mov
mov
testb
adc
push
inc
repz
sub
dec
add
or
sub
sub
adc
icebp
inc
adc
mov
test
or
sbb
pop
xchg
and
dec
fs
xor
push
mov
and
push
andl
clc
iret
xchg
hlt
push
add
xor
fldenv
or
les
lock
rorl
sbb
mov
sbbb
or
xchg
fsincos
xchg
push
mov
dec
ljmp
mov
call
in
adc
movsb
jg
jge
push
cmp
cmp
adcb
push
sub
in
pop
push
or
inc
jmp
mov
shl
mov
push
jno
jecxz
repnz
fdivrp
add
xchg
daa
inc
enter
sub
lds
arpl
adc
imul
pop
sub
and
inc
inc
inc
adc
push
data16
jmp
mov
mov
fsubrs
out
pop
inc
push
inc
and
add
orl
push
cmp
in
cmpsb
or
pop
mov
repnz
je
pop
in
dec
add
jnp
sbb
inc
inc
pop
cmp
enter
add
jbe
push
rcr
push
cmp
mov
add
ja
lret
aaa
je
or
or
mov
xor
inc
pop
pop
jg
mov
jmp
mov
cmpsb
add
sbb
mov
hlt
add
repz
sub
mov
mov
or
adc
adc
adc
push
stc
jo
mov
lret
jl
sub
pushl
push
adc
call
or
cmp
xlat
stos
test
sbb
outsb
out
jns
xor
add
push
pop
adc
lcall
sbb
in
ja
add
push
mov
and
roll
add
inc
add
rol
test
out
loopne
inc
add
adc
push
enter
add
mov
lock
ret
js
cmp
add
testb
out
add
jb
das
xor
add
outsl
mov
fimuls
xlat
dec
pop
dec
jne
icebp
adc
clc
aam
inc
and
xchg
stos
sbb
es
add
add
sub
in
inc
push
movsl
inc
lcall
push
out
cmp
push
notb
mov
dec
roll
mov
rolb
movlhps
andb
int
jbe
pop
and
cmovs
adc
push
pusha
fidivl
arpl
call
ror
rep
data16
add
inc
mov
adc
jb
movsb
add
xor
push
lea
push
mov
fidivrs
or
fnstenv
inc
add
add
cmpsb
mov
mov
test
add
movl
and
add
dec
or
push
xor
sub
out
sahf
and
adc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
xchg
xchg
into
cld
lea
push
mov
lock
fldenv
jmp
mov
mov
inc
mov
xor
cmp
sbb
lea
dec
scas
mov
or
sub
out
lock
neg
adc
mov
sub
stc
sub
pop
ror
jnp
pop
nop
add
sub
push
fiaddl
movsb
mov
int3
jl
mov
add
sahf
inc
push
out
push
and
dec
dec
mov
mov
addr16
add
ljmp
mov
or
push
mov
iret
repz
int3
aam
pop
iret
repz
aaa
sbb
sbb
adc
iret
repz
adc
or
test
repz
add
outsl
jno
inc
add
push
sbb
and
push
add
or
mov
mov
cmp
push
sbb
push
mov
mov
incl
inc
decl
mov
cs
mov
cld
cmp
fildll
inc
xor
jbe
push
cltd
pop
idiv
movsl
test
mov
push
pusha
or
nop
inc
add
push
dec
mov
mov
xor
nop
lock
xchg
jb
jmp
cmp
jae
dec
jecxz
sbb
mov
jbe
es
dec
mov
adc
dec
nop
jmp
mov
pop
sub
adc
insb
fsubrl
pop
hlt
int3
pop
lock
pop
clc
push
jg
insb
daa
test
dec
mov
push
fstps
add
test
cmpsb
or
sbb
dec
dec
je
push
mov
add
mov
test
jne
xchg
insb
adc
and
lods
xor
mov
xor
pop
decb
push
imul
mov
jb
jae
cmp
das
sbb
adc
and
and
jmp
xchg
mov
xorb
push
ljmp
test
push
pop
add
xchg
mov
push
pop
push
test
mov
ret
push
adc
fidivl
sarb
mov
stos
aam
pushf
mov
je
cmp
mov
push
jmp
cmp
sbb
ja
icebp
or
aas
jge
add
roll
pop
cltd
pop
idiv
popa
ss
mov
mov
inc
xor
xchg
inc
mov
imul
cmp
dec
inc
in
jmp
or
add
shlb
sahf
jle
pop
sbb
push
shrb
enter
std
mov
clc
adc
fs
jmp
jl
pop
fcmove
movsl
mov
sbb
pop
mov
or
je
insb
xor
jo
sub
sbb
sbb
mov
jae
dec
sub
adc
mov
pop
incb
inc
jns
jmp
adc
adc
cmp
push
shll
cmp
pop
inc
mov
jno
loopne
and
sarb
out
rolb
add
hlt
dec
or
sarb
je
cwtl
push
mov
push
lahf
push
xor
xor
mov
js
pop
je
sbb
shrl
jl
fs
sti
fnstenv
mov
mov
int
int3
dec
jo
leave
push
ret
xchg
mov
je
dec
inc
aad
fcomip
cmpsb
jne
mov
xchg
or
push
mov
cs
adc
lret
push
inc
adc
push
dec
mov
mov
sbb
lods
js
adc
and
push
je
or
inc
mov
jmp
subl
inc
sub
pop
pop
repz
pop
stc
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
mov
adc
lea
inc
out
and
inc
sbb
stos
insb
adcb
cmpb
add
add
mov
jo
adc
jge
loop
or
sahf
mov
mov
mov
or
push
adc
push
loopne
jns
add
inc
adc
or
out
fdiv
cmp
call
sbb
add
es
pushl
dec
aas
dec
ljmp
xchg
rolb
jg
popa
loop
clc
push
pop
adc
push
push
pusha
rcll
mov
dec
add
ss
mov
add
aam
add
fadds
pop
decl
inc
jg
jmp
stos
gs
and
insl
aaa
in
add
mov
cs
arpl
jg
fisubl
mov
inc
inc
cmp
je
xchg
cmp
cli
orb
pop
cmp
adc
add
or
lods
popa
fidivrl
dec
je
popa
xorl
inc
ficoms
fcoms
add
dec
mov
add
mov
incl
fdivr
pop
jae
xchg
push
cmp
inc
sbb
ret
add
inc
imul
sbb
sbb
mov
mov
push
sti
mov
or
cmp
mov
sbb
or
xchg
rclb
jmp
pop
call
add
movl
or
mov
lock
jmp
cli
test
adc
test
imul
dec
nop
sarl
mov
lcall
inc
or
add
push
enter
pop
inc
int
lcall
push
pop
add
out
push
cli
frstor
sbb
inc
sub
dec
movsb
jb
jns
add
xor
lret
test
pushf
cmp
mov
add
fildl
lahf
dec
mov
add
ds
and
rclb
lea
popa
bound
inc
shl
add
jmp
dec
or
jl
push
in
fs
jmp
das
dec
jmp
shr
je
dec
sbb
fcmove
mov
enter
imul
and
adc
inc
in
sbb
push
sbb
pop
dec
ret
cmp
dec
sbb
movb
inc
pusha
and
adc
daa
lea
mov
mov
cmpb
adc
cltd
mov
mov
ja
ret
xchg
cmp
je
push
ret
xchg
popa
push
add
call
rcrl
cmp
or
xor
int
xchg
outsb
and
inc
faddl
push
jmp
cmp
inc
add
and
inc
inc
dec
add
pop
mov
test
or
jecxz
lea
insl
sub
cltd
pop
add
mov
and
push
mov
xor
xlat
inc
mov
sub
add
sub
jmp
aas
cmp
push
push
pushf
push
xlat
push
and
lahf
jmp
pop
and
in
mov
int
jne
add
inc
and
in
add
and
mov
jmp
mov
ja
xor
adc
inc
or
in
jmp
jnp
hlt
or
insb
add
movsl
divb
xor
cmpsb
pop
mov
ret
pop
xchg
xchg
add
add
adc
xchg
es
add
cmp
mov
push
aam
sahf
loop
fs
inc
adc
out
cmp
insl
ds
jmp
pop
arpl
xchg
jno
fs
mov
rorl
pop
push
dec
lds
mov
cli
dec
push
pusha
imul
inc
add
dec
loopne
sub
fldl
mov
or
mov
cmp
in
mov
sbb
daa
or
sub
in
orb
roll
add
sbb
into
dec
fcmove
mov
fidivl
jbe
js
adc
aas
sub
cmp
jge
and
lods
and
addr16
add
cwtl
or
xor
pop
and
fsubrl
push
bound
mov
stos
sbb
in
call
xor
and
sub
in
adc
cmpsb
into
gs
clc
mov
ret
sbb
ficomps
cmpsb
mov
stos
sub
or
shlb
xchg
xor
cmp
xlat
or
notl
push
pushf
enter
lret
sub
in
mov
jmp
mov
dec
shll
push
xchg
adc
dec
clc
ret
cmp
std
data16
add
dec
add
and
and
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
or
jbe
mov
aad
push
pop
push
dec
sbb
cld
xchg
xorb
arpl
imul
cmp
lea
js
cmp
mov
jmp
sub
inc
rclb
imul
fsubl
subl
add
adc
or
loopne
xchg
adc
fstl
gs
mov
sbb
sbb
pop
or
xchg
jbe
or
fs
insb
clc
add
mov
fildl
sbb
push
push
sub
std
jle
dec
xchg
jle
repnz
dec
jne
jle
aam
jne
pop
dec
sbb
pop
lcall
add
adcb
pop
icebp
cmp
push
pop
xor
rcrb
clc
fmuls
sub
call
ljmpw
lods
and
xchg
call
sar
xchg
push
sti
add
push
call
xor
mov
push
incl
add
fs
push
sub
call
inc
inc
fbstp
gs
pop
mov
xchg
inc
in
fstl
mov
jecxz
icebp
push
ret
fld
pop
add
sbb
mov
cmc
xchg
sub
sub
loope
adc
pop
sub
jnp
push
fucomi
adcl
mov
xor
nop
xor
add
adc
arpl
add
je
jmp
iret
xor
push
dec
or
pop
fisttpll
lods
pop
jo
inc
mov
sarl
sbb
mov
js
or
sti
sbbb
aaa
mov
add
dec
xchg
jp
rol
es
loope
test
xlat
add
mov
add
fdivrs
into
jge
and
push
cmp
jmp
jo
leave
and
jne
cmpl
andb
and
sbb
loopne
std
nop
and
adc
aam
repnz
ficompl
daa
lcall
sub
mov
sub
roll
adc
xorb
push
push
push
mov
out
jbe
lods
lret
test
sub
arpl
sub
lods
lods
in
scas
mov
sbb
cld
lods
cmp
push
or
mov
and
popl
jo
lods
cmp
add
inc
cli
push
dec
pop
test
push
movl
cmp
xor
sarb
or
addl
cmp
adc
loope
test
xor
orb
sbb
mov
cmp
sub
jmp
lsl
cmp
xor
jo
jp
lret
movsb
je
je
test
shlb
in
or
or
sbb
push
sub
add
rcr
inc
sbb
bound
rorl
cld
jae
jle
shl
or
cld
stos
aas
and
fadds
mov
sub
mov
or
mov
inc
dec
jne
lea
cld
mov
filds
bnd
sar
add
pop
call
dec
xor
mov
adc
sti
mov
cmp
ret
adc
add
push
movb
add
and
add
sub
dec
ja
inc
es
or
jno
inc
push
xchg
cmpsl
mov
fdivr
daa
test
push
push
aaa
enter
sub
push
cs
push
fwait
adc
cmp
inc
inc
cmp
add
inc
dec
loopne
or
jae
movl
movsb
lods
jge
in
jmp
and
je
and
icebp
xchg
push
into
mov
getsec
clc
adc
aad
jmp
mov
pop
jp
push
mov
orb
lea
out
push
and
sbb
lret
add
jmp
adcl
mov
and
and
and
jmp
push
inc
and
rorb
mov
sbb
sbb
sub
jo
jg
outsl
fstpt
push
or
mov
push
push
pop
inc
pop
or
call
or
lods
sub
push
mov
push
mov
outsb
movsb
mov
push
or
ss
mov
shll
loope
pop
cltd
cmp
fwait
shlb
cld
cmp
ss
push
cmpsb
push
cmp
cmp
cmpsl
nop
in
pop
inc
cmp
lahf
add
lock
sub
cmp
xchg
stos
enter
les
lods
push
mov
add
pop
ret
js
popa
or
xchg
push
pop
pop
insl
push
stos
xor
mov
mov
pop
adc
xchg
sbb
add
lock
out
into
push
ja
std
fidivl
push
jmp
xchg
mov
mov
cs
push
add
hlt
xor
lea
mov
dec
les
hlt
cmp
jbe
xor
in
lea
mov
push
outsl
loope
mov
aas
pop
lods
ror
add
imul
loopne
pop
dec
push
lea
ret
push
mov
lock
std
mov
mov
cmp
xchg
push
inc
inc
sbbb
out
shrl
inc
xor
sti
xchg
out
loopne
xorb
xor
cmp
mov
or
adc
mov
inc
mov
inc
inc
inc
pop
hlt
mov
mov
inc
sarl
popa
mov
add
jbe,pn
mov
inc
mov
push
inc
push
mov
or
jne
or
hlt
mov
div
mov
push
jnp
test
xor
push
dec
shll
push
and
lds
mov
ficoms
mov
pop
sub
add
mov
adc
mov
cmpsl
or
rorb
gs
popa
test
pavgb
loopne
cld
aas
xchg
jo
cmp
jbe
inc
adc
cmp
mov
sub
xlat
xor
sbb
cli
dec
test
cmpsb
push
push
dec
popf
xor
fstpl
sub
dec
std
and
fs
jb
mov
mov
test
add
loopne
in
push
fucomip
or
pop
sub
jmp
xor
stos
sbb
lret
mov
add
sbb
ss
push
out
arpl
mov
xchg
jno
stos
push
out
sbb
fs
and
add
cltd
fldl
cmp
test
lret
cli
pop
leave
cmpl
and
movsb
cld
arpl
movl
mov
outsl
adc
imul
push
cmp
lods
add
mov
mov
imul
std
inc
jae
scas
nop
mov
sbb
adc
cmp
inc
inc
shll
mov
inc
xchg
int3
sbb
sub
and
dec
pop
cwtl
rclb
idiv
push
mov
pusha
mov
mov
mov
jne
out
and
aaa
out
jle
jg
or
cmpl
adc
shlb
cmp
add
pop
and
or
lock
dec
or
sbb
inc
xor
mov
frstor
add
pop
ljmp
dec
xor
lea
jnp
inc
jp
or
cmpsb
or
pop
ret
pop
ret
jo
or
jo
sbb
add
xorl
sub
insl
xor
dec
lock
xor
je
push
adc
push
stos
orb
pop
push
sti
in
in
sbb
pop
jbe
in
sahf
loopne
fdiv
xor
dec
jle
sbb
add
pushf
sub
add
push
movsl
inc
insb
mov
mov
xchg
jne
cmp
rcll
sbb
inc
pop
mov
fldl
xor
and
fucomip
pop
sbb
push
cmp
shrb
add
daa
mov
std
add
arpl
and
pop
xchg
dec
fisubrs
ljmp
out
xor
pusha
stos
gs
add
xchg
jns
mov
loopne,pn
cmp
test
pop
sbb
cwtl
cmp
js
aam
inc
fsub
and
adc
sub
fucomp
or
mov
or
out
fsubrs
sbbl
jb
clc
jge
cs
cmc
aam
inc
inc
pop
pop
pusha
adc
mov
or
inc
cwtl
and
sbb
dec
xchg
popf
mov
or
cmc
xchg
inc
or
push
push
push
push
pop
movsb
xchg
push
adc
mov
xchg
jecxz
insb
cld
mov
jbe
bound
mov
cmp
outsl
add
and
dec
inc
cmp
ds
inc
sub
imul
add
daa
pop
xor
xchg
xchg
push
movsb
pushf
xchg
inc
push
xchg
pop
jns
pop
inc
xchg
or
orl
fimuls
rol
jns
xor
not
shlb
outsl
xchg
arpl
adc
sub
xor
jne
imul
pop
sub
jge
and
sbb
push
in
xor
in
push
in
inc
dec
or
subps
les
push
mov
ret
jmp
push
dec
insb
inc
test
jge
jbe
and
pop
cmp
push
es
je
jle
or
cmp
and
lds
jge
addl
push
inc
push
push
and
jb
mov
in
xchg
ljmp
xor
sbb
je
cmpl
sub
es
adc
cmpsb
and
daa
test
xchg
jno,pt
jns
dec
shll
out
or
ljmp
fsubl
mov
xchg
dec
in
in
inc
inc
mov
adc
mov
ljmp
sub
push
xchg
mov
nop
stos
mov
add
jo
xchg
movsb
jp
das
mov
add
inc
sbb
lea
into
push
inc
mov
das
mov
and
xor
imul
std
pop
pop
pop
popf
aam
sarb
clc
jns
jns
or
test
movsl
rcrb
popl
sub
sarl
dec
call
adc
jp
or
sub
aam
xchg
add
lret
cmp
fcomps
push
push
loopne
jo
movsb
push
mov
ljmp
xchg
movsb
js
jmp
jge
loope
adc
insl
repnz
or
add
xorl
insb
mov
ret
xchg
dec
inc
loop
dec
es
mov
jae
incl
idivb
pop
lret
lret
add
sbb
jnp
cwtl
subb
push
push
js
pop
in
jb
add
add
sahf
imull
xchg
out
push
loopne
adc
sarb
pop
fsts
test
out
jmp
sbbl
adcb
mov
push
movsb
sbbl
add
pop
mov
pop
mov
sahf
out
ficomps
insb
je
test
inc
dec
jl
sbbb
mov
mov
and
test
imul
test
lret
pop
jo
test
cmp
cs
sub
call
out
push
lahf
xchg
dec
cmp
shr
jns
jne
movl
jle
cld
ret
add
dec
mov
add
inc
insb
lret
jne
mov
dec
rorl
jge
inc
mov
pop
fiaddl
fistps
movsb
popa
test
ljmp
push
pop
and
push
fsubrp
aam
and
or
cli
adc
enter
mov
sbbl
lods
scas
andl
notl
and
lea
test
and
or
in
pop
mov
test
cmp
daa
fwait
xor
adc
inc
orb
aas
and
or
xchg
test
je
jmp
dec
adc
jnp
jae
jne
int
xchg
sbb
push
or
dec
sbb
push
andb
jmp
adc
mov
ret
inc
mov
and
jne
lock
insb
or
push
adc
and
or
xor
add
mov
jbe
push
dec
bound
xor
lock
test
and
push
jb
clc
movsl
or
inc
pop
jnp
pop
outsb
cmp
or
mov
out
and
mov
cwtl
outsl
push
outsb
imul
aam
aam
test
sub
loope
mulb
cmp
enter
or
call
and
inc
ds
mov
js
push
mov
mov
push
mov
add
mov
pop
or
sbb
and
sbb
lock
and
adc
jl
ljmp
mov
rcll
jg
loope
cmp
mov
pop
loopne
inc
inc
cmp
sub
es
mov
test
push
popa
jne
or
cmpsb
lea
inc
sub
mov
or
inc
sub
das
add
or
push
pop
cmp
ja
int
loopne
bound
push
inc
inc
in
jo
or
js
jmp
dec
ss
or
and
inc
shlb
mov
push
xchg
pop
dec
in
push
shrb
ret
lods
aam
cmp
jl
dec
inc
mov
fdivl
jb
inc
or
test
xchg
rolb
push
dec
or
or
clc
arpl
into
push
dec
rclb
ss
sub
test
fistl
pop
xchg
jo
mov
adc
lea
jmp
jbe
push
inc
loopne
loopne
jne
ljmp
mov
in
xor
inc
ret
aaa
pushf
adc
call
pop
notl
loopne
jbe
in
pop
mov
imul
ds
mov
js
sub
dec
xchg
nop
jle
push
add
pushf
inc
xchg
xor
add
and
jb
test
fwait
add
jae
or
push
sub
pop
sar
push
enter
loopne
add
pusha
scas
jp
mov
and
dec
push
cmp
fidivs
ljmp
xchg
push
push
xor
pop
int3
lock
sbb
dec
jmp
jne
testb
popa
loopne
ss
fnstenv
jg
push
and
dec
xchg
inc
add
jmp
rol
fistps
xchg
mov
cmpl
xor
ret
cmpl
les
mov
dec
mov
rorb
push
dec
imul
sahf
call
stc
xor
sti
in
mov
and
or
pop
cs
lret
aam
fadd
fdivs
sti
call
jne
sbb
sbb
mov
mov
xchg
mov
add
mov
pop
pop
leave
test
in
or
lock
pop
or
sbb
sahf
pop
nop
dec
out
pop
aad
lret
mov
lock
pop
ja
mov
movsbl
sbb
sbb
adc
push
sar
pop
mov
mov
xchg
push
inc
sbb
xor
lea
mov
aam
clc
fdivs
test
dec
or
je
inc
mov
sub
je
sbb
jnp
popf
or
pushf
pop
or
add
push
inc
sbb
or
adc
ficoml
pusha
aam
mov
adc
arpl
mov
add
sub
push
imul
dec
lock
ja
movsl
leave
test
add
cmp
out
sbb
shl
nop
je
or
inc
pushf
shll
je
lock
cmc
and
test
popa
lds
adc
addr16
outsb
xlat
scas
sbb
pop
and
sbb
jle
xor
mov
loopne
mov
xor
sbb
add
fs
or
incl
outsl
cmc
inc
lcall
pop
cmpsl
dec
ret
imul
lret
xchg
aam
pop
push
movsl
ret
rcll
outsb
lret
pop
lods
mov
xchg
or
or
fidivs
xlat
sbb
jle
inc
je
pop
push
or
pop
gs
mov
ret
add
hlt
inc
adc
push
fdivr
or
lock
cmp
push
jae
push
test
or
mov
fldt
xchg
jle
aaa
jne
das
mov
cmpl
push
add
dec
and
jne
in
or
fmuls
mov
scas
aam
shlb
in
sub
mov
add
mov
and
mov
loopne
into
push
insl
cmp
ret
loopne
and
int3
negl
int
je
ljmp
mov
roll
xor
fdivs
movsl
pushl
test
sti
test
push
mov
roll
aas
les
jmp
inc
pop
jno
sahf
lret
jge
lcall
in
flds
mov
jmp
cmp
js
jecxz
cwtl
ret
mov
pop
xchg
dec
xchg
cmp
movsl
sbb
pop
sbb
pop
sub
loop
mov
scas
add
addr16
mov
push
push
outsb
je
setnp
push
test
insl
int3
dec
sbb
aas
add
sbb
clc
xor
sub
xor
mov
sub
push
push
movsb
orb
rorl
sub
jb
test
insb
lds
jecxz
push
add
stos
add
push
add
ret
imul
mov
jne
mov
jmp
cmp
std
pop
jle
insl
cmpl
incl
xor
mov
xor
int
lods
sbb
adc
mov
pop
mov
cmp
xor
adc
sti
int3
cmc
xlat
mov
adc
dec
sub
dec
rclb
sbb
popa
test
lea
xchg
jbe
insl
stc
lcall
pop
rcrl
sbb
pop
jb
sub
addb
dec
aad
and
push
jg
sbb
sub
outsb
mov
add
jae
addr16
mov
mov
mov
adc
sub
fldt
xor
sbb
sub
cmpsl
push
sub
lret
ja
pop
jecxz
jne
push
jbe
fbstp
inc
push
xor
add
mov
or
jmp
aaa
int3
je
cltd
nop
shlb
sbb
dec
sub
jl
dec
push
jno
inc
movl
push
clc
dec
sarl
inc
clc
popa
div
dec
sbb
lret
pop
mov
or
jne
and
lea
or
ja
xchg
push
inc
je
mov
loopne
fwait
aam
push
leave
ret
dec
add
cmp
incb
scas
push
nop
xchg
clc
sahf
add
mov
dec
jmp
loopne
fsubrl
pop
xchg
sub
inc
cmp
cmp
aas
je
aaa
addr16
mov
addb
nop
push
clc
pop
mov
movb
inc
jmp
cmovl
or
jmp
dec
data16
rclb
inc
inc
cmpsb
repz
sar
roll
aam
cmpsl
sti
sub
data16
aas
add
push
jmp
and
mov
jmp
test
sahf
and
sub
sub
sub
sub
or
pop
shl
jb
or
push
jp
xchg
mov
popf
data16
lea
jns
stos
pushw
add
adc
push
dec
push
pop
jbe
dec
sbbl
pop
pop
xchg
test
jno
aaa
add
mov
call
pushf
push
rcll
pop
popa
jle
sbb
popa
lret
mov
mov
jg
push
push
dec
les
ret
idiv
push
and
jo
icebp
jl
testl
push
xchg
enter
dec
jo
movsl
daa
pop
mov
dec
cmp
insl
mov
mov
test
sbb
add
xlat
and
push
mov
push
lods
sbb
movsb
loop
adc
push
notb
adc
out
mov
mov
sbb
push
xchg
rcrb
add
adc
or
shlb
mov
xor
mov
jle
cmp
pop
sbb
pop
mov
clc
xor
push
sbb
mov
repnz
sub
and
rolb
loopne
lcall
inc
or
xchg
adcb
in
push
sbbl
push
imul
mov
js
inc
jl
push
pop
dec
xor
xlat
push
jne
push
aas
out
sbb
lds
or
dec
icebp
push
daa
push
clc
pushf
jge
cmp
mov
fcoml
add
roll
pop
and
popa
cmp
ss
mov
mov
outsb
push
xchg
cmp
cmp
jne
das
jmp
push
or
sbb
lock
repnz
pop
dec
or
inc
xchg
imul
pop
inc
push
jo
loope
or
xchg
push
lea
lea
or
mov
add
or
testl
ss
pop
sbb
insl
or
or
adc
enter
jmp
clc
sbb
sbb
ljmp
test
adc
imul
mov
xchg
shr
mov
imul
mov
lock
dec
adc
mov
xor
or
call
sbb
mov
mov
mov
loop
filds
mov
out
jne
sar
jl
mov
dec
cmp
jbe
push
pop
lods
cmp
jne
dec
cld
jbe
subb
jae
mov
rcll
add
shll
pop
mov
ret
std
and
adc
mov
pop
cmp
pop
add
mov
push
add
add
pop
and
or
mov
dec
pusha
jmp
clc
and
divb
shlb
and
sti
add
mov
pop
dec
cs
pop
cmp
jge
sub
fimuls
and
cmp
je
mov
js
fs
jno
mov
sti
pop
mov
shr
not
and
add
sub
sub
xor
dec
loopne
repnz
xor
mov
mov
add
mov
cltd
or
mov
and
xchg
jle
dec
lock
lea
mov
inc
add
pop
dec
or
adc
negl
ss
mov
mov
inc
mov
mov
push
mov
xchg
sbb
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
xchg
add
inc
xor
mov
dec
inc
jb
cmp
pop
scas
or
and
add
je
pusha
imulb
testb
add
scas
jp
icebp
mov
aas
gs
push
or
lcall
mov
mov
sub
dec
inc
adc
inc
scas
sbb
fsubl
and
sahf
lods
movsl
push
mov
shl
mov
cmp
jp
add
mov
adc
dec
adc
outsl
mov
jl
push
cmp
cmpsl
sbb
or
mov
pusha
test
loopne
ret
mov
xor
jle
pusha
lock
data16
cwtl
outsl
push
fldl
ret
cmp
addr16
add
imul
stc
negb
dec
ret
les
jl
int
mov
and
aad
sub
out
and
pop
or
jmp
orl
and
idiv
add
push
fisubl
mov
push
push
mov
int3
loope
pop
shlb
clc
add
rolb
mov
imul
mov
loopne
xchg
mov
jne
test
push
mov
mov
mov
or
add
push
popa
mov
lea
cli
adc
cli
ja
sub
shr
pop
decb
dec
clc
incl
ds
mov
push
out
jmp
mov
lock
call
push
clc
mov
je
clc
add
pushf
ret
add
adc
sub
sub
sahf
ret
fs
inc
pop
mov
mov
enter
xor
inc
jne
jle
icebp
add
js
lds
not
and
pop
scas
inc
adc
lahf
or
adc
sub
xlat
sub
nop
out
mov
loopne
or
jb
cld
push
dec
cmp
ja
fisubl
mov
and
pushf
jle
cmp
test
inc
mov
punpcklbw
inc
jl
cmp
jbe
add
push
xchg
add
mov
int3
push
pop
lcall
pop
inc
add
stc
sbb
clc
rcr
sub
add
cmp
or
rol
dec
or
out
add
push
jns
add
mov
in
ljmp
adc
pushf
sar
dec
mov
cs
fstpl
lea
jmp
pop
jg
or
mov
imul
xor
adc
lcall
fwait
rclb
jmp
orl
jp
js
test
inc
mov
mov
insb
xor
addl
lcall
jl
add
push
lea
mov
sub
pop
xor
push
sar
dec
mov
and
inc
xchg
pop
ret
movsl
cmp
xor
cmp
jns
add
push
mov
ret
fisttps
mov
sbb
fbstp
cmp
dec
ficoms
add
lock
loope
lea
mov
mov
jbe
add
mov
push
cmp
shlb
lods
decb
into
mov
out
cmp
jo
xor
jns
dec
dec
sbb
sbb
out
adc
jno
jp
insb
out
lock
lods
pop
and
cld
call
push
dec
push
push
push
jge
shll
stos
shr
adc
icebp
inc
inc
out
or
loopne
es
dec
or
inc
pop
cs
nop
cmp
and
decb
xlat
jne
add
div
outsb
add
fdivs
push
jne
mov
xor
fnstenv
jmp
jnp
imul
mov
jae
xor
aaa
decb
je
lock
pop
mov
mov
loope
out
aad
or
pop
lcall
cmp
je
mov
dec
sbb
and
lock
inc
mov
dec
xor
aaa
pop
iret
jne
fwait
jno
adc
dec
push
test
pop
cli
mov
xchg
pop
push
scas
out
repz
mov
outsl
shrb
into
jne
mov
push
pop
outsb
leave
inc
test
or
xor
mov
sub
icebp
or
push
cmp
push
xchg
dec
add
ljmp
ror
adc
cmp
imul
push
das
cmp
xor
sub
daa
int3
dec
jp
mov
mov
bound
dec
push
and
push
clc
into
xor
xchg
movsl
imul
shll
inc
mov
enter
or
pop
xor
push
xor
and
sub
jmp
out
or
dec
mov
or
inc
or
lcall
mov
out
or
sub
or
sbb
add
fnsave
xor
push
dec
push
sbb
sbb
push
inc
scas
cmp
jo
mov
add
leave
shl
push
jecxz
out
mov
sbb
loopne
or
in
jb
or
xorl
lods
add
jne
and
push
adc
cmp
mov
inc
add
or
or
addr16
and
xchg
inc
inc
testb
insl
repnz
mov
add
adc
imul
mov
add
inc
pop
or
sbbb
cmp
cmp
sub
add
push
leave
pop
xor
mov
sarl
pop
test
repnz
and
or
mov
mov
push
push
icebp
mov
cmp
xchg
jl
dec
cli
stc
pop
sti
push
xor
jmp
push
add
and
andb
addr16
sbbb
imul
pushl
adcl
jno
push
divl
sbbl
pop
jne
push
rcrb
pop
mov
std
mov
sbb
pop
mov
lahf
shlb
es
lcall
int3
add
scas
push
or
pop
mov
inc
mov
bnd
sbb
call
push
insb
dec
or
and
jo
adc
insb
int3
push
mov
sbb
or
je
or
push
int
movsb
sarb
push
ljmp
inc
and
push
pop
sbb
mov
sbb
xchg
xchg
stos
add
pop
or
adcl
jle
mov
or
ret
popf
call
lods
aam
hlt
or
mov
je
xchg
pop
xor
data16
mov
mov
call
jge
jmp
movzwl
or
int3
test
lea
jnp
xchg
in
je
cmp
mov
stos
dec
inc
rorl
cmpb
xchg
imul
test
push
test
mov
add
lcall
mov
jle
iret
fs
sbb
or
or
xor
sbb
pop
pop
mov
lods
or
fwait
or
imul
sbb
xchg
arpl
scas
adcb
stc
sub
rcrl
cmp
leave
rorb
mov
dec
leave
mov
fsubrl
nop
outsl
int
mov
add
icebp
push
inc
lds
aas
insb
jne
jp
ret
cwtl
add
or
out
or
scas
pop
and
cmpl
and
adc
fistpl
cmp
mov
sbb
cmc
jmp
add
dec
xor
xor
cmpsb
mov
ret
in
and
in
xchg
mov
leave
add
call
add
xchg
pop
and
dec
jge
test
pop
xchg
dec
cmpsl
dec
gs
cmpsb
call
and
mov
inc
push
and
in
cmpsl
sahf
push
xchg
lret
neg
lret
test
scas
sbbb
adc
lahf
rcrb
fs
pop
int
mov
loop
jg
sbb
add
mov
mov
popf
inc
cmpsl
dec
sahf
ss
pop
mov
cltd
mov
lahf
mov
in
jb
shr
xchg
or
mov
mov
scas
jbe
lcall
in
sbb
lahf
push
cmpsb
in
xchg
push
lods
rclb
push
inc
call
inc
in
repnz
push
and
rol
and
shlb
loopne
inc
loop
in
in
pushaw
lahf
les
les
test
jb
test
popa
mov
inc
int3
test
loope
lahf
xchg
ret
mov
add
pop
mov
or
sbb
mov
sbb
xor
cmpsb
push
out
ds
pop
mov
orb
push
lea
aaa
test
daa
cmp
adc
movb
dec
ror
add
lea
cmp
btr
lret
lods
mov
add
push
mov
and
test
lock
movsb
je
jns
inc
jb
adc
dec
aaa
mov
or
mov
int3
add
push
or
jp
sbb
mov
push
sbb
sub
push
cld
cmpsl
das
mov
or
pop
movsl
sbb
adc
xor
shll
imul
shr
lds
ds
std
test
clc
jbe
icebp
cmp
jne
push
cmp
and
inc
aam
push
je
inc
cmpsl
or
adc
out
or
test
xor
xchg
mov
xor
mov
push
add
xchg
fadds
dec
jnp
cltd
mov
out
add
add
jmp
xor
push
pusha
subb
jmp
add
add
add
mov
or
dec
call
pop
inc
pop
mov
inc
add
add
adc
jne
add
lods
inc
add
hlt
or
ja
inc
cld
push
ds
mov
mov
dec
cmp
inc
aaa
sbbb
adc
das
xchg
rorb
loopne
int3
das
adc
icebp
mov
or
push
push
sub
shll
enter
pop
lds
cltd
jecxz
cmp
sub
add
cmpsb
push
push
push
clc
add
cli
sti
mov
dec
inc
and
xor
xor
mov
mov
pushl
jbe
inc
mov
je
push
jp
mov
sbb
add
in
rcll
jecxz
sbb
dec
mov
ljmp
movsl
xchg
je
push
or
insb
inc
fmul
mov
pusha
fisubrl
sbb
fstpl
push
fldl
or
fldl
or
pop
pusha
pushf
out
push
mov
xchg
icebp
cmpsb
lods
push
pop
jmp
insb
mov
bnd
push
dec
lea
dec
xlat
das
dec
sar
sub
sbb
je
add
lea
je
or
sti
flds
pop
in
lcall
jmp
mov
cmp
pop
add
mov
sbb
sub
sub
add
add
add
lea
test
sub
lret
xchg
adc
adc
mov
or
push
add
stc
cmp
push
push
adc
lock
clc
lock
fstl
push
inc
push
or
shl
push
push
aaa
add
pop
icebp
jne
das
and
inc
lock
arpl
cmp
push
xor
cmp
inc
dec
fidivl
jnp
mov
jns
and
std
add
add
xchg
fnstcw
push
jl
lods
in
or
push
in
lock
insb
leave
fs
scas
das
hlt
lods
push
loop
push
ds
mov
jle
pop
and
sbb
sbb
jnp
push
inc
or
aas
dec
sbb
push
xchg
jmp
inc
fsubr
mov
ret
add
fstl
popa
push
jmp
test
add
pop
fiaddl
addl
cmp
and
ret
and
push
push
adcl
out
jle
testb
shlb
and
add
adc
mov
sbb
inc
inc
adc
or
andl
xor
lret
lcall
or
int3
cltd
out
add
lods
xchg
or
and
test
pop
lfs
mov
faddl
jne
jb
rol
cmp
enter
mov
lods
std
jge
testb
pop
mov
mov
sbb
rorb
jo
or
sbbl
pop
cmp
dec
movsl
jnp
jg
xchg
dec
sbb
pop
sar
cli
fldt
arpl
and
repnz
add
xchg
inc
cmp
stc
mov
xchg
imulb
inc
jne
loopne
cmp
ds
mov
pop
push
inc
adc
push
adcb
mov
or
out
je
ja
adc
fs
es
ror
in
loope
std
lods
test
loope
lea
test
rorb
cs
lret
int3
shl
enter
jmp
push
into
fisttpll
int3
pop
cmpsl
mov
or
add
pop
cs
add
xlat
xor
lock
cmp
iret
mov
cmp
hlt
fcompl
dec
ss
or
xchg
popa
ret
cmp
pop
in
mov
lret
nop
sbb
call
pop
push
stos
mov
sub
push
or
inc
or
cmpsb
arpl
sar
cmp
inc
sub
pop
dec
mov
aad
pop
and
sbb
dec
rolb
xor
jne
sub
inc
xor
or
adc
movsl
test
imul
imul
mov
xchg
adc
xchg
mov
adcb
inc
dec
xchg
fwait
test
inc
mov
sbb
xchg
lret
cs
sub
xor
test
add
clc
mov
imul
xchg
icebp
je
lcall
dec
adcb
inc
push
inc
cmp
mov
popf
in
mov
lret
jne
xor
pop
adc
jmp
jne
add
xor
xorb
xchg
stc
mov
jcxz
jg
testl
movsb
loopne
sub
subl
imul
daa
mov
sahf
add
imul
dec
xchg
xchg
repnz
enter
jge
rcrb
lret
dec
cmp
movsb
enter
mov
sub
mov
sub
rorb
arpl
and
aam
imul
fstpl
shll
add
jecxz
fsubrl
adc
xchg
std
mov
sti
or
xchg
xchg
jecxz
xor
mov
sbb
add
std
aaa
addr16
daa
sub
out
lock
fdivr
jno
push
jnp
adc
ret
cmp
cmp
out
and
roll
insl
insb
add
in
jno
lcall
gs
cmc
jle
popf
mov
call
ds
call
push
mov
jns
cmp
jno
imul
daa
pop
aad
fwait
in
mov
inc
mov
movq
enter
lds
mov
ja
lea
cmpsb
lret
lock
out
imul
mov
mov
cmp
call
cltd
cwtl
jmp
dec
or
sbb
mov
mov
cs
sbb
mov
std
stc
lods
push
dec
out
imul
push
iret
sub
ss
aad
cmp
dec
in
cmpsb
push
jmp
sub
push
xor
into
inc
inc
mov
ja
adc
lahf
inc
pop
cmp
cmp
xchg
icebp
adc
mov
xchg
adc
std
call
mov
xor
pop
imul
test
daa
xchg
mov
repz
mov
push
mov
jge
xor
popa
mov
fdivrp
enter
or
jne
roll
mov
jmp
popa
dec
jmp
dec
mov
fadds
test
std
pop
lock
mov
loop
xor
push
sub
imul
sbb
jmp
adc
and
iret
dec
jge
int3
cmp
js
xchg
addr16
test
test
dec
push
add
test
pop
stc
pop
pop
aad
lds
lock
movsl
and
and
test
jno
fbstp
bound
popf
popf
push
insl
mov
movsb
adc
mov
movl
inc
lret
jne
cmp
xchg
in
loopne
adc
cwtl
cmovge
or
jp
jne
fdivr
sub
gs
das
push
dec
pop
jno
push
sbb
push
cmp
xor
std
std
add
loope
js
lret
or
mov
sarb
das
out
pop
lcall
imul
mov
push
in
mov
out
loopne
mov
out
xor
mov
mov
shr
jne
inc
cmp
xor
xor
aad
pop
leave
cltd
movsb
jb
mov
movsb
in
and
in
mov
repnz
and
loopne
inc
lea
aad
pop
out
sbb
adc
sub
cmp
ja
fisubrl
sarl
or
add
leave
or
js
mov
iret
shl
loope
add
xchg
popa
enter
lock
or
push
push
ljmp
sbb
push
repz
xor
repz
add
jb
sbb
push
push
jns
adc
push
jecxz
inc
call
and
mov
cmc
mov
pop
bound
add
adc
and
push
mov
repnz
les
imulb
or
xor
add
mov
mov
test
adcl
dec
test
sti
pushf
add
or
and
stos
xchg
xor
push
pop
mov
push
and
and
inc
xchg
int3
fdivrs
sti
mov
push
jecxz
std
mov
cmp
jns
in
fwait
mov
cmc
sbb
mov
mov
mov
dec
cs
cld
mov
lcall
push
push
stc
pushf
pop
xchg
pop
repz
sbbb
clc
mov
inc
lea
xchg
mov
lods
add
ds
mov
mov
cmp
mov
in
push
repnz
orb
movsb
cmp
or
push
aas
dec
push
xchg
add
adc
or
cmp
incl
nop
test
in
sub
xchg
sub
cmpsb
add
push
nop
inc
lods
or
dec
mov
pop
xchg
clc
test
pop
je
movsb
data16
stc
dec
mov
add
pop
add
dec
movl
lds
loope
mov
ds
lret
mov
movsl
mov
iret
sbb
xor
loopne
shrb
add
mov
rcrb
or
push
sub
add
add
fsubl
jecxz
imul
push
sbb
xlat
aaa
and
fs
in
repz
dec
enter
mov
or
jne
push
pusha
mov
fsubrs
dec
push
outsb
xchg
or
push
ret
inc
imul
mov
inc
jp
or
cmp
lret
data16
push
sub
push
pop
or
mov
xlat
dec
dec
pushl
mov
test
add
xor
loop
adc
bound
ret
cmpsl
mov
sbb
jle
add
insb
xchg
and
jle
dec
or
fsubs
pop
sub
clc
std
les
mov
push
mov
shll
fucomip
stos
bound
lahf
or
enter
jo
sbb
or
pop
les
dec
dec
and
les
cld
lods
cs
call
mov
jmp
movsb
sub
mov
movl
cmp
pushf
xor
sub
lock
push
gs
fcmovnu
or
or
xor
add
sub
and
inc
mov
cwtl
rclb
ds
or
lea
cli
xor
inc
cld
push
es
cmp
fwait
add
push
add
je
hlt
daa
clc
inc
imul
pushl
testl
cmpsb
jmp
ss
cltd
mov
repz
and
cmc
pop
pop
test
cmp
cs
pusha
push
sbb
ret
and
jae
sbb
xchg
in
push
add
mov
jno
lds
sti
xor
push
lock
fs
test
jmp
push
pop
push
fcos
out
int3
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
fnsave
out
dec
adc
inc
mul
pop
jb
cmp
or
cmp
pop
idiv
push
jbe
dec
sub
sbb
or
or
fimull
fmul
sub
iret
push
mov
xor
repnz
add
and
mov
cmovbe
mov
jmp
movl
pop
stc
movb
mov
dec
or
clc
movb
rcll
icebp
daa
push
inc
add
inc
inc
mov
fmuls
in
push
and
loop
and
mov
cld
push
mov
movsb
lsl
sbb
or
add
fsubs
xlat
pushf
sub
sub
and
sbb
shrb
dec
add
ds
shll
mov
xchg
mulb
sbb
pop
leave
pop
jne
mov
dec
je
pop
push
jl
sbb
lock
adc
out
or
outsb
mov
das
dec
mov
or
popa
imul
cmova
dec
sbb
xchg
dec
add
mov
fidivrs
jne
or
lea
jb
das
pop
adc
sbb
push
xchg
movsb
mov
jae
push
sub
test
adc
push
out
ret
cmc
jne
mov
cmp
adc
adc
cmp
xchg
adc
pusha
js
xor
and
xchg
xor
or
mov
cmpsb
mov
fs
inc
adc
mov
add
jl
mov
pop
mov
cld
sbb
subb
mov
leave
mov
push
push
or
pop
push
mov
mov
sbb
sbb
or
sbb
lds
dec
shlb
pop
mov
xchg
lods
lods
ja
add
add
int
call
daa
xchg
adc
stos
jmp
fwait
add
push
aam
pop
shrb
push
es
dec
push
out
dec
xchg
push
in
rcr
rcrl
jp
sub
pop
dec
inc
or
testb
stos
adc
lock
and
adc
xchg
int3
cmp
test
mov
dec
inc
cmp
sbb
cltd
dec
dec
jmp
aas
cmp
fsubrl
xchg
or
sbb
call
out
stc
dec
cmc
lea
and
pop
out
xlat
add
cmp
mov
inc
inc
or
rol
pop
adc
fs
add
outsb
mov
adc
inc
test
pcmpeqb
inc
xor
mov
jmp
fcoms
shl
push
adc
pop
push
loopne,pn
xor
das
sub
incl
dec
or
loope
push
push
jbe
xor
mov
out
jne
xchg
icebp
sub
ss
inc
mov
ss
out
cmp
je
ss
sahf
ss
and
faddl
jns
add
aam
xchg
pop
addr16
outsb
or
inc
sbb
cld
pop
adc
in
ret
repnz
and
and
out
or
sbb
fwait
jo
sub
je
mov
cld
iret
push
mov
cmp
dec
or
add
jp
pushf
jno
addr16
sbb
icebp
repnz
hlt
pop
and
lea
daa
addb
mov
sub
inc
fists
adc
clc
popf
movsl
aaa
inc
cmp
roll
mov
dec
sbb
imul
jne
adc
add
bound
or
inc
xor
jno
mov
sbb
fwait
dec
cmp
or
mov
sbb
sti
jb
inc
sub
shlb
popf
lahf
in
push
mov
call
adc
xchg
dec
push
cs
nop
xor
push
xor
adc
mov
nop
lcall
push
inc
and
push
pop
mov
orl
inc
imul
or
fiaddl
mov
or
ret
pop
and
aaa
jbe
mov
cmp
rcl
pop
int3
cmc
mov
test
pop
mov
dec
add
data16
add
lret
movsl
mov
cmp
cmpsb
rorl
and
leave
ja
add
cmp
xor
sbb
cmp
jl
mov
mov
mov
arpl
jle
cmp
fs
mov
sbbl
pop
orl
sbb
cmp
lea
mov
cmp
aam
xchg
fs
lock
add
pop
leave
push
sbb
sbb
mov
shrb
nop
fwait
dec
mov
pop
and
xchg
xchg
push
add
icebp
imul
mov
adcl
ret
inc
roll
hlt
add
pop
leave
test
loopne
add
mov
test
xchg
or
jne
or
test
push
sti
or
repnz
sti
nop
jo
mov
or
sub
jne
fxch
or
ja
push
mov
lock
jmp
pushl
mov
int
cmpsb
pusha
mov
xchg
inc
loopne
int
je
or
je
dec
je
stos
out
dec
mull
jmp
mov
mov
lret
or
call
sub
adcb
fdivrl
jns
push
mov
pop
push
in
sub
ret
addl
or
mov
imul
inc
pusha
jne,pn
sbb
inc
fs
pop
mov
mov
cs
sub
adc
adc
and
mov
mov
inc
fsubs
adc
sub
mov
jbe
jno
xchg
jno
into
rorb
push
sbb
rolb
dec
jmp
fsubrs
cmp
test
or
lcall
adc
cmp
pop
popa
popa
jns
add
xor
bnd
scas
gs
or
test
jmp
fs
mov
inc
data16
mov
pop
ror
sbbb
test
ret
fisttpl
push
imul
cwtl
je
xorb
sub
cmp
outsb
xchg
sbb
and
cmp
clc
adc
adc
add
push
xchg
and
dec
mov
gs
sbb
sbb
fmull
sub
dec
dec
xchg
push
ret
and
jo
imul
daa
or
inc
mov
pop
inc
pop
test
and
cmc
sbb
mov
mov
mov
cmp
jbe
or
movsb
inc
dec
pop
sbb
out
inc
jge
push
in
mov
cmp
mov
jmp
scas
push
enter
or
imul
pop
push
nop
push
xor
xor
add
add
out
movsl
fimuls
dec
mov
adc
fldl
ds
daa
or
sbb
pop
or
dec
add
lods
in
mov
dec
push
out
mov
pop
bnd
add
add
mov
mov
in
fdivs
clc
xor
mov
inc
and
cmp
mov
and
push
rorb
mov
adc
mov
adc
sub
inc
mov
jl
mov
adc
mov
test
sub
lahf
xchg
add
inc
lcall
or
test
fcomps
ja
cmp
ss
into
div
dec
jmp
xor
nop
cmp
jb
inc
adc
add
sub
inc
inc
inc
pop
je
pop
lods
popf
dec
lea
mov
xchg
inc
cwtl
xchg
addr16
xor
nop
aam
mov
adc
shr
call
dec
stc
add
cmp
popa
xor
daa
stos
imul
inc
cmp
sub
rclb
mov
or
into
inc
add
xor
int
shrl
pop
add
adc
jne
adc
scas
insb
pop
sub
push
mov
cmp
dec
sub
mov
insb
inc
sbb
shl
mov
mov
jecxz
mov
je
or
shrb
jge
rcll
inc
outsl
cld
dec
jecxz
ret
dec
mov
addb
out
dec
xor
ss
adc
orb
jge
push
push
orl
or
test
sbbl
push
mov
fs
pop
jbe
loope
and
jo
lds
sbb
inc
inc
pushf
or
or
or
sub
lea
test
mov
sahf
mov
cmp
roll
mov
sbb
repnz
push
inc
pop
mov
sar
mov
mov
adc
xor
das
mov
loope
and
call
sbb
aad
movsb
in
and
addr16
add
rcl
sub
pop
push
adc
andb
push
jb
or
sti
or
sub
out
and
shr
lock
and
andb
mov
mov
pop
xor
lcall
push
rol
pushf
mov
push
push
pop
push
dec
push
adc
mov
add
jmp
add
out
dec
orb
or
or
push
and
imul
mov
outsl
add
jge
mov
cwtl
add
and
ret
xor
pop
and
sub
cmp
mov
test
jmp
pop
je
push
dec
loopne
sbbl
rcl
add
nop
and
dec
andb
and
push
cmp
daa
adc
or
inc
cmp
sbb
dec
adc
lcall
repnz
add
push
aam
or
xchg
add
out
add
and
mov
pusha
inc
add
and
and
ret
fmul
lcall
hlt
inc
adcl
scas
rcl
xchg
repz
adc
or
orb
nop
pop
xor
xchg
andl
push
pop
rol
dec
sarb
cmc
pushaw
pusha
add
in
push
lret
aaa
xor
ds
add
es
lods
inc
clc
stos
add
or
cmp
mov
movl
add
add
mov
imul
scas
jo
mov
pushf
rclb
cmc
adc
scas
adc
xchg
mov
jl
out
mov
test
not
mov
xlat
mov
push
xor
adc
push
shlb
in
lret
dec
lock
mov
sbb
stos
mov
shrl
in
or
adc
lock
not
nop
mov
addr16
roll
incl
enter
subb
lock
nop
jle
rcrl
add
ret
sub
xchg
cmp
fwait
test
jp
adc
stos
jmp
xchg
out
rclb
jg
jg
adc
and
rorb
inc
push
pusha
jo
addr16
test
xchg
insb
sub
and
scas
mov
or
sub
mov
or
jle
dec
roll
lret
push
lods
pop
sub
mov
loop
xchg
scas
orb
inc
outsb
adc
movsl
fdivp
jge
push
rol
hlt
rep
ss
testl
lock
push
and
out
shrl
fcomps
or
lods
mov
icebp
imul
dec
xor
test
dec
sbb
mov
leave
clc
nop
mov
stc
xchg
add
and
imul
push
mov
fs
push
js
jae
jns
push
add
test
or
push
jmp
and
jno
add
sarb
test
push
jae
adc
jo
cwtl
das
mov
aas
out
jle
cmp
movl
mov
insb
adc
xor
xchg
je
mov
jl
loope
xchg
out
adcb
xor
test
add
lret
fldcw
cld
adc
pop
pop
fnclex
mov
or
adc
adc
sti
push
sub
outsl
push
push
dec
adc
push
and
jb
pop
xor
push
pop
outsl
jl
fbld
or
jbe
jle
pushf
addr16
cmpsb
push
test
jo
ja
test
sbb
loopne
push
or
mov
test
mov
and
add
popa
lds
into
and
pop
dec
fmuls
ljmp
clc
sbb
out
dec
sub
ja
push
rcrl
sub
add
sub
xor
xor
fld
lock
in
lock
es
inc
rep
add
xor
jle
adc
fs
sub
je
insb
push
push
jbe
sbb
adc
ficompl
pop
sarb
push
dec
xchg
test
aam
hlt
push
sbbb
jmp
cli
addb
push
inc
or
push
adc
pop
jno
xchg
and
adc
clc
lock
pop
or
faddl
cltd
or
dec
mov
pusha
jb
push
aam
inc
leave
or
inc
add
loopne
pop
xlat
insl
push
cmp
pop
xchg
dec
in
fcmovne
lods
xchg
lock
enter
pop
fcoms
mov
mov
and
jl
loopne
push
mov
pusha
cmp
and
sbb
pop
mov
nop
jl
js
xor
hlt
push
push
clc
mov
jmp
push
xor
and
mov
or
mov
cmp
outsb
dec
fnstcw
pushl
cmp
dec
add
jmp
adc
or
adc
lods
inc
cs
out
pop
sub
mov
mov
imul
testb
sbb
adc
add
sub
data16
sbb
sub
mov
jge
adc
push
push
movsl
push
sarb
int3
xchg
sarb
call
jne
data16
aas
jmp
adc
jbe
mov
outsl
jo
stos
jae
push
sub
adc
inc
add
or
sbb
push
imul
push
fcompl
dec
xchg
sub
pusha
sbb
push
xor
add
test
aaa
or
mov
popf
enter
sub
outsl
and
sbb
pop
imul
mov
adc
jg
push
sub
jl
cmp
jg
inc
jmp
cmpb
dec
jbe
jne
imul
add
fisubrs
cmc
aas
sbb
lret
or
jb
mov
fsubl
inc
sbb
fsubs
popa
insb
add
mov
xor
mov
aam
dec
xlat
push
fcoml
add
pop
cld
cwtl
into
cmpsb
mov
cmp
xor
jne
and
ja
dec
incl
mov
test
addb
leave
mov
dec
or
ret
dec
or
inc
xor
push
sub
movl
imul
inc
and
imul
or
aas
xor
jno
sbb
mov
insb
std
fisttps
fldenv
push
add
pop
or
cmp
or
ljmp
rcl
or
out
addl
inc
cmp
out
pusha
mov
ror
cmpsl
andl
cld
mov
idivl
sbb
pop
and
lea
cld
push
es
sarb
inc
pop
mov
xchg
mov
insl
jno
jne
mov
inc
jle
cmp
jl
dec
pop
dec
popf
loopne
mov
enter
loopne
pop
inc
lret
adc
pop
adc
push
pushl
add
jl
in
addr16
loope
pop
and
inc
mov
loop
clc
adc
jmp
sahf
sub
xor
lcall
fiaddl
xor
cmpsl
test
or
jne
inc
sbb
orb
mov
xchg
sub
dec
cmpb
dec
adc
dec
movsl
cmp
sbb
sub
cmpb
xor
in
adc
push
inc
mov
mov
inc
or
lcall
cld
adc
push
jl
movl
mov
movsl
je
clc
or
add
add
ret
jg
aas
cltd
push
daa
push
xchg
jle
cltd
orb
sbb
pushf
sbb
nop
push
jle
jp
xor
and
bound
push
hlt
xchg
push
loope
cltd
test
and
mov
pop
jg
lods
jmp
push
pop
jl
mov
dec
xchg
add
rorl
xchg
xchg
or
popf
adc
push
call
aaa
loopne
cmp
inc
sbb
sbb
scas
test
ljmp
or
cwtl
push
or
call
or
stos
loope
cmpsb
cld
cs
mov
aaa
mov
in
adc
ss
inc
inc
and
add
rolb
push
adc
jmp
mov
xchg
sbb
gs
pop
xchg
hlt
cmp
push
dec
xor
inc
lret
cmp
or
sbb
je
push
push
mov
jg
xor
filds
dec
rorb
and
push
inc
imul
adc
or
addr16
clc
adc
push
test
and
cmpl
shll
cmpl
inc
das
and
cmp
inc
push
pop
cmp
test
movsb
push
pop
frstor
lods
data16
xchg
loop
adc
aaa
jl
xor
cmp
dec
sti
and
or
dec
and
aas
push
dec
imul
js
fs
or
jb
inc
xchg
inc
cmp
push
inc
xchg
sbb
add
lcall
add
and
xchg
fld
adc
jecxz
mov
push
or
loop
nop
pop
jnp
pop
je
mov
int
pop
push
pop
cmpl
adc
dec
add
dec
jl
push
jmp
cmp
or
neg
arpl
popa
xchg
je
mov
rcrl
mov
jmp
outsl
sub
inc
xor
sbb
rolb
add
inc
push
adc
xor
push
inc
and
enter
ja
mov
rorb
in
pop
adc
adc
lock
mov
mov
jno
inc
arpl
loopne
xor
fadds
mov
jmp
xor
add
cmp
push
mov
xor
sub
pop
or
pop
call
and
cli
and
xchg
xchg
pushl
xchg
imul
icebp
enter
outsl
sbb
mov
or
in
pushf
pusha
dec
xor
js
jns
xor
and
test
mov
jb
in
cmpb
lea
sti
mov
pop
je
pop
cmc
and
gs
pop
and
or
xchg
test
bound
fistps
pop
or
xor
pop
push
cmp
xor
sub
jl
mov
inc
mov
and
loopne
adc
push
lret
insl
sub
or
mov
add
and
push
mov
mov
inc
xor
fld
into
push
ljmp
pop
pusha
aaa
pop
movsb
sub
pop
inc
mov
cmp
inc
push
clc
in
dec
fs
stos
dec
add
stos
insl
inc
and
leave
mov
aad
sub
icebp
cmp
scas
mov
lahf
es
repz
push
fnstenv
push
daa
data16
or
cld
xchg
sub
pop
test
outsl
push
mov
fs
int3
mov
mov
or
mov
pop
fildl
jne
jmp
ja
mov
rcll
add
arpl
adc
dec
inc
mov
jecxz
mov
dec
fs
jle
movsl
orb
or
or
xor
inc
mov
les
into
sub
inc
adc
and
add
andl
push
xchg
push
jle
add
jbe
and
dec
sbb
lock
xchg
test
aaa
sbb
pop
inc
sarl
jg
xchg
test
sub
shll
insb
aam
lods
call
and
pusha
jbe
add
sub
jmp
sbb
mov
sbb
dec
in
mov
dec
jg
adc
cmp
mov
call
lret
pop
sbb
push
aad
jecxz
pusha
cmp
or
loopne
lock
mov
pop
or
mov
adc
and
sbbb
js
sub
push
pop
test
mov
daa
lds
popa
and
notl
repnz
xchg
pop
sub
ss
call
or
lock
add
aam
shl
movsb
jbe
push
push
push
adc
clc
push
mov
ljmp
add
loope
inc
inc
pusha
mov
loop
mov
mov
mov
xlat
je
cmp
push
adc
shll
testb
les
add
xchg
rorb
dec
add
add
dec
dec
sarl
jmp
inc
ds
faddp
sbbl
outsb
adc
xor
cmp
jbe
mov
adc
sub
push
or
push
in
push
pop
push
jnp
lds
pop
shr
jmp
das
jecxz
and
jmp
pop
js
inc
adc
adc
push
push
inc
scas
jle
mov
mov
xchg
jbe
inc
or
es
add
xchg
jle
xor
scas
ret
push
insb
or
sbb
notl
les
fidivs
pop
leave
les
out
xor
and
mov
xchg
icebp
sub
sbb
into
je
xchg
sub
jbe
lea
lea
or
xchg
push
sbb
dec
dec
cmp
pushf
repz
mov
xchg
mov
add
lods
or
add
or
and
xor
or
sub
and
cwtl
push
lods
daa
adc
xorl
in
enter
add
dec
and
imul
loopne
hlt
loop
mov
cmpl
lock
mov
rcl
test
push
out
inc
cmp
xor
out
jle,pn
cmp
push
cli
and
push
and
push
mov
adc
push
iret
pop
sbb
loope
jb
push
out
or
in
ss
adc
ss
leave
leave
and
sub
ret
leave
xor
cmp
dec
fwait
xchg
addl
xchg
xchg
xchg
dec
dec
push
push
in
in
pop
add
in
in
insb
jo
add
jl
xchg
dec
rcrb
mov
and
xchg
cwtl
xor
and
pushf
mov
dec
test
sub
inc
add
add
push
imul
mov
in
push
mov
or
shlb
movsb
mov
adc
in
adc
int
xor
sbb
xor
push
xor
clc
and
nop
nop
int
and
sbb
mov
pop
push
adc
in
mov
and
cwtl
mov
pushf
dec
cmp
rorb
or
jne
out
and
mov
enter
xlat
inc
ljmp
andb
cli
sub
xchg
loopne
and
or
imul
and
dec
cmp
and
add
push
into
mov
imul
aam
repnz
and
push
cmp
inc
pop
cmpsb
adc
mov
fldl
rorl
pop
xchg
xor
dec
inc
mov
adc
jmp
out
test
jo
out
inc
adc
xor
into
les
inc
ss
les
jl
je
sub
xlat
addb
push
adc
or
hlt
adc
movl
jmp
jbe
cmp
fmuls
in
sbb
ret
popf
pop
int3
or
inc
adc
xchg
add
outsb
in
dec
push
or
sbb
dec
int
std
pusha
pop
je
push
pushf
dec
imul
js
and
push
cmp
pop
xchg
add
cmp
dec
pop
push
add
xor
js
push
stos
fadds
les
adc
xor
repnz
lret
add
cmc
es
push
push
sbb
aam
outsl
pop
nop
xchg
add
mov
jmp
mov
adc
adcl
or
jp
mov
pop
jle
les
orb
pop
shlb
adc
test
cmc
loopne
adc
lahf
or
xchg
mov
and
fcoms
std
xchg
enter
ja
mov
bound
bound
int3
inc
das
arpl
mov
aam
adc
icebp
insl
sub
jl
cmp
and
mov
push
pop
popa
mov
enter
lods
add
inc
sbb
out
add
mov
loope
subl
test
sbb
push
xor
arpl
sub
sub
arpl
mov
mov
sbb
push
adc
in
arpl
lret
testl
xor
mov
xor
mov
adc
mov
pop
and
xchg
or
cmp
int
fwait
loope
daa
into
daa
jecxz
clc
push
xchg
xchg
push
push
mov
push
icebp
mov
xor
push
and
out
icebp
sti
imul
sar
mov
or
xchg
mov
movsb
imull
test
push
and
iret
adc
test
shr
dec
int
push
adc
mov
mov
inc
sbb
mov
ljmp
add
inc
pushl
mov
and
push
jns
rcr
mov
sahf
into
xchg
dec
repnz
lock
pop
addl
adc
jbe
sbb
mov
or
push
addr16
mov
pop
movsb
inc
ja
cmp
in
lods
mov
push
ja
call
push
hlt
mov
add
jo
test
jmp
out
push
mov
cmp
xchg
sub
add
cmp
fsubs
loope
lret
xchg
repnz
call
call
jmp
push
dec
inc
inc
aas
adc
lea
push
add
dec
jo
fimull
mov
cmp
pop
pusha
fcoms
push
inc
mov
push
xchg
and
jns
jg
xor
sarl
cmp
test
cmpl
fldenv
pop
out
lods
push
or
push
add
loopne
inc
mov
imul
cmp
test
mov
shlb
push
aam
jmp
sbb
out
inc
dec
out
sub
jmp
inc
icebp
and
mov
dec
rorb
ds
pusha
push
je
lcall
inc
and
cmp
sbb
jnp
cwtl
fisttps
cmp
bound
ret
std
movsb
sub
inc
mov
out
in
push
sysenter
sbb
dec
add
xchg
sbbb
int3
cmpsl
or
jle
clc
clc
sahf
cmp
push
xchg
outsb
ja
sub
sub
jne
sahf
dec
and
jae
mov
scas
pushl
adc
cli
or
inc
popa
das
fimuls
mov
adc
mov
sub
mov
sub
loop
stos
push
and
inc
sarb
call
mov
sub
xchg
cmp
jmp
push
daa
or
pushl
clc
push
mov
sbb
gs
movsl
dec
add
lds
add
xchg
scas
in
mov
lods
push
orl
fwait
sar
or
inc
inc
sbb
or
dec
cmpl
add
inc
faddl
jl
mov
dec
dec
stc
pop
pusha
mull
rclb
adc
into
fs
dec
lock
push
xchg
sub
or
push
addb
test
mov
shrb
xchg
jmp
ss
or
jmp
mov
std
jno
inc
dec
pusha
inc
rcl
or
lret
fisttpll
push
mov
xor
add
push
jo
lret
jmp
or
popa
aad
pop
and
jns
xchg
pop
or
mov
xorb
sub
push
push
cltd
sub
mov
fdivrs
jne
ljmp
pop
cmp
insb
sub
jne
divl
fidivrs
fdiv
or
xor
mov
inc
cmpb
js
jb
xchg
and
sbb
js
add
cmp
pop
xor
and
out
in
js
sbb
pop
orl
xchg
or
mov
aaa
push
xor
add
add
sub
jmp
sub
jmp
cmp
sbb
sub
or
mov
imul
insb
rcrb
jmp
sbb
jmp
inc
cmp
pop
movsb
test
add
jmp
popa
add
xchg
xor
inc
and
stos
lahf
or
sbb
pop
push
push
mov
pusha
adc
sub
jg
xlat
jo
sbb
push
pop
and
push
outsl
mov
cmpsb
mov
jmp
mov
in
push
sbb
push
and
mov
and
cmpsl
inc
scas
shrb
add
shlw
ret
pop
in
iret
jnp
push
pop
inc
xor
ret
rcll
pop
push
mov
or
xor
sbb
cli
adc
arpl
decb
xor
sbb
movsl
cs
push
notb
xchg
movl
pop
sbb
orl
or
aaa
sbb
adc
push
mov
outsl
or
imul
and
arpl
push
adc
repz
pop
cmp
xchg
mov
xchg
or
ja
dec
hlt
mov
jge
addr16
pop
lods
inc
adc
add
push
pusha
mov
fiadds
push
jne
inc
sbb
xlat
les
and
adcb
sar
pop
push
pop
lods
pop
sarb
pop
mov
inc
and
jg
push
mov
lds
add
xchg
xor
clc
je
adcb
pop
xor
sbb
ds
andb
pop
push
lock
insl
stos
nop
adc
add
dec
cmp
dec
fildll
jmp
push
and
imulb
push
fnsave
cmp
shlb
testb
test
add
js
pop
sbb
dec
mov
jmp
mov
dec
sub
dec
and
enter
test
ds
mov
mov
push
call
leave
xchg
jp
mov
test
stos
rcrl
dec
inc
imull
repnz
dec
xor
inc
jmp
icebp
xor
jmp
jge
mov
out
cmp
loop
jle
mov
fsts
loop
ret
push
jp
sub
movsl
cmp
jmp
and
pop
add
sbbb
push
gs
xor
sbb
inc
nop
es
push
jnp
out
js
push
cmp
sub
daa
sbb
mov
sub
out
inc
push
fs
das
rclb
cmp
daa
movsl
mov
out
psubw
sti
inc
rolb
adc
dec
mov
sub
das
mov
cwtl
cmp
jl
pusha
xchg
mov
mov
pop
dec
xchg
dec
mov
test
loopne
inc
dec
cmp
daa
ret
sbbl
pop
pop
into
sub
mov
add
lret
icebp
or
sub
pop
push
testb
jno
or
adc
scas
xor
test
cld
dec
mov
outsl
push
dec
repnz
repnz
or
dec
inc
das
adc
inc
jb
es
ja
dec
add
push
out
jle
out
xchg
mov
mov
sub
mov
test
mov
icebp
in
inc
xor
es
gs
mov
xchg
and
jne
or
and
jle
data16
pop
and
jge
inc
pushf
shlb
mov
mov
and
add
add
xor
and
clc
jbe
push
dec
or
ror
sub
inc
stos
mov
adc
sub
arpl
int
push
dec
add
or
lret
icebp
add
inc
push
dec
mov
daa
test
mov
xor
mov
add
je
push
cwtl
cpuid
cmp
add
add
stos
inc
outsl
call
push
data16
pop
imull
movb
mov
or
cmp
sub
sbb
pop
test
add
js
or
xchg
in
imul
lahf
mov
pop
add
bound
dec
sti
mov
mov
xchg
test
and
movsl
or
add
or
iret
and
mov
and
shll
dec
xor
adc
or
inc
outsb
aas
and
shr
es
jmp
shrb
pop
and
and
loop
sahf
lock
test
adc
or
add
xorl
adcb
sbb
lock
or
or
sub
inc
sub
mov
and
mov
or
adc
dec
mov
and
mov
and
cltd
adc
and
jecxz
jge
add
movnti
or
jg
inc
adc
or
pop
fwait
or
or
add
sub
sbb
sbb
loope
flds
and
neg
neg
pop
adc
pusha
mov
pusha
loope
pop
sub
or
sarl
and
adc
fnstsw
pusha
push
pop
rcrl
insl
fistpl
pushf
dec
cmp
push
lea
fimull
test
es
adc
sti
add
add
ja
add
test
fisttps
loope
loop
push
xor
sbb
je
add
dec
jne
orl
lret
pop
mov
ret
scas
add
pop
testl
cmpsb
insl
popf
sub
pop
xorb
dec
mov
sub
and
inc
add
adc
in
cmpsb
inc
flds
fnstenv
pop
add
pop
push
test
addl
mov
inc
imul
aas
les
push
adc
or
mov
xor
dec
adc
sti
movsl
ja
cmp
stc
cmp
mov
or
pop
fs
sbb
cs
lods
out
fcompl
in
mov
pop
cli
add
les
sub
mov
outsb
pop
sub
jmp
sub
push
lcall
lcall
inc
test
int3
cmpsb
xor
mov
hlt
add
repz
add
mov
pushf
clc
sbb
fstpl
add
mov
loope
clc
loop
stc
into
jbe
or
or
add
mov
inc
xchg
aad
or
imul
xor
ret
cli
ss
movsb
repnz
or
test
mov
fimull
not
insl
in
sbb
jp
dec
in
arpl
lock
pop
scas
loop
jo
jp
push
sahf
jmp
pop
ret
push
test
movsb
or
addl
repnz
lds
mov
and
add
out
dec
pop
add
cmp
mov
pushf
mov
push
add
outsl
mov
sbb
pop
cmpsb
hlt
push
add
ret
or
jno
or
subl
nop
inc
add
aad
xchg
xor
dec
cmp
test
sbb
lock
add
rcr
fistps
hlt
adc
movsl
dec
pop
add
addl
in
scas
push
inc
sbb
test
sbb
xchg
push
pop
push
inc
das
in
sti
or
jno
mov
dec
inc
and
xorl
or
or
mov
ret
mov
or
mov
mov
insl
jo
imulb
out
gs
mov
add
orb
add
nop
inc
or
pushl
lea
sbb
or
and
sub
push
mov
mov
push
or
mov
jae
push
sahf
fucom
popf
adc
push
sbb
inc
test
add
pop
inc
mov
cmp
ret
sbb
lock
ror
mov
cld
adc
mov
mov
add
loope
push
movsl
sbb
sahf
push
rolb
scas
shl
jne
mov
pcmpgtw
inc
ja
mov
out
sbb
rcrl
imul
clc
jecxz
repnz
pop
fadds
into
xchg
popa
cmpsl
push
xchg
mov
cmp
scas
in
pop
cwtl
paddsw
rolb
jnp
imul
cmpsb
bnd
dec
pop
or
mov
xchg
adc
sbb
shll
push
or
stos
outsl
lcall
dec
jle
out
mov
or
cmp
inc
sbb
xor
push
imul
loope
push
xchg
fsubrs
xchg
mov
ljmp
ret
enter
aad
push
jo
push
rcrb
cmpl
and
orb
and
xor
push
and
fldcw
push
push
mov
add
sub
fwait
mov
adc
sbb
and
or
jle
or
js
call
mov
cwtl
fsubrl
jo
push
sub
inc
mov
inc
je
sbb
and
ldmxcsr
inc
and
pop
cmpsl
test
dec
jle
mov
push
call
cmp
imul
repz
mov
adc
mov
adc
cmc
jbe
dec
jmp
adc
cwtl
and
out
xlat
sub
xchg
data16
push
adc
movsb
lds
adc
pusha
xchg
and
popf
dec
sub
pop
arpl
xor
sub
mov
cltd
jns
ja
mov
jl
sarb
jnp
add
jle
ret
call
out
dec
adc
imul
scas
inc
loopne
adc
test
lea
ds
inc
xor
ja
scas
psubq
xchg
rolb
pop
rcrl
add
icebp
sti
cmp
or
or
add
loope
daa
lret
xchg
add
dec
push
cltd
lret
add
lret
xor
cmp
adc
popf
das
lods
dec
aas
xchg
mov
dec
data16
inc
inc
xor
add
ret
add
and
pop
imul
cmpl
inc
add
fwait
add
push
cli
dec
push
or
test
adc
out
sub
push
clc
sbb
add
cld
xchg
mov
lcall
sti
jecxz
or
jl
mov
mov
xorl
test
add
push
sbb
mov
xor
cli
sub
and
add
roll
shrl
dec
jns
dec
xchg
loopne
adc
insl
mov
pop
pusha
sub
inc
shl
mov
adc
test
imul
aas
aam
loop
rolb
adcl
cli
subl
cltd
insb
pop
and
mov
mov
scas
mov
inc
insb
sub
loop
push
lcall
xor
bnd
fs
nop
or
jb
cmp
pop
xor
cli
sbb
cmp
cmp
cli
repnz
sub
das
add
dec
mov
mov
sarb
push
addl
dec
push
outsl
mov
add
rol
sbb
test
xor
inc
mov
cmp
dec
add
outsb
dec
stos
inc
push
pushf
in
sbb
mov
aam
xchg
dec
xor
cmp
mov
xchg
movsl
xor
or
pop
mov
sub
sub
not
les
je
mov
and
pop
ds
loop
dec
sbb
or
out
sbb
mov
jl
ret
test
out
mov
or
adc
xchg
lds
int
jmp
loop
mov
add
xor
test
in
loop
cmc
push
test
add
mov
push
push
pop
lea
sub
cmp
mov
pop
pop
das
mov
push
lds
pop
push
pop
xor
pop
mov
dec
popa
add
xor
inc
andl
xchg
lock
adc
cmp
js
js
dec
sbb
mov
stos
loope
lods
out
addl
mov
iret
hlt
lea
jl
lock
pop
andl
dec
xor
or
jl
xor
lea
addr16
fsubrp
and
subb
xor
push
scas
cld
sbb
jge
and
adc
sub
std
pusha
pop
scas
shl
loop
push
mov
or
lock
sbb
lock
cmp
mov
mov
ljmp
stc
and
adc
sbb
xchg
pmulhuw
and
xchg
stos
sub
add
repnz
add
or
sub
cmp
and
mov
mov
push
xchg
jmp
and
mov
mov
dec
cmp
xor
push
adc
into
mov
mov
mov
lcall
pushf
imul
dec
jne
jmp
les
inc
sub
adc
dec
js
or
in
pop
mov
or
jmp
xor
or
xchg
add
aam
pop
push
lods
mov
sub
cmp
add
push
push
dec
jmp
fs
mov
sub
push
cmp
rolb
pop
jmp
enter
sbb
bound
push
ss
scas
enter
and
sbb
mov
fisubs
push
jmp
cmpsl
mov
push
rclb
sub
push
dec
add
testb
outsl
inc
mov
jbe
inc
jle
cmp
push
jnp
rclb
push
jmp
and
orl
push
jbe
lods
push
xlat
in
mov
pushf
push
cmp
xchg
hlt
shlb
push
jmp
lcall
mov
jae
mov
ret
insb
ss
xchg
fs
mov
sbb
cmp
pop
jge
pop
outsb
idivl
out
movsb
jbe
nop
add
jne
fisubs
and
dec
jae
imul
sbb
pop
or
jge
jmp
and
pop
and
add
outsb
mov
dec
mov
mov
ds
push
sub
lock
gs
orl
in
pop
negl
femms
and
shl
or
stc
sub
cmp
mov
pop
mov
jbe
sub
mov
push
aam
mov
pushl
mov
jge
add
lea
fcos
orb
jbe
cmpb
jl
or
inc
testl
fisubrs
pop
loop
cmpl
push
adc
inc
xchg
in
cli
and
sub
lock
stc
push
adc
out
daa
test
or
jecxz
add
pushf
jmp
push
mov
test
pop
mov
loope
mov
fimull
sahf
aam
push
jne
inc
mov
push
cmp
pop
push
push
cwtl
jge
neg
add
mov
outsl
lcall
xlat
test
cmp
adc
cmp
adc
nop
sbb
jmp
mov
jge
jle
lock
xor
xchg
jno
jne
cmp
inc
add
dec
test
lods
sarl
push
add
sbbl
jbe
inc
aad
test
add
mov
dec
mov
pop
cmpb
push
add
fs
icebp
and
icebp
mov
push
xor
xor
ret
and
adc
nop
jbe
push
andl
adc
out
jle
iret
sbb
ja
ds
sub
ja
mov
pop
push
stos
mov
inc
testl
mov
enter
les
gs
push
test
into
jne
inc
or
push
lock
cmp
cmp
jne
hlt
int3
add
lock
mov
test
rcrl
loop
add
pop
push
adc
outsb
shr
les
mov
lea
or
ret
xchg
jp
scas
sbb
cld
dec
subl
jl
dec
ja
lcallw
js
subl
lcall
dec
cmp
mov
stc
movsl
fs
ret
mov
push
aaa
pop
test
js
mov
adc
gs
lods
mov
add
add
or
shr
loop
rcll
or
out
mov
jg
or
sub
push
pop
pop
mov
notb
mov
adc
adc
mov
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
sbbb
and
aam
shrl
test
mov
enter
dec
mov
and
dec
mov
adc
pop
add
fiaddl
sar
pop
add
adc
in
fiadds
push
call
or
mov
mov
mov
fidivrl
jb
xor
fs
fmull
cs
dec
ja
xorb
popa
dec
add
cmp
test
mov
jmp
lret
into
jmp
scas
xchg
movsb
dec
and
push
jae
sbb
movsb
int3
inc
pop
sbb
test
int3
adc
or
xorb
lret
pop
mov
jmp
sub
add
negb
jo
sbb
movups
and
ret
inc
mov
mov
inc
mov
inc
and
pop
test
pop
xchg
add
cs
iret
sarl
jp
rolb
das
dec
adcb
pop
xor
dec
mov
ljmp
imul
int3
sub
jmp
inc
add
mov
pusha
call
pop
sub
rorb
scas
inc
mov
adc
mov
mov
pusha
mov
adc
adc
mov
movsl
push
or
test
imul
adc
xchg
xchg
adc
inc
or
cmp
ss
pop
pop
call
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
lock
add
out
call
mov
pop
inc
gs
pop
push
sub
out
clc
cmp
loope
xchg
rorb
add
in
lcall
or
pop
lahf
xor
xor
jns
cmc
and
in
push
xchg
fisubs
adc
pop
lods
nop
ljmp
ret
cwtl
xchg
lar
or
outsl
inc
in
sub
rcrb
pop
xchg
mov
popf
cli
jne
jge
mov
jne
push
mov
or
add
movsb
add
adc
mov
or
jge
je
setg
sub
out
clc
add
mov
mov
fisubl
sub
movb
es
jle
sub
sbb
add
push
fisubrl
xorb
mov
es
divb
pop
add
add
call
xor
add
add
les
dec
push
add
cmc
xor
rorl
mov
add
inc
out
cs
dec
fwait
dec
xor
jns
les
sub
push
mov
cld
xor
pushf
push
pop
ret
or
sub
add
push
fiadds
pop
add
or
jl
push
bound
dec
mov
les
xor
push
add
jmp
les
add
or
and
add
sbbb
jo
push
ret
jbe
pop
lcall
adc
jge
push
add
push
mov
rcll
adc
outsl
adc
scas
xor
xchg
enter
ds
xchg
aaa
cmp
addb
adcb
addr16
and
xor
xorl
add
sbb
mov
fldt
lcall
adc
pop
call
push
into
adc
notl
js
jmp
pop
cs
jmp
mov
inc
add
popa
jne
or
fcoml
and
rolb
call
mov
lret
lret
test
xlat
cltd
outsb
adc
sbb
das
add
pop
loope
insb
add
sub
add
enter
and
push
movl
sbb
cmp
push
mov
js
add
inc
int3
dec
arpl
leave
lods
push
dec
mov
jg
inc
xor
leave
and
add
cmpsb
movb
ror
xchg
lock
popf
movsb
or
dec
fwait
pusha
stos
inc
sbb
neg
sbb
jecxz
fdivr
das
jle
lock
ret
daa
xor
or
jne
pop
cmp
inc
inc
adc
sahf
add
mov
or
inc
cmp
ss
fsubs
adc
int3
and
add
add
or
fldl
add
ja
sub
addl
mov
pop
xchg
movswl
les
lea
faddl
sub
clc
xchg
and
add
icebp
ss
add
shrd
cltd
pop
addb
sbb
fbstp
jge
sbb
fdivl
clc
mov
or
cmp
mov
stc
inc
add
dec
jmp
or
sub
test
cmp
or
roll
incb
push
mov
add
add
pop
cmp
popa
fsub
add
mov
jo
inc
out
sub
dec
and
add
mov
sarl
jg
jb
push
sub
or
cld
mov
shl
fidivrl
rorl
ror
push
pop
inc
shll
pop
xor
inc
nop
ds
add
test
inc
ret
jbe
shrl
or
push
jg
lods
pop
jnp
lods
jb
fs
dec
leave
jae
fiaddl
pop
or
or
pushf
or
lcall
sbb
push
or
adc
jae
adc
push
cmpsb
stc
mov
push
add
dec
stos
add
pusha
cmp
divb
xor
pop
inc
test
loop
jo
inc
loopne
jb
mov
and
cwtl
and
fs
add
call
enter
jmp
lock
insb
sub
mov
test
es
mov
mov
push
jno
sub
mov
add
loope
or
cmp
orb
adc
xor
sub
push
mov
jo
je
or
and
out
je
push
xchg
jl
and
repz
cmp
mov
inc
lret
jbe
adc
or
lea
inc
mov
sub
testl
push
insl
push
jmp
insl
orl
jno
jl
fisubrs
lock
mov
inc
mov
sbb
inc
shr
loop
mov
mov
sbb
jns
mov
pop
jge,pt
mov
gs
or
pop
data16
cmpsb
mov
sub
inc
mov
je
inc
je
dec
sub
and
xchg
jmp
cmp
and
dec
shrl
mov
cmp
push
or
and
dec
dec
xor
adcl
enter
idivb
inc
push
adc
call
jne
fmull
jl
data16
push
pop
clc
fstps
or
leave
push
xor
push
loope
add
ret
dec
rol
ret
xor
cs
or
notl
lea
cmp
jne
pop
incb
push
inc
adc
ja
dec
sbb
add
add
scas
lcall
mov
cmpb
jne
jp
inc
movsl
es
or
push
xchg
jp
rol
pop
data16
sub
add
hlt
jns
hlt
adc
push
cmp
jmp
movsb
inc
adc
pop
rcl
sub
xchg
ds
jno
lahf
movsl
add
sub
dec
pop
cmp
popf
ret
and
push
pusha
int
jne
lods
enter
aas
or
aaa
and
xchg
into
sub
push
fcmovu
push
adc
push
cmp
inc
fwait
mov
mov
imul
in
pop
jp
mov
adc
sbb
or
pop
cmp
pusha
mov
cmpl
lods
lret
or
push
jne
sbbl
js
popa
jae
push
jle
pop
or
adc
xchg
jbe
sub
push
jp
pop
call
cmpsb
shrb
or
xorb
sbb
pop
inc
imul
add
mov
sub
fs
cld
pusha
mov
cmp
adc
jno
push
dec
or
or
jnp
sbb
mov
stos
cmp
out
pop
cmp
xorb
inc
mov
mov
xor
je
aaa
mov
sbb
popf
sbb
sub
adc
dec
jne
push
push
jmp
or
jmp
shr
xor
testb
sub
or
adc
sbb
dec
negl
int
aad
in
jae
test
shll
insb
pushf
cmp
inc
xchg
add
hlt
push
popf
mov
lahf
aas
inc
xor
jnp
xorb
mov
jne
in
inc
movl
inc
push
adc
int3
aad
cmpsl
mov
or
sbb
mov
push
test
aad
lea
jbe
hlt
mov
push
cld
mov
dec
dec
mov
lods
add
push
sbb
mov
ret
xor
pop
in
loope
push
rolb
mov
pop
adc
jp
fs
sahf
dec
push
or
adc
push
rol
mov
pushf
push
xchg
and
imul
jo
movl
mov
xor
pop
push
cmp
scas
jge
notl
xchg
in
sbb
sbb
lea
fsub
cli
jb
orps
imull
lea
add
adc
sub
mov
arpl
and
call
push
cmp
jns
dec
cld
sbb
inc
jmp
jmp
xor
push
add
dec
lods
fdivs
push
and
cmp
sti
and
data16
sub
fwait
je
sub
push
push
or
cmp
add
jne
rorb
outsb
test
jns
sbb
fcomps
pop
in
lock
mov
jo
mov
xor
xchg
or
das
adc
in
mov
add
adc
xchg
and
pop
aas
inc
add
repnz
push
hlt
sbb
fsubl
shlb
mov
movsb
nop
mov
push
push
lea
lret
mov
fs
sub
mov
dec
movsb
cmp
cmp
adc
ss
push
sub
nop
repnz
fcomps
xor
sub
adcb
test
scas
adc
mov
add
pop
fimuls
jo
test
adc
add
or
sbb
frstor
mov
leave
xchg
or
pop
incl
xor
scas
xchg
sbb
ret
xchg
inc
push
stos
jae
les
lret
adc
inc
xchg
adc
aaa
xchg
loope
push
xor
adc
pop
lock
push
pop
xor
jmp
pushf
or
cmp
les
adc
mov
xchg
push
cs
and
loop
sbb
adc
nop
cmp
imul
loope
loop
testb
lds
fiadds
outsl
cmp
and
add
adc
xor
push
shr
add
or
push
sub
fstl
outsl
fcmovb
jmp
shr
or
pop
sti
or
rorb
xlat
bound
scas
push
bound
js
or
sti
in
stos
test
or
mov
cmp
inc
sub
es
int3
cld
push
jne
add
js
inc
xchg
dec
and
inc
sub
lret
pop
les
add
lea
mov
shr
xchg
or
inc
cmp
mov
adc
subb
push
pop
mov
adc
repnz
orb
movsb
sbb
xor
jo
add
out
inc
jbe
mov
mov
and
ss
in
jmp
sbbb
imul
push
cli
push
notb
or
shl
andl
adc
mov
sbb
push
add
sbb
decl
pop
fsubs
stos
imulb
or
test
sub
push
xchg
lret
je
test
add
push
or
rorl
sub
addl
fdivl
ret
inc
call
sbb
mov
mov
push
cmp
cwtl
sub
movsb
cmp
mov
scas
cmp
or
xor
cmpsl
push
cld
xlat
out
add
add
call
or
ss
adc
adc
mov
out
mov
cmpsb
push
dec
sbb
adc
cli
adc
fstpl
mov
jle
subl
ja
cmp
pusha
jmp
or
or
imul
inc
xor
mov
inc
push
dec
cmp
lock
jl
cmpb
jl
xor
cmpb
idiv
push
push
mov
or
adc
adc
or
addb
push
adc
inc
push
push
mov
je
enter
and
cs
iret
ds
inc
adc
fldcw
and
and
push
dec
cmp
inc
aam
rclb
sub
and
push
rolb
adc
loopne
andb
call
jbe
dec
add
mov
adc
enter
out
sub
clc
mov
jne
xchg
das
xlat
flds
and
shll
enter
test
je
mov
add
scas
or
dec
jge
les
pop
sbb
ret
mov
or
mov
inc
or
jne
sub
xchg
xor
push
mov
inc
jo
ret
add
aam
or
scas
hlt
xchg
or
movl
or
push
pop
lcall
cmp
ret
jge
inc
inc
div
out
or
neg
neg
sbb
sub
iret
and
adc
sbb
data16
jne
xorl
sbb
fadds
push
inc
and
shlb
icebp
sbb
inc
divb
xor
sbb
and
data16
cmp
dec
jns
xor
jnp
jne
pop
pop
pop
insl
incl
addb
and
orb
ljmp
shr
movsb
push
ret
adc
adc
mov
idiv
and
mov
cld
lock
je
notb
je
ljmp
sbb
mov
jmp
mov
add
pop
pop
add
jno
inc
rsqrtps
adc
es
xor
mov
mov
or
push
and
mov
or
into
jbe
jns
aas
sahf
stos
rol
dec
adc
movsl
push
mov
ss
movsb
aas
daa
add
push
or
adc
xchg
fsqrt
sub
push
int3
es
es
loop
adc
dec
push
mov
mov
aas
mov
es
inc
insl
and
ret
adc
jmp
popa
mov
enter
or
cmc
dec
lret
push
int3
cltd
test
and
mov
and
fidivs
xor
adc
jg
mov
jge
sub
push
push
mov
adc
in
pop
push
lret
mov
inc
testb
push
jle
popf
call
or
je
xchg
mov
mov
into
cltd
push
or
es
mov
je
movsb
and
mov
out
push
cmp
ja
add
cmp
adc
cmp
jne
cmp
inc
dec
push
shll
leave
adc
mov
xor
idivl
pop
loopne
push
and
test
pusha
or
subb
shlb
dec
testb
mov
xchg
outsb
sbb
xor
pop
pop
push
inc
or
cld
add
or
jmp
notb
dec
fdivs
push
xchg
js
mov
fwait
inc
ljmp
mov
mov
sarb
xlat
xlat
lods
movsl
dec
and
stos
fs
jne
in
mov
xor
std
add
adc
fistps
hlt
jmp
jb
jge
mov
lock
push
adc
jg
inc
int
push
dec
or
mov
jb
jno
cmp
push
xchg
xor
inc
jmp
sub
xchg
xor
pop
push
inc
mov
adc
push
sbb
sahf
push
push
in
or
les
jns
cltd
add
xor
xchg
inc
sbb
add
pop
lock
or
pusha
sub
sarb
dec
mov
push
rcl
repz
repz
aad
xlat
inc
insb
ds
fcomp
fstpt
cmpb
data16
xor
movb
jmp
or
xor
lea
outsb
into
data16
and
cmp
push
shl
sbb
mov
or
add
mov
mov
add
push
inc
inc
loope
bound
fisttpl
cmp
adcl
movsb
mov
or
in
mov
call
cmp
ja
into
cmp
das
or
push
in
push
jns
inc
add
add
in
sub
push
lcall
mov
imul
imul
lea
ljmp
imul
lea
sar
inc
adc
mov
adc
neg
lfs
mov
pusha
loop
inc
xorl
pushf
sub
lock
out
mov
sub
or
lock
xor
or
bound
jp
mov
fildl
mov
mov
add
or
lock
sub
ljmp
testl
into
and
lea
pop
adc
les
sbb
jae
xchg
ja
add
sbbb
add
dec
sub
pop
mov
aaa
repnz
in
ljmp
loopne
inc
or
fimuls
mov
and
mov
or
repz
test
rolb
push
mov
stos
fs
loopne
mov
ds
dec
xchg
mov
int
or
cwtl
dec
push
dec
push
mov
movsb
sub
cmp
pop
shr
insb
lret
movsb
sub
inc
xchg
mov
xor
mov
jge
jl
fdivl
and
rorb
sub
jle
inc
test
enter
mov
jo
add
cld
cld
or
and
hlt
rorb
adc
pop
dec
push
push
push
lret
cmpsl
mov
movl
lods
or
fs
shrl
mov
out
xchg
mov
or
dec
add
dec
add
iret
and
lods
lock
div
jns
lret
cli
inc
cli
div
xchg
loopne
adc
loop
add
clc
or
add
loopne
pusha
outsl
mov
mov
cwtl
fcmovne
pop
adc
dec
dec
js
ret
sbb
shll
inc
lea
and
and
cmpsb
mov
mov
xor
xor
mov
inc
add
cmpsl
out
stos
mov
add
dec
ljmp
push
cmp
loop
out
jge
enter
xchg
mulb
jb
inc
push
cld
and
movsl
xlat
mov
repnz
xor
lods
or
in
inc
shlb
fdivrs
aam
inc
inc
mov
push
inc
test
dec
ss
mov
sbb
inc
xor
mov
adc
xor
call
test
mov
lea
fcmovu
mov
xor
pop
insl
rorl
aam
inc
add
lods
rolb
jns
adc
add
movsl
add
sbb
and
cmp
negb
mulb
cmp
test
and
sbb
inc
orb
mov
ret
inc
pop
and
sbb
jmp
add
push
adc
in
rcl
and
shll
mov
adc
stos
adc
les
scas
adc
fdecstp
adc
inc
add
inc
mov
push
add
push
mov
xchg
call
call
out
adc
pop
jbe
cmpsl
sub
mov
call
ljmp
mov
shll
icebp
adc
fcomps
xor
fiadds
loop
data16
inc
imul
icebp
sub
loopne
loopnew
pop
xchg
jo
fsubrs
add
mov
mov
mov
push
into
je
push
adc
sub
out
clc
loope
push
pop
sti
and
cmc
lahf
push
xchg
mov
repnz
mov
push
movsl
insb
push
add
sub
into
les
add
sti
out
enter
xor
ret
sbb
push
movsb
xabort
les
rcll
add
enter
mov
push
shlb
add
idiv
add
daa
shr
mov
add
in
into
test
and
or
mov
inc
ljmp
jmp
dec
inc
ljmp
dec
cmp
jge
sbbb
lcall
xor
mov
repnz
mov
inc
dec
add
add
fadds
dec
mov
inc
cmp
invd
fidivrs
add
or
pop
imul
inc
ret
and
mov
mov
negb
xchg
adc
xchg
add
cmpsb
sarb
dec
mov
add
add
pop
stos
xor
add
add
dec
out
adc
out
adc
add
push
mov
loop
sub
ljmp
fisttps
pop
ficompl
jmp
mov
lea
add
or
push
or
add
xor
mov
sub
imul
mov
xchg
xchg
or
add
sbb
fisubrl
add
test
inc
pop
mov
mov
sub
sarl
xor
into
pusha
inc
cld
xlat
add
mov
rcrl
in
cltd
lea
mov
ret
js
pop
shll
or
stos
movsb
out
ret
or
js
jo
adc
push
ficompl
incb
adc
lret
or
xchg
cmpsb
rclb
add
add
push
or
dec
cmpl
and
sbb
imul
lods
jae
cmpsb
adc
xlat
dec
pop
lahf
mov
add
cmp
cmp
and
and
and
or
xchg
aam
mov
add
lock
ljmp
insl
cld
adcb
mov
cld
sbb
xor
je
ja
or
inc
mov
jg
sub
xor
ret
rcrb
sub
and
aam
out
mov
xchg
scas
pop
mov
and
cmpl
into
or
add
xor
mov
add
add
jbe
jle
idiv
shlb
sub
xor
inc
cmp
jns
jg
into
into
into
xor
pop
and
pop
sub
push
pop
nop
pop
push
shl
cmp
push
loop
xchg
mov
or
pop
xor
bound
push
and
sbb
nop
push
push
cmp
pop
lcall
add
or
shl
adc
enter
add
add
mov
or
int
sbb
je
and
leave
adc
inc
pop
jo
mov
sub
jmp
jmp
lret
ret
cwtl
aad
xor
xchg
incb
push
push
scas
sbb
push
pop
or
and
pushf
add
shll
ret
pushf
pop
movsl
cmpl
mov
xchg
mov
adc
push
sub
wbinvd
dec
cmp
cmp
jmp
add
mov
cmp
dec
aaa
ficoms
adc
sbb
cltd
loop
loopne
jle
and
daa
or
mov
pop
adc
jge
sbb
gs
addr16
mov
pushf
push
aaa
in
xor
pusha
inc
icebp
rorl
jne
push
mov
and
clc
dec
sbb
add
aam
xlat
cmp
push
and
xchg
pop
cltd
sbbb
add
inc
jmp
adc
dec
inc
orl
loopne
jo
sbb
out
je
jmp
push
add
enter
cmp
cmp
jbe
inc
inc
int3
call
mov
pop
sbb
rolb
adc
test
out
push
fdivrs
or
xchg
test
jb
loope
into
jmp
mov
push
or
clc
pop
inc
push
aam
add
aad
movsl
ret
test
inc
fpatan
dec
mov
mov
add
xchg
ret
loope
shlb
mov
sub
add
pop
sub
jnp
pusha
iret
add
xchg
mov
sbb
push
pusha
cmpb
pushl
xchg
pop
and
test
je
insl
mov
push
xor
mov
out
je
and
and
popf
mov
push
cmp
sbb
loopne
pop
mov
mov
cmpl
push
mov
push
shll
push
test
dec
shlb
push
mov
fcoml
imul
fisttpl
xchg
dec
sahf
flds
in
decl
dec
pop
stos
inc
or
and
pop
jge
lea
pusha
cmp
pusha
push
pop
mov
imul
or
dec
jne
add
and
xor
leave
jae
add
inc
dec
push
add
push
enter
loopne
test
adc
adc
sbb
mov
mov
mov
cs
sbb
adc
sbb
jae
jmp
push
push
xlat
xchg
or
push
pop
adc
fnsave
jno
lods
fsts
insl
add
mov
add
sbb
dec
cmp
aad
cmp
or
push
jne
push
inc
das
adc
shlb
loopne
cmpsb
push
outsb
sub
ficoml
inc
jo
rorb
stos
add
and
popl
faddl
add
insl
outsb
in
outsb
inc
or
mov
and
dec
add
xchg
rolb
sbb
jle
pop
add
clc
mov
fimuls
loopne
cmp
or
and
ror
pusha
jns
cmp
sbb
mov
aad
test
sub
sti
je
mov
jg
xor
retw
call
mov
sub
add
mov
pop
jl
pushf
dec
lea
ss
int3
cld
mov
xchg
adc
pop
push
pop
fisttpl
inc
dec
mov
xchg
nop
pop
jae
fsubs
cmp
jp
movsb
mov
add
dec
js
loop
xor
fisttps
cmp
outsl
push
sub
js
add
add
mov
sbb
inc
js
loop
sbb
sbb
inc
and
cmpl
das
pusha
xor
inc
pop
shll
aas
shrb
sub
add
sbb
adc
cmc
xchg
add
xor
dec
hlt
ljmp
push
and
add
xchg
sub
hlt
xor
sub
sub
push
lock
mov
xchg
pop
testb
mov
testb
inc
lock
push
mov
or
cld
sbb
xchg
ja
in
movsb
or
adcl
and
jg
jno
pusha
or
pop
xlat
data16
repnz
adc
pop
pop
popf
xorb
daa
pop
ljmp
mov
mov
or
jg
cmp
cmc
andl
push
mov
popa
dec
loope
push
in
pop
adc
ficomps
xor
rorb
and
adc
add
dec
loopne
sbb
pop
jne
scas
sub
test
cvttsd2si
mov
xchg
ja
ljmp
scas
mov
pop
cs
fldcw
jbe
sub
mov
xor
fsubrp
test
jns
fstps
push
icebp
lahf
pop
rclb
loope
inc
out
data16
mov
sub
das
fcomp
pushf
fstpl
adc
test
cmpsb
pop
or
pop
pop
xchg
push
push
fucom
insb
popf
inc
dec
mov
pop
fisttps
popf
xor
adc
or
dec
in
ret
jmpw
jb
outsb
push
out
pop
push
pop
inc
dec
or
sti
pop
idiv
sbb
ret
fcompl
xorl
call
in
inc
daa
adc
insl
gs
loopne
cltd
in
mov
cmpb
bound
inc
in
push
xor
and
enter
mov
imul
add
fimull
rol
adc
sbb
cmp
mov
cmp
loopne
add
movsl
sub
push
or
shlb
cmp
mov
int3
sub
mov
xchg
xchg
call
insb
jne
lock
sbbl
rcll
ret
les
call
sbb
je
sub
mov
add
dec
clc
enter
jne
repz
pop
fmuls
xor
pusha
jge
add
insb
rolb
repnz
orl
cld
in
int3
add
inc
jle
aas
xor
add
pushf
in
hlt
xchg
and
adc
int3
es
adc
cmp
add
inc
inc
adc
pop
je
lret
dec
pusha
xor
sbb
add
out
jle
shll
loopne
push
rclb
adc
push
sub
push
cmp
mov
adc
jb
popa
xchg
shl
and
shlb
das
or
fwait
adc
xor
push
andl
mov
or
lret
nop
and
mov
mov
nop
fadds
xchg
mov
les
stos
fadds
in
xchg
in
xchg
and
pop
jg
orb
fcmovnbe
pop
in
movups
xchg
fwait
lcall
lods
in
sub
cmp
ret
mov
jne
out
addb
push
lock
xor
sbb
adc
insl
pop
hlt
add
and
cmp
in
xlat
mov
inc
hlt
mov
inc
xchg
xchg
mov
cmp
pop
imul
mov
cltd
ss
jmp
dec
or
xchg
lock
or
call
shrl
nop
vpshufhw
lods
dec
rcr
jb
sbb
dec
loopne
int3
in
insl
cmp
in
cmp
cld
test
push
xchg
xchg
add
push
adc
adc
es
fs
and
xor
cmp
xchg
dec
es
inc
dec
insb
inc
es
fs
or
faddl
push
mov
sbb
add
pusha
add
mov
sbb
int3
leave
sbbl
cmpsb
out
sub
hlt
gs
xchg
cld
clc
cltd
fs
ja
jl
lock
sub
test
sbb
xor
dec
mov
das
in
loope
sbb
or
xor
pop
adc
popa
adc
xchg
xchg
mov
lds
inc
shlb
sub
push
lea
mov
ret
repnz
ret
mov
subl
add
jne
adc
pop
call
or
mov
dec
das
das
insb
fwait
in
dec
push
std
clc
jmp
sbb
mov
sbb
enter
icebp
cmpsb
shl
shl
int3
in
xchg
movsl
xor
dec
mov
daa
sub
sbb
popa
adcb
lcall
test
scas
je
dec
inc
mov
je
in
popa
mov
int3
pop
lock
in
test
xchg
cs
and
and
and
fwait
or
cwtl
ss
add
call
sahf
call
add
pop
fsubrs
push
xlat
test
fmull
cmp
movsl
xchg
cmp
add
add
jbe
mov
jg
gs
push
dec
sbb
enter
in
fisubl
add
nop
mov
adc
and
xchg
cli
sbb
push
jbe
jnp
nop
mov
pusha
push
fmuls
shlb
fwait
xchg
out
cmc
lods
int3
out
sub
int
es
adc
pusha
and
fs
daa
xor
mov
ret
jmp
or
adcl
cmp
or
loopne
push
dec
sahf
dec
push
fcomp
aam
les
inc
leave
orb
jecxz
mov
sarl
nop
add
or
dec
sub
outsb
inc
rcrl
lods
mov
dec
dec
dec
mov
mov
dec
enter
xor
lea
and
xchg
sbb
mov
clc
mov
sbb
xchg
lock
dec
add
rcll
mov
xchg
and
call
ljmp
xchg
popa
pop
push
mov
sub
mov
ret
mov
sarl
bound
push
or
insb
mov
mov
xchg
inc
jo
and
xchg
cwtl
mov
xchg
and
xchg
push
xor
les
xor
adc
fsubrs
sbb
push
outsl
rclb
or
fmuls
mov
shlb
das
push
sbb
sub
xchg
jecxz
mov
enter
ret
aaa
mov
std
inc
outsb
orb
aad
test
enter
inc
xchg
outsb
xchg
movsl
mov
mov
fdivrl
in
and
xor
insl
or
out
adc
dec
xchg
mov
jecxz
dec
jg
mov
jecxz
add
stos
add
jo
or
pop
mov
fildll
adc
sub
mov
in
mov
push
pop
jb
dec
fwait
pop
cltd
pusha
inc
add
dec
je
js
and
and
adcb
xchg
aas
sub
lock
mov
je
push
test
jecxz
mov
es
cld
fbstp
mov
and
xchg
fdivl
lahf
in
lock
or
aad
loopne
cmp
lahf
push
es
add
jg
gs
rorb
pop
and
lock
dec
cltd
fcoms
sub
mov
push
adc
xor
and
mov
pop
dec
ja
outsl
fcomps
xor
clc
sahf
hlt
sbb
dec
hlt
mov
sbb
add
outsl
sbb
add
dec
pop
add
adc
sub
pop
add
lcall
arpl
lds
push
jg
les
aas
call
imul
inc
ds
clc
mov
int
dec
repnz
insl
cmp
push
pop
mov
adc
sub
sub
leave
lret
and
sbb
cmpsl
adc
sbb
add
cmp
jnp
pushf
stos
or
enter
or
and
xchg
or
andb
test
daa
sub
in
aaa
call
mov
and
sahf
insl
inc
mov
jne
push
cmp
fwait
inc
xchg
xor
dec
xor
mov
cmp
inc
xchg
mov
push
mov
das
mov
jae
iret
aas
adcl
sbb
scas
in
mov
in
xlat
pusha
lahf
push
mov
pop
in
mov
aam
movsl
lahf
lahf
xchg
pop
jecxz
movsl
dec
and
xchg
lahf
scas
sub
cmpl
lea
inc
cmp
adc
sub
pop
mov
dec
aam
add
inc
push
push
mov
scas
mov
into
push
cwtl
adc
popf
nop
decb
inc
xor
movsb
or
sbb
cs
stos
xchg
pop
xchg
lock
jmp
mov
inc
jg
xchg
inc
stos
subb
shl
push
or
adc
out
mov
sarl
pop
pop
adc
ret
mov
les
and
clc
push
mov
dec
lock
dec
popf
xor
inc
add
loopne
inc
fisubrs
mov
lods
mov
int3
enter
jb
sarb
mov
cwtl
dec
lds
mov
nop
popa
mov
movsb
call
das
daa
sbb
int3
xor
add
mov
movsl
test
mov
ret
adc
mov
aam
or
nop
and
mov
mov
clc
int
xchg
test
movsb
dec
xchg
int
nop
popf
movsl
insb
add
ds
fsubl
out
daa
xchg
sub
mov
mov
mov
mov
sahf
cmc
xchg
inc
mov
dec
imul
les
or
fcomip
push
or
and
incl
add
roll
mov
pushf
int3
adc
in
in
pop
or
das
xor
jp
and
sub
aas
loop
test
imull
stos
and
add
rolb
fsubrl
jg
sbb
or
or
xchg
leave
insb
testb
sbb
inc
fucomp
lock
int
je
or
and
mov
add
outsb
xor
bsr
mov
test
shlb
jg
pop
mov
xor
cltd
es
xor
loopne
rorl
in
adc
xor
rcrl
fdiv
rcll
test
jbe
scas
loopne
iret
sbb
leave
adcb
pop
xor
mov
les
add
fmuls
ret
fdivs
sbb
xor
std
xchg
ret
jae
xchg
add
sti
movsl
or
push
idivl
add
sub
in
add
inc
cmc
mov
pop
insl
rclb
inc
aam
push
sub
orb
mov
xor
mov
sbb
ret
inc
pop
aam
mov
sub
pusha
mov
stc
nop
xorl
lods
test
lods
or
mov
dec
cwtl
inc
sahf
mov
call
dec
jg
fmuls
adc
pop
xor
add
adc
ret
pop
scas
call
sbb
ficompl
stos
push
push
shll
adc
inc
xor
push
mov
call
scas
movsl
pop
test
movsb
push
jnp
and
call
adc
jns
dec
pop
inc
jg
adc
adc
lock
sti
js
mov
les
push
inc
aas
dec
and
adcl
mov
fdivr
aam
or
sti
or
mov
dec
lods
in
call
insb
pop
cmpsl
push
test
mov
lods
cmp
push
jb
movsb
test
mov
pushf
aad
jne
mov
mull
pushf
add
sbb
test
mov
shlb
mov
or
inc
in
pop
sub
les
mov
test
cmp
xor
stos
cmp
xchg
mov
xchg
add
jle
jnp
add
in
sbb
stos
cmp
mov
sbb
adc
lahf
rcrb
bsf
add
add
in
orb
jg
inc
mov
orb
add
je
inc
mov
test
cmp
push
pop
xchg
mov
mov
or
inc
sub
sbb
xor
mov
test
sub
ret
addl
js
xor
push
mov
jl
push
adc
cltd
arpl
and
xchg
insb
test
push
push
cmp
nop
xchg
mov
mov
cld
xor
inc
jo
sti
and
jns
mov
in
and
inc
js
mov
faddl
in
sub
sbb
lock
and
hlt
inc
mov
fiaddl
movsl
loop
inc
mov
or
in
mul
adc
mov
and
in
xor
jns
mov
pusha
inc
pop
pop
mov
lahf
andl
pop
rorb
outsl
add
inc
fcmove
arpl
sub
or
mov
jb
push
dec
cwtl
pushl
pop
lods
das
ret
cmp
les
cmpsb
or
lea
mov
add
add
dec
add
bound
ja
enter
cwtl
sub
add
push
add
sbbb
sarb
pop
sbb
inc
mov
jg
jo
cltd
mov
or
fsubrs
and
dec
fsubrs
aam
int3
adc
sub
jge
mov
pop
add
test
pcmpeqw
pop
subl
cld
fwait
mov
lock
test
lods
dec
adc
popw
and
adc
jns
inc
pushf
inc
jg,pt
pusha
out
out
mov
aas
loopne
mov
je
add
sti
mov
sti
pop
dec
and
mov
mulps
lds
mov
push
and
or
xor
mov
add
inc
pop
cmpsb
inc
sbb
mov
or
sti
nop
shrb
mov
or
aam
test
mov
lds
mov
mov
xor
xor
adc
add
fbld
inc
or
das
pop
es
add
js
iret
cs
mov
gs
stos
dec
pop
add
loopne
outsl
call
add
enter
dec
rcll
test
enter
adc
adc
push
xchg
cmp
mov
loop
pop
jne
aad
adc
aam
in
xchg
mov
xchg
xor
lea
jb
cs
pop
les
mov
and
ffreep
jb
jne
sar
and
movsl
fmull
aam
shl
push
movsl
mov
dec
lds
lods
sub
aam
addl
and
in
aas
ficoml
test
sub
cmp
das
mov
in
dec
jb
cmp
inc
jo
in
dec
shlb
nop
jnp
pusha
xlat
test
sbb
jae
inc
dec
shrb
mov
inc
sbb
pop
sub
or
push
fidivl
dec
loop
pusha
pop
jo
fsubrs
int3
pop
les
lret
or
push
rcl
les
jp
outsl
inc
push
sbb
jb
stos
enter
test
imul
jp
in
pop
lcall
lods
insb
js
mov
aaa
stos
daa
xor
sbb
add
inc
movsb
pushf
or
lcall
mov
push
fs
and
popl
movsb
pusha
ret
inc
lods
inc
xchg
in
imul
and
cmp
scas
inc
add
aam
jb
adc
std
mov
add
cmpsb
add
pop
xor
fisttps
notl
adc
lds
jl
iret
es
and
cmp
cmp
adc
mov
push
test
leave
sub
imul
leave
aas
xchg
dec
xor
in
fmul
push
adc
and
loopne
fsubr
enter
add
testb
out
and
mov
fs
repz
aad
add
and
or
or
mov
sbb
mov
lret
add
inc
addl
push
test
mov
or
in
mov
mov
pusha
and
in
sbb
sti
mov
adc
mov
pushf
fwait
fwait
adc
lods
in
imul
leave
insl
andb
pushf
dec
nop
dec
cwtl
pusha
sub
stos
and
inc
xchg
imul
cwtl
fsubr
lock
popf
inc
push
fdivr
cmp
pop
bound
inc
ja
stos
inc
stos
jecxz
jecxz
cltd
data16
mov
loopne
mov
lahf
fsub
or
or
inc
inc
repnz
lock
insl
subb
jg
lods
bound
cltd
cmp
pop
cmpsb
add
add
es
or
or
cltd
nop
inc
notl
out
js
fs
and
mov
repnz
mov
inc
inc
mov
jae
sysenter
orl
push
cltd
sub
mov
jbe
adc
add
and
add
and
or
adc
call
jns
fsubrs
pop
ret
orb
in
enter
andl
test
jns
fs
or
add
fdivs
std
xchg
insb
mov
movsl
invd
pop
das
iret
or
fildl
or
dec
rolb
xchg
fs
gs
add
pop
push
xor
cmp
or
out
mov
inc
xchg
push
cld
rcrb
rorl
pop
lea
or
roll
cmpsl
mov
push
mov
je
xchg
inc
or
dec
xor
mov
adc
imul
lret
add
call
dec
xchg
ret
push
nop
adc
cltd
mov
inc
inc
or
xchg
sbb
clc
xchg
sbb
les
in
sub
shlb
xor
mov
add
xchg
popf
fcom
cmp
mov
shrl
and
xchg
or
out
lods
dec
or
xor
cmpl
pop
loopne
ret
fadds
and
scas
inc
push
cltd
bound
aam
movsl
push
add
mov
mov
rcl
loop,pn
sbb
adc
and
push
movsb
pusha
pop
pusha
test
push
xor
push
mov
pop
adc
sbb
test
dec
fistl
push
jmp
push
sbb
gs
insl
push
nop
push
or
lods
aam
cmpsl
push
adcb
add
ja
adc
in
inc
movsl
fiaddl
adc
lds
push
and
adc
cmp
sub
mov
adc
xchg
sub
in
call
or
cmp
xchg
inc
insb
mov
rcl
cmpsb
or
gs
inc
add
sbb
sub
insb
mov
inc
bound
push
lock
pop
repnz
sub
mov
outsb
mov
test
mov
int3
mov
mov
adc
insl
xchg
jl
insl
pop
insb
xor
and
hlt
pop
push
leave
and
dec
js
dec
pop
fadds
xor
scas
mov
imul
fcoms
or
shlb
push
xor
add
cmc
nop
jecxz
add
imul
push
cmp
fdivrl
nop
test
xchg
inc
cmovl
xchg
imul
xchg
dec
es
cwtl
aam
or
xchg
fs
cwtl
data16
cmp
mov
add
aam
cltd
je
shll
lea
push
movl
mov
shll
adc
push
repz
mov
fidivrs
test
andb
dec
scas
or
adc
mov
inc
test
lods
mov
arpl
mov
js
and
scas
shl
aam
inc
sbbb
push
cmp
dec
cmpsl
nop
rcrl
add
aas
mov
sbb
pop
das
pop
adc
pop
daa
jg
loope
lahf
jae
cwtl
loope
imul
or
inc
daa
jns
rcr
loop
lods
pop
mov
push
movsl
pop
in
cmp
stc
enter
add
pop
aas
shl
jb
sbb
add
insl
fistl
sbbb
xchg
pop
int3
inc
lock
sub
imul
push
inc
insl
les
adc
ficoml
lods
movsb
xchg
push
push
test
jecxz
xorb
jns
dec
xchg
xor
rclb
lds
or
leave
jmp
inc
in
sbbb
xor
sbb
pop
push
mov
lret
mov
inc
dec
lds
add
in
sub
mov
cs
mov
dec
nop
xor
mov
stc
test
inc
push
lock
xlat
xor
cld
inc
fcmovne
fcoms
pusha
push
mov
lock
outsb
pusha
adc
rolb
and
xchg
jo
add
cmpsl
mov
out
dec
and
xchg
ffree
out
cwtl
mov
push
insl
adc
dec
in
div
lock
dec
add
or
cld
repz
sub
lret
inc
in
pop
and
filds
jns
mov
and
call
rclb
ret
jecxz
mov
clc
jle
sbb
popf
pusha
test
arpl
and
or
mov
cmpsb
or
daa
cltd
adc
hlt
cli
mov
or
cld
cli
scas
fs
es
fs
cmp
xchg
dec
push
nop
dec
cmp
ficoml
adc
mov
sub
jb
test
and
xchg
jae
xor
enter
and
sbb
pop
shrl
cs
pop
insl
or
roll
mov
mov
cli
mov
and
or
mov
adc
cmpsb
dec
repnz
fs
xchg
push
mov
push
nop
pop
pusha
sub
test
mov
jo
jo
push
cmp
mov
adc
icebp
push
fiaddl
cmp
adc
aad
dec
insl
adc
adc
cwtl
push
or
dec
mov
adc
lock
jmp
mov
xor
jnp
push
nop
pop
push
enter
dec
jb
inc
imul
movsb
or
fistl
inc
ds
aas
push
fistl
imul
jo
imul
mov
bound
loop
and
xchg
push
or
fld
in
std
fidivl
scas
mov
rcr
loopne
and
idivl
lahf
insb
and
push
sbb
movl
add
fdivl
test
aas
push
xlat
mov
sub
xchg
push
or
cld
pushw
add
ljmp
sub
mov
cmpsl
or
adc
adc
and
mov
inc
and
xor
push
cmpsb
icebp
inc
push
push
andb
imul
sub
roll
mov
push
sub
out
loop
dec
sbb
mov
sbb
fisttpl
out
stc
push
into
adc
mov
cmpsl
loopne
mov
sti
xor
add
cmp
sbb
push
pop
jne
fdivrs
out
fsts
inc
jo
out
pop
sbb
xlat
mov
imul
pop
jne
out
mov
nop
fwait
insl
imul
push
push
aas
push
loop
adc
mov
mov
ljmp
add
in
inc
fistpl
or
jnp
mov
add
and
aaa
dec
shlb
leave
or
adc
inc
jmp
leave
ljmp
cmpb
or
jns
xlat
out
push
jo
push
sahf
push
dec
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
sub
inc
push
push
push
lret
lcall
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
out
cmp
xor
ss
cmp
sub
daa
adc
mov
rcll
xchg
adc
in
cld
clc
push
or
cmp
rclb
cmpl
jl
mov
rorl
or
cwtl
jg
sarl
cmpsb
mov
mov
outsb
je
popf
jge
pushl
outsl
arpl
fs
out
sbb
push
dec
imul
xorl
jae
cmp
jb
gs
xor
cs
out
ret
fs
adc
popa
and
popa
je
outsl
outsb
push
inc
mov
inc
shlb
sbb
lock
mov
xor
insl
mov
fdivr
pop
sub
frstor
shrb
in
mov
inc
js
je
jb
gs
cmp
or
outsl
add
ret
out
jb
add
add
add
je
push
roll
inc
jne
jb
mov
pop
imul
dec
xor
ja
adc
cmp
lahf
fs
dec
and
jns
add
das
loopne
mov
push
dec
push
inc
inc
gs
into
mov
insl
bound
daa
dec
outsl
jbe
dec
arpl
pop
mul
adc
jo
sub
addr16
ffreep
pusha
out
dec
jne
xchg
mov
inc
jo
imul
jb
push
inc
pushf
jae
add
adc
jae
cmp
xchg
popl
ja
mov
push
jne
xor
mov
daa
push
scas
dec
xor
clc
sbb
dec
js
into
cmp
push
jne
xchg
pop
dec
mov
ds
popa
das
jo
or
inc
adc
mov
jb
inc
ud0
rcll
pop
and
gs
or
mov
push
adc
out
dec
decl
es
sub
sub
sub
cs
movsl
cmp
cmp
ds
adc
aas
inc
das
pop
pop
cmpsb
aas
inc
aad
pusha
cmp
jge
jg
cmp
outsl
inc
test
cs
ficomps
push
pop
or
adc
in
jecxz
pop
push
inc
insb
jae
pop
rcl
lea
push
fs
mov
inc
or
out
dec
mul
xor
insl
and
jb
jbe
outsb
je
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
jg
push
insl
sbb
push
jo
imul
insl
inc
mov
popa
je,pn
jo
insb
jnp
inc
xchg
idivb
and
or
ds
cltd
jge
subl
xorb
imul
and
and
daa
mov
jne
shr
sbb
xor
and
insl
push
xor
jl
xchg
sub
jo
and
jne
dec
mov
addb
imul
dec
mov
addr16
push
frstor
outsb
xchg
or
imul
push
add
or
fs
hlt
jb
bound
test
in
adcl
ds
sbb
popf
jb
pusha
fwait
leave
push
mov
ret
fcoms
sub
push
addb
das
arpl
cmp
fwait
orb
arpl
mov
mov
fiadds
inc
xchg
lret
sub
out
xor
int3
or
push
loope
prefetch
test
andl
cmp
push
ffreep
shrb
push
loopne
and
xor
shll
hlt
and
or
pop
dec
add
add
xor
fdivs
outsl
outsl
ss
adc
fs
jo
cli
jbe
add
inc
or
sahf
inc
xchg
push
mov
in
pop
push
gs
sarl
mov
jle
outsl
push
or
mov
imul
push
cmp
sbb
bound
cmp
adc
jno
insl
in
ljmp
imul
scas
loopne
imul
inc
sbb
inc
jno
rolb
push
leave
nop
enter
inc
insl
imul
int3
fnstsw
adc
repnz
add
add
mov
push
and
pop
sub
cmp
addr16
push
cmp
push
jae
xor
fdivl
addb
pusha
jo
sub
add
adc
data16
lret
inc
sub
pop
dec
jmp
pop
sti
pop
cmp
push
and
cmp
pop
mov
fstpl
pop
inc
inc
and
mov
cmp
jg
lcall
iret
sub
add
fimull
sub
rol
das
lret
jmp
fisttps
push
icebp
pusha
inc
mov
clc
ret
movsl
add
addl
jae
push
loop
or
outsb
imul
into
in
test
add
add
xor
repnz
js
jae
aaa
mov
pop
dec
pop
add
add
clc
cmp
sub
push
imul
add
add
mov
sti
out
add
push
add
add
add
mov
cmp
pop
or
aaa
ds
push
pop
hlt
and
out
imul
pusha
push
js
or
sub
jg
cmp
add
sbb
addb
mov
push
xchg
test
add
outsl
mov
pop
daa
push
cmpb
into
in
fsts
and
sub
jb
int3
push
imul
cwtl
je
mov
push
stos
int3
js
mov
xor
int3
rorb
sahf
dec
dec
sahf
sbb
in
dec
dec
mov
mov
les
shr
es
fildl
push
test
dec
sub
xor
dec
sub
pushf
jo
pop
add
and
dec
jo
or
pop
data16
mov
pushf
adcb
pminub
repnz
add
add
fcoml
sub
push
jb
dec
add
leave
sbbl
add
adc
add
and
add
add
pop
ficoml
add
inc
cmpsb
sbb
add
mov
ja
dec
pop
stos
incl
adc
push
add
pop
mov
pusha
inc
shr
and
jmp
addl
mov
call
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
pushl
mov
mov
mov
mov
ret
enter
int3
int
iret
call
rcl
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
stos
dec
push
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
and
or
add
call
roll
sub
test
sbb
push
repz
outsl
ja
inc
cs
mov
gs
bound
dec
stos
dec
cmp
dec
popa
mov
mov
in
repnz
lea
jbe
in
mov
gs
outsl
js
push
push
inc
push
mov
imul
in
lods
xor
daa
add
insb
sti
pop
jbe
in
dec
imul
mov
inc
insl
jnp
jb
jo
ds
and
push
pop
fildl
inc
jns
daa
pop
pop
in
adc
push
jns
mov
shlb
aad
lcall
addr16
cmp
outsb
mov
rolb
push
mov
adc
push
out
in
add
inc
jbe
push
outsb
pushf
push
push
lahf
fs
cwtl
sub
dec
dec
pop
ss
popl
rorl
push
pusha
sub
mov
sub
mov
lahf
lock
inc
or
pop
fisubrl
jae
cmp
dec
loopne
mov
pusha
insb
call
movsl
jae
addr16
subl
gs
dec
scas
jo
mov
xchg
arpl
push
push
add
mov
push
dec
testl
dec
in
loope
push
outsb
mov
lds
fildll
dec
jge
ret
adc
jg
imul
call
mov
xor
inc
in
nop
lods
sbb
popa
insl
or
fadd
mov
sub
push
lea
jmp
mov
outsl
xchg
daa
xchg
in
mov
test
cmp
cmp
cmp
cmp
push
das
push
mov
jnp
sub
es
jle
in
insb
sub
sub
addr16
sub
xchg
pop
push
cmp
jns
pop
jmp
cmp
inc
cmpsl
add
dec
mov
pop
cwtl
jb
sbb
push
jb
pop
addr16
imul
push
cltd
loope
mov
ds
push
and
and
cltd
es
jo
sub
push
aam
push
lahf
sub
sbb
inc
add
push
or
add
in
outsb
lahf
out
rol
mov
cld
inc
idivl
aam
mov
jns
sarl
push
movsb
mov
jns
out
nop
test
cmpsl
stc
xchg
jl
sub
lock
je
iret
sarl
push
int3
jo
push
stc
fdivl
insb
push
mov
cmpsl
pop
pop
push
push
dec
cmp
push
sahf
dec
inc
push
cmp
xor
cmp
repz
adc
iret
repz
in
incl
loopne
lods
mov
iret
repz
sub
in
dec
out
sahf
out
andb
out
sahf
dec
cmp
add
std
cmp
repz
mov
fs
sahf
out
adc
cld
shrb
push
cmp
cmpsl
and
lcallw
mov
bound
outsb
push
xor
jb
dec
mov
ljmp
push
int
push
jae
fs
push
lret
sbb
je
ljmp
seta
cmpsl
aam
pcmpgtw
xor
add
cmpsl
popa
pop
loope
add
adc
inc
test
mov
out
gs
push
sbb
dec
inc
dec
xor
mov
dec
dec
dec
push
push
mov
and
inc
dec
add
dec
dec
inc
jg
xchg
add
adc
sub
adc
adc
std
incl
popa
into
mov
mov
imul
loop
mov
ds
pop
adc
aas
jnp
clc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
sti
pop
repnz
dec
scas
jp
adc
fisubrs
repz
in
and
cmp
dec
imul
std
dec
lret
add
inc
mov
mov
sub
ficomps
fadds
inc
sbb
pop
jns
ds
xor
incb
ljmp
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
ljmp
cmp
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
loope
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
mov
mov
xchg
dec
and
lods
js
xor
incb
mov
iret
adc
push
pop
aas
and
in
repnz
and
xor
movzbl
sahf
mov
jle
add
testl
inc
or
add
hlt
and
or
das
inc
cmp
push
gs
imul
inc
sbb
push
dec
jmp
jns
sub
mov
pop
inc
dec
sub
dec
push
and
sti
dec
daa
inc
inc
adc
add
pop
dec
dec
and
dec
push
pop
sub
inc
dec
inc
or
sbb
mov
push
inc
pop
es
mov
sti
push
fimull
xor
dec
inc
inc
mov
sbb
fbstp
or
push
sub
xchg
add
mov
pop
and
ss
pop
sub
inc
dec
dec
inc
xor
idivb
push
inc
or
push
inc
cmp
or
or
lods
sbb
sbb
inc
cmp
adc
sbb
sub
daa
js
sbb
adc
cmp
and
sub
inc
inc
xor
inc
daa
incl
mov
pop
adc
jnp
push
inc
inc
inc
adc
call
push
pop
dec
push
push
pop
or
adc
pop
pop
inc
pop
adc
pop
sub
jmp
and
push
pop
jge
inc
pusha
add
mov
pop
dec
das
or
in
das
sti
mov
pop
aad
sub
inc
inc
ret
lahf
cmp
sbb
sub
or
adc
pop
inc
lea
push
push
cmp
ficoms
rcr
sub
ds
mov
or
or
sub
ds
inc
jns
ss
sbb
sbb
movsl
adc
dec
push
or
adc
dec
push
adc
ds
ds
add
xor
clc
xchg
push
pop
daa
xor
add
sub
popf
stos
add
cmp
push
mov
add
mov
inc
xor
mov
pop
push
gs
push
mov
inc
aaa
xor
sbb
sbb
xor
pop
add
inc
mov
and
sbb
in
add
and
in
add
bound
pop
jo
xor
and
pop
pop
add
and
lds
movsl
and
and
push
cmpsb
mov
nop
dec
cwtl
in
push
cmp
iret
xor
iret
repz
push
pusha
jo
and
cmp
imul
dec
icebp
mov
loopne
xor
adc
fsubrl
cmp
jne
and
xor
push
jo
js
cmp
pop
xor
out
sbb
dec
testl
inc
rol
xor
and
dec
xor
xor
cmp
outsl
insl
mov
pop
int3
lods
lahf
inc
popa
outsb
inc
push
sbb
popa
loop
lcall
dec
bound
xor
loop
cvttps2pi
push
sbb
shll
push
lock
scas
xor
cmovg
jns
push
mov
adc
jo
into
repz
shl
pusha
mov
push
inc
push
mov
jns
push
fidivs
sarb
cmp
mov
mov
inc
adc
adc
pop
jl
and
pusha
or
jmp
aad
sub
sub
pop
add
cmp
pop
sbb
dec
dec
adc
js
jo
push
adc
or
jle
pop
or
sbb
inc
push
daa
pop
add
cmp
pop
fisttpll
add
jns
scas
and
push
inc
cmpsb
dec
xor
scas
push
cmp
jb
push
arpl
fldcw
popl
add
jb
adc
pop
push
pushf
jbe
add
adc
lods
and
cmp
push
push
pusha
ss
sub
and
and
or
cmovp
xor
in
push
pop
dec
orb
sbb
sbb
out
sub
imul
dec
cmp
add
add
push
mull
ss
popa
aam
dec
cld
xor
out
pop
push
ss
jecxz
inc
add
pop
scas
jge
imul
sbb
cmp
outsb
scas
test
pop
orb
cmp
xor
sbb
pop
pop
rclb
xor
jl
das
cmp
or
or
inc
int
cs
adc
pop
or
inc
pusha
mov
dec
add
push
cmp
mov
push
daa
or
sbb
adc
js
cmp
out
pop
jnp
sub
or
daa
shll
and
inc
push
ja
stos
pop
and
rcll
lret
jo
push
ss
sbb
pop
cld
adc
add
push
movsb
clc
sbb
pop
xor
add
dec
mov
lcall
sbb
or
enter
sbb
xchg
div
inc
pop
pop
daa
sbb
or
sbb
stos
and
ja
dec
rcrb
mov
inc
pusha
addr16
push
shll
or
dec
outsl
push
add
pop
sahf
push
add
lret
popa
push
mov
in
cmc
in
adc
sbb
lods
dec
push
lods
adc
inc
or
mov
cmp
jb
insl
xor
cmpsl
xchg
xor
and
cmp
dec
test
aas
or
sbb
scas
dec
sbb
or
sbb
adc
sub
add
mov
cmpsb
ret
cmp
jne
lock
or
lahf
and
popf
sysret
lcall
sub
dec
adc
in
dec
pop
or
repnz
stos
ja
sbb
jo
pop
dec
dec
xchg
andb
lcall
dec
aad
dec
xchg
or
push
xor
bound
in
dec
sbb
add
sbb
sbb
scas
bound
cmp
add
or
stos
sub
lods
mov
cmp
cmp
push
fcoms
or
iret
xor
stc
adc
dec
mov
or
sbb
inc
mov
scas
imul
pop
xor
imul
xorl
inc
adcl
cli
loope
pop
push
dec
push
add
sbb
push
sbb
or
pop
out
out
aas
and
add
or
loopne
pop
ret
cmp
imul
dec
mov
mov
push
shll
jns
popa
jne
push
cwtl
xor
inc
leave
cld
push
sub
jae
insl
popa
imul
xor
push
push
pop
outsl
lock
shlb
outsb
data16
push
ja
stos
faddl
data16
adc
push
jns
sbb
in
outsb
faddl
jl
out
aam
mov
mov
add
pop
les
mov
pop
cmp
and
les
dec
add
mov
xor
pop
je
adc
addr16
test
mov
and
sub
inc
mov
movsl
jbe
adc
sahf
xor
call
xor
xor
pop
and
sbb
hlt
ja
fistpl
and
pop
sub
hlt
or
and
jo
pop
xor
fs
inc
xor
mov
xlat
xchg
or
push
icebp
setnp
daa
or
dec
jge
sbb
xor
push
mov
into
sbbb
xor
in
dec
cmp
push
imul
push
sub
outsb
daa
cmp
jp
push
mov
enter
push
lret
popf
xor
or
add
sub
inc
or
or
push
mov
jl
lods
adc
xor
inc
pop
pop
aaa
pop
adc
dec
inc
inc
das
adc
adc
loopne
data16
cmp
rcr
jg
insb
outsl
jb
bound
outsb
pop
insl
sbb
std
push
push
je
and
jne
add
sahf
pop
je
jo
or
pop
fistpl
jae
and
testb
add
add
jae
fwait
xor
push
mov
push
outsl
cmp
fsub
push
sahf
out
inc
mov
and
sub
jl
out
mov
fnstcw
cltd
or
xchg
int
mov
add
pop
or
add
into
adc
jns
and
sub
fldcw
xor
inc
mov
mov
mov
lret
mov
popa
xchg
insb
ss
int
add
test
sub
add
or
pop
adc
pop
add
sub
adc
push
push
ss
int
dec
str
add
scas
fldcw
stc
das
incl
and
push
push
das
xor
xor
push
adc
dec
xor
and
icebp
pop
sbb
add
fisubrs
or
jo
inc
fiadds
fsubs
out
and
dec
xor
aaa
and
das
cmp
xor
je
dec
mov
outsb
jae
push
leave
das
mov
clc
jns
push
loop
fmul
pop
clc
xchg
jb
outsl
imul
cmc
push
flds
dec
add
pop
adc
add
push
xor
pop
pop
je
ljmp
sub
dec
or
sbb
pop
pop
inc
and
sbb
dec
cmp
and
je
inc
clc
das
cmp
pop
scas
cli
scas
cmp
and
es
cmc
rcr
or
mov
xchg
cmp
xchg
daa
adc
rol
or
jb
adc
mov
daa
xor
fidivs
inc
test
or
insl
or
adc
xor
sbb
nop
popf
inc
mov
test
and
push
pop
push
enter
mov
ljmp
or
inc
fmuls
dec
dec
adc
outsb
jl
out
stc
pop
scas
push
mov
inc
jmp
ljmp
out
xor
call
mov
xchg
fmuls
inc
or
xor
pushf
push
adc
xor
sbb
xor
sbb
aaa
sub
loope
push
cmp
dec
lcall
sub
dec
push
in
xor
xor
lret
pop
enter
mov
clc
or
push
push
or
daa
push
inc
pop
fiaddl
dec
lock
add
mov
sub
xor
adc
test
sbb
ja
jbe
les
xor
mov
inc
sub
adc
push
or
cli
dec
mov
call
add
out
mov
cmp
inc
fbld
idivb
rolb
push
loopne
into
ds
push
inc
pop
jo
pop
daa
push
gs
cmp
cvttps2pi
pusha
push
daa
inc
nop
loop
cmp
pop
pop
adc
push
jo
xor
and
dec
xor
adcb
or
call
adc
sub
mov
nop
adc
xchg
cmpsl
mov
loop
xchg
pop
fwait
dec
dec
cmp
add
les
orl
or
pop
mov
push
and
out
in
xlat
sbb
sbb
retw
jnp
lahf
pop
loope
inc
mov
and
shlb
stos
sub
es
xchg
loop
nop
jns
xor
add
push
sub
mov
clc
xor
push
push
lret
sub
nopl
or
cmp
push
or
and
xchg
mov
sbb
rcll
aaa
sbb
jecxz
sub
push
leave
inc
xor
push
mov
push
and
mov
and
mov
lods
adc
mov
push
pop
dec
adc
jae
sbb
pop
das
mov
and
or
push
orb
jle
inc
push
rolb
gs
mov
fmull
or
jo
cld
daa
or
dec
mov
out
xor
call
repnz
add
cld
mov
or
addb
test
push
or
sbbl
fisubl
in
dec
pushl
and
adc
adc
inc
push
xor
and
xor
inc
sub
or
sub
inc
sub
sub
or
or
push
inc
dec
cs
sub
and
jae
or
sub
pushf
cmp
inc
popa
clc
pushf
jle
or
fistps
push
inc
cmp
pop
daa
scas
mov
or
ss
scas
sbb
lods
jmp
pop
pop
test
jge
gs
test
and
adc
sarb
cmp
xchg
sub
push
adc
jecxz
popf
jge
sbb
sbb
mov
xchg
cltd
mov
mov
mov
call
push
shl
popf
jnp
mov
sbb
mov
addr16
and
insl
fldt
sbb
into
push
jnp
sub
inc
and
movsl
jae
pop
orb
and
push
test
pop
sub
adc
and
xchg
ss
xor
je
pop
fsubrl
dec
jnp
fsubp
pop
xchg
inc
push
push
testb
add
pop
cmp
aam
inc
jbe
insl
std
pop
ficoml
dec
fwait
push
push
pop
pop
mov
pusha
xor
inc
into
xor
lods
mov
xorl
call
test
mov
arpl
sub
movsl
adc
sarb
dec
lods
pop
jo
mov
pop
cmp
sub
cmp
xor
pop
sub
push
les
inc
push
push
adc
push
inc
not
mov
movq
aas
mov
sub
cmpsb
pop
sbb
cmp
sbb
pop
ret
nop
inc
dec
inc
sbb
and
les
cmpsb
add
cmp
push
orb
daa
cld
jl
jecxz
or
cs
movsb
dec
pop
and
pop
push
pop
push
dec
test
and
sbb
jecxz
mov
add
pop
dec
adc
pop
dec
pop
xor
fs
subb
and
or
mov
xchg
sbb
mov
adc
sub
or
cmp
push
sbb
adc
cmpsb
imul
inc
pop
adc
cmp
or
and
push
maskmovq
negl
insl
or
lcall
add
xlat
xchg
add
aaa
sbb
push
xchg
adc
imulb
out
cmc
decl
insb
gs
ja
fs
test
jo
gs
pop
jmp
mov
das
and
and
aad
inc
jb
mov
or
or
dec
xchg
jae
push
push
inc
add
sarl
andb
lock
data16
das
shrb
ss
out
fwait
int
cmp
es
idivl
iret
mov
pusha
push
inc
push
inc
dec
sub
imul
adc
inc
testb
push
les
or
push
dec
dec
in
adc
pop
in
add
aaa
shlb
mov
mov
pushl
pushl
pop
sbb
ljmp
mov
ja
mov
lods
pop
dec
jmp
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
mov
fnstcw
sub
mov
sbb
jp
in
iret
mov
xor
pop
sbb
subb
mov
mov
dec
fsubs
fsubrs
xchg
pop
sbb
mov
mov
in
pop
dec
xchg
pop
shl
dec
push
add
pop
enter
adc
adc
out
and
xor
aaa
xor
enter
sub
movsl
subl
dec
call
inc
jb
popa
scas
pusha
sbb
outsl
push
dec
imul
dec
push
dec
sahf
dec
sub
sub
out
dec
sbb
xchg
xor
and
cmp
jae
pushf
fadds
dec
iret
leave
jae
mov
in
loopne
add
je
inc
js
cmp
mov
pop
add
push
dec
pop
inc
mov
dec
or
or
mov
lcall
jnp
cmp
xor
sub
sub
ret
sub
xor
inc
push
xor
adc
bound
push
push
outsb
add
bound
cmp
inc
das
js
negb
adc
addr16
jne
and
lock
lret
dec
jp
inc
xor
sub
clc
mov
cmpsl
bound
je
bound
mov
inc
mov
push
stos
push
loopne
fsubs
adc
add
xchg
aaa
jg
js
xchg
rclb
mov
inc
pop
xor
shlb
and
adc
fs
inc
adc
out
ja
mov
fisubrl
add
iret
shll
inc
inc
or
push
xchg
dec
cli
movsl
sbb
xor
push
adc
clc
outsl
inc
adc
xchg
pop
pop
sbb
inc
and
sub
jo
out
xchg
or
jo
rclb
mov
and
xchg
outsb
push
ss
fstp
xor
and
inc
inc
xor
jns
add
test
fisubl
sbb
or
aaa
es
inc
or
or
pop
inc
test
jg
in
das
xchg
sbb
inc
das
or
lcall
dec
mov
repnz
addr16
inc
scas
shrb
addr16
push
sahf
int3
es
xchg
int3
pop
out
imul
push
lahf
pop
mov
out
int
cmp
scas
lret
pop
inc
or
push
sbb
jnp
insb
push
and
pop
jns,pn
ds
leave
iret
push
iret
in
iret
pop
movsb
xchg
insl
in
outsl
imul
lret
pop
cmp
mov
pop
mov
lods
mov
shlb
popaw
insb
mov
add
pop
lahf
xlat
jl
in
mov
imul
fidivrs
std
sbb
pop
cs
jge
pop
pop
aam
scas
fadd
popf
inc
dec
sti
es
mov
pusha
data16
pop
mov
sbb
mov
int
cmp
hlt
cmpsb
or
inc
outsb
push
pop
sti
mov
cs
push
cs
push
testl
std
ja
cmp
add
xor
stos
loopne
shrl
loope
fldenv
fsubrp
shll
daa
int3
dec
arpl
insb
iret
jnp
push
movsl
outsl
aaa
mov
repz
testl
mov
sub
mov
push
rolb
cmp
sahf
out
push
jnp
mov
ret
cmpsl
notb
sub
nopl
mov
testb
jno
repz
sbb
fistps
mov
addl
jno
nop
mov
fdivp
iret
mov
dec
xchg
fidivrs
test
fwait
push
lahf
push
dec
xchg
idivb
dec
push
mov
xchg
addr16
cmc
out
ja
xchg
push
mov
push
or
xchg
pop
fucom
jns
je
mov
add
cmp
dec
repz
add
out
lcall
daa
push
mov
sahf
cmpsl
fnstcw
inc
cmpb
jge
add
imul
test
cltd
lahf
out
lea
xchg
repz
inc
push
jae
out
mov
testl
xchg
aad
pop
dec
sbb
scas
sub
test
adc
stc
add
adc
lcall
push
push
mov
nop
adc
mov
add
mov
scas
int
pop
sti
mov
mov
leave
loop
and
push
pop
es
idivb
shll
mov
sbb
pop
sbb
pop
repnz
ds
adc
or
adc
iret
pusha
or
inc
push
in
add
add
xorl
dec
dec
mov
xor
scas
gs
fiaddl
push
push
jae
popa
push
aas
inc
push
dec
sub
inc
sbb
pop
loope
testl
push
mov
dec
mov
cmp
jae
pushf
or
fisubl
push
and
mov
jae
dec
cmp
mov
fisubrl
push
ljmp
cmpsb
dec
add
add
push
insb
inc
mov
dec
pop
je
cmp
aaa
push
fisttps
jp
nop
aaa
shrl
push
repnz
gs
ret
cmp
inc
imul
pop
test
out
pop
retw
js
frstor
or
dec
mov
ja
cmp
jecxz
shrb
and
dec
mov
lods
push
and
cwtl
push
fimuls
faddl
pusha
jle
ds
stc
sub
inc
push
add
popa
insl
jo
std
in
scas
es
insb
je
push
addr16
jo
jae
fildll
jne
and
aas
cmpb
sub
fstpt
or
cmpsb
mov
outsl
loopne
or
xor
xor
xor
xor
xor
data16
sahf
cmp
cmp
push
xor
xor
cmp
push
insb
inc
sar
add
add
adc
imul
pop
inc
or
push
and
or
bound
cmp
loopne
add
add
jo
xor
adc
push
ljmp
dec
cmp
lds
adc
lcall
pusha
test
pop
sub
adc
lods
test
mov
jmp
cmp
ja
ss
daa
testb
sbbb
lea
pop
sbb
pop
xchg
or
push
or
mov
fnstsw
jo
jbe
inc
inc
dec
xor
push
or
xchg
cmp
sbb
orl
daa
daa
push
sub
pop
and
sbb
sbbl
and
adc
push
and
cltd
mov
or
ss
js
and
mov
addr16
rcll
ds
cmp
and
sbb
mov
sahf
push
das
sbb
xor
sbb
sub
mov
mov
or
sbb
or
pop
sbb
inc
pusha
mov
xorl
stos
popa
inc
aaa
and
cmpl
lcall
mov
js
mov
fldl
sbb
jo
out
mov
lods
aaa
mov
mov
insl
aaa
orl
or
daa
and
loopne
mov
mov
stos
lods
cmpl
addr16
jmp
lea
daa
lods
daa
jge
bound
bound
stos
lea
das
divl
adc
adc
pop
dec
js
lods
pop
ret
pop
inc
jno,pt
unpcklps
test
daa
imul
sbb
pop
xchg
das
dec
pop
in
adc
test
popf
jecxz
pop
pop
inc
xor
pop
add
adc
xor
ja
js
loopne
pop
pop
pop
rcrl
xorb
daa
lahf
rorl
outsl
insl
or
adc
int
add
pop
addr16
aad
jg
sarb
push
dec
xchg
mov
push
inc
imul
les
mov
aaa
outsl
lret
cltd
or
cmp
adcl
sbb
dec
push
leave
sub
ret
inc
js
jl
jl
ret
inc
xor
adc
mov
mov
sub
xchg
fsubrl
sahf
mov
and
inc
sbb
dec
or
cmpsl
xchg
insl
add
outsb
mov
cmp
pop
adc
aad
data16
cmpb
or
inc
dec
xchg
in
inc
insb
adc
dec
dec
ss
pop
push
jno
test
sbb
incb
and
das
das
jo
pusha
add
cmp
pop
or
or
push
mov
pop
pushf
sysexit
xor
into
adc
or
es
sarl
es
or
push
jp
adc
test
es
addr16
addr16
xor
adc
dec
pop
test
push
pop
and
dec
and
xchg
sbb
and
stos
jge
adc
popf
xor
cmp
add
jecxz
or
pop
fcoms
inc
mov
and
sbb
and
sbb
push
sbb
pop
and
fimull
popa
loope
xchg
ja
xor
das
push
or
dec
gs
inc
dec
sub
add
cmpsl
loopne
pop
xor
outsl
into
add
pusha
adc
aas
pusha
int
das
aam
cs
int3
loopne
out
mov
mov
or
adc
jp
or
pop
or
inc
xorb
int3
xor
pop
mov
pop
dec
or
cmp
inc
mov
mov
inc
lret
mov
sbbb
push
ss
sbb
inc
pop
pop
cmp
add
mov
lods
cltd
mov
sbb
sub
orb
sbb
pusha
and
pop
cmpl
cltd
add
ss
and
out
mov
rcrl
ss
cmpsb
cmp
sbb
jl
dec
data16
pop
inc
lret
and
pop
inc
loopne
or
mov
push
pop
das
pop
mov
cmp
push
adc
and
sahf
add
das
iret
rcll
dec
cmp
and
inc
pop
shll
pop
pop
je
push
aas
dec
inc
pop
std
or
add
and
push
fucomip
cmp
jbe
testl
mov
lods
inc
out
cmp
push
jnp
bound
loop
dec
xchg
fs
sahf
sub
pop
or
push
ss
and
push
pop
mov
xor
add
and
and
jae
mov
push
sub
push
fs
xchg
ljmp
add
dec
mov
or
mov
push
or
dec
imul
cmp
test
inc
jo
insb
in
jbe
cmpsb
or
cs
add
aas
shrb
xor
out
or
add
cmp
ds
add
inc
and
sbb
cmp
push
pop
inc
add
sbb
and
sbb
add
sbb
es
pop
dec
call
inc
add
dec
ss
sub
das
pop
dec
pop
jmp
dec
sbb
ss
inc
dec
cmp
sbb
dec
pop
and
and
inc
and
add
dec
sub
adc
sbb
mov
add
inc
adc
inc
loopne
or
or
es
push
push
dec
dec
dec
rolb
inc
push
adc
ja
cmp
add
xchg
mov
push
pop
push
or
inc
dec
add
dec
push
adc
dec
ds
push
add
sub
add
es
sbb
and
dec
pop
add
sbb
inc
pop
das
pop
popa
and
out
test
jb
cmp
xlat
js
sbb
inc
mov
cmpsl
xchg
mov
pop
push
add
adc
adc
pushl
cmp
inc
inc
sbb
cmp
push
and
xchg
and
adc
aas
and
and
xor
add
sahf
loopne
xor
sub
daa
and
fs
adcb
cmp
insb
xor
imul
les
adc
sub
add
dec
mov
inc
mov
or
push
xor
cwtl
pop
lret
add
in
rol
pop
call
inc
jb
and
insb
push
push
aas
loope
dec
cmp
inc
push
dec
xor
leave
sti
inc
dec
push
dec
add
xor
add
outsl
mov
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
sbb
incl
sbb
cwtl
stos
pop
fdivrs
jmp
or
je
mov
andb
fwait
rol
fwait
in
push
add
xchg
out
popf
rorl
and
sub
sub
decl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
cmpsb
ja
call
push
arpl
push
sub
adc
or
cld
insl
sub
decl
or
or
cs
ret
sub
xchg
mov
data16
mov
push
insb
sbb
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
std
mov
sbb
dec
stos
fmuls
lret
rep
cs
arpl
call
enter
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
jb
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
push
pop
cmp
scas
cli
ljmp
or
dec
pop
xor
jp
jb
jae
inc
dec
cmpsb
or
cmp
jg
and
jge
cmp
sub
jns
or
cmp
add
dec
jo
inc
aas
inc
gs
push
pop
outsb
inc
arpl
pop
cmp
xor
imul
pushl
push
push
ja
inc
es
into
aaa
adc
and
jl
and
xor
sbb
daa
pop
xchg
inc
push
or
outsl
push
push
and
mov
pop
pushf
aas
pop
push
into
in
scas
ja
pop
jne
pop
inc
mov
mov
iret
daa
pop
daa
pop
aaa
push
push
sbb
and
incb
xor
sbb
pop
adc
fmulp
clc
sbb
and
aaa
imul
push
inc
add
xor
xor
mov
inc
add
inc
pop
inc
ret
into
inc
xor
and
aaa
inc
push
inc
cs
xor
pop
cmovb
pop
ss
mov
pop
cmpsl
ss
mulb
inc
add
sbb
test
ret
les
lret
inc
push
outsb
addb
xor
sub
scas
dec
into
or
push
hlt
sbb
bound
ss
dec
push
pop
scas
add
jle
mov
xor
scas
mov
mov
inc
bound
pop
ficoms
push
add
dec
out
mov
jle
sbb
loopne
pop
dec
js
insb
mov
sub
add
sub
sbb
mov
in
inc
das
loopne
int
dec
frstor
xor
push
adc
dec
add
call
dec
popa
add
dec
sbb
fiaddl
dec
mov
ja
mov
fcomps
cmp
movsb
popf
loop
sbb
cmp
mov
sahf
mov
mov
adc
cmp
push
scas
hlt
popa
stos
movsb
out
sbb
cmp
lret
roll
in
out
jmp
sbbb
inc
adcb
or
and
sub
inc
dec
adcb
dec
jbe
aam
imul
cmp
jnp
lock
xor
xor
sbb
adc
xor
pop
aam
mov
jne
loope
adc
sbb
pop
add
add
sahf
and
add
or
add
xchg
fmuls
cltd
adc
test
jb
cmp
out
inc
lods
push
das
outsb
outsb
je
inc
into
into
rdmsr
imul
jo
jbe
jae
jbe
jae
popa
insl
gs
cmp
ret
jo
adc
add
leave
jo
and
push
inc
aad
sub
idiv
xor
insl
sbb
aad
loop
add
dec
out
mov
lods
data16
outsl
insb
sub
push
popa
je
push
xchg
mov
xchg
dec
adc
ret
mov
adc
cmp
or
push
gs
pop
push
pop
xchg
je
sbb
or
or
and
ret
push
aaa
dec
pop
les
push
lret
insb
dec
adc
cmpsl
mov
inc
lahf
movb
es
in
push
call
push
or
and
jae
xchg
and
fcoms
cmp
xchg
xchg
or
inc
and
or
mov
xchg
mov
mov
and
lds
sbb
lret
rclb
sub
scas
and
cmp
das
sub
dec
sbb
rorb
fs
aad
cwtl
ds
popa
dec
lcall
ja
jb
pop
repz
mov
pop
inc
jne
mov
xchg
xor
push
enter
cmp
cmp
pop
inc
sub
jp
adc
inc
mov
jl
mov
push
cmp
add
cmp
adc
sub
push
adc
call
pop
and
and
mov
cli
hlt
or
test
pcmpgtb
jo
sub
or
stos
mov
aad
push
outsl
imul
xor
mov
cmp
inc
call
mov
cmp
call
jmp
inc
adc
scas
daa
inc
arpl
sbb
and
cmc
pop
bound
imul
fcoms
rolb
sbb
das
inc
mov
adc
dec
sarb
pop
and
ss
and
push
sbb
xlat
push
mov
sahf
into
and
push
xchg
mov
cmp
adc
in
adc
rcll
sbb
inc
jge
cmpsb
ja
das
add
or
pop
dec
sub
add
js
into
lds
pop
sbb
sbb
or
filds
gs
or
loop
aam
out
imul
gs
sbb
add
jb
mov
adc
fidivrl
add
pop
xor
pop
pop
pop
pop
stos
or
sub
rolb
dec
pop
dec
pop
divb
dec
movsl
orl
popa
cli
push
pop
cs
lea
inc
jbe
pop
shll
movsb
xor
jb
ljmp
stos
add
notb
xor
pop
inc
popf
dec
push
lock
daa
xchg
hlt
add
or
cmp
and
and
xchg
or
inc
mov
and
add
cmp
enter
imul
and
fidivl
jne
or
lods
push
loopne
outsl
xchg
mov
add
pop
dec
es
addr16
popa
dec
outsl
jne
imul
outsl
and
add
inc
cmpsb
sarl
dec
cmp
imul
sbb
cmp
add
push
inc
adc
push
inc
pop
push
out
inc
push
pop
mov
sahf
xlat
jb
gs
mov
daa
inc
dec
fwait
pop
addb
dec
jb
shll
mov
mov
pop
or
jb
nop
lcall
loop
lahf
pop
inc
call
pop
and
mov
jno
and
xchg
push
xorl
jns
jb
cmp
addr16
adc
sub
ss
jecxz
sahf
cwtl
sbb
push
fidivl
pop
or
jb
push
pop
rolb
mov
jbe
daa
cmp
rclb
push
or
mov
dec
gs
add
or
loopne
popl
xchg
cmpsb
shlb
fdivs
jmp
xor
dec
and
adc
rcrl
inc
mov
and
mov
cmp
stos
sbb
cmc
addr16
adc
inc
js,pt
dec
and
push
aaa
mov
cmp
dec
sbb
outsl
pop
sbb
xor
pop
pop
sbb
mov
stos
mov
mov
dec
add
add
insl
aaa
lock
xlat
push
push
jmp
out
jmp
push
xorl
lds
push
xlat
inc
sub
mov
mov
xlat
outsl
or
mov
mov
inc
add
daa
sti
repz
out
mulb
push
aaa
repz
in
mov
lock
inc
das
fsubrl
ja
mov
orb
xchg
dec
inc
xadd
ja
xchg
cmc
sbb
inc
outsl
mov
movl
inc
divb
cmpb
aas
mov
jo
mov
fistpl
inc
dec
add
adc
nop
rclb
insl
xchg
add
adc
sbb
cmp
out
cld
daa
aas
add
test
rep
fldl
addr16
movsb
sub
daa
insl
out
sbb
dec
push
fs
or
lods
inc
add
mov
nop
lahf
add
jl
idivb
daa
test
rclb
test
shl
rclb
add
push
and
aas
jg
mov
outsl
mov
and
inc
push
jb
push
cmp
and
sub
push
jb
add
aaa
xlat
pop
daa
xlat
pop
push
pusha
xchg
push
cmpsl
stc
cmp
in
push
enter
pusha
iret
sarl
pushf
hlt
pop
fdivrs
dec
jo
push
cmp
iret
idivb
lods
pop
sahf
nop
pop
pop
pop
out
sahf
negl
pop
pop
pop
pop
xor
out
push
cmp
add
pop
or
lahf
cmpsl
stc
lock
aam
pushf
pop
push
mov
in
push
add
pop
add
cs
jecxz
or
out
dec
inc
enter
mov
into
xor
pop
hlt
imul
pop
ds
repnz
add
mov
sub
sub
iret
repz
push
nop
fcoms
in
jge
pusha
push
mov
fildl
jl
ja
outsb
leave
aad
lods
mov
xchg
add
dec
mov
outsl
jns
xchg
mov
sub
rorb
inc
pop
pop
das
sbb
je
dec
outsl
add
or
pop
enter
enter
pop
repnz
enter
cmp
cmp
rcrl
pop
ss
add
mov
sub
xchg
pop
pusha
and
xor
mov
or
xor
dec
repz
dec
xor
pop
lods
outsl
inc
pop
enter
sub
je
mov
jl
cmp
pop
scas
add
outsl
out
adc
sbb
pushl
xor
push
enter
xchg
cmp
pop
pop
enter
or
sub
mov
sbb
fs
nop
sub
pop
or
and
iret
or
pop
sub
out
mov
pushf
push
xor
mov
jl
mov
add
jbe
pop
loopne
jg
push
xor
add
xor
sbb
add
sub
mov
out
add
leave
mov
iret
xchg
mov
fistl
jo
adcb
and
push
nop
sub
fiadds
fs
push
push
push
xor
scas
add
pop
outsl
out
xchg
sbb
mov
mov
cmpsl
add
mov
xlat
or
nop
cmpsl
xor
push
aaa
push
call
mov
aaa
sbb
outsl
sbb
insb
jnp
daa
pop
sub
xor
sub
xor
mov
es
mov
movl
push
fnstsw
popa
push
in
int
jns
xor
adc
clc
push
imul
mov
and
pop
pop
push
fsubl
and
sbb
add
xorl
fimull
pop
popa
divl
sub
mov
outsl
js
lods
ret
push
push
outsl
jg
sbb
call
mov
clc
popa
bound
sub
data16
imul
in
push
lock
dec
bound
out
mov
xor
and
or
movsb
bound
adc
or
popa
lods
jbe
cwtl
mov
daa
shll
or
xchg
pop
arpl
fs
lahf
mov
add
xchg
xor
je
pop
addb
fiaddl
adc
outsl
and
jns
sub
add
add
loopne
sub
fs
cmp
rolb
fs
mov
push
rorl
js
cmpsb
xchg
or
add
sbb
addr16
add
sub
xor
or
or
outsl
dec
repnz
sahf
xchg
cmp
repnz
mov
addr16
add
mov
mov
jb
iret
sbb
mov
ss
adc
mov
data16
aaa
pusha
and
dec
dec
sub
data16
sti
pop
push
je
cmp
outsl
add
ss
daa
mov
pop
cmpsb
shlb
dec
clc
es
ss
in
aaa
push
xor
fistps
or
cmp
sbb
add
adcl
add
iret
daa
pop
in
jbe
dec
out
hlt
lahf
or
add
pop
leave
xchg
add
or
rcl
pop
push
sub
imul
andb
mov
test
sub
enter
or
dec
leave
xchg
dec
or
xor
mov
out
push
adc
xchg
push
pop
or
aam
leave
or
push
mov
testl
lock
ficoms
jne,pn
sbb
fisttpl
or
js
gs
out
inc
sub
xor
rorb
pop
push
addr16
in
aam
pop
or
hlt
addr16
jno
and
or
mov
add
jo
fdivr
push
or
es
inc
dec
lock
sbb
push
xor
ss
inc
addr16
lods
lea
imul
nop
cmpsl
mov
call
lock
sub
mov
add
ss
shrb
mov
imul
or
mov
sbb
outsl
movsb
xor
cmpsb
dec
outsb
inc
scas
push
push
pop
pop
pop
fisubl
xlat
data16
xchg
test
pop
das
push
sahf
cmp
jnp
mov
mov
inc
addr16
ret
sbb
pop
or
xor
addr16
push
mov
pop
lods
out
mov
push
fs
iret
sarl
cli
and
pop
sbbb
sbb
aas
gs
out
sbbb
cmp
shrl
dec
andb
loopne
jo
mov
lahf
idivb
jno
and
idivl
je
mov
jo
jge
out
mov
add
dec
ss
out
je
cld
and
jbe
lahf
out
movsl
frndint
daa
ja
imul
fisttpll
js
repz
out
jns
nop
cmp
mov
push
push
jl
loopne
sahf
cmpsl
stc
and
jl
fdiv
cmp
repz
lahf
repz
iret
ljmp
cmpsl
stc
cmp
es
test
jg
iret
sarl
out
adcb
int
imul
inc
addb
xorl
xorl
add
sahf
out
jo
lock
xchg
ds
js
sbb
ds
stc
ss
data16
sbb
imul
imul
pushl
lea
cmp
out
dec
mov
sahf
out
nop
cld
sarl
cmp
fcomi
xor
out
xchg
mov
xchg
pop
mov
out
iret
out
insb
xchg
sahf
push
dec
xchg
movsb
cld
lcall
repz
jge
cltd
ss
daa
lcall
shr
fwait
xchg
rcrb
fiadds
sbb
cmp
out
stos
fdivs
lahf
jo
jge
out
repz
mov
iret
sarl
push
jmp
in
out
sub
movsb
int
repz
in
fsubs
into
sti
cmp
nop
cmpsb
push
cmpsl
push
arpl
xor
iret
mov
test
test
lcall
enter
int
stos
push
mov
jno
iret
repz
mov
js
iret
sarl
mov
scas
jo
repz
imul
mov
push
call
aaa
mov
and
stc
out
shl
dec
mov
xor
mov
mov
push
cmpsl
stc
cmp
inc
roll
jl
mov
out
repz
lds
sahf
out
cmp
in
inc
movb
sbb
mov
loopne
push
int3
ss
ja
jo
int
push
ret
mov
adc
mov
mov
sahf
in
mov
mov
in
insb
int
add
and
or
inc
aaa
lock
clc
jno
in
cmp
add
add
fisubl
xchg
cmp
ja
stos
ja
add
add
repnz
add
mov
sub
pop
xchg
adc
fs
push
adc
shlb
out
pop
xor
int3
stos
ss
jb
cmp
pushl
adc
pop
jo
in
mov
in
jae
test
ret
push
adc
addr16
mov
pop
add
shlb
lock
push
rolb
stc
xchg
or
mov
rcrl
outsl
test
add
loopne
mov
xor
fcoms
in
js,pt
cmpb
outsb
xchg
pop
mov
dec
push
scas
ss
xchg
sbb
sbb
movsb
pop
mov
in
inc
addr16
fst
mov
imul
fcmovne
shrb
pop
into
fimuls
data16
xchg
mov
mov
out
out
mov
cli
out
jb
fldcw
iret
fucomip
jne
in
add
push
push
repz
call
incl
iret
mov
aaa
pop
in
jbe
popl
jbe
or
inc
icebp
stc
mov
inc
fildll
aas
rorl
inc
add
idivl
ds
lahf
mov
jb
ja
sbb
cld
pop
clc
mov
inc
mov
scas
cmp
ss
outsl
andl
addl
aam
inc
jg
jbe
enter
sub
dec
mov
leave
cmc
push
xlat
push
aas
bound
dec
or
pop
and
add
mov
inc
jns
pop
nop
sub
in
bound
lock
inc
pusha
inc
sarl
rcrb
add
mov
mov
gs
dec
movsb
jns
leave
xchg
xchg
xchg
jns
jns
dec
cmpsb
in
outsl
or
lds
shr
jns
jp
aas
inc
mov
cmpsb
aas
push
out
jb
inc
bnd
inc
je
fs
push
popa
xor
adc
ret
pop
fwait
insl
fdivrl
mov
add
push
add
mov
flds
in
inc
cld
add
or
mov
outsb
dec
aaa
push
and
nop
pop
xchg
push
leave
mov
icebp
dec
clc
jnp
call
in
or
or
and
inc
jl
in
and
mov
inc
test
mov
shll
jl
fsubl
xchg
daa
hlt
outsb
inc
jo
xlat
fdivrp
push
inc
outsl
int3
gs
add
cmp
add
jge
jge
fs
dec
mov
in
dec
add
test
or
lods
inc
outsl
dec
in
dec
or
out
and
cmpsl
mov
xor
repnz
push
mov
or
loopne
in
pop
mov
jg
jg
popf
inc
mov
jg
outsl
inc
push
jns
enter
jo
push
add
out
sahf
out
xor
jns
dec
pop
push
or
rcll
xchg
jb
xchg
cmp
fs
hlt
in
cmp
jge
addb
or
cmpb
iret
leave
jae
mov
xchg
repnz
xchg
sub
add
mov
sbb
jno
jns
inc
das
jno
add
out
in
in
pop
gs
cmpsb
add
leave
repz
add
push
cmp
es
andl
into
dec
dec
cs
mov
stc
add
enter
jb
jb
jb
out
and
inc
outsb
mov
lds
cmpsl
fs
inc
mov
pop
xor
pop
mov
jg
pop
and
mov
or
paddw
and
add
and
dec
push
xor
pop
push
pushf
out
push
jns
andl
andb
and
mov
mov
sub
inc
daa
sarb
jns
loopne
dec
and
sbb
mov
push
cmpsl
aas
add
and
nop
test
in
daa
addb
leave
push
je
inc
push
ret
add
push
out
xchg
inc
repnz
mov
xchg
jb
test
xchg
je
rcll
je
cmpsl
je
xchg
xchg
sbb
je
test
mov
in
hlt
xchg
or
enter
popl
xchg
xchg
repnz
xchg
dec
jne
repnz
jne
jne
jne
jne
repnz
mov
jne
push
or
repz
or
iret
repz
or
cmp
loop
in
adc
adc
jbe
push
adc
sahf
out
adc
adc
sahf
out
pop
push
sbb
int3
icebp
mov
sbb
rorl
and
jb
pop
xor
mov
pop
int3
pop
ja
mov
ja
dec
fimull
cmc
inc
ja
arpl
mov
dec
dec
mov
sub
inc
mov
lods
xchg
scas
mov
mov
sbb
movb
pop
xor
movl
dec
dec
mov
js
jmp
pusha
js
push
mov
js
orb
cmp
jl
mov
sysret
lods
sub
xchg
rorb
das
or
inc
das
inc
loopne
nop
scas
pop
cmp
inc
enter
aaa
xor
out
pop
add
ja
xorb
xor
push
cmpsb
loopne
imul
jg
xchg
mov
out
mov
in
mov
pop
aas
jge
andb
lahf
and
inc
ret
jmp
hlt
daa
xor
and
leave
add
mov
inc
xor
jp
cwtl
inc
jb
inc
jb
arpl
and
inc
movsb
sbb
repnz
jnp
jp
dec
je
jnp
push
jnp
fisubl
mov
xchg
aam
mov
stos
adc
add
and
mov
pop
lea
or
pop
sub
xor
aas
cmp
pop
in
pop
iret
data16
iret
mov
sub
pushf
cmpsb
jp
mov
pushf
inc
mov
jl
stc
or
xchg
mov
jge
sbb
jnp
jns
jge
jge
jge
add
loopne
je
xchg
xchg
fsubrl
popf
xchg
movsl
sub
inc
repnz
enter
cmp
pop
xlat
push
jle
or
cmp
xchg
mov
int3
dec
push
inc
jno
movsb
pop
cmp
dec
jb
nop
add
daa
and
xchg
sbb
movl
fcmovne
mov
jge
add
add
test
lret
lret
lret
lahf
mov
mov
lret
lret
lret
enter
fdivrs
jle
lret
lret
lret
call
jle
jg
lret
lret
lret
or
jg
jg
jg
jmp
xor
femms
cmp
cmp
or
cmp
cmp
or
push
cmp
cmp
add
xor
cmp
add
and
mov
in
push
addr16
xchg
jae
frstor
add
mov
test
xchg
pop
jb
jl
cmpb
daa
inc
or
test
jbe
xchg
xor
inc
xor
lea
adcb
sahf
ja
push
push
test
cmp
mov
sbb
in
add
andl
orl
aaa
cmp
push
pop
pop
fwait
loop,pn
iret
insb
add
je
xlat
dec
dec
mov
dec
or
jns
jns
lods
or
mov
mov
dec
cmp
loop
movsb
add
mov
inc
fmuls
ret
or
fsubrs
mov
aas
daa
iret
sarl
push
add
es
or
jo
daa
adc
sub
lock
adc
fildll
out
pop
jo
out
idiv
decl
or
push
jg
push
push
sbb
lahf
or
adcb
inc
xchg
xchg
xchg
and
pop
andb
mov
xchg
add
mov
cmp
leave
pop
roll
fabs
es
mov
icebp
inc
dec
adc
xchg
xchg
outsl
and
xchg
and
cmpl
dec
adc
addr16
push
sbbl
pop
insb
dec
dec
dec
cs
cwtl
mov
dec
mov
iret
repz
fiaddl
in
lock
sub
cmp
or
test
xchg
pop
iret
repz
or
or
dec
and
bswap
xchg
pusha
test
inc
repnz
mov
stos
cwtl
xchg
pop
lock
outsl
outsl
or
jae
fstpl
and
sub
xor
cmp
cmp
inc
or
pslld
pop
popa
test
fildl
push
add
mov
pop
or
push
add
xor
pop
int3
cwtl
and
repz
out
nop
inc
repnz
inc
and
adc
in
shr
xor
inc
xchg
dec
sbbb
or
daa
add
iret
leave
leave
add
leave
inc
cmp
mov
jmp
mov
mov
iret
enter
push
cmp
pop
xor
daa
dec
in
mov
inc
lcall
adc
cmp
xchg
xchg
xchg
dec
pop
add
pop
insb
push
fistps
mov
sarb
sbb
push
xchg
push
xlat
or
mov
inc
xor
pop
and
insl
dec
addr16
nop
cmp
loope
cwtl
xlat
xchg
test
and
pushf
add
pushf
shlb
in
in
out
add
leave
or
mov
mov
push
pop
mov
mov
pop
pop
jb
jge
mov
pop
pop
sahf
mov
mov
rcrb
push
sti
push
mov
repnz
xor
cmp
mov
jb
stc
dec
push
popf
orl
mov
pushf
mov
in
popf
in
or
dec
pop
push
add
or
and
xchg
sahf
cmp
pop
pop
lods
jle
fsubrl
pop
xchg
mov
add
and
inc
mov
lahf
rcr
in
lock
inc
and
pop
cmp
mov
arpl
imul
scas
daa
iret
repz
jnp
mov
or
mov
add
out
das
dec
and
fcomi
mov
lea
pop
mov
push
push
pop
lea
pop
pop
nop
push
and
adc
cwtl
cmpsb
xchg
adcb
test
dec
cmpsb
mov
lahf
stos
push
add
ja
mov
mov
jg
decb
jbe
jl
add
leave
rep
and
das
es
or
xchg
out
mov
ds
cmp
inc
mov
and
imull
mov
mov
lods
mov
popf
pop
and
clc
loopne
in
repnz
or
adc
sahf
ja
jb
dec
push
xchg
in
jns
add
test
jmp
insl
shl
mov
xchg
das
outsb
repnz
jmp
mov
or
mov
sbb
and
sub
pop
pop
pop
pop
xor
cmp
inc
nop
dec
nop
pop
pop
pop
pop
push
nop
pop
nop
fs
insb
nop
pop
pop
pop
pop
je
jl
test
mov
ud2
pop
or
xchg
xchg
xchg
xchg
or
push
add
add
add
xchg
jns
out
sbb
sahf
out
sbb
rorl
pop
les
and
repz
leave
aam
and
and
in
es
nop
negl
leave
out
nop
mov
cwtl
inc
xchg
jmp
push
cvtdq2ps
or
xchg
nopl
add
xchg
xchg
sub
mov
xchg
add
in
repnz
fisttps
xlat
iret
cmpsl
sbb
rcr
push
mov
xchg
xchg
pop
inc
mov
xchg
sub
jae
cmp
scas
inc
cmovs
sbb
jp
cmpsl
das
pop
or
out
pusha
or
jo
sahf
outsb
cmp
jo
jns
nop
cwtl
xchg
xchg
leave
inc
bnd
lahf
fcmovnbe
ja
lods
cmpsb
add
or
sahf
out
sahf
add
add
add
jp
jle
xchg
or
cmpsb
mov
outsl
sub
das
mov
xchg
pushf
pushf
fsubrl
xchg
iret
cltd
mov
loope
push
xchg
fnstsw
inc
inc
push
xchg
add
rol
mov
mov
jmp
pop
daa
js
mov
push
xchg
pop
push
xchg
and
xchg
loopne
addr16
out
repnz
dec
push
add
xchg
call
sub
je
dec
push
daa
test
add
aas
xchg
xchg
in
and
xchg
xchg
mov
mov
rolb
sub
mov
xchg
xchg
inc
xchg
iret
in
enter
xchg
pop
xchg
mov
cmp
mov
and
push
fildll
out
mov
mov
fmull
enter
loopne
dec
dec
outsb
psubsb
clc
outsb
mov
scas
xchg
mov
sbb
out
or
dec
sahf
out
adc
adc
inc
xchg
pushf
push
push
mov
xchg
iret
insl
in
jl
test
mov
daa
into
repz
add
xchg
push
loope
push
incb
xor
nop
stos
stos
outsb
mov
add
scas
aam
fcompl
in
fsub
jns
in
push
mov
xchg
andl
and
stos
pushl
push
sub
cs
lret
dec
xchg
inc
xchg
dec
xchg
das
jl
inc
push
cmp
push
test
pop
leave
mov
daa
pop
hlt
jmp
neg
data16
cwtl
pop
adc
jne
ja
sub
ss
or
dec
cmp
insb
inc
add
xor
or
lods
lods
jae
loope
je
femms
pop
setle
xchg
mov
add
jb
rorb
add
cs
in
sahf
ja
push
or
in
mov
push
scas
in
pushf
dec
and
shrb
adc
add
cltd
pop
repnz
jae
add
add
outsb
sysret
inc
dec
push
or
jns
leave
push
pop
or
jae
jns
push
addb
jns
adc
cltd
push
enter
iret
push
cmp
jae
int3
push
aam
faddl
leave
leave
shl
in
cltd
cltd
mov
setp
test
pop
push
pop
push
mov
dec
sahf
fildl
push
add
lcall
sub
jo
xchg
out
inc
aaa
dec
ja
mov
daa
and
cwtl
mov
jl
cmp
fsubs
push
pop
cld
test
jno
fwait
iret
fwait
mull
fwait
andb
sbb
lock
enter
push
iret
repz
sahf
ja
fiadds
data16
cs
jns
leave
jbe
push
add
lret
sub
mov
sbb
pop
faddl
out
push
daa
mov
in
mov
fwait
xchg
adc
or
mov
xlat
sub
dec
pushf
cmp
repz
push
push
or
insb
cmc
cmp
repz
dec
mov
push
lea
mov
xchg
das
rclb
mov
and
loopne
cs
pop
add
in
dec
popf
push
popf
pop
popf
pusha
popf
add
lea
popf
jo
addr16
inc
push
enter
pop
mov
mov
adc
daa
jo
add
jo
popf
in
in
das
mov
sarb
loop
pop
push
xchg
and
pop
repnz
cli
popf
add
or
adc
add
js
mov
sahf
addr16
jb
sahf
sahf
sahf
sahf
in
and
in
repz
pop
inc
mov
mov
outsb
xchg
or
daa
cmp
les
subb
jns
frstpm(287
or
and
add
sub
into
jne
xchg
inc
xor
mov
scas
pop
push
xchg
ficomps
test
pop
push
out
push
or
leave
leave
dec
nop
cwtl
mov
leave
mov
pop
leave
leave
inc
repnz
rcr
push
jmp
push
xchg
inc
mov
pop
cmovge
xchg
cmpsl
add
aas
mov
out
cmpsl
bound
push
add
sahf
jp
das
fdivrs
ja
mov
out
inc
enter
scas
mov
adc
add
push
ds
lret
push
mov
aas
dec
mov
push
mov
jbe
dec
sahf
or
addr16
adc
out
adc
leave
rcrl
into
cmp
movsb
dec
mov
dec
stc
or
add
push
or
xor
jns
mov
add
pushf
inc
dec
push
repz
pop
packuswb
outsl
add
ja
jg
add
testb
jb
mov
ja
xchg
pop
leave
inc
fs
push
push
mov
jnp
mov
and
jne
dec
pop
dec
ja
mov
orb
sub
addr16
leave
jae
jmp
xor
xchg
movsb
sbb
inc
cmovnp
add
lock
mov
outsb
push
daa
nop
movsb
cwtl
push
dec
fisubs
add
daa
int3
mov
outsl
aam
fsubl
aas
wrmsr
mov
into
movsl
movsl
movsl
and
xchg
movsl
push
add
add
mov
pslld
xchg
xchg
add
scas
pop
movsl
repnz
movsl
push
movsl
pushf
je
in
cmpb
pop
ud2
adc
sahf
ja
nop
cwtl
ds
mov
out
sbb
cmp
rcrb
enter
push
xchg
jge
inc
cmp
inc
jb
pop
push
aaa
and
fiaddl
push
cmpsl
dec
ja
pop
push
jmp
test
mov
popfw
out
xchg
xchg
push
ffreep
outsl
jp
xchg
and
and
outsb
cmpsb
movd
pop
sysret
call
andb
mov
jp
fsubl
test
fisubs
inc
repnz
cltd
push
add
jae
jns
test
daa
daa
pop
rcr
jecxz
lahf
fwait
sbb
stc
cmpsl
add
dec
femms
leave
addr16
push
outsb
sbb
fisubrs
pusha
jg
test
jp
shrl
subb
pop
pop
stos
test
test
pop
pmulhuw
push
add
lea
jb
test
test
test
sahf
xchg
out
pop
ficoml
loop
adc
out
jns
cli
push
add
or
adc
leave
and
clc
cli
inc
mov
jl
aaa
pushf
mov
and
pop
pop
daa
add
pushf
or
and
or
mov
add
repz
movsl
add
rep
dec
mov
or
iret
repz
or
or
dec
mov
lahf
sbb
push
lock
inc
add
inc
mov
stos
sbb
xchg
xchg
mov
pop
push
add
push
stos
pop
das
pop
enter
gs
or
insl
jne
in
and
pop
adc
idivl
jp
xlat
pop
roll
es
pushf
xchg
or
or
add
pushl
stos
inc
push
cs
dec
xchg
lock
popf
sbb
ja
add
and
mov
ret
xchg
in
in
stos
xor
rcrb
subb
pushf
mov
addr16
lods
nop
out
fsubrs
mov
call
xchg
inc
imul
sahf
out
push
sub
xor
lods
inc
dec
dec
outsl
daa
iret
dec
add
stc
mov
imul
lods
mov
xorps
daa
pop
loopne
psubw
add
mov
push
inc
mov
jo
les
xor
shrd
push
das
mov
sbb
loop
lret
lods
shrl
and
lods
jmp
repz
sti
push
sbb
icebp
or
add
loope
xor
daa
sahf
inc
add
scas
das
pop
jns
out
push
add
daa
daa
fucom
jae
add
xchg
pop
jnp,pn
xorl
rorb
xor
xor
scas
scas
jg
jae
and
scas
psubsb
lock
ffreep
or
scas
pop
vmread
out
or
or
bndstx
jne
xchg
dec
outsb
and
sub
scas
addr16
pop
and
add
mov
add
cmp
loopne
in
xor
call
mov
pushf
stos
cwtl
pop
inc
mov
mov
xchg
and
mov
mov
jbe
lahf
pop
push
cmpsl
push
push
or
leave
repz
or
or
mov
or
repnz
xor
dec
adc
lock
add
in
adc
and
push
dec
cmp
dec
dec
push
add
pop
pop
in
in
movd
repnz
in
shl
adc
sbb
pop
das
sbbb
rcrb
fmul
in
in
sbb
call
sahf
out
mov
cmp
inc
leave
repz
sahf
and
push
and
mov
je
mov
xchg
sub
push
xchg
dec
and
add
pop
and
mov
or
mov
das
sub
daa
cld
jb
jb
xchg
pop
outsl
xchg
and
jp
mov
mov
enter
or
pushf
pushf
pushf
dec
rcr
loop
ds
sahf
pushf
decb
mov
mov
mov
xchg
and
mov
mov
mov
jns
leave
jbe
push
push
xchg
sahf
out
sahf
mov
xchg
or
add
mov
iret
xchg
and
sarb
mov
jo
jmp
pop
icebp
sub
pushf
stc
add
add
pop
inc
mov
adc
vmwrite
stc
jle
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jp
jns
mov
mov
mov
mov
mov
mov
mov
push
sbb
cmp
repz
ljmp
sbb
mov
out
sahf
testl
and
sahf
out
sahf
and
and
and
dec
es
daa
pop
out
sahf
out
or
jae
je
jp
sub
mov
dec
xchg
mov
mov
mov
out
movsl
pop
pop
rolb
fmuls
cld
je
das
loopne
call
les
outsl
or
mov
pusha
jb
sgdtl
and
iret
inc
mov
es
xchg
into
mov
mov
cmp
mov
pushf
cmp
pushf
pushf
pushf
xchg
popf
movsl
movntq
mov
dec
adc
cmp
xchg
aad
repz
outsb
add
sti
aas
add
ja
aas
pop
cs
sbb
insl
js
orb
and
in
mov
mov
jb
cmp
maskmovq
pop
mov
aas
and
dec
jns
sahf
out
xor
xor
in
in
lahf
xcrypt-ctr
cmpsl
push
xor
cmp
iret
int3
icebp
in
push
cmp
fistpll
inc
repnz
sbb
xor
add
xchg
test
out
jb
mov
andb
jne
mov
add
xchg
loopne
mov
cmp
ja
mov
mov
mov
cmp
daa
iret
add
daa
iret
repz
ret
fcomp
in
dec
jecxz
out
ud2
fs
cmp
or
mov
in
sbb
sub
xor
cmp
leave
repz
adc
iret
leave
repz
push
jne
sbb
repz
cmp
mov
xchg
sbb
repz
cmp
lods
sbb
iret
ret
fsubs
mov
iret
leave
jecxz
add
lock
movswl
mov
inc
repnz
pusha
push
add
rolb
sub
movsb
add
sbb
fsubp
mov
sahf
out
das
enter
jns
out
fsub
or
or
lock
clc
mov
and
loopne
out
or
adc
sbb
leave
rep
aas
and
adc
xor
adc
dec
aaa
jns
lar
into
sbb
push
push
dec
in
mov
int3
dec
inc
sbb
mov
aam
pop
rcl
dec
sahf
ja
jae
add
inc
jle
divps
inc
js
fwait
aas
mov
xchg
mov
xlat
into
in
jbe
mov
out
out
bsf
fcomi
cmpsl
push
in
sarl
or
shrl
and
cmp
cmp
lahf
dec
outsb
xchg
mov
je
and
dec
jl
test
cmpsl
scas
rcl
mov
iret
push
xlat
daa
pop
leave
jae
sar
add
dec
dec
add
or
xor
out
outsb
adc
xchg
mov
add
push
jo
js
xchg
stos
xchg
clc
mov
leave
leave
fsubp
out
pop
testb
arpl
scas
ret
xchg
pushf
mov
ret
jg
xlat
jns
in
cmp
cmovns
add
daa
iret
cmp
add
push
movsb
jb
jb
test
pushf
xchg
mov
bswap
xlat
ret
pop
mov
ret
cmp
cmpsl
sahf
pop
fs
les
sbb
xchg
out
jns
sub
sarb
incl
fsubr
in
push
jg
fildll
paddusw
fstpt
test
fists
ja
fbld
mov
jb
dec
push
clc
fdiv
loopne
fucomi
jbe
pop
lock
xchg
add
dec
and
lds
lds
cltd
in
xchg
lds
lds
in
in
pop
movd
jbe
cmpsl
xchg
or
jae
cltd
dec
test
add
cmpsl
fdivrl
add
mov
pop
pop
pop
add
das
add
inc
pop
add
jo
les
fildl
and
adc
mov
out
cltd
shufps
cs
sbb
mov
inc
out
fmulp
dec
push
push
add
in
jo
insb
push
xsaves
das
jg
add
cwtl
mov
das
scas
mov
repnz
fisubrs
ficompl
outsl
lock
repnz
movl
enter
repnz
enter
enter
repnz
enter
enter
in
repnz
mov
xchg
pop
nopl
aas
sbb
pushf
pushf
pushf
pushf
sbb
push
adc
adc
mov
repz
mov
ror
repnz
push
xor
jl
xchg
inc
popa
fbstp
sarb
xchg
popf
psrad
cmp
jnp
repz
clc
cmp
add
iret
repz
push
cmp
cmp
repz
inc
cmp
idivl
repz
push
inc
pop
inc
fmulp
cmp
inc
jno
push
inc
mov
repnz
mov
leave
repz
fucomip
bswap
sarl
dec
add
push
or
leave
repz
push
and
sahf
xchg
xchg
xchg
aaa
inc
dec
pop
pop
daa
dec
aaa
jns
cvtps2pd
outsl
daa
daa
daa
test
xchg
insb
jle
pop
popa
lock
inc
into
xor
pop
call
lods
jne
xchg
lret
mulb
daa
iret
fwait
aas
adc
push
sbb
or
sub
sets
fldl
pushf
pop
mov
aas
mov
push
xadd
adc
repnz
adc
push
pop
repz
aam
pop
lret
ds
leave
repz
jo
js
or
jns
mov
sbb
jae
inc
cmp
out
fmul
and
int3
mov
push
mov
int3
pop
inc
int3
jg
int3
pop
xor
cmovs
outsl
sub
inc
loopne
push
daa
daa
inc
add
aam
nop
cwtl
cmp
daa
daa
mov
daa
dec
mov
mov
enter
daa
add
or
outsb
or
ja
fsub
push
or
and
int3
adc
xor
scas
cmp
inc
int
int
xor
int
pop
int
pop
push
adc
shl
mov
fdivrl
mov
pushf
mov
int
xchg
or
xchg
loop
jg
pop
outsl
mov
hlt
lcall
pushl
fidivs
jg
and
fildll
into
xchg
out
pop
ss
push
or
daa
mov
pop
bound
sbb
cmp
mov
cltd
psllq
movsb
scas
cs
fmulp
sbb
sbb
sbb
sbb
sbb
pushf
je
sbb
pop
iret
adc
mov
sub
and
fsubrp
in
cmovns
push
daa
data16
jns
jne
or
sub
loop
enter
jns
out
add
add
add
call
add
jmp
add
lahf
das
pop
dec
push
rolb
sahf
out
and
add
addl
pop
cltd
add
dec
aaa
syscall
or
mov
rol
ror
shrl
rcrb
movups
adc
iret
repz
adc
adc
cld
mov
enter
rcll
nopl
sub
repz
xor
sbb
cs
push
pop
out
mov
push
ja
mov
and
xchg
push
xchg
cmp
sahf
mov
add
push
mov
push
ret
push
and
sub
rcl
jb
loope
pop
cmc
and
sub
jns
jl
in
xchg
push
inc
cmp
shl
mov
xor
add
outsl
daa
iret
add
push
minps
dec
mov
push
out
sahf
ja
push
or
inc
push
out
andb
je
sahf
add
neg
adc
rcrl
pop
rorl
je
enter
sarl
pop
sysret
cmp
xchg
inc
ror
dec
rcll
and
js
pop
lahf
ror
jno
jl
in
xchg
roll
rorl
push
aaa
test
iret
sbb
inc
inc
mov
aam
lock
aam
aam
sbb
mov
fiadds
das
sub
jg
pushf
dec
ds
out
or
dec
inc
mov
jbe
aam
popf
fdivl
fucomip
xchg
mov
mov
xlat
test
aam
in
or
jns
cli
add
cmp
jns
adc
sbb
jns
out
xor
cmp
inc
outsb
daa
iret
cmp
sbb
aas
jbe
sahf
out
sbb
sbb
out
xchg
movsl
and
out
and
aam
fbld
iret
repz
and
and
repz
push
sub
sub
sbb
and
cmp
das
cmp
subb
call
sbb
das
sahf
aaa
jb
pushf
cmpsl
mov
push
mov
pop
enter
sahf
cmp
repz
or
or
call
outsb
mov
sub
or
pop
adc
out
dec
dec
ss
adc
jns
adc
adc
in
dec
insl
xlat
xlat
subl
rep
mov
dec
lds
cltd
push
sbb
iret
movsb
pop
scas
and
mov
fistpl
and
daa
iret
repz
icebp
es
pop
sahf
addr16
fsubrs
adc
pop
sbb
repz
xor
sub
sub
popf
push
push
das
pop
jne
xor
in
jbe
orb
popf
cmp
mov
ret
dec
ds
out
cmp
jmp
repz
sbb
adc
dec
add
ds
sbb
sbb
les
std
add
fstl
add
aas
inc
push
cmp
inc
push
mov
sub
inc
mov
jbe
inc
add
in
pop
pop
aaa
cmp
push
add
cmp
in
add
add
add
iret
push
or
or
fstl
aaa
or
outsb
imul
adc
push
adc
in
movsb
fwait
das
and
fcmovne
inc
push
addr16
das
push
xorps
mov
insb
das
insl
push
and
sbb
push
pop
cmpb
orl
in
jns
pop
xchg
sub
in
movsb
fbld
pop
shl
in
sbb
data16
jbe
shrb
jmp
mov
push
dec
dec
jns
out
inc
inc
cmp
sub
jl
out
adc
cld
call
iret
hlt
lock
call
repz
fcom
ror
cmp
out
les
iret
repz
cwtl
nop
test
cmp
repz
pop
push
cmp
stc
es
or
scas
pusha
adc
mov
sbb
adc
adc
mov
and
bound
xchg
add
std
sub
add
push
aad
adc
sub
add
dec
mov
lods
pusha
cmpb
cmpsb
fisttps
mov
and
jle
test
shll
mov
decb
inc
add
mov
iret
mov
in
sbb
in
call
adc
jle
mov
fidivrl
xor
fcomp
loopne
lahf
inc
sbb
jb
jle
div
inc
inc
test
aas
and
push
and
pop
jne
stos
pusha
add
sbb
inc
hlt
addl
cli
inc
lods
lds
pop
pmovmskb
add
mov
into
subb
aam
aas
addr16
das
add
inc
lock
ficompl
aam
push
or
sahf
adc
in
adc
nop
adc
imul
sbb
in
sbb
jns
out
sbb
push
dec
das
and
lea
outsb
call
stc
sahf
jnp
inc
sbb
js
push
jns
hlt
ljmp
cmp
jecxz
pop
mov
pop
mov
call
rcrb
inc
pop
ljmp
dec
add
int
push
dec
inc
cwtl
push
jae
adcb
xchg
jo
icebp
addr16
push
push
pop
sahf
es
inc
jg
inc
movb
aas
pop
mov
xor
pop
xlat
jge
movsb
inc
pop
inc
neg
fsubrs
insl
stos
pop
jg
out
push
ljmp
inc
sub
add
movl
add
xchg
es
push
icebp
or
push
sbb
mov
and
add
adc
and
repz
or
ds
or
jnp
out
jge
add
ss
push
pop
adc
lock
jns
jnp
push
or
or
or
pop
lock
cmp
sbb
add
call
sahf
out
sbb
push
rclb
out
sahf
out
and
and
sahf
out
sahf
and
and
mov
ret
es
mov
adc
push
dec
lea
xor
inc
push
pop
cmpsb
cld
xorb
inc
cmp
sbbl
outsl
and
jg
cmp
out
push
pop
js
mov
sti
cmp
out
adc
xor
add
sahf
out
cmp
pop
ja
mov
cmp
jae
das
push
dec
jmp
pusha
popf
insb
inc
add
jnp
das
mov
add
cli
or
or
ret
nop
cmpl
adcb
sbb
pop
stc
and
leave
sbb
into
sbb
rorl
and
sahf
mov
pushl
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
jg
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
cmp
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
decl
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
std
addr16
and
add
sti
aas
jno
or
mov
fisttps
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
lcall
cmp
push
mov
xchg
aas
out
or
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
icebp
incl
gs
std
orl
pop
ficomps
frstor
or
push
pop
pop
push
jns
mov
inc
inc
push
dec
ljmp
pushf
pushf
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
call
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
lcall
mov
repnz
repz
test
ficompl
jmp
mov
hlt
incl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
decl
outsb
cmp
imul
addr16
add
aam
dec
std
test
pushl
mov
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
or
fcompl
shrl
push
ficoms
push
xlat
enter
mov
and
inc
mov
cltd
xchg
mov
mov
or
or
and
or
adc
decl
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
lods
pushl
mov
call
xor
mov
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
ljmp
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
pushl
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
lods
jmp
sbb
je
mov
aam
movsl
fisttps
fadd
call
movsb
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
decl
stos
leave
jl
fnstsw
add
daa
adc
or
and
test
or
jmp
lahf
in
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
incl
or
xchg
shlb
add
inc
push
imul
xorb
ljmp
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
fcomip
pushl
pusha
call
xchg
shll
push
repnz
addr16
call
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
fbld
out
mov
jns
imul
andl
shrb
rclb
call
inc
or
das
es
lds
or
mov
push
pop
cmpsl
call
ret
shlb
scas
ficomps
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
orb
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
call
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
jg
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jmp
js
or
push
addl
mov
cmp
cmpsl
notl
call
pusha
rorb
imul
scas
fcompl
fldenv
or
loop
filds
aaa
pusha
mov
inc
sahf
mov
inc
jmp
mov
mov
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
sahf
out
pop
pusha
xor
xor
push
dec
inc
loope
push
aam
dec
add
jns
out
inc
push
xlat
fcomp
jns
out
fsubp
jns
dec
sahf
jecxz
in
jmp
ljmp
jns
hlt
cmc
div
clc
stc
rorl
cld
daa
adc
or
lods
inc
psadbw
inc
cmpsl
lods
add
lahf
iret
add
mov
leave
les
dec
bound
jbe
inc
popl
inc
insl
bound
lds
je
mov
push
cltd
inc
inc
in
cltd
test
aas
and
inc
dec
in
cmpsl
pop
xchg
or
and
aas
pop
inc
cmp
mov
lcall
xor
aaa
cmp
popa
arpl
cmp
arpl
or
test
xor
xor
xor
sub
inc
jbe
pop
insb
imul
data16
gs
add
in
xor
inc
cmpsb
add
or
leave
aam
adc
sbb
sub
popa
or
or
or
je
enter
scas
ss
jbe
sbb
sub
inc
aas
add
add
sbb
jle
gs
stos
or
mov
adc
push
nop
bound
arpl
addl
jp
xchg
test
add
pop
xorl
popa
xchg
cmp
sub
aaa
je
aaa
push
cmpsb
push
fidivrs
inc
push
add
or
add
sbbb
mov
jp
daa
int
xchg
xchg
push
inc
jbe
movsb
xchg
pop
inc
inc
push
mov
sbb
inc
pop
idiv
js
je,pn
jo
inc
inc
add
mov
popa
mov
lret
mov
iret
int
push
dec
cmp
mov
andb
sbb
mov
pop
mov
outsb
jne
xor
mov
push
pop
xor
xor
insl
fwait
cmp
add
int
mov
xchg
into
pop
jo
xchg
adc
pusha
in
insb
inc
cmp
pop
subl
lret
dec
lods
push
adc
outsl
add
lods
dec
pop
mov
mov
lcall
cmp
sbb
pop
movsb
sub
push
xlat
mov
arpl
add
mov
inc
jb
andb
dec
popa
jo
sbb
add
mov
outsl
test
inc
sub
jno
xor
stos
loop
in
jb
pusha
rcrb
in
nop
pusha
lds
inc
push
cmpb
arpl
or
mov
popa
add
out
mov
je
addr16
xchg
shlb
gs
jb
push
jae
inc
stos
data16
inc
outsl
arpl
insl
dec
popa
mov
sarl
xlat
inc
push
bound
ja
inc
jbe
cmpsb
outsl
pop
adc
addr16
mov
push
dec
xor
bound
xor
adc
inc
add
add
add
insl
adc
outsb
jg
clc
sub
lods
inc
add
outsl
pop
inc
dec
xchg
mov
dec
dec
dec
mov
adc
addr16
sbb
sbb
inc
stos
mov
push
push
sbb
flds
inc
dec
pop
bound
inc
hlt
popa
jmp
arpl
je
testb
pusha
in
insl
or
xchg
sub
push
pop
inc
sub
fldt
adc
nop
xlat
testl
sub
adc
enter
adcb
jb
add
das
nop
je
adc
dec
sbb
jmp
add
popa
call
sub
add
add
add
or
pop
pop
lock
incl
or
or
or
or
or
adc
adc
push
adc
imul
push
push
add
pop
sbb
adc
adc
adc
pop
mov
data16
or
adc
mov
push
add
filds
add
and
add
sahf
add
aam
loopne
add
aaa
add
inc
mov
jb
out
sbb
ds
call
and
inc
push
adc
pop
and
xor
inc
mov
adc
xor
addb
addb
mov
fsubs
pop
add
mov
add
nop
adcb
or
adc
daa
dec
inc
or
jecxz
adcb
decl
or
into
adc
pushf
into
add
adc
decb
lods
jnp
ja
adc
push
adc
pop
popa
jno
and
fwait
outsl
or
xchg
mov
lock
sbb
loope
icebp
mov
mov
add
or
push
xor
js
pop
and
pusha
cli
sub
rcr
push
ret
decl
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
cmp
out
pop
les
fsts
dec
or
xchg
jecxz
pushf
ret
ja
fisttps
out
cmp
xor
and
jmp
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
scas
or
xchg
pusha
add
std
or
mov
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
cmpsb
mov
dec
mov
movsl
jecxz
fistpll
sub
pop
mov
stc
or
jns
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
decl
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
cli
lcall
outsb
push
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
inc
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
fistpll
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
in
outsl
dec
sub
lods
leave
mov
jp
push
out
or
push
sahf
mov
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
sbbl
jmp
sbb
cld
add
mov
mov
out
pop
jb
mov
mov
mov
lcall
int
inc
fwait
sbbb
mov
dec
jp
push
gs
cmpl
sub
negb
pop
stc
loope
mov
sar
andl
aas
icebp
idiv
aas
stos
push
insb
imul
scas
fdivr
incl
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jne
subl
jb
adc
push
lock
lods
jp
testb
call
gs
sbb
into
fcomps
sbb
sbbl
into
andl
aas
outsb
jmp
pop
cli
adc
aaa
xchg
in
add
inc
adc
loope
fstp
cmp
leave
or
icebp
aas
std
cli
push
push
push
idivl
fists
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
call
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
icebp
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
jl
cmp
cmp
js
jmp
xchg
pop
mov
cmpsb
in
clc
pop
hlt
sub
movsb
add
lea
mov
leave
gs
std
xorb
jg
aad
adc
ret
decl
lock
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
lcall
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
mov
jb
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
mov
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
inc
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
clc
add
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fildll
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
inc
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
mov
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
jg
dec
std
xchg
and
jae
shrb
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
jl
adc
pop
cld
addl
adc
and
data16
cmp
fmull
enter
jecxz
scas
sub
icebp
jmp
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
idivb
fadds
jg
mov
aad
test
mov
incb
xchg
movsb
mov
iret
push
aas
js
pushl
push
sbb
stos
icebp
pop
incb
jno
adc
push
jg
inc
jecxz
sbb
sarl
adc
loopne
sar
push
mov
fcmovnbe
stos
jge
push
cmp
dec
lock
adc
aas
mov
fsubrl
add
lock
and
mov
xchg
pushf
mov
repnz
and
bound
mov
xchg
lahf
or
push
rcrl
sti
or
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
fwait
call
nop
mov
inc
sti
arpl
daa
std
or
sbb
mov
xchg
jg
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
ljmp
cld
lds
fidivrl
jg
stos
pop
repz
jg
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
aas
mov
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
std
cmpsl
cmp
aas
test
bound
pop
outsl
xchg
inc
test
in
jge
decl
lock
lcall
fsubs
shl
dec
cs
mov
aad
loop
lahf
mov
or
out
lcall
push
add
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
call
call
sarb
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
ds
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
pushl
mov
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
clc
in
adc
aas
repz
outsl
lock
in
and
jle
jmp
stc
out
mov
clc
push
std
mov
mov
test
out
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
fucomp
outsl
sub
hlt
out
rolb
pop
or
or
fistpl
mov
lods
movsb
or
bnd
aas
fiaddl
pushf
imul
jl
outsl
das
or
jno
lret
pop
in
jg
aad
cmp
jmp
mov
pop
lock
popf
jmp
hlt
dec
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
std
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
cld
stos
jle
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
mov
stc
lahf
loope
jae
jmp
add
mov
sar
mov
add
out
icebp
mov
loope
mov
fdiv
mov
sti
mov
fbstp
jb
adc
das
cmpsb
pop
mov
jge
out
xorb
int
call
xor
decb
mov
mov
mov
and
call
imul
add
cmp
mov
cmp
int
add
push
pop
aaa
std
ffreep
cmp
dec
inc
sbb
jnp
jg
xchg
fimull
ret
rorb
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
or
cmp
or
jp
dec
add
scas
and
push
shll
xchg
fldenv
iret
fdivrl
xchg
lcall
inc
push
rolb
mov
pop
cmpsl
xchg
addb
into
sarl
push
icebp
fildll
out
jg
jno
ret
cmp
arpl
out
call
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
scas
loop
in
sbb
xchg
imul
jmp
outsl
jmp
std
loopne
add
mov
daa
jmp
faddl
mov
push
adc
outsl
dec
push
pop
add
pop
stc
push
dec
out
fstpt
mov
enter
cmpsl
mov
out
decl
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
xor
int3
fildll
fsubrl
dec
add
xchg
cmp
or
add
stos
inc
aas
sti
push
sti
pop
inc
dec
push
mov
and
cmp
int3
ljmp
iret
and
add
lods
and
xchg
or
lcall
lahf
adc
mov
ljmp
mov
mov
push
jnp
scas
push
out
mov
or
mov
push
cmp
inc
cmpb
jmp
ja
lahf
mov
scas
cmp
ljmp
sub
int
aaa
mov
ret
loope
decl
pushf
lods
std
and
int
cmp
or
push
cmp
jle
or
xor
lcall
sub
jecxz
pop
inc
pop
sbbb
dec
lods
mov
jg
mov
pop
sub
bound
mov
dec
repnz
lahf
cmp
dec
cli
ljmp
js
mov
cmp
jns
aam
aaa
in
js
sub
push
jmp
xorl
mov
test
into
sti
or
lock
jecxz
outsb
mov
loop
test
das
lods
imul
inc
add
roll
cs
sbb
fcmovne
lret
cmpsl
lock
call
push
rolb
loop
in
push
mov
and
xor
cmp
or
int3
or
jns
incl
loop
cmp
jp
hlt
fidivs
inc
jnp
xor
add
decl
and
int3
or
jle
scas
fisttpll
xor
jne,pn
movsb
insb
out
ljmp
push
scas
pusha
js
pop
sbb
and
pop
push
outsl
cmp
add
mov
lcall
imul
sbb
ret
mov
repz
pop
test
clc
pushl
inc
jnp
bound
add
lret
stos
mov
insb
jne
pushl
xor
jl
cmp
sub
add
pusha
inc
push
pop
cmp
jno
pop
fistl
clc
incl
in
movsb
aam
dec
push
out
jne
filds
call
fnstsw
cmpsl
jp
and
iret
arpl
sub
fildl
insl
test
jecxz
xchg
and
call
pop
insl
mov
cld
outsl
sub
mov
pop
sub
stos
adc
sub
bound
std
out
call
pop
xlat
lods
mov
push
adc
enter
lcall
xor
call
adc
xor
push
dec
call
stos
pop
push
outsl
or
incl
inc
ret
pop
test
sub
stos
xchg
stos
and
test
int
mov
loopne
cmp
push
dec
stos
xchg
pop
sub
daa
jo
popa
sbb
sub
das
sti
fcoml
lcall
xchg
decl
out
ret
into
cli
cmp
mov
mov
clc
push
stos
mov
ljmp
fimuls
dec
getsec
jge
fwait
test
dec
xor
pop
jecxz
out
jmp
push
popf
pop
insb
out
out
daa
stc
and
sbb
mov
lock
icebp
ljmp
lret
mov
das
jb
or
cld
lods
push
ds
ret
movsb
xchg
es
dec
mov
fisttps
cmp
rcll
inc
fisubl
ss
ja
sbb
fwait
or
lret
jl
push
push
mov
incl
int3
jg
cmc
aas
xchg
add
gs
or
push
pusha
mov
rcr
sub
inc
mov
jae
sub
inc
inc
jo
mov
test
fistps
imul
incl
or
fdivrp
pop
repz
fcmove
stos
stc
pop
and
cmp
cltd
movsl
pusha
cmpsb
aam
mov
inc
mov
push
out
add
bound
enter
dec
sbb
cltd
push
call
sub
sbb
cmc
scas
je
loopne
fsubl
sbb
push
orb
add
ljmp
icebp
dec
leave
push
loop
mov
inc
or
pusha
jae
iret
mov
pushf
pop
mov
test
mov
cld
movsb
push
clc
gs
data16
xor
cmp
sbb
dec
xchg
push
adc
cltd
jmp
jg
xchg
rorb
in
insl
lret
fucomip
mov
les
rcrl
cmpsl
ret
push
and
arpl
mov
inc
cmp
mov
mov
sub
push
fwait
push
adc
mov
pop
cwtl
movsb
outsl
cmc
fiaddl
idivb
mov
inc
push
dec
jae
lret
incl
pushl
adc
rorb
stos
sub
cmpsb
scas
pop
sti
sbb
sbb
lea
push
test
or
mov
dec
add
cld
test
sbb
rcrb
sbb
daa
adc
cmp
jb
dec
aam
out
xor
es
mov
and
ret
int3
sbb
lcall
add
xor
cmpl
mov
cmp
mov
jecxz
rclb
loop
xchg
subb
jl
fdivrl
adc
mov
push
push
pop
xor
mov
push
mov
jmp
xchg
pop
ljmp
lret
mov
jmp
add
notl
sub
popa
dec
jmp
mov
iret
or
dec
pop
sub
scas
push
fistps
pop
aad
sub
sub
shlb
ds
lret
fisubrl
pop
sar
pushl
jp
and
dec
call
inc
aad
out
xchg
xorl
push
lea
shll
lcall
ss
inc
sub
jns
push
mov
dec
movsl
push
push
lods
je
xor
jo
pop
jg
or
hlt
repnz
and
cmp
mov
incl
mov
les
jl
aam
call
pop
cmpsl
cltd
add
push
aam
jmp
dec
sbb
lea
je
loopne
jb
cmp
cmpsb
mov
insb
outsl
decl
packssdw
cmova
inc
imul
enter
repnz
sarl
leave
sbb
in
jecxz
mov
std
test
mov
aas
xchg
popa
add
dec
pushf
shlb
pop
sbb
xlat
repnz
bound
test
xor
stos
push
jmp
into
xlat
cmpsb
out
push
sub
idiv
jge
repz
add
pop
ret
push
sbb
fimull
cmpsb
out
mov
lcall
and
jp
sbb
aam
insl
sub
jnp
sbb
call
fdivrl
jge
xchg
test
fisubl
cmc
add
pop
adc
lcall
jmp
test
adc
jne
inc
xchg
push
add
lods
dec
cli
ljmp
fidivs
inc
jb
std
mov
mov
pop
in
ds
js
movsb
cmp
ljmp
add
jo
insb
mov
xlat
mov
xor
imul
fcoms
decl
mulb
push
mov
mov
mov
push
loope
mov
decl
andb
jb
inc
into
or
xchg
and
ljmp
adc
shl
loopne
movsl
mov
lahf
mov
ffree
test
inc
rcr
pop
dec
pushl
lock
imul
clc
mov
test
pop
data16
movsl
shrl
lods
mov
pushf
mov
int3
push
jg
sub
les
repz
loop
inc
xor
mov
mov
mov
fucomip
aas
inc
repz
pop
mov
adc
inc
fcmovnbe
daa
imul
ljmp
sub
cmc
inc
xchg
lcall
rcrb
lods
loop
jne
push
cwtl
or
ljmp
shll
push
sti
jo
pop
mov
fwait
sbb
xchg
mov
sub
mov
jbe
and
incl
cmp
adc
mov
jno
lcall
xlat
addr16
in
mov
orb
ljmp
push
mov
push
cld
add
outsl
fdivrs
insb
xchg
repnz
sbb
jmp
mov
imul
mov
mov
inc
out
jns
repz
mov
mov
cmp
das
daa
fcompl
push
dec
outsl
push
dec
aas
jmp
rcrl
loope
xchg
dec
mov
pop
mov
jmp
cltd
clc
xorl
addb
dec
je
xchg
xchg
jo
jmp
std
adc
xchg
pop
mov
cmp
lock
cli
mov
les
inc
inc
dec
outsl
sahf
fildll
scas
xlat
aas
cmp
jmp
lret
stos
sti
pop
mov
jbe
pop
jmp
jne
cltd
mov
xor
xlat
push
mov
xchg
sub
std
mov
mov
dec
inc
movsl
decb
mov
outsb
mov
jge
xchg
sbb
push
in
xor
sbb
ds
lret
xchg
cmp
and
hlt
jns
lret
push
or
dec
into
lods
les
int
inc
lret
je
push
out
fisttpll
test
clc
fnstsw
repz
lock
cld
jbe
imul
adc
push
mov
hlt
mov
sbb
imul
adc
lds
lcall
adc
jns
pop
pop
rcr
imul
xchg
mov
ljmp
jg
sti
mov
add
sbb
pop
jle
ljmp
jge
incl
pop
sub
mov
fwait
jle
pushf
mov
push
leave
pop
sub
jo
hlt
jno
out
das
ljmp
lcall
faddl
repz
pusha
sbb
or
fstp
or
mov
cmp
daa
push
xlat
pushl
mov
ficoml
fs
scas
mov
dec
mov
jg
call
mov
inc
es
dec
mov
push
pop
or
ljmp
pusha
rcrb
sbb
test
xor
cli
push
lcall
add
fwait
cltd
icebp
jg
das
push
sbb
add
test
xchg
or
int
xor
adc
fnstenv
incl
cld
mov
movsb
dec
inc
dec
pop
push
inc
jmp
push
mov
mov
inc
clc
jmp
dec
mov
lahf
add
shl
mov
jae
lret
iret
add
aas
mov
mov
adc
aaa
call
gs
adc
rolb
cmp
add
insl
dec
jne
and
clc
seto
ljmp
hlt
xchg
add
cs
rcrl
sti
sahf
xor
add
pop
dec
push
sub
fs
add
jg
cmp
mov
xchg
gs
cli
dec
imul
mov
out
in
lock
push
testl
dec
jecxz
sub
rolb
pop
ja
in
out
inc
clc
jns
insb
mov
mov
xlat
data16
dec
dec
lods
mov
push
imul
lea
imul
and
scas
clc
pushl
mov
jmp
mov
add
xor
mov
jmp
loope
and
add
addr16
ss
sub
sub
pxor
jmp
repnz
jle
leave
pop
sbb
push
inc
mov
test
shll
fists
lcall
pop
sahf
mov
push
ret
jbe
push
push
jo
and
mov
inc
inc
ficomps
cbtw
dec
and
insl
hlt
xor
int3
xchg
inc
jne
push
xor
inc
sub
xchg
mov
push
xor
mov
mov
mov
mov
incb
lods
and
ljmp
outsl
sub
sub
in
mov
out
and
stos
xchg
scas
enter
sub
pushl
cmp
jmp
in
jns
imul
push
adc
dec
int
je
xorl
mov
dec
push
or
mov
pushl
or
mov
and
daa
cltd
lock
pushf
fwait
inc
and
inc
adcl
and
dec
jmp
xor
adc
in
das
jae
pop
scas
xchg
out
gs
repnz
pop
call
adc
jmp
jl
mov
add
mov
mov
and
das
jg
dec
or
inc
xchg
xor
pop
sahf
inc
inc
mov
fs
xlat
jb
and
pushl
test
or
ds
repnz
mov
fsubrl
jnp
push
ljmp
push
stos
adc
mov
movsl
stos
add
jmp
mov
es
sahf
add
xor
movsl
cli
mov
or
ljmp
mov
loop
sub
jb
dec
ret
inc
fwait
hlt
movsl
jg
adc
outsb
stos
fisubl
jle
icebp
or
xor
mov
out
jae
jno
xchg
clc
add
push
push
add
and
jns
bnd
lods
ds
fimull
scas
jmp
dec
pop
and
outsb
inc
inc
test
loopne
imul
mov
lods
jb
xchg
loopne
jmp
fisttpl
push
jmp
and
lds
cli
xor
mov
jns
cmp
in
loopne
xor
enter
jbe
push
mov
mov
imul
dec
lock
pushl
jbe
sub
inc
es
jne
jbe
icebp
and
xchg
mov
pushf
fisttps
jno
jo
xor
push
sti
mov
andb
out
into
nop
inc
add
lcall
xchg
fstps
loope
cmc
cmp
mov
mov
xor
ds
add
jmp
cmp
xor
xor
mov
aad
movsb
cltd
pop
pop
xchg
scas
mov
add
bswap
lock
push
insb
push
xor
inc
lret
je
jle
shr
push
adc
jmp
ret
cmpsb
call
aas
in
into
pop
pop
adc
adc
push
mov
into
sbb
out
decl
cwtl
cmpsb
nopl
fimuls
pop
test
inc
call
pop
xor
pop
jp
jg
jg
inc
lock
sub
lret
ss
fisubrl
mov
incl
movsb
loop
adc
icebp
aad
pop
mov
or
ljmp
idivl
add
rcll
mov
and
mov
jmp
mov
out
sbb
add
lcall
mov
lock
push
incl
xchg
xor
pop
push
out
mov
call
jo
xorps
clc
ljmp
cli
lcall
sub
push
sar
xchg
adc
enter
push
outsl
shll
decl
rcrl
lock
popf
push
sub
sahf
push
jg
or
sti
enter
decb
jl
push
insb
jecxz
test
mov
push
fsubp
xor
repz
rclb
jg
out
push
lahf
ljmp
jp
mov
movsl
pushf
or
push
mov
test
adc
clc
cmc
clc
cld
push
loope
sub
mov
pop
inc
xchg
js
push
and
inc
es
jg
jno
test
push
inc
mov
aad
repz
or
adc
mov
cmp
dec
mov
mov
sbb
push
push
push
mov
mov
or
mov
cli
mov
mov
clc
outsl
mov
decb
shrb
dec
adc
mov
mov
js
test
jp
fst
sub
pop
sbb
push
stc
mov
mov
sub
inc
push
daa
or
stos
nop
push
sar
call
loopne
pop
scas
in
stos
fdivr
stos
loopne
mov
or
aas
dec
mov
hlt
jg
cmp
jl
pop
mov
popf
pop
mov
sbb
fadds
jg
inc
cld
mov
jecxz
adcb
pop
pop
xorb
ja
mov
shlb
mov
and
sub
ret
call
fstl
push
adc
rep
mov
sbb
or
lcall
pushl
mov
sbb
mov
cmpsb
js
sbb
in
xor
fstpl
decl
ret
divb
cmp
mov
movsb
js
dec
sbb
jmp
push
je
test
mov
scas
sub
ja
or
js
mov
ljmp
push
incl
mov
or
lock
rcr
sbb
and
mov
loopne
cmp
cld
adc
add
fwait
lods
fdivrs
pop
xchg
jb
lcall
cmpsb
pop
ret
mov
push
add
cmp
jo
lods
dec
shlb
outsl
lcall
push
stos
and
aaa
mov
adc
mov
sub
mov
cld
decl
stc
js
icebp
pop
aas
lods
out
test
test
lret
mov
inc
xchg
add
adc
aam
call
rorb
mov
incb
ds
xchg
jge
sub
call
scas
fldl
jmp
xor
mov
jp
sbb
sbb
js
add
lcall
mov
jmp
int3
iret
lods
sbb
xor
shll
push
cmpsb
mov
or
pushl
dec
adc
jle
popf
stos
aam
stc
data16
mov
nop
sahf
push
and
movl
and
sub
push
cmp
xlat
xchg
stc
sahf
add
mov
stos
dec
adcb
xchg
sub
fdivr
ljmp
fistpl
out
jg
mov
or
sbb
jnp
lret
jl
loope
std
push
mov
pop
pushl
xchg
add
mov
mov
sar
fildll
call
out
popf
test
xor
dec
data16
cmp
sbbl
mov
cmp
das
bound
call
loope
sub
fcomip
nop
in
xchg
or
sahf
mov
es
loope
mov
inc
movsb
int
xchg
sti
jmp
jl
cmp
mov
xchg
push
fwait
ret
bsf
pop
and
jg
xchg
lds
pop
imul
stc
in
inc
js
lock
cmp
repnz
bound
idivb
cli
loope
push
inc
stos
stos
daa
push
mov
and
jmp
out
push
test
mov
inc
dec
out
adc
xor
jns
test
faddl
cmpsb
pushl
push
bound
or
cs
mov
pop
divb
stos
jbe
outsb
push
sar
dec
sti
sarl
mov
cmc
mov
jecxz
daa
clc
jmp
fdivs
mov
mov
mov
or
pop
sub
jne
imul
das
mov
inc
mov
jnp
adc
jge
mov
jge
adc
es
jp
xor
mov
xchg
cmc
push
incb
sub
nop
rorb
pop
pop
call
sub
mov
in
inc
test
or
jmp
cmp
sti
xor
popa
xchg
jne
nop
not
dec
push
and
dec
xchg
xchg
bnd
incl
int3
cmp
push
mov
popf
mov
mov
cmp
lret
aam
xchg
dec
mov
jg
decl
cmc
cld
fldt
cmp
push
mov
in
stos
push
inc
jne
or
ljmp
jns
sbb
adc
stos
xchg
xchg
in
and
or
cmp
insb
mov
incl
jnp
lret
sub
jl
push
jl
or
push
shlb
xor
jmp
add
cmp
sti
push
fstps
push
and
cwtl
mov
mov
push
xchg
cli
test
decl
int
or
call
xor
loope
aas
sahf
cmp
sub
xchg
bound
pushl
aas
test
jle
mov
fstpt
test
lock
xor
jmp
lods
stos
sarb
aas
push
mov
gs
jne
xchg
ljmp
jbe
mov
test
xor
inc
test
xchg
sub
je
scas
shrb
pushl
xchg
int3
in
push
je
dec
das
jne
xlat
lret
loop
sub
std
fbstp
out
and
sub
or
ljmp
stc
adc
pmaxub
jg
add
test
xorps
scas
xor
pop
dec
push
mov
daa
or
shll
decl
lock
call
je
sbb
cmp
pop
and
popa
pop
repnz
insb
movsb
and
sti
or
and
pop
jecxz
sbb
jp
ljmp
fisttpll
int3
push
ss
sub
sub
mov
or
mov
or
dec
loopne
imul
out
cli
jg
roll
push
xor
insl
js
call
sub
cmpb
pushl
ret
mov
xchg
js
xor
cwtl
cmc
pop
pop
push
push
cmp
mov
add
lods
mov
call
int3
call
lock
mov
test
inc
jne
jno
sbb
enter
pop
ja
or
scas
pop
fwait
rolb
aas
xor
cmp
call
sarl
jns
sub
jnp
and
xchg
icebp
std
xchg
adc
pop
xor
inc
push
push
push
xchg
decl
xchg
hlt
mov
inc
jge
stc
adc
mov
or
push
hlt
mov
mov
mov
pop
out
int3
sub
push
jge
call
jmp
and
and
mov
test
cmc
int3
stc
lds
rorb
popa
sahf
add
sar
or
adc
sub
push
test
pop
and
insl
lock
call
sbb
and
daa
gs
lcall
mov
push
ret
mov
cmp
mov
or
les
shlb
inc
addr16
fiaddl
or
jle
in
iret
outsl
ficoml
outsb
xchg
dec
inc
pop
push
std
add
pushl
jne
stos
fwait
cmpsl
in
pop
iret
mov
xchg
jbe
dec
inc
js
jg
dec
fsubl
xchg
js
mov
xor
ljmp
add
cwtl
xchg
mov
dec
mov
aas
push
sbb
dec
cmp
cmp
mov
mov
stos
js
and
push
add
jb
cld
loop
push
arpl
mov
call
or
lea
cmc
or
pop
subb
sub
cwtl
inc
sbb
lcall
shl
cmp
mov
adc
lods
pushf
clc
lret
test
movsl
jecxz
dec
pop
xor
call
mov
xlat
mov
imul
add
incl
in
inc
jmp
sbb
sbb
ljmp
fldl
mov
add
mov
bound
mov
pop
bound
das
lcall
mov
mov
xor
pop
clc
mov
cltd
sbb
mov
scas
clc
inc
sub
fsubrl
push
in
xor
pop
mov
add
outsl
lcall
push
scas
sti
sar
in
clc
jp
negb
fdiv
sbb
jb
test
mov
dec
mov
and
dec
jbe
call
adc
incl
xor
lcall
repnz
nop
movb
loopne
push
sbb
repz
xorb
decl
ds
fs
jno
sbb
mov
xor
loope
hlt
jmp
fwait
and
lret
lret
xor
inc
inc
das
test
add
jae
jg
popa
call
andb
ja
popf
add
mov
lcall
mov
out
leave
pop
outsl
lock
call
push
cli
dec
push
aad
adc
call
call
adc
or
jo
call
mov
inc
pop
rcrb
iret
stos
jne
adc
enter
daa
lret
shlb
cmpsb
daa
out
inc
jae
mov
add
pop
aas
out
xor
mov
inc
mov
xchg
flds
or
out
cli
pusha
test
add
aaa
adc
adc
clc
test
fwait
dec
sbb
aaa
cmpl
mov
and
out
add
repz
ret
mov
adc
in
mov
mov
out
inc
ja
cmp
jl
fsubrs
cmp
decl
xchg
jmp
shrl
fdivrs
xor
adc
or
mov
call
adc
loope
les
mov
nop
aas
outsl
movsb
mov
push
sbb
xchg
adc
outsl
xor
fsubl
je
add
pushf
add
jg
pushl
lret
jbe
xchg
rclb
rcr
push
out
sub
jmp
ljmp
jne
jg
insl
adc
in
or
or
jnp
js
cmpsl
jae
xchg
or
int3
sub
or
mov
jmp
int3
fs
sarl
push
mov
mov
sub
mov
cmc
scas
dec
hlt
repnz
movsl
add
xor
mov
sub
fbstp
dec
xor
push
movsb
pop
push
push
rcrb
bound
jl
inc
fisubrs
ljmp
cltd
add
sub
addr16
cmc
mov
mov
jg
xor
stc
or
xchg
inc
and
fistps
xor
scas
add
xchg
mov
sub
jbe
outsb
stos
cmp
stos
jmp
sbb
mov
mov
push
adc
push
cmp
insl
orl
adc
dec
sbb
out
xlat
adc
cmp
jno
pushl
test
mov
xor
inc
xchg
aas
fcomi
lcall
sahf
cmp
xchg
imul
and
jbe
inc
mov
ficoml
jmp
aad
flds
sub
stc
push
xor
cmp
sub
push
jno
push
incl
mov
cmpb
jg
sub
outsl
popa
imul
aad
gs
jno
fistpl
stos
dec
loop
outsl
dec
push
pop
fucomi
cltd
lret
xchg
int
aaa
jg
pushl
shl
outsb
inc
add
add
ret
lcall
incl
pop
push
adc
addr16
out
and
jo
insl
mov
fisubs
into
cld
ljmp
xor
or
aas
cmp
repz
mov
inc
jp
xchg
cmp
dec
mov
mov
push
lods
mov
daa
pushl
mov
push
repnz
mov
xor
dec
out
adc
fcomp
sub
jmp
mov
xchg
add
shl
xchg
pushf
pop
sub
jnp
add
scas
ret
mov
sub
push
popf
jo
cmpsb
cmp
lds
fbstp
out
and
std
mov
clc
cs
mov
sbb
sar
mov
cmp
les
movsl
arpl
mov
call
cmp
je
push
sbb
cli
jb
mov
loop
cmp
push
sub
xchg
inc
pop
dec
pop
sbb
xor
pop
cmp
jo
mov
out
in
xchg
push
xchg
incl
xor
adc
nop
inc
outsb
jg
bound
xchg
jns
sbb
mov
je
in
std
jecxz
repnz
call
push
sub
scas
adc
nop
arpl
fimuls
sub
adc
sub
out
test
stc
mov
sbb
push
lcall
dec
outsl
cmp
rcrl
notb
enter
pop
push
es
jg
test
ffree
sub
pushl
imul
cli
pop
mov
aas
aaa
mov
mov
xchg
movsl
push
out
loop
lcall
inc
lock
ficoms
lock
in
xchg
test
pop
lcall
dec
push
mov
scas
mov
mov
xor
and
jb
mov
mov
pushl
push
notb
xchg
mov
and
shrb
gs
jmp
mov
decl
add
pop
mov
inc
ficoms
mov
stos
xchg
mov
dec
int3
and
call
xor
lods
cmpb
lea
or
cwtl
fiadds
sub
xchg
inc
mov
lcall
add
sub
push
lock
ficoml
shrl
rorl
pusha
dec
das
lods
roll
mov
ljmp
sbb
mov
mov
push
test
adc
in
dec
jp
data16
pop
xorb
pop
jge
mov
jge
stos
mov
ljmp
xchg
scas
test
xchg
xor
ja
xor
sub
nop
iret
mov
out
lods
lret
mov
inc
ljmp
clc
cltd
adc
pop
movsb
sub
mov
pop
or
call
insl
or
leave
jno
outsl
mov
insb
insb
test
and
jo
push
sar
pop
cmc
jg
icebp
add
ss
pop
mov
aam
stos
leave
fidivs
negl
dec
cmp
lcall
scas
loope
mov
sub
dec
fdivp
sahf
push
mov
xor
push
jmp
sbb
mov
mov
xchg
stos
xchg
push
jg
dec
movsl
pop
mov
mov
ljmp
adc
test
mov
mov
repnz
fcos
pushl
jg
sbb
jae
sub
hlt
jns
loope
les
jmp
rdmsr
loopne
mov
inc
enter
push
mov
and
mov
fidivl
push
push
in
pop
inc
and
subb
loopne
addb
imull
jae
inc
popf
push
lods
cmp
fcomps
mov
jmp
pusha
mov
xor
pop
pop
push
or
mov
out
push
add
mov
adc
lcall
mov
aaa
aad
push
mov
mov
leave
loop
jl
std
fwait
insb
xor
lcall
in
aaa
in
addr16
cmp
sahf
insb
lock
cmp
mov
lret
push
fbstp
mov
decl
pusha
pop
jno
lea
daa
stc
je
pop
imul
add
jmp
ljmp
add
mov
icebp
xor
daa
push
mov
sub
std
add
mov
mov
jmp
sbb
call
into
addr16
in
int
inc
pop
xlat
push
jge
adc
jne
jno
mov
daa
cmc
pop
fs
inc
pusha
mov
mov
stos
in
lahf
inc
cmp
ljmp
dec
inc
ss
cmp
lods
mov
test
mov
in
decl
flds
adc
bswap
lret
adc
insl
adc
sbb
popa
roll
push
cld
pushl
outsl
jnp
out
mov
adcb
popa
mov
cmp
and
mov
lahf
jg
push
sbbb
cmp
and
push
mov
stc
adcb
mov
pushl
movsl
xor
cmp
insb
inc
divb
rorl
mov
jg
xor
dec
pusha
or
repz
ret
mov
add
rcrl
add
dec
lock
movsb
jecxz
jb
fcmovb
aam
loopne
out
mov
ds
push
jmp
mov
aaa
stos
add
or
into
xchg
shlb
xor
cld
jb
adc
ss
xor
mov
cs
fisttpll
ret
pop
jno
mov
vpmacsww
dec
int
and
in
stc
mov
adc
sbb
add
sbb
test
idiv
jg
jmp
stc
mov
pop
mov
fists
adc
insb
jnp
pop
jg
loop
xchg
sbb
incl
pop
notl
push
sbb
orl
fnsave
dec
sub
add
test
sbb
jle
ja
or
decl
pop
inc
sbb
popf
sbb
sarl
mov
decl
cwtl
ljmp
stc
sub
movsl
lcall
xor
lcall
je
jmp
popa
mov
sbb
scas
imull
movsb
mov
or
mov
sub
ja
rclb
hlt
fsubl
and
repnz
mov
ja
cwtl
or
mov
xchg
xchg
cmp
hlt
lahf
mov
sbb
loop
pop
cmp
fcompl
xchg
je
mov
xor
lods
sbb
xchg
outsb
mov
decl
scas
icebp
jnp
adc
mov
orl
fidivrs
add
pop
ja
mov
inc
push
add
ja
aam
xchg
imul
dec
or
mov
xor
or
lcall
leave
xchg
gs
daa
mov
pop
icebp
test
inc
stc
inc
lret
mov
fs
mov
sub
mov
shll
pushl
cli
scas
xlat
xor
xor
fimull
inc
cmpsl
repz
int
add
add
mov
std
xchg
out
insb
in
rorb
add
jns
in
and
sti
sub
out
mov
gs
and
mov
adc
fcomip
decl
ret
std
xor
push
sti
jo
in
and
cmpsb
mov
sti
or
push
stos
cmp
sub
cwtl
jl
cmp
dec
and
pop
sub
hlt
out
pop
push
inc
adc
or
aam
mov
jp
pop
repz
jno
cmp
xor
lret
adcl
push
shl
jbe
int
shl
in
loop
int3
mov
mov
pop
in
cmp
decl
add
push
lods
cmp
test
sub
sbb
bound
pushf
incl
mov
test
lahf
fdivrl
dec
js
lea
std
stc
into
mov
add
push
fadd
push
xchg
or
loope
scas
push
imul
cmpsb
js
or
mov
in
in
adc
decl
popa
or
cmpsl
aas
adc
mov
pop
pop
adc
pop
sub
sub
pop
mov
mov
aam
mov
mov
inc
sub
ret
ljmp
pop
pop
mov
cmp
je
mov
mov
lock
ja
mov
or
int
adc
dec
lahf
jae
stc
add
jnp
test
xor
jne
ret
lcall
and
jge
ret
je
sub
mov
cltd
xchg
lcall
or
cli
lods
cmp
pusha
xchg
jb
inc
mov
pop
lcall
nop
insl
gs
jae
dec
add
mov
js
cmp
pop
stos
in
xchg
shrb
pusha
ljmp
enter
push
jp
xchg
push
jle
xchg
rol
loop
fcomip
out
clc
jmp
ds
add
fisubrs
addr16
fstl
mov
push
outsl
and
cmp
xor
mov
and
pop
dec
push
repnz
mov
inc
outsl
cld
cmp
push
sbb
jecxz
cmp
outsl
std
insb
sub
aad
add
lcall
sub
addr16
call
cmp
pusha
adc
push
push
outsl
dec
ljmp
rclb
es
jg
inc
xor
pusha
mov
jne
cmp
and
and
push
gs
xchg
bound
inc
dec
or
ret
push
icebp
rorb
add
mov
inc
jge
in
adc
lcall
cmp
movsb
pop
inc
bnd
outsb
aam
into
cmpsb
xlat
test
out
cmpsl
mov
sub
xor
pushl
push
cltd
xor
fistl
in
pop
adc
push
lods
cmp
out
fisttps
out
inc
cmc
jb
mov
stc
fisubrl
mov
cs
jbe
sub
into
push
mov
xchg
push
loopne
mov
push
adc
jp
fstps
push
cwtl
rcrb
lods
jg
ljmp
cmp
dec
sbb
pop
pop
das
aaa
sbb
movsl
cmc
xchg
jb
push
cld
push
hlt
add
sarb
xor
xchg
dec
out
je
insb
xchg
dec
add
call
jmp
pop
pusha
push
shlb
clc
insb
mov
sub
sub
xchg
push
pop
push
dec
mov
dec
push
loope
ja
testb
scas
mov
das
ds
mov
test
jmp
mov
shll
test
lds
jne
xor
mov
es
out
pushl
daa
jo
cmp
test
mov
sub
push
call
add
xorl
xchg
xor
adc
decl
xchg
lods
push
aas
adc
jecxz
pop
xchg
dec
xchg
loopne
push
insb
and
std
mov
repz
jnp
push
rolb
int3
rolb
mov
and
mov
movsb
fcompl
jmp
dec
dec
xor
outsb
bound
rcll
das
outsl
sub
jbe
xor
lret
fwait
or
xchg
mov
xor
rcrl
add
or
mov
mov
orl
push
test
xchg
pop
pusha
pusha
cld
lods
jnp
out
mov
jo
or
ja
sub
add
and
mov
decl
push
jae
jp
sub
fwait
movsb
mov
mov
scas
mov
mov
inc
sbb
xchg
js
xor
mov
xor
faddl
mov
cmp
pushf
and
lcall
stos
stos
iret
mov
ljmp
sub
xchg
scas
pop
add
icebp
divb
pop
jg
jmp
jle
je
call
sub
outsl
mov
inc
aam
insl
ljmp
fwait
push
lret
fcmovne
in
lret
lods
repz
mov
imul
pminsw
mov
pushl
push
dec
sub
pusha
sbb
movsb
push
xchg
and
cwtl
or
es
imul
jmp
mov
pop
stc
inc
sub
cwtl
loop,pn
clc
xchg
addr16
incl
cwtl
inc
and
mov
mov
jns
loope
mov
pop
push
cmpsl
push
mov
lcall
das
addr16
mov
cli
jmp
jno
add
in
loop
push
inc
pop
loopne
ljmp
pop
jmp
jns
hlt
pop
clc
notl
and
cs
subl
call
xor
sub
jns
sbb
mov
lret
adc
in
ss
sub
outsb
idiv
int3
je
cmp
jnp
dec
dec
mov
fmuls
cwtl
shrl
leave
pop
dec
pop
ficomps
push
subb
jecxz
push
mov
call
out
sub
leave
call
sub
pop
inc
adc
add
add
out
in
ljmp
xchg
cli
dec
sarl
push
ret
jae
cmp
xor
popf
cmc
push
ljmp
cli
lds
xor
aas
inc
adc
and
sub
cmp
xorl
mov
pushl
or
ja
mov
sub
cwtl
inc
je
xchg
add
lea
add
jge
and
incl
mov
rol
adc
and
sub
lods
in
pop
bound
lcall
movsl
data16
jle
xchg
shlb
iret
push
dec
mov
xorb
adc
xor
pop
decl
cli
int3
jo
iret
xchg
movsb
rcrl
xchg
pushl
daa
roll
jecxz
dec
shlb
cmp
cwtl
inc
adc
jle
push
out
sbb
push
daa
sti
les
sub
inc
dec
mov
push
aam
jo
cs
adc
lcall
jle
sub
std
xlat
jno,pn
loopne
sbb
arpl
call
or
int3
test
sub
movsb
mov
cmp
out
decl
pusha
sub
cmp
testb
loope
orb
xlat
es
xor
clc
outsb
xor
stc
popf
outsl
std
aam
insl
stos
jg
lcall
jbe
cmpsl
push
push
insb
push
clc
xor
popf
imul
mov
stos
jp
imul
inc
mov
xchg
mov
dec
mov
fcomip
pushl
mov
lret
cmp
mov
loopne
rorb
mov
jmp
push
icebp
xor
shl
insl
fnstsw
push
adc
daa
test
dec
decl
adc
jo
icebp
fildl
fimull
mov
xchg
cmp
pop
call
xor
lret
sub
pusha
bound
imul
fisttpl
pop
lea
push
pushl
or
fsubrl
int
mov
xchg
sbbb
or
mov
int3
pushl
js
mov
dec
push
mov
dec
mov
xchg
mov
test
mov
sbb
in
push
aaa
out
adc
ffreep
xchg
inc
outsl
notb
push
stos
mov
jne
add
ret
dec
pushf
outsl
lret
and
or
jg
cmp
and
popf
push
lahf
aaa
sarb
insl
mov
ds
insl
adc
push
jno
fistpl
pop
loopne
or
cmc
inc
lret
jecxz
mov
or
pop
dec
outsl
lcall
test
jp
mov
push
imul
pusha
and
mov
das
fwait
popf
jmp
imul
sbb
add
adc
xlat
pop
adc
xchg
idiv
incl
cli
nop
and
xor
pop
cmpsl
lret
mov
cmp
cmpb
add
ret
mov
jl
pop
lods
sti
iret
xor
out
insb
faddl
jge
repnz
cmpl
mov
into
dec
jnp
aas
jecxz
xchg
jns
lods
rcl
add
push
jg
in
cmc
loop
out
insb
or
adc
xchg
pop
loop
xchg
out
push
gs
outsb
ret
xor
jo
roll
lahf
hlt
stos
into
adc
sub
call
ret
mov
or
test
xor
ljmp
test
sub
mov
push
insl
mov
mov
pop
jno
clc
in
jae
sbb
cld
int3
pushf
add
outsb
adc
les
adc
into
aam
mov
iret
pop
incl
xchg
jp
sbb
and
ret
cmp
call
clc
incl
out
fadds
or
jo
mov
adc
dec
je
mov
mov
mov
pusha
dec
loopne
in
mov
iret
inc
sub
divl
jbe
cmp
jecxz
andb
jmp
add
je
mov
xchg
jl
scas
push
aad
int
movsl
je
lret
movsl
es
add
cmpsb
das
sar
jecxz
test
fmulp
jecxz
addb
dec
push
outsb
movb
sub
call
push
ss
idivb
js
and
push
call
inc
insb
ds
sbb
call
and
adc
pop
insb
push
push
sti
xor
mov
outsl
cli
inc
add
dec
decl
mov
stos
xlat
jbe
fs
rcll
xlat
push
mov
xchg
mov
mov
mov
adc
int3
xchg
push
pop
pop
adc
les
in
fcmovnbe
adc
add
ljmp
sub
fisubrs
mov
cmpsb
jnp
mov
lods
in
sub
lods
push
rcrb
js
lret
push
out
clc
bound
sub
add
inc
in
sahf
loop
stc
das
inc
or
jmp
lcall
dec
insl
mov
xchg
outsb
test
icebp
dec
loop
clc
mov
mov
dec
dec
lret
incl
push
sbb
xchg
std
pusha
in
push
scas
fucomip
sbb
jno
xor
xorl
out
lods
cld
decl
or
stos
addr16
adc
fidivs
call
ror
sar
add
imul
dec
mov
cmp
add
pop
cmp
mov
push
jle
roll
shll
mov
fsubrs
push
push
sbb
test
out
inc
adc
add
das
xchg
lods
incl
test
sub
pop
and
mov
xchg
pushl
out
in
out
or
pushf
in
test
stos
mov
or
xchg
incl
mov
lock
mov
mov
int
sarl
adc
pushl
mov
movsl
jle
cs
add
mov
dec
out
out
push
popa
ljmp
das
mov
call
jne
add
hlt
xor
cmp
lods
pop
in
daa
cld
xchg
ret
imul
xlat
shll
mov
xchg
xchg
jg
mov
jmp
xchg
jo
das
icebp
call
cmc
push
xor
xchg
sub
lret
or
mov
pop
cmpsb
cmc
fists
lods
sar
rclb
inc
adc
test
scas
call
adc
adc
inc
push
xor
sub
adc
mov
jns
lret
jbe
mov
aam
jae
add
push
push
sbb
mov
stos
negb
or
and
pop
jno
decl
or
jmp
pop
movsb
and
mov
fcos
jmp
dec
xchg
sbb
test
inc
push
or
mov
push
outsb
clc
pushl
scas
jle
xchg
inc
or
mov
mov
lret
sbb
jmp
ljmp
out
pop
in
add
or
test
sbb
sbb
sub
pushl
pushf
xor
aam
adc
fs
test
sbb
aaa
or
imul
incl
inc
push
cmp
jno
test
mov
je
jmp
lcall
cli
or
sub
push
sbb
cwtl
ja
xlat
jmp
push
movsl
add
mov
mov
xchg
inc
mov
inc
roll
push
mov
mov
xchg
pop
jmp
mov
pusha
std
sub
jo
loope
lahf
push
sbb
aas
sub
mov
clc
incl
push
movsl
xchg
das
jns
dec
dec
cmpsb
lret
in
jle
xor
decl
int3
push
push
sbb
push
cmp
add
mov
cmp
scas
pop
inc
daa
inc
lahf
aam
jbe
mov
dec
jp
push
pop
fmuls
jle
push
add
ljmp
cmp
cwtl
sub
lds
and
jl
push
aad
div
pop
push
cli
or
mov
mov
xchg
gs
xchg
stos
pusha
cmp
fdivs
cs
sarl
movsl
mov
sbb
cwtl
cmp
lret
mov
dec
jne
call
mov
mov
adc
decl
fstpt
and
cmpsl
xor
jg
cld
mov
loopne
jne
loop
push
scas
scas
data16
pusha
mov
dec
pop
imul
lahf
movb
decl
mov
mov
sbb
xor
pop
mov
call
sahf
add
pop
jne
pushl
mov
cmp
pop
popf
das
lret
adc
fcmovnu
dec
popf
adc
or
and
incl
outsb
jecxz
fwait
mov
scas
hlt
and
clc
loopne
cltd
enter
lret
repnz
lcall
int3
mov
mov
mov
xor
push
aad
sbb
push
je
jg
decl
imull
mov
pushf
ss
popf
ret
mov
lock
out
push
je
push
out
sbb
incl
lea
push
rorb
aaa
pop
jb
into
xor
cli
inc
cmp
or
pop
imul
shl
outsb
sub
iret
mov
mov
push
push
xor
and
es
pop
icebp
call
sbb
add
push
fbstp
imul
adc
addr16
mov
icebp
fnstsw
sbb
inc
xor
arpl
xor
pushl
movsb
sarb
aas
hlt
fildll
cmp
xor
cmp
dec
outsb
cmp
icebp
sbb
pop
cld
out
sub
or
into
xor
movsb
cmc
ljmp
imul
out
incl
xorl
and
xor
sbb
inc
ljmp
ficomps
call
sbb
mull
push
cmpsl
mov
sbb
mov
mov
push
mov
mov
in
adc
mov
adc
js
adc
cmp
push
pop
jecxz
fwait
jg
pushf
adc
clc
jmp
int3
fisubs
adc
mov
imul
lcall
xlat
repnz
sbb
add
push
mov
out
jmp
in
sub
push
jmp
stc
mov
in
movsb
repz
and
xchg
stc
adc
cmp
pop
rcrb
inc
adc
cli
fldt
rclb
and
loop
fiadds
xchg
in
cld
sub
ljmp
cli
das
mov
cmc
inc
aam
xlat
into
add
push
jecxz
or
inc
adc
rorb
in
cmp
adc
jmp
pop
sbb
enter
stos
or
dec
das
les
nop
outsl
lcall
loop
xor
mov
outsl
push
imul
and
cmpsb
ljmp
or
jle
in
xor
ja
mov
scas
lea
mov
call
test
outsl
mov
mov
push
lret
inc
fcmovne
lcall
jl
icebp
mov
xchg
jnp
pop
sbb
popf
xchg
mov
push
xchg
add
jg
fildl
ljmp
stos
popa
inc
add
push
push
adc
mov
incl
add
pop
cmp
sarb
dec
fdivrl
jg
incl
jno
mov
adc
adc
rorb
lahf
push
pop
sub
out
mov
inc
inc
cmp
xor
paddq
fdivs
out
cmp
xchg
lcall
pushl
add
and
imul
push
shl
mov
arpl
test
ja
inc
mov
xchg
and
fcoms
ljmp
test
aam
xchg
fcoms
push
cmpsb
xor
add
leave
cli
pop
jecxz
in
mov
pushl
outsb
repnz
add
test
xchg
push
jb
repz
ljmp
dec
cmpsb
stos
out
xlat
js
sahf
xchg
and
rol
cmpsl
mov
push
xor
jmp
in
shrl
jecxz,pn
je
lcall
inc
push
pop
sbb
fstpl
sbb
mov
dec
jp
add
and
cmp
inc
movsb
pushl
sub
push
cmpl
mov
imul
aas
mov
shrl
push
imul
sub
pop
out
xor
std
dec
jp
lods
push
sbb
mov
lret
mov
cld
jecxz
jnp
stos
pop
xor
and
mov
daa
mulb
lods
in
movsl
dec
jecxz
call
inc
inc
mov
sbb
adc
mov
jno
adc
testl
cmp
sub
fisubl
xor
int3
mov
cmpsl
call
dec
fldcw
mull
sbb
dec
pop
mov
ss
mov
test
rorl
ret
or
jle
adc
clc
cmpsl
shl
jg
in
mov
mov
cltd
adc
aad
negb
mov
outsl
addb
jns
call
mov
push
sahf
rol
mov
icebp
ret
aam
shlb
mov
dec
ds
int3
inc
xchg
jmp
or
push
mov
xlat
cwtl
lods
addl
popa
std
ss
ljmp
jb
inc
sbb
std
scas
in
ret
in
jge
mov
movsl
ds
loop
sbb
call
jecxz
lock
push
sbb
lret
and
jae
jmp
push
scas
insb
int
xchg
dec
iret
ja
fisubrs
movsb
icebp
pop
dec
test
pushf
stos
mov
adc
cli
je
ss
lcall
dec
jge
xor
and
cmc
int3
mov
cmpsb
aam
adc
loope
fneni(8087
lcall
sbb
xchg
or
aaa
xor
repz
gs
mov
incl
loop
push
push
movb
aas
popf
mov
add
sbb
test
imul
mov
jbe
jp
ljmp
adc
out
push
lea
sbb
jg
mov
xor
incl
jae
into
ret
or
int
mov
mov
lret
out
insb
mov
dec
data16
jmp
xchg
andl
ret
inc
loope
push
mov
xchg
inc
sar
clc
repz
test
add
jno
pop
xchg
push
xchg
shll
xchg
jg
xor
dec
je
jle
mov
sahf
test
pushf
mov
fwait
jmp
cmpsl
or
pushl
in
fistl
out
int3
js
repnz
push
mov
xchg
bound
jae
repz
notb
fldl2t
xor
rcrl
xchg
loopne
dec
push
fsubrl
inc
pusha
movsb
shlb
inc
sbb
loop
ljmp
clc
daa
mov
bound
pop
adc
mov
insl
jmp
fistpll
lods
ljmp
call
jmp
mov
arpl
cmp
ss
xor
cli
call
xchg
int
jl
sarb
aas
hlt
in
stos
ret
loopne
enter
es
dec
sbb
das
cli
lcall
ficompl
xor
stos
dec
ja
cli
mov
ret
nop
aad
daa
pop
or
pushl
ja
jp
imul
in
ret
sub
pop
mov
cli
fistpl
jg
cmp
insb
or
ds
add
lds
xlat
cmp
arpl
incl
fwait
stc
lahf
and
mov
std
ljmp
movsb
pushl
aad
sbb
pop
aas
enter
in
jmp
push
mov
fucomp
mov
popl
stc
dec
insb
sub
pop
arpl
ret
call
out
loop
inc
mov
fiadds
decl
inc
cmp
jne
cmp
xchg
push
mov
loopne
pusha
mov
testb
xor
jmp
and
cmp
push
in
test
jne
mov
mov
lock
push
out
stos
in
faddl
imulb
sub
mov
jmp
shlb
xchg
inc
gs
adc
lret
xchg
and
incl
push
mov
cmc
fstpt
divl
push
repnz
test
xchg
sub
xlat
enter
sti
insl
sbb
pushf
dec
mov
out
or
dec
imul
push
dec
or
xchg
jbe
das
decb
insb
in
js
loop
sti
inc
les
mov
ret
inc
pop
call
push
cmpb
xor
jmp
test
jns
arpl
jmp
mov
negb
roll
or
fldt
jo
adc
ljmp
sub
int
dec
sub
lock
mov
xchg
cmp
add
mov
jg
mov
test
dec
lea
sbb
xchg
cmpsl
lret
lret
cs
incl
mov
sti
jp
and
adc
pop
and
daa
jmp
leave
clc
in
mov
outsb
mov
push
cld
arpl
xor
and
decl
lret
xor
gs
xchg
out
dec
mov
jno
pop
jl
pop
out
daa
mov
push
call
scas
pop
inc
add
cwtl
or
lahf
lahf
dec
pop
scas
xor
outsl
pop
sbb
lea
pop
jl
xor
test
mov
addr16
test
mov
cmp
jmp
mov
fstl
push
dec
mov
add
mov
mov
dec
pop
aam
adc
sbb
mov
pushl
mov
icebp
addr16
popf
xor
out
imul
cmp
xchg
les
adc
pop
lock
out
dec
imul
lcall
cld
decl
subb
pop
push
lret
jle
jg
cwtl
push
call
pop
jge
xchg
fstpl
inc
jecxz
fisttpl
shrl
fwait
loope
push
mov
fsubl
jmp
xor
or
mov
mov
mov
rcr
jle
cld
in
add
lcall
mov
test
sub
xor
sub
call
sarw
fidivrs
lods
add
xor
mov
dec
jmp
lahf
cmp
push
push
mov
shrb
push
lahf
mov
push
pop
out
daa
dec
or
mov
jbe
xchg
incl
xchg
js
test
mov
sub
sahf
sub
or
inc
arpl
fnstenv
dec
dec
or
cmc
pop
xchg
cli
pop
rorl
adc
add
aam
pop
adc
cld
push
xchg
mov
sub
pop
xor
lret
jge
bound
mov
mov
movsl
jg
dec
fs
imul
mov
popa
ljmp
decl
mov
jg
aad
dec
jge
pop
jne
and
pop
push
fistpl
dec
fiaddl
or
lods
insb
xor
push
imul
sbb
mov
adc
jmp
sar
jmp
int
fbld
aad
jmp
cmp
jle
pop
loope
sub
sbb
mov
test
rorl
arpl
and
call
insb
daa
sub
xor
and
mov
es
or
loopne
inc
iret
ret
sub
xchg
xchg
sahf
sub
mov
cmp
mov
sbb
jecxz
std
scas
orb
aaa
movsl
mov
outsl
sar
incl
outsl
xchg
mov
jnp
add
addr16
mov
mov
mov
jg
in
test
fwait
mov
mov
jns
xchg
sub
fwait
lahf
loope
xchg
pop
pop
mov
and
std
cli
sahf
test
mov
pop
repnz
push
mov
dec
fisttps
mov
xor
sub
push
adc
pop
aaa
ficomps
decl
out
cs
xchg
add
lret
sbb
arpl
loope
ficoms
add
enter
ljmp
clc
call
inc
daa
call
pop
sarl
in
xchg
lock
mov
mov
std
adc
inc
enter
nop
mov
int
push
adc
leave
cmpsb
ljmp
inc
loopne
bound
mull
inc
xchg
and
add
mov
es
sti
add
push
aad
daa
cli
lcall
xchg
push
out
rclb
dec
push
addr16
test
or
pop
test
mov
iret
xor
xor
addr16
int
pop
jg
xchg
mov
das
or
sahf
jb
jmp
jl
fstps
pop
mov
dec
aaa
incl
pop
mov
push
adc
icebp
sub
orl
mov
pop
pop
stos
xchg
bound
push
sub
iret
jmp
cmpsl
jmp
mov
jo
mov
hlt
imul
jg
clc
mov
mov
lock
mov
sub
lret
sub
sub
inc
mov
push
js
xchg
sbb
std
sub
mov
mov
jne
sar
cmovs
outsb
test
decl
and
fists
jmp
add
mov
xchg
jl
sub
sbb
fwait
out
sub
push
cs
mov
xor
xor
mov
ljmp
cmpsb
shlb
pop
or
in
mov
dec
in
mov
in
jmp
cmp
xor
in
mov
rcl
outsb
or
jae
and
es
outsb
adc
xchg
call
fnsave
cmp
aaa
dec
sti
fdivl
xor
orb
pop
movsb
mov
jno
adc
incl
in
imul
cmpl
lahf
insb
outsb
mov
decl
mov
movsb
dec
movsb
fs
mov
push
push
xchg
pushf
push
add
in
inc
pop
jl
xchg
sbb
sar
decl
cwtl
imul
sahf
sti
data16
dec
leave
sbb
inc
test
xchg
mov
xlat
jg
inc
mov
ljmp
and
mov
lcall
gs
xchg
pop
adc
inc
mov
inc
je
mov
jmp
repz
pushl
out
pop
mov
and
arpl
push
hlt
sahf
mov
aad
jne
mov
pop
repz
jo
cli
decl
cmp
test
and
xlat
aaa
adc
sub
push
insb
and
stos
lret
out
fisubs
push
loop
xor
mov
mov
movsl
loope
stc
push
and
adc
in
pushl
fistl
and
nop
push
das
dec
xchg
xor
xor
andb
ficoms
push
icebp
xchg
jle
push
adc
mov
mov
cmpsl
jg
pushl
adc
call
sbb
xor
lret
cmpb
outsb
or
push
inc
fidivs
dec
jno
notl
aam
push
test
int3
sbb
test
mov
mov
mov
jmp
ror
fcmovu
in
xchg
mov
xchg
add
xchg
jne
push
sbb
mov
sub
stos
pop
mov
repz
aad
inc
imul
cld
lahf
jg
push
sti
jg
movsl
notb
ficompl
dec
sub
xchg
sbb
xor
jbe
ja
cmpsb
aad
sub
lcall
pop
adc
ljmp
ficomps
rsqrtps
clc
aaa
mov
pop
fcomps
jns
mov
in
mov
sbb
fdivs
test
cmpsl
out
out
rcl
inc
ds
inc
pop
inc
test
sbb
xchg
sbb
add
xor
adc
lcall
jne
mov
fwait
fwait
and
popa
or
push
mov
sbb
aaa
or
dec
mov
ss
insb
ljmp
mov
inc
pop
dec
stos
mov
fistpll
mov
ljmp
jge
mov
stos
jl
loopne
jl
out
addl
aad
je
int
mov
mov
jo
inc
mov
push
outsl
nop
jecxz
or
jp
test
jmp
mov
xchg
push
add
jnp
ljmp
mov
mov
and
incl
mov
jg
add
test
mov
or
add
push
add
xorb
imulb
jecxz
fdivrp
pushl
xor
fxch
and
sub
aaa
mov
psubsw
jge
stos
inc
inc
icebp
fwait
jae
pushf
pop
or
mov
push
or
cmp
pop
ret
cmp
mov
inc
mov
and
mov
mov
mov
lahf
sbb
xchg
jae
pop
sub
push
jmp
mov
fidivs
jmp
pop
or
sbb
xchg
iret
mov
daa
xor
cmp
sub
mov
rcl
das
jns
pop
int
xor
insl
add
adcl
jnp
sar
filds
fidivrs
in
ret
neg
les
inc
pop
jo
xchg
repnz
mov
adc
loope
cmp
dec
xor
push
push
incb
or
sar
test
xchg
movsb
mov
cmp
lcall
and
sub
mov
dec
and
and
fwait
popa
mov
jns
jae
jmp
dec
sbb
les
mov
pop
int
xchg
mov
xchg
jbe
pushl
movsl
lods
or
sub
fistpl
aam
pop
fidivrl
rolb
cld
mov
jmp
sub
ljmp
push
jmp
push
sub
sub
cmp
into
aam
jno
xor
addr16
and
push
jp
xchg
loopne
sub
xchg
mov
push
jge
lret
mov
pop
jmp
sub
adc
mov
popa
lds
call
dec
cmpsl
xor
dec
mov
inc
sahf
jmp
mov
jmp
ljmp
lods
jbe
ljmp
outsl
xlat
movd
dec
test
push
testl
inc
divl
jmp
inc
push
out
dec
pop
and
data16
xchg
push
add
shlb
add
xor
or
jno
cld
xor
pop
or
adc
mov
sbb
loopne
or
mov
mov
call
les
xchg
dec
mov
mov
ret
sahf
dec
loop
jae
xchg
call
insb
adc
addr16
roll
aam
shlb
dec
xlat
push
or
xor
cmpsb
mov
mov
repz
sub
mov
xchg
mov
not
pop
subl
mov
lcall
mov
or
pop
in
push
insl
adcl
jmp
lret
lods
sub
lcall
test
mov
adc
dec
outsl
cmp
add
pushl
std
dec
cwtl
ret
xchg
mov
push
lret
adc
adc
add
mov
cld
or
pushl
leave
push
aad
jne
pop
and
imul
dec
fsts
jae
pushl
sahf
push
push
roll
js
jnp
pop
mov
add
lock
popa
sbbb
incl
pop
idiv
sub
jmp
aas
clc
inc
xchg
insl
lea
stc
pushl
leave
leave
inc
push
push
enter
sarb
je
mov
bound
popf
mov
jmp
faddp
push
fwait
mov
pop
xor
int3
pop
ja
jo
push
pushl
test
cmp
pop
inc
mov
dec
pop
cs
iret
pop
cli
cmp
rorb
insl
movsl
ret
pop
pop
std
incl
sarl
xor
scas
cwtd
and
ret
sahf
fdivrp
jae
inc
hlt
mov
shlb
and
xor
call
cld
push
pop
jp
dec
jns
and
push
mov
xor
fcmovu
enter
add
mov
in
lcall
pop
ss
xchg
sbb
adc
leave
scas
jge
pusha
call
incl
pop
push
sub
outsb
addb
mov
cmpsl
stc
push
cmp
mov
outsb
mov
sub
lods
insb
xor
jg
push
repz
test
adc
shr
or
jmp
xchg
xor
jo
jmp
inc
testb
xor
out
enter
cmp
jmp
outsl
mov
aaa
in
daa
push
daa
lock
shll
fdiv
int3
mov
mov
lcall
fisttpll
inc
cld
or
and
dec
and
mov
rclb
xlat
call
mov
lods
jns
sub
cltd
inc
pop
es
xchg
push
in
sbb
int
daa
push
mov
fsub
rcll
cmp
mov
or
push
int3
xor
mov
mov
out
fistpll
mulb
icebp
xchg
icebp
xor
btc
lret
xchg
das
mov
push
loop
mov
decl
aad
add
cli
lods
pushf
mov
ljmp
jmp
insb
in
gs
fildll
ljmp
aam
and
test
dec
ffreep
inc
cmp
add
movb
sbb
cmpsb
jnp
sti
divb
mov
mov
jmp
push
mov
jo
iret
mov
outsb
xlat
call
pop
xor
in
inc
push
or
inc
sbb
and
fwait
pop
mov
daa
nop
push
shll
and
cmpsb
push
test
lods
jnp
clc
mov
jge
in
cli
pop
cmp
outsb
hlt
inc
ljmp
push
js
adc
call
inc
fsub
inc
push
and
or
adc
mov
sbb
pushl
jmp
jb
and
xor
ss
dec
bound
xchg
push
add
rorb
lods
xor
addr16
cmp
xor
mov
mul
outsl
mov
xlat
or
mov
clc
xchg
scas
xchg
cs
lea
push
xchg
mov
inc
pop
imul
sub
cwtl
cmp
cmpsl
stos
push
jl
cmp
jg
cwtl
dec
imul
adc
das
call
stc
pop
fiaddl
add
js
jmp
in
sub
mov
mov
pushl
and
inc
in
add
jge,pt
mov
xchg
fwait
pop
and
jmp
jnp
das
xchg
inc
dec
xchg
iret
cmc
push
or
xor
pop
push
jnp
pop
lods
push
mov
fs
ljmp
xchg
jle
loop
xchg
push
xlat
add
mov
xor
xor
mov
xchg
mov
xor
inc
int
cli
sub
test
push
xchg
sbb
mov
sbb
repz
int3
mov
into
mov
ljmp
cmp
lcall
jp
andb
shll
cwtl
cmc
fistpll
jge
je
mov
stos
insl
and
dec
subb
add
push
loope
in
jmp
je
pop
or
sbb
popa
pop
xchg
xchg
push
push
imul
mov
pusha
aam
jle
clc
js
rorb
jge
push
enter
in
xor
inc
jae
pop
jp
inc
dec
lcall
je
or
cltd
and
popa
or
inc
lods
inc
out
jg
pop
psubw
fisubrl
mov
ljmp
mov
cpuid
jnp
adc
sbb
rorb
sub
add
ljmp
inc
pop
je
mov
mov
mov
push
pop
fisubrs
add
pop
or
jg
test
or
sbb
push
xchg
inc
lahf
test
jmp
das
clc
sbb
ljmp
addr16
sbb
pop
push
mov
mov
in
sub
pop
mov
decl
je
scas
stos
lcall
xchg
jb
dec
xchg
jno
cmp
stos
push
push
ljmp
popa
mov
mov
ljmp
shlb
repnz
fists
cmp
stos
sub
aad
dec
loopne
cmp
jb
add
jns
mov
lcall
jns
jge
gs
push
in
and
inc
shl
movsl
mov
adc
int
incl
out
mov
jmp
shrl
fdivrs
pop
rolb
pop
out
lcall
aaa
cmp
ljmp
in
fsubl
sub
fdiv
fwait
out
outsl
jmp
jmp
jle
orb
ffreep
in
mov
mov
adc
cmp
pop
rolb
xor
dec
push
mov
jb
rclb
adc
out
cs
loope
cld
inc
pop
push
movsl
pop
dec
jecxz
lock
mov
mov
mov
lcall
lds
and
sbbb
pop
lock
inc
add
push
pop
ds
es
pushl
fcmovb
aad
js
sbb
int
add
xchg
adc
ds
mov
mov
and
fldenv
mov
pop
jno
cmp
adc
out
dec
loope
fdivl
jo
or
push
cmp
sti
lea
ret
shrl
fwait
aaa
call
enter
lret
fistl
lret
xchg
sbb
mov
sbb
or
jae
fprem
mov
into
jae
and
mov
push
pop
lock
iret
les
mov
jmp
push
cmp
stos
cmp
hlt
jg
popf
in
add
pusha
sbb
xor
jo
enter
dec
jmp
xlat
hlt
fcomps
xor
mul
dec
out
cld
mov
mov
push
add
jecxz
fcomip
push
lds
or
dec
push
cmp
mov
pusha
sbb
jle
xor
cmp
adc
imul
out
sub
dec
out
sbb
lods
cmp
call
jmpw
sbb
mov
gs
xlat
addb
dec
in
gs
int
cmp
sbb
call
adc
sbb
and
push
pop
std
mov
fildll
jno
leave
insb
lcall
lock
sub
pop
shl
mov
lods
movsl
sub
fimuls
sarb
test
ja
aam
add
pushf
sbb
jnp
fsts
jne
add
dec
pusha
push
push
sub
mov
rcl
adc
mov
lods
push
lret
cmpsb
jno
pushl
and
cli
mov
pop
hlt
lea
adc
or
ljmp
dec
or
xchg
out
aaa
scas
mov
iret
sbb
xchg
aam
mov
mov
call
imul
mov
push
call
push
and
mov
nop
call
aad
cmp
xchg
pop
jle
pushf
add
cmpsb
mov
mov
add
mov
cmp
or
into
imul
push
lcall
nop
andb
mov
call
sbb
loop
ljmp
push
lods
pop
es
fbld
lcall
xchg
fsubr
mov
nop
pop
lcall
pushl
and
pop
ljmp
cmpsl
cmc
enter
fidivrs
cld
lcall
hlt
xor
push
mov
push
int3
inc
push
push
or
call
stos
fcomip
call
movsl
enter
xor
or
cld
adc
fs
mov
mov
sbb
sbb
and
aam
dec
xor
sbbl
dec
add
cmp
jne
xchg
push
or
xchg
mov
in
insb
dec
vcmpss
ljmp
xchg
int3
pop
js
cmp
std
repnz
mov
adc
cmpsb
pop
test
sbb
jmp
int3
repz
pushf
inc
dec
mov
push
xor
scas
cmp
dec
scas
cmp
call
fwait
stos
cmp
or
pusha
xor
dec
mov
mov
mov
lods
test
fisttpl
sub
inc
mov
mov
xlat
jae
mov
mov
or
mov
jg
ljmp
jle
mov
dec
or
push
adcl
and
push
inc
and
int3
dec
jp
pushl
cld
jnp
pop
ljmp
adc
dec
lock
out
mov
incl
jo
test
stos
xchg
or
shll
fdivrl
jnp
adc
cmp
popf
mov
adc
cmc
call
cmp
in
cmp
mov
mov
cmp
xchg
loop
ljmp
push
push
shll
jmp
insb
adc
call
in
fs
sar
stos
movsb
push
push
push
lods
mov
aaa
movsb
ljmp
jg
or
dec
sbb
lock
dec
shll
lcall
shll
lret
xor
out
addb
std
push
lcall
in
xchg
mov
incl
out
nop
movsl
out
fwait
ja
pusha
pop
ret
jg
adc
mov
sub
inc
ret
mov
icebp
mov
jno
xchg
mov
sub
stos
xchg
pop
xchg
insb
xchg
call
mov
cmpsb
fidivrs
xor
int3
and
ss
fcompl
pop
jmp
xchg
repnz
out
inc
push
outsb
mov
xchg
xchg
xchg
push
jmp
xor
and
addl
cltd
and
inc
push
add
inc
xchg
push
jp
mov
aam
fcmovu
scas
xlat
aad
in
push
decl
stc
push
pop
mov
lods
xchg
push
push
add
and
pop
add
or
out
inc
out
pop
test
jns
fs
and
into
mov
mov
dec
test
mov
sub
add
stos
ljmp
sub
cmp
sub
inc
stos
push
pop
std
cmp
jns
dec
sub
decl
in
inc
adc
in
dec
push
mov
and
scas
sub
mov
dec
adcl
dec
or
testl
pop
in
scas
xchg
pushf
iret
dec
cmpsl
repnz
clc
sti
in
into
jns
icebp
fisubs
push
adc
insl
int
in
cmp
adc
cmp
je
cld
mov
sub
pop
rcrb
cli
or
push
cmp
out
cmp
xor
pop
sub
std
shlb
dec
fninit
adc
in
push
pushl
out
sub
mov
dec
cmp
sbb
fsts
jp
scas
mov
mov
ja
mov
repnz
lret
push
xchg
pop
outsl
ret
adc
loopne
bound
xor
add
ljmp
cmpsb
icebp
rorb
lods
es
sbb
dec
sarl
repnz
push
jb
push
xchg
and
sar
out
or
daa
ret
repz
nop
das
out
push
cwtl
pop
shl
mov
xchg
les
lea
dec
mov
lcall
insl
dec
aad
outsl
xchg
cmp
add
lcall
icebp
jp
int3
jns
add
cld
xor
ljmp
sahf
mov
push
xchg
push
out
ret
adc
pop
cmp
mov
movsl
dec
xchg
sar
decl
das
stc
ret
mov
fwait
lret
iret
jo
aad
sub
xor
into
int
divb
fcomip
lcall
out
test
sbb
out
icebp
sub
cmp
jp
pop
fld
jae
ljmp
or
fdivrl
test
add
inc
add
mov
cltd
push
jg
pop
imulb
or
pop
fstp
mov
int
orl
lods
jg
call
jb
dec
jo
pop
xchg
xchg
lods
push
xor
rcll
mov
lcall
push
pop
xor
pop
fisubs
cmp
dec
shl
fidivs
sar
inc
movups
stos
mov
imul
sub
hlt
mov
fdiv
call
je
inc
and
xchg
push
int
out
mov
jno
mov
filds
sbb
lcall
inc
and
imul
adc
inc
mov
xchg
cld
mov
dec
xchg
inc
pop
ret
push
icebp
jae
xor
mov
repnz
xchg
rclb
lcall
sub
ljmp
cli
push
insb
lahf
push
das
repz
xchg
jecxz
mov
add
imul
aad
dec
hlt
dec
data16
clc
adc
inc
mov
into
sbb
push
filds
sbb
and
jg
rolb
push
std
jle
cmp
xchg
cld
xchg
into
xchg
cmp
stos
add
xchg
ljmp
inc
gs
outsl
outsb
test
jbe
adc
shll
imul
inc
int3
mov
aad
das
ror
mov
mov
nop
lds
xlat
es
ljmp
or
mov
int
sub
notb
mov
shll
or
cmp
cmp
jae
pusha
push
dec
inc
sub
xor
je
cli
xor
orl
dec
insb
ficompl
xor
shrl
cmp
xor
mov
lcall
jge
mov
cmp
movsb
andb
push
int3
popa
adc
outsb
xchg
xchg
add
hlt
add
xchg
pop
call
sbb
roll
sub
call
add
aad
mov
mov
jecxz
fdivl
ljmp
sarb
movaps
push
adc
cmpsl
lea
fsubl
sar
bound
movsl
and
in
jmp
cmp
push
ret
out
inc
sarl
daa
ret
dec
jb
pop
or
inc
adc
ljmp
shlb
cwtl
mov
loopne
mov
out
mov
dec
add
call
cmp
dec
jl
push
data16
push
push
dec
insb
mov
xchg
or
mov
mov
outsb
aam
jmp
sub
js
bound
or
test
ljmp
cmp
jp,pn
jns
fstpl
jbe
mov
ficoml
icebp
jo
cmp
mov
call
add
stos
je
inc
inc
aam
push
cwtl
jbe
ds
jle
out
cmp
stos
xchg
nop
cltd
mov
cmp
in
pushl
push
and
cmp
loopne
cmp
mov
btc
adc
lahf
push
jae
push
inc
lods
leave
jmp
fbstp
mov
mov
aaa
fs
les
push
pop
ljmp
xchg
mov
std
jle
rolb
ljmp
dec
ficompl
outsl
vcvttps2dq
psrlw
cmpsl
bound
pop
iret
enter
arpl
lcall
int
int3
fiaddl
rorl
in
out
push
xchg
pop
mov
incl
jnp
xor
pushl
push
sbb
dec
shlb
in
sub
sarl
mov
cs
jg
mov
and
jg
sahf
into
mov
mov
or
ljmp
mov
add
pop
or
dec
shrb
stc
popa
jmp
out
mov
decl
pushl
cltd
jo
aad
mov
sbb
pop
ljmp
inc
mov
inc
loop
xchg
aam
ja
std
repnz
mov
xor
ljmp
xor
test
cmp
xor
fbstp
sub
bound
stc
ud0
jmp
mov
mov
iret
aas
pop
cmpsl
insl
inc
fidivs
out
inc
and
dec
lcall
pop
jae
cmp
adc
in
mov
jg
popa
jp
fiaddl
inc
lea
jmp
mov
jbe
push
in
and
int
sti
sbb
lahf
insl
lods
popf
mov
stos
push
or
out
aam
sub
shrl
jnp
xor
inc
jmp
jle
push
mov
mov
aam
std
mov
sub
shl
pop
xlat
leave
ja
mov
ljmp
jle
in
jp
and
mov
aas
mov
in
iret
lcall
mov
cmp
push
jg
aam
int3
std
xor
aas
testl
jecxz
rcrl
mov
fs
lcall
inc
test
bound
or
inc
stc
mov
fdivrs
dec
push
test
clc
out
sub
pop
xor
sarl
sti
es
ljmp
cmpb
and
jp
dec
push
xchg
and
xchg
addr16
add
stos
jmp
pop
push
fldl
jb
mov
test
mov
outsb
and
mov
push
repnz
sbb
sbb
es
mov
scas
adc
xchg
pop
scas
loope
sub
inc
xor
mov
enter
mov
ss
add
sbb
push
or
xor
clc
cmpsb
decl
jo
mov
les
test
xchg
add
stc
add
ljmp
cmpsl
mov
adc
sbb
bound
popf
mov
movsb
fsubl
inc
std
call
inc
mov
jl
add
xor
mov
sub
pop
xchg
jae
testl
or
rclb
addr16
adc
cmpsl
movb
xchg
cli
aaa
fld
mov
int3
xor
bound
mov
sbbb
fstl
dec
shlb
mov
aam
iret
jl
mov
and
or
inc
popa
imul
call
jl
das
dec
gs
add
iret
or
pop
dec
das
repz
and
xchg
incl
add
jbe
pop
xchg
inc
adc
add
fmull
pop
or
decl
test
mov
jmp
jb
movsl
lds
and
mov
fbstp
push
and
daa
sub
push
pop
xor
push
out
pop
nop
pop
dec
mov
sub
sbb
sarl
lcall
insb
push
hlt
xor
mov
cs
jmp
incl
loope
lea
push
pop
adcl
stos
adc
xchg
cmp
stos
fsts
sahf
iret
mov
pushl
sbb
sub
mov
xchg
pop
and
lock
mov
hlt
incl
mov
int3
sahf
dec
outsl
push
aas
das
pop
pusha
and
mov
xchg
jp
add
ljmp
mov
ljmp
cmc
rcrl
pushf
test
lahf
cmp
jl
jae
adc
push
daa
mov
pushl
pop
jae
xor
lods
dec
xchg
xchg
test
inc
cmpsl
push
iret
jecxz
push
or
pushl
fistl
adc
test
mov
mov
stos
addr16
sbb
mov
lcall
pushl
dec
cmp
inc
out
pop
mov
xchg
test
adc
pop
push
fcom
mov
mov
mov
fldcw
das
in
sub
aaa
mov
pop
loopne
in
nop
jg
jle
jl
leave
xor
dec
jb
xchg
dec
pusha
cmp
loopne
gs
cmp
push
jmp
jge
push
add
int
jns
fildl
test
add
sub
loope
xchg
jmp
fadds
lahf
dec
inc
add
xor
xchg
outsl
testb
mov
add
jmp
je
out
mov
cwtl
xor
into
insb
mov
ljmp
cmp
pop
xchg
dec
xorb
call
jg
aaa
pop
scas
test
and
lcall
jp
add
inc
inc
push
idivl
jg
test
test
push
cmp
repz
test
clc
movsl
mov
sub
sahf
sarb
mov
aad
or
sbb
sbb
xchg
stos
iret
push
fsubs
fimull
mov
jmp
lret
or
add
xchg
jmp
inc
sti
in
adc
bound
daa
call
ds
mov
jns
out
bound
fisttpl
mov
jne
xor
mov
ljmp
ja
negb
cmp
jne
jne
sbb
negl
xchg
call
inc
cld
mov
mov
and
shll
in
imul
sbb
call
inc
shl
pusha
push
fdivrs
jmp
xchg
imul
adc
pop
lds
aad
jmp
mov
push
aam
fimull
jae
lret
sbb
mov
push
or
subb
jb
sbb
and
cmp
sub
aas
jl
ss
in
mov
mov
mov
push
cli
daa
inc
addb
scas
jno
in
inc
cmp
push
clc
aas
outsb
in
sub
popf
xlat
clc
push
push
cmp
inc
or
pop
mov
and
add
sbb
push
test
ret
outsl
popf
pushl
dec
enter
push
lret
xorb
or
jbe
test
in
call
dec
aas
incl
pop
dec
scas
jbe
mov
sbb
pusha
adc
jmp
divl
stos
cmp
push
sub
jne
fldt
mov
stos
add
jo
repz
stc
ss
lret
cmp
or
int
repnz
mov
dec
xchg
test
inc
leave
pushl
std
incl
dec
test
mov
daa
in
out
adc
test
dec
pop
aaa
add
das
mov
jns
jmp
mov
in
sarb
add
fcompl
jno
clc
jmp
int
mov
lahf
xchg
inc
push
enter
es
mov
dec
mov
int
lea
jmp
jo
mov
imul
pop
xor
jo
push
loop
ffree
insb
fs
lahf
inc
les
cli
loope
orl
popa
xor
adc
mov
push
aas
pop
jbe
pushl
xchg
es
sub
data16
push
pop
shrl
add
sbb
mov
jmp
pop
pop
xor
cmpsb
jo
pop
cmp
jmp
push
or
repz
and
inc
mov
out
call
cld
call
lret
push
es
pop
add
lret
fmuls
aam
mov
lcall
inc
adc
sarb
mov
xor
sub
cmp
xor
jo
sub
fstpt
fadd
xorb
cltd
mov
aaa
cld
cmp
cmp
jnp
out
push
je
addr16
ds
mov
dec
lcall
outsl
fistpl
in
sbb
jnp
jbe
jo
mov
dec
fwait
dec
addr16
iret
inc
pop
pop
pop
ljmp
sar
push
cld
repz
mov
dec
outsb
gs
cmp
mov
and
lcall
aaa
xorb
dec
test
pop
test
or
lods
ja
mov
or
mov
sub
rclb
jmp
arpl
adc
test
dec
dec
jb
jno
sub
test
cmp
push
mov
xchg
repz
or
push
mov
adc
mov
mov
hlt
mov
lods
gs
pushl
cmpsb
cmp
ret
stos
jmp
mov
inc
jl
lahf
lret
push
mov
push
js
incl
xor
inc
xchg
stos
pop
dec
xor
in
mov
out
fsubs
pushl
in
dec
or
push
push
lods
daa
shlb
jae
lds
test
mov
mov
icebp
jbe
fsubr
mov
xorl
cmpb
call
dec
push
out
pop
lahf
orl
into
dec
pop
and
stc
test
sub
cmc
sar
call
sbb
sahf
mov
pop
mov
sarl
add
shr
mov
jmp
je
loop
popa
nop
mov
orb
ljmp
pop
mov
js
lcall
xchg
out
dec
test
aam
pop
push
rcrb
mov
inc
and
mov
mov
incl
mov
popf
leave
jmp
cmc
push
lock
xor
dec
cli
jmp
push
pop
adc
ret
push
addr16
decl
sbb
jae
bound
repnz
stos
jae
jnp
mov
jne
std
fwait
int3
cli
rclb
mov
push
pop
sub
mov
add
mov
rorb
popa
stos
fnsave
xlat
add
insb
push
mov
xchg
and
scas
xorl
lds
cmp
icebp
fdivrp
sub
pop
sbb
inc
add
lods
fldcw
movsb
xor
std
movsb
mov
inc
lcall
sahf
sbb
pop
pop
fdivrs
fs
push
lcall
lock
inc
in
loope
scas
call
jl
and
inc
in
shll
ficoms
cmpsl
inc
mov
cld
mov
pop
push
paddq
sub
rcll
rol
fcmovu
adc
add
rcrl
fsts
push
sub
xchg
ja
out
aam
and
les
add
mov
std
cltd
mov
mov
push
mov
sahf
jnp
dec
fnstenv
out
stc
xchg
ljmp
test
jmp
mov
icebp
mov
jo
dec
jge
mov
in
pop
nop
in
bound
fwait
mov
movsl
pop
adc
cmp
inc
lea
decl
lock
mov
fstl
arpl
pop
es
in
test
jae
ljmp
xchg
in
inc
xor
lret
outsl
les
push
dec
add
mov
xor
add
pop
mov
mov
sahf
cltd
cmp
cmp
cltd
push
sahf
rorb
push
into
add
pushl
fiadds
mov
or
in
adc
add
dec
mov
dec
lret
clc
jne
fdivs
in
xchg
and
fidivs
cmpsb
fdivr
fisubrs
pop
ja
mov
inc
adc
mov
adc
push
inc
fsubp
jg
call
push
mov
aas
mov
dec
shl
das
pop
lcall
mov
mov
xchg
bound
into
pop
xor
ljmp
jg
ffree
vmwrite
pop
mov
lds
mov
call
dec
fimull
rol
movsb
test
xorb
mov
xchg
add
jl
les
push
push
call
xchg
loopne
mov
mov
pusha
mov
push
fwait
mov
pop
adc
lret
andl
scas
jns
jle
int3
stos
and
inc
outsb
and
cmp
fwait
cmc
jae
cwtl
mov
lcall
jg
lcall
pop
lahf
and
xchg
mov
loop
fwait
and
or
inc
sbb
call
mov
subb
std
jle
sub
pop
mov
jne
test
or
test
inc
ljmp
sub
loop
insl
mov
mov
fidivrl
push
leave
mov
popf
pop
cmp
fdivp
push
cmpsl
sbb
sti
mov
or
rcrb
fs
mov
je
ret
jmp
ret
loopne
into
addr16
fnstcw
adc
pushf
outsb
sub
dec
cmpsb
pop
jle
fistpl
decl
lods
sbb
psubsw
test
fs
aaa
inc
popa
lods
negb
and
stc
mov
jmp
mov
push
xchg
sbb
pop
fbstp
mov
rorl
lahf
fnstcw
push
ret
cmp
les
pop
fsubs
sub
mov
add
into
pop
xchg
xchg
or
push
decl
shll
mov
add
mov
mov
pushf
aad
xchg
das
adc
pushl
aaa
mov
lret
xor
rorb
repnz
mov
push
cmp
loope
lock
cmp
pop
mov
push
xorb
imul
lods
ficoml
fnstcw
pop
loopne
frndint
addr16
ljmp
aas
or
subl
gs
in
pop
imul
xchg
ret
les
call
pop
adc
stc
mov
cmp
and
lcall
repz
jae
pop
xchg
rclb
jns
or
pop
scas
sub
mov
out
jg
mov
cmp
push
rcrb
mov
stos
dec
or
std
push
in
lret
jbe
stos
jle
adc
loope
jb
test
pop
movsb
fsubr
adcb
add
and
push
cmpsl
mov
push
ror
cmpsl
jecxz
loopne
xchg
rorb
cmp
test
add
jb
jge
inc
cwtl
mov
jnp
jg
jecxz
push
ret
jecxz
dec
decl
sbb
jo
jmp
add
xchg
add
gs
ficompl
push
push
inc
sbb
lret
mov
dec
dec
add
jmp
dec
int3
add
aas
or
negl
dec
in
push
mov
xchg
inc
push
sbb
inc
nop
incb
lock
inc
push
rep
xchg
shl
dec
test
bound
outsl
std
mov
xchg
hlt
ret
call
mov
dec
mov
and
std
incl
pop
popf
add
sub
movsl
inc
into
jo
int
jge
out
mov
or
jmp
mov
je
xchg
xor
cmp
pushf
or
sub
mov
loopne
outsb
dec
cli
lcall
xchg
inc
aad
cmp
adc
dec
div
ja
jg
add
xlat
adc
scas
repz
sub
movsl
and
inc
sarl
jl
mov
xlat
jne
jp
pop
cs
or
fdivrs
aaa
mov
xchg
jle
or
lock
lcall
out
mov
sub
test
dec
xchg
pop
and
mov
xchg
sub
cmp
movsb
xchg
outsb
xchg
jno
ret
mov
adc
rorl
jmp
ret
cmc
inc
dec
cld
push
test
fwait
mov
mov
or
and
incl
ja
or
jge
inc
or
out
aam
bsr
mov
mov
aam
jne
fwait
mov
out
push
and
xchg
ss
jo
imul
dec
rorl
addr16
xor
adc
and
popa
sub
inc
arpl
call
loopne
cmp
dec
sbb
xchg
pushf
test
nop
jns
mov
add
ljmp
dec
pusha
mov
or
movsb
adc
inc
repz
adc
call
mov
adc
push
out
bound
sbb
test
and
lods
mov
mov
jg
xor
or
sbb
pop
pushf
fwait
jbe
xchg
push
dec
outsb
cmp
andl
idiv
sahf
cmpsb
into
into
imul
sahf
bound
xor
cltd
push
xor
imul
fidivrs
mov
lcall
test
push
and
xchg
mov
inc
loope
lods
lods
mov
jmp
imul
mov
pop
test
and
push
imul
fwait
call
popf
outsl
cmovg
jo
push
mov
sbb
mov
nop
aas
fucomp
into
sub
mov
aad
mov
jns
and
lds
fidivl
into
or
aam
orb
mov
mov
dec
data16
or
mov
dec
bound
je
xchg
dec
or
in
jae
jo
and
or
ds
shl
xlat
and
lcall
push
fadds
xchg
adc
je
lcall
fs
aam
sbb
sbb
and
arpl
lahf
xchg
mov
test
sbb
add
scas
jbe
mov
mov
or
mov
xchg
ljmp
add
out
jae
or
mov
lock
aaa
xchg
lock
mov
pushl
je,pt
add
mov
mov
xchg
hlt
data16
xchg
movsb
orl
adc
cmpsb
pop
inc
dec
xor
push
lahf
jo
sub
push
mov
cld
jmp
ljmp
sbb
mov
mov
das
aaa
leave
mov
lock
mov
or
rolb
insl
jmp
push
push
fwait
xchg
aas
and
repz
adc
add
or
ljmp
pop
int3
lcall
xchg
sbb
cmpsl
or
xor
cltd
test
fnstsw
ss
stos
dec
lock
lods
cmp
mov
mov
xchg
and
cmc
mov
jmp
push
loop
enter
or
dec
sldt
lcall
shll
inc
movsb
xchg
xchg
dec
inc
pop
repnz
into
stos
add
jo
data16
call
push
ds
and
in
jp
inc
sbb
inc
movsl
fbld
idiv
sub
sub
incl
pop
inc
icebp
mov
jg
rcl
rol
pop
cmp
out
cwtl
mov
aam
xor
incl
scas
sti
out
sbb
mov
out
xchg
or
pop
xor
push
addr16
or
ljmp
fucomip
ret
lods
shlb
mov
movzbl
sbb
addr16
mov
bound
jg
clc
jp
mov
mov
lss
mov
cmp
and
pushf
jmp
outsb
sub
inc
stos
xchg
out
stc
dec
movsl
mov
cmp
das
push
mov
adc
xor
xchg
jnp
jmp
iret
push
out
pop
push
iret
fcmovbe
pop
sbb
sbb
and
fcmovu
or
incb
xchg
jl
enter
cmp
pop
bound
inc
jnp
jae
out
cmpl
lcall
add
cld
mov
and
sub
jge
pushl
inc
dec
cmp
out
or
or
push
or
push
aam
jns
aaa
clc
fcomps
outsl
jl
sub
fdiv
pop
shl
out
es
shlb
cli
incl
cli
divps
lahf
push
fldl2t
cmpsb
xchg
call
fdivrl
mov
xor
sub
and
ljmp
repz
cmp
xchg
dec
fcomip
sub
ljmp
outsl
fstl
jmp
push
out
mov
stos
jmp
lods
jns
cmp
dec
cmp
orl
rorl
das
push
inc
icebp
addr16
adcb
mov
sar
stos
or
mov
xor
pop
sbb
cmp
in
out
cs
std
xlat
xor
sub
insb
out
sahf
pop
or
incl
leave
andb
mov
cmp
adc
mov
mov
mov
loopne
and
stc
sub
decl
adc
ja
fsubp
sahf
out
xchg
inc
xchg
mov
mov
scas
xor
incl
daa
push
lret
pop
push
dec
repz
gs
mov
lret
push
mov
loopne
jecxz
fimuls
mov
pop
mov
cld
call
jp
stos
test
cmc
jecxz
fld
out
ss
mov
xlat
jg
call
lds
je
push
push
repnz
in
mov
ljmp
daa
pop
jno
inc
lcall
outsl
jne
mov
mov
movb
mov
sub
pop
je
xchg
mov
cmp
call
push
aaa
push
mov
or
test
mov
lods
jecxz
xor
mov
jmp
addb
or
adc
mov
adc
dec
adc
mov
jmp
decl
clc
xcrypt-ctr
cmpsl
lahf
inc
adc
enter
mov
les
jge
das
bound
stos
pusha
xchg
sbb
cmp
lret
in
adc
xchg
cmp
cmpsb
pop
jl
into
and
ds
call
out
test
mov
lret
movsl
adc
and
cmpsl
sti
lcall
les
call
jge
test
mov
xor
call
adc
push
jno
inc
add
inc
aaa
outsb
in
xor
adc
ljmp
arpl
jle
mov
adc
push
out
jecxz
rcr
pushf
push
jl
call
clts
cmc
lret
jb
ljmp
repz
add
pop
fwait
jne
scas
daa
notrack
push
mov
pop
xchg
inc
test
js
loope
test
cwtl
inc
dec
pop
mov
int
in
dec
pop
mov
fdivr
jmp
insl
push
xchg
mov
add
ja
push
sbbb
out
push
call
shrb
ret
test
popf
iret
bound
rol
fsubr
test
pushl
cmc
adc
repnz
repz
in
or
mov
inc
mov
stc
sbb
mov
mov
in
ds
int
jo
mov
fldl
cli
push
lahf
loopne
add
int
push
jmp
flds
lcall
lods
decb
shlb
inc
push
daa
pop
and
sub
pop
sti
xlat
jbe
adc
dec
lret
fidivrs
dec
cwtl
cmp
lcall
mov
xchg
movhps
mov
pop
movsb
test
pop
mov
insb
cwtl
shrb
cmp
and
push
xor
mov
xlat
mov
dec
adc
dec
insl
dec
dec
sbb
test
stos
pop
or
lods
sub
scas
fmul
push
pop
xor
mov
stos
mov
inc
or
xchg
push
in
sti
icebp
sub
icebp
push
mov
xchg
outsb
lea
xor
cld
jle
je
push
ljmp
and
push
lods
loope
out
cmpsl
mov
pop
mov
dec
nop
test
aaa
mov
ds
adc
ds
idivb
ss
addr16
dec
call
call
sub
lret
jecxz
pusha
sbb
adc
xchg
jmp
clc
pusha
cwtl
frstor
pushl
jno
xor
mov
cmp
and
rclb
aaa
add
cmp
jb
bts
loop
mov
and
sub
inc
lret
inc
scas
jg
add
decl
push
pop
aaa
enter
sahf
repz
movsl
sub
push
mov
rolb
push
sub
jmp
fidivs
mov
jb
xor
std
ja
xor
pop
insb
pop
call
leave
lock
arpl
mov
xor
nop
cmp
pop
add
push
xchg
test
pop
mov
rol
imulb
iret
pushl
icebp
loopne
cmp
adc
push
outsb
push
and
pop
loop
sbb
cmp
jg
lret
jmp
pop
pop
pop
pop
jae
cs
mov
addr16
pop
add
push
jle
or
addr16
jl
mov
ret
cld
xchg
outsb
repnz
bound
push
push
and
dec
sbb
es
pop
push
xchg
lds
dec
mov
inc
pop
sub
lcall
js
xchg
dec
add
mov
lret
or
leave
fdivs
in
jno
arpl
xor
jo
cmp
adc
pushl
ret
push
mov
mov
add
movsb
or
movsb
push
insw
mov
mov
pushf
mov
mov
jnp
push
loop
xchg
subl
sub
out
lcall
xchg
arpl
and
adc
mov
push
xor
cmp
incl
and
bound
daa
pusha
jmp
push
push
xchg
fwait
das
jne
test
int
aaa
insb
call
ss
mov
cli
inc
loope
sub
decl
dec
loopne
ja
jno
psrlw
stc
cmp
mov
ret
lcall
mov
loope
push
test
in
adc
scas
dec
pop
out
rorl
xchg
shlb
outsl
xor
ret
dec
xor
scas
mov
cli
fisubrs
mov
aaa
les
outsb
push
popa
xchg
mov
movsl
and
repz
les
ljmp
inc
inc
call
jb
sbb
mov
adc
dec
es
mov
hlt
mov
mov
and
into
std
das
xchg
les
lret
and
enter
dec
or
adc
cmp
mov
stc
ljmp
add
xchg
xchg
adc
adc
ret
out
incl
ret
dec
sahf
leave
dec
mov
ss
jge
xchg
xor
aas
mov
mov
inc
dec
decl
xchg
adc
popf
mov
pop
sub
dec
fwait
cli
sahf
ret
out
aam
ficompl
sub
pop
adc
push
icebp
mov
cmpsl
jecxz
es
ret
mov
bound
sbb
sahf
add
pushf
sbb
mov
inc
popf
sub
idivl
rcl
lea
jns
cmpsb
xchg
dec
in
in
lods
xchg
out
jmp
and
ret
and
pop
fisubs
adc
sahf
pop
inc
outsl
jmp
lcall
ljmp
mull
jg
and
out
mov
and
jg
mov
dec
mov
popa
jmp
inc
xor
pushf
add
jmp
lods
add
int
push
and
dec
add
rorb
lcall
in
mov
das
cli
call
sub
or
xlat
in
fwait
js
cmc
rcrb
xchg
lahf
add
fists
incl
dec
push
pop
xchg
loopne
pop
dec
cmpsl
push
call
push
adcl
adc
inc
add
add
popf
stos
stos
ret
add
jae
lret
negb
and
push
popf
aas
incl
outsb
lods
pop
hlt
lcall
rolb
movsl
not
mov
jb
jle
es
or
jbe
xor
push
shll
movsl
popf
sbb
cmpsl
pushl
or
mov
mov
xlat
mov
ror
pop
push
jno
jg
lcall
fs
mov
mov
in
mov
adc
jg
sub
jb
xor
mov
das
pop
fldl
data16
into
movsb
ja
push
mov
ficoml
popf
lahf
data16
jnp
mov
dec
insl
xchg
sbb
fisubs
ljmp
mov
sub
xor
xchg
jecxz
xchg
inc
aaa
xchg
aaa
add
xchg
jp
jno
ja
jne
or
and
fucomp
mov
mov
jg
lods
fwait
add
mov
pop
pop
mov
loop
inc
mov
mov
rol
cmp
xchg
in
ljmp
insb
push
pop
cmp
and
test
pop
lock
dec
pop
adc
or
sub
ja
or
stos
lods
bound
and
out
fwait
sub
popa
fnstsw
inc
xchg
or
scas
push
lods
and
clc
add
ret
xchg
push
outsl
lret
repz
lahf
jmp
cmpsl
xchg
sbb
sbb
icebp
ljmp
inc
jno
or
cmp
xor
cs
inc
aad
jmp
in
jo
xor
jmp
test
shl
xchg
movsl
or
adc
daa
mov
call
mov
clc
ret
add
movsl
cwtl
jg
insl
in
stos
scas
xchg
add
into
lods
jb
sar
cmp
test
adc
or
lods
fs
lds
mov
shll
decl
cmp
inc
push
xor
xchg
cmc
jp
mov
int3
add
js
add
stc
ljmp
push
lock
pop
sub
test
xchg
add
or
mov
sbb
sub
push
cld
jmp
aas
pop
lock
pop
data16
xor
imul
call
mov
sbb
lods
fistps
lret
pop
xchg
rcrl
sbb
popf
xor
mov
shll
or
xor
push
mov
lods
xor
xchg
mov
dec
das
nop
dec
mov
test
pop
push
fcomps
or
xor
ljmp
xchg
adc
stos
aaa
jne
stos
cmp
arpl
inc
insb
push
shrl
xchg
loopne
mov
dec
out
fsubrl
lods
cmp
sub
pop
and
dec
mov
mov
sbb
sar
filds
mov
jnp
sub
cmp
out
lock
mov
xor
incl
dec
test
xchg
scas
dec
mov
jle
mov
mov
into
js
adc
pushl
pop
pop
out
insb
sbb
scas
push
jge
outsl
test
xchg
push
jb
pop
jp
adc
jmp
sub
mov
pop
cld
rcrl
movsl
popa
cli
ljmp
xorl
mov
sbb
lret
lahf
mov
jmp
inc
leave
push
repz
cltd
int3
repz
inc
fstl
out
in
cltd
add
lcall
cmc
and
in
push
ss
out
and
jecxz
aas
push
mov
decl
mov
dec
mov
push
cmpsl
in
sub
jl
pop
jl
rcl
add
cld
pop
xchg
mov
gs
into
call
sbb
or
test
or
cwtl
scas
sbbb
fcomip
incl
inc
cld
push
popa
shll
inc
outsb
std
ss
cwtl
mov
int
sbb
call
je
push
push
loope
scas
movsl
sbb
push
add
cli
mov
lret
inc
leave
and
push
mov
ljmp
push
adc
loop
out
inc
mov
lret
pushf
inc
pushf
je
cli
data16
hlt
test
out
stos
fistpll
ljmp
mov
jmp
lock
sub
jnp
and
cmp
push
lods
ret
mov
mov
les
or
pop
cmp
movsb
pop
out
push
pop
mov
fcomip
dec
sbb
shrl
sub
pop
adc
jo
add
ljmp
or
xchg
jnp
aad
jbe,pn
jne
cli
and
dec
pop
and
push
insb
push
inc
or
jmp
push
xor
ja
push
mov
stos
addb
inc
repnz
stos
jae
bound
imul
out
aaa
and
jne
jo
imul
outsb
imul
add
xor
add
push
mov
out
orl
outsb
sbb
xor
mov
sub
js
xor
add
pushl
insb
push
push
outsb
popa
jo
push
jo
roll
dec
sbb
insl
xor
and
and
aaa
adc
sub
imul
push
jb
push
inc
ficoms
sub
dec
fs
mov
sub
xchg
push
add
insb
push
mov
fs
and
inc
popf
or
mov
pop
inc
xor
dec
push
and
cmp
lea
inc
jns
push
imul
popa
jb
sbb
and
push
es
ljmp
dec
ret
jne
or
sbb
or
dec
push
shll
dec
xchg
jo
or
push
sbb
out
add
int3
int3
cmpsb
roll
loopne
sub
ftst
dec
outsb
imul
insb
stos
sub
nop
in
cmpsb
sbb
add
divb
flds
sub
hlt
push
push
pop
dec
inc
icebp
inc
lds
adc
out
jae
ret
imul
push
push
or
fisubs
mov
rcrb
push
pop
js
outsl
ds
insb
jne
addl
data16
mulb
xchg
adc
xor
sub
sbb
test
lods
xorb
push
fildl
jo
pop
mov
xchg
push
daa
jae
pusha
loope
rcrb
in
or
mov
adc
gs
das
mov
jns
mov
inc
jae
lods
mov
fcoml
pushf
push
push
push
outsl
in
shl
hlt
fs
dec
mov
jo
dec
cmp
xor
adc
mov
xor
sub
flds
push
jo
and
dec
packuswb
pop
inc
cltd
jbe
pop
mov
mov
sbb
jno
leave
arpl
pop
imull
lods
insl
and
dec
popa
and
mov
xchg
std
inc
add
push
push
xor
popa
inc
sbb
fs
xchg
cmp
pop
popf
fcmovu
sbb
popw
push
gs
push
stos
push
pop
insb
subl
push
movb
and
add
lock
jmp
repnz
sub
test
in
push
dec
jae
in
fidivrl
dec
mov
dec
fistl
inc
cmovno
cmp
or
pop
mov
mov
andnps
cmp
or
in
jecxz
scas
fs
xchg
lods
xor
push
push
je
ja
mov
or
jg
insl
pop
mov
stc
ja
dec
mov
mov
cmp
cmp
and
inc
popa
es
jp
jmp
test
or
adc
shrl
sub
orb
jbe
ret
mov
pop
int3
outsl
jns
int
cmpb
dec
push
pop
enter
xchg
in
push
test
and
jno
jne
lods
pop
repz
add
aaa
stos
jns
inc
je
push
and
xlat
fildl
out
sti
or
and
inc
sbb
push
mov
sub
and
push
pop
ficompl
loope
pop
push
or
rcl
mov
add
inc
adc
jns
lods
jb
test
add
sbb
mov
sbb
and
inc
and
push
mov
push
jne
inc
push
adc
test
cmp
mov
or
push
jbe
xlat
or
add
cmpl
popa
popa
inc
mov
outsl
nop
push
sbbl
inc
or
inc
mov
rcrb
inc
xchg
push
outsl
int
pop
fisubs
inc
aaa
or
jns
cmpsl
adc
shll
je
or
jmp
mov
fwait
loope
jle
leave
and
rolb
gs
push
inc
and
subb
ds
push
mov
mov
inc
jne
loopne
adc
cmpsb
loopne
push
and
mov
arpl
sub
mov
push
inc
das
add
fstl
adc
adcl
jnp
mov
testl
imul
inc
sbb
fildl
es
dec
xor
loope
jbe
and
cmp
jae
wbinvd
and
xchg
pop
test
insb
cmp
subl
jno
test
lea
push
inc
fsubr
and
fcom
orb
outsb
out
dec
add
lods
popa
fbstp
jmp
fs
fs
inc
test
add
xchg
je
and
ret
lock
outsl
add
push
and
sbb
inc
sub
jno
sbb
inc
inc
push
insl
xor
jg
ss
inc
imul
pusha
fistpl
sahf
outsl
inc
pop
mov
arpl
mov
scas
ja
add
jle
nopl
leave
push
mov
mov
xchg
and
dec
jae
jno
or
xor
nop
popf
sbb
scas
mov
lods
pusha
cmp
mov
add
lods
push
imul
xor
xor
sbb
pop
inc
and
or
dec
push
shl
push
xor
inc
dec
push
push
pop
xor
push
adc
shlb
in
jmp
test
push
push
adc
and
dec
in
lods
cmp
pop
cmp
xor
scas
jnp
or
dec
outsb
dec
fildll
mov
fwait
dec
jnp
sar
pop
add
add
mov
dec
imul
movsb
dec
cmpsb
imul
dec
rcrl
mov
imul
or
adc
cmp
lock
clc
mov
jb
and
push
sub
mov
mov
outsl
bound
movsb
bound
add
inc
jb
add
insb
inc
jae
push
leave
nop
fcmovu
fiaddl
daa
push
imul
lds
inc
jo
sbb
xchg
js
and
push
sahf
adc
xchg
push
bound
mov
dec
jl
loopne,pn
imul
and
jle
pop
xchg
pop
andb
push
mov
or
sbb
and
movsb
pmulhw
in
andb
es
das
daa
sub
dec
adc
test
cmp
test
and
pop
xchg
mov
mov
test
sub
inc
push
std
call
or
mov
rcl
idivb
mov
xor
push
push
insb
mov
in
add
jns
xchg
sub
push
xor
xchg
repz
jge
mov
enter
push
nop
shll
and
pcmpgtw
sbb
and
fistpl
sub
xchg
rol
xorb
inc
sbb
dec
or
cmp
sub
adc
mov
lock
addr16
insl
pop
push
dec
mov
sbb
cmpb
cmp
and
and
lock
push
pop
push
dec
popf
jmp
or
bound
addl
sub
imul
add
mov
push
dec
out
outsb
xor
xor
sub
mov
fcompl
pop
pusha
lret
icebp
xorl
mov
icebp
adc
jo
outsb
call
pusha
add
mov
add
insb
and
dec
popw
lea
roll
or
mov
ret
in
fimull
mov
gs
mov
ret
test
stos
psrlq
shll
push
fs
pop
je
pop
cmp
sbbl
pop
ja
push
mov
lods
lahf
add
fcom
sub
inc
mov
js
adc
das
rorb
call
addr16
subb
push
enter
inc
out
adc
ljmp
mov
pop
xchg
dec
pop
dec
sub
ja
imul
mov
test
mov
dec
sbb
jno
pushw
mov
sub
jmp
iret
xor
lods
negl
movsl
sbb
adc
pop
ss
inc
push
push
inc
add
dec
dec
xor
or
pop
test
mov
inc
adc
sarl
add
adc
pop
xor
cmp
add
fsubrl
add
cmc
pop
adcb
push
jmp
add
mov
arpl
adc
insb
lods
movsl
insb
xorl
pop
dec
js
pop
dec
sub
push
cs
dec
add
and
add
and
sub
pusha
jb,pn
popa
xor
add
sub
sarb
js
bound
loopne
or
pop
dec
add
push
sarb
mov
push
xlat
jo
scas
and
mov
xchg
and
add
xchg
and
add
test
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insl
inc
add
add
