divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
sbb
push
neg
es
aaa
adc
pop
xor
or
outsb
add
nop
daa
adc
mov
pop
clc
or
pop
mov
int
mov
orb
and
cmpb
outsb
outsl
je
add
adc
xchg
and
and
cs
cmpsb
mov
shrd
popa
incl
lea
in
bswap
std
repz
xchg
mov
out
ud0
jmp
repnz
in
mov
idiv
push
pusha
ljmp
lret
cli
push
xor
out
xchg
cld
push
imul
lret
dec
testb
mov
dec
daa
loopne
add
or
or
in
or
aam
cmp
das
test
pop
add
mov
add
add
sbb
add
xor
push
and
inc
xor
push
mov
addb
mov
js
push
loop
fs
nop
das
push
pusha
push
add
pop
add
jg
subb
popf
add
les
fiadds
and
lret
shrb
ret
inc
or
lret
xor
inc
cs
mov
fistl
rcrb
xor
add
jb
test
push
jo
iret
repz
sbbb
inc
icebp
add
sti
dec
xor
nop
add
add
push
inc
add
loop
fs
lea
add
add
and
dec
jne
push
ret
sahf
add
jecxz
daa
mov
std
subl
rol
imul
sbb
in
or
sbb
push
push
xchg
ret
cld
jge
enter
fucomi
gs
mov
fisubs
sub
add
or
sahf
sarl
ja
cmp
inc
sysexit
or
call
push
sub
in
test
je
into
int3
loope
sbb
push
pop
mov
or
outsb
add
hlt
mov
insl
adc
adc
fidivrl
hlt
jl
les
jo
push
icebp
xor
lahf
push
adcl
or
cltd
push
sbb
add
mov
mov
push
push
dec
stos
xorps
aad
rcll
sbb
mov
call
nop
fdivs
lods
xchg
inc
lea
xchg
ret
les
and
mov
in
cmp
jbe
mov
imul
aad
push
sub
xchg
jp
pop
popa
or
jge
cmp
nop
xor
roll
stos
push
mov
lret
adcb
insl
pop
lret
jns
xor
mov
mov
inc
dec
cltd
loopne
call
pusha
mov
pop
outsb
shlb
dec
sbb
mov
clc
pushf
and
cmp
or
xor
sarl
out
outsl
push
inc
imul
add
adc
lds
bound
pop
mov
sti
subb
add
in
inc
dec
pop
or
jbe
cmp
jne
in
mov
loopne
mov
cmp
dec
or
out
shlb
mov
and
rolb
xor
imul
add
xchg
add
dec
xor
imul
or
mov
adc
push
push
push
mov
sub
push
or
pushf
out
mov
mov
leave
push
fcoml
mov
and
int3
pop
add
xchg
dec
jmp
push
push
test
push
outsl
jae
adc
push
clc
xor
sahf
jp
loopne
movsb
je
pop
push
ret
dec
sub
pop
pop
pop
xchg
sbb
sub
lea
pop
mov
and
sbb
push
sbb
or
movsl
sub
test
push
mov
jo
sbb
aam
sti
clc
das
jp
pop
inc
test
movb
dec
adc
and
add
push
mov
aam
xchg
jo
dec
out
or
pop
mov
imul
sbb
adcl
or
jnp
icebp
or
andb
add
dec
adc
mov
jecxz
imul
dec
lock
or
adc
add
popf
ss
jmp
xlat
hlt
or
loope
push
inc
repnz
push
pop
movsl
mulb
mov
mov
and
dec
jge
and
xor
in
push
test
jae
aas
adc
addr16
lret
popf
outsb
sub
sbb
add
jnp
xchg
push
jmp
mov
dec
call
insl
lock
push
push
insb
fdiv
sub
add
and
inc
lahf
push
mov
inc
pop
push
aam
enter
cmpl
hlt
add
or
movsl
or
add
jl
sub
mov
lcall
xchg
stc
jp
inc
addr16
push
lea
inc
cmp
sbb
cmc
xlat
pop
jp
push
or
inc
subl
call
popl
pop
and
pop
or
insl
icebp
xchg
sbb
test
ja
and
sub
cmpl
jnp
ret
or
data16
sbbl
push
add
jl
adcl
imul
pop
call
sahf
movsb
mov
add
mov
call
int
add
les
xchg
and
inc
add
scas
add
dec
enter
xor
add
lret
scas
adc
sub
ret
jecxz
enter
clc
inc
push
xchg
clc
and
cmp
shr
mov
sub
stos
sysret
jle
pop
push
call
pop
sub
clc
call
xchg
lea
lea
xor
mov
or
adc
ret
cld
nop
lods
call
sbb
jmp
mov
add
loopne
ja
dec
inc
lock
ss
call
pop
jge
dec
adc
call
shrb
mov
or
ds
ss
ja
pop
mov
xchg
xchg
xchg
sbb
icebp
ja
sbb
push
inc
into
pop
in
nop
xor
inc
dec
dec
ror
mov
loopne
add
adcl
add
mov
xchg
mov
shrb
sbb
sbb
mov
cmp
adc
and
mov
push
jbe
in
shl
or
jp
hlt
and
sbb
cmpsb
xlat
pusha
cmpsb
rolb
xor
pop
insl
loop
clc
sbb
repnz
xchg
aad
or
add
pop
testl
or
mov
xchg
mov
push
jecxz
add
out
mov
add
aad
test
push
ret
shlb
sbb
fstps
aas
insl
jbe
push
test
or
push
negb
push
pop
lahf
ret
lods
mov
movsl
gs
pop
or
push
js
pop
shlb
bound
cmc
xchg
hlt
push
fistl
xchg
mov
sub
add
popa
dec
or
push
adc
pop
loop
jo
and
cmp
mov
mov
push
pop
ss
pop
sbb
cmp
xchg
xor
aam
push
pop
call
fiaddl
shll
xor
lock
in
xchg
sbb
push
sbb
je
add
sbb
sbb
loop
fsubs
das
or
mov
dec
cmp
dec
adcb
lock
popa
movsb
mov
sbb
shll
pop
pusha
push
int3
call
push
cmp
adcl
jmp
cmp
add
jp
sub
add
or
xchg
inc
or
and
add
or
out
or
popf
dec
fcompl
jb
call
inc
mov
push
pop
test
inc
cmp
divl
addr16
xchg
xchg
test
mov
jne
push
lea
adc
inc
jno
movsl
inc
jbe
cmp
mov
add
xor
test
das
and
mov
scas
sub
daa
shlb
fcmovnbe
jbe
lods
add
cmp
xchg
add
cmpsb
imul
dec
mov
bswap
inc
das
mov
hlt
ficoms
xor
fdivr
mov
pusha
imul
sbb
mov
outsb
adc
jno
decb
mov
inc
psubsw
push
lea
mov
aas
dec
jo
xchg
xor
call
sub
dec
mov
mov
rorb
adc
and
and
or
push
adc
mov
mov
pop
mov
xor
repnz
enter
bound
mov
rep
xor
inc
rep
push
adc
pop
mov
xor
arpl
je
ss
fisttpll
aas
mov
mov
cmp
jne
es
aas
test
push
add
sub
sub
repz
aad
rorb
int3
mov
mov
stos
push
pop
lahf
pushf
xchg
pop
pop
inc
rclb
scas
js
sub
mov
inc
mov
push
xchg
sbb
dec
outsl
push
jb
ret
dec
je
ljmp
ljmp
fadds
stos
je
popa
pop
and
dec
add
andb
je
mov
imull
fistl
sbb
je
mov
subb
sbb
mov
mov
insb
inc
sbb
nop
or
jp
leave
push
xor
repnz
xchg
jbe
push
sub
xchg
pushf
stos
adcl
imul
rcrl
push
mov
lret
adc
fxch
mov
push
loopne
dec
aad
pop
loope
xlat
dec
dec
hlt
sbb
repnz
js
mov
fwait
sahf
ret
std
sub
pop
sarl
enter
push
adc
pop
dec
add
push
or
add
and
scas
dec
adc
call
cwtl
push
addb
push
xchg
pushf
add
and
cmp
jle
mov
and
jmp
adc
jp
cs
dec
pushl
push
sub
loopne
cmovbe
dec
in
in
push
add
xchg
mov
push
and
pop
pushf
pop
cs
cmp
inc
xlat
or
mov
pop
dec
sub
xchg
cltd
mov
or
jge
cmp
or
nop
dec
in
addl
mov
push
pushf
lret
enter
pop
xor
ret
test
insb
cmp
adc
leave
sub
adc
ds
jl
stos
xor
into
xchg
lods
inc
rcr
in
sbb
xor
mov
mov
pop
mov
cmp
popl
je
mov
cltd
je
inc
mov
mov
mov
cmp
pop
mov
jno
jne
je
in
xchg
in
in
in
imul
mov
psubusb
mov
adc
popa
sbb
mov
aad
cmp
push
lds
mov
mov
imul
es
cmpsl
int3
pop
mov
adc
push
fists
outsl
ret
dec
sub
xchg
jp
sbb
jne
mov
out
inc
sbb
jne
lods
lods
sub
outsb
push
push
cmp
fimuls
sbb
push
jbe
aad
add
sbb
push
ds
mov
mov
cmp
mov
xor
popa
xchg
cmpsb
adc
jmp
xor
push
mov
inc
faddl
push
aam
enter
add
data16
mov
inc
sahf
les
popa
enter
jae
out
test
aad
mov
lods
dec
xlat
push
push
mov
jecxz
cmp
sub
push
jg
add
dec
lea
jb
add
in
insb
pop
jns
dec
adc
or
and
add
cmp
cmp
add
in
add
inc
push
cld
push
jne
jl
idivl
jecxz
mov
lods
adc
pusha
mov
arpl
cwtl
mov
sbb
rcll
sahf
andb
popa
in
jne
sbbb
add
or
rcrb
dec
pushf
pop
lea
inc
sbb
or
out
lea
gs
ljmp
push
add
add
cmp
shr
enter
rolb
aaa
sete
mov
je
sbbl
sub
dec
cmpxchg
sbb
inc
and
jmp
inc
inc
xchg
popa
inc
dec
or
adc
je
or
ss
mov
je
mov
push
lock
leave
ret
cmp
adc
or
loopne
inc
inc
cmpsb
and
or
inc
and
inc
push
mov
jmp
or
jmp
aam
stos
mov
fs
loopne
mov
push
pop
popa
adc
xor
add
dec
mov
pop
stos
cld
lcall
pusha
popf
rorl
imul
jmp
cmp
nop
add
or
pop
pop
clc
push
mov
add
imul
les
push
push
test
jns
lods
jbe
ror
inc
inc
jne
xor
jnp
rcrb
nop
push
add
outsb
orb
add
mov
lods
xor
or
push
or
adc
fnsave
and
pop
lock
rolb
hlt
repnz
mov
dec
lock
dec
mov
xor
xor
out
outsb
sarl
add
pushl
js
test
or
jnp
mov
out
xor
stos
std
std
mov
cmc
movhps
shrb
cmp
adc
inc
sarl
cmp
call
mov
pop
mov
sub
fidivrs
jmp
mov
dec
xor
sub
testb
mulb
leave
dec
adc
dec
mov
pop
jns
push
fdivrl
out
mov
std
dec
jg
sub
nop
push
arpl
add
insl
adc
cmp
adc
jne
cmp
push
jbe
test
add
cmp
add
cmp
shlb
mov
or
add
jo
push
mov
jnp
out
push
sarb
adc
mov
test
push
inc
sub
lock
pop
out
or
int
mov
sub
or
sub
xchg
mov
jmp
cmpsl
in
jp
les
xor
lock
ss
jae
loopne
inc
xor
int3
lods
call
loopne
aam
inc
mov
push
mov
pop
add
adc
xchg
adc
push
out
or
cmp
les
mov
push
cld
popf
cmp
shll
dec
push
sbb
xor
cld
fildl
cwtl
push
mov
in
int
push
push
call
pop
jge
mov
ret
sub
inc
outsb
fwait
jo
adc
sub
decb
sbb
sbb
xchg
rorb
xor
ret
push
cmp
sub
or
enter
outsl
jne
inc
xorb
jmp
or
pushl
add
addb
in
pop
mov
and
or
or
xor
sbb
cmp
cmp
data16
fstl
mov
push
inc
mov
sbb
ret
push
and
add
fs
mov
icebp
sbb
push
jne
mov
rorb
mov
add
fdivs
adc
or
dec
in
xchg
mov
data16
sbb
pop
repnz
add
xchg
mov
sbb
cmp
jl
pop
jne
mov
jmp
or
pop
shll
sbb
or
or
sub
es
or
pop
xchg
add
lahf
dec
xchg
cmpsl
pusha
pusha
push
xor
push
mov
sub
push
lea
and
adcl
mov
sbb
addb
add
jne
in
call
out
pop
dec
fst
into
loope
xchg
ljmp
sbb
push
call
incl
mov
cmp
add
nop
add
call
nop
imul
cmpsl
sbb
mov
fst
mov
mov
adc
push
mov
lea
inc
fs
adc
xchg
stos
fistl
jnp
aaa
push
fucomip
cmp
je
cmp
jbe
pop
push
pop
push
movsb
xchg
jne
adc
inc
cld
mov
scas
and
push
and
std
leave
jo
in
pop
jbe
or
push
jnp
sbb
cmp
testl
insb
dec
subl
dec
push
jo
jo
loopne
shlb
jae
adc
xor
pushf
loop
data16
inc
jmp
inc
add
imul
shlb
add
xchg
shll
test
loope
jb
clc
mov
add
and
mov
and
xor
test
xor
jbe
jl
mov
jbe
fwait
jmp
push
mov
call
jo
push
sbb
cmpb
js
in
mov
into
sbb
sar
lds
lods
sbb
inc
adc
pop
lcall
lods
stos
loopne
jno
mov
je
push
xor
pop
ss
xchg
xor
test
dec
aad
mov
in
loop
push
push
sub
jg
cmp
xor
push
or
fs
and
pop
sbb
aas
cs
push
mov
aam
xor
sub
mov
cmp
lods
dec
pop
mov
mov
jmp
push
rol
aas
cli
call
aaa
popa
adc
and
faddl
push
dec
mov
shlb
dec
je
xor
aaa
in
jae
js
push
push
movsb
push
cmp
cmpsb
imul
data16
push
add
push
sub
mov
shrl
or
or
mov
int
lods
shrl
fmuls
mov
enter
add
lock
jb
scas
roll
push
es
mov
das
mov
xor
lock
dec
testb
hlt
push
push
fsts
jo
adc
jne
cmp
call
cmp
push
adc
cld
push
mov
or
cwtl
pop
mov
sub
dec
or
adc
add
sub
movl
sub
mov
dec
push
inc
pop
cwtl
loop
mov
out
call
push
pop
mov
rcrb
call
mov
jmp
push
imul
pop
addr16
insl
lods
icebp
jmp
sbb
push
mov
push
dec
cld
jne
into
xor
loope
inc
addr16
ss
movsb
pusha
push
cmp
jne
push
and
sbb
and
or
je
int3
jecxz
xchg
andl
mov
jns
lds
mov
jmp
nop
or
sbb
xor
add
sbbl
sarl
icebp
call
pop
mov
mov
inc
call
cld
push
aaa
mov
push
unpcklps
lods
xchg
push
mov
int
xchg
add
movsb
xor
mov
sbb
ljmp
mov
push
push
stos
ret
negb
sti
sbb
nop
push
dec
xor
mov
jmp
jmp
mov
pop
xorb
movsb
inc
or
xchg
xor
je
pop
push
adc
movl
imul
fadds
test
fdivrl
std
jmp
inc
out
xchg
jne
add
push
call
insb
out
and
in
movsb
jmp
js
in
jb
sbb
test
fnstenv
mov
mov
adcl
xchg
pop
add
cmp
clc
xor
xor
icebp
mov
sub
adc
movsl
adc
lret
mov
bound
call
pop
and
fcompl
adc
push
js
push
sbb
push
insb
sbb
jo
or
mov
cwtl
or
insl
mov
or
cmp
test
test
sahf
addr16
stos
or
inc
loopne
fs
pushf
adc
mov
mov
inc
mov
mov
andl
cmp
jg
push
dec
lea
pusha
mov
or
call
lret
xor
add
pusha
cmp
ret
insb
adc
nop
push
decl
adc
scas
clc
or
inc
inc
dec
jne
movzbl
add
stos
push
push
add
xor
movsb
nop
outsb
lret
mov
inc
faddl
or
or
jecxz
stos
incl
rclb
dec
sub
dec
xchg
es
add
mov
lods
jmp
xchg
aas
lods
and
adc
cli
sub
fildl
add
cmp
mov
jmp
mov
lea
inc
xor
inc
pop
push
xchg
rorb
testb
or
rcrb
iret
sub
and
xor
add
lods
fs
ljmp
sbb
xchg
daa
sahf
sbb
nop
movsb
adc
push
xchg
lock
vandnpd
popa
es
sub
aam
mov
jp
outsb
movb
add
lds
andb
stos
push
mov
push
and
jle
lds
dec
daa
dec
mov
cmp
andb
aas
enter
add
roll
mov
jge
lock
xchg
adc
pop
push
push
add
inc
shrl
mov
mov
add
lods
or
jp
shrl
rcll
nop
sbb
add
inc
das
popa
adc
mov
sarl
add
mov
shr
xor
xor
and
rcrl
imul
add
loopne
lds
add
shrl
adc
test
mov
add
nop
test
cmp
daa
and
rcl
mov
adc
or
cmc
xchg
push
mov
sub
popa
pusha
andb
sbb
lahf
roll
and
jp
jle
mov
out
out
in
inc
callw
pop
call
call
jle
cmp
dec
aam
sti
mov
mov
push
jns
cmp
call
cmp
js
dec
adc
mov
adc
fucomi
fildl
sarb
fdivrl
cmp
or
and
add
idivl
pop
psubsb
add
call
mov
scas
pop
jmp
pop
test
je
cmp
dec
xor
jmp
mov
xor
xchg
jno
mov
sarb
insb
loop
rolb
addr16
loopne
xor
jecxz
pop
push
into
cmp
xor
fnstenv
adc
sbb
lds
shlb
dec
xor
push
sbb
sbb
push
push
xchg
sbb
lcall
or
mov
leave
test
and
and
sahf
or
dec
mov
push
jo
sbb
add
mov
mov
inc
fiadds
mov
dec
incb
cmp
es
cmpsb
add
fisttpll
and
ljmp
mov
jle
cmc
shll
and
sub
es
orl
fisttps
fcmovnb
jmp
push
sbb
mov
and
or
in
ficomps
jl
and
ret
xchg
int3
test
inc
push
xchg
js
sbb
js
push
push
ror
fldenv
daa
imul
cs
xor
add
jae
dec
push
sbb
ror
push
ss
add
loope
sbb
sub
enter
push
xchg
pop
dec
arpl
clc
aaa
movl
arpl
movsl
adc
and
and
test
dec
call
or
inc
es
mov
pusha
inc
ja
inc
push
push
dec
enter
xchg
pop
shrb
and
inc
loope
test
dec
inc
rcrl
cmp
mov
and
nop
fnstenv
and
inc
adc
rolb
test
test
mov
test
inc
ss
test
cmp
lret
into
imull
inc
lods
lret
call
nop
sbb
out
mov
sub
fsts
imul
out
cmp
cs
pusha
nop
push
in
nop
insb
dec
out
je
mov
or
out
rcll
mov
xchg
xor
sub
cmp
repz
adc
add
pusha
movsb
out
pop
orl
jmp
push
xor
shl
cmpsb
mov
pushf
daa
mov
adc
lock
popf
divl
daa
pop
nop
add
and
dec
mov
pop
outsb
add
les
mov
repz
push
mov
ror
mov
fisttps
and
inc
cld
or
insb
dec
out
push
adc
mov
fildl
or
dec
adc
inc
push
or
cmpsl
leave
adc
lock
mov
mov
insb
xor
cltd
adc
dec
or
idivl
pushf
push
pop
jmp
cmp
je
mov
cmc
inc
mov
repz
lahf
ret
lea
adc
add
push
fildl
pop
add
iret
in
in
add
add
in
rclb
aas
or
jo
cmp
je
xchg
add
and
add
xor
push
push
push
gs
cmp
pop
pop
inc
sub
out
or
xchg
or
xchg
mov
or
add
jb
iret
or
fisttpll
lret
rorl
mov
lcall
in
push
inc
or
mov
push
sysenter
xchg
or
rdmsr
adc
mov
pop
adc
or
jns
scas
notb
cmp
nop
xchg
adc
sub
stos
add
adc
cmp
mov
push
adc
fs
push
cs
addr16
pop
pop
and
sbb
xchg
sbb
mov
and
sbb
sbb
sbb
dec
sbb
je
push
sbb
xchg
cmp
sbb
xor
sbb
pop
push
push
inc
negb
icebp
incl
jns
jne
add
add
sub
cmp
sar
pop
movl
xchg
and
lods
decb
sbbb
cwtl
xchg
push
in
push
in
imul
rcl
ret
cmp
xor
mov
out
mov
in
aas
sub
sbb
sbb
adcb
repnz
xor
jmp
and
ljmp
jmp
jmp
or
in
fsubp
aad
in
xchg
aad
in
cmp
xchg
addr16
mov
out
add
sbb
fisubl
int
je
lock
pop
leave
sbb
das
xchg
stos
mov
adc
repz
std
hlt
scas
test
hlt
imul
std
and
cs
cmc
cmp
xchg
cmp
mov
sbb
xchg
pop
enter
clc
clc
mov
clc
or
push
repnz
and
cli
and
enter
sti
fcoml
cld
cld
cld
je
cld
leave
jnp
adcl
mov
xor
fsts
xor
inc
ret
xchg
mov
shll
and
xor
stos
mov
pop
jmp
xor
jecxz
jecxz
xchg
in
fsubp
xor
push
cmc
mov
idivl
loopne
popa
inc
mov
aam
pop
insl
nop
cmpsb
or
out
xchg
scas
dec
pop
push
call
lods
dec
xor
or
dec
jmp
jmp
pop
push
and
in
cltd
or
jmp
lret
cli
out
out
inc
xor
mov
and
cli
cli
dec
jae
and
inc
scas
ss
sbb
cmp
test
mov
aad
div
mov
xchg
nop
mov
jb
dec
xor
push
stc
sbb
rclb
sti
xchg
in
mov
cld
jmp
sub
stos
mov
and
or
aad
inc
pushf
inc
xabort
inc
lcall
loop
inc
xor
arpl
loope
repnz
clc
and
and
clc
or
aad
out
fdiv
out
leave
and
mov
jb
pusha
or
pop
insl
nop
ljmp
pop
push
loope
notl
imull
daa
or
dec
push
popa
imul
mov
testb
nop
testb
repnz
inc
xchg
pop
push
and
loope
testb
and
jns
lcall
add
mov
lea
clc
clc
cmp
jmp
pushf
mov
cmp
and
mov
sbb
fwait
and
cli
hlt
or
sub
xchg
stos
repz
add
cmpsb
or
adc
lock
sti
mov
loope
in
iret
loope
jp
in
repnz
hlt
cmp
push
cmp
mov
sbb
in
orb
in
repz
xlat
paddq
jb
pusha
leave
mov
or
xchg
cmpsb
jmp
and
rdmsr
inc
mov
cs
out
in
mov
in
mov
cmpsl
repnz
shl
cmp
icebp
icebp
das
xchg
sbb
mov
repnz
nop
pop
repnz
cld
icebp
cmc
cmc
ss
pushf
mov
cmp
lock
cwtl
icebp
int
andb
stc
stc
leave
or
mov
scas
add
icebp
movups
jne
pusha
or
lock
scas
mov
test
jp
jmp
arpl
mov
push
push
sub
ffreep
push
inc
cmc
push
xchg
jo
loope
inc
jns
scas
idivb
push
add
pop
xchg
sub
jne
mov
pop
jb
lods
ret
jne
jbe
mov
stc
xor
jmp
cmpl
add
and
dec
ss
imul
and
and
jg
dec
int3
dec
push
nop
push
out
or
dec
push
aaa
or
insb
ds
push
add
insb
ss
out
dec
sub
push
jecxz
repz
jns
cmpsl
fldenv
sbb
lcall
push
in
xchg
gs
cmp
jns
dec
outsb
or
mov
push
push
dec
inc
hlt
xchg
push
mov
orb
and
lea
inc
cmp
and
inc
lret
test
fnstcw
push
dec
push
mov
or
adc
lods
jle
inc
and
fsubs
push
and
dec
dec
inc
jmp
sbb
dec
aad
xor
push
movsb
sub
push
mov
ficoms
cmp
aaa
sub
inc
jecxz
ss
xor
sub
mov
mov
daa
test
add
push
sbb
ret
addb
aam
mov
and
pop
jmp
dec
and
add
inc
push
push
push
push
and
nop
pop
fsubl
call
dec
dec
mov
jno
sbb
lret
adc
jmp
adc
sub
xor
or
cwtl
sub
mov
push
push
push
jno
cmp
adc
mov
jno
cmpsb
cwtl
and
pop
xor
stos
adc
inc
mov
or
adc
cmp
psubsw
jle
cmp
sub
xchg
mov
jb
adc
subl
jbe
dec
ret
shr
inc
add
mov
movsl
aam
call
ds
es
add
es
pop
jb
push
inc
lds
inc
mov
jo
sbb
pop
add
sbb
rorl
push
xchg
and
mov
mov
inc
and
mov
aaa
cltd
sbb
inc
push
adc
rclb
inc
and
inc
mov
pop
mov
mov
push
add
sbb
adc
dec
mov
and
and
inc
mov
xor
cltd
xchg
gs
add
pop
inc
popf
add
mov
fnstenv
test
xor
rcll
add
mov
push
fimuls
out
xchg
lahf
imul
imul
mov
mov
sbb
xchg
jg
adc
cmp
loop
aad
dec
out
inc
jp
jb
xlat
adc
sti
iret
pop
dec
andb
daa
inc
jb
push
lahf
cltd
xchg
push
xor
dec
push
lcall
and
sahf
adc
and
xchg
rorb
mov
sbb
das
xchg
aaa
fbld
push
xor
lahf
mov
in
adc
lahf
jl
xchg
or
rcll
jmp
xchg
jmp
cmpsb
add
sub
lahf
outsb
dec
cs
outsl
pop
and
dec
nop
lahf
sbb
fisttps
xor
add
es
je
sub
or
out
or
in
adc
push
lds
lahf
fwait
imul
adc
jmp
push
imul
inc
pushf
pushf
pushf
xor
cmp
sub
push
test
movsb
push
imul
push
out
mov
jecxz
inc
outsb
cmpsb
sub
lahf
mov
mov
cs
lahf
mov
cwtl
lahf
sbb
pusha
adc
or
xor
lahf
xchg
es
adc
adc
dec
andb
fists
lahf
or
in
mov
dec
pushf
inc
rcll
sbbb
mov
xor
cmpsl
cmp
jmp
fsubl
mov
xor
aam
xchg
loope
test
or
jmp
xor
aad
call
dec
sahf
push
and
sahf
loopne
mov
sbb
fs
push
push
outsl
mov
xor
cmp
jp
dec
in
dec
ljmp
pop
jp
movsb
mov
mov
and
rorb
cwtl
test
dec
push
enter
xchg
push
cmp
pop
sbb
mov
push
push
cmp
xchg
push
pop
int
pop
std
lods
dec
cmpsb
dec
nop
mov
push
nop
xchg
xchg
pusha
xorl
arpl
dec
sbb
in
and
sub
fiaddl
or
inc
enter
xor
jp
sbb
in
inc
enter
nop
clc
mov
shlb
adc
hlt
xor
xor
into
fnstenv
cmc
pop
and
xor
rolb
andb
add
sub
or
fists
hlt
jle
loop
movsb
and
xor
or
decl
inc
dec
dec
mov
xor
xchg
add
xor
and
inc
fcomps
mov
lods
jo
sub
es
sbb
fs
movsb
xchg
or
add
loopne
dec
dec
xchg
mov
cld
add
and
daa
sub
jmp
fildll
popa
fsubs
add
inc
cmp
nop
jb
movsl
and
es
test
in
test
orl
cmc
ds
push
inc
mov
fndisi(8087
mov
movsb
mov
inc
nop
cmp
dec
repz
jnp
push
bound
pusha
push
cmp
in
aaa
popa
aas
ss
movsb
loope
jns
je
sub
add
pop
xchg
jmp
add
cwtl
mov
or
inc
test
inc
adc
dec
cmp
jp
sbb
cmp
int3
xchg
sbb
into
dec
scas
je
sbb
vorps
fnsave
daa
dec
mov
or
cmp
pop
arpl
shlb
shlb
push
sub
mov
sub
and
mov
or
pop
fisttpl
or
jmp
lcall
xchg
scas
subl
mov
adc
int3
xchg
sub
mov
xor
cltd
xchg
inc
push
loopne
or
test
add
sub
sub
push
and
mov
mov
hlt
test
lret
das
je
dec
mov
loopne
mov
mov
inc
ja
push
sbb
lahf
call
cmc
dec
sub
int
cmp
sub
push
stos
pop
push
dec
je
sbb
cmp
nop
imul
sub
loope
or
lcall
or
aam
sbb
xor
adc
int
sub
fiaddl
xor
sub
shlb
shll
loopne
sub
cmpsb
insb
mov
sbb
sub
jae
xor
sub
and
inc
leave
loopne
and
pusha
scas
test
shl
pusha
cmpsb
sub
outsb
rorb
cmp
adc
sub
xor
rolb
sub
nop
dec
push
xor
shl
ss
sub
xor
inc
adc
xchg
iret
pop
stc
shll
adc
shrb
dec
jp
mov
loopne
xchg
rcl
data16
jno
mov
shrl
jnp
fldl
sub
sub
hlt
dec
inc
sub
xchg
sbb
fmul
xor
xchg
sub
sub
mov
cmp
aaa
rcl
cmp
inc
je
faddl
mov
or
dec
rorb
xor
cmp
push
xor
sub
cwtl
imul
jmp
ljmp
imul
sbb
lcall
pop
movsl
test
sub
push
ds
pop
cmc
bound
insl
sub
sub
imul
cmpsl
sbb
and
nop
ret
bound
push
mov
mov
push
sub
sub
and
add
dec
xor
shrb
lcall
and
pop
cs
cmpsb
and
out
into
mov
xor
push
sbb
sub
sbb
lcall
cmpsb
sub
and
inc
add
jecxz
adc
mov
jmp
dec
cmp
aam
cmpsb
mov
rcl
inc
mov
aam
inc
aaa
orb
xor
pop
add
rcl
sbb
push
dec
inc
push
aad
out
adc
outsl
cmpsb
mov
imul
xor
push
cmp
add
int3
sbb
lock
xor
sub
xchg
push
mov
xchg
or
aad
xchg
cmp
and
sub
fucom
pop
int
je
mov
xor
fcmovbe
dec
xor
or
mov
add
mov
cmpsb
sub
xor
sub
or
xchg
je
imul
sub
aas
mov
jmp
push
dec
cld
add
sti
lret
inc
cmpsl
rcrb
sbb
mov
dec
sub
jbe
or
sub
pusha
push
loopne
cmp
xchg
and
adc
or
cltd
xchg
sub
ret
imul
jp
jmp
adc
inc
pop
orb
push
mov
je
rorb
lods
fisubrl
rcl
sub
ds
js
movsl
xor
sub
xor
adc
sbb
sbb
sub
cmpsl
popa
cmpsb
mov
test
cmp
mov
mov
mov
mov
movsb
sbb
xor
fs
inc
push
fs
pop
dec
dec
cmovp
pop
cmp
lcall
sti
xor
adc
rcl
lea
popa
jo
jge
xor
lods
cli
cmp
cmp
daa
adc
xchg
sbb
outsb
sub
jno
jo,pt
jle
mov
jmp
jbe
cmpsl
jge
aaa
imul
and
jecxz
aaa
dec
sub
push
lds
icebp
mov
repz
lds
pop
xchg
mov
xlat
add
inc
xor
push
mov
mov
pop
ret
sub
pop
out
inc
push
mov
inc
shll
jbe
into
inc
cmp
ret
mov
and
rcll
jbe
or
add
movl
ja
rolb
aad
in
add
pushf
jnp
add
jl
dec
inc
pop
nop
popa
inc
pop
and
lock
in
pop
push
scas
imul
fstpl
sbbb
xchg
add
dec
enter
jae
rcll
push
mov
pop
add
fs
xor
or
mov
push
cmp
fmull
ret
jo
pushf
or
sbb
fs
xchg
pop
mov
jl
pop
add
push
and
and
mov
push
xchg
into
fbstp
mov
out
dec
test
dec
rcr
imul
add
push
dec
insb
cmp
dec
push
bound
dec
sbb
sbb
adc
mov
jb
jae
popf
push
sahf
push
cwtl
xchg
inc
dec
mov
inc
dec
push
inc
pop
leave
ret
inc
imul
inc
cmovns
pop
mov
rolb
jl
pop
sub
jnp
in
cli
dec
cmpsl
rolb
mov
dec
nop
rolb
dec
nop
dec
mov
movsb
xchg
xchg
jo
inc
mov
pop
stos
dec
nop
fsubrl
pop
sub
es
xor
and
pop
add
and
pop
jb
shrl
fiadds
out
or
xchg
inc
dec
ret
cmp
dec
adc
lock
in
jl
repnz
xor
dec
xor
ljmp
dec
or
sub
inc
faddl
and
psubsb
mov
and
jbe
scas
mov
or
mov
fildl
mov
inc
cmp
add
inc
out
mov
fstl
push
shrl
sbb
mov
push
mov
xchg
ret
idivb
inc
rcrb
push
outsb
inc
inc
rclb
mov
fildl
mov
outsb
loopne
movsb
inc
inc
sub
sbb
inc
mov
nop
xchg
inc
ficomps
mov
xchg
mov
inc
xlat
insl
dec
xchg
inc
xor
shrb
xor
lds
out
cmp
jmp
dec
push
mov
js
inc
push
mov
out
movsb
inc
clc
cs
sbb
in
call
mov
xchg
sbb
sub
call
add
dec
shrb
imul
dec
adc
xchg
mov
mov
mov
pushf
xchg
test
inc
pusha
dec
adc
mov
test
add
and
stos
mov
cmp
stos
mov
or
call
and
xchg
stos
xchg
mov
xchg
nop
mov
push
adc
nop
fs
push
stos
xchg
mov
inc
ja
dec
mov
push
outsb
push
dec
mov
rcrb
dec
mov
cmpsb
enter
mov
pop
and
dec
mov
popa
push
dec
inc
mov
adc
int
push
test
push
mov
out
js
outsb
jae
lea
jle
push
cmp
in
xchg
xchg
cwtl
adc
add
je
movsl
add
fwait
stc
jmp
je
daa
movsb
add
incl
jl
dec
popa
xchg
je
add
sbb
push
es
sbb
lret
add
mov
aam
xor
adc
sbb
pop
ljmp
test
mov
jnp
sbb
adcl
pusha
addl
pop
mov
mov
push
jns
push
push
fsubrl
cmp
xor
sub
repz
lods
out
call
rcrb
push
arpl
push
cltd
nop
push
loopne
test
rorb
adc
push
adc
out
mov
ljmp
mov
in
xor
adc
jbe
adc
repnz
cs
mov
xor
mov
jmp
incl
movsb
jbe
jne
mov
inc
mov
fidivrs
cmp
ret
push
inc
call
add
push
mov
push
incl
sbb
mov
xor
sti
dec
or
arpl
or
push
movb
lcall
cmp
jp
fstpt
add
cmp
inc
jmp
dec
jmp
xor
sbb
adcl
inc
inc
adc
pop
leave
add
cltd
rorb
stc
pop
es
adcb
cmp
fadds
pusha
and
or
mov
xchg
jmp
pop
cld
test
mov
mov
adcb
je
inc
or
je
or
shlb
cmp
and
cmp
dec
xor
mov
xchg
add
cld
aaa
mov
xor
inc
jmp
out
sbb
pop
add
adc
push
nop
ret
mov
popf
pop
pop
fldcw
inc
inc
cwtl
gs
inc
pop
inc
nopl
or
sbb
mov
add
loop
pusha
popa
push
mov
dec
imul
adc
lret
cmp
pop
call
cmp
div
andl
lods
inc
inc
shl
pop
mov
jb
cmp
repz
in
jle
and
sub
push
push
or
orl
inc
jecxz
dec
or
xchg
divl
and
in
xchg
pushl
add
ja
cmp
xor
movq
and
push
add
ret
push
shll
cs
clc
inc
push
adc
xlat
daa
xchg
hlt
mov
cmp
mov
mov
push
insl
cmp
mov
xor
cmc
inc
adc
sub
or
inc
scas
push
lret
mov
dec
aaa
push
popa
jmp
dec
sbb
sbb
sub
ret
jo
push
mov
sbb
pop
add
push
rcl
filds
cmc
add
in
add
pop
inc
xchg
mov
stos
add
inc
cmp
sahf
in
pop
sbb
adc
das
or
or
sub
pop
push
adc
lock
insl
dec
lock
push
add
outsb
gs
rolb
inc
add
sbb
xchg
das
xchg
sub
xor
mov
sbb
lret
ljmp
inc
stos
rcr
ljmp
iret
mov
mov
xor
add
fnstcw
fadds
lret
in
call
nop
xchg
scas
stos
inc
push
and
movsl
xor
xlat
cmc
fists
cwtl
and
push
in
pop
rclb
add
and
xchg
xor
pop
mov
dec
loopne
xorb
mov
or
push
and
les
mov
arpl
daa
ja
daa
add
xchg
mov
lea
nop
mov
mov
jmp
add
es
add
pop
add
push
insb
or
pop
inc
xor
add
aaa
pop
ret
mov
mov
fisubrl
fidivl
pop
dec
lea
mov
imull
int3
push
int3
loop
pop
xor
xor
xor
loope
es
cmp
pop
push
mov
inc
sbb
mov
jae
aas
pop
and
movsb
adc
pop
jmp
jp
adc
hlt
stc
and
inc
mov
push
into
and
ja
sbb
rolb
nop
push
jg
sbb
pop
repnz
jmp
loop
adc
imul
sbb
inc
xchg
add
sbb
nop
xchg
nop
sbbl
pop
and
or
popf
addl
or
mov
and
jb
or
or
repnz
dec
dec
movsb
sbb
nop
ja
push
inc
stos
mov
mov
push
sbb
dec
push
mov
sbbl
mov
jmp
test
add
movsb
js
mov
mov
fsubl
sub
rcrl
cmpb
out
sub
out
cmp
pop
enter
inc
in
das
sbb
or
pop
add
or
xor
dec
mov
cmp
and
add
and
ljmp
fbstp
in
push
out
enter
or
mov
lcall
sbb
xchg
rol
xorb
xchg
push
and
andb
push
rcrl
mov
mov
into
sbb
push
add
sbb
inc
add
mov
inc
sahf
lret
clc
add
xchg
pop
inc
repnz
inc
mov
adc
xchg
lea
jb
and
mov
sbb
ficoml
sub
inc
sbb
add
pop
stc
mov
lock
xorl
mov
pop
or
loopne
xchg
lret
mov
cmp
ret
mov
leave
arpl
xchg
inc
inc
inc
dec
dec
rolb
pop
xor
rcll
mov
rolb
paddsb
push
jecxz
adc
fwait
pop
xlat
pusha
sub
xchg
adc
and
xchg
push
mov
dec
stos
shlb
nop
push
sbb
pop
rolb
and
push
pop
push
sub
and
loopne
shrb
call
test
pop
sbb
sbb
shll
sub
cmp
jo
popf
loopne
sub
add
outsl
and
add
lods
test
jb
insl
mov
mov
lret
call
add
stos
add
fdivrs
mov
aam
dec
call
jecxz
rorl
and
add
mov
xchg
das
sbb
and
sub
or
call
jmp
push
faddl
test
and
sbb
dec
call
adcl
sub
pop
and
ja
imul
inc
or
pop
sub
xchg
or
adc
add
fcomp
ss
jnp
mov
lahf
mov
mov
dec
repz
inc
lea
je
push
mov
outsl
push
cwtl
sarb
in
mov
adc
xor
mov
add
cltd
sbb
sub
dec
addr16
push
addr16
push
mov
mov
push
addr16
es
cmp
sysret
adc
mov
push
call
sbb
loopew
inc
shrl
rolb
jo
testl
loope
je
add
cmp
xchg
outsw
popf
push
cmpsl
es
xor
pushf
push
je
test
imul
or
mov
and
mov
fisttpll
pushf
es
sub
pop
xor
stos
mov
out
test
loop
movsl
push
daa
jno
xchg
popf
jl
ss
cs
mov
pop
sbb
or
icebp
je
mov
popf
push
repnz
push
xchg
outsb
pop
pop
and
mov
in
scas
outsb
pop
dec
movl
dec
dec
pop
mov
add
packuswb
out
outsl
pop
dec
loopne
add
testl
sub
movsl
dec
inc
or
es
aam
pop
call
add
xchg
pop
fisttps
mov
xchg
sarb
jns
dec
enter
cmp
inc
inc
dec
arpl
inc
jns
pop
and
popa
adc
mov
dec
call
jp
mov
push
xchg
nop
dec
idivb
dec
inc
ja
mov
inc
jns
addr16
lret
xchg
jb
and
js
dec
push
and
and
call
pusha
push
jns
or
adc
movsl
adc
jns
push
and
cmp
int
stos
dec
call
and
scas
movsb
inc
scas
adc
ljmp
inc
jns
xor
orb
test
aaa
call
mov
int
xlat
lods
movsl
xor
ss
mov
inc
inc
jns
sbb
mov
mov
mov
sbb
jns
std
enter
xor
mov
jns
fadds
push
push
and
pushf
pop
out
mov
cmpsl
mov
fildl
push
and
hlt
jns
test
out
mov
and
push
mov
or
adc
push
xchg
nop
jns
xchg
rclb
mov
sbb
push
jmp
inc
sbb
jl
inc
inc
inc
jns
or
push
and
mov
jns
mov
or
stos
mov
sub
jns
mov
push
and
adc
inc
jns
inc
daa
test
jns
rorb
push
inc
jns
nop
sbb
jns
adc
xchg
jns
mov
or
adc
jns
je
fistps
mov
push
jns
xchg
sbb
ss
add
push
popf
sbb
ja
push
sbb
mov
sbb
dec
sub
lds
sbb
aam
pop
mov
dec
in
push
xchg
shrb
popa
outsb
out
cmp
pop
jns
lds
sub
aad
rolb
jecxz
jno
or
adc
mov
pusha
jns
test
sbb
sbb
sahf
inc
int
call
inc
mov
cmp
nop
jns
cwtl
xchg
or
popf
mov
mov
add
nop
mov
mov
imul
xor
in
and
in
pop
sub
xor
dec
stos
fs
pop
push
and
cmpsl
xchg
mov
pop
pop
and
daa
loop
cmp
and
push
push
xor
pop
pop
scas
fs
clc
push
sub
mov
adc
pop
xchg
or
dec
pop
cwtl
orb
cmp
dec
xchg
pop
pop
or
movsb
gs
dec
xchg
int3
fisubs
ja
pusha
rsm
fs
fiaddl
pop
loop
xor
les
fucomi
inc
and
dec
pop
jae
mov
icebp
push
loope
sbb
dec
cs
push
xchg
shlb
aas
das
xchg
call
push
push
lret
push
sub
fs
nop
or
pop
jb
add
and
xor
dec
das
inc
dec
adc
push
sub
xor
add
shlb
nop
popf
dec
adc
sti
mov
mov
and
mov
mov
inc
das
push
xchg
shrb
push
das
dec
adc
jle
ljmp
adc
and
fs
and
pop
push
xchg
shlb
pop
dec
inc
testb
mov
or
ja
das
cmp
inc
das
inc
das
fisttpl
aad
ficoms
add
or
imul
cld
dec
jae
or
adc
insb
dec
mov
mov
pop
inc
push
add
pop
jae
or
and
and
sbb
sbbb
leave
jle
fs
push
pop
push
mov
add
adc
rcrb
inc
inc
add
xchg
or
xchg
push
sbb
lea
movups
insb
enter
jl
nop
sbb
sub
orb
pop
xor
lea
sbb
sub
push
mov
or
xchg
notl
add
sbb
pusha
inc
adc
fcomps
pop
xor
mov
imul
push
repnz
popa
pop
in
mov
or
cmp
add
push
lock
or
xor
in
popa
inc
test
cmp
push
push
jnp
enter
push
mov
loopne
mov
or
mov
rcl
push
pusha
cmp
push
fcoml
mov
test
aas
push
mov
push
and
test
xor
dec
xchg
test
loopne
mov
pushf
mov
push
bound
call
cmp
cwtl
nop
dec
popa
push
mov
mov
sub
fs
push
push
mov
rorb
es
popa
orps
es
pop
ret
or
repz
stos
sub
test
lods
ret
xor
cmp
mov
push
xor
mov
dec
aam
scas
popa
stc
jb
call
xor
movsbl
das
shlb
call
mov
and
adc
call
repnz
das
xor
clc
lret
xor
lock
call
cmp
loopne
call
mov
int
inc
call
mov
lret
call
push
call
in
xchg
popf
pop
call
fs
stc
push
jne
call
test
xchg
das
js
pop
jl
push
sub
mov
test
xor
nop
sbb
test
mov
out
movsb
in
fldcw
fists
ret
movsl
jb
pop
les
ror
mov
xchg
jb
pop
mov
jle
sub
push
test
inc
pop
sub
xor
lret
test
lods
pop
sahf
xchg
adc
add
cs
test
or
loope
xchg
dec
ja
adc
in
mov
and
dec
stos
and
sub
mov
jle
push
cs
xor
cmp
orl
pop
inc
push
inc
frstor
xchg
dec
inc
dec
cmp
xor
movsl
jb
cs
adc
sub
add
nop
add
dec
adc
push
push
xchg
rclb
insb
jb
mov
and
or
inc
lret
dec
xor
cwtl
sahf
mov
pushf
and
mov
and
std
je
lcallw
and
adc
cmp
dec
inc
sbb
sbb
push
and
xchg
xchg
mov
mov
sbb
imul
xchg
data16
movsb
inc
test
dec
lcall
imul
mov
or
fldl
arpl
dec
pop
push
jo
shlb
test
xor
inc
lock
and
test
lcall
mov
adc
leave
or
sub
pop
pop
mov
inc
xchg
inc
stos
pop
sub
stos
lea
lea
and
das
stos
shlb
ja
inc
stos
mov
dec
mov
stos
and
push
inc
aaa
dec
xchg
adcb
and
inc
test
sbb
movsb
imul
xor
aaa
add
cmp
xor
push
xor
leave
xchg
sbb
pop
xor
add
ficompl
call
rolb
pop
sbb
sti
or
add
sbb
adc
fsubrp
orb
sarb
xchg
jp
ret
push
dec
lods
addr16
dec
mov
xchg
out
sbb
push
or
mov
push
push
rclb
in
mov
push
push
mov
nop
inc
mov
pop
and
aad
mov
inc
mov
mov
es
ret
stc
mov
or
jb
mov
aam
sub
push
pop
push
or
sub
jno
cwtl
mov
push
rclb
sbb
cs
rcl
mov
aad
push
rclb
aad
into
adc
repz
jmp
aad
and
jno
movsb
push
orl
or
cwtl
pusha
jmp
imul
inc
and
test
xchg
sbb
stos
and
inc
test
pop
movsl
inc
xchg
sbb
outsb
ljmp
outsb
sarl
dec
mov
sbb
sbb
in
inc
mov
mov
das
pop
sbb
mov
cmpb
mov
stos
out
push
push
in
xchg
cmp
jmp
sub
sbb
cmp
mov
adc
adc
mov
adc
push
adc
sub
fwait
and
sub
mov
xchg
sub
lds
push
adc
add
dec
adc
xchg
sub
dec
push
inc
gs
ffreep
adc
jo
xor
or
push
cmpsb
adc
gs
cmpsl
xor
aas
inc
cmp
aaa
push
adc
hlt
push
ja
sub
xor
adc
gs
adc
lret
call
leave
cmpb
pop
cltd
shlb
push
adc
cltd
rcrb
push
push
adc
cmp
adc
or
mov
inc
gs
adc
cltd
shlb
and
test
sbb
fwait
shlb
movsb
xor
dec
dec
lcall
or
test
stos
rorl
adc
and
cmc
add
cmp
sti
call
pushf
cmpb
adc
mov
and
cmp
and
mov
cmp
pop
xor
and
lods
xor
cmp
sti
loopne
adc
dec
js
jmp
and
icebp
gs
lods
cmpsl
xor
inc
lret
inc
push
ret
imulb
mov
nop
dec
mov
ret
mov
out
or
adc
pusha
push
gs
pop
push
test
inc
cwtl
push
gs
fucomi
or
inc
bound
or
mov
or
add
inc
jecxz
and
or
lds
add
dec
sub
shlb
nop
scas
add
and
sub
push
and
jb
mov
hlt
inc
or
push
or
leave
push
dec
repz
andb
or
adc
pop
sub
pop
mov
dec
mov
adc
mov
stos
mov
xchg
mov
out
negl
call
mov
dec
push
mov
lea
test
jecxz
inc
add
xor
add
sarb
shlb
dec
pushf
mov
pop
aaa
xchg
push
cmpsl
add
mov
add
mov
inc
aaa
inc
ret
sub
shrl
cmpsb
test
pop
mov
xchg
pop
inc
cmp
cmpsl
add
dec
or
gs
mov
jnp
mov
roll
cmpsl
add
jmp
aaa
push
je
push
dec
pop
rcrb
imul
les
enter
mov
pushf
push
xor
aaa
imul
push
and
inc
clc
mov
aaa
or
sbb
ds
mov
xchg
add
popa
xchg
add
inc
dec
shr
adc
mov
lods
test
test
add
mov
iret
into
and
inc
sarb
adc
cmp
inc
out
pop
or
mov
sbb
mov
or
add
call
addr16
sbb
mov
xor
or
xor
mov
addr16
and
shlb
into
pop
faddl
jae
enter
jp
cwtl
decb
jmp
hlt
lock
sbb
jp
add
addr16
or
dec
xor
add
and
xor
addr16
mov
adc
cs
enter
adc
rorb
mov
out
pop
scas
mov
sbb
push
addb
push
pop
sbb
sahf
push
xchg
push
je
sbb
add
push
sbbb
sbb
mov
adc
sbb
test
sub
addl
adc
in
pop
shll
mov
out
sbb
pop
adc
pushf
mov
cmp
push
pop
in
dec
and
adc
sbb
adc
clc
xchg
mov
push
out
cmp
and
js
mov
mov
sahf
je
aam
jg
push
mov
and
pop
xchg
outsl
repz
test
imul
jmp
xchg
repz
popf
out
push
add
pop
repz
xlat
rcrb
dec
xor
movsb
inc
sub
out
movsl
xor
mov
sbbl
or
mov
cwtl
mov
shll
mov
or
imul
fwait
repz
inc
cs
repz
repz
push
add
repz
sub
gs
insb
sbbb
xchg
inc
mov
hlt
cmp
sub
repz
add
add
or
stos
sahf
sbb
aam
push
imul
push
add
xchg
jecxz
fistpl
jg
mov
jg
cwtl
inc
mov
scas
or
arpl
in
popf
mov
fwait
test
or
pop
je
push
call
cmpsb
fs
mov
fdivrs
jnp
popf
out
pop
pop
fstl
ffree
adc
stos
push
js
sub
inc
fs
cmpsl
insb
movsl
sbb
loop
cld
sbb
and
jb
adc
adc
test
adcb
fistpl
adc
add
add
aam
inc
sub
aam
jle
call
push
push
add
and
mov
sub
gs
add
sti
fwait
repz
adc
in
dec
inc
sub
jo
repnz
xlat
fwait
xlat
sub
loop
jnp
add
sub
dec
out
adc
lea
call
out
adc
adc
jb
insl
adc
nop
fidivrl
push
push
push
lcall
movsl
sbb
pop
aam
jnp
ret
pop
cmpl
in
test
jns
xchg
adc
xlat
ret
push
add
sub
cmpsb
icebp
in
test
cmp
fstl
inc
nop
scas
mov
xchg
pop
mov
movsb
xchg
cmp
xchg
inc
cmp
xchg
cmp
xchg
xchg
cltd
mov
test
dec
mov
movsb
roll
push
nop
inc
les
pushf
inc
xchg
cltd
adcl
inc
mov
add
test
jmp
sub
push
jmp
nop
and
mov
sbbb
push
mov
mov
xchg
mov
pop
cmp
sarl
add
and
or
sbb
iret
repz
ret
mov
cmp
repz
ds
or
sahf
cmpsl
stc
clc
sbb
aam
push
mov
imul
push
mov
fdivp
clc
push
inc
push
push
sub
push
jns
idivb
push
xchg
jl
fidivrs
out
inc
cmpb
push
push
pop
dec
cmp
sbb
cmp
out
repnz
fmulp
mov
test
mov
ret
into
sbb
jns
jnp
incb
add
es
loop
repz
repz
sbb
cmpsl
stc
cmp
sahf
mov
sbb
out
sahf
mov
iret
sarl
and
pop
repz
repz
nop
sahf
iret
repz
lods
mov
fsubrp
icebp
cmp
cmp
inc
push
shl
push
movsb
out
jb
jle
sahf
jnp
ret
in
mov
daa
rol
loop
clc
adc
repz
data16
push
cmp
aaa
je
fs
push
jnp
ds
cmp
adc
daa
pop
mov
stos
inc
cmp
jbe
add
aaa
push
cwtl
cmpsl
insl
mov
iret
lea
repz
out
xor
push
scas
test
ret
sub
mov
push
lret
xor
test
adc
inc
pcmpeqw
movsl
dec
dec
addr16
jle
test
rol
sub
sti
fisubrl
arpl
gs
dec
push
loopne
sbb
je
pop
rclb
and
push
adc
adc
mov
dec
jb
insb
xlat
js
xor
xchg
stos
daa
xor
or
pop
jae
pusha
inc
or
xor
scas
test
bound
add
out
mov
and
and
cmp
es
dec
cmp
scas
or
das
mov
imul
pop
sbb
bound
or
outsl
inc
mov
pusha
lds
dec
and
push
cmpl
and
imul
les
dec
sub
shrl
stos
outsl
rcr
pop
data16
add
ret
dec
aam
sbb
cmp
mov
rcll
aaa
aas
ret
je
jmp
das
push
dec
inc
push
push
inc
mov
inc
pop
inc
outsl
outsl
rorb
lret
pop
inc
xor
rcll
sbb
pop
dec
rcrl
push
and
pop
dec
call
sar
imul
dec
jae
inc
jne
std
rcll
outsb
je
sbbl
adc
je
ss
mov
xor
sub
sub
sub
inc
inc
xor
xor
aaa
aaa
xor
xor
jge
xor
xor
inc
xor
mov
idivb
cmp
xor
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
cmp
mov
enter
das
cmp
sets
fs
ret
test
mov
fidivrs
mov
push
lock
push
xor
or
push
mov
sub
inc
aaa
adc
xor
inc
pop
dec
adc
dec
sbb
pop
aad
shlb
popa
xor
dec
mov
std
xchg
fistpll
and
sub
pushf
xor
in
xor
and
dec
dec
outsl
mov
sbb
adc
in
scas
fwait
popa
ret
pop
push
push
dec
hlt
imul
ficoml
pop
push
call
push
cmp
out
inc
out
adc
push
sub
out
cmp
ds
adc
inc
mov
lods
data16
lods
and
loope
cmpsb
push
hlt
fisttps
mov
adc
mov
xchg
add
jg
mov
and
outsl
xor
pop
movsb
fiadds
pop
adc
js
push
lods
insb
jns
push
inc
cmp
sbb
inc
cmp
cmp
sbb
xchg
stos
insl
xchg
push
shr
mov
dec
pop
mov
add
arpl
insb
mov
les
inc
xchg
and
outsb
ret
adc
pop
lret
adc
sub
and
xor
mov
inc
cmp
add
insb
addb
sahf
push
jbe
pop
pop
add
push
lock
sbb
xor
xchg
sbb
stos
inc
sbb
pusha
push
and
xlat
popa
jae
and
nop
mov
inc
push
imul
imul
mov
imul
scas
scas
je
pop
mov
jp
fs
imul
push
imul
jo
movl
sbb
dec
push
push
inc
aaa
inc
test
dec
aas
pop
fbld
pop
arpl
inc
cs
push
push
mov
cwtl
xlat
push
add
ja
cmp
je
outsb
outsl
jno
inc
or
popa
imul
mov
xor
pusha
mov
outsb
inc
sarb
adc
or
pop
push
add
add
sub
sub
mov
pop
push
add
add
or
mov
inc
aas
aaa
mov
jo
and
xchg
pushf
add
sbb
push
pusha
and
ret
or
inc
cmpsl
or
dec
push
popa
shrl
xchg
push
loope
adc
cmpsl
fadds
repz
inc
adc
orb
out
jns
iret
or
add
mov
das
scas
xchg
cmpb
das
xchg
adc
xor
out
push
sbb
sbb
sbb
iret
repz
sbb
std
sbb
pop
repz
push
das
push
pop
nop
cld
and
push
and
jns
iret
jae
cld
stc
jp
push
cld
fdivr
pusha
xor
repz
stos
cmp
addb
mov
out
les
ds
cwtl
xor
aad
xor
test
jb
into
xrelease
ds
cmp
ret
scas
cwtl
xor
mov
popl
dec
repz
push
adc
push
cld
or
in
iret
repz
int3
les
movsb
xor
jl
out
nop
mov
mov
jl
insb
push
fs
pop
mov
cmp
repz
dec
inc
inc
cmp
out
sahf
push
xor
sub
and
sahf
out
and
adc
repz
out
or
cld
or
repz
clc
hlt
call
iret
repz
movsb
nop
jo
jns
iret
repz
lock
int3
mov
jns
out
insb
inc
sub
iret
sarl
or
push
fcom
les
repz
cwtl
js
sub
out
add
add
or
out
sbb
add
call
iret
repz
mov
loop
iret
inc
jnp
test
bound
adc
inc
jl
test
inc
sahf
test
aaa
sarb
add
adc
lret
sub
adc
jnp
mov
pop
push
inc
dec
cmp
outsl
and
shrl
loopne
mov
adc
inc
add
jecxz
mov
mov
dec
aas
mov
xor
push
jo
out
dec
and
adc
adc
xchg
aas
sub
mov
dec
and
xchg
inc
pop
ja
pop
push
mov
and
jmp
dec
int
inc
pop
loopne
mov
pop
cmpsl
inc
fsubl
jae
shlb
push
pop
xadd
push
and
and
mov
jg
js
shrb
mov
pushf
andb
rolb
mov
cmp
cs
out
cltd
xchg
andb
sar
sbbl
xchg
cld
inc
inc
mov
pop
subb
jnp
out
mov
inc
cmp
pop
jne
pop
andb
stc
sbb
xchg
xchg
jne
imul
mov
pop
dec
les
ret
arpl
imul
cmp
jo
push
or
xor
bound
scas
cmp
into
fcmovnu
pop
jb
push
push
push
insb
das
inc
outsb
adc
fstp
xchg
mov
cmpsl
ja
bound
imul
mov
jg
loopne
or
addr16
push
or
adc
or
adc
inc
mov
sub
insb
pusha
pop
sarb
jg
xor
das
fcoms
aam
adc
pop
mov
ss
sete
das
bound
int3
data16
xor
adc
ljmp
xchg
inc
in
or
dec
xlat
jns
das
jbe
jecxz
rcr
cmpb
fisttpl
cltd
ss
lcall
je
sahf
sbb
push
test
adc
or
push
popf
jl
adc
aas
shll
loop
lahf
jg
cmpsb
jg
imul
loop
xor
or
shlb
or
adc
mov
xchg
adc
mov
je
outsl
pinsrw
mov
inc
fcmovnbe
mov
aas
mov
shl
adc
fisttpl
insb
adc
fs
pop
loopne
dec
mov
jns
sbb
jecxz
jnp
daa
lock
enter
fadd
dec
dec
mov
stos
dec
xor
mov
dec
jnp
rcr
fsubs
dec
pop
add
sarb
je
and
in
add
pop
ltr
stos
push
jb
push
lcall
pop
push
and
jnp
dec
dec
add
push
push
add
push
outsl
ja
scas
aam
ss
jle
ja
cs
jb
sub
add
or
fsubrp
daa
xorl
and
es
jecxz
add
repnz
cmp
mov
outsb
inc
lods
sbb
fistps
leave
sbb
push
add
push
sbb
cwtl
and
push
jb
inc
lock
add
mov
nop
arpl
add
outsb
push
add
xor
imul
add
push
mov
jnp
cmc
popa
jae
push
jae
push
ret
and
outsb
dec
jp
push
push
mov
sub
adc
add
mov
pop
push
lret
out
adc
cmp
push
xor
mov
shll
mov
add
shll
xor
cmpsl
dec
add
andb
mov
inc
push
imul
das
push
mov
dec
or
cmp
push
jo
lret
jo
lods
jb
jns
imul
das
test
movsb
sbb
roll
push
push
lods
cmpsl
xor
add
sbb
imulb
and
aaa
cmp
movsl
cmp
inc
and
fimull
lods
insl
inc
pusha
inc
and
pop
inc
cmpsl
and
inc
imul
insl
or
sbb
testl
mov
enter
inc
imul
fbld
jne
negb
or
add
push
or
rolb
mov
addr16
and
pop
push
xchg
test
scas
xchg
and
jmp
jmp
push
nop
pop
cmp
sbb
inc
lahf
xor
push
dec
xor
dec
pop
dec
cmp
push
ja
dec
test
call
lock
mov
fidivrl
mov
inc
inc
push
call
mov
outsb
or
sub
push
jo
and
add
push
cmpl
icebp
xor
outsl
mov
rol
stos
mov
xchg
mov
add
push
lcall
orb
inc
insl
rorl
add
push
jnp
cli
loopne
dec
dec
pop
addr16
inc
jns
mov
fs
lds
lea
lods
ja
mov
inc
and
push
outsl
test
fidivrl
xchg
dec
and
scas
xchg
roll
push
xor
in
pop
push
movsb
cwtl
rcrb
movsl
cmp
pop
add
push
lock
gs
mov
rolb
add
jb
add
test
mov
push
mov
movl
inc
jmp
enter
fcomps
mov
js
aaa
dec
inc
dec
pop
or
nop
xchg
fwait
sarb
inc
cmc
and
xor
and
stos
add
xor
dec
or
inc
mov
fiaddl
sub
jo
add
add
add
outsl
inc
add
mov
fs
xchg
adc
addb
cmp
scas
ds
sbb
movsl
ss
pusha
push
jo
xchg
lods
sbb
loopne
inc
mov
add
scas
into
inc
push
add
xchg
cmpsl
ljmp
dec
imul
adc
add
cmp
add
lret
add
cmpsb
xchg
into
out
cmp
inc
cmpsl
add
push
mov
mov
xchg
push
in
jb
inc
push
and
jns
insb
ret
sub
inc
jae
addb
aas
adc
add
je
ja
mov
testb
outsl
xor
and
add
xor
mov
or
pop
sarb
into
out
lds
sbb
add
rcrl
sub
xor
jno
sbb
sbb
and
fcomip
cltd
jmp
rclb
ficomps
mov
push
popa
mov
std
fwait
xchg
and
inc
fwait
clc
cmc
mov
aam
push
jecxz
sbb
xchg
xchg
push
pop
in
add
sbb
test
add
jae
mov
add
pop
push
insb
push
xorb
adc
pop
push
xchg
push
punpcklbw
repz
addl
pop
les
push
add
and
test
icebp
imull
test
dec
mov
sbb
mov
rolb
pop
add
mov
dec
add
inc
cmp
loop
test
sti
fsubrl
or
ss
data16
fs
pusha
jmp
pop
mov
hlt
mov
out
loopne
or
adc
add
daa
nop
inc
xchg
or
add
sub
loope
sub
push
mov
or
cmpsl
stc
cmp
clc
out
lock
jns
enter
iret
jnp
out
lods
test
pop
mov
cmp
xchg
nop
mov
jo
pusha
push
pop
out
sahf
out
inc
cmp
and
repz
and
cld
in
lock
push
loopne
sahf
out
sahf
fcom
enter
jns
out
cwtl
mov
out
sahf
out
xor
and
dec
repz
adc
add
in
hlt
in
cmp
repz
fmul
mov
sti
mov
mov
js
sahf
out
iret
push
inc
sub
and
or
out
jl
jmp
dec
and
sbb
or
add
push
into
sub
testb
testb
pmuludq
and
sbb
sub
push
sub
rclb
aaa
sub
js
and
maskmovq
testl
pop
and
addl
push
in
inc
dec
pop
jg
fs
inc
dec
pop
or
cmpsl
mov
dec
rolb
not
bound
and
pop
scas
dec
jmp
and
sbb
and
inc
subl
and
addb
repz
push
pop
jo
andb
pop
add
in
cmp
or
and
or
outsb
cmp
and
sbb
xor
lcall
jbe,pn
and
lret
add
xor
lahf
fs
adc
jg
xor
ds
je
in
add
mov
xor
lret
add
pop
and
cwtl
shll
repz
imul
inc
loopne
ja
js
and
or
insb
and
pop
or
or
or
jb
jne
xor
addl
jae
popaw
insb
into
cmpsb
sub
stc
das
fmull
sub
sti
ss
sbb
jmp
push
inc
test
out
push
inc
add
inc
pop
pop
adc
ljmp
adc
aam
add
xor
xor
sbb
bound
loopne
lcall
xor
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
lcall
push
xor
xor
xor
xor
xor
xor
dec
xor
xchg
dec
xor
sub
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
cld
out
aaa
std
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
outsl
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
add
popl
cld
push
lock
idivl
or
call
xor
xor
push
xor
xor
js
popf
xor
xor
pushl
and
inc
xor
push
xor
xor
xor
xor
xor
xor
pop
incl
out
xor
xor
xor
xor
xor
xor
fidivl
incl
mov
les
fnsave
out
xor
pop
mov
ss
ss
ss
ss
aaa
sbb
jno
push
paddd
aaa
loopne
add
or
pushl
pop
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
xchg
lcall
jl
cmpl
mov
cmp
push
adc
cmp
call
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
out
test
das
jo,pt
test
mov
aas
adc
xor
pusha
cmc
incl
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
aaa
cld
inc
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jo
xchg
mov
mov
mov
xor
loop
pushl
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
jmp
xchg
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
ljmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
popl
or
cld
inc
xor
pop
xor
push
xor
xor
decl
sar
in
xor
xor
xor
xor
ret
xor
xor
stc
incl
out
xor
xor
xor
xor
test
mov
std
paddd
mov
nop
xor
out
in
xor
scas
clc
xor
cmp
jg
insl
xor
cmp
cmp
cmp
pop
pop
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
cmp
adc
cmp
cmp
cmp
push
lcall
and
cmpb
ds
aas
jmp
pop
xor
outsb
xor
xor
mov
ss
ss
xchg
cmp
cmp
mov
mov
mov
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
pop
lcall
adc
dec
aas
push
mov
cmpb
aas
shll
aas
lret
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
incl
leave
xor
xor
loop
xor
xor
xor
call
mov
xor
xor
scas
std
xor
cmpsb
data16
outsl
mov
dec
ss
add
or
aaa
and
aaa
dec
aaa
lock
decl
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
lcall
filds
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
fistpll
decb
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
ret
inc
incl
cmp
cmp
cmp
or
hlt
fstpt
loopne
in
jmp
out
cmp
repnz
mov
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
cmp
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
sbb
cmp
dec
cmp
addr16
pop
mov
xchg
cmp
mov
jp
jg
cwtl
ds
ds
mov
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
cmp
into
or
push
xor
insl
stos
jmp
mov
xchg
les
fidivl
in
decl
inc
mov
and
sub
cmp
jb
mov
xor
xor
xor
xor
xor
xor
mov
jl
outsl
sar
cmpsl
xor
xor
scas
jno
xchg
xor
xor
xor
fcomip
or
xor
xor
mov
ret
aaa
jmp
jmp
aaa
fwait
sahf
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fcompl
dec
fbstp
aaa
cmp
mov
mov
call
cmp
cmp
cmp
cmp
fdivrs
xor
call
push
or
xor
cmp
bound
data16
push
outsb
aaa
jb
lcall
loopne
aaa
xchg
ja
js
jge
cmp
cmp
cmp
cmp
or
ret
cmp
cmp
jle
mov
ret
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
xor
cmp
ss
ss
fiadds
cld
cltd
aaa
mov
ret
aaa
jmp
repnz
or
cmp
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
jbe
xchg
ljmp
cmp
cmp
cld
cmp
mov
and
cmp
out
jmp
cmp
fdivrs
push
aas
jne
mov
or
push
ss
mov
fwait
xor
xor
dec
or
sub
push
repnz
aas
xor
divl
pop
aas
cli
xchg
mov
fsub
adc
es
dec
ss
outsb
outsl
clc
decl
ss
enter
in
and
cmp
cmp
popa
cmc
cmp
mov
inc
test
pop
sbb
cmp
pop
push
imul
cmp
test
mov
ret
cmp
dec
decl
cld
cmp
cmp
jae
aam
fnstsw
jecxz
imul
mov
cmp
pop
icebp
call
sarb
inc
cmp
cmp
mov
mov
and
push
cmpb
cmpsl
ds
ds
ret
orb
std
idivl
add
sbb
addr16
loope
scas
lods
add
mov
incl
push
xor
aad
out
cmp
or
xor
xor
xor
xor
xor
pushl
mov
int
in
xor
xorl
add
xor
ds
pushl
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
jg
pop
mov
cmp
mov
cmp
cmp
cmp
push
clc
outsl
clc
cmp
cmp
cmp
cmp
cmp
cmp
adc
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
pusha
aas
add
test
fdivrl
loop
out
out
pop
rclb
mov
xor
adc
xor
jae
cmp
jne
scas
mov
xchg
xor
xor
xor
js
xor
xor
cmp
mov
jbe
loopne
jmp
xor
sbb
sbb
sub
sub
nop
cmp
mov
mov
enter
sarb
aam
in
ljmp
repz
xor
aaa
and
call
into
cmp
inc
xor
xor
lcall
decb
lods
xor
mov
mov
xor
xor
fildll
xor
xor
cmp
sub
sub
xor
clc
jmp
cmp
cmp
cmp
pop
mov
cmp
fidivs
cmp
inc
cld
cmp
push
mov
push
mov
mov
cmp
mov
cmp
cmp
mov
pop
jge
in
call
dec
cld
push
add
mov
sahf
or
adc
sbb
and
and
sub
sub
aas
rolb
xor
cmp
inc
cmp
clc
jecxz
cmp
pop
cmp
cmp
insb
cmp
je
mov
cmp
cmp
xchg
cwtl
mov
sub
xor
inc
or
pushl
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shr
xchg
aas
loopne
clc
jbe
push
or
ljmp
cld
shll
pop
bound
clc
xor
xor
inc
xor
decl
xor
cwtl
xor
xor
xor
xor
cmpsb
aaa
loope
or
cmp
mov
or
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
hlt
aas
std
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
hlt
call
pushl
sbb
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
cld
inc
jg
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
popf
clc
and
nop
aaa
xchg
aaa
cwtl
into
mov
lcall
sbb
aaa
mov
mov
aaa
enter
shlb
aam
xor
icebp
aaa
fdivs
fcompl
in
out
or
loop
aaa
hlt
xor
aaa
hlt
add
or
mov
pop
adc
adc
sbb
cmp
mov
cmp
mov
cmp
pop
loope
cmp
cmp
cmp
cmp
sub
lock
cmp
cmp
cmp
cmp
cmp
push
cmp
jg
scas
lcall
pushf
cmp
test
lods
cmp
cmp
mov
cmp
movsb
mov
push
add
push
adc
std
std
mov
repnz
movsb
fs
lret
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
fistpll
pop
push
fnstenv
aaa
stos
mov
push
lret
pusha
popf
outsl
fbstp
ljmp
gs
push
aaa
mov
add
sub
cltd
cld
fsubrl
cmp
dec
push
sahf
das
inc
enter
outsb
icebp
add
add
push
add
out
aam
xchg
sub
test
pusha
cltd
jne
out
daa
and
test
sub
adc
out
insb
sahf
out
and
dec
mov
cwtl
addl
dec
out
mov
xchg
mov
pop
sarl
inc
cltd
cmpsb
dec
inc
adc
loope
add
inc
add
pop
cmpb
push
sub
addl
xor
aas
gs
sbb
add
inc
or
pop
sbbb
pusha
or
gs
push
fimull
push
mov
imul
adc
imul
mov
mov
xchg
sbb
ljmp
and
sub
je
jae
xor
pop
sub
push
pop
sub
add
jl
or
incl
jb
push
or
hlt
cmpsb
xor
mov
jmp
add
sub
dec
or
adc
fsubs
cmp
add
cmpsl
sub
fs
jbe
call
xor
in
aaa
or
ja
rcrb
mov
lods
pop
jge
je
mov
imul
filds
xor
push
lahf
and
xchg
jp
mov
cmc
sbb
xchg
jmp
push
jo
es
or
rorb
mov
and
addl
and
push
es
jo
pop
jbe
add
andl
clc
sbb
push
add
shlb
dec
pop
sbb
ret
pop
mov
arpl
xor
js
std
sahf
add
lret
dec
cmp
mov
mov
daa
mov
imul
inc
and
or
loop
test
std
jle
jmp
push
cmp
call
adc
call
inc
nop
ljmp
mov
adc
sub
or
rcrb
je
cltd
adc
insl
push
sbb
add
dec
add
mov
xor
pop
add
inc
nop
pusha
insl
mov
or
dec
fdivs
inc
loop
sbb
inc
and
andl
xchg
cld
cmp
les
loope
sub
into
xor
jo
dec
fdivs
push
cmp
add
pop
clc
fnsave
sbb
mov
cmp
dec
repnz
add
dec
test
and
pop
ret
and
adc
movsl
mov
dec
imul
mov
out
adc
xchg
jo
push
add
stos
adc
loope
adc
fdivrp
movl
js
jecxz
pop
add
es
push
mov
push
xchg
add
lret
shrl
mov
mov
adc
addr16
ret
pushl
push
xorl
inc
or
xorb
cli
aad
pop
sub
adc
adc
cmp
push
rolb
sub
pop
add
push
dec
sarb
and
cltd
andb
push
mov
or
and
aaa
inc
or
sbb
and
pop
pop
xchg
mov
or
addb
dec
jle
ror
inc
jo
add
mov
adc
adc
negb
or
fildl
das
or
push
inc
jmp
and
imul
mov
sub
test
enter
or
lret
adcl
lods
adc
mov
call
adc
mov
call
ss
adc
xchg
or
xor
pmaxsw
or
aam
push
jge
sbb
in
push
inc
push
mov
rolb
lahf
jmp
addl
lods
in
inc
xchg
cmp
sub
test
sbb
dec
imul
in
mov
dec
cwtl
inc
push
xlat
test
mov
inc
lret
mov
inc
lret
mov
dec
pop
mov
adc
ret
ja
stos
cmp
push
stos
stos
add
push
lods
jnp
sbb
dec
or
cmp
and
lock
cmpsb
or
mov
mov
out
mov
aam
cmpsl
push
adc
and
ret
adc
xchg
lret
inc
dec
sub
adc
adc
pop
sti
jne
sbb
pop
cli
sbb
inc
loopne
dec
sbb
leave
mov
xor
rcr
jl
dec
mov
sbb
call
mov
mov
add
dec
call
call
or
jbe
repz
and
inc
and
mov
nop
push
ja
xchg
cmc
les
pop
adc
or
push
dec
xchg
inc
cs
inc
mov
ja
pop
inc
outsb
xchg
outsb
cmpsl
push
test
sbb
call
sbb
xchg
push
mov
add
ret
inc
cmp
gs
mov
xor
call
push
add
push
add
mov
add
adc
cmp
and
add
inc
insb
sub
jo
adc
fwait
stc
sbb
sbb
push
push
adc
add
jg
pop
insb
xor
xor
mov
adc
sub
and
adc
in
push
addb
cmp
xchg
fisttpll
sbb
cld
stos
add
or
mov
and
push
add
add
mov
scas
fimull
mov
out
out
pop
mov
sbb
xor
adc
add
pop
fistl
ficoms
fldt
xorb
jo
push
ret
insb
push
pop
out
andb
sarb
test
cmp
rcrb
mov
mov
and
shlb
fildl
fldt
dec
pusha
arpl
sub
add
xchg
jg
pop
cmpsl
push
push
ja
and
jg
and
iret
data16
mov
es
push
xchg
mov
sub
jmp
mov
movsl
dec
jg
repz
xchg
push
insb
fs
mov
repz
dec
inc
ds
xchg
addr16
pop
out
or
enter
dec
addr16
lret
jg
jg
and
mov
xor
pop
nop
inc
push
rolb
ljmp
xchg
mov
pop
addr16
dec
pop
xchg
push
addr16
ja
dec
mov
push
call
cmp
jno
push
or
and
pusha
adc
addr16
repz
cmp
inc
push
push
push
add
add
xlat
adc
fidivl
mov
jle
and
xor
xor
xchg
cmp
in
and
mov
popa
hlt
adc
dec
add
xchg
xchg
adc
adcb
loopne
adc
pop
loope
mov
pop
or
push
dec
jnp
repz
cmpsb
jo
call
or
cmpsl
ret
cmpsl
mov
nop
or
mov
sbb
inc
cmpsb
daa
es
xorb
nop
or
pop
daa
daa
imul
imul
xchg
daa
daa
daa
daa
jb
add
sub
lret
adc
sub
sub
nop
mov
nop
sub
sub
shll
sub
cmpsb
xor
sub
sub
imul
dec
notb
arpl
aad
cmp
push
mov
mov
inc
fstl
sub
push
bound
and
sub
lret
add
and
insb
xor
subl
jp
out
sbb
cmp
cmc
fildl
push
lock
jp
or
clc
fs
stc
push
ss
dec
sbb
pop
xor
mov
or
psubsb
cwtl
movsb
sbb
add
push
jo
inc
push
mov
jg
and
je
or
mov
or
adc
test
adc
pop
addr16
inc
inc
sub
inc
inc
jge,pn
jle
add
lret
movhps
addr16
adc
mov
lods
push
rorb
cmp
call
push
nop
xchg
adc
adc
cwtl
sub
inc
inc
aaa
test
sahf
xchg
stos
add
push
shlb
push
data16
jle
test
cmp
and
addr16
or
adc
adc
ret
call
sbb
add
jb
or
add
or
repnz
add
add
pop
mov
push
mov
pop
mov
push
adc
outsb
xchg
sbb
cltd
mov
mov
addl
inc
push
and
lret
stos
cwtl
rol
inc
mov
ja
and
orb
outsl
cltd
adc
xor
add
sbb
pop
cltd
pop
in
inc
loop
cltd
pop
sbb
push
sub
mov
rcrb
mov
inc
jb
test
sbb
add
cmp
cltd
adcb
pop
ljmp
dec
in
pop
cltd
add
xor
mov
outsl
dec
push
jo
mov
push
adc
inc
push
xor
push
xchg
adc
sub
dec
inc
inc
mov
test
call
aam
mov
xor
push
pop
adc
push
jne
imul
pop
xchg
adc
xchg
out
and
lock
fidivrl
out
dec
mov
mov
add
test
inc
adc
inc
sahf
rol
enter
push
fistps
cmp
mov
aam
mov
adc
adc
push
pop
adc
ja
pop
aam
adc
sbb
imul
jo
xchg
push
jne
nop
or
adc
adc
fcoms
mov
sub
in
fiadds
mov
pop
addr16
dec
push
adc
lret
sbbb
leave
inc
pop
lea
pop
inc
enter
lret
mov
nop
adc
ss
push
imul
nop
pop
adc
rclb
cwtl
fs
shrl
mov
shlb
movsl
inc
adc
adc
push
pop
push
push
pop
aam
adc
inc
or
xor
das
push
xchg
jb
mov
mov
or
or
xorb
rcll
or
pop
or
jnp
mov
mov
not
and
movsb
xorb
adc
test
rorb
iret
out
or
test
subl
nop
and
jle
xchg
push
test
pop
enter
pop
adc
dec
ja
push
pop
inc
or
pop
and
inc
pop
mov
pop
inc
add
push
les
add
pop
push
movsb
testl
fs
add
ret
in
mov
dec
dec
sbb
push
ds
jmp
sub
loopne
xor
shlb
pop
mov
inc
xor
mov
and
pop
xchg
cltd
sbb
xor
and
and
push
and
and
pop
inc
dec
dec
cmp
cmp
mov
or
sbb
add
pop
push
call
je
jg
pop
mov
xorl
outsl
adc
fdivs
lds
pop
loope
add
out
inc
mov
or
and
call
dec
inc
into
add
dec
xchg
pushf
sbb
sub
jo
nop
rolb
dec
pop
lret
mov
jb
cmp
pop
dec
adcb
leave
cmp
jmp
sbb
mov
cmp
add
mov
lock
pop
xor
push
mov
cli
pop
nop
xor
push
mov
pop
push
nop
scas
sbb
subl
dec
add
adcb
adc
push
or
mov
mov
cmpsl
pop
ffree
push
leave
sbbl
vphsubw
popl
add
fdivl
mov
aam
sub
xchg
or
pop
das
lret
pop
or
cmpsb
or
fwait
pop
int3
cmp
inc
int3
pop
inc
fdivl
fsubl
aam
dec
int3
pop
lods
lret
call
ret
fstps
sub
inc
ljmp
lret
ret
push
mov
jnp
lock
mov
dec
lock
add
jnp
xor
add
nop
mov
scas
mov
leave
sbb
sbb
cmp
ret
pop
pop
sbb
add
add
ret
cmp
mov
xchg
loopne
je
add
bnd
push
or
clc
ret
js
test
pusha
aaa
sbb
das
nop
loopne
dec
adc
imul
pop
adc
add
add
or
rclb
add
jne
test
nop
in
shr
in
xchg
mov
movsl
daa
jnp
mov
popf
or
fwait
pavgb
fmul
sub
outsb
inc
sbb
cltd
loopne
sbb
adc
cwtl
and
mov
and
sarl
and
cs
cltd
and
out
xor
mov
and
jp
inc
mov
fdivrl
aas
inc
mov
push
jecxz
and
loopne
stc
mov
cltd
xchg
cld
push
push
push
jmp
cwtl
inc
xor
mov
adc
popf
fnstsw
cwtl
test
push
jb
mov
mov
mov
sub
cltd
rcrl
fimuls
leave
stos
push
mov
faddl
or
cld
loope
fdivl
test
repz
lret
jbe
stos
jmp
jle
pusha
and
xchg
add
xor
mov
repnz
add
repz
xchg
fsubrl
faddl
aam
and
inc
cmpsl
rcl
adc
pop
daa
adc
mov
jno
mov
jecxz
outsl
push
hlt
xchg
cs
inc
adc
call
repnz
xchg
mov
cs
insb
xor
push
je
arpl
pop
clc
je
cwtl
jnp
mov
dec
ss
bnd
add
lods
not
push
pop
dec
in
jnp,pn
ret
pop
push
lret
hlt
je
xor
or
pop
push
cs
js
popf
dec
mull
add
mov
push
inc
jo
and
ss
mov
inc
loope
lods
in
icebp
inc
mov
xchg
inc
adc
and
fiadds
xchg
scas
inc
jl
jl
mov
push
lret
cmp
or
mov
jno
and
movsl
or
mov
pop
adc
or
in
add
or
sub
jns
arpl
mov
sahf
insl
dec
ficomps
pop
or
jne
xchg
xor
dec
mov
fistps
je
pusha
or
inc
mov
mov
filds
fbstp
and
jecxz
xchg
pop
jno
pushf
ficoml
xlat
dec
stos
ss
push
xor
pop
add
adc
dec
jae
mov
in
pop
adc
ss
mov
es
ror
xor
mov
dec
xchg
mov
push
xchg
adc
add
addl
or
or
push
xchg
into
dec
push
push
fwait
xchg
lret
aam
sub
cmp
ror
xchg
adc
sbb
mov
fwait
pop
sbb
imul
rorb
fs
es
pushf
cmpb
push
xorb
add
mov
leave
adc
mov
xchg
dec
cvttps2pi
mov
pushf
xchg
jg
je
dec
aaa
shlb
inc
jno
es
inc
and
cltd
arpl
cwtl
xchg
jo
mov
add
fs
add
fldcw
mov
dec
xchg
ret
aaa
dec
xchg
xchg
mov
push
rorb
dec
xchg
xchg
and
cs
int3
dec
jmp
call
scas
leave
shlb
xchg
data16
add
xchg
and
and
mov
lret
xor
test
popf
push
jnp
in
push
xor
xchg
or
test
inc
je
jb
dec
push
and
fcoml
cmpsl
lret
nop
jae
inc
int
adc
inc
cltd
mov
ss
inc
cltd
mov
ds
lcall
call
loope
clc
add
aad
mov
adc
mov
adc
push
insb
add
scas
int
mov
inc
or
das
push
mov
pop
mov
test
loopne
push
fxch
imul
pushf
cmpsl
lods
rcl
ss
inc
sahf
mov
inc
cmp
mov
addl
dec
mov
ds
inc
frstor
aas
push
push
cmpl
inc
test
sbb
sbb
xchg
mov
cmpb
sahf
in
and
loopne
sbb
jmp
cmp
fistl
xchg
call
adc
dec
push
add
add
inc
enter
push
cld
xbegin
adc
in
inc
mov
cli
xchg
mov
nop
fisttpl
test
cli
test
gs
iret
fildl
ret
pop
and
pop
xorb
fistl
les
stos
add
xchg
lret
pop
ljmp
cmpsl
inc
or
inc
fildl
fisttpl
xor
mov
add
mov
cmpb
or
push
push
fcmovnu
mov
cmc
mov
inc
fneni(8087
mov
jns
pop
mov
rcll
push
sbb
adc
pop
neg
dec
push
push
sahf
imul
call
sub
xorb
add
push
fildl
add
add
daa
pop
jle
add
fstp
dec
or
mov
add
jo
jo
xchg
sub
sbb
imul
sbb
loopne
lds
stos
add
adc
push
in
iret
leave
aam
scas
enter
iret
push
orl
int3
nop
jb
pop
jns
mov
sub
dec
pop
mov
pop
push
sub
adc
or
hlt
mov
in
mov
aam
pop
pop
pop
pop
int3
mov
mov
lret
lret
lret
inc
test
mov
xchg
mov
jns
lret
lret
lret
lret
jno
imul
push
mov
cmp
xor
nop
sbbl
mov
enter
in
mov
in
pop
cmp
mov
jb
sbbl
lahf
mov
inc
push
mov
sbb
and
gs
push
jb
addl
cs
and
sbbl
add
push
jb
mov
and
jns
lret
mov
nop
sbbl
mov
enter
xchg
and
cmp
pop
mov
sbbl
cmp
push
and
in
pop
mov
adc
sbb
sarl
inc
mov
cmp
sahf
or
mov
xor
jp
or
test
outsb
push
enter
xchg
inc
adc
jb
and
xor
and
int
push
sbb
or
rcrb
sbb
mov
xor
and
xor
daa
int
cmp
cmp
jb
mov
enter
inc
mov
daa
int
dec
dec
jl
dec
dec
push
xchg
ret
arpl
add
andb
inc
mov
adc
dec
aam
mov
xor
push
inc
sub
cmp
jo
jb
inc
inc
push
xor
inc
sarb
mov
xor
sub
jb
popl
sub
arpl
push
jmp
adc
ret
cmpsb
mov
neg
les
mov
hlt
imul
and
pop
icebp
add
sbb
mov
aam
pop
mov
add
jg
add
daa
or
sub
push
jno
aam
cmc
sub
jge
inc
mov
xchg
mov
jb
mov
push
add
punpckhbw
xchg
dec
mov
or
andb
xor
movsl
gs
aaa
mov
shrl
xor
rolb
mov
adc
and
xchg
mov
cvtps2pi
lea
lret
jl
mov
jbe
and
sub
es
pandn
mov
fimuls
pop
sbb
mov
sbb
xchg
movsl
sub
stos
push
xchg
unpcklps
scas
push
xchg
pop
movsl
jnp
mov
repz
xor
bound
lea
lea
test
xchg
packuswb
sub
jo
mov
movsl
pop
fcompl
insl
dec
mov
imul
movl
sub
popf
push
and
add
cwtl
dec
push
movsl
or
adcb
dec
or
iret
scas
or
rclb
inc
fdivl
adc
sbb
dec
mov
iret
incb
in
cmp
int3
mov
mov
or
mov
inc
fistl
adc
sarb
push
or
call
adc
sbb
push
push
sub
dec
jbe
cmp
or
scas
add
cmp
or
adc
push
push
dec
pop
or
dec
or
call
xor
inc
fcoml
rolb
in
mov
fsubr
enter
and
and
out
xchg
and
sub
push
loope
xchg
test
or
sub
sarl
out
mov
and
adc
dec
pop
mov
or
sarb
insl
sbb
pop
fstl
adc
push
movsl
sub
popa
lods
push
pop
movsl
sub
out
xchg
mov
das
adc
test
gs
out
push
sub
adc
test
movsl
sub
inc
or
add
js
rcrb
sbb
push
lret
jo
mov
and
sub
sbb
add
mov
movsl
mov
out
sub
lea
pop
movsl
or
or
or
xchg
movsl
fisttpl
gs
mov
mov
stos
xchg
movsl
or
mov
xor
or
mov
popa
nop
imul
sbb
rcr
pop
adc
or
sub
sub
mov
and
xorl
stos
or
push
mov
std
push
sbb
dec
pop
or
cmpsl
test
jg
jl
movsl
aad
xchg
or
adc
add
push
xor
and
xor
or
push
or
dec
inc
bound
inc
or
mov
pop
mov
or
subb
lret
movsl
or
pop
xor
push
or
dec
or
enter
push
or
pop
or
adc
or
gs
dec
push
loop
mov
or
adc
sub
mov
mov
ret
sbb
stos
xchg
and
popf
adc
add
fnsave
movsl
or
push
call
movsl
sub
xchg
mov
mov
lret
pop
sahf
or
jl
mov
aam
sbb
or
gs
orl
xor
sub
andb
xchg
dec
rorb
lret
sub
les
or
push
push
mov
or
or
sbb
ret
shrb
xor
dec
scas
out
loop
lret
repnz
or
mov
fwait
adc
test
dec
or
pop
add
movsl
imul
or
mov
lahf
loope
adc
les
or
or
sub
sbb
mov
or
in
push
mov
jg
or
lret
xchg
and
xchg
pop
stc
push
sub
pop
pop
dec
sub
xlat
inc
pop
test
aaa
adc
pushf
mov
pop
dec
loope
movsb
xchg
int
ljmp
mov
xchg
mov
aaa
adcb
adc
das
or
adc
cmpsb
push
cltd
jle
and
push
das
nop
mov
pop
das
mov
jmp
push
pop
mov
mov
in
xor
and
xchg
mov
aad
mov
test
push
mov
xchg
mov
mov
xchg
add
push
mov
dec
xchg
out
xchg
out
push
cmpsb
cli
sahf
nop
imul
test
push
enter
push
out
lcall
cmp
pushf
mov
faddl
cmp
repz
sub
inc
push
repz
repz
outsb
adcb
mov
or
repz
repz
ds
pop
jb
iret
repz
mov
out
ds
stos
adc
cmp
out
push
pusha
jbe
test
jge
out
into
call
sbb
out
sub
dec
pop
insb
rcrb
pop
cmpsb
add
imul
ja
cmp
jo
push
mov
push
lea
test
dec
fs
mov
pop
mov
push
cmp
out
push
mov
fnstcw
cmc
add
push
clc
mov
dec
mov
mov
or
xor
add
add
mov
push
mov
xor
out
add
test
adc
repz
mov
das
xchg
sbb
out
lcall
sbb
sbb
mov
repz
repz
mov
and
and
iret
repz
js
jns
jp
cltd
out
lcall
adc
je
aas
ret
mov
and
xor
sbb
pop
adc
test
jns
add
cmp
jns
out
and
add
repz
clc
xchg
in
loopne
fcom
cmp
repz
enter
repz
repz
iret
repz
pushf
cwtl
xchg
nop
mov
test
cmp
repz
push
cmp
pop
pop
push
push
dec
dec
cmp
repz
inc
cmp
xor
cmp
repz
adc
out
lcall
test
out
sahf
mov
sub
cmp
repz
movsb
jl
push
repz
repz
inc
xor
or
jns
out
mov
shlb
sahf
pusha
cmp
int3
test
loope
cmp
push
xor
jg
push
or
lock
mov
or
stos
nop
inc
adc
push
fs
mov
add
gs
fstpt
aaa
xor
push
push
add
and
xor
xor
mov
pop
mov
aaa
add
xchg
ss
jbe
mov
iret
xchg
cmp
jo
mov
out
sbb
daa
add
and
aas
xchg
xchg
add
xchg
pop
jnp
push
daa
out
pop
mov
add
push
mov
inc
add
outsl
sarb
lods
pop
mov
insb
sahf
int
pop
cmpb
inc
pop
rorb
shll
jbe
add
mov
scas
cmpsb
mov
push
adc
mov
and
and
sub
adc
mov
rorl
sbbb
pop
sbb
cmpsl
fsubrs
sarb
mov
inc
lahf
xor
dec
mov
jg
dec
jle
pop
or
rorl
push
aas
sti
push
jbe
mov
andb
fsubl
adc
push
dec
mov
mov
inc
pop
ljmp
mov
imul
imul
pop
movsl
pusha
mov
imul
or
mov
adcb
mov
ret
insb
pop
xor
cmp
pop
popf
mov
cs
outsb
lahf
inc
outsl
cmpsl
cmp
mov
inc
outsl
gs
pop
enter
test
push
xor
cmp
test
fidivl
dec
cmpsl
mov
adc
addr16
xorb
inc
jecxz
scas
inc
iret
pop
dec
and
jne
xchg
jno
out
notb
imul
push
outsl
and
jb
sbb
sub
rcrl
rcrb
les
jno
lret
add
inc
stos
xchg
adc
inc
sbb
mov
aas
inc
or
fwait
push
movb
subl
push
sbb
fwait
dec
add
jecxz
fldt
dec
imul
mov
dec
xor
sub
add
xor
xor
push
popf
xor
add
rorb
xor
mov
or
sbb
inc
arpl
adc
pop
mov
sbb
dec
arpl
xchg
arpl
pop
repz
lea
add
pop
les
daa
rcrb
adc
rcll
rorb
arpl
pushf
xor
sti
xor
add
lahf
lds
sbb
rcrl
out
inc
arpl
testl
scas
pop
xor
add
push
mov
sarl
fadd
sbb
pop
push
aaa
outsb
adc
add
sub
sub
stos
cmp
arpl
add
mov
daa
mov
ficompl
pop
cmp
lock
movsb
xchg
jle
pushf
repz
repz
xchg
nop
mov
je
pop
push
pop
dec
jns
out
inc
inc
cmp
xor
jns
out
sub
and
int
jns
sbb
adc
xchg
hlt
sahf
out
xchg
xchg
in
push
in
enter
jns
mov
test
mov
mov
out
out
je
insb
push
fs
push
dec
out
jns
repnz
push
and
add
in
jns
out
xchg
push
enter
out
sahf
out
mov
iret
repz
cmpb
push
leave
repz
push
adc
repz
repz
loopne
mov
iret
test
insb
pop
add
xchg
outsl
test
pop
out
pop
pop
mov
pandn
insb
cmp
mov
neg
mov
inc
push
sbb
add
push
inc
mov
bnd
xor
outsl
push
xor
pop
clc
mov
ds
pop
jg
cld
pop
enter
nop
bound
jbe
inc
pushf
testb
stos
lcall
cs
mov
dec
pop
inc
aas
icebp
inc
xchg
mov
aas
add
xor
adc
pop
add
add
ret
sbb
jecxz
xor
xor
mov
rcr
xor
xor
mov
dec
cmp
ss
dec
xor
pop
ss
nop
ss
sub
ss
stos
dec
dec
sub
andl
aaa
lcall
aas
cmp
fstpt
push
cmp
xchg
xchg
xor
mov
jmp
lret
cmp
cmp
cmp
outsl
ss
cmp
inc
jnp
cmpl
adc
decl
cmp
cmp
ds
ds
ljmp
faddl
ljmp
ds
aas
bound
mov
aas
sub
xor
aaa
into
decb
aas
jbe
jnp
cmpl
movsb
aas
mov
sarl
div
aaa
cmp
push
xor
jl
xchg
xor
jg
mov
xor
xor
sub
push
add
pop
push
inc
xor
das
xorb
into
shrl
jno
xor
cmp
and
aaa
stos
xchg
mov
call
rolb
sbb
ja
dec
xor
xor
mov
xor
xchg
xor
xor
xor
xor
xor
xor
dec
sbb
pop
ret
ss
mov
ss
add
push
sbb
ss
mov
popa
jl
test
sub
das
cmp
add
pop
cmp
ljmp
decb
pusha
or
cmp
xor
xor
cmp
xor
ds
cmp
cmp
pop
cmp
icebp
inc
xor
outsl
cmp
shr
and
cmp
iret
or
cmp
idivb
mov
cmp
cmp
cmp
ljmp
sbb
cmp
cmp
cmp
cmp
pop
push
mov
iret
cmp
cld
cmp
jg
inc
ds
ds
ds
cs
add
push
cwtl
xchg
xor
jmp
xor
xor
xor
xor
push
xor
jg
mov
xor
xor
xor
xor
ljmp
inc
lds
xor
xor
outsb
xor
loopne
repnz
and
inc
ss
ss
bound
xorl
ss
ss
sub
add
fnsave
jecxz
clc
ss
clc
clc
ss
aaa
or
push
push
xor
xor
inc
aaa
stos
mov
sbb
cmp
jecxz
cmp
sbb
pop
and
mov
mov
fmull
cmp
push
in
jmp
repz
cmp
cmp
cmp
and
adc
outsl
jg
cmp
cmp
pop
push
push
sar
cmp
jns
jle
xchg
mov
xchg
dec
lahf
cmp
cmp
aas
push
push
add
insb
cmp
cmp
cmp
cmp
cmp
cmp
mov
push
fs
cltd
sub
push
jecxz
sbb
adc
pop
and
cmpl
aas
ret
aas
iret
fdivp
fcomps
adc
xor
dec
xor
jp
jg
lea
xchg
xor
xor
xor
xor
xor
xor
jo
in
jg
mov
pop
xor
xor
push
or
cmp
mov
and
xor
xor
ret
clc
or
adc
push
ss
ss
arpl
stos
push
or
jg
jmp
xor
pop
sar
aaa
jne
jle
or
sbb
sub
xor
cmp
sbb
cmp
cmp
cmp
aaa
or
or
cmp
cmp
cmp
sbb
and
ret
fnstsw
fists
stos
inc
scas
in
inc
out
ds
or
xor
or
cmp
aas
fstpt
and
adc
fbstp
divb
data16
dec
pop
xor
mov
xor
xor
xor
leave
mov
mov
ja
shlb
fdivl
out
xor
xor
xor
xor
xor
xor
xlat
xor
ja
xchg
pushl
mov
pushf
ss
mov
sbb
gs
push
ror
ljmp
data16
jb
cmp
int
inc
cmp
push
cmp
mov
push
pop
push
jmp
std
cmp
inc
ds
imul
jecxz
xchg
mov
lret
aas
lods
add
int3
cmp
xor
clc
dec
cld
xor
out
sub
sbb
cmp
cmp
dec
daa
sbb
pop
cmp
outsl
ud0
cmp
xor
xor
xor
xor
or
ss
imulb
or
pop
dec
mov
push
xor
mov
pop
aaa
arpl
pop
pusha
cli
mov
pop
out
xor
xor
mov
push
je
js
add
push
inc
jae
ret
mov
aas
jle
xor
mov
jl
mov
test
or
pop
lods
cmp
ret
dec
int3
dec
sbb
enter
in
xor
cmp
or
add
int3
xchg
ds
pusha
xchg
insb
jb
inc
sbb
sbb
xor
xor
xor
loopne
call
xor
or
or
adc
adc
sbb
sbb
and
sub
cmp
inc
xor
or
xchg
pop
xor
dec
sbb
xor
xor
scas
test
es
test
mov
mov
nop
xor
add
mov
jo
repnz
popf
xor
ret
fwait
sarb
fadds
fadds
js
lock
nop
xlat
xor
add
jle
jp
cmp
ret
sarl
push
xor
outsb
jo
bound
sub
mov
mov
cmp
dec
add
lret
fmull
cmp
pop
daa
cwtl
out
shl
ljmp
adc
sbb
sub
push
insb
xor
xor
xor
xor
shll
jecxz
xor
add
and
sub
pop
xor
xorb
xchg
cmp
popa
mov
jb
xor
fmull
xor
xor
xor
xor
xor
inc
add
lahf
addl
loop
adc
sub
inc
incl
fdivs
xor
aam
xor
xor
xor
xor
push
jmp
loopne
xor
pop
xor
mov
xor
xor
pop
mov
xor
xor
mov
scas
pushf
xor
sbb
lock
xor
xor
xor
xor
xor
into
shlb
int3
or
add
mov
xor
cmpsb
mov
mov
popa
pop
sub
jecxz
call
xchg
xlat
sbbb
push
add
adc
fdivr
add
sbb
dec
inc
cmp
cmp
cwtl
fcomi
out
mov
add
or
mov
decl
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
std
fwait
ret
nop
les
or
pop
sbb
adc
adc
cmpsb
add
or
adc
pop
adc
test
add
add
sahf
add
inc
mov
add
and
sbb
add
rcll
add
push
mov
call
push
popa
pop
and
xor
inc
mov
adc
xor
cmpb
daa
inc
dec
inc
es
jp
and
push
or
test
mov
cmpsl
xchg
and
cwtl
add
mov
xchg
ret
popa
xchg
test
imul
sbb
pusha
xor
into
add
adc
shlb
pop
scas
cmp
adc
add
int
push
adc
pop
popa
jno
and
adc
mov
push
pop
sar
or
xor
adc
loope
icebp
mov
add
pop
mov
xorb
scas
and
inc
lock
or
js
pop
les
jo
or
add
decl
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
dec
incl
mov
movsl
jecxz
cli
pop
mov
lcall
mov
xchg
jg
or
insb
sub
addr16
out
or
call
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fidivrl
ljmp
in
mov
orb
int3
lcall
mov
push
pop
mov
in
js
pop
mov
popl
movb
xchg
sbb
scas
adc
mov
pushl
sub
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
lcall
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
test
and
lea
pop
cwtl
int
arpl
push
out
or
mov
push
sahf
pop
clc
sti
jg
jno
lock
mov
call
sarl
xor
hlt
and
xchg
jmp
sbb
xchg
outsl
xchg
add
lcall
jb
mov
or
push
mov
sub
pop
mov
jl
rorl
lahf
subb
push
gs
jg
hlt
push
add
paddsb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
mov
push
pop
xor
jns
mov
in
jne
push
dec
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
call
push
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fdivr
mov
lcall
sbb
sbbl
into
andl
aas
loopne
cli
adc
outsb
dec
aaa
xchg
in
add
inc
adc
loope
fisttpll
push
fnstsw
cli
push
push
push
idivl
cmp
fildll
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
pushl
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
adc
ljmp
cli
je
scas
cmpsb
orb
mov
in
fistl
cmp
js
jmp
xchg
pop
clc
pop
hlt
lret
mov
cmpsb
xor
add
lea
jg
gs
std
cmp
mov
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
lcall
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
cmp
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
std
inc
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
jmp
and
fadd
or
mov
nop
enter
mov
inc
in
mov
outsl
inc
shrb
lods
hlt
cmp
fildl
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
fildll
clc
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
lcall
dec
xlat
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
std
pushl
pusha
imul
add
mov
cmp
xchg
mov
mov
in
mov
jb
and
add
jae
shrb
shlb
ljmp
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
scas
les
cli
adc
and
lahf
fdivr
jl
fisttps
enter
jecxz
scas
sub
in
pop
mov
icebp
jmp
hlt
sub
mov
dec
incb
fisubrl
aas
mov
fsubrs
mov
inc
or
pop
jg
add
jg
mov
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
aas
js
incb
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
and
clc
addl
mov
imul
scas
fidivrl
or
add
mov
faddl
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
lock
testb
pop
rolb
pop
inc
jb
fistpl
adc
call
outsl
mov
data16
pop
nop
mov
inc
sti
arpl
clc
mov
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
pop
cld
jg
xor
fsubr
fistps
lds
fidivrl
jg
stos
call
sbb
add
dec
mov
sub
jge
xor
lahf
les
inc
mov
sbb
cld
addl
adc
cld
lcall
mov
lahf
outsl
int3
push
sbb
sti
incl
mov
jle
xchg
popa
out
out
outsl
xchg
mov
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
cld
lcall
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
mov
js
pop
jg
pop
shrb
rcl
jg
adc
xor
std
lcall
mov
gs
pushf
lea
jp
jnp
jecxz
mov
lds
push
pop
adc
imul
or
inc
pop
xor
idiv
jmp
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
push
incl
fwait
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
add
insb
test
aas
repz
sbb
lock
in
jmp
out
sbb
aaa
clc
jp
jb
push
std
mov
or
scas
subb
lods
out
jne
or
cmc
mov
push
mov
push
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
out
pop
or
or
dec
ss
mov
leave
inc
lods
movsb
or
repnz
mov
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
cld
outsl
incb
mov
pop
lock
jmp
hlt
dec
mov
in
scas
sbb
xlat
inc
aas
mov
jg
mov
mov
addr16
sbb
cld
daa
jp
std
adc
cld
jbe
inc
cltd
or
mov
ret
nop
cmp
das
incb
add
pop
pop
div
cld
idivl
fcomi
add
stc
lahf
loope
jae
jmp
shrl
je
jge
std
scas
bound
jg
stc
add
out
leave
xchg
inc
icebp
mov
loope
mov
cmpsl
popf
sti
sub
mov
ja
push
outsl
das
jge
fwait
dec
das
add
cmpsb
cmp
call
std
add
decb
adc
mov
and
jo
adc
call
mov
add
jg
push
mov
inc
add
nop
test
aaa
std
fisttps
fdivp
push
dec
inc
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
jae
arpl
adc
jbe
mov
mov
pop
clc
loope
loope
mov
or
scas
sbbb
jg
roll
jno
sbb
and
fmull
cld
pop
cmp
cmp
repz
sbb
pop
gs
lds
dec
sarl
pop
out
jg
jno
ret
jmp
cmp
push
sbb
inc
push
dec
jge
pop
clc
call
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
push
push
push
sbb
push
add
std
mov
daa
jmp
faddl
mov
add
jae
jmp
pop
add
pop
stc
push
dec
out
fstpt
inc
dec
cli
jecxz
mov
enter
loopne
aas
add
fsts
dec
incb
sub
or
add
push
sti
pop
inc
fs
xor
push
push
push
shll
mov
nop
mov
test
and
jg
lods
and
add
in
arpl
pushf
jecxz
pusha
std
ljmp
int
push
mov
add
dec
and
jg
mov
pop
and
lcall
sub
lea
aas
sub
and
mov
jmp
xchg
outsl
popf
js,pt
mov
add
mov
cmpsb
andb
out
lcall
push
cltd
and
mov
daa
push
add
inc
mov
xchg
or
mov
mov
lret
jbe
mov
in
jo
pop
int
fdivl
push
jl
mov
scas
in
adc
xor
mov
scas
xorl
adc
adc
lret
lret
push
lcall
mov
adc
push
jns
fdivrs
mov
lahf
in
loope
pop
les
lcall
add
sub
cmpsb
fimull
pop
jmp
sub
mov
incl
stc
fs
and
out
pop
gs
lcall
jae
xlat
enter
fcoms
inc
jmp
mov
int
jnp
push
mov
xor
xorb
out
add
decl
sub
and
pop
push
fnstsw
scas
pop
cmpl
mov
out
ja
xchg
incl
jle
adc
out
xchg
ljmp
xchg
mov
jae
push
jmp
pushl
repz
pop
cmp
push
fldenv
out
std
cmpsb
mov
add
ljmp
inc
ret
in
jno
mov
out
push
add
inc
hlt
adc
cmp
out
incl
push
fistpll
ficomps
lret
aad
lahf
mov
dec
jnp
or
or
xchg
fs
loop
inc
mov
inc
lods
scas
js
cmovp
add
bnd
les
ljmp
lods
stos
sbb
xchg
xchg
rclb
add
mov
int
inc
cmpsl
jnp
mov
inc
adc
sbb
and
test
lea
mov
out
shlb
push
out
mov
jmp
fwait
pushf
add
mov
pusha
inc
clc
fisttps
or
mov
jp
lock
in
or
pushl
iret
xchg
and
dec
popa
rclb
push
xor
iret
mov
lcall
push
adc
adcl
aam
loop
xor
repz
jl
xchg
cmc
mov
and
mov
rep
mov
mov
ret
lock
loope
sub
fbstp
imul
data16
lods
mov
lcall
ja
insb
cmpsl
or
shlb
fsubl
cmpsl
sub
call
mov
mov
mov
pop
aad
mov
sbb
dec
ljmp
jl
dec
fbld
ret
shlb
sub
mov
dec
inc
jnp
cmp
cmpsl
pop
cmp
clc
fcomip
inc
cmp
clc
ret
xor
inc
dec
xor
lods
loop
and
es
adc
inc
rorl
pop
add
mov
mov
and
cmp
mov
enter
jg
std
mov
pop
repnz
adc
das
out
mov
lods
xor
or
decl
lods
xor
insb
fwait
mov
add
sub
out
scas
push
mov
pop
xchg
incl
cmp
pop
add
adc
enter
iret
adc
adc
and
jmp
jb
jmp
cs
push
inc
fstpt
adc
or
repnz
or
jno
xchg
in
jg
xor
pop
sahf
dec
repnz
inc
movb
lcall
mov
lcall
mov
mov
pop
dec
out
imul
mov
xchg
outsl
clc
scas
cli
aas
push
adc
leave
data16
inc
cmp
sub
pop
lcall
sub
dec
mov
jb
scas
pusha
fdivrs
mov
jge
aas
push
int3
push
or
pushl
loopne
dec
arpl
mov
cli
daa
test
pop
mov
mov
fidivrl
push
ret
das
sti
lahf
cmc
in
and
add
fadds
test
fiadds
pop
mov
jmp
sub
loopne
jo
jne
cltd
push
or
sub
sub
xor
sub
mov
jmp
add
ret
mov
mov
or
mov
cmp
mov
int3
call
pushl
pusha
jg
add
dec
pop
cmp
push
insb
andb
or
aas
fwait
xchg
or
out
add
lret
cltd
aas
mov
loopne
in
cmp
test
ljmp
push
cmp
lcall
lahf
xor
daa
push
xchg
add
call
jno
lds
fs
jae
xor
jmp
fcompl
call
mov
pop
push
jb
shl
imul
insl
cmp
mov
pop
mov
xchg
aas
das
xor
in
ficoml
xlat
pushf
daa
in
ds
sub
sbb
adc
jne
hlt
jae
cltd
pop
add
push
mov
and
adcb
decl
inc
add
into
repz
aas
mov
inc
lret
sub
into
sub
dec
push
push
add
fcomip
xchg
imul
adc
pop
adc
mov
stos
stos
jg
or
mov
pop
scas
enter
dec
incl
jle
rolb
leave
mov
mov
mov
cmp
mov
pop
inc
xor
sbb
xchg
lock
pusha
aad
adc
pop
xor
push
pop
mov
decl
icebp
dec
into
sub
cli
pop
push
push
addr16
cwtl
insb
test
rcrb
pushl
scas
sub
daa
or
loope
push
pop
and
add
add
jo
jg
and
push
leave
jp
cmp
dec
fwait
movsb
dec
inc
xchg
shll
pop
subl
aaa
fildl
cld
mov
jae
cld
leave
test
imul
fmulp
push
or
cmpsl
push
push
arpl
pop
popa
xor
jg
insl
xchg
pop
xchg
mov
lret
lahf
add
cmp
pop
inc
das
clc
and
mov
ljmp
test
aas
out
or
and
cmp
lcall
sbbb
push
add
inc
lahf
xchg
inc
fisttpll
icebp
jns
adc
sub
mov
outsl
ljmp
in
mov
mov
out
mov
and
pop
cli
inc
xor
pushf
scas
shlb
decl
cmp
cmp
inc
dec
scas
fwait
mov
jnp
sti
xchg
dec
cld
jl
gs
add
add
ljmp
cmp
scas
push
mov
inc
bound
sbb
pop
jge
mov
incl
sarb
mov
sub
add
jae
xor
jo
fadds
xor
das
jge
pop
adc
decl
fstp
dec
movsb
aas
and
push
stc
jg
lock
mov
stc
divl
or
push
inc
mov
mov
and
ljmp
pop
mov
dec
dec
add
pop
in
stc
xchg
call
pop
add
jle
insb
dec
xor
pushl
lahf
push
add
cmp
movsl
and
int
adc
dec
mov
mov
inc
test
push
inc
sarl
or
in
pop
push
hlt
pop
repz
mov
dec
jne
add
mov
push
xchg
xor
mov
test
ljmp
or
dec
fidivrl
pop
adc
inc
jo
fdivr
add
mov
repnz
mov
or
pusha
add
add
jne
ror
push
shlb
adc
mov
js
push
incb
inc
push
repnz
test
das
into
mov
mov
inc
enter
pop
push
add
or
cmp
std
mov
xchg
or
stos
test
add
and
test
xchg
jmp
inc
and
data16
mov
lods
insb
fisttpll
and
addr16
push
sarl
pop
pop
cmp
stos
push
cmpsb
add
jmp
jl
xor
add
pop
ds
mul
in
mov
jmp
or
mov
mov
and
jmp
push
in
xor
outsl
and
dec
subl
mov
xor
cmpsb
std
sub
jle
cmpsl
or
pop
push
cwtl
adc
mov
lods
pop
test
or
inc
inc
dec
fisttpl
mov
popa
in
outsb
ds
pushl
xchg
fbstp
fldenv
dec
xor
sahf
dec
pop
push
movsb
mov
iret
pop
mov
cwtl
mov
push
pop
rolb
and
push
mov
or
inc
js
imul
arpl
call
fcomps
outsb
cmp
jmp
dec
pushf
mov
imul
and
add
lods
aad
aad
pop
inc
test
inc
scas
lods
add
jno,pt
out
in
mov
xchg
insb
push
mov
cwtl
mov
roll
xchg
dec
call
pushf
xchg
push
aam
popa
jno
mov
mov
sbb
sbbb
mov
adc
pop
or
dec
arpl
xorl
jne
das
mov
sub
aaa
call
sub
mov
add
jmp
scas
and
lds
add
filds
mov
fmull
mov
jmp
fbstp
mov
pop
lcall
movb
cmc
lods
shll
push
mov
jbe
arpl
jns
les
stos
ja
and
pop
loopne
push
lods
jecxz
insl
mov
insb
dec
pushf
jge
sbb
orb
fsubrs
pushl
push
mov
and
jne
div
pop
fstp
leave
mov
cmp
sbb
mov
xchg
insl
pop
pushl
push
shrl
push
pushf
jb
loopne
incl
jl
add
jecxz
sub
pop
bnd
out
pushl
pop
ja
pop
leave
je
cld
pop
data16
push
lea
test
xor
sbb
mov
xlat
fstl
into
cwtl
mov
dec
push
decb
or
xor
clc
das
sar
mov
mov
sub
es
clc
lcall
sbb
ja
add
inc
cmp
push
test
out
clc
incl
mov
xchg
jecxz
cmp
adc
lret
ljmp
call
js
outsl
xor
xchg
adcl
inc
xor
lcall
sbb
pop
add
xor
call
pop
clc
loope
rorb
sti
ret
mov
push
ljmp
lcall
cmp
fdivr
repnz
cmpsl
pop
in
xchg
les
pushl
mov
out
imul
push
pop
js
imul
test
dec
add
pop
lcall
add
rcrb
stc
push
lods
xchg
rclb
sbb
cmpsb
aas
mov
decl
hlt
pusha
pop
das
scas
push
ja
out
or
ljmp
jmp
int
push
jmp
or
ljmp
lret
out
push
stos
stos
test
movsl
mov
add
sub
xchg
cmp
push
jae
es
mov
gs
insl
adc
decl
call
pop
fsubrl
dec
mov
movsl
enter
js
sbb
jb
inc
rcrb
cld
dec
mov
adc
orb
add
sbb
paddusw
leave
out
ds
lock
imul
int3
sahf
filds
mov
or
sbb
mov
jecxz
xor
outsl
lods
push
cltd
leave
outsl
cmpsb
js
sub
call
adc
ljmp
sti
stos
in
jecxz
aas
and
cmc
fcomip
incl
cmpsb
arpl
xchg
adc
push
outsb
pop
push
incl
adcb
rcrl
subb
mov
cmp
pop
cmpsl
rorb
fstpt
popf
pusha
mov
pop
jnp
test
cs
incl
fwait
ss
xor
xor
test
scas
pop
mov
rcll
jle
push
in
in
aam
out
sbb
ret
sbb
mov
pop
xlat
movb
cmpsl
ret
imul
sbb
bound
ljmp
cmp
fadd
test
outsb
cld
inc
mov
jno
and
sub
subl
icebp
jle
mov
in
mov
push
les
std
ds
push
aad
call
xor
xchg
mov
fldt
lock
ss
adc
ljmp
iret
stc
jg
pushf
cld
aam
add
clc
ret
mov
into
pop
mov
jg
decl
sbb
xchg
inc
daa
mov
lods
inc
or
jmp
cwtl
xchg
mov
jbe
jmp
ret
mull
mov
cmp
shr
mov
push
and
out
pop
xchg
decl
cld
cmpb
and
mov
stos
add
xchg
cmp
push
sbb
xor
ljmp
sub
fistps
adc
push
cmpsl
insl
test
in
cld
loop
xchg
movsl
shrb
imul
jmp
loopne
repnz
fdivl
lds
add
mov
dec
rorl
fisttpl
pushl
mulb
pop
and
or
sub
repz
or
shll
jns,pn
dec
mov
sbb
lcall
sbb
lahf
mov
and
cmc
mov
push
cld
mov
test
inc
mov
add
pop
sub
pushf
nop
jl
and
mov
call
pop
scas
outsb
dec
arpl
add
aas
test
adc
stos
je
in
test
pop
cwtl
pop
mov
subb
or
mov
pop
iret
out
lods
mov
call
adc
lahf
in
xchg
dec
fisubrl
icebp
push
es
addb
cmpsl
les
push
in
ds
imul
ffreep
int3
fcomi
stc
mov
mov
xchg
lcall
out
addb
mov
out
repz
hlt
ljmp
adc
xlat
inc
sarb
shl
or
shll
lcall
jmp
add
adc
fcmovnu
jp
push
pop
inc
inc
fldt
pushl
call
fwait
mov
ret
pop
and
add
jae
push
push
cmpsb
cmp
lcall
cmp
xor
sbb
mov
jo
movsl
push
xlat
cmp
add
incl
cmp
inc
pop
push
mov
call
adc
cmpsl
cmp
inc
mov
hlt
outsl
mov
stc
mov
lcall
loopne
ret
out
popf
sti
aas
out
cmpsb
sub
push
jle
inc
cmp
sbb
lea
mov
sub
mov
test
ljmp
pop
out
mov
fnstsw
mov
loop
push
adc
mov
or
ret
aad
jbe
shrb
insl
insl
addr16
popa
inc
mov
ret
inc
mov
jg
decl
push
int3
adc
cld
imul
movsb
mov
sub
mov
mov
push
sbb
clc
movsl
int
into
lods
ljmp
mov
cmp
mov
jno
xor
bound
pop
or
je
movsb
pushl
jl
push
fdivrs
jmp
cltd
loop
mov
jne
and
stos
test
ret
inc
test
pop
test
cmc
inc
pop
or
sbb
mov
call
pop
push
and
jp
mov
and
add
push
imul
mov
dec
cli
jecxz
pop
mov
jno
mov
shll
cmp
or
mov
and
push
ds
fldt
call
les
mov
jle
stc
push
cmp
std
push
fstps
lcall
dec
int3
jp
fucomip
int3
push
jmp
sub
repz
rol
ljmp
sub
es
pop
or
jg
pop
das
test
xchg
inc
push
inc
repz
cs
lock
lods
push
mov
and
inc
pop
cmp
inc
subl
lahf
testb
add
mov
lcall
mov
incl
dec
jl
inc
xchg
jb
jl
nop
movsb
iret
pop
shl
mov
clc
lcall
push
lahf
enter
mov
jo
hlt
push
sbb
sub
ljmp
mov
inc
adc
mov
mov
sbb
test
pop
ljmp
call
ds
stc
rolb
jo
rcr
out
jecxz
jp
lods
aaa
pop
movsb
mov
call
pushf
sub
and
pop
lods
mov
jno
xlat
fisttpll
push
sub
je
out
push
lcall
inc
orb
add
mov
dec
test
fildll
xor
mov
xlat
divl
stc
inc
jg
cmpl
int
insb
jne
xor
inc
movsb
inc
sbb
mov
in
push
sub
mov
xlat
push
xchg
jg
cmp
lods
in
cmp
xlat
call
je
stc
mov
push
test
xchg
pop
loop
idivb
ds
fisubrl
xchg
fldenv
jecxz
sub
inc
jb
jno
lods
roll
aaa
cld
jmp
imul
push
pop
mov
cmp
mov
mov
or
dec
mov
mov
movsl
xor
xlat
js
jmp
push
mov
dec
push
xchg
inc
icebp
int
imul
call
cmp
mov
fsts
cs
pop
daa
jno
lods
add
call
push
xchg
dec
in
and
lret
xor
sbb
mov
out
dec
cs
repnz
cld
incl
mov
shl
test
dec
add
fwait
sbb
dec
repnz
xor
push
xor
lahf
imul
das
cli
sub
adc
stc
jmp
inc
lcall
pop
mov
push
jg
mov
push
es
inc
xor
aam
lcall
outsl
loop
into
push
add
cmpsl
xor
icebp
inc
aad
mov
mov
cli
incl
orl
mov
add
cmpsb
and
add
mull
mov
shll
pop
xor
cmp
mov
stos
xchg
rcrl
inc
cltd
and
and
daa
cmp
movsb
jnp
nop
movsl
mov
aad
int3
cld
stos
cli
call
std
sbb
out
cwtl
scas
sahf
xchg
adcb
xchg
mov
outsl
ficomps
push
pusha
mov
pushl
popf
push
sub
push
inc
test
cmc
loope
sbb
cs
xor
popa
mov
push
scas
outsl
cmp
adc
out
fdivr
and
lds
ja
cli
test
dec
mov
cmpsl
in
repz
adc
and
or
jb
dec
pop
pop
pop
ljmp
sbb
mov
mov
jbe
mov
cmpl
sub
mov
sbb
repz
popl
adc
lcall
and
cmp
sub
jmp
loope
in
hlt
push
in
pop
lock
cmp
xchg
jae
shl
jae
mov
mov
loopne
cmp
xchg
xchg
cmp
dec
es
in
inc
xchg
push
cltd
mov
mov
lcall
pushl
mov
les
adc
add
dec
movsb
cmp
mov
mov
cmp
addr16
loope,pn
pop
ds
or
jg
into
jnp
sub
and
pop
mov
ljmp
fucom
fmul
loope
mov
into
mov
mov
bound
xchg
test
add
lcall
dec
sub
jno
push
xor
cmpb
stos
xchg
sub
loopne
mov
das
sar
lret
test
roll
out
cs
popa
and
iret
and
insl
enter
jp
in
sub
fbstp
popa
mov
add
scas
fistpl
ret
adc
lcall
xchg
aam
sarb
mov
out
mov
lods
mov
sub
mov
aam
call
hlt
mov
pop
or
into
icebp
cmp
cmp
pop
jg
out
lret
imul
shrl
inc
xor
das
nop
dec
ds
std
fcomip
jb
and
stos
cmp
push
pushf
data16
pop
mov
pop
add
das
mov
add
ret
add
ljmp
xchg
enter
pushl
pop
int
out
and
bound
sbb
sub
adc
fcomps
mov
cwtl
imul
shll
out
or
clc
dec
pop
repnz
fisttpl
leave
jmp
add
pop
xor
rorb
push
xchg
lods
out
cmp
outsb
inc
leave
push
loop
lcall
push
cmpsb
sbb
jno
xchg
mov
jmp
scas
mov
push
cmp
call
mov
mov
daa
movsb
leave
repz
fiaddl
lret
mov
fnstcw
fistl
push
sub
enter
pop
adc
pushf
int3
adc
dec
pop
hlt
popa
adc
and
push
cmp
jg
xchg
mov
or
in
push
lods
jp
fbld
jae
daa
add
pop
xchg
cmpsb
mov
mov
jecxz
fidivrs
or
mov
pusha
mov
and
sub
inc
mov
js
rcll
mov
mov
out
fnsave
xor
and
push
nop
mov
adc
gs
jmp
or
fdivr
pop
testb
cmc
push
lods
adc
ljmpw
sbb
push
mov
or
cmpb
aad
cmp
jne
loopne
fcomip
sbb
push
sbb
dec
ror
stos
pop
mov
call
lahf
jecxz
popf
outsb
aaa
rcll
outsb
lcall
pusha
mov
mov
cmp
push
or
jge
in
jo
rep
cmpsb
xchg
push
add
lahf
out
lret
cwtl
cmp
ss
cmc
jg
incb
and
mov
loopne
inc
mov
cmpsl
add
and
pop
call
cmp
pushw
inc
xor
es
push
shll
lcall
push
sahf
inc
push
popa
pop
shl
or
mov
sti
xor
insb
std
roll
pop
movsb
xor
dec
imul
lods
pop
inc
adc
fldt
fildl
jp
insl
xchg
xchg
pop
ljmp
mov
jmp
movsb
loope
mov
rclb
dec
ret
mov
call
mov
stos
fidivrs
jnp
jecxz
pop
push
and
gs
add
mov
lcall
cmp
cmp
xchg
and
xchg
stc
movsl
outsb
testl
fcomip
lods
push
xchg
aam
push
cmp
enter
push
cmpl
subb
ljmp
sbb
cld
and
aaa
push
jnp
adc
mov
cmp
lcall
inc
in
xor
sub
sar
mov
or
into
pop
lock
cmp
lcall
hlt
outsb
mov
outsl
sub
mov
jp
pop
icebp
sub
sahf
sar
call
imul
nop
jne
lods
jbe
jmp
aad
ja
in
pop
aaa
jmp
push
scas
push
fildll
imull
ret
xchg
popa
fdivrp
adc
mov
lock
sub
movb
push
cs
jmp
or
scas
addr16
xor
ret
push
push
scas
mov
shl
ds
pop
fsub
cmpsl
incl
test
ret
mov
pop
mov
push
sbb
orb
add
addr16
in
pop
lret
ljmp
scas
inc
test
insl
loop
fs
sahf
out
les
sbb
cld
mov
pop
jae
xchg
jg
ficomps
sbb
in
movl
inc
nop
setbe
les
lcall
dec
jl
test
sbb
inc
mov
fimuls
fistpl
dec
ljmp
in
test
lods
mov
pusha
popf
movsb
dec
cmp
incl
inc
add
pop
dec
xchg
mov
int
mov
inc
dec
icebp
dec
sub
outsl
gs
jmp
mov
or
call
mov
xchg
xchg
jne
outsb
fucomi
xchg
pop
test
rclb
ret
dec
sbb
stc
mov
pop
jmp
cli
sbb
sub
in
xor
inc
rolb
pop
pop
leave
sar
pop
fsubl
fdivl
mov
jge
fbld
cmpb
xor
decl
in
and
jno
jbe
push
popa
pop
inc
rorb
or
aad
xor
inc
movsb
pushf
dec
dec
sub
fwait
pushf
mov
mov
jecxz
call
fistl
decl
adc
cwtl
pusha
mov
inc
xor
add
sbb
jle
pushl
sbb
mov
push
add
and
adc
pop
sarl
mov
ljmp
and
rcrb
xchg
aaa
push
loopne
mov
lods
or
loope
xchg
add
sbb
test
sbb
jmp
mov
iret
ds
mov
aad
sahf
fisttps
into
inc
mov
pop
mov
lcall
int
pop
pop
gs
test
push
icebp
ret
dec
fsubrs
add
and
xchg
call
outsl
mov
dec
jl
mov
in
jge
in
daa
fwait
pop
add
cmpsb
outsb
xor
cmp
dec
fs
jmp
das
aas
fcom
fucom
stc
mov
adc
sbb
sub
or
aaa
cld
mov
fidivs
xor
fimuls
loopne
shrb
decl
leave
enter
dec
and
out
out
stc
in
push
push
test
inc
and
decl
cmp
fisubl
and
or
ret
xchg
fidivs
int3
icebp
adc
pop
stc
decl
mov
nop
inc
push
fsubl
icebp
ss
push
test
xchg
xchg
jmp
add
into
fistpll
mov
mov
cltd
mov
pop
mov
call
aad
dec
pop
aas
incl
test
lcall
mov
decl
in
int
cmp
and
out
or
pop
aaa
dec
and
mov
jae
push
and
lret
in
push
cmp
pushl
es
adc
jmp
repz
mull
sbb
add
call
lcall
pusha
inc
and
xor
jmp
xor
jle
std
push
push
pop
pushl
in
mov
push
repnz
lret
or
jp
cmp
mov
aas
sbb
xchg
mov
dec
and
push
outsb
pop
mov
inc
cmc
repz
outsb
adc
push
mov
mov
push
xor
or
fisubl
fwait
cmp
call
dec
cmp
mov
jp
shl
das
cli
pushf
test
cli
dec
idiv
or
stos
xor
insl
sbb
inc
clc
enter
movsl
and
cmpsb
mov
cmp
pushl
jo
xchg
pop
roll
fldcw
jnp
jg
or
jle
test
jmp
sub
push
jne
cmp
pop
xor
cmpsl
fs
fsubrp
jbe
mov
mov
outsl
aad
in
repnz
lahf
sub
cmpsl
repnz
mov
movsb
pop
sub
cmp
subb
into
fucomp
add
clc
decl
fcoml
sahf
cmpsb
mov
iret
sbb
mov
in
loope
out
inc
mov
dec
or
jo
and
inc
ficoml
das
int3
outsb
mov
sbb
test
sbb
add
rcr
aam
jbe
clc
call
outsl
xorb
adc
lret
mov
jg
lret
or
adc
push
lea
in
inc
dec
aas
iret
stos
jl
not
fmuls
jmp
mov
mov
mov
ja
xchg
inc
jl
out
iret
ror
cs
xor
dec
clc
sbb
dec
cltd
clc
lcall
popa
or
or
pushl
repz
jp
xor
loope
mov
mov
jg
push
add
iret
call
clc
daa
inc
cmp
stos
sub
je
repz
incl
inc
jno
clc
out
or
pop
lret
lahf
dec
jae
xlat
mov
push
in
popf
sbb
loop
das
jecxz
int3
pusha
adc
test
loop
mov
roll
adc
and
test
jae
dec
int
xchg
sbb
out
cmp
mov
inc
fwait
push
sub
dec
neg
add
rcrl
adc
jmp
shlb
lock
pop
enter
fildll
or
fists
fisttpll
ljmp
cmpsb
xchg
loop
cmp
mov
xchg
cmp
xlat
and
lods
int
xor
jmp
in
cmpsb
sti
push
cltd
push
in
out
iret
push
jle
or
mov
ret
sar
xchg
call
test
and
in
dec
cmp
adc
movsb
push
jecxz
or
jns
cwtl
mov
lcall
xor
mov
iret
jnp
stos
pop
nop
dec
fdiv
jl
cmp
mov
inc
pop
sbb
push
nop
aaa
and
dec
add
cli
lret
lahf
pop
movsl
insl
fucom
or
das
movsl
or
shll
sbbl
jp
jne
jle
imul
scas
seta
stos
ret
xchg
loope
iret
mov
mov
mov
pop
cmp
inc
dec
lods
or
ljmp
or
mov
das
mov
sbb
xchg
scas
sahf
dec
rorl
lods
in
xor
adc
mov
das
rcl
or
push
push
iret
mov
leave
jae
mov
push
ret
test
mov
push
shlb
imul
xlat
fsubrl
adc
shl
add
call
imul
pop
adc
int
jns
dec
push
lods
test
or
pop
mov
sub
in
decl
push
and
dec
add
std
sub
adc
mov
sub
aas
repz
pushl
push
insl
inc
cmp
inc
jmp
imul
cmpsl
adc
scas
jns
std
ljmp
mov
lods
mov
popf
jo
xor
data16
out
lcall
jg
loope
add
push
rcll
pop
jmp
aaa
and
pushl
fwait
std
scas
mov
push
jge
inc
pop
add
mov
xchg
add
sub
mov
dec
into
cli
push
sbb
push
ret
push
andb
cmpsl
fldt
movsl
movsb
cmp
lcall
cmpsl
insl
pop
inc
inc
xchg
out
push
enter
outsb
lcall
cli
fiaddl
sbb
mov
enter
cs
idivl
lcall
adc
stos
jb
add
stos
stc
cmp
pushl
or
les
sbb
adc
push
sbb
push
rolb
jmp
daa
dec
out
call
or
xchg
outsb
push
movsl
movl
dec
inc
repnz
call
addr16
push
fsubs
or
leave
or
cmp
iret
mov
sub
pop
aaa
cld
decl
pop
insb
xor
ja
mov
cmc
sahf
inc
int3
repnz
cmc
ljmp
dec
ret
adc
add
stos
dec
cmpsl
cmp
mov
std
fbld
scas
sub
out
xor
xorb
mov
mov
lcall
es
loop
lods
insb
mov
jno
sbb
sti
jge
sub
cwtl
incl
sbb
xchg
dec
rolb
cmpsl
sub
loop
popa
push
pop
lock
sti
cwtl
add
pop
sub
fsubr
adcb
scas
inc
ret
lahf
dec
out
clc
lcall
push
xchg
inc
in
mov
push
ss
lock
jmp
dec
incl
cld
xchg
xor
negl
fsubs
jbe
jmp
jl
je
xor
xor
in
fbld
std
mov
push
or
xchg
push
or
push
jge
pop
pop
gs
mov
test
hlt
orl
inc
stc
in
push
ficompl
push
stc
outsl
into
cmp
and
push
mov
repnz
inc
mov
ficomps
imul
push
dec
rorb
xor
faddl
inc
sbb
incl
push
loopne
mov
gs
xor
loope
add
movsl
repnz
jecxz
mov
outsl
stos
fmull
insb
sub
lcall
pop
push
imul
xchg
pop
jle
cmc
adc
xchg
iret
pop
fistl
scas
scas
cli
lcall
faddl
jne
aad
mov
pushf
pop
push
jno
mov
and
loope
out
jp
cli
mov
add
push
popa
xchg
pusha
cmp
jg
lcall
adcl
repz
sbb
adc
aad
arpl
cmpsl
out
xchg
ljmp
sahf
mov
mov
nop
andb
sub
sub
pop
bound
call
jl
and
pusha
dec
cmp
and
inc
and
xor
pushl
imulb
sti
pop
jae
mov
scas
and
and
mov
or
decl
pop
call
stc
imul
push
jle
loopne
popf
fwait
jle
xchg
or
xor
jmp
or
mov
inc
into
lock
test
in
popf
ljmp
push
call
adc
add
sub
add
pop
sub
dec
jno
mov
sbb
xchg
lcall
cmp
inc
xor
leave
iret
clc
stos
mov
jne
ds
inc
or
lret
out
stc
clc
push
repnz
fists
sub
out
fs
out
and
and
mov
dec
pushl
jl
imul
xchg
mov
fcomp
pop
hlt
lcall
pop
or
insb
and
jle
scas
std
adc
push
loopne
and
scas
sbb
and
das
sar
enter
scas
mov
xchg
mov
rolb
push
sarb
call
je
popf
cld
xchg
inc
imul
push
mov
ljmp
flds
addr16
cld
jns
inc
subl
add
cmp
fnsave
cli
ja
loop
outsl
dec
push
adc
pushl
fistpll
into
sub
pop
test
mov
data16
xchg
ret
repz
decl
dec
pop
lret
sbb
filds
cmp
sbb
in
lahf
mov
call
lcall
ljmp
testl
daa
cmp
xor
or
ljmp
sbb
test
repnz
jle
mov
gs
mov
cmc
jns
call
push
hlt
shll
xchg
lret
scas
pop
pop
mov
lcall
andl
sbb
pop
adc
sbb
lcall
sub
dec
cmpsl
mov
jecxz
outsl
cli
inc
pop
insb
push
call
pop
icebp
mov
stos
xchg
pop
or
jmp
add
jno
pop
dec
aaa
inc
pop
cmp
push
and
adc
adc
test
lcall
ja
fs
lcall
xlat
cmpsl
repnz
pusha
xor
xchg
inc
ds
mov
lods
inc
clc
decl
or
xchg
xchg
push
test
mov
adc
fiadds
pop
xor
cmp
icebp
in
cmp
test
lods
lods
ja
clc
fdivr
add
mov
fdivr
dec
test
fstl
jmp
sahf
push
outsb
cmp
int3
jno
dec
or
cmp
or
loop
cmp
pop
out
sub
adcb
shr
adc
lahf
incb
cmp
cmc
gs
sbb
and
ss
in
fisttps
repz
mov
inc
gs
shll
mov
mov
xlat
test
out
or
fists
ss
jmp
push
cmp
sti
loopw
jp
repz
push
pop
xrelease
js
fisubl
stos
adc
push
std
jmp
ljmp
fisttpl
in
icebp
pop
lock
sti
fildl
jg
dec
jp
nop
in
pop
movups
es
hlt
outsl
pushl
pop
fwait
test
push
jb
xchg
aas
mov
sbbl
sarb
fisttpll
jmp
push
jmp
out
enter
inc
jns
out
outsb
adc
pop
and
mov
notb
cmp
push
or
mov
jb
imul
mov
jmp
bound
int3
fcomip
decl
jmp
xor
xchg
push
addb
inc
sbb
idivl
xor
lcall
jg
bound
or
dec
sbb
imul
fs
stos
jmp
les
sbb
or
mov
stos
jg
inc
adc
mov
incl
scas
out
loopne
jns
div
testb
xlat
cmp
add
push
outsl
enter
lods
insl
and
scas
cwtl
fs
lcall
push
sub
pusha
lahf
pusha
jo
into
pop
enter
nop
jg
std
mov
mov
ljmp
shlb
cwtl
sahf
mov
sub
out
adc
dec
loope
popa
in
xchg
in
es
lcall
cmp
cmpsl
pop
or
mov
adc
or
fdivrl
mov
mov
dec
jae
mov
xor
in
jmp
pop
cmp
jg
cmp
imul
mov
aad
mov
jmp
xor
insb
mov
sbb
imul
fstpt
adc
dec
mov
divl
ret
stos
mov
and
mov
adc
call
mov
or
dec
dec
jle
pop
cvttps2pi
inc
push
xor
int3
fnsave
call
ret
and
lret
fwait
xchg
movsb
sbb
ror
pusha
test
push
xchg
ds
and
out
and
or
lcall
push
jne
xor
add
pushf
jl
inc
shr
dec
add
sub
xchg
into
dec
cmpsl
adc
pop
dec
add
add
incl
add
cmp
int3
mov
mov
jg
cs
fistpll
xchg
pop
cmpl
push
in
in
push
mov
cmp
sahf
jl
cmpsb
and
push
mov
mov
lcall
imul
or
test
or
stos
nop
clc
jbe
mov
lcall
inc
inc
in
or
data16
xor
out
sbb
out
adc
ss
bound
dec
mov
call
pusha
aas
mov
jle
popl
mov
inc
or
cmpsb
push
mov
cld
in
lret
call
push
addr16
or
mov
or
mov
mov
sarl
mov
mov
sbb
mov
scas
mov
add
cltd
lock
hlt
test
into
add
cmp
and
mov
add
jg
fdivrp
lea
sti
push
sbbb
jae
call
jecxz
dec
sub
nop
mov
push
xchg
ds
dec
ret
add
mov
ja
cs
in
jae
or
les
mov
sarl
inc
shlb
push
ret
call
add
sbb
pusha
dec
lock
in
push
dec
cli
fnsaves
dec
jnp
mov
inc
shlb
mov
mov
xchg
sub
cld
mov
dec
push
jmp
jbe
scas
mov
push
mov
mov
jno
stos
cmp
incl
jbe
ja
inc
cwtl
adc
les
movsl
xchg
lret
iret
daa
popf
imul
loop
aad
cmp
xor
in
lock
and
or
sbb
loopne
push
addr16
xor
aad
das
outsl
insb
mov
popf
jmp
test
mov
enter
ss
or
sub
cli
mov
fwait
out
mov
adc
dec
icebp
in
pop
pushl
sub
mov
scas
fdivl
mov
mov
sbb
sar
fcmove
push
cwtl
rcrl
mov
push
popf
lahf
sbb
jnp
adc
rcrl
pushl
cmpsb
xchg
push
fidivl
fildll
lret
cmpl
fsubrs
shrb
mov
movsb
cmpl
jae
in
xor
and
ds
add
insl
lcall
or
adc
test
pop
adc
popa
push
jns
in
adc
out
jge
mov
rcr
gs
add
mov
mov
ja
sbb
sti
loop
xchg
mov
cld
dec
inc
sub
test
mov
bound
xor
or
outsb
jne
decl
jl
cmp
inc
loope
ret
outsb
insl
push
fnstenv
adcb
shrb
loopne
clc
jge
sti
inc
movsl
cmp
hlt
push
adc
jae
cmp
movsb
and
je
test
xchg
jo
ret
mov
add
sbb
xor
or
pop
ret
aas
iret
and
addr16
mov
test
push
fstl
out
push
xchg
xlat
in
add
cmp
movsl
cmp
mov
xchg
push
mov
aad
mov
add
push
js
stos
adc
outsb
outsb
ror
or
insl
cmp
mov
pop
out
jo
outsl
cmp
cmp
mov
dec
jp
je
inc
push
sub
incl
add
or
lcall
fnstcw
subl
or
out
ljmp
cli
xor
cli
adc
mov
jmp
imul
xchg
stos
pushl
push
sub
call
add
mov
dec
hlt
loopne
aaa
das
mov
pop
aas
into
lock
lock
jmp
aas
jno
cmpsb
jp
popa
lea
mov
pop
xchg
cmp
add
into
bound
insb
incl
jnp
push
sub
movups
nop
ljmp
fstpt
jno
xchg
sbb
decl
scas
lret
pushf
call
mov
cmpsb
sub
rcrb
repnz
dec
push
xchg
mov
sar
pushl
lea
cltd
xchg
pop
out
bound
xor
dec
or
adc
stos
jb
mov
push
pop
popa
js
mov
pop
adc
shl
adc
mov
aas
addb
pop
idiv
out
or
or
mov
shrl
adc
pop
xchg
lods
fwait
sbb
cltd
movsb
mov
push
xor
incl
mov
inc
mov
or
les
mov
outsb
mov
call
push
jle
cmp
add
addr16
pop
mov
lcall
mov
ficomps
xchg
push
out
leave
xchg
test
adc
cwtl
call
int
cmpsl
aam
pushf
adc
subb
inc
jl
dec
movsl
dec
dec
in
jb
mov
dec
movsb
dec
push
outsb
scas
fiaddl
mov
fxch
rcll
in
insb
cs
mov
incl
nop
xor
pop
call
sub
loopne
movsb
and
add
lods
decl
or
sahf
sti
es
cmp
dec
int
mov
mov
stc
fwait
add
mov
daa
adc
js
cli
stc
mov
dec
pop
lret
pop
mov
mov
inc
gs
divb
dec
cmp
pop
jmp
push
mov
insl
lods
dec
scas
lahf
loop
xor
dec
mov
mov
incl
dec
stos
nop
cmc
scas
push
shrl
aam
mov
ja
cmp
repnz
xchg
fstpl
or
xchg
je
mov
sbb
pop
fimuls
pop
and
std
repz
sub
jmp
or
decb
push
das
push
sub
mov
or
arpl
incl
or
mov
jno
dec
movsb
popa
dec
pop
xor
pop
adc
push
imul
addr16
adc
lcall
and
into
cwtl
in
push
pop
fstps
sbb
push
fcmovu
pop
cmp
clc
mov
out
jmp
daa
stc
inc
xor
pusha
push
hlt
mov
addr16
jmp
push
xchg
out
cmp
ds
lods
out
xor
call
xorl
aad
stos
cmp
add
setb
shll
xor
call
inc
push
or
mov
movsb
xchg
xor
mov
cli
scas
sbb
rcr
aam
sub
lret
cli
cwtl
pushf
icebp
scas
xor
pop
push
sub
into
dec
or
jge
test
jnp
mov
insl
mov
xor
adc
cwtl
cmp
jmp
inc
sub
loopne
add
pushf
imul
push
call
dec
adc
jge
xchg
adc
das
sbb
ret
mov
sarb
pop
outsl
add
lcall
popf
push
dec
lea
sbb
xlat
out
divl
inc
jae
mov
call
jae
and
clc
mov
cwtl
insl
cmpsl
sar
das
movsb
lret
ljmp
incb
dec
inc
inc
push
aad
mov
mov
incl
fwait
mov
mov
movsb
outsb
jmp
xlat
cmpsb
xor
adc
and
js
mov
arpl
fwait
jnp
shll
adc
cli
loop
and
mov
add
xchg
cmp
or
das
mov
adc
je
add
fisubrs
sub
addr16
ja
push
repnz
pop
add
dec
dec
mov
cwtl
push
sti
ret
sub
test
pushw
or
sbb
sub
and
lret
mov
cmp
xlat
fmuls
scas
or
ret
push
jge
sti
jns
lods
incl
movsl
pop
pusha
adc
inc
out
imul
adc
test
pop
leave
pop
ret
in
xor
arpl
in
test
lret
cmp
inc
rcrl
lcall
fistps
jbe
mov
pop
lods
xchg
jno
xchg
stos
fcomip
decl
ja
iret
je
push
mov
popa
mov
sahf
mov
cmp
cwtl
std
enter
decl
pop
fdivrs
lahf
jecxz
inc
repz
out
jnp
stc
or
loope
cltd
ficomps
inc
sahf
sbb
decl
sub
sub
pushf
mov
fildll
jns
inc
shr
xchg
cmp
adc
pushl
push
dec
sbb
mov
emms
out
xchg
cmc
out
in
inc
sbb
push
sbb
xlat
cltd
std
mov
icebp
sarb
lahf
and
aad
ss
xor
outsl
clc
outsl
ljmp
sub
cmp
or
mov
jmp
sbb
incl
add
mov
xchg
mov
stos
mov
sub
pop
push
dec
out
ja
inc
fidivl
mov
xlat
xchg
mov
sub
mov
pop
mov
in
jne
sbb
adc
fnstenv
fnsave
mov
mov
push
jns
pop
incl
fidivs
jae
lret
sub
dec
xchg
cltd
xchg
lds
daa
dec
mov
ljmp
push
mov
imul
data16
jmp
les
mov
lcall
fisubs
fnstcw
out
jmp
inc
mov
addr16
fidivs
pop
leave
in
jo
mov
push
cmpsb
fnstenv
add
int3
jmp
push
mov
rorl
mov
push
rclb
ret
push
ljmp
mov
lods
int3
mov
lcall
test
xchg
loop
and
and
pop
xchg
dec
push
xchg
ja
insl
mov
loop
mov
inc
into
adc
jle
fwait
and
sahf
pop
cld
incl
call
jbe
stos
pop
push
bound
data16
out
push
and
ja
cmp
out
push
gs
mov
enter
ud0
pop
cli
cmp
mov
and
incl
fcoms
adcb
pop
jmp
imul
fdivr
cli
leave
mov
ficoml
popa
movsb
push
sbb
pop
scas
adc
mov
loope
js
ret
xor
fwait
dec
jecxz
xchg
mov
daa
pop
lods
and
dec
mov
lcall
adc
adc
ret
mov
sbb
jb
push
inc
mov
fcomip
sbb
xchg
shl
sub
jo
fstpt
xchg
insb
icebp
jge
mov
mov
dec
fisttps
push
xorb
arpl
dec
push
push
or
cltd
add
incl
js
adc
mov
test
jmp
popa
rcll
incl
jne
jg
jge
push
xor
and
jnp
push
imull
push
ss
lock
shll
nop
pop
mov
pop
call
add
jmp
hlt
imul
dec
ret
aas
outsb
ljmp
fistps
fdivp
cltd
sbb
icebp
sbbl
mov
incl
jg
sbb
add
sbb
cwtl
cmp
push
cmp
hlt
cmp
shlb
js
inc
sti
or
push
out
call
adc
jp
mov
fidivrl
or
mov
into
hlt
pop
mov
mov
pushl
pop
cmc
push
xor
push
mov
push
imul
popf
add
sahf
mov
push
stc
inc
iret
xchg
sub
rolb
or
add
sbb
pop
faddl
nop
rolb
cmpsb
and
loope
jb
adc
pushl
dec
mov
and
jmp
mov
inc
lcall
xchg
dec
mov
call
in
ret
sub
arpl
jbe
lods
cmp
lret
push
pop
lcall
mov
pop
aas
scas
mov
negl
xchg
ljmp
cs
test
outsb
jmp
sbb
inc
and
mov
push
xchg
insb
xor
fwait
mov
out
adc
mov
imul
dec
iret
xchg
xchg
outsb
in
jecxz
icebp
gs
cmpsb
mov
fimuls
push
inc
add
pop
insl
xchg
aam
pop
cmp
frstor
pop
mov
sbb
out
cmp
in
jmp
lahf
xor
mov
sbb
lods
pop
dec
cmp
push
inc
ds
adc
jmp
dec
imul
mov
mov
inc
mov
inc
cs
push
test
aad
mov
mov
lcall
xor
jmp
aas
out
ror
jns
cmpsl
outsl
in
dec
pop
mov
and
or
hlt
mov
mov
push
sub
imul
push
iret
mov
mov
push
push
pop
jno
and
ret
mov
pop
sub
mov
jp
cmc
sbb
mov
pop
xchg
dec
mov
enter
lcall
clc
cmp
adc
pop
inc
inc
mov
pop
fwait
int3
xor
cmp
push
adc
inc
or
imul
test
lods
xor
popa
and
mov
ret
imul
ljmp
sarb
sti
out
fidivl
movsb
stc
jecxz
sub
das
pop
cmp
push
inc
mov
in
out
stos
or
jmp
pop
inc
pop
les
xor
scas
xchg
aas
mov
jo
call
test
jo
mov
sub
pop
sbb
sub
test
cltd
push
divb
in
push
push
enter
aad
lcall
mov
jo
gs
jle
out
pop
pop
je
xchg
xor
mov
outsl
icebp
inc
sub
repz
es
ljmp
mov
mov
dec
out
mov
ret
test
jecxz
sti
fstpt
and
add
fbstp
sbbl
fldt
test
lret
dec
jecxz
popa
test
jg
inc
xor
sub
aad
add
jle
outsl
shl
decl
fnstenv
pushl
cmp
push
dec
aas
xor
sti
mov
or
sbb
decl
add
or
sbb
mov
mov
in
ret
adc
xor
scas
fnstenv
and
es
ficomps
rorl
call
xchg
pop
xchg
push
adc
das
decl
jp
push
push
push
leave
std
mov
or
movsl
cmp
adc
push
loopne
ljmp
fsub
div
adc
dec
mov
xor
dec
repz
mov
cld
sar
decl
mov
popa
sub
sti
inc
jg
push
sahf
xchg
add
cmp
mov
xor
decl
inc
sbb
enter
jecxz
dec
not
lods
mov
cwtl
idiv
xor
sub
insb
loop
sbb
sbb
out
rcrl
mov
cmp
daa
sbb
mov
icebp
call
lret
and
sbb
pushl
and
push
mov
addr16
jmp
jmp
push
pop
out
mov
cld
and
xchg
lcall
or
bnd
sbb
addb
out
out
cld
xor
decl
mov
lods
jle
xor
xor
inc
xchg
pop
movsl
mov
sub
incl
loopne
in
jle
jp
cmpsl
xor
mov
xchg
jl
pop
decl
cld
negb
push
or
imul
aas
mov
stos
lds
mov
loopne
xor
dec
aas
insl
xchg
mov
push
xchg
inc
orb
dec
hlt
icebp
scas
outsl
jmp
arpl
loopne
dec
inc
out
or
xor
sahf
xor
adc
mov
pop
jo
sub
sar
lcall
xchg
imul
enter
fwait
xchg
fdivl
stos
xchg
pop
cld
arpl
mov
xchg
pop
or
sbb
or
call
rolb
inc
lods
mov
push
lea
adc
pop
pop
and
lods
push
dec
jbe
mov
mov
movsl
sub
ret
mov
xchg
test
mov
lods
and
call
jns
js
mov
mov
movsb
inc
mov
sub
cmp
push
cmp
in
dec
scas
xchg
cmpl
fdivrp
cwtl
mov
mov
jno
sar
mov
fcomp
ret
push
movsl
stos
cmp
ret
mov
sbb
pop
sub
lcall
int3
loopne
pop
shlb
push
mov
dec
int
sub
outsl
clc
mov
insb
dec
test
pop
out
push
inc
mov
jns
and
cmp
incl
lahf
cmp
cmpsb
imul
iret
test
xchg
fcomip
xchg
lea
mov
je
and
loop
sti
cs
or
pop
adcb
xor
popf
and
ljmp
xor
xchg
fimull
aad
mov
pop
adc
ljmp
cmp
icebp
pop
mov
cmp
inc
push
ret
daa
pushl
mov
cmp
jnp
clc
jle
jge
dec
loopne
icebp
add
arpl
mov
inc
fnsave
daa
repz
je
test
add
sti
push
xor
in
push
imul
incl
outsl
call
je
mov
sbb
adc
xchg
fldt
pop
cli
int3
mov
xor
ja
jmp
dec
in
sub
in
or
or
js
or
call
ds
cwtl
movsl
mov
iret
lcall
cld
ss
push
inc
add
fildl
loopne
cmp
insl
cmpsb
movsb
aad
rcrb
and
lret
pop
add
pushl
std
pop
popf
hlt
shll
pop
jo
cld
out
in
addb
sub
inc
les
ljmp
mov
mov
cld
jns
pop
lahf
dec
mov
xor
cmpsb
ljmp
mov
cmp
cmp
mov
aaa
push
insb
es
clc
out
xchg
pop
jbe
lahf
incl
xchg
push
movsb
push
sbb
xchg
cmp
call
sbb
adc
mov
cmp
xchg
inc
xlat
rcrb
scas
rorl
adc
add
jno
push
sub
adc
fcomip
call
jp
pop
in
and
mov
ret
rorb
pop
jo
adc
decl
adc
xor
pusha
sub
xchg
fmuls
arpl
xchg
fisubl
dec
leave
rol
sub
fstps
pushf
jle
aas
xchg
pop
adc
cld
or
pushf
pop
int3
ret
jl
mov
push
jmp
mov
ret
push
cli
pushf
pop
or
cli
push
jne
xchg
fisubrl
jno
mov
clc
lock
incl
out
rorl
rorl
adc
mov
ret
in
mov
xchg
dec
lret
clc
pushl
imulb
mov
push
mov
inc
int3
dec
dec
cmp
ljmp
test
jge
pop
cwtl
mov
inc
arpl
xchg
cli
in
lcall
repnz
and
jg
push
xor
inc
xchg
push
ficomps
outsb
add
adc
aam
pop
dec
ss
incl
fimuls
popf
jle
imul
cmpsl
xor
dec
xorb
out
xchg
aad
xlat
jecxz
ljmp
jno
jo
ljmp
aas
outsl
bound
xor
scas
sbb
in
popa
jb
cmc
ljmp
mov
addr16
push
out
daa
jbe
ja
cmp
ja
dec
lcall
icebp
mov
ret
ja
sbb
add
stos
jmp
clc
lahf
fiaddl
inc
jecxz
pop
daa
pop
call
push
jecxz
mov
shlb
stos
pop
jp
leave
xlat
shrb
mov
push
inc
jb
aaa
or
and
scas
test
mov
and
mov
decl
jmp
inc
mov
test
inc
push
rorb
cmp
sbb
xchg
pushf
decl
push
dec
fs
sbb
in
out
or
pushf
prefetchnta
mov
add
cmp
mov
enter
add
decl
jle
or
push
es
in
mov
mov
and
fcomip
jmp
push
cmp
jle
xor
inc
loope
out
and
inc
or
add
sub
sbb
mov
std
in
jnp
subl
fldl
adc
sahf
imul
sub
mov
jae
sub
xor
push
mov
dec
adc
push
subb
inc
mov
cltd
mov
xor
xor
jne
fimuls
call
and
or
fiaddl
std
arpl
lods
mov
imul
ljmp
inc
add
and
nop
mov
popf
in
imul
pop
xor
inc
jmp
push
pop
jg
dec
cwtl
repz
adc
add
arpl
imul
lods
lahf
mov
dec
dec
cmp
sub
into
and
sbb
jmp
pop
dec
dec
push
and
das
pop
ss
in
push
and
pushl
pop
xor
push
subb
and
out
aas
push
cmp
dec
ljmp
pusha
ljmp
loopne
lds
xchg
and
call
jp
jmp
dec
ret
test
xchg
out
stos
scas
aam
in
dec
adc
mov
jmp
lds
mov
dec
sbb
jno
mov
stos
loopne
pusha
test
sub
fldl2t
or
xchg
imul
pop
add
add
push
rorl
push
insl
xor
pop
daa
xor
xchg
inc
je
push
add
jbe
mov
xchg
dec
test
fstps
mov
sub
mov
push
mov
roll
daa
mov
push
cmp
adc
push
insb
int
les
hlt
lahf
subl
push
add
loopne
ss
xor
or
outsb
push
bound
decl
push
jle
sub
aam
and
xor
nop
add
mov
push
into
mov
imul
incl
jge
lcall
cmpsb
mov
xor
mov
lcall
movsb
call
xor
xchg
xchg
push
mov
call
mov
add
enter
mov
pusha
jle
mov
repz
test
sbb
xlat
cmp
add
dec
popf
sbb
test
sbb
clc
fdivs
outsb
adc
std
or
mov
dec
pop
xchg
in
es
dec
movsb
xor
lcall
push
xor
pop
mov
xchg
push
cmp
ljmp
pop
jle
loop
sub
xchg
mov
dec
jp
das
rcrl
jle
fcomip
call
lods
add
cmp
das
mov
ffreep
adc
sub
fdiv
cmp
jo
cld
push
jnp
cmpsb
push
dec
das
mov
jnp
push
xchg
das
jmp
inc
sub
fcmovne
inc
sbbb
fidivrl
lahf
mov
imul
ljmp
inc
icebp
xor
cld
movsl
rolb
add
mov
repz
cmp
shll
ljmp
sbb
fwait
sbb
jne
in
inc
dec
cs
mov
lods
ljmp
in
arpl
sbb
sarb
jp
xor
or
jg
ljmp
arpl
add
test
in
cs
or
push
test
xchg
mov
adc
outsl
incl
inc
outsb
imul
shl
addr16
mul
pop
test
popa
jne
inc
mov
fcoms
std
call
std
imul
xchg
fildl
pop
sbb
ret
lds
inc
xchg
push
fst
out
clc
idivl
add
clc
idiv
mov
jp
dec
mov
in
mov
shlb
in
xchg
into
ret
ljmp
cmpsb
and
loop
or
dec
xchg
dec
mov
icebp
cmp
pop
jbe
iret
add
test
rclb
xchg
inc
push
push
repz
and
sub
dec
dec
mov
and
mov
mov
decb
lock
cmp
xor
inc
arpl
in
loope
adc
jb
fcomi
mov
sarb
xor
xchg
data16
mov
insb
inc
jmp
fcmovne
lea
cmpsb
fbld
mov
pushf
xchg
lcall
pop
hlt
call
push
jmp
xor
call
out
jge
push
jnp,pn
cmp
call
jbe
inc
std
test
negl
jb
icebp
jecxz
push
test
arpl
push
dec
push
pop
jp
inc
ljmp
es
adc
aaa
mull
fiadds
out
shrb
sub
push
xchg
lahf
into
addr16
sub
xchg
pusha
adc
push
sbb
out
push
push
push
pusha
cltd
pushf
add
arpl
jle
mov
cli
mov
stos
pushl
mov
out
je
sub
mov
sub
sti
aad
jae
lcall
mov
int3
xor
mov
xchg
xchg
pop
ja
dec
mov
push
pop
cmp
mov
incl
xchg
cmc
enter
fdiv
loop
mov
fdivs
rcll
int
xchg
cli
mov
push
jl
fbld
or
push
insl
shlb
rol
cmp
gs
out
xchg
mov
dec
pop
jmp
gs
dec
arpl
push
outsb
push
inc
mov
inc
movsb
mov
inc
mov
and
mov
xor
pop
cmpsb
mov
call
aam
mov
lret
lahf
mov
cmpsl
cmp
add
iret
adc
icebp
cs
and
xlat
ret
xchg
jp
push
pushf
negl
xor
test
jge
test
push
incl
add
sbb
andl
cmp
sub
lcall
sbb
jp
pop
ja
and
ljmp
cwtl
jecxz
jae
adc
ljmp
add
rclb
jg
and
imul
aam
inc
dec
cli
mov
fcmovne
pushf
fxch
jns
mov
push
int3
and
mov
sbb
inc
sub
inc
pop
idiv
out
out
push
outsl
mov
xchg
mov
pop
cs
in
ljmp
pop
mov
loopne
pushl
repz
shlb
push
movsb
lods
or
outsl
ret
mov
iret
fistps
pop
loopne
jmp
sbb
cltd
cmc
xchg
repnz
mov
push
test
mov
push
roll
imul
shll
and
push
inc
jb
hlt
out
shrb
cmpsl
push
ljmp
clc
fistpll
notb
dec
pop
and
sbb
mov
incl
iret
and
xchg
add
xorb
sub
pushl
adc
leave
cmp
into
imul
mov
test
mov
add
idiv
jmp
movsb
adc
out
xchg
adc
out
adc
and
mov
push
sub
stos
psubsb
jmp
sbb
push
pushf
mov
xchg
into
addb
xchg
fcomps
adc
jno
es
push
sti
push
dec
inc
andl
movsb
es
ja
inc
cld
imul
jne
push
ljmp
js
push
inc
push
js
dec
mov
mov
stos
in
jbe
or
mov
leave
loope
ds
xchg
cmp
mov
push
int
rorb
or
ljmp
aad
popf
test
sub
test
xlat
and
jle
mov
mov
arpl
scas
test
and
imul
rcrb
adcl
fisttpl
gs
cmp
and
jge,pt
dec
mov
call
cmp
cmp
je
jnp
inc
jne
jg
shlb
cmp
inc
sti
lahf
xchg
xchg
sub
xchg
aam
cmp
test
rcrl
cmp
sbb
mov
jae
sub
or
rcll
ss
jae
clc
lods
xchg
adc
fstp
xchg
xor
sbb
cmp
fisttps
cwtl
ret
jp
aas
xor
add
outsl
sub
xchg
imul
call
cltd
out
mov
dec
jecxz
jae
stos
pop
iret
in
mov
aaa
outsl
pop
notb
or
scas
es
int
and
xchg
call
in
addl
fisubl
mov
jmp
dec
sub
loop
mov
push
adcb
mov
xchg
sub
ficompl
cld
jmp
jbe
ja
cmp
cmp
mov
mov
test
cmp
jg
cld
fcmovb
scas
ljmp
repnz
or
or
jmp
andb
repnz
mov
mov
icebp
xor
pushl
xor
mov
and
js
jmp
cmp
jns
xor
repnz
xor
lcall
cmp
pop
jne
cmp
jp
flds
mov
push
ljmp
and
mov
and
scas
test
or
sti
hlt
mov
jae
enter
cmp
add
inc
addr16
insl
out
xchg
cmp
jno
dec
loope
ficoms
addr16
call
push
sub
sub
loopne
inc
add
and
nop
cmp
jp
mov
lods
nop
lcall
les
add
or
mov
sbb
std
push
stos
cmc
jge
push
or
loope
dec
jbe
nop
in
hlt
xchg
dec
into
cs
adc
xor
out
xor
add
call
icebp
popa
outsl
xor
lock
pop
fcompl
clc
incl
in
push
ffree
xchg
pop
mov
incl
je
mov
dec
je
lods
repnz
or
adc
sarb
xor
jmp
pop
test
in
decb
and
cltd
sbb
ja
xor
mov
inc
call
ja
push
cld
push
mov
ss
cmp
inc
jle
stos
xor
incl
divl
mov
pop
mov
jne
mov
xor
mov
fxch
jle
pop
icebp
jle
xchg
in
popw
add
and
and
mov
test
pop
mov
incl
sbb
daa
in
inc
push
push
scas
xchg
cmp
xchg
shll
repnz
push
jmp
addb
ja
ret
push
lahf
mov
jmp
or
add
adc
notl
xor
fistpll
xor
jae
or
xor
cmpsb
mov
in
add
ret
mov
add
nop
jg
pushf
xchg
jp
je
lcall
mov
and
adc
lock
out
fisttps
sbb
push
xor
pop
cmc
nop
inc
aas
dec
adc
outsl
mov
xchg
pop
pop
insl
fs
call
jo
ss
les
mov
adc
loope
loop
outsb
shll
incl
sbb
cli
loop
lahf
repnz
fstps
push
jg
jmp
es
jnp
adc
jmp
nop
imul
out
inc
pop
mov
pop
out
loope
mov
shrb
pop
enter
dec
aam
xchg
stc
push
lcall
dec
movsl
dec
jl
sub
fsubrs
jle
addb
in
xchg
push
sahf
jp
jp
shl
popf
call
pushl
stos
push
or
adc
out
std
hlt
cmpsl
cmp
push
std
or
flds
call
xor
mov
xchg
decl
mov
dec
inc
sbb
xchg
jbe
adc
insl
jae
aas
jl
incl
jle
ret
ja
ret
push
pop
sbb
mov
mov
mov
jecxz
call
jmp
push
jae
pop
fnstsw
mov
incl
jecxz
cmp
das
xlat
mov
dec
inc
dec
adc
mov
sbb
fdivs
clc
fdivrl
cmp
xlat
imul
ljmp
sbb
dec
mov
mov
scas
lock
sbb
sahf
mov
cmpsw
cwtl
sub
aaa
imul
mov
rcrl
stos
nop
jecxz
mov
or
xor
mov
lea
sbb
pop
icebp
xchg
cli
cmpsl
call
sarb
int3
xchg
loop
xchg
pushf
movsl
ja
adc
sub
lds
cmp
dec
bound
stos
jb
subb
stc
dec
dec
jne
ljmp
xchg
in
dec
pop
ds
notb
sbb
pusha
pop
jno
test
bound
or
in
xchg
inc
ds
movsb
nop
mov
outsb
xor
test
fldt
in
pop
jge
inc
sar
pushl
negl
fwait
add
cmp
into
test
mov
xchg
cmp
call
and
pushf
icebp
cwtl
outsb
test
test
adc
gs
pushl
fbstp
loopne
and
aam
mov
sub
gs
mov
dec
cli
pop
and
jae
les
jge
addr16
hlt
mov
pop
repnz
loope
xor
fdivs
decl
fdivrs
clc
sub
pop
or
pop
cld
movsb
ret
mov
test
jnp
jmp
sbb
subb
hlt
sub
adcb
cltd
pop
mov
sti
loop
mov
std
push
ss
pushl
lret
jns
mov
jae
leave
or
sarb
xor
lret
pop
mov
or
pushl
cli
repnz
inc
ljmp
dec
faddl
push
jg
mov
stos
xor
adc
setnp
lds
iret
out
mov
push
mov
cmc
jbe
clc
jmp
movsl
xchg
mov
jnp
aam
mov
dec
push
push
mov
cld
xchg
popf
mov
insl
cmp
aad
nop
mov
repnz
popa
or
add
aad
sub
pop
pop
sar
sar
xchg
movsl
mov
push
orb
dec
jl
cmp
push
push
cwtl
and
mov
sahf
ss
mov
and
outsl
push
emms
dec
test
lcall
fst
sub
icebp
in
inc
sbb
outsb
mov
adc
imul
aad
pop
mov
jmp
movsl
xchg
lret
pop
and
ret
dec
pop
jns
sub
dec
out
inc
mov
mov
jo
cmpsb
sbb
cwtl
repz
lcall
movsl
sbb
jg
incl
pop
xchg
popf
xchg
xlat
cmp
shr
mov
and
popf
pop
mov
in
jmp
push
and
mov
iret
pop
dec
dec
jecxz
mov
sub
maxps
incl
cmp
adcb
sti
add
fwait
call
lods
lea
outsl
ret
push
test
ljmp
rorb
mov
mov
scas
and
push
flds
cmp
ds
add
lock
or
aaa
popa
clc
cltd
bound
ss
mov
dec
test
clc
pushl
inc
xor
xor
stos
addl
bound
call
xchg
movsb
xchg
insb
out
adc
cmp
cmp
push
xcrypt-ofb
cmpsl
imul
call
lret
xchg
aam
ficoml
xor
jecxz
insl
lods
lret
mov
lods
mov
sbb
decl
or
jecxz
adc
mov
leave
negl
jl
jae
jnp
pop
ret
ret
push
push
dec
fwait
or
cmc
stos
add
pusha
out
jo
sub
imul
ljmp
add
movsb
loop
adc
outsb
jg
mov
outsb
iret
das
xor
test
inc
les
test
decl
cmc
sbb
lahf
jmp
mov
jl
xor
sub
imul
push
sub
test
mov
mov
loope
jg
imul
jb
mov
loop
jl
in
dec
jnp
stos
adc
lds
and
out
idiv
into
incl
sbb
add
xchg
sub
out
jb
int3
add
inc
nop
adc
cmp
mov
les
fcomip
dec
or
pop
cld
xchg
ss
cmp
inc
decl
nop
or
test
mov
sarl
pop
jge
decl
rol
xchg
int3
and
lret
mov
xchg
mov
lcall
sti
out
pushf
inc
shlb
decl
repnz
fiadds
test
adc
pushf
pop
and
outsl
xor
ljmp
js
pushl
push
daa
mov
mov
rcrb
xor
bound
and
xchg
out
sar
ljmp
push
add
mov
popf
xchg
stos
leave
js
jmp
shll
mov
push
cld
pushl
sahf
sbb
js
mov
adc
int
jmp
cwtl
and
out
incl
cld
ljmp
out
push
mov
dec
xor
adc
jle
push
xchg
insb
icebp
rorl
test
adc
pop
popa
dec
popf
int
fiadds
lret
cltd
ficoml
pop
push
dec
std
imul
stos
js
dec
mov
test
add
or
push
fwait
int3
enter
inc
add
or
jp
in
imul
pop
shl
jecxz
sar
icebp
xchg
rcrb
jno
test
jp
push
ljmp
aas
aam
out
loop
jecxz
and
cmp
pop
cmp
xor
lcall
rcrb
push
enter
mov
mov
hlt
adc
inc
jb
cli
inc
or
rorl
fstp
in
int3
loop
or
insl
pop
in
inc
cmpsb
jecxz
decl
mov
jo
scas
fadd
inc
sub
or
cli
imul
in
dec
gs
lock
lret
mov
xor
cmp
ret
lcall
dec
lret
cmp
mov
jnp
pusha
xlat
sti
popf
jns
push
push
call
jg
cmp
shlb
call
fcmovnu
mov
and
out
adc
pushf
jp
int
jmp
mov
mov
jmp
testb
incl
cmpsl
add
cmp
into
je
cmp
loope
lahf
rolb
pusha
orb
xor
ljmp
outsb
dec
sti
jle
ljmp
dec
ror
xchg
repz
clc
mov
lcall
sahf
in
mov
jl
rol
cs
sub
cmpsl
adc
decl
mov
pop
dec
dec
sbb
mov
std
dec
out
dec
mov
icebp
movsl
pop
sarb
decl
out
mov
xor
push
cmc
repnz
dec
push
add
cmp
or
incl
sti
mov
repnz
inc
cmpsb
inc
adc
out
cmpsb
or
aaa
scas
fabs
cmpsb
mov
incl
add
sysexit
inc
mov
jnp
aad
loopne
iret
cwtl
ja
mov
lods
xchg
mov
data16
ljmp
inc
pusha
rclb
mov
les
mov
jle
stos
inc
jg
iret
mov
push
push
sti
pushf
rcrl
and
int3
outsl
sbbl
xor
fdivrp
pushl
int3
push
pop
xor
inc
filds
das
mov
ja
leave
push
sbb
pop
outsb
mov
std
incl
add
out
jg
fidivrs
cmp
push
popf
sahf
test
in
lock
sbb
lods
cmpsl
sti
or
push
cmpsb
sub
xchg
fstps
fadds
ljmp
clc
jo
sub
or
or
mov
les
push
loopne
decl
xchg
insb
cmp
cmp
mov
roll
mov
xorl
lret
call
push
pop
mov
and
mov
in
std
xchg
mov
loopne
mov
aaa
cld
jmp
xchg
push
xor
rcrl
in
add
push
ret
scas
add
stc
inc
sub
test
decl
dec
inc
cmpsl
hlt
xchg
loop
loop
xchg
cld
push
dec
scas
jp
int
cmc
mov
push
roll
inc
test
ja
inc
popf
cmp
xor
push
pop
test
mull
inc
jmp
or
test
cmp
jnp
pop
outsb
mov
jno
fcoml
cmpsb
mov
xchg
adcb
sbb
test
jnp
aam
mov
ljmp
adc
movsl
and
jecxz
or
mov
into
xorb
dec
rol
mov
sarl
insb
or
std
and
and
cli
mov
pushf
cltd
jg
xchg
mov
imul
sub
mov
mov
mov
cltd
cmp
lcall
cmp
lods
adc
stos
xor
cwtl
roll
in
lahf
daa
data16
lcall
movsb
in
push
fdivr
jae
aad
dec
xchg
repnz
inc
adc
mov
lcall
jmp
xchg
cmp
sbb
sub
mov
jne
in
ds
stos
arpl
pop
andb
lcall
or
cwtl
test
mov
or
adc
arpl
dec
sub
jmp
pop
jae
dec
or
fsubs
cmp
jge
les
lea
daa
pop
cs
sub
inc
jp
ret
outsl
dec
movsb
lret
dec
and
lret
cmp
rcrb
ds
pop
inc
out
call
dec
xor
jno
in
fsubrl
in
xchg
out
xchg
fcoms
movsl
call
dec
gs
xchg
mov
stos
pop
popf
loope
sbb
pushw
and
decl
test
lock
lea
dec
jb
repz
sub
fwait
decl
xlat
xor
and
push
stos
add
mov
ja
pop
dec
fsubrl
movsb
lods
pop
cmp
incl
pop
mov
and
cltd
inc
test
or
xchg
ja
inc
cmp
fldenv
ljmp
enter
outsb
std
sbb
lds
outsb
mov
ljmp
jge
andb
xor
out
or
mov
mov
lret
incl
mov
sub
xor
sbb
inc
leave
stc
shll
je
repnz
jae
jae
mov
jmp
lods
dec
adc
lret
in
fdivrl
fwait
stc
fcoml
or
incl
dec
in
mov
mov
mov
fcoms
jg
push
push
pop
ret
xlat
shlb
inc
jmp
repz
mov
out
pop
lds
xor
lods
jb
dec
das
dec
mov
mov
pop
lock
pushl
out
into
push
inc
insb
jmp
inc
mov
mov
or
add
inc
fbld
lds
outsl
jno
das
inc
dec
movsb
dec
sub
xchg
inc
ljmp
xchg
add
cwtl
in
sbb
or
sub
movsb
sahf
jmp
lods
sub
ljmp
mov
pop
out
xor
aam
seto
xor
jb
xor
addr16
ljmp
adc
repz
sbb
popa
fmuls
cltd
cmp
or
and
loopne
in
dec
mov
sub
xchg
data16
push
dec
ss
inc
jo
jle
out
mov
incl
dec
cli
xchg
mov
or
stc
cwtl
jne
pusha
pop
roll
and
xchg
cmpsl
ja
sar
mov
jb
adc
incl
pop
pop
mov
inc
cmpsb
mov
adcl
loopne
sub
dec
shll
clc
sub
adc
xchg
scas
pop
addr16
nop
sbb
xor
clc
push
lcall
rol
xchg
mov
movsb
bound
clc
ss
sbb
push
and
ljmp
cmp
daa
popa
push
aaa
lcall
fwait
lret
mov
mov
mov
lock
jle
fs
dec
aam
cmpb
enter
jmp
xor
xchg
shr
sub
dec
out
scas
sub
mov
mov
push
xchg
ljmp
xchg
push
mov
fisubrl
pusha
out
sbb
sti
add
mov
sbb
call
xchg
add
fiaddl
inc
repz
les
std
pop
jle
push
lock
loope
dec
mov
sub
in
mov
loopne
pusha
mov
lret
hlt
xchg
decl
jl
gs
sbb
outsl
inc
ds
adc
jnp
movsb
cmp
aad
decl
cmpl
push
pop
xchg
jp
je
add
fucomp
sbb
jne
jmp
mov
cmpl
mov
aam
or
aas
sub
jmp
mov
fiadds
notl
or
xchg
jmp
in
lret
out
pushf
pop
ljmp
pushl
and
scas
out
cs
and
cmc
into
adc
leave
daa
imul
stc
or
call
mov
sbb
dec
mov
lods
pusha
clc
ljmp
cmpsl
sub
add
aas
xor
notb
pop
cmp
inc
fstp
fs
jge
cltd
sub
jmp
mov
add
dec
jmp
push
fiadds
mov
push
add
inc
jmp
and
repnz
jns
imull
inc
fcmovnbe
jmp
mov
dec
pop
and
repnz
cltd
stc
mov
orl
sub
and
fwait
clc
adc
test
inc
dec
incl
icebp
jb
push
scas
mov
stos
repnz
cmp
shrl
sbb
xor
jbe
push
sarb
out
dec
rep
xchg
jbe
sbb
jmp
daa
mov
loopne
leave
xlat
std
and
addr16
mov
mov
fs
sbb
fnstsw
mov
dec
adc
dec
int
das
sar
mov
test
js
jbe
test
jo
jae
fcoms
lret
dec
mov
pop
or
push
dec
incl
lret
cmp
sbb
pop
pop
mov
mov
adc
popf
aam
lods
sahf
mov
mov
lock
clc
inc
and
fsts
roll
sbb
push
push
int3
test
mov
and
or
iret
out
shrb
mov
mov
decl
cli
sarl
mov
pop
call
and
push
or
scas
pop
or
jp
bound
jle
sub
cmp
xchg
mov
dec
pop
push
js
outsb
cmpsl
push
lock
jns
scas
pop
fidivl
sub
inc
sbb
push
fcomps
adc
fnstcw
and
cmp
sbb
arpl
cmp
sub
lods
orb
aaa
fs
push
mov
push
fisubrs
std
out
pop
xchg
adc
cmpsl
dec
pop
outsl
push
insl
fldt
lahf
pop
lods
push
mov
ljmp
lcall
divb
out
push
icebp
sbb
mov
ds
bound
dec
sub
std
decl
xor
xor
push
gs
cmpsb
sbb
jno
pop
cmp
js
cmpsb
xor
jmp
xchg
decl
repnz
fwait
cmp
shr
add
add
lcall
mov
enter
jne
mov
mov
mov
or
sti
pop
call
mov
lahf
repnz
out
inc
xor
add
popf
pop
xchg
movsb
insl
ljmp
ss
cld
mov
ja
mov
cltd
mov
stc
dec
scas
cmp
pop
mov
push
into
aam
rclb
xchg
jne
outsb
cmp
mov
push
rclb
ljmp
repz
jl
stos
and
ljmp
ja
pop
fwait
push
pop
test
aas
add
sbb
xchg
sub
and
pushl
dec
fcomi
rcl
and
adc
fstpl
add
fildl
push
decl
fsts
mov
xor
pop
repz
lds
stc
lcall
jmp
cwtl
ljmp
dec
mov
inc
jb
mov
enter
cmp
in
mov
jle
dec
std
leave
cmpsb
add
push
sub
stc
inc
outsb
mov
mov
inc
adc
sbb
mov
push
dec
in
add
or
xchg
outsl
iret
cmp
stc
pop
pop
pop
in
or
mov
lcall
testb
enter
ss
hlt
cmp
incl
inc
xchg
xchg
rol
js
shll
pop
ret
repnz
dec
sti
mov
push
cld
cmc
push
mov
cmp
lcall
insl
cmp
jb
rorb
leave
sub
scas
jg
mov
xchg
sbb
push
push
cmpsb
mov
xchg
xor
push
es
call
std
stos
sarb
sti
js
test
cmp
mov
or
lret
xor
fnstsw
in
inc
jbe
xor
inc
sbb
dec
pop
fcoml
ds
pop
mov
cs
jmp
imul
sbb
les
jns
stc
push
ja
je
ljmp
lcall
cmpsb
popa
xchg
mov
cmc
aam
int
aas
stc
and
imul
in
cmp
cmp
loopne
xchg
jne
or
cmpsb
inc
subb
ret
xor
cmp
orb
sbb
das
adc
fabs
cmovg
mov
mov
std
add
call
dec
jg
mov
mov
push
fmuls
mov
jmp
push
add
push
push
icebp
xor
fimuls
sub
cwtl
add
cmp
loop
cmp
ljmp
and
pop
mov
mov
sbb
lcall
dec
fmulp
sbb
xchg
clc
dec
mov
dec
and
pop
outsb
mov
arpl
mov
xchg
mov
mull
jb
lret
xchg
decl
out
js
pop
dec
sbb
les
in
cmpsb
jnp
sti
and
cmp
dec
pop
clc
and
fwait
icebp
jns
add
adc
nop
adc
dec
jo
ret
mov
xor
or
hlt
sbb
mov
roll
cli
xchg
data16
and
std
incl
sbb
loopne
pop
loopew
bound
mov
pop
mov
repz
ja
dec
xchg
and
add
sbb
out
iret
mov
out
lret
fisubs
jecxz
incl
and
adc
shll
or
lret
and
cmp
push
popa
jmp
call
outsl
pop
mov
mov
mov
pop
sbb
fidivrl
add
xor
int3
shl
ljmp
or
shrb
adc
ficompl
cmp
outsb
xchg
ficompl
mov
jns
aas
xlat
pop
ljmp
cli
loope
fisttps
sub
mov
or
inc
and
repnz
lods
ss
pop
xor
decl
mov
mov
testb
xchg
sbb
dec
loop
xchg
add
clc
push
sub
push
aaa
imul
cmp
aas
lcall
pop
clc
mov
sahf
repz
fdivrl
push
notb
jns
mov
repz
jb
jl
jg
mov
jg
pop
cmp
popf
xchg
jne
cltd
fnsave
cmp
sbb
or
mov
sub
lds
or
aaa
adc
push
jecxz
lcall
ficoms
sub
scas
fwait
add
idivl
xchg
push
arpl
pop
jmp
pop
jnp
icebp
inc
jb
xlat
iret
inc
lahf
mov
xchg
jnp
in
pop
cmpsl
imul
sub
test
incl
xchg
insl
hlt
jp
aaa
inc
daa
xor
push
test
push
adc
xor
mull
mov
mov
and
into
mov
stos
inc
pop
dec
lret
push
cmpsl
mov
insl
jge
sub
cmc
lcall
in
loopne
int
jmp
stc
mov
sub
or
adc
add
lcall
xlat
outsb
jo
sbb
xchg
sti
xchg
into
cmp
and
test
cmp
cs
inc
and
repnz
movsb
daa
lock
imul
test
fdivrl
stos
cmpsb
mov
cs
or
pop
cmp
pop
testl
inc
scas
cmc
decl
sub
lds
int
das
xchg
add
int
jg
and
adc
lret
cli
add
mov
out
ljmp
idiv
jmp
bound
and
cmp
hlt
aas
sub
int
push
lret
jge
outsl
and
test
call
mov
test
in
xchg
pusha
adc
sahf
out
outsl
mov
cmp
call
arpl
pusha
xor
mov
adcb
mov
mov
push
rcrb
ljmp
call
mov
into
testl
in
stos
fcmove
sbb
adcl
sbbb
add
jmp
popf
xor
repz
mov
push
xor
mov
mov
decl
inc
mov
sbb
xchg
outsl
cli
and
fstps
pushf
jno
arpl
cli
sbb
xlat
pushl
mov
dec
ret
mov
popa
das
loop
xor
nop
arpl
mov
push
pop
rcrb
lcall
push
ret
sti
lahf
mov
cmpsl
jo
lods
adc
addb
jecxz
lcall
jg
outsb
aaa
sub
xchg
bound
xchg
sub
lcall
ljmp
sbb
icebp
fcompl
adc
cmp
jns
jge
incl
adc
inc
testl
adc
decl
js
repz
das
aas
push
mov
jno
adc
mov
xor
mov
xchg
add
xchg
outsb
cmp
push
cmp
mov
orb
out
pusha
je
jne
stc
xchg
inc
jmp
xchg
xlat
insl
push
xor
pop
cwtl
mov
dec
mov
mov
or
dec
push
clc
sbb
sbb
incl
fidivl
ret
jmp
jno
test
sub
or
call
push
loope
and
fdivs
outsb
inc
es
inc
adc
les
cmp
pop
pop
int3
aam
incl
popa
push
gs
xchg
cmp
cmp
sbb
adc
stos
jmp
test
adc
stos
jmp
dec
jl
mov
or
pop
mov
or
xor
gs
jbe
daa
add
int3
iret
xor
incl
mov
inc
fimull
dec
loope
adc
sbb
jl
dec
cmp
inc
cld
inc
pop
pop
jne
xor
sbb
cmc
xor
pop
dec
adc
pop
xchg
xor
mov
dec
xlat
fs
sahf
xchg
dec
lods
mov
sbb
in
faddl
das
movaps
lcall
or
cmc
lock
sub
add
pop
aam
test
mov
ds
stos
fisttpl
add
fiaddl
cltd
pop
fists
fwait
rorb
ljmp
pop
inc
pop
aaa
sub
mov
ret
pop
rcrb
dec
push
imul
decl
dec
add
test
xor
shrb
ss
sbb
movsb
push
and
movsl
leave
scas
ljmp
jge
dec
xor
stc
xor
add
lock
test
ljmp
lods
inc
cltd
or
pop
stos
or
fwait
xchg
imul
aas
or
cli
das
jno
inc
pop
lods
scas
clc
ljmp
fucomp
cmc
mov
pop
pop
dec
out
inc
lock
decl
mov
and
fstl
inc
dec
sub
adc
fisttps
sub
xchg
mov
mov
popa
add
push
loope
dec
add
call
std
push
xchg
out
and
mov
mov
subl
movl
sbb
test
cld
cmpsb
int3
pop
cmp
sbb
xor
js
add
insl
call
std
dec
in
inc
cmp
mov
imull
add
in
pop
push
ds
je
mov
pop
stc
loopne
jnp
sbb
das
mov
pop
inc
dec
sbb
jecxz
sti
inc
lahf
push
dec
pop
lock
pop
scas
loop
inc
push
nop
data16
push
dec
loope
pop
push
outsb
aas
clc
add
xchg
jmp
icebp
movsb
jno
push
lret
insb
out
cmp
test
jns
jne
xchg
insl
call
sbb
lret
pop
sub
jo
and
leave
es
enter
mov
mov
dec
sub
push
inc
inc
in
sbbb
decl
and
test
jbe
pusha
or
inc
fidivl
xor
sbb
lock
xchg
push
mov
pop
dec
std
call
rolb
pop
fcomip
jge
xchg
iret
pop
inc
push
push
dec
movl
sar
mov
and
into
cmp
idivl
mov
push
imul
aam
cli
inc
xchg
xor
sbb
scas
jmp
jg
lcall
in
outsl
inc
hlt
xchg
xor
mov
mov
xchg
add
fs
push
and
decl
adc
push
shll
inc
add
ljmp
jle
add
xchg
dec
mov
pop
cmp
rol
arpl
push
mov
jmp
ret
sbb
lcall
xor
add
sub
dec
mov
jp
cmp
faddl
test
sub
add
cmp
mov
leave
out
repnz
or
sbb
push
sbb
in
js
testb
cmpsb
clc
xorl
mov
shll
dec
mov
call
loopne
xchg
sub
xchg
ja
and
jno
pop
in
ljmp
test
add
call
pop
xchg
aad
add
add
xchg
inc
sub
daa
icebp
das
cli
sbb
pop
call
push
in
out
cmp
xchg
or
out
xchg
cmp
push
mov
sahf
movsl
cmp
xchg
xor
mov
incl
mov
aad
je
pop
or
sarb
not
in
sub
incl
lcall
mov
cmp
mov
loope
jne
aas
int3
mov
pushl
scas
and
and
jbe
push
adc
cli
push
loop
cmp
jmp
dec
jbe
pop
mov
movsb
cmp
mov
rcll
data16
pop
rcrb
adc
call
fwait
mov
sbb
scas
jne
fnstsw
jnp
jmp
out
pusha
inc
cmpsb
call
mov
fcmovbe
jbe
fcomip
mov
in
hlt
mov
test
outsl
cli
stos
incl
mov
filds
and
add
cmp
xor
adc
pushl
outsl
cmp
mov
in
pusha
lret
mov
mov
mov
decl
orb
pop
rcrl
mov
int3
fldenv
sbb
and
loopne
or
xlat
incl
into
shrb
jg
add
and
ljmp
loop
call
dec
mov
sub
das
mov
imul
mov
fimull
popa
lcall
out
in
cs
insb
push
add
int3
out
in
cmp
iret
jo
ret
scas
shrl
sub
push
dec
es
jo
fstpt
push
mov
test
mov
cmp
repz
outsl
and
les
cld
adc
andl
sub
jmp
sahf
sti
or
aam
cmpsb
iret
clc
mov
sbb
and
es
add
sub
or
fcompl
sbb
pop
cwtl
sub
lcall
fmuls
mov
or
sub
sbb
and
pop
lret
mov
dec
ret
xor
mov
incl
leave
or
or
add
ficoml
mov
das
xchg
imul
lea
subb
lods
pop
mov
mov
int3
jb
outsb
mov
shl
jmp
outsl
mov
rorl
cmpsl
popf
movsl
adc
fmul
push
out
jl
lods
jg
popa
lock
jnp
xor
or
lods
test
lcall
sahf
lret
jmp
push
outsb
inc
out
mov
rcl
cltd
pusha
repnz
ja
decl
and
stc
push
cld
lods
cmp
add
ror
lods
int3
shrb
add
push
jmp
nop
in
sub
and
push
test
les
fmull
adc
mov
dec
lret
lret
xor
cmp
call
cmp
pop
repz
imul
out
fdivrp
out
fildl
mov
jecxz
mov
iret
loope
sub
in
push
add
ljmp
dec
lahf
mov
cltd
cmpsb
jecxz
push
dec
cld
cmp
push
mov
popf
outsb
into
cmp
ljmp
aaa
push
xor
xlat
mov
lahf
pop
cmp
cmpsb
dec
clc
mov
push
cmpsb
fmuls
adc
incl
aaa
xlat
pusha
jnp
pop
repnz
inc
mov
in
jmp
mov
xchg
jg
inc
fstl
or
push
nop
loop
sarl
push
cs
add
adc
test
push
xor
lock
mov
adc
mov
xchg
out
xorl
dec
fucom
ret
adc
dec
pusha
jbe
push
lcall
sarb
push
pop
shrl
jle
adc
adc
in
int
es
sbb
jmp
sub
inc
enter
cmp
mov
and
inc
mov
cmp
cmp
in
and
mov
loopne
xor
jmp
sbb
idiv
or
iret
mov
incl
or
btr
dec
sub
in
in
sub
nop
stos
xchg
pop
or
mov
and
std
jp
incl
inc
pop
lret
bound
pop
sbb
sub
int
inc
sti
fdivrp
subb
decl
insb
xor
xorb
aaa
push
jp
jne
push
jns
xor
addr16
add
loop
jmp
cmc
ss
jmp
adc
cmp
push
lret
loope
ljmp
jno
jmp
dec
clc
sub
test
jecxz
in
or
jb
push
xchg
mov
pop
icebp
ljmp
push
fbstp
repz
repnz
or
sbb
jmp
jae
cmpsb
jmp
xchg
sub
clc
dec
jne
mov
out
cmpl
inc
insb
pop
dec
push
mov
adc
popa
jns
lcall
icebp
cwtl
rolb
cwtl
cli
push
xchg
dec
cmpl
clc
cmp
call
xor
sub
ljmp
repnz
cmp
add
lea
in
mov
mov
daa
mov
lea
cwtl
add
mov
jnp
inc
cs
mov
fcom
loop
incl
insb
mov
jl
jl
jecxz
push
xor
fldt
incl
mov
pop
jno
xchg
jb
inc
into
sub
ljmp
and
adc
sar
pushl
shrl
clc
in
push
dec
insl
bound
shlb
mov
dec
push
outsl
cmp
pop
dec
mov
sbb
sub
scas
jmp
sub
or
jge
pushf
jbe
jmp
ret
ja
sar
add
ret
pop
cmp
push
lcall
ljmp
int
into
out
or
cmp
call
mov
ficompl
fnsave
jg
jl
incl
push
sbb
push
dec
imul
lcall
mov
mov
adc
sti
and
xchg
mov
mov
lcall
stos
cmp
outsl
hlt
mov
cs
divl
int
test
andb
push
and
in
mov
pop
pushf
pushf
mov
push
es
das
enter
cmp
incl
mov
dec
cmp
call
ss
sub
fwait
inc
jecxz
in
fsubrl
imul
imul
cmp
ljmp
dec
outsb
ss
jb
sbb
and
xchg
lods
repnz
into
out
inc
lcall
jl
jecxz
push
inc
inc
dec
adc
stc
outsb
jae
arpl
mov
xchg
fadd
fldt
mov
add
jmp
pop
jae
add
add
and
rcrl
sbb
mov
or
push
in
mov
xchg
rorb
arpl
xchg
sub
shll
fwait
aad
pop
mov
adc
xor
xchg
xchg
imul
cwtl
push
pop
addr16
outsl
cli
jg
addr16
dec
xorb
lret
mov
mov
data16
mov
ljmp
fstpl
in
dec
das
movsl
adc
or
into
or
scas
mov
flds
decl
adc
add
out
pop
stos
repz
xchg
mov
cmp
pop
xchg
frstor
fidivl
ljmp
pop
addr16
fadds
xor
stc
push
sub
lahf
or
sbb
cld
lcall
xor
lret
pop
aad
and
pop
inc
mov
sti
adc
mov
jg
add
pop
shr
mov
popf
mov
lock
incl
popf
pushf
out
or
and
dec
push
js
pop
enter
addb
lcall
dec
jl
add
fbld
out
xchg
test
bound
andl
fcomip
jnp
jg
push
fistpl
mov
jecxz
cs
mov
push
imul
in
xor
insl
fistl
bound
jge
mov
in
fisubl
fcomip
filds
imul
int3
jle
enter
xchg
lea
incl
fdivs
insl
add
repnz
mov
push
lods
jne
sbb
dec
push
cmpsb
decl
test
fiaddl
jae
int3
negl
add
jg
dec
pop
push
mov
cld
jle
sbb
pop
add
push
xchg
popf
cmpsb
lcall
inc
pushl
inc
mov
fwait
lods
mov
sahf
out
jne
nop
jne
hlt
pop
call
and
add
in
and
arpl
sbb
das
arpl
mov
enter
cmp
cmpsl
jmp
sub
test
clc
call
movsb
lea
call
outsb
xchg
movsl
loope
xchg
xor
and
nop
sub
fimuls
decl
cmp
xorb
in
or
push
stc
loopne
int
pop
scas
test
fiadds
push
jns
push
std
stos
fs
mov
mov
jnp
cmp
decl
mov
xchg
fs
push
jne
sub
into
into
mov
aaa
and
sub
shl
cmp
lds
sub
call
sbb
call
pop
sub
xor
jno
in
pushf
dec
icebp
lahf
bound
orb
xchg
xchg
cmp
in
cli
sub
clc
pop
inc
push
iret
lcall
popf
hlt
mov
pop
mov
ja
test
cmp
std
pushl
mov
pusha
push
sub
xchg
cmc
push
inc
xor
push
decl
hlt
hlt
fists
ror
test
push
xor
pop
mov
fucomi
shrb
lcall
pop
xor
pushf
das
xor
cli
mov
lret
lcall
lcall
lahf
sarl
jne
pop
testl
and
mov
or
nop
mov
xor
jl
sbb
mov
dec
inc
fistl
sti
push
pop
les
int3
push
adcl
mov
lock
jg
in
sti
adc
cmp
xchg
fimull
enter
cmpsl
mov
loope
lcall
imul
mov
in
mov
int
inc
push
xor
ljmp
out
xor
and
and
push
js
mov
call
or
mov
jno
add
or
call
push
xchg
and
jo
mov
and
aad
insb
cmpsb
xor
mov
jle
and
xchg
push
mov
fisubs
call
and
add
lock
decl
jns
adc
jne
incl
xorb
lods
hlt
mov
dec
inc
loop
sarb
movsb
jg
pop
push
test
dec
jle
fbld
push
mov
call
mov
or
mov
shll
insl
mov
pop
mov
loope
ljmp
hlt
push
mov
xchg
cli
sbbl
insl
scas
popf
xchg
jmp
mov
imul
mov
iret
pop
adc
es
js
sbb
lea
leave
mov
inc
xchg
add
xchg
and
and
and
out
je
adc
mov
jp
mov
jecxz
popf
lcall
aam
hlt
push
nop
xorb
loopne
sub
into
hlt
rorb
data16
jns
or
push
pushf
adc
lcall
pop
pop
pop
and
cmp
ffreep
sbb
lods
popf
add
jnp
gs
call
out
xlat
mov
or
mov
or
inc
andb
cmp
shl
jmp
adc
aas
pushf
loop
jo
out
test
pop
push
or
xchg
sub
call
std
xchg
pop
leave
cmp
fcoml
lods
cmpsl
outsb
cmpsb
xchg
leave
fsubr
out
cs
pop
icebp
mov
cmpl
jae
add
cmp
aad
add
icebp
incl
or
sbb
repz
jmp
in
test
and
lods
xchg
xor
aad
push
scas
movsl
mov
dec
stos
rorl
cmp
iret
dec
imul
push
repnz
jbe
push
xor
jb
mov
into
gs
ds
jg
call
cmpsl
scas
push
cwtl
push
cmpsb
xchg
outsl
sub
fiaddl
outsb
push
pop
cmp
repz
test
or
lcall
enter
or
lock
inc
adc
mov
les
mov
mov
scas
clc
ljmp
sbb
lods
xor
push
push
ja
mov
pop
fsubs
hlt
jge
jle
xchg
jne
jge
mov
fcoml
aad
pop
fwait
enter
adc
jge
arpl
call
hlt
push
mov
dec
push
cltd
sbb
and
aam
fs
insl
push
pop
xor
push
inc
data16
sbb
decl
enter
inc
les
jae
mov
sti
or
in
loope
gs
pushl
loop
pop
es
int
mov
xchg
sbb
jmp
or
in
das
out
jg
test
mov
or
sub
adc
mov
cmp
adcb
pop
and
xchg
test
inc
push
sub
mov
rol
rclb
in
mov
pushl
cmp
ret
into
sub
sbb
scas
stc
jl
adc
pop
cwtl
push
movsb
pushl
jns
xor
push
jnp
faddl
mov
sbb
and
rcrl
out
into
shll
fnstcw
ret
or
rorl
adc
movsl
aam
iret
clc
incl
push
sbb
xchg
bnd
mov
out
push
mov
ss
ud0
ljmp
test
push
push
adc
scas
testb
rclb
adc
mov
push
mov
mov
lcall
sub
fdivp
xchg
sbb
out
sub
push
outsl
jmp
mov
lods
in
mov
in
jne
mov
test
iret
push
mov
call
clc
gs
push
dec
aam
out
lea
xor
jo
ret
icebp
add
lcall
popa
dec
sbb
xchg
dec
nop
call
lock
dec
dec
adcl
in
cmp
xchg
xchg
sub
jmp
outsl
adc
pop
push
arpl
mov
jmp
and
decl
arpl
sahf
mov
enter
xor
leave
lods
or
cli
adc
ljmp
pop
xorb
loope
aas
fadds
jge
push
aam
lods
insl
lcall
cmpl
inc
xor
clc
or
push
testl
dec
lea
adc
movl
cmp
lea
lods
push
shrb
loope
mov
xchg
lcall
lea
add
push
popa
out
inc
push
pop
jnp
sub
out
cmc
decl
push
lods
movsl
add
inc
data16
lea
scas
mov
mov
loope
repz
into
dec
push
mov
pushf
pop
sets
lods
enter
jg
decl
fucom
sub
aam
and
repnz
bound
call
jmp
lret
mov
push
mov
les
outsl
mov
pop
push
inc
aaa
add
cmp
ret
fmull
bound
xlat
mov
cmpsl
push
or
aaa
test
jnp
call
ficomps
aaa
sub
sub
call
subb
mov
movsl
and
loope
xchg
sbb
insb
ljmp
clc
outsb
jge
xchg
push
sbbb
pushf
daa
jo
or
leave
jb
gs
incl
pop
fdivs
loop
adc
pop
pop
pop
mov
mov
and
scas
jg
scas
mov
jne
lock
out
shrb
js
in
cs
jno
mov
jmp
out
rolb
xchg
lods
adc
jp
xlat
ffreep
outsb
fisubrl
xchg
ja
cltd
insl
dec
in
inc
dec
dec
mov
pusha
pushf
push
js
jnp
aad
and
jo
incl
out
cwtl
inc
xor
pop
es
push
into
or
pop
stos
cmc
leave
mov
call
sub
jno
icebp
mov
jecxz
dec
aad
scas
mov
sbb
cmp
decl
out
add
enter
rcrl
mov
sbb
in
es
sti
xor
pop
mov
popa
sub
inc
push
dec
inc
hlt
es
out
mov
mull
std
jno
push
addb
cmp
and
push
cmp
dec
lret
jns
push
pop
in
cmpsb
lcall
sub
icebp
je
jbe
pop
jae
push
xchg
jns
jp
mov
call
cmp
push
jnp
loopne
push
adc
adc
lret
daa
adc
pop
cmp
adc
and
adc
filds
xchg
shlb
mov
adc
leave
pop
movsl
out
idivb
jmp
add
xor
dec
push
push
cltd
outsl
adc
test
jg
sub
push
adc
lock
lock
mov
inc
mov
imul
decl
inc
add
sarl
pop
fwait
inc
adc
adc
jno
jmp
mov
or
imul
mov
lds
mov
cld
dec
xchg
ds
inc
pop
xchg
jbe
jb
mov
mov
nop
sbb
decl
stos
sti
add
or
mov
cmpsb
popa
fidivl
insl
addr16
lret
dec
call
and
adc
lea
aam
jb
pop
int
pop
fnstenv
jo
jno
push
in
fldl
mov
call
mov
lods
mov
in
sub
inc
xor
imul
inc
test
fucomip
mov
and
jmp
pop
movsl
lahf
test
fstl
mov
push
xchg
pop
xor
sub
inc
jmp
call
dec
inc
sub
pop
pop
and
mov
jle
mov
sub
repnz
fwait
pop
jl
xlat
decl
jno
mov
inc
sti
movsl
sbb
or
loope
adc
dec
or
sub
inc
call
out
jp
iret
xchg
js
repz
inc
lea
pushf
xor
sub
fstps
add
sub
jg
incl
sbb
push
mov
mov
mov
xchg
cmc
cli
dec
pop
shl
call
ljmp
sub
jno
sub
sub
das
cmp
mov
sub
pushl
aaa
sti
mov
mov
loop
adc
cmpsl
adc
jne
jle
out
xor
lcall
xor
aas
in
hlt
adc
scas
and
divb
sbb
push
dec
pop
dec
mov
cmpsl
lcall
iret
mov
fcmovnbe
inc
push
pop
scas
cmp
clc
jnp
dec
inc
xchg
clc
adc
pop
jb
out
insl
clc
stos
decl
push
xchg
xchg
test
lods
les
out
bound
add
xchg
jecxz
push
cld
enter
xor
mov
mov
push
xchg
movsb
mov
lret
in
out
mov
mov
and
nop
jne
xchg
lcall
mov
add
sbb
lret
mov
xor
ret
movsb
andl
mov
add
jge
xchg
mov
cmp
dec
imull
cli
popa
popf
push
mov
push
aaa
mov
cmp
dec
data16
push
mov
mov
adc
xor
xor
ljmp
xchg
xchg
fists
xchg
adc
adc
mov
data16
testb
sub
cmc
add
xchg
push
jne
or
enter
xor
lahf
jg
dec
iret
pop
or
scas
stc
push
sahf
mov
decl
mov
cli
jno
and
mov
cmp
dec
test
js
adc
in
lcall
gs
je
out
add
and
jbe
xchg
jmp
add
sarl
ljmp
lret
xchg
cmp
push
repz
mov
push
arpl
xlat
mov
ljmp
mov
out
dec
mov
fwait
fs
popf
and
negb
fs
jg
or
and
dec
sahf
mov
push
adcb
dec
pop
movsb
loop
aam
xor
enter
jne
jge
mov
xor
or
dec
jle
dec
cmp
xlat
incl
mov
outsb
cmp
jae
xor
addb
lock
ds
sbb
mov
call
mov
mov
mov
cmp
lds
mov
cli
pushl
inc
jae
stos
shr
mov
xorb
ds
jbe
jmp
rcrb
ljmp
push
ja
imul
popf
faddl
test
cwtl
mov
mov
das
xor
mov
cli
add
ret
inc
subb
and
push
imul
pop
movsl
xor
sub
cmp
cwtl
rcr
dec
fs
add
into
pop
push
scas
int
stos
in
sbb
std
lcall
adc
inc
cmp
rorb
andl
dec
out
jg
decl
out
dec
fldenv
jg
shll
loopne
enter
inc
xchg
ljmp
rolb
daa
mov
xchg
sbb
ss
leave
xchg
enter
fistps
incl
dec
movsl
push
cmc
shll
pop
dec
sbb
int3
cld
rcrb
test
jmp
subl
mov
jae
rclb
rolb
jl
inc
clc
inc
mov
das
jmp
pop
mov
and
and
sub
test
mov
jle
jmp
aam
jl
push
or
jle
push
xor
dec
and
pop
andl
ficoms
ljmp
mov
mov
rcll
addr16
popa
push
fs
xchg
mov
imul
cmp
ss
lret
pop
ljmp
aaa
in
add
cs
cmp
outsb
lcall
decl
xchg
into
dec
sbb
sbb
cmpsl
aas
mov
test
negb
lret
lcall
adc
push
xor
mov
push
fnstcw
dec
lods
inc
add
lea
or
dec
xchg
and
inc
filds
aam
dec
movsl
cmp
iret
jo
je
movsb
inc
mov
push
cltd
pushf
mov
sub
sar
leave
mov
decl
loope
dec
hlt
mov
mov
outsb
imul
and
push
aam
cld
incb
call
stos
pusha
fcomps
into
pop
inc
arpl
stc
notl
mov
dec
int3
sahf
gs
jmp
mov
jae
leave
loopne
pusha
dec
sbb
pop
lret
cmp
in
xor
pop
sub
enter
pop
pop
int
jno
repnz
mov
pop
or
popa
ljmp
icebp
mulb
stos
xchg
push
and
stos
jne
or
pushl
mov
xchg
push
push
cmp
scas
sbbb
int
xlat
and
xchg
dec
call
jmp
mov
aam
jne
nop
hlt
xchg
es
jmp
push
scas
add
call
rorb
fcmovbe
and
xlat
xchg
std
and
dec
sub
cmp
popa
adc
add
cmp
aaa
mov
out
jns
xchg
jp
lock
cli
xor
jb
mov
mov
mov
sub
mov
fistl
lea
ljmp
fistpll
jle
jae
cmc
inc
repnz
mov
inc
ret
jp
push
jl
loop
mov
movsl
aam
sub
decl
fistl
add
popf
movsb
int
add
fistps
xchg
mov
sub
loop
dec
push
es
push
adc
stos
repnz
push
mov
jecxz
fcomps
mov
js
pop
adc
sub
stc
push
fidivrl
dec
and
jecxz
out
cli
pop
outsb
pop
xor
mov
and
pushf
sbb
push
stos
push
in
pop
jmp
jmp
cmc
xor
jmp
fsubs
pop
out
shlb
pop
lods
movsb
xchg
lods
adc
inc
lock
loope
mov
sub
xorl
jo
loop
out
ret
xor
jmp
leave
cmp
inc
rcl
test
stc
add
pop
mov
pop
imul
mov
call
loopne
and
popa
pop
mov
loope
icebp
std
js
or
mov
mov
push
or
cmp
inc
push
cmpsb
std
shlb
sbb
stc
sub
es
sbb
popa
call
call
pop
das
add
mov
and
mul
pushf
das
je
movsl
hlt
ret
fldenv
mov
xchg
fldt
inc
mov
pop
or
lret
lock
cmpl
lahf
add
mov
jno
dec
divb
out
cld
pop
ret
sub
add
fnstenv
xchg
adc
stc
dec
dec
call
jle
pop
mov
adc
mov
sbb
push
cmp
imul
decl
stc
mov
ret
adc
int
clc
scas
fimull
sti
lods
scas
jp
shl
mov
cmp
or
mov
push
or
xchg
pop
cmp
push
jle
paddusw
int
and
xor
push
lcall
sbb
mov
pop
decl
scas
divl
and
stc
aas
paddsw
xor
push
ljmp
lods
mov
push
lret
sbb
daa
push
dec
fidivl
dec
sbb
repz
in
mov
decl
shrb
gs
xchg
add
shrl
cmc
in
or
sub
in
push
push
insb
lods
ja
sbb
repz
mov
push
js
arpl
sbb
cltd
pop
lock
call
stos
pushf
addr16
mov
or
mov
mov
jns
sub
lcall
push
jle
ret
scas
cli
ljmp
into
adc
mov
mov
push
pop
lcall
ftst
push
into
test
sbb
jae
hlt
inc
cli
decl
leave
mov
int
xchg
cmp
aas
movsl
inc
add
and
fcoml
push
pop
int3
je
add
pop
cli
mov
test
jg
stc
dec
inc
xor
jo
mov
push
jnp
pusha
mov
in
test
daa
mov
in
pusha
mov
clc
cmp
stos
jmp
push
fsubr
arpl
jp
insb
js
sub
notl
xchg
jmp
dec
adc
mov
js
or
fldl
and
add
cmc
cli
push
pop
xorb
mov
jmp
dec
imul
js
in
mov
xor
inc
shl
dec
mov
loop
push
cli
call
push
out
negb
fcmovne
sbb
adc
inc
je
and
dec
mov
daa
adc
scas
nop
inc
shrl
shlb
add
in
mov
pop
pop
in
cmpl
sbb
incl
sub
pop
pop
mov
and
cmc
sub
fnsave
shrl
inc
sbb
pushl
pop
clc
jecxz
sbb
int3
fs
xor
hlt
movsl
xchg
mov
mov
add
loopne
xchg
imul
insl
xchg
mov
sbb
fsqrt
stos
lcall
jae
add
xor
mov
loope
xchg
in
sub
or
ljmp
inc
pop
das
in
daa
inc
and
std
inc
icebp
inc
dec
test
lcall
js
mov
call
mov
mov
mov
fucomi
in
push
or
pushl
ljmp
or
adc
cmp
aam
ljmp
scas
xchg
jmp
stos
mov
dec
adc
sbb
ja
add
sbbb
call
outsb
js
and
sub
lds
sub
push
sbb
jb
imul
icebp
mov
xchg
in
cwtl
fs
mov
inc
inc
mov
in
xchg
pop
jge
xlat
jp
jg
or
cwtl
icebp
bnd
dec
jmp
sub
mov
jo
sub
and
lcall
and
jns
pop
out
mov
movsb
ljmp
jp
icebp
sub
incl
add
dec
ret
mov
xchg
sub
jmp
or
mov
or
sbb
add
out
fisubs
popf
sub
add
loop
xor
mov
dec
sub
aam
pusha
push
sbb
arpl
out
std
sub
sbb
xchg
test
pushl
and
rcrl
add
div
jo
xorb
stos
lods
push
add
fidivrs
pop
pop
mov
call
fldl
or
add
or
mov
cli
dec
sbb
or
jb
sbb
call
bound
pusha
xchg
gs
scas
push
test
xchg
std
insl
xorl
out
mov
add
aaa
mov
inc
xlat
pushf
bound
hlt
bound
decl
cmp
scas
push
fninit
ficomps
call
loopne
jae
dec
pop
mov
nop
insb
jnp
jns
sarb
sbb
dec
or
loop
decl
cli
imul
ss
push
out
enter
xor
hlt
insl
les
push
push
push
sbb
cmpb
sti
aad
adc
add
sbb
ljmp
jb
mov
pop
mov
int
dec
out
addr16
clc
jmp
neg
sbb
idiv
imul
into
sarl
sub
jle
lods
shr
fld
cmp
jmp
xchg
mov
cmp
int3
xor
sbb
lock
cwtl
pop
mov
push
lret
ja
call
push
jne
data16
dec
rol
rclb
add
enter
jae
bound
mov
mov
inc
dec
je
mov
fs
into
jmp
jg
dec
sub
scas
inc
imul
loopne
popf
cmp
lahf
sub
rolb
add
cmp
imul
add
xor
outsl
cli
lcall
fs
mov
inc
fnclex
bound
divl
incl
mov
cltd
je
inc
xor
and
adcb
cmp
jmp
xorl
push
ljmp
mull
pop
icebp
mov
dec
roll
jno
aas
scas
push
jl
xchg
xor
stos
inc
jp
imul
or
aaa
or
adcl
ljmp
cmp
out
loop
lea
lds
fs
adc
rclb
ljmp
adc
mov
jecxz
xor
push
movsb
mov
lret
xchg
repz
pop
les
ja
jmp
or
xor
jno
hlt
add
ds
fistps
fsubs
lds
lea
call
outsb
push
fs
repz
xor
ret
mov
mov
push
fwait
jmp
inc
push
mov
lods
mov
xor
sub
sbb
push
pop
nop
mov
dec
xor
pop
mov
xlat
pushl
into
fildl
sti
sti
xor
sub
mov
jns
je
jmp
xor
out
mov
incl
jbe
inc
test
rcrb
je
scas
mov
movsl
pop
out
push
mov
movsb
push
lcall
pop
arpl
xor
test
gs
repnz
icebp
mov
jmp
xchg
cmp
cmp
data16
pop
xor
xchg
stc
arpl
and
les
leave
xchg
dec
cmpsb
es
cmp
das
jl
dec
pushl
sbb
dec
imul
rcrb
push
imul
jle
pushf
mov
in
jge
push
sbb
mov
push
add
and
sti
inc
or
stc
sahf
adc
cmp
mov
in
das
int3
imul
push
dec
dec
push
push
sub
incl
jnp
mov
mov
sbb
mov
fs
sbb
outsb
imul
and
and
sub
cmp
call
push
pop
mov
xchg
mov
jge
jae
nop
and
jg
mov
inc
push
packuswb
inc
roll
bound
rcr
mov
lcall
or
negl
or
fstpt
ja
js
mov
decl
lods
arpl
inc
je
sub
cli
fdivl
sbb
and
aam
jg
call
adc
in
and
insb
jle
stos
fdivr
call
adc
jmp
inc
mov
leave
dec
hlt
dec
adc
sub
jmp
push
shrb
mov
in
mov
outsl
jge
or
js
add
sbb
mov
ljmp
popa
and
push
lods
inc
mov
push
cld
pushf
sbb
divl
push
pusha
pop
mov
fistps
sbb
dec
inc
xor
es
add
jge
mov
fldenv
xchg
mov
in
call
pop
mov
pop
outsb
std
ss
enter
mov
sbb
adc
lret
cli
decl
pop
mov
mov
cmp
mov
jno
pop
int
pusha
jle
das
mov
outsl
xchg
cmp
stos
sti
inc
imul
add
rcll
xchg
out
pop
mov
push
cli
cmpsb
and
dec
jmp
scas
jmp
mov
jae
into
pop
cmp
leave
mov
ljmp
out
imul
mov
jg
mov
gs
xchg
jae
call
mov
dec
lret
add
sahf
jns
cltd
jno
jmp
addr16
ret
pop
or
ficompl
inc
movsl
mov
decl
mov
push
sbb
pop
xchg
test
jo
sarl
pop
test
jl
dec
pop
xchg
jmp
adc
inc
movsb
cmpsl
mov
or
rorl
add
xor
and
loope
clc
call
sbb
nop
in
pop
cmpsl
icebp
movsb
lret
mov
bound
out
andb
call
sub
test
ljmp
cli
jne
sub
lahf
push
addps
inc
ljmp
dec
adc
sub
pop
and
jg
add
ljmp
mov
ficoms
outsl
mov
cmp
mov
leave
sub
or
mov
sbb
push
aaa
xchg
pop
lret
cltd
mov
pop
pop
ljmp
int3
jl
gs
xor
ljmp
rcrl
lcall
xor
mov
xchg
add
xlat
call
push
pusha
imul
aas
enter
jmp
into
iret
add
dec
dec
mov
add
frstor
movsb
pop
push
aam
push
xchg
shll
pushl
es
mov
mov
add
icebp
cmp
sbb
cwtl
sbb
jp
incl
jmp
shlb
xorl
push
or
dec
pop
jae
fcompl
subb
jmp
inc
mov
inc
lds
or
call
std
daa
mov
jge
decl
loop
cld
jnp
insl
stos
jb
and
jno
adc
mov
stc
xchg
inc
pusha
mov
cld
decl
adc
jg,pt
mov
xor
iret
cmp
sub
mov
mov
orl
cmp
add
fcompl
jmp
add
pop
aas
ljmp
sub
dec
xor
mov
and
movsl
jb
push
xchg
and
push
sbb
incl
aaa
adc
int
ds
mov
notl
stc
ret
loope
mov
insb
out
cli
mov
mov
ja
and
cmp
icebp
mov
pusha
out
add
ljmp
sub
pop
add
mov
ror
mov
mov
jbe
mull
add
das
jne
es
sti
xchg
inc
jae
ljmp
sti
pop
or
xlat
dec
xlat
and
idiv
jecxz
jmp
popa
popa
pushf
inc
pushl
test
mov
and
jle
les
imul
iret
mov
movsb
inc
in
icebp
inc
dec
sub
loopne
dec
int3
stos
scas
test
call
ja
pop
shrl
icebp
ljmp
jne
dec
lret
lcall
subl
gs
mov
inc
xchg
mov
jg
jbe
pusha
pop
cmpsb
movsb
push
push
arpl
mov
mov
int
push
in
xor
call
pop
adc
ljmp
or
pop
push
lcall
popl
cmp
lret
mov
mov
jbe
inc
loop
and
sub
pushl
cmpb
imul
mov
jecxz
pop
push
mov
xor
outsb
lcall
std
filds
int
sbb
mov
jle
cmp
push
pusha
sub
xchg
mov
lock
inc
addb
imul
mov
adc
js
aam
pop
sub
mov
ficompl
decl
in
mov
adc
mov
out
adc
add
mov
or
imul
xchg
loopne
or
bound
stos
add
pop
stc
lods
jg
ljmp
adc
lret
scas
adc
movsl
out
cmp
lahf
mov
ficompl
fcoml
or
and
xchg
dec
xor
mov
dec
pop
test
inc
xchg
int3
div
movsl
xchg
rcr
imul
pop
lret
inc
jno
adc
xlat
xor
idiv
call
xlat
mov
int
inc
sbb
call
call
call
push
insl
bound
xor
adc
arpl
sahf
xor
inc
out
sub
divps
push
sub
in
push
pop
jnp
repz
jl
repz
pop
and
push
pop
push
jnp
aaa
out
jns
ret
push
les
test
push
sbb
dec
imul
inc
jp
loopne
lds
pusha
mov
call
aad
mov
add
or
rcr
and
ss
mov
outsl
decl
cmp
imul
add
and
incl
loope
jnp
insb
inc
jae
jg
mov
test
dec
xor
ret
fs
das
push
mov
lock
rolb
cli
mov
mov
push
lcall
andl
mov
add
add
repnz
and
inc
loopne
cli
faddp
push
xchg
dec
push
cmpsb
popf
mov
outsl
lds
dec
mov
decl
lods
pop
bound
or
insl
dec
fildll
cmp
sbb
cli
pushl
sbbl
inc
pop
mov
jge
ret
popa
mov
mov
mov
mov
js
js
movsb
orb
pop
inc
ror
movsb
mov
push
jl
loopne
cmp
mov
loopne
xor
sbb
inc
test
out
popa
mov
jne
add
test
fwait
cli
ljmp
pop
push
or
dec
cwtl
mov
fwait
out
pop
push
sub
sar
mov
outsb
pop
sbb
hlt
leave
push
xchg
jns
adc
dec
in
push
xor
call
subl
rorl
and
mov
lock
subps
inc
lret
cld
jns
xor
push
movsb
rol
mov
dec
pop
aam
cmpsb
jecxz
aam
aaa
push
jg
test
or
xorb
shrb
xchg
cmp
stos
cmpsb
mov
lcall
incl
dec
mov
test
mov
push
mov
pop
or
bound
fstpl
hlt
mov
mov
xorl
inc
mov
clc
inc
test
pusha
and
and
enter
pushl
jae,pn
pop
add
add
and
xchg
and
rolb
inc
add
clc
incl
pushf
jp
call
stos
jne
outsl
sbb
cmc
ficoms
push
clc
lcall
jmp
loope
nop
xlat
inc
or
arpl
jns
add
xorl
aad
lret
rol
in
imul
xchg
arpl
data16
pop
jne
lds
lods
call
or
out
pop
negb
cmp
add
push
int3
gs
cmpsl
pop
add
add
mov
jb
decl
push
xor
int3
pop
mov
jbe
jecxz
pusha
enter
push
jge
in
outsb
mov
jmp
test
js
lcall
xchg
gs
out
fildl
hlt
shrb
pop
sub
dec
mov
sub
mov
jbe
cltd
gs
dec
arpl
popa
nop
bound
sub
push
std
mov
xor
xor
sub
xchg
jle
add
pushl
jp
or
fstpt
add
adc
cmpsl
lahf
mov
call
pushl
push
repz
adc
cmp
mov
or
bound
ljmp
push
add
stos
test
es
out
leave
cmpsb
inc
add
mov
testl
ljmp
je
testb
inc
icebp
mov
mov
rol
mov
mov
inc
std
scas
cli
dec
insl
push
xor
fstl
ljmp
sbb
sub
leave
cmc
leave
stos
sub
call
xchg
sarl
iret
sbb
rcrb
hlt
jl
jl
pusha
fwait
decl
fsubrl
stc
movsl
dec
add
adc
scas
jo
ljmp
adc
and
pusha
mov
jg
ret
fldt
fcmovnbe
mov
js
aam
movsb
mov
and
sarb
jno
cmp
sbb
shlb
pop
pop
dec
jno
mov
mov
cltd
xor
mov
insl
cmc
insb
scas
and
mov
shl
incb
cmc
mov
fiadds
push
adc
bound
leave
es
cmc
dec
ja
loopne
xchg
pushl
popa
fdivrl
test
push
aam
in
and
pop
mul
test
negl
dec
jp
fsubs
divl
lahf
movsl
xchg
mov
mov
out
repnz
fidivl
xor
pop
loopne
mov
or
add
xchg
dec
cmc
fwait
sbb
jmp
pushl
addr16
enter
xchg
push
popl
pop
dec
outsb
mov
add
hlt
mov
and
in
xchg
jmp
cmpl
add
push
hlt
inc
addr16
dec
inc
cmp
xor
push
outsb
sub
push
ljmp
sub
icebp
cmp
jmp
or
jle
mov
dec
inc
jae
addr16
sub
xchg
lods
filds
ljmp
clc
fldt
fnstsw
pop
lock
movsl
enter
sti
sti
mov
push
xchg
sbb
std
inc
mov
xchg
mov
jb
mov
adc
xchg
push
and
mov
jb
testb
data16
scas
mov
out
push
dec
pop
inc
pop
pop
push
decl
pop
sahf
or
sbb
jno
jno
inc
sbb
adc
cmc
loope
pushl
xchg
leave
mov
push
pop
shl
lret
ds
inc
inc
or
jmp
inc
cmc
push
adc
call
aad
push
out
dec
sbb
lcall
inc
pop
scas
mov
cli
and
jecxz
ljmp
pop
pop
dec
xor
loop
or
pop
cli
roll
aad
scas
mov
xchg
xchg
rorl
adc
cli
and
jmp
xlat
popf
js
push
and
aaa
cld
cmovg
jae
sbb
lods
cmp
addr16
jo
in
std
fidivs
mov
out
or
mov
inc
test
fdivs
pop
dec
int3
outsl
push
or
ljmp
das
loop
add
jae
jle
xchg
mov
or
gs
and
orb
cmp
mov
adc
push
decl
inc
loop
jecxz
push
cltd
jp
pop
pop
mov
ffreep
scas
aam
jne
push
lods
or
dec
pushl
inc
sbb
fisubl
pop
jns
sbb
inc
bound
jnp
lahf
jmp
rol
bnd
sbbl
cs
daa
jae
and
gs
andl
mov
push
or
stc
jmp
mov
dec
popa
mov
cmp
cld
jecxz
dec
jl
fidivs
in
sbb
ret
aas
bound
ret
adc
jl
pop
sub
sub
call
mov
mov
inc
stc
aad
sub
movsb
stc
ljmp
ljmp
icebp
pop
scas
sub
fcomip
decl
sarl
or
arpl
gs
jnp
pop
pop
mov
jle
aad
incl
xor
push
arpl
dec
add
ljmp
arpl
and
mov
stos
dec
loope
sbb
lods
bt
dec
rolb
jne
ljmp
pop
jno
cmc
mov
pusha
cwtl
cmp
into
testl
jecxz
jecxz
pop
out
gs
leave
ljmp
add
popf
jg
lahf
xchg
clc
ljmp
jne
push
pushf
jb
dec
ljmp
or
lret
push
decl
dec
pop
xchg
sbb
pop
fs
pushf
fcoml
sbb
sub
xchg
dec
add
cmp
xchg
stos
xor
dec
adc
xchg
adc
lcall
out
mov
mov
mov
out
call
outsb
adc
and
lcall
loope
jb
sbb
arpl
popf
fimull
test
fcmove
lds
and
insb
mov
or
push
sar
incl
subb
fisubrl
pop
sbb
adc
stos
adc
push
jo
rclb
jmp
fcmovnbe
jmp
aad
cli
in
jg
repz
es
bound
popf
lret
add
xor
adc
sub
inc
xchg
or
jle
mov
xchg
mov
lcall
and
adc
movsb
ret
inc
in
loope
std
and
mov
sar
incl
dec
sub
cld
mov
test
sub
xchg
pushl
dec
xchg
xchg
loop
mov
inc
insb
movsl
je
pop
push
lcall
jmp
sti
in
xor
in
sbb
sbb
push
movl
sbb
lcall
add
add
xchg
inc
call
cld
jp
cmp
dec
push
xchg
push
lcall
ffreep
xor
movsl
mov
test
dec
pop
push
mov
stos
pop
and
iret
mov
icebp
jns
jmp
out
lret
es
adc
test
lret
sahf
adc
pop
loopne
int
jp
xor
ljmp
cmp
shll
sahf
xlat
mov
mov
pushf
out
dec
fwait
in
mov
stos
rclb
jg
push
mov
test
fwait
test
daa
sub
arpl
fwait
inc
push
std
ljmp
cld
popf
aas
aaa
js
sbb
cs
out
jg
jne
es
mov
cmp
and
test
or
push
popf
js
sbb
sbbl
pushl
sbb
psubq
cmpl
adc
outsl
xor
pop
pop
mov
fs
decl
lock
pop
mov
jbe
inc
aam
pusha
das
into
push
sbb
inc
push
pop
mov
push
adc
addr16
scas
sbb
in
insl
in
aas
xchg
cli
add
jmp
dec
out
mov
fstps
mov
scas
mov
outsl
mov
mull
imul
jg
sub
repnz
dec
jo
lcall
lret
xchg
push
dec
add
test
dec
loopne
dec
into
ss
push
jmp
repz
xor
xchg
lods
push
mov
std
pop
adc
add
jae
test
jmp
loopne
aad
xlat
inc
fdivr
sub
jl
xor
out
aam
ret
sub
lds
scas
push
in
call
movsl
mov
rorl
mov
daa
sbb
pop
dec
jmp
sbb
stc
dec
adc
lock
xchg
js
mov
hlt
push
insb
call
lcall
hlt
lock
les
add
ja
dec
xchg
popl
cmp
dec
aad
or
xorl
jmp
in
aad
inc
ret
add
mov
mov
add
and
scas
daa
mov
pop
fdivr
call
add
pop
inc
out
or
fisttpl
addr16
into
pop
arpl
pop
add
nop/reserved
std
lcall
js
mov
lahf
jle
cmp
xlat
xchg
dec
movsb
bnd
pop
cmp
call
or
outsb
jge
rorb
sbb
ror
imul
push
push
or
pop
adc
decl
cmp
ds
ljmp
push
mov
xchg
xchg
add
or
in
sbb
or
adc
jg
popf
popa
sub
add
pusha
decl
test
mov
cltd
push
cmc
or
mov
incl
xor
sub
in
jnp
sub
cmp
sub
andl
pop
cmp
arpl
repnz
cld
decl
dec
add
int3
or
and
ljmp
pusha
mov
jae
nop
stc
outsb
push
test
jge
insb
in
ljmp
pop
rclb
and
push
pop
pop
pushf
mov
mov
sti
fldcw
lahf
stos
std
clc
test
pop
dec
lods
add
inc
in
adc
adc
in
enter
xchg
test
sbb
aaa
std
pushl
sbb
scas
cltd
push
lahf
jb
fcomps
inc
lret
push
push
outsl
push
jmp
out
inc
filds
sbb
add
lock
out
add
inc
and
xchg
jmp
mov
adc
lret
jnp
out
retw
cmpsb
lcall
push
pop
jg
pushl
cld
and
sub
jecxz
lea
pop
and
sahf
pop
jns
inc
dec
mov
bound
aad
fmull
stos
cmp
adcl
jmp
es
fistpll
loope
les
jmp
into
inc
dec
imul
in
call
sub
ret
imul
fmulp
mov
in
iret
pop
xchg
cmc
inc
xor
je
adc
pusha
jg
ficompl
out
jo
popl
add
push
inc
call
dec
nop
push
sti
cwtl
pushl
xchg
cmp
mov
jge
lcall
movsl
push
es
stos
lods
inc
inc
pop
inc
lock
decl
or
out
mov
int3
icebp
mov
adc
jl
idivl
jge
lret
mov
jg
jmp
sbbl
inc
and
fnstsw
daa
xchg
ja
ljmp
aad
mov
incb
push
and
nop
mov
in
in
jmp
hlt
inc
push
pushf
cmp
jbe
js
mov
sub
mov
dec
push
push
aam
fcomip
ljmp
nop
xor
ror
stos
mov
cmp
jle
dec
cltd
out
nop
add
jno
js
push
pushl
stc
push
loop
sub
and
popf
and
mov
inc
in
or
jmp
jp
popa
jle
add
xchg
loope
stc
scas
inc
xchg
jg
xchg
test
sub
mov
sbb
mov
or
add
push
mov
scas
les
lahf
inc
sub
mov
ljmp
mov
jmp
mov
mov
out
dec
in
jns
add
in
loopne
add
or
push
ljmp
jbe
mov
shr
in
movsb
rcr
inc
movb
or
xlat
cmpsb
mov
mov
mov
je
inc
dec
cmp
mov
loope
cltd
push
sbb
mov
cltd
mov
or
popa
sbb
sub
out
ds
add
push
fcos
ljmp
rolb
cmp
fldt
test
rolb
xchg
push
jg
jmp
out
hlt
xor
pusha
mov
mov
scas
rorl
imull
adc
jmp
mov
adc
leave
cmpsb
fs
out
push
inc
aam
int3
in
scas
lret
inc
mov
ret
repz
pop
mov
xor
add
sahf
arpl
push
jnp
or
sub
pop
sbb
loop
xchg
into
mov
es
inc
daa
push
inc
mov
pushl
cmp
push
or
push
and
and
out
inc
pop
lcall
or
pop
test
ljmp
cmc
sbbl
sbb
xor
in
ret
fcoms
shrb
sub
decl
repnz
rol
jno
inc
es
scas
cmpl
out
and
sbb
adc
ljmp
frstor
xor
push
hlt
insl
jl
jno
into
sbb
filds
lcall
in
rolb
and
inc
xor
and
clc
add
mov
cld
sarb
xor
mov
inc
dec
shrl
stos
xchg
fnop
imull
arpl
ljmp
cs
inc
push
bnd
sbb
push
or
insl
dec
cmp
sub
bnd
push
cmp
jmp
sbb
orb
push
sahf
push
hlt
pop
cmp
jo
test
mov
call
mov
mov
stc
and
dec
jns
cmp
mov
rol
inc
inc
jmp
adc
fistl
and
ljmp
ret
inc
aas
call
cmp
dec
pop
ds
decl
adc
repz
pop
jb
pop
fdiv
ret
inc
cltd
mov
icebp
push
and
mov
inc
dec
incl
mull
imul
pop
mov
xchg
mov
push
sarb
dec
pmaxub
decl
or
les
xchg
es
lret
scas
fs
jecxz
mov
jmp
inc
fwait
or
hlt
mov
lcall
pop
push
ret
cmc
jecxz
leave
xor
lea
pusha
push
xchg
adc
push
and
clc
or
shlb
pusha
mov
push
outsw
nop
fisubl
ljmp
lods
jbe
xlat
in
mov
in
sub
es
push
jbe
mov
incl
push
xchg
les
cmp
lahf
insl
out
int3
mov
movsb
xor
pop
sub
push
jmp
sub
pop
mov
rcl
imul
inc
fucomip
xchg
shl
lods
ljmp
mov
out
movsb
test
loop
movsb
lret
decl
sar
lcall
imul
adc
xchg
mov
std
call
subb
jge
in
or
push
hlt
fisubl
jp
mov
out
sbb
in
add
dec
sub
loop
sub
jmp
loop
fcom
arpl
and
les
and
mov
incl
stos
out
jg
in
sahf
dec
push
jle
jecxz
cmpsl
add
mov
test
inc
out
dec
mov
lock
fiaddl
xor
nop
dec
and
into
pop
sbb
popw
enter
mov
mov
xor
pop
leave
icebp
sub
xor
int
sub
mov
jl
jb
sbb
add
sbb
adc
stos
ljmp
sub
sub
xchg
sub
pop
std
test
das
dec
jb
jg
orl
mov
jae
incl
imul
out
incl
lea
adc
jg
popf
pop
arpl
mov
incl
call
push
inc
pop
inc
push
das
sbb
jl
push
dec
inc
arpl
xchg
push
pushl
mov
and
mov
imul
js
das
out
popf
aad
xchg
dec
jle
incl
push
mov
push
mov
or
sbb
add
mov
xchg
clc
push
cli
mov
frstor
sub
call
xor
lea
push
in
push
shlb
imul
inc
inc
sbb
lods
sbb
and
dec
mov
mov
xlat
idiv
lds
and
incl
inc
add
mov
dec
sbb
cmp
ljmp
in
mov
mov
hlt
sub
out
lret
inc
lea
fcoms
mov
xchg
jmp
jg
cmpsb
stc
in
xor
call
cmpl
cli
cmp
imul
xor
sar
incl
sub
sahf
xchg
out
into
dec
inc
push
lcall
pop
cmc
test
sbb
add
pop
loopne
insb
addl
jle
xchg
je
add
and
and
ljmp
in
jg
pop
arpl
insb
sub
push
adc
repnz
cs
sub
jno
pop
test
incb
mov
es
shrb
adc
dec
inc
lahf
rol
dec
dec
clc
jno
jmp
jge
scas
ja
mov
xor
std
rcll
and
push
loop
push
cmp
out
or
aaa
fstps
xchg
mov
aam
outsb
and
mov
sbb
scas
sub
or
mov
xor
add
push
adc
test
xchg
decl
sbb
outsl
gs
push
mov
jmp
repz
call
clc
in
add
inc
inc
lret
or
inc
jmp
sub
xlat
movsb
sbb
jg
cmpsl
adc
movsl
aam
cli
in
xor
test
pushl
outsl
faddp
push
fs
ret
or
int
das
loop
shrl
stos
mov
pushl
xchg
cmc
dec
jne
xchg
ret
fstl
cmp
cmp
ret
jno
into
dec
pop
pop
push
fnstsw
ja
jmp
hlt
scas
mov
jmp
enter
outsl
xchg
pop
or
cmp
popf
ret
or
mov
jge
xor
sahf
adc
pop
nop
cmp
jmp
mov
or
cli
add
fs
jo
mov
mov
test
pop
and
pop
out
add
xchg
add
test
push
jmp
inc
push
mov
pop
adc
jo
sarl
cmp
push
mov
int
in
fldl
jg
xor
push
ret
add
scas
lds
jo
movsl
lods
shll
adc
pushl
movsb
addr16
or
jnp
popf
loop
mov
arpl
cmp
movsb
push
nop
mov
mov
push
test
rclb
adc
mov
test
jbe
clc
sbb
lock
out
jmp
pushl
mov
jge
popf
lock
xabort
das
mov
add
stos
inc
lcall
push
popf
mov
fidivl
arpl
lmsw
mov
loope
popf
insb
sub
jb
loop
pop
hlt
jg
jmp
fdivs
push
cmp
in
stos
sub
cmp
mov
dec
pop
mov
xchg
fwait
ja
inc
and
push
call
mov
cmp
inc
add
inc
mov
and
popf
push
clc
cmp
stc
scas
lock
jno
jbe
xchg
xorl
sub
loop
or
fwait
out
mov
cwtl
mov
icebp
or
push
mov
cli
xchg
lret
mov
pop
push
and
ljmp
sbb
mov
xor
push
or
dec
je
dec
rcrl
lds
sar
scas
push
mov
movsb
sbb
push
pop
jg
call
cmpsl
sbb
iret
jne
push
push
pop
xor
mov
dec
xchg
outsb
decl
icebp
daa
inc
jo
jne
xor
icebp
xchg
mov
mov
push
mov
bound
jg
incl
push
or
add
adc
jecxz
or
jno
es
mov
incl
jg
iret
cmp
dec
cwtl
inc
sbb
pop
cmpb
es
mov
outsl
std
xchg
sub
mov
loop
push
out
aaa
cmpsl
gs
imul
pop
and
lcall
mov
mov
mov
das
insb
jae
mov
stc
push
mov
push
mov
decl
cmp
push
rorl
lock
cmp
loope
sbb
xor
scas
push
stos
pop
mov
inc
decl
adc
push
insl
push
mov
aad
inc
pop
fisubrs
push
lods
mov
jae
cmp
sub
mov
inc
sub
add
in
rclb
sbb
dec
push
jmp
nop
jmp
daa
push
scas
cld
mov
mov
call
xchg
stos
movsl
mov
pop
ret
scas
andb
jg
jne
cmp
sub
pop
inc
push
push
lahf
and
std
std
and
mov
adc
xchg
nop
add
cmp
cld
and
movsb
test
xor
loopne
ljmp
pushl
shl
loope
add
lcall
fcmove
cmp
test
lods
mov
loop
js
mov
pushl
push
sub
rcl
lahf
push
repnz
pop
lods
out
call
fcoms
stos
xchg
dec
andl
pop
jb
lret
lods
cmpsl
movb
cwtl
dec
in
and
decl
jne
andl
stos
loop
mov
pop
pop
lcall
es
cltd
mov
mov
mov
or
movsb
add
jmp
aaa
lds
fists
loope
stc
into
outsb
add
sub
dec
in
data16
jge
xchg
adcb
dec
testl
jb
sub
inc
in
lods
sbb
or
decl
into
xchg
mov
push
stos
fnstenv
leave
insb
pop
pusha
mov
mov
add
or
adc
mov
ret
xlat
or
lcall
cs
aas
pop
adc
sub
cli
push
in
xor
mov
adc
clc
fldcw
out
add
int
push
fldcw
inc
std
aaa
xorl
call
rcrl
or
add
push
push
xor
call
out
ljmp
or
add
dec
cmpsl
aaa
xchg
or
add
mov
call
sti
ffree
rorl
adc
lcall
dec
mov
adcl
fstpl
inc
dec
daa
es
into
cli
pop
mov
xchg
es
mov
dec
ds
jb
sub
push
adc
xor
xor
out
lock
push
xor
mov
pop
in
out
sbb
inc
dec
and
arpl
insl
dec
and
mov
lcall
test
bts
scas
mov
mov
adc
add
incl
xor
xlat
shl
sub
lock
cmp
fisubl
jp
fwait
sahf
int
cwtl
cmp
call
sbb
jecxz
xchg
add
sbb
pop
out
xchg
lcall
imul
mov
xor
addb
pop
loope
mov
jmp
incl
push
pop
xchg
push
repz
loop
int3
pop
hlt
std
fcom
mov
xchg
adc
aas
cld
jns
scas
test
jno
or
mov
pop
dec
pop
pop
pusha
xchg
decl
loop
mov
jae
in
ret
dec
fwait
sub
mov
xchg
sbb
mov
idiv
addl
lods
cwtl
jge,pt
cmp
jp
mov
push
cmc
xor
roll
cmpsl
addr16
daa
mov
fucomip
lds
or
sub
loopne
gs
cli
sub
mov
push
dec
inc
push
push
add
dec
xor
in
jns
mov
xchg
fidivs
je
push
loope
out
mov
adc
aad
pop
imul
fists
mov
jmp
jnp
adc
scas
cmp
push
data16
push
cmp
dec
mov
lcall
sti
push
leave
jecxz
or
and
adc
pop
or
movsb
insb
or
call
cmp
dec
dec
push
fwait
adc
arpl
adc
loop
dec
out
ljmp
mov
lds
pop
adcl
push
cmp
mov
mov
cld
and
mov
push
gs
push
fmull
mov
inc
mov
in
je
leave
imul
xchg
out
fnstsw
cmp
xchg
jnp
rclb
call
lods
rorb
mov
in
adc
stos
dec
adc
push
addr16
out
movsl
adc
in
ljmp
mov
in
mov
xor
mull
xor
jnp
mov
stos
sahf
mov
mov
add
add
xchg
sbb
or
ljmp
dec
mov
sub
clc
aaa
jle
cmc
dec
jb
mov
mov
adc
mov
adc
add
sbb
inc
mov
insl
cmpsb
xor
or
adcl
loope
push
xchg
fdivr
call
mov
out
push
mov
js
dec
jno
rcr
jnp
scas
xor
jmp
fmuls
mov
pop
out
dec
xchg
jecxz
jecxz
pop
jnp
out
std
popf
dec
jl
repz
std
decl
sbb
loope
cmpl
hlt
jbe
sub
bound
sub
jle
push
fistps
call
subb
ds
jnp
inc
mov
and
pop
inc
pop
cmp
shrb
aad
mov
sar
mov
data16
push
mov
sbb
outsb
lea
call
out
int3
dec
add
addb
fidivl
inc
add
ds
in
adc
sahf
pop
mov
ja
dec
mov
stos
xlat
ljmp
mov
clc
mov
push
xor
das
push
mov
sbb
incl
pushf
and
in
add
or
xchg
push
rcrb
jg
lcall
aam
int
inc
dec
pop
mov
xchg
into
jbe
in
call
pop
loopne
mov
and
dec
shrb
add
lods
cmp
fldt
dec
xor
int
inc
pop
cmp
lods
rolb
movl
filds
loopne
cs
jne
lods
call
lods
mov
or
fstpt
xchg
pushl
xor
and
shrl
mov
shrb
pushf
cs
movsb
sbb
mov
int
loop
mov
dec
mov
sub
call
cld
lea
pop
addr16
call
jbe
mov
sub
test
rcrb
incl
pop
and
notl
xchg
and
int3
jecxz
mov
lret
les
in
jmp
dec
ss
leave
xchg
test
out
fdivrs
adc
scas
adc
xlat
jnp
int3
sbb
cmp
incl
sarl
cs
icebp
mov
xor
xchg
negl
mov
mov
cmp
lcall
cmpsb
test
lcall
fidivl
mov
stc
andb
ljmp
sarl
adc
xchg
dec
sahf
into
shrb
ret
or
dec
popf
add
lcall
cli
sub
pop
pusha
cmpsl
lock
sub
mov
cmpsl
pop
jnp
in
xor
arpl
adc
adc
sub
jne
cmpsl
sub
aas
sbb
clc
fists
cmp
idiv
decl
adc
jecxz
js
cmc
daa
idivb
add
imul
cld
sti
dec
shl
inc
incl
clc
cmp
mov
pop
adcl
and
je
pop
sub
cld
decl
xchg
cmpl
idiv
xor
push
into
mov
divl
int3
pop
pop
inc
jmp
jae
rcrl
scas
out
imul
out
out
mov
div
insl
jne
aas
scas
jge
dec
iret
dec
out
call
test
xchg
popl
add
into
jge
aam
dec
sarl
or
leave
inc
mov
aam
pop
mov
arpl
sbb
jbe
ss
decl
and
pop
in
adc
dec
mov
adc
push
pop
decl
cld
xchg
xor
and
push
or
xor
push
pop
lcall
xlat
insb
aas
sub
xchg
sbb
les
movsb
mov
decl
mov
xlat
mov
arpl
mov
sbb
mov
mov
push
incl
js
sahf
push
mov
cmp
into
iret
mov
mov
scas
out
jbe
xor
outsl
sbb
decl
outsb
jae
fs
out
mov
out
and
pop
inc
adc
push
sub
call
add
mov
push
rdmsr
lea
bswap
ret
add
cltd
xchg
lock
decl
test
leave
bound
xchg
in
mov
fmull
xchg
add
in
push
movsl
and
add
inc
addb
push
lock
inc
push
dec
mov
mov
xor
mov
dec
iret
mov
rorb
cli
and
in
dec
xchg
jae
ss
rcrb
and
inc
jb
decl
inc
bswap
popa
out
pop
arpl
add
rolb
fdivp
ret
dec
ljmp
lcall
sub
jmp
movsb
cmp
fdivr
ljmp
sub
and
jmp
push
lret
in
gs
lcall
mov
loope
decl
divl
out
mov
int3
and
insb
js
xor
mov
aaa
cld
ss
inc
stc
jnp
fadds
jno
xlat
lcall
mov
std
popa
lock
testl
outsb
adc
mov
xchg
sbb
push
mov
mov
dec
nop
out
mov
mov
and
lcall
loop
xchg
xchg
fwait
rolb
mov
cmp
aaa
adc
cs
push
mov
cs
mov
mov
repz
les
daa
push
dec
lret
push
fstl
arpl
imulb
mov
jle
lds
mov
sti
mov
cmp
mov
or
mov
jb
pop
mov
xchg
sti
and
adc
xchg
out
cmp
adc
push
out
and
mov
jbe
notb
in
shll
test
fcomip
mov
adc
movsb
daa
rcr
outsb
lds
test
add
push
xlat
shll
ljmp
dec
mov
cli
or
stos
clc
inc
or
cmc
out
fmuls
sbb
mov
andb
pop
cmc
jno
fists
ljmp
push
cmp
mov
ja
rep
sub
test
mov
pop
mov
call
nop
xchg
push
jge
dec
out
inc
fisubrl
pop
hlt
dec
adc
mov
clc
mov
jae
jecxz
call
pop
and
ss
mov
pop
lahf
dec
or
int3
jle
movsl
push
std
dec
incl
inc
mov
fcoml
outsb
add
lret
mov
adc
inc
in
mov
addr16
mov
shlb
adc
pop
pusha
fbstp
imulb
or
lret
cld
pushl
inc
cmpsl
icebp
popf
sbb
lret
leave
mov
imull
rorl
movsl
aas
pushl
scas
lret
sub
add
testl
push
adc
jmp
sub
aad
call
call
bound
and
jge
subb
ror
shr
dec
push
cld
inc
maxps
cmp
xor
mov
out
cli
lcall
rclb
cmp
loopne
lock
inc
out
mov
push
stos
jae
pushl
arpl
or
fs
fisubl
filds
inc
mov
add
jmp
push
fidivrl
stos
xchg
pop
outsb
das
es
pop
int3
iret
xchg
sbb
mov
ja
mov
ret
fstps
add
jnp
mov
jg
fsubrs
mov
cmp
mov
fisttpl
loop
lcall
pushf
arpl
sub
push
ja
in
jmp
xor
int
ds
and
ljmp
or
pop
pushf
mov
arpl
das
arpl
sahf
sbb
push
inc
mov
xor
stc
outsb
arpl
and
sbb
loop
fimull
dec
jmp
dec
pop
cmpxchg
pop
xchg
push
xlat
std
push
cmc
call
mov
pop
pushl
imull
mov
adc
bound
in
rcrl
lahf
fimuls
adc
mov
ljmp
pextrw
cmp
inc
xor
pop
sub
ret
mov
test
mov
jg
leave
sub
mov
lret
adc
enter
lcall
or
mov
mov
add
sub
lahf
adc
push
adc
mov
mov
lds
mov
mov
cmp
sbb
pop
sbb
jns
in
call
lahf
scas
dec
mov
add
sub
mov
ja
in
repz
out
mov
jmp
jmp
dec
xorb
ds
and
and
loopne
mov
js
notb
jg
clc
or
fnsave
in
lods
or
inc
jp
mov
aaa
in
daa
pop
xlat
cmp
jmp
incl
popf
adc
jg
jb
or
pop
add
ljmp
scas
cli
dec
outsb
sbb
js
push
cmp
cmp
push
add
add
push
push
outsl
mov
mov
xchg
icebp
xchg
dec
lahf
cmp
out
xchg
cmpl
nop
paddd
das
cli
push
stc
loope
scas
out
js
sub
inc
test
mov
fwait
jbe
enter
insl
add
mov
jmp
ljmp
outsb
int3
pop
gs
cmp
pushf
outsl
cmc
xchg
testl
sub
sti
mov
and
aad
lea
clc
lea
into
cltd
iret
mov
decl
xchg
faddp
mov
inc
push
cmp
inc
and
mov
pop
je
jns
clc
pushl
push
imul
sub
sti
dec
lahf
sbb
cmp
popf
pop
call
incl
xor
xor
adc
jmp
lock
jg
jg
jbe
adc
adc
ljmp
cltd
cwtl
popf
repnz
ja
call
ficoml
jl
cmpsl
xchg
aaa
in
cmpsl
js
xchg
outsl
icebp
push
aad
daa
push
arpl
lods
ljmp
cmp
adc
je
xorb
test
cmovle
ds
adcb
jecxz
pusha
call
mov
jg
pop
cltd
sub
testl
scas
in
xor
push
jae
aaa
or
adc
in
xor
adc
ja
ds
call
ljmp
push
xlat
aad
cmp
es
sbb
movsb
loop
xchg
mov
inc
adc
and
push
cmp
testb
mov
leave
and
cmp
dec
loope,pn
and
push
je
dec
sahf
outsb
cli
addr16
pushl
bound
mov
pop
and
cmc
add
inc
out
movsb
incl
inc
add
stos
mov
cmp
pop
popa
roll
out
inc
and
stos
add
mov
ss
sbb
jle
push
mov
inc
push
mov
pushl
enter
lret
sbb
inc
adcb
jg
fmul
xor
aad
mov
cmp
sbb
mov
jl
rcrb
testb
xor
inc
fwait
dec
int
outsl
or
mov
mov
in
mov
mov
std
cmp
incl
std
das
ja
or
nop
test
gs
popa
adc
mov
push
cmpsb
add
movsl
mov
call
jle
xlat
or
dec
dec
movsl
push
repz
dec
add
fstpt
jl
movsb
fcomip
mov
loope
inc
inc
mov
cmp
mov
jecxz
cld
cmpsb
pop
std
decl
or
subps
test
jmp
add
sbb
jo
aas
es
lcall
int3
in
xor
push
jge
mov
call
pop
mov
shl
jns
push
ret
popa
test
dec
push
cmpsl
jge
incl
cmpsb
outsb
ret
dec
cmp
into
lds
add
and
shll
or
push
jg
incl
xchg
add
xchg
mov
push
mov
lock
insl
aam
decl
cld
push
jle
loop
dec
xor
imul
mov
dec
jl
pop
add
sbb
je
js
dec
les
xchg
or
and
popl
sbb
jge
push
cmp
outsl
xchg
pop
lcall
popa
js
push
or
jae
cmpb
sub
dec
add
dec
mov
decl
sahf
dec
xor
repnz
scas
in
inc
filds
cmp
pop
fdivrp
ljmp
cmp
stos
cmc
lock
loop
jmp
dec
icebp
rorl
xchg
pop
xchg
mov
fisttps
out
sub
mov
orb
mov
decl
xor
das
aad
fldl
xchg
dec
addb
add
and
mov
call
sub
xor
push
sub
dec
pop
xor
adc
jo
dec
xchg
jg
scas
ret
nop
jmp
mov
inc
in
xchg
mov
popf
in
in
daa
cmp
mov
sbb
add
cmp
lea
or
lds
fucompp
xor
outsl
mov
sub
nop
ljmp
mov
add
xor
pop
cmp
xor
lcall
jnp
ret
setb
ficoml
test
jg
int3
push
fistps
mov
dec
and
adc
inc
sbb
inc
sbb
xor
inc
cmp
mov
clc
dec
ljmp
xchg
xor
hlt
dec
pop
pop
push
xorb
mov
sahf
ljmp
jl
adc
mov
fistps
clc
je
inc
cmp
push
or
fcmovnb
inc
in
dec
std
pushl
sub
sub
sbb
push
ja
sbb
sti
ja
lods
idivl
push
pushf
incl
jmp
mov
in
repnz
outsl
mov
xor
sahf
arpl
aad
ljmp
nop
loopne
dec
add
and
in
add
mov
xor
in
jbe
add
jnp
inc
or
insl
orl
int
cmp
ljmp
enter
sub
adc
jp
dec
scas
cld
cs
insb
popf
push
call
jg
call
inc
jl
push
stos
aam
scas
aaa
icebp
fwait
test
jo
in
nop
shrl
decl
test
push
jge
push
inc
xchg
dec
out
das
int
insl
mov
out
ljmp
jmp
pop
outsl
out
xlat
add
sub
cmp
pause
mov
xchg
popf
lds
push
mov
loop
popa
jnp
ja
icebp
out
dec
fmull
sub
ret
and
jmp
push
fsubrl
icebp
adc
idivl
push
sub
rorl
popf
xchg
out
mov
call
enter
dec
test
cmp
call
xor
loope
in
xchg
inc
insl
push
pop
xchg
gs
incl
fdivs
jecxz,pn
sbb
aaa
sbb
sub
add
pop
lret
xchg
test
mov
enter
jb
mov
jo
gs
add
fcomps
jmp
adcb
sbb
pop
stc
jns
jne
scas
xor
call
sbb
pop
repz
pushl
mov
push
fsubrl
mov
stos
rorl
test
psubsw
out
mov
subl
leave
add
adc
xor
outsl
addb
add
fcmovbe
add
add
jle
and
xor
inc
mull
push
and
incl
push
push
test
movsl
lds
dec
xchg
adc
lret
mov
push
add
test
lds
fdivrl
jle
pop
xorl
mov
add
sub
sahf
xchg
cmpsb
add
rolb
cmp
aam
dec
jecxz
arpl
mov
jnp
push
ss
cs
adc
testb
shl
call
cmp
pop
lcall
fisubrs
les
or
mulb
stos
push
call
sti
outsb
imul
mov
mov
ret
cltd
mov
cmpsb
inc
jbe
aam
cmpsb
ljmp
mov
jno
js
sub
dec
mov
out
pop
add
fidivl
aad
call
ljmp
adcl
xor
jae
divl
jg
push
mov
cmovl
in
dec
and
inc
inc
sbb
in
sbb
incl
addr16
lret
push
or
sti
mov
std
mov
jge
out
jecxz
xlat
hlt
andb
in
dec
pop
lahf
add
into
std
xor
ficoms
inc
dec
mov
sbb
aaa
mov
lcall
out
fisttpll
xchg
mov
adc
jg
sub
lahf
jle
jnp
inc
xor
push
sub
cmpsl
and
mov
pusha
loopne
pop
iret
push
dec
add
idiv
pop
cmc
jg
pop
sahf
mov
xchg
or
lods
fdiv
leave
aas
leave
pop
cmp
mov
and
insl
std
mov
mov
jne
adc
sahf
push
pop
cltd
mov
mov
push
and
inc
lcall
inc
push
popf
mov
test
dec
int
cmpsb
ret
pop
mov
and
or
call
cld
jge
into
adc
insl
dec
cli
lds
pushf
aas
and
jecxz
data16
pushl
adc
dec
dec
out
cmpsl
fwait
dec
in
ja
fists
sub
daa
cs
mov
ljmp
imul
cmpl
push
lahf
or
pushf
mov
xlat
and
iret
das
cli
ljmp
mov
adc
cmpsb
dec
out
rcrl
dec
sbb
loope
xchg
in
cld
jmp
jmp
mov
or
xchg
pop
pop
sub
adc
jae
adc
lcall
sub
outsb
or
mov
lcall
adc
shrd
lods
cmc
mov
dec
sub
add
movsb
call
push
fdecstp
cmpsl
hlt
mov
cwtl
cmp
mov
jmp
add
ljmp
add
mov
nop
ja
and
inc
dec
idivb
lods
inc
ret
mov
lcall
ds
mov
cmp
leave
cmp
sahf
sbbb
lcall
int3
xorb
pop
lods
fistl
fsubp
mov
cmpsb
adc
cmp
adc
sbb
adc
scas
movsb
subb
sarb
jne
mov
cmc
add
cmp
call
gs
xchg
dec
and
inc
aam
adc
mov
sbb
lcall
adc
js
sahf
mov
aad
ljmp
and
outsl
mov
out
fadd
cli
call
mov
test
xchg
les
pop
rolb
adc
outsb
or
lret
repz
ret
ljmp
pop
mov
call
lock
nop
pop
push
and
inc
mov
daa
mov
shl
jp
sub
sbb
mov
sub
push
inc
sbb
mov
call
mov
mov
je
dec
sbb
push
jmp
mov
iret
dec
imul
mov
or
push
ds
xor
out
xchg
dec
adc
rcrl
and
fisubrl
call
test
xor
push
test
out
lods
cmpsl
cs
int
xorb
out
sub
adc
lods
mov
fistps
fisubrl
in
ret
fdivr
sub
mov
cmpsb
icebp
sbb
mov
cld
xchg
test
aad
jp
inc
inc
push
mov
popf
movsb
xchg
movsb
call
aam
call
mov
xchg
or
mov
fidivrl
rcrl
data16
jecxz
mov
mov
decl
xchg
sub
ljmp
lcall
mov
js
mov
xchg
lock
cmp
mov
rcrb
mov
faddl
pop
lods
inc
and
sub
jmp
pop
cmpsl
and
in
push
push
cmpl
fmuls
outsb
orb
push
rcr
ss
mov
into
sub
outsl
mov
divb
mov
lock
mov
loopne
or
popf
or
jg
mov
mov
gs
cwtl
test
adc
cmp
add
mov
inc
jno
mov
outsb
xchg
pop
push
icebp
inc
or
or
mov
jmp
idiv
out
inc
lahf
adc
hlt
pop
adc
cmp
lds
test
daa
and
dec
cmp
jmp
jns
hlt
pusha
out
cmp
xchg
test
ja
cmp
jp
es
imul
es
pushl
clc
adc
cmp
loopne
add
pushl
jb
dec
adc
push
cld
dec
es
cmp
sar
jmp
push
mov
xchg
imul
scas
or
cmp
pushl
into
cmpsb
addl
mov
das
dec
stos
out
lods
mov
int3
push
jg
sub
jns
inc
xchg
ds
std
push
and
jbe
mov
subl
call
pusha
xorb
pushf
imul
push
out
push
sub
add
inc
mov
lret
dec
add
xor
mov
pop
loope
jb
pop
mov
inc
push
add
push
mov
imul
lcall
ds
push
jb
std
sub
mov
mov
or
negb
or
hlt
jae
pop
jmp
incl
push
das
movsl
jecxz
out
mov
aam
imul
arpl
outsb
mov
ljmp
std
sahf
mov
sahf
xchg
lods
or
aaa
pop
or
dec
out
call
nop
mov
cli
or
or
mov
popf
mov
cmp
or
inc
mov
fs
mov
shrl
adc
mov
mov
call
dec
pushf
cmp
aaa
inc
jge
mov
xchg
data16
cmp
dec
or
test
repz
popf
into
mov
popf
dec
imul
scas
and
dec
sbb
sub
decl
mov
jp
jne
or
aaa
add
es
and
ss
gs
call
out
mov
test
jge
xor
jge
je
inc
mov
push
push
ljmp
add
pop
shll
push
cli
ljmp
xor
mov
mov
push
xchg
mov
js
ret
test
incl
or
mov
in
imul
jnp
mov
xchg
push
mov
xchg
adc
or
pushl
push
loope
xchg
push
cltd
es
mov
sub
bnd
test
cmpb
stos
jnp
cmp
inc
push
rcrb
fstpt
mov
cmp
outsb
or
inc
ljmp
adc
shlb
push
sub
pop
mov
mov
cmpsl
push
adc
ljmp
cli
in
or
mov
dec
jns
xchg
fnstsw
mov
mov
incl
aaa
xchg
jg
inc
pusha
pop
adc
test
mov
mov
sbb
testl
pop
and
mov
dec
icebp
or
sbb
imul
scas
sbb
inc
cmp
xchg
mov
ljmp
lods
leave
inc
sub
pop
cmp
add
dec
outsb
adc
xor
inc
mov
ljmp
pop
inc
insl
pop
push
adc
jo
mov
push
insl
cmp
sub
mov
inc
aam
jns
mov
pop
stos
dec
cmp
shl
shll
add
fwait
aaa
mov
cmp
call
mov
pop
mov
int3
gs
insl
test
stos
das
pop
xor
sti
fbld
add
xchg
iret
cmpsb
push
insb
or
pop
subl
fstps
push
mov
add
cmp
stc
cli
xchg
jmp
lret
enter
inc
jns
push
xor
pop
out
das
xor
imul
pop
in
call
inc
jg
pop
data16
shll
xlat
xchg
sub
and
test
and
lcall
mov
test
ja
es
and
ret
dec
xchg
in
inc
push
ja
push
ljmp
cltd
lret
mov
out
mov
jne
adc
movsb
jp
inc
mov
cmpsl
pusha
or
jns
inc
push
sbb
pop
ss
je
ficoml
mov
pushf
mov
ljmp
sti
xchg
stos
cwtl
call
dec
or
mov
ret
negl
popf
movsb
sbb
mov
mov
pop
in
xchg
xchg
pop
sub
pop
mov
jmp
mov
mov
hlt
cmp
jns
jmp
adc
xor
pusha
adc
push
jle
inc
jg
inc
jns
lcall
xchg
incl
out
xchg
lret
mov
lcall
fsubrs
out
xorb
jae
call
popf
repnz
push
cmp
xor
dec
jbe
sbb
fidivrl
in
cmp
push
jmp
jg
mov
popa
stos
fs
insl
insb
insb
je
lcall
ljmp
lock
push
mov
or
lds
iret
pop
popa
scas
sub
je
incb
xchg
lds
call
sbb
call
and
jns
movsl
cmp
pushl
std
jmp
and
add
das
rol
xor
cmp
or
dec
stos
sar
jg
cmp
imulb
cwtl
lods
test
mov
lahf
push
shrl
jg
ja
xor
iret
sbb
mov
int
xorb
movsl
fcos
ljmp
inc
xchg
sub
xchg
scas
das
add
xor
mov
scas
clc
dec
scas
mov
add
jle
xlat
and
data16
or
xchg
push
arpl
pop
ficomps
sahf
addr16
sub
inc
scas
test
add
adc
dec
xor
notl
jo
pushl
push
addl
sub
imul
jmp
mov
jl
lcall
xchg
pop
roll
pop
sub
shl
and
inc
pop
das
inc
xor
incl
pop
lds
sbb
lock
lret
inc
data16
xchg
incl
fsubrs
popa
mov
dec
inc
jp
push
or
test
lea
decl
and
les
jmp
xchg
out
inc
in
dec
jge
test
and
mov
or
mov
adc
or
dec
lcall
pop
and
test
and
jmp
pop
and
inc
add
lcall
sbb
pop
iret
in
inc
loop
mov
in
fsubr
adc
fiaddl
mov
cmp
aaa
inc
in
lods
inc
les
popa
mov
xchg
sub
dec
test
lcall
lahf
movsb
ja
scas
pop
rorb
sbb
pop
sub
int
jecxz
lret
xor
incb
jmp
inc
jne
std
rolb
rolb
je
cmp
or
stos
popf
fcmovnu
mov
jmp
insb
push
es
pusha
inc
push
jecxz
mov
cmp
add
sbb
mov
iret
stos
mov
cli
je
xchg
inc
shll
repz
sub
push
outsl
mov
jg
popa
xor
jl
ja
fistl
mov
cwtl
xchg
jl
inc
jp
and
mov
fistpl
loope
fs
mov
and
lret
mov
adc
or
idivb
pop
jl
dec
sbb
sub
sub
scas
sbb
mov
xor
stc
test
scas
rcrl
sub
dec
fcomp
lcall
ljmp
cmp
mov
mov
pop
gs
inc
sbb
cmpsb
idiv
stc
jmp
leave
or
mov
lret
adc
insb
mov
hlt
or
push
pushl
xchg
mov
ljmp
stc
enter
or
mov
nop
call
push
loop
and
ret
mov
icebp
cld
scas
xchg
insl
jnp
mov
decb
mov
std
sar
jg
movsl
repz
cmp
test
sub
sub
insl
sub
enter
lock
jmp
rcll
sti
jnp
jg
outsl
add
sbb
inc
push
ss
ljmp
mov
and
add
loopne
popa
test
xor
mov
pushl
std
inc
repz
iret
jns
dec
jne
popa
xchg
std
dec
and
mov
mov
jmp
enter
insl
aaa
lods
lock
fst
jp
fidivs
inc
pop
out
dec
xchg
cmp
ljmp
push
lea
pop
sub
jb
pop
jg
sbb
mov
nop
xor
loope
ret
adc
daa
scas
cmp
das
clc
cld
add
lea
pop
pop
mov
ja
insl
jle
data16
mov
outsb
addr16
decl
cmp
lds
daa
std
cmp
int
sbb
add
sbb
call
inc
sbb
fmull
fistps
push
mov
movsb
cli
sbb
xchg
shrl
decl
jae
push
hlt
cmp
xchg
lahf
xlat
outsb
xor
nop
fs
mov
lret
pop
mov
cwtl
mov
scas
dec
cmpsl
lcall
adc
dec
pop
mov
mov
test
jp
sbb
lods
sarb
cld
jg
fwait
ss
sbb
cmp
scas
mov
daa
jl
pushf
push
popa
vunpcklpd
incl
sbb
pop
inc
jg
sub
lods
inc
or
aas
leave
cmp
mov
cld
mov
push
in
cmp
lock
les
repz
in
nop
pop
xor
cmp
jecxz
das
imull
jmp
fnsave
ja
inc
dec
mov
hlt
sub
pusha
and
imul
call
push
mov
sbb
aam
ds
or
movb
xor
lret
call
mov
and
insl
in
xor
test
outsl
mov
rcrl
inc
or
jb
mov
xor
ljmp
leave
jb
cltd
rorb
or
mov
test
jle
dec
sahf
int3
in
pop
andl
jg
incl
sbb
push
pusha
push
scas
adc
dec
hlt
rolb
xchg
ja
out
decl
fs
mov
adc
out
sub
jecxz
iret
mov
pop
lock
adc
fwait
rol
js
aas
xor
mov
incl
lock
sbb
movsb
and
sbb
out
or
ljmp
clc
or
mov
add
sub
test
jle
pop
mov
xlat
aam
jg
pushl
out
pop
adc
js
rorl
jno
push
loop
lret
lods
mov
jmp
ja
add
insb
push
inc
out
ljmp
sub
pop
pusha
xchg
mov
rcr
or
dec
call
and
xor
or
lock
jb
adc
sti
lcall
pusha
pusha
test
call
rolb
dec
loop
arpl
xchg
dec
mov
lock
jg
fldcw
cli
cmp
xchg
fnstsw
xchg
lods
fwait
enter
xor
fcoml
lret
test
aaa
std
scas
lcall
jecxz
sub
mov
stc
lret
decl
stos
rclb
lods
sbb
mov
sahf
mov
push
sbb
jmp
pop
lcall
jmp
popl
mulps
inc
loop
sub
dec
cmp
decl
addl
mov
sar
or
subb
cmp
xorl
mov
xchg
out
mov
lret
hlt
or
jmp
dec
clc
movsb
mov
enter
pop
icebp
loope
adc
mov
jle
jle
inc
movsl
repnz
pusha
sub
push
sbb
pop
xchg
dec
mov
loopne
push
mov
dec
cli
pop
xor
sbb
mov
jg
lcall
pushl
pop
or
ret
jmp
rolb
cmc
cmp
in
pop
add
ljmp
xor
mov
inc
enter
cltd
shlb
das
shll
je
ljmp
pop
xchg
push
incl
or
jle
sub
lds
iret
adc
cmp
fildll
sbb
xor
out
xchg
loope
jnp
and
fs
fsqrt
xchg
insb
je
mov
add
fcoml
mov
cltd
mov
sub
inc
mov
mov
or
popa
sarl
pushf
pop
outsl
lock
jo
push
mov
dec
xor
decl
pusha
cs
mov
clc
int
jp
sbb
inc
sbb
subl
xlat
add
jbe
add
mov
insl
xchg
insl
fwait
out
mov
subb
xor
dec
lcall
das
into
mov
sti
std
and
aaa
rclb
ljmp
adc
decl
mov
sub
push
add
dec
inc
fiaddl
rcrb
adc
aaa
cld
enter
je
fimull
fmull
push
jmp
lcall
lock
push
or
mov
sub
bound
xor
xor
jecxz
call
rolb
stos
mov
push
ror
loope
pop
dec
aad
lock
sahf
movsb
jnp
fisttpl
orb
inc
cli
cmp
push
or
mov
jno
or
shl
mov
std
inc
mov
scas
insl
or
decl
lret
lcall
lahf
cmpsl
loop
mov
les
pop
nop
sbb
fcomip
ljmp
or
mov
push
in
adc
adc
xchg
ret
cmp
lcall
xlat
inc
fistpl
pop
mov
jp
hlt
lds
sahf
outsl
cli
imul
mov
addb
out
lret
xchg
add
push
mov
hlt
leave
fidivrs
xor
ss
data16
mov
ficomps
test
jnp
inc
inc
mov
loope
lret
mov
pusha
mov
jb
cli
push
hlt
dec
dec
sub
jbe
cltd
add
mov
mov
mov
rcll
jg
out
insl
push
jge
adc
bts
mov
lods
aam
int3
or
lock
hlt
jmp
lcall
inc
imull
ljmp
scas
fs
inc
mov
or
xor
test
mov
jns
or
push
movsl
ljmp
pop
fs
out
lods
pop
add
adc
add
cmc
xchg
xchg
pop
daa
pop
ret
fcoms
push
movsb
enter
test
pop
cmc
sub
aad
mov
daa
mov
rcl
sub
adc
jno
pop
test
or
push
mov
push
cmp
inc
mov
ljmp
mov
dec
ljmp
rorl
push
push
scas
fidivl
xor
outsb
push
daa
fwait
stos
shll
push
cmpsl
dec
jg
dec
jmp
outsb
fs
std
ds
xchg
dec
cld
sbb
jmp
lcall
mov
add
mov
push
add
mov
sub
mov
jns
and
repz
sbb
aad
and
inc
jp
and
js
scas
mov
jbe
jle
dec
incl
lock
fisubrs
push
hlt
push
xor
jmp
mulb
out
out
stos
das
cs
fs
push
shrb
jmp
push
add
hlt
cmp
fsubp
gs
inc
pushf
xchg
xchg
icebp
pop
hlt
jmp
pop
mov
xchg
jmp
es
decl
cwtl
test
rclb
fcmovu
outsl
lods
jae
repnz
mov
in
popf
lret
fisubrl
ljmp
mov
adc
xor
aad
xlat
cltd
test
mov
mov
ljmp
mov
insl
inc
clc
dec
enter
add
pop
aam
roll
mov
pushl
data16
aam
or
notb
dec
sbb
dec
push
cmp
xor
adcl
mov
scas
xchg
cmpsl
push
stos
or
nop
loope
cld
shrl
push
rorb
add
sarl
pmaxsw
dec
mov
call
enter
cltd
imul
nop
shrl
push
fiaddl
xor
sbb
gs
adc
aad
out
add
outsb
movsl
pusha
aas
rorb
add
in
adc
ljmp
and
pop
pop
jecxz
pushf
adcl
jnp
xchg
mov
dec
in
sti
enter
test
das
or
jns
stc
push
cmp
mov
into
adc
ljmp
loop
lcall
orl
popa
mov
inc
pop
jecxz
and
out
push
jno
dec
dec
fs
mov
jl
inc
sbb
out
ja
xchg
lcall
mov
sbb
and
xor
mov
push
or
lock
ljmp
ret
lret
xor
stos
pop
enter
xchg
sar
stos
jg
dec
insl
lds
inc
ds
call
pushf
orb
ljmp
xchg
xchg
ljmp
imul
cmp
test
lcall
and
jae
mov
add
sarb
fsts
push
xor
cmp
add
push
sub
ss
popf
les
sahf
adc
sub
pop
mov
or
dec
insb
nop
shr
fcomip
call
aad
jecxz
pop
dec
push
mov
jmp
push
xchg
popa
cld
sahf
jmp
xchg
xor
rclb
sahf
movsl
inc
sahf
sub
dec
fidivrs
mov
popa
dec
ds
or
jmpw
sbb
xchg
nop
adc
jl
mov
pop
ljmp
jnp
test
int
and
stos
xor
hlt
lahf
int3
push
pusha
and
test
jmp
es
fists
pop
push
push
pop
and
insb
push
lock
add
or
call
cs
insb
fcmovb
jno
xchg
testb
push
push
aam
lcall
xorl
mov
inc
and
insb
std
subb
shl
push
push
aas
pusha
in
mov
ud0
dec
scas
movsb
outsb
mov
cmpsl
dec
or
notb
cli
mov
sub
insl
fs
adc
mov
mov
sub
dec
enter
lods
and
and
jl
jecxz
fildll
cmpsl
pop
pop
dec
add
gs
test
dec
or
mov
adc
ja
jge
pushl
mov
js
adc
imul
add
fwait
push
out
aad
int
xchg
loope
ljmp
jmp
sbb
and
cmp
xor
push
sarb
add
bnd
das
sbb
jge
sub
lahf
add
decl
mov
adc
not
mov
cmpsb
loop
bound
mov
fistpll
inc
or
push
jmp
pop
rcrb
jle
pop
imul
lods
test
xchg
mov
fidivrl
mov
test
mov
push
jae
es
shlb
xchg
outsb
lds
push
shlb
movsl
cmpsl
js
add
add
inc
incl
out
loop
xchg
out
push
js
repz
nop
xchg
in
loop
inc
ffree
pop
jno
ljmp
imul
aas
cmp
test
dec
add
mov
sub
xor
jle
decl
cmpb
and
shl
dec
jmp
popf
loope
xor
sbb
inc
jl
add
rcrl
imul
dec
dec
sub
es
and
adc
scas
or
cmp
decl
lds
imul
stos
out
stc
pop
nop
sar
pusha
mov
pop
imul
add
les
mov
mov
pop
loopne
pop
jb
xor
pop
add
les
fsts
mov
adc
hlt
dec
enter
adc
ds
scas
fsubrs
shl
in
gs
clc
cmp
ret
sub
cmc
popf
add
mov
jmp
das
mov
xor
int3
das
sub
rorl
adc
call
mov
xor
faddl
cld
loop
adc
loopne
test
vorps
lcall
mov
addr16
shlb
push
push
mov
call
cs
lret
lret
out
cmp
ja
jnp
mov
xchg
dec
dec
sbb
out
push
in
xorl
cli
mov
ss
dec
inc
movsb
pop
sub
inc
ja
add
leave
jne
gs
pop
adc
shr
lret
xor
push
lcall
sub
fwait
push
test
or
pushf
pop
addl
xor
call
loop
loopne
mov
insb
sbb
mov
mov
shll
pusha
pop
in
ljmp
sub
stos
inc
data16
decl
scas
mov
ja
mov
xchg
test
es
cld
stc
incl
pusha
gs
pop
push
pop
fs
scas
ret
clc
ret
sbb
mov
and
mov
cwtl
into
imul
or
data16
jne
add
incl
push
mov
arpl
and
xchg
shr
mov
shl
inc
xchg
hlt
jl
sub
sub
sbb
ljmp
scas
adc
jb
and
cmc
lods
sti
cmc
push
mov
fsubs
sub
add
jg
pushl
scas
dec
jmp
cmpsl
sub
mov
mov
inc
mov
mov
add
xor
jg
je
and
pop
lods
sub
jmp
insb
loope
cwtl
rcll
data16
mov
xchg
mov
fwait
loopne
jne
test
dec
aaa
cld
pushl
test
lret
mov
lock
or
in
hlt
sub
sti
sub
aaa
jb
daa
push
pop
jns
sbb
sbb
adc
dec
add
movsb
nop
addb
jg
movsl
mov
cltd
in
inc
pusha
repz
sbb
sahf
stc
repz
filds
test
int3
push
mov
popf
mov
clc
js
mov
cmp
movsb
sub
loop
mov
inc
and
dec
push
fcoml
cltd
pop
aad
lcall
aaa
cmpsb
es
pop
lret
aas
loop
jl
sub
pop
and
incl
jns
jge
dec
mov
xchg
ds
push
test
ds
jge
push
pop
pop
ljmp
mov
repz
jb
and
pop
jo
call
sub
mov
out
xor
sbb
stc
adc
pop
test
stc
in
jno
je
test
mov
inc
mov
cmp
dec
xor
add
sahf
mov
shlb
xchg
lcall
jle
push
and
sbb
ja
dec
mov
pusha
std
pop
lcall
push
imul
in
cmpsl
mov
dec
loop
mov
vcvtsi2sdl
dec
jge
cmp
in
and
jns
bound
push
xchg
imul
shrl
ror
cs
int3
and
mov
pushl
mov
imul
push
fcomip
or
push
inc
sarb
in
sub
inc
or
inc
ljmp
mov
push
mov
xchg
and
aaa
nop
jmp
xchg
jns
mov
addb
inc
cmp
mov
ss
mov
cmp
and
iret
xor
insl
sbb
add
push
xor
decl
xor
sub
cmp
fwait
loope
in
dec
test
lods
jecxz
movsb
mov
incl
clc
out
mov
je
push
inc
addb
adc
pop
add
insl
jbe
jnp
jae
adc
shrb
bound
inc
cs
pop
adc
push
mov
sub
cld
enter
decl
icebp
in
push
out
arpl
int
aas
sbb
cmp
aad
insl
rorl
lcall
imull
popf
jmp
stos
lods
pop
iret
lds
push
mov
aaa
rol
test
adc
inc
add
mov
sbb
pusha
mov
or
incl
push
ljmp
and
std
mov
lea
jg
mov
push
sbb
sbb
icebp
xor
ljmp
inc
pop
mov
popa
pop
jle
inc
mov
out
pop
ja
lahf
inc
jb
push
in
and
jbe
lds
add
push
out
mov
test
mov
icebp
pop
mov
jge
jmp
cmpsb
sti
cmp
cld
inc
jp
jmp
test
in
xchg
sti
movsb
sub
xchg
cwtl
cmp
sub
pushl
push
cli
jp
sar
or
xchg
ret
iret
and
xlat
sbb
insb
inc
ror
in
cmc
lcall
pop
or
mov
add
decl
sarl
inc
or
push
hlt
cwtl
std
js
xchg
pop
mov
mov
mov
xchg
pop
decl
xchg
mov
jg
push
sub
lea
xor
dec
jmp
loopne
lock
call
xor
mov
sbbl
sbb
movsl
inc
sub
add
imul
div
repnz
cmp
sub
inc
outsb
pop
aas
pop
xchg
xchg
shl
xchg
callw
pop
add
bound
mov
in
push
xchg
mov
shll
popf
xchg
xor
dec
inc
aam
add
in
incl
xchg
mov
enter
mov
fsubr
add
or
cmp
dec
or
xor
lcall
inc
orl
mov
das
rolb
in
idivl
aad
and
in
scas
jg
flds
scas
fistpll
cmp
lcall
fsts
jp
ljmp
mov
sti
daa
mov
mov
mov
dec
iret
enter
ljmp
push
sti
call
mov
xor
into
lock
sub
ret
cmc
cwtl
xchg
addr16
cmp
push
aas
xorb
mov
icebp
jbe
jmp
fnstenv
decl
push
push
jp
int
aas
mov
daa
aas
cmp
popf
push
adc
pusha
ljmp
sub
adc
icebp
lock
push
cmp
inc
inc
and
mov
decl
jg
adc
frstor
mov
mov
std
push
push
in
dec
add
imul
lcall
jns
daa
inc
fstl
enter
sbb
sbb
push
lods
pusha
cmc
clc
decl
or
jge
mov
mov
rcr
xor
pusha
ficoms
cli
xchg
add
test
out
mov
pop
adc
dec
and
sub
and
ss
js
incl
add
sti
and
sti
xchg
fwait
mov
fisttpll
inc
sub
dec
adc
pop
inc
pop
aam
imul
or
push
fstl
cmp
sbb
es
frstor
inc
lret
inc
test
decl
test
add
rol
out
and
mov
inc
pop
frstor
sar
lcall
sti
fs
clc
cmp
fstpl
inc
test
push
or
call
jg
insl
pop
xlat
mov
sarl
cmc
and
jae
or
shr
adc
sar
incl
mov
xor
addb
fs
sub
fistpl
ret
inc
lds
clc
ss
mov
mov
mov
dec
inc
jecxz
pop
xchg
push
gs
or
in
ljmp
adc
push
mov
rcrl
test
add
mov
adc
cmp
and
mov
stc
sub
test
pop
testl
test
or
push
daa
fsubrs
inc
lea
add
sub
ljmp
jl
fbstp
and
pushf
out
mov
jl
std
mov
lds
pusha
and
sbb
jge
push
mov
push
push
es
sub
gs
insb
push
test
jp
jg
xchg
pop
shrl
ja
fs
inc
jae
sti
mov
push
in
and
call
push
pop
and
sub
cwtl
daa
lock
loop
dec
js
mov
or
pushf
jno
hlt
inc
ljmp
clc
js
loopne
pop
clc
mov
jg
mov
aam
pop
adc
ss
addr16
cmpsl
sbb
out
jl
test
das
js
lods
call
cmp
push
bound
cmc
lcall
aad
shlb
push
inc
cmpsl
inc
mov
mov
jle
fbld
or
push
gs
imul
fistpl
sar
mov
xchg
xor
or
sub
mov
push
cltd
jl
add
push
or
cltd
inc
adc
mov
int3
imull
jne
mov
mov
cltd
mov
lret
ret
test
roll
leave
mov
inc
xchg
popf
or
icebp
xchg
stc
sbb
add
cmpsb
cmp
lds
mov
ljmp
jns
dec
mov
cmp
add
imul
cwtl
inc
imul
ljmp
cmpsb
stos
push
or
xchg
in
insl
aam
int
and
cmp
fdivs
mov
mov
mov
lret
and
push
fidivl
jle
mov
jmp
sahf
or
in
jae
mov
test
sbb
mov
lock
es
gs
test
push
jp
pop
cmp
in
je
jb
mov
and
test
test
and
sbb
decl
xor
pop
adc
scas
add
testl
push
mov
shr
lcall
jmp
test
imul
inc
lahf
test
or
inc
mov
mov
mov
js
fldenv
popa
pushf
mov
inc
sbb
icebp
xchg
ficomps
or
push
cmpsb
add
mov
ss
jg
test
test
sub
push
fistpll
in
xchg
push
aad
incl
jbe
dec
mov
pop
mov
shll
fistps
lds
xchg
adc
lahf
outsl
inc
jg
or
cmp
pop
js
loop
stos
mov
inc
hlt
cmp
call
std
jno
pop
mov
adc
and
aam
mov
jo
mov
aad
jbe
inc
sub
popl
jg
cmp
jmp
xchg
ror
pop
mov
sub
cs
sub
mov
jns
push
cmp
dec
ds
inc
or
adcl
mov
fiaddl
lea
sbb
jmp
test
leave
daa
scas
addb
in
push
add
ljmp
mov
lea
shr
or
mov
mov
idivl
ljmp
jmp
jmp
stos
add
js
inc
xor
notb
in
mov
lret
cmp
jmp
lret
adc
mov
and
push
sub
iret
xchg
mov
lcall
aam
dec
sub
xchg
and
xor
jae
lods
jl
faddl
and
jg
fs
sub
jp
mov
jmp
pop
mov
add
clc
test
dec
cmpsb
faddl
lret
inc
and
je
popf
shlb
std
sbb
enter
mov
mov
jmp
dec
movsb
dec
aaa
aas
mov
cmp
add
hlt
clc
jmp
inc
xchg
inc
adc
pushl
dec
cmp
in
sbb
out
jmp
sbb
fs
dec
les
pushf
sbb
rolb
push
scas
push
sbb
dec
inc
pushl
sub
ds
pusha
sub
rolb
add
mov
imull
mov
inc
in
leave
sub
xchg
sbb
xchg
cmp
mov
pushl
inc
imul
pop
subl
pop
and
push
mov
cmpsl
test
clc
mov
das
adc
fadds
stos
call
jae
sub
pushf
mov
frstor
aam
sub
mov
mov
jne
ljmp
mov
int
pusha
popf
mov
adc
sbb
pop
mov
mov
push
pop
jb
mov
push
cmpl
cmp
pushl
js
xor
cmp
xor
fbld
rolb
fidivrl
cmp
repz
das
push
popf
sbb
adc
imul
loop
insb
add
mov
stos
addb
es
mov
push
push
sub
jl
and
popa
adc
xor
mov
xchg
lock
rorl
fcomip
add
out
sbb
in
dec
mov
cs
rcl
jmp
sbb
in
dec
sbb
mov
xor
xor
repz
das
sarl
in
mov
jmp
and
cld
xor
sarb
xchg
dec
lahf
lret
mov
pop
incl
cmp
pop
cltd
push
xchg
xor
fisubs
or
jp
push
scas
push
call
mov
in
jne
add
dec
icebp
fildl
cmp
hlt
pushl
push
sbb
mov
inc
dec
rolb
jno
nop
ljmp
sub
cli
fistpl
xchg
popf
add
jmp
inc
lods
mov
add
in
lock
scas
test
inc
and
mov
mov
shll
cmpsb
imul
cmp
mov
decl
fnstenv
cmp
out
mov
gs
js
push
and
clc
sbbb
add
icebp
jne
test
mov
daa
int
test
aam
mov
dec
mov
lcall
lret
jl
or
int3
daa
sbb
movsl
je
and
imul
shl
daa
subps
or
out
ficompl
test
in
lahf
cmp
jg
xor
hlt
fidivs
outsb
jge
xchg
cmc
xchg
sbb
or
xor
sub
dec
mov
xchg
add
xor
fidivrs
jno
insb
test
in
stc
jae
aaa
fmul
mov
pop
call
std
std
and
insl
and
inc
jns
test
gs
adc
popf
sbb
sbb
fldenv
pop
insb
pop
arpl
pop
lret
out
mov
adc
aad
fdivl
out
insb
stos
fprem
jmp
or
cld
jl
insb
dec
test
push
jbe
pop
jecxz
fisubrl
add
or
cs
push
mov
jmp
mov
mov
fsts
xor
jbe
idivl
js
es
test
mov
xchg
sbb
aad
stc
inc
jae
push
pop
loope
int3
inc
ret
xchg
fnsave
pop
sub
mov
stos
loopne
or
xchg
mov
mov
xor
add
lods
inc
jb
scas
test
ret
pushl
mov
or
lret
sbb
lahf
xor
pop
in
jg
and
int
xchg
xor
mov
repnz
ret
jge
lods
loopne
dec
xor
in
decl
int3
or
fmuls
clc
iret
and
adc
pop
out
xchg
lock
pop
imul
cmc
lret
add
jmp
mov
adc
jp
rorb
mov
xchg
sub
clc
pop
ss
cmp
fcoml
cmp
arpl
pushf
mov
ds
es
jp
and
or
lcall
mov
and
out
out
ljmp
in
in
stos
and
lahf
add
cmp
xchg
push
sbb
scas
mov
dec
add
and
insl
adc
ja
loop
loope
fldenv
pop
and
movsl
nop
lock
pop
xchg
inc
jl
fmul
sarb
sub
and
xchg
dec
mov
call
cld
mov
lods
cltd
mov
push
stos
jnp
sbb
les
add
lock
ret
sti
cmp
dec
push
pushl
incl
shlb
xor
xchg
fidivrs
inc
fisttps
and
decl
cmc
idiv
paddsb
addr16
adc
icebp
pop
std
mov
mov
xlat
cmp
call
js
xor
adc
dec
test
gs
xor
push
jno
stc
dec
or
add
repnz
das
arpl
push
fistps
clc
cmp
leave
clc
ret
xchg
lret
fbld
mov
jb
call
cwtl
aas
scas
lds
icebp
add
mov
inc
pop
cmp
cmp
xchg
fcmovnbe
cmc
out
outsb
je
arpl
mov
out
mov
sub
jae
ljmp
mov
nop
lret
arpl
add
orb
aaa
cltd
mov
mov
sbb
test
std
pushl
aaa
in
mov
cs
loop
les
data16
outsl
dec
stos
cltd
stos
xor
decl
xor
xchg
lret
inc
loope
insl
jle
mov
jno
mov
idivb
je
test
incl
and
enter
sub
push
cli
add
jb
insb
cli
xchg
pop
test
pop
das
jle
mov
xchg
adc
sbb
add
scas
xor
push
and
ljmp
push
sahf
je
sub
dec
dec
jge
cvttps2pi
bound
shll
call
jl
insl
in
dec
jg
inc
xchg
fs
push
scas
stc
addr16
mov
decl
inc
lock
nop
inc
orl
call
xchg
inc
xor
cli
decl
and
cmpsb
and
inc
aam
sbb
and
loop
inc
dec
fldz
sub
lcall
jmp
cmp
mov
shlb
lahf
xor
jo
pop
out
filds
das
cmp
sar
imul
add
mov
mov
cwtl
jno
aaa
outsl
lcall
in
loope
pop
mov
cmpsb
aad
shrl
incl
jecxz
ds
sahf
pop
or
decl
stos
cmc
pop
out
rcrl
cmpsl
sub
sub
xorl
jmp
test
dec
lods
mov
sub
repnz
push
test
insb
adc
pushl
pop
mov
rolb
adc
outsl
mov
imul
jno
push
cmp
mov
fcoms
ljmp
ljmp
sti
repnz
outsb
xor
sbb
xor
faddl
outsl
mov
outsl
xchg
lock
and
hlt
mov
or
cmp
xchg
in
rorl
or
shrl
es
or
scas
cltd
imul
mov
sahf
xchg
pop
testl
in
ds
repnz
dec
fldenv
fists
mov
push
xchg
and
lahf
pushf
inc
sub
leave
sti
mov
scas
setle
lcall
jmp
mov
mov
jnp
ss
xchg
aaa
cld
fstpt
xchg
js
mov
mov
cmp
lods
xchg
mov
ud0
mov
jp
je
dec
mov
xchg
pop
sub
push
jae
inc
mov
stc
sbb
fdivr
push
xor
call
lock
or
mov
mov
jns
jp
test
repnz
or
dec
outsb
loope
dec
sub
dec
mov
insb
sar
lcall
cmp
mov
imul
jae
cmp
mov
ljmp
jge
repz
std
ljmp
rcll
std
imul
lods
push
mov
mov
call
aam
add
data16
dec
mov
jg
std
or
xchg
push
arpl
push
outsb
mov
mov
lock
call
and
push
int
insl
hlt
adc
inc
sbb
push
push
fimull
daa
js
fcos
ljmp
jmp
lods
sahf
xchg
mov
aam
test
rolb
pusha
jge
scas
inc
add
call
iret
pop
adc
inc
fwait
pushf
das
rcll
jl
pop
xor
call
lahf
mov
mov
xchg
movsl
pop
pop
fdivrl
popa
jno
and
incl
sub
mov
aaa
sarb
aam
lahf
insl
fcmovnu
jecxz
in
sbb
or
lcall
pusha
nop
int
stos
adc
aam
fmulp
cmc
lret
push
mov
mov
andb
pop
shll
das
pop
xor
decl
mov
dec
jmp
lea
dec
push
or
insl
mov
jbe
jmp
orb
mov
decl
lock
gs
ds
jg
insl
cld
mov
dec
mov
in
lods
ret
jae
push
scas
mov
pushl
and
pusha
jae
pop
mov
pushl
adc
leave
mov
xchg
sahf
mov
arpl
pop
insb
xchg
stc
or
cld
lods
and
sub
and
loop
jge
cmp
fwait
sub
jp
mov
mov
mov
aas
test
pop
pop
insl
loop
mov
xchg
out
scas
mov
stos
jo
movsl
cmp
clc
cmc
repz
jb
mov
in
andl
fistpl
cmpsb
push
int3
and
incl
arpl
fstpt
mov
ret
repz
ret
fnstenv
fists
pusha
push
divl
mov
scas
test
mov
cmp
ljmp
dec
push
add
mov
sar
scas
and
data16
fcomip
call
call
mov
cmp
sub
sbb
ds
inc
test
rcr
jno
mov
outsl
jle
scas
pusha
mov
icebp
push
cmc
mov
incl
arpl
std
popa
xor
or
mov
and
adc
fmul
mov
jne
mov
repz
xchg
or
je
xor
pushl
pusha
aad
jae
dec
leave
pmaddwd
sub
enter
aas
pop
filds
pop
mov
cmp
test
test
lods
push
lods
push
std
xor
subb
jg
mov
dec
xor
sbb
imul
pusha
outsl
and
shlb
mov
decl
nop
mov
inc
xchg
inc
mov
jns
or
inc
enter
call
mov
jb
in
testl
loope
pop
movsl
xlat
incl
inc
sar
mov
sub
mov
js
dec
xor
mov
inc
js
aas
sahf
mov
notb
dec
push
call
out
push
adc
rorl
add
andb
fnsave
mov
jge
adc
ljmp
cmp
fildll
lods
mov
add
jmp
mov
icebp
mov
fsubrs
adc
stos
outsb
mov
add
daa
jecxz
test
out
clc
jg
lahf
wrmsr
sub
lcall
mov
clc
sub
clc
incl
test
cmpsl
jle
sub
and
shll
add
repnz
iret
mov
aas
iret
xchg
add
scas
fsubrl
mov
sbbl
jg
and
sub
ror
in
dec
addb
into
stos
xchg
mov
cmc
enter
fcompl
or
xchg
xchg
je
push
dec
fstp
mov
mov
nop
mov
shll
shl
push
call
mov
int
fcoms
jnp
lods
jmp
incl
sub
push
shlb
aam
clc
jle
movb
xor
xchg
lret
mov
and
divl
cli
pop
sbb
mov
cmp
imull
jle
lcall
dec
out
xchg
mov
add
sub
leave
xor
les
fidivs
and
aad
adc
ret
jp
fwait
jo
fisubrl
in
aam
jb
jp
xchg
dec
sbbl
mov
ret
pusha
push
aaa
hlt
ljmp
mov
fsubrp
mov
js
mov
xchg
jno
fldl
xchg
lcall
pop
push
push
jl
push
lds
fisubrl
sahf
add
leave
cmp
xchg
cli
and
or
mov
int3
fcoms
fstps
out
sub
inc
clc
jge
mov
decl
xchg
jge
push
int
cwtl
mov
aam
andb
or
mov
and
loope
repnz
jg
lea
imul
and
cmpsb
ds
fdivl
push
data16
cmp
out
push
or
fisubrl
test
ss
subl
push
outsl
cli
lcall
fldenv
or
orl
movsl
testb
mov
dec
sub
jnp
mov
add
and
jmp
jg
xlat
sahf
sub
inc
inc
push
sub
out
xor
mov
ficoms
rcrb
mov
out
xor
mov
inc
mov
hlt
sbb
ficoml
lgs
push
lock
fmuls
lahf
xchg
jg
jl
out
xor
cs
jo
fucomi
xor
pop
flds
mov
add
pop
dec
push
das
idivb
xor
popa
ljmp
and
int3
jae
mov
cmp
mull
std
push
sub
loopne
std
cmpsb
pusha
adc
fldenv
enter
jp
dec
icebp
xchg
lock
lcall
mov
pop
mov
inc
std
rorb
sbb
sub
iret
popa
push
ja
and
cmpsl
cmp
jp
in
dec
sbb
jg
xlat
mov
pop
cmp
test
cmpsl
pop
pop
mov
out
in
sbb
push
mov
pop
mov
push
xorb
lock
incl
mov
or
mov
imul
mov
insl
nop
mov
test
and
imul
lret
sub
cmpsl
in
add
pusha
add
fdivl
pop
mov
cmp
fmul
rcll
cli
aad
cld
pop
push
lds
push
add
aad
aas
sarl
into
add
cmp
outsb
cmpsl
les
popf
je
add
mov
in
addb
add
pop
mov
xchg
dec
out
movsl
pop
add
lea
adc
cmp
or
or
cmpsb
and
cmp
incl
or
jo
jns
stc
test
shlb
mov
fcoml
cli
cs
add
jmp
cld
lcall
dec
mov
outsl
xlat
out
sti
mov
in
jmp
dec
inc
aam
or
mov
es
cltd
or
rolb
dec
mov
decl
adc
stos
pop
addr16
das
xchg
sbb
iret
pop
jbe
mov
dec
int3
xor
popf
js
ljmp
sar
fwait
lahf
imul
jg
test
retw
and
pop
adc
cmp
clc
daa
mov
jg
cwtl
stc
jmp
idivb
cmp
stos
dec
call
cmp
pushl
movl
jle
adc
insl
sahf
sar
add
ror
adc
cli
sbb
mov
pop
mov
negl
les
lock
jmp
in
in
es
fsubs
lods
dec
outsl
pop
dec
les
mov
pop
loopne
jnp
jp
push
mov
mov
push
mov
jecxz
push
aam
ljmp
cltd
shlb
daa
pop
mov
in
mov
es
shll
push
mov
incl
lahf
aam
inc
sub
loop
xchg
ret
subl
leave
inc
out
cli
mov
xchg
sbb
and
andl
decl
sti
xchg
in
mov
je
pop
mov
subb
mov
or
dec
or
xchg
test
arpl
adc
mov
add
cmp
enter
ljmp
mov
ljmp
lret
es
fadd
and
xrelease
mov
dec
cld
rcrl
jmp
ja
mov
mov
lcall
jg
stos
mov
outsl
sbb
ljmp
jo
pop
in
dec
pop
dec
add
xchg
stos
pop
lock
subb
in
lods
sub
xor
ljmp
insl
addr16
dec
aas
inc
int3
mov
and
and
jg
mov
mov
insb
pushl
mov
sbb
aam
ret
das
mov
fdivrp
jo
sub
dec
cmp
test
xlat
add
sbb
jb
aam
mov
rcll
jg
xchg
jmp
imul
dec
and
insb
ret
leave
push
rclb
jmp
out
mov
push
lods
xchg
mov
cli
or
push
mov
cmpl
outsb
and
mov
sbb
mov
pop
fiaddl
jmp
jl
jae
sbb
or
std
xchg
inc
mov
jnp
cmc
gs
pushl
cld
mov
outsb
shrb
fcoms
stos
push
cmpsl
and
dec
or
push
into
sti
insb
mov
decl
pushf
in
add
clc
test
repnz
and
sbb
ja
js
add
mov
loop
push
stc
inc
or
pop
jp
ljmp
aad
and
xchg
xor
arpl
dec
jp
mov
je
lcall
in
pop
jo
pop
sbb
sub
dec
push
cld
mov
jmp
jmp
movsb
add
adc
cld
loope
call
pop
sub
out
jl
sub
imul
xchg
popf
adc
push
push
daa
xchg
pusha
adc
mov
test
stos
je
jns
push
lock
lea
enter
ljmp
dec
add
test
and
dec
adc
mov
shr
loope
mov
push
inc
push
jmp
inc
clc
and
xchg
push
sbb
push
push
in
cmp
clc
call
int
rcll
xor
sbb
cmpsb
rcrb
adc
push
pop
cld
lcall
scas
dec
pop
and
xor
cmpsb
inc
inc
add
sarb
fs
addr16
outsl
clc
add
push
ret
jmp
andl
jns
inc
xchg
icebp
pusha
scas
fcomip
xor
imul
in
loopne
and
and
or
push
and
add
pushl
sub
or
jo
sub
fucomp
push
xchg
inc
sbb
push
jg
aam
fcoms
loope
loopne
cmp
push
imul
xchg
loop
pop
loopne
cmp
jmp
cmp
cmpsb
cmp
pop
adc
or
or
push
xlat
decl
sar
jnp
or
test
mov
aaa
pop
pushf
mov
addl
call
movsl
int
icebp
pop
dec
xchg
adc
pop
adc
push
lock
cmpl
jno
inc
fmul
cltd
test
aad
add
inc
cltd
shlb
jno
or
cmp
jmp
in
cmp
imul
sahf
xor
xor
lcall
inc
mov
ds
lods
jo
scas
xchg
lods
cmp
incl
cld
les
jo
fdivrl
xchg
repnz
sbb
int3
add
xor
mov
cld
into
lea
mov
aaa
loopne
lods
sbb
sbb
inc
ds
pusha
or
jns
sbb
movsl
fs
das
sbb
adc
jl
mov
loopne
push
xor
int3
and
pop
test
pushl
xor
jnp
pop
dec
inc
lcall
fistpll
insb
adc
rolb
cmp
bound
push
cli
mov
iret
mov
in
pushl
dec
mov
scas
mov
hlt
sarb
aas
sbb
aad
je
int
sub
inc
cld
decl
in
mov
int3
in
mov
movq
cmpsl
xchg
cmp
or
mov
jmp
sarl
or
push
and
cmp
fbld
inc
xor
sbb
test
pop
push
xor
jbe
sahf
add
sub
std
fists
pushl
hlt
mov
ret
xor
jbe
jnp
incl
mov
adc
das
sar
insl
xchg
inc
jo
testb
xor
add
imul
push
call
call
jne
out
out
fdivrl
dec
dec
sub
aaa
pushf
cmp
xor
adc
fbstp
pop
stc
pop
icebp
into
orl
scas
dec
sbb
jge
jg
stos
mov
sub
add
lock
ljmp
adc
xor
ljmp
sar
bound
sub
pop
jb
addl
mov
add
sub
lcall
jmp
push
xor
mov
ret
mov
add
jg
push
fwait
pop
lahf
inc
pop
cmpsl
shlb
test
dec
in
decl
movsl
cmp
cmp
icebp
jl
push
fildll
dec
dec
jmp
mov
ljmp
dec
mov
test
test
shll
pop
dec
ljmp
sub
incl
popf
inc
ret
shl
pop
fisubs
push
ficoms
sub
mov
mov
xchg
cmp
repz
xchg
pop
lahf
outsl
mov
push
sub
call
jge
sbb
inc
out
sub
push
fcmovnb
cli
iret
int3
repnz
addr16
xor
sbb
fwait
mov
dec
mov
pop
sti
sub
iret
shll
pusha
ljmp
pushl
dec
mov
pushf
sub
mov
popa
dec
push
jmp
inc
jecxz
mov
cmc
add
jl
fimuls
jmp
mov
leave
sub
jge
adc
mov
mov
cmp
ljmp
in
vmread
ljmp
xchg
cmpsb
sbb
jg
cltd
xlat
lds
imul
and
rcr
dec
pusha
jno
mov
outsl
mov
jmp
decl
icebp
lock
xor
xor
mov
ret
loopne
xchg
mov
inc
lret
popa
mov
aas
fs
jg
and
adc
fldenv
cmp
sub
decl
and
push
lods
jo
pop
cltd
stc
dec
cmp
hlt
aam
pop
stos
cltd
cli
and
and
pop
jmp
push
movl
xchg
inc
add
xchg
stc
imul
push
stos
sbb
pop
in
fcmovbe
rorl
jne
dec
cltd
mov
lods
xchg
xchg
fwait
jbe
ljmp
aaa
mov
cmpsl
imul
and
outsb
jb
inc
sbbb
das
std
inc
pop
decl
loop
push
pop
inc
or
mov
xchg
sbb
addr16
dec
dec
push
cmp
dec
fadds
dec
in
cmp
cmp
mov
and
test
mov
movsl
hlt
xor
mov
jb
jg
fdivs
xchg
lods
cmp
add
ss
mov
or
jno
xor
pop
and
fistps
xchg
jp
imul
decl
sbb
pushf
fimuls
ljmp
cwtl
jmp
lods
enter
jecxz
mov
and
fsubrl
inc
aaa
test
and
xor
mov
imul
decl
cmpsl
clc
dec
dec
jns
or
inc
sbb
loope
mov
orl
incl
push
mov
dec
sbb
xchg
cwtl
xchg
stc
or
push
add
dec
sub
call
adc
stc
icebp
sub
mov
jno
pushw
aaa
mov
push
sahf
mull
cmp
adc
jne
xor
dec
stc
xchg
mov
and
dec
addr16
pop
sbb
je
ljmp
xorb
ja
jle
xor
sub
jg
das
cli
push
jmp
fiadds
aaa
sub
jmp
sub
pop
or
incl
js
cmp
and
add
popf
or
xchg
mov
add
incl
ljmp
dec
into
push
push
or
jg
mov
cli
push
test
xlat
fnstenv
cs
scas
mov
xchg
jg
pop
lock
jmp
test
pop
sub
mov
loop
loopne
jmp
dec
lock
xor
adc
jmp
push
adc
ljmp
nop
insb
pop
testb
in
sbb
push
push
mov
fildll
pop
pop
insl
ja
js
cmp
cmp
in
outsb
es
lods
cmp
dec
inc
or
jmp
push
jnp
mov
and
mov
jg
adc
outsl
cmc
xor
pushl
mov
in
fnstenv
hlt
push
movsl
jp
enter
in
popa
inc
enter
loop
mov
cwtl
xchg
fcmovnbe
lret
mov
mov
and
js
sahf
ljmp
pop
jnp
push
testl
scas
sbb
js
push
mov
jo
cmpsl
sti
test
push
lock
xor
add
and
pop
sub
mov
or
jmp
inc
scas
outsl
mov
adc
dec
test
adcl
jnp
iret
jo
pushl
lds
sbb
xchg
in
pop
fldcw
dec
dec
jnp
inc
std
test
xlat
aam
mov
pushl
pop
movsb
xchg
cmc
mov
cmp
lock
in
mov
push
add
add
sub
add
in
jg
lcall
dec
lods
sbb
insb
in
shll
add
pop
and
add
incl
xchg
inc
mov
mov
stc
sub
int
mov
movsb
outsl
add
in
xchg
cmp
fcomip
pop
frstor
push
pop
xor
xor
shll
push
insb
mov
jmp
std
ljmp
stc
lahf
xchg
in
cli
fcoml
dec
mov
mov
cmp
incl
jae
loope
filds
stos
push
lret
sub
xor
adc
out
inc
and
ljmp
xchg
repnz
pop
push
push
cltd
cmpsb
adc
leave
outsb
pop
inc
xor
cld
inc
pop
xchg
pop
add
pop
jle
pop
sbb
lcall
inc
enter
jnp
in
out
mov
pushl
inc
push
hlt
insb
jle
cmpsl
insb
into
jecxz
push
cwtl
sub
jns
popf
add
xor
pop
int
hlt
lcall
cmc
jae
mov
clc
mov
sub
in
aas
or
mov
ret
inc
push
call
popl
fistpl
fldl
movsl
fstpt
cwtl
jge
incl
and
test
ret
aas
sub
int3
bound
mov
mov
std
decl
sub
push
es
jg
mov
lods
add
fildll
dec
xchg
sbb
dec
add
imul
insb
out
mov
je
and
cmp
mov
sub
sbb
cmp
jmp
dec
sbb
push
imul
fwait
lret
out
xchg
xchg
mov
pop
jmp
mov
sub
adc
addr16
aam
enter
shrb
cwtl
sbb
enter
pushl
push
fwait
test
push
sbb
mov
scas
loopne
jb
push
or
add
call
xchg
sahf
sub
sub
adc
les
rclb
test
mull
push
adc
sub
in
in
scas
mov
in
push
cmp
sub
fisttps
or
sub
popf
test
and
inc
leave
popa
int
imul
mov
mov
jecxz
aam
int
xchg
mov
js
aam
les
adc
popf
dec
cmp
xor
pop
inc
in
call
inc
push
dec
xchg
cli
pushl
jg
sbb
sbb
pusha
add
mov
loopne
inc
ret
ljmp
das
and
sbb
mov
outsl
clc
push
out
fldt
das
mov
call
mov
nop
lret
xlat
xor
je
mov
test
and
push
or
xor
sub
ja
cmp
push
in
xchg
mov
mov
push
lods
pushl
cld
push
cmp
mov
pop
repnz
jecxz
stos
sti
stc
imull
cmpb
les
mov
ja
jge
sub
cmc
sub
cmp
das
mov
cmp
mov
jge
add
loop
push
mov
dec
repnz
sahf
xchg
sbb
add
push
repz
jnp
mov
js
mov
rcr
xor
pop
out
jmp
xchg
mov
es
and
inc
iret
cmp
pop
mov
ss
push
mov
lcall
imul
xchg
dec
test
cmp
fildll
shll
out
mov
sbb
cmc
aad
add
test
scas
rcr
xor
xchg
ja
lock
mov
pop
pushf
lock
push
mov
cld
cmpsl
into
enter
jl
xor
imul
les
push
movsl
add
xor
or
shlb
into
fldcw
aad
ljmp
clc
out
mov
mov
mov
test
xor
leave
je
scas
push
jecxz
push
adc
pop
cld
jg
test
adc
jge
mov
adc
call
test
cmpsb
mov
bound
bound
test
ljmp
std
push
out
xchg
les
push
faddl
call
aaa
fisubs
jmp
jb
out
xchg
bound
insb
sti
pop
or
inc
mov
test
in
dec
pop
sub
outsb
idiv
call
xchg
add
pop
jae
fsubp
mov
aam
jg
add
sti
inc
test
lds
pop
lock
pop
mov
scas
jb
add
das
cmp
xor
nop
outsb
mov
movsl
imul
adc
mov
call
add
movsb
dec
xchg
sar
pop
hlt
js
or
mov
aas
incl
rcl
repnz
adc
mov
inc
lea
stos
test
pusha
cld
cmp
ss
add
data16
jg
dec
sti
pusha
lret
and
push
mov
lods
sub
sti
gs
call
jg
test
lret
cwtl
mov
xchg
shlb
add
xor
jo
enter
dec
cli
mov
push
fcomip
call
es
sbb
addr16
faddp
cmp
inc
inc
mov
xchg
jmp
add
lods
adc
or
das
xlat
mov
jle
inc
in
pusha
into
imul
aas
lahf
js
stos
lods
and
push
inc
pop
jnp
inc
idivl
xor
pop
das
sar
sub
and
xchg
enter
adc
jmp
pop
lods
pmuludq
psraw
push
push
dec
ror
adc
mov
orl
dec
clc
jmp
pop
mov
or
call
adc
add
cli
decl
pop
dec
repnz
test
mov
ljmp
call
mov
enter
lea
repz
sar
mov
pop
std
mov
pop
ja
pop
cmp
mov
cwtl
mov
jg
add
xchg
fwait
inc
sbb
sbb
iret
dec
or
add
loopne
mov
subb
jmp
cli
insb
jae
lds
mov
or
push
pop
lcall
ljmp
fcomi
add
repnz
cmp
pop
add
dec
lahf
xchg
and
push
call
mov
out
iret
and
inc
nop
dec
xchg
icebp
mov
les
popa
test
push
jg
jmp
pushl
mov
in
jnp
jecxz
and
push
xor
xchg
push
xor
insl
xlat
pop
sbb
ret
fisubrs
push
mov
out
xor
inc
mov
jmp
mov
cli
lret
add
test
test
fistl
xor
and
push
outsl
scas
fcomip
ljmp
cmp
jge
cli
lock
mov
out
jp
push
rolb
push
sub
mov
inc
jbe
in
push
hlt
xor
push
je
and
dec
and
in
xchg
push
xchg
push
imul
out
jg
or
mov
jge
lock
pushf
popa
pop
pusha
pop
addb
mov
data16
add
jg
push
cld
xchg
repz
mov
xchg
cmp
push
out
daa
inc
daa
add
rep
daa
mov
add
pushl
test
test
int3
sub
pop
mov
cmpsb
and
lods
rcrb
call
aaa
ss
mov
and
jbe
rcll
xorb
js
mov
mov
inc
and
subb
jecxz
jbe
loopne
icebp
lea
cmp
pop
and
in
mov
inc
daa
rcrl
or
lock
decl
repnz
in
dec
mov
movhps
popa
mov
push
pop
loop
lret
cmpl
mov
hlt
jge
fwait
sahf
stc
mov
pop
lock
add
push
or
push
ret
push
dec
xor
fisubrl
mov
fwait
adc
pop
movsb
cmpsl
out
or
imul
or
adc
sbb
decl
popa
cmpsl
mov
lahf
lods
repnz
sahf
lret
fcmovu
shlb
pushl
add
scas
push
adc
cli
push
cmp
xor
adcl
mov
cmp
mov
roll
mov
fcomps
push
cmp
cs
or
stc
imul
pop
jo
cmp
and
mov
sub
ljmp
in
jge,pn
ret
fmull
adcl
pop
daa
gs
lea
jge
incl
mov
sbb
add
push
jmp
sbb
sub
mov
inc
push
lret
rcl
push
into
aam
jnp
addr16
cwtl
ret
popf
xor
scas
mov
cmpb
or
ret
stc
jb
sub
call
in
sahf
mov
into
xor
inc
jno
repnz
repz
mov
lcall
jno
call
cmp
test
sbb
or
arpl
lods
xor
inc
push
xchg
jno
inc
or
jnp
popf
out
mov
sub
jl
subb
pop
ds
lcall
cmp
pop
mov
xchg
pop
fldl
mov
insb
push
scas
mov
sub
xchg
xor
dec
imul
fsubl
jb
push
aad
into
inc
test
rcll
lods
lods
jno
lcall
dec
adc
imul
and
enter
jmp
into
or
or
sub
mov
into
ds
insl
aad
ss
add
test
es
lahf
popa
sti
and
pop
das
leave
int3
mov
xor
enter
incl
cli
gs
mov
cmc
mov
sub
clc
xchg
insb
test
imul
push
mov
jno
cld
pushl
sbbl
imul
jo
jle
and
iret
mov
decl
ret
add
mov
loopne
fimull
fsubrl
fldl
shrb
movsl
push
dec
jbe
adc
or
mov
adc
xchg
mov
mov
and
enter
loope
stc
pop
mov
sbb
decl
lock
js
lahf
inc
stc
popa
xchg
in
cmpsb
lahf
jp
sub
dec
pop
and
dec
out
lods
fwait
imul
std
sub
fdivp
inc
pop
ret
cmp
fcomps
fistl
rcl
gs
cmp
incl
fs
lods
jne
mov
cmp
nop
test
dec
mov
cmpsl
and
sbb
sub
or
mov
dec
dec
sbbb
ljmp
imul
pop
lds
loop
cmp
inc
sahf
jbe
ljmp
mov
call
pushl
xchg
mov
cli
mov
ret
xor
out
adc
xor
adc
or
or
mov
xor
out
mov
loopne
mov
push
cld
push
sbb
std
cld
pop
mov
nop
push
ror
stos
cmp
lret
out
mov
jle
rcrl
xor
mov
pop
shll
ret
ss
mov
jl
mov
mov
xor
repnz
sub
fcomi
lods
push
pop
outsb
aad
pop
je
lods
xchg
jecxz
cld
pop
pushl
rorb
jb
ja
fmull
xor
or
sub
sub
xchg
mov
sbb
sbb
fldcw
mov
jo
insl
jo
add
inc
pushl
adc
shll
jns
fnsave
ret
fistpll
int
add
mov
jo
dec
stos
les
mov
pop
pop
xor
in
fs
adc
inc
shl
out
iret
fsubrl
push
pusha
lock
push
mov
xor
push
cmpsl
in
and
rolb
call
int3
mov
out
sbb
inc
cmp
mov
jns
mov
mov
xchg
cmp
mov
ljmp
ret
dec
fstps
push
push
inc
loope
lret
jnp
push
inc
cmp
scas
dec
or
ret
idiv
jecxz
or
out
push
mov
imul
ror
jnp
add
mov
pop
incl
sbb
mov
fsubs
in
pop
cmp
inc
sbb
test
cmp
push
jg
lcall
mov
sbb
into
xchg
stc
push
jmp
movsb
push
hlt
mov
mov
mov
leave
fnstsw
push
test
cmp
fucomp
sub
lock
bound
jmp
out
pushl
faddp
cmpb
repnz
in
test
shrl
ljmp
xor
lods
outsl
cli
jmp
pop
loop
flds
aad
xor
pop
neg
jecxz
xlat
sub
sbb
imul
std
or
jb
xchg
iret
sbb
bound
cmp
call
push
xchg
dec
je
sti
xlat
jecxz
mov
mov
and
mov
add
addr16
xor
sub
call
out
pop
xor
lret
pop
fstps
out
sbb
daa
and
call
adc
mov
add
xchg
mov
jp
mov
pop
push
out
sahf
incl
cmpsl
sbb
push
xchg
popf
xchg
addr16
test
icebp
insb
sub
dec
test
jne
jb
lret
outsb
mov
dec
sbb
sbb
addb
enter
inc
inc
pop
mov
lcall
loop
inc
inc
jp
mov
in
dec
mov
lods
rcrb
incl
sbb
pop
pop
dec
scas
mov
cmp
in
leave
or
dec
cmp
mov
push
pushl
xor
xor
inc
loop
pop
lcall
mov
fistpll
xor
mov
and
testb
cmpsb
xor
jnp
or
sbb
lcall
push
push
aas
mov
das
les
lcall
xor
push
ja
rcr
in
xchg
imulb
push
push
add
decl
test
dec
lock
shrl
cmp
notl
push
imul
xor
mov
lcall
rolb
leave
ror
jo
fsubs
scas
js
adc
inc
push
movsb
scas
fildl
inc
jle
cmpsl
sbb
test
push
loop
dec
jns
test
in
dec
cmp
hlt
mov
pusha
jns
and
shr
fsubl
pcmpgtw
jne
sbb
mov
add
push
out
aad
or
cli
mov
aam
mov
xchg
dec
mov
lahf
push
lret
imul
rolb
repnz
outsl
popf
mov
andb
insb
or
dec
dec
push
cltd
xor
fs
adc
hlt
xlat
sahf
decb
push
insb
push
std
lcall
jecxz
loop
push
jne
stc
add
mov
ud1
xor
aas
mov
shl
call
ljmp
push
stc
fstps
ss
pushf
pop
mov
popa
addl
xchg
cld
fwait
mov
pop
push
xlat
xor
cmp
and
mov
mov
mov
or
repz
rcl
pushf
outsb
or
dec
arpl
repz
dec
lods
and
sub
lds
mov
call
fmul
mov
and
xor
in
sbb
mov
pop
inc
xor
ljmp
lcall
fidivrl
dec
sahf
aaa
je
lods
jae
and
lock
in
ljmp
rcrb
mov
pop
jbe
mov
push
push
ss
cmp
out
xchg
push
fistps
js,pn
mov
lcall
out
xchg
mov
cmp
push
mov
lahf
idivl
imul
ljmp
jmp
lds
jp
jb
fdivl
pop
cmp
fdivs
je
pop
jmp
cwtl
push
fwait
push
dec
pop
inc
sbbb
lret
mov
mov
sbb
xor
jmp
les
lods
stc
int
push
lods
ja
movsl
cltd
roll
lret
sub
ljmp
stc
loope
jl
in
adc
pushl
jnp
sbb
and
test
inc
mov
cmpb
cli
jle
ret
pushl
and
loop
inc
popa
ljmp
cmp
lods
adc
lea
adc
decl
and
inc
out
xchg
mov
jo
dec
sub
ret
out
push
cmc
arpl
xchg
push
jb
pushf
and
mov
das
mov
les
mov
and
daa
pop
mov
neg
and
mov
jge
mov
out
or
test
cmpsb
xor
rorb
addr16
ljmp
ss
fldcw
inc
push
stc
adc
mov
fs
pop
cmp
push
or
or
in
cmp
incl
xor
fidivrs
stc
imul
cmp
pop
imul
xor
sar
call
sbb
pop
inc
xchg
fimull
std
enter
adc
into
sbb
popa
sar
call
stc
mov
cmpsl
jbe
xchg
js
pushf
sub
lahf
rcr
sbbl
ljmp
lret
std
shr
mov
fistpl
jae
icebp
into
test
repz
lcall
out
ds
hlt
adc
test
mov
lahf
push
and
sbb
sbb
aas
repnz
lods
sub
push
xchg
movsb
xlat
out
lret
xor
decl
inc
add
sbb
jo
xchg
cmpsb
mov
mov
cs
jns
adc
scas
pop
pop
ss
decl
clc
sbb
push
sbb
mov
xchg
inc
pop
mov
nop
add
call
inc
lods
xchg
shrl
aad
xchg
add
jae
mov
mov
mov
xorl
imul
mov
or
outsl
mov
lea
and
inc
push
cmp
jno,pn
push
sbb
decl
ss
fcomip
mov
test
out
jge
stc
xor
jno
rcl
or
cmp
cmpb
cmp
loope
jecxz,pt
and
mov
jmp
mov
fs
stos
mov
stos
push
pop
mov
mov
push
mov
mov
andl
adc
or
fsts
sti
test
repnz
sbb
fisttpl
shlb
xchg
xor
pop
pusha
jmp
push
mov
push
mov
jge
mov
sub
cmc
xchg
push
xchg
fbld
lock
call
xor
inc
mov
dec
adc
pop
imul
mov
test
push
loopne
fcomip
scas
sub
loope
aam
mov
mov
push
iret
push
jno
ret
incl
sahf
pushf
lock
jnp
jnp
test
sbb
fldt
testb
or
mov
inc
mov
out
sbb
adc
sub
mov
in
popf
cmp
cmpsl
push
scas
sub
in
mov
jns
cs
sub
sti
addr16
repnz
pushl
aad
sub
nop
movsl
jns
inc
mov
mov
pusha
call
mov
dec
sub
call
nop
out
icebp
cmpsl
lahf
cmp
jno
loope
ret
sbb
lods
mov
pop
test
sub
decl
fwait
push
dec
mov
adc
mov
movsl
out
fistpl
dec
sub
data16
jmp
mov
dec
test
cmp
lret
mov
stos
adc
add
stos
ret
xor
ljmp
lods
xchg
jecxz
int
mov
mov
ljmp
outsl
adc
ljmp
xchg
mov
sub
in
ret
add
sbb
adc
mov
dec
mov
incl
stos
idivl
je
cmpsb
xor
ss
push
sub
addr16
cs
ljmp
push
mov
clc
mov
in
cmpsb
stc
mov
clc
dec
xor
loopne
imul
push
sbbl
aad
mov
push
mov
ljmp
arpl
or
and
inc
stos
mov
dec
dec
cwtl
ljmp
mov
loop
add
adc
orl
jecxz
ficomps
sbb
in
lods
inc
sbb
xchg
out
mov
and
insl
ja
push
jg
shr
fwait
dec
pop
sub
cli
ljmp
xchg
cmc
xchg
stos
pop
das
hlt
cmpl
mov
cli
je
fdiv
push
dec
cmp
test
js
ds
jecxz
dec
scas
insb
xchg
sbbb
adc
mov
jb
jns
testb
ret
mov
lds
dec
pop
sbb
mov
pushl
or
ret
outsb
js
mov
and
dec
and
and
cld
xchg
mov
popf
lahf
inc
insl
daa
fcmove
xlat
pop
cmpsl
xor
jl
xor
shrl
out
adc
lds
adcb
mov
mov
mov
gs
rcl
add
mov
decl
push
push
sahf
lahf
icebp
push
sarb
cmpsl
cwtl
mov
and
out
hlt
lcall
push
pop
cmp
push
mov
pop
ret
imul
pop
mov
pop
outsb
jnp
leave
mov
add
scas
int3
or
or
sub
gs
mov
cmpsl
lcall
testl
in
dec
mov
js
int3
lds
scas
mov
mov
dec
adc
lret
pop
fs
fsubrs
dec
and
movsb
mov
cmp
xor
pop
rcll
repz
lret
daa
stos
in
sbb
or
xor
mov
ljmp
mov
addl
jne
xchg
cltd
scas
jb
cli
sbb
xor
pop
sar
incl
clc
inc
jmp
ret
in
push
test
xor
inc
fsubr
fsubs
lret
or
scas
adc
out
sbb
call
mov
enter
repz
cs
mov
enter
mov
cmpsl
lock
ljmp
lcall
xchg
mov
jle
pop
push
mov
arpl
mov
xor
jnp
jl
push
imul
scas
mov
inc
movsl
sub
adc
mov
sarb
mov
adc
decl
cmp
mov
les
cmpsb
data16
dec
pop
lret
inc
cltd
js
cli
in
pushl
into
sbb
ljmp
bound
pop
loop
sub
ret
inc
cmp
xor
jb
iret
fadds
and
sbb
mov
loopne
mov
daa
dec
ds
ret
ljmp
xchg
imul
scas
pop
fimuls
out
mov
addr16
lea
in
mov
and
mov
stc
jno
mov
mov
fsubrs
jbe
inc
cmp
loop
pop
or
arpl
cld
jae,pn
aad
out
adc
jp
cmpsl
jne
imul
and
mulb
es
mov
mov
in
mov
ljmp
data16
push
jmp
sub
jg
mov
fsubrs
faddp
xchg
mov
cmp
popf
pop
sbb
lcall
scas
sub
lahf
add
leave
pop
pusha
mov
add
out
test
aam
popf
incl
test
cmc
orb
cld
mov
ja
repz
lods
stos
shlb
jp
add
pop
cld
ljmp
inc
jp
xchg
je
test
xor
popf
sub
mov
in
lcall
sbb
dec
ret
mov
dec
push
jg
fildl
pop
sbb
lcall
mov
push
fidivs
imul
mov
and
ss
ror
mov
mov
jb
sbb
inc
sbb
add
jmp
dec
dec
idivb
fsts
out
jmp
adc
adcb
test
pop
icebp
pop
mov
push
cmpsl
xchg
jg
gs
es
xor
orl
adc
push
call
push
mov
sbb
shlb
push
fisubs
and
gs
cmpl
sar
jmp
or
fidivrs
mov
in
imul
dec
es
repnz
cli
cmp
xor
idivb
hlt
pop
inc
add
iret
xchg
xchg
test
inc
clc
gs
mov
scas
inc
aas
xchg
add
xchg
pop
push
cmp
add
ficoms
in
dec
inc
or
jmp
sbb
mov
in
adc
adc
rclb
movsl
fs
cltd
push
lcall
outsb
adc
inc
lods
sbb
push
mov
neg
pop
cli
mov
lock
decl
add
jbe
add
cwtl
mov
cmp
ja
mov
leave
call
mov
mov
repz
ljmp
sbb
fmull
or
lcall
jmp
add
pop
arpl
subl
fst
shr
inc
jae
mov
pop
mov
sub
ljmp
adc
sbb
outsl
and
pop
mov
les
in
lret
jmp
setge
push
and
mov
mov
aad
fstl
pushf
std
jae
mov
decl
push
test
divb
jne
inc
icebp
sbb
and
in
scas
dec
inc
mov
inc
dec
ljmp
xchg
mov
ja
mov
cltd
and
push
pusha
rcrb
outsl
dec
cmp
fisttpl
sub
shll
inc
jl
outsb
dec
push
stc
dec
cmpsb
imul
xor
add
jle
outsl
cmp
mov
fidivs
mov
les
xchg
lcall
push
dec
fwait
ret
jbe
inc
cmc
lcall
out
jae
ljmp
mov
xchg
movsl
das
test
popa
pop
ret
fs
mov
pop
push
or
lcall
dec
test
inc
popf
lret
dec
mov
pop
ja
ljmp
ljmp
movsl
stos
jno
out
ss
add
imul
adc
call
orl
test
rcrl
aad
leave
imul
sub
imul
into
mov
pushl
repz
sarl
sbb
clc
mov
or
ljmp
js
rorb
out
fisttps
cltd
add
je
add
call
mov
mov
sub
jp
xchg
xchg
mov
xorps
imul
call
dec
pop
jp
mov
jno
cwtl
adc
ret
in
adc
add
fmuls
repz
test
sub
es
aad
call
jge
test
jle
xor
inc
arpl
dec
out
lds
out
or
das
out
cmp
jne
mov
cmp
adc
mov
jae
ds
std
mov
mov
jge
mov
call
push
jns
push
daa
xchg
jns
cld
stos
pushf
andl
xchg
push
mov
lcall
jb
call
arpl
cld
push
hlt
pop
in
add
lcall
hlt
sub
fidivrs
push
leave
mov
jno
lcall
or
xchg
ljmp
lcall
pop
mov
ret
and
jg
mov
ljmp
stc
jp
clc
mov
jmp
sbbb
mov
sahf
and
call
or
lcall
sti
jnp
xor
push
adc
push
push
xlat
pusha
xlat
movsb
sbb
xchg
or
and
dec
lock
xchg
outsl
lds
lret
pmuludq
call
push
jnp
aas
outsl
cli
cld
dec
jle
gs
sbb
rdpmc
div
pop
jge
sbb
lcall
out
mov
inc
int
mov
xchg
jp
push
xchg
xchg
inc
mov
fsub
mov
push
jmp
lds
call
push
and
stc
rol
add
pop
mov
stc
inc
mov
pop
cli
push
or
pop
push
mov
ret
lcall
out
insl
and
sahf
daa
cmp
adc
insb
in
sbb
pop
pusha
cmp
or
leave
mov
jns
fisubrl
adc
add
push
in
ljmp
or
imul
mov
popa
adcl
cs
stos
in
pop
fs
pop
or
mov
mov
imul
ljmp
cmpsb
hlt
push
inc
mov
push
in
call
jp
mov
jg
dec
mov
in
xchg
jl
or
and
cmp
icebp
jbe
cld
sub
leave
nop
pop
call
test
or
hlt
or
push
out
lds
add
mov
jmp
xor
lods
mov
mov
dec
jge
xor
jbe
add
mov
in
xchg
pop
jmp
jmp
aaa
dec
test
push
pushf
aam
cwtl
and
and
mov
mov
cs
incl
pop
insl
lcall
xchg
and
sbb
insw
and
fs
cmp
mov
mov
sbb
lods
or
xor
insb
fld
loop
roll
int3
lea
lcall
jge
sub
imul
xchg
xchg
pop
idivl
and
xor
add
cmp
fldcw
cmp
mov
cmp
and
pop
mov
xlat
mov
scas
sbb
add
test
cmp
xor
in
jg
inc
xor
cmp
cwtl
inc
sub
sahf
jne
pusha
mov
aad
dec
cmp
and
sbb
clc
push
inc
psllw
mov
lods
es
xchg
flds
movsb
push
daa
lahf
in
insb
loop
ljmp
jno
repnz
ret
add
mov
inc
pop
out
xchg
xchg
rclb
jmp
insb
lods
pop
sbb
mov
fidivrl
dec
sbb
aam
dec
xor
pop
push
add
pop
jmp
pop
sahf
lock
test
xchg
xor
and
cmp
adc
mov
push
sbb
cld
lcall
in
insl
popa
inc
jmp
sbb
aad
xchg
pop
push
sub
mov
lcall
add
pop
and
leave
pop
aad
pop
jnp
pop
sub
jmp
sbb
jne
inc
stos
mov
jae
jbe
cmp
or
dec
ror
and
jg
adc
mov
cmc
push
pop
mov
imul
dec
xor
shrl
lods
inc
add
divl
imul
sub
mov
cmp
xchg
or
xlat
mov
mov
jmpw
add
push
adc
cld
lret
loope
xchg
sti
and
cmp
popf
sysret
pop
dec
aad
dec
mov
aad
inc
loopne
inc
cli
test
or
decl
mov
subb
mov
into
mov
pop
inc
mov
ret
dec
inc
mov
insl
sti
lds
sub
lahf
into
aas
push
push
outsl
dec
dec
and
pop
mov
clc
lock
cmpsl
ret
shlb
inc
pop
mov
out
clc
loop
ret
mov
adc
and
inc
ret
mov
fisttps
lcall
cmp
dec
mov
pop
js
cmp
mov
xchg
push
xchg
lret
inc
dec
sarl
cmpsl
cli
dec
mov
mov
in
cs
roll
ret
mov
sub
push
pop
sub
icebp
xor
lock
int3
pop
and
inc
or
push
data16
cltd
std
adc
cmp
pop
mov
sub
jle
fcmovu
aaa
loop
push
push
ficoms
std
incl
mov
sub
rclb
and
lods
pusha
ds
or
pushf
mov
add
incl
dec
jmp
push
xchg
adc
movsl
mov
jne
lcall
dec
pushl
or
ljmp
cltd
ret
xchg
jno
scas
jnp
xor
adc
add
push
ljmp
fstpl
or
push
mov
test
cmc
pusha
fisttps
popf
pop
push
lcall
neg
pushf
lds
mov
mov
ror
cmpb
xchg
adc
jg
jp
enter
dec
dec
or
leave
pop
pushf
clc
xchg
push
pop
lret
jae
cld
inc
mov
in
xchg
mov
fdivs
std
fwait
cmpsb
in
ret
sbb
inc
orb
inc
test
adc
push
push
mov
mov
and
jg
and
fnclex
and
fnstcw
imul
scas
call
mov
jp
adc
pop
push
lret
in
adc
ss
mov
push
fstps
and
lcall
int
leave
inc
leave
in
push
std
jmp
call
pop
jge
cmp
and
sbb
fstpt
sti
mov
mov
xor
jns
loope
pop
mov
xchg
fidivs
loopne
imul
decl
xchg
mov
icebp
dec
out
pop
push
pop
arpl
mov
int
push
cmpsl
out
decl
call
xchg
ss
xor
daa
lds
pop
mov
int3
inc
js
jge
fcompl
adc
mov
jg
pop
popa
pop
dec
es
push
mov
cmp
movsb
icebp
adc
cmp
mov
stos
fwait
scas
scas
decl
sbb
adc
sbb
fs
mov
or
sarl
andb
and
push
shlb
fiaddl
cs
bound
mov
adc
dec
cmp
mov
call
pop
iret
xchg
scas
loope
mov
flds
push
mov
jno
pop
and
scas
mov
imul
mov
adc
decl
mov
lock
pop
das
movsb
int3
add
sub
stos
fists
or
repz
add
mov
mov
mov
rcr
push
mov
inc
and
shl
or
xor
dec
pop
push
clc
cmp
mov
add
fcmovnb
jge
mov
rcll
push
shll
out
ja
add
push
in
fwait
aad
pop
movsl
push
idiv
pushl
mov
dec
cmp
mov
cs
cs
daa
test
fucom
dec
sub
adc
push
add
dec
xchg
ss
jle
sbb
cli
jnp
repnz
jecxz
aas
xor
nop
sbb
lods
mov
xchg
mov
jg
xor
fdivrl
pop
mov
xlat
adc
xchg
cmpw
pop
jge
lcall
and
notl
push
iret
scas
aas
jno
or
enter
adc
fsubl
or
cmp
pop
movsb
hlt
adc
xchg
popf
sub
mov
jl
jae
mov
ljmp
cli
adc
xchg
inc
imul
sbb
push
enter
out
repnz
push
lods
in
dec
nop
or
inc
aad
mov
outsb
ljmp
leave
je
sub
jmp
cmpsb
and
std
xor
in
jae
xchg
fcoml
outsl
adc
cli
push
int
dec
out
add
pop
loop
mov
mov
push
mov
sbb
call
push
outsl
setle
outsb
call
es
push
cmpb
sar
call
sbb
adc
jecxz
xor
sarl
cmp
sbb
mov
xchg
mov
pop
shlb
mov
dec
addr16
lret
out
lds
adc
cli
ljmp
icebp
shl
mov
pop
scas
cmp
mov
pop
mov
nop
shrl
addr16
es
mov
and
fcom
ror
xlat
adc
push
and
dec
fisttps
and
mov
daa
cmp
pop
fadds
orb
call
sbb
test
cmc
aad
das
call
sub
ljmp
fnsave
scas
in
cmc
fists
push
and
call
stc
outsb
mov
inc
mov
and
xor
out
cli
and
js
les
mov
xor
ret
les
sub
ficompl
pop
inc
cmc
dec
pusha
sti
cmp
cmp
push
xor
fidivs
in
push
psllq
xor
push
xchg
jg
lcall
inc
add
add
xor
adc
rep
or
mov
jns
out
sub
insl
mov
lock
pop
cli
add
int3
fwait
mov
fmull
push
jmp
in
pop
repz
cmp
and
add
cmp
sahf
mov
pushl
aam
inc
push
inc
pop
in
ds
cltd
xor
pop
sbb
xor
repnz
loope
or
incl
clc
data16
ret
mov
lret
loop
test
pop
insl
inc
test
ljmp
dec
fmull
ja
mov
xor
xchg
jbe
lret
mulb
mov
pushl
cltd
insl
mov
or
jl
fidivrs
orl
mov
pop
call
jle
mov
adc
mov
sti
cs
lock
incl
mov
push
aas
daa
sbb
js
dec
jmp
rolb
loopne
fists
fdivrl
lcall
aaa
aas
push
and
adc
lahf
fdivrl
cld
test
xchg
int3
or
cs
xor
xchg
mov
out
xchg
lret
push
xadd
shr
jae
push
in
pushl
repz
in
enter
movsb
mov
jp
inc
and
dec
icebp
mov
cwtl
iret
dec
loopne
lcall
cmp
xchg
fisttps
outsl
or
fimuls
dec
in
sub
and
mov
out
mov
push
test
cmp
ja
fbld
ror
mov
lcall
mov
add
sbb
movl
cltd
xor
or
je
dec
stc
dec
repz
mov
mov
jecxz
cmp
push
pusha
sbb
mov
decl
scas
cmpsb
pop
pop
test
mov
xor
fwait
dec
ljmp
lret
lods
pusha
or
lock
jmp
mov
sbb
jp
scas
sbb
ds
repnz
sub
aad
fbld
mov
mov
aas
push
or
or
pushl
out
mov
mov
sub
fimull
push
xor
hlt
jge
jb
mov
and
std
incl
jmp
sbb
lahf
push
lret
jg
outsl
mov
or
jo
push
push
cli
aaa
sub
push
sbb
xor
push
push
dec
mov
addr16
sub
rcr
ja
js
inc
sbb
xchg
pop
sub
jg
xchg
dec
rclb
es
cld
xchg
addb
loope
mov
inc
lds
ljmp
not
mov
xor
lahf
std
imul
out
fcoml
das
adc
shll
fistps
jg
dec
lret
ljmp
and
mov
jmp
sub
lock
outsl
imul
or
and
push
xor
push
push
jge
loopne
inc
es
mov
loop
adc
dec
mov
xchg
mov
call
pop
cmpsb
cmp
bound
mov
test
adc
sub
jns
push
stos
xor
stos
xchg
push
xor
xchg
adc
test
mov
pop
inc
dec
push
jg
mov
push
adc
mulb
xchg
iret
test
xchg
mov
ficoms
daa
and
mov
es
jle
int
enter
sbb
call
lcall
sti
xchg
lock
scas
adc
mov
xor
adcl
movsb
jmp
movsl
ja
jnp
ljmp
push
jp
jg
and
pop
add
sbb
push
cltd
imul
cmp
call
push
fwait
push
mov
repnz
pop
outsl
sub
jns
out
xor
aam
lcall
popf
cmp
data16
jne
xchg
popa
lods
adc
addr16
sub
cwtl
je
sti
mul
mov
cli
xchg
ljmp
jb
aaa
pushf
hlt
stos
into
push
fstp
or
arpl
inc
sbb
into
push
insl
call
enter
call
jmp
inc
lret
cmc
pop
jb
loope
js
loopne
iret
iret
push
mov
jmp
xorb
jge
cmp
mov
pop
fdivs
fildl
jle
jne
pop
push
mov
pushl
pushl
dec
test
rcll
cltd
sbb
popf
mov
cmc
cli
aaa
mov
outsl
nop
cmp
decl
mov
mov
int
int
push
ret
sub
test
pusha
es
pusha
mov
decl
out
push
xchg
jge
out
enter
pop
repnz
cwtl
andl
pop
test
jae
in
push
pop
cmp
mov
gs
mov
fstpl
xor
popa
aad
jno
outsl
clc
cmp
scas
fidivl
dec
cmp
sbb
fs
ljmp
push
imul
mov
pop
ja
out
ja
ja
push
decl
mov
shl
fld
xchg
xchg
sub
xor
or
add
inc
imul
nop
pop
xchg
das
push
icebp
jg
and
xor
fisubs
decl
jo
clc
out
js
dec
cmc
stos
mov
jns
dec
and
cmp
decl
stos
xchg
and
inc
aad
mov
push
aaa
cmpb
outsb
cld
dec
cli
push
dec
adc
dec
pusha
and
in
mov
out
cld
or
or
shlb
sub
sub
jl
dec
movsb
movsl
xorb
out
cltd
cwtl
testb
out
jns
repnz
jmp
test
add
xor
push
cmp
pop
aas
jmp
das
push
push
decl
lcall
loope
and
mov
loop
ss
jo
ljmp
rcr
jl
pop
mov
jnp
decl
sarb
or
adc
and
testl
jae
call
outsb
push
testb
fbstp
cltd
ljmp
and
push
test
lock
aam
outsl
leave
inc
ja
ljmp
pop
test
stos
xor
cmp
hlt
inc
xchg
xlat
cmp
inc
xchg
mov
ljmp
cmpsb
push
cmc
out
adc
cs
dec
repnz
mov
xchg
mov
jg
andb
std
adc
add
dec
jno
push
cli
mov
pushl
sub
and
sahf
ret
sub
jmp
xor
in
adc
xor
lock
push
mov
jp
inc
loope
add
ljmp
xor
decl
aam
imul
xor
lods
add
bswap
cmpsl
jge
add
stc
sub
lahf
pop
jns
ljmp
xlat
cs
pusha
jnp
frstor
mov
outsb
rcrl
mov
sar
call
loop
xor
add
or
les
dec
pop
sar
imull
xchg
out
pop
imul
ds
das
cli
jmp
jp
dec
lahf
mov
cmp
mov
decl
push
test
lret
or
inc
fldenv
push
in
mov
loope,pn
jg
orb
stc
idivb
cmc
xchg
sbb
inc
cmpl
paddd
ljmp
test
inc
push
sahf
mov
ss
cwtl
clc
adc
adc
sarb
rclb
mov
fucomip
stc
test
loope
ja
sti
ss
leave
mov
xchg
pop
mov
mov
and
fdivrp
jmp
adc
lahf
mov
cmpsl
or
cs
and
fcompl
push
or
lds
dec
call
rorl
adc
jnp
dec
add
into
cmp
ljmp
mov
das
lahf
mov
in
lea
leave
aam
movb
pop
aad
jmp
dec
push
dec
data16
push
add
out
movsl
cli
push
adc
or
roll
xlat
ds
mov
xchg
cmp
add
and
pop
repnz
int3
divb
mov
push
loope
mov
rclb
mov
fs
sahf
popf
insb
mulb
lcall
cli
iret
push
stc
inc
call
data16
jl,pn
sbb
mov
xchg
cmp
mov
mov
dec
fisttpl
or
pop
push
fcmovu
in
shrb
call
and
mov
mov
xchg
cmp
cli
adc
jg
cmp
push
std
jle
addr16
push
inc
mov
dec
xlat
fwait
cmp
mov
xor
push
cmp
and
and
xchg
cmp
inc
in
popf
ret
shrb
sub
jecxz
xchg
lcall
scas
push
cmp
xchg
mov
push
out
pop
fisubrs
cltd
or
andl
lods
outsl
decl
ret
lret
dec
aaa
mov
mov
pusha
sub
stc
inc
adc
addr16
cli
push
incl
push
or
popf
fsub
shll
adc
adc
insl
fwait
aad
mov
mov
test
xchg
add
or
arpl
sahf
dec
cli
dec
lds
rcr
ljmp
lret
cli
pop
adc
or
push
lret
inc
shll
xchg
jg
stc
rolb
inc
mov
ficoml
mov
lret
dec
bound
call
xchg
mov
xor
and
dec
cs
testb
push
imul
dec
dec
sar
decl
shld
stc
add
in
fmuls
cmpl
call
ret
cmp
push
cltd
clc
es
jno
pop
xor
dec
call
mov
in
add
fs
flds
std
jg
mov
lea
mov
cmp
test
sbb
aaa
jle
fs
push
nop
or
jmp
sbbl
or
or
in
cmp
stos
mov
mov
xchg
mov
jo
popa
mov
push
pop
daa
repnz
int
ud0
push
add
xor
xchg
cmp
mov
fwait
sub
ficoml
pop
adc
push
fwait
adcb
cs
popf
lcall
cmp
xor
xchg
mov
inc
popf
push
push
loop
mov
sbb
xchg
daa
shll
fldcw
ja
xchg
sbb
loope
ss
fwait
and
test
pop
icebp
pushl
add
addr16
mov
dec
fildll
je
fbstp
adc
xor
out
mov
cwtl
cmp
sub
mov
add
jns
roll
fsubl
pushl
xchg
shlb
mov
mov
jno
sub
pop
or
xchg
push
push
mov
pop
mov
sbb
leave
ret
bound
addr16
lds
nop
ret
iret
xchg
insl
out
ljmp
pushl
mov
xchg
jmp
cmp
bnd
mov
jmp
or
inc
xor
fidivs
fcoms
into
xchg
mov
ja
dec
shrl
dec
arpl
sbb
push
xor
push
insb
inc
dec
mov
and
adc
xchg
sub
xor
push
fwait
inc
dec
push
je
fcmovu
cmp
ss
pushf
sbb
stos
jmp
xor
fs
call
imul
push
jge
push
xchg
sbb
gs
sbb
lret
fs
ud0
incl
mov
sbb
pop
andb
sub
adcb
add
pop
sbb
push
cltd
pop
jbe
sbb
ds
mov
add
xchg
adc
into
jb
popa
xchg
shlb
dec
jns
dec
lcall
iret
aam
jecxz
lahf
call
jmp
hlt
inc
outsl
jge
and
decl
pop
inc
fs
lock
cmc
push
fsubrl
xor
lea
adc
jg
jl
push
push
jne
pop
jo
adc
mov
or
sub
jae
inc
sbb
pushf
sbb
push
scas
iret
jecxz
test
movsb
outsl
sbb
mov
pop
call
xchg
mov
std
xor
loopne
leave
jb
scas
cmpsl
xor
pop
cwtl
dec
sub
mov
lock
ret
pushl
xchg
or
sahf
shlb
jno
cmp
scas
rolb
fcmovbe
imul
jg
ljmp
iret
out
and
push
es
testb
mov
lcall
xchg
cli
les
push
fisubrl
push
push
or
ja
ds
pusha
cmp
adc
mov
incl
sbb
jmp
sar
imul
mov
movsb
data16
push
xor
jo
dec
adc
sbb
xchg
mov
in
mov
lds
lods
scas
or
pushl
push
jno
js
mov
add
in
dec
call
lea
ds
inc
dec
loope
sti
cmpsb
addl
sub
cltd
mov
adc
fnstsw
pop
pop
push
scas
cs
inc
outsl
lahf
lcall
lret
and
jl
rcrb
rolb
repz
push
pop
cmpsb
dec
hlt
popa
jne
incl
inc
xchg
movsl
pop
adc
ret
imul
or
xchg
sbb
ljmp
jmp
mov
xlat
mov
adc
mov
mov
es
jg
call
inc
and
jmp
jb
lret
or
mov
mov
aas
lock
test
into
ja
pop
dec
and
cmpsl
sub
push
cld
mov
and
lret
adc
pop
jo
pop
je
push
inc
es
mov
incl
push
inc
incl
loopne
shl
adc
jno
pop
gs
mov
dec
jnp
bound
sub
lock
fstpl
ljmp
addr16
mov
insb
mul
test
mov
mov
push
inc
xor
lret
fiaddl
pop
xchg
and
call
mov
ss
cmp
inc
popa
or
fwait
push
fnstsw
dec
ss
and
sbb
gs
cmpsl
adc
lcall
add
sub
cli
xor
lods
fcoml
in
arpl
mov
loopne
data16
cmpl
sbb
in
pop
mov
decl
push
lret
adc
dec
lret
ret
outsl
mov
rcl
cmpsb
scas
loop
fisubs
iret
mov
orb
out
and
fisttpl
ljmp
std
sub
mov
pop
xchg
std
insl
mov
scas
mov
ljmp
or
scas
lret
push
lea
mov
mov
cltd
sbb
aad
rolb
data16
jnp
xchg
and
xor
movsb
and
movsl
lea
lods
xor
lock
mov
xlat
in
mov
add
aad
sbb
xlat
scas
and
pushl
mov
cmc
andl
mov
nop
cmp
cmpsb
cltd
mov
xchg
out
pushl
call
mov
leave
pop
and
sub
popa
insl
icebp
fistl
fldcw
sbb
mov
outsb
das
pop
xchg
lds
or
rcrl
mov
push
loop
jns
fnstcw
mov
xchg
adc
jae
xchg
cli
add
adc
lret
jge
inc
rclb
xchg
pushl
pop
xchg
testb
outsb
mov
push
adc
insb
dec
pop
enter
mov
incl
test
stos
fdivrl
inc
push
idivb
test
push
stos
shrb
fists
popa
cld
jmp
pop
mov
pop
mov
mov
sar
jg
ja
jp
sub
lods
dec
dec
ja
or
xor
inc
inc
sahf
test
jg
cli
jmp
lahf
jbe
mov
lock
dec
dec
jg
xchg
pop
fstpl
incl
xchg
lods
lea
cmp
sub
mov
dec
pop
aaa
out
out
push
fstps
pop
adc
push
xchg
fcomip
sarb
pop
lock
push
fcmovnu
pop
push
and
xchg
inc
cmp
inc
test
cmp
or
mov
push
xor
xor
iret
push
fndisi(8087
leave
push
mov
cmp
sbb
cmp
lret
call
and
enter
and
mov
shrl
mov
mov
cmpsl
or
mov
xchg
xchg
pop
shlb
fwait
pop
test
stos
ret
lahf
ljmp
mov
pop
pop
aad
lds
jg
mov
dec
xorb
out
and
imulb
cltd
jg
push
ret
ja
lock
mov
iret
mov
fnstsw
mov
push
cmp
pop
cld
mov
repnz
out
inc
cmp
dec
iret
dec
sub
jmp
pop
clc
movl
ljmp
mov
mov
push
imul
jg
add
mov
mov
shlb
mov
fxtract
in
mov
mov
fs
cmpsl
repz
clc
push
imul
incl
ret
add
in
mov
adc
repnz
inc
inc
pop
cmp
mov
mov
push
fdivrl
add
cs
ljmp
xchg
xchg
sub
jp
dec
push
lcall
cmpsl
pop
pushf
daa
xchg
leave
imul
jns
pop
jg
cwtl
rorb
scas
lcall
aas
addl
fsubl
dec
fnstcw
lea
cmc
bound
mov
pop
jo
into
cmpsb
mov
sub
repz
sub
push
out
nop
ds
cmp
mov
pop
dec
mov
outsb
pop
in
divb
push
jne
ja
pop
insl
cs
call
jmp
sarb
xchg
mov
xlat
push
jg
inc
orb
fidivl
scas
cmp
xor
inc
loop
inc
mov
push
subb
ljmp
aaa
and
dec
divb
dec
cmc
ds
mov
lcall
pop
lcall
pop
stos
test
push
ror
je
aaa
mov
adc
sub
push
std
call
inc
dec
xchg
or
cli
lret
jmp
jl
mov
pop
fwait
or
jmp
sub
and
cmp
aad
lcall
cmc
add
ficompl
das
sar
add
outsb
jl
jg
stc
sbb
dec
fists
out
jl
pop
fdiv
inc
cli
incl
mov
roll
lods
mov
jne
popf
adc
movsl
jmp
mov
data16
adc
cmpsl
int3
cmp
ja
fisubs
xchg
jne
pop
lcall
adc
jnp
fmull
pop
mov
jne
push
ss
cmp
call
mov
jg
jmp
aas
cwtl
enter
cltd
mov
and
sahf
es
xor
incl
jmp
pop
xor
xchg
or
cltd
fdivl
jno
push
out
mov
movsb
and
jecxz
inc
or
loopne
jo
jnp
fnstsw
jae
pop
mov
jns
jp
jns
test
incb
ret
fildl
sub
mov
dec
roll
sbb
ljmp
dec
ljmp
mov
adc
adc
push
insb
cli
ja
ljmp
pop
sub
xlat
mov
cmp
jl
pop
inc
or
es
add
push
jle
cld
std
jb
lahf
lahf
iret
shr
and
ja
push
std
lahf
or
dec
jnp
je
popf
aam
jge
jmp
dec
adc
pop
call
push
inc
out
and
cmp
cld
insl
dec
push
pop
stos
push
jl
push
cmp
hlt
mov
lret
std
xor
lcall
push
call
lcall
jb
mov
arpl
ljmp
cs
push
mov
mov
inc
sub
incl
xor
sbb
mov
mov
mov
repz
mov
mov
call
cmp
inc
mov
bound
mov
adc
das
cli
cs
jmp
loope
xor
cld
ret
jmp
pop
data16
aaa
cmp
inc
insb
sub
or
inc
mov
and
es
leave
repz
call
and
lret
daa
mov
xchg
lahf
cmpsb
pop
xor
shr
mov
lds
pushl
stos
call
icebp
loope
ljmp
fimull
xchg
scas
leave
jns
dec
repz
sahf
inc
popa
push
test
call
mov
ficoms
mov
push
jle
lret
xchg
aaa
mov
gs
add
xlat
mov
inc
sub
icebp
imul
cli
sbb
push
les
mov
inc
xchg
popf
pop
pop
pop
repz
and
pop
lock
sbb
addl
stc
or
mov
bnd
pop
xor
je
mov
mov
aas
cmp
dec
mov
sti
punpcklbw
lahf
cli
jg
or
rorb
pushl
scas
das
addr16
aas
dec
sti
aad
sub
and
jge
sub
hlt
andb
aad
clc
push
pop
call
aaa
faddl
and
lret
roll
sahf
mov
inc
inc
incb
fcomps
std
mov
shrb
sbb
fcos
dec
fnstcw
mov
xor
inc
sub
int
cmpsb
jmp
add
mov
call
push
loop
into
clc
js
mov
sarl
push
fisubs
dec
cmp
addr16
push
pop
repz
sbb
inc
mov
loopne
out
jae
fidivl
sub
incl
or
loopne
data16
mov
fstl
pusha
adc
sub
adc
filds
cwtl
rorb
ljmp
xchg
jb
lcall
jo
cmp
pop
popa
push
lods
and
or
fsts
jmp
sub
and
enter
cld
rcrb
ds
mov
insl
repnz
scas
decl
aam
repnz
dec
movsb
test
fstpl
jg
mov
sbb
data16
fucomp
bound
mov
addr16
push
icebp
mov
jmp
jle
cmp
shlb
addr16
scas
xor
pop
mov
mov
mov
stos
jo
lods
in
out
in
clc
mov
xchg
sub
aad
icebp
je
jl
mov
lcall
call
ret
arpl
sbb
fstl
daa
dec
lea
dec
shl
stos
pcmpeqd
out
mov
and
mov
mov
mov
or
jecxz
cli
std
lret
mov
fdivr
movsb
jo
leave
int
fdiv
adc
bound
and
aaa
fistps
jp
js
add
push
pushl
pop
xchg
lcall
inc
sarl
mov
js
inc
call
bound
jno
and
mov
daa
shll
cli
push
jle
add
jmp
mov
lods
inc
jecxz
push
dec
inc
shrb
adc
filds
shlb
stos
add
sub
cmp
pushl
and
dec
lcall
xchg
lea
aad
dec
out
push
repnz
shrl
sarb
mov
rclb
mov
popa
cmp
movsl
jmp
sbb
add
mov
sbb
shrb
add
pop
xchg
fidivrl
dec
xchg
clc
sbb
mov
movsb
nop
mov
push
xlat
xchg
icebp
mov
decl
ret
cmp
fidivs
mov
cmp
xchg
push
sub
mov
jnp
test
int
hlt
incl
sbb
dec
cmovae
sub
dec
sbbb
orb
mov
std
fcoms
cltd
mov
mov
call
or
scas
lret
call
jmp
movsb
out
dec
pop
pop
inc
scas
sahf
mov
movsb
mov
mov
popa
cmc
hlt
ret
xchg
push
sub
pushl
dec
test
sbb
leave
movsb
push
jmp
sub
dec
lods
mov
fwait
cmp
ljmp
movsl
push
jl
jge
ja
and
cmc
in
xchg
push
imul
pop
push
pop
call
ljmp
add
mov
imul
or
jb
inc
clc
or
and
sbb
add
and
lcall
xor
daa
mov
mov
in
xchg
mov
cmc
or
outsb
fisubl
popl
aaa
jl
loopne
and
dec
les
push
mov
stos
sbb
push
mov
lret
xor
push
mov
loop
std
lahf
jno
ja
insb
mov
ljmp
xchg
dec
push
push
pop
and
sbb
ljmp
jns
scas
inc
cs
jmp
aaa
call
ljmp
jbe
and
lea
popf
js
inc
outsb
fcomip
inc
in
lret
dec
mov
adc
insb
mov
enter
subb
call
mov
jnp
mov
leave
hlt
cld
jne
xor
and
sub
stos
fwait
ret
dec
ljmp
pushf
cmpb
mov
jmp
lret
xchg
cmp
sub
fdivr
call
inc
fsts
mov
iret
mov
sub
std
mov
push
jg
bound
call
lds
mov
popa
and
and
xchg
xchg
sbb
in
or
mov
sbb
icebp
icebp
inc
push
push
cmpsl
aas
pop
adc
jnp
pop
ss
xchg
inc
cld
insb
adc
xchg
nop
in
adc
pop
or
nop
push
incl
jno
xchg
lock
dec
mov
pushl
jo
or
les
fmuls
inc
outsl
cld
jge
aam
add
cld
stos
mov
in
cmp
cld
inc
ljmp
push
mov
push
clc
dec
arpl
pushf
sti
xchg
xor
mov
jmp
inc
jecxz
mov
les
enter
cld
inc
pop
or
mov
sub
pop
add
fisttpll
loope
shrl
call
cli
adc
or
push
xchg
das
aaa
cmpsl
shrb
adc
aas
and
lcall
mov
decl
add
sub
jg
lods
sarb
sahf
sbb
not
pop
std
inc
stos
sub
imul
fdivrl
xor
popa
and
cmp
call
js
in
leave
aam
mov
or
mov
inc
cmp
cltd
bound
test
mov
inc
inc
xchg
mov
cld
or
test
cmp
push
jp
outsl
pushl
lea
dec
rclb
cltd
sarb
arpl
stos
and
jmp
cwtl
pop
jb
mov
push
nop
pusha
push
shlb
data16
insl
or
bound
xlat
xchg
stc
pusha
out
xor
xor
mov
xor
add
nop
mov
and
sub
popf
sbb
call
insb
loopne
and
leave
xor
or
mov
stos
orb
push
gs
xchg
fsubrp
inc
dec
mov
repnz
aaa
push
mov
fisttpll
lods
jmp
sbb
lods
mov
pop
and
and
imul
outsl
fdivrl
jnp
popa
mov
fdivr
call
aam
lret
pop
les
mov
push
lds
cmp
mov
hlt
scas
adcl
push
cli
dec
mov
cmp
addr16
mov
popf
xchg
add
call
adc
in
lock
pop
jb
pushf
clc
ret
sbb
xchg
cmp
mov
sub
decl
jle
lods
cmpsb
pop
lods
into
inc
or
into
hlt
xor
lcall
in
in
adc
pop
push
sbb
dec
mov
les
sub
aaa
std
mov
or
adc
push
dec
data16
mov
out
cli
pushl
faddl
sub
and
adc
loop
dec
push
mov
imul
add
mov
bound
push
outsb
mov
test
incl
ss
scas
mov
icebp
fcomps
insl
sub
je
adc
cmpsl
clc
call
outsb
imul
fstpl
ljmp
adc
imul
popf
push
push
jne
mov
or
xor
scas
mov
dec
pusha
and
aam
cs
pop
jbe
adc
pop
ss
add
sub
and
jne
ljmp
mov
fstps
cmp
jle
pop
stos
dec
stc
xchg
xor
iret
decl
inc
mov
xchg
ret
dec
push
adc
cmp
out
cli
into
mov
shll
test
les
test
or
xchg
mov
cmp
stos
and
mov
mov
popf
je
es
mov
push
add
add
mov
je
loop
repz
int
repnz
mov
mov
or
lock
jg
ljmp
bound
ja
pop
outsl
mov
aas
mov
ljmp
mov
jo
or
dec
sbb
dec
xchg
sahf
decl
imul
repz
push
jmp
mov
mov
cmp
decl
aad
pop
cli
rcrl
jb
jb
xchg
cmp
dec
add
shrb
mov
push
sub
mov
insl
jbe
add
inc
mov
push
pop
sahf
xor
mov
pop
loopne
decl
mov
lea
xchg
hlt
sbb
jne
xchg
adc
dec
fadds
or
or
push
nop
fwait
leave
out
cmpsl
mov
add
ja
dec
xchg
cmc
fstpt
xchg
pushl
aas
je
fldcw
sbb
xchg
in
xchg
xchg
lahf
lahf
mov
pop
adc
push
sahf
call
jg
inc
sbb
mov
pushl
push
xlat
push
mov
jo
loope
dec
mov
lret
fidivl
push
loopne
pop
mov
inc
cmp
mov
sahf
mov
sub
xor
dec
into
scas
sar
decl
add
dec
add
push
imul
in
mov
jmp
xchg
mov
ljmp
inc
sti
mov
test
incl
ljmp
lods
or
lods
sbb
pcmpeqd
sub
incl
shrl
jae
xor
jecxz
and
or
jnp
fisttps
jmp
inc
lea
incl
sbb
imul
mov
adc
cli
lret
jne
dec
pop
and
movsb
jl
cmp
loopne
push
pushf
fpatan
adc
push
jns
movsb
sub
pop
aad
jge
cmp
repnz
leave
icebp
xor
push
jo
dec
in
jle
push
pop
mov
loope
push
xchg
sbb
mov
sub
mov
in
ljmp
stc
fldl2e
xchg
mov
insb
xchg
cmpsb
jno
push
jnp
inc
aam
xchg
insb
decl
jns
sti
mov
pop
pop
adc
push
sub
pushl
int3
mov
filds
mov
push
lds
dec
popf
or
cmp
lcall
cmp
and
push
gs
xchg
ljmp
mov
stos
and
sbb
lret
sbb
sub
add
js
test
mov
cmp
pushl
repnz
rcl
dec
add
push
into
lock
pop
sbb
adc
mov
jg
mov
inc
jge
fsubp
das
cltd
leave
inc
scas
push
dec
ljmp
js
incl
call
scas
push
movsl
or
cmp
adc
add
xor
mov
std
out
cmp
pop
adc
cld
jns
sbb
arpl
mov
ljmp
aaa
pop
test
cmp
fdivr
fmulp
or
sub
mov
and
scas
add
dec
pushfw
push
push
lea
aas
dec
into
adc
int
inc
sub
mov
inc
adc
mov
cld
jb
cmp
decl
bound
pop
adc
out
sub
rep
test
jmp
aad
fistl
dec
cld
mov
jg
mov
in
mov
jle
mov
decl
pop
ja
dec
inc
adc
repnz
or
gs
push
and
lock
call
xchg
arpl
iret
ljmp
sarb
iret
xchg
arpl
ret
mov
lcall
push
decl
imulb
stos
lock
pop
cmp
lods
cmpsb
mov
icebp
incb
xchg
or
cwtl
xchg
add
push
pushl
or
stos
hlt
je
pop
pop
pop
jns
jns
in
cld
cwtl
add
lds
call
daa
fldt
push
jns
push
push
into
cltd
xor
popa
mov
inc
and
add
sub
sbb
ljmp
lea
jge
inc
pop
sub
pop
cmp
push
inc
icebp
dec
cmp
pop
iret
int
dec
jb
ja
outsl
push
out
or
data16
ljmp
xchg
js
sub
or
int3
fstl
cmpl
outsb
or
sub
rorl
into
js
mov
hlt
imul
ljmp
pop
jae
sbb
ja
cmp
in
imul
sub
icebp
pop
add
push
mov
and
lcall
mov
sub
or
and
scas
sub
call
mov
adc
xchg
dec
gs
sbb
sbb
push
repnz
rorl
lcall
xchg
in
xchg
xchg
popa
sub
sbb
add
sub
fldcw
cwtl
cs
arpl
repnz
ret
je
daa
mov
mov
in
mov
dec
jmp
mov
inc
lds
and
jmp
push
jnp
pop
lret
gs
mov
mov
inc
adc
inc
or
stos
inc
in
or
dec
nop
mov
jecxz
inc
cmp
xchg
mov
out
mov
mov
sarb
pop
in
inc
dec
movsl
fcoms
push
sub
and
decl
sbb
xor
sbb
jle
lret
jae
push
push
icebp
xchg
lahf
mov
fisttps
scas
nop
jge
push
leave
mov
push
or
jmp
sub
addr16
dec
cmp
pusha
inc
jb
mov
stc
or
pop
xor
xchg
cwtl
decl
fidivl
icebp
test
bound
repz
jo
inc
jmp
popa
dec
movsl
jbe,pt
xor
sar
pushf
mov
pop
and
shl
out
bound
aad
xchg
cmp
outsl
call
fs
mov
lods
dec
jmp
fs
fwait
ds
mov
mov
pushl
fwait
loop
in
dec
inc
adc
imul
shrb
inc
mov
dec
decl
daa
pop
and
fisubs
aad
adc
mov
add
or
fadd
ljmp
lods
aaa
fdivr
mov
in
adc
push
mov
sarb
hlt
ljmp
popf
cmp
sub
fistpl
mov
aaa
jae
sti
xchg
lcall
jp
pop
bound
enter
fwait
dec
mov
xorb
xchg
cmp
sub
dec
ds
std
mov
sbb
fsubs
push
sti
subb
pusha
inc
xchg
jecxz
pop
rcl
sbb
jns
or
inc
jle,pt
in
pop
out
imul
mov
lds
jmp
cmp
cmpsl
sub
das
adc
ljmp
fdivrl
pop
dec
adc
arpl
fisttpll
jge
call
jns,pt
outsb
sahf
xchg
call
inc
xchg
movsb
or
ja
ss
sahf
fsubrs
mov
hlt
es
popa
dec
int
mov
pop
popf
or
cmp
fcoml
cld
push
sub
xchg
xchg
adc
fbstp
mov
adcb
outsl
mov
adc
mov
daa
inc
cmp
adc
or
enter
incl
adcl
icebp
fildll
mov
mov
loope
dec
sub
xchg
call
push
push
repnz
ja
push
dec
pop
inc
jl
imul
jne
dec
xchg
popf
mov
xor
call
pop
adc
lock
adc
repz
dec
mov
adc
dec
ret
dec
push
and
or
clc
cmp
loop
addr16
dec
pusha
es
stos
fcomp
ljmp
enter
cmp
xor
dec
les
mov
xorb
xor
mov
ficoms
out
out
push
ss
fwait
push
jbe
insl
dec
sub
rcrl
je
inc
dec
or
dec
push
jb
sti
imul
pop
test
in
rcr
incb
decl
daa
sbb
lds
pop
loopne
test
repnz
add
pop
out
inc
xor
and
dec
sub
sahf
je
fldcw
cwtl
notb
dec
jne
daa
les
ljmp
cmpsb
mov
xchg
and
inc
lret
fs
inc
mov
cli
daa
push
jecxz
and
mov
fcmovbe
inc
test
addb
adc
mov
test
outsl
call
leave
xchg
sbb
sub
sbb
cmp
inc
and
push
jl
inc
sub
std
mov
jmp
in
xchg
shl
jl
mov
adc
pop
mov
cmp
call
or
mov
fcompl
test
jg
fcmovu
repz
xor
inc
cwtl
sbb
pop
sub
add
xor
jmp
push
arpl
lcall
xchg
lret
lcall
imul
xor
dec
test
push
sbb
xor
insl
mov
xor
incl
hlt
push
jo
pop
lods
imul
jbe
int
scas
mov
stos
mov
mov
jb
or
dec
adc
cld
mov
mov
jmp
xor
call
loop
lea
sbb
push
cmp
or
add
cmp
sbb
scas
aad
dec
jo
lds
mov
jb
ljmp
sub
mov
mov
aaa
cmp
lds
repnz
push
dec
inc
pop
push
sahf
push
push
outsb
test
and
xchg
enter
aad
jecxz
sbb
icebp
cld
xchg
adc
jo
sahf
xchg
push
xchg
mov
and
decl
or
pop
xchg
xchg
ljmp
je
and
jo
cmp
jmp
sub
loope
inc
jg
mov
mov
or
mov
pop
jmp
cmpsb
mull
movsb
lock
outsl
lds
sub
ja
push
lcall
add
inc
fcmovb
ja
jnp
pop
incl
fwait
or
testl
sub
mov
sbb
je
sub
push
fdivr
fmull
mov
and
inc
push
pop
mov
pop
xchg
loopne
or
mov
or
pushl
std
xlat
and
mov
push
sub
lahf
je
inc
pop
je
in
ljmp
jbe
ret
rcr
sub
ror
imul
jge
xchg
push
clc
lea
pushl
icebp
pushl
xchg
mov
mov
xor
arpl
sti
sub
rcrl
xor
dec
sbb
int
ret
lds
out
xor
pop
mov
jmp
sar
lcall
repnz
dec
out
sbb
and
cltd
shr
jno
sub
idiv
std
mov
decl
mov
pop
push
push
jl
sub
sub
push
aas
mov
lea
aam
inc
mov
in
bound
cmpsb
cld
push
mov
call
scas
fsubrl
aad
xchg
inc
popf
movsl
mov
mov
lret
add
cmp
mov
scas
pop
sbb
xchg
jge
test
jecxz
aad
inc
sub
sbb
fisttpll
cmp
sub
adc
mov
cmp
mov
icebp
pop
push
push
stc
jno
pop
mov
test
js
xor
pushl
push
dec
lea
dec
test
pop
bnd
inc
out
scas
arpl
ljmp
bound
mov
pop
add
das
push
fsubs
ret
push
out
xchg
push
outsl
sbb
dec
push
iret
xchg
incl
mov
mov
fimull
inc
adc
xor
push
andb
jmp
imul
mov
sbb
mov
sub
xor
incl
frstor
shlb
mov
ljmp
cs
push
sbb
andb
xchg
pop
imul
ss
jmp
push
lods
sbb
lret
and
pushf
push
sub
out
mov
lcall
ljmp
out
cmpsl
pop
lock
sti
cmp
dec
mov
fldcw
inc
jge
push
or
addl
addr16
test
ljmp
mov
adc
pop
sbb
cmc
rcr
cltd
mov
sbb
push
pushf
ljmp
cmc
add
xchg
jg
jmp
push
xchg
push
les
fstp
lret
inc
jg
push
mov
sbb
pop
dec
xchg
ds
sub
mov
shrb
filds
bound
mov
mov
call
fcoms
punpckhdq
clc
call
and
and
mov
fildl
iret
loope
mov
inc
fldt
incl
add
int3
xlat
repz
roll
cld
cs
jp
sub
lahf
cmp
loope
fmulp
lea
call
fwait
das
repz
hlt
add
sub
ljmp
cmpxchg
dec
mov
lock
adc
cmp
inc
sarl
fs
ss
in
ss
lock
incl
lahf
mov
xchg
cmp
in
mov
dec
mov
into
js
and
in
pop
aad
out
movsl
stos
sub
dec
cwtl
inc
xor
insl
fdivrp
cmp
mov
push
ss
jge
inc
loope
pop
sahf
dec
pop
aas
call
les
jae
mov
mulb
sub
cli
mov
dec
rclb
outsb
cmpsb
jbe
mov
xor
repz
inc
popa
lcall
xor
call
xor
sub
inc
mov
enter
stc
cltd
mov
dec
inc
scas
sub
lock
push
mov
rcll
xor
aad
push
dec
adc
cmp
jle
insl
adc
cli
jg
imul
out
test
mov
and
inc
enter
add
fmuls
into
dec
dec
xchg
pop
out
xchg
cmc
ljmp
cmpsb
dec
orb
xchg
jmp
loop
stos
jmp
or
fidivrs
adc
mov
cld
jmp
inc
out
cli
jg
dec
call
add
roll
mov
dec
mov
call
loopne
push
dec
jmp
sti
cmp
dec
jb
xchg
mov
out
push
jnp
xor
call
mov
mov
pop
adc
jns
movsl
add
or
lock
mov
out
add
stos
inc
pop
ret
jo
std
pop
push
pop
rcrl
cmp
ret
enter
dec
jle
das
xor
imul
inc
mov
and
and
pushf
imul
stos
std
fidivs
jg
hlt
inc
ja
lcall
mov
pop
dec
jns
je
pop
sub
je
xchg
cltd
ret
ljmp
data16
mov
lods
dec
roll
pushl
andb
push
xchg
jns
js
cmp
cmp
cmp
fmuls
xchg
cli
inc
adc
std
sar
jl
jecxz
bound
add
dec
mov
in
je
in
sbb
jo
ret
lret
js
adc
add
jnp
incl
pop
ds
xchg
out
outsl
add
fadd
les
loop
dec
jmp
jmp
mov
lods
lret
lret
jmp
scas
aam
push
lcall
add
sbb
sbb
lcall
mov
fstl
cmpsl
icebp
hlt
icebp
push
lahf
aam
inc
cmp
icebp
jnp
mov
ret
pop
mov
fistpll
rorb
lcall
rorl
fwait
ljmp
xchg
lahf
inc
mov
push
jp
jo
sbb
arpl
mov
leave
xchg
repz
xchg
dec
mov
pop
xchg
fisttps
inc
push
xchg
leave
sbb
jmp
push
cli
pushl
push
imul
sub
out
popa
cld
lock
or
mov
call
in
sub
lcall
push
pop
mov
inc
test
outsl
test
cmpsb
xchg
sub
ljmp
mov
dec
in
cs
xor
pop
adc
push
stos
out
fdivrl
adc
sbb
mov
scas
adc
call
push
test
out
pop
mov
jg
push
ljmp
inc
inc
shlb
push
fisubs
lea
jp
loop
push
xchg
incl
cld
lcall
push
mov
stos
sbb
lock
nop
add
incl
cmpsl
jb
mov
fisubrs
add
cmpsb
in
lret
jp
and
ljmp
ja
jae
mov
pop
arpl
ja
orl
in
jns
lcall
scas
add
scas
inc
je
jmp
cmp
dec
xchg
insb
inc
adc
popf
nop
rclb
xchg
xchg
flds
out
inc
and
fsubrl
fwait
mov
out
sub
mov
add
jne
add
pushl
cld
in
pop
jp
rcrl
mov
js
pop
fsts
mov
das
mov
add
pushl
jge
dec
adc
jns
outsb
sbb
rcrb
and
loope
cmp
incl
pop
sub
inc
sarl
xor
aaa
lock
or
decl
jb
jmp
dec
jp
aaa
push
adc
mov
mov
mov
mov
xchg
mov
lahf
mov
cmpl
xor
xchg
jbe
stc
jmp
push
bound
sub
sub
fdivs
movsb
mov
fimuls
jg,pt
je
call
or
fwait
jns
adc
ret
and
push
pop
mov
incl
inc
lcall
sbb
push
push
ja
es
cmp
mov
dec
cltd
xchg
inc
ljmp
ljmp
icebp
xchg
lods
lcall
jg
xorps
sub
add
test
pushl
mov
call
and
sbbl
adc
sub
movsb
jg
rolb
fld
sub
cmp
jbe
xor
cmp
cmp
mov
cmp
ljmp
push
je
int3
or
clc
enter
jmp
fdivp
cmc
or
adc
xchg
or
push
and
pusha
roll
dec
fisttpl
cmp
mov
decl
hlt
imul
xchg
or
mov
add
daa
cmp
dec
sub
sub
cmc
ljmp
stos
cmpsb
test
ret
mov
push
and
xchg
ret
dec
es
jg
scas
and
push
push
out
jo
test
loop
sub
mov
xor
lock
mov
jmp
sarb
sbb
xchg
daa
mov
test
pop
das
cmp
add
inc
inc
and
sub
subb
clc
xlat
loopnew
aaa
test
jb
in
lcall
int
dec
js
test
xorl
mov
scas
out
and
mov
pop
cld
push
nop
or
lods
adc
pop
sbb
fisttps
jns
inc
inc
pop
insl
inc
mov
lret
xor
xchg
adc
inc
ljmp
je
jno
das
je
fmull
mov
xchg
ljmp
xchg
jne
xchg
mov
or
push
mov
jne
shlb
mov
jecxz
dec
sbb
call
outsb
addr16
inc
adc
imul
dec
mov
icebp
das
aad
js
cmp
jg
popf
lcall
dec
xor
jne
movl
xor
insb
lcall
nop
cmp
mov
push
aad
fs
pop
add
push
push
cmovl
sub
cmp
cld
roll
pushf
jmp
mov
mov
or
movsb
and
pop
in
les
negl
in
iret
std
push
mov
scas
inc
dec
sbb
fwait
pusha
push
lahf
clc
ret
sub
das
shll
movb
pop
sar
decl
add
aad
dec
mov
xchg
pushl
xor
mov
incl
orl
sub
xchg
psubw
jne
cmp
jnp
das
add
das
push
cwtl
and
push
jle
and
mov
jno
das
sbb
decl
scas
jg
movl
jl
imulb
cmp
xchg
pop
mov
jg
push
notl
pushl
or
jb
dec
adc
es
pop
movsb
sahf
lret
sahf
mov
decl
inc
sub
fisubs
out
popf
ret
lcall
sarb
pushf
shll
int
add
lcall
add
add
add
imul
leave
jb
js
fcmove
push
sti
fld1
add
dec
mov
out
cmpsl
shl
mov
or
stos
cltd
adc
stos
push
lock
mov
std
lcall
mov
mov
sub
add
xor
outsb
sar
adc
lea
mov
push
imul
in
mov
mov
mov
xor
cld
loopne
or
inc
jmp
xchg
jne
xor
stos
test
inc
lods
std
pop
loope
sti
inc
pop
inc
or
inc
jb
lea
xchg
add
cld
fbld
cmp
test
bound
addr16
sbb
loop
lret
mov
adc
cld
pushf
mov
ljmp
mov
fidivrs
adc
shrb
dec
push
out
je
imul
jns
dec
sarl
mov
divb
pop
pusha
f2xm1
mov
cmp
lds
mov
and
stos
dec
mov
test
and
mov
lcall
cmpsb
add
sti
icebp
out
lcall
cli
dec
and
mov
sub
fwait
mov
fidivrl
jecxz
stos
cmp
lret
pop
mov
in
scas
jno
lcall
lods
jl
jo
decl
mov
cmp
call
insl
mov
and
dec
add
decl
cmc
jp
inc
add
dec
fs
push
shrd
cmc
test
sub
push
fsubrl
test
imul
add
popa
aaa
sbb
pop
icebp
pushl
loopne
scas
xchg
pop
push
pop
fisubrs
sub
sub
jb
jp
std
outsl
cmp
and
cmp
sar
sub
jg
clc
inc
push
jns
mov
sti
dec
shlb
ret
xor
fcoml
or
jg
mov
mov
cmp
inc
pop
inc
cmp
loop
jno
ljmp
adc
mov
xchg
push
lock
stos
test
pop
vpcmov
lock
lock
enter
or
mov
push
in
in
hlt
shl
and
mov
pop
inc
jae
xor
jo
lcall
cmp
loopne
int
or
lcall
lcall
int
mov
in
lret
cmp
mov
or
mov
xchg
jo
in
and
les
jmp
cltd
in
mov
jne
loopne
add
into
push
adcl
jmp
pushf
push
adc
jae
mov
sub
aam
sub
jg
rclb
test
push
imul
inc
aad
push
sbb
sbb
jo
lcall
inc
xor
test
repnz
imul
xor
and
fldenv
mov
fldenv
mov
jbe
call
ljmp
pop
jge
mov
push
rcrl
jo
cld
cmpsb
jp
filds
mov
cli
pop
sbb
mov
int
repz
push
js
gs
mov
xor
push
movsb
and
mov
jle
out
int3
loopne
jbe
and
movsl
and
dec
mov
cli
sbb
test
mov
mov
pop
inc
mov
jmp
stc
lods
scas
inc
insb
decl
icebp
jbe
sbb
mov
lret
add
in
inc
inc
push
push
lret
mov
popl
sar
or
push
cmpsl
push
dec
push
inc
loope
mov
std
add
xchg
lcall
pop
jmp
aam
adc
push
je
ja
cli
out
jne
inc
pusha
xchg
fwait
adc
sub
pushf
mov
mov
sub
mov
sbb
add
lcall
sbb
mov
mov
mov
mov
clc
ljmp
scas
add
inc
icebp
mov
lds
xor
lcall
out
xor
incb
gs
sbb
fiaddl
scas
and
sbb
test
xor
push
aad
sbb
adc
lcall
inc
sub
mov
push
cld
mulb
jne
mov
push
pusha
push
incl
inc
clc
popa
das
ss
jle
adc
lods
dec
mov
jge
sbb
arpl
je
addr16
leave
pop
arpl
test
cmpsb
mov
jle
mov
dec
jge
adc
inc
jmp
mov
je
insb
cmc
mov
adc
inc
pop
les
clc
out
dec
pop
cld
mov
bound
push
inc
fbstp
mov
mov
cmc
incl
sbb
std
fs
incl
cmp
mov
xor
mov
jo
add
pop
push
movsl
xor
js
xor
addr16
fisubrs
adc
add
js
xor
add
rorb
xchg
mov
repz
arpl
push
int
push
idivb
or
and
dec
sbb
sbb
cmpsb
mov
pushl
mov
lods
adc
push
adc
mov
loopne
outsl
add
in
pusha
in
lcall
pop
daa
mov
fcompl
outsb
in
mov
cmpb
mov
inc
mov
decl
jg
js
test
cmp
xor
test
shrb
call
xchg
sub
push
test
in
sub
insb
scas
cmpsl
aaa
test
loopne
inc
frstor
ds
mov
fistps
std
pop
shr
shll
push
inc
cmp
ljmp
add
aad
sub
xchg
add
clc
jl
dec
mov
decl
pop
test
xchg
or
imul
nop
cltd
push
jge
mov
jecxz
dec
fimull
mov
pushl
push
sbb
cmp
enter
add
outsb
popf
lods
pop
xor
cmp
pushl
fmull
int
xor
aas
xchg
movsl
and
inc
xchg
sbb
xchg
lods
shll
decl
aad
insb
sahf
mov
mov
out
clc
aaa
cmpsb
and
jnp
lret
fnsave
cmp
mov
dec
jmp
jmpw
fildll
xor
fwait
das
inc
pop
mov
std
subl
lods
repnz
push
sbb
stos
out
jmp
ds
mov
xor
mov
andb
mov
or
lcall
nop
mov
xchg
sbb
or
jno
mov
lret
sbb
loopne
and
ljmp
sub
xor
and
cmp
inc
das
xchg
and
mov
enter
jg
repz
nop
fwait
or
or
adc
jbe
icebp
loopne
xlat
in
mov
jg
pop
push
imul
aaa
outsl
popl
dec
dec
hlt
std
negl
and
dec
sbb
in
test
pushf
mov
jb
fcomip
ljmp
mov
rcr
int3
xor
cwtl
popf
sbb
icebp
fwait
pop
pusha
cld
cmp
insl
imul
mov
xchg
or
push
jbe
jl
das
mov
xchg
ret
sub
cmp
repnz
add
in
paddusb
lea
mov
xchg
or
dec
outsl
mov
push
lds
push
adc
loope,pn
loop
roll
ljmp
scas
inc
dec
cmp
add
pop
sbb
aaa
xor
or
aad
call
clc
ljmp
xor
adc
mov
adc
dec
inc
leave
sbb
bound
movsl
repz
out
mov
daa
jmp
mov
fistl
mov
clc
pop
pop
push
sbb
lret
and
push
jmp
shl
outsb
cmp
mov
dec
mov
adc
sti
sahf
dec
pop
loope
test
orl
cmp
xchg
insb
cwtl
push
add
cmp
sti
cmp
mov
push
jp
mov
xchg
bound
inc
xchg
dec
lea
mov
xor
fidivrl
jo
sub
fucom
in
aad
xchg
xchg
popa
mov
push
sti
stos
std
pop
int
mov
sub
test
xlat
push
inc
das
mov
xchg
push
cmc
test
dec
pop
add
call
push
mov
cmp
ror
sub
mov
or
cmpsb
rcl
push
cmc
mov
aad
enter
mov
fmuls
insl
jno
mov
sbb
ds
or
jl
enter
mov
mov
push
mov
sbb
push
sub
sbb
loopne
lds
cld
call
cli
js
lods
mov
inc
adc
xchg
or
jb
clc
ljmp
push
add
jl
daa
lods
imul
push
pop
jb
ljmp
cwtl
andb
fwait
push
xchg
xchg
xchg
or
ss
stos
and
add
xchg
in
sbb
mov
sub
push
incl
sahf
mov
and
push
push
inc
xchg
cmp
imul
fstl
lcall
xlat
popf
inc
add
stc
inc
pop
adc
arpl
jg
xchg
shlb
decl
insl
std
mov
adc
and
in
xchg
pushf
fstpl
push
in
icebp
pop
imul
mov
pop
xchg
cmp
incl
mov
cmp
out
dec
sti
movb
jnp
or
adc
or
test
cmpsb
mov
aas
out
ljmp
inc
jno
lcall
repnz
mov
add
insb
cmc
call
imul
adc
pusha
leave
ss
mov
mov
addb
scas
addr16
les
xchg
popf
push
dec
mov
mov
aam
adcb
jp
pusha
cld
shrl
stos
sub
inc
sub
xchg
incl
and
bound
ret
and
test
icebp
and
in
lret
lret
hlt
decl
lock
ret
jecxz
or
pop
push
pop
ss
lea
aad
sub
mov
adc
or
xor
dec
test
inc
add
popf
int3
push
sar
pushl
ljmp
or
dec
hlt
sarl
inc
enter
push
lcall
jae
xchg
inc
arpl
jmp
cmp
add
mov
sub
push
sub
sub
sub
inc
cmp
xor
sbb
cli
jg
inc
xchg
add
sarl
mov
iret
jno
or
jne
or
pop
cmp
ljmp
jne
enter
mov
sub
jo
imul
jns
jmp
jmp
cwtl
fwait
jmp
int
xchg
mov
cs
pop
mov
sbb
popa
sub
mov
ds
or
jno
and
mov
add
jg
inc
in
cmp
mov
iret
lahf
fiadds
xor
fdivr
pushl
cmc
mov
sub
pop
mov
jle
and
dec
std
inc
js
lods
xchg
or
or
cld
cmp
insl
imulb
cmp
nop
sub
sub
sahf
xchg
cmp
fmul
in
insl
mov
pop
in
test
movsl
pushw
arpl
out
dec
ljmp
sar
inc
out
mov
xchg
pushf
jg
sub
movsb
test
jmp
jo
mov
movsb
sbb
lock
xchg
popf
push
push
outsl
lcall
test
lods
jp
mov
push
rorb
repz
sub
cli
out
arpl
mov
inc
lock
les
pop
pushl
scas
jbe
dec
out
lods
push
jg
inc
jl
loopne
xchg
xchg
hlt
outsl
pop
test
stos
call
loopne
jnp
cmp
push
rcl
cmpsl
lods
call
sbb
in
sbbl
sar
mov
sub
adc
rclb
add
icebp
ja
sub
call
lahf
ljmp
cmp
repz
stos
or
ss
call
loopne
adc
fidivs
jns
inc
repz
pop
lahf
xchg
idivb
jl
xor
push
inc
ss
pushf
or
add
stos
negl
fs
decl
sti
dec
pop
leave
icebp
pop
rcrb
jg
hlt
dec
sub
pop
fcom
push
shll
push
decl
sahf
cmc
test
std
push
mov
fimuls
cmpsl
fidivl
loop
mov
mov
jmp
xor
lret
xchg
mov
mov
jecxz
daa
mov
add
int
call
jnp
lods
mov
into
fcmovnu
or
stos
lret
xchg
mov
pop
cmp
mov
loope
mov
push
and
orb
cmp
dec
cmp
mov
jl
mov
es
xor
dec
inc
subb
das
out
rcl
incl
pop
cmpsb
enter
cmp
lcall
movsb
fucom
sub
ret
jl
rcl
loop
in
fiaddl
xchg
cmpsl
repz
mov
daa
mov
popa
xor
ficomps
subl
jmp
jb
mov
xor
ffree
xchg
sub
jecxz
xor
xchg
out
sub
rcr
imul
fildl
mov
cwtl
loope
jg
inc
fsubrs
out
iret
adc
ror
stc
lcall
ljmp
dec
pop
call
mov
aam
lahf
mov
inc
out
jmp
push
cwtl
stos
movsl
es
jl
fistpll
pop
out
cmp
adc
es
and
divl
daa
int3
fdivr
or
ljmp
cli
mov
add
shlb
cmp
orb
mov
leave
dec
repnz
lea
cmpl
cltd
js
mov
test
mov
fldt
cmc
xor
sub
shr
or
push
mov
dec
jg
mov
mov
xchg
mov
js
adc
sub
inc
stc
aad
xchg
into
pop
jmp
imul
dec
pop
hlt
jg
sub
scas
aas
push
inc
xorb
sahf
sbb
dec
pop
jg
outsb
mov
dec
mov
cwtl
fisttpll
loopne
aas
and
or
aas
rep
ljmp
mov
pop
mov
cmp
cmp
add
pop
stos
xor
mov
cmp
lret
jns
outsl
int3
jge
ljmp
insl
aad
jl
push
lods
xchg
and
xchg
pop
popf
xchg
popa
mov
or
imul
pushl
fdiv
aas
cwtl
xchg
rclb
aaa
out
movd
stos
lcall
shrl
and
jp
shl
adc
sbb
adc
and
bound
decl
mov
nop
mov
mov
xchg
xor
in
xchg
imul
push
shrb
jge
mov
divl
out
je
ss
push
dec
adc
jg
lods
pop
xlat
adc
sbb
mov
call
in
outsb
addb
xor
stc
jp
mov
scas
aam
pop
dec
xchg
aas
cmp
lods
mov
add
enter
jbe
pushl
mov
pop
inc
stc
push
in
xor
and
push
xchg
jle
dec
movsl
repz
mov
mov
dec
ret
mov
jns
adc
sbb
xor
movsl
cwtl
pop
inc
pop
cld
decl
jne
push
jg
stos
add
out
jnp
pushl
adc
call
test
pop
and
pusha
js
decl
jl
lret
pop
dec
sar
jmp
xor
jno
out
xchg
cmpsb
les
pop
mov
dec
leave
and
std
push
loope
jg
inc
cld
scas
stos
jo
or
add
ret
stos
loope
incl
xor
and
lret
mov
add
inc
clc
mov
leave
mov
imul
in
outsl
sub
fcomp
mov
clc
inc
dec
stc
ljmp
xchg
mov
or
jb
pop
or
rolb
lret
call
nop
mov
stos
mov
ret
mov
mov
movsl
jbe
inc
ja
cmp
cmp
in
sbb
test
mov
cmpsb
cmp
sub
xor
call
push
inc
push
jmp
es
shl
int
mov
outsb
movsb
jbe
cmpb
mov
cmp
shll
xor
test
repnz
dec
sub
testl
sarb
pushl
fcomps
mov
mov
xchg
aas
pop
cmp
sar
loope
test
cmp
pop
push
sbb
inc
mov
movl
lds
adc
sahf
mov
test
jg
outsb
aad
adc
imul
xor
mov
call
subb
mov
mov
lods
mov
pop
imulb
pushf
filds
stc
popf
inc
mulb
inc
out
mov
push
jbe
mov
scas
xor
jbe
incl
jo
jbe
or
movsl
jnp
sahf
insb
sbb
lds
outsb
dec
loop
mov
rcl
mov
in
dec
cmp
jp
inc
jg
or
lock
ret
adc
push
push
push
outsl
inc
pop
inc
mov
stos
pop
cmc
lret
pushf
cli
push
jno
jle
xchg
jo
ljmp
pop
mov
xor
insl
mov
test
mov
pop
insl
inc
jmp
or
out
loop
mov
lcall
arpl
inc
mov
cld
add
mov
and
xchg
scas
gs
clc
incl
loopne
mov
leave
and
bound
mov
pop
push
dec
jg
jmp
es
push
int3
sub
cmp
lahf
loop
and
lcall
in
dec
mov
std
add
add
fistps
bound
push
and
inc
push
aam
mov
imul
jmp
mov
int
cmp
mov
inc
xorl
push
arpl
aad
inc
aas
sub
in
popa
mov
or
mov
repz
sub
xor
aaa
movsl
inc
adc
ds
sar
dec
mov
gs
mov
testl
xchg
shlb
jg
xor
and
mov
stos
decl
xchg
mov
fildll
sub
or
pushl
add
enter
dec
push
xor
pop
xor
xchg
cmp
adc
aas
jae
adcl
mov
jle
cmp
sub
push
xchg
fwait
mov
decl
inc
mov
repz
lret
in
jbe
xchg
dec
or
lcall
in
jp
hlt
out
clc
loopne
cmp
loop
mov
ds
gs
lret
outsl
adc
xor
js
ss
adc
push
push
mov
lcall
mov
mov
test
mov
mov
and
jg
out
xchg
push
cmp
cmc
push
push
pop
ja
subl
inc
stos
dec
sahf
shrb
in
insl
push
scas
push
push
pop
aam
jbe
cli
ss
add
cmp
inc
rorb
pop
lods
jbe
cwtl
cmp
push
scas
into
aas
lods
scas
movsb
cli
pop
mov
add
pop
mov
mov
push
jo,pt
adc
lcall
or
sbb
cltd
jmp
cmpsl
and
imul
movsb
or
dec
xor
jmp
in
or
call
or
inc
add
mov
add
mov
dec
in
cmc
xchg
subb
testb
ret
xor
mov
sar
int3
rcll
pop
sub
adc
outsb
sbb
jnp
and
mov
cmp
jno
xchg
test
push
shll
xchg
call
jle
dec
adc
andb
ds
cmp
gs
cld
inc
call
loopne
and
iret
push
cwtl
jne
mov
sub
call
mov
pop
inc
add
test
iret
mov
xor
scas
add
or
popa
repz
pop
cld
fcoms
inc
dec
ud0
ljmp
mov
push
aad
jecxz
gs
imul
and
js
cmp
fcmovbe
test
cmp
add
cld
mov
push
sub
nop
fisttpl
pop
stos
or
push
std
push
cld
mov
mov
fs
cmpsl
test
insl
faddl
mov
mov
stos
mov
or
inc
inc
push
es
aas
ret
mov
cmpsl
mov
enter
cli
mov
push
cmp
in
insl
mov
into
int3
clc
sarl
push
je
popa
sti
add
pop
mov
cmpl
roll
jmp
bound
jo
dec
fucom
pop
adc
scas
ja
int
jmp
xchg
pop
cmp
aaa
mov
xchg
outsb
mov
cltd
aam
test
mov
aas
push
fmulp
mov
sub
push
in
mov
xchg
icebp
popf
idivl
adc
jne
jnp
pop
jmp
lcall
in
pop
bound
mov
insb
sub
int
lcall
push
lcall
mov
in
pop
dec
outsb
adc
in
data16
jb
test
push
sar
lcall
cs
pop
mov
cmpb
mov
ror
push
and
jge
arpl
cld
call
scas
mov
or
pop
nop
jns
cltd
pop
jns
mov
dec
pop
jmp
sbb
jle
cs
lret
scas
or
xchg
jg
inc
pop
jl
aaa
or
lcall
daa
sub
and
sbb
daa
ss
cmc
fsubrp
test
pop
outsb
dec
and
in
add
pop
cmp
inc
add
ljmp
push
mov
mov
xchg
int
hlt
adc
shll
mov
lcall
testb
xchg
sub
pusha
pop
fistl
jecxz
sub
jg
into
divb
inc
movsl
dec
iret
pop
xchg
ljmp
lcall
inc
ret
enter
sbbb
sub
xor
jecxz
sbb
mov
push
xchg
xchg
and
add
mov
call
clc
icebp
lret
mov
lcall
stos
bound
mov
test
loope
or
movsl
nop
pop
inc
popf
fidivrl
loop
pop
jo
adc
test
sarb
push
fbld
or
fs
mov
pusha
fucomi
cmp
xor
call
dec
test
ss
sti
iret
sbb
lcall
xchg
out
pushf
jmp
fstpt
js
inc
enter
call
ret
fs
push
sub
mov
and
enter
pop
mov
push
test
fwait
xchg
je
aad
adc
or
mov
mov
gs
lcall
and
inc
es
xchg
pop
out
loop
cmc
cmp
jmp
das
popa
lock
xor
icebp
xor
cmp
fwait
mov
sub
std
fists
loope
lods
out
xchg
in
leave
fcomps
rclb
jmp
call
ret
xchg
sub
jmp
arpl
inc
mov
inc
or
pop
mov
or
loope
cmp
loop
xlat
dec
add
mov
mov
scas
sbb
mov
decl
sbb
dec
cmp
cmp
outsb
push
popf
loop
jb
div
sub
leave
xlat
out
int
cmp
dec
sbb
lret
hlt
xor
and
sbb
aad
cld
aaa
arpl
lcall
and
hlt
push
out
and
pushl
sbb
imul
lcall
sub
and
push
pop
jo
and
cli
sbbl
add
jno
xchg
and
jmp
sub
pushf
sbb
and
cmp
inc
pop
bound
inc
jo
lods
or
sbb
xchg
call
inc
enter
loope
jae
inc
inc
pop
pop
lods
cli
mov
xor
loope
out
push
mov
out
cli
jmp
les
mov
xchg
movsb
arpl
push
ret
call
loopne
sbbl
jo
scas
inc
pop
push
lds
dec
popf
sub
jmp
sbb
nop
add
xchg
inc
neg
mov
scas
daa
dec
add
push
test
daa
stos
addr16
loopne
mov
or
push
into
loop
addr16
xchg
into
ret
pop
cmc
mov
incl
leave
aaa
mov
mov
mov
dec
mov
lahf
ss
cmp
mov
incl
mov
bound
push
push
shrb
fsubrs
test
rcl
into
hlt
inc
lock
ljmp
push
in
push
popa
out
add
adc
or
inc
sub
xchg
out
das
sub
psubusb
dec
jg
push
loopne
addl
lock
clc
add
mov
fs
nop
xor
add
lea
push
push
mov
and
add
aad
jns
fidivl
outsl
das
sub
std
scas
clc
push
dec
loopne
inc
inc
or
cwtl
mov
dec
xchg
lret
cmp
push
push
ljmp
rclb
orl
add
push
adc
and
decl
std
les
sub
cmpl
sbb
test
clc
clc
arpl
mov
enter
pop
mov
xchg
cmp
adc
fcompl
xor
outsl
cmp
push
and
fst
aam
test
cmp
and
mov
and
outsl
push
mov
sub
push
insl
sbb
lcall
jnp
icebp
jbe
add
jge
pusha
in
pop
arpl
sbb
sbb
push
pcmpgtw
out
fisubs
mov
xor
mov
cwtl
jmp
lods
fs
lods
lcall
test
loope
pop
insb
sahf
pop
out
xor
ror
pop
pop
mov
imul
or
call
or
mov
out
lcall
mov
adc
ret
or
xor
push
test
add
pop
cmc
pop
cld
jb
in
push
push
jne
pop
mov
ret
cmpsb
fstpl
call
cmpsl
mov
xchg
ret
jg
ja
ja
sbb
sbb
pushl
adc
jmp
cmp
sub
dec
inc
add
rol
incl
sbb
movl
xlat
stos
and
fsubrs
imul
loopne
xchg
jne
jmp
icebp
sub
pushl
jo
push
and
lahf
cmp
jl
sti
in
nop
add
jecxz
mov
subl
inc
stos
cmp
stos
inc
mov
and
insb
pusha
pop
xchg
lods
fdivrp
in
push
mov
xchg
leave
out
sahf
lret
lock
cltd
scas
call
stos
roll
dec
mov
lcall
dec
add
outsb
adc
fs
sbb
mov
into
jnp
mov
cmc
andb
pop
stos
jle
je
cmp
jnp
mov
cmp
or
and
push
xchg
inc
movsl
pushl
xlat
push
out
mov
rorb
mov
xchg
into
rcl
xor
pop
dec
cmp
pushl
dec
ss
roll
jg
dec
out
push
xor
pop
adc
jb
push
lcall
xchg
adc
jne
mov
fnstsw
je
mov
jbe
std
test
pop
xor
out
fcmovu
and
fnsave
mov
push
sbb
dec
sub
test
dec
test
aad
sbb
sub
push
mov
sub
push
xchg
adc
dec
jg
test
mov
out
and
xor
inc
sti
mov
aad
outsl
clc
ljmp
sbb
rcrb
and
xchg
mov
pop
sub
push
and
inc
jnp
iret
icebp
flds
pop
xchg
jmp
iret
imul
ds
xchg
and
dec
sbb
ss
lret
lods
push
leave
pop
push
xchg
sti
mov
decl
and
dec
adc
insb
xchg
pop
es
mov
sahf
cmp
dec
leave
jl
std
mov
xor
sbb
int
cmp
and
enter
xchg
mov
inc
subb
cmp
inc
rorl
dec
xlat
ret
jecxz
test
cmp
in
mov
jbe
pushl
aad
aaa
inc
aam
dec
sahf
adc
sbb
or
faddl
mov
jecxz
stos
decl
dec
or
nop
mov
shll
lds
cmpsb
sub
out
stos
push
inc
dec
dec
nop
jmp
xor
push
or
cmp
leave
add
pusha
push
jo
ljmp
jmp
loop
sub
sarb
add
frstor
test
push
cmp
rolb
mov
test
sbb
add
shrb
cli
pushl
dec
xchg
loope
hlt
pop
xchg
push
or
lods
lret
jl
cmpsl
pop
arpl
imul
incl
sbb
mov
and
jecxz
jb
jle
rol
out
mov
mov
ja
cmp
inc
jo
or
fmuls
sub
sub
in
mov
cmc
call
push
push
stos
imul
mov
rorb
fldenv
lret
das
clc
cli
aad
inc
out
or
inc
and
xor
pop
push
inc
fs
xor
adc
in
push
sarb
cltd
adc
xor
sar
pop
cmc
cmp
lods
scas
jne
pop
dec
dec
add
mov
ljmp
add
jno
mov
pop
test
mov
add
push
dec
clc
xchg
in
push
cmc
pushl
mov
or
dec
jmp
sub
out
mov
das
lcall
and
imul
out
and
mov
cmp
push
cli
sarb
je
mov
int3
mov
xchg
int
or
add
incl
push
cli
dec
lods
cld
sub
das
aas
mov
arpl
pop
std
lret
arpl
jge
popl
in
pusha
imul
sub
mov
add
into
sbb
ja
add
sbb
decl
jecxz
mov
les
adc
sub
push
icebp
in
mov
stos
pop
xchg
dec
sbb
call
dec
addr16
dec
mov
faddp
adc
adc
add
fs
jg
incl
scas
lds
xchg
or
adc
fucomp
sti
xchg
int3
xchg
sbb
xchg
push
lock
jg
sbb
int3
xchg
mov
inc
xchg
iret
jle
xor
aas
lods
call
xor
xchg
xchg
ret
push
les
jne
xchg
inc
and
imul
fdivrs
pop
adc
mov
and
inc
inc
add
jge
data16
fstps
xor
icebp
insb
mov
shlb
jmp
xchg
aaa
and
xchg
lods
xlat
cmpsl
xorb
inc
mov
shlb
cmp
imul
imul
mov
add
inc
ljmp
loopne
or
shl
outsb
decl
or
mov
mov
xlat
in
push
inc
push
loope
test
xor
int
incl
bound
xlat
in
shlb
cld
or
fwait
subb
dec
int3
lahf
pushf
loopne
xor
jmp
add
fidivl
push
shl
push
in
out
stos
pop
sbb
sbb
inc
js
sub
mov
call
sahf
incl
cmp
pushf
inc
xlat
and
dec
mov
mov
dec
aam
jl
gs
and
push
xor
pushl
addl
out
andl
or
cmp
mov
call
mov
mov
cmpsl
scas
aaa
lahf
jbe
cmpsb
sbb
stos
sbb
mov
pop
cltd
in
mov
lcall
inc
xchg
inc
and
jns
imul
mov
arpl
or
lcall
pop
sbb
jle
fsubl
jp
aam
lea
sbb
xor
das
in
mov
mov
or
inc
xchg
cmpsl
sub
and
popa
mov
mov
aam
mov
sti
push
mov
push
cmp
int
lret
addr16
pop
and
dec
push
pop
push
cmc
out
mov
mov
mov
or
lock
add
cli
insl
jmp
cmp
ret
clc
cmpsb
icebp
test
ret
xchg
mov
es
dec
fistps
jmp
cmc
ljmp
addb
mov
mov
scas
adc
push
adc
adc
jbe
clflush
cmp
mov
sub
mov
decb
mov
xor
int
hlt
pusha
xchg
inc
cmp
mov
shrb
mov
int3
adc
adc
js
into
and
stos
fnstenv
dec
sub
xchg
mov
call
cmpl
in
dec
mov
loopne
fdiv
mov
bswap
cli
out
pop
cmpsl
pop
dec
cmc
jmp
fists
xchg
add
jmp
cld
insl
rcl
mov
mull
jp
jge
xchg
xlat
imul
fucomip
mov
jbe
adc
jbe
add
dec
inc
lds
jbe
push
dec
sub
mov
mov
jmp
cmpb
dec
ljmp
stos
fs
dec
dec
inc
or
mov
rcll
jae
push
mov
imul
fs
sub
xor
outsb
shll
mov
test
loop
mov
push
lcall
mov
sub
inc
out
lods
sti
push
insl
test
out
mov
jmp
sar
cld
call
mov
push
pusha
lods
push
outsl
xchg
lret
pop
daa
test
movsb
repnz
push
xchg
dec
out
xchg
mov
ljmp
jne
dec
xchg
fidivl
enter
xchg
inc
push
pop
adc
mov
cmp
clc
decl
sahf
inc
mov
js
jae
fmull
xchg
mov
aam
cmp
jo,pt
hlt
pushl
pusha
iret
clc
popf
cwtl
mov
aad
pop
outsl
hlt
ljmp
pop
mov
xchg
mov
dec
insb
pop
cmp
xchg
mov
adc
aad
ret
mov
dec
in
pop
fs
mov
pop
jecxz
call
popa
and
loopne
in
cli
xor
mov
lret
mov
add
xor
lods
push
push
jmp
xor
data16
and
in
cmp
cltd
inc
aas
arpl
jle
inc
jb
pop
or
rorb
add
std
mov
jecxz
jp
test
add
incl
call
adc
mov
jns
sub
jl
pop
pop
jp
xlat
push
ds
incl
push
dec
cmp
sbb
lods
clc
cld
lds
dec
inc
aas
mov
jmp
push
lcall
xchg
mov
sbb
pop
sahf
and
subb
popa
testl
cs
fiaddl
inc
or
daa
push
xor
inc
pusha
sbb
cmp
mov
ficoms
loopne
push
das
bound
sahf
pop
clc
shlb
push
ret
pushl
adc
add
fistpl
add
stos
push
fisubrs
and
inc
mov
jg
cmp
cmp
test
test
jno
ffree
lcall
popf
push
test
push
push
cmpsb
mov
mov
clc
cld
ljmp
cli
mov
adc
out
and
sbb
les
fsubl
pop
clc
ljmp
cmp
jb
fdivr
roll
mov
sar
sbb
fiadds
sub
popf
xor
jp
xor
jp
pop
mov
adc
dec
fnsave
dec
jne
cmpsb
popa
gs
call
add
addr16
mov
mov
sub
bound
sbb
stos
sbb
cmpsl
testl
mov
adc
stc
cmp
push
inc
scas
dec
xchg
shll
cltd
sub
jge
mov
shr
dec
es
xlat
dec
sarb
into
xchg
inc
aas
sbb
subb
add
pop
popf
addr16
and
and
add
out
in
dec
addb
negb
and
add
sahf
jae
and
ss
daa
ss
jo
mov
push
add
fidivrl
add
pop
mov
cmp
jg
inc
add
pop
mov
add
dec
orb
mov
lahf
pop
adc
or
inc
push
iret
adc
ret
and
scas
jle
test
jg
pop
iret
mov
add
nopl
push
ret
jns
scas
dec
les
dec
and
mov
lret
jg
push
add
xchg
movsl
push
daa
add
xor
dec
and
cmpsl
push
and
cs
push
movsb
outsl
subb
ds
and
stos
jg
aas
xlat
push
and
push
test
and
imul
push
jl
push
push
inc
pop
pop
add
mov
pop
std
mov
lahf
sbb
add
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
mov
call
add
imul
imul
imul
mov
pushw
push
or
mov
jbe
fstps
fdivs
dec
mov
push
mov
stos
pop
stos
mov
inc
jb
ss
add
jo
mov
push
mov
jno
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fidivrs
mov
jge
mov
xorb
ljmp
ds
in
movsb
push
add
mov
add
push
jae
shlb
mov
adc
push
push
add
jne
mov
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
out
mov
cmp
data16
inc
iret
mov
aaa
add
push
push
shlb
push
lret
stos
aas
add
ja
mov
jge
push
push
xlat
jne
add
ja
insb
jae
jo
aad
push
xlat
ja
js
push
lahf
fnsave
push
jp
jp
inc
push
fidivrl
adc
jns
ja
fldl
push
ret
jmp
ljmp
push
xchg
sub
xchg
in
xchg
sub
scas
mov
push
xchg
push
setbe
xor
dec
fisttpl
push
lcall
sti
push
cltd
cmp
cmp
pushf
cmp
popf
mov
popf
aas
push
sahf
inc
push
lahf
inc
lahf
jle
pop
mov
push
mov
push
imulb
movl
out
out
out
pop
lock
hlt
clc
stc
cli
sti
clc
lahf
out
cld
std
incb
jecxz
arpl
fldcw
inc
jae
add
imul
xchg
push
add
pop
add
pop
addb
add
pop
mov
mov
nop
scas
inc
mov
add
int3
std
fldl
add
or
add
add
jg
fisttpl
or
test
test
rsm
stos
cmpsl
or
push
sbb
imul
adc
add
add
pop
mov
femms
lods
lods
pop
mov
fstps
scas
add
scas
insl
lods
pop
pop
and
scas
lods
push
and
imul
pop
scas
sbb
jns
or
scas
scas
scas
scas
sbb
mov
mov
mov
mov
adc
cmp
pop
push
mov
test
and
popa
add
and
inc
rcrl
add
mov
sub
push
dec
mov
and
add
pushf
sub
jns
sub
sbb
mov
mov
subb
sub
lea
push
es
fwait
and
cmp
cmp
cmpsb
add
std
jg
mov
xor
xor
pop
or
or
jle
jbe
add
pop
pop
xor
xor
arpl
pop
das
push
mov
add
fidivrs
push
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
icebp
incl
sub
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
iret
dec
and
pushw
dec
dec
cmpb
decl
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
fwait
push
jle
ja
jns
dec
push
bound
js
mov
jg
imul
pop
adcl
sub
adc
mov
nop
or
scas
mov
test
scas
mov
jb
mulps
add
fcmovnu
repz
mov
cmpsb
push
mov
xor
xor
inc
push
ja
jb
cs
xor
mov
pop
mov
std
jbe
dec
sbb
and
mov
clc
jo
push
inc
mov
cmp
mov
inc
push
enter
xchg
jp
inc
iret
cld
fildll
popf
inc
mov
aaa
add
xchg
jno
lret
push
bound
pop
mov
mov
inc
jmp
push
sahf
mov
insb
add
outsb
add
xchg
xchg
pop
push
pushl
cmpsb
dec
push
dec
push
movsb
jae
add
incl
shll
outsl
pop
xlat
pushf
push
rorb
sar
imul
lcall
outsb
mov
out
push
mov
add
ja
sahf
jbe
fistpl
imul
jle
outsb
ds
push
add
and
es
js
int
xchg
mov
data16
shrl
insb
imull
ja
outsb
push
outsl
ror
push
mov
pop
jns
lret
jno
add
jge
push
jg
fiadds
fisttpll
lock
mov
in
mov
outsl
es
bound
out
arpl
push
insl
dec
cli
pop
loopne
iret
sahf
mov
jb
sub
xchg
in
push
jle
int
cmp
jecxz
or
int
pop
sti
push
aad
push
divb
fildl
adc
push
xorl
sbb
sbbl
mov
roll
test
test
sbb
test
in
mov
add
xchg
nop
and
out
xchg
in
cmpb
push
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
outsl
mov
in
cmc
sahf
xor
lcall
push
cmp
aam
pop
jg
and
push
cmpsb
scas
jo
test
sahf
add
mov
cs
stos
into
shll
insl
roll
int
mov
mov
sarb
jl
sarl
xchg
pop
push
jle
data16
add
lods
add
hlt
cs
dec
out
je
add
xchg
dec
daa
push
and
sub
mov
mov
femms
or
or
jnp
das
sbb
es
push
adc
push
add
incb
adc
adc
ds
add
dec
sti
test
sbb
mov
sbb
mov
testb
mov
add
and
pop
sbb
mov
mov
loopne
ds
xor
cmpl
and
pop
lods
add
cmp
aas
cmp
pop
and
cmp
roll
cmp
ds
jbe
sbb
inc
jle
loopne
test
xor
dec
fidivrl
cmpb
aas
ja
neg
adc
ds
xor
dec
inc
out
mov
test
mov
ds
bound
pusha
add
mov
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
inc
pop
dec
test
sbb
lcall
dec
xor
sub
sub
sub
sub
std
in
sub
dec
and
inc
mov
push
push
push
cmpsl
and
call
insb
insb
pop
push
push
pop
push
push
push
imul
fs
das
pop
imul
nop
cltd
mov
call
mov
xchg
aam
popf
mov
je
xchg
jns
jle
addl
rcll
hlt
jo
outsb
pushf
sti
dec
pusha
imul
rolb
aaa
inc
enter
add
add
pop
pop
mov
or
jl
push
add
cmc
repz
dec
xor
incl
jae
aas
add
xchg
pop
cmp
test
add
mov
add
mov
mov
mov
fnstsw
repnz
inc
add
repz
add
add
mov
push
in
lcall
jge
push
arpl
mov
push
push
ljmp
fsubrs
lret
js
into
xchg
add
mov
fistpll
loopne,pt
test
scas
xchg
js
in
and
out
xchg
mov
mov
nop
sub
sub
mov
fnstcw
push
sub
nop
sub
xchg
xor
mov
fucomi
xchg
xor
xchg
outsb
lcall
leave
jbe
data16
cmp
fidivrl
shlb
iret
adc
repz
lret
loopne
push
std
into
pop
inc
sub
fdivrp
neg
insb
mov
out
xchg
add
test
jg
jle
inc
add
add
and
adc
xchg
dec
dec
dec
dec
dec
add
pop
add
outsl
xchg
incl
push
dec
or
adc
cmp
adc
dec
or
add
fsubr
dec
dec
push
adc
add
or
pop
pop
mov
add
cmovg
inc
push
dec
sbb
fscale
dec
sti
inc
adc
inc
inc
adc
sbb
dec
add
fistpll
push
ds
cmp
cmp
cmp
jmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
inc
sub
insb
cmpsb
notb
mov
addb
mov
pop
mov
mov
push
add
outsb
mov
or
mov
outsl
add
push
mov
sbb
add
mov
cmpsl
mov
and
jbe
add
pop
nop
or
adc
jmp
ret
sbb
incl
add
push
outsb
sysret
mov
es
xor
andl
ja
cmpsb
pop
stc
sysret
in
jo
leave
leave
lock
hlt
sbbl
jg
sbbl
mov
xor
add
or
jg
lahf
test
add
into
jg
cli
shlb
add
inc
test
mov
jg
sub
repnz
push
xor
add
xchg
jg
mov
mov
roll
das
sti
mov
jle
push
leave
scas
inc
dec
sbb
pop
jo
jg
xchg
orl
push
add
loope
idivb
mov
cld
jg
mov
and
jle
cmpsb
std
bound
adc
jg
bound
into
jg
mov
nop
pop
jg
xor
and
and
add
add
data16
arpl
movb
sar
inc
or
lods
call
js
push
dec
xor
or
dec
adc
mov
orb
jg
rcrl
inc
add
adc
jg,pt
adc
jbe
inc
bound
adc
and
sbb
scas
incl
add
enter
jmp
lods
jle
lret
imul
dec
add
add
add
adc
push
test
add
mov
push
lods
inc
addr16
add
add
popa
jbe
scas
inc
and
add
jg
test
jo
jg
and
inc
lret
outsb
jg
dec
adc
xor
inc
pusha
adcb
jg
dec
add
ss
pop
xchg
or
inc
dec
jg
or
mov
mov
mov
ljmp
fisubrs
imul
daa
aas
aaa
pop
pop
outsb
mov
add
pop
jle
js
shll
add
orb
mov
jle
sbb
add
test
jle
push
dec
xchg
popf
xlat
dec
testl
mov
push
comiss
daa
push
arpl
inc
insb
pop
push
mov
arpl
out
decl
xor
dec
inc
iret
xor
lcall
push
or
ljmp
dec
rclb
inc
push
jle,pt
jle
xor
push
fnsave
aam
push
fnstenv
add
enter
push
jne
pop
push
jbe
push
movsb
insl
inc
out
push
jnp
push
jp
fildl
js
dec
jbe
pop
pop
xlat
fadds
pop
mov
mov
test
es
push
outsb
inc
popf
push
daa
ljmp
incl
shlb
jle
dec
ljmp
outsb
ss
out
test
xchg
dec
ja
inc
cmpsl
xchg
call
test
jns
fiadds
inc
outsb
lahf
mov
push
mov
fisubs
sahf
inc
out
or
sbb
insb
fwait
int
cs
aas
popf
inc
push
pushf
cmp
mov
jb
cwtd
mov
push
xchg
xor
xchg
xor
sub
fidivl
nop
daa
ss
cs
in
ss
or
outsb
test
push
call
lcall
mov
jg
test
ja
xor
lcall
sahf
pusha
enterw
es
or
insl
xchg
cs
add
pop
ja
dec
push
int3
rclb
xchg
movb
movsb
call
imulb
mov
add
add
les
mov
in
mov
xchg
inc
outsl
movsl
add
movb
outsl
pop
add
movsb
aad
or
dec
pop
adc
aas
push
adc
iret
repz
mov
lea
jg
push
popf
push
imul
mov
sbb
test
push
mov
dec
repz
cmp
cmp
jmp
in
icebp
imul
add
sub
ljmp
mov
dec
out
imul
mov
pop
mov
mov
fisttpl
sbb
xor
cmp
add
dec
test
sti
out
cmp
and
add
sbb
incb
mov
insl
pusha
add
pop
xchg
inc
out
fwait
mov
add
xor
add
cld
push
fsubl
push
jmpw
adc
push
sub
rclb
mov
call
mov
push
inc
sub
cwtl
adc
incl
ljmp
loope
incl
inc
sub
ljmp
adc
and
pop
decb
sub
inc
mov
shlb
sbb
sub
sbb
scas
jmp
dec
sahf
fwait
outsb
decb
mov
inc
or
jmp
push
add
outsb
inc
inc
test
fidivl
inc
jle
adc
adc
sti
out
sysenter
xor
incb
pop
sbbl
inc
orb
jae
sub
iret
call
incl
or
xlat
cltd
inc
sbb
decl
sub
pop
lcall
mov
aaa
sti
push
std
pushl
dec
fildl
out
adc
push
pusha
add
mov
addb
push
xor
add
call
jg
and
dec
out
cli
pop
rorb
idiv
loop
sbb
dec
arpl
sub
incl
decl
jmp
fwait
cld
or
incl
fcmovbe
pop
divb
xorps
push
test
mov
out
push
shll
sarl
add
ret
jmp
push
adc
mov
ljmp
lahf
inc
inc
push
inc
imul
popf
inc
pop
inc
pop
mov
arpl
sahf
movsb
dec
push
stos
push
and
sahf
int
inc
cmpsb
dec
dec
inc
popf
mov
dec
mov
and
adc
dec
push
out
push
shrb
repz
outsb
shll
dec
lret
xchg
push
push
jb
dec
xchg
das
xor
das
push
iret
insl
fs
outsl
pop
imul
push
push
push
xchg
stos
and
ljmp
jmp
lcall
sbb
pop
add
repnz
push
jmp
mov
movsb
outsl
pushf
cmp
aas
decb
cwtl
xor
int
pop
lahf
push
inc
push
xchg
mov
sahf
dec
push
push
aaa
push
lcall
cltd
movsb
xchg
push
xchg
es
xchg
xchg
xchg
notb
sub
dec
push
xchg
pushl
xor
data16
fimuls
sbb
add
or
adc
clc
or
faddl
push
cmp
mov
push
jnp
jp
or
jl
or
xchg
jbe
jns
jl
push
jge
jg
lea
jbe
mov
mov
push
dec
push
dec
repnz
repnz
jae
pop
fidivrl
fwait
outsl
mov
push
mov
jnp
jge
hlt
in
add
int3
sub
negl
add
stc
mov
pop
add
sub
stos
outsl
lahf
or
jne
push
adc
adc
rep
fstpl
int
push
addb
jnp
lahf
dec
es
addl
mov
sysret
jg
and
xchg
fisttps
sub
iret
out
mov
cli
jmp
iret
fisttpl
idiv
sarb
inc
sub
jg
mov
icebp
test
insl
dec
pop
cld
inc
js
mov
fstpt
mov
icebp
out
jbe
adc
daa
jg
repnz
mov
ja
loope
xchg
mov
jp
es
xchg
pusha
or
inc
aaa
xor
stc
sti
cmpb
jmp
mov
cmp
jg
dec
in
sarb
push
movsl
pop
ja
shlb
jl
dec
and
jge
idiv
dec
and
push
lcall
push
fsubl
pop
pusha
and
pop
push
nop
sub
mov
sbb
decl
mov
ljmp
jne
mov
push
pop
push
pop
dec
mov
pop
or
xchg
aam
jne
mov
inc
push
dec
lcall
push
jns
add
sub
mov
jmp
xchg
jmp
mov
into
insb
mov
push
xchg
mov
loop
adc
ljmp
xchg
jmp
mov
lret
jg
out
mov
mov
push
jp
push
mov
or
jmp
xlat
push
cmovno
jnp
adc
loopne
repz
add
push
pop
sub
movb
xchg
adc
or
lret
add
ret
stos
loope
ret
inc
lahf
push
lock
adc
call
mov
repz
add
add
xor
pop
pop
push
sbb
push
sbb
es
jae
push
or
and
out
sbb
push
sbb
outsb
or
ljmp
push
add
inc
adc
and
inc
insl
sbb
lock
mov
push
xchg
push
sub
or
push
loop
and
gs
jo
add
lcall
aam
dec
std
push
and
and
cmpsl
dec
mov
cs
bound
cmp
shll
xchg
pop
add
dec
test
add
lock
inc
in
or
jmp
xor
popf
sbb
add
popa
imul
mov
pop
push
es
aas
add
add
mov
sbb
adc
rclb
aad
insl
adc
xor
push
add
sbb
movsl
ret
adc
xor
xor
test
bound
jo
faddl
in
jnp
rcll
popa
bound
inc
ret
je
jb
inc
stos
dec
xlat
adc
shll
or
sbb
push
add
inc
das
mov
lcall
add
adc
add
loopne
mov
bound
aas
and
pushf
es
negl
shl
lcall
lahf
push
inc
xchg
cmp
cmc
add
or
testb
xor
push
outsb
dec
push
outsl
xchg
in
mov
sti
xor
pop
sub
xor
fwait
and
mov
xchg
bound
pop
dec
insb
out
adc
testb
orl
loop
sbb
add
mov
jne
rol
popa
addr16
push
xchg
cmp
or
or
add
pop
and
inc
mov
adcb
add
test
fmuls
arpl
imul
xchg
pop
or
nop
arpl
push
mov
mov
xor
inc
sti
cmpsb
or
insl
pop
push
jl
inc
add
xchg
pop
pop
xorb
cmp
add
pop
mov
les
ret
add
adc
jnp
sbb
cmp
dec
rcrl
cmp
dec
in
and
insb
sbb
mov
rcrl
mov
jno
cmp
dec
xor
inc
xchg
add
pop
rcl
pusha
jbe
dec
outsl
dec
nop
nop
cmpsb
iret
jecxz
js
and
in
sbb
mov
sbb
adc
xor
jb
dec
mov
pusha
add
dec
push
cmp
imul
je
outsl
xchg
rcr
jnp
iret
adc
and
push
cmp
cltd
push
adc
xchg
xchg
mov
push
lods
mov
test
pop
test
jbe
lds
rolb
addr16
and
xor
add
mov
add
sbb
dec
push
fsubs
sub
xor
push
dec
cltd
loopne
hlt
fbstp
jae
xor
add
inc
scas
mov
adc
nopl
dec
das
insl
outsb
mov
xchg
inc
imul
add
jecxz
rcr
jno
pop
test
jno
and
loop
adc
mov
cmp
and
push
jne
inc
pop
or
ds
outsl
jae
repnz
loop
outsl
xchg
mov
sub
pop
adc
sub
dec
dec
ss
movsl
add
data16
loopne
movsl
mov
inc
arpl
mov
cltd
sar
subb
or
pusha
jge
aas
sub
xchg
pop
dec
pop
or
dec
mov
cmp
xchg
shll
or
cmpl
sar
push
inc
aaa
push
pop
sub
xchg
jne
arpl
adc
insl
push
or
mov
es
lds
movb
xlat
and
in
lods
imul
insl
lds
je
int
sub
pop
push
mov
inc
or
inc
cmp
rcpps
js
int3
js
or
jb
inc
inc
xchg
aad
shll
add
out
imul
mov
sbb
dec
in
jae,pn
sahf
daa
push
roll
sbb
jo
push
cld
sub
fnsave
fwait
push
test
enter
jno
or
shl
dec
inc
add
xchg
add
leave
fsubr
out
push
jg
jns
je
and
lock
push
jo
mov
and
and
push
les
push
ss
std
shlb
jb
add
push
js
pop
lret
xor
mov
adc
mov
or
sbb
inc
sbb
pop
and
and
inc
je
insl
dec
outsb
dec
std
hlt
add
push
and
mov
sub
push
push
pop
jnp
jl
in
add
pop
add
add
sbb
mov
dec
rcrl
sub
add
movhps
imul
in
lcall
push
movsb
pop
jb
loope
es
add
adc
xchg
lock
and
dec
imul
imul
and
shlb
push
loope
pop
out
test
popf
stos
inc
push
insl
adc
or
sub
cwtl
cmpl
arpl
adc
insb
push
bound
scas
cli
test
and
mov
outsb
xorl
sbb
out
xchg
arpl
out
jo
inc
sbb
mov
jo
rcrb
dec
jl
mov
and
or
mov
jmp
dec
push
pusha
call
or
xchg
in
sbb
jge
sbbl
mov
loope
lock
xor
and
adc
cmp
imul
movsb
and
inc
insb
sub
push
push
mov
inc
ret
inc
xor
mov
arpl
sub
mov
xchg
aaa
out
mov
ss
xlat
adc
xchg
xorb
adc
frstor
xorb
and
inc
enter
in
mov
sbb
sbb
adc
mov
mov
jbe
adc
addr16
arpl
adc
sub
sbb
mov
xchg
mov
dec
insl
dec
inc
push
adc
sub
jo
test
dec
cld
addr16
jo
adc
inc
lods
sub
jne
pop
xor
inc
cwtl
pop
jmp
arpl
mov
inc
add
sbb
mov
nop
fs
xor
mov
cmp
jns
test
mov
push
and
inc
cmp
and
jg
out
mov
cmp
jmp
pop
sbb
roll
aas
scas
inc
sub
adc
nop
shlb
lods
mov
xchg
jbe
enter
inc
dec
lahf
add
push
dec
test
push
mov
fdivr
push
inc
inc
int3
js
movsl
cmp
xor
push
outsb
movsl
addr16
cmp
arpl
mov
jnp
jo
pop
dec
mov
jmp
pop
mov
outsb
inc
test
pop
inc
ja
imul
and
lcall
sbb
sub
inc
cmpsb
dec
push
ss
push
xchg
test
dec
movsl
dec
sub
add
inc
imul
cwtl
mov
adc
add
test
mov
or
mov
add
test
pop
sub
popa
sbb
or
add
addr16
clc
add
mov
adc
negl
je
add
data16
pop
add
push
jnp
and
xlat
out
clc
dec
xchg
addb
jp
xchg
mov
or
rorb
add
cmp
and
add
inc
incl
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
