divb
in
mov
mov
inc
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
and
stc
out
aas
mov
test
je
cmp
add
and
jbe
decl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shll
pop
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
int
imul
xchg
scas
adc
mov
add
inc
jne
xor
cmc
sub
sar
inc
je
daa
ret
push
jg
mov
repz
adc
pushl
mov
or
fildl
add
test
icebp
mov
mov
call
pushl
shrb
cmp
fwait
cltd
fildl
mov
ja
divl
mov
add
andl
mov
clc
sbb
pop
push
sub
mov
hlt
cs
adcb
mov
adc
scas
hlt
mov
fcomps
sub
dec
sbb
jns
shlb
in
or
frstors
mov
hlt
or
pop
cmpsl
push
sbb
inc
mov
fwait
popa
xor
push
call
jno
add
out
push
sbb
loopne
pop
pop
outsb
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
sarb
xchg
and
ret
test
push
xchg
mov
call
lcall
dec
and
add
xchg
es
pop
xlat
mov
push
fisttpll
push
test
or
sbb
push
lock
or
ja
aad
jnp
mov
aas
fadd
jae
cmc
jne
cltd
push
pop
pop
push
jno
cmc
jmp
aad
or
push
push
sbb
outsb
or
sub
add
sbb
enter
add
push
mov
mov
aaa
ja
inc
pop
bound
std
pop
sub
lock
push
mov
cmp
add
loopne
or
jge
insl
sbbb
mov
push
lock
xor
mov
pop
ret
push
stos
pop
test
push
pop
jae
into
xor
jge
arpl
pop
inc
sub
fadds
sub
enter
jo
ds
push
xor
in
push
sbbl
jl
jne
pop
xor
lods
inc
test
call
js
mov
cmp
jg
mov
adc
loop
addr16
inc
ret
shll
and
pop
outsl
pop
xchg
dec
add
sbb
mov
sub
push
mov
idiv
loope
sar
xor
cmp
ja
adc
sbb
clc
add
push
push
mov
jmp
pop
scas
sbb
aad
adc
inc
add
jo
add
cmp
ret
push
push
jo
lret
stc
sub
adc
cmc
fsubp
stos
cmp
jle
mov
cmpl
or
push
fsubrp
sub
xor
jge
dec
cmp
outsb
fildl
jmp
cltd
xchg
add
push
test
mov
ret
enter
jg
push
push
outsb
push
hlt
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
call
mov
shll
mov
mov
or
inc
add
adc
lea
mov
nopl
adc
push
xor
fcmovne
pop
hlt
into
mov
aam
push
cmpsl
testl
fdivrs
cmpsl
mov
pop
adc
cld
fsubrs
jp
stos
mov
roll
outsl
or
or
test
jle
cmp
mov
orl
movsl
pop
aas
pushf
inc
add
icebp
sbb
movl
sbb
sub
out
test
repz
push
sarl
lea
cmp
jae
pop
scas
dec
js
sub
adc
aaa
cmp
andl
ret
and
hlt
adcb
adc
dec
js,pn
hlt
jg
adc
movsb
ret
rclb
clc
sbb
jb
orl
or
add
cmpb
add
loope
adc
xor
idiv
arpl
adc
adc
addl
fcmovnb
rcr
push
add
push
xor
push
push
push
mov
jge
mov
pushf
pop
mov
shrb
enter
call
add
cmp
fists
cmp
xchg
rorl
outsb
pop
int
les
jle
push
lea
js
pop
in
iret
hlt
ret
pop
cmp
je
or
or
mov
push
push
fdivp
sbb
ljmp
add
jbe
jo
push
or
into
and
add
add
xor
imulb
adc
addr16
dec
cmp
pop
repnz
mov
xor
push
push
clc
lock
jp
enter
push
mov
push
pop
pusha
rep
jae
sub
jno
mov
jns
dec
es
pop
pop
jmp
add
jle
cmp
or
pop
or
and
test
ljmp
push
call
loop
ljmp
pop
xchg
imul
les
add
fcoms
jnp
dec
cmp
je
cmp
aaa
and
sarb
mov
ljmp
mov
jmp
pop
call
mov
mov
mov
pop
arpl
and
and
inc
sub
cmpsb
ret
lret
aaa
scas
shl
xor
outsb
or
pop
pop
or
cmp
jne
ljmp
lcall
sub
jne,pt
push
push
aas
mov
inc
push
cmpsb
push
push
jl
adc
mov
mov
mov
mov
or
and
adc
pop
adc
and
mov
sub
push
or
or
sub
cmp
xor
adc
push
test
jl
or
mov
push
leave
xchg
leave
lret
adc
push
cmp
xor
push
loop
pop
lds
pop
sub
mov
ss
add
fbld
pusha
stc
push
or
dec
cwtl
iret
xor
push
push
and
adc
xchg
fwait
dec
and
dec
test
mov
sub
push
push
stc
jmp
popf
scas
mov
mov
retw
add
shll
sbb
sbb
or
add
push
stos
mov
inc
sbb
aam
mov
stos
out
jbe
jle
mov
movb
int3
adc
test
jl
sti
sub
cmpw
jne
or
mov
jmp
xor
dec
or
jp
daa
scas
sbb
ljmp
push
les
push
bound
in
pop
pushf
outsl
jp
push
pop
jmp
shr
in
outsl
out
sarb
je
dec
je
add
dec
jmp
mov
sti
jmp
mov
adc
in
add
push
mov
vminps
outsl
leave
push
mov
mov
loope
sti
std
sti
imul
or
mov
hlt
or
xchg
in
addl
sub
xor
sti
es
sti
test
pop
pushl
push
mov
sbb
mov
push
lock
mov
outsl
pop
xchg
decb
jb
repz
cmp
test
sbb
xchg
repnz
mov
cld
jno
mov
mull
push
mov
sub
dec
add
dec
add
inc
add
dec
in
cmpsb
add
sbb
ret
je
incl
addl
jg
mov
and
xchg
test
nop
mov
cmp
push
mov
pop
sbb
pop
mov
inc
mov
pop
adc
add
pop
cmp
pop
push
adc
outsl
cmc
xor
pop
jns
leave
ret
roll
mov
adc
pop
leave
mov
sbb
push
adc
mov
and
ds
sub
xor
dec
push
or
adc
dec
roll
clc
in
in
outsb
jnp,pn
mov
cmp
sahf
or
adc
adc
cmp
jae
fisubrl
mov
notl
shlb
subb
and
cmpsb
into
lock
inc
jp
xor
aas
js
stc
push
jmp
cmp
mov
add
insb
cmp
cmp
inc
inc
call
imul
push
or
jp
push
xor
ds
cmp
cmp
dec
clc
jne
xor
dec
pusha
lahf
inc
ss
mov
pop
sbb
inc
mov
cmpsl
pop
cltd
cmp
mov
divb
push
rol
push
mov
xchg
or
push
repnz
mov
test
pop
and
clc
aam
mov
lds
and
jge
jb
fisttps
leave
xchg
push
xchg
rorl
xchg
outsb
jp
inc
hlt
push
sbb
fiadds
hlt
mov
je
mov
xor
mov
test
push
jne
inc
inc
mov
mov
mov
rcl
pop
enter
pop
push
popf
or
mov
ss
push
mov
adc
daa
sahf
std
call
add
pop
call
mov
mov
cld
jmp
mov
and
movsbl
pop
test
add
fdiv
push
popa
inc
xchg
loope
enter
cmp
xor
negl
clc
je
orl
int
and
push
pop
insl
xlat
mov
xchg
addr16
push
mov
cld
sub
test
cmp
push
mov
fsubrl
je
jo
loope
or
push
out
xchg
push
jnp
sbb
dec
add
pusha
scas
xchg
push
setl
cmpb
mov
xlat
mov
push
dec
sbb
pop
or
nop
push
lea
mov
fstp
movsl
movsw
fimull
xchg
mov
sub
and
fiadds
add
or
subb
push
jno
jo
sub
mov
imul
pop
jmp
rcr
sbb
push
in
pop
pop
rcll
pusha
es
inc
je
ret
sbb
in
and
adc
movsl
push
inc
adc
lock
inc
jmp
sub
cmp
imulb
push
add
mov
aas
add
inc
add
je
and
loopne
shrl
xor
xor
adc
insl
mov
test
inc
add
sbb
je
push
jmp
xchg
add
add
add
adc
sub
push
add
fadd
iret
and
pushf
je
mov
push
adc
xor
or
dec
add
add
rcrl
sbb
xor
call
and
and
adc
lds
pop
inc
and
in
shr
mov
mov
xchg
cmp
cmpl
push
icebp
push
sahf
movl
in
aas
push
inc
shlb
insb
aam
into
jae
xchg
and
dec
pop
fsubrl
loope
das
cmp
push
loopne
out
pop
loop
call
pop
mov
cmp
insb
push
push
aas
pop
loop
mov
pop
add
sbb
in
lods
imull
nop
rcll
les
shrl
mov
mov
mov
mov
or
pop
dec
test
icebp
je
call
inc
mov
das
or
incb
jl
jmp
or
mov
cmpsb
addl
jl
rorb
sbb
add
ret
adc
add
mov
lods
ret
imul
dec
add
xchg
and
adcb
cmpsl
push
adc
jle
jl
add
push
or
ficompl
push
stos
sti
sarl
mov
data16
mov
ret
push
mov
pusha
loope
push
sbb
xor
inc
fdivrl
xrelease
cmp
push
jo
sbb
decb
cmpb
jb
mov
jg
add
add
call
mov
sti
cmpsl
inc
cmp
loopne
dec
in
push
mov
out
mov
mov
jmp
cmp
cmp
xor
push
xor
mov
dec
sbb
rorl
divb
pop
jmp
sbb
mov
push
loope
add
adc
cltd
mov
lds
enter
or
loopne
dec
sbb
mov
push
sbb
sahf
scas
xchg
mov
cmpl
or
jp
jo
aas
push
int
ljmp
jmp
push
add
lods
pop
xchg
in
pop
enter
cmp
adc
cmp
aas
pop
ret
cmp
jb
cmp
ja
movzbl
sub
sbb
inc
out
leave
rcrl
mov
insl
fcmovu
push
call
je
add
push
subl
mov
jbe
shlb
inc
adc
xor
mov
dec
ss
incl
leave
fucomi
mov
mov
test
je
cmpl
in
aas
lock
mov
adc
cli
das
je
or
mov
jns
ret
adc
cmp
je
jb
mov
sbb
and
sbbb
or
or
mov
dec
xor
push
dec
testb
lock
mov
xorb
and
jbe
dec
xor
jmp
lea
outsl
inc
cmp
adc
sub
inc
jmp
and
xor
xor
inc
sbb
orb
movsb
xchg
lcall
clc
mov
pop
mov
mov
mov
inc
imul
out
test
clc
and
sub
in
test
or
addb
or
pop
lock
cmp
jne
outsb
hlt
cmpb
or
test
xchg
jecxz
hlt
sub
movb
xor
or
xchg
ss
ja
js
sub
inc
dec
push
mov
fadds
add
push
inc
inc
cld
ljmp
cld
lods
xor
pop
lahf
loopne
pop
adc
sbb
pusha
test
mov
loopne
jne
mov
out
cli
push
int
in
push
inc
push
test
fsubs
dec
divl
dec
mov
aaa
jae
outsb
add
sub
mov
shl
add
jmp
pushf
aas
insb
sti
and
mov
sub
cmp
adc
jns
test
jne
xor
dec
lock
shlb
dec
push
mov
or
or
unpcklps
pop
jae
mov
jmp
dec
shlb
pop
cld
je
repnz
pcmpeqw
push
push
push
sub
sub
xchg
mov
push
add
pop
or
andps
ret
mov
jmp
inc
jg
or
jge
add
mov
jle
es
sub
sub
and
pop
mov
jl
or
adc
je
lea
cmp
jbe
lea
sbb
cmp
jbe
mov
arpl
and
sbbb
je,pn
test
jne
pop
lods
sub
sub
jb
rcll
ret
add
xor
hlt
mov
and
jae
movb
inc
mov
push
sub
inc
inc
push
ljmp
pop
push
add
sub
es
cmp
mov
inc
and
sub
adc
fistps
mov
add
cmp
adc
sbb
cmp
sbb
std
jg
sbb
push
push
push
mov
loope
jbe
adc
mov
mov
popa
movsb
sbb
mov
testl
mov
mov
sub
insb
cmp
setne
ret
and
pop
in
jb
ljmp
cmp
cmp
lock
xor
mov
inc
inc
jl
jle
sbb
push
push
adc
cmp
jmp
dec
inc
xchg
lea
sbb
mov
cmpsl
inc
in
mov
jmp
jbe
push
dec
mov
inc
scas
data16
repnz
lret
push
std
sbb
add
jle
adc
js
pop
fistpll
inc
push
or
out
push
rolb
ss
aam
je
fnstsw
xchg
insb
or
or
mov
sbb
ror
or
sub
sub
xor
je
pop
leave
clc
std
push
adc
add
mov
mov
add
fwait
cmp
loopne
dec
mov
movsb
lock
bound
dec
xor
xchg
add
adc
sti
mov
add
fcomip
pop
mov
rolb
es
pop
push
sub
test
push
and
add
push
adc
mov
fdivs
movsl
or
jbe
adcl
pop
cmp
test
fucomip
inc
inc
xchg
push
mov
bound
jae
inc
sti
jo
adc
call
add
jp
mov
xchg
pop
dec
scas
cmp
mov
lock
faddl
pop
mov
push
pushl
cmp
push
cli
push
lret
mov
mov
cmp
outsb
push
call
push
pop
push
push
movb
lea
inc
int
xor
jbe
pop
push
stos
push
outsl
dec
lea
add
int
addb
mov
sub
add
pop
xor
xor
jl
and
jbe
mov
jge
push
gs
xor
inc
sti
inc
inc
fwait
cmp
sub
pop
pop
nop
sti
loope
xchg
push
jmp
cmp
mov
out
mov
insl
push
lods
fstp
push
movsl
xchg
stos
pop
stos
pop
adcl
dec
add
aam
clc
das
xor
mov
pop
je
test
dec
push
inc
sub
sbb
push
fs
pusha
add
dec
adc
lea
push
push
lea
decl
sbb
xor
or
adc
icebp
in
clc
mov
pop
inc
mov
jl
add
push
add
pusha
addl
js
cmp
inc
push
in
mov
add
pop
cmp
push
or
add
sahf
cmp
sbb
mov
push
aaa
mov
jl
dec
lea
clc
push
add
add
pop
aad
pop
pop
or
push
cmp
ja
push
xchg
jns
fbstp
outsb
push
lcall
sub
addr16
or
sti
pusha
jb
jle
inc
inc
orl
pop
movsb
add
push
orl
mov
pop
mov
mov
xchg
sbb
das
and
and
test
or
push
ljmp
push
mov
inc
adcb
mov
sbb
and
arpl
push
xor
movb
jbe
ficomps
dec
imul
inc
pop
xchg
int3
xchg
jae
pushf
mov
rcll
pop
jge
popa
push
inc
movsl
xchg
fimuls
add
adc
push
push
fsubrs
fstpl
pusha
dec
leave
xor
pop
or
jb
push
mov
fsubrs
xor
push
push
loope
push
sbb
fstps
sbb
cmp
inc
mov
fucom
enter
aam
fcompl
mov
add
inc
js
mov
add
sbb
ljmp
and
gs
fcomps
xchg
push
add
loopne
cmpl
dec
add
jp
rcr
push
mov
adc
out
and
jne
mov
jmp
pop
sbb
insl
jnp
das
mov
lds
xor
mov
loopne
lcall
push
push
call
or
push
add
mov
add
sbb
ret
int3
or
iret
inc
adc
xchg
sbb
sbbl
inc
je
ret
push
cmp
ja
lea
roll
mov
pmuludq
nop
adc
daa
shrb
push
cmp
mov
sbbl
mov
pop
mov
clc
adcl
out
test
dec
fcmovb
pop
or
fcoml
loope
adc
xchg
lods
pushf
jbe
and
repnz
push
fisubs
pop
out
loopne
pusha
dec
mov
xchg
sub
fdivs
mov
icebp
cmpsl
repnz
xchg
fwait
mov
loopne
fadds
lahf
mov
cmpsl
mov
jmp
xlat
or
or
je
cmp
push
pop
jne
aam
insl
pusha
sub
cmpsl
jne
push
inc
mov
imul
or
pop
jne
pop
call
inc
mov
adc
pmullw
or
xor
stc
jbe
jg
jne
jmp
sbb
sub
mov
adc
mov
sub
jmp
ss
jmp
mov
mov
cmp
add
add
je
and
xorb
subl
pop
jo
stc
mov
push
imul
fld
ret
repz
jmp
pusha
outsb
cmp
mov
jae
scas
jg
jp
test
push
xor
push
adc
jp
pop
das
add
out
inc
mov
clc
and
mov
sub
push
dec
je
add
cmpl
orb
rcll
xrelease
js
std
inc
add
mov
push
xchg
lret
movsl
mov
pop
pop
add
pop
cs
push
mov
dec
inc
in
or
faddl
ja
or
or
sub
jg
ret
push
repz
push
push
popf
push
adc
adc
or
push
cmp
std
rolb
jmp
mov
adc
mov
loope
push
popa
fildll
xchg
aas
add
inc
arpl
mov
xchg
sbb
inc
bound
or
push
pop
push
push
lock
xchg
jb
pop
push
push
pop
pop
pop
cs
lret
pop
pop
pusha
pusha
fs
pop
or
adc
sbb
sbb
mov
les
mov
sbb
xchg
aaa
and
orl
movl
mov
or
or
add
pop
inc
dec
movl
les
out
shr
inc
jle
mov
stos
add
or
pop
arpl
pop
xchg
inc
mov
stc
pop
in
push
inc
gs
cmp
mov
add
cmp
jle
jo
inc
push
je
push
push
movb
cld
lcall
mov
pop
pop
jae
push
or
inc
notl
add
clc
loopne
inc
js
mov
mov
cmp
pop
add
mov
jmp
sub
cli
add
cmp
rorb
push
push
lea
push
test
lret
pop
je
adc
sarb
inc
push
or
popa
adc
mov
add
lods
dec
call
sub
add
dec
int3
icebp
mov
std
or
dec
cmpl
cmp
mov
xchg
sbb
push
add
push
push
add
jo
push
mov
mov
scas
jmp
test
pop
ret
dec
add
fidivl
push
negl
xor
and
or
mov
cltd
jo
pusha
push
add
in
jno
cmp
pop
lcall
sub
and
push
mov
ds
subb
push
jle
inc
data16
sub
push
pusha
inc
xchg
std
cmp
pop
iret
mov
and
loop,pt
pop
add
stos
addr16
jmp
push
movsl
mov
call
mov
clc
movsb
xor
sub
stos
or
mov
cmp
xchg
xor
fdiv
mov
aaa
mov
push
lock
movmskps
sbb
or
pusha
mov
rcll
aad
sahf
dec
lock
mov
in
xor
rorb
outsb
enter
or
mov
and
mov
sub
rorl
in
jp
pop
movsb
roll
cmpsl
mov
stos
cmp
sahf
cmpsb
add
dec
or
or
loop
mov
mov
andl
hlt
loopne
and
sbb
stos
add
push
jns
lds
xchg
dec
loopne
inc
fstpl
push
push
jl
leave
and
leave
fdivl
mov
push
outsl
sbb
inc
scas
iret
or
fistl
pop
add
or
push
mov
sarl
xlat
or
popa
adc
pop
mov
loopne
loope
sahf
dec
mov
loopne
ja
adc
jbe
push
and
push
in
jge
cmp
sbb
adc
or
xor
xchg
cmp
dec
add
lock
popa
mov
push
cmp
mov
and
add
mov
xorb
fdivrl
lret
pushf
pop
jle
mov
mov
xchg
add
mov
fsubrs
out
out
in
add
lahf
sbb
mov
imul
mov
cs
out
sti
mov
int3
loopne
add
push
pop
cld
sti
add
sub
add
sub
xor
dec
cli
movl
adc
roll
dec
pop
inc
lea
push
cmpb
pop
repz
je
add
or
add
push
pop
sarb
adc
pop
add
add
cmpl
lods
testl
lea
push
add
in
dec
cmc
dec
push
inc
shlb
fimull
push
push
jg
xor
imul
push
dec
pop
mov
add
and
insl
xorl
aam
push
jae
add
fadd
xchg
mov
or
dec
mov
pop
andb
cmpb
lret
aaa
daa
xor
fidivs
inc
add
js
aas
imul
jo
mov
std
pop
cmp
adc
repz
sub
mov
add
mov
jo
mov
sub
pop
pop
pop
scas
mov
mov
adc
pop
sub
pandn
fbld
jle
or
push
adc
mov
mov
pop
add
pop
popa
or
xchg
repnz
dec
cmpsl
mov
adc
out
or
mov
mov
mov
and
jnp
mov
inc
shll
fimull
push
leave
xchg
and
mov
addb
push
or
insb
mull
aam
call
mov
fs
lret
loopne
mov
mov
insb
lahf
adc
xchg
dec
sbb
testl
fsubs
int3
jmp
jle
outsl
dec
push
xchg
mov
inc
jo
cmpb
arpl
cmpl
out
sub
lret
je
insb
mov
pop
arpl
jno
add
leave
ret
ret
dec
push
mov
adc
push
pop
in
add
mov
inc
popa
in
sub
loopne
pop
push
and
cld
inc
and
sbb
subb
das
and
rcl
std
add
and
sub
push
dec
adc
aam
lods
push
paddsw
stc
fcomps
jne
outsl
lds
insb
sub
xorb
pop
pop
stos
mov
mov
dec
int3
data16
divl
rorl
adc
push
test
sub
jl
adc
pop
fldt
adc
popa
add
in
ds
add
je
cld
xchg
mov
fcomps
sar
inc
adc
andb
out
cli
or
xchg
jne
dec
out
push
mov
xchg
and
pop
movsl
xchg
adc
clc
insb
or
bound
gs
adc
stos
xchg
pop
dec
and
adc
outsl
and
pop
jl
or
dec
xor
cmp
cmp
adc
out
bswap
push
lock
mov
and
mov
xchg
ret
pop
push
adc
or
ja
add
mov
ds
push
stc
push
mov
xor
mov
fstpl
mov
push
pop
cmp
mov
movsl
xor
fs
push
sbb
xor
cmp
or
mov
insl
xor
or
icebp
into
scas
mov
or
push
add
idivl
pop
pushf
and
xchg
das
or
push
mov
inc
and
xchg
add
xchg
mov
adcb
adc
nop
out
out
and
or
cmp
vdivps
jno
sub
xlat
lea
or
mov
xor
mov
negb
jae
mov
lea
sub
or
push
inc
sahf
pop
sub
incl
mov
lret
sbb
cmp
rolb
mov
mov
pop
xor
or
and
adc
lods
sub
push
jge
push
insb
mov
aaa
into
sbb
pop
xchg
jo
adc
push
add
lods
sbb
pop
push
fs
lock
or
pop
jecxz
mov
repz
mov
push
mov
iret
xor
and
sbb
xchg
inc
push
pop
xorl
cmpsb
mov
in
dec
clc
xor
mov
pop
push
mov
lret
pushf
dec
loopne
dec
or
das
push
call
inc
inc
in
in
lock
xchg
dec
mov
sahf
xor
dec
aam
jge
loopne
xchg
push
push
cld
das
pop
pop
mov
out
add
ret
inc
in
mov
fiaddl
pop
jb
movl
sbb
add
fidivl
fildl
aam
jnp
lock
loopne
jle
sbb
push
add
daa
sbb
loopne
stos
push
ljmp
add
fldt
pop
js
inc
pusha
roll
in
sub
mov
push
movb
mov
sbb
jecxz
push
test
out
and
mov
stos
pusha
stos
movsb
fisttpl
inc
mov
push
dec
ds
push
push
fldcw
sub
fistpl
fistpl
sarl
je
push
arpl
or
sbb
sbb
mov
and
repnz
in
cwtl
or
inc
add
mov
mov
lds
pusha
dec
stos
xor
mov
push
lock
xor
push
test
lock
and
lods
nop
lret
and
add
orb
mov
into
cmp
movsl
aad
push
and
xlat
cltd
dec
sbb
cld
comiss
mov
add
pushf
mov
push
xor
inc
fmull
sub
adc
push
jo
fcoml
aaa
sbb
mov
pop
addr16
sti
cmp
mov
push
push
fcompl
movsl
test
mov
cmp
inc
or
enter
adc
ror
jae
fists
xchg
or
dec
xchg
ret
cmp
push
xor
and
in
pop
mov
int3
sbb
leave
int3
int3
cmp
enter
xchg
enter
fdivs
push
arpl
ret
sbb
xchg
shrb
enter
mov
iret
lret
sbb
push
nop
mov
sbb
sbb
push
and
pop
push
dec
ljmp
enter
ja
test
or
sub
lods
into
mov
mov
sbb
inc
jne
fnstcw
sbb
xor
jle
pop
mov
fcoms
inc
nop
inc
xor
clc
sub
inc
or
dec
testb
push
push
sbb
or
js
fnstsw
mov
push
xor
sbb
or
pop
jno
icebp
push
push
inc
adc
fwait
nop
mov
rorb
in
lock
add
push
lea
aam
cltd
addb
sub
push
mov
popa
sub
call
sub
sbb
xchg
std
stos
movsb
and
push
aaa
adc
inc
mov
orl
adc
clc
fs
lods
adc
outsb
lea
mov
and
int3
sbb
test
mov
mov
xor
sbb
pop
jl
jg
add
and
cmp
add
je
sbb
xor
jle
push
imul
adc
jb
sarb
push
testb
aam
pop
jne
mov
fcmovne
seto
cltd
push
pop
push
jmp
xchg
xor
pop
rcrl
shll
push
rcll
push
or
fcmovnb
ss
or
xor
pusha
sub
push
aas
cmp
push
cmpsb
mov
arpl
or
sbb
loopne
dec
ret
mov
mov
push
jl
cmp
lea
test
inc
jb
pushf
or
shll
and
pusha
mov
fildl
mov
mov
js
xchg
push
sub
clc
ljmp
rol
popa
and
mov
jno
shll
sbb
jne
shlb
es
into
adc
cmc
jl
inc
adc
xchg
dec
mov
push
add
add
cmc
popf
push
inc
mov
fldenv
sub
push
sbb
iret
loopne
addl
mov
neg
pop
xchg
mov
jno
shl
aam
jno
test
push
in
cmp
jge,pt
sbb
pop
sbb
push
mov
enter
clc
popf
push
sbb
loopne
adc
out
imul
push
sahf
les
rolb
and
pop
nopl
lods
push
pop
stc
sbb
lock
dec
add
sub
iret
lcall
add
and
loop
xor
push
addb
add
adc
rcll
je
pop
xlat
addr16
push
cmp
mov
xchg
or
leave
add
inc
jp
push
pop
jecxz
daa
add
and
add
mov
xor
push
inc
cmp
mov
xor
cmp
and
sbb
push
test
pop
hlt
je
push
push
add
or
sbb
test
mov
or
pusha
lock
mov
pop
inc
mov
cld
lock
sbb
lcall
pop
mov
ret
or
xchg
xlat
sub
mov
mov
in
clc
cmpsb
xchg
fildl
push
cmp
test
jno
ss
into
and
bound
out
rol
mov
inc
or
mov
sbb
es
jae
cmp
cmpsl
and
add
and
mov
add
incb
or
faddl
push
push
xlat
dec
and
jle
orl
test
test
and
mov
icebp
scas
insl
aam
mov
cmp
rolb
sub
sub
inc
imul
cwtl
je
jno
mov
push
add
ret
inc
lret
push
sbb
enter
sti
in
mov
or
stos
add
add
add
add
sbbb
xor
dec
jno
push
daa
shll
ss
mov
insb
adc
push
movsb
sub
ljmp
sub
xchg
mov
mov
push
jle
adc
inc
sbb
int
cmp
testb
push
addb
cmp
push
xchg
add
add
inc
leave
cmpsb
add
cmp
repz
and
or
dec
cmp
dec
push
push
mov
lahf
push
or
mov
push
dec
shlb
popl
or
sub
popf
cmp
dec
test
aaa
mov
cmp
nop
xchg
sub
sub
sbb
dec
mov
pop
repnz
dec
cs
xor
pop
inc
lods
push
setae
jno
mov
pushl
jnp
pop
popa
lret
fildl
xor
sbb
std
cmp
sbb
cmc
fiadds
jmp
mov
loopne
mov
jbe
cmp
sbb
mulb
add
sbb
leave
nop
je
pop
mov
or
adc
ret
out
sbb
ficomps
fldt
push
aam
inc
sbb
and
adc
cmp
nop
out
and
pop
and
push
in
and
sub
bound
and
dec
aaa
outsb
or
jmp
popa
ret
jns
xchg
aaa
push
lret
pushf
pop
shll
mov
push
imul
jo
mov
sbb
popf
fimuls
jl
mov
and
test
xchg
cmpsl
cltd
jp
enter
xchg
pushf
subb
mov
push
fwait
inc
aad
cli
pushl
shlb
xchg
sbb
and
andl
mov
mov
jo
inc
cmp
push
jo
pushf
mov
pop
mov
sub
adc
enter
mov
sbb
jle
push
push
add
dec
repz
push
loopne
mov
inc
mov
cmc
mov
adc
mov
lock
mov
sub
xor
inc
jmp
lret
lret
aam
push
fcompl
sbb
jmp
cmp
xchg
loopne
push
mov
shll
es
pusha
jle
add
sahf
jge
jmp
mov
repz
pop
out
jecxz
ret
or
mov
addb
popf
push
or
add
add
test
inc
loop
pop
test
fmul
in
test
adc
dec
inc
cwtl
pop
popf
sub
lock
jno
cs
or
fmull
push
and
mov
cmp
testl
adc
clc
pop
inc
and
xor
xchg
gs
mov
mov
add
pop
aam
inc
fisttpl
adcl
lock
insl
aaa
xor
ljmp
inc
pusha
cmp
jne
or
je
addb
lock
out
jl
pop
push
pop
arpl
jb
test
das
xor
xor
fmull
pop
push
inc
fcompl
mov
dec
jns
mov
push
pop
mov
into
call
mov
in
test
jne
or
xchg
cmp
add
lret
jbe
add
xor
adc
call
test
cmp
sub
repz
je
cli
adc
mov
mov
mov
fsub
push
out
inc
lock
out
xchg
je
push
inc
or
lods
loope
jo
mov
cmc
lock
inc
inc
cwtl
mov
mov
mov
mov
push
mov
cmp
test
push
bound
clc
jg
mov
scas
fdivl
or
add
test
int3
add
mov
or
xchg
jle
test
andb
cmpsl
imul
test
mov
aam
mov
jp
arpl
je
sub
fwait
movsl
imul
lcall
jmp
sbb
add
jmp
adc
int
or
mov
mov
in
mov
dec
stc
xlat
mov
add
mov
jge
pop
or
aaa
rcrb
dec
repz
push
and
loopne
out
call
cwtl
mov
push
je
cmpsl
or
push
mov
out
cmp
pop
lock
jle
int
stos
pop
mov
cmp
test
mov
push
mov
sbb
cmp
jle
pusha
mov
sbb
push
sbb
add
mov
jp
sub
das
fmuls
into
jnp
shl
xchg
loopne
pop
fists
xchg
mov
push
mov
add
int3
add
inc
stos
push
fadds
int3
mov
push
add
xchg
test
xor
inc
aam
ss
int
mov
adc
cmp
cmp
mov
filds
cmpl
jne
push
stc
rcrb
into
mov
push
daa
cli
push
shrb
loopne
push
jne
jo
jo
mov
lcall
and
mov
pop
and
xchg
icebp
or
adc
mov
cld
xor
cwtl
nop
push
push
xchg
rolb
sub
int3
insl
fndisi(8087
lcall
lock
jns
enter
mov
dec
jbe
push
add
lret
pop
cmp
push
jae
lock
xchg
cmpb
fiadds
das
aas
lock
push
xor
xchg
push
pop
inc
add
sahf
les
mul
mov
js
push
or
xchg
push
dec
mov
stos
push
in
or
or
shll
mov
xchg
icebp
sahf
fadds
test
dec
jge
lods
pop
data16
mov
sub
jg
fmull
mov
in
push
clc
adc
or
sub
adc
xor
push
xchg
imul
dec
in
or
mov
loopne
push
ret
inc
es
adc
ja
popf
cmpsl
and
mov
xor
mov
insb
scas
mov
mov
mov
mov
insb
mov
lods
jecxz
pop
sbb
sub
fadds
add
in
jp
ljmp
or
dec
cld
push
and
fcomi
rcrl
mov
push
fs
or
lahf
adc
pop
call
push
inc
loop
in
mov
mov
cwtl
ret
rcrl
mov
call
pop
or
add
fnstsw
insb
adc
sub
arpl
cmp
dec
add
cmpxchg8b
jns
add
mov
in
mov
or
daa
push
add
lods
xor
push
pop
mov
mov
mov
mov
mov
or
mov
sub
sbb
lods
fcoms
fmul
into
aam
xor
sbb
sbb
jne
cmp
lods
inc
je
pushl
call
mov
xchg
out
ret
shr
or
mov
or
ret
faddl
push
inc
jns
test
xorl
jbe
dec
not
popf
cmp
fmuls
loop
sbb
lods
dec
push
or
dec
jne
xchg
lcall
xchg
push
or
das
dec
icebp
or
ss
pop
rorb
out
add
xchg
shrb
pop
repz
dec
add
mov
mov
icebp
in
inc
sbb
sbb
arpl
shlb
test
jns
or
mov
mov
movsb
inc
mov
sarb
in
xchg
inc
push
push
mov
cmp
jg
mov
adc
lods
into
mov
dec
arpl
sbb
out
cs
testl
push
mov
adc
pop
movsb
add
ja
pop
or
shrd
test
sub
pusha
lea
xor
outsl
push
lock
outsb
sub
ja
mov
addl
push
jl
mov
push
jne
xchg
adcb
jno
bnd
push
pop
jmp
mov
push
mov
mov
mov
enter
subb
bsr
adc
movsb
fildl
lret
or
dec
in
and
and
into
add
sbb
sub
sahf
rolb
push
mov
cmpb
sub
mov
inc
cmp
jae
mov
xor
lret
and
fildl
pop
mov
je
add
loop
adc
dec
push
jle
in
inc
cld
or
sub
stos
imul
add
jb
adc
cmp
jg
lods
xchg
push
cmp
add
fsubr
cmp
xor
insl
jg
pop
scas
cld
ret
adc
add
mov
adc
insl
xchg
sub
xor
push
add
lea
lea
dec
fwait
enter
add
dec
aam
adc
nop
adc
adc
in
xchg
add
add
jle
push
mov
aam
cmpsl
mov
dec
popl
xchg
jb
ljmp
xor
ss
mov
js
push
hlt
cmp
push
inc
imul
add
jmp
and
mov
gs
push
dec
mov
push
mov
mov
add
add
dec
pop
pop
inc
push
mov
add
or
dec
add
push
jg
add
and
push
push
push
sub
mov
movsb
inc
fstps
pop
pop
idivb
sub
adc
add
and
push
fistpll
fildl
adc
pop
pop
push
adc
push
sar
in
or
lahf
mov
dec
orl
xor
inc
add
mov
push
dec
fldcw
fisttps
cmp
push
dec
or
lea
push
push
cmp
jecxz
cmpsl
test
lcall
mov
inc
add
jns
test
ja
jl
call
push
or
js
adc
loope
icebp
test
fldenv
mov
in
movsb
add
movsb
mov
mov
popf
inc
pop
ficoml
xchg
les
incl
popf
mov
mov
mov
mov
rcrb
movsb
lods
stos
cmpsl
pop
mov
mov
or
int
sbb
mov
in
mov
sahf
add
add
decl
cmp
jns
jg
mov
jae
push
pusha
adc
inc
shlb
dec
int3
sub
inc
or
mov
lock
stos
mov
lret
jae
jno
jecxz
xorl
and
lahf
push
pop
push
jp
rol
add
jns
adc
adc
popf
or
hlt
rorb
push
inc
xor
movsb
cmp
je
push
daa
and
pop
fiaddl
mov
movl
push
or
daa
xchg
loope
dec
cmpsb
sub
fisttps
insl
hlt
pop
push
stos
mov
inc
or
pop
lcall
pop
jb
add
mov
push
add
push
mov
es
pusha
rcrb
ss
and
pop
in
add
push
mov
mov
jbe
dec
mov
pop
or
lret
addr16
jo
insl
mov
push
out
add
sbb
adc
xor
add
cmp
inc
les
hlt
xchg
adc
lods
cs
rcr
mov
mov
js
lret
mov
jl
or
inc
ja
mov
movb
mov
or
add
loope
out
js
rclb
cld
in
dec
ljmp
adcl
add
mov
xchg
not
sbb
pop
stos
xchg
ljmp
in
pop
lock
and
test
push
shrb
xchg
sti
or
test
fiadds
or
ljmp
fsubrs
jmp
sbb
je
add
sbb
cmp
adc
cs
xor
inc
cmp
or
jne
adc
sbb
adc
or
and
fistps
stc
mov
call
lea
mov
add
inc
add
cwtl
sbb
xchg
mov
jno
fisubrs
pop
add
inc
sub
pop
movl
sub
mov
stc
test
dec
and
test
fistl
inc
sub
inc
sbb
dec
cmp
lcall
or
test
push
call
jnp
loop
pop
outsl
js,pt
cmp
fisttpl
addb
sbb
iret
or
xchg
std
xlat
add
add
add
inc
repnz
push
jo
lcall
lock
js
jle
or
or
xchg
dec
jo
push
jmp
add
out
mov
or
lcall
cmp
jne
sbb
filds
adc
add
add
add
inc
fiadds
lea
sbb
cmp
fs
add
ret
xor
xchg
icebp
dec
inc
pop
les
add
mov
in
adc
pop
rclb
loopne
or
dec
bswap
lock
jns
xchg
xchg
mov
dec
data16
mov
mov
pop
outsb
jle
mov
or
jg
sbb
jo
push
pushl
lret
pop
cmp
push
mov
sbb
inc
je
das
jmp
add
cmp
jne
cmp
inc
test
pop
inc
mov
dec
clc
flds
pushl
aas
mov
bound
adc
nop
cmpl
dec
insl
jo
inc
shl
push
cld
pushw
out
lret
outsl
ret
or
xchg
jbe
xor
xlat
arpl
popf
dec
inc
add
mov
cmp
movsb
popf
xchg
add
or
ss
cld
ja
cmp
push
imul
fisubl
jne
push
pushl
add
pop
pop
sub
xor
mov
fisttps
mov
cld
scas
jmp
fisubrl
dec
and
add
add
sbb
loope
enter
imul
inc
jg
add
sub
in
mov
xchg
sar
pusha
jp
aam
out
seta
inc
cli
adc
jae
mov
repnz
add
add
add
cmp
lea
jbe
add
pusha
push
push
cmp
fsubrs
pusha
pop
push
pop
mov
sub
loopne
push
lea
xor
xor
in
in
js
inc
cmp
jl
pand
test
lods
pop
out
jns
add
or
jno
mov
jae
push
sub
insb
mov
enter
adc
pop
dec
bound
sarb
shll
dec
lods
adc
add
pop
lods
pop
loopne
ret
lret
fldt
jle
add
adc
cmp
xorl
call
cltd
addr16
mov
test
and
aas
adc
or
mov
mov
repz
sub
cmpl
and
sub
pop
fmulp
flds
or
pop
and
push
push
add
fidivrl
ret
add
or
sbb
xchg
adc
and
aam
jle
sbb
fstps
imul
movsl
movl
mov
rcl
add
push
and
fwait
sub
movsl
popf
iret
es
cmc
mov
pushf
lret
mov
ds
repz
fcoms
lds
sbb
push
pop
sub
jmp
ficompl
xchg
pushf
push
pop
pop
dec
les
jmp
cld
push
lea
jmp
xchg
ret
xchg
mov
mov
jno
mov
jge
testb
jp
inc
es
mov
push
fldt
push
push
cli
sbb
sub
jns
das
movsb
pop
or
cs
xor
stos
xor
enter
mov
daa
idivb
inc
je
adcb
jl
inc
and
lahf
cmp
das
jmp
cmp
jne
movl
cmp
data16
adc
xor
cmpsl
sbb
movsb
jl
inc
rcl
inc
adc
cmp
dec
movsb
negl
add
sarb
fisubl
das
hlt
sbb
sahf
push
inc
outsb
aam
add
or
lret
nop
dec
cwtl
cmp
in
lods
or
add
xor
push
fidivrl
imul
jne
lea
loopne
adc
test
lea
cmp
add
dec
and
and
in
out
xchg
insl
or
orl
testb
xor
push
jnp
fsubr
fs
into
or
jge
dec
pop
fwait
lea
mov
cmp
shl
jbe
mov
mov
xor
je
cmp
iret
inc
lods
scas
adc
mov
fdivrp
inc
cmp
cmpb
jns
sbb
xchg
lahf
mov
mov
jl
add
mov
cmpb
je
xor
inc
and
and
aaa
xchg
cmpxchg
jg
xchg
mov
loope
mov
mov
arpl
mov
jno
jmp
jg
push
push
in
push
popa
inc
add
loope
orl
jnp
fistpll
cmp
into
or
pop
add
adc
clc
add
std
pop
sahf
jbe
add
sbb
ljmp
mov
push
andb
xchg
add
pushf
mov
sub
outsl
mov
or
mov
cmp
jge
push
pop
sbb
pop
sbb
mov
fnclex
xchg
mov
ret
pop
lock
mov
popf
mov
jmp
mov
nop
popl
add
inc
xchg
and
mov
cmpl
js
mov
lcall
xchg
into
clc
xchg
push
cmp
cltd
pop
sbb
mov
in
fldcw
jb
inc
mov
cmp
push
push
adc
mov
jo
inc
add
sbb
sbb
out
addb
call
push
sbb
inc
sub
sbb
or
sub
lea
or
or
dec
or
lock
push
push
je
or
push
cmpb
or
call
mov
cmp
out
ret
dec
push
lret
cld
icebp
lods
es
pop
and
cs
jg
rolb
pop
lods
mov
jmp
in
dec
les
dec
decw
sub
pop
mov
mov
je,pt
pop
call
mov
add
mov
lret
lea
loopne
fs
xor
xchg
aam
in
xchg
add
jbe
sbb
adc
push
stc
push
xchg
cli
add
push
jle
insl
pop
imul
cmpsl
cmp
inc
enter
data16
xchg
mov
cmp
or
sub
in
mov
iret
call
inc
subl
imul
push
test
lds
xchg
movl
mov
adc
adc
imul
cmp
cmp
cwtl
cmp
in
adc
and
daa
dec
and
test
inc
out
mov
sub
or
test
mov
fsubrs
loopne
rorb
test
imul
inc
push
pop
stos
push
nop
pop
stos
sub
pop
xchg
dec
mov
inc
push
loop
sub
mov
add
jge
pop
push
sub
mov
mov
stos
repz
mov
lock
cltd
fidivrl
jl
test
sub
psubusb
dec
sbb
test
push
rolb
loopne
insb
add
xchg
cmp
dec
std
lcall
enter
mov
inc
test
call
into
xchg
aad
or
testl
inc
dec
adc
roll
push
push
inc
pop
nop
jmp
cmpl
lahf
pop
jmp
push
mov
andl
stos
or
fidivs
lea
xchg
jg
cmp
inc
inc
daa
mov
pop
rorl
mov
jmp
push
or
add
pop
xchg
add
outsb
xor
ret
scas
inc
loopne
pop
adc
xor
xor
out
cmpsl
mov
jmp
mov
mov
sbb
xor
loopne
mov
sbbb
sbb
push
scas
ss
subl
mov
xor
sbb
loop
mov
jo
jne
inc
mov
jbe
pop
addl
push
pop
enter
sub
nop
push
outsl
std
cmpsb
push
add
cmp
jl
stos
lcall
pop
and
add
jg
mov
inc
push
stos
lea
arpl
xor
adc
pop
sub
cmpl
mov
adc
xchg
push
add
lea
xchg
outsb
andl
jmp
inc
das
dec
pop
mov
mov
pop
adc
lods
xor
ljmp
mov
xor
sub
xchg
daa
and
mov
dec
fidivl
lea
jmp
inc
push
outsb
test
jns
dec
push
dec
xchg
mov
iret
inc
test
rcrl
testl
add
mov
push
push
inc
pmaxub
pop
or
xchg
out
push
sbb
cli
inc
lods
das
stos
pop
adc
lods
pusha
mov
mov
jmp
xchg
xchg
push
aad
sub
adc
push
js
clc
push
xor
and
pop
test
or
xchg
insb
std
jle
jnp
imul
push
add
pop
sbb
dec
int
adc
sbb
pop
inc
push
fs
pushf
xchg
call
mov
rorl
outsl
ret
sbb
and
inc
xor
stos
adc
movsb
adc
xor
mov
xchg
add
jecxz
sbb
jecxz
lods
mov
pop
addr16
and
nop
and
xor
mov
xor
pop
xchg
add
and
clc
adc
dec
cmp
jne
repz
in
sbbl
sub
dec
push
adc
adcl
and
mov
xor
lea
sbbl
push
roll
insb
cmc
das
test
sbb
or
inc
into
dec
or
movsb
rorb
inc
es
dec
add
cmp
out
sub
daa
cli
add
loope
xchg
ficoms
or
xor
jmp
cmpl
adc
pop
repz
mov
out
sub
out
mov
sbb
jns
lahf
adc
out
jnp
cmp
xlat
leave
popa
faddl
iret
sub
jo
out
push
sbb
mov
sarb
xor
nop
sbb
adc
inc
fidivrl
add
fs
xchg
mov
jp
int
jg
push
hlt
les
xchg
test
and
ret
pop
jb
sub
ljmp
inc
pop
pop
inc
jge
push
insl
ss
mov
pop
xlat
inc
pop
xor
mov
cmpsl
jl
xor
cmp
push
push
pusha
and
push
loope
std
push
mov
out
sahf
subl
push
out
test
push
xchg
xchg
push
add
and
pop
and
leave
and
sbb
out
xchg
or
xor
or
in
test
test
fists
sbb
cltd
in
add
or
sub
mov
pop
cli
push
sahf
push
push
and
mov
adc
add
mov
or
push
mov
mov
addw
hlt
das
pushf
pushf
mov
xchg
push
pop
lods
xor
out
pop
cmp
loopne
xchg
ret
sub
inc
inc
mov
cmp
lret
mov
xchg
xchg
cmp
jbe
pushf
out
xor
xor
fildll
xchg
pushf
pushf
aas
sub
xchg
or
mov
je
push
xchg
mov
pop
in
sub
sbb
dec
xor
std
rolb
test
jg
push
and
push
jb
jb
adc
rolb
inc
or
or
push
ret
and
add
mov
gs
jmp
and
sbb
jae
lea
xchg
jb
movsl
xlat
pop
or
push
xchg
adc
push
rorl
sbbb
sbb
xchg
testb
cwtl
lods
push
add
inc
inc
pop
cmovb
js
in
test
xor
xorl
sbb
jo
xchg
mov
aam
les
lea
sub
fisttpl
mov
clc
cmp
jae
cmp
jmp
push
push
pusha
rcrb
lret
push
mov
orl
cmp
rclb
adc
fiaddl
or
jl
sub
jne
cmp
scas
lahf
mov
jae
push
mov
int
ficompl
shlb
rcll
jo
sub
stos
lcall
mov
rolb
mov
pop
push
sub
leave
rdtsc
insb
lods
test
pop
shlb
inc
lods
mov
js
pop
add
sarb
push
push
subb
sbb
sub
decb
push
adc
pop
test
rcll
mov
mov
jg
mov
jge
add
cmp
jbe
or
jne
push
out
lods
mov
xorl
hlt
clc
xchg
ficoms
jge
cmp
jne
mov
dec
push
xor
pop
orb
jl
mov
mov
fistpl
sub
sbb
fildll
adc
add
pop
push
enter
adc
mov
mov
push
dec
add
xchg
mov
pusha
test
mov
shll
xor
test
lcall
xlat
lock
movsl
sbb
dec
cld
or
mov
pusha
mov
addb
pop
jo
shll
ret
mov
cmp
dec
xor
dec
daa
mov
rcrb
inc
pusha
popf
jnp
ljmp
dec
mov
mov
push
lea
adc
fstl
leave
jns
lods
adc
push
fildl
xor
mov
mov
mov
pop
ret
adc
adc
sbb
sub
xchg
shlb
sbb
leave
xchg
gs
xor
icebp
mov
sub
sbb
test
push
sub
mov
mov
xchg
icebp
mov
cmp
adc
jne
push
scas
ret
scas
sub
mov
cld
lods
incl
seto
neg
or
and
mov
inc
stos
daa
adc
mov
repz
xchg
ror
cmp
sbb
inc
adc
fmul
and
xchg
aam
jbe
in
or
inc
mov
fsubrp
mov
cmc
xchg
movsb
xor
fsubr
rolb
sbb
or
mov
sahf
lea
pop
mov
and
or
lret
int3
jecxz
dec
mov
rolb
and
and
mov
popa
pop
push
or
test
jo
jbe
dec
push
ret
add
or
push
test
mov
fistps
jmp
sbb
ds
loop
sub
add
mov
int
shll
scas
adc
adc
xor
mov
imul
les
mov
cwtl
imul
hlt
mov
mov
shlb
or
add
pop
push
icebp
sbb
into
add
push
sbb
popa
subb
lcall
xchg
shl
js
ja
lock
dec
push
xorb
cmp
xchg
jecxz
ret
daa
sub
cs
push
push
mov
fs
pop
lods
xor
dec
lea
mov
ficompl
mov
and
lock
push
lahf
sub
push
stc
mov
or
mov
lahf
out
jne
pushf
idivb
mov
loopne
mov
je
ret
sbb
push
sbb
dec
sbb
jnp
ja
mov
scas
lret
dec
or
adc
jmp
and
int3
lret
pop
xor
mov
cmp
jae
mov
and
or
push
dec
in
xchg
jp
xchg
sbb
sbb
mull
jle
mov
loope
popf
push
js
pushw
mov
and
rol
cmp
imul
mov
mov
movsl
dec
cltd
jne
ss
add
imul
xchg
sbb
mov
jl
xchg
cld
mov
xchg
int
jb
shl
cmpl
cmp
pushf
test
sbb
mov
mov
aas
lods
and
cmpsl
cli
adc
subb
add
jecxz
pop
pop
dec
out
rclb
or
lea
popa
dec
push
hlt
andl
in
lahf
imul
andb
movl
inc
pop
ss
icebp
lds
sbb
mov
stos
mov
dec
pop
jo
jecxz
pop
inc
xchg
cmp
mov
les
add
enter
sbb
mov
call
dec
test
lods
push
jp
fadds
ss
sub
cmpsl
cmp
mov
dec
push
mov
mov
pop
aad
and
or
in
rorb
clc
push
sbb
sbb
mov
int3
cmp
jle
cmp
xor
push
out
notb
cwtl
cmpsb
mov
imul
popf
cmp
push
push
dec
add
sub
xor
aad
cmp
or
push
loopne
adc
mov
jb
inc
les
cmp
xchg
mov
fucomi
and
cld
pop
outsl
lea
sarl
sbb
add
cmp
out
leave
add
movsl
mov
shrb
ret
sbb
inc
dec
or
das
jp
scas
je
dec
adc
cmp
pusha
cld
sti
push
lea
cmp
or
or
je
jecxz
mov
xchg
lods
add
adc
add
xor
pop
clc
xor
inc
rcrb
push
mov
push
mov
lea
js
and
je
push
bound
mov
sub
frstor
fsub
pop
idivb
lea
pushf
pop
lock
lea
jae
pop
mov
jnp
mov
jmp
mov
ret
add
dec
add
loopne
mov
add
and
push
ja
xchg
jae
addr16
ja
pop
adc
pusha
mov
mov
aad
rorl
adc
ss
ret
addr16
and
rorb
and
movsb
mov
js
mov
aad
loop
sub
out
pop
push
add
push
rcrl
or
sti
pop
add
xchg
push
clc
and
jle
into
enter
cmp
out
adc
sbb
sbb
xchg
in
ror
cltd
call
adc
or
xchg
mov
push
sbb
les
push
sub
nop
jecxz
loope
lods
sbb
add
cmp
jle
sub
sub
jae
loopne
leave
lods
cmpb
xchg
xor
xor
sub
adc
push
movsl
loopne
adc
enter
push
mov
add
push
mov
adc
hlt
add
mov
addl
push
test
cmpsl
popf
mov
add
jle
and
mov
or
stos
xor
push
out
aas
mov
repz
dec
pop
aas
fisttpl
iret
pop
xor
jbe
icebp
xchg
dec
jmp
push
mov
je
add
rorb
sbb
add
orl
lahf
pushf
push
jecxz
outsl
inc
inc
dec
jbe
add
js
push
push
sbb
inc
jl
xor
xor
cltd
test
mov
fadds
pop
orb
popa
pop
sti
or
mov
jle
cmc
loopne
cltd
add
or
loopne
leave
or
lcall
sarl
dec
cmpb
je
cmp
jae
inc
jmp
jecxz
inc
push
sbb
xor
clc
mov
stc
decb
fsubl
push
push
push
jle
inc
loope
pushf
test
movb
mov
inc
dec
in
incl
or
icebp
sub
fbstp
sub
test
xchg
push
sti
xor
fsubrl
and
add
divb
add
lea
xlat
dec
jbe
in
mov
outsb
cmc
xor
aam
inc
xor
cmpsl
divb
push
push
and
ret
mov
xchg
int
add
inc
mov
push
jae
add
mov
adc
push
arpl
int
cmpsl
sti
and
jns
and
dec
cltd
or
ja
or
sbb
or
dec
pop
cmp
jmp
fwait
cmp
call
mov
hlt
shl
mov
cmp
jb
inc
cld
dec
add
or
add
ret
push
addl
fimull
push
cmp
jae
inc
or
add
je
inc
inc
es
xor
inc
mov
pop
enter
into
and
mov
jmp
sbb
and
int
cmpsl
fnstcw
fadds
in
out
cmp
push
and
sub
push
test
mov
push
imul
lods
push
cmp
xchg
add
or
push
jno
lea
jle
add
andl
sub
test
and
scas
mov
in
fiadds
push
inc
loope
insb
xchg
jbe
loop
call
pop
in
fiadds
loope
and
cmp
stos
js
outsl
loopne
arpl
fsts
inc
push
call
and
loope
mov
and
dec
ja
mov
mov
sub
xor
pop
jmp
mov
mov
cmp
je
mov
push
jmp
popf
mov
sub
stc
jne
push
ror
pop
sub
jb
int3
xorb
ret
add
ror
or
lret
insb
ja
js
pushf
pop
sub
cmp
ja
lea
sub
or
push
movsl
loop
ljmp
dec
and
roll
rcr
shl
dec
push
imull
jnp
inc
sub
inc
or
ret
dec
jns
ja
add
push
inc
mov
ret
dec
addr16
inc
xor
mov
daa
repnz
repnz
inc
sub
and
aaa
lock
sub
or
subb
jle
mov
mov
inc
sbb
pop
mov
sar
mov
dec
jge
xor
mov
sub
orl
mov
or
push
movl
mov
sub
data16
cmpsl
dec
add
mov
cmpsl
loope
sarb
push
insl
push
insl
loope
movsb
add
es
sub
or
pusha
dec
mov
add
shll
adc
pop
xlat
or
jle
lods
xchg
cmp
dec
mov
sbb
mov
push
dec
clc
sbb
stos
add
fadds
cmpsb
sbb
mov
pop
inc
inc
jge
ja
push
ret
in
out
movsl
fldcw
lods
add
jg
xchg
pop
inc
nop
or
lods
pop
lods
inc
add
int
adc
pusha
dec
ss
add
dec
inc
sub
pushl
xchg
push
sbb
lods
loopne
sbb
push
nop
pop
mov
lods
sti
outsl
xchg
xchg
adcl
and
and
ja
push
push
dec
mov
shlb
adc
push
popf
call
jbe
xchg
add
fsubrs
mov
clc
outsl
test
jno
dec
es
aad
and
subb
or
cmovb
outsl
inc
enter
push
pusha
add
mov
and
add
mov
cmp
mov
cltd
push
pop
inc
mov
cs
push
cmp
enter
cmp
insb
mov
inc
jmp
in
mov
and
inc
es
jae
add
push
cmp
or
test
jae
enter
pop
jae
xchg
aas
mov
lcall
aam
lahf
divb
and
pop
jmp
cwtl
pushf
or
dec
sbb
repz
clc
sub
pop
inc
lcall
adc
mov
leave
add
enter
stc
push
repnz
push
dec
mov
push
or
xchg
add
cwtl
pop
xorl
in
jmp
push
test
pushf
je
lods
push
adc
popf
jl
sbb
mov
xchg
cmp
cwtl
lret
subb
pop
bound
push
and
pop
nop
andl
lock
pop
xchg
or
add
pop
ss
mov
sbb
push
adc
cmp
in
jns
js
pop
push
push
mov
xor
inc
data16
inc
pop
mov
jg
and
jb
jge
xor
outsb
das
mov
add
pop
jge
loop
inc
and
mov
bound
mov
add
and
or
cmp
lea
insb
aaa
aam
addr16
inc
push
push
adc
adc
inc
dec
push
mov
lea
addr16
gs
pop
sub
sbb
ret
push
and
pop
inc
sbb
cwtl
sbb
and
insl
add
dec
inc
pop
cmpsb
push
sbb
push
sub
push
mov
inc
sub
push
mov
push
rclb
xorb
aas
or
enter
jae
pop
ficompl
adc
out
dec
xor
adc
cmp
popf
cmpl
and
cmpsl
ret
cmp
ja
or
push
cltd
pop
negl
pop
movsb
mov
add
push
jo
push
cli
fcoml
jmp
popf
and
mov
mov
sti
or
xchg
scas
sub
add
jbe
jl
pop
add
popf
jmp
cmp
mov
je
cs
mov
add
push
pop
dec
je
mov
je
sub
sub
push
push
dec
dec
fistpll
xchg
sub
adc
mov
sahf
mov
mov
cli
xchg
dec
leave
jmp
mov
lret
bound
sub
das
push
jmp
push
add
repnz
or
lea
pop
or
mov
add
dec
fwait
inc
loopne
cwtl
xchg
sti
ja
je
xchg
mov
icebp
lahf
pop
and
cmp
push
mov
xchg
ds
roll
mov
push
push
daa
pop
xchg
mov
mov
lea
mov
push
movsb
int3
sub
mov
sar
push
pushl
fdivrl
cmp
je
cmp
jbe
imul
jmp
inc
sbb
leave
and
xchg
cmpsb
adc
cli
mov
imul
lock
jmp
sbb
cmp
push
and
je
das
in
xchg
adc
jmp
xchg
sbb
ja
ret
mov
xorb
jl
out
jmp
into
repz
outsb
or
mov
mov
add
pushw
and
adc
sub
repnz
sbb
inc
sbb
fstl
pop
cmp
or
jo
mov
in
jecxz
add
sub
or
mov
pusha
mov
xchg
sbb
cwtl
inc
xor
mov
push
push
or
aas
fsubp
sbb
testl
push
aas
push
mov
mov
pop
push
lea
push
sub
loopne
mov
lea
mov
xchg
mov
cmp
jne
add
dec
mov
sbb
das
or
sbbb
and
ja
add
push
lods
aaa
xor
pop
xor
orb
cwtl
dec
adcb
inc
filds
in
mov
in
push
das
imul
fbstp
mov
movl
addl
cmp
cltd
movsl
or
push
movsl
test
cmp
mov
pop
data16
xchg
dec
adc
or
dec
icebp
add
push
add
sbb
jle
add
test
shlb
mov
test
push
mov
jo
stc
ss
imul
sbb
out
ja
jne
push
add
xchg
test
add
rorb
sub
add
in
adc
enter
repz
xlat
rclb
ds
pushf
fsubr
in
addl
pusha
xchg
xchg
sbb
in
leave
lret
sbb
adc
fiadds
sbb
cmp
ja
fnstsw
testl
mov
xchg
scas
movsb
xchg
push
push
push
out
nop
push
cmp
adc
pushf
jl
sbb
loopne
pop
rolb
mov
lea
inc
jl
sbb
test
add
int3
adc
push
inc
mov
adc
sahf
push
jbe
inc
push
add
mov
clc
aam
push
aam
das
in
and
inc
or
shll
int3
push
and
test
int
aam
xchg
jne
roll
dec
fildl
cmp
jne
adc
push
outsb
adc
inc
add
ficoms
divb
ret
fdivr
ret
test
rorb
les
xchg
int3
cmp
jne
push
sub
xor
sub
pop
and
loopne
jo
inc
push
add
xor
mov
clc
push
fwait
push
rcr
rclb
rolb
mov
std
and
les
inc
enter
cmp
sub
aam
xlat
push
or
jle
cmpsb
xor
sub
cmpb
xchg
xchg
es
les
shrb
in
add
sarl
pop
push
dec
rcl
sti
lock
idiv
push
dec
je
xor
icebp
push
dec
push
sahf
sarl
or
cmpsb
lock
je
adc
sub
int
dec
mov
in
adc
in
jmp
cmp
pop
add
inc
inc
dec
add
test
mov
add
or
fcoms
lea
icebp
rorb
pusha
push
in
sub
sarb
and
or
mov
or
data16
in
pop
mov
jo
mov
neg
sbb
push
push
and
mov
andl
adc
pop
push
js
jb
lock
sahf
in
sbb
dec
dec
and
mov
cmp
push
push
stos
js
xlat
push
mov
inc
pop
xor
push
mov
notl
fstps
leave
and
push
push
lds
sahf
sub
inc
loopne
je
mov
outsl
nop
mov
mov
dec
test
lret
jl
cmp
cmpsl
adc
mov
adc
in
dec
into
cmp
fstl
adc
punpckhdq
adc
scas
je
lock
pushl
and
xorb
aas
jno
mov
loop
mov
mov
add
inc
ret
pop
shl
mov
xor
pop
stos
xchg
or
jle
cmpl
push
jl
clc
jne
pushl
inc
and
add
pop
popf
flds
int
adc
xorl
add
cwtl
adc
jo
mov
dec
add
subb
mov
incl
inc
or
gs
dec
test
in
pop
loopne
cli
adc
pop
xchg
sub
lcall
jo
xchg
testl
mov
pusha
inc
ja
add
and
adc
push
push
xor
sbb
icebp
jg
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
fldz
xor
push
loop
ret
cwtl
sahf
jo
jle
xor
adcb
repnz
mov
xor
aaa
dec
adc
rcrl
in
sub
adcl
jl
and
mov
fiadds
negb
popf
sub
mov
adcb
sbb
xchg
or
stos
fdivs
or
roll
cmp
pop
aam
ficompl
dec
les
nop
pop
cmp
iret
push
adc
dec
push
or
in
push
jo
popa
mov
les
rcrb
ljmp
nop
sub
rclb
adc
cwtl
movsl
cwtl
inc
jbe
dec
insb
inc
or
sub
ret
dec
mov
sbb
cld
push
push
add
push
push
lea
cli
test
sahf
test
inc
cmp
test
cs
test
sub
pop
jbe
pop
push
push
lret
jl
xchg
in
out
andb
jbe
xor
mov
ret
xchg
jge
mov
push
sbb
xchg
clc
test
push
nop
aaa
bound
cmpsb
mov
inc
inc
fldl
adc
cli
pusha
fmull
cld
push
out
push
jmp
push
push
into
sub
mov
sbb
stos
push
jbe
inc
sarl
mov
ret
add
xchg
and
add
out
xlat
add
jno
fs
idivl
int
pop
movsb
popa
in
ds
fmuls
or
mov
jge
jmp
mov
test
dec
adc
fmuls
cmpsb
loopne
jo
add
repz
nop
or
jns
pop
call
test
jmp
enter
mov
adc
test
in
fadds
push
adc
adc
pop
add
hlt
push
jo
sbb
icebp
icebp
aaa
push
pop
cmp
push
repnz
push
jne
sti
stos
decl
cs
sub
push
push
mov
adc
out
fnstsw
push
insb
repz
push
iret
das
mov
push
shrl
dec
xchg
andl
push
cli
or
push
icebp
ret
xchg
pusha
mov
adc
cmp
loope
cmp
gs
call
jmp
pop
sub
sbb
mov
push
jecxz
push
movsb
mov
xlat
sbb
add
ret
push
daa
out
push
or
fwait
sub
cwtl
sbb
insl
adc
xchg
insb
mov
push
dec
add
jo
lock
mov
ficoml
mov
mov
cltd
mov
cmp
icebp
unpcklps
sar
orl
daa
sbb
movsl
jne
add
mov
out
mov
jge
mov
idiv
push
imul
out
mov
push
push
mov
ret
xor
dec
push
not
sub
mov
std
ja
stos
adc
test
jg
mov
es
sbb
in
rol
test
sahf
or
pusha
scas
mov
imul
mov
jge
add
fistl
jae
lock
mov
nop
fstpl
push
pop
push
daa
jmp
inc
js
sub
sbb
dec
jg
pop
sbb
mov
push
mov
jp
xor
mov
jnp
or
scas
mov
jg
fs
sub
jl
movl
adc
test
stos
int
dec
mov
lahf
xor
std
pop
int
pushf
movb
sbb
test
and
jge
jo
mov
sub
cmp
dec
sbb
dec
nop
or
out
insb
scas
xorb
sub
mov
or
add
call
loope
enter
stc
mov
mov
lea
mov
sbb
pop
add
les
xorl
cmp
add
push
xorl
mov
jne
jmp
push
addb
mov
push
pop
mov
popf
sbb
add
sbb
xchg
aas
outsb
mov
add
hlt
jo
cmp
rol
out
xchg
jne
lret
mov
sahf
sub
clc
lea
jp
cmpsl
je
cmp
scas
rclb
je
push
je
or
inc
pop
pop
leave
enter
test
jmp
aad
xchg
push
out
xchg
dec
push
and
push
mov
push
pop
dec
mov
cmp
mov
mov
aam
cmp
add
imul
in
add
insb
mov
mov
xchg
xor
xor
ret
ret
outsb
lret
jae
inc
mov
sub
arpl
xor
mov
jle
xor
push
sti
inc
dec
pop
stos
rorb
mov
pushf
lods
js
mov
punpckhdq
leave
mov
shlb
adc
xor
sbbl
jae
mov
fisubs
jb
stos
mov
push
inc
cli
mov
in
inc
and
mov
push
lods
decl
mov
lea
push
push
ja
jae
or
inc
adc
add
adc
dec
inc
scas
jle
sub
fs
xor
xchg
sub
xor
popa
scas
jle
sub
test
fdivs
add
adc
js
lcall
sbb
add
xchg
mov
scas
in
fs
sbb
sbb
xchg
orl
ds
orb
push
fiaddl
pop
aam
pop
sbb
xchg
popf
dec
sbb
inc
ret
mov
and
pop
xchg
lds
dec
and
in
and
xchg
sub
mov
jb
das
sbb
mov
pop
mov
and
orl
in
fwait
xor
addr16
mov
inc
sbb
sbb
sub
dec
cld
movsb
cmp
setb
test
dec
mov
sub
cmp
fidivs
push
adc
push
push
dec
dec
pop
lock
aaa
cmpb
je
push
fstps
xorb
gs
dec
scas
mov
in
add
push
dec
dec
mov
xchg
jle
hlt
xor
jecxz
add
jno
cmp
mov
scas
sbb
shrl
sti
and
das
push
adc
mov
aas
push
add
push
push
jg
je
pop
testb
adc
or
sub
adc
jo,pt
scas
or
xchg
or
lock
or
iret
jae
pop
jmp
push
xchg
or
sti
pop
mov
adc
mov
fsubrs
add
jmp
dec
and
es
repnz
push
xor
sbb
inc
jl
push
movl
repz
lods
add
and
dec
add
test
xor
pmulhuw
inc
fisttpl
and
xchg
xchg
adc
mov
jo
add
jmp
push
dec
sbb
aam
ret
nop
inc
add
pop
xchg
and
in
ffreep
or
mov
or
les
push
push
enter
outsb
es
push
xabort
add
call
in
fadds
rorl
or
fldt
dec
xor
ret
out
sbb
adc
ret
shl
mov
pop
ja
in
push
out
rcrb
dec
and
rorb
sbb
dec
shll
add
insb
test
add
call
fsub
jle
in
inc
mov
jns
and
push
pop
cmp
lods
out
or
mov
sbb
mov
jb
push
pop
pop
ret
in
adc
and
pusha
xor
mov
push
into
fcomps
pop
fsubrs
inc
shll
push
or
push
and
fldt
jo
pop
es
push
cmp
aam
or
imull
pop
or
push
mov
xchg
hlt
push
in
push
fwait
mov
sub
xchg
xchg
push
adc
push
repnz
in
jae
or
mov
jp
adc
sbb
add
shll
mov
sbb
mov
or
enter
negl
mov
or
je
push
sbbb
pop
cmp
ja
adc
pop
les
scas
or
arpl
dec
cmp
mov
sbb
jmp
incb
je
push
sbb
incl
pop
jne
dec
mov
jmp
dec
mov
sub
mov
insb
js
mov
lcall
dec
add
push
pusha
inc
mov
cmpsl
xchg
sub
xchg
or
cmpsb
mov
sub
insl
adc
dec
js
cmp
jge
mov
mov
mov
xchg
ret
or
cmp
jle
inc
pop
mov
in
pushl
inc
mov
push
roll
call
fcoms
mov
jle
in
adc
mov
andl
out
and
test
mov
jno
data16
jne
fsub
ljmp
push
cld
dec
add
dec
mov
cmp
in
mov
jl
pop
jo
sub
inc
sete
sbb
loope
and
je
jecxz
not
xor
cmpsl
stos
push
les
jbe
pop
fdiv
mov
pushl
dec
dec
mov
mov
rol
sbb
and
mov
add
pop
scas
push
inc
sub
bnd
mov
repz
push
cwtl
in
add
aam
filds
xchg
xchg
push
out
pop
cmp
add
pop
xchg
pop
adc
mov
sbb
loope
sbb
loopne
mov
mov
test
jne
mov
lcall
push
add
mov
in
das
sbb
test
mov
cmp
popf
or
pop
fcmovu
push
mov
mov
mov
sahf
mov
jnp
sub
cmp
dec
pop
or
add
fwait
mov
pop
xchg
sti
add
push
jo
xor
mov
inc
mov
sarb
mov
pop
fcoml
sbb
pop
pop
adc
pop
and
pusha
ret
cs
or
adc
mov
and
or
imul
repz
in
push
ret
cmp
call
mov
clc
jp
lock
cmpl
xor
and
and
in
push
xchg
push
add
jle
xchg
adc
pop
inc
vpshlb
sbb
cmpsl
je
adc
add
pop
inc
add
xor
incl
add
or
add
outsb
insb
fisubl
jl
jb
in
ret
lret
mov
xor
inc
jg
dec
jecxz
sub
movzwl
mov
arpl
lods
adc
mov
jl
cmp
inc
xchg
out
mov
add
hlt
push
sbbb
jb
cwtl
pushaw
loopne
notl
dec
push
nop
orb
or
shl
repnz
data16
adc
push
sbb
sbb
adc
movb
daa
add
mov
in
mov
aaa
stc
lret
lcall
xor
sbb
lea
or
mov
lret
mov
inc
loop
fimuls
shlb
or
pop
popa
mov
rol
push
aaa
mov
mov
or
push
dec
adc
xchg
jl
add
add
mov
sub
mov
jno
movl
sbb
jecxz
inc
jns
xchg
fucom
xchg
dec
sub
and
xor
adc
xor
pop
cmp
sub
imulb
mov
and
push
pop
sub
xor
loopne
mov
sbb
test
xchg
loope
outsb
repnz
and
js
pushf
jb
movsl
aad
icebp
sbb
test
outsl
mov
arpl
xchg
loop
xchg
in
cmp
not
pop
gs
add
dec
mov
andb
sbb
adc
test
push
sub
xor
sbb
add
or
mov
test
xor
push
fcmovnbe
into
aad
cmp
inc
sti
sbb
test
add
sub
popf
mov
push
dec
mov
inc
pop
call
dec
sub
jge
adc
movb
cmp
mov
pop
xorl
repnz
inc
mov
adc
mov
pop
adc
ror
adc
testl
adc
push
sbb
sbb
or
adc
lods
fwait
dec
sub
incl
cmp
push
push
add
pop
adc
mov
jns
inc
mov
inc
sbb
push
out
cmp
cmpsl
rorl
and
shrb
mov
dec
add
in
nop
mov
mov
cmp
aam
xor
lret
in
mov
sti
movsb
adc
lds
adc
mov
sbb
and
stc
outsl
filds
push
in
push
adc
std
in
add
cli
add
sub
in
mov
in
push
mov
fwait
jl
cmp
pop
and
js
js
or
addr16
loopne
jb
ss
jl
inc
lock
imul
into
bound
test
mov
push
pushl
loopne
aaa
repz
fs
push
cmp
push
mov
xor
sbb
int
push
mov
in
fwait
cmp
es
add
mov
arpl
push
test
fsubrs
xchg
leave
aad
mov
movsb
mov
repnz
adc
ret
jbe
add
pop
fwait
cmp
push
xlat
lods
maskmovq
push
xorb
sarb
sbbb
mov
sbb
pop
test
mov
outsl
pop
sub
mov
jo
js
xchg
cmp
repnz
fisttpl
pop
icebp
loope
int
or
lods
sahf
pusha
out
mov
mov
lea
cwtl
jmp
xchg
fs
sub
or
rclb
dec
mov
mov
jno
testb
adc
cltd
mov
popf
imul
push
lea
in
or
xchg
call
pop
lea
lahf
fs
in
xor
mov
mov
in
call
inc
pop
aad
rolb
mov
jne
mov
xor
mov
cli
add
xchg
sbb
je
add
and
and
je
jmp
pop
push
repnz
iret
xor
popa
inc
push
jmp
leave
adc
scas
sarb
dec
enter
add
pop
jb
xchg
pop
sbb
push
xchg
cli
lcall
jg
clc
sti
into
mov
rcrb
push
lret
or
dec
push
mov
mov
insl
movsl
add
mov
xor
sbbb
cmp
lods
popl
popf
jp
popf
pop
fs
add
test
insl
fcoml
popa
xchg
cltd
nop
xor
cmp
sub
add
rcll
xor
inc
push
jge
imul
xchg
push
mov
or
xchg
push
xchg
loopne
xchg
jbe
push
mov
aad
sub
imul
ds
ret
push
pop
data16
test
orl
shll
cmp
xor
subb
js
or
add
mov
sbb
sub
cmp
in
add
adc
imul
test
push
mov
adc
xchg
cmpsl
cli
sub
movsl
enter
mulb
pusha
jnp
sbb
or
mov
pushfw
mov
push
pushf
loopne
pop
shlb
out
mov
push
push
loope
or
push
clc
ljmp
out
out
insb
out
aaa
pop
pop
mov
mov
adc
mov
lcall
pop
mov
sub
xchg
sbb
in
add
sahf
add
rol
jg
mov
shrl
mov
shlb
mov
aam
clc
dec
xor
test
sub
jnp
pop
repz
add
pop
leave
inc
dec
pop
mov
mov
push
xchg
inc
out
test
ss
sbb
xchg
push
aam
mov
dec
loope
add
or
or
or
push
repnz
cmpsb
or
test
or
jns
icebp
push
sbb
pop
sbb
mov
sarl
out
lret
xchg
js
dec
mov
mov
push
dec
xchg
dec
add
add
mov
mov
scas
xchg
pop
add
fiadds
test
cs
leave
sub
or
push
mov
pop
mov
call
fisttps
push
add
pop
pop
fiadds
fdivl
mov
adcl
xor
jns
cmp
in
or
mov
add
xchg
pushf
dec
test
out
jle
inc
gs
or
pop
loopne
aam
dec
rolb
in
pop
or
jne
push
jb
in
mov
sbbb
xchg
ret
sbb
cmp
pop
mov
mov
xchg
push
jl
inc
mov
lret
pop
adc
lret
pop
enter
push
mov
xchg
pop
add
enter
sbb
test
cmp
sbb
dec
push
push
add
outsl
cwtl
sbb
inc
loopne
dec
in
adc
fadds
scas
loopne
pop
rolb
xchg
cs
xchg
fisttps
adc
add
lods
pop
xchg
push
test
dec
and
addb
inc
push
adc
dec
cwtl
loop
or
mov
dec
cmpsw
or
int
shrl
dec
loopne
repnz
pop
fildll
xor
mov
add
imul
pop
call
sbb
fdivrs
jbe
pop
test
jp
mov
push
mov
push
and
jnp
inc
fs
sbb
and
xor
in
fidivl
add
push
loopne
popa
mov
jae
mov
and
sbb
jne
ror
or
xor
sub
mov
and
push
jno
pushf
mov
dec
leave
rorb
into
sarl
jns
push
push
sub
fildl
push
je
enter
stc
and
adcb
xchg
mov
mov
push
add
pop
call
stos
mov
cmp
out
sbb
out
sub
inc
jne
mov
cmc
hlt
dec
in
xor
sub
xorl
jo
js
push
mov
jo
push
aam
cli
sub
sbbb
push
fimuls
cs
sub
dec
je
jle
daa
das
xchg
test
xor
inc
jge,pn
or
icebp
sbb
sub
pop
stc
rclb
mov
into
int3
xor
sbb
arpl
push
scas
ja
push
mov
sti
xchg
lds
sub
enter
shlb
sbb
mov
jo
int3
sub
ja
pop
jmp
call
iret
pop
loope
push
mov
dec
call
inc
aad
xorl
adcb
mov
adc
mov
test
jl
pop
shr
dec
mov
sub
and
mov
pop
enter
jo
push
pop
icebp
dec
loop
cmp
xchg
enter
adc
mov
movups
pop
cmpl
inc
sarb
sbb
lods
in
aam
pop
and
fcomps
mov
adc
fidivrl
mov
loope
loopne
addb
cmpsl
or
lock
insl
pushf
adc
adc
shll
push
and
mov
or
leave
mov
or
pop
or
jno
xor
insb
movsb
xchg
push
xor
mov
or
sub
jae
fmull
and
shlb
xorb
cmp
xchg
mov
add
and
jnp
or
out
add
mov
cli
repz
call
or
cmpl
push
mov
mov
sbb
jns
lret
ror
or
int3
mov
ret
test
mov
push
nop
mov
test
lea
test
jns
faddp
lcall
push
pop
push
icebp
or
and
pusha
mov
adc
fiadds
inc
adc
add
mov
pop
xchg
xor
adc
pop
dec
adc
mov
lcall
aaa
and
cmp
pop
cmp
or
shll
mov
repz
iret
and
dec
and
add
sub
pop
ds
lock
dec
cltd
addl
out
sarl
hlt
sub
push
arpl
or
fistpl
push
stos
out
jno
add
push
mov
cmp
mov
mov
adc
push
cs
sbb
adc
jne
sbb
fldl
sbbb
loope
call
lea
push
sahf
pushl
dec
pusha
cmp
ficomps
mov
pop
stos
js
js
pop
clc
mov
pop
add
inc
out
and
stc
mov
fmuls
lods
jge
cmp
lret
lret
fs
in
push
mov
sub
rcll
test
pop
inc
shrb
shll
pop
push
ja
repz
cltd
test
pop
or
or
stos
add
imul
lea
push
jae
mov
xchg
daa
add
cmp
mov
icebp
push
lock
sub
sub
cmpb
rolb
add
into
xchg
test
push
lcall
add
jp
inc
cmpsb
xor
push
rcl
aaa
and
fsubp
jmp
ret
in
fmuls
adc
cmp
adc
mov
sahf
dec
xorps
cmpsb
in
loope
cmp
push
pop
sub
inc
loope
pop
xchg
sti
lea
shrl
sub
push
inc
xchg
sbb
or
pcmpeqb
rorl
add
int3
hlt
or
lds
pop
fcmovnu
jmp
inc
lret
cmp
jl
call
mov
int3
xor
sarl
pop
sub
cmp
jle
iret
je
dec
sbb
icebp
jne
sub
sbb
push
jmp
ret
sti
add
push
ss
jae
adc
fstpt
out
repnz
fnstsw
lock
sub
push
adc
adc
cmc
jle
and
sub
push
xor
fwait
push
push
in
pop
adc
mov
jne
daa
add
mov
in
sub
xor
popa
fcoms
push
jmp
xchg
test
or
pop
mov
cmp
fsubs
push
repnz
push
and
fisubrl
jno
cli
pop
mov
nop
cmp
inc
or
pop
pusha
ret
or
jne
jnp
or
scas
add
add
and
jle
push
adc
adc
bound
call
shrb
add
adc
clc
stos
fstps
push
adc
stos
cmpb
adc
add
mov
xchg
mov
or
les
rcl
mov
inc
cmpl
jb
dec
add
add
dec
mov
pushf
add
sbb
mov
cmp
lock
popa
adc
dec
sub
mov
sub
mov
or
and
xchg
jnp
push
jno
lea
xor
rcrl
fadd
shll
xlat
aaa
mov
out
dec
push
aad
cmpsl
mov
xchg
outsl
sub
movl
push
scas
push
nop
inc
xor
mov
bnd
adc
shll
test
sub
adc
stos
or
dec
mov
test
mov
push
pushfw
add
or
ficomps
mov
mov
es
push
fs
test
addl
shr
push
dec
jno
add
add
nop
cmp
clc
or
in
popf
push
adc
jbe
cmp
int
push
adc
sahf
or
int
push
push
hlt
push
push
mov
or
pop
push
mov
dec
fs
sbb
inc
lods
add
int3
add
sbb
xchg
test
push
cmp
xchg
xchg
faddp
jmp
xchg
lock
pop
pop
push
xor
cli
jmp
inc
adc
shll
negb
inc
cmp
lods
cmpsb
and
scas
push
inc
sub
pop
mov
mov
fiadds
flds
xchg
sbb
scas
push
push
jno
push
sbb
xlat
lret
add
scas
cli
mov
push
enter
or
cmp
cmp
scas
test
inc
loopne
pop
scas
cmp
lcall
jne
cmp
add
in
nop
adc
or
adc
or
mov
sub
add
icebp
lret
rclb
inc
inc
test
xchg
test
add
aam
add
cmovae
add
cld
add
dec
add
ror
adc
orb
adc
adc
scas
jo
cmp
out
repnz
adc
fisubrs
or
loope
testb
add
sub
adc
inc
fsubrl
jns
cmpsl
in
jecxz
add
sbb
mov
pushw
add
jge
mov
push
mov
add
lds
push
loop
mov
mov
ss
xor
push
cwtl
mov
xchg
jne
ret
and
rclw
mov
outsb
push
fisubl
inc
push
jl
push
sub
ja
rolb
xchg
sbb
add
lret
push
std
mov
push
dec
fstpt
push
push
out
sub
popa
sub
adc
add
adc
outsb
nop
lock
ret
push
mov
rcl
xchg
inc
in
and
inc
sbb
inc
push
inc
adc
xchg
bound
loopne
sahf
and
jle
dec
mov
add
int3
jbe
xchg
sbb
mov
neg
push
mov
push
cmpsl
pusha
add
mov
icebp
pusha
sub
pop
out
jne
stos
daa
push
clc
mov
push
je
inc
jmp
inc
lods
or
mov
jae
out
lea
adc
fsubrl
and
mov
xor
or
test
cmc
lods
test
push
or
add
mov
xchg
jno
sbb
mov
add
loopne
in
call
stos
outsl
cmp
adc
andl
pop
andb
daa
adc
dec
jne
lret
outsb
ret
in
int3
add
mov
ret
or
call
jmp
push
or
dec
repnz
ljmp
adc
movl
mov
inc
add
mov
push
rolb
cmp
xor
push
sbb
divl
pushf
add
sub
in
xor
pusha
push
jbe
push
adc
mov
lahf
jae
lcall
stos
sbb
je
orb
dec
popf
test
js
jl
subl
jp
insl
lret
icebp
push
stos
mov
and
inc
scas
movsl
cmp
push
add
mov
movl
lea
sbb
push
or
pop
xchg
pop
sub
mov
in
je
jo
pop
bound
in
dec
pushf
fsubrl
enter
movaps
lret
jmp
jmp
daa
cltd
inc
push
das
leave
ret
inc
or
dec
orb
sbb
adcl
test
outsl
fsubl
rorl
add
inc
inc
js
mov
faddl
or
iret
cli
adc
je
orl
push
in
int
adc
pop
or
inc
loope
test
mov
iret
lea
aaa
add
in
aaa
mov
dec
jno
shrb
popf
rolb
jne
jnp
push
adc
test
ss
pop
loopne
shlb
mov
fs
popf
dec
dec
adc
lret
loope
scas
or
dec
orl
stc
inc
cmp
fnstcw
sbb
nop
xor
push
pop
and
mov
in
xor
pop
push
in
shlb
lahf
cld
lea
mov
adc
mov
mov
push
js
sub
in
push
and
dec
dec
xor
test
xchg
xor
add
sub
sbb
mov
inc
sbb
lds
aam
inc
enter
pop
sub
xlat
rorb
pop
loopne
lods
cs
imul
add
clc
scas
shl
push
iret
mov
add
fldcw
xchg
cmp
sbb
arpl
out
cmc
loop
mov
jns
push
cltd
sbb
or
push
mov
pop
imul
out
push
adc
mov
sub
push
mov
shrl
and
mov
scas
jbe
into
xchg
icebp
mov
enter
lea
clc
adc
aam
pop
mov
push
dec
xor
movb
js
sub
lock
push
cmp
sbb
movsl
add
sbb
pop
sbb
icebp
dec
rcll
jae
mov
cs
inc
sbb
mov
fildll
cs
jmp
mov
dec
sbb
jge
gs
movsb
imul
imull
int3
mov
ror
movsl
lret
imul
sub
in
mov
sub
add
inc
mov
in
mov
loop
mov
shrl
mov
jg
das
loopne
and
inc
or
test
and
mov
mov
pop
and
and
inc
xor
sbb
js
or
dec
sbb
mov
pop
mov
imul
push
pop
inc
or
mov
pop
pop
push
mov
push
sub
out
xor
pushf
sbb
jb
push
int
std
pushf
sbb
inc
lcall
or
xlat
ret
sti
faddp
shl
xor
add
sbb
enter
shll
add
or
pop
notb
roll
add
mov
add
and
lods
sub
adc
repnz
and
push
mov
daa
std
lods
mov
and
inc
add
and
pusha
sbb
adc
push
xor
bound
xor
mov
cld
jmp
or
mov
call
decb
and
hlt
pushl
mov
mov
int3
and
mov
adc
xchg
test
sub
nop
mov
orb
repz
daa
mov
loope
test
int
fisttps
loopne
xor
les
cmp
pop
sub
xchg
inc
sahf
xor
fwait
push
sbb
or
dec
push
ja
mov
mov
push
cld
xor
xlat
inc
mov
test
push
stos
sub
fcmovb
dec
test
dec
jmp
shr
pop
inc
fstpl
adc
dec
sar
outsb
add
call
xchg
cli
mov
add
fistpl
hlt
lea
adc
push
mov
repz
arpl
push
loopne
pushl
insb
testl
add
int
add
or
dec
stos
or
loope
fcomps
mov
and
lea
rorb
dec
xlat
push
and
es
insb
xorl
ficoms
jo
inc
insb
pop
xchg
dec
adc
icebp
cmpb
sbb
cld
adc
xchg
add
rorb
jl
sbb
add
inc
pop
mov
adc
inc
push
outsb
idivb
jl
push
shl
clc
mov
movsb
adc
add
jno
pop
mov
rcrl
sarb
xor
cmp
xchg
jo
jns
adc
sub
xchg
dec
or
loope
mov
mov
push
and
adcl
test
adc
jmp
call
push
and
and
fmuls
cmpl
clc
add
int3
inc
loop
mov
jns
or
out
push
les
add
push
inc
loop
outsl
lea
rorb
mov
inc
cmp
cmp
mov
imul
pop
mov
adc
or
and
sub
mov
out
inc
xchg
pandn
mov
xchg
mov
cmpl
mov
jbe
xchg
dec
mov
ss
adc
js
xchg
test
push
ljmp
into
or
inc
push
dec
popf
insl
out
xchg
jo
gs
nop
test
mov
sbb
fadds
sti
adc
add
xchg
push
adc
xor
cmp
mov
lcall
lods
xor
add
and
cmp
push
jns
adc
addr16
jno
enter
lods
sub
lret
clc
test
stc
adc
xor
push
cs
mov
mov
lret
ss
lods
jo
dec
jp
out
cwtl
xor
nop
leave
pop
mov
xlat
push
adc
dec
and
jno
or
jne
outsb
and
pop
jnp
call
xchg
enter
lds
and
or
xor
inc
jle
sbb
pop
pop
fdivs
test
shll
xchg
shlb
mov
cmp
in
cmpb
ds
pop
pop
lret
aam
xor
dec
or
jmp
jnp
orl
push
push
lods
dec
insb
or
je
adc
or
pop
cmp
xchg
add
call
ds
sarb
mov
or
out
mov
int3
jg
test
fwait
cs
test
pop
aas
clc
stos
jne
cmp
push
add
mov
lahf
cmp
int
loopne
in
mov
andl
mov
out
push
push
mov
or
pop
pop
jmp
or
cmp
test
or
inc
pop
aas
fcomps
dec
lods
gs
cmp
pushf
mov
jle
cmp
adc
dec
fdivs
ret
push
adc
xchg
fsubr
aam
out
rolb
mov
movsl
inc
fwait
pop
mov
jmp
or
cmp
test
cmpsb
xchg
xor
push
ds
add
test
hlt
dec
fcoml
popa
sbb
cmpsb
arpl
push
push
lock
insb
push
push
push
dec
or
lcall
add
push
lcall
sbb
cmpsb
arpl
push
cmp
sbb
xchg
push
mov
pop
fldenv
jbe
xchg
cmpsl
adc
aaa
add
dec
rol
scas
jge
fadd
push
popa
aam
jp
pop
jmp
pop
push
mov
inc
adc
dec
xor
enter
cmp
cld
das
rorl
incl
jmp
and
nop
sbb
add
rolb
ljmp
xchg
push
je
add
xchg
jmp
inc
adc
dec
pop
arpl
mov
mov
jbe
mov
and
sbb
xor
pop
mov
sbb
and
inc
pop
dec
cmp
cld
xchg
popa
xchg
xor
ljmp
add
insb
or
cmp
dec
scas
les
outsb
mov
add
pop
sbb
fcompl
xchg
leave
and
fcompl
pop
xchg
je
clc
push
inc
or
pusha
in
cmp
mov
xor
mov
or
lock
jb
dec
pusha
pop
push
inc
jecxz
and
sbb
sti
bnd
ja
out
mov
in
dec
add
inc
add
or
push
sub
push
jmp
push
sbb
xlat
pop
and
hlt
xor
push
xlat
clc
scas
addr16
cmp
dec
in
jno
lea
lea
mov
mov
xchg
sbb
imul
xchg
push
ret
mov
js
pop
fimuls
mov
xor
or
shr
pop
pop
pop
int3
push
inc
call
sbbl
and
push
andl
stos
mov
mov
xchg
add
fadds
dec
and
test
push
fidivrs
and
sbb
adc
mov
and
and
cmp
sbb
fsub
mov
xor
insl
add
je
lods
call
xchg
mov
aam
add
push
mov
inc
pop
stc
imul
in
divl
mov
adc
sub
or
adc
push
sub
or
popa
into
movsb
mov
roll
mov
xchg
sbb
xchg
cmpsl
jmp
jae
or
push
in
pop
sbb
popf
push
push
push
shll
cmp
rcr
rolb
dec
xlat
scas
sub
popf
jb
adc
lods
ret
fcmovb
mov
jle
lahf
mov
inc
aaa
or
call
movl
add
inc
inc
adc
ljmp
or
or
sbb
sub
subl
jae
repnz
jge
and
add
mov
ret
sbb
sbb
and
andl
sarb
ss
mov
cmp
mov
adc
in
jno
xchg
add
push
xor
xor
dec
push
je
dec
jne
push
and
mov
popa
mov
xchg
jo
ds
adc
cmc
lahf
lret
sub
inc
sub
hlt
mov
int
leave
aam
repnz
adc
int3
pop
andb
frstor
sub
cmp
xchg
loopne
push
add
sub
shl
add
pusha
and
arpl
sub
pop
or
arpl
movl
mov
xor
mov
in
mov
mov
lea
cli
jb
lea
or
xlat
mov
loop
pusha
pushf
mov
jmp
lea
ret
and
das
popf
pop
ja
mov
pushl
pop
push
test
je
adc
mov
add
mulb
inc
mov
test
dec
hlt
daa
lods
push
cmpsl
inc
mov
jo
adc
and
loope
or
inc
push
push
ret
test
enter
adc
mov
daa
shlb
dec
push
clc
cmpsb
push
test
jge
outsl
cmp
mov
cwtl
test
jnp
xchg
inc
inc
xor
mov
dec
or
or
call
das
jg
popf
dec
repz
and
dec
lahf
fs
orb
add
adcb
mov
mov
xor
lods
push
inc
or
pop
jo
inc
adc
jl
push
mov
inc
cmp
scas
adc
sub
push
adc
pop
mov
test
aaa
movsb
imul
adc
mov
mov
inc
xor
push
insl
ret
inc
jbe
les
mov
xor
popa
dec
dec
jbe
mov
or
pop
fsubs
mov
adc
fildl
push
push
and
sub
jmp
fwait
jmp
sbb
fs
dec
adc
rcrl
add
push
mov
pop
lock
push
test
fdivs
scas
subb
icebp
adc
mov
in
adc
lds
sbb
and
jg
ja
jge
dec
dec
mov
sahf
or
or
ja
inc
cmp
sbb
test
inc
pop
and
push
sbb
or
ret
sbb
andb
addr16
enter
mov
push
mov
push
imul
ret
push
ret
and
insb
dec
lock
mov
fidivs
call
mov
and
dec
lock
mov
enter
sub
mov
ja
push
shrl
aad
mov
ss
sbb
xor
mov
ds
pop
jae
inc
bound
cmp
add
ja
popf
inc
int3
inc
daa
insl
add
xchg
push
rcpps
clc
mov
xchg
addb
ss
jnp
add
mov
cwtl
pop
push
popf
fchs
sahf
lcall
sbb
loop
push
push
and
push
sub
lods
xchg
add
mov
inc
lods
cld
outsl
data16
fildl
call
nop
nop
inc
or
or
cwtl
or
mov
jle
push
cltd
mov
in
lods
mov
jp
je
xchg
and
adc
mov
sarb
and
jae
bswap
shlb
mov
add
sbb
jmp
mov
movsl
in
lock
push
add
sub
mov
loopne
xor
inc
cmp
fdivr
inc
dec
pop
cmp
push
mov
data16
pop
or
pushf
adc
sbb
push
fistps
xchg
test
cmpsb
mov
je
push
push
fdivs
subl
loopne
dec
roll
iret
sbb
inc
pop
adc
fidivs
mov
sbb
cmp
push
je
incl
cmp
outsb
sub
mov
cmp
cmp
dec
dec
dec
jmp
aam
dec
fs
pop
mov
inc
cli
dec
inc
or
pushf
sbb
sbb
pop
testb
push
test
hlt
ljmp
jbe
and
sbb
mov
outsl
jbe
lret
aas
add
adc
jae
test
sub
inc
mov
mov
push
outsl
ja
mov
pop
mov
cmp
mov
dec
cmp
cmp
mov
mov
adc
es
jo
adc
xchg
adc
mov
rcrl
adc
jl
loopne
aaa
push
jo
and
cmp
inc
negb
cwtl
adc
ds
push
mov
fdivrl
or
inc
fadd
cmp
mov
fstl
pop
and
stos
fs
lret
inc
hlt
aas
cmp
push
imul
cltd
scas
movb
in
add
jge
sbb
ljmp
out
push
push
ljmp
fstps
movsb
cltd
mov
jo
push
ficoml
aam
stc
or
push
dec
jno
and
sub
adc
add
pop
and
jl
in
sbb
fcomip
es
sub
and
sbb
add
pop
mov
mov
sbb
ficoms
pop
ljmp
mov
jne
sub
xor
push
xchg
adc
scas
pop
and
xchg
pop
or
push
lock
in
and
xor
gs
fistps
xor
int
add
fsubl
sub
fwait
addb
inc
jne
adc
add
xchg
movl
or
and
xor
movsb
jb
fwait
dec
pop
add
xchg
inc
cs
pop
add
ret
and
aas
movl
push
cmp
pop
mov
pushf
sub
test
adc
push
into
sub
dec
adcl
out
dec
sbb
jnp,pn
push
xor
mov
pop
push
sub
and
xchg
and
and
jb
orb
push
gs
xor
addl
push
std
adc
cmp
xchg
int3
js
mov
pushf
es
sub
xor
lea
or
sub
or
mov
scas
xor
pop
movsb
mov
push
cmp
cs
mov
mov
inc
mov
loopne
fidivl
subl
mov
sbb
adc
nop
out
nop
out
xchg
dec
sub
das
push
clc
nop
orb
sbb
lods
movsb
cltd
xor
xchg
dec
mov
jb
xor
xor
xor
and
shll
xchg
or
test
push
in
stos
sbb
or
dec
pushf
inc
aaa
ss
test
mov
cmp
je
mov
mov
xchg
adc
cmp
stos
adc
test
mov
mov
cwtl
xlat
dec
inc
push
cmp
add
cwtl
movsb
imul
inc
jg
orb
push
adc
test
dec
add
inc
incb
into
inc
bound
xor
jle
adc
or
mov
loopne
push
and
js
mov
adc
cmp
jmp
push
imul
in
cmpb
jns
sbb
scas
jno
es
ror
test
or
sbb
pop
push
rcrb
add
mov
int3
sub
cwtl
in
pop
mov
push
fs
pop
jle
add
pop
mov
mov
xor
std
mov
adc
fs
aam
out
std
jne
cmp
jbe
decl
ljmp
pop
lea
add
lea
popa
addb
filds
jmp
dec
rorl
jo
jne
ja
add
sahf
into
or
xor
xor
jmp
scas
es
cmp
ljmp
ret
ljmp
jno
arpl
inc
rcrl
scas
ljmp
lock
push
iret
lds
inc
or
aam
sbb
pop
or
push
xor
pop
dec
inc
xchg
add
pop
xchg
push
jg
cmp
fidivrs
ret
cmp
mov
pop
icebp
jge
incl
je
stos
ljmp
aaa
call
aam
push
add
cmp
in
iret
mov
sbb
add
or
dec
out
ljmp
test
cmpsb
lcall
xor
push
aad
in
cmp
and
clc
pop
lcall
rolb
xor
mov
or
mov
adc
fcmovnu
scas
add
imull
add
inc
cmc
xor
adc
pusha
add
or
pop
push
out
cmpsl
fcmovnbe
mov
in
fs
ja
rorl
jae
sub
mov
push
test
pop
fimuls
push
xor
adc
mov
pop
cmp
mov
cmp
pop
mov
adc
sub
fs
adc
push
lea
ja
adc
aad
xor
adc
aad
pop
jg
xor
in
push
mov
xor
test
pop
sbb
cmc
dec
test
int
inc
inc
xor
scas
int
pusha
sbb
push
xor
sbb
sbbb
inc
cs
sbb
xchg
add
insb
sbb
sbb
push
in
scas
pop
insl
iret
js
mov
push
dec
mov
mov
jne
jge
jb
dec
and
and
in
dec
xorb
pop
popf
pop
leave
adc
push
xchg
and
test
and
sub
pop
pop
add
shll
and
leave
dec
pop
and
xchg
es
pop
insl
mov
adc
xchg
sub
and
out
jb
sbb
pop
lods
pusha
sub
leave
adc
xchg
sbb
pop
sub
pop
inc
mov
orb
xchg
iret
ljmp
andb
rorl
pop
imul
xchg
xchg
loope
mov
add
test
stos
lock
or
jae
roll
xorl
push
loop
xor
rcrb
pushf
add
cwtl
and
sbb
add
in
sbbb
inc
xchg
push
inc
loop
add
mov
cs
cmp
loope
push
sub
mov
in
and
in
ror
addl
test
sbb
adc
in
add
jno
mov
push
pop
xorl
js
call
mov
stos
sub
fisttps
and
loopne
addb
test
rorb
loop
cmp
insb
repz
or
dec
pushw
enter
push
cs
in
mov
adc
xchg
test
or
dec
loopne
test
mov
adc
jle
lods
test
mov
lea
pop
add
ret
xor
fs
push
mov
in
fwait
inc
movsb
jl
fiaddl
add
sub
or
pop
aad
and
and
xorl
cltd
fwait
inc
sub
call
push
std
dec
add
testl
clc
test
xor
pop
pavgw
adc
mov
movsb
fimuls
xchg
int
adc
aam
mov
cmp
jge
mov
xchg
sbb
jo
or
ret
mov
and
outsl
loopne
rol
xchg
xchg
lods
xorl
movsb
adc
dec
mov
loopne
icebp
out
popa
pusha
adcl
fdivrl
sbb
mov
mov
jo
shr
lock
xchg
in
data16
sti
hlt
pop
in
movups
loopne
daa
stc
rcl
jne
mov
xchg
pusha
fisttpll
sbb
outsb
data16
mov
into
push
jnp
or
sub
xor
rcl
add
dec
sti
jnp
dec
pop
loope
sbb
and
imul
pop
mov
pop
pusha
and
dec
and
adc
push
cmp
frstor
inc
push
hlt
arpl
jbe
fiaddl
jne
dec
xor
pop
scas
ja
jnp
cltd
mov
inc
out
dec
lock
or
mov
pushf
fcompl
or
mov
or
add
fldl
icebp
inc
xor
mov
rcrb
or
inc
push
aaa
sbb
adc
cmovg
and
sbb
xor
adc
testl
mov
cmc
inc
jo
shll
insl
in
lret
xchg
aam
xor
jo
dec
iret
inc
call
xor
cmp
xor
mov
stc
adc
push
adc
and
sub
cld
aaa
dec
jp
hlt
cld
add
add
shrb
sbb
adcb
cmp
jbe
ja
sub
dec
popa
cs
jmp
cmp
inc
jne
add
jp
cmp
inc
jle
test
or
inc
inc
cmp
jae
popa
js
cs
push
pusha
and
ret
daa
inc
xor
cltd
nop
push
mov
setge
push
pop
cmp
xchg
fmull
xor
adc
push
addb
frstor
inc
mov
pop
bound
add
adc
in
mov
push
stos
adc
adc
sub
adc
arpl
adc
insl
sti
add
adc
dec
stos
fistpl
in
pop
pop
lret
enterw
nop
add
mov
sub
leave
cmp
pop
mov
add
rol
int
nop
std
adc
das
mov
movsb
pop
stos
shrl
sub
lods
addr16
clc
lret
add
pop
mov
mov
push
jb
rcrl
xor
mov
lea
pop
push
push
xor
mov
dec
inc
dec
add
cmp
cmpsl
mov
int
sbb
scas
popa
push
push
test
in
sub
push
inc
stos
incl
in
xor
xchg
xchg
mov
pop
fcoms
lock
test
outsb
mov
dec
dec
fsts
inc
cmp
xor
cmp
adc
cmc
movsb
adc
in
mov
loop
popa
sti
mov
dec
add
jne
mov
rol
shlb
sbbl
fcmovb
hlt
pop
inc
popa
add
xor
arpl
add
add
xchg
push
inc
mov
inc
mov
call
push
push
pop
imul
lcall
movsl
add
shlb
lods
shll
lret
xchg
ret
mov
sbb
sbb
test
and
mov
inc
iret
clc
inc
jge
scas
xchg
push
cmp
ja
add
jmp
test
add
or
push
setle
dec
popf
adc
and
adc
aam
fimull
cmp
cmp
sbb
xchg
daa
xchg
int
sub
push
or
insb
adc
mov
sub
or
pop
push
pop
push
jp
adc
add
sub
cpuid
adc
add
lea
push
adc
repz
cwtl
xchg
insl
dec
mov
sahf
or
or
lea
iret
pop
popf
movsb
sub
out
dec
lret
and
push
lods
clc
ja
mov
scas
insb
dec
push
cmp
inc
cmp
and
push
std
cld
or
jmp
cmp
mov
ss
je
aaa
js
test
cmpsb
adc
adc
rorb
adc
inc
mov
and
les
sub
push
cmpsb
cmp
andb
push
fdivs
pushf
xor
loop
dec
add
dec
int3
xor
stos
xchg
cmp
jle
or
xor
sbb
add
test
dec
adc
push
mov
jmp
push
sbbl
fstl
or
cwtl
cmp
jecxz
add
ds
dec
dec
lret
sbb
je
outsb
xchg
filds
push
mov
xor
cmp
dec
inc
inc
in
dec
dec
inc
mov
inc
dec
data16
xor
pop
dec
aaa
add
push
data16
lock
outsl
insb
fstps
pop
orl
fwait
out
jo
add
stc
push
ficompl
mov
test
mov
jno
cli
push
movl
xchg
jle
lea
or
xchg
push
lea
add
dec
mov
xor
mov
test
push
pusha
faddl
sub
loope
jns
outsb
sbb
insb
and
ss
andl
imul
mov
pop
adc
andl
stos
jbe
sub
mov
sub
adc
mov
cmp
mov
cmp
cmpsb
sti
xchg
roll
push
sbb
fists
xchg
bound
and
sbb
and
add
adc
add
mov
pop
clc
inc
dec
pusha
pop
push
dec
xor
xor
add
xorl
cwtl
movsl
add
push
push
addb
or
and
insb
sub
add
fsubl
ss
adc
hlt
out
jnp
sub
sbb
arpl
or
mov
mov
imul
push
dec
das
add
mov
add
mov
loope
imul
add
pop
push
cmp
xchg
adc
call
sbb
test
push
nop
push
jb
push
add
sub
pop
sbb
xor
lcall
mov
mov
xchg
xor
push
jp
or
mov
sbb
cmpb
push
lea
pop
loopne
rorl
in
out
out
pop
cli
pop
inc
mov
pop
add
adc
mov
insl
xchg
jle
adc
push
sub
mov
clc
xchg
add
jne
push
adc
in
mov
aaa
hlt
dec
stc
push
std
scas
insb
or
in
movsb
shlb
js
test
add
pmaxsw
pushf
sbb
test
add
xchg
or
push
test
sbb
pusha
pop
mov
adc
add
nop
dec
inc
jae
dec
lcall
xchg
xlat
loopne
mov
jo
movsl
test
scas
jne
add
mov
fsubrp
jp
mov
movsbw
ffree
loopne
dec
sbb
jns
aaa
mov
cmp
clc
and
or
or
fwait
sti
or
dec
inc
push
insl
imul
shlb
adc
insl
hlt
push
inc
or
push
jle
rolb
out
dec
ds
add
shll
stos
or
movsb
arpl
push
jle
inc
imul
ret
lea
imul
enter
pushf
ficoml
cmc
add
mov
xor
scas
push
loopne
testl
adc
cmp
sub
dec
xchg
insb
mov
sti
sbb
xor
test
imul
rorb
xchg
dec
jnp
mov
dec
jp
clc
pop
push
pop
test
sbb
xchg
adc
lea
add
mov
add
sbb
and
push
adc
sbb
sbb
sti
dec
cltd
pop
mov
les
mov
push
test
mov
mov
cmp
je
and
xchg
movsl
aaa
lret
mov
mov
inc
and
bound
pop
push
fsubs
push
push
jns
nop
sbb
jmp
cmp
sub
and
bound
lahf
mov
add
stos
dec
xchg
stos
paddb
xchg
pusha
push
mov
sub
mov
repnz
cmp
movsl
adc
add
imul
in
lods
add
mov
in
push
lahf
je
sub
lods
or
pop
mov
cltd
jle
shlb
rcll
dec
jbe
push
xchg
jle
dec
mov
ret
aam
fs
wbinvd
iret
lock
mov
lock
imul
std
sbbb
hlt
call
imul
jbe
sbb
add
push
or
sub
subl
inc
adc
ficoml
and
sbb
daa
movsl
lahf
xorl
imul
pop
divps
dec
or
push
in
stc
dec
inc
pushf
dec
ja
movb
fsubs
cmpsl
dec
sahf
stc
xor
mov
std
jnp
pop
movl
testb
stos
xchg
dec
push
or
mov
dec
lock
sub
pop
loope
test
xchg
push
xchg
clc
lcall
ret
stos
testb
push
fcmovnbe
pop
mov
clc
mov
call
mov
or
xchg
cs
pop
and
mov
in
jno
hlt
cmp
push
mov
inc
xor
jne
or
inc
sub
lar
inc
sub
xchg
ja
fildl
inc
lea
clc
adc
rcll
aam
jmp
add
gs
mov
cmp
add
add
inc
dec
push
mov
mov
xor
jl
imul
cmp
ss
jge
or
in
in
adc
scas
pop
xchg
or
movsl
add
movsl
rorl
pusha
leave
inc
inc
jno
mov
lret
popa
inc
inc
lahf
lods
sub
hlt
cwtl
push
mov
and
and
hlt
add
inc
ds
sub
aam
dec
mov
decl
adc
stc
jmp
push
push
push
push
aam
mov
cld
cwtl
sub
add
mov
pop
add
xlat
or
jne
mov
dec
jne
pop
push
push
fcompl
clc
cmp
jne
pop
mov
jle
sub
mov
xchg
sbb
push
lea
pop
mov
and
dec
dec
pushf
das
rorb
xchg
nop
push
mov
adcl
nop
push
cwtl
clc
xchg
mov
add
cs
sahf
int3
fwait
insb
pop
jp
and
push
push
xchg
push
sub
xchg
jp
frstor
jo
movsl
movsb
jle
lret
dec
mov
inc
cwtl
lcall
rorl
add
adc
mov
lea
out
imul
in
js
mov
push
fnstsw
mov
and
test
stc
or
cmp
mov
mov
xor
cmp
jbe
js
mov
insb
popf
enter
adc
mov
sbbb
sbb
push
jns
daa
jne
mov
inc
adc
and
and
aad
add
cmp
idivb
add
pop
push
xchg
or
dec
call
inc
mov
push
adc
lcall
mov
mov
adc
mov
xchg
xor
lea
or
mov
cmp
cmp
imul
movsl
js
hlt
enter
sub
xor
lret
or
push
sarl
fidivrs
push
push
rorl
mov
dec
push
fcmovb
ret
add
repz
jle
std
sbb
shll
stos
jbe
cmp
ret
push
or
xchg
roll
inc
push
mov
or
jnp
pop
mulb
jnp
nop
adc
push
cmp
push
push
lock
fsubrl
xchg
bound
mov
add
gs
ret
lock
es
sahf
xchg
jne
mov
push
fists
js
jg
sub
pop
xor
adc
push
outsb
jne
clc
xor
addr16
xlat
aam
add
add
push
add
fmull
inc
sbb
shll
sbb
sub
fcmovu
inc
pop
xchg
cmp
in
and
jae
dec
inc
adc
jo
rclb
les
and
mov
lods
in
les
mov
and
cmp
jb
and
and
dec
mov
in
mov
scas
push
int3
jecxz
mov
mov
cmp
push
outsl
push
push
or
mov
jae
add
mov
je
pop
dec
pop
addps
add
sarb
push
or
jmp
sbb
or
pop
int3
and
sbb
je
ficoml
pop
push
and
cmovno
les
adc
mov
bound
mov
in
fs
xor
mov
adc
mov
inc
adc
mov
cmp
push
jbe
cmp
je
test
xorb
push
test
sub
bound
inc
enter
popa
js
fsubl
dec
das
sbb
loop
dec
cmpsb
add
and
dec
mov
fs
sbb
push
mov
xchg
icebp
test
sub
ss
add
movsl
aad
or
mov
ss
sub
mov
dec
int
jp
pop
ljmp
xchg
lahf
rcll
adc
jge
es
loop
pop
and
or
in
rcrl
and
cmp
fchs
jmp
test
add
push
loopne
or
sbb
lret
adc
or
mov
xor
and
cmp
or
jnp
lret
or
pop
fimuls
gs
mov
add
ss
dec
and
mov
mov
push
stc
jle
add
data16
add
testl
jne
push
or
mov
push
sbb
cmp
sub
adc
stc
xchg
fdivl
je
enter
popf
pavgb
xchg
sahf
mov
or
fcom
sbb
push
mov
jecxz
std
mov
xchg
pop
aas
pop
or
icebp
jb
pop
shlb
push
sbb
cld
dec
dec
push
sub
jp
sub
and
shr
jae
mov
lcall
dec
movzwl
jle
outsl
sub
add
pop
or
inc
test
dec
add
pmulhw
xor
cmp
dec
nop
and
sub
sbb
mov
shll
inc
jae
xorl
notl
pusha
nop
mov
push
sbb
jp
inc
jne
mov
mov
sub
xchg
cmp
and
std
cmpxchg
dec
pusha
cmp
jne
fs
mov
jne
dec
push
cmc
ret
shl
or
add
pop
and
repnz
pop
push
dec
xor
imul
fdivl
dec
sbb
jle
scas
shll
or
loop
sbb
insl
fstps
ja
xchg
adc
or
and
je
lds
imul
icebp
loopne
ret
jge
cmp
fsts
int
call
xlat
push
push
cmp
cmp
movsl
push
mov
scas
mov
jne
andb
cmp
stc
fstpl
pushf
adc
mov
inc
push
add
pop
or
aam
lock
popf
mov
and
ss
enter
and
rorb
scas
inc
inc
mov
leave
pop
repnz
mov
pop
js
sbb
adc
and
in
add
mov
push
mov
dec
nop
and
add
mov
shll
adc
rcr
fisubl
pusha
mov
stc
mov
fimuls
push
nop
xchg
push
popa
sbb
jne
cmp
dec
pop
out
scas
xchg
pop
jmp
push
pop
dec
daa
mov
dec
or
cmpl
sbb
inc
jp
jo
or
and
dec
jg
popf
loopne
or
fnstenv
mov
xchg
and
or
insb
xlat
mov
mov
jl
push
imull
inc
hlt
test
fimuls
fmuls
fsubl
mov
ret
inc
dec
pop
jne
adc
mov
xorl
adc
xchg
bnd
or
or
pop
push
and
and
mov
js
mov
pop
mov
and
pop
xor
je
fs
stos
pop
les
push
js
in
push
adc
pop
imul
sbb
scas
pushl
mov
test
push
rclb
ss
loopne
sets
es
adc
mov
inc
lsl
outsb
and
mov
mov
imul
stos
mov
jne
cld
ljmp
dec
adc
push
pop
mov
stos
roll
add
nop
xchg
mov
enter
jo
jecxz
push
in
cmp
shrl
mov
stos
cltd
test
imul
sub
orl
jb
xchg
mov
inc
dec
in
pop
shlb
sub
enter
adc
rclb
aaa
jmp
nop
adc
pop
jmp
adc
in
sub
pop
push
test
pop
iret
jo
inc
jmp
adc
mov
xlat
sub
pop
popf
je
fbstp
sub
inc
mov
sub
in
inc
xchg
dec
test
pop
inc
movsl
mov
and
adc
dec
pop
mov
dec
dec
or
or
push
jno
add
mov
jg
les
cmp
sub
jns
or
and
add
xchg
divl
adc
mov
out
inc
and
sbb
push
addr16
push
mov
dec
test
dec
push
clc
inc
lret
rorb
pop
mov
fldt
add
js
push
push
push
shlb
sub
mov
out
popf
outsl
push
add
mov
iret
cmpb
inc
inc
dec
push
jle
and
test
out
cmp
adc
and
jne
xchg
sbb
sub
jae
mov
lock
in
push
test
outsb
mov
inc
test
and
xchg
sbb
clc
fcoms
fwait
mul
mov
movsl
inc
xor
test
push
push
pop
push
dec
push
repnz
mov
cmpb
int3
adc
add
and
clc
xor
insl
repz
add
cmp
and
inc
cmpsl
adc
scas
jne
mov
leave
in
mov
inc
int3
into
shlb
lahf
int3
xchg
mov
popf
push
jmp
mov
loopne
and
gs
inc
jb
inc
fmuls
scas
push
repnz
repz
mov
call
cs
xchg
add
mov
adc
mov
mov
pusha
pop
das
dec
xor
dec
cvtdq2ps
dec
in
add
jmp
pop
adc
push
lret
mov
les
or
push
shlb
push
sbb
jb
rolb
dec
aam
pop
js
push
push
xchg
lods
and
out
in
fildl
sbb
sbb
jbe
pop
and
ret
sub
cld
xlat
jne
cmp
jo
out
sub
jae
push
push
test
frstor
pushf
insb
sub
push
xor
mov
mov
pop
and
mov
hlt
mov
test
dec
mov
xchg
sub
add
dec
jae
jno
popa
xchg
icebp
or
dec
sbb
add
xchg
stos
addb
push
test
test
outsb
push
inc
enter
bound
inc
test
push
in
lds
mov
int
add
xchg
inc
fldenv
gs
xchg
orl
xchg
popa
stos
jg
gs
adc
outsl
push
mov
loopne
mov
jl
xchg
cmpsb
movsl
mov
dec
add
test
and
adc
pop
sub
test
or
dec
or
pop
and
jmp
clc
or
repz
loopne
cltd
sub
test
or
inc
or
jle
cmp
fadds
mov
lods
pop
fcomp
or
add
lea
adc
mov
and
dec
dec
add
add
cmp
inc
js
add
test
scas
sub
xchg
repz
push
mov
add
add
dec
add
inc
push
es
jge
mov
dec
sbb
and
jg
pop
test
imul
pop
sub
xchg
imul
and
adc
push
mov
sti
fs
xor
or
shrl
mov
sub
jns
push
and
mov
cs
pop
mov
push
add
popf
xchg
jbe
pusha
or
push
or
or
xchg
mov
daa
xorl
jo
mov
lahf
add
and
adc
repnz
test
jmp
pop
push
add
sbb
test
adc
xor
das
fadd
or
lea
icebp
push
mov
sbb
push
sub
in
and
or
dec
pop
adc
cmp
xorb
iret
mov
dec
int3
cmp
pop
rorb
in
xorb
mov
add
inc
pop
push
inc
in
sub
pop
sbb
xchg
lock
imul
and
or
or
push
adc
sub
adc
aaa
xor
fistl
cmp
nop
mov
cmovns
addr16
sbb
movsl
pop
sbb
adc
jl
repnz
jne
cli
repnz
adc
ja
lea
ret
fwait
hlt
adc
aad
popf
dec
add
les
cmpsb
xchg
mov
imul
sub
adc
clc
imull
mulb
fadds
mov
aaa
scas
xor
sub
movaps
mov
and
dec
icebp
ss
dec
pusha
ljmp
ret
pop
cmpsl
adc
stos
push
ljmp
mov
sub
hlt
xchg
xchg
inc
push
lahf
mov
add
mov
adc
cwtl
lods
push
push
sbb
jl
lods
andl
adc
in
lret
pop
insl
shlb
insb
sbb
xor
test
repnz
loope
fildl
adcb
lods
push
sub
add
xchg
and
sbb
in
inc
pusha
jno
push
es
dec
add
mov
aad
sbb
add
xchg
add
test
cld
icebp
mov
add
sub
aas
sub
repnz
mov
movsl
mov
mov
sub
sbbb
xchg
loopne
mov
int3
push
sub
sahf
add
mov
rcl
aad
aas
popa
or
jl
pop
test
sub
sbb
movl
jb
lods
xor
inc
or
add
add
data16
or
shlb
push
jp
loop
mov
and
rorl
xchg
xchg
addb
cmp
xchg
and
roll
sub
icebp
pop
xchg
add
das
mov
adc
fs
jb
iret
pop
lea
push
add
daa
push
aaa
orl
leave
les
xor
xchg
movsb
and
in
fadd
test
pop
cs
mov
mov
mov
in
nop
push
mov
andl
jecxz
movsb
cmp
adc
lea
loope
mov
or
dec
lock
ret
xchg
jle
sbb
jns
mov
fistl
and
jecxz
push
mov
sbb
out
sbb
mov
inc
push
sbb
mov
pop
and
cmp
dec
inc
adc
and
add
xor
xor
jge
pop
or
push
pop
shlb
or
mov
ljmp
or
dec
add
push
add
cmp
or
xor
inc
add
imul
inc
push
into
outsb
orl
inc
add
faddp
xchg
testl
or
xor
ds
clc
adc
xor
cmp
add
mov
mov
dec
roll
shll
mov
sbb
cmp
push
iret
pop
jp
add
mov
and
pop
mov
sbb
inc
or
xchg
popf
dec
imul
shrb
fisttpll
push
mov
subb
imulb
daa
jne
cmp
mov
cmp
adc
outsl
or
add
cltd
push
push
mov
mov
xor
into
jecxz
sbb
and
or
xor
xchg
push
repnz
mov
mov
xor
or
in
mov
xor
imul
test
pusha
sub
movsl
ret
fbstp
or
out
dec
sbb
dec
push
fists
or
and
jmp
sbb
je
sbb
adc
sbb
cmp
add
push
push
and
mov
sahf
sarl
nop
cs
sarl
clc
and
push
outsl
loopne
pop
mov
or
insl
adc
enter
mov
or
into
add
shlb
les
outsb
inc
mov
mov
jecxz
stos
push
mov
testb
pop
pop
mov
adc
scas
xor
jp
push
sub
mov
and
pop
cltd
push
jecxz
jae
shrb
add
sbb
out
xor
xlat
or
adc
mov
les
es
xor
inc
aam
pop
sbbb
mov
mov
jae
test
push
or
dec
orl
add
pusha
sbb
leave
or
and
ja
mov
cmp
rorb
inc
lods
cs
xlat
subl
shr
or
sbb
das
adc
sub
adc
mov
xchg
sub
dec
mov
data16
je
sub
scas
jns
das
dec
xorl
jge
sbb
and
aad
jnp
and
mov
aas
jno
inc
outsb
mov
pushf
inc
sub
xchg
xor
mov
in
shr
push
les
addb
pop
xchg
dec
gs
pop
mov
stos
inc
es
and
lret
push
adc
mov
cmp
inc
jl
dec
adc
adc
adc
push
scas
jmp
in
cmp
mov
jns
dec
pop
js
movsl
inc
jge
mov
adcb
sbb
popa
and
xchg
int
aad
cmpsb
dec
cmp
inc
push
sbb
addb
inc
cmovae
and
aaa
dec
or
stos
and
loope
sbb
cmc
pop
cmpsb
cmpb
subb
adcb
test
add
and
in
and
repz
pop
inc
mov
inc
sbb
pop
nop
sbb
popf
mov
jb
test
or
xchg
test
addr16
push
push
aam
pop
cmpsl
mov
push
lret
shll
and
rcll
mov
and
test
jge
mov
jl
mov
mov
out
fistps
add
jne
mov
pop
cwtl
cwtl
fisttps
lds
or
in
and
xchg
aad
scas
outsl
adc
push
mov
cmp
pop
cmc
aas
jmp
inc
mov
add
jno
sbb
xchg
mov
cmp
mov
cmp
in
dec
test
insl
xor
mov
enter
push
jo
sar
xor
jo
mov
test
and
sub
loopne
les
xor
mov
addr16
push
movsl
in
push
or
mov
ljmp
xchg
inc
rolb
adc
xchg
push
pop
xlat
adc
fcom
inc
mov
xchg
dec
aaa
movsb
sub
imul
and
cld
bound
ret
sub
std
ret
dec
push
jne
sbb
adc
and
jg
mov
push
mov
mov
pop
push
mov
sbb
test
in
add
mov
and
call
js
pop
enter
jecxz
aaa
pop
jo
sub
jl
jmp
rcr
int
das
sub
sbb
pusha
sbb
aaa
ror
outsb
adc
xchg
or
cld
and
test
add
das
push
xor
cmp
jo
lods
push
sarb
cmpl
or
je
cmpsl
fisttpll
xchg
jno
xchg
fldenv
test
pusha
test
mov
mov
aaa
jns
inc
dec
dec
or
jb
pop
pusha
enter
popa
mov
mov
add
ja
or
loopne
in
lock
pop
push
pop
stos
into
push
lret
adc
ret
sub
mov
sub
nop
outsl
inc
sub
mov
dec
xor
add
or
mov
inc
push
jle
jne
and
les
fcoms
imul
sbb
mov
out
fadd
mov
xchg
in
and
and
fcomps
les
xchg
inc
xor
sbb
jne
sbb
cld
in
mov
aad
fsubs
mov
cmp
jp
popa
mov
push
pop
test
pop
push
or
bound
ljmp
xchg
data16
sahf
aam
adc
add
insl
mov
sub
sub
or
xchg
ret
mov
arpl
add
xor
cli
push
pop
push
push
push
jb
stos
jecxz
adc
adc
dec
test
dec
add
fstps
shlb
inc
sbbb
adc
sub
fld
fwait
aaa
push
xchg
pop
push
outsl
insl
mov
adc
adc
cwtl
enter
dec
clc
push
cmpsl
cs
xchg
add
sbbb
push
dec
jb
dec
xchg
dec
aam
outsb
in
sub
cld
sbb
push
jns
adc
pop
inc
jl
push
loop
and
pop
test
mov
adc
inc
imul
insl
fimull
inc
xor
jne
insl
dec
roll
dec
mov
sbb
pushf
popa
jge
sub
and
dec
loopne
shll
sub
push
sub
lea
push
xor
sbb
ret
fildl
adc
jno
sub
mov
sub
shrl
xor
hlt
test
popa
pop
pop
add
sbb
test
pop
in
push
roll
rcll
jl
and
out
stc
movnti
inc
dec
adc
es
push
lret
pop
popf
faddl
fcom
push
mov
movsb
lea
test
subl
mov
and
lea
sub
fisubs
std
jne
sbb
sub
test
outsb
andb
pop
pop
mov
pop
mov
add
push
lock
or
arpl
imul
fldt
aad
mov
lret
enter
test
pop
cmp
xchg
jnp
mov
pop
arpl
idivl
push
add
out
roll
and
jg
cwtl
imul
xchg
add
jns
adc
or
cmpsl
jb
xlat
test
adc
rcl
enter
cwtl
sub
gs
or
leave
pop
pop
test
imul
or
sub
in
test
fildll
mov
test
imul
decb
nop
pop
sub
push
adc
dec
sarl
pop
dec
loop
movb
mov
pop
ljmp
add
in
fwait
pop
and
cmp
and
sub
cmp
sahf
or
dec
push
cmp
out
cwtl
inc
add
add
xchg
sbb
xor
cmp
ret
addl
and
ja
or
mov
sub
cltd
dec
outsl
or
pop
push
sub
add
or
jle
jb
cmpb
or
and
adc
adc
outsl
outsb
mov
mov
lods
adc
or
add
dec
or
xor
fwait
inc
fsubs
scas
mov
mov
sbb
jbe
dec
xor
xchg
pop
nop
shll
xor
imul
xchg
mov
dec
faddl
jg
cmp
aam
scas
pop
pop
fsts
add
cmp
jl
repz
push
cmp
jle
cmp
jp
push
cmp
cld
sti
dec
cld
cmp
inc
add
add
inc
jmp
push
icebp
mov
push
movw
lods
subb
mov
lods
les
inc
push
pop
add
addr16
push
cltd
pop
idiv
lock
std
sbb
lods
jo
js,pt
mov
outsb
jae
cmpsb
or
lods
sub
add
jecxz
jnp
cmp
ret
mov
add
fnstcw
push
mov
push
push
add
push
shlb
xor
dec
mov
sub
pusha
fs
xchg
pop
sub
mov
push
jns
pop
sub
cmpsl
scas
sbb
dec
movsl
or
adc
and
adc
in
add
adc
adc
lahf
daa
int
cmpsb
sub
mov
outsb
fcompl
sahf
push
inc
push
and
addr16
data16
mov
push
fs
insl
iret
add
scas
fs
or
sbb
leave
rcll
dec
pop
pop
pop
int
or
and
insl
or
mov
xchg
mov
cs
addr16
fadds
add
test
ss
fiadds
sar
inc
outsb
add
insl
or
push
nop
inc
inc
outsl
mov
add
stos
add
or
mov
rorl
fldt
daa
into
pushf
xchg
add
push
xchg
pop
dec
test
sub
aam
or
push
mov
add
jmp
xor
push
repnz
pop
orb
and
or
dec
test
sub
and
dec
roll
dec
jmp
add
insb
xor
lods
or
jle
sbb
lods
int3
xor
adc
imul
xor
shrb
int3
sbb
xor
xor
sbb
mov
and
sbb
jb
xchg
aad
sub
add
test
dec
inc
fwait
js
sbb
xchg
stc
add
jbe
dec
enter
push
outsb
sub
jnp
pop
mov
xchg
sub
fstl
or
pushl
pop
mov
inc
adc
push
cmp
adc
push
sbb
sub
popf
or
test
jno
cmpsb
dec
push
push
sub
nop
enter
push
and
pop
js
popf
nop
and
adc
and
adc
adc
test
fs
adc
fstps
jo
mov
pop
and
nop
add
xchg
xchg
adc
nop
mov
lods
lea
sbb
push
rorl
int3
jno
mov
jo
mov
shrl
and
adc
jo
mov
add
mov
dec
adc
loope
push
lahf
rolb
in
popa
test
loope
lock
pusha
les
push
nop
cmp
ret
sbb
adc
inc
mov
and
cli
jge
adc
mov
cmp
enter
push
int
cwtl
ret
mov
stc
sbb
imul
pop
sub
mov
mov
mov
mov
in
or
stos
or
add
js
shll
push
sub
mov
and
insl
insb
pop
adc
mov
xor
fdivr
xor
insb
sysret
lcall
or
mov
push
add
aaa
or
fwait
adc
repz
sbb
fs
scas
testb
or
and
xchg
mov
xlat
fxch
bound
je
loopne
inc
mov
pushf
sbb
mov
add
cmc
insl
sbb
mov
jg
ret
mov
and
jne
add
mov
cmp
pop
leave
and
std
cmp
cmp
push
mov
add
jae
mov
stos
push
jbe
or
loopne
imul
jnp
sbb
les
jmp
or
pop
fmuls
in
call
popa
stos
cmp
jne
insl
mov
lea
lods
pop
lock
add
mov
mov
pop
sbb
push
add
xlat
pop
or
into
sub
xchg
push
jb
fildl
cmp
divb
add
push
dec
idiv
jb
jne
dec
jbe
in
insb
add
cmp
add
sbb
mov
mov
addb
sti
add
pop
jns
addb
jg
adc
adc
lods
lods
popa
sbb
and
push
imul
and
or
mov
push
bound
xchg
add
jb
adc
push
or
out
jae
push
lea
ret
push
and
xchg
das
xor
jle
cltd
cmc
lahf
and
shl
add
jmp
add
mov
cmp
loopne
rorl
cmp
dec
mov
test
ret
dec
fcomps
inc
push
mov
imul
rorl
jbe
aaa
je
mov
pop
mov
shl
mov
sbb
loop
pop
insb
movsb
pop
adc
or
xchg
inc
inc
pop
add
rorl
lcall
fnstsw
test
je
sbb
add
pusha
push
push
call
add
sbb
nop
add
xor
and
jne
add
popf
mov
sub
pop
or
mov
jo
jnp
xchg
add
and
loope
ficomps
sub
xchg
movsb
and
or
lock
cmpb
inc
lcall
dec
ds
mov
inc
mov
xor
mov
sub
or
push
mov
xchg
ret
shll
andl
jns
push
jge
mov
xchg
fidivs
mov
xchg
test
ljmp
insl
out
dec
dec
add
sub
mov
add
cltd
nop
jmp
setb
pusha
stos
add
mov
xor
and
popl
lea
push
xchg
lds
pusha
mov
xlat
andl
pop
les
pop
push
inc
loope
fldt
xor
jnp
testl
sarl
add
mov
clc
ja
or
xor
cmp
jb
stos
xor
lar
add
inc
ja
jb
mov
xchg
adc
lea
push
push
and
add
cmp
push
je
mov
add
or
or
clc
idiv
push
leave
adc
mov
push
adc
push
push
xor
or
mov
cmp
or
or
cli
and
cmpsb
pop
push
push
push
aam
sbb
pop
pop
loop
and
test
add
pop
or
insb
loopne
nop
jle
push
sti
adc
sbb
std
mov
push
jne
sub
add
movhlps
test
adc
xchg
push
mov
adc
inc
xor
movsl
add
push
lock
pop
dec
inc
cmpw
jne
mov
and
jge
or
dec
push
push
sbb
aas
sub
jo
decl
jg
stc
std
mov
or
pop
and
cmp
leave
out
data16
sub
push
push
push
push
push
addb
sahf
xchg
push
inc
xchg
vpmacsww
jo
rolb
pop
aam
push
sbb
or
mov
mov
sar
xchg
andl
imul
in
mov
mov
test
ret
dec
cmpsl
lock
test
add
xor
pop
push
mov
movsl
cmp
shlb
sub
adc
test
dec
in
xor
inc
ljmp
test
pop
push
lods
pop
scas
mov
lods
push
pop
popf
jns
adc
out
xor
sub
fcmovnb
test
jl
xchg
cmp
sub
cs
inc
call
lods
or
xlat
xorl
jo
ret
and
push
pop
out
test
mov
cwtl
mov
nop
add
xchg
sbbl
add
or
ret
pop
add
xchg
jns,pn
pop
insl
mov
aam
and
pusha
mov
jecxz
pop
inc
rcrb
or
jno
xor
push
mov
mov
mov
adc
roll
sub
xchg
xchg
addr16
aad
push
leave
add
or
inc
pop
call
or
xor
in
loop
loopne
pushf
adc
push
adc
loope
movsl
call
and
stos
xchg
adc
or
hlt
add
mov
ds
or
add
dec
pop
and
in
incl
fcomps
or
subl
push
adc
mov
mov
add
adc
clc
fdivl
or
and
lods
xorb
mov
sub
loopne
add
les
mov
pop
xor
mov
push
bound
pop
jo
mov
ja
loop
cmp
gs
pop
movb
call
enter
adc
mov
jo
or
push
xorb
mov
jne
push
xor
out
add
int3
and
incb
stos
lcall
or
ja
adc
add
and
or
test
jmp
push
push
les
pop
fwait
clc
push
jmp
imul
sub
pop
jns
cmpsb
and
push
pop
test
fdivrl
push
mov
pop
pop
mov
popf
scas
por
imul
int3
xor
jmp
and
sbb
aam
outsb
in
sub
inc
mov
jns
negl
nop
push
push
and
add
cmp
and
loope
in
mov
adcl
cmp
xchg
outsb
and
pushf
cmp
shrb
sbb
jnp
pop
adc
out
pusha
out
pop
cmp
sub
in
adc
push
xor
lcall
or
jl
push
adc
insb
jl
cwtl
jl
loope
fmul
or
sbb
cwtl
mov
or
divl
adc
push
jo
add
jp
aas
in
dec
ja
sub
les
push
cmp
aas
sbb
roll
or
pusha
jle
test
mov
push
mov
push
push
out
cld
or
subb
xor
out
sahf
cmp
pop
bound
out
jbe
mov
out
aad
jmp
lahf
std
or
cmp
repz
inc
push
pop
gs
rep
jns
fwait
iret
repz
movsl
scas
mov
cmp
aam
adc
repnz
add
loopne
out
and
jne
push
repz
es
dec
mov
nop
sti
das
and
mov
enter
pop
push
pop
fisttpll
ret
mull
shr
jno
or
int
cmpb
or
test
jo
lea
pop
xor
pop
lock
push
add
mull
ret
roll
inc
add
out
fcompl
mov
cmp
jp
test
or
out
sub
test
jne
mov
xchg
mov
inc
sbb
add
mov
sub
sbb
adc
add
loope
mov
subl
sahf
xchg
pop
push
push
dec
test
add
adc
cmpsl
es
add
sar
xchg
adc
les
imul
rorb
cmp
jnp
jo
vmread
xchg
pop
push
movsl
dec
mov
push
cmp
ret
inc
adc
scas
add
cmp
sub
into
push
xchg
xchg
repnz
arpl
jg
sbb
rorb
adc
shr
mov
ret
subb
mov
dec
mov
inc
shlb
clc
adc
cmp
adc
sbb
push
dec
jmp
xor
enter
dec
adc
bound
pop
xchg
adc
rolb
or
inc
mov
int
add
mov
or
lahf
aaa
mov
cmp
xor
repnz
jae
push
fs
test
pop
inc
adc
shlb
inc
out
lahf
and
test
jl
bound
pop
pop
dec
sbb
mov
adc
pusha
or
jno
mov
in
dec
sub
dec
push
inc
xchg
adc
mov
push
les
out
mov
sbb
mov
jne
loopne
test
aad
mov
test
int
pop
movsb
xchg
fwait
je
mov
or
scas
das
adc
mov
or
jb
imul
add
je
in
mov
xor
mov
movsb
ja
sahf
mov
mov
mov
lods
popf
lret
xor
push
in
sub
cmc
cwtl
lahf
inc
out
xor
push
rcr
es
je
fdivrp
push
das
mov
bound
inc
mov
incl
nop
enter
popf
nop
lret
scas
sahf
inc
mov
push
jno
mov
jle
stc
xor
aaa
xor
and
rcrb
fcompl
rcrb
das
insb
cs
rcrb
sub
pop
rcrb
adc
shlb
sub
int3
cmc
jg
xchg
imul
imul
adc
push
or
mov
mov
aaa
mov
fcoml
add
dec
fldcw
add
fwait
sarb
push
fisttps
add
dec
js
or
lret
in
push
lock
bnd
or
fwait
pop
jb
inc
add
jae
xchg
pop
test
jae
inc
addr16
inc
es
sbb
sbb
xchg
push
mov
xorl
dec
ds
inc
xchg
jns
cmpsl
mov
xor
add
sub
sbb
and
xor
dec
adc
lahf
sub
repnz
xchg
shr
or
stos
push
mov
xorl
add
fbld
adc
cmp
jecxz
gs
cmp
push
mov
or
pop
test
xchg
cld
orl
sbb
popf
mov
shrl
push
xchg
imul
jle
cs
js
or
in
int3
cmp
mov
roll
sub
cmp
pop
movsb
aas
push
cmc
pop
mov
lret
inc
push
push
dec
add
ds
enter
aaa
sbb
lock
stc
xor
or
dec
roll
mov
sbb
mov
inc
mov
adc
push
xor
into
add
adcl
mov
std
aam
cmp
jge
inc
mov
mov
rorb
inc
sbb
sbb
fmull
out
and
sahf
inc
mov
je
or
pop
fstpt
jmp
push
sub
test
aaa
xlat
mov
jns
adc
dec
xchg
movsb
mov
add
test
int
dec
dec
add
stc
xchg
pop
ljmp
adc
rorb
push
pushf
mulb
jle
push
les
xor
push
inc
adc
lods
or
jmp
adc
xchg
jno
push
insb
outsl
and
add
push
mov
cmc
loopne
push
stos
or
mov
nop
out
andl
add
inc
sub
cmc
in
fbstp
cmpsb
mov
and
sbb
xor
loopne
test
or
stc
nop
hlt
or
push
pop
dec
call
loopne
pop
jnp
and
jns
mov
xchg
mov
jns
in
jo
js
nop
les
xor
xor
pop
ret
int3
pop
addb
xchg
mov
outsl
add
mov
nop
push
sbb
ror
outsl
leave
jae
paddusb
adc
lret
adc
or
push
push
add
repnz
mov
xchg
push
xor
adc
orl
adc
ret
lock
outsl
inc
adc
shrb
adcb
out
mov
mov
pop
push
sub
xchg
push
add
je
sbb
les
sbb
push
sbb
leave
sbb
push
movsb
imul
fcomps
jbe
push
pop
and
inc
pop
mov
shlb
adc
push
sub
dec
and
pop
or
test
enter
inc
sbb
addl
idivl
aam
sbb
pop
xchg
push
inc
push
xorl
push
sar
adc
and
pop
adc
adc
ss
push
lcall
xor
xor
sbb
lcall
xor
xor
xchg
in
stos
mov
and
jo
push
pop
pusha
push
or
add
dec
es
mov
call
or
xor
mov
dec
dec
push
xor
popl
push
fsubrl
add
cmp
jno
cmp
fdivrs
mov
cli
add
js
shlb
mov
push
ror
mov
mov
xchg
scas
jmp
in
data16
mov
lea
test
jge
dec
xchg
bound
orl
xchg
call
jle
aaa
push
sbbb
jo
pop
or
std
or
fsubrs
shrb
xchg
aad
or
or
fldl
or
and
inc
test
das
scas
add
testb
testl
mov
mov
call
imul
imul
movsb
sbb
sbb
push
in
push
pusha
add
adc
mov
dec
mov
lea
dec
push
mov
mov
mov
or
pusha
mov
jp
sub
jne
inc
cltd
sub
mov
pop
jns
or
pushf
gs
sbb
sbb
lods
out
imul
mov
fiaddl
push
sub
or
inc
nop
push
pop
ret
and
and
sub
sti
daa
lods
cmp
insb
push
or
or
pop
fwait
nop
fwait
daa
test
sub
sub
dec
fimull
xlat
dec
sub
and
leave
adc
pusha
mov
dec
in
xchg
ds
sub
or
pop
fstl
sbb
jbe
jl
fistpl
xor
orb
sub
shrl
jo
pop
add
adcl
loopne
shrb
daa
dec
sbb
sbb
insl
and
sbb
mull
xchg
andl
push
mov
int3
roll
pushf
imul
nop
sub
sub
fstps
adc
cmp
pop
leave
xor
test
push
adc
jne
ret
sbbl
pusha
test
adc
pop
xchg
faddl
mov
push
mov
push
popa
sub
jge
in
add
and
int3
paddusb
or
ja
sbb
adc
pop
xor
in
pushf
imul
cmp
insb
or
addb
mov
sbb
aad
mov
add
ss
xchg
fwait
jo
xchg
es
pop
in
push
sub
cmp
dec
ret
or
sub
cmp
popa
test
add
loopne
dec
test
into
fadds
popf
int
sbb
and
dec
add
or
push
mov
fldl
dec
push
xor
loop
sar
and
push
sbb
xchg
sarb
in
sub
and
adc
or
sub
into
sub
pop
cmpsb
add
orb
test
in
fwait
mov
xor
jmp
pop
cmp
cli
inc
cmp
cmp
dec
adc
pop
dec
sbb
cmp
inc
adc
jg
sbb
dec
dec
dec
cmp
fmuls
adc
push
clc
xchg
cmpb
movsl
nop
push
enter
adc
data16
mov
push
lods
jg
lods
sbb
lahf
push
lock
addl
jb
adc
or
leave
jge
fld1
js
cli
rcrb
adc
push
adc
xlat
jbe
xor
add
fnstcw
cmp
inc
clc
ret
pop
frstor
pop
inc
or
subl
jne
or
or
iret
push
pop
adc
mov
xchg
addb
enter
mov
inc
and
cmp
push
ljmp
je
mov
dec
shl
fimuls
add
jmp
fwait
or
imul
ret
inc
mov
xchg
jge
or
adc
pop
cmp
push
add
add
ds
sbb
fidivs
into
xchg
ret
ret
pop
sub
js
dec
or
lods
aam
fnstsw
aaa
imul
popa
and
and
push
sbb
push
jno
sarl
mov
jne
test
ss
xchg
adc
or
sbb
xor
sbb
xor
sbb
push
mov
push
call
mov
mov
call
adc
mov
mov
adc
add
mov
pop
or
sub
mov
add
jg
lret
pop
xchg
jmp
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcrl
clc
ljmp
push
sbb
jp
pop
dec
add
jne
ret
lret
movsl
loop
add
sub
pop
xchg
adcb
sbbl
add
faddl
jne
or
nop
cmp
add
dec
mov
cmpsl
test
or
push
push
mov
jp
add
sub
stos
add
insl
loope
sub
roll
pop
shll
loopne
inc
lock
xchg
repnz
sti
pop
or
cmp
es
dec
and
movsb
popa
jg
add
dec
push
fldt
cltd
xchg
xchg
cmc
add
jmp
int
jmp
mov
and
or
mov
xchg
sub
mov
xor
adc
ret
popa
or
ss
outsb
add
add
orb
mov
mov
loop
and
test
cmp
mov
enter
push
pop
lods
jae
push
loop
adc
adc
in
cmp
push
idivl
xor
popa
jp
lcall
mov
xor
and
jmp
cmp
cmp
loop
xchg
and
fs
or
sub
aad
cmp
ss
repnz
push
and
jmp
add
lret
int
dec
inc
decb
repnz
lret
sub
ret
push
fildl
js
daa
jno
fsubs
rolb
sbb
xchg
adc
jbe
inc
cmp
pop
push
ja
mov
test
test
inc
rcrl
in
or
arpl
push
mov
sbb
cmp
cmp
adc
sub
jno
sbb
int3
pop
push
inc
adc
addb
push
lcall
mov
xor
sbb
and
inc
cmc
test
sti
or
pop
leave
pop
es
sbb
loopne
push
dec
paddq
xchg
push
sarb
fwait
sub
stos
cwtl
cmp
cmpsb
push
xchg
stc
test
icebp
sbb
cmp
push
fistps
nop
ficompl
sbb
adc
sbb
lods
jne
aaa
add
xchg
dec
pusha
pusha
mov
add
fildll
push
pop
sub
inc
push
aas
dec
add
rcll
xchg
popa
cwtl
aam
mov
sub
or
enter
and
jecxz
sarb
fistl
fistps
and
call
lret
call
cmpsl
ss
dec
adc
sub
xor
dec
cli
out
inc
cmc
ret
addb
sbb
cltd
add
cli
and
in
sti
fstpt
popa
lea
or
dec
in
sbb
push
inc
sbb
add
rolb
inc
sub
shrl
loope
sub
mov
or
xchg
cmp
clc
test
shl
adc
cmp
enter
jl
ror
ret
adc
nopl
rol
mov
gs
subb
sbb
add
dec
sub
jle
inc
push
xor
adc
test
adc
notl
cmp
add
sbb
cmp
sbb
and
jne
dec
add
andl
das
pusha
or
sahf
or
pop
sarb
mov
das
fistpll
jg
pop
andl
test
inc
lock
outsl
insl
mov
cmp
in
mov
sub
sbb
mov
and
je
sub
push
sub
ret
je
inc
mov
pop
insl
and
cltd
loop
stos
in
sub
in
mov
pop
dec
xchg
sbb
xor
xor
lcall
add
scas
test
jmp
paddq
push
subl
add
icebp
xchg
je
mov
sub
mov
cld
jge
xor
and
jmp
mov
xor
jne
je
inc
sbb
pop
inc
inc
cmp
jl
in
loope
mov
push
jae
cli
hlt
add
add
and
fmulp
sbb
or
mov
test
adc
sub
and
sbbl
in
mov
adc
mov
nop
rolb
add
inc
cmpsb
movsb
enter
sbb
add
xor
xor
xchg
adc
js
pop
mov
aaa
and
adc
inc
mov
or
pop
testb
jns
xchg
add
cmp
lock
daa
mov
pop
xchg
lea
les
ficoml
popf
rdtsc
xor
enter
mov
mov
mov
enter
push
adc
adc
inc
das
je
jge
jnp
arpl
mov
sub
inc
jp
jns
sbb
bound
das
xor
nop
xchg
mov
add
or
rorl
sub
cmp
call
loopne
xor
jne
jno
mov
test
inc
sbb
and
lds
and
jnp
or
shll
sub
ret
push
sub
pop
sub
push
push
call
add
push
inc
push
jecxz
imull
into
sbb
or
fmuls
out
sbb
cltd
out
add
mov
add
cli
mov
leave
jecxz
inc
aaa
push
cmp
dec
or
and
cmp
jle
test
add
and
jg
fwait
inc
add
inc
or
xchg
xor
push
inc
incl
add
pop
test
adc
je
rcl
cmp
mov
pop
ret
jmp
mov
xor
orb
adc
sbb
leave
pop
mov
push
fldl
call
call
adc
repnz
popf
fbstp
inc
add
out
jne
daa
bnd
sahf
lahf
out
adc
hlt
jne
or
jne
or
add
clc
dec
sar
mov
js
or
dec
inc
pop
mov
aad
sbb
mov
pop
pop
add
inc
sbb
add
add
pop
sbb
push
fwait
insl
or
rolb
icebp
jl
mov
dec
mov
out
or
fstpl
lea
in
lea
push
je
xor
add
movsb
adc
ret
insl
xchg
mov
xchg
mov
sub
lods
xor
jo
in
add
leave
adc
dec
jecxz
xlat
pop
push
sub
int3
int3
popf
into
es
pop
lea
rorl
fnstcw
fadds
mov
add
or
pushf
adc
sbb
add
loopne
rcrb
pop
mov
in
adc
mov
add
arpl
push
jl
ss
cmp
mov
sahf
cmpsl
mov
push
ss
cmpsb
xor
jo
adc
pop
push
imul
or
xor
sbbl
jno
jo
push
xchg
insl
mov
cmc
inc
cmpsl
mov
jp
call
dec
pop
jmp
orl
sub
int
pusha
pusha
cmp
adcw
inc
sbb
int
mov
pop
and
subl
xor
fs
sbb
ficoml
mov
jge
cmp
ret
jno
xor
loopne
mov
push
mov
adc
and
sbb
cmp
pushw
mov
outsl
and
jae
mov
and
jbe,pn
or
fmuls
into
jle
dec
ja
int3
or
into
inc
subl
pop
andl
test
and
out
loope
in
or
add
xor
ja
pusha
lds
jns
fistpl
addr16
jo
dec
and
je
popa
fldcw
or
pop
mov
pop
xor
sbb
popa
je
mov
mov
loopne
dec
dec
insb
xchg
stos
lret
pop
push
dec
mov
dec
mov
and
or
xchg
les
sub
xchg
mov
inc
mov
daa
imul
inc
jnp
dec
sbb
subl
pop
pop
push
xchg
or
cmp
and
jl
je
outsb
sub
fadds
lret
add
fldl
ds
push
xchg
pusha
aaa
dec
sti
sar
mov
pop
ret
dec
jp
jnp
jge
and
push
jo
push
adc
jl
dec
jge
cmp
jae
insb
shlb
push
push
or
and
sbb
and
pop
sbb
daa
xchg
sbb
and
sub
adc
daa
xchg
cmp
sti
sub
adc
lds
fs
adc
xlat
leave
mov
sub
pop
xor
push
cltd
nop
cltd
push
sbb
or
outsl
push
adc
mov
adc
popa
adc
push
adc
or
sbb
test
and
or
adc
xchg
sbb
and
and
rcrl
mov
rcl
xor
je
leave
rcrl
pop
in
or
stc
cld
push
adc
inc
cli
jg
jae
cs
fildl
mov
bound
xchg
pop
push
xchg
dec
xchg
shrl
xor
or
je
insb
and
xor
add
dec
jg
add
call
adc
jo
add
pop
movsl
test
adc
ret
or
push
jmp
jo
sahf
xchg
inc
or
lods
xlat
inc
push
pop
in
xlat
xor
into
and
jle
dec
js
scas
xchg
add
xchg
insl
jae
sbb
cs
dec
xchg
pop
mov
inc
jnp
cli
movsl
inc
sbb
faddl
or
xchg
sub
or
sbb
mov
int3
add
lock
ljmp
movsb
int
sbb
mov
push
add
push
hlt
dec
movsl
push
and
jecxz
inc
js
jp
cmp
mov
add
cmpsl
sbb
jle
mov
pushf
pop
sbb
inc
ret
test
dec
mov
push
lret
enter
call
adc
cmpsl
jnp
jne
push
jne
xchg
in
sub
add
pop
xchg
adc
gs
push
mov
pop
in
popf
inc
cmp
and
and
lcall
es
jecxz
and
add
add
fmull
sub
cmp
mov
mov
sbb
mov
rclb
cmp
das
popa
add
cmp
aaa
ficoml
adc
dec
cmc
add
loop
xchg
pop
pcmpeqd
push
xchg
fcmove
rolb
aaa
jno
mov
add
inc
add
sbb
jno
ja
insl
or
loop
test
outsl
and
dec
or
push
fldl
mov
add
push
push
syscall
push
adc
lcall
lods
pop
push
jne
fsubrs
cmpl
call
mov
out
ljmp
adc
add
je
test
ljmp
ja
nop
mov
add
jnp
repnz
popf
aad
mov
sbb
push
xor
js
mov
bound
xor
or
push
adc
loopne
jns
in
dec
ret
lret
add
adc
fdiv
mov
push
fstl
rorl
popa
and
xor
jecxz
add
fidivs
pop
sar
out
cmp
cmp
clc
cld
fwait
push
mov
adc
and
insl
jp
mov
rolb
push
xorb
xorl
mov
dec
pop
lock
test
adc
or
push
inc
jmp
mov
xchg
fildl
les
xor
lds
cli
loop
sbb
call
jmp
push
pminsw
je
aam
sbb
xor
call
adc
fisubrl
sub
out
enter
dec
add
or
push
push
add
adc
mov
andl
mov
push
fisttps
push
sbb
or
aas
jg
and
add
dec
push
inc
nop
fcompl
push
stc
mov
pop
cwtl
orb
mov
mov
xor
or
xchg
mov
sbb
addb
add
stos
stos
jns
sub
cmpsl
iret
imul
sbb
pop
fcoms
or
jo
dec
add
shlb
daa
add
sub
add
into
push
aas
outsl
sub
push
mov
in
or
inc
orb
inc
std
clc
loop
mov
add
ret
or
mov
ds
adc
outsl
and
lea
jo
and
loopne
add
movsl
jne
ret
or
pop
stos
or
dec
jg
out
xor
cmp
je
or
enter
xor
add
sbb
dec
cld
fimuls
xchg
ret
clc
add
inc
adc
dec
xchg
lods
add
fists
out
jne
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
clc
ds
jmp
enter
ret
incl
loop
dec
inc
mov
inc
or
jecxz
or
add
inc
cmp
jl
call
inc
add
sbb
cltd
and
add
sar
mov
add
clc
fcomip
pop
ja
pop
xor
ss
cmp
jecxz
iret
push
add
or
lret
shr
sub
mov
mov
dec
jne
addb
loope
xorb
inc
js
push
lret
dec
sbb
adc
std
mov
int
push
inc
push
mov
sarb
je
mov
dec
icebp
add
scas
jo
xchg
lea
pop
in
cwtl
cli
ret
add
adcl
adcb
shlb
lret
out
cmp
jl
ret
push
push
sbb
add
je
int3
pop
cli
js
inc
mov
mov
ljmp
sbb
ja
and
cmp
cmp
sub
sbb
add
in
push
ret
or
mov
adc
mov
add
jmp
inc
push
push
ret
dec
jmp
sbb
xor
js
lcall
jae
fwait
arpl
pop
cmp
popa
ret
pop
cmpsl
mov
fidivl
and
add
jmp
add
pop
add
aam
cmpsb
mulb
and
sbb
data16
and
mov
mov
ret
repnz
ret
or
mov
stos
sub
mov
mov
xchg
xchg
or
nop
je
add
sbb
rcrb
loopne
aam
fisttps
lock
push
in
stos
pop
jle
loopne
push
dec
or
rolb
into
pop
xlat
cltd
pop
movd
mov
fstpl
leave
add
jmp
push
bswap
leave
and
in
push
push
orb
jb
and
sub
jae
inc
mov
inc
shll
adc
jno
mov
pop
dec
shlb
sbb
das
ljmp
pusha
outsl
mov
pop
xor
in
inc
arpl
sub
add
lcall
push
or
cmp
lcall
ret
adc
fmul
test
or
mov
mov
sbb
pop
popf
gs
or
dec
push
jl
aam
iret
push
loopne
fsubrl
add
inc
imul
lds
mov
filds
inc
out
mov
jmp
mov
sbb
mov
les
fisubs
cmp
pop
test
xchg
sbb
jecxz
push
push
push
dec
sub
pusha
das
push
push
inc
daa
sbb
into
pop
pop
adc
mov
add
lods
mov
shl
jmp
sub
add
sub
add
int3
add
mov
popa
fst
cli
xchg
pop
mov
mov
lock
inc
or
fidivrl
into
or
push
shll
insb
sbb
dec
shrl
and
jno
push
nop
dec
pop
cli
push
push
pop
aam
inc
idiv
push
imul
xchg
pop
jno
push
jmp
mov
pop
inc
push
sbb
push
arpl
mov
pop
outsb
outsb
sub
mov
cmp
jo
add
int3
int3
loop
lds
xor
mov
sti
clc
call
lods
sti
push
pop
cmp
test
aaa
sarl
cmpsb
je
sbb
add
jne
lods
sbb
adc
cmpsl
call
out
das
movsb
pop
add
cmp
insb
and
divl
push
sbb
fiaddl
inc
add
add
or
push
mov
fninit
push
push
mov
pop
fs
fs
aam
add
xor
mov
push
cwtl
rcrb
fcoms
and
in
add
bound
lahf
cmp
jl
cwtl
loopne
fdivrl
pop
push
cmp
add
pop
mov
push
sbb
bound
push
daa
movsbl
call
add
xchg
add
nop
or
inc
loop
out
test
aas
sub
dec
out
test
jnp
sbb
lret
movb
cmpsl
push
test
adc
inc
shlb
and
inc
add
and
or
sub
stc
ss
inc
or
add
sbb
int
push
adc
cmp
mov
adc
and
adc
dec
call
xchg
stc
mov
adc
rcr
call
xchg
xor
loop
cli
add
fmul
pop
andl
push
add
movsb
lock
cmp
adc
inc
jb
outsl
idivb
adc
inc
add
push
sbb
mov
mov
xchg
pop
cmp
ret
lock
xor
sub
add
flds
or
xchg
je
movswl
clc
pop
mov
fiadds
jle
or
xorl
dec
clc
das
mov
movsb
loope
mov
push
mov
inc
or
jo
jecxz
mov
mov
inc
cmp
mov
mov
mov
add
mov
add
outsl
push
add
push
mov
inc
mov
mov
cmp
mov
scas
dec
clc
addl
int
mov
mov
iret
push
icebp
or
sbb
pop
jae
xchg
add
push
mov
lods
add
push
mov
nop
and
push
nop
add
or
cld
push
leave
push
lcall
mov
inc
call
jne
pop
das
or
jecxz
mov
mov
fwait
icebp
xchg
adcb
pushl
fiaddl
mov
adc
mov
push
dec
dec
cwtl
pop
add
lods
xor
pop
sbb
mov
xor
stos
add
push
adc
test
add
lret
movsb
mov
in
in
dec
enter
clc
push
dec
xor
mov
call
aam
mov
sbb
rcrb
inc
hlt
mov
popl
enter
das
sti
xor
scas
clc
loopew
lahf
lret
push
scas
and
out
pop
mov
mov
popa
sbb
sub
adcl
add
pop
mov
xor
dec
mov
loopne
mov
xor
and
adc
dec
add
in
add
movsl
pusha
lds
mov
and
inc
push
fs
fsubr
add
ret
lret
push
and
jmp
mov
in
mov
push
pop
xchg
stc
mov
jg
jmp
sbb
sbb
and
pop
push
sbb
add
dec
add
add
fdiv
xchg
inc
dec
xor
push
and
inc
add
fdivs
inc
add
push
es
add
add
push
add
cs
add
add
or
leave
and
add
nop
push
mov
xchg
cli
call
push
hlt
adc
sti
lea
loopne
mov
loop
push
push
xchg
pop
mov
sub
leave
pop
nop
mov
mov
mov
aad
outsl
sub
cmpsb
leave
loopne
in
mov
into
roll
andb
xor
dec
test
sub
movsb
ljmp
fcomps
andb
mov
cmpsb
add
fcompl
sub
cltd
push
sar
add
mov
in
mov
mov
dec
adc
mov
in
inc
xchg
sbb
jne
xor
and
loope
call
add
xor
shufps
dec
and
hlt
cmpl
mov
push
pushf
pop
fbstp
add
xchg
imul
test
test
cmp
je
daa
call
inc
or
stos
cs
jle
xor
inc
pop
mov
ss
pop
in
cmp
xor
fst
loope
add
mov
mov
popf
mov
add
enter
in
sbb
and
insb
xor
outsl
dec
sti
sarb
mov
repnz
dec
cmpl
pop
push
stos
and
ret
shrb
jle
add
or
xchg
shrb
sub
imul
add
in
rorb
stc
cs
cmpsl
test
or
lods
imul
sbb
push
je
add
test
pop
les
sbb
push
add
mov
mov
scas
shld
push
enter
or
mov
lea
fmuls
pop
or
es
push
dec
inc
cmp
fisubl
fbstp
fs
xchg
shrb
orl
or
bnd
push
dec
cli
mov
faddp
fcmovu
jne
adc
inc
loope
add
dec
add
test
xchg
push
insb
or
sub
add
sti
dec
test
fldenv
xchg
and
or
push
pop
je
adc
mov
xchg
pop
add
xor
pop
pop
roll
popf
sbb
ljmp
es
lock
ret
cld
into
imul
xchg
addr16
addr16
lea
pop
orl
mov
or
jmp
or
gs
mov
inc
incl
rcll
je
mov
and
mov
or
aad
or
add
jmp
push
push
cltd
pop
loopne
test
sub
lahf
gs
push
push
push
push
dec
sub
add
mov
pop
rorb
into
or
jne
daa
push
jge
push
imul
into
repz
push
pushl
xor
xor
iret
pop
cmp
mov
hlt
sub
cmp
add
or
pop
push
sbb
sbb
scas
cmp
mov
cwtl
lret
jl
xchg
or
push
cmp
xor
es
cmp
jne
mov
pop
add
inc
jl
nop
gs
xor
mov
leave
push
nop
and
cld
out
ss
xor
je
test
cld
jns
push
call
push
mov
ja
fidivl
mov
push
adc
push
dec
roll
cmp
sbb
xchg
and
mov
push
jo
mov
call
sub
or
or
jecxz
inc
aaa
fcomps
xor
das
add
in
adc
sub
sub
mov
jmp
add
sub
jmp
dec
jb
les
aas
std
lods
push
cwtl
sbb
xchg
pop
dec
pop
adc
mov
mov
inc
bound
push
dec
jb
and
adc
cmp
or
dec
adc
xor
arpl
dec
inc
int
fs
dec
lcall
inc
add
dec
sbb
sbb
jae
loope
scas
sub
out
daa
or
xor
loope
loopne
mov
jae
sahf
or
inc
shlb
sub
insb
pop
jmp
and
sub
cmp
cmp
dec
sub
mov
adc
lea
or
jb
enter
sub
idiv
mov
sahf
fdivrs
ret
dec
mov
xor
test
or
sbb
jo
add
fwait
or
in
aas
loope
prefetch
sub
test
lahf
std
pop
dec
fists
lea
push
or
pop
or
mov
pop
sbb
mov
add
or
and
out
sub
es
cmpsb
dec
xor
sbb
xchg
push
and
dec
sbb
sbb
stos
add
dec
and
xchg
pop
daa
inc
cld
dec
pusha
push
ret
sub
lret
fwait
sub
mov
jo
sbb
mov
push
pop
mov
es
rclb
sbbb
dec
push
popf
or
adc
jne
imul
mov
push
loopne
in
sbb
adc
inc
mov
xchg
jbe
call
adcb
lods
mov
loopne
adc
xorb
lea
cmp
and
and
dec
adc
push
adc
adc
pop
ja
loopne
inc
sbb
xchg
sbb
pop
test
in
sub
or
inc
push
add
ret
and
pop
popf
rorb
jp
lahf
enter
jbe
icebp
cmp
pop
jecxz
mov
cwtl
filds
movsb
movsl
lds
cmp
call
push
les
or
mov
jns
and
ret
in
ret
sbb
pop
pop
dec
addl
inc
add
dec
mov
mov
in
add
add
cmc
inc
sahf
sub
adc
mov
xor
pop
xchg
lret
inc
mov
lahf
xchg
lods
mov
inc
lods
or
call
push
sub
cwtl
pop
test
ret
dec
loopne
sub
lea
clc
ret
adc
push
aaa
lock
mov
inc
cmpsl
roll
xchg
test
enter
dec
push
pop
mov
sub
cmp
inc
adc
lcall
add
mov
add
push
mov
push
adc
dec
sbb
lcall
cmp
and
lea
xchg
lahf
cmp
and
in
mov
inc
sbb
cltd
sbb
inc
cmp
outsl
xor
xor
xor
add
lds
dec
jb
insl
loop
dec
jnp
sbb
push
push
jecxz
lea
pandn
call
ljmp
or
int
ljmp
sub
add
mov
push
lock
lret
ret
xchg
or
inc
xchg
xchg
pop
jecxz
outsl
or
aam
or
lods
push
rolb
and
aad
shlb
add
xchg
js
repz
outsl
add
jge
dec
dec
or
pop
dec
fsubl
mov
mov
push
add
insl
jo
das
sbb
adc
lret
jg
add
or
inc
jle
cmpsb
cli
nop
iret
mov
testl
std
and
add
lds
push
daa
loop
leave
cmp
dec
test
adc
lods
cmp
popa
cmp
cmp
es
and
dec
daa
orl
pop
dec
push
push
push
mov
mov
inc
icebp
mov
xor
dec
shll
sub
and
pop
add
push
inc
mov
orb
pop
mov
cmp
cmc
jns
mov
sub
mov
cmp
std
pop
add
push
mov
and
push
push
jo
sub
or
in
mov
pop
test
xchg
add
sub
lcall
pusha
jl
into
xchg
les
std
rolb
inc
or
push
cmp
ret
jbe
popf
add
pop
pop
or
push
sub
mov
aam
mov
and
push
call
adc
aaa
les
jo
adc
inc
mov
push
push
adc
js
pop
inc
loopne
testb
lahf
call
dec
fisubs
mov
xchg
outsl
jl
aad
cmp
xor
sbb
mov
and
adc
push
lock
jmp
jge
adc
add
fucomp
adc
sbb
dec
rcrl
test
push
add
rorl
pop
xchg
cli
lock
call
test
jo
in
lods
adc
imul
imul
and
incl
sub
jne
push
push
push
mov
mov
dec
test
movsb
cwtl
jmp
xorb
xor
adc
mov
inc
lods
add
dec
lods
or
fsub
adc
sub
stos
insl
scas
pop
shlb
jne
and
mov
cmp
add
cmpsl
sub
xor
add
and
mov
enter
sbb
sub
js
push
mov
mov
dec
jl
push
pop
sub
daa
loope
sbb
push
mov
jmp
adc
in
mov
and
adcb
adc
xchg
fs
bound
test
je
mov
xchg
mov
movsl
ficomps
cmp
jbe
xor
sub
push
fisubs
pop
lcall
cmp
jbe
adc
adc
lahf
inc
jmp
mov
loopne
subl
es
cmp
inc
loopne
adc
mov
inc
sbb
cmp
cli
xchg
test
xchg
mov
lret
add
jge
mov
dec
fdivl
ret
int
mov
mov
insb
pop
dec
xor
nop
je
lret
hlt
out
jp
xchg
mov
shll
ss
mov
push
adc
mov
loop
add
jge
cmpl
cmpl
jecxz
cmp
push
mov
adc
adcb
enter
or
sbb
xor
test
pop
xchg
inc
or
mov
adc
pushf
test
jae
jbe
insl
loopne
dec
mov
add
std
adc
push
pop
add
mov
adc
rcl
push
cmp
and
cld
pusha
sbb
xchg
jle
jp
add
jmp
mov
in
es
jge
push
push
mov
and
push
ret
pop
out
sbb
and
cmp
clc
inc
lea
mov
aaa
leave
push
sub
dec
dec
stos
cltd
cltd
add
ret
or
push
push
inc
push
popa
fwait
or
push
sbbl
or
or
sub
add
adc
xchg
mov
or
and
mov
inc
shrl
jle
mov
inc
pop
lock
jecxz
mov
mov
ret
add
outsb
loop
adc
inc
and
jne
inc
lock
jmp
fisubs
mov
push
adc
push
push
xchg
inc
ljmp
insl
push
jle
adc
or
fcmovb
sbb
sub
rolb
in
out
mov
sub
roll
lods
add
adcb
das
movsb
push
push
mov
sub
push
ret
ret
push
int3
ljmp
scas
push
inc
push
rolb
scas
push
push
jb
mov
test
mov
dec
push
aad
xchg
sahf
cmpsb
mov
xchg
jb
dec
xor
sbb
xor
rclb
adc
xchg
jmp
cltd
pop
sbb
dec
shlb
jmp
add
xor
cld
add
out
xor
sub
or
ja
shlb
inc
loopne
ja
enter
dec
clc
push
push
dec
cmpw
sbb
add
or
aad
out
sbb
into
pop
sbb
push
inc
hlt
adc
call
or
and
dec
enter
mov
sbb
xor
das
mov
test
je
cmpl
loope
push
mov
jl
test
ret
nop
sbb
popf
and
dec
mov
inc
sbb
in
mov
mov
loopne
dec
push
xchg
pushf
push
mov
bound
repz
lret
and
or
xchg
inc
push
sti
in
add
mov
ret
sete
push
dec
or
icebp
lahf
push
add
adc
xor
sbb
int3
lea
addr16
push
sub
pop
inc
ret
inc
mov
add
insl
sbb
ret
inc
rclb
pop
mov
inc
mov
mov
icebp
fisttpll
cltd
add
sbbl
push
jne
loopne
out
mov
inc
xchg
mov
and
sbb
cmp
mov
or
dec
test
int
mov
cmpb
sbb
or
sbb
bnd
sbb
out
xor
cs
add
sub
nop
mov
or
pop
js
add
adc
movsb
or
pop
mov
cmp
dec
xor
mov
loop
add
lock
shll
and
inc
dec
adcl
loope
sbb
pop
push
pop
and
push
pop
pop
dec
dec
movsl
jb
inc
inc
push
inc
push
xchg
xchg
push
inc
push
push
push
repnz
sbb
add
and
adc
sub
leave
pop
pop
pusha
pop
dec
inc
inc
inc
pop
scas
dec
jl
inc
or
mov
ret
pop
das
sbb
incl
add
popa
movsl
jns
inc
mov
cltd
or
and
or
test
mov
leave
ret
add
and
sbb
or
xchg
movsl
add
sub
decl
adc
movsb
pusha
dec
lods
xchg
daa
xchg
dec
add
inc
pop
push
sbb
dec
jo
sbb
addb
es
add
push
jo
inc
arpl
imul
add
and
push
pusha
dec
push
push
add
add
insb
sbb
orl
lahf
mov
mov
xchg
cltd
mov
and
adc
add
int
clc
adc
or
imul
pusha
mov
adc
jo
movb
mov
loopne
out
sub
mov
bound
add
lret
jge
stos
inc
mov
loopne
outsl
mov
mov
dec
adc
inc
cmp
add
movsl
adc
adc
push
xchg
mov
lock
xchg
call
push
clc
jmp
sub
sbb
inc
addl
pop
dec
xor
repz
dec
xchg
adc
pop
mov
push
jno
cmpl
cmp
add
hlt
push
addl
mov
nop
aam
xchg
je
xlat
inc
cs
popa
and
fldt
or
add
cmp
movsb
lret
add
push
lret
sbb
bnd
xchg
add
add
sbbb
adc
int3
sbbb
hlt
mov
ret
cmp
sti
fcompl
andb
lods
lods
pop
add
inc
and
lods
addr16
into
push
xor
out
xchg
cmp
mov
add
fnstenv
mov
leave
mov
sbb
xor
fnstcw
lret
scas
in
addb
add
add
arpl
and
adc
sahf
add
fdivrs
jbe
stc
shlb
xchg
fwait
inc
pusha
mov
adc
hlt
sub
mov
push
outsl
jnp
rcrb
push
sbbb
mov
xchg
jo
int3
lea
push
lods
push
sub
testb
or
add
dec
jae
push
lret
outsl
lahf
cwtl
pop
sub
inc
dec
out
xor
and
imul
push
pop
cmpl
and
cmp
add
sbb
ret
add
xchg
cmpl
xchg
popf
lds
int
push
cld
pushl
push
pop
sub
or
shrb
or
cmc
sub
xlat
jbe
inc
push
push
dec
and
and
add
fwait
inc
mov
lahf
aad
and
clc
or
jmp
cli
jbe
or
outsb
or
je
test
clc
jne
pop
sub
add
lea
or
and
sub
lea
cld
cmp
clc
xchg
cmpb
and
imul
lods
push
mov
adc
mov
pop
sub
dec
sbb
mov
or
inc
roll
adc
or
adc
push
cmp
add
pop
cmp
popl
add
add
ret
fisubl
rolb
int
cmp
lret
test
aad
fwait
pop
add
clc
je
fs
ret
xlat
adc
xchg
test
jae
lahf
push
popf
add
jmp
add
js
test
inc
sarb
out
aad
push
cmpsb
mov
adc
and
add
add
sbb
xchg
flds
sbb
cmp
or
add
in
das
jne
jo
rcll
push
jmp
icebp
jl
rorb
aaa
add
std
xorb
mov
lea
push
pop
push
mov
stos
sub
pop
xchg
mov
pop
jne
push
add
jne
in
in
out
adc
push
mov
fistpl
mov
ljmp
add
outsb
js
scas
js
andl
addl
and
mov
sub
sub
ret
test
fldt
add
add
clc
popf
xor
js
push
push
into
adc
pop
add
xchg
push
jo
push
add
cltd
jp
aas
jmp
cmp
push
adc
or
test
inc
jg
xor
or
add
mov
mov
xchg
adc
loopne
outsb
or
mov
jmp
loope
mov
pop
mov
xor
adc
push
test
jg
sbbl
sub
inc
cld
loopne
xchg
sub
or
inc
mov
inc
cmp
xor
adc
lahf
shlb
mov
xchg
mov
imul
cmp
jae
cmp
je
mov
mov
ds
sbb
imul
sub
adc
jmp
mov
insl
jmp
fidivrl
inc
data16
add
nop
push
sub
jns
mov
xchg
jl
pushf
hlt
sahf
add
scas
or
enter
mov
das
inc
das
add
bound
pushf
test
add
push
repnz
sbb
or
pop
or
insb
addl
inc
aaa
add
int
or
sbb
loopne
push
push
je
inc
sub
js
push
and
repz
pop
adc
jle
mov
adc
pop
jo
subl
adc
iret
jmp
mov
sbb
mov
add
les
fnstsw
mov
mov
or
or
push
mov
sub
xor
daa
loopne
addr16
and
mov
mov
adc
pop
mov
and
cmpl
dec
cli
sbb
lea
gs
rorb
xor
sti
jb
add
add
mov
in
add
add
and
fmull
lahf
mov
loop
xor
filds
popf
popf
adcl
cmp
movsl
or
in
mov
das
or
dec
jns
push
jae
je
rclb
ret
adc
push
cs
jmp
xorl
push
mov
xchg
add
negl
and
decl
mov
shrl
mov
xor
jbe
das
push
jno
cmp
mov
jnp
adc
popf
andl
mov
iret
lea
add
dec
or
stc
cs
or
push
scas
push
loop
dec
add
enter
add
test
sti
ret
faddl
sub
xchg
push
add
mov
push
nop
lret
mov
les
pusha
mov
je
scas
les
sbb
scas
mov
sbb
adc
mov
mov
adc
sub
inc
mov
adc
add
sub
push
push
jbe
bndstx
or
and
jnp
or
loope
add
jno
mov
arpl
insl
or
dec
dec
or
inc
popl
rcl
push
cmp
adc
inc
xchg
stos
enter
mov
inc
mov
pop
inc
xorl
xor
pop
ja
call
cmp
add
jbe
pusha
int3
add
pop
mov
inc
jne
push
mov
ja
and
mov
mov
inc
dec
or
idiv
sbb
xor
mov
repz
xchg
pop
int
push
and
outsl
xor
sub
inc
and
data16
shll
dec
inc
dec
pushf
push
mov
test
int3
jbe
mov
mov
jae
mov
xor
cmp
out
fisttpl
add
ret
push
jae
lea
push
sub
sbb
adc
aam
jecxz
push
aam
pop
aad
pusha
mov
mull
shll
push
stc
or
nop
out
shrl
sub
nop
cli
notl
or
inc
pusha
dec
mov
dec
fadd
mov
inc
test
stos
adc
add
pop
push
sbb
sbb
and
push
pop
addr16
xor
sub
inc
cmp
nop
imul
push
pop
pop
movsb
dec
inc
iret
dec
add
cmp
sbb
push
sbbl
jo
mov
adc
mov
sub
mov
les
jbe
cmp
mov
ret
dec
fmuls
cmpl
sub
jne
pushl
pop
cltd
scas
mov
dec
mov
jo
addr16
inc
outsb
or
add
adc
nop
mov
inc
sbb
inc
and
add
xchg
test
push
mov
lahf
xor
or
add
ret
mov
add
rolb
test
xor
testl
lret
shll
add
fistpl
or
leave
mov
push
push
adc
notl
fistpl
inc
pop
sub
push
dec
sub
lret
mov
jl
enter
jne
mov
xor
pop
dec
or
mov
test
sub
stos
mov
add
adc
pop
sbbl
lret
jne
addb
mov
std
repnz
nop
xchg
add
mov
mov
jle
stc
cmp
xor
std
pop
xchg
or
dec
sub
cmp
scas
scas
sbb
fimuls
cmpl
pop
fsubl
cmp
cmpsb
push
push
je
push
out
mov
push
or
lock
jmp
sub
fadds
inc
mov
adc
cs
jmp
xor
or
leave
adc
and
push
test
and
imul
jno
jmp
imul
jb
dec
push
xor
fsubrl
adc
pop
adc
nop
push
int3
pop
fnsave
ja
xor
adc
cs
jo
shlb
orl
cmp
pusha
jo
loopne
mov
imul
adc
pop
fwait
jge
daa
jae
mov
dec
xchg
out
mov
aam
sbb
jae
cmp
cmp
inc
xor
inc
mov
test
je
test
lcall
jge
mov
push
jo
es
addb
dec
loopne
test
jmp
es
xchg
js
loop
in
push
or
clc
loopne
pop
std
movsb
das
jmp
es
mov
cld
wbinvd
push
clc
push
push
arpl
lahf
dec
js
fsubrl
cld
push
sub
sub
mov
mov
mov
ja
imul
jb
rcll
leave
and
push
jecxz
jge
mov
ret
cmp
jl
js
fisttpl
inc
movsb
shll
and
xor
push
lock
pop
add
stos
mov
lea
push
pop
xchg
cmp
popf
rol
mov
pusha
pop
cs
pop
add
int
push
push
js
pop
mov
sub
push
cs
push
les
push
es
mov
mov
cmp
or
and
mov
dec
or
int3
xor
data16
pop
loop
scas
ret
pop
inc
mov
push
outsl
stos
mov
jo
stc
jmp
lods
stc
inc
xor
inc
add
pop
add
or
pop
rclb
xor
sbb
jp
add
inc
inc
mov
jmp
ja
ss
or
push
andb
jnp
and
shl
cli
ja
aas
push
ret
push
and
push
jo
loope
test
sbb
repz
into
idivb
adc
push
adc
cld
subl
enter
insl
cmp
and
dec
clc
pusha
mov
and
adc
aad
mov
jne
test
fcoms
cmpsb
xorl
pop
push
icebp
lods
xor
xor
clc
adc
push
xchg
popa
and
std
jmp
push
sbb
push
sbbl
scas
and
mov
js
or
jge
mov
in
xchg
jp
jb
test
jmp
divl
adc
rorb
pop
jecxz
mov
jl
subl
rcrb
cmp
test
sub
or
lea
mov
dec
xchg
dec
and
mov
mov
jne
roll
jg
int3
pop
or
sub
push
sub
push
mov
push
dec
add
inc
or
mov
jbe
mov
mov
or
sahf
sahf
push
js
jb
pshufw
shrb
pop
repnz
and
int
nop
adc
sbb
push
push
dec
jae
in
pushf
push
cmp
cmpb
aaa
xchg
icebp
push
push
inc
mov
int
adc
idivb
push
add
outsb
adc
xchg
lret
into
imul
shr
into
out
push
loope
add
pusha
adc
popa
or
idiv
pop
out
std
sub
xor
inc
or
fcmovnb
add
cmp
outsl
push
xor
mov
and
jne
xchg
loopne
pop
fimuls
adc
push
cmp
jl
mov
cmc
mov
imul
jl
gs
es
rorb
leave
jno
add
mov
lds
inc
sub
dec
dec
jns
cmp
cmp
pop
push
and
dec
adc
jnp
shlb
shlb
inc
add
jmp
xor
push
add
push
pop
push
add
movsb
or
ss
mov
into
xor
lret
fdivl
dec
in
popa
push
or
andl
push
or
in
sub
add
mov
lods
setb
loope
fidivrl
lock
mov
and
inc
jle
add
imul
add
and
add
addl
ret
sbb
addl
and
jl
test
aaa
in
mov
or
pop
xchg
loope
push
test
mov
rorb
sub
dec
ljmp
and
sub
inc
and
or
push
xor
ss
ljmp
mov
sub
xor
les
bound
outsb
push
shlb
shrl
sbb
jnp
orl
outsb
mov
push
cmpsb
mov
and
aaa
enter
xor
fdivs
cmp
lret
push
push
dec
enter
inc
aaa
dec
xchg
inc
mov
cmpsl
in
pop
inc
adc
mov
inc
daa
and
sbb
in
femms
lods
pop
loop
cmp
mov
jmp
xchg
mov
add
testl
rcll
jne
andb
aam
cmp
sbb
ss
ss
inc
cmp
clc
movsl
stc
or
dec
or
pop
mov
jp
mov
jne
mov
faddl
ljmp
mov
fs
sbb
fadds
pushf
sbb
push
pop
lahf
out
dec
loopne
cmp
push
lea
adc
es
cmp
inc
fdiv
jge
pusha
enter
xchg
fadd
cmp
insl
in
test
lods
repnz
cld
sub
mov
pop
in
imul
mov
push
inc
push
pop
xchg
inc
movsb
dec
movsb
inc
sbb
mov
push
and
sarb
sub
mov
pop
out
mov
mov
aam
or
pop
lea
pop
add
sbb
outsl
jp
int3
add
enter
fdivl
enter
pop
mov
mov
scas
fnstcw
test
add
inc
fbstp
aam
pop
mov
jg
dec
adc
mov
or
inc
cmp
xor
inc
pop
cmp
in
roll
loop
push
cmp
push
jmp
mov
dec
sub
sub
daa
adc
lret
pop
andb
mov
xchg
mov
jnp
cmpsb
xchg
and
popl
pushf
sbb
rcrb
inc
add
mov
test
cmpb
js
push
andl
push
inc
stc
dec
cli
or
pop
sub
sub
jae
sbb
jne
add
push
sahf
inc
push
push
je
xor
outsl
or
int
sbb
dec
insb
jne
adc
add
jle
cmp
scas
aaa
pop
mov
xor
mov
inc
mov
dec
xchg
leave
xchg
jo
clc
dec
sbbb
je
inc
add
addr16
in
push
or
popa
cmp
fs
shl
aam
and
ss
mov
and
cmp
adc
in
or
xchg
sahf
mov
xchg
or
jge
pop
push
mov
mov
cmp
lea
mov
je
rorb
jne
ds
push
push
jb
mov
sbb
lea
mov
cmc
push
dec
pushf
lds
push
fcompl
lods
and
sbb
jns
nop
cmpsb
loopne
outsl
fdivl
enter
lret
pop
lea
cwtl
je
stc
adc
pop
mov
adc
or
cmp
mov
inc
loopne
pop
ss
addb
mov
inc
mov
and
add
loop
sahf
cmp
or
inc
adc
add
mov
shl
push
and
pop
shr
mov
sub
std
mov
cmpsb
or
xchg
cmc
movsb
xor
jnp
dec
dec
dec
ss
jl
fildll
cmp
cmpb
fiadds
dec
add
insb
mov
sbb
mov
lcall
adc
testb
cmp
lcall
push
cmpsb
imul
sbb
cld
test
andl
cmp
or
push
sub
adc
enter
lret
dec
fwait
inc
mov
scas
sub
ret
push
xor
and
mov
and
pop
movb
sbb
xchg
push
test
sar
sbb
xchg
jbe
pop
sbb
fadds
sbb
fs
push
js
jo
push
fs
insb
push
fs
push
mov
clc
idivb
sub
xchg
push
or
xor
lock
push
cmp
out
loope
dec
bound
mov
lcall
dec
cmp
jo
xchg
rcrb
mov
inc
jmp
addps
subb
movlps
jne
dec
or
mov
mov
sbb
xor
orl
fs
mov
push
addl
xchg
pop
jne
sbb
pusha
dec
cmpsb
push
loopne
cmp
call
leave
mov
pop
scas
add
xchg
cli
les
and
fldl
popl
repz
lock
mov
jae
out
and
inc
sub
xor
push
shr
loopne
sahf
add
shl
ret
mov
cmp
add
clc
jo
inc
pop
push
je
je
push
xor
xor
cmpsb
das
xorl
mov
inc
sbb
pop
jne
orl
dec
adc
lcall
jmp
xor
mov
pop
dec
test
or
dec
mov
loope
jns
mov
mov
stc
ja
pop
movsl
fldl
sar
lds
divl
leave
dec
add
xor
ret
shrl
sub
fnsave
jnp
mov
inc
xchg
les
mov
add
test
push
jne
mov
and
shrl
sub
mov
loop
sbb
mov
data16
sub
je
xor
add
xor
jb
inc
xchg
adc
insl
bnd
fwait
push
pop
jo
cld
enter
or
dec
mov
inc
push
aas
add
dec
jge
xor
jp
add
testb
mov
mov
sbb
mov
mov
and
gs
cld
push
pop
and
push
push
inc
cmp
inc
fidivs
in
pusha
movsl
cmpsb
popf
lock
mov
or
and
jo
addl
fidivrs
lahf
rcll
mov
hlt
lods
pop
mov
add
rorl
outsl
inc
pusha
pop
jmp
push
cmpsb
or
cmp
dec
lods
lods
aad
inc
popf
lods
cs
gs
xchg
pop
or
fsubrl
sti
insl
adc
adc
add
sub
popa
insb
popf
adc
shll
sbb
test
lods
sub
enter
js
and
inc
or
mov
lcall
sbb
jb
sbb
lea
xor
jg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
addb
or
lock
icebp
mov
and
inc
lock
cmp
into
add
push
mov
pcmpgtw
jae
orl
ror
and
icebp
or
out
movsb
xor
shll
pop
pop
lds
movsb
push
pop
loope
mov
je
dec
jmp
mov
cli
je
popf
add
push
adc
ds
xor
push
sbb
call
lea
push
mov
push
sub
inc
and
jmp
push
jne
enter
scas
dec
roll
imul
pusha
rcll
outsb
dec
adc
jnp
add
cld
dec
outsl
fs
scas
add
dec
jmp
jmp
push
out
mov
mov
adc
sbb
jbe
cmp
movsl
movswl
sub
out
in
push
mov
lret
add
push
and
nop
rol
test
push
lock
xor
cmp
mov
jne
push
xlat
rorb
flds
pop
movsb
push
push
push
in
mov
and
sbb
dec
scas
sub
inc
and
fisubs
xor
sub
pop
and
xor
in
add
jle
xlat
adc
and
jo
outsb
mov
push
adcb
sbb
sub
rclb
adc
in
insb
jmp
push
test
popa
inc
adc
test
daa
mov
mov
and
pop
xor
ret
inc
dec
jnp
outsl
adc
outsb
les
je
lock
xchg
test
cmp
mov
jae
push
mov
fstl
fidivrs
adcb
lock
lock
lock
fwait
sbb
and
push
add
js
push
sbb
cwtl
dec
push
lea
mov
mov
sbb
adc
sbb
sub
pusha
mov
lret
push
or
adc
mov
imul
sub
push
imul
imul
gs
fdivl
add
lret
loop
xchg
xchg
mov
sub
test
mov
jns
pop
arpl
xchg
or
jns
lret
punpcklwd
fsubrs
sbb
sbb
lock
lea
loopne
movsb
pop
jmp
cmp
or
jmp
rcrb
out
or
stos
cltd
dec
push
dec
ffree
dec
dec
cmp
add
movb
fsubl
cltd
std
pusha
ret
jge
int3
mov
stos
testl
add
andl
jo
cmp
or
inc
and
inc
leave
xchg
adc
or
sbb
pop
add
test
dec
insb
inc
push
push
or
xchg
out
mov
mov
jmp
arpl
movsb
popa
adc
push
imul
pushf
xor
adc
push
inc
xor
xor
lcall
stos
faddl
xor
fcompl
push
aam
and
test
cli
sub
and
cmp
ret
inc
adc
inc
xor
sub
jbe
sub
or
ja
adc
add
out
mov
inc
gs
mov
cmpl
pop
dec
inc
mov
sbb
mov
push
sub
sbb
cwtl
sbbl
xor
nop
mov
orb
add
testl
lahf
mov
mul
mov
rcrb
adc
inc
out
sub
add
in
inc
inc
xor
dec
pusha
or
mov
mov
movsl
add
pop
ja
add
push
out
loopne
add
sbb
and
jge
jo
adc
daa
addb
rorb
xor
xor
int
pop
xchg
fs
orl
xchg
mov
adc
push
pop
sbb
add
insb
stos
sbb
lcall
outsb
fdivp
sub
repz
outsl
movsl
push
lret
aas
and
dec
repz
and
lea
push
dec
and
fimuls
cmpsb
divl
pop
and
aam
in
adc
add
jl
repnz
xchg
cwtl
dec
fsubrs
sub
and
xor
push
inc
mov
aam
jb
and
adc
leave
das
add
sbb
idivb
call
or
inc
iret
in
adc
pop
fstpt
adc
into
cmp
jno
and
outsb
dec
adc
adc
sub
mov
adc
rorb
and
sti
roll
push
adc
fcomps
psubb
cmp
or
in
cmp
push
ljmp
push
out
mull
pop
loope
xchg
add
jp
push
add
push
cs
or
fcmove
int
pop
push
and
sbb
adc
xor
push
xchg
mov
or
pop
pop
cmp
push
inc
xorb
cmp
push
imul
stos
sbb
movsb
and
shr
and
pop
push
push
mov
lock
xchg
lea
popa
insl
loope
pusha
xor
sub
mov
push
xor
test
push
sub
movsb
je
or
push
jbe
pop
sahf
mov
cmpsl
add
mov
adc
add
push
cltd
xchg
or
sbb
lods
add
and
mov
sbb
xchg
jnp
push
nop
sub
add
push
int3
sub
push
fidivl
nop
xor
leave
jb
inc
xor
dec
leave
push
jb
cmp
nop
add
mov
xor
add
fwait
xchg
xchg
rcrb
cmp
ret
fnstcw
mov
dec
adc
js
mov
test
inc
or
imul
pop
cmp
cmp
scas
std
js
lea
int3
imul
mov
push
dec
pop
sub
or
mov
inc
sub
or
inc
in
jmp
xchg
and
sub
arpl
lods
stc
inc
cmc
aaa
mov
mov
aas
push
outsb
inc
jmp
or
mov
cmp
clc
jnp
pop
mov
pop
add
push
subb
pop
fmull
ret
push
inc
shrl
inc
mov
and
lret
or
into
push
sbb
ss
pop
mov
popa
sub
pop
ret
inc
lock
ss
jl
andl
pop
xchg
inc
out
adc
jecxz
pop
push
fs
mov
outsb
inc
fimull
cmpsb
jae
and
cmp
fs
dec
xor
pop
test
push
in
cmp
gs
scas
inc
xor
add
push
fcoml
out
xor
movsl
fists
movsb
push
mov
jo
or
sub
xchg
mov
movsb
icebp
pushf
sub
xlat
lods
push
fsubs
push
push
lods
sub
sbb
pop
lret
adc
jl
and
xorl
sub
push
pop
xorl
xor
pop
fiadds
and
popl
mov
push
das
pop
bound
inc
or
inc
push
rolb
lods
jmp
mov
push
xor
or
sub
movsl
add
in
sub
jb
xor
push
shl
stos
pop
lock
push
sub
mov
and
jle
push
cmp
sbb
cmp
cmp
xchg
xor
add
ret
aaa
ret
testb
je
aaa
jecxz
push
fdivl
cmp
decl
dec
jl
loope
xor
push
fisttpl
pop
pop
adc
mov
or
in
inc
fsubs
xor
xchg
inc
call
jge
push
xor
xchg
cmc
pop
jae
test
cmpsl
cwtl
jl
daa
sub
add
nop
and
inc
mov
aas
mov
sbb
leave
inc
push
ret
mov
pop
jbe
leave
xor
movsl
sarl
add
add
popa
add
xchg
jo
mov
jp
cmp
inc
mov
and
pop
arpl
nop
fwait
nop
mov
lods
dec
imul
pop
cmp
scas
mov
xchg
mov
es
or
or
push
pop
pop
shrb
mov
xchg
add
mov
stos
or
mov
xchg
jns
mov
enter
jmp
js
and
fcoms
mov
je
mov
push
jae,pn
push
movsb
mov
or
mov
es
xlat
insl
dec
fstl
lock
movsb
pop
push
push
push
inc
addr16
movsb
cli
lcall
or
cltd
idivl
push
add
push
pop
jbe
adc
fists
adc
jns
ret
pop
test
mov
in
mov
or
cmpsb
sub
mov
cmpsb
mov
jp
cli
jecxz
and
addr16
addl
repnz
and
inc
rcll
push
mov
xchg
dec
and
pusha
sbb
add
jp
adc
xchg
xor
loop
cmp
je
imul
or
sbb
pop
mov
push
in
add
xchg
adc
cmp
sub
mov
cmpsb
adc
add
mov
inc
add
movsl
sbb
call
sub
push
inc
adc
mov
popa
inc
mov
or
jo
shl
sbb
hlt
and
add
jbe
arpl
add
push
loope
cmp
gs
idivb
ret
cmpsb
sbb
push
mov
hlt
jle
aaa
inc
outsl
push
or
jae
shlb
inc
leave
push
add
orb
jmp
ret
add
loope
dec
insb
add
push
std
cmpsl
mov
inc
adc
insb
imull
dec
sar
dec
bound
xor
add
push
push
jecxz
loopne
int3
movsb
add
gs
adc
sbb
adc
cmp
adc
test
nop
mov
cmp
jo
dec
cmp
sti
xchg
ds
call
outsb
bound
push
insb
push
push
push
loop,pn
rolb
sbb
push
je
cmp
incl
movsl
mov
cmpsl
cltd
popa
test
les
mov
push
int3
cmp
aad
fcom
adc
mov
mov
inc
cli
push
cld
mov
movb
sub
jg
lahf
or
adc
inc
insb
shr
sbbl
or
ljmp
and
adc
sbb
clc
add
dec
pop
sbb
or
pusha
inc
mov
cltd
pop
test
add
mov
push
cmc
mov
repz
adc
loopne
out
dec
inc
test
and
jae
movsl
push
mov
stos
or
loopne
imul
bnd
pop
pop
sbb
push
arpl
pop
lock
dec
popf
adc
inc
lock
xorb
push
dec
mov
jns
adc
aas
cmp
pop
adc
mov
out
cmp
add
xor
out
and
or
mov
scas
sarl
sti
xor
xchg
mov
jno
rolb
shll
push
sbb
or
pop
adcb
push
jnp
not
push
jge
arpl
ret
add
mov
fistps
loopne
adc
or
lds
mov
test
insb
insb
inc
cmpsl
or
xchg
sub
mov
adc
popl
push
pop
pop
jne
jg
push
add
pushl
cmp
xchg
jg
inc
xor
hlt
xor
mov
je
loop
pop
push
loopne
arpl
dec
ja
inc
xchg
jne
ss
or
jl
adc
cltd
ror
je
add
pop
jmp
push
jne
jbe
jnp
lret
mov
lea
icebp
and
sub
adc
or
add
inc
lds
push
movb
addr16
and
sarl
fcmovnb
jbe
xor
mov
jns
jne
repz
je
add
gs
mov
jb
and
adc
adc
cmp
jmp
dec
sbb
and
jmp
repnz
cmp
or
mov
or
in
test
rorb
mov
cmp
mov
add
enter
inc
cmp
mov
lea
mov
js
es
movsb
mulb
in
add
dec
lret
dec
int3
out
popa
les
push
ds
lcall
xchg
mov
out
fwait
dec
adc
sbb
sbb
test
xor
stos
pop
decl
fs
flds
pop
gs
and
mov
xor
jbe
or
les
jnp
or
cwtl
lods
les
cmc
pop
xor
mov
pop
xchg
fcompl
or
aam
testl
xchg
pop
dec
es
push
push
adc
out
call
dec
mov
fldl
dec
dec
add
subb
lods
pop
mov
pop
adc
insl
mov
jp
sbb
sbb
loop,pn
and
jmp
or
test
mov
sub
mov
and
lret
add
addl
dec
nop
push
pushf
jge
fidivs
sti
jecxz
mov
je
add
popf
add
xchg
lock
testw
loopne
xchg
pop
inc
jle
xor
div
jle
or
ret
jne
and
rorl
push
int
fcoml
and
sbb
inc
nop
jne
imul
xor
sbb
xchg
pop
shl
clc
add
jo
push
push
sbbl
into
std
js
movl
fs
push
dec
or
pusha
outsl
and
dec
insb
xor
in
test
dec
imul
push
cmp
rorl
call
push
pinsrw
rcrb
arpl
cmpsl
add
xchg
add
rclb
dec
lret
add
pop
xorl
push
xchg
and
inc
clc
pop
sub
fcompl
push
mov
aas
adc
cmp
push
in
insl
or
push
lret
mov
mov
add
rcl
add
jno
adc
pop
jbe
lret
dec
jns
aas
mov
loop
test
xchg
cmpps
jno
and
add
cmpsl
lahf
out
cwtl
and
and
lahf
add
in
sub
aaa
sbb
push
push
cmp
mov
cmp
call
push
or
lea
push
cmp
add
inc
or
xchg
pop
ja
rol
cli
pop
cld
push
leave
inc
mov
fs
ret
pop
add
shl
mov
in
lahf
ret
adc
repnz
test
shrb
and
sbbb
sbb
aam
jp
cmpsb
jne
ret
outsl
cwtl
dec
outsb
lcall
sbb
bound
sub
mov
je
sub
imul
stos
movsl
jge
sub
js
rorl
or
test
cmpl
movsb
xchg
or
aaa
xor
sbb
sahf
popa
jnp
add
popa
pushf
mov
jmp
cmp
test
pusha
push
adc
adc
push
xor
inc
and
xlat
inc
adc
jl
adc
or
lds
adc
xor
mov
sub
divb
lcall
cmp
sbb
push
add
sbbb
mov
mov
mov
xchg
add
and
adc
out
push
or
jo
mov
jo
js
mov
or
adc
in
mov
mov
test
daa
paddw
mov
gs
orl
add
lods
pop
es
or
jmp
ret
aas
outsb
bound
dec
je
sub
cmpl
out
or
add
xor
subb
outsb
fstpt
in
mov
rcrl
or
ret
push
adc
lds
inc
imul
adc
xor
aas
insl
dec
insb
cmc
test
divl
push
and
jo
rcrb
and
int3
mov
and
xor
mov
add
lods
loopne
adc
push
xchg
in
adc
cmpsl
push
pusha
mov
rcll
jne
and
sbb
iret
loopne
popa
push
cmp
mov
das
pusha
adc
repz
push
mov
clc
inc
das
add
add
jp
or
push
xchg
add
lea
push
out
pop
add
push
inc
mov
push
int
dec
pop
bound
test
int
insb
sub
push
pop
push
jecxz
subl
pop
push
xchg
push
shlb
fcoml
or
aam
inc
xchg
xchg
dec
push
dec
ljmp
scas
or
jge
gs
mov
cmp
add
add
in
repnz
pop
add
or
pop
test
or
adc
and
sbb
fcompl
jo
jp
fcmovnu
jge
mov
iret
sub
pop
cmp
js
dec
push
movsb
cmp
inc
dec
add
add
fcoml
dec
xchg
sub
in
push
mov
cmp
xor
int
xor
out
sbb
fadds
xor
mov
xor
or
or
insb
daa
xor
sbb
mov
scas
mov
xchg
jl
mov
loop
cmp
pop
aas
pushf
or
daa
sarl
or
aam
adc
adcb
jo
xlat
in
mov
push
xchg
dec
adc
mov
sbb
mov
sar
lods
or
sbb
leave
adc
arpl
ljmp
adc
pop
jnp
jmp
cmp
jo
es
sbb
fidivl
je
or
xor
sti
movsl
lcall
mov
out
subb
mov
sub
sbb
push
movsl
xor
insb
cmp
cmp
jne
mov
lret
xor
movsl
or
add
aam
ja
clc
adcb
fadds
xchg
jge
push
call
rclb
pop
divb
hlt
or
stos
mov
push
stos
inc
pop
push
push
dec
fnstsw
sbb
aad
lock
add
sub
lahf
test
outsl
loopne
leave
and
xchg
sbb
insb
lock
mov
mov
ret
inc
movl
pop
inc
movl
or
mov
xchg
adc
sbb
movsb
xor
push
and
sub
add
repnz
movsl
rep
add
mov
or
lret
enter
inc
adc
pop
or
or
test
fldt
cmp
mov
fadd
aas
add
add
adc
and
sahf
jb
into
adc
pop
loope
imul
adcb
push
mov
push
inc
mov
je
rcl
add
in
mov
rcll
daa
movsb
xor
rorb
test
xchg
push
sub
xor
xor
sub
repz
inc
xor
cmp
or
divps
shl
adc
in
mov
lea
inc
ret
or
add
icebp
adc
test
xchg
and
jle
nop
cmp
ja
outsl
mov
scas
add
mov
sti
xchg
test
and
mov
mov
out
sbb
and
push
test
jl
sbb
mov
mov
adcl
or
pusha
and
add
andl
mov
adc
out
test
inc
adc
push
or
mov
popa
sub
jno
cmpsb
clc
add
push
mov
pop
pusha
jne
cmpsb
xchg
add
cmpps
mov
sbb
xor
fwait
leave
sub
call
pop
mov
and
and
cmp
or
loope
arpl
cmpsb
lock
dec
sbb
xor
data16
mull
add
addl
ss
dec
loopne
jnp
or
imul
pushf
jbe
aaa
enter
jne
xor
adc
int3
dec
dec
adc
sbb
fldt
jne
xchg
sbb
cs
xchg
call
or
and
cmp
test
inc
es
sbb
jge
lock
add
cs
and
js
jnp
or
jl
ds
mov
sarb
xchg
out
das
push
sbb
xchg
jmp
std
xchg
jbe
cwtl
and
adc
mov
inc
sub
stos
icebp
dec
adc
and
movsl
push
out
sub
adc
add
cmp
ljmp
cmp
cmp
dec
mov
push
stos
pop
cwtl
mov
inc
adc
sbb
or
ret
pusha
popa
and
divb
test
sub
mov
jle
into
jle
sbb
inc
daa
adc
xor
lods
daa
mov
jnp
push
lcall
sbb
adc
sub
lahf
inc
cli
test
paddusb
repz
sub
lret
sub
cbtw
xchg
add
push
das
mov
rcrl
out
call
cwtl
adc
adc
xchg
or
adc
mov
addr16
icebp
or
movups
push
xor
cmp
adc
mov
and
xor
leave
outsb
mov
in
cmp
mov
js
lods
repz
add
push
cmpsl
arpl
push
test
jecxz
mov
add
les
fdiv
jg
jge
in
or
or
in
cmp
jle
in
jl
pop
add
sbb
adc
outsb
test
fld
xchg
and
adc
rcll
push
add
repnz
mov
inc
sbb
loopne
or
lret
cmp
je
loopne
sbb
push
adc
ss
dec
mov
ss
stc
xor
fdivrp
and
cmp
xor
cmc
mov
loop
sbb
dec
hlt
imul
sub
je
mov
inc
cmp
or
add
lock
inc
ds
fisubs
test
jns
mov
popa
jmp
cmpb
sbb
mov
lods
mov
sub
add
rcrb
sub
cmp
and
pop
outsb
cmc
xor
mov
xchg
push
pop
cli
ret
and
inc
push
add
outsb
add
mov
fadd
orl
inc
cld
dec
cwtl
sub
inc
stos
sahf
add
mov
adc
push
mov
cld
mov
add
icebp
mov
enter
jmp
cltd
pop
enter
das
pop
orl
jo
or
outsb
xchg
sbb
push
sub
sbb
jge
rcrl
or
mov
out
insl
movsl
or
je
adc
pushf
scas
das
inc
and
push
data16
sbb
imul
fwait
and
xor
cmp
and
sub
enter
and
xlat
lret
adc
sub
sub
xor
frndint
xor
xchg
mov
lea
mov
xor
push
adc
sub
jae
cmp
xor
inc
xor
cmp
sbb
imul
or
or
cltd
jne
inc
mov
cltd
or
movsl
repnz
addl
jp
inc
or
push
dec
mov
jo
jmp
outsl
push
loopne
inc
push
xor
cwtl
dec
jmp
push
cltd
int
insb
xchg
push
push
inc
arpl
lcall
adc
idivl
push
mov
les
push
mov
loop
cmp
jo
dec
ss
adcb
leave
push
decb
call
inc
roll
sbb
add
adc
in
mov
sbb
or
sbbl
and
jo
push
lods
push
jg
ret
pop
pop
inc
sub
push
inc
mov
outsl
cmp
in
sub
pushf
adc
movsl
movsl
adcb
iret
push
sbb
mov
push
movsl
bound
sbb
jge
cmp
sahf
iret
loope
push
xchg
lcall
pop
fucomi
xor
rorb
insl
les
xchg
pop
pop
sub
adcb
imul
xlat
mov
cltd
inc
jecxz,pt
fdivl
ljmp
icebp
or
xchg
push
in
pop
ficompl
mov
frstor
sbbl
push
testb
out
add
sbb
popf
popa
ja
push
cmpl
or
rcrl
jmp
repnz
aas
loopne
loopne
js
push
push
add
mov
and
leave
pop
rcll
jb
xchg
pand
incl
jne
cmc
add
or
js
pop
pop
mov
cmpb
std
ljmp
sbb
iret
pop
sbb
popf
add
sub
xor
xor
add
jne
dec
cld
push
loopne
arpl
int3
or
jne
inc
aas
sub
sub
fs
pushf
sbb
xlat
daa
add
sti
lret
loopne
xchg
inc
mov
adc
dec
in
dec
in
ss
xchg
lea
jne
pop
add
mov
inc
push
loopne
mov
les
scas
jge
add
repz
mov
fldt
xchg
pop
and
movsb
fsts
cli
and
sbb
xor
fs
adcb
add
in
sub
inc
frstor
and
pop
addl
xchg
dec
leave
xrelease
sahf
add
shlb
cmp
add
jge
xchg
jbe
push
push
dec
sahf
imul
adc
xlat
adc
dec
or
add
sbb
xor
cmp
jne
sbb
jl
add
inc
pop
cmp
adc
mov
push
dec
xor
push
add
and
test
or
push
push
cmpsb
xor
mov
jmp
push
loope
nop
sub
jge
push
ret
cs
rcr
jl
or
xchg
sti
sbb
mov
dec
and
das
in
ficoms
cwtl
or
jmp
xchg
ret
xchg
fmuls
movsb
mov
or
loope
push
inc
inc
hlt
stos
fisubl
push
lret
call
fdivs
ror
setge
xchg
adc
enter
inc
pop
sbb
sbb
xor
adc
jo
push
pushw
xchg
or
xchg
mov
pop
faddl
add
sarl
aam
sbb
jge
adc
jo
lahf
cmpsb
call
sarb
dec
movsb
jl
adc
cmp
andl
shrb
and
inc
sub
pop
mov
in
icebp
loop
subl
adc
ja
and
adc
ja
loopne
dec
jns
jl
xor
mov
shlb
or
xchg
sarb
dec
sbb
adc
sub
enter
sub
mov
adc
xchg
add
jge
sbb
std
push
xor
rcll
mov
lret
mov
ljmp
jbe
shll
nop
pop
xor
leave
push
xor
nop
pop
or
push
fwait
add
imul
or
jno
test
std
jno
nop
dec
or
nop
inc
lock
inc
insb
mov
add
dec
dec
das
jns
bound
sar
fidivrl
push
xchg
daa
inc
mov
push
xchg
jns
ds
xchg
mov
xor
test
into
aam
dec
stc
add
mov
add
jo
add
mov
int
cmpsl
cmp
push
cmp
push
pop
pop
inc
sbb
das
jmp
adc
cmpsl
adcb
cmp
jne
mov
adc
xchg
or
sub
or
xchg
push
lea
mov
xchg
leave
cmpb
stos
adc
js
xchg
add
andl
sbb
sub
inc
popa
bound
aas
lock
cmpb
in
ds
ja
aaa
aas
ja
push
and
sbbb
lret
add
mov
data16
xor
xchg
and
fdivs
and
pop
sbb
movsb
aad
fwait
setnp
adc
or
gs
pushl
fs
push
sbb
outsl
hlt
inc
cmpsb
push
mov
and
stos
and
les
mov
cmp
jge
loope
jne
insl
loop
mov
cmp
test
inc
lret
je
call
les
and
jnp
scas
inc
lea
and
jnp
or
adc
cld
je
sbb
inc
jbe
jb
pop
sbb
rolb
notb
cmpb
pop
mov
or
cmp
inc
mov
repnz
add
and
jle
jbe
push
cmp
ja
clc
clc
sub
push
inc
mov
ret
mov
push
adc
push
jle
xchg
mov
int3
mov
push
in
loope
shlb
xor
loopne
or
in
ja
bts
test
call
mov
xor
je
lea
mov
shrb
xor
sub
and
lock
lahf
push
insb
mov
mov
push
ss
jmp
inc
mov
push
add
mov
mov
movzbl
and
iret
push
les
in
jae
jbe
fwait
arpl
stos
mov
sbb
stos
push
dec
dec
adc
or
xchg
lret
test
and
or
fs
or
inc
les
int
adc
aaa
jo
mov
cld
fidivrs
into
andl
or
lods
test
jbe
fdivl
dec
add
sti
add
and
call
movsb
inc
outsl
nop
fcoml
mov
or
repnz
push
test
rorl
jmp
dec
inc
dec
cmp
push
aaa
adc
adc
add
and
dec
rcll
rcrb
stos
sti
mov
sbb
inc
add
and
cld
pop
ret
inc
aaa
xor
pop
dec
nop
pop
sbb
add
or
shl
dec
pop
rcll
jae
mov
inc
mov
js
pop
sbb
pushl
repz
dec
sbb
and
and
cmpsl
or
ret
sub
push
hlt
pop
xor
lods
ret
mov
mov
cs
push
jmp
add
xchg
and
je
pop
mov
push
pop
push
incl
add
push
push
cs
push
es
push
adc
andb
andps
xchg
nop
rol
add
adcb
dec
adc
popl
out
cmp
ficoml
xchg
and
sbb
lods
rcrl
into
ret
pop
xchg
in
mov
push
clc
push
xor
ja
adc
jge
pop
mov
mulb
ljmp
cld
fcoml
pop
cld
xchg
mov
loop
jge
pop
cwtl
mov
shrb
pop
add
sbb
xchg
hlt
xor
jl
shl
aaa
fcoms
pop
inc
inc
cmp
jb
or
mov
fwait
cmp
add
call
addl
mov
leave
mov
cmp
sub
lcall
lods
ret
adc
or
inc
xor
outsl
inc
mov
push
add
push
fsubrs
and
inc
push
sti
jl
test
imul
adc
test
or
sub
mov
cltd
pop
mov
ret
push
pop
out
push
in
push
fidivl
dec
add
jmp
pop
in
mov
xor
push
sbb
pop
or
es
xor
dec
aas
pop
ret
inc
rclb
addr16
mov
sbb
in
push
incb
or
push
xor
das
sub
xor
cmp
mov
fidivrl
das
das
dec
insb
dec
mov
inc
and
movsl
inc
rol
lods
xchg
inc
loopne
movl
movl
pop
pop
lds
aas
pop
mov
fcos
inc
mov
push
decl
sbb
jno
jne
mov
xorl
add
mov
push
mov
dec
cmc
pushf
adc
add
push
lds
xor
mov
xlat
xchg
movl
inc
cwtl
pop
or
cwtl
lcall
inc
push
pop
fwait
roll
xchg
or
iret
inc
dec
adc
jo
sub
and
or
ss
aaa
lods
ss
sbb
push
sahf
add
pusha
inc
xchg
cli
add
or
fwait
or
pop
hlt
or
jb
push
fldenv
pop
arpl
and
dec
cmp
js
mov
and
xchg
out
sub
pop
xchg
cmp
sub
mov
cmpb
push
test
hlt
mov
xchg
pop
test
addr16
rclb
jge
sub
dec
sub
or
iret
movsb
dec
or
and
in
dec
lret
xor
dec
fs
test
mov
cmp
sub
inc
inc
mov
add
adcl
and
push
pop
lea
rep
jnp
lahf
sub
or
outsl
aaa
dec
sub
or
sbb
cmp
jae
add
jnp
int
and
or
sbb
andl
pop
pusha
jnp
and
jne
push
push
push
xor
movsb
push
xchg
mov
cmpsb
xlat
mov
and
push
mov
push
pusha
imul
push
data16
sbb
adc
xor
divb
pop
adc
pop
call
mov
imulb
cwtl
imul
xchg
movsb
or
pop
push
sti
insl
arpl
insl
repnz
fs
or
aam
into
fs
add
push
fcoml
mov
inc
repnz
scas
push
flds
mov
xchg
inc
arpl
jnp
movsl
je
cld
pop
adc
push
push
movsl
dec
dec
cmovno
shlb
and
cmp
ja
xchg
or
push
dec
scas
data16
fidivl
pushf
xchg
cmp
push
jo
cmp
adc
inc
pushf
push
mov
jp
xchg
adc
int
sbb
and
push
mov
subl
sub
fs
mov
adc
dec
jbe
push
cli
gs
pop
push
in
push
bound
pop
ds
shll
dec
sbb
es
orb
cmp
pop
pop
dec
jne
mov
add
pushf
jmp
add
bound
sbb
les
inc
lret
inc
xchg
mov
push
xchg
add
outsb
push
test
cmp
pop
in
and
adc
xchg
cmpsl
test
mov
sub
daa
or
add
inc
inc
clc
inc
mov
add
cs
mov
into
inc
mov
adc
add
add
add
test
inc
insb
cmp
adc
clc
pop
push
testb
out
ret
push
lcall
or
or
push
fsubs
test
rorb
subl
cmp
jbe
add
xor
addb
adc
aaa
add
je
push
inc
inc
and
push
adc
rol
add
outsb
push
and
add
rcrb
je
jmp
cld
xchg
jecxz
dec
dec
pushf
dec
mov
and
lds
ret
sub
jecxz
shlb
es
ss
cmpb
call
mov
or
je
jge
jg
cmp
movsb
rol
or
ret
sahf
lods
ret
add
add
roll
psrad
decl
push
mov
lcall
and
cmp
insl
cmp
dec
outsl
dec
push
cmp
adc
ret
pop
cmovne
adc
push
push
and
rorb
add
scas
push
dec
pop
and
jl
push
push
pop
xchg
bound
mov
test
notb
je
push
push
sub
or
pop
and
jbe
and
cmp
push
or
mov
add
sbb
sub
inc
sldt
cmpsb
mov
xchg
jne
pushf
sbb
test
xchg
or
or
pop
sub
inc
pop
loop
pusha
nop
adc
stos
adc
adc
andb
inc
stos
cli
inc
jmp
dec
ss
mov
out
rorl
jne
sub
outsb
sar
es
jp
cmp
lea
mov
jb
out
mov
jae
ror
add
jns
and
hlt
jae
adc
insl
add
jae
ret
loopne
enter
fsubrl
xchg
sub
lahf
adc
mov
sbb
call
insl
dec
arpl
call
sbb
sti
sub
stos
push
frstor
or
add
in
inc
cmp
imul
dec
popf
aaa
pop
mov
xlat
arpl
xchg
push
addb
pop
rcrb
mov
pusha
or
and
inc
es
sbb
sbb
mov
sub
xchg
fists
arpl
daa
or
cmp
nop
out
nop
and
sahf
repz
mov
in
or
mov
ja
jb
fmull
int3
mov
loopne
insb
dec
and
adc
or
outsb
xchg
inc
or
lods
push
mov
or
mov
jmp
ret
and
insb
adc
jb
insb
cmp
push
lcall
jne
or
rcrb
cld
or
push
call
popa
push
ret
fwait
popa
lods
dec
adc
je
nop
xor
inc
je
and
cmp
sbb
dec
pop
mov
jnp
or
dec
add
add
inc
or
and
cli
lods
lret
gs
dec
int3
mov
push
test
push
add
push
push
int
inc
imul
fwait
mov
inc
aas
push
nop
xchg
rcrb
inc
in
enter
add
pop
and
enter
enter
push
daa
addb
and
sub
add
jno,pn
adc
pushf
movsb
or
lret
xchg
int3
mov
xor
scas
cmp
inc
xchg
sub
enter
and
nop
lock
sti
fnstenv
xor
or
xor
mov
mov
mov
sbb
scas
dec
ror
jmp
or
inc
inc
xchg
or
out
roll
pusha
adc
pop
add
pop
xor
adc
mov
mov
sbb
daa
sbb
mov
test
push
mov
and
lahf
aam
lods
pusha
sbb
add
mov
vpaddq
jp
mov
mov
and
sbb
jecxz
mov
mov
fmuls
andl
mov
mov
mov
fimull
ds
jl
cmp
inc
into
fmuls
shll
xorb
cmp
pop
mov
fstps
mov
fldenv
sub
xchg
shl
mov
out
add
inc
mov
imul
enter
cli
fsubrl
loopne
hlt
sahf
cmpsl
shr
aam
in
inc
sub
xor
add
out
add
inc
xchg
dec
hlt
cmp
mov
push
mov
add
push
xchg
movsl
and
scas
mov
test
inc
data16
repnz
adc
jne
add
cs
mov
cmp
popf
test
in
push
mov
xchg
cmpb
mov
fwait
pop
int
aas
sub
lret
lock
rcrl
pop
loopne
fcoms
fadd
lret
fsubl
dec
xchg
cmp
jne
out
add
pusha
xor
mov
add
and
inc
fs
fs
ret
cli
pushf
dec
push
ds
sti
lock
adc
or
mov
inc
cmp
or
add
test
das
adc
pop
dec
xchg
push
inc
flds
push
leave
inc
cmp
or
jnp
ss
dec
sbb
and
pop
dec
rolb
add
subl
mov
cmp
push
je
xchg
ja
sbb
jl
add
mov
push
pop
xor
lods
rcrb
jb
adc
iret
or
mov
add
xchg
adc
and
rorl
sbb
pop
and
repz
ljmp
cwtl
inc
repz
inc
mov
inc
mov
or
jne
leave
mov
xchg
cmp
in
inc
cmp
mov
sbb
inc
sbb
add
inc
add
xchg
add
arpl
insb
mov
xor
cmp
pusha
jecxz
adc
dec
sbb
lods
movsl
mov
rcl
hlt
push
and
jecxz
fcmovnu
inc
pop
jecxz
xor
stos
xchg
mov
or
shrb
sub
ret
inc
iret
add
adc
jo
int3
imul
add
xor
or
mov
call
sub
sbb
inc
push
ss
outsb
push
fdiv
xchg
pop
push
ja
or
adc
call
dec
aam
mov
in
jl
testb
xor
pop
push
jmp
test
or
jp
mov
jmp
rol
xchg
pop
pop
jge
dec
push
gs
adc
pop
jae
jne
fdivrl
in
sub
add
jo
dec
push
fsubs
and
imul
sbb
insb
sub
in
and
test
inc
sbb
sbb
loop
add
pop
inc
or
xor
clc
jl
sahf
hlt
adc
fadds
inc
xor
lret
or
mov
add
push
dec
or
mov
adc
test
or
out
and
pop
push
scas
aam
leave
les
push
push
aam
mov
mov
mov
mov
xor
xor
mov
jo
pop
pop
fs
sub
push
push
in
imul
jg
add
subb
jge
daa
pop
les
sbb
jp
pop
faddl
push
iret
fmuls
in
test
in
add
daa
sbb
sbb
mov
pop
push
cli
push
call
xchg
adc
pushf
lea
fstpt
jo
js
dec
cmpl
push
mov
inc
xor
loopne
or
adc
xor
pop
add
call
cmpsb
and
push
inc
xor
es
or
dec
push
pop
call
sub
sub
arpl
repnz
cmp
clc
push
sbb
add
adcb
push
mov
sub
out
pop
add
stos
jp
push
rcrb
xor
lods
and
incl
pop
push
xchg
adc
sahf
or
inc
pop
pusha
inc
stos
out
pop
in
inc
cwtl
pushl
add
cmp
or
sub
pop
shlb
push
dec
mov
push
aad
cld
loopne
inc
jmp
int
cmp
pop
shll
cmp
mov
pop
insb
loop
xchg
push
push
aam
push
rorb
test
movsl
or
rcrb
mov
add
cmpsb
cwtl
and
dec
push
mov
test
or
mov
push
sbb
lods
mov
mov
jl
test
cmp
incb
loopne
push
stos
mov
adc
and
test
int3
les
xor
add
push
add
mov
mov
fmuls
addl
lea
pcmpgtw
loope
sub
push
sbb
negl
mov
rcrb
push
loopne
sbb
inc
cmc
xchg
xor
mov
xor
stos
mov
pop
addb
outsl
pop
dec
aas
icebp
push
inc
add
mov
mov
xchg
scas
ja
subb
test
pop
pushl
pop
push
inc
mov
jne
push
scas
arpl
mov
mov
outsl
push
stc
push
cmp
loope
add
xchg
xor
xchg
cmp
mov
int3
das
and
faddp
dec
cs
loopne
add
xchg
sbb
or
sub
arpl
dec
mov
rorb
nop
hlt
aam
mov
push
add
push
inc
pop
inc
xchg
mov
pusha
mov
push
push
push
push
pop
inc
adc
mov
rcrl
mov
inc
rcrb
push
lahf
je
adc
and
pop
and
add
test
stos
or
or
xor
sbb
cmp
les
add
push
adc
scas
cmp
mov
insb
jo
pop
pop
cs
mov
jmp
push
adc
sub
push
adc
add
nop
or
mov
sub
lods
pusha
test
sbb
push
in
adcb
inc
test
clc
xor
jp
bound
sub
inc
or
mull
loopne
jo
or
nop
add
ret
push
adc
push
push
cltd
inc
mov
loopne
add
mov
fimull
and
in
pop
dec
mov
add
mov
push
clc
cmpsb
push
add
or
repnz
jecxz
scas
cmp
das
in
xlat
and
cs
mov
push
mov
and
stos
fwait
pop
ss
sub
les
iret
xchg
cmp
dec
in
mov
adc
mov
jne
cmp
out
adc
cmp
aas
sub
incb
pop
xor
and
mov
and
xor
push
fadd
add
sub
fadds
pop
jno
pushf
cmpsl
dec
imul
mov
sbb
dec
in
pop
and
inc
dec
in
push
or
pop
or
push
into
fdiv
sub
xchg
pop
outsb
ret
les
clc
xchg
pop
dec
pop
jb
jno
sub
push
popf
cwtl
xabort
ss
lret
aad
inc
push
jae
sbb
inc
cmp
mov
rolb
push
xor
hlt
add
or
sbb
cmpsb
or
add
mov
or
sbb
scas
add
rolb
jo
int3
adcb
or
imul
jle,pt
push
mov
stc
xchg
rolb
movsb
mov
jne
or
jmp
sarl
xor
mov
test
call
loop
and
ss
jo
jbe
test
imul
test
mov
nop
cmp
xchg
lret
xchg
cwtl
pushf
movl
xchg
lods
adc
jb
or
das
xchg
jno
cmpsl
and
scas
xor
or
mov
enter
sub
ss
ffree
sti
mov
ja
nop
xor
mov
jecxz
shlb
into
call
or
ljmp
out
push
jmp
cmp
cmp
addr16
cmp
movsb
sub
mov
movsb
lea
or
add
loope
sub
cmp
lcall
ljmp
jne
add
push
pop
and
or
pop
js
movsl
lea
jl
movsl
pusha
shl
mov
pop
cmp
xchg
sbb
enter
push
addr16
mov
xor
adc
inc
mov
add
lahf
mov
xchg
xchg
popf
inc
xlat
addr16
add
rorb
movsb
lds
ret
add
add
and
push
cmpsl
inc
push
inc
push
mov
push
mov
inc
lcall
mov
adc
rcpps
fstps
mov
dec
jb
sbb
push
mov
pop
lods
std
xor
fisubrl
add
mov
mov
fidivs
dec
je
jle
cmp
repz
sub
lods
or
push
test
jo
cmpsl
push
push
cmp
je
push
je
imul
pop
leave
xchg
sub
pop
cmpsb
mov
dec
mov
outsb
adc
out
sbb
nop
push
std
pusha
adc
rol
or
sbb
inc
fildl
push
je
rorl
sub
xchg
int
movsl
xchg
loopne
add
jmp
sahf
fldcw
roll
out
mov
add
setb
andl
clc
xor
push
sbb
cmpb
push
scas
inc
sbb
pushf
sub
inc
out
mov
cltd
fnstsw
jo
icebp
gs
sti
push
push
mov
scas
xchg
sbb
lret
lea
mov
mov
add
add
inc
cmp
mov
cmp
push
rcrb
add
adc
and
les
mov
cmp
jge
fcoml
mov
sub
push
jl
mov
sbb
push
xlat
mov
scas
pop
pushf
and
pop
or
mov
xchg
sub
mov
push
popf
sub
dec
add
add
add
testb
test
dec
push
out
out
and
push
pop
push
mov
push
cmp
push
ja
mov
test
aam
pop
xchg
cmp
in
jge
mov
pop
and
ljmp
or
adc
repz
push
sarl
mov
lea
push
pop
jo
clc
cmp
mov
jp
add
mov
push
adc
fdiv
jo
les
add
add
cmp
adc
push
push
fdivrl
mov
pop
add
inc
inc
xlat
mov
add
lea
sbb
in
add
orl
out
ret
incb
jno
imul
push
xchg
scas
push
into
add
arpl
outsb
lock
es
push
leave
repz
loopne
mov
xchg
jo
and
rorl
test
mov
sti
pop
sbb
xchg
dec
mov
fdiv
cmp
and
mov
inc
hlt
cmpsb
jl
hlt
mov
add
andl
int3
cwtl
dec
push
jns
js
loopne
cmp
stos
jns
mov
cltd
clc
arpl
fiadds
add
or
adc
je
data16
lahf
add
xlat
jmp
out
mov
stos
mov
add
fistpl
mov
mov
and
cmp
or
outsb
mov
inc
sub
jge
push
cmp
fidivrs
xchg
push
or
mov
jl
jp
outsb
and
fisubs
call
ja
aam
xor
inc
test
push
lock
pop
jmp
shr
imul
jge
cmpsb
dec
cmp
mov
shlb
jp
subl
or
xor
push
jns
jp
inc
inc
jmp
inc
jo
add
mov
dec
and
jne
int3
push
add
push
lock
int
inc
iret
mov
and
and
or
dec
xchg
push
push
push
push
or
or
mov
xor
mov
lret
repnz
stos
jp
arpl
mov
dec
fstpl
imul
mov
lods
ret
push
mov
enter
loopne
jne
xchg
nop
sub
sbbl
mull
xor
pop
push
rcrb
jb
dec
adc
push
mov
andl
dec
adc
add
out
or
lret
mov
hlt
sbbb
xchg
enter
int3
test
sub
inc
pop
mov
push
add
push
mov
repz
or
nop
xchg
xor
fxch
in
jns
sti
or
out
push
and
aaa
cli
pop
push
fcomp
sbb
mov
jl
rcrb
add
test
sbb
les
and
outsb
out
xchg
andl
nop
setb
and
dec
and
fbld
loopne
inc
pop
push
inc
mov
je
or
call
xor
les
add
jecxz
jno
dec
push
ret
or
rcr
xchg
adc
das
jl
xorb
mov
rcrb
jle
aam
icebp
xchg
jnp
cmp
or
push
ljmp
dec
cmp
adc
insl
out
jle
inc
inc
lcall
and
pop
push
mov
mov
mov
add
test
test
adc
xchg
test
jns
xchg
into
fnstenv
addb
and
ret
jo
xchg
push
test
andb
sbb
mov
test
sub
ffree
adc
sub
dec
adc
rcrb
mov
or
dec
fwait
mov
rorb
inc
cs
add
loop
inc
xor
iret
mov
add
lcall
mov
aas
mov
test
test
lret
orb
test
pop
adc
xchg
add
loopne
inc
inc
movsl
loop
push
pop
hlt
push
into
dec
cmc
inc
dec
pop
cmpb
ds
nop
les
cwtl
les
cmpsb
lods
je
sub
ljmp
push
lahf
mov
incl
fdivs
sub
test
lret
fldenv
pop
cmp
psubq
shrb
imul
daa
jo
rorb
mov
jle
sub
push
stos
push
add
adc
add
cmp
subb
addr16
add
or
add
jp
push
es
mov
and
into
call
pop
sub
add
outsb
sub
xchg
mov
icebp
push
jle
loope
mov
cmp
orl
mov
rorb
cmp
add
cmp
testl
cmp
jne
xor
insl
lea
in
adc
shl
mov
xor
loop
and
shr
xchg
inc
in
lock
jb
mov
insl
mov
sub
xor
mov
pop
cmp
call
add
aaa
jmp
add
stos
shrb
in
or
inc
adc
and
dec
pop
lea
fneni(8087
lock
inc
jbe
jl
test
inc
fldl
or
jg
addl
mov
icebp
push
push
inc
xchg
mov
add
add
cmp
push
mov
outsl
mov
ret
mov
sub
test
sbb
xor
adc
cmp
test
and
add
inc
mov
push
insl
stos
sti
pop
or
js
sub
call
mov
frstor
add
dec
test
mov
xchg
enter
cmc
cmp
sbb
and
mov
ljmp
pop
jae
or
pusha
fadds
mov
movsl
sbb
adc
pop
fcmovnb
mov
sub
add
jo
mov
sub
push
mov
call
sbb
push
adc
fdivrs
fsts
lahf
cwtl
add
xor
inc
xchg
and
xchg
outsb
xorb
jge
mov
inc
lea
and
mov
dec
loopne
push
lock
in
pop
js
test
mov
ret
shll
mov
and
add
test
xchg
xor
mov
push
movsb
and
or
or
add
cli
add
or
fdivrl
je
push
mov
orl
mov
rolb
int3
jmp
adc
adc
add
loopne
insl
out
stos
std
dec
popa
or
push
push
cmp
test
fucomi
mov
dec
push
ficompl
mov
testl
dec
loopne
jl
dec
dec
in
push
add
enter
fnsave
push
mov
ret
jmp
insl
add
mov
cmp
je
rclb
addl
mov
call
cmp
dec
inc
push
adc
push
xlat
mov
ret
ljmp
push
xor
js
xchg
or
sbb
adc
cmpl
fs
or
repz
or
adc
adc
lahf
add
outsl
cmp
push
jbe
in
push
fistl
cmp
xchg
jecxz
cld
insb
adc
pushf
inc
test
xorb
clc
out
adc
push
push
imul
repz
pop
out
aam
mov
dec
adc
mov
testb
push
push
xchg
xchg
imul
dec
test
out
jl
add
xor
adcb
fsubrs
lods
xchg
aam
adc
and
jge
fistps
ret
and
das
sbb
and
dec
test
pop
adc
or
sub
cmp
or
aam
movsb
xchg
cmp
xor
test
js
mov
pop
adc
push
pop
add
sbb
xor
jecxz
fsubrl
lret
imul
popa
fildll
pop
dec
push
push
xor
xor
pushf
das
and
aas
call
push
pop
mov
divl
mov
xor
add
mov
cwtl
es
pusha
scas
pusha
inc
xor
adc
in
gs
push
fs
jmp
push
mov
adc
lods
push
jnp
lock
movsl
push
adc
mov
push
lahf
or
or
inc
mov
push
mov
int
test
dec
test
mov
mov
fldl
hlt
push
xchg
imul
or
test
mov
enter
inc
mov
js
or
xchg
dec
nop
mov
repnz
movsb
enter
clc
mov
lods
jns
jns
mov
pop
int3
jo
sarb
rorb
add
out
xchg
or
es
test
cwtl
loope
aam
mov
pop
inc
jl
es
sbb
jp
add
icebp
sarb
mov
js
push
nop
jno
pop
lret
pushl
or
push
rolb
mov
sub
adc
sbb
sub
and
jne
je
dec
scas
popa
mov
test
xchg
add
add
xor
popf
add
jb
and
js
insl
xor
sub
dec
jo
int3
les
iret
add
add
mov
adc
call
and
push
loopne
js
imul
enter
push
dec
cmp
cmp
ret
add
fidivrl
inc
cmpb
or
jge
jns
out
xor
pop
xor
and
push
mov
movsb
inc
jp
hlt
or
loope
scas
mov
xlat
js
dec
add
lock
push
inc
js
push
push
les
cmp
ret
mov
enter
push
push
faddl
sbb
or
bound
adcb
test
add
cmp
push
jecxz
scas
adc
ror
xcrypt-cbc
cmpsl
adc
aaa
cmp
or
push
sub
arpl
dec
outsb
push
adc
movsl
push
adc
mov
out
lcall
lea
mov
pop
mov
rclb
out
movsb
xorb
test
adcl
push
and
scas
xor
stc
test
adc
dec
in
inc
ret
and
insb
ficoms
jo
and
or
hlt
pop
inc
push
loopne
or
rol
add
pop
push
xchg
mov
js,pt
test
pop
lock
loopne
imul
lcall
inc
pop
push
mov
sbb
cli
jmp
call
shrb
bound
inc
cli
jo
xor
push
jns
push
pop
in
cltd
cmp
inc
adc
mov
inc
and
pop
fwait
adc
push
std
adc
adc
mov
sbb
and
mov
jmp
and
mov
jmp
mov
xor
lret
lret
leave
jne
inc
popf
pop
xchg
push
xor
rcrl
add
popa
or
rclb
push
add
cmc
fwait
push
and
inc
nop
negl
adc
xadd
popf
and
arpl
add
xor
xchg
push
push
rolb
push
add
inc
call
repz
xor
xchg
adc
enter
scas
and
sbb
jmp
jne
mov
jmp
fldl
inc
xchg
repz
call
or
cmp
into
adc
mov
outsb
or
mov
push
push
movsl
jg
lods
movsl
stc
faddl
fstl
stos
gs
pop
push
fcomp
fnstsw
mov
jp
fldl
pop
fsubr
pop
faddp
andl
sbb
pop
les
xor
push
sbb
mov
and
addr16
pushf
add
in
sub
xchg
lods
loopne
xchg
cmp
mov
andb
jecxz
inc
dec
ret
fld
or
sbb
fisubrs
fdivp
insb
and
mov
mov
inc
jecxz
jp
add
test
iret
sub
pop
mov
xor
push
or
loope
adc
inc
call
cmp
or
push
cmp
sbb
lret
jne
mov
cmovb
or
push
xlat
out
call
sbb
add
xor
aam
dec
add
into
lock
push
rcl
or
jp
mov
es
in
sub
push
das
cmp
test
mov
xchg
push
jo
cmp
cmp
jge
adc
jge
out
dec
shlb
pxor
outsl
ljmp
adc
xchg
add
jmp
adc
ds
outsb
inc
dec
aaa
dec
imul
dec
jmp
mov
mov
and
jg
xor
add
sub
add
inc
js
or
pcmpgtb
mov
cmpsb
push
orb
jle
adc
addr16
push
xor
dec
jns
mov
aad
jmp
mov
in
sub
mov
mov
jbe
push
mov
mov
pop
push
rclb
pop
xor
pusha
cmp
fstl
sbb
xor
dec
cld
sub
cmp
loopne
push
dec
cmp
ja
mov
xchg
add
orl
sbb
pop
ret
add
jmp
xchg
dec
or
jne
cmp
leave
pushl
pushf
popa
dec
dec
mov
adc
filds
mov
out
push
lods
push
xchg
sub
sub
push
sbb
sbb
adc
cmp
xchg
andl
dec
ljmp
clc
test
test
pusha
and
xchg
jge
test
dec
movsb
lods
add
mov
in
mov
sbb
out
into
xor
xlat
add
outsl
sbb
cmp
fcoms
xchg
push
loopne
sbb
stos
push
aas
sub
pop
and
ret
jne
lods
mov
ret
adc
dec
insb
sub
mov
shlb
push
jo
mov
mov
push
sbb
inc
add
mov
icebp
fldt
dec
and
or
stos
fdivl
jo
xor
push
das
add
push
cli
mov
cmp
inc
or
js
mov
mov
jmp
outsl
adc
push
add
xor
jmp
clc
pop
xor
mov
cwtl
js
cmp
enter
push
imul
or
push
cs
push
pop
shll
push
daa
test
mov
mov
hlt
leave
hlt
sbb
idivl
lock
xchg
cmpsl
je
push
lock
and
push
cmp
xor
jns
mov
ret
rcr
imul
sub
mov
outsb
push
jne
icebp
mov
add
push
mov
inc
cs
sti
sbb
js
mov
imul
ljmp
inc
adcb
add
xchg
xchg
and
lods
dec
sub
pop
jnp
and
in
push
nop
fildl
push
xchg
rolb
inc
je
and
pop
pop
push
mov
das
mov
and
pushf
dec
dec
adc
jmp
out
out
out
sahf
push
ret
mov
add
mov
sub
outsl
ret
mov
adc
inc
andl
mov
bound
jae
fdivl
jns
push
aam
sub
sbb
lock
leave
xor
push
pop
mov
jg
leave
out
inc
or
mov
sub
movsb
andb
add
inc
popl
cmp
fimull
inc
pop
mov
or
loope
xor
sbb
sub
push
ja
insl
lea
sbb
inc
je
push
push
adc
sub
addr16
pcmpeqw
push
xlat
dec
jne
inc
jo
push
cmp
notb
bound
js
xchg
ret
pop
xor
mov
or
ss
mov
inc
or
addl
std
or
popf
xchg
mov
add
movb
jno
sbb
push
test
push
pop
pop
cmpl
popf
mov
sub
or
sub
inc
fbstp
subb
adc
ja
lahf
or
les
clc
mov
xor
mov
stos
add
mov
pushf
sbb
pop
pushf
and
xorb
fsubl
lods
or
inc
fs
mov
movsl
and
xor
add
jp
ret
jl
rcll
sbb
sub
rolb
inc
loopne
test
xchg
lods
jo
fstpt
pop
je
scas
dec
add
cmp
popf
or
xor
popa
movsl
imul
adc
inc
and
cmp
add
push
xchg
nop
in
ficompl
pushf
push
mov
xchg
cmp
outsl
xor
in
jl
mov
push
jb
push
pusha
insl
ficompl
xchg
push
popa
imul
int3
jns
inc
add
in
xchg
pop
push
sbb
aas
xor
push
insb
and
call
or
lock
insl
xor
mov
ror
ret
sbb
pop
push
lods
arpl
loop
adc
push
inc
leave
xchg
cmpxchg
or
inc
movsl
pop
adc
jnp
add
adc
stos
fwait
in
mov
mov
lock
or
shlb
mov
call
push
mov
lret
js
lods
loop
mov
cltd
mov
adc
cmp
fsubrs
aam
mov
add
les
mov
mov
sbbl
dec
or
popa
add
lods
mov
addl
in
out
ja
cmc
xchg
and
jbe
mov
push
push
aaa
push
faddl
jg
sbb
xchg
inc
cmp
jne
lcall
mov
fadds
pop
cwtl
add
dec
out
dec
enter
pop
cmpb
or
add
push
add
add
insb
xchg
faddl
je
loop
mov
jb
mov
loop
in
cmp
jl
mov
adc
pop
clc
jl
daa
mov
push
adc
sahf
dec
rcrb
loopne
mov
lock
sbb
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
testl
sti
sbb
aas
loope
sbb
lcall
sub
aaa
add
loope
or
outsl
xor
mov
add
rorl
and
xor
enter
dec
data16
pop
dec
popf
ss
push
mov
push
dec
sub
push
jne
hlt
sub
dec
ficoms
stc
adc
sub
popa
enter
movsb
adc
imull
lods
dec
insl
or
push
pusha
or
pop
pop
setg
pop
pop
cmpb
sub
pushf
jno
xchg
push
inc
sbb
add
add
push
hlt
jge
inc
xchg
push
mov
loopne
or
pop
dec
inc
repz
iret
pop
add
and
sub
call
rolb
in
jb
add
daa
scas
or
out
pusha
mov
shrl
xor
mov
scas
add
push
imul
jl
xorb
lret
xchg
adc
mov
ret
inc
dec
js
pop
pop
ja
mov
adc
mov
pusha
fnstsw
mov
push
and
and
xor
or
xlat
std
in
loopne
sub
jmp
call
loopne
ret
aad
addl
dec
jmp
sbb
or
sbb
cli
rorl
hlt
xchg
test
cmp
mov
and
push
mov
rcrl
ljmp
or
cs
out
insl
ret
mov
pop
shll
push
dec
je
sub
push
xchg
push
xchg
or
shrl
or
leave
or
jno
and
pushf
cs
xor
push
xor
sahf
add
cmp
push
inc
test
jns
and
cmp
not
sub
sti
push
add
sbb
aaa
push
or
mov
push
pop
push
lods
add
dec
push
add
or
leave
les
adc
lret
mov
pusha
test
jp
sbb
or
or
cmpsb
cmp
sub
xor
fistpll
add
add
shlb
jmp
adc
inc
mov
gs
inc
inc
cmp
sbb
addl
xor
push
mov
push
jnp
mov
jno
and
xchg
add
in
mov
je
mov
and
gs
push
dec
xor
int3
aas
hlt
xchg
dec
lea
mov
mov
and
lret
sub
push
xor
adc
inc
pop
add
jnp
or
xor
mov
sub
jns
cmp
inc
inc
dec
push
leave
push
sub
push
ficompl
xor
loopne
cmp
or
pop
sbb
jbe
jns
sbb
inc
xor
xchg
mov
mov
fiadds
xorb
mov
mov
in
xor
add
jns
sub
stos
or
or
loopne
inc
mov
jbe
shlb
loope
dec
push
and
enter
lret
add
sbb
ss
orb
sbb
fsubr
adc
outsl
orl
sub
sub
or
pop
inc
push
jg
int
jns
push
inc
xor
in
cli
std
jb
out
add
test
out
dec
in
cmp
push
sbb
xor
sahf
adc
leave
xor
or
add
xchg
sub
add
ret
jb
mov
enter
and
cmp
jl
stos
and
sbb
mov
sbb
cmp
sbbb
in
jmp
push
popf
pushaw
leave
addb
adc
xchg
push
andb
popa
and
pop
xlat
dec
pop
in
inc
scas
flds
in
adc
sbb
adc
mov
mov
pop
and
xor
jo
sar
add
mov
incl
push
inc
pop
adc
add
dec
push
and
fcmovb
push
push
xor
fisttps
ds
and
nop
sub
cld
inc
xorb
insl
sub
and
ljmp
sahf
push
inc
mov
adc
push
icebp
loop
add
shlb
cmp
test
xchg
mov
xor
sbb
rolb
sahf
and
orl
mov
jns
or
sub
fcmove
pop
xor
jo
push
mov
jg
jne
incl
cmp
jl
xor
lret
into
ret
or
fcom
dec
verw
pop
out
mov
xor
cmpb
es
xchg
into
jl
shrl
adc
push
pop
enterw
test
adc
repnz
stc
jnp
sub
pop
je
push
mov
cmp
adc
and
pop
cmp
or
or
inc
fstps
xor
sti
in
cmpsl
mov
inc
and
jo
mov
jns
pop
sbb
cs
push
jmp
push
sbb
jno
and
jmp
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
and
insb
push
jge
lret
xor
dec
push
mov
lea
rcrl
sub
jne
cs
test
xchg
sahf
cmp
mov
xor
push
mov
mov
sbb
outsl
shufps
xor
or
stc
vmread
and
pop
push
pop
pop
sbb
add
ss
xchg
inc
and
jo
add
daa
stos
xchg
pop
cld
pusha
lock
pop
or
sbb
add
jg
call
or
push
clc
mov
and
xor
aaa
push
push
jmp
jbe
cmp
sbb
and
push
add
inc
dec
push
sub
rclb
or
and
cmc
jnp
pop
lods
sub
and
jle,pn
inc
add
mov
repnz
push
lea
les
mov
cmc
jmp
adc
jp
movsb
jecxz
mov
mov
std
mov
xchg
outsb
fdivrs
cmpl
nop
shl
int
mov
push
mov
popa
xor
insl
xchg
jne
xchg
adc
cmp
cmp
lods
dec
inc
xor
add
push
lea
test
cmp
shrb
xor
divb
cmp
xor
xchg
mov
mov
mov
sbb
mov
adc
jne
add
insl
pusha
or
pop
mov
pop
repz
stos
movsl
into
cmp
mov
mov
movsl
cmp
popa
inc
dec
adc
or
call
insl
adc
push
or
sub
daa
adc
sarl
loopne
xchg
fidivl
push
pop
mov
inc
fdiv
je
and
add
movsb
je
lret
add
sbb
mov
jmp
adc
inc
cmp
jne
push
jmp
cmp
ljmp
jmp
test
inc
add
xor
dec
xchg
inc
test
pop
lock
adc
mov
cs
inc
and
cs
cld
inc
sbb
and
pop
dec
inc
mov
dec
pusha
adc
fbld
stos
mov
add
out
inc
enter
ret
repz
lods
lret
mov
sub
pop
mov
xrelease
sbb
repz
jno
mov
test
add
push
cli
adc
xor
cmp
shlb
inc
sahf
dec
test
xchg
mov
pop
out
xchg
mov
loopne
into
iret
mov
data16
push
dec
pop
shlb
inc
les
push
dec
lret
mov
or
push
jecxz
or
dec
push
pop
adc
jp
scas
dec
sub
or
or
imulb
test
jo
add
sbb
xor
lcall
push
sub
and
inc
sbb
pop
pop
jp
dec
and
pop
imul
push
inc
js
es
add
pop
test
shr
mov
push
stos
jp
push
arpl
scas
movl
lock
test
adc
sub
aas
mov
sbb
or
inc
jmp
mov
mov
ljmp
stos
test
add
mov
inc
adc
rorb
mov
pop
add
icebp
xchg
and
adc
call
sbb
int
jae
pop
add
cmpb
dec
lods
or
dec
mov
loopne,pn
jl
shlb
jmp
std
das
inc
mov
pop
inc
loope
add
pop
and
or
lods
and
xchg
jmp
pop
cmovae
ja
dec
mov
add
and
imul
lret
push
cs
or
or
or
data16
mov
add
add
sub
in
and
into
xchg
repnz
pop
push
out
fldl2t
adc
imul
push
cwtl
jo
cmp
add
inc
jle
call
idivl
mov
clc
popa
adc
cmp
and
lcall
and
or
add
mov
pop
in
cmpb
adc
test
add
movsl
lea
mov
jle
setge
outsb
loope
test
sbb
push
mov
ja
pop
add
jl
add
jl
movl
inc
popa
ret
movsb
dec
push
lahf
sub
test
sub
xlat
and
jns
imul
fnstsw
and
ds
icebp
adc
add
push
jl
mov
jmp
inc
lahf
mov
dec
mov
mov
js
cmp
jl
push
push
push
pop
adc
cmpb
add
inc
push
xchg
or
adc
out
xor
push
cmc
sbb
stos
cli
mov
das
jmp
xchg
enter
and
pop
insl
jg
sub
cmp
adc
cmp
bound
fildll
mov
test
push
test
inc
insl
pushf
icebp
or
xchg
jl
sub
enter
or
call
shlb
jae
sub
mov
int
inc
insb
aad
push
pushf
and
outsb
idivb
cld
fldcw
sub
movsb
xor
pushf
movsb
test
lea
push
cltd
mov
add
mov
sbb
popf
adc
push
or
std
cwtl
jae
clc
cmp
xor
cld
cld
in
push
decb
push
scas
add
jecxz
xchg
dec
jle
add
stos
ss
mov
js
xor
push
aad
js
or
pop
add
int3
fs
cli
lea
jnp
mov
mov
idiv
sub
lock
cmp
and
addl
and
pop
push
cmp
xor
hlt
rorl
sbb
sbb
sub
add
push
push
add
push
pop
and
fsts
or
or
mov
jp
sahf
hlt
adc
or
cmp
push
adc
sub
test
faddl
jo
inc
add
aad
ret
jno
sbb
jo
jmp
loope
lcall
std
xor
popa
out
repz
add
push
or
mov
leave
mov
xlat
jns
aad
lock
dec
pusha
or
xor
and
shll
outsb
xchg
pop
cltd
pop
cmpsl
xchg
or
rorb
mov
insl
sti
addb
sub
out
fs
mov
and
test
scas
add
adcl
pop
mov
add
push
stos
add
insb
nop
imul
ret
and
sbb
inc
imull
mov
int3
test
xchg
inc
mov
lea
jmp
pop
enter
mov
add
jae
rcr
insb
push
es
add
in
das
in
add
shrb
sub
lock
lds
pop
dec
push
adc
popa
and
xlat
aam
and
mov
push
adc
fiadds
and
adc
push
or
push
push
adc
xor
aas
mov
push
push
xor
or
roll
or
mov
and
dec
mov
and
jb
adc
or
add
movsb
adc
stos
or
les
call
and
push
bnd
add
xor
gs
push
in
or
sbb
inc
scas
in
or
pop
sbb
xchg
loope
inc
dec
ds
mov
push
roll
orb
inc
scas
lods
femms
test
lahf
loope
outsb
clc
lock
add
add
or
adc
adc
mov
jge
out
ds
or
xorb
loopne
xchg
adc
sub
mov
mov
sbb
inc
dec
adc
pop
adc
mov
ljmp
push
push
js
enter
int
push
pop
lock
addb
icebp
test
mov
add
mov
lods
adcb
inc
pop
mov
rorb
lea
loopne
lgs
pop
mov
push
popa
or
adc
dec
dec
addl
adc
int3
pop
ljmp
adc
loope
lods
in
inc
sbbl
dec
fstps
pop
dec
mov
fadd
aas
jo,pt
cmp
push
enter
add
movsb
call
cmp
stos
cmp
push
test
add
xchg
mov
aam
sbb
add
xchg
or
adcl
hlt
push
jmp
in
push
nop
xchg
fildl
mov
mov
cltd
push
in
andb
and
scas
sbb
popa
test
arpl
cli
movsl
das
push
test
mov
or
jne
sbb
dec
enter
scas
fsubrs
mov
sub
inc
add
xchg
sub
inc
loope
sub
inc
push
ret
adc
push
fcoms
lret
fsubrl
push
and
outsb
mov
fdivrs
mov
cmc
test
data16
push
jle
outsl
mov
stos
add
rclb
mov
ljmp
out
xchg
mov
lods
push
nop
mov
in
stos
and
mov
inc
in
les
hlt
mov
jmp
pushf
pop
mov
xchg
dec
and
adc
ret
adc
or
or
or
cmp
insl
adc
push
jecxz
push
test
dec
sbb
and
loopne
test
or
adc
dec
and
arpl
pop
sahf
enter
push
xor
and
test
ja
or
das
push
push
xor
or
hlt
sti
stos
int3
test
adc
pop
push
roll
xor
mov
pop
insl
xor
pop
ret
fiaddl
inc
fldcw
mov
pushf
cld
mov
cmp
add
mov
dec
add
dec
xor
cmp
pushl
jmp
cmp
ja
sub
push
sub
add
pop
mov
and
enter
test
rorb
xchg
mov
push
xchg
js
inc
sbb
clc
push
test
out
movsb
cmp
stos
ds
cld
inc
cmp
sbb
and
addb
clc
ds
nop
jns
inc
test
cmpsl
stc
mov
lcall
pop
mov
adc
mov
in
jp
adc
push
mov
add
sbb
ret
mov
fldt
push
push
mov
push
enter
pop
cmp
cs
push
and
cmpl
mov
mov
push
adc
imul
inc
add
sub
in
movzwl
mov
rcr
pop
jmp
in
sub
adcl
cmp
sbb
fwait
pusha
pop
mov
sbb
and
addr16
and
aas
dec
inc
cmp
cmovb
sarb
stc
sub
mov
xchg
shlb
ss
push
or
shr
push
stos
cmp
pop
adc
adc
inc
jmp
sub
adc
pusha
jae
js
sbb
rcrl
or
scas
jp
js
fmull
out
movb
adc
ret
ds
push
orl
mov
inc
es
loope
sti
add
cmp
lret
shll
cmp
cs
add
cmp
pusha
sbb
sbb
mov
pop
or
loope
or
pop
clc
sbb
sbb
movsb
inc
loope
ret
pop
or
sarb
or
mov
adc
ljmp
or
xchg
push
mov
jmp
xchg
test
or
adcb
inc
stos
mov
push
inc
idivl
mov
fstps
jo
rol
paddsw
stos
push
jne
movsbl
negl
mov
pop
lahf
cmp
jb
jbe
push
cmp
imul
push
push
mov
mov
hlt
sub
jae
push
stos
ljmp
popa
cmp
and
xor
gs
push
push
adc
subl
mov
sub
pusha
test
lahf
bound
add
add
jo
sbb
loopne
ficoms
jbe
je
cmp
je
aad
mov
call
or
pop
addb
lahf
xorb
dec
xor
mov
xor
subl
dec
sbb
mov
cli
cltd
sub
imul
mov
hlt
add
insb
mov
inc
pop
xor
xchg
ja
hlt
push
fs
ja
push
and
mov
inc
add
imul
or
cmp
cmp
add
push
cmp
cmp
or
or
jnp
fmull
or
jbe
jmp
or
addr16
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
and
pop
dec
fcmovu
fcompl
jmp
and
or
inc
mov
and
pop
hlt
inc
setp
rorl
ret
sbb
pop
movsb
mov
jmp
iret
sub
push
jl
fistpl
and
repz
xor
inc
dec
repz
repz
pop
pop
bound
repz
insb
jno
jnp
test
repz
xchg
cltd
sahf
repz
repz
iret
repz
mov
aad
scas
xor
pop
fadds
add
and
sti
aas
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
sub
lock
push
into
sub
mov
and
jecxz
inc
les
jb
fstp
inc
sub
mov
mov
inc
adc
fnstcw
jl
enter
out
mov
add
jo
jo
out
xor
xor
das
mov
push
inc
add
push
or
pusha
ret
fwait
xchg
xor
test
fists
cmp
jb
inc
lea
adc
cmp
out
mov
mov
call
dec
cltd
sub
xorl
add
movsl
shlb
mov
ret
adc
movsl
aam
shl
or
js
lods
cmp
cltd
and
xchg
orb
shll
push
mov
insb
aaa
mov
sbb
inc
inc
dec
xor
add
push
and
pop
loope
mov
flds
mov
pop
int3
xchg
dec
loopne
push
fcompl
mov
sahf
xchg
mov
je
dec
shlb
cmp
jae
sbb
ljmp
add
enter
and
pop
add
in
mov
inc
mov
lods
pop
add
or
loopne
cmp
xchg
jg
pusha
aad
test
lea
sub
arpl
dec
adc
sbb
pop
mov
ret
movl
mov
mov
mov
add
dec
cmp
jbe
push
cmp
mov
add
popa
inc
fmull
int
adc
fwait
add
xchg
rorb
rorl
push
xchg
pop
push
xchg
insl
mov
bound
or
pop
mov
ja
lea
imul
cmp
ja
insl
jle
or
cmp
lcall
cmpsl
xor
fcomip
das
inc
or
or
pop
jmp
jb
push
add
jmp
lods
add
adc
cs
xchg
add
paddsb
and
mov
push
and
test
sti
add
popa
mov
sbb
clc
jmp
pop
stos
xchg
xchg
ret
mov
movsb
lea
subl
je
adc
pop
lock
mov
jo
jns
nop
lret
sbb
cs
or
aad
imul
add
add
lcall
aad
mov
add
lret
out
fists
inc
cwtl
mov
mov
imul
cmp
sbb
cs
pop
cltd
cmpl
pop
add
fcoml
push
xchg
mov
dec
or
ljmp
add
add
and
adc
push
sub
lods
xchg
xchg
arpl
and
mov
xor
fbstp
je
push
or
adc
push
fildl
jl,pn
rcrb
add
jbe
sub
push
add
fsubr
ss
or
mov
gs
mov
ja
cld
jo
cli
es
lea
cmp
xchg
lock
or
jne
or
js
cs
cmp
test
ss
aad
or
dec
or
xor
cmpb
xchg
jl
lahf
dec
mov
cmp
push
js
or
jae
in
imul
movsl
test
dec
daa
jmp
xchg
dec
xor
cmp
jae
movzbl
mov
push
add
mov
or
and
les
js
arpl
sbb
push
aam
fs
push
clts
pop
push
inc
in
aam
bound
ss
ret
popf
leave
jp
jecxz
jp
add
push
inc
and
xor
cmpsl
add
and
jp
mov
aas
cmpsl
call
int3
and
jmp
jbe
and
add
ljmp
fisttpl
mov
cmp
or
addl
push
pop
push
imul
or
add
push
fadds
test
push
mov
aaa
movsb
or
add
pop
and
jne
sub
test
push
jp
sub
adc
push
enter
int3
cld
pop
push
sub
jmp
in
sub
mov
add
adc
add
adc
or
cmp
sub
in
cmp
sarl
int3
lret
dec
sbb
cwtl
ret
roll
and
movsb
or
out
mov
arpl
mov
sub
adc
loop
rolb
cmpsb
outsb
sbb
std
xor
scas
mov
sti
lret
mov
jg
add
icebp
mov
pop
sbb
mov
push
sbb
rorl
and
roll
lds
in
add
clc
pop
sbb
add
inc
mov
push
insb
or
xor
push
add
clc
sbb
mov
jmp
adcl
filds
pop
in
add
push
repz
pop
pop
arpl
add
insl
push
dec
sbb
js
push
mov
std
je
jmp
push
bound
test
dec
cmp
clc
push
enter
pusha
cmp
fcmovu
push
add
pop
fsts
sbb
pop
or
ficomps
mov
sbb
fucomi
sub
dec
testl
xchg
mov
insb
sub
sub
or
add
pop
inc
push
push
into
adc
outsl
adc
push
ret
jge
xchg
fneni(8087
into
aaa
sbb
dec
dec
push
pop
clc
imul
lret
pop
loopne
jo
imul
lock
ss
sub
mov
mov
movl
int3
push
sbb
inc
addb
xor
adc
mov
shrb
xchg
lods
ljmp
mov
ficoms
ret
mov
fmull
out
das
dec
add
jnp
cmpsb
add
or
add
inc
in
pop
dec
push
nop
pop
add
cmp
cltd
fwait
ret
add
mov
mov
imul
es
or
ss
cmpsl
fstpl
pusha
push
mov
mov
mov
test
cwtl
nop
jmp
inc
cmp
in
mov
sub
loopne
ss
arpl
test
xorb
lods
mov
adc
cmp
xchg
lods
pop
icebp
mov
insb
xor
or
jecxz
inc
push
lea
dec
imul
jge
sub
cmp
sbb
inc
pop
inc
inc
aad
ret
jmp
adc
and
leave
pop
stc
push
or
adc
test
repnz
testb
xor
mov
or
dec
and
add
vhsubps
sbb
xchg
push
sub
cmpl
fwait
add
and
cmp
cmpl
cmpsl
cmp
adc
loop
js
jb
ffree
add
mov
pusha
jge
pop
outsl
push
cld
xor
scas
bound
push
js
dec
clc
jo
sbb
push
mov
and
cmp
hlt
cmp
inc
call
jmp
pop
in
je
lea
sbb
lods
loopne
call
dec
pop
mov
push
fdivs
mov
jg
lock
mov
inc
mov
jp
ljmp
dec
sub
pusha
ret
hlt
in
adc
sarb
sub
jle
arpl
negl
sbb
and
push
out
and
sub
add
push
rclb
add
js
pop
push
cld
pop
jnp
sub
xchg
lret
rcrb
loopne
push
inc
mov
mov
mov
ret
dec
das
cmpb
mov
or
cmp
inc
dec
inc
ret
xor
ds
xchg
das
pop
and
adcl
and
adc
ds
lds
mov
xor
add
sbb
and
mov
rcll
clc
pop
push
pop
ret
and
je
xor
loopne
jl
enter
mov
scas
pop
gs
mov
je
sti
mov
and
push
push
mov
xchg
and
mov
pop
xor
add
add
cmp
xchg
jbe
adc
mov
dec
repnz
mov
push
addb
or
cmp
add
out
sub
sub
and
pop
xor
jg
mov
xor
inc
hlt
mov
push
mov
and
popa
and
inc
inc
jb
pop
sub
pusha
adc
and
mov
inc
push
nop
mov
lods
nop
dec
and
inc
and
inc
enter
or
push
hlt
pop
dec
sbb
mov
push
and
and
andl
ret
sbb
int
mov
push
push
dec
adc
cmp
fistpl
add
pop
fcmovne
leave
add
or
push
mov
xchg
daa
loopne
sub
push
push
test
mov
movsl
gs
dec
mov
test
shlb
or
xchg
adc
add
mov
xchg
fisttps
jbe
jb
jp
pop
ljmp
push
dec
push
rclb
clc
mov
xchg
push
repnz
lods
push
fildl
daa
popa
adc
adc
mov
aas
or
inc
insb
cld
mov
xor
mov
int
cmp
jne
and
js
mov
les
mov
dec
cmp
sar
inc
sbb
xor
jmp
jo
push
push
outsb
adc
aaa
inc
mov
fcoml
sub
cmpsb
addr16
lock
mov
xchg
fimull
sbb
mov
je
in
cmpb
rorl
jno
gs
call
push
pop
div
push
popa
outsl
jmp
fstpl
lahf
loopne
aaa
fisubl
arpl
push
sbb
test
movsl
push
dec
fidivs
into
inc
addb
inc
loope
adc
dec
sbb
inc
arpl
insl
enter
pop
mov
lds
dec
inc
sbb
adc
and
bound
lea
ja
mov
mov
je
or
or
in
or
xor
or
repnz
push
cmp
inc
pusha
xchg
jne
jl
mov
xor
sbb
mov
les
std
mov
adc
lea
daa
xchg
hlt
scas
imul
je
in
nop
cmc
outsl
mov
jge
mov
mov
inc
or
pop
lea
xor
cltd
shll
or
pop
loope
ds
loopne
daa
push
cli
lret
lret
notb
clc
pop
xor
clc
cld
divl
movl
repz
add
add
xchg
lret
cmpsl
push
add
add
and
pop
xchg
or
add
dec
je
fbstp
jne
mov
and
dec
or
mov
shr
sbb
lock
or
lret
ljmp
xor
shrb
sbb
pusha
dec
loope
or
loopne
sub
adc
test
fildl
jnp
je
push
add
add
loop
adc
mov
inc
cld
add
lret
sub
movsb
orb
push
add
jne
sbb
idivb
jne
adc
rolb
add
xor
add
mov
aaa
and
subb
out
in
inc
jmp
sbb
lock
cltd
idiv
inc
inc
imul
hlt
lock
rcrb
jb
insl
inc
lock
fs
pop
pop
loop
xchg
fdivs
push
or
jo
pop
sbb
aas
cmp
mov
stos
loopne
cmp
or
rcrl
int
adc
push
push
lock
mov
mov
je
dec
fistpl
sbb
jne
les
in
ret
jmp
daa
pop
fimuls
xchg
mov
push
aad
pushf
pusha
aas
int3
xor
repnz
add
addr16
jae
loop
dec
fidivs
sbb
add
push
ds
jne
and
stc
stos
decb
dec
push
adc
cmp
je
cmp
pop
cmp
je
cmp
jne
mov
into
mov
sub
jo
pop
and
jnp
xlat
fcoml
iret
gs
inc
xchg
inc
sub
in
add
and
jne
pop
dec
add
mov
mov
jne
mov
mov
cmp
and
pushl
cmp
pusha
mov
xor
dec
lds
push
into
sub
jmp
jle
jl
or
jg
jl
imul
jmp
and
push
jmp
scas
mov
mov
jg
aaa
jle
add
shll
aaa
sti
out
dec
mov
sub
mov
mov
rcrl
jns
and
mov
sbb
outsl
adc
test
or
cs
and
inc
andl
pop
jle
clc
leave
out
jp
lcall
sbb
inc
jl
pop
call
stos
ljmp
sub
pushl
testl
and
cmp
fldenv
fistpll
mov
jg
aas
sarb
push
add
dec
mov
inc
mov
roll
int3
add
cmp
push
orb
sub
add
lcall
xchg
mov
and
jg
pop
cmp
push
xor
fsubs
cmp
cmpb
mov
pop
add
inc
idivb
clc
push
mov
inc
push
out
jmp
xor
lea
sahf
xor
loopne
adc
dec
adc
mov
jp
xchg
jo
cmp
mov
adc
sub
das
int3
dec
fidivrl
push
cmp
dec
addb
xchg
and
push
sar
test
cmp
je
pop
jne
dec
adc
repz
sti
add
inc
dec
dec
cmp
mov
fsubl
nop
sbb
sbb
in
cli
hlt
add
jne
mov
mov
lret
ret
jmp
pop
push
sub
mov
gs
mov
shr
pop
adc
in
push
mov
je
and
sahf
sbb
rclb
jp
ret
adc
add
xchg
pop
add
popa
sti
imul
lcall
clc
cmpl
add
or
imul
mov
sbb
adc
pop
xor
inc
testl
push
lock
test
movsl
outsl
sub
jge
jne
jecxz
shrl
adcb
push
lock
js
sbb
pop
push
add
push
int
or
cmpsb
adc
fs
movsl
xor
fwait
sahf
add
cmp
test
mov
jmp
loop
pushf
cs
xchg
pop
test
dec
pop
push
cmpsl
or
lods
jne
push
hlt
test
or
lods
test
addb
jmp
aaa
sbb
fwait
inc
rolb
mov
add
or
pop
mov
sbb
mov
inc
sub
hlt
adc
imul
dec
insb
jle
gs
sub
jl
jmp
cmp
or
xorb
ljmp
inc
jne
push
sbb
aas
mov
movb
push
aad
fidivl
xor
sti
orl
push
cmp
jo
ret
aaa
add
fs
inc
push
push
mov
sbb
les
mov
subl
xchg
sbb
inc
js
xlat
rcl
test
cmp
sahf
xchg
and
pop
in
sbb
cmp
jnp
or
adc
push
repnz
xchg
ds
lock
mov
jmp
cwtl
sub
leave
enter
or
push
movb
jbe
pusha
mov
sbb
push
inc
pop
add
cmp
add
cmpb
jne
jne
out
lods
mov
mov
inc
les
add
add
sbb
fcomps
inc
mov
add
ret
popf
fists
adc
dec
aas
movsb
adc
mov
adc
mov
mov
sar
inc
inc
or
mov
cs
xchg
test
sahf
mov
inc
add
adc
nop
push
fstpt
or
adc
inc
lock
sahf
jb
adc
into
leave
sbb
pop
inc
pop
cmp
sbb
add
push
pushf
addl
pop
push
lcall
sahf
add
rcr
xchg
xchg
or
jnp
and
test
mov
jnp
mov
dec
dec
push
inc
fcoms
int3
fsubr
jne
ret
sub
mov
or
dec
ret
mov
or
pop
cld
pusha
xor
ret
imul
je
out
push
inc
push
inc
lods
push
push
aaa
addl
into
jnp
cmpl
fdivr
add
subl
push
lea
stos
lock
push
js
xor
or
add
pop
lock
ret
arpl
adc
and
xlat
popa
sbb
pop
orl
lret
push
jo
push
xorl
push
jl
xor
jmp
cmp
rclb
cmp
clc
rorb
xchg
shll
mov
inc
inc
xchg
loop
scas
pop
or
push
cs
push
addr16
inc
mov
jmp
sbb
jo
or
mov
sbb
inc
fdivrs
mov
jmp
xchg
sbb
aam
test
leave
aad
dec
pop
movsl
lret
jo
mov
sahf
aas
sub
lods
bound
pop
jae
add
xchg
and
xor
push
lcall
inc
xor
cmp
jb
xor
test
jmp
push
dec
jmp
dec
arpl
scas
test
pop
lods
in
shll
sbb
adc
xor
push
or
fsubrl
push
cmp
inc
hlt
addr16
pop
mov
xchg
xchg
imul
stos
or
pop
push
mov
push
jle
pusha
mov
cwtl
pop
dec
jne
cli
mov
leave
inc
je
cmp
not
mov
and
cmp
call
dec
or
cmpb
add
inc
insb
adc
xlat
lods
dec
pop
inc
push
lahf
push
inc
pop
sbbl
and
cmp
cmp
test
adc
mov
or
icebp
imul
or
add
push
add
dec
and
and
lods
fbstp
test
cs
mov
or
sti
fldcw
mov
cmp
push
mov
fldenv
mov
mov
pop
add
movsb
nop
dec
je
add
push
adc
movl
xchg
add
popf
inc
inc
negl
jge
ja
daa
jne
xor
negl
fwait
jmp
cmp
jne
sbb
iret
mov
jb
and
mov
mov
jge
inc
popa
adc
cs
hlt
mov
in
fcmovu
mov
inc
aad
xor
mov
pop
mov
jp
inc
inc
jne
xor
test
lods
xchg
sbb
sbb
fdiv
aam
add
ds
dec
jecxz
pop
fnsave
pop
ret
or
inc
subl
outsb
push
in
stos
push
and
and
mov
xor
in
sub
cmpsb
std
xlat
add
adcl
aaa
mov
jecxz
js
xchg
mov
mov
dec
in
jo
or
movsb
sub
cmp
or
mov
shrl
jo
pushf
xor
and
xchg
sbbl
xchg
dec
les
sbb
mov
xchg
je
push
das
or
lahf
pop
test
push
xchg
daa
jo
add
jge
subb
pop
push
push
dec
mov
and
jns
fbstp
xor
push
sbb
in
jae
pop
mov
add
push
pop
loope
add
arpl
pop
shlb
out
fs
loope
adc
test
sbb
xor
into
sbb
jmp
mov
xor
adc
insb
lods
mov
movsb
in
inc
imul
mov
cmpb
imul
es
adc
cwtl
in
mov
push
in
movsl
rcl
sbbb
pop
lahf
cmpsb
cmpsl
jb
popf
add
out
test
sbb
or
fsubr
mov
or
push
or
icebp
rcll
add
and
sub
or
xor
mov
repnz
xchg
xchg
and
xchg
push
adc
sub
sbb
call
lods
shrl
jae
mov
add
loopne
retw
xchg
push
lret
xor
jne
dec
sarl
test
fdivrl
aam
loopne
in
pusha
or
add
aam
push
jg
mov
sarb
es
and
jp
add
jge
cmp
fadds
in
dec
mov
or
cmpsl
loopne
rorl
mov
jnp
push
mov
push
scas
and
pop
imul
dec
jnp
cld
push
xor
mov
push
or
xor
mov
mov
sti
adc
jno,pn
jle
mov
or
dec
xor
je
clc
and
jg
push
sub
mov
das
add
stos
inc
loopne
jp
sub
rclb
dec
jne
sub
andl
mov
adc
cmp
and
mov
xchg
xor
lret
jo
inc
imul
sub
cmp
aas
test
ret
mov
mov
jno
jcxz
mov
cmp
rolb
imul
and
add
sbb
pushf
mov
rcrb
mov
jae
das
lretw
sbb
fldt
adc
mov
inc
sub
aas
mov
jmp
shrb
mov
lea
inc
scas
adc
or
rcl
xchg
push
lods
push
xor
leave
daa
and
or
pop
insb
sbb
dec
mov
sbb
push
dec
lock
loopne
mov
shlb
cmp
inc
or
rcr
and
sub
add
or
or
mov
ds
mov
sbb
int
pop
sbb
arpl
adc
mov
xchg
daa
jo
adc
mov
addr16
or
les
or
or
dec
sub
into
js,pt
push
cli
cmpsb
orb
push
pop
pop
mov
and
mov
sbb
addr16
mov
sbb
ret
cmp
mov
enter
push
in
adc
data16
sub
sub
mov
aam
pusha
inc
inc
xchg
mov
mov
cmpl
shr
call
pop
push
jmp
jmp
mov
js
sbb
add
add
push
adc
mov
bound
xchg
jecxz
int
xchg
fmuls
jmp
lea
in
dec
daa
push
mov
mov
dec
pop
std
push
aas
push
push
or
adc
sbb
aad
lret
jmp
or
dec
adc
pop
add
movsb
adc
xor
sbb
dec
movsl
inc
push
and
out
icebp
and
cmp
adc
mov
mov
jle
rolb
pop
push
pop
js
push
and
adc
lret
fcomps
cmp
sbb
jns
inc
push
push
push
xor
mov
or
pop
jmp
mov
or
inc
andb
push
add
adc
pop
cmc
pop
or
subb
je
pop
dec
cmp
cmp
pop
mov
jmp
adcl
adc
fnstenv
fwait
cmpl
mov
add
pusha
and
jne
rorb
push
cmp
jmp
data16
mov
mov
in
mov
jb
fs
adc
insb
lods
jmp
pop
and
pop
xorb
mov
jg
mov
loopne
inc
out
shrl
xchg
sbb
pop
mov
sbb
inc
ret
sti
loopne
outsl
xor
aas
add
sbb
xchg
lods
push
decl
sbb
lret
mov
rcrl
and
enter
inc
hlt
adc
xchg
lock
or
add
adc
daa
jmp
aam
jne
xor
push
pushl
loopne
sbb
adc
xor
popa
add
add
sbb
pop
js
dec
push
push
mov
int3
or
sbb
add
jg
inc
loopne
cmp
insl
loopne
pop
fsubl
fadd
pop
lret
xor
cwtl
xchg
mov
push
push
lcall
sbb
jo
call
insl
mov
fs
mov
pop
or
inc
in
xchg
cltd
adc
cmp
add
daa
add
xorb
fwait
popa
jno
add
cmp
sbb
dec
test
test
dec
js
jbe
cmp
dec
sbb
inc
push
add
loopne
je
push
add
aas
xor
cmp
std
loopne
push
add
xchg
fsubrs
mov
mov
mov
ret
or
cmp
nop
add
or
cmp
addb
fcmovbe
jns
aas
pop
cmp
push
jmp
es
in
mov
sub
call
dec
and
mov
adc
or
aad
mov
gs
lcall
pop
aam
push
fcmovnbe
clc
imull
movsb
loope
jge
cmp
mov
imul
jp
or
imul
lods
aad
ss
sbb
sbb
mov
fadds
loopne
xorl
adc
dec
iret
xchg
aam
dec
add
jae
aad
ret
mov
rorb
test
xor
jbe,pt
clc
xorl
jb
out
popf
stos
cld
mov
in
cltd
test
mov
sbb
xchg
or
scas
push
push
ds
pop
xor
jg
xor
sbb
lcall
mov
icebp
ret
adc
mov
inc
cmpsl
push
jg
lods
outsb
test
push
out
add
mov
or
mov
pop
imul
popa
dec
leave
les
xchg
nop/reserved
btc
les
cmp
mov
popf
sub
jp
rcrb
add
inc
sbb
cmp
mov
je
sub
jbe
push
rcrl
ret
jmp
das
lds
je
push
lret
movl
pushf
cld
test
inc
mull
or
mov
xchg
cltd
test
inc
aas
insl
pop
test
mov
cmpsb
fs
mov
adc
ret
jecxz
test
adc
mov
stc
xor
pop
adcb
test
daa
jmp
push
ss
rorb
sar
subl
or
fstpt
push
mov
test
jne
mov
mov
mov
sub
mov
aas
lods
addr16
sub
jmp
testb
pop
subl
enter
pop
mov
outsb
fidivrl
add
xchg
sub
dec
mov
je
es
pop
mov
adcl
or
pusha
jo
mov
or
cmp
mov
loopne
inc
int3
pop
sub
and
fwait
adc
cmp
filds
push
adc
jb
or
test
pop
mov
movsl
shlb
push
shlb
subl
les
es
xchg
mov
pop
daa
add
sbb
dec
add
shlb
rcr
bound
add
pop
or
pop
xor
xor
xor
arpl
shll
imul
and
loop
pop
enter
js
rcl
push
or
dec
add
add
rcl
mov
punpckhbw
cmpsb
aad
jo
push
dec
sub
fld
add
shr
push
push
js
cmc
pusha
cld
adc
ja
gs
frstor
mov
test
fsubr
sarb
sbb
mov
aaa
repnz
pusha
pusha
or
sub
pop
mov
jne
jmp
push
sub
cs
negl
je
dec
je
dec
jne
mov
icebp
cld
xchg
xor
sahf
xchg
dec
push
pop
xlat
loop
hlt
dec
pop
lods
aam
jns
subb
adc
adcl
cmp
sbb
sbb
lock
out
cmp
dec
pusha
push
add
and
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
push
or
dec
call
ljmp
sar
ret
movzbl
push
dec
jmp
adc
iret
iret
jmp
std
std
jmp
cld
addr16
std
cld
jmp
fistl
adc
in
adc
loopne
cmp
fiaddl
inc
push
rolb
inc
in
jl
rorl
jg
or
enter
test
rorl
or
nop
lock
mov
aam
push
cmp
mov
mov
or
shll
testl
movsl
jae
inc
mov
outsl
push
add
push
pop
inc
push
lock
cmpsb
test
add
and
pop
add
adc
in
push
xor
pop
std
dec
adc
and
add
or
mov
enter
pop
pop
pop
dec
push
enter
adc
or
and
arpl
lds
dec
movsb
sbb
movsb
adc
test
jmp
or
jb
push
or
jle
in
repnz
inc
rclb
or
inc
outsl
inc
lahf
mov
xlat
enter
or
and
iret
je
mov
dec
les
stos
or
jg
add
mov
movsb
add
in
inc
jnp
inc
pop
divb
mov
insl
sbb
enter
rcr
jnp
dec
hlt
mov
pop
mov
fwait
arpl
ja
mov
out
hlt
das
and
inc
push
xor
pop
div
mov
cmp
test
subl
das
sbb
das
mov
ss
xchg
in
cmp
test
jae,pn
andb
and
out
test
pop
pop
sub
jg
sbb
lock
outsl
inc
mov
jae
cmp
addb
lods
into
gs
or
sub
mov
dec
adc
dec
aad
pop
jmp
test
jbe
inc
sbb
les
push
insb
mov
rcll
test
cmp
fisttpll
hlt
push
rclb
cld
adc
add
adc
push
dec
jge
pop
or
jnp
idivb
push
ret
or
sub
int
js
cmp
push
xor
add
pop
pusha
les
fdivs
fbld
call
jge
not
and
sub
xchg
adc
shrb
dec
or
add
add
movsb
and
add
add
push
push
pusha
sub
movsl
imul
pushf
mov
ja
inc
xchg
sub
fiaddl
jmp
das
mov
cs
stc
and
mov
inc
je
mov
inc
movb
xor
fdivs
shl
in
cli
or
add
jmp
or
mov
out
push
xchg
inc
inc
push
cmpsb
loope
dec
pop
insb
sahf
pop
push
scas
mov
pop
inc
adc
fistpll
mov
inc
cmp
jb
mov
jae
ret
je
xlat
sub
int3
add
lahf
hlt
ret
lea
jl
mov
fadd
loopne
push
adc
imul
stos
je
mov
add
sahf
adc
hlt
push
sub
or
test
retw
shl
push
adc
jle
mov
xor
add
outsb
jg
xchg
stos
pop
xor
xor
xor
jo
and
inc
add
je
add
out
jne
add
inc
cld
jg
push
and
ss
out
cmp
je
test
jns
fwait
shlb
and
or
out
aam
xchg
pop
addr16
outsb
jecxz
gs
std
cld
xor
jo
pop
enter
mov
adc
shl
les
add
lock
stos
mov
xorb
clc
stc
or
or
jl
and
lret
ror
mov
incb
cmpl
pop
sbb
inc
add
out
cld
rolb
xor
dec
ljmp
pop
inc
jmp
cmp
jne
je
push
loop
add
add
sub
inc
sub
cld
imul
inc
adc
cmp
enter
dec
or
sti
out
xorl
pop
cmp
je
cmp
and
jl
mov
jne
pop
rorb
cwtl
in
int
mov
fimull
mov
push
js
adc
dec
ss
cmpsb
dec
mov
and
je
icebp
xor
add
sbb
adc
pop
ss
dec
sub
adc
sub
and
mov
jae
outsb
or
pop
ret
mov
jne
push
adc
push
push
adc
add
and
dec
mov
xor
sbb
test
mov
push
lods
scas
push
adc
shl
cld
adc
mov
sbb
add
andl
cmpsb
xor
or
js
negb
mov
mov
fisubrs
jnp
and
mov
add
sbbb
stos
movsl
cmp
in
pop
cld
sti
mov
inc
fcompl
inc
add
lds
test
loopne
xor
ret
cmp
sub
insb
dec
jmp
push
pop
xorl
sub
jl
push
sub
ljmp
ja
loope
lcall
push
cmp
ss
push
mov
adc
cltd
inc
adc
scas
xor
nop
pop
subb
sbb
jbe
shll
cmp
jne
cli
ret
ret
push
cmp
push
mov
cwtl
leave
or
mov
lcall
ret
mov
sub
adc
xchg
push
jmp
inc
or
or
add
xor
std
xchg
push
dec
push
hlt
inc
mov
test
leave
push
sbb
cmpsb
and
push
jmp
inc
adc
or
fsub
mov
jmp
jl
bound
jb
pop
mov
push
adc
or
stos
mov
aaa
push
call
pop
lods
icebp
in
jns
scas
mov
icebp
mov
mul
rcrl
icebp
jecxz
lret
push
iret
adc
iret
mov
cmpsb
pop
lea
mov
lret
lods
insl
or
pop
sbb
cmpsb
pop
popf
push
fiadds
rorb
mov
push
ret
push
fidivrs
pop
je
or
or
sbb
cmpsb
jns
inc
loop
call
gs
adc
sub
or
imul
add
and
mov
add
es
out
sub
in
popa
int3
out
adc
sbb
sbb
adc
pop
pop
jo
xchg
sub
xchg
or
pop
notl
mov
mov
pop
add
add
aaa
inc
cmp
add
add
ret
hlt
or
pop
stos
pop
fs
mov
inc
dec
notl
mov
mov
sub
jo
aaa
ffree
lcall
sub
jne
dec
sbb
adc
out
adc
sbb
sar
pop
imul
stos
lock
mov
jmp
addr16
lods
adc
add
sbb
bound
jmp
movl
xchg
or
sub
pop
inc
dec
adc
sub
xchg
sbb
adc
repz
mov
scas
add
push
stos
sub
test
lods
mov
addb
xchg
jle
push
inc
inc
lock
mov
push
fucom
clc
repnz
jne
fs
add
cmp
mov
movb
sbb
pop
mov
jnp
hlt
in
mov
push
pusha
les
adc
push
inc
lea
orl
xor
adc
add
fimuls
adc
orb
cmpsl
fldl
adc
add
mov
insb
sbb
sbb
push
mov
test
pop
cmp
push
jne
sbb
mov
jmp
flds
mov
jle
call
xchg
rorb
shrb
repz
add
pusha
add
int3
or
cmp
dec
les
outsb
add
inc
mov
adc
sub
mov
dec
in
push
adc
or
push
rorl
adc
cmp
lea
lods
enter
add
sub
test
enter
ret
es
push
in
pop
pop
outsl
push
lock
pop
scas
and
jnp
test
out
add
idivl
pop
dec
add
insl
xchg
pop
push
mov
jmp
dec
cmc
test
mov
lods
ds
jb
xchg
outsb
mov
add
imul
pop
jo
sbb
insl
sbb
adc
loopne
push
icebp
lods
mov
sahf
mov
in
cmp
in
jne
lcall
add
sbb
jmp
aad
jle
pushw
and
mov
pop
mov
pop
mov
adc
xchg
add
jmp
pop
repnz
loope
pushw
xchg
cmpb
test
add
shlb
hlt
push
popf
insb
enter
dec
inc
repz
iret
push
pop
and
movb
jmp
ss
call
add
call
repnz
mov
inc
xor
inc
cmp
add
pop
fisubrs
push
outsb
pop
add
inc
push
or
sti
mov
gs
rclb
rcll
inc
mov
or
cmc
mov
and
jmp
add
add
inc
adc
pusha
cmp
je
dec
insl
add
jle
mov
les
sub
jne
dec
mov
push
add
pop
mov
inc
or
mov
push
mov
int
mov
rorb
jg
cmp
fsts
aad
and
add
and
mov
sti
mov
mov
lods
pusha
jmp
movq
movaps
push
mov
enter
shlb
jle
add
sub
push
add
ror
test
xorb
jl
and
mov
repz
or
jg
dec
mov
xchg
ret
adc
and
and
in
push
mov
push
and
mov
jbe
out
jne
adc
or
add
adc
mov
andb
xchg
repnz
dec
sti
in
ret
mov
add
pop
or
cmp
addps
int
add
fdivrp
fcmovb
sbb
sbb
mov
add
bound
adc
push
shr
mov
sar
ja
pop
xor
pusha
mov
adcl
jae
xor
push
stos
sbb
mov
add
xor
es
mov
lods
pusha
dec
add
inc
fmuls
pop
adc
pusha
xor
inc
lret
shl
movsb
jne
bound
mov
xchg
inc
sbb
inc
and
sub
addr16
xorl
push
mov
push
push
movb
rorb
stos
and
addr16
jecxz
dec
dec
adc
and
dec
cmp
rcll
or
push
rcrb
adc
adc
add
nop
adc
in
movsb
jnp
je
jp
mov
sbb
js
dec
pop
movl
dec
push
xchg
into
andb
fbstp
bound
adc
nop
jge
fisttpll
pop
mov
add
rorl
pop
pop
and
out
testb
bound
mov
pop
inc
scas
leave
dec
or
test
and
fcomi
push
mov
adc
shl
push
xor
int3
pushl
cmpsb
mov
push
xor
sub
dec
cmpsl
repnz
je
xorb
sbb
mov
dec
pusha
mov
lock
add
aas
ret
cltd
test
adc
pop
pop
jae
pusha
adc
push
les
gs
jns
adc
jnp
inc
andb
aaa
push
sbb
ret
adc
push
inc
cwtl
pop
arpl
and
lods
inc
pusha
sbb
clc
shlb
fimuls
insb
in
adcb
sub
add
rorl
sub
movsl
sbb
jecxz
jmp
cmp
arpl
jle
jl
ficoms
fcoms
pop
add
xchg
sub
sub
rorb
cmp
jne
inc
cmpb
out
add
sub
and
sbb
add
int3
add
adc
mov
xor
sub
pusha
daa
sbb
push
pop
enter
jge
or
jl
ja
pop
inc
inc
xor
mov
ret
lods
sub
mov
gs
ds
js
je
adc
in
jmp
mov
shl
inc
xor
adc
loopne
rol
loope
or
push
push
or
adc
xor
js
inc
xlat
inc
aaa
push
lds
jg
push
loope
andb
je
mov
leave
jp
pop
int
in
cmp
mov
or
add
sub
jmp
adc
xor
sub
push
cmpb
add
and
pop
adc
pop
xchg
lea
js
sbb
pop
fisttps
stos
xchg
jle
mov
adc
fstpt
dec
push
dec
shl
clc
jo
sub
aaa
pop
shl
cli
fstpt
adc
add
cmp
stos
dec
fcomp
push
lret
sub
cmp
mov
aam
adc
or
add
ret
cmpl
cmpsl
ret
cmp
andb
psrad
mov
fnstcw
pop
add
push
or
mov
adc
jo
cmp
add
pop
add
pop
add
loop
andb
sti
lret
mov
xchg
pop
ljmp
mov
cmpl
mov
call
in
ret
mov
repnz
lock
arpl
pop
and
popa
cmp
scas
addr16
xor
insb
insb
rcrb
ja
pop
std
jg
outsb
lock
mov
enter
dec
or
loope
or
push
xchg
inc
pop
mov
sub
push
inc
dec
pop
out
ss
enter
xor
orl
push
inc
std
mov
jne
pop
push
and
push
dec
jmp
fucomip
mov
rorb
and
cmp
in
inc
pushf
mov
push
adc
mov
xchg
out
imul
sub
adcb
jnp
aam
int3
jmp
xlat
jmp
inc
and
lea
xchg
mov
popf
push
stos
mov
inc
sub
roll
stos
inc
stos
adc
add
or
inc
mov
or
test
dec
push
dec
orb
inc
sbb
testb
inc
repz
rol
dec
inc
data16
aam
rcrb
lods
cmp
push
dec
or
int3
dec
jo
shlb
dec
fucomi
xor
xchg
inc
shl
imul
aam
adc
mov
test
cwtl
or
shrb
in
insl
xchg
sub
in
inc
cmp
in
adc
test
in
je
inc
cltd
negb
sbb
or
fildll
mov
addl
inc
decl
cmp
or
mov
es
mov
jbe
mov
idiv
ljmp
mov
in
inc
add
adc
ja
pop
fsubrp
adc
add
inc
xor
add
sub
xchg
adc
or
cltd
cmp
lock
adc
aam
push
mov
dec
mov
adc
add
pop
push
ljmp
sub
add
or
mov
hlt
xchg
ficomps
mov
pop
icebp
movsb
mov
out
mov
adc
or
repnz
repz
add
or
mov
inc
adc
lret
fidivs
xchg
push
mov
inc
add
insb
rolb
or
push
imul
fcoms
and
loope
in
mov
push
in
mov
push
mov
jbe
and
lods
add
addl
pop
inc
fiaddl
cmp
outsb
loopne
xor
outsb
dec
pusha
pop
pop
xor
add
adc
sbb
mov
faddl
idiv
ret
test
rol
dec
rol
add
sbb
adc
push
aam
popf
inc
je
orb
jbe
inc
sbb
popa
jo
cmp
in
or
std
cmpsb
mov
xchg
movsl
jmp
dec
faddl
or
outsl
inc
mov
push
or
insl
lret
mov
jnp
inc
add
sub
dec
push
fsubrs
push
aam
in
fildl
push
test
jg
fsubrl
lea
push
test
fisubl
inc
or
cmp
add
adc
scas
pop
add
xchg
push
test
js
push
addr16
jne
mov
movsl
nop
sub
add
dec
int3
jl
or
outsl
adc
fisubl
aam
repnz
xor
je
cmp
and
jnp
dec
xchg
cmovp
and
or
jg
mov
mov
or
sub
add
mov
or
sub
jbe
leave
add
mov
add
jmp
rorb
add
clc
push
pop
mov
sub
push
adc
data16
in
dec
pop
ds
scas
shr
loopne
fcoml
fdivs
pusha
cmp
fs
sub
insl
enter
adc
add
not
sahf
test
insb
xor
jae
mov
shll
mov
and
jne
ss
pushl
add
add
out
outsl
pop
mov
xor
mov
add
add
sub
shrb
insb
movsb
outsb
sbb
imul
ret
mov
sbb
fst
push
mov
test
adc
push
jns
sbb
dec
and
aad
shr
sti
or
push
or
pop
jle
stos
jnp
jae
aaa
push
insb
ss
out
xchg
in
cli
or
lea
xchg
xchg
and
jae
pop
jle
je
sbb
dec
or
add
add
mov
and
lret
imul
pushl
fisttpll
xchg
nop
add
popa
adc
popl
outsb
dec
jmp
push
pop
xchg
in
xchg
or
test
cmp
dec
jmp
push
sbb
add
push
sbb
add
cmp
lret
lea
add
sbb
push
inc
xchg
xorb
movsl
stos
sbb
and
jle
cmp
cmp
cld
cwtl
fcmovnb
push
outsl
xchg
adc
mov
inc
lods
in
dec
stc
loopne
jmp
mov
ljmp
cmp
fsts
stc
xchg
clc
dec
cmpsl
jb
push
mov
stc
mov
icebp
mov
mov
fs
xchg
cmpsb
bound
jmp
loopne
inc
sub
jo
sub
pop
adc
movsl
bound
shlb
push
add
in
add
cmp
xchg
les
mov
add
and
jecxz
jle
testb
pop
inc
mov
adc
push
out
lret
mov
call
xlat
je
fnstcw
adc
outsl
or
insl
stos
xor
push
push
dec
pop
xor
into
in
sets
push
cmp
push
mov
int
push
mov
jno
and
jg
add
add
push
divb
mov
sub
js
mov
lret
inc
dec
loope
loopne
roll
adc
jne
pushf
out
inc
push
jo
xchg
or
jmp
mov
jge
call
dec
and
pushl
lea
lds
push
aaa
push
push
jmp
add
or
shlb
test
cwtl
repnz
cwtl
loopne
enter
mov
push
and
jp
pop
and
movsl
mov
and
cpuid
or
xchg
mov
dec
pop
cltd
cmp
or
jge
cli
jge
ret
ljmp
shll
aam
pop
lret
and
push
mov
mov
sub
leave
insb
cmovo
xor
or
fs
out
dec
or
or
sub
in
call
ret
addr16
das
or
dec
pop
jbe
ret
jle
or
cmc
push
and
or
xchg
cmpsl
test
lret
mov
sbb
stc
and
xor
dec
cld
jmp
add
popf
mov
push
mov
add
and
inc
push
outsb
aaa
add
mov
mov
sub
ja
sbb
fisttpl
jbe
mov
rorl
test
jecxz
inc
movsl
popf
add
push
push
lock
or
cmp
push
push
sub
pop
in
leave
sbb
xchg
jg
fbstp
lret
or
cmp
mov
cli
inc
xlat
repnz
sub
and
inc
aas
mov
sub
test
scas
sar
pop
lea
xchg
loopne
enter
shll
ds
jnp
adc
mov
into
shll
jns
mov
nop
out
or
loopne
orl
inc
ja
into
mov
js
scas
in
push
loope
dec
xchg
sbb
mov
xchg
repnz
push
dec
ds
loope
mov
push
cmpsb
sub
mov
call
mov
int3
add
pusha
aad
das
adc
jo
jb
jb
or
jbe
aad
adc
je
pop
and
add
and
dec
pop
pop
jne
adc
add
out
xchg
test
ljmp
stc
or
rep
jmp
lock
fld
jb
movb
test
fildll
or
ss
push
test
adc
inc
push
push
pop
mov
fs
sub
shr
fcmovb
mov
lods
adc
pop
mov
dec
sbb
pusha
dec
add
xchg
inc
xor
xchg
mov
repz
out
aam
int3
push
les
lods
movsb
mov
mov
call
call
out
sahf
out
hlt
clc
clc
cld
loop
data16
movb
sbb
jmp
out
adc
and
nop
mov
imul
pop
sti
and
popa
xor
and
xchg
pop
jno
lea
jl
cld
pop
and
fsts
cmp
cld
out
mov
lret
fcoml
divl
nop
mov
mov
gs
mov
mov
add
ret
mov
inc
push
mov
sub
push
add
test
mov
push
jb
outsb
mov
or
repz
repz
push
pop
pusha
push
loop
mov
sbb
sbb
repz
repz
adc
or
repz
or
or
lahf
mull
inc
pushf
or
cmpsb
and
add
sub
pop
daa
arpl
fists
push
ljmp
ss
mov
inc
cld
cmp
push
add
or
xchg
std
jge
or
je
mov
lock
mov
testb
jne
pop
icebp
pop
xchg
call
aam
loop
aam
sar
ljmp
out
or
mov
mov
dec
testb
jne
push
sbb
sar
rcrl
bound
ss
pusha
pop
push
mov
and
insb
sbb
out
ficomps
push
imul
dec
lret
pop
sbb
repz
dec
ror
jge
cs
lods
xor
pop
and
lock
or
jmp
idivb
cmp
xchg
movsl
scas
or
jge
fstl
nop
pop
or
shrb
jecxz
adc
xor
ss
and
xor
nop
xchg
jecxz
inc
xchg
mov
fs
sub
or
popa
int3
test
cs
xor
enter
dec
mov
sarl
or
mov
adc
push
or
mov
jne
cltd
cltd
mov
call
test
subb
dec
inc
loopne
sub
in
jge
push
lock
icebp
sbb
cmp
pop
or
sub
xchg
push
lods
rorb
clc
add
movb
jmp
fnsave
cld
std
add
add
push
pop
push
push
push
mov
pusha
stos
mov
pop
and
test
mov
add
bound
cmp
insb
or
adc
roll
movsl
or
lock
loope
dec
cwtl
adc
cs
mov
jle
loope,pn
dec
mov
cmp
popa
rorb
shld
cmpsb
push
cs
scas
scas
cmp
je
dec
xorb
add
je
sub
pop
mov
hlt
or
jmp
sub
rorl
lret
je
rep
or
dec
ljmp
and
mov
movsb
cmc
mov
or
mov
mov
mov
lods
data16
repnz
movsb
and
repz
rolb
lods
in
ss
mov
pop
test
out
mov
add
mov
loopne
stos
es
test
rclb
mov
add
mov
hlt
adc
add
jns
or
dec
imul
in
dec
loop
call
js
int3
and
mov
adc
xor
fsubr
add
cmp
sub
xchg
sti
ret
sbb
dec
pushf
lods
xchg
into
xor
daa
sbb
pop
push
xor
stc
pop
stc
insb
or
loopne
fcoml
pop
popf
aam
sarb
lret
outsl
xchg
clc
or
test
jo
into
lret
movsl
shrb
loope
lods
call
hlt
fildll
aam
aaa
dec
cld
xor
cmp
or
pop
adc
and
je
ss
in
xchg
xor
insl
push
jne
adc
push
scas
cld
mov
and
outsl
inc
cmp
push
add
mov
sbb
mov
add
pushl
cmp
pop
ljmp
push
push
and
es
dec
roll
orl
add
pop
xchg
das
inc
mov
pop
test
aas
lock
dec
or
fwait
test
mov
scas
jecxz
rclb
pop
or
out
add
xor
push
mov
ljmp
add
inc
call
addb
push
enter
or
inc
jge
jle
add
stc
nop
pop
push
adc
dec
or
test
sahf
mov
callw
into
sbb
clc
dec
xchg
pop
dec
cld
sbb
fcompl
or
and
cmp
mov
loope
bound
add
xchg
add
fsubl
or
cmc
and
es
or
inc
fsubl
xchg
add
push
nop
jo
ror
into
fnstsw
insb
rcrb
sbb
or
rol
dec
mov
push
popa
add
and
inc
rcrb
dec
dec
dec
xchg
rorb
dec
push
lods
lock
lock
rorl
in
sub
rorb
bound
js
cld
add
push
jmp
inc
and
shlb
dec
test
or
lcall
cmpl
jne
push
cmp
adc
das
nop
ret
add
mov
fdivs
or
fisubs
hlt
and
pop
cs
lret
popf
mov
insl
test
mov
loopne
test
jne
sub
popf
mov
and
shrl
movsb
push
loop
in
in
rclb
dec
in
or
xchg
loopne
xchg
aad
adc
or
add
cmpl
xchg
sar
lahf
lea
pop
sub
add
pop
ja
stos
movsbl
dec
add
pop
dec
sarl
test
js
push
sar
pop
lods
movsb
lds
es
cli
sbb
shlb
jb
push
call
rcr
jno
push
lret
clc
les
lret
insl
and
je
or
je
or
mov
add
popf
sahf
pushf
pop
or
add
push
fistps
or
enter
sti
mov
jge
addb
jl
mov
mov
shlb
lea
ja
cmpsb
xor
add
fs
pop
sbb
test
stc
sub
add
or
inc
insb
mov
mov
aad
test
cmp
ds
into
scas
popa
lds
sbb
fsubrl
xlat
pop
and
js
add
jb
add
jge
mov
xor
inc
xor
movsl
inc
mov
fs
cmp
mov
imul
mov
pop
adc
adc
cs
add
test
sahf
dec
pop
xchg
int
mov
pop
or
pusha
das
add
dec
cmp
xor
sbb
sbb
cmp
sub
adc
or
add
mov
mov
inc
adcl
push
mov
lock
and
cmp
inc
push
arpl
push
arpl
xchg
clc
aaa
jne
das
mov
loope
inc
repnz
dec
push
sbbl
sti
inc
mov
or
out
xchg
mov
sbb
adc
jb
lea
and
adc
popf
call
add
loope
push
popf
push
insl
cmp
mov
xchg
xorl
pushf
sub
push
shl
dec
mov
repnz
ss
and
lcall
mov
inc
adc
sti
fwait
pop
adc
leave
or
or
pop
add
lahf
and
aaa
adc
xchg
pop
mov
inc
lods
xlat
mov
sbb
pop
dec
mov
dec
jp
mov
orb
push
sbb
mov
je
or
cmp
jns
push
inc
pop
ret
out
pop
mov
push
pop
lcall
add
mov
gs
add
mov
in
je
or
mov
outsb
mov
ss
or
insl
movsb
je
xor
mov
lds
fimuls
stc
test
mov
xchg
or
xorb
adc
ret
dec
nop
insl
sbb
or
jmp
shl
add
push
add
lahf
mov
fidivs
movsb
addr16
mov
jmp
cmp
mov
popa
mov
inc
fcompl
add
or
jmp
cltd
or
adc
in
unpcklps
push
push
shr
push
push
daa
add
insb
push
mov
into
push
push
or
cwtl
xchg
lret
adc
sbb
ret
push
xchg
sub
inc
loope
adc
push
mov
mov
nop
repz
pop
aad
and
jne
popf
push
sbb
movsb
push
inc
scas
data16
and
xor
inc
cltd
push
push
cld
cmpb
jne
xor
inc
stos
dec
lds
add
js
push
push
addl
jae
setl
gs
cld
or
mov
jo
inc
daa
add
cmpb
add
adc
stos
test
scas
push
mov
push
into
xor
push
pop
loop
test
mov
call
sbb
dec
gs
and
nop
inc
cld
jmp
or
sub
sub
cltd
adc
in
xchg
mov
sbb
jae
addl
push
mov
pop
mov
jnp
or
psrlq
sbb
add
les
inc
mov
or
jecxz
sub
and
lea
cs
or
cwtl
inc
test
cltd
push
xor
decl
fwait
enter
xor
mov
repnz
sahf
add
mov
sub
sub
inc
cmp
shlb
or
into
orb
add
movb
inc
jmp
test
push
mov
jmp
dec
xchg
mov
push
andb
adc
out
repnz
sar
ret
int
dec
inc
add
mov
inc
pop
add
sub
xchg
push
sub
fimuls
mov
sub
sub
or
arpl
fbstp
sti
in
jle
les
fcoms
cmp
add
std
xor
pop
rolb
adc
mov
mov
push
fldcw
xchg
xor
add
imul
add
adc
jle
aam
add
rorb
jl
sbb
cltd
push
jge
nop
mov
out
icebp
hlt
gs
add
lcall
daa
sub
nop
rorb
fiadds
fldenv
pop
sub
pusha
push
xchg
js
arpl
rolb
js
popa
movsl
add
sub
nop
les
inc
movsl
daa
xor
icebp
pop
mov
mov
pop
jne
xchg
sbb
movsb
adc
mov
std
mov
dec
andb
sarb
testl
sarl
lods
mov
add
push
mov
std
dec
xchg
push
popf
movsl
ss
aas
nop
mov
movsb
mov
and
adc
loopne
add
aas
mov
add
aas
dec
ja
push
add
xchg
mov
pop
push
dec
sub
or
inc
mov
ds
jmp
mov
aas
sub
jbe
inc
enter
xor
pop
nop
inc
adc
notl
fs
mov
rcrb
jo
inc
add
jnp
ja
call
sub
push
adc
inc
add
shl
sbb
or
push
push
aas
push
cltd
cmpb
push
faddl
cmp
jecxz
sbb
or
aaa
xor
pop
movsl
aad
movlps
push
pop
and
push
jbe
xchg
jge
and
mov
fmul
push
or
pop
ret
adc
loopne
jg
add
es
mov
cld
lods
in
cmp
int3
sub
push
icebp
dec
fcoms
stos
or
lcall
push
dec
jecxz
and
rorb
loop
jo
sbb
push
ds
je
push
setl
pop
inc
cld
adc
and
fcoms
bound
fcoms
cs
into
fdecstp
inc
imul
mov
mov
dec
outsb
or
inc
lea
sub
pusha
add
icebp
into
mov
push
rclb
roll
add
xchg
xchg
jle
add
fsub
pop
jno
add
out
adc
push
mov
adc
sub
and
mov
clc
mov
fwait
stc
pop
push
pop
pop
call
clc
rolb
push
pop
and
aam
sbb
testb
sbb
push
ds
mov
push
in
sbb
pushl
insl
and
mov
call
lahf
xchg
test
jp
add
xchg
fnsave
mov
mov
stos
push
faddl
xorl
jae
jge
gs
jmp
inc
loopne
loopne
cs
cltd
in
loopne
jo
xchg
hlt
xchg
or
mov
add
imul
sbb
xchg
dec
xchg
repnz
and
in
fisubrs
add
dec
pop
out
pop
sbb
jo
aad
xlat
fimull
jl
xor
ss
pop
and
inc
xchg
xchg
test
jb
mov
inc
inc
push
add
sbb
xchg
mov
mov
dec
call
cmp
add
test
popf
pop
and
ja
test
pusha
mov
lahf
ss
ds
cli
dec
ss
mov
sbb
push
jp
push
sbb
adc
lods
addr16
mov
lock
pushf
js
jns
sti
or
add
rcrb
outsl
orl
sbb
in
test
sub
jbe
sbb
enter
roll
xchg
sub
lock
xchg
arpl
mov
pop
ds
adc
jne
pushl
xor
xchg
push
pusha
loopne
cmpsb
mov
pop
push
add
mov
jno
push
xor
insb
lea
mov
pusha
je
movsb
or
mov
sbb
inc
cmp
jno
or
shlb
pop
sti
lret
test
inc
ret
and
or
jo
test
xor
loope
fsubp
out
nop
inc
add
inc
hlt
pop
test
imulb
mov
aam
icebp
pop
pop
inc
mov
test
insb
mov
inc
js
push
pop
adc
mov
pop
push
ret
mov
lret
fmul
pop
jl
mov
out
inc
cmp
lret
xchg
mov
lds
iret
test
push
stc
imul
adc
push
clc
mov
push
adc
loopne
fs
fwait
cltd
xor
insl
mulb
imul
dec
leave
lock
dec
and
movsl
stos
lock
loope
leave
sub
push
inc
jo
and
xor
push
xchg
incb
or
cwtl
adc
in
add
xor
mov
shrb
sbb
or
adc
test
sbb
sbb
les
imul
icebp
cld
mov
or
sti
addb
fs
dec
xchg
test
xacquire
mov
pop
out
inc
jo
sub
call
pop
fdivrl
orl
andl
cmp
popf
add
mov
jo
jmp
cmp
js
je
pusha
jb
add
xchg
mov
adc
gs
imul
test
and
scas
rorl
xor
lcall
pusha
mov
adc
dec
push
or
xchg
xlat
or
mov
dec
adc
clc
icebp
outsb
lods
lret
test
and
adc
xchg
push
imul
mov
pop
lods
rolb
cwtl
movsb
clc
hlt
arpl
or
movsb
mov
aaa
mov
push
sub
adc
or
aaa
pop
sbb
movzwl
stos
or
cs
in
les
push
jo
scas
movsl
pop
pop
add
adc
movsl
and
sub
jns
sbb
loopne
pop
ja
sub
mov
in
mov
add
xchg
imul
call
adc
lret
pop
rcrl
loopne
test
pop
ja
cmpsb
in
mov
jmp
enter
out
jo
cmp
dec
xor
ret
add
stos
jbe
test
clc
cmpsb
insl
add
push
xor
add
lods
or
sbb
mov
sub
sub
aaa
call
dec
shrb
add
jecxz
and
sahf
das
scas
and
jo
sub
or
hlt
icebp
sub
outsb
and
xor
inc
icebp
cmp
jbe
add
pop
and
cmp
and
shlb
aaa
daa
and
cmpb
insl
dec
shlb
adc
orb
inc
cmp
dec
das
es
stc
cmp
mov
inc
add
clc
add
in
cmp
pop
mov
mov
leave
or
xchg
xchg
add
mov
cmp
add
xlat
add
daa
adc
xor
push
jb
adc
cmpsb
repnz
sbb
rolb
rclb
adc
fsubr
int3
mov
pop
push
mov
adcb
dec
cmp
and
adc
push
cmp
dec
shrb
and
daa
iret
std
add
mov
test
add
lock
js
sbb
cmp
mov
jae
mov
dec
add
mov
mov
movsb
xchg
push
loopne
adc
iret
in
or
lret
call
jb
rcll
dec
mov
sub
cmp
jl
mov
sub
lods
in
dec
in
lods
lret
scas
xchg
add
mov
nop
sub
mov
lods
pop
or
dec
ss
xchg
xchg
fmuls
loopne
or
enter
test
sub
lret
pop
pop
decl
aam
dec
cs
fmul
in
adc
push
enter
or
pop
addl
or
in
movl
inc
xor
in
bound
push
ret
outsb
push
jbe
and
xchg
or
daa
loopne
jecxz
pop
add
xchg
add
shr
test
cmc
adc
mov
dec
jmp
xchg
nop
mov
mov
lcall
inc
or
pop
lods
setb
pop
or
dec
lods
rolb
adc
lea
iret
es
lock
and
mov
jae
add
xchg
pop
outsl
and
xchg
popf
inc
call
lret
mov
xor
pop
sbb
bound
dec
sbb
push
scas
loop
fsubl
dec
mov
pop
bound
cmpl
dec
add
les
jp
cmp
mov
test
mov
int3
or
pop
and
sti
sbb
add
add
or
pop
add
jbe
cmp
and
push
add
inc
sarb
int
shlb
xor
rorb
and
rcl
in
push
xor
xchg
add
out
add
add
jns
mov
mov
out
lds
mov
or
pop
or
popf
jbe
cmp
adc
adc
mov
nop
jno
pop
xor
sbb
pop
adc
rcll
outsb
movsb
gs
adc
rcll
lods
dec
mov
mov
mov
sub
mov
mov
inc
jl
sub
adc
mov
cs
sbb
push
add
push
in
adc
cmc
aam
add
ja
outsl
and
push
pop
add
fcoml
jg
hlt
mov
sti
sub
popf
out
and
mov
add
outsl
and
cmp
sub
lods
push
fsubl
xchg
or
or
or
sarl
adc
shlb
loopne
cli
pop
fnstsw
push
sub
pusha
fcoml
sub
fdivl
push
or
les
incl
pop
out
pop
int
push
orb
mov
lods
jmp
and
and
and
pop
mov
lea
mov
ja
sub
mov
cmp
and
in
inc
int
and
lea
cli
sbb
call
push
cld
jmp
movb
sbb
add
dec
loopne
clc
mov
or
insb
add
leave
fadds
ja
adc
ds
or
add
and
test
and
js
inc
loope
push
std
jno
repnz
add
into
mov
mov
push
test
lods
loopne
shll
negl
cmpsl
in
mov
jne
movl
dec
jmp
cmp
std
dec
sti
or
jne
shr
fldt
ljmp
jmp
push
mov
stc
jb
mov
adc
push
and
lods
add
adc
push
add
push
popf
rcrl
stos
jae
scas
popa
mov
xchg
push
or
mov
jg
or
jb
subl
out
push
jmp
lock
add
and
popf
xchg
ss
aaa
push
xor
push
aas
mov
inc
inc
jnp
jae
cmp
add
cmpsl
xchg
rcl
pop
ret
jne
sahf
loopne
jmp
push
leave
popl
sub
inc
or
adc
lea
and
xchg
shrb
sub
fistps
fs
push
cmp
inc
cmp
orb
dec
ljmp
add
jo
inc
loope
inc
add
loopne
xorb
mov
inc
inc
push
arpl
push
pop
es
mov
lock
enter
aas
cli
dec
jne
mov
dec
xlat
inc
lods
mov
jo
sbb
jle
in
icebp
and
push
mov
add
jne
xor
stos
mov
jmp
mov
push
jnp
cmpsl
cmp
into
or
jo
or
push
lods
dec
xchg
pop
loopne
sbb
sbb
addb
stos
push
pop
cmp
adc
and
loopne
xorb
jge
xor
push
hlt
sbb
andl
jno
filds
jae
dec
pop
xchg
and
insl
aam
push
or
pop
push
xlat
testb
pop
pop
lcall
sbb
sbb
add
and
push
insb
or
jo
popa
inc
lock
add
jle
insl
sbb
hlt
inc
pop
sub
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
sub
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
xor
push
cmp
jne
stos
pop
push
and
push
dec
pusha
and
cmp
xorl
and
xchg
ds
push
sbb
mov
lea
pop
aad
inc
or
loop
xchg
test
add
cmpl
sbb
pop
test
pop
ret
adc
sbb
add
jne
sub
or
or
loopne
sub
inc
and
add
cmp
and
aaa
fadd
je
cmp
xor
and
pop
ja
movsb
sbb
mov
or
and
mov
xor
lahf
das
adc
jno
inc
inc
sbb
sub
xchg
xchg
mov
cli
sub
and
add
sbbl
sarl
daa
and
or
sbb
inc
mov
lea
jg
pop
movsb
xchg
sbb
or
pop
cld
js
bound
ret
sub
xchg
mov
inc
jns
loope
js
ljmp
adc
call
pop
adc
mov
into
sbb
mov
xchg
dec
push
pop
and
nop
mov
mov
inc
pop
push
in
push
aas
add
add
adc
jb
add
mov
jo
or
adc
rolb
inc
ja
mov
pop
pushl
pusha
cmc
pop
push
dec
jb
push
mov
sbb
add
mov
jg
js
sbbl
sbb
leave
fcmovb
cmp
inc
mov
and
push
push
sub
inc
sbb
or
aas
lock
sub
push
scas
jl
sub
push
mov
and
jbe
lahf
inc
movl
addb
dec
mov
jno
int
or
add
add
add
sahf
xchg
mov
loopne
sub
sub
push
push
xor
bound
mov
and
loopne
push
imul
outsl
in
add
or
ret
in
mov
mov
pop
dec
jl
mov
push
xchg
xor
daa
add
push
push
jl,pt
ret
push
dec
loope
xchg
push
mov
xor
fnstenv
not
aam
movsb
xor
sub
icebp
sbb
iret
push
adc
pop
inc
inc
push
mov
and
and
sbb
loopne
sub
xor
sbbl
loop
sbb
pop
cmp
adc
jle
sbb
pop
cwtl
dec
adc
jecxz
inc
bound
dec
mov
lock
dec
pop
jne
insb
and
pop
cmp
adcl
popf
add
nop
mov
mov
push
insl
jg
cmp
adcl
ror
shlb
mov
dec
push
fildl
gs
jo
mov
js
jl
cmp
inc
and
addr16
es
adc
les
push
imul
clc
fidivl
mov
mov
sbb
jl
nop
cltd
aad
xor
pop
add
pop
xor
mov
arpl
mov
inc
jne
cmp
push
inc
and
ss
fs
mov
test
dec
sub
in
arpl
iret
js
out
lcall
insl
inc
insl
lods
lock
out
or
xchg
push
xor
and
adc
fistl
xchg
je
in
xchg
xchg
popf
sarl
popf
fadds
pop
cs
call
xor
std
jge
pop
jb
std
pop
imul
mov
add
fsubr
dec
add
sar
inc
mov
mov
add
add
fwait
xor
outsb
das
mov
ret
xchg
xor
test
idivb
fisubl
pop
xor
jge
loopne
jecxz
pop
mov
xchg
out
add
cmp
push
mov
cmp
cmp
mov
fldt
or
lret
xchg
imul
or
shl
ds
lock
add
and
outsb
movsl
dec
dec
jne
and
push
pop
add
lret
mov
xchg
xorl
lea
mov
adc
pop
fistpll
lea
mov
mov
sbb
xor
push
sbb
jb
pop
mov
dec
or
cltd
fidivl
push
cwtl
push
rorl
sbbl
jne
inc
sub
pop
aad
pop
scas
and
jne
andb
ffreep
jg
nop
movl
in
cmp
inc
xor
lea
icebp
imul
imul
lcall
pop
sub
mov
leave
or
scas
push
arpl
mov
dec
xor
loopne
aad
pop
lret
subb
or
mov
inc
pop
pop
arpl
fs
jns
xchg
ss
xor
inc
js
test
jno
add
jle
push
or
pop
mov
cli
sbbb
sbb
inc
mov
mov
aad
in
in
pushf
adc
sub
push
lock
orb
inc
icebp
sub
add
inc
cmp
sbb
adc
add
mov
gs
ljmp
push
or
sub
mov
mov
push
dec
gs
jns
pop
cmp
daa
mov
cwtl
add
mov
je
movzwl
pop
cmp
imul
mov
push
jo
inc
add
shrb
jmp
mov
aaa
dec
nop
shll
fisttpll
dec
or
or
mov
xlat
inc
loopne
inc
mov
adc
xor
outsb
adc
fiadds
dec
sub
cmp
jns
mov
dec
mov
into
lcall
outsb
and
xor
into
xor
push
cmp
add
push
icebp
push
jno
push
jnp
adc
leave
addr16
fildl
push
mov
ss
shlb
movsb
jne
cmpb
call
push
cmp
inc
mov
cmpl
mov
popa
mov
loop
sbb
shll
jo
jge
or
adc
dec
mov
pop
loopne
and
pxor
sub
lds
scas
jnp
outsb
jo
imul
mov
dec
ffree
mov
dec
inc
dec
dec
filds
sbb
jle
dec
mov
sub
cmp
mov
cmp
cmp
add
or
pop
repz
jo
inc
add
xor
push
aam
xor
mov
cmp
jecxz
jns
sbb
in
inc
inc
dec
movsl
pusha
jne
dec
mov
or
outsb
ret
mov
jne
fmull
daa
loopne
mov
jne
mov
jp
xchg
and
lcall
sub
xor
outsl
jecxz
repz
ljmp
xchg
movsb
sbb
or
aas
dec
data16
xchg
sbb
stos
shr
pushf
clc
inc
push
pusha
jmp
push
sub
dec
sub
jle
inc
add
mov
test
pop
cmpsl
jge
dec
xor
cmpsl
mov
sbb
or
adc
and
fsubrp
orl
popf
loopne
sub
sbb
or
daa
inc
and
scas
test
sbb
and
and
dec
rcrb
mov
jl
dec
sub
add
pop
jmp
jge
popf
enter
dec
lahf
fstpt
pop
pop
xor
sbb
mov
je
push
push
or
lea
and
int3
nop
arpl
jmp
scas
sub
enter
imul
dec
shr
int
and
lret
dec
pop
inc
mov
inc
or
xchg
pop
je
sub
dec
movsb
adc
js
nop
and
adc
daa
pop
mov
mov
mov
and
xchg
in
sub
arpl
mov
lret
inc
xorl
lods
and
int3
out
lret
out
push
repz
lret
popf
test
xor
xor
rolb
test
mov
push
xorb
syscall
cmc
or
in
out
jmp
xchg
stc
pop
push
adc
or
adc
or
mov
push
inc
dec
cmp
in
daa
jg
lock
nop
lret
outsb
adc
adc
stc
adc
lock
push
push
pop
je
inc
or
pusha
loope
jbe
or
cmp
inc
dec
pop
or
ret
dec
js
orb
cmpb
jb
adc
loopne
adc
nop
rolb
out
cmpl
shl
jne
xor
roll
xchg
push
and
push
sub
add
scas
add
loopne
cltd
cmp
jle
lret
push
jecxz
cmp
jb
negb
mov
xor
push
adc
cmp
subb
dec
or
mov
cmp
sub
mov
mov
lds
movsl
in
shlb
cmp
xlat
enter
enter
aas
push
add
add
out
pop
pop
dec
adc
fistpl
loopne
js
pop
ret
inc
pop
sbb
xchg
stos
dec
adc
outsl
test
ret
and
mov
push
adc
mov
mov
and
clc
call
rolb
cmp
ja
ret
or
movl
sahf
hlt
jmp
fwait
les
aad
in
imul
clc
lock
jbe
loopne
and
and
or
push
inc
movzbl
stos
dec
mov
add
and
ja
fildll
or
fs
shlb
or
pop
rol
sbb
add
ficoml
push
adc
int3
add
das
jno
xchg
jp
sub
lsl
sbb
or
add
pop
mov
mov
pop
dec
cltd
outsb
and
xor
pop
imulb
and
shrl
loopne
xchg
mov
mov
test
jmp
call
push
hlt
inc
aam
insb
sub
xor
rclb
aaa
in
mov
lock
mull
movb
shr
inc
push
pop
and
shr
rcr
shr
rcr
or
push
div
pop
dec
fstpl
sbb
xor
out
jb
cmp
decb
or
cmp
or
xor
and
ret
lcall
scas
shr
lret
iret
pop
ret
add
dec
pop
in
inc
sub
jo
xchg
mov
pop
je
add
out
fisttps
mov
mov
jno
scas
add
js
adc
mov
or
mov
addr16
and
mov
push
clc
xor
orb
adc
jae
pop
push
sbb
inc
mov
daa
lock
sbb
lea
push
ret
push
xchg
push
lock
aas
fs
jb
mov
push
cltd
in
int
dec
jbe
pop
mov
dec
movsl
out
add
fistl
out
dec
cmp
pop
jbe
mov
arpl
or
pop
mov
jnp
sbb
xor
fwait
es
repnz
mov
jnp
incb
cmp
fldt
loopne
daa
jg
push
mov
xor
add
aam
lock
aas
push
xor
arpl
hlt
adc
or
fsubs
das
aas
pusha
enter
lahf
rorb
pusha
jg
pop
popf
add
sub
dec
or
sarl
mov
mov
adc
mov
adc
nop
insb
mov
popa
push
adc
pop
add
sbb
and
rcll
sbb
stos
adc
lret
and
ret
addl
push
push
out
add
sbb
add
mov
cld
and
or
or
xor
mov
rclb
and
add
lret
hlt
dec
add
dec
jmp
add
or
push
or
test
add
fucomi
fsubl
fisubrs
add
and
shr
or
jnp
pop
xor
push
call
test
arpl
and
push
sbb
dec
lret
insl
lret
into
or
add
arpl
jnp
jns
jno
xchg
mov
jp
stos
mov
inc
sbb
shll
lods
bnd
into
das
nop
mov
pusha
int
sbb
dec
or
add
and
sbb
adc
jl
mov
mov
push
xchg
push
add
out
xor
iret
lret
and
jle
fstpl
xchg
iret
insb
or
add
pop
or
cmpsl
xor
xlat
fiadds
imul
xchg
jmp
decl
in
and
rcll
push
in
jo
dec
dec
jns
inc
xor
and
dec
clc
fstl
mov
test
mov
adc
lea
xor
dec
dec
loop
nop
xor
push
inc
imul
push
arpl
idivl
test
lea
inc
call
mov
sub
jl
sub
adc
jg
mov
lret
fdivrs
cmp
inc
mov
dec
call
inc
and
sahf
jle
xchg
add
inc
mov
lock
pusha
push
inc
xor
fs
je
push
cltd
jmp
inc
faddl
js
out
fnstsw
push
jmp
test
sub
sbb
pop
fucompp
std
out
xlat
mov
clc
and
ret
and
cwtl
aam
in
push
push
test
jmp
movsb
rcrl
inc
jg
add
adc
sub
add
pop
push
jno
sarb
cltd
ja
or
lret
adcb
xchg
test
movsb
jb
dec
scas
mov
or
lods
xor
lea
outsb
arpl
inc
xor
inc
inc
sarb
push
or
pop
pop
cmp
aas
mov
pop
loopne
or
pop
notb
jmp
shll
or
xor
jne
jno
push
repz
out
adcb
and
in
mov
push
loope
fmuls
xor
add
test
mov
mov
loope
movsl
push
adc
fcomps
fsubrl
mov
jecxz
add
dec
mov
pop
adc
xlat
adc
sbb
inc
shrb
and
inc
loop
in
aad
xor
and
lds
xchg
call
push
xchg
inc
lret
push
in
leave
and
xchg
ja
sbbl
add
lods
and
out
xchg
add
or
xor
cmp
jo
stos
movsl
jbe
out
dec
in
push
xor
cmp
lret
dec
cmp
add
loopne
out
lds
cwtl
fistpl
jmp
sub
in
fadds
inc
repnz
xor
xchg
adc
adcb
and
and
push
and
push
sahf
add
mov
mov
dec
cs
fcoms
push
mov
add
stc
mov
mov
and
mov
sbb
mov
adc
nop
add
push
xchg
pop
inc
dec
aad
sbb
lock
jne
fisttpl
xchg
and
fistl
inc
xor
test
pop
enter
lods
cmovnp
adc
iret
rorl
rol
insl
mov
hlt
pop
inc
inc
push
aad
mov
pushf
loope
out
jns
out
loop
lcall
adc
rol
daa
adc
or
loop
test
xchg
mov
inc
add
add
jne
adc
mov
cwtl
je
fwait
or
enter
xor
sbb
or
ret
adc
dec
and
pop
mov
adc
testl
and
mov
out
push
adc
mov
push
fcompl
or
sub
or
sbb
mov
push
jmp
push
fnstenv
and
pop
lret
outsb
scas
rcrb
icebp
mov
ret
lret
adc
dec
jmp
jne
pop
mov
je
mov
aad
pop
or
divb
shlb
sbb
ret
jne
icebp
push
xor
inc
adc
fdiv
shll
dec
cmpsl
and
add
xlat
mov
negb
dec
and
add
or
ret
scas
add
dec
mov
xchg
test
test
push
in
imul
int
mov
adc
ret
adc
std
pop
or
cld
sbb
pushf
sub
or
adc
addl
jg
pop
xchg
or
xor
dec
cmp
je
andb
or
mulb
pop
add
fs
jne
lea
popa
add
sub
cltd
cmc
sti
jne
mov
push
mov
and
stos
test
or
data16
test
loop
arpl
aad
testl
aam
hlt
mov
test
jne
push
adc
inc
xchg
lock
in
hlt
inc
lret
mov
fistl
daa
ficoms
test
sbbb
dec
adc
add
nop
push
test
cli
fiadds
fimuls
es
adc
std
bts
jmp
push
stos
cs
pop
pop
mov
out
rclb
movsb
cwtl
pop
fcos
imul
vpcmpeqw
cmpl
jne
jg
andl
sbb
and
lret
pop
cmp
cmc
or
out
inc
and
sub
inc
mov
sub
mov
cmp
push
rclb
fidivrl
xchg
xchg
out
add
sti
shll
and
std
sbb
loopne
cmp
jne
sbb
and
out
insl
loop
pop
pusha
mov
sub
sub
cltd
icebp
dec
jle
andl
dec
mov
ljmp
mov
adc
pop
das
and
fs
jle
nop
lret
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
rcl
xor
mov
inc
xor
outsl
fs
shrb
test
jmp
rcll
pop
cs
or
loopne
mov
movb
mov
mov
ja
fsubrl
pusha
pop
jmp
negb
and
or
mov
inc
dec
mov
inc
or
out
dec
imul
stc
xor
pusha
adc
and
inc
dec
shl
cmpsb
cmp
push
fwait
xor
ja
push
inc
jmp
push
hlt
fiadds
mov
sbb
inc
jne
mov
fimull
popf
xchg
jmp
outsl
mov
jbe
add
add
repnz
push
outsb
inc
pop
ds
fidivs
jecxz
fwait
jne
lea
pop
ret
fistl
test
and
mov
jnp
xor
je
pop
and
out
dec
pop
and
jmp
sub
add
inc
or
adc
adc
andl
aaa
xor
sbb
push
xor
adc
loope
loope
push
push
pop
pop
lock
or
add
js
and
adc
cltd
cmp
enter
jbe
je
or
jne
dec
and
pop
pop
imul
xchg
mov
or
out
sub
fidivrl
xor
popl
jle
loopne
pop
outsl
jmp
push
inc
cs
je
cmp
pop
inc
lret
into
or
and
and
cmp
loopne
xorb
ljmp
fsubl
pop
pop
jle
in
pusha
shlb
xchg
cld
add
es
out
sbb
or
scas
or
insl
push
mov
and
es
test
shlb
dec
pop
jl
xor
fldcw
adc
cltd
outsl
nop
dec
rolb
int
xor
jbe
idivb
pop
or
mov
ret
fwait
inc
clc
push
scas
decb
mov
roll
push
inc
jnp
loop
insb
clc
and
sub
test
and
jae
lea
or
inc
aam
push
ja
dec
pop
lea
daa
orl
andl
pop
mov
adc
pop
lock
mov
xchg
mov
inc
or
into
mov
sbb
sbb
push
push
je
cltd
call
clc
push
sub
lea
jle
scas
dec
push
fsts
jbe
mov
push
arpl
or
popf
out
dec
iret
adc
push
std
push
push
pop
push
int
sarl
out
lea
daa
mov
jo
or
lock
out
pop
lock
mov
adc
movb
xor
rcrl
pop
dec
inc
mov
add
int
push
mov
xchg
push
call
mov
add
push
add
add
mov
or
push
sbb
mov
mov
lock
aaa
and
pop
or
lret
faddl
add
in
jns
pusha
xor
aas
cmp
or
rorb
mov
add
sub
shll
xor
mov
lds
adc
sahf
aam
fidivrs
dec
jp
cmc
mov
pop
push
sbb
and
in
adc
lock
sbb
testl
xchg
movsl
addr16
add
xor
xchg
nop
mov
mov
nop
popf
sub
rcrl
cmp
inc
jo
sbb
dec
pop
push
add
mov
fst
xor
addl
or
cmp
mov
jmp
mov
jmp
lea
add
jno
cmc
push
shll
pop
psrlq
sub
add
xor
subb
mov
mov
jne
jmp
or
loopne
lock
daa
je
push
mov
ror
fmuls
push
mov
mov
push
adc
jb
cmp
out
push
add
cmp
pop
popf
xchg
push
cmp
push
aam
sub
rolb
xchg
lock
push
aad
dec
out
mov
icebp
push
lcall
push
clc
mov
hlt
inc
jmp
push
jp
leave
add
dec
pop
cs
adc
xor
lret
out
pop
push
dec
lock
fimull
fcompl
and
mull
push
push
mov
repz
fsubs
push
add
lock
not
push
lret
aas
test
push
dec
out
add
inc
add
mov
lret
stos
jl
inc
inc
adc
std
aas
sub
ss
jns
xor
lret
dec
out
cs
cmp
inc
adc
int3
test
pop
xor
mov
inc
xor
loop
xchg
inc
or
shrb
clc
dec
jmp
xorb
adc
pop
pop
xor
jmp
pop
push
cmp
add
xchg
cmpsl
inc
jp
sbb
sub
aas
inc
in
cmpb
insb
mov
call
xchg
test
xchg
or
sahf
testb
inc
scas
xchg
shrl
mov
ret
xchg
jo
adc
mov
or
or
mov
mov
rorb
inc
shl
icebp
push
ret
push
inc
data16
mov
jns
mov
ret
add
sub
pushf
sbb
xor
shl
cmp
into
jmp
insl
or
and
addr16
jmp
push
push
sbb
cltd
cmp
icebp
fs
pop
and
dec
dec
popa
jnp
push
dec
and
mov
ret
mov
rcll
ret
and
add
xor
ljmp
or
hlt
pop
lret
jne
xor
jo
add
test
fidivs
jmp
inc
adc
pop
adc
test
xor
push
push
or
popa
loopne
popf
cmpl
jmp
inc
cmp
adc
adc
push
and
push
and
pop
mov
inc
decb
dec
dec
pusha
sbb
dec
stc
and
add
mov
aam
hlt
and
pop
and
lock
leave
or
lock
sub
nop
add
add
jmp
mov
ss
stc
loopne
pop
lds
add
jecxz
or
xchg
ljmp
and
xchg
lods
xchg
in
fdivrs
adc
sbb
sbb
or
mov
push
pusha
sub
cmp
sub
inc
je
mov
mov
or
sbb
mov
or
mov
push
dec
mov
push
jge
push
mov
pop
outsl
enter
test
xor
lea
or
sub
push
loopne
add
or
imul
cltd
mov
sbb
out
push
notb
add
sub
mov
int3
mov
hlt
outsl
pop
fxch
lock
push
fldt
push
sub
dec
push
inc
lods
fs
data16
shlb
mov
jmp
adc
cmp
outsl
push
pushf
clc
fisttpll
adc
inc
add
or
mov
aam
shrb
inc
pop
scas
and
add
pop
xchg
or
aam
aam
dec
cld
inc
inc
fidivl
pop
add
add
mov
sub
lods
enter
fstpl
shlb
imul
adc
add
dec
aam
push
cmp
inc
call
out
fadd
push
ret
les
jne
imul
lret
bound
or
cmc
aas
sbb
gs
sub
pop
in
mov
je
dec
popf
add
or
cmpl
xor
icebp
xor
daa
je
adc
xor
test
or
and
cmp
sub
adc
shl
out
outsb
and
add
mov
stos
xor
inc
and
push
push
shr
je
in
mov
in
das
call
iret
testl
and
lods
push
stc
jle
fisttps
jg
jg
outsl
inc
or
stc
jl
repz
jle
xor
jg
jg
jnp
dec
jg
jo
mov
std
sbb
xor
lea
sar
pop
cmp
pop
ffreep
lea
lea
inc
out
push
stos
sub
mov
xchg
push
mov
xor
mov
fs
jo
or
pop
idivb
add
sub
sub
push
mov
inc
int3
rcrl
mov
shr
dec
inc
sub
test
jmp
cmp
hlt
mov
sub
sub
inc
push
call
jge
mov
imul
repz
push
add
push
and
mov
bound
push
sbb
jo
inc
test
mov
test
shll
sub
sti
idiv
and
pop
inc
mov
ret
bound
fmuls
out
shl
sbb
and
inc
pop
pusha
or
in
sahf
xchg
xchg
inc
js
mov
into
pop
push
cmc
cmp
cmp
mov
and
xchg
cmp
mov
cmpsl
mov
ja
cmp
rcll
mov
dec
sub
mov
cmp
sti
add
adc
sbb
pop
adc
add
inc
mov
insl
rolb
push
pop
cmp
or
sbb
push
sub
rclb
push
pop
ja
dec
or
lods
loopne
addr16
pop
jp
mov
mov
les
inc
push
or
push
xchg
push
pop
test
push
repnz
nop
shlb
addr16
popf
sti
jno
or
and
or
test
pop
sub
sbb
cmp
inc
add
adc
lea
lea
test
mov
jnp
or
push
in
ds
dec
jl
cmp
mov
jne
cmp
mov
in
add
es
mov
inc
add
mov
cmp
fiadds
rolb
mov
mov
inc
adc
ja
adc
mov
mov
add
jno
add
pusha
or
jno
push
xor
cmp
loop
mov
adc
jb
test
push
and
cmp
add
leave
ds
jmp
push
push
push
arpl
insb
adc
nop
or
adc
dec
add
or
or
jo
jl
imul
in
adc
lods
pusha
xor
add
pop
push
daa
add
dec
je
and
or
sub
and
pop
jecxz
inc
sub
fstpt
in
push
pop
arpl
movsb
sbb
push
daa
add
add
add
bound
insb
dec
pop
inc
pop
dec
mov
shrb
rcl
movups
je
iret
andl
out
data16
es
pop
pop
jmp
pop
cwtl
xorb
les
insl
add
add
je
sub
stos
sub
push
dec
push
cmpsb
test
push
mov
sbb
outsb
test
and
add
std
mov
dec
aam
xor
out
lret
lcall
in
jl
sub
lea
mov
xor
xor
inc
jnp
pop
gs
dec
loop
js
mov
sbbb
fcmovbe
inc
jns
ret
daa
jmp
pop
pop
mov
jge
adcb
push
add
pop
xchg
adc
sbb
push
lea
add
repz
and
insl
movsl
mov
sarl
mov
push
clc
hlt
push
push
pop
adc
dec
hlt
sbb
adc
mov
push
clc
sysexit
mov
inc
fsubr
sub
mov
in
test
popf
pushl
js
push
ret
xor
das
push
mov
mov
outsl
cltd
or
mov
sbb
jl
xchg
push
xlat
pop
addl
stos
inc
mov
push
push
nop
lcall
fcomps
movsb
les
mov
cmp
xorb
mov
fsubl
push
lods
mov
cmp
orb
testb
or
push
mov
cs
dec
pop
adc
or
xchg
inc
icebp
or
lea
iret
and
dec
add
xchg
and
test
mov
mov
push
cmp
lock
nop
leave
in
je
scas
push
inc
mov
and
into
incb
movsb
pop
jb
adc
inc
sti
or
jmp
mov
stos
popf
add
mov
stos
scas
inc
and
mov
mov
cmp
cmp
rcr
jle
sub
cmp
xor
ffreep
push
and
or
lds
stos
or
pcmpgtd
xchg
lret
test
push
inc
loopne
xor
imull
jmp
push
jae
mov
xorl
jmp
adc
insl
pop
jge
jle
fsubrp
jge
mov
add
jmp
out
xor
jmp
mov
or
push
jmp
and
add
mov
fists
fisttpl
leave
pop
push
sub
jns
lahf
and
cmp
add
cwtl
mov
mov
and
mov
xor
adc
movsl
jbe
sub
mov
and
loopne
je
jno
ss
mov
jge
movsb
nop
mov
inc
adc
push
out
outsl
mov
testl
testl
fnstsw
sub
inc
jmp
je
dec
or
iret
js
clc
cmp
mov
dec
inc
repnz
push
fdivr
dec
xor
cmp
or
jecxz
jl
lds
inc
jmp
cmp
bound
pusha
pop
xor
movsl
test
dec
mov
dec
mov
dec
or
xorl
aad
push
lock
xchg
cmp
and
jge
add
mov
pop
push
sbb
test
adc
inc
and
cmp
adc
rolb
fadds
jp
in
mulb
pop
jle
and
sub
paddusw
xor
jne
fsub
adc
inc
cmp
insb
jp
daa
add
call
push
push
rcl
add
pushf
imul
mov
jb
mov
fcoms
add
enter
mov
jbe
dec
add
sbb
clc
or
das
mov
ljmp
and
and
mov
lods
nop
inc
dec
ljmp
and
pop
mov
push
or
sbb
or
or
pop
xchg
ja
cli
dec
add
std
pop
inc
testl
pop
lock
dec
les
dec
into
jp
jne
test
cld
mov
or
cmp
or
push
out
xchg
fwait
adc
jo
pop
mov
dec
dec
fsubrs
test
push
pushf
or
fldt
lea
lcall
add
jle
gs
sub
add
bnd
cmpsl
int3
mov
sahf
pop
inc
inc
test
shlb
pop
cmpl
insl
mov
add
pushf
sub
clc
sbb
sti
jg
subl
cmp
jle
and
ret
inc
sub
mov
shll
shr
mov
loop
lock
mov
dec
xor
or
push
jmp
pop
sarl
bound
or
test
das
adc
inc
mov
push
or
into
idivb
add
sahf
push
shrl
rol
idiv
loopne
shr
or
mov
sahf
dec
mov
add
lock
jne
outsb
mov
jo
inc
sarl
adc
and
mov
inc
push
or
dec
mov
lock
rcr
out
push
adc
fiaddl
mov
inc
add
ljmp
fisubl
out
jmp
or
lods
mov
or
outsl
es
mov
add
pop
mov
loope
jl
dec
rcrl
lea
int3
int3
jmp
lods
or
daa
xor
test
fxch
das
push
pop
mov
push
lods
cmp
jge
mov
sub
jae
jno
push
sbb
sbb
mov
push
out
insb
and
push
lods
mov
jne
push
lret
das
sub
test
sbb
lret
sub
movups
ficompl
mov
les
mov
inc
mov
psrld
mov
add
fcoml
lahf
mov
aad
cmp
sti
add
push
jb
call
sahf
cmpsl
xor
js
ljmp
push
cmp
cmp
inc
mov
push
mov
mov
lock
testb
icebp
push
inc
mov
subb
add
imul
push
dec
pop
pop
sbb
pop
add
inc
sub
out
lahf
cmp
xorb
shlb
push
pop
clc
test
push
cmp
pop
in
xchg
mov
adc
mov
dec
sbb
pusha
lea
int3
outsl
out
and
das
lahf
std
insb
push
or
adc
or
jb
dec
in
mov
add
add
movsb
ror
repz
inc
or
out
gs
mov
push
out
cmp
pop
imulb
inc
push
lret
es
sbb
adc
mov
pop
xchg
std
jne
pop
mov
cmp
dec
xchg
fwait
mov
pop
pushl
add
adc
insl
cld
loopne
lahf
call
ss
or
aas
jne
jb
ja
pop
loop
pusha
pop
je
inc
test
add
inc
adc
and
stc
repz
out
inc
inc
jo
mov
jne
enter
cmp
testb
adc
divb
fistl
pusha
imul
sub
repnz
mov
sbb
cli
pop
pop
ret
pop
sub
inc
lods
inc
sub
dec
push
mov
cmp
insl
bound
add
cli
shr
add
adc
rcrb
mov
add
push
inc
mov
mov
fdivs
cmpsb
push
cmpxchg
inc
lret
adc
sbb
jmp
ds
es
cld
push
test
clc
js
jb
adc
mov
xchg
hlt
lds
gs
or
add
fwait
loopne
loopne
dec
xchg
testb
dec
rorb
pop
rcrl
mov
loope
loop
xor
xor
jo
xchg
push
loopne
sbb
adc
push
sbbb
fildl
lods
sub
in
add
imul
or
je
adc
dec
inc
cli
cmp
cmp
ret
loope
push
lea
add
dec
cmp
leave
sar
cmp
push
insb
sub
push
je
or
sbb
popl
inc
aaa
mov
mov
mov
xchg
push
repz
arpl
or
dec
ror
and
dec
pop
ret
add
adc
cltd
insb
rclb
movsb
dec
es
js
jo
push
mov
icebp
js
test
mov
aam
pusha
cmp
cmpb
push
dec
cmp
faddp
and
push
ret
cmpsl
push
sub
xchg
add
data16
mov
pop
stos
addr16
or
cmp
or
outsl
inc
or
rcll
inc
pusha
decl
cmc
andl
and
xchg
inc
shr
imul
out
sbb
out
lret
add
jo
fimull
cld
cmp
fsubs
sub
cmp
sub
push
add
bound
pop
adc
sbb
je
pushf
mov
mov
pop
adc
hlt
push
lea
sbb
lahf
ret
scas
cmp
enterw
inc
jmp
shlb
add
pop
and
jns
adc
and
rcr
cmp
jo
divb
insl
mov
imul
cmpsb
int
push
test
push
or
add
jne
rorl
mov
sbb
xor
clc
add
push
push
xor
xor
sbb
push
and
add
repz
push
jmp
push
add
ds
jne
dec
js
out
pusha
dec
iret
test
push
leave
adc
jo
push
sbb
pop
sbb
fisttps
cmp
fisttps
dec
dec
mov
mov
inc
mov
sbb
fimuls
cmp
dec
xor
sahf
insl
push
mov
out
mov
and
mov
xchg
lret
xor
sub
test
mov
es
or
or
or
movb
scas
es
push
addl
pop
pushf
push
lock
xchg
jl
and
lea
dec
add
in
cmp
ret
sub
add
insb
jmp
add
xor
inc
push
test
aaa
dec
jae
in
pop
jns
or
fiadds
into
jg
sbb
bound
xchg
mov
pop
xchg
lods
gs
jle
add
test
sub
and
mov
inc
dec
leave
imul
pusha
aad
mov
movsl
jne
jb
or
mov
stc
sbb
ret
jge
mov
or
xor
shlb
cmp
test
shlb
mov
or
push
and
or
xchg
and
es
icebp
add
test
inc
fidivs
stos
mov
add
js
hlt
test
mov
add
jmp
inc
xchg
loope
dec
mov
pop
mov
adc
in
dec
outsl
sbb
ja
outsb
push
jae
adc
push
ja
add
addr16
sub
lcall
push
mov
negb
add
mulb
mov
add
js
xor
dec
push
cmp
aas
and
popf
jge
leave
sbb
or
jmp
dec
sub
test
mov
cmp
add
lahf
mov
adc
clc
les
or
push
pop
test
and
cmp
cmp
ja
cld
dec
js
adc
or
pop
add
jmp
sbb
fdivrl
imul
ret
adc
dec
or
and
ja
or
adc
mov
inc
mov
sbb
lret
adc
sub
cmp
aas
add
xchg
lea
xor
mov
cs
and
fimuls
cs
push
or
fcompl
inc
cli
mov
pop
test
inc
mov
cmp
and
cmp
cmc
jns
mov
test
add
popf
sub
cmpsb
cltd
hlt
loop
pop
dec
push
dec
leave
pop
mov
pop
sub
fisttpll
xor
or
or
cmp
cmp
inc
loopne
inc
mov
jmp
test
fidivrl
lea
std
je
inc
cmp
shlb
testb
and
add
js
pop
sbb
nop
ds
mov
or
mov
push
mov
or
popa
add
add
jbe
mov
rcrb
ljmp
jb
clc
pop
jmp
add
fs
and
repnz
adc
pusha
and
das
repnz
push
outsl
ret
aaa
dec
lret
roll
rorl
and
andb
dec
bound
xlat
and
push
dec
sub
cmovo
lret
xor
jle
idivl
mov
push
loopne
jle
add
jo
mov
movsb
push
cmpb
mov
jle
adc
gs
cmp
xor
test
fcoms
aam
mov
adc
dec
jecxz
sub
mov
mov
add
pusha
push
lcall
addr16
mov
push
xor
add
dec
adcl
jecxz
or
mov
sbb
or
pop
xchg
and
rcrl
push
andl
xchg
dec
dec
sbb
push
mov
and
mov
jle
cwtl
imul
or
in
xchg
sbb
pop
cwtl
bound
jne
push
aas
out
jo
xchg
inc
int
xor
pop
or
sbb
xor
xchg
in
cmp
mov
inc
push
mov
xor
outsl
xor
add
jmp
push
or
xor
dec
pushf
sub
or
cmp
mov
jne
pop
push
pcmpeqw
xor
push
add
imul
or
lock
mov
add
jno
lret
or
mov
mov
adc
add
pop
adc
mov
outsb
pusha
ss
mov
mov
or
les
mov
dec
mov
icebp
imul
add
jb
ja
test
imul
dec
or
cmp
adc
dec
fcmovnu
js
or
fdivrs
or
lock
cmpb
pop
sub
int3
jnp
jl
push
or
jne
mov
push
push
mov
push
rol
scas
inc
mov
push
or
xchg
push
cwtl
mov
mov
pop
sub
xchg
jle
loop
jb
pcmpeqb
and
dec
je
ja
pop
xorl
mov
push
mov
mov
les
xchg
adc
dec
dec
push
jno
and
or
in
add
cmp
push
push
sbb
add
sahf
cld
cwtl
test
sbbl
fadds
outsb
jp
dec
pusha
fiaddl
mov
sbb
inc
mov
cmpsl
pushf
fadds
sbb
sbb
or
push
inc
inc
adc
fsubr
fnsave
pop
push
push
icebp
push
mov
pop
sbb
fs
cmp
jmp
cwtl
or
outsb
cmp
push
add
sub
push
daa
push
sbb
shlb
or
jno
int3
jmp
movsb
and
jnp
outsb
xchg
inc
cmp
roll
test
xor
cmpsb
jo
mov
into
mov
mov
ret
dec
bound
add
test
jno
inc
andl
rcrb
push
xor
mov
mov
push
fsts
lods
push
or
push
js
fstpl
push
add
mov
sbb
pop
inc
sti
or
push
or
clc
cmp
sbb
jo
xor
mov
sub
or
add
repz
and
push
or
sub
repz
nop
cmp
adc
mov
add
push
repz
mov
pop
mov
cmp
push
cmp
xlat
popf
cmp
rclb
enter
mov
xchg
push
lret
int
inc
dec
addr16
cmpsb
andl
mov
rcrb
mov
push
jb
in
push
fisubrs
adc
push
xchg
rolb
out
sub
mov
push
test
dec
fnsave
jp
clc
test
movsl
fiadds
adc
pop
sbb
fcmovnb
xor
inc
sbb
cld
sahf
mulb
cmp
in
add
sub
cmpsl
and
and
ja
fdivs
daa
rorb
dec
mov
or
imull
cmp
roll
frstpm(287
scas
adc
dec
xlat
mov
push
lret
push
mov
pop
push
mov
jne
stos
out
shll
aam
jmp
and
pop
pop
push
rorb
add
and
mov
jae
cmpsl
ljmp
and
out
jmp
inc
sbb
sahf
inc
cs
adc
aaa
push
xor
fisttpll
jg
cmp
ljmp
ja
sbb
sbb
das
popa
mov
pusha
mov
into
or
fidivs
fstps
or
push
push
scas
xchg
imul
scas
add
lods
dec
adc
push
xor
or
daa
daa
sub
or
outsb
and
daa
adc
ss
fmull
and
sub
pushf
pushf
pushf
pushf
xor
cmp
inc
and
inc
cmp
cmp
push
dec
dec
cmp
pop
pusha
fs
dec
dec
dec
push
inc
dec
dec
js
leave
and
pop
sbb
test
mov
leave
cwtl
pushf
mov
and
mov
rol
int3
fisubl
dec
sarb
fs
loopne
cltd
fs
in
in
aam
fs
dec
lock
clc
jb
dec
es
add
add
sbb
dec
or
gs
adc
cmpsb
adc
dec
es
and
dec
es
fs
xor
cwtl
fs
cmp
rorl
fs
inc
dec
dec
mov
xor
and
pop
pop
sbb
subl
cli
add
jl
add
imul
js
roll
xor
and
and
dec
rorl
rcll
imul
test
mov
imul
and
pusha
inc
lcall
movsb
cli
lods
inc
mov
inc
lcall
movsb
cltd
dec
mov
push
enter
pop
notl
mov
sub
and
pusha
mov
push
ret
aas
movsb
and
or
test
shrb
pushl
add
inc
xchg
mov
mov
andl
ljmp
add
add
inc
and
hlt
mov
push
adc
jns
mov
jne
add
adc
call
pushf
ss
add
or
test
add
ja
mov
mov
cmpsl
addb
sbb
cltd
fwait
aam
add
cmp
adc
shll
lahf
xchg
and
adc
sarb
mov
and
jecxz
lret
je
inc
mov
mov
dec
cmp
adc
jbe
mov
adc
sbb
inc
inc
push
inc
rcrl
bound
push
or
lods
sar
std
or
loope
push
or
sarb
adc
add
pop
xor
arpl
push
jb
js
inc
fcom
lods
lea
or
xor
enter
or
add
xchg
xlat
sub
add
ret
in
test
and
enter
add
or
xor
pushf
push
in
jbe
mov
shl
shll
dec
xor
adc
or
pop
mov
and
shr
add
in
and
jmp
ljmp
pop
and
test
add
add
fcom
pop
adc
or
mov
test
dec
cmp
mov
bound
jo
shll
and
dec
rcl
or
or
sub
or
call
mov
or
adc
lock
and
mov
in
out
movsb
pop
and
aaa
jecxz
sbb
lcall
xchg
jmp
ret
xor
or
orl
cmp
aaa
jge
cmpsl
rorl
dec
mov
loope
fbstp
outsl
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
adcl
inc
jecxz
and
fstp
ds
test
filds
push
insl
std
dec
mov
repnz
std
shrl
je
adc
scas
cmp
cmpsl
sti
add
add
test
and
mov
sahf
pushf
sub
push
xchg
das
pop
je
cmp
sub
push
and
or
or
add
testl
inc
xor
add
lea
pop
sbb
jmp
push
and
or
cmp
adc
decb
inc
flds
fstps
jmp
fisttpll
xor
pop
mov
hlt
adc
test
lods
test
vmptrst
pop
sub
rol
neg
pop
inc
cmp
sbb
mov
adc
xor
test
out
inc
adc
cmp
loopne
and
push
inc
bound
sbb
mov
push
aaa
sbb
inc
dec
jmp
pop
cmpsb
fldl
jbe
std
push
dec
jmp
sub
sub
jmp
sub
daa
pop
jp
push
or
outsb
dec
rorb
fldcw
dec
repz
into
adc
xor
scas
pop
mov
mov
daa
enter
mov
ficompl
lock
and
inc
fstpl
and
push
inc
cli
rol
cmp
xor
mov
dec
jmp
or
je
iret
push
in
inc
rcr
sub
jbe
repnz
or
jo
sbb
adc
xchg
cli
mov
mov
cli
shrl
test
clc
mov
sbbb
loopne
or
mov
push
push
ret
imul
pop
jmp
pop
fsubrl
icebp
add
mov
xchg
or
cmp
loop
push
daa
pop
dec
inc
push
mov
jmp
cmpsl
xor
adc
jg
outsl
sbb
push
les
lret
push
js
hlt
pop
adc
pop
adc
bound
or
ljmp
jle
add
leave
mov
or
or
call
or
insl
xchg
cmp
rorb
jmp
adc
or
scas
dec
shr
sbb
sbb
dec
mov
and
and
js
mov
pushf
sub
subb
out
pop
arpl
clc
mov
jmp
int
lock
add
loope
jno
fucom
push
add
ljmp
mov
pusha
xchg
and
inc
push
or
insl
push
push
sub
out
gs
fisubrl
lret
rorb
push
fdivrs
popl
lods
add
and
mov
lods
enter
sar
das
cmp
adc
pop
jp
les
adc
or
arpl
nop
mov
cmp
jge
js
dec
mov
jnp
pop
dec
add
push
in
inc
gs
data16
adc
mov
mov
inc
into
movsb
dec
stos
add
cld
iret
sarl
sub
cmp
xor
inc
jp
shll
push
cmp
lock
or
div
and
imul
decb
mov
xlat
mov
pop
jo
xchg
in
sbb
test
bound
popa
subb
cli
cli
push
dec
out
fld
fucomp
pop
fsts
add
mov
xor
stos
test
jne
orl
in
and
mov
inc
sbb
or
or
mov
movsb
and
or
push
or
mov
lcall
and
pop
scas
mov
or
or
mulb
sbb
xchg
stos
sbb
dec
mov
push
push
cmp
inc
jp
pusha
cs
imul
jmp
fstsw
subps
lret
sbb
loop
push
jno
and
add
not
dec
xor
mov
xor
fadd
or
insl
or
shrb
cmp
dec
inc
or
sub
cmp
fcmovnbe
fwait
test
fcoms
pop
and
sbb
add
rorl
enter
nop
call
mov
fldpi
xor
and
test
ss
and
je
lret
dec
inc
icebp
call
je
scas
xsaveopt
inc
add
or
rolb
sbb
jo
xor
pop
scas
loope
mov
pop
pop
jmp
cld
fiaddl
test
and
adcb
or
test
dec
or
jo
add
enter
or
aas
and
xchg
mov
and
aas
mov
ldmxcsr
decb
fsubl
xor
js
test
add
adc
add
cmp
pop
popf
sub
or
stos
adc
xchg
cs
push
adc
in
addl
dec
in
mov
pop
add
mov
decl
int3
inc
fdivrs
dec
or
inc
mov
adc
lea
pop
ss
inc
rcl
adc
push
fstp
dec
sbb
call
loop
rolb
cmpl
cwtl
inc
stos
pop
repz
out
jmp
shll
out
ss
dec
or
inc
adc
iret
les
and
fisttpl
mov
or
push
adc
cmp
sbb
cmpb
xor
dec
cmp
rcl
loopne
data16
pop
sbb
add
and
adc
rorl
cs
or
and
xor
jmp
or
pop
clc
dec
insl
and
je
inc
mov
or
cmp
or
ret
stos
inc
daa
test
aam
or
aam
nop
loope
fmull
cmp
push
cmp
mov
push
loopne
mov
shl
and
push
sub
sub
notl
loopne
pop
popf
mov
ds
push
or
dec
adc
and
aam
out
mov
es
jl
xor
shl
or
add
into
mov
out
xor
lahf
or
dec
jns
mov
cwtl
push
dec
cs
push
shr
xchg
inc
jno
inc
lods
sbb
test
lods
dec
inc
mov
sbbl
or
inc
rcrl
dec
xor
xchg
cli
add
mov
lods
fmuls
vpor
pop
push
push
jb
popl
push
incb
fidivl
mov
push
icebp
iret
dec
jns
cmp
and
cmc
hlt
push
aas
add
rorb
mov
fbstp
sub
frstor
movsb
push
fists
jl
push
das
cmp
add
xorl
pushf
mov
arpl
add
roll
sbb
jmp
add
andl
sub
out
scas
js
add
jl
stos
iret
and
into
popa
mov
or
sub
inc
mov
in
xchg
jge
test
dec
rcrb
dec
lods
shl
test
or
aad
and
gs
aas
or
fs
pop
inc
adc
stos
jb
scas
lret
inc
ret
jne
and
mov
and
mov
adc
mov
popf
or
adc
pop
push
les
mov
pop
inc
sub
sbb
inc
inc
mov
add
push
adc
push
and
jb
add
jmp
imulb
test
gs
pop
jne
cmp
js
add
cs
dec
mov
mov
push
inc
mov
mov
rorl
test
lods
pop
xchg
mov
or
xchg
cmpb
imul
jg
adc
inc
cs
or
incl
or
or
out
mov
dec
cmpb
je
mov
jg
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
mov
push
or
add
sbb
fcompl
ja
dec
mov
mov
cmp
call
pop
inc
xchg
jmp
leave
push
je
xor
icebp
cmpsl
xor
push
inc
pop
sub
or
aaa
adc
jnp
out
inc
push
add
adc
jno
xchg
xlat
scas
mov
movsl
pop
and
pop
xor
sbb
fsubs
loopne
jecxz
repnz
popf
shlb
cmpsb
mov
fdivl
pop
mov
or
add
test
out
inc
in
ret
push
mov
sbb
rorb
jo
cld
and
sub
mov
add
mov
adc
adc
cmpl
mov
rolb
aas
push
icebp
sub
jle
mov
mov
adcb
aam
in
mov
xchg
shlb
lods
jp
test
popf
xor
add
push
inc
fwait
pop
mov
add
cmpsb
inc
add
aaa
dec
sub
jns
neg
movb
jecxz
or
fs
cltd
push
rorb
mov
xchg
int3
movsl
or
or
add
pop
in
into
sub
xchg
punpckhdq
rclb
xor
daa
jns
xchg
mov
ret
popa
sbb
or
mov
or
push
xor
xchg
dec
cmp
inc
repnz
add
xchg
or
insl
push
shrb
jmp
ret
pop
xchg
pop
loope
xor
or
sub
adc
adc
and
adc
shlb
insl
xor
inc
lret
inc
faddl
rcl
inc
sbb
and
mov
push
jmp
rorl
pop
push
ss
sbb
add
mov
and
push
fadd
xchg
or
shlb
cwtl
lds
pop
into
icebp
xchg
stos
inc
jge
adc
and
xchg
lret
sarl
dec
adc
fsubr
adc
call
adc
mov
xchg
add
sub
inc
loop
xchg
push
and
sbb
pop
push
cmp
sbb
cmp
pop
sbb
or
and
clc
xor
sub
call
adc
test
lock
sbb
dec
and
add
mov
fdivrl
xchg
dec
sbb
das
sub
leave
and
add
insb
movb
std
or
xchg
add
mov
or
popf
neg
sbb
movsb
mov
and
or
das
adc
jg
ret
jbe
sbbb
shll
add
xor
xor
dec
inc
sub
test
add
dec
ds
xor
fdivrp
sub
inc
xor
mov
or
loope
adc
fimull
sbb
cwtl
fisubs
push
mov
ja
sub
hlt
nop
rcll
push
sub
adc
push
and
mov
shrl
call
fdivs
jl
xor
cmp
icebp
dec
mov
sub
sarb
shrd
daa
push
add
add
test
xor
jge
sbb
sub
xor
cli
ss
data16
add
dec
jmp
es
sub
jne
test
xor
fcompl
lcall
popl
ret
push
pop
sbb
cwtl
lock
bound
jo
push
outsb
ljmp
shrl
mov
and
js
jg
jb
xor
mov
or
pop
mov
fimull
jl
cmpsl
sub
sbb
push
shll
pusha
sbbl
mov
push
lock
jg
or
mov
push
jg
mov
jb
sub
mov
dec
pop
or
or
mov
lea
jmp
pop
push
cmpsl
xor
push
add
scas
push
push
test
aaa
adc
jbe
sbb
xchg
add
dec
repnz
aad
mov
movl
add
jle
add
inc
add
push
sbb
push
call
jmp
lock
sahf
fwait
mov
xchg
adc
neg
call
rclb
push
xor
pop
push
lods
lret
addb
or
rclb
push
scas
or
add
rcl
das
push
repnz
je
adc
and
and
jbe
add
in
jl
into
rol
add
sbb
adcb
sarb
cwtl
cmp
push
nop
adc
sti
orl
pop
push
divb
loopne
enter
nop
cmp
or
xchg
mov
call
cmp
pop
roll
test
or
push
push
xor
pop
cmp
out
loop
or
cld
jl
loopne
jge
add
or
or
adc
sarb
stc
mov
push
add
popf
jmp
xor
sub
testb
or
sahf
clc
gs
or
sub
pop
data16
cltd
jae
pop
xchg
xor
sbb
push
pusha
fs
je
dec
xor
inc
sbb
aas
xor
adc
bound
inc
xchg
or
sbb
outsb
ret
je
rorb
clc
sbb
mov
inc
or
jo
gs
adc
xor
or
enter
sub
divps
fwait
je
adc
inc
xlat
subl
inc
inc
cmpsl
cmp
sub
push
adc
les
xchg
jle
cmpb
jne
add
out
sarl
seto
xchg
sarl
add
hlt
mov
add
cmp
sub
aam
test
cmpb
negl
cmp
je
inc
jp
xor
mov
add
inc
or
dec
sub
mov
or
lea
or
mov
inc
xor
cmp
ret
push
adc
inc
pop
popa
xchg
mov
push
dec
lahf
xor
inc
arpl
bound
sub
and
inc
cmp
clc
pop
sub
push
push
and
dec
aaa
xchg
aam
mov
add
mov
into
sub
clc
cmp
faddl
mov
or
cmp
lret
xchg
sub
das
xchg
aam
sub
mov
pop
inc
mov
mov
push
xor
sub
test
insl
mov
xor
mov
cmpl
sbb
addb
lock
or
push
lret
rcr
ss
jmp
adc
iret
adc
mov
pop
and
ret
shrb
dec
adc
cmp
hlt
jae
dec
adc
xlat
mov
and
xchg
inc
mov
or
dec
fcomip
jg
xchg
sbb
dec
je
dec
adcb
jmp
push
outsb
or
jmp
cwtl
inc
orb
or
pushl
push
or
or
jmp
xchg
sbbb
xchg
or
and
xchg
adc
enter
sub
data16
out
pusha
mov
cmc
clc
aam
add
add
mov
cltd
cmp
lea
add
xchg
push
inc
add
push
sbb
add
fdivp
cmp
sbb
jmp
mov
or
popf
adc
add
int3
or
mov
push
sub
jbe
or
and
mov
push
add
adc
movsl
dec
adc
fimull
or
into
sub
xor
inc
adc
sbb
inc
cmp
mov
or
sbb
daa
sarl
xchg
mov
ja
pop
dec
mov
xor
add
jns
rclb
add
call
test
or
or
or
test
sub
xor
fbld
clc
shr
add
or
pushf
clc
scas
push
add
shr
or
mov
insb
push
adc
jl
call
and
add
mov
test
fldcw
mov
cmp
sbb
sub
mov
out
jp
fidivrl
jbe
mov
jecxz
jbe
add
jl
mov
loopne
in
sbb
cmp
fimuls
sub
pop
ds
add
add
and
jo
inc
fisttpl
cmp
adc
bound
inc
sub
jbe
push
test
clc
xorb
test
stc
rolb
cmp
xor
nop
pop
and
decl
dec
jge
les
xchg
pusha
sbb
xchg
fs
dec
add
cli
ficomps
adc
or
push
xor
push
fistl
loop
movsb
add
mov
decb
dec
push
cmp
int
test
add
add
cmpsb
or
xchg
or
mov
jp
mov
shll
data16
and
jbe
les
jb
pop
xor
mov
jp
pop
cwtl
adc
bound
jecxz
cmp
je
push
leave
adc
lds
loope
xor
clc
hlt
fwait
push
inc
sub
push
push
mov
ljmp
xor
orl
negb
ret
jmp
sbb
push
addl
lret
cltd
xchg
or
dec
bound
loope
inc
or
adc
jae
out
sub
adc
add
or
inc
cltd
mov
cwtl
sbb
insl
nop
jno
or
inc
and
mov
push
dec
xor
stos
sbb
leave
dec
in
add
jle
hlt
add
adc
sarb
and
movsl
adc
add
or
loope
adc
jecxz
jp
mov
lret
clc
or
cmp
fiadds
movsb
or
stc
jle
movsb
mov
xor
stos
sbb
mov
test
clc
sbb
or
shl
scas
cmp
xchg
mov
mov
std
es
ss
sbb
add
pop
inc
sbb
push
ret
sub
push
xchg
xor
jb
mov
sbb
add
sbb
mov
popf
and
mov
sub
push
add
cmpsl
cmp
pop
sub
jmp
out
cmpl
jmp
pusha
lea
imul
into
xor
or
cmp
adc
repnz
inc
pextrw
pop
popa
cmp
or
mov
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
sbb
xchg
mov
inc
sbb
bound
mov
leave
inc
xor
mov
cltd
movsb
jmpw
fs
xchg
adc
cmpb
jl
ss
cmpb
test
hlt
cmp
sub
push
incl
out
xchg
adc
push
mov
push
push
fcoms
mov
testb
cmc
and
insb
jmp
lahf
push
subl
jo
ficoml
orb
push
push
jne
shlb
or
push
xchg
cmp
sub
jmp
xchg
xor
jne
cmp
jne
jne
push
ret
jmp
dec
add
add
mov
shl
sbb
testb
rorb
push
dec
or
adc
fprem
out
roll
leave
add
add
je
mov
iret
adc
pusha
push
add
add
test
pop
loop
rolb
push
test
pop
xor
enter
shlb
add
movsl
xor
mov
addb
xchg
adc
inc
add
loopne
outsb
add
rcrl
and
mov
xchg
adc
sbb
cmpsl
add
pusha
in
cld
imul
lret
jge
inc
inc
push
neg
neg
sbb
out
adc
sbb
inc
sbb
sahf
dec
sbb
xor
sbb
mov
sbb
push
push
roll
out
and
fnstenv
dec
icebp
sbb
adc
test
lret
adc
sbb
mov
and
cmp
jns
cmp
cmp
dec
jne
pop
pop
pop
mov
mov
adc
lods
sarb
jl
sbb
dec
and
shr
sub
pop
adc
or
js
mov
push
idiv
and
maskmovq
cld
lock
je
lds
imul
add
call
mov
push
inc
sbb
dec
or
rclb
addb
sbb
or
adc
fs
ds
xchg
add
je
push
mov
dec
int
into
jbe
aas
mov
hlt
adc
jp
sbb
aas
pop
stos
ss
cmpb
and
push
dec
cmpsb
shl
adc
or
rorl
pop
cmp
mov
inc
push
div
xor
out
adc
xchg
ljmp
add
movsb
or
inc
test
lret
add
jne
lret
andl
or
lcall
add
cmpsb
jnp
mov
dec
scas
jge
jns
cmp
ret
addr16
hlt
leave
jne
pop
mov
inc
jmp
sbb
shlb
jo
ret
loop
mov
xor
cmp
popa
inc
or
mov
push
xchg
shlb
arpl
das
adc
es
mov
je
das
subb
and
jb
xor
jns
cmp
ja
add
cmp
adc
cmp
jne
push
shll
leave
adc
mov
cld
jb
idivl
pop
je
push
adc
adc
xlat
push
fsub
adc
sbb
fldl
ljmp
mov
movsb
pushf
movl
aas
dec
outsb
into
pop
push
movb
jmp
or
sub
rcll
clc
aaa
or
cmp
mov
lcall
xchg
or
clc
pusha
movw
jb
push
inc
adc
push
fldl2e
ficomps
xchg
es
mov
into
test
sub
subl
cwtl
cmp
add
aaa
pop
sti
mov
push
mov
sti
xchg
call
push
and
fidivl
ret
shlb
dec
into
push
sbb
in
pop
dec
mov
sbb
cmp
mov
pop
int3
push
imul
rcrb
add
sbb
jmp
inc
imul
lods
ret
decl
test
or
mov
ljmp
mov
aam
neg
cmpsb
es
ljmp
loopne
push
cwtl
mov
test
mov
cwtl
inc
mov
lock
cmp
xchg
test
fsub
pop
and
dec
rorl
cwtl
mov
push
js
sub
xorb
outsb
and
or
dec
jle
repnz
sbb
mov
pushf
mov
mov
mov
shl
outsl
or
imul
and
lea
inc
xor
stos
push
cmpsl
add
into
sahf
and
push
repnz
mov
ja
fs
repnz
lods
mov
push
sub
inc
call
in
ljmp
fs
inc
sub
cmp
mov
and
lea
add
jbe
rolb
or
lea
and
jl
stos
sub
or
xchg
add
sub
movsb
rorb
cmp
mov
or
mov
lret
sbb
or
mov
lcall
int
mov
adc
cmpsb
rorb
add
clc
sbb
shll
mov
add
fstps
scas
jl
pop
or
and
ss
or
sbb
push
lret
int
fstps
inc
pop
daa
or
mov
push
push
add
loope
mov
mov
test
pop
shr
or
mov
std
jmp
xor
sbb
into
xchg
push
sbb
lock
dec
lret
jmp
loope
stc
repnz
push
lcall
cli
cli
inc
mov
div
lods
xchg
test
and
addr16
movsl
cltd
and
dec
dec
loopne
mov
test
sbb
adc
cmp
aam
add
scas
mov
dec
pop
and
push
mov
mov
fldenv
enter
jg
or
push
mov
xchg
cmpsl
mov
mov
lock
add
int3
enter
push
test
scas
xor
or
pushw
sbb
loop
rcl
xor
out
jge
dec
add
fmuls
pop
xchg
push
inc
shrb
lock
inc
daa
adc
inc
or
push
adc
jne
adc
xchg
fdivrs
aam
int3
or
jbe
dec
sub
add
mov
test
bound
adc
inc
xor
or
adc
mov
sahf
lret
fcmovu
mov
mov
insl
test
jmp
mov
jp
mov
add
sub
or
adc
pop
div
jg
or
adc
das
test
jge
or
sbb
das
nop
or
jb
or
and
movsb
jmp
add
in
adcb
sub
dec
in
or
lods
pusha
or
mov
movsl
jp
jp
add
sbb
sub
ret
sbb
idiv
ret
jle
sbb
movb
dec
movb
push
cmc
add
pop
outsb
call
xchg
add
cltd
and
or
mov
mov
dec
addr16
shr
and
adc
inc
shl
mov
sbb
in
jle
jg
xor
fiadds
inc
imul
loopne
call
adc
call
mov
add
fnstsw
pop
add
and
mov
push
in
faddl
out
in
cmp
or
add
pop
push
sar
sub
out
pop
popf
inc
les
enter
addr16
sbb
repz
mov
lock
inc
dec
enter
mov
mov
and
dec
int3
or
mov
sub
test
call
or
add
into
sbb
adc
or
mov
inc
ljmp
jmp
in
or
sub
cmp
jge
push
cld
stos
aas
sub
cmpb
or
add
dec
cmp
xlat
aam
inc
dec
add
add
fadds
xchg
inc
mov
adc
mov
ret
jp
jne
dec
xchg
mov
mov
jb
int
pop
or
filds
or
and
inc
pop
dec
lds
inc
mov
jp
ret
adc
imul
add
add
push
lcall
rclb
mov
mov
add
sub
test
push
cmp
or
psubsb
or
cmpsl
xor
pop
jne
or
stos
int3
cmp
je,pt
xor
ret
sbb
adc
mov
push
cld
mov
ret
or
dec
lret
add
xchg
adc
or
orl
ret
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
and
pop
add
fisubrl
and
pop
pop
mov
jbe
mov
or
push
sub
prefetchw
sahf
inc
ret
or
inc
dec
jne
xchg
push
add
lock
push
ficompl
jne
or
or
loopne
xchg
cmpsb
add
add
aad
lret
inc
decb
sbb
mov
out
sbb
or
push
pop
or
add
adc
jnp
sbb
and
mov
ret
ret
test
pop
fmuls
push
out
and
push
mov
jo
popa
fdiv
adcl
sbb
loop
clc
mov
and
sub
test
sbb
xor
cmp
push
scas
andl
jo
or
mov
pop
rcrl
fadds
and
dec
xchg
rcl
or
add
add
clflush
mov
pop
test
int
xor
adc
or
adc
xchg
into
mov
mov
sbb
and
sbb
repnz
push
inc
jg
into
into
outsb
fbld
and
sub
pop
sub
js
pop
or
sahf
mov
xchg
adc
push
or
ret
stos
sbb
stos
push
dec
add
and
jbe
pop
lcall
add
leave
lahf
pop
xchg
into
enter
cltd
adc
add
and
push
movsl
movsb
add
stos
aas
test
mov
jp
or
leave
adc
cwtl
sbb
cmpsb
inc
sub
jmp
movsb
jb
and
in
mov
lret
push
cmpsl
fmull
ljmp
mov
out
pop
adc
xchg
sub
mov
fxch
sub
aas
mov
mov
mov
popa
sub
push
push
clc
mov
scas
sub
sbb
into
lret
mov
jnp
adc
sbb
rcrl
divb
add
jl
sbb
pop
ljmp
jmp
mov
add
add
cmp
and
add
and
repz
sbb
addb
inc
addr16
mov
mov
add
dec
or
je
mov
push
adc
mov
or
or
cmp
jbe
ffreep
iret
orb
jmp
push
int
and
mov
in
imul
pop
or
sbb
call
ret
fadd
pop
lea
push
add
in
and
adcb
add
popa
test
add
into
fisubs
or
mov
adc
pop
jb
roll
xor
pusha
adc
or
xor
mov
pop
adc
jo
and
in
ret
fsub
add
test
rorl
add
jne
push
loope
gs
leave
jae
push
push
rcl
test
pop
cld
push
or
dec
aam
push
addr16
pushf
mov
xor
push
popf
lods
add
mov
popf
mov
mov
dec
mov
xor
and
mov
add
cmp
add
inc
les
add
popa
sar
xchg
push
cmc
push
cmpsl
pop
jmp
mov
cmc
push
mov
leave
sbb
add
bound
mov
notl
add
lret
and
sbb
movsl
adc
sub
add
loope
mov
mov
aaa
addr16
pop
test
shll
mov
add
xchg
scas
push
push
ret
push
push
add
into
data16
mov
adc
stos
pushf
inc
mov
and
jp
adc
push
mov
lret
mov
mov
and
sbb
fistps
dec
in
push
and
clc
cli
jge
push
mov
das
sbb
fs
sbb
xor
mov
sti
sub
js
cs
mov
loope
popa
lock
js
push
dec
push
fmuls
xor
rclb
icebp
enter
cmp
pop
add
pop
inc
lret
adc
sbb
pop
nop
orl
add
shrl
mov
push
jmp
dec
add
test
mov
movsl
fbstp
jb
cmp
subl
push
js
cs
mov
jecxz
xor
or
mov
or
sbb
or
leave
inc
insl
push
test
push
enter
cmpsb
mov
xor
pop
dec
cmpsl
cmp
movb
mov
push
test
sbb
call
xchg
loopne
mov
adc
push
mov
adc
sbb
rolb
aam
pop
inc
popa
push
mov
inc
aam
icebp
xorl
push
dec
clc
jge
push
mov
bound
imul
push
fisubl
mov
imul
test
pop
and
gs
inc
push
or
adc
or
lret
cmc
rol
push
or
mov
fcomps
rol
addb
adc
add
das
sub
cmp
hlt
xorl
or
xor
call
sub
dec
data16
sub
add
xchg
out
rcll
push
bound
out
fsts
or
and
inc
push
push
jo
ss
clc
outsb
or
fwait
dec
enter
pop
lds
int
and
enter
loopne
and
ret
lods
mov
and
xor
sbb
movsl
add
add
sub
std
fmull
push
sar
xor
sbb
jns
jb
rorb
aad
mov
xor
lock
xor
cmovle
rclb
dec
jbe
jo
inc
adc
or
cmpsl
aas
mov
sahf
shlb
insb
popa
xor
in
addb
mov
xorb
xchg
cltd
mov
push
and
add
cmp
ret
xchg
add
adc
add
jae
sub
scas
int3
jmp
shl
gs
xor
mov
xchg
add
or
insl
cld
mov
push
loopne
pop
pop
xchg
and
inc
add
ret
in
cmp
loop
push
hlt
jno
fistpll
jno
mov
pop
mov
or
ret
add
dec
add
cmp
and
xor
imul
or
addr16
addl
call
inc
inc
imul
out
lea
xor
inc
mov
push
adc
adc
sbb
cmp
xor
imul
jae
add
scas
arpl
popf
rcrb
xchg
or
movsl
movsl
lcall
xchg
push
lea
adc
lret
stos
and
cmpsb
adc
outsb
insl
clc
pop
xor
push
mov
adc
loope
push
movsl
int3
rcrb
addb
fldcw
and
aam
add
clc
sub
and
sub
push
mov
imul
or
mov
lea
xchg
dec
or
inc
ret
xor
popf
pusha
cltd
movl
and
push
pop
loope
pop
mov
adc
imul
xchg
mov
mov
cmp
cvtps2pd
mov
or
bound
push
arpl
imul
fidivrl
gs
les
cmp
mov
jb
lcall
dec
inc
imul
add
xchg
jge
cmp
dec
add
push
movsb
sub
aas
hlt
push
movsl
jge
adc
mov
sbb
or
or
push
jbe
and
push
insl
jge
pop
test
xlat
cwtl
pop
add
scas
add
mov
ss
and
rcl
mov
push
repnz
mov
dec
test
jg
adc
pop
push
subb
sarl
fcomps
add
stos
add
pop
icebp
cmp
push
pop
push
mov
scas
pop
shlb
xchg
xor
aam
into
out
orl
fadds
in
push
jb
cmp
pusha
jl
ret
pop
add
dec
and
pop
repnz
dec
dec
mov
and
push
cmpsl
and
dec
aad
add
inc
lea
mov
aas
leave
jp
loope
push
lcall
push
inc
fildll
and
push
mov
aam
add
pop
fs
test
xor
fsubp
sbb
in
sub
inc
imul
push
inc
inc
cmp
pop
cmp
cmp
jg
andl
das
xor
mov
mov
das
loopne
adc
sub
cmpl
push
lret
fiadds
rcl
stos
xor
mov
cmp
ja
add
enter
data16
inc
jae
jl
or
adc
fcoms
pushl
mull
int
in
in
sarb
sbb
out
and
add
cltd
testl
adc
rcrl
js
in
ret
add
or
adc
and
or
xor
jne
inc
sbb
inc
push
pop
inc
repnz
std
data16
add
aam
pop
xchg
sub
cmp
jbe
lds
jl
sbb
sub
dec
push
mov
xor
adc
shll
cmpb
add
add
int3
jl
xor
jb
mov
pop
push
or
add
add
add
rol
jg
aas
jo
cmp
and
sbb
pop
dec
sbb
pushf
sbb
dec
jo
xor
and
xchg
loopne
sbbb
push
push
add
les
loop
mov
inc
lahf
into
pop
jg
movl
lahf
fs
pop
jl
testb
or
xchg
xchg
or
jecxz
xor
adc
push
loopne
adcb
xor
inc
movl
int3
push
addl
sub
shlb
mov
scas
mov
mov
repz
loope
fdivs
pop
xchg
flds
sbb
stos
mov
mov
gs
mov
outsl
andb
sbb
and
mov
jle
dec
jle
sbb
cmp
jae
icebp
pop
jne
inc
mov
lret
cmp
jg
ja
loopne
push
dec
shl
add
sbb
lock
pushf
les
push
adc
and
add
fnstenv
cmpsb
jmp
and
mov
outsb
fmuls
push
mov
adc
adc
stc
inc
cmpl
dec
or
ror
push
pop
cmp
adc
mov
push
mov
ja
lods
xchg
fisttpl
or
pusha
cwtl
addr16
test
mov
inc
aaa
les
sbb
dec
dec
mov
xor
mov
adc
or
movsl
xor
and
mov
mov
add
or
and
cli
inc
shlb
testl
imul
loope
add
adc
mov
addr16
js
scas
subb
dec
pop
mov
pop
je
mov
sbb
ret
add
adc
add
xchg
repnz
push
subl
push
sbb
pop
jnp
or
je
xchg
je
mov
arpl
fs
sbb
jmp
outsl
or
sub
cmc
rcl
xchg
push
testb
roll
xorl
and
inc
sarb
repnz
mov
pusha
lret
cli
add
push
or
movsb
pop
adc
pop
pop
cmp
cmp
leave
or
jmp
dec
dec
je
dec
jne
push
add
and
lods
ja
fcoms
adcb
or
sbb
cmp
inc
xor
jmp
adcl
dec
incl
push
sub
out
cmp
mov
aaa
les
mov
pusha
out
cli
inc
cs
arpl
mov
loopne
inc
dec
add
pop
movsb
add
or
movsb
pop
inc
stos
add
ja
loope
inc
sbb
pop
xor
les
or
shll
lahf
in
adc
sbb
mov
inc
dec
pop
pop
mov
push
cli
push
jb
arpl
popf
add
push
or
cmpsl
pop
and
rolb
jmp
add
leave
add
mov
xchg
push
shl
mov
jp
cwtl
sub
add
and
sbb
pusha
dec
pusha
lods
jne
add
sub
cmp
les
sbb
mov
add
shrb
push
mov
cwtl
xor
jle
es
push
xchg
out
mov
pop
cmp
ret
xor
pop
and
mov
add
dec
pop
fsts
sbb
adc
inc
dec
pop
sbb
leave
or
rorl
stc
push
mov
and
mov
mov
out
add
and
or
cmp
mov
mov
and
pop
fcompl
fs
ljmp
pop
jle
dec
cmp
mov
les
inc
add
dec
sub
inc
sub
jne
add
xchg
cmp
rcll
or
jp
in
test
xchg
aas
int3
jg
enter
jg
add
xchg
punpcklbw
cmpsb
ret
cmp
pop
mov
lock
or
push
push
or
out
negb
test
mov
or
hlt
adc
jne
adcb
lds
out
nop
lea
adc
in
mov
and
cmp
and
jge
pushl
ret
add
dec
jg
adc
orl
jg
cs
push
sbb
adc
loope
and
fdivrl
and
xchg
and
call
sahf
jb
push
jge
jb
cwtl
mov
mov
call
push
pop
xor
aaa
pop
xchg
and
pushf
and
adc
push
cmp
push
jae
scas
add
jno
and
sbb
test
jns
inc
bound
and
ss
mov
gs
push
or
adc
les
fdivs
inc
lret
push
sub
stc
pop
sti
insb
push
sub
add
and
mov
shrl
ss
cmp
pop
pop
mov
das
lock
enter
je
cmp
adc
cmp
jb
mulb
push
movb
xchg
jl
nop
add
rclb
js
adc
adc
push
jmp
inc
ss
pop
mov
sbbl
cli
mov
jb
cmp
jbe
xchg
icebp
clc
push
push
or
loope
push
pusha
into
in
push
mov
inc
lret
shr
jmp
das
aam
dec
pop
xor
insl
aad
aad
loope
jmp
adc
orb
push
push
mov
and
dec
mov
adc
fdiv
shlb
pop
es
dec
push
jmp
inc
jo
push
inc
pop
pop
nop
nop
or
ret
push
iret
pop
jg
xlat
jp
fs
xchg
mov
mov
push
dec
or
pop
mov
lret
ret
or
or
imul
inc
inc
stos
fstpl
or
push
push
jge
mov
sbb
push
int
add
add
aas
nop
adc
xchg
add
add
cmp
rorb
inc
lcall
xchg
std
iret
or
and
xor
fldz
aaa
pusha
cmovo
push
inc
push
shlb
mov
lods
or
xlat
ljmp
sub
and
aam
cwtl
lcall
stos
movsb
pop
lahf
je
pop
and
fld
fxch
fistpll
fadds
fildll
add
popa
shl
cmp
jmp
pushf
jns
fstps
icebp
aaa
icebp
xor
ret
lods
ss
sub
das
fsubs
jbe
imul
inc
add
lods
mov
sbb
les
data16
jecxz
push
mov
xlat
inc
enter
jmp
leave
or
xor
or
in
shrl
cmp
sbb
pop
add
nop
push
jmp
xor
jg
add
inc
cmp
inc
ss
lock
fmul
and
cmp
pop
outsb
adc
mov
test
ss
mov
test
js
add
addr16
shlb
pop
dec
enter
int3
sub
fdivs
pop
and
xchg
or
sbb
cmpsb
div
dec
cmpsl
add
cmpsl
dec
movsb
cmp
inc
push
in
orl
or
mov
mov
inc
enter
lock
inc
fmuls
test
cld
or
in
pop
and
in
push
add
scas
xchg
or
fcoms
jno
shll
addb
lods
rcll
nop
cmc
and
dec
inc
mov
cmp
jge
or
lods
add
xchg
sbb
dec
fcmovb
add
shll
mov
rcr
or
test
and
push
cld
and
add
inc
xor
cmp
pop
cmp
dec
in
push
movl
mov
pop
orb
mov
cmpsl
mov
ret
mov
or
jne
or
or
xor
jnp
inc
popa
pop
jl
sub
lcall
jnp
and
in
inc
adc
or
inc
adc
and
mov
add
pop
adc
push
pop
mov
subb
or
jae
add
call
out
pop
or
ret
sbb
mov
or
lahf
add
push
in
add
sti
jb
in
mov
popa
push
ret
shll
push
ret
jne
push
fmuls
dec
dec
or
aas
pop
shlb
mov
insb
add
shr
xor
mov
cmpb
mov
xchg
pop
pushf
fcompl
rclb
cs
test
and
jns
fsubr
outsl
mov
sbb
aam
xor
les
xchg
into
test
andl
gs
adc
pop
add
in
fsubr
cmpb
jl
testl
push
jno
pusha
xor
and
fs
dec
jo
js
or
jl
in
xchg
mov
fsubr
adc
inc
dec
sbb
emms
jge
jl
adc
nop
adc
shlb
mov
mov
sbbb
test
xor
push
sbb
sbb
lret
das
inc
add
push
fwait
push
and
fisttpll
jb
les
fprem
enter
adc
cmp
mov
sub
add
add
roll
push
xchg
loopne
arpl
addr16
rcrl
or
sub
push
aas
repnz
pop
mov
inc
adc
roll
insb
mov
or
add
je
nop
outsl
mov
enter
aam
enter
adc
add
xor
mov
cmpsb
or
in
cwtl
icebp
sbbb
sti
int3
adc
and
adc
adc
bound
adc
test
cwtl
and
push
popa
cmp
inc
dec
sbb
mov
pop
insl
clc
mov
inc
xor
sbb
and
insl
fs
out
ret
dec
cmp
inc
mov
imul
cmpsb
dec
leave
push
fstpt
cwtl
cmc
or
sub
pop
int3
push
lds
aam
push
popa
dec
push
sub
in
adc
inc
xchg
sub
push
dec
or
jno
xchg
or
inc
cwtl
bound
imul
in
loopne
jo
mov
data16
repnz
and
cltd
jne
and
xor
pop
test
cmpl
mov
in
adc
sub
test
out
sub
mov
pop
in
and
pop
jbe
mov
hlt
mov
inc
pushf
xchg
shll
mov
aas
push
inc
sbb
in
inc
cwtl
xor
imul
dec
outsl
add
mov
or
popa
mov
loopne
or
or
xchg
or
jmp
xchg
or
pop
stos
ret
movsl
cld
movsb
add
call
inc
shl
sbb
dec
insl
pop
rol
sbb
jmp
push
xor
cmp
sbb
gs
lock
fildll
cmpsb
stos
adc
add
stc
fiadds
adc
push
xchg
pusha
lds
out
nop
pandn
sub
sti
inc
or
jecxz
shlb
or
mov
imul
mov
dec
push
sbb
inc
push
in
inc
and
sbb
add
mov
push
adc
pop
imul
mov
adcl
jecxz
outsb
inc
add
movsb
push
inc
or
cmp
push
pop
push
arpl
jno
push
mov
mov
push
xor
sbb
push
xor
fisttps
pop
mov
ret
mov
cs
jne
dec
pop
and
aad
in
loop
inc
push
adc
jns
pusha
mov
sti
and
sub
ljmp
dec
xchg
sbb
xor
xor
sbb
fldcw
mov
jmp
and
clc
addr16
mov
in
or
sbb
in
add
pop
inc
xchg
push
rorl
jl
jns
push
repnz
sbb
add
and
add
addr16
in
subb
or
or
or
or
in
add
sbb
xchg
movsb
sti
cmp
iret
or
mov
xchg
clc
js
adc
pop
stos
dec
mov
dec
mov
cmc
mov
xor
mov
or
cwtl
and
in
imul
mov
mov
ret
cmp
lock
test
jmp
mov
lds
mov
test
aam
movsb
gs
mov
or
cmp
nop
dec
or
or
nop
dec
or
or
jmp
and
enter
dec
leave
or
dec
pop
mov
and
cwtl
mov
lods
add
mov
mov
adc
push
and
adc
nop
ss
pop
sub
mov
loope
pusha
pop
jb
fistps
or
ret
sbb
addb
mov
add
addl
lock
and
daa
push
roll
sbb
pop
loope
dec
pop
push
loope
mov
xchg
inc
mov
jecxz
scas
adc
or
and
sub
popa
push
and
mov
sub
mov
sub
mov
int
push
lds
subb
adc
and
or
enter
or
or
or
jo
cmp
ret
jne
fldt
jae
test
add
dec
fsubs
sbb
cmpb
jle
test
das
mov
xchg
pop
xchg
test
inc
dec
jno
ret
jb
out
mov
jnp
adc
pop
insl
call
bound
repnz
pop
aam
fsubrs
andb
push
sub
cmp
movsb
xorb
ja
movsb
and
inc
inc
andnps
xchg
push
lds
adcl
inc
pop
enter
insb
xchg
cmpsb
mov
mov
or
pop
sub
andb
inc
lds
adc
mov
enter
mov
inc
sbb
dec
test
adc
out
and
sub
les
sbb
in
cld
call
push
sub
cmp
in
or
pavgb
add
mov
jl
cmp
fwait
mov
inc
movsb
aaa
mov
xchg
mov
jnp
inc
or
sbb
push
cmp
xor
adc
sbbl
adc
add
mov
das
push
add
inc
cmp
lret
and
xchg
arpl
jne
pop
jge
out
inc
cs
movsl
or
push
jne
adc
rcl
loopne
xor
mov
mov
push
arpl
fcoms
mov
out
pusha
xor
arpl
mov
xor
jbe
jo
mov
inc
xor
mov
test
je
mov
aaa
adc
and
or
xor
add
or
push
fadds
mov
js
xor
xor
add
inc
lret
imul
arpl
dec
cmp
inc
or
filds
lret
add
jb
fbstp
sbb
add
xorb
add
rclb
xchg
popa
stos
adcl
push
jns
xchg
mov
test
rcll
add
stc
xchg
push
bound
aad
loop
pop
or
ret
scas
cmp
inc
pop
das
jmp
xorb
xor
and
fimuls
int3
pop
mov
les
in
aam
rolb
dec
or
aad
sbb
inc
int3
cmp
push
loop
aam
enter
adc
mov
and
mov
in
arpl
dec
add
test
xchg
ss
inc
les
mov
ss
inc
jb
nop
mov
add
xchg
std
pusha
insb
leave
add
or
xchg
pusha
xlat
adc
cmp
jg
inc
jle
mov
jge
pop
xlat
cmp
add
movsb
jmp
pop
arpl
dec
push
fcoms
test
icebp
aam
fdivrs
dec
leave
loopne
or
in
xchg
rcl
aam
sbbb
sarb
aaa
rorb
cmp
insl
rclb
xor
add
mov
enter
inc
popa
adc
daa
xchg
sub
pop
fcomps
unpcklps
sbb
push
test
enter
sbb
cmp
mov
cmp
cltd
jbe
adc
mov
test
loop
jmp
and
mov
cli
jae
scas
sbb
lret
cs
add
jl
orb
xorb
imul
fstpt
sbb
add
enter
mov
add
add
pop
add
dec
add
nop
sub
ja
and
test
sti
addb
enter
test
mov
loope
test
or
into
adc
cmp
or
in
call
fs
mov
xchg
add
fsubrs
xor
xor
cmp
imul
or
xchg
add
ss
cmp
scas
sti
prefetcht2
inc
pop
ljmp
and
or
inc
push
cmp
fwait
or
bound
jo
fbld
rorl
pushf
mul
adc
sub
es
testl
clc
jp
adc
pusha
add
ljmp
lock
pop
adc
dec
js
jmp
jb
mov
jbe
cmp
dec
inc
xlat
inc
mov
cli
ror
arpl
push
notb
imul
xchg
sub
lds
rorl
and
call
test
and
push
jo
stc
pusha
inc
js
movsl
mov
xor
sbb
call
cmc
dec
push
pop
es
cmc
test
adc
mov
xor
lock
js
cmp
imul
pop
pusha
inc
push
xchg
popa
inc
push
in
mov
inc
pusha
in
add
dec
lret
pushf
outsb
sbb
dec
pushaw
sbb
test
or
add
or
cmp
add
mov
loopne
and
sbb
fucomi
test
push
pop
sbb
inc
shll
in
inc
shlb
shlb
cmp
push
mov
add
mov
add
cltd
nop
inc
sti
or
mov
sbb
cmp
mov
push
add
xchg
scas
popa
test
shl
imul
and
shrl
xor
fdivrs
xor
pop
js
xchg
ret
sub
fwait
mov
js
push
call
call
add
in
xor
xchg
je
push
xchg
push
add
xor
dec
insb
adc
imul
xchg
cmp
push
sub
int3
mov
imul
icebp
rolb
dec
push
nop
fmul
dec
pop
fsubrs
push
aam
loope
ficoml
and
sub
adc
or
lods
pop
jno
in
sub
or
xchg
sbb
dec
scas
pushf
add
pushf
cld
dec
and
and
inc
dec
rcl
das
loope
imul
call
inc
pop
cwtl
sbb
ret
enter
test
lock
sub
mov
enter
and
adc
cwtl
sub
in
or
push
fcoms
int3
gs
push
pusha
inc
pop
not
adc
popf
loope
cltd
push
pop
jb
jmp
orl
shrl
aam
rcll
mov
inc
and
xchg
mov
push
adc
gs
enter
ret
arpl
jmp
inc
les
rcrb
call
or
in
sbb
mov
stos
inc
xchg
pop
mov
fsubrl
dec
es
shlb
push
or
xchg
jne
xor
in
in
adc
cmp
cltd
or
pop
dec
lds
cltd
fisubl
test
loopne
push
adc
jno
and
pop
sbb
cvttps2pi
or
test
inc
push
inc
jmp
push
sbb
das
test
sub
shll
inc
cmpl
shll
cs
test
add
mov
push
mov
inc
ljmp
punpcklwd
ret
gs
es
pop
dec
mov
mov
mov
lods
lods
xchg
add
and
enter
or
mov
mov
add
mov
scas
jge
add
mov
insb
and
leave
and
stos
pushf
add
sub
nop
rcl
adc
popa
mov
sbb
and
aad
push
mov
cwtl
sub
jmp
sti
call
or
nop
and
mov
sbb
jb
js
test
dec
imul
fs
xchg
xchg
subb
in
lea
xchg
test
push
inc
sbb
push
jnp
lea
adc
mov
adc
inc
pop
nop
jo
push
jae
pushf
addb
push
jge
mov
xor
inc
insl
pop
fimull
gs
mov
and
dec
rorb
adc
lods
fisttpll
inc
adc
jb
inc
push
shlb
adc
cmp
sub
xchg
mov
mov
dec
dec
or
and
cmp
push
and
mov
push
inc
fisubl
dec
jecxz
mov
xchg
push
leave
adc
xor
mov
mov
push
jb
mov
movsb
jge
and
test
adc
xchg
push
adc
iret
dec
xor
sbb
adc
adc
adc
xchg
xchg
or
jge
or
sbb
rcl
mov
sub
shlb
faddl
mov
adc
mov
fcomps
and
adc
pop
jne
scas
mov
loope
shld
enter
xchg
sub
sti
cmpsb
dec
arpl
repz
lods
fsubs
inc
lods
inc
or
int
ret
mov
fdivs
lea
adc
mov
sbb
add
jmp
inc
pop
xor
cwtl
aaa
dec
pop
sbb
je
nop
insb
stos
gs
idivl
test
mov
push
scas
pop
in
insb
adc
mov
push
insl
rorl
jbe
sub
dec
dec
xor
and
xor
xor
and
cmp
sbb
and
dec
and
xchg
dec
xor
sub
sbb
pop
scas
and
inc
push
fdivr
pop
das
sbb
add
sbb
stos
mov
fdivl
or
lods
aad
ret
or
sbb
xor
and
pop
pop
push
or
push
add
push
xchg
icebp
test
rcrb
das
cwtl
mov
mov
fmuls
movsl
or
jne
xor
call
rolb
jne
push
enter
fs
lods
test
push
or
les
test
enter
movsb
pop
and
push
pop
xor
push
leave
les
pop
cmp
sbb
push
shrb
pusha
gs
bound
adc
cmpsb
rolb
int3
mov
outsb
pop
int3
rcl
pop
mov
jg
push
and
aaa
sbb
dec
dec
aad
popa
sub
pop
pop
adc
sahf
or
mov
add
ret
dec
rorb
lods
cmp
aas
xor
jns
inc
mov
enter
inc
mov
and
cmp
aam
inc
fdivs
clc
or
enter
jo
rolb
inc
test
xor
adc
adc
arpl
inc
push
jne
insb
mov
mov
push
call
add
out
call
xchg
push
movl
adc
mov
mov
std
inc
cmp
insl
outsl
test
fadds
test
movsb
fwait
mov
mov
push
cltd
jo
and
es
xchg
mov
dec
adcl
cmp
add
lea
nop
or
mov
aas
lods
and
add
aam
inc
jo
add
test
inc
add
fsubl
bound
adc
fs
in
push
lods
add
xchg
inc
cmp
cwtl
cwtl
and
add
jbe
leave
push
and
leave
mov
push
dec
jne
or
push
and
je
notl
sbb
enter
sub
lret
dec
sbb
or
pop
mov
or
sbb
ja
inc
pop
add
fldenv
inc
pop
xor
jne
rcll
jmp
push
sub
push
mov
in
jns
adc
adc
xchg
pop
cmp
adc
sub
in
fldenv
and
cmpsb
in
push
imul
adc
add
or
mov
or
imul
xor
daa
and
jne
jno
push
lea
mov
add
inc
scas
or
test
insl
xchg
mov
insl
adc
dec
loopne
jbe
cwtl
inc
lret
out
test
in
lock
stos
inc
push
xor
pop
aam
outsb
rorb
jb
mov
das
pop
aam
mov
aam
loopne
fsubr
fcomps
aad
add
enter
or
add
nop
aaa
jecxz
fistps
xor
int3
aas
adc
push
adc
mov
adc
mov
add
cmpsb
xchg
xchg
lock
lcall
cmp
adc
popa
adc
pop
xor
aas
xchg
push
test
fbld
jmp
jge
nop
out
lods
add
push
dec
dec
ficompl
fs
dec
je
lods
sbb
mov
adc
cmp
in
nop
icebp
lods
sub
xchg
push
test
xorb
fcmovne
and
mov
jnp
xchg
subb
dec
jb
cwtl
pop
nop
dec
dec
dec
outsb
bswap
les
lods
movsb
pushf
xchg
jb
cwtl
fdivl
dec
jb
dec
test
pop
aam
push
cmp
inc
shll
mov
imul
in
adc
sub
pusha
mov
mov
cmp
bound
rcrb
adc
sbb
mov
jmp
cmpsb
dec
imul
insl
shrl
movsl
push
icebp
in
push
pop
jecxz
test
jno
lods
and
lods
dec
scas
mov
neg
push
push
shll
inc
push
enter
or
push
loope
mov
dec
inc
xchg
lahf
mov
add
mov
push
inc
sarl
inc
pop
or
jge
add
cltd
inc
inc
mov
rorb
stos
xchg
loope
jne
add
jecxz
mov
jbe
mov
add
inc
xor
sub
aam
lock
push
pop
xor
jb
jb
add
mov
cwtl
mov
lods
aaa
adc
rolb
subb
adc
shl
mov
rclb
shll
and
popf
and
cmp
push
das
ltr
fdivs
push
cmpsb
pusha
cmpsl
pop
push
cmpl
pop
sbb
mov
leave
adc
inc
imul
aaa
cmp
stos
and
leave
shlb
pop
dec
movsb
stc
popf
ss
adc
lret
mov
cwtl
pop
cmpsl
insl
mov
movsb
cltd
incb
cltd
sub
dec
inc
add
pushf
dec
push
jo
and
sub
mov
add
jns
cltd
push
sub
adcb
dec
adc
je
inc
xchg
inc
mov
test
int3
sbb
push
lea
xor
call
cs
dec
inc
sbb
outsl
loopne
mov
adc
pop
les
call
or
stos
sub
popa
push
testl
dec
aad
iret
pop
mov
or
test
test
mov
jnp
add
mov
sbb
lods
lods
xor
or
sbb
xor
and
xor
pushf
mov
mov
adc
xchg
rclb
rclb
xchg
dec
stc
les
int3
sbb
push
ret
movsb
test
enter
jl
cltd
fiaddl
rclb
dec
es
xchg
ja
or
push
xchg
inc
adc
dec
ror
aas
xchg
push
test
mov
mov
xchg
sbb
int3
pushf
lods
xchg
sub
adc
jne
jo
leave
lds
sub
add
sbb
movsb
adc
mov
cmc
push
xchg
add
add
push
shrl
repnz
repz
pop
pop
ret
mov
sub
je
dec
inc
dec
repnz
inc
inc
das
push
movsb
and
pushf
xchg
or
inc
mov
movsb
push
and
xor
mov
pop
lods
xchg
sbb
or
stos
push
mov
std
jo
cmpl
mov
je
jo
lock
int3
popa
sbb
or
cmpb
test
pop
fcoms
xor
or
dec
fimull
dec
fwait
in
in
adc
push
jnp
pop
and
adc
imul
cmp
jg
cmp
in
mov
leave
fists
cmp
and
and
sub
push
shll
mov
adc
clc
mov
or
cltd
add
push
xor
test
sar
xor
repz
enter
icebp
adcl
imul
int3
push
rcrb
cmp
pop
orl
aad
inc
jo
and
adc
es
and
jo
stos
mov
out
adc
xchg
and
fsubr
call
pusha
test
sub
inc
add
fwait
loope
call
out
push
aas
in
pop
hlt
popf
das
aas
dec
xor
mov
inc
mov
je
and
mov
ret
scas
outsl
frstor
sbb
out
mull
inc
int3
dec
inc
push
add
add
fsubr
mov
adc
out
xchg
sub
add
sti
movsb
adc
nop
mov
addl
add
xor
xor
and
jecxz
cwtl
subl
cmp
pop
leave
xor
sbb
sbb
sub
push
test
mov
repnz
adc
testl
movsb
subl
cmp
incl
sbb
movsl
adc
sbb
test
in
imul
lcall
jmp
test
lods
aaa
push
insb
inc
xchg
mov
pop
jnp
or
or
pop
mov
pop
dec
pushf
or
rolb
add
adc
sbb
pop
inc
inc
xchg
ret
push
test
push
sbb
insl
adc
fcomi
popa
push
lods
lods
enter
test
push
jno
out
xchg
pop
add
push
and
in
mov
or
xor
sbb
sub
js
icebp
and
or
repnz
jmp
or
mov
sub
and
ret
xor
std
xorl
inc
sti
pop
dec
or
or
icebp
shr
and
adc
imul
mov
and
call
loopne
cmp
testl
sbb
in
nop
pop
bound
adc
inc
cmpsb
lea
adc
xchg
sbb
cmpsl
int
mov
scas
test
cwtl
gs
inc
sahf
cmp
je
cmp
movb
add
ss
inc
add
mov
push
in
or
enter
std
add
arpl
xor
xor
fs
xor
jo
cltd
in
xor
iret
xchg
mov
add
xor
sub
adc
leave
cmp
mov
mov
imul
dec
pushf
sub
adc
mov
fdivrl
fdivrs
int
mov
dec
jnp
imul
and
sbb
enter
nop
xchg
xchg
inc
mov
add
ljmp
jno
inc
mov
fdivs
ret
inc
add
or
std
push
ret
pop
imul
cmpsl
xor
or
or
push
dec
add
or
xor
inc
push
adc
dec
es
mov
mov
movsb
icebp
lods
mov
add
dec
cmpsl
or
push
mov
mov
cmpsb
pop
arpl
jmp
aaa
dec
jo
je
bound
das
test
js
pop
inc
scas
push
insb
imul
mov
pop
inc
aas
dec
jnp
xchg
ret
push
into
push
imul
or
mov
jb
mov
push
push
fldt
stc
insl
mov
mov
sbb
or
xor
in
nop
lret
mov
cs
sbb
add
mov
in
pop
jecxz
lcall
test
xor
clc
mov
ljmp
fstpl
subl
mov
fdivrs
movb
pop
cmp
xchg
inc
jnp,pt
xor
push
and
enter
push
mov
lods
sbb
jb
mov
or
and
dec
cmpsb
mov
xchg
xchg
push
and
mov
iret
xor
push
xchg
rcrb
pop
push
sbb
xor
push
mov
neg
mov
sbb
fs
push
adc
and
lcall
movsl
jge
inc
pop
sbb
mov
pusha
insb
push
pop
divb
adc
jge
adcl
push
or
insl
push
push
ja
nop
pop
inc
xor
push
mov
pop
xlat
fists
add
inc
pop
out
cld
adc
testl
sahf
sbb
addb
cwtl
test
mov
sub
mov
cmp
inc
bound
fsin
dec
push
inc
add
roll
fistps
repnz
out
inc
lds
inc
cld
aas
xor
add
mov
or
adc
fisttps
mov
jns
mov
add
orb
jnp
mov
mov
mov
stos
adc
mov
gs
xchg
adc
push
or
cmp
cld
outsl
cmp
adc
lret
pop
mov
add
into
pop
adc
test
dec
dec
repz
push
mov
rorb
dec
and
or
je
test
cld
enter
push
gs
jb
popa
fs
je
arpl
jne
jb
outsb
je
gs
fcmove
push
jnp
aas
rdpmc
add
smsw
cmpb
rcl
jae
adc
push
and
insb
outsl
arpl
imul
push
sarb
add
insl
adc
decl
or
inc
inc
outsl
jb
js
je
jg
mov
jae
add
or
outsl
add
add
add
ja
sahf
insb
add
jne
xchg
je
imul
fstp
jb
dec
push
add
add
xor
or
mov
and
add
fdivr
push
add
aas
push
add
dec
pop
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
rcl
xchg
add
xchg
or
cmp
loopne
je
repz
adc
das
sbb
adc
adc
push
sbb
sbb
iret
repz
sbbb
sbb
sahf
cmpsl
stc
mov
das
push
lahf
push
imul
lock
jnp
cmpsl
xor
push
jns
jp
iret
sarl
cld
sub
js
pop
lahf
push
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
imul
je
idivl
xor
repnz
dec
inc
mov
sbb
pusha
daa
mov
ret
mov
daa
outsl
dec
and
inc
jo
pop
inc
das
ss
add
pop
imul
mov
fcmovne
jns
out
out
adc
iret
and
arpl
push
outsb
inc
pop
pop
jp
dec
xlat
mov
and
scas
push
imulb
dec
jne
dec
mov
shll
ds
neg
mov
insl
arpl
mov
jg
sbb
xor
dec
cmp
cmp
add
jnp
sub
dec
and
jns
add
das
ljmp
scas
das
adc
arpl
bound
mov
dec
outsl
jbe
dec
arpl
ds
popa
sbb
jo
sub
addr16
xor
insb
mov
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
jae
mov
xchg
addr16
fcmove
fdivrl
je
jb
xor
and
jnp
data16
push
gs
sbb
dec
outsl
outsb
and
fdecstp
push
jne
xchg
pop
dec
imul
pushf
inc
aas
add
out
dec
or
jge
dec
jnp
mov
ja
adc
jae
fimuls
adc
popa
insb
outsb
mov
inc
inc
pop
push
and
call
andl
sub
xor
cmc
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
int
rclb
ljmp
insb
jl
pop
pop
pop
pop
test
bound
gs
sbb
push
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
cmp
sub
mov
sub
xor
push
add
fmull
adc
add
add
add
add
inc
push
push
and
push
pop
outsb
add
xor
cmpsb
sub
and
jnp
jo
add
pusha
push
add
inc
dec
out
into
fiaddl
cmp
add
sbb
movq
pop
loopne
neg
test
filds
orb
jg
jge
sar
lret
jno
icebp
pusha
inc
mov
clc
add
js
ret
movsl
add
xorl
fldl
imul
fs
jb
pop
dec
ja
pop
lock
xor
aas
aas
popa
js
scas
popf
jnp
addl
pop
ds
scas
or
dec
push
addb
pop
rcrl
fimuls
xchg
add
es
adcb
data16
sbb
mov
imul
loope
int3
xor
insb
push
or
cmpsb
jo
add
nop
insb
sti
gs
in
push
outsb
imul
and
inc
loop
or
fldl
mov
imul
and
xchg
add
in
cmp
mov
nop
mov
xchg
xchg
ja
and
mov
mov
sahf
xchg
ror
xchg
or
or
inc
scas
mov
lret
hlt
push
cli
mov
pop
lods
mov
enter
add
jmp
jp
sbb
cmp
push
rcl
pop
sbb
push
inc
sub
pop
ja
xor
dec
sbb
dec
inc
dec
inc
xchg
notl
fs
add
adcl
cs
jae
jmp
mov
xchg
je
outsb
inc
insl
xor
sub
icebp
ss
je
xor
push
mov
jne
daa
pop
lea
repnz
addr16
outsl
js
push
xchg
cs
ljmp
insl
jo
jo
and
and
pop
pop
shlb
aaa
insb
les
dec
imul
or
inc
mov
les
cmp
dec
inc
jb
jns
daa
jnp
fdivs
push
jns
mov
clc
push
pop
pusha
inc
insb
and
arpl
je
or
addr16
xorl
fsubrl
push
jbe
mov
jo
or
jb
and
xor
mov
fwait
xchg
pusha
inc
jbe
push
push
sbb
imulb
push
add
and
xor
pop
jbe
popl
inc
imul
jp
cmp
push
orb
lds
mov
push
inc
daa
mov
test
pusha
lock
mov
shll
outsb
mov
lods
jbe
adc
cmp
sub
pusha
insb
call
inc
les
addr16
subl
js
mov
mov
mov
mov
inc
xor
jbe
push
push
push
push
dec
testl
dec
mov
xlat
dec
push
lods
lea
stos
popa
fisttps
pop
mov
insl
ds
or
jb
push
imul
call
push
lds
jg
sbb
jae
inc
in
rorl
push
xor
add
je
inc
adc
mov
subl
stos
push
jne
push
or
cmp
je
outsl
xchg
daa
cmp
mov
popw
pop
cmp
push
jl
cmp
or
ds
and
out
push
sub
es
ja
out
mov
sub
sub
addr16
mov
add
sub
push
jnp
cmp
or
sbb
das
push
jb
and
and
adc
xchg
ds
aad
mov
jne
stos
addr16
cmp
add
pop
rcr
ss
gs
imul
lock
addr16
dec
sbb
mov
xchg
sahf
inc
pop
sub
jae
inc
jo
sub
pop
jbe
push
out
sub
repz
push
addb
xor
sbb
stc
cmp
adc
add
sub
fiaddl
push
rolb
mov
les
mov
repnz
jns
test
movsb
mov
sahf
outsb
cwtl
inc
xchg
nop
cwtl
mov
out
iret
push
push
mov
jns
js
jo
push
jns
pop
pop
push
push
out
sahf
out
dec
inc
cmp
repz
and
add
sub
sarb
cmp
andb
jns
out
add
sub
out
fs
dec
sub
jns
and
call
iret
repz
push
and
in
data16
cmp
push
xchg
push
shlb
push
sbb
or
sub
mov
add
adc
and
rolb
and
add
les
test
add
fadds
in
jg
add
sbbb
cmpsb
fs
jne
push
add
sbb
add
add
inc
mov
inc
ja
push
xchg
push
jbe
add
jnp
lea
or
push
pop
mov
pop
fildll
lea
jle
add
incl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
std
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
test
and
add
ljmp
push
sub
push
jno
popa
push
adc
movsl
test
lcall
gs
popa
inc
pop
aas
out
and
jns
push
xor
add
push
ljmp
dec
mov
jo
dec
arpl
fdecstp
push
push
insb
fs
sbb
scas
push
je
xor
test
shrd
pop
lock
sub
add
inc
adc
push
call
and
xor
push
dec
inc
dec
cmovns
aaa
jae
or
inc
das
push
adc
ret
imull
adc
decl
inc
call
rclb
mov
fidivs
inc
rcrl
inc
jnp
inc
loop
mov
ds
pop
adc
std
pop
jns
clc
lret
sbb
jb
jge
arpl
cmp
inc
mov
scas
jp
jno
in
fstl
repnz
or
mov
and
cmp
dec
imul
aas
iret
lret
add
inc
mov
mov
sub
testl
inc
sbb
pop
jns
ds
xor
lcall
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
mov
jmp
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lret
cld
lcall
imul
or
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
das
js
sahf
mov
leave
mov
adc
scas
test
call
lods
dec
lock
xor
jle
into
jb
dec
in
or
icebp
pop
pop
repnz
cld
addr16
adc
es
sbb
add
scas
mov
pop
jne
and
or
jne
cmp
xlat
lods
mov
mov
or
rorb
fildl
add
cmp
enter
xchg
and
lahf
paddsb
or
dec
jns
out
xchg
ffree
aaa
and
pop
xchg
mov
das
fwait
imul
ret
es
jae
hlt
adc
lret
out
and
data16
scas
add
sub
out
push
test
sbb
bound
pop
xor
fs
femms
fiadds
jne
sti
or
sbb
mov
jmp
daa
frstor
rcr
daa
je
xorl
mov
add
push
fisttpl
cmp
imul
push
xchg
lret
xchg
push
cmp
fcomi
aad
mov
add
cs
sbb
or
sub
inc
and
jb
ret
arpl
fidivs
jae
insl
jle
xorb
cmpsl
mov
and
cld
push
push
adc
jg
xchg
jo
cmp
repz
mov
push
fsubr
fbstp
out
mov
push
mov
jb
push
mov
jbe
fimull
popa
mov
add
add
mov
pop
ret
jae
sbbb
sti
sbb
sbb
dec
jns
outsb
xlat
cs
js
dec
jg
jg
push
dec
dec
sub
lock
adc
mov
mov
jne
aas
cmpsl
fidivrl
inc
jae
cld
cmp
xchg
insl
mov
shl
outsl
cmp
out
sub
lcall
insl
pop
das
addr16
iret
jb
ljmp
fs
data16
gs
gs
out
sbb
fs
outsb
loopne
ss
and
xor
xor
push
imul
movsl
xor
out
push
adc
jnp
cs
cmp
aaa
imul
add
add
pop
add
push
sarl
pop
cmp
jb
imul
push
rorl
call
das
push
inc
mov
out
add
iret
gs
lods
mov
ficoml
popa
or
add
mov
add
mov
js
imul
shll
push
xlat
je
dec
mov
in
cmp
ret
daa
and
mov
add
loope
xchg
inc
and
scas
cli
cmp
dec
dec
outsl
pushf
notl
mov
js
and
jp
inc
pusha
push
or
aas
ja
pop
inc
adc
pop
jecxz
jnp
aas
in
loope
pop
dec
imul
les
out
inc
mov
iret
out
es
leave
imul
daa
je
and
fldt
ficoml
aas
arpl
daa
pop
pop
mov
arpl
fistpl
lcall
dec
cmp
jne
icebp
and
ja
lock
pop
cmp
add
inc
xorb
fwait
das
sub
mov
jnp
insl
push
pop
pop
ret
lcall
stos
push
mov
push
adc
jo
scas
out
cmc
adc
add
pop
adcl
add
cmp
pop
das
outsb
cmp
push
mov
mov
inc
lods
popf
jl
ret
insb
push
arpl
les
and
ret
sub
push
sbb
arpl
cmp
or
xchg
cmp
mov
dec
js
jae
aaa
outsb
cmpsl
arpl
loop
cmpsl
and
lock
aaa
pop
mov
testl
add
mov
out
out
pusha
cmp
adc
push
sub
xchg
xor
les
ret
fistpl
mov
sbb
jne
add
dec
out
stos
mov
inc
out
push
mov
popf
cmp
arpl
xchg
call
dec
xor
lock
addr16
xchg
scas
roll
fwait
sbb
mov
sub
xorl
and
das
arpl
fisttpll
pop
push
lret
mov
dec
lret
ds
push
jnp
fwait
pop
pop
and
cltd
test
mov
imul
cmpsl
dec
pop
or
outsl
or
lds
mov
jno
sbb
dec
pop
pop
adc
cs
imull
ja
lods
loope
push
ret
fwait
out
inc
push
inc
mov
loope
pop
mov
jo
arpl
dec
insb
pop
push
jnp
cmpsl
push
addl
add
ljmp
sbb
jnp
ss
adcb
fidivl
adc
jo
pop
ds
je
pop
dec
cmovl
cli
or
or
out
jmp
jae
scas
inc
bound
test
fisubl
pop
mov
ja
out
cmpsl
sahf
push
cmp
xchg
inc
arpl
pop
outsl
bound
adc
push
aas
testl
fiadds
mov
mov
mov
inc
jl
jl
and
pop
ud0
ds
jl
imul
mov
and
and
outsl
gs
push
bound
mov
push
push
das
aaa
mov
addl
out
ret
aad
mov
jae
mov
or
es
iret
push
jo
push
sbb
mov
push
pop
jp
ja
sbb
mov
mov
push
js
dec
lcall
outsb
jo
cmp
pop
arpl
jp
jl
cmp
imul
xor
jl,pn
outsl
lret
jl
push
push
jg
arpl
jns
pop
movsl
loopne
pop
mov
add
sarl
pop
loopne
mov
daa
fs
loope
loopne
mov
imul
inc
cmovge
push
xchg
jl
pop
les
scas
xor
mov
adc
pop
cmp
daa
inc
addr16
and
and
mov
push
sub
push
push
push
insb
sub
xchg
mov
push
mov
sbb
sub
ret
daa
jl
popa
daa
out
sbb
movsl
cvtdq2ps
jns
test
add
jo
inc
out
dec
dec
loop
push
pop
das
loop
test
stos
pop
mov
fwait
ret
aad
filds
stos
pop
scas
xor
imul
xchg
aaa
es
add
insb
inc
sbb
inc
xor
jbe
aas
popa
inc
xchg
les
push
jle
insl
inc
aas
das
imul
or
pusha
mov
bound
push
push
das
insl
jl
loop
xor
sub
lcall
adc
sarl
add
xor
jno
sub
push
in
inc
or
aaa
out
sbb
sub
fildll
call
fs
mov
push
scas
fimuls
dec
pop
jbe
rcll
inc
inc
xchg
pop
inc
cmpb
or
add
dec
mov
cmp
cs
cmpsl
das
or
push
fimuls
incw
outsl
jno
jl
mov
add
push
and
mov
mov
fnsave
daa
push
les
lahf
and
add
mov
xchg
add
sbb
lret
je
js
lock
mov
mov
push
mov
push
ret
jg
add
lar
enter
inc
and
ja
pop
jl
and
std
jl
cmpsl
jge
add
xor
pop
test
rcr
xlat
leave
push
cmp
ss
xchg
in
cmp
in
in
push
imul
fistpl
lds
cwtl
adc
repz
scas
aas
mov
push
mov
sarl
sub
pop
aaa
pop
adc
mov
repz
out
push
call
mov
sahf
test
push
push
xchg
leave
push
adc
push
inc
cmp
pop
jns
in
sbb
mov
cmp
jnp
mov
test
lret
out
cmp
inc
pushf
push
xchg
mov
das
pop
lret
fs
and
mov
pop
inc
iret
bextr
dec
cmp
ret
sub
inc
sarl
push
push
jae
pop
imul
insb
orb
dec
mov
jae
aas
iret
popa
mov
adc
aaa
jecxz
nopl
inc
push
gs
mov
shll
push
popa
jne
or
and
push
dec
bound
mov
sbb
push
pop
movsb
scas
jns
loope
cmp
sahf
xorb
push
xchg
repz
out
mov
mov
imul
repz
out
cli
pop
lret
push
pop
out
repz
jecxz
cmp
mov
mov
ds
cmpsb
into
outsb
cmpsl
push
jecxz
inc
into
cmp
gs
inc
cmp
shlb
dec
push
push
jo
jb
fidivs
popf
mov
pop
mov
and
inc
sbb
jg
lods
xor
and
and
jae
imul
cmp
fs
adc
repnz
or
or
in
fs
mov
jne
je
ss
cmp
pusha
and
cmp
pushw
sarl
nop
sub
ja
and
lods
imul
enter
mov
ss
test
jmp
fcmovnbe
sbb
push
aaa
push
inc
cmp
pop
pop
push
repz
mov
add
inc
mov
sbb
xor
dec
add
jp
pop
out
shlb
jg
push
push
jmp
xlat
adc
in
xchg
jnp
imul
aaa
je
xchg
add
xchg
into
jge
or
mov
dec
cmp
orb
rolb
pop
ss
fidivrs
inc
outsb
mov
int
cs
cltd
inc
iret
xchg
push
orb
push
and
cmp
stos
mov
das
mov
mov
fimull
and
and
fs
bound
xchg
push
mov
xor
shlb
outsb
push
or
push
pop
or
cmp
pushw
sub
xor
sbb
pop
dec
pop
pop
pop
rolb
add
dec
ret
outsl
mov
stos
pusha
xor
push
test
adc
cmpsl
js
adc
push
push
psraw
sysret
dec
imul
sub
outsb
or
aaa
inc
cmp
sub
jecxz
add
push
jecxz
xchg
or
pop
push
sbb
inc
mov
fdivs
pop
imul
add
ret
ljmp
add
and
repz
cmpsb
pop
addl
test
clc
push
adc
and
sub
iret
gs
mov
imul
arpl
callw
fisubs
add
xor
pop
pop
or
xor
lock
arpl
loope
pop
mov
fs
mov
enter
subb
fneni(8087
push
enter
mov
push
cli
addr16
add
adc
incb
mov
fildll
or
imull
int
pop
add
push
lahf
sbb
push
mov
filds
adc
aas
add
movsb
movsl
scas
pop
sti
pop
mov
pop
lahf
cmpsl
add
jo
pop
inc
aas
inc
push
push
lods
inc
cmp
sbb
je
fiaddl
fildll
inc
bound
adcl
jge
sub
or
dec
ja
loopne
adc
scas
mov
fwait
aad
pop
cwtl
dec
iret
idivl
mov
xchg
shll
inc
popa
insl
test
dec
xchg
pop
adc
push
outsl
inc
nop
inc
sub
imul
imull
sbb
mov
das
push
repnz
jns
lds
push
test
mov
xor
fdivrp
and
cmpsl
push
cs
lcall
jo
or
jp
mov
fbstp
lahf
iret
mov
push
add
mov
adc
pop
inc
or
pop
insb
xchg
subl
popl
pop
push
sub
aaa
inc
jno
or
das
mov
xlat
gs
adc
mov
adc
sub
jmp
push
mov
das
lahf
jo
push
inc
pop
daa
push
cmp
push
ja
dec
jns
mov
imul
and
inc
dec
inc
out
pop
rcr
out
jmp
pop
aaa
addb
adc
inc
inc
xchg
lods
daa
shll
pusha
xchg
rol
push
aaa
popf
mov
shrl
jb
push
lret
fs
fisubs
add
dec
inc
dec
pop
out
or
push
fmull
push
add
lahf
jne
mov
inc
outsl
shrb
push
lock
inc
sub
dec
mov
mov
or
scas
pop
rorb
ret
xor
add
cmpl
add
jno
lds
xchg
repz
aas
icebp
orb
mov
or
dec
addl
fs
push
test
dec
jne
arpl
shrl
imul
or
repz
push
movsb
mov
jecxz
push
inc
jb
pop
ss
lahf
push
sti
mov
inc
mov
push
jp
popa
arpl
mov
pop
add
imul
and
insb
xchg
pop
aaa
xor
les
out
das
adc
and
idivl
bswap
jmp
add
push
jle
sub
repz
pop
lds
inc
loop
mov
mov
dec
cmp
mov
inc
cmp
lahf
xlat
mov
xchg
fbld
popa
roll
add
push
pop
sbbl
add
daa
jo
add
dec
sub
movsl
sbb
dec
aaa
imul
test
cmp
mov
dec
rcr
test
stos
push
movsb
inc
pop
mul
inc
mov
or
sub
inc
xor
xor
cmp
cs
jnp
xchg
rcr
pop
xor
sub
mov
xor
dec
rolb
add
outsb
ficoms
inc
psraw
je
cmp
inc
je
or
pop
push
push
jbe
outsl
cmp
loope
dec
lcall
shrl
pop
jg
fisttps
jmp
inc
mov
pop
testb
cwtl
mov
ja
add
ficoml
mov
push
ja
add
cmc
add
xchg
les
lret
jge
outsl
iret
jp
addr16
out
sbb
imul
pop
sbb
adc
sbb
arpl
repz
sub
or
outsl
add
add
sbb
cmp
out
push
mov
scas
dec
pusha
dec
jg
iret
rcll
insb
pop
add
cmp
inc
scas
adc
sub
mov
jnp
loop
inc
insb
mov
ja
pop
push
push
push
mov
int
cmp
mov
insb
pop
add
ss
cmpsl
stc
and
xorb
mov
jno
xchg
imul
filds
lahf
adc
inc
testl
aaa
bound
or
test
adc
push
mov
rcrb
or
jg
pop
ret
xchg
jo
sbb
push
jae
jae
dec
mov
sub
mov
pop
scas
imul
and
pop
scas
add
mov
mov
pop
cmp
nop
iret
jecxz
jo
out
mov
cmp
insl
and
out
ljmp
shll
push
pop
rcll
mov
les
or
scas
aas
pop
adc
fucomi
adc
aaa
out
fildll
and
or
cmp
add
inc
sbb
mov
aas
adc
inc
test
daa
and
cmp
fwait
push
stos
inc
int3
lods
pop
ret
lret
imul
arpl
jg
outsl
repz
ja
jnp
jge
test
data16
xor
js,pn
sub
sbb
outsb
sbb
mov
xor
adc
hlt
xchg
jle
mov
insl
das
aaa
jb
pop
or
jno
add
mov
xchg
out
push
mov
testl
fsubrs
pop
dec
fiadds
or
sbb
mov
inc
pop
sahf
push
mov
sub
push
in
imul
mov
inc
pusha
sub
pop
adc
fsubrl
and
dec
and
in
fcomp
mov
in
push
leave
push
xor
cmpsb
xchg
fcomps
clc
xlat
movsb
xchg
pop
and
sub
pop
dec
and
aad
in
jb
sbb
aam
scas
xchg
test
xchg
mov
xchg
push
leave
and
sarb
mov
and
xor
cltd
dec
pop
in
xchg
push
leave
stos
in
lock
pushf
jns
pop
and
stos
sub
scas
clc
int
test
cld
int3
mov
pop
or
push
repnz
push
sbb
lret
movsl
xchg
add
mov
loopne
idiv
mov
rclb
mov
cmp
rclb
mov
dec
adc
and
pop
dec
pop
movsl
cltd
sbb
dec
notl
mov
xchg
pop
sub
add
stos
add
sbb
push
daa
shrb
add
inc
jb
xchg
iret
iret
dec
or
das
inc
scas
sbb
sub
xor
mov
call
pop
and
les
add
and
test
je
inc
test
push
popa
xor
insl
aam
shl
rep
xchg
dec
sub
rcrl
inc
filds
inc
int
push
imull
mov
aaa
shll
movsl
and
sub
or
mov
push
inc
push
or
insl
xlat
inc
and
sub
or
cltd
or
adc
outsl
scas
adc
stos
addb
dec
es
mov
push
scas
addr16
push
int
xchg
fildll
inc
scas
hlt
push
adc
jg
cmpsl
pop
popa
mov
inc
sub
adc
and
push
jnp
and
push
push
mov
and
or
cmp
rcll
das
or
mov
out
aaa
fildll
iret
aaa
outsl
mov
js
scas
push
or
inc
movl
and
aaa
outsl
jecxz
push
dec
popa
add
lahf
add
adc
outsb
xchg
mov
cmpb
pop
das
pushl
mov
jg
aaa
add
ja
push
test
mov
cltd
call
sbb
sbb
or
popa
xchg
mov
pop
out
movsl
test
cmpsl
inc
addr16
ficompl
xchg
jae
and
fs
imul
sti
xlat
popa
xor
sbbl
daa
push
and
mov
jg
fstpt
outsb
pusha
push
pop
or
sbb
mov
cvtpi2ps
push
or
or
pop
push
fldt
xchg
add
addl
jecxz
sub
pop
out
xchg
jne
addr16
bound
dec
aam
push
je
fs
mov
cs
je
arpl
fidivs
dec
push
jo
inc
dec
jl
cmp
and
imul
fistl
or
mov
or
in
ss
cwtl
mov
bound
jae
js
mov
outsl
dec
js
test
loop
mov
cwtl
mov
test
add
iret
lods
sbb
ss
repz
lahf
das
mov
jae
prefetchnta
adc
fiadds
adc
sbb
out
xor
ja
popf
out
sar
dec
push
mov
xor
cltd
or
xchg
fwait
int
or
pop
or
insb
add
outsb
adc
jns
and
sub
xor
inc
mov
mov
cmp
lret
mov
popa
xchg
cltd
fldcw
shrb
ret
sub
lcall
xchg
pop
adc
ss
mov
pop
sbb
int
push
dec
str
mov
shlb
stc
das
incl
adc
iret
stos
add
push
repnz
fnstcw
mov
cmpsl
push
pop
xor
out
inc
mov
pop
test
out
dec
sti
enter
inc
push
arpl
ds
lods
mov
movsb
push
jb
rorl
call
adc
dec
mov
imul
or
mov
push
xor
lock
inc
imul
das
pop
and
shlb
or
adc
add
or
sub
fdivrs
stos
adc
ljmp
cmp
lds
cmp
xor
xor
out
scas
lea
imul
mov
enter
pop
das
and
cmp
or
adc
xor
push
dec
lods
add
sub
aas
testl
sbb
add
test
outsl
add
inc
sbb
xlat
je
sub
xchg
rcll
xchg
rcl
jae
cmp
mov
dec
shl
sub
dec
imul
pop
push
das
xchg
les
pop
addl
sbb
test
scas
imul
enter
xor
lahf
fiaddl
ja
xchg
mov
test
dec
ljmp
cmc
push
jbe
push
push
es
cs
cmp
jno
mov
subb
mov
out
js
imul
mov
sub
add
insl
cmp
call
stos
inc
xchg
pop
mov
jns
xor
jae
fs
paddsw
dec
lret
into
xor
movsl
jbe
mov
pop
lahf
dec
shrb
out
lds
stos
inc
mov
or
push
or
xor
inc
dec
js
stc
cmp
xchg
mov
into
dec
or
inc
push
jbe
fidivrs
jbe
push
dec
mov
icebp
mov
xor
xor
js
and
xor
cs
lret
icebp
test
ljmp
inc
xchg
ja
retw
xlat
push
pop
sbbl
inc
ja
dec
neg
xor
mov
mov
arpl
fs
data16
inc
iret
cmp
push
dec
dec
daa
jns
mov
push
mov
cs
fucomip
push
shl
packssdw
inc
pop
pop
out
fidivrs
mov
push
es
ss
outsb
pop
clc
push
mov
daa
dec
jb
das
inc
insb
or
es
das
add
jge
sarl
jns
inc
pop
push
sysexit
loopne
jge
mov
cs
sahf
push
out
loope
mov
push
neg
imul
mov
push
scas
push
insl
mov
out
mov
ja
xor
push
jp,pt
ficomps
push
jp
ds
mov
dec
jg
dec
das
xor
fisttps
jp
pop
mov
pop
outsl
dec
xor
leave
rcll
outsl
add
outsl
imul
enter
mov
imul
scas
out
sbb
pop
sbb
sub
or
shrb
addr16
push
sub
shlb
test
xchg
jo
add
jo
sub
daa
xchg
in
cs
xor
or
inc
inc
fistl
jecxz
sub
ja
cli
pop
xor
loopne
inc
daa
adc
add
pop
xor
sbb
pop
mov
lret
lret
pop
and
push
or
bound
scas
mov
mov
push
mov
sbbl
jno
xor
inc
inc
pop
adc
sbb
add
lea
add
popa
add
notb
xlat
or
les
inc
xchg
cs
daa
mov
jp
push
sub
lahf
push
inc
loop
inc
ja
mov
js
jmp
or
sub
mov
outsl
stos
mov
outsb
mov
stos
bound
imul
sbb
push
insb
cmpsb
jbe
xchg
invlpg
cwtl
or
sub
fwait
mov
rorb
outsl
popa
fs
outsl
rol
pop
or
aas
dec
mov
sbb
inc
pusha
and
jnp
lret
cwtl
lea
ret
xchg
pop
xchg
inc
lds
loop
push
scas
je
mov
pop
cmp
add
das
pop
sbb
test
inc
les
das
sub
inc
outsl
xlat
stos
lods
xchg
pop
inc
outsb
daa
mov
add
lahf
adc
scas
fiadds
push
sub
mov
jecxz
sti
pop
sysret
sbb
sub
push
imul
ret
call
jg
ret
inc
sub
sbb
divb
jbe
addl
add
addb
jp
mov
imul
fwait
or
fdivrs
mov
iret
mov
ret
das
jne
mov
add
iret
inc
clc
adc
push
stos
rep
xchg
dec
ror
dec
push
mov
lahf
lods
push
sbbl
sub
cmp
es
push
xor
arpl
jmp
cmpsl
push
pop
pop
rcr
sub
lahf
inc
mov
dec
pop
mov
lahf
pop
push
ljmp
add
xchg
imul
leave
mov
sbb
int3
loope
imul
jle
cmp
mov
inc
mov
add
call
fwait
nop
and
mov
mov
jg
mov
and
mov
add
adc
xchg
mov
pushl
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
testb
sub
sub
mov
mov
mov
ds
pop
sbb
xor
fdivr
insb
jle
jo
fsubs
sbb
lods
call
test
xor
dec
xchg
pop
in
and
mov
pop
adc
adc
pop
push
and
js
pop
xlat
rcrl
jle
cmp
lods
sbb
mov
insl
je
push
add
add
cli
sub
out
inc
pop
lds
mov
sbb
fstps
mov
imul
inc
pop
cmp
sahf
xor
and
adc
xchg
dec
cs
hlt
xchg
cmp
iret
dec
xor
xor
cmp
jae
pushf
les
dec
iret
leave
jae
movsb
xchg
dec
test
push
or
and
pop
adc
xor
mov
mov
add
inc
aas
dec
xchg
mov
sti
or
lea
addb
dec
shrl
stos
mov
and
rol
adc
mov
mov
test
ss
cmp
sub
sub
inc
adc
or
addr16
fildl
pop
out
jno
cmpsb
jp
mov
cwtl
iret
bound
mov
ljmp
aaa
push
imul
incl
bound
je
bound
imul
mov
cmp
add
scas
ljmp
add
mov
push
pusha
xor
push
and
jg
and
imul
scas
imull
cmp
add
imul
xlat
mov
xor
push
mov
xor
inc
dec
mov
push
rolw
loopne
or
pop
outsl
dec
pop
inc
incl
push
rolb
and
out
inc
add
and
xlat
out
mov
pop
mov
mov
pop
dec
or
mov
jle
cmp
jnp
movsl
pop
popf
aam
push
movsl
mov
xchg
mov
xor
jg
sbb
xchg
dec
xor
sub
outsl
rorb
aaa
or
inc
arpl
xor
nop
repz
scas
jle
stc
lcall
es
aaa
pop
stc
jle
in
add
adc
push
sbb
jge
outsl
fs
sub
push
xchg
mov
push
movsl
outsl
xchg
out
jns
jle
push
pop
mov
xchg
cmp
in
ds
pop
mov
fnstcw
out
mov
test
mov
and
mov
add
sub
adc
push
pop
lods
cmp
push
push
je
aaa
mov
pop
test
scas
and
in
xchg
cmpsl
test
dec
push
sahf
xor
out
clts
and
insb
mov
mov
cmpsb
mov
mov
fistl
push
test
divb
xor
jecxz
pop
mov
idivb
mov
cmc
xor
pop
xchg
xchg
sbb
jl
inc
push
dec
scas
mov
jns
iret
mov
imul
dec
ret
jge
sbb
imul
push
xor
out
jnp
jge
insb
fiadds
iret
insb
outsl
pop
lock
nop
out
imul
sbb
das
inc
push
je
lods
repnz
movsb
outsl
pop
add
pop
nopl
imulb
loopne
lahf
scas
dec
lods
xchg
popa
push
jnp
ja
fisttps
scas
dec
xlat
jae
idivl
push
pop
jno
ss
adc
negl
adc
or
ss
es
sti
mov
ja
sbb
filds
push
inc
stos
jo
ss
out
dec
pop
or
pop
push
add
dec
pop
mov
or
lahf
out
sahf
cmp
shlb
cltd
ds
insb
push
push
bound
xlat
mov
jnp
hlt
loope
int
push
and
fwait
out
lahf
cmpsl
fnstcw
imul
gs
repz
je
mov
repz
daa
push
jnp
repz
out
sub
push
orb
lret
in
add
sahf
out
sahf
inc
push
mov
idiv
pop
int3
js
and
jg
dec
sbb
scas
sub
int3
clc
sub
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
pop
in
inc
mov
loopne
mov
push
popa
push
mov
and
lahf
negb
pop
sbb
enter
adc
jg
cmp
iret
pusha
or
cmp
add
xor
outsl
imull
daa
or
mov
xor
cmp
divb
std
ds
imulb
dec
divb
outsb
outsb
pop
popa
fcomps
js
pop
xor
sahf
popa
pop
insl
rorb
cmp
add
dec
inc
shl
jp
push
popa
lods
or
lret
mov
imul
ljmp
cmp
cmp
cmp
push
outsl
inc
jb
popa
je
test
or
test
mov
scas
test
inc
mov
out
data16
pop
push
ficoml
mov
mov
arpl
dec
mov
cmpsl
push
xor
fisubrs
push
push
dec
push
sub
ljmp
adc
pop
sti
jg
sub
or
dec
mov
push
add
or
scas
out
xlat
cmp
xor
push
test
mov
inc
scas
push
or
inc
dec
dec
icebp
mov
incl
movb
xchg
push
in
pop
dec
popa
lods
sbb
dec
cmpsl
or
jl
mov
popa
outsb
jb
pop
sbb
or
das
xor
jle
inc
sub
adcb
jae
inc
and
add
je
push
push
arpl
ds
movl
mov
add
lret
ja
cmp
sysexit
and
mov
daa
ret
shrd
stos
movsl
and
outsl
jecxz
inc
mov
ljmp
jbe
jo
xor
cmpsl
jle
sbb
imul
inc
rorb
jnp
xchg
add
js
jle
cmpsl
sub
cmp
mov
inc
sbb
mov
pop
jb
rolb
data16
daa
sbbb
cmp
push
mov
adc
inc
pop
push
dec
adcl
sbb
aas
sbb
lcall
adc
mov
sbb
gs
xor
outsl
xchg
cs
inc
scas
das
loope
or
dec
push
jae
push
imul
xor
pop
addr16
push
test
xchg
inc
mov
fcompl
ja
iret
fs
dec
and
es
and
mov
pusha
adc
sti
dec
rclb
ja
psrld
dec
fldt
add
lods
jg
push
imul
push
pop
loopne
push
js
ja
adc
sti
jg
xchg
xorl
mov
mov
imul
clc
mov
mov
xchg
das
testl
popa
mov
rolb
mov
xchg
das
cmpsb
pusha
mov
pop
sbb
insb
sub
das
pop
pop
insb
sbb
or
pop
dec
push
push
mov
pop
stos
inc
ret
pop
mov
mov
mov
mov
arpl
mov
arpl
rclb
push
adc
lods
and
stos
or
add
add
dec
repnz
jg
cmp
sbb
cmpsl
add
js
mov
popa
in
daa
pop
mov
push
inc
pop
pop
outsb
aas
sbb
jae
adc
daa
inc
cmp
dec
ret
push
xor
cmp
bound
js
jecxz
xchg
ss
sbb
jp
aaa
sti
mov
dec
jmp
push
pop
jo
imul
inc
ss
inc
jno
insl
push
pop
lahf
inc
dec
xor
xor
dec
inc
mov
add
cmpsl
push
out
movsl
mov
clc
outsb
mov
testl
pop
pop
inc
call
pop
jns
ret
adc
ja
cmp
xor
and
push
adc
adc
add
jno
stos
stos
not
gs
or
cmp
jg
je
add
addr16
jo
jae
scas
mov
jno
outsl
xor
push
or
ret
push
dec
pop
sub
xchg
je
jne
or
test
xchg
xchg
scas
in
sub
pop
dec
out
inc
loop
loope
mov
arpl
push
or
dec
test
pop
inc
mov
jb
inc
mov
imul
push
add
push
aam
js
inc
sub
or
xor
inc
fisubrl
loope
push
aas
testl
pop
adc
loope
mov
sbb
cmp
sub
pusha
sub
push
push
adc
aad
test
into
dec
adc
inc
daa
or
push
jo
push
mov
jb
dec
add
test
jp
stos
mov
pop
xor
invd
or
inc
push
aam
inc
or
jns
jb
iret
xchg
lock
jmp
mov
ret
mov
mov
sub
fstpt
outsb
or
aaa
inc
insb
dec
aad
fistpl
mov
xchg
push
inc
add
xchg
sub
mov
mov
or
inc
arpl
add
or
test
inc
inc
repnz
xchg
push
xor
pop
roll
pop
outsl
fiadds
out
fisubrs
movl
add
add
or
fdivrl
push
lahf
incl
and
jne
andl
js
pop
ficompl
xor
das
ds
das
pop
add
ret
or
add
pop
daa
daa
daa
push
and
pushw
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
out
out
dec
es
js
insb
cwtl
scas
shr
outsb
sbb
push
and
fisubl
adcb
les
add
adc
outsl
arpl
pop
gs
pusha
nop
loopne
out
ds
push
mov
lods
pop
push
sbb
sub
dec
sbb
clc
inc
add
mov
fiadds
mov
lahf
jbe
and
sub
data16
insb
fcmovnu
sub
hlt
testl
jge
lahf
mov
outsb
xchg
push
movsb
mov
inc
or
or
lahf
clc
out
jnp
out
outsb
fldl
pop
mov
and
push
dec
inc
add
out
ds
loop
lret
adcl
or
ja
cmpsb
inc
push
xlat
das
into
xlat
test
add
es
es
in
outsl
daa
or
mov
test
call
repz
dec
mov
mov
and
out
std
xor
push
sub
adc
mov
ss
sub
out
push
imul
rol
arpl
popa
es
push
je
and
and
arpl
cwtl
sub
je
insb
jns
jbe
loop
in
xchg
and
shll
popa
stos
loopne
inc
fisubl
dec
cs
or
inc
and
xor
and
add
mov
loop
dec
inc
sahf
shlb
and
push
push
std
mov
add
outsl
fs
gs
jo
jns
pop
mov
mov
popf
or
pop
outsl
insl
jne
movsl
pop
sbbl
cwtl
les
addr16
mov
out
push
inc
je
fiaddl
gs
inc
insb
dec
adc
mov
lock
inc
popa
imul
movsb
sbb
xor
outsl
jo
data16
or
sahf
dec
sub
pminub
mov
ja
ja
inc
or
inc
xadd
sbb
inc
imul
jns
inc
popl
lock
mov
inc
sub
rorb
dec
mov
loopne
mov
scas
sti
inc
xor
adc
pandn
fs
xor
xor
xchg
add
jbe
bound
sbb
fadd
inc
pop
cmp
in
push
hlt
daa
ds
stc
out
loope
xor
negl
daa
into
xor
inc
push
in
push
jmp
pop
das
inc
add
outsb
insl
or
cmpsl
ja
lahf
pop
lods
mov
daa
movsb
les
enter
and
sbb
add
adc
jo
and
lock
not
cmp
xlat
dec
push
sub
out
lods
mov
aaa
or
dec
mov
jnp
and
les
sahf
cmpsl
jge
les
cld
push
cmp
push
js
loopne
or
fisttpll
scas
jg
rcrw
rcl
add
ret
out
add
jne
jne
ret
mov
aam
dec
scas
pop
mov
fiaddl
ja
movsb
mov
pop
lds
outsl
int3
cs
dec
scas
fsubl
add
dec
cmpsl
add
js
mov
les
xchg
cmpsb
pop
push
pushf
cmp
sti
les
pop
jb
fs
les
mov
lds
sahf
or
sar
enter
or
in
and
clc
cld
inc
lds
jns
push
pusha
cld
nop
out
mov
xchg
sub
nop
xor
lods
inc
xchg
sahf
adc
outsl
call
add
fiaddl
decl
lock
loopne
fiadds
inc
push
mov
mov
outsl
dec
mov
and
orb
mov
daa
aam
inc
jns,pn
enter
cmpxchg
jnp
fwait
test
adc
and
je
aaa
pop
pop
push
outsb
dec
iret
ja
repnz
enter
fs
or
decl
mov
inc
mov
enter
pop
cmp
jb
push
je
in
es
and
out
je
outsl
insl
andl
and
xchg
je
inc
ror
add
ljmp
data16
enter
sbb
imul
movl
pop
in
add
adc
cmp
out
iret
test
lock
fsubrs
leave
loopne
faddp
push
xchg
push
mov
mov
mov
daa
pop
in
mov
pop
repnz
sbb
mov
jnp
sub
push
xchg
loopne
les
lret
addr16
orb
pushf
mov
mov
mov
push
addr16
sbb
loopne
dec
mov
adc
pop
lret
push
xor
fs
ret
dec
add
test
inc
push
push
lahf
stc
push
enter
mov
jns
in
nop
mov
mov
nop
shl
lock
shl
and
cltd
fdivs
and
push
inc
int3
lahf
in
add
adc
jo
nop
out
adcb
lahf
jo
sarb
cmp
cs
shlb
clc
push
dec
out
and
xor
out
mov
mov
push
outsl
jg
and
mov
nop
fs
jb
iret
mov
nop
pop
repnz
enter
enter
cmp
mov
mov
les
push
sub
cmpsl
in
cld
push
jg
or
pusha
push
repnz
jo
shlb
pop
in
push
cmpsl
pusha
cmp
repz
enter
je
or
mov
or
sbb
sub
sbb
push
enter
jg
cs
cmpsl
movsb
pop
insb
cmpb
pop
out
sahf
or
mov
add
pusha
fcmovnbe
or
pop
enter
rolb
idivb
add
cmpsl
cld
lcall
int
sub
sahf
js
pop
dec
xor
dec
ja
dec
and
test
mov
jb
test
and
rcrl
rcrl
xor
inc
sahf
or
dec
rcrl
jl
or
test
lahf
aam
cmp
repnz
test
jae
pop
enter
stos
mov
xbegin
or
cmpsl
call
sub
cmp
dec
push
pusha
rcl
push
jae
addr16
cmpsl
jg
pop
repnz
cmpsl
fs
mov
repnz
iret
test
jmp
cmpsl
in
nop
iret
test
cmp
dec
push
pop
mov
jmp
cmpsl
jg
mov
pop
dec
lock
addr16
push
mov
stc
sahf
lods
rorl
dec
jae
mov
inc
sub
fdivrl
pop
aam
push
add
pop
enter
fs
mov
mov
aam
cmpsl
bnd
or
mov
pop
xchg
test
aas
mov
add
sub
pop
call
cmpsl
out
mov
jg
adc
mov
dec
enter
push
dec
aad
dec
int3
push
lds
ja
inc
test
bnd
pushf
jae
pop
enter
and
out
push
lock
mov
loopne
push
out
adc
jl
jmp
pusha
push
movsb
inc
ja
enter
int3
jo
addb
push
in
int3
enter
jg
cld
les
subb
or
mov
adc
loopne
and
mov
cmp
mov
push
push
addr16
dec
xorb
inc
je
icebp
mov
xlat
push
or
mov
mov
lahf
mov
inc
ja
jmp
dec
mov
rcr
push
sbb
or
jg
inc
sahf
pop
inc
hlt
mov
lahf
test
hlt
inc
mov
dec
enter
add
adc
and
lods
add
cmp
dec
lods
jg
push
rcr
mov
dec
daa
inc
push
cs
test
loopne
ret
enter
jns
in
inc
movsb
mov
and
lahf
mov
and
dec
fidivl
mov
push
mov
mov
jg
adc
pushf
lods
lods
daa
lods
lahf
dec
add
pushf
inc
in
inc
lea
jl
cld
adc
iret
pop
enter
inc
in
jo
mov
stc
inc
fistl
jo
bound
inc
ja
cwtl
rcll
mov
mov
outsl
push
add
cwtl
inc
jg
test
inc
in
lahf
pop
mov
in
call
xor
inc
push
push
lahf
jle
or
call
inc
sahf
or
xchg
movsb
cs
fisttpll
test
sahf
or
in
mov
aam
mov
repnz
xor
inc
fstpl
push
repnz
enter
xchg
iret
test
enter
jae
aam
enter
add
mov
mov
and
xchg
inc
clc
push
mov
outsl
aas
pop
push
test
or
jae
not
addr16
dec
xchg
movsb
and
enter
xchg
cmp
shll
in
clc
enter
js
inc
inc
add
pop
jl
fistpll
push
inc
push
enter
xchg
jl
or
lcall
lds
iret
mov
call
addr16
fcmovu
outsl
add
mov
inc
int3
lds
add
xchg
js
outsl
inc
or
daa
add
stos
sarb
addr16
ficomps
loopne
push
rclb
pushf
test
mov
les
push
imul
call
out
and
push
sub
shll
cvttps2pi
xchg
push
fiaddl
cmpsl
ja
mov
in
addb
mov
outsl
ss
aam
ds
fmuls
inc
mov
movntq
outsl
sbb
adc
push
xor
inc
jb
push
jb
cmp
jb
push
xor
and
add
dec
loopne
in
cmp
mov
push
and
jmp
js
repz
sti
shl
ss
push
dec
movsb
ljmp
sbb
jmp
lahf
add
call
inc
fidivrs
push
out
push
js
ds
mov
fucom
jns
inc
in
in
push
mov
repz
cwtl
mov
dec
or
xor
outsl
or
mov
mov
jp
adc
xor
test
cmpsb
clc
cmc
ss
xor
div
ss
aaa
pop
in
repnz
repnz
add
xchg
call
fidivrs
push
inc
mov
adc
inc
mov
add
sub
xchg
jg
add
push
xlat
das
insb
ja
sbb
dec
jns
xchg
sub
outsl
fdiv
or
dec
es
nop
fmull
filds
sbb
and
push
xor
jb
ret
filds
inc
leave
jae
pop
js
xchg
jb
add
mov
daa
push
int3
cmp
test
mov
ss
add
leave
rcll
out
push
xor
add
push
outsl
out
lock
xchg
xor
fnstsw
nop
int3
fbstp
ss
add
subb
fcoml
and
in
pop
scas
add
bound
dec
cs
test
push
pop
xchg
iret
mov
xchg
jo
cwtl
xor
scas
lock
repnz
jbe
aaa
shr
add
ljmp
dec
enter
jmp
fs
sub
cmp
cmp
lahf
mov
add
nop
jg
leave
adc
add
push
inc
pushl
sbb
sub
xor
popa
imul
ljmp
add
and
mov
outsl
and
ljmp
and
pop
push
jo
jbe
push
loopne
push
adcb
leave
mov
outsl
out
pop
fmulp
sbb
sbb
sbb
xlat
cmpsl
in
inc
xlat
or
push
aaa
jnp
leave
stos
ss
fisubrs
mov
push
xor
in
add
mov
and
aaa
mov
loopne
in
mov
jae
push
push
in
out
loopne
sbb
mov
les
test
push
xchg
js
inc
mov
fiaddl
pop
push
rcrb
sbb
jecxz
add
pushf
inc
lcall
mov
in
divl
or
cmpl
cmp
jbe
push
push
outsl
jg
push
mov
pop
cwtl
xchg
cmc
mov
or
push
jl
imul
icebp
push
sarb
out
out
cmp
aam
mov
xchg
xlat
push
mov
or
xchg
jae
mov
loope
and
pushf
push
out
fs
push
pop
stos
or
in
jbe
or
scas
add
xchg
test
xlat
or
dec
ret
sub
leave
or
mov
mov
adcb
pop
and
pop
add
mov
xor
mov
add
and
push
repnz
js
add
pushf
mov
out
incl
pop
mov
cld
out
aaa
subl
push
mov
mov
ja
incl
mov
lock
addr16
or
mov
cmpsl
or
mov
pop
add
jecxz
cs
add
or
sub
add
test
mov
in
jg
fdivl
pop
jb
pushf
lods
adcb
xor
fstpt
mov
call
popa
outsl
add
or
icebp
sbb
repnz
in
inc
pop
xor
repz
xchg
push
enter
aaa
add
inc
sub
incl
cmp
add
push
xchg
adc
xlat
add
pusha
and
ret
add
lock
movsb
jb
push
mov
add
adc
add
mov
sub
sahf
idivb
push
dec
xor
cmp
repz
push
xor
ficoml
sahf
les
ljmp
lahf
or
cmpsl
sub
xchg
or
in
filds
jl
mov
push
xor
adc
xchg
pop
or
fisttps
or
or
ficoms
add
test
dec
push
dec
sub
fadds
xchg
add
sbb
mov
add
or
cs
andb
sbb
inc
or
out
xchg
fistpl
add
scas
nop
sub
dec
out
xor
push
mulb
subl
imul
sbb
xor
aaa
sbb
mov
sbb
addr16
cmp
aad
lods
lret
imull
xor
mov
not
fwait
jl
xchg
mov
inc
pushl
mov
xchg
mov
mov
enter
out
pop
mov
inc
testb
sub
lahf
shlb
iret
mov
ja
in
pop
sbbl
sub
ja
or
fsubr
jne
daa
addr16
stc
inc
inc
iret
test
xchg
test
hlt
insb
fldt
aas
or
insb
jne
shrb
add
insb
mov
xor
push
push
jb
jae
xchg
cmp
cmpsl
sti
and
imul
mov
dec
repz
mov
negb
mov
lcall
add
jns
nop
mov
or
shrl
dec
stos
jns
out
mov
mov
int
lea
dec
imul
std
dec
mov
mov
nop
push
push
data16
ds
repz
push
xchg
outsb
push
xchg
sahf
out
gs
enter
int
jns
and
xchg
inc
ds
repz
xchg
out
and
xchg
repz
rcll
mov
out
adc
into
jmp
sets
imul
in
and
out
mov
sti
es
into
sti
cmp
dec
je
fwait
jbe
imul
xchg
rcrb
popf
push
sahf
ja
out
lock
lcall
jecxz
mov
jns
add
mov
and
stc
mov
mov
movsb
repz
cmpsl
pop
jmp
movsl
jae
repz
iret
cli
push
int3
sahf
out
out
adc
mov
roll
test
out
fwait
ret
pop
stos
or
out
rep
and
cmp
out
lcall
jo
out
cmp
fldenv
scas
pop
lea
jmp
scas
cmp
jns
daa
mov
mov
ds
mov
addr16
repz
lcall
cmp
push
mov
jns
jns
outsb
cltd
ljmp
cmp
out
and
xor
out
mov
mov
jns
iret
aad
mov
repz
push
mov
mov
mov
mov
jns
rcrb
dec
repz
ret
pop
rcrb
les
xlat
ds
sarl
jge
jmp
xor
out
jno
divl
insl
imul
out
and
je
cmp
out
push
leave
push
mov
int
js
lret
in
int3
cmp
int
pop
int
inc
into
addr16
cmp
out
pop
iret
adc
sahf
cmpsl
push
test
sbb
dec
out
ds
je
adc
pop
stos
iret
repz
inc
aam
test
jns
aad
rolb
stc
cmp
add
aas
pushf
adc
lcall
push
fstps
popf
idivl
loop
push
fiaddl
xchg
out
xor
jecxz
fistl
repz
mov
frstor
aaa
fimuls
jns
addr16
fistps
lahf
cmpsl
stc
cmp
xor
jo
loope,pn
out
xor
fstpl
jnp
int
repz
inc
in
out
jmp
lcall
push
jno
out
lahf
imulb
lock
insb
mov
insb
scas
pop
clc
cli
mov
push
add
cld
out
in
jae
imul
dec
push
fistpl
lcall
in
add
pop
push
inc
push
aas
aam
lcall
xor
jae
pushf
incl
test
sbb
xlat
aaa
jl
xchg
ja
pop
popa
int3
aaa
or
inc
mov
leave
adc
push
jp
jp
jns
adc
sti
jnp
enter
lea
test
fucomi
test
aas
stos
daa
fimull
stos
mov
das
bound
aad
inc
movsb
or
les
and
insl
pop
lds
xchg
dec
pop
mov
push
pop
mov
mov
add
lahf
xor
lds
les
out
mov
or
inc
outsl
dec
ds
das
mov
inc
mov
inc
ds
inc
sub
ss
mov
fidivs
aas
dec
mov
leave
mov
mov
xchg
pushf
int3
aas
in
pop
outsl
ss
push
inc
pop
lea
daa
push
jle
incl
push
add
lods
movsl
add
pop
push
mov
je
add
mov
lahf
xlat
dec
les
adc
push
jno
scas
sbb
jbe
faddl
lahf
jb
clc
push
mov
lahf
js
pushf
in
and
xor
inc
add
inc
xchg
inc
jns
adc
es
inc
push
push
push
pop
mov
jnp
ret
jl
sbb
pop
call
hlt
push
and
enter
add
jo
pop
shlb
add
sbb
add
je
aas
pop
enter
iret
les
into
pusha
inc
push
push
out
scas
mov
push
dec
push
xchg
lods
ss
cmp
out
repnz
dec
iret
pop
inc
outsl
in
add
fcoml
mov
aaa
ret
jns
aas
orl
adc
push
jg
mov
jo
aad
das
xchg
out
frstor
pushf
add
aaa
or
mul
mov
fisttps
xchg
ss
push
xlat
dec
cs
cwtl
mov
iret
xchg
and
lret
mov
das
xchg
dec
cs
fcoml
mov
or
xchg
xchg
or
xor
popa
in
mov
pusha
test
pop
mov
lret
in
xlat
je
out
mov
push
movb
nop
pushf
in
in
mov
mov
stc
xchg
subl
shrl
and
scas
pusha
cmp
addr16
mov
inc
mov
mov
push
mov
pop
stos
jmp
or
xchg
or
push
mov
push
push
inc
inc
arpl
decl
inc
iret
lea
in
cmp
sub
pop
cmpsb
xchg
sarb
jl
rcr
mov
popl
cmpsl
mov
into
mov
or
inc
push
and
mov
or
push
icebp
add
push
inc
jo
fwait
sbb
daa
cmp
inc
rcrl
je
pop
mov
add
das
push
mov
scas
mov
addr16
pop
add
sbbl
or
daa
cmp
clc
add
or
adc
hlt
or
adc
shll
loopne
jmp
dec
or
insl
xchg
scas
inc
out
mov
pop
xor
mov
in
mov
mov
xchg
xchg
mov
in
xchg
mov
xchg
xchg
add
repz
dec
rorl
out
pop
xlat
movsl
ja
imulw
aaa
dec
cmpsl
stos
jmp
aam
jns
xchg
je
cld
lea
xchg
cmp
inc
addr16
xchg
mov
fidivl
xlat
popf
in
in
push
cmc
xchg
xchg
push
push
pop
sbb
and
xchg
pushf
in
cmp
in
in
arpl
mov
pop
jbe
jne
scas
movzbl
js,pn
in
into
cmpsl
pop
ficomps
repnz
jns
add
popl
sbb
or
sub
xor
dec
out
pop
ja
push
push
or
pushf
out
sahf
insb
or
test
xor
addr16
daa
push
or
add
les
iret
daa
leave
fcmovne
xchg
add
jo
adc
nop
call
loopne
out
cmp
sub
or
adc
sysenter
adc
xchg
sbb
scas
cmpsl
cmp
jb
insb
mov
jg
cmp
adcl
inc
mov
nop
mov
nop
loope
in
dec
or
in
inc
repnz
out
xchg
push
icebp
ss
xchg
cmp
dec
xchg
aas
cmp
push
rolb
fstpl
push
daa
test
xchg
jl
push
inc
cmc
cli
inc
mov
loopne
adc
mov
mov
push
adc
cmp
daa
xchg
lock
sbb
add
add
xchg
add
add
rcrb
add
loopne
dec
mov
nop
adc
adc
pop
xchg
scas
popf
xchg
cmp
enter
adc
dec
adc
in
in
push
dec
jns
leave
rclb
addr16
cmp
fcmovnb
addr16
adc
xchg
push
rorl
jp
add
lock
adc
aad
pop
dec
adc
add
xchg
scas
add
cmp
ja
xchg
push
jb
enter
xchg
jb
adcb
mov
int3
adc
xchg
addr16
addr16
cmp
ficoml
sete
nop
push
xor
cmp
push
aaa
leave
add
add
sub
or
lock
fistps
pop
repnz
sahf
or
pop
and
push
pop
jo
or
mov
das
test
push
movl
xchg
and
sbb
xchg
outsl
sbb
push
aaa
and
jo
enter
sbb
cmp
movsl
mov
outsl
push
cmp
in
scas
pop
push
jg
xchg
push
add
xchg
lea
shr
xchg
loopne
and
jo
sbb
pushf
out
es
daa
inc
negl
sbb
clc
add
ja
adc
es
fisubl
xchg
push
pop
jl
dec
push
dec
rcl
daa
sbb
insb
test
ljmp
lahf
repnz
sbb
add
aaa
sub
sbb
int3
mov
test
push
mov
outsl
scas
test
enter
loope
cmp
ret
xchg
mov
sbb
inc
xchg
addr16
cld
ja
xchg
add
mov
das
sub
cmp
sub
cs
pop
addr16
add
xchg
in
sbb
mov
pushf
loopne
jmp
mov
sbb
mov
push
dec
sbb
adc
inc
and
sbb
xchg
scas
jecxz
jb
jg
mov
cwtl
or
mov
incl
sub
mov
pop
cwtl
sahf
pop
jns
gs
jo
push
add
add
dec
push
push
in
popf
cmp
mov
aam
mov
fistpl
test
dec
enter
sbb
pop
xor
ja
and
pop
jle
ss
aam
mov
movsb
ja
or
out
pop
bswap
jg
adc
mov
pop
push
lcall
xchg
dec
rorl
ja
jns
lcall
fisubl
stos
dec
cs
dec
addb
dec
cs
dec
lods
repz
das
xchg
fcoms
fwait
xchg
fwait
push
pushf
push
addr16
fwait
jmp
pop
mov
fbld
fs
xchg
dec
ficompl
xchg
dec
cs
lock
pushf
sbb
pop
fwait
push
scas
mov
xchg
pop
jb
scas
mov
clc
pushf
daa
popf
iret
or
inc
repnz
lock
mov
outsl
and
jge
popa
stc
fcmovbe
add
jns
inc
fstl
jne
push
cmpsb
idivl
cmp
mov
jbe
and
cmp
jne
mov
adcl
and
pushf
ficompl
test
inc
and
push
daa
test
cwtl
dec
push
lahf
sahf
ja
or
jne
push
movsl
out
insb
outsl
je
jns
cmp
push
jg
out
outsb
push
mov
lcall
push
stos
mov
adc
mov
sahf
pop
push
xchg
inc
sub
xchg
das
pop
and
scas
or
add
pusha
fdivl
ja
daa
mov
lahf
jmp
lahf
xor
mov
lahf
dec
lahf
push
lahf
bound
outsl
lahf
jl
xchg
xlat
out
mov
aad
fistpll
or
in
mov
inc
push
jae
pushf
mov
push
js
pop
ja
jno
xchg
dec
sahf
ja
popf
das
cmpsl
push
add
repnz
or
call
dec
fisubs
pushf
popf
sbb
sub
pop
mov
push
push
pop
mov
add
cmp
dec
test
mov
push
daa
push
js
pop
xor
inc
pop
mov
xlat
nopl
push
movsl
pop
cmp
call
pop
jb
add
scas
rol
loopne
pop
mov
daa
pop
xor
pop
add
iret
loop
cmp
mov
and
add
pop
mov
xchg
adc
push
dec
sub
frstor
fsubrl
movsb
push
aas
dec
sbb
imul
je
adc
mov
popf
dec
ds
filds
cmp
or
sub
ucomiss
mov
rorb
xor
pop
test
pushf
xchg
pop
ja
cmpsl
xchg
add
outsl
out
or
lret
mov
loopne
sahf
cmp
sub
pop
or
or
cmp
inc
or
xchg
and
sbb
xor
rcr
enter
das
sub
mov
mov
imul
push
mov
cwtl
inc
addr16
sub
aaa
shlb
ss
fildl
movsl
push
repnz
xor
out
paddusb
cmp
negl
dec
mov
inc
jmp
pop
pop
cmpsb
call
dec
jb
cmpsb
mov
popf
fildl
cmpsb
dec
sahf
out
lahf
pop
scas
add
in
push
rcr
das
out
not
loop
icebp
das
pop
cmpsl
push
repnz
lahf
or
cmpsl
sbb
iret
jae
adc
dec
adc
scas
test
cmpsl
lahf
adc
sub
push
xchg
dec
push
outsl
cs
xchg
mov
ffreep
addr16
sub
repnz
out
sub
lahf
test
push
push
pop
push
sahf
out
mov
cs
add
jge
xchg
dec
aas
or
xlat
jo
mov
mov
outsb
mov
outsl
and
xchg
dec
fwait
test
test
daa
js
test
test
push
xchg
js
and
in
jbe
xchg
test
adc
add
cs
and
bsf
hlt
cs
cmp
idivl
sub
pop
xor
ficomps
in
daa
aaa
pop
out
testb
stos
mov
in
leave
repz
xor
add
inc
stos
xlat
dec
sahf
dec
andnps
pop
popa
mov
push
push
adc
fwait
pop
xor
jbe
jb
lret
jmp
pop
and
hlt
sti
stos
pop
add
xor
xchg
stos
sbb
ss
stos
xlat
push
addr16
adc
push
sub
into
add
movsl
inc
lods
mov
jae
mov
add
xor
xchg
cmp
xchg
xchg
bswap
sti
add
push
lods
adc
lods
ljmp
pop
add
pusha
jg
lods
cmpsl
popa
lods
clc
sahf
push
and
incl
add
mov
add
inc
cmpsb
pushl
push
jg
aam
adc
je
inc
xor
lock
inc
mov
fsubrs
push
call
or
cmp
in
out
lods
scas
sbb
jb
push
lods
adc
and
dec
mov
lods
lock
push
mov
xor
out
add
outsb
fnsave
ret
push
daa
into
iret
add
scas
das
scas
fisubl
dec
daa
adc
sub
scas
xchg
scas
ljmp
ja
ja
aad
jb
test
fildl
push
outsl
movsb
iret
jo
mov
fisttpl
jecxz
push
adcb
xor
push
scas
out
push
stc
ret
push
scas
pop
push
push
add
mov
cs
add
iret
push
ds
or
daa
iret
jae
or
or
cmp
rep
or
daa
iret
jae
adc
iret
repz
adc
sahf
cmp
scas
push
mov
scas
dec
or
xchg
out
xor
fmulp
sbb
xchg
jl
je
mov
push
mov
dec
repnz
push
outsl
mov
inc
lods
iret
into
in
cmc
mov
pop
mov
mov
into
pop
pop
mov
addr16
cmp
dec
inc
cld
mov
adc
xchg
mov
xor
mov
cmp
mov
or
iret
leave
jnp
add
adc
add
and
dec
repnz
mov
mov
jo
loopne
jp
mov
mov
jbe
inc
jb
in
lods
push
mov
rorl
lds
int
aad
dec
or
out
out
in
in
or
aaa
fistpl
das
std
push
syscall
mov
mov
mov
clc
daa
xchg
inc
decl
dec
in
shrb
pop
fsubr
leave
jae
add
pop
or
cmp
dec
fisubs
or
push
shlb
adc
out
sbb
outsl
adc
ljmp
mull
xchg
outsl
xor
mov
subps
add
push
cwtl
inc
pop
ss
cmp
pusha
cmp
movzwl
lock
add
jae
scas
push
cmp
in
leave
stos
mov
ret
je
nopl
fsubrs
loopne
add
sbb
cmp
sbb
mov
sbb
pop
ja
aaa
inc
push
add
arpl
sahf
out
xlat
iret
jae
mov
or
jns
or
mov
mov
cmp
pmaxsw
lea
decb
out
sahf
sub
jns
out
pop
or
ja
and
or
nop
int
inc
cmp
data16
mov
aam
xchg
push
mov
inc
add
cmp
cmc
nop
cmp
cmp
cmp
fbld
in
inc
testl
sub
and
fs
and
cmp
je
scas
lods
fnstsw
xchg
ds
inc
lcall
dec
pushl
push
jbe
incl
hlt
in
mov
jns
cmpl
daa
icebp
sub
aaa
mov
sub
mov
clc
icebp
fs
mov
or
mov
cwtl
xor
mov
mov
fildl
push
xlat
ds
sbb
dec
pop
iret
data16
icebp
in
mov
into
sub
mov
rcrb
fimull
add
leave
jae
loop
xchg
add
mov
mov
inc
outsl
dec
mov
pop
jae
outsb
mov
add
push
cmp
in
mov
or
and
lock
cmp
ret
data16
xchg
int
dec
add
aas
fmull
nop
aas
dec
mov
ret
cli
incl
es
xchg
inc
inc
mov
repnz
je
nop
dec
push
rcpps
cmp
out
out
pop
imul
ret
in
jbe
jae
inc
jbe
pusha
add
pop
or
cmpsl
aas
in
fistpll
dec
dec
cmp
or
aas
dec
inc
jbe
cmovb
push
ret
movsb
mov
mov
std
or
daa
or
xchg
daa
iret
in
add
filds
daa
and
inc
mov
mov
sbb
jb
mov
xlat
test
pop
and
xchg
dec
leave
int
mov
mov
enter
jmp
pop
rcr
lahf
inc
and
addb
jg
mov
inc
or
cmp
add
shlb
popf
subl
add
jg
add
mov
pop
inc
ja
andb
mov
xor
mov
lock
pushf
in
clc
add
cmp
mov
and
das
xchg
add
push
mov
outsb
addr16
lcall
leave
leave
movsl
xchg
fwait
ja
out
in
ja
loope
out
es
add
push
inc
pushf
and
repnz
and
jo
push
inc
jb
inc
xchg
lods
roll
mov
stc
dec
sahf
out
loope
jmp
dec
adc
mov
inc
mov
xchg
xchg
cmp
add
andl
lsl
adcb
cmp
jmp
call
sub
lock
incl
dec
mov
push
mov
mov
ja
jns
add
iret
repz
scas
cs
mov
mov
or
aam
or
jp
outsb
cmp
das
femms
cmc
loop
cmpb
or
pop
adc
ja
insb
cwtl
inc
xchg
popf
cmp
xchg
push
add
das
js
push
pop
data16
ja
pop
pcmpeqd
movd
fildl
aas
or
dec
rcl
jbe
cmp
mov
jmp
cmovo
call
push
shll
in
add
sbb
xchg
divl
sbb
out
cmp
dec
inc
jo
dec
push
daa
pop
ja
pushf
je
push
scas
fbstp
test
scas
mov
scas
xchg
push
lahf
sahf
pmulhuw
ja
push
pop
mov
mov
jle
rcll
pop
jmp
imul
shr
cmp
sub
add
outsl
inc
ret
hlt
mov
ret
leave
inc
dec
fildll
cmp
pandn
out
in
add
add
jns
addr16
movnti
ret
testl
and
decl
add
fstpl
mov
int
sets
mov
and
push
xlat
or
xchg
out
pusha
fldt
aaa
ret
mov
int3
push
les
push
mov
push
pop
push
aas
push
and
mov
clc
jns
in
in
push
mulps
add
pop
jb
imul
xchg
cmpsl
pushf
movsb
fildl
mov
xchg
adcb
dec
fists
les
vunpcklpd
xchg
sub
pop
insl
mov
adc
push
ja
leave
leave
in
pop
insl
jne
in
mov
cwtl
mov
test
pop
ja
jbe
jb
rcr
pavgw
or
rol
add
loopne
sub
push
push
mov
es
dec
xchg
dec
jbe
jb
push
mulps
xchg
in
and
sub
pop
lods
pushf
cmp
leave
mov
push
les
loope
inc
repnz
out
jecxz
fwait
dec
decl
adc
repnz
and
ljmp
fcmovne
inc
dec
xchg
leave
mov
pop
xchg
nop
cwtl
call
mov
cs
daa
rorb
adc
ret
sbb
sbb
push
adc
pop
ja
test
push
jg
push
add
or
jns
pxor
leave
repz
pop
insb
or
sub
xsha1
cmpsb
dec
fildl
loop
in
btr
xchg
pop
data16
and
xchg
fsts
inc
dec
leave
cmpsl
jae
push
addr16
in
mov
jbe
in
cltd
mov
js
cmp
mov
jns
cmpsl
aas
add
push
push
add
fwait
in
stos
add
lret
mov
test
pop
mov
push
cmpsb
lret
fdivl
dec
dec
add
lods
jae
das
movq
ror
aad
loopne
lahf
rorl
negb
out
push
in
in
push
or
xor
out
ds
adc
jl
leave
jnp
mov
adc
or
lea
lret
rcr
inc
xor
push
pmullw
jbe
ja
push
aas
xchg
pushf
scas
mov
pop
inc
push
ret
and
and
xchg
sub
rdpmc
cs
or
push
sbb
pop
int3
lahf
mov
xchg
pop
jp
subl
leave
leave
in
movsb
imul
pop
int
and
fs
pop
out
mov
fisttpll
aas
lds
xor
xchg
fwait
js
int3
aas
aas
sbb
adc
fstpt
icebp
andps
in
and
pop
sbb
xchg
addr16
push
push
mov
pop
in
int
movq
int
es
pop
scas
push
add
lar
repz
jae
fimull
loop
mov
or
cli
lar
jg
enter
sbb
xor
mov
sbb
mov
maxps
push
mov
push
loope
subb
outsl
dec
dec
ficomps
iret
fidivrl
test
dec
lahf
dec
and
iret
subl
invd
fadds
add
cmp
sub
sbb
iret
or
out
es
cmp
cs
push
xlat
outsl
in
scas
mov
push
iret
push
iret
rdmsr
push
and
or
iret
orb
pushf
das
fiadds
lfs
add
sarb
mov
outsb
mov
mov
daa
mov
lcall
pop
mov
daa
mov
movhps
shlb
pop
inc
addr16
rcrb
add
sarb
in
and
out
add
mov
into
test
mov
mov
pop
push
lahf
inc
shrb
rcl
fcom
or
nop
pop
out
shlb
pop
es
rcll
rorl
movsb
sbb
je
or
daa
aam
leave
add
adc
cmpsl
mov
or
daa
xor
xchg
add
shrl
cmp
pop
push
pushf
test
mov
cwtl
pop
scas
jb
into
in
fisubrl
iret
repnz
sahf
mull
adc
add
inc
cmp
jg
iret
repz
or
push
or
sub
push
push
out
sahf
out
jl
jns
adc
jns
out
adc
adc
sahf
out
pop
in
out
fcomip
jns
sbb
sbb
daa
daa
daa
pop
push
adc
daa
adc
adc
es
daa
daa
femms
or
ss
pop
test
push
mov
decl
fidivrs
dec
push
add
push
inc
fwait
andl
pop
out
je
enter
push
daa
jl
fnstsw
cmp
jnp
sub
dec
ja
testl
bt
mov
sbb
pop
incl
daa
add
sub
out
in
adc
xchg
or
repnz
rcl
das
dec
pop
aaa
rcr
icebp
outsl
or
adc
xchg
aas
test
aam
mov
xor
into
cmp
or
inc
mov
insl
xchg
aam
addr16
xchg
xchg
cltd
mov
jmp
ffree
aam
pop
cltd
in
and
iret
sbb
adcb
in
and
inc
mov
ja
ja
in
in
outsl
ja
pop
xchg
xchg
mov
mov
mov
xchg
xchg
mov
imul
rcrb
xorb
or
mov
inc
dec
push
xlat
pop
xchg
mov
mov
adc
scas
call
adcb
lahf
xchg
push
dec
sahf
fcmovne
lods
pushf
fbld
mov
mov
cmp
repz
or
or
jns
out
in
or
or
out
cld
adc
out
cmpsb
adc
xlat
and
jg
cmpsl
daa
xlat
das
xlat
xlat
add
sbb
repz
gs
add
fwait
lock
xchg
xlat
mov
and
nop
test
mov
daa
adcb
int3
xadd
in
aam
in
in
neg
jbe
pop
push
fmuls
sbb
decl
pop
or
fsubs
mov
jbe
cmp
das
sbb
add
add
pushf
out
push
push
push
daa
jl
out
mov
pop
push
push
bound
xchg
repnz
mov
jp
sbb
pop
jo
fmuls
xchg
mov
mov
popf
fsts
push
jg
fldenv
pop
xchg
inc
fsts
mov
aas
addr16
arpl
xchg
pop
mov
iret
fildl
push
rorb
cmp
jmp
out
in
pop
xor
push
cmp
dec
and
push
fs
call
fidivrl
lsl
mov
push
test
lea
inc
jl
or
in
push
xor
inc
leave
mov
or
gs
aam
data16
es
xor
mov
pop
or
fcmovnu
pushl
loope
sahf
or
push
fisttpl
push
jl
mov
fstpt
fucomi
es
mov
push
cmp
add
into
leave
jae
add
inc
dec
fidivl
pop
addps
enter
pusha
fistl
mov
gs
cmp
nop
push
cmp
fisttpl
dec
shlb
les
dec
fdivl
out
push
jg
fsub
cmp
and
push
adc
mov
inc
addr16
aam
inc
add
addr16
pop
add
add
fcompl
in
in
cmpb
leave
leave
in
mov
jecxz
fwait
loop
leave
cmc
incl
jb
sbb
sub
scas
sub
decl
repnz
fstl
pop
in
nop
xorl
mov
into
jo
inc
out
in
mov
add
fstpl
syscall
pop
mov
fstpl
comiss
jo
test
push
setnp
jp
aas
cvttps2pi
dec
push
push
lahf
imul
adcb
push
pop
xchg
leave
dec
ds
push
lcall
push
scas
fisttps
nop
sub
outsb
faddp
fiadds
xchg
push
das
paddusw
scas
mov
enter
pop
leave
inc
or
lock
fistps
push
dec
les
ja
add
daa
cmp
imul
and
dec
or
adc
jno
add
fcmovne
sub
push
in
cs
rcrl
add
jb
jbe
iret
xlat
ja
pusha
inc
jmp
loopne
mov
xchg
mov
xchg
dec
in
lods
mov
pop
push
outsl
mov
rolb
sbb
cmp
fimuls
cmp
cmp
add
xchg
out
push
add
repz
decb
add
xor
add
outsb
repnz
loope
push
push
push
push
js
xchg
or
push
adc
es
and
mov
insb
dec
loope
jne
cmp
pop
ja
mov
insl
and
popf
pop
fwait
cmp
jae
jg
push
add
vmwrite
mov
jmp
int
ds
or
aad
in
insl
clc
loope
loop
mov
adc
addr16
into
fisubrs
pusha
punpckhbw
pushl
nop
into
in
js
add
fwait
cmp
jbe
movaps
or
push
jns
fisttpl
adc
or
pop
fsubrl
cmp
movups
nop
pop
cwtl
repz
pushf
pushf
mov
repnz
push
ror
jmp
mov
mov
push
and
lock
clc
repz
pop
movaps
repz
or
adc
sbb
jns
out
dec
and
sub
out
cmp
inc
dec
andps
cmpsb
js
jecxz
xor
insl
ja
sub
adc
xchg
jae
aam
cmpl
inc
pop
std
and
xor
outsl
sbb
mov
xchg
jecxz
mov
ja
jecxz
call
fbstp
jne
in
rcl
flds
in
adc
rcll
in
add
mov
in
in
sub
je
in
push
js
pop
sysret
outsb
daa
iret
repz
xchg
sahf
das
cmpsb
sahf
out
fisttpll
movzbl
out
out
out
adc
sarl
adc
adc
in
iret
repz
adc
adc
repz
pop
inc
sbb
cmp
repz
popa
sbb
repz
imul
repz
pop
xchg
and
and
repz
mov
es
hlt
cmp
daa
ds
in
in
fwait
imul
mov
pop
out
daa
out
das
out
aaa
mov
mov
out
aas
out
dec
out
push
out
pop
jns
out
push
and
jo
out
sahf
out
pop
sbbb
sahf
out
sahf
sbb
mov
sbb
jns
out
push
rclb
adc
adc
or
je
out
cld
out
sub
mov
jno
out
repnz
aas
and
inc
out
out
repnz
out
out
out
out
cmp
bnd
push
or
mov
sbb
inc
out
ret
out
out
xchg
and
out
out
out
aaa
jb
out
call
jns
out
pop
sub
xor
out
sahf
out
sbb
push
sahf
out
sahf
sbb
sbb
sahf
out
pop
test
cltd
in
jbe
mov
mov
fcmovnb
iret
iret
out
fimull
loop
adcb
jo
dec
cmc
outsl
add
sahf
out
fimuls
adc
adc
adc
repnz
and
cs
xor
iret
adc
push
or
iret
repz
or
pop
repz
repz
outsb
pop
iret
repz
jns
test
cmp
xchg
mov
stos
das
mov
mov
push
push
jmp
loopne
ucomiss
add
jne
into
stc
mov
wbinvd
cmp
adc
sbb
ljmp
mov
dec
ljmp
imul
rclb
aas
ljmp
shld
pop
mov
xchg
xchg
fcmovne
mov
sahf
xchg
xchg
xchg
fsub
in
hlt
pmaxub
out
call
or
adc
jbe
push
and
wrmsr
cmp
leave
leave
leave
leave
inc
dec
push
pop
cmp
leave
leave
pusha
push
call
xchg
jmp
jmp
stos
call
jbe
mov
mov
iret
xlat
pop
cmp
xchg
add
cmc
shr
in
pop
or
adc
cmp
dec
sahf
or
push
scas
paddusw
ja
push
push
xor
dec
inc
xorb
push
mulps
lahf
adcl
jl
leave
rep
sbb
mov
lods
add
add
loope
in
mov
push
dec
sahf
or
sti
outsb
or
in
iret
mov
pop
sbb
daa
push
rdmsr
repz
cmp
adc
pushf
cmp
pop
adc
je
pushf
cmp
leave
jg
sbb
repz
leave
repz
int3
push
xlat
loop
in
pushf
cmp
clc
and
out
leave
leave
leave
insl
push
nopl
leave
leave
leave
leave
cmp
pop
push
repnz
loop
out
pop
sub
or
cltd
pop
mov
sahf
pop
push
add
jle
iret
fwait
push
push
flds
outsb
jecxz
fmulp
repz
jmp
or
decl
or
movhps
repz
pushf
pushf
daa
das
aaa
adc
fcmovne
aas
inc
pop
dec
adc
cmp
addr16
dec
sahf
out
outsl
sbb
sbb
xchg
bswap
jg
ds
pop
lock
fisttpll
stos
pop
pinsrw
daa
daa
daa
fsubp
out
cmp
daa
imul
aas
out
push
lock
popf
sbb
lock
adc
je
xchg
aas
pop
cmovp
ja
push
add
bound
lock
jnp
fists
sahf
out
lods
push
or
pop
aaa
prefetch
aam
pop
ljmp
lahf
sarb
ficoms
push
adc
adc
cmp
inc
sqrtps
bnd
mull
push
inc
sbb
aaa
jns
out
pop
push
addr16
dec
pop
and
je
pop
mov
lahf
fucomi
ss
repnz
imul
je
jg
sub
sub
out
jnp
sub
push
sub
jns
out
das
shll
xor
jnp
out
xor
xor
in
xor
out
popf
cmp
add
ss
adc
cmp
cmp
cmp
jns
int
aas
xlat
dec
cmp
cmp
out
ds
aas
add
in
adc
mov
xor
jns
out
cmp
dec
inc
rep
mov
push
arpl
outsb
dec
jns
adc
mov
iret
test
fimuls
jmp
mov
pop
ss
and
jle
cwtl
jnp
jle
jne
inc
scas
add
mov
sub
fdiv
jecxz
push
xchg
test
add
hlt
sahf
out
mov
pop
sbb
or
or
jns
dec
inc
dec
or
sahf
push
data16
adc
adc
mov
mov
mov
rcrl
fsub
mov
decl
cmc
das
in
mov
pop
cmc
pop
and
das
push
and
jmp
leave
in
inc
pop
data16
addl
fwait
pop
es
jle
cmc
jbe
mov
inc
and
ja
repnz
add
push
outsb
mov
das
pop
add
or
cmp
in
or
cmp
inc
cmp
repz
dec
or
or
repz
jo
jge
iret
dec
dec
mov
push
adc
unpckhps
mov
mov
pop
lret
loopne
jns
out
sbb
sbb
add
pushf
fsubrl
pop
or
pop
pop
nop
and
cmp
repz
mov
lret
inc
cmovle
cs
in
sahf
out
sub
jp
jns
in
test
fwait
push
sub
fwait
pop
cmp
jg
enter
testl
out
outsl
adc
add
sbb
add
sub
xor
aas
inc
movl
clc
out
mov
xchg
outsl
jbe
xorb
jnp,pn
out
into
in
sahf
outsb
sysret
in
xchg
aas
lock
clc
out
cli
clc
add
jns
adc
or
pop
sahf
imull
xchg
jg
push
adc
adc
push
adc
adc
outsb
push
jnp
xchg
jns
out
xchg
sbb
bound
push
sbb
pop
stc
push
pop
loop
adc
fisttpll
aas
and
ja
popf
out
adc
push
add
pop
sbb
out
dec
inc
and
and
addb
ljmp
pop
dec
into
frstor
pop
psadbw
pushf
out
push
add
mov
sets
repz
or
add
loop
out
in
clc
add
cli
pop
add
push
sti
sahf
pop
stc
or
sti
push
adc
cmp
in
adc
dec
push
push
push
sahf
ja
popf
pop
outsl
push
jne
sbb
sbb
shlb
adc
jb
mov
out
addr16
pop
paddb
in
and
push
pop
pop
wbinvd
inc
mov
repnz
mov
inc
push
dec
jns
in
jbe
aas
gs
push
adc
cmp
cmp
adc
adc
jbe
pop
mov
jns
out
sbb
dec
sahf
sbb
push
push
ficomps
bswap
repz
and
and
dec
and
mov
outsb
and
std
xor
std
ljmp
push
push
sahf
ja
sbb
std
dec
test
or
or
iret
rorl
push
mov
iret
repz
adc
out
fcmovne
repz
std
das
or
pop
iret
cmp
stc
femms
sbb
adc
cmp
repz
sbb
sbb
jns
leave
repz
push
or
jg
fistpll
out
dec
and
dec
sahf
out
movsb
scas
btc
fwait
lahf
push
imull
clc
test
arpl
sbbl
sbb
or
adc
sbb
and
mov
push
das
imul
pop
in
cwtl
iret
les
daa
daa
cltd
cltd
movsb
scas
fcmovne
shrl
syscall
mov
jns
rorb
fisttpl
out
inc
pushf
je
add
outsb
pop
rcll
ss
das
adc
xor
iret
repz
aas
adc
push
cmp
repz
pusha
adc
cmp
repz
into
sbb
in
fmulp
repz
cli
cs
add
in
sbb
pop
cs
and
push
and
and
lods
es
repz
cmp
xchg
outsb
pop
das
sub
jns
leave
repz
cli
popf
jl
out
add
repz
sahf
out
adc
es
ss
sahf
fcmovne
xor
pop
push
sahf
jbe
in
in
cmp
cmp
mov
outsb
sub
hlt
scas
inc
and
shr
pushf
lahf
ud1
mov
outsb
dec
rcrb
in
das
clc
iret
leave
sarl
sbb
mov
das
cmp
inc
push
out
in
sahf
adc
pop
push
popf
cmp
subb
setbe
in
in
sahf
pop
mov
sahf
xchg
xchg
fcmovnb
pop
iret
fsub
push
cmpsl
jns
jns
std
invd
add
jae
jns
adc
bound
push
jns
daa
iret
and
sub
jns
out
sub
into
icebp
or
push
cs
cmp
sub
xor
push
xor
repnz
push
xor
sahf
jb
popf
mov
mov
jb
jb
repnz
imul
jbe
addl
rorb
pop
jg
lods
popa
mov
fisubs
ds
in
mov
outsb
or
rcr
pop
mov
push
jmp
dec
fisttpl
add
das
setg
ds
xchg
adc
cmp
adc
jbe
or
andb
pop
lea
and
and
xor
pop
and
pop
push
inc
xorb
incb
adc
push
mov
ret
js
dec
pusha
movsb
stos
push
pop
add
lods
test
xor
adcl
inc
and
aaa
add
add
aas
inc
push
sbb
sbb
rcrb
lcall
add
iret
repz
push
or
leave
leave
repz
or
aaa
xchg
or
adc
scas
xorb
cmp
mov
inc
push
addr16
in
jbe
das
push
xorps
jns
outsb
das
insl
push
and
fildl
pop
andb
rep
daa
mov
aas
addl
ror
sahf
mov
loopne
cmpsl
mov
into
aas
xlat
push
cmp
ficoms
sbb
addr16
push
mov
cs
inc
jae
add
sbb
ss
inc
mov
or
aaa
cmpsl
push
clc
sbb
mov
sbb
cltd
aas
les
adc
movsl
and
add
and
adc
or
pop
and
je
and
pop
adc
mov
mov
movsb
add
cmpb
cmpsb
lret
pop
movsl
sbbl
fildll
mov
xchg
or
leave
inc
mov
inc
dec
and
mov
in
sbb
in
call
xchg
das
clc
std
adc
push
ficompl
push
pop
fisubrl
xor
lahf
rcr
fsubp
stc
jb
jle
addl
cmp
mov
cmp
repz
fs
dec
iret
repz
inc
cmp
sub
cmp
repz
and
adc
cmp
repz
add
and
mov
and
push
aam
int3
sahf
out
sahf
sarb
lahf
out
mov
or
repz
fs
pop
push
push
dec
inc
repz
jns
cmp
into
adc
sahf
out
out
and
int3
mov
out
mov
iret
repz
push
leave
repz
sub
push
add
iret
sarl
loopne
mov
sti
in
fiadds
xchg
push
insb
push
pop
and
icebp
add
orb
add
mov
dec
call
lock
negb
mov
add
xor
popa
loopne
and
test
or
aas
sbb
sub
inc
and
out
push
xorb
jnp
sti
xor
mov
or
push
add
or
imul
sgdtl
push
adc
cmp
adc
add
xchg
push
rolb
xchg
mov
jmp
add
aaa
cmpb
pop
push
bound
push
sbb
mov
outsl
popl
xchg
inc
cmp
mov
cs
push
inc
sub
stc
pop
jg
shld
insb
pop
and
pop
out
jne
add
ljmp
inc
out
xchg
es
fdivp
mov
push
sbb
out
push
pop
pusha
cmp
pop
and
push
mov
xchg
jns
ds
iret
inc
push
pop
adc
inc
and
sahf
out
sahf
push
or
or
jns
repz
cmp
dec
sbb
cmp
repz
and
sbb
cmp
repz
adc
or
out
cmp
or
and
jo
es
pusha
fwait
or
clc
shr
pop
jo
orb
inc
pop
daa
dec
testb
push
xchg
scas
rcll
xorl
push
mov
jns
pushf
ret
cmp
pop
js
out
sahf
xchg
mov
repz
out
dec
insl
add
push
pop
ja
cmp
repz
mov
repnz
add
cmp
dec
das
push
dec
insb
dec
in
mov
out
pop
mov
xchg
cmp
add
or
stc
nop
movmskps
mov
adc
enter
mov
leave
sbb
mov
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
push
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
incl
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
jmp
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
decl
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
incl
icebp
pop
lcall
loopne
push
movsl
mov
popa
sar
mov
lcall
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
xor
pop
add
add
int3
add
out
aas
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
sar
ljmp
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
inc
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
pushl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
jmp
push
ja
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
adc
fmull
call
test
incl
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
sti
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
xchg
sar
ficomps
frstor
mov
add
inc
mov
pop
out
inc
pusha
imul
inc
inc
je
inc
aas
xor
inc
push
dec
inc
pop
inc
jbe
push
jns
arpl
arpl
ja
aad
je
mov
subb
imul
fisttps
popa
jo
inc
jbe
xchg
mov
pop
dec
dec
inc
push
dec
inc
aaa
xor
ret
dec
or
cmp
outsw
xchg
or
inc
dec
inc
mov
imul
insl
fisubl
outsl
mov
cs
sbb
or
daa
and
cmp
test
mov
add
pop
test
pusha
out
insb
pop
push
cs
add
pusha
popf
scas
idivb
lock
inc
dec
push
dec
rcl
dec
push
jo
jb
inc
add
push
inc
inc
inc
test
push
xor
gs
js
add
bound
xchg
add
xor
adc
mov
dec
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
add
xor
pop
sub
test
adc
das
pusha
add
push
fs
adc
movsb
xor
aas
rol
xor
dec
inc
mov
xchg
xchg
inc
hlt
out
fisttpl
imul
xor
inc
out
cmpsb
fdivs
jl
inc
jns
dec
lahf
push
xor
les
push
cmp
movsb
fisubl
mov
data16
mov
fwait
add
xchg
dec
in
sbb
jb
add
bound
push
dec
dec
or
jle
dec
bound
jbe
dec
and
push
push
test
push
cmp
push
mov
adc
inc
cmpsb
dec
iret
aas
xor
rcr
popa
jne
arpl
mov
movsl
push
pusha
and
dec
rcrl
pop
mov
and
xchg
push
mov
aad
jno
js
cli
dec
sub
clc
pop
sub
pop
push
daa
adc
push
add
dec
idivl
mov
push
ret
adcl
cwtl
loope
push
outsl
push
jb
addr16
bound
sub
pop
add
test
lock
push
mov
xor
shrl
hlt
push
outsl
mov
les
push
cmpsl
outsl
add
or
pop
mov
mov
pop
sbb
lea
cmp
mov
data16
or
js
pusha
pop
sub
xchg
lea
pop
fisttpl
ja
mov
pusha
das
ja
fildl
xchg
dec
insb
aam
push
pop
pop
rclb
or
pop
inc
jo
icebp
xor
ss
scas
std
push
gs
sub
add
xlat
adc
lahf
les
inc
inc
dec
lahf
cs
subb
leave
sub
shrl
roll
sbb
iret
add
mov
stos
or
push
lahf
mov
nop
addb
cmp
sbb
out
mov
xor
add
xchg
dec
lods
daa
inc
add
js
stos
adc
mov
jae
aam
xor
xchg
bound
imul
dec
push
pop
push
jne
les
add
push
adc
imul
xor
rcll
outsl
addr16
push
sub
push
mov
insl
pop
pop
jecxz
test
inc
sbb
out
and
iret
repz
ds
test
adc
cmpsl
stc
cmp
call
xor
xor
mov
add
jae
cmp
nop
push
add
pushf
jo,pt
cmp
mov
and
pop
iret
xchg
xor
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
ljmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
jmp
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
decl
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
incl
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
lock
call
xchg
mov
mov
or
or
call
push
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
incl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
mov
or
mov
cmp
decl
xchg
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
lcall
shl
adcb
cmc
fnstenv
adc
orb
sbb
frstor
sub
rorl
popa
mov
into
pop
cmp
mov
pushl
mov
dec
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
ljmp
jae
add
in
add
pop
dec
or
cmp
add
daa
adc
or
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
incl
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
decl
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
lcall
inc
push
imul
xorb
sbb
push
imul
aam
loopne
call
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
call
mov
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
cmp
jmp
mov
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
mov
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
decl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
incl
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
call
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
dec
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
fwait
and
ret
sbb
ds
add
mov
bound
add
ds
outsl
inc
jne
xor
mov
push
imul
xchg
push
nop
cwtl
mov
cmpsl
popa
inc
add
cmp
inc
jne
outsl
insl
pop
cmovp
inc
es
mov
bound
mov
sbb
rolb
push
lock
inc
js
scas
dec
mov
in
popa
dec
push
aas
fistpl
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
add
jg
or
xor
bound
imul
popa
push
inc
jbe
pop
jnp
add
jns
push
dec
testb
or
push
xorb
jo
dec
xor
jne
lods
push
repnz
imul
sub
jbe
arpl
or
inc
aas
mov
arpl
or
clc
mov
repnz
inc
inc
inc
lock
nop
push
jl
cs
addr16
fldl
es
xchg
insb
popa
jns
push
or
ret
insb
fadd
pop
xchg
add
cmp
outsl
adc
aaa
aas
insb
imul
aas
pop
mov
add
jg
lods
mov
cltd
and
jae
xor
int
pop
inc
orb
aas
dec
push
pop
and
sbb
shl
inc
pop
sub
sub
jae
inc
inc
inc
add
fsubs
mov
sbb
lcall
jg
iret
int
push
dec
dec
lea
mov
fisttps
fs
ja
inc
jge
inc
outsb
jne
xor
popa
mov
stos
mov
xor
xor
mov
notb
or
add
addr16
sub
into
pop
lods
jge
shlb
pop
inc
cmp
aas
aaa
fdiv
sub
dec
out
imul
or
outsl
or
adcb
xor
lahf
jo
adc
push
jmp
pop
nop
scas
pop
stos
xlat
mov
mov
and
sub
frstor
jae
inc
inc
dec
popa
jo
add
add
push
add
dec
push
outsl
outsl
test
shrb
push
jno
adc
stos
loop
in
jb
pusha
rcrb
in
nop
pusha
lds
jne
leave
cmp
pop
arpl
sbb
push
cmp
movsb
lcall
je
jo
push
adc
push
outsl
insb
jns
sbb
mov
inc
inc
sub
mov
bnd
dec
mov
add
nop
adc
inc
pop
stos
fsubrs
mov
cld
add
push
bound
lods
cmpsb
pop
ret
fisubl
aam
push
dec
ja
subl
cmp
xor
sahf
out
movsl
inc
int
sub
sbb
add
add
add
fmuls
xchg
cmp
dec
jo
sub
pop
inc
add
scas
addr16
push
testb
and
push
stos
dec
pop
mov
dec
insl
xchg
inc
mov
aas
pop
mov
xchg
add
loopne
aaa
xor
aaa
add
or
les
push
loop
aaa
adc
lret
sub
add
loop
aas
pop
inc
adc
adc
lods
mov
push
addl
aas
aam
lock
das
add
in
lcall
dec
sbb
cmp
pop
xor
cs
outsl
mov
negb
or
xchg
mov
push
add
int
cmc
ljmp
adc
adc
push
dec
or
xor
or
stos
cs
mov
adc
fs
repz
loope
call
out
mov
jg
pushf
and
imul
add
xor
sbb
testl
jg
cmp
loopne
add
clc
aam
xchg
sti
outsl
mov
imull
adc
sbb
stos
int
out
dec
out
and
les
inc
mov
incl
sub
lahf
dec
cwtl
pop
sbb
incb
lcall
sbb
xor
call
mov
ret
mov
sbb
inc
jbe
into
rorb
push
leave
or
decl
int3
test
dec
movsb
dec
ficomps
jge
mov
arpl
adc
out
rclb
lcall
inc
jp
jge
inc
lret
push
insb
dec
popa
pop
sbb
push
sub
and
lods
pop
scas
mov
lahf
jmp
out
sbb
xorl
icebp
xor
arpl
adc
dec
xchg
call
or
fisttpl
leave
adc
ljmp
dec
dec
add
or
mov
and
and
out
cmpsl
movsb
int
ljmp
shrb
add
mov
sbb
push
jbe
jg
data16
in
incl
push
aaa
arpl
adc
sub
outsb
xor
xchg
adc
xor
jmp
aad
lret
ja
mov
push
or
cwtl
inc
mov
cwtl
ljmp
dec
sub
stos
jno
movsl
sub
mov
test
test
and
lcall
push
dec
xor
mov
inc
dec
sti
cmp
xor
das
xor
das
sahf
sub
push
jg
lods
jmp
data16
popa
lock
stos
xor
lcall
xor
jecxz
cmpsl
aam
call
cld
xor
mov
jp
enter
sub
test
add
mov
fdivrs
lcall
push
popa
mov
lret
sbb
pop
xor
xlat
jle
adc
call
mov
roll
out
int
inc
lods
add
cmp
inc
call
ljmp
ss
sahf
xchg
jle
lahf
mov
in
push
pushl
shlb
or
pop
or
dec
les
and
cmp
xor
lock
lcall
cmp
cwtl
clc
mov
pop
fmuls
xor
push
xor
or
bound
jb
ljmp
sbb
lock
fistps
daa
xchg
adc
ret
dec
lea
push
cmp
movsb
lret
push
fadd
inc
push
mov
xor
add
pop
cmp
push
sahf
mov
data16
push
cmp
mov
xor
xchg
xor
and
xchg
xor
or
stc
inc
lods
mov
test
cld
adcb
pop
out
xchg
decl
jnp
jae
test
jno
rorb
imul
mov
mov
and
enter
mov
into
push
mov
xor
dec
mov
pop
adc
pop
fwait
das
cli
mov
fsts
mov
stos
pop
push
into
push
mov
mov
xchg
pushl
add
movsb
fldt
add
repz
pop
push
jns
push
jb
mov
sbb
or
pop
test
jle
push
daa
push
test
sahf
test
scas
add
sub
dec
inc
repz
cmp
jae
pop
cmp
jb
pop
dec
mov
mov
xor
out
decl
inc
lcall
popf
divb
push
pop
addr16
jnp
mov
push
xlat
mov
sar
pushl
and
mov
add
lods
cltd
sbb
mov
aaa
xchg
mov
or
fwait
dec
lods
xchg
mov
dec
xor
or
je
mov
insl
fcomip
ljmp
pop
jno
nop
dec
xor
pop
daa
cmpsl
dec
clc
mov
bound
xchg
jge
ljmp
jno
xchg
sub
mov
pop
into
jp
mov
dec
inc
mov
jae
jmp
cli
xchg
add
xorb
cmp
mov
push
jmp
xor
imul
shl
pop
ljmp
or
cmpsl
sub
jge
jecxz
or
out
ljmp
adc
stos
inc
cmpsl
mov
mov
in
dec
jg
push
je
lds
mov
inc
sub
xchg
test
push
xor
ss
mov
push
rcr
movsb
mov
and
mov
icebp
sub
pop
jmp
pop
daa
movsb
cmp
inc
test
cmp
mov
push
xorb
pushl
jae
shll
icebp
rorb
push
push
xchg
mov
sbb
cli
ljmp
icebp
fnstenv
adc
and
je
jno
repnz
sbb
pop
adc
or
leave
in
es
rorb
add
add
imull
and
xchg
sub
clc
lcall
mov
pushf
ret
in
aaa
fldz
mov
out
int3
add
jle
shll
insb
in
mov
xor
xchg
push
xor
xchg
lahf
xchg
mov
ja
jno
jmp
movsb
xchg
inc
mov
mov
add
sub
push
outsl
call
fs
jl
xchg
pushl
push
stos
mov
sbb
call
and
add
add
jmp
imul
pop
cli
out
repz
dec
ret
shl
int
insl
fdivs
call
aad
push
pop
dec
mov
pop
xchg
jo
shr
fdivrl
xchg
dec
cmp
push
add
arpl
ficompl
pop
mov
insl
in
fdivr
pusha
xchg
mov
mov
nop
xor
push
fisubl
decl
imul
and
inc
adcl
incl
int3
xchg
das
or
xchg
test
push
dec
inc
push
mov
data16
mov
add
xlat
and
clc
mov
sub
pop
pop
cmp
outsb
cli
lret
xchg
out
insb
aam
sbb
fdivr
ljmp
cmp
jns
orl
movsl
mov
cld
push
shrl
lods
xchg
cwtl
inc
or
in
out
imull
inc
jecxz
or
ds
push
adc
lret
frstor
mov
stos
add
aam
loopne
pushl
mov
mov
outsb
mov
mov
adc
int
fcos
ljmp
add
push
decl
inc
jge
test
mov
pop
and
mov
push
sarl
sub
ljmp
mull
fldt
ficoms
ljmp
inc
push
and
cmp
sub
sub
fwait
dec
sbb
test
sar
jmp
fwait
ret
or
sbb
add
cmc
push
dec
adc
push
sahf
or
fsubl
enter
sbb
push
adc
cmp
fildl
or
andb
adc
loop
lock
and
or
shr
shll
call
cmp
xlat
jl
addl
mov
shl
hlt
xchg
mov
jmp
ljmp
dec
xor
push
imul
mov
enter
push
mov
lcall
loopne
out
lret
sbb
sub
in
dec
cwtl
lret
outsl
fcomp
hlt
in
dec
fnstenv
push
imul
daa
aad
inc
add
ljmp
add
or
lods
xchg
push
ret
mov
sahf
ficompl
js
stos
jp
mov
sbb
and
xor
cltd
mov
rorl
leave
dec
mov
cmc
incl
pop
xchg
imul
inc
std
iret
cld
sarl
pop
ret
es
loope
cli
lcall
mov
pusha
icebp
inc
loope
add
stos
mov
push
dec
adc
dec
jnp
xchg
lahf
iret
jge
mov
jp
dec
inc
pushf
adc
stos
in
inc
sti
xchg
mov
movsl
jmp
adc
inc
mov
mov
adc
cmp
cmpsb
xor
mov
and
push
dec
cli
call
xchg
sub
adc
jg
call
std
inc
rclb
nop
push
lret
xchg
sbb
sub
fcom
and
push
mov
fsub
cwtl
xor
scas
cmp
inc
pop
shll
filds
ljmp
push
iret
cmp
icebp
dec
mov
sahf
lret
jp
fcmovne
inc
adc
sub
ljmp
dec
das
cmp
jmp
xchg
or
jne
stc
and
sbb
cmp
nop
loop
cmp
aaa
jg
or
adc
adc
lret
ss
xor
subb
mov
jno
pop
call
xlat
add
pop
aam
add
insl
mov
lock
dec
jle
decl
push
dec
pop
push
in
notl
cmp
pop
xchg
mov
pop
jb
loopne
clc
ret
cmpsb
leave
add
push
lock
jp
ljmp
into
out
fmull
lret
test
mov
and
dec
out
jae
out
inc
cli
sub
insl
mov
or
pop
xchg
fs
jns
mov
lods
in
in
sub
fs
incl
push
popa
push
pop
or
mov
xchg
rcll
mov
dec
inc
iret
cmp
ljmp
lea
sbb
sbb
test
sbb
adc
and
lret
iret
xchg
clc
sub
mov
mov
push
or
jge
sub
push
call
xchg
dec
pop
rcr
pop
and
push
push
rol
fbstp
sub
inc
test
insl
inc
pushl
cld
loop
movsb
hlt
adc
sub
in
das
pop
xor
ret
push
bound
add
pop
mov
push
daa
test
cmpsl
daa
in
aad
das
sar
inc
xor
add
outsl
push
shll
out
xor
jmp
jne
lods
dec
inc
sub
icebp
in
insl
lret
pop
inc
push
ret
movsb
mov
test
lret
sbb
pushl
jl
rclb
mov
into
push
std
or
lds
sbb
stos
movsb
popf
sbb
movsb
pushl
xor
jno
js
repnz
xchg
sub
ljmp
jmp
push
pop
jo
shll
mov
call
xor
fcoml
dec
or
or
mov
movsl
mov
sbb
std
push
lods
xchg
pushl
or
adc
repnz
pop
int3
add
jmp
test
push
add
pop
mov
sbb
ljmp
mov
rcr
lahf
movb
sarb
aad
sub
movsl
fldcw
ja
ficoml
fistpl
addr16
jmp
aad
ljmp
cli
mov
cmp
icebp
mov
out
es
pushl
mov
adc
mov
imul
insb
cmpsl
inc
js
nop/reserved
pop
std
ret
dec
cmc
and
nop
lods
call
gs
and
dec
imul
push
mov
push
sbb
cmpb
xor
xchg
add
push
mov
adc
jnp
cli
inc
jg
incl
push
and
mov
pop
jbe
mov
lcall
mov
lods
ja
ljmp
out
dec
hlt
cmp
test
and
cmp
roll
push
enter
hlt
jle
pop
fdivrp
lcall
incb
push
cld
dec
mov
or
fisubrs
sub
decl
inc
decl
pop
aaa
cmc
and
add
sti
and
test
incl
sbb
mov
imul
mov
int
jge
jmp
mov
incl
xchg
xor
loopne
ds
or
popa
je
fmull
out
andl
jmp
scas
pop
or
loope
jb
loope
sti
dec
orl
daa
ljmp
es
leave
call
sub
js
and
xor
cmp
sub
shrb
je
shlb
mov
std
out
jg
add
xchg
xor
repnz
inc
push
mov
enter
cmp
hlt
mov
jecxz
clc
dec
jmp
or
pop
or
mov
xchg
mov
lds
ljmp
sar
out
es
andl
pop
aad
pop
mov
push
int3
pushl
jmp
outsl
dec
push
or
lret
inc
stc
fs
sbb
push
pop
fcomip
test
or
or
cmc
pop
outsb
cwtl
push
jne
int3
jmp
out
xchg
hlt
int
hlt
aas
sub
jg
incl
fs
sub
cmp
jns
xor
inc
or
add
ret
andb
cmp
shlb
mov
mov
movsb
cmp
sahf
sub
lods
inc
push
mov
add
rclb
out
xchg
jle
insl
sarb
mov
mov
pushf
cmp
mul
mov
lret
decl
cmp
dec
outsl
pop
jae
dec
and
call
push
pop
out
cmp
incl
xor
xlat
sarl
adc
jbe
jge
adc
mov
ja
pop
adc
mov
call
pop
test
adc
mov
shrb
outsb
arpl
std
push
fs
std
ljmp
out
imul
test
inc
jo
sbb
sbb
into
aad
add
and
loop
push
jle
push
addb
xor
add
out
mov
jae
fcomip
push
addr16
jecxz
mov
adc
enter
shlb
add
push
jnp
xchg
lods
je
test
xchg
inc
lods
pop
adc
sbb
decl
push
push
test
jmp
jae
jo
inc
sbb
sub
adc
jne
mov
jne
jbe
pop
loopne
dec
ret
jb
insb
subb
push
nop
pop
lcall
dec
xorb
fldt
arpl
or
jno
je
dec
mov
adc
aas
push
inc
fisttpll
gs
pop
arpl
shll
into
sbb
scas
fistl
dec
int3
pmaxsw
xchg
mov
test
pop
adc
out
fidivrl
mov
inc
dec
mov
aaa
aad
sbb
mov
cmp
lcall
mov
xor
add
add
fdivrl
icebp
cmpsl
inc
mov
adc
mov
pop
ret
cltd
jne
and
divl
xor
aad
push
fdivrl
sub
dec
ret
jl
rolb
xchg
xor
divb
sbb
loop
xor
push
jno
xchg
pushl
jl
jnp
add
sbb
lods
int
les
roll
filds
fists
sub
icebp
es
pushf
mov
mov
fninit
call
mov
xchg
mov
inc
int
lcall
lds
pushf
sbb
ljmp
pop
sub
inc
loope
jae
cmp
pop
sbb
addr16
inc
sbb
jge
stc
mov
mov
mov
les
lahf
push
adc
leave
movsl
mov
mov
in
cmp
decl
outsl
jne
sub
movsl
sub
mov
js
push
daa
dec
fwait
movsl
daa
add
sar
mov
in
pop
inc
inc
cmp
xchg
bnd
cmp
sti
inc
push
adc
and
pushl
loop
adc
dec
jb
pop
repnz
test
jg
sub
or
js
jmp
jns
aas
ficoml
and
and
lock
cwtl
ss
cmp
imul
cli
decl
push
in
mov
pop
int
loope
jmp
sub
pushf
xchg
dec
and
jns
push
dec
or
sub
inc
addr16
ljmp
jb
subb
fbld
xchg
push
mov
in
mov
popa
pushf
sarl
sbb
subl
dec
mov
sub
mov
pop
sbb
lds
ss
jle
inc
jmp
out
out
push
mov
lcall
call
ja
push
cmp
daa
sub
xlat
test
icebp
cmp
lds
inc
inc
mov
jbe
test
sbb
orl
incl
jne
pop
pop
push
sub
jmp
test
sbb
inc
xor
mov
jbe
add
push
sti
lea
xchg
lock
inc
scas
enter
movsb
repz
mov
sar
clc
pop
push
aam
mov
dec
popa
fldenv
or
mov
pop
out
push
push
jns
mov
repz
adcl
stc
push
xchg
ss
push
xchg
xor
and
lcall
pop
popf
inc
mov
mov
or
adc
adc
icebp
mov
mov
add
pop
pop
stc
aaa
fcmovbe
arpl
fwait
aad
lods
jmp
in
addr16
xlat
nop
pop
push
cli
sbb
xchg
cmp
jg
lods
mov
jns
bsr
enter
into
lds
xor
lret
cmp
jecxz
pushl
std
add
jl
inc
inc
call
test
mov
mov
jecxz
mov
push
ret
jmp
insl
adc
mov
xlat
lods
dec
cmp
aad
mov
incb
loop
mov
aaa
shll
inc
js
pop
xchg
cmc
jg
jg
aas
sbb
inc
sarl
cmp
cmp
xor
sbb
fistpll
dec
cmc
bound
nop
repz
dec
jo
jnp
push
loop
xchg
push
aas
add
mov
mov
sbb
jl
xchg
push
dec
ret
and
inc
lods
fstpl
cld
mov
test
mov
pop
add
dec
movaps
lcall
ret
adc
xor
jmp
add
cmp
ljmp
insb
lret
mov
xor
push
aam
push
cmc
mov
dec
mov
pushf
mov
ljmp
xor
dec
cmc
fidivrs
xchg
inc
sbb
jbe
dec
mov
and
and
and
mov
mov
sub
jmp
add
add
dec
add
inc
into
xchg
clc
imul
decl
push
push
mov
jl
iret
test
or
arpl
inc
sbb
xchg
sbb
dec
ja
pop
lock
push
adc
or
ds
clc
and
repz
loope
mov
lahf
je
ja
pushf
mulb
cmp
jmp
jbe
call
imul
sub
dec
clc
aaa
addr16
addr16
pop
shr
lcall
sub
lcall
push
sub
aas
sub
sti
mov
cmp
lcall
sbb
ds
cmp
pusha
mov
lcall
cli
mov
into
ret
cmp
repz
test
mov
fcoml
xchg
xchg
or
jmp
and
fldcw
orl
mov
and
xor
stos
adc
incl
insl
lods
cli
push
pop
jl
mov
insl
repz
cli
cmp
add
pop
fstl
js
jp
jbe
inc
incl
daa
imulb
mov
pop
add
inc
add
jp
imul
cmpb
testl
lods
daa
fs
mov
xor
sub
pop
stos
sub
xrelease
fldcw
mov
int3
lds
and
pop
aam
xchg
imul
push
stos
bound
ljmp
lods
push
shr
js
inc
test
xchg
lods
into
mov
cmpb
out
mov
ljmp
sbb
cmp
addl
push
push
les
or
cmp
push
pop
test
cs
aaa
mov
nop
enter
pop
ret
jp
cmp
arpl
repz
lcall
cmc
outsb
pop
sahf
loop
lods
push
sarl
orb
roll
imul
or
ljmp
cmp
aad
aad
add
mov
xchg
mov
sbb
lods
mov
das
cmp
les
decl
in
sub
cmpsb
rcrb
stos
mov
cwtl
cld
cmpsl
hlt
shlb
lahf
mov
call
mov
cmp
adc
scas
das
cld
jo
aaa
nop
fstpl
xor
hlt
imul
fwait
jg
imul
out
adc
cmp
imull
call
xchg
or
add
or
adc
sbb
jae
daa
sub
ret
incl
jbe
mov
dec
cmp
push
push
dec
jmp
shrb
or
mov
fildll
daa
outsl
fistps
xor
pop
or
sub
aad
insl
rcr
mov
imul
pusha
scas
lods
sub
mov
cmpsb
add
fiaddl
and
cltd
out
mov
push
cwtl
mov
mov
aaa
mov
jbe
stc
jmp
ret
push
clc
daa
mov
cmp
push
lret
xchg
or
pop
aad
leave
sub
in
jmp
daa
push
fldenv
lock
sar
jl
loopne
adc
cs
adc
cmp
push
add
mov
sahf
fs
mov
cmc
jg
dec
mov
pop
fstl
pushf
bound
roll
stc
stos
subl
xor
jns
xor
movsl
enter
mov
inc
push
lock
push
enter
std
in
cmp
in
cmp
mov
jmp
popa
cmpsl
incl
inc
jg
int3
jo
or
push
xchg
outsl
jp
aam
cli
call
mov
jmp
adc
push
rclb
ss
cmp
imul
cmp
repnz
push
or
mov
jmp
sarl
dec
push
pop
icebp
mov
pusha
or
pop
popa
sub
rolb
dec
das
dec
or
dec
and
pop
imul
sub
stos
push
mov
loop
xchg
xchg
push
xor
mov
fldt
icebp
inc
fwait
inc
shrb
push
sahf
out
sbb
xor
sbb
pushl
lods
cmp
outsb
lods
sbb
cmp
loop
xor
in
mov
hlt
das
movsb
mov
sbb
and
inc
or
inc
xchg
jmp
mov
scas
push
into
dec
sar
mov
stos
imul
and
ljmp
sub
decl
cmp
scas
push
popa
movsb
mov
mov
mov
sbb
jbe
dec
shll
ljmp
clc
fisubrl
mov
movsl
call
idivl
lcall
lea
sbb
xor
js
push
jnp
roll
push
in
ljmp
mov
lret
jmp
cmp
jmp
push
pop
stc
mov
imul
sbb
out
shlb
es
adc
push
push
mov
lret
popf
addr16
jmp
dec
aas
out
sub
add
mov
shrb
xor
stos
or
sbb
clc
adc
addr16
mov
add
jne
dec
imul
xor
test
pop
sarb
idiv
mov
push
sbb
fwait
jecxz
push
cmp
dec
cmp
pop
inc
decl
xor
and
push
sub
jl
sahf
xchg
stos
scas
cmp
sub
incl
lret
xchg
jge
xchg
add
xchg
addb
push
lcall
je
fwait
mov
inc
cmp
and
or
movsb
inc
inc
packuswb
cwtl
add
lock
aad
jmp
cs
cmp
dec
adc
and
pop
std
subb
fstpt
clc
push
loope
pusha
xor
jmp
in
cmpsl
jns
mov
cmp
or
in
cmp
out
push
xchg
mov
cmpsl
test
add
cmp
in
rclb
frstor
push
test
scas
push
fsubrs
xchg
mov
cwtl
dec
xchg
into
pop
das
je
and
sbb
ljmp
in
aad
inc
mov
or
adc
pop
aaa
sbb
in
bound
mov
mov
shll
addb
mov
jnp
jge
jb
insb
scas
insb
inc
cmp
sbb
in
xorl
lods
lods
push
pop
rcr
adc
lock
pop
sub
pop
or
lcall
rcrl
std
xlat
xchg
popa
xchg
out
jg
gs
dec
cmp
not
mov
mov
mov
loop
pop
popf
mov
lods
push
cli
dec
cmp
call
out
jle
idivb
lret
jae
xchg
mov
mov
es
lcall
loopne
xor
mov
incl
xchg
xor
mov
cli
enter
test
push
xor
cmp
cltd
jp
test
ds
mov
mov
fldenv
adc
jmp
push
jns
sbb
scas
lods
pop
jmp
leave
push
cwtl
add
mov
add
subl
repnz
xor
shrl
fisubl
roll
sbb
mov
lret
and
bound
movsb
fdivs
gs
xchg
cld
xor
shl
xor
jg
dec
jbe
jmp
jbe
gs
xchg
xchg
jl
imul
push
fcompl
pushl
repz
jg
mov
pop
out
stc
adc
pop
cmp
mov
lret
mov
jle
aad
shrl
mov
xchg
pop
xor
repz
cld
pop
xchg
ficompl
pop
mov
jg
pop
sti
stos
enter
push
push
or
inc
cld
add
scas
adc
and
aad
lock
decl
jecxz
das
push
iret
fs
ja
adc
mov
adc
cmp
jp
mov
xor
scas
mov
dec
mov
dec
repnz
cmc
adc
aam
lcall
aad
addr16
xchg
and
imul
rorb
out
clc
lcall
int
iret
or
imul
jge
ret
fwait
imul
aad
xchg
repnz
xchg
jmp
rcrl
add
and
dec
sbb
jno
das
push
lcall
inc
adc
push
sub
decl
xor
inc
divb
pushf
push
xlat
hlt
mov
subl
idiv
mov
insb
out
dec
daa
mov
and
testb
lcall
cmp
adc
call
insb
cmp
and
push
loop
mov
popf
imull
fildll
dec
or
stc
stos
sti
mov
push
jge
cli
rcll
pushl
cmp
pmulhw
xchg
test
sub
or
arpl
mov
jae
hlt
jmp
pop
loope
lcall
outsb
aam
in
mov
cmpsb
push
cmp
nop
loop
jns
xor
pop
pushl
lods
loopne
cmp
sbbb
xor
push
xlat
call
insl
add
cld
pushl
adc
pop
sbbl
mov
js
pop
or
add
and
fidivl
jg
sub
lea
jg
jge
jp
and
lods
mov
das
mov
xorl
adc
ss
mov
xchg
mov
jae
inc
lods
jno
sahf
fistl
outsl
clc
pushl
test
inc
ficompl
mov
push
outsl
int
or
jp
mov
call
int3
das
xlat
adc
adc
repnz
add
xchg
push
pop
les
adc
js
ja
decl
jns
sub
add
rcrl
push
icebp
adc
out
ljmp
loopne
pushl
mov
push
dec
shlb
or
xchg
test
pop
stos
stos
adc
dec
bound
pushl
and
fbld
push
and
mov
mov
ljmp
cltd
lret
inc
lcall
xchg
dec
or
ret
gs
pop
add
pop
sbb
cld
mov
mov
ret
lcall
test
out
jno
xchg
lahf
cmc
gs
bound
xor
pop
shll
jmp
data16
decl
push
aam
jl
mov
mov
gs
mov
incl
sub
mov
xor
add
adc
cld
mov
add
jg
in
inc
and
sbb
mov
adc
shlb
js
mov
mov
popf
popa
int3
mov
inc
push
fcoml
xor
push
lcall
ljmp
pop
push
or
test
sbb
add
icebp
in
movsb
pop
dec
push
rcrl
inc
aad
call
clc
inc
and
shrb
ret
mov
cmp
fs
mov
into
or
dec
mov
lcall
add
inc
mov
cltd
mov
loopne
arpl
jge
inc
aad
mov
popf
rclb
dec
test
ds
aas
js
sbb
jnp
mov
dec
cwtl
pop
or
ljmp
mov
cmp
out
call
mov
cmp
push
gs
push
jns
mov
push
rcl
dec
xor
jmp
int3
push
test
clc
pop
push
jmp
xchg
jmp
jmp
dec
and
fstps
ljmp
adc
push
icebp
lods
clc
or
dec
push
mov
jl
icebp
aaa
xchg
sub
call
mov
mov
adc
xor
aam
push
std
jbe
push
inc
repnz
enter
mov
stc
ljmp
or
aam
std
or
lock
imul
adc
decl
out
push
call
and
idiv
adc
repz
jl
mov
add
outsl
lcall
dec
cmp
ljmp
iret
pop
jmp
pop
sahf
out
and
xlat
pushf
mov
stos
decl
cmp
inc
stc
mov
xchg
out
sahf
mov
dec
pop
int
cmp
mov
jl
and
dec
cmp
js
cmp
add
fsubrl
dec
stos
sahf
push
and
scas
push
stos
loope
pushl
testl
mov
inc
mov
and
xchg
xchg
push
pusha
fbstp
and
stc
pushl
imul
scas
pop
and
adc
xchg
lcall
cmp
movups
dec
rol
fs
call
or
int3
outsb
dec
push
jb
lahf
je
sub
push
shll
dec
mov
inc
lock
stos
lods
test
mov
pop
ljmp
adc
sbb
cld
add
sbb
loope
pcmpeqb
jle
insb
lret
out
mov
cmp
inc
cmpsl
pop
or
das
jb
fbstp
xchg
jg
sub
sbb
mov
dec
and
js
movsb
scas
xchg
mov
mov
pop
fwait
lahf
loop
int
lds
mov
pop
dec
arpl
decl
addl
mov
test
shlb
cli
out
aad
push
lods
xor
ljmp
movsl
cld
jmp
ljmp
inc
and
enter
jle
hlt
sbb
popf
cs
sti
test
int3
mov
xchg
leave
lds
int
jl
inc
rcrl
push
mov
ljmp
jle
jecxz
cmp
inc
dec
orl
mov
leave
ds
arpl
inc
incl
push
mov
inc
mov
xor
and
iret
pop
fcoml
lock
cmp
jnp
jl
incl
pop
nop
xchg
lcall
inc
and
lcall
fldl
sbb
fisttpll
mov
push
movb
cld
clc
pushl
insl
mov
scas
sbb
xchg
and
pushf
loop
dec
insl
mov
ljmp
rorb
cmc
pop
and
loopne
mov
rorl
or
insl
lcall
inc
cmc
daa
fldlg2
loope
in
shr
clc
xor
cmp
push
popf
dec
xchg
push
jmp
hlt
xor
lahf
scas
push
cmpsb
sub
test
ljmp
sti
sbb
sar
lcall
mov
shlb
add
inc
andb
mov
and
scas
jg
call
jge
push
outsl
popf
adcl
daa
les
add
test
jg
gs
push
iret
adc
rol
shr
mov
nop
ja
mov
mov
lcall
cmp
adc
stos
add
into
enter
aam
ljmp
std
loope
lcall
lea
sahf
dec
pop
das
xchg
ja
xchg
sbb
fsubp
repnz
jnp
les
outsl
jmp
xor
mov
jbe
iret
jne
fnsave
push
icebp
insl
jne
or
jnp
fdivp
inc
ljmp
mov
popf
mov
aam
xchg
in
scas
out
jo
out
push
std
ljmp
cld
pushl
lds
orl
pop
iret
popf
jmp
repnz
arpl
call
push
push
jmp
pop
bnd
mov
jmp
inc
js
movsb
cltd
add
ljmp
cmp
movsb
and
aam
rcr
push
repnz
mov
aas
insb
mov
jge
mov
outsl
stc
movsb
das
aaa
mov
xchg
aam
and
sarb
push
jl
mov
je
int3
ficompl
fsub
movsb
aad
xor
ret
popa
mov
sti
cltd
mov
cs
sahf
xor
jl
pop
mov
sbbb
ja
inc
inc
pop
rcll
xchg
outsl
pusha
sub
das
cwtl
push
inc
sarl
or
inc
add
out
in
leave
pusha
je
insb
adc
cmp
jg
mov
push
neg
ljmp
pop
pop
lods
dec
ret
in
and
test
incl
cld
dec
stc
mov
inc
leave
sub
ds
test
pop
jmp
fisubl
add
test
int3
dec
testb
adc
add
lcall
xlat
cmp
xchg
push
xor
xor
out
bound
pusha
hlt
into
pop
cmc
lcall
lcall
lret
mov
test
insb
clc
pop
rcrl
cmp
jmp
mov
pop
cmpsl
mov
hlt
sub
push
cmpsb
ljmp
int3
movsl
fidivl
out
pop
cmp
push
or
sbb
shlb
jge
pop
push
out
mov
push
arpl
mov
lods
inc
bound
nop
push
ret
inc
xchg
pop
mov
push
mov
and
jecxz
lahf
dec
or
mov
or
pop
rolb
sbb
push
insb
pop
test
test
cmpsb
incl
and
aam
sub
dec
test
imul
insb
clc
pop
xor
aaa
outsl
cmp
rol
std
movsb
das
repnz
pop
sbb
jno
sti
and
jnp
ds
push
incl
inc
xchg
cmp
sbb
fwait
push
adc
push
int3
sub
es
aaa
sbb
cs
out
jmp
sbb
sbb
int3
xor
inc
mov
in
mov
aaa
jmp
decl
imul
std
ljmp
test
call
pop
rorw
pop
ret
inc
jp
xchg
fmuls
jmp
fstl
das
je
add
lea
test
aam
jbe
push
lcall
scas
mov
es
or
lea
pop
addl
mov
add
sub
cli
imul
sbb
popa
jg
mov
xchg
mov
jns
jecxz
sub
loope
incl
jle
jmp
adc
mov
movsl
daa
ret
xchg
or
jp
or
das
decl
mov
xor
subl
mov
enter
adc
add
mov
mov
shrl
xor
jno
pusha
sbb
mov
xor
mov
call
out
adc
mov
xor
lret
sub
addb
outsl
lcall
andb
sbb
xchg
mov
add
enter
inc
stc
outsb
inc
mov
and
cmp
test
out
push
pop
jg
gs
cld
mov
pop
and
divb
into
movsl
ja
lcall
xchg
popl
push
inc
cmpsl
jo
lahf
enter
mov
cmp
push
pushl
test
jp
je
pop
ss
jne
push
pop
jecxz
mov
cmp
jle
cmc
jp
insb
xor
lods
mov
inc
ja
test
divl
decl
das
push
inc
jl
cmp
cmpb
lcall
mov
mov
pusha
dec
es
call
popf
jo
mov
cld
pusha
test
xor
inc
lods
sbb
adcb
movsl
pop
cmp
push
cltd
xlat
dec
sbb
mov
sbb
cs
cwtl
ret
xor
pop
fisubrl
and
cmpsl
push
or
push
lcall
stos
aas
sub
es
sbb
and
jbe
inc
inc
aas
notb
mov
das
cli
fstl
and
sarb
je
and
xor
stos
jmp
sbb
mov
mov
into
inc
mov
sub
scas
cmc
mov
dec
pop
cmc
aad
xor
cmc
fmull
xchg
adc
mov
jne
lcall
in
mov
lods
cmpsb
js
dec
push
fmull
push
fimull
stos
mov
inc
out
ljmp
jmp
lock
lret
fistpl
cmp
or
aas
lret
sub
xchg
xor
pushl
pop
aas
ret
stos
dec
in
adc
imul
out
and
leave
push
cmpsl
jbe
jge
lea
inc
call
adc
mov
dec
sbbb
jge
fildl
aam
repnz
lcall
in
jg
sub
jmp
icebp
adcb
mov
int
out
shll
filds
decl
shlb
push
mov
stc
je
pop
xchg
push
mov
pop
or
test
pop
jmp
and
in
inc
icebp
cmp
inc
int3
leave
pop
jns
push
jg
xor
pop
stos
xor
ss
ljmp
pop
decl
ljmp
imul
sub
addr16
jle
ret
fdivrp
decl
lock
or
mov
mov
mov
xchg
push
es
out
sub
push
lret
or
push
pop
mov
lds
bound
pop
fldenv
mov
mov
scas
fists
scas
sbb
lret
jne
sbb
xchg
pop
cmp
inc
jmp
pop
dec
pop
mov
inc
stos
mov
mov
cmc
hlt
dec
mov
xchg
nop
idivb
mov
mov
xlat
es
loope
add
sub
push
inc
lcall
cmpsl
das
outsb
jecxz
jo
sbb
int3
jl
mov
sbb
inc
int3
scas
push
movsl
aas
lds
or
mov
push
push
mov
incl
inc
dec
ja
mov
mov
fldenv
fdivs
popf
jl
dec
into
dec
pop
ljmp
pushf
jae
aad
xlat
je
pop
out
popa
popa
sbb
xor
dec
sub
decl
sti
stc
push
in
xor
iret
adc
mov
dec
and
xor
pop
mov
pop
xchg
cltd
cmpsl
sbb
incl
fcomps
les
mov
dec
xchg
or
mov
fadds
sub
sub
push
cs
hlt
testb
adc
mov
pop
mov
cmp
leave
and
aas
into
cmp
movsb
jg
mov
hlt
sbb
xor
shrl
mov
jge
sbb
orl
push
xchg
xchg
das
dec
push
outsl
xchg
add
inc
xor
iret
lock
push
and
lcall
jl
pop
pushw
in
dec
adc
mov
not
pop
repnz
int
xor
push
adc
pushf
xlat
push
out
adc
mov
imul
or
xchg
insb
xchg
pop
pusha
pop
scas
das
mov
decl
cmpsl
pop
push
xchg
xchg
lret
mov
es
and
mov
decl
out
jmp
sbbb
out
cmpsl
loope
nop
dec
cmp
pop
adc
pop
lcall
out
mov
xor
pushf
cmc
jmp
inc
stos
fdivrs
clc
aad
gs
push
mov
and
rclb
jo
jmp
outsb
outsb
pop
mov
sub
addr16
xor
mov
imul
cld
call
and
out
in
fbld
in
aam
cld
jbe
leave
insl
pop
std
sbb
xchg
dec
xchg
rolb
dec
movsb
push
xchg
lods
stos
rolb
push
js
mov
mov
pop
std
imul
outsb
mov
pop
fstp
ret
outsb
xchg
into
mov
fcoml
fxch
jmp
mov
js
fcompl
xor
addl
enter
js
lcall
jae
cmp
and
pop
mov
int
and
insb
fcmove
cltd
jo
insl
jmp
add
decl
adc
sbb
pop
xor
das
stc
push
shl
cmpsl
jo
testl
sbb
xor
cmp
in
push
add
cmpsb
inc
jno
push
fiaddl
xchg
loopne
lds
je
lcall
mov
jmp
xchg
mov
adc
xor
and
add
daa
or
inc
adc
cmpsl
xchg
push
jmp
jne
test
add
add
ljmp
jg
xchg
int
decl
jb
sbb
cwtl
mov
mov
jp
imul
jle
or
mov
mov
dec
inc
aaa
jns
lods
and
jg
lcall
or
pushl
rol
jg
pop
lock
stos
and
mov
sbb
inc
xor
andb
xor
sub
sub
leave
ja
stos
decl
push
push
inc
in
cmp
adc
sti
xor
lret
stos
adc
call
pushl
mov
inc
into
shrb
outsb
xor
xor
cmp
mov
pop
fcmove
and
dec
shll
call
jl
lret
mov
rorb
cld
pop
pop
insb
dec
subb
das
adc
mov
cld
and
pop
jg
xchg
ja
je
test
test
adc
lods
mov
fnstsw
out
test
inc
call
outsl
ljmp
mov
lea
test
pushl
dec
push
scas
mov
sahf
xchg
jnp
ja
jp
mov
jp
mov
add
lcall
dec
insl
mov
cmp
cmpsl
mov
adcb
icebp
mov
in
movsb
mov
fildl
addr16
fs
sbb
stos
scas
xchg
test
loope
push
fcompl
data16
xchg
pushl
stc
jns
aas
in
mov
mov
pop
iret
cld
mov
sub
adc
pop
sbb
ja
push
cld
ja
lds
sar
jbe
fisttpll
xchg
scas
mov
sbb
xor
pusha
cld
mov
mov
push
int3
sub
andl
push
adc
pushl
mov
sub
sub
adc
mov
leave
jb
ret
sub
push
sub
decl
sub
push
int
loopne
mov
mov
ljmp
xchg
jns
pop
lret
out
inc
and
add
popf
aaa
addb
into
les
cltd
enter
pop
cmpsl
mov
addr16
pushl
xchg
sarl
mov
fsts
fs
aas
or
mov
dec
lods
dec
inc
xor
jae
imul
sub
mov
mov
cld
ss
mov
aam
shl
das
test
decl
stos
mov
mov
cmp
andnps
mov
xchg
sub
mov
stc
pop
add
rolb
xor
decl
mov
xlat
adc
fistpll
fmuls
fimuls
sarb
push
cwtl
mov
xchg
cmpsl
call
mov
rcll
or
fsubl
adc
sub
or
stos
aam
lcall
jmp
and
inc
out
test
ljmp
xor
dec
mov
std
fiaddl
add
andl
decl
xorl
sbb
test
sub
incl
std
aaa
mov
mov
push
test
dec
fwait
scas
scas
xchg
xchg
cmp
lret
sar
pushl
outsl
icebp
pop
adc
aaa
addr16
xchg
jno
or
adc
jg
imul
and
popf
dec
add
cltd
push
inc
jae
ss
push
mov
movsb
xor
call
xchg
push
xchg
test
aad
or
popf
stos
call
mov
sub
pop
icebp
dec
sahf
ss
xor
mov
cmp
xor
or
mov
call
cmp
and
addr16
cmpb
pushl
ret
ss
xor
pushl
je
pop
sub
repnz
int3
push
adc
or
cmp
pop
xchg
dec
ss
fcomip
decl
inc
aam
push
ja
outsb
adc
xorb
sbb
mov
jmp
lods
sahf
adc
jp
insb
cld
add
mov
idivl
jg
jne
frstor
and
sbb
dec
push
fistpll
popa
aaa
mov
mov
incl
and
addr16
mov
jg
sub
fadds
mov
ja
ss
add
mov
out
mov
cmp
mov
rol
mov
dec
fsub
shlb
cwtl
out
dec
inc
call
add
out
icebp
mov
mov
sbb
pop
pop
out
sub
mov
mov
pop
jo
test
out
je
add
dec
push
cmp
inc
jg
orb
adc
and
sbb
push
xchg
pop
sbb
in
nop
dec
jle
ss
enter
sub
dec
adc
xlat
dec
cmp
xor
jns
dec
adc
xchg
out
mov
jns
lock
ja
decl
lock
or
movsb
jmp
insl
xchg
xchg
xchg
jp
aas
and
jne
aad
ljmp
cli
ljmp
add
cwtl
imul
mov
out
rcll
call
and
das
shl
push
ds
xor
int
addb
jl
inc
cmp
mov
dec
pop
add
out
mov
je
mov
push
les
out
clc
decl
pushf
mov
cltd
cwtl
mov
pop
fildl
in
mov
mov
call
inc
xchg
inc
mov
out
rclb
jb
fldcw
fbld
and
and
lcall
pop
dec
xor
gs
scas
loop
mov
js
fsubr
sbb
int3
push
mov
sbb
jnp
sub
sbb
out
pop
inc
cmp
incl
sub
jl
add
pop
push
cmp
push
cmpsb
mov
pushl
aas
mov
cmp
mov
add
mov
mov
jecxz
cwtl
or
add
movsl
cs
or
jmp
or
lcall
jmp
jecxz
jl
repz
dec
mov
imul
lcall
mul
lahf
fstpt
hlt
jnp
clc
call
push
loopne
mov
sbb
ljmp
inc
mov
cs
mov
push
cwtl
test
and
mov
in
scas
into
add
call
push
adc
xor
mov
adc
or
sub
es
jg
lcall
ret
pop
mov
xchg
push
cmp
out
rcrl
push
and
or
add
jb
mov
xchg
mov
add
mov
jp
sbb
sbb
push
pushf
adc
sbb
mov
mov
jmp
push
and
or
subl
cld
outsb
shlb
icebp
pop
adc
jecxz
push
in
mov
rcll
sub
xchg
fwait
xor
push
popa
push
ja
test
call
nop
mov
jge
testl
mov
nop
scas
hlt
or
incl
mov
icebp
inc
xchg
aam
test
rorb
loop
pop
cmpsl
cs
jmp
loopne
inc
pop
inc
push
cmpsb
xor
fldt
inc
loope
fistl
sub
and
mov
sub
stos
popl
dec
jg
in
mov
mov
cltd
lcall
jmp
push
push
scas
mov
shlb
lret
lods
and
aad
fs
dec
or
call
incb
jnp
dec
xchg
imul
mov
cmp
mov
jg
call
dec
sbb
daa
adc
aaa
and
xor
cld
xor
cmpsb
mov
push
idivl
mov
xchg
pop
cmp
mov
xchg
call
jge
mov
cli
push
mov
jecxz
mov
stos
cmp
repz
sbb
xchg
mov
fldl
into
mov
inc
sbb
inc
aad
std
jmp
cmpb
push
adc
aam
xor
lret
sub
fwait
xchg
push
dec
pushl
mov
in
stc
xchg
dec
inc
adc
pop
vpor
adc
jle
mov
stos
push
ret
jne
pop
les
or
sbb
incl
xchg
adc
push
add
shlb
das
adc
pusha
hlt
es
jmp
add
pop
mov
cs
push
push
mov
in
ret
sarb
jge
xor
xchg
inc
push
shrl
push
push
leave
loopne
xchg
loopne
icebp
add
outsb
jns
add
aas
dec
fiaddl
mov
aas
arpl
scas
decl
das
xchg
cmpsl
std
scas
cwtl
add
cmpsb
movsl
push
es
push
cmpsl
jno
sbb
outsl
call
cld
xchg
mov
mov
bound
lock
pop
lret
fstl
mov
mov
dec
jge
cmp
les
loop
xchg
mov
pop
dec
jle
push
adc
inc
mov
mov
fstpl
sub
mov
push
mov
je
pop
jb
jg
sahf
mov
cmpsl
mov
mov
adc
add
pop
cmp
cmpb
add
pop
add
pop
xchg
add
mov
pushl
fs
or
ja
xorl
lret
adc
es
pop
ljmp
fcmovbe
repnz
sahf
ljmp
lcall
pop
add
leave
jmp
hlt
decl
shlb
cmpsl
jge
sub
arpl
mov
pop
ss
call
scas
cmpsb
rorl
cmp
cld
xchg
mov
mov
fcomip
call
testl
cmp
sbb
in
sbb
dec
pop
push
daa
popf
cmp
jp
mov
jo
mov
ss
movsl
out
ds
mov
call
loop
aad
push
mov
sahf
in
push
ljmp
push
loop
jne
cmpl
loope
lcall
loopne
clc
stos
ljmp
imul
adc
xchg
movsl
mov
add
mov
lret
mov
enter
adc
loope
es
sbb
mov
ja
jmp
sub
xor
cmp
lcall
das
jge
out
das
pop
call
dec
testb
bound
repz
jmp
in
movsl
in
mov
scas
mov
decl
jnp
enter
lcall
dec
sub
fistl
decl
xor
cmc
inc
hlt
cmp
cmp
push
inc
aas
les
ret
iretw
add
pushl
adc
fldl
cmpsl
jp
out
cmc
mov
dec
por
lcall
mov
jle
outsl
outsb
sti
test
das
int3
pop
std
mov
lock
addr16
add
sbb
xchg
cmp
scas
notb
or
inc
outsb
cs
cwtl
fsubs
leave
inc
sbb
cmp
hlt
pop
mov
push
mov
in
and
cmp
lcall
add
shrl
shll
loopne
aas
jbe
cld
bound
jecxz
xor
outsl
clc
decl
cmpsb
adc
push
pop
je
push
inc
xchg
mov
into
xchg
lcall
std
jmp
inc
xlat
je
mov
jb
stos
mulb
jg
cmp
lcall
out
push
pop
jb
mov
xchg
mov
fildll
cmc
jmp
stc
sbbl
mov
pushf
sub
lcall
or
mov
adc
cmp
or
aaa
shlb
call
cld
pop
pop
into
mov
xchg
std
jne
jnp
out
cmp
decl
ja
stos
mov
cltd
push
inc
add
jnp
mov
push
fsubr
dec
mov
cwtl
mov
call
imull
mov
cmp
cmpsb
test
scas
mov
cwtl
stc
fimuls
stos
js
push
xchg
xchg
cmp
lea
jno
mov
stos
xorb
aam
repz
inc
insl
iret
cmp
fcomip
outsl
cli
and
les
or
push
imul
mulb
bound
and
leave
or
mov
lret
push
lret
jmp
scas
hlt
dec
icebp
movsl
fcomps
jb
out
mov
pop
sti
lds
shrb
jmp
pop
int3
fs
push
rorb
pop
in
movsb
sbb
mov
sbb
std
push
pop
inc
loop
call
xchg
fdivr
add
push
adc
add
mov
in
mov
pop
and
jecxz
push
push
xchg
inc
loop
jmp
jg
nop
call
std
push
xchg
jnp
lcall
jge
mov
xchg
add
dec
or
ljmp
jg
sbb
in
mov
stc
dec
es
test
and
out
jg
jg
push
stos
cs
adc
xchg
and
xchg
jmp
pop
and
mov
popf
fs
jge
leave
xlat
sbb
movl
jnp
decl
dec
and
cltd
rclb
movsl
push
fs
ret
sbb
fisubl
lcall
insl
xchg
clc
mov
cltd
jecxz
lock
cmp
cwtl
sbb
sahf
sbb
incl
adc
dec
adcl
xchg
adc
mov
lcall
in
add
sub
inc
inc
int
shrd
lods
mov
call
mov
xchg
and
jb
dec
inc
movsl
inc
mov
bound
fsts
xor
lcall
fadd
and
jecxz
icebp
test
xor
shrb
mov
ljmp
add
xchg
adc
test
sti
mov
insb
add
in
ljmp
xlat
adc
pop
mov
or
xchg
ljmp
xor
ljmp
daa
and
xor
call
mov
repnz
xor
mov
in
add
rcl
std
dec
xlat
jp
inc
and
add
xchg
jge
sub
fs
aaa
jl
pushl
icebp
jle
push
ja
add
dec
sub
jmp
lea
cs
les
call
hlt
jl
scas
bound
dec
xor
mov
dec
mov
mull
sbb
cmc
gs
call
sub
mov
imul
adc
movsl
and
in
addb
addr16
outsb
test
decl
lcall
aam
adc
shl
stc
sbb
inc
xchg
out
jbe
dec
call
or
adc
and
mov
dec
push
pusha
mov
dec
pop
fcomip
mov
push
mov
dec
rclb
jecxz
sub
xchg
roll
pop
inc
xor
push
fisttps
xchg
cmp
and
in
ss
ret
xchg
mov
pop
lret
mov
xchg
sub
lea
iret
sub
adc
lock
or
movb
push
scas
clc
pop
push
jbe
inc
in
mov
cmp
cmp
push
fwait
fsubrp
add
xor
xchg
sub
mov
das
adc
divb
jo
jmp
es
les
jmp
adcb
dec
inc
xchg
lret
jb
adc
lret
xchg
ja
and
aad
dec
xchg
lods
aam
sarl
fisttpll
dec
mov
xchg
subl
jle
or
call
pop
xchg
iret
pop
jae
inc
sub
push
ret
enter
jnp
data16
jle
xchg
push
ja
aam
sbb
push
out
or
insl
shl
mov
add
incl
adc
shlb
adc
pusha
repnz
js
cmpsb
dec
stc
pop
shrd
call
cmp
ja
mov
movsl
xchg
sub
pusha
mov
mov
dec
sbb
leave
rclb
sbb
incl
jb
icebp
mov
jb
rolb
out
lret
jmp
pop
mov
fdivs
lret
dec
push
sbb
cmp
dec
rorl
subb
push
out
int
in
sub
cli
enter
jmp
xchg
xchg
out
add
std
or
or
adc
inc
cltd
stc
push
call
or
inc
cwtl
or
aad
sbb
loop
scas
movsl
jmp
or
dec
sub
ja
cld
add
xchg
push
stos
mov
or
es
dec
pop
push
pusha
xchg
pushf
ljmp
ljmp
mov
mov
sub
decl
sbb
fildl
repnz
push
and
adc
xchg
stc
pop
xor
xchg
rol
and
jbe
mov
push
mov
ret
insb
add
cmpsl
lods
arpl
xor
addr16
jmp
xor
mov
sub
or
adc
aas
pusha
mov
mov
pop
fmull
in
mov
es
adc
xor
inc
bound
lcall
lods
imul
xchg
divb
pop
xchg
xchg
add
out
repz
andnps
cld
ljmp
sub
add
sbb
push
test
pushl
mov
add
mov
sbb
jl
fidivs
dec
mov
xor
gs
fdivrl
jmp
bound
arpl
js
dec
add
mulb
outsb
xor
lcall
mov
add
clc
xor
cmpsl
orl
cmpsl
aas
sub
or
aad
dec
fmuls
out
push
std
jne
or
xchg
lret
jbe
jle
ja
int3
dec
add
ljmp
pusha
xorb
in
adc
les
cltd
in
jnp
cmpsl
jnp
pop
std
decl
adc
movsl
ret
lods
pop
jbe
pop
mov
ret
imul
dec
mov
and
mov
dec
push
inc
mov
sub
jg
ljmp
ficomps
mov
jns
loopne
push
sti
mov
push
push
cmpsb
sbbl
mov
pushl
jp
addr16
mov
or
test
jb
and
push
or
inc
and
mov
hlt
jge
inc
arpl
push
xchg
rcll
adc
call
jge
push
pop
shrb
ljmp
xchg
arpl
pop
pop
int3
pop
pop
inc
loop
jae
ljmp
or
jnp
push
paddq
dec
adc
and
add
mov
xchg
daa
movsl
xchg
adc
shr
inc
lret
dec
add
ljmp
loop
test
cmpsl
push
mov
mov
test
or
cld
fstpl
dec
ljmp
cmp
pop
lahf
into
stos
in
scas
jp
sbb
mov
or
push
pop
and
xchg
out
pop
mov
adc
ds
fidivs
ret
bound
mov
lds
lods
lcall
pushl
popa
xor
mov
inc
inc
adc
pop
add
cli
in
scas
int3
and
xchg
push
pop
idivl
stos
pop
test
cs
call
sti
jl
imul
outsl
mov
addl
fs
xchg
mov
shlb
daa
add
or
jb
push
mov
mov
lahf
rcrb
sub
pop
sbb
push
sub
rcr
subb
mov
shrb
push
sbb
loop
movsb
fiadds
xchg
push
or
loop
dec
imul
jmp
sub
mov
loopne
outsb
hlt
jnp
fsubp
push
jo
cs
lea
gs
mov
and
pushl
push
fldcw
xchg
scas
sti
or
xor
mov
lods
std
inc
inc
inc
lahf
dec
push
test
push
or
mov
je
and
pop
inc
mov
aas
pop
pop
popa
call
cld
incl
mov
test
pop
mov
addl
jae,pn
dec
je
dec
adc
jmp
iret
dec
mov
mov
cmp
inc
outsl
mov
imul
arpl
fwait
push
sbb
adc
insl
jns
in
sbb
lret
mov
scas
mov
mov
ret
sub
sbb
and
sbb
call
jle
rcl
fnstcw
add
in
pusha
jp
xlat
xchg
or
mov
outsb
loop
decl
mov
stos
inc
fdivl
aam
gs
xchg
or
push
int
mov
xor
and
mov
jne
out
pushl
pop
cli
mov
cltd
inc
popl
cmc
cmpsb
sub
adc
push
add
inc
fwait
test
outsb
stc
push
lret
mov
rcrb
testl
lcall
es
mov
int3
xor
mul
pop
cmp
lds
repnz
ret
sub
mov
js
popa
xchg
xor
add
dec
inc
mov
sbb
jb
xchg
pop
lock
cmp
sub
repnz
dec
cmpl
xor
dec
cwtl
inc
pop
sbb
loope
int3
dec
inc
jnp
mov
mov
in
fdivr
incl
jb
sub
rcl
mov
inc
mov
jmp
mov
fs
jecxz
stos
xchg
dec
in
and
sarl
jmp
xchg
pop
add
gs
ja
push
fbld
fildl
imul
ljmp
pop
and
iret
cmpsb
mov
movsl
push
add
vrsqrtss
outsl
and
push
incl
fs
dec
mov
out
or
arpl
fimuls
call
mov
xchg
add
loopne
popw
add
dec
enter
or
jbe
shll
or
inc
loope
rol
bound
and
mov
add
jg
je
xor
mov
pop
sub
mov
mov
lcall
mov
sbb
jno
mov
mov
stos
imul
push
mov
insb
inc
cwtl
imulb
cli
das
clc
daa
movsb
bound
jl
fisubrs
dec
in
dec
insb
mov
or
mov
push
and
adc
cmp
das
lea
mov
call
fistpl
popa
loopne
test
xchg
push
rcrb
enter
dec
movsl
jg
stos
adc
je
in
iret
aas
mov
data16
fildl
cmp
xor
js
inc
inc
and
sbb
inc
data16
lds
decl
loopne
rolb
jno
fs
loopne
sarb
popf
pusha
cwtl
dec
add
rorl
subl
test
bound
enter
or
subb
ljmp
push
out
mov
icebp
movsl
lods
in
popf
xor
in
push
sub
pop
xchg
repz
pop
ja
mov
xor
stos
sub
cmp
adc
pop
push
in
mov
lds
pop
dec
daa
incl
test
dec
dec
mov
in
loope
push
pop
pusha
fsubrs
shrl
sbb
inc
test
jmp
pop
into
mov
ret
int3
rcll
leave
adc
insb
push
xchg
dec
aam
call
lret
sahf
sahf
inc
jno
fnstcw
sbb
jg
cld
mov
adc
add
in
push
mov
stos
dec
ds
sub
pop
xchg
lea
roll
jg
push
loop
cmp
mov
mov
test
pushl
lret
and
je
mov
push
add
clc
cmp
pop
imulb
stc
cmpb
jg
inc
decb
pop
insb
ljmp
pushf
mov
push
jp
std
jbe
sti
dec
mov
call
mov
xchg
iret
and
nop
jl
jnp
aaa
scas
xchg
lods
mov
lret
push
in
inc
jg
jo
into
xor
aaa
cmpsb
in
xchg
mov
rcll
add
fs
incl
sbb
loop
inc
or
push
pop
scas
loop
mov
mov
loopne
imul
lods
fidivs
ret
xor
pop
push
dec
mov
inc
pop
dec
mov
lea
fnclex
fsubs
mov
hlt
jmp
rol
outsl
aaa
fmuls
xchg
cltd
ret
sbb
sub
sub
pop
sbb
rol
lret
rclb
and
outsl
es
js
test
paddusb
iret
daa
mov
jg
decl
aad
mov
lods
aad
ja
inc
jmp
cli
lahf
call
ret
clc
lret
nop
push
dec
jae
mov
jg
sbb
sbb
popf
aaa
cltd
pop
clc
sbb
enter
sbb
decl
xor
mov
ret
or
push
dec
lret
stc
sub
add
decl
call
es
push
leave
xor
jle
cmp
xchg
jecxz
lods
orl
decl
js
out
popf
lods
mov
add
out
jl
add
add
mov
dec
in
jp
push
jg
fisttps
test
xor
jno
add
rcll
dec
jno
mov
insl
xchg
pushl
std
repz
outsl
ret
add
sub
ja
bound
std
adc
lds
cmp
stos
xchg
mov
pop
mov
fcoml
das
fdiv
outsb
popa
add
jae
movsb
cld
imul
int3
and
mov
in
xor
jle
cs
inc
bound
xor
mov
int
pushw
pop
call
mov
stc
xor
push
mov
insb
stos
xchg
mov
pop
test
xchg
mov
decl
pop
int3
push
sub
jl
sbb
aad
or
popf
testl
cld
ret
push
andb
outsl
sahf
pop
mov
dec
pop
pop
aaa
push
mov
cli
dec
pop
call
cmpl
xchg
push
adc
jg
fwait
rclb
pcmpeqw
int3
scas
add
cmc
daa
incl
decl
hlt
add
sub
push
test
lahf
out
sub
inc
je
mov
incl
mov
dec
sub
daa
out
into
adc
xlat
pop
cmp
cmpsb
andl
pop
aaa
adc
and
iret
hlt
dec
and
mov
jg
aad
frstor
mov
pushl
rorb
mov
inc
xor
je
jnp
das
dec
and
pop
push
xor
addr16
decl
movsl
clc
xor
fstps
aas
out
in
cmp
leave
pop
xchg
and
pop
pop
stc
in
pushl
adc
pop
andl
stc
mov
and
mov
jge
cmp
pop
incl
int3
out
stc
sarb
negl
mov
and
js
jns
pop
mov
fs
or
inc
in
icebp
fwait
movsl
add
cmp
jle
lret
mov
dec
cmp
jmp
sbb
addr16
pop
dec
lods
sub
cwtl
in
jmp
cmpsl
outsl
and
xchg
mov
decl
cmp
lahf
xchg
sub
xchg
daa
lret
ret
and
dec
jne
imul
mov
iret
lock
incl
lea
lahf
in
sahf
and
pop
aaa
in
and
mov
fdivrs
pop
das
loope
call
push
sbb
das
sti
in
movsl
xor
insl
jno
mov
or
xchg
jle
inc
mov
cmp
jmp
lahf
daa
les
dec
dec
pop
lret
cli
jg
cs
sbb
adc
arpl
incl
push
ljmp
stos
in
fnstenv
idiv
jmp
sarb
adc
or
xor
sub
ja
pop
fstp
cmpl
aaa
mov
push
aaa
sbb
xchg
sub
cs
mov
or
pop
cmc
cmp
out
icebp
jp
imul
xlat
shll
ljmp
pop
shll
sub
ljmp
hlt
cmpsb
aas
cld
stos
test
add
mov
call
ret
cmp
mov
hlt
adc
pushf
sbbb
test
rcl
hlt
jns
or
jns
leave
jmp
rorl
data16
lcall
mov
jbe
mov
lret
add
mov
lret
xchg
rolb
imul
cmp
call
adc
aas
sahf
pop
sbbl
mov
repnz
xor
cltd
out
sbb
mov
mov
nop
popf
movd
pop
xchg
and
decl
das
cmp
out
xor
movsb
sbbl
cmp
and
sbb
and
mov
xorl
decl
cmp
loop
mov
sahf
std
mov
mov
dec
popf
decl
adc
stos
lods
movsb
gs
stos
push
inc
test
fidivs
cmp
xor
insl
and
clc
push
ret
inc
lock
mov
les
xchg
sub
lcall
dec
push
xor
mov
outsb
sbb
or
and
sti
stos
cmp
fsubr
lahf
inc
push
lcall
mov
and
int
pusha
in
dec
jmp
pop
xchg
lcall
sbb
imul
sbb
ljmp
arpl
sbb
mov
popa
in
test
out
sub
loopne
aam
xchg
movsl
sub
rcrl
ss
jecxz
jg
add
sbb
jecxz
add
ljmp
rclb
add
popf
inc
xor
lock
aas
outsl
pop
cmp
cmp
test
xchg
mov
mov
mov
or
setae
cmp
outsb
mov
mov
jge
mov
aas
stos
rcl
aas
mov
loopne
in
xor
mov
mov
inc
in
lods
data16
mov
jns
in
mov
mov
call
mov
or
jb
jne
sub
xor
icebp
mov
rclb
push
fs
test
mov
jg
lcall
test
fistpll
cltd
sub
cmpsb
mov
jb
arpl
dec
add
mov
sbb
ljmp
sub
adc
jmp
fwait
hlt
cwtl
sub
sbb
xor
icebp
dec
xchg
mov
imul
pop
inc
repz
sbb
and
into
push
inc
clc
push
icebp
fnsave
or
adc
aam
mov
or
or
out
push
loopne
incl
push
cmp
xchg
or
outsb
mov
xchg
imul
loope
pushl
xchg
fstp
add
sub
mov
xor
or
mov
fisttps
movsb
sub
fwait
mov
mov
cld
daa
rcrl
ljmp
icebp
dec
cmp
imul
xchg
sarb
jns
sub
push
icebp
jno
jo
jb
lcall
std
lcall
push
jp
jo
push
pop
dec
xchg
push
mulps
out
dec
mov
lcall
mov
dec
sub
cmpsl
cmp
dec
lods
mov
xchg
cmpsb
mov
or
jnp
call
outsb
dec
js
pop
inc
ljmp
data16
add
test
cmp
movsb
jmp
jo,pt
mov
ficoml
test
in
or
lock
mov
mov
addr16
sbb
jl
adc
testb
sbb
jg
ljmp
loope
int3
enter
inc
pop
cli
test
pop
push
mov
hlt
loop
sub
js
ljmp
mov
sbb
hlt
sub
repnz
popa
out
lea
mov
sub
mov
pusha
nop
cltd
pop
xchg
push
leave
test
lahf
les
or
icebp
adc
arpl
jmp
repz
adc
adc
sbb
fadd
add
sub
adc
es
sub
jg
push
mov
sub
das
scas
sub
pushf
cmp
fcoms
sahf
cmp
rorb
call
ffree
lret
repnz
sbb
shlb
testb
test
enter
jmp
add
arpl
jb
test
dec
jge
in
push
fiadds
jmp
clc
sar
call
in
inc
ljmp
jp
cmp
add
mov
ljmp
sbbb
dec
ljmp
fsubrl
dec
lock
incl
movsl
or
mov
andb
stos
push
inc
jmp
call
cmp
out
sbbl
pop
pop
getsec
lret
into
adc
mov
int3
cmp
mov
popa
sbb
lret
incl
outsl
dec
jb
mov
test
std
lahf
xchg
or
add
test
ds
dec
mov
cmp
arpl
adc
add
subb
mov
push
jmp
inc
jbe
call
sbb
js
mov
sub
inc
adc
push
and
or
mov
shrb
push
push
mov
xchg
inc
cld
pushf
insl
jmp
daa
mov
pusha
loopne
lahf
aaa
cli
pop
mov
ja
or
xor
arpl
pushl
push
mov
dec
cmp
pop
ds
sub
aam
es
call
push
mov
mov
lahf
lret
mov
in
test
ffreep
pop
mov
cltd
jmp
add
mov
sub
lods
fisubrl
stos
fdivrl
call
sub
push
mov
xchg
das
mov
clc
adc
sbb
adc
call
bound
out
imul
cltd
outsb
cmpsb
xchg
lret
dec
cmc
loopne
nop
pop
mov
std
cld
incb
mov
inc
jle
out
sub
rclb
mov
outsl
loop
mov
fwait
push
ds
stc
call
mov
mov
sbb
cltd
adc
loope
pop
add
repnz
pushl
add
mov
or
adc
std
jnp
call
and
out
cmp
adc
call
loopne
repz
fistl
test
xchg
add
pushl
inc
adc
mov
shll
push
gs
cmp
cmp
mov
aad
mov
mov
jae
xor
popa
test
subb
hlt
decl
sub
adc
ficoms
nop
sahf
out
adc
xor
fcomps
lcall
push
mov
das
mov
lea
mov
int3
arpl
bound
decl
fstl
bnd
ss
jl
addr16
mov
test
mov
scas
incl
int3
scas
push
jmp
and
ljmp
popf
cmc
jp
push
insl
outsl
xor
or
mov
or
mov
cmp
aam
test
jl
cmp
jmp
call
xchg
decl
loop
movsb
lcall
mov
push
sbb
jmp
add
fldcw
stos
int3
jnp
push
orb
cmpsb
push
jecxz
push
mov
or
call
jno
mov
inc
and
call
insl
cmp
lds
std
cmp
pop
stos
icebp
inc
add
jmp
in
scas
int
nop
jle
push
xchg
pop
push
mov
mov
rorb
mov
xor
or
sbb
es
mov
mov
dec
repz
sbb
icebp
call
lea
lcall
call
pop
cmpl
ljmp
dec
xchg
test
push
aaa
fsubrs
fadds
lds
es
mov
sub
ljmp
and
in
dec
jns
insb
rcrl
lods
aaa
lods
jae
ret
sbb
incl
mov
sub
clc
fidivl
add
mov
es
push
test
fidivrs
fxtract
pop
adc
ret
popf
out
stos
jno
push
inc
cmp
xor
push
jg
iret
das
lcall
fmulp
or
lahf
fists
scas
mov
sbb
pushl
mov
mov
xor
pop
arpl
or
xor
cmp
pcmpeqd
push
std
and
push
loopne
fucomp
jmp
mov
sub
call
mov
inc
nop
xchg
repnz
jg
insb
cli
arpl
arpl
orb
incl
das
or
inc
movsl
cltd
lock
repz
adc
fisttpl
cmp
out
fwait
push
fmul
mov
push
mov
dec
push
mov
xchg
fidivrl
lods
cs
mov
dec
mov
leave
jne
movsl
out
cmp
shll
shrl
jge
insl
adc
es
fs
insl
sbb
xor
ret
xchg
lock
cmp
cli
rcl
decl
in
pop
cbtw
imul
imul
cmp
cmc
aas
sbb
fdivr
lcall
adc
add
outsb
movsb
filds
xchg
mov
mov
lds
decl
add
in
repz
les
stos
sbb
arpl
sbb
imul
inc
loop
xor
inc
push
lret
pop
shrb
mov
nop
xor
fisubs
repnz
xchg
mov
push
das
mov
or
jmp
or
dec
dec
xchg
testb
sahf
sub
imul
or
mov
push
push
repnz
decl
hlt
inc
xor
andb
inc
mov
imul
outsl
imul
jno
fcos
jmp
shl
dec
mov
cmpsl
mov
xadd
pop
lret
outsb
cltd
aam
outsl
xchg
mov
mov
je
cmpsb
sub
xor
push
push
push
shlb
and
dec
popa
mov
pop
leave
repnz
dec
shll
fists
or
dec
clc
dec
push
push
sub
iret
mov
inc
jl
fbld
dec
fisubs
jg
cmp
xor
jbe
int
lods
push
cli
adc
sbb
jmp
xchg
sahf
inc
daa
subb
adc
jae
fwait
push
adc
adc
dec
psubsb
aam
mov
push
cli
decl
push
push
and
jae
movsl
push
loop
mov
cmpsl
aas
sbb
ljmp
jge
scas
ret
or
mov
mov
lods
lods
push
scas
jbe
inc
push
mov
stc
jecxz
clc
call
lret
or
push
mov
scas
cmc
idivl
and
ljmp
out
push
aad
mov
mov
dec
fcmovne
fisubrl
push
sub
inc
shlb
popf
xchg
mov
pop
cmpsl
cmp
cmp
ficoml
ljmp
sar
shrl
inc
mov
xchg
jb
aaa
jmp
test
shll
jl
cmp
adc
sub
cmp
inc
int3
push
push
dec
dec
push
push
inc
sub
cli
es
decl
mov
adc
jmp
ret
dec
cmpsl
sbb
push
hlt
leave
fwait
mov
jmp
sbb
mov
pusha
xor
popa
sbb
test
imul
sub
ds
sahf
lods
and
js
or
mov
cmp
dec
dec
leave
push
les
test
mov
fs
js
fcomip
fdivrs
jo
lods
jecxz
mov
scas
lcall
call
ret
xor
sub
bound
aaa
iret
sbb
sub
mov
inc
adc
and
test
ljmp
decl
loope
xorl
in
mov
mov
jb
lcall
cmc
lcall
or
cli
notb
decl
cmp
std
mov
push
push
test
sbb
imul
cmpsb
fbld
and
outsl
mov
mov
add
or
xor
imul
pop
pusha
cmpl
push
test
lahf
daa
nop
pop
inc
gs
loop
push
add
and
mov
sub
inc
sbb
push
add
add
sbb
push
rsm
inc
mov
lret
daa
sbb
or
inc
aaa
lret
mov
pusha
movb
lea
xor
dec
jecxz
xlat
or
test
jo
mov
mov
jne
data16
mov
popf
das
jae
fs
loopne
arpl
lods
add
lret
les
out
decl
mov
mov
lahf
mov
in
out
shlb
jb
ret
jp
push
es
mov
les
push
adc
jbe
mov
sbb
fisttps
out
je
mov
mov
lock
repz
clc
aas
movsb
movb
pop
xlat
fmuls
jg
sbb
push
js
mov
addr16
inc
or
test
int3
fimull
negb
dec
incl
cmp
stos
xor
add
push
and
fcoms
mov
and
jmp
std
ficoms
xlat
hlt
mov
sub
inc
in
insb
jnp
cs
pop
pop
sar
add
aam
mov
int3
mov
idivl
into
daa
loope
sbb
jmp
xor
mov
in
jne
shrl
roll
rolb
popa
sub
pop
pop
sbb
fs
stc
sbb
roll
jno
and
add
mov
and
gs
xor
cmpsl
inc
mov
pop
cwtl
sarb
pop
and
arpl
pop
pushl
loopne
sub
cmpl
pop
pusha
outsb
ss
scas
movsw
xor
fadds
sar
ljmp
ret
add
loopne,pt
mov
sbb
push
inc
xchg
xchg
add
out
cmp
mov
add
cmp
sbb
pop
leave
sub
mov
int
pop
aam
fs
ljmp
sub
inc
mov
aad
fsubl
insb
and
jnp
push
cmp
ljmp
or
jns
fmuls
inc
test
test
movsl
out
lods
enter
xchg
iret
das
adc
icebp
xor
ret
add
mov
jbe
into
jmp
mov
std
loopne
lods
movsl
inc
repz
insb
xor
ja
add
cmp
mov
mov
out
mov
cmc
cltd
sbb
jle
mov
xchg
rorb
fnstenv
insl
ficompl
enter
sub
pushl
mov
or
pop
insb
std
inc
inc
and
pop
and
pop
into
call
mov
repnz
pop
nop
mov
sbb
dec
mov
ljmp
cmp
adc
add
adc
mov
xchg
sub
insb
jbe
cld
pop
sub
cwtl
jge
fidivrl
dec
mov
or
and
xor
fistpll
xor
push
idiv
stos
sbb
aam
lcall
cmpsb
fdivl
es
push
cmp
outsb
add
mov
mov
adc
or
lahf
mov
out
arpl
test
pop
xor
incl
jecxz
dec
dec
fbld
jnp
test
cmp
lds
mov
ljmp
clc
jmp
mov
cmp
std
pop
cmpsb
adc
sub
insl
add
mov
mov
das
dec
mov
leave
push
mov
fbld
cmp
jmp
mov
push
push
push
mull
lock
push
mov
dec
cmp
stc
lret
test
mov
or
sub
push
lea
xor
movsb
fsubrp
sub
stc
mov
popa
mov
lds
mov
lcall
fcompl
push
pusha
sub
ljmp
add
cmp
pop
and
and
leave
cmp
call
insw
mov
int
ja
sbb
out
negb
js
imul
and
ljmp
and
inc
mov
add
or
push
testb
jg
sbb
outsb
mov
int3
jns
adc
cld
mov
dec
rorl
xchg
push
nop
pop
mov
cld
mov
icebp
inc
fcos
or
cmp
data16
push
lock
inc
dec
movsb
inc
dec
push
or
or
push
xchg
inc
test
hlt
scas
mov
pop
jne
pop
mov
jns
dec
mov
sahf
loop
std
sub
pushf
jnp
add
adc
stos
cmc
or
and
push
cs
addl
lcall
pop
mov
test
cmp
test
xor
or
mov
out
out
das
lea
xchg
movsl
in
push
sbbl
or
adc
in
ljmp
or
test
pop
aad
add
mov
ret
fnsave
push
cmp
jg
xchg
mov
ljmp
and
add
jo
inc
or
jecxz
lods
scas
push
mov
out
push
sbb
decl
sti
fst
adc
fwait
movsb
jb
jb
dec
or
dec
fdiv
leave
sbb
dec
push
adc
imul
sbb
xchg
cwtl
lods
or
jg
test
xor
cmp
mov
push
jae
pop
inc
mov
dec
mov
inc
adcb
ljmp
jp
lret
jle
dec
jp
and
lahf
imul
call
sbb
ret
and
jmp
push
fdivrl
cmp
shrl
pop
imul
mov
or
loope
faddp
ds
sub
out
xchg
pop
mov
aas
leave
aaa
push
adc
shrb
stc
inc
adc
sbb
push
cmp
ds
mov
lsl
je
inc
rolb
or
ret
loope
sbb
push
dec
push
fcmovnu
pop
dec
iret
pop
daa
jg
push
push
xor
sub
es
aad
cltd
sub
push
call
pop
add
jle
jns
hlt
push
xchg
shl
in
push
cmpsl
pop
repnz
call
int3
inc
jmp
pusha
stc
dec
lcall
mov
outsb
lds
cmp
mov
or
in
pop
lcall
mov
lods
inc
stos
and
and
xchg
add
data16
xchg
and
mov
das
dec
mov
cmpsl
xchg
pop
and
leave
test
ljmp
loop
push
push
xor
sbb
pushl
xor
scas
sub
mov
jbe
stos
jp
clc
push
mov
mov
incl
pop
mov
mov
pop
jl
or
stc
test
das
psubsw
sbb
call
cld
cli
fisubs
ljmp
push
popl
loopne
sub
mov
push
std
incl
into
in
or
cmp
lea
jne
push
and
ss
sbb
scas
clc
call
jg
cld
mov
jecxz
in
or
loop
in
sbb
int3
jo
ss
gs
dec
and
sub
test
bound
rcll
push
in
adc
jg
dec
addr16
inc
es
mov
cli
aad
dec
insb
push
jae
popa
mov
inc
in
and
clc
call
push
pop
outsl
push
out
outsl
lods
fiadds
inc
arpl
pop
outsl
insl
out
pop
cltd
xchg
stos
pop
icebp
aaa
xor
xchg
jmp
aaa
sarl
scas
testl
sub
sub
jb
adcl
lcall
sub
jge
je
add
adc
incl
cmp
shrb
test
adc
pop
jg
jmp
ss
mov
sbb
mov
out
mov
out
lret
es
lcall
fcos
ljmp
shl
cli
out
cwtl
mov
out
outsl
cmp
push
inc
iret
fnsave
call
addl
pushf
mov
in
mov
imul
push
or
mov
mov
rcr
jp
inc
les
sub
xchg
cmp
in
add
or
fsts
push
in
pushf
and
lcall
xor
adc
data16
pop
pinsrw
fcompl
aad
mov
lcall
ljmp
stc
mov
cvtpd2ps
mov
mulb
imul
pushl
push
insb
dec
pop
jmp
adc
ret
mov
add
bound
mov
xor
mov
mov
cli
mov
lret
lds
adc
xchg
in
jb
xor
jb
ror
adc
dec
scas
mov
lret
mov
or
dec
adc
mov
add
or
repz
std
jnp
es
out
push
mov
pop
pop
add
jl
out
ljmp
jge
ss
mov
cltd
out
into
test
repnz
in
xor
and
lcall
mov
xor
ljmp
incl
mov
push
or
add
js
sbb
into
jge
add
mov
lcall
hlt
pop
jnp
sbb
rclb
push
adc
cli
data16
sbbl
dec
in
icebp
push
aad
sar
jmp
pop
daa
nop
je
mov
lock
and
lret
pop
daa
jp
das
lahf
and
fistps
daa
mov
ljmp
pop
xchg
fdivrs
mov
rcl
jnp
dec
mov
jns
mov
jle
test
in
mov
xlat
xchg
mov
cld
mov
lret
iret
call
fsubrl
fdivrs
mov
dec
jo
faddl
mov
das
mov
lcall
and
xchg
dec
cmp
push
mov
jecxz
pushf
mov
std
jecxz
xorb
loopne
call
lods
push
push
popa
bound
sub
movsl
push
test
cmc
push
mov
lret
mov
in
enter
hlt
sbb
mov
add
fwait
sti
je
aad
sarb
ljmp
ret
mov
imul
mov
dec
imull
lcall
pop
out
mov
leave
sahf
fbld
inc
dec
lock
add
rorl
add
push
xor
pop
cld
pop
cmc
sbb
int3
clc
lods
xor
dec
fs
outsl
sbb
fdivr
cmc
jg
data16
add
mov
xor
stos
and
push
jecxz
orl
lcall
jge
push
fidivrs
movsb
cld
shl
and
leave
sbb
nop
imul
add
jmp
mov
ljmp
inc
adc
dec
inc
ds
xor
pusha
inc
lcall
adcb
arpl
insl
sub
mov
rorl
jge
decl
ds
call
mov
ret
pop
or
imul
jnp
sbb
cwtl
jmp
lret
in
jmp
inc
out
xor
jne
mov
jle
mov
leave
popa
int3
ljmp
cmp
int
xchg
mov
fisubs
outsl
fbld
leave
dec
out
mov
mov
call
std
call
outsl
sahf
pop
in
test
mov
lahf
mov
inc
sar
ljmp
mov
or
mov
inc
data16
cmpsb
push
divl
jg
out
rcr
ret
adc
dec
movsb
cwtl
in
fst
cld
dec
fisubrl
inc
sub
fnstcw
jmp
xchg
mov
lds
ret
xchg
lds
pusha
pop
arpl
dec
jmp
daa
adc
imul
lcall
je
xorl
dec
arpl
es
test
decl
addr16
mov
lea
int
shl
lret
ljmp
out
add
push
cmpsl
pushf
imul
push
data16
bound
jmp
cmpsb
pop
bound
dec
ja
bound
movsb
stc
loop
dec
mov
or
push
xor
fwait
mov
mov
push
inc
jb
and
jge
mov
adc
cmp
cmp
popa
add
insb
mov
push
sahf
push
cmc
jl
push
mov
cmp
sub
dec
mov
inc
xor
ffree
cmp
popa
movsl
pushf
mov
shlb
jmp
insb
sbb
mov
push
out
subb
daa
jnp
xor
pop
xchg
mov
sahf
out
xchg
std
cld
mov
fisttpl
adc
jbe
mov
pop
scas
cmp
stos
movsb
cmpsl
call
enter
push
cmpsl
int3
pop
push
shl
int
fstpt
gs
xchg
call
loopne
popw
xor
lods
and
ret
into
mov
pop
mov
jge
sub
sub
out
test
cmpsl
push
cwtl
cld
mov
adcb
into
ret
jmp
pop
mov
pop
std
jae
jbe
push
sbb
xchg
sti
hlt
xchg
and
dec
add
addr16
paddsw
decl
test
in
xchg
jmp
sbb
outsl
insb
int
and
lcall
or
mov
pop
add
repz
rol
or
mov
sub
es
sbbb
insb
fbld
mov
call
outsl
add
nop
or
movl
in
or
call
jmp
in
cmp
ret
in
loope
jne
ja
inc
rorb
pop
call
rorb
imul
push
push
loopne
and
adc
mov
push
cld
cmp
or
cld
xor
and
lret
mov
rcrl
sub
incl
add
add
mov
fcompl
mov
jg
fwait
pop
cmp
pop
std
pop
xchg
movsb
inc
fdivrl
push
je
or
jl
out
aad
fiadds
or
push
repnz
out
mov
mov
int
call
shlb
dec
popf
test
xor
mov
call
je
dec
ss
or
lods
ljmp
idivb
push
outsw
sbb
mov
pushl
fwait
adc
xchg
pop
out
cmpl
pop
testl
ficompl
pop
push
test
call
ja
xor
jns
pop
mov
in
add
jbe
sbb
jmp
lcall
xchg
sub
mov
inc
xorb
ljmp
out
pushl
mov
pop
hlt
pushl
mov
mull
sahf
xor
sarl
in
xor
cli
and
sbb
aam
lods
ja
sbb
cwtl
out
add
mov
add
insb
jle
pushf
pop
push
leave
jns
mov
jmp
fs
movsl
ljmp
mov
lock
scas
bswap
xchg
push
bound
sub
sbb
mov
jmp
xor
fdivs
sub
fistl
inc
insb
inc
xor
and
popf
inc
ljmp
add
pop
aas
xor
dec
pop
das
push
dec
fnstsw
call
push
mov
clc
das
fisubl
dec
pop
addr16
xor
sub
add
pushl
xchg
or
mov
push
xor
popa
xchg
cmpsb
push
sti
fs
or
add
imul
sbb
test
call
es
mov
xor
sbb
decl
pop
aam
jmp
aaa
cmpsb
sbb
xor
test
aas
sarl
pushl
and
test
cmp
mul
in
lret
test
imul
lcall
push
stc
jl
andl
int3
clc
inc
push
outsl
lods
mov
loop
das
jmp
call
loopne
retw
inc
or
mov
or
push
jb
and
int
das
cli
fstpl
jle
stos
sub
pusha
jb,pn
add
shlb
xchg
test
decl
xchg
inc
or
arpl
incl
mov
sbb
in
fists
mov
rcr
idivb
decl
out
dec
test
lock
sti
inc
dec
xchg
cmp
daa
dec
out
pop
scas
jmp
test
shld
push
sbb
decl
dec
dec
and
dec
in
cmp
test
das
psrld
aaa
loop
nop
sub
push
mov
stos
scas
push
ljmp
xor
push
lret
out
cli
mov
pop
jmp
test
lods
xchg
inc
add
dec
and
lcall
adc
jle
daa
rorl
mov
das
jnp
inc
fstpt
or
in
adc
xchg
in
xchg
sub
ret
mov
movsl
inc
ljmp
push
loope
imul
xor
jl
mov
jmp
cltd
sahf
jbe
jg
adc
and
dec
mov
or
pop
adc
sahf
xlat
inc
cmp
pop
dec
in
and
pushl
ffreep
enter
ss
xor
aad
fildll
inc
push
mov
push
test
call
xchg
push
ret
out
adc
aad
cli
dec
inc
movsl
data16
cwtl
mov
rcl
data16
dec
sbb
decl
inc
insl
mov
pusha
orl
mov
push
hlt
gs
sbb
int
scas
mov
xchg
aas
fnsave
incl
pop
loopne
adc
push
out
cmp
sbbb
jge
mov
jmp
jg
data16
xor
mov
cwtl
and
push
out
push
inc
and
popa
mov
ljmp
pop
push
adc
xor
or
xor
dec
movsb
out
adc
call
arpl
mov
out
mov
pop
sbb
push
fcmovu
add
jg
xchg
popa
xlat
in
pop
pop
sbb
inc
outsb
aam
in
lret
mov
push
je
insl
xchg
xor
cmp
dec
jmp
fadd
or
addr16
pop
mov
ficoms
mov
mov
fcomip
push
or
pop
je
mov
scas
add
icebp
fdivl
fmulp
into
inc
fimull
dec
out
aas
mov
lret
sarl
xchg
push
ret
dec
pop
pop
cs
sbb
dec
mov
xchg
cmp
pop
sub
popf
fbld
cld
call
enter
repnz
daa
lods
inc
mov
in
mov
fimuls
cmp
stos
out
mov
jmp
dec
cmp
inc
mov
inc
aad
test
sbb
sub
pop
outsl
push
cmp
jae
mov
je
stc
cmp
aas
cmc
jp
mov
mov
xchg
neg
in
mov
mov
jmp
les
mov
mov
xor
insl
adc
jecxz
ja
or
mov
int3
push
incl
ljmp
mov
mov
popf
and
push
pop
pop
std
mov
inc
js
cmp
push
jbe
pushf
das
shll
lret
scas
xchg
arpl
cli
push
cltd
cmp
add
cmpsb
inc
repz
xchg
roll
or
jg
sbb
and
and
push
aam
incl
cld
dec
sti
cmpsb
leave
xchg
inc
mov
sar
mov
roll
push
jo
xchg
icebp
jbe
mov
in
inc
and
cmp
sahf
paddw
lock
sbb
mov
das
stos
clc
sub
insb
mov
cli
into
xor
ljmp
jl
inc
in
mov
icebp
adc
inc
xor
pop
js
mov
call
call
push
sbb
cmp
test
outsl
xor
mov
ljmp
inc
das
in
in
and
sti
test
fwait
das
inc
adc
adc
js
xchg
incl
mov
mov
or
cmp
push
adc
cmp
adc
or
in
call
mov
xchg
pop
and
in
jns
fwait
mov
cmpsl
dec
pop
insb
cmp
repz
out
or
int
out
inc
icebp
push
ds
cmp
dec
cmpsb
mov
jne
in
inc
mov
mov
push
addb
loop
inc
cmc
in
jnp
inc
rcrl
addr16
out
sbb
ljmp
and
cmp
cmp
or
cmpsl
mov
xchg
lcall
jg
fs
jmp
jbe
outsb
mov
cltd
or
call
mull
mov
mov
cmp
cmpl
lods
das
and
dec
jmp
xor
daa
mov
shll
xlat
pop
scas
ret
in
push
cmpsb
mov
jo
mov
cmp
test
popf
pop
movsb
scas
push
sub
cmpsl
icebp
or
inc
int
std
decl
test
sub
cld
repz
call
stc
notl
xor
jg
pop
mov
je
fwait
lods
cmp
or
iret
scas
fisttpll
add
mov
mov
adc
sti
int
scas
aam
sub
andl
movsb
lret
lds
decl
cmp
push
fwait
mov
pushf
pop
mov
adc
xchg
mov
mov
f2xm1
sub
outsl
mov
sahf
push
ficomps
enter
cs
pop
decl
divl
imul
bound
adc
inc
mov
lock
mov
mov
cld
dec
jmp
xchg
iret
xor
test
lods
fisubs
dec
lods
ljmp
push
popa
out
movsb
add
mov
fsubl
pop
mov
add
aad
aaa
push
mov
fldt
decl
sbb
cwtl
iret
pop
inc
dec
push
adc
das
jo
add
insb
add
idivb
or
cmc
cld
push
cli
out
mov
pop
inc
les
lock
call
nop
cli
mov
testb
jae
add
mov
jnp
pop
arpl
cmp
sbb
push
repnz
inc
or
jbe
mov
sbb
sbb
movsl
jmp
and
cmp
shrl
pop
out
jo
fwait
inc
jmp
mov
pop
cmp
push
je
xchg
push
jmp
mov
pop
fsub
ficoms
cwtl
push
loopne
xchg
adc
pop
fwait
daa
push
call
and
loope
mov
dec
int3
push
jmp
decl
out
mov
iret
pop
lods
adc
fs
xchg
and
movsb
dec
jbe
ljmp
push
xchg
push
push
xor
loop
dec
insb
jnp
sbb
push
cmpsb
push
xchg
pop
out
lcall
fadds
scas
repnz
sub
mov
insl
sbb
add
inc
js
sbb
mov
pusha
jns
int3
mov
incl
mov
mov
aas
mov
lahf
sar
pushl
adc
ficompl
call
insb
sub
push
scas
cmp
pusha
inc
stos
ljmp
loope
pushf
dec
push
pushf
mov
xor
fwait
jl
cmp
push
xchg
incl
cmp
cmc
dec
sbb
or
xor
add
sbb
aas
lcall
and
mov
jge
xchg
fcomps
jns
sub
jns
mov
incl
mov
mov
es
std
pusha
xor
and
mov
call
cmc
sub
jne
mov
mov
jecxz
lcall
inc
sbb
sbb
adc
das
in
and
jb
fldl
shrl
lea
das
adc
jns
sbb
sbb
lods
shlb
stos
incl
or
dec
repnz
std
ret
mov
jg
cmpsl
adcl
mov
in
lods
pusha
das
pop
arpl
mov
inc
push
insl
arpl
cmp
inc
lret
into
sarb
cld
xchg
std
jmp
loop
xchg
and
ret
aas
jmp
fsts
push
iret
jmp
fmull
mov
xor
ffree
jge
repz
cld
lcall
aas
inc
dec
dec
stos
jb
adc
adc
and
or
jne
incl
xor
fsubrs
xor
jb
out
xchg
sar
fnstsw
jmp
ficoml
mov
shlb
fcomip
and
into
inc
icebp
ds
clc
mov
or
cmpsl
pop
add
loopne
push
loop
cmpsl
ljmp
push
stc
jecxz
push
enter
sbb
in
fmull
inc
in
xchg
das
loop
fidivrl
xchg
adc
mov
into
cld
test
xchg
jae
inc
mov
aas
dec
sbb
addb
mov
call
add
insb
jge
sbb
ss
jmp
leave
cmpl
inc
add
inc
xchg
cwtl
clc
test
jecxz
sysret
inc
mov
pushl
fisubrs
inc
clc
mov
shlb
test
push
insb
in
lock
in
call
fstpt
cmp
fmuls
sbb
in
mov
pushl
dec
clc
and
push
xchg
jg
mov
xor
loop
roll
push
dec
cmp
dec
push
cmpl
incl
dec
shlb
mov
outsl
mov
xor
push
xchg
push
mov
inc
lret
mov
rorb
out
sarl
mov
das
mov
sub
shrl
scas
sbb
lea
add
lcall
dec
and
in
mov
inc
in
std
xchg
dec
fdivs
jnp
pop
fisubs
pushl
inc
dec
rcrb
les
sarl
int3
xorb
push
mov
cmp
lods
dec
mov
aam
xchg
jbe
jl
push
add
jg
cmp
std
inc
je
mov
pusha
push
adc
iret
outsb
mov
lcall
mov
in
bound
inc
mov
adc
mov
jo
test
mov
int3
inc
clc
dec
cli
lcall
in
xor
cmp
jge
test
rclb
nop
decl
or
push
pop
add
xchg
stos
aad
repz
adc
popf
mov
cmc
xor
jg
lcall
xchg
sub
and
mov
adc
ja
std
clc
dec
addb
pop
xlat
call
cli
ljmp
mov
rcrb
imul
dec
or
scas
imul
incl
add
adc
sbb
jo
call
sub
sti
in
mov
cmpsl
js
mov
mov
xchg
hlt
divb
lret
xlat
call
mov
aaa
mov
je
fwait
clc
mov
mov
xlat
sub
mov
mov
adc
cmc
sbb
adc
stos
jmp
push
fldl
or
test
fcomi
mov
add
sti
push
jg
mov
call
data16
cwtl
and
stos
jns
push
push
std
mov
jno
mov
xor
lock
ret
repnz
push
jo
and
xorb
mov
lcall
sub
add
imul
adc
sbb
dec
mov
lcall
push
jg
sti
nop
cmpsl
cmc
mov
popl
test
subl
mov
shl
jecxz
nop
lock
mov
mov
mov
sar
aam
cmpsl
add
mov
sti
push
cmp
push
shl
jmp
and
daa
outsl
or
ret
pop
sbb
testl
mov
loop
hlt
lcall
pop
sub
push
test
stos
pusha
ljmp
xchg
sbb
inc
cmp
out
push
out
incl
movsb
cs
lds
sub
add
push
mov
xchg
daa
iret
stc
shl
pop
cwtl
cmpsb
test
std
add
in
adcl
outsl
movsl
popf
jb
sahf
jne
dec
push
fcmovnb
ror
adc
pop
jp
pop
popa
pushl
std
pop
adc
outsb
mov
jp
push
mov
xchg
fcoml
xor
gs
sahf
cmp
lea
dec
add
pop
pusha
inc
pop
sbbb
into
jp
sbb
cmp
das
sar
aad
in
js
fcompl
cltd
or
das
fsubl
dec
pop
lret
inc
mov
dec
add
cs
xchg
push
testb
inc
mov
pop
outsl
add
pushl
shr
fisubl
xor
mov
in
shrb
ret
cmp
mov
add
rolb
pop
push
jmp
test
sub
xchg
jp
fdivrp
call
sbb
xor
mov
sub
pop
pusha
pop
sti
fisttpll
mov
stc
das
movsl
mov
mov
int
cwtl
call
pushl
inc
ja
sub
nop
nop
das
jbe
sub
sub
push
mov
ljmp
imul
sbb
adc
cmp
or
fstpt
pop
scas
sub
and
test
test
or
idivl
fists
sub
icebp
pop
xchg
mov
or
and
lcall
or
clc
inc
inc
mov
lret
lcall
mov
test
mov
enter
pushl
ljmp
dec
cld
inc
imul
fs
fdivl
ds
cmpsl
jbe
mov
jbe
xchg
jae
test
imul
cwtl
lret
push
xchg
add
popa
dec
dec
push
jmp
push
mov
xchg
xchg
nop
rorb
jne
pop
xor
pushl
pop
xchg
in
arpl
jbe
or
ret
cltd
sub
sbb
mov
inc
cltd
mov
push
lret
test
xlat
sahf
xchg
loope
mov
dec
nop
or
mov
and
jge
cmp
sub
pop
inc
decl
roll
push
cltd
push
mull
pop
fstpl
enter
out
mov
inc
lret
jmp
arpl
cwtl
out
scas
cli
jp
test
pop
ljmp
pushf
mov
add
mov
in
out
cmp
dec
mov
push
test
sbb
add
loop
mov
lods
sbb
xchg
xor
sub
dec
cmp
addr16
mov
fbld
pusha
out
fs
jno
data16
jle
lods
insl
sbb
jecxz
lcall
jnp
xchg
in
jle
inc
mov
movsl
lock
mov
cltd
ljmp
lods
pop
jecxz,pn
fcmovne
loopne
ret
sub
dec
mov
sbb
lcall
std
std
scas
cmpsb
lds
rcr
cmp
imul
outsb
pushf
outsl
jg
int
lock
push
in
imulb
sub
inc
fs
test
jbe
add
adc
ljmp
pop
xor
arpl
jb
sbb
jne
jns
lretw
mov
pushf
dec
push
inc
popa
dec
lods
dec
ljmp
addr16
jl
psubusw
push
addr16
adc
pushf
inc
adc
js
inc
jmp
push
outsb
int3
cmp
lret
nop
adc
mov
mov
mov
push
jecxz
push
rolb
push
je
ret
mov
or
pop
mov
je
or
ja
aas
ret
sub
add
repz
mov
xor
scas
jl
lret
mov
xor
aaa
xchg
mov
call
xorb
test
cltd
movsl
push
in
jbe
loop
jae
push
sbb
sar
ror
jo
cltd
scas
sub
jae
push
pop
repnz
incl
cmpsb
test
and
jge
cwtl
jne
mov
xchg
and
clc
lcall
int3
mov
fnstsw
out
xor
out
sub
lods
ret
cmp
pushl
xor
pop
aam
push
adc
sbb
lcall
loopne
shlb
jg
decl
xlat
stc
les
aad
inc
insb
ja
pop
jo
mov
fwait
dec
out
int
ljmp
add
mov
loopne
cmpsb
jne
insb
aad
outsl
test
mov
mov
test
stc
pop
fcoms
mov
out
lret
mov
xor
out
dec
push
imul
call
jns
fldt
cmp
std
inc
sbb
push
ret
jb
out
mov
add
les
push
sbb
mov
lds
xor
and
incl
dec
add
fstsw
pop
jo
lahf
push
insb
fiaddl
std
add
decl
loop
add
fcomps
inc
adc
mov
shlb
push
jp
jp
xchg
pop
xchg
test
ljmp
xchg
outsl
pusha
call
pusha
cmpsb
mov
repnz
ret
sysexit
jnp
ds
and
pushl
push
add
jb
push
stos
add
xchg
and
and
inc
mov
out
jg
mov
cmc
cmp
jns
lea
mov
mov
popf
xchg
sar
call
sub
push
sbb
rolb
pop
add
ficoms
jae
cmpsl
adc
iret
sbb
mov
add
jmp
test
mov
or
and
add
dec
inc
pop
gs
filds
loope
push
dec
cmp
cld
mov
pop
addr16
mov
ret
cmc
les
and
loope
jno
jo
popa
mov
mov
jns
insb
dec
lcall
movsl
sub
jne
add
lahf
notl
cmpsl
jns
fsub
mov
xor
push
cmp
aas
adc
inc
insb
enter
or
cmpl
cmpsb
xor
test
lahf
dec
jne
das
jg
lcall
push
dec
push
push
leave
sub
mov
inc
xor
xor
jmp
push
mov
int
sub
inc
cmp
adc
add
jo
cmp
rcrb
jg
fcoms
sbb
push
xorl
ljmp
ljmp
je
loopne
or
aam
xchg
xchg
sbb
ljmp
shl
sbb
jle
xor
inc
call
es
addr16
in
lcall
orb
xor
outsb
jbe
sub
ljmp
or
stos
push
cmp
loop
push
sub
js
mov
pop
xchg
fnstcw
cmpsb
push
movsb
ljmp
test
jge
shll
iret
cwtl
add
adc
xor
mov
pushl
gs
sub
fcmovnbe
in
addr16
rcll
insl
sbbl
ljmp
movl
aam
mov
negb
lret
loop
gs
mov
lcall
lcall
pushf
add
push
mov
movsb
movsb
mov
mov
jno
call
mov
or
adc
xor
mov
adc
test
mov
test
jmp
fisubrs
adc
inc
jno
mov
ret
add
clc
xor
scas
repz
xor
push
add
ljmp
jne
lods
inc
fmuls
jg
fistl
jecxz
dec
mov
push
pop
jle
jmp
loope
mov
xchg
mov
js
mov
repnz
repnz
adc
cld
jl
mov
add
aas
mov
pop
popa
addr16
or
jg
sbb
inc
incl
jg
ljmp
imul
mov
int3
push
das
sar
inc
lret
push
pop
mov
hlt
cmp
dec
lahf
icebp
dec
mov
call
jle
js
cmp
push
push
xchg
adc
dec
mov
arpl
xchg
incl
in
dec
lock
jecxz
push
mov
fidivrs
shrl
decl
les
call
lahf
xchg
hlt
cmp
cmp
xor
dec
push
shlb
push
cli
sub
sub
fstp
fwait
or
outsl
test
xor
xchg
sar
pop
xlat
adc
pusha
inc
mov
call
push
lods
in
push
xor
and
jg
stc
enter
xlat
dec
push
xor
pop
cmp
jmp
pop
enter
jbe
pop
aad
pusha
sbb
cmp
lods
or
call
ljmp
sub
push
fnsave
add
js
out
push
adc
push
out
clc
fiadds
push
push
push
cs
scas
repz
sub
movsb
daa
mov
pop
decl
xlat
popl
dec
dec
cmp
sahf
aad
leave
cmp
ljmp
pop
std
pop
push
jns
not
xor
push
push
and
cmp
mov
push
xor
push
mov
push
pop
cmc
decl
add
xlat
imul
adc
cs
stos
jmp
dec
adc
in
and
pop
pushf
ffreep
lahf
mov
mov
jmp
fcmovnbe
pop
out
mov
or
adc
imul
mov
and
jns
jmp
les
mov
daa
cmpsl
xor
incl
test
bound
jge
fsub
adc
inc
rorl
fsubrp
fcomps
xor
std
scas
inc
inc
jb
rcrl
or
cmp
dec
jo
or
call
clc
xchg
icebp
pop
push
push
jae,pt
fisttpl
call
loope
test
or
sub
out
push
std
fimuls
pop
mov
cmc
xchg
int
adcl
adc
icebp
pop
xchg
decl
sub
and
je
push
insl
xor
xchg
xchg
or
cmp
push
mov
xor
push
mov
jo
push
rcrb
push
inc
push
pop
cmp
xchg
or
pop
mov
insl
inc
lock
rcr
pushf
add
mov
pushl
addr16
data16
aas
pop
adc
and
push
sub
cmp
or
ss
pmulhw
add
test
xor
aas
mov
pop
sarl
fmuls
loopne
pop
pop
mov
dec
cwtl
repz
movsl
pop
dec
push
clc
sbb
and
or
filds
push
lea
adc
mov
sub
filds
fistps
cltd
mov
ds
sarl
imul
mov
aaa
cld
lcall
out
and
in
and
and
jge
jg
mov
jge
push
pop
mov
inc
out
mov
insl
vandnps
cmc
dec
or
adc
cwtl
and
mov
push
jmp
xchg
jnp
lret
pop
inc
jle
push
sbb
push
xor
add
push
or
ret
fsubr
gs
stos
push
xchg
insb
fiadds
gs
xchg
mov
lock
jae
lea
jge
es
lcall
sub
loop
pop
pop
hlt
stc
jecxz
fcom
lds
clc
std
pop
out
in
je
aaa
push
fwait
jo
call
cmpsb
xchg
xchg
hlt
clc
fwait
pop
dec
lret
iret
andb
adc
jecxz
js
aad
push
adc
pop
outsl
test
mov
ds
lret
xor
aad
pop
in
sbb
das
add
call
shl
insb
call
ljmp
je
jne
incl
int
pop
sbb
and
mov
lahf
fisttpl
sbb
fistpll
and
push
lcall
dec
xchg
out
lret
lods
insb
and
xor
ret
shlb
ficomps
pop
pushl
mov
dec
pushf
push
lcall
cmp
sub
repz
mov
call
adc
fisubl
mov
test
and
inc
mov
lods
cmp
push
cmpsl
mov
lret
out
pop
mov
test
mov
rcll
and
dec
popf
xor
out
mov
mov
xor
push
dec
add
arpl
orl
sbb
xor
push
mov
pop
jp
ljmp
and
jne
inc
lods
jbe
cmc
cmp
add
nop
xor
and
lcall
jg
xchg
mov
test
xor
mov
int
imul
incl
inc
inc
jns
lea
mov
or
pop
call
xlat
shr
xor
inc
ljmp
hlt
pop
rorl
clc
outsb
cmpsb
push
add
mov
mov
or
pusha
insb
mov
mov
cmp
ds
imul
push
test
sbb
push
jnp
enter
ss
adc
popf
jp
pushf
insl
jnp
incl
mov
cmpl
clc
jmp
push
lea
call
cmp
adc
inc
je
jp
out
ret
cmpsl
xchg
inc
jle
stos
das
cwtl
adc
jmp
mov
daa
xchg
sbb
decl
mov
decl
dec
test
subl
pusha
stc
popf
jb
stc
in
in
jno
mov
sub
lret
repz
testb
xchg
lcall
int
push
sub
imul
adc
add
dec
fstps
push
mov
mov
lea
jmp
jl
jnp
mov
lods
inc
loop
sete
xor
adc
lcall
inc
cmc
jno
sub
mov
fsts
adc
jbe
clc
push
les
pop
mov
call
mov
xchg
mov
jnp
jae
dec
das
xor
inc
xor
xorl
aad
jg
add
dec
add
shl
pusha
jge
mov
pop
pop
xorb
pop
jo
ds
cmp
push
incb
xchg
test
adc
lahf
and
mov
mov
ljmp
stos
xchg
dec
sbb
jmp
clc
shrl
xchg
add
xchg
xlat
mov
inc
jns
xor
inc
inc
cmp
and
out
jae
inc
sbb
into
shlb
inc
pushl
outsl
into
cmc
std
dec
arpl
movsl
push
outsb
scas
rcll
ss
incl
xor
add
jne
adc
and
jmp
cmp
xchg
xor
jl
pop
push
jmp
dec
push
popa
add
jmp
in
popf
sub
dec
ljmp
xchg
stos
dec
mov
stos
mov
jae
cmp
sub
divl
lock
cmp
lcall
jnp
out
jnp
call
loopne
scas
xchg
cmc
fists
jl
test
out
mov
inc
cmp
jo
decb
sbb
fdivr
fldt
sbb
mov
roll
jg
out
inc
push
mov
jb
adc
inc
jg
add
lods
lcall
pushl
lods
dec
lcall
aad
test
js
pusha
scas
adc
jg
lcall
cwtl
sbb
rcrl
in
xor
loop
mov
pop
xchg
lretw
pushl
stos
in
addr16
and
popa
shlb
pop
sbb
pop
pusha
dec
out
clc
decl
rclb
fidivs
and
pop
mov
dec
lods
fiadds
das
bound
add
sbbl
xor
cltd
fs
incl
push
cmpsb
aas
sbb
jle
jle
mov
xchg
test
sub
inc
ljmp
cmp
ret
lcall
pop
addr16
fcomp
decl
test
pop
cmpsl
jmp
repnz
loop
lahf
inc
dec
mov
in
mov
loopne
or
mov
lahf
sbb
jne
cmp
cmp
mov
push
sbb
mov
sbb
sbb
cmpsb
cli
jg
out
pop
cwtl
pusha
imul
dec
adc
sub
push
lcall
and
add
inc
push
insb
mov
iret
or
xor
inc
sbb
cs
popf
stc
out
sub
fcomip
ljmp
push
mov
mov
mov
outsl
jbe
cltd
lret
stos
cmp
das
cli
jp
cli
mov
xchg
xchg
mov
inc
rorb
fwait
push
incl
hlt
push
in
inc
loop
call
sarl
scas
xor
icebp
xchg
ja
inc
cld
pop
subb
push
pusha
push
jne
jl
lret
mov
fdivr
pushl
fmul
sbb
iret
outsl
jmp
inc
mov
add
push
clc
inc
pushl
popa
jl
lods
jmp
insl
lahf
xor
repnz
mov
xor
call
xchg
push
xlat
data16
std
test
jg
shl
sbb
imul
mov
fsubrl
push
aaa
insl
das
mov
mov
pusha
sahf
pop
in
popf
push
push
lahf
fdivrl
inc
xchg
popf
lods
les
cmp
jg
ljmp
into
jp
mov
mov
sbb
dec
inc
pop
pushf
dec
xchg
lcall
jg
imul
rclb
jbe
mov
mov
adc
xchg
movl
das
cmpsl
das
hlt
stc
rolb
std
stc
sub
cmp
inc
mov
sbb
xorl
sub
mov
hlt
scas
mov
jo
icebp
fiaddl
mov
ficoms
ljmp
mov
pop
xchg
push
dec
xor
hlt
psubd
and
xchg
xor
mov
addl
mov
mov
roll
adcb
or
out
clc
sub
xor
jge
insb
aam
mov
sub
add
mov
pushl
ds
scas
jg
cmp
outsb
js
sbb
cmp
inc
incl
sti
cltd
outsl
sbb
mov
ret
iret
mov
xor
call
out
pop
add
sub
xchg
push
ficomps
sub
call
or
iret
movsb
sub
push
call
and
pop
aas
xchg
movsb
push
xlat
and
sbb
mov
decl
iret
xchg
cltd
mov
outsb
inc
pop
inc
and
xchg
cmc
mov
xchg
faddl
cmp
sti
in
adc
sub
lds
les
cmpsb
dec
jp
fwait
cmpsb
jmp
push
test
mov
add
mov
mov
sub
scas
xor
xchg
decl
lods
out
mov
ds
xor
jmp
or
shll
lcall
loope
or
mov
sbb
sbb
jbe
ljmp
sub
xlat
cld
sub
pop
push
adc
sub
ss
add
xor
subb
sub
add
dec
add
mov
inc
pop
lods
push
int
mov
and
pop
out
adc
push
repz
mov
pop
jmp
movsb
mov
or
lods
push
add
mov
inc
or
or
arpl
jmp
ret
sahf
pop
xchg
and
ja
adc
loope
lcall
mov
or
mov
aam
bound
dec
xor
mov
mov
add
adc
lcall
aas
xor
in
fs
shr
xchg
rclb
in
shl
pop
daa
pushl
mov
pushf
push
mov
pop
adc
xchg
leave
push
daa
jne
ljmp
pushl
mov
push
pop
and
cmpsl
outsb
add
iret
inc
push
mov
mov
fwait
jge
call
lea
xlat
call
aas
loop
pop
fstpl
mov
sarl
call
inc
cmp
cmc
loop
imul
repnz
xorb
shrl
incl
lods
std
out
sbb
fwait
pop
data16
ljmp
mull
jmp
ds
popa
inc
push
insl
ljmp
mov
out
xchg
imul
aam
adc
out
cli
pop
loopne
std
inc
sbb
adc
enter
pop
cwtl
mov
pop
add
dec
ficoml
jne
pop
push
fisttpll
popa
inc
dec
or
jg
lcall
ja
jmp
push
lahf
lods
movsl
jo
mov
dec
or
or
mov
clc
mov
jge
mov
xor
sub
push
outsb
insb
add
call
mov
ds
pop
mov
incl
cld
push
sarb
test
scas
cld
xor
jb
xchg
call
cmp
imul
adc
xor
repnz
or
lcall
lahf
addr16
popa
imul
pushf
push
mov
shrb
into
fs
xlat
incl
xchg
dec
test
popa
sub
or
rcl
mov
mov
cli
jg
aad
jo
xchg
mov
cmpsb
sti
dec
mov
loop
mov
fidivl
xor
and
popf
shr
rcll
add
mov
dec
inc
es
icebp
call
out
inc
addr16
test
test
mov
mov
adc
notb
js
idiv
lcall
and
pop
mov
push
mov
mov
xchg
xchg
sbb
mov
xor
repnz
or
xor
pushf
dec
adc
adc
fnstcw
popl
xor
xchg
pop
fisubrl
into
sarb
lods
sub
adc
cmp
insl
roll
push
testl
ds
inc
xchg
pusha
ret
or
ljmp
mov
jp
xor
in
jg
mov
mov
pop
add
fsubrl
sbb
dec
js
mov
das
fdivr
incl
sahf
in
mov
cmc
inc
mov
jnp
sarl
lahf
fldcw
stc
mov
xor
mov
inc
xor
or
movsb
aas
cmp
mov
push
ret
add
addr16
jmp
adc
jp
dec
xchg
outsl
ret
jle,pn
or
int3
adc
scas
loop
std
aam
stos
std
les
sbb
and
mov
dec
out
pop
xchg
and
test
inc
mov
or
inc
jp
inc
cmp
push
insb
loop
sarl
cltd
push
sub
lcall
push
mov
ss
clc
mov
xchg
push
sub
mov
adc
cwtl
in
int
jns
jnp
lcall
lods
repz
test
ja
sub
jbe
or
loope
stc
stos
scas
clc
mov
popa
sbb
xor
testb
out
adc
push
inc
in
cmpsb
gs
mov
je
mov
mov
cmp
rclb
imul
pusha
int
xchg
jg
aas
stos
pusha
jl
cmp
cmp
jnp
mov
subl
decl
pop
lahf
or
jbe
add
pinsrw
fisttpl
sub
sub
push
pop
movb
mov
data16
lods
lds
jmp
add
sub
cmpsb
das
mov
push
jge
sbb
push
mov
outsb
in
xchg
data16
jmp
inc
inc
mov
mov
pop
mov
pop
push
pop
adcb
mov
xor
pop
or
sbb
iret
cmc
movsl
adc
cmc
arpl
jg
push
stos
iret
ja
push
xchg
xlat
jo
inc
lahf
xor
out
hlt
addr16
pop
ljmp
mov
fnstenv
inc
jnp
cmpl
rcrl
dec
mov
repz
dec
mov
into
stos
aam
push
ds
in
pop
sbb
cmp
jmp
repnz
pop
xor
fwait
jb
lods
pop
sub
ljmp
decl
pusha
js
loopne
cld
fiaddl
and
jl
jno
aaa
ss
mov
ror
jb
and
gs
sub
pop
inc
xchg
cmp
xchg
inc
pop
ja
adc
cltd
jmp
sti
insl
gs
nop
je
hlt
mov
pop
sbb
fisubrl
fisubrs
sub
dec
stos
dec
xchg
std
popa
push
aas
xchg
outsb
lret
xchg
mov
divb
frstor
out
flds
into
xor
lcall
mov
xchg
lcall
dec
loope
decl
mov
dec
fistpl
cmp
mov
xchg
lods
jb
js
ljmp
adc
sbb
mov
movb
pop
sub
daa
jno
adc
jnp
out
cli
pushl
mov
xchg
fcomp
lret
in
aam
fcomip
pop
adc
push
stc
lock
jb
xor
push
sbb
xchg
cmp
popl
icebp
push
sub
out
dec
shll
sbb
jle
gs
xchg
jl
jp
pop
jmp
ljmp
gs
fnstsw
cmpsl
icebp
das
dec
rcrl
sub
push
outsl
jnp
cltd
add
pop
sbb
decl
jnp
mov
cmp
or
push
mov
scas
push
dec
leave
mov
loope
push
sbb
cmp
push
fwait
sbb
xlat
jns
ljmp
and
leave
dec
add
mov
fwait
mov
scas
ss
mov
jmp
ljmp
int
add
jmp
ss
add
cmp
xor
mov
mov
pushl
cwtl
cli
fisttps
movsl
out
and
das
cmp
mov
pop
out
cli
inc
ret
pop
add
mov
aam
sbbl
adc
adc
sub
gs
loope
aas
popa
or
decl
jge
inc
cmp
mov
inc
or
outsl
outsl
rolb
sarl
push
pushf
adc
jg
pop
push
js
test
jl
lock
in
rorb
sub
aaa
lcall
mov
xor
xor
daa
ds
and
sbb
sub
or
in
clc
scas
cli
stos
out
into
adc
fwait
sub
sub
cmp
ret
je
out
clc
call
dec
sbb
mov
mov
pop
fucomp
mov
inc
incl
cmpsl
cmp
inc
xor
mov
dec
ret
xlat
sub
pop
call
data16
jb
idivl
shlb
fstp
and
sbbl
lcall
fcoml
xorb
pop
sub
pop
lods
dec
jg
lods
shl
ds
notb
sbb
aad
decl
and
aad
jno
bound
inc
imul
popl
cmp
jo
daa
mov
incl
test
inc
push
test
arpl
stc
jp
gs
cmp
or
pop
pop
pushl
mov
test
lods
mov
in
lock
insl
push
movsb
add
adc
pusha
loope
lcall
cmp
imul
cmpsl
cmp
data16
mov
pop
fcoms
pushl
insb
in
pushf
ss
or
pop
sbb
jo
mov
adc
lret
ret
xchg
cmp
inc
rclb
jbe
adc
cs
shlb
ret
jg
add
xchg
mov
aam
cmp
jmp
popa
mov
mov
mov
ja
fmull
fbld
cld
fbld
cltd
call
shll
cmpsb
out
dec
test
inc
push
and
mov
or
and
pop
sbb
mov
or
daa
push
cli
lcall
push
pop
iret
mov
jmp
pop
cmp
mov
fdivl
jnp
faddp
and
push
push
jecxz
or
mov
mov
inc
es
jmp
push
xchg
idivb
xchg
and
popa
jmp
pop
and
and
cmpsb
jmp
push
sub
pop
cli
mov
stc
rcr
push
and
ljmp
int3
insb
scas
lcall
cmpsl
cmp
jno
ljmp
mov
or
pop
in
fisubl
lds
mov
daa
xlat
addr16
cltd
mov
cmp
ljmp
dec
out
adc
movsb
or
dec
or
fmuls
inc
sub
and
incl
out
pop
loope
scas
cmp
les
inc
mov
pop
fstp
lock
mov
lea
rcrb
and
ss
pushl
popf
jae
dec
lcall
in
fcomip
mov
jne
cmp
stc
mov
inc
sti
adc
insl
push
mov
roll
call
mov
pop
cmp
jle
into
rcrb
lods
xor
push
add
push
or
aam
adc
or
jae
ja
imul
dec
add
call
fildl
cmpsb
cmp
cmpsb
jg
cmp
sub
xchg
ss
jl
and
scas
lret
jmp
mov
div
stc
fs
jns
adc
mov
or
popa
std
aad
add
cmp
int
mov
push
xor
rcr
inc
mov
and
cmp
sub
lds
sub
sbb
ja
add
out
cmpb
and
mov
pop
xchg
cmpsl
or
jb
push
hlt
lods
cmc
fnsave
xchg
mov
fildll
into
lret
mov
sbb
xor
and
insb
cld
dec
mov
fisubl
pop
fstps
fdivrs
dec
and
int
and
or
lcall
call
ds
xor
call
mov
sbb
imul
cmp
scas
pop
cmpsb
cmp
pushf
js
lcall
mov
mov
mulb
call
decl
cld
dec
pop
dec
dec
and
pop
sar
aaa
pusha
and
xchg
dec
jge
cmp
jmp
int3
rclb
sub
inc
cmp
out
aad
pop
push
lods
cld
mov
setne
mov
pop
adc
mov
pop
pop
jae
aaa
adc
mov
clc
incl
jp
push
adc
sbb
dec
jno
jns
ja
les
clc
incl
ficompl
sub
or
mov
ljmp
fsubp
in
insl
ljmp
jp
push
push
and
aad
cld
jmp
pop
loopne
dec
dec
popf
xchg
cmc
imul
pop
imul
mov
ljmp
out
pop
shrl
mov
sbb
neg
jecxz
jne
mov
add
pop
lcall
adcl
aaa
fwait
dec
idivl
adc
rclb
leave
add
outsb
sub
lcall
aaa
jne
stc
cmp
mov
mulb
test
clc
call
adc
insb
inc
cmpb
inc
fisttps
cwtl
and
jo
mov
test
movsl
decl
cmp
or
fildl
dec
adc
pusha
mov
bound
push
sahf
jmp
test
mov
ja
pushf
cltd
rolb
cmp
stc
es
out
mov
mov
xor
sti
je
cmp
ljmp
sub
shll
add
mov
push
movsb
call
cld
xlat
sbb
mov
mov
in
lahf
sub
stos
add
xor
pop
push
mov
mov
lea
adc
shlb
lahf
inc
xorb
call
imul
dec
sub
sbb
bound
lds
loopne
mov
cs
dec
lahf
cmp
mov
or
out
rcl
pop
adc
repz
xor
jle
sbb
das
mov
xchg
dec
sbb
roll
jecxz
fdivp
push
add
lret
pushl
shll
jno
mov
lcall
lds
loope
mov
out
rorl
and
adc
or
cmpsb
jge
xlat
inc
out
dec
daa
jp
xchg
scas
pop
cwtl
imul
cli
call
lock
arpl
popf
int3
pushf
dec
xchg
mov
push
push
mov
and
jmp
dec
and
dec
leave
push
push
add
push
fcomps
cs
pop
fs
mov
push
pop
jae
xchg
push
pop
mov
int
outsl
insl
push
aaa
in
outsl
dec
inc
cs
decl
xchg
ljmp
clc
lock
xchg
push
add
inc
ret
cld
mov
jmp
fdivs
mov
adc
push
incl
push
addr16
lret
xlat
nop
test
notl
mov
add
loop
add
mov
test
stc
and
mov
outsl
jbe
loop
lock
xor
repnz
call
icebp
pop
out
adc
push
inc
sar
fcoms
cmp
stc
incl
repz
test
and
shll
xchg
jno
cmp
int3
sub
loope
sub
mov
std
sub
fadds
jnp
fistpll
int
popf
and
pushl
into
adc
add
inc
xchg
in
outsl
rclb
icebp
arpl
add
ljmp
mov
pop
gs
jne
cmpsb
pop
adc
pop
mov
dec
test
sub
inc
shll
push
inc
icebp
pop
addr16
dec
andb
lcall
jecxz
push
test
mov
jg
int3
add
sub
sbb
sub
jnp
fiaddl
mov
call
jle
insl
imul
roll
test
in
jmp
mov
dec
or
mov
push
add
and
cmp
adc
sub
jg
jno
cmp
call
jmp
icebp
mov
mov
cs
lds
inc
jge
ljmp
ret
call
xor
dec
mov
cmp
jecxz
das
inc
and
es
inc
push
call
cli
call
xor
test
enter
and
lret
pop
lcall
and
mov
dec
jg
ds
testb
imul
lahf
leave
mov
push
cmpsb
cmp
ret
and
jecxz
fstpt
call
mov
fimull
xchg
mov
lock
pushl
pop
sbb
inc
leave
test
shlb
in
adc
sbb
mov
stos
call
incl
xor
and
cli
xor
cmp
cmpsl
aas
data16
incl
jle
push
test
sub
out
cmp
push
decl
mov
shll
loop
ffreep
jne
push
sarl
fstl
insb
aad
xchg
stc
sbb
loop
popf
dec
xchg
test
mov
jmp
in
add
mov
jbe
dec
das
sbb
jge
cli
or
lcall
lahf
pop
jg
add
xor
sbb
stos
lods
in
orb
xchg
pushl
push
fwait
push
pop
sub
mov
pop
gs
bound
inc
testb
repz
fdiv
clc
pusha
push
rorl
mov
stos
jnp
and
xor
inc
jno
mov
sbb
lcall
inc
lret
inc
mov
hlt
cmpsl
in
sbb
lock
adc
sub
lcall
and
aad
ljmp
mov
popa
xchg
push
jno
add
fiadds
push
arpl
mov
and
push
in
outsl
imul
lcall
mov
call
mov
add
mov
adc
gs
out
notb
mov
mov
pop
jae
stc
mov
dec
mov
leave
nop
lret
sub
imul
xchg
and
cmp
xchg
push
fs
bswap
stos
sbb
test
xchg
push
xchg
add
jge
pushl
jae
mov
jle
and
imul
fnsave
jge
es
roll
mov
dec
cmp
mov
mov
in
divl
js
cli
sub
ret
lcall
dec
sbb
pop
addr16
lret
insb
and
xchg
mov
stos
in
es
xor
orl
jbe
adc
mov
decl
mov
or
cmp
dec
ja
sarb
jns
outsb
adc
scas
decl
or
xor
in
push
dec
rcll
aam
mov
xor
fdivl
mov
lods
sbb
push
sbb
cmp
push
aam
dec
pop
inc
call
add
hlt
sub
frstor
scas
test
add
aad
lods
cld
pop
and
sbb
push
rcrl
test
and
jno
push
xchg
jo
mov
xchg
call
push
sbb
cmp
int
rorb
popa
adc
and
aad
out
or
imul
int
shll
push
adc
xchg
dec
imul
xor
cmp
cmp
das
nop
push
jne
andl
add
dec
xor
clc
dec
push
pop
add
cld
outsl
add
fisubs
mov
sbb
mov
decl
ret
pop
lret
cmp
xor
xchg
sbb
lods
loopne
sbb
mov
lret
std
in
loop
in
mov
adc
jle
fs
in
pushl
push
jo
out
jae
jmp
into
clc
xchg
and
mov
std
mov
cmp
ficoml
cmp
xor
lea
popf
popf
xchg
cld
inc
and
out
clc
call
out
es
cmp
mov
xor
jno
dec
imul
xchg
movsl
adc
xchg
inc
add
dec
inc
subb
ljmp
nop
push
jecxz
repnz
nop
iret
sahf
fsubr
mov
sahf
mov
ds
push
or
cld
inc
aam
outsb
adc
leave
inc
faddl
shrb
push
inc
aaa
cmpsl
mov
jecxz
cmpb
data16
cmp
out
dec
jnp
and
xor
shlb
popa
push
mov
imul
pop
stc
inc
stos
ljmp
movsl
xor
push
data16
dec
xchg
lcall
jns
add
mov
adc
pop
or
es
jbe
push
movsb
test
jmp
jg
insl
and
lret
add
add
jae
lretw
insl
fs
adc
call
pushl
lcall
mov
cmp
adc
cmpsb
inc
inc
sub
adc
mov
inc
mov
cli
pop
xchg
sbb
mov
repnz
push
mov
sub
cmp
call
xchg
pop
xchg
adc
mov
iret
mov
pop
cmpsl
icebp
mov
inc
insl
ficoms
jae
inc
mov
or
jmp
mul
fwait
dec
pop
shl
data16
sub
push
mov
in
xor
jno
push
rol
mov
call
loopne
lahf
inc
lods
movsb
jmp
mov
aam
sbb
gs
decl
sbb
sub
jnp
sbb
mov
inc
mov
mov
call
in
sahf
xor
xchg
in
adc
adc
jo
add
jo
adc
sub
adc
mov
fucomip
inc
int3
daa
jecxz
inc
mov
fs
ret
pop
aad
les
mov
gs
pop
lea
lods
pop
adc
push
adc
repnz
fs
sbb
sti
jmp
sti
insb
dec
aad
cmp
enter
insl
add
fimuls
das
cli
repnz
dec
or
rcr
xor
jg
mov
cmp
push
cmc
je
mov
jle
jecxz
lcall
pushl
aad
arpl
call
pop
cli
dec
sbb
addb
jmp
fucomi
or
cs
or
pop
mov
testl
incl
in
mov
inc
xor
ret
sbb
add
push
inc
sbb
out
clc
data16
lcall
ret
mov
mov
jns
mov
hlt
mov
add
dec
data16
int3
idivl
mov
clc
jo
jg
test
cmpsb
into
xchg
icebp
add
lea
push
xorl
sti
push
sbb
inc
mov
sbb
pop
scas
xchg
xchg
mov
sub
and
jmp
push
stos
out
or
clc
aad
sub
push
shl
sti
inc
pop
push
inc
sbb
jne
out
fwait
call
push
icebp
popf
orb
scas
je
push
adc
xchg
sub
ljmp
xorb
cmp
test
lea
lcall
incl
xchg
pop
loope
movsl
xchg
fsubrl
dec
inc
imul
jmp
stc
jg
int3
cld
lahf
xchg
push
scas
ret
imul
mov
adc
pushl
inc
jo
mov
or
scas
jmp
mov
mov
out
pushl
arpl
sbb
dec
sub
dec
pop
sti
adc
movsb
loope
or
xchg
ljmp
pop
pop
xchg
arpl
in
cmp
mov
sbb
mov
sbb
outsb
xchg
mov
xor
decl
cmc
pop
movsb
jg
shl
mov
jns
xchg
sahf
push
test
jge
mov
mov
jnp
and
cld
pop
cld
call
mov
xor
jo
jl
decl
sub
jo
insw
ja
and
test
fs
jp
outsl
iret
jb
adc
sar
jns
mov
mov
push
jo
pop
sub
sub
clc
push
xchg
les
xchg
bound
fwait
dec
scas
xchg
pop
inc
xor
ljmp
sar
outsl
cs
cmpsl
xor
shr
aaa
push
loope
and
jmp
aam
flds
jbe
test
std
mov
jg
stos
mov
push
mov
das
dec
jno
bound
inc
idivl
shrl
popf
jecxz
push
lods
cmpsb
sahf
cs
push
bswap
scas
lods
pop
jbe
clc
decl
lock
or
inc
mov
fdivrp
test
xchg
mov
add
and
mov
leave
dec
adcb
incl
sbbl
pushf
outsb
ret
xor
imul
mov
enter
lret
imull
mov
rcr
pop
sub
jmp
jo
inc
jae
sti
jle
adc
sub
pop
dec
nop
xchg
hlt
stos
fadds
xlat
sub
inc
ljmp
inc
int3
jle
xchg
arpl
int
mov
cmp
push
ret
push
mov
data16
jp
push
shlb
incl
popf
lahf
dec
fnstenv
pop
clc
pop
push
mov
test
lret
lcall
sub
xor
test
inc
hlt
cmp
and
mov
iret
sub
imul
lcall
push
sub
cmp
lods
fdivrs
adc
xchg
and
or
push
outsb
cs
and
add
push
in
mov
push
test
push
lcall
add
or
in
xchg
cmp
mov
in
mov
sbb
or
ljmp
adc
mov
insl
outsl
fdivp
stos
daa
jmp
fsqrt
mov
lret
insb
mov
std
pop
ljmp
cli
ljmp
or
adc
push
jmp
mov
outsb
xor
pushf
daa
dec
pop
das
mov
std
inc
inc
mov
ljmp
fistl
xchg
inc
fidivrs
in
out
rcl
mov
jg
sub
ror
inc
hlt
test
ret
rol
add
xchg
fldt
mov
out
out
xor
subb
mov
addr16
jle
or
shlb
xchg
inc
arpl
dec
sub
push
adc
adc
fiadds
cmpsb
and
jmp
aam
sub
push
test
jecxz
icebp
sti
sub
push
pop
fnstenv
sbb
pushl
cwtl
enter
sub
xchg
sbb
ss
sbb
dec
and
outsl
andb
jge
out
mov
mov
dec
pop
sbb
mov
or
add
repz
xchg
dec
mov
cld
imul
push
lods
jbe
sub
insb
stos
ret
jno
insl
cld
mov
test
lds
gs
cmp
arpl
mov
jg
incl
or
iret
neg
cmc
xchg
cwtl
into
mov
negl
mov
scas
lcall
dec
dec
adc
push
sbb
in
pop
outsb
or
xchg
adc
call
pop
stos
clc
mov
aad
xchg
jge
xor
pop
mov
add
jmp
loope
aam
mov
incl
or
mov
push
dec
leave
push
clc
cmc
dec
nop
sarl
stos
shl
mov
aaa
mov
test
dec
call
inc
pop
aas
jbe
fidivrl
lds
jbe
aaa
push
fidivrl
push
sub
aas
scas
test
ljmp
nop
clc
push
push
dec
clc
or
ror
popf
movsb
add
decl
aas
aad
cmp
int3
call
push
jbe
adc
mov
div
jmp
cs
decl
jns
mov
fimull
lock
cli
or
fiaddl
push
or
cmp
fidivrs
aam
in
push
mov
decl
adc
sbb
clc
packuswb
mov
es
mov
mov
les
jp
pushf
in
icebp
push
loop
imul
adc
cmp
cmp
sarb
pushl
mov
dec
mov
pop
add
hlt
sbb
gs
jmp
pop
push
mov
jg
lret
out
push
adc
and
mov
dec
into
dec
aam
aas
pop
xor
dec
loopne
popf
jns
call
stc
aaa
and
das
or
jnp
and
shlb
cmp
push
jp
mov
cmp
sub
xorb
pop
cmp
push
loopne
dec
or
push
aas
sub
pop
or
ret
inc
sbb
xchg
cmpsl
inc
rcrb
mov
jae
loop
xor
adc
mov
lret
jbe
mov
push
or
xchg
sub
mov
incl
out
shlb
bound
dec
cmp
loopne
dec
in
sbb
push
push
mov
sub
jns
test
mov
inc
add
mov
js
push
loope
repz
cmp
incl
mov
lret
pushf
and
imul
cltd
popf
lcall
ret
test
or
test
jle
subl
ret
pop
or
into
dec
loop
cmc
fcomip
fisubrs
sbb
shr
sbb
adc
dec
filds
int3
jne
cmp
mov
xorl
dec
xchg
sbb
dec
mov
pop
cmp
xor
inc
bound
fwait
and
repz
mov
mov
scas
jne
mov
sahf
mov
int
inc
jl
test
aas
cs
mov
into
je
icebp
xchg
mov
add
jbe
pop
and
test
jp
ljmp
jge
mov
xchg
movsl
sbb
xor
add
and
decl
mov
shll
hlt
dec
sub
add
cmp
dec
mov
xor
nop
pop
shl
jecxz
sbb
fcomip
ljmp
dec
xchg
pop
in
jb
scas
dec
pop
ret
mov
add
mov
decl
xchg
sahf
or
xchg
ss
stos
cmp
sub
and
push
subl
ljmp
lock
fsubr
scas
js
pop
mov
and
dec
push
cmp
test
mov
mov
fcmove
ljmp
mov
and
fmulp
xchg
mov
xor
inc
or
decl
jle
push
sbb
stos
mov
inc
ret
pop
aad
leave
hlt
push
movsb
daa
cmp
sbb
lcall
repnz
pop
xchg
inc
mov
imul
and
cwtl
mov
imul
into
inc
loopne
cld
fisubs
cmc
les
ss
out
adc
lcall
or
push
and
xchg
imull
clc
and
incl
mov
data16
mov
fistps
pop
int3
pause
int3
or
xchg
dec
stos
ret
jbe
mov
jmp
push
adc
mov
call
dec
insl
stc
jl
or
insw
and
jge
bound
push
movsb
xchg
pop
sbb
lea
dec
or
lds
ds
fsubrs
push
ret
pop
sbb
mov
xchg
jp
in
lea
decl
mov
loop
cli
cmp
xchg
jge
in
push
adc
out
pop
or
push
lods
pushl
mov
adc
outsl
dec
fldenv
pop
stos
inc
loopne
or
mov
push
or
dec
sbb
fwait
lods
lret
enter
pushf
jno
rol
inc
jbe
sti
pop
sub
mov
sar
add
in
xchg
xchg
ja
loope
scas
adc
mov
mov
push
mov
and
xchg
jge
xchg
in
xchg
and
mov
sub
inc
jmp
out
ds
jnp
lods
xor
fadd
jge
daa
in
xchg
and
push
ret
negb
leave
lcall
xchg
in
jge
std
imul
cmpsb
sbb
sub
adc
cmpsl
ss
add
scas
fs
pushl
jne
mov
push
mov
add
ret
xchg
subl
dec
iret
jg
jo
or
push
ljmp
pop
repz
xchg
mov
push
inc
push
pushf
xchg
xor
push
mov
xchg
aam
cltd
inc
aam
scas
lahf
movsb
shl
cmp
orl
pushl
mov
xlat
fidivs
jl
pop
push
leave
push
not
sub
dec
movlps
stos
into
jnp
cmp
push
std
sbb
hlt
pop
outsl
ret
xchg
call
icebp
out
push
or
cmp
mov
jl
inc
aas
pop
mov
dec
adcb
and
rol
es
insb
sbb
sbb
add
shrl
push
and
fwait
cmp
mov
xchg
subl
movsl
cmp
mov
mov
loopne
mov
sub
test
popf
cs
out
orb
cwtl
add
dec
mov
js
and
cld
pop
dec
icebp
enter
xchg
stc
pop
or
fisubl
sar
jl
inc
ljmp
or
fwait
and
mov
pop
andl
into
adc
push
or
mov
rol
fistps
mov
mov
mov
push
fwait
les
xor
into
fwait
outsl
sbb
loop
sbb
xor
mov
dec
pushf
mov
jmp
sbb
loop
xor
imul
dec
test
dec
daa
pop
dec
ror
aas
or
loop
int3
aaa
mov
add
cmp
ja
fcomps
adc
and
inc
leave
fsubs
decl
xor
dec
pusha
push
xchg
test
aam
fdivrl
daa
xor
pop
leave
je
mov
xchg
jmp
enter
in
push
and
ret
push
or
in
push
insb
int
mov
out
incl
rclb
add
dec
pop
mov
cmp
mov
cmp
decl
or
mov
jno
aam
xchg
fcmovnu
mov
mov
incl
scas
xchg
aad
dec
push
lock
sbb
nop
outsl
jle
cmp
inc
jle
inc
les
nop
sub
call
pusha
dec
addr16
mov
stc
or
sub
lea
neg
mov
push
inc
movsl
test
js
jo
jo
lea
fcomip
mov
mov
in
xor
out
imul
mov
push
xor
test
mov
aas
mov
inc
add
pushl
push
test
push
lds
inc
fists
js
lahf
and
outsl
add
addr16
mov
call
inc
aaa
fwait
ljmp
sub
lahf
inc
xchg
rorb
imul
fwait
lcall
call
adc
fisubl
lea
lcall
hlt
pushl
pop
iret
cli
repnz
adc
sbb
pop
jl
outsb
mov
call
lds
scas
jae
jno
add
lahf
test
push
adc
ljmp
call
mov
mov
lea
lods
bnd
mov
loopne
and
lahf
jle
ljmp
lcall
sarb
mov
movsb
inc
fsubl
call
or
and
mov
or
loop
mov
cmp
out
xchg
mov
scas
add
jmp
mov
test
cmp
popf
and
pushl
inc
lods
daa
jge
mov
jle
or
add
sub
fnstsw
popa
adc
cmpsl
jbe
pop
xor
jg
js
nop
push
out
xchg
inc
push
push
outsl
xchg
fstps
xor
inc
sub
jne
js
pop
adc
cli
push
cmp
add
cmp
sbb
into
add
and
flds
inc
cmp
jl
mov
aad
out
jmp
ds
ret
inc
int
loop
adc
mov
xor
arpl
sbb
pushl
lret
or
subb
addr16
sub
inc
and
inc
in
push
icebp
xchg
stos
inc
xor
das
xchg
incb
dec
push
pop
mov
jmp
push
jmp
or
aaa
ud0
incl
je
xor
or
sbb
pop
ljmp
pop
fcomip
lret
jecxz
or
imul
incl
xchg
leave
ret
dec
mov
data16
jp
cwtl
pop
insl
cmp
xchg
xor
lret
dec
out
leave
daa
decl
repnz
mov
dec
and
bswap
sbb
rol
mov
xor
decl
aam
aam
inc
jp
cmp
xchg
int3
mov
mov
xlat
fdivs
decl
jmp
ret
mov
inc
lret
dec
insb
pop
jle
popa
outsb
cmp
ds
or
incl
jmp
or
cs
fst
pop
dec
mov
les
or
sbb
sarb
jmp
shll
lods
sub
mov
call
sub
jno
ud2
insb
pusha
call
and
push
mov
sub
outsb
test
mov
inc
sub
jno
std
ljmp
out
imul
cmp
ljmp
inc
test
stc
lret
leave
xchg
sarl
mov
ljmp
pop
add
sar
cmp
ret
push
stos
fwait
test
inc
ds
jecxz
xor
inc
jae
stos
and
ja
call
aaa
mov
cmp
adc
mov
mov
xor
and
xchg
sub
decl
cmc
shrl
mov
fidivs
mov
add
loopne,pt
incl
cld
shll
inc
data16
movsb
mov
cmc
aaa
mov
jae
jmp
add
fmull
cwtl
sbb
xchg
sbb
nop
test
adc
xchg
jae
cmp
ss
decl
xchg
out
cmp
outsb
out
sbb
loope
das
add
cmp
dec
inc
sub
decl
pop
pusha
cmp
add
sub
dec
mov
sbb
scas
out
or
mov
sbb
mov
mov
and
jo
scas
rorl
pop
mov
rorb
inc
loopne
insb
negb
jbe
sbb
mov
fdivrl
imul
jge
test
sub
mov
jecxz
sarb
repz
clc
mov
inc
jno
decb
aad
lods
scas
lock
lcall
mov
pop
jne
lods
dec
call
mov
hlt
into
push
data16
decl
mov
mov
sti
push
gs
in
inc
dec
decl
test
sarb
and
les
ljmp
jp
cmc
fisttps
lcall
clc
mov
ss
cmpsb
mov
xor
sbb
xchg
mov
jmp
loop
cli
decl
int
add
les
call
clc
fcoms
ljmp
adc
jmp
dec
rcrl
adc
push
mov
data16
fcomip
fcompl
sarl
inc
push
insb
jb
and
dec
insb
es
filds
inc
adc
mov
add
jb
and
pop
pop
jmp
fcomip
dec
psubsb
cmp
sbb
sbb
jne
daa
push
popa
fdivs
pushl
add
in
inc
mov
sbb
nop
cmp
jg
sbb
out
or
push
scas
rolb
push
sbb
popf
repnz
add
mov
mov
sbb
mov
scas
mov
std
or
mov
pop
add
jecxz
push
mov
dec
jl
dec
dec
push
scas
add
call
inc
lret
sbb
out
dec
std
ja
adc
gs
or
push
subl
cld
jns
cmpsl
mov
xor
mov
insb
jo
mov
incb
imul
pushl
sahf
adcb
pop
movsb
jmp
das
adc
cmp
gs
and
outsb
xor
test
pop
fcomip
call
or
sub
push
jmp
mov
cld
insl
fildl
jns
push
int3
fidivs
std
mov
andl
stc
push
mov
adc
ljmp
lahf
ljmp
push
ret
xchg
lret
mov
shll
daa
pushf
imul
ljmp
xchg
cs
mov
fucom
push
lods
jp
test
xlat
mov
insl
fcoms
jne
daa
inc
les
xchg
adc
lcall
add
or
cmp
popf
xor
add
jnp
mov
cli
incl
aaa
jg
pop
and
out
sbbl
movsl
idiv
sbb
incl
inc
inc
das
fdivrl
shrl
inc
cmp
fistpl
call
loop
jo
xor
mov
loop
pop
call
mov
push
or
adc
mov
adc
add
xor
and
push
rclb
decl
divb
and
scas
add
popa
dec
adc
insb
mov
cmpsb
sbb
adcl
and
mov
pushl
cld
sub
mov
hlt
mov
outsb
adc
jne
push
sub
aas
neg
ud0
jmp
js
and
jge
sub
dec
xor
jecxz
xor
inc
sub
xlat
iret
es
pop
lds
xor
xchg
ret
sahf
jno
movsl
outsb
pop
or
inc
jmp
add
sbb
sbbb
sub
ret
and
outsb
cmc
inc
sbb
lods
push
sbb
sub
je
inc
lret
into
dec
cmp
jl
scas
sbb
xchg
sbb
adcl
adc
inc
xor
mov
dec
popf
or
pop
jno
je
push
inc
shrb
inc
aad
jbe
sti
mov
inc
sub
pushl
in
lods
jge
insl
and
insl
push
popa
mov
inc
cli
lcall
adc
sub
xchg
sbb
cmp
leave
addr16
xchg
and
nop
arpl
jmp
dec
rorb
scas
adc
and
ljmp
add
maxps
pop
sti
fidivrs
mov
dec
or
cmp
pop
sbb
fs
cmpsb
mov
incl
xchg
mov
pop
xchg
lahf
jecxz
xor
xchg
mov
ret
sub
stc
lock
stc
xchg
lcall
pop
leave
and
int3
xor
sbb
xchg
mov
lock
jmp
ret
xlat
sar
pop
dec
fldt
mov
xchg
stos
fxch
jge
js
imul
in
fmulp
in
push
jg
inc
rorb
popf
js
cmp
inc
mov
add
popf
sbb
ljmp
mov
icebp
jo
or
into
shll
push
lds
mov
xorb
sbb
or
and
orl
stos
push
fs
cmpsl
pop
xor
std
adc
pop
xchg
call
je
sti
xchg
sub
mov
ljmp
jecxz
xor
xchg
mov
out
cld
ret
mov
popa
loope
add
pop
pushl
lods
jecxz
lcall
mov
and
aas
sub
and
stos
adc
lcall
out
and
lea
pop
mov
sub
addr16
pop
pop
test
out
lcall
in
mov
push
pop
pop
ficoml
or
cmpb
mov
jmp
ret
cmp
test
jg
cli
inc
and
push
mov
jecxz
and
jle
cmp
cmp
mov
scas
cmp
inc
stos
jae
and
ret
call
andb
mov
or
xorl
lods
repz
or
out
jo
loope
les
lretw
out
stos
mov
xchg
jecxz
jp
gs
add
push
pushf
cmp
imul
xchg
xchg
sub
inc
inc
jle
enter
sbb
push
in
or
inc
bound
cmpsl
add
arpl
call
jmp
arpl
js
xor
and
cmovs
ds
or
gs
mov
outsl
cli
jge
outsb
lea
mov
xchg
inc
sub
daa
cmpsb
ds
js
inc
lret
cli
mov
mov
adc
es
stos
mov
movsl
aaa
div
mulb
jmp
rcll
int3
sub
or
test
les
rcr
xchg
aam
icebp
cmp
push
and
jnp
mov
push
mov
les
outsl
clc
stos
test
in
sbb
decl
dec
outsl
xchg
rcll
rcrb
cmp
pop
mov
sbb
inc
fimull
mov
add
adc
fsubl
pop
cmp
clc
inc
jecxz
call
ljmp
dec
push
jle
sub
movsb
pop
jo
stc
add
cmp
push
fistpl
mov
jne
andl
cmp
mov
aaa
pop
sahf
push
sti
shrb
sbb
or
xor
push
lcall
cwtl
dec
dec
aaa
sbb
push
shll
stc
das
mov
std
mov
lcall
fwait
jo
std
aam
mov
nop
nop
mov
in
xor
and
cmp
xchg
lcall
xchg
test
ss
pop
nop
std
data16
jmp
int3
lea
addr16
cmove
jae
dec
call
jmp
in
mov
inc
popa
popf
xor
inc
inc
out
jmp
aad
jl
ljmp
cld
xchg
and
xor
pop
mov
clc
fisubrs
repz
les
fs
sbb
pop
jmp
stos
pop
cli
lret
rol
loopne
sub
jnp
mov
mov
int3
or
in
mov
xchg
decl
out
inc
mov
adc
in
pop
jno
pop
jne
fucomp
ss
pushl
and
fcoml
loopne
push
and
pop
push
add
decl
out
add
pop
loop
xchg
and
sub
jg
xor
mov
sub
push
adc
mov
clc
lret
and
jl
pop
and
je
shrl
xor
push
and
loop
xor
inc
add
je
sbb
clc
sti
and
jmp
push
fs
in
and
push
scas
dec
mov
in
ds
out
mov
mov
sbb
icebp
add
test
push
dec
push
stos
out
nop
pop
lahf
jecxz
aad
jmp
fisubrs
mov
and
cmpsb
sbb
push
jo
jns
and
dec
sub
lret
mov
cmc
leave
mov
test
aaa
test
ret
push
jl
ss
stos
mov
pushl
test
jle
xchg
incb
or
fiaddl
ret
mov
mov
mov
jae
incl
loope
add
mov
and
call
cmp
scas
in
in
inc
jbe
ljmp
call
repnz
in
jp
sbb
aad
std
sub
pushl
repnz
sub
fs
cwtl
jo
es
sar
jnp
sub
pushl
inc
sbbl
jo
mov
dec
mov
aas
mov
pop
lahf
enter
jmp
inc
xchg
pushf
cld
jns
add
imulb
fdivs
imul
ljmp
loopne
ljmp
mov
jo
je
mov
ret
add
icebp
jle
push
adc
loope
xchg
fs
fldt
into
xor
dec
in
mov
cld
push
or
push
xchg
ret
aas
ja
int3
stc
pop
cli
pop
scas
sbb
pop
adc
call
test
xchg
inc
in
adc
mov
sti
sbb
and
call
movsb
ret
jle
sbb
mov
repz
fdivrp
sbb
jmp
fwait
xor
ljmp
mov
mov
inc
fmull
gs
pop
outsb
sbb
clc
fcomip
call
push
outsl
shll
mov
fcompl
aam
out
lock
xchg
fcmovbe
mov
cli
mov
sbb
stc
and
test
push
mov
decl
add
xorl
add
cmc
orl
repnz
lcall
pop
push
test
adc
test
cmp
imul
test
aad
push
mov
cmp
inc
jae
add
mov
xor
pop
lcall
push
jg
aas
jnp
testb
fwait
dec
nop
and
das
or
fwait
shrb
lcall
sbbl
es
add
out
fidivs
push
popf
inc
testl
mov
mov
inc
xor
ret
repnz
mov
fistl
inc
or
call
fwait
jns
mov
push
push
push
mov
lock
push
loopne
jecxz
fwait
bnd
jmp
jmp
leave
pop
lcall
das
out
dec
cmp
xlat
inc
cmpsb
push
pop
enter
ljmp
inc
dec
into
add
lea
adc
cli
in
js
cmpl
cmpsb
pop
cwtl
in
jno
aas
lcall
rcrl
push
fdivs
adc
add
and
test
push
lds
pushl
movsl
sub
xchg
leave
push
cli
cmp
or
shl
mov
decl
lods
fdivr
nop
hlt
xchg
add
stos
cmp
popf
or
dec
scas
dec
decl
sub
shrb
push
add
xchg
test
or
mov
jne
lcall
xchg
out
xlat
add
pusha
cmp
pushf
pop
movb
in
dec
call
mov
add
jmp
sub
jg,pt
cmp
xchg
push
mov
push
rcll
push
xor
lcall
mov
push
add
insb
cmp
rorb
adc
jecxz
mov
push
cmc
ljmp
sbb
fs
cltd
insl
into
mov
sti
shll
cltd
dec
inc
cmp
loope
ret
xor
jmp
xor
shll
adc
or
or
ss
call
mov
push
inc
aam
jg
or
pushf
push
test
data16
mov
stos
mov
es
ljmp
sub
jae
aad
sti
cmp
xlat
xor
int
pop
sbb
xor
cmpsb
lock
ds
and
mov
cmp
adc
decl
cld
mov
or
outsl
jl
jbe
jl
pop
or
adc
aaa
jbe
adcl
clc
sar
repnz
call
scas
fisttpll
imul
aaa
and
mov
mov
jle
in
mov
fs
mov
rcr
iret
popa
das
jne
mov
in
xor
cmp
lds
xor
ficomps
call
mov
sub
es
cs
mov
jecxz
mov
fiaddl
lcall
in
movsb
std
loopne
dec
sub
jo
inc
in
call
jo
jo
sbb
lcall
lea
inc
loopne
idivb
sbb
cs
pop
cmc
or
jmp
xor
xor
lcall
push
or
mov
inc
mov
lods
sbb
fistpl
ds
aaa
mov
andl
ljmp
in
push
jo
mov
jne
xchg
dec
mov
pop
mov
outsl
mov
dec
or
or
insl
cs
out
aam
insb
adc
mov
fdivrp
incl
daa
mul
test
mov
rolb
gs
lock
call
xchg
mov
adc
dec
inc
ljmp
outsb
clc
dec
add
and
mov
mov
jl
xchg
pop
test
add
ljmp
jb
iret
mov
or
andb
lahf
xor
sarl
mov
ljmp
call
cmp
ljmp
push
ljmp
jmp
dec
pop
add
push
out
xchg
sbb
xor
mov
mov
arpl
jle
inc
jge
iret
stc
pop
bound
call
sub
fsubrs
cmp
inc
jne
cltd
mov
int3
inc
cwtl
or
pop
jg
shl
pop
inc
flds
lahf
shlb
or
enter
in
jbe
cmp
incl
adc
out
leave
sub
fdivr
xchg
imul
test
jecxz
push
cmp
aaa
int3
enter
inc
pop
push
push
pushf
mov
ss
aaa
bound
mov
imul
dec
and
inc
lock
fstl
jmp
decl
add
cmp
inc
or
lock
pop
jae
mov
int3
test
insl
and
rcl
daa
dec
mov
stos
int
decl
lock
lcall
pop
inc
mov
mov
in
jmp
mov
xchg
addl
pop
adc
decl
int3
cmc
dec
sub
cwtl
adc
fwait
xor
fbld
ds
mov
jo
xlat
mov
out
test
call
test
xchg
imul
dec
mov
jnp
sbb
rorb
lock
adc
iret
ret
sub
in
out
call
inc
arpl
mov
mov
mov
ljmp
je
jge
fcomip
mov
push
add
loop
xchg
out
mov
sub
stos
push
std
enter
dec
cmp
lods
sbb
mov
mov
mov
scas
imul
mov
pushf
cmp
inc
clc
pop
inc
std
cmp
dec
mov
shll
jg
les
das
lcall
loop
loope
hlt
sub
pusha
lock
and
negb
incl
jmp
push
sbb
and
fdivr
jnp
bound
daa
aad
cmpsb
incl
adc
mov
pusha
adc
subb
mov
xchg
cmpsb
roll
mov
push
or
xchg
add
sub
stos
mov
sbb
test
cld
mov
ljmp
clc
incl
pop
cmp
imul
sub
imul
jmp
shl
push
pusha
rorl
cltd
mov
sub
pop
outsl
sbb
dec
insb
xchg
push
leave
aam
scas
fs
lcall
dec
addr16
cmpsl
insb
cli
push
xchg
push
jmp
dec
push
shrl
mov
js
jmp
xchg
sub
push
rcll
shlb
hlt
jecxz
pop
mov
push
add
mov
cltd
mov
mov
shlb
dec
add
aas
int
div
clc
xchg
mov
add
push
mov
adc
aad
xlat
fwait
vpmacsswd
outsl
xchg
mov
mov
leave
decl
popf
mov
in
aas
add
fsubrl
je
xor
nop
sbb
decl
push
movsb
fs
aad
into
dec
sub
mov
push
out
std
inc
or
sbb
lahf
out
cli
call
push
jecxz
push
jns
jge
in
cmpsl
in
push
push
mov
add
gs
std
incl
dec
imul
gs
push
cwtl
fs
pop
mov
dec
mov
inc
fcompl
in
push
sbb
mov
mov
jle
sbbl
int3
incl
cmp
xor
cmc
leave
add
popa
xor
mov
xor
xlat
mov
and
incl
fisttpl
scas
push
lods
addr16
mov
mov
das
movsb
cld
xchg
das
out
cld
push
fidivrl
or
fisttpll
fsubs
lcall
xchg
enter
cmp
imul
call
fstps
cmp
scas
lret
stos
into
push
sub
das
sbb
xchg
add
ljmp
mov
mov
sbb
jmp
leave
cmp
fs
cmp
lret
fwait
sarb
cmc
outsl
clc
out
sub
xor
push
sbb
cmpsb
popa
mov
cli
scas
fimull
xor
fbld
call
mov
ret
and
cld
inc
adc
jecxz
inc
mov
cmp
aas
mov
roll
xor
pop
ret
lret
adc
mov
sti
incl
cld
shrb
repnz
ret
inc
test
adc
or
dec
mov
inc
sahf
orl
dec
pop
add
adc
push
and
in
cltd
ja
pop
outsb
cli
fstps
add
mov
fwait
mov
cmp
cmp
mov
xor
jecxz
movsb
mov
fadds
inc
enter
icebp
incl
xor
mov
rorl
mov
sbb
push
cmp
bnd
cmpsb
int
ljmp
and
mov
ret
xchg
jp
inc
clc
jae
fcomip
dec
push
mov
lahf
dec
loopne
sbb
fdivl
sub
push
fdivp
pop
mov
ljmp
ret
or
xchg
roll
sub
imul
and
call
fucomi
pop
push
test
mov
push
mov
ret
clc
jle
stc
nop
jecxz
movsb
sbb
int
mov
insl
lea
ljmp
js
rolb
xor
pop
jg
lcall
pop
sub
jae
leave
dec
repz
push
and
sub
cmpsb
sub
push
call
loop
cmpsl
sub
jno
call
dec
jno
lods
add
rol
sar
pop
loopne
xor
and
dec
or
jl
je
in
cmc
xchg
mov
out
cmp
sahf
push
and
test
mov
xor
dec
in
leave
out
out
clc
xchg
push
insl
movsb
dec
inc
cs
dec
sbb
xchg
push
xor
data16
in
incl
xchg
test
rcll
cmp
je
fs
xor
daa
inc
and
ljmp
loopne
pop
in
sub
sti
es
mov
or
add
sub
dec
push
out
push
jp
fdivrl
stos
sbb
sbb
fwait
cwtl
push
jge
mov
add
cmpsb
data16
lea
icebp
rclb
ret
inc
adc
mov
in
icebp
sub
jg
pushl
sti
and
and
cmovp
pusha
inc
fstpt
fisubl
cmp
sarb
jmp
hlt
into
or
pop
fstps
repnz
sbb
xchg
mov
test
aaa
mov
inc
aaa
in
pushl
pop
loopne
cwtl
addl
push
add
dec
or
movsb
jne
push
call
movsl
fidivs
adc
mov
in
add
sbb
bound
shlb
std
fwait
jmp
mov
inc
jmp
lahf
pop
sub
es
dec
das
jne
ljmp
rcrl
adc
push
dec
stc
icebp
and
mov
lods
pop
test
fs
arpl
cmp
mov
mov
aam
pop
mov
test
xchg
add
mov
test
jp
mov
lcall
popa
pop
sbb
push
jne
inc
push
je
and
dec
ljmp
into
mov
fildl
aam
push
nop
dec
cmp
push
mov
sar
ljmp
insb
xor
pop
fsubr
mov
dec
xor
std
pop
jb
insl
into
fsub
hlt
std
dec
adc
jmp
sbb
imul
cltd
mov
clc
aad
fstpt
lcall
addb
lods
push
es
dec
adc
adc
call
mov
ret
mov
add
cmpsb
inc
jp
inc
inc
out
test
mov
scas
testl
mov
popf
cmp
push
xchg
cmp
lcall
pusha
xchg
mov
cmc
push
xor
and
mov
and
sbb
inc
fdivr
fstpt
pop
lods
push
pushl
sub
addr16
mov
and
ficoms
je
sbb
test
aaa
or
mov
imul
pop
rol
leave
sti
mov
ljmp
xlat
dec
jne
adc
sti
adc
dec
outsl
and
and
add
scas
icebp
fcos
outsl
cli
add
mov
cmp
mov
out
push
les
ljmp
mov
or
lds
popf
fisttpll
jp
ds
inc
rolb
daa
clc
mov
mov
cmp
mov
imul
add
shrl
mov
and
nop
dec
cmpsl
push
mov
pop
sti
xchg
cld
incl
andb
daa
out
sub
incl
leave
outsb
in
pusha
lds
shlb
mov
inc
pop
adc
sti
pushf
decl
shl
inc
imull
mov
push
mov
insl
aam
js
mov
dec
fwait
sar
mov
mov
xchg
mov
jo
mov
cmpsl
vphaddwq
call
sahf
inc
sbb
mov
mov
insl
pop
sarb
in
dec
out
mov
mov
dec
add
dec
xor
imul
inc
or
test
imul
incl
push
or
or
push
inc
inc
push
stos
xchg
scas
push
and
incl
roll
out
cmpsb
js
inc
dec
or
add
mov
xchg
sub
xor
mov
stc
xlat
filds
lods
or
out
lret
and
mov
cmp
fwait
push
fistpll
jmp
mov
movsb
and
mov
dec
pop
lcall
add
xor
jg
mov
lods
mov
and
inc
fadds
popf
es
jns
sbb
cmp
lcall
imul
cmpb
std
inc
incl
subb
jmp
and
dec
xchg
aad
cli
jno
mov
mov
jg
jmp
rorb
stc
mov
inc
jbe
enter
xor
xor
lcall
leave
mov
scas
dec
adc
out
jae
mov
push
mov
sub
stos
pop
loopne
decl
mov
inc
mov
pop
enter
adc
pop
push
dec
jae
push
inc
fdivrs
int3
bound
fistpll
pop
movsl
mov
nop
dec
jge
or
adc
notb
push
cmp
call
bound
xchg
sbb
ljmp
pop
std
decl
jnp
stos
popl
or
pop
push
cmp
jg
mov
pushl
jl
fsubl
or
in
out
or
frstor
and
andl
mov
cs
sbb
insl
sub
jle
mov
push
or
scas
clc
dec
cmpsl
mov
int
aam
ljmp
add
dec
lods
into
adc
les
imul
mov
add
xchg
jmp
pop
adc
xchg
add
pushf
andb
ljmp
jmp
orb
cmpb
out
mov
je
arpl
je
sbbb
decl
or
notl
adc
jb
stos
fwait
mov
mov
mov
decl
mov
movsb
mov
jae
testb
cld
dec
lret
sbb
or
test
dec
pop
cmc
xchg
outsl
xchg
jno
das
icebp
push
call
adcb
push
push
jb
cld
fwait
fs
cwtl
test
mov
push
and
pop
mov
orb
and
les
aad
imul
filds
mov
inc
and
popf
sar
incl
pop
sti
es
xchg
mov
js
data16
sub
mov
iret
pusha
fisttpl
clc
inc
jnp
sub
jno
filds
push
mov
rcl
xorb
mov
ljmp
push
ret
sub
repz
dec
rclb
fstpl
test
mov
sub
cmp
and
cmp
push
mov
cmp
fdivrs
cmp
lret
cmp
ss
or
mov
mov
jmp
movsb
mov
xlat
adc
pop
aaa
xchg
mov
call
call
lret
int3
lret
xchg
xchg
push
and
cmp
lret
lock
add
jo
fdivr
lcall
mov
jecxz
lods
pushf
xchg
mov
jo
lret
fwait
jmp
add
lret
nop
fisttps
and
jp
and
vcvtpd2psy
mov
push
int3
hlt
daa
xor
stc
test
call
and
movsb
adc
mov
or
aad
data16
das
inc
xor
ljmp
xlat
call
add
and
xor
add
inc
jnp
jg
out
sub
cmc
jecxz
fsubrp
dec
add
je
or
into
push
incl
bound
xor
addr16
mov
pop
pop
cmpsl
and
inc
iret
xchg
decl
mov
pushf
sbb
aas
mov
decl
mov
mov
pusha
inc
mov
mov
cmp
ljmp
push
or
out
loop
pusha
jnp
cld
mov
sahf
pop
lods
je
scas
cmp
call
or
cld
sub
dec
jno
jns,pt
je
xchg
pop
pop
pop
cli
aam
and
jmp
jmp
aaa
in
sub
push
jo
scas
in
scas
dec
inc
xchg
xor
xor
xchg
lcall
inc
notb
mov
das
push
int3
mov
loop
jecxz
mov
fsubrl
sub
mov
lret
inc
out
cli
push
and
call
js
ret
sarl
test
inc
rcl
push
shr
cmp
jg
rcr
mov
xor
push
lcall
sbb
out
cli
call
xchg
sbb
outsl
mov
mov
addr16
xlat
sti
mov
or
sarb
ljmp
sub
orl
sub
loop
es
and
cmc
cmp
pushl
lcall
xor
popf
push
xchg
fidivrs
add
pusha
test
fcomip
lcall
dec
rcll
negl
adc
adc
cltd
mov
incb
repz
loopne
insl
or
das
xlat
sarl
test
lds
xchg
xchg
das
in
call
add
stos
cs
sti
or
das
xchg
in
mov
fiadds
inc
push
cmp
jne
arpl
jmp
xor
sub
insl
push
jne
sub
or
adc
pop
sahf
outsl
lahf
dec
jns
outsl
jp
pop
std
ljmp
push
jp
add
clc
pop
dec
loop
sub
arpl
jg
incl
cwtl
div
ja
imul
int3
mov
add
stos
pop
xor
xchg
sahf
iret
push
std
decl
stc
das
rolb
jge
jae
or
xor
call
adc
mov
xor
or
mov
mov
sbb
add
aam
outsb
pop
jecxz
jmp
scas
inc
push
movsb
xor
stos
insl
add
stc
push
es
arpl
push
mov
idiv
das
pop
push
xchg
cmp
xchg
outsl
ljmp
das
push
out
mov
or
and
imul
insl
leave
sar
cmpsl
mov
adc
jmp
inc
or
jns
cld
or
xlat
mov
xor
nop
push
incl
inc
cwtl
add
repz
sub
or
das
lret
mov
ficoms
sahf
stos
push
test
mov
push
mov
pop
adc
rcl
dec
fsts
es
add
call
inc
hlt
and
repz
add
sbb
in
aas
icebp
mov
das
clc
jns
insb
stos
dec
in
xor
bnd
shlb
xor
shlb
lret
pop
ljmp
pop
scas
inc
add
xor
lahf
imul
push
lcall
lret
in
ljmp
cli
pushl
xchg
div
scas
jne
mov
shrl
int3
dec
pop
dec
lahf
push
push
repnz
pushl
ja
and
pop
sub
test
add
mov
cld
fidivrs
adc
scas
in
inc
bound
sub
jp
mov
xchg
sbb
ljmp
scas
mov
pop
sbb
ret
mov
popa
mov
sbb
ret
popf
cmp
shrl
mull
pop
mov
inc
push
daa
sbb
outsb
inc
cli
jg
sub
sahf
and
loopne
adc
adc
xchg
fdivr
decl
pusha
sbb
scas
in
dec
mov
or
xor
push
sbb
push
rolb
pop
stos
jecxz
cmpsb
in
adc
dec
fiadds
mov
mov
mov
sbb
stos
and
xor
fdivs
jo
lods
cli
and
pop
cmp
mov
call
xchg
mov
mov
adc
int3
arpl
pop
push
test
fcmovu
mov
aas
dec
pusha
loop
jmp
mov
jmp
int3
jne
sbb
lcall
insb
out
jo
inc
pop
stos
ljmp
je
pmaddwd
mov
jmp
loope
jmp
aad
inc
jbe
jmp
jg
lcall
test
icebp
in
jb
sub
fsubr
add
stos
pop
pop
push
cmp
das
pop
mov
push
icebp
dec
mov
loopne
lds
jg
adc
inc
cmp
mov
jbe
mov
or
cmp
lods
nop
cli
add
sahf
inc
mov
or
mov
in
fsubl
xor
aam
adc
push
int
stos
cmpsb
sub
loopne
sub
bound
lods
cmp
ja
testb
adc
cs
mov
in
scas
and
mov
rcll
out
clc
sub
pop
sbbl
mov
mov
ds
inc
fwait
incl
cld
mov
loop
dec
or
ret
notb
imul
push
lea
add
cwtl
lret
mov
scas
mov
popa
popf
and
jg
ljmp
xchg
dec
add
jg
push
pop
xor
mov
dec
xor
mov
inc
pop
jae
leave
out
lods
mov
rcrb
inc
jecxz
repnz
xor
lcall
mov
bound
and
jo
mov
jp
add
popf
das
loop
incl
or
jb
ja
cli
fucomp
lods
aaa
lcall
outsb
ffreep
in
add
push
icebp
jne
cmp
enter
icebp
xchg
push
sbb
mov
nop
out
lcall
cmp
push
loope
mov
lock
pop
xchg
iret
push
lcall
fucomi
and
adc
fnstcw
mov
out
ja
inc
push
dec
ds
inc
ja
xor
pop
xor
or
jb
cli
insb
xlat
jo
jae
sub
jo
sar
decl
mov
ret
es
cli
push
sub
out
mov
cmp
ljmp
pop
lods
and
adc
mov
fcoms
enter
push
aam
arpl
mov
fcomip
call
rorl
shl
xlat
scas
stos
out
sub
cmp
push
inc
call
mov
lahf
cmp
cs
pop
je
dec
ret
ficompl
mov
cmpsb
das
js
lcall
xchg
jge
push
xchg
out
and
xor
cltd
push
inc
xchg
cmp
push
fstl
ljmp
pushl
fs
fidivl
and
aad
or
frstor
std
mov
sti
pushl
std
sarb
roll
fwait
add
sub
enter
pop
pushl
std
incl
cwtl
aaa
jnp,pn
push
pop
mov
lret
add
xor
add
lcall
cmp
addr16
push
stc
mov
or
cmp
jae
push
xchg
or
pop
loopne
push
jecxz
xor
inc
sahf
fs
cwtl
aad
pop
leave
stos
js
aad
jmp
js
stos
push
pop
push
jle
push
popf
out
sub
push
into
lods
add
icebp
out
and
call
push
aaa
pop
test
lahf
add
inc
mov
stos
xchg
cmpsb
into
and
aas
jnp
jnp
xor
sbb
jmp
rcll
data16
jge
pop
pushf
cwtl
push
cmc
mov
mov
decl
mov
psllq
mov
xor
cmp
xor
ljmp
sti
sbb
mov
repnz
cmp
fildl
mov
std
mov
imul
clc
adc
jnp
push
push
add
popf
sub
stos
into
sbb
ljmp
loop
xchg
sbb
mov
in
mov
fists
flds
pop
es
idivb
fwait
push
cmp
or
jbe
lea
mov
push
jno
out
cltd
jns
cmpsl
imul
push
idiv
adc
dec
lcall
push
sbb
mov
adc
icebp
pop
xorl
leave
daa
repz
clc
xchg
push
fcomip
push
dec
cld
pop
mov
and
mov
lds
jg
mov
cmc
xchg
mov
mov
inc
mov
sub
out
mov
cld
pusha
loopne
repz
adc
pushl
sub
loope
or
test
mov
push
and
out
jmp
mov
incl
jecxz
add
adc
outsb
ficoml
out
dec
cmp
cmp
jo
dec
mov
xor
xlat
mov
pop
jne
pop
insl
out
adc
out
rol
aam
insl
mov
sbb
mov
or
jbe
inc
and
pop
cltd
pop
xchg
mov
jp
out
outsl
es
xchg
jmp
test
insl
daa
dec
jmp
fstps
cmp
test
movsb
sbb
das
add
call
pop
das
pop
and
insl
andl
push
cmp
mov
push
decl
push
faddp
jb
mov
jae
jecxz
jl
push
dec
adc
or
adc
fsubrs
es
fstenv
data16
in
add
sbb
push
sbb
ret
repz
xchg
enter
add
mov
pop
mov
mov
dec
mov
ljmp
cmpsb
inc
addr16
andl
idivl
add
insl
mov
scas
call
jmp
or
add
xor
fcomps
add
fs
cmc
test
icebp
mov
std
incl
push
fs
addr16
cmp
loop
mov
mov
push
jbe
aas
popa
mov
sub
into
mov
imul
cmpsb
pop
mov
cmpsb
cwtl
mov
incl
fnsave
add
jne
enter
out
les
lea
sub
jmp
mov
mov
in
jmp
shrl
popa
sbb
xchg
test
lret
mov
loop
xchg
jge
xor
jnp
mov
jl
mov
lret
cmp
fwait
push
pop
cmp
sbb
inc
arpl
sbb
scas
pop
aam
push
xor
mull
pop
test
inc
stc
adc
ss
adc
addr16
pusha
insb
push
pop
jae
outsl
push
ljmp
fucom
movsl
pop
dec
xor
push
adc
js
sbb
push
inc
shll
add
int
or
sbb
xchg
dec
mov
mov
hlt
mov
es
or
pop
fadds
or
xchg
pop
icebp
data16
jo
mov
mov
aaa
xor
out
cli
popa
rcrb
stos
push
out
sub
dec
frstor
jle
sarl
pop
dec
lock
incb
ljmp
mov
xchg
test
push
ds
mov
mov
lcall
scas
add
xchg
inc
inc
cmp
adc
imul
lea
cwtl
fs
jg
fcmovnu
mov
in
lcall
inc
std
aam
out
jne
sbb
cmc
imul
neg
push
add
sub
ja
push
pusha
mov
cmc
mov
stos
push
and
dec
push
xchg
enter
scas
inc
pushf
push
pop
jne
lcall
icebp
arpl
sbb
jb
push
cwtl
mov
pop
in
adc
out
push
mov
fbstp
inc
jmp
mov
cmp
push
sbb
and
and
push
inc
inc
popf
icebp
fisubl
sbb
push
pop
dec
mov
out
subb
les
pop
scas
movb
mov
xchg
xchg
xchg
ffree
adc
xchg
push
decl
cmpsl
cltd
xchg
shlb
mov
cld
out
enter
xlat
aam
mov
dec
jmp
or
pop
movsl
jge
mov
cmpsl
icebp
jecxz
fnsave
fcomp
mov
or
in
or
cmp
add
cmova
or
and
icebp
mov
and
sub
push
pop
pop
cmc
stc
incl
jne
xchg
sub
popa
xor
decl
xchg
xor
js
push
fldt
js
sarl
push
mov
cli
das
data16
xchg
mov
aaa
out
jnp
lret
mov
sbb
aaa
cld
cld
mov
and
test
mov
negb
movsl
dec
jecxz
fs
jge
call
stos
add
std
push
loopne
lods
sub
fbstp
das
cli
incl
rcrl
add
outsl
rolb
in
push
pop
push
sub
lret
shll
inc
loop
mov
out
xor
mov
cmp
mov
mov
jg
and
out
mov
sub
frstor
push
gs
pop
loopne
pop
and
sahf
ret
dec
ret
pop
or
shrl
xchg
mov
mov
clc
clc
rcrl
jmp
jmp
aaa
out
mov
xor
rcll
data16
call
jb
andl
stc
fisubrl
pushf
jmp
lods
pop
lds
mov
push
iret
fwait
pushl
mov
sub
xorb
aaa
je
fadd
clc
rcll
pushf
movl
mov
inc
inc
pop
gs
cmp
push
mov
cli
movsb
in
mov
jecxz
pop
jp
push
xchg
dec
mov
or
adc
jo
xor
or
shll
and
add
push
adc
adc
xor
aam
jl
adc
xchg
dec
in
bound
and
cli
scas
lea
lea
xchg
fnstsw
and
add
lods
mov
cmp
test
mov
mov
mov
fsubr
insb
inc
jle
testl
aaa
bound
ljmp
adc
cli
push
andb
adc
daa
mov
pushf
push
clc
int3
jae
decl
inc
test
sbb
jl
sti
sbb
iret
dec
xchg
gs
jmp
ds
pop
fs
mov
mov
call
fcoml
insl
jae
xchg
cmp
dec
xor
mov
fsubrp
jno
xchg
int
leave
enter
push
add
mov
cltd
sbb
mov
cmp
incl
addr16
fwait
mov
xchg
into
jae
cmpsl
hlt
aas
in
pop
fistl
pop
fwait
scas
xor
jmp
cli
push
ret
sub
aam
dec
loop
cmp
in
fnstsw
xlat
and
inc
push
adc
jnp
iret
mov
das
inc
in
scas
or
and
dec
pop
mov
mov
push
bound
pop
cmpsb
fisttpll
inc
jo
sub
mov
xor
push
lcall
sbb
sbb
dec
pop
fiaddl
pop
lock
mov
repnz
test
imulb
into
pop
push
and
popf
fildl
incl
sub
fldl
pusha
sahf
sub
enter
addr16
clc
xlat
lcall
sub
dec
incl
mov
insb
repz
mov
mov
mov
stos
jg
and
and
aam
dec
sbb
add
fcompl
movsb
push
mov
call
push
pusha
xchg
cmp
hlt
xchg
lock
rclb
lahf
aas
int
mov
xchg
cmc
dec
jecxz
lcall
mov
xchg
adc
and
inc
enter
and
jmp
mov
es
xchg
outsb
mov
inc
sub
xor
pop
psubsb
add
lods
sbb
jbe
inc
adc
ljmp
outsb
cmp
lock
adc
aam
shl
andnps
rcrb
jmp
or
sbbl
xor
rol
pop
cmp
mov
push
mov
xlat
movsl
ljmp
movsb
nop
mov
push
mov
fildl
inc
cmpsb
add
or
push
test
push
outsb
push
ret
imul
cmp
leave
sub
cmc
jl
jno
rolb
push
or
out
jae
pop
data16
lcall
orl
xchg
mov
cs
push
lods
dec
jmp
notl
adc
call
push
ror
inc
mov
cmp
call
and
jmp
push
in
movsb
stos
xor
xchg
mov
or
fsubrs
repnz
push
mov
and
dec
jns
jl
loope
std
sub
jb
or
xchg
inc
cmp
push
ja
push
xchg
inc
pop
into
lahf
rclb
lret
cltd
mov
adc
pop
hlt
push
je
and
icebp
call
std
ljmp
push
aam
inc
mov
inc
call
cmp
ljmp
into
sub
and
outsb
stc
lret
lods
int3
sub
adc
imul
sar
ljmp
mov
rcll
cmc
call
inc
je
das
xor
ljmp
clc
jmp
jns
cmc
mov
cmc
xchg
loop
jl
push
ficoms
cwtl
in
cmp
jae
mov
jmp
or
sbb
cs
or
dec
addb
xorl
aam
jmp
lahf
jno
xor
outsl
lret
fsts
mov
mov
mov
out
push
nop
movsb
call
pop
dec
dec
jo
mov
insl
ds
outsl
cmp
mov
stos
stos
aam
pop
and
inc
adc
dec
clc
jb
cs
xchg
sbb
aas
pop
sarb
jle
fsubrl
sbb
mov
ds
test
sti
adc
pop
sub
test
jo,pt
inc
sti
cmp
mov
andb
and
inc
insb
mov
sarl
xchg
add
dec
dec
mov
mov
add
or
pop
cmpb
add
insl
pop
dec
inc
test
jmp
lahf
loop
dec
add
and
fistpl
into
jmp
imul
inc
cwtl
loop
cmp
je
lcall
orl
cmc
fcoml
mov
add
xor
sub
ljmp
stc
cmp
cs
bound
inc
cmp
xchg
int3
xor
les
pop
fcmovnu
sahf
bnd
scas
decl
jmp
mulb
cwtl
lcall
jge
into
jns
lock
movsb
aaa
insl
addr16
decl
pop
bound
out
xor
jne
fs
mov
pushf
sub
repz
aam
hlt
push
loope
push
std
mov
xchg
fcmovnbe
call
pop
mov
ljmp
push
inc
lods
cmp
mov
adc
cmp
jecxz
mov
mov
out
add
loopne
xor
in
xchg
iret
fildll
sub
int3
jmp
js
test
into
mov
lcall
mov
cltd
mov
dec
ds
cmp
add
loop
test
add
cmc
aaa
divb
test
outsb
dec
push
push
sbb
rcl
pushl
jnp
je
repz
loopne
mov
dec
test
leave
movsl
pushf
mov
pop
daa
mov
or
pop
fcomi
sbb
and
in
jp
sub
add
push
ja
std
fs
adc
xlat
xor
out
sub
imul
fildll
outsb
movsl
mov
fdivl
dec
out
fwait
data16
xchg
icebp
ret
not
movsb
mov
sbb
sysenter
popf
jb
pop
outsl
mov
mov
bound
jo
dec
cld
lds
insb
jg
in
or
sub
adc
aad
add
mov
stc
aaa
inc
clc
sub
pop
cmp
loop
dec
pushl
push
and
inc
test
out
push
repz
xor
in
mov
or
and
outsl
sub
shrl
shlb
sub
sahf
sahf
xchg
fisubl
enter
cmova
pop
xchg
jb
inc
repnz
inc
jmp
inc
or
ljmp
mov
push
das
jg
out
add
cmpl
aaa
xor
ljmp
mov
sub
pop
iret
sub
aad
mov
mov
push
xchg
jp
add
dec
dec
cmp
lcall
adc
ret
test
inc
and
inc
ljmp
push
fstpl
dec
add
sbb
add
imul
jne
fnstenv
xor
jmp
or
or
jns
add
pop
jl
inc
push
fisubs
dec
xlat
xor
sub
and
mov
push
or
hlt
fwait
loop
lods
push
ret
sub
xor
pop
lahf
test
sub
stos
fdivp
adc
pop
add
pop
and
pushl
pop
cmpsb
lahf
scas
movsl
adc
pop
cmp
jl
pop
call
negb
jns
test
pusha
adc
push
lcall
push
cmp
mov
jae
xchg
stos
pushf
jnp
xlat
shll
jl
movsl
mov
lds
in
clc
jmp
push
inc
push
inc
mov
loopne
push
inc
fdivr
loopne
dec
inc
std
mov
or
add
pusha
add
fucomi
mov
add
add
mov
push
or
pop
pop
push
or
or
or
or
or
adc
fwait
dec
xor
adc
push
adc
faddl
or
cmpsb
adc
adc
adc
add
data16
loopne
in
or
rolb
or
add
add
sahf
add
les
add
adc
push
std
inc
mov
push
cmpsb
loopne
jb
imul
ds
incl
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
dec
xor
bound
js
dec
xor
mov
cmp
dec
pop
sub
pop
ss
mov
mov
lods
or
adc
fwait
cmpl
popa
add
add
cmp
add
adc
mov
ja
adc
push
or
call
inc
push
pop
popa
jno
and
adc
mov
or
sbb
xor
adc
loope
icebp
mov
adc
sbb
mov
mov
xor
add
roll
stos
js
or
sbb
std
or
incl
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
sar
pushl
lahf
mov
movsl
jecxz
cli
pop
mov
xor
or
jg
or
in
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
cld
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
ja
sbb
mov
push
pop
mov
pop
pop
mov
inc
pop
movb
decl
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
decl
dec
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
cld
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
fdivr
decl
hlt
and
xchg
jmp
sbb
das
mov
out
pop
jb
mov
or
push
xor
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
dec
rcrl
stos
hlt
push
add
stc
loope
mov
sar
push
mov
fildl
icebp
testb
mov
lcall
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
decl
sbb
cld
andb
outsl
sbb
jb
adc
push
push
movsl
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
outsl
fcmovne
andl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
sahf
fisubs
or
dec
fisttpll
out
aas
std
cli
push
push
ljmp
outsb
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jg
mov
imul
pusha
adc
and
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
ljmp
sbb
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
mov
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
jg
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
adc
xchg
and
push
push
jo
pusha
imul
add
mov
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
pushl
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
lock
cmp
fmull
enter
jecxz
scas
incl
in
pop
mov
sub
mov
dec
incb
fisubrl
loopne
sti
lds
mov
or
cld
inc
or
bound
repnz
jg
mov
aad
jbe
test
mov
mov
iret
push
out
jbe
push
sbb
stos
icebp
pop
incb
jno
outsl
sti
ljmp
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
mov
sar
xorl
push
fisubrl
imul
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
jle
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
mov
iret
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
lock
insb
test
lock
repz
sbb
lock
in
jmp
out
jmp
mov
clc
push
std
mov
or
lods
out
jne
or
lcall
push
stos
dec
push
mov
fsubrp
dec
sahf
enter
fcmovu
dec
cld
inc
inc
adc
inc
loopne
test
out
rolb
pop
or
cli
loop
cld
or
dec
ss
lods
movsb
ret
call
fimuls
repnz
mov
jl
inc
lock
call
cmpsl
lret
fwait
stos
jle
pop
in
cmp
jmp
mov
mov
mov
jmp
hlt
dec
mov
xlat
fdiv
jg
inc
aas
mov
jg
mov
sub
addr16
incl
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
cmc
mov
jg
ja
nop
cmp
das
incb
lock
pop
pop
div
add
push
loop
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
adc
je
jge
fbstp
xchg
add
out
f2xm1
aas
inc
icebp
mov
loope
mov
cmpsl
popf
lds
aaa
cld
sti
mov
fbstp
push
dec
outsl
das
jge
mov
inc
add
cmpsb
cmp
call
mov
iret
decb
adc
mov
inc
sbb
and
call
xor
pop
add
bswap
and
inc
add
xor
aaa
std
fisttps
sbb
and
sbb
xchg
cmpl
jle
icebp
ret
ror
sbb
mov
or
inc
adc
icebp
push
jno
shrb
mov
pop
clc
loope
loope
mov
std
push
rorb
jp
dec
add
xlat
push
sbb
and
imul
push
cmp
repz
jecxz
pop
gs
out
push
dec
into
sarl
pop
out
jg
jno
ret
and
cmp
or
sbb
inc
push
dec
jge
jmp
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
call
outsl
jmp
sub
lcall
std
mov
daa
jmp
faddl
mov
inc
add
fisttps
div
pop
stc
push
dec
out
fstpt
cmp
mov
mov
enter
ljmp
jg
xchg
jl
add
sti
push
sti
pop
inc
xor
sbb
push
push
push
push
mov
test
addb
adc
and
outsl
mov
mov
add
out
movsb
mov
add
mov
add
incl
mov
jae
or
push
repnz
jo
mov
jg
add
sbbb
jg
ss
enter
dec
pop
dec
orb
push
add
and
mov
adc
pop
inc
or
sub
dec
fs
movq
loop
ss
add
nopl
dec
mov
scas
dec
fsub
test
popf
mov
stc
jno
mov
jnp
xchg
movsl
push
daa
add
cmpsb
mov
and
cmpsl
push
and
cs
push
add
push
movsb
inc
scas
push
out
and
stos
push
and
push
test
and
imul
mov
sbb
pop
add
mov
cld
repz
mov
sbb
inc
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
mov
arpl
imul
push
leave
imul
imul
into
mov
jbe
fnstenv
fdivs
cmpsl
fldcw
stos
pop
stos
mov
mov
fbstp
jbe
add
jo
mov
push
shll
add
outsl
push
shll
push
fidivrl
iret
outsb
or
push
cs
adc
jns
out
jge
fisttps
fists
xorb
ljmp
movsb
push
add
mov
or
jae
shlb
mov
pop
rorl
out
push
push
push
add
jne
push
aam
jle
push
add
mov
sub
ss
pop
dec
add
pop
neg
sbb
data16
inc
xchg
fnsave
add
push
push
shlb
lret
fcmovnbe
cmp
stos
aas
add
ja
push
mov
xlat
jne
add
ja
push
pop
mov
sub
xlat
ja
js
push
xor
push
jp
inc
push
call
jnp
sarl
ja
sub
push
fldl
ret
jmp
mov
adcb
xchg
sub
xchg
in
xchg
sub
push
pop
cs
xchg
xor
xchg
push
setbe
xor
ss
xlat
mov
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
out
fimull
mov
mov
pusha
add
fadd
add
cld
out
out
repz
repz
hlt
clc
stc
cli
sti
ret
iret
cld
std
incb
jecxz
arpl
int3
data16
inc
jae
add
imul
cltd
push
add
pop
add
pop
add
push
xor
jb
bound
mov
cmpb
add
add
push
mov
add
add
and
mov
pop
or
test
test
jge
stos
cmpsl
or
push
sbb
pop
cmp
pop
adc
adc
pusha
int
adc
and
lods
pop
mov
fcmovne
push
scas
add
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
or
push
pop
scas
sbb
scas
scas
scas
enter
scas
sbb
mov
mov
enter
and
out
pop
push
mov
push
sbb
and
or
and
mov
lcall
and
dec
push
and
adc
pop
incb
int
sub
daa
stc
lret
mov
and
mov
adc
push
or
xor
xchg
push
add
pop
aas
cmp
in
or
mov
cmp
push
mov
add
mov
pop
xor
pop
addr16
add
out
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
xor
aaa
in
std
xor
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
incl
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
addr16
pushl
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
add
pushf
fwait
lcall
int
decl
test
xchg
xchg
sub
dec
ja
jns
dec
outsl
fwait
push
jle
bound
js
imul
cmp
je
push
push
add
cwtl
dec
rclb
mov
addb
fdivrs
lsl
xor
scas
aas
adc
or
out
jg
jle
xchg
pop
push
dec
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
ja
dec
mov
cs
xor
mov
ja
sti
jge
push
push
add
mov
and
push
mov
xchg
jo
push
inc
mov
cmp
sbb
jecxz
mov
mov
jmp
sti
jae
xchg
jp
inc
push
popf
inc
mov
aaa
add
xchg
jno
fcmovnbe
jle
lret
push
bound
mov
mov
adc
out
cmp
push
sahf
mov
fbld
push
add
pop
into
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
pop
mov
cmpsl
push
movsb
jae
add
jb
shll
outsl
mov
xlat
pushf
push
pop
add
fwait
imul
testl
add
cltd
insl
outsb
mov
dec
fdivrs
sti
push
add
ja
sahf
jbe
fistpl
imul
notb
outsb
ds
push
add
and
es
js
outsb
testb
mov
shrl
insb
mov
outsb
push
outsl
ror
push
ds
cld
lret
add
push
jg
fiadds
fcmovnu
mov
call
mulb
mov
in
adc
es
bound
out
arpl
fistl
data16
jb
jae
mov
out
in
push
jle
or
jecxz
or
jle
fnstcw
aad
push
divb
fildl
adc
lcall
addb
push
sbb
sbbl
test
test
sbb
test
fildl
push
xchg
nop
and
pusha
out
shr
in
xchg
lock
sub
sub
fwait
testb
xchg
das
push
xchg
repnz
insb
insl
mov
push
cmc
sahf
xor
lcall
sbb
mov
mov
or
aam
jle
push
cmpsb
scas
jo
test
sub
ret
shrb
into
shll
lgs
int
mov
mov
mov
or
sarl
push
aad
jle
data16
add
add
push
dec
and
add
sbb
add
mov
mov
fstpt
out
femms
or
or
or
es
testb
filds
adc
push
add
add
fisubrl
in
sbb
add
mov
adc
sbb
xchg
push
mov
and
sbb
add
jle
mov
add
and
jle
mov
loopne
ds
mov
aas
and
sub
xor
lcall
or
nop
cmp
cmp
or
mov
pusha
adc
inc
jbe
orl
inc
inc
jle
cmp
scas
xor
dec
mov
mov
aas
adc
ds
xor
dec
inc
test
fiaddl
cmp
mov
ds
add
adc
ds
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
idiv
cld
add
test
mov
sahf
adc
daa
sub
sub
sub
sub
in
pushl
dec
and
inc
mov
push
push
push
push
push
imul
ljmp
push
push
pop
push
push
push
imul
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
mov
je
xchg
jns
jle
addl
rcll
hlt
jo
outsb
pushf
sti
dec
pusha
imul
rolb
aaa
inc
enter
add
add
pop
pop
mov
or
jl
push
add
cmc
repz
dec
xor
mov
add
xchg
pop
dec
lret
sar
add
mov
add
pushl
add
push
fnstsw
repnz
mov
fs
addr16
add
pushf
add
mov
popf
add
ret
push
in
lcall
or
mov
fdiv
push
or
jae
js
pop
into
xchg
add
mov
mov
test
scas
insl
ljmp
mov
out
es
nop
sub
mov
addr16
push
nop
sub
xchg
xor
xchg
xor
mov
fcmovnu
xchg
outsb
lcall
leave
jbe
idivl
fidivrl
shlb
iret
push
lret
push
test
std
into
adc
mov
imul
insb
ss
lods
xchg
add
test
jg
jle
jge
adc
sar
bswap
adc
dec
dec
dec
jmp
dec
dec
dec
add
pop
add
push
dec
or
adc
pop
in
cmp
adc
dec
or
add
push
jl
aas
jbe
dec
inc
add
or
pop
pop
cmovg
jle
stc
addb
inc
and
dec
and
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
aaa
inc
add
aas
cmp
cmp
daa
and
sbb
jg
mov
and
add
dec
ss
xor
sub
sub
push
mov
sub
add
mov
pop
and
xor
ss
and
outsb
mov
push
mov
mov
pop
roll
pushf
sbb
outsl
mov
push
cmpsl
pop
mov
incl
orb
inc
jmp
aaa
movsb
xlat
sbb
mov
adc
incl
outsb
sysret
add
andb
dec
ret
jg
ds
or
inc
jb
dec
in
lock
push
or
pop
hlt
xorps
push
inc
and
jg
add
pop
aaa
outsl
inc
andb
int3
ret
sahf
jg
push
lds
add
and
jg
pop
shrl
cli
mov
cli
mov
pop
adc
adc
pop
jg
cmpl
inc
test
inc
mov
sti
jg
adc
das
sti
mov
pop
jb
cli
jle
fsts
sbb
inc
dec
sti
jg
or
add
and
mov
mov
and
cmp
mov
cld
jg
add
sub
inc
loopne
jle
inc
add
in
cmpsb
std
ja
jg
adcl
jg
inc
dec
sbb
pop
enter
jg
jle
pop
adc
add
data16
sub
incl
push
sub
xchg
mov
dec
xor
incb
arpl
data16
push
test
mov
adc
add
pusha
xor
jg
push
mov
sbb
jbe
fsubs
pop
add
jmp
xor
sbb
sbb
test
xchg
inc
mov
in
jle
adc
repnz
imul
addr16
add
stos
push
add
push
jg
pop
add
jno
mov
andl
sbb
push
jg
shlb
inc
rorb
jg
sub
pusha
adcb
add
inc
jg
decl
sbb
pop
or
mov
jle
mov
fdivrp
cmpsb
ljmp
pop
push
stos
pop
stos
pop
pop
insl
fcmovnb
ficomps
pop
daa
aas
aaa
pop
mov
add
add
js
shrl
aaa
add
xor
push
or
sbb
push
pop
jle
push
dec
xlat
dec
testl
push
mov
popf
mov
daa
inc
insb
fcmovnu
push
arpl
pop
shlb
sbb
push
mov
inc
out
mov
dec
push
dec
lcall
or
inc
notrack
aaa
daa
scas
dec
je
ds
rclb
inc
jle
jle
call
or
jmp
fnsave
idiv
fnstenv
add
push
jne
enter
pop
push
jbe
out
test
insl
push
jnp
push
jp
fdivrs
fisttpl
js
dec
jbe
pop
add
out
pop
xlat
lea
es
daa
fs
push
outsb
xor
push
ljmp
jle
jae
popf
rorb
inc
outsb
inc
test
mov
scas
ljmp
xchg
out
test
int3
ja
test
inc
cmpsl
xchg
mov
and
fiadds
mov
xor
push
mov
mov
push
sahf
inc
out
int
fstps
mov
xchg
insb
fwait
aas
popf
inc
push
pushf
cmp
dec
enter
cltd
mov
xchg
xor
xchg
xor
sub
sub
or
ss
cs
xchg
ss
mov
xor
test
push
call
mov
incl
jg
pop
fnsave
loopne
lcall
pushf
rolb
sahf
movb
xchg
pusha
enterw
dec
or
insl
cs
add
rclb
dec
xchg
push
int3
push
xchg
movb
xor
aaa
stos
test
clc
mov
add
add
xchg
push
mov
push
addb
fadd
mov
add
mov
sub
addr16
adc
push
adc
pop
push
and
repz
orl
jns
mov
ficomps
inc
and
cmp
lock
sbb
outsb
dec
cmp
cmp
icebp
fdivrp
and
imul
add
stos
sbb
incl
out
pop
in
push
inc
idiv
mov
mov
pop
sbb
mov
push
sbb
xor
test
in
inc
or
hlt
cmpsb
testl
and
add
cmp
addb
fcmovb
add
pop
xchg
sbb
inc
pop
lcall
or
mov
sub
or
addr16
daa
cld
pop
das
or
mov
cld
call
ljmp
xchg
std
out
mov
popl
lcall
or
mov
mov
push
fdivr
ds
lods
xor
xchg
incl
fadds
incl
fmuls
out
ljmp
sub
decb
push
xor
adc
incl
sbb
sub
xor
cmpsb
scas
ljmp
xchg
cmp
decb
mov
jno
add
fmull
xor
incl
mov
punpckhwd
pop
lcall
incb
mov
xor
addb
sysret
out
push
add
ljmp
sub
xor
incl
xor
push
sub
pop
shlb
outsl
sti
push
std
jmp
mov
out
adc
push
rorl
inc
call
cmpsl
bound
add
pop
stc
xchg
faddl
push
call
jg
inc
inc
cwtl
out
cli
mov
fwait
test
jmp
sub
add
sbb
incl
test
push
jmp
ss
sbb
pop
in
insl
fnstenv
pop
movsb
or
insb
aaa
mov
fidivs
mov
push
mov
shll
or
push
dec
sahf
ret
decl
scas
nop
xchg
push
adc
jns
mov
test
lahf
inc
inc
push
inc
cmpsb
pop
cmp
inc
pop
mov
push
pop
sahf
movsb
dec
push
stos
push
popf
dec
out
fwait
inc
cmpsb
dec
dec
inc
cmp
push
cs
dec
mov
and
and
push
shrb
enter
rcl
outsb
shrb
es
xchg
int
push
push
jb
xchg
and
imulb
push
iret
insl
leave
je
cmpsb
pop
daa
outsl
pop
imul
push
and
decl
push
xchg
lcall
xor
pop
add
repnz
movsb
es
jmp
adc
pushf
cmp
aas
decb
cwtl
xor
mov
push
inc
push
xchg
outsl
mov
xchg
push
push
aaa
push
lcall
xor
push
xchg
es
xchg
xchg
xchg
notb
sub
lcall
inc
test
inc
jmp
mov
fimuls
jecxz
add
fidivl
aad
or
faddl
stos
fstpt
push
jnp
jp
or
shrb
addr16
or
jl
push
jge
sbb
es
jbe
adc
fidivrl
dec
int3
push
dec
push
dec
repnz
repnz
jae
pop
fidivrl
clc
outsl
mov
fadds
loope
out
add
in
add
int3
mov
nop
negl
add
sarl
sbbb
mov
sub
push
adc
iret
mov
imul
cmp
jnp
lahf
dec
es
addl
push
sub
sub
filds
add
xchg
out
push
sub
iret
out
aaa
aam
jo
mov
cli
pushl
clc
push
idivl
insb
test
push
jb
sub
dec
mov
out
jg
mov
icebp
dec
pop
cld
fucomp
push
push
daa
jno
sub
jg
adc
cltd
icebp
jg
xchg
mov
daa
jg
mov
jae
repnz
mov
stc
bnd
es
xchg
aaa
in
subl
cmpb
jmp
mov
or
jg
dec
push
sub
lock
dec
and
xor
jge
idiv
lea
push
fsub
test
push
inc
push
int3
mov
jle
mov
fisubl
jne
out
jg
arpl
clc
jbe
and
push
pop
push
pop
aam
in
into
push
pop
or
scas
decl
push
xchg
cld
fists
into
lcall
push
jns
shl
sub
mov
jmp
mov
in
sbb
in
sbb
xchg
mov
pushl
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
push
and
aaa
mov
add
ja
inc
or
aas
xlat
push
cmovno
imul
ja
call
add
add
mov
loope
dec
sbb
movb
mov
lret
movsb
mov
xor
movsl
push
frstor
add
and
adc
repnz
aam
sub
in
mov
push
sbb
lcall
add
insl
jnp
imul
sbb
add
xchg
adc
push
ljmp
add
and
add
nop
dec
inc
push
and
test
clc
cwtl
dec
inc
pop
js
inc
insb
outsl
push
daa
sub
dec
scas
add
mov
test
add
and
add
pop
xor
inc
imul
js
push
idivb
push
outsl
outsl
insb
push
push
outsb
popa
jo
push
xchg
and
adc
leave
into
adc
jne
push
outsb
je
dec
fs
pop
mov
add
mov
out
fimuls
lods
jns
inc
adc
fldenv
arpl
push
xorb
mov
mov
imul
jns
sbb
pushf
inc
out
or
mov
loope
lods
mov
inc
dec
jmp
iret
cmp
push
popa
roll
sbb
lock
add
fsubl
xor
imul
into
jns
jns
insl
inc
xor
outsl
rclb
or
push
dec
ret
adc
je
les
inc
xor
mov
ret
lret
imul
int
dec
mov
pop
aaa
sub
jmp
loopne
cmpsl
inc
call
add
mov
add
adc
add
ja
in
sbb
xor
cmpsb
enter
push
addr16
mov
mov
jbe
xorb
cmc
dec
bound
jae
jb
push
imul
popw
mov
fcmovnb
sbb
jbe
xchg
jno
and
jae
jbe
adc
push
addb
push
sbb
jo
fsubs
inc
test
sbb
lock
pop
insb
jne
sbb
pop
mov
xchg
cmp
sbb
xor
push
ss
test
fnstsw
push
push
ja
outsl
imul
je
ja
fs
push
imul
push
dec
dec
cmp
fnstsw
inc
jae
adc
dec
push
push
push
outsb
lret
cmp
test
jecxz
sarl
cmp
adc
lods
jae
or
ret
mov
dec
push
adc
mov
es
ficompl
fists
test
jl
add
lock
cmc
notl
adc
stos
jae
mov
lods
dec
xor
arpl
das
andl
xchg
int
sub
mov
push
pop
mov
les
sbb
xor
add
lods
out
inc
mov
jl
fisttpll
and
inc
add
in
popa
fcomi
clc
dec
inc
dec
add
inc
push
and
iret
adc
out
jb
mov
scas
fsubl
addr16
jb
cmp
xor
je
lock
in
out
xor
inc
mov
push
insl
pop
push
leave
loopne
or
jne
and
xlat
adc
rol
and
in
aad
cwtl
cmp
rcll
or
iret
lods
sbb
dec
or
sbb
push
xor
push
mov
insl
xchg
sbb
sbb
notb
dec
and
inc
jne
sub
lahf
cmp
xor
xchg
cmp
and
pop
or
push
adc
xor
dec
outsl
jns
mov
xor
ret
inc
xlat
push
mov
dec
ljmp
insb
push
xor
push
sub
lods
jae
push
loope
pop
sub
cmp
scas
popl
pop
mov
pusha
hlt
and
popf
mov
xor
repz
dec
outsl
pop
sbb
loope
lock
popf
repz
ds
pusha
push
add
mov
xor
fsts
xor
xchg
iret
sahf
adc
andb
ret
std
sbb
popa
mov
dec
sub
mov
insl
daa
sti
mov
xchg
dec
jne
jo
sbb
cmc
lds
rolb
leave
jae
xor
pop
dec
scas
and
mov
clc
aaa
movsl
pop
mov
and
pusha
iret
movsl
scas
js
fcoms
pop
repz
dec
dec
pop
movsl
aaa
inc
inc
jno
sbb
loope
jbe
rcrb
jne
inc
or
add
or
push
dec
push
inc
aas
pop
dec
gs
int3
mov
push
pop
push
xchg
and
clc
mov
inc
arpl
push
xchg
mov
sbb
pop
ret
or
int3
ret
pop
sub
mov
imul
inc
push
jl
adc
mov
enter
xchg
add
jae
ret
jge
pop
aas
out
and
ret
loop
inc
loop
mov
jne
gs
test
lret
mov
arpl
insl
sub
sbb
rcrb
sbb
outsb
add
or
jne
push
jns
inc
out
insb
cmp
rcpps
cs
or
fimuls
imul
add
inc
fists
test
push
mov
sbb
shrl
or
mov
ret
push
outsl
fiaddl
mov
jbe
cmpsb
jge
fwait
pop
xor
jbe
adc
stc
adc
xor
aad
xchg
pop
pop
jne
jns
push
sarl
mov
push
and
cmp
les
jae
test
std
mov
xor
pushf
jge
add
inc
dec
push
push
pop
xor
and
pop
mov
adc
add
fisubrs
inc
push
push
adc
lea
add
xchg
mov
outsb
dec
stos
xor
pop
add
adc
rcrl
in
xor
popa
xchg
lret
addr16
js
mov
mov
int3
add
pop
add
add
sbb
mov
lcall
add
or
dec
shll
or
push
adc
xor
shll
sub
xor
jl
push
es
jo
loopne
cmp
loop
sbb
adc
shlb
insl
loopne
inc
and
jmp
movsb
mov
and
in
push
dec
arpl
fidivl
dec
push
outsb
sub
inc
push
mov
sub
fidivl
sbb
inc
cmp
dec
imul
jmp
jge
push
sbb
inc
insb
scas
scas
enter
push
xchg
dec
stc
subl
jb
xlat
out
sbb
sub
ret
mov
xchg
les
inc
push
adc
sbb
add
push
inc
mov
and
adc
lcall
and
push
mov
aam
xor
cmp
repnz
popf
rolb
leave
mov
jmp
je
fdivp
xchg
nop
push
pop
andl
sti
imul
xor
xor
and
adc
jle
imul
movsb
and
insb
sub
push
cwtl
mov
ret
inc
js
in
pop
lret
inc
insb
orb
xor
sub
mov
lret
adc
fmuls
decb
pusha
dec
rcrl
xor
lods
adc
cs
movsl
dec
sub
arpl
repz
adc
insb
movaps
mov
pop
addr16
insb
mov
jbe
add
inc
pop
mov
lods
outsb
jbe
mov
push
cmpsl
addr16
popa
adc
mov
nop
fists
and
xchg
push
addr16
dec
insl
xchg
and
push
ret
inc
push
adc
movsb
push
sub
sub
xchg
loope
loopne
cld
add
movsl
mov
dec
lea
jno
mov
push
mov
movb
shl
inc
sub
jb
inc
shll
inc
push
mov
inc
fs
mov
mov
jns
sbb
test
dec
xor
dec
adc
push
ret
push
mov
push
xchg
orl
outsb
pop
push
jo
pop
and
popa
roll
dec
scas
inc
sub
inc
inc
cwtl
xor
iret
jbe
add
ja
loope
pop
daa
mov
lds
mov
mov
aaa
jp
mov
jae
les
add
xor
or
imul
adc
pop
inc
outsl
mov
push
inc
mov
dec
dec
ja
imul
or
add
xchg
es
sub
adc
sub
inc
adc
push
cmp
ret
dec
sub
outsl
push
cld
or
mov
add
addr16
dec
in
push
push
aaa
das
loopne
or
or
cli
std
mov
daa
mov
js
les
xchg
mov
pop
add
mov
or
or
cmpl
or
mov
and
add
mov
mov
arpl
adc
push
into
cwtl
cs
push
jl
add
insl
ret
xlat
add
and
jb
dec
lock
add
lcall
dec
out
inc
cs
add
or
fidivrs
push
cwtl
push
dec
rcrb
roll
xlat
out
insb
rolb
sbb
mov
and
or
inc
inc
mov
dec
xchg
and
adc
add
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
stc
inc
add
