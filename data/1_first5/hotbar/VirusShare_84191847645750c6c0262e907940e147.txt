fcomp
decl
loopne
inc
add
mov
or
adc
insl
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aam
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jge
mov
mov
sahf
mov
les
int
mov
mov
xor
push
pop
and
fsub
subl
lods
outsb
push
xchg
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
sbb
add
add
xchg
dec
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
stos
es
imul
dec
add
and
rorl
sub
jge
inc
shlb
add
inc
hlt
push
pop
enter
sbb
push
sbb
mov
adc
mov
loopne
inc
mov
add
and
inc
lock
mov
sub
lds
ss
mov
pop
outsb
loopne
ret
inc
pop
jb
fbld
test
jl
sub
push
push
pop
stos
jb
popa
xchg
xchg
sub
mov
add
call
sbb
ss
adc
xor
or
sete
bswap
mov
cmp
push
into
mov
dec
test
mov
stos
loopne
adc
lcall
fdivrs
push
les
add
nop
sub
push
and
je
pusha
mov
add
loopne
mov
add
cltd
leave
xor
stos
js
add
mov
fwait
push
loopne
fldt
les
sub
and
and
cs
sbb
inc
aam
xor
pop
jb
push
push
inc
push
mov
lea
clc
fisubrs
adc
sub
ret
repnz
jbe
add
sbb
sub
mov
sbb
mov
inc
xor
not
sbb
adc
pop
sub
push
mov
and
mov
and
int
push
lea
inc
fdivrp
mov
mov
stos
pop
pop
lods
mov
pop
cmc
cmp
loopne
xor
push
inc
push
dec
dec
push
xor
mov
loope
repnz
out
push
add
and
sub
adc
mov
pop
sbb
movsl
cmp
ljmp
test
clc
mov
sub
add
ljmp
mov
scas
aad
add
inc
pop
xor
cmp
add
and
inc
xor
cmpsl
add
push
xor
pusha
push
mov
sub
add
xor
ja
mov
jbe
ja
test
clc
popf
add
das
add
ret
lea
out
rol
fadd
lock
in
dec
inc
pcmpeqb
ret
out
int3
push
add
call
inc
mov
inc
xchg
mov
fstpl
or
enter
add
push
push
and
add
push
movsb
sbb
inc
hlt
rorl
push
seto
mov
mov
jmp
dec
push
in
sahf
bound
inc
add
mov
xchg
sub
mov
add
popa
dec
mov
inc
je
or
repnz
or
inc
and
dec
or
notl
test
loope
stos
add
push
lea
push
cwtl
lret
or
fisttps
or
fcoml
dec
xor
jge
xor
dec
add
hlt
push
jg
dec
or
jnp
mov
adc
sbb
addl
andb
popf
mov
pop
cltd
push
inc
pop
mov
mov
jmp
pop
sbb
and
cmp
sbb
pop
and
inc
dec
add
in
jne
imul
cmp
mov
punpcklbw
push
es
or
push
add
sbb
mov
cmp
incb
sbb
cmpsl
in
mov
push
pusha
sub
sete
test
test
push
mov
or
and
or
dec
or
xchg
and
or
into
push
iret
adc
adc
pusha
dec
add
insb
pop
int3
xor
xchg
lret
and
push
cmp
test
or
push
test
stos
pusha
lds
mov
mov
mov
cmpl
jne
jo
pop
pop
push
jle
je
or
insb
icebp
and
jne
and
or
orb
lock
adc
aam
jno
leave
inc
adc
or
cmpsl
or
mov
punpckhbw
add
pop
push
push
adc
inc
mov
sub
xlat
scas
push
jo
push
xor
cmpsb
jo
push
ljmp
and
push
clc
rclb
fs
scas
dec
push
dec
mov
xor
xor
sbb
push
inc
or
pop
sbb
std
jo
add
push
and
jle
push
fsub
fs
sbb
and
jne
data16
inc
mov
mov
sti
mov
jecxz
mov
and
icebp
sbb
mov
int
inc
jle
sub
sbb
push
push
pop
in
rcr
and
and
adc
adc
mov
movb
js
fidivrl
or
sbb
push
popa
jp
aas
sbb
insb
mov
xchg
scas
pop
sub
out
xor
push
sub
je
frstor
mov
shrb
adc
cli
imul
mov
cmp
mov
js
jo
push
push
jecxz
cs
cmp
cmp
adc
mov
movlhps
mov
sbb
data16
stos
or
cmp
dec
lock
mov
mov
rolb
test
xchg
or
jl
jmp
adc
ljmp
adc
push
adc
mov
lcall
cld
mov
push
cmp
mov
add
cmp
cmp
inc
mov
add
or
xchg
fcoml
adc
cltd
sub
push
pop
daa
add
adc
mov
je
adc
das
cltd
fsubl
lock
insb
or
mov
fstpt
decb
push
cmp
and
mov
mov
add
mov
test
sub
ret
aaa
push
cmpl
dec
adc
lea
pop
pop
icebp
jns
xchg
cs
jmp
adc
fcoms
sub
sbb
mov
push
lcall
aam
add
jo
icebp
pop
leave
int
mov
andl
dec
test
jg
adc
nop
cli
jmp
cmc
lea
add
insb
mov
shl
xlat
pop
pop
and
sar
fidivrl
add
add
ret
incb
push
push
cli
xlat
xor
and
cmp
push
movsb
into
outsb
in
test
dec
hlt
cwtl
sbb
push
inc
aam
adc
cmp
sbb
sbb
cmpsl
pop
push
mov
add
pop
lods
nop
sbb
adc
jle
jne
mov
push
mov
addr16
imul
xor
and
jg
sbb
lods
push
leave
fistpl
jle
jp
sub
cmp
je
or
or
mov
sbb
nop
pusha
test
mov
roll
inc
mov
cmp
pusha
inc
mov
fwait
and
xor
mov
movl
push
outsb
lahf
sbb
add
loopne
sub
sub
mov
call
incl
jg
shll
aad
cmp
jl
incl
test
pop
push
jbe
pusha
es
js
call
cmp
jbe
sbb
adc
pushf
push
xor
loope
in
or
mov
mov
add
push
dec
je
mov
cwtl
push
push
dec
sub
test
rorb
push
rorb
and
fbld
and
loopne
test
movzwl
and
imulb
je
push
cli
into
sbb
ljmp
ss
mov
lea
add
inc
test
jne
inc
lock
stc
sub
push
push
inc
sbb
adcb
adc
push
xchg
cltd
ret
fbld
shl
push
aad
lds
adc
lahf
fs
subb
adc
jecxz
pop
dec
addl
jb
sub
fcmove
cmp
mov
jge
xor
mov
cmp
jl
xor
ret
and
pop
pop
inc
das
sub
ret
mov
jbe
adc
in
or
jl
rcr
pop
rcrl
int3
arpl
loopne
or
lcall
jne
pop
mov
arpl
sbb
or
push
out
orl
xchg
cmpsb
loope
push
loopne
fs
adc
pop
addb
orb
outsl
adc
push
test
mov
std
sbb
ljmp
jmp
push
cltd
in
push
std
stos
in
loope
or
clc
jle
mov
mov
xor
jg
cmp
pop
insb
mov
mov
adc
push
cld
lea
push
or
cmp
call
pop
mov
ja
add
jmp
mov
fcoml
add
push
hlt
in
clc
test
outsl
or
clc
jg
mov
fisubl
stos
jle
add
add
dec
pop
ret
das
clc
or
icebp
mov
enter
jbe
je
andl
push
fnstcw
push
insb
jge
sub
add
imul
movl
or
or
push
adc
inc
into
in
adc
push
dec
mov
lock
aam
cmpsb
adc
mov
or
jge
pop
movsb
push
and
push
jbe
and
filds
pop
pop
data16
or
jne
sbb
sbb
dec
or
push
xor
inc
clc
or
lret
pop
cld
arpl
push
adc
cmp
ja
add
mov
push
gs
mulb
xor
push
popa
shl
sub
push
jg
inc
xchg
dec
pushl
cmp
pop
test
mov
adc
pop
adc
in
loopne
filds
cmp
jb
pusha
aad
daa
push
push
push
sbb
pop
cmp
xchg
mov
pop
lea
sbb
outsb
mov
and
adc
sbb
or
or
pop
xor
mov
insl
xor
mov
adc
pop
adc
jae
out
mov
loop
xchg
add
int3
or
shl
pop
clc
out
test
icebp
mov
imul
divb
pop
jmp
jle
add
stos
shll
mov
pop
call
push
aaa
fs
cmp
je
cmpl
lea
pop
xor
in
jl
mov
push
jne
push
lret
call
mov
jae
dec
test
push
sub
mov
lds
and
sub
hlt
push
push
jge
adc
repz
adc
rcr
mov
cmp
or
inc
or
xor
fldenv
cltd
incl
push
dec
fcoms
pop
call
lret
xlat
or
inc
inc
or
shlb
adc
ret
cwtl
mov
dec
mov
mov
es
mov
xchg
push
clc
pop
rcll
adc
push
fnstcw
sub
or
arpl
pop
push
push
or
or
mov
push
mov
mov
adc
dec
ret
sub
subb
adc
push
clc
jb
cmp
jge
mov
lea
dec
adc
adc
dec
icebp
xchg
push
or
add
rorb
scas
and
sub
fiaddl
xor
pop
or
cmp
cmpsb
xor
call
mov
jmp
ret
or
sahf
cmp
add
shrb
es
ret
and
xchg
add
pop
mov
dec
scas
adc
push
mov
jb
add
ret
mov
enter
add
or
add
in
rcr
add
inc
push
add
ret
push
add
pop
jae
cmp
shl
insb
mov
push
or
inc
jle
in
push
add
inc
or
roll
pop
xor
out
jbe
push
hlt
cmp
cli
lret
aaa
add
xor
sar
sbb
cmpsb
rorl
add
out
cmp
rorl
and
movsb
jb
xor
lock
sbb
push
inc
icebp
adc
add
popa
inc
mov
sub
adc
imul
adc
ficomps
in
push
mov
or
and
adcl
sahf
jge
aaa
sub
inc
pop
pop
push
xor
sub
jmp
stos
decb
mov
inc
cmp
xor
std
repz
mov
pmaxub
cmp
pop
mov
and
mov
pushf
or
fildl
mov
into
sub
bsr
into
mov
lea
mov
pop
jne
xchg
insb
adc
pop
xor
incb
pop
pop
xor
repnz
pop
xchg
adc
xchg
or
jle
mov
data16
push
loop
inc
inc
adc
cmp
dec
cmp
in
and
es
cld
or
or
in
pusha
inc
xchg
push
test
push
sbb
aam
div
and
push
pop
add
sub
stc
int3
mov
movsb
push
push
out
push
dec
and
adc
pop
sbb
mov
rolb
repz
das
adc
lea
mov
es
std
lods
sbb
adc
rclb
dec
pop
outsb
fildll
mov
add
sub
xlat
push
lea
add
ret
lea
inc
fisttps
mov
test
insb
mov
test
or
jecxz
pop
or
rcll
xchg
aad
jo
aas
inc
adc
fimuls
test
test
mov
mov
movsl
mov
adc
and
mov
test
pop
and
xchg
jl
mov
sbb
in
push
sbb
sbb
sbbb
add
jg
sub
lock
sub
into
push
sbb
pop
adc
scas
loope
adc
ret
mov
sahf
cs
mov
xor
cmp
fiadds
ja
fwait
test
and
je
or
mov
sbb
push
jge
test
xor
push
push
movsb
add
rol
hlt
shrb
ret
xor
push
pop
leave
mull
push
jbe
push
adc
sub
sbb
std
repz
test
cmpl
and
sti
push
out
cmpb
ljmp
or
jmp
ret
adc
shr
add
jne
and
cmp
ficomps
adc
sbb
sahf
jecxz
arpl
jmp
cmpb
adc
lods
adc
shl
ja
je
orl
push
or
je
pop
cmp
mov
insl
inc
cmp
lods
xchg
jne
popa
aas
pushf
xchg
fidivs
cmp
or
sbb
shll
add
jae
out
inc
or
inc
sub
mov
daa
mov
add
add
repnz
dec
je
cmpsb
negb
sbb
and
dec
cmp
dec
mov
add
xchg
sbb
out
pop
pop
push
mov
call
mov
insb
or
enter
pop
cld
fstps
leave
and
mov
lods
jo
mov
push
fcmovne
mov
or
jp
lods
cwtl
push
lea
cltd
rcrl
cmp
push
mov
lret
dec
mov
or
cmpb
mov
jno
popf
lahf
xor
sub
adc
cmp
xlat
pop
enter
xchg
fldz
movl
sahf
or
mov
stc
sbb
sub
lods
scas
sub
fsub
divl
xor
je
xor
jne
scas
int
loope
dec
sbb
in
fnstenv
push
inc
cmp
iret
repz
test
int
jns
inc
mov
iret
in
add
lods
loop
push
jae
or
and
loopne
jg
sbb
addb
loope
push
adc
out
jno
add
and
sahf
in
sahf
in
or
rcrl
add
lret
in
int3
adc
or
adc
xchg
lret
scas
mov
xchg
sahf
pop
popf
mov
jg
mov
mov
pop
push
lea
push
gs
push
add
push
lea
repz
rolb
dec
and
pop
leave
aam
les
sub
mov
xchg
add
inc
cmpsb
loope
sbb
push
cwtl
jmp
adc
sbb
mov
pushw
je
js
jle
push
mov
add
fiaddl
cld
xchg
mov
nop
xchg
in
push
fists
test
nop
xchg
add
add
dec
push
push
push
jle
jle
mov
ficompl
add
pushf
enter
subl
test
xchg
jl
sub
or
icebp
push
cmpl
mov
sbb
xchg
mov
pop
ret
jle
or
inc
inc
and
push
cld
push
and
sub
outsb
fadds
mov
stc
movsb
shl
inc
pop
and
dec
call
jnp
out
sbb
xchg
inc
push
imul
and
je
cmpsb
loop
cltd
sbb
out
dec
cmp
push
push
xor
xor
addb
sub
shrb
clc
setne
push
dec
dec
and
add
repz
repnz
push
mov
lret
mov
in
bndstx
mov
push
push
push
push
inc
cwtl
rcrl
ret
call
push
add
add
add
loop
mov
mov
xchg
pushf
push
mov
mov
sahf
pop
mov
cmpsl
push
aas
add
addl
cmpl
xor
adc
push
xchg
pop
and
test
xchg
rolb
add
sub
ret
push
push
lea
mov
int3
adc
adc
push
push
mov
mov
push
dec
insb
push
dec
dec
mov
push
push
xor
dec
loop
insl
push
inc
dec
sbbb
xchg
jno
inc
inc
push
ret
add
sbb
dec
mov
xor
dec
sub
jle
jmp
mov
add
sahf
inc
add
mov
mov
inc
pushl
mov
mov
popl
push
push
inc
jbe
sbb
jbe
cmpsl
mov
sbb
push
adc
sahf
out
jns
xor
cmp
inc
or
adc
xor
mov
out
loop
mov
fildll
ds
cmp
xchg
pop
ret
adc
neg
sbb
ret
cmp
icebp
fsubl
call
pusha
adc
push
push
into
sbb
js
pusha
sbb
adc
push
xor
mov
imul
fnstsw
or
test
scas
inc
xchg
jno
jge
test
loope
add
movzbl
aas
les
cmpb
shl
push
lret
xor
push
xchg
lods
cmp
adc
push
pop
pushf
sub
push
les
mov
loopne
lea
adc
jle
jo
cwtl
add
jmp
into
mov
jne
pop
push
push
push
and
push
add
mov
aas
cs
jo
lret
push
xor
pop
xor
das
int3
mov
loop
mov
pop
add
les
lahf
inc
clc
add
pusha
jne
andl
out
cmp
sar
aad
sbb
xchg
jle
jmp
pop
or
incl
xchg
cwtl
jb
int
pop
sbb
xor
sbb
and
add
shrl
enter
inc
cmp
push
loop
xchg
addb
outsl
and
and
daa
dec
call
pop
fstps
jge
xchg
mov
ds
mov
test
jg
xor
mov
mov
push
add
mov
rcll
movsb
push
sub
sub
jle
dec
idiv
push
jne
push
mov
pop
xchg
push
add
push
mov
sbb
add
or
mov
jb
pop
fsubs
xor
pop
push
fstpl
xor
out
orb
push
fwait
imul
out
inc
jle
jmp
gs
and
xlat
enter
imul
jns
lods
and
xchg
sub
inc
loope
push
ficoms
lds
push
aam
stos
push
dec
sbb
dec
lret
push
push
out
ds
sub
addb
or
inc
lahf
push
rclb
jo
test
push
pusha
jbe
dec
jmp
test
push
push
push
mov
cmp
sub
push
push
lea
jo
pop
sarb
fs
push
js
pop
push
mov
push
loope
nop
jmp
bswap
ror
dec
addl
or
push
test
cmp
add
inc
cmp
rcl
mov
inc
xor
mov
dec
add
ss
int
add
or
mov
mov
sbb
in
ja
push
and
jo
push
je
xchg
sbb
add
push
push
je
push
mov
bound
adc
xor
call
faddl
stos
jno
enter
shrb
xor
pop
cmp
fldl
fmull
push
addl
push
mov
mov
ss
inc
in
dec
in
xchg
dec
cltd
jb
es
push
mov
mov
enter
movsb
lock
sub
es
add
add
adc
popa
mov
push
pop
inc
dec
and
add
push
lds
pop
pusha
les
test
bound
sbb
enter
mov
push
or
dec
inc
sub
mov
xor
pop
inc
ljmp
add
popl
jp
mov
scas
pop
loop
lock
xor
dec
or
or
sub
leave
es
jp
xchg
or
push
add
cmpb
jno
bswap
push
or
add
shlb
adc
adc
push
inc
sub
ret
xchg
lea
add
push
js
jmp
xchg
push
push
lds
sbb
in
pop
cmp
push
pop
mov
xchg
add
pop
aas
jp
je
mov
jge
xchg
pop
in
mov
jbe
push
stos
sbb
into
sub
cld
sub
sub
push
pop
inc
test
inc
or
fs
dec
mov
mov
ja
orb
push
mov
add
iret
add
pop
cwtl
pusha
paddusb
outsb
mov
sub
insb
push
mov
fmull
test
mov
int3
int3
or
movsl
outsb
dec
push
push
push
lods
xchg
push
push
sbb
push
loopne
shr
mov
or
loopne
andb
inc
inc
push
sbb
mov
adc
inc
add
push
dec
clc
ret
push
enter
popa
dec
xor
cmp
out
and
enter
js,pn
addl
gs
or
arpl
cmpsb
sub
adc
andl
arpl
xor
icebp
add
and
sbb
dec
adc
jl
cltd
and
cli
pop
mov
push
sar
push
or
mov
fstpl
daa
jl
dec
add
xlat
adc
std
cmp
mov
mov
dec
bound
idivl
fwait
out
sar
mov
shll
mov
imul
push
or
or
adc
mov
pop
inc
in
jle
in
or
testb
jmp
faddl
sub
mov
stc
add
loop
add
push
push
enter
mov
jo
and
add
cld
cmp
je
cmpl
sbb
cmp
jne
push
adc
pop
adc
add
ficomps
clc
loopne
lods
pop
es
lea
xor
mov
rol
shl
mov
and
outsl
sbb
mov
lea
out
mov
inc
dec
push
dec
dec
call
cmc
arpl
and
push
je
sbb
mov
or
out
data16
push
ljmp
pushf
sub
sub
stos
mov
adc
cmp
aad
fstpt
cltd
idivl
jo
add
aaa
ds
sub
mov
sbb
sub
sbb
mov
jbe
popf
mov
lcall
add
mov
test
or
jbe
add
xor
sbb
add
xor
mov
popf
imul
cmp
mov
dec
jae
dec
sub
jge
jmp
mov
cmp
fwait
pop
fistl
out
stos
pop
lock
faddl
xor
add
cld
lret
xor
mov
fdivrp
shll
out
xor
sbb
mov
push
push
pop
hlt
mov
mov
jns
inc
push
fcoms
xchg
imul
clc
jbe
pop
mov
push
ret
shrl
fidivl
mov
into
lods
add
sti
jge
sbb
or
movb
add
mov
lods
pop
js
jge
push
cmpsb
inc
add
cli
enter
test
push
leave
call
jbe
movsl
or
test
les
sbb
sbb
inc
lock
inc
jge
je
sbb
xor
adc
xchg
mov
lret
xor
or
test
inc
push
pop
mov
mov
daa
add
hlt
push
sti
push
dec
push
mov
movsl
jno
sar
and
adc
pusha
add
ficomps
inc
lcall
orl
and
jl
and
xchg
mov
add
inc
fisttpl
jns
mov
pop
les
push
aam
push
inc
outsl
loopne
xchg
or
pop
or
cltd
sbb
pop
add
fadds
es
inc
mov
sarb
sbb
adc
stc
sub
push
mov
outsl
cmp
mov
addb
fimuls
or
push
sbb
mov
pop
addb
xchg
rcll
ljmp
out
adc
fisttps
fisttps
add
insb
mov
jae
inc
leave
push
xor
jg
or
ljmp
cltd
push
pop
lahf
addl
movl
sahf
adc
push
cmp
sbb
adc
push
push
and
adc
and
push
mov
enter
cld
push
sbb
adc
inc
pop
loope
ss
mov
mov
jmp
sub
lea
pop
add
mov
sbb
xor
rorb
push
fiaddl
inc
dec
mov
xchg
mov
pop
es
push
jle
push
pop
in
arpl
push
mov
lret
mov
or
ret
lahf
or
xchg
sub
rorb
inc
inc
fists
or
or
add
sub
clc
push
sub
clc
setb
jno
jg
insb
push
mov
sub
cmp
setae
lcall
and
add
mov
sbb
cmp
lret
mov
mov
adc
xchg
adc
pop
push
add
inc
push
aam
fs
push
aad
subl
dec
push
movsl
push
es
pop
pop
sbb
lahf
or
clc
jecxz
loope
loopne
stos
mov
xor
push
pop
cmp
or
sub
dec
inc
jbe
test
adc
mov
aam
or
add
mov
push
add
adc
xorl
push
add
push
in
inc
cmp
aas
inc
or
push
inc
lods
jg
mov
in
sub
add
loop
stos
iret
call
sahf
or
pop
adc
add
and
cmp
ja
movzbl
push
imul
dec
jno
or
nop
cmp
out
jne
lds
push
mov
add
add
mov
adc
sub
add
adc
adc
adc
dec
nop
push
adc
call
mov
and
pusha
or
fiadds
popa
in
ret
ds
and
sbb
out
inc
xor
negl
movl
xchg
mov
pusha
les
add
jmp
and
cwtl
jmp
add
lea
mov
mov
xchg
cltd
and
inc
lahf
cmpsl
and
jo
push
bound
movsl
cwtl
hlt
add
enter
sbbb
xchg
sbb
adc
ret
mov
and
or
mov
test
jmp
mov
insb
or
add
push
ds
inc
push
std
and
mov
call
xchg
mov
sbb
ljmp
xor
adc
dec
add
mov
out
mov
and
or
loope
sbb
mov
push
adc
out
shll
stos
popf
sub
fst
or
call
adc
roll
dec
push
push
dec
inc
leave
pop
or
and
jns
test
dec
dec
add
imul
movsb
dec
mov
push
pusha
rcrl
stc
push
pop
sbb
pmullw
and
jecxz
jecxz
leave
es
shrl
mov
je
repnz
cmp
push
push
push
mov
jae
push
and
shlb
mov
movsb
jbe
mov
subb
fisubl
sbbl
mov
adc
insb
aam
push
or
andl
scas
xchg
hlt
add
dec
lds
fistps
cmpsb
mov
clc
test
add
dec
dec
inc
jg
xchg
sub
mov
push
rorb
arpl
add
and
dec
and
in
xchg
xor
dec
add
sub
and
lea
in
lock
inc
xchg
push
push
sbb
test
lret
push
push
lret
or
pop
loopne
add
or
cld
sub
push
sbb
ret
sub
inc
jbe
or
add
orb
je
fildl
add
add
fcmovnu
int
and
mov
sub
push
mov
push
pop
sbb
push
fisttpl
adcb
fs
fisttpl
adc
add
mov
sbb
dec
jb
xor
cmp
and
inc
push
add
jne
adc
mov
sub
loope
adc
nop
sbb
cltd
fs
inc
ffreep
mov
call
mov
fwait
mov
adc
jno
mov
enter
outsl
add
mov
add
add
push
sahf
and
add
cmp
cmp
mov
mov
mov
mov
ljmp
inc
loop
sbb
mov
inc
ss
jae
mov
js
pop
movl
jne
pushf
push
sub
pop
out
packssdw
sub
mov
push
mov
or
mov
pop
sub
bound
dec
or
loopne
or
or
test
and
xor
fldl
adc
inc
push
sbb
mov
daa
and
add
inc
scas
mov
rcrb
mov
xor
sbb
push
push
mov
cltd
mov
push
sbb
lea
je
adc
addl
outsb
mov
ja
dec
jl
mov
adc
lahf
in
cmp
mov
push
add
icebp
and
inc
insb
push
push
das
out
dec
sbb
insl
push
or
push
ja
clc
adc
mov
inc
push
mov
movsl
int
popf
push
adc
jp
dec
xor
roll
leave
jo
lock
or
and
inc
ja
mov
enter
lret
push
stos
push
pop
or
jmp
jnp
scas
filds
adc
pop
movsb
adc
test
sbb
test
aad
jle
bound
stc
mov
mov
add
push
pop
mov
cmp
and
repz
mov
into
nop
push
test
stc
cmp
cs
int3
mov
aaa
pusha
xchg
or
jmp
sbb
imul
les
jmp
movl
sbb
add
push
push
andw
je
lds
test
and
cmp
mov
xor
pop
andl
or
push
push
hlt
mov
or
sub
jb
inc
xchg
dec
movsl
imul
or
push
add
sub
add
pop
add
sub
inc
cmp
pop
jne
push
sahf
sbb
das
mov
jno
sbb
push
adc
or
sarb
xchg
outsl
push
adc
mov
pop
jne
pop
stos
dec
sbb
cmp
jbe
sbb
push
out
add
xor
inc
jb
outsl
in
lock
fs
lea
mov
push
fmull
push
lret
push
pavgw
or
imul
sbb
sarb
and
sub
popf
push
inc
sbb
xor
push
jle
mov
xchg
sub
adc
shlb
aam
add
xchg
mov
movsb
dec
das
add
push
sbb
inc
ds
jb
add
push
mov
gs
mov
cmp
jl
pop
sbb
push
js
push
movsl
add
aaa
push
fdiv
jbe
cmp
rolb
into
clc
xor
mov
sub
test
inc
push
push
or
jne
add
cmp
pop
add
mov
je
sub
cmpsl
add
push
adc
push
loopne
add
cmc
test
mov
add
mov
stc
bound
mov
in
xor
and
dec
and
and
and
xchg
or
dec
jmp
and
cs
and
fistpl
and
int3
jmp
jnp
sbb
mov
add
or
add
test
outsb
pop
lret
and
xchg
adc
push
xor
lods
stos
jp
ljmp
push
push
inc
loope
mov
and
fcomip
add
call
test
add
jno
push
cmp
xchg
add
push
enter
jmp
imul
mov
fsts
test
push
push
jae
nop
subl
cmp
push
xor
out
xchg
xor
arpl
add
lcall
and
push
pminub
adc
movsb
aas
push
push
pop
rclb
sbb
mov
sbb
in
insb
lock
adc
and
scas
mov
or
in
xor
push
adc
fwait
cltd
addb
jnp
dec
add
adc
push
xorl
jo
je
jb
xor
in
push
pop
sub
fwait
xchg
insb
ss
xchg
sub
ret
imul
in
xor
push
push
int3
sbb
push
and
inc
jbe
inc
cs
jmp
sbb
cs
test
pop
sbb
es
dec
aas
pop
add
adc
leave
adc
inc
push
push
ss
pop
xor
mov
mov
imul
ss
xor
push
repz
xor
cmp
repnz
mov
loop
sbbl
cs
push
out
sbb
pusha
inc
jb
pop
cmp
jb
push
test
pop
push
popa
hlt
aam
xor
cld
loopne
shll
lea
inc
mov
cmp
xor
mov
les
inc
add
nop
sub
aam
jnp
push
adc
xor
outsb
lret
cmp
movsl
stos
inc
xchg
inc
cmp
push
lds
cmp
mov
test
call
push
testl
mov
insl
fadd
or
push
push
adc
push
xor
sub
cld
mov
or
insl
dec
jge
adcl
push
or
cmp
daa
jge
pop
movl
xchg
sbb
and
cmp
addl
sub
in
mov
cwtl
jno
mov
stc
dec
test
or
inc
imul
adc
jne
pop
mov
jo
in
sbb
sub
sub
or
cmp
jg
cwtl
pusha
filds
inc
movb
mov
mov
cmp
cmp
loopne
adc
clc
xchg
jl
fmulp
mov
mov
loopne
and
mov
ds
sahf
movsb
and
faddl
sbb
add
or
cmp
add
push
psrad
into
inc
sub
cld
ss
mov
xchg
outsl
add
mov
push
inc
dec
add
cs
inc
mov
loop
mov
add
jmp
adc
cmp
jae
pushf
pop
sub
push
mov
add
inc
and
mov
xorl
sub
inc
outsb
sbb
mov
cmp
in
and
std
push
into
xchg
out
fs
push
jp
push
cmp
pop
dec
push
cmovbe
cwtl
mov
fld
stos
pop
add
outsl
stos
xor
call
pop
push
out
mov
jle
jb
sbb
lods
mov
mov
and
jno
add
pop
call
xchg
mov
adc
jb
ffreep
adcb
dec
mov
push
mov
test
inc
sub
jg
jecxz
cs
push
jb
mov
lods
sub
roll
jno
pop
aaa
or
addr16
and
lret
push
test
adc
popl
sbb
cld
fcmovne
push
test
je
aad
push
add
jecxz
or
and
je
orb
adc
mov
pop
or
push
fsubrs
addr16
sbb
mov
mov
leave
add
and
sahf
mov
jl
lock
mov
and
xor
or
gs
adc
pusha
gs
or
les
lods
adc
mov
sub
roll
xchg
cmpsl
or
std
std
add
rcrl
movsb
imul
js
add
es
mov
jp
adc
sti
jg
mov
inc
pusha
cmpsl
xchg
fistpll
fwait
movsb
push
push
push
mov
dec
push
cltd
dec
ds
cwtl
sbb
pop
jno
jb
imull
inc
pop
xor
sbb
test
mov
adc
add
adc
out
or
pusha
cs
push
inc
and
filds
sahf
inc
add
adc
fs
in
xor
mov
pop
dec
add
in
cltd
jmp
pop
add
adc
and
repnz
and
insb
mov
adc
arpl
nop
out
nop
add
inc
or
sub
enter
xor
ret
sub
sub
lahf
and
js
push
adc
adcl
lods
fdiv
ret
imul
mov
les
test
add
jo
add
std
enter
adc
xchg
and
jo
test
sbb
nop
es
add
popa
enter
pop
add
daa
sti
les
push
xor
push
push
jge
or
pushf
out
sbb
add
dec
lahf
loope
sub
lea
xchg
mov
lcall
adc
enter
rcrb
pop
std
repz
push
mov
les
jb
rcrl
and
xchg
out
arpl
test
cmp
sub
shrl
xchg
es
mov
test
add
sbb
lea
mov
inc
jmp
inc
or
sub
into
mov
push
mull
sbb
push
cmp
push
dec
lods
lahf
lahf
push
or
cmpsb
outsl
sbb
and
cltd
or
idivb
testl
cmp
pop
push
aas
mov
add
call
cmp
push
out
out
ficoms
pop
mov
repz
or
adc
jmp
fstl
test
add
adc
and
jae
in
add
into
mov
dec
jae
or
cld
nop
loopne
outsl
mov
pop
or
xor
push
and
or
mov
push
sbb
std
gs
xchg
sbb
icebp
push
ds
dec
fs
add
push
sub
out
inc
sbb
fbstp
ret
aam
dec
sub
cmp
stos
fs
cmpsb
mov
adc
fs
xor
lcall
pop
xor
sub
movsl
pop
xor
pusha
cmp
add
add
loopne
gs
push
ljmp
mov
mov
out
push
mov
insb
adc
jecxz
dec
push
iret
frstor
xor
push
call
add
enter
mov
add
add
mov
mov
dec
clc
and
sub
sub
or
jge
push
lock
icebp
arpl
and
dec
pop
mov
or
mov
ret
ret
lock
push
addl
pusha
arpl
add
inc
fucomi
jecxz
mov
sub
jne
push
out
shl
add
xor
mov
jmp
mov
lea
inc
test
jmp
int3
in
adc
adc
and
enter
out
add
in
mov
mov
push
push
cmp
popa
or
sub
es
paddusb
jb
cmp
mov
jno
js
imul
jb
inc
add
dec
in
jg
cmp
xchg
cmp
lea
nop
add
mov
jbe
push
cmp
sub
push
test
mov
out
jle
sub
push
cmp
mov
sub
cmp
xor
test
mov
and
aas
movsl
xchg
push
jno
adc
shlb
ret
sahf
fldcw
cltd
mov
stos
in
dec
add
sbb
add
movsb
inc
xor
inc
stos
cmp
or
rol
cmp
ret
xor
aaa
ss
cmp
add
je
dec
mov
add
add
loopne
xor
dec
and
pop
sbb
jbe
mov
nop
clc
cmc
dec
sbb
cltd
inc
inc
mov
jecxz
xchg
loop
cmp
or
or
dec
inc
ja
inc
in
jo
jae
jnp
add
mov
mov
js
adc
sbb
test
sbb
test
xor
push
outsb
adc
mov
xchg
mov
shrb
jecxz,pn
xlat
adc
icebp
push
and
sbb
cmp
jle
mov
mov
xor
jo
into
sbb
in
push
stos
aad
add
es
add
mov
lret
add
loopne
imul
jnp
adc
fs
or
out
add
outsb
rorl
lock
push
mov
mov
mov
xor
cmp
movsl
sub
pop
andb
or
or
inc
push
inc
push
xchg
fldenv
pusha
ja
push
add
rcll
jp
jle
aas
add
xor
js
mov
lock
pop
dec
cld
lea
sub
fs
dec
xchg
rol
jo
sbb
fimuls
in
jo
sbb
mov
data16
add
and
mov
aad
sbb
pop
insl
inc
sub
xor
dec
xor
dec
sbb
movsl
icebp
cmpb
ret
push
pusha
or
mov
inc
add
scas
lods
in
ds
dec
pop
add
push
xchg
xor
push
sbb
sbb
mov
mulps
addl
loopne
rorl
pop
or
and
add
and
test
dec
add
pop
inc
leave
push
adc
lods
shlb
and
xor
les
stc
sub
sbb
int3
lods
add
sbb
dec
xchg
mov
ret
cs
out
scas
add
sbb
add
mov
pop
jb
insl
and
popf
mov
adc
inc
aas
push
add
hlt
add
ret
je
mov
lods
dec
sub
xchg
stos
or
push
push
xor
outsb
ljmp
cmp
test
mov
mov
aas
lods
push
xchg
jmp
shll
or
inc
cmpsb
push
test
inc
add
mov
adc
lods
lods
push
jb
xorl
mov
mov
inc
adc
dec
push
adc
push
jp
pop
fucomp
mov
or
loope
sbb
jne
xchg
inc
add
mov
les
cmp
sete
mov
mov
adc
mov
sbb
ret
repnz
dec
pushf
add
cmp
fdivrs
mov
js
push
sub
add
and
or
fcmovnbe
mov
test
ret
incl
cmp
and
add
enter
clc
addl
subb
repnz
jg
pop
dec
pop
xchg
subb
or
inc
insl
mov
push
cwtl
pop
pop
cmpsl
mov
in
sub
test
cmp
lea
cmp
push
push
jg
xlat
xor
testl
aam
push
xor
or
or
ss
or
mov
pop
or
or
lds
jns
jl
pop
push
cmp
adc
movsb
adc
sub
repz
mov
push
mov
mov
jle
rcll
setge
sub
dec
arpl
sahf
repnz
sub
aas
add
push
sbb
push
lock
scas
xor
jle
jl
sub
sbb
pop
xchg
fcoms
pop
mov
fmuls
lds
test
nop
loopne
inc
push
cmp
and
iret
in
mov
cmp
lahf
mov
and
mov
and
cmp
scas
test
es
jo
cs
or
xor
jno
shrb
loop
adc
fwait
xchg
push
push
or
add
adc
shlb
cmp
push
mov
jle
sbb
sub
mov
sahf
fadds
and
fsubrs
add
jo
dec
aaa
push
and
add
jle
push
scas
sub
mov
in
fs
call
or
add
popa
cwtl
sub
pop
adcl
add
adc
ret
lea
cmpsb
xor
mov
stc
imul
dec
inc
push
push
icebp
popa
nop
pop
jo
and
sbb
popa
roll
jb
push
in
scas
popf
leave
xchg
adc
addr16
mov
scas
adc
jno
add
test
adc
push
aas
adc
push
mov
jno
fstpt
les
inc
outsl
xchg
sbb
sbb
push
xor
sub
inc
mov
jnp
test
fistpll
xor
in
mov
push
add
in
lret
loop
rcll
fs
add
in
push
call
xor
mov
add
mov
add
push
dec
push
bnd
xor
pop
gs
push
mov
adc
xchg
loopne
sub
fisubrs
pop
inc
rcrl
push
rclb
xchg
mov
clc
xchg
jo
icebp
je
push
mov
add
pop
xor
mov
ret
jns
dec
lcall
int
dec
and
dec
fiaddl
mov
push
jg
mov
jmp
hlt
cmp
jne
call
push
inc
les
pop
mov
xchg
sbb
sub
xor
dec
xchg
ret
into
sbb
aaa
mov
inc
sbb
testl
sti
push
mov
subb
mov
std
sti
adc
xchg
sub
pop
leave
loop
sbb
jae
mov
dec
lea
adc
add
sub
out
movsb
sbb
pop
adc
push
push
push
imul
pop
cmp
sar
or
int
push
push
inc
dec
lahf
pop
lods
sub
cmp
sub
out
push
fidivs
pushl
mov
cmp
lods
cli
jl
mov
cli
into
xchg
mov
into
xchg
sbb
sbb
mov
mov
js
add
sub
out
xchg
lds
pop
dec
and
xor
xchg
sbb
add
pop
dec
mov
inc
sbb
jb
lds
jne
jp
faddl
adc
lret
pop
insb
sar
and
hlt
cmpsb
sub
je
cmpb
pop
icebp
ja
test
or
lock
adc
add
lock
mov
jle
sub
leave
mov
xor
lret
lret
pop
fsub
outsb
add
cmp
push
cmp
cmp
pop
pop
mov
dec
hlt
jge
push
cmpsl
addl
pusha
jp
add
dec
repnz
xchg
xchg
cld
push
leave
shll
movl
xrelease
es
das
jno
enter
or
sub
push
es
insb
and
xchg
or
pop
mov
jl
mov
push
jg
push
add
push
xchg
adc
push
ret
enter
mov
push
bound
push
push
lahf
dec
dec
cld
sub
loope
lea
push
test
and
push
call
or
jo
sub
push
mov
hlt
sub
push
test
pusha
enter
dec
ss
mov
mov
mov
stc
inc
fisttpl
jo
dec
xor
out
outsl
addl
jne
push
hlt
and
hlt
push
or
imul
subl
jg
mov
in
push
cmp
mov
sbb
sbb
adc
adc
lods
and
or
mov
cmp
mov
push
mov
jne
mov
adc
scas
outsb
push
jne
jo
push
addr16
mov
inc
enter
jle
jg
mov
ret
es
mov
mov
js
add
xorl
jp
lahf
sbb
addr16
aas
add
in
mov
outsb
ret
pop
pop
leave
dec
jg
gs
cwtl
xchg
subb
cmp
ret
insl
popf
pop
pushf
xor
dec
scas
adc
testb
sbb
or
or
and
adc
cld
and
sbb
push
sbb
stos
or
lcall
ficoms
push
cld
add
jl
mov
and
adc
cmp
jle
lock
adc
inc
testb
jge
cmp
jne
loop
add
int3
adc
lcall
push
inc
add
or
and
add
test
push
dec
mov
sahf
fcoml
xor
xor
dec
test
add
andl
push
push
fnstcw
lret
push
outsb
push
add
and
jnp
test
rcll
fdivp
dec
lods
shrl
xorb
pop
hlt
push
rolb
jae
lea
jbe
or
mov
sbb
sub
int
pop
xor
shrb
pop
mov
scas
or
rol
mov
cmpsb
addr16
subl
aas
mov
test
mov
or
pusha
pop
cwtl
jne
or
adc
clc
add
inc
jae
call
push
leave
and
adc
sub
cmp
scas
pop
lcall
imull
mov
add
loop
inc
popa
inc
daa
jp
stos
clc
xor
or
lea
sbb
gs
lds
pop
and
movsl
jb
add
inc
cs
mov
popa
sbb
aad
sub
push
test
cmp
enter
enter
or
cmp
bnd
arpl
pop
fsubs
mov
xchg
cld
push
pop
lods
lahf
mov
ljmp
cmpl
bound
lds
jb
popf
mov
lds
jmp
mov
pop
pusha
jo
shll
mov
lcall
cmp
lret
or
int
sub
push
or
popf
iret
xor
scas
sub
mov
shl
cmovae
pop
lds
scas
xorb
sub
pop
jmp
inc
sbbb
movmskps
push
xorl
add
ljmp
mov
xor
sub
adc
add
sbb
jae
f2xm1
push
push
js
adc
out
lahf
mov
add
sbb
ss
movsl
and
mov
sub
or
cmp
arpl
or
dec
test
cmp
push
dec
pop
ret
inc
push
push
xchg
hlt
adc
push
mov
sub
add
sub
lods
out
xchg
cli
sbb
push
test
subl
xchg
int3
xor
or
xchg
xchg
incl
ljmp
sbb
lret
cmp
fadd
adc
dec
add
mov
out
dec
imul
cmp
add
push
dec
push
movsb
jmp
js
incl
wbinvd
pop
icebp
sub
or
int
xor
push
sbb
dec
xchg
or
shr
push
ds
dec
add
xchg
loopne
das
stos
or
cmp
aam
enter
andl
xor
je
adc
ret
jp
es
cmp
scas
jmp
mov
xchg
into
add
sbb
movsb
pop
jo
dec
cmp
add
call
sti
cmp
roll
dec
lea
push
lret
cmpsl
jecxz
dec
jnp
cmp
xor
sub
push
pop
out
inc
lock
jmp
mov
xchg
push
add
push
out
xor
sbb
sub
scas
sub
in
push
shll
cmp
mov
lds
ja
add
mov
sub
dec
loopne
cmp
add
sub
pop
push
je
inc
adc
pop
xlat
add
orb
add
cmp
sbb
push
aad
sbb
mov
sbb
adc
sti
int
mov
sub
cmp
jns
xor
push
int3
sub
push
jne
push
imul
add
and
dec
insl
or
xor
sbb
xor
aam
cwtl
test
jecxz
pusha
mov
pop
arpl
pop
jle
pop
jne
ret
adc
mov
and
popa
mov
enter
xor
in
arpl
push
add
pop
xlat
cmpsb
xchg
lahf
ds
and
test
aas
mov
leave
lret
dec
push
or
fwait
test
leave
push
sbb
dec
and
cs
pop
aaa
mov
fisttps
mov
sbb
add
and
push
mov
add
and
adc
xlat
ret
cmp
pushf
sub
jge
lret
mov
push
adcl
inc
ret
jecxz
add
lods
nop
and
lods
in
jge
pop
fstpt
push
test
stos
jg
fwait
xor
push
inc
xor
and
push
femms
fildl
ret
arpl
in
jo
dec
movsl
loope
push
and
inc
and
scas
push
in
add
push
sub
mov
mov
imul
fs
cmpsl
popa
pushf
or
mov
push
adc
insl
mov
ret
jecxz
adc
fs
sbb
mov
lea
add
jp
insl
sbb
xor
adc
jl
pushf
pop
loopne
mov
or
adc
test
stos
js
push
rcrb
test
xchg
stc
lret
mov
ljmp
or
xchg
add
dec
mov
pushf
cmpsb
jb
cltd
test
sub
xchg
jo
je
out
daa
mov
sub
stos
mov
mov
aas
stos
shl
ficoms
pop
sub
jl
sbbb
push
xchg
jl
push
insb
ror
add
add
xor
movhps
dec
jne
enter
rol
pop
ret
cmpsl
out
ds
sbb
cmp
stc
add
sahf
sub
sub
aaa
add
ret
rcll
add
push
push
push
call
lock
and
or
sbb
lock
cmpsl
sub
ss
push
jb
and
jo
add
cmp
xor
xchg
adc
push
xchg
or
add
ss
or
xchg
les
orl
adc
pop
push
sbb
shl
push
cltd
pusha
rorb
push
dec
push
fdivl
mov
add
andb
pop
sbb
iret
xchg
gs
fcomps
gs
dec
add
xor
leave
jae
add
add
insl
pop
jb
arpl
in
push
jo
add
pop
lahf
lock
test
or
xor
adc
inc
push
push
push
sbb
pop
ret
mov
dec
pop
add
orb
xor
sbb
test
je
lea
add
rcrb
push
arpl
pushf
push
test
inc
adc
mov
cmp
jb
pop
pop
fdivrs
cmpsl
cmpsb
adc
aam
push
add
sar
lea
push
push
inc
sub
test
add
sub
loopne
xchg
adc
jle
pavgb
mov
jle
loop
or
ret
clc
mov
sub
imul
add
in
sub
jle
cmpb
cld
mov
sub
or
jge
lret
jo
or
push
lcall
das
cmp
sahf
sbb
push
and
dec
pop
pop
cmp
bound
inc
sub
mov
xchg
lea
add
pop
push
push
push
push
mov
push
push
push
push
xchg
push
add
add
push
movb
orb
mov
sbb
lcall
jecxz
out
sub
jb
xor
popf
or
mov
js
jg
sbb
sti
dec
add
pop
add
cmp
sbb
mov
aas
push
lea
jmp
into
nop
rcrl
push
push
dec
xchg
dec
insb
enter
add
rorl
ret
clc
sub
je
and
add
rclb
lcall
fcmovnb
fcmovne
push
mov
or
pop
shrl
pop
xor
ljmp
std
nop
xchg
sub
jns
pop
incl
sub
and
ljmp
sbb
dec
insl
fistpl
xchg
pop
jo
sbb
xor
jmp
adc
adc
sahf
add
jno
xchg
sarb
add
pop
dec
add
jle
icebp
mov
ret
add
cmp
push
loopne
inc
and
add
pop
and
sub
mov
cmp
mov
xchg
jns
xchg
lock
xlat
mov
jb
ret
vxorps
ds
movsl
lods
xor
or
push
adc
nop
jo
cs
xchg
mov
inc
lds
cld
add
xor
int3
push
push
pop
mov
jge
out
sbb
add
push
cwtl
sub
sbb
or
mov
je
clc
cld
mov
dec
add
cmpb
shll
mov
xchg
iret
int3
addb
sbb
inc
push
xor
sbb
cwtl
sbb
cmp
push
xchg
xlat
popf
push
mov
pop
mov
or
mov
push
mov
sbb
inc
daa
rolb
pop
jge
jo
leave
add
sbb
inc
cld
xor
iret
repz
xor
cmp
add
mov
enter
mov
push
and
push
jnp
mull
in
jmp
xor
out
insl
mov
push
push
mov
pop
xor
sub
xchg
outsl
or
xchg
mov
cmc
or
rclb
ret
push
add
pop
addr16
call
or
call
add
jnp
mov
lock
push
call
xor
push
les
mov
cmp
pop
push
lahf
adc
shll
aad
sub
rcrb
ret
dec
pop
sbb
fimull
pop
lahf
shrl
mov
dec
shll
adc
in
xchg
inc
jg
push
dec
inc
les
cmp
scas
or
inc
clc
xor
push
cmpsb
xor
gs
and
nop
ljmp
mov
in
pop
add
sarb
push
or
add
ret
mov
pusha
les
push
dec
lock
ret
mov
inc
and
and
cmpsl
rorl
imul
faddl
gs
jbe
pandn
or
pushf
shrl
fnstenv
je
inc
adc
sbb
or
jnp
jae
mov
and
add
pop
std
fistl
test
fcompl
inc
ss
push
push
mov
add
push
jl
mov
adc
cmp
and
inc
and
call
clc
lock
cmp
sub
mov
xor
lahf
dec
movsl
push
cmp
and
movl
sbb
cld
ret
into
mov
movb
imul
rorl
cld
dec
jo
cmp
mov
mov
pushl
mov
jns
lea
jne
push
push
jo
mov
add
loope
push
cmpsb
mov
mov
test
cmp
push
fwait
or
leave
rorb
sbb
add
mov
adc
cli
pop
cmp
call
mov
xchg
testl
pop
movl
push
enter
jno
sbb
test
or
sbb
out
dec
fstpl
inc
iret
mov
inc
pop
mov
cmpsb
insb
push
or
sbb
and
cmp
ret
fistpl
popa
adc
mov
gs
sbbl
and
push
or
sub
das
adc
inc
add
mov
cmc
xchg
prefetch
or
or
mov
lcall
or
mov
test
mov
enter
outsb
andb
aaa
cmpsl
jno
sub
adc
or
sbb
imul
adc
sub
cmp
add
cmp
movl
adc
popa
inc
inc
ljmp
sbb
push
dec
add
hlt
xor
call
jp
jb
cmc
adc
jle
loop
sti
mov
dec
push
test
jg
inc
js
and
jae
pushf
adc
aaa
jg
mov
xor
xchg
push
push
bound
hlt
inc
add
cmp
std
pop
arpl
in
dec
jo
push
inc
push
std
push
je
pop
xchg
clc
xchg
jo
adc
add
cmc
fadd
and
push
mov
push
jl
mov
cmp
adc
aam
push
add
mov
pop
jle,pn
adc
andl
dec
push
leave
push
push
xchg
loopne
xchg
dec
and
cwtl
cmp
dec
and
push
lcall
push
push
loope
vaddpd
mov
test
dec
popf
out
lods
pop
push
lea
push
subb
pop
or
jne
dec
rcr
adc
mov
sti
xchg
or
iret
or
and
mov
push
xchg
scas
jo
mov
mov
adc
inc
mov
incl
add
test
in
mov
movsl
cmpxchg8b
inc
shl
test
pushf
in
frstor
movl
inc
jbe
rcrl
inc
inc
mov
fsubrs
jle
xor
mov
cmp
fadds
test
mov
fs
popf
inc
ss
sub
mov
and
sub
mov
shlb
dec
xor
mov
sbb
xorl
cmpl
push
xor
aad
xlat
push
andl
mov
push
inc
je
add
jle
xor
call
and
push
and
cmp
sub
scas
movsl
push
pop
inc
add
xor
enter
jmp
push
mov
inc
movaps
aad
inc
push
movsl
jl
push
push
in
add
sub
push
push
insl
ss
adc
into
dec
push
insb
insb
fs
mov
adcb
sar
push
inc
stos
hlt
sub
icebp
xor
rcll
xchg
jle
lds
push
in
pop
aas
sub
push
push
mov
xor
fiaddl
cmp
icebp
test
add
xchg
push
push
js
enter
rolb
cmp
sub
and
jae
or
in
and
and
sbb
pop
lret
and
adc
cmpsl
shlb
fsubrs
inc
insl
jne
jne
push
loopne
cmpsl
adc
stos
pop
loopne
and
or
cs
cmp
icebp
or
movsl
pop
sbb
test
adcl
js
ja
and
adc
test
rol
fldenv
xchg
iret
adc
adcl
add
inc
inc
shl
loope
call
pop
xlat
push
xor
add
mov
and
push
icebp
pop
or
out
adc
jno
fsubr
call
adc
xchg
mov
repnz
adc
in
stos
mov
or
jns
enter
mov
in
push
adc
cmc
lret
jb
shll
and
pop
adc
loopne
lock
xor
adc
inc
dec
and
pop
sub
mov
xchg
aam
sbb
push
and
pop
xchg
and
and
cmp
push
inc
push
mov
cs
in
insb
fsubr
stos
ljmp
jno
fldl
jno
shll
dec
jae
and
mov
sti
and
cmp
add
lret
xor
xor
js
aam
cmp
or
sub
xor
push
or
popa
bound
cli
dec
inc
cmpb
push
cld
hlt
adc
sub
push
add
sbb
push
mov
sbb
mov
cmp
clc
aam
xor
mov
popa
pop
mov
dec
or
push
pop
lds
inc
negl
or
jg
mov
add
cltd
inc
pop
sub
and
adc
fimull
pop
test
adc
int3
xor
or
rol
or
into
vpunpckldq
sbb
sbb
cmp
aad
les
add
repnz
dec
adc
mov
cmp
inc
jo
jo
xor
popf
inc
inc
push
sub
orl
jne
cmpsl
test
inc
mov
pop
xor
fildl
and
push
mov
test
or
dec
es
daa
mov
push
comiss
clc
push
inc
and
mov
pop
dec
loopne
or
jmp
popa
mov
push
inc
jno
stc
xor
sub
sub
inc
cmpsl
ficoml
adc
sbb
adc
out
cmpb
pop
ja
jmp
nop
vmwrite
push
push
add
lods
and
push
mov
or
and
gs
andb
pop
jb
nop
pop
pop
xor
cmp
scas
xchg
out
pop
push
cmpl
cltd
in
xchg
sahf
sbb
dec
jne
call
mov
push
pop
xchg
sub
sub
or
fdivl
jp
cli
test
loop
js
in
lods
xchg
inc
into
push
inc
sbb
inc
pop
fsts
and
sbb
in
add
cmpsl
xchg
mov
or
inc
dec
inc
mov
sub
icebp
testb
sbb
xor
iret
and
jl
xor
xchg
cwtl
dec
mov
inc
loopne
and
pusha
xor
pop
mov
clc
dec
xor
pusha
enter
push
push
pop
scas
shrb
push
sahf
sub
fwait
and
adc
add
fdivrs
daa
inc
adc
cs
movsl
aas
jne
insb
adc
or
repnz
add
adc
ret
push
dec
xchg
inc
mov
les
add
dec
jns
sbb
fsubrl
cmp
or
dec
lock
mov
mov
sbb
and
push
lods
int3
sub
and
and
push
stc
test
shlb
adc
arpl
jns
add
movsb
iret
mov
adc
and
mov
sbb
nop
in
insb
lds
mov
pop
inc
je
fwait
mov
inc
imul
repnz
test
mov
pusha
and
jbe
sbb
add
inc
add
adc
jno
jb
adc
mov
mov
mov
repz
and
clc
or
das
dec
mov
sub
cmp
add
inc
inc
test
push
shrb
fsubrs
scas
movsl
xor
jl
push
jmp
out
mov
mov
loope
jns
push
or
out
les
push
mov
pop
lea
rorl
dec
rcll
jbe
jp
cs
push
adc
lock
pop
ret
and
mov
push
push
and
adc
push
push
shlb
rolb
fstpl
push
je
mov
das
sub
fisubs
fst
bound
mov
mov
xchg
or
push
mov
or
pop
mov
sub
cs
fs
pusha
or
xchg
orl
adc
add
xor
rorl
rcrb
inc
jnp
jl
xor
pop
xor
sbb
lds
in
or
xchg
sub
pop
cmc
sub
xchg
jge
xor
adc
push
jmp
js,pn
xchg
sbbb
sbb
js
movsl
jge
adc
dec
jno
add
loope
adc
test
insb
jmp
sub
rclb
loopne
push
push
xlat
and
add
bt
mov
or
cs
decl
inc
scas
pop
sub
sbb
insb
sub
es
inc
push
push
or
fdivs
in
mov
into
jnp
xchg
lea
pop
pop
pop
in
insb
push
adc
push
sub
cs
mov
shll
roll
xor
subl
jo
pop
or
fimull
pusha
cltd
adc
push
adc
nop
jl
mov
xchg
cmp
js
xor
pop
mov
mov
and
mov
movsb
cmpsb
icebp
out
das
int
test
lods
inc
repnz
and
pop
mov
scas
push
sbb
dec
cltd
inc
js
es
add
test
and
hlt
adc
dec
lock
inc
or
dec
mov
arpl
aaa
or
adc
lods
mov
cmp
cmp
pop
std
cmc
xor
mov
shll
mov
push
xchg
mov
and
add
push
popa
dec
jnp
mov
xor
jbe
jo
and
ja
dec
adc
add
in
mov
std
aas
jl
mov
push
lea
sbb
mov
pop
or
xchg
lock
cmpl
inc
out
adc
xor
cld
test
ja
mov
scas
jbe
xor
push
fucomi
das
jns
scas
jmp
dec
loopne
jne
jbe
jb
call
add
jl
sbb
jge
andl
je
push
mov
and
sbb
pusha
and
pop
ret
andl
orb
inc
mov
cs
or
mov
orl
mov
loope
ds
dec
rorl
add
push
jl
lret
and
adc
sub
sbb
fldl
popa
js
sbb
jmp
es
inc
add
mov
addr16
sub
and
push
push
das
inc
add
mov
ljmp
adc
jno
aam
or
sbb
and
inc
pop
rcrl
and
xchg
lea
cmp
jno
arpl
mov
push
fisubs
mov
adc
push
or
mov
and
adc
aam
and
or
push
mov
push
inc
pop
jb
mov
je
aad
imul
pusha
cmp
adc
xchg
xor
je
push
aam
loope
rcrb
fs
inc
adc
adc
das
sub
aas
xor
movsb
and
push
xor
push
mov
jnp
inc
dec
call
mov
xor
jne
xchg
and
sbb
xor
inc
xor
aas
cmp
inc
mov
inc
or
cmp
pop
mov
adc
pusha
out
adc
mov
adc
push
fdivr
mov
dec
insl
sti
fstl
movzbl
push
mov
shr
adc
push
push
rorl
sbb
push
push
push
add
sub
push
push
sbb
iret
xor
inc
aaa
leave
mov
insb
push
jne
lds
dec
outsl
mov
and
cmp
sbb
add
cltd
pusha
add
mov
pop
push
pop
or
jge
test
sbb
pop
les
ds
fs
jae
loopne
push
aas
es
in
dec
into
test
mov
and
mov
mov
adc
dec
dec
imul
ja
and
and
add
cmp
shufps
pop
cli
sbb
loopne
out
push
sub
ljmp
push
sbb
dec
add
push
inc
inc
dec
test
dec
loope
jno
pusha
push
xchg
inc
pop
loope
lock
adc
pop
cs
push
push
cmp
imul
adc
testl
andb
push
jecxz
mov
jae
stc
dec
mov
mov
and
mov
add
lret
dec
mov
push
adc
push
adc
or
mov
scas
je
insb
jge
cmp
jne
push
sahf
dec
icebp
pop
adc
jmp
and
cmc
ret
add
pop
push
inc
jmp
daa
jmp
xchg
dec
test
push
pop
cmp
jg
fsubrs
add
lea
je
lock
pop
mov
mov
inc
sub
or
pop
inc
out
inc
jg
adc
push
scas
faddl
mov
add
adc
enter
adc
aad
inc
and
call
or
nop
clc
cmp
je
xor
inc
cmp
inc
inc
mov
mov
sbb
ret
adc
mov
icebp
or
fsub
mov
add
mov
or
jno
mov
loop
sbb
rclb
movsb
imul
push
sub
adc
dec
aad
sbb
ljmp
jno
xlat
sub
lret
dec
add
xorb
js
add
mov
mov
in
sbb
call
push
push
call
adc
je
lret
movsl
push
aaa
ret
pop
and
push
ljmp
and
repz
push
lea
push
inc
push
cmpsb
es
or
pop
mov
add
or
es
xor
adc
mov
push
cltd
adc
adc
sub
xor
jl
dec
jl
icebp
cmpsl
ja
and
sub
inc
cmp
or
mov
jne
or
pop
les
adc
sub
mov
and
ret
adc
aas
out
or
cmpsl
cmpsb
push
inc
hlt
jbe
and
aas
add
jne
popf
and
push
xchg
xchg
cld
and
shrl
rclb
xor
mov
sbb
or
jp
push
push
cld
or
xor
sub
xchg
sbb
jns
push
addr16
add
and
sbb
mov
xchg
and
cmpsl
xchg
js
dec
mov
hlt
popa
xor
ret
jb
test
xchg
jg
cmpb
jne
inc
inc
xor
cmp
cmpsl
aad
or
or
hlt
loopne
jne
cmpsb
sub
fisubl
push
shlb
sbb
add
aas
in
push
adcb
inc
or
xor
add
lret
cwtl
jg
push
adc
in
ss
test
or
sbb
pop
adc
ljmp
sbb
sbbl
mov
shll
pushf
push
stos
outsb
add
mov
sbb
sbb
and
les
outsl
mov
mov
inc
rcrb
add
lds
and
stc
adc
nop
cmp
mov
and
add
sbb
movb
cld
mov
lods
scas
mov
xchg
pop
xchg
xor
lea
sub
andb
icebp
jge
movsl
mov
pop
fdivs
sub
xor
mov
push
loope
test
jmp
shlb
sub
xchg
ds
sub
add
push
push
cmovo
bound
add
xor
sbb
imul
test
cmp
pop
add
lret
add
push
pop
mov
push
xchg
push
bound
cmp
inc
stos
adc
addb
in
cmp
add
push
or
std
pop
sbb
jg
push
push
and
clc
sub
shl
or
lods
jmp
lods
in
popa
xchg
lahf
push
sbb
or
pop
adc
xor
outsl
imul
or
sub
test
dec
jo
jns
clc
push
sbb
sbb
jo
mov
popa
push
xlat
popa
sub
xor
push
movsb
dec
xor
xor
out
inc
int3
adc
cmp
movsl
dec
pop
xor
jecxz
das
loop
push
shlb
or
pusha
dec
sub
rorl
leave
sub
aaa
shrl
dec
pop
mov
inc
iret
aad
test
cmp
jne
in
add
repz
xor
js
mov
loopne
or
rcrl
mov
adc
xchg
and
mov
push
notl
orb
je
sub
mov
pop
dec
adc
push
add
fstpt
add
adc
mov
pop
sub
arpl
loopne
sbb
mov
inc
adc
cmpl
adc
and
push
dec
in
cmp
fcoml
adc
push
push
movsb
and
sbb
dec
and
and
arpl
and
loopne
rorl
xchg
or
loop
and
mov
aaa
mov
xor
xchg
cmp
pop
mov
dec
imul
push
or
enter
adc
sbb
out
fmull
xlat
jmp
mov
lea
sub
cli
add
sarb
jne
dec
leave
scas
mov
jnp
and
inc
mov
jbe
mov
add
movb
dec
hlt
sahf
push
lret
enter
fsubp
scas
loopne
int
mov
adc
and
mov
iret
fstpt
jns
or
lahf
sbb
push
fimuls
loopne
mov
xrelease
jle
adc
pop
cs
add
ret
inc
sbb
in
nop
mov
cltd
pop
add
adc
leave
xor
rcrl
sbb
mov
inc
pusha
lock
and
bound
push
add
and
mov
sub
hlt
pusha
pop
popa
ror
call
sub
popa
and
and
add
dec
mov
xchg
cmp
sbb
add
setb
nop
add
xchg
push
push
cmpsl
pop
xchg
mov
rorl
push
jbe
pop
xor
int3
cltd
fisttps
test
stos
dec
testl
sub
mov
imul
push
cld
push
push
aaa
stos
call
aaa
dec
loope
lods
mov
hlt
xor
jmp
add
mov
sbb
in
mov
hlt
dec
fldl
sbb
nop
adc
add
fdivrl
stc
pop
add
cmp
ror
pusha
test
mov
ret
inc
and
xor
cmc
sub
dec
mov
ja
mov
and
mov
js
jne
ss
clc
xorb
xchg
dec
push
or
sub
push
and
pushl
sti
shll
add
add
xor
add
ss
fisttpll
cltd
fstpl
add
mov
push
mov
push
fldenv
xchg
bound
jmp
add
cwtl
add
push
jo
fwait
loopne
sub
in
ja
test
popa
and
mov
lods
add
and
cmpsl
push
push
push
adc
lret
iret
dec
xchg
add
jns
pop
arpl
scas
xchg
or
and
inc
pop
pop
mov
or
xchg
dec
mov
inc
jecxz
sbb
adc
inc
adc
add
mov
cmp
mov
cli
pop
pop
push
sbb
fmuls
sbb
aaa
adc
and
lea
push
enter
and
ret
mov
sbb
mov
or
sub
test
mov
nop
push
or
je
jl
shll
or
mov
jbe
ret
pop
jno
mov
lock
push
fcoms
imul
dec
data16
xor
repnz
jge
inc
loopne
xor
add
hlt
mov
bound
mov
push
aam
and
sub
jmp
lcall
mov
xchg
mov
jmp
inc
sbb
push
and
xor
xor
or
test
int3
mov
push
or
int3
test
test
rolb
enter
and
int3
dec
sbb
add
push
pop
cmpl
or
push
testl
mov
lods
in
and
and
outsb
mov
add
mov
sub
inc
cld
imul
in
scas
cmpsl
adc
cmp
cmpsl
jmp
nop
add
mov
push
mov
cmp
and
or
fistpll
aas
jl
dec
add
shrl
ljmp
adc
outsb
jmp
inc
outsb
jno
dec
js
mov
ret
daa
and
sbb
pop
mov
aaa
push
repz
cwtl
adc
sbbb
mov
add
adc
pop
lds
inc
inc
dec
push
push
cmp
loopne
add
cmp
pop
mov
push
lahf
lret
pop
lea
cmp
jne
cmp
lods
mov
divb
mov
xchg
ror
lahf
xchg
jle
add
mov
xor
mov
loope
sbb
inc
add
push
push
push
daa
pushf
jecxz
or
movsb
pusha
sbb
popa
jg
inc
adc
fs
dec
jp
xchg
lock
mov
or
test
inc
push
movsb
inc
repz
mov
in
xchg
adc
js
push
jl
cmp
push
jle
xchg
loopne
pusha
cmp
cmp
je
inc
mov
pop
or
cmp
jl
jmp
jge
addr16
addr16
adc
jecxz
mov
and
jns
xor
mov
add
sbbl
sbb
add
fistps
jl
and
or
add
adc
clc
inc
addb
xor
push
ja
add
add
dec
mov
inc
add
frstpm(287
or
bound
add
loope
push
iret
in
push
loope
popf
cmc
test
push
sbb
je
inc
pop
das
mov
mov
lcall
inc
test
or
ret
cmpsl
xor
out
fdivl
xchg
loope
jne
mov
je
or
cmp
jne
mov
adc
jo
xorb
adc
rorl
dec
sbb
sbb
inc
xchg
test
add
adc
out
or
mov
or
push
and
dec
inc
pop
add
pop
pop
adc
adc
mov
adc
dec
dec
pop
popa
mov
xchg
aam
cmp
je
nop
fwait
add
mov
subl
jmp
or
das
xor
scas
mov
outsb
adc
test
adc
and
xor
add
cmp
test
mov
call
mov
imul
cltd
jmp
sbb
inc
add
ret
insb
or
add
loopne
cmp
and
insb
adc
rorb
add
mov
sbb
aam
out
xor
mov
xchg
addb
hlt
jecxz
cmpl
sub
leave
leave
dec
push
mov
sub
add
add
and
ja
jmp
push
add
shr
adc
mov
mov
or
hlt
pop
shufps
scas
cs
insb
ss
daa
adc
sub
push
adc
inc
xchg
or
imul
xor
push
mov
out
xor
push
adc
mov
stos
adc
push
cs
mov
cmp
add
jnp
add
inc
es
sub
xor
adc
ret
pop
and
pushf
sbb
pop
stc
push
inc
sbb
lods
rcrl
pop
repnz
mov
in
lods
mov
adc
mov
sbb
dec
loopne
js
stos
and
movsl
mov
rorl
add
cli
inc
or
shlb
pop
mov
jb
sbb
add
cmp
jae
cwtl
imul
mov
jmp
xor
sub
cmp
rclb
ja
push
push
or
movsb
push
insl
cmp
sbb
push
sbb
fs
sti
int3
call
mov
ret
imul
cmp
add
test
outsb
add
das
subl
or
or
pop
jo
or
pop
add
aad
ds
int3
jle
jno
cs
mov
mov
mov
mov
jmp
sub
outsb
loope
or
movb
xchg
push
enter
mov
leave
aaa
inc
push
push
lods
mov
dec
add
push
cmp
xor
mov
pop
push
in
loopne
out
inc
popl
cld
mov
mov
cltd
sbbb
add
xchg
cmp
and
and
pop
cld
and
mov
sbb
xchg
add
xchg
push
insl
dec
dec
mov
jp
or
xor
cs
add
pushf
xor
sub
inc
iret
or
push
loop
sbb
cmpsb
lock
mov
cmp
adc
nop
dec
add
pushw
xor
add
insl
add
sbb
ja
mov
mov
sub
or
fwait
and
mov
test
cmp
int
cmp
hlt
inc
pop
subb
lret
cs
repz
adc
dec
or
mov
ss
clc
cmp
scas
sbb
shrl
or
mov
popa
add
pop
or
loopne
lods
adc
ret
mov
mov
into
int
inc
fcomps
mov
or
push
sbb
inc
sahf
push
adc
adc
shlb
minps
adc
aas
cltd
hlt
sbb
add
and
or
mov
sqrtps
fsubl
or
cmc
mov
push
adc
xlat
icebp
cmpsl
aas
mov
int3
sub
mov
mov
push
call
sbb
or
dec
xlat
nop
sub
inc
sub
loop
lock
je
int
adc
xchg
jge
sub
mov
inc
les
fcomps
lds
mov
lods
inc
mov
sub
lods
jl
stos
inc
cmp
shr
add
or
xchg
sbb
mov
jbe
add
add
or
pop
mov
adc
mov
jle
sbb
and
inc
push
mov
adc
rolb
ja
sub
fadd
or
mov
mov
sbb
cwtl
subb
mov
add
movsb
dec
push
push
mov
adc
mov
sbb
xor
int
lea
lahf
test
je
sub
pop
push
inc
mov
nop
inc
pop
adc
mov
in
push
leave
jae
dec
adc
adc
jo
cmp
adc
scas
shrl
mov
pusha
leave
push
dec
lods
in
xor
rclb
push
jo
cmpsb
jb
push
push
loopne
mov
inc
sbb
cmp
mov
pop
shr
dec
addr16
shlb
push
sub
sub
and
dec
cmp
xchg
out
and
sub
shrl
cmp
mov
xor
and
sbb
scas
cwtl
mov
and
add
add
push
addb
push
lcall
xor
dec
xorb
add
push
sbb
add
push
nop
lret
add
push
push
and
or
xchg
add
xor
add
inc
sub
cmp
cmp
lret
or
or
inc
push
dec
and
adc
insb
push
push
and
inc
sub
mov
xchg
jbe
je
adc
mov
sar
les
test
inc
enter
adc
rcl
loopne
div
sbb
add
dec
mov
or
fsubl
dec
adc
sub
jnp
cmpsl
mov
pusha
add
pop
mov
or
pop
call
jbe
sub
and
or
and
push
out
popf
push
pop
lods
adc
inc
lea
daa
sbb
sbb
dec
cld
pop
sbb
cmp
push
dec
jae
pop
rclb
dec
jae
xor
adc
push
adc
test
dec
mov
xor
sbb
adc
ja
sysexit
xor
lcall
push
dec
mov
inc
movsb
sbb
or
or
dec
lcall
mov
lcall
and
movsb
sbb
and
add
dec
lcall
mov
hlt
and
adc
adc
loop
mov
daa
adc
jns
xor
dec
cld
add
add
add
in
push
add
and
dec
xor
push
loopne
jnp
mov
xorl
add
outsb
loope
sbb
leave
add
xchg
cmpsb
mov
sbb
adc
mov
sbb
jmp
std
mov
jne
orl
test
adc
lods
add
or
call
mov
jne
fsubl
xchg
add
jne
adc
cmp
movsl
lcallw
adc
pushf
and
dec
pcmpeqw
push
cmp
jb
cs
mov
ret
mov
shrb
shll
adc
fsts
cmpsl
add
pop
mov
mov
add
dec
fs
sub
push
jns
stc
mov
jbe
sub
fsubrl
in
jns
and
add
add
andl
dec
sbb
sbb
sbb
pusha
xchg
xchg
xchg
mov
je
jno
cmpsb
nop
jmp
mov
sahf
xor
xor
pop
mov
lds
pop
mov
add
or
cli
and
xchg
sbbl
add
sbb
mov
sub
pop
push
in
lock
cmpsl
ss
cmp
sub
dec
push
push
push
jns
orb
push
or
adc
sbb
inc
or
add
and
ret
add
or
jmp
sahf
sbb
lret
pop
jne
test
push
cmpsl
and
inc
pop
jle
mov
sub
or
cmp
stos
nop
ja
nop
cmp
dec
sahf
or
lock
push
or
popa
xlat
jo
dec
mov
add
add
sbb
push
in
sbb
in
sbb
adc
cmpb
sub
ret
inc
mov
sbb
push
sbbb
stc
mov
push
cmp
xlat
add
push
mov
lahf
adc
push
out
xor
mov
mov
pop
pushf
sub
xor
scas
es
aam
adc
pop
mov
es
inc
mov
fsubrp
mov
push
mov
clc
add
mov
lahf
in
add
add
adc
addb
adc
lock
dec
push
push
and
clc
cmp
mov
sub
fprem
add
mov
and
ret
mov
sbb
js
das
loope
or
inc
or
push
push
nop
push
out
clc
or
or
push
movl
pop
mov
int
je
mov
cmp
push
test
inc
das
sub
testb
rep
dec
sub
mov
loopne
push
mov
mov
dec
jg
jo
sbb
orl
test
pop
jge
add
push
les
adc
mov
push
push
inc
fadds
mov
dec
in
xchg
fcoml
xchg
and
sbb
push
test
jns
mov
js
cmp
hlt
nop
push
loopne
mov
lcall
adc
add
iret
dec
in
push
dec
xchg
notl
sub
js
mov
mov
rcrb
dec
in
mov
mov
call
lea
add
jo
adc
dec
hlt
xchg
or
into
int3
inc
rolb
ret
dec
push
pop
call
mov
fnstenv
daa
addb
fistps
push
test
pop
add
jne
add
pop
fs
inc
xor
sbb
sub
mov
insl
imull
inc
mov
push
cmpb
js
jne
push
stos
add
xchg
fimull
adc
dec
insb
bnd
jle
jne
lea
xor
daa
es
dec
jo
adc
testl
xchg
cmp
icebp
xchg
outsb
jbe
orl
pop
int
and
orl
mov
ficompl
push
cmc
movsb
sbb
jle
inc
movsb
scas
and
xchg
mov
or
mov
or
adc
and
sti
jmp
mov
dec
sbb
daa
or
orl
sbb
push
scas
es
adc
inc
mulb
sub
mov
push
clc
jge
push
and
inc
fs
dec
lea
inc
es
push
jae
jns
push
push
inc
or
ret
xor
jne
add
cmpl
add
jo
push
pushf
mov
jo
inc
lods
sbb
xchg
cli
fs
mov
adc
sub
xor
insb
fsubs
cmp
insb
test
jnp
inc
pop
mov
mov
or
push
fs
xchg
or
dec
sub
and
or
push
sub
push
xchg
or
outsb
adc
cmp
cltd
dec
push
pop
mov
test
gs
lret
inc
and
sbb
lret
adc
in
inc
push
cvttps2pi
dec
adc
xchg
pop
and
xchg
sbb
adc
pop
and
add
mov
cmp
insb
xor
fs
dec
and
jmp
test
inc
test
or
sbb
pop
ljmp
jge
sbb
push
xlat
ja
rorb
sbb
fcom
cmp
mov
fwait
inc
cltd
push
xchg
pop
dec
inc
cmp
or
jo
lds
scas
stos
inc
pop
xor
je
loop
dec
insb
push
cld
jo
cwtl
cs
push
sbb
inc
sarb
mov
adc
repnz
iret
add
or
andb
enter
and
mov
std
in
pop
imul
popa
mov
cwtl
cltd
xchg
dec
rcrb
stc
insb
test
sbb
or
jno
push
jno
fldcw
loop
inc
pop
cmp
cmp
jb
movb
loopne
test
dec
sbb
cld
int
add
cltd
push
pop
pop
mov
pusha
sbb
push
iret
cmp
cmp
ljmp
adc
dec
xor
dec
ss
mov
rclb
adc
sbb
or
inc
mov
pop
clc
push
fcmovnb
fadds
add
outsl
cmp
imul
mov
dec
ja
leave
adc
mov
jg
mov
push
inc
adcl
lds
sbb
xchg
lret
je
jge
out
add
fs
andl
add
add
fs
pusha
sti
add
add
leave
int3
push
pop
ss
mov
pop
push
xchg
fdivrs
sub
sub
cmp
data16
sub
cmpsb
cmp
pop
push
insl
and
cmp
push
jmp
dec
dec
push
aad
pop
lea
jo,pt
nop
adcl
sti
xchg
pop
dec
insb
push
add
sub
mov
push
adc
dec
jmp
adc
mov
or
add
ret
jnp
sbb
push
xor
push
std
dec
or
cmp
xor
push
or
dec
adc
xor
mov
sbb
cmp
mov
cs
xor
adc
stos
dec
orb
and
rcl
dec
cmp
lret
or
xor
push
xchg
adc
mov
mov
and
jno
adc
in
pop
test
je
and
clc
jl
mov
add
fdivl
pop
xchg
fnsave
push
lock
nop
fisubl
push
dec
jne
inc
nop
movsl
arpl
mov
les
sahf
push
or
jnp
push
call
dec
sub
push
push
imul
decb
ret
push
imul
movsb
mov
pop
stc
fisttps
cmpsl
js
push
cltd
add
or
outsb
push
xchg
pop
dec
mov
xor
inc
inc
lods
add
dec
or
orl
mov
cwtl
sub
nop
inc
dec
sbb
push
nop
popa
scas
mov
js
je
or
adc
jns
ljmp
cmp
adc
xchg
xchg
cmpsl
pop
xor
sub
mov
xor
mov
cmpb
add
mov
mul
pop
add
or
add
or
test
sbb
adc
daa
or
fidivrl
scas
push
adc
and
lds
inc
mov
xor
mov
and
inc
adc
sbb
cmpb
add
adc
es
inc
mov
adc
lock
sub
rorl
xlat
dec
nop
add
add
clc
mov
push
mov
push
add
incl
inc
push
fs
push
addb
outsl
or
mov
popf
je
ret
out
nop
adc
pop
push
sub
lahf
ss
nop
ficomps
pusha
push
push
popa
and
add
dec
scas
rorb
push
popa
inc
xchg
popf
push
lea
mov
add
sbb
cmp
xor
pop
adc
jp
dec
push
push
sbb
ss
dec
testb
ds
xchg
ljmp
sahf
cmp
xor
aad
in
mov
sub
mov
add
dec
rol
cmpsb
adc
adc
mov
push
adc
mov
cwtl
ja
cmp
mov
add
push
stos
cltd
jp
and
sbb
inc
fwait
dec
shrl
lods
cwtl
push
adcb
cmp
mov
ss
mov
dec
pop
rorl
mov
lahf
and
cld
pop
icebp
xor
jmp
add
sub
xor
or
popf
and
add
adc
adc
jl
jl
dec
push
imul
jl
push
testl
cli
inc
shl
push
sbb
je
or
mov
ret
push
xchg
inc
dec
push
movsb
sub
adcb
ret
add
cwtl
je
cmp
xlat
leave
rorl
add
aam
or
mov
inc
and
pop
pop
mov
or
jmp
adc
nop
cmpsb
fmull
adcl
mov
add
mov
lods
sub
jae
mov
popf
add
pop
roll
pop
adc
add
adc
pop
and
adc
adc
adc
daa
pushf
xchg
and
mov
xchg
fsubrl
xor
xchg
dec
push
add
shrb
xor
lcall
lret
nop
sub
incb
imul
loop
dec
rolb
add
imul
cmp
push
push
nop
cmp
mov
jp
jae
push
add
add
nop
sbb
and
rcrl
jae
rolb
out
or
cmpsb
inc
cmp
das
and
insb
fs
sbb
sbbl
inc
insb
sbb
je
inc
dec
addl
add
je
jo
mov
dec
rcrl
nop
sbb
and
sub
fiaddl
mov
xchg
pop
lahf
repnz
test
mov
insb
xor
loope
pop
xor
sub
mov
cmp
add
enter
movsb
xor
popf
je
in
dec
xchg
cmp
dec
mov
test
je
mov
and
xchg
jae
adc
lcall
dec
jle
test
jp
sub
mull
pop
add
adc
dec
or
out
lds
sbb
pop
xlat
orb
jl
xchg
xlat
sbbb
sub
mov
inc
push
mov
xchg
js
adc
dec
je,pn
mov
cld
setg
dec
add
ds
mov
shrb
rolb
rcrl
pushf
push
cmp
xorl
pop
sub
and
aaa
or
jp
sub
imul
push
push
sub
xor
push
leave
inc
push
mov
pop
jno
cmp
mov
inc
les
sbb
pop
pop
push
push
lea
add
inc
and
mov
ljmp
mov
xor
push
ficomps
add
pop
jb
test
mov
shlb
insl
popa
and
mov
out
je
leave
jne
cmp
inc
sub
pushf
ljmp
push
adc
inc
pop
sbb
jae
mov
cmp
mov
ret
das
add
cmp
mov
add
inc
js
xchg
add
pop
aaa
js
push
inc
xchg
mov
cmpsl
add
sub
mov
dec
cld
jno
push
add
inc
add
stc
and
push
dec
mov
push
test
jne
loopne
dec
adc
mov
add
xchg
rcll
add
and
mov
xchg
push
shlb
aam
or
mull
cmpsl
aad
std
mov
lcall
push
aaa
les
sub
or
mov
adc
inc
lock
lds
mov
inc
orl
enter
xor
cmp
mov
or
sub
adc
adc
jae
cwtl
add
fs
push
mov
les
aas
dec
lods
add
cltd
arpl
lret
adc
mov
out
int3
cmp
mov
movsl
and
inc
xlat
push
pop
mov
fidivl
mov
jno
push
les
adc
add
scas
lahf
jnp
push
pop
mov
push
push
xchg
sub
mov
fldt
shlb
adc
jecxz
pop
movsb
cs
flds
push
sbb
push
xor
xor
push
pop
inc
dec
sub
fimull
push
inc
sub
push
push
out
lods
cmp
push
inc
push
jecxz
pop
cmp
push
inc
repz
and
push
pop
mov
clc
inc
mov
inc
push
or
adc
or
jb
std
movzbl
hlt
and
xor
sub
arpl
mov
or
pop
push
push
mov
sub
push
add
or
adc
xchg
je
jbe
or
or
repz
div
add
sub
and
addr16
lret
add
push
sbb
xchg
ss
jmp
mov
insl
sub
clc
or
mov
or
ds
sub
mov
sub
cltd
or
aas
inc
sub
cmp
mov
rorb
inc
or
ret
out
xor
mov
int
mov
inc
insb
mov
inc
lcall
test
or
xor
pop
hlt
popa
fmull
mov
xchg
push
mov
movsb
cmp
pop
pop
mov
daa
sbb
xchg
movsb
data16
loopne
add
cmp
je
adc
repnz
push
cli
aas
push
fwait
jl
pop
add
and
shr
test
jne
lahf
ficomps
push
mov
cs
icebp
sub
jmp
push
jb
mov
out
adc
je
push
add
pop
fs
lods
mov
mov
imul
cmp
jae
xor
cmp
xchg
gs
and
lock
ljmp
mov
test
push
dec
xor
pop
ror
xchg
je
push
cmp
or
dec
mov
inc
ja
push
out
outsl
adc
add
push
sub
addl
add
inc
push
inc
xchg
lods
add
scas
fs
xor
aaa
call
pop
mov
mov
repz
movsl
adc
cwtl
les
sbb
adc
mov
push
leave
and
sbb
adc
dec
rclb
scas
test
cmpsb
bound
dec
add
sbb
inc
dec
cwtl
dec
and
pop
and
cmp
cltd
roll
adc
inc
xor
mov
push
sbb
pop
or
sbbb
xchg
cmp
mov
mov
nop
int
push
inc
and
or
pop
pop
js
sbb
jbe
sbb
fisubrs
in
mov
add
pusha
jle
or
setge
push
sub
xor
push
enter
or
cs
adc
adc
jmp
cmp
sbb
mov
cmp
jne
dec
dec
mov
leave
idivl
popf
dec
and
push
out
lret
nop
sub
inc
adc
xchg
xchg
enter
sbb
jmp
push
hlt
inc
push
push
shrb
adc
mov
mov
mov
xchg
jne
adc
pop
mov
push
pop
adc
pushf
rcr
xor
call
mov
cmp
cmp
and
push
fcoml
sbb
add
cmp
add
or
xchg
cmp
jne
mov
sbb
jl
mov
aam
push
out
push
pop
sbb
sarb
mov
mov
inc
sbb
mov
mov
xchg
subl
jge
adc
mov
js
bsr
pop
pop
call
xor
jg
inc
les
mov
popa
push
dec
lds
dec
fildll
pop
xchg
push
je
xchg
sub
jmp
popl
mov
loopne
call
sbb
fs
jno
test
push
mov
cmpsb
and
sub
dec
cmp
jae
pop
gs
dec
cmp
aaa
lea
nop
push
es
icebp
or
and
jns
mov
test
andl
pop
push
or
dec
mov
daa
jns
add
inc
cmp
subb
or
push
call
mov
cmp
xor
dec
in
mov
inc
adc
aaa
and
fsubs
jecxz
or
push
sbb
inc
cmp
js
jge
dec
jnp
fs
or
int
imul
adc
nop
add
adc
repnz
push
sub
jbe
enter
cmp
jb
or
insl
test
int
adc
add
mov
push
lea
add
add
push
and
rcrb
adc
andl
popf
push
mov
dec
and
test
outsb
jle
jnp
cwtl
loopne
int3
iret
jge
inc
into
or
aad
insb
or
test
cwtl
insl
pusha
mov
cmp
daa
lcall
inc
leave
mov
sbb
pop
mov
ret
mov
shr
jecxz
mov
ret
cmp
je
sub
inc
add
push
int3
mov
pop
iret
push
pop
push
loope
mov
aad
or
cmp
adcb
ret
cld
fcoms
inc
ds
cmp
jbe
scas
ds
jbe
cmp
lcall
loopne
xor
mov
in
jle
pop
mov
push
and
or
call
sbb
dec
pop
mov
into
sbb
mov
sbb
ret
jno
mov
ret
testb
add
add
push
cmp
cmp
mov
sbb
jg
inc
ljmp
adc
andl
adc
push
xor
add
jns
cmp
cmp
clc
pop
hlt
jle
push
cmc
add
sbb
rclb
adc
mov
inc
push
adc
push
mov
mov
imul
pop
inc
add
ja
sub
js
rorb
push
fistps
jae
pop
mov
add
mov
pop
sbb
mov
jle
sub
movl
adc
pop
cmovae
add
pop
mov
jne
push
imul
rorl
jecxz
lahf
xchg
jo
xchg
sbb
push
loopne
movaps
pop
or
inc
shrb
jle
jno
add
inc
pop
sub
xor
dec
mov
cmp
out
or
jl
jmp
pop
lea
ret
xor
arpl
and
fwait
insl
fwait
or
mov
push
fdivs
sub
add
filds
incb
push
pusha
cmp
push
push
and
sbb
mov
xchg
dec
sbb
lock
push
pop
inc
inc
add
stos
or
or
or
jle
bound
arpl
pop
push
pop
inc
dec
or
sub
test
cwtl
sub
push
push
xor
mov
mov
sub
dec
or
or
jl
ficoml
push
sbb
js
xor
stos
popa
loopne
inc
or
pop
insb
test
and
cmp
pusha
ret
movsb
or
pop
add
mov
dec
lcall
xor
dec
sbb
inc
and
int3
and
or
mov
adc
mov
pop
dec
pushf
pop
mov
or
sbbl
loopne,pn
adc
cmp
push
popa
sbb
aam
cltd
pusha
inc
nop
mov
sub
add
mov
add
xor
adc
add
scas
das
std
movaps
xor
cmp
jne
cmp
pop
cmp
mov
cmp
xchg
aad
and
mov
rorl
adc
outsb
sub
push
or
mov
push
and
xor
fimull
mov
sahf
fnstenv
das
fwait
sub
and
in
xchg
inc
inc
mov
jno
jnp
ss
xor
mov
lret
mov
es
mov
ror
ret
add
and
sbbb
push
dec
addl
mov
xchg
dec
subb
pop
imul
sub
sub
paddusw
outsl
lea
add
inc
xor
cmp
adc
xchg
outsb
inc
jg
add
mov
loopne
cli
inc
dec
lea
xchg
push
adcb
jne
mov
xor
les
es
es
and
movsl
or
or
pusha
cmp
fs
insb
lahf
push
and
lea
mov
pusha
cmp
add
cs
and
cmp
nop
pextrw
xchg
out
adc
xchg
cmp
add
mov
jno
add
lret
addb
lods
cmpsl
nop
std
addb
adc
cmp
pop
fidivrs
jnp
dec
dec
mov
dec
jle
int
dec
add
ret
adc
push
mov
inc
lret
popf
sarl
shrb
add
leave
push
inc
cmp
lods
inc
sub
aam
pop
rorb
inc
cmpb
add
sbb
sar
push
sbb
pushf
xor
pop
cmp
mov
adc
movsb
insb
mov
jne
xor
icebp
push
adc
inc
adc
ljmp
or
add
push
mov
sbb
adc
dec
jge
jo
repnz
stos
cmc
inc
inc
je
mov
jbe
sbb
and
fdivrp
xchg
jb
shrb
sub
je
push
jne
lea
adc
push
aam
and
sub
add
pop
inc
fs
cmp
xchg
mov
add
jo
enter
sbb
mov
js
ret
cmpl
mov
popf
gs
popa
lds
mov
dec
ljmp
mov
movsb
push
and
mov
pop
data16
pop
in
orb
or
clc
inc
xchg
sub
inc
scas
cwtl
push
pop
dec
sbb
sbb
subb
xchg
dec
adc
inc
or
and
fdivrl
xchg
daa
push
mov
push
add
sub
xchg
fmuls
xchg
fists
jae
dec
mov
cmp
cwtl
adc
cmp
cmp
popa
sbb
xchg
mov
sbb
pop
dec
adc
pop
dec
cwtl
dec
stc
adc
movsb
push
incl
cmpb
inc
push
into
mov
cmpb
sarb
mov
and
inc
cmpsb
add
subb
push
cmp
push
aaa
int
push
sbb
movsb
adc
cmp
mov
popaw
inc
sbb
sbb
je
roll
pop
call
add
xchg
or
test
mov
minps
sbb
shll
pop
sbb
mov
nop
jle
jno
mov
popf
addl
dec
js
sub
or
out
jl
dec
mov
mov
mov
mov
rep
push
je
jo
and
or
pusha
je
pop
add
push
es
or
test
test
ss
mov
push
cs
shl
push
inc
test
in
push
sbb
xor
mov
xchg
das
push
mov
add
mov
enter
add
lock
sub
dec
mov
inc
xor
mov
fdivl
jle
or
jo
xor
out
pop
xchg
adcl
jo
popa
pushf
and
gs
je
inc
add
push
mov
rcll
enter
push
pop
and
pop
push
push
test
imul
dec
arpl
jb
mov
mov
bound
and
orl
pusha
mov
fs
push
sub
sbb
ficoms
mov
push
and
push
or
jecxz
adc
or
jae
movl
and
sbb
lea
sbb
pop
jb
or
inc
inc
add
push
sbb
in
ss
mov
or
jns
sub
cmp
mov
jb
inc
pusha
cmp
stos
dec
pop
and
jnp
mov
inc
xor
inc
daa
sub
inc
insl
iret
xchg
cmp
and
cmpl
mov
or
rcll
push
outsl
xchg
cmp
lret
cmp
jno
push
test
mov
xchg
pop
push
dec
shl
lods
mov
or
jmp
and
lock
sti
sub
push
inc
pop
add
pop
cli
dec
push
repz
push
lds
jo
jno
mov
popa
mov
push
shll
cltd
sub
xor
adc
push
sbb
repnz
lcall
sbb
push
sub
push
push
in
xchg
add
and
movsb
sbb
push
and
inc
mov
xchg
adc
lods
cmpl
dec
adc
rol
insb
iret
leave
shll
ljmp
adc
aad
or
adc
xchg
nop
push
mov
push
rcr
and
inc
push
dec
nop
cld
lahf
and
jge
sbb
arpl
cmpsl
lods
sbb
cmp
mov
and
or
roll
add
adc
mov
push
inc
push
xor
inc
jno
movsb
adc
stos
sbb
shlb
jnp
mov
jle
leave
sub
adc
lods
xor
lcall
and
xor
pusha
xchg
or
icebp
inc
sub
lahf
call
lods
cwtl
outsb
insl
add
sub
inc
mov
arpl
lcall
jbe
test
call
mov
ror
push
jo
inc
adcl
add
sbb
sub
xchg
mov
sub
filds
lods
fs
clc
pushf
arpl
pop
push
mov
and
fwait
dec
test
andl
shll
pop
xlat
cs
mov
lahf
or
push
rclb
add
add
popa
test
mov
jg
rcl
in
cmc
data16
pop
out
add
adc
movsl
cmpsb
fwait
sbb
push
fnstcw
inc
push
clc
xchg
or
or
push
and
add
and
js
add
mov
pop
iret
sub
sub
scas
adc
sub
dec
sahf
add
sub
push
fisubl
push
inc
jmp
sti
mov
and
aaa
sub
call
loop
inc
cmp
inc
mov
scas
mov
test
mov
and
ficompl
add
xor
arpl
dec
lret
rol
sbb
rcrb
dec
int3
addr16
add
scas
push
adc
xchg
imul
mov
sub
icebp
sub
adc
push
adc
cmp
mov
push
mov
push
and
push
jb
mov
add
in
hlt
imul
add
push
pop
adc
enter
push
sub
or
or
pop
pushf
add
lret
add
enter
sbb
ret
sub
call
rcrb
pop
les
cmpsl
and
jbe
out
dec
or
xor
lea
jb
fcmovb
ja
insl
sbb
and
sbb
pushf
sbb
stc
leave
and
imul
gs
push
push
aas
enter
jmp
xchg
adc
add
leave
sbb
out
outsb
imul
cmp
stos
loopne
inc
pop
mov
pusha
mov
loopne
cmc
pop
push
cmp
enter
inc
rcl
cmp
pusha
mov
and
and
pop
sbb
add
insb
cltd
adc
add
cld
lea
movsb
sbb
sbb
test
fwait
add
shrb
inc
mov
cs
mov
or
xchg
or
jns
inc
cmpsb
adc
outsb
dec
mov
test
es
and
or
and
and
lret
add
push
add
call
push
cmpl
push
movsl
jne
pop
add
dec
sub
call
push
and
xor
push
mov
sbb
jmp
push
call
mov
testl
lods
xor
inc
fisttps
sbb
cmp
mov
mov
mov
push
aam
and
gs
rcrl
sub
cli
xor
add
jns
xor
outsb
add
jnp
nop
xor
lock
icebp
push
das
add
movsl
xor
loopne
push
pop
add
push
cmpsb
pusha
jo
add
add
and
pop
push
add
lds
and
dec
sub
and
adc
sub
push
dec
jl
outsb
adc
and
inc
andl
mov
pop
push
cmpsb
mov
mov
fsubl
sub
push
sarb
lds
jae
mov
aam
adc
movsl
or
xor
aam
lahf
inc
sbb
incl
into
or
add
testb
lea
and
aad
xchg
adc
adc
xor
mov
xor
xor
xor
sub
fdivs
je
out
pop
and
in
push
cmp
and
inc
dec
mov
and
sub
push
inc
leave
add
and
push
cmp
enter
add
push
mov
movsb
dec
sahf
test
test
or
xor
stc
sub
rep
out
push
loopne
imulb
push
push
or
in
repz
or
loope
mov
push
push
cld
roll
mov
mov
xor
out
push
adc
enter
test
xchg
enter
sbb
sbb
mov
fidivl
pop
or
fimull
jmp
or
scas
xchg
out
or
or
or
lock
insl
inc
movl
adc
dec
adc
lods
xchg
xor
inc
adc
inc
rcll
pop
cmpsb
push
adc
lret
sub
pop
push
pop
pop
push
out
xchg
gs
pop
leave
and
into
xor
nop
pop
xlat
in
push
xchg
call
ds
jb
fstpl
int3
call
arpl
mov
xchg
fcom
es
xchg
add
gs
push
in
xchg
sbb
repz
push
in
sbb
push
cmp
scas
and
mov
rcrb
push
pop
mov
pop
xchg
xchg
out
mov
and
and
and
inc
and
cltd
es
inc
sahf
or
add
sub
in
sub
push
add
dec
pop
subl
mov
cmp
sub
push
xor
cmp
je
test
pusha
pop
xchg
inc
xor
ffreep
cs
xor
fs
push
jbe
push
dec
pushf
aam
cwtl
fs
xchg
cmpsb
dec
push
fsubrs
aam
inc
push
inc
call
dec
mov
xchg
jne
xor
sbb
fs
fstl
andb
jge
add
cwtl
sbb
in
cmpsb
les
lock
fucomp
add
or
jl
or
xchg
mov
or
push
add
inc
bound
sub
and
je
xchg
and
sbbl
jb
fsubrs
push
dec
notb
xchg
sbb
dec
cmp
cltd
add
sub
add
push
push
jb
or
std
sub
test
cli
adc
les
mov
je
cmp
push
cmp
pop
jmp
sbb
leave
xor
lods
push
ret
mov
adc
dec
cwtl
lcall
mov
mov
popa
or
fmull
xor
xor
sbb
mov
aas
lea
mov
inc
out
shlb
jmp
in
pushf
push
sahf
xchg
inc
clc
cmp
hlt
repnz
sbb
inc
cld
inc
repnz
fcomps
bound
push
sbb
or
inc
mov
out
mov
sbb
adc
arpl
mov
popl
lahf
cmp
dec
pop
ljmp
xchg
mov
cli
mov
or
dec
and
push
out
in
jbe
insl
or
push
movsl
sbb
js
xlat
add
dec
adcl
rolb
es
inc
mov
inc
movsb
inc
cmp
inc
adc
aas
mov
mov
and
cmp
adc
inc
mov
sbbl
jb
cli
jne
ret
shrl
or
adc
and
test
movsl
mov
mov
fimull
arpl
movsb
mov
or
xor
mov
xchg
push
pusha
scas
lods
add
clc
aaa
inc
lods
add
cltd
orl
movsb
xor
xor
inc
jb
mov
mov
push
sub
ret
aas
jl
jns
mov
add
push
shlb
xor
pop
lods
popa
mov
addb
rclb
mull
cmp
dec
test
inc
jns
aaa
cwtl
shlb
mov
jge
mov
mov
cmp
and
enter
ret
cmp
insb
inc
push
push
sub
push
pop
js
sbb
add
dec
call
xor
mov
lods
cmp
mov
mov
or
rcll
cld
sahf
mov
push
push
mov
sub
sbb
or
push
jecxz
inc
repnz
cld
mov
fs
push
jb
mov
test
xchg
andl
xor
pop
push
or
mov
pop
xor
jbe
inc
es
cltd
add
sbb
inc
lcall
xor
dec
mov
or
fmuls
pop
push
insb
std
fs
sub
sbb
inc
cld
sub
adc
sbb
insb
pop
sub
add
xchg
out
dec
and
and
add
dec
dec
into
inc
test
dec
dec
push
call
dec
loope
inc
add
stos
dec
loope
rcrb
test
testl
test
jns
and
and
inc
lcall
pop
dec
nop
cmp
add
cmp
and
sbb
jo
popa
jmp
faddl
std
inc
pop
lods
movl
sub
push
dec
sub
add
xchg
sub
adcb
dec
jne
stos
add
lods
sbb
sbb
sti
xchg
fstpt
and
loop
cli
and
je
pop
dec
push
test
sub
leave
xor
inc
xchg
sub
mov
push
or
jbe
int3
cld
enter
loopne
sbb
insb
rcll
loopne
add
lea
cmc
mov
fsub
sub
inc
adc
nop
or
sarl
rorl
bound
rcll
add
fdivl
mov
inc
adc
or
jne
dec
and
cmc
xor
aaa
add
add
mov
lahf
arpl
repnz
xchg
punpckhbw
inc
adc
cmp
sbb
pop
mov
test
ds
jmp
mov
mov
or
out
push
xchg
sbb
and
jae
call
sub
test
scas
js
pop
imul
and
adc
loope
je
push
add
pop
push
sbb
mov
ja
mov
rorb
iret
shll
sub
and
mov
push
adc
and
cltd
push
cmp
test
xchg
scas
push
mov
and
pop
jo
or
mov
repnz
xor
insb
cmp
pop
jns
adc
int
int
xchg
mov
test
adc
add
stos
xchg
mov
dec
das
push
loopne
mov
jl
cltd
push
push
adc
dec
lcall
aaa
jno
int3
pop
cmp
in
add
jae
add
xchg
cmp
add
cmp
push
aam
inc
or
xchg
and
push
ror
mov
jne
in
mov
clc
sbb
bound
push
jmp
dec
and
cmpsl
mov
into
adcl
add
lods
sbb
shrl
push
cmp
jae
in
xor
lret
pop
add
shl
out
sbb
mov
in
sub
fistps
cmp
stos
add
js
jle
popa
push
pop
inc
jne
mov
mov
adc
repnz
fs
mov
pop
xchg
clc
cmpsb
mov
dec
pop
sbb
aaa
addb
nop
add
pusha
sti
add
add
push
or
sbb
or
sub
add
sub
xor
sbb
nop
repz
inc
rorb
and
push
fnstcw
jmp
push
adc
sub
aas
push
mov
jo
push
sub
aam
ficomps
inc
inc
cli
push
lea
adc
aam
adc
daa
or
sbb
and
aaa
pop
sbbl
jl
xchg
adc
push
push
or
and
jg
lock
inc
jecxz
inc
pusha
jmp
gs
and
cs
mov
sub
add
inc
shll
xchg
dec
test
imul
lods
mov
cmp
std
or
sbb
push
mov
sbb
cmp
pusha
mov
ret
dec
sub
iret
sbb
icebp
inc
add
fiaddl
adc
adc
xchg
je
push
out
adc
lea
test
pop
dec
cld
push
pop
mov
sbb
push
xchg
dec
std
loopne
dec
movsb
aam
nop
adc
cmp
test
inc
aaa
test
jbe
sbb
arpl
mov
aam
es
les
add
aaa
pop
sub
frstor
sub
or
mov
xchg
mov
sub
popa
cwtl
andl
add
cmp
mov
push
js
loope
pusha
outsb
nop
rcrb
and
add
xor
xor
or
stos
mov
das
xchg
push
mov
mov
xchg
stos
ja
and
xor
inc
cmp
imul
cltd
cmpsb
push
add
and
jo
and
inc
inc
sbb
adc
lahf
ficoml
movsl
push
inc
sub
pop
adc
cmp
add
in
adc
imul
in
cmp
push
lcall
jo
pushf
xchg
cs
and
mov
sub
popa
and
sahf
inc
inc
xchg
adc
mov
sbb
pop
and
loope
sbb
or
sbb
pushf
or
inc
cmp
xchg
add
mov
out
mov
inc
cmp
jae
mov
xchg
or
xor
sarl
je
inc
cmp
jl
and
mov
jnp
sar
shlb
sub
and
dec
or
pop
mov
and
enter
mov
jp
inc
ret
xor
dec
ret
and
pushf
add
sarb
pop
adc
cmp
fmulp
push
aaa
xchg
mov
pop
add
sbbl
test
mov
add
mov
scas
lahf
inc
mov
dec
clc
sbb
add
sub
sti
lahf
ss
and
sub
cmp
jb
mov
fwait
ljmp
fsub
sub
mov
mov
loop
or
pop
out
pop
dec
push
jne
xor
and
lock
lahf
cmpxchg
fdivs
sub
jl
movsl
sbb
pop
nop
push
add
das
push
icebp
xchg
pop
pushf
popa
loope
push
sub
pop
sbb
fistl
loopne
popf
das
pop
add
dec
cmp
dec
cmp
fdivl
inc
lea
adc
add
add
mov
mov
dec
push
pop
pop
push
pusha
flds
adc
in
jo
add
insb
fstps
sub
data16
or
sbb
pop
add
or
sub
dec
or
and
adc
lcall
sub
or
xtest
adc
add
in
or
pavgb
pusha
into
and
dec
push
and
mov
or
sub
imul
in
pop
jns
sbbb
inc
insb
cmp
mov
add
fwait
sbb
jb
xchg
andb
sbb
test
xor
inc
xor
fadds
loopne
or
push
lods
neg
mov
sub
push
loopne
int
insb
insb
mov
push
or
add
cmp
mov
mov
mov
xchg
test
xchg
cmp
pop
hlt
ret
pop
shlb
jne
dec
add
lea
sub
sbb
add
test
cmpsl
test
icebp
mov
sbb
mov
orb
dec
jne
mov
jbe
les
mov
pop
mov
hlt
sub
cld
push
xchg
add
test
jle
mov
stos
add
xchg
cltd
dec
dec
in
lea
lods
insl
add
je
add
mov
jo
nop
cwtl
jp
test
sbb
icebp
dec
cli
in
sbb
fisttpl
push
cltd
add
push
enter
in
inc
enter
xor
add
and
push
mov
cmp
cmpsb
mov
or
pop
sbb
add
ljmp
mov
add
sbb
add
pop
dec
test
adcl
insb
inc
pop
jmp
andl
xor
jg
mov
adc
dec
adc
cwtl
jns
and
sbb
xor
lcall
or
xchg
les
js
jp
add
ljmp
push
inc
out
push
jns
mov
xlat
push
push
mov
mov
add
pop
mov
lods
add
xchg
popa
pop
aas
add
jo
add
test
aam
popf
sbb
push
mov
sbb
or
mov
mov
push
pop
add
cmp
je
cmp
je
cmp
sbb
cmp
je
push
je
arpl
push
in
or
loopne
sar
in
popa
mov
adc
add
push
mov
add
faddl
movsb
push
outsl
jae
insb
ret
pop
mov
fadds
inc
hlt
cli
in
push
mov
cmp
in
ret
adc
inc
shrb
mov
je
pop
dec
sbb
test
jecxz
hlt
mov
add
lds
inc
push
in
test
adc
lret
xor
adc
jo
movsb
jl
pop
lock
xor
dec
mov
pop
enter
sub
out
jns
adc
in
pushf
std
ljmp
adc
sub
movsl
mov
pop
and
nop
push
push
add
pop
pop
xchg
pop
push
add
outsl
mov
int
sub
jns
pop
xchg
push
shll
or
add
lods
sbb
inc
mov
loope
xchg
jge
jmp
orl
or
cmp
inc
faddl
inc
xchg
add
rol
push
xchg
xchg
scas
sti
inc
cltd
int3
sbb
insb
lret
loope
mov
add
push
enter
das
stos
lret
jne
fisttps
or
mov
mov
mov
mov
repz
aaa
mov
xchg
jl
sbb
push
movsb
call
sbb
sbb
inc
inc
push
mov
push
xorl
sub
pop
add
mov
int
pop
addr16
in
or
push
pop
int
scas
cmp
mov
es
jl
fs
mov
les
and
inc
les
adc
sbb
lea
loop
stos
jne
inc
and
scas
ror
or
call
xchg
lcall
std
aam
popa
imul
mov
loope
mov
sub
or
hlt
sub
and
inc
sti
and
cmpsb
je
xorb
ljmp
fmull
or
add
adc
clc
jb
cmp
mov
add
outsl
jo
test
into
sbb
mov
jbe
ret
cmpb
movsb
orl
jge
inc
xchg
inc
es
inc
inc
arpl
fcompl
cmpl
outsl
lahf
mov
aam
in
sub
jne
jmp
and
and
and
xor
lds
inc
imul
adc
xchg
mov
mov
rolb
sbb
pop
sbb
movsb
sbb
test
cmpsb
sbb
popa
call
sbb
mov
pop
dec
sub
cltd
dec
lcall
inc
mov
int
cltd
hlt
bound
lahf
lcall
mov
mov
pop
add
push
movsl
test
inc
jge
stos
adc
pop
jge
dec
jmp
les
inc
mov
out
mov
cwtl
imul
push
jb
lods
data16
mulb
sub
fsubrs
sbb
aam
jge
sbb
je
xchg
push
sub
push
xchg
mov
and
or
add
mov
je
pop
bound
idivb
push
cs
stc
jg
gs
ret
pushf
cltd
test
push
pop
mov
adc
mov
mov
mov
mov
xchg
add
xorl
ret
out
faddl
lret
lods
xchg
lds
and
xchg
outsb
pusha
push
cmpsl
stos
sub
int
or
adc
pop
xor
dec
test
std
sub
and
pop
popl
ret
jne
xor
pop
clc
xor
and
test
pop
add
roll
pushf
es
lds
test
push
outsl
jo
mov
push
sbb
inc
xor
stos
xor
andb
loopne
bound
push
cmp
nop
mov
cmp
roll
movsb
or
dec
xchg
xor
dec
fwait
mov
mov
and
xor
push
inc
fistpll
push
cmp
insb
jg
mov
adc
fs
addb
sub
mov
outsl
imul
arpl
pop
lea
or
push
add
ret
add
pusha
or
arpl
dec
std
test
add
mov
inc
stos
test
rcll
sub
lods
and
lret
imul
std
addb
sub
icebp
or
xor
out
adc
jl
xchg
clc
mov
sub
cmp
sbb
and
ss
je
fadds
mov
cmp
add
xor
add
pop
dec
dec
arpl
loope
and
sar
adc
inc
rorb
or
jl
xor
and
sub
into
loopne
and
or
ret
sbb
sar
in
lock
sub
fcoms
stc
push
outsb
insb
pushf
sbb
cmp
xchg
mov
test
fs
sbb
mov
jge
or
es
insl
mov
xor
cmp
jne
int3
jnp
push
sbb
jmp
test
adc
pop
mov
inc
repz
push
jnp
add
andb
bound
add
add
addr16
out
mov
lcall
mov
cltd
and
imul
ljmp
pusha
aam
inc
push
cmp
mov
les
jmp
and
jnp
cmp
jnp
and
pop
cs
ds
pop
dec
adc
addr16
outsb
jmp
je
into
jo
js
inc
in
cmc
and
sub
and
push
push
cmp
test
in
lods
daa
mov
mov
sbb
sub
dec
movsb
inc
into
dec
imul
or
cmp
repnz
clc
aad
add
sub
js
cmc
pushf
pop
adc
push
sbb
inc
pop
mov
or
movsb
scas
xchg
jecxz
push
ss
xor
out
pop
inc
xchg
sbb
stc
bound
xchg
jle
adc
and
mov
mov
ret
push
jmp
pop
add
pop
cmpl
mov
xor
aaa
popf
ss
icebp
push
push
push
push
pop
mov
mov
push
push
inc
add
lret
sbb
inc
rorb
pop
jo
jnp
push
or
pop
mov
lea
in
adc
pusha
test
shr
xchg
sub
push
cmp
fiadds
jmp
cmp
inc
add
inc
shlb
push
pop
test
nop
push
jl
push
fbstp
rcr
and
or
inc
dec
add
adc
in
lahf
nop
repz
mov
sub
xor
dec
cmp
or
fisttpl
push
adc
and
or
push
cmp
push
pop
stos
or
addr16
and
pushf
shl
loopne
cmp
or
push
cmp
jg
jns
add
push
jle
daa
or
shr
es
clc
jo
and
jnp
sbb
sbb
enter
ret
mov
fcompl
cmp
xor
shrb
push
xlat
dec
test
call
cmp
or
cmp
sbb
push
shlb
cmpsb
add
mov
add
inc
inc
cmp
inc
mov
aad
and
sbb
mov
pop
cmp
push
idivb
inc
pushf
inc
pusha
ffreep
mov
xor
sub
pop
sub
das
or
mov
sbb
ud1
push
add
inc
inc
dec
outsl
push
cmp
ret
or
mov
dec
push
enter
lods
ja
lea
lret
mov
or
int3
sti
adc
push
jne
adcb
dec
cmp
movsl
jle
push
add
push
lods
mov
lea
xor
adc
push
xlat
push
mov
aas
loopne
dec
adc
or
dec
push
add
jnp
jp
ret
sub
jcxz
jo
imul
enter
mov
or
test
cmp
adc
hlt
inc
or
inc
pop
add
xor
or
nop
or
testb
xor
gs
pop
or
add
or
mov
jmp
push
add
les
adc
mov
rcrb
repnz
adc
add
test
xor
lea
or
or
pop
xchg
sub
aas
inc
and
xor
inc
test
nop
add
imul
pusha
flds
or
xor
push
push
jo
mov
jg
or
leave
and
push
stos
lock
push
push
and
lock
nop
xchg
mov
jl
dec
ljmp
push
pusha
cmp
and
cmp
and
mov
test
or
cmp
lods
sbb
cmp
fadds
cmp
inc
xor
test
pop
xor
je
mov
in
mov
cmc
test
lret
rcrl
push
or
adc
sbb
push
mov
testl
adc
xor
pusha
shrl
add
fs
and
bound
loopne
test
or
adc
pop
or
mov
pusha
dec
adc
pop
xor
lds
test
mov
icebp
sbb
call
ja
sub
add
mov
xchg
add
sbb
pushf
mov
call
mov
shlb
sbb
adc
xor
and
out
sub
sub
xor
icebp
mov
ja
adc
pop
scas
mov
lods
sbb
sbbl
pop
add
sbb
add
mov
iret
lahf
sbb
lcall
and
and
sub
shll
mov
jmp
push
dec
movzwl
dec
pop
cmpl
push
push
cmp
movzbl
push
imull
push
inc
inc
mov
push
push
lods
mov
and
mov
aam
push
sbb
add
adc
jl
add
in
mov
loopne
dec
in
add
andb
push
push
push
cmovbe
loopne
and
jmp
push
push
push
cmp
inc
ret
jg
jle
push
jne
adcb
or
inc
lds
in
jl
mov
test
sub
cmp
inc
xchg
xor
sub
and
dec
inc
xchg
sbb
lods
mov
lods
sub
bound
cmp
dec
es
push
inc
mov
mov
lods
and
jne
push
into
adc
sub
dec
push
loope
push
push
jecxz
shrb
imul
shll
mov
or
add
mov
inc
pop
or
mov
dec
mov
sub
cwtl
mov
push
sti
cmp
sub
dec
imul
adc
sbb
adc
inc
ds
pop
sub
cltd
cmp
dec
push
push
push
cmc
xor
xor
add
inc
add
cmp
mov
mov
jo
add
inc
shll
jge
and
js
inc
xor
insb
fldt
sbb
inc
inc
xor
ret
shrl
cmp
pop
sbb
push
test
pop
ficomps
js
insb
arpl
xchg
sbb
aam
dec
xor
mov
pop
stos
lcall
push
push
movsb
mov
pop
cwtl
xchg
push
cwtl
or
or
adc
push
sbb
fistl
inc
inc
cmp
xor
and
mov
mov
add
iret
push
rclb
js
inc
pop
rcrb
daa
jno
push
clc
shlb
or
ljmp
aas
add
and
xchg
mov
data16
adc
sub
sbb
ficoml
inc
and
lods
rcl
mov
out
xchg
mov
test
imul
mull
mov
jg
popa
add
mov
ficoml
xor
adc
and
dec
xor
ja
mov
mov
sar
test
ret
jo
mov
sbb
mov
jmp
mov
out
fdivrl
inc
jo
ss
inc
jecxz
mov
cwtl
out
insl
ljmp
shll
roll
cmp
sub
push
dec
lret
lds
ficoml
add
fwait
or
push
or
pop
lea
jg
inc
in
mov
cmpb
xchg
jne
adc
insb
xchg
cmpsb
repz
sbb
pop
mov
xor
and
leave
jl
add
cltd
je
cs
rorb
push
sub
add
call
and
adc
pop
or
jnp
add
imul
mov
adc
sbb
rcl
push
iret
sbb
je
test
pop
cmp
mov
dec
xor
xchg
test
xchg
lods
pop
cs
xchg
leave
sub
call
ss
fwait
sub
rolb
inc
and
fiaddl
sbb
pop
out
jo
adc
and
push
sub
cltd
mov
push
add
mov
sbb
jge
ficoml
and
cmp
in
add
xchg
popf
push
push
pop
or
jmp
rclb
add
arpl
and
andb
pop
push
and
push
dec
ret
push
lret
xor
push
or
jno
jg
movsb
sbb
sbb
add
and
add
dec
push
imul
imul
push
cmpsb
pop
push
pop
xor
pop
jne
dec
pop
sbb
jne
iret
add
jmp
nop
adc
cmp
jno
repz
jg
pop
add
jbe
fsubrs
shrb
fmuls
push
aas
push
imul
jg
outsl
sub
orl
movsl
dec
inc
sbb
popa
shl
dec
rcl
push
xorb
js
mov
add
pop
add
pusha
add
dec
sbb
adc
sbb
and
inc
push
sarb
mull
test
rcrb
push
jl
js
mov
add
mov
pop
fcmovne
and
fwait
sbb
popf
dec
mov
push
mov
mov
sbb
dec
or
or
test
mov
xorb
je
pop
inc
xor
jl
xchg
push
and
loopne
push
push
test
adcb
and
xor
js
sub
dec
lcall
xchg
lea
push
pop
std
loope
or
xchg
scas
js
xlat
xor
inc
mov
or
sbb
test
pop
jae
xchg
sbb
pop
pop
sub
lret
xchg
xor
sub
adc
in
cmp
mov
push
aaa
or
sub
mov
cs
pop
pop
push
inc
inc
sbb
dec
or
shrb
seto
inc
cs
sub
xchg
cmp
cmp
xchg
push
dec
adc
inc
leave
mov
dec
stos
and
data16
inc
loopne
push
in
adc
data16
sbb
adc
pop
jb
call
add
adc
adc
add
test
xor
cmpsb
mov
adc
daa
shrb
push
adc
mov
mov
xor
cmpsl
jmp
pop
sti
fcomps
mov
pop
mov
or
ds
ror
push
test
push
dec
dec
fld
sahf
xchg
push
inc
cmp
push
sub
movsb
outsb
sub
addr16
repnz
enter
pop
push
orb
aas
dec
mov
in
test
xchg
or
subb
adc
test
lcall
repnz
stos
mov
int3
adc
pop
jb
adc
and
and
push
mov
push
mov
push
sbb
or
push
aam
jne
pop
test
insl
shll
lock
loopne
stos
outsl
jg
mov
pusha
and
fimull
rolb
mov
loop
pop
inc
dec
xchg
push
shrl
xor
inc
shlb
or
xchg
jl
inc
insb
jo
mov
mov
sub
aas
push
or
call
sub
xor
push
lret
xchg
xor
mov
bnd
dec
sub
aad
adc
inc
das
incl
add
inc
add
inc
sahf
ss
sbb
push
pop
ss
dec
or
test
or
xchg
inc
and
push
mov
and
add
pop
mov
cs
xchg
and
call
das
int
negl
push
inc
ds
pusha
push
add
fnsave
imul
in
pop
sbb
pop
imul
lods
ljmp
and
and
xlat
jl
and
in
pop
adc
inc
xor
jle
add
scas
add
shrb
mov
adc
mov
int
sbb
inc
cmp
mov
and
pop
outsb
add
pop
arpl
and
cmpsl
sbb
test
inc
sub
jg
mov
mov
fcoml
and
mov
push
out
jno
or
cmp
sub
adc
add
out
lret
lahf
filds
lahf
addr16
lret
jge
aaa
sarb
sarl
xchg
addr16
movb
push
pop
sub
xor
out
sub
adc
in
push
xchg
sahf
xchg
or
and
sub
sbb
xchg
push
sbbl
test
je
cmpb
dec
push
std
stos
and
mov
mov
push
js
cmp
push
push
rol
shrb
sub
notb
cmp
inc
repz
pop
fsubrs
es
pop
std
aam
ss
cli
push
sub
pop
fsubrl
pop
xor
adc
fcoms
or
shll
inc
sbb
pusha
inc
cmp
mov
pop
je
lret
call
add
push
xchg
rol
push
cs
sbb
clc
sbb
pop
ret
jl
sbb
sub
out
push
mov
sbb
xlat
xor
out
inc
loopne
jo
or
je
div
sub
add
jne
je
cmp
sbb
dec
popa
mov
or
test
rclb
fimull
cwtl
add
pop
or
cs
and
inc
test
in
negb
fstl
sub
jns
fistpl
sbb
mov
icebp
stos
dec
les
sbbb
adc
jl
mov
add
sub
pop
or
mov
push
mov
adc
bound
sahf
mov
and
repnz
pop
loopne
push
pop
mov
mov
ljmp
test
inc
lcall
sahf
into
int
or
sbb
sub
cmp
jp
add
stos
out
mov
jl
neg
rorb
sub
cmpsl
jge
call
adc
xor
push
adc
mov
sub
mov
aaa
neg
or
cmp
fisttps
or
cmpsb
stc
es
jl
xchg
sahf
cwtl
jne
jp
xor
lods
inc
or
mov
and
sahf
xchg
dec
fldenv
adc
aas
sbb
and
adc
and
or
pop
lds
and
jae
ds
hlt
or
and
add
movsl
mov
loop
jp
or
pop
cmp
loope
adc
push
call
push
cwtl
inc
mov
add
mov
inc
xor
mov
or
out
and
bound
lcall
and
lea
bound
repz
jb
push
inc
nop
loope
add
mov
jg
sub
fildl
mov
push
fadds
jno
fstps
add
mov
add
inc
flds
int3
lcall
jno
cwtl
hlt
mov
adc
jne
cmpsl
nop
popa
inc
cmp
pop
clc
push
or
cmp
xchg
push
jle
or
inc
and
adc
push
incl
xchg
pop
add
push
nop
aad
push
xlat
inc
loopne
xor
test
and
rol
loop
mov
add
js
push
sub
mov
ss
and
jns
push
mov
mov
call
adc
std
into
add
fcoml
mov
imul
adc
or
rcr
xchg
fcompl
cmp
into
cmp
jbe
test
adc
psubsw
xchg
mov
sbb
add
or
push
outsl
fldcw
movsb
sub
or
insb
inc
jbe
jae
aad
sub
pop
jne
push
pop
pop
mov
adcb
lret
adc
jg
sbb
flds
flds
cmp
les
sub
fmulp
lret
leave
iret
sbb
push
sbb
sub
fmuls
push
sbb
pop
out
dec
inc
sbb
jae
adc
lock
sbb
fdecstp
xor
mov
test
and
pop
sbb
add
mov
adc
cmpl
or
mov
cmp
jne
lcall
add
push
or
leave
push
cmp
pop
inc
repnz
mov
jl
cmp
sub
jae
fcomps
xor
cmp
push
test
sub
fs
insb
rcr
add
push
push
icebp
jge
mov
jmp
es
scas
les
cmc
lret
jmp
mov
sarb
xchg
adc
mov
cwtl
stos
add
ja
insl
es
adc
iret
push
dec
push
test
enter
addl
or
sub
daa
push
adc
data16
push
push
and
pop
push
pop
or
push
fidivs
shrl
cmp
mov
xchg
cmp
mov
push
call
aaa
and
push
mov
and
ds
add
in
test
dec
mov
and
push
xchg
xchg
fdivrl
push
push
lds
daa
push
mov
adc
xor
xor
leave
cmp
pop
ret
push
lea
punpckhdq
pop
js
lock
push
stos
ljmp
jmp
outsl
dec
sub
or
stos
push
sub
clc
mov
call
or
rorb
xor
js
mov
push
cld
mov
cmp
je
sbb
mov
pop
or
push
push
jmp
jae
out
mov
mov
loopne
adc
mov
cmp
jmp
jmp
fistpll
cmpb
jg
add
push
call
insb
dec
add
cwtl
popf
mov
outsb
xchg
add
push
rorl
mov
dec
jge
shrl
xor
jne
and
out
sbbb
inc
pop
jecxz
mov
mov
push
add
andl
clc
iret
or
jl
cmpl
cmp
cmpsb
jmp
inc
sbb
ds
add
inc
movntps
test
or
ret
or
mov
lahf
mov
adc
mov
push
push
call
xor
imul
mov
cmpl
rcll
or
inc
add
cmp
inc
mov
or
mov
mov
rol
clc
sbb
pusha
mov
scas
dec
addl
hlt
test
jg
pop
push
push
loopne
lea
push
push
or
adc
jl
mov
jge
or
push
in
or
adc
adc
scas
test
or
adc
pop
imul
leave
add
lds
jmp
enter
jecxz
cmpsb
pop
mov
lret
sbb
je
mov
mov
jmp
pusha
or
and
lock
jo
mov
add
push
mov
add
push
sbb
mov
in
pusha
jnp
dec
xor
pop
incl
je
jmp
add
push
js
xlat
sub
popa
outsb
push
push
add
mov
mov
sbb
pop
sub
xor
sbb
and
sub
push
call
jne
pop
add
push
xor
push
test
pop
cld
les
inc
xchg
cmp
js
adc
call
in
insb
ja
or
adc
and
ds
xchg
mov
and
mov
add
rcrb
hlt
jo
dec
mov
and
mov
aaa
push
lahf
mov
and
icebp
mov
mov
hlt
xor
dec
cmc
loopne
repnz
and
mov
das
add
mov
in
mov
mov
outsl
jne
add
cld
adc
push
ljmp
xor
nop
adc
push
hlt
out
js
push
mov
cld
subb
fcmove
cmp
fiadds
lea
cmp
jnp
int3
mov
out
mov
add
push
push
icebp
pusha
dec
rolb
dec
aam
bswap
or
cmp
cmp
sbb
adc
add
leave
adc
lock
subl
fwait
inc
pop
mov
lock
jb
mov
lea
sub
jo
or
push
push
mov
sub
jne
mov
leave
call
std
mov
inc
in
mov
mov
rolb
or
sub
pop
aam
add
adc
ret
inc
cmp
jno
data16
mov
xchg
fsts
mov
mov
push
dec
cmpsb
sub
or
pop
lret
iret
dec
movb
dec
sti
or
mov
cwtl
nop
cmpsb
pushf
push
mov
popa
sub
mov
add
inc
or
mov
push
cmp
or
cwtl
adc
push
ss
pop
push
in
sub
push
cmp
inc
mov
jle
cmp
pop
xchg
push
and
push
das
pop
int
mov
pop
mov
inc
push
in
pop
pop
ret
rcr
or
fxch
fst
or
lds
xlat
push
ror
and
sbb
mov
inc
stos
jmp
pop
loopne
fdivrs
cmp
in
push
stos
rorl
dec
into
jae
clc
call
in
push
lret
inc
bound
push
adc
xchg
cwtl
xor
mull
shrl
ds
adc
inc
lea
sub
add
sti
gs
mov
sub
idivb
add
mov
push
cli
pushf
sub
dec
test
jge
add
push
cmp
dec
jmp
popf
fidivl
cmp
push
xor
shrl
testl
ljmp
loopne
cmp
sbb
mov
loop
cld
push
clc
pop
add
xchg
shlb
push
adc
adcl
adcb
jge
inc
test
or
push
pop
scas
out
add
cmp
push
jmp
adc
xchg
data16
in
adc
sub
sbb
sub
dec
and
shl
pushf
mov
test
inc
xchg
xchg
sbb
sarb
inc
and
les
push
ret
sub
push
add
cltd
cmpsb
fistl
lea
loopne
push
xor
pusha
in
sub
xor
pushl
or
mov
mov
mov
loopne
push
dec
sbb
adc
sbb
pop
cmp
push
addl
xchg
mov
add
xorl
lret
push
cmp
sahf
data16
push
push
push
lea
aaa
dec
xor
loope
push
mov
inc
adc
sbb
mov
add
je
push
cmp
pop
les
int
push
dec
sub
mov
imul
pop
out
mov
pusha
sbb
xor
inc
ret
mov
jnp
mov
cmp
mov
mov
leave
mov
jbe
fmull
mov
loopne
add
mov
cmp
xor
test
ret
or
dec
xor
mov
mov
push
lret
lock
lahf
xchg
or
dec
arpl
xor
mov
lock
pop
sbb
loopne
stos
xchg
inc
sbb
adc
pop
cmp
pushf
stc
and
xchg
loopne
cmp
push
jmp
fwait
mov
or
rclb
enter
add
out
je
mov
add
and
leave
sub
clc
or
xor
jl
and
fisubl
mov
fldl
pop
in
call
mov
xor
mov
xchg
imul
mov
add
rolb
xchg
repnz
popf
cmp
fs
in
and
sbb
xchg
jecxz
std
std
in
out
adc
mov
mov
xor
std
ss
jo
test
mov
and
dec
test
mov
js
mov
inc
inc
and
push
cmp
sbb
pop
std
mov
cmp
fadd
icebp
loope
push
bound
jno
roll
pusha
push
enter
xor
in
aas
or
jae
inc
add
push
jae
arpl
das
iret
add
push
iret
mov
inc
or
push
or
mov
insb
jne
or
cmp
push
push
decb
or
add
test
test
cmp
je
call
push
rcr
std
mov
pop
cmp
je
mov
frstor
mov
cmp
je
push
hlt
adc
pop
fidivs
push
or
fdivrl
jle
push
push
push
mov
and
push
inc
mov
push
lods
push
movb
stos
popf
sbb
pop
mov
add
call
mov
inc
pop
jb
push
push
pop
call
xchg
rorb
dec
inc
add
inc
lret
movsb
xor
push
loopne
and
pop
push
shlb
sbb
push
out
cmp
sub
xor
xor
inc
add
fs
inc
jnp
jae
add
arpl
sbb
int
addb
stc
leave
pop
cmc
aas
test
cmp
jne
add
mov
add
ja
or
mov
mov
outsb
push
mov
mov
mov
sub
jg
add
cmp
lret
repnz
or
pop
inc
or
jb
sbb
shr
xor
pushf
outsb
hlt
add
mov
mov
mov
pop
jo
scas
sbb
rcrb
push
and
ret
mov
adc
sahf
or
add
lcall
fs
imul
mov
fmuls
fsubr
mov
jle
cmpsb
cwtl
mov
or
cwtl
aam
out
push
mov
inc
int3
rol
stos
inc
mov
scas
shlb
push
and
pop
les
out
into
xchg
add
xchg
int
sbb
add
push
sub
pop
imul
add
fadds
sbb
or
sbb
add
nop
je
insb
sbb
pusha
stos
sbb
inc
push
lcall
push
add
js
rclb
mov
cmp
jne
adc
and
call
ret
jo
js
pop
jo
enter
data16
add
outsb
dec
pcmpeqw
sub
ret
adc
sbb
fucomi
pop
add
sub
popa
add
mov
dec
data16
js
lret
sbb
and
mov
sub
or
sbb
ror
pop
or
or
or
xchg
mov
ja
sbb
stc
add
mov
inc
shll
mov
insl
ret
or
mov
mov
ret
nop
test
imul
push
scas
push
pop
push
ret
mov
mov
adc
shl
mov
inc
and
adc
pusha
not
loopne
cld
incl
add
pop
jo
shll
jo
rol
ljmp
mov
add
stc
loopne
sbb
jl
xchg
mov
mov
add
or
subl
into
push
out
lret
sbbb
clc
or
popf
inc
in
ret
inc
sbb
daa
clc
fnstenv
jp
fnstcw
adc
or
sbb
add
in
mov
das
or
incb
mov
out
add
dec
mov
stc
or
mov
pop
in
stc
xchg
mov
out
cltd
imul
fsincos
dec
sub
add
mov
fldt
xchg
pop
dec
pop
mov
stc
cmp
adc
ss
push
dec
lock
stc
je
icebp
jne
ds
rcll
xorl
ss
movsl
dec
fwait
pop
lahf
xchg
or
sub
call
pop
dec
sub
and
ja
mov
and
add
add
in
push
mov
push
or
adc
rclb
nop
iret
push
or
inc
push
mov
mov
pop
cmp
mov
movsl
cmp
sub
pop
scas
or
jmp
cmp
xor
cwtl
dec
pop
cwtl
adc
popf
sbb
mov
mov
pusha
arpl
push
aam
sub
or
orl
push
jp
add
adc
adc
outsl
or
out
fsubrl
xor
push
or
in
outsb
mov
loop
mov
pop
subb
inc
enter
pop
mov
enter
xchg
call
or
call
mov
mov
mov
sbb
mov
unpckhps
icebp
fmul
xor
and
mov
or
mov
and
sbb
out
orb
int3
lock
sbb
add
or
mov
sbb
and
sbb
lods
flds
nop
gs
or
xorl
and
pusha
insb
insb
push
and
xor
loope
mov
insb
aaa
mov
int
add
les
xchg
ret
ja
mov
div
es
cmp
negb
adc
loope
imul
add
mov
nop
das
mov
mov
add
iret
je
push
daa
dec
cmp
lods
fdivs
rclb
sti
push
sub
movsb
add
jmp
lea
insb
clc
repnz
dec
and
enter
sub
push
imul
lock
cs
dec
cs
lock
jmp
push
cmpsl
jbe
test
addb
push
adc
adc
sbb
cmp
fs
add
shlb
mov
and
push
mov
into
add
push
mov
lods
mov
into
lea
mov
sub
inc
shll
cs
testb
xchg
mov
je
xorl
xor
pop
dec
push
sbb
sbbl
cmp
sub
add
adc
bound
popf
fmull
xor
clc
ret
or
inc
mov
mov
mov
scas
call
mov
sbbl
xchg
mov
adc
xorl
insb
clc
push
push
ret
or
sub
cli
xchg
xor
mov
inc
mov
cs
add
xor
insb
cmp
dec
jnp
outsl
adc
outsb
and
xor
lds
xchg
add
or
xchg
rorl
pusha
mov
aaa
test
pushf
cwtl
fidivrs
push
stos
sub
and
clc
outsb
test
sub
jo
cmp
je
jns
and
xchg
fmulp
pop
shll
cwtl
dec
push
lea
push
pop
cwtl
push
adc
nop
ret
add
lea
pop
sbb
sbb
dec
push
or
add
outsl
sbb
lods
rorb
lods
add
adc
xchg
fcoms
cli
subb
js
or
out
xchg
pop
xor
pop
rolb
or
popa
lock
dec
jne
push
xchg
inc
fs
mov
push
call
outsl
lds
pop
arpl
and
mov
add
sbb
and
or
aad
mov
fdivrl
idiv
mov
sbb
or
cmp
lock
and
adc
pop
lods
inc
jl
and
jbe
and
xor
xlat
std
cmp
je
aaa
jns
jle
testb
mov
and
fidivrs
sbb
jg
adc
test
push
cmp
mov
call
pop
xchg
sbb
outsl
pusha
pop
cmp
add
ljmp
mov
adc
and
pop
or
in
inc
push
push
or
pop
sbb
xchg
xor
jecxz
lock
js
adc
mov
in
cmp
cmp
push
mov
inc
jo
clc
aad
or
mov
lock
pop
add
lea
movsb
push
xlat
pusha
cli
cmpsb
cmp
cmp
adc
or
or
dec
jge
lret
cmp
sub
fsubr
mov
pusha
test
mov
pop
fdiv
adc
pop
in
jle
cmp
xchg
sarb
mov
jo
lea
aaa
addr16
fwait
pop
fs
arpl
push
in
mov
loop
xor
pop
mov
movsl
xor
sbb
xor
cmp
mov
pop
adc
ret
pop
es
out
jo
push
cli
dec
mov
push
add
rcl
mov
loopne
fcmovbe
xor
push
mov
test
jb
mov
jecxz
das
inc
cmp
cmc
test
sahf
mov
ss
sub
test
add
sbb
arpl
mov
movzwl
sub
jne
jne
inc
mov
jae
and
in
add
push
mov
or
cs
or
test
fstl
jnp
cmp
push
or
jmp
outsl
lea
push
push
cmp
jmp
fs
inc
es
push
sub
fdivs
add
and
dec
pushf
add
les
add
inc
sub
or
fisubrs
test
adc
or
cmpsl
addr16
sbb
or
sub
stos
sbb
daa
or
or
push
aam
js
aaa
sbb
addr16
add
and
mov
cli
push
sbb
cmp
sbb
imul
fnstcw
lods
shrl
in
in
pop
outsl
cld
cmp
xor
push
cmp
xorb
cmpsb
leave
push
pop
shr
lcall
or
push
inc
xor
mov
test
mov
clc
lock
decl
xchg
popf
xchg
xchg
lods
cs
cmp
rdmsr
sarb
ret
inc
popf
mov
testl
addl
call
mov
mov
shlb
adc
jo
bound
scas
pop
mov
test
rcr
xor
add
inc
mov
or
or
inc
push
and
sub
cmp
fmull
cmp
sub
dec
or
mov
lret
mov
push
and
filds
mov
sub
fs
enter
seto
mov
ficompl
rclb
xor
or
xor
and
ljmp
cmp
adc
subl
cmp
inc
insb
js
push
adc
je
xor
arpl
pop
les
cmpxchg
dec
and
and
cwtl
test
insb
addb
xor
mov
dec
rcrb
clc
andl
pop
js
pop
rolb
lret
inc
outsl
dec
adc
aas
sbb
inc
jmp
fnstenv
mov
jne
mov
call
inc
lea
mov
sbb
or
pop
mov
fcom
push
push
mov
cmp
push
lcall
das
mov
push
inc
push
jns
inc
fisttps
pop
push
push
add
mov
jb
or
inc
andl
adc
push
sub
pop
cld
sbbb
je
cltd
cmpsb
jmp
inc
les
outsb
inc
or
adc
pop
jecxz
xor
xor
in
mov
push
xchg
dec
outsb
mov
rsqrtps
cltd
adc
xor
xor
movb
lods
dec
push
jb
push
sbb
les
add
and
cwtl
outsb
enter
add
mov
push
test
xor
xor
clc
and
cmp
or
xor
jl
inc
loope
push
or
push
sub
and
sbb
add
push
cld
adc
jmp
add
loopne
insb
dec
dec
adc
outsb
js
adc
push
inc
pusha
dec
push
push
adc
inc
push
add
lahf
and
fdivs
lods
pushf
pop
imul
test
addl
lret
jmp
pop
in
shrb
xchg
movsb
pop
inc
cs
xor
shll
mov
loop
fsubrs
inc
or
dec
iret
cmp
cmp
cmp
jmp
shrl
xor
add
std
bsf
sbb
testb
je
and
or
mov
out
and
icebp
add
mov
xor
and
xor
xchg
jbe
orl
movzbl
mov
mov
dec
or
xchg
popa
pop
cltd
push
mov
mov
mov
test
loopne
lret
dec
jae
push
mov
sbb
test
shlb
add
mov
test
and
loope
in
mov
leave
and
cmp
adc
inc
add
shll
add
or
add
mov
mov
ret
mov
lock
mov
and
mov
xor
add
sbb
xchg
push
cmp
fdivs
push
fistps
xchg
movsl
mov
xor
cmp
inc
inc
es
cwtl
jle
imul
mov
and
push
movhps
cld
mov
sub
jmp
lock
push
dec
into
stos
and
shlb
and
fs
addr16
mov
nop
jmp
in
mov
ret
mov
rcrl
push
pushf
pushfw
xor
jnp
inc
xlat
adc
aad
insl
int
repz
test
rcl
mov
add
or
mov
stos
and
pop
arpl
sbb
add
pop
into
ss
dec
aaa
dec
push
jo
jmp
xor
add
insb
movsb
mov
push
push
pop
cmp
dec
mov
cltd
idiv
inc
adc
stos
sub
popa
movsb
inc
mov
cwtl
add
jo
mov
inc
or
fcoms
data16
popa
mov
cmpb
xchg
push
out
push
inc
and
jbe
or
jne
shlb
mov
orb
xchg
cwtl
push
xchg
dec
mov
cmp
add
and
or
fists
addl
jo
test
mov
addb
push
mov
push
lock
inc
movsb
adc
cmp
pop
icebp
int
andl
sub
inc
sbb
xor
outsl
inc
sbb
ljmp
cmp
adc
mov
test
lea
loopne
stos
mov
xchg
les
mov
jo
in
add
cmp
shrb
xor
shlb
inc
or
adc
cmp
ss
xor
movb
cmp
fldcw
and
je
mov
das
movsl
inc
dec
dec
push
hlt
dec
push
xor
sahf
fimuls
jae
out
add
xchg
lret
add
scas
xor
repz
insb
lcall
ret
lods
xor
xor
dec
push
push
mov
dec
insb
add
fdivrs
xor
mov
sub
sub
lods
adc
sbb
daa
cmp
or
add
adc
sbb
mov
cmp
jne
pop
loopne
xor
loope
push
add
rolb
pop
testb
jg
rclb
xor
push
shrb
stos
push
and
mov
test
cmp
arpl
rcrl
aas
mov
xlat
fdivl
xlat
cmpsl
xor
push
bts
js
ficoms
inc
cli
push
cld
xabort
repz
push
repz
cli
test
pop
adc
inc
insb
shr
sarb
test
mov
or
add
cmp
jle
adc
adc
outsl
adc
aaa
sbb
xor
stos
pusha
insb
std
mov
icebp
decb
adc
out
xchg
js
fldenv
jae
mov
sub
lcall
lock
js
lock
dec
pop
add
mov
sbb
mov
xor
loop
out
movsb
push
sbb
push
pop
adc
es
ja
sub
lret
xchg
push
mov
lock
jmp
in
mov
in
sbb
dec
insb
or
les
mov
int
mov
sbb
js
push
pop
xchg
dec
push
dec
mov
inc
andb
shlb
push
int3
inc
push
lcall
adc
jge
jmp
mov
testb
cmp
add
adc
push
insb
sbb
pop
arpl
test
xor
bsf
fdivrs
rcrb
movb
call
push
cmp
mov
adc
rcrl
sbb
mov
daa
add
shr
movsb
das
xor
or
pop
lds
push
fimuls
push
sub
push
pop
mov
sbb
push
lea
pop
lock
mov
push
sub
dec
je
aaa
jbe
adcb
or
outsl
jo
sub
cli
jmp
pop
sub
add
add
or
xchg
jns
mov
adc
xor
fisubl
xor
lods
gs
scas
or
shlb
call
dec
pop
loope
adc
lcall
cs
jno
iret
stos
push
pop
into
arpl
insb
dec
pop
mov
cmp
and
cmp
popa
xor
lds
rorb
add
scas
in
pushf
xchg
adcl
push
outsl
dec
cmp
test
add
dec
int3
movsb
push
insb
push
push
loope
cmp
push
push
pop
sbb
cmpsb
sub
cwtl
push
push
add
dec
lods
imul
and
pop
fs
jp
or
inc
jae
popf
pop
or
or
cmp
sub
jno
inc
pusha
idivb
xor
adc
aaa
lret
mov
lcall
jnp
inc
aam
out
pop
stos
cmp
lahf
lods
pop
or
mov
or
sbb
push
pop
mul
fs
repnz
into
lret
mov
cmp
or
inc
or
imul
aam
mov
jbe
call
loope
xchg
or
or
cmpsb
mov
aaa
sbb
xor
or
outsl
sbb
or
xchg
lock
add
mov
pop
inc
push
aam
into
or
sbb
popf
addl
sub
mov
jl
je
add
jge
cltd
shl
inc
mov
testl
ret
lock
test
xor
xchg
fldl
pop
or
jl
push
ret
rorl
jecxz
sbb
cmpsb
add
es
loope
mov
ds
inc
jo
mov
aas
sub
xchg
push
jae
push
mov
in
fisubl
popf
sti
and
jl
movl
pop
pop
push
push
add
dec
sub
mov
aas
add
and
insb
xor
rolb
jb
shrb
xchg
add
add
fwait
cs
mov
shr
mov
sbb
push
popa
xchg
ss
rolb
aaa
push
testl
mov
shll
push
test
pop
cmpl
mov
mov
andl
sti
and
mov
pop
jp
popf
mov
pop
lods
push
cmc
cmpsl
mov
lahf
adc
lret
mov
bound
sub
jb
xchg
test
and
ret
in
sahf
sti
sub
xor
xor
cmp
xchg
xchg
test
test
addr16
push
cmc
add
cmp
inc
in
mov
lret
dec
lret
or
fstps
pop
xchg
mov
or
scas
jo
inc
push
push
sub
or
pop
pop
dec
mov
mov
cld
pushl
push
push
or
dec
cmp
push
les
loopne
add
ret
testb
cmp
xchg
and
mov
cmp
xchg
testl
and
pusha
gs
outsl
out
ret
outsl
or
sti
dec
ja
je
or
je
or
sub
xchg
adc
jo
movsl
adc
les
in
or
add
xor
jne
adc
or
jnp
mov
push
jmp
cmp
in
je
push
adc
adc
dec
xor
inc
adc
inc
jle
bound
cmp
add
inc
or
jbe
lahf
jbe
stos
dec
jmp
lods
push
push
adc
mov
adc
outsb
dec
dec
inc
mov
clc
test
cli
gs
add
je
mov
sub
in
inc
ret
push
pop
or
adc
xchg
pop
adc
in
and
push
xor
rcrb
and
mov
pusha
add
add
xor
xor
lahf
sub
les
in
push
mov
dec
je
sub
sub
pop
jg
add
clc
add
pop
add
push
adc
ljmp
or
mov
or
push
adc
inc
sub
push
pop
jo
addb
sti
and
mov
pusha
mov
mov
or
ja
xorl
and
mov
pop
stos
nop
jns
or
or
add
cld
and
inc
out
push
ss
dec
cli
shll
cmp
pop
das
jge
adc
leave
sub
fcoml
push
sub
push
push
push
stc
sti
je
and
sub
pop
mov
inc
push
inc
mov
clc
mov
or
ror
jo
add
push
scas
fcomp
movsb
jb
mov
ret
ss
xchg
mov
inc
and
jecxz
and
xchg
add
sub
outsl
enter
xchg
xor
xchg
sti
jo
xchg
sub
loope
sbb
movsb
mov
scas
xor
or
inc
dec
add
scas
outsl
lea
jge
sub
cmpsl
push
cltd
mov
imul
mov
ljmp
cld
push
dec
xor
repz
lcall
or
push
cmp
nop
mov
push
fdivl
sbb
add
outsl
inc
cs
std
and
jl
pop
jge
scas
dec
cmp
and
sbb
sub
in
push
xchg
mov
fcoml
inc
sahf
and
in
pop
xor
add
push
mov
xor
aam
int3
xor
add
and
mov
xor
pop
pusha
mov
pop
nop
xor
or
js
or
pop
std
rolb
xchg
idivl
loop
cmp
rorb
ja
xchg
repnz
fisubl
mov
sbb
cmc
inc
in
add
test
out
inc
mov
icebp
mov
jns
mov
mov
pop
rclb
sbb
xchg
jbe
or
adc
sbb
popa
or
dec
adc
add
js
inc
push
mov
hlt
xchg
push
pop
mov
or
pop
adc
mov
and
pop
mov
mov
push
mov
ffreep
push
fistpl
or
daa
loop
xchg
push
xor
inc
enter
fidivrl
int3
mov
inc
push
jne
jle
xor
or
fwait
jmp
loopne
dec
in
ss
inc
cmpsb
shll
cmp
add
data16
cwtl
mov
fcoms
push
xchg
cmovb
sub
pop
push
and
xchg
subb
cmp
add
dec
je
and
fucomip
add
add
nop
ss
mov
xor
pop
sub
jmp
xor
lods
inc
or
div
or
mov
add
adc
mov
cld
lea
mov
and
in
add
cmp
clc
sub
nop
or
push
or
push
push
repnz
rcll
dec
inc
adc
xchg
lock
mov
dec
push
push
fsubrs
or
cmp
je
notb
or
push
les
xor
test
addb
jo
push
in
add
fmuls
and
shl
call
lret
loopne
dec
pop
incl
mov
xor
jb
bound
xor
shl
inc
inc
inc
or
test
loopne
cwtl
ret
hlt
mov
mov
gs
es
cmp
pop
jp
jg
jnp
or
sar
sbbl
or
dec
mov
cld
lret
lea
rclb
outsl
or
hlt
insl
and
jecxz
and
les
dec
dec
lock
pop
push
push
add
add
dec
adc
add
rcr
xor
mov
xchg
or
mov
push
push
mov
push
pop
cwtl
adc
pop
fs
or
sbb
loopne
mov
call
jae
mov
adc
jo
push
filds
jle
pop
sbb
rclb
in
adc
mov
or
sbb
hlt
or
jg
mov
cmp
or
mov
sti
add
cmp
sbbb
es
test
fadd
dec
or
or
insb
fildl
mov
mov
cs
sub
jp
aad
ja
jae
pop
ds
movsb
jns
out
add
ljmp
xchg
jg
jns
dec
arpl
dec
or
clc
add
jl
mov
lods
xchg
xchg
shrl
and
push
inc
adc
add
xchg
add
and
rcrb
pop
add
pop
pop
xor
jecxz
dec
adc
add
aad
and
pop
add
sub
and
adc
or
pop
mov
movsl
jle
xor
lods
pop
xor
jnp
movups
sbbb
es
aad
aaa
shlb
movb
sbb
stos
sbb
and
push
adc
add
xchg
xor
ret
xor
mov
ds
inc
jne
stos
outsb
ret
fs
pop
sti
mov
adc
ss
dec
adc
movsl
ret
pop
sbb
bound
insl
xchg
loop
push
inc
xor
rclb
jmp
js
scas
and
adc
and
add
filds
sbb
ret
repz
les
cmpsl
shrb
sbb
pop
test
js
fisubrs
push
test
pop
dec
aaa
rorl
shr
stos
or
xor
cmp
lcall
lret
es
mov
mov
movsl
or
and
dec
addl
cli
call
jb
add
xor
fsts
adc
jnp
arpl
xor
jne
pop
shlb
and
mov
movsl
mov
jbe
pop
jo
fcoms
sbb
and
add
add
mov
subl
dec
dec
cli
add
pop
je
or
shr
je
cmp
rorb
sbb
add
gs
mov
and
test
mov
adc
fnstsw
add
bound
dec
adc
fistl
push
add
pop
out
pop
fs
sbb
insb
stos
test
adc
fiadds
and
loopne
cmp
cmp
scas
mov
xor
pop
sbb
jnp
dec
and
pushf
push
adc
and
cld
push
dec
je
pop
les
inc
adc
mov
aam
push
xor
and
repz
shrl
mov
call
scas
xchg
inc
sbb
mov
mov
inc
dec
test
inc
bound
mov
mov
sbb
lret
es
rcrb
add
pop
jno
cmp
push
dec
out
add
in
sti
adc
int
add
push
sbb
pop
push
inc
sbb
xchg
test
mov
xor
and
sbb
repnz
xor
mov
sub
xchg
or
cmp
xor
xor
push
sub
lods
cmp
and
push
push
xchg
add
jmp
or
or
xchg
add
mov
insl
repz
and
inc
pusha
insb
mov
or
sub
leave
mov
adc
xor
xchg
xor
push
and
xor
sub
adc
push
in
stos
fs
or
xchg
addr16
add
ret
cmp
iret
push
cmp
or
stos
xor
inc
fwait
inc
xchg
dec
sahf
pop
push
mul
xchg
invd
ja
sub
dec
add
inc
and
repnz
sbb
mov
push
or
and
dec
in
in
stc
adc
push
pop
sub
pop
push
faddl
ds
scas
push
sbb
push
iret
js
fs
push
mov
sarl
and
inc
dec
xchg
mov
xlat
imul
dec
imul
std
dec
dec
xchg
fnop
and
pop
or
ret
dec
call
adcb
pcmpeqw
mov
imul
call
enter
xor
xchg
movsb
or
sbb
mov
adc
or
nop
sub
mov
inc
or
lret
test
cmp
dec
loopne
mov
mov
scas
cld
mov
push
and
insb
das
inc
add
inc
lods
adc
movsl
sub
cmp
ficoms
sbb
stc
rcll
cwtl
fdivr
sbb
out
push
xlat
mov
testb
fadd
jge
loopne
in
inc
jecxz
jo
jno
jae
loopne
lahf
or
int
mov
cltd
scas
orl
fildl
push
mov
push
xor
mov
out
loopne
test
stc
lcall
dec
scas
xchg
jbe
pop
in
call
out
and
cmp
out
pop
pop
cld
testb
lock
sbb
jecxz
add
stos
es
xor
xchg
fiadds
aas
xchg
or
arpl
loop
in
and
push
std
repz
test
call
push
lock
sub
jne
pop
add
sbb
pop
add
pop
adc
or
push
adc
mov
fstl
xchg
addr16
add
xor
pop
push
xchg
mov
outsb
enter
dec
push
pusha
pop
ljmp
lods
mov
pop
xchg
bound
jl
or
mov
add
mov
add
aam
popf
and
enter
sbb
xor
xor
inc
std
cmpsl
push
jo
add
cld
push
mov
imul
mov
add
sub
rcr
add
fidivs
or
xlat
cmp
out
mov
add
dec
push
scas
popf
in
lods
push
int3
mov
or
in
stc
frstor
adc
stos
and
stos
push
sub
adc
mov
pop
sbb
push
push
sbb
mull
jae
mov
shl
repnz
jl
cmp
jmp
mov
and
out
pop
cmp
add
ret
jne
pop
adc
push
pop
stos
jbe
pop
cmp
jge
cmp
lock
sarb
mov
pop
loop
fwait
push
jp
sub
loopne
sbb
movsb
cmp
aaa
mov
shl
call
push
fidivl
add
jl
repnz
rcll
mov
sbb
sub
enter
xchg
mov
mov
sbb
sbb
sbb
sahf
or
jmp
mov
mov
js
adcb
xor
aad
je
jnp
and
xchg
into
push
jp
mov
dec
or
add
xor
pop
movsl
pop
jb
jle
subl
js
pop
gs
mov
in
loopne
cmpsl
mov
add
pop
inc
fs
or
push
and
pop
or
insl
pushf
inc
fistpl
xchg
add
fdivrs
fldenv
pusha
call
dec
enter
push
xchg
repnz
and
inc
inc
or
push
cmp
pop
mov
rorb
xor
xchg
inc
idivl
imul
insb
call
fs
dec
shrb
sub
fsubs
sub
xchg
popa
outsl
xor
jo
jns
add
dec
jne
jge
sbb
dec
or
jecxz
test
mov
loop
test
mov
jle
je
cmp
jbe
mov
push
xor
inc
imul
lds
or
or
mov
dec
int3
mov
xchg
ret
nop
popa
ss
movsl
inc
xchg
pop
jo
stos
inc
jno
push
or
lock
test
push
xor
popa
add
dec
cltd
xchg
jle
test
push
dec
clc
push
add
and
aaa
mov
jle
mov
and
dec
addl
inc
test
dec
sarl
push
cmp
jo
add
mov
or
or
lock
pop
adc
jmp
arpl
sub
leave
inc
mov
cmpsl
jbe
mov
cmp
insb
xor
adc
pop
inc
jns
jo
pop
mov
iret
mov
xor
enter
fwait
leave
adc
push
inc
cmp
fs
push
movsb
cmp
or
lods
add
dec
push
mov
xchg
adc
xor
sti
push
adc
xchg
outsl
add
fwait
adc
or
inc
push
cmp
jb
lret
jp
inc
cmp
pop
or
std
fists
sti
xor
inc
jmp
xor
js
cmp
adc
cli
das
push
push
push
pop
pop
mov
loopne
rcl
inc
aam
adcb
mov
ret
test
and
push
cld
push
pop
addb
decb
inc
or
mov
push
arpl
cmp
loop
xchg
fdivs
andl
enter
push
push
push
movb
adc
les
inc
add
push
popa
jb
mov
mov
pop
gs
lahf
add
test
sbb
filds
orl
jo
es
popa
dec
lea
mov
movsb
jmpw
inc
aas
or
xor
push
adc
push
add
popa
add
movl
lea
lds
or
add
xlat
movsb
sarb
sbb
xor
sbb
mov
push
ds
jne
inc
fists
sub
push
inc
or
decl
adc
cmp
xorl
sysret
mov
xchg
out
jns
gs
imul
negb
sbb
and
rorb
in
jne
gs
add
push
dec
insb
mov
dec
add
sbb
sbb
mov
pop
pop
scas
xor
jb
loopne
push
add
lods
xor
mov
or
cmp
jno
enter
pop
int3
js
or
jbe
or
and
lock
or
das
decb
inc
cmp
les
and
or
test
push
adc
cli
push
mov
nop
jge
xor
pop
mov
rep
mov
adc
xchg
cmpsb
mov
cmp
or
lea
pop
cmp
inc
int3
mov
dec
leave
or
jg
adc
sbb
adc
orb
rcll
loopne
lods
loopne
adc
jge
pop
sbb
and
adc
fisttps
jns
sbb
adc
fs
ja
sub
push
js
push
add
jl
jne
or
xor
test
pop
cmp
xchg
pop
pop
lock
push
in
and
adc
push
pushf
sub
xlat
dec
mov
add
push
xchg
clc
xchg
ret
xadd
or
add
adc
pop
or
push
adc
int3
fs
gs
or
cmp
test
stos
sbb
add
je
cmp
cmp
mov
fistl
jl
push
clc
rcrl
imul
ljmp
cld
adc
sub
jge
loopne
dec
jno
fdivrl
insb
rolb
cwtl
fildl
incb
add
sub
lea
out
push
mov
mov
cmp
and
or
mov
cld
and
aaa
mov
dec
pop
fnstenv
or
gs
jmp
rcrb
lea
call
adc
push
or
cmc
and
cwtl
mov
loopne
aam
cltd
jb
mov
sbbb
ret
sbb
sbb
inc
je
in
push
cli
bound
inc
sahf
dec
call
sub
cmp
aaa
rclb
ret
int
sbb
or
dec
adc
je
xor
pusha
mov
insl
sbb
adc
sub
jae
push
pop
ret
xor
mov
insb
test
and
ret
push
jb
nop
inc
push
ljmp
ret
mov
ss
or
or
ss
jecxz
push
les
scas
jle
dec
add
jmp
and
aas
cmp
out
and
lret
popa
jbe
shll
push
es
hlt
aas
push
push
sub
push
ja
shrb
add
pushf
mov
in
in
sub
sub
or
mov
mov
in
cmp
inc
in
inc
add
dec
and
cmp
and
movsb
into
je
add
push
inc
mov
sbb
mov
add
sbb
add
in
pop
cmp
adc
ud2
sub
xchg
cltd
stos
add
inc
add
or
dec
es
mov
sub
jg
aaa
or
mov
cmc
adc
fisubs
dec
mov
cmpl
mov
jmp
rclb
push
popa
mov
xchg
sub
icebp
pop
ja
lea
and
adc
xor
push
maskmovq
testl
scas
inc
push
stos
cwtl
shrb
add
pop
jp
jle
je
or
xchg
inc
sbb
mov
xor
adc
loopne
fcoms
fisttpll
dec
and
roll
test
sub
pop
lret
pop
call
or
mov
mov
push
int3
je
cmp
jae
add
mov
imul
pop
dec
nop
mov
divb
mov
mov
cwtl
leave
push
rorl
adc
and
test
xor
sbb
mov
stos
daa
pop
cmp
add
jnp
sub
lods
repz
mov
sti
rep
bound
sbb
inc
xor
or
adc
pop
jp
or
sbb
cmp
jae
cmp
shlb
add
or
mov
sbb
add
mov
fdivrs
clc
xchg
pop
push
push
push
loope
mov
inc
cld
xor
xlat
and
adc
inc
push
dec
loopne
adc
sub
data16
inc
sub
sub
add
pop
adc
push
xchg
add
inc
xor
xor
inc
xchg
xor
xchg
testb
rorb
push
int3
inc
xchg
mov
dec
repz
xor
adc
or
inc
add
and
ret
pop
or
sarb
add
sub
sbb
push
adcb
leave
clc
push
mov
popa
daa
add
mov
jmp
cmp
sete
in
mov
fsubs
mov
jmp
mov
and
test
push
lock
shlb
cld
sub
adc
mov
addr16
in
jbe
repnz
inc
xor
mov
orb
pop
icebp
add
das
xor
add
xchg
rcl
lret
add
jnp
mov
cld
mov
push
push
icebp
inc
sub
not
dec
sbb
adc
mov
pop
push
bound
push
cmp
faddl
mov
push
push
inc
ret
cld
orb
mov
xchg
inc
rcll
fsubrs
add
mov
loope
rol
adc
jno
incl
lret
push
mov
add
ljmp
cmp
sbb
mov
arpl
ja
popf
sarb
popa
data16
adc
sbb
pop
popa
xor
xor
cmp
or
sti
dec
push
loopne
mov
lods
add
add
push
loopne
push
sarl
and
or
mov
jno
push
ljmp
xor
mov
jge
je
jg
adc
mov
or
out
cltd
cmp
jl
addb
gs
pop
jo
es
sbb
push
icebp
subb
sbb
sbb
cmpb
js
loopne
icebp
or
sbb
push
pop
add
jo
dec
add
into
call
loop
pop
pop
leave
adc
cmp
inc
pop
mov
add
sub
push
aas
and
movb
push
adc
adc
orl
rorb
movsb
or
es
add
das
pop
adc
push
sub
dec
mov
fisubl
inc
adc
test
inc
stos
push
sbb
in
jle
push
lock
pushf
loope
cmc
test
loope
nop
cmp
in
insl
push
adc
rorl
or
cmp
sbbl
push
cmp
mov
mov
or
jg
add
cmp
je
cmp
add
out
adc
xchg
inc
adc
push
clc
add
clc
jbe
mov
jb
mov
jmp
mov
or
ret
inc
pop
push
es
pusha
in
adc
xor
shrl
add
jecxz
jae
addl
xchg
adc
jb
mov
movsb
aaa
je
cmpsl
mov
cmp
pop
cmp
dec
lret
mov
cvtps2pd
inc
incb
add
lock
mov
add
lea
mov
fdivp
sub
pop
pop
outsb
sub
mov
movsl
rcrl
dec
push
jnp
std
mov
sbb
pop
jge
jl
jo
js,pt
in
mov
lock
lea
outsl
call
push
inc
pop
jne
sbb
je
addl
adc
cmp
mov
xor
xor
sub
adc
sub
xor
imul
mov
adc
dec
leave
enter
xor
dec
call
adc
orl
push
adc
pop
and
pop
inc
testb
push
mov
adc
jmp
dec
push
arpl
push
in
sbb
dec
add
jne
sub
ss
incb
lea
jp
cmp
xor
push
push
cmp
mov
jb
pushl
mov
pop
sahf
add
or
pop
jmp
xor
jae
add
push
add
xor
test
and
aas
adc
push
pop
or
int3
push
jb
dec
ds
add
mov
mov
lea
adc
pop
push
lock
inc
lcall
pand
jl
out
mov
cs
pop
mov
push
add
loopne
push
leave
mov
mov
outsb
aas
lcall
mov
push
jmp
cmpsb
inc
sub
push
sub
out
xchg
dec
sub
je
or
mov
dec
mov
push
mov
arpl
dec
xchg
sbb
dec
ljmp
add
ret
cli
push
cmp
add
xchg
dec
and
insb
push
jb
pop
sbb
cmpl
add
push
mov
dec
push
jmp
or
cmp
sbb
or
popf
dec
push
add
pop
or
ret
cmp
mov
fcmovnu
insb
insl
jb
arpl
ja
and
in
adc
or
jb
shrl
sub
sub
mov
cmp
jb
call
lahf
xchg
sbb
mov
jmp
add
xchg
pmulhuw
pop
jg
add
fbld
sbb
pop
or
aam
pushf
enter
outsb
lock
mov
mov
cmp
je
pusha
mov
dec
pop
and
sub
stos
adcl
adc
xchg
adc
enter
mov
pop
rol
dec
outsb
jb
xchg
hlt
add
pop
lret
insl
cwtl
addr16
ret
incl
add
push
add
nop
and
nop
add
js
xchg
add
nop
add
nop
add
nop
and
add
in
or
add
add
cmp
add
sub
jb
add
cs
jg
pop
or
jmp
push
pop
cmp
pop
push
cmpb
push
sub
or
xor
mov
mov
mov
push
push
xor
js
xchg
jl
sarb
cs
pop
cld
or
fildll
dec
mov
push
cmp
fnsave
or
or
xor
or
xor
sbb
pop
rclb
dec
fildl
loop
mov
mov
js
dec
or
movl
shrb
andb
lds
or
add
lret
repz
adc
add
jecxz
adc
std
ret
adc
jmp
jbe
xor
ja
ja
movsl
mov
movsb
and
popf
xchg
pop
lock
dec
sub
in
andb
sbb
mov
aad
divb
mov
out
lahf
popa
das
inc
arpl
imul
imul
mov
imul
xchg
pop
dec
and
jae
inc
adc
fdivl
call
add
xchg
mov
add
push
pop
push
cwtl
enter
aad
sbb
push
pop
adc
idivl
or
pop
je
fstps
cld
xor
xchg
outsl
movaps
jne
ficompl
lock
mov
cld
add
or
pop
pop
sub
pop
sbbl
jne
push
add
fbstp
in
or
and
call
lock
aad
mov
dec
mulb
out
je
rolb
xacquire
pop
or
fwait
pop
add
int3
add
dec
das
dec
add
js
push
pop
shlb
decl
sbb
jae
jne
sbb
sbb
outsb
and
repz
in
test
or
in
inc
call
pop
push
cmp
dec
adc
xor
lods
push
dec
pop
out
adc
dec
mov
into
mov
push
popa
push
scas
loope
jge
push
jae,pn
outsb
mov
int3
mov
and
scas
shl
xchg
adc
cmp
fwait
xchg
and
jmp
jo
in
cmc
frstor
lock
add
mov
jecxz
xor
add
clc
aaa
jecxz
sbb
mov
push
push
dec
cmp
sti
jg
push
sbb
and
push
outsl
cmp
push
jo
jo
je
icebp
out
sahf
pop
sbb
stos
rcl
cld
xchg
push
xor
push
push
inc
add
outsb
cwtl
adc
jbe
inc
out
addb
pushf
fmull
in
add
loop
rorl
mov
push
sub
loope
mov
jmp
cmp
outsl
xchg
or
dec
or
adc
cmp
pop
dec
test
mov
mov
sbb
sub
cmp
xor
pop
add
pop
or
flds
loopne
test
push
pop
adc
dec
gs
push
sub
or
pop
or
pop
inc
ljmp
dec
cld
or
inc
enter
adc
or
add
jmp
movsl
pop
cmp
bound
cld
push
add
xchg
lock
jmp
adcl
and
inc
dec
mov
or
jmp
jbe
out
push
pop
mov
lock
pusha
hlt
inc
add
push
and
psubusb
push
push
stc
xor
and
or
or
adc
jge
lret
shl
mov
xor
repnz
and
adc
xor
cmpb
lock
cli
dec
loop
repnz
shlb
daa
push
aaa
and
or
hlt
adc
aas
or
sbb
lock
cmpb
mov
xor
sbb
lods
or
or
jg
cmp
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
popf
xor
fdivrl
aas
lods
mov
inc
notb
sarl
mov
mov
pop
stc
iret
sti
in
sbb
xor
je
cmp
je
adc
js
pop
orb
mov
mov
push
xchg
adcb
xlat
iret
jae
mov
mov
cs
pop
mov
jg
fwait
add
in
pop
jbe
xor
fwait
testl
in
add
or
xor
xorb
adc
loop
rclb
fsubrs
jl
insb
add
push
cmp
xor
jmp
push
jbe
pop
es
jge
and
aaa
sub
jb
cmp
jne
movl
loopne
pop
sbb
cmp
insl
jmp
pop
dec
aam
add
add
add
sbb
test
xor
lea
popf
add
xchg
mov
xchg
lods
repz
rolb
rolb
mov
imul
es
mov
xchg
mov
mov
xor
sahf
jle
xor
sbb
mov
mov
xor
es
js
cmp
or
faddl
inc
push
sub
mov
scas
call
sub
mov
and
ret
cs
adc
insl
call
push
pop
dec
cmp
sub
xchg
sbb
xchg
dec
push
aad
leave
fadds
sbb
test
lea
mov
fiaddl
add
mov
scas
sub
inc
call
dec
xchg
inc
ja
aam
call
mov
mov
push
xor
mov
or
mov
inc
xor
das
adc
sub
sbb
sbb
addb
lret
jns
lock
push
pop
pop
pusha
fs
push
cmp
or
mov
stc
mov
and
aaa
hlt
jge
push
and
adc
dec
imul
add
push
mov
lods
dec
jae
je
adc
daa
add
jne
push
les
push
mov
imul
push
pop
in
add
xor
or
adc
fcoml
scas
loope
push
es
ret
and
mov
adc
cmpsl
leave
mov
xor
xchg
lock
xor
push
pop
or
push
imul
xchg
ret
addb
inc
adc
xor
inc
and
adc
add
sbb
cmp
push
imul
push
sbb
movups
push
lods
add
pop
push
roll
mov
loop
rcll
cli
jne
nop
adc
push
pmulhuw
cmp
cmp
and
imul
jo
in
pop
xchg
add
scas
lahf
xor
ret
sub
push
pop
cmp
dec
pop
fucomi
jae
shll
cmp
push
test
addr16
mov
das
scas
scas
ss
inc
fidivrl
xor
or
nop
push
cmp
test
xchg
inc
into
and
shr
and
jmp
sub
or
mov
push
dec
and
mov
and
and
fs
mov
fstps
enter
adc
out
xchg
mov
adc
out
rcrl
fsubrl
jno
cmpl
in
xor
inc
cmp
mov
sti
lahf
gs
sbb
ljmp
sub
pop
mov
mov
and
daa
je
cmp
in
xchg
adcb
and
pop
push
mov
add
push
pop
test
lods
inc
rol
lcall
mov
dec
jne
fsubrl
xor
and
testb
int3
fs
push
jle
push
fdivl
sub
mov
jne
dec
mov
leave
in
dec
pop
mov
or
sbb
or
in
mov
repnz
mov
loopne
ret
cmp
insl
push
jp
pop
insb
pop
je
fwait
adc
clc
or
shl
xor
jo
mov
push
lods
add
xchg
adc
or
stos
pop
ret
and
adc
imul
enter
inc
int3
or
pop
sbb
shll
sbb
adc
mov
insb
jmp
or
adcl
ret
jmp
jbe
fdivrs
xor
pop
shlb
adc
xchg
adc
sti
sbb
push
cmp
movl
jle
enter
push
rorb
add
cmp
clc
jg
add
push
lea
push
push
push
outsb
dec
and
ds
sub
push
sbb
sub
das
inc
hlt
pop
or
xor
dec
sub
dec
mov
cmc
add
sbb
jl
into
jo
xchg
push
push
hlt
jg
mov
sub
push
lea
mov
cwtl
add
sbb
lret
mov
push
ret
orps
dec
adc
mov
loope
in
xor
inc
sbb
repnz
lock
mov
sbb
sbb
sub
lea
sub
and
pusha
insl
loopne
ss
mov
jo
fs
jne
mov
mov
cmp
push
jg
lea
fdivrs
scas
push
push
push
inc
mov
or
mov
fistps
sub
shrl
rclb
add
aam
mov
or
dec
jns
jb
add
inc
movsb
or
ret
dec
adc
add
mov
insb
add
or
xor
data16
mov
sub
jmp
gs
dec
adc
xchg
add
push
cmpb
pop
in
push
sbb
push
ljmp
mov
icebp
mov
cmp
test
pop
xchg
mov
mov
xor
cmc
mov
lea
sbb
adc
fcoml
js
enter
test
xchg
pop
subb
test
jmp
push
xchg
adc
mov
jmp
lds
push
mov
and
insb
popa
jns
or
or
add
xchg
inc
pop
or
mov
xchg
push
push
adc
movsb
rcrl
pushf
ljmp
mov
cmpl
push
lods
js
sbb
lea
test
cmp
out
mov
call
cmpsl
inc
sbb
mov
jmp
mov
dec
and
adc
xor
jo
inc
imul
push
xor
push
xor
jle
inc
popa
test
adc
mov
subb
pusha
sub
faddl
jl
stos
in
cmp
push
fldl
pop
daa
stos
cmpb
fstpl
add
fistl
mov
data16
aaa
adc
adc
iret
iret
repz
push
divb
or
jne
shl
cmp
cli
jne
or
stos
dec
pusha
mov
leave
loopne
fldz
add
andl
lahf
je
and
filds
push
and
aas
or
pop
lea
mov
pop
ja
jg
push
xor
pop
jg
aam
out
pop
fadds
lea
fstl
jecxz
outsl
movsb
faddp
loop
jbe
je
movsl
lea
or
ret
mov
mov
mov
lret
inc
cmp
push
fidivrl
adc
jb
gs
mov
adc
loopne
and
mov
dec
pop
sbb
mov
test
adc
fsubs
fstpl
mov
ret
jne
cmp
scas
mov
sub
push
or
fimuls
loope
in
movsl
pminub
cmp
push
jnp
push
and
jle
shr
push
test
rolb
add
fadd
and
decb
add
push
outsb
fildll
pop
movsb
popf
pop
sub
dec
fsubl
movsl
add
movsl
rcll
sbb
xchg
enter
lock
aad
dec
mov
into
or
push
pop
mov
imulb
js
or
and
xchg
pop
mov
ljmp
jbe
rol
shrb
adc
popa
lret
repnz
sbb
adc
pop
or
leave
mov
jmp
push
jo
pop
or
or
inc
sbb
mov
iret
adc
pusha
daa
inc
push
dec
push
divl
fs
lods
addl
js
push
mov
push
sbb
and
mov
fldl
sub
and
pop
les
popa
push
dec
or
pop
xor
ja
orb
push
fimuls
lret
lods
push
mov
pusha
mov
cmpsl
cmpsl
cld
test
push
outsl
inc
pop
mov
inc
data16
jl
mov
dec
sbb
inc
mov
push
add
push
lret
enter
enter
loopne
add
cmp
fwait
adc
xchg
or
in
int3
rorb
cmp
or
sbb
inc
add
icebp
adc
fcompl
inc
dec
inc
es
fsub
push
mov
stos
and
fs
call
shlb
dec
xchg
sub
mov
push
ror
enter
in
sarb
mov
test
sub
mov
jge
add
and
push
or
cld
call
adc
lahf
mov
mov
mov
clc
or
mov
add
pop
pop
add
dec
pop
fs
mov
ret
cs
xor
mov
add
std
sub
cmp
jle
sub
mov
daa
jge
xor
orb
mov
pusha
or
push
adc
jle
dec
sbbl
je
insl
sahf
sarb
nop
push
lea
push
cs
inc
add
sbb
mov
leave
jge
adc
push
pop
call
jl
add
into
fistpl
adc
inc
ljmp
rorb
jne
and
imul
inc
push
push
insl
push
add
xchg
or
mov
orb
or
jle
push
icebp
push
fldl
add
mov
or
mov
pop
push
mov
sub
imul
xchg
and
pop
xlat
push
jnp
in
sub
push
mov
scas
insl
les
test
loop
dec
jb
cmp
pushf
pop
pop
inc
decl
cwtl
lret
add
push
lcall
rcrl
flds
and
sub
sbb
popa
xor
mov
mov
mov
xor
jge
cmpsb
rcl
adc
mov
jns
inc
adc
and
xlat
movlps
jne
xor
test
add
mov
xor
mov
arpl
lds
adc
dec
es
fdivrl
inc
add
fadds
or
lock
subb
cmpb
inc
jl
sbb
adc
mov
jle
inc
popa
mov
jmp
pop
in
mov
pop
inc
push
lret
inc
pop
and
jmp
jno
or
add
jne
ret
lock
jg
mov
mov
adc
pop
push
les
add
mov
notl
lods
or
push
xor
cmp
add
and
fwait
push
jge
je
imul
push
iret
pop
jp
rolb
flds
pushf
scas
jle
push
orb
pop
xor
stc
sarb
ds
loopne
call
push
ret
xchg
ffree
mov
pusha
ret
lea
popa
addb
mov
mov
push
mov
das
push
pop
and
int3
cld
insb
fadds
iret
pop
jbe
jmp
vmovupd
add
scas
push
jns
ja
sbb
ja
jnp
jne
mov
or
fdivrl
inc
addb
sub
inc
jle
pushf
add
xchg
push
sahf
ret
test
mov
or
sbb
adc
outsb
and
jne
xchg
mov
add
dec
cmp
push
jg
push
cmpsl
add
push
push
xchg
jle
cmc
and
cmpsl
add
stc
lds
vucomiss
mov
int3
push
sbbl
or
pop
ja
test
add
xchg
cmp
push
pop
enter
lock
pusha
stos
pop
adc
xchg
dec
mov
mov
mov
xor
stos
rorl
xor
lahf
sbbl
mov
lahf
stos
or
adc
lahf
lret
mov
mov
mov
push
jae
enter
or
test
push
sbbl
xchg
push
nop
punpckhbw
dec
loope
fists
push
arpl
or
add
test
ds
das
jne
pop
into
dec
or
pop
jns
add
add
pop
dec
inc
and
push
shr
jb
xor
mov
sub
adc
jo
xor
push
mov
xor
pop
test
or
adc
xor
add
jp
adcb
dec
sub
xchg
nop
cltd
lods
mov
ljmp
mov
fnstenv
lea
outsl
popf
xchg
pop
pop
stos
fcoml
mov
or
and
and
arpl
and
add
dec
dec
push
sub
fidivrl
fs
mov
pop
mov
add
pop
andb
or
inc
jno
inc
inc
ret
mov
and
lock
roll
cmp
into
inc
jl
jmp
aaa
xchg
loopne
testb
jnp
mov
mov
insl
mov
jecxz
and
test
pushf
fldt
lods
iret
jl
int
add
xor
jno
jg
pusha
arpl
insb
testl
in
add
ss
pop
nop
jmp
push
mov
lock
divb
sub
dec
add
dec
adc
dec
push
lods
les
inc
adc
mov
pop
adc
popl
add
sub
aam
sahf
xor
cs
loope
xor
adc
push
sbbl
sbb
les
movl
aaa
ret
addr16
pop
xchg
push
addr16
and
out
xor
jmp
sbb
loopne
or
xchg
add
mov
inc
test
mov
or
and
mov
lahf
notl
daa
bound
push
pop
xchg
xor
test
sub
jnp
mov
loope
stos
aaa
and
jecxz
dec
cs
push
sub
add
subl
fldt
fs
aad
mov
xchg
mov
nop
sahf
lea
pop
mov
fildl
add
jne
popf
clc
jno
push
jbe
cld
fimull
and
push
mov
rolb
inc
push
aas
sbb
pop
scas
jne
inc
cld
leave
sub
sahf
stos
push
sar
add
add
cld
scas
pop
loopne
jae
cmpsb
push
test
cmc
mov
inc
jp
fnstenv
sbb
icebp
jnp
dec
mov
dec
add
jmp
mov
dec
or
cltd
pusha
sbb
fmuls
dec
mov
inc
push
push
je
lea
imul
add
sub
push
sub
push
mov
ljmp
daa
insb
out
lock
pop
ret
movsb
jne
pop
icebp
idiv
xchg
js
or
pushl
sbb
addr16
push
sti
fldl
icebp
add
leave
jo
nop
xchg
xchg
sub
xor
das
add
adc
lcall
push
or
mov
test
pop
xchg
or
dec
add
cmp
movsl
adc
in
rcl
lret
jmp
js
arpl
imul
rolb
push
mov
adc
sbb
push
add
push
pushf
sti
mov
pushf
pop
pop
xor
leave
xor
lods
or
repz
addl
pop
enter
xchg
push
xchg
outsl
push
cmp
xchg
inc
push
add
pop
shll
roll
xor
dec
add
and
cmp
push
sbb
nop
cmp
sbb
ficomps
mov
and
in
jmp
or
mov
add
lds
fs
jae
and
sbb
sub
and
sbb
mov
outsl
or
dec
lret
cmp
add
ja
out
je
mov
and
push
and
and
lock
xor
lock
mov
pop
adc
or
cmc
addl
or
cmpsl
add
out
ja
arpl
test
leave
ja
push
xor
dec
sub
push
daa
and
pop
rcrb
adc
fiadds
pop
subb
jnp
sub
dec
gs
cwtl
and
js
jnp
push
sub
jnp
mov
sub
daa
or
daa
mov
or
or
test
cs
ret
addb
cmp
inc
cmp
aad
xor
jmp
xor
sbb
in
sbb
insb
pop
sub
nop
cmp
sbb
push
push
and
xor
shlb
je
cmp
or
testl
add
fisubs
lods
mov
pop
sbb
push
pop
fdivl
sbb
int3
and
and
cmpsl
mov
je
mov
repnz
pop
fmul
mov
call
add
jp
adc
stc
aam
push
mov
inc
test
sbb
add
mov
dec
inc
mov
xor
movb
aaa
mov
xchg
jl
stc
rorl
test
mov
sub
pop
inc
inc
dec
mov
imulb
or
add
js
in
xchg
movsb
xor
or
xorl
inc
xchg
andl
shrb
rcl
dec
mov
add
xor
test
out
loopne
pop
inc
stos
or
jge
popa
mov
fsubp
je
fs
aad
pop
sbb
push
xchg
mov
add
outsl
imul
xchg
push
xchg
jnp
adc
adc
outsl
pop
sbb
sbb
outsb
mov
insl
add
loopne
js
push
push
adc
xor
xchg
flds
or
sbb
cmp
adc
sbb
dec
adcb
fxch
nop
jns
sbb
sbb
inc
or
sub
fidivrs
je
pop
mov
cs
cli
lcall
sub
rol
rorl
xor
mov
push
es
test
mov
mov
sub
cmp
jne
mov
inc
fiaddl
setns
xlat
int3
addr16
pop
call
pop
add
pop
out
mov
ds
aaa
aad
scas
xor
push
pop
cltd
clc
xchg
inc
cmpsl
adc
je
or
or
push
pop
sbb
mov
or
mov
lcall
repnz
inc
sub
pop
pop
pushl
mov
xchg
push
and
push
xchg
push
ds
scas
fists
dec
mov
jle
push
sub
test
and
xor
rcrl
clc
jbe
mov
dec
pop
test
shll
lds
adc
adc
call
in
or
push
pop
jne
push
add
lahf
sub
div
inc
cmp
jae
cwtl
jo
mov
mov
bound
inc
pusha
jmp
and
mov
mov
sbb
mov
fistpll
push
add
mov
adc
push
cmpsb
icebp
rcr
test
push
pop
inc
or
jbe
and
aad
push
cmp
inc
add
jmp
rcll
and
cmpsb
or
call
in
inc
imulb
nop
dec
aam
fbld
test
in
dec
pop
stos
test
sub
and
push
cmp
je
pop
pop
dec
pop
nop
pop
mov
cmp
pop
adc
clc
mov
xor
pop
xchg
or
test
sbb
xchg
shrl
lods
jbe
cmpsl
pusha
mov
ret
inc
and
mov
push
es
lds
fwait
add
adc
call
rcrl
push
mov
fcmovnb
sub
adc
jmp
imul
movsbl
add
inc
mov
push
icebp
add
push
pop
mov
js
std
js
cmp
je
cmp
or
insl
add
rolb
add
push
aam
mov
outsl
scas
sub
sub
fldl
cmc
jmp
sub
dec
mov
movsl
sub
jbe
xchg
pusha
test
push
stos
mov
cmpsl
test
mov
push
or
sub
push
sbb
xrelease
jmp
fisubrl
push
mov
add
popl
ss
shl
push
cmp
xor
pop
xor
or
cmp
je
das
notl
pop
push
pop
or
push
and
jp
popa
lret
xchg
aam
test
fmul
inc
sub
clc
cmpsl
int
cmpsb
xor
add
inc
cmp
and
xor
sub
ja
mov
xchg
adc
mov
jmp
push
pop
cs
lds
ja
ret
nop
mov
pop
jmp
sbb
arpl
pop
enter
cli
rolb
inc
enter
cmp
cmp
push
adc
incl
mov
decb
lret
insb
push
adc
xor
and
sbb
jg
push
adc
lods
out
and
push
sub
orb
dec
jo
dec
subb
push
popa
loop
adc
fstpl
fldl
decb
cmp
loopne
les
adc
enter
rcl
adc
jecxz
js
cmpsb
jmp
aam
sbb
fldl
cmp
orl
and
cmp
stos
ljmp
insl
clc
bound
popa
sbbb
fldl
sub
je
fldz
out
cmp
fstpt
xchg
ljmp
pop
fsubrp
dec
faddp
lds
jge
loope
ret
imul
xor
jno
gs
and
pop
add
and
push
mov
pop
xor
push
shlb
add
sub
out
outsb
adc
shll
je
dec
je
add
es
dec
adc
cmpsl
mov
das
jmp
sbb
or
aas
sub
ss
dec
jbe
add
in
adc
xor
adc
or
sbb
sbb
sub
and
test
jns
xor
inc
add
fldl
pop
and
sbb
dec
sub
sarl
jl
int3
sub
outsb
sub
negl
ss
mov
jns
mov
lea
mull
mov
and
push
jp
and
pop
fs
adc
push
lea
es
push
ja
popa
mov
pusha
dec
or
dec
and
fnstcw
mov
xor
push
push
mov
mov
xchg
pop
adc
test
xchg
pop
pop
in
adc
clc
and
adc
lret
sub
fisubrl
fists
cmpsb
mov
in
gs
xor
jbe
mov
or
pop
sub
mov
int
sbb
pop
push
jecxz
lret
push
mov
cmp
adc
ret
enter
je
adc
cmp
and
scas
arpl
ljmp
mov
inc
add
fcmove
inc
xchg
add
fnstcw
aaa
push
addb
es
insb
ss
mov
leave
ficompl
mov
add
les
idivl
and
mov
in
and
sbb
gs
stc
dec
mov
and
pop
punpckhbw
mov
std
sub
pop
push
in
jbe
xchg
add
dec
dec
pop
cltd
cmp
push
fmuls
loope
jne
and
add
daa
mov
adc
adc
loopne
movsl
popf
or
add
jecxz
adc
mov
popf
scas
stc
cmp
repz
mov
jns
cmpsl
adc
ss
pop
sahf
out
sahf
nop
mov
cmp
repz
pop
mov
sub
repz
repz
pop
insl
jle
iret
repz
mov
cmc
sahf
out
ds
mov
sub
dec
movsl
jo
jns
pop
repz
sub
push
je
dec
add
arpl
jmp
imul
sub
add
aas
orl
outsb
fdivrp
cmpsb
mov
adc
lahf
les
inc
lahf
outsl
rolb
lock
xchg
int3
insl
sub
lahf
in
sbb
test
add
dec
cmp
daa
or
jno
xchg
into
push
stc
add
or
cmp
or
mov
add
ja
rcll
xor
mov
xchg
pop
jp
cwtl
stc
jge
popa
add
cmc
aad
pop
adc
loope
js
xchg
mov
mov
xor
or
cmpxchg
jge
shr
adc
in
sbb
shl
jns
pop
js
sub
imul
sbb
int
pop
jns
add
pop
nop
sub
push
pop
loopne,pt
scas
mov
push
mov
sub
add
rcll
and
jle
out
test
or
das
mov
mov
icebp
fcmovne
add
mov
sub
dec
add
arpl
xor
sub
and
lock
mov
int
in
pop
mov
hlt
jb
pusha
lods
or
in
mov
mov
enter
cld
shlb
fwait
add
iret
nop
inc
cwtl
add
lods
in
loop
aas
sub
pop
jo
bswap
mov
add
push
jae
out
push
push
popa
add
cs
add
call
in
dec
pop
add
push
movsb
pop
into
test
add
xchg
outsl
in
in
fs
sahf
mov
sub
push
add
or
cmp
test
add
add
out
lock
add
aam
add
pop
jmp
nop
push
faddl
mov
cmpb
xchg
or
or
addb
or
pop
adc
seto
or
push
inc
jo
or
pop
or
int
inc
push
mov
add
adc
das
mov
enter
mov
aam
in
xchg
mov
or
daa
lock
or
scas
jp
lahf
push
inc
sub
push
xor
push
push
movsl
ret
xchg
xor
in
cmpsb
xor
xchg
in
add
pusha
loope
add
add
add
mov
mov
call
xchg
and
cwtl
fmull
mov
test
fistpl
jb
adc
sbb
adc
xchg
pop
or
sti
lock
sub
dec
mov
loopne
add
adc
push
and
and
mov
in
mov
jns
add
mov
pop
cmp
mov
xchg
or
adc
adc
push
or
jecxz
jo
and
and
out
cwtl
mov
cwtl
lgdtl
add
add
push
test
lcall
hlt
daa
xchg
mov
add
push
mov
inc
or
outsb
adc
or
je
inc
mov
or
xchg
adc
or
push
and
jne
test
mov
gs
xchg
xor
dec
or
adc
pop
push
or
jg
and
shll
and
add
or
sbb
jl
ljmp
inc
jb
call
mov
test
or
add
test
dec
inc
lcall
fnstenv
xchg
or
push
std
pop
cmc
dec
fstl
xchg
dec
or
in
or
mov
push
aad
ljmp
insl
and
add
push
lahf
addl
cmp
orb
push
push
pop
sub
and
pop
adc
sbb
push
nop
fisttpll
mov
daa
or
push
inc
dec
add
mov
ss
push
push
add
cmp
push
pop
in
add
sub
or
add
xor
and
mov
and
sub
mov
stos
add
dec
mov
in
push
and
add
add
xor
or
or
ret
and
adc
add
inc
add
loope
pop
adc
popf
sub
sbb
cli
incl
sbb
push
cmp
mov
les
ret
add
push
mov
lds
inc
andb
adc
xor
and
pop
adc
jno
and
add
add
xor
lret
add
pushf
inc
pop
add
loopne,pn
out
dec
add
jae
push
push
mov
pop
xchg
or
mov
cmp
addr16
mov
push
push
cmp
ljmp
pusha
or
jbe
movsb
push
jae
push
in
insb
in
push
stos
dec
es
or
mov
adc
dec
imul
or
aam
aam
sbb
je
jnp
shlb
in
cmp
inc
lcall
xor
or
xchg
addr16
xchg
push
add
add
jo
push
mov
sbb
or
mov
aam
adc
dec
mov
test
xchg
cs
adc
imul
sbb
arpl
pop
mov
lods
loopne
and
outsl
push
sub
push
aas
inc
pop
mov
mov
ja
mov
inc
jno
rcrl
lods
movsl
ss
sbb
lret
mov
sahf
popf
jno
fstpt
sub
jne
fldl
bound
fmull
or
loopne
mov
fildl
sbb
xchg
popa
inc
lret
xor
lret
ret
add
cwtl
push
shrl
jp
add
aaa
and
push
adc
push
movsb
into
adc
sub
ret
into
loopne
ret
jbe
mov
daa
push
push
or
imul
cmc
mov
rorl
dec
ret
adcl
testl
or
add
call
jo
push
pop
lahf
xor
mov
adc
in
lret
shll
rolb
loope
clc
cmp
lock
xor
xchg
mov
xchg
sbb
sbb
jl
repnz
sub
movsb
ss
xor
cmc
mov
mov
aam
scas
mov
sbb
gs
dec
add
jnp,pn
mov
mov
push
call
loopne
push
clc
fcompl
daa
add
loope
aam
dec
or
lock
das
pusha
aam
icebp
sbb
push
sbbb
adc
cmp
ror
call
lds
lret
pop
call
and
sarl
adc
cmp
mov
inc
leave
adc
in
push
mov
stc
mov
jo
aam
dec
mov
mov
xor
sub
cmp
mov
jl
jmp
int
jbe
cmp
jl
or
sbb
popa
jp
adc
mov
push
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
cli
lahf
adc
idiv
dec
mov
xor
repnz
in
lock
pop
push
cmp
dec
adc
and
es
popa
add
sbb
xchg
outsl
mov
cmpsl
jo
push
test
lods
test
mov
cmp
test
xor
stos
clc
shr
add
or
dec
or
dec
inc
repnz
lock
repnz
mov
in
in
sbb
jo
adc
mov
imul
dec
outsl
dec
mov
faddl
cmp
js
enter
adc
jg
hlt
push
cmp
push
inc
adc
or
xchg
sub
pop
jns
mov
lcall
nop
dec
gs
rolb
dec
lea
push
pop
out
fcompl
pop
adc
xor
or
fisubl
mov
push
fdiv
dec
sub
jne
pusha
sub
or
ret
push
cmc
sub
ss
shrb
stos
imul
push
inc
pop
and
jl
dec
aam
jl
orl
mov
adc
add
enter
stos
rcrb
xchg
push
push
lods
adc
fs
adc
pop
inc
push
in
push
lock
sub
xor
pop
inc
mov
ficoml
dec
adc
push
scas
jae
pop
push
lock
mov
or
daa
push
gs
mov
push
popa
out
ficoml
jns
cs
adcb
enter
cs
sbb
push
cltd
xor
ja
dec
sub
call
add
call
inc
push
js
aaa
enter
push
sbb
leave
int3
xor
mov
enter
push
out
es
dec
imul
lcall
ja
or
sbb
mov
pop
jae
shr
mov
adc
enter
and
inc
nop
dec
cmpsl
jne
fs
mov
push
in
and
pop
jno
pop
inc
mov
dec
in
mov
xlat
and
fwait
es
icebp
and
push
mov
fisubl
jns
ret
fwait
cld
rclb
push
sub
push
testb
cltd
in
inc
fisubs
cmp
pusha
in
xchg
xchg
cwtl
dec
nop
pop
dec
cmp
es
cmp
jne
xchg
jo
lods
pmulhuw
in
movsb
pushf
xchg
mov
leave
in
test
ret
stc
in
mov
jge
adc
sub
sub
outsb
and
inc
add
or
adc
sub
mov
xlat
xor
divl
xor
xor
movsb
xor
mov
movb
in
fadds
push
rorb
mov
loopne
push
sub
daa
inc
mov
rcrb
fdivrs
mov
fcompl
sbb
icebp
pop
inc
mov
or
mov
adc
lods
xlat
ret
jl
faddl
leave
adc
add
inc
loopne
ret
sbb
ss
mov
cld
inc
mov
call
aad
add
adc
jp
inc
dec
std
mov
sub
enter
popf
dec
movsb
pop
xchg
adc
or
js
mov
cs
int3
add
lret
mov
push
inc
iret
pop
add
aam
fcoms
les
test
outsl
sub
rorb
loopne
mov
or
std
nop
cmp
add
in
cs
pop
addr16
xchg
out
into
nop
call
rcll
push
ret
les
les
in
mov
and
ror
cmp
adc
lock
mov
leave
aad
add
mov
cmpsl
push
or
ss
out
push
push
and
nop
rclb
int
cltd
loop
xchg
stc
and
orl
mov
movl
xor
sub
add
lret
fisttps
adc
pop
std
push
and
imul
add
fstl
mov
ljmp
fsubrs
sub
inc
jp
ret
ss
rorb
enter
xchg
sub
xor
lret
gs
js
add
sbb
psubw
jne
imul
and
nop
mov
pushf
add
sub
add
pop
inc
xor
push
pop
sub
cwtl
shl
or
dec
push
cmpsb
in
rcl
call
and
lahf
xchg
fwait
jmp
pusha
hlt
dec
daa
mov
or
movsb
and
or
arpl
sbb
jno
sub
adc
mov
cmp
add
sbb
push
bsr
inc
jb
inc
icebp
ret
sub
inc
int
out
out
aaa
test
pop
adc
pop
jmp
pop
je
test
pop
cs
call
dec
adc
loopne
or
loop
mov
mov
and
xor
pop
ja
fcomps
push
pushf
and
mov
inc
push
push
and
stos
iret
mov
xchg
lds
loope
out
and
pop
add
sub
decl
pop
adc
pop
lret
mov
push
and
mov
aad
mov
mov
jle
shrb
adc
pop
jmp
mov
call
pop
pop
adc
cmp
inc
rcl
sbbb
dec
push
adc
fadd
cmc
adc
or
lret
add
xchg
mov
lret
out
pinsrw
xchg
and
sbb
sub
and
push
or
add
aaa
mov
pop
xor
sub
and
das
fidivl
cmp
loopne
rcll
push
sbb
jl
imul
adc
out
es
pop
cli
test
add
sbb
or
cmp
les
fisubs
jae
fldl
cli
iret
push
shrl
imul
aam
or
sbb
xor
xchg
dec
jl
push
test
and
xchg
rcrb
sbb
or
test
sbb
sbb
push
or
pop
adc
or
xor
pop
pop
rolb
cmpl
xlat
orb
lds
stos
aad
rol
ret
push
in
or
cmc
clc
mov
dec
mov
hlt
inc
push
cltd
adc
pushl
xchg
pop
outsb
adc
lret
dec
loope
popa
shrb
xchg
cwtl
inc
mov
sbb
adc
iret
fwait
push
nop
loope
ja
fsubs
iret
pop
xor
jo
ljmp
sbb
std
cmp
add
shlb
mov
repz
xchg
inc
mov
dec
push
je
or
out
loop
mov
sub
rcr
jbe
in
dec
scas
xor
test
sub
cmc
je
xor
mov
xchg
jp
and
inc
addb
cmp
jo
add
add
adc
push
mov
push
popf
seta
ds
sub
mov
and
adc
push
or
addr16
jns
ret
add
leave
mov
rcr
loope
pop
adc
in
inc
fildl
adc
fiadds
jmp
pop
sarl
mov
adc
stos
jb
rorb
jp
rorl
sub
insb
cmp
pop
cmp
in
cmp
dec
cmp
sub
pop
cmp
sub
jns
lret
pop
cmp
adc
dec
stc
or
inc
arpl
mov
mov
xchg
insb
jo
xor
push
and
pop
leave
lds
dec
movzbl
xchg
jmp
inc
push
xchg
and
addb
fmull
push
lods
pop
add
pop
xchg
pop
js
add
ja
addb
popa
inc
loope
movb
cli
lret
arpl
ds
push
popf
rcrb
and
cmp
je
sbb
hlt
jl
cmp
add
xchg
adcb
rorb
test
push
loope
loopne
xchg
in
adc
in
sub
xor
mov
lods
add
xor
add
loop
and
int3
jbe
add
cld
push
adc
in
push
add
test
jle
rorb
sbb
test
mov
pop
outsb
mov
int3
cmpsb
leave
add
pusha
jbe
jo
fimull
jne
jle
mov
roll
push
out
or
jns
ficoml
sbb
xor
dec
rclb
cltd
mov
call
pushf
adc
inc
fmulp
scas
mov
testb
or
jne
loopne
push
sbb
call
or
cwtl
or
jle
movsl
loope
aaa
push
rolb
push
and
mov
sub
icebp
lea
dec
xchg
push
mov
sub
test
jnp
or
gs
add
subb
sysexit
mov
addr16
incl
out
sarb
ret
div
scas
push
popf
cwtl
push
sbb
pop
sub
test
ror
add
rclb
adc
leave
les
adcb
fwait
shrl
in
addr16
rolb
sub
ret
push
sbbl
sahf
into
lret
inc
aam
pop
push
aam
and
iret
in
loop
rolb
cltd
hlt
push
lea
jo
sbbl
push
imul
repz
rorb
push
push
adc
adc
lcall
enter
adc
sbb
xor
pop
push
or
addl
int
mov
or
add
fwait
add
stos
out
divl
add
popf
pop
xor
insl
and
mov
in
and
in
popa
xchg
sbb
dec
and
jecxz
mov
sbb
push
add
jae
adc
mov
adc
mov
ror
mov
ret
or
mov
clc
add
mov
push
jbe,pt
lods
das
pusha
pushw
mov
pop
movsl
loope
push
lods
mov
test
mull
push
shll
mov
push
add
push
or
jb
or
mov
fidivrl
inc
and
sub
adc
xchg
fisttpl
fwait
push
adc
pop
or
idiv
cmpl
jne
inc
cmp
jb
dec
movsb
or
pop
push
stos
push
dec
daa
add
or
iret
push
cmp
dec
sub
xor
jne
inc
cmp
jae
mov
push
push
call
popa
rcrl
loop
mov
jmp
xor
imul
mov
inc
aad
clc
or
cli
push
fsubrl
add
mov
inc
repnz
lea
push
jge,pt
push
pop
pop
pop
add
sbb
xchg
xor
jnp
inc
mov
and
sub
fsts
cmp
popf
xchg
test
jnp
loope
jbe
test
addb
lds
por
add
push
mov
fiadds
pusha
pop
push
ret
adc
out
pop
xchg
sbb
push
sbb
arpl
push
pop
adc
or
aad
inc
adc
sti
inc
sub
xchg
dec
das
xor
and
mov
push
mov
shr
dec
jp
inc
jmp
or
dec
adc
inc
sub
add
ja
cmp
push
dec
xor
sbb
or
inc
mov
sub
push
adc
ds
popf
pop
or
pop
pop
push
fists
and
mov
inc
cmp
push
add
fcomps
adc
add
mov
push
dec
fisubrl
cmp
push
or
jne
or
loope
xchg
adc
test
add
push
mov
mov
xchg
pusha
or
add
pop
push
or
cmc
push
nop
sbbl
xor
cmp
push
add
dec
sub
or
sub
frstor
dec
sub
push
stc
xchg
push
sbb
or
shll
enter
aaa
mov
xor
fsubl
xor
sub
or
and
cmc
ror
push
push
sbb
lahf
jle
sub
and
lods
outsb
dec
daa
push
jecxz
sbb
sbb
dec
dec
pop
inc
mov
ret
pop
ja
nop
or
push
xor
dec
jb
or
stos
dec
rolb
adc
mov
es
pop
sub
daa
lret
or
jg,pn
push
movl
adc
sbb
add
sbb
add
jl
mov
push
adc
jae
pop
add
orl
in
enter
mov
loop
cmp
mov
or
push
sbb
xchg
xchg
xor
fmull
ds
cmp
push
and
out
sar
and
add
adc
lods
leave
lcall
and
dec
fdivrl
push
popf
lret
and
daa
pusha
adc
push
stos
add
adc
insl
xor
out
ja
in
xlat
sbb
add
xchg
jmp
dec
fistpl
in
and
xchg
aam
pop
call
add
nop
mov
rorl
jl
xor
imul
push
xchg
cmp
sbb
mov
sub
jmp
in
pop
lea
mov
cmp
nop
ja
into
and
or
xor
test
and
dec
cltd
inc
cmp
insb
mov
or
jle
sbb
sub
sbb
and
cs
xor
xor
movsl
lahf
pop
jb
push
add
insb
adc
or
repnz
mov
xlat
sbbl
add
mov
test
push
adc
sbb
adc
psrlw
in
pop
out
or
out
xchg
jno
add
sub
repnz
xchg
out
stos
sbb
push
dec
pusha
xor
sbb
pop
sub
push
or
loope
rclb
daa
inc
or
sub
add
mov
notl
sbb
pop
dec
cmp
scas
fsubr
fwait
pop
inc
scas
push
inc
sbb
push
xchg
inc
xor
ljmp
add
leave
jae
push
adc
test
ret
nop
xchg
ss
sub
pop
test
or
xchg
xchg
mov
mov
xor
add
inc
mov
inc
xor
dec
aam
or
push
add
mov
push
fsubrs
das
in
jne
sub
jo
mov
sbb
xor
jge
daa
xor
push
loopne
imul
sbb
je
test
fists
dec
or
daa
pusha
adc
cwtl
loopne
cmp
frstor
sub
jae
faddl
or
dec
cmpsb
dec
scas
fadds
xlat
push
xor
mov
xchg
iret
rcr
cmpsl
and
scas
mov
push
test
fadd
shrl
testl
add
sub
shll
or
push
ljmp
pop
and
rcrl
add
adc
push
inc
dec
push
and
test
addr16
add
addr16
pusha
lea
xchg
or
or
sbb
ss
movb
sub
push
xchg
aaa
sbb
lret
adc
xchg
daa
call
or
sbb
sbb
xchg
inc
sub
jl
js
sbb
filds
cmpsb
inc
cmp
pop
loope
movsl
push
enter
sub
out
add
scas
je
push
or
bound
jnp
sub
sbb
add
mov
decl
outsl
xchg
mov
loopne
loope
pusha
pop
add
or
mov
push
jb
scas
xor
and
inc
add
out
insl
sub
xor
adc
pusha
add
stos
mov
mov
jo
fwait
sub
je
inc
inc
shrb
mov
or
sub
sbbb
lock
pop
aaa
fistl
push
add
push
das
or
pop
nop
inc
popa
dec
sbb
or
xorb
push
add
push
pop
pop
pop
insb
push
adc
push
pop
adc
cmpsl
aad
rcl
inc
mov
mov
jne
ret
in
movb
push
xor
push
int3
out
push
lock
clc
mov
leave
bound
ljmp
jb
decb
mov
hlt
xor
xchg
xor
xchg
dec
js
add
or
mov
mov
imul
jge
leave
mov
or
cld
lret
lahf
add
das
adc
inc
or
out
mov
add
add
adcb
pop
push
and
insb
clc
inc
mov
clc
add
mov
outsb
test
mov
ret
aaa
incl
lock
xor
mov
and
xchg
xor
adc
mov
or
inc
cmp
pop
aam
fwait
add
shlb
jp
mov
cmp
rcr
or
or
sub
lods
push
rorl
adc
sbbb
push
cmp
or
push
jp
outsb
pop
pop
push
inc
out
pop
push
mov
clc
test
inc
lock
xchg
ja
or
cld
cmp
je
mov
or
jl
mov
or
adc
pop
enter
push
mov
or
xor
mov
xchg
rcrl
sub
shl
dec
pop
psubw
ja
push
or
cmp
rorb
xor
add
test
add
or
shll
loopne
sti
add
inc
push
push
pop
cmpl
pop
mov
cs
xor
push
xor
xchg
jle
stc
cmpsb
xor
inc
cmp
jb
decl
xchg
sbb
cmpsl
xchg
cmp
ret
and
mov
sysexit
pop
inc
add
movsl
xchg
fisttpl
or
int
dec
jl
push
push
jne
mov
mov
mov
or
xor
jb
loopne
pcmpgtd
scas
lret
xor
mov
mov
lahf
add
push
adc
add
and
cwtl
add
inc
cmpsl
pop
mov
add
jo
inc
movsb
xor
movsl
idivb
pop
ret
xor
pop
push
push
das
dec
test
mov
repnz
xchg
insb
jae
push
jbe
cmp
or
loopne
fimuls
or
mov
jne
lcall
adc
inc
fmuls
mov
popa
and
inc
push
lcall
and
lea
add
mov
inc
mov
adc
shll
xor
xchg
in
push
mov
add
mov
dec
pop
call
jmp
sub
popa
pop
jne
pop
sti
fisubs
mov
or
xor
push
mov
testl
push
mov
or
add
lods
add
inc
in
fnsave
push
push
hlt
dec
pop
and
add
rcll
mov
andb
fldt
add
push
scas
sub
mov
and
andl
jo
pop
add
in
mov
movsb
push
rolb
add
jns
sub
xorb
popa
and
imul
ret
cli
cmp
ds
test
add
popf
jle
jns
fadds
adc
popa
out
or
mov
adc
sub
mov
jl
outsl
push
icebp
adc
mov
add
add
jge
rorb
popa
bound
inc
fdivrl
sub
jb
sub
push
cmp
jne
cmp
add
repnz
lcall
xor
add
jmp
lea
adc
sbb
push
les
push
insl
les
or
iret
inc
jmp
pop
rorl
or
xchg
int3
mov
sbb
add
out
mov
cwtl
data16
dec
inc
jle
lahf
push
dec
dec
xor
add
repnz
dec
or
xchg
add
shll
sbb
jae
inc
jmp
push
inc
adc
xorb
and
add
pop
add
mov
xor
xor
mov
or
jle
sbb
lea
scas
rorb
fistl
into
repz
scas
add
jo
sbb
aad
stc
add
or
push
pop
and
add
loope
mov
rcll
mov
fldl
ret
pop
lahf
fisttpll
adc
test
mov
add
mov
and
cmpsb
dec
push
add
and
or
xchg
addr16
enter
jnp
mul
and
mov
loopne
loop
sahf
push
mov
and
mov
call
fs
in
loopne
js
jge
sahf
insl
cwtl
lods
call
inc
dec
inc
push
sbb
imul
adc
add
rolb
loopne
test
dec
fiadds
xchg
sti
adc
mov
mov
mov
adc
mov
loope
mov
sub
int3
out
into
movsl
frstor
mov
fcomps
xchg
add
mov
fisubs
mov
dec
push
and
fcoml
dec
xchg
test
je
rcll
cmp
or
cmpsl
cmp
pusha
lcall
xchg
ror
pusha
pop
les
rcll
ljmp
jbe
fxch
add
inc
rcll
push
outsl
cmp
or
js
cmp
popf
test
mov
cmp
je
insl
add
jo
in
xor
aam
pop
sub
and
shl
sub
shll
movl
jne
push
fsubrs
fcompl
pop
and
add
add
sub
mov
ja
mov
jbe
push
jmp
add
lods
xchg
xor
pop
mov
out
mov
push
adc
imul
dec
nop
adc
jge
imul
push
imul
out
dec
movsl
push
test
add
aaa
xchg
jmp
jbe
rcrl
push
loopne
faddl
sub
jo
xor
add
mov
js
cltd
rcrb
push
pop
cmc
inc
push
lock
or
inc
sbb
cmc
insl
xorb
xor
shr
dec
add
push
sbb
push
and
sub
movb
mov
adc
xchg
pop
push
aas
fildl
inc
movsb
ret
xchg
mov
xchg
and
push
lea
scas
insl
mov
or
mov
and
pop
jmp
outsl
imul
dec
or
mov
add
pop
js
movsb
in
xorl
xlat
mov
xchg
mov
cmp
jbe
cmp
jbe
mov
sbb
dec
add
add
mov
add
ds
mov
lahf
popa
add
sub
push
inc
mov
insl
add
dec
pop
push
add
and
popf
push
push
sbb
cmp
push
pop
ffreep
jne
inc
or
daa
push
aad
insl
push
ljmp
imul
dec
in
mov
mov
push
sub
cld
push
or
sub
fcom
mov
ret
cmp
jb
pop
mov
xchg
mov
or
mov
loop
or
inc
insb
lea
lahf
dec
cli
jbe
inc
pop
rclb
mov
out
pop
cmp
pop
fisttps
imul
add
lret
xchg
shll
mov
xor
xchg
push
jle
pushl
push
push
or
push
lret
sbb
sub
sbb
xorb
leave
pop
pop
movl
jbe
and
adc
pusha
add
les
call
jmp
rorl
in
andl
fldl
lcall
add
or
pop
xchg
ja
add
movsb
fstpt
adc
add
xchg
sub
sbb
and
rcrb
rclb
imul
xchg
lock
push
and
jl
mov
dec
sub
test
ficomps
or
mov
lahf
mov
lret
mov
xchg
mov
inc
jb
push
push
push
mov
leave
sbb
xchg
xchg
adc
test
push
inc
fstpt
pop
jb
push
and
nop
jl
aaa
nop
push
push
loopne
aas
insl
push
and
testb
adc
mov
push
inc
push
adc
adc
or
inc
mov
pop
cmp
jne
mov
push
nop
insb
sbb
rolb
dec
cmp
jo
and
dec
ret
scas
adc
xor
movsb
and
dec
and
in
or
fstl
sahf
loope
dec
lret
push
inc
imul
in
lcall
pop
and
rorl
insl
loope
test
scas
and
jmp
inc
sub
fidivrs
jl
add
cli
ja
xor
sub
ret
mov
sbbl
and
movsl
out
gs
jbe
aad
enter
cmp
int3
andl
sbb
std
mov
add
or
pop
aad
imul
test
mov
sbb
ss
mov
shl
fisttpll
adc
enter
or
arpl
cmpsl
adc
push
subb
aas
jg
jle
test
testl
movsb
aaa
jge
jge
push
pop
inc
jmp
ret
inc
lea
mov
les
inc
adc
addb
add
mov
out
neg
xor
dec
jg
adc
or
clc
je
add
sub
mov
cmp
test
pop
mov
pop
jne
push
add
mov
inc
xchg
and
inc
shlb
jle
loopne
mov
push
dec
inc
pop
sbbl
inc
lock
fldt
subl
jp
mov
mov
mov
mov
add
xchg
inc
and
xchg
sbbb
pop
adc
sbb
or
or
add
dec
or
fstpt
leave
popf
sbb
loope
arpl
ret
mov
fcoml
pop
fisttps
push
xor
xor
jns
pop
lds
call
aaa
sbbb
mov
inc
mov
push
pop
sbb
dec
test
pop
pop
leave
adc
adc
pop
push
inc
lcall
adc
add
fwait
cmp
ljmp
and
mov
lds
pop
adc
mov
or
xchg
xchg
adc
cld
add
and
adc
lods
lahf
sbb
add
xchg
and
or
push
push
xchg
decl
cmp
push
xchg
out
push
shlb
adc
pop
inc
sub
sbb
cmpsl
xchg
add
adc
pop
mov
mov
mov
gs
and
jo
jle
add
mov
push
xlat
es
add
sbb
ja
add
ret
fistpll
push
adc
imul
mov
jg
or
cmp
jne
loopne
or
ror
jl
sub
sub
jge
push
and
sub
inc
mov
xor
daa
push
shrb
push
push
enter
sbb
inc
pop
mov
int
or
rorb
push
push
mov
push
xor
fwait
pushf
int3
sbb
shr
call
or
pop
and
push
dec
pop
stc
cmp
inc
enter
pusha
iret
xor
ret
push
daa
pusha
cwtl
adc
scas
add
jge
push
push
adc
mov
xlat
push
imul
inc
shr
push
data16
mov
es
imul
les
adc
or
icebp
andl
mov
icebp
jl
or
gs
test
cmp
insb
sub
lods
stos
pop
rorb
and
or
adc
pop
or
inc
call
add
cltd
adc
in
lea
jbe
adc
push
xchg
ljmp
dec
fstpl
and
inc
sub
test
jnp
hlt
scas
pop
mov
mov
pop
xlat
fsub
jae
xchg
mov
mov
push
mov
lahf
mov
cwtl
push
push
jp
jns
sub
aas
push
push
daa
adc
mov
push
jge
push
fistpll
push
cmp
jbe
mov
call
loopne
and
add
mov
lret
sub
dec
sti
rcr
pop
xchg
enter
xchg
and
mov
insl
shl
shl
repz
mov
pop
dec
add
loopne
mov
push
lds
adc
adc
cmp
mov
push
jl
cmp
mov
adc
push
outsb
mov
mov
xchg
xor
jns
jecxz
push
push
or
std
mov
daa
aam
call
add
loop
push
add
addb
mov
sub
sub
sbb
adc
in
cmc
test
add
and
sbb
je
push
scas
mov
cmp
or
fadd
test
push
mov
popf
hlt
or
cmp
inc
and
inc
rclb
jbe
mov
ret
fstpt
sbb
fiadds
sar
repnz
das
pushf
and
add
jl
lods
cmp
pop
mov
aaa
pop
mov
movsl
movsw
push
push
gs
movsb
mov
ljmp
or
or
mov
shr
mov
fnstsw
or
mov
inc
inc
cmp
jle
movb
test
sub
or
pusha
enter
mov
addr16
pop
mov
pop
loopne
lret
movsbl
mov
ds
push
push
in
cmpsb
sub
add
jb
and
mov
paddb
push
test
and
sbb
inc
push
xchg
mov
inc
add
imulb
xchg
cmp
cmpl
cmpsl
cmp
add
inc
test
sbb
leave
jge
xchg
add
es
add
sub
sbb
pop
cli
adc
mov
or
push
subb
jl
sbb
sbb
and
sub
sub
pop
ret
ficompl
inc
xor
jno
jecxz
adc
aaa
loop
lock
adc
inc
adc
sbb
pop
adc
mov
sbb
sarb
dec
xor
and
insb
adc
or
and
push
mov
adc
pushf
pushf
mov
push
add
add
pushf
pushf
pushf
pushf
push
pop
or
outsb
outsb
outsb
lahf
or
jnp
or
jbe
jmp
or
outsb
outsb
push
jmp
por
jmp
adc
pop
outsb
outsb
outsb
outsb
adc
push
adc
dec
adc
dec
adc
outsb
outsb
push
jmp
pop
jmp
sbb
xor
outsb
outsb
outsb
sbb
sub
jmp
sbb
and
outsb
outsb
push
jmp
pop
jmp
and
or
sbb
add
adc
out
test
push
mov
lds
add
add
fildll
test
cmpsb
push
fsubl
push
in
jl
out
hlt
cld
add
or
repz
adc
and
xor
repz
cmp
cmp
repz
push
pop
pusha
gs
repz
push
je
jle
cmp
repz
lea
into
repz
add
push
pop
or
and
dec
add
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
lods
cmp
aam
sbbb
cmp
sbb
xchg
pop
mov
inc
push
ret
or
mov
cmpb
sbb
xor
cmp
jle
mov
insb
pop
add
mov
pop
mov
js
xor
shlb
push
sub
pushf
push
scas
fisttpl
mov
jge
std
xchg
shll
incl
out
lock
mov
adc
mov
inc
cmp
jbe
sub
adc
icebp
push
mov
std
adc
sub
fcoms
adc
push
pop
daa
out
or
loopne
sbbb
xor
fistps
xor
inc
mov
sbbl
and
or
mov
and
fnstsw
movsl
pop
and
aaa
lock
add
jbe
repnz
adc
out
pop
add
fisttpl
push
push
mov
aad
adc
xchg
sti
pop
push
add
mov
push
adc
test
xchg
inc
dec
lret
xor
adc
jb
pop
mov
sub
add
inc
enter
dec
fs
xchg
pop
adc
jmp
xchg
test
sub
xor
xor
adc
mov
cmp
inc
dec
add
enter
push
push
and
arpl
mov
inc
adc
mov
add
mov
mov
jmp
sbb
sub
adc
stos
sub
inc
pop
sub
mov
push
stos
and
ja
pop
push
adc
shlb
adc
mov
pop
pop
test
lock
gs
hlt
push
in
cmp
xchg
or
call
cmp
das
push
jne
add
xor
xor
rolb
sub
push
dec
or
adc
cmp
fildl
sbb
sbbl
add
bnd
mov
test
outsb
push
sbb
cmp
push
cmp
mov
lock
xchg
pop
out
jle
inc
jo
pop
scas
add
sbb
movsl
xorb
or
add
push
jne
aas
inc
mov
xchg
xchg
add
orb
mov
in
mov
fstpl
mov
fwait
icebp
sbb
movsb
adc
dec
inc
ds
cwtl
adc
popf
jno
popa
inc
push
insb
or
mov
xor
mov
je
je
dec
xchg
xchg
lock
clc
adc
fs
popf
cmp
cmp
push
sub
sub
cmp
sub
mov
dec
notb
push
es
push
daa
shrb
sbb
add
xor
popa
and
test
mov
inc
ret
add
test
js
add
pop
xor
fadds
je
push
mov
sbb
add
push
sbb
imul
add
mov
clc
dec
pusha
or
xor
and
or
fildl
cmp
cmp
shll
cmp
movsb
clc
mov
cmp
inc
sub
add
adc
pop
push
adcl
aam
ror
in
jno
mov
xor
dec
pop
mov
orb
mov
les
adc
or
jmp
les
push
cmp
add
xor
cwtl
push
inc
and
inc
add
mov
xlat
loope
fmul
mov
cmpsb
fsubl
sbb
in
xor
rcl
loopne
int3
enter
stos
xchg
xor
mov
push
outsb
or
mov
or
and
push
insl
movsb
shl
cmpsb
add
xor
je
jecxz
jbe
imul
movsl
ds
icebp
das
fs
or
pop
icebp
jne
pusha
mov
add
add
movsl
xchg
adc
mov
int3
mov
out
cmp
test
testb
or
inc
je
std
or
in
adc
xor
call
loop
je
nop
push
add
jmp
loopne
cmp
cmpb
mov
mov
or
xor
sbb
add
loopne
and
xor
add
add
cmp
and
enter
sahf
int3
or
mov
testl
dec
shl
shrb
insl
dec
fstps
adc
push
add
and
xadd
sub
jp
xchg
pop
push
sbb
ljmp
pop
push
push
add
mov
rcl
sub
push
mov
sub
adc
xor
sbb
xor
imul
arpl
push
or
pop
inc
repz
inc
dec
aas
lahf
pop
dec
push
xchg
mov
mov
sbb
adc
push
or
add
cmp
fwait
xor
inc
add
jg
in
adc
push
cmp
or
nop
and
rolb
mov
pusha
push
into
fisubrs
sbb
sub
dec
sahf
int3
shlb
stos
cmpsb
test
pop
repz
jecxz
add
mov
es
sub
or
cmpsl
add
ret
addb
cmp
jmp
cmpl
in
leave
addb
fcomps
fiaddl
add
jbe
jge
daa
in
add
push
dec
push
movsl
push
popf
xchg
sbb
add
dec
push
pop
and
xchg
add
sub
pop
je
flds
das
or
and
je
sbbl
push
dec
mov
sbb
add
stos
pop
sbb
lock
cmp
fwait
lret
mov
xor
add
xor
fcoms
add
or
adc
sub
mov
adc
inc
cmp
add
adc
pop
jle
ja
adc
and
or
ljmp
jmp
cmp
je
mov
inc
call
mov
lock
push
jnp
adc
jns
and
loopne
mov
push
call
imul
cld
popl
add
push
gs
jns
in
or
bnd
push
jb
mov
or
inc
xchg
xor
inc
les
out
adc
inc
sub
shr
adc
cltd
jne
mov
cmc
push
cmp
es
loopne
pop
dec
orb
pop
pop
push
int
cwtl
jl
inc
xchg
rclb
dec
pop
comiss
in
add
sbb
jbe
and
ja
pop
sbbb
jo
and
and
inc
xor
dec
lock
jg
dec
sub
cmp
push
orl
xor
add
insb
xlat
add
or
rorb
sub
lret
cmpsb
es
mov
iret
not
repz
xor
adc
add
fs
xchg
pop
cmp
sbb
push
push
mov
leave
xchg
xchg
or
or
rcrb
xor
xchg
and
push
in
sub
pop
adc
add
mull
in
test
bound
xor
pop
pop
inc
outsl
int
xchg
add
xor
shl
mov
es
add
in
and
je
js
xchg
je
in
and
pop
test
in
lock
nop
mov
enter
icebp
cwtl
sbb
mov
out
and
nop
pop
xchg
jmp
and
movsb
lods
mov
xchg
mov
fwait
movsb
fwait
movsb
sarb
push
cltd
movsb
enter
or
decl
pop
xchg
icebp
test
push
jb
xor
call
loope
sub
cmpb
jno
sbb
cwtl
and
mov
lea
push
mov
test
and
ret
insl
and
xchg
repnz
jbe
or
mov
incl
cmp
jl
sub
iret
lods
adc
lea
js
hlt
cmp
je
dec
jp
push
ja
or
adcl
aas
ds
xor
subb
xor
iret
cmpsb
repnz
lods
sub
sub
andl
jne
jnp
mov
push
pop
jl
jmp
out
lea
jge
sbb
jge
xchg
sbb
mov
mov
sti
and
pop
jne
jge
mov
and
add
mov
add
sbb
mov
mov
in
shll
int3
sub
xor
inc
and
daa
insb
je
sarl
js
movsb
loopne
mov
sbb
push
push
jno
xchg
fisubrs
fs
sub
or
test
mov
call
jmp
pop
popa
cmpsb
or
call
inc
hlt
push
pop
sysexit
push
cmp
push
pop
add
cmp
jle
les
jg
es
repnz
call
inc
add
push
fistpl
sbb
mov
inc
sahf
js
adc
dec
sbb
lods
jle
mov
or
xchg
pop
push
pop
pop
adcb
sub
rclb
pop
outsb
adc
pushl
jp
push
cmp
je
cmp
jne
push
inc
pop
inc
sub
add
sub
and
dec
sbb
push
mov
cld
mov
dec
mov
call
dec
push
clc
mov
in
mov
push
dec
cmp
or
loopne
xchg
push
mov
push
adc
push
cmpl
ret
sarl
std
ds
or
hlt
dec
cltd
or
push
cmp
cmp
insb
cmc
sbb
test
lret
jo
lods
mov
hlt
inc
imulb
push
lea
pop
lods
xchg
xchg
adc
xor
cmp
push
add
popa
lea
cmp
cmp
push
mov
or
jbe
fwait
push
push
jnp
push
add
lods
fadd
mov
jge
ss
daa
dec
mov
mov
stc
call
cmp
adc
cwtl
pop
cmpsb
nop
in
aad
xor
addb
sub
sarl
jne
push
nop
hlt
mov
adc
rclb
scas
xchg
or
fdivrs
dec
fs
inc
shl
outsl
mov
loopne
add
in
xor
xchg
sub
ss
push
push
imul
fstpt
jo
adc
xchg
call
add
push
jnp
sub
lods
sub
clc
or
adc
adcb
or
or
pusha
inc
fsubs
cmp
jne
inc
adc
xchg
rorl
test
jne
sub
scas
insl
cltd
rcll
xchg
test
xor
push
pop
sbb
push
and
xor
lcall
push
sub
sti
movl
sbb
mov
lds
mov
dec
testl
test
lds
fmuls
scas
push
pop
or
pop
and
sbb
rcll
mov
rolb
pop
push
sub
dec
ss
and
dec
sbb
test
dec
leave
fchs
movsb
add
mov
test
andl
out
push
push
imul
push
test
xchg
push
ss
cli
rcr
jle
jne
rclb
int
iret
mov
xchg
movsb
or
xchg
xor
shl
mov
subl
les
sub
loop
add
or
adc
scas
mov
adc
jmp
sub
push
lea
sub
sub
cmp
inc
and
not
xlat
xor
push
adc
mov
mov
push
add
and
sub
pop
cs
loopne
in
icebp
insb
bound
push
stos
adc
cmp
mov
xchg
or
dec
mov
aam
jae
inc
jp
insl
je
add
cmp
add
or
jmp
xchg
sahf
push
inc
lock
xchg
push
stos
insb
sbbb
rcrl
ss
mov
imul
adc
popf
pop
test
arpl
fsubl
jne
sub
and
adc
sub
ret
in
pop
sbb
aam
add
in
sahf
cmp
and
aas
scas
scas
pop
or
xchg
icebp
push
inc
push
mov
jmp
dec
inc
mov
cmp
mov
pop
flds
sub
add
inc
insl
push
mov
xor
repnz
cmp
repz
dec
push
loopnew
sub
and
xor
xor
into
add
or
js
lea
jne
xor
lea
ss
stc
xor
mov
xor
dec
loopne
mov
xor
sub
push
cltd
dec
mov
sbb
xchg
mov
pop
inc
lea
stc
das
lahf
xchg
jbe
pop
in
push
sbb
out
daa
push
push
dec
in
cmp
sbbb
inc
and
or
or
inc
test
sub
mov
adc
push
aad
js
jge
push
scas
xor
fs
aas
push
subl
sub
out
xchg
imul
and
mov
push
xor
or
or
icebp
mov
and
adc
fldz
fcomp
fnstsw
sub
jmp
dec
add
dec
fnsave
pop
fdivs
faddp
push
insb
dec
inc
pop
fistps
in
add
sbb
int3
inc
addr16
fldcw
hlt
mov
es
mov
sarb
cmp
mov
test
dec
inc
inc
lock
sub
cmp
dec
hlt
jle
aam
adc
ljmp
push
inc
shlb
cwtl
in
or
mov
sub
sub
add
out
xor
or
pop
xor
in
mov
fistpl
out
push
add
sub
lods
es
andb
jmp
fiadds
pop
cmp
test
adc
inc
xchg
cs
lods
xor
jle
ss
pusha
es
int3
push
fwait
sbb
add
mov
lock
aas
fldl
mov
imul
rcll
or
jp
mov
out
or
pusha
cmpb
sahf
mov
fimuls
cltd
clc
imul
cmp
and
in
enter
rcrb
push
cmpsl
orb
jno
lock
sub
mov
cmp
xchg
pop
lcall
push
jne
or
add
adc
mov
jno
aaa
pop
and
xchg
inc
mov
xor
push
pushf
mov
mov
movsb
sbbl
xor
push
lret
shlb
popa
ret
jl
jge
sbbb
pop
inc
or
mov
jo
mov
inc
mov
movsb
mov
in
jne
dec
or
cwtl
pop
jp
loopne
testl
push
or
mov
cmpl
pusha
shll
xchg
add
pavgb
and
out
push
hlt
mov
push
arpl
sti
fmuls
sub
push
jns
rcr
sub
sti
xor
cmpsb
dec
mov
mov
add
or
aaa
add
add
out
jmp
cmp
sub
inc
stc
cmpsl
repnz
repnz
jb
push
dec
in
pop
or
dec
pop
jb
jns
movsl
test
sbb
mov
cmp
inc
lock
jb
dec
adcl
cmpsl
jo
aas
dec
gs
dec
sub
inc
mov
push
pusha
sbb
imul
inc
xor
and
rorl
dec
push
stos
mov
pop
dec
sti
or
jns
sbb
mov
pop
mov
shrb
sub
aaa
and
repnz
or
test
and
pop
fs
pop
adc
push
or
dec
sbb
cwtl
and
inc
push
sub
sti
jbe
jmp
es
push
and
sarb
mov
mov
push
mov
lods
sub
pusha
mov
lock
pop
push
es
cli
cmpsl
push
pop
les
mov
adc
adc
xchg
shlb
js
mov
lcall
and
and
rcll
cmp
mov
mov
mov
add
call
pop
aaa
cmp
call
add
test
pop
mov
into
je
xor
push
jmp
stos
or
inc
inc
dec
loope
add
test
orw
cmp
in
or
mov
dec
jp
pusha
sbb
adc
rcl
fcoms
dec
rclb
adc
cmp
adc
lret
daa
add
xor
cltd
repz
adc
sbb
or
rcrb
cmp
jb
out
xor
pop
jg
and
add
add
aam
pop
jbe
push
sahf
jbe
fmuls
dec
movsb
xchg
cmc
push
push
cmpl
dec
inc
add
cmp
sub
repz
inc
push
mov
push
push
push
dec
xchg
or
es
inc
push
dec
jle
add
mov
ds
mov
push
pop
jp
and
or
jo
dec
sbb
sub
add
sub
mov
cmp
cmpl
into
push
mov
repz
cmp
ret
imul
mov
dec
data16
add
or
lret
add
dec
jg
xchg
xchg
lret
je
subl
inc
jb
push
add
es
rcr
push
mov
repz
xor
dec
mov
enter
addr16
shlb
jl
arpl
ret
dec
int3
ret
aam
dec
pop
add
movsl
mov
pusha
inc
push
cmp
aaa
fs
push
sub
sub
call
add
in
stos
or
or
fiadds
sub
cmp
xchg
xor
add
insl
popa
and
push
add
xor
dec
shll
xorb
mov
and
pop
adc
std
in
sub
rclb
mov
mov
popa
and
xchg
imul
call
aam
inc
arpl
push
inc
pop
jp
cltd
push
ret
cmp
es
add
out
hlt
xchg
jae
sbb
jnp
cmp
or
hlt
call
cmp
cmp
pop
adc
and
adc
push
bound
imul
sub
fs
sbbb
lea
add
fsts
mov
inc
mov
pop
xchg
or
inc
sub
call
mov
iret
add
cmp
mov
pop
ljmp
add
mov
sub
cmp
pop
or
adc
add
orl
add
dec
pop
pop
sub
adc
scas
mov
iret
or
nopl
and
cmp
xchg
negl
jge
dec
push
js
xlat
es
sub
sub
sbb
xor
or
bound
adc
push
in
je
mov
pusha
in
push
add
mov
push
push
push
add
inc
int3
in
movsb
ds
push
sbb
cmpsl
adc
sub
xchg
icebp
cli
mov
mov
xorb
fld
adc
xchg
cmp
push
jne
cmpsl
movsb
sti
jp
mov
or
ss
popf
adc
sbb
and
jne
dec
movsb
sub
loopne
insl
sub
and
outsl
sub
add
mov
inc
jmp
lcall
xor
pop
roll
add
adc
loop
xor
les
nop
add
or
push
rcll
adc
xor
pusha
push
or
or
dec
mov
mov
push
inc
rclb
mov
dec
and
jae
adc
mov
sbb
pop
rolb
xor
push
gs
push
pusha
shrb
xor
inc
stos
cmp
add
cmp
shll
cs
push
call
push
sub
mov
push
in
dec
jg
jb
and
test
jae
test
jnp
sub
jo
push
dec
in
shll
mov
add
movsl
jo
shr
sar
adc
adc
or
and
repnz
mov
jle
cmpsl
mov
or
les
inc
pop
movsb
xchg
movb
push
jg
bound
ds
imul
lea
add
push
fsubl
lods
sbb
je
xor
or
push
enter
test
stc
or
es
mov
adc
add
mov
jo
in
mov
cmp
ss
mov
shlb
add
mov
mov
mov
xor
push
xor
aam
push
xorb
es
mov
inc
dec
mov
shr
or
lret
add
roll
aam
pop
in
ficomps
inc
imul
loope
leave
lahf
jl
jno
test
add
inc
push
enter
adc
sbb
or
rorb
lcall
adc
or
lahf
rcr
sti
mov
or
fcoml
enter
outsl
adc
mov
or
arpl
mov
mov
pop
cmp
inc
or
sub
mov
xchg
cmp
add
mov
xor
pop
jo
test
movsl
movsb
movsb
pop
dec
hlt
xchg
sbb
pop
int3
xchg
add
or
dec
insb
xchg
mov
xorl
and
mov
loopne
xor
jo
xchg
pop
loope
movb
add
out
clc
push
add
add
addb
adc
mov
scas
dec
jne
or
adc
es
sbb
push
sub
ret
sti
jmp
cmp
sub
pop
fsubs
dec
rorb
xchg
mov
inc
add
mov
xorb
pop
fcomps
out
add
mov
jno
push
mov
pop
in
dec
cmovno
jb
mov
and
mov
das
jmp
fcompl
push
data16
decb
pop
fildll
mov
lret
and
jle
test
subb
arpl
jge
pop
add
movsl
pop
or
push
movsl
call
xor
inc
hlt
call
push
jne
jne
divl
adc
fmuls
cmpsl
push
mov
repnz
ds
inc
mov
pslld
dec
jo
sbb
xchg
cmp
cmpsb
cmp
and
loopne
fmull
nop
mov
mov
popa
dec
push
push
and
or
sbb
mov
jecxz
loopne
test
add
je
sbb
xchg
and
lods
xchg
mov
jmp
cli
aam
mov
repnz
rcr
mov
adc
rclb
cmp
je
popf
les
xchg
sbb
or
inc
cmp
or
xchg
pop
and
aam
call
push
test
lods
and
or
shrb
pop
mov
sub
or
lret
pop
sub
adc
jg
sbb
nop
sbb
cltd
jne
push
cltd
sub
std
push
loopne
out
movzbl
push
add
mov
xor
cmp
jp
inc
cmpsb
mov
push
jl
mov
rcll
sub
leave
leave
adc
mov
out
pop
ljmp
out
sarb
fwait
mov
ds
sbb
mov
stos
mov
into
loopne
aas
or
cld
push
cmpsl
pop
add
insb
shll
pop
push
pop
ficoml
sbb
mov
cmp
test
adc
pop
jg
xor
jnp
and
push
mov
pop
sbb
sbb
test
cmpsb
data16
mov
nop
arpl
sbb
inc
dec
and
xchg
sbb
jb
fdivrs
div
or
int3
dec
cmp
push
aaa
ret
test
mov
out
push
je
or
mov
or
and
mov
sbb
ret
loope
add
mov
andb
jmp
repnz
mov
ret
imul
adc
test
icebp
fistpl
lods
jge
in
mov
mov
dec
cmp
push
fsubl
scas
add
push
cmpsl
fcom
push
push
icebp
int
shrl
gs
rcrb
mov
lods
sarl
add
cmpsb
dec
pop
dec
jecxz
mov
popa
adc
loopne
inc
lcall
lods
push
mov
sbb
add
dec
out
sbb
push
les
movsb
lahf
fwait
xor
int3
arpl
pop
adc
mov
or
mov
sub
fnsave
int3
pop
ltr
lcall
movsb
mov
mov
mov
jmp
push
xchg
loopne
cmp
mov
mov
or
test
rcll
mov
fwait
jp
mov
xchg
shlb
adc
fs
sub
test
mov
push
push
loopne
dec
xchg
addr16
sub
dec
mov
and
je
hlt
pusha
lahf
xchg
or
xchg
xchg
pushf
in
je
push
sarb
fsubl
test
pop
inc
stos
dec
int
and
push
insl
call
out
mov
pop
test
or
push
ficomps
outsl
inc
jg
out
or
and
mov
push
or
pop
mov
xor
movsl
mov
cmp
sbb
sbb
or
clc
rolb
inc
add
std
std
push
loop
jns
dec
or
xchg
add
xchg
inc
xor
push
sahf
std
lcall
fcomps
je
sbb
xor
ljmp
sahf
popa
addr16
sub
call
xor
mov
sbb
mov
int3
inc
add
and
jne
mov
loopne
jb
cmp
xchg
jnp
push
pushf
arpl
movsb
push
mov
rorb
pop
mov
jmp
push
sbb
or
rcrl
adc
test
mov
inc
or
es
lock
insb
mov
cwtl
ljmp
push
and
rolb
or
or
enter
stos
xor
jns
rclb
sub
mov
adc
mov
in
xor
pop
test
pop
or
addr16
loop
in
inc
fcoms
cmp
in
xchg
sbb
mov
push
loope
sub
xchg
xchg
pop
xor
mov
sub
scas
jo
notb
lock
int3
xchg
test
inc
in
outsl
mov
sbb
call
jge
mov
push
push
adc
in
cs
sbbb
push
push
scas
dec
push
push
cmovnp
push
pop
push
inc
fsubrl
in
and
push
out
pop
cmp
test
cmp
nop
jle
or
dec
xor
sbb
push
and
js
jnp
aam
mov
adc
das
push
jl
pop
cwtl
sbb
daa
pop
sbb
insl
inc
pop
mov
loop
in
and
ret
test
sbb
stos
lods
xchg
in
push
daa
adc
ret
in
cmp
sub
addr16
or
mov
add
adcb
mov
bound
jp
pop
lret
cwtl
add
jo
addr16
push
shrl
push
adc
stc
mov
mov
lret
test
mov
sbb
xor
add
pushf
mov
xlat
xchg
dec
cmp
popf
ss
pusha
jl
jne
in
pusha
sub
add
decb
push
inc
cmpl
push
mov
lcall
jmp
sbb
cmp
outsl
imul
pop
sub
and
pop
jl
out
sub
add
movsl
inc
test
push
or
pop
inc
and
cmp
sub
xor
sete
jne
movb
push
adc
lock
xor
jle
cmp
pop
mov
or
mov
mov
adc
add
les
cltd
dec
xor
push
push
jmp
gs
adc
pop
enter
and
inc
mov
pop
hlt
inc
js
pop
jp
js
adc
sbb
jl
and
frstor
popa
enter
sub
and
iret
inc
pop
fsts
pop
mov
mov
test
cmp
jg
mov
js
stc
push
or
or
or
sub
lea
out
clc
pop
cmpsl
mov
push
pop
in
pop
adc
inc
cmovae
xor
ljmp
cmp
jge
mov
push
jg
pop
cmp
jle
lcall
push
or
or
jnp
std
push
cmp
in
repnz
jne
inc
inc
jmp
inc
fs
sub
gs
pop
pop
aas
cmp
cli
mov
add
pop
inc
lods
xor
rorl
test
inc
jle
add
out
repnz
outsb
or
sub
sbb
aam
jne
jmp
scas
arpl
imul
pop
fdivl
test
repz
fldl
pop
or
jl
or
or
imul
js
and
aam
sbb
mov
add
outsb
aam
pop
in
mov
sbbl
xor
mov
push
cmp
sub
out
shl
push
xchg
mov
mov
sub
dec
xor
inc
je
les
adc
mov
mov
imul
movsb
push
jne
push
lods
adcl
movsl
push
faddl
adcb
and
rclb
cwtl
push
mov
cwtl
mov
ffreep
les
jmp
fmuls
inc
fs
jnp
in
aam
imul
dec
or
push
xor
test
add
add
sbb
push
dec
clc
and
je
dec
pop
lahf
add
test
outsl
mov
mov
dec
cs
mov
mov
mov
or
popl
push
xchg
fdiv
push
mov
jmp
xor
pop
pop
push
sbb
and
loopne
pop
sub
adc
pop
outsl
mov
adc
mov
lods
rolb
stos
add
fcmovnu
push
dec
add
call
mov
dec
add
or
push
mov
lea
push
addb
xor
xor
add
xor
or
dec
add
add
rcll
ds
mov
push
inc
and
in
mov
pop
mov
add
or
bound
jecxz
jne
mov
inc
xchg
or
jl
lods
inc
adc
mov
pop
xor
push
fisubrs
ret
cmc
dec
adc
lods
xlat
mov
gs
jmp
mov
xchg
push
or
mov
push
push
inc
inc
xor
mov
cmp
gs
pop
cmp
jnp
rorl
test
imul
sub
adc
lret
sub
add
mov
push
add
or
sbb
movsl
push
in
mov
lea
xchg
fdivr
push
fcoml
dec
sbb
mov
mov
test
jecxz
xor
rcll
lea
cmp
pop
mov
sbb
mov
sarb
js
loopne
cmp
lea
cmp
jl,pn
mov
loopne
push
or
mov
sbb
rorb
xor
shlb
cli
shr
xor
addr16
fsubl
mov
not
mov
lock
mov
xor
jg
pop
shr
cmp
jbe
add
jmp
add
mov
incl
lahf
repnz
xchg
fadd
pop
and
or
inc
test
adc
mov
leave
mov
frstor
loope
in
adc
cld
fiaddl
sub
sahf
adc
and
push
add
sbb
or
in
insl
mov
push
push
xor
xchg
mov
sub
lods
outsb
jecxz
inc
out
fmull
imul
inc
int3
sbb
rolb
sub
mov
jnp
mov
or
jb
xor
sub
inc
push
or
adc
lods
scas
jnp
push
cmp
jecxz
mov
bound
add
add
aam
lods
cmp
outsb
xor
push
inc
jbe
aas
pop
add
mov
pop
mov
inc
in
sbb
dec
xor
fstp
adc
cmp
xorl
pop
add
mov
jno
jmp
dec
sub
add
xchg
jae
push
arpl
bound
ret
ds
mov
add
and
xor
lock
pushf
addb
sub
sbb
cli
inc
rcrl
push
je
pop
push
lods
mov
data16
jp
jmp
inc
or
mov
jge
cmp
js
lock
add
adc
dec
cltd
sub
and
and
pop
and
dec
sti
addl
in
pop
add
outsb
insb
add
fistpll
push
and
push
jecxz
jg
enter
sbb
lea
add
push
mov
lods
adc
pop
jmp
rorb
cmp
sbb
or
cmp
aaa
xor
jns,pt
add
and
arpl
cmp
xchg
mov
fs
loop
cmp
mov
sub
lret
xor
add
push
test
inc
pop
test
sub
add
add
xchg
xchg
pop
adc
dec
or
pop
push
and
and
xor
sub
add
sub
add
pusha
ficomps
mov
fadds
mov
xchg
into
shr
in
inc
lock
push
js
add
mov
and
lahf
and
mov
outsb
push
dec
mov
mov
negb
shll
xchg
jne
jl
mov
int
add
or
aaa
je
in
adc
xor
mov
push
xor
cmp
cmp
adc
add
adc
sbb
insl
cmp
and
in
out
imul
xchg
pop
fimuls
mov
and
movsb
adc
dec
aad
dec
dec
push
imul
popa
test
scas
jbe
mov
push
adc
pop
jne
stc
cmc
dec
or
sub
cmc
flds
push
sbb
xchg
sahf
jmp
mov
leave
xlat
push
add
add
iret
test
and
adc
and
sub
xchg
jo
or
or
or
fiadds
or
adc
xchg
mov
inc
lock
ja
loope
push
pop
push
dec
sub
into
jmp
sbb
push
je
shrb
push
or
cwtl
enter
cmp
daa
mov
cs
mov
push
and
xor
add
mov
loope
dec
add
add
movsb
or
sub
pop
dec
mov
jno
fsubs
lcall
mov
add
jmp
inc
js
rolb
or
rorb
sub
insb
rclb
mov
push
jle
sbb
mov
movsl
inc
sub
and
sub
xor
adc
push
mov
cli
xor
mov
and
add
daa
mov
cwtl
add
int3
push
sbb
dec
add
push
mov
cvtpi2ps
call
hlt
daa
cs
pop
gs
pop
lods
dec
add
add
sub
mov
push
fstps
and
cmp
loopne
sub
xchg
fstps
inc
sbb
or
or
inc
enter
xchg
sarb
and
xor
mov
add
out
mov
pusha
pop
adc
loopne
pop
jne
dec
or
jl
call
mov
jno
cmpsl
push
loopne
pop
add
mov
aas
jo
cld
push
push
add
adc
dec
adc
and
and
sub
cmp
and
xor
hlt
xchg
adc
xchg
in
cs
sub
mov
aaa
test
push
pop
in
in
or
aam
add
add
in
sbb
lods
scas
daa
sbb
jne
adc
loopne
push
outsl
push
push
cmp
mov
jbe
xor
pop
jle
add
sub
xchg
push
jecxz
gs
adc
test
add
inc
fnstsw
push
push
scas
push
adc
lahf
in
mov
push
inc
hlt
xchg
jg
out
mov
sub
outsl
adc
xchg
xchg
int3
insb
cld
mov
cmp
jne
rorb
mov
jp
pop
adc
sbb
jmp
lret
sub
xchg
dec
mov
mov
lock
xor
cwtl
add
xchg
shlb
scas
sbb
push
mov
lea
outsb
inc
imul
popl
push
nop
jo
outsb
adc
dec
lock
dec
insb
jp
jne,pn
pop
pushf
jge
xchg
jno
outsb
xchg
stos
sbbl
insb
mov
out
fs
sahf
lock
mov
xchg
sub
outsb
sub
shlb
adc
or
mov
push
pop
add
hlt
adc
in
jg
in
sarb
xchg
inc
repnz
pop
sbb
mov
das
mov
adc
insb
fs
cmc
aas
fwait
inc
sub
js
mov
aaa
repnz
dec
je
cmp
push
jg
imul
cmp
pop
pop
and
inc
daa
in
int3
inc
xchg
lahf
nop
rorb
aam
jecxz
test
sbb
push
mov
hlt
arpl
xor
xor
mov
sbb
lcall
int
sbb
fldz
scas
add
pop
push
add
push
fsubl
push
outsl
sub
pop
push
inc
addl
movsb
call
sbb
inc
or
andb
ljmp
ja
inc
adc
xor
adc
push
and
push
call
add
add
jmp
adc
add
jno
movsl
sub
adc
or
xor
in
sub
arpl
pop
pop
movsl
aam
enter
pop
icebp
and
pop
sbb
push
insb
sbb
jmp
test
or
lods
subb
icebp
jg
cmp
add
out
sub
inc
mov
push
adc
cmp
bound
shrb
mov
cmp
negb
push
iret
push
xchg
sub
sub
inc
lea
push
sub
scas
nop
hlt
push
add
dec
adc
or
es
mov
add
imul
adc
xor
lock
dec
imul
xor
cld
push
xchg
mov
faddl
jg
cld
or
jnp
pop
adc
or
jl
ja
jno
rorl
push
int3
movb
outsl
pop
push
decl
inc
adc
xor
mov
jl
push
lods
or
scas
and
test
ret
and
scas
jo
inc
repz
leave
ficoms
icebp
inc
clc
jo
push
bound
add
and
and
mov
sub
cmpsb
fwait
icebp
mov
dec
jg
adc
nop
or
mov
adc
int
incl
outsl
xor
sbb
inc
mov
push
or
push
mov
loopne
push
cmpsb
sbb
ret
ret
dec
xchg
stos
lock
xor
jno
mov
fidivl
and
push
arpl
sbb
mov
or
mov
fistpll
notl
add
cmp
loopne
sub
std
xor
mov
sub
jbe
jmp
xchg
js
push
bound
pop
add
shrl
xorl
add
dec
or
inc
dec
add
data16
push
jns
pop
repnz
pop
movsb
mov
xchg
inc
or
dec
add
sub
and
hlt
push
out
add
cmpsl
push
movb
xchg
test
mov
bound
ss
movb
pop
inc
mov
mov
add
shl
and
push
lock
cltd
mov
inc
xlat
pop
cmp
cli
pop
adc
addr16
adc
mov
and
inc
mov
fwait
movl
adc
iret
pop
mov
or
xor
arpl
push
jo
jge
sub
bound
mov
scas
pusha
sub
sbb
aaa
sbb
push
pop
pop
and
adc
mov
out
ja
lret
jbe
push
insb
and
sbb
notl
popf
push
outsl
push
push
jo
pusha
mov
aas
push
mov
or
adc
test
push
data16
jbe
adc
testl
pushl
stos
mov
and
lock
add
rolb
pop
jne
loop
bound
push
push
in
addl
shll
or
adc
sbbl
clc
mov
loopne
cmc
je
push
or
sub
sbb
mov
scas
test
push
or
adc
ret
adc
xchg
jmp
adc
push
jmp
inc
and
daa
or
nop
daa
pop
push
push
jb
push
mov
imul
movsl
xchg
insb
pop
jbe
push
push
enter
dec
mov
out
push
cmp
pop
add
adc
adc
mov
push
scas
das
push
push
stc
pusha
or
sub
xchg
es
icebp
sbb
xchg
sbb
adc
dec
pop
add
jle
je
bound
pop
add
push
repnz
push
or
inc
lods
push
and
adc
add
sbb
push
adc
xor
push
push
sbb
dec
jbe
pop
cltd
inc
dec
idivb
sub
inc
shr
mov
jmp
jnp
or
adc
push
add
test
xor
or
dec
lock
and
add
or
shrb
jl
adc
movsl
mov
inc
into
jp
pop
dec
inc
add
mov
cmp
mov
pop
sbb
push
dec
jp
test
nop
mov
cs
pop
or
in
scas
inc
sub
fstl
sarb
pop
xchg
jmp
in
loope
pop
das
cmc
push
jecxz
xor
int
test
pop
mov
icebp
mov
sbb
movsb
push
xchg
stos
mov
outsl
fwait
cmp
mov
cmc
ret
test
test
les
ret
repnz
imul
sub
xorl
pop
mov
sar
leave
xor
int3
mov
adc
movsb
dec
js
mov
iret
mov
and
and
pop
and
cmp
cmp
or
ds
rorb
add
cmp
or
lds
jg
xchg
mov
in
aaa
sbb
adc
lods
push
repz
dec
nop
inc
xchg
in
and
push
in
cld
lcall
xor
mov
rol
mov
ror
xor
shr
xor
ja
call
rol
mov
rol
xor
shr
xor
add
ljmp
pop
ret
xlat
popf
out
pop
fs
or
jae
or
and
not
and
xor
add
add
aam
add
add
add
notb
pop
lds
repnz
cli
fisubrs
lahf
add
xor
and
and
xchg
push
aam
sbb
popa
xor
push
movsl
sbb
repnz
push
imul
pop
pop
inc
sti
outsb
push
or
xlat
ret
rcl
add
andl
add
dec
call
sbb
call
and
push
sub
ljmp
int
ret
shr
add
push
xchg
or
cmpsb
mov
xor
in
imul
shl
in
push
cmp
bound
rorb
cwtl
add
pop
aaa
mov
lock
sbb
cltd
call
xor
loopne
loopne
in
movsb
jb
call
cmp
loopne
xor
imul
fdivs
pop
xor
lea
testb
cmp
ss
sbb
push
in
push
xor
and
and
stc
mov
lods
loopne
or
xor
pusha
mov
inc
sub
jbe
adc
mov
inc
jo
call
push
jo
ficoms
dec
cmpl
addb
adc
push
loopne
cs
loop
mov
add
add
std
inc
fadds
pop
jbe
call
push
and
fisubl
add
dec
in
or
xlat
add
gs
fdivrs
inc
shll
and
and
in
rclb
popa
mov
out
mov
imul
adc
nop
pushf
aam
nop
cmpsb
rcl
cmp
and
call
in
push
inc
shr
rolb
subb
xor
sub
push
sub
jge
shlb
adc
dec
rorb
adc
dec
loopne
leave
das
ror
pop
lahf
jo
add
dec
ret
adc
cmp
sub
xor
inc
jb
push
dec
inc
and
add
push
pusha
adc
dec
cs
xor
xor
rorb
push
xchg
inc
xchg
push
es
lcall
add
push
dec
mov
push
imul
xadd
or
push
or
inc
enter
pop
xor
and
pop
fs
pusha
sub
cs
popa
xchg
xchg
movsl
mov
xchg
inc
rorb
adc
add
xor
xorl
add
je
dec
dec
xchg
xchg
dec
rorl
stc
stc
add
fsts
pop
rclb
inc
mov
dec
imulb
push
xor
dec
dec
fmuls
adc
adc
sbb
xchg
lcall
in
add
and
adc
sbb
and
add
and
ja
out
pop
add
sub
mov
lcall
cmp
jb
jg
jle
lea
popf
add
sub
dec
std
idivb
lea
pop
xor
sub
cmp
decl
sub
sarb
or
rorb
or
or
pop
pop
aaa
or
fistl
jns
mov
ja
rolb
mov
sub
push
xor
loopne
lea
jmp
lea
int
std
jl
sub
out
mov
add
out
mov
or
mov
dec
jne
pop
adc
dec
in
and
lock
idiv
int3
xor
or
cmp
jbe
or
jae
fs
xor
lea
or
jae
push
pop
fadds
rep
or
std
dec
sub
ljmp
std
fwait
push
inc
mov
outsl
pop
loopne
mov
int
push
xchg
or
xchg
ljmp
adc
mov
add
test
pop
into
ss
mov
xor
inc
cmp
jb
cmp
ja
dec
sahf
jbe
stos
sub
sbb
inc
aaa
popa
loope
imul
cmp
push
cmpsb
dec
je
mov
mov
add
push
sbb
mov
sbb
lahf
imulb
pop
push
inc
adc
js
in
dec
xor
adc
repnz
push
push
push
adc
jmp
mov
in
xor
filds
add
popa
fmull
pop
jne
jo
cmp
clc
dec
fsubs
jne,pn
pop
sbb
dec
add
or
push
dec
inc
lea
mov
mov
pop
dec
xor
push
movsb
jne
jmp
add
sub
xorb
popa
testl
cli
push
dec
push
push
adc
inc
cmp
inc
adc
fs
dec
inc
push
inc
and
or
mov
inc
sbb
pop
mov
pop
add
and
mov
adcl
jns
push
insb
cmp
fsubr
mov
lea
call
sti
mov
hlt
and
sub
cmpsb
xlat
decb
inc
xorl
sub
cmp
notb
std
fnstsw
cmc
cmp
mov
loopne
push
dec
sar
jno
in
push
pop
jb
or
ja
pushf
inc
mov
rclb
fnsave
cmp
push
push
add
add
lret
xor
lods
xchg
xchg
pop
xor
cmpsb
inc
sub
and
push
jno
push
test
lds
test
mov
xchg
cltd
jns
cli
jb
jb
cmpsb
mov
rcrb
cmp
inc
sti
add
fsubr
adc
aas
les
clc
int
push
inc
orl
adc
test
jne
adc
and
add
push
test
mov
fdivrs
push
pop
jae
mov
jmp
dec
es
or
xor
xor
push
ret
sub
push
push
xor
jge
cmp
push
inc
call
iret
push
cmpsb
mov
adc
insl
mov
mov
jg
or
jge
mov
je
and
es
sub
dec
outsl
repz
pop
cmp
jl
pop
jle
pusha
sbbb
test
test
jbe
jp
pop
out
and
jbe
mov
test
fwait
jle
daa
mov
adc
je
test
jne
je
imul
outsb
and
jb
or
xor
dec
mov
into
jp
hlt
or
xchg
push
loop
push
lock
jg
daa
mov
push
mov
push
add
inc
and
je
mov
cmp
jmp
mov
or
jae
add
inc
es
cld
and
xchg
xchg
push
pop
push
or
add
push
mov
shrb
sub
cwtl
mov
adc
push
mov
aad
push
xchg
push
movnti
movsb
mov
adc
outsl
pop
das
rorb
imul
bound
out
add
pop
xchg
mov
lods
sbb
push
pop
imul
mov
xor
rorl
pop
inc
and
lea
sub
xor
movsl
or
jnp
add
pop
jb
addl
jg
movb
inc
cmpl
enter
xor
mov
jnp
jo
or
xchg
sbb
pop
cwtl
xor
push
dec
xor
mov
mov
mov
incl
jbe
pop
fisubl
inc
arpl
lcall
movb
jae
out
loopne
dec
mov
insl
pop
push
out
loope
cmp
je
test
adc
and
les
push
fsts
sti
mov
sahf
pop
jp
ja
lea
cmpsb
jbe
pop
mov
mov
add
in
insb
pop
arpl
or
add
dec
ss
sub
in
aaa
aad
movb
mov
aad
cmpl
mov
inc
inc
call
mov
inc
ficompl
es
jl
add
cmp
lcall
sbb
push
in
xor
mov
rorb
push
or
mov
adcl
lock
popa
and
repz
hlt
cld
push
pop
pop
add
jae
cltd
xor
jo
pop
add
push
cld
shll
jle
jae
dec
add
mov
add
mov
or
sti
pusha
jb
shrl
cs
fwait
lock
xor
add
clc
fcomps
inc
fisttpl
or
lea
aam
push
cld
shrl
mov
xchg
insl
out
ret
cwtl
repnz
sub
inc
push
outsb
inc
icebp
adc
add
push
or
shll
sbb
sbb
scas
mov
lahf
jne
xchg
pushf
lods
cwtl
addl
xchg
xchg
iret
mov
pop
pop
mov
xchg
stos
jb
or
jne
mov
push
leave
mov
cmp
or
and
jbe
xchg
cmp
and
and
sbb
test
push
mov
imul
call
dec
idivb
faddp
subl
scas
and
aam
push
sub
xor
imul
loopne
movsb
ror
testl
jne
dec
rolb
adcb
in
and
fsts
inc
adc
push
push
fdivl
rclb
out
hlt
lods
mov
je
xor
jmp
sbb
sahf
push
das
ss
cmpsl
cmpl
into
xchg
scas
xchg
inc
cmpl
or
insl
dec
dec
rcrl
pop
mov
push
add
xor
cmp
je
mov
cmp
inc
mov
inc
jnp
sub
inc
inc
xchg
ljmp
cmp
ss
aaa
sbb
movsl
inc
lock
mov
adcb
roll
pop
dec
xchg
jle
andl
inc
fsubr
cmp
xchg
rorb
push
xchg
push
push
lea
inc
inc
repnz
push
fsubp
mull
movsb
or
xor
jbe
jp
xor
mov
sbb
bound
call
jae
push
lcall
inc
sbb
adc
into
mov
jg
loopne
cmp
jne
les
aam
adc
and
push
loopne
pop
cmp
cmpsb
or
mov
mov
inc
jp
call
scas
dec
mov
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
push
ss
cmp
sbb
adcl
and
jae
sbb
push
xor
jns
and
mov
or
ret
ljmp
cmp
lahf
lea
mov
jmp
inc
push
sbb
push
ret
ficoms
cmp
je
pop
jmp
sbb
pop
adc
mov
mov
mov
adc
add
jne
imul
outsl
cs
test
and
mov
or
lcall
xor
cmp
or
lcall
and
inc
clc
add
push
push
cmp
rolb
sbb
ficoml
jo
pop
jb
jmp
rclb
mov
fcoms
cmp
and
jbe
scas
mov
ja
outsb
jns
inc
and
mov
sub
stos
xchg
lret
in
push
sub
xor
jb
pop
cs
cmp
add
in
cmp
cmp
adc
adc
xchg
pop
mov
xorb
outsb
mov
lds
pop
xchg
sbb
movb
xor
push
sub
mov
xor
std
lods
sbb
loopne
mov
push
stos
adc
push
add
fsubs
les
cmp
add
mov
xor
stc
jle
xchg
scas
inc
cmpsl
in
sahf
push
int3
sbb
jmp
inc
mov
and
push
xor
int
inc
nop
pop
xchg
fadd
inc
mov
and
adc
nop
add
dec
jns
mov
or
or
adc
or
popa
pop
ret
inc
or
xorl
faddl
lret
call
pushl
adc
fimull
cli
xor
jne
sbb
dec
ds
dec
fsubr
adc
fcoms
dec
cld
nop
push
push
je
mov
adc
push
movzwl
jo
fistpl
loopne
inc
dec
test
jne
or
inc
sbb
loop
adc
bound
mov
hlt
lds
shrl
cmpsb
hlt
xchg
mov
or
rolb
pusha
sbb
and
insb
jmp
push
push
and
jnp
sbbb
inc
insl
cmp
mov
dec
mov
in
or
jo
push
shrl
ret
es
data16
adc
rolb
mov
xor
inc
pop
mov
pop
lods
jne
adc
sbb
int
xlat
inc
add
loope
push
orb
inc
ret
sbb
and
and
cmp
insl
or
sbb
sub
cmp
sub
clc
mulb
xchg
cmp
lds
sahf
cmp
and
clc
les
add
xor
jbe
loop
shlb
ja
jbe
and
pop
sbb
fwait
sahf
xor
fxam
xchg
ret
or
and
add
lahf
xchg
push
add
adcb
cmp
popa
or
push
loope
mov
inc
inc
adc
lods
mov
stc
mov
cmp
rcr
add
addb
paddq
mov
lock
and
nop
xchg
negb
mov
imul
adc
pop
or
scas
outsl
lock
cld
les
popf
loopne
aaa
jbe
push
and
jbe
adc
sbb
adc
and
pop
pusha
loop
jg
mov
add
adc
add
pop
mov
mov
jno
adc
mov
adc
inc
loope
idiv
dec
xor
push
adc
pop
imul
sbb
push
xor
cmp
mov
cmpsb
and
sub
adc
cs
movl
sahf
cmc
outsl
push
sbb
inc
xchg
pop
dec
sbb
ja
xor
adc
inc
add
dec
mov
movsb
jne
cmpsl
add
imull
lcall
int
hlt
xchg
and
adc
pop
rorl
pop
pop
pop
cli
and
dec
pop
add
popf
mov
mov
mov
cmp
cmpsb
in
lods
pop
mov
bound
or
stos
and
in
push
mov
cmc
xor
add
pop
or
jno
stos
mov
mov
pop
fcmovb
imull
jo
mov
and
adc
sti
movsb
adc
inc
dec
mov
and
mov
dec
dec
add
insb
mov
lds
cmpsl
lea
movsb
cltd
nop
in
dec
dec
adc
shlb
js
rcr
enter
rorb
pusha
cmpsb
imul
call
sub
outsb
sbb
fstps
flds
mov
lcall
inc
movsl
xor
adc
push
and
sub
jp
cmpb
and
andb
inc
inc
push
inc
add
into
mov
jg
rol
cmc
test
icebp
scas
mov
mov
mov
and
dec
sbb
cmp
lods
jp
mov
inc
cmp
sub
cmp
pop
push
or
outsl
adc
test
sub
incl
and
sbb
pop
notb
aam
xchg
in
lock
dec
fsubs
add
icebp
cltd
orl
es
test
test
sbb
cmpsl
cwtl
pop
arpl
ja
and
stc
aas
add
sub
and
test
sbb
xor
or
shl
add
ficoms
add
mov
sub
push
enter
inc
pop
sahf
jns
arpl
insb
adc
and
cmc
and
test
cld
out
add
sbb
add
jle
ret
mov
test
in
inc
push
aas
xor
push
icebp
fists
or
lea
pop
clc
dec
pop
mov
add
das
push
cmpsb
jo
add
and
lret
add
mov
pop
mov
sbb
jp
sub
pop
lods
jle
and
jge
in
mov
inc
pusha
test
mov
adc
nop
fistpl
pushf
orb
or
testb
and
jne
aaa
test
add
dec
mov
sbb
jle
inc
subb
pop
push
adc
jae
dec
push
sti
stos
cwtl
push
inc
jmp
jge
pop
addl
das
stos
clc
fucom
rol
push
and
pushl
loope
mov
sahf
push
mov
mov
movsb
mov
pop
adc
mov
push
mov
inc
or
dec
rorb
push
push
push
push
add
sub
ficoms
pop
sbb
out
xor
push
push
add
jno
cltd
adc
lock
jo
mov
push
mov
sub
adc
sub
ss
andb
sub
jmp
rclb
mul
mov
jo
je
cmp
jbe
lds
jbe
in
adc
dec
xorl
sbb
aaa
jnp
enter
push
push
jp
lds
insl
xor
and
and
in
ficoml
iret
mov
jnp
test
repz
adc
scas
pop
and
iret
push
movsb
jmp
push
iret
adc
movsb
orl
ja
mov
jo
frstor
les
mov
in
lcall
pop
mov
in
add
sbb
cmp
out
push
add
and
push
push
jnp
je
sub
cmp
push
cmp
fs
cmp
lcall
pop
les
fsubs
mov
int
lcall
out
jmp
and
shlb
sbb
pop
pop
mov
add
add
pop
sub
ret
scas
int
add
out
jbe
sub
adc
lcall
add
or
fs
xor
jb
jmp
cwtl
cmp
sbb
add
pop
scas
adc
xchg
mov
push
sub
xor
mov
mov
cs
pop
mov
icebp
push
add
push
inc
xor
sub
xchg
lret
jnp
or
test
or
sahf
mov
pop
ds
or
jle
movsb
jne
bound
scas
fsubs
jne
fildl
xor
clc
jmp
in
fildl
mov
rcrb
dec
mov
shlb
fisubs
cs
js
adc
or
sbb
add
xor
xorl
rolb
mov
xor
xchg
leave
sub
cmp
outsl
mov
lcall
add
add
sahf
push
sub
adc
test
mov
pop
xlat
push
mov
fdiv
fcoml
push
jbe
shrb
loop
jnp
xchg
cmp
jb
xor
loop
push
inc
push
ret
push
cmp
enter
pop
or
add
or
inc
xchg
inc
mov
jecxz,pn
adc
lea
int
daa
push
push
push
insl
mov
dec
add
pop
mov
inc
cmp
fnstsw
mov
sub
clc
add
inc
jbe
sbb
sub
lods
out
add
add
movsl
repnz
adc
in
inc
or
loopne
cmp
lock
cmpsb
cmp
push
adc
notb
je
or
clc
sub
mov
dec
bound
pop
or
jle
sub
pop
popf
xor
clc
sub
pop
mov
add
popa
pusha
dec
pop
inc
adc
enter
jmp
inc
adc
xchg
outsl
hlt
mov
inc
inc
add
rolb
jne
jne
inc
jmp
pop
pop
add
popa
adc
add
mov
pop
pop
in
sub
test
add
push
mov
inc
or
jno
test
adc
dec
inc
add
mov
ret
jb
cmpsl
or
mov
ja
dec
pop
cmp
adc
cld
je
cmp
or
stos
or
sub
sbb
loop
lahf
and
sbb
push
dec
or
xchg
fcompl
sbb
dec
stos
cmp
loop
mov
scas
sub
lcall
hlt
sub
call
idivl
push
pop
inc
ss
cmp
pop
nop
dec
std
add
stc
push
mov
fdivl
and
jne
fmul
jb
pop
lock
inc
jg
insl
jne
mov
not
into
pusha
add
fcmovb
push
out
out
adc
loope
or
jmp
aas
addb
add
and
into
pop
mov
in
mov
add
adc
lret
dec
sub
cmp
mov
iret
or
pop
add
and
xor
push
rcr
or
repnz
push
push
lahf
shlb
cmpl
ljmp
add
aam
fidivrl
mov
or
jmp
pop
xor
leave
adc
insb
add
rol
inc
xor
push
xchg
arpl
push
adc
lcall
movsb
inc
mov
test
addl
addb
adc
cmp
dec
push
movsl
std
test
pop
sbb
in
arpl
jns
add
jo
push
jmp
cwtl
out
jge
adc
xchg
pop
rcrl
mov
jbe
lret
and
in
andb
stc
icebp
adc
ss
cmp
mov
or
pusha
jb
pop
lock
cwtl
cmp
lds
push
mov
dec
es
xor
and
test
adc
ret
push
ret
xchg
shl
test
cmp
xor
or
xchg
cmpsb
insb
insb
scas
push
add
dec
jmp
sbb
inc
das
push
ljmp
pushf
rolb
jbe
sub
xchg
mov
mov
rolb
sbb
adc
or
add
and
push
cmpsl
xor
adc
mov
bound
testl
cmpsl
dec
shrb
sbb
mov
inc
mov
insb
lock
lds
insb
dec
loope
inc
sub
pop
jnp
orl
jle
fdivrs
cmp
into
or
pop
cmp
sbb
push
adc
jbe
mov
pop
xchg
lods
mov
pop
rclb
add
sub
push
test
and
pop
mov
push
add
lods
mov
clc
fldl
and
cmp
jge
test
add
mov
mov
fwait
sbbb
dec
lea
sub
add
inc
test
or
add
pop
mov
xchg
daa
rorb
sbb
sub
inc
inc
adc
stos
push
jmp
push
or
push
fldt
add
sbb
xchg
ret
pop
xor
add
clc
dec
enter
jle
fsubr
xchg
add
les
xlat
push
pushf
jmp
scas
insl
jge
mov
adc
push
pop
adc
dec
push
cmp
pop
pop
pop
push
inc
jle
rolb
int3
and
push
icebp
es
mov
insl
pop
inc
add
lcall
pop
xchg
lds
loopne
cmp
pop
pop
ret
inc
jmp
or
xchg
popf
sbb
pop
add
nop
and
pop
jno
les
pop
sbb
popf
stc
loope
orl
mov
hlt
lea
pusha
mov
sub
test
into
addl
addr16
push
jne
adc
push
cmpsl
add
subl
sub
inc
push
sbb
jl
mov
js
mov
out
repz
scas
push
clc
ret
jnp
aam
add
rorl
test
sub
push
mov
mov
xor
cmp
jo
ret
mov
insl
orl
add
push
test
cmpsl
cmp
or
sub
push
push
mov
xchg
and
sti
fisubrl
or
lret
mov
lock
and
scas
rcrb
adc
inc
jmp
test
je
jo
out
mov
test
or
test
mov
lock
outsb
adc
stos
jg
cmpl
cld
push
push
mov
inc
push
or
mov
and
pop
xchg
in
popa
aas
mov
dec
leave
ret
pop
xor
mov
addr16
cltd
dec
cmpsl
in
add
lret
ss
jae
inc
mov
add
jmp
test
inc
inc
lea
lahf
cmp
mov
xor
inc
test
stc
cmp
push
mov
push
ja
xchg
and
fiaddl
pop
push
fwait
loop
pop
fs
inc
lock
data16
dec
push
sbb
test
push
movsb
adc
lea
pushf
pop
cmpb
cmp
mov
aaa
int3
in
adc
add
push
add
mov
in
add
ret
cmp
dec
inc
stos
sbb
mov
sub
adc
loopne
scas
stos
pop
pop
mov
and
fidivl
jmp
xchg
jmp
adc
mov
push
pop
int3
inc
outsl
mov
cmpb
loope
mov
mov
sbb
aas
push
dec
mov
test
adc
out
imul
push
add
inc
mov
push
add
xor
test
fdivs
movsb
pop
add
dec
testl
sahf
jecxz
add
fsubs
incb
je
mov
dec
cld
fs
mov
cs
jns
iret
or
dec
cmp
or
movsl
addl
mov
fcmovnbe
inc
loop
and
icebp
inc
mov
mov
sbb
cmpsl
add
int3
pop
mov
imul
dec
je
dec
xor
sub
or
insl
rcll
std
mov
inc
movsl
orl
lcall
ret
mov
push
push
movsl
mov
icebp
xchg
mov
pop
xorl
cmpl
and
subl
repz
test
push
push
dec
or
pop
fmul
fildll
decl
hlt
jmp
jae
xchg
dec
sbb
and
sbb
in
scas
dec
xor
mov
je
mov
add
fs
push
xchg
scas
mov
cmp
je
dec
mov
jmp
xor
into
push
push
fwait
cli
test
jmp
pushf
push
scas
int
xchg
mov
clc
push
inc
cmpsl
shlb
ss
mul
jb
fiadds
jg
lret
setg
ja
popf
push
jae
sub
add
je
add
call
addb
call
mov
or
outsb
leave
xor
mov
mov
pop
add
or
cmp
and
cs
daa
xchg
dec
mov
test
push
lea
sahf
movl
insl
es
mov
pusha
mov
dec
mov
push
inc
hlt
adcl
jmp
outsl
mov
jp
lea
xor
lahf
sub
std
enter
adc
or
mov
dec
enter
fildl
pop
jo
je
pusha
lea
fmuls
sub
add
adc
sbb
scas
mov
aaa
jbe
add
mov
or
push
aad
insl
ja
test
pop
xchg
or
lods
ja
mov
xlat
rorb
sbb
negl
xor
sub
cld
bound
sbbl
pop
cmpsl
xchg
adcl
shrb
cmp
sbb
inc
mov
loop
sbb
mov
aam
and
and
orb
or
xor
mov
xorb
lock
lea
jno
mov
xor
jb
clc
pop
push
inc
lea
jns
add
xchg
push
sbb
or
dec
xchg
cld
xor
cmp
test
movsl
inc
pop
fdivs
lret
or
mov
fimull
jnp
cmp
inc
jbe
pop
add
add
movsb
cmp
pop
jbe
inc
dec
fcmovu
sub
inc
jns
dec
dec
clc
jne
mov
js
addr16
push
test
cmp
and
adc
add
sub
add
mov
push
and
sahf
mov
mov
nop
mov
hlt
hlt
sahf
ret
enter
or
mov
pop
add
pop
pop
push
add
sub
cmp
cmp
jae
sbb
fmuls
xor
lret
inc
jno
push
fxtract
jne
push
js
loopne
xchg
sbb
fnstenv
ficoms
add
push
sbb
gs
add
or
add
movsb
lock
cld
clc
pushl
add
lea
xchg
sti
mov
int
mov
daa
sbb
push
mov
push
xchg
ds
xchg
cmp
xchg
pop
cmp
pusha
pop
cld
ret
push
mov
or
and
iret
pop
mov
je
cmpb
or
mov
es
pop
pop
or
in
dec
adc
ficoms
dec
push
xchg
or
adc
xor
push
add
push
add
andb
loope
jne
insb
cmpsl
cmp
mov
mov
jo,pt
out
mov
das
mov
icebp
jne
cmp
cmp
pop
xor
adc
popf
lea
push
dec
push
dec
adc
add
inc
test
push
dec
lods
fdivs
pop
gs
fsubr
jmp
pop
add
fiaddl
inc
cmp
pop
adc
pop
clc
in
mov
pop
fmuls
js
push
das
lock
inc
jecxz
into
jb
sub
or
mov
mov
mov
xor
lods
add
mov
push
stos
mov
movsl
push
xchg
sub
mov
mov
dec
jo
std
rorb
iret
or
fisttps
adc
mov
adc
adc
fildl
jge
lret
adc
aam
aam
movb
mov
sbb
sbb
fimull
test
js
addl
xor
pop
sbb
and
data16
push
rorb
test
mov
mov
add
inc
leave
les
xor
hlt
or
call
pop
add
clc
cmpb
test
cs
cmp
adc
pop
jge
add
mov
xor
xor
mov
or
mov
mov
push
add
daa
ret
pop
mov
fmuls
and
jo
divl
add
inc
popa
push
lods
cmp
mov
xlat
ret
push
or
xchg
dec
mov
push
ret
lock
jb
icebp
gs
jbe
test
jo
mov
mov
xchg
sbb
bound
cmp
jmp
je
add
push
mov
push
push
and
incb
adc
dec
clc
and
cs
pop
mov
pop
cmpb
mov
jb
push
jae
test
in
xchg
loopne
mov
xchg
mov
push
add
jg
adc
ja
inc
jmp
push
push
sub
call
adcl
pop
addr16
or
add
movsl
pop
iret
and
push
lds
orl
push
adc
pop
mov
push
cmp
jb
add
addb
pop
mov
cmp
xchg
movsl
and
dec
cmpsb
pop
out
jns
sbb
cmc
popf
leave
mov
hlt
xor
or
inc
pushf
int3
lcall
push
pop
jmp
push
mov
loopne
xchg
xchg
pop
push
mov
in
add
clc
adc
rcrl
lea
test
jge
add
xchg
in
cmpsl
roll
adc
nop
cmpsl
or
adc
cmp
dec
inc
jo
in
in
jl
cmp
mov
mov
mov
and
mov
je
mov
inc
push
cmpsb
addl
mov
jmp
add
add
pop
popl
or
addl
jmp
clc
jno
pop
rcll
push
and
sub
icebp
or
out
add
div
jne
sbb
sub
dec
sahf
or
add
sub
je
sti
sub
add
ja
or
fmul
inc
adc
inc
and
mov
or
cld
movl
and
test
loope
test
jne
dec
sbb
push
xchg
fsubr
jl
cli
addb
xchg
xchg
in
xchg
and
dec
hlt
test
pop
add
jle
jbe
push
mov
xchg
mov
stc
stos
xchg
and
pop
call
mov
mov
sub
cmc
xchg
mov
sub
cmp
sbb
push
int3
in
call
lock
mov
mov
popl
imul
jo
gs
fisttpl
dec
pop
ret
ja
adcl
pushf
loope
sar
gs
xchg
push
jbe
aam
sbb
out
mov
inc
fcompl
lret
push
dec
add
jmp
lea
jnp
or
mov
jmp
sahf
pop
or
cmp
add
add
movsb
xor
movsl
or
fcom
push
pop
pop
adc
insb
mov
adc
mov
add
pop
dec
dec
xchg
mov
fisubrl
icebp
inc
mov
aam
lea
pop
dec
adc
movsb
xor
mov
sarl
outsl
mov
xchg
xchg
push
icebp
nop
rcll
addr16
rcrb
pop
imul
sub
test
mov
stos
cmp
and
mov
sbb
mov
push
push
fdivrl
xchg
sub
lods
lret
enter
cs
ljmp
dec
xor
icebp
movsl
fadds
push
and
add
popa
cmpsl
lret
add
lahf
push
mov
add
icebp
adc
std
mov
mov
xor
xor
pop
push
int3
fnstenv
adc
xchg
pop
je
or
jae
sub
rorl
ja
sbb
sbb
aad
shrl
inc
in
fs
rorl
sbb
adc
notb
jb,pn
pusha
adc
xor
shll
push
mov
inc
addl
add
adc
fildl
push
pop
aad
sub
add
add
xor
cmp
xor
mov
add
xlat
sub
jp
add
xchg
inc
sbb
test
scas
mov
push
cld
mov
cmpl
addr16
adc
wrmsr
or
je
rorl
fcoml
out
or
andb
dec
mov
push
clc
xchg
add
les
ljmp
cmpl
cmp
add
es
imul
jp
xor
jnp
mov
add
stos
sarb
jle
out
pop
add
pop
fcoms
xchg
xchg
adc
jae
mov
jp
cld
js
mov
fildl
ret
lea
push
sub
psrld
lret
sbb
dec
xchg
stos
mov
shll
add
dec
pop
ret
ds
or
jns
and
adc
cmc
arpl
and
sub
jmp
or
sbb
cmp
add
hlt
push
jp
sub
mov
and
cltd
inc
fadd
jae
sahf
bound
scas
movb
mov
add
idivb
fsub
sub
clc
subl
push
push
add
mov
sbb
and
sub
add
mov
popf
out
fsubs
push
jmp
push
push
fs
arpl
aad
jo
sub
dec
lods
in
aad
cmp
add
test
incl
add
lds
dec
insb
popf
sbbb
jbe
shrb
sbb
js
lods
ja
pop
enter
sbbl
or
cs
mov
into
adc
add
test
fwait
adc
jae
popf
dec
jb
jns
or
or
js
push
dec
inc
dec
fdivs
add
jle
or
push
cltd
add
je
mov
jmp
bnd
jb
add
cmpsb
lea
cmpb
push
aam
or
inc
jae
xor
sbb
aas
sub
jb
movups
gs
je
push
push
loopne
xchg
dec
mov
unpcklps
cmp
hlt
pop
xor
cmp
sub
push
inc
popf
ret
or
add
ss
shlb
cli
ret
pop
mov
adc
push
stos
fmuls
cli
fs
outsb
adc
shlb
lea
cli
ja
cmpb
mov
aas
ret
push
enter
or
sub
fadds
cmpsl
pop
or
add
sbb
adc
hlt
mov
push
fstpl
test
imul
pop
fwait
push
lods
imul
insl
mov
push
xor
mov
and
dec
test
jns
outsb
adc
aaa
cld
sbb
push
pop
xchg
pop
daa
and
gs
sbb
or
and
and
push
adc
xor
push
pusha
add
add
cld
lret
inc
shr
fidivs
les
pop
jge
mov
movl
add
add
and
mov
sbb
popa
es
mov
shlb
add
mov
and
mov
pop
bound
add
xor
sti
mov
xchg
out
adc
addl
ret
dec
shr
sbb
mov
inc
cmpl
push
add
mov
jno
bsf
sub
xor
fsub
es
ret
push
add
lsl
aaa
outsb
adc
bound
sub
jo
mov
mov
inc
mov
mov
or
jno
xor
add
jne
idiv
addr16
push
add
call
xlat
test
repz
xchg
les
add
adc
hlt
sbb
data16
sbb
and
cmc
mov
shr
mov
mov
xchg
std
mov
loope
insl
ja
mov
pop
mov
aam
addr16
jg
push
les
adc
mov
adc
jle
pop
sbb
lret
mov
sub
fsubp
mul
fwait
mov
sbbl
adc
sub
lea
push
push
sbb
or
mov
movsl
mov
or
adc
fists
cmp
pop
mov
adc
pop
adc
push
mov
mov
jo
rolb
es
movsb
mov
adcb
lea
sub
push
in
jb
dec
ret
lret
xor
movsb
jle
jne
mov
push
shrl
xor
adc
test
dec
cli
sub
cmpsb
dec
scas
int3
mov
sbb
dec
and
ja
mov
add
push
cmp
pop
enter
fcmove
dec
mov
test
mov
fisttpll
adc
fiaddl
ffreep
test
mov
leave
xor
xchg
add
loop
inc
out
aam
xor
sahf
push
fisttpl
jns
iret
dec
shll
lods
in
push
or
lcall
popf
sbb
xchg
lret
or
mov
imul
leave
mov
subb
cmpsb
ret
pop
ss
push
addb
or
sub
es
or
mov
mov
mov
jl
jl
inc
cmp
mov
cmp
sub
insb
call
push
int3
lods
jnp
jbe
sub
sbbb
add
inc
dec
mov
jne
xchg
xchg
mov
mov
and
incb
rorl
xchg
mov
or
aam
pop
xor
pop
add
lods
stc
mov
add
imul
jg
or
ja
fnstcw
jge
pop
inc
adcb
sti
je
clc
lock
cmp
pop
push
cmp
and
add
xor
inc
cmp
jl
pop
mov
push
shrb
emms
or
jo
fstl
shlb
push
xor
orb
and
adc
mov
inc
mov
test
nop
or
sub
jecxz
mov
cmc
xor
pop
ret
push
lds
loop
rorl
push
jl
jno
add
out
add
insb
fnstenv
test
sbb
mov
pop
rcrb
aaa
xchg
mov
dec
sbb
push
push
mov
pop
pop
cs
dec
xor
jns
cmp
test
cmp
xchg
dec
add
cmp
push
lea
stos
rcrb
xchg
lcall
jle
inc
cmp
cmc
mov
cmp
pop
mov
inc
xor
mov
lock
sbb
add
or
mov
cmp
imul
add
sarl
out
mov
shr
shl
add
loope
shl
aaa
pushf
add
mov
push
mov
pop
inc
mov
jl
inc
push
fstps
outsl
je
jge
call
sub
cmp
pop
add
or
jl
loope
lods
add
sub
cmp
push
inc
dec
filds
sbb
frstor
sbb
push
or
or
bound
mov
js
xchg
and
rclb
sar
nop
call
jmp
mov
sbb
hlt
add
and
insl
dec
mov
mov
cmpsl
xor
es
call
add
jl
mov
adc
or
mov
cmp
mov
icebp
movsb
jbe
inc
add
lock
cmp
cmpsl
add
xor
xchg
and
inc
xor
shrl
pop
les
xor
add
icebp
cmp
test
js
mov
out
add
cs
aas
adc
push
rorb
dec
push
adc
push
test
add
add
dec
shrb
sar
gs
dec
inc
iret
cmp
and
dec
pop
jae
nop
movsb
imul
cmp
or
dec
addl
or
xchg
or
bound
popa
inc
test
sbb
mov
or
loopne
loop
or
hlt
adc
insb
cmp
or
test
test
cmp
scas
cld
rolb
mov
xchg
push
fisubrl
mov
aam
sub
inc
pop
adc
aam
mov
std
and
inc
sti
push
mov
pop
push
fidivs
ss
mov
jnp
jmp
push
js
jbe
mov
jmp
das
sarl
int
pop
cmc
push
inc
test
inc
fistpll
add
nop
mov
inc
mov
outsb
shll
pop
fnstsw
add
adc
xor
mov
cmp
in
mov
jo
and
pop
push
ret
mov
xor
into
jno
jecxz
insb
dec
pop
sub
pusha
cmp
jne
fisubl
dec
or
jmp
sbb
push
xchg
ss
pushl
adc
and
aad
testb
movhps
ror
fiadds
clc
xchg
xor
pop
jo
pusha
stos
sti
sarl
xchg
sub
mov
popa
rcll
dec
and
gs
sbbb
pop
pop
ret
mov
xor
pop
mov
sbb
pop
jmp
and
or
inc
adc
jl
sbb
or
sarl
stos
in
movsl
or
rcrl
xchg
adc
cmpsb
or
mov
inc
ss
inc
and
in
sub
sub
js
fs
push
push
dec
shrl
mov
xchg
or
and
adc
add
sbb
sbb
push
aam
jecxz
shlb
or
lea
mov
test
cmp
add
or
test
daa
jno
inc
or
or
push
push
dec
xchg
and
fwait
xchg
mov
int3
das
mov
push
push
sbb
lods
ds
rcrb
inc
mov
jbe
ss
outsb
loopne
push
xor
fbstp
xor
adc
xlat
bt
cmp
pop
loop
negb
mov
mov
xchg
jne
push
fdivp
jne
rol
cld
call
mov
mov
pusha
push
push
or
sub
int3
sbb
mov
cmp
aas
mov
inc
loopne
jg
icebp
cmpl
outsb
or
stos
test
loope
or
pop
push
mov
jecxz
roll
mov
pop
push
jnp
inc
mov
adc
jp
inc
out
push
cwtl
push
fdivl
addl
sbb
loopne
pop
adc
incb
push
and
lods
test
push
mov
add
push
fdivs
add
cmpl
jne
sbb
cmp
pop
or
add
arpl
mov
sbb
mul
inc
sbb
int
pop
aas
xor
out
cmp
jle
icebp
xchg
push
and
fnstcw
movzwl
cmp
data16
inc
cmp
in
xor
sbbb
lea
inc
add
cs
mov
xor
jne
push
add
loopne
inc
popf
pop
pop
xor
push
in
pop
add
lods
pop
push
shrb
xor
stc
loope
cld
and
or
pop
add
cwtl
mov
in
push
arpl
xchg
adc
scas
dec
insl
sub
insb
mov
mov
push
xor
inc
add
test
rorb
jo
test
xchg
decb
xor
idivl
push
or
loop
or
out
sub
inc
jo
jne
addl
pop
or
ficoml
cmp
adc
or
jmp
adc
mov
imul
cld
addl
pop
mov
mov
mov
push
add
add
add
and
cmpb
dec
inc
add
jo
sub
pop
mov
cmp
je
push
loopne
mov
idivb
inc
aaa
sbb
adc
int
cld
push
cmp
inc
add
pop
push
ret
sub
shll
adc
add
inc
loop
out
add
mov
sub
dec
lock
cltd
push
fcmove
nop
cli
push
or
repz
adc
aas
mov
hlt
sbb
and
mov
push
add
sub
fildl
jae
dec
and
sahf
rolb
icebp
jmp
push
sbb
sti
cmp
dec
mov
xor
push
cmp
xchg
xor
jne
jg
add
cmp
andb
cmp
inc
xor
and
insl
add
in
movsb
and
pop
add
push
pop
push
je
adc
cmp
jg
inc
hlt
ret
and
push
push
push
mov
or
leave
or
inc
mov
add
pusha
mov
out
jno
sub
add
mov
push
jle
mov
not
inc
pop
scas
and
pop
add
push
hlt
cltd
push
or
xlat
pop
mov
and
scas
rcrl
std
add
data16
loope
scas
inc
lock
rorl
sbb
mov
cmp
sbb
icebp
jb
or
sbb
roll
add
inc
outsb
lock
cmpb
leave
jmp
lea
push
and
pop
adc
sbb
adc
fldt
lret
loopne
bnd
inc
cmp
inc
mov
adc
stc
jl
adcl
xor
hlt
arpl
push
dec
pop
pop
xor
rsqrtps
movsb
mov
xchg
test
sub
shlb
cwtl
cmp
push
add
mov
xor
fildl
decb
mov
push
jg
mov
dec
cmp
push
cmp
clc
orl
or
jne
cmp
mov
push
sub
inc
jecxz
sbb
mov
rcl
lret
cmpsb
push
sbb
or
scas
adc
ja
les
jae
imul
xor
pop
and
pop
test
or
add
sbb
xchg
inc
nop
mov
and
xor
push
sbb
sbb
push
or
call
icebp
movl
jo
mov
xor
sub
jo
push
or
sbb
jmp
mov
mov
shll
cmp
es
in
pop
pop
jo
les
push
fisttps
lcall
inc
sub
sub
xlat
aad
das
clc
leave
cs
adc
dec
jno
pop
imul
adc
mov
out
enter
jmp
dec
rorl
loop
push
push
dec
adc
sahf
xchg
add
inc
mov
inc
or
sbb
ja
push
cltd
cmp
xchg
andb
xchg
or
out
add
sub
scas
roll
sbb
bound
xorb
test
pop
sbb
iret
pusha
ss
adc
push
es
dec
adc
cmp
lcall
adc
in
orb
add
push
insl
loopne
or
sub
ret
ljmp
call
ljmp
sub
lods
mov
jno
lret
sub
cmpsb
fisttpl
sub
aad
sbb
mov
dec
adc
or
sub
add
adc
xor
cmpb
test
pop
mov
or
insl
jbe
jns
dec
aad
test
ds
pop
stos
das
sbb
push
subl
fdivrs
enter
sub
pop
roll
cmp
adc
xchg
push
dec
pop
xor
pop
cmp
loop
outsb
pop
in
mov
ss
decb
dec
pop
dec
in
pusha
push
orl
adc
or
test
adc
rcrb
lret
daa
test
inc
clc
in
popf
testl
popa
jnp
xchg
pushaw
mov
inc
cmp
dec
sti
inc
inc
and
inc
and
or
cmp
fs
pop
ds
testl
fisttps
mov
add
ja
loopne
dec
jo
in
push
ds
jae
aad
mov
add
jp
cmp
daa
and
jle
pop
aas
nop
push
and
sub
xor
sti
cmp
inc
adc
out
shlb
cmp
xor
aam
adc
test
dec
and
cltd
inc
dec
loopne
pop
xor
and
sbb
ret
fisttpl
push
add
fidivl
jb
adc
in
sbbb
jecxz
out
in
shr
aaa
push
sbb
movlps
sub
xchg
fwait
icebp
shl
adcb
push
or
or
loop
out
jb
mov
popa
jno
insl
jmp
in
loop
sub
mov
sub
mov
lods
scas
pop
inc
mov
inc
mov
cwtl
push
je
add
int
pop
rolb
shll
lods
pop
sbb
call
mov
push
in
inc
dec
add
mov
dec
movsb
jbe
inc
test
dec
mov
mov
jecxz
mov
inc
inc
inc
enter
scas
cmp
in
pop
clc
das
mov
lahf
int3
daa
shll
dec
outsb
push
test
adc
ret
adc
jae
jp
adc
loopne
ja
insb
add
or
mov
pop
xor
cld
cmp
push
push
push
dec
xor
mov
adc
mov
sub
repnz
mov
dec
in
push
xor
aas
mov
push
loope
orl
xchg
dec
push
dec
adc
cmp
sbb
mov
movsl
or
jg
pop
xchg
inc
or
pop
je
jmp
mov
push
dec
sub
icebp
and
jns
adc
inc
sbb
nop
shlb
add
cli
jg
jmp
daa
sub
sub
cwtl
mov
jno
mov
outsb
into
and
push
xor
icebp
loopne
sbb
jnp
mov
inc
cmp
mov
mov
sub
sub
pusha
aaa
and
pushf
es
push
loop
jo
mov
dec
inc
pop
pop
and
pop
mov
add
push
and
lock
mov
out
repz
xor
or
adc
in
sub
in
mov
and
jo
dec
pop
les
dec
push
adc
xor
lods
imul
jmp
sub
mov
cld
ss
push
xchg
cmp
lahf
pushf
push
jmp
sbb
ds
xchg
popa
loop
push
jnp
xchg
xor
push
js
push
jmp
cmpsl
and
cltd
and
jmp
cmp
jne
cmp
sbb
cmp
mov
cmpl
and
and
mov
jp
mov
mov
cmp
les
orl
xchg
jno
nop
or
adc
cwtl
mov
inc
xor
dec
add
pop
sbb
adc
outsb
and
jp
mov
inc
shlb
pushf
jp
movl
pop
les
jns
shr
sbb
push
insb
sub
rorl
or
or
out
adc
inc
js,pt
and
push
push
daa
mov
mov
jne
sub
subl
add
add
dec
inc
in
mov
xchg
setb
or
scas
pop
mov
add
popa
jae
fisubl
add
and
clc
jg
sti
mov
scas
dec
test
movd
movaps
sbb
jae
xor
jle
xor
add
lret
je
mov
idivb
repz
or
and
cmpsb
fstl
mov
and
in
add
dec
cld
aam
ret
or
add
or
stos
rcll
fwait
add
divb
ret
mov
aas
or
jo
addps
int
cmp
test
sub
ret
adc
xchg
cmpsl
mov
pop
xor
cmp
fucomp
andb
dec
push
cmp
mov
ja
lods
jo
xchg
adc
xchg
or
adc
mov
sub
push
mov
addl
xchg
adc
adc
inc
pop
ljmp
pop
xor
jbe
sub
mov
push
jg
in
loop
jg
pop
xchg
push
movsb
leave
in
test
jecxz
jmp
push
or
inc
jbe
adc
enter
add
pop
ljmp
fucomip
and
test
push
jp
and
mov
testb
cmp
stos
loop
xchg
mov
lods
pop
test
jle
xchg
mov
inc
inc
push
cld
or
push
mov
cmp
in
jg
cltd
addb
mov
cmp
jmp
loope
jne
push
mov
nop
add
dec
adc
andb
in
inc
mov
mov
mov
add
nop
sbb
pop
adc
adc
or
sbb
call
nop
mov
jne
popf
sahf
or
add
mov
jl
dec
inc
lock
rclb
test
add
lods
cmc
and
lret
subl
xchg
jmp
push
sub
push
push
outsb
adc
daa
and
or
xchg
inc
dec
mov
aas
mov
lock
ljmp
adc
adc
jne
inc
cmp
adc
dec
xor
rol
inc
clc
in
mov
mov
inc
popa
cmpsb
js
ljmp
jbe
mov
mov
das
out
mov
adc
adc
adc
hlt
cmp
add
sahf
cld
push
rclb
lock
das
xchg
cmp
or
dec
adc
xchg
adc
cmp
lret
add
adc
es
or
loopne
xor
add
add
mov
mov
pop
cs
and
add
bound
inc
hlt
cmp
jno
into
mov
repnz
cmpsb
mov
iret
enter
mov
sahf
cmp
ret
test
shl
cltd
movsb
idivl
dec
leave
sbb
jle
mov
pop
cmp
mov
mov
std
add
loopne
rol
inc
inc
dec
adc
sarl
rcl
lret
jne
sbb
idivl
add
inc
ret
jmp
jnp
push
jg
sub
mov
xchg
testl
mov
adc
mov
sbb
pop
jo
gs
add
add
add
out
testb
sbb
or
orl
in
repnz
ja
inc
test
stos
hlt
daa
subb
mov
mov
aad
pop
repz
jne
add
ret
xor
sbb
mov
fiaddl
inc
jecxz
add
stos
mov
ret
inc
cmp
mov
add
mov
pop
rclb
clc
rolb
ficomps
mov
shrl
psadbw
data16
jne
or
fimull
idivb
in
mov
xor
jmp
adc
imul
mov
push
and
push
or
inc
cmpsl
lea
push
lock
or
inc
or
bound
inc
push
pop
pop
inc
imul
sbb
add
mov
mov
jbe
push
xor
pop
div
jle
push
push
es
or
imul
xor
xor
rclb
popa
test
dec
sbb
and
lock
adcl
repz
fcomps
fsubs
add
imul
add
push
inc
call
pop
mov
leave
pushw
mov
cltd
repz
mov
push
adc
nop
jo
jmp
aad
push
addr16
rcrl
or
jnp
xchg
adc
xor
lock
push
insl
sub
xlat
jno
pusha
jb
inc
ret
lds
adc
sbb
lock
xor
lret
rorl
in
insl
cmp
cmp
adc
movsb
movsb
jecxz
fstpl
repz
clc
lods
dec
fldl
pop
push
dec
ja
outsl
mov
inc
xchg
mov
mov
in
inc
mov
mov
adc
ljmp
add
aam
push
test
cs
cmp
mov
sbb
sbb
mov
mov
jne
inc
or
pop
pop
imul
les
jo
and
xchg
dec
fsubrl
loopne
out
add
cmp
jb
xor
js
jle
dec
pushl
push
jp
pop
mov
inc
and
test
mov
mov
je
cmpsb
fsubl
ret
mov
lahf
push
xchg
cld
pop
pop
push
xchg
mov
cltd
clc
add
sub
mov
mov
movsl
in
shrb
jbe
cld
idivb
xor
inc
out
imul
pushf
or
add
push
sub
ret
add
pop
pop
push
or
mov
inc
and
outsl
sub
fsts
push
add
shr
and
fistpl
add
and
je
hlt
mov
ja
dec
test
clc
mov
testb
inc
mov
dec
push
mov
loopne
add
xchg
test
xchg
dec
jmp
loope
adc
fdivrp
je
inc
fstl
dec
xor
les
sarb
push
jp
push
jmp
inc
clc
mov
inc
sub
push
xchg
xor
inc
xor
lock
pop
ret
push
faddl
dec
push
icebp
pop
fiaddl
clc
ret
jmp
inc
in
orb
loope
and
push
movsb
jo
or
add
push
fsubr
lcall
nop
cmp
push
mov
pop
mov
movsl
stc
sbbl
adc
popf
inc
jl
pop
daa
mov
inc
cli
popa
xor
add
add
lds
repnz
mov
xchg
cmpb
lea
adc
mov
pop
test
dec
js
dec
pop
bound
push
jne
mov
push
cs
fnstsw
jne
mov
sbb
sub
mov
in
mov
adc
and
jo
cmpsb
xchg
in
pop
bound
push
push
push
repnz
addb
mov
sub
jge
pop
push
jg
test
cmc
mov
fwait
std
lods
jmp
and
adc
dec
or
stos
mov
or
cmp
mov
mulb
push
inc
pop
test
les
mov
add
mov
cmpsl
sub
dec
and
pop
jne
lea
test
or
cmp
or
addl
inc
bound
in
stos
push
push
push
adc
aaa
cmpsl
bound
mov
mov
stos
mov
dec
cmp
dec
push
nop
push
mov
add
push
jo
cmp
in
or
and
adc
mov
and
jbe
xor
xor
mov
jl
xor
sub
bound
sarl
sbb
adc
imul
pop
add
nop
addr16
add
daa
or
add
and
add
roll
lcall
flds
add
mov
push
push
inc
enter
pop
push
pop
jb
mov
or
or
xchg
add
or
in
cmp
or
cmp
sahf
xchg
pop
or
loop
inc
fisubs
lcall
add
cmpb
push
ja
adc
nopl
push
add
push
lcall
fwait
jb
sahf
xchg
sub
adc
in
repnz
ds
add
iret
adc
ret
sbb
out
rclb
lcall
adc
push
nop
adcl
push
push
pop
int
or
xor
sbb
add
sbb
inc
ficomps
inc
sbb
add
adcl
push
outsb
sub
sbb
je
popf
sbb
repz
sbb
bound
add
jns
sbb
pusha
add
inc
push
pop
push
ljmp
nop
pop
jne
add
add
sub
cmp
insb
fbld
jne
sti
push
movl
xchg
adc
mov
push
inc
cmp
or
in
jno
repnz
sub
iret
sarl
adc
aad
sahf
add
in
out
xchg
out
inc
fwait
out
mov
xor
repnz
outsb
or
call
adc
dec
dec
cwtl
jmp
xchg
add
sbb
or
sbb
insb
nop
cmpsb
repnz
in
in
in
cltd
add
pop
mov
push
nop
addr16
out
out
jge
inc
push
inc
out
sbb
pop
add
dec
jae
lock
iret
enter
pmulhw
repnz
repnz
std
push
push
and
repz
std
hlt
add
aam
rorl
pusha
hlt
fwait
cmp
enter
inc
jg
add
sbb
negb
nop
xchg
cmp
cmp
clc
jb
push
imul
seto
stc
inc
stc
lock
cli
pusha
in
jns
iret
sti
fwait
lret
sbb
stos
cld
cld
cld
je
xchg
mov
rcpps
ficomps
mov
xor
sbb
enter
adc
mov
clc
ret
inc
or
dec
add
les
xchg
sbb
cmp
pop
cmpsb
adc
jecxz
mov
mov
stos
and
enter
ret
push
in
inc
mov
in
xchg
sti
out
out
xchg
add
out
outsb
call
and
sub
lcall
jmp
push
mov
jmp
in
mov
mov
xchg
xchg
sbb
rolb
out
out
cltd
push
and
xor
sbb
pop
repnz
cli
sbb
movsb
test
cs
stos
in
stc
push
stc
jno
sbb
fucomp
rclb
stc
div
negl
int3
pop
fwait
xor
add
stc
out
clc
lcall
sti
sti
lea
inc
sti
cltd
mov
in
cld
orl
scas
out
mov
inc
loopne
mov
xchg
cld
sub
mov
pop
push
mov
mul
pop
xchg
mov
scas
testl
mov
out
out
sbb
inc
out
out
dec
push
jno
inc
mull
imull
xchg
xchg
sbb
jno
imul
cmp
pop
pop
mov
or
sub
xchg
negb
mov
mov
inc
negb
testb
add
sbb
repnz
jb
jno
cmc
pop
imul
in
cmc
jae
xchg
cmpsb
jb
pop
dec
cmc
div
not
cmp
jns
and
inc
add
clc
clc
lock
popa
cmp
mov
imul
jno
hlt
pop
mov
inc
bnd
push
hlt
pusha
shll
sbb
out
jne
and
hlt
idivl
jo
jo
insb
push
sti
lahf
pusha
adc
ds
test
dec
push
cmp
push
xchg
cmp
mov
push
xor
mov
test
rclb
repz
mov
inc
repz
and
and
repnz
jmp
cmc
mov
xchg
repnz
roll
movsl
mov
jne
cmp
cmc
and
add
adc
roll
je
push
mov
xchg
cmp
mov
xchg
mov
test
imul
icebp
cmc
cmc
dec
push
jno
cmc
add
push
pop
xchg
pushf
jecxz
ffree
in
rcll
outsb
sub
stc
stc
cmc
mov
push
lock
leave
xor
sbb
mov
test
dec
ljmp
stc
outsb
or
cmpsb
add
sub
out
mov
and
ret
rdpmc
jb
mov
inc
int3
add
and
enter
dec
add
fwait
push
jnp
dec
add
xchg
adc
andb
cmp
ja
test
dec
add
sahf
and
ljmp
cmpsl
pop
add
incl
mov
adc
push
or
sub
mov
outsb
jp
fwait
shrl
and
adc
pop
ljmp
outsl
dec
pop
jl
loopne
jns
int
rclb
sbb
push
push
xor
xor
ret
scas
sbb
push
adc
aas
mov
adc
add
roll
lods
aaa
xor
dec
lahf
nop
icebp
jne
add
ljmp
mov
mov
add
addl
pop
add
aam
or
in
mov
inc
cld
jb
test
mov
jbe
adc
add
pop
int
lret
nop
inc
pop
test
adc
std
les
add
sbbl
add
push
push
fdivp
mov
push
rolb
clc
pushf
cli
xchg
mov
jg
lock
dec
jnp
loopne
cld
mov
push
or
fnstcw
movb
push
xchg
andl
adc
or
mov
or
dec
arpl
fdivs
fistpll
mov
sahf
fmuls
and
or
sub
ret
lock
mov
subb
cltd
mov
add
add
or
mov
mov
mov
sub
cli
aas
test
sbbl
lods
test
push
cmpl
dec
xor
xchg
test
mov
cmp
insb
and
rorl
fwait
es
mov
lret
ret
pop
add
or
js
in
std
jo
push
rep
mov
dec
ljmp
decb
push
mov
add
loopne
push
or
xchg
fdivrs
fs
push
addr16
add
outsb
and
push
sub
in
inc
xor
pop
push
add
xor
stos
lea
loop
in
inc
adc
js
cmp
fdivrp
add
jecxz
inc
add
pop
jge
insl
ret
mov
cmp
fwait
pop
push
aaa
inc
jb
pop
ja
add
clc
test
jb
pop
inc
inc
inc
inc
sbbl
data16
ja
insb
enter
jbe
mov
sbb
inc
and
sub
test
gs
cmp
and
clc
push
xor
jo
jne
cmpsb
or
mov
test
sub
je
pop
addl
sbb
pop
add
gs
enter
add
or
paddb
enter
dec
mov
in
mov
inc
xchg
fwait
add
cmp
mov
gs
add
xor
sbb
xchg
or
jl
or
lods
push
mov
mov
mov
push
lea
mov
out
mov
into
pop
adc
inc
ret
ss
out
xchg
out
xor
ja
lea
cmp
jne
sbbl
cmpsb
add
sub
ret
mov
xchg
cmp
dec
add
adc
cmp
imul
push
xor
mov
in
xor
pop
pop
in
ror
cmp
and
fwait
out
mov
jne
pop
jne
dec
add
add
sub
mov
ud0
fcoml
jbe
xor
or
div
jo
inc
inc
mov
lret
cld
xor
sbb
idiv
sbb
je
mov
sub
cmp
cs
fwait
pop
cmp
add
cmp
jae
push
ret
pusha
movsb
fsubl
sbb
push
sbb
dec
mov
pop
mov
mov
jmp
mov
scas
pop
mov
inc
push
mov
or
test
cmp
adc
lock
lret
jbe
aad
rcrl
mulb
scas
mov
bound
mov
mov
jge
les
cmpsl
addb
subl
pop
pop
inc
and
cmp
and
stc
adc
out
add
push
out
ret
fsub
sub
inc
bound
popa
dec
jo
cli
cld
fisttpl
sbb
push
addl
cmp
jne
jnp
repnz
dec
push
or
mov
add
pop
testb
int
jne
mov
push
cmp
jne
es
rcr
jne
call
ljmp
inc
cs
or
cld
mov
inc
adc
jmp
or
std
jmp
cld
femms
sub
fimuls
pop
lcall
sub
jb
mov
fdivs
mov
scas
and
adc
repz
sub
mov
mov
leave
jns
push
mov
or
test
xchg
sbb
fwait
std
or
inc
enter
movsl
mov
push
push
push
addb
and
add
or
xor
sub
and
dec
shlb
ret
fwait
les
mov
xor
dec
test
add
sbb
fimull
pop
push
add
sahf
add
repz
and
and
sub
rorl
pop
sarb
adc
scas
lcall
hlt
push
pop
add
push
adc
rcrl
ss
push
lock
or
mov
push
jmp
sbb
or
dec
outsb
out
jns
sub
sbb
bound
or
lcall
xchg
jno
fcomps
cwtl
ja
pop
pop
and
adc
adc
and
cmp
sbb
das
call
popa
push
mov
jl
hlt
test
add
add
lock
jmp
and
adc
in
mov
call
mov
and
stc
push
cli
fistl
imul
stos
add
testb
test
mov
out
out
js
es
cmc
rolb
test
push
mov
arpl
jmp
fdivrl
inc
adc
add
ds
cmpsl
cmp
or
stos
fwait
imul
add
sahf
add
push
add
sub
inc
ljmp
push
sub
in
or
faddl
mov
mov
pop
and
push
jg
fisttpl
pop
scas
push
pop
test
out
jg
les
adc
or
rep
outsb
movsl
popa
cld
jmp
mov
or
jb
cmpsl
insb
out
jo
enter
das
ds
les
lods
fidivrs
dec
fsubs
add
sub
and
adc
inc
add
add
imul
int3
xchg
dec
add
movl
dec
inc
add
add
or
cwtl
push
push
mov
jns
out
js
push
mov
cmp
in
call
iret
repz
hlt
hlt
clc
clc
test
lea
andl
fldcw
int3
push
fsubs
and
nop
nop
shll
and
cmp
and
lea
xchg
sub
jl
cld
or
push
cld
out
push
xor
fsts
sbb
xor
fs
mov
mov
add
fisubs
add
sahf
inc
push
out
mov
dec
in
add
xor
adc
pop
add
jnp
xor
add
or
iret
repz
adc
and
xor
repz
mov
aaa
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
jl
fwait
and
or
js
xor
mov
add
adc
js
es
addb
std
das
les
xor
mov
mov
incl
inc
decl
test
and
jne,pn
pop
pop
lods
inc
jbe
jne
pop
push
cld
cmp
xor
mov
sbb
cltd
pop
idiv
add
mov
pusha
or
xor
add
idivb
dec
clc
aaa
dec
mov
mov
xor
decl
aam
bnd
cmp
jae
dec
out
lods
inc
xchg
mov
jae
pop
jbe
or
push
mov
dec
hlt
jmp
pusha
add
sub
or
pop
stos
or
xchg
jg
outsl
push
jne
dec
sbb
add
adc
in
mov
sbb
sbb
dec
dec
je
push
push
ljmp
jmp
out
pop
adc
mov
xchg
insb
adc
dec
repz
push
and
xor
pop
decb
push
jl
add
test
mov
inc
daa
adc
out
rcrb
cmp
das
dec
sub
in
inc
add
push
add
add
gs
sbb
fbstp
rol
xor
inc
adc
adc
sub
sub
test
cmp
imul
pop
imul
sbb
ja
lret
in
movsb
jmp
cmp
sbb
sub
sub
insl
or
aas
jge
push
push
outsb
sbb
pop
cltd
pop
idiv
ds
inc
filds
xchg
inc
out
cmp
and
mov
cmp
dec
fdivl
mov
js
push
pop
inc
es
add
xchg
mov
scas
scas
adc
fs
jmp
jl
mov
sbb
call
pop
sub
or
je
insb
sub
add
dec
ret
sbb
sbb
sbb
and
insl
xchg
xor
pop
incb
inc
jns
sbb
push
dec
adc
cmp
sahf
mov
dec
incl
pop
sti
cmp
rcll
cmp
clc
ror
dec
rolb
inc
out
in
and
jae
or
cmp
int3
in
movsb
loop
mov
push
jecxz
sub
cmp
mov
jge
pop
je
sbb
add
add
data16
xchg
daa
pop
jno
mov
mov
push
enter
in
inc
add
dec
inc
call
jne
mov
shlb
add
or
adc
push
lahf
je
mov
cs
or
push
or
and
push
mov
std
push
or
adc
lcall
popa
movsb
mov
stc
pop
stos
add
pop
push
adc
lcall
fildl
push
push
pushf
jmp
and
pop
movsl
and
lea
inc
and
sub
mov
ret
push
je
mov
or
push
push
movsb
xchg
pop
or
mov
stos
mov
sub
loop
lock
push
jg
call
push
add
push
mov
adc
data16
idivl
out
call
add
inc
in
push
sbb
inc
scas
imul
jae
shr
dec
ljmp
cmp
ret
xchg
rorb
adc
sbb
push
pop
inc
or
addb
hlt
dec
inc
cmp
mov
sub
adc
mov
js
test
adc
push
inc
jg
and
les
aam
cmpsl
mov
fistl
pop
mov
pushf
js
jg
fisubl
mov
inc
inc
cmp
je
xchg
mov
jle
cli
orb
pop
cmp
adc
add
push
lods
popa
fidivrl
dec
je
and
mov
or
sbb
or
pushf
jl
inc
pop
js
mov
push
inc
imul
pusha
push
mov
sbb
imul
sbb
js
inc
sub
jnp
mov
lds
pop
or
pushf
and
mov
or
pop
xchg
je
add
dec
push
xor
bound
add
mov
add
out
sub
or
std
pop
or
cli
test
push
out
pop
adc
test
cmp
pop
cmp
je
mov
mov
add
adc
shll
lods
rcr
sti
inc
or
add
push
nop
or
mov
int
xor
sbb
fs
pop
add
sub
add
frstor
mov
push
fimuls
dec
movsb
jb
jns
sbb
hlt
sub
inc
sbb
inc
cmp
mov
adc
fildl
ds
mov
add
jne
inc
push
shll
mov
popa
bound
xchg
jmp
dec
or
stc
cmpb
cs
dec
jmp
test
jmp
int3
pminsw
and
and
shlb
cmpsl
and
or
clc
ret
jo
and
cmp
call
and
ror
adc
add
add
in
adc
fadd
or
adc
cmp
mov
in
xchg
jge
outsb
jns
and
jmp
push
pop
push
add
push
daa
pop
cmp
inc
in
mov
mov
push
cli
mov
add
dec
or
jl
lcall
inc
push
mov
das
cmp
loopne
or
inc
inc
call
mov
pop
mov
push
les
or
dec
lods
inc
fucomi
sub
cltd
pop
stos
call
jmp
mov
scas
inc
out
pop
jmp
jmp
ja
inc
jmp
aas
add
add
cli
and
sub
pop
das
lea
enter
mov
leave
jb
xor
jne
add
adc
add
add
and
pop
pusha
leave
pop
fldz
sub
in
sbb
push
addb
or
cli
and
fildll
leave
ret
cmp
and
push
pop
jb
mov
add
or
inc
cltd
add
jmp
sbb
push
xchg
xchg
lahf
inc
add
stc
push
outsb
mov
inc
lods
sbbl
insl
ds
xchg
cltd
loope
jmp
pop
arpl
xchg
push
jno
mov
xor
aas
inc
mov
mov
xor
andb
add
adc
ja
jl
fs
pop
add
lock
sub
movsb
cld
adc
repnz
daa
or
test
cs
sub
sbb
sub
jl
addb
dec
xchg
ficoml
add
outsb
jbe
pusha
leave
test
add
dec
and
xchg
add
pop
mov
mov
push
push
andl
addb
xor
popa
sbb
in
ret
lcall
pop
pop
add
pop
test
into
gs
clc
mov
rorb
das
fcomps
mov
push
inc
int3
or
sarb
cmp
leave
push
push
mov
enter
mov
leave
or
jmp
mov
cmpsb
popa
or
xchg
adc
xchg
cwtl
dec
lcall
lock
movb
sbb
or
push
f2xm1
xor
sbb
adc
adc
imul
in
push
stos
mov
cs
add
adc
addr16
cld
arpl
imul
fs
add
cmp
divb
and
inc
cmp
inc
sub
bound
imul
or
jge
cmp
fiadds
shlb
mov
dec
mov
xor
ja
add
addl
js
adc
jl
mov
fildl
fcompl
mov
pop
or
cmp
cs
xchg
jle
repnz
inc
pop
jp
adc
mov
xchg
jg
adc
or
pop
lcall
sub
mov
cmp
push
pop
xor
rorb
jbe,pt
roll
test
mov
dec
pop
dec
lock
in
or
push
or
mov
clc
rcl
out
sbb
sbb
or
enter
std
mov
or
push
incl
adc
sti
push
sub
sub
test
inc
enter
inc
xor
imul
push
jg
pop
loope
ret
test
xor
push
xor
aas
fcoml
mov
rclb
cmp
or
test
dec
aaa
pusha
pop
adc
and
pop
or
notl
lock
shlb
incb
icebp
adc
dec
jo
push
sub
outsl
xor
neg
mov
mov
test
fmuls
or
add
jmp
cmp
or
jbe
lcall
cld
jb
movsb
cld
jb
idivb
sbb
pop
mov
dec
dec
mov
inc
pop
add
ret
loope
add
adc
jp
clc
shlb
xchg
or
add
movsb
xchg
popa
aad
cmp
lods
test
xor
imul
mov
xor
movsb
data16
cmp
data16
lret
rolb
imul
xor
or
jg
add
mov
adc
in
repz
inc
xchg
sub
adc
adc
mov
and
pop
rol
int3
sbb
out
fcoml
sub
pop
add
cmp
bound
adc
les
test
pop
dec
or
or
je
lock
push
pusha
pop
ljmp
adc
testl
xchg
sub
nop
sub
lcall
repz
jnp
xor
jne
dec
pop
mov
ss
inc
test
add
enter
mov
clc
testb
clc
dec
xor
adc
inc
add
jb
lea
push
adc
push
pop
and
in
dec
ss
push
shlb
push
or
sti
inc
pop
loopne
imul
inc
add
pop
ret
es
mov
push
xor
lock
stc
pop
inc
das
or
xchg
or
popa
mov
inc
sub
in
push
xchg
adc
das
inc
and
imul
add
std
fbstp
arpl
icebp
jae
jo
and
adc
leave
imul
dec
ret
pop
adc
mov
shlb
sbb
lods
dec
xchg
sarb
das
daa
jne
pop
push
cmp
cmpsb
mov
cwtl
or
mov
and
push
add
cmpsl
push
subb
movb
jmp
cmpl
mov
fists
add
fstpl
inc
sahf
add
add
ljmp
or
out
and
fstl
or
sbb
dec
loopne
inc
out
aad
bound
aas
jnp
or
mov
push
lea
loopne
in
mov
call
movsl
push
imul
lock
add
mov
mov
xlat
xor
add
jnp
or
mov
je
add
iret
xor
xor
dec
or
pop
aam
movb
push
adc
call
mov
sti
sbbb
add
rorl
xchg
xchg
adc
push
jo
rolb
add
clc
inc
jnp
inc
jg
pop
fadds
jnp
and
cmp
xlat
sbb
cmp
mov
addl
lock
adc
push
ret
push
jge
cwtl
adc
push
sarb
pusha
inc
cwtl
sbb
ficompl
testl
mov
sub
dec
and
and
sbb
inc
cmp
pop
push
lods
hlt
lds
cmp
lock
push
push
push
jbe
adc
sub
jg
mov
sbb
jg
pop
and
popl
es
lods
cmp
add
inc
movsl
stos
mov
mov
movl
cmp
xor
aaa
lea
cmp
adc
sbb
sti
mov
rcll
out
mov
arpl
and
in
push
push
popf
es
call
adc
loopne
inc
push
xor
sub
xor
add
pop
or
cmp
mov
push
or
inc
cmp
test
rol
adc
bound
icebp
and
jne
adc
jle
shl
and
jnp
mov
mov
sub
mov
mov
dec
jne
lea
cld
cmp
or
popa
loopne
fbstp
inc
add
call
push
or
mov
outsl
sbb
add
and
out
push
movb
and
lea
mov
in
fisttpll
add
push
sub
sub
dec
aam
push
jno
push
mov
cmp
cld
ficoml
push
push
out
mov
cmp
std
or
mov
push
dec
sbb
inc
cld
popf
jo
movsb
scas
dec
and
int
decb
push
inc
push
orb
mov
jmp
and
je
and
dec
sbb
xchg
xchg
aam
or
mov
and
rolb
lahf
lods
leave
sub
sti
pop
mov
cmp
cmp
sub
or
push
jl
in
call
add
jmp
cmp
push
and
and
jmp
add
aas
dec
je
ret
xor
sub
jbe
lock
mov
rol
push
push
ja
test
and
push
add
mov
hlt
cmp
pop
ss
dec
adc
lret
clc
mov
shlb
sbb
mov
and
mov
mov
lock
jmp
mov
lods
sbbl
sub
mov
pop
cld
cmp
mov
add
cmp
jns
into
aam
inc
cmp
sarl
add
jne
fsubr
fldt
jne
inc
das
stos
enter
adc
sarb
jno
add
adc
nop
mov
push
and
xor
pop
or
inc
inc
mov
or
nop
loopne
inc
enter
lock
out
into
imul
insl
imul
sub
dec
insl
push
popa
ljmp
dec
lea
push
mov
shrl
cmp
jle
sub
cmp
jbe
mov
in
lea
mov
pop
loope
es
inc
stc
bound
lea
nop
cli
imul
add
mov
aaa
jmp
push
jnp
or
out
out
nopl
fs
adcb
cmp
movsl
mov
ljmp
and
incl
jle
pop
jge
add
jb
mov
xor
push
sbb
outsl
inc
sahf
out
insl
adc
adc
mov
inc
mov
inc
pop
cmp
dec
jne
mov
inc
cmp
ds
push
jl
sbb
or
mov
incl
add
mov
and
or
jne
inc
test
jecxz
push
or
hlt
lds
adc
push
jnp
test
xor
xchg
mov
and
inc
fwait
ds
jle
push
dec
loopne
adc
add
orw
aam
or
test
clc
push
loopne
imul
ss
pushf
pop
sbb
mov
push
sub
push
inc
adc
inc
push
testb
inc
push
inc
sar
and
xchg
repnz
dec
xor
xchg
xor
fstp
pusha
shll
mov
mov
push
sub
xchg
mov
mov
loopne
or
pop
sub
jmp
xor
add
mov
mov
jmp
andb
ss
imulb
jmp
adc
jno
es
inc
sub
xor
adc
cmp
sub
sbb
xlat
jecxz
lret
cmp
pushl
push
and
pop
movl
and
popa
inc
lret
cmp
popf
idivb
pop
shll
or
pop
sbb
out
cmp
mov
ds
inc
inc
mov
addr16
add
lahf
das
fidivl
sarb
inc
sbb
inc
sub
xchg
int3
mov
fwait
outsl
clc
subb
and
xorb
push
aam
pop
push
data16
sbb
cwtl
sub
inc
int3
imul
out
in
xor
lea
or
push
cmpl
add
fs
pop
pop
insb
add
cmp
sahf
inc
add
movsb
rclb
pop
decl
jne
sbb
push
xor
jo
testb
inc
notb
mov
add
pop
sub
jnp
mov
aaa
cmpl
out
or
push
pop
ret
jo
mov
dec
ss
fists
adc
sub
insl
xor
xorb
dec
xor
je
push
test
mov
inc
mov
ds
in
clc
or
or
incb
pop
push
in
push
adc
dec
jle
sbb
jo
insb
or
pusha
loope
add
ds
sbb
add
lcall
push
ficomps
in
push
pop
mov
mov
mov
sub
sub
rol
adcb
daa
mov
adc
cmc
js
add
and
pop
lret
test
xorb
add
cmc
cld
jne
dec
mov
mov
out
call
rcrl
and
shlb
roll
or
push
push
mov
pusha
or
aas
push
inc
push
jl
jmp
pusha
xor
ret
sbb
rorb
imul
pop
push
mov
and
sbb
sbb
out
insb
push
cld
push
jo
ficoml
or
inc
mov
addl
jecxz
mov
pop
inc
or
repz
bound
xlat
adc
jmp
cmp
or
jo
rcrb
ffree
inc
lret
roll
inc
ror
pop
ret
dec
push
jbe
pop
fstpl
cmp
or
imul
dec
mov
fimuls
push
and
or
xor
rol
mull
hlt
iret
xor
adc
sub
ret
repz
cs
clc
inc
and
push
in
pop
sbb
cmp
push
in
inc
inc
arpl
pmulhuw
cmp
orl
ret
hlt
push
ud0
push
inc
nop
push
mov
dec
mov
aad
insb
and
pop
cmp
cli
gs
shll
test
sbb
mov
ret
jg
jge
mov
lds
addl
xor
mov
pushf
rorl
mov
outsl
jle
pushf
cwtl
xchg
pushf
dec
popf
into
mov
mov
into
dec
xchg
es
adc
andb
add
jno,pt
push
rcll
int3
dec
ja
mov
pusha
sub
xor
mov
mov
out
mov
dec
push
cwtl
mov
es
scas
dec
mov
mov
push
xchg
mov
sbb
xor
or
nop
sbb
dec
and
dec
inc
rclb
ja
jns
fisubs
sub
andl
lcall
inc
inc
sbb
sbb
sbb
mov
or
sbb
or
fcoml
fcomps
int3
data16
clc
or
test
movsl
mov
lods
mov
ficoms
dec
add
sarl
rcl
aaa
dec
cld
adc
sub
or
cmp
aam
xchg
mov
test
adc
fmuls
lea
mov
adc
mov
fs
out
xchg
add
in
daa
adc
adc
jge
adc
push
jecxz
push
fists
sbb
jae
add
mov
xchg
add
insb
or
jmp
jle
inc
dec
mov
or
rolb
decl
loop
push
dec
and
fs
js
je
sbb
imul
mov
mov
fcomps
xchg
adc
fs
fs
mov
pop
or
push
inc
clc
cmp
repz
sub
sbb
sub
xor
scas
adcl
pushf
pop
cmp
stos
mov
pop
mov
pop
pop
nop
adc
cmp
inc
test
push
pusha
pop
pop
add
adc
add
pusha
mov
jns
shll
inc
popa
jl
fsub
negl
out
sbb
inc
adc
sbb
sub
add
cmp
pop
sub
aas
inc
fwait
add
test
cmp
xor
mov
shr
sub
arpl
rorl
in
inc
jmp
pop
sbb
pop
das
js
or
add
add
jno
jle
cld
cli
dec
je
loope
mov
lret
jne
cpuid
mov
sbb
fisttpl
or
inc
mov
pop
nop
test
int3
sbb
int3
mov
jge
push
push
movb
imul
es
sbb
and
dec
dec
aas
or
cmc
add
dec
and
xor
idivl
aas
lds
and
sbb
cmp
hlt
mov
sbb
call
es
daa
fwait
xor
adc
inc
mov
enter
adc
xchg
cmp
in
cmc
je
orl
adc
adc
jae
push
jp
dec
jae
jl
or
sub
movl
pop
imul
sbb
adc
fildl
rcll
data16
or
push
and
mov
and
ret
mov
add
inc
test
out
adc
push
dec
push
jno
bound
xor
lock
and
dec
xchg
jle
iret
insl
pop
insl
xchg
sub
imul
and
or
outsl
push
mov
loop
jl
mov
lock
loope
xchg
in
lret
jle
test
ja
enter
inc
or
je
movl
or
scas
adc
cmp
mov
movsl
int
pop
mov
jecxz
jmp
adcl
sbb
and
in
shl
mov
or
and
shll
ljmp
mov
push
sub
hlt
test
clc
outsl
or
inc
sbb
loope
or
fistl
dec
sub
add
add
add
adc
loopne
enter
inc
test
sub
sub
lea
inc
cmp
cmc
mov
add
push
push
pop
std
ss
push
adc
push
inc
imul
push
das
jmp
inc
loop
pushf
lcall
dec
or
sub
mov
out
shrl
lock
sub
out
in
add
adc
dec
loop
sub
mov
int
pop
ret
push
xor
or
lock
mov
pop
test
mov
and
or
and
add
pushf
adc
aaa
jecxz
rorl
dec
ret
test
cltd
push
xchg
icebp
xor
push
mov
adc
test
scas
jbe
push
inc
shrb
push
fldl
pop
xor
inc
ret
aaa
sahf
jno
mov
pop
divl
ret
js
sbb
into
ds
mov
dec
fldcw
jle
push
push
jne
xorl
jl
inc
dec
ljmp
jns
xchg
and
incb
mov
adc
loopne
pop
cmp
shl
add
mov
sbb
test
and
clc
adc
es
shll
and
andb
icebp
scas
add
bound
adcl
mov
outsb
mov
mov
adc
testb
mov
adc
jbe
fidivrs
dec
sub
push
jmp
jb
inc
ljmp
ljmp
test
rcrb
cmpl
les
xor
xchg
ss
dec
ret
xor
js
stos
jno
xor
test
and
or
in
mov
out
mov
sbb
jne
xor
mov
sbb
mov
sarl
pop
dec
bound
sbb
leave
test
mov
mov
xlat
jecxz
push
pop
xchg
or
pop
cs
insl
cmp
and
das
lods
shrb
loopne
test
out
rcrb
jl
dec
shll
adc
sbb
sar
pop
mov
cmpsl
mov
push
lock
jecxz
inc
jnp
inc
fimuls
mov
lods
or
aam
jae
pop
fdivr
fsubs
outsb
adc
call
je
or
inc
adc
test
or
add
xchg
lret
and
sarl
or
adc
xor
sub
or
loopne
cld
adc
jo
jl
mov
sub
push
imul
loopne
and
lea
ja
or
add
xchg
hlt
out
sbb
or
stc
nop
je
add
fmull
push
sbb
mov
dec
and
subb
jmp
insb
xor
sub
scas
pop
ret
sbb
pop
and
pop
xchg
ss
or
xor
mov
sbb
jns
dec
xor
movsl
arpl
sar
dec
fs
cmp
jb
or
imul
int
cmc
jne
js
xchg
xchg
mov
je
mov
adc
loop
xchg
lret
pop
xlat
mov
jb
or
push
sbb
mov
pop
push
or
add
mov
int
inc
mov
fdivr
cmpsl
andl
jle
lock
test
je
push
and
in
jae
lret
push
dec
ret
movsl
test
pop
jge
shll
jne
das
mov
adcl
jmp
ds
sbb
dec
and
xor
leave
jo
fs
loopne
ret
or
pushf
in
rcl
in
sub
mov
and
pop
push
jnp
adcb
push
ret
subl
shlb
xorb
push
addl
negl
push
aam
dec
sbb
push
dec
lret
inc
and
xor
call
push
sbb
test
sti
ss
fstpt
or
pushl
fistpll
push
mov
icebp
sub
mov
jge
lcall
mov
inc
insb
cli
inc
cmp
pop
or
sbb
xor
xor
add
adc
je
cwtl
cmp
out
pop
jns
push
sbb
jb
pop
jno
inc
gs
cli
add
add
aad
sub
addr16
push
or
repnz
push
outsb
je
test
jns
sbb
out
popa
or
clc
xor
jae
rcr
test
mov
push
clc
je
data16
movsb
push
pusha
pop
add
les
mov
repnz
or
sbb
pop
jecxz
push
stos
add
push
add
jmp
pusha
into
ret
pop
inc
jne
mov
jne
mov
jmp
cmp
jle
insl
cmpl
incl
dec
or
push
scas
cwtl
mov
or
aad
or
xchg
sub
cld
adc
mov
hlt
dec
outsb
add
arpl
js
inc
or
popf
test
test
and
lcall
pop
test
mov
rcl
sub
adcb
pop
cmpb
jne
and
test
pop
xor
mov
setl
gs
decb
inc
leave
mov
cmpsl
rcrb
mov
dec
lahf
shl
xor
sbb
push
sub
push
test
push
lret
inc
cmp
mov
inc
fbstp
xor
enter
mov
cmpsb
jmp
or
popa
int3
je
cltd
and
dec
ljmp
jl
insb
mov
sub
neg
jecxz
js
sti
lds
jne
cmpsb
jmp
sbb
dec
test
pop
mov
or
jne
and
enter
lea
or
push
inc
outsb
ljmp
aas
and
add
cmp
int
cmpb
nop
xchg
clc
sahf
add
pop
jo
clc
mov
dec
jmp
pop
xchg
sub
inc
cmp
subb
mov
dec
shlb
cmp
xor
ss
test
loope
or
mov
and
inc
inc
sbb
sti
in
fdivp
sub
push
xor
test
sub
add
sub
inc
daa
mov
test
sahf
and
mov
push
aam
cltd
sub
sub
fcoml
or
pop
shl
fdivl
xor
mov
in
jae
cltd
fdivrl
lea
jns
cltd
xchg
rorb
adc
mov
notb
xor
push
gs
push
fdivs
jno
xor
out
add
cmp
call
pusha
fistps
aad
nop
popa
jle
sbb
xchg
addl
mov
jg
or
dec
push
jp
cmp
sti
sub
pusha
rcll
pop
icebp
pop
or
sarl
je
rcr
jp
push
fbld
movsl
daa
pop
mov
shrb
cmp
mov
sub
movsb
loope
sahf
pusha
cmp
ds
lret
cs
sub
jle
mov
adc
out
mov
adc
push
push
mov
imul
lock
sbb
ss
sar
add
adcb
pop
or
inc
add
xchg
shlb
lock
ficoms
and
idivb
pop
cmp
jg
cwtl
add
lea
or
and
fcoml
sub
repnz
or
or
jl
test
add
and
lcall
lret
daa
push
mov
sbb
adc
cs
inc
dec
nop
push
push
shlb
or
jl
push
pop
int
cmp
add
insb
insb
cmpsb
xor
adc
enter
xor
pop
inc
pop
mov
fcomps
adc
les
inc
mov
ss
cli
loopne
xor
cmp
ss
cmp
scas
les
sbb
and
push
push
inc
shll
ds
sbb
inc
or
add
imul
rolb
test
int
cmp
adcb
shll
jl
add
adc
cmpb
lret
sub
cltd
das
xchg
adc
add
jbe
push
dec
dec
loop
or
adc
enter
push
cs
inc
adc
faddl
mov
movsb
mov
sub
jmp
and
popa
fs
push
rorb
sub
cld
shr
mov
imul
xor
mov
cld
push
dec
or
outsb
sbb
mov
push
xor
sbb
mov
popa
outsl
call
cld
loop
jg
and
insb
out
jne
sar
dec
xor
xor
cli
aas
jbe
push
pop
loop
dec
or
subb
jae
mov
shr
lea
not
and
pop
cmc
lret
jne
and
adc
or
cmp
mov
add
push
dec
pop
add
shrl
and
push
or
imul
jmp
and
pop
pop
clc
and
notb
sarl
jne
and
sti
add
lods
push
add
in
pop
cmp
xchg
mov
xchg
mov
cmp
and
mov
add
jno
jno
mov
sti
pop
mov
shr
not
and
add
lods
push
add
lret
subl
das
mov
xor
push
cmp
pop
dec
add
mov
push
or
add
inc
lods
mov
insb
dec
fisubs
lea
mov
test
int3
inc
or
dec
or
std
xchg
adc
mov
mov
inc
mov
mov
and
lock
lods
push
or
or
mov
dec
or
jmp
dec
adc
iret
push
lods
dec
push
mov
movl
movsl
inc
xor
test
jp
xor
repz
push
and
jecxz
push
stos
pusha
shll
fisubrl
std
sarb
lsl
scas
jp
push
call
aas
gs
xor
mov
or
sbb
iret
cmp
sub
dec
inc
adc
hlt
adc
add
and
pushl
push
push
mov
and
loopne
int
push
mov
fildll
enter
int
dec
adc
dec
jge
sar
inc
sub
cmp
cli
into
insl
or
mov
mov
jbe
mov
dec
jo
loope
stos
imul
jne
enter
jo
cwtl
outsl
push
out
add
jne
cmp
daa
js
add
imul
mov
popa
sub
push
lods
out
jne
adc
add
dec
imul
adc
or
int
mov
or
jmp
orl
incl
or
and
push
push
mov
push
fs
shlb
in
out
mov
ljmp
test
dec
insb
loope
incb
pop
and
add
dec
jne
or
gs
adc
testb
int
mov
outsl
lea
loope
out
inc
sub
shr
jg
test
inc
orl
orl
adc
adc
mov
mov
lock
call
dec
jne
mov
jle
je
clc
add
xchg
jo
rcll
mov
jo
sahf
inc
pop
mov
inc
mov
pop
shlb
xor
inc
jne
or
add
pop
jge
and
not
and
into
xchg
xchg
lahf
or
adc
outsb
xchg
push
mov
pop
shr
jb
xor
test
or
icebp
clc
scas
rolb
mov
mov
and
dec
jl
test
dec
mov
jl
cmp
lret
adcb
stc
add
push
movsb
cmpsb
stos
mov
int3
push
pop
sub
xor
pop
inc
stc
sbb
clc
rolb
es
in
and
add
cmp
nop
inc
jae
test
lcall
aas
sbb
sub
add
xor
movsl
adc
cmp
imul
sar
dec
mov
cs
fstpl
mov
fdivp
lea
dec
jg
je
xor
or
mov
lret
dec
pop
pop
push
pop
adc
imul
or
and
and
ffree
test
test
dec
mov
push
iret
adc
inc
insb
xor
add
xchg
mov
mov
shlb
inc
and
clc
xchg
pop
jl
dec
inc
or
mov
scas
add
dec
insb
pop
xor
sub
pop
jle
sar
dec
jp
movsb
and
xchg
jo
in
and
mov
addr16
cmp
dec
mov
in
xor
push
mov
inc
push
fbstp
add
fnstenv
dec
ficoms
fbstp
cwtl
mov
fimull
or
mov
jnp
push
xchg
xchg
jbe
loopne
adc
mov
cs
decb
into
mov
out
cmp
or
push
xor
jns
dec
mov
sbb
add
adc
popa
jp
push
scas
arpl
insb
stos
add
test
lock
cmp
push
push
push
loopne
rol
jge
cmp
out
adc
clc
mov
lret
add
or
mov
cmp
and
decb
xlat
inc
add
inc
ret
adc
xor
inc
mov
push
jne
mov
std
pop
jne
bnd
imul
mov
jae
xor
aaa
mov
call
addr16
pop
daa
mov
and
adc
xor
sbb
inc
dec
outsb
mov
cld
adc
pushl
sbb
loopne
or
and
ret
cld
inc
mov
dec
pop
iret
jne
inc
ret
or
fwait
jno
mov
inc
or
js
aad
mov
mov
jmp
fcmovnu
gs
dec
mov
and
jne
mov
lock
sbb
push
pop
outsb
leave
inc
test
inc
push
aad
inc
fcompl
sbb
jle
adc
je
cmp
xchg
dec
add
xchg
dec
jo
jp
jge
iret
push
mov
cmp
and
mov
into
mov
push
decb
jne
dec
repnz
jp
mov
adc
and
jne
aaa
pop
sbb
dec
push
and
shll
jp
mov
inc
call
push
or
das
pop
popa
mov
sub
jge
roll
cmc
push
rcll
or
dec
cld
or
xor
out
push
in
pop
ficoml
mov
out
or
push
cmc
rol
nop
jp
or
adc
add
scas
push
mov
lods
test
lea
loop,pt
ret
sbb
sbb
pop
xor
push
ds
or
add
dec
outsl
or
repnz
pop
push
cmp
adc
jb
or
xorl
and
pop
and
jne
and
adc
insl
mov
lock
pavgw
fs
adc
jp
or
add
add
add
dec
push
and
jnp
test
movb
das
cmpsl
mov
push
xchg
inc
xlat
orl
xchg
cmp
inc
inc
inc
cmp
cmp
sub
and
push
mov
pop
shl
xchg
cmpsb
pop
sbb
test
js
adc
or
cmp
dec
fcoms
into
stc
xchg
sub
xchg
jl
push
sbb
and
cmp
add
inc
mov
xor
outsl
sbb
ficomps
andb
fdivr
outsb
imul
std
lahf
pushl
adcl
push
cmc
push
ds
adc
push
in
adc
inc
andl
mov
or
mov
adc
mov
mov
dec
iret
lcall
inc
js
push
or
cli
push
add
iret
adc
cmpsl
pop
jl
insl
repnz
sbb
and
pop
mov
lahf
insb
int3
push
rorb
mov
xchg
jle
or
je
or
adc
fisubs
sbb
ds
xor
and
push
pop
sub
or
or
dec
sub
out
stos
adcb
nop
pusha
cmpl
jle
add
add
lods
aam
xchg
dec
jp
hlt
mov
jne
popa
sbbl
mov
mov
jge
sbb
aas
fwait
in
loop
call
movzwl
aad
in
int3
test
push
add
je
dec
loopnew
add
cmp
mov
xchg
and
movzbl
rolb
enter
pushf
mov
sub
mov
stc
sbb
push
roll
push
and
add
loopnew
into
dec
dec
add
aaa
push
sbb
ret
adcb
lods
or
insl
push
lret
pop
add
imulb
xchg
arpl
sub
shll
rorb
ss
cmp
leave
jge
daa
pop
jb
scas
and
xor
repz
loopne
icebp
push
out
push
jb
inc
pushf
fistpll
insb
jne
push
test
fs
jo
jbe
or
pop
and
xor
adc
testl
insb
arpl
inc
dec
push
or
push
out
sbb
int3
les
push
nop
push
pop
std
out
sub
movsb
xor
fwait
ret
test
shll
lea
and
sbbb
cltd
dec
push
fs
push
push
adc
push
lock
ret
movb
bound
cmpsl
call
enter
enter
and
or
call
sub
nop
lret
neg
repnz
rolb
scas
dec
outsl
call
call
addr16
lahf
mov
fs
xchg
in
jns
incl
fimuls
cld
jp
stc
data16
std
push
test
xchg
lret
mov
shrl
sub
mov
push
hlt
data16
mov
or
xchg
addr16
lods
or
cltd
xchg
in
lods
rcrb
add
repnz
js
call
call
in
or
pop
leave
add
mov
jb
pop
add
dec
shl
xchg
cwtl
add
dec
push
nop
or
in
cmp
les
push
test
mov
mov
mov
enter
cmp
je
xchg
adc
or
shlb
xchg
cli
xchg
test
lods
sbb
addl
sbb
jno
mov
shlb
and
imul
sub
jbe
push
add
stc
lea
mov
inc
adc
lret
mov
stos
sub
push
jge
fiadds
pusha
xchg
ret
xchg
dec
js
adc
jne
and
fwait
rorl
mov
mov
adc
pop
add
jmp
xor
or
cmp
inc
inc
pop
or
mov
lods
pop
aas
and
das
mov
sbb
xor
sub
dec
test
adc
dec
and
shl
mov
jg
shr
lds
adc
insb
cld
sbb
mov
cmp
jne
adc
mov
popa
adc
repz
lock
stos
inc
add
add
xor
mov
inc
or
adcb
xchg
jnp
mov
mov
push
mov
push
mov
mov
jns
lds
js
pop
sbb
testb
daa
jne
rorb
mov
mov
adc
mov
add
jne
add
or
or
pop
mov
ds
add
rolb
enter
dec
adc
rclb
das
movsl
push
call
lods
push
or
int3
add
mov
or
shll
enter
inc
lret
pop
fisttpl
inc
out
adc
sub
pop
inc
bound
lcall
stc
cli
sti
cld
pushf
mov
dec
inc
bound
mov
and
xor
cmp
mov
je
pop
sub
clc
add
mov
rolb
rcrl
mov
aaa
sahf
int
mov
ljmp
mov
inc
push
or
rcll
jl
dec
imul
stos
fnsave
fcomp
pop
loopne
fldl
or
fldl
or
add
xor
xor
aad
repnz
push
repz
in
xchg
imul
cltd
jo
push
dec
sub
push
jns
data16
cmp
das
negb
cmp
sub
je
dec
je
add
test
lcall
or
sti
sub
sub
push
jmp
sbb
scas
popa
mov
inc
fldcw
sub
ret
jmp
rcrl
stc
inc
mov
lea
xchg
xor
repnz
add
xchg
adc
add
pushf
cld
rolb
in
hlt
lock
adc
pop
mov
xchg
pop
push
call
push
add
lock
mov
aaa
jne
das
and
inc
neg
pop
xor
arpl
out
sahf
xchg
popf
cmpsb
scas
cmp
and
rcr
divl
add
andl
adc
sahf
fnstcw
ret
in
xor
or
mov
push
pusha
lret
sub
jg
push
or
jne
xchg
adc
jle
push
jle
addr16
pop
push
inc
or
jmp
push
push
xchg
jmp
sub
faddl
pop
xchg
sub
and
or
aas
test
sub
clc
push
fmull
cmp
shlb
inc
jp
cmp
call
jne
push
push
adcl
sbb
inc
mov
test
mov
inc
daa
bound
push
les
movzbl
push
aaa
nop
adc
or
data16
gs
fwait
adc
iret
xor
fwait
test
push
xor
pop
sbb
lea
add
mov
mov
cs
lret
lock
call
sbb
das
cmp
std
lods
std
nop
cmc
testb
jecxz
arpl
mov
jmp
clc
cmpl
sar
or
add
xchg
ficompl
jg
xchg
dec
sbb
lret
clc
push
adc
pop
sar
lea
movsb
lcall
repnz
cmp
sub
mov
mov
movsl
or
mov
rolb
rol
push
push
inc
push
int
mov
or
ret
ja
adc
in
fcomps
loope
ror
lods
or
adc
mov
int3
shl
mov
jo
enter
cmpsl
mov
pop
cs
int3
pop
or
add
subl
xor
xor
mov
dec
lock
cmp
hlt
ss
or
adc
pop
in
ss
cmp
lods
es
mov
call
mov
push
or
inc
pop
pop
cmpsb
pop
or
sar
mov
dec
cmp
inc
sub
lret
mov
pop
pop
aad
pop
and
jmp
jne
jnp
ret
pop
pusha
xor
pop
inc
jne
cmp
inc
fcomps
in
movsl
or
insl
xchg
stos
adc
imul
sub
jne
xchg
push
lcall
loopne
test
lods
push
ret
fwait
test
test
pop
adc
rorl
xrelease
cmpsb
shlb
inc
jns
jno
push
outsb
call
in
repnz
ja
pop
lcall
sbb
adc
sti
push
inc
cmp
mov
popf
lea
pop
cmpsl
cmp
std
mov
mov
mov
inc
jne
add
in
inc
dec
mov
cmpsb
pop
es
xchg
xor
push
adc
cmp
sub
mov
and
mov
mov
cwtl
lret
sbb
neg
push
ja
sbb
jns
daa
mov
push
sbb
sahf
add
mov
mov
or
cmp
cmp
xchg
pop
imul
mov
loopne
and
jno
or
push
mov
fcompl
je
neg
pop
lock
add
fcomi
and
test
in
sub
and
push
jecxz
xor
sbb
mov
mov
nop
pop
xchg
std
aaa
addr16
out
fisubl
adc
mov
and
shll
hlt
pop
jmp
je
pusha
add
cli
mov
inc
popa
cli
mov
stc
lods
testl
call
bnd
call
jns
mov
mov
mov
call
fdivrs
mulb
stos
cmpsb
fldlg2
mov
inc
mov
jnp
lret
inc
lea
pop
int3
cli
mov
in
mov
push
cs
imul
mov
pop
call
lret
cmp
pop
pop
pop
mov
push
push
mov
call
std
mov
jb
enter
mov
lods
out
imul
test
xor
stos
shrb
psrlq
dec
xor
roll
dec
in
sub
inc
adc
ss
mov
in
enter
cmp
and
sahf
inc
mov
cmp
std
call
xchg
mov
xor
cmc
imul
mov
std
mov
std
std
inc
repz
mov
mov
popa
mov
push
fdivrp
or
sbb
mov
dec
cs
stos
mov
lcall
sub
pop
repnz
jmp
dec
jp
out
push
xchg
add
sub
pop
lock
xor
push
pop
or
jmp
int3
sbb
data16
sub
or
adc
and
outsl
negl
int3
cmp
add
cli
or
cmpsl
cld
lods
int
addr16
test
and
imul
lods
in
xchg
and
adcl
dec
cmpl
pop
push
int
je
les
insl
add
dec
mov
movsb
adc
inc
add
js
inc
push
inc
sub
sub
sub
inc
cwtl
cmovge
or
mov
jne
fdivr
cwtl
adc
das
push
dec
pop
jno
and
xchg
and
and
nop
xchg
and
std
std
loopne
loopne
loope
xchg
mov
sub
mov
out
mov
movsb
and
nop
adc
inc
add
out
cli
loop
scas
stc
inc
cwtl
outsb
ss
lahf
rorb
xor
mov
mov
daa
fs
shr
jne
outsl
adcl
aas
xor
jnp
in
pop
pop
leave
dec
es
cmp
or
test
mov
popf
adc
cmp
xchg
add
mov
push
arpl
mov
lret
push
or
and
fimull
repnz
jo
adc
add
add
pop
sub
xor
rep
xchg
xor
mov
mov
jb
lock
mov
pop
xchg
jo
add
popa
xchg
push
lock
repz
mov
arpl
mov
and
test
out
test
pushf
mov
nop
out
scas
movsl
call
dec
es
push
xchg
sbb
cmc
pushf
mov
inc
pop
enter
xor
adc
and
iret
mov
push
pushf
mov
mov
and
and
int3
les
imulb
or
push
nop
test
mov
mov
dec
in
ja
subl
sub
sti
pushf
sbb
pop
dec
inc
cwtl
lea
xchg
lods
test
sbb
aad
lcall
sub
imul
outsl
or
pop
movsl
jb
sbb
fwait
es
iret
enter
mov
insl
and
into
inc
sub
inc
leave
push
sbb
pushf
xchg
cmpsl
add
mov
mov
test
cltd
repz
js
adc
inc
mov
jb
stc
pushf
pop
repz
xchg
mov
or
outsl
xor
scas
clc
mov
dec
or
mov
stc
xchg
push
mov
inc
scas
pop
ds
mov
dec
mov
imul
mov
mov
add
sbb
cltd
fs
movsb
bound
je
push
push
aas
dec
add
adc
adc
test
and
repnz
enter
jb
leave
push
pushf
pushf
nop
xor
pushf
xchg
pushf
push
and
add
popa
push
addr16
push
and
je
stc
fmull
clc
dec
xchg
out
add
rcrl
movsl
inc
mov
cmp
popf
jmp
movsb
xor
hlt
dec
adc
loopne
xor
inc
ret
or
orl
push
mov
pop
dec
daa
push
pop
mov
les
outsb
jne
add
ja
and
or
mov
sbb
mov
nop
icebp
in
test
stos
mov
mov
adc
add
jne
push
add
fiadds
dec
or
aaa
leave
xor
and
adc
xor
test
subb
into
inc
jmp
jl
dec
dec
mov
loope
lds
or
mov
stos
and
jle
jge
jno
test
je
mov
xor
bound
ret
dec
add
sbb
or
adc
cld
int3
xchg
and
jle
popa
add
xorb
sub
sti
jne
mov
push
mov
shll
fucomip
stos
bound
inc
js
mov
and
loope
sbb
or
les
cld
lods
pop
fwait
les
and
lret
pop
dec
sub
mov
add
pushf
cmp
es
inc
push
es
icebp
dec
gs
xor
xchg
cmp
mov
jmp
and
dec
and
mov
or
inc
push
xor
es
xor
fisttps
std
push
mov
cmpl
add
je
hlt
daa
clc
inc
push
inc
and
pushl
testl
cmpsb
jmp
ss
sbbl
pop
inc
mov
inc
jp
pop
movsl
add
cs
cmp
movsl
test
inc
mov
cmpl
lds
pmuludq
test
jge
jmp
loope
ljmp
add
ss
jmp
lret
inc
stc
mov
dec
or
mov
mov
rolb
and
push
mov
int
in
push
and
push
jmp
push
lea
mov
mov
sub
outsb
mov
repz
xor
ficoms
cwtl
mov
inc
pop
ss
call
test
adc
sbb
or
stos
add
push
mov
xor
call
imul
push
rcll
sub
outsl
sbb
sarl
js
imul
sub
fstl
cs
sbb
int
addl
sbb
enter
es
or
sti
movsl
out
imul
enter
push
ja
cltd
test
push
fsubrl
es
pop
popa
sub
daa
sub
shl
cmp
repnz
lea
and
xchg
pop
pusha
xor
sbb
mov
bound
or
jae
ret
dec
pop
stos
xchg
lret
cmpsl
jb
out
test
lea
jno
mov
cmp
jb
imul
les
and
adc
add
cmpl
pop
out
xor
or
dec
cmp
push
pop
jnp
pusha
or
shlb
or
and
jno
push
cli
sbb
xchg
or
popf
sarb
or
sti
jb
inc
out
and
adc
int3
insb
andb
inc
leave
test
xchg
movl
push
dec
xchg
cs
or
ljmp
inc
adc
sbb
insb
dec
mov
dec
add
adc
jge
mov
add
divb
mov
push
pop
mov
push
test
imul
mov
dec
mov
jbe
and
imul
ret
and
or
sarl
ljmp
xchg
cltd
cmpsb
je
sti
add
mov
js
add
dec
pusha
pop
orb
movsb
adc
lods
xchg
hlt
add
mov
out
pop
cmp
xlat
jge
imul
test
jle
andl
cmp
pop
and
sarl
call
cmp
mov
mov
sbbl
pop
sub
cmp
or
gs
xchg
test
cmp
inc
scas
push
cmp
xchg
ror
push
sahf
pop
mov
imul
lock
leave
push
sbb
or
les
int3
jae
les
adc
push
push
negl
js
mov
push
add
pop
or
xor
imul
pusha
ret
push
in
hlt
add
push
aaa
add
pop
or
inc
xchg
out
inc
sub
inc
add
cwtl
push
inc
dec
es
sub
sbbb
sti
or
add
iret
sti
sbb
je
push
or
push
push
es
add
test
mov
pusha
test
ja
mov
loopne
sbb
jmp
xchg
and
or
sarb
sub
sbb
jmp
fstl
xchg
push
push
mov
mov
push
or
push
sarb
sbb
fcompl
mov
inc
inc
or
fdivrs
push
pop
sub
push
in
or
lds
dec
add
shrl
dec
push
int3
je
js
dec
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
fstpl
jge
mov
mov
mov
or
adc
pushf
dec
push
mov
mov
jnp
dec
mov
sbb
push
push
adc
sbb
insb
xchg
das
adc
xchg
add
inc
and
xor
push
adc
cmp
pop
add
sbb
mov
sub
adc
inc
xor
add
adc
xor
pop
addl
les
je
sbbb
jo
ret
cmp
popa
ja
fs
push
sbb
addb
js
scas
es
ret
je
adc
loop
pop
iret
fldpi
or
and
shl
push
adc
loop
outsb
xor
lret
incb
icebp
inc
loop
xor
test
xor
aas
inc
insb
and
and
inc
sub
sub
out
adc
inc
pop
jne
cmp
js
insb
inc
shlb
adc
clc
bound
daa
out
cmp
pop
jb
adc
xchg
mov
outsb
or
cld
iret
mov
inc
sbb
ret
mov
cwtl
out
rorb
inc
int3
mov
aad
xchg
pop
pop
cmpb
aas
movsb
stos
jne
cmpl
jb
jge
adc
and
and
mov
mov
cmp
cmp
or
and
iret
and
addr16
pusha
cmp
dec
inc
arpl
push
mov
inc
inc
and
sar
xor
ja
add
sub
lcall
mov
push
mov
popf
mov
inc
lods
fildl
mov
pop
test
imul
loope
cmp
test
mov
push
push
add
pop
or
clc
mov
mov
outsb
dec
adcl
popa
mov
and
je
mov
pop
push
xor
adc
xorl
sti
dec
pusha
add
mov
sarl
daa
or
mov
mov
dec
add
shl
stc
push
lods
lods
and
mov
adc
add
int
mov
add
adc
fsubrs
adc
mov
inc
and
xchg
add
push
rorb
mov
push
stos
inc
mov
adc
or
inc
mov
sub
xor
jne
test
scas
inc
push
or
xchg
add
lret
mov
inc
sub
inc
mov
dec
jmp
xor
into
inc
adc
incl
xchg
or
enter
pop
je
pop
es
testl
sub
outsl
and
inc
mov
mov
mov
jmp
orb
pop
cld
pop
sbb
xchg
xchg
inc
call
add
je
repnz
loop
and
andl
fnsave
dec
into
inc
add
xor
inc
into
mov
popa
pop
add
or
add
pop
mov
enter
ja
cmp
in
cmp
imul
and
inc
mov
inc
mov
aaa
jmp
fs
sub
mov
outsl
test
xchg
add
ds
sbb
inc
jmp
mov
jae
sbb
inc
bound
lret
cli
rdtsc
mov
adc
push
daa
lock
sbb
negb
jge
push
push
orl
dec
and
or
adc
jo
jle
es
sbbb
push
jl
sbb
adc
inc
inc
dec
add
sub
and
sub
jne
scas
sbb
sahf
cmp
dec
inc
inc
or
jne
repnz
push
add
push
sar
add
js
add
xor
je
mov
dec
or
cli
aad
push
clc
adc
insb
aam
dec
cmp
inc
inc
lahf
dec
fsubl
jmp
mov
andb
sub
jb
iret
xor
cmp
pop
sti
or
cmp
in
int
repz
pop
push
ret
inc
rolb
scas
dec
fwait
xchg
pusha
fisttpl
xor
jns
push
dec
mov
pushf
xchg
push
or
push
pop
push
dec
push
sbb
jl
mov
pop
lock
add
insl
mov
or
or
push
and
push
cmp
inc
mov
pop
mov
js
into
mov
sbbb
push
add
cmp
scas
or
mov
mov
pop
pop
cmp
jb
and
aas
xor
sbb
and
repnz
dec
andb
add
shll
fistl
xor
sar
sarb
jg
cmpsl
mov
adc
mov
test
fsubrl
add
jno
adc
mov
or
xor
push
aas
pusha
cmp
sar
and
shl
cli
fs
loopne
xor
and
lods
aad
inc
add
and
mov
leave
inc
and
sti
lcall
test
adc
fs
xorl
stc
in
or
andb
fwait
rcll
negb
jle
test
ret
jne
cmc
push
add
xor
jne
cmp
rolb
in
push
aaa
xor
ds
mov
popa
push
add
ss
add
or
je
and
movl
jl
mov
loope
pop
pop
or
xor
sbb
and
inc
or
xor
out
mov
mov
mov
inc
jmp
push
xlat
adc
push
xor
cs
lock
rcrb
dec
lock
mov
data16
sahf
mov
jbe
pop
fadds
adc
lock
not
sub
rol
add
test
add
enter
push
cld
enter
add
adc
jb
rcrl
inc
push
es
ret
sub
inc
fdivrs
inc
push
aam
or
jmp
push
movsl
sti
mov
jg
jg
adc
and
push
push
sub
lea
xchg
test
xchg
push
lods
adc
cltd
or
push
sbb
sub
add
add
jo
push
cmp
xor
cmc
roll
lret
sub
insb
or
push
jo
sub
add
sarb
test
cmpsb
jge
hlt
rep
ss
neg
cmpsb
jmp
sbb
lock
xchg
lock
push
dec
aaa
andb
pop
sub
sbb
test
and
and
cmpsl
dec
inc
inc
adc
rcrl
xchg
add
adc
lods
fidivs
dec
data16
popa
push
mov
in
and
test
ret
cmp
cltd
jecxz
push
dec
test
pop
incl
stc
add
jmp
cld
das
dec
testb
add
nop
ljmp
push
mov
mov
lods
sbbl
fsubrp
das
outsb
movl
jns
lret
jae
push
jo
adc
push
mov
sti
sbb
adc
ds
adc
sub
ds
sub
in
or
sub
mov
push
or
fnclex
gs
add
or
out
add
or
adc
sub
outsl
push
push
dec
adc
dec
in
iret
push
and
jne
push
clc
jl
lahf
pop
outsl
inc
or
jbe
jle
dec
movsl
push
stc
pushf
outsl
ja
mov
out
jo
test
rolb
loopne
or
xor
mov
enter
or
mov
mov
ds
test
out
in
and
call
or
sub
std
mov
dec
sub
dec
pop
and
mov
shrl
shrl
sbb
sub
lock
in
xchg
and
rep
add
ret
shlb
arpl
inc
adc
push
jno
mov
and
or
add
push
push
ret
out
sbb
mov
hlt
push
aam
dec
pop
add
mov
hlt
push
lea
inc
pop
or
adc
sub
test
xor
xor
clc
lock
cs
mov
cmp
cmp
sbb
pop
shlb
and
and
testb
out
sub
clc
push
add
cmpsb
imul
push
pop
imull
cmp
les
cmp
push
ret
add
fdivl
add
imul
into
es
lcall
inc
push
iret
decl
mov
roll
push
and
rorl
les
xor
mov
push
fidivrl
add
push
xor
push
push
stos
jg
inc
jp
and
pop
mov
in
add
cmp
xor
loopne
aas
add
jmp
test
or
inc
mov
dec
mov
inc
xorl
or
orb
imul
fadds
sbb
adc
add
sub
int
sbb
sub
inc
xor
dec
es
push
xchg
push
roll
inc
inc
push
jg
sti
dec
xchg
ss
jne
out
pop
aas
jmp
adc
outsl
jo
sub
adc
inc
add
and
sbb
dec
movsl
jge
aad
scas
push
fmull
popf
dec
popf
mov
mov
aad
inc
test
aaa
int
mov
xor
jecxz
loope
cli
cmpsl
lock
adc
sub
cli
popa
pop
imul
pop
and
sub
pop
xchg
sbb
jl
cmp
jg
inc
jmp
fistl
or
pop
sub
jne
test
mov
imul
je
dec
shrb
aas
sbb
dec
enter
or
in
rcr
fcoms
pop
out
ss
sub
jle
inc
push
dec
movsl
cmp
mov
adc
je
pop
aam
sbb
push
es
xor
fwait
cmp
and
shr
mov
dec
mov
mov
lcall
add
sbb
mov
or
push
inc
mov
pop
push
inc
xchg
mov
dec
or
add
iret
rclb
cld
inc
sbb
rol
jns
sarb
roll
push
inc
sub
push
adc
xchg
out
dec
subps
dec
ljmp
xor
and
push
add
pop
or
dec
shlb
xchg
aad
jbe
or
test
or
outsb
cld
mov
andl
mov
push
sub
cwtl
das
andl
sbb
and
sbb
pop
inc
push
ret
adc
xor
lahf
out
jp
add
jg
insb
jae
push
adc
mov
insl
dec
loope
imul
frstor
add
pop
pop
sub
cld
add
mov
or
mov
pop
adc
lret
ds
sbb
pushl
enter
gs
rcrb
or
cli
add
loopne
or
mov
mov
xchg
pop
push
add
push
in
ret
mov
cmp
loopne
stc
xor
pop
dec
adc
and
and
pop
inc
sbb
rolb
push
movsb
mov
sub
jmp
dec
xchg
lock
pop
je
or
cmpsb
aas
and
rcl
mov
jg
push
cs
mov
cmp
loope
xor
lret
in
jle
ret
dec
iret
add
sbb
test
or
xor
or
add
add
jp
dec
push
dec
or
jg
add
jle
cmp
jb
das
inc
sbb
pushf
pop
fisubl
ljmp
les
xchg
sub
add
bound
rorl
adc
mov
test
jg
adc
repnz
xor
jl
mov
sub
xor
movsb
jl
leave
xchg
mov
fstl
mov
jno
cmpsb
call
bound
push
mov
cli
fmuls
lahf
xchg
jl
aas
jb
int3
add
adc
sub
mov
jp
lcall
mov
mov
aaa
mov
loope
fdivs
and
push
clc
or
mov
xor
pop
or
mov
loope
bound
out
push
fcomp
pop
cmp
adc
cmpsb
pop
adc
in
insb
std
cmp
jae
dec
je
in
mov
add
inc
js
cmp
das
or
rcrb
pusha
and
jge
push
xchg
mov
jbe
adc
or
addr16
inc
popf
ret
pop
lret
enter
add
in
xor
pop
mov
shrl
sbb
rolb
jle
pop
inc
outsb
cmp
inc
push
pop
cmp
sub
cmpsb
movsb
push
mov
sbb
lods
cltd
cmovg
mov
sub
push
pop
enter
lret
call
stc
sub
ret
or
popl
and
mov
sarb
or
add
sbb
inc
cld
test
ja
cwtl
jns
clc
mov
push
movsb
scas
and
insl
sub
mov
sti
and
adc
gs
inc
push
pop
je
xor
aam
push
mov
outsl
and
jg
add
sub
jl
cwtl
jmp
push
push
jmp
cmp
or
je
xchg
cs
push
mov
sbb
enter
jmp
outsl
sub
cld
mov
iret
sub
pop
add
sbb
pop
inc
rorb
movsl
inc
or
push
leave
jb
nop
or
sub
and
mov
and
sbb
and
or
adc
inc
pushf
cmp
pop
nop
mov
inc
sahf
add
inc
rclb
push
add
testb
jmp
xor
inc
xor
movsl
sub
aam
xorl
and
or
sub
jne
push
or
dec
ret
xchg
repnz
leave
push
icebp
cmpsb
outsl
adc
sbbl
dec
or
or
repz
xor
test
jns
jge
xlat
cmp
fbstp
out
jb
aas
sbb
dec
pop
je
pop
cmc
and
fs
test
or
push
and
rclb
push
add
rorb
jb
xor
jg
cmp
jae
mov
inc
clc
push
cmp
jl
mov
inc
pop
les
cld
pushf
dec
adc
bound
jbe
or
dec
negl
inc
jne
clc
push
filds
call
ret
cmp
cmp
ljmp
or
movsb
jge
popa
or
inc
add
add
stos
repnz
dec
or
enter
mov
mov
icebp
cmp
scas
mov
sub
mov
sbb
or
add
or
xchg
mov
loopne
mov
mov
dec
push
shll
insl
sbb
pop
xlat
sti
mov
jne
jmp
frstpm(287
or
jo
jae
push
arpl
ljmp
rolb
mov
pop
mov
rol
scas
pop
jle
xchg
out
push
dec
xor
inc
push
inc
pop
cs
sub
inc
nop
lcall
insl
cld
pop
push
xchg
inc
mov
jb
pop
ds
mov
and
push
enter
jbe
ds
mov
mov
push
lock
xchg
addb
and
jg
jo
jl
test
jle
xchg
add
aam
push
adc
lods
call
jbe
add
push
clc
or
sbb
decl
mov
stos
cmpsb
adc
dec
jg
adc
orl
call
lret
pop
hlt
mov
xchg
add
loopne
ja,pn
add
test
push
cmp
test
lea
leave
or
sub
jb
mov
pop
std
jb
pop
push
mov
lds
test
pop
dec
js
out
cmp
jmp
sbb
notl
repnz
and
push
push
scas
shll
dec
or
lock
cmp
lea
out
jbe
push
sbb
adc
stos
push
mov
ljmp
dec
test
and
mov
mov
into
dec
and
inc
addr16
xlat
je
cmp
icebp
call
mov
and
cmp
jb
testb
insl
adc
testb
inc
dec
xor
test
add
das
cmp
add
inc
xabort
inc
jnp
cwtl
and
clc
out
mov
jns
jb
cmp
jbe
mov
roll
push
or
les
mov
pop
push
in
shll
shr
jmp
das
sti
xchg
mov
and
ret
int3
cmp
mov
or
icebp
push
push
mov
push
bound
insl
ja
xor
push
faddl
bound
cmp
push
loope
rcll
inc
pop
pop
inc
push
and
lahf
inc
outsb
bound
or
daa
or
dec
push
or
test
push
lock
fidivrs
js
enter
shr
inc
push
pop
push
push
mov
jg
inc
shr
rcr
shr
rcr
or
div
pop
jg
int
dec
adc
inc
mul
pop
jb
cmp
or
adc
mov
or
xor
and
inc
xchg
icebp
repz
or
fcmove
ficompl
enter
fxch
addr16
and
es
fcmovb
adc
lret
or
popa
orl
subb
jno
inc
in
jne
mov
lret
add
fcoms
hlt
les
or
je
out
loop
ss
pop
adc
inc
pop
dec
shlb
imul
push
dec
and
mov
mov
inc
shl
sarb
jne
lea
call
push
add
in
adc
test
mov
xor
cmp
sub
test
pusha
loop
inc
ret
fstps
aas
mov
incb
jns
adc
adc
and
sbb
and
push
jo
add
adc
adc
call
arpl
dec
adc
fs
movsb
mov
jl
leave
add
push
fistps
test
sbb
subb
mov
mov
push
jl
push
xorl
xchg
push
mov
push
push
mov
nop
jg
cmpsl
and
stc
ret
xor
jecxz
xor
clc
mov
negb
je
xchg
cli
adc
add
outsb
jg
lea
lea
or
dec
and
sar
in
jbe
insb
inc
in
push
sbb
add
mov
popl
lods
mov
push
pushf
pop
push
pop
mov
adc
and
pop
mov
push
js
sbb
adc
sub
outsb
or
adc
popa
jecxz
mov
ja
cmp
and
pusha
add
mov
xor
cmp
pop
loop
mov
clc
sbb
xchg
adc
cld
sbb
push
inc
cmp
xor
std
inc
or
out
adc
dec
faddl
pop
pop
lret
cmp
lret
pusha
movsb
pusha
inc
and
inc
cwtl
inc
inc
pusha
cld
inc
push
sbb
sbb
in
sub
or
in
in
adc
ss
and
and
sub
xchg
xchg
xchg
xor
cmp
push
inc
and
daa
daa
daa
mov
cmovs
leave
leave
add
pusha
leave
leave
leave
leave
fs
leave
leave
je
jl
movsb
cmp
test
mov
cltd
cwtl
pushf
mov
movsb
test
sub
xchg
cmpsb
fmuls
add
cmp
and
pop
mov
xor
jle
dec
dec
imul
call
or
adc
sbb
movsb
pusha
inc
sbb
clc
and
fwait
or
and
std
or
enter
pop
xchg
repnz
adc
add
scas
jg
ret
test
cltd
dec
cmp
sarb
pop
or
jne
out
lcall
lret
inc
sbb
lea
aad
push
fs
sub
sbb
add
adc
cmp
mov
xchg
loopne
add
dec
xchg
mov
push
add
pop
or
lea
insb
xor
or
aam
inc
mov
xor
push
stc
push
cmpsl
js
xor
mov
add
push
xor
inc
movsb
push
shlb
add
xor
fdivs
fmull
mov
cmp
ss
and
je
sub
or
fmul
push
mov
ret
rcrl
push
xchg
cmp
sti
push
cli
cmp
fmuls
mov
int
in
and
pop
int3
or
insb
ficompl
add
inc
ret
cmp
int
shll
sbb
mov
pop
je
xor
test
push
dec
and
xlat
test
mov
or
pop
add
imul
les
inc
sbb
adc
fadds
ret
cmp
adc
add
add
sarb
aam
bound
outsl
add
inc
pop
or
mov
imul
arpl
adc
jg
or
int3
out
jl
adc
mov
xchg
shr
dec
dec
outsl
rol
dec
mov
mov
mov
loopne
rcrl
cmp
lock
add
and
jo
cs
push
mov
call
les
cmc
movsl
adc
pop
rol
mov
adc
cmp
fistpl
cmp
or
pushl
push
mov
push
add
pop
mov
jmp
ret
jp
jl
sbb
add
or
pop
mov
pop
outsb
mov
loope
adcl
out
pop
push
pusha
outsl
or
mulb
push
xor
and
jg
push
xchg
dec
or
pop
sbb
popa
lret
mov
aas
mov
ret
mov
adcb
leave
in
out
test
lock
push
cmp
xor
dec
inc
pop
fldt
in
push
add
rolb
cs
push
lea
addl
and
aas
in
fcmovnbe
sti
mov
or
ret
pusha
and
pusha
ret
andb
jne
rorb
pop
sbb
and
push
mov
fsts
add
push
xchg
jmp
inc
insb
inc
dec
ljmp
add
pop
mov
stc
mov
cmp
pusha
dec
mov
and
inc
popf
sbb
loope
pop
addl
mov
jp
inc
mov
lock
addr16
or
out
in
cmp
in
lods
mov
or
jg
fstl
push
hlt
mov
lods
and
pop
add
stos
jmp
out
outsb
cmc
dec
addb
cmp
add
fimull
sbb
cmp
fsubs
ret
cs
loope
jo
lret
iret
inc
decl
jmp
push
dec
inc
pushf
rorb
lea
push
inc
add
inc
pop
pusha
xor
lods
jnp
imul
sbb
test
add
jl
dec
cld
push
lock
sub
sarl
cmp
add
jp
test
cmpl
mull
fiaddl
test
rolb
jno
add
cmp
mov
sbb
scas
dec
or
sub
mov
sahf
cmp
insb
xor
xor
cmp
mov
rcrb
add
jno
out
inc
int
push
jmp
sub
roll
repnz
test
iret
test
add
sub
clc
pop
cmp
xor
pusha
sbb
and
xchg
fisttps
cmp
jnp
lods
ret
rclb
mov
sbb
lea
xadd
xchg
subb
movsl
and
or
sbb
lret
jl
iret
dec
and
jmp
xchg
mov
dec
ljmp
sub
mov
cmp
mov
adc
cmpsl
clc
adc
or
inc
mov
adc
cmpl
fmuls
push
pop
push
icebp
xchg
and
inc
pop
xchg
add
je
add
fidivrs
daa
jmp
insb
push
jp
dec
pushl
orl
pop
in
movsl
sbbb
add
push
cmp
inc
cmp
pop
push
cwtl
inc
lods
push
orl
pop
mov
sbb
or
cmpsl
sarb
xchg
push
bound
pop
add
nop
or
mov
mov
xchg
dec
dec
stc
pop
mov
adc
cmp
add
addr16
js
push
xchg
sub
add
and
addb
test
mov
mov
lock
enter
scas
iret
lret
inc
mov
std
xchg
mov
dec
jge
dec
lahf
fisttpll
jb
rolb
add
push
jo
lret
jmp
or
ret
stos
adc
mov
jmp
lea
jbe
xorb
cltd
and
inc
ja
mov
cmp
ljmp
hlt
cmp
adc
push
ss
xor
jnp
or
clc
cmp
mov
inc
xor
inc
cmpb
sbb
mov
or
pop
or
pop
lahf
test
push
push
xor
and
loope
sbb
leave
mov
cmp
je
aaa
push
cmp
pop
pop
xor
cmpsb
ret
imul
in
faddp
jmp
sbb
incl
add
push
mov
push
pop
movsl
mov
ljmp
and
les
xor
add
andl
nop
adc
pop
jmp
cmovno
or
loopne
and
sbb
xor
pusha
pop
and
in
push
adc
sub
and
lods
and
xor
adc
jmp
pop
jno
and
xor
int3
fstpl
xor
push
and
mov
inc
dec
sbb
mov
scas
bound
lea
shll
stc
mov
push
ss
pop
inc
xor
mov
adc
out
pushf
cli
sbb
insb
mov
dec
iret
imul
fldl
mov
jl
js
std
into
and
pop
xor
rcl
stos
cmpb
out
cmp
xlat
jne
sub
out
or
incb
lock
push
cmpb
adc
jnp
add
jge
mov
pop
mov
inc
pop
testb
and
arpl
mov
cmp
lods
jbe
add
arpl
ja
sbb
adc
jge
les
mov
addr16
pop
dec
push
mov
xchg
addb
adc
and
rcl
loopne
jne
add
mov
nop
jge
and
adcb
push
movb
jecxz
lods
pop
int3
pop
pop
push
dec
call
mov
and
cmp
call
fwait
xchg
add
clc
je
xor
add
movsb
imul
cli
fildl
dec
lock
jecxz
xor
js
scas
dec
cmp
test
mov
inc
mov
add
jmp
and
push
enter
jl
inc
jbe
iret
mov
js
pop
sbb
push
add
into
xchg
mov
and
dec
movsl
jmp
enter
inc
ds
cmp
xchg
adc
xchg
add
and
jno
ret
mov
fwait
lcall
idivl
dec
sti
inc
jmp
and
push
jecxz
ljmp
loop
cwtl
and
sbb
rol
loopne
ret
xor
cld
xlat
adc
pop
cmc
cmp
and
pop
add
sbbb
push
gs
nop
or
add
imul
jno
xorb
cmp
ss
xchg
fistl
jp
add
mov
xor
sbb
jo
popa
cmp
dec
dec
pop
cwtl
mov
repnz
sub
xor
push
scas
imul
mov
subb
lea
jb
data16
insb
dec
push
xor
dec
cs
pop
mov
xlat
shll
mov
loope
nop
or
sbb
mov
and
sbb
inc
shl
pop
shrb
lea
cmp
add
outsb
pushf
mov
jl
fadds
lea
imulb
ljmp
dec
jbe
jbe
mov
int
xor
sub
nop
mov
daa
add
aas
repnz
or
dec
inc
das
adc
inc
jb
and
rorl
mov
clc
into
jl
or
or
and
data16
or
mov
test
mov
mov
or
jae
add
mov
inc
and
jne
or
and
dec
inc
data16
mov
jmp
shlb
mov
push
jbe
adc
push
sub
add
xor
xor
clc
negb
dec
or
ror
mov
push
mov
in
std
jmp
fwait
movsb
add
sub
adc
sub
sbb
pop
lods
aad
add
movsl
aam
inc
push
mov
pop
cld
pushf
pop
mov
xor
pop
sub
je
push
popf
ds
push
or
fdivrs
pop
call
xor
and
data16
pop
negl
pop
lods
incl
push
ds
and
adc
inc
inc
dec
adc
mov
dec
mov
jns
push
or
or
shll
sub
or
inc
ret
xchg
pusha
insb
push
cs
repz
xchg
test
and
sahf
popa
xchg
xchg
add
or
adcl
in
in
divb
shl
not
xor
loope
xor
and
pop
mov
add
cltd
in
shr
and
and
add
mov
adc
mov
test
adc
cmpsb
pop
jns
test
add
test
adc
mov
push
lret
sbb
or
mov
sub
inc
jmp
mov
incb
jmp
sbb
std
or
jmp
inc
and
mov
and
mov
jecxz
jge
xchg
aaa
add
or
mov
and
push
fdivl
or
mov
sbb
pusha
and
mov
flds
and
pop
adc
pusha
mov
pusha
in
mov
pop
sub
dec
and
cmpsb
adc
jecxz
pop
fstp
cmpsb
cmp
ds
pusha
js
cmpsl
push
insl
and
push
addr16
jns
pop
movsl
sub
mov
adc
sti
out
lret
add
add
test
and
mov
dec
adc
dec
jge
mov
push
shl
ja
or
sub
push
lcall
or
in
push
jmp
out
and
subb
xchg
std
pop
xorb
sbb
outsb
divb
ret
or
push
push
xor
inc
push
fstps
pop
mov
add
or
pop
push
push
test
xor
shrb
lods
icebp
mov
dec
cld
push
push
cmp
lock
insl
pusha
pop
pop
pop
sub
fsubrp
jns
nop
es
pop
xchg
mov
add
lret
or
or
pop
aas
and
ret
xchg
push
aaa
sbb
out
cwtl
push
jbe
rcr
sbb
mov
add
les
sub
sub
leave
sbbl
fwait
rcrb
nop
psubusw
inc
test
int3
adc
div
add
mov
sbb
pop
dec
jnp
into
adc
pop
test
fwait
jmp
pop
fstpl
mov
rorb
mov
into
pop
aas
rclb
jge
ffree
repz
outsl
ss
mov
inc
loopne
jne
aaa
mov
dec
dec
lret
div
xchg
mov
adc
xchg
sahf
adc
test
mov
jae
enter
in
sbb
jp
push
in
mov
cmp
faddl
mov
push
push
adc
ret
jmp
pop
movsb
sbbb
xor
in
aam
mov
mov
jno
push
and
rorb
jne
pop
sub
in
pop
cltd
cwtl
mov
push
add
outsb
mov
xchg
sbb
mov
test
push
adc
jecxz
jmp
or
mov
ret
faddl
add
push
pop
or
ss
add
xor
stos
ljmp
adc
je
movsb
adc
and
jl
xchg
or
adc
scas
sbb
dec
pop
add
hlt
adc
or
or
sub
sub
hlt
push
and
sbb
bound
add
fwait
pop
in
sti
mov
push
add
lods
fsubrp
fwait
jno
jbe
das
gs
mov
test
cmp
es
xorl
sbb
jmp
insb
push
jmp
mov
cmp
incl
mov
fdivrl
fdivrl
adc
ds
in
pop
nop
cmp
and
or
xchg
mov
sub
adc
push
jl
adc
xchg
push
out
int3
popa
jmp
adc
fnstsw
inc
test
popf
adc
mov
stos
xorl
std
pop
test
mov
int3
pop
cld
mov
daa
aad
clc
out
sub
jmp
sbb
add
rcrl
loope
ret
sahf
push
pop
sbb
lock
pop
and
out
je
and
add
clc
sti
lock
addr16
sbb
adc
roll
mov
fadds
into
flds
dec
mov
addl
movsb
inc
leave
pop
cwtl
mov
mov
test
cvtpi2ps
or
mov
mov
icebp
sbb
shll
inc
push
arpl
inc
add
fidivs
push
out
mov
jb
jne
adc
inc
push
mov
xor
push
add
push
jl
sbb
sub
shr
mov
incl
sub
dec
and
push
or
sbb
xor
mov
imul
loop
inc
fldenv
lock
stos
and
fcomps
pusha
xor
or
loopne
sbbb
fldt
sbb
fcmovne
fwait
sahf
adc
xor
dec
fwait
sbb
loopne
xchg
and
jle
call
sub
xor
addr16
cwtl
pop
mov
add
mov
rolb
rolb
inc
xchg
scas
push
repnz
xchg
and
jnp
or
and
push
call
jp
add
repz
out
movsb
mov
icebp
mov
jbe
adc
adc
imul
sbb
orb
data16
mov
je
shlb
and
pusha
das
arpl
sub
pop
insl
push
mov
mov
mov
jnp
push
jnp
jl
rorb
jle
les
push
push
mov
adc
loopne
add
imul
adc
jb
insl
movb
pop
js
mov
push
inc
int
inc
pop
sarl
psubq
xchg
sarl
mov
loop
orb
dec
and
sub
or
add
jle
or
or
add
loope
daa
loop
mov
lods
inc
scas
cwtl
add
xor
inc
sub
pop
push
jle
mov
dec
cmpw
es
jle
inc
test
pop
les
xchg
ljmp
pop
aad
mov
xchg
adc
es
or
imul
push
or
cmpsb
add
jle
nop
test
sub
add
mov
push
push
mov
jg
test
add
scas
cwtl
pop
test
jne
ret
mov
hlt
mov
sub
stos
repnz
pop
pop
movl
movsl
add
jle
jo
pop
sub
loop
add
mov
sbb
jns
dec
xchg
loopne
test
and
mov
pop
lock
pop
ret
inc
shl
add
xchg
cmp
loop
rolb
adcl
jo
mov
dec
cltd
hlt
int
outsb
insb
pop
and
mov
out
mov
inc
insl
dec
adc
push
into
jbe
lea
pusha
mov
repnz
or
xor
cmp
sbb
jmp
cmp
enter
incb
insb
out
adc
mov
or
or
pop
test
mov
sub
xorb
jge
push
dec
test
sbb
mov
mov
cmp
dec
dec
outsb
adc
loope
inc
repz
lar
aam
xor
enter
cmp
mov
aas
gs
test
xor
or
inc
je
out
pop
lcall
and
push
cld
not
rcrb
push
call
into
and
push
ds
push
and
fadd
or
and
lock
adc
and
xor
and
pop
popa
addb
add
fsubrl
cmp
jl
mov
fs
push
lods
adc
aam
bnd
popa
sub
mov
inc
loopne
xor
dec
scas
sub
push
push
or
lcall
lea
mov
cli
seto
mov
mov
data16
or
mov
lcall
fwait
pop
xchg
xchg
xor
iret
dec
jns
inc
lock
inc
jo
mov
jecxz
sbb
loope
icebp
dec
or
jae
cmp
jecxz
cmp
imul
mov
adc
lea
rolb
pop
jl
pop
andl
xor
lock
mov
mov
dec
jp
mov
sub
mov
sbb
jge
dec
xorb
hlt
adcl
nop
rolb
lock
lock
and
or
mov
sub
je
in
loop
gs
jne
rcrb
pop
pop
cmpl
cli
mov
add
and
jb
add
stc
daa
mov
add
push
add
add
cli
mov
sbb
mov
add
or
or
andb
push
xchg
push
adc
add
add
sub
jl
test
add
loopne
divb
sahf
xor
push
adc
xor
cmp
test
dec
xor
shll
movlps
sbb
test
or
lods
mov
outsb
mov
or
xor
loop
jne
inc
jmp
mov
sub
or
xchg
add
pop
inc
aad
pop
mov
sub
loopne
cld
xor
push
dec
jmp
fs
jbe
and
mov
das
inc
outsl
into
add
call
lcall
push
stos
mov
into
jmp
pop
adc
xchg
sbb
pop
sar
mov
jmp
cmpsl
mov
mov
lods
mov
inc
mov
negb
cmp
jle
adc
push
jnp
ret
gs
clc
push
nop
sti
mov
fcoms
jbe
fdivl
repnz
jl
add
push
jmp
aad
and
mov
jae
sarl
ret
push
mov
mov
insb
inc
mov
pop
jge
jmp
xorl
mov
xchg
mov
movsb
jne
js
or
lahf
jae
imul
sbb
mov
mov
outsb
test
dec
jo
call
inc
sti
sbb
out
push
sub
jae
adc
gs
andl
rorb
pop
push
push
and
scas
mov
xor
shlb
inc
mov
stos
sub
mov
je
inc
scas
call
mov
aaa
push
push
push
jge
mov
mov
fldcw
decl
js
adc
add
inc
testl
xor
jmp
fdivp
pop
inc
inc
lods
xchg
mov
in
push
je
or
pop
cli
and
sub
inc
cli
rolb
or
jecxz
add
mov
jmp
push
cwtl
sbb
push
shlb
adc
lock
dec
dec
hlt
jmp
jne
xor
aaa
enter
rclb
jge
neg
add
inc
int
adc
sub
ds
xlat
test
cmp
ljmp
sbb
cmp
jbe
in
push
enter
mov
outsb
ja
xor
jne
aad
push
inc
in
dec
dec
loop
rolb
pop
adc
sub
and
subb
das
test
mov
dec
mov
cmp
jo
sub
dec
or
mov
sbb
dec
sbb
mov
xor
and
and
and
adc
xchg
mov
into
nop
fs
andl
sti
imul
mov
ja
cld
mov
or
scas
out
mov
pop
movb
testl
jne
enter
push
and
jne
test
into
pop
rclb
pop
cmp
shrb
push
hlt
int3
add
jne
push
mov
test
adc
or
inc
inc
dec
mov
add
add
inc
mov
adc
add
dec
inc
fdiv
sub
lahf
into
push
mov
dec
ja
lods
push
or
mov
mov
js
subl
lcall
inc
xor
stc
jg
add
shlb
pop
xchg
aaa
inc
add
sub
or
shll
bound
jmp
pop
push
rcll
jge
sbbb
jg
or
daa
and
pop
adc
inc
mov
les
test
jno
notb
je
call
fcom
insl
fadd
loopne
push
sti
pop
shr
or
mov
sahf
dec
and
aam
shrl
push
jl
es
mov
push
ja
aam
loope
or
mov
xor
xchg
inc
cmp
add
ficompl
popa
iret
rcr
sar
pop
xor
in
fiadds
push
call
aad
sbb
mov
mov
mov
and
xchg
mov
nop
pop
adc
out
orb
fisubrl
jmp
or
sub
and
sbb
jmp
scas
mov
jb
and
mov
movsb
int3
test
xor
xchg
test
int3
adc
xorb
lret
mov
sub
add
negb
loopne
sbb
movups
and
shlb
nop
push
or
call
xchg
mov
add
inc
out
lcall
dec
pop
iret
repz
or
shrb
loop
add
push
push
push
mov
jmp
inc
mov
in
lahf
lcall
xchg
cmp
std
or
scas
inc
mov
mov
dec
insb
or
cmp
add
mov
jbe
test
push
and
dec
pop
iret
fidivrl
sbb
xchg
adc
inc
cs
mov
shrb
ss
cmp
je
or
cmp
xor
mov
dec
cmpb
je
mov
cmp
pop
orb
jne
dec
mov
inc
inc
mov
out
add
add
out
call
sbb
add
push
pop
jae
sbb
subl
rol
mov
xor
add
xor
adc
sti
repz
xchg
in
xor
in
rcrb
adc
gs
or
add
cmp
ret
rorl
lar
test
in
or
sub
push
add
or
mov
rolb
fldt
or
add
or
adc
je
das
mov
adc
setg
lock
ret
in
clc
add
mov
and
xor
incl
test
sub
movb
cli
add
xor
jle
xchg
push
fimull
xorb
mov
es
jge
out
sbb
loop
lock
hlt
lcall
jmp
sub
add
lcall
test
fstpt
mov
push
lea
mov
adc
int
inc
mov
mov
jns
les
sub
jo
jl
negb
movsb
repnz
or
xchg
mov
add
and
add
cmp
aam
mov
test
lock
dec
or
dec
lods
scas
xor
xor
cld
inc
add
aam
or
and
inc
fistl
addr16
add
mov
fadd
jbe
dec
addl
xchg
clc
dec
adc
insb
xchg
mov
aam
sub
adc
and
lods
dec
dec
fidivrl
xor
mov
add
xchg
dec
add
popf
push
sbb
xchg
or
jle
jb
sub
mov
inc
aam
inc
lods
jbe
xchg
add
mov
jl
dec
xor
inc
es
mov
stos
push
adc
js
jno
imul
pop
xchg
pop
cs
push
fldl2t
call
mov
or
call
mov
or
fcoml
rclb
insb
roll
add
addl
push
and
clc
test
leave
jmp
push
or
add
dec
sar
lea
ret
popl
push
or
out
enter
cmp
or
or
cmp
or
add
push
xor
enter
gs
dec
loopne
js
push
dec
dec
jecxz
pop
push
dec
mov
jg
inc
xor
leave
and
add
cmpsb
movb
ror
xchg
aaa
and
popf
movsb
or
dec
fwait
pusha
fwait
inc
ljmp
loopne
std
das
jle
lock
ret
daa
xor
or
jne
pop
cmp
inc
inc
adc
sahf
add
mov
or
adc
int
xor
and
xchg
aam
add
add
hlt
and
or
sub
jg
ja
sub
add
mov
push
or
and
sub
movswl
les
jl
xchg
mov
cmp
add
mov
add
dec
or
inc
icebp
shrd
push
jle
std
mov
ss
jl
cmpsb
stos
imul
std
xlat
data16
stc
xchg
stc
inc
add
dec
jmp
mov
clc
sub
dec
and
or
outsb
adc
or
pop
push
shrb
add
and
aad
rclb
sbb
xor
jo
je
outsl
fiaddl
dec
and
sub
push
pop
sbb
js
jg
mov
mov
inc
jmp
cmp
call
shl
fidivrl
rorl
or
cli
xor
inc
shll
hlt
addb
xor
jbe
add
xchg
add
mov
dec
pop
pop
ja
push
jg
lods
jb
mov
jbe
fs
dec
inc
dec
pop
pop
xor
or
sbb
add
xor
adc
mov
cmpsb
stc
mov
daa
aam
and
es
sbb
js
int
scas
or
push
das
rcrl
jp
call
loop
call
loope
or
and
or
or
fiadds
add
andb
jmp
lock
inc
sub
dec
adc
or
test
es
jne
aaa
repz
jl
popaw
push
add
adc
scas
enter
stos
in
test
and
cltd
out
into
sbb
nop
push
mov
add
adc
out
test
mov
and
mov
mov
repz
sbb
jne
cmp
or
mov
mov
inc
lret
jbe
adc
dec
add
test
lea
addb
xorb
push
insl
and
jmp
insl
cmp
pop
sub
cld
cld
jl
lods
add
mov
pop
inc
xor
add
mov
inc
shr
fsubs
sbb
sbb
call
jge,pt
fldt
nop
jle
gs
or
pop
data16
push
push
test
ss
in
or
popa
je
inc
je
repnz
rorb
jmp
xor
and
push
dec
rcl
push
in
add
cmp
loopne
or
cmp
fwait
arpl
mov
add
adc
adc
xor
inc
call
dec
add
push
pop
clc
fstps
or
mov
push
shrl
js
and
dec
rol
ret
mov
nop
pop
das
xchg
mov
jo
cld
insb
mov
push
inc
cmp
clc
and
push
sbb
inc
mov
inc
add
ja
mov
clc
jmp
xor
mov
cmpb
ss
jmp
jne
jp
sbb
pushf
in
xchg
xor
hlt
xor
hlt
inc
stos
xchg
add
subl
in
sbb
inc
xchg
pop
inc
inc
cmpsl
je
lahf
xor
cld
lahf
pop
ss
dec
push
sub
mov
int3
push
xor
xor
xorl
jmp
cmc
add
mov
pop
cmp
push
imul
cmp
mov
mov
mov
pop
cli
sub
jl
cs
xchg
mov
jmp
push
adc
push
cld
mov
mov
cmpl
pop
int3
data16
lock
or
push
data16
ret
ljmp
xchg
and
xor
add
imul
inc
dec
cmp
add
add
cmp
repz
test
lret
push
mov
sbb
push
lds
lret
mov
add
mov
jge
pusha
jg
sbb
adc
ss
push
lods
es
cmp
add
gs
xchg
outsl
int
test
pusha
mov
fnstcw
xor
out
pop
cmp
mov
mov
icebp
mov
mov
pop
mov
ja
add
xor
sbb
lcall
push
push
jmp
or
jmp
testb
je
push
ljmp
adc
test
addb
sbb
jb
xor
and
adc
push
cmp
jne
pushf
aam
test
adc
add
mov
divl
sbb
mov
mov
dec
rcrb
sub
sub
test
in
inc
sbbl
lea
mov
popa
xor
sbb
shlb
pusha
into
push
movsl
dec
movsl
movsl
adc
add
push
popa
mov
iret
mov
dec
dec
push
add
lods
jecxz
divl
sbb
jecxz
push
push
mov
jle
addr16
jns
jne
cmc
iret
mov
sbb
lock
rcl
push
or
fs
xchg
add
pop
or
xor
push
dec
push
push
sahf
or
je
dec
or
and
jo
adc
arpl
ret
dec
inc
add
sarb
cmp
mov
add
cltd
sbb
sbb
lret
cmp
xchg
mov
inc
call
sub
loop
push
pop
call
xor
cmp
xor
das
daa
sbb
inc
jmp
mov
add
mov
add
push
and
in
xchg
mov
cmp
inc
test
add
mov
ds
nop
xor
cmp
xlat
and
outsb
jmp
push
dec
and
mov
arpl
pop
mov
cld
jo
shlb
mov
add
inc
cmp
xchg
mov
rcrl
das
adc
rcrl
addb
in
xchg
aam
mov
shl
and
xor
ret
inc
pusha
mov
mov
jge
jo
xor
jge
mov
scas
cwtl
pop
inc
xor
or
lods
outsl
push
sbb
sub
mov
das
mov
cmp
sub
shlb
adc
adc
ljmp
and
fisttpl
xor
int3
ljmp
out
mov
push
mov
push
mov
fiadds
nop
adc
xor
js
adc
aad
mov
jno
leave
pop
sbb
and
inc
xor
pop
lcall
in
lea
xor
leave
fsubs
push
ljmp
leave
filds
add
lret
loop
mov
dec
and
sbb
jo
fsubp
cwtl
lods
jo
push
lock
or
xor
jmp
jmp
pop
mov
and
repz
scas
dec
xor
cs
dec
cmc
outsl
jno,pn
outsl
cmp
adc
inc
out
and
orl
test
aad
andl
js
inc
mov
cmp
or
adc
jp
add
pop
add
or
pushf
sub
out
inc
add
fcmovb
jmp
shr
or
xor
add
add
or
bound
scas
push
bound
cmp
add
push
ds
sbb
mov
or
cmp
cwtl
add
int3
cld
push
mov
adc
fnstcw
sub
sub
popf
pop
adc
inc
dec
add
lea
sbb
or
mov
shr
cmp
mov
icebp
or
fimuls
add
push
jp
adc
or
fwait
repnz
orb
mov
inc
dec
cmp
iret
adc
sbb
clc
inc
movb
xchg
mov
pop
jle
in
push
lods
shr
cmp
ficoms
das
xor
push
notb
or
shl
subl
push
mov
xchg
xor
cmc
test
add
lcall
adc
aas
or
mov
cmp
test
test
adc
jbe
je
lret
je
dec
call
and
sub
adc
cmp
and
add
sbb
adc
icebp
cli
iret
or
scas
jae
push
insb
xchg
negb
add
testl
sti
inc
outsb
add
sub
jne
add
call
mov
ljmp
and
dec
cmc
mov
test
mov
push
xchg
jle
mov
sbb
jne
dec
pop
pushf
fstl
sub
add
cld
inc
push
add
xorb
stos
add
ds
jle
inc
aam
pop
cmp
nop
mov
xchg
mov
pop
je
cmp
lock
jl
cmpb
jl
xor
cmpb
test
fdivl
cld
inc
andb
xchg
adc
orb
jo
stos
push
adc
xlat
inc
cmpsl
incb
push
mov
push
push
fsubs
push
xchg
iret
ds
inc
adc
push
mov
int
xchg
aam
jne
aam
pop
or
jl
inc
cmp
sub
and
add
dec
add
mov
fiaddl
jbe
dec
add
fildll
shl
or
or
sub
or
test
jne
push
std
jb
xchg
flds
and
shll
mov
je
mov
dec
jo
or
aam
dec
or
xor
mov
or
js
adc
adc
adc
movsw
xor
sub
mov
mov
and
hlt
jo
ret
les
push
push
pop
and
add
dec
or
push
pop
int3
add
mov
mov
push
xor
in
imul
inc
fstl
cld
or
neg
neg
sbb
sub
out
sbb
inc
sbb
mov
data16
sbb
or
sbb
fcomp
ficompl
rcr
and
icebp
sbb
and
sbb
insb
sbb
pop
inc
xor
dec
jne
pop
pop
pop
pop
insl
jg
addb
and
lods
rcl
adc
orb
loope
shr
mov
adc
mov
mov
and
cld
je
hlt
xchg
les
andl
sub
addr16
test
sbb
call
add
and
adc
adcl
ds
repnz
gs
int
sbb
xor
jbe
jns
mov
insl
sbb
sbb
dec
sbb
adc
push
es
jg
or
adc
ds
aam
inc
sbb
jo
fwait
xchg
xchg
or
insb
mov
mov
and
insl
xor
test
nop
dec
jne
add
lock
jno
and
inc
or
lret
test
and
ss
dec
pushl
dec
cmp
ss
dec
ret
jge
pop
sbb
sbb
jne
cmp
jp
testb
fistps
cli
lds
or
je
cmp
lock
mov
scas
es
mov
je
pushl
shll
test
mov
push
cmp
ja
add
daa
movsl
jg
cmp
adc
cmp
jne
xchg
sbb
adc
mov
test
rcrl
xorb
add
lods
inc
cmc
aam
push
pop
mov
adc
mov
push
sbb
mov
mov
push
jbe
add
mov
xchg
dec
aaa
outsl
adc
mov
daa
incb
inc
imul
je
inc
lea
push
aaa
mov
pop
mov
int
xchg
xor
mov
ss
pop
mov
pusha
pop
shll
sub
xchg
push
leave
notl
outsb
fsubl
cmpsl
xor
test
pop
pop
mov
hlt
inc
jmp
mov
inc
push
push
sahf
sbbb
subl
sbb
push
out
pop
push
inc
int
sarb
xchg
out
femms
pop
mov
out
cmp
xor
stos
movsb
sub
push
inc
mov
lea
fsubrl
sti
mov
push
or
or
xchg
xor
adc
test
add
sbb
iret
pop
dec
sti
and
jg
mov
push
rcl
cmp
repz
aam
xlat
adc
fstpt
loopne
xchg
push
rorb
jmp
xor
inc
add
sub
into
xchg
test
sub
and
mov
or
data16
add
mov
mov
add
push
ret
push
push
push
mov
movsb
test
lods
mov
lea
sbb
je
test
sub
call
cmp
es
push
xor
or
repz
pusha
push
sbb
or
fcomps
adc
push
aaa
sarb
jo
pop
lods
mov
imul
dec
shr
cmp
jg
sbb
dec
lea
sar
inc
pop
adc
or
mov
sbb
push
aam
xchg
out
loop
sbb
shlb
jb
call
sub
mov
roll
adc
sar
fisubs
addr16
stos
aaa
test
mov
adc
les
fcoml
dec
push
adc
fadds
or
dec
lock
pop
ljmp
or
loop
mov
and
and
lea
pop
sbb
movsb
subl
inc
jle
mov
ja
xchg
pop
dec
inc
add
pushf
add
jns
out
mov
inc
divl
in
sarl
lods
loopne
inc
or
andl
dec
mov
lock
or
and
mov
rolb
popa
rol
js
mov
neg
pop
and
dec
xchg
mov
sbb
or
cwtl
movsl
push
push
push
push
sub
andl
sahf
add
cmp
cmp
push
jns
bound
inc
xchg
cwtl
sub
mov
jge
jl
add
add
cmpsb
imul
or
lock
jle
jle
jne
add
fcmovbe
sbb
je
rolb
rorb
push
loop
fldenv
cmp
or
movsl
cmpb
or
cltd
sub
int
movl
lods
ss
shrl
out
inc
jecxz
adc
jmp
test
adc
lock
or
lock
push
test
cli
inc
mov
div
mov
sbb
scas
or
mov
dec
popa
inc
call
add
mov
ret
push
lcall
inc
aam
dec
sbb
jo
or
jmp
sub
leave
mov
xor
mov
rolb
push
xchg
mov
mov
dec
rolb
loope
xchg
mov
cmp
dec
mov
mov
insl
jno
lods
cmp
repnz
pushw
sub
loop
rcl
xor
out
jge
and
inc
out
mulb
add
inc
std
test
mov
inc
test
rcll
adc
xor
jae
rcll
cmp
sub
cmp
ss
inc
test
xchg
and
jge
mov
int
popa
cmp
dec
orl
jno
xor
call
hlt
adc
cmp
cld
lea
fisubl
lcall
test
xor
inc
mov
lods
lods
rolb
cltd
add
sub
hlt
dec
add
hlt
inc
sbb
sub
sbb
xor
enter
lock
inc
mov
stc
jge
xchg
sbb
mov
dec
leave
pop
jmp
add
jne
add
in
movsl
add
fs
mov
into
mov
adc
sub
sub
sub
insb
sbb
scas
mov
scas
movb
add
mov
push
add
push
nop
stos
lds
sbb
cmp
push
adc
hlt
dec
push
out
adc
and
mov
push
test
call
sub
or
inc
shll
jbe
mov
fiadds
inc
imul
and
insl
call
pop
mov
loopne
fsubs
pop
add
and
adc
movsl
out
xchg
pushf
jmp
out
icebp
ret
mov
or
ljmp
lock
or
mov
test
or
faddp
jb
shl
enter
lods
push
test
in
mov
movsl
mov
clc
js
pusha
mov
dec
enter
fcoms
push
test
dec
int3
pop
sub
dec
lock
add
add
icebp
dec
xorb
into
or
mov
inc
test
add
or
in
cli
aas
in
jg
add
xor
inc
cmpb
sub
push
bound
movb
dec
cmp
into
mov
add
dec
add
add
fadds
sub
movb
adc
jp
jne
dec
sub
sahf
mov
jb
int
pushf
adc
push
inc
ret
and
add
dec
inc
push
mov
jbe
jnp
dec
adc
inc
or
imul
push
push
lcall
mov
outsb
scas
adc
aad
push
mov
shll
lea
add
sbb
cmp
into
rclb
or
aaa
xor
mov
xchg
push
iret
shll
add
or
dec
push
in
pop
pop
scas
add
adc
dec
or
inc
mov
ret
push
mov
and
push
ret
pop
mov
movsl
gs
adc
or
jae
roll
test
jae
rol
mov
iret
xor
inc
xchg
xchg
lret
inc
and
pushl
mov
rcrl
mov
jnp
mov
ret
jne
or
mov
xor
shrb
mov
hlt
inc
push
pop
jae
xor
jbe
or
or
add
mov
mov
push
mov
inc
or
pop
mov
pop
pop
pop
ret
push
adc
xlat
dec
dec
cmp
push
add
jne
add
jne
and
sbb
mov
mov
inc
jge
or
add
ret
or
jp
or
in
sub
sbb
nop
inc
fldcw
mov
cld
dec
mov
inc
xorb
or
testl
add
xchg
dec
into
xchg
cmp
test
jge
and
sub
into
in
stmxcsr
loopne
sub
cltd
and
dec
jnp
into
or
add
or
push
into
mov
add
sub
mov
mov
pop
out
cmp
inc
jg
into
jp
dec
dec
into
into
mov
lea
sarb
push
js
aaa
js
nop
pop
cwtl
pop
mov
nop
int3
or
fcomps
clc
shlb
or
pop
adc
fs
fbld
mov
lcall
pusha
test
lahf
pop
test
repnz
add
add
sub
adc
add
test
and
dec
repz
sbb
je
and
jb
pop
cmp
mov
jmp
jmp
lret
ret
push
push
xor
xchg
xchg
loopne
aad
push
scas
sub
aam
add
adc
cmpsl
add
jae
jo
or
insb
jl
fmul
cmp
push
mov
and
cmp
push
adcb
mov
or
sub
dec
add
mov
inc
ret
fisubrs
mov
push
cwtl
sub
and
daa
or
and
cli
add
adc
jge
scas
mov
bnd
or
push
inc
mov
pop
outsl
cwtl
leave
push
mov
mov
cmpb
pop
mov
push
adc
cwtl
xchg
int3
rcll
inc
or
js
jmp
sub
or
ss
in
gs
ds
je
mov
test
mov
cmp
icebp
stos
and
lret
inc
inc
ficoms
jmp
pop
sbb
mov
and
fiadds
imul
fwait
negl
mov
jo
jbe
cmp
jmp
mov
popa
cld
test
push
sbb
lret
push
cmp
sbb
js
ja
movsl
cmp
add
xor
mov
pop
sbbb
loopne
jb
jnp
shlb
push
and
mov
test
lods
test
sbb
xor
movsb
fs
jp
pusha
scas
loopne
aam
ret
fldl
mov
nop
jnp
inc
pushl
repnz
pop
in
pop
xchg
inc
test
push
xor
mov
out
je
and
call
fcoms
cs
cmp
stos
pop
mov
cmp
fs
push
and
jge
sbb
adcb
sub
inc
and
test
sub
je
or
test
fcoml
in
lcall
dec
xchg
xor
xor
inc
sbb
clc
rcll
stos
incl
das
inc
pop
adc
jge
lea
shrb
pusha
push
pop
inc
cmovno
push
imul
adc
or
xor
and
xor
add
test
nop
cmpsb
nop
dec
std
rolb
adcl
adc
mov
or
sub
mov
add
addb
cmp
icebp
ds
push
push
xlat
movsl
push
sub
inc
test
movsb
ds
adc
popa
sar
inc
addb
sub
inc
fwait
test
sub
inc
rcl
test
insl
mov
inc
push
add
bound
push
inc
aas
dec
loope
cmp
movsb
or
mov
push
xchg
aaa
lret
adcb
add
jbe
pop
fisubrl
or
imul
icebp
push
adc
xor
push
inc
or
mov
mov
mov
sub
dec
cmp
lret
cmp
mov
add
or
mov
or
push
cmp
aam
stos
mov
jno
pusha
jns
cmp
jo
dec
shll
dec
stos
mov
clc
xor
mov
xchg
test
sbb
sbb
out
xor
les
sub
mov
add
pop
jl
push
lea
jl
lea
or
sub
enter
rolb
xor
mov
pop
nop
xchg
mov
icebp
jae
fsubs
out
pop
mov
push
jmp
dec
loop
dec
nop
adc
movsb
fisttps
jae
sub
cmp
shlb
or
js
pushf
adc
or
mov
jo
insb
mov
fwait
ljmp
scas
mov
sbb
pop
push
das
cmp
in
or
add
sub
add
loop
hlt
push
sbb
and
jbe
sbb
xor
stos
push
and
push
adc
sti
lock
cmpsb
inc
hlt
xor
sub
add
scas
subl
loopne
adc
push
mov
mov
adc
or
testb
add
xor
push
push
mov
nop
addr16
push
pop
pop
cs
xchg
nop
or
aad
jbe
psubw
mov
sbb
adc
add
mov
lock
pop
out
and
insb
fsubl
or
xlat
push
push
daa
ss
xchg
adc
pop
and
test
cltd
rclb
mov
testl
mov
lret
cli
push
sbb
or
or
mov
xor
loop
loopne
mov
loopne
sub
and
dec
ret
sbb
jne
mov
mov
loopne
clc
div
cvttps2pi
aam
test
aaa
push
push
and
pop
je
mov
lods
shll
ds
fnstenv
sub
mov
push
fildll
daa
adc
push
subb
add
jmp
fstps
xor
and
mov
xchg
jmp
cmp
fcomp
mov
imul
adc
ret
fstps
pop
xchg
or
in
cs
mov
int
add
push
js
sbb
add
sbb
unpcklps
or
dec
in
stc
ret
in
mov
das
inc
push
stos
push
out
ljmp
fistps
cltd
nop
xchg
push
mov
insl
inc
push
clc
inc
gs
xabort
inc
loopne
mov
sbb
inc
fidivrs
push
in
aad
inc
es
push
push
mov
xor
or
mov
mov
cmp
pop
and
orb
daa
ja
je
fmull
inc
pushf
push
arpl
fimull
or
shlb
push
fs
int3
mov
rclb
in
sub
shlb
jge
inc
enter
or
push
xchg
or
sub
call
xchg
add
dec
rcll
das
mov
xor
xor
loopne
in
cmp
ret
inc
or
jb
add
dec
pop
fsubs
lahf
add
add
jne
arpl
add
pop
data16
cmpsl
adcb
pop
leave
mov
or
adc
ss
jne
cmp
cmpsb
dec
fwait
lret
insl
xchg
inc
inc
adc
stc
and
add
pop
sub
movsb
xchg
popa
gs
rol
sbb
clc
pop
xor
push
pop
test
aam
adc
push
cmp
and
dec
or
repnz
mov
and
das
or
pusha
fwait
mov
nop
arpl
sbb
or
sub
imul
loop
test
shll
xor
hlt
imul
dec
mov
xor
xchg
in
insl
cmp
or
imul
adc
cmp
mov
shld
dec
or
shlb
cmpsb
in
outsl
fdivrl
lock
leave
insl
sbb
in
in
pop
add
adc
fs
dec
push
fwait
sub
pop
mov
inc
pop
sahf
ja
cmpsb
arpl
aam
dec
cld
cmp
sub
adcb
xor
sub
sub
movsl
scas
push
or
dec
insl
gs
std
jmp
dec
or
xchg
dec
lock
sbb
or
sarl
imul
dec
icebp
xor
mov
int3
pushf
dec
fwait
sub
les
cltd
mov
call
pushf
or
pusha
xor
or
shrb
cmp
sbb
dec
es
jbe
adc
fs
adc
and
fs
dec
sub
xor
xchg
dec
cmp
xchg
dec
es
inc
dec
fs
int
fs
or
in
xchg
xchg
fwait
sbb
add
lock
pusha
add
sbbl
dec
push
enter
lret
clc
mov
xorl
repnz
xor
inc
cld
clc
mov
lock
fisubrl
cmpw
cmp
hlt
add
dec
jl
cld
push
add
out
test
stos
nop
mov
push
lahf
dec
scas
dec
movsl
int3
aam
xchg
mov
mov
test
gs
leave
dec
push
sbb
aad
or
cmp
jo
inc
mov
jmp
inc
enter
pushf
call
imul
in
imul
cmp
ja
test
imul
cltd
ja
xchg
fs
fildll
jbe
cmc
cwtl
imul
pop
add
jl
mov
imul
aam
dec
jmp
xor
jmp
and
lea
sbb
xor
cmp
rolb
fwait
pop
pop
popf
mov
push
adc
lods
push
adc
or
loopne
cltd
cwtl
cs
in
fsubrs
lahf
lahf
push
inc
inc
enter
jg
in
stos
and
add
insl
inc
push
roll
aam
dec
insl
inc
orb
call
cwtl
jbe
sub
xchg
cmp
mov
movsb
mov
movsb
and
fcoms
stos
push
mov
inc
outsb
daa
test
adc
outsb
inc
add
add
lock
jns
ficoms
xor
outsb
in
pop
bound
movq
loopne
fmull
inc
xchg
xor
adc
xchg
cmc
dec
push
xchg
cli
sub
jae
sbb
js
outsl
and
movsb
andb
addl
add
pop
fidivrl
jmp
inc
jo
adc
lock
out
or
out
push
ret
mov
or
in
fwait
cmp
jo
fsubrs
xor
fcom
jmp
mov
sbb
jno
xor
cmpsl
or
cmp
mov
cmp
cmp
mov
cmp
cmp
int3
rcl
and
pusha
jmp
bound
movsb
aad
lods
mov
pop
outsl
bnd
fstps
dec
orl
adc
dec
pop
mov
enter
icebp
dec
jae
stos
mov
in
sub
cs
call
dec
adc
in
imul
sub
add
je
push
mov
or
inc
stos
push
cmpsl
or
test
cwtl
je
les
or
mov
jg
jne
sub
adc
jae
in
pop
push
fwait
int3
xor
adc
cli
rorb
add
sbb
mov
fcomps
push
jns
mov
jbe
dec
mov
call
sub
xchg
ret
imul
push
in
js
or
sti
pop
enter
enter
jno
ss
mov
pop
mov
inc
adc
lahf
push
movl
fiaddl
dec
fdivr
jo
mov
pop
or
js
lods
ss
pop
filds
in
mov
das
cli
out
add
aam
xchg
shlb
sbb
out
mov
lret
clc
fisttps
jl
sub
sub
adc
insl
xchg
pop
pop
cltd
pusha
inc
add
adc
cltd
ss
jo
adc
sbb
xchg
adcb
js
leave
xor
add
add
sbb
xchg
lea
nop
jecxz
lea
mov
pop
cli
mov
jo
and
add
cmp
in
fimull
mov
inc
mov
loopne
push
jmp
aas
filds
jg
xlat
lods
or
add
outsb
outsb
lock
ret
dec
mov
adc
jp
adc
xor
stos
mov
lock
mov
or
jge
xor
jg
dec
aad
int3
pop
mov
xor
add
fchs
fcompl
and
cld
jnp
and
lods
fldenv
sub
lea
pop
jmp
adc
fadds
sbb
andb
rorl
pop
cmp
movsl
push
add
sti
stos
incl
add
ja
add
cmp
or
or
in
inc
or
or
nop
inc
push
or
or
sub
or
test
cltd
sub
cs
mov
jge
pop
add
push
or
sbbb
or
xchg
imul
dec
and
push
gs
xchg
push
push
and
xchg
mov
mov
sub
leave
mov
xchg
imul
cmpsb
lock
aas
in
push
sub
and
and
push
scas
daa
dec
jg
mov
and
in
enter
jg
add
cmp
inc
and
dec
or
test
jo
inc
mov
add
in
or
nop
decb
je
mov
xchg
and
das
call
call
mov
xlat
call
add
ret
and
mov
dec
xor
dec
or
loopne
sbb
aad
adcl
or
or
push
inc
roll
add
addb
xor
sbb
push
rcl
inc
movsl
dec
loopne
int3
dec
enter
sbb
cmp
sarb
cmp
mov
cmp
cmp
cmpsb
bound
sub
enter
sbb
cmc
test
push
popl
or
test
ret
push
xor
lcall
xchg
test
and
jne
je
push
mov
sub
xchg
sub
fs
nop
je
mov
mov
cmp
sbb
int3
nop
xchg
xchg
sub
inc
cs
xchg
popf
mov
lock
inc
jno
insl
jne
inc
sbb
mov
fadds
mov
fsubl
shll
shrb
insb
xchg
pop
mov
xchg
or
mov
shll
add
and
imul
pop
rcrb
nop
in
sbb
lock
out
dec
rolb
add
sbb
or
push
insb
xor
in
lcall
push
andb
insl
bound
enter
mov
aas
pextrw
daa
mov
jo
aam
sarb
rcl
mov
xchg
fcoml
or
mov
dec
xor
fdivrl
dec
sub
xchg
mov
adc
insb
sbbb
insl
or
in
scas
cmc
nop
popa
adc
inc
adc
add
sbb
pop
fmuls
stc
cs
pop
ret
xor
std
mov
jae
inc
sti
and
jl
movsl
or
enter
pop
mov
mov
popa
pop
faddl
in
adc
or
jnp
adc
push
or
sbb
cltd
add
insb
mov
mov
pop
jb
aam
mov
pop
xor
pusha
ret
leave
cmp
xor
nop
lea
dec
pusha
add
lret
call
mov
or
mov
sbb
sti
push
lods
xchg
dec
jbe
jge
jo
cmpsl
lods
mov
call
push
dec
adc
cmp
rcr
fwait
dec
aam
push
jge
push
adc
sub
mov
or
mov
and
fs
jns
jl
adc
je
adc
jo
adc
or
add
fildl
in
aas
and
add
lods
adc
movsl
inc
push
add
aam
mov
sti
fadds
mov
out
mov
mov
cmp
out
add
add
loope
call
mov
iret
sbb
pop
push
mov
push
cwtl
jl
mov
jne
pushf
fsubrp
aaa
test
and
das
or
cmp
dec
out
mov
adc
jo
dec
dec
shll
xlat
fidivs
lods
xchg
jg
in
sub
fcomps
mov
mov
mov
outsl
mov
xchg
add
jecxz
push
pop
nop
xchg
mov
sub
xchg
lods
fs
imul
lret
jl
fcoms
les
sub
mov
push
insb
sub
sbb
pop
jge
enter
jo
pop
push
inc
mov
xor
insb
bound
mov
movsl
dec
mov
test
fwait
push
cmpsl
xor
loopne
push
fwait
mov
add
mov
pop
xor
and
add
dec
inc
or
push
push
scas
scas
and
cwtl
enter
data16
loope
inc
xchg
pop
and
xchg
pop
movsb
sub
in
lock
stos
add
cwtl
fmull
dec
cmpsb
add
and
shrb
sub
lock
enter
les
cmpsb
inc
pusha
adc
push
xor
mov
insb
add
repz
sub
aam
mov
add
nop
and
aad
movsl
and
and
decl
and
or
cltd
bound
psrlq
add
jno
cli
inc
enter
lods
add
daa
ret
xor
arpl
pop
push
test
xor
test
push
pusha
mov
fildl
call
or
inc
mov
pusha
add
stos
xlat
in
push
xor
enter
dec
mov
dec
jg
lahf
pop
enter
add
les
inc
pop
add
lock
in
pop
or
mov
mov
test
or
or
mov
mov
popf
lahf
or
hlt
imul
fsubrs
jl
pusha
push
cmp
out
jl
mov
adc
cwtl
jno
stc
pop
out
sahf
jg
in
and
loopne
inc
pop
shr
fdivs
pop
mov
les
push
insb
and
repnz
lahf
in
test
test
cltd
push
xor
fldl
enter
ljmp
test
mov
mov
mov
test
insl
mov
push
outsl
js
test
andl
imul
push
pop
add
push
lock
and
stc
shrd
insl
mov
dec
movsb
add
enter
dec
xor
int3
jnp
dec
je
fsubs
and
jae
sub
les
mov
test
jne
cmpsb
inc
mov
xchg
push
or
lea
xchg
test
inc
mov
dec
mov
sbb
mov
xchg
int3
sub
jg
dec
or
ret
int3
jmp
push
aam
int3
add
sub
shlb
adc
dec
cmp
or
sub
add
mov
pop
das
nop
pop
aad
jg
movsl
xchg
nop
or
lock
adc
test
xchg
xor
dec
aam
fsubrs
int3
pop
les
adc
mov
and
lods
add
les
mov
xchg
dec
cwtl
je
out
in
fucom
sub
adc
jne
adc
push
jo
jb
mov
sbb
cltd
add
enter
mov
adc
or
rorb
orb
movsb
adc
xor
int
nop
and
add
mov
fmull
nop
inc
mov
cltd
popa
dec
cli
and
imul
add
pop
enter
add
mov
add
sbb
mov
xchg
test
mov
iret
or
jb
adc
adc
dec
scas
sbb
and
test
jo
add
cmp
pop
pop
or
mov
push
add
fsubs
rorb
movsl
hlt
xor
imul
adc
roll
lea
sbb
jle
sub
xor
add
lea
or
push
and
sbb
in
movsl
mov
test
or
pop
addb
rcr
mov
in
ja
shrl
xor
and
les
pop
ja
mov
push
pop
pop
shll
add
les
int3
xor
cmpsb
jns
cmp
xlat
es
and
dec
dec
pop
nop
dec
inc
xchg
in
cwtl
pusha
fildl
push
xor
add
fmuls
and
sbb
dec
push
nop
stos
andnps
dec
pinsrw
push
mov
add
mov
aam
sub
lods
pop
lock
and
lods
lock
push
xor
test
xor
std
add
and
jb
or
xor
xchg
and
cmp
fbstp
aaa
loope
push
stc
inc
inc
mov
xor
xor
push
jge
mov
or
mov
mov
fcoms
pop
xchg
lret
add
in
lret
cmp
add
xchg
or
or
pop
adc
push
lea
fsubrs
adc
jl
jbe
inc
in
andl
pop
dec
push
in
inc
mov
nop
cmpb
add
sub
and
fwait
pop
mov
xchg
invd
pop
enter
das
fildl
and
or
or
arpl
dec
or
arpl
sub
nop
sub
cmp
orb
aad
add
add
mov
sub
inc
pop
push
scas
jne
adc
aas
mov
or
scas
mov
push
push
pop
mov
int3
aas
push
pop
inc
cld
adc
leave
lock
add
cmp
das
add
adc
cltd
pusha
arpl
mov
push
insb
or
sub
cmp
sbb
xchg
in
sub
push
xor
push
ljmp
jmp
or
hlt
call
in
and
mov
dec
mov
je
cs
xor
push
add
or
in
bound
fsubrs
and
or
inc
adc
sbb
xchg
push
jmp
movsl
fwait
sbb
mov
insb
stos
lods
or
loope
orb
sub
inc
nop
or
push
mov
push
sbbb
mov
cmp
and
cmc
sub
push
inc
xor
test
fadd
test
and
nop
mov
mov
inc
adc
sbb
pop
sbb
cltd
pop
adc
push
insl
mov
push
leave
aam
hlt
test
mov
cmp
xchg
dec
mov
dec
cmpsb
test
xchg
add
ss
pushf
dec
inc
push
lahf
lock
mov
and
push
lea
push
dec
jle
mov
mov
cmpb
mov
shl
dec
es
ss
jl
dec
xor
mov
cmpl
xor
and
push
pusha
push
sbb
inc
jo
shlb
cltd
mov
mov
xchg
fs
or
jne
add
rolb
cmpsb
dec
xor
les
and
mov
test
and
ret
add
subb
test
dec
adc
fs
dec
int3
enter
cwtl
jge
cmpb
cmp
sbb
and
and
jbe
aam
cltd
je
shll
lea
push
movl
mov
shll
adc
push
fistpll
add
pop
xchg
cltd
mov
mov
jae
lods
mov
jb
sub
dec
je
fldenv
mov
fists
jl
adc
and
mov
int3
ret
leave
test
ljmp
ss
sbb
fcomp
aas
outsl
mov
jns
pop
sbb
adc
pop
pop
adc
mov
adc
faddl
add
or
test
test
xchg
inc
mov
idivb
test
xor
in
enter
rcrb
pusha
rolb
loopne
enter
adc
clc
fistl
mov
or
mov
jbe
inc
lock
push
nop
mov
insl
sub
mov
sub
cltd
push
add
lods
test
add
mov
sbb
loopne
rorb
bound
lret
fnsave
ret
or
cmpsl
test
js
nop
or
lods
int
cmp
shlb
call
sub
add
jne
add
or
mov
es
orb
int3
ss
xchg
pop
pop
call
jo
or
das
add
cwtl
dec
fwait
xchg
xchg
adc
ret
push
pushf
incl
repnz
mov
push
clc
aas
cmp
adc
aad
aad
sbb
pusha
dec
rcll
jae
scas
adc
or
dec
in
pop
hlt
lock
add
les
in
jmp
mov
out
mov
notb
adc
adc
mov
jno
add
or
mov
aam
add
sbb
mov
das
iret
aam
stos
sub
jns
xor
add
adc
imul
fs
pop
or
sbb
loope
dec
hlt
cli
mov
sti
and
sbb
cld
cli
scas
fs
orb
inc
dec
mov
dec
jb
hlt
add
adc
js
lods
inc
mov
popf
movsb
je
sti
mov
mov
roll
and
adc
inc
enter
and
mov
fs
inc
test
mov
sbb
sarl
shrl
cli
xchg
mov
pop
test
adc
movsb
jmp
lods
lods
cmpsb
mov
iret
mov
dec
push
rorb
nop
xchg
outsb
es
xor
mov
stc
les
or
add
dec
or
fwait
and
push
decl
jno
and
test
push
call
xor
leave
mov
add
push
sbb
mov
jp
push
fdivrs
pop
dec
adcl
sub
in
arpl
inc
sub
cmp
pop
es
testb
outsl
sub
fimull
out
push
repnz
mov
pop
mov
enter
sarb
imul
mov
sti
std
dec
add
push
pop
inc
xchg
out
loopne
jle
adc
add
mov
int
aad
push
lock
dec
xlat
cmp
mov
jmp
mov
mov
push
pop
inc
cmpsl
mov
jne
xor
or
icebp
mov
mov
dec
adc
sub
into
sbb
add
nop
and
xor
push
dec
adc
sbb
rcrb
dec
and
mov
mov
sbb
aaa
jmp
aad
sbb
lret
jo
fs
ret
push
scas
mov
stc
xor
cmp
mov
test
aas
inc
in
mov
add
mov
sub
jl
iret
pop
shlb
jnp
ss
jo
adcb
cmpsl
mov
inc
add
fldt
xchg
xchg
push
paddsw
jnp
mov
push
shrb
std
jg
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
add
js
stos
pop
and
xadd
sahf
out
movsb
push
mov
sub
inc
cli
jg
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
sbb
pop
popa
bound
gs
imul
ljmp
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
leave
jg
call
pop
das
mov
rcll
xchg
adc
push
or
cmp
rclb
cmpl
pop
mov
in
pop
push
jne
cmp
repz
jge
cmp
dec
in
dec
repz
pop
dec
outsb
je
jb
outsl
arpl
fs
out
jge
mov
sbb
push
dec
imul
push
cmp
jb
gs
xor
cs
insb
push
bound
and
xchg
mov
imul
pop
cli
inc
push
cmp
lock
rdpmc
add
lgdtl
pop
sub
add
jge
and
or
je
jb
std
insl
mov
cmp
or
outsl
add
add
add
orb
jbe
push
gs
push
je
mov
ss
inc
jne
jb
mov
outsb
das
inc
lods
fisttpll
add
arpl
cmp
out
stos
add
dec
and
jns
out
lcall
adc
push
dec
push
inc
mov
gs
insl
bound
daa
dec
outsl
jbe
xchg
je
adc
jo
sub
xor
mov
dec
jne
xchg
mov
inc
jo
imul
bound
cmp
insb
adc
cmp
scas
cmpsl
xchg
popl
xor
pushf
jg
addr16
push
jne
imul
adc
and
daa
int3
fimuls
scas
clc
sbb
dec
into
fdecstp
push
js
push
jne
xchg
int
pushf
jae
dec
inc
ds
popa
das
jo
push
lds
ffreep
sbbb
psubq
sub
rolb
pop
inc
jb
fisttpll
outsb
or
and
outsb
xchg
loope
call
shll
sub
sub
cs
movsl
cmp
dec
cmp
cmp
ds
inc
das
pop
pop
dec
push
push
mov
jnp
jge
dec
mov
jle
add
arpl
test
push
insb
pop
cs
and
push
pop
or
sti
mov
xor
inc
je
and
insb
jae
cs
fs
loopne
leave
xlat
mov
inc
inc
mov
mov
jo
insl
and
sbb
jbe
dec
push
push
sbb
mov
mov
inc
sbb
and
add
push
fwait
loope
xor
sbb
push
jo
imul
and
jae
insl
pop
mov
je,pn
pop
push
shrl
and
push
sub
and
fs
pusha
subl
mov
push
insb
fidivl
and
and
jo
mov
daa
mov
jne
pop
xor
and
fistpll
xchg
adc
or
sub
mov
scas
loopne
or
lcall
data16
out
mov
ja
mov
and
or
fidivrs
popa
add
or
fs
xor
and
xchg
mov
jnp
mov
je
and
push
daa
rolb
int3
fidivrl
popf
jb
loopne
outsl
mov
jo
fcmovu
push
daa
sub
dec
addb
das
arpl
pusha
add
and
arpl
shll
fiadds
mov
xchg
insb
imul
out
xor
int3
or
inc
inc
inc
push
pop
add
pusha
js
insb
popa
pop
xor
mov
mull
xor
fadd
push
push
fistps
push
or
pop
aaa
xor
ss
shll
add
xchg
inc
hlt
pop
dec
add
add
adc
inc
ja
outsl
outsl
test
ss
sub
jb
jo
cli
jbe
add
mov
xchg
push
mov
inc
pop
push
gs
or
lds
sub
out
inc
jle
outsl
sub
or
arpl
sub
outsb
bound
cmp
enter
insl
in
ljmp
imul
movsl
sbb
imul
lds
mov
cmp
rclb
leave
js
push
pusha
nop
inc
insl
imul
cmp
cmpl
in
xor
subl
mov
cmp
or
addr16
jae
xor
subb
out
cmp
rorb
test
dec
jb
push
sub
add
sub
pop
dec
jmp
dec
or
jo
and
loop
mov
cmp
cwtl
ja
ds
inc
inc
test
push
dec
cmp
jg
fwait
int3
outsb
ud0
loopne
add
cmpb
rol
stc
mull
lret
jno
icebp
pusha
inc
mov
clc
ret
push
loope
outsb
movsl
add
xorl
addb
imul
loope
cmpsb
gs
popa
dec
add
ret
xor
jg
js
mov
imul
push
add
xchg
sahf
leave
icebp
mov
divl
xchg
adc
add
add
adc
add
add
add
add
ljmp
add
and
push
pop
pop
or
aaa
ds
pop
jns
push
push
pop
hlt
and
or
pusha
add
ja
js
or
sub
add
jnp
pushl
mov
addl
int
lods
cmp
and
adcb
pop
daa
fnstenv
jle
push
push
and
sub
in
popf
jb
int3
push
jo
add
inc
jecxz
mov
mov
push
stos
int3
js
mov
pop
dec
rorb
sbb
add
lea
and
nop
xchg
pop
jb
xchg
xchg
xchg
inc
test
out
add
fstp
inc
pop
push
adc
mov
sub
test
dec
pop
pop
pushf
jo
or
and
or
cs
ret
pushf
pop
data16
stc
sahf
jo
nop
sahf
push
pop
jg
pusha
in
push
fimuls
xorl
sub
cmp
dec
dec
add
test
cmp
mov
sub
mov
enter
add
and
ss
xchg
push
or
or
test
pop
adc
mov
add
aaa
add
pop
adc
and
imul
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
mov
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
and
roll
stos
sbb
decl
aas
mov
sbb
push
int
fists
outsl
ja
mov
push
jae
jb
bound
je
sub
stos
inc
ss
mov
mov
repnz
sub
daa
pop
lea
dec
mov
outsl
js
fisubrl
inc
push
mov
inc
jmp
lea
insb
gs
mov
dec
pop
movsl
outsb
jnp
mov
in
dec
imul
pop
jns
inc
mov
imul
push
inc
and
inc
jb
jns
daa
add
enter
dec
pop
jnp
jns
mov
or
arpl
stos
or
cmp
outsb
pushw
dec
add
arpl
mov
push
pusha
inc
ficompl
mov
jbe
push
push
lahf
movsb
sbbl
and
xor
dec
or
imul
cmp
or
pusha
gs
sbb
sbb
jno
sub
push
test
pop
pop
pop
push
push
jae
cmp
jecxz
push
cmp
call
movsl
jae
addr16
subl
ret
outsb
gs
mov
xchg
xchg
inc
xor
jbe
push
push
push
push
dec
testl
dec
xchg
add
adc
popa
mov
fildll
dec
jge
dec
test
jg
imul
call
push
adc
jg
cmp
inc
mov
enter
jg
sbb
ljmp
sub
xor
push
or
imulb
mov
mov
mov
popw
pop
imul
mov
push
jl
cmp
cmp
push
sahf
out
jns
das
push
sub
es
mov
push
jle
sub
sub
addr16
sbb
sahf
mov
sub
sub
push
cmp
cmc
jo
inc
jmp
cmp
and
add
pop
xchg
push
mov
jb
sbb
insl
popf
imul
das
jo
ss
loopnew
push
lret
lods
fadds
mov
and
int3
cmp
jo
sub
test
jl
lahf
sub
sahf
cmpsl
stc
mov
add
clc
loopne
loopne
jge
out
enter
stos
in
jns
mov
adc
fildl
in
test
dec
stos
mov
push
xchg
nop
push
mov
jns
out
test
jns
jmp
insb
push
push
or
stc
lcall
in
pusha
iret
repz
cmpsl
push
pop
pop
push
push
push
iret
repz
mov
push
inc
inc
cmp
iret
repz
xor
sub
repz
repz
adc
add
jns
out
sarb
jl
cmp
clc
fiadds
jns
out
mov
int
jns
inc
cmp
add
cmp
repz
les
repz
in
rcrb
sub
cmpsl
pop
aam
push
movsb
aam
lcallw
push
outsb
push
xor
add
sbb
aad
ljmp
jge
js
outsl
pop
cmpsb
bound
fs
sub
jno
je
test
push
lahf
push
lods
pcmpgtw
xor
add
jle
movsl
ret
push
insb
cmp
inc
inc
dec
jae
xchg
fxch
push
insb
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
mov
add
dec
dec
inc
add
adc
rclb
ljmp
adc
ja
inc
call
rclb
mov
scas
xor
jnp
jnp
std
adc
outsb
mov
ds
pop
adc
clc
in
stc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
dec
mov
jp
adc
fisubrs
and
iret
mov
xor
iret
imul
adc
inc
inc
mov
mov
sub
fwait
jns
pusha
pop
ss
sbb
pop
jns
ds
xor
incb
mov
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
cli
xchg
imul
xor
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
decb
or
loop
mov
xchg
dec
decl
pop
xchg
scas
lods
cwtl
push
xor
andb
testb
mov
pop
pop
repnz
or
xor
and
es
push
hlt
flds
sbb
scas
mov
mov
or
insb
fstp
std
pop
mov
jns
mov
dec
test
push
push
inc
test
add
jbe
and
adc
inc
mov
jle
gs
inc
test
mov
sbb
out
inc
dec
push
dec
push
sub
mov
enter
inc
dec
push
dec
xor
push
sbb
dec
filds
add
push
ficomps
push
xor
and
ja
call
push
adc
insb
xor
adc
push
inc
cs
aam
lods
mov
xor
dec
dec
inc
push
xor
xor
mov
ss
dec
and
xchg
pop
std
ja
aaa
inc
xor
xor
pop
adc
push
and
push
dec
push
push
dec
inc
fstpt
push
push
pop
push
inc
pop
aas
xor
sbb
sbb
sti
ja
and
lods
inc
sbb
or
adc
xchg
test
dec
jle
sub
push
daa
pop
fs
test
sub
push
pop
pop
sbb
mov
push
add
jnp
add
push
push
and
and
sbb
xor
mov
inc
pop
pop
pop
add
xor
xor
inc
pop
add
add
jge
inc
loopne
pop
mov
sbb
push
cmp
mov
daa
stc
fcmove
pop
aad
and
push
cmp
push
shl
inc
push
dec
and
inc
test
je
mov
fiaddl
inc
push
ds
add
cmc
mov
lock
dec
mov
inc
pop
push
inc
xor
or
pop
sbb
inc
sbb
dec
push
pop
fsubrl
fisubrl
sbb
xor
movsl
adc
sub
btrl
pop
int3
dec
sub
xor
lods
mov
push
push
sbb
and
pop
ret
add
sub
push
inc
imul
mov
arpl
inc
or
out
out
and
gs
xchg
push
and
lods
push
sbb
das
cmp
push
adc
push
pop
and
cmp
sbb
in
rorl
sub
push
ss
ss
jo
jg
scas
testb
pop
push
sub
push
in
icebp
ss
movsl
sub
inc
and
decl
dec
nop
dec
cwtl
in
push
cmp
out
and
xorb
push
nop
push
mov
lahf
mov
push
rclb
jns
adc
push
push
xor
iret
jae
imull
push
pusha
pop
push
mov
cmp
jo
push
push
xor
xor
out
shlb
testl
push
scas
and
cwtl
pop
mov
sbb
push
jp
cmp
outsl
insl
mov
pop
and
outsb
ret
insb
adc
push
popa
and
int3
dec
bound
pop
cld
into
insl
dec
bound
xor
and
rcl
push
jbe
push
and
jns
out
nop
mov
pushf
out
push
push
xorb
mov
andb
ds
jns
push
push
push
push
mov
add
cmp
sarl
outsb
cmp
push
push
sub
push
add
xor
aaa
pusha
push
push
adc
mov
push
add
cmp
adc
fisubrl
pop
js
inc
jbe
mov
or
pop
or
dec
inc
sahf
push
imul
sbb
nop
inc
or
jmp
push
mov
push
xor
dec
push
pop
fistpl
mov
inc
xor
push
jmp
xor
adc
push
cmp
in
mov
xor
jb
aaa
dec
pop
or
push
sub
inc
and
sub
pop
push
rcll
fildll
xor
pusha
sub
push
inc
add
inc
or
inc
shll
jp
push
pop
push
adc
mov
push
iret
and
dec
cmp
rclb
xor
push
sti
jae
ss
cld
sbb
fs
xor
out
pop
and
sbb
ss
or
mov
scas
jge
or
mov
fs
cmp
outsb
scas
add
pop
push
sbb
jo
pop
test
xor
push
sbb
int
shlb
mov
sbb
jl
sbb
jae
and
pusha
insb
imul
adc
cmpsb
out
and
das
push
fadds
fdivrs
push
daa
loopne
and
inc
and
sbb
inc
sbb
mov
out
pop
or
push
sbb
cmp
and
mov
push
stos
pop
ss
out
mov
adc
xor
dec
push
jle
jge
sbb
inc
scas
adc
mov
sbb
adc
adc
adc
mov
mov
popa
jb
mov
or
adc
stc
and
jle
or
inc
xchg
adc
mov
adc
mov
lds
push
mov
sub
rcrb
sbb
mov
imul
jp
or
xor
inc
pop
push
mov
int
push
adc
in
push
mov
mov
mov
cs
dec
inc
popa
push
lahf
enter
jmp
xor
xor
cmpsb
lret
movsb
lcall
or
xchg
dec
inc
and
lahf
pslld
mov
add
xor
ss
cmp
xor
addr16
dec
aas
rolb
insb
jne
sbb
js
jl
xchg
dec
dec
cmp
pushf
into
and
mov
cmp
dec
lret
mov
xor
daa
fbld
pop
es
mov
orb
cs
ds
cmpsb
mov
mov
add
rcrb
pop
add
and
xchg
sbb
test
pop
lcall
stos
sub
push
xor
adcb
add
cmp
push
or
mov
jge
stos
and
andb
push
pop
xor
jnp
sbb
ss
dec
adc
ja
inc
push
dec
xorb
adc
cmpsb
mov
imul
shlb
pop
adcl
outsl
cmp
dec
and
dec
xor
sub
fwait
aaa
jno
imul
dec
inc
inc
das
or
sbb
call
inc
inc
jp
xor
sbb
int
inc
or
push
adc
lock
out
jno
shll
sub
lods
add
ja
sub
shll
incb
das
add
fucomip
leave
add
mov
xor
das
cmp
loopne
inc
inc
sbb
push
pop
push
add
mov
add
dec
pop
and
imul
cmp
shlb
adc
push
cs
sbb
jmp
lea
mov
ds
xorl
dec
pop
xor
imul
ret
add
push
add
daa
dec
les
lcall
dec
lea
bound
inc
ja
lret
add
icebp
mov
sbb
push
or
loope
mov
rorl
push
out
jp
xor
pop
mov
mov
pop
bound
mov
pop
push
push
je
scas
insl
andl
daa
jae
popa
xor
je
aas
bound
or
cmp
ljmp
das
and
xor
js
add
add
push
mov
dec
lds
ret
idivb
loopne
rolb
push
ret
mov
pop
inc
add
xor
fadds
push
fsubs
mov
imul
and
add
notb
push
adc
inc
ss
sbb
sbbb
ficompl
das
loopne
inc
add
xorb
fdivrs
push
sub
pop
push
push
inc
sti
clc
je
dec
push
mov
fisttpl
push
shlb
pop
sub
jbe
mov
pop
push
jle
fdivrs
sahf
call
inc
sbb
xor
lcall
test
adc
cmp
xor
or
ss
dec
or
push
and
and
xor
enter
pop
jbe
cwtl
xor
inc
and
xchg
outsb
imul
xor
push
xchg
adc
iret
xor
adc
lcall
adc
icebp
push
daa
pushl
pop
or
xchg
xchg
mov
fadds
mov
dec
inc
loop
and
pop
pop
sbb
and
ds
adc
mov
mov
sahf
xor
sbb
out
adc
ds
pop
or
popf
adc
dec
pop
sub
or
xor
add
dec
sbb
and
xchg
cmp
int3
cmp
jecxz
lahf
cmp
push
loope
jns
sub
push
nop
mov
push
icebp
cs
repz
mov
inc
cli
push
jbe
imul
add
lods
pop
cs
das
dec
mov
aas
stos
xor
pop
push
in
push
jo
fcoml
mov
mov
cmp
xchg
loope
push
xor
sub
mov
iret
mov
sbb
or
sbb
push
push
out
js
or
movsb
mov
inc
push
das
and
or
sub
js
mov
mov
and
das
xor
das
adc
cmp
mov
outsl
scas
and
and
add
ja
addb
rolb
sbb
in
xchg
js
or
push
es
ss
or
cmc
and
cmp
mov
xor
or
fcoms
nop
jnp
jl
adc
sbb
fmuls
out
jg
jmp
mov
adc
inc
daa
das
jo
push
xchg
adc
push
outsl
je
bound
adc
dec
rcll
push
adc
inc
inc
cmp
test
sbb
mov
sub
adc
adcl
pop
adc
int
sahf
inc
pop
bound
outsl
sbb
outsb
and
adc
or
cli
sub
fstps
and
mov
iret
push
lods
cmp
ljmp
sbb
mov
cmp
dec
push
dec
negb
sbb
cmpsl
leave
add
push
inc
inc
pop
cld
add
data16
sub
add
inc
data16
xchg
insb
or
cmpsb
cs
cmp
jns
stos
je
mov
cmp
cs
jnp
daa
xchg
sbb
push
push
cmc
pop
pop
xor
aas
sbb
cmp
add
add
pop
pop
xor
inc
and
add
fsubrl
push
lock
pop
sbb
add
pop
inc
mov
cs
add
push
repnz
loope
cwtl
or
inc
in
sbb
pop
popa
xorb
xor
pop
scas
push
and
lock
cmpsb
xor
mov
or
adc
adc
sbb
lods
jns
pop
inc
mov
jge
dec
fdivp
gs
mov
adc
or
ljmp
idivb
dec
cmp
cmp
push
aaa
out
inc
push
imul
pop
push
xchg
push
or
mov
cmpl
sbb
imul
push
sbb
lock
pop
sub
xchg
into
nop
and
xlat
mov
mov
or
stos
mov
pop
xor
add
adc
mov
inc
aaa
adc
cli
rolb
fstpl
jmp
jno
and
mov
insl
xchg
ss
and
cmp
sbb
mov
daa
and
dec
fwait
aad
mov
push
xor
and
enter
sub
dec
orl
push
rol
inc
push
adc
repz
adc
adc
or
xorl
cwtl
inc
test
cltd
and
push
test
jle
adc
das
shlb
pop
mov
dec
out
lods
leave
sub
rcrl
test
das
add
das
aas
add
push
adc
ss
enter
xorb
sti
jg
or
scas
cmpsb
xor
push
shll
ja
and
sub
xor
push
arpl
lret
nop
xchg
dec
cmp
insl
or
in
xor
daa
dec
aas
adc
dec
inc
xor
pop
pop
sbb
rolb
sub
push
test
mov
gs
xor
adc
inc
or
cs
or
and
pop
shlb
fisubs
push
push
in
pop
cmp
mov
mov
sub
or
mov
in
cmp
inc
sub
cvtpi2ps
cs
xor
xor
mov
sbb
adc
push
push
adc
lcall
inc
insb
push
or
int
ret
notl
push
icebp
aaa
mov
push
and
or
inc
aaa
popa
es
adc
sub
insb
data16
or
je
push
pcmpgtw
jp
scas
inc
pop
add
inc
add
cmp
fbld
cmp
das
mov
cmc
pop
inc
insl
sbb
push
jb
outsb
push
push
sub
mov
sahf
out
pop
push
adc
sbb
out
xor
repz
out
roll
add
insb
ss
out
add
or
pop
push
add
mov
add
adc
jns
int
mov
and
sub
xor
inc
mov
mov
gs
mov
mov
popa
fldcw
xchg
sbb
sub
add
or
adc
data16
jl
add
add
int
push
dec
str
data16
or
and
das
incl
mov
out
inc
add
lret
lret
out
imul
jnp
fwait
int
flds
loopne
jo
fisubs
jl
repz
loopne
pusha
andb
mov
in
icebp
push
push
out
mov
mov
inc
out
les
and
dec
dec
inc
pop
pop
jge
aaa
shlb
mov
jg
loope
mov
iret
sbb
ljmp
mov
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
std
pop
pusha
or
mov
mov
sub
mov
sbb
mov
es
test
ds
pop
sbb
jle
cmp
fsubs
sbb
ljmp
test
xor
dec
xchg
pop
shl
dec
push
nop
mov
adc
adc
movsl
mov
aaa
cwtl
inc
push
dec
cmp
and
pusha
dec
scas
cmp
mov
mov
or
pop
push
push
inc
jb
fsubrs
fadds
imul
cmp
cs
pop
subb
xchg
pop
jb
sub
push
mov
daa
iret
and
leave
jae
pushf
and
adc
xchg
daa
iret
add
loopne
or
mov
insb
out
fld
inc
js
cmp
ds
add
jo
lods
dec
push
dec
pop
int3
loop
inc
inc
dec
clc
pop
pushl
push
dec
fnstcw
cmp
xor
pushl
inc
sub
sub
xor
inc
xor
inc
push
xor
test
test
lcall
mov
outsb
add
call
add
inc
cmp
das
js
out
inc
fistpl
loopne
jne
insb
inc
arpl
dec
lods
cmpsb
inc
js
jbe
push
jb
lcall
popa
bound
je
bound
imul
or
push
push
xor
orb
adc
push
and
push
lahf
xorl
adc
mov
or
and
xchg
fiaddl
lods
insl
xlat
das
stos
pop
jecxz
sub
out
sbb
mov
je
adc
out
rclb
xor
cmp
xchg
iret
mov
loope
xchg
add
dec
xor
dec
cmp
inc
xchg
push
push
sbb
cmp
ss
test
ja,pn
cld
or
bnd
inc
adc
mov
fildll
das
pop
and
inc
dec
xor
jns
adc
es
ss
cmp
sbb
daa
xchg
out
dec
add
shlb
or
push
incl
and
das
xor
movsl
scas
pop
inc
xor
lods
add
xchg
dec
mov
out
add
inc
cs
outsb
inc
add
outsl
pop
pop
inc
je
jns
in
fwait
mov
sbb
sub
inc
int
out
outsl
pusha
inc
mov
outsb
pop
cmpsl
jno
fs
cmp
xchg
sub
jno
out
jns
and
push
push
jo
leave
mov
out
pop
mov
insb
mov
pop
popa
xor
inc
in
rolb
movsb
inc
ss
out
jb
sahf
pop
adc
pop
fs
loopne
push
jne
or
add
and
inc
sarl
push
xor
push
adc
dec
lret
nop
push
mov
imul
imul
xchg
int
cmpsb
mov
mov
cmp
loope
out
cs
lret
push
mov
ds
sbb
sbb
dec
out
jnp
push
mov
inc
pop
insl
mov
and
push
push
sub
mov
fcomi
sahf
aaa
je
fstl
jnp
idivl
pop
pop
push
sti
cmp
iret
sub
push
fiadds
pop
iret
repz
push
xchg
icebp
ds
out
push
cmp
out
sarl
pusha
testb
xchg
js
push
fistps
mov
sti
lea
mov
jns
insl
xor
leave
test
mov
pop
push
sbb
inc
es
push
vmwrite
aaa
adc
jno
mov
pop
mov
xor
out
outsl
push
adc
and
out
inc
pop
jae
mov
ds
rolb
and
and
shl
sarl
call
sahf
out
push
xor
push
push
inc
and
idivl
push
iret
mull
and
jns
out
test
cmpsl
stc
cmp
inc
push
iret
sarl
call
push
ds
repz
mov
mov
or
aad
loop
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
inc
inc
xlat
add
mov
and
push
mov
sbb
mov
adc
sar
mov
push
and
pop
sbb
enter
adc
iret
decl
xchg
inc
repnz
iret
pusha
or
cs
add
ljmp
mov
andl
jb
outsb
sti
jbe
cmp
inc
push
aaa
prefetchw
sti
ds
sbb
je
addr16
ss
sub
imul
push
dec
fisubl
jnp
sahf
jecxz
adc
ss
pop
mov
fimuls
dec
jp
cs
jbe
je
push
ljmp
cmpsb
dec
add
push
pop
lods
xor
pop
push
mov
aam
dec
pop
je
jns
sbb
ffree
push
fisttps
jp
das
push
mov
xchg
outsb
push
inc
jmp
sarl
outsb
iret
push
pop
retw
test
flds
mov
ja
jl
adc
mov
dec
das
cmp
in
adc
dec
xor
or
ds
iret
es
adc
ja
out
sbb
popa
insl
jo
es
insb
je
push
scas
repnz
jae
es
outsl
and
aas
out
insb
mov
cmpb
sub
and
mov
mov
mov
xor
xor
out
cmp
xor
xor
xor
cmp
cmp
push
xor
xor
and
mov
ds
add
pop
inc
and
or
or
mov
inc
inc
sbb
dec
aas
add
or
sub
push
ja
push
jle
xor
mov
fidivrl
sub
outsb
fs
and
lds
cmp
push
pop
pop
sbb
mov
or
add
xor
mov
mov
inc
mov
mov
push
das
add
aas
sbb
push
add
jbe
or
pop
leave
or
or
aaa
clc
or
cwtl
adc
add
das
dec
ds
dec
fadd
pop
or
js
rcrl
mov
jne
subl
push
lcall
ds
or
push
sbb
pop
shl
sbb
and
xorl
push
or
sub
or
pop
jbe
xchg
addl
xchg
push
call
aaa
jo
lds
ret
add
and
and
pop
push
pop
cmp
pop
push
das
and
icebp
push
test
cli
cs
test
sub
inc
inc
push
inc
push
push
push
testb
daa
mov
jnp
xor
mov
and
mov
movsb
adc
int
aaa
and
adc
jl
mov
lods
jbe
add
inc
inc
jge
popf
mov
cmp
aaa
lahf
mov
pusha
mov
add
daa
aaa
fidivl
fisubl
daa
mov
stos
outsb
loope
andb
aaa
fiaddl
jge
and
ss
das
divl
mov
rcll
outsb
adc
pop
dec
insl
adc
daa
insb
mov
imul
popa
daa
pop
push
mov
das
dec
mov
cmp
out
push
ja
cmpsl
sbb
sbb
pop
adc
dec
sbb
imul
add
fidivs
cltd
daa
aaa
or
or
sub
add
or
lods
mov
ds
and
jg
jecxz
add
cmp
push
sbb
sub
aad
repnz
shr
pop
mov
pop
mov
pop
imul
shll
data16
movb
and
inc
out
inc
and
adc
inc
pusha
inc
js
jl
or
je
jl
pop
or
push
adc
iret
push
mov
inc
fisttpll
js
sub
fsubrl
dec
js
leave
mov
loopne
ja,pn
icebp
and
pop
xorl
aad
data16
loope
push
mov
xchg
js
dec
arpl
shrb
aam
pop
push
sub
jb
jg
cs
or
sub
sahf
sahf
loopne
push
das
das
jle
dec
in
lods
jo
sbb
dec
pusha
dec
pop
push
adc
adc
pop
pushf
wrmsr
imul
pop
sarl
sbb
es
sbb
push
jp
test
mov
pop
addr16
xor
jo
fs
data16
mov
jb
sbb
cmp
push
dec
jns
mov
mov
fadds
movsl
mov
dec
xor
pop
in
dec
test
cs
test
xor
ss
outsl
add
pop
sub
xchg
sub
adc
cmp
dec
push
or
les
push
or
xchg
icebp
add
movsb
push
leave
xor
dec
inc
jg
and
test
int3
and
and
lock
inc
xchg
mov
pop
dec
lock
adc
aad
adcb
cmp
aas
lods
cltd
loopne
xchg
jbe
andb
sbb
cmp
je
orb
adc
mov
or
pop
xchg
jmp
js
xorb
pop
and
sbb
rorb
pop
or
pop
sbb
cmp
cmp
and
cmp
xor
lret
mov
ds
mov
push
and
ret
mov
jo
or
dec
ss
mov
lcall
or
rcrb
or
adc
xchg
sbb
xor
mov
pushf
pop
mov
rcll
ficomps
icebp
dec
pop
enter
pusha
cmpsb
xor
and
fimull
jl
dec
data16
inc
lret
or
inc
into
and
inc
or
sbb
inc
dec
xor
stos
mov
es
clc
push
lods
mov
aaa
fildll
icebp
les
js
fwait
adc
pop
inc
sub
js
add
adc
or
pop
push
xor
dec
mov
jmp
pop
out
push
cwtl
mov
das
push
incl
in
leave
mov
shll
repnz
xor
mov
addl
lds
notl
call
adc
push
arpl
imul
addl
pop
inc
sbb
orl
hlt
add
xor
sbb
mov
jb
jo
adc
lahf
lcall
mov
mov
xchg
sbbb
push
jl
pop
push
dec
push
insl
jae
outsl
rorb
inc
and
adc
outsl
iret
lahf
dec
imul
ds
xor
lods
mov
push
lret
push
add
sbb
jg
or
xor
dec
xor
pop
xor
push
dec
pop
or
decl
push
or
add
push
pop
push
inc
push
or
push
sub
and
xor
mov
xor
pop
and
ds
aaa
dec
dec
dec
push
add
rol
out
mov
inc
inc
inc
pop
push
dec
dec
cmp
add
xor
dec
aaa
cmp
ja
push
dec
xchg
mov
ds
dec
push
push
sbb
jg
inc
dec
push
ds
and
pop
dec
add
inc
pop
xor
pop
add
xor
scas
cmp
dec
inc
sbb
push
sbb
ss
sub
leave
js
push
fdivs
xchg
sub
dec
ret
dec
into
push
adc
ret
pop
or
push
and
pop
xor
mov
cmp
and
sub
dec
dec
mov
cmc
icebp
test
rcll
ss
mov
inc
dec
inc
add
ret
out
loopne
and
loop
inc
es
sub
daa
outsl
arpl
add
xor
mov
xor
stos
sub
pop
mov
push
dec
cwtl
inc
loop
lods
push
outsl
inc
pusha
inc
and
shrb
test
inc
xchg
push
bnd
sub
aad
les
add
sbb
inc
pop
nop
sbb
pop
ja
movsb
adc
jb,pn
mov
lahf
jle
in
push
push
dec
push
adc
adc
add
out
mov
dec
add
xor
sbb
mov
out
cmpsb
inc
sub
mov
inc
aaa
jno
sti
shlb
ret
dec
pop
push
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
lcall
adc
jge
push
je
mov
andb
fwait
rol
fwait
in
dec
add
xchg
out
popf
rorl
and
sub
sub
decl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
call
push
arpl
push
sub
adc
or
cs
insl
sub
adc
or
or
lcall
leave
ret
sub
xchg
mov
data16
mov
call
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
mov
ljmp
dec
stos
fmuls
lret
rep
cs
arpl
test
incl
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
dec
inc
cmp
inc
cmp
cmp
arpl
dec
add
cmp
sub
dec
das
data16
xor
clc
jnp
sub
inc
jge
or
pop
inc
mov
pop
jne
dec
jno
inc
imul
insl
jp
daa
outsb
loop
jmp
sub
pop
gs
or
imul
addr16
and
jns
ja
call
sbb
xor
push
xor
push
and
mov
mov
aaa
pushf
sbb
inc
push
pusha
push
and
adc
push
add
push
ja
sub
arpl
aaa
pop
xor
pop
popa
jne
addr16
inc
and
sbb
and
das
xor
cmovae
and
ficoms
push
and
aaa
push
xor
pop
imul
xor
xor
xor
popf
in
inc
push
xor
xor
and
fstps
jbe
aaa
inc
push
inc
cs
inc
cmc
mov
scas
ss
cmovb
pop
ss
lahf
ss
lods
bound
inc
inc
daa
and
test
and
pop
push
push
or
add
cmp
mov
push
xor
fnstenv
mov
sbb
push
jbe
outsb
xchg
sti
ret
pop
dec
fdivrs
es
arpl
shll
cmp
fidivl
daa
cs
mov
jecxz
and
lret
jle
lock
and
dec
ss
push
orb
popf
or
mov
pop
sub
pusha
mul
sbbl
loopne
loopne
or
xor
lods
cmpsl
outsb
shlb
inc
jp
pop
xor
mov
les
push
push
pop
rcll
jp
sbb
in
sahf
push
mov
push
sbb
xor
and
int3
insl
or
popf
loop
sub
pop
lock
lock
mov
adc
push
mov
and
inc
pop
push
push
pushf
ret
scas
imulb
sub
cli
mov
gs
lret
jnp,pt
mov
dec
jmp
orb
lods
sbb
and
sbb
cmp
inc
popf
add
push
xchg
popa
mov
nop
adc
bound
push
push
or
test
outsb
pop
push
in
push
mov
fs
cmp
pop
aam
andl
loope
sbb
movups
cmp
daa
enter
and
pushf
enter
mov
lds
cmpsb
pop
adc
adc
pop
adcb
sbb
add
nop
mov
cmp
outsb
outsb
je
xor
js
int3
gs
xor
imul
in
insl
gs
cmp
ret
dec
inc
loopne
sub
into
and
mov
aad
arpl
push
mov
pushl
insl
loop
xor
push
push
out
decb
sbb
push
ljmp
je
pop
add
popf
insl
fisttpll
add
push
inc
adc
loope
notb
dec
add
or
pop
push
gs
mov
rcrb
xchg
je
and
mov
or
or
xor
ret
push
aas
cmp
les
xor
cmp
cmp
add
cmpsl
lds
push
shufps
cmpsl
ss
outsb
popa
call
xor
mov
fs
enter
push
out
shll
fcomp
push
cmp
lds
add
imul
mov
push
addr16
dec
daa
nop
xor
pop
outsl
lds
inc
sbb
sbb
pop
cmpsl
das
cwtl
lea
and
mov
push
dec
nop
or
cmp
add
mov
sub
hlt
add
fidivs
jb
pop
sti
and
pop
bound
pop
inc
jne
push
jne
xor
adc
hlt
outsl
adc
xor
iret
nop
pop
xchg
or
xchg
pop
cmp
inc
or
outsb
sub
jg
mov
sub
add
in
add
sbb
pop
push
pop
pusha
xchg
enter
mov
push
je
sub
dec
aaa
daa
adc
xchg
xchg
and
cmc
jbe
jo
out
or
or
push
outsl
imul
movsl
sbb
push
ss
mov
out
dec
mov
pop
cmp
sbb
dec
pop
cmp
push
aas
in
add
adc
adc
and
das
test
sbb
arpl
fisubl
push
test
adc
mov
sbb
push
xchg
push
mov
sbb
ja
add
dec
xchg
int3
cmp
mov
xor
inc
pop
pop
and
mov
xchg
xlat
pop
ss
into
sbb
xor
cmp
mov
int
cmp
jg
sbb
xor
iret
lods
or
xchg
or
dec
lret
xor
sub
push
pop
inc
push
sub
mov
push
dec
add
dec
inc
scas
sbb
and
sub
or
negl
jb
mov
pop
pop
pop
aas
xor
or
inc
out
fwait
lods
mov
push
pop
mov
cmpsb
and
mov
sub
sbb
dec
pop
movsl
insl
outsl
mov
mov
repz
outsl
dec
jg
push
aad
sub
and
and
test
pop
std
xor
pop
pusha
lgdtl
std
dec
push
pop
das
and
dec
push
sbb
push
call
jo
aas
adc
inc
dec
jnp
adc
mov
out
inc
and
jns
insl
and
pop
add
cmp
or
and
push
ss
shlb
gs
lods
push
pop
movsl
outsl
xchg
mov
test
and
addr16
dec
dec
je
popa
cmp
jmp
dec
outsl
and
sbb
adc
ds
inc
cmpsb
fiadds
punpckhwd
dec
outsb
push
je
or
imul
dec
dec
in
inc
mov
hlt
cmp
inc
dec
push
inc
pop
mov
inc
push
pop
repnz
and
jb
gs
es
fisttpl
push
mov
pop
daa
dec
inc
or
push
dec
jb
rolb
roll
dec
lret
cmc
and
pop
sbbb
mov
cmpsl
push
jle
ret
incl
xchg
subb
jno
push
clc
and
mov
adcl
mov
or
ret
jb
fimuls
fs
push
adc
scas
xchg
jae
push
test
jbe
insl
enter
enter
jnp
pushf
fcompl
jae
pop
idivb
push
push
or
iret
cmp
mov
inc
aam
cmp
push
push
pop
lahf
out
fisubs
add
cwtl
xor
pop
pop
outsl
dec
aam
mov
pop
cmp
addl
outsb
clc
sbb
dec
sub
addr16
das
push
nop
add
or
adc
mov
sub
dec
push
movsl
pushf
mov
and
pop
push
jl
inc
inc
dec
dec
je
push
xor
dec
add
push
pop
cmc
sbb
repnz
hlt
or
inc
fs
xor
scas
jnp
ret
and
adc
add
sbb
or
xor
pop
sti
test
cs
aam
or
js
ss
pop
pop
cmpsl
xchg
push
out
sub
sbb
sbb
sub
or
mov
fimull
jp
nop
pop
and
insb
xor
inc
subb
outsl
cmp
mov
rolb
subb
insl
pop
sbb
dec
test
movsl
pop
xlat
pop
inc
or
outsl
or
jo
aad
scas
sub
and
mov
push
clc
cs
dec
and
lea
adc
sbb
push
rcrl
outsl
sub
add
push
mov
inc
addr16
inc
outsw
insl
mov
in
ljmp
xor
push
mov
mov
push
inc
dec
dec
dec
inc
mov
outsb
jge
sbb
stc
sub
mov
ljmp
subb
outsl
imul
pop
mov
mov
and
push
insb
mov
mov
adc
push
test
cwtl
dec
push
push
push
mov
dec
scas
sbb
xchg
dec
inc
xadd
sbb
inc
pop
add
ja
mov
inc
idivl
inc
adc
cmpb
neg
divb
rorb
pop
inc
dec
add
loopne
push
mov
jecxz
xor
xor
fwait
xor
inc
add
lea
idivb
dec
movsb
aam
add
mov
push
lock
or
movsb
add
add
iret
sub
aaa
cmp
fwait
push
daa
test
push
aaa
js
test
insb
insl
outsl
pop
mov
inc
pop
add
jns
int3
aas
jg
fisttps
mov
sub
sub
xchg
sub
mov
add
push
mov
outsl
iret
daa
fcomps
clc
aas
push
js
push
test
enter
mov
enter
repz
inc
inc
ss
inc
pushf
andb
jns
hlt
cmp
stos
cmp
jns
test
push
cmp
sahf
jns
jns
cmp
cmp
test
lahf
out
out
in
movb
nop
mov
mov
repz
jl
inc
cmp
pop
dec
jae
or
or
test
jo
sbb
or
out
dec
inc
mov
lock
rclb
add
and
or
push
cmp
mov
adc
or
ss
dec
add
mov
jge
jnp
loopne
je
clc
push
cmp
push
jb
inc
mov
push
push
in
and
ja
nop
fisubrl
push
mov
popa
and
dec
pop
in
in
mov
outsl
aam
mov
inc
aaa
adc
test
cmp
adc
xchg
or
rcrl
outsl
add
leave
mov
inc
or
inc
jns
in
jo
mov
fbstp
das
in
and
cmp
in
ss
add
cmp
jb
dec
or
push
cmp
cmp
add
lds
cld
ret
leave
xchg
pop
xor
xor
cmpsb
idivb
aaa
lock
out
pop
add
pop
in
and
add
cmp
out
pop
leave
push
lods
pushl
enter
pushf
xor
test
enter
fldcw
cltd
sub
adc
cmpsl
jbe
mov
aaa
mov
jnp
or
add
fwait
mov
cmp
lock
fadds
pop
pushf
xor
imul
and
mov
add
enter
and
sub
xor
dec
push
or
sub
in
fwait
nop
ds
dec
fildll
ret
push
xor
fbld
cs
jo
and
nop
or
xor
jmp
jb
rcll
bound
roll
scas
fs
add
das
dec
aas
daa
add
sbb
adc
orb
xlat
push
aaa
inc
out
adcb
mov
fcmovnu
mov
idiv
aam
fsubl
addr16
ficoms
es
movl
fstps
inc
inc
push
pop
inc
mov
ret
cmpsl
fcoms
jg
push
mov
sarl
push
or
mov
pop
sbb
dec
ficoms
inc
dec
and
or
mov
add
divl
or
xor
inc
outsl
xor
push
mov
xchg
push
nop
xchg
daa
insb
fists
testl
aam
push
cmpsl
ftst
inc
enter
cwtl
js
repz
push
jl
xchg
push
sub
lock
or
dec
inc
xchg
rorl
lahf
xlat
or
test
adc
mov
or
jge
cmp
inc
xchg
test
sub
mov
lahf
xchg
adc
xorb
sbb
pop
sub
mov
testl
and
ss
dec
sahf
out
cld
add
inc
add
cmp
scas
loopne
push
xchg
popa
xorl
add
fcmovb
aaa
and
add
subl
js
inc
nop
addr16
adc
test
inc
leave
mov
sub
xchg
add
hlt
jg
jns
iret
pop
add
mov
add
fidivl
addr16
inc
cs
xchg
movsb
add
mov
bound
mov
mov
adc
push
sbb
loopne
xchg
ja
ret
outsl
add
push
mov
pop
adc
pop
mov
inc
ss
test
mov
and
adc
add
out
add
les
push
jb
loopne
add
xchg
or
sbb
xlat
add
push
sbb
sahf
iret
xor
or
dec
out
pushf
inc
daa
or
and
ret
add
pop
and
jl
cmpsl
jge
aam
push
inc
sub
dec
cmpsl
cmp
rcrl
in
movsl
or
xchg
xorb
scas
cwtl
xchg
or
aas
or
movsb
adc
fs
je
push
dec
movsb
xchg
or
outsl
add
ss
pop
or
in
out
in
mov
ljmp
ficoms
push
xchg
pusha
dec
sahf
jo
leave
mov
movsl
dec
pop
scas
add
and
lods
outsl
out
adcb
fwait
insl
sub
out
lahf
addr16
mov
or
in
cltd
nop
push
pushf
inc
and
daa
enter
or
dec
or
push
jl
movsb
dec
lfs
in
push
hlt
outsb
rclb
out
fsubrl
in
addr16
jbe
insl
and
pop
adc
das
sub
cmp
dec
jnp
push
and
cwtl
push
sarb
add
dec
sbb
sub
dec
das
mov
add
inc
mov
push
hlt
fnsave
xchg
jne
fimuls
in
scas
cld
data16
loopne
push
pop
xlat
data16
ret
popa
adc
xchg
les
push
dec
pusha
jle
mov
aas
fdivs
sbb
addr16
pop
fwait
insl
shll
cmpb
mov
adc
fcmovne
rorl
hlt
sbb
fists
sahf
out
lcall
cmp
repz
xor
mov
lcall
sub
mov
scas
rolb
dec
xor
out
push
cmpsl
ret
dec
pop
jns
iret
rep
testb
mov
cmp
repz
push
aaa
pusha
andl
repz
fs
jge
cmpsl
in
adc
push
popf
push
lds
out
stc
cmp
repz
out
daa
push
push
xchg
lret
sahf
out
push
cmp
fwait
iret
repz
lret
sub
cwtl
mov
sahf
out
ds
push
mov
jl
pop
mov
sahf
cmpsl
stc
es
push
subb
sub
lods
loope
pop
dec
sahf
cmpsl
stc
mov
pop
jg
cmp
repz
and
shl
lahf
cmpsl
stc
adc
mov
lahf
out
stc
sub
push
out
out
arpl
cmp
iret
repz
fmuls
gs
mov
jl
popaw
add
sub
out
sahf
push
js
into
or
sahf
out
cmp
imull
push
mov
inc
imul
sahf
out
inc
test
lahf
cmpsl
flds
jle
sub
stc
cmp
sbb
icebp
sub
jns
ja
scas
sub
mov
jl
dec
repz
jae
dec
je
add
lcall
int3
xor
cmp
rcrl
mov
sbb
jge
cmpsl
pop
lock
or
cmpsl
stc
mov
mov
stc
xor
add
mov
sarl
pop
jle
push
nop
and
out
ds
cwtl
fstpt
xorb
repz
fcomps
sbbl
lcall
fmuls
test
out
into
add
jl
out
rolb
fisttpll
mov
iret
roll
enter
stc
cmp
repz
mov
jl
cmpsl
push
or
mov
repz
iret
in
mov
jl
dec
mov
xchg
lcall
dec
xchg
js
xchg
xor
out
or
pop
and
int
lea
mov
inc
popf
repz
cmpsl
test
adc
lcall
out
imul
add
xor
fsts
mov
inc
cwtl
imul
push
and
pop
push
jae
fwait
dec
repz
scas
push
scas
imul
mov
jo
ror
jo
inc
xlat
push
loopne
sahf
adc
push
jbe
lea
add
cs
out
mov
mov
cli
ja
stc
mov
add
dec
add
out
jb
cmp
add
lods
nop
pop
add
pop
paddq
sahf
mov
sbb
inc
aas
xchg
or
pop
sar
lock
mov
icebp
ss
push
call
leave
mov
mov
hlt
inc
sbb
loop
stc
push
add
push
sbb
movsb
push
aaa
mov
ja
aas
or
test
aaa
pop
enter
scas
inc
pop
enter
xlat
pop
jb
mov
sbb
and
or
push
outsl
mulb
out
pusha
dec
aas
int3
fimull
push
sahf
push
aas
jbe
mov
loopne
inc
pop
out
fmuls
frstor
mov
fistpl
jb
je
jns
ss
aas
mov
sbbl
aas
cmp
test
xlat
incl
iret
rol
adc
dec
mov
aas
inc
mov
leave
mov
sarl
inc
pop
enter
incl
sub
aas
sbb
fcmovne
jnp
in
push
push
push
pop
inc
lret
push
insl
inc
pop
aad
ljmp
jecxz
mov
aaa
pop
jl
inc
popl
pop
cmpsl
mov
icebp
lea
mov
pop
iret
mov
rorl
cs
rorl
pushf
ljmp
sarb
lahf
dec
push
dec
leave
dec
mov
test
pop
xlat
adc
in
push
shrl
in
mov
hlt
mov
add
aas
xor
inc
lcall
aas
int3
in
je
pop
cmpsb
and
jb
push
xor
xor
sbb
pushf
mov
pop
add
movl
pop
pop
repnz
or
xor
inc
leave
out
in
adc
das
or
inc
sub
sbb
push
inc
dec
and
pop
and
inc
pop
sbb
add
mov
daa
xchg
jl
mov
in
cmpsb
bound
out
xchg
inc
repnz
mov
add
es
inc
pop
jnp
mov
jmp
out
repnz
pop
adc
push
add
in
repz
add
dec
xchg
pushf
pushf
pop
and
push
pop
pop
and
pushf
faddl
push
add
pop
stos
and
mov
fisttpll
and
scas
mov
xor
shl
add
sub
dec
mov
pop
outsb
xchg
push
shrl
push
in
fsubr
mov
inc
nop
xchg
dec
mov
mov
pop
ja
in
add
and
iret
jp
inc
in
jl
test
pop
sahf
xchg
xchg
add
jl
pop
push
mov
dec
mov
inc
adc
mov
in
lret
leave
stos
mull
movsl
cli
inc
lea
push
pop
jo
enter
xchg
sbb
dec
jns
aaa
jb
dec
cmp
add
out
sahf
out
add
lock
pop
jae
jle
xchg
or
sti
add
jbe
fwait
in
pop
sbb
daa
cmp
xchg
and
xchg
test
in
je
fldl
mov
out
addr16
push
and
leave
mov
pusha
and
jno
dec
pop
cmp
dec
dec
in
jns
xchg
jne
out
in
jge
lea
leave
repz
push
jo
pushf
pushf
pop
into
fisubs
pushf
pushf
out
les
dec
sbb
dec
dec
jb
enter
dec
cmp
popa
outsb
fstpl
cmpsl
insb
in
jbe
fstpl
je
jl
test
mov
pop
push
mov
push
add
fbstp
fcmovne
add
add
dec
das
push
inc
bound
mov
inc
iret
jl
pop
leave
lret
inc
insb
bound
push
push
mov
in
add
bound
leave
or
bound
fldl
daa
push
daa
inc
repnz
push
arpl
push
cmp
pushf
arpl
cmp
arpl
arpl
push
mov
xor
adc
dec
adc
dec
repnz
sahf
push
pop
inc
push
fs
in
lock
fs
xchg
jg
and
cmp
push
push
dec
xchg
push
lahf
fildl
push
pushf
fs
xchg
pop
mov
xchg
aam
in
add
call
fs
xor
sub
daa
dec
out
jb
add
test
das
aas
loope
push
punpckhbw
push
jle
das
das
das
das
mov
push
lahf
push
stos
push
iret
repz
mov
rorb
lret
or
repz
or
or
imul
push
add
out
sahf
out
adc
adc
sahf
out
sahf
adc
adc
dec
jns
out
adc
mov
sahf
out
sbb
xchg
cmp
negl
mov
push
and
push
loopne
xchg
pop
leave
fsubs
push
add
ss
inc
push
add
cmpsb
out
mov
add
insl
adc
cs
out
daa
daa
xor
mov
push
mull
jg
ja
pop
leave
les
cmc
mov
mov
ja
mov
adc
mov
and
lahf
out
push
lock
push
out
push
cs
imul
xchg
popf
addr16
daa
iret
cmp
mov
xchg
pop
and
ss
mov
dec
dec
es
imul
mov
and
nop
imul
insb
int3
xchg
in
je
or
mov
cmpsl
in
leave
addr16
loope
jb
adc
xor
mov
xchg
xchg
pushf
pop
xchg
push
insb
push
mov
push
lock
in
aaa
add
push
scas
int3
pop
jle
push
aaa
sbb
push
mov
lahf
fildl
int3
push
push
add
imul
imul
pop
shlb
in
fadds
imul
das
jo
push
jb
popf
sbb
iret
jne
iret
leave
leave
xor
add
add
or
xchg
daa
or
out
fldt
push
pop
push
pop
push
pop
jns
and
pushf
les
sbb
lods
sbb
push
insb
decl
andl
scas
loopne
pop
xchg
fiaddl
insl
mov
inc
mov
xchg
mov
jo
inc
xor
push
pop
pushf
push
pop
mov
pop
pop
enter
mov
cs
iret
aaa
leave
sub
rorb
outsb
sub
fs
daa
dec
pop
int
cmp
push
pop
inc
movhps
leave
xor
pop
ja
lods
inc
pop
xchg
je
les
cs
ja
outsl
sbb
psubsb
push
inc
pusha
outsl
seto
outsl
lds
and
test
repnz
fxch
lret
lret
std
pop
or
pop
push
pop
xchg
cmpsl
mov
push
pop
out
and
inc
dec
and
pop
je
xchg
xchg
xchg
fsubrl
popf
out
movsl
dec
jo
xchg
dec
es
repnz
push
pop
ljmp
jo
in
jo
add
incl
in
jno
daa
in
daa
pop
pop
pop
jl
stc
sbb
addr16
jl
jns
jns
test
pop
pushf
pop
jns
jns
movsb
pop
lods
pop
mov
mov
jns
pop
int3
pop
aam
fcompl
jns
in
in
pop
hlt
pop
cld
pop
daa
daa
daa
fisttpll
femms
or
daa
or
or
daa
daa
daa
daa
pop
push
add
daa
add
add
cld
and
mov
pop
sub
pop
call
pop
push
pop
jb
shll
jns
pop
jae
lcall
inc
mov
mov
cwtl
shll
cmp
add
sbb
psubw
cmp
or
sbb
push
inc
into
xchg
js
sbbb
nop
sahf
xchg
out
sets
push
mov
and
push
mov
mov
nop
sub
inc
je
pop
xor
add
or
insl
xchg
pop
call
movsl
xor
and
iret
arpl
fbld
daa
fisttpll
push
jnp
cmp
mov
mov
cmp
or
btr
xchg
mov
push
cmovle
adc
xor
shr
or
push
add
imul
call
test
pop
inc
jne
ja
pop
adc
push
daa
sbb
dec
leave
leave
or
out
cmc
jbe
out
push
pusha
out
or
xchg
out
push
adc
pusha
dec
sub
xchg
jl
pop
or
push
pusha
push
mov
sbb
pusha
pusha
push
pusha
pop
and
insl
xchg
add
pushf
pushf
mov
fsubrp
in
add
fabs
das
jmp
cmp
or
sub
mov
mov
push
push
popa
in
leave
or
pop
popa
popa
outsb
popa
fldl
jo
popa
das
test
mov
jb
dec
pop
mov
enter
jb
fsubrp
hlt
outsl
in
jae
push
out
or
push
or
repz
or
or
lock
repz
dec
or
ds
bound
addr16
cmp
iret
dec
data16
jb
rcr
lock
and
cmp
mov
enter
pop
push
mulps
popa
sahf
out
jns
imul
dec
orl
and
leave
out
sub
in
das
fidivl
fs
sbb
jb
fs
fs
mov
sub
dec
dec
dec
es
cwtl
mov
dec
mov
mov
push
fs
shlb
pop
leave
adc
add
les
inc
pop
jb
gs
cmp
sahf
xchg
into
leave
orb
cmp
add
jnp
fcmovne
leave
ror
ja
push
adc
sbb
ret
push
insl
movsb
addr16
inc
jmpw
push
pop
push
push
lods
in
dec
jmp
iret
or
jmp
out
daa
sbb
fcmovne
add
cmp
xchg
stos
mov
pop
shlb
xchg
and
data16
in
test
aad
dec
or
jb
enter
ljmp
xor
addr16
mov
dec
addr16
addr16
addr16
fmulp
xchg
and
andb
or
xchg
addr16
jb
jb
mov
jb
jb
lock
push
push
adc
sbb
pop
jge
inc
js
inc
push
cmp
es
push
push
mov
ja
xchg
xchg
mov
pop
icebp
jmp
add
xchg
xchg
imul
pop
repnz
mov
imul
jnp
incl
cmpsb
push
das
cmpsb
imul
dec
es
add
xor
inc
adc
add
decl
pop
call
dec
cmpsb
imulb
clc
iret
mov
into
repz
add
jns
mov
out
out
negb
add
verw
push
jns
enter
imul
add
out
es
movl
iret
repz
xchg
subb
popa
add
stc
pushf
cmp
add
pop
and
insl
movsl
push
add
shrl
cmp
ja
jmp
insb
jg
fists
insb
cs
cmp
pop
insl
in
pop
addr16
out
jns
add
and
mov
icebp
xchg
xchg
mov
rcrl
aad
push
insl
pop
idiv
cwtl
cmp
fisttpll
pop
add
daa
add
push
inc
idivb
out
aas
insl
fcmovne
push
fwait
rcr
bound
iret
jae
sahf
jb
fidivrs
add
mov
daa
daa
xchg
lcall
aas
stos
insl
mov
mov
outsb
mov
pop
ud2
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
sahf
xchg
add
ficompl
loop
out
sahf
sbb
sbb
sbb
jns
add
or
jae
repnz
and
sbb
repz
and
and
mov
sub
inc
fwait
in
pop
outsb
jbe
test
cmp
into
cltd
pop
mov
jl
push
add
lret
cmovnp
add
xlat
mov
add
sahf
faddl
nopl
jb
stc
inc
test
pop
jns
out
pusha
xchg
pop
out
mov
scas
orb
out
sahf
mov
nop
or
jns
or
mov
outsl
pop
xadd
dec
sahf
out
adc
fadds
adc
xchg
and
into
out
or
jo
xchg
daa
daa
adc
push
jo
iret
sbb
jb
jo
jo
movb
push
mov
jle
xchg
iret
das
leave
iret
rcrl
iret
fabs
jmp
mov
mov
jg
dec
xchg
add
cmp
jo
daa
pop
adc
dec
mov
jno
jno
xchg
leave
leave
inc
jno
jno
xchg
cmp
xchg
nop
call
mov
jb
rcr
out
jno
test
cmpsl
add
jb
jb
mov
cltd
mov
dec
pop
fs
flds
mov
jb
jb
in
aaa
lock
cmpsl
mov
loopne
ljmp
stc
lock
sub
pop
ss
sub
cmovb
nop
xchg
out
nop
mov
aad
adc
xlat
fisttps
cmp
jb
add
or
adc
sahf
out
add
and
out
in
sub
cmp
in
in
sahf
or
pop
pop
leave
repz
fs
repz
je
jl
test
cmpsl
jmp
jae
sbb
pushf
nop
jae
jae
psubusb
or
scas
loopne
call
scas
mov
push
mov
es
push
xlat
mov
loopne
decl
sbb
je
sub
jmp
add
push
mov
inc
je
mov
roll
arpl
paddusb
jb
xchg
je
scas
das
enter
sbb
add
jmp
xchg
sbb
enter
jne
cmp
pop
add
push
inc
out
lods
fisttpll
pusha
aas
ja
sub
or
sbb
int
or
pop
sub
pushf
push
aas
fsubrs
rolb
fs
aas
out
xchg
out
add
xorl
sahf
ja
push
or
or
cmp
fucomi
lock
jbe
xchg
jl
scas
adc
lea
outsb
mov
sbb
andps
pop
dec
sahf
out
add
add
rorl
pop
je
push
or
push
or
rorb
and
enter
jbe
jbe
das
setb
adc
ja
hlt
and
push
add
sbb
dec
mov
ja
ja
mov
dec
ja
pop
push
mov
and
xor
jo
pusha
fisubl
mov
push
inc
sub
sub
jmp
push
out
jo
daa
aaa
pushf
dec
int3
aam
fucomip
daa
xchg
iret
add
adc
push
leave
and
xchg
mov
js
push
aas
push
adc
mov
inc
nop
sbb
frstor
or
fiadds
xchg
xchg
js
mov
scas
js
fwait
pop
lret
mov
mov
nop
cmp
cld
or
jns
ja
in
or
and
jp
mov
jns
jo
enter
jns
jns
jns
pop
inc
dec
jg
jns
jns
gs
sbb
jnp
xchg
xchg
repz
cmpsl
push
push
mov
jb
aad
push
mov
jns
adc
daa
dec
xchg
incl
jp
dec
mov
xchg
push
inc
xor
mov
ret
jo
das
js
cmpb
in
cmp
jp
jp
clts
push
loopne
and
sbb
mov
pop
sbb
push
iret
pusha
push
inc
rclb
das
fsub
enter
hlt
add
jnp
fdivl
jb
jnp
pop
push
pop
and
enter
jnp
jnp
vmwrite
lds
pop
dec
jnp
psubb
hlt
and
mov
sbbb
xchg
xchg
mov
add
loopne
xchg
enter
jnp
psubb
xor
in
adcl
cmp
movsl
filds
xchg
sub
push
das
loop
inc
push
jl
pop
push
inc
mov
pop
inc
jl
jl
jl
jl
add
jb
jge
pop
mov
call
out
dec
sahf
ja
push
add
stc
xchg
loopne
repnz
and
mov
xor
push
aas
jns
cmp
push
inc
xchg
xchg
xchg
xchg
xchg
pusha
push
mov
add
pop
leave
xchg
mov
outsb
daa
mov
in
in
idiv
lsl
add
movd
xor
rcrb
or
jmp
xchg
mov
jle
addb
pop
iret
xchg
jae
into
leave
stos
les
add
pop
str
fdivrl
jle
jle
add
and
or
jg
jg
xchg
adc
addr16
jb
cmp
push
add
dec
outsb
js
jg
jg
xchg
out
xrelease
nop
cmpsl
push
rcrb
dec
cs
daa
ret
cmpsl
dec
ds
lret
rcll
cmp
cltd
idiv
push
orb
iret
jae
movhps
push
add
outsb
repnz
and
stos
mov
iret
in
xor
pop
addb
mov
add
cltd
mov
leave
inc
scas
mov
ror
xchg
or
ficoml
inc
sti
shll
pop
push
xchg
jbe
addr16
pop
push
fmull
fcmovbe
ja
cltd
addr16
fs
adc
and
adc
add
ss
push
xor
jne
and
daa
inc
orb
ss
popa
and
pop
pop
loop
cmp
lsl
mov
orb
das
aas
filds
cmp
ror
mov
fiadds
cmp
out
lock
daa
fistpll
clc
add
in
daa
es
or
in
sbb
xor
in
jmp
or
iret
repz
dec
ds
push
pop
pop
sbb
leave
repz
sbb
push
sbb
cmp
js
subl
addr16
dec
push
push
or
or
fs
pushf
xchg
mov
add
pushf
push
sbb
lock
iret
test
add
mov
pop
add
daa
push
out
in
push
or
add
femms
adc
push
mov
test
out
icebp
repnz
adc
and
leave
and
loope
repnz
test
test
rcrb
test
push
mov
sub
sahf
jg
cmpps
dec
outsb
iret
lret
pop
fidivrl
test
pop
into
mov
pushf
push
add
test
test
xchg
and
test
xchg
xchg
jns
pop
sub
xor
jns
xchg
out
inc
dec
push
push
jl
js
pop
punpckldq
xchg
sbb
xchg
test
pushf
dec
mov
addr16
pop
push
bnd
push
popl
test
sbb
jb
fildl
xrelease
inc
mov
xchg
pop
mov
scas
sbb
das
daa
xchg
xchg
push
or
dec
mov
scas
or
xchg
xchg
and
and
fs
mov
xor
lods
xchg
mov
mov
das
pextrw
pop
or
int
shll
push
inc
pop
dec
fdivrl
ret
add
xor
js
inc
sbb
or
scas
push
incl
mov
push
enter
xchg
cmp
enter
enter
jb
push
js
push
je
mov
aas
out
push
hlt
xchg
fstpt
aas
mov
pop
xor
pop
clc
das
mov
or
repz
and
add
cmp
inc
or
dec
sahf
out
or
outsl
setae
popa
imul
jns
out
mov
in
pop
mov
add
mov
outsl
daa
adc
cmp
lock
adc
adc
adc
mov
int3
xchg
mov
xchg
push
clc
orb
lock
dec
mov
pushf
out
add
lahf
push
repnz
add
push
fisttpl
jecxz
jmp
repz
push
loope
fidivrs
add
adc
push
push
movsb
inc
mov
inc
dec
repnz
mov
mov
sbb
mov
mov
xchg
add
leave
jae
rolb
outsb
clc
cwtl
and
movsl
push
iret
repz
jnp
xorl
cmp
mov
dec
sahf
push
mov
push
or
leave
repz
cmp
ret
lret
daa
mov
fimull
adc
movsl
lea
inc
mov
sbb
outsb
rdtsc
cmp
pop
mov
fucom
arpl
packssdw
dec
dec
dec
outsb
movd
dec
dec
jecxz
mov
sub
outsb
daa
dec
das
insb
nop
mov
jns
dec
fsub
sbb
imul
clc
scas
sbb
push
popf
cmp
repnz
push
and
cmp
and
dec
jns
leave
stos
add
push
daa
mov
push
push
add
cmpsl
cmp
test
nop
mov
and
nop
and
sub
inc
fwait
cmpsb
nop
andps
leave
outsl
jge
dec
sahf
out
sahf
add
add
and
or
in
loop
addr16
xchg
mov
enter
add
pop
xchg
cmp
in
xchg
dec
xchg
push
das
jbe
dec
das
aas
loopne
xchg
pop
xchg
cmp
in
xchg
sahf
mov
cmpsb
or
popf
cmp
scas
or
mov
lahf
sahf
pmaxub
xchg
adc
daa
adc
stc
fldenv
daa
add
add
pop
or
adc
movsbl
xchg
pop
pop
pop
pop
cmp
xchg
pop
xchg
pop
pop
pop
pop
pusha
xchg
imul
pop
pop
pop
xchg
sahf
xchg
repnz
pop
pop
cmpsb
xchg
scas
xchg
outsl
mov
repnz
repnz
repnz
xchg
xchg
cmc
xchg
std
xchg
iret
jnp
testb
push
pop
adc
push
sbb
cmp
repz
and
and
repz
repz
and
cmp
push
daa
pop
sub
mov
sub
sub
loop
jns
mov
dec
xchg
xchg
adc
stos
data16
movsb
into
xchg
push
pop
lahf
outsb
fcomi
rclb
loopne
cmp
xchg
xchg
call
repz
mov
push
add
cmp
add
in
pop
out
xchg
or
lods
push
add
das
test
pushf
fmull
mov
dec
dec
inc
sahf
or
dec
dec
dec
pop
ja
popf
sahf
out
dec
movsl
shrd
mov
leave
repz
mov
aaa
jns
aad
repz
sti
cmp
cltd
mov
and
pop
jbe,pn
cmp
sbb
sbb
out
in
mov
in
and
mov
outsb
daa
divl
pop
xchg
aas
and
jae
cmp
dec
push
xor
dec
cmp
xchg
cmp
sub
scas
mov
mov
out
mov
cmp
int3
icebp
in
fists
lcall
adc
inc
push
mov
fwait
in
mov
iret
fcmovne
leave
inc
mov
popf
test
sub
fimuls
loopne
cltd
mov
cltd
dec
cltd
or
dec
inc
push
mov
xor
and
cltd
cltd
psllq
leave
mov
sahf
xchg
fcmovne
ret
fsub
or
aaa
jns
ud2
stc
or
cmp
stc
add
bndldx
sub
cmp
iret
adc
adc
daa
iret
jae
adc
push
daa
iret
jae
jne
sbb
cmp
xchg
sbb
cmp
mov
pop
int
repnz
fsubs
jecxz
mov
mov
setnp
fwait
sub
adc
out
pusha
push
add
or
loope
xorb
out
fwait
fwait
ud1
mov
fwait
das
enter
out
rolb
fsub
cmp
out
call
out
sbb
or
pop
btc
pop
decb
pushf
adc
daa
iret
adc
xor
adc
into
repz
lar
dec
add
outsl
or
cmpsb
repnz
sbb
inc
inc
ss
mov
mov
mov
es
cmp
add
cmp
setae
js
pushf
ljmp
test
inc
pushf
pushf
mov
in
push
xchg
out
out
psadbw
ds
sbb
mov
cmp
nop
xchg
pop
fs
and
dec
dec
je
xchg
fmull
sahf
pushf
pop
lahf
cmpsl
scas
popf
xlat
cmp
daa
mov
mov
in
repnz
or
mov
in
enter
sahf
or
mov
xor
cmp
daa
xchg
leave
in
in
jo
js
xchg
leave
inc
repnz
mov
pop
jb
push
mov
mov
xchg
or
testb
ds
jg,pn
and
mov
and
addr16
cmovns
in
push
add
cmpsb
add
leave
inc
repnz
push
cld
test
xchg
pushf
xchg
mov
popf
dec
and
bswap
insl
xchg
xor
lahf
xchg
xchg
fisttpll
push
daa
adc
jns
sahf
out
add
sub
xor
mov
fistl
mov
fildll
jne
jge
test
fists
jbe
fbld
mov
xchg
je
or
fdiv
mov
in
in
call
xchg
add
int3
sbb
jae
sub
add
inc
mov
mov
data16
jbe
jbe
leave
leave
inc
repnz
cltd
mov
test
pop
roll
rol
or
mov
daa
out
add
mov
mov
inc
cmp
sbb
push
mov
mov
cmp
rcr
fisttpl
cmp
psllw
pop
setle
repnz
add
push
pop
sbb
or
or
or
jb
out
or
mov
repz
push
push
mov
outsl
andb
das
das
das
das
lods
mov
int
das
das
das
das
fsubs
stc
mov
add
shld
and
pop
nopl
aas
leave
leave
leave
leave
sbb
sbb
iret
leave
leave
leave
push
adc
iret
repz
cmp
ja
push
pop
push
xor
movsl
or
aas
outsb
daa
fnsave
cmp
jb
fmulp
repz
jge
push
cmp
cmp
cmp
jns
mov
mov
sahf
out
aad
loopne
jmp
repz
out
testb
inc
decb
out
in
inc
pop
dec
push
dec
pop
mov
dec
outsl
cmovge
iret
repz
test
out
push
cmpsb
push
mov
fmull
out
push
rcrb
pushf
pushf
pushf
call
jns
in
cmpsb
subps
popf
cmp
inc
cmpsb
fisttps
je
cmp
ja
enter
jb
pop
cmpsb
cmpsb
cmpsb
sbb
das
xor
mov
cmpsb
out
cmpsb
outsl
in
out
jae
push
pop
call
jmp
cmpsl
pusha
cmpsl
repnz
push
adc
and
lock
jg
cmpsb
add
or
adc
push
dec
cmpsl
sahf
out
pop
push
sbb
sbb
sbb
cmpsl
push
sbb
jo
dec
dec
andb
push
mov
int
and
mov
enter
pop
pop
in
call
pop
test
mov
or
repnz
add
nop
mov
sub
xorl
in
js
add
test
add
dec
aaa
jns
clts
jo
jns
daa
daa
mov
subb
and
mov
lods
es
das
mov
pop
nop
stos
es
pop
call
dec
pop
clc
out
stos
mov
push
add
adc
test
leave
mov
cmp
inc
pushf
mov
push
test
mov
mov
in
mov
mov
scas
mov
lds
shl
jns
out
fisttpl
out
mov
sahf
icebp
or
pop
stos
adc
cmp
xor
daa
rcll
push
pop
jp
das
cmp
iret
repz
stos
push
sbb
cmp
sbb
dec
push
mov
and
mov
and
out
outsl
mul
stc
add
outsl
femms
daa
sbb
jae
popf
and
sub
pop
add
push
add
out
xchg
add
loop
test
xchg
test
shl
enter
jmp
lods
sbb
pushf
iret
sub
fisttpl
jns
syscall
or
or
dec
or
push
lods
pop
lods
cmpsl
fildl
data16
jno
movups
adc
sahf
out
xchg
adc
jae
cmp
les
int3
movhps
push
pop
fmull
and
cmp
in
in
hlt
push
and
sar
daa
add
iret
or
daa
fidivrs
fwait
in
lods
add
and
jns
out
das
sub
add
mov
pushf
inc
jle
inc
add
movsb
imul
pop
ret
cmp
out
and
lods
pop
mov
xchg
xchg
lods
mov
push
dec
lods
in
frstor
das
out
dec
lods
jns
pop
fmull
jg
scas
or
add
jns
out
push
pop
cvtpi2ps
cmpsl
inc
push
out
xchg
push
jo
js
subb
scas
push
add
iret
jae
cmp
lods
mov
ret
repz
int
fdivrs
cs
or
cmp
lahf
push
scas
call
scas
in
xchg
and
daa
scas
xor
cmp
pop
sbb
scas
scas
mov
lahf
test
mov
add
daa
iret
repz
jg
xchg
insl
rorl
fucomi
or
xchg
push
add
jns
aaa
jb
mov
ds
add
inc
dec
pop
invd
pop
repz
cmp
or
jns
repz
or
or
shrb
movsl
pop
invd
adc
leave
leave
leave
mov
shll
pop
push
pop
out
push
sbb
in
leave
std
or
cmp
repz
inc
push
jb
cmp
and
cs
mov
movq
and
iret
es
adc
repnz
mov
mov
mov
fidivl
in
xchg
push
adc
xchg
fdivrs
jb
mov
mov
bswap
repz
inc
push
push
dec
pop
push
mov
or
pshufw
jae
jb
orb
cmp
cwtl
adc
push
out
test
mov
mov
das
rorb
enter
cmp
repz
rcrb
fcomps
lds
lock
mov
mov
mov
mov
pop
sbb
xchg
out
and
es
cmp
cmp
sub
dec
repz
sahf
ja
push
sub
push
sub
jo
jo
jbe
cmp
nop
cwtl
push
mov
xor
dec
scas
ss
push
fldl
sub
inc
push
inc
enter
sbb
xor
mov
adc
sbb
out
scas
je
push
add
aas
inc
push
sub
mov
mov
or
scas
pop
mov
pop
stos
inc
xchg
dec
aaa
fadds
sub
das
mov
ret
testl
push
push
inc
cmp
repz
repz
sub
sbb
imul
enter
out
sahf
in
aam
repz
out
int3
enter
mov
mov
mov
out
sahf
mov
jns
out
push
dec
inc
sub
adc
lock
add
clc
xchg
sub
inc
outsb
daa
iret
cltd
filds
add
jns
out
sbb
dec
sahf
out
or
or
jbe
xchg
fdivl
or
rorb
in
adc
adc
adc
and
in
jbe
pop
inc
inc
push
fistl
push
xorps
out
mov
jo
jb
pop
fmull
pop
andb
cmpb
fdivrl
addl
repnz
mov
jo
loopne
aas
into
aas
xlat
pop
sbb
xchg
adc
jb
inc
add
adc
test
push
inc
int3
mov
sbb
dec
mov
cmp
pop
mov
fsts
adc
xor
add
movsb
add
cmpb
cmpsb
fisttps
mov
stos
mov
jle
test
shll
fldenv
cmp
jg
pop
inc
mov
iret
mov
in
call
popf
inc
jle
adc
push
ficompl
mov
pop
fisubrl
xor
fcomp
loopne
jb
jle
mov
xlat
inc
xchg
or
jb
addb
push
or
imul
mov
inc
pop
pop
jle
mov
out
pop
pmovmskb
add
mov
das
push
cmp
or
pop
or
add
cmp
mov
iret
push
or
adc
cmpsl
stc
aam
adc
out
push
sbb
iret
repz
hlt
int
mov
iret
repz
push
cmp
sub
jbe
fmul
mov
or
jns
testl
jns
jp
cmp
jns
cld
dec
out
inc
out
pop
xor
push
sub
call
mov
jle
aas
mov
inc
pop
orl
push
rcrb
jg
and
push
dec
inc
mov
insb
jbe
jae
xorb
addr16
fwait
test
push
push
push
pop
inc
jg
dec
divl
inc
push
xchg
lea
aaa
push
aas
pop
pop
adc
pop
xor
fisubrs
fistl
sub
jg
mulb
and
inc
paddusw
cmp
sub
add
dec
pop
xor
push
push
roll
pop
aad
mov
adc
inc
roll
iret
repz
push
sbb
sbb
rorl
jecxz
push
mov
ds
loop
xor
iret
repz
adc
lock
data16
ror
das
sub
out
in
push
and
shrb
jns
jnp
rcrl
adc
hlt
iret
repz
out
fcoms
push
rcrb
enter
cmp
rclb
and
cmp
repz
mov
lods
test
movsb
es
addr16
pop
clc
mov
and
jnp
push
daa
xor
xchg
sbbb
cmpsb
push
xor
add
outsb
mov
iret
jnp
push
cmp
pop
js
imul
repz
xor
dec
insl
add
push
pop
ja
cmp
repz
mov
bnd
jmp
out
dec
das
push
dec
insb
fadds
pop
push
add
mov
inc
dec
repnz
inc
pushf
or
in
ds
ret
mov
adc
pop
stc
and
mov
leave
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
or
outsb
dec
leave
fwait
xchg
and
and
add
out
aas
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
sar
ljmp
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
std
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
jg
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
cmp
test
and
cltd
jne
fldt
cmp
jno
shlb
out
dec
ljmp
andb
movsl
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
mov
idiv
dec
dec
gs
std
orl
pop
ficomps
frstor
popa
dec
push
pop
pop
je
cmp
inc
je
inc
inc
push
dec
ljmp
in
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
xchg
fs
pushl
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
jmp
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
dec
and
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
push
jg
cli
test
xor
leave
mov
insb
fdivs
jne
cmc
jmp
iret
or
shrl
push
ficoms
push
xlat
mov
dec
push
popa
sarb
and
mov
cltd
xchg
mov
mov
jg
pop
pop
mov
or
and
or
adc
stos
sbb
jmp
nop
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
fisttps
mov
js
stc
int3
test
xchg
sbb
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
jmp
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
sbb
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
jmp
add
inc
movsl
fisttps
fadd
shll
jmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
jmp
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
decl
lock
add
inc
push
imul
xorb
sbb
push
imul
call
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
pushl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
dec
mov
popa
lret
sbb
outsl
and
ja
int3
add
mov
mov
es
lds
or
add
mov
mov
xlat
ret
shlb
scas
ficomps
ret
es
lcall
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
ljmp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
mov
push
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
mov
pusha
mov
fidivrs
mov
out
mov
jmp
mov
xor
jmp
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
dec
jmp
outsl
sub
mov
or
sbb
add
jne
inc
push
push
pop
js
mov
and
jo
pop
push
daa
pop
push
les
xchg
repz
jmp
push
xlat
fcomp
fcmove
repz
fcmovnu
fstp
loop
repz
cmp
in
jmp
ljmp
iret
repz
div
clc
stc
cmpsb
sbb
repz
sti
cld
daa
adc
cmp
push
xchg
adc
cmpl
popf
or
add
jmp
xchg
mov
bound
cmp
add
inc
arpl
inc
insl
in
aaa
xchg
cmp
push
popa
je
push
mov
push
in
cltd
out
and
bound
xchg
sub
pushl
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
cmp
xor
xor
bound
notb
jbe
pop
insb
push
rolb
mov
cmpsb
fs
orb
aas
mov
insb
gs
push
dec
inc
push
outsl
iret
add
add
push
inc
push
sub
dec
sbbb
shll
push
or
fs
push
push
je
scas
ss
fs
and
mov
movsl
inc
aas
leave
jbe
je
sarb
gs
jbe
inc
inc
push
mov
mov
arpl
cmp
call
insb
popa
jns
shlb
insb
and
push
imul
stos
mov
inc
push
and
cmp
push
in
or
cltd
and
jae
inc
inc
stos
dec
push
int
imul
pop
inc
aas
and
dec
inc
pop
es
xor
push
je
mov
jnp
jo
inc
inc
add
ds
xor
sarb
push
jae
mov
xor
rcll
cmp
inc
mov
add
insl
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
clc
mov
out
xchg
into
pop
jo
mov
or
cmp
aas
aaa
dec
scas
inc
cltd
dec
shlb
in
push
add
ss
and
push
outsl
pop
fidivl
orb
ljmp
cmp
mov
roll
pop
adc
rclb
inc
xorb
dec
add
frstor
add
push
xor
jo
lahf
sbb
outsl
test
mov
mov
add
jno
stos
sbb
push
lds
dec
xor
pusha
in
nop
test
pop
cmp
mov
mov
jae
add
sarl
jo
push
push
dec
adc
jns
and
push
popf
das
inc
jb
aad
or
gs
test
arpl
insb
aas
inc
mov
inc
push
bound
lods
popf
push
jbe
dec
pop
push
shll
addr16
mov
push
dec
xor
cwtl
mov
xor
das
xor
in
add
fs
push
or
nop
push
outsb
jg
add
adc
lods
sub
push
mov
inc
dec
pop
mov
xor
cmp
inc
push
test
sbb
jmp
rclb
inc
push
inc
cmc
sub
bound
outsb
arpl
and
mov
je
adc
cltd
pusha
in
insl
movl
add
adc
xlat
pushf
or
add
push
daa
mov
and
and
or
shrb
pusha
sub
push
mov
dec
nop
dec
jg
ret
push
add
push
in
lcall
pop
sub
dec
push
push
clc
cwtl
popf
stos
clc
stos
jle
sbb
pop
test
cltd
decl
lods
fistpl
pusha
xchg
addr16
push
push
leave
and
xor
inc
pop
xor
test
std
ljmp
sar
add
cmpb
pop
les
fbstp
jle
leave
mov
mov
mov
inc
sbb
mov
inc
or
out
lods
sbb
cli
push
test
enter
push
ljmp
mov
fsubp
stos
test
daa
cmpsb
mov
inc
mov
in
sbb
pop
mov
pop
mov
lcall
jb
loopne
cwtl
mov
xlat
or
sbb
je
sbb
fisubl
imul
xchg
sti
and
push
or
test
jb
sbb
and
sub
mov
xchg
push
xchg
push
into
push
jb
inc
jge
das
xchg
mov
and
pushl
je
imul
cmp
add
sahf
ret
pop
xor
loopne
dec
inc
movsb
cmpsb
sub
scas
or
push
mov
sti
nop
jo
cld
mov
pop
pop
or
dec
pop
add
lods
adc
aam
stos
cltd
or
loop
xor
imul
or
pop
jmp
dec
mov
sub
cmpsl
xchg
mov
mov
fs
loope
lods
daa
mov
xchg
lcall
or
jle
xchg
fs
aaa
mov
in
iret
mov
aaa
and
mov
add
cmp
repz
rcl
push
into
outsb
dec
out
test
mov
or
mov
sub
add
inc
addr16
inc
ror
jae
int
mov
xchg
cwtl
mov
xor
mov
in
pusha
mov
repnz
incl
mov
add
mov
dec
into
pop
jbe
sub
jae
call
add
jmp
sub
sub
stc
xchg
sub
inc
mov
push
lods
adcb
movsb
mov
jmp
lcall
jle
or
pop
repz
mov
out
mov
inc
fisttpl
ljmp
stos
gs
xchg
movsb
cmpsl
lds
or
insb
push
cmpsb
in
aaa
mov
decl
outsl
cmpl
pop
arpl
rcll
sarb
rclb
shrb
int3
or
ljmp
jnp
subl
cmpsb
mov
sbb
popa
movsb
out
stc
jns
rcl
sbb
es
xchg
lods
outsl
mov
dec
sbb
incl
in
or
inc
leave
insl
xor
sub
sbb
mov
adc
mov
cld
movsb
pop
jmp
mov
movsb
and
xchg
popl
sub
out
divl
sub
or
int3
cs
scas
inc
arpl
jmp
imul
sub
dec
aam
lods
pminsw
mov
pop
cltd
cmc
jo
cli
xchg
mov
call
pop
roll
cmpsb
lock
adc
adc
mov
int3
imul
inc
sub
cmp
lcall
add
sbb
add
cld
dec
pop
inc
inc
fsub
push
fwait
add
xor
js
fwait
hlt
sti
dec
jmp
cmp
test
adc
xor
push
aaa
push
or
je
call
push
cltd
xor
pusha
lret
test
cs
xchg
pop
pushf
xchg
cmc
mov
lcall
shlb
xor
inc
std
jbe
cmpsl
inc
inc
test
nop
mov
mov
jno
mov
sbb
xchg
or
fdivp
mov
orb
cmpsl
add
cmp
adc
mov
sbb
pop
mov
loopne
int3
inc
lcall
insl
mov
mov
out
dec
dec
pop
pop
push
inc
add
xchg
cmp
scas
jl
mov
decl
ret
ror
mov
das
mov
popa
fsubl
pushf
push
jmp
push
out
hlt
mov
ud1
push
in
cwtl
repnz
push
xor
and
jl
jmp
mov
xchg
pushf
sbb
je
dec
sahf
int3
shl
ss
cmc
sbb
sbb
adc
jg
fadds
mulb
mov
arpl
es
jno
push
jecxz
bound
dec
mov
incl
jmp
bound
lock
scas
dec
mov
fisubrl
fcomp
dec
insl
dec
in
sbb
incl
mov
orps
out
jb
test
dec
dec
pop
lahf
cltd
js
xchg
out
es
imul
adc
outsb
add
ds
jle
sarb
sub
dec
mov
mov
push
cmp
fisubrs
mov
inc
pop
imul
add
push
inc
lcall
add
hlt
jae
jle
jns
inc
getsec
mov
ljmp
call
adcb
cmp
in
js
pop
adc
hlt
push
loopne
cltd
addb
xor
aas
ds
or
incl
dec
aad
or
aaa
dec
test
out
inc
lret
fbstp
pop
repnz
dec
push
daa
test
xchg
add
test
pop
adc
cld
and
sub
das
bnd
jmp
sbb
ficoms
xor
testl
or
jns
call
or
xchg
cmpsb
sti
hlt
sub
xchg
stos
rorb
orb
aaa
pop
lcall
mov
sub
dec
out
iret
xor
call
loopne
pop
flds
sahf
out
pusha
shrl
inc
cmp
pop
test
call
sub
mov
sbb
cmp
xchg
shlb
outsb
sbb
jecxz
xor
decl
or
add
hlt
cs
xchg
jno
shll
xchg
lcall
push
add
xchg
daa
push
popa
pushf
pop
and
cltd
outsl
pop
dec
push
in
dec
js
pushl
cmpsb
push
insl
shlb
mov
push
sub
lret
cmpsb
ljmp
pop
xor
mov
dec
or
jle
sbb
push
ja
jl
popf
mov
es
mov
pushl
cmp
adc
mov
push
mov
call
or
dec
in
jle
loopne
out
sbb
lods
adc
int3
jbe
jg
inc
pop
sbb
inc
and
dec
pop
fiadds
cmpsl
mov
inc
and
push
insb
loopne
jmp
scas
or
shll
jb
adc
xchg
mov
call
mov
and
pusha
mov
neg
inc
rolb
push
ror
pushl
popa
pop
sbb
adcb
shr
xchg
mov
mov
jl
pop
and
iret
inc
adc
push
pusha
adc
pusha
add
or
leave
aam
and
lcall
cld
std
das
imul
xor
xor
xchg
mov
fistl
hlt
aaa
mov
push
cld
incl
mov
ret
clc
xor
inc
push
popa
std
ds
andb
call
jp
xor
sub
push
pop
sbb
mov
loopne
pop
mov
insb
mov
movsl
mov
cs
decl
sub
inc
and
and
jecxz
mov
lock
mov
add
adc
out
push
lock
jno
cmp
sub
scas
int
pushl
inc
mov
aas
sbb
fdivrs
xchg
fiaddl
rcrl
mov
mov
sbbb
call
dec
ss
aam
push
jo
in
and
clc
call
mov
xor
inc
ret
sbb
sbb
test
test
mov
incl
stos
xor
js
rclb
in
mov
cli
mov
push
mov
sub
popa
push
jle
popa
pop
mov
clc
pop
jb
fdivrs
lods
insb
das
push
sub
data16
xchg
push
mov
pop
xorb
cmovp
stos
jno
sub
js
decl
pop
add
mov
mov
jnp
or
mov
jmp
clc
rol
ds
jl
ret
xor
ds
inc
jecxz
or
dec
sbb
mov
mov
pop
mov
gs
xchg
inc
mov
popf
push
cmpsl
pop
iret
out
mov
pusha
icebp
idivl
imul
outsb
outsl
mov
icebp
jmp
pop
jno
push
insb
mov
pop
or
fwait
jns
loopne
in
test
xorl
ljmp
cmp
out
mov
lcall
fisttps
cmpb
push
inc
jbe
sub
xor
pop
xchg
push
dec
inc
mov
push
push
jbe
les
leave
lods
add
insb
ror
fisubrl
in
jns
sbb
data16
out
add
jp
mov
xchg
pushl
sbb
or
mov
test
and
inc
jle
and
nop
cmp
sub
pushl
or
jg
mov
dec
pop
pop
scas
in
sbb
aad
fidivrl
call
xor
idivb
cld
icebp
sub
mov
inc
xorl
popa
jae
dec
mov
popf
ja
jmp
divb
lcall
cmp
xchg
dec
out
ror
mov
and
add
sbb
xchg
scas
sahf
or
test
pop
pop
or
jmp
out
mov
push
xchg
pushf
mov
aas
lock
jl
dec
jo
popa
adc
adc
gs
idiv
addr16
jmp
hlt
icebp
mov
je
popa
popf
out
aas
cli
shrl
cmc
jg
sti
mov
mov
adc
call
and
and
test
xchg
in
pop
sbb
stos
cmp
mov
xchg
icebp
and
call
mov
shlb
loop
push
add
sti
jns
jno
ljmp
lcall
dec
mov
loop
mov
push
loop
jecxz
pop
arpl
adc
adc
push
mov
dec
das
sar
test
leave
repz
shlb
jcxz
or
xchg
adc
lcall
or
iret
push
shr
inc
jne
jb
sti
ficomps
cmp
and
call
jmp
loope
jno
movsl
sbb
rolb
fisubrs
inc
pop
movsl
sub
sub
mov
pop
add
cmpsl
sbb
pushl
std
push
movsl
ret
insb
mov
lahf
test
mov
xor
and
fwait
bnd
stos
mov
decl
mov
cmp
lret
int3
addr16
mov
bnd
int
sbb
inc
aaa
pop
test
cmp
add
out
mov
dec
jmp
push
inc
sub
aas
adc
cmp
ja
lock
ljmp
pop
adc
cmp
cltd
mov
rcll
addr16
repz
rcl
inc
aaa
mov
fbld
pop
dec
aam
xchg
sub
iret
xchg
pop
arpl
fdivrs
add
clc
jmp
push
adc
mov
out
dec
popf
sahf
fs
imul
shlb
fnstenv
sbb
mov
pop
lock
pop
cld
jnp
fcomip
loope
pop
gs
push
sub
inc
adc
and
movsb
cmp
mov
stos
push
aad
dec
mov
int
xorl
cmp
xchg
fldenv
mov
outsl
or
xchg
popf
pop
sbb
loop
xchg
mov
shl
icebp
call
clc
adc
jl
mov
xor
xchg
addb
ret
jmp
pop
int3
jge
repz
imul
mov
sub
daa
inc
mov
xchg
inc
pop
sub
cmp
lahf
mov
add
ljmp
lods
lods
divl
test
cld
cmpb
fstpt
mov
mov
cmp
pop
fisubs
mov
test
jge
add
cmp
adc
fcomip
pop
scas
cmp
add
call
flds
mov
lcall
outsb
xchg
sbb
pop
mov
add
loopne
fstps
jmp
aad
xchg
lods
decl
add
jnp
outsb
xchg
fdivl
jg
mov
add
cmpb
popa
das
das
clc
lcall
mov
xor
push
pop
mov
loope
jbe
pop
in
jmp
mov
ljmp
pop
pop
cld
decl
mov
or
jp
std
repz
push
inc
faddl
call
xchg
ret
incl
jae
mov
les
hlt
mov
fstl
xchg
movsl
inc
fwait
test
add
jg
or
cmp
std
mov
sbb
pop
add
lret
lods
cmp
call
push
cs
adcl
dec
icebp
ja
rep
lds
xor
fldt
add
push
push
push
jmp
in
push
add
loopne,pn
addl
add
leave
in
push
sub
pushl
push
adc
xchg
mov
scas
ret
push
sbb
cmp
or
adc
aam
lock
decl
fsubs
fs
ret
cmpsl
adc
clc
pop
test
mov
stos
dec
ljmp
pop
mov
xor
jecxz
and
add
lea
cmp
call
std
outsb
test
decb
or
ffree
das
mov
sub
jecxz
sbb
or
dec
std
andb
lret
dec
repnz
jge
repnz
js
std
call
scas
loop
push
test
mov
into
sahf
out
mov
xor
inc
fsubrp
sbb
decl
or
sub
cwtl
test
aaa
iret
in
pop
movsb
lods
aam
decl
cmpsb
cwtl
repz
pop
inc
nop
lret
add
outsb
call
push
add
xor
in
jnp
js
pop
or
decl
popa
dec
bound
rcrb
pop
mov
pop
lods
bound
xor
inc
cmpsb
sub
sub
fwait
or
hlt
lcall
stos
sub
shl
push
data16
movsl
gs
rcrb
add
add
clc
leave
sbb
int
cmpsl
dec
cmp
aad
rolb
cmp
pop
test
add
cli
lock
popa
xchg
and
lcall
mov
sahf
test
cmp
cmp
push
cmp
adc
syscall
or
cli
call
jae
shll
lahf
mov
mov
sti
mov
lcall
and
sub
int
mov
sub
mov
ret
push
fnstcw
lods
sub
aad
sub
jecxz
jg
pop
rorl
inc
ret
aam
jge
jbe
inc
sub
mov
and
ljmp
dec
jge
add
push
xchg
mov
pusha
sti
out
inc
lds
push
xchg
filds
jp
and
jg
cli
and
lea
push
hlt
xorb
dec
in
xchg
fwait
bound
xor
mov
mov
dec
add
cs
push
and
jl
push
arpl
daa
adc
add
call
adc
nop
xor
jns
aad
bound
test
pusha
mov
xor
pushl
xorb
xor
xchg
sub
dec
call
xor
pusha
imul
or
cmpsb
decl
jle
out
inc
add
mov
cs
fdiv
dec
testb
jg
aas
loope
xchg
or
mulb
scas
pushf
mov
jge
ret
sar
push
hlt
lock
daa
js
xchg
aad
adc
lods
out
popf
cmp
jge
repnz
add
mov
pop
andb
subb
fiaddl
push
ss
lcall
xchg
and
lds
push
push
fstps
mov
dec
lret
push
ss
pop
and
mov
rolb
out
je
mov
xor
test
lcall
dec
mov
ret
lcall
push
clc
inc
notl
roll
rorb
cmpl
add
ljmp
xchg
add
cmc
ffreep
js
data16
push
push
sub
mov
imul
or
mov
sub
mov
popf
mov
inc
adc
cmp
xchg
cld
lcall
jo
les
hlt
data16
ljmp
jp
mov
push
sar
push
lods
and
popf
sahf
gs
cmp
xchg
sbb
out
and
rol
xchg
outsb
andl
sbb
sub
xlat
xor
and
ljmp
sbb
sbb
dec
jmp
jae
lea
and
nop
inc
aas
out
push
mov
cs
sub
sub
jmp
dec
or
dec
daa
das
test
jae
mov
loopne
mov
loopne
ljmp
xchg
xchg
mov
xchg
sub
push
sub
xor
mov
jae
add
notb
sbb
int
adc
cld
test
dec
inc
jge
pop
mov
ljmp
pop
lea
cmc
sbb
jl
inc
mov
push
std
jb
mov
clc
ljmp
jle
pop
jmp
sub
or
stos
pop
les
test
loope
idiv
into
cli
hlt
jbe
ljmp
sub
sbb
push
aam
mov
add
popf
in
dec
out
js
ds
test
and
repz
pop
nop
xchg
xchg
into
pop
insb
cmpl
lcall
push
mov
inc
imul
xor
dec
mov
mov
sbb
shrl
jle
decl
pop
adc
scas
or
and
adc
mov
into
jge
orb
incl
jecxz
dec
adc
in
sub
and
sub
adc
cmpsl
in
decl
sub
cltd
lahf
pop
out
rorl
sbb
je
mov
shlb
repnz
lcall
mov
mov
lods
cs
aam
shll
jp
loopne
push
and
sub
enter
sbb
pushl
sti
push
fwait
test
lock
sbb
repnz
adc
add
pop
ljmp
out
clc
mov
fiadds
addl
inc
mov
out
mov
inc
std
rcrl
cmp
scas
mov
call
mov
cmp
hlt
scas
jge
fs
mov
pop
popf
fucomip
shrb
jmp
aaa
call
push
mov
idivl
lcall
jg
xchg
stos
iret
mov
test
push
xchg
decl
cmpsl
adc
xor
mov
or
pop
outsl
xchg
and
cmpsl
jecxz
jns
js
popf
out
sub
cld
ljmp
xchg
sbb
aas
in
stos
adc
jge
or
incl
mov
in
andb
adc
xor
ja
xchg
jg
cld
in
popa
std
jo
fidivrs
lock
test
decb
vxorps
xor
push
pop
dec
insb
sarb
ljmp
sahf
jg
jl
adcl
pop
push
gs
xchg
sti
jbe
xor
clc
pop
test
and
jne
pop
loope
fwait
pop
xlat
jmp
mov
sbb
insb
dec
and
sar
incl
sub
bnd
inc
xlat
insb
or
fs
mov
movsl
outsb
pop
xchg
fdivrp
jg
jbe
ds
xchg
nop
push
or
ret
jbe
adc
bound
cwtl
fstpt
ja
arpl
or
outsb
cli
and
or
mov
mov
mov
fstp
adc
ds
mov
cli
adc
adc
cmp
mov
inc
incl
stc
xlat
and
je
jmp
mov
xor
adc
lcall
xor
adc
push
mov
mov
cmc
add
ljmp
scas
cwtl
rcrl
call
add
into
test
loop
mov
dec
mov
jne
test
into
push
fs
dec
sarl
lea
fmull
mov
les
inc
incl
push
push
inc
fwait
sub
jl
das
xchg
adc
popf
sub
inc
int
push
jge
cmc
cli
xchg
daa
mov
hlt
ds
push
jae
cwtl
xor
inc
cmpsl
iret
inc
sti
sbb
daa
sub
jae
clc
call
iret
xchg
repnz
jbe
std
in
cltd
jecxz
dec
daa
jae
cld
xor
jg
incl
adc
popa
insb
out
adc
iret
mov
fsubrl
push
je
test
rclb
xor
cmpsb
mov
cmp
sbb
cmp
imul
shlb
incl
push
xchg
mov
lea
test
out
pop
mov
and
std
call
lahf
xchg
pop
lock
rorl
and
fwait
loop
xlat
fcompl
xor
jbe
in
fisubrl
xlat
loopne
add
cmpsb
je
cltd
shll
loop
ljmp
loope
int
std
jb
les
pusha
sbb
xchg
cmp
jno
inc
lods
test
jns
es
mov
jp
aad
add
push
push
ja
lcall
arpl
incl
mov
int
mov
ret
mov
cltd
xor
imul
or
sub
inc
lret
cld
addr16
sub
std
sub
adc
aaa
lahf
cld
insl
dec
add
adc
and
js
dec
push
repz
pushl
out
jg
ljmp
jb
mov
fs
sub
jle
sbb
decl
sub
mov
add
rol
jb
sbb
int
mov
mov
sar
cmp
stos
les
clc
pop
mov
je
lret
xor
clc
mov
pop
mov
mov
ljmp
or
xchg
jno
mov
push
shlb
pusha
push
inc
fwait
pop
or
std
les
jbe
inc
xchg
pusha
push
scas
sbb
imul
stc
lcall
dec
inc
lahf
mov
outsb
push
loopne
pop
jo
inc
jne
fs
pushl
fistpl
data16
in
loop
loop
leave
add
xor
sub
decl
loop
pop
xchg
mov
or
jmp
pop
mov
pop
cld
jg
rorb
sti
push
adc
icebp
or
xchg
adc
xor
push
push
xchg
in
xor
pop
sbbb
dec
sbbl
sbb
ret
decl
shrb
cmc
outsl
and
int
jg
fildll
mov
inc
fistpll
ljmp
push
enter
test
inc
sti
shl
adc
jmp
mov
in
ja
inc
push
popa
fs
scas
sbb
lret
push
sti
ret
out
clc
pushl
rcl
rcr
cmp
cmp
mov
les
xchg
xor
incl
not
gs
int3
shll
inc
xchg
mov
cmp
scas
insl
xchg
pop
push
js
adc
cmpsb
call
subb
push
adc
inc
dec
pusha
or
out
pop
xchg
lock
pushl
cmp
jp
add
sub
xchg
cmpsl
test
jns
or
jae
jnp
gs
inc
or
pop
jp
mov
add
jmp
mov
call
xchg
sub
js
fmuls
jp
sbb
loop
pushl
xchg
nop
sbb
add
xlat
push
inc
jnp
dec
fxch
andb
mov
ret
mov
call
sbb
xchg
xchg
sub
ljmp
je
push
adc
sbb
ret
cmp
lock
xchg
xor
mov
mov
out
test
mov
stos
test
loope
pop
ja
adc
and
xor
pop
orb
adc
bound
test
mov
movsw
mov
mov
lds
push
popf
jne
dec
pop
cwtl
data16
push
inc
add
pop
push
sbb
int3
daa
xlat
and
repz
xchg
sub
mov
inc
adc
clc
out
push
pop
push
mov
inc
adc
movsl
std
fldenv
mov
mov
fcomp
push
ljmp
jg
and
clc
pop
aad
jg
rcrb
call
incl
pop
sub
dec
adc
scas
xchg
pushl
inc
pop
and
pop
sub
scas
cli
call
imul
ds
add
and
pop
into
pushf
leave
jg
pushl
sbb
pop
push
loopne
mov
cmpsb
sbbl
xchg
stos
dec
dec
cld
pop
inc
pushf
xchg
sub
mov
or
and
test
sub
jnp
test
outsl
and
xchg
mov
mov
rcr
dec
lcall
pop
xchg
pushf
and
push
push
out
iret
dec
cmc
xor
scas
mov
call
ljmp
mov
lea
or
push
sbb
divl
or
jle
xchg
cmp
or
call
insb
punpcklwd
push
popf
sub
test
cwtl
idivl
jmp
repnz
jg
mov
iret
popa
cli
aaa
adcb
xchg
ljmp
cmp
roll
insb
mov
ss
or
sub
cmp
in
and
mov
dec
ja
mov
fcompl
xchg
xlat
sub
xchg
xor
popf
aad
jmp
dec
rorl
fistps
xor
sub
mov
clc
push
out
sub
or
fsubs
daa
mov
push
pop
orl
push
in
xchg
fsubrl
insl
mov
push
shl
pop
or
loop
aad
jg
cmp
xchg
ljmp
decl
js
in
sbb
leave
outsb
xor
jecxz
cs
xor
xchg
push
subl
adc
xchg
mov
push
bsr
js
popa
jge
flds
shlb
jmp
imul
dec
sub
incl
mov
lds
cmp
inc
clc
dec
fsts
adc
call
xchg
rclb
shrb
rolb
jns
sti
leave
mov
inc
fisubl
push
push
cmp
and
jmp
ljmp
scas
cmc
cmp
pop
jae
decb
out
jle
pusha
push
cli
shlb
insb
and
fwait
and
iret
push
sbb
lret
test
pop
js
lcall
out
ljmp
and
std
mov
je
or
cltd
out
jle
les
bnd
icebp
push
cmp
dec
aas
jmp
loopne
dec
loop
leave
mov
outsl
cli
call
dec
and
pusha
mov
or
outsl
pop
cmpsl
xor
mov
adc
into
cmc
lods
mov
movsl
daa
sbb
dec
call
fidivrs
jns
xor
cwtl
outsb
imul
mov
xor
ljmp
mov
sub
lea
xorl
fldl2e
push
push
push
adcb
notrack
inc
mov
sbb
pushf
popa
and
add
sbb
push
ss
ljmp
bnd
pop
vminsd
sarb
fiaddl
test
jmp
cmc
test
mov
cmp
sbb
popf
jmp
pop
sub
repnz
in
sbb
xchg
pushl
and
adc
test
aam
cmp
sbbb
mov
movsl
xlat
adc
call
jecxz
pop
xor
test
stos
inc
and
sub
jg
push
sti
mov
imul
addb
sub
mov
das
mov
mov
in
loop
daa
mov
xchg
inc
inc
incl
inc
mov
aam
fdivl
cmc
lret
decl
mov
cmp
xor
mov
loopne
popf
cmp
call
iret
pop
js
arpl
jbe
mov
ss
mov
push
xchg
addb
fmuls
pushl
stc
stos
sbb
cltd
fcoms
fistps
arpl
ljmp
je
lock
cmp
mov
jb
and
insb
cmp
xchg
les
sub
add
mov
cld
movsb
lcall
pop
add
and
adc
sbb
test
incl
mov
aaa
mov
xor
sbbb
andb
xor
icebp
insb
mov
call
jecxz
fcomp
add
sub
and
in
sub
xchg
ljmp
push
cmpsw
or
add
fidivs
mov
cmp
jno,pt
inc
push
dec
inc
cld
sbb
cs
add
stos
sub
mov
push
ljmp
and
dec
mov
sub
test
cli
pop
dec
push
jns
iret
push
call
mov
decl
mov
cmpl
dec
pop
mov
pop
ret
xchg
inc
movsl
jo
cmp
push
pop
jno
or
push
inc
pop
mov
push
jb
cmp
push
sub
xchg
jbe
je
ret
lret
je
adc
mov
repnz
jecxz
mov
ret
and
das
lret
jl
test
mov
insb
lret
int
cwtl
jle
push
pushl
pushl
inc
pop
sub
cmpsl
test
loopne
daa
aad
xor
and
test
dec
and
mov
decl
dec
mov
gs
mov
outsb
sbb
aaa
xchg
mov
inc
push
es
imul
push
dec
test
shlb
jmp
out
scas
and
inc
in
je
testl
cmp
divl
xor
out
test
sahf
mov
das
dec
gs
inc
fisttpll
lock
fnsave
xchg
and
cld
stos
incb
lods
enter
xchg
pop
pusha
mov
into
incl
imul
xchg
in
inc
sub
cltd
inc
fdivrs
call
mov
int
xorl
insl
pslld
xor
lock
jg
subb
pop
in
lcall
insl
cmc
repnz
das
and
loope
add
or
jecxz
fwait
repnz
cmp
push
rol
mov
subl
xchg
lcall
mov
iret
mov
std
mov
insb
mov
xchg
inc
out
lds
lahf
fisubrs
fmuls
iret
xor
loopne
cs
sub
or
adc
pushl
lods
sub
sbb
gs
or
and
call
pop
pop
xchg
sub
adc
cmp
fdivs
popa
cld
pop
push
imul
xchg
in
cmp
add
loop
and
ret
decl
pop
shl
popa
adc
in
cwtl
mov
mov
inc
sbb
iret
dec
mov
pop
fld
loopne
rolb
xor
xor
xchg
decl
mov
aam
in
xchg
leavew
cmp
xlat
mov
outsb
push
dec
jge
aas
addr16
imul
push
lret
movsl
into
xor
sahf
cmp
cltd
xor
or
pop
incl
jl
aam
das
cltd
shll
push
adc
clc
repz
pushf
mov
in
jae
andb
adc
jno
jb
rep
js
test
and
ffreep
rcrl
out
cli
pushl
outsb
sbb
dec
cmp
add
pop
out
jle
dec
push
xchg
test
decl
xor
mov
xchg
adc
pop
in
mov
pop
call
xchg
push
enter
adc
mov
das
mov
aas
dec
lods
scas
cli
incl
ja
push
or
sub
and
mov
popa
mov
cld
into
frstor
mov
sbb
scas
clc
decl
jmp
xor
negl
test
ficoml
loope
cmp
decl
or
mov
ficompl
loope
dec
sbb
out
sbb
out
fwait
push
or
jl
jne
inc
pop
pushl
dec
or
cmp
xorb
into
push
pop
pop
cmpsl
mov
adc
lcall
adc
mov
stos
sub
inc
dec
ret
xor
sbb
inc
xchg
stos
lds
fwait
and
mov
pop
dec
cmc
sbb
add
jne
push
cli
lcall
je
int3
ljmp
jg
dec
or
inc
adc
xor
mov
fdiv
pushl
jns
cmp
clc
inc
mov
movsl
sbb
push
push
pop
cmpsl
inc
fwait
popf
lcall
sub
adc
adc
mov
mov
dec
test
lret
ljmp
aam
cwtl
jns
les
pop
xor
mov
mov
xchg
mov
out
ljmp
movsb
jle
mov
inc
clc
cmp
or
dec
and
icebp
jmp
dec
call
or
lock
adc
arpl
incl
cwtl
inc
adc
out
out
push
ds
ret
sahf
mov
lock
lcall
sub
jge
dec
sti
cltd
jne
or
sbb
mov
add
jmp
sub
or
mov
fwait
mov
jb
and
pop
scas
push
popf
xchg
dec
gs
mov
mov
and
out
test
and
sub
inc
add
insb
in
sbb
decl
leave
inc
imul
ret
add
testb
xchg
adc
pop
in
ljmp
arpl
push
jbe
rcr
sbb
push
pop
fildll
lock
out
popa
out
fisttpl
inc
call
icebp
inc
movsb
push
adcb
push
fs
leave
mov
push
xchg
mov
fadds
outsb
pushl
out
std
andl
push
mov
lods
aam
loope
xor
andb
push
call
xchg
ljmp
inc
sub
lcall
loop
pop
pop
xor
or
decl
push
mov
int3
daa
mov
sbb
imul
lret
pop
and
icebp
psubd
push
xchg
push
mov
push
psubb
rol
js
and
fistl
ficoms
mov
or
call
ficomps
mov
inc
imul
mov
jl
idivl
xor
jo
cli
ljmp
add
jae
cmpsl
xor
mov
push
shlb
sub
fcompl
cld
lret
in
and
pop
mov
mov
shll
std
mov
mov
sub
inc
xor
pop
pop
push
sbb
daa
sub
pop
mov
pop
and
icebp
je
scas
xchg
and
mov
jmp
add
mov
fisubs
xchg
push
push
loop
aaa
decl
jbe
jb
scas
pop
cs
insl
jns
mov
filds
jne
sub
xorl
call
lret
sarl
ds
sbbb
mov
aad
cmpsl
xchg
ljmp
xchg
inc
cmc
icebp
pop
xchg
dec
xor
add
push
mov
arpl
pop
and
cmp
push
nop
add
addb
mov
inc
pop
imul
rcl
lods
inc
add
adc
lret
dec
mov
push
jge
int
lds
call
pop
add
cmp
inc
or
mov
mov
std
push
cmpsb
jbe
fistps
mov
cld
add
jp
popf
xchg
xlat
jb
mov
popl
jae
sbb
fildl
scas
and
and
es
stos
mov
jmp
adc
lahf
push
push
pop
ds
mov
sbb
fdivrs
mov
pop
adc
jmp
imul
pop
mov
mov
cltd
push
mov
pop
cmp
cltd
or
out
add
adc
repnz
jecxz
fcmovbe
or
pop
mov
jnp
mov
add
shl
lods
push
sbb
sbb
clc
pop
mov
incl
sti
sbb
jae
mov
lock
movsl
mov
sub
jmp
addr16
lcall
push
sbb
sub
out
insl
lods
fld
mov
sbb
mov
adcl
js
mov
rolb
dec
dec
std
fdiv
das
icebp
es
sub
cmp
jnp
xlat
and
fimull
addr16
sub
scas
pop
add
lods
adc
cld
clc
cld
jg
cmpsb
pop
xchg
fprem
mov
add
lods
cmp
mov
push
jnp
ljmp
adc
loopne
cmp
orl
add
lahf
not
pop
add
mov
jle
rol
outsl
jle
fsubrs
sbb
adc
inc
mov
xor
dec
xlat
push
jno
jle
fnstsw
push
and
aaa
fdivrl
xor
das
mov
dec
cmpl
pop
push
cs
inc
sub
mov
inc
call
inc
jno
enter
call
jo
movsl
pop
mov
pop
push
mov
cmpsl
cld
data16
xor
aad
and
dec
mov
bound
nop
jb
pop
xor
test
int
or
clc
inc
fdivrl
pop
enter
pop
fst
vorpd
sub
bound
decl
out
iret
sub
mov
sub
adc
hlt
jp
aas
daa
pushf
jns
incl
stos
or
popf
daa
mov
dec
int
push
je
sub
ljmp
test
cs
aad
out
subb
rolb
sbb
cmp
pop
gs
push
popa
out
pushl
aad
sbb
iret
lock
mov
add
shll
cli
mov
call
and
cs
mov
pop
inc
inc
add
test
push
add
mov
mov
jns
xchg
push
xchg
or
cmp
stc
incl
cs
popf
mov
cmc
sub
lcall
rorb
adc
adc
leave
pop
mov
test
and
sti
call
testl
mov
loope
shr
push
cmp
test
jns
inc
scas
ds
int3
fldcw
jg
lret
cmp
jne
ret
xchg
pushl
std
ja
cmp
clc
inc
je
sahf
inc
dec
fidivs
test
aaa
mov
add
pop
jle
push
cltd
test
sbbb
loopne
and
ficomps
sahf
push
lods
fcomip
dec
fisttpl
push
pushf
jp
pop
out
xchg
adc
adcl
das
ret
lcall
cld
xor
push
xor
jb
cmpsb
inc
insb
insb
jb
or
daa
mov
pushl
in
testl
cli
sub
pop
or
mov
jg
ret
pusha
pop
mov
cli
mov
xchg
incl
pushf
xchg
add
je
pop
test
adc
into
inc
jbe
nop
cmp
lcall
jg
inc
out
aaa
stos
cld
or
pop
das
xor
in
test
pop
inc
sahf
pop
and
repz
sarl
insl
sahf
mulb
inc
xchg
mov
ljmp
cmc
dec
sub
jge
sub
jns
mov
add
ss
cmp
mov
decl
enter
xchg
aas
push
pusha
enter
sbb
pop
lea
lcall
push
mov
daa
inc
fwait
xchg
cmp
ljmp
mov
xchg
mov
stos
loopne
stos
dec
xchg
push
xor
xlat
das
jg
ljmp
add
ret
dec
out
ss
movsl
push
cmp
rolb
inc
das
mov
mov
les
inc
xor
pop
mov
ljmp
cmp
dec
sti
addr16
movsb
sahf
adc
xor
aas
cmp
push
ret
xchg
sbb
rcrl
inc
jp
mov
xchg
xlat
or
add
fcomip
mov
cltd
repnz
cmpsb
fdivl
rorb
mov
jno
or
lret
pop
pop
out
cmp
pop
call
or
push
pop
push
and
fs
mov
jmp
imul
mov
pop
lods
sbbb
xchg
mov
nop
mov
call
xor
mov
std
or
sub
test
jns
enter
decl
loop
dec
pop
inc
or
ss
and
js
mov
mov
dec
icebp
call
push
mov
jl
daa
xchg
ss
out
out
push
mov
add
or
stos
xor
adc
in
fnstenv
daa
or
das
cli
push
jnp
cmpsl
dec
fisttps
mov
outsl
ret
inc
xchg
popa
push
int3
ljmp
or
in
xchg
jne
mov
cmp
and
inc
leave
idiv
int
ja
xchg
in
sbb
cld
mov
xchg
scas
out
add
movntq
mov
jmp
subl
or
aad
leave
dec
ret
dec
mov
nop
mov
pop
std
dec
dec
and
add
les
pop
enter
pop
add
sub
pushf
nop
xchg
in
push
pusha
pop
cmp
sbb
aam
and
outsl
inc
scas
int3
jg
ljmp
adc
scas
int
outsl
ss
bound
mov
fdivs
out
adc
push
xchg
jae
lahf
sbb
add
adc
stc
in
and
test
mov
out
out
mov
std
dec
pop
rolb
adc
xor
lods
add
pop
stos
ljmp
mov
notb
mov
jmp
sbb
fbstp
sub
inc
imul
loope
inc
lods
add
cwtl
pop
jb
gs
xor
add
xchg
dec
loopne
std
cmp
lret
add
rclb
push
mov
or
cmp
mov
decw
ficomps
adc
jnp
mov
xor
lcall
push
dec
popa
inc
cwtl
aaa
gs
je
cli
pop
inc
pop
xchg
jo
and
pop
add
jmp
fldt
xchg
add
faddl
lods
sbb
and
lret
ljmp
rcrb
add
jno
test
cmp
ficoms
daa
mov
dec
sarb
pop
mov
sbb
pop
sbb
xchg
sbb
push
out
xchg
mov
das
mov
ja
jg
incl
insb
xchg
inc
push
sahf
mov
jo
mov
lcall
test
mov
std
pushl
cmp
mov
push
imul
add
lock
sbb
xor
xchg
jl
std
es
arpl
mov
or
xor
pop
idiv
jle
push
cwtl
mov
jle
movsb
popf
jle
loop
aaa
mov
in
testl
clc
lcall
outsb
call
sub
arpl
pop
inc
add
repz
in
push
cmc
lcall
loope
lock
loopne
lea
mov
and
clc
inc
mov
aad
and
outsl
cwtl
mov
xlat
ds
daa
es
insb
push
inc
in
pushl
out
xor
or
push
cmp
push
or
enter
pop
movsl
into
adc
lcall
clc
pushl
add
jno
in
cltd
pop
sub
inc
aam
ret
mov
stos
cmpsb
clc
cmp
incl
sub
adc
les
outsl
pop
cld
movb
decl
sub
mov
maskmovq
idivl
xchg
or
pusha
add
dec
add
mov
decl
out
daa
shll
push
in
cs
lods
cmp
stos
or
incl
mov
or
dec
lahf
movsl
and
lock
daa
pop
jp
loopne
jg
mov
push
mov
cmp
mov
mov
aas
loope
outsb
mov
arpl
aad
ja
test
stc
pop
push
push
adc
mov
pusha
jmp
aam
xor
fidivrs
imul
mov
mov
pushf
mov
into
imul
sub
sbb
orb
push
push
ljmp
mov
andb
bnd
int
lds
inc
addr16
pushl
test
sti
fldt
jne
lock
mov
add
jle
xchg
xchg
incl
cmpsb
and
jbe
inc
lret
ds
shlb
enter
in
inc
push
iret
sub
add
pop
ficomps
add
cmp
call
dec
dec
pushl
push
fwait
ds
mov
push
gs
adc
and
push
mov
jmp
nop
cld
mov
gs
or
into
push
push
cmp
dec
adc
dec
lods
fisubrl
sub
mov
out
lock
in
fcomp
lcall
daa
jno
jg
stc
movaps
mov
jmp
jecxz
ficompl
sbb
push
inc
add
push
imul
scas
fadd
mov
out
and
mov
imul
jno
cmpsb
loopnew
push
aad
rclb
xor
stos
cltd
call
aas
out
xchg
hlt
pop
scas
flds
ret
adc
in
stc
stc
sub
frstor
mov
lahf
push
cmpsl
aam
scas
lea
sbb
pushl
adc
dec
mov
add
loopne
test
rolb
dec
xchg
sbb
and
call
lcall
inc
into
mov
mov
sarb
addr16
cmp
decl
daa
mov
push
or
adc
test
fcoms
xor
gs
arpl
or
pop
and
jmp
push
push
add
addr16
push
mov
sti
dec
jmp
fstl
push
hlt
sub
jmp
loope
sub
popf
ljmp
add
orl
pop
cmc
pushl
mov
sbb
xor
xchg
push
popf
sub
xor
inc
mov
sbb
pop
int
xor
adc
ja
cltd
idiv
inc
je
pop
dec
sti
les
test
push
fildll
jmp
repnz
incl
sti
jae
dec
in
les
jne
xchg
inc
enter
test
outsl
sbb
mov
jns
add
pusha
and
lret
dec
inc
fsubs
push
pop
ret
mov
in
bnd
jmp
cs
mov
push
adc
mov
push
imul
inc
ljmp
add
subb
in
incl
cmc
sub
sbb
dec
es
xchg
inc
ret
inc
pop
into
adc
addl
cmovp
pop
pop
clc
ljmp
pusha
mov
cld
xchg
mov
jbe
incl
cli
out
and
xor
xor
fdivr
push
ljmp
jge
xor
pop
sub
push
push
or
jae
pop
jge
jne
jecxz
jno
outsb
jge
movsl
nop
mov
subl
sub
inc
out
mov
dec
loop
stos
inc
sbb
mov
mov
mov
cmp
cwtl
mov
push
sub
out
xor
mov
push
and
scas
mov
in
jmp
lahf
lds
mov
push
pop
cli
sbb
int
ret
cmc
test
out
movsb
inc
cld
xadd
bound
xchg
sti
inc
adc
mov
dec
push
in
movsl
incl
xchg
xlat
jp
xchg
cs
iret
cs
mov
ret
mov
ljmp
fistpll
add
sbb
add
adc
mov
push
lods
outsb
clc
idivl
fmul
and
imul
std
pop
inc
or
xor
insb
nop
call
xor
pushl
lock
loop
mov
pop
push
mov
stc
lret
sbb
mov
hlt
incl
jg
mov
mov
mov
jecxz
mov
fstpl
addr16
sti
sbb
jns
cmc
add
adc
dec
dec
xchg
loope
out
mov
mov
add
cmp
lcall
mov
cmp
stos
call
and
pop
fst
js
cwtl
sbb
jbe
mov
ljmp
xor
mov
mov
xchg
xchg
xor
scas
xchg
pop
sbb
mov
decl
cmp
adc
fsubr
lea
movsl
fcmovbe
repz
ret
into
pop
sub
out
sahf
hlt
add
imul
std
cwtl
repnz
mov
fisttps
cli
stc
repnz
mov
inc
or
jecxz
dec
insb
fsubrs
test
jecxz
insb
lea
inc
xlat
ret
pop
lcall
jp
jmp
clts
cld
sub
clc
repnz
dec
xor
sub
shlb
mov
movsb
dec
stc
cmp
mov
call
dec
lock
out
out
inc
and
incl
fsubs
jne
inc
add
adc
call
popf
and
cmpl
mov
mov
push
and
aaa
xor
fidivs
call
mov
cmp
push
mov
xchg
rcl
jecxz
inc
out
push
dec
pushaw
loopne
pop
fisubl
pop
jmp
dec
cmp
jle
lea
shlb
sahf
rcrb
shrl
leave
sbb
jg
mov
add
adc
aam
xor
div
lret
idiv
ljmp
xor
sub
sbb
inc
dec
std
add
mov
xor
sbb
jge
jmp
loop
fcomi
inc
lock
adc
bswap
cmpsb
fldpi
adc
sbb
in
mov
cmp
ror
mov
pushl
inc
jge
lahf
loop
lods
xchg
sub
mov
mov
std
ljmp
mov
daa
and
sti
inc
sub
jg
fs
and
jmp
popl
aad
jl
scas
lret
mov
fildll
in
xchg
fcomps
push
mov
addr16
inc
sub
adc
sbb
lret
jp
mov
iret
ret
xchg
dec
scas
fs
addr16
cmp
sbb
scas
and
roll
decl
sarl
loope
dec
lods
mov
ja
cmp
ljmp
mov
sub
fwait
jmp
out
dec
clc
xchg
sbb
out
jl
test
xchg
in
out
adc
stc
pop
lcall
push
mov
xchg
fwait
pop
cmpsb
test
cmpsl
mov
nop
xor
into
ss
call
test
mov
in
and
ficomps
neg
int
test
mov
inc
jb
push
adc
mov
fs
add
aam
lret
add
sbb
inc
in
inc
cmp
pop
cmp
in
rcll
ret
ftst
push
jb
fstl
aaa
aam
mov
xchg
cmpb
mov
jmp
dec
mov
cmp
pop
inc
fcoml
clc
lcall
xchg
xchg
and
mov
mov
into
iret
mov
jl
idivb
xor
jns
cmp
xor
push
and
out
add
punpcklbw
dec
scas
sub
test
fwait
pop
push
in
push
xchg
bound
push
aas
pop
xchg
adc
cmp
enter
fstpl
or
fimull
pop
pushf
inc
mov
lock
lds
arpl
cmp
dec
loopne
fcompl
lcall
insl
aam
clc
test
stos
loopne
ret
sahf
and
decl
ret
stos
gs
or
ss
mov
pop
fcmovb
push
jb
fnstsw
jne
cmp
icebp
inc
lcall
or
push
loop
push
inc
xchg
js
dec
sti
xor
call
fldcw
hlt
sahf
stc
jge
xchg
daa
data16
orb
mov
insb
imul
jmp
mov
mov
int
jecxz
xchg
mov
inc
in
inc
jg
xor
or
ret
cmp
nop
ss
mov
in
sbb
ds
cmp
inc
ret
lcall
mov
mov
xor
xchg
sbb
lock
inc
cvttps2pi
add
in
fcmovnb
fs
jo
call
scas
mov
and
loope
sahf
inc
pop
lret
es
or
lods
add
incl
pop
test
cmp
dec
pop
pop
adc
pop
pusha
jle
sub
jmp
push
mov
mov
mov
mov
and
nop
in
ljmp
sti
cmp
or
dec
jge
decl
hlt
dec
pop
aad
cmp
mov
sbb
pop
int3
cmp
mov
loop
dec
jae
jmp
sti
stos
push
fsubl
fs
mov
pop
out
outsb
fisttpl
sahf
push
cmp
cmc
adc
inc
or
sub
sbb
clc
pop
loopne
decl
cmp
rcrb
push
xchg
xor
dec
jp
movsl
notl
xchg
pop
in
jno
jno
xorb
sbb
push
mov
inc
cltd
cwtl
push
subb
xlat
mov
cli
inc
jge
scas
jno
das
fcomps
outsl
cmp
mov
and
bound
adc
inc
jecxz
fidivl
test
test
insl
pop
les
xor
sub
cmp
lock
sti
adc
sbb
outsl
and
stos
sub
inc
pusha
or
cld
idiv
ljmp
fs
add
shr
stos
lcall
popf
jmp
in
jg
lcall
aam
pusha
add
test
imull
dec
scas
js
call
outsb
jle
test
subl
aad
push
push
and
fyl2x
int3
add
leave
or
call
enter
xor
test
add
insl
shlb
cwtl
mov
push
cld
int3
sbb
dec
mov
out
lock
insl
mov
jbe
jg
fldt
ds
or
pusha
and
idivb
push
adc
push
sub
ljmp
xchg
or
mov
mov
ds
sub
ja
dec
cmp
push
lcall
inc
outsb
mov
xchg
mov
shlb
call
or
rolb
pop
ret
imul
and
xor
cmp
fmuls
es
sub
jae
inc
pop
mov
pop
icebp
test
cmp
incl
dec
pop
cmpsb
ljmp
jo
outsl
js
jg
or
inc
xchg
std
imull
incl
and
cmpsl
hlt
imul
pop
ja
hlt
mov
xchg
xor
les
pop
sar
call
inc
add
mov
xor
decl
fcoms
cli
jg
push
scas
fidivrs
aas
and
and
call
mov
sub
out
adc
sbb
push
inc
lods
xor
mov
pop
decl
cltd
out
dec
adc
mov
or
xor
jmp
call
out
out
mov
xchg
pop
add
mov
xor
jb
jb
xchg
ljmp
roll
imul
mov
ljmp
stos
jg
loopne,pn
and
adc
push
jmp
xor
pop
cmpsl
ljmp
loope
fcompl
loop
mov
xor
jmp
fistps
add
dec
lock
and
xor
popl
fwait
xor
imul
scas
cmc
outsb
clc
xor
test
cmp
rorb
mov
sbb
pop
jne
and
leave
stc
fwait
loop
and
repz
xor
mov
ret
test
pop
mov
pushl
iret
xchg
cmp
jge
rolb
outsb
push
fcos
jmp
xchg
inc
pop
aaa
inc
adc
mov
call
xor
outsb
and
ljmp
orl
jae
in
mov
movsb
cmovge
inc
and
jg
pushl
sarb
fdivs
aam
mov
subl
inc
cmp
cld
stc
inc
jo
xor
test
jbe
adc
je
insl
mov
ja
sbb
fisubrl
mov
in
insb
add
orl
mov
inc
lds
pop
and
lcall
jmp
add
mov
sub
or
and
fmul
and
mov
jmp
test
imul
shrl
or
sub
pop
fs
in
lret
mov
into
mov
xor
jle
popa
xchg
xchg
jge
addr16
xchg
pop
andl
decl
mov
or
sarb
dec
es
mov
cmp
cmp
cmovns
push
mov
dec
mov
inc
cmp
arpl
clc
fidivl
mov
add
pop
dec
adc
mov
sbb
clc
ss
push
leave
fidivrl
mov
ret
rdpmc
decl
mov
pop
insb
push
lret
push
hlt
xchg
hlt
mul
cmpsb
jecxz
xor
cmp
add
sub
hlt
rorl
lcall
cmp
movsl
push
scas
mov
stos
ja
ficomps
stc
cmpsb
jbe
or
ljmp
idiv
mov
pop
push
jle
mov
push
mov
adc
icebp
lret
scas
xchg
out
add
sbb
jne
out
mov
in
loopne
lcall
dec
daa
scas
add
sahf
mov
repz
cmc
lods
mov
jg
aam
xchg
pushf
dec
xchg
outsb
int3
push
xchg
dec
cs
cmp
repnz
ret
std
lcall
sar
imull
pop
lcall
mov
and
decl
fs
sub
dec
dec
pop
pop
inc
dec
sbb
inc
sti
lea
subl
lcall
sub
aam
sub
stc
popa
fistpl
stc
inc
inc
negl
gs
pop
cld
push
cmpsl
out
call
mov
xchg
ja
pop
cld
xchg
das
push
std
test
decl
decb
aam
mov
ret
jb
lock
mov
loop
ljmp
aam
and
add
mov
mov
movsl
repnz
jg
ds
jnp
push
out
je
fst
lret
mov
or
jnp
incl
jne
nop
xor
roll
ror
test
push
pop
add
in
aam
out
daa
out
cs
jg
jmp
filds
jmp
push
xchg
int3
jnp
inc
mov
cld
push
ds
push
pop
sbb
mov
xchg
pop
std
call
repnz
and
sbb
mov
jbe
lea
pop
jae
mov
cld
jmp
adc
cmc
inc
mov
and
pop
cli
push
jo
aad
pop
cld
inc
in
mov
pushl
xchg
iret
pop
ss
cmp
jae
in
shrl
movsl
xor
fcoms
jge
es
mov
sbb
cmp
mov
dec
lods
dec
ljmp
fdivr
cmc
dec
cmp
mov
dec
push
fadds
popl
ja
call
cmp
into
dec
push
cli
gs
sbb
test
push
sahf
xchg
jg
lock
fcomp
outsb
xor
inc
xchg
clc
sbb
fbstp
xchg
shrb
shlb
rorl
test
mov
imulb
ljmp
dec
sub
in
pop
mov
fs
xor
ss
faddl
dec
cli
dec
and
push
loopne
and
fsts
xor
mov
iret
pop
shrl
xor
loop
cli
inc
lock
addr16
mov
ljmp
pop
and
sub
push
lock
incl
sar
and
test
rol
add
insl
fbstp
cmpsb
pop
add
sub
push
in
dec
das
repz
insb
sahf
loope
pop
adc
pop
jb
or
jns
sub
and
xor
jmp
aad
pop
and
jne
repz
enter
xchg
push
rorb
imul
or
add
push
lcall
sub
aas
push
loop
leave
lcall
cmp
psubb
out
inc
bound
mov
xchg
dec
pop
push
cmp
out
jge
jno
push
pop
sub
jb
push
aad
push
je
pop
inc
cmp
sbb
int3
dec
std
rcr
mov
loop
mov
ljmp
addr16
call
repnz
out
adc
lea
int
fistpl
sub
sbb
sbb
jns
and
sar
decl
insb
into
adc
rolb
loop
xor
and
lcall
addr16
call
adc
and
lahf
in
mov
bnd
jmp
clc
insl
sub
mov
lock
lcall
mov
mov
mov
cmpb
ljmp
dec
mov
outsb
and
mov
xor
call
mov
scas
sub
repz
ss
push
and
mov
fiaddl
add
ljmp
in
xchg
and
aad
inc
mov
inc
add
bound
call
cld
dec
add
and
sbb
add
pop
out
mov
fcmovnbe
mov
ljmp
jecxz
js
invd
or
xor
pusha
add
jo
test
into
or
jae
jmp
test
xchg
xor
mov
ss
push
orps
pop
mov
dec
lods
mov
call
pop
mov
fwait
movsb
js
shl
mov
mull
jmp
scas
jmp
mov
sbb
mov
dec
loop
pop
test
inc
push
arpl
inc
jo
and
push
fistps
or
mov
xchg
pop
je
sub
clc
pushl
loope
dec
repnz
lds
ret
mov
xor
pushl
adc
pop
mov
add
xchg
roll
lret
push
not
into
cltd
cmp
popa
push
insl
or
stos
inc
loope
inc
test
inc
xor
scas
mov
dec
ret
call
cmp
xor
scas
repnz
cltd
mov
fbstp
pushl
push
cmp
pop
in
int
fistpl
in
ljmp
sub
dec
jmp
ds
xlat
cmp
xchg
adc
ja
or
imul
dec
roll
stos
sbb
mov
sahf
clc
decl
adc
adc
jl
mov
icebp
and
cmpsl
dec
leave
aaa
lcall
faddp
xchg
pop
lods
sbb
lods
xchg
mov
inc
or
aas
cmpsl
dec
xor
or
jb
decl
lock
inc
sub
pop
sbb
xor
xor
mov
nop
add
call
pop
fs
adc
or
push
lret
arpl
out
dec
out
sar
loop
lcall
jae
in
adcl
icebp
inc
push
push
rcrl
popa
mov
lcall
xchg
out
adc
mov
pop
mov
outsl
xchg
xchg
pushl
and
leave
movl
xchg
pop
jp
mov
jo
cmp
mov
call
rol
testl
add
call
popa
repnz
repz
mov
jmp
hlt
xchg
fstp
and
adc
adc
cmp
ljmp
ret
mov
sub
loopne
lcall
movsl
lahf
int
xchg
sbb
push
test
addb
add
lcall
pusha
arpl
pop
push
dec
push
fisttpll
inc
push
in
push
lds
dec
sub
jmp
pushl
jae
mov
xchg
and
cmpl
sub
ljmp
les
push
mov
cmp
ret
sbb
clc
pushl
jno
sbb
addr16
out
mov
clc
jl
dec
mov
add
mov
ljmp
aas
sarl
mov
iret
orb
fsts
scas
dec
test
incl
xor
or
mov
call
jl
scas
inc
jge
pop
and
imul
aam
adc
or
ss
xchg
inc
dec
in
mov
sbb
loop
fdivrl
scas
aaa
mov
lcall
movsb
scas
mov
es
and
mov
or
mov
jo
xor
lcall
call
in
cmpsb
xlat
ret
xlat
jle
adc
and
aad
in
loope
incl
cld
lcall
mov
or
clc
aad
jae
js
mov
decl
mov
lahf
mov
loop
push
push
sbb
pop
dec
xor
lcall
incl
push
inc
push
jle
mov
fcmove
pushf
push
inc
outsb
add
aaa
and
cli
jns
es
cmpsb
jge
cmpsl
andl
lods
jne
popf
mov
cmp
loopne
adc
mov
and
and
insl
pop
or
pop
pop
movsb
sbb
dec
test
dec
dec
push
shrb
mov
cld
rclb
mov
or
and
iret
mov
call
inc
add
sub
jp
lahf
mov
sbb
fcoml
call
mov
cltd
lds
sbb
lret
out
shll
or
lcall
test
ja
aam
stos
mov
divb
pop
jge
rol
dec
icebp
pop
rcl
dec
cmp
ja
loopne
dec
jge
add
nop
sar
clc
and
negb
and
lds
adc
push
cli
xor
sahf
lcall
push
cwtl
mov
out
arpl
imul
jmp
ja
add
push
jae
leave
mov
and
mov
pop
sub
mov
mov
out
inc
jg
push
gs
sub
pop
jecxz
bound
jbe
mov
mov
mov
sub
in
fdivl
cs
jecxz
js
nop
stos
mov
fidivrs
call
xchg
sub
testl
ja
negl
bound
std
cmp
inc
xor
lea
dec
sbb
arpl
jmp
jle
into
sub
dec
dec
cld
inc
and
lock
icebp
pop
sar
cmc
fwait
xchg
xchg
movsb
mov
ror
dec
in
lcall
mov
mov
out
sahf
xlat
incl
xchg
lods
and
rcrl
xor
push
sbb
lret
jmp
cmp
icebp
add
lcall
fsts
xor
pusha
imul
lcall
xchg
gs
decl
dec
shll
push
jbe
in
add
dec
das
jne
jmp
xorb
std
lcall
dec
popf
add
ljmp
push
pop
gs
popa
fdivrl
xchg
dec
imul
pop
out
loopne
push
or
incl
mov
arpl
pop
dec
jbe
and
call
outsb
push
mov
mov
repz
shrl
or
jp
lcall
call
xchg
lret
cmpsb
cmp
mov
cmc
or
stos
add
ljmp
mov
iret
push
das
push
mov
and
cmpsl
or
inc
jno
pop
and
stc
mov
inc
push
daa
adc
repz
fdiv
es
les
cli
mov
cmp
mov
add
int3
in
jp
dec
xlat
outsl
adcb
scas
fmuls
incl
cld
nop
shrb
inc
das
scas
and
mov
xor
outsb
jns
cmp
popf
or
mov
jae
pop
pop
jns
dec
rorb
aas
aaa
outsb
mov
pop
jmp
ss
incl
mov
mov
pop
inc
nop
loop
lods
mov
push
push
add
sub
incl
out
je
rorb
fcomp
call
cmc
aam
lret
outsl
jp
pop
imul
inc
mov
ret
push
mov
adc
sbb
pushf
repnz
inc
push
xor
jp
mov
xchg
or
cmp
sub
loope
ljmp
test
xchg
mov
loopne
xor
dec
mov
enter
push
xchg
ljmp
mov
lds
push
or
dec
mov
jmp
shll
xchg
clc
or
xchg
mov
sub
dec
dec
mov
jmp
cltd
arpl
ficoms
add
or
lods
cmp
repnz
xchg
wbinvd
lods
int
mov
lret
mov
mov
call
insl
xchg
adc
lds
inc
orl
inc
xor
push
jg
jg
pop
sar
fcomip
bound
insb
scas
stos
adc
jbe
vaesenclast
je
lods
dec
iret
or
fiaddl
ret
pop
push
stos
shl
dec
pop
aas
movsb
push
inc
pushf
inc
das
and
xor
incl
xlat
lds
lret
cli
ljmp
adc
jmp
xchg
std
lcall
add
jmp
adc
add
pop
push
sub
xor
in
adcl
inc
fmull
stc
movsl
or
fs
ret
xor
push
pop
inc
subl
std
pop
and
mov
xor
push
out
out
mov
lahf
push
xchg
sbbb
cmp
mov
dec
pushw
jg
test
xor
insl
paddq
call
iret
daa
sub
test
cmp
cmp
xor
rcll
in
add
adc
jg
cmpl
cmpsl
dec
insl
cmpsl
in
mov
add
sti
insl
xchg
incl
mov
fisubl
fstpl
sbb
dec
enter
push
incl
incl
dec
xlat
push
and
inc
sub
movb
pusha
sbb
int
jle
lock
call
adc
into
shlb
mov
jge
mov
mov
cli
mov
cmp
popa
sar
ljmp
add
int3
clc
icebp
into
add
xor
imul
lahf
rol
loop,pt
inc
pusha
mov
div
lret
jne
aaa
insl
dec
push
cmp
inc
inc
sub
loopne
pushl
dec
inc
pushf
xor
fs
xor
sub
xor
sbb
pop
ret
cld
jno
decl
xchg
aas
and
sbb
ficomps
mov
imul
xor
adc
in
into
cld
push
xchg
sbb
xchg
push
pop
dec
mov
mov
out
aam
adc
daa
sbb
popf
arpl
xchg
xchg
xor
jae
push
sub
add
or
lcall
mov
sarl
sbb
cmp
int
jb
shlb
roll
cmc
das
ja
sar
adc
jmp
or
int
mov
ljmp
mov
jmp
arpl
and
fwait
and
and
cmp
mov
xor
lds
pop
mov
dec
rorb
int
lret
inc
xor
mov
and
sti
inc
mov
xchg
sbbb
sbb
mov
stos
adc
mov
imul
outsl
fidivrs
mov
or
push
fs
cli
add
mov
inc
clc
das
cwtl
andl
inc
dec
test
incl
lock
mov
mov
xchg
orb
pop
push
and
mov
lcall
lret
lret
xchg
divb
mov
shrb
inc
out
push
xchg
pushf
stos
adc
in
cld
nop
stos
fisttps
sub
fdivl
xor
int
lds
sub
call
jns
xchg
xchg
pop
pop
mov
fldenv
and
ljmp
cmpsb
clc
adc
dec
or
and
jnp
imul
adc
jno
inc
sahf
mov
cmp
pop
adc
je
ds
sbb
fstl
cmpb
and
js
decl
bound
xor
das
push
xor
in
call
or
ja
ds
sbb
cmp
loope
shrl
cmp
incb
xor
pop
addr16
jbe
iret
pop
pop
clc
call
aas
cmp
mov
test
dec
mov
add
push
test
das
sub
faddl
enter
dec
sub
or
mov
adc
std
xchg
pop
cmc
inc
insl
dec
into
or
mov
adc
stc
hlt
ds
test
addl
call
lods
push
sub
jo
out
inc
and
add
cmp
mov
in
sar
jg
aas
cmp
je
je
sub
cli
clc
in
jl
aam
fdivl
pop
adc
rcll
dec
push
mov
adc
cmpsl
sub
jmp
iret
nop
lret
push
scas
das
or
aas
jge
mov
inc
out
inc
outsl
incl
je
data16
fdivr
mov
lock
xchg
jns
leave
sub
aad
cmp
test
pushl
data16
cmp
call
test
inc
sti
fdivl
inc
mov
push
jg
jmp
pop
cmp
negb
stos
push
lret
and
addr16
sub
scas
pop
rcl
jno
fidivl
push
lea
pushf
stc
testl
lcall
fs
mov
in
jecxz
loop
and
adcb
or
sti
sub
and
data16
lcall
int3
scas
ficomps
push
cmpsl
mov
push
test
icebp
push
or
pop
inc
stos
mov
sahf
jo
jmp
mov
mov
movsb
cmp
push
cmp
gs
daa
sar
incl
pop
int
sarb
mov
xor
ret
inc
push
cmpsl
jmp
cmc
lcall
fists
popa
sbb
in
jo
nop
ret
jmp
outsb
sbb
mov
pushl
cs
pop
add
xor
movsb
xchg
mov
pop
rcr
imull
sbb
cmp
mov
lcall
jp
sub
mov
add
or
popa
cmc
test
mov
rolb
cmp
mov
enter
pop
mov
jbe
lcall
in
inc
repz
pop
jnp
idiv
ljmp
add
incl
test
stos
push
cltd
jg
jb
or
addr16
hlt
scas
scas
movsb
jp
cmp
jmp
imul
into
adc
lahf
mov
cmp
in
inc
sbb
push
std
dec
test
push
dec
sbb
push
movsb
in
mov
aam
daa
jmp
mov
lock
daa
jp
push
xlat
stc
pop
xlat
add
push
lcall
fwait
imul
add
xchg
cmp
ljmp
inc
jl
movsl
jo
cmpsl
std
adcl
ffreep
scas
push
shl
mov
and
incl
cmc
mov
xchg
xchg
inc
sub
xchg
cmpsb
ret
addr16
add
test
xor
out
sub
fwait
ljmp
fcmovnb
rcll
mov
cmc
jecxz
cld
sbb
leave
xor
mov
dec
rcl
sub
pushl
pop
ffreep
add
ljmp
sbb
repnz
jg
in
inc
pushf
xchg
jae
cmpsb
cmpsb
rcl
dec
lea
fs
push
ljmp
sub
ljmp
fcompl
je
fwait
leave
mov
test
fwait
push
pop
or
pop
dec
and
mov
out
pop
cmp
decl
jmp
fmuls
pop
aaa
cmp
pop
sub
ljmp
js
push
mov
leave
popf
mov
fimull
cmp
add
repnz
mov
fisubrs
mov
dec
pop
enter
sbb
xor
gs
ljmp
sub
xlat
push
in
xchg
je
aaa
cltd
mov
hlt
lods
pop
inc
add
xchg
mov
aaa
lret
cmpsl
mov
imul
iret
mov
ljmp
in
pushf
popf
cmp
or
call
inc
xchg
inc
fistl
js
gs
bound
cmp
mov
lcall
push
cmp
test
fistl
adc
mov
cltd
mov
ds
xchg
cltd
imul
aad
sbb
pop
sahf
and
out
xor
jmp
and
mov
ds
ret
gs
jle
and
repnz
out
push
jmp
imul
adc
ljmp
push
inc
dec
jge
daa
cmpsl
pop
mov
xchg
sub
add
or
add
and
jg
popf
push
mov
pusha
orb
stc
pop
sbb
push
mov
stos
ljmp
sbb
lds
jmp
cmpsl
or
lret
nop
seta
jge
jge
xchg
adc
ljmp
mov
lods
mov
ret
jmp
stc
pop
std
ret
scas
sbb
sbb
push
mov
mov
adc
push
ljmp
cli
mov
adc
cmp
ret
fists
dec
ja
or
rorl
decl
scas
xlat
mov
pop
mov
fstps
fcmovu
roll
mov
pop
icebp
dec
pop
and
test
imul
jl
lret
mov
jmp
and
dec
std
inc
mov
jbe
sbb
shl
inc
mov
xchg
mov
loope
mov
shl
pop
pusha
pop
cltd
ret
sub
loopne
push
xor
outsb
call
jg
cmp
ss
ljmp
xchg
push
pop
push
jbe
sbb
pop
push
loop
mov
xchg
mov
sti
lret
incl
movsl
ss
mov
fisubs
shll
repnz
insb
add
incl
add
int
xchg
je
insb
push
daa
inc
mulb
or
testb
mov
and
sub
decl
push
movsb
sahf
pop
pop
adc
adcl
aam
cltd
inc
lock
pop
pop
add
mov
adc
add
in
sbb
sub
mov
jg
inc
add
cwtl
cmp
rcr
cmc
pop
and
icebp
icebp
mov
push
daa
fcomip
call
inc
fldenv
add
sub
cmp
mov
jne
mov
mov
rorb
mov
out
push
call
xchg
lea
out
and
mov
mov
jno
mov
sbb
jmp
add
and
pusha
xchg
orb
icebp
out
js
movsb
lods
dec
cli
pop
ss
subb
xlat
filds
push
testl
add
dec
lcall
iret
adc
insb
xor
negl
inc
fucomp
cmpsb
adc
and
incl
push
ret
arpl
test
repz
pop
pop
enter
add
fwait
das
sub
out
dec
inc
cltd
ljmp
add
mov
xchg
ret
lahf
add
xchg
mov
mov
lods
jmp
rclb
mov
xor
push
jae
imul
mov
inc
in
pop
sub
mov
mov
fmull
pop
cld
adc
cmp
cmc
push
sbb
pop
mov
sbbb
loop
xor
pop
mov
call
mov
xor
hlt
enter
clc
ficomps
shlb
cmpsb
push
dec
mov
cld
mov
push
cmp
out
add
and
xor
lock
jne
outsb
cld
sub
dec
cmp
lret
scas
mov
xorl
out
sahf
sarb
mov
les
mov
popa
cltd
scas
mov
push
jg
inc
pop
mov
scas
cli
ljmp
mov
inc
xchg
pop
hlt
insl
out
push
dec
dec
insb
jg
mov
loop
jp
idiv
jle
mov
rcr
incl
xchg
fsubp
adc
ss
aaa
inc
mov
decl
mov
or
sbb
and
popf
stc
jnp
or
add
cmp
icebp
nop
xchg
movsb
dec
fildl
data16
pop
arpl
aaa
or
jnp
dec
and
cwtl
xor
inc
xchg
fs
mov
loopne
call
xor
test
ss
adc
idivb
adc
pop
and
enter
cli
add
mov
push
in
lods
je
dec
xchg
mov
sar
scas
cli
fadds
insl
push
xchg
push
xor
ret
or
sar
decl
and
and
pop
cmp
push
lods
adc
and
xchg
std
jg
pop
pusha
cmpsb
int3
pop
push
ja
movsl
push
scas
aas
sub
mov
fdiv
mov
jg
inc
je
mov
mov
and
fistpll
adc
mov
inc
in
dec
leave
das
cmp
mov
pop
mov
mov
out
dec
mov
decl
inc
ret
sar
mov
mov
cli
add
adc
pushf
adc
lret
xchg
ljmp
test
cmpsl
gs
int
shlb
dec
cmpsl
stos
int
mov
popf
ljmp
sbb
ds
cmpsl
and
notl
std
test
imul
out
jb
dec
push
xlat
roll
in
dec
mov
adc
ja
push
test
outsl
xor
pushf
out
adc
fwait
xor
push
lret
movsb
jp
inc
mov
xor
inc
jmp
fwait
sub
jmp
fcomps
dec
ja
in
adc
cmpsb
cmp
jl
xor
inc
jnp
pusha
jge
mov
dec
loopne
addr16
xor
adcl
nop
cmp
jle
dec
lds
scas
faddl
or
aas
push
push
mov
fdivrp
inc
filds
jmp
divl
xchg
sbb
add
pushl
fstp
or
scas
es
sbb
lcall
mov
push
push
cmp
pop
jp
jns
leave
aad
jmp
data16
shl
lds
cld
ja
incl
stc
pop
inc
out
xchg
push
pop
mov
fildl
xchg
xlat
test
lcall
pusha
jecxz
xchg
loop
ds
aas
shl
jg
xor
dec
sbb
mov
ljmp
cmpl
mov
nop
adc
out
mov
push
sub
ret
mov
dec
jg
mov
cmp
pop
xor
insl
mov
rol
mov
fcompl
dec
xchg
roll
shl
call
shll
or
cmp
cmp
shrb
lds
inc
scas
or
daa
mov
mov
insb
lock
dec
imul
bound
call
xchg
gs
stc
popa
sub
xor
sub
mov
mov
fdivrl
iret
loopne
inc
mov
fisubl
fstpt
add
es
incl
cmc
add
jns
repnz
xor
cli
cmc
push
xor
pushl
in
fsts
lea
test
add
mov
lret
insb
in
in
mov
mov
and
mov
dec
cmp
xchg
fsubl
inc
repz
jmp
cmpsb
or
lret
pop
sub
sub
incb
addr16
stc
mov
cmp
hlt
lcall
pop
aad
lods
mov
and
je
mov
xchg
push
out
iret
mov
scas
adc
ljmp
mov
xchg
adc
mov
inc
cmp
jne
mov
push
pop
or
loopne
inc
mov
test
data16
aad
mov
jg
mov
cld
pop
fisubrl
and
pop
ret
push
mov
js
decl
std
jo
test
mov
fsubrs
mov
lock
cmc
and
pushl
sysenter
lret
hlt
or
int
xchg
or
mov
jbe
aaa
cmpsb
xor
pop
xor
jg
in
sub
callw
out
or
push
fabs
xchg
gs
cmp
mov
pop
jbe
sahf
in
and
pop
int3
jb
push
add
nop
lds
cwtl
stos
jnp
jb
hlt
xchg
jecxz
loop
xor
shlb
aas
ret
das
sbb
into
add
adc
das
cli
addb
and
popf
fisubrl
nop
pop
xor
push
insb
popf
out
dec
fldl
ja
xchg
add
aam
mov
xchg
mov
mov
mov
cmc
cmp
out
mov
es
mov
lahf
lods
mov
std
test
lcall
lea
outsl
push
decl
add
xor
sbb
jg
inc
pop
popf
aam
dec
lcall
jnp
cmp
call
pop
leave
push
sub
or
insl
jg
decl
sbb
out
jns
inc
pop
or
adc
and
jmp
mov
cld
xchg
xlat
ljmp
cmc
bound
mov
jle
dec
sti
cmp
enter
cmp
leave
mov
mov
hlt
adc
pop
pop
jg
jne
sub
pop
mov
lret
jb
mov
jmp
sbb
mov
into
rclb
scas
inc
mov
push
cld
mov
jmp
sub
and
jo
movsb
and
cli
dec
shll
mov
imul
jge
inc
add
fdivl
out
jae
dec
adc
ret
insb
mov
mov
ljmp
sub
addl
or
fdivs
ds
ljmp
out
dec
sub
popa
aas
mov
lea
shr
es
sub
sahf
decl
stos
loopne
jecxz
pop
xor
dec
insb
adc
mov
in
jecxz
lcall
xor
ss
push
push
outsl
mov
out
sti
movb
sbbl
or
mov
mov
fs
cmpsl
aaa
sbb
mov
mov
lret
decl
out
and
push
pop
adc
cmc
rcl
sti
mov
popf
cmp
es
ljmp
sarb
cmp
stos
dec
xor
cmp
xchg
jbe
jmp
adc
loop
and
stos
cmc
lret
dec
shrb
add
testl
cmp
sub
and
les
pop
test
loope
std
mov
into
mov
test
xor
cmp
mov
inc
stos
inc
inc
leave
fmuls
cmp
movl
push
loop
push
ljmp
clc
xchg
hlt
or
and
pop
inc
add
clc
add
jg
add
adc
das
mov
jg
pop
or
shlb
loope
jmp
popa
lods
mov
pop
xor
inc
pushf
xchg
movsl
shlb
mov
call
incl
mov
aam
ljmp
xlat
push
add
xchg
adc
xchg
movsb
pop
call
pop
lock
push
repz
mov
rcr
mov
incl
sbb
inc
call
imul
push
dec
cli
incl
addb
idiv
dec
pop
jle
push
add
loope
jp
sbb
nop
mov
pusha
inc
fnstenv
daa
int
mov
or
dec
int3
dec
incl
jnp
sahf
stos
xor
gs
imul
pop
jo
incl
inc
cltd
insb
sahf
mov
lea
push
adc
cmp
fldt
push
mov
mov
inc
or
cld
aam
das
inc
push
filds
flds
add
inc
fisubs
adc
ret
movntq
jb
pop
arpl
out
insb
sub
fildll
out
cmpb
fsubr
decl
sarl
cmp
and
xchg
fwait
pop
rclb
decl
imul
mov
dec
arpl
pop
or
pushl
jmp
shrl
fwait
popa
jbe
cmp
sub
or
stc
xor
cmp
fldcw
das
jg
mov
outsb
add
outsb
xchg
jno
xlat
fidivrs
idivb
fadd
in
inc
dec
or
sar
shlb
stos
je
call
cwtl
or
clc
pop
cmp
cmp
push
sbb
or
inc
out
out
movsl
rep
bound
mov
sbb
das
adc
jb
mov
arpl
ljmp
xlat
and
jns
test
push
stos
fwait
pop
pop
addb
mov
pop
repz
das
fsubl
cmp
mov
sub
pusha
test
insb
je
jo
xor
pushl
sbb
xchg
jle
cmc
cwtl
icebp
sti
out
sbb
and
mov
dec
and
xchg
adc
push
fldenv
pop
pusha
and
inc
loope
inc
icebp
sahf
sub
xor
mov
adc
cwtl
int
in
inc
cmp
clc
out
sbb
inc
mov
jae
movsb
fcom
das
outsl
push
push
and
xor
lock
ljmp
and
fsubl
fidivrs
movsl
mov
mov
lret
addl
mov
sub
add
cmp
mov
inc
jno
sub
repnz
xchg
dec
add
div
stos
mov
push
sbb
mov
push
dec
pushf
xor
cmpsb
push
sbb
leave
add
cmp
movb
pop
mov
test
pop
fs
insl
cmp
mov
cwtl
cmp
call
in
mov
push
data16
lods
ss
sbb
in
call
imul
lods
les
in
jge
rorl
dec
pop
xchg
scas
sahf
aaa
sub
sbb
push
enter
incl
outsl
addb
jbe
xchg
pop
dec
push
mov
pop
es
sub
rorb
sbb
negl
jg
pushl
leave
imul
insb
jno
andb
daa
sub
or
int
incl
and
mov
cltd
daa
andb
pop
pop
mov
jp
dec
cmpsb
rcll
mov
ljmp
adc
addr16
loopne
cmc
xchg
cmc
dec
sbb
divl
dec
cmpsl
sbb
jg
lock
cmp
jle
mov
loopne
push
arpl
out
push
jmp
enter
and
les
add
repz
into
shlb
xor
lcall
and
mov
inc
pop
ficompl
mov
mov
jbe
add
incl
jle
test
or
dec
pop
add
mov
xchg
lret
push
push
lods
sbb
pushf
fidivrs
mov
xor
pop
call
xlat
icebp
cmp
shrb
dec
call
sbb
iret
stc
pop
cwtl
sub
scas
push
hlt
decl
insb
inc
sbb
scas
rolb
mov
fistps
aaa
clc
fcompl
pop
shl
mov
mov
fildll
das
cs
rcll
xchg
neg
iret
outsb
sub
inc
cmpsl
mov
jb
pop
cmc
aaa
and
movsl
xor
jl
push
notl
mov
lcall
and
jo
xchg
push
lret
jp
sbb
cmovl
repz
jge
shlb
repz
rorb
pop
dec
push
repnz
inc
or
xor
arpl
insl
cmpsb
call
das
decl
les
xor
dec
insb
sarl
mov
pop
popf
loopne
add
sub
lret
mov
shll
jmp
ficompl
sbb
push
mov
dec
adc
mov
push
sar
or
arpl
xchg
std
cmc
nop
mov
nop
loop
into
xor
jbe
push
sub
shll
ljmp
jnp
std
gs
out
mov
jae
cmp
sub
ret
jmp
inc
adc
dec
jecxz
xor
cltd
jge
mov
or
popa
or
cli
incl
mov
pop
out
xorb
jne
inc
pop
lods
enter
je
ljmp
pushl
sbb
sahf
or
push
xchg
movsl
insb
loope
mov
incl
cmp
add
out
sub
loop
cmp
jmp
mov
mov
lea
push
push
inc
xor
repnz
mov
jge
add
fldenv
adc
imul
pop
cmpsl
push
dec
ja
push
push
jno
outsl
andb
iret
mov
jl
pop
call
sub
dec
mov
into
popa
incl
aas
inc
and
pop
out
in
mov
push
lods
mov
aam
xor
test
loopne
call
sahf
cwtl
jno
mov
mov
xor
pop
mov
sub
xor
daa
add
pop
mov
xor
push
fiadds
ret
add
decl
aaa
push
sub
stos
pop
pop
ret
cmp
jmp
negl
ret
dec
mov
mov
and
mov
mov
mov
or
sar
inc
js
iret
mov
adc
dec
mov
adc
xor
push
mov
cmp
add
add
lcall
dec
in
add
pop
sub
push
iret
lds
or
dec
jg
dec
cld
test
or
or
dec
inc
scas
jecxz
std
add
mov
arpl
loop
ss
jp
xchg
jmp
out
aad
mov
aad
mov
jb
dec
out
add
cmp
fcoml
popf
jmp
adc
outsl
mov
mov
jecxz
lock
mov
cli
mov
pop
and
bound
mov
xor
ljmp
shrb
bswap
pop
xlat
imul
xor
jbe
mov
pop
jge
cli
pop
dec
pop
sbb
adc
out
pop
sub
mov
ja
aas
daa
lea
pop
gs
decl
add
inc
addr16
mov
pop
aam
std
outsl
lods
inc
mov
pop
inc
daa
orl
mov
cmc
push
mov
psubsb
push
add
sbb
cmp
or
push
call
jne
cmc
mov
lcall
call
bound
mov
decl
les
fwait
sbb
jnp
sub
cs
sub
js
sti
ds
incl
lcall
add
aam
mov
lea
jne
adc
jg
test
sbb
cld
and
cs
repnz
sub
jg
incl
ss
inc
cltd
jo
cmp
pop
inc
push
mov
testb
cmp
dec
push
mov
jae
mov
movsl
loopne
push
cmp
mov
call
dec
aam
adc
sub
mov
mov
in
push
pop
les
ret
xor
aad
ljmp
xchg
jne
add
js
mov
jne
push
and
mov
out
out
clc
mov
rclb
std
sbb
bound
rclb
les
incl
icebp
in
shlb
fstpl
mov
std
pop
pusha
push
ret
mov
mov
fldl
lods
cltd
and
add
push
into
shr
rorb
lret
or
ss
ljmp
sahf
js
lea
mov
lds
jmp
xor
dec
aam
mov
sub
or
mov
imul
lret
add
pushl
push
sub
inc
cmove
leave
aas
or
xchg
jb
and
sahf
add
fwait
movb
jmp
mov
pop
dec
dec
repnz
test
call
aaa
stc
int
pop
movsl
ljmp
test
xchg
xor
push
shll
pusha
lock
call
mov
sub
mov
out
jg
hlt
push
pop
outsl
pop
adc
daa
push
pop
xlat
cli
gs
clc
push
mov
out
fs
clc
adc
jle
testb
rcrb
push
xchg
xor
push
or
incl
xchg
cld
xchg
aaa
jae
hlt
sub
leave
in
test
pop
hlt
ljmp
sbb
scas
push
into
in
dec
enter
sub
repz
jmp
pop
lahf
push
mov
xor
cli
cmp
add
push
fistl
cmp
call
rcl
scas
arpl
pop
cmp
cld
xchg
iret
test
lods
stc
sub
repnz
es
mov
jp
ret
lcall
xchg
mov
imul
adc
shrb
push
lret
mov
mov
xchg
push
jg
js
aaa
sub
push
jp
pop
adc
arpl
outsl
and
lret
pop
push
ljmp
cli
inc
push
xchg
pop
fimull
inc
fidivrs
xor
addr16
mov
mov
sbb
incl
dec
jno
push
push
in
lret
xor
push
icebp
xor
es
into
andl
fisubrs
adc
add
dec
fdivl
adc
loope
int3
push
sub
fldl
xor
jnp
in
pop
repz
jb
pop
int3
push
pop
xchg
mov
ja
lds
hlt
mov
mov
dec
mov
push
ljmp
cwtl
popa
jnp
sar
popa
jbe
cmpsb
push
out
in
inc
sbb
pushl
jg
mov
push
xchg
pop
mov
movsl
jno
clc
and
imul
fcomip
and
cmp
mov
or
inc
lods
addb
loope
adc
lret
mov
sarb
cmpsb
mov
jg
jmp
mov
jge
mov
sbb
daa
nop
mov
xor
cmpsl
push
and
ljmp
xor
mov
mov
push
xchg
add
or
cmp
add
jecxz
shll
push
or
cli
or
cmpsl
jg
popa
cld
dec
dec
in
dec
lea
pop
fwait
stos
push
fldt
cli
bound
inc
orb
sbb
out
sbb
sti
das
bnd
lods
paddusw
xchg
and
mov
push
loop
push
adc
loope
movsb
or
and
jne
pop
jp
xor
mov
es
fisubrl
xor
lds
cmpb
push
jno
push
inc
lret
pop
xor
shlb
mov
cmp
xchg
and
jl
push
daa
sbb
aam
add
fmuls
add
pop
cld
lcall
sub
enter
stc
into
outsb
fsubrs
sub
and
cwtl
xchg
jmp
daa
cld
ficomps
sub
cmp
je
test
push
jb
adc
cmp
lock
in
in
scas
ds
pop
dec
xchg
hlt
inc
sar
nop
jno
jno
rorl
inc
decl
sbb
insb
xchg
outsb
clc
push
loope
mov
push
clc
xchg
adc
jbe
insl
fisttpll
test
ljmp
mov
mull
mov
adc
inc
and
repz
push
ljmp
cli
test
xlat
push
dec
filds
test
popa
and
sub
popa
in
ljmp
cmp
sub
sub
insl
pop
popa
push
jae
hlt
push
sbb
clc
popf
call
std
lret
inc
mov
xchg
mov
xor
sub
pushl
decl
or
aam
das
inc
insl
cwtl
cmpb
sub
insl
shlb
je
cwtl
lcall
ja
lahf
cltd
insl
testl
sub
addr16
cmp
or
add
jmp
les
jp
jo
xor
cmc
bound
out
push
mov
in
int
or
loop
enter
pushl
fsubs
outsl
popl
icebp
and
mov
lds
shrb
add
cwtl
cmp
mov
incl
orl
ret
xchg
and
pop
into
jge
rolb
inc
adc
xorl
xchg
dec
dec
loop
fisttps
pop
fdivl
jno
push
shrb
in
lret
movsl
xor
loop
jne
pop
lock
stos
jle
xlat
lret
insb
sub
lods
ja
loop
out
dec
decl
shrb
jb
incl
add
xchg
sub
pop
leave
xorps
nop
jecxz
out
push
pop
in
xchg
dec
cli
out
push
lahf
push
stos
pop
xor
outsl
xchg
cli
mov
push
or
mov
jg
jg
mov
orl
pop
xchg
mov
addr16
dec
adc
daa
lods
mov
ljmp
sub
pop
jae
dec
mov
cld
xchg
mov
jnp
push
xchg
add
decl
lock
movsb
inc
add
sti
xchg
repnz
inc
jbe
inc
sbb
ljmp
shrb
push
fcoml
inc
and
or
jl
adc
pushl
push
jno
fs
adc
mov
fistpll
es
test
inc
push
dec
bnd
push
lcall
and
adc
movb
and
dec
shrl
call
dec
push
outsb
lahf
dec
and
ds
push
insb
lods
outsl
int3
inc
sub
ljmp
rorb
mov
movsb
in
lahf
iret
in
roll
sti
and
jnp
ljmp
clc
xchg
fdivp
movl
push
add
mov
and
call
add
sbb
pop
push
lds
stos
dec
mov
xchg
lahf
out
mov
mov
jmp
or
mov
es
inc
scas
mov
sub
jmp
sub
push
cwtl
inc
testb
shrb
xor
push
mov
mov
pop
sti
lds
dec
iret
lahf
mov
andl
or
adc
notb
sbb
int
add
pusha
add
decl
dec
pop
clc
pop
mov
cmp
jg
cmp
fildll
js
jo
pop
shrl
aam
push
mov
push
and
lock
cmp
bound
movsb
out
xorl
stos
and
clc
fnstsw
xchg
lds
ljmp
ret
cmp
sbb
rolb
leave
mov
push
sub
cmp
ret
psraw
cmc
jb
das
cmpsb
add
daa
imull
jle
imul
aas
add
mov
and
loop
xchg
jmp
and
or
insb
mov
jg
sub
xor
cmp
les
inc
fisttpll
sbb
out
sahf
comiss
dec
loop
inc
leave
shrb
xor
aad
push
rorl
icebp
pop
and
mov
add
pop
add
fists
xlat
mov
xor
popa
cmp
jmp
inc
cmp
mov
jp
mov
pop
lods
hlt
pop
daa
cmp
imul
add
fs
incl
lret
dec
test
push
mov
inc
jmp
jne
js
jae
push
mov
xchg
push
cltd
lds
aad
insb
pop
or
mov
pop
xor
sar
ljmp
jns
xor
es
lcall
fistl
pop
dec
cmpl
cld
mov
mov
clc
jg
add
shll
test
ljmp
test
movsb
sub
sbbl
add
mov
add
lret
push
arpl
pop
inc
shlb
lret
iret
inc
test
pop
lahf
out
repnz
mov
std
out
push
mov
adc
mov
cli
loop
add
pop
or
cmp
sub
ja
les
mov
jg
mov
ljmp
push
das
mov
aas
xchg
std
inc
aam
les
into
and
std
insl
sbb
push
fdivrs
or
fnclex
ljmp
push
fdivrl
cmp
mov
ja
add
icebp
adc
jp
rclb
xchg
push
xlat
fs
gs
cld
and
sbbb
xchg
xchg
mov
jge
pushfw
jne
addr16
xchg
shrb
stc
sahf
imul
mov
xchg
and
sbb
rep
jp
adc
decl
sbb
bound
mov
out
sbb
inc
dec
mov
cmp
push
cld
pushl
cmpl
inc
and
fsubrl
test
pop
xlat
dec
stos
push
push
popf
mov
xorb
inc
add
and
dec
mov
jg
fimull
mov
xor
js
sub
pop
cs
cmpb
add
cwtl
mov
pop
les
jae
jno
dec
pusha
std
call
rolb
rcl
lret
test
div
push
add
movb
jmp
hlt
in
test
adc
out
stos
or
pop
aad
pusha
je
loope
pop
push
jmp
and
lcall
aas
stc
and
push
dec
and
xor
loope
repnz
mov
mov
into
jne
loopne
std
in
lods
pop
ljmp
push
sbb
es
mov
mov
jecxz
xor
push
decl
mov
push
jo
jmp
icebp
xor
mov
mov
pop
dec
ljmp
cli
imul
imul
sub
call
movsb
movsl
in
fwait
subl
lret
addb
test
add
lods
add
imul
call
xchg
cmp
and
stos
or
or
outsl
jge
sub
adc
cmp
jmp
out
test
xchg
outsl
scas
inc
in
mov
ret
cmpsb
cmpb
xchg
mov
adc
lock
popf
loopne
lret
call
jno
mov
mov
mov
mov
cltd
push
clc
sub
inc
jmp
adc
decl
scas
sbb
fstl
mov
pushf
es
dec
mov
imul
movsb
scas
mov
jmp
loop
cmp
fisubl
lea
pop
and
push
pop
test
push
push
xor
pop
ss
push
ljmp
cwtl
pop
dec
rcrb
or
lea
leave
mov
repnz
lods
mov
bound
pop
mov
loopne
ljmp
push
inc
sub
icebp
scas
repnz
cmc
mov
add
mov
pop
mov
cs
cli
or
lahf
rol
xchg
ss
call
jl
inc
sbb
pop
mov
into
mov
test
faddl
inc
and
push
jo
and
test
mov
add
jg
or
dec
decl
cmp
push
push
lock
mov
dec
dec
imul
ljmp
ds
jmp
vpsubsw
jl
jl
jbe
aad
mov
shl
or
in
jp
jp
add
mov
scas
outsl
es
xor
xchg
jo
lds
in
out
testl
mov
popf
sarl
push
mov
jl
inc
inc
cld
cli
sub
cmp
inc
mov
add
gs
and
inc
popf
out
and
int
enter
pop
xlat
pop
dec
addb
and
into
mov
mov
mov
xor
dec
mov
insb
bound
aam
sbb
daa
loope
push
cmc
cli
popa
lods
loope
sub
js
fiadds
xor
jp
rcll
or
and
lcall
flds
inc
fs
adc
mov
call
jno
and
inc
in
dec
mov
inc
scas
add
xor
push
js
mov
pop
aad
add
sub
pop
jno
mov
in
decl
mov
insb
stos
jecxz
pop
fmull
ljmp
mov
stos
stos
sbbl
pusha
cs
pop
mov
jnp
push
or
or
pushl
imul
adc
aas
in
ja
jns
push
push
shlb
cmp
frstor
push
pushl
fstps
push
mov
imul
imul
loope
jp
xchg
sbb
fisttpl
sahf
sbb
leave
push
or
or
ret
jl
jle
clc
nop
lods
ds
inc
push
mov
xor
clc
xchg
sub
push
sub
fmull
adc
and
arpl
pop
repz
inc
repz
cmp
xchg
addl
pop
iret
mov
jp
sti
leave
out
or
xor
fnstcw
in
pop
xorb
mov
jp
ret
in
imul
inc
cs
int
ljmp
adc
lods
push
xchg
je
pop
and
outsl
int
sti
xchg
daa
in
shll
adc
cli
lods
cltd
dec
in
into
enter
xchg
ja
nop
fstpt
or
out
aaa
and
in
mov
pushl
lahf
dec
popf
mov
mov
sarl
pop
push
sub
ss
mov
call
stc
jmp
mov
push
xchg
ror
sub
jae
scas
aam
cmp
ljmp
fcoms
jl
xchg
imul
jnp
ja
xor
int3
pop
test
and
push
das
rolb
aaa
pop
test
mov
xchg
rorl
movsl
movsl
pop
cmp
jle
or
and
mov
data16
sbbl
call
push
cltd
jmp
inc
sub
jmp
int
lock
jle
add
cli
jmp
dec
mov
pop
sub
dec
icebp
sbb
out
cmpsl
xchg
push
ret
fidivrs
xchg
pop
mov
insb
dec
lcall
sub
mov
inc
stos
cmp
sub
jns
std
mov
or
mov
es
loope
clc
or
imul
and
mov
adc
ficoml
pop
call
sbb
popa
in
dec
cmpl
subb
enter
mov
rorb
jge
cmp
push
addr16
out
mov
xchg
pop
push
add
ret
out
sahf
cmp
faddl
decl
loope
mov
dec
lods
ds
psubd
xor
icebp
out
hlt
or
push
inc
loopne
mov
sub
inc
xchg
add
sbb
mov
mov
test
add
lret
mov
in
adc
xchg
mov
sub
cmc
xlat
sub
scas
mov
add
sahf
inc
imul
xor
int
add
dec
outsb
lretw
loopne
jne,pt
cltd
cmp
pop
adc
xchg
push
ds
outsb
fisttpll
ret
inc
outsb
lds
ret
xchg
sub
jge
sub
cli
push
push
dec
lock
mov
mov
iret
pop
popa
dec
loop
shlb
push
pop
adc
aam
sbb
ret
scas
cli
push
adc
dec
cmpsb
xchg
push
dec
outsb
loop
jmp
ficomps
pop
lods
imul
dec
test
fwait
xor
stos
lcall
lret
lock
out
mov
mov
fwait
js
nop
push
sahf
or
xchg
add
pop
adc
enter
mov
pushl
mov
add
rorb
fs
mov
ss
outsl
sahf
popf
xchg
pop
ss
fwait
lahf
and
cmc
fnstcw
movsb
cmp
call
mov
push
fimull
xchg
ret
js
enter
sti
push
daa
or
cmc
pop
xchg
int
incl
mov
ret
aaa
test
sbb
hlt
cmp
cmpsb
inc
mov
in
cld
inc
fcoms
dec
mov
inc
add
cmp
jmp
insl
mov
or
mov
aam
mulb
popf
push
xchg
lea
insb
cltd
jecxz,pt
lods
inc
popf
adc
leave
sub
inc
mov
xchg
shrl
inc
arpl
xchg
mov
inc
cmpsb
or
jle
mov
mov
cli
lahf
aam
jae
je
xchg
popw
mov
cmp
jmp
adc
repz
lret
mov
flds
sub
dec
stos
fcomp
jnp
in
jl
mov
test
xlat
mov
imul
loope
or
pop
pop
dec
rol
mov
mov
push
dec
mov
lcall
orl
ss
shll
cmp
stc
dec
sahf
les
inc
adc
mov
sbb
call
sub
xchg
dec
mov
ljmp
add
or
lcall
sahf
and
fstpt
push
sbb
fwait
pop
jmp
and
cltd
dec
xchg
cmp
inc
cmp
cmp
shlb
mov
mov
pop
fwait
jb
lcall
ret
jecxz
cmp
dec
int
out
pop
les
mov
fisttpl
loopne
xchg
jo
fists
push
push
jbe
cltd
sub
jns
jno
sbb
incl
stos
rorb
imul
sti
xchg
jmp
test
jnp,pt
jb
outsl
sahf
mov
adc
lret
icebp
and
cmpsl
repnz
aad
out
dec
sub
cld
imulb
jbe
mov
dec
mov
mov
jmp
push
mov
lcall
sub
mov
jge
xchg
sub
bound
mov
mov
push
es
mov
inc
pop
adc
xor
lcall
frstor
pop
pushf
adc
aas
inc
sti
pusha
fcomip
dec
push
js
push
xchg
jge
test
mov
pop
je
rol
mov
jmp
mov
enter
lods
pop
dec
xchg
sub
fildl
movsl
pop
aam
mov
pop
dec
daa
repz
inc
in
mov
lcall
push
rorb
imul
sub
outsl
clc
ljmp
jp
mov
sub
push
pop
sbb
and
movl
ds
sub
sbb
inc
cwtl
das
cmp
mov
call
pop
loopne
mov
test
pop
mov
sub
lcall
or
inc
push
mov
sbb
xlat
or
out
jl
add
sub
in
pop
inc
es
test
stos
push
sbb
in
test
out
hlt
dec
xchg
jl
mov
mov
incl
int
jnp
xchg
mov
daa
movsl
ljmp
cmp
inc
popa
ret
cwtl
mov
cld
les
decl
aaa
jnp
mov
mov
sub
dec
push
pusha
out
arpl
loope
mov
push
std
incl
fcmovne
mov
fmuls
mov
divb
xlat
xchg
jbe
xchg
lcall
push
add
rclb
call
arpl
sbb
rorb
jmp
in
xor
popa
fisttpl
imul
mov
mov
adc
aas
jbe
test
push
ljmp
repnz
pcmpgtd
mov
mov
gs
push
fadds
or
xor
aam
lcall
sub
push
mov
fsubrs
call
aaa
ss
xor
sub
add
pushf
sbb
fs
push
mov
sti
int
inc
cmp
mov
xor
sbbl
insl
in
fs
clc
stc
xchg
mov
mov
decl
cld
fidivl
xchg
stc
fdivl
mov
xchg
imul
cmp
lret
movsb
movsb
negl
cltd
adc
decl
or
add
adc
xchg
mov
mov
sbb
lcall
lahf
cmp
mov
jno
mov
scas
fldcw
jno
insb
add
es
push
insl
nop
sti
pop
cmpsb
popa
int
pop
cmp
lds
fwait
xchg
jnp
dec
inc
push
jno
lock
mov
mov
pop
push
inc
or
xlat
add
incl
mov
fcomip
mov
cmpb
sahf
icebp
lcall
jne
insb
fadds
xchg
aaa
pop
or
jae
xchg
push
gs
push
iret
mov
pop
pop
repz
call
fisttps
sub
xchg
ss
or
push
out
mov
or
mov
mov
cmpsb
ja
pushf
clc
or
sub
outsb
mov
mov
mov
add
lcall
out
cld
mov
das
or
rorl
jg
cltd
push
pop
and
sub
cmc
jge
mov
decl
mov
xchg
xchg
ljmp
paddusw
imul
rorl
mov
outsl
dec
lcall
es
xchg
inc
mov
addr16
xor
add
daa
dec
sbb
sub
mov
jne
xchg
mov
mov
mov
sub
xor
push
scas
lret
sahf
sbb
cmp
jle
stos
inc
cld
or
decl
push
adc
shl
mov
stc
lods
xchg
mov
sub
test
jl
cmc
lcall
mov
sub
jp
cld
add
mov
mov
ljmp
inc
int
mov
ds
push
arpl
lods
mov
xor
sub
std
bound
fwait
sub
xorb
adcb
adc
aaa
fadds
or
cltd
push
sub
mov
mov
mov
or
jge
js
xor
lret
push
movsb
inc
or
sbb
in
leave
dec
mov
in
rclb
insb
mov
decl
fisttpl
mov
and
dec
test
outsb
ja
call
imul
xchg
xor
popf
mov
aad
mov
dec
ljmp
fadds
insl
mov
dec
mov
push
and
cmp
fdivr
decl
pop
cmp
pop
mov
mov
inc
cli
mov
push
jecxz
enter
lahf
aaa
pop
pop
cmc
aas
aaa
add
stc
inc
aaa
push
bound
mov
filds
sbb
out
in
add
aaa
decb
lcall
ret
inc
push
add
or
mov
cmp
dec
dec
enter
jle
mov
lahf
dec
mov
xchg
std
lahf
dec
mov
push
in
xchg
or
test
out
mov
lock
sub
or
leave
xor
fdivr
loopne
dec
jo
rclb
sub
add
add
fildl
add
add
or
pop
pop
push
or
fdiv
decl
or
or
or
or
adc
adc
std
fwait
dec
rclb
adc
add
pop
sbb
adc
adc
cmpsb
add
or
adc
pop
adc
ret
add
rolb
mov
arpl
add
add
add
jge
arpl
fiadds
add
push
and
cwtl
adcb
adc
out
cmp
add
and
inc
push
mov
call
push
popa
pop
and
xor
inc
mov
adc
xor
cmpb
daa
dec
xchg
xchg
dec
rcr
inc
fwait
add
out
sbb
push
inc
addb
loope
cmc
and
or
out
dec
or
nop
adc
mov
pushf
pop
add
add
add
cmp
cmp
incl
lods
push
adc
pop
popa
jno
and
adc
mov
mov
lock
loope
icebp
or
push
or
mov
sbb
addb
loopne
scas
fiaddl
or
js
decl
push
push
cli
sub
rcr
push
ret
xchg
incl
sub
cmpsb
xor
aas
imul
fdivrl
add
or
pop
les
dec
add
or
cmp
lea
pushf
ret
ja
out
cmp
xor
mov
cmpsl
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
stc
stos
pusha
inc
inc
xchg
pusha
add
std
or
sub
add
lds
cld
cli
and
pushl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
push
dec
adc
mov
mov
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
jmp
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
fdivp
jmp
orb
int3
lcall
fs
scas
mov
pop
pop
fbstp
movb
xchg
sbb
scas
adc
mov
xor
lods
ljmp
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
ss
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
mov
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
pop
cwtl
int
arpl
push
out
or
push
push
je
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
pusha
jg
sarl
xor
hlt
and
xchg
jmp
sbb
movsb
mov
mov
mov
out
pop
cld
ljmp
dec
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
insb
std
in
pop
stc
loope
mov
sar
andl
icebp
idiv
push
push
mov
imul
scas
fadds
in
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
test
subl
jb
adc
push
lock
lods
jp
testb
mov
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
jbe
idiv
adc
aaa
xchg
in
add
inc
adc
loope
fisttpll
call
icebp
aas
std
cli
push
push
push
idivl
or
mov
cmp
sub
inc
scas
inc
mov
inc
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
jmp
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
add
imul
jmp
xchg
pop
clc
pop
hlt
sub
in
stos
movsb
add
lea
jg
gs
std
xorb
cld
lcall
outsl
adc
ret
das
pop
pop
pop
shlb
push
std
incl
out
sarb
sbbl
jno
or
sarb
std
pop
call
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
incl
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
ljmp
arpl
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
ljmp
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
or
mov
call
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
incl
adc
push
jo
pusha
imul
add
mov
cmp
xchg
ljmp
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
mov
and
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
pop
mov
push
iret
adc
pop
cld
addl
adc
and
fnstenv
push
enter
jecxz
scas
sub
cld
aas
clc
aas
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
test
pop
jg
add
jg
mov
mov
aad
test
mov
mov
iret
push
std
mov
out
jbe
push
sbb
stos
icebp
pop
incb
jno
mov
cvtpi2ps
push
inc
jecxz
sbb
sarl
adc
mov
loopne
sar
adc
lahf
xor
and
cmp
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
std
mov
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
lcall
cmp
cld
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
in
int
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
ds
clc
in
movsb
insb
or
and
xchg
fidivrs
pop
rcl
add
insb
test
aas
repz
outsl
lock
push
push
paddsw
pop
stc
out
mov
clc
push
std
mov
cmp
or
mov
ljmp
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
mov
incl
out
rolb
pop
or
or
mov
mov
dec
ss
lods
movsb
or
repnz
lock
pushf
imul
jl
fistps
jl
xchg
imul
pop
in
outsl
out
cmp
jmp
mov
pop
lock
in
scas
and
jmp
hlt
dec
mov
xlat
inc
call
cld
pop
aas
mov
jg
mov
out
xchg
adcb
std
adc
adc
loopne
cltd
or
mov
ret
nop
cmp
das
push
mov
add
lock
pop
pop
div
cld
idivl
pop
aas
adc
fs
loope
jae
push
xor
jg
ljmp
cmpsb
jge
fbstp
out
xchg
add
out
insb
clc
pop
inc
icebp
mov
loope
mov
cmpsl
popf
bound
cmp
ja
push
daa
outsl
das
jge
fxtract
mov
call
pop
lock
decb
adc
mov
and
adc
call
push
iret
or
lock
and
int
add
enter
push
pop
aaa
std
fisttps
outsl
js
dec
inc
sbb
xchg
fimull
hlt
orb
ror
sbb
cmp
xor
aaa
inc
adc
pop
lds
aas
pop
clc
loope
loope
mov
test
push
inc
lahf
jp
dec
add
xlat
fimull
xor
loopne
sub
cmp
cmp
repz
mov
sti
push
push
jo
sarl
pop
out
jg
jno
ret
dec
inc
sub
cmp
ficoml
dec
arpl
out
iret
push
dec
jge
lcall
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
push
cld
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
mov
sub
mov
lock
stc
push
dec
out
fstpt
mov
enter
inc
mov
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
std
call
addr16
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
call
sti
push
sti
pop
inc
dec
bound
push
mov
push
sbb
bsf
popf
int3
pop
iret
and
adc
pop
add
pop
orb
xchg
jnp
adcb
jne
clc
push
into
and
dec
lcall
push
or
sbbl
xor
xlat
and
jno
lret
addb
inc
push
jae
bound
mov
push
dec
and
jne
jo
imul
jnp
fisubrs
ss
add
adc
push
inc
xchg
add
mov
sub
xchg
adcl
push
dec
inc
adc
outsb
rolb
push
adc
inc
mov
arpl
out
mov
inc
sbb
test
sbb
add
dec
pop
push
outsl
insl
imul
in
outsl
insb
push
push
xchg
jo
push
adc
ret
dec
gs
push
aas
mov
int
sbb
mov
shlb
je
xchg
and
sub
adc
imul
jne
js
movsl
pop
sbb
push
popa
outsb
adc
mov
inc
jns
push
imul
popa
jb
icebp
loope
in
adcb
push
fldt
testl
insl
insl
sbb
fidivl
gs
dec
jb
int3
fcoms
sub
roll
bound
repz
push
outsb
dec
xor
or
insb
sbb
and
push
ficoms
adc
outsl
jp
sbbl
scas
inc
jo
rcrb
int3
andb
push
pop
loopne
loop
ds
insb
jne
mov
jne
pop
pop
fadds
push
xchg
imul
xchg
movsb
divb
fildl
adc
inc
mov
push
jo
or
pop
push
out
popa
mulb
ja
dec
jb
push
jle
addb
addr16
or
cmpb
jae
adc
pop
push
push
push
cmp
inc
jne
arpl
rolb
dec
xor
das
cmp
lcall
popa
loop
bound
pop
inc
ja
subl
call
push
pop
mov
in
xchg
test
jo
push
dec
inc
dec
sbb
push
stc
je
mov
jae
arpl
or
push
out
and
pop
pop
iret
pop
loopne
repnz
push
xor
xor
sbb
inc
in
push
and
in
roll
outsl
popw
imul
jb
mov
sbb
test
ja
inc
xchg
push
jne
rol
sti
movsb
push
adc
fcomi
jbe
sbb
inc
js
mov
dec
jae
enter
stos
insb
jnp
aas
xchg
dec
jmp
inc
push
pop
pop
sub
test
scas
andnps
lret
and
outsl
push
in
jecxz
xchg
lods
xor
jl
stos
je
ja
mov
inc
inc
jg
pop
push
inc
inc
inc
mov
ja
data16
loope
sbb
jo
jp
lds
insb
pop
adcl
xor
insb
or
push
sbb
insb
mov
lcall
mov
jns
int
xchg
dec
push
or
sbb
popa
or
push
imul
xlat
mov
jns
or
xchg
inc
je
push
inc
inc
sbb
sti
orl
inc
sbb
ret
enter
sub
jno
or
sbb
sub
in
ret
loope
push
es
mov
lret
scas
add
pop
and
pop
or
loope
sbb
xor
rorl
cmp
js
push
out
push
jae
pop
adc
iret
lods
sub
pop
sbb
pop
pop
mov
add
jo
in
push
jne
sbb
mov
inc
out
and
inc
inc
or
stos
jno
leave
jo
jae
xor
in
mov
add
add
adc
push
xor
inc
mov
mov
popa
fbld
sub
xchg
cs
sbb
inc
lods
repz
add
jae
push
push
or
or
dec
xor
icebp
sbb
cmpsl
adc
dec
test
dec
push
add
popa
dec
or
jmp
je
and
cmp
gs
push
lock
scas
sbb
pop
mov
pop
aad
xchg
addl
ret
push
ds
loopne
xchg
shlb
or
cli
pop
lods
pusha
or
pusha
fs
mov
add
jg
ss
cmp
out
and
inc
lahf
addr16
inc
sbb
mov
inc
sbb
aaa
dec
sarl
and
movsl
out
push
fdivrl
and
ret
pop
fdivs
ret
sub
insb
cmp
sub
sbb
aam
jp
mov
lcall
sbb
push
fisttps
nop
popa
adc
fbld
mov
fs
loopne
inc
imul
outsl
repnz
jb
xchg
inc
fcoms
lods
inc
aam
inc
push
into
jo
inc
inc
sub
push
arpl
mov
std
inc
imul
lea
fs
sbb
pusha
pop
push
mov
fs
ja
add
lock
insb
jle
push
movb
inc
dec
push
mov
ds
test
cmp
nop
pop
mov
jne
cmp
es
jl
js
es
popa
enter
and
call
push
jle
jmp
push
loopne
ds
loopne
sar
negb
xor
xorb
dec
push
push
outsl
sub
shlb
sub
andb
fldenv
loopne
push
push
adc
ja
jbe
adc
pop
loopne
jg
jnp
or
dec
outsb
dec
in
adc
movsb
xchg
sub
ss
fwait
dec
jnp
mov
pop
add
add
mov
dec
imul
movsb
dec
cmpsb
imul
dec
rcrl
mov
imul
or
xor
mov
mov
loopne
shrb
mov
inc
xor
inc
jo
cli
fcomps
bound
inc
pusha
inc
jl
fs
push
sbb
std
push
nop
jae
pusha
and
pusha
insl
insl
mov
and
add
imul
leave
mov
add
push
lock
mov
rorl
xlat
and
and
mov
outsb
sbb
pop
lea
push
aaa
cmpb
pop
lock
xchg
cs
cmpsl
push
mov
data16
sarb
push
mov
mov
jo
fmuls
scas
arpl
aas
arpl
push
sbb
jns
xchg
mov
xchg
lcall
mov
adc
jb
lcall
nop
fldcw
push
outsl
ljmp
dec
jno
jmp
call
xchg
subl
loop
dec
and
ret
imul
inc
insb
mov
mov
cmpsl
cld
popa
imul
imul
mov
xor
xchg
fidivrs
dec
push
hlt
and
or
dec
jmp
add
insb
adc
sub
jno
ret
inc
outsb
ja
push
imul
sbb
popa
shll
xchg
adc
js
inc
lea
mov
fadd
dec
mov
std
imul
sub
push
inc
adcl
cmp
mov
nop
test
sub
cmp
test
cmp
push
push
sbbl
push
lds
aas
adc
inc
fs
sub
xor
mov
or
or
jo
add
scas
js
fistl
mov
lods
fst
pusha
shll
pop
inc
ss
mov
and
add
outsl
add
xor
mov
shll
mov
lods
loop
ret
sbb
mov
fs
inc
cmp
call
sbb
xchg
or
adc
pop
lock
lods
pop
mov
jle
xor
mov
rorl
cmpsl
add
jg
or
jbe
inc
xor
sbb
stos
lock
mov
imul
jbe
insb
es
pop
sub
xlat
incl
movsl
test
pop
pop
js
sbb
test
and
mov
add
jne
pop
xchg
push
cmp
ffreep
fs
out
mov
add
sub
mov
ds
es
imul
call
sub
fs
jnp
push
jle
stos
lods
inc
testb
les
add
test
and
xor
add
fistpl
ret
or
xor
xorps
or
sub
pop
adcb
ljmp
sbb
add
adc
mov
rcrl
xor
inc
pop
dec
test
mov
add
andl
iret
cmpsb
add
loopne
jne
and
jb,pn
popa
adc
es
xchg
fcomps
mov
inc
cs
xchg
int
imul
sub
aam
add
ja
rcrb
out
sbb
rorl
incb
add
or
dec
ljmp
and
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
