divb
in
mov
mov
rorb
add
add
fmulp
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
roll
das
and
fcmovnb
les
ljmp
insl
pushl
cltd
push
mov
xor
pop
mov
mov
mov
call
data16
mov
pushl
test
mov
or
data16
jg
adc
je
push
lahf
scas
loope
jge
adc
pop
push
sub
mov
hlt
cs
dec
pusha
outsl
in
add
push
adc
xchg
testl
sub
dec
shlb
in
or
mov
mov
int
jbe
or
or
pop
cmpsl
push
jl
in
cmpsb
cmp
lea
data16
push
call
sub
mov
add
pop
pop
pop
push
loopne
jno
sub
jecxz
mov
lea
mov
adc
leave
das
add
stos
movsl
push
sti
sbb
dec
or
jbe
ret
ja
push
and
enter
adc
jo,pt
sbb
push
xchg
mov
inc
cmp
add
cmpb
mov
movsl
mov
xlat
pop
ja
ja
add
and
add
cmp
add
sbb
dec
cmp
je
out
pop
ja
xor
adcl
cmc
jne
imul
jmp
push
sub
xlat
add
sub
insl
sbb
pushl
add
push
push
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
push
ss
cmpl
adcl
xorl
adc
jg
mov
adc
addr16
dec
or
ret
shrl
out
stos
loop
push
push
lock
pop
outsl
jmp
das
pop
pop
adcl
incl
push
mov
sar
xor
cmp
ja
adc
fisubrs
lock
sub
add
push
movsb
inc
push
jmp
pop
xchg
sbb
jo
push
sub
sbb
mov
out
cli
jg
jno
loop
lds
iret
jle
mov
cmpl
sub
push
filds
ret
add
jge
in
mov
testb
add
pop
cltd
sub
shrl
fwait
in
enter
mov
mov
push
loope
cwtl
dec
mov
dec
push
or
cmp
jl
cmp
jne
pop
mov
inc
bound
aas
mov
cli
jmp
mov
push
jbe
mov
add
rorl
mov
mov
or
adc
lea
adc
fildl
mov
pop
hlt
into
mov
adc
cmpsl
out
and
insl
stc
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
lea
or
test
jle
insb
or
cmp
mov
inc
sahf
mov
add
jl
pop
ds
insl
cmp
icebp
in
pop
pop
fwait
push
push
cmp
adc
jg
decl
mov
int
jns
mov
pop
idivl
add
mov
pop
sub
gs
cli
andl
ret
and
add
es
adcb
mov
sti
jmp
hlt
jg
pusha
cmp
or
inc
sbb
push
dec
cmp
aas
in
adc
hlt
movlhps
hlt
cmp
jle
lds
or
out
lret
clc
pop
pushf
cmpl
je
push
cmp
cmp
jae
push
or
mov
xchg
pop
mov
or
add
xor
icebp
jb
pop
add
xchg
pop
jmp
ret
lea
ljmp
or
mov
ret
push
push
rcrb
jecxz
clc
mov
jmp
xchg
jmp
inc
or
adc
imul
outsb
insl
out
cmp
jo
inc
sub
shrb
sub
aad
aaa
stos
shl
mov
mov
in
pop
or
cmp
fcos
mov
push
mov
lea
cmp
jne
push
push
adc
xor
push
test
pop
mov
add
pusha
pop
pop
ds
push
rclb
fcmovnbe
mov
daa
in
rcr
jne
cmp
stos
xchg
and
add
sub
xor
frstor
insb
cwtl
dec
in
lret
and
xchg
add
out
add
sbb
fstpt
mov
add
repz
testb
cmp
mov
mov
and
push
push
data16
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
loope
loop
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
or
out
lea
dec
push
xor
mov
xchg
pop
push
jmp
add
shlb
fldcw
add
add
xlat
pop
rclb
mov
push
or
dec
inc
push
dec
ret
aas
cmp
or
lea
push
add
push
mov
push
push
push
iret
mov
fisttpl
pop
dec
dec
push
mov
mov
das
sbb
push
scas
dec
fisubrl
pop
inc
cmp
push
jmp
pop
lcall
inc
cmp
je
mov
sub
outsl
sbb
jne
lea
pop
sbb
arpl
cwtl
sub
mov
adc
xchg
push
mov
xchg
push
jb
mov
out
sarb
repnz
popa
or
and
test
mov
lock
jp
or
movsl
out
icebp
lcall
mov
dec
or
std
cmp
adc
jge
xor
sahf
outsl
mov
xor
sub
jg
inc
xchg
or
lea
lcall
mov
add
add
or
or
mov
push
adc
or
push
pusha
mov
push
mov
mov
push
mov
or
xchg
fsubr
push
or
and
sbb
int3
ret
mov
push
xlat
adc
sbb
push
fstps
cltd
sbb
out
psllw
stc
decb
adc
xor
aad
add
mov
inc
mov
adc
sub
adc
mov
inc
pop
ret
shrl
pop
inc
xlat
xchg
add
mov
or
je
dec
je
push
adc
push
pop
jmp
push
adc
inc
shl
and
mov
xchg
or
xchg
popf
js
pop
adc
and
jo
out
pop
mov
inc
fmul
mov
push
mov
push
sbb
mov
xor
add
and
mov
aam
xchg
jmp
dec
and
pushaw
pushf
pop
cmc
andl
mov
call
xchg
aaa
xor
mov
or
out
test
fadds
test
js
sbb
inc
push
fisttps
insl
xchg
add
mov
lret
ljmp
jecxz
das
cmp
js
sbb
sbb
ficoms
sub
js
and
adc
sbb
or
popa
add
mov
call
fldl
pushl
out
neg
sbb
inc
inc
pop
xlat
andb
enter
add
test
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
fildll
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
adc
int3
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jl
jne
dec
jl
mov
push
pop
inc
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
sub
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
mov
andl
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
cs
jno
and
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
leave
xlat
xchg
fmuls
subl
popa
xor
xchg
xor
data16
push
fdivp
jne
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
loope
jp
pop
loope
add
adc
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
pop
push
scas
and
sbbb
xor
loop
mov
les
repnz
dec
inc
pop
pop
jmp
sub
inc
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
test
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
xchg
in
cmp
pop
push
movb
sbb
jo
xor
or
push
mov
jmp
ljmp
sbb
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
and
pop
push
add
adc
push
cltd
xchg
lret
or
in
add
mov
in
cmpsb
in
mov
mov
jge
pop
fiadds
mov
inc
outsl
mov
in
das
sarb
jae
sub
xor
sub
ds
je
lcall
mov
fcoml
dec
loopne
and
out
jge
out
movsl
jmp
jo
cmp
imul
adc
imul
clc
pop
adc
push
mov
add
jo
adc
jb
movsb
adc
movsb
iret
jno
and
pop
rclb
ss
enter
push
pushf
pushf
xchg
out
lret
clc
mov
mov
in
sbb
jb
and
sbb
int3
sbb
int3
xchg
arpl
and
arpl
ret
sbb
enter
xchg
sub
sbb
ror
mov
sub
ret
sbb
nop
idivb
les
sbb
sbb
negb
mov
movsb
call
pop
pop
pusha
mov
and
fisttpl
pop
mov
xor
fcompl
add
lods
cwtl
arpl
mov
out
pusha
inc
inc
adc
pusha
sbb
ror
enter
sbb
aaa
xchg
add
test
or
dec
jge
or
push
je
sbb
or
mov
and
push
sbb
adc
push
inc
adc
sub
add
adc
loopne
add
test
or
jle
sbb
leave
inc
lahf
add
in
andb
call
and
and
outsb
and
push
movsl
push
adc
cmp
aaa
adc
dec
rclb
out
sub
orl
pop
push
mov
test
xchg
jae
lea
adc
lods
fs
sarl
sbb
xor
sbbl
add
test
xchg
mov
dec
std
and
cmpsb
push
adc
jo
sbb
xchg
and
sbb
adc
sbb
cwtl
sub
push
cmp
dec
subl
cld
add
pop
push
jmp
push
fstpl
sub
mov
lods
pop
rcll
js
or
cmp
mov
loop
xchg
xor
add
enter
movsl
inc
mov
or
sbb
mov
outsb
into
push
sbb
fdivrs
lea
cmp
pushf
or
shll
pmullw
lret
adcl
push
jp
sarl
adc
sbb
adc
inc
adc
leave
or
cwtl
lds
rcl
imul
jne
fidivl
leave
mov
into
adc
mov
xor
inc
adc
pusha
pop
mov
jnp
add
mov
dec
push
dec
mov
pop
add
lret
and
enter
push
inc
xor
sbb
int
jmp
test
mov
neg
pop
inc
jne
push
cmovl
and
bswap
mov
leave
sbb
sbbb
sbb
stos
cmp
cltd
pop
clc
popf
xor
pushf
sbb
cmpb
add
push
shlb
sahf
les
loopne
pushf
pop
nopl
xchg
or
in
loopne
mov
maskmovq
imull
sbb
and
clc
ljmp
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
and
xlat
and
xchg
inc
xchg
and
push
call
daa
add
ret
or
nop
flds
pushf
mov
aas
sahf
sbb
int3
cmp
and
fstpt
sbb
addb
push
in
rclb
push
pop
ljmp
aad
mov
shlb
movsl
pop
or
mov
cmp
cld
dec
test
cmp
adc
pop
lret
add
ljmp
jmp
add
sahf
lock
shrb
mov
mov
sbb
adc
and
adc
and
test
pushf
jl
adc
and
and
xlat
and
add
xorl
push
out
jnp
pop
mov
cmpsl
and
or
sub
negb
aas
incb
inc
scas
xorb
push
push
push
loope
and
test
rol
jns
test
fsubrp
adc
fcomps
aam
stc
scas
sub
pop
repnz
push
sub
push
ljmp
sub
jne
add
push
sub
add
jno
sub
add
inc
lret
ret
inc
stos
push
cmp
call
mov
add
sub
add
pusha
scas
roll
repz
stos
xor
mov
push
in
and
adc
push
fs
lret
mov
imul
dec
pusha
cmp
loopne
repnz
mov
inc
and
movsb
sbb
adc
jl
arpl
inc
ror
push
pusha
xchg
cmp
outsl
xchg
movsl
nop
or
ficoms
je
xor
add
rclb
in
adc
or
mov
das
push
inc
dec
push
push
mov
sti
lahf
adc
mov
pop
test
add
mov
fadds
inc
loopne
sahf
xor
cmp
mov
aaa
pop
bnd
enter
sub
sub
cvttps2pi
push
mov
jo
push
enter
enter
xchg
idivl
das
push
lods
pop
pop
xchg
add
xchg
or
insb
xor
xor
xchg
mov
adc
push
push
cmp
xchg
adc
std
fsubs
imul
mov
cmp
inc
mov
nop
cmp
sub
jae
mulb
add
xchg
and
xor
stc
pop
insb
or
sbb
adc
inc
loopne
sbb
ret
test
repnz
in
cmp
or
pop
cmp
cmp
jne
and
movsb
adc
repnz
and
pusha
pop
xor
xor
aaa
arpl
mov
hlt
add
pop
jns
movsb
jo
dec
pop
mov
popa
adc
add
ds
mov
mov
mov
xchg
add
sahf
xchg
roll
xlat
les
jmp
test
xchg
or
mov
mov
aad
pop
mov
loop
inc
sarl
stc
dec
in
mov
adc
mov
out
lret
adc
mov
pop
xor
ficomps
cmpl
loope
add
push
push
and
scas
xor
mov
or
mov
inc
mov
push
pop
mov
je
adc
sub
sub
ds
jne
push
sub
call
adc
das
mov
jo
lret
jne
inc
in
aaa
cld
and
dec
sub
jmp
cmp
pop
sbb
xor
and
fldenv
add
jge
jmp
mov
inc
lock
lock
mov
rcrb
push
loopne
or
ret
rorl
cwtl
adcb
push
xchg
or
inc
repz
out
jge
orb
xchg
inc
loopne
enter
scas
xchg
add
roll
cmp
mov
test
or
sub
jge
cmp
or
call
loope
add
and
daa
sbb
pusha
nop
andb
mov
mov
and
loopne
sbb
loope
jbe
dec
movsl
push
mov
out
or
sub
mov
add
jecxz
add
icebp
jg
fldt
adc
pop
out
jne
or
je
sub
das
add
ret
adc
inc
jg
and
das
mov
cli
xor
and
das
enter
faddl
sbb
sbb
pop
pop
ret
cmpsl
test
mov
lods
fwait
push
or
out
jne
popf
jp
jnp
add
sbbb
loop
test
jbe
addb
not
mov
mov
lahf
je
cmpsl
jg
lea
sarb
inc
in
inc
jnp
xchg
sbb
fsub
push
out
inc
out
add
sarl
je
push
add
insl
or
or
xlat
div
lds
mov
mov
mov
xor
fnsave
pop
in
inc
push
xor
push
stos
sub
insl
shlb
add
or
enter
or
imul
rorb
shlb
cld
or
arpl
or
ds
in
hlt
push
and
movsb
movzwl
adc
lock
pop
call
ss
jmp
adc
cmpw
je
inc
push
jnp
fnsave
jmp
subb
xchg
lock
int3
cld
mov
xlat
jno
push
test
push
jo
inc
in
das
fs
loopne
in
inc
inc
inc
and
dec
insb
insl
int3
aad
scas
xorl
lock
cmp
lcall
push
mov
xor
inc
mov
sarl
or
scas
sub
and
jl
jae
ret
clc
fs
jle
enter
sbb
cmpsb
sbb
push
add
cld
dec
jecxz
push
mov
xchg
ds
mov
pop
mov
in
paddusb
cmp
ja
mov
mov
push
sbb
sarb
add
adc
sub
ficoml
sub
aaa
jo
mov
stos
insl
sbb
add
xor
jne
push
and
pop
lea
ds
inc
pusha
lock
rclb
pop
add
out
cs
loopne
jne
aaa
or
push
into
add
mov
in
inc
xchg
in
pop
cmpsb
cmpsl
pop
stos
xor
cltd
mov
xor
or
test
or
jno
mov
fisttpl
add
add
popa
mov
test
xorl
dec
lret
ds
fiadds
add
or
inc
cmp
in
std
popa
xor
ret
and
xchg
add
mov
cmp
loop
mov
nop
es
dec
or
movsb
call
cmpl
gs
push
dec
cmp
add
dec
js
xor
cld
loopne
and
fwait
movsb
faddl
add
rorl
push
dec
add
js
loope
jp
fcmovnbe
push
push
test
loop
or
arpl
push
inc
jle
sub
jle
pop
pop
adc
cli
in
imul
mov
cmp
rorb
mov
and
stc
adc
mov
adc
scas
in
mov
xor
in
sbb
imul
sarl
testl
and
pop
sahf
pop
cmp
push
add
ret
jae
call
push
adc
push
mov
rcll
ja
fiaddl
push
fs
adc
test
add
out
decb
rcll
inc
push
mov
or
pop
or
add
mov
xor
subb
xchg
ret
mov
cmp
mull
add
and
add
cmovns
inc
or
loopne
push
mov
sub
inc
daa
push
lock
and
lock
ffreep
push
sub
mov
mov
dec
mov
xor
enter
mov
pop
cmp
adc
aam
fcoms
loopne
pop
pop
fcompl
insl
shlb
xor
cmp
aaa
inc
mov
pushl
call
mov
push
ret
shr
movzbl
push
adc
mov
aaa
mov
ret
push
ret
dec
sti
imul
mov
stos
pop
jae
leave
mov
cmpsl
jle
movb
cmp
arpl
xchg
mov
add
repnz
sbb
icebp
push
gs
add
mov
out
jb
xor
loopne
pop
or
add
push
mov
or
ss
xor
or
jmp
scas
sti
jle
push
dec
enter
add
push
push
mov
cmp
clc
data16
js
jg
mov
mov
jmp
jecxz
and
push
cmp
mov
cs
adc
mov
aas
mov
outsb
jecxz
or
mov
cmpsb
adc
sbb
ds
lea
push
sub
mov
subl
sbb
outsl
sarl
and
push
mov
push
pop
jmp
mov
push
cmp
xchg
stos
test
insb
test
cmp
je
int
jnp
xor
jmp
shrb
cld
jne
movsb
rclb
rcr
cmp
adc
mov
push
sbb
lock
add
sbb
inc
hlt
les
cmp
jae
loopne
or
xor
ja
dec
cmp
je
call
push
mov
xorb
push
sub
fcoms
add
jnp
pop
hlt
add
jl
in
cmp
test
add
push
push
xor
aad
js
mov
roll
jmp
sar
into
add
popa
nop
add
mov
sub
hlt
mov
adc
cli
lea
ljmp
lock
or
iret
mov
scas
incb
xchg
add
mov
leave
pop
in
mov
mov
shll
mov
adc
pusha
cmpsl
mov
dec
lahf
inc
test
jb
outsb
sahf
inc
ret
bound
dec
inc
xchg
je
test
js
sahf
xor
inc
inc
dec
hlt
jg
hlt
or
push
je
sub
pop
movb
sub
sbb
jge
xchg
add
inc
jno
sbb
cmp
push
in
sbb
dec
sbb
fmuls
mov
or
out
jmp
jecxz
fdivp
add
push
jl
cld
cmp
jl
repz
push
in
mov
push
jmp
das
loop
inc
xor
test
pop
clc
inc
or
xor
fwait
mov
cmp
mov
fistl
xchg
bound
push
scas
sub
jge
jnp
rorb
adc
push
pop
mov
push
fisubrl
aaa
mov
ret
rcrl
lcall
aam
cmp
aaa
mov
outsl
cmp
mov
pusha
cmp
xor
dec
jne
fidivrl
mov
pop
pop
mov
pop
cmp
cmp
push
jecxz
or
add
add
or
call
xor
jae
mov
test
add
mov
dec
sbb
testb
fildll
ret
je
push
and
sbbl
ljmp
je
dec
xchg
xlat
lret
jae
push
inc
fisubrl
jb
ret
out
mov
mov
xchg
sub
mov
and
icebp
scas
mov
or
fs
jne
or
je
jbe
movb
xor
nop
or
push
push
and
sbb
mov
icebp
addb
or
add
add
test
and
cmpsb
aad
push
out
shlb
adc
fsts
push
ljmp
fmulp
or
mov
or
mov
jbe
pmullw
xchg
test
mov
or
imul
pop
cmpsl
ljmp
sbb
ds
pop
jo
jg
jo
cmovae
push
loop
enter
stos
inc
or
sub
add
pop
loop
push
push
adc
orb
pushl
loopne
or
jmp
jb
dec
jo
add
xchg
jmp
jno
or
adc
dec
lock
mov
xor
loopne
sub
adc
pop
loope
jo
xlat
or
xchg
pop
dec
loope
subl
je
sbb
cmp
add
xor
incl
push
jmp
mov
add
push
addr16
dec
sbb
clc
dec
cmp
test
sbb
or
nop
push
xchg
push
cmp
push
daa
sub
addl
add
pop
hlt
sub
sar
fbstp
or
adc
lcall
je
jo
mov
jb
movq
pop
mov
enter
jl
add
insb
cld
daa
mov
das
cmp
lea
jbe
mov
and
push
leave
inc
sub
sub
je
loope
add
push
push
mov
cmpsb
hlt
in
addr16
dec
add
xchg
add
push
or
dec
inc
add
arpl
aas
outsl
add
adc
and
mov
and
jb
dec
dec
loope
xchg
mov
lea
sbb
shlb
fsubrs
movb
push
je
sbb
rolb
in
or
xorb
fistpll
jo
stos
mov
or
lods
sarl
shlb
in
lcall
jbe
adc
test
push
iret
add
pop
jb
sub
adc
or
or
add
jb
sbb
mov
in
jb
xor
add
jl
pop
adc
dec
imul
xchg
in
xchg
call
fsubrs
add
xchg
fsubrs
test
jno
add
mov
lret
cmpsl
enter
fsts
stos
add
adc
cltd
add
les
and
nop
ficompl
jge
nop
mov
test
mov
mov
pop
test
inc
mov
xchg
sbb
xchg
fsubrl
mov
push
push
cmp
sub
mov
cltd
jmp
je
adc
enter
test
je
adcl
inc
dec
popf
imul
inc
or
pop
enter
mov
or
pushf
jmp
rcrb
insb
cwtl
sbb
or
pop
je
aas
cs
inc
jne
and
out
mov
cltd
pusha
add
sahf
xchg
mov
push
jns
jg
xor
push
push
out
in
jmp
leave
inc
adc
jne
add
ljmp
test
and
lret
cmp
aam
push
movsb
jbe
pop
inc
lods
stos
lock
es
test
pop
gs
leave
adc
lea
enter
daa
adc
and
push
inc
jge
loop
fmulp
push
lea
mov
lods
test
adc
mov
adc
xor
sub
or
sbb
pop
ret
ret
fdivl
jmp
mov
xlat
sbb
int
sub
arpl
add
nop
jns
sti
pop
dec
in
push
in
adc
pop
adc
fstpt
lds
leave
cmp
mov
mov
push
mov
and
and
stc
mov
and
or
push
sbb
sbb
push
add
sbb
pop
adc
sub
outsl
push
push
je
addr16
push
jge
mov
mov
mov
mov
xchg
notb
stc
movups
and
out
push
cmp
popf
cmpl
pusha
inc
push
mov
loope
adc
lcall
or
mov
add
cmp
add
push
xchg
shrb
jmp
push
xor
xchg
loope
sti
jbe
mov
in
adc
frstor
pop
mov
add
add
shll
insl
jmp
cmp
sub
sahf
nop
lret
jmp
sub
add
push
pop
dec
je
into
adc
in
jge
adc
push
push
sbb
inc
and
out
dec
mov
mov
jge
mov
data16
pop
push
or
cmp
adc
jecxz
jne
ljmp
add
popa
std
scas
jmp
push
add
push
mov
pop
or
cs
and
add
pusha
inc
add
mov
add
xchg
xchg
xorl
push
mov
mov
sar
iret
pop
loope
cli
mov
mov
pop
in
hlt
and
push
or
lock
mov
xor
push
push
daa
pop
pushl
or
imul
lea
push
and
imul
inc
sbb
push
jmp
ficompl
jg
dec
sbb
jae
mov
jmp
inc
sbb
push
imul
mov
div
andl
and
jmp
mov
sbb
and
jmp
pop
fisubl
and
insb
jmp
xchg
sbb
sub
xlat
pop
iret
repz
dec
push
pusha
jns
sarl
cmp
cmc
lcall
mov
jg
sbb
mov
mov
add
pushw
and
sbbl
sub
aad
fstl
lea
imul
adc
sub
mov
negl
movb
add
jae
push
or
xchg
xchg
pop
adc
aaa
pop
jnp
push
dec
push
mov
pop
push
lea
push
jne
sub
push
push
add
push
lea
push
aam
dec
cmp
and
cmpsb
add
dec
mov
fs
cltd
lahf
xchg
sahf
fiadds
data16
movsl
mov
dec
adc
pop
sub
sbb
push
pop
mov
inc
jp
add
mov
mov
cwtl
mov
push
je
push
addl
xchg
mov
int3
push
aam
outsl
pop
ret
ljmp
add
jl
inc
xor
pop
add
add
mov
xchg
sub
add
sbb
sbbl
and
subl
jbe
popa
mov
mov
ljmp
das
and
and
pop
andb
pop
mov
and
mov
push
jbe
insb
cmpsl
mov
add
xorb
cmpsl
aas
aad
andl
add
ret
xor
jno
xchg
inc
add
adc
test
push
repz
popf
push
enter
dec
pop
mov
call
in
pop
popa
xchg
push
sar
ret
and
in
dec
and
add
loop
xorb
xor
icebp
push
fdivrl
icebp
lea
testb
sbb
adc
pop
ret
pop
test
push
push
cmp
jecxz
add
mov
pushf
jl
shlb
in
mov
popa
add
stos
cmpsb
inc
jl
lcall
outsb
fists
mov
ret
cmp
xlat
inc
gs
orb
jl
popa
rclb
pop
mov
popa
aam
push
aam
das
in
push
rcll
insb
sbb
cmpsl
ret
sbb
int3
push
icebp
cltd
rcrb
add
fcoml
sub
dec
fildl
cmp
sbb
loopne,pn
dec
pop
sub
sbb
mov
insl
fdivr
ret
mov
mov
add
jbe
xor
adc
fnstsw
adc
int3
cmp
jne
push
sub
xor
cmp
xchg
adc
clc
js
jg
mov
shlb
sbb
je
lea
push
outsl
inc
inc
imul
add
mov
jo
clc
add
push
sbb
cmp
ja
pop
pushl
call
push
or
lods
out
add
mov
sahf
mov
es
shrb
les
inc
push
mov
lock
cmc
shr
push
adc
dec
lea
dec
push
push
mov
and
jge
fimuls
sub
sub
in
dec
jmp
sub
mov
push
sub
in
cmp
push
mov
add
mov
data16
inc
adc
dec
cmp
jne
lahf
dec
inc
xor
jae
jmp
or
push
daa
bound
lock
aas
and
push
or
sub
mov
lock
jecxz
repz
lcall
mov
inc
and
ss
add
and
jl
lock
into
in
and
insl
lcall
push
push
int
negb
imul
mov
mov
pop
mov
fimull
cld
leave
and
push
push
out
cmp
pushf
cld
push
shrb
mov
into
notl
enter
cltd
mov
jl
dec
mov
inc
in
add
mov
inc
and
push
dec
loopne
fbld
push
push
or
aaa
xchg
jp
and
test
inc
push
adc
pop
pop
sbbb
and
push
mov
in
pop
ljmp
idivl
scas
je
cli
fdivrs
cmpl
jne
pushl
sbb
dec
sbb
inc
xor
adc
and
lds
adc
scas
push
push
inc
xor
dec
lahf
dec
lods
sbbb
add
je
push
sbb
je
cmp
dec
into
jbe
mov
push
sahf
cmp
repz
add
dec
add
ret
xchg
inc
add
movsl
nop
xchg
loope
popa
in
nop
pop
jno
push
push
mov
es
xor
sbb
push
jne
movb
jmp
cmp
sub
loop
jne
popf
movsl
fldz
xor
dec
pushf
inc
cwtl
push
pushf
xchg
jo
movb
push
jle
ret
dec
aas
mov
iret
addb
mov
push
sbb
test
push
jecxz
add
test
sbb
lock
mov
and
test
mov
daa
rcr
mov
mov
into
xlat
ds
push
dec
or
adcb
dec
lods
push
stos
fsubl
stos
pop
push
push
adc
mov
xchg
fcoml
push
nop
pop
cmp
iret
push
adc
enter
ret
cwtl
pop
cltd
shrb
cmp
sti
sub
push
idivl
mov
xor
push
push
fmuls
adc
push
xchg
xor
rolb
cmp
add
daa
sbb
push
test
or
adc
dec
and
stc
mov
pusha
adcl
inc
sbb
mov
push
push
jns
popf
xchg
lret
jl
xchg
andb
das
or
fidivs
xor
popf
adc
and
sub
xor
mov
test
nop
aaa
mov
je
inc
cwtl
imul
outsl
inc
fldl
fmull
lods
jmp
out
push
loopne
push
push
aaa
movsl
addb
stos
inc
rcrl
pushf
jbe
and
fiadds
in
dec
out
andl
xlat
fisubs
add
jno
insb
pop
int
out
negl
popa
in
push
cmp
cmp
push
pop
je
pop
popa
sbb
out
fadd
adc
mov
adc
fmuls
add
add
repz
xor
pop
loopne
sbb
test
fiaddl
call
rol
or
push
mov
xlat
push
adc
adc
mov
add
aas
aas
push
jle
add
and
cmp
cmp
cmp
sub
xor
inc
jle
mov
push
jne
cs
sub
addr16
or
push
mov
adc
sbb
ljmp
repz
lret
mov
jmp
fisubrs
add
addl
push
or
mov
pop
pusha
or
push
cmp
call
jmp
fs
popa
push
sbb
xchg
lret
sub
push
mov
and
sbb
cmp
jo
xor
loopne
shr
sbb
insl
xor
clc
andl
xchg
push
or
popf
movb
lea
clc
sub
cmp
xor
cltd
mov
inc
inc
and
lea
push
or
dec
adc
sbb
loope
push
or
add
mov
jge
mov
daa
and
idiv
push
mov
mov
mov
jno
aam
ret
xor
idiv
cs
std
divl
adc
add
jg
mov
adc
insb
jge
add
mull
mov
mov
jg
in
dec
mulb
jge
sbbl
and
pop
lock
mov
dec
cmp
or
xor
lahf
mov
jle
pop
pusha
push
pop
insb
pop
add
xor
sti
sub
clc
movsb
mov
and
lea
cltd
idivl
dec
push
into
jp
xor
test
dec
test
sti
xlat
pop
loopne
ds
jg
fs
xchg
scas
jnp
or
xchg
arpl
mov
test
aad
mov
lahf
xor
sub
sbb
push
inc
lahf
aas
dec
lea
pusha
jl
fbld
pop
xchg
sub
cmp
or
jmp
xlat
nop
or
out
insb
mov
cld
fucomp
fildl
mov
test
jns
faddl
xor
lock
enter
fdivrp
mov
mov
mov
mov
mov
add
pop
add
les
imul
add
push
shlb
or
clc
fidivl
jmp
sub
xchg
cli
mov
movl
mov
add
or
inc
add
or
jle
or
mov
stos
test
cmp
and
add
mov
lods
dec
lret
shlb
cld
inc
hlt
jo
push
jg
clc
lea
xchg
arpl
pop
push
sbb
sbb
bound
je
or
dec
inc
dec
jne
inc
jmp
stos
sahf
stos
mov
dec
mov
shll
into
pop
leave
ret
daa
adc
pushf
les
cmp
roll
nop
sub
data16
imul
in
add
loopne
insb
lea
inc
into
mov
xor
fs
loope
sub
loope
pop
iret
xchg
pop
ret
addr16
fimuls
jne
xor
mov
clc
or
push
sti
mov
outsl
jl
mov
adc
cs
sbb
push
leave
adc
pop
rorb
into
xor
shrb
sbb
fdivrl
or
sbb
inc
mov
push
dec
pop
pop
in
lea
loopne
mov
mov
or
nop
mov
lea
push
push
out
jle
inc
cmp
js
pop
loop
inc
repz
inc
rcr
aad
sub
fs
andl
add
xor
subl
dec
shrl
pop
jne
sub
les
leave
mov
sub
leave
insl
xor
scas
sbb
jb
xor
sbb
dec
ljmp
adc
inc
pop
push
shlb
int3
dec
mov
pop
in
out
pop
and
or
popf
dec
sbb
loopne
mov
scas
jl
mov
pop
or
nop
cli
and
lock
sub
fbstp
mov
pop
mov
orb
and
das
scas
xchg
dec
xor
dec
cmp
cwtd
sub
icebp
inc
push
cld
rorb
inc
sub
das
sarb
clc
setb
test
rorb
add
cmp
stos
je
xor
dec
adc
rol
aam
sub
pop
or
aaa
sub
jno
push
mov
je
push
fldl2t
cmp
sbb
pop
negl
or
sbb
je
es
dec
mov
and
mov
sub
adc
fsubl
in
sub
cmp
cmp
jmp
scas
sbb
shrl
not
push
inc
and
das
push
loopne
nop
push
mov
int
adc
push
mov
inc
stc
inc
push
add
dec
xor
jo
dec
lea
jo
cld
bound
mov
out
imul
jne
adcl
adc
xor
jo
push
sub
int
or
test
mov
bound
adc
jns
jecxz
clc
movl
dec
mov
sbb
dec
and
or
add
pop
pop
adc
add
sub
sbb
add
das
inc
xor
add
inc
inc
sbb
xchg
sti
xchg
pushf
cmp
or
aaa
or
in
lds
mov
mov
std
int3
js
add
fildll
fildll
das
fdivl
push
push
and
int
popf
jnp
add
adc
push
mov
pusha
dec
sub
int
imul
dec
push
shlb
and
add
pop
nop
xchg
cmp
mov
enter
sub
fmuls
hlt
or
dec
sbb
int3
insb
pushl
xchg
lret
mov
or
mov
sub
or
in
clc
aaa
pushl
dec
fcmove
add
imul
add
pop
shlb
lock
jae
popf
sbb
jge
jge
sbb
push
les
push
dec
gs
stos
test
add
xor
popf
jo
mov
mov
in
inc
mov
mov
adc
addr16
push
aam
adc
mov
es
mov
mov
nop
cmp
push
or
xorb
mov
xchg
mov
or
loopne,pt
out
fbstp
fsubrl
pop
push
push
outsl
daa
fcoms
and
jnp
pop
pmuludq
inc
scas
int
adc
or
rcr
scas
pop
push
in
dec
cmpsl
adc
and
imul
mov
jbe
sbb
cmp
mov
mov
add
cmp
jnp
jle
sbb
nop
imul
test
cmp
enter
mov
adc
mov
je
xorb
add
arpl
sbb
xchg
pop
pushl
dec
ret
pop
cmp
lret
jmp
xlat
aad
mov
cmp
mov
xor
xor
sbb
pop
ret
je
and
jae
pushf
sbb
lret
inc
or
loop
dec
mov
jmp
dec
mov
or
sti
mov
js
push
mov
outsb
pushf
jge
add
scas
or
mov
insb
shlb
xchg
sub
mov
jle
fmulp
js
cmp
jge
mov
mov
mov
cmp
addb
or
push
pusha
jle
cmp
fstpt
call
xor
fdivrs
call
fsubr
nop
out
push
sbb
lcall
shl
out
je
pop
movsb
jp
xchg
mov
sbb
inc
lcall
mov
shlb
or
mov
inc
pusha
in
mov
lock
inc
jo
sub
inc
sete
adc
or
sbb
loope
and
addb
adcl
push
xchg
push
or
sti
cli
popf
mov
mov
fdecstp
sub
adc
mov
mov
jge
add
rclb
enter
sub
or
mov
scas
push
bnd
add
dec
add
sbb
fcompl
add
int3
pop
loop
cmp
add
push
js
jl
push
pop
jmp
sti
sbb
add
lock
loope
ret
out
xchg
push
or
mov
je
inc
push
push
pop
mov
pusha
or
push
js
and
bound
fstps
push
jge
mov
fcoms
ss
lret
rcrl
std
fdivs
dec
pop
sub
daa
push
mov
or
jo
ret
mov
jg
add
sub
ss
mov
and
or
mov
outsl
mov
jne
and
sbb
jno
pop
repnz
pop
adc
int
orl
fmull
jmp
xchg
icebp
xchg
ret
imul
repz
lret
adc
in
call
pusha
sbb
lock
and
mov
pusha
insb
push
xorl
pop
pop
arpl
add
mov
inc
shlb
xchg
adc
add
lock
arpl
cs
popf
add
xchg
jle
or
add
jge
adc
inc
push
inc
or
call
jne
pop
or
mov
scas
je
jb
jbe
mov
aaa
pop
push
xchg
xchg
daa
enter
xor
aaa
dec
enter
sbb
jle
adc
sahf
clc
clc
sub
jge
mov
add
add
xor
hlt
add
adc
push
inc
push
mov
xchg
lea
cmp
inc
outsl
leave
sub
dec
jno
xchg
shrb
pop
ret
push
add
add
mov
in
pop
clc
lock
mov
add
mov
in
jmp
shr
mov
hlt
mov
out
or
mov
xchg
sub
add
into
push
push
add
push
outsl
or
and
or
dec
jp
add
rol
add
sub
movsb
sbb
mov
lock
xor
inc
inc
in
jb
out
test
js
das
sub
jg
lahf
aad
rorb
fdivl
sbb
pop
sbb
dec
mov
aaa
cli
popa
rcr
ljmp
insl
in
mov
mov
or
mov
mov
in
sbb
pop
sub
push
mov
cli
addps
adc
push
xor
xor
fbld
pop
jg
jbe
je
xor
sbb
aas
dec
lods
sbb
rsm
push
lea
andl
push
test
in
pop
sub
or
push
or
jbe
pop
push
mov
cmpsb
nop
sbb
xchg
fwait
sbb
cld
pop
mov
or
mov
mov
xchg
xchg
xorl
add
fsubrs
insl
inc
push
push
fisttps
sbb
cltd
in
sbb
psubsw
es
repnz
int
and
and
mov
nop
xchg
inc
callw
mull
test
fcom
jbe
cs
push
add
xor
jl
fstps
inc
push
idiv
cld
mov
jne
xchg
xor
push
sub
outsb
in
cld
xchg
or
and
inc
mov
lds
les
xchg
push
mov
loopne
cmp
ss
in
pusha
ret
pop
jle
ja
andl
mov
or
daa
mov
xchg
pop
sub
add
std
add
xchg
pop
pop
push
push
ds
addr16
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
push
cmp
imul
cmp
jns
sbbl
xchg
nop
pop
lret
mov
jns
cltd
jb
rolb
push
mov
pop
aam
cmp
mov
rcll
xchg
xchg
xor
les
or
and
add
fs
push
loopne
push
sahf
int3
jmp
mov
add
test
push
fs
inc
add
add
mov
push
orl
test
js
jge
push
ljmp
sbb
mov
add
push
aam
clc
xchg
addb
iret
pusha
pusha
cmpsl
fs
cmp
pop
icebp
and
inc
pop
mov
and
xchg
adc
sbb
jnp
aaa
adc
mov
pop
lods
aas
xor
jns
bound
jg
call
fs
push
adc
adc
inc
lea
xchg
xor
mov
push
aad
jne
lret
mov
xlat
jl,pn
jmp
sarb
lock
push
jle
cmp
add
xor
mov
add
inc
and
add
push
aam
inc
mov
adcl
add
adc
ss
add
mov
sbb
inc
rorl
lds
mov
dec
dec
test
fldenv
cmp
sbb
movl
popa
fiaddl
ja
lea
cmpsl
cmp
dec
jge
int
inc
adc
dec
stc
xchg
pop
mov
sbb
ret
lea
and
nop
add
or
or
movsl
fsub
stos
add
lea
int
cmp
xchg
cmp
flds
dec
sbb
fstps
push
ret
sbb
push
jae
sbb
mov
sbb
inc
or
int
imul
sbb
and
and
sub
add
push
mov
shll
mov
inc
sbbb
loope
lock
or
test
test
test
inc
mov
adc
adc
xchg
add
iret
lea
pop
xor
and
loopne
jmp
dec
adc
mov
pushf
sahf
or
rorl
lcall
mov
dec
roll
data16
lret
setp
sub
cmp
push
sbb
add
add
or
shll
dec
rcll
inc
push
faddl
inc
inc
pop
nop
or
xchg
nop
or
adc
mov
rolb
push
push
sbb
lods
and
inc
xor
popa
fists
or
adc
and
xor
sub
push
jns
push
stos
pop
imulb
mov
mov
fidivl
sti
jmp
mov
push
push
shll
push
cmp
popf
push
dec
and
cwtl
and
or
add
ljmp
loopne
sbb
adc
push
mov
mov
cmc
dec
cmc
out
mov
jg
into
dec
stos
or
cmpsb
rcrb
clc
xor
call
mov
jge
sti
pop
or
mov
fdivrs
pop
call
pop
mov
xchg
stos
mov
icebp
xchg
adcl
cmp
sub
pop
loopne
sub
mov
pop
or
mov
rclb
in
lea
jb
psubsb
nop
loope
mov
push
mov
inc
or
in
adcb
jl
pop
push
mov
xchg
pop
pop
add
mov
mov
popf
outsl
xor
mov
pop
add
pushf
rcll
rol
loop
cmc
adc
jne
call
push
mov
or
push
cltd
sub
pop
pop
add
sbb
sub
mov
ss
dec
or
xor
nop
dec
cs
or
sub
cltd
add
sbb
adc
sub
call
outsb
daa
mov
aaa
loopne
cli
push
push
mov
out
loopne
mov
cmpl
add
xchg
in
bound
in
jmp
mov
inc
mov
pop
pop
mov
dec
lret
mov
clc
shrl
mov
int3
lods
xor
adc
xlat
adc
mov
fistl
mov
test
sbb
sbb
lods
shlb
dec
adc
inc
or
push
mov
push
stos
sahf
fsts
mov
mov
loopne
mov
fiadds
jne
add
dec
jae
push
arpl
pop
mov
faddp
xchg
fs
lock
pop
dec
inc
mov
cmp
add
add
mov
orb
fbstp
add
adcb
xor
test
adc
xchg
loopne
mov
cli
sbb
mov
and
push
in
jl
mov
jae
adc
xor
pushf
mov
lea
inc
push
fisubs
test
mov
aam
push
insb
in
ljmp
mov
lahf
mov
pop
mov
mov
out
add
lea
lea
into
inc
pop
pop
xor
fdivr
imul
shrl
xchg
and
push
addr16
cmp
or
inc
ret
mov
bound
inc
dec
cmp
push
aam
in
in
pop
lea
lea
adcl
inc
push
clc
jecxz
inc
inc
add
inc
out
pop
das
ss
cmpsl
add
push
daa
cltd
sbb
shll
pop
lea
ss
adc
test
repnz
mov
ja
cmp
mov
sbb
xor
arpl
mov
mov
into
ror
out
lret
test
outsl
mov
es
or
xchg
je
mov
scas
cmp
rolb
xchg
inc
into
or
jns
or
add
mov
mov
arpl
fistpll
xor
gs
pop
imul
mov
test
add
push
pop
mov
xchg
jno
jns
adc
add
xor
test
xchg
pushf
lea
mov
xchg
daa
jo
push
dec
or
mov
dec
enter
fists
imul
sbb
dec
shrb
add
push
push
pop
ds
add
push
jne
inc
ja
test
inc
mov
xor
jecxz
mov
fldt
test
push
pop
sub
lock
sub
jo
adc
add
ret
and
cmp
adc
push
sbb
push
and
cltd
push
rcrl
sldt
bound
cwtl
sbb
mov
push
loopne
loopne
or
loopne
and
ljmp
hlt
and
dec
popa
pop
loope
pop
hlt
or
sbb
mov
jge
xor
js
adc
xchg
fcomps
mov
in
adc
divl
or
leave
cmp
cmp
dec
faddl
push
or
mov
sbb
ret
cmpsl
pop
push
cmp
push
push
fmuls
adc
jmp
push
add
mov
mov
xlat
sbb
jnp
test
sbb
cmp
stc
enter
shll
imul
rorb
jno
clc
call
jmp
mov
jne
push
pop
cmp
je
stos
jbe
adc
or
jle
jecxz
or
ss
inc
or
cwtl
cltd
dec
popf
andl
cwtl
movsb
or
jns
push
pushf
mov
add
push
fs
aam
je
inc
lea
inc
and
orl
cmp
mov
mov
xor
dec
push
cmp
sbb
and
scas
les
rclb
inc
jne
inc
sub
fsubr
push
pop
enter
or
movsl
or
mov
and
mov
mov
sbb
jge
mov
call
push
fcoms
sub
jle
daa
das
call
test
xor
lcall
sbb
fs
inc
cmp
sbb
or
ds
into
int3
arpl
rorb
push
sbb
inc
sqrtps
xchg
lds
jge
sub
mov
adc
cmp
or
rolb
xchg
push
rol
lret
sbb
lcall
adc
loopne
pop
popf
call
add
icebp
js
loop
mov
mov
lcall
add
and
push
sbb
pop
adc
xor
add
pop
xchg
sub
add
mov
and
jo
stos
add
mov
aas
mov
xor
and
rorb
lods
loopne
sbb
mov
or
je
dec
pop
adc
outsb
mov
push
mov
and
addl
ret
mov
pop
and
fcomps
xor
aam
decb
push
cmp
addb
stos
clc
mov
push
cwtl
lock
cs
xchg
xchg
lcall
shrd
leave
mov
out
mov
enter
inc
movsb
dec
pop
or
push
xor
movsl
insb
clc
mov
push
add
cmp
test
popa
test
add
enter
mov
jnp
clc
cli
aam
or
and
jae
fistpl
out
xor
pop
cmpl
fcomps
int3
mov
cmp
pop
push
test
fsubrl
or
inc
ficoml
jp
out
cld
push
repz
cld
je
xchg
xchg
mov
daa
push
pushw
gs
das
add
arpl
push
mov
and
test
or
or
je
sub
imulb
insl
pusha
cmpb
pop
push
mov
mov
sbb
sbb
jb
dec
nop
pushf
cmp
push
push
mov
or
pushf
push
sub
cmp
pop
mov
sub
push
sbb
js
mov
lahf
inc
add
clc
cs
lret
ds
adc
push
scas
outsl
mov
add
lret
dec
hlt
sub
push
arpl
xchg
or
xorb
mov
and
or
fadds
mov
xor
push
cmp
popa
push
mov
mov
fadds
cwtl
test
inc
pop
push
xchg
iret
clc
cli
xchg
inc
pusha
cmp
ja
add
adc
adc
add
add
add
xor
js
dec
scas
push
mov
pop
clc
adc
add
or
xor
insl
xor
or
push
cmp
xchg
outsb
or
mov
and
mov
pop
cmc
cmp
or
dec
inc
adc
mov
sbbb
push
int3
sub
cmp
push
inc
inc
ret
mov
cmp
loope
and
adc
push
jne
sbb
call
movsb
out
mov
add
add
inc
lock
movsl
sbb
add
push
mov
jbe
hlt
mov
loope
movsb
sbb
inc
add
pop
inc
mulb
push
xchg
add
aaa
loopne
pop
ret
jb
mov
add
push
aam
pop
sub
add
pop
add
orl
je
cmpb
addr16
jmp
jnp
and
xorps
fprem
loop
mov
dec
loope
clc
je
jp
mov
sub
ds
push
loopne
stc
xchg
lock
sti
lea
push
lea
push
inc
push
push
add
xor
unpcklps
insb
xor
sbb
fisubrs
mov
cmp
jl
cmp
dec
hlt
int3
xor
sarl
ret
hlt
icebp
sub
push
jle
stos
sbb
mov
lock
jne
dec
outsl
sbb
push
sar
loop
add
add
mov
stos
push
das
out
cld
sub
out
test
out
or
cmp
je
jmp
dec
cmp
lcall
xchg
clc
xchg
mov
movl
adc
push
sar
sbb
out
cmpsl
popa
addl
sub
adc
xchg
psrlq
jg
inc
stc
in
sub
lea
out
sub
mov
push
dec
or
in
out
adc
add
jmp
aad
aam
or
and
push
bound
punpckhbw
sub
mov
jge
daa
rolb
sub
movsl
mov
push
sub
clc
arpl
add
or
ds
cmp
test
jne
call
cmpsl
xchg
out
lock
push
jle
inc
add
lods
orb
arpl
sbb
mov
jl
loope
adc
out
divl
add
cmp
add
or
ret
or
adc
loop
neg
cwtl
jle
pop
xchg
loopne
test
xchg
xor
or
dec
or
sub
xchg
addl
jb
mov
add
jmp
cmp
xorb
push
mov
pop
mov
or
add
adc
mov
xchg
adc
push
push
mov
ficoms
mov
rcrl
aas
inc
clc
sub
iret
insb
je
cmp
test
pusha
fidivrl
inc
jo
jmp
imul
adc
add
dec
decb
data16
icebp
adc
fisttpll
add
fcoms
cmp
mov
roll
push
or
inc
js
sbb
lock
mov
clc
cmp
jne
ds
jecxz
loope
je
push
in
rolb
mov
hlt
adc
dec
popa
sidtl
aam
jmp
stos
jle
std
faddp
jmp
jl
ret
sbb
shlb
jmp
cmp
and
inc
or
jno
cmp
push
inc
cmp
jae
or
or
push
insb
mov
xor
inc
out
pop
pop
adc
into
ret
cmpl
cmp
ja
lea
inc
cli
in
loop
pop
aaa
cltd
cmp
dec
mov
incb
rorb
mov
sub
ljmp
or
jbe
sub
ret
lods
cmp
inc
data16
leave
jecxz
dec
or
or
call
jae
dec
add
scas
jl
xchg
mov
inc
add
mov
jl
sti
or
mov
push
mov
mov
inc
sbb
dec
and
aam
aad
cwtl
fiadds
add
inc
loopne
sbb
ret
cli
mov
or
out
or
dec
sub
js
and
mov
repnz
jbe
addl
addr16
or
inc
lds
mov
jb
dec
adc
loop
pusha
sahf
xchg
jnp
popl
push
mov
mov
call
lea
push
mov
clc
push
lock
cmp
je
push
pop
and
call
adc
pop
das
xor
je
insl
adc
imul
mov
sbb
sti
or
add
cmp
dec
rcll
mov
adc
xchg
lcall
out
sarb
push
sub
jnp
lret
dec
adc
push
test
cs
movsb
pop
ret
xchg
ljmp
xor
xor
add
testb
in
cmp
aam
add
in
cmp
lahf
xchg
cmpsl
adcb
mov
push
in
or
pop
add
out
cli
jp
cmp
add
or
out
jne
test
mov
add
push
push
je
lods
adc
inc
jmp
pop
mov
int
in
pop
mov
aad
add
mov
or
scas
push
arpl
cs
sbb
mov
dec
or
add
inc
jno
mov
js
scas
jno
insb
das
xor
push
or
push
into
movsl
bnd
outsb
xchg
in
xchg
lcall
pop
fcoml
jecxz
je
dec
inc
outsl
sti
adc
or
jns
jbe
loope
roll
jnp
jno
enter
sub
mov
jne
xor
cmpsb
mov
or
dec
pusha
test
mov
jl
mov
fildl
lock
or
int
cmp
add
mov
adc
cmp
cmpsb
pop
inc
adc
neg
out
imul
es
fidivl
ja
sub
sbb
mov
jmp
rcrl
inc
push
movsl
sbb
je
xchg
push
and
add
test
xorl
inc
nop
ja
sbb
lds
add
adc
fadds
loop
push
add
pop
mov
pop
andl
push
dec
push
push
push
xor
pop
data16
sbb
inc
push
pusha
lcall
pop
pop
push
or
cs
sub
push
je
jo
nop
inc
push
insb
push
sub
dec
lahf
cmp
sub
jb
sub
add
cwtl
or
mov
push
jns
ret
insb
or
lods
cld
adc
mov
pop
or
or
outsl
test
mov
shrl
js
lods
aam
sbb
or
inc
std
sub
je
orl
push
pop
test
dec
add
sbb
movsl
fisttps
sbb
sbb
jmp
loopne
pop
pusha
arpl
pop
out
fadd
fdivs
jno
xor
sub
inc
or
push
add
bound
sub
repnz
popf
dec
insl
and
dec
cmp
add
jmp
mov
andb
imull
xchg
popf
pop
and
mov
or
mov
mov
sbb
int3
cmc
adc
iret
orl
mov
lods
leave
and
push
push
sbb
scas
xchg
sbb
push
and
pop
mov
sbbb
xchg
lds
mulb
testl
pop
fiaddl
adc
cmp
or
pop
inc
jbe
sbb
mov
lods
js
ret
pop
repz
sbb
or
jae
rclb
mov
mov
xchg
leave
pop
xchg
js
orb
push
fcompl
sbb
and
lret
and
push
shrb
pop
insb
xor
inc
mov
mov
movsl
ds
mov
shll
shrl
leave
cmp
xor
lea
jae
insb
aad
adc
enter
clc
adc
enter
hlt
mov
push
dec
xor
inc
inc
pop
or
sub
enter
cmp
sbb
movsl
aaa
cmp
leave
pop
sbb
hlt
dec
rcll
jae
mov
inc
pusha
andl
je
inc
or
sbb
mov
jmp
shll
cmp
jge
gs
out
or
push
push
int3
mov
cltd
mov
cs
pop
lods
out
popf
add
lea
push
cs
add
cltd
and
inc
sbb
jo
xor
stos
add
and
xor
and
mov
enter
dec
and
inc
or
push
insl
jg
mov
mov
popa
nop
and
add
mov
sub
add
mov
js
sbb
ret
out
cld
out
push
push
pop
lcall
sbb
fldl
cmp
or
lahf
and
push
nop
nop
sbb
sbb
or
sbb
addr16
or
sbb
fdivr
faddp
fldt
enter
mov
pop
add
sbb
stos
fisttpl
xchg
ret
inc
inc
sbb
add
sub
add
add
pop
sub
and
adc
add
xchg
iret
sub
xor
daa
std
lods
cmpsl
sbb
sbb
and
and
and
iret
test
fistl
ret
dec
adc
repnz
mov
inc
cli
xchg
push
adc
mov
mov
incl
cld
and
das
pushl
mov
hlt
inc
cmp
repz
jg
dec
mov
add
dec
fstpl
inc
push
xchg
adc
sbb
jne
pop
pushf
ret
jb
dec
mov
in
sub
ret
inc
call
or
push
rclb
xchg
push
inc
pop
or
outsl
and
mov
add
xchg
sub
addr16
push
cmp
lahf
xor
or
popa
cmp
adc
test
push
or
dec
dec
in
push
dec
pop
adcl
inc
cmp
sarl
pop
mov
jo
add
icebp
divb
dec
sar
js
adc
xchg
mov
je
cli
cmpsl
jns
test
hlt
lea
push
addl
add
insl
idivb
mov
pop
mov
jne
adc
pop
aas
aam
adcl
shll
inc
jo
fcomps
pushl
lret
xchg
sbb
or
xor
mov
nop
enter
hlt
sbb
add
lods
faddl
push
mov
stos
scas
xchg
popa
jmp
xor
push
outsb
inc
sub
jle
pop
sbb
mov
pusha
jo
inc
insb
shl
or
pop
mov
fstpl
sub
jne
loope
push
movb
call
mov
inc
pop
mov
mov
jns
inc
inc
cmp
push
test
idivb
popa
mov
fs
jne
mov
rcrl
lock
add
sbb
shl
xchg
sbb
sub
add
sbb
mov
cmp
xchg
mov
inc
or
loope
notl
sbb
int3
push
ret
insl
adc
push
stos
push
jne
jmp
push
cmp
and
jne
xorl
ljmp
int
jle
push
add
push
imul
and
loop
mov
rclb
cmp
inc
mov
pop
lods
ljmp
in
cs
imul
sub
mov
pop
test
aam
inc
lret
in
mov
inc
cwtl
cmp
cltd
outsb
mov
xchg
or
cmp
mov
cmpsb
roll
mov
enter
or
out
inc
push
aas
sub
nop
adc
and
nop
iret
shll
mov
cwtl
inc
push
daa
or
sti
hlt
xchg
rorl
or
fwait
push
sbb
adc
fisttpll
xchg
fldt
mov
and
push
mov
in
push
adc
adcb
xchg
and
sub
or
pop
cmp
loopne
mov
loope
stc
xchg
inc
push
mov
or
push
shlb
xor
dec
stos
insl
and
enter
mov
xchg
pop
rolb
jmp
mov
sti
push
dec
inc
pop
rcr
add
xchg
enter
sub
sbb
test
xor
xchg
xor
xlat
adc
test
xor
movsl
mov
pop
jmp
xchg
lock
cmpb
add
sub
fbstp
out
jnp
orl
push
push
pop
addl
insb
and
xchg
lock
lods
jb
inc
mov
dec
and
inc
pop
cmp
push
pop
cmp
jne
outsb
mov
jge
or
cmp
pop
cmp
push
pop
adc
or
pop
and
inc
out
xor
mov
sbb
test
aad
ret
jne
push
imul
int3
clc
mov
add
mov
cmp
jb
fimuls
mov
andl
push
sbb
pop
push
lods
loop
xchg
push
test
loop
sub
out
push
cmp
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
cmp
and
inc
inc
or
fsubr
aam
out
shrb
and
xor
pop
push
pop
stos
hlt
outsb
pop
enter
std
hlt
dec
xchg
inc
popa
and
orps
add
test
mov
inc
fsubrl
or
dec
aas
jg
imul
rclb
dec
insb
push
push
push
mov
mov
into
enter
sbb
lods
pcmpgtb
fists
test
dec
xchg
adc
push
das
or
leave
push
mov
hlt
xor
push
inc
lcall
movsl
adc
add
jge
aam
dec
xor
cwtl
pop
jae
add
pop
push
adc
outsb
mov
ret
adc
jg
mov
incl
outsb
pop
test
or
or
mov
or
or
cld
ljmp
cmp
push
mov
enter
adc
inc
push
enter
mov
push
enter
dec
pop
imul
enter
dec
or
enter
sub
adc
nop
addr16
call
in
mov
cmp
mov
imul
popl
mov
jae
add
movsl
arpl
push
mov
es
pop
inc
out
sbb
in
sbb
inc
jb
ret
adc
sbb
sbb
push
add
sub
push
jno
jb
cwtl
inc
xor
mov
mov
stos
cmp
dec
pusha
push
mov
clc
mov
lea
mov
jge
shrb
lret
mov
leave
pxor
in
dec
add
inc
add
and
sub
xor
and
fsubl
lcall
pop
add
mov
clc
divb
xchg
jecxz
pop
xlat
dec
in
jno
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
bound
imul
or
adc
inc
fimuls
mov
lods
add
cld
inc
and
push
repnz
loopne
mov
dec
icebp
mov
out
pop
pop
mov
mov
add
push
repz
push
cmp
pusha
pop
ret
add
out
sbb
xor
sbb
mov
mov
subb
pusha
daa
mov
sub
pop
mov
std
jns
cmpsl
mov
paddusb
popf
mov
add
test
or
call
pop
aad
daa
inc
dec
add
xchg
mov
or
add
imul
ret
mov
lods
faddl
cs
inc
lock
popa
add
outsl
add
out
aas
jg
outsb
mov
xchg
cmpsl
loope
shlb
cmp
push
loopne
mov
sti
ja
jo
pushf
mov
rolb
dec
lock
mov
cmp
push
icebp
sbb
sub
mov
sbb
movl
inc
cmp
adc
nop
fimull
aad
sub
daa
push
add
add
fwait
imul
and
add
in
xor
lea
mov
movsl
cmpsb
sbb
mov
or
ja
jmp
aad
out
pop
test
aaa
sarl
xor
inc
adc
shl
test
lcall
push
je
dec
jne
pusha
pop
push
inc
cmp
inc
insb
out
mov
xchg
shr
and
jmp
movsl
sub
lahf
push
pop
lods
cmpsl
pop
sbb
mov
aam
nop
lahf
test
cmc
pop
inc
sub
je
dec
nop
lea
mov
dec
cmp
mov
xchg
les
test
jge
sti
andl
mov
xor
inc
rcr
push
pushf
test
xchg
cltd
sbb
mov
mov
lea
cmp
jb
adc
or
or
dec
outsb
mov
sub
jge
cmp
add
ja
xchg
ss
pop
sbb
je
mov
xchg
cmc
push
loopne
push
pop
and
mov
aam
cmpps
out
and
sbb
push
jge
fstpl
push
sbb
pop
repnz
clc
mov
addr16
push
inc
xchg
or
movsb
mov
lahf
push
push
sbb
les
cwtl
inc
pushf
repnz
test
stos
lods
pop
or
jb
pop
jo
frstor
cmp
testb
sbb
psubsw
cld
xor
ds
je
push
lock
add
mov
inc
lods
mov
pop
pop
cmpsl
xchg
cmp
es
lock
or
xorl
cld
stos
scas
inc
lea
push
lods
or
push
enter
jo
popa
lea
push
cltd
xchg
mov
push
iret
add
orb
add
jnp
push
push
lods
adc
and
push
cmp
jno
add
jmp
cmp
je
rol
stos
aaa
js
roll
andl
or
ret
int3
loopne
pop
xchg
roll
mov
push
pop
mov
xchg
adc
mov
jmp
add
lcall
cmp
fisubl
fs
inc
aaa
int3
arpl
pop
fsubs
les
incl
adc
mov
mov
mov
hlt
push
mov
xor
mov
inc
loope
rorl
faddl
push
inc
mov
mov
adc
js
and
add
or
and
aaa
movsb
dec
and
dec
push
lret
imul
mov
jp
mov
ret
aaa
imul
pop
add
adc
sub
mov
pop
jge
dec
add
mov
popa
movsb
sub
add
inc
adc
push
and
sub
clc
inc
lea
lret
ja
mov
adc
pop
or
push
ljmp
pop
lods
in
test
dec
jmp
out
mov
or
mov
adc
push
jle
jno
and
jg
ja
jge
test
movsl
mov
jno
pop
pop
cmc
adc
fdivrs
test
mov
xchg
movl
xor
xor
add
popa
or
xor
test
fmuls
out
mov
mov
jp
inc
test
test
dec
jo
enter
jle
cli
and
mov
mov
mov
add
jbe
lea
out
or
mov
daa
clc
ss
fcomps
xchg
mov
or
test
or
sub
fs
mov
shrl
push
pop
jae
stc
imul
mov
mov
cmp
and
insl
add
cmpsl
xchg
push
call
rcr
dec
aad
popf
mov
inc
cmp
addb
ss
jnp
add
mov
ss
es
leave
mov
xchg
cmp
push
sub
in
imul
mov
les
xor
in
jg
adc
jns
enter
or
dec
push
movsb
mov
pop
mov
pop
or
mov
lods
mov
je
icebp
or
xor
mov
adc
or
pop
and
mov
jae
sub
cmpsl
lret
cmp
cmp
rorl
jecxz
and
subl
mov
fisttps
jae
sbb
testl
inc
dec
cmp
jmp
test
mov
das
jae
push
sbb
fistpl
pushf
in
push
mov
js
and
push
sub
subl
push
faddl
xchg
test
test
sbb
sub
adc
sbb
push
sbb
lea
inc
dec
mov
push
jns
mov
push
jns
inc
dec
xor
aam
dec
pop
push
xlat
lods
and
dec
inc
or
pop
pushw
sbb
sbb
pop
mov
test
in
cmp
lea
adcb
pop
xor
or
sub
lea
sti
pop
jb
cli
sbb
inc
sbb
in
pushl
cld
pop
adc
sub
rclb
lods
sub
sub
pusha
push
outsl
ja
pop
mov
xlat
dec
pop
mov
cmp
mov
mov
cmp
cmp
sbb
mov
mov
add
out
in
test
dec
daa
lock
fucom
subb
in
push
mov
lret
dec
pop
push
pop
rclb
cmp
stos
repnz
or
aas
dec
cwtl
fcoml
add
push
xlat
inc
sub
inc
sbb
jns
mov
push
aas
lret
adc
or
stos
fs
aam
cli
insb
dec
cmp
ds
add
xorb
pusha
add
dec
jge
call
mov
add
fstps
je
and
jge
fwait
lret
xchg
cmp
mov
sbb
stc
add
xchg
sub
dec
and
sbb
nop
mov
add
pop
and
jl
in
stc
mov
cmp
inc
sub
imul
pop
sub
add
inc
pop
fsts
lock
jecxz
inc
fidivrs
dec
out
lock
and
push
adc
je
adc
mov
cmpl
and
pop
push
and
add
add
add
adc
pop
or
mov
and
pop
inc
and
or
in
in
enter
push
adc
enter
testl
add
sti
xchg
pop
add
cld
xor
test
pusha
das
outsl
inc
pop
mov
xchg
inc
jo
clc
inc
push
adc
jo
lds
sbb
out
sub
mov
andl
loope
dec
sbb
inc
dec
mov
fsubl
subb
sub
lcall
or
dec
fnstsw
or
lods
stos
xor
push
fcmove
mov
or
cltd
cld
pusha
movsb
shr
mov
xchg
mov
loope
pop
sub
xor
jne
movsb
daa
inc
lea
or
aaa
sub
inc
insl
mov
cld
fstps
or
push
cmp
lock
std
jmp
inc
mov
add
xchg
xchg
pop
je
pop
mov
out
enter
xchg
or
out
rorb
xchg
das
adc
xor
adc
xor
je
mov
push
mov
mov
insl
nop
inc
push
mov
sub
mov
push
mov
popf
pop
popf
push
enter
sub
push
sub
pushf
cmp
add
ss
les
clc
and
cmp
mov
mov
mov
jno
sbb
pop
push
stos
adc
out
je
cwtl
and
cmp
dec
xchg
sub
setle
or
pop
fistpll
or
and
jne
lea
orb
out
add
push
shrl
or
in
inc
inc
divl
je
xchg
jno
cmpsb
icebp
adc
mov
mov
and
adcl
adc
imul
push
aaa
outsl
loop
adc
repz
adc
stc
adc
sub
add
lods
mov
stc
lea
cmpsb
push
cmp
add
push
lret
push
idivl
mov
xor
cmp
cli
pop
inc
cmp
loopne
cmp
cmp
adc
xchg
fdivl
icebp
sbb
pop
loope
cli
xchg
and
jbe
cmp
popf
dec
divl
mov
pushl
mov
push
pusha
xor
mov
nop
addl
fldcw
or
mov
inc
fldl
pop
pop
fists
inc
pop
mov
call
aam
out
sbb
ret
xchg
cmpl
xor
jns
push
push
loop
lea
sub
mov
pop
sbb
cs
mov
call
xlat
test
hlt
icebp
fnstcw
pop
mov
call
popa
cltd
push
xchg
or
daa
jne
xchg
psubusw
add
sub
lock
pop
xlat
idivb
cmpsb
pop
or
frstor
shl
xchg
cld
dec
push
ljmp
push
cmpsb
jbe
das
adc
or
je
and
testl
shll
daa
aad
mov
inc
inc
cmp
or
add
aaa
sbb
mov
leave
mov
enter
int3
mov
jae
imull
cwtl
int3
jo
dec
mov
pop
loopne
shl
sub
pop
sbb
dec
sub
push
fs
mov
lret
xchg
xlat
ja
cwtl
cmp
sub
dec
ljmp
ss
adc
add
xchg
adc
aam
mov
add
pop
mov
testl
xor
pop
push
or
or
cmpsl
ss
pop
mov
mov
cmpsl
cmpsb
jae
mov
pop
dec
icebp
cs
and
lret
mov
and
push
xor
ret
mov
lcall
sarl
push
loop
cmp
push
pop
mov
sbb
xchg
inc
loope
push
test
push
mov
mov
and
shlb
xor
jecxz
adc
jg
or
mov
test
addr16
lea
mov
pop
jb
int
fisttps
in
int
pop
sbb
push
sbb
or
repnz
and
call
pop
inc
and
push
xor
and
mov
ss
iret
push
and
sbb
and
mov
push
jne
and
inc
cmp
jecxz
rorb
js
sub
dec
rcll
test
movsl
xchg
sub
daa
stc
popa
pop
enter
and
sub
and
test
insb
pop
rcll
in
cmp
and
mov
sub
js
lods
xor
ss
insb
xchg
aaa
arpl
psubw
pop
mov
push
push
dec
mov
imul
test
and
pop
das
nop
mov
inc
in
push
jae
clc
adc
or
dec
xchg
sarb
xor
cs
mov
imul
xor
push
ja
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fsubrl
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
push
xchg
sub
xchg
inc
movsl
push
push
pop
cmp
or
sbb
jo
pop
in
hlt
in
inc
sbb
test
cmp
movsb
mov
in
cli
push
pop
or
repz
fimull
and
dec
and
xchg
out
cmp
in
xchg
adc
pop
lock
adc
add
adc
and
pop
and
or
or
sub
pop
jbe
scas
loopne
add
push
into
or
mov
jl
mov
add
loopne
fisubrl
fsts
pop
adc
mov
fsubrs
rolb
cmp
shrl
add
and
fdivs
sbb
ja
hlt
dec
sub
stos
aaa
xor
movsl
lock
outsl
xchg
inc
aas
pop
push
pop
push
or
pop
push
push
dec
es
pop
adc
push
xchg
rorb
xor
dec
les
aam
int
sbb
push
push
push
icebp
or
push
add
js
and
mov
lock
in
fistps
test
mov
loopne
pop
push
inc
fisttps
sub
fnsave
xlat
adc
hlt
mov
mov
push
mov
sbb
jecxz
dec
int3
push
inc
xchg
int3
mov
vpdpwssd
daa
cltd
push
loop
mov
add
ja
dec
xchg
addb
std
je
rolb
sub
cs
jecxz
popa
call
xor
ds
jae
lods
push
cmp
mov
in
fwait
pop
into
inc
aad
push
pop
cmpsb
dec
push
fsubl
enter
test
mov
call
ror
shr
and
enter
cmpsb
xchg
rorb
loopne
xor
out
imul
sbb
lods
cmp
sarl
add
jb
pop
mov
cmpl
cld
cmp
and
js
inc
cs
clc
addr16
push
pushl
and
icebp
add
fdivs
push
subb
inc
fwait
mov
inc
push
xor
push
inc
rolb
repnz
or
add
ret
mov
es
es
jg
push
enter
test
cmpl
rcll
jne
push
loopne
sarb
mov
ja
jge
mov
mov
jnp
sub
imul
rclb
mov
add
adc
lods
and
push
mov
push
push
andl
pop
add
movl
ds
pop
mov
inc
je
movsl
adc
mov
fildl
push
add
mov
dec
lea
fnstsw
repnz
mov
adc
adc
dec
aad
and
adc
sbb
sarb
mov
pop
fldcw
xor
or
nop
fdivs
add
jae
unpcklps
cs
jne
cmp
adc
push
cmp
loopne
icebp
xor
mov
inc
pop
or
mov
and
outsb
clc
add
xchg
and
iret
push
pushf
or
in
testb
and
mov
cmc
and
inc
inc
in
stc
and
dec
out
jo
jl
addl
xor
pop
fisttpl
dec
adc
add
insb
aaa
xor
adc
mov
mov
adc
orl
jmp
sub
pop
popl
cmp
fs
ret
inc
sbb
xor
push
test
push
jno
xor
movsb
sbb
inc
stos
mov
pop
nop
inc
out
inc
enter
cmp
xchg
out
mov
and
mov
test
sbb
insb
mov
aam
pop
xor
femms
imul
xchg
dec
nop
pop
out
push
mov
pop
call
sub
ja
and
mov
pop
push
test
add
addr16
mov
out
insl
pushf
mov
add
movsl
mov
sub
mov
or
pop
push
mov
mov
in
inc
pop
loop
or
loop
enter
sub
cmp
jge
mov
ret
pop
pop
rcrb
and
loopne
ret
cmp
ja
loop
repz
sub
enter
cmp
pusha
loop
loopne
fnstenv
popf
add
pop
mov
lret
adc
add
sbb
lock
push
andb
mov
xor
dec
jno
dec
call
stc
in
add
sub
addr16
enter
inc
push
inc
dec
int3
cmp
sub
push
cwtl
js
insl
pushf
sub
stos
xor
xor
iret
xbegin
pusha
adc
pop
mov
xchg
lret
stc
add
adc
add
adc
add
lea
fisttps
js
aam
pop
shll
insb
hlt
movsl
push
push
movl
jp
pop
add
push
add
lret
outsl
or
add
pop
lret
leave
leave
or
pop
or
and
or
sbb
rorl
inc
lret
sti
sub
lods
and
push
jmp
sub
and
jecxz
dec
cmp
adc
xor
push
inc
mov
je
fcoms
add
rorb
or
add
dec
andl
dec
imul
or
cmp
sar
dec
iret
inc
movsl
dec
mov
pusha
paddusb
out
adc
cmp
pop
add
popf
icebp
adc
cmp
fcmovb
cld
add
rol
or
dec
aaa
adc
cmp
movsbl
jbe
adc
loope
cltd
jne
add
addl
xor
enterw
sub
leave
and
mov
mov
mov
mov
leave
fdivrs
mov
xor
mov
lret
add
orl
mov
aam
in
adc
jmp
lea
loope
dec
pop
popa
inc
ja
sub
sub
leave
adc
adc
inc
in
rolb
adc
test
mov
sbb
sbb
adc
and
rorb
xchg
jo
pusha
movsl
or
mov
add
mov
fs
popf
das
mov
gs
mov
mov
fisubs
cmp
and
pop
cmp
jb
and
neg
in
lea
pop
push
push
xor
dec
test
bound
daa
push
test
sarl
pop
lret
ret
je
or
push
sbb
js
or
cwtl
iret
add
push
leave
push
fdivr
pop
rcrb
inc
jg
inc
inc
mov
mov
xchg
xchg
dec
cmp
mov
add
scas
sub
or
sub
hlt
or
pop
mov
es
dec
or
xor
xor
adc
fcoms
cmp
imul
add
leave
inc
sub
and
icebp
push
or
fcomi
add
xor
dec
fsubrs
loopne
dec
jmp
inc
dec
bound
sbb
sub
mov
hlt
imul
push
ds
test
frstor
push
add
add
dec
mov
adc
orl
push
jmp
and
dec
sbb
outsl
bound
iret
movb
pop
jl
or
cld
movsl
hlt
or
inc
cmp
push
jecxz
lahf
and
push
dec
fsubrs
das
fists
roll
inc
js
fcmovu
cmp
adc
sbb
dec
mov
fstps
adc
mov
cs
or
mov
adc
out
loop
test
sub
fs
ja
add
lock
push
adc
in
cli
pop
je
cmp
add
repnz
dec
push
sub
movsb
mov
push
adc
fwait
pop
mov
dec
je
lea
sub
aaa
jge
adc
and
add
jb
sub
fmuls
sbb
aad
stos
imul
insl
dec
mov
push
mov
add
cmp
mov
dec
inc
icebp
push
add
or
or
dec
add
mov
bound
push
add
xchg
andl
xchg
jno
fisubl
push
fisubrl
orl
lret
and
ss
or
int
sarb
mov
jl
pushf
adc
jnp
inc
jl
adc
sbbl
out
and
subl
mov
cmp
subl
add
xchg
push
push
sbb
xorl
subb
mov
push
sbb
bound
sbb
jmp
jne
mov
push
and
push
pushf
pusha
xchg
sbb
push
shl
movl
scas
aad
cmp
xchg
push
mov
xlat
mov
imul
jo
das
or
jo
ja
add
sbb
sbb
xchg
pushf
inc
add
outsl
clc
orl
aad
mov
add
dec
lcall
inc
cltd
inc
lcall
into
or
cwtl
xchg
push
pop
adc
add
push
aas
clc
pop
aad
xor
mov
mov
mov
mov
mov
and
add
sub
add
push
pop
xchg
mov
inc
add
gs
mov
mov
rorb
mov
lea
mov
ja
dec
add
add
adc
mov
insb
mov
rolb
lret
imul
inc
xchg
push
lods
or
loopne
xor
and
cld
adc
add
and
dec
in
jo
add
sub
or
or
xchg
sub
lea
test
daa
push
mov
sub
xchg
incl
push
push
lods
xchg
mov
leave
jno
sarb
mov
mov
idivb
xchg
mov
jg
jb
cmp
sub
dec
and
pop
adc
and
or
xchg
pusha
lods
sarl
fwait
dec
dec
popf
loope
mov
hlt
dec
test
push
dec
sbb
adc
mov
pushf
js
sbb
dec
push
call
or
mov
dec
fnsave
inc
jo
sbb
in
add
out
push
xchg
sub
push
sbb
js
push
mull
leave
movsl
add
mov
add
dec
cmp
js
mov
fadd
push
adc
and
add
jmp
arpl
jle
popa
add
movsbw
inc
jg
mov
jne
xchg
fucomi
and
or
or
fwait
dec
jge
xor
inc
jb
add
cmp
jle
and
std
cmp
push
push
idivb
mov
hlt
push
inc
mov
sbb
inc
mov
addl
shl
js
je
lret
push
sub
adc
and
ret
inc
ds
sti
cmp
xor
dec
mov
nop
test
std
test
aas
lea
int
add
fwait
push
xor
xchg
dec
dec
lods
repnz
jo
push
xor
mov
or
xchg
add
cmp
lcall
pop
lcall
cmp
dec
fdivs
xchg
mov
imul
fmull
pop
pop
repz
sbb
dec
and
lock
shll
inc
xor
jo
or
jmp
inc
mov
fucom
rolb
pop
dec
cmp
faddl
out
sub
cltd
sub
pop
add
sarl
leave
add
pop
je
add
in
mov
movsl
loopne
ret
mov
lods
ljmp
or
inc
mov
mov
rorb
shrl
mov
pop
call
dec
cmp
mov
sbb
and
ret
push
dec
or
add
popa
xlat
push
and
mov
cmp
hlt
push
in
cmp
adc
mov
mov
xlat
mov
jno
xchg
das
push
adc
lcall
push
repnz
inc
test
notl
xor
shll
pushf
test
icebp
mov
inc
test
clc
xchg
xor
icebp
push
inc
push
mov
lods
adcl
xor
call
cmc
mov
stos
mov
leave
daa
or
or
adc
andb
les
and
push
mov
add
outsb
mov
mov
add
xlat
or
in
push
ret
add
mov
loope
test
jne
arpl
mov
cmp
dec
arpl
pop
repnz
pushf
in
loop
xchg
nop
sarb
in
lret
jb
push
add
or
adc
push
mov
movl
sbb
gs
pop
dec
js
cltd
mov
dec
adc
mov
mov
adc
push
mov
andb
leave
dec
adcb
adc
popl
rclb
mov
pop
das
mov
inc
cmp
adc
mov
dec
test
jae
and
pop
adcl
test
cmp
xor
dec
xor
push
adc
mov
movl
add
or
jnp
jno
inc
dec
inc
pop
inc
pop
add
insb
mov
shlb
push
int3
shr
xor
leave
addr16
negb
add
mov
dec
push
pop
jo
es
ret
mov
das
sarl
sbb
sbb
sub
ss
jge
add
movsl
jo
in
in
adc
xor
loopne
movsb
pop
popa
add
add
sarl
or
add
mov
ss
aas
call
adc
push
and
inc
inc
mov
jp
hlt
jb
sub
lods
fwait
inc
sub
aam
clc
sub
lcall
sbb
push
push
push
push
test
aam
cwtl
jl
xor
mov
das
xor
jne
stos
icebp
xlat
scas
adc
mov
push
cmp
movsb
inc
sub
in
movsl
test
push
cmp
jne
mov
and
mov
rolb
push
mov
ds
rorb
sub
sbb
pop
and
xchg
add
dec
rcll
popa
repnz
xchg
nop
mov
sub
adc
jbe
xor
cs
pop
xchg
and
inc
add
jnp
cld
jmp
push
sub
inc
or
xchg
js
cmp
mov
adc
jge
lahf
pushf
jmp
push
inc
cwtl
lcall
in
sbb
hlt
adc
jns
faddl
test
loope
mov
sahf
cld
mov
imul
lods
std
pop
xchg
adcb
stc
or
cmp
js
add
push
in
jne
xor
xchg
xchg
sbb
jb
mov
popf
enter
adc
rolb
sbb
jnp
adc
pop
les
mov
adc
cs
ja
and
cmp
or
jg
push
stos
push
pop
pushl
sbbl
pop
inc
jecxz
xchg
or
adc
xchg
adc
add
les
cwtl
lods
mov
rol
add
cmp
popf
adc
js
sub
outsl
xchg
idivl
inc
movsl
enter
mov
dec
push
cltd
or
xchg
iret
sub
loop
test
push
push
xlat
xchg
inc
sbb
pop
cmp
or
jns
mov
addr16
xchg
incb
and
pop
cmp
in
push
cmp
fwait
cmp
ss
xchg
jne
pop
cmpl
ja
ret
xchg
inc
and
dec
push
push
push
and
pop
push
mov
mov
sbb
add
out
rcll
sbb
and
add
add
jne
mov
push
hlt
jg
icebp
add
adc
orl
push
jbe
xor
mov
cltd
or
ja
jne
mov
jb
mov
stos
insb
jl
jnp
or
add
or
ja
loopne
shlb
add
sti
outsl
dec
add
negb
rolb
dec
outsl
cmp
mov
in
sti
xor
or
stos
jmp
clc
jmp
and
dec
stos
je
shrl
jge
mov
int3
mov
aas
xor
push
mov
sub
push
rcrb
push
push
cmp
add
dec
inc
aam
imul
push
add
pop
dec
pop
cs
cmp
add
xchg
clc
dec
fcomi
jmp
sbb
or
pop
int3
je
pop
adc
pop
ss
int3
pop
push
sub
adc
and
loopne
jmp
nop
push
fisttps
je
push
mov
arpl
clc
xchg
add
mov
sub
or
dec
push
inc
and
mov
sbb
aas
cmp
pop
jp
cmp
sbbl
outsb
push
fwait
out
and
inc
mov
sub
cmp
adc
loope
andl
fcoms
bound
aas
mov
loopne
and
in
mov
push
inc
nop
lret
mov
scas
adcb
outsl
and
sbb
das
int
mov
cmp
dec
add
cltd
sub
por
jl
mov
test
repnz
and
push
addr16
cltd
shrb
popf
jno
push
sarl
cmpsl
cmp
or
clc
pusha
fchs
jmp
test
pop
lods
pusha
bound
push
loopne
or
pop
mov
sarl
jae
sub
mov
int
mov
sbb
fs
jecxz
fs
and
ret
adc
es
out
mov
mov
dec
sbbb
adc
add
idivl
add
cmpw
sbb
cmpb
pop
mov
push
push
add
ljmp
in
pop
push
pop
mov
add
sar
push
dec
mov
je
jl
sub
add
or
adc
adc
jns
inc
pop
adc
or
inc
push
xor
and
mov
mov
inc
add
shlb
pusha
jne
push
dec
push
loopne
pusha
xor
jl
sub
jmp
jg
andb
push
lcall
dec
movzwl
cmpl
outsl
out
pop
add
pop
or
jns
inc
jae
inc
or
dec
sti
rclb
sbb
cmp
inc
nop
lret
add
ret
xchg
fcmove
mov
mov
xor
jb
jo
xor
push
fs
inc
in
ret
pop
push
ret
jl
push
pop
fsubs
inc
aam
add
pop
sub
mov
adc
fs
pop
bound
hlt
jne
jb
cmpsl
ret
sbb
dec
push
cmp
in
jmp
add
pop
push
pop
push
dec
push
inc
push
xor
jo
inc
lret
addl
lock
nop
xchg
inc
adc
int3
loopne
imul
insl
sub
push
sbb
mov
push
and
je
cmp
rclb
imul
icebp
adc
sub
sbb
push
sub
sbb
pop
cs
rol
lods
inc
fisttpll
push
xor
lods
shll
push
jns
adc
jne
dec
inc
mov
or
sub
sbb
push
inc
outsl
loope
lods
call
adc
ficomps
lock
test
inc
or
shlb
pop
xor
test
cmp
les
mov
sbb
dec
cmpsl
mov
iret
mov
xchg
aam
cmpsb
repnz
add
lret
les
sub
bound
sub
nop
xchg
sbb
add
add
cmp
ret
shll
or
mov
mov
cmp
inc
out
cltd
js
stc
pop
dec
push
jns
push
cmp
sub
push
test
or
and
shlb
add
cld
pop
or
test
pop
dec
daa
pushf
push
cmpl
loopne
add
pop
je
or
pop
mov
mov
mov
push
jge
leave
add
movsb
out
aad
in
das
test
jb
xchg
stos
and
cmp
xchg
xor
jl
subl
sbb
and
loopne
cmp
and
dec
mov
imul
movsb
push
sub
xchg
add
or
xchg
push
and
push
adc
jge
scas
push
shll
sub
rclb
push
pop
mov
pop
in
push
fisttpll
sbb
jmp
incl
ja
les
icebp
jmp
aaa
sbb
hlt
movsl
loopne
jecxz
stos
sbb
in
in
roll
xchg
xor
rcll
dec
stos
mov
stc
in
sub
add
dec
mov
push
incl
popa
inc
jmp
cli
dec
cmp
lret
push
outsl
and
orl
adc
lahf
in
dec
cs
and
adc
sbb
shl
mov
clc
mov
add
mov
inc
cmp
pop
cmc
dec
xchg
dec
mov
add
mov
enter
jno
jae
sub
loop
xchg
sub
rclb
push
js
jb
icebp
and
jp
lea
jmp
push
push
das
or
pop
push
pop
pop
jb
loope
mov
adc
pop
mov
inc
dec
andb
ret
ret
jb
mov
in
and
mov
push
dec
cvtpi2ps
inc
sub
inc
inc
pop
adcl
jbe
pusha
add
lea
xor
add
outsl
jnp
mov
jmp
cs
add
addr16
daa
add
dec
sbb
adc
sub
xchg
mov
and
sbb
lods
push
mov
repz
cwtl
cmp
pop
ret
test
push
mov
dec
aas
mov
test
push
dec
sub
push
or
push
adc
rcrb
inc
sahf
sbb
inc
outsl
shlb
fs
add
out
popf
add
mov
dec
and
cmpb
dec
addb
jne
mov
adc
and
jne
push
call
sbb
imul
mov
sbb
mov
subb
inc
sub
xchg
fdivs
inc
xor
fwait
jmp
mov
test
ret
push
dec
push
mov
arpl
call
jp
movsb
adc
xor
and
xor
aaa
divb
subl
scas
add
pop
jge
jge
sbb
adc
add
xchg
dec
int3
clc
xchg
rclb
add
xor
sub
inc
ret
addr16
sbb
dec
mov
or
sbb
rep
cmc
lahf
adc
jge
pop
movsl
cmpsb
add
daa
inc
mov
xchg
cli
in
repz
mov
xchg
in
movsl
mov
push
hlt
mov
add
dec
push
or
inc
clc
jno
dec
shr
inc
aam
rorl
mov
pop
movsl
movsb
ret
push
adc
movsb
push
push
jb
rolb
cwtl
call
adc
hlt
ret
shll
inc
lret
add
enter
outsb
xchg
fists
sbb
addl
push
aaa
adc
add
test
mov
vpaddd
mov
test
inc
cmp
aaa
lea
mov
mov
fwait
les
fsts
jge
push
push
out
adc
jne
cmp
pop
jae
push
adc
jns
push
fdivl
dec
xor
outsb
clc
push
xor
pop
sbb
adc
or
hlt
xor
sbb
xor
jmp
rclb
pop
testb
mov
pop
lods
push
xor
or
push
sub
icebp
cmpsb
pop
repz
mov
adc
je
lods
xchg
push
int3
adcl
pop
add
or
mov
jle
cmp
jbe
adc
cmp
jmp
push
jg
lods
xorl
out
pop
lret
js
loop
int3
mov
aam
push
xor
pop
and
js
mov
push
adc
outsl
xlat
rcrb
inc
push
sub
dec
and
fisttpl
idivl
gs
jp
mov
pop
or
xor
and
jmp
cmp
jne
xor
enter
scas
adc
mov
clc
ret
daa
add
mov
push
jne
push
jb
or
dec
jp
cmp
or
pushf
jne
insb
cmc
xor
push
push
and
out
js
mov
mul
seto
neg
or
push
mov
adc
mov
ror
cmp
popa
mov
in
stos
aas
jbe
in
lcall
jb
push
sbb
or
xor
xchg
das
push
jbe
mov
lret
je
mov
add
es
out
pop
nop
push
push
lret
xor
and
mov
xor
repz
or
dec
xchg
movsl
xor
or
adc
jne
cmpsl
out
repnz
cmpsl
in
decb
adc
insl
mov
enter
xchg
shrb
pop
mov
in
pop
and
sbb
sbb
icebp
add
popl
hlt
cmp
adc
xor
movsl
or
pop
mov
dec
movsl
adc
pusha
xchg
pop
insl
jecxz
fcompl
xchg
aas
xor
nop
incl
mov
cwtl
dec
sub
sbb
push
adc
xchg
push
cwtl
sbb
adc
loop
push
push
and
cmp
pop
int3
cmp
into
and
cmp
xchg
or
xchg
and
push
or
les
push
push
jb
and
stos
and
push
sub
dec
cwtl
cmc
inc
cmp
mov
test
gs
aaa
push
es
ljmp
loope
dec
pop
sbb
and
mov
fstps
pop
mov
dec
les
inc
jecxz
mov
push
leave
sub
fistpl
imul
mov
inc
xor
add
add
iret
and
dec
add
fdivl
push
pop
xchg
sti
xchg
or
pop
and
int
add
lea
jae
in
pop
sub
shll
and
and
push
stos
mov
or
lock
push
push
adc
add
xor
cmpb
cltd
pop
enter
jnp
mov
mov
dec
cmp
sub
or
mov
fld
sub
out
mov
roll
mov
push
jg
hlt
clc
adcl
js
pop
or
test
insb
mov
jno
and
xchg
push
adc
lea
add
in
test
jecxz
and
add
mov
and
sub
sbb
imul
add
sub
mulb
sub
inc
clc
lds
imul
adc
add
or
cmp
mov
push
xchg
add
lods
nop
and
dec
or
adc
dec
cs
jno
push
std
sbb
jae
pop
pop
jb
or
adc
sbb
call
xorl
aad
sarl
inc
shlb
mov
lock
les
push
pop
pop
xchg
add
sbb
in
movsl
xchg
or
imull
push
adc
test
cmp
test
or
add
invd
fst
xchg
sub
jge
mov
mov
out
xchg
scas
fld
cmp
insb
pop
cmpsl
jnp
mov
mov
lock
xor
lahf
or
add
arpl
push
dec
jmp
xchg
scas
add
stos
scas
popa
xchg
fwait
loope
lret
and
fwait
mov
loop
or
ja
inc
push
frstor
imul
cmp
fs
add
loope
fstpl
daa
lahf
add
xor
lods
or
je
cmpsb
scas
sbb
pushf
push
es
movsb
dec
jns
push
dec
jae
pop
aad
sbb
pop
sub
mov
cld
icebp
mov
pop
dec
sub
stos
in
sbb
xchg
enter
scas
call
mov
push
push
add
adc
mov
imul
and
data16
xor
xchg
dec
loop
jns
or
jbe
inc
pop
leave
pop
cwtl
or
movsl
jecxz
jmp
adc
pop
mov
flds
mov
or
and
add
aas
or
and
shll
mov
bound
lock
test
pusha
cmp
and
insl
out
sbb
xchg
or
shl
push
sub
xchg
fisubs
cmp
push
xchg
jo
mov
lea
jae
daa
adc
pop
push
xchg
bound
sub
sbb
adc
adc
pop
add
add
add
jo
lahf
or
pop
inc
mov
jmp
fwait
add
inc
call
bnd
pop
push
pop
ret
or
jne,pn
add
lock
xchg
int3
add
push
xor
xor
sub
inc
lods
lds
push
xor
push
lods
sti
test
sbb
and
xlat
pop
pop
dec
out
pusha
and
adc
mov
mov
or
test
or
xor
sbb
rcrb
mov
push
pop
jmp
getsec
dec
imul
add
insb
test
dec
inc
and
cmp
jnp
inc
mov
test
push
int
inc
lods
pop
fsubl
add
sbb
push
and
xor
leave
push
add
hlt
lods
sub
sbb
inc
dec
ficoml
add
xchg
sub
cli
inc
pop
lcall
loope
jg
and
add
movzwl
add
sub
pusha
pop
imul
mov
add
pop
inc
sbb
test
int
inc
or
xor
add
push
nop
dec
xchg
push
xchg
xchg
mov
mov
push
sub
daa
jne
inc
cmp
sub
pop
iret
dec
arpl
insb
push
jnp
lock
je
or
mov
cltd
push
sbb
int3
jno
sbb
xor
jb
sbb
add
and
dec
xor
cmpsl
rcl
mov
jg
or
xor
imul
inc
in
or
mov
les
cmp
or
and
insb
out
repnz
xor
loopne
or
jmp
push
cmpb
mov
and
xchg
out
adc
cli
add
jl
adc
in
mov
inc
adc
into
adcl
outsl
ds
pop
cmp
pop
mov
nop
push
and
daa
vprotb
dec
jl
or
insl
sub
mov
adc
push
pusha
sub
push
lcall
scas
fisubrl
push
mov
aaa
and
pop
pop
jmp
fadds
mov
adc
sbb
ret
pop
and
pop
jp
pop
mov
sub
sub
xlat
or
xor
adc
les
rcll
pop
jge
es
xor
pop
xor
mov
dec
mov
push
xchg
dec
enter
push
lds
sbb
inc
lcall
mov
jmp
add
jg
adc
sbb
fistl
add
fcompl
push
pusha
cwtl
sbb
adcl
jno
mov
or
add
adc
jbe
je
adc
scas
mov
sub
mov
enter
jbe
xor
cmp
icebp
push
popa
iret
push
jl
mov
sbb
and
push
mov
mov
fisubs
test
movsb
push
jno
filds
repnz
nop
xchg
cmp
lods
loop
fbstp
sbb
jp
cli
add
popa
inc
es
pop
jb
pop
and
jb
push
ss
mov
aaa
or
outsl
add
jae
sub
and
dec
adc
adc
test
loopne
pop
lods
xorb
pop
mov
pop
imul
inc
jge
loopne
push
pop
mov
dec
sbb
jmp
int
and
ja
cmp
inc
push
lcall
roll
insl
adc
and
adc
movsl
and
pop
and
test
push
or
add
and
enter
jo
inc
out
repz
jno
lds
incl
or
fisubs
pop
mov
test
and
push
or
push
test
add
cmpsl
aaa
movsb
fisttps
daa
and
cld
cs
das
rcll
mov
jge
jb
push
dec
lds
jno
std
add
push
mov
dec
fists
aaa
push
jge
jne
mov
lods
cwtl
insl
fisttps
mov
push
inc
scas
int
and
sbb
sbb
add
fs
jp
cmp
push
and
pop
cmc
mov
jne
jmp
scas
imul
repnz
cmc
add
xchg
and
or
pop
cmpb
adc
dec
dec
inc
pop
mov
das
and
mov
push
insb
push
mov
les
mov
popa
pop
xchg
add
test
mov
sub
fisttpl
sub
test
sbb
bound
daa
add
dec
adc
push
flds
scas
dec
loope
sbb
pop
cwtl
push
rolb
test
lods
mov
mov
bound
pop
mov
icebp
pop
cltd
pop
or
adc
inc
sbb
pop
pop
in
jne
cmpsl
rcl
lahf
fnstcw
outsb
cld
mov
pop
testl
sbb
adc
dec
addl
in
push
inc
add
push
adc
aam
sbb
mov
jns
add
or
dec
add
mov
adc
adc
les
xchg
and
sbb
aaa
sbb
pusha
sbb
and
ja
arpl
ss
xchg
mov
iret
ja
or
push
movsl
lcall
sub
adcl
jo
or
outsb
fisttpll
jmp
and
dec
xor
sub
jmp
jbe
aam
push
dec
rcll
mov
push
push
adc
ficomps
rcr
or
bound
sub
pusha
push
mov
test
fwait
inc
and
cld
mov
mov
ret
sub
inc
sbb
into
push
clc
dec
adc
inc
pop
sub
cmp
es
outsl
inc
push
xchg
insb
adc
pop
sbb
xchg
cmpsb
and
pop
sub
add
sub
pop
add
push
jle
sbb
loop
jne
das
fcomps
insl
mov
adc
cmp
push
jg
push
les
dec
mov
pop
pop
test
inc
icebp
pusha
sbb
pop
push
ss
push
push
cs
fcmove
push
inc
pop
add
push
je
and
push
inc
ret
pop
jle
xor
bound
mov
add
ret
nop
sahf
mov
xor
or
test
faddl
mov
lods
fidivl
mov
sub
sub
or
mov
push
mov
pop
repz
push
jge
lock
push
aas
pop
lods
mov
imul
mov
push
sub
sub
fnstcw
dec
iret
jo
pop
inc
sbbb
dec
sbb
add
sub
xchg
dec
addr16
les
push
xchg
jecxz
lret
mov
nop
shl
push
movsl
addr16
jo
bound
stos
je
push
popf
testl
jmp
test
or
in
mov
hlt
or
movsl
setp
aas
or
adc
addr16
call
ret
add
orb
and
lahf
iret
or
xchg
adc
xchg
sbb
cs
or
push
daa
sub
js
stos
mov
das
inc
xor
push
ret
pop
pop
xor
cld
aas
jb
iret
push
sub
lea
push
adc
mov
push
inc
jnp
pop
fsubrs
and
lds
ret
jo
leave
cs
hlt
les
sti
pop
ret
xor
xor
push
gs
adc
adc
dec
sub
push
roll
xchg
mov
ret
mov
inc
dec
mov
xor
pop
fcoml
cmp
push
inc
pop
or
outsl
movsb
mov
rcrl
fwait
lods
push
add
int3
nop
push
mov
cwtl
dec
sub
nop
call
inc
xorl
les
adc
std
rcll
imul
ss
add
inc
pop
push
imul
cld
push
test
fisttpll
add
adcb
orb
mov
nop
xor
loopne
pop
and
xor
xchg
pop
arpl
lods
stos
in
add
js
dec
loop
jg
xor
inc
adc
inc
adc
in
sub
loop
push
pop
in
adc
sub
jne
pop
pop
bound
push
sbb
clc
push
pop
sbb
add
pop
dec
mov
push
test
mov
popf
movsb
cld
bound
jle
and
mov
pop
sub
inc
cs
inc
push
sub
pop
xchg
adc
bound
inc
movl
fimull
adc
fldz
and
fwait
pop
roll
and
cmp
and
sub
pop
xor
cmp
xor
fildl
cmp
jmp
das
sarb
mov
testb
inc
cmpsb
add
andl
aam
les
inc
cmp
adc
push
push
push
orb
push
fcmovb
lcall
ret
shlb
pop
fmuls
mov
js
in
add
sub
sbb
fsubs
mov
jnp
or
xor
adc
je
push
xchg
pop
fwait
pop
jne
or
or
mov
sbb
and
or
or
jg
jle
push
popa
mov
nop
cld
jbe
mov
cmp
jl
push
cmp
push
cmp
jle
cmp
mov
jle
cmp
cmp
cmp
mov
mov
cld
inc
add
push
add
inc
jmp
outsb
push
movw
or
or
mov
xchg
lahf
clc
iret
mov
dec
fwait
inc
or
fs
pop
idiv
imul
call
pop
xor
xor
xor
mov
adc
mov
jns
lret
xor
inc
lock
das
addb
add
cmp
push
cld
outsb
push
push
mov
xor
sbb
ret
dec
mov
dec
and
dec
fists
sub
fwait
sub
jnp
add
dec
movsl
or
adc
and
adc
xchg
pushf
push
add
orb
mov
inc
sub
and
adc
cmp
ret
push
sbb
dec
outsb
mov
andl
in
pop
add
and
sub
pop
add
leave
orb
cmp
and
pop
adc
cmp
jo
mov
mov
add
xor
shlb
mov
inc
sahf
xchg
aam
in
add
loopne
and
lea
mov
rclb
stos
nop
lods
xchg
add
add
enter
mov
pop
mov
adc
add
addr16
adcb
mov
xchg
add
push
and
data16
push
sbb
xchg
adc
shr
adc
or
inc
sbb
in
mov
sbb
repz
stos
jo
sbb
add
nop
or
mov
jmp
js
or
stos
xorb
and
sbb
addr16
fildl
sbbb
inc
popa
shrl
inc
or
mov
mov
sbb
or
lods
xor
shll
sbb
daa
xlat
dec
and
sub
popa
mov
ficoml
enter
sbb
imul
sbb
stc
add
and
pop
pushf
adc
imul
cmp
sub
or
add
adcl
ljmp
xor
adc
and
adc
push
cmp
in
push
sbbb
std
cmp
dec
sub
fld
sub
push
leave
and
movsb
push
add
add
orb
mov
popf
adc
add
adc
or
cwtl
dec
adc
pop
leave
adc
and
mov
pop
add
adc
pop
add
or
add
hlt
inc
or
adc
test
mov
xchg
sbb
dec
test
loopne
push
inc
push
shrl
lea
add
in
dec
insb
pop
mov
and
or
add
pop
push
in
lret
mov
jo
adc
loope
mov
pop
fwait
add
mov
mov
xor
mov
xchg
shll
adc
push
mov
and
jo
pusha
mov
out
adc
inc
add
push
icebp
or
enter
add
add
sub
aaa
rolb
inc
sbb
rorb
out
xor
mov
adc
fs
aad
test
and
jecxz
outsb
adc
add
cmpsl
in
cmpsb
hlt
add
cmpsb
mov
add
test
or
add
shrb
aaa
lock
or
and
scas
or
push
fistl
sub
fs
or
xchg
and
and
jb
xchg
jbe
pminsw
jne
xor
icebp
sbb
mov
mov
mov
inc
sbb
sbb
ret
out
cli
push
addr16
rolb
inc
and
outsb
cwtl
test
inc
jbe
and
and
jbe
and
mov
lods
jbe
add
in
shrb
into
mov
adc
stos
xor
sbb
lock
clc
lret
sbb
push
pop
les
or
or
insb
pop
sbb
push
popa
xchg
jne
sbb
push
insl
xor
mov
rol
popa
xchg
add
lcall
fstps
or
pop
push
add
xlat
cmp
dec
lock
fildl
fildl
dec
push
xor
fs
dec
inc
sbb
mov
pusha
mov
mov
pusha
ja
and
cmp
add
and
xlat
add
pushf
adc
iret
jae
pop
pop
xor
dec
pop
mov
cmp
jg
adc
pop
lods
add
or
or
push
imul
mov
or
mov
xchg
add
jmp
scas
subb
push
pop
jno
mov
pop
or
out
lea
and
push
je,pt
cmp
jle
cli
dec
shlb
ffreep
jecxz
add
adc
xor
inc
add
inc
dec
jl
push
pop
loop
xchg
pushl
xchg
cmp
push
inc
dec
cmpsl
jle
or
xchg
inc
or
xchg
inc
inc
push
adc
fisubl
sbb
push
xor
in
xorb
or
out
repnz
and
or
add
ja
mov
sub
jo
xchg
outsb
nop
sub
xchg
push
call
xchg
add
inc
push
sbb
loopne
les
nop
in
loope
add
pop
push
hlt
ds
push
push
fldl
push
sbb
inc
mov
sbb
and
xor
fstpl
pop
jbe
insl
movsl
test
or
addr16
jnp
xchg
add
and
loope
fsubrp
pop
pop
cmpl
into
in
sub
pop
sbb
repnz
sbb
fs
in
mov
rolb
or
clc
pop
cmp
dec
loop
lods
movl
rcrb
in
mov
mov
dec
mov
inc
jmp
sbb
shlb
scas
sub
or
ficoml
adc
cmpsl
ffreep
jbe
shll
fld
adc
dec
leave
mov
jge
sahf
adc
je
push
cmpb
into
test
push
or
dec
add
call
or
cmp
mov
jbe
cmp
xor
inc
iret
lods
adc
sub
jnp
ja
cmp
es
push
mov
push
insb
insb
adc
and
inc
pop
mov
movl
shlb
sbb
lahf
xchg
sahf
sub
push
ret
xchg
push
xor
jnp
popf
or
mov
mov
lcall
enter
push
inc
cli
mov
mov
lock
sbb
leave
shld
add
add
dec
ja
jb
ja
lea
push
push
icebp
push
cs
je
xor
or
or
bts
or
push
mov
push
add
push
clc
in
rcrl
or
or
cli
mov
push
lods
arpl
test
add
pop
pop
cmp
xchg
mov
adc
and
mov
test
js
insb
mov
pushf
pop
arpl
ja
xorb
ret
loop
mov
lea
push
adc
sub
imul
nop
jle
jle
inc
cmpw
imull
jne
pop
adc
inc
inc
cld
fidivl
mov
push
daa
jmp
push
push
jl
outsl
mov
jns
aas
push
xor
mov
sti
jg
stc
std
mov
or
push
mov
out
push
or
push
push
add
loopne
and
add
xor
or
xchg
or
pop
sub
add
or
add
rolb
adc
in
jno
and
and
sbb
lods
or
in
jle
add
lods
out
xor
inc
cmp
push
les
jne
loope
pop
jnp
dec
add
xor
xor
je
ss
repnz
ret
nop
iret
in
lds
xchg
inc
daa
jns
cwtl
lods
xchg
push
or
shrl
lock
sbb
cmp
in
or
xchg
rcr
dec
ljmp
loopne
rcl
jae
fcmovnbe
cmp
std
xlat
test
inc
mov
xor
mov
xor
outsl
or
dec
aaa
xchg
push
adc
or
aad
addl
orl
pop
xchg
or
test
out
jno
or
pop
je
lret
xchg
and
stos
cmp
add
flds
loopne
adc
loope
lods
nop
dec
shlb
push
test
mov
and
imul
fstpl
cmp
pop
ret
xchg
or
adc
xchg
outsl
data16
or
movsb
dec
ljmp
inc
popf
mov
fisubs
or
pusha
dec
aaa
fwait
and
inc
repnz
mov
int
mov
pop
xchg
push
leave
add
and
ja
push
or
pop
les
or
or
push
adc
popa
and
ljmp
shll
pop
lahf
repnz
cmpsl
add
ss
add
enter
adc
add
add
cwtl
add
fs
decl
aas
cs
push
cwtl
or
push
sbb
xchg
dec
cmp
sbb
movsl
push
adc
sbb
mov
mov
dec
xchg
cltd
loopne
les
add
dec
pop
icebp
push
movsb
cmp
inc
inc
out
test
xchg
jl
stos
pop
popa
inc
ljmp
mov
fldenv
push
jno
shlb
jmp
mov
es
popf
insb
xor
jge
ljmp
jne
shlb
mov
faddl
fs
add
call
or
int3
and
je
add
sbb
cli
cmpsb
sbb
dec
jne
xchg
mov
push
jl
push
or
push
sbb
mov
jg
out
push
lods
out
sub
jns
scas
fdivr
les
or
push
cli
lret
test
add
push
es
shrb
add
ds
test
fs
mov
hlt
push
iret
push
jb
jo
inc
push
jb
mov
cmp
nop
sub
mov
repnz
inc
loopne
jl
rcrb
push
pop
push
pop
cmp
xor
push
push
inc
push
mov
and
and
les
jnp
loopne
jle
adc
and
and
nop
inc
push
jns
jg
push
inc
push
cmp
je
enter
icebp
push
push
iret
imul
xlat
mov
dec
bound
arpl
iret
repz
orl
mov
lcall
and
aaa
inc
dec
push
pop
jns
out
imul
sahf
out
movsl
scas
mov
sahf
int
loope
cmc
call
xchg
jl
or
aaa
call
cltd
push
in
pusha
rcl
loopne
mov
mov
mov
addr16
divl
dec
stos
popf
nop
adc
adc
test
nop
je
mov
add
lea
cmpsb
mull
rol
jno
arpl
cmp
cmp
movsb
movsl
addb
xchg
test
mov
add
fisttpl
shl
push
in
inc
mov
push
xchg
aam
mov
xor
leave
std
add
out
fcompl
mov
push
test
add
fmull
jmp
mov
pop
faddl
or
fisttps
xchg
imul
push
or
arpl
adc
filds
dec
test
dec
adc
adc
aas
addb
sbb
jl
and
les
inc
ja
clc
jnp
xor
push
cmpb
jge
cmp
dec
and
dec
jmp
out
add
shlb
sub
mov
jne
inc
cmpsl
jg
lcall
rorb
inc
add
shl
sub
or
hlt
ja
mov
dec
shlb
mov
lahf
xor
adc
pop
or
xchg
lret
popa
dec
dec
jmp
test
sub
adc
shrb
pop
xchg
cs
bound
and
lcall
sub
or
mov
mov
or
aaa
ss
adc
sub
fiaddl
add
adc
mov
cltd
sbb
and
test
pop
push
adc
lods
dec
pop
fisttpll
sub
inc
push
or
movsb
popa
or
add
popf
shrb
xchg
mov
cmc
push
inc
pop
adcb
out
and
les
pop
inc
rol
fwait
sbb
call
pop
rolb
cmp
add
lea
insl
pop
shlb
add
mov
bound
and
and
dec
and
mov
adc
adc
mov
mov
jl
icebp
push
test
jmp
aad
jnp
dec
imul
test
sub
aaa
ss
lods
xor
fwait
cmpsb
sub
mov
mov
nop
imulb
push
and
cmp
jne
imulb
nop
push
cs
push
pop
xchg
or
adc
adc
jp
sub
enter
adc
xor
push
cltd
xchg
mov
jle
icebp
xor
es
and
mov
xor
sbb
dec
lcall
dec
lcall
dec
lcall
dec
lcall
ss
sbb
add
popa
mov
push
pop
popf
mov
std
int3
jl
mov
hlt
stos
mov
test
into
xchg
add
orl
cmp
cmp
orb
movsb
inc
mov
mov
sbb
outsl
mov
pop
dec
mov
pop
mov
mov
inc
or
push
pop
ret
in
xchg
and
test
jae
add
xor
pop
decb
loopne
rolb
imul
mov
sbb
gs
add
fs
stos
ror
sbb
in
push
cltd
sbb
and
mov
mov
or
dec
jns
sbb
js
xchg
mov
and
sub
sbbl
and
es
test
test
nop
jge
or
mov
xchg
inc
andl
pop
fbstp
shl
dec
xchg
push
mov
sbb
push
cs
push
ficomps
cmp
into
pushf
xchg
or
pop
jle
movsb
loop
xchg
cld
addl
mov
inc
adc
aaa
rorl
imul
aaa
fmul
adc
xchg
pop
cmp
int3
lods
addr16
xchg
cmp
mov
sub
xor
movsb
jo
jp
aas
push
adc
inc
test
and
cmpsl
push
aas
and
ds
bound
in
aaa
loope
orl
dec
enter
ss
push
cmp
nop
adc
push
sbb
in
push
inc
or
pop
sbb
ret
inc
mov
in
pop
rclb
incl
cmp
pop
lea
adc
add
jno
pusha
and
lahf
xor
loopne
arpl
adc
xorl
adc
mov
pop
fstpt
jmp
push
sub
ljmp
stos
mov
bound
lea
popf
pop
dec
pop
movsb
mov
add
lea
add
and
pop
dec
cmp
cmp
add
cwtl
xorl
push
sbb
push
mov
sbb
fidivrs
sub
sbb
and
pop
rcrb
lret
enter
add
test
jne
or
push
push
mov
sar
les
mov
imul
add
pop
fmull
pop
sbb
mov
sbb
mov
xchg
fiaddl
mov
mov
or
hlt
and
les
xchg
syscall
push
push
fwait
cmp
movsl
fwait
daa
mov
dec
push
and
or
mov
push
in
sbb
insl
sub
rorb
pop
ficoml
and
mov
cmp
sbb
in
push
pop
cmp
mov
sahf
jmp
shlb
xor
fmulp
or
lea
out
cmpsl
pop
nop
push
call
out
pushf
rclb
nop
out
out
movsb
adc
adc
xor
and
lahf
push
xchg
jns
add
es
push
jo
cltd
adc
inc
inc
outsb
pop
inc
push
aam
loopne
inc
pop
aad
rclb
imul
fcomps
and
ds
cmc
int
not
dec
enter
fsubrs
sbb
adc
enter
or
push
sub
or
fwait
or
lahf
mov
andb
mov
clc
test
and
adc
inc
dec
mov
push
movsb
shrl
sub
add
test
add
push
add
js
adc
pop
rcrb
xchg
inc
stos
int3
cwtl
and
leave
je
cmp
and
sbb
pop
jb
mov
test
imul
lcall
cltd
nop
fs
pop
popa
xchg
mov
pop
adc
mov
and
xor
int3
ja
cwtl
rorl
ljmp
mov
cmp
hlt
je
xor
and
cltd
inc
xor
cs
xor
push
sbb
subb
add
orl
cmpsl
cltd
pushf
inc
push
in
dec
or
loopne
push
jo
and
dec
cmp
jbe
nop
sub
lret
in
roll
cmp
pop
sub
jp
or
mov
jnp
xor
sbbb
test
lods
add
pop
mov
or
jne
mov
scas
add
jbe
add
dec
aad
xchg
loope
in
aam
push
insl
loope
push
or
sbb
adc
cs
or
adcl
mov
das
mov
push
mov
mov
jge
dec
xor
js
or
dec
fsubr
psllw
jnp
lods
xor
pop
push
mov
or
fsubl
adc
lods
test
push
xor
shlb
adc
ret
sbb
mov
nop
sub
mov
xor
inc
loope
js
mov
cmp
fs
adc
mov
out
dec
xlat
shrl
inc
pop
and
lods
imul
inc
rcll
dec
inc
jmp
ret
rcrl
aam
sbb
mov
outsb
pop
sbb
jbe
sub
xor
insl
inc
sbb
pusha
mov
cmc
ss
pushl
repnz
mov
pop
dec
push
inc
adc
cmpsl
xor
mov
aam
test
pop
dec
sub
pop
and
fwait
and
mov
sbb
and
insl
mov
sbb
das
and
and
test
push
jl
and
stos
sub
push
pop
es
neg
lea
popa
leave
fs
sub
mov
subb
push
or
lods
loopne
test
pop
insb
sub
cmp
sub
sub
pop
jnp
pop
loopne,pn
movsb
push
lret
lea
mov
test
daa
dec
dec
addb
pop
popa
adc
je
dec
lock
mov
mov
clc
pop
inc
push
cs
push
rcl
xor
out
push
loop
dec
popf
das
out
or
shl
inc
cs
dec
fwait
nop
movsb
sub
xor
rcrb
int
lods
sub
rorb
daa
xor
int
test
push
and
and
int
xor
and
dec
xor
test
mov
pop
cwtl
push
nop
dec
dec
xor
sbb
xchg
add
movsb
cltd
nop
sbb
mov
imul
adcb
adc
adc
fdiv
fsubl
mov
or
enter
orl
pop
les
pusha
mov
dec
out
pop
sbb
cs
push
or
dec
test
lcall
fcoms
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
divb
pop
jecxz
repnz
movsb
add
pop
sub
and
orl
push
subb
pop
rorl
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
lahf
add
jno
stos
stos
andb
xor
das
test
testb
aam
ja
fldcw
clc
pop
push
xchg
push
cs
sub
lret
incl
je
dec
cmp
inc
or
cmp
add
add
push
and
dec
test
je
push
jp
or
clc
cmp
mov
test
int
lea
frstor
stos
std
scas
insb
ret
repnz
push
cmp
insb
mov
push
and
pop
cmp
sub
aad
push
popf
ljmp
dec
adc
jp
pop
or
int
jbe
scas
fnsave
lods
imul
add
rorl
jle
sarb
pop
cmp
jbe
mov
mov
push
jmp
nop
movsl
aam
jmp
std
filds
jmp
dec
mov
aad
loope
push
pop
pop
addr16
cmp
mov
cmp
je
inc
xor
outsl
lock
repnz
add
jle
jg
out
dec
push
sbb
mov
cmp
inc
je
push
push
rcll
sbb
loope
push
nop
xchg
xchg
nop
jbe
xorb
inc
jb,pt
mov
jle
adcb
mov
and
addl
jb
adc
mov
divb
leave
sub
aam
pop
cmp
fcomip
pop
fs
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
cmpb
int3
ret
jl
dec
sub
ds
xor
inc
mov
jp
push
push
cmpb
and
pusha
jnp
clc
repz
jae
inc
adc
cmp
bound
and
je
mov
add
add
jb
cmp
pop
pop
js
scas
adc
inc
lods
mov
sub
inc
fnstsw
xchg
sub
popa
adc
and
xchg
add
roll
sbb
fcmovu
loope
xchg
jne
or
xlat
aad
dec
or
js
or
ds
imul
mov
push
out
outsl
imul
jmp
rorl
mov
jbe
lock
in
in
ds
adc
xchg
lret
mov
mov
and
push
sbb
add
pushl
inc
jae
xchg
pop
outsl
jl
push
push
sbb
cmpsb
sub
dec
sub
cmp
addr16
inc
test
sahf
scas
test
sbb
pop
or
jmp
mov
imul
push
int
pushl
ds
jl
or
sar
dec
je
cmp
or
and
mov
movb
movsbl
shr
jg
dec
bound
add
pop
dec
add
nop
inc
mov
leave
jne
pop
xchg
mov
xchg
bound
jo
pop
mov
push
xchg
adc
adc
cmp
loop
xor
mov
push
mov
cmp
orl
push
andl
push
sbb
or
add
rcll
push
rorb
add
sbb
in
add
dec
mov
sti
add
enter
pop
cmc
dec
sub
sti
ret
loopne
jae
lock
and
inc
mov
xchg
jg
cmp
je
dec
and
add
and
jmp
in
push
add
insb
xchg
addr16
xor
adcl
adc
in
inc
or
or
pop
sub
adc
icebp
pop
cmp
pop
pusha
push
insl
gs
push
imul
cmp
mov
push
or
cmp
dec
and
outsl
loop
pop
add
mov
pop
add
and
sbb
jp
pusha
adc
in
xor
mov
sub
mov
push
pminsw
mov
xlat
xlat
test
dec
sbb
ficomps
testb
fstpt
inc
push
aaa
sub
mov
or
pushf
xchg
adc
ret
cltd
int3
push
inc
pop
dec
add
add
popa
xchg
add
xchg
mov
mov
nop
sbb
dec
jmp
mov
xchg
jns
es
xchg
ret
pop
pop
mov
sub
mov
cmp
xchg
or
pusha
cmp
sbb
dec
into
inc
mov
push
lock
loopne
jmp
shlb
in
and
orl
or
dec
daa
subl
xor
rorb
push
adc
mov
push
cmp
je
sub
push
std
adc
mov
loope
out
push
xchg
xchg
inc
cmp
popa
mov
push
call
or
push
fadds
or
inc
leave
pop
in
mov
cwtl
sub
adc
popa
jmp
testb
inc
loopne
ror
sbb
out
rol
pop
adc
add
loopne
shrl
xchg
add
xor
sub
dec
sub
add
sbb
xchg
and
mov
pop
mov
cmp
sbb
cmp
outsl
xchg
ret
sub
dec
js
push
add
mov
push
push
testb
sbb
lcall
or
in
fsts
xor
jg
lock
sub
flds
mov
aad
mov
add
arpl
push
sub
sbb
repz
sbb
inc
xor
push
mov
pushf
sbb
mov
pop
dec
cmp
aaa
sub
add
pusha
xor
inc
add
cmp
insl
cmp
std
cmp
mov
leave
xchg
mov
sarb
mov
cmp
lock
sub
inc
or
fistps
mov
mov
insb
sbbl
jle
imulb
dec
sbb
lods
rcll
mov
jl
or
pop
rolb
test
pop
fdivs
das
cltd
pusha
gs
xor
sub
fcmovb
adc
repz
or
pop
inc
movsl
sbb
push
inc
sbb
sarl
jno
inc
loopne
test
stos
add
or
divb
movsl
jnp
xchg
add
inc
call
xchg
add
jp
rcl
aad
lods
aam
lea
or
xchg
xchg
xlat
xor
int3
cwtl
cmpxchg
dec
mov
dec
jb
mov
mov
push
inc
lahf
sub
imul
cmpb
mov
mov
scas
cmp
sbb
sbb
cmp
cwtl
loope
or
xor
or
xor
push
jmp
add
out
push
dec
rol
test
outsb
add
cmc
mov
cmp
cmpsl
je
stos
mov
cli
leave
mov
mov
push
dec
adcb
pop
cmp
rcll
sub
popa
and
xor
dec
sarl
cmp
inc
push
cmp
les
mov
mov
je
mov
pop
scas
dec
sbb
jmp
dec
enter
les
inc
int
sbb
and
in
add
add
rcll
sub
nop
sbb
push
jle
dec
dec
and
test
or
mov
test
adc
push
dec
adc
push
inc
arpl
jge
mov
xor
jne
je
inc
or
sarb
test
js
adc
jne
add
sub
adcl
sbb
iret
test
adc
mov
inc
cwtl
addb
adc
ret
mov
push
xlat
je
pop
sub
ficoms
cmpsb
movsb
jb
push
enter
outsl
inc
mov
xor
xor
inc
add
xchg
cmp
cmpsl
sbb
std
fsubl
adc
lea
mov
dec
mov
je
lods
inc
jne
imul
cmp
rcr
add
mov
and
out
pop
shl
sub
ret
xor
or
ja
addb
call
ds
mov
jnp
ds
sbb
and
or
scas
push
rcrl
mov
push
xor
inc
fbstp
mov
das
je
jge
sub
mov
lea
fdivrs
jns
jnp
das
adc
es
rcrb
jle
stos
cs
in
cmp
test
jne
push
jo
movsl
es
or
mov
movsl
jno
test
or
dec
mov
cmp
sbb
mov
dec
enter
add
dec
push
and
fistl
nop
xchg
cmpsb
and
cmpl
sub
fcmovnbe
sub
push
sbbb
sbb
mov
xor
scas
sbb
ss
fmuls
out
mov
add
insb
lods
lret
xor
loop
decl
cli
test
push
lret
jp
or
cmp
dec
mov
rclb
add
mov
jbe
mov
add
mov
mov
aaa
mov
add
push
ljmp
insb
pusha
cld
sub
jle
inc
sbb
ficompl
inc
add
mov
rolb
push
mov
pop
pusha
push
js
lds
mov
cmp
enter
movsb
movsl
outsb
jbe
fldl
adc
jle
roll
in
data16
cmp
cmp
inc
add
out
jne
daa
bnd
adc
iret
iret
or
jne
or
jne
or
and
clc
push
mov
mov
dec
push
adc
pop
mov
test
and
jg
pop
push
lea
movl
dec
fwait
inc
dec
mov
test
aaa
mov
push
jl
mov
lea
fstpl
lea
cmp
ja
xor
lcall
and
movsb
in
inc
mov
ss
popa
mov
sbb
xchg
in
fstl
fisttps
fsubl
xchg
int
xchg
mov
es
push
into
or
cmc
int3
rcll
inc
xor
and
add
faddl
cmp
adc
in
jno
add
add
sub
fstl
mov
idivl
jmp
fcom
loopne
shlb
adc
popa
int
jb
adc
mov
xor
repnz
mov
inc
movb
mov
ss
popa
dec
ret
cmp
imul
or
add
or
xchg
sbb
cmpsl
push
xchg
insl
mov
dec
js
and
jmp
jmp
orl
sahf
ret
pusha
pusha
cmp
test
enter
mov
fs
or
pushf
push
jne
sahf
sub
xor
and
fs
pushl
pop
add
icebp
inc
dec
jg
mov
fisubrs
xchg
inc
and
pop
push
mov
inc
push
jg
push
adc
es
mov
out
push
clc
clc
or
add
rcrb
mov
rorb
int3
mov
ror
inc
subl
cltd
xor
xchg
movsb
xor
mov
in
add
add
and
dec
and
cmp
jns
ret
inc
roll
fs
sub
adcl
divl
sub
outsb
dec
and
rcrb
in
insl
fmuls
and
cmp
mov
or
lret
rcrl
jb
xchg
leave
mov
jbe
mov
push
adc
jnp
push
aad
nop
xchg
add
push
lds
mov
negl
xchg
mov
into
pop
clc
and
in
and
mov
add
cmp
dec
or
ret
fisttpll
repnz
mov
mov
add
out
mov
sahf
push
or
dec
das
daa
sbb
add
divb
int3
imul
push
dec
fnstsw
xchg
push
test
xchg
pop
adc
adc
je
and
cmp
fs
adc
js
mov
lds
xchg
xchg
inc
adc
es
sub
pop
xor
pop
or
dec
es
push
adc
dec
xor
xor
push
sbb
or
out
sub
or
mov
push
jne
sti
mov
inc
leave
push
inc
arpl
push
and
lea
or
inc
and
inc
mov
xchg
xor
mov
cmp
ds
nop
mov
jae
leave
test
add
je
and
pop
loope
test
mov
push
outsl
sub
or
mov
insb
and
imul
add
lods
sbb
sbb
out
dec
add
ret
ret
mov
aam
mov
push
adc
pop
jo
adc
or
or
push
add
mov
xor
and
js
jg
push
test
push
xchg
sahf
inc
sbb
adc
rcl
xchg
inc
sbb
fcompl
test
mov
adc
dec
mov
xchg
lock
jmp
pusha
adc
jge
sahf
in
test
leave
mov
add
push
hlt
sub
push
sub
sbb
fmull
cmp
mov
add
add
js
negb
sbb
inc
pop
test
les
add
and
pusha
pop
jl
and
stos
jne
jno
in
movsl
adc
leave
call
adc
and
ljmp
inc
lahf
cmpl
cld
shl
add
xor
lea
jge
jecxz
push
je
mov
add
dec
pop
inc
inc
push
mov
fldenv
sbb
mov
inc
je
leave
mov
and
mov
push
cwtl
shll
aam
nop
sar
fisubl
add
dec
cmc
stc
push
shlb
xchg
xorl
fisttps
pop
ja
xorl
test
or
or
mov
shlb
push
inc
addb
testl
je
inc
les
outsb
fcoml
addr16
loopne
mov
cmp
lret
mov
decl
insb
es
jne
mov
jmp
sub
and
xor
xor
mov
gs
adc
pusha
jne
push
xor
bound
xor
mov
adc
lret
adc
dec
ret
pusha
cmp
cltd
daa
fdiv
sub
insl
test
or
aam
sub
sbb
or
loopne
lret
dec
rcr
xor
cmp
cld
xchg
pop
pop
push
imul
and
or
clc
jle
add
xlat
rorb
mov
cmp
and
lea
test
pop
ret
shrb
scas
push
inc
pop
or
jecxz
add
loope
sub
mov
pop
and
inc
xchg
test
rcrl
xchg
pop
jmp
out
push
cwtl
jp
ds
xor
adc
fcmovu
add
add
inc
and
dec
cmpb
fdivrl
xchg
fcom
es
cwtl
shlb
and
add
sbb
adc
lahf
or
fcom
repz
push
fisttps
ficompl
outsl
movsb
mov
jp
aas
sub
leave
cmp
jecxz
inc
inc
ljmp
jge
mov
sub
adc
aam
push
push
pop
add
mov
push
xor
sbb
lods
bound
push
mov
fnsave
jp
mov
imul
hlt
pop
es
adc
mov
cs
adc
movsl
add
xchg
js
dec
sub
sub
mov
sub
leave
subb
push
or
or
or
inc
hlt
aas
mul
fldl
xchg
add
and
ljmp
jl
lret
addr16
and
test
jl
ret
adc
movsl
ja
pop
xchg
or
mov
incb
xor
cmp
je
or
inc
xchg
in
jb
rolb
sbb
ret
mov
movb
iret
call
ret
xor
hlt
jae
movsbl
outsb
clc
or
sbb
inc
mov
std
dec
sarl
rorb
add
sbb
sbb
bswap
push
das
jmp
call
inc
incl
ret
jmp
shll
jmp
push
or
add
inc
cmp
jl
cmpl
inc
call
inc
cltd
and
add
sar
add
test
clc
mov
pop
xor
ss
cmp
jecxz
lahf
lods
add
add
or
enter
adc
or
jne
add
or
pop
sahf
lret
test
push
rcl
les
push
add
sbb
push
pop
mov
cmpb
sub
jbe
in
hlt
pop
jo
shld
lea
jne
push
pop
inc
adc
roll
sub
cwtl
idivb
mov
push
cmp
jl
sub
outsb
pop
pop
jle
insb
aas
mov
je
rorb
pushf
push
lds
xchg
cli
js
push
mov
add
fildl
aas
arpl
ret
pop
cmp
pop
aam
repnz
imul
lahf
rolb
lahf
push
ret
or
fsts
adc
rclb
dec
leave
xchg
icebp
pop
inc
test
add
cs
adc
xor
stos
shll
pop
ficompl
ss
mov
pop
cmpsl
push
xor
in
push
xor
mov
adc
xor
pop
in
dec
leave
sbb
pop
push
cmp
ret
mov
sub
and
and
add
sbb
add
mov
cld
ret
jnp
sbb
jecxz
add
adc
pop
push
jmp
test
push
pushf
sub
mov
pop
in
push
insl
jp
enter
mov
pop
outsb
dec
fidivrs
dec
pop
add
push
jmp
push
add
dec
dec
in
push
push
cwtl
sbb
xor
add
movsb
sbb
add
addb
ret
xchg
mov
cs
mov
dec
js
inc
lds
stos
cli
cmp
movl
int3
pop
out
outsl
mov
ss
jns
lret
add
add
add
aas
in
push
arpl
and
stc
dec
xor
sub
and
mov
lea
movsb
pop
in
xor
scas
or
lret
roll
fistps
je
push
pushl
adc
fsubr
rclb
insb
jecxz
aas
leave
pop
dec
out
int
fbstp
popf
fcomi
and
dec
mov
sbb
xorb
push
cmp
mov
dec
push
dec
cmpb
les
test
dec
or
js
push
call
rcl
jbe
fisttpll
inc
ret
add
mov
cmp
jecxz
je
pop
jp
mov
add
dec
and
dec
int3
add
aad
mov
das
push
daa
mov
add
mov
fisubl
inc
mov
mov
inc
test
dec
repz
roll
je
dec
insb
adc
pop
jb
mov
cmp
mov
fisubl
inc
push
push
pop
aam
scas
dec
jae
inc
mov
mov
xorb
push
sbb
mov
fs
push
jmp
mov
daa
adc
add
pop
outsb
push
xlat
push
and
dec
lahf
push
cmp
pop
shlb
pop
mov
jae
aad
loope
cmp
xchg
lret
dec
int3
int3
add
mov
pop
mov
cltd
ljmp
sti
lcall
daa
jo
jg
sub
fldenv
mov
add
je
dec
fsubr
add
lods
cmpsl
call
jl
js
out
das
addb
mov
or
es
cmp
test
jo
and
in
pop
rcll
nop
add
insl
mov
push
xchg
divl
push
inc
xor
aam
add
lods
jle
rclb
loopne
or
add
cli
mov
test
sbb
bound
fistpll
clc
jl
cwtl
loopne
fdivrl
mov
jge
sub
ror
add
sbb
je
cmp
daa
movsbl
jo
mov
call
fdivrl
mov
add
mov
adc
insb
lock
out
test
sbb
lret
movb
bound
push
cmpsl
add
enter
add
add
and
dec
cmp
mov
mov
jp
popf
and
cmp
sbb
and
mov
jmp
add
sub
sub
cmc
dec
mov
fstps
outsb
xor
add
mov
loope
inc
aas
cld
les
cld
push
inc
lahf
push
xchg
xor
iret
inc
cmp
cmp
or
xchg
adc
adc
inc
and
rcrb
inc
int
aad
in
adc
pusha
xor
inc
movl
mov
lcall
push
and
pop
adc
jg
into
je
bound
jnp
cltd
pushl
test
mov
mov
clc
pop
cmpb
mov
sub
and
ret
push
sub
jno
incb
cmp
add
push
mov
dec
lods
dec
mov
mov
xchg
outsl
jmp
sldt
movzbl
mov
inc
mov
mov
cmp
mov
scas
dec
clc
addl
int
mov
add
jle
sub
push
icebp
or
sbb
pop
jae
xchg
add
push
mov
lods
add
push
mov
nop
and
push
nop
add
or
cld
push
leave
push
inc
adc
mov
inc
call
jne
pop
das
or
jecxz
mov
mov
fwait
aam
or
push
les
into
in
pop
mov
mov
inc
data16
insb
into
push
cmp
shlb
add
xor
jb
cwtl
push
mov
test
dec
cs
add
in
dec
push
mov
inc
jecxz
adc
push
les
adc
frstor
push
mov
fcmovb
insl
sahf
mov
cmp
push
enter
std
and
fbstp
scas
mov
es
mov
in
popa
sub
and
inc
xlat
mov
adc
xor
inc
pop
mov
test
lock
mov
movsb
xor
dec
jl
pop
mov
jae
sub
inc
pop
and
adc
add
cmp
rorl
and
int3
fsubs
adc
call
popf
lret
push
out
movsl
ljmp
je
in
loop
rclb
mov
sbb
scas
mov
sbb
or
iret
xor
je
das
test
jb
mov
or
stc
sub
outsl
lock
lret
lea
cmp
jbe
cmp
jbe
mov
sbb
lods
dec
push
and
mov
jle
add
lods
xor
mov
mov
xchg
and
dec
add
roll
lret
add
pop
xchg
push
test
or
lea
jle
lock
icebp
cmp
push
testl
fsts
fwait
jae
call
push
push
push
cmc
dec
push
iret
cmp
in
and
adc
test
and
mov
sbb
test
push
addr16
pop
ret
and
enter
or
mov
fsts
lods
test
mov
mov
sahf
push
fcoms
mov
mov
clc
xchg
je
loopne
adc
lea
mov
xchg
push
push
xchg
dec
repz
pushf
int
mov
cli
mov
mov
sub
or
loopne
ffree
add
in
mov
andb
shl
mov
mov
and
jae
sbb
push
mov
mov
aas
jb
mov
sub
add
xor
adc
add
and
push
cmp
push
or
adc
inc
xchg
cmpsb
sbb
adc
mov
push
xchg
aam
cmp
add
mov
jp
add
insb
mov
and
aad
and
mov
outsl
cmc
pop
pop
and
jo
fisttps
out
test
jmp
push
stos
rclb
inc
enter
cmp
add
cmp
vmptrst
jle
xor
xchg
mov
adc
or
dec
std
in
sub
lods
add
fstl
nop
mov
mov
popf
mov
add
enter
adc
mov
adc
loopne
mov
outsl
dec
sti
incb
add
lods
xor
mov
sbb
movsb
ret
shrb
stos
jle
add
rolb
inc
fsubrs
add
push
aam
mov
xchg
shlb
adc
out
add
roll
jbe
xchg
adc
xor
iret
sbb
or
out
fmull
pop
fs
jae
mov
je
jmp
movswl
mov
inc
outsl
cmp
add
push
cmp
mov
or
lret
maxps
mov
mov
sbb
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
push
ljmp
cmp
adc
xchg
dec
pop
mov
cmp
daa
add
jbe
pop
imul
jmp
cltd
add
sbb
push
insb
or
sub
add
les
add
jo
fisttpll
or
push
pop
je
lds
ret
repnz
mov
add
lahf
mov
add
popf
lea
cmc
fcmovb
lea
cli
mov
mov
mov
or
push
scas
sub
insl
rorl
xchg
outsb
out
lcall
je
daa
xchg
pop
xchg
or
imull
out
int3
or
add
push
pop
dec
adc
test
gs
lods
pop
mov
inc
loopne
push
push
movsb
je
mov
incb
js
mov
call
mov
and
test
jmp
push
adc
test
or
call
iret
xor
xor
push
push
adc
mov
pop
mov
push
lods
sbb
lahf
imul
dec
jo
scas
lods
push
pushl
rclb
or
inc
pushl
jne
cmp
jbe
add
mov
jmp
push
pop
push
sbb
jmp
fldcw
ja
cmp
adc
lret
ds
lcall
cmp
sub
and
clc
bound
xor
mov
jne
mov
orb
nop
gs
imul
push
pop
mov
leave
sub
push
xchg
cmpsb
out
push
sarl
or
cld
rclb
lret
call
cmp
xchg
mov
cmp
int
jbe
sbb
adc
in
push
call
cmp
sbb
and
jmp
add
cli
call
mov
inc
rcrb
js
rcrl
xchg
enter
xchg
add
add
jae
push
jp
xor
or
or
ficompl
dec
or
adc
aas
jmp
mov
xchg
adc
mov
es
jo
adc
nop
cmp
repz
cltd
pop
or
in
jmp
push
mov
adc
in
fiaddl
mov
xor
dec
clc
add
inc
xchg
jge
and
and
xor
mov
sbb
shll
dec
bnd
pop
sub
daa
inc
test
xor
shll
testl
jae
adc
iret
add
sbb
in
fildll
push
fiaddl
cmp
into
adc
gs
xor
insl
jns
add
mov
push
and
push
sbb
mov
cmp
aaa
push
push
adc
mov
loope
adc
mov
pop
sbb
xchg
mov
adc
lea
mov
ds
or
ret
adc
pop
and
adcl
subl
push
ffreep
xor
loope
push
jo
movsl
jae
jmp
add
and
stos
and
push
fs
ss
xor
lea
or
mov
sbb
fwait
sbbb
pop
xor
mov
add
add
pushf
mov
or
movsb
fwait
and
dec
jno
push
js
ljmp
test
pop
xchg
jge
cld
mov
push
push
sbb
adc
testl
push
out
lea
mov
or
loopne
pop
mov
or
inc
jo
add
mov
adc
imul
jne
std
adc
fidivl
stos
test
hlt
sub
and
push
mov
dec
jmp
cltd
push
dec
sbb
test
lahf
enter
mov
out
cmp
adc
sbb
jb
mov
test
imul
call
push
xchg
leave
aam
mov
inc
loope
dec
jb
and
ret
in
ret
ficoms
popa
stos
fdivrs
inc
mov
and
mov
sbb
add
ja
pusha
mov
pop
push
cmp
sub
jp
pop
and
cmpl
rcrb
and
inc
das
cs
inc
sub
lock
or
data16
sbb
arpl
aaa
mov
pusha
roll
decl
ret
int3
add
shlb
jb
xchg
mov
or
dec
sub
imul
mov
mov
js
adc
add
mov
pop
ret
fadd
and
fsubr
pop
and
jecxz
sub
xor
mov
jmp
add
push
push
jo
insb
cmp
shlb
jbe
mov
cwtl
pop
dec
mov
orb
in
outsb
mov
lea
iret
movsb
dec
sbb
lock
pop
rclb
and
or
push
push
stos
or
ds
push
xchg
or
xor
into
jmp
lock
ss
push
cmp
jb
cmp
leave
rorl
adc
sahf
cmp
aaa
popa
push
ret
cmpsb
mov
push
dec
je
add
add
add
cs
stos
or
push
inc
or
add
adc
bound
cmp
sar
adc
repnz
jmp
push
mov
jmp
add
mov
mov
mov
icebp
sti
mov
filds
or
mov
cmp
or
out
cmp
je
cmp
jne
mov
sbb
add
negl
lea
sarb
dec
xor
mov
cmpsb
push
jmp
testb
je
testl
jbe
sbb
add
inc
mov
or
stos
xchg
mov
jg
cmp
je
sub
inc
jmp
inc
and
xchg
push
xor
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
xchg
dec
sbb
imul
or
mov
adc
loopne
push
xor
push
mov
hlt
pusha
sub
push
fiaddl
push
sti
cmp
outsb
hlt
cmpb
add
mulb
pop
les
xchg
push
and
insb
lods
mov
ja
js
icebp
and
sub
cmp
xor
mov
push
jp
insb
add
inc
cld
rcrb
dec
nop
popa
mov
in
cmpl
inc
stos
loop
loopne
jne
mov
dec
inc
insl
sbb
vphaddbq
mov
popw
adcb
inc
add
jae
movl
xor
mov
jecxz
add
jmp
pushf
aas
xchg
movsl
addr16
sti
and
cmpsb
and
or
adc
fs
jne
xor
and
cmp
adc
sub
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
imul
cmpsb
sub
mov
push
and
pusha
shll
call
mov
mov
mov
cmc
lret
xchg
inc
jg
or
jge
mov
xor
and
es
mov
jle
sub
and
pop
or
jl
or
adc
ret
pusha
bound
mov
jbe
aam
cmp
jbe
and
out
add
clc
pop
arpl
pop
add
je,pn
test
adc
inc
jne
pop
xor
sub
jb
clc
add
test
cmp
push
xor
xor
lock
jg
jae
movb
inc
subb
rorb
and
icebp
push
or
pop
xchg
inc
data16
mov
inc
and
push
sbb
sbb
mov
sub
jmp
mov
push
inc
inc
popl
add
sbb
mov
pop
mov
inc
push
lcall
jbe
clc
push
cmpb
dec
pop
sahf
push
mov
rolb
jmp
popa
or
mov
fiadds
xchg
xchg
out
aam
inc
mov
push
fcom
enter
inc
leave
or
cwtl
test
adc
add
je
hlt
ljmp
jmp
out
test
push
inc
loop
sahf
mov
imul
push
jbe
inc
inc
xchg
mov
jmp
jg
pop
push
shrl
in
cmp
push
and
mov
loop
mov
cmp
cwtl
xor
jecxz
or
add
mov
sbb
loop
test
cmp
mov
mov
out
push
xchg
out
xor
data16
out
ds
pop
addb
mov
jns
pop
lea
out
xchg
sub
rolb
xor
cmp
lds
jmp
andl
adc
imul
aaa
jp
addr16
or
dec
or
adc
cmp
test
insl
iret
ret
xchg
imul
lods
inc
push
mov
movl
push
adc
dec
or
xor
jo
push
push
lahf
jbe
rol
sub
xchg
add
inc
xchg
adc
jle
push
mov
mov
mov
push
add
mov
pushf
outsb
xchg
mov
mov
push
rcrl
outsb
les
mov
pop
outsb
je
pushl
je
push
mov
push
testl
jae
and
push
cmpl
push
hlt
inc
add
cmp
int
jbe
pop
psubd
lea
inc
pop
data16
pop
imul
out
sbb
xchg
pop
push
inc
fcmovbe
pop
ja
pop
mov
jbe
mov
jge
push
gs
add
inc
inc
fwait
cmp
add
xchg
pop
pop
jle
mov
cmp
stc
cmpsl
popf
push
push
or
xor
int3
cmc
add
movsl
xchg
stos
pop
adc
xor
xchg
sbb
clc
fisubrs
push
test
dec
push
mov
inc
jmp
xor
addb
push
fs
push
into
leave
dec
adc
inc
push
nop
pop
xor
push
dec
mov
add
cmp
pop
mov
cwtl
popa
or
mov
test
clc
mov
das
and
fmull
pusha
mov
stc
push
sbb
push
or
push
inc
push
in
mov
or
push
or
add
sahf
mov
mov
push
aaa
les
icebp
orl
add
push
add
add
pop
add
push
cltd
aaa
inc
dec
cmp
ljmp
test
jp
adc
push
ret
or
sti
pusha
jb
loopne
out
pop
fmull
adc
shll
push
add
daa
sbb
cli
cmc
push
adcl
fcoml
lods
mov
mov
dec
dec
dec
add
push
and
inc
or
in
pop
es
push
ljmp
push
clc
mov
rclb
scas
lock
pop
cmp
cld
jle
push
movb
push
popf
test
cmp
add
dec
and
mov
pop
add
fwait
cmp
insb
fsubs
jg
inc
loope
fucom
subb
xchg
dec
ret
pop
or
xchg
and
in
xchg
pop
xchg
fs
popf
push
xor
push
pop
xor
adc
sbb
jl
mov
and
cmp
adc
cmp
mov
mov
fmul
mov
inc
addr16
imul
push
jp
jecxz
mov
movsb
dec
add
mov
mov
dec
xchg
jo
scas
sti
push
add
pop
cwtl
cmpl
dec
push
cmp
imul
push
push
lret
cwtl
adc
dec
gs
call
sar
pop
mov
das
dec
push
sti
sbb
js
js
test
imul
es
andl
push
add
inc
xorl
or
inc
nop
dec
rolb
add
jmp
bound
and
push
cmp
mov
add
push
inc
mov
or
ja
or
xlat
cmpsl
popf
jne
push
pop
lahf
inc
adc
cmp
mov
pop
sahf
sarl
cmp
in
pop
mov
push
xchg
dec
adcl
cmp
adc
xchg
rorl
push
adc
mov
push
ficoml
mov
out
lret
jnp
pop
mov
popa
mov
dec
mov
icebp
nop
mov
fwait
xchg
xchg
cmpsl
mov
lcall
push
aas
je
cmp
push
pop
jne
mov
dec
movsl
aam
cmpsl
jne
push
in
clc
xor
pop
jne
pop
pop
lret
call
test
xorb
insl
in
sbb
shr
xor
loop
jne
pusha
cltd
jecxz
jmp
sbb
sub
mov
xchg
sub
mov
inc
adcb
xlat
or
cmp
pop
lea
fldl
add
je
inc
mov
sub
stos
mov
pusha
pop
je
imul
movsl
mov
jmp
arpl
mov
jae
scas
jg
xchg
dec
in
add
sbb
sbb
roll
xlat
jbe
inc
enter
enter
decb
adc
or
adc
or
pop
push
adc
xchg
pop
fimuls
orl
sbb
pop
cmc
shl
fs
push
add
decb
rcrb
ret
push
bound
adc
rolb
push
mov
mov
cmp
std
mov
pop
loopne
mov
add
repz
movsl
ret
fstpt
add
inc
arpl
mov
mov
push
add
in
or
push
jno
lret
loopne
sahf
xchg
pop
cs
push
push
pop
pop
pop
xchg
lret
in
pop
pusha
pusha
mov
mov
rorb
sub
xchg
cmp
add
add
insl
enter
xor
mov
or
popf
mov
lret
dec
cmpsb
jecxz
enter
push
mov
jmp
push
rcll
lcall
mov
sbb
adc
mov
fs
push
pop
sar
push
in
push
or
inc
adc
imul
sub
int3
adc
cmc
test
outsb
in
test
and
cld
scas
stos
insb
or
or
add
daa
mov
cmp
xor
es
jb
js
xor
sbb
mov
pop
es
xor
or
inc
outsb
mov
cli
jp
push
pop
jmp
or
stos
mov
je
scas
xor
into
or
sti
and
add
or
sbb
daa
frstor
or
je
dec
push
gs
insl
test
ret
lock
jbe
cmc
lock
lock
xor
sti
or
enter
sti
movsl
cmp
dec
pop
push
mov
pop
mov
pop
mov
or
mov
xlat
popa
pop
dec
or
inc
ret
popa
cmp
cmp
test
ffree
xor
lret
je
add
xchg
in
and
push
mov
dec
cld
outsl
sub
dec
add
dec
add
fimull
adc
in
in
lret
mov
loopne
jne
or
inc
addb
je
jg
mov
addb
xchg
adc
xchg
test
nop
mov
cmp
mov
sbb
sub
les
inc
pushf
add
pop
sbb
xor
push
sar
cmp
sbb
test
add
ficoml
fisubl
sbb
sbb
pop
je
jnp
sbb
adc
ds
add
push
jae
add
popa
xchg
faddl
dec
rcrl
call
mov
lock
cmp
jne
or
clc
adc
add
inc
pop
pop
into
jbe
jo
movsl
imul
mov
sbb
int
test
test
cmpb
orb
daa
cs
lcall
xor
aas
mov
or
andl
shlb
iret
xlat
or
incl
cmp
inc
test
or
mov
mov
stos
sub
mov
leave
or
mov
jmp
dec
in
subb
or
es
clc
mov
dec
hlt
cmpsb
int
cltd
mov
ja
xor
divb
push
fildl
aam
inc
jle
or
push
inc
add
loopne
add
cmp
mov
push
add
rorb
out
leave
inc
cmp
sar
xchg
rorl
hlt
adc
mov
sbb
cli
hlt
lcall
mov
mov
sub
inc
inc
mov
hlt
cmp
ljmp
push
mov
enter
pop
mov
pop
push
adc
add
icebp
sbb
js
or
mov
push
jecxz,pt
mov
cld
mov
cmp
outsl
mov
and
call
push
es
xlat
subps
sar
push
popa
pop
xor
pop
lea
add
push
orl
int
and
scas
pop
popf
out
push
pop
sub
cmpl
sbbb
adc
push
push
xor
fwait
jbe
adc
test
add
cmc
add
add
inc
into
push
or
scas
jle
out
adc
inc
aam
inc
pusha
scas
xchg
push
add
bound
jns
enter
imul
dec
and
mov
adc
movsl
xchg
loopne
fsubl
addb
sub
sbb
clc
adc
ja
fdivs
test
in
adc
pop
sbb
push
pop
push
test
pusha
es
add
mov
adc
bound
adc
movsl
adc
inc
jp
xor
pop
jmp
sub
push
push
iret
xchg
adc
push
popa
fwait
in
sbb
and
inc
add
dec
push
loope
lock
mov
mov
aam
fidivl
mov
adc
mov
and
add
add
ret
jmp
mov
sub
sbb
sbb
gs
adc
mov
orb
or
bound
mov
sbb
jmp
dec
dec
jne
jns
aam
and
nop
mov
inc
in
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
cmpl
push
adc
stc
imul
adc
xor
inc
test
es
add
fadd
iret
in
fdiv
fildl
and
xor
jnp
sbb
shlb
loopne
loopne
mov
fcmovb
jo
and
and
mov
jmp
roll
xor
xchg
arpl
rcrl
xlat
push
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
pusha
inc
cmp
cmpsb
push
testb
loope
pop
pop
orb
pop
clc
sbb
add
and
movsb
mov
adc
test
xchg
adcl
sti
movl
sbb
sbb
sahf
xchg
rol
mov
xchg
stos
imul
xor
dec
mov
add
xor
out
jge
sbb
and
sub
and
in
dec
fsubr
rep
ret
cmp
xchg
add
jg
fadds
cmp
rclb
pop
add
jmp
add
dec
clc
inc
push
xor
cmc
ds
enter
add
clc
test
cs
push
xor
pcmpeqd
mov
jne
jmp
push
xchg
mov
in
mov
pusha
push
dec
es
dec
and
mov
or
dec
lds
aas
ret
or
pop
rclb
je
sbb
mov
clc
or
sbb
mov
cwtl
hlt
sub
push
cmp
add
sbb
xor
sbb
sbb
int3
gs
lods
add
and
pop
inc
push
cmp
add
test
inc
ljmp
add
daa
mov
xlat
mov
or
jae
sbb
add
leave
sub
notl
stc
cmp
mov
cmp
ret
cs
push
or
popf
xor
ja
add
pushf
pop
imulb
jnp
add
and
push
loopne
loopne
clc
lea
cmp
repnz
jo
daa
xchg
aad
mov
xor
popa
and
jge
cwtl
and
jne
push
data16
inc
ret
nop
push
add
push
push
push
mov
add
clc
sbb
mov
xchg
xlat
lds
pop
ret
pushl
push
iret
outsl
pop
ja
xchg
lods
cmpsl
jo
movb
call
jo
push
add
xorl
stos
inc
adc
insb
jne
or
test
loop
loopne
push
fs
imul
movsl
mov
imul
adc
sarl
and
cmp
pop
iret
mov
mov
lods
ljmp
push
popa
je
jno
pop
movsl
mov
js
mov
dec
loopne
xchg
fsubr
mov
xor
cmp
sub
nop
xor
loopne
push
push
adc
sub
xchg
or
clc
call
sub
push
cmp
cmp
loopne
mov
in
xor
scas
sub
ja
lcall
rcll
insb
cmp
push
mov
jno
mov
cld
sbb
mov
sub
jnp
sahf
sub
adc
add
cmpsb
or
or
jmp
jo
lods
aad
scas
add
jb
pop
pop
scas
sub
stos
sub
push
lds
in
add
xchg
xlat
js
rcll
lods
hlt
push
cs
ds
cld
adc
dec
scas
cmp
subl
push
test
nop
sub
iret
or
fs
pop
jne
adc
xor
add
popa
xchg
jmp
dec
sahf
cmp
push
inc
fists
jp
jo
aaa
jbe
push
and
xlat
imul
push
pop
sbb
push
mov
sbb
xchg
sbb
mov
add
inc
sub
testb
adc
ret
xchg
mov
add
xchg
bound
add
push
adc
enter
imul
push
xor
cmp
das
mov
out
popf
enter
and
pop
clc
add
aam
mov
test
inc
sbb
mov
mov
arpl
add
cmp
inc
xor
mov
lcall
lock
movsl
cmp
push
push
xor
cmp
mov
fsubrl
sbb
xor
dec
insb
mov
push
jns
mov
stos
sub
ret
cmp
sbb
arpl
loope
push
lods
or
in
aam
test
cmp
add
push
outsb
or
pop
cmp
cmp
mull
outsl
test
fdivrs
fs
xor
dec
and
shll
stos
adc
inc
sbb
out
mull
push
shl
jge
das
push
add
leave
outsb
imul
pop
pop
leave
mov
aam
dec
cmp
cmc
testb
das
and
fstl
movl
addl
dec
inc
inc
movsl
dec
xchg
imul
out
or
imul
inc
sbb
push
push
xchg
cmp
cmpb
pop
je
pop
inc
movsl
faddp
mov
cwtl
ficoml
add
stc
add
mov
pop
push
inc
mov
jp
ret
mov
pop
mov
or
adc
push
and
rclb
add
outsb
dec
inc
sub
fldt
dec
cli
lcall
xchg
adc
mov
jno
inc
mov
sub
sbb
sbb
mov
dec
xor
or
cmp
stos
inc
or
and
adc
xchg
sbb
mulb
pop
mov
sub
dec
movsb
pop
cli
outsb
aam
mov
and
push
and
inc
inc
dec
jns
or
aas
test
push
push
adc
mov
sbb
mov
je
add
dec
subb
shlb
pop
lret
fstpl
mov
xor
mov
cmp
shl
sbbl
js
push
jge
adc
mov
lods
je
shrl
xchg
pop
mov
int
mov
repz
insb
lods
xchg
hlt
push
lea
mov
loopne
shll
bound
jo
test
adc
add
inc
cmpl
cmp
adc
and
adc
pop
inc
inc
xor
in
inc
push
cmpl
adc
jne
adc
or
ja
and
mov
and
adc
pop
or
ss
inc
pushf
pop
dec
jge
lods
fs
inc
lods
add
out
fsubl
lods
or
inc
shlb
ds
insb
inc
dec
test
vpmacsswd
or
cltd
jmp
sbb
mov
xchg
fsubrl
push
push
aaa
test
push
sub
lods
add
xor
out
pop
push
cli
or
xor
mov
or
pop
jmp
adc
clc
push
fisubl
push
xchg
clc
jne
pop
xchg
mov
lods
scas
jge
into
out
push
aam
push
xchg
mov
jmp
adc
cmp
or
mov
fildll
inc
and
sbb
jns
xchg
adc
and
jmp
andb
pop
icebp
adc
or
cmpsb
dec
cmp
and
clc
sahf
inc
loopne
mov
add
call
push
pop
jbe
movsb
xor
sub
pop
sahf
pop
jbe,pn
fdivl
ret
and
or
mov
dec
pop
pop
mov
xorb
je
xchg
mov
shll
jno
fidivrl
sub
sub
int
cmp
orl
test
mov
mov
jne
cmp
push
adcb
jo
or
xchg
push
ret
push
dec
add
movsb
aam
push
xchg
sbb
xchg
and
or
mov
mov
jp
mov
insb
pop
shlb
mov
add
add
out
es
cmpsl
mov
xchg
call
cmp
and
cld
rolb
cmpl
add
jmp
mov
mov
bound
cwtl
pop
mov
andb
mov
adc
pusha
orl
and
arpl
mov
jo
loope
in
xor
cltd
cltd
push
or
mov
mov
inc
cs
fwait
sub
pop
dec
xchg
or
bound
divb
jo
popf
lds
int3
pushf
mov
sbb
sub
sbb
fs
test
jns
ret
mov
mov
cwtl
sbb
cmp
xor
je
lea
test
push
or
pop
mov
xchg
jne
jo
test
xor
and
and
outsb
scas
add
or
sbb
test
push
jl
insl
stos
rclb
roll
sub
cmp
rcrb
jbe
sub
add
mov
mov
sub
aaa
push
pop
or
add
lds
ljmp
popa
push
inc
push
sarb
and
jb
mov
repnz
push
stos
or
rcrl
dec
sbb
jo
mov
xchg
mov
int3
imul
lods
cmp
push
push
cwtl
add
hlt
insb
jmp
ds
jne
sti
xor
push
cld
add
aam
test
dec
add
mov
ds
aam
lods
pop
xorl
pop
fstpt
mov
or
add
sbb
sbb
sbb
xchg
cmp
leave
mov
loopne
jmp
cmp
daa
or
mov
pop
xchg
add
jne
ret
rcl
mov
or
adc
and
sarl
jns,pn
and
adc
xchg
movsl
arpl
add
je
inc
adc
and
out
adc
adc
adc
inc
in
push
fs
out
mov
mov
mov
enter
push
ds
dec
mov
cs
dec
sub
pop
sbb
xor
dec
clc
sub
pop
sar
aas
mov
mov
adc
pop
pop
enter
adc
mov
adc
gs
dec
adc
adc
adc
adc
mov
sbbb
clc
push
push
in
fcomps
fsubrs
mov
inc
cs
out
add
and
ret
lcall
push
xor
push
cmp
inc
xor
fldt
push
jne
leave
pop
pop
scas
jo
jo
inc
sub
lret
sub
xchg
inc
mov
sbbb
push
xchg
fs
lock
dec
inc
and
das
jmp
cmp
sti
add
bound
dec
cld
cmp
add
xchg
fcoml
dec
cmp
fmuls
movsb
andb
jge
cmpsl
js
in
lea
test
mov
inc
xchg
movsb
stc
mov
jmp
push
das
mov
fists
fistps
adc
push
dec
xchg
xchg
xchg
insl
loopne,pn
mov
inc
push
add
xor
add
loopne
mov
sbb
outsb
lock
jne
mov
sub
sbb
test
xchg
mov
inc
pusha
popf
in
ja
jb
inc
push
cld
jnp
push
test
pushf
ss
and
jmp
mov
imul
push
aam
sahf
mov
push
xchg
push
xor
jne
push
sub
jmp
mov
push
mov
push
add
rorb
iret
nop
mov
mov
test
insb
aam
mov
dec
pop
jg
and
mov
inc
or
xor
cmpsb
push
pushf
int
ja
mov
xor
dec
cmp
mov
js
sbbb
inc
sbb
mov
into
and
adc
adc
aam
inc
rcl
and
push
jnp
fcom
dec
pop
jne
add
cmp
push
mov
mov
stos
mov
mov
adc
push
negl
mov
xlat
mov
cmp
pop
push
xor
cmp
into
scas
test
repnz
add
cmc
aam
sbb
loopne
pop
mov
sbb
push
je
stos
sbb
cmp
mov
push
js
clc
daa
and
es
sbb
push
push
negb
jge
dec
add
test
iret
or
les
push
fldt
and
das
dec
mov
sbb
pushf
adc
sbb
scas
insl
fnsave
jle
mov
test
add
repnz
jp
enter
lods
fstps
shlb
or
out
sbb
repz
adcl
add
arpl
xor
clc
add
lret
add
or
repnz
pop
dec
test
int3
and
out
std
ret
test
test
jge
and
pop
push
scas
add
dec
pop
in
cmp
lods
adcb
sub
repz
add
rorb
sub
push
pop
mov
or
stos
jno
movsl
rol
mov
dec
insb
sub
xor
rorl
lahf
adc
pusha
dec
pop
mulb
cmpsb
sub
ljmp
scas
push
adc
push
dec
inc
std
rorb
push
int
ret
pop
repnz
cmp
add
js
xchg
mov
dec
add
pop
adc
outsb
add
add
mov
push
xchg
repz
add
clc
out
pop
mov
test
je
push
push
mov
sti
gs
cmpl
push
mov
dec
add
or
jb
ljmp
loopne
iret
adc
or
and
outsl
mov
ja
pop
rorl
into
or
sbb
loopne
cld
cs
cmp
push
loope
or
mov
insb
xchg
xor
loop
xor
cli
mov
jmp
push
std
pop
mov
psubw
mov
jns,pn
mov
pop
add
bound
scas
dec
rorl
xlat
mov
out
call
inc
aaa
mov
neg
push
or
inc
push
or
mov
push
bound
dec
vpsrad
xchg
pop
push
shl
dec
mov
ljmp
xor
push
rcll
outsb
pop
pop
repnz
loope
pop
sub
dec
sahf
andb
pop
jno
dec
push
bound
xor
lea
arpl
in
and
cmp
jne
orl
bound
movsl
jecxz
mov
repnz
mov
mov
mov
aad
stos
add
andl
test
clc
lea
xor
pop
daa
adc
adc
mov
pop
clc
jecxz
inc
jo
adc
fisttpll
push
lea
mov
pushf
aam
jmp
fisttps
mov
add
xchg
xor
test
push
add
pop
mov
push
es
es
inc
loopne
mov
inc
test
inc
addr16
mov
push
clc
js
mov
bound
rcll
dec
les
pop
incl
jmp
pop
mov
loope
js
in
sub
or
aad
xchg
imul
mov
adc
sub
jne
sub
add
and
and
xor
cltd
sarb
sbb
push
or
add
add
pop
add
icebp
je
xor
jecxz
push
leave
and
adc
bound
adc
shll
and
xchg
aas
adc
inc
jle
ja
xor
rorl
xchg
inc
inc
add
stos
dec
inc
test
add
dec
inc
test
int
add
sbb
sbb
cltd
inc
add
sbb
adc
adcl
sub
dec
xor
fisttpl
xor
inc
std
jl
jmp
jge
aad
adc
or
or
jne
shlb
sub
push
or
insb
rol
sub
dec
je
dec
add
enter
testb
inc
orl
sarb
cmpsb
inc
rcrb
lds
inc
in
repz
js
jae
lea
jmp
cmpl
pop
sbb
sub
shll
loop
xor
loope
xchg
push
mov
lods
push
mov
rorb
in
sub
sub
in
jbe
nop
lcall
inc
pop
add
or
js
adc
jne
xchg
hlt
mov
sub
or
in
adc
add
jg
push
or
pop
js
hlt
sub
pop
pusha
insb
movsb
mov
push
inc
sbb
xchg
lock
sub
push
arpl
or
add
sarl
add
xor
cltd
sbb
sub
jne
or
or
sub
cmp
add
sbb
pusha
inc
sbb
lods
pop
cld
push
nop
popa
pop
add
lahf
or
repnz
and
lea
cmp
shr
int3
test
je
rolb
cmp
mov
adc
sub
shl
dec
jecxz
stc
mov
add
dec
mov
insl
sbb
adc
nop
cmpl
icebp
add
movsl
push
je
cmp
cwtl
xchg
jl
popa
cmpsl
adc
push
jmp
cmp
xor
sbb
js
iret
xchg
js
xor
bound
push
stc
xchg
mov
inc
outsb
or
mov
xchg
add
ja
xchg
adc
and
add
or
fdiv
dec
xchg
popa
sbbb
mov
pop
dec
jb
insl
jge
mov
add
cmp
je
cmp
or
ljmp
mov
add
nop
popa
and
jmp
cltd
cli
std
lea
cmp
inc
and
cmc
std
cmp
pop
dec
inc
mov
inc
es
nop
add
inc
or
pop
js
adc
push
pop
cmpl
int3
push
or
xor
inc
sub
xchg
push
outsl
test
pushf
pushf
adc
jae
push
rcrb
inc
adc
push
in
outsl
adc
das
jae
sub
jmp
aad
or
loop
dec
into
pop
xorl
xlat
dec
subb
jb
test
or
inc
adc
lahf
lods
ret
cwtl
mov
ret
adc
pop
or
inc
mov
aas
jnp
cmp
adc
orb
jo
mov
or
cmp
fdivl
or
je
test
dec
fnstenv
in
bound
clc
jne
mov
push
test
gs
or
sub
push
push
loopne
pop
cmp
stos
or
add
es
nop
test
dec
xor
sbb
xchg
inc
cs
hlt
jns
icebp
sbb
jb
mov
push
mov
ds
pop
pop
adcl
cmp
call
jo
dec
xchg
inc
sbb
mov
ror
sub
pop
and
js
loopne
fnstenv
mov
or
push
mov
in
mov
fcomps
dec
inc
jecxz
sbb
cmpsl
scas
out
or
ja
push
cmp
add
lcall
iret
movsl
push
add
lea
in
outsl
cltd
pop
cs
test
or
pusha
pop
loope
pop
push
sub
gs
and
dec
push
hlt
neg
sbb
and
bnd
loop
idivb
mov
push
sub
push
adc
test
cwtl
pop
ret
mov
inc
cmpsb
test
add
or
test
adc
cmc
ds
pop
xor
add
in
jge
sbb
and
adc
sbb
ss
ret
push
je
sbb
in
mov
outsl
ljmp
pop
cmp
jbe
or
jne
push
testb
cmpsl
ret
test
insb
adc
jle
lret
pusha
testb
add
ds
data16
push
fcmovnb
gs
xchg
popa
loopne
shr
inc
cmc
jmp
pop
jl
fadds
cmp
loopne
or
iret
or
adc
sbb
sbb
fists
pop
cwtl
sbb
mov
mov
cmp
clc
pop
movsl
mov
push
jmp
sarb
adc
mov
and
mov
test
xchg
js
add
add
testb
xor
mov
stos
shlb
negb
mov
shlb
dec
loopne
insb
gs
and
test
ret
jnp
xor
bound
mov
push
hlt
loop
mov
add
inc
daa
sub
inc
in
sub
add
adc
std
xor
mov
inc
and
cmp
or
pusha
adc
sub
inc
adc
cltd
cmp
add
and
pop
jo
mov
inc
adc
push
movsl
adc
mov
sbb
xorb
sbb
leave
ret
jns
mov
movsl
clc
add
movl
pop
jnp,pt
and
xchg
dec
daa
popf
add
pop
frstor
xchg
add
mov
cmp
lods
fmulp
lods
jae
dec
call
lock
fiadds
pop
xor
or
cmpl
xor
adc
add
loopew
add
mov
test
out
aad
add
fs
aas
pop
movb
push
xor
push
xor
mov
pop
fcompl
and
cltd
mov
xor
add
jne
lock
xlat
mov
add
fs
xchg
jne
shl
adc
ror
xchg
iret
push
arpl
fcomp
out
mov
inc
cmp
jae
cmp
je
mov
out
cmp
cld
cs
adc
add
insb
push
iret
xchg
jo
and
ja
push
xchg
pop
mov
or
insb
pop
push
jp
jb
push
jae
dec
pop
movaps
xor
or
pop
je
inc
push
shlb
add
jbe
cmc
rolb
pusha
ss
cmp
cmp
adc
hlt
rcrl
push
jns
or
sahf
jno
sub
xor
adc
xor
outsb
and
cmp
pop
dec
jbe
movsl
out
add
popf
sub
push
and
push
mov
lods
fucom
add
sar
or
push
lods
mov
or
cli
fdivrs
mov
hlt
and
lea
into
mov
mull
sbb
out
in
dec
js
mov
jmp
push
dec
add
das
dec
mov
and
add
pop
xlat
cltd
aam
adc
sub
sub
mov
test
adc
xor
test
loopne
jge
enter
cmpsl
fucomp
cmp
icebp
sub
lret
packsswb
test
jbe
and
fdivl
or
or
xor
and
jb
xor
repnz
roll
jp
addr16
and
lock
dec
pop
jl
sbb
test
and
mov
fcoml
cmp
xchg
xchg
mov
inc
add
cwtl
adc
cmp
inc
lock
add
and
pop
push
inc
fcoms
leave
rcll
fsin
sbb
adc
mov
xchg
js
jno
insl
je
mov
das
pcmpeqb
inc
std
push
add
cmp
out
idivb
mov
out
js
cmpsl
inc
push
aam
inc
inc
testl
fsubs
mov
sarl
fcoml
subb
jle
jp
shl
daa
mov
loope
xor
sbb
mov
scas
mov
mov
and
push
jge
mov
ljmp
xchg
out
fdivrs
cmp
push
cli
and
push
sub
xor
inc
in
je
add
mov
mov
inc
or
sbb
cmp
fisttps
mov
adc
jnp
mov
sub
pop
cmp
pop
mov
mov
adc
mov
enter
xlat
ret
pop
lea
fbstp
call
add
xor
push
pushf
mov
fistpl
cmp
popf
pushf
ficompl
fdivl
je
xor
sub
cmp
pop
mov
push
aas
and
scas
mov
dec
adc
add
mov
jae
lea
ja
cmpb
jne
mov
jne
fsubr
xor
bound
lea
jo
or
dec
xchg
jae
xchg
lret
ret
daa
daa
add
add
ss
mov
lea
rolb
sub
sub
or
dec
mov
test
xor
adc
xchg
bound
jae
call
jae
leave
jmp
push
inc
subl
test
cli
dec
and
dec
sarl
mov
sbb
push
adc
add
xchg
mov
dec
pop
imul
cltd
xor
xchg
lods
aam
cmpsb
pop
movsb
adc
notb
rclb
cld
cmpsb
or
insb
and
mov
je
lea
adc
push
adc
jo
nop
jmp
negb
vmovaps
divb
adc
das
dec
and
sub
inc
push
push
fs
lods
cmp
ret
xor
cmp
enter
pop
push
lea
cmp
push
pop
movsl
sub
popf
jmp
ja
push
loop
or
mov
fisttps
jmp
clc
or
fsub
add
dec
or
add
xor
push
outsl
or
dec
dec
lahf
aam
inc
outsb
mov
add
pop
pop
mov
mov
mov
ljmp
mov
arpl
pop
iret
dec
xchg
ret
sarl
sbb
test
jne
adc
xchg
or
push
lcall
inc
and
xchg
or
data16
cmpsl
add
rolb
add
add
jns
adc
pop
pop
in
mov
mov
je
dec
add
adc
push
pop
ss
fisttpl
orl
push
repz
scas
jbe
sbb
sub
jmp
icebp
add
cwtl
loopne
sbb
arpl
push
mov
adc
orb
js
aas
pop
cmp
mov
mov
es
mov
or
cmp
push
cmpb
ret
push
jae
lea
push
sub
sbb
pusha
stos
lods
mov
push
aaa
stos
adc
popa
cmp
ja
sbb
jnp
dec
pop
ret
mov
sub
ret
out
and
adc
pop
cmpsl
imul
add
cmpb
xor
fnstenv
inc
jmp
into
rcrb
push
cmp
cmp
sub
cmp
movsb
push
dec
cmp
xor
push
sub
addl
add
jo
and
sahf
popf
ljmp
ret
sub
out
push
dec
outsl
adcb
cmc
xchg
jo
push
out
insb
mulb
call
mov
push
cmc
dec
dec
jmp
leave
in
rorl
add
and
push
xchg
fcmovb
mov
push
subl
sub
out
popa
rorb
jb
add
test
lock
adc
icebp
push
lea
js
ret
push
test
out
mov
or
add
xlat
push
cmpsl
and
out
in
mov
push
aad
xor
or
iret
mov
dec
jp
mov
adc
pop
push
jecxz
cwtl
lcall
sub
int
or
jp
rcrl
je
xor
xor
cmp
add
loop
lds
pop
lea
lret
mov
mov
and
andl
fimull
push
mov
cmp
sub
push
inc
ret
pop
or
add
es
xchg
or
arpl
pop
lods
add
loopne
or
sbb
mov
clc
iret
jne
jno
jp
std
cmc
imul
dec
or
cmp
inc
int3
test
mov
add
cwtl
out
addr16
cmpsb
imul
pop
repnz
push
add
stos
and
xor
loop
ret
inc
movb
bound
push
js
jbe
arpl
out
std
push
mov
add
cmp
inc
add
lea
or
fdivr
adc
lock
rcrb
add
adc
push
cmp
cmp
xchg
jmp
inc
test
xor
sbb
rorb
loopne
pop
sbb
add
mov
or
sub
jge
pop
mov
bound
notb
xor
push
cltd
iret
xchg
dec
inc
add
cmp
pop
xchg
cmp
sti
ss
bound
fdivrp
inc
xor
jbe
cmp
mov
push
ret
sbb
mov
cmpl
pushl
rorl
jno
xchg
mov
pusha
jo
adcl
xchg
or
andb
das
in
and
movsl
pop
adc
add
add
jo
insb
lea
fadd
mov
cmc
cmp
fildll
fmuls
loopne
roll
aas
xchg
shll
cmp
hlt
pop
xchg
and
mov
out
lcall
cmc
adc
sbb
mov
sub
mov
sbbl
daa
test
ljmp
mov
jge
inc
sub
les
cmp
add
sub
push
and
dec
inc
pushf
cli
xor
pop
adc
or
mov
dec
fsqrt
addr16
push
mov
inc
test
add
mov
test
mov
and
ja
mov
xor
xchg
pop
pop
sbb
push
xchg
xchg
xchg
out
xchg
cmp
pop
push
push
pop
mov
mov
mov
mov
ret
pop
mov
lods
xchg
push
dec
jmp
leave
test
jne
inc
loop
ja
push
sub
add
sbb
nop
inc
mov
jnp
pop
rcll
test
pop
cmpsb
nop
clc
sti
mov
scas
jle
jne
push
dec
insb
mov
rorl
or
mov
cltd
mov
sub
lock
pop
js
js
cmp
adc
or
mov
push
fcoml
and
jns
xchg
jmp
jae
lcall
adc
aam
pop
fimuls
cmpl
call
stos
adc
adc
push
add
test
push
mov
push
or
pop
sbb
mov
cmp
jne
mov
inc
test
xor
or
cmp
lahf
inc
xchg
ret
mov
test
daa
cmp
xlat
sbb
or
add
cld
pop
mov
xor
inc
xchg
pop
fnstenv
push
mov
dec
popa
add
or
adc
in
jae
sub
iret
mov
fildl
mov
jo
rcrb
aaa
pushf
inc
adc
pop
pusha
dec
out
fwait
ret
mov
out
into
push
push
mov
push
ja
imul
push
or
pop
out
nop
adc
push
inc
movzwl
js
xabort
inc
je
test
xchg
dec
pop
or
or
jo
leave
cmpsb
pusha
sub
js
test
mov
xchg
xchg
add
cmpl
push
or
pop
sub
push
mov
mov
popa
cmp
mov
incl
push
imul
ds
push
loopne
jecxz
cmc
push
adc
push
inc
rorb
lar
cs
pop
dec
xor
jmp
xor
push
jecxz
mov
sub
jmp
jl
js
fildl
jo
and
sbb
sbb
push
push
jl
or
mov
xor
add
lcall
rcrb
call
pop
sub
fmul
cmpsl
je
or
mov
imul
pop
or
add
jle
mov
and
int
push
pop
dec
pusha
cli
mov
dec
and
sbb
or
cmp
adc
dec
loope
stos
sti
dec
orb
pop
sub
rcrb
test
push
mov
inc
stos
or
mov
sub
push
pop
cmp
jbe
inc
dec
cmpps
add
pop
push
fs
push
das
pushf
sti
mov
or
inc
sbb
xrelease
mov
cld
lods
ret
fnstcw
push
adc
cld
js
sbb
add
insl
cmp
sti
push
fs
cs
clc
xor
daa
enter
mov
clc
xchg
dec
test
aam
xorb
add
clc
shl
push
cmpsb
jbe
jne
mov
sub
pop
fs
enter
push
push
sbb
clc
popa
and
mov
mov
dec
cli
jp
loopne
or
and
cmp
push
mov
add
mov
insl
popf
xor
jp
cmp
mull
inc
adc
rcrb
pop
jecxz
mov
jl
subl
rcrb
cmp
sub
adc
add
scas
mov
ret
sub
int
lgs
ljmp
mov
jg
xchg
roll
sub
push
sbbl
hlt
out
or
dec
add
inc
or
mov
enter
mov
rcll
dec
and
sbbb
loop
inc
arpl
das
push
repnz
insl
clc
scas
cmpsb
mov
mov
cwtl
jno
pop
test
rcrl
dec
push
cmp
mov
xlat
adc
inc
aas
sbbb
mov
int
jp
mov
daa
xor
fstps
in
mov
mov
out
push
loope
pusha
out
add
orl
pop
subb
xor
clc
push
mov
out
jmp
je
xor
and
outsl
push
xor
pop
scas
adc
jne
inc
aas
mov
sub
jl
dec
loope
aaa
mov
leave
bound
pushw
ljmp
hlt
aas
lea
test
mov
or
mov
sub
pavgb
mov
adc
lret
iret
push
pop
sub
add
sub
mov
sbb
cs
inc
add
fmuls
xlat
add
movsb
jno
sbb
nop
into
mov
cld
or
push
push
adc
mov
fmull
mov
mov
inc
ret
cmp
movb
dec
inc
mov
pop
mov
push
or
fimuls
rcll
push
adc
nop
xchg
adc
push
xlat
sub
je
xchg
mov
les
stos
sub
xor
imul
sbb
mov
mov
and
push
sub
and
adc
out
add
rorb
cmp
mov
imul
jo
mov
insb
dec
fdivrp
js
cmc
push
add
bswap
out
cmc
sbb
inc
push
xor
add
sbb
lcall
push
pushl
sub
sahf
mov
sbb
test
loopne
push
dec
sbb
cmp
add
push
cmp
sbb
loopne
xchg
inc
in
mov
sbb
lcall
lods
test
outsb
cs
push
dec
enter
in
xor
xchg
inc
in
push
mov
sbbb
test
je
sbb
pop
loop
or
orps
jb
test
cmp
cmc
rorb
popf
les
mov
jno
ffreep
jns
add
pop
sarl
jne
andb
jp
cmp
shrl
mov
or
and
pop
lcall
or
sub
mov
pop
jp
jne
or
jne
das
dec
and
mov
shlb
cmp
pusha
ds
ljmp
fs
fistps
lahf
cmp
add
mov
add
jo
into
add
clc
stos
jl
js
sbb
imul
jno
repnz
cld
dec
jnp
add
push
popa
inc
add
mov
dec
outsb
imul
or
jle
lods
push
push
xchg
push
add
xchg
push
jnp
hlt
jne
outsb
xor
sarb
sub
mov
adc
mov
push
push
cmp
mov
jge
fiaddl
or
lea
lods
adc
dec
out
jp
or
mov
inc
out
push
sbb
cmp
pop
mov
dec
scas
lcall
inc
ret
add
enter
lock
loopne
jg
and
lahf
movsb
adc
jo
mov
xor
mov
js
rcll
cmp
add
ret
jmp
gs
mov
sub
insl
cmp
push
dec
inc
sbb
inc
out
adc
sub
lret
mov
inc
cmpsb
mov
dec
cmp
xor
dec
aam
push
rolb
dec
addb
clc
and
mov
fs
rolb
push
jne
dec
xchg
mov
push
cli
or
pop
sub
sbb
jns
xor
jne
add
push
fdivs
push
je
xor
outsl
sbb
dec
or
sbb
mov
pop
push
cmp
scas
aaa
loopne
lcall
pusha
push
mov
test
sub
and
mov
cwtl
int3
or
cmp
je
add
push
push
mov
push
or
jo
daa
les
subb
xchg
xchg
cmpsl
cmp
call
mov
xor
xlat
dec
rcrb
cmp
mov
jnp
push
mov
or
cmp
push
push
pop
mov
fdivrl
jl
mov
mov
js
shl
push
int
cmp
ficoms
call
sbb
push
cmc
addr16
call
xor
je
dec
and
sbb
test
dec
outsl
fcoml
push
sbb
sub
fwait
icebp
add
stc
mov
fprem
cmp
jne
decb
or
pop
fdivs
mov
mov
icebp
mov
jge
and
and
dec
pop
ds
sbb
dec
and
cli
xchg
jbe
lock
inc
movl
or
fwait
bound
xlat
movsb
or
mov
add
js
inc
rolb
or
inc
sbb
inc
sub
shrb
sti
loopne
stos
rolb
add
pusha
sarl
jb
mov
mov
insl
pop
adcl
bound
xchg
add
sbb
lcall
add
dec
shll
jo
nop
xor
jl
mov
or
call
push
ficomps
test
xor
int3
xchg
popf
ss
xlat
inc
mov
xor
push
movl
ja
imul
int
adc
and
pop
mov
add
inc
pop
add
les
mov
mov
pop
dec
dec
test
xchg
cmp
fmuls
rorb
sbb
orb
jo
enter
push
orb
jbe
inc
dec
push
out
push
popf
adc
push
fsts
xor
push
sbb
stos
add
sbb
dec
cmp
add
xor
aam
out
xor
push
adc
push
mov
push
jo
scas
lods
adc
cmp
and
pop
adc
enter
leave
add
cmp
mov
imul
lea
push
inc
stos
cli
xchg
adc
lsl
inc
adc
jne
sbb
test
mov
movsl
cmpsb
mov
sbb
rorb
push
ret
pushl
les
xchg
mov
scas
and
jl
mov
sbb
push
test
in
mov
mov
fwait
jl
dec
mov
das
cld
inc
test
jo
ficompl
and
test
and
and
add
dec
and
dec
push
fwait
out
shlb
xor
sub
fucomi
mov
sub
out
roll
pop
jne
orl
dec
adc
sbb
fidivs
imul
sbb
pop
pop
dec
test
cmp
frstor
or
test
sub
xlat
mov
adc
das
call
stos
push
fldl
sar
lds
cmp
das
add
data16
in
xor
enter
movsl
jnp
clc
sub
mov
inc
xchg
les
mov
add
mov
stc
push
jne
mov
lock
ficoml
mov
clc
jo
push
cmp
push
dec
jo
mov
jne
ds
rcll
xorl
imul
dec
fwait
pop
lahf
mov
hlt
cld
pusha
ret
sbb
dec
mov
sbb
sbb
dec
jge
mov
push
divb
or
xchg
sbb
int3
push
dec
dec
mov
sub
push
pop
popa
push
push
inc
cmp
xor
lock
mov
ljmp
cli
out
fidivrs
sbb
or
iret
lods
pop
mov
sbb
sub
gs
xor
dec
lods
pop
jmp
push
adc
push
push
dec
jns
and
test
test
or
mov
aas
sti
push
jo
inc
insl
adc
aad
insb
aam
sub
and
ss
jecxz
test
adc
out
fcmove
adc
mov
repnz
xchg
sbb
in
push
faddl
lds
scas
mov
rorb
adc
lea
addl
fnstcw
pushl
and
jmp
scas
testl
aaa
add
mov
sbb
inc
inc
lock
sarb
and
add
or
nop
test
mov
gs
je
inc
inc
push
cltd
pop
fs
pusha
pusha
fs
xchg
insb
insb
push
ja
out
movsb
xor
jmp
lods
and
jnp
cwtl
push
xchg
inc
pushf
cmp
pop
mov
mov
je
popf
add
or
or
sbb
loop
lock
lea
push
mov
push
sub
inc
and
jmp
push
jne
enter
mov
roll
imul
pusha
rcll
outsb
dec
adc
jnp
add
cld
test
lock
jge
cmc
cmp
dec
jmp
rcll
into
stos
ret
adc
adc
sbb
sub
dec
popf
inc
mov
mov
push
mov
lret
add
push
ret
adc
dec
mov
fisubrl
clc
jo
sub
sub
xor
cmp
loopne
dec
aad
mov
sbb
cli
icebp
mov
and
pop
rol
roll
mov
test
push
dec
je
and
dec
pop
shlb
or
inc
clc
adcl
and
jle
test
shll
jp
and
jne
adcb
cmp
xchg
xchg
out
sbb
jns
sbb
stc
push
ret
mov
jo
popa
xchg
add
test
mov
and
cs
loope
xor
mov
jne
outsb
fcompl
fsubrs
outsb
mov
xor
fucomi
or
push
ret
jne
or
fidivrs
clc
outsb
inc
jg
sub
mov
cmp
andl
sbb
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
into
ss
sbb
xor
or
lock
fs
in
fcoms
inc
and
jecxz
fwait
notl
cmp
mov
lret
movsb
mov
outsb
add
adc
sub
sub
add
pop
arpl
sbb
imul
ficoml
jb
hlt
mov
lock
mov
cwtl
or
sub
cmp
out
pop
add
fs
addb
cltd
fnstenv
and
cmp
push
push
popa
pop
fdivs
xchg
std
push
sbb
rolb
test
into
in
outsl
push
ret
jge
int3
mov
dec
xchg
pop
sbb
sbb
cmp
lods
shll
mov
sbb
rolb
lods
xchg
adc
or
addl
mov
and
or
popa
out
pusha
xor
out
jmp
pop
in
adc
dec
push
xchg
push
dec
push
movsb
push
push
push
aaa
pushf
jo
mov
and
adc
add
out
xor
adc
xor
jo
bound
fsubl
nop
push
cli
sub
dec
cmp
mov
jecxz
dec
inc
in
sub
js
cltd
mov
push
push
push
xchg
or
cmp
adc
fiadds
mov
js
lock
cmpl
adc
inc
mov
out
fmuls
aad
push
movsl
pushf
test
rolb
je
push
sub
add
aas
pop
push
cld
xor
mov
mov
loopne
idivb
pop
jae
jp
call
enter
mov
inc
xor
dec
pusha
sbb
pop
mov
movsl
add
dec
les
jl
sbb
and
push
add
sbb
jmp
daa
sub
jo
aad
insl
bound
cmp
jg
dec
or
lods
sbb
out
and
orl
xor
pop
and
mov
mov
cmp
and
sbb
cmp
repnz
hlt
sub
mov
ja
mov
fidivl
and
pop
lcall
ja
movsl
sbb
je
movsl
push
roll
divl
push
pop
ljmp
pop
lahf
push
cmpsl
adc
orl
add
adc
movsb
jo
xor
push
sub
outsl
xor
jbe
sub
lret
in
sub
inc
mov
dec
jmp
or
inc
push
or
cmp
mov
adc
fsubl
xor
and
stos
sbb
jno
push
and
inc
sbbb
pop
mov
add
inc
jg
adc
imul
gs
adc
push
lock
lret
push
or
jo
mov
mov
sbb
push
sub
jnp
out
add
test
jle
mov
add
jp
push
add
jp
cs
or
pop
lods
popf
fsubrl
pop
cmp
cmp
pop
adc
jns
xor
push
xchg
pop
aaa
rcrb
or
xlat
mov
imul
and
mov
jg
xor
call
or
jbe
jge
push
mov
leave
jo
add
icebp
push
xor
sub
cmpsl
popa
fstl
xchg
push
xor
push
or
mov
inc
fimuls
push
mov
add
xchg
cwtl
sarl
mov
xchg
adc
or
sbb
sbb
xchg
jbe
add
sbb
xchg
jb
mov
jnp
xor
fs
push
and
xor
push
inc
xor
cwtl
xchg
mov
and
jl
cmp
ja
mov
fwait
xchg
add
xchg
cmpl
adc
js
jecxz
mov
push
push
push
sbb
shll
inc
push
sbb
iret
frstor
nop
sbb
cmpb
lret
cmp
or
mov
or
dec
pop
movsb
adc
jnp
lds
shll
sub
ret
in
jmp
cmp
add
mov
lods
stc
inc
cmc
js
dec
cmp
sbb
mov
sub
push
pop
mov
pop
add
push
sahf
ds
cmpsl
orb
jnp
idivl
mov
inc
xor
and
ret
mov
es
test
or
mov
mov
sub
mov
add
loope
sbb
and
and
enter
js
pop
fs
enter
add
mov
pop
mov
fs
imul
data16
jno
pop
jo
push
arpl
cmp
xor
mov
inc
xor
shll
fcoml
adc
scas
add
lret
xchg
repnz
stos
pop
xor
sbb
mull
aaa
rorl
rorb
push
ret
popl
inc
and
addl
mov
je
push
pop
cmp
adc
sub
xor
shll
and
mov
mov
jecxz
adc
pop
bound
in
mov
xor
inc
push
xor
pop
sub
and
es
mov
movsl
add
pop
pop
sub
xor
xor
pop
push
in
pop
lock
pop
sbb
sub
mov
push
je
and
jbe
ret
aas
jle
adc
cs
jne
lock
mov
xor
add
jl
fadd
pop
testb
je
xor
jbe
fdivl
cmp
dec
or
dec
jl
loope
xor
push
test
jne
fistl
js
adcb
pop
sbb
push
fisttps
xchg
push
leave
or
xchg
cmc
xor
or
cmpsl
jnp
sub
add
cmp
inc
mov
aas
mov
testb
xor
xchg
inc
push
xchg
sbb
mov
dec
addr16
sarl
aaa
add
mov
sub
push
or
jge
loopne
push
jecxz
movsl
push
push
lock
arpl
inc
ds
or
and
and
cld
push
push
mov
push
push
push
add
shr
aaa
stc
or
or
xchg
inc
push
lock
sub
xchg
mov
mov
mov
or
sahf
xchg
ret
nop
inc
mov
inc
and
out
or
div
neg
adc
ja
jp
pop
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fiaddl
addr16
pop
push
push
lcall
or
push
inc
pop
cwtl
imul
cltd
idivl
sbb
lret
mov
inc
nop
adc
icebp
cwtl
add
add
sub
sub
mov
or
push
ret
adc
and
push
fwait
mov
jb
pop
add
or
sub
je
mov
xchg
bswap
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
jae
daa
js
cld
sbb
aad
test
push
push
mov
adc
cmp
mov
dec
jp
out
andl
cli
add
outsb
sbb
or
movsl
or
aam
fstpl
or
mov
mov
xor
in
clc
push
jns
or
mov
push
add
adc
lds
arpl
pop
xchg
sub
lods
rcrb
cmpsb
sbb
push
mov
jmp
outsl
push
or
jae
movsb
ret
call
xchg
mov
xchg
lock
orl
cwtl
dec
push
pop
or
or
insb
mull
int
add
dec
dec
mov
lds
inc
clc
add
stos
lcall
cmp
sbb
adc
in
pmulhw
push
cmp
adc
sbb
cmp
push
into
add
inc
cmp
icebp
jle
adc
mov
xor
add
push
jl
into
inc
loope
adc
push
pusha
fs
mov
push
insb
cmc
inc
mov
sbb
ss
cmp
or
addl
lcall
push
int3
and
mov
movb
cmpsl
add
pop
mov
sbb
incb
into
xor
shr
inc
add
push
sti
rolb
dec
and
das
sbb
adc
cmp
out
add
loope
sbb
or
pusha
insb
std
push
or
pop
dec
popa
push
jnp
adc
add
jno
cmpsl
jbe
dec
push
stc
outsl
insl
out
in
cld
mov
jae
movsl
mov
insl
dec
mov
es
sbb
out
fimull
sbb
popa
sbb
push
arpl
push
pop
adc
inc
lock
and
push
xchg
test
adc
and
cwtl
cmp
mov
lret
push
idivl
dec
add
xor
js
pop
js
dec
push
push
mov
xor
mov
and
push
int3
xchg
push
pop
push
sbb
xor
pop
orb
in
xor
bound
or
repz
jae
loopne
adc
nop
lock
or
insb
leave
out
mov
inc
adc
insb
insb
int
push
xorb
cmp
inc
test
jg
pop
imul
fadds
rolb
jmp
jg
inc
xor
bound
mov
test
jle
movsl
xor
je
jo
cmp
add
dec
jne
push
loopne
jno
mov
add
adcb
mov
jl
add
loopne
push
push
jnp
outsl
pop
test
jb
pop
mov
mov
xorb
test
lods
inc
dec
xor
jle
add
inc
xor
adc
cmp
xchg
jmp
imul
shll
fs
mov
repz
or
sbb
jo
in
mov
cmp
dec
xor
xchg
jne
adc
pop
fcmovu
adc
hlt
into
sub
adc
mov
adc
push
lock
dec
lret
test
or
jo
xchg
push
mov
adc
cmpsl
arpl
cmovns
mulb
nop
test
in
cmp
lcall
lea
mov
je
sub
add
and
in
in
lea
push
scas
outsb
xchg
add
sbb
andb
and
inc
xor
ret
pop
cmp
test
in
and
lcall
movsb
loopne
adc
mov
inc
ficomps
flds
cli
xchg
clc
decl
lea
sub
pop
mov
sub
xor
dec
testb
jbe
mov
les
push
xor
test
pop
dec
insl
sub
push
xchg
push
ror
repnz
pop
testl
xchg
sbb
sbb
es
in
adc
out
call
pop
inc
movlps
movsb
sysexit
mov
xor
xchg
sub
insl
inc
xor
inc
aaa
sbb
popa
jo
loop
js
add
cmp
sub
and
mov
push
push
fiadds
test
sbb
ficoms
mov
test
jge
jl
je
add
outsb
mov
jge
test
add
testb
jle
loopne
jle
xor
or
jl
neg
ret
add
dec
roll
je
xchg
and
fcoms
loopne
outsb
jno
cmp
imul
adc
push
push
push
and
inc
js
movl
pop
pop
push
push
push
roll
or
dec
dec
pusha
outsl
and
dec
in
bound
add
pop
and
cmp
mov
or
xor
adc
or
lock
cld
jo
ljmp
jl
pop
loopne
mov
cs
cmp
add
mov
sub
in
or
and
sub
mov
xchg
xchg
mov
sbb
push
add
add
fcmovu
push
lret
mov
shl
pop
pop
aad
adc
addl
in
mov
mov
xchg
sub
pop
jno
jle
mov
in
mov
add
es
pusha
cld
in
rorb
dec
inc
mov
fcmove
cmp
subl
insb
int
inc
xchg
sub
xchg
lret
and
mull
lret
pop
sbbl
inc
mov
adc
ret
cmp
inc
shl
mov
adc
adc
cltd
adc
xor
je
or
pop
adc
push
xchg
sbb
push
nop
fs
outsl
notl
andl
sub
cmp
ja
je
or
je
or
mov
sub
jecxz
jbe
sti
das
adc
sti
add
jns
dec
add
or
or
movsb
xchg
or
outsb
pusha
lock
sahf
popa
jnp
add
push
jmp
cmp
mov
pusha
push
adc
adc
push
xor
inc
les
scas
test
pusha
inc
or
sub
add
and
inc
dec
xchg
sub
lcall
cmp
xor
push
add
test
xchg
mov
mov
lret
push
cmpl
push
or
test
loopne
add
inc
es
or
fs
mov
or
push
sub
adc
mov
mov
ret
dec
test
xchg
and
and
gs
sarl
das
add
cs
inc
or
call
mov
pop
inc
clc
jecxz
dec
je
sub
jmp
sub
or
add
cld
inc
outsb
fcomi
adc
mov
sub
jp
test
daa
or
fs
or
push
adc
inc
push
mov
movsb
adc
sbb
outsb
pop
dec
mov
insb
adc
fnstcw
pop
dec
pusha
lret
cmp
divl
std
test
pusha
xchg
cli
jns
rolb
and
push
adc
inc
test
lods
adc
jne
jne
cmp
or
and
push
in
movl
inc
jmp
sbb
sbb
and
dec
cld
add
ret
out
je
push
push
add
icebp
clc
inc
das
sub
adc
push
mov
push
mov
xor
std
call
out
pop
ret
rolb
mov
push
int
jno
clc
pop
pop
je
push
pop
in
xor
jo
push
or
subl
pop
lcall
fcoml
inc
add
cmp
shrl
sub
enter
inc
rcll
dec
push
dec
movsl
pop
lods
pop
cmpl
sbb
mov
jns
nop
add
add
add
add
pop
shlb
pop
push
dec
mov
inc
mov
in
sub
in
jbe
out
xchg
and
in
add
adc
or
jge
mov
icebp
sub
inc
sti
cmp
js
lods
add
outsl
add
fcoml
shll
sub
in
push
in
and
mov
jnp
push
ret
pop
cmc
fsubrs
and
test
or
inc
sub
add
push
dec
mov
mov
lock
fidivrs
xor
icebp
in
pop
aas
pushf
xchg
adc
mov
mov
jo
mov
enter
xchg
push
xchg
dec
adc
inc
sbb
xor
scas
sub
push
lods
or
sbb
and
jne
arpl
stos
std
decl
or
ficoml
push
cmp
and
dec
pop
cld
sub
test
ljmp
movsb
push
jg
sahf
mov
cs
and
pop
xor
sbb
out
mov
cs
xor
push
cmp
faddl
push
daa
and
xlat
dec
mov
inc
shl
test
mov
inc
fcoml
xchg
mov
adc
daa
loop
jp
hlt
or
aam
mov
mov
xchg
clc
pop
stos
inc
pop
mov
pop
das
or
mov
push
jb
dec
leave
xorl
mov
subl
popa
outsb
or
push
je
daa
dec
mov
fwait
push
shll
cltd
or
bound
daa
clc
movl
cmp
or
and
adc
sbb
lahf
sub
arpl
push
sub
outsl
push
adc
rcrb
mov
or
inc
cltd
stos
sbb
jns
or
inc
mov
or
adc
fidivl
push
or
cwtl
push
loop
std
add
shlb
and
xchg
push
fldenv
in
adc
jg
add
shrl
cwtl
push
lds
jp
sahf
mov
inc
sub
push
inc
leave
je
rclb
dec
in
aam
fsubs
ret
sahf
mov
or
jo
cmpsl
push
xchg
push
sub
dec
sahf
imulb
push
lcall
xor
xor
aaa
divps
push
addr16
cmp
inc
mov
xor
inc
js
bound
lods
or
push
inc
dec
loopne
jmp
add
pushf
orb
out
filds
cmp
sbb
addr16
add
mov
or
ret
movsl
add
mov
stos
lds
sbb
inc
adc
mov
fistpll
ret
adc
adc
push
or
cmp
dec
lock
push
sub
adc
and
lock
ds
enter
scas
or
sub
popf
cmpsb
cmp
xor
cmpsl
xchg
adc
jne
add
add
cmp
xchg
mov
pcmpeqb
nop
jge
popf
add
leave
sub
sbbl
inc
pop
pop
mov
inc
sti
adc
mov
cs
push
das
xor
cmp
ret
xor
mov
movsb
or
inc
pushf
mov
sub
prefetchnta
lahf
xor
or
arpl
enter
jne
dec
jmp
or
adc
in
push
adc
iret
cmp
fcoms
xchg
jne
test
movsb
in
or
and
adc
cmp
add
ret
push
mov
sarl
negl
fmull
dec
sti
or
dec
je
fidivrs
sbb
xchg
cs
das
push
sbb
push
out
add
in
fiaddl
sbb
push
outsb
sub
mov
cmpl
sub
je
pop
cmp
movsl
stos
imul
cmp
dec
shrl
xor
lcall
sbb
test
dec
pusha
popa
and
divb
or
pop
jno
sub
popf
and
sbb
jle
cmpsb
add
jno
jbe
pop
dec
sbb
push
lcall
sbb
adc
xchg
test
movsb
jo
pop
sbb
test
pop
fsub
adc
add
sahf
sub
dec
out
push
sub
add
imul
push
das
test
adc
mov
mov
mov
mov
sub
mov
dec
ja
cltd
rorb
sbb
pushf
leave
jae
inc
mov
xor
and
loope
mov
pop
rcrl
icebp
in
lods
ret
dec
jbe
cmp
xchg
inc
dec
xchg
repz
lock
sahf
xor
jecxz
jne
sbb
mov
fcomp
add
xchg
idivl
cmp
mov
call
cmp
int3
ss
add
sbb
adc
xorl
les
jle
inc
inc
or
push
add
daa
subb
into
inc
add
loopne
adc
je
cmp
je
loopne
push
mov
ss
mov
inc
cmp
in
dec
mov
faddl
adc
push
sbb
fimull
fdivrp
and
mov
push
sub
dec
push
repnz
pop
je
push
add
lods
mov
jg
dec
rolb
test
lahf
stos
mov
dec
mov
and
cld
jae
cmc
call
mov
adc
jo
add
sub
dec
ja
stos
mov
mov
push
js
dec
loopne
push
cmp
sti
add
xchg
dec
xor
inc
xchg
call
cmpb
mov
and
pcmpgtd
inc
push
add
mov
jno
dec
cmp
inc
ret
jp
cld
inc
adc
xchg
or
push
pop
jg
adc
push
cld
movsb
sbb
add
push
in
shl
in
enter
stos
cltd
push
dec
orl
bound
add
mov
sbb
orl
mulb
or
je
adc
or
insb
mov
jl
andl
and
pusha
in
add
fwait
and
in
or
inc
and
sub
int
xlat
sub
sub
sbb
das
lea
or
dec
add
jae
js
scas
nop
or
jge
int
in
adc
insb
and
inc
and
movsb
cmp
aam
add
mov
cmp
pop
xor
cld
inc
sarb
jle
movsl
arpl
cmp
mov
and
dec
fnsave
xor
add
mov
xor
bnd
dec
dec
sarb
mov
add
insl
push
aaa
es
or
push
or
insb
popf
jg
rclb
jns
and
mov
jno
push
adc
cmp
jae
push
mov
cmpl
cmpsb
lahf
andl
dec
sub
jne
push
imul
inc
test
push
call
add
mov
mov
dec
or
sbb
pop
add
mov
repz
pop
lcall
loope
cmp
push
sub
adc
lock
add
xor
rorb
or
fldenv
mov
stos
add
push
movsl
jb
push
or
mov
test
push
pop
fbstp
ret
lock
es
fimull
dec
fsubl
je,pn
jle
popf
add
pushf
lea
addb
dec
je
cltd
cmpl
mov
in
inc
xor
or
in
add
pop
int3
clc
mov
mov
xchg
call
aam
stos
in
and
aas
int
pop
in
push
testb
sbb
call
xchg
out
fs
mov
pop
inc
jnp
add
loopne
loope
jns
add
int3
sbbl
in
xchg
loopne
loop
mov
jb
mov
mov
incl
jne
cmc
add
pop
xor
loope
imul
cli
push
cltd
std
jle
push
gs
in
dec
sbb
popf
add
sub
setb
sbb
add
pop
jg
jne
xor
lahf
push
fs
push
int3
pop
or
adc
in
push
shlb
mov
pop
inc
xlat
sbb
or
add
lretw
loopne
and
dec
and
scas
pop
in
pusha
sub
sbbb
clc
mov
add
lahf
sbb
push
inc
inc
mov
add
mov
mov
jo
sarl
mov
pop
gs
jne
daa
jne
mov
loope
and
jmp
mov
add
push
mov
addl
fmuls
xchg
xchg
sub
add
leave
arpl
push
cmp
pop
mov
jb
lods
jbe
dec
add
faddl
sti
lahf
rorl
jl
lcall
dec
or
or
mov
add
clc
cmp
jne
sbb
mov
aam
add
je
or
shlb
xor
scas
mov
add
leave
pop
lcall
push
xlat
push
push
addl
sub
push
les
jb
orl
fwait
insb
fwait
jns
lahf
ja
dec
lahf
insl
sub
mov
std
inc
cmp
call
cwtl
or
jmp
jae
cmpl
fmul
in
nop
pop
rcrb
adc
sbb
rcrl
sbb
imul
pop
lods
test
in
jo
call
les
jnp
sub
les
jb
push
shrb
sbbl
test
icebp
add
and
outsb
xlat
cs
sub
jge
adc
out
cmpsl
jo
or
xchg
adcl
sbb
and
sub
shll
mov
push
jo
popf
call
loop
adc
in
jnp
pop
and
das
or
mov
add
xchg
mov
mov
popf
mov
rclb
imul
dec
cmpsb
adc
fs
outsb
push
sub
sub
fcmovb
inc
add
dec
lock
xchg
jge
clc
sbb
or
fs
test
popa
das
pop
scas
push
cmp
push
jb
or
mov
cmp
jbe
cmp
inc
push
leave
push
xor
mov
xchg
rcr
enter
fnop
xchg
cmp
jno
je
add
bound
xchg
inc
lock
bound
inc
push
dec
dec
leave
mov
cmpb
jns
xchg
mov
xor
sbb
xchg
lock
popa
scas
xor
popf
add
in
adc
fwait
add
stc
add
test
push
out
subl
add
call
mov
cmp
push
cmp
int
push
ret
push
pop
pop
test
add
sub
and
mov
jne
clc
test
xchg
insb
jecxz
ds
sub
mov
lea
cmpsl
fs
pop
push
dec
nop
pusha
nop
push
push
lret
adc
nop
sbb
test
pop
fildl
fs
repnz
repz
mov
and
lock
push
shlb
xor
std
aaa
mov
ja
push
pop
inc
mov
mov
data16
xor
inc
xor
aaa
out
call
icebp
cmp
fdivs
andl
enter
sbb
adcb
xchg
mov
scas
aad
xchg
mov
push
add
adc
aam
je
inc
adc
sbb
jmp
mov
sbb
int
int
fsubrl
and
cwtl
dec
mov
or
rol
and
jle
jbe
xlat
rorb
fwait
sub
sub
push
push
ret
add
sbb
lds
push
mov
sbb
bswap
mov
rolb
or
rclb
popf
sub
adcb
popa
adc
inc
jecxz
jecxz
jo
daa
xchg
scas
mov
leave
mov
je
es
sarb
lds
adc
add
inc
imul
je
or
cmp
inc
int
pop
jae
or
sub
push
bnd
adc
sub
insb
xor
add
sti
sbb
or
or
rcl
aaa
jbe
aad
fisubrs
addb
arpl
scas
mov
dec
stos
inc
sub
fcomps
adcb
out
xorl
and
or
sub
or
sbbl
das
add
mov
xlat
mov
lahf
adc
and
push
jo
ljmp
arpl
fmull
dec
bound
add
or
pop
das
push
inc
and
push
mov
jl
jl
xor
and
xor
cmp
popf
stos
mov
sbb
adc
add
or
xor
sbb
ret
add
mov
dec
mov
aad
pop
in
gs
cmp
cltd
sbb
sub
sbb
and
and
sbb
add
sbb
mov
loope
arpl
sub
push
ss
adc
and
sub
pusha
jl
ficoms
pop
cmp
hlt
test
pop
xorl
in
call
icebp
push
xchg
add
stos
xchg
shl
je
inc
add
mov
jns
rcll
adc
push
lods
lods
adc
scas
nop
sbb
pusha
mov
daa
adc
add
lods
xchg
es
test
pop
add
pop
push
push
ja
and
adc
xor
adc
mov
sbb
jl
push
call
shll
popfw
cmp
cs
cld
adc
call
clc
pop
pop
mov
aas
push
cwtl
inc
pop
add
in
and
fisttpl
jbe
sub
lea
rcrl
ljmp
cmp
inc
imul
dec
loope
test
dec
cmpsb
add
add
sub
mov
mov
cmp
inc
sbb
cmp
push
js
jne
mov
pop
inc
insb
add
and
add
sub
pop
add
xchg
fidivrs
inc
push
mov
test
inc
sti
jl
test
sahf
fstps
xchg
jg
cmp
addr16
test
jnp
decb
or
push
cltd
pop
mov
jo
or
jg
inc
xor
xchg
dec
add
jmp
sub
push
lods
mov
das
test
jne
adc
push
es
xor
test
icebp
inc
mov
ja
add
pop
aas
sub
jge
loopw
das
sub
hlt
or
dec
xor
xchg
xchg
das
das
xor
cmp
cmpsb
inc
sub
insb
popf
xchg
xchg
inc
dec
fs
mov
imul
add
addb
add
incb
add
jg
or
inc
add
cmp
ja
and
inc
mov
icebp
sub
jg
dec
mov
outsl
and
jno
jne
jmp
cmp
xor
imul
pushf
push
mov
rep
insl
shrb
mov
scas
push
add
cld
push
test
mov
mov
mov
sarl
push
pusha
add
dec
pop
jns
jmp
iret
inc
adc
daa
cmpb
ss
add
sbb
loopne
adc
jmp
andb
adc
push
leave
or
push
push
mov
in
xchg
call
movsb
mov
pushf
xchg
stc
xor
shll
inc
sbb
cmp
and
das
adc
mov
xchg
cmc
jl
cmp
push
mov
push
mov
xchg
mov
mov
jle
add
xor
jle
dec
sub
dec
leave
xchg
and
pop
inc
mov
xor
jge
enter
je
pop
cmp
sub
and
pop
dec
push
cmp
pop
sub
and
mov
inc
sti
rep
inc
inc
xor
outsb
sahf
mov
or
sbb
jmp
sub
jae
test
push
subb
add
push
les
andl
mov
dec
jnp
and
jne
push
push
repnz
and
cmpsb
xlat
mov
and
push
mov
hlt
pop
loopne
adc
imul
inc
sbb
icebp
xchg
out
push
sub
inc
add
adc
pop
adc
xorl
aas
mov
and
popa
mov
rorb
insb
loop
pusha
adc
jno
fistl
jecxz
inc
pop
and
jno
test
sub
xchg
into
add
or
scas
mov
sbb
iret
test
fildll
mov
jmp
lret
pop
int3
jae
sbb
mov
push
push
push
sub
rcrl
adc
sbbb
cmp
and
and
xchg
pop
mov
push
push
cltd
cltd
cmpsb
or
hlt
lock
and
jle
inc
mov
push
dec
xor
or
push
movsb
movsl
push
push
add
addr16
jo
outsb
jle
push
cli
loope
adc
decl
fcomp
ret
cmc
push
push
xchg
adc
inc
test
push
in
sub
xor
xlat
mov
adc
pop
int3
arpl
cmp
loopne
add
xor
or
add
inc
xor
roll
or
and
sarb
dec
jne
adcl
idivb
inc
add
adc
push
loope
sbb
push
dec
mov
test
and
and
and
push
cmp
dec
ss
inc
punpcklwd
or
jns
jb
mov
loopne
insb
sub
sub
into
pusha
fnstcw
fidivs
or
adc
pop
adc
in
inc
sbb
push
push
add
jb
inc
mov
pop
add
add
add
testb
pop
jle
test
adc
add
xor
or
or
xchg
xchg
push
mov
shlb
cmpsl
add
cmp
in
sahf
add
xorl
aas
add
int
and
add
lea
subb
or
dec
mov
hlt
sub
sar
into
mov
or
add
rcrb
mov
sbb
xchg
push
mov
mov
sub
xor
ret
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
fstpt
sahf
ja
test
mov
insb
sub
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
and
icebp
mov
ret
and
shr
loop
jo
xor
stos
or
jl
adc
or
xorb
pop
fwait
push
ret
notb
outsb
int3
aam
je
push
cmpsl
sub
or
lcall
fwait
mov
and
inc
andl
push
mov
inc
or
inc
add
sbb
or
cmp
ss
outsb
cwtl
add
sbb
xchg
and
imul
dec
mov
sub
mov
adc
adc
rcrb
scas
mov
mov
rorb
stc
jne
sub
outsb
sar
inc
aaa
xor
mov
mov
add
cmp
jb
jae
push
ja
xor
lret
cmpb
dec
hlt
jae
or
test
mov
jo
push
ret
xchg
scas
repz
icebp
sub
jl
pop
inc
xor
mov
inc
mov
nop
add
push
inc
cli
sub
mov
xchg
or
sub
dec
jae
adc
cmp
es
and
adc
cmp
shl
cltd
pop
sbb
aaa
fidivrs
pop
and
push
mov
pop
ret
mov
pushfw
cmp
and
jb
adcl
sbb
push
test
xchg
out
cli
cmovge
xchg
jne
fdivs
int3
xchg
pop
fidivl
mov
aas
jo
out
jmp
sbb
shr
andb
nop
repz
or
or
popa
mov
xlat
fdiv
call
out
stos
cmpsl
mov
push
push
mov
sbb
xor
push
cmpsl
push
ds
je
test
bnd
subl
jp
adc
cmp
cmp
je
jl
add
mov
mov
and
inc
push
cmp
or
or
mov
adc
or
in
adc
dec
addr16
arpl
and
scas
stc
sbbl
jmp
sbb
and
popa
or
push
and
je
in
in
or
or
or
ja
push
push
test
pop
mov
mov
clc
xor
dec
pushf
je
pop
mov
adc
or
dec
pop
loope
stos
test
test
call
push
jmp
jmp
dec
mov
adc
adc
jecxz
xor
mov
dec
and
xor
push
and
inc
aas
and
sbb
enter
inc
push
cmp
clc
or
and
mov
xchg
es
inc
push
cmp
dec
cmp
cmp
js
push
cmp
movsb
sub
les
cmp
test
sbb
mov
cmp
pop
faddl
jb
push
xor
fs
in
xor
mov
xor
or
mov
mov
mov
hlt
jmp
pop
call
cmp
xchg
fs
or
in
pusha
sbb
lret
std
repnz
mov
inc
or
sbb
adc
call
sbb
sbb
mov
add
push
mov
pop
mov
xor
xor
adc
fwait
adc
mov
cmp
je
push
fcoms
subl
ja
pusha
cmp
sti
sub
mov
cmp
adcb
lds
xor
dec
dec
roll
or
mov
in
loop
fimuls
rorl
enter
push
int3
mov
shr
aam
mov
mov
push
push
cmpsb
mov
mov
sub
jecxz
cmp
jg
add
mov
std
sbb
mov
sbb
push
fs
jmp
jp
mov
cmp
sub
push
mov
loope
xor
jbe
sbb
dec
int
dec
loopne
addb
add
mov
push
or
xchg
sub
jne
hlt
and
pop
lock
add
mov
mov
pop
jne
xchg
jne
ret
leave
cmp
and
test
imul
adcl
lock
mov
rcr
push
adc
sbb
test
aam
push
xor
adc
adc
loopne
insl
push
aas
inc
push
push
mov
mov
sbb
dec
xchg
pop
or
cld
mov
add
mov
adc
sti
add
aas
or
je
xchg
xchg
bound
popf
in
push
cmp
push
cmp
fstp
ja
add
push
je
sub
mov
xor
adc
pop
jns
add
mov
js
or
adc
inc
mov
test
xchg
xor
icebp
test
or
gs
pop
out
jmp
sbb
mov
nop
jge
subb
push
sub
mov
or
and
adc
pop
subl
jp
test
ficompl
push
inc
hlt
add
lret
mov
and
leave
in
das
add
add
sub
insb
mov
mov
adc
clc
lock
xorb
sbb
test
rcll
rorb
cs
ja
fildl
or
in
and
int
nop
mov
and
pop
add
xor
or
add
mov
add
leave
popa
xor
push
in
jmp
js
movsl
call
mov
jl
push
push
out
loope
jno
lcall
and
call
ret
in
cmp
aam
mov
xchg
adc
js
cs
pop
cmp
sbb
aam
rol
dec
lahf
mov
xor
jmp
nopl
and
pop
jnp
dec
push
call
add
or
daa
xchg
mov
pop
ja
in
cli
aam
add
fmuls
adc
push
fwait
fwait
inc
mov
adc
mov
dec
fistl
test
push
sub
aam
insb
and
dec
push
fbld
add
je
jo
pop
jno
or
jb
movsl
test
or
pusha
jg
js
clc
jl
mov
adc
push
pusha
enter
adc
jbe
jmp
lahf
outsl
addb
rclb
jbe
cmpsb
dec
lds
lcall
inc
add
out
fdivrl
mov
push
pop
test
scas
mov
push
push
test
inc
int3
ja
cmpsl
inc
cmovnp
mov
ret
jae
loopne
ret
or
dec
aam
stc
pusha
xchg
inc
sub
addl
adc
lods
push
dec
jp
xor
in
aas
loopne
scas
or
add
data16
subb
pop
rorb
xor
sub
jne
and
jb
adc
shr
mov
add
xchg
pop
push
push
jmp
js
rorb
push
icebp
dec
jo
jae
mov
mov
movb
and
or
cmp
divl
jg
and
push
jb
push
lea
adc
push
pushf
orb
and
push
clc
call
insb
jecxz
test
or
xchg
loop
loop
movsl
faddl
test
push
and
xchg
cmpl
in
push
push
inc
fsubrs
ret
xor
jmp
das
push
or
pop
adc
sahf
push
shlb
xchg
in
pop
pushl
pop
or
lock
je
leave
fs
test
mov
call
mov
nop
adc
aaa
add
int
xchg
daa
loopne
nop
xor
sub
dec
or
mov
pop
pusha
lods
fs
cli
test
pop
xchg
mov
or
aam
out
or
xchg
push
xor
push
xchg
add
sub
insl
push
push
lea
test
mov
or
test
test
pop
into
push
faddl
into
popl
loope
shrb
adc
aam
push
shlb
sub
pusha
or
mov
xchg
fidivl
test
or
rolb
nop
dec
or
outsl
gs
loope
xor
xchg
pop
aam
sbb
or
pusha
push
xchg
cmp
push
or
out
loope
sub
dec
pusha
mov
push
sbb
jo
mov
pop
popf
sbb
push
pop
xor
divl
js
mov
orl
dec
loopne
fdivr
cmpsl
xor
push
sbb
test
pop
push
mov
push
outsl
mov
adc
dec
jge
stc
push
and
pop
rolb
push
mov
xor
scas
lret
sarl
mov
subb
xchg
call
les
xchg
rcrl
popf
jmp
gs
enter
push
sub
and
lcall
pushf
loop
push
add
xchg
mov
and
adc
loopne
adc
mov
lahf
and
push
add
inc
int3
inc
push
nop
lcall
les
add
adc
scas
lea
and
or
or
add
sbb
sarb
add
jbe
push
adc
and
adc
jo
push
fldenv
cwtl
pop
iret
push
pop
repz
test
push
adc
inc
and
jnp
cs
sbb
adc
push
mov
dec
push
arpl
mov
pop
gs
add
subl
sbb
mov
fwait
sbb
enter
fwait
xchg
sub
xchg
or
rclb
insb
ss
test
push
mov
xlat
inc
inc
dec
push
repz
orb
mov
in
data16
popf
cmp
dec
xor
mov
add
into
aad
ss
push
add
iret
subb
dec
jecxz
fucomip
or
sbb
xlat
in
and
sub
sbbl
mov
fistl
fstpl
mov
stos
iret
add
or
call
popf
sub
adc
popf
adc
and
out
and
xor
test
sbb
incb
pop
xor
xchg
fwait
lods
mov
andl
mov
push
push
sub
mov
data16
movsb
stos
and
gs
xchg
mov
dec
pop
cmp
and
dec
popa
mov
inc
test
aam
and
sub
push
sub
mov
in
dec
dec
cmp
mov
lea
div
enter
adc
pop
and
xor
push
sub
push
cmp
cmp
nop
push
push
xor
mov
hlt
inc
or
or
mov
or
add
mov
add
sbb
shr
sarb
rolb
jo
or
add
inc
movsl
fnstcw
or
jp
clc
adc
sub
lods
push
mov
add
ds
jmp
adc
divb
jne
adc
mov
jne
mov
or
adc
movsl
test
mov
jb
jl
nop
xchg
cwtl
pushf
arpl
or
inc
cmp
push
pusha
cld
mov
inc
pop
push
sub
pop
lods
ja
shrb
scas
mov
fmul
or
add
insl
inc
cwtl
aas
clc
mov
test
lea
mov
jg
jns
adc
pop
sbb
std
mov
mov
fisttpll
mov
adc
in
fidivl
scas
icebp
fidivl
out
lea
or
xor
ret
pop
in
mov
xchg
je
aaa
push
jge
mov
call
js
or
cmp
nop
mov
jge
adc
sbbb
xchg
mov
cmp
imul
scas
outsl
xchg
and
mov
mov
adc
jmp
push
add
mov
push
mov
jmp
xor
rolb
cmp
and
and
xchg
mov
sub
dec
sbb
pushl
ja
sarl
lahf
lods
mov
test
ret
add
outsl
mov
sbb
mov
xchg
adc
and
and
dec
dec
in
cmp
sub
sub
mov
cmp
pop
pop
sbb
mov
out
pop
movsb
xchg
lret
xorl
orb
inc
into
les
jne
pop
or
mov
das
push
pop
jo
ret
leave
adc
inc
daa
pop
jns
outsl
xlat
push
push
repz
mov
in
addl
mov
je
roll
add
loopne
push
movsl
sbb
mov
xchg
adc
movsl
mov
outsb
inc
cwtl
sub
lock
inc
jl
andl
jno
outsb
xchg
mov
sbb
xlat
movsb
add
push
lea
movsb
mov
add
cld
sub
add
roll
push
add
leave
rolb
push
dec
jno
add
push
ret
out
ljmp
ljmp
test
shlb
mov
mov
inc
or
xor
cs
mov
rcrb
mov
orl
xchg
push
out
decl
sbb
cwtl
dec
xor
inc
inc
inc
inc
push
jl
pop
dec
daa
mov
or
dec
cmp
mov
inc
pop
mov
inc
xchg
mov
lock
mov
sbb
data16
idivb
cltd
push
or
in
dec
add
inc
rol
or
pop
cmpb
cltd
or
pop
push
mov
lea
mov
pop
push
shll
inc
popf
pop
cld
or
sti
mov
insl
into
stos
push
pop
cmp
lock
fstpt
push
in
push
gs
hlt
add
nop
loopne
popa
lock
sbb
xor
test
movb
add
sbb
xchg
push
adc
or
out
das
test
pcmpeqw
cmpl
add
mov
out
ja
cli
jbe
push
iret
sti
lea
lahf
lods
inc
add
xor
insl
add
faddl
imul
sub
and
xor
cmp
test
jnp
push
xchg
pop
ret
bound
lock
lret
xlat
pop
pop
sub
lock
repnz
int3
mov
jae
clc
add
fidivrl
inc
inc
jb
fistpl
push
and
mov
in
push
or
mov
in
jl
mov
jge
or
addl
mov
fsubrs
ret
popa
push
push
add
lods
jecxz
popa
in
and
cmp
push
sub
rcrb
fsubs
fdivl
push
lods
adc
push
pop
sub
mov
loopne
add
pushf
and
push
adc
cltd
pusha
add
dec
clc
pop
lock
rolb
push
mov
and
sbb
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
pop
mov
loop
fcompl
mov
ss
das
push
dec
mov
push
loop
leave
jns
ja
jns
lock
adc
mov
add
push
inc
mov
adc
mov
imul
mov
jecxz
inc
cmp
movsb
test
popf
dec
pop
jp
cmpsl
ss
mov
lods
pusha
add
or
popf
lret
jmp
outsb
lock
cmp
inc
inc
dec
sahf
incb
mov
sahf
cmp
mov
lcall
and
icebp
cmpsb
or
dec
mov
or
inc
hlt
loopne
xchg
pop
push
mov
hlt
mov
inc
add
adc
or
push
das
cld
nop
fistl
sarl
cmpsl
jns
or
or
cmp
lods
ret
dec
jp
je
and
adc
std
add
data16
sub
sbb
sub
jle
and
test
and
cmp
jg
outsb
adc
imul
or
outsb
add
fldt
jl
push
jge
push
jle
loopne
out
xchg
push
imul
xchg
cmp
lock
in
xor
andb
jge
lret
imul
xor
push
lock
shr
or
je
push
cmpsb
dec
cmp
xor
lock
sbb
xor
repnz
and
fs
inc
jmp
inc
jo
add
cs
addr16
and
jne
or
inc
cld
lock
sbb
iret
adc
or
insb
or
movsl
push
or
test
push
rolb
iret
pop
xor
or
movb
idiv
lret
jmp
pop
cmpsb
lods
push
mov
inc
dec
pusha
or
push
mov
pop
je
mov
mov
fstsw
sub
mov
dec
seta
jle
mov
mov
js
jle
push
mov
sbb
andl
and
adc
push
mov
scas
add
shr
cmp
jp
add
fdivl
lret
xchg
lret
mov
xchg
les
aam
in
add
test
lock
mov
add
stos
cmp
sbb
jo
jl
push
inc
movsb
adc
mov
add
stos
pop
push
push
dec
stos
nop
jns
mov
movsb
in
jns
adcb
test
add
mov
adc
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
xor
push
test
out
or
and
dec
cmp
loop
push
divl
jo
cltd
rcl
xchg
pop
add
pusha
xchg
jb
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
cli
loopne
arpl
cmp
lea
test
push
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
pusha
std
add
mov
xchg
sub
les
or
and
pusha
add
imul
jno
scas
mov
je
xlat
clc
xor
mov
add
xorl
add
dec
rolb
pop
add
jo
lahf
xor
js
mov
adc
addb
cmp
mov
movsb
sub
fistpl
fcomps
cmp
mov
test
push
orl
pop
jno
xchg
add
mov
mov
cwtl
pop
cmpl
xor
pop
hlt
push
into
dec
cmc
xchg
or
loope
in
dec
xlat
cwtl
push
push
xchg
and
add
xchg
imul
mov
jne
ss
mov
incl
adc
je
cltd
test
scas
test
gs
pop
cmp
add
enter
sub
rorl
add
jmp
and
inc
cmc
mov
jge
stos
push
add
cmp
push
xor
mov
nop
call
dec
pop
insb
add
cmp
cmp
mov
push
xor
push
call
mov
cmp
imul
imul
in
dec
xchg
xor
repnz
jle
add
adc
cmpsl
mov
call
mov
inc
xor
push
pusha
inc
test
cmp
inc
cmp
loopne
sub
insl
lea
adc
divb
xor
loop
add
shr
add
fcom
loope
add
sbb
adc
not
cmp
cmp
mov
mov
ret
shr
cmp
jbe
add
jmp
add
pop
rcr
inc
dec
gs
and
add
add
dec
inc
loopne
jg
adc
mov
mov
or
mov
call
xchg
dec
adc
test
xchg
push
dec
mov
mov
cltd
or
and
inc
loope
punpckhbw
scas
mov
jo
lods
or
mov
mov
ss
mov
mov
arpl
cmp
dec
mov
das
sarb
inc
adc
fnstcw
rorl
xchg
imul
jbe
mov
and
and
push
pop
sahf
inc
loop
jl
flds
sbb
aad
inc
mov
mov
mov
jl
xchg
push
or
xorl
test
xchg
les
je
cmc
xor
mov
push
or
sbb
mov
sbb
xor
out
push
or
mov
push
jb
push
lea
sbb
lods
and
sub
subl
nop
mov
rcl
sti
push
push
stos
and
xlat
adc
je
leave
call
jmp
mov
ret
pusha
dec
into
add
ret
or
sub
xlat
add
pop
adc
test
jae
push
in
cmc
cmp
mov
push
jb
mov
insb
imul
add
call
adc
adc
sbb
inc
call
sbb
jnp
cmp
sbb
adc
imul
mov
inc
add
dec
enter
push
call
repz
cwtl
or
or
xorb
ljmp
cmp
sub
loopne
in
push
iret
push
test
add
fnsave
push
and
sahf
xstore-rng
cmpsl
add
jmp
insl
add
fmuls
jne
push
add
or
inc
mov
mov
je
int3
movsb
scas
jns
mov
dec
insb
cs
sbb
ss
je
inc
dec
sub
pushf
sub
jno
int3
outsb
es
or
xor
inc
push
sbb
push
or
and
mov
push
xchg
and
in
rorb
add
adc
fwait
js
shlb
push
mov
cmp
xchg
jecxz
repnz
ss
stos
mov
sub
push
mov
xchg
int
jns
jnp
push
pop
fcoms
or
push
loop
xchg
jnp
push
pushf
inc
movsl
das
insb
in
inc
adc
lods
xchg
mov
pushf
pop
les
test
pop
push
add
lods
leave
vpinsrw
aam
rcr
les
xchg
fistpll
ret
stos
dec
xor
sbb
aaa
inc
add
shll
inc
fsubrs
aam
xchg
xor
mov
aaa
pop
shl
in
and
mov
movl
and
add
fs
subl
or
mov
mov
cmp
or
repz
push
push
xor
sub
dec
hlt
xor
add
es
push
pop
cmp
stos
mov
xchg
test
lcall
es
mov
jb
or
test
ret
push
cwtl
push
mov
jb
je
fildl
cld
push
jecxz
sub
xor
mov
or
cltd
lods
lea
ret
pop
pop
adc
inc
xchg
or
sbb
pop
add
push
cmp
cmp
and
push
add
xchg
and
mov
xor
sub
fdivr
into
idivb
push
or
sbb
and
popa
xor
push
mov
in
aad
jmp
push
cmp
xor
xchg
out
test
cltd
push
ret
dec
call
jne
inc
xchg
mov
cwtl
pop
add
add
dec
sbb
jmp
cltd
mov
inc
je
js
add
in
lret
dec
mov
xchg
ja
jp
xor
cmp
mov
cli
sar
dec
pop
gs
pop
mov
in
adc
sub
ja
fcoml
dec
popa
jp
ja
cmpsl
push
mov
aad
int
jo
mov
jns
je
push
movsl
insl
fildl
or
insl
xorl
xor
add
adc
lods
push
nop
in
lods
repnz
jp
sbb
adc
popa
mov
adc
jo
push
adc
xor
pop
sbb
inc
flds
xchg
jb
or
xchg
test
adcl
ja
sbb
lock
in
lea
mov
loopne
orb
js
push
adc
pop
jns
inc
jecxz
cmp
fwait
mov
pop
divb
pop
cmp
sbb
add
mov
scas
sti
testl
call
aam
push
cmpb
xor
pop
loope
roll
cmp
push
cltd
push
cltd
sub
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shlb
pop
je
inc
pop
loopne
fmull
add
mov
add
push
jmp
ret
fstl
mov
les
addr16
pop
pop
or
ret
xchg
loopne
jo
mov
pop
shrl
mov
mov
fs
jbe
jl
or
test
sahf
xchg
pop
push
and
dec
pop
mov
sub
cmp
adc
lods
cmovae
inc
aaa
call
sbb
dec
sbbl
rolb
push
add
loop
push
mov
mov
add
dec
pop
inc
fmuls
push
aaa
loopne
mov
call
orl
adc
leave
mov
mov
cmpsl
push
clc
mov
ret
cmp
jbe
push
mov
push
push
mov
mov
test
imulb
sbb
jb
stos
pop
lods
ret
mov
xor
pop
pusha
leave
push
push
push
insl
lret
and
sub
xor
ss
and
bound
sub
mov
xorb
inc
cmp
loop
pop
mov
test
xor
or
int3
in
pop
mov
cltd
repnz
and
and
pop
aaa
dec
xor
or
jge
jbe
cmp
int
pop
add
sbb
popf
mov
movsl
add
or
mov
and
and
push
sub
cmp
xor
pusha
pop
mov
add
clc
aam
push
adc
adcb
push
adc
pop
andl
inc
fwait
gs
inc
test
nop
mov
int
sbb
int3
fwait
or
and
push
icebp
scas
add
stc
mov
xchg
jo
or
insb
xlat
add
nop
sub
lods
lods
les
mov
hlt
mov
pop
pop
pop
pop
les
push
shrb
add
adc
aas
adc
push
out
rcl
jne
and
add
mov
xchg
inc
mov
xor
adcb
sub
mov
imul
dec
or
mov
cld
push
push
adcl
sbb
xchg
shl
rclb
int
pushf
xor
push
sbb
inc
or
mov
mov
scas
or
add
xchg
jl
or
test
add
xchg
dec
enter
sub
push
xchg
mov
xor
mov
popa
fucomip
add
add
add
sub
inc
add
roll
fwait
xor
or
add
leave
mov
push
loope
in
push
xor
push
add
or
rcrb
cmp
je
dec
cli
dec
rcrb
in
std
sbbl
jne
push
mov
aad
loopne
or
xchg
jo
xlat
arpl
jmp
push
xor
pusha
or
dec
and
pop
into
sub
add
jo
orb
jmp
xor
push
adc
test
cs
lock
mov
xchg
push
push
sarl
mov
cmp
xor
dec
pusha
xor
jecxz
mov
or
movsb
cmp
add
xor
std
add
lret
xorb
pop
out
ljmp
and
not
or
push
adc
addb
adc
dec
pop
cmp
aaa
xor
and
pop
fmuls
add
mov
push
loope
sub
push
sbb
icebp
out
clc
loopne
push
jecxz
sbb
loope
xor
inc
movsb
scas
imul
mov
test
imul
mov
inc
test
cmc
shrl
jp
sub
outsl
inc
xor
in
inc
xor
sar
xchg
jb
jmp
test
not
push
inc
pop
and
pop
adc
add
add
pop
rcrb
hlt
stc
or
and
and
out
sub
mov
xchg
and
les
popa
jmp
mov
call
cltd
mov
dec
push
adc
arpl
sbb
mov
pop
lds
clc
imul
adc
xorl
mov
add
push
fstl
inc
push
pusha
sub
or
dec
scas
movsb
pop
in
push
cmp
add
adc
jb
inc
mov
push
bound
or
or
ds
je
into
ja
dec
push
sub
add
sbb
pusha
or
stos
pop
or
adc
sti
in
push
add
leave
repz
stos
stos
jno
stos
adc
pusha
add
or
test
cmp
pop
loop
jne
mov
cli
mov
ds
and
adc
adc
jl
inc
or
mov
and
ret
nop
testl
mov
add
call
lods
add
xchg
push
push
inc
test
sbb
dec
cli
repz
inc
sbb
scas
or
sbb
push
cmp
std
sbb
fiaddl
or
jne
mov
jmp
fstpl
arpl
jg
enter
mov
mov
lock
pusha
or
out
movsb
inc
fldl
incb
push
push
movsl
dec
mov
hlt
fstl
lods
dec
add
inc
fcomp
fnstsw
xlat
xchg
mov
mov
clc
pop
fsubr
pop
faddp
andl
sbb
add
loope
pusha
mov
push
mov
cs
pusha
jno
jmp
mov
inc
inc
loopne
lods
mov
push
add
mov
data16
into
icebp
enter
imul
es
push
loopne
adc
mov
out
sbb
fdivrs
sub
mov
clc
xor
cltd
cmp
add
addr16
clc
cmp
mov
scas
push
and
jnp
xor
push
or
mov
or
dec
push
dec
adc
add
inc
jmp
sub
arpl
cmp
pop
outsl
mov
xchg
movsb
movsb
jo
out
insl
cli
adc
cli
mov
mov
inc
aaa
push
sub
mov
int3
dec
sbb
popa
jl
outsb
push
xchg
jp
sub
mov
jne
pop
in
out
test
jg
orb
add
mov
pop
loope
or
push
jmp
mov
cld
xor
dec
hlt
jge
and
shll
add
dec
and
adc
fnsave
pop
cmpsl
enter
jmp
pusha
test
dec
pusha
or
int3
lea
pushf
std
cmp
push
pop
cmc
mov
cwtl
ja
mov
stc
test
adc
jne
push
push
ret
push
adc
ja
xor
inc
pop
mov
rorb
into
inc
add
xchg
fs
push
sbb
push
dec
jns
inc
jno
mov
adc
push
popa
jo
pusha
mov
cmpsb
and
pop
bound
pop
fisubrl
pop
aam
push
mov
bound
inc
addr16
lret
jmp
cmpsl
mov
andb
mov
cmp
dec
cmp
lcall
adc
add
ret
and
and
pop
insb
mov
decl
inc
adc
push
sbb
imul
adc
xchg
xor
cs
mov
mov
insl
loope
stos
loopne
gs
mov
adc
fldl
pop
repnz
das
lock
push
or
sti
jo
add
adc
imul
mov
or
push
adc
in
sbb
or
inc
or
kmovw
add
or
rolb
subb
aaa
mov
xchg
xchg
pop
imul
stos
xor
and
inc
or
or
fcoms
mov
popa
sub
out
push
movsb
jo
lods
shlb
and
cs
cmp
pop
mov
ret
and
inc
insb
add
sub
adc
bound
adc
inc
or
add
fsubl
movsb
scas
mov
lret
ret
aas
ret
jae
fdivrl
mov
xchg
mov
pusha
andl
cmpsb
in
fdivl
mov
ret
inc
inc
mov
push
mov
lock
orb
insl
adc
jg
daa
or
sub
and
add
out
lods
cmpsl
mov
push
add
rorb
pop
dec
mov
scas
inc
xor
push
lret
inc
pusha
mov
popa
mov
push
lea
xchg
pop
pop
adc
hlt
repz
hlt
sub
inc
pop
and
add
jns
lock
mov
dec
inc
mov
repz
gs
push
push
hlt
xor
or
cmc
sbb
or
push
fwait
stos
sbb
sub
rorl
js
and
xorl
aam
mov
mov
rorl
cmp
xor
loopne
jae
addb
and
push
cs
jecxz
mov
movsb
mov
mov
push
lret
cs
mov
nop
sub
imul
andb
or
test
push
add
jmp
jae
mov
popa
ffree
in
fstp
mov
add
mov
arpl
sub
xor
add
xor
and
add
sbb
outsb
push
mov
loope
add
leave
and
cmp
ljmp
lods
mov
sbb
js
mov
sbb
call
or
xor
jge
aad
lea
cmpsl
daa
or
push
test
push
mov
and
sbb
mov
mov
in
notb
xor
cmp
pop
or
subb
pop
pop
lods
xchg
mov
mov
ds
push
pop
lods
xor
loopne
loopne
and
test
sbb
and
inc
xchg
call
popf
sbb
insl
movb
and
jecxz
mov
sarl
mov
lods
push
jp
sub
aaa
sub
push
sub
xor
fnsave
subb
or
ds
test
mov
inc
es
push
and
call
enter
cmp
pop
xlat
jmp
xor
sbb
adc
popa
lea
xchg
sbbl
ret
jb
loop
in
dec
test
loope
stos
or
enter
adc
dec
and
or
inc
pop
or
and
inc
and
or
ljmp
cmp
call
mov
cmp
iret
xchg
insb
sub
adcl
and
inc
push
inc
push
inc
xlat
inc
adc
aam
xor
add
jne
cmpsl
dec
push
push
sub
mov
xchg
or
mov
ds
xchg
inc
cmp
push
jbe
movsl
mov
push
sbb
xchg
aas
xor
jne
dec
sbb
or
lock
test
clc
cmp
pop
cltd
sbb
leave
ret
pop
add
or
andl
cmp
and
jnp
xchg
pop
lock
mov
mov
leave
fimull
lret
mov
rclb
test
rclb
movsb
inc
sub
adc
push
mov
and
mov
rcrb
cmpsl
or
js
aam
in
push
dec
mov
imul
dec
cmp
lods
les
inc
xor
fildl
test
adc
mov
cwtl
fs
loopne
in
in
loop
js
mov
sbb
jbe
pop
jne
int3
mov
sbb
add
add
arpl
inc
lcall
dec
or
and
sub
sti
jb
enter
adc
and
and
rcrb
fistps
add
std
sbb
push
add
jbe
enter
push
stos
lock
and
add
mov
leave
push
pushf
lock
mov
cmp
imul
sbb
out
jns
loopne
rclb
ret
leave
loopne
stc
xor
push
inc
push
fwait
sahf
addr16
es
add
inc
and
les
cmpsl
xor
add
in
testl
add
sbb
cld
or
std
lcall
aam
lock
jl
inc
mov
or
mov
ljmp
jp
aad
stc
inc
pop
push
and
xor
data16
pop
jne
fisttpl
push
stos
push
cmp
cmc
dec
inc
mov
out
sub
adc
fidivrs
out
push
adc
xchg
sub
pusha
mov
pop
movsb
inc
push
insl
movsb
nop
push
cltd
jg
push
add
int
data16
inc
rcrl
popa
mov
inc
fstpl
push
push
add
push
hlt
jge
inc
mov
adc
inc
push
adc
pop
and
cmp
mov
pop
or
shlb
inc
jle
or
or
mov
sub
outsb
inc
xchg
faddl
pushf
xor
mov
in
loopne
cmp
sub
test
test
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sarl
das
or
mov
shrb
dec
cmp
scas
push
cmp
rol
pusha
or
rcr
and
sbb
int3
sub
dec
daa
inc
sbb
xchg
sbb
sbb
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
ljmp
lahf
cmp
or
push
mov
and
push
loope
ret
sub
roll
push
sbb
pop
sarl
mov
pop
add
jae
popa
xor
and
push
jmp
loopne
cmp
into
add
push
shlb
pop
mov
mov
pop
pop
add
cmp
ret
cltd
outsb
rorb
mov
add
push
fxch
es
stos
imul
push
or
fcoml
mov
inc
or
rcr
and
jmp
adc
mov
inc
sbb
cmp
sbb
andl
and
ret
movsb
fidivs
xchg
cwtl
dec
inc
jnp
xor
pushf
cli
add
in
in
xor
inc
sbb
xchg
jge
loop
fdiv
in
cmp
je
mov
and
and
push
dec
xor
adc
xchg
add
movsb
dec
and
push
inc
add
lret
sub
push
xor
add
mov
add
or
cmp
inc
inc
dec
push
int
pusha
adc
pop
sub
cmp
or
aas
lahf
or
aas
aam
les
cmp
xchg
jl
movlps
sbb
inc
andl
dec
mov
or
loop
inc
pop
pop
lea
sub
jle
mov
xor
or
iret
or
xchg
test
mov
pop
or
pop
adc
mov
sbb
dec
add
ret
sub
add
aas
add
call
push
mov
xchg
add
sub
loop
or
or
icebp
sbbl
push
push
jno
int
xor
pop
and
in
cli
std
jmp
xor
or
cmp
cmp
daa
or
in
pushf
sbb
push
sbb
push
sahf
adc
xchg
or
or
sub
add
or
icebp
and
imul
cmp
and
sbb
and
xchg
jno
adc
xorb
pop
je
xchg
fst
pop
add
test
ffreep
xchg
rorl
aam
js
flds
push
rcrb
pop
mov
shlb
pop
and
mov
scas
cmp
fiaddl
pop
adc
jecxz
xchg
testl
cmc
lret
push
mov
xchg
scas
dec
mov
notb
addr16
nop
push
push
inc
dec
test
outsb
xor
popa
imul
jbe
stos
jno
sbb
mov
iret
pop
ret
in
add
pushf
xor
push
cmp
inc
add
push
add
ds
cltd
mov
push
pop
rolb
inc
push
xchg
push
cltd
int
push
sub
inc
dec
out
jns
je
jl
mov
sub
sbbl
adc
and
add
cmp
jl
xor
lret
into
sbb
mov
fsub
movsb
dec
movsb
loop
push
pop
mov
sub
dec
push
cmpb
ja
repnz
es
jl
sarl
push
pop
enterw
and
sahf
loop
iret
ds
std
fistpll
xor
pop
je
push
mov
mov
adc
rcrl
les
jmp
or
lret
cs
xor
sbb
cltd
inc
incb
je
or
jns
pop
sbb
repnz
push
jmp
push
sbb
sub
and
dec
loope
xchg
int
stos
xor
leave
outsl
lock
jne
jl
out
and
icebp
ret
dec
push
jge
lret
xor
xor
inc
sub
pop
loope
sub
add
sub
push
rolb
popa
push
lock
adc
sub
add
andb
fsubs
pop
inc
xor
or
lock
rcl
stc
adc
or
cwtl
js
movsb
sbb
stc
js
add
mov
lods
pop
push
ss
sbb
adc
outsl
push
jno
xor
sub
cld
rcrb
addr16
je
push
orb
inc
test
or
imul
stos
mov
lahf
and
or
inc
movsb
push
add
add
push
jb
das
mov
inc
addr16
add
or
pop
lods
cwtl
mov
rol
xorb
pop
push
cmp
or
mov
mov
and
adc
pop
stc
mov
sub
mov
mov
lea
jp
cmp
lahf
sbb
enter
cmpl
or
iret
push
or
xor
insl
popa
sub
sbb
stos
fwait
push
and
jge
add
pop
dec
inc
adc
rorb
cmp
inc
and
fiadds
jnp
int3
xchg
cmp
xor
push
cmp
insl
aaa
ret
mov
xchg
test
rolb
adc
jne
mov
mov
jmp
test
sbb
adc
mov
scas
and
mov
sar
mov
or
out
mov
adc
adc
pop
and
movsb
jmp
arpl
push
fwait
dec
lock
fdivs
push
pop
fdiv
je
mov
push
cmp
cmp
in
add
jp
mov
sub
cmp
out
leave
jne
push
jne
mov
jmp
cmp
xchg
push
rol
data16
add
movsl
mov
push
arpl
pop
dec
test
adc
xchg
jne
mov
add
and
in
push
imul
cmpsb
add
test
push
mov
lret
xor
mov
xchg
stos
mov
xchg
mov
cmpsb
shrl
ret
xor
cld
and
and
mov
dec
bound
mov
mov
roll
or
nop
add
lods
or
pusha
sub
cmp
sub
rorb
fiaddl
mov
mov
nop
mov
cmp
jge
iret
push
add
add
insl
divb
jne
add
jne
sbb
dec
pop
mov
mov
pop
popa
xor
add
loopne
movsl
call
mov
jp
cmc
xor
or
or
dec
loope
test
outsb
sbb
pop
stos
and
adc
stos
sti
push
dec
xchg
or
mov
or
int
cmpsl
or
addb
adc
pop
adc
sub
xchg
add
fimull
pusha
xchg
mov
popf
sti
sbb
adc
xor
mov
dec
push
rol
leave
and
and
and
pop
insl
mov
icebp
movsb
xor
aas
sub
or
aas
mov
push
mov
add
mov
stos
mov
cmp
repnz
adc
or
pushf
mov
push
sbb
add
add
jle
cmp
pop
iret
jge
cli
adc
test
loope
in
mov
xor
cmp
pushf
mov
mov
loopne
aam
cmp
dec
in
adc
and
mov
fsubs
cmp
push
cmp
js
push
imul
add
dec
xor
jno
mov
lahf
popa
or
popa
jnp
push
or
aaa
or
gs
rorb
icebp
repz
bound
jbe
or
test
sub
addb
sbb
mov
clc
xor
xchg
iret
fldl2t
adc
pop
bound
inc
jle
call
add
lret
and
test
mov
push
push
add
pushf
add
adc
and
or
sbb
fisubs
xor
popf
shrb
inc
ret
cld
pop
or
ja
pop
add
jl
add
ds
add
push
es
ret
cmpl
lahf
sub
xchg
repz
jo
and
or
adc
cmpsb
adc
mov
test
sub
fdivrp
ljmp
mov
push
adc
jmp
xchg
cmp
jl
push
push
push
inc
and
test
lods
pop
test
cmpsl
mov
mov
xorl
ret
xchg
popa
adc
addr16
pop
jmp
sahf
enter
pop
pop
dec
in
lahf
push
shr
jge
inc
bound
hlt
mov
cmpsb
jns
iret
or
shl
mov
mov
jne
sub
fmuls
jnp
addr16
add
add
pop
dec
loop
lret
lock
xchg
add
xor
shl
adcl
inc
dec
add
adc
roll
mov
fstpl
cwtl
sub
mov
in
xor
in
mov
out
push
mov
jl
test
push
test
mov
push
mov
and
add
les
js
and
jge
mov
mov
and
or
add
pop
dec
push
mov
add
xor
icebp
aaa
stc
lret
or
inc
lods
sub
mov
sub
inc
cmp
jne
pop
adc
mov
mov
mov
add
add
insb
nop
arpl
add
mov
ds
popa
repz
cmp
cs
enter
jecxz
lea
jmp
push
std
sbb
shl
ljmp
inc
jp
and
dec
es
jae
das
add
push
push
jo
xchg
pop
push
fadds
popa
and
adc
loopne
mov
fsubs
mov
test
mov
gs
dec
and
or
rclb
push
push
push
outsb
lcall
add
push
push
xor
sbbb
or
jb
and
insl
cmp
mov
adc
sub
andl
dec
push
dec
loope
sub
je
xor
add
and
push
dec
push
cli
cmp
adc
xchg
out
cmp
jne
or
aam
in
sbbl
push
or
cmp
xchg
add
test
sbb
imul
and
add
fsubrs
push
adc
cmc
shrb
cmp
dec
dec
add
inc
or
push
add
je
adc
js
js
ret
mov
xor
inc
push
inc
nop
stos
loope
pop
adc
pop
enter
mov
cmp
jmp
push
and
ljmp
test
add
addb
in
mov
movsb
adc
mov
and
mov
rorl
xchg
mov
add
mov
dec
or
subb
cmpb
pop
pop
cmpsl
and
mov
push
add
push
inc
push
jno
xchg
iret
dec
sbb
pop
inc
inc
sbb
adc
push
mov
call
enter
subb
stos
xchg
cmp
stos
cmp
push
test
add
xchg
mov
aam
sbb
add
pop
or
mov
pop
adc
push
in
lods
fsubl
adcb
mov
xor
jns
bound
pop
adc
leave
jmp
pop
xchg
jle
mov
aam
dec
lods
and
scas
adc
in
rorb
dec
sbb
test
inc
test
scas
fsubrs
xor
inc
test
xor
mov
sub
ret
mov
dec
in
dec
fcomps
and
cmpb
jo
mov
xchg
fdivrs
jb
mov
pop
mov
push
cmp
imul
add
negb
adc
ret
out
xchg
out
dec
movsl
and
mov
push
pop
dec
jbe
stos
scas
mov
in
in
shrl
rorl
hlt
mov
jbe
push
cmp
adc
sub
rclb
adc
adc
or
or
inc
sbb
or
cmp
xor
cmp
rcrb
or
out
test
xlat
add
adc
adc
fisttpl
xchg
mov
pop
pop
jo
jp
and
test
cld
ja
or
lods
dec
movsb
int3
das
push
push
xor
stos
int3
test
adc
xor
sti
push
pop
push
rorl
and
ret
sub
push
ss
stos
mov
stc
push
test
out
push
hlt
mov
push
adc
mov
out
xor
call
test
sbb
xchg
inc
loop
mov
inc
jo
js
cmp
outsl
shll
add
into
push
mov
test
inc
xchg
popa
cs
js
clc
cs
mov
loopne
adc
stos
adc
push
cmpsb
mov
test
daa
xor
gs
and
mov
mov
in
mov
inc
enter
in
je
daa
fdivs
mov
outsb
arpl
repnz
xor
mov
lds
fwait
push
jmp
std
movsl
movl
mov
in
test
or
pshufw
rorb
xchg
add
adc
rcl
pop
ljmp
and
push
or
push
shl
push
icebp
in
jg
mov
mov
or
mov
stc
xor
pop
adc
cmp
ss
mov
push
ss
sub
dec
repnz
shl
push
out
in
inc
cmp
pop
loopne
lret
fcoml
daa
in
js
sbb
or
add
push
sbb
cmp
scas
push
push
or
mov
out
cmc
sub
push
in
cli
or
testl
add
xchg
add
sbb
rcl
xor
int3
inc
cmp
xchg
cmp
out
inc
mov
cld
mov
out
and
add
addl
in
dec
iret
mov
push
repz
push
pop
xbegin
add
or
scas
or
lods
adc
or
mov
shr
nop
and
or
inc
je
xchg
out
jle
jmp
cmpb
sbb
adcb
nop
jg
push
or
movb
fldenv
shlb
cmpsb
mov
popa
fs
and
pop
and
cmp
jb
jbe
push
paddb
mov
ja
push
mov
push
inc
orl
pop
cmp
pop
add
ds
sbb
pushf
push
hlt
test
pop
movsb
sbb
mov
int3
dec
push
clc
sbb
enter
cli
cmp
or
faddl
push
hlt
inc
add
jle
fdivrs
andl
or
cmp
cmp
xchg
xchg
push
inc
add
or
cmp
cmp
fwait
adc
mov
pop
jmp
cmp
aam
push
mov
popf
jmp
cmp
jmp
add
pop
sti
hlt
push
roll
inc
xor
push
rolb
push
dec
ja
inc
mov
cmp
adc
in
ret
scas
jge
add
repnz
out
in
movsb
push
add
add
in
in
push
pop
or
jae
jae
or
jnp
or
jbe
jmp
or
jae
push
jmp
por
jmp
adc
pop
jae
jae
adc
push
adc
dec
adc
dec
adc
jae
push
jmp
pop
jmp
sbb
xor
jae
jae
jmp
sbb
es
and
jae
push
jmp
pop
jmp
and
or
subb
and
and
test
rcll
inc
packuswb
and
push
sbb
sbb
lock
call
iret
repz
int
fucom
in
cmc
repz
inc
or
repz
sbb
sub
xor
cmp
inc
dec
dec
repz
repz
pop
pop
bound
repz
insb
jno
jnp
test
pop
enter
add
in
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
lods
inc
in
and
and
push
adc
imul
icebp
add
pop
ja
xor
sub
mov
push
adc
cmp
cmp
jbe
xor
or
std
adc
insl
aam
adcl
out
push
mov
add
mov
ds
push
popa
les
or
or
fstpl
pop
aad
mov
cmp
popa
mov
and
inc
sti
test
cmp
sbb
mov
sub
ds
xor
mov
loopne
jb
sbb
push
jo
popa
cs
add
addl
loope
fdivrl
lods
cmp
xor
and
xchg
test
call
cmp
mov
xor
rolb
pop
nop
iret
add
dec
jecxz
cmpsb
iret
jno
les
mov
mov
or
xchg
dec
loopne
add
sahf
xchg
pop
mov
push
je
dec
rolb
cmp
jae
mov
jmp
repnz
nop
jecxz
pop
and
mov
outsl
sbb
inc
cmc
push
mov
inc
push
pop
mov
add
add
ret
cmc
xor
dec
aaa
push
in
jo
pop
js
add
push
notb
in
push
dec
loop
mov
pusha
sub
call
push
mov
ror
xor
shr
xor
pushf
rorl
out
mov
or
or
icebp
add
add
add
or
mov
loopne
pop
iret
or
std
mov
and
not
and
xor
add
add
mov
aam
sub
jge
fsubr
add
iret
xlat
in
fisttps
rorb
mov
fisubl
xorl
cli
and
and
mov
push
rclb
data16
test
xor
fs
push
imul
sbb
fmull
pop
push
or
and
not
and
add
mov
lods
xor
out
add
cs
fsubr
rcl
push
aam
mov
pusha
mov
jo
rdmsr
push
xor
sub
mov
cli
mov
rol
shll
add
push
xor
xchg
cmpsb
jb
fsub
in
dec
shll
mov
in
aam
sbb
in
lret
in
push
cmp
xchg
push
rclw
xchg
add
les
pop
add
fadd
xor
das
sbb
mov
call
and
loopne
in
sub
sbb
lcall
cmp
popl
imul
lret
mov
xor
add
notb
inc
jge
and
call
sbb
or
xor
int3
pop
inc
and
xor
add
inc
or
enter
aas
shlb
jge
push
ret
push
jo
inc
inc
scas
add
adc
pusha
out
dec
pusha
pushf
sarb
or
mov
cmpsb
filds
inc
jne
loopne
dec
mov
mov
dec
fadds
pop
fs
js
call
push
and
fisubrl
add
push
mov
shll
push
imul
fs
jl
nop
cmpsb
call
pop
jle
rolb
add
sub
fwait
add
cmp
mov
aam
cmp
xor
xor
sub
mov
les
cltd
lods
shl
rolb
dec
cmp
jecxz
jo
ss
push
xor
push
xchg
inc
dec
shll
sub
dec
loopne
add
adc
dec
inc
cmp
dec
push
cltd
and
inc
push
add
rolb
dec
jae
jb
int3
dec
push
and
xor
xchg
pop
es
push
es
or
pop
xor
adc
scas
push
aam
jae
xor
inc
and
add
pop
fadds
sub
add
scas
push
add
sub
rol
and
scas
inc
sbbl
pop
fcompl
pop
and
jb
rorb
loopne
inc
mov
adc
mov
or
lcall
in
in
adc
sub
mov
movsl
imul
enter
stc
mov
or
lods
jo
pop
push
mov
dec
inc
mov
inc
scas
dec
cmpsb
imul
fcoml
fiadds
loopne
call
and
ficomps
and
inc
mov
pop
les
dec
add
pop
sbb
shrl
mov
or
inc
into
add
cmp
dec
std
andl
aaa
sub
xchg
scas
cltd
add
sub
data16
aad
loope
xor
adcb
dec
push
decl
pop
mov
out
in
aaa
xor
or
rol
and
loopne
mov
mov
test
jge
inc
jae
stos
or
sub
mov
sub
popl
lea
jmp
jl
test
clc
mov
push
sub
pop
mov
jecxz
lret
dec
mov
jne
pop
or
sub
add
inc
neg
mov
sub
push
enter
clc
aaa
jbe
or
sbb
xchg
and
in
adc
cmp
inc
add
inc
pusha
jnp
jae
push
pop
rolb
rep
fisttpll
mov
or
mov
push
imull
outsl
pop
fdivp
ror
mov
hlt
push
shr
pop
pusha
or
xchg
fistps
push
mov
lea
and
push
loopne
xchg
movb
inc
adc
dec
js
ret
movl
mov
adc
jbe
fdivrl
pop
dec
lods
add
cvttps2pi
pushf
mov
xchg
mov
or
pop
sbb
add
leave
mov
stc
ja
lea
or
add
lret
inc
stos
mov
fwait
cmp
cmp
xor
adc
dec
sbb
lock
addl
or
adc
rolb
enter
nop
push
sbb
sbb
jbe
push
in
movups
scas
in
imul
and
mov
inc
and
pop
pop
add
mov
fs
mov
mov
inc
push
sub
neg
cmp
dec
inc
pop
stos
xchg
icebp
jno
xor
pop
pop
mov
outsb
je
dec
test
cmp
movl
loope
mov
loop
and
and
pop
movsl
mov
push
add
mov
mov
push
mov
lods
sub
sbb
add
sbb
pop
lock
jne
push
lret
out
or
mov
or
jmp
fdivs
cmp
sbb
sahf
dec
and
adc
dec
cld
and
add
xchg
orl
xchg
pop
ljmp
int3
pop
add
and
daa
dec
fsubrl
mov
or
mov
xchg
rorl
xchg
or
or
dec
inc
pop
pop
push
roll
adc
inc
sbb
fisubrl
jl
add
sub
sbb
test
cmp
mov
pop
insl
das
and
xor
jbe
cli
es
mov
push
cmp
bnd
and
sbbb
xchg
xor
insl
sbb
js
sbb
mov
call
mov
inc
mov
or
sbb
dec
cmp
jl
dec
xchg
fidivl
js
test
jae
ds
imul
and
pushf
dec
daa
lods
test
or
sub
mov
adc
mov
adc
adc
js
sub
adc
mov
sub
add
add
push
inc
in
ss
sbb
mov
adc
addb
cmp
or
or
and
rorl
jne
ret
lods
jne
imul
mov
loopne
sub
push
icebp
fwait
and
loop
test
and
adc
ret
insb
pop
or
add
xchg
and
add
insb
jbe
xchg
jp
and
add
pop
inc
mov
adc
sub
jnp
and
mov
fildl
push
push
sbb
call
mov
ds
test
data16
adc
popf
ss
add
hlt
jmp
sbb
pop
and
and
and
pop
or
xchg
add
add
fmuls
push
inc
inc
roll
imul
out
ffreep
add
nop
shrb
sub
fwait
mov
rolb
cwtl
push
add
and
pop
ss
mov
add
add
adc
xor
pop
cs
lea
push
pop
inc
es
testl
cmp
pop
pop
cmp
pop
push
cwtl
cmp
sub
pop
pop
dec
es
push
pop
ja
push
add
mov
sub
push
jmp
mov
test
pop
and
enter
sub
pop
pop
add
dec
mov
loopne
hlt
js
add
clc
je
cld
or
xor
inc
jl
mov
or
cmp
sbb
adc
push
pop
shrb
sbb
sbb
pop
pop
enter
jno
sub
sbb
pusha
fcoms
dec
testl
push
pusha
cmp
jmp
dec
pop
repnz
outsl
sub
or
aam
jle
inc
push
push
cmp
sar
aam
mov
fisttpl
popa
enter
xor
imul
int
lea
push
sub
lock
inc
call
lret
inc
lea
test
nop
js
repz
stos
xchg
add
and
cmp
push
cmp
lcall
xor
lods
inc
subb
adcl
mov
cli
push
xchg
sub
xor
mov
je
push
push
aam
setns
dec
mov
jnp
inc
daa
shr
mov
push
scas
pop
jmp
dec
or
negl
dec
arpl
daa
mov
test
cmpl
or
stos
test
xor
xchg
sub
rcrb
in
dec
inc
dec
scas
inc
jg
mov
and
and
sbb
sbb
test
cmp
mov
adc
cli
add
mov
or
mov
mov
lock
call
imul
cmp
push
pop
inc
inc
rorl
or
imul
xor
stc
push
or
or
pop
div
add
mov
adc
or
iret
add
and
inc
lret
das
sub
mov
sbb
dec
je
mov
mov
push
lock
xor
dec
cs
mov
or
or
cltd
jae
clc
jo
cld
cmpl
push
cmpsl
mov
dec
adc
inc
inc
xchg
rol
dec
or
sub
adc
adc
and
in
inc
jl
pop
push
xchg
dec
clc
jo
sbbb
jmp
hlt
je
xor
icebp
push
mov
data16
push
and
enter
addl
lahf
mov
jbe
push
xor
mov
lcall
push
jp
fisttpl
push
pusha
bound
dec
sub
aam
pop
stos
jmp
push
je
mov
in
add
cmpl
mov
sub
dec
sbb
lods
ja
adc
push
xor
scas
jae
or
xor
ss
cmp
and
jnp
loope
cmp
jo
dec
inc
sub
push
mov
jne
mov
mov
push
lock
inc
xchg
lret
add
xchg
inc
dec
inc
jecxz
or
sbb
ds
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sub
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
ljmp
or
je
sti
xor
and
mov
arpl
imul
and
mov
sbb
xor
test
ss
mov
xchg
cmc
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
cltd
xor
sub
or
xchg
add
sub
cwtl
adc
sub
push
sbb
icebp
fs
iret
inc
and
hlt
cmpsb
sub
or
stos
hlt
xor
xchg
test
mov
push
and
and
mov
cmp
mov
in
fwait
out
jo
xchg
cmp
fistpl
rorb
enter
leave
leave
sbb
arpl
dec
xor
movb
and
mov
push
cltd
or
cmp
dec
mov
out
mov
sbb
js
jle
data16
dec
adc
shrb
mov
popf
push
mov
lea
push
mov
imul
or
movsb
out
enter
adc
jg
xor
cmpl
jne
xchg
mov
mov
push
test
xchg
fistps
lods
arpl
sbb
test
dec
mov
and
shlb
add
jmp
pop
pusha
jmp
cmp
je
cmp
add
xchg
push
insb
sub
lcall
sbb
jge
pop
mov
adc
push
cwtl
fimull
add
lds
movsb
mov
cli
inc
mov
cmp
jle
sub
or
add
inc
mov
xchg
sbb
mov
add
or
pop
sbb
mov
shll
push
nop
jo
jns
pop
pop
cs
scas
sub
mov
pop
fidivrs
adc
xchg
into
stos
stc
or
lods
test
cmp
mov
mov
inc
adc
movsb
pop
arpl
xchg
xchg
push
push
lods
fdiv
xchg
xchg
or
test
push
xchg
and
push
rolb
testb
movzbl
cmp
je
or
dec
or
cmp
repnz
push
lods
lcall
mov
add
cmp
test
add
mov
or
shrb
les
sub
mov
lea
daa
decl
jle
je
cmp
out
sub
push
cmp
jge
mov
in
and
clc
sub
punpckldq
pop
lea
jae
inc
test
in
adc
xor
nop
cmp
and
or
lock
clc
call
xor
cld
mov
mov
add
add
repnz
push
ja
fs
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
xor
inc
sub
add
lds
js
cli
mov
push
mov
cli
es
cmpsb
adc
sub
adc
je
dec
je
push
add
out
loop
sarl
adc
xchg
repnz
movsl
out
pop
cmp
inc
add
jmp
sub
in
pop
push
cld
incl
push
mov
test
je
cmp
jne
sbb
pop
dec
push
mov
adc
shrb
mov
jmp
or
inc
inc
xor
mov
fildl
pusha
bound
jmp
sbb
and
ret
cltd
idiv
inc
je
ljmp
cmpb
mov
push
adc
pop
xchg
push
fiadds
aam
je
mov
add
add
sbb
aas
cmp
mov
stc
pop
repz
adc
mov
push
inc
or
lock
cmp
mov
out
sub
sbb
jne
jmp
pop
inc
cmpsb
daa
pop
out
push
cmp
adc
aaa
sarb
ret
mov
cld
mov
pop
outsb
gs
jae
xor
sbb
call
mov
mov
mov
aas
pop
testw
in
fs
adc
cmp
je
xor
jg
cmp
push
cmp
jne
inc
jne
push
inc
adc
flds
pop
pusha
repnz
out
inc
mov
jb
mov
je
ret
lea
mov
cmp
jne
dec
test
xchg
sub
cld
repz
inc
ret
mov
icebp
add
mov
enter
lods
shll
xor
call
xchg
xor
cmp
mov
jmp
mov
popa
push
jmp
inc
jl
negb
mov
jp
add
shl
dec
mov
sub
dec
shrb
mov
mov
and
rol
mov
outsl
adc
test
or
cmp
pop
dec
cld
inc
mov
xchg
hlt
rcll
jle
mov
pop
pop
or
sbb
hlt
push
out
sbb
shlb
scas
and
push
push
add
push
pushl
insl
mov
push
inc
cmp
pusha
mov
std
mov
call
imul
mov
addb
roll
aad
inc
lods
aaa
lcall
xor
dec
sub
pop
loopne
inc
cwtl
inc
xor
gs
jge
inc
imul
xorl
xor
xor
mov
and
cmp
sbb
in
ret
pop
ficoms
or
in
inc
inc
push
out
jmp
xor
inc
jecxz
jb
inc
out
mov
lods
and
sbb
ret
subb
idivb
pop
ucomiss
imul
es
xor
push
cmp
mov
or
xor
in
push
cmp
ret
fnstsw
push
cmpsb
pcmpeqb
clc
dec
or
das
dec
fstpl
add
add
pop
clc
arpl
hlt
pop
test
mov
adc
xchg
cltd
jge
cld
imul
mov
int3
in
imul
adc
cmp
or
adc
or
push
imul
or
inc
shl
or
mov
ret
and
scas
ret
aam
or
in
sbb
das
ljmp
mov
or
add
loop
inc
push
or
hlt
fisubrl
dec
cwtl
test
mov
mov
js
sub
pop
push
inc
enter
or
push
lock
sub
jge
jne
test
test
pop
sub
add
and
jle
sbb
lock
sub
and
mov
movsl
movl
and
dec
inc
loop
loopne
sub
sub
add
into
dec
or
xchg
callw
dec
or
or
or
inc
ljmp
mov
sbbb
fstpl
jmp
jo
add
rolb
mov
push
add
out
les
xor
pop
add
pop
xchg
jmp
shll
pop
adc
sbb
pop
popa
jl
dec
xchg
xor
add
mov
or
mov
ret
pop
int
mov
pop
jne
push
movb
cmp
and
mov
es
dec
dec
inc
pop
loopne
mov
push
cmp
pop
xor
xchg
in
adc
cmp
mov
je
int
push
mov
sti
test
rorb
xor
in
or
dec
pop
stc
cmp
inc
push
lcall
loope,pt
enter
xor
pusha
add
pop
lea
movl
or
xchg
mov
es
mov
dec
inc
pop
sub
hlt
cs
loopne
outsl
movsb
sub
or
fs
pop
movb
jbe
push
es
push
test
add
jmp
xchg
jecxz
aas
inc
jns
cmpb
jne
mov
or
idivl
ret
or
sbb
xor
subl
fs
data16
ret
push
push
aas
add
lods
sub
jmp
rcrl
mov
dec
mov
dec
test
aam
push
xchg
loope
mov
test
ljmp
mov
es
inc
xchg
push
adc
inc
add
adc
inc
lock
and
lret
jno
fstps
sub
add
pop
repnz
jp
shlb
adc
jbe
mov
pop
adc
call
shll
test
or
jmp
or
mov
mov
mov
dec
dec
jbe
push
xchg
inc
adc
jmp
lcall
test
jb
mov
lcall
pop
pusha
repnz
adcl
and
pop
fistpll
clc
addl
data16
add
push
adcl
sub
subb
mov
adc
dec
jbe
pop
or
sbb
sub
fisubs
mov
push
clc
push
mov
add
adc
add
jne
sbb
push
addr16
cmp
sahf
popa
lret
push
jo
mov
pop
jl
or
insb
push
jl
sbb
das
mov
jnp
shl
xchg
pop
mov
xor
cmp
adc
dec
sbb
sub
pop
pop
sbb
inc
stos
xchg
loop
inc
loope
xchg
addr16
fistps
fidivl
inc
and
sbb
or
sbb
pop
add
movsb
pop
or
std
jmp
aam
stos
mov
test
fcmovu
lret
xchg
xchg
inc
sahf
mov
lods
std
call
push
jae
lock
cs
xor
lea
sub
inc
jge
lods
jg
inc
cmp
jb
cmp
dec
xor
call
push
push
sti
fnstenv
mov
leave
inc
lea
push
addr16
jecxz
adc
ret
in
push
mov
mov
push
push
hlt
add
movl
cltd
push
rclb
ljmp
mov
xor
dec
jne
add
jecxz
and
test
scas
xor
adc
loope
andb
arpl
inc
icebp
adc
rclb
cld
minps
sarl
cmp
inc
xor
jb
inc
push
scas
push
add
mov
adcl
jg
sbb
mov
mov
xchg
dec
sbb
shl
js
imul
loopne
mov
add
inc
shll
push
jecxz
mov
daa
inc
insb
insb
por
pop
insl
test
data16
and
adc
mov
sub
or
dec
movsl
rorb
lds
in
pop
and
add
add
pop
mov
iret
incb
out
add
xorl
or
movl
mov
mov
inc
fsts
xchg
pop
xchg
sub
cmp
and
sbbb
add
add
push
pop
data16
bound
arpl
or
jno
clc
adc
dec
sbb
data16
adc
out
xlat
xchg
mov
leave
mov
into
je
mov
add
and
std
enter
pop
add
pop
cld
sbb
sbb
lret
mov
test
add
imul
jo
nop
push
sahf
cmp
stos
push
pop
fcoml
in
jmp
imul
pop
inc
mov
out
ret
add
jp
addr16
stos
xchg
cmp
ret
add
dec
mov
imul
cmp
cmc
jno
pop
les
push
add
fists
mov
or
fsubrs
xorl
shl
mov
popa
sbb
dec
inc
sbb
xor
xor
inc
or
lret
ss
cmpsl
leave
push
sub
popa
rclb
fstpt
movsb
imul
xor
pop
daa
stos
jb
xor
jns
in
cmp
rolb
xor
adc
je
pop
xor
xchg
add
sbb
push
jmp
bound
mov
loopne
and
inc
push
mov
jo
rorb
pusha
adc
or
pop
xor
stos
or
insl
fmuls
mov
in
fs
cmp
sahf
je
pushf
aaa
movsb
outsb
push
pushf
sub
fwait
mov
test
cs
addb
push
test
xor
int
cwtl
push
adc
push
cmp
sbb
pusha
test
adc
and
add
adc
sub
or
mov
or
movl
cmovb
mov
push
or
mov
nop
ja
jecxz
in
es
adc
and
fwait
or
xchg
inc
inc
add
cmp
fstl
push
mov
inc
sbb
cmp
inc
add
pop
sti
ret
mov
cmp
mov
add
push
sbb
sub
sarl
stc
push
mov
sbb
pop
or
mov
leave
call
addl
inc
sbb
ret
jbe
pop
js
test
add
mov
or
js
popf
dec
test
mov
or
rorl
out
js
and
jae
adc
cmp
or
mov
jnp
ss
push
xor
cmpsl
imul
fldenv
cwtl
cmp
outsl
xor
jle
adc
add
jg
xor
sarl
lock
and
lock
or
jle
mov
jmp
imul
mov
fildl
mov
inc
inc
sub
mov
cmp
adc
sbb
fcmovnbe
push
and
jo
inc
or
dec
push
pop
imul
and
insl
pop
push
ret
xchg
cmp
outsl
sbb
outsl
pop
cmp
mov
adc
into
mov
jne
pop
test
and
or
dec
imul
and
sub
test
fcmovne
inc
sub
sbb
cmp
inc
icebp
add
mov
inc
mov
pop
jmp
rorb
aad
imul
daa
movsb
add
adc
jecxz
dec
pusha
cs
dec
insl
jecxz
push
int3
les
push
push
addr16
adc
rclb
ret
out
jo
dec
in
or
cli
mov
movl
pop
jo
dec
sti
or
jns
nop
adc
cmp
sub
mov
int
sub
pop
sbb
dec
mov
lods
push
pop
fiadds
pop
repz
or
or
inc
or
push
flds
iret
stos
dec
sub
subl
lock
fcoms
push
ja
test
adc
mov
imul
inc
mov
js
mov
sar
les
mov
in
cmp
push
out
mov
xchg
hlt
je
inc
ja
js
lcall
dec
aad
test
and
lret
xorl
cmpl
loopne
sub
jle
jne
pop
push
push
lods
mov
sub
xchg
sbb
mov
int3
and
push
or
lock
ds
cli
push
sub
sbb
dec
fmuls
push
mov
jl
jmp
lea
aad
and
jle
or
jbe,pt
test
add
cmpl
pop
arpl
sbb
insb
adc
sbb
sub
sub
lahf
mov
jns
dec
xchg
lcall
out
pop
add
dec
outsl
and
cli
cmp
or
loopne
mov
js
add
add
je
inc
sub
mov
sarb
dec
mov
pop
fstl
jmp
loope
aas
inc
push
dec
sub
aas
sbb
or
pop
jmp
sarb
or
push
xchg
sahf
in
or
aam
arpl
adc
pop
add
jno
sub
out
jae
cmp
pop
mov
leave
clc
or
xchg
or
sahf
rol
adc
or
mov
push
hlt
test
jo
arpl
mov
pop
sbb
adc
pop
pop
mov
sarb
adc
popa
std
xor
insl
inc
je
jp
and
mov
push
add
in
mov
ss
dec
xchg
orb
inc
adc
sbb
loop
roll
jmp
or
cmp
movsl
rcrb
or
dec
sbb
in
fisubs
pop
inc
add
fisttps
jmp
into
ja
or
and
pop
mov
push
scas
stos
pop
aaa
jmp
sub
mov
sbb
shlb
pop
dec
sub
insb
les
jge
popf
cmp
ja
scas
shlb
inc
add
cwtl
mov
or
fsubrl
cmp
xchg
divb
pop
es
lods
in
mov
inc
pop
cmp
adc
xchg
xor
pop
mov
add
in
jmp
inc
ja
sub
adc
fwait
lods
sbb
orl
mov
inc
inc
cltd
pushf
adc
inc
jp
pop
js
mov
adc
lock
inc
movsl
jle
pusha
add
fisttps
add
cmpl
je
add
fadd
add
push
mov
loope
xchg
cmpsb
in
sbb
mov
sub
scas
mov
fisttpl
sub
sbbl
sub
mov
insl
pop
leave
sbb
inc
mov
or
cmp
shll
int3
inc
inc
push
outsb
add
and
repz
les
jmp
ja
stos
or
mov
add
xor
pop
lcall
enter
push
push
cs
in
or
mov
add
cmp
mov
call
mov
pop
cmp
cmpb
mov
in
icebp
mov
hlt
rcll
jae
or
insl
push
sub
or
scas
push
test
push
popa
pusha
inc
test
fisubl
imull
inc
in
cmp
popa
inc
inc
insl
or
sbb
xor
push
dec
xor
pop
mov
or
and
mov
test
cmpb
sub
popa
aaa
or
mov
cmp
and
inc
push
or
dec
popa
shll
sub
add
xchg
mov
jb
cmp
mov
adc
mov
clc
je
sar
xor
in
add
stc
in
cmp
and
xchg
push
push
mov
loope
jns
mov
shr
jle
and
pop
cmp
sbb
add
sbb
inc
or
jp
push
pop
mov
adc
ret
push
pop
imul
fwait
pop
jae
adcb
push
and
xchg
or
popa
dec
push
adc
and
add
in
loopne,pt
inc
mov
daa
jne
int
dec
outsl
dec
dec
and
into
sbb
shr
add
xor
cld
pop
cmp
inc
push
je
cmp
jbe
push
pusha
and
and
push
xor
jmp
das
outsl
lea
je
lret
movl
adc
nop
rorl
and
or
or
test
inc
mov
or
nop
and
inc
sub
and
jl
in
and
sub
cltd
push
add
test
xchg
loopne
and
or
push
cmp
mov
hlt
xchg
dec
jo
mov
mov
pop
push
ror
add
aas
loop
mov
mov
testb
scas
dec
js
ljmp
or
mov
lea
cmp
mov
and
std
pop
sbb
mov
mov
and
cs
jb
data16
xchg
cmc
mov
xor
inc
imul
sub
xor
sbb
mov
fwait
rol
or
dec
shll
add
sbb
push
cltd
cli
cli
push
mov
dec
test
cld
cwtl
mov
out
cli
insb
lret
jne
mov
adc
fisttps
cmp
dec
js
scas
cli
outsl
pusha
jle
push
xor
pop
div
hlt
add
lea
xchg
sbb
ljmp
xchg
jmp
lods
mov
dec
push
adc
aam
inc
inc
cli
push
adc
enter
movsl
adc
add
add
xor
push
icebp
nop
mov
adc
sbb
cmp
sti
shlb
cmp
xchg
orl
push
subb
fmull
andl
gs
add
lds
movsl
imul
out
xchg
dec
push
add
or
fiaddl
es
push
insl
ss
movsb
sub
je
mov
cmp
cmp
push
shlb
std
cmpsb
imul
movntps
sub
jne
bound
adc
out
adc
inc
or
in
pop
xchg
lret
adc
hlt
ret
jle
int3
add
nop
sbb
js
add
xchg
add
imul
push
push
mov
push
push
data16
push
pop
cmp
jb
neg
xchg
adc
rorl
jmp
dec
mul
or
rorl
je
push
out
push
rep
mov
dec
ljmp
add
scas
ret
js
hlt
pop
push
adc
inc
cld
add
shrb
movsl
test
clc
into
xchg
gs
mov
test
or
ljmp
xor
adc
lods
sbb
dec
xor
inc
adc
movb
and
pop
adc
mov
scas
je
scas
pop
and
pop
and
sbbb
jge
stos
js
fnstcw
ds
and
clc
jg
fs
sub
add
movd
movaps
add
push
enter
shlb
test
xor
cli
rcl
lret
adc
dec
cmp
and
lret
or
loope
fsts
or
ljmp
insb
std
jnp
mov
and
in
mov
adc
or
add
and
xchg
out
push
cmp
ljmp
fisubl
ret
mov
add
adc
xor
shl
pop
enter
push
adc
sbb
out
jns
sbb
and
push
fdiv
rcrl
aas
cmp
mov
and
orb
decb
aam
xor
xor
pop
add
sub
jle
add
xorl
test
mov
lret
ret
adc
int3
jmp
sbb
out
fdivrl
lret
sub
ret
adc
std
pop
test
xchg
add
arpl
add
and
jne
sub
mov
mov
and
imul
pusha
in
pop
cmp
enter
inc
pop
adc
mov
push
or
mov
jmp
push
es
fwait
add
or
add
and
inc
sub
clc
ja
mov
pushl
jbe
bnd
cmp
mov
pop
inc
cmpb
out
adcb
push
jo
inc
mov
inc
inc
and
jae
addb
or
or
sbb
je
or
cmpsb
ljmp
inc
jno
stos
adc
nop
dec
sbb
or
imul
mov
xchg
cltd
fwait
jp
out
jno
or
js
test
sbb
mov
pop
xor
int3
sbb
jae
add
xchg
outsb
adc
enter
xor
popf
dec
push
pop
sub
shll
mov
je
push
cmpb
jns
add
xor
jl
lea
push
jne
ret
addr16
xchg
fwait
js
cmpsb
lods
sbb
push
sbb
sbb
movb
inc
mov
addr16
xchg
xchg
sbb
xchg
adc
jmp
cmp
scas
das
cmp
imul
add
ja
mov
dec
push
and
adc
lods
mov
pop
cmp
inc
scas
sub
xor
shll
rorb
out
fidivrs
mov
mov
jne
orl
add
xor
xlat
mov
arpl
pop
xor
pop
pop
mov
hlt
push
dec
bound
and
int3
add
aad
int3
testb
adc
inc
inc
cmp
lea
push
pop
arpl
sub
pop
cmp
int3
or
sbb
cld
jecxz
mov
push
lock
cli
lods
and
addl
cmp
jb
or
cmp
dec
dec
movsl
pop
insb
mov
sub
leave
test
adc
sbb
sub
ret
mov
imul
enter
pop
push
ret
add
jle
or
enter
pusha
add
loopne
pop
and
fs
test
add
loopne
sahf
or
inc
sbb
jmp
xor
loop
icebp
movsb
jns
in
push
rcl
add
pop
mov
cs
rorb
inc
mov
push
push
sets
clc
add
xor
inc
inc
push
add
xlat
shl
sub
push
loopne
loopne
and
pop
cld
sbb
jmp
ret
jne
cmpl
cmp
cli
testb
je
inc
mov
cmp
loop
jg
test
es
loope
or
cmp
jne
dec
jmp
sbb
jle
cmp
xor
lret
jne
inc
aaa
push
lds
mov
mov
loope
int
adc
adc
mov
push
push
pop
push
call
dec
push
rolb
inc
and
sbb
stos
inc
xchg
ret
cmp
pop
movsb
roll
cmp
mov
xchg
adc
xchg
movsb
daa
xor
pop
and
pop
decb
pop
pop
jne
fsts
popf
jo
adc
push
cmp
jb
rep
jmp
pop
pop
lock
xor
push
mov
sub
jb
lcall
out
jnp
data16
inc
nop
push
les
push
or
push
movsb
and
add
lcall
add
add
in
mov
inc
cmp
repz
add
into
mov
inc
xor
xchg
mov
iret
jnp
daa
or
push
or
cld
gs
aas
out
imul
inc
mov
mov
out
sahf
out
call
out
sahf
lock
hlt
clc
clc
cld
in
lea
or
clc
sbb
jmp
sbb
out
lock
nop
fcoms
lods
sbb
sti
and
shll
and
dec
jb
in
lea
jl
cld
pop
and
std
jnp
stc
or
cld
out
int3
addr16
sarb
xchg
mov
sub
out
cmp
xchg
pop
nop
loopne
adc
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
sahf
out
mov
cwtl
mov
jns
ret
addr16
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
fmull
in
hlt
or
xchg
mov
push
add
add
outsl
pop
movsb
or
ja
push
xorb
xchg
push
jbe
sbb
shrb
jmp
imul
movsb
andl
push
test
dec
loope
fisttps
mov
loope
fnstcw
cmp
jae
sub
hlt
push
nop
push
ljmp
jo
inc
fwait
mov
inc
addps
inc
xor
lcall
shll
sbb
orb
inc
lea
or
push
cmp
and
xchg
push
lea
shll
sbb
pop
popa
sub
int
jne
xchg
and
iret
push
cmp
loopne
inc
test
mov
mov
push
pop
mov
call
sarb
imul
push
sbb
adc
pop
iret
xor
sub
or
push
aaa
movsl
mov
mov
sub
ret
sbb
mov
pop
cltd
pop
pop
jb
and
insl
xchg
cwtl
or
cmp
mov
mov
push
lcall
pop
push
jle
push
adc
repnz
insb
sbb
dec
fistpl
dec
push
aaa
loope
jg
jmp
mov
mov
jle
cmp
sbb
outsl
pushf
mov
cmp
into
lea
cmp
out
ss
pop
or
jmp
sub
cmp
jne
out
ds
jnp
adc
or
add
inc
and
jne
pop
sub
add
aad
jno
fmull
add
loop
xchg
cmp
mov
cmpl
push
and
cmc
mov
sbb
sub
adc
jmp
xchg
mov
jne
pop
clc
adc
pop
and
inc
sti
addb
jp
mov
xchg
addl
shr
mov
sbb
cmpl
sub
mov
ret
adc
imul
stc
jle
mov
pop
scas
pop
and
jb
loop
xlat
xchg
xor
pushf
xchg
out
push
pop
fsubs
add
xor
and
and
and
cld
fldcw
ja
inc
inc
testb
mov
scas
or
push
test
xchg
cmp
push
dec
fdivrl
jne
pop
dec
or
cs
mov
xchg
inc
add
xchg
cwtl
pop
fsubs
mov
mov
rorb
arpl
jmp
and
jle
pop
fdiv
and
lret
push
sbb
pushf
std
mov
mov
add
jg
ret
sbb
add
mov
pop
js
push
ljmp
in
cwtl
sub
scas
or
add
push
push
sub
mov
mov
sub
cmp
stc
xor
or
lds
lods
sti
imul
popf
mov
cs
inc
pop
sbb
sub
pop
fadds
shl
popa
jmp
aam
push
fcoms
pusha
jl
push
sub
ljmp
pop
jbe
lea
adc
sbb
nop
dec
add
jp
adc
loopne
popf
out
leave
push
sbb
xorb
push
stos
add
and
popa
mov
ss
adc
add
jmp
mov
add
jmp
push
add
sbb
scas
push
orl
or
lds
lods
cld
jbe
testb
aam
add
jnp
mov
pushf
pop
popa
mov
movb
inc
js
dec
cmp
es
out
call
dec
cmp
pushf
mov
inc
bound
mov
pushf
add
int
mov
push
add
addr16
je
sub
inc
cwtl
sbb
and
cmc
lock
adc
mov
xor
mov
push
mov
inc
test
jl
pusha
lahf
push
adc
addr16
pop
or
js
hlt
pop
add
daa
or
xchg
roll
push
pop
fwait
push
pop
add
xchg
dec
cld
or
dec
fildl
dec
push
rolb
int
cmp
push
test
shl
ret
mov
rcr
pop
aaa
mov
sbbl
shrb
add
dec
inc
out
repnz
dec
add
jmp
pop
mov
push
and
cltd
lret
lcall
push
push
cltd
push
frstor
push
rolb
sbb
mov
icebp
mov
clc
add
dec
cld
or
test
daa
dec
jne
jmp
adc
pop
pop
pusha
repnz
sbb
mov
jmp
sub
xor
into
ds
sahf
xchg
sub
jo
outsb
adc
jmp
and
xor
es
add
aam
andl
jno
bound
adc
jae
push
outsb
into
add
shlb
sti
scas
xchg
fisubs
dec
mov
push
cmp
rcr
cmp
jne
es
jne
call
aad
adc
or
lods
clc
jb
jmp
push
inc
incl
dec
mov
scas
loop
aas
jmp
std
push
xor
cld
pop
jae
aas
cld
jmp
fldt
push
sar
nop
adc
adc
inc
inc
inc
out
out
or
jl
mov
jne
pop
repnz
cwtl
mov
call
inc
dec
pusha
sub
out
push
dec
lods
lcall
sub
and
stos
jae
test
daa
push
sbb
subb
jns
or
popa
adc
and
orl
nop
or
pop
decl
dec
xor
xor
or
xchg
dec
xchg
dec
pop
pop
add
pop
or
arpl
or
fs
gs
data16
js
into
mov
sbb
movb
jmp
push
mov
mov
movsl
add
rcll
mov
je
mov
stos
or
jg
add
in
mov
sahf
nop
jne
add
out
mov
cld
pop
loop
push
imul
push
push
push
inc
call
and
ljmp
jecxz
outsb
mov
push
jo
adc
inc
push
scas
les
lea
push
aam
push
push
and
add
sarb
push
outsb
xorb
clc
pop
insb
jo
bound
pop
ljmp
cmp
and
jno
je
aas
mov
sub
xor
mov
ja
popa
adc
dec
mov
or
lcall
es
outsl
call
xorl
fstps
adc
pusha
adc
pop
and
es
adc
push
js
ljmp
or
adc
or
test
sbb
data16
sbb
add
fbld
inc
insb
lcall
fmuls
lock
and
sub
pop
mov
jp,pt
jge
cmpb
sbb
sbb
sub
lock
push
loopne
or
stos
rolb
sub
jl
shlb
ja
and
cmpsb
jne
pop
mov
lock
push
or
incl
stc
and
mov
inc
je
mov
std
mov
decb
mov
sbb
or
add
jmp
pop
xchg
or
mov
inc
inc
push
loope,pn
pusha
repz
sbb
scas
mov
pop
adc
jmp
cmp
mov
inc
cmp
jb
jns
jo
xorl
insb
shrb
aaa
add
fs
adc
add
xor
mov
ret
data16
ret
iret
sbb
sub
or
lods
shl
popf
sbb
or
push
ljmp
add
sbb
jo
and
or
je
add
fwait
jo
das
mov
sahf
je
ret
inc
cld
hlt
ss
add
sub
cmp
je
xor
sahf
out
inc
je
adc
sarb
xchg
pop
addr16
mov
or
add
out
mov
xor
ljmp
div
add
in
insl
lea
mov
adc
or
cmp
test
jl
and
popa
mov
push
mov
mov
or
pop
pop
fs
xor
dec
scas
pop
pop
cmpl
xchg
xor
jg
push
bound
mov
inc
jmp
cmp
fstp
fwait
sbb
jmp
adc
jne
sub
cmc
mov
push
mov
scas
jmp
and
cmp
dec
push
xor
add
or
push
pop
and
adc
adc
pop
aaa
outsb
out
mov
pop
add
jle
lods
adc
mov
mov
mov
and
je
loop
xchg
lretw
sbb
add
je
lea
sbb
es
mov
test
and
dec
loopne
test
test
or
sub
push
jbe
push
add
inc
mov
dec
and
sbb
rclb
push
adc
shl
push
push
mov
cltd
sbb
pop
xor
adc
andl
sbb
enter
xor
dec
in
lock
cmp
add
jbe
add
mov
pop
push
sub
inc
mov
push
sbb
loope
push
pushf
jmp
aaa
jne
mov
ja
inc
cs
or
and
mov
dec
jne
fs
add
adc
pop
pop
pop
add
push
insb
xchg
aas
insb
add
jno
xchg
or
push
pmovmskb
push
push
push
sbbb
add
lods
sub
orl
cmp
je
and
or
sub
mov
lock
or
add
add
sbb
xor
pop
and
loopne
jne
test
or
add
xor
loopne
jno
push
adc
mov
adc
shl
and
lea
push
adc
or
mov
ss
adc
add
cmp
fiaddl
mov
push
jb
clc
mov
es
iret
inc
or
roll
sbb
push
pushf
mov
mov
sbb
sub
jne
or
jno
pusha
insl
add
push
adc
pop
or
scas
jmp
mov
xchg
lret
dec
xchg
sub
pop
es
jl
push
push
lcall
mov
int3
xor
testb
call
out
jmp
mov
pop
mov
push
outsl
mov
mov
shrb
add
jmp
mov
loop
rol
stos
push
flds
sub
or
mov
add
hlt
pop
nop
xchg
or
inc
sbb
leave
inc
sub
add
sub
inc
fdiv
lret
cmp
add
mov
inc
sar
add
rclb
in
xor
mov
and
pop
push
or
loope
sti
or
gs
mov
sbb
rcll
mov
inc
adc
push
into
and
loope
pop
push
jmp
xor
xorb
dec
jle
fisttpl
pop
out
mov
les
ja
xadd
sub
pushl
aad
xorl
adc
das
dec
pop
inc
daa
push
adc
lahf
push
add
sbb
rcl
cmp
or
sub
in
inc
or
cmp
cmpsl
mov
and
cli
rcrl
or
insb
push
data16
pop
addl
sar
cmp
jne
pop
jecxz
add
jbe
cli
imul
idiv
mov
mov
pop
push
push
dec
add
punpcklwd
push
test
adc
rcll
xor
addr16
andb
js
ficoml
xor
orb
dec
fs
jbe
mov
mov
mov
and
mov
fimull
mov
xor
movsb
pop
pop
add
mov
push
in
sbb
inc
adc
in
jns
testl
push
or
xor
clc
cld
push
divb
pop
xor
push
and
xchg
loopne
mov
das
and
xor
add
and
sub
cmp
push
push
inc
sub
mov
sbb
add
jbe
and
lods
add
addl
jge
dec
or
jg
push
dec
pop
inc
jo
fsubs
pop
iret
popa
mov
je
lret
adc
daa
loop
inc
repnz
adc
mov
outsb
clc
fs
sub
jmp
daa
adc
popa
jge
scas
dec
jo
pushf
ss
or
call
and
or
aam
jmp
dec
je
mov
sbb
dec
jne
push
pop
jae
push
or
ja
push
push
sbb
add
js
jbe
jmp
sub
dec
push
cmp
repz
push
mov
push
push
ljmp
lea
push
test
jp
imul
addl
inc
xchg
loopne
lahf
sbbl
addr16
jne
mov
addr16
add
dec
mov
xchg
inc
mov
dec
es
fldcw
repnz
dec
repz
xchg
test
je
and
and
fwait
sbb
lods
dec
xchg
cmovp
sub
or
jg
mov
mov
rorb
cmpsl
sub
add
push
push
and
iret
or
mov
lock
xchg
jbe
leave
add
adc
cmp
add
jmp
rorb
add
dec
loope
std
lret
jno
jae
push
jmp
sub
aas
lcall
jns
test
inc
loopne
fcoml
addl
pop
adc
mov
add
jae
popf
mov
rolb
add
or
aas
cmp
jae
clc
call
sub
adc
jmp
or
sbb
cmp
rclb
out
cmc
jg
cmp
mul
mov
add
add
sub
shlb
pop
sbb
push
movsb
push
loopne
inc
adc
dec
mov
sbb
fst
cmpsb
mov
sbb
test
adc
lds
or
dec
and
xchg
shl
fcompl
clc
mov
pop
jle
call
aaa
push
pusha
ss
cmp
mov
lea
xchg
xchg
pop
sub
js
sbb
pop
inc
push
shlb
add
fadds
push
mov
add
push
lcall
das
sahf
pushl
dec
mov
add
aad
jl
leave
sbb
jbe
lcall
push
push
pop
sub
stos
add
add
add
jmp
cmp
push
dec
out
xchg
push
popa
cmp
sbb
loopne
imul
push
xlat
mov
push
push
add
leave
mov
dec
sbb
push
inc
lods
movsl
jnp
push
or
insl
or
rcr
sub
cmp
push
movsb
icebp
ret
fcmovnbe
jl
inc
movsl
push
push
dec
inc
jle
mov
xchg
pop
and
add
inc
je
fsts
stc
xchg
clc
push
mov
stc
sbb
test
mov
mov
cmc
fsubrs
imul
add
sbb
jge
lret
loopne
inc
sub
pop
adc
sti
sub
dec
dec
or
lret
lds
cs
add
xchg
loopne
lock
fstpt
add
and
imulb
rcrb
loopne
stos
cltd
pop
inc
mov
addl
outsl
sbb
nop
ret
clc
sbb
rcrb
xlat
je
xor
xchg
add
stos
into
add
xor
pop
or
mov
cwtl
push
push
loope
pop
cmp
inc
push
mov
js
in
push
add
dec
loopne
js
aam
rcl
nop
fnstcw
imul
mov
lret
inc
dec
cmpsl
xorb
pushf
insb
fiaddl
stos
stc
rol
ja
test
pushf
out
in
or
fnstsw
in
int3
arpl
lock
sbb
and
xor
jl
xor
lea
in
push
push
aaa
jb
xor
or
cs
mov
cwtl
cwtl
enter
pop
shll
aad
jmp
push
and
jbe
hlt
mov
mov
je
add
adc
sub
or
lret
pop
ljmp
pop
movsb
adc
aam
pop
lret
sbb
mov
xchg
xchg
test
leave
outsl
aad
dec
pop
hlt
andb
cmpb
aad
add
push
std
xchg
lret
jge
call
dec
push
and
pop
jp
ljmp
mov
xchg
test
push
adcb
int3
lcall
dec
xorb
insb
cs
and
xor
dec
cld
jmp
ret
rcrb
and
and
inc
push
outsb
xchg
or
in
daa
mov
ljmp
dec
mov
mov
mov
rorl
push
dec
call
and
inc
pop
and
imul
mov
jmp
pop
rorb
sbb
out
movsl
pop
or
inc
jae
leave
cmp
xlat
repnz
add
xor
and
jp
inc
lock
fsubrl
add
clc
jmp
clc
mov
das
test
dec
in
adc
je
mov
pop
loop
into
mov
fisttpl
and
nop
xchg
pop
repnz
and
push
cmpsl
popa
and
jp
cmp
xchg
jmp
xchg
cmp
xchg
sub
mov
xchg
jl
shrb
aad
mov
popf
and
mov
push
leave
add
and
jl
jnp
pop
enter
sarb
pop
icebp
mov
add
and
ljmp
jno
mov
incl
cmpsl
or
push
mov
cmp
fs
jns
ds
jmp
adc
decl
inc
enter
push
xor
pop
divl
nop
pusha
push
test
lods
incl
cs
lcall
inc
fcoms
mov
repz
push
adc
and
orb
dec
jnp
sub
pop
or
mov
or
dec
jns
ret
imul
mov
adc
outsb
pop
cmp
xor
xor
jnp
mov
push
or
je
mov
subl
testb
jne
xchg
roll
pop
jmp
rorb
cld
rol
cli
add
push
pop
push
add
or
sarb
and
jne
lods
push
test
push
sbb
stc
sbb
xor
adcb
lea
inc
and
cmp
mov
outsb
jne
out
outsb
movsb
test
add
or
mov
repnz
mov
hlt
or
mov
lods
or
icebp
jle
popf
push
xor
cltd
fisttps
adc
jmp
testb
ds
aas
pop
mov
or
mov
dec
jns
sub
adc
or
and
loopnew
adc
lock
mov
mov
inc
xchg
js
jns
icebp
inc
push
dec
cmc
adc
std
sbbb
xchg
cmp
test
sub
push
inc
loopne
xchg
push
std
mov
inc
mov
ret
lcall
fdivr
and
sbb
and
cmpb
lock
inc
xor
and
pop
out
xorb
cmpsl
xor
es
add
pop
xchg
pop
jmp
insl
or
dec
xor
sub
std
add
sbbb
pop
and
add
inc
jo
mov
lods
adc
addr16
clc
mov
int
push
mov
repnz
inc
dec
pop
sbb
test
adc
cwtl
add
and
nop
push
sub
pop
fnstcw
adc
std
pop
pop
xor
mov
jns
jns
sbb
subb
pushf
popl
mov
mov
mov
movl
dec
mov
rorb
imul
adc
pop
mov
or
mov
nop
loope
js
rcrl
push
int3
adc
or
xor
mov
inc
push
mov
dec
nop
push
push
sbb
shl
sub
mov
mov
aam
into
xchg
andl
push
les
mov
mov
pop
push
xor
lods
jl
add
or
std
fcoml
lods
popf
aam
sarb
mov
xchg
clc
or
test
mov
shrb
lock
jno
pop
add
hlt
imul
in
testl
adc
and
xchg
xchg
xchg
lock
lea
jne
mov
rorl
jmp
sub
fsub
add
add
mov
test
mov
pushl
sbb
rcrb
or
cltd
orl
sbb
push
mov
add
or
sbb
pop
push
or
dec
or
xchg
xchg
test
xchg
les
les
add
push
fisubrl
clc
jge
out
pop
jae
inc
push
mov
adc
jbe
push
inc
mov
test
lock
pusha
pushf
pusha
lcall
dec
xchg
pop
pop
pop
push
adc
or
lds
ds
mov
dec
pop
sbb
movsb
mov
js
jne
mov
call
pop
pushf
and
jns
cmp
lock
loopne
mov
mov
mov
add
inc
sbbl
lret
and
cmp
jge
and
push
lds
sbb
lret
adc
or
test
push
mov
cmpb
rol
xchg
aad
or
pop
popf
mov
jo
xchg
fdivrs
xlat
sub
mov
popf
jne
ficoml
je
adc
sbb
xchg
in
stos
mov
xchg
jge
shrb
ja
lods
call
iret
cli
gs
pop
imul
mov
mov
cltd
lea
jbe
ja
leave
adc
xorb
ljmp
rcll
sbb
pop
sar
sbb
loopne
fsubl
xchg
push
xchg
mov
inc
xchg
lea
jb
je
mov
mov
and
test
dec
or
je
or
inc
lea
sub
fs
mov
push
pop
add
ret
out
pop
andl
shrb
sbb
push
test
adc
icebp
fdivs
inc
repnz
add
xchg
clc
shll
mov
rorb
int3
adc
ja
movsl
mov
jb
and
mov
hlt
adc
inc
mov
sbb
inc
cmp
push
xchg
or
jnp
or
dec
mov
pusha
sub
xlat
mov
sbb
pop
and
aaa
ss
js
add
movb
inc
xor
pop
sti
movsb
into
movsl
incl
dec
roll
sbb
imul
outsl
and
test
xchg
adc
movsl
inc
aad
lock
rcrb
pop
call
test
lea
fstpl
das
add
mov
xor
or
sbb
jae
mov
je
pop
push
xchg
and
test
add
cwtl
mov
repz
movsb
dec
imul
mov
mov
hlt
sbb
fisttpll
push
arpl
xor
xor
sub
mov
loope
cwtl
mov
push
sbbb
or
dec
and
in
adcl
mov
sub
in
mov
push
add
xchg
testb
jb
push
adc
push
push
popf
cmp
inc
push
insl
cmp
jl
xor
push
xor
cmc
pushf
daa
rcrb
addl
dec
mov
sbb
ss
cmp
mov
sub
mov
loop
add
mov
stc
xchg
test
xchg
rol
arpl
in
maskmovq
jg
jmp
mov
inc
lods
xlat
xor
sete
jo
mov
sbb
mov
jl
stos
mov
je
call
cmp
jmp
sbb
shll
jmp
inc
mov
gs
mov
jmp
push
pusha
je
or
sub
mov
int
sbb
loopne
and
cwtl
lds
and
xchg
aaa
gs
test
add
into
arpl
dec
dec
xchg
mov
gs
add
sbb
or
and
shl
mov
negl
addl
rcl
nop
dec
ficompl
add
mov
xchg
hlt
jmp
lahf
out
pop
mov
imul
sbb
and
pop
push
out
loope
and
and
movsb
out
mov
movsl
jo
pop
lock
inc
cld
adc
mov
mov
js
pop
xor
jno
pop
insb
dec
mov
mov
out
cltd
dec
mov
jne
movsl
push
push
push
in
je
mov
inc
pusha
lds
jb
cmpb
jne
and
nop
ljmp
cmpsb
push
lahf
push
data16
mov
cmp
mov
cli
mov
mov
push
inc
daa
add
jno
sbbb
insb
pop
test
sub
loope
popa
or
inc
scas
push
xor
mov
dec
mov
lock
and
inc
cmp
outsb
dec
mov
cltd
jmp
xchg
sub
cltd
add
dec
sbb
pop
jl
jae
adc
add
sbb
adc
cmp
jnp
or
psrlq
sbb
jge
clc
les
daa
mov
or
sbb
push
imul
lea
es
or
inc
pop
sub
stc
cltd
push
push
push
movzwl
add
clc
aas
ffreep
pusha
mov
cmp
sahf
mov
jmp
jno
out
adc
xchg
sub
inc
cmp
shlb
dec
movb
and
or
in
jmp
push
movsl
sub
mov
es
cld
mov
addb
pop
sub
ret
dec
adc
sar
int
test
inc
add
xchg
pop
in
aas
add
push
add
sub
mov
cld
push
sub
push
cmp
pop
xlat
lret
int3
mov
fisttpll
shrl
mov
mov
jg
test
jne
jmp
and
test
push
and
ret
mov
jg
add
mov
and
icebp
arpl
lods
or
das
adc
lret
mov
push
lds
mov
mov
xchg
and
inc
aam
mov
shl
inc
in
or
adc
movsb
dec
fistl
mov
inc
loope
and
xor
cltd
fst
add
pop
cmp
jmp
adc
popf
jmp
mov
mov
jge
push
lock
jo
or
xchg
and
xor
je
gs
stc
sub
cld
out
out
mov
movsl
daa
pop
mov
sbb
ret
mov
or
or
pop
jl
xchg
mov
js
inc
mov
fdivrl
pop
jmp
xor
cmp
shrl
movsb
pop
ret
nop
and
aam
cmp
fwait
call
leave
lret
ss
cmp
xchg
mov
mov
push
dec
xor
or
mov
aad
dec
pop
mov
ss
jbe
int3
int3
add
fimuls
pop
ret
adc
mov
pop
lret
or
sub
les
test
mov
or
jo
mov
xor
cmp
les
xor
add
ret
pop
add
in
mov
cmp
push
lock
insb
data16
and
divl
push
or
xchg
push
push
mov
leave
repnz
add
fadds
loop
add
push
inc
test
mov
dec
arpl
into
mov
aam
adc
push
adc
mov
into
loope
add
mov
jb
push
xchg
push
xchg
add
inc
insb
jbe
mov
fldt
mov
and
cli
or
mov
mov
stos
and
xchg
jne
dec
aam
clc
fcoms
push
or
int3
dec
mov
mov
aaa
insl
and
lahf
xchg
jno
mov
test
jp
add
push
mov
stos
mov
stos
fimull
mov
jge
or
in
mov
flds
adc
jmp
inc
loopne
leave
leave
lret
loopne
loopne
pop
adc
cltd
sub
or
movsl
push
ljmp
imul
or
aaa
jo
mov
nop
outsl
repnz
xchg
push
sub
movsb
or
sbb
pop
sbb
mov
mov
sbb
xchg
fs
popa
cmp
and
and
inc
mov
adc
push
inc
push
jb
lds
cld
and
cld
add
cmp
pop
push
mov
int3
adc
nop
lcall
xor
add
cmp
aas
adc
pop
std
pop
and
cmp
out
nop
xorb
daa
cmp
add
mov
ds
push
mov
roll
pop
mov
gs
sub
lret
cmp
loopne
xor
insl
mov
daa
ds
push
outsl
adc
pop
jge
shll
inc
sub
sub
lea
pop
out
enter
sar
ret
add
sub
mov
jle
mov
push
and
adc
movsl
int3
in
ds
push
pusha
sub
subb
pop
push
add
lods
or
lea
adc
call
je
adc
or
mov
adc
test
jb
enter
mov
mov
sub
sti
out
and
subb
std
xor
jo
pusha
xchg
mov
pop
and
cmpsb
cmpb
and
subb
push
xchg
sarb
pop
cmpsl
inc
stos
or
test
fnstcw
pop
out
mov
inc
js
push
dec
rolb
xor
mov
xor
pop
jl
and
cwtl
sti
xchg
and
sub
pop
mov
insb
int3
mov
mov
jo
cmp
test
cmpsl
and
leave
adc
ja
clc
sub
dec
xor
test
mov
gs
mov
lock
lock
and
jns
push
leave
xchg
mov
or
rorl
xchg
pop
mov
in
mov
les
xchg
pop
cld
add
xor
push
sbb
pop
imulb
sbb
loopne
jecxz
jbe
sub
sub
mov
mov
sti
sbbb
cld
dec
xchg
sbb
or
pop
mov
fisubs
mov
call
add
jg
jecxz
jb
faddp
into
inc
and
add
and
in
push
cmp
jle
xor
jo
jmp
cmp
add
push
cmp
out
pop
shlb
push
sbbb
sbb
mov
or
das
and
aad
mov
and
ds
jl
rcrl
mov
push
push
adc
mov
sbb
loop
popf
or
shll
aaa
cmp
dec
adc
lret
test
mov
cmp
repz
je
add
and
loopne
add
test
push
out
inc
pop
xchg
mov
cmp
mov
mov
addb
sub
lock
andl
jle
dec
pop
adc
cmp
mov
mov
or
cmp
call
cmpl
sbb
xor
mov
das
pop
pop
jg
pop
into
or
inc
addb
mov
inc
mov
shlb
lods
push
dec
popf
in
lods
clc
imul
mov
imul
rorl
mov
jno
scas
pop
test
lods
push
cmp
jle
call
jne
les
dec
inc
push
bound
mov
cmpb
xor
rep
jp
inc
ret
push
nop
jnp
xchg
xchg
rcrb
test
mov
fbld
hlt
mov
mov
popf
je
ja
cmpsb
in
mov
add
pop
xlat
pusha
enter
out
cmpsb
mov
xor
and
shll
stos
aad
and
clc
push
mov
fldt
arpl
mov
arpl
cmpsb
rorl
jne
out
cwtd
fsubs
aas
fcom
pop
repz
inc
outsb
jecxz
scas
and
jmp
xchg
mov
loopne
icebp
xchg
push
inc
js
nop
inc
int3
fistpll
insb
jne
pop
ret
mov
adc
and
jg
int
outsb
mov
sbb
mov
xor
jg
movsb
pop
fstpt
jb
cmp
xor
and
dec
dec
lcall
mov
je
mov
sbb
add
or
aad
sbb
je
dec
test
lds
mov
jae
sbb
jns,pn
stos
mov
fmul
sub
inc
mov
bound
mov
cld
or
lret
adc
fistl
pop
inc
mov
ja
mov
push
jb
mov
sbb
imul
lret
push
jns
outsb
sub
mov
pop
sbbl
dec
daa
jns
adc
lods
in
push
sarb
xchg
test
in
ret
inc
sahf
xchg
out
and
shll
je
jno
pop
in
jo
bound
and
jae
add
mov
cmpsl
inc
loopne
mov
cltd
add
mov
lret
mov
inc
clc
mov
movsb
dec
loop
addr16
add
dec
xor
cmc
push
mov
lods
mov
mov
inc
scas
movsb
pop
pop
test
sbb
fs
inc
mov
shll
jb
lds
popf
jecxz
fdivr
inc
popf
push
push
loopne
outsb
lods
fildl
aas
incb
add
push
mov
or
and
jg
fsubr
rcrl
push
into
xor
test
jl
jo
adc
jp
pop
push
pop
push
gs
popf
sub
aas
mov
xchg
outsl
push
inc
pop
aaa
push
divb
mov
dec
sub
jnp
loopne
add
dec
lods
pop
mov
inc
push
push
cmp
scas
cmp
mov
push
add
loop
roll
xchg
jns
fs
mov
and
jns
in
jb
cmpsb
add
inc
cmpsb
inc
es
nop
loope
aaa
mov
or
jns
mov
fcmove
enter
loopne
in
nop
pop
cmpsl
ss
daa
outsl
fnstenv
daa
pop
in
push
sub
or
sbb
loop
cmp
pop
mov
add
mov
lds
stos
add
cmc
fnsave
add
arpl
dec
repz
lods
mov
xor
rol
jle
fcomip
mov
pop
pop
adc
test
sub
jbe
add
cmp
cmc
dec
inc
push
mov
aam
arpl
lret
xor
aam
push
clc
xchg
pop
outsl
and
xchg
cmp
jne
sub
rcll
or
adc
and
lret
inc
pop
pop
xchg
xchg
in
jae
jge
dec
pusha
das
mov
or
outsb
cmp
rorb
pop
fwait
hlt
dec
add
push
xor
mov
xchg
inc
push
or
jmp
shr
lds
adc
fucomi
aaa
push
push
add
add
or
cmp
and
jmp
inc
add
sub
dec
inc
mov
xor
xor
rclb
push
insb
mov
rcll
add
xchg
xlat
push
push
sbb
add
out
scas
mov
add
jnp
hlt
push
lds
movsb
fidivrs
or
pop
or
loopne
adc
jns
popf
sub
adc
or
and
inc
mov
sbb
dec
movsb
add
adc
mov
fcoms
int
jo
lods
adc
shrl
push
push
insl
add
sub
mov
jno
adc
mov
inc
add
sbb
push
add
or
arpl
and
sbb
push
mov
mov
enter
jnp
outsl
xor
add
inc
sbb
hlt
mov
mov
or
sub
testb
sbb
push
sub
mov
or
mov
inc
add
mov
leave
fnstsw
in
jbe
loopne
ficoms
push
jns
jmp
das
cmp
ret
sub
sbb
inc
lcall
add
popa
loop
or
sti
incl
hlt
push
orb
mov
cmpsl
je
push
push
std
insb
fmuls
mov
xlat
mov
mov
jle
test
pop
mov
mov
rorb
sbb
mov
rclb
es
sbb
and
mov
add
adc
cwtl
cmc
xor
das
dec
pusha
ja
mov
push
inc
jo
push
inc
fdivs
jg
and
popa
add
das
imul
mov
imull
movsl
inc
loopne
pusha
xchg
fdivrl
xor
add
sbb
shl
jnp
cmp
hlt
fists
push
aas
dec
out
cmpb
rorl
xor
aad
push
mov
cmp
jne
movl
fst
movsl
add
cmp
std
jne
negb
nop
adc
jmp
sub
imul
pusha
fstl
inc
or
leave
pusha
cmp
stos
inc
pusha
cmp
push
sbb
imull
mov
sbb
push
mov
ss
ljmp
cmp
out
jb
or
push
les
in
cwtl
mov
fwait
pop
test
or
push
and
aaa
es
mov
pop
icebp
stos
push
aas
rolb
jnp
dec
sbb
jae
cmp
jbe
cli
sti
shl
jne
movsb
js
dec
mov
pop
inc
push
leave
pop
push
mov
int
leave
dec
jno
xorb
lea
aam
sbb
mov
sub
pop
sub
cmpb
inc
cmp
lods
or
ljmp
or
jg
sbb
jge
add
jb
mov
aam
inc
inc
add
pop
xchg
xchg
inc
and
lock
pop
orb
and
and
push
dec
jne
mov
orl
add
test
or
jbe
mov
inc
dec
jne
clc
jnp
sbb
scas
stos
mov
jmp
add
addr16
loop
or
jmp
cmp
imul
leave
and
subl
mov
popa
mov
cs
mov
in
xchg
or
cmp
adc
and
jp
cmp
adc
mov
and
dec
rorb
data16
lods
jb
mov
mov
sbb
dec
xor
xchg
jne
add
mov
push
idivb
xor
xlat
testb
insb
ljmp
add
xor
and
dec
mov
bound
popf
das
or
push
outsb
xor
mov
add
out
or
cmp
out
icebp
std
sub
jmp
xor
dec
sbb
mov
mov
xorb
xor
add
loopne
gs
cmp
or
jno
es
lahf
stos
sub
mov
popf
xchg
flds
and
mov
add
pop
sub
cmpl
ljmp
pop
pusha
and
subl
xorb
xor
jp
cld
xchg
xorb
sbb
or
lea
push
push
jg
or
popa
mov
ljmp
push
xchg
jo
ret
adc
sarb
movsl
sub
adc
jo
mov
and
sub
cmp
leave
clc
dec
add
adc
mov
mov
sarb
pop
adc
and
pop
sbb
js
lods
pushl
dec
push
xorb
not
pushf
cltd
out
lahf
das
adc
dec
rolb
sub
xchg
xchg
insl
insl
fsubrs
xor
and
mov
outsb
mov
fnstsw
cwtl
daa
xchg
mov
or
mov
aam
rclb
mov
jg
pop
test
mov
cmp
loope
mov
add
push
shrb
jns
inc
cld
es
push
cmp
mov
add
push
mov
frstor
test
xor
and
xchg
lahf
rolb
pop
or
addl
cmp
add
push
jb
add
orb
sub
std
dec
inc
xor
insb
sti
inc
imul
pop
mov
jmp
pop
push
dec
adc
cwtl
leave
es
ret
or
or
add
push
add
fs
sbb
pop
or
inc
mov
movsb
cmp
sbb
push
push
push
pusha
fistpl
xor
or
aas
loopne
push
test
scas
jo
sub
push
pop
fadd
or
mov
or
inc
movl
push
mov
sub
inc
or
and
xor
jg
popa
cmp
sahf
xchg
mov
inc
xor
dec
adc
mov
shlb
push
bound
jo
scas
arpl
in
push
pushf
adc
or
pop
push
inc
faddp
or
loopne
dec
xchg
adc
mov
shrb
push
add
dec
sbb
pop
push
mov
mov
and
adc
mov
loope
out
test
or
xor
shl
pop
iret
nop
lret
pop
iret
in
es
call
arpl
loopne
test
and
enter
sub
xor
sbb
sbbl
loop
pop
cmp
cmp
and
sbb
sub
push
dec
pop
insb
bound
adc
cmpsl
dec
insb
and
pop
cmp
leave
adc
xchg
insb
mov
mov
insl
mov
popf
jge
xor
fnstcw
sub
test
adc
repz
rclb
mov
pop
push
jo
xchg
mov
cltd
leave
test
or
xor
push
adc
mov
test
sti
adc
jno
les
cmp
sbb
jae
rclb
pop
or
addr16
and
jl
xor
cmp
fs
pop
fistpl
outsl
inc
stos
xor
leave
call
mov
rcll
jge
xlat
cmp
xor
push
xor
xchg
sbb
pop
mov
pop
pop
lret
mov
and
lods
adc
rcll
sub
scas
add
and
mov
sub
inc
js
pop
out
inc
pusha
sub
mov
cmp
jle
push
pop
xchg
sbb
jbe
jmp
xchg
mov
sub
lsl
sbb
or
xor
add
jmp
pxor
push
push
add
shl
and
mov
loop
sar
aaa
fists
mov
push
inc
adc
and
ret
movsl
inc
push
pusha
jo
mov
dec
jne
shlb
int
mov
lock
or
or
xchg
les
xor
mov
je
xor
fstpt
xchg
sbb
add
jne
mov
or
dec
sbb
and
inc
cli
pop
pop
ret
je
popf
fnsave
push
mov
bound
add
cli
shr
inc
repz
add
adc
clc
xchg
ja
or
test
lahf
imul
pop
jl
js
notb
xchg
lods
outsb
push
test
adc
loope
ss
adc
jo
ret
push
pop
xor
or
shll
enter
pop
movsb
leave
push
or
mov
mov
hlt
mov
insb
aaa
out
movsb
outsb
ss
xor
adc
nop
icebp
xchg
add
add
or
mov
dec
sbbb
sbb
push
push
pop
push
add
lret
negb
rorl
fsubrl
imul
dec
or
dec
push
das
cmp
dec
cwtl
xchg
add
mov
xchg
pusha
adc
push
call
inc
xlat
cmp
lock
rcl
dec
fiadds
and
sub
xchg
popf
pop
enter
in
imull
bnd
jmp
andb
adc
cmp
test
sub
fildl
mov
das
and
pop
imul
add
mov
add
and
sbb
scas
repnz
test
add
sbb
ja
sbb
push
push
lahf
mov
fbld
stos
pushaw
pop
and
call
loopne
sbb
imul
loopne
cmpsl
xor
pop
sbb
ficoms
mov
xchg
decl
in
jmp
mov
mov
scas
mov
adc
aam
xor
and
js
and
push
mov
clc
bound
mov
adc
lea
xor
and
pop
pusha
int3
dec
xchg
push
iret
repz
lahf
test
mov
repz
sbb
fsubp
sbb
mov
jge
mov
or
insb
andb
mov
sub
and
add
lock
inc
pop
or
push
inc
pop
imul
sub
rcrb
and
inc
and
ret
jge
je
jo
ficoml
cltd
jmp
inc
faddl
mov
adc
popa
add
mov
inc
test
or
outsb
cmp
jmp
xchg
and
ret
and
push
push
test
fs
mov
es
lock
sbbl
adc
daa
or
mov
mov
push
cld
divl
adc
dec
dec
call
pop
push
mov
jl
add
aas
cmp
and
jle
mov
mov
mov
add
les
mov
push
mov
lock
mov
jmp
bound
out
and
cmpsl
add
sbb
mov
inc
cmpl
add
sbb
add
mov
ret
cmpsl
lcall
push
xchg
xchg
mov
dec
mov
outsl
mov
or
mov
and
mov
sub
jns
add
movsb
pop
in
test
lock
mov
jb
std
mov
mov
lods
std
dec
call
push
jne
add
pop
mov
pushf
movsb
or
jmp
add
lret
dec
daa
or
pop
stc
test
add
jne
scas
jno
cmp
jnp
mov
inc
or
lahf
dec
fdivrs
push
jecxz
mov
push
ds
push
ds
push
cmp
inc
xchg
jns
mov
sbb
in
adcl
push
or
cltd
shr
mov
mov
sub
popa
xchg
pop
add
popf
xor
mov
or
pop
add
cmpl
add
pop
fwait
add
add
mov
mov
pop
in
mov
enter
push
mov
dec
call
mov
call
push
fmull
push
push
push
dec
mov
sub
lods
sbb
jne
inc
sub
pop
aad
pop
and
std
pop
mov
cmp
jne
cmpb
ret
add
mov
xor
movsl
ret
je
inc
imul
imul
lcall
pop
pop
sahf
mov
push
mov
and
inc
xchg
shlb
mov
cmp
mov
fsubl
fimull
int3
or
test
xor
repz
pop
xchg
mov
pop
mov
dec
dec
je
push
or
arpl
cmp
cmp
xchg
xor
iret
and
rorb
les
cmp
xchg
cmpsb
or
test
mov
push
adc
loopne
dec
mov
scas
ss
sub
es
lock
mov
outsb
jg
mov
pop
jmp
mov
loope
js
cmpsl
aam
mov
test
jno
pop
aam
xchg
neg
daa
jmp
mov
sub
jns
sbb
leave
and
adc
xor
add
rclb
pop
adc
addb
data16
js
sbb
adc
pop
push
fwait
sub
fwait
cmp
fmul
addb
lret
jl
out
pop
inc
pop
sbb
aas
or
xor
add
out
data16
mov
enter
xorl
sub
imull
lret
mov
hlt
scas
aaa
and
loopne
jno
pop
jmp
daa
xor
scas
loopne
mov
mov
sub
push
adc
mov
cmp
je
mov
aad
subl
popf
mov
and
dec
filds
add
test
cmp
push
mov
popa
dec
int
je
jge
sub
add
subb
imul
lock
lahf
outsb
push
inc
fildl
cmpsb
push
loopne
sbb
dec
lret
in
mulb
rcrl
imul
outsb
dec
sbb
sbbb
pop
pop
or
dec
push
popl
push
xor
jecxz
push
insl
xor
aad
int3
sbb
mov
mov
test
dec
push
test
mov
neg
adc
neg
ret
loop
adc
push
shlb
and
jb
dec
movsl
lea
enter
push
inc
pop
inc
lahf
in
xchg
arpl
lahf
xor
lahf
mov
call
imul
rclb
mov
into
xor
fiadds
or
add
inc
jmp
dec
cs
out
sub
dec
leave
shlb
ss
or
sub
mov
enter
add
movsl
xchg
add
fldl
mov
or
sub
fists
pop
sbb
jmp
dec
adc
inc
sub
les
sub
pop
mov
int3
mov
sbb
sahf
inc
notl
fwait
mov
pop
mov
xchg
or
and
sub
jb
mov
mov
fs
mov
xor
jecxz
les
je
popf
sbb
jno
adc
push
sbbb
sbb
sbb
out
mov
sub
push
nop
pushf
lods
loopne
dec
ficoml
sbb
cmpsb
jmp
sbbl
out
sub
adc
ficompl
push
add
insb
aad
jns
sub
loope
test
adc
insl
test
push
daa
pop
mov
mov
dec
adc
pop
cwtl
ljmp
nop
lcall
add
push
add
cmp
hlt
rolb
sbb
jp
roll
cs
rorl
xor
movsb
daa
inc
enter
mov
and
and
jno
outsb
or
pop
mov
dec
xor
mov
push
mov
mov
inc
gs
lea
pop
or
pop
out
rolb
pop
scas
mov
aas
xchg
pop
ss
sbb
enter
xor
lock
and
lret
stos
pop
ret
jbe
lods
repnz
leave
lock
aas
mov
sub
pop
add
xor
add
fsubr
pop
dec
aas
pusha
repz
outsb
aas
scas
movsl
push
mov
scas
adc
outsb
insb
out
inc
into
adc
jecxz
inc
aad
pop
jo
dec
inc
xlat
test
lret
mov
pop
and
mov
inc
inc
inc
inc
inc
inc
mov
sub
and
jo
aaa
or
call
aaa
inc
xchg
movsb
repnz
push
inc
mov
mov
mov
add
pop
sti
es
sbb
inc
scas
dec
inc
call
cmpsl
aad
cmp
cwtl
pop
jno
aad
cmc
push
hlt
lods
outsb
inc
sub
mov
mov
add
repnz
dec
es
aas
dec
add
movsb
xlat
add
adc
decb
cld
push
push
aam
int3
sbb
nop
and
cwtl
inc
mov
cwtl
lods
mov
push
enter
rcll
lods
rcrl
mov
xor
cmp
jb
dec
jb
test
leave
leave
mov
stos
movsl
adc
aaa
jbe
mov
pop
xor
test
addb
add
in
arpl
dec
adc
aaa
push
mov
repnz
jb
enter
xor
pushf
cwtl
sbbb
nop
mov
movsb
xor
mov
nop
nop
pushf
cwtl
inc
dec
cs
mov
nop
mov
shr
shl
aaa
int3
cmpsb
js
or
test
lds
orb
repz
stos
ljmp
hlt
lea
cmp
jp
or
fld
mov
insb
mov
jnp
dec
js
push
inc
ds
sbb
adc
cli
je
negl
sbb
xorb
xchg
and
pop
enter
pusha
xor
fiaddl
add
sbb
or
xor
add
pop
push
lods
push
jle
xorl
int
or
and
sti
jl
xor
or
push
sbb
add
jmp
inc
fwait
stos
mov
jmp
lock
mov
inc
nop
sbb
dec
add
test
negl
sub
inc
movsl
inc
or
inc
pop
or
imulb
or
add
shlb
push
clc
push
adc
lock
mov
xchg
mov
fadds
dec
dec
sbb
mov
mov
sbb
inc
call
inc
or
test
xchg
push
cwtl
popl
add
fldcw
xchg
mov
sub
xchg
loope,pn
shr
je
jg
adc
outsl
push
loope,pn
jge
dec
adc
push
and
jle
out
lcall
inc
or
adc
lahf
push
jbe
jle
cmpsb
addr16
lahf
out
ja
jo
mov
pusha
mov
jge
jne
jo
in
pop
jnp
int3
pop
ffreep
lea
lea
stos
and
rolb
in
rcrl
mov
fdivs
movsb
mov
jp
inc
inc
call
jle
push
negl
ret
mov
lret
ret
in
inc
push
mov
shr
dec
js
ds
mov
or
lods
or
cmp
push
pop
into
sbb
stc
add
fdivrs
mov
cmp
or
mov
push
dec
pusha
add
or
roll
push
mov
push
add
bts
jmp
mov
jl
dec
repz
out
xor
add
xchg
les
mov
inc
adc
cmpsl
adc
inc
loopne
js
adc
jne
inc
adc
and
out
mov
or
cmp
adc
sbb
mov
cld
push
dec
mov
aas
xor
dec
pop
mov
push
cmp
daa
adc
mov
sbb
out
add
xor
and
icebp
rol
repnz
fadds
ljmp
mov
pop
addl
cwtl
and
pusha
mov
adc
jle
dec
mov
loopne
cmp
ljmp
mov
and
test
cmpl
in
mov
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
adc
addr16
add
pusha
subl
outsl
inc
test
cwtl
sbb
dec
in
adc
jns
ja
adc
lret
sub
mov
and
jmp
bound
fstp
inc
or
add
adc
dec
mov
sbb
test
jmp
mov
push
pushf
test
push
adc
loopne
mov
out
movsb
inc
push
cmc
fadds
sbb
fincstp
adc
gs
jmp
outsl
mov
test
push
jbe
add
gs
pop
pusha
jle
test
pop
and
lock
scas
and
xor
pop
add
incl
test
adc
int3
insb
sbb
mov
inc
jne
out
dec
adc
es
lods
int3
stc
inc
push
hlt
adc
xor
popa
mov
mov
stos
add
xor
outsl
mov
push
push
sub
push
notb
or
or
ret
sarl
cld
nop
out
mov
enter
or
jne
dec
rclb
popf
rorb
movsb
loopne
testb
fnsave
dec
add
sub
ficoml
movsl
adc
js
mov
inc
cs
je
cmp
jo
outsb
add
or
js
and
imul
pop
dec
ljmp
add
in
into
shll
add
sbb
inc
test
xchg
or
push
and
pop
pop
mov
and
es
jne
push
sbbl
pop
and
out
test
add
jo
shlb
fcmovnb
es
idivb
cmp
mov
mov
scas
jne
sbbl
push
mov
lret
and
jae
jbe
call
andb
jae
lea
add
add
mov
shrb
push
xor
cmp
sahf
into
daa
orl
mov
dec
pop
mov
shlb
mov
stos
pop
mov
add
dec
add
add
repnz
mov
enter
adc
pop
shrb
cli
push
sub
lea
push
or
push
es
mov
and
push
std
push
push
pop
push
int
sarl
aas
sbb
nop
xchg
jo
daa
test
mov
fnstsw
movl
add
pop
movb
lcall
das
xchg
pop
dec
inc
push
jle
inc
in
add
int
push
das
add
push
xchg
adc
lret
sbb
fidivrs
mov
xor
cmp
movsb
or
js
pop
sub
add
arpl
xor
faddl
add
and
testb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
cli
test
adc
lds
adc
or
ljmp
jp
lret
pop
push
or
testb
lock
pcmpgtd
out
test
lock
sar
shl
add
nop
adc
push
rolb
mov
jecxz
cmp
push
in
mov
cmp
inc
inc
jo
sbb
dec
and
mov
mov
test
push
orb
jmp
mov
mov
jmp
lea
sub
cmc
push
ds
inc
sub
push
in
or
or
xor
mov
out
cmpb
jmp
xor
adc
popf
or
sub
mov
or
popf
mov
cld
out
add
sahf
ret
adc
out
adc
sub
adc
mov
mov
mov
movsb
rorb
add
adc
movsb
stc
dec
dec
out
imul
push
ljmp
dec
cmpb
or
shlb
push
shlb
xor
je
inc
movsl
inc
and
push
paddusb
sahf
mov
lock
fcmovbe
data16
inc
sbb
cmp
das
adc
out
repz
mov
sbb
or
test
not
push
lret
mov
push
test
hlt
push
test
jb
jae
xor
pop
ret
mov
mov
mov
push
dec
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
add
fbstp
jmp
mov
sbbb
in
mov
sbb
mov
inc
inc
adc
xchg
iret
cmp
aas
cmp
add
jl
out
insb
aas
pop
inc
dec
cwtl
dec
dec
jns
mov
ljmp
out
sub
pop
dec
js
inc
jb
fnclex
or
mov
lods
dec
pusha
or
or
or
push
mov
mov
inc
and
push
inc
mov
adc
mov
xor
and
sbb
jne
or
repnz
scas
and
add
cmp
pusha
scas
sbb
test
inc
sbb
xorb
jne
sbb
add
stc
dec
mov
push
xor
push
clc
stc
adc
push
scas
aad
inc
lock
push
pop
lea
and
das
call
leave
hlt
mov
add
int3
and
push
fcoms
push
mov
loope
sub
adc
faddp
add
popa
cmp
jle
lret
sbb
and
mov
mov
adc
rorb
icebp
or
push
sbb
cmp
jne
rolb
and
mov
mov
add
xlat
mov
and
jbe
lds
movsl
aad
and
cld
sti
in
adc
call
pop
and
hlt
jmp
int
andl
ja
out
fcmovnbe
loopne
inc
xor
cmp
and
inc
pop
loopne
lgs
test
and
pop
pop
and
ret
rorl
test
add
cs
inc
popa
xchg
jb
jns
dec
ja
ret
sub
movsb
je
movl
test
jmp
mov
stos
add
arpl
imul
clc
lock
shlb
loop
pusha
lods
and
or
push
loope
jbe
xchg
add
orb
adc
pop
lea
pop
ret
mov
adc
add
lahf
push
dec
push
xor
aam
fistps
jb
sub
add
enter
add
jb
mov
pop
xchg
mov
add
ret
sub
pusha
lahf
or
or
shlb
push
or
mov
or
lock
mull
ja
mov
jmp
push
pop
push
push
inc
shr
rcll
addr16
fcmovnbe
ljmp
repz
dec
out
test
test
mul
pop
jb
cmp
sbb
push
jbe
dec
sub
sbb
adc
or
fiaddl
adc
cmp
iret
pop
ret
add
outsl
dec
xor
jno
adc
test
test
rcrb
imul
push
add
inc
sbb
testb
out
std
add
sub
out
xor
xchg
or
mov
test
inc
pusha
mov
pushf
sbb
jo
gs
push
cmp
or
cmpb
stos
scas
daa
enter
inc
adc
lret
sub
testb
inc
jo
inc
cld
inc
and
xlat
mov
mov
add
fsub
in
sbb
pop
xlat
inc
repz
add
sbb
xor
fs
rdmsr
push
push
sbb
test
sbb
dec
orb
jmp
dec
and
in
pop
insl
sbb
movnti
ja
and
add
or
in
das
movb
fists
cwtl
movsb
mov
sbb
adc
cmp
jo
add
cmp
loope
sub
inc
adc
pop
pop
jne
lock
lods
push
push
add
in
xor
jmp
popa
rcl
inc
cmp
mov
or
xchg
shll
nop
xor
pusha
shrb
hlt
fiaddl
push
pop
pop
mov
pop
dec
inc
or
loope
add
xchg
jmp
dec
rorb
or
or
pop
or
xchg
dec
jae
mov
nop
rorl
sub
push
inc
sbb
mov
loopne
pop
outsb
add
adc
push
call
lea
fmuls
and
xor
fsubs
mov
popf
mov
sbbb
mov
insl
add
cwtl
push
addr16
js
or
jne
popa
fcomp
adc
je
mov
rol
jne
add
pop
adcb
inc
adc
addr16
mov
mov
cmp
outsb
add
xor
leave
jge
dec
push
add
jbe
nop
xchg
adcb
mov
or
and
pop
jge
or
loope
mov
cmp
les
push
adc
add
sub
sbb
sbb
xchg
aam
fsubr
push
addb
jge
push
stos
subl
add
push
jne
js
in
aas
jmp
adc
outsl
push
test
fdivs
adc
test
ret
or
push
xchg
xchg
movsl
push
imul
fisubl
out
push
nop
aam
loopne
push
outsl
push
inc
int
cmp
fidivl
fcmovnbe
dec
xor
push
mov
movb
lock
inc
sub
xchg
out
out
sbbb
rorl
jecxz
fisubrs
sahf
dec
std
scas
cld
xor
cmp
inc
jmp
mov
in
testb
jne
imul
add
push
xorb
push
add
enter
mov
in
xor
cmp
jne
sbb
mov
xlat
sub
or
dec
lock
xor
xor
pop
icebp
xor
pop
sbb
cmpsb
pop
je
xor
jne
push
adc
and
or
incl
mov
dec
jo
stos
into
mov
pop
mov
adc
push
outsl
dec
cmp
push
cmp
jge
adc
int3
ja
testb
add
push
and
mov
xor
data16
scas
add
mov
sub
sub
out
sti
pop
stc
xor
pop
inc
rclb
hlt
aaa
or
and
shl
adc
sbb
sbb
pushf
or
insb
iret
dec
ret
popa
stos
jl
js
mov
into
pop
cmpsb
ljmp
xor
mov
xlat
sarl
inc
adc
mov
lock
add
ja
mov
sub
rcll
sbb
pcmpgtw
test
nop
insb
mov
lds
adc
loopne
sbb
sub
xchg
je
cs
orl
mov
arpl
mov
add
cmp
or
sub
data16
push
rclb
mov
stc
loopne
addr16
insl
rorl
sbb
mov
push
mov
jl
test
test
fs
push
add
add
inc
movsl
or
and
or
insl
mov
mov
shlb
xor
cli
adc
ja
inc
add
lea
lea
mov
mov
jnp
out
sahf
mov
loopne
cld
push
sbb
adc
inc
jmp
popl
lock
fiadds
xlat
nop
cmp
inc
mov
js
add
xor
pmuludq
addl
outsb
jl
repnz
adc
inc
mov
insl
div
xchg
dec
and
pushl
add
jno
push
pop
pop
cmp
xchg
loop
mov
cmp
push
xor
or
test
sbb
mov
leave
ds
cmp
decb
push
push
push
popa
inc
push
insb
dec
sbb
insb
enter
dec
or
fsubrs
cmp
js
rol
jl
pop
sbb
xor
pusha
mov
add
lea
hlt
cmp
cmp
pop
jmp
mov
and
lcall
ss
push
pop
dec
stos
inc
cmp
push
cmp
and
adc
pop
xchg
cmp
daa
mov
push
pop
out
aam
call
movl
shrb
rcrl
pop
addl
sub
insb
je
sub
dec
mov
push
mov
push
mov
push
imul
loopne
test
loopne
mov
jmp
sbb
lcall
jo
add
stos
jl
hlt
loopne
mov
or
sar
das
xor
loope
shlb
mov
orl
orb
push
adc
sub
leave
dec
lods
hlt
mov
and
inc
loopne
inc
jge
call
adc
loop
ss
xor
mov
cmpsb
pusha
mov
mov
daa
xchg
inc
mov
inc
sbb
cmp
out
adc
mov
cmpsb
push
adc
cwtl
adc
pop
mov
sub
xor
dec
mov
inc
jmp
rolb
pushl
leave
mov
sub
cwtl
cmpsb
sbbb
cs
pop
adc
cmp
adc
rcrl
jle
mov
inc
mov
push
push
nop
mov
pop
add
dec
mov
cwtl
or
test
mov
add
xchg
cmp
arpl
insb
mov
aas
insb
cwtl
push
lods
mov
cmp
std
andb
xchg
inc
jmp
push
mov
xchg
rclb
mov
ja
aad
roll
iret
and
or
pop
dec
es
add
and
mov
push
cmp
or
hlt
add
mov
dec
sub
or
das
jl
incb
push
mov
movsb
andl
jmp
sbb
push
jo
jb
test
stos
popf
add
sub
ds
and
mov
push
pop
mov
das
aaa
push
lock
cmp
jle
sub
cmp
xor
sbb
adc
incb
jmp
dec
push
in
jbe
cmp
jno
add
cmp
mov
clc
aas
lock
inc
sbb
or
adc
sbb
mov
sub
ret
or
mov
pop
jge
mov
mov
xchg
outsb
divl
nop
add
jne
out
dec
jae
and
sbb
ret
fldenv
fs
mov
imul
aaa
mov
or
lahf
and
cwtl
js
mov
orl
mov
pop
dec
push
and
inc
ret
daa
pop
stc
sub
cmp
mov
popa
or
jbe
sub
mov
lock
mov
data16
add
test
nop
mov
add
clc
cmp
loope
inc
sbb
testl
or
mov
jecxz
fldl
pop
or
push
sbbl
dec
or
cmp
mov
pop
cwtl
inc
repnz
fdiv
lea
mov
xor
cmp
or
jecxz
clc
call
inc
jmp
cmp
out
xor
arpl
scas
dec
mov
dec
push
hlt
dec
adc
mov
jne
push
xchg
sbb
add
adc
rcr
lods
rol
cs
jge
add
xor
aam
mov
sub
cmp
xlat
test
cmp
mov
mov
sarl
add
adc
jge
jle
fsubr
in
mov
xor
jne
and
ficoml
int
mov
add
cmp
call
inc
jge
add
mov
sbbl
sbb
mov
jb
or
bound
jge
movsl
add
push
pop
mov
add
arpl
ror
or
jne
mov
push
shll
roll
or
xor
jmp
nop
inc
clc
xlat
jae
mov
std
mov
sbb
push
or
mov
or
mov
xchg
adc
scas
pop
inc
testl
test
int
push
cs
jmp
fsubrl
or
jne
inc
or
cmp
xchg
pop
adc
cwtl
mov
arpl
and
nop
jb
fwait
add
test
push
pushf
fwait
insl
filds
jo
lea
lcall
add
adc
nop
clc
popa
cld
sub
add
bnd
add
push
mov
shlb
and
incl
cmpl
insl
mov
push
xor
ss
sbb
sti
jg
add
add
rolb
loop
xor
ret
xchg
mov
mov
gs
call
lock
mov
dec
push
aas
or
push
jmp
pop
shll
or
test
das
adc
inc
mov
add
into
negb
xchg
jl
idiv
das
push
shrl
shl
shr
or
mov
sahf
dec
mov
lock
jne
outsb
mov
inc
shll
aam
sub
push
aam
loop
cmp
or
push
add
lock
out
adc
rcr
fiaddl
mov
sbb
nop
ljmp
jmp
out
jmp
or
lods
inc
sub
mov
xorl
sbb
mov
jl
fiadds
int3
jmp
xchg
or
xchg
mov
lea
mov
loop
lret
into
jmp
lods
out
xchg
insl
jl
ror
and
mov
mov
mov
inc
sbb
cmpsl
mov
xorb
lret
das
cmp
xchg
inc
test
sbb
sarb
add
adc
les
lcall
mov
inc
mov
inc
mov
pop
xchg
add
mov
push
inc
add
sarl
js
les
cmp
test
mov
cld
and
call
jle
pusha
push
mov
or
orb
mov
in
adc
sbb
mov
xor
push
sub
push
jle
pusha
stos
add
addr16
int3
sbb
addr16
mov
loopne
daa
pop
cmp
inc
cmpsl
or
push
add
jo
pop
add
xor
xor
mov
pop
in
rorl
mov
jbe
paddd
dec
adc
test
rolb
mov
and
jb
dec
mov
popa
in
ret
rolb
or
rcl
repz
cmpsb
or
push
or
push
outsb
cmp
divb
es
cld
lods
popa
dec
mov
mov
mov
pusha
xchg
incb
pop
pop
lea
or
mov
insb
sbb
xchg
call
jle
popf
call
pop
mov
add
in
mov
inc
mov
mov
xor
mov
psubsb
sbb
mov
jmp
sar
or
inc
push
mov
mov
pusha
stos
cmp
iret
jmp
sbb
faddl
dec
cs
xor
mov
dec
push
jg
pop
sbb
adc
mov
loope
mov
add
and
push
lock
int
dec
xor
push
adcl
incb
imulb
loopne
sbb
scas
push
xchg
loopne
gs
ljmp
xor
dec
pop
les
add
inc
dec
pop
push
add
in
loopne
bndldx
or
or
jnp
xabort
enter
cmp
xchg
cmp
inc
loope
push
lea
dec
daa
iret
add
leave
sar
mov
add
lea
or
testb
sbbb
and
adc
outsb
insb
xor
mov
xchg
xorps
cltd
idiv
xor
sbb
cltd
lods
add
pop
ret
push
dec
popa
es
loopne
mov
pop
and
push
inc
pushl
notb
dec
mov
js
mov
lahf
pusha
cmp
or
xor
adc
ds
xor
and
ret
push
push
sub
roll
xchg
push
inc
mov
inc
lods
addr16
pop
sar
mov
fsubl
xchg
lock
add
rcll
push
hlt
mov
and
dec
cmc
andl
outsb
jmp
or
shll
test
mov
lret
add
mov
loopne
insl
cmp
fsubs
in
movsb
int3
mov
popa
xchg
xchg
lock
inc
call
jmp
ret
mov
outsb
mov
inc
xlat
test
dec
hlt
rcrl
lea
lods
inc
cmp
fwait
jnp
xor
pusha
add
push
inc
inc
add
sbb
lea
je
xorb
jns
orl
lods
inc
xchg
scas
mov
and
aam
push
dec
mov
incl
cmpsb
int
push
jnp
imul
push
or
pop
daa
cmp
mov
aas
sbb
push
cmp
test
jne
movntps
rol
xchg
lea
sub
imul
push
jmp
cmovb
sub
xor
jae
pusha
dec
iret
test
stos
or
inc
out
push
mov
and
sbb
sbb
push
push
fisttps
cmp
mov
add
mov
mov
inc
mov
sbb
inc
dec
xor
pop
subb
addr16
pop
ss
mov
and
mov
sbb
sbb
pop
ret
xchg
cmp
add
ret
inc
inc
mov
cli
or
xorps
sub
movb
mov
push
addl
adc
aad
gs
xchg
aaa
inc
icebp
and
lea
fnstenv
push
ds
add
rcl
les
daa
ret
sub
sub
insb
pushl
push
int
shlb
jbe
fs
pop
clc
dec
sbb
jns
adc
fiadds
into
insl
push
jle
jg
sbb
mov
pop
cmp
or
push
sub
sbb
or
and
cmp
popa
add
nop
or
daa
jo
push
andl
adc
cmp
push
or
add
sarb
shlb
push
lock
push
or
push
and
jmp
lods
test
inc
dec
jae
es
es
test
js
sbb
stos
mov
xchg
test
mov
push
jo
inc
dec
js
lret
jmp
inc
mov
pop
mov
adc
call
xchg
aas
push
jae
jo
jae
adc
les
xchg
add
jmp
ja
lcall
je
das
and
pop
cmp
xor
cmp
mov
adc
cmpb
xchg
int3
test
lret
and
sbb
aam
and
sub
xchg
cmp
mov
add
jne
add
movsb
mov
loop
xchg
stos
lock
pop
test
icebp
and
mov
imul
xchg
xchg
push
and
or
xor
scas
js
xor
popaw
inc
ss
xor
xchg
adc
lods
xchg
mov
push
xchg
cmp
inc
and
fisubs
push
push
jns
or
popa
rorl
adc
pop
and
shlb
push
push
xchg
mov
sti
and
pop
cmc
pop
bound
decl
rolb
push
and
cmp
push
mov
or
pop
xchg
xor
xor
inc
adc
orb
loop
mov
enter
jmp
xor
lock
test
cli
inc
cwtl
adc
cmp
movsb
pop
out
add
push
jmp
test
push
pop
imul
jecxz
enter
jl
jmp
and
and
or
in
jmp
scas
popa
push
ja
outsl
sub
push
xchg
je
ljmp
or
inc
jl
ljmp
jb
test
inc
jl
enter
inc
lcall
adc
pop
adc
and
adc
push
inc
gs
test
icebp
mov
sbb
pop
add
dec
lret
inc
test
lret
xor
or
mov
and
add
js
xor
mov
pushf
lods
dec
pop
pop
pop
xchg
jg
les
cmp
and
pop
add
push
jno
dec
sbbb
xchg
data16
lods
inc
dec
dec
mov
or
sbb
inc
adc
add
shll
and
jge
push
stos
dec
jl
jmp
rol
xor
dec
pop
shl
mov
dec
mov
mov
inc
enter
mov
scas
push
xchg
mov
fimuls
jl
sbb
andl
enter
jle
shrb
in
push
mov
arpl
cmpl
lea
rcll
sub
or
mov
pop
cwtl
push
jne
push
pop
xchg
bound
pushl
pop
movl
mov
add
rcl
daa
adc
xchg
mov
mov
insl
push
std
jne
loope
fcmovbe
push
push
jnp
loope
push
pop
jne
pop
push
pcmpeqw
pop
or
inc
imul
jge
push
rolb
xchg
mov
lea
jo
and
ficoms
std
dec
hlt
xor
push
lcall
cwtl
clc
rorl
fistpl
pushf
or
xor
or
push
push
icebp
imul
mov
test
outsb
scas
mov
in
imul
dec
or
lahf
popa
fcoml
cmp
pushl
imul
mov
imul
or
adc
add
and
fistpll
or
jne
jge
lock
pminsw
xor
sarl
mov
mov
dec
imul
mov
jmp
nop
mov
xor
mov
dec
je
jae
out
popf
sti
jmp
mov
push
mov
adc
jo
mov
inc
or
jnp
fmull
sbb
pop
icebp
adc
and
or
cwtl
ret
mov
mov
fsubl
dec
pusha
sbb
mov
inc
pusha
jne,pn
sbb
inc
mov
sub
loopne
adc
mov
sbb
or
mov
adc
lds
lahf
push
icebp
push
insb
call
add
es
cmp
jmp
cwtl
les
pop
adc
inc
lock
sub
add
push
adc
fs
bound
orl
test
jg
mov
inc
jp
inc
arpl
mov
cmpl
and
mov
sbb
mov
add
adc
ja
bound
inc
loop
jno
pop
add
and
sbb
mov
jb
arpl
flds
and
add
int3
lahf
push
push
inc
xorb
out
or
and
or
add
pop
adc
add
andl
daa
push
xor
add
out
and
insb
jo
add
add
cmp
pop
push
pusha
insb
loop
fists
ss
xor
cwtl
cmp
mov
ret
and
jg
mov
add
call
int3
ret
or
xchg
add
fwait
dec
and
or
ds
rcrb
mov
movsb
xor
popf
cmp
mov
and
pop
sub
cmpsl
out
mov
adc
dec
cmp
int3
in
outsb
add
cmp
sub
inc
call
push
inc
cmp
sub
sbb
push
add
cmp
mov
pop
cld
imulb
mov
insb
xor
and
pop
cmp
adc
add
xchg
mov
ja
mov
xor
mov
cmp
lahf
daa
sti
sbb
mov
add
test
jle
or
and
dec
je
jne
sbb
outsl
push
loop
stos
or
out
rorl
pusha
jns
pop
or
je
movl
cld
mov
pop
add
jae
mov
adc
xchg
ljmp
xor
arpl
cltd
pop
push
add
cmp
xchg
into
sbbl
test
in
adc
loop
add
jg
cmp
decl
sub
jg
xor
loope
mov
movsb
jno
cmp
push
in
push
ds
dec
mov
pop
sbb
inc
mov
imul
aam
in
rorl
stos
and
sub
xor
jecxz
xor
mov
mov
rorb
iret
push
or
adc
ss
jb
sbb
sub
jb
jb
xor
cmp
data16
cmp
inc
and
in
in
inc
cmovs
mov
add
cmp
fs
cmp
je
jl
mov
or
sbb
mov
and
nop
xchg
xor
and
cwtl
pushf
mov
movsb
test
fs
dec
es
xchg
dec
xor
cltd
fs
imul
call
cltd
aam
hlt
and
cltd
fs
cld
add
insl
and
leave
add
add
xor
cltd
adc
fs
sbb
and
cltd
fs
dec
sub
xor
xchg
dec
cmp
cmp
dec
dec
mov
and
dec
push
push
pop
test
sbb
insb
sbb
rolb
pop
movsb
cltd
nop
ss
test
mov
imul
les
fbstp
and
adc
xchg
or
movsb
cltd
nop
adc
nop
adc
lcall
pushf
cltd
nop
inc
and
movsb
movsb
cmp
cmp
mov
imul
mov
inc
dec
int3
push
cmp
dec
enter
pop
movsb
or
mov
aam
or
ret
decl
xchg
and
movsb
icebp
movsb
or
or
pushl
cmp
repz
xor
xchg
dec
xor
push
in
imul
or
aas
andl
pop
js
lock
xchg
je
push
fisubs
shld
lret
and
in
or
add
or
sbb
out
push
adc
fdivp
and
fldln2
shll
dec
xor
adc
or
in
inc
dec
push
shr
add
jmp
xor
add
jge
imul
ret
js
in
cmpb
test
adc
mov
add
sbb
xor
imulb
sar
shll
and
inc
addl
loop
mov
es
pop
aad
clc
incb
lods
ret
ficoms
sbb
lock
and
mov
dec
fisubl
and
jecxz
sbb
out
jmp
xchg
jmp
cld
imul
loope
mov
xor
sub
aaa
jge
and
shl
mov
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
xchg
add
movsb
xor
inc
jecxz
dec
sub
adc
fnstsw
pusha
push
sbb
pop
cmp
push
movsl
je
or
mov
inc
shl
inc
testb
xchg
cmpsl
repnz
in
adc
sti
add
movsl
out
cmp
out
test
inc
inc
daa
ret
sub
mov
dec
cs
jo
xchg
push
or
sub
push
and
sbbl
stos
int3
pop
movsl
pop
out
testl
rorb
adc
icebp
lcall
jmp
push
and
or
push
or
arpl
aaa
inc
flds
fstps
jmp
fisttpll
push
xchg
adc
fistpl
mov
loope
push
hlt
adc
fildl
movsl
jbe
inc
push
pop
sub
jl
push
divl
or
add
adc
xor
hlt
sahf
or
or
lock
inc
call
pop
dec
push
aaa
sbb
ret
and
cmp
add
mov
add
jmp
mov
pop
sub
jmp
sub
nop
xchg
add
push
or
push
fldcw
movsb
jns
add
adc
add
jge
xor
scas
test
cmpsb
sbb
mov
mov
je
xor
mov
add
add
and
sub
mov
fstpl
or
test
mov
jge
ffree
repz
xor
push
mov
add
rcll
xorl
enter
cld
repnz
xchg
mov
cli
shrl
scas
lock
dec
cmp
orl
rcrl
nop
loopne
or
push
push
pop
jmp
pop
add
pop
cs
icebp
jno
lcall
cmpsb
mov
faddl
ret
push
push
pop
cwtl
add
subb
push
shr
jle
push
add
jns
fistps
shlw
sbb
cmpsb
pop
adc
jg
add
add
and
and
mov
add
shrb
fcompl
ret
popa
inc
add
fs
adc
fadd
sbb
imul
and
sbb
hlt
adcl
and
je
repnz
sub
add
scas
add
and
dec
and
cmpsl
packuswb
out
push
pop
shlb
pop
das
in
push
push
fsubrp
fwait
jno
bound
xlat
in
leave
dec
inc
and
push
fcomps
lock
add
or
push
test
enter
dec
cwtl
pop
add
or
sbb
out
frstor
lret
jo
sub
pop
lods
lea
in
popa
xor
xor
lock
mov
rolb
add
test
sub
pushl
roll
mov
cwtl
mov
int
xor
jbe
push
das
adc
addr16
inc
xchg
test
mov
adc
mov
or
jl
push
jnp
or
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
sarl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
or
lods
mov
leave
test
xchg
orl
adc
cmpsl
mov
and
shll
push
or
mov
and
decb
push
or
cmpl
mov
push
addr16
mov
pop
je
aad
xor
mulb
pop
mov
sbb
mov
push
push
hlt
mov
inc
test
pop
dec
ljmp
adc
fnstsw
lgs
or
mov
loop
scas
sub
mov
fnstenv
add
xor
fdivrl
mov
xchg
push
push
mov
les
sub
lock
fsubs
mov
mov
inc
adc
dec
lock
pop
repnz
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
add
sbb
push
lret
dec
sbb
xorb
push
cmp
xsaveopt
lahf
insl
test
mov
mov
cmp
or
andl
pop
popa
cmpsl
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
int3
or
adc
es
dec
int
jle
jg
daa
inc
jb
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
mov
addr16
sbb
sahf
adc
push
ja
inc
mov
test
pop
sbbb
and
push
push
pushf
add
mov
inc
inc
pop
mov
pop
mov
test
mov
jo
push
xor
imul
lods
push
nop
lret
je
imul
cltd
xor
pop
add
dec
push
sti
jbe
loopne
rorl
mov
dec
test
test
adc
idiv
or
or
dec
rolb
cli
push
or
add
jo
push
mov
pop
std
cmp
dec
les
jl
dec
or
imul
jmp
add
aas
pop
enter
push
flds
ret
lret
loopne
test
jbe
jl
pop
or
pop
mov
aam
lock
stos
mov
mov
pop
push
mov
sub
add
cmp
insl
lods
cmpsb
or
add
sbb
adc
scas
ret
dec
or
inc
lea
sbb
push
mov
lret
movsb
mov
rolb
fbstp
not
test
add
cld
inc
or
repz
aaa
idiv
xchg
push
pop
pop
and
mov
out
mov
xchg
mov
loopne
adc
iret
jbe,pt
dec
sbb
fisubs
cmp
cli
xor
cmp
mov
clc
sbb
out
cmp
test
adcb
int3
mov
inc
jae
pop
shlb
xor
jns
add
or
sarb
inc
clc
sub
mov
mov
pop
mov
or
lock
inc
mov
xchg
mov
or
scas
andl
xor
lods
pop
je
aam
dec
xor
mov
pop
rorl
cmp
or
loopne
mov
shl
sub
xorb
jl
lds
xor
adc
dec
push
ds
push
or
js
aam
out
mov
jl
fwait
push
cwtl
adc
dec
loop
sbb
into
pop
xchg
push
sbb
mov
fs
loop
dec
mov
xor
dec
sub
xchg
push
push
shl
enter
inc
lods
sbb
mov
or
test
jae
add
out
lock
into
loopne
rcrl
dec
xor
push
cli
inc
jge
rcrb
cmp
adc
pop
pop
push
push
jb
push
lcall
add
xor
cmp
and
ret
ss
hlt
push
aas
movb
rorb
lcall
stos
and
or
cmp
xor
add
jo
xorl
sub
arpl
rolb
dec
add
jne
daa
andl
sbb
out
inc
push
jl
mov
iret
and
mov
xor
out
and
mov
sbb
shll
mov
xchg
and
enter
pop
mov
inc
or
loopne
mov
enter
roll
loope
dec
push
lret
jne
and
and
mov
cs
mov
and
push
sub
enter
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
sbbl
test
pop
jne
cmp
mov
pusha
jb
lcall
push
inc
mov
add
fimull
mov
rorl
aam
pop
dec
fidivrl
insb
xchg
out
xchg
add
jo
push
sub
jp
xchg
cmp
sti
mov
cs
or
ss
cmp
je
or
sub
xor
mov
dec
add
mov
jg
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
mov
mov
lea
fistpll
cmp
adc
and
xchg
sub
call
into
sti
xchg
or
add
adc
push
jbe
dec
or
add
xchg
xchg
das
test
adc
pop
fcmovu
jge
add
adc
jno
cs
in
test
jle
out
fwait
imul
subl
and
sub
insl
xchg
cs
jle
test
sub
mov
ret
push
pop
sbb
xor
adc
or
fcoml
cmp
js
add
mov
popf
loopne
fs
inc
cmpl
mov
test
sub
push
dec
add
adc
js
cld
mov
pop
push
mov
cli
sbb
sbb
mov
faddl
lock
xor
pop
fildll
jmp
sub
add
jo
aad
pop
jmp
addb
push
rorb
inc
jg
aam
fidivl
push
neg
movb
mov
add
fs
cltd
push
dec
push
mov
pop
sub
add
add
add
push
mov
enter
shlb
push
daa
test
jbe
jns
pusha
je
push
add
es
mov
push
imul
fldenv
inc
mov
and
jmp
outsl
cmpb
jmp
push
or
sub
fsubrl
adc
movsb
push
push
adc
rorb
sub
loop
insb
sub
lret
mov
add
addr16
gs
push
lock
push
jmp
add
mov
push
out
pop
xor
and
push
fadd
push
fidivs
pusha
xor
add
jl
cmp
jge
js
push
fcoml
and
call
mov
mov
mov
fsubs
imul
add
push
mov
push
sahf
pushf
adc
je
and
cld
push
and
or
jne
xor
stos
lods
xor
incb
dec
mov
fdivl
dec
jecxz
push
cmp
dec
mov
test
cmc
neg
aaa
orl
add
sub
dec
sbb
test
enter
js
or
sbb
fdivrp
ret
add
fcoml
dec
sub
leave
and
andb
insb
movb
iret
and
mov
mov
inc
popf
neg
sbb
mov
inc
into
and
adc
jg
outsl
mov
nop
ret
jb
shll
add
pop
es
pusha
xchg
icebp
add
sub
andb
jmp
inc
xor
mov
jb
add
sbb
aam
ficomps
imul
xor
shlb
ja
mov
push
hlt
nop
or
add
sub
adc
loopne
mov
call
mov
push
pushf
pop
ret
inc
cmp
or
push
inc
xor
cmp
sub
cld
add
lods
clc
dec
or
shrd
sbb
jge
xchg
sbb
jge
inc
xlat
inc
sti
sbb
clc
cwtl
xor
fists
jg
in
inc
and
xor
out
and
or
cltd
cld
sub
jo
lea
pushf
or
rorl
inc
call
insb
xor
imul
jl
ret
lock
or
jo
ljmp
and
fiaddl
sbb
js
jg
jb
out
xchg
xor
jmp
adc
cwtl
shl
fimull
jl
loope
inc
adc
int3
hlt
mov
pop
push
mov
push
lock
or
add
imul
dec
dec
inc
dec
pop
or
sbb
imul
lock
cmp
sarl
inc
and
in
in
ja
enter
adc
ss
adc
or
jbe
iret
and
movsl
mov
jo
sbb
movw
sub
push
push
jle
in
in
jne
rclb
mov
jmp
add
inc
pop
mov
or
and
jns
neg
jmp
sahf
pop
and
or
aaa
push
lods
outsl
lea
pop
pop
xor
add
add
push
xchg
pop
inc
shrl
push
and
mov
or
add
jl
or
add
shll
xor
cs
add
inc
and
xor
xor
adc
pop
push
divb
push
cmp
sarb
nop
cmp
imul
stc
test
xor
enter
push
push
mov
fstps
push
out
pop
cwtl
push
call
outsl
les
adc
sub
pop
inc
test
lock
mov
mov
push
add
adc
popf
jmp
xor
and
add
sbb
clc
gs
jl
mov
pop
data16
cmpsl
fcoml
inc
popa
je
in
pop
sbb
inc
je
dec
aaa
cmpsl
jmp
xor
add
pop
xor
pop
mov
mov
movsb
xor
inc
cmp
mov
or
mov
popa
pop
orl
loopne
mov
add
aam
and
and
arpl
or
push
je
mov
mov
inc
pop
push
ffree
test
and
or
daa
push
or
rcl
ss
cmp
cmp
in
cmp
cmpxchg
jmp
sarl
push
int
inc
fistl
jbe
mov
jne
add
test
jne
cmp
testl
inc
mov
hlt
ja
sub
push
addl
sub
xlat
sub
inc
aam
int
sub
mov
cmc
cmp
mov
fwait
push
dec
mov
push
scas
test
inc
add
inc
sbb
aam
aam
xor
pop
sub
push
and
leave
push
inc
cltd
mov
and
xor
les
adc
sub
push
dec
xchg
xor
cmc
adcl
mov
or
mov
cmp
push
cmp
nop
push
add
mov
aam
and
mov
pop
inc
mov
adc
les
adc
lods
sub
cmpl
inc
clc
test
cmp
or
aam
mov
push
mov
xlat
xlat
aad
mov
push
mov
pop
pop
pop
pop
pop
cld
sarb
and
cmp
jae
xchg
dec
mov
nop
add
sbb
and
in
scas
lcall
lret
je
dec
je
dec
add
sti
push
push
jmp
or
jmp
add
jnp
inc
cmp
or
lcall
adc
rcr
lcall
inc
icebp
pop
ret
roll
cltd
add
add
or
and
je
or
js
rcrb
adc
sbb
das
add
xor
gs
sbb
cmp
adc
aas
cmp
sbb
dec
mov
mov
or
push
sub
lahf
shrb
sbb
or
or
nop
pop
pop
cwtl
or
dec
xchg
lods
lods
jnp
inc
adc
adc
je
fiaddl
sub
nop
into
sub
xor
mov
repz
xchg
scas
jl
jecxz
xchg
jno
or
xchg
push
mov
inc
enter
dec
loope
cltd
popa
or
mov
mov
aas
xchg
add
ret
push
push
call
adc
call
dec
orb
lcall
sbb
bnd
shr
add
or
mov
sub
add
shr
or
mov
les
adc
test
and
add
mov
insl
xor
lock
xchg
mov
mov
add
pop
pop
or
jbe
jle
ja
add
jl
in
sbb
cmp
nop
adc
or
dec
pop
pop
dec
test
je
sti
addl
or
mov
and
inc
sbb
test
bound
xor
lret
xchg
lret
clc
and
xchg
lea
xor
pop
insb
shll
cli
push
push
inc
pop
or
push
xchg
adc
adc
das
or
fcoml
fistps
icebp
xchg
aam
cmpsb
and
xchg
sbb
ret
mov
es
or
lock
icebp
sbb
insl
sub
dec
mov
adc
loope
icebp
insl
flds
imul
mov
sbb
lea
push
roll
incl
cmpsb
or
xchg
or
cmp
mov
shll
fnstenv
pop
data16
popf
push
jbe
les
xchg
dec
dec
mov
pop
xorb
jecxz
push
pop
add
lret
je
repnz
and
xor
sbb
push
inc
call
pop
loope
pop
inc
jb
jecxz
ljmp
repnz
xor
add
ret
enter
cmc
addl
pop
or
sub
testb
dec
jo
mov
and
cltd
sub
sub
or
add
mov
stos
xor
or
insl
test
lods
mov
push
and
or
and
dec
xor
stos
sbb
enter
add
add
rcrl
push
sub
and
inc
sbb
fmul
leave
rclb
add
aad
inc
add
sub
inc
inc
push
xor
push
imul
and
xor
mov
push
test
mov
filds
ret
push
aas
mov
andb
andb
in
adc
cmp
std
sbb
add
pop
je
add
sbb
mov
sub
bound
mov
xor
fsubs
pop
mov
push
mov
sbb
rcll
sub
push
add
fldl
cmp
and
pusha
add
pop
mov
sub
call
in
push
movsb
ss
xor
enter
dec
sub
lea
push
add
or
cmp
and
pusha
push
add
imul
pusha
jbe
mov
cmp
jle
inc
and
std
rclb
pop
scas
and
popf
cmpsb
sbb
mov
dec
insb
xor
outsl
mov
fcoml
mov
jl
xor
fidivl
push
incl
adc
or
sbb
push
cmovnp
dec
jns
jns
jp
push
add
mov
imul
cs
orb
and
mov
cld
cmpsb
push
add
sub
pop
fcomps
and
sbb
jne
cmp
jne
lret
cmp
test
dec
add
lahf
or
loopne
or
or
or
mov
ljmp
out
roll
leave
add
or
je
mov
iret
sbb
cltd
push
adc
cmc
dec
push
xor
jmp
adc
mov
jno
bound
adc
jne
jbe
add
jmp
pop
popa
shlb
and
lret
pop
add
sbb
hlt
and
adc
loopne
pop
mov
addl
adc
rclb
pop
jecxz
add
jge
inc
inc
push
neg
idivl
out
sahf
loopne
sbb
sub
inc
adc
dec
repnz
popa
adc
data16
xorl
push
push
add
xlat
push
inc
and
fnstenv
fcomi
sbb
adc
aad
inc
adc
sbb
mov
add
and
dec
jns
mov
dec
jne
pop
pop
pop
aam
sub
jae
or
jae
or
pop
adc
ret
loope
shr
sbb
dec
fsubrs
adc
push
je
push
push
idiv
and
maskmovq
cld
lock
push
cmp
je
cmpsb
shlb
add
add
mov
sbb
dec
or
into
add
lods
pop
lods
jae
or
adc
nop
ds
incb
or
aad
call
into
jbe
hlt
add
hlt
adc
sbb
pop
aad
and
push
adcb
adcb
inc
xchg
outsb
jo
or
adc
sbb
inc
mov
inc
add
test
jo
xchg
gs
mov
or
scas
loopne
xor
ljmp
cld
inc
ss
test
mov
or
pop
or
fstl
out
cld
mov
rcl
and
leave
jne
pop
inc
cmp
jmp
ss
subb
add
push
add
mov
and
mov
ret
cmp
ret
inc
mov
push
lahf
push
mov
adc
xchg
mov
das
rclb
pop
mov
subb
es
mov
je
adc
jns
das
jl
out
push
cmp
ja
add
cmp
adc
cmp
jne
je
inc
xchg
shll
leave
adc
mov
sbb
add
jl
pop
pop
push
adc
je
adc
push
fmuls
adc
add
dec
ljmp
rclb
mov
xor
or
test
dec
push
sti
aas
cs
push
movb
call
add
and
sbb
mov
cmp
test
add
mov
cmpsb
and
ret
pusha
movw
xor
jb
add
fstl
xchg
xor
stos
xchg
cmp
pop
mov
cmp
mov
inc
loopne
sbb
test
mov
or
sub
cmp
pop
out
add
add
into
push
sarb
add
sbb
cmp
xorl
ja
dec
js
imul
cli
and
call
inc
imul
inc
dec
lea
sar
dec
popf
lds
xchg
data16
fildl
es
ljmp
imul
sahf
inc
ret
inc
call
js
xorl
push
push
dec
test
pop
and
dec
cwtl
mov
xor
and
mov
and
or
dec
movb
repnz
sbbb
adc
mov
mov
sub
and
and
lea
inc
xor
andl
ss
cmpb
pop
cmp
mov
mov
xlat
loopne
out
and
mov
inc
call
in
ljmp
push
inc
mov
cmp
cld
push
mov
mov
jne
lea
adc
lods
xor
push
sub
sahf
inc
mov
push
lea
xor
nop
pushf
or
outsb
stos
fcoml
imul
add
movsb
pop
sahf
push
pop
xor
cmp
lods
shll
inc
insl
pusha
shrw
cmpsl
insb
xchg
mov
mov
pop
push
lcall
and
clc
cmpsl
jne
rorb
cmp
lock
xor
fbld
mov
gs
add
shr
or
and
rorb
sbb
jne
push
push
lret
movl
ret
ds
mov
or
cwtl
shrl
loope
shr
or
mov
jp
or
dec
mov
jmp
push
jnp
hlt
mov
pop
lock
dec
and
test
testb
sahf
cmpsl
mov
dec
cli
cli
inc
cli
div
pop
cmp
and
cmp
subl
and
jnp
jnp
xchg
test
sbb
sahf
les
cli
adc
in
xor
lahf
call
ficoml
pushf
inc
sub
jmp
sbb
enter
push
aad
jg
or
pop
lcall
inc
in
int
mov
push
pushw
dec
sbb
out
rclb
inc
repnz
pushw
sbb
imul
out
jge
cmp
push
out
enter
mov
jb
inc
ljmp
in
sub
inc
daa
adc
jne
fcompl
sub
or
push
roll
jne
add
sub
and
dec
jbe
dec
sub
jmp
popa
mov
adc
shlb
dec
push
adc
cmpsb
xor
add
adc
mov
sahf
lret
fcmovu
mov
mov
insl
test
jmp
mov
jp
mov
add
idiv
adc
xchg
adc
pop
div
jg
or
adc
das
test
jge
or
sbb
das
nop
or
jb
or
and
movsb
jmp
add
in
adcb
enter
loopne
sbb
aaa
xchg
rorb
lret
mov
pusha
add
jbe
stos
cwtl
sbb
sub
inc
add
mov
sbb
aas
in
add
inc
mov
dec
xchg
push
pop
outsb
call
xchg
sub
mov
sbb
lret
mov
shl
shrb
cli
pop
inc
mov
and
fs
lds
neg
and
mov
insl
call
fucomp
imul
call
dec
jbe
jno
fsubs
pop
add
and
mov
push
pop
pop
rol
in
fisubs
out
pop
sti
jmp
add
jne
mov
les
xchg
fcoms
notl
push
adc
fldenv
ljmp
pop
add
adc
sahf
mov
mov
jae
add
sub
adc
adc
test
call
shl
xor
add
add
into
or
mov
inc
xor
inc
and
dec
jg
fistl
inc
sub
jge
sub
cmpb
sub
movb
dec
cmp
or
jle
add
dec
add
add
fadds
mov
call
adc
add
sub
out
jb
int
adc
cmp
in
mov
mov
lret
or
mov
cwtl
push
mov
mov
jo
ret
adc
add
xchg
cmpsb
rorb
add
add
add
popf
ret
test
mov
mov
stc
lret
mull
push
or
push
or
push
push
sbb
sarl
sub
or
push
rolb
pop
or
or
jne
or
xor
ficoms
pop
scas
je,pt
push
ret
cmp
ret
mov
lods
or
mov
or
fsubrs
xchg
xchg
xchg
adc
or
jae
pop
sbb
pop
mov
mov
inc
and
cmp
xor
into
add
inc
sub
and
cli
sub
and
pop
pop
add
insb
orb
xor
prefetchw
inc
adc
cmpl
shlb
or
lret
test
add
add
xchg
rcrl
lret
testb
mov
push
je
lret
pop
or
or
push
pop
cmp
ja
insl
add
adc
xchg
neg
jne
and
mov
jo
ds
dec
jge
aam
mov
out
and
push
or
ret
loop
lea
push
in
add
nop
adcb
clc
mov
test
xor
shll
or
push
testl
or
adc
sbb
fadds
pop
sbb
or
or
adc
gs
lock
cmp
pop
test
adc
xor
mov
add
add
mov
mov
mov
push
cmp
sub
and
sbb
inc
jg
daa
daa
iret
lret
into
into
into
mov
or
js
ja
sub
push
pop
nop
pop
js
xor
pop
mov
mov
or
jl
movsl
cmp
pop
stos
push
or
push
jae
or
inc
and
pop
lcall
add
leave
lahf
pop
mov
adc
add
ret
movsl
movsb
in
dec
loop
fwait
stos
pop
test
mov
lods
and
cltd
and
loopne
popf
ret
cwtl
sbb
lcall
sbb
mov
lods
mov
lret
jo
dec
pminsw
stos
cmpl
mov
out
pop
and
roll
add
adc
fstps
adc
xchg
mov
pop
ret
push
jp
or
rolb
clc
xchg
sbb
add
into
lret
mov
inc
xor
in
push
not
pop
and
sub
loopne
rolb
vmwrite
je
sahf
or
jo,pn
add
repz
add
insb
mov
xor
aas
sbb
cmp
or
sub
loope
jle
xchg
into
cmp
je
mov
push
or
or
or
cmp
jbe
sbbl
jmp
push
xor
movsl
pushf
xchg
loopne
lretw
pop
or
fisubrl
cmc
int
ds
rclb
push
inc
lahf
gs
and
lret
rclb
ret
mov
sub
sbb
adcl
adcl
cs
mov
scas
mov
dec
adc
addb
sub
pop
nop
imul
xor
and
test
xor
mov
pop
and
aam
imul
push
imul
imul
mov
mov
pop
adc
mov
xchg
out
xor
shrl
mov
xor
test
inc
ret
cmp
aas
jne
cmp
push
cs
push
cmp
sbb
push
mov
mov
xlat
or
ret
add
cmp
add
inc
popa
add
flds
or
pop
add
dec
cmp
xchg
pop
jmp
mov
push
into
sahf
mov
dec
cmp
mov
inc
ret
bound
loope
lds
stos
sub
and
jl
testl
sub
lahf
pop
mov
push
loope
popa
and
aaa
jne
mov
pop
pop
mov
orl
hlt
call
ja
ss
or
ret
push
push
add
pushf
int
push
pop
xor
mov
insb
cmp
pop
xchg
sub
pop
ds
sub
mov
add
inc
jnp
mov
mov
and
sbb
lds
dec
in
aad
inc
adc
cli
pop
xchg
addl
fldcw
je
mov
jg
xor
and
sti
fildl
push
cmp
push
mov
adc
loopne
pop
stos
mov
stos
call
xor
andb
test
jbe
cmp
js
pop
pop
xchg
pop
fldt
add
pop
nop
add
clc
adc
pop
je
mov
push
jmp
pop
cmpb
cmp
mov
out
pop
xor
jae
gs
push
push
sbb
cmpsl
nop
or
mov
out
movsb
push
pop
pop
dec
sbb
inc
insl
xor
push
test
rorb
imul
and
inc
sarl
movb
daa
arpl
adc
inc
ss
sbb
sub
sub
decl
outsb
cmp
scas
xor
inc
mov
pop
fcoms
mov
adc
push
adc
push
shrl
orb
pop
and
mov
aas
mov
fs
inc
add
and
pop
mov
nopl
cmpsb
add
push
or
cwtl
inc
jecxz
push
fcomps
cmp
push
push
mov
pushf
cmp
add
and
pop
test
pop
xor
push
sub
sbb
in
mov
cs
dec
rcll
push
and
pusha
imul
or
lea
push
ret
xchg
clc
add
xchg
movsl
shlb
enter
movsb
adc
xlat
sub
sbb
mov
cs
jl
nop
xchg
jmp
push
mov
icebp
pop
orb
pop
pop
daa
cltd
mov
push
add
sub
test
pop
adc
dec
push
sar
bound
push
sbb
mov
jne
pop
aas
mov
dec
repnz
pop
sub
adc
push
rcll
stos
inc
add
add
mov
cmpsl
aas
rcrb
mov
inc
fadd
dec
sahf
xor
in
and
shld
sub
inc
xor
mov
pop
hlt
add
es
mov
xchg
movsl
aas
add
stc
gs
mov
pushf
ret
jb
dec
jl
lcall
jl
or
jmp
cmp
push
sbb
cmpsl
pop
ss
add
or
ja
aad
insl
cld
mov
loopne
pop
pop
xchg
and
popa
sub
fsubs
test
sub
jno
xchg
dec
arpl
jno
pop
in
shrb
and
ret
add
xor
cmp
data16
nop
jne
adc
clc
scas
cld
adc
es
or
imul
inc
int
adc
xor
and
mov
pop
mov
xchg
xor
jns
adc
adc
add
xor
and
adc
pop
add
push
lods
and
xchg
mov
call
xor
push
movsl
add
lods
xchg
rolb
xor
clc
pop
ss
loope
inc
popf
sub
int3
shlb
hlt
movsb
incl
add
rol
push
sub
pop
sub
aam
add
mov
mov
shlb
dec
fisttps
xor
std
data16
xor
inc
and
inc
loopne
and
push
lret
mov
lods
jmp
or
ret
imul
inc
pop
mov
popa
test
std
popa
jbe
push
xchg
int3
bound
mov
adc
pop
fidivl
inc
les
in
jnp
mov
jmp
jb
js
daa
mov
inc
nop
dec
inc
imul
add
xchg
push
cs
jge
cmp
add
or
movsl
jge
adc
mov
xor
sbb
pop
or
dec
jbe
arpl
mov
jge
xchg
mov
xlat
cwtl
out
cld
sbb
daa
push
jmp
dec
cmp
xchg
or
repnz
neg
adc
cmp
adc
imull
cmpsb
lock
sub
inc
test
xor
jmp
inc
add
loope
popa
jmp
call
hlt
sub
hlt
fcoms
imul
mov
jl
dec
push
add
jl
repnz
test
cmp
mov
and
pop
add
dec
jb
lea
mov
sahf
orb
mov
rorl
push
mov
sub
push
xchg
mov
pop
repnz
add
or
test
or
pop
xor
aaa
sub
fcoml
inc
loopne
pop
cmp
cmp
ret
jns
mov
cltd
sbb
mov
mov
dec
cwtl
mov
rcrl
ret
mov
add
jg
cmpsb
test
jae
or
cltd
pop
lret
inc
cmp
push
sbb
mov
cmp
ja
or
push
add
cmp
rorl
mov
pop
pushl
mov
mov
sarl
sarb
and
jmp
lret
fsub
and
data16
rcrl
or
mov
ret
inc
cmp
std
sti
xor
inc
adc
and
and
inc
aas
inc
or
adc
mov
mov
data16
inc
dec
or
and
fwait
lret
and
or
jl
add
mov
test
cmp
dec
pop
ss
or
sub
mov
loop
jl
sub
or
add
add
add
push
or
mov
cmpb
xchg
jo
xor
and
sub
in
add
push
dec
sbb
and
sbb
jg
inc
fwait
push
push
push
add
mov
bound
or
in
inc
dec
or
pushl
hlt
addl
pop
jl
in
mov
es
stos
push
sub
adc
xchg
orb
popf
js
mov
inc
cwtl
loope
add
jo
adc
jns
in
cwtl
dec
xor
int3
sbb
and
clc
pop
and
add
sub
call
movsl
mov
mov
ret
fxch
in
jmp
aaa
adc
insl
gs
dec
fcoml
push
lods
icebp
andb
cli
fildll
cltd
in
adc
or
sbb
filds
jae
js
pop
adc
cmp
jae
mov
stos
sbb
mov
lret
cmp
jg
sbb
add
popa
sub
out
dec
in
clc
xchg
jg
adc
pop
add
xchg
cmpsl
xor
cmpsl
and
cmp
pop
jle
mov
lret
adc
mov
das
inc
cmpl
adc
mov
cmp
xchg
pop
mov
jp
xchg
ret
rorl
jbe
xor
imul
aaa
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
call
jbe
ret
jae
out
repnz
loope
push
mov
or
jo
or
xchg
imul
dec
cmpsb
test
je
fwait
popf
and
add
jg
add
dec
or
daa
fwait
jl
jmp
cmp
mov
xchg
je
mov
or
xchg
sbb
jmp
outsl
sbb
orb
push
dec
cli
sar
testb
cmp
mov
dec
sbb
call
push
xchg
or
repnz
or
shl
push
cmp
or
dec
cmp
jecxz
in
jno
leave
push
dec
je
dec
jne
push
bound
adcb
jmp
push
jmp
xor
and
inc
xor
ds
cmpsl
dec
je,pn
adcl
insl
call
add
dec
insb
or
mov
push
icebp
rcrb
fdivrs
sbb
cli
arpl
or
outsl
mov
clc
loope
daa
cmp
mov
add
sahf
pop
loope
inc
sbb
jne
mov
jecxz
jmp
and
add
push
xchg
lods
ss
or
mov
hlt
push
lock
jb
push
and
cld
push
rcrb
or
jae
popf
add
lods
lahf
xorb
pushf
inc
mov
xor
hlt
imul
cmpb
sub
add
and
frstor
xchg
pop
out
insb
out
into
mov
ficoml
mov
lret
pop
mov
pop
sbb
pop
push
aaa
js
mov
add
dec
or
push
adc
cmp
andb
fnstsw
ret
xlat
add
mov
inc
mov
xor
gs
adc
or
add
xchg
push
sbb
adc
ror
sbb
jecxz
rorl
stc
sbb
std
js
mov
hlt
jne
adc
fildl
or
push
gs
mov
mov
and
ficomps
fs
xchg
pop
icebp
sbb
sbb
clc
jle
test
les
mov
adc
add
scas
pop
sahf
adc
mov
or
sub
loop
sub
or
jne
jg
add
cmp
mov
cltd
gs
xchg
iret
xchg
jmp
or
loopne
into
add
push
inc
lock
mov
adc
push
cld
sub
fldt
lea
add
xor
mov
mov
and
mov
faddl
jbe
mov
cmp
fstl
orl
jg
jmp
adc
es
gs
rorl
ret
or
jl
add
and
mov
jb
lods
jo
jb
or
cmpsl
mul
mov
inc
and
mov
pop
aaa
pop
pushf
and
test
mov
jne
jae
js
cmp
jno
sub
pop
and
jns
rcl
in
bound
mov
gs
jmp
or
shll
es
lret
inc
and
and
jo
sti
insb
insb
and
aam
push
mov
adc
mov
mov
mov
jns
cmpl
nop
inc
pop
mov
push
mov
xlat
je
cmp
jg
adc
or
inc
and
add
add
testb
lock
outsb
xlat
daa
movsb
mov
push
jmp
sbb
or
cwtl
and
clc
mov
jb
je
cmp
jle
mov
cmc
pop
xor
cmp
jbe
clc
push
push
or
movsb
in
push
adc
ret
push
loope
mov
rcl
jmp
das
xor
jbe
sti
insl
nop
cmp
mov
addl
pop
xor
jbe
outsb
sbb
pop
mov
pop
es
sbb
sahf
test
sub
inc
mov
sbb
pop
adc
mov
pop
sti
jp
fs
orb
in
push
push
popa
stos
dec
lods
inc
sbb
gs
in
fstl
hlt
lods
mov
arpl
aad
inc
mov
sbb
gs
jne
stos
dec
jns
mov
dec
test
add
and
enter
jne
add
inc
and
in
add
fisubrl
jge
mov
mov
fidivrl
push
daa
fldz
mov
xor
repnz
rclb
push
pusha
xchg
test
push
add
sub
xchg
sbb
test
xor
andb
fistps
dec
pop
je
pop
and
fld
inc
xor
mov
test
fistps
xchg
mov
ds
mov
fsubrp
xchg
fstps
adc
les
adc
arpl
add
fucomi
sub
das
fcomp
jbe
bound
lea
push
and
pop
sbb
push
dec
lods
inc
test
xor
xchg
sbb
pusha
adc
xchg
pop
test
or
dec
cmpsl
xchg
lea
mov
mov
in
xchg
rorb
push
adc
or
mov
jg
or
xor
dec
or
rclb
adc
xchg
jno
add
in
mov
jnp
mov
inc
add
test
or
or
or
adc
sub
xor
cmp
int
adc
lea
jo
cmpsl
add
and
add
pushf
cmp
imul
lock
leave
and
in
push
mov
push
mov
xor
mov
inc
cmp
int3
orb
pop
cld
fs
leave
add
test
pop
mov
mov
fmuls
add
enter
add
cltd
ficoml
pop
cmp
nop
mov
clc
les
dec
leave
ficoml
dec
roll
inc
nop
stos
jns
rcl
lds
pop
ret
push
add
inc
push
jb
arpl
in
enter
sbb
pushf
adc
xor
cli
es
or
stos
loopne
shl
ss
jae
sbb
sarl
or
and
xor
movsb
lods
and
dec
mov
xor
repnz
inc
adc
dec
pop
mov
add
rclb
pop
or
mov
sub
popa
or
push
xchg
pop
inc
sbb
stos
arpl
lret
inc
xchg
arpl
inc
sbb
test
mov
setae
mov
mov
xchg
outsb
in
add
cmp
arpl
jl
push
cld
lcall
pop
test
cs
and
jno
in
lock
adc
dec
or
or
add
inc
adc
les
mov
jne
jbe
test
and
rcl
rclb
adc
fwait
lcall
popa
push
ret
jb
cmc
hlt
movsl
orl
adc
sbb
out
push
jno
pusha
fs
dec
xor
push
xor
and
jl
inc
mov
dec
sbb
testl
sub
pop
mov
xlat
and
push
xor
adc
adc
pop
imul
mov
add
mov
or
in
add
in
mov
mov
orl
cmp
popa
xlat
in
sti
aam
andb
in
mov
fidivl
adc
fs
pusha
xlat
jmp
xchg
pop
insl
push
xor
cmp
sub
and
into
movsb
jno
xchg
pop
and
ret
sbb
mov
lahf
addr16
jbe
add
stos
jmp
sub
xchg
pop
shr
pop
insb
sarb
popa
js
lods
add
idivl
pushf
loope
lock
mov
mov
and
adc
lock
jl
out
rcr
aad
inc
enter
out
push
cs
cwtl
fstl
cmpb
cld
shl
xor
adc
inc
dec
and
ret
mov
adc
shll
ret
push
movsb
popf
lock
lds
mov
push
jne
sub
add
movsb
inc
xchg
in
adc
cmpsb
inc
xchg
sbb
loopne
scas
ret
jg
sbb
push
les
sbb
ss
push
inc
repz
orl
or
je
in
mov
addb
sbb
imul
or
nop
loopne
sbb
jb
aas
jo
jbe
fcompl
jne
jecxz
sbb
rolb
xchg
movsl
ss
cltd
imul
sbb
shll
ficoml
lock
push
adc
and
rolb
ss
or
pop
sub
ficoml
jb
push
pop
xor
push
mov
adc
dec
dec
push
and
push
stc
cmp
insb
sub
in
sub
insb
mov
xchg
or
add
and
add
sbbb
pop
xchg
ds
mov
lea
adc
mov
movsb
and
cwtl
mov
insl
push
call
inc
sub
mov
dec
push
jmp
dec
or
insl
dec
cmpsb
add
fdivl
add
adc
xor
fs
out
mov
jp
es
pop
jle
dec
push
ret
push
lods
add
mov
bound
and
testl
imul
push
mov
push
and
push
push
add
pushf
mov
mov
sbb
adc
inc
sbb
std
in
popa
sub
or
and
addr16
cmp
mov
sbb
dec
call
ljmp
insl
and
and
dec
movsl
sbb
sbb
and
subb
and
imul
aam
sub
jg
movsl
sbb
xor
je
xchg
mov
xor
fs
call
or
or
sbb
fdivrl
fwait
cmp
cwtl
and
xlat
adc
aam
adc
sub
inc
jmp
xchg
and
clc
aad
ds
sbb
add
dec
mov
or
mov
pop
push
in
insb
ljmp
or
or
and
jns
paddusb
std
nop
push
add
fcoml
movsb
loopne
sub
cltd
loopne
fdivs
nop
rorl
rclb
push
leave
or
mov
movsb
sti
xor
xchg
es
sbb
rcrb
test
or
cmp
push
mov
es
dec
daa
add
adc
daa
aas
in
xchg
dec
enter
pop
aaa
cmc
and
xor
cmp
loopne
std
push
in
push
dec
sub
push
les
gs
cmpb
lds
cmp
popf
cmp
jb
and
leave
and
and
lock
nop
ret
inc
clc
sub
xor
xor
and
mov
adc
mov
movsb
xchg
test
call
xchg
sub
orl
mov
pusha
leave
or
mov
or
pop
inc
jae
sub
or
mov
xor
movsl
fisttpll
and
adc
or
mov
mov
lods
sub
mov
push
adc
aam
stc
sbb
sub
xchg
inc
jno
or
cltd
pop
push
add
inc
xor
les
or
fsubrl
int
lret
cwtl
sub
les
sarl
les
pusha
fmuls
or
loope
mov
cmpsb
movl
ret
xchg
mov
cmp
test
add
and
sbb
add
pop
jmp
movl
cltd
inc
dec
push
rcl
insl
loopne
push
add
mov
or
dec
enter
pop
fcmovnb
adc
andl
and
das
or
pop
mov
and
test
test
inc
fs
or
in
clc
sub
jno
insb
adc
shrb
mov
pop
subb
push
insl
insl
push
sub
loope
xchg
mov
shrb
rolb
aas
xchg
hlt
xlat
shll
rcr
sub
ret
cmp
daa
insb
das
and
ljmp
jno
add
das
or
mov
inc
jae
add
stos
je
inc
mov
adc
jo
xor
pop
and
push
inc
lock
xchg
or
cmp
and
jmp
inc
xchg
or
jne
sub
bound
insb
adc
sbb
dec
push
push
xchg
xchg
push
sbb
out
cmp
mov
xor
pop
xor
imul
jne
jge
ret
xchg
mov
punpcklwd
dec
adc
mov
adc
xor
lock
adc
push
shlb
loope
push
test
xchg
add
pushf
bound
adc
xor
cmpsb
sbb
or
or
push
mov
jbe
xchg
sbb
xchg
cmp
mov
pop
sbb
lock
pop
xchg
or
xor
mov
xor
sbb
or
sarl
or
sti
push
mov
pop
cmpsl
mov
lods
lret
movsb
xor
adc
test
push
pushf
stc
jg
jmp
test
or
xchg
xchg
int3
adcl
mov
push
insb
mov
lods
sbb
adc
je
lahf
pop
test
pop
enter
or
cmp
mov
in
mov
int3
lahf
hlt
mov
pinsrw
in
in
sub
arpl
in
int
inc
inc
int3
rorb
pop
pop
and
enter
and
pop
mov
xor
or
inc
or
aam
mov
jno
jg
adc
push
sbbb
roll
adc
mov
add
or
sbb
add
push
mov
inc
jmp
push
jmp
sarb
fdivrs
push
cmp
in
aam
rcr
sti
and
cmp
loopne
int3
ss
push
sub
push
rorl
lock
mov
iret
cmpsb
jl
jne
mov
dec
imul
das
jp
aas
aam
adc
dec
sub
inc
shrb
jecxz
cmpl
testb
in
sub
ds
mov
mov
fwait
mov
xchg
or
leave
and
pushf
mov
test
sub
inc
sub
aaa
pop
inc
adc
fadds
dec
mov
xchg
sub
and
jl
adc
add
push
sbb
cmp
sub
aaa
inc
pop
orl
dec
mov
bound
js
push
and
movsb
fdivr
addb
ret
xor
and
mov
sarb
shl
arpl
imul
call
xchg
mov
fsubrs
xor
pop
push
and
mov
sub
jne
enter
shrb
jmp
ret
leavew
int
aas
sub
dec
xchg
inc
loope
or
cmp
sbb
or
arpl
mov
sub
test
add
jmp
adc
adc
inc
and
arpl
fdiv
lea
mov
bound
mov
sub
insl
loopne
pushf
ljmp
pop
adc
and
pop
and
rorl
mov
push
inc
add
xlat
push
xchg
mov
cmp
push
insl
vmwrite
cli
notb
in
notb
arpl
lahf
or
and
shrb
inc
cwtl
mov
cmp
pop
out
push
dec
in
dec
jns
cmp
bound
pop
mov
add
imul
imul
cmc
xor
mov
jnp
jo
mov
in
jne
or
lods
mov
adc
test
sub
pop
mov
and
in
shrb
jge
inc
push
add
or
add
xchg
or
aad
cmc
rorl
inc
adc
fs
mov
nop
mov
inc
mov
cmc
dec
adc
test
fsubl
fcoml
pop
adcl
ja
adc
lds
jl
popf
push
inc
or
push
add
scas
in
call
pop
nop
test
fstps
xor
adc
adc
addb
push
sbb
orl
inc
sub
add
sub
sub
add
push
lods
shrb
rclb
and
inc
aam
sub
fildl
push
aam
adc
cmp
mov
call
mov
in
sub
mov
dec
or
jno
xor
repz
int
sub
or
in
les
xchg
lock
test
xlat
jb
sbb
add
enter
add
xchg
lret
sbb
mov
lret
rol
mov
pop
add
mov
dec
push
fcoms
pop
int3
gs
inc
pop
dec
not
adc
mov
pushf
adc
pop
dec
fiaddl
aam
movsb
cmp
xchg
xchg
inc
mov
and
nop
add
fldl
shlb
les
lds
rol
dec
dec
call
nop
inc
in
je
insl
adc
pop
sbb
stc
adcl
rorb
sbb
and
pop
rclb
sub
cmp
add
sbb
or
inc
test
cmpsb
dec
popa
aad
adc
dec
das
dec
dec
xchg
or
jne
jne
or
fiaddl
bound
adc
test
je
cmpsl
push
test
dec
sbb
push
fwait
sub
pop
aas
and
jmp
mov
or
or
add
fs
jne
test
subb
gs
lock
subl
push
mov
add
mov
das
jae
in
in
mov
lods
lods
enter
test
sarb
imul
cmp
xchg
dec
lea
mov
inc
lcall
mov
jo
sbb
jns
and
xor
movsb
mov
scas
gs
mov
mov
fidivl
push
fwait
mov
push
movsl
nop
iret
arpl
leave
sub
enter
mov
push
fisttps
or
inc
int3
fisubl
fadd
stos
jne
xchg
xchg
idiv
cmp
jle
xchg
rclb
pusha
jne
sbb
lahf
imul
or
movsb
insl
xor
dec
push
in
push
pop
xchg
xor
xor
pusha
adc
nop
pop
fistl
xchg
adc
sub
cmp
fadds
jle
enter
sbb
mov
and
xor
andb
push
pusha
pop
inc
mov
or
lods
in
adc
sbb
int3
movsl
mov
rcrb
test
or
nop
add
mov
test
mov
add
sub
dec
pop
nop
mov
cmp
jne
jne
adc
shr
aas
dec
leave
and
xor
pop
fiadds
in
push
mov
movsb
inc
cmpl
jge
xchg
stos
test
fsubrl
test
mov
jecxz
adc
adc
aam
orb
fdivr
call
mov
or
push
emms
in
dec
mov
push
cmp
push
nopl
xor
push
fs
test
enter
cli
jo
and
cltd
movsb
adc
push
sbb
push
aaa
xchg
dec
int3
jg
pop
pop
cltd
adc
dec
pop
add
cli
jns
push
xchg
add
call
inc
mov
push
mov
pop
mov
lods
repz
cmp
mov
aam
inc
mov
movsb
mov
lea
push
adc
jns
pop
xchg
fs
loopne
insl
pusha
push
or
pop
orl
cmp
pop
jp
mull
add
notl
push
sbb
mov
pusha
movsb
popf
insb
adc
es
push
insl
cmp
mov
leave
and
dec
dec
push
xor
sbb
dec
xor
sbb
inc
cmp
and
sub
pop
enter
pop
enter
mov
sub
imul
jmp
jne
add
adc
xor
inc
enter
pop
hlt
and
movsb
int3
pop
inc
or
sbb
sub
sti
inc
les
sub
cmp
jl
and
or
pop
add
stos
movsb
pop
stos
rolb
sbb
aam
es
fwait
add
pop
mov
in
and
sub
test
ret
xor
std
in
xor
adc
pop
fwait
movsb
in
pusha
les
jge
loope
fwait
imul
lods
sbbl
pop
or
push
insb
gs
je
and
call
or
dec
inc
jecxz
iret
ret
dec
add
or
xor
xchg
fistps
xchg
pop
mov
sbb
jb
push
and
ret
cmp
shll
add
mov
repz
int3
test
insl
and
inc
dec
int3
int
pop
adc
rcrb
aam
adc
popa
iret
lahf
or
push
push
add
pop
inc
xchg
imul
fs
jo
int3
dec
shlb
stos
int
rorb
bound
add
rorb
scas
inc
mov
inc
insb
jno
inc
in
dec
sub
pop
mov
cwtl
addl
inc
in
and
sbb
sub
jecxz
or
cmp
adc
push
mov
loopne
adc
mov
cwtl
arpl
arpl
mov
movsl
sub
addb
jecxz
pop
xchg
repz
fs
add
sbbb
xchg
cmpsl
mov
gs
lret
aad
xor
xor
stos
or
sbb
cmp
fs
cmpsb
mov
int3
jno
shll
jns
sub
cwtl
popa
inc
in
lods
insl
movsb
pop
inc
mov
push
repnz
adc
repz
push
or
lcall
stos
mov
nop
add
sti
andl
outsl
jne
or
sub
lds
stos
and
imul
and
cmp
bound
shlb
mov
insl
xor
adc
sub
pop
enter
pop
push
push
push
or
pop
mov
pop
popa
cmp
inc
add
ret
addl
cmp
xlat
pop
repnz
je
sub
mov
jns
inc
sub
andb
mov
outsb
imul
lock
ret
inc
imul
mov
or
ja
adc
leave
mov
in
push
xchg
inc
add
fists
stos
xchg
cmp
push
or
pop
sbb
jns
or
inc
push
adc
cmc
sub
ret
push
lea
icebp
add
cwtl
inc
inc
lret
test
lock
ss
mov
mull
dec
dec
adc
aam
or
scas
lods
jbe
aam
pop
aam
mov
sbb
fbld
or
out
fildll
aam
lods
sbb
or
shlb
push
xor
pushf
dec
pop
jecxz
jns
outsl
int3
add
pusha
sub
jo
bound
ss
gs
add
dec
fcoml
test
jge
cltd
inc
pop
mov
pop
cld
inc
inc
in
adcb
xor
daa
das
rolb
sbb
pop
add
leave
in
dec
adc
cwtl
lret
je
mov
int3
jmp
dec
and
jmp
add
xor
mov
inc
lret
and
add
pop
pop
rorb
sbbl
push
xchg
adcb
nop
sbb
push
test
pop
inc
push
fs
jl
fs
push
test
fs
push
push
lods
insb
inc
push
fs
pushf
dec
pop
nop
andl
shll
movsb
adc
and
insb
lods
xor
and
push
mov
xchg
dec
test
and
dec
xor
xchg
dec
xor
mov
xor
and
mov
xchg
aam
mov
sub
daa
lea
insb
sbb
rol
rcl
fildl
es
fcoms
fs
enter
cmp
mov
push
cltd
movnti
mov
ret
mov
inc
loopne
push
mov
inc
jno
sbb
fs
je
push
cmp
fadds
adc
inc
movsb
lods
mov
nop
inc
push
mov
sbb
aam
aam
cwtl
xchg
and
push
test
adcb
and
mov
dec
and
mov
mov
mov
addb
fs
xchg
fwait
and
jb
in
aam
int3
les
jb
mov
jbe
jb
xchg
mov
test
lds
je
or
cltd
fs
in
push
xchg
mov
mov
lds
xor
mov
add
xchg
cmpsb
push
nop
ds
push
xor
pop
enter
push
and
lea
test
movsl
or
cmp
lahf
mov
push
mov
insl
test
inc
aam
push
and
sub
inc
roll
andb
outsb
sbb
or
xor
and
jo
call
test
lds
mov
pop
mov
mov
pusha
jns
hlt
add
stos
gs
dec
leave
jns
js
lods
sbbb
icebp
es
rclb
mov
or
rcrb
in
pop
enter
pop
pusha
sbb
inc
inc
not
xorb
sbb
and
dec
sbb
loope
dec
xor
test
or
push
push
mov
sbb
and
lret
imul
push
loopne
leave
pop
sub
mov
adcb
shll
sub
sub
adc
adc
adc
mov
pop
dec
cmp
adc
and
xchg
in
mov
jo
cmpb
orl
inc
and
cmpsb
sub
enter
arpl
out
mov
setge
sub
aas
outsl
lds
push
or
adc
adc
rclb
test
xor
ret
rclb
and
sarb
sbb
outsl
int3
nop
mov
es
jge
mov
icebp
adc
push
pop
lock
sbb
lea
mov
das
xchg
sbb
xor
nop
add
enter
mov
and
adc
rclb
rclb
fmul
stc
mov
dec
xor
das
mov
enter
mov
and
jl
imul
enter
fs
xchg
sub
or
xchg
sbb
or
adc
mov
jb
pop
aas
mov
pushf
sbb
orl
mov
pop
mov
jno
or
leave
sbb
addl
and
fwait
movsb
sbb
movsb
adc
mov
mov
inc
jne
in
jg
mov
enter
adcb
mov
imul
sub
mov
repnz
imul
mov
xorb
fs
orl
mov
cmp
adcb
or
test
mov
shll
pop
in
pusha
mov
addr16
or
cmpsl
cmp
cmp
cwtl
repnz
inc
addl
push
jl
insl
push
lret
xor
xor
imul
push
mov
push
and
adc
in
hlt
cltd
inc
add
add
repz
in
jg
insl
sub
xlat
sbb
xor
leave
fists
and
add
adc
mov
add
sbb
sub
or
movsb
les
mov
clc
mov
andl
icebp
sar
xor
xor
or
lds
adc
inc
push
clc
icebp
addl
sbb
stos
movsb
in
int3
in
fadds
sub
xor
xchg
imul
adc
and
mov
lods
aas
push
sub
scas
mov
pop
lcall
xchg
mov
jle
sub
hlt
push
mov
das
jg
movsb
ja
adc
imul
mov
in
aas
outsb
and
out
and
or
or
or
pop
add
xchg
rorl
sahf
and
inc
sub
adc
and
fmul
cmpsl
adc
test
sbb
jns
pop
test
shlb
mov
adc
shrb
shll
test
xchg
or
mov
xor
xor
sbb
shr
rclb
xchg
mov
rcrb
or
test
push
fdivs
and
imul
mov
call
divl
mul
fistpl
push
mov
mov
push
mov
js
xor
mov
cmp
sub
call
sbb
lods
add
pop
dec
xchg
or
inc
sub
adc
push
into
ret
lea
pop
mov
popa
test
aam
insl
push
or
adc
aam
dec
aad
icebp
pushf
sub
test
xlat
add
in
xor
mov
xor
sbb
sub
js
icebp
sbbb
jecxz
repnz
add
mov
xorb
jge
popa
mov
fdivl
add
xorl
xchg
or
fcoml
xor
xlat
xor
movsl
mov
dec
in
pusha
xchg
insl
mov
call
push
lcall
and
lods
jmp
dec
cli
inc
adc
mov
dec
daa
rclb
pop
adc
sahf
daa
pop
dec
scas
test
cwtl
gs
inc
sahf
cmp
je
cmp
movb
add
ss
inc
add
mov
in
or
sarl
jmp
arpl
xor
xor
dec
xor
jo
cltd
in
xor
iret
xchg
es
and
xor
sub
adc
pop
pop
imul
cli
mov
sub
dec
fwait
sub
dec
jo
push
lods
stc
insl
add
loope
movb
push
sub
int
pop
pop
pop
xchg
bound
sbb
sbb
xor
fidivl
xchg
and
jo
adc
mov
pop
outsb
and
push
fdivs
add
enter
push
ret
dec
test
mov
test
in
pusha
mov
dec
rorb
add
cmc
andb
adc
lods
adc
and
mov
icebp
movsb
rorb
mov
mov
push
inc
xor
mov
dec
pop
mov
and
cmp
arpl
and
ficompl
movsb
add
add
xor
dec
inc
incl
mov
or
push
push
ret
nop
out
pop
push
or
cwtl
cmp
call
adc
mov
mov
mov
push
push
inc
mov
test
insb
jmp
inc
fs
push
or
xor
cmp
sbb
pop
push
cld
and
nop
out
or
fidivs
inc
inc
ds
sahf
lret
jl
cld
dec
mov
or
jge
loopne
cmpl
push
shrb
lds
and
jle
sti
movl
movb
mov
ljmp
dec
repnz
push
aas
fsubrl
pop
lock
dec
pop
jg
push
and
and
cld
cmpsb
mov
icebp
mov
add
or
and
mov
mov
pop
hlt
fisttpll
or
jb
ljmp
adc
and
popa
and
dec
out
cld
mov
mov
fisubl
and
or
mov
sub
shll
sbbl
push
arpl
in
inc
iret
loop
or
fnstcw
mov
mov
jmp
sbb
mov
push
fbld
jo
cmp
pop
and
mov
cmp
jg
les
and
sub
add
xor
adc
stc
fcompl
daa
push
xor
cmp
sarl
mov
repz
push
inc
pop
ja
jmp
repz
into
add
dec
or
push
es
add
sti
inc
add
pop
push
out
es
dec
in
adc
add
inc
orb
jnp
mov
sbb
mov
or
adc
mov
rcll
xchg
adc
or
cmp
outsl
cmp
adc
mov
test
add
nop
add
into
pop
adc
test
cmpsl
stc
mov
push
loope
dec
xor
cmpsl
stc
mov
dec
test
and
mov
gs
cmp
add
jge
pop
in
incl
sub
jg
mov
sbb
popa
and
insb
outsl
arpl
imul
cmp
lods
jb
sub
scas
jmp
imul
jb
outsb
je
add
das
add
push
insl
adc
push
scas
lock
inc
outsl
jb
fstpt
je
jb
gs
add
or
outsl
add
jnp
lahf
or
add
add
jne
les
scas
fldl
imul
dec
push
add
mov
jl
add
add
aaa
or
xchg
dec
add
iret
icebp
pop
push
add
cmp
sub
pusha
aas
push
add
pop
dec
add
sub
push
insl
xchg
mul
loopne
je
je
and
jae
dec
fucomi
sti
sbb
dec
adc
insl
push
sub
subl
adc
jae
bound
jns
push
jne
imul
andl
xchg
aas
imul
ds
jp
outsl
or
insl
xchg
imull
dec
fs
fnstsw
cmpsl
lret
aas
and
outsl
jmp
jo
ja
ja
mov
lret
jo
jnp
stos
insl
sub
push
imul
scas
cmp
jne
add
push
data16
xor
sub
idivl
insb
jp
sub
insb
lcall
repz
addl
sbbl
arpl
or
cmpl
daa
dec
jbe
fistpll
fisubs
inc
xor
je
lds
loope
jnp
sbb
jo
arpl
mov
xchg
mov
mov
fbld
sbb
push
das
jb
mov
shll
aas
cs
pusha
xor
xor
movsb
daa
outsl
andl
xor
fidivrl
jg
push
sub
jno
in
call
aaa
xor
pop
push
jg
dec
iret
push
enter
ss
or
dec
fbstp
jne
jbe
jb
inc
mov
xchg
jne
pop
stos
nop
mov
jbe
xor
cmc
mov
js
das
rcrl
stos
popa
mov
push
adc
push
jo
insb
push
cmc
fistps
pop
mov
iret
arpl
inc
sbb
add
mov
insl
lret
imul
stos
fs
imul
shll
orb
popa
jnp
xor
jle
pop
cmpsl
outsl
pop
sub
das
xchg
rcll
cmp
pop
add
lds
pop
addr16
cmpsb
mov
mov
cmp
lock
popa
mov
mov
push
jg
scas
popw
inc
stos
pop
jecxz
push
push
ret
or
sbb
cmp
xor
sub
dec
addr16
and
flds
add
repz
push
inc
mov
push
inc
inc
mov
das
repz
sbb
push
sbb
jns
out
sbb
mov
sbb
repz
sbb
das
shrl
int
push
pop
sahf
push
sbb
sbb
out
pop
js
jns
jp
lcall
insl
incl
dec
aaa
add
add
push
jp
ds
xor
push
mov
cmp
setns
jne
cmp
mov
mov
xchg
ja
ds
in
cmp
and
push
sbb
xlat
dec
add
sbb
jnp
negb
sub
add
ja
jbe
and
add
das
or
scas
pop
mov
daa
dec
ljmp
dec
inc
and
or
or
decb
jmp
in
aad
ret
dec
idivl
aas
rcll
xchg
mov
jo
mov
clc
fimull
fucomi
mov
daa
outsl
dec
and
rol
inc
das
fcmovnu
adcb
pop
imul
sbb
outsb
iret
jns
out
out
in
add
and
arpl
pop
pop
jp
cmp
jmp
jae
push
and
mov
dec
jne
dec
fbld
fcmovnu
dec
push
ds
neg
fdivs
mov
iret
mov
jg
outsl
cld
es
cmp
cmp
add
out
stc
sub
dec
and
jns
add
das
cmpsl
jne
das
adc
push
inc
inc
arpl
bound
std
fsubrs
mov
dec
arpl
sti
loopne
sub
inc
jne
jne
xor
insb
xchg
loop
fimull
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
cmp
sahf
outsb
jns
jg
addr16
popa
imul
divl
xor
and
daa
out
fstps
clc
sbb
dec
outsl
outsb
and
cmp
push
jne
xchg
pop
dec
scas
jmp
add
out
dec
or
rcrl
jnp
mov
jae
mov
push
inc
push
popa
insb
jne
test
stc
pop
inc
inc
mov
push
xor
daa
and
sub
sub
cs
xor
xor
xor
pushl
aaa
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
popf
mov
push
push
pop
out
mov
pop
pop
pop
pop
adc
popa
bound
gs
imul
xor
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
xchg
and
lock
loopne
mov
add
orb
mov
ljmp
lret
jno
icebp
pusha
inc
mov
outsl
lcall
clc
ret
movsl
add
xorl
pop
test
outsl
imul
call
std
push
mov
gs
xor
popa
js
fnsave
faddl
dec
pop
add
adc
outsl
ja
ret
jnp
test
int3
adc
dec
push
add
adc
add
add
add
add
xor
cmp
push
add
xor
inc
and
and
mov
or
pusha
adc
js
or
in
out
lods
cmp
add
sbb
addb
jnp
test
push
xchg
test
add
mov
mov
daa
push
cmpb
push
fnstcw
mov
and
sub
jb
int3
push
lods
lods
pop
into
jo
add
mov
push
xchg
call
ja
and
add
xor
adc
loope
add
mov
or
mov
or
leave
jae
add
lea
leave
or
and
out
xchg
dec
pop
mov
mov
sahf
or
imul
cmpsl
sarl
pop
jge
add
lods
mov
enter
add
cmc
jp
push
sbb
cmp
imul
push
inc
sub
test
dec
jmp
dec
inc
adc
movl
shrl
mov
push
jae
adc
bound
je
outsb
data16
push
jbe
mov
out
je
xor
push
pop
pop
divb
xchg
daa
pop
lea
stc
adc
inc
outsl
js
push
xchg
cs
jne
std
and
inc
outsl
insl
jo
jo
and
and
scas
sub
insb
les
dec
imul
or
inc
mov
fistpl
ds
cmp
dec
inc
jb
jns
daa
mov
and
gs
test
insb
and
arpl
mov
in
test
mov
inc
sbb
outsb
jle
jbe
mov
mov
jns
outsb
pop
jb
and
xor
pusha
inc
jbe
push
or
lahf
fs
insl
and
add
push
jp
pusha
xchg
lcall
inc
faddl
and
mov
mov
cmp
push
roll
mov
sub
lock
fcmovnb
pusha
adc
outsb
mov
push
cmp
or
jae
or
xchg
or
cmp
call
mov
adcl
outsb
gs
mov
mov
movb
cmp
mov
push
dec
testl
dec
fcmovb
imul
aam
enter
and
sbb
shlb
jge
insl
pop
or
jle
jb
push
imul
call
loop
or
outsl
or
ret
push
jae
inc
in
push
das
gs
addb
inc
mov
sub
test
mov
pop
push
fldt
outsl
xchg
push
jmp
mov
popw
pop
cmp
push
jl
cmp
or
ds
and
mov
sub
es
lock
addr16
jle
jle
shr
cltd
sub
add
add
fidivrs
cltd
sub
pop
or
sbb
das
enter
push
jb
aaa
iret
push
mov
cmp
ds
out
push
pop
pop
jne
loopne
mov
fs
jbe
push
lock
sbb
jo
ss
gs
imul
mov
dec
int3
and
cmp
pop
enter
sub
popa
sub
mov
jl
out
sub
pop
cs
repz
inc
add
cmp
and
lahf
out
cmp
or
sub
mov
imul
orl
out
sahf
aam
int3
enter
jns
repnz
mov
lods
test
xor
repz
mov
mov
dec
jns
pause
nop
mov
mov
cmpb
cmp
js
jo
repz
repz
iret
repz
push
push
dec
inc
xor
sahf
out
cmp
or
sub
enter
jns
mov
and
cmp
out
in
les
jo
fs
xor
sahf
out
cmp
or
sub
test
sahf
out
sbbb
in
sub
lock
push
pushf
jo
sub
subb
push
and
adc
sub
jb
add
out
and
push
leave
and
sub
dec
push
jb
or
add
addl
fdivrs
add
push
jne
pop
ja
add
sbb
fcomp
add
inc
cmpsb
sbb
sbb
ja
add
push
xchg
add
and
add
jnp
and
lea
fbld
jle
out
add
addb
xchg
lea
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
call
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
and
mov
and
incl
test
adc
inc
push
lcall
gs
popa
data16
testl
cmpsb
pop
jns
push
test
xor
data16
add
lahf
js
mov
aaa
push
arpl
mov
fs
sbb
cltd
out
je
xor
ljmp
add
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
cmovns
int
adc
inc
das
push
add
imull
adc
jg
ret
popa
into
mov
mov
pushl
inc
jnp
inc
loop
mov
ds
pop
adc
incl
jg
lret
sbb
jb
jge
arpl
cmp
pop
pop
dec
scas
jp
jno
in
fstl
incl
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
out
lahf
or
mov
jns
mov
add
test
shrl
leave
hlt
mov
adc
xchg
dec
add
scas
lods
dec
lock
xor
pop
dec
enter
into
or
icebp
pop
pop
repnz
ljmp
and
es
sbb
adc
jne
cmp
xlat
lods
mov
mov
or
rorb
fildl
sbb
stos
cmc
sub
dec
fdivrs
xchg
and
lahf
setnp
pop
dec
jns
inc
out
xchg
mov
and
pop
ret
test
or
addr16
es
jae
fadds
xchg
data16
or
mov
xchg
mov
and
bound
rcll
aaa
js
test
jne
sti
jo
sbb
jmp
daa
mov
sub
mov
ret
insb
add
je
fcomi
or
sub
xchg
lret
xchg
in
mov
fisttpl
out
cs
inc
jb
add
xlat
sbb
scas
test
dec
mov
inc
pop
xchg
lock
dec
imul
in
add
jae
insl
jle
push
fimuls
cmpsl
or
and
pop
inc
lods
jecxz
ret
lock
repz
pop
jno
aas
out
fbstp
push
fisubs
aaa
push
push
ret
mov
js
sbb
xchg
sub
das
cmpsl
xchg
stos
fdivrs
add
add
jl
sbb
stos
jg
outsb
add
sub
sti
sbb
aaa
or
jns
outsb
jecxz
xor
xlat
jg,pn
jg
xor
cmpsl
xchg
ret
inc
xlat
adc
into
stos
xchg
push
mov
sarl
xchg
jne
aas
push
out
add
filds
add
cmp
pop
pop
jbe
out
dec
mov
adc
adc
popa
shrl
sti
push
hlt
mov
arpl
inc
sti
jo
sti
cmp
adc
cmp
sub
nop
out
rorl
inc
sub
jmp
arpl
dec
dec
rcr
movsb
mov
cmp
gs
dec
jo
jo
jp
xchg
ja
loope
or
pop
jecxz
jnp
jno
imul
push
in
out
xlat
pusha
inc
pop
inc
addr16
out
daa
fildll
je
and
insl
int
pop
pop
aas
arpl
add
pop
arpl
add
pop
mov
jne
xor
and
push
lret
je
faddl
out
push
pop
inc
mov
cmp
jbe
add
outsl
inc
pop
xorb
jnp
add
add
arpl
push
xchg
lret
les
inc
sub
loope
test
ss
out
mov
fbstp
popa
mov
mov
aas
mov
mov
into
mov
push
loope
je
jb
push
add
or
arpl
pop
call
movsl
rolb
or
rolb
adcl
xchg
cld
xor
fisubrs
bound
mov
inc
push
adc
ja
in
dec
aaa
pop
xchg
pop
int
mov
add
jne
lods
aaa
jecxz
outsl
adc
bound
cmp
sub
dec
aas
push
inc
ja
lahf
lock
daa
jne
cs
dec
subl
pop
outsl
dec
shl
popa
bound
pop
adc
mov
jno
jl
push
ret
js
adc
adc
idivl
rcll
mov
roll
inc
outsb
out
jb
or
ret
dec
sub
push
fdivrl
outsb
sub
add
jge
mov
out
pop
push
fiaddl
bound
jae
push
pop
mov
imul
xor
push
bound
or
or
and
arpl
pop
outsl
jmp
inc
cmp
lahf
add
divb
outsl
jge
adc
cmpsl
jb,pn
mov
pushf
ss
mov
ja
add
dec
mov
aas
mov
push
inc
scas
imul
loop
sbb
arpl
dec
insb
lcall
inc
inc
dec
jae
push
out
add
outsl
imul
cmpsb
out
add
xor
aas
dec
sbb
les
lret
out
jmp
out
pop
je
pop
dec
psrad
insb
aas
pop
in
js
sub
addr16
inc
daa
push
outsl
mov
ja
lds
xchg
div
loopne
inc
arpl
pop
pop
push
adc
mov
aas
testl
inc
inc
mov
mov
mov
inc
jl
jl
pop
adc
xchg
pop
aam
aas
imul
les
lret
call
push
bound
fimuls
mov
mov
adc
stos
pop
adc
bnd
jae
jecxz
xchg
jl
push
adc
out
xor
push
jl
sahf
icebp
scas
loopne
jnp
sbb
ja
js
jmp
es
ja
add
mov
mov
mov
fnstsw
cs
sbb
add
arpl
add
xor
jae
jno
loopne
adc
clc
ds
outsl
lret
jl
jo
lea
cmp
jnp
aaa
push
lock
dec
lock
pop
sub
fs
js
lock
mov
imul
push
popa
lea
repnz
bound
lock
adc
es
cmp
addr16
imul
mov
pop
and
mov
incl
sub
outsl
push
push
push
push
in
jle
fstpt
fisttps
lods
aaa
sbb
inc
xor
or
jae
mov
inc
jns
jae
fcom
mov
jae
inc
adc
lds
dec
adc
mov
mov
cli
add
pop
popa
jl
mov
pop
stos
mov
pop
incl
jb
bound
daa
rclb
pusha
aaa
push
mov
roll
dec
inc
add
aas
popa
popl
or
aaa
lock
jnp
outsl
das
mov
loop
addr16
js
insl
mov
fists
dec
push
adc
imul
sub
push
sbb
gs
add
sub
mov
pmuludq
insl
filds
mov
pop
test
fsts
inc
push
rorl
mov
pop
push
mov
out
in
pop
push
push
mov
pop
ds
push
jp
out
dec
mov
lods
push
cmp
out
adc
pop
ja
out
push
pop
push
push
cmpl
repz
pop
cvtps2pd
pop
fnstsw
pop
mov
add
int3
aas
pop
cmp
or
insl
out
pop
push
mov
jns
fwait
movsb
push
mov
mov
leave
jne
idivl
ficoml
out
sahf
out
push
cmp
dec
cmp
jnp
sub
dec
dec
push
outsb
jnp
or
iret
pop
aaa
xor
and
scas
ljmp
jmp
or
outsl
jo
jns
inc
xchg
mov
sbb
sub
movsb
das
cmpsb
push
push
add
frstor
lret
loop
movsl
rolb
adc
aas
pop
popa
push
enter
jae
fs
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
cmpsl
out
jo
or
and
dec
bound
fnsave
pop
sub
and
pop
shrb
je
je
iret
jnp
cmp
pop
push
pop
mov
mov
jne
cmp
repz
mov
cmpsl
stc
xor
dec
loopne
adc
adc
dec
fs
ja
push
lea
cmp
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
mov
outsb
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shrb
xchg
aas
push
mov
jne
mov
daa
pop
andb
mov
movb
cmp
ja
inc
push
mov
dec
push
verw
rolb
lods
lahf
js
adc
xchg
scas
inc
cmpl
adcl
pop
addb
pop
xlat
sbb
push
sub
cmp
inc
movsb
ss
cmpsl
add
insb
or
insb
int
js,pn
sub
cmpsl
cmp
jnp
xlat
pop
add
xor
in
repz
sub
mov
outsb
mov
or
or
or
xchg
sub
fsubp
cmp
push
es
aam
pop
iret
pop
scas
xor
ret
fcomps
push
and
jecxz
mov
mov
dec
and
and
fs
fs
bound
jle
sub
out
inc
or
pop
stos
aam
scas
mov
or
aas
sub
sub
dec
mov
inc
syscall
inc
cmpsl
push
scas
jecxz
or
ret
pop
or
inc
imul
movsb
mov
aam
or
inc
daa
daa
dec
fistpll
sti
fildll
stos
push
inc
ja
lods
add
scas
imul
lea
pusha
stos
filds
mov
xchg
mov
xor
xor
fimuls
scas
mov
push
sub
imull
mov
data16
add
outsl
iret
imul
jecxz
cmp
or
and
stos
jno
mov
xor
test
add
and
push
sbb
pop
stos
mov
iret
imul
mov
jae
jnp
mov
arpl
dec
fildl
sbb
out
aaa
pop
bound
jo
xchg
arpl
inc
lahf
inc
cmp
fisttpll
loope
jb
fs
push
jb
mov
and
inc
test
xor
scas
into
sub
jg
sahf
inc
into
inc
add
push
mov
ret
lods
loopne
ror
aaa
push
es
stos
inc
ja
orl
imul
mov
jae
inc
test
repz
and
jb
pop
dec
jae
test
dec
jbe
mov
nopl
pop
mov
and
sti
rolb
incl
das
ret
add
lock
push
cmp
push
roll
inc
push
inc
stos
mov
push
imul
data16
jne
cmpsl
pop
inc
sbb
mov
sub
or
pop
daa
pop
out
stos
int
addr16
mov
adc
jo
fwait
pop
add
or
cmp
jmp
arpl
jmp
jecxz
dec
int3
mov
cmp
dec
inc
jmp
pop
enter
push
or
mov
pop
or
pop
test
sub
cmc
push
or
xchg
cs
roll
cmpsb
addl
lods
inc
xchg
inc
fwait
movsl
dec
arpl
aaa
fcmovnbe
scas
xor
out
sbb
imul
outsb
jae
sbb
insb
push
or
sub
mov
push
or
mov
in
lcall
mov
cmpsb
aas
add
inc
jae
adc
cmp
mov
ret
and
jbe
mov
pop
das
rolb
imul
shrl
pop
in
pop
ret
rolb
dec
xchg
je
push
push
cmp
shll
sub
mov
ret
fldt
dec
and
outsl
add
add
dec
cmp
ret
or
xchg
mov
sti
fistl
arpl
push
loope
insl
scas
lcall
xchg
xlat
pop
mov
ds
dec
in
pop
pop
inc
outsb
loope
sub
fs
fiadds
push
xchg
cmpsl
out
or
push
mov
jbe
pop
jo
arpl
pop
add
mov
pop
cmp
mov
mov
pop
xchg
jnp
lods
ljmp
push
cwtl
fcompl
cmp
inc
iret
ss
xor
add
out
addr16
xor
je
sbb
sub
lahf
aas
xor
mov
sub
fistpll
cmp
pop
rcl
daa
dec
pop
lea
xor
cmpsl
mov
jecxz
sub
or
mov
xlat
sbb
imul
or
sbb
out
sbb
sub
add
mov
sbb
out
inc
cmc
sbb
fwait
cs
shrb
push
test
js
fs
cld
mov
xor
arpl
imul
sbb
cmpsl
fwait
lock
insb
add
push
pop
int3
inc
sbb
subl
mov
sub
cmpb
aaa
xor
das
arpl
xlat
mov
outsl
push
inc
inc
fwait
cwtl
test
add
cmp
stos
pop
xlat
ss
add
inc
cmp
xor
or
test
fs
mov
push
or
cmpsb
cmpsb
sub
push
or
rcrl
outsl
stos
adc
push
setg
inc
sub
lods
push
sahf
xor
sbbb
das
adc
insl
lret
cmp
pop
pop
popa
xchg
pop
sbb
or
rolb
adc
push
push
xadd
sti
cmpsl
mov
ss
add
dec
dec
xor
mov
push
cmpleps
adc
push
mov
adc
cmp
xchg
popa
aad
aas
ja
inc
xchg
adc
les
loope
arpl
out
pop
pop
nop
mov
add
mov
addr16
cmp
xchg
ucomiss
add
iret
sub
sbb
popa
adc
wbinvd
mov
femms
push
inc
das
jb
fiaddl
push
push
mov
lock
pop
minps
aas
push
sbbl
or
dec
mov
mov
repz
inc
in
sbb
mov
outsb
lods
scas
iret
outsl
push
loopne
cmp
nop
nop
outsb
dec
outsl
shl
mov
outsl
outsl
iret
jp
or
rol
pop
dec
pop
dec
in
mov
mov
push
xor
xor
lea
scas
xchg
push
push
and
and
mov
out
inc
push
stos
shlb
cvttps2pi
xor
lcall
add
push
out
inc
pop
scas
xor
pushf
or
or
xor
int
pop
adc
jl
out
adc
loop
adc
jo
push
mov
sbb
or
inc
sbb
incl
ret
and
out
push
and
inc
shlb
ja
push
push
bound
out
adc
add
pop
xor
pop
inc
das
cs
imul
mov
aas
lret
lods
pusha
mov
sub
sysret
orb
jo
push
movsl
loopne
inc
out
jae
mov
sub
mov
adc
sbb
xchg
lods
loope
pushf
outsl
add
pop
icebp
xor
das
add
push
bound
dec
jg
push
movsl
mov
arpl
adc
arpl
cmp
loopne
adc
jecxz,pn
sub
and
out
pop
pop
xorb
add
jno
das
dec
jo
jnp
inc
cmp
or
das
jno
sbb
mov
mov
call
lock
sbb
inc
das
and
and
xor
stos
bound
or
addb
push
mov
mov
xlat
and
sub
das
push
mov
pop
int
lods
and
mov
inc
bound
push
and
ficoml
repz
pop
movsl
icebp
aas
mov
jmp
add
push
xor
das
test
jge
pop
fwait
push
data16
cmp
lods
aas
push
and
jne
xor
fs
xor
jmp
outsb
sbb
inc
lahf
mov
inc
scas
add
andb
push
insl
pop
lods
adc
ret
mov
cvtdq2ps
mov
sti
push
push
jno
push
insl
arpl
bound
out
push
sub
mov
mov
in
out
movsl
jo
outsl
sbb
push
aad
lahf
push
addl
jecxz
stos
in
cltd
mov
and
pushf
dec
sub
cld
loope
dec
scas
xchg
stos
pop
add
xor
cmpsb
xchg
push
leave
adc
dec
sbb
fisubs
and
cltd
dec
pop
rcr
adcb
in
mov
pop
and
stos
sub
lock
hlt
fnstcw
cld
fmul
push
xor
and
stos
in
cltd
pusha
adc
leave
rcl
sbb
sub
enter
scas
xchg
stos
and
aam
jb
dec
js
scas
xchg
test
sub
xchg
mov
xchg
push
leave
push
cmp
shrl
mov
mov
sbb
xchg
shr
xlat
orl
cmpsb
and
pop
insb
inc
add
or
jo
loop
pop
rorl
jbe,pn
cmpsb
ret
mov
inc
push
and
add
push
outsb
imul
xchg
subl
add
ss
das
inc
ret
test
addb
int
ficompl
xor
and
fwait
test
add
movsl
nop
cwtl
imul
add
aas
pop
inc
bound
aas
add
mov
push
testl
inc
fwait
push
sub
xor
sub
xchg
or
aas
push
je
fisubrl
xchg
and
sbb
notb
sbb
das
outsl
adc
xchg
xor
add
int3
fs
addr16
push
mov
pusha
xchg
fmuls
inc
addl
scas
cmpsl
lahf
loopne
jmp
sub
adc
inc
add
dec
xor
add
adc
jb
push
mov
inc
loop
sti
mov
test
subb
bound
filds
fisubs
or
movl
das
push
sbbb
ljmp
push
imul
aas
pop
gs
add
inc
add
aas
lods
cmc
add
mov
jmp
sub
lea
out
test
pop
xorb
scas
pop
cltd
mov
imul
fs
mov
sub
inc
les
call
clc
icebp
sub
jbe
jecxz
cmpsb
pop
inc
out
jbe
pop
xor
xchg
push
add
pop
xchg
xlat
pop
add
add
xchg
idivb
and
inc
inc
mov
sbb
sub
xor
jnp
pop
or
pop
fldt
and
cs
xchg
fnsave
jo
jb
inc
es
dec
orb
inc
mov
fstpt
adc
or
addr16
bound
es
or
push
add
insl
je
fnstcw
shrb
fs
sub
dec
mov
sbb
mov
xor
sbbl
es
jae
push
or
dec
cmpsl
dec
mov
jo
sarl
loopne
inc
divl
imul
dec
mov
imul
push
jbe
xor
xor
dec
lock
daa
outsb
xor
jae
cmp
mov
jg
add
adc
sbb
imul
data16
jbe
dec
js
fs
pop
daa
sbb
imul
or
test
jmp
push
ret
ret
sub
adc
and
push
cmpsl
inc
or
add
add
loopne
mov
divl
pop
pop
adc
sbb
and
lods
repz
andl
repz
cli
dec
push
cltd
or
xchg
ss
add
add
stos
or
pop
or
adc
insb
out
jns
and
sub
xor
inc
out
mov
mov
mov
mov
add
add
shrb
ret
sub
insb
xor
shrb
xchg
pop
adc
mov
adc
pop
add
data16
push
xchg
rclb
lret
verw
int
mov
shlb
stc
das
mov
rcl
add
outsb
pop
inc
adc
dec
push
cmp
stc
cmp
fisubs
push
js
test
pusha
xlat
insb
lahf
cmpsl
mov
test
push
mov
jl
mov
pop
gs
ficoml
iret
cmpsl
pop
dec
lods
stc
pop
inc
xchg
push
scas
and
rorb
and
clc
shlb
es
sbb
inc
mov
sbb
add
or
imul
scas
negl
add
adc
inc
pusha
xor
cmpsl
mov
jle
sub
out
lods
mov
out
xchg
cmp
xor
xor
pop
je
cs
sarb
aam
xor
mov
inc
cwtl
push
das
or
cltd
ss
cmp
adc
mov
xor
push
push
popa
pusha
inc
aas
pop
mov
loopne
xlat
jns
test
mov
ficoms
cwtl
or
add
pop
inc
dec
daa
mov
xchg
xchg
je
mov
ret
or
aam
cmp
push
adc
rcrb
arpl
jg
mov
sub
dec
rol
hlt
cmpsb
cmp
sbb
or
ja
dec
es
xor
sub
out
ret
fst
push
sahf
push
cs
cmp
push
xor
or
out
es
add
jnp
lods
xchg
push
insl
xchg
out
mov
scas
xor
inc
xchg
cmp
jnp
xor
jae
fs
clc
lock
xchg
push
je
xor
pop
loop
push
cmp
pop
pop
dec
shlb
outsl
mov
testl
inc
jle
jl
add
arpl
imul
fwait
xchg
jbe
call
or
inc
push
adc
mov
jbe
push
dec
mov
bound
lcall
incb
aam
mov
jp
inc
cs
lret
mov
cmp
push
sysret
out
pusha
cmpsb
xchg
ja
retw
jnp
jmp
pop
mov
xor
fidivrs
sub
lret
arpl
sub
sbb
out
cs
mov
lds
iret
cmp
addl
jge
mov
cs
sbb
packssdw
inc
pop
pop
mov
mov
es
ss
outsb
pop
push
push
xor
loope
clc
daa
dec
jb
das
inc
pop
dec
es
mov
mov
fbld
data16
idivl
or
sysexit
mov
xchg
aas
dec
cs
sahf
push
outsl
jge
xchg
push
insl
sub
fidivrs
mov
push
scas
push
insl
mov
inc
lds
mov
mov
push
jp
out
loope
outsl
ds
fiaddl
mov
jg
dec
das
xor
sbb
fidivrs
pop
outsl
pop
outsl
in
fstpl
dec
xor
xor
outsl
cs
cmp
push
dec
mov
jg
add
dec
jnp
xchg
mov
jecxz
jcxz
dec
dec
pop
jae
jne
addb
mov
scas
clc
push
push
imul
mov
adc
dec
iret
sbb
jle
inc
cli
adc
and
adcb
jnp
add
fcomi
test
inc
aas
pop
sub
cmp
xchg
mov
adc
nop
lods
pop
cmpsl
inc
out
and
lods
popa
scas
lods
pop
xor
or
ret
dec
jl
scas
sub
and
mov
xchg
jg
dec
insb
sbbl
aam
mov
repz
sbb
testl
pop
add
lea
popa
add
scas
imul
cmp
sti
mov
inc
mov
mov
push
outsl
dec
fs
sub
ja
pop
or
pop
push
fs
pusha
adc
js
cmp
out
outsb
mov
push
mov
mov
sbb
addr16
pop
sbb
test
cmp
mov
jmp
mov
dec
inc
dec
insb
outsl
popa
fs
outsl
push
imul
and
pop
xor
xor
das
sub
adc
cmpsl
addr16
or
pop
iret
pop
push
and
pop
push
aaa
push
sti
stc
scas
mov
mov
add
loopne
jge
mov
fs
addr16
fdivrs
xor
scas
arpl
ljmp
and
ja
pop
mov
mov
mov
xor
pop
adc
mov
lock
xchg
inc
xchg
adc
jns
push
inc
je
outsl
cs
fldt
ja
xor
imull
jne
lret
ss
inc
mov
ja
xor
xor
push
sub
or
inc
inc
add
pop
mov
pop
repz
mov
jae
cs
xor
stos
lods
push
xor
add
lahf
popf
inc
mov
mov
das
push
and
shrl
add
pop
js
lock
lahf
jmp
xlat
jmp
fildll
fisttpll
push
mov
orl
adc
sbb
sbbl
dec
movsl
inc
loop
iret
lods
push
and
cmp
mov
insl
das
push
inc
stos
or
and
and
jnp
cmp
popa
fldt
shlb
repz
mov
and
cmp
xchg
imul
mov
sub
sbb
jnp
dec
aad
rolb
aas
scas
sbbl
dec
inc
daa
jns
or
pusha
mov
or
filds
sub
arpl
ret
outsb
dec
arpl
jae
daa
jbe
sbb
dec
int
lods
inc
outsl
aas
push
insl
push
addr16
das
repz
jne
aaa
insb
aam
or
call
inc
inc
enter
mov
add
sub
sub
push
mov
adc
jle
pop
push
sarb
mov
add
das
mov
ja
mov
inc
aas
lock
xchg
pop
inc
int
addr16
sub
xchg
data16
sbb
push
call
jge
cmp
or
dec
jmp
fimull
mov
das
jl
dec
movsb
pop
es
mov
mov
pop
insb
bound
pop
shlb
mov
mov
in
decl
and
mov
add
adc
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
pusha
or
mov
sub
sub
or
sti
jg
mov
mov
mov
ds
pop
sbb
mov
subb
mov
dec
fsubs
mov
pop
insb
sbb
mov
pop
dec
xchg
mov
inc
stos
jecxz
dec
push
pop
add
pop
jb
mov
push
arpl
dec
pop
and
cmpsl
loopnew
aaa
xchg
mov
mov
in
mull
pop
xchg
mov
mov
inc
inc
test
add
jbe
and
sub
test
xchg
leave
rcl
mov
dec
push
dec
in
jbe
cmp
pop
sbb
xor
xchg
out
sub
fwait
in
jae
scas
pop
pop
inc
fdivl
pop
int3
cmp
iret
leave
xor
cmp
pushf
fwait
pop
mov
jl
or
leave
dec
insb
inc
outsl
adc
xor
lahf
daa
push
push
lea
out
inc
pop
adc
aaa
bound
dec
cmp
leave
or
pop
fwait
loop
sarb
pop
and
push
cmpsb
inc
jnp
cmp
ss
je
mov
sub
adc
sbb
mov
cmp
popf
addb
inc
mov
pop
out
cmpsb
jp
mov
inc
ret
cmp
jo
addr16
adcb
dec
rorb
xor
xlat
push
mov
and
incl
je
bound
imul
aaa
sbb
inc
dec
mov
or
xlat
mov
shlb
push
add
js
lret
mov
push
filds
aas
jae
inc
cmp
dec
xlat
addb
jecxz
mov
pop
mov
notl
adc
fwait
pop
dec
push
test
mov
scas
cmc
fidivs
sub
shr
bswap
sub
push
xor
dec
addr16
lcall
push
mov
xchg
ret
xchg
jmp
call
push
cmp
fst
mov
add
insb
inc
dec
and
or
lahf
test
pop
jb
pop
outsb
arpl
cmpsb
test
repz
pop
jne
sarl
cmp
repz
bound
dec
pop
fbstp
push
and
fbstp
xor
dec
xchg
ljmp
bound
dec
imul
cmpsb
pop
push
insl
cmpsl
movsb
add
cs
jle
cltd
lahf
out
into
pop
adc
mov
pop
push
xchg
push
fwait
push
bound
outsb
popf
jge
dec
daa
xor
mov
mov
mov
push
call
cltd
bnd
cmp
push
mov
dec
sbb
out
xchg
pop
adc
data16
sub
dec
mov
push
sub
jl
repz
push
mov
inc
adc
cmp
add
fadds
test
stos
push
inc
xor
sbbl
andl
push
pop
fidivl
in
dec
hlt
scas
in
cmp
push
test
sbb
in
dec
pop
xchg
jnp
out
ljmp
es
push
inc
ss
in
or
cmp
mov
lahf
neg
repz
aad
cs
mov
lahf
cmpsl
stc
xor
adc
out
inc
adc
fs
pop
stc
xchg
inc
test
mov
push
jecxz
out
mov
inc
dec
and
fisttpl
push
ss
stc
mov
pop
push
xchg
push
mov
fisubs
pop
and
cmp
mov
dec
push
bound
ja
cmpsl
mov
xlat
push
push
cmp
pop
fcomip
fiadds
testb
lahf
xchg
std
jo
jnp
aaa
cltd
pop
push
ffreep
pop
idivl
fwait
xlat
sbb
jns
rcr
cs
mov
xchg
gs
or
inc
jbe
adcl
hlt
outsb
xchg
sahf
imulb
inc
dec
arpl
bound
loopne
inc
loopne
addl
outsl
int3
inc
add
imul
mov
int
dec
push
imul
addb
inc
dec
push
push
pop
dec
out
add
repz
dec
iret
repz
push
dec
es
andb
or
cs
sbbl
push
xchg
jns
mov
repz
shll
push
jo
mov
or
iret
loopne
es
das
call
xor
aad
pop
dec
sbb
scas
sub
or
adc
xor
std
stc
add
adc
adc
push
mov
xor
adc
pop
jnp
add
mov
test
jg
loopne
mov
je
mov
nop
aas
in
mov
hlt
pop
sbb
enter
adc
cld
mov
xchg
or
adc
daa
outsb
pop
in
or
jo
mov
pop
mov
and
nop
dec
imul
sbb
dec
std
stos
push
cmp
xor
cmp
dec
push
and
iret
lock
adc
ja
outsb
outsb
in
loop
jp
xor
push
js
sub
imul
cmp
xor
pop
xchg
jp
sbb
add
outsl
fstpl
adc
mov
inc
sub
lods
dec
jo
xlat
or
pusha
movsl
test
inc
outsl
sbb
add
inc
jb
popa
je
and
subl
push
outsb
scas
pop
testb
out
pop
lods
mov
outsb
push
ficoml
cs
jmp
es
pop
int
cmpsl
push
lea
and
rcl
shrb
loopne
ja
inc
add
imul
sub
jmp
not
sub
movhps
lahf
cmp
out
dec
jae
push
aaa
push
fisubrs
adc
or
inc
add
pop
outsl
xlat
jno
jne
jo
push
jo
lods
subl
movsl
sbb
inc
add
mov
mov
lret
in
cmp
dec
xchg
push
fcomps
ficompl
cmpsl
mov
popa
ficoms
push
push
outsb
jb
adc
lea
pop
xor
mov
loopne
movsb
cmova
add
xchg
push
xor
mov
jae
or
push
add
add
add
dec
sbb
push
cmp
jae
xor
xchg
int
daa
add
or
es
cmp
xor
daa
and
sub
imul
dec
daa
dec
popa
aam
decl
imul
ret
bound
outsb
push
jnp
xchg
into
shrb
adc
pop
movl
add
inc
aaa
insl
mov
cltd
addr16
or
jcxz
imul
daa
mov
xor
pop
mov
dec
inc
sbb
push
jecxz
aas
add
test
ljmp
adc
inc
aaa
pop
adc
pusha
mov
fsubs
inc
js
jne
mov
arpl
outsl
scas
pop
rclb
inc
mov
aad
pop
mov
mov
pop
addr16
arpl
mov
xor
mov
in
jae
fs
addl
es
inc
bound
push
xchg
mov
sti
adc
ja
jo
pop
pop
mov
dec
int3
add
out
add
and
aas
lret
dec
mov
arpl
or
sub
pop
pop
dec
mov
roll
in
loop
popa
cs
popw
outsl
sbb
insl
aaa
imul
popf
int
add
lods
pop
insb
insl
das
testl
jg
popa
add
cmp
popa
or
pop
sbb
rcl
add
lds
push
cs
fiadds
push
mov
jle
add
ja
xchg
add
into
inc
rclb
push
orb
add
xlat
insb
testl
aas
push
xor
xchg
das
inc
pop
mov
bswap
push
adc
xchg
adc
inc
dec
fcmovbe
push
in
pop
pop
mov
add
mov
mov
xlat
sub
pop
pop
out
pop
daa
xorl
aas
add
sbb
mulps
jge
pop
cmpsb
inc
inc
push
inc
lret
imul
daa
sbb
cmp
dec
lds
adcb
cmp
add
jae
sbb
inc
dec
dec
inc
pop
add
add
bound
push
or
xlat
cltd
sbb
push
pop
or
and
xor
mov
lahf
inc
dec
mov
xor
dec
add
fdivs
mov
cmpsl
push
jmp
lods
and
jg
xor
testl
pop
pop
inc
pop
push
test
aam
jns
je
push
dec
adc
jecxz
ret
pop
xor
in
das
adc
and
adc
mov
es
insl
jo
je
add
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
xadd
push
xchg
xchg
adc
insb
pop
sub
or
pop
out
jns
je
jne
or
bound
mov
xor
ja
out
mov
jae
lret
sub
gs
pop
faddp
inc
in
cmp
mov
mov
je
xor
imul
dec
orb
sbb
push
test
jbe
inc
and
xor
mov
push
arpl
nop
mov
testl
out
pop
stos
add
rolb
bound
cmp
dec
shll
jb
add
mov
sub
mov
push
push
adcb
jmp
test
push
mov
cmpsl
pop
dec
jne
push
pop
daa
fwait
sub
push
test
bound
loop
inc
mov
push
aam
jns
jb
add
mov
ds
push
ret
pusha
or
xor
adc
out
inc
adc
fldt
or
aaa
inc
insb
jo
js
jp
pop
daa
adc
cs
sgdtw
mov
ret
jb
out
adcl
imul
add
push
pop
dec
sahf
std
fwait
incl
dec
inc
dec
push
xchg
add
loopne
cmp
add
sbb
fiadds
jg
ret
movl
add
pop
xor
mov
adcl
mov
inc
xchg
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
incl
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
mov
jmp
dec
fdivr
ljmp
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
jmp
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
pop
dec
pushf
pop
rep
cs
outsl
arpl
test
add
mov
filds
cwtl
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
push
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
stos
lods
aas
loope
ret
js
pop
out
inc
daa
mov
xor
das
ds
das
sbb
cmp
daa
daa
daa
idivb
sub
push
pop
inc
inc
inc
push
inc
pop
and
jg
pop
pop
or
aas
js
insb
cwtl
jbe
jbe
sbb
push
and
ss
test
ds
adc
orl
gs
nop
loopne
dec
iret
ds
push
add
pusha
popw
push
sbb
or
mov
ds
sti
es
add
push
sbb
lahf
in
adc
and
data16
push
mov
cwtl
sub
inc
mov
sarb
out
insb
mov
insb
mov
imul
and
insb
mov
shll
or
and
dec
add
rcll
jmp
jb
aas
mov
pushf
das
fcom
inc
cmpsl
push
mov
mov
add
pusha
popa
daa
mov
insb
outsl
daa
or
cmp
jbe
lahf
dec
pop
mov
sbb
push
xchg
out
or
cmpsl
dec
popf
push
mov
mov
xor
vmptrld
push
jl
sbb
push
dec
dec
jb
test
ja
out
push
imul
mov
ret
pop
xchg
and
and
arpl
fadds
dec
push
es
xor
jns
in
xchg
and
push
xchg
movsb
outsl
je
mov
popa
stos
adc
pop
loopne
cs
mov
daa
sub
sub
sub
push
add
icebp
xor
jo
loop
dec
inc
cmpl
sahf
and
push
push
ret
outsb
fwait
add
insl
outsl
fs
gs
in
imull
je
mov
adc
sub
imul
and
xor
fwait
pop
bound
xchg
fiadds
les
pop
lods
add
cmp
and
icebp
inc
je
bound
aaa
inc
cld
add
inc
insb
pop
jbe
ret
aas
sbb
pop
inc
popa
imul
inc
sahf
aaa
arpl
mov
outsl
jo
insb
in
cmp
dec
sub
data16
sub
mov
cmp
inc
or
inc
xadd
sbb
inc
cmovo
fdivr
lcall
aas
nop
jo
bswap
fldt
pop
pavgb
mov
mov
pop
mov
andps
inc
dec
or
ss
cmp
pop
dec
bound
sub
out
add
test
fistpll
mov
shlb
dec
xor
in
mov
inc
push
push
push
insb
das
sarl
outsl
pop
iret
ficompl
jbe
cmpsl
ja
lahf
add
push
daa
enter
inc
fsub
inc
jns
mov
daa
outsl
inc
xchg
mov
mov
leave
daa
xchg
jge
jbe
push
je
push
jo
mov
in
push
imul
iret
and
dec
fsubl
fildll
lea
add
push
sti
mov
leave
mov
outsl
jle
int3
xchg
xchg
mov
cmpxchg
ret
or
lret
lret
mov
adc
pop
jnp
scas
push
push
pop
addr16
mov
ja
ss
stc
lahf
mov
sub
cmpsb
pop
and
fadd
jle
inc
lahf
call
inc
inc
add
push
fmuls
nop
imul
lret
xchg
dec
enter
outsl
xchg
js
sbbl
cmp
jb
movsb
mov
int3
fsubs
rorb
int3
out
insl
xor
aas
out
addr16
pushf
pusha
daa
add
push
int3
aad
in
mov
mov
inc
add
push
xor
lods
ds
pushf
ja
iret
test
hlt
pop
jbe
dec
inc
int
push
in
aaa
xor
mov
int
inc
push
stos
fdiv
mov
aaa
dec
aas
nop
addr16
ja
aam
add
repnz
aas
roll
dec
packssdw
or
movsb
inc
hlt
outsl
or
scas
add
ja
idivb
into
dec
imul
jnp
daa
lock
pop
imul
enter
xchg
push
lock
pop
das
sbb
idivl
int3
data16
in
call
test
and
xor
cmp
push
dec
sahf
or
js
mov
mov
inc
addr16
mov
jnp
repnz
rcrb
xchg
mov
adc
mov
aam
imul
or
adc
aas
out
pop
adc
cld
and
daa
out
dec
enter
push
xchg
xchg
pusha
cld
fcmovb
pop
and
mov
mov
fsubrl
jae
addr16
aam
mov
test
inc
cmc
or
pop
sbb
sub
pop
in
xor
nop
dec
aas
ja
nop
out
lahf
rcrb
inc
cs
rcrb
int
add
lods
mov
int3
dec
lahf
lods
jns
iret
test
or
pop
and
mov
shlb
cltd
nop
iret
test
rcrb
cs
pusha
ja
and
mov
mov
mov
cmp
mov
add
push
dec
jl
loopne
rcrl
mov
cmp
push
pusha
shl
fcoml
mov
sub
jg
or
leave
out
nop
nop
mov
cltd
pusha
outsl
push
cmpsl
nop
fucom
inc
sahf
cmp
hlt
or
scas
inc
cs
mov
enter
aam
push
pop
cmpsb
pop
fiaddl
cltd
nop
fisubs
iret
test
cmpsl
mov
cmp
mov
loopne
and
mov
add
mov
test
xor
xor
fistps
inc
loopne
xor
mov
jg
and
mov
lods
call
push
cmpsl
mov
pop
repnz
pop
cmpsb
mov
test
dec
fwait
nop
iret
js
inc
push
push
cmpsb
xor
mov
xor
js
scas
pop
jnp
dec
mov
sahf
movsb
jb
fistl
test
test
enter
enter
enter
stc
pop
clc
and
xor
inc
xlat
push
enter
ja
pop
sar
lahf
and
je
xchg
enter
dec
lahf
je
pop
repnz
push
aam
and
enter
mov
adc
and
cmp
lods
or
cs
lods
jg
test
js
ss
test
cs
nop
push
cs
loopne
loopne
int
mov
fnstenv
jmp
fldenv
cmpsl
in
rcll
cmpsb
fs
fldenv
cmpsl
in
nop
or
mov
pop
mov
enter
dec
add
test
mov
fwait
nop
ficompl
push
sub
out
imul
movsb
inc
jg
loopne
ds
repnz
insb
sbb
mov
pop
sbb
sub
pop
shlb
or
pusha
xchg
push
cmpsl
mov
aaa
and
push
sub
aas
mov
pusha
push
pop
cmpsl
jg
bnd
iret
nop
pop
daa
addr16
scas
jbe
dec
add
out
test
enter
shlb
in
out
clc
or
jo
bound
ja
out
pop
bound
jmp
rcr
add
dec
inc
loopne
mov
jbe
dec
pushf
fsubl
lods
rcr
mov
add
mov
lock
or
inc
fstl
mov
fs
mov
mov
jg
int3
pop
lods
pop
jnp
daa
movsb
lahf
int3
cmp
pop
adc
inc
lock
hlt
or
push
and
add
lock
in
adc
fimuls
or
inc
ja
inc
or
daa
sar
ficomps
lods
fiadds
dec
pop
call
test
insb
cmpsl
jo
fdivrl
lahf
jo
fdivl
and
cmp
and
les
xchg
cwtl
inc
imul
loopne
or
ja
rolb
aaa
lcall
push
inc
lods
lods
add
call
nop
out
shl
loopne
xorb
inc
out
dec
enter
loopne
push
cwtl
push
call
inc
pusha
jg
enter
nop
enter
subb
adc
mov
push
cmp
sub
mov
lods
jg
in
insb
daa
addr16
and
lahf
in
inc
ja
dec
repz
mov
clc
loopne
outsl
push
clc
pop
insb
inc
jmp
movsl
jbe
inc
and
lahf
dec
jns
imul
in
sahf
or
fs
nop
or
mov
or
rcl
enter
mov
add
inc
testb
and
lahf
mov
ja
in
sbbl
lcall
pusha
mov
out
rorb
sahf
or
mov
rcrl
adc
inc
cmc
mov
inc
in
push
cmp
fidivl
aas
mov
test
in
out
iret
mov
out
cs
mov
rorb
lcall
and
movsb
pop
pop
adc
das
fmuls
nop
out
push
fs
sub
outsl
adc
aad
loopne
mov
addr16
add
cmp
in
jmp
lock
insl
add
daa
fs
jmp
adc
insl
scas
pop
cmp
addr16
insb
daa
out
scas
aas
add
sbbb
bound
enter
in
push
pop
add
int
pop
out
test
and
sbb
push
push
nop
popf
pusha
jp
push
enter
xchg
add
cmp
incl
mov
pop
lods
ja
mov
xchg
in
test
xlat
or
data16
out
dec
dec
call
fdiv
push
pusha
daa
aas
addr16
mov
addr16
pop
in
add
shr
fnstcw
sbb
xchg
jmp
dec
inc
inc
sub
xchg
sub
mov
add
add
adc
out
fidivs
dec
ljmp
icebp
cmp
neg
dec
clc
adc
repz
xor
lock
call
dec
int3
mov
push
js
or
jns
push
out
sahf
push
inc
out
ds
push
js
fucom
jns
or
repz
pusha
test
push
aad
sub
fisubs
mov
js
js
adc
xchg
dec
inc
cld
push
fbld
ss
fistpl
and
nop
add
jmp
add
popa
fdivs
mov
mov
inc
mov
cmp
or
fdivr
inc
mov
add
jmp
adc
jg
add
in
ja
push
xor
add
dec
inc
dec
outsl
shrb
in
sti
inc
sbb
in
jl
inc
shr
loopne
mov
cmovle
in
outsl
add
xchg
or
filds
adc
and
inc
in
dec
mov
das
push
pop
in
fildll
leave
xchg
or
fistpll
mov
cmp
inc
test
cmp
mov
cmp
xchg
pop
scas
or
add
outsl
leave
push
lock
out
int3
xchg
xor
fstp
xor
and
add
call
push
mov
bound
fsubs
ljmp
add
lods
xor
xor
out
out
and
outsl
add
sub
loop
sub
sub
sbb
js
dec
sahf
out
aaa
mov
cwtl
add
dec
sahf
out
mov
repz
adc
test
sub
aaa
notl
sub
lahf
mov
mov
or
out
push
xor
ja
add
sub
loopne
mov
repnz
cld
lock
ficomps
icebp
and
add
pop
leave
and
fisubs
add
xlat
mov
fdivrp
and
test
sbb
add
or
out
xor
sbb
roll
xlat
scas
sbb
and
scas
in
xchg
push
add
outsl
xchg
idiv
xchg
or
fisubs
addb
mov
aaa
jmp
call
loopne
pop
jne
out
push
or
imulb
mov
test
in
jg
push
jo
js
dec
dec
pop
loopne
inc
repz
adcl
pop
leave
xor
loopne
add
js
xchg
push
es
cmp
filds
hlt
jbe
fimull
adc
outsl
push
push
outsl
mov
cmp
jg
test
push
pop
pusha
xchg
daa
xchg
mov
push
inc
cmc
scas
ljmp
cwtl
cmc
scas
data16
jbe
testb
xor
push
movsb
or
jmp
cwtl
loope
or
sub
push
sbb
ss
or
xor
scas
add
sbb
stos
outsb
xlat
or
dec
shl
or
testl
in
cmc
pop
add
rorb
cmc
mov
add
and
pop
leave
fwait
push
mov
mov
lock
divb
mov
dec
sub
add
lock
adc
addr16
add
dec
aaa
sub
outsl
addr16
sub
add
cmpsl
adc
in
testl
jecxz
xchg
sbb
pop
les
daa
hlt
shrb
clc
ja
loop
insb
cmp
xor
jg
addr16
or
mov
cs
je
add
sub
mov
clc
push
in
pop
leave
mov
push
mov
das
outsl
add
aaa
pop
in
mov
clc
cmp
pop
dec
pop
cli
aaa
enter
js
pop
stc
aaa
add
and
cs
movsb
push
in
mov
popa
imul
iret
fsubl
andb
add
rol
loopne
insb
cli
scas
in
data16
or
popa
inc
call
int
mov
push
movsb
adc
clc
sti
fsubrl
repz
insb
sbb
outsl
mov
mov
lock
aas
add
decb
cli
cmpsl
bound
aaa
or
or
ss
inc
xchg
sti
push
sti
outsl
add
aaa
imul
movsb
mov
fwait
mov
rolb
add
add
scas
in
js
add
cld
shll
cld
pop
and
mov
add
jl
out
add
sbb
sub
add
adc
inc
or
out
pop
sar
out
les
or
add
ss
mov
addr16
push
mov
aas
addr16
daa
mov
mov
movsb
hlt
fs
in
clc
es
addr16
push
add
mov
dec
divl
or
xor
test
incb
push
incb
imul
movsb
out
pop
add
or
aaa
dec
mov
nop
out
sahf
rcl
lock
mov
filds
inc
lcall
fdivl
test
clc
out
push
mov
das
clc
ja
push
call
inc
decl
shrl
mov
add
dec
adc
shrl
jae
xchg
imul
scas
fdivrl
sarl
cmp
lcall
dec
sarl
stos
xlat
cli
adc
cmp
fs
pop
mov
iret
repz
shl
mov
jbe
or
pop
pop
mov
sahf
out
mov
ds
idivl
jns
inc
nop
dec
push
addb
jns,pt
out
push
dec
jnp
int
repz
repz
aas
mov
fisubs
xchg
mov
sbb
repz
ljmp
out
mov
sahf
out
clc
sbb
cmp
repz
out
ds
shl
xor
jne
iret
repz
int3
sub
fucom
jns
fwait
data16
dec
pushf
push
repz
out
subl
sahf
pop
mov
imul
mov
jns
jg
call
lahf
cmpsl
stc
cmp
adc
dec
fwait
or
cmpsb
movsb
push
inc
insl
test
movsl
ds
repz
mov
sahf
out
inc
insl
nop
int3
out
cmp
repz
test
jl
cmpsl
jb
rorl
xchg
jns
out
stos
das
pop
cwtl
loopne
repz
sbb
lods
out
xor
stc
lods
pushf
in
scas
dec
repz
popa
in
inc
scas
lahf
out
insb
shll
mov
repz
insl
mov
test
add
repz
adc
push
mov
stc
sub
sbb
testb
sbb
out
or
mov
cli
cmpl
cmpsl
stc
cmp
sbb
sahf
out
xor
leave
adc
dec
jb
dec
repz
sbb
push
xchg
fnstcw
stc
xor
pop
lcall
sarl
cwtd
in
aas
ret
sti
xor
cmpsl
jle
xor
outsb
stc
mov
mov
push
hlt
mov
mov
enter
leave
push
stc
xor
out
out
lret
lret
repz
cmpsl
xchg
rolb
sub
cmp
out
int
into
popa
test
out
iret
xor
repz
inc
gs
lret
push
shll
jge
dec
fldt
jbe
push
sarl
lcall
mov
iret
repz
fadds
dec
mov
pop
dec
repz
pop
loop
xlat
dec
jae
cmpsl
stc
cmp
jle
mov
sbb
out
xor
in
xor
insl
stos
cmp
repz
inc
fstpt
negb
fsubrl
ds
repz
inc
fisttps
in
flds
shlb
cld
ss
repz
in
imul
jbe
dec
repz
repz
imul
cld
incb
jp
lahf
add
ds
mov
lahf
int3
cmpsl
xor
movb
mov
pusha
aas
aam
cmp
ret
adc
push
adc
sbb
lods
nop
out
cmp
push
mov
leave
mov
inc
pop
aaa
mov
call
insl
mov
insl
rol
jg
inc
cmp
xchg
adc
inc
sarb
and
test
inc
sti
jae
jge
aas
rcll
jg
movsl
shr
add
sub
aas
andps
inc
in
cmp
pop
arpl
mov
pop
fwait
and
mov
fistpll
adc
dec
xchg
aas
pop
out
push
push
push
outsl
jg
and
mov
sbb
in
push
inc
sti
pop
ss
and
pushf
sub
pushf
divl
aas
test
inc
cmp
dec
aas
pop
jnp
leave
in
xlat
outsb
fldl
inc
insb
mov
jo
daa
pminsw
mov
outsl
addr16
sbb
add
jmp
pop
or
in
pop
cmp
pop
push
je
inc
ffreep
adc
jno
inc
dec
push
iret
shlb
push
pushf
push
enter
lahf
js
sahf
xorl
js
or
les
fiadds
xchg
jns
add
or
or
jno
pop
jns
push
jge
loopne
enter
ds
jl
jne
je
in
aas
scas
orb
les
sbbl
pop
and
xchg
fadds
or
pop
ja
push
lahf
push
dec
movb
scas
add
add
inc
test
xchg
cmp
inc
out
es
pop
inc
or
push
mov
push
lahf
push
xchg
push
push
and
add
dec
sbb
mov
pop
add
push
xlat
push
jns
mov
iret
push
add
cmp
cwtl
mov
and
rcll
shrl
pusha
negl
lea
push
daa
sub
push
xor
stos
js
xchg
decl
push
pop
and
dec
jnp
sahf
or
pop
in
ja
adc
fwait
sub
lret
movsb
push
aas
out
push
daa
jns
pop
rclb
mov
push
leave
xchg
adc
mov
shll
cmp
xorps
inc
repnz
xchg
scas
stos
js
sbb
mov
jb
mov
mov
jg
inc
jo
iret
push
push
out
xchg
mov
add
inc
sbb
andb
push
sub
pop
xchg
rorb
pop
rcr
js
adc
mov
es
sarb
jl
push
jb
add
inc
mov
adc
push
daa
cmp
cmp
jno
dec
mov
xor
pushf
out
mov
lods
push
pop
cmp
repz
add
mov
mov
push
enter
roll
mov
or
sbb
addr16
jbe
xor
push
in
xchg
fildl
mov
daa
daa
pop
add
leave
mov
daa
in
ljmp
call
xor
pop
sub
and
adc
push
out
jae
sbb
pop
mov
add
in
pushf
dec
sub
xlat
popf
daa
pushw
mov
mov
add
xchg
xchg
xchg
xchg
cltd
mov
xchg
sbb
mov
mov
pushf
fsubl
fsubl
dec
sahf
pushf
cld
add
push
daa
push
comiss
mov
inc
lea
pop
popf
xchg
or
mov
lock
add
cwtl
lea
mov
push
add
out
fnstsw
or
jno
out
or
or
xchg
iret
add
or
fstpl
jmp
push
daa
inc
popf
pushf
fsubrl
push
addps
ss
jl
mov
xchg
lods
adc
out
pushf
cmpsl
add
in
add
adc
add
push
ret
je
repnz
es
xchg
subb
adcl
mov
and
fdivs
mov
adc
cmpsl
mov
daa
push
ja
add
ja
push
daa
jo
xlat
pop
push
outsl
lcall
mov
repz
mov
push
pop
aad
loopne
push
repnz
out
cmp
or
cs
call
nop
out
pop
das
enter
dec
and
sbb
stos
ja
push
add
sbb
sub
mov
lahf
cmpsl
popf
stos
sahf
out
pushf
mov
push
add
add
insb
jns
lret
imul
cmc
popl
repnz
xchg
bound
pop
pop
and
or
leave
xor
shlb
sbb
xchg
push
rcrb
xchg
pushf
pop
xor
push
enter
and
daa
cld
mov
mov
and
pusha
xchg
call
push
repnz
je
pop
sbb
test
or
dec
inc
aas
outsl
sub
clc
sbb
sbb
sbb
scas
pusha
add
inc
inc
xchg
pop
xor
mov
negl
push
inc
lea
cmpsl
aam
fbld
cmp
sbb
sbb
pop
enter
stc
pop
out
mov
or
adc
jg
dec
dec
xlat
sbb
xchg
imul
push
pop
xchg
inc
outsl
push
sbb
pop
xchg
xchg
ja
sbb
sbb
pushf
xchg
adcl
dec
ja
adc
daa
xor
insl
mov
pop
rcll
or
cwtl
sbb
jb
xchg
add
cmp
sbb
outsl
add
in
xchg
add
mov
mov
push
and
scas
inc
push
xchg
dec
leave
mov
mov
and
pushf
imul
rclb
push
addr16
addr16
testl
mov
xchg
pop
in
xchg
fneni(8087
out
in
add
xchg
daa
add
sbbb
out
es
xor
cmp
inc
adc
or
iret
enter
lcall
add
xchg
pop
pop
cmp
and
xchg
pop
and
and
jmp
inc
jl
mov
test
das
out
ret
xchg
in
out
xchg
repz
das
cli
xchg
add
leave
repz
sbb
es
xor
xchg
inc
or
mov
xchg
out
xchg
jmp
addr16
and
insl
mov
fs
fnstsw
ja
xchg
or
inc
iret
add
xchg
paddusb
call
addr16
cmp
pop
cvtps2pd
rorl
jmp
cmpsl
xchg
out
xor
pop
in
or
aad
pushf
push
or
enter
in
sub
push
in
into
inc
repnz
je
jl
scas
pop
mov
jmp
mov
rcll
add
mov
and
loopne
es
xchg
mov
pop
fiaddl
cmp
nop
scas
leave
mov
in
les
jne
xchg
or
repnz
xchg
cmp
dec
std
aaa
add
cltd
dec
dec
jnp
lcall
cmp
shld
lfs
cmp
cltd
in
and
in
enter
pop
mov
push
pop
scas
inc
out
push
jns
pop
or
hlt
mov
popf
sbb
fcoms
push
es
inc
dec
and
pushf
and
daa
inc
and
iret
andb
fs
sub
xchg
es
repnz
daa
add
mov
xlat
push
cmp
add
dec
sbb
iret
xlat
cmp
ja
fisttps
add
cmc
mov
add
adc
lahf
sbb
aam
jmp
enter
jg
adc
cwtl
adc
xchg
cmp
xlat
add
sub
dec
sub
enter
imull
aas
popf
enter
popf
popf
popf
popf
xchg
enter
popf
jns
test
cmpsl
aaa
xchg
pushf
mov
cmp
rcl
or
lea
and
push
push
cs
pop
jo
jmp
push
out
sbb
or
push
lahf
stos
addr16
stos
jne
mov
add
in
rorl
divb
mov
lock
and
mov
lahf
ss
das
dec
push
add
push
pop
lahf
or
sub
mov
scas
daa
daa
pop
lods
pushf
add
pop
leave
and
mov
daa
mov
pop
out
mov
cs
mov
push
mov
cs
dec
nop
lcall
add
vmwrite
add
add
and
xchg
aaa
push
pop
ja
ficoml
scas
imul
push
push
xorl
mov
out
les
fsubrl
int3
xchg
add
push
sub
daa
fisttpll
cmp
popf
mov
inc
ja
add
ljmp
orl
xchg
cmpsl
push
insb
add
dec
dec
rcr
loope
xor
icebp
stc
mov
pop
andb
mov
das
push
pop
cmp
dec
sahf
out
inc
push
add
iretw
in
in
push
jno
das
xchg
mov
negb
cmp
iret
or
mov
iret
jae
adc
ljmp
cmc
mov
mov
cmp
movsb
and
xlat
xlat
data16
pop
addr16
movsb
fbld
sbb
mov
nop
sets
add
movsb
daa
dec
das
mov
mov
aas
push
mov
in
pop
hlt
cld
cs
add
or
cmpsl
adc
enter
pop
or
rcr
xchg
decl
pushf
cmpsb
pop
andb
mov
mov
jmp
imul
incl
cmpsb
xor
and
iret
cmpsb
xchg
addb
cmp
lret
inc
push
lea
ljmp
pop
sti
push
ret
xchg
subb
scas
nop
mull
pushl
stos
xlat
push
pop
or
les
xor
mov
push
rol
cmp
sub
xor
add
jb
cmpsl
xchg
cmpsl
sbb
test
fistpll
dec
sahf
ja
dec
push
push
add
enter
fildll
jns
or
or
pushf
fbstp
add
mov
xchg
daa
push
out
pop
test
push
add
cmp
in
pop
pop
cs
add
das
aaa
test
aas
test
jb
pop
add
push
leave
leave
inc
pop
lea
and
xor
test
mov
mov
js
das
incl
femms
add
sbb
test
test
jg
test
mov
jle
mov
mov
pop
mov
dec
dec
cs
iret
daa
fimull
divb
xor
stos
andl
mov
stos
pushl
inc
ja
stos
ja
pop
int
mov
rorb
pushf
loope
enter
xchg
stos
xor
es
ss
incl
stos
push
stos
mov
loop
je
pminub
cmp
mov
int
fsubrs
addr16
xlat
iret
fldt
xchg
iret
lcall
xchg
sbb
lds
xchg
or
aad
fisttpll
add
xchg
in
push
add
cmp
outsl
or
cmp
adc
leave
repz
sub
repz
cmp
inc
adc
adc
adc
adc
repnz
jne
lods
mov
jl
aaa
mov
cmp
lods
aaa
jecxz
out
das
in
repnz
push
dec
cmp
enter
inc
lods
dec
psrld
loop
lods
push
xchg
lods
jmp
dec
dec
xchg
mov
cmp
scas
inc
unpcklps
aaa
leave
leave
add
dec
push
mov
push
scas
mov
int
mov
jg
add
mov
mov
scas
popf
pushf
je
pushf
movsb
lods
dec
or
repnz
mov
mov
repz
fsubrl
int3
push
cmovle
js
aam
add
pop
jns
scas
xchg
mov
aas
in
pop
dec
in
sarb
jp
or
aam
xchg
dec
or
pop
jne
popf
mov
adc
adc
nop
ja
enter
fmuls
and
vmwrite
cmp
cmp
cmp
sbb
pop
sbb
jmp
jge
out
daa
iret
enter
add
mov
pop
cwtl
popf
pushf
pop
enter
jle
or
pop
mov
xchg
incl
repnz
cmp
shr
outsb
add
cmp
scas
add
iret
add
xlat
decl
hlt
cli
inc
incl
push
cmp
jmp
jg
es
xor
push
popf
out
pop
cmpxchg
pusha
push
add
jns
jne
jl
iret
mov
mov
js
out
or
dec
ss
mov
sarb
out
and
sysret
mov
push
add
add
add
add
jns
pop
pop
outsl
or
jns
out
or
pop
mov
or
out
add
add
mov
xchg
das
shlb
jmp
sbb
in
or
in
daa
sbb
enter
push
mov
mov
cmp
daa
and
repnz
jl
ds
and
inc
mov
mov
pop
daa
pop
jmp
lahf
call
add
out
sbb
fsubrl
enter
mov
sahf
pushf
pushf
cwtl
nop
mov
push
inc
aas
shll
sbb
mov
int3
iret
iret
leave
in
jbe
addr16
cmovp
ficoml
jmp
dec
or
es
mov
repnz
mov
js
jmp
inc
lret
mov
in
mov
push
outsl
jmp
stc
sbb
xchg
out
lods
sbb
stos
xchg
xchg
xlat
push
mov
mov
pop
outsl
bound
fsubl
ltr
iret
sbb
ljmp
or
or
cmp
add
push
rol
mov
xorb
imul
inc
inc
hlt
and
pmulhuw
movsl
notb
inc
sbb
scas
popf
loopne
jb
inc
add
pop
or
mov
adc
je
das
mov
mov
pop
idivl
mov
add
mov
js
orb
in
outsb
fucomp
xchg
pop
lcall
stos
iret
or
call
adc
mov
lahf
xchg
xchg
je
mov
add
sub
mov
mov
inc
fwait
js
pop
addr16
cmpsl
push
mov
insb
ja
ja
xchg
xchg
xchg
xchg
fwait
mov
leave
inc
into
pusha
fsubrl
call
xchg
add
es
inc
mov
push
js
cmpsb
aaa
nop
decl
out
and
mov
into
leave
leave
inc
jl
mov
ja
out
das
mov
inc
jns
in
pop
fcos
pop
sub
push
ss
pop
lods
cmp
leave
mov
add
pushf
cmp
test
mov
cmpsl
push
loopne
or
mov
fsub
xchg
add
cltd
dec
jbe
xor
mov
outsb
pop
jg
xor
jg
mov
in
es
xchg
cltd
lsl
test
cmp
jmp
xchg
aad
in
inc
sbb
push
xor
mov
xchg
dec
xchg
imul
orl
pop
cs
or
or
jns
outsb
cmp
das
femms
cmp
lock
out
mov
push
js
push
mov
sahf
add
xor
jns
xchg
xchg
cmp
pop
push
int3
jo
cmp
punpckldq
and
pusha
dec
mov
sahf
packsswb
jns
cmpsb
add
mov
or
adc
add
add
outsb
fnstsw
lahf
cmp
inc
push
pop
mov
or
or
mov
int
ficoml
xlat
addr16
add
outsl
sarb
add
adc
mov
mov
inc
mov
fs
add
out
outsl
jp
xchg
push
pop
lahf
stos
dec
mov
or
xchg
cmp
call
pop
and
mov
ja
movsl
mov
rdpmc
mov
daa
rorb
dec
pmaxsw
mov
xlat
jbe
into
inc
dec
test
push
test
add
aas
and
in
push
iret
shll
pop
in
pmuludq
add
jo
mov
add
cmpsl
or
in
dec
outsl
and
or
das
mov
mov
xchg
mov
mov
push
xlat
push
out
popf
fisttpl
pop
movsl
in
dec
sahf
add
mov
pop
int
or
lock
add
mov
aad
aaa
or
pop
shrb
aam
mov
xchg
xor
ja
out
jbe
xchg
push
outsb
jbe
jle
mov
add
in
in
mov
mov
clc
dec
push
mov
mov
add
push
or
pop
adc
jno
outsb
nopl
sub
jbe
cmp
mov
inc
dec
xor
push
sar
in
sbb
jp
jp
pop
and
add
mov
cmp
mov
and
xchg
mov
sub
add
fiadds
push
mov
fisubl
mov
push
pop
addr16
fcompl
jae
fists
adc
mov
mov
xchg
aas
push
mov
push
add
push
sahf
xchg
out
paddusb
pop
in
push
fidivs
dec
es
mov
push
ret
cmp
insl
or
ja
shld
in
fs
jbe
in
jbe
or
xchg
leave
leave
leave
test
pop
and
push
jbe
push
mulb
popf
lock
pop
and
comiss
in
sub
pop
jnp
dec
ss
push
pop
outsl
les
jo
add
xchg
xchg
add
sbbl
mov
or
cs
idiv
sysret
lds
lea
pop
lds
pop
push
mov
lds
add
push
ja
mov
xchg
fstpt
test
ret
fildl
lds
mov
out
or
or
clc
push
mov
dec
and
iret
add
call
push
add
sbb
insl
divb
jnp
out
xor
cmp
out
inc
aas
daa
iret
jmp
push
negl
or
jl
ds
cmpsb
jle
pshufw
and
fadds
xchg
daa
mov
scas
push
ja
addr16
add
xchg
pop
push
push
push
rdrand
pop
out
jecxz
push
scas
push
add
fst
popf
daa
ljmp
pop
clts
repz
mov
mov
maxps
lds
push
jle
adc
push
mov
cmp
ud0
mov
adc
scas
sbb
jo
inc
fs
mov
outsl
mov
cmovne
mov
dec
push
add
push
fnsave
testl
sahf
xlat
iret
insl
or
enter
jle
or
push
enter
sub
push
inc
inc
inc
sub
enter
scas
adc
or
pop
cmpb
pushf
push
repz
pushf
loopne
imul
jnp
jmp
push
add
in
push
xchg
fwait
mov
push
decl
inc
ret
dec
insb
push
outsl
add
fldt
aas
pop
sbb
dec
ret
xchg
xchg
and
xor
outsl
mov
mov
pushf
je
out
add
cmp
repz
push
scas
mov
cs
or
or
or
or
add
cmp
push
sbb
outsb
xchg
inc
fmulp
rdpmc
das
cs
out
push
xchg
push
mov
pop
lret
movd
insl
fnstsw
jbe
jle
push
scas
lret
mov
or
jno
adc
fcomps
mov
jns
cmpsl
iret
push
add
loopne
or
xlat
ljmp
mov
pop
jl
je
pop
jo
mov
icebp
jns
inc
xor
mov
cmc
add
fcompl
int3
scas
adc
and
push
cmpsl
cmpsb
cmp
filds
out
nop
aaa
dec
call
btr
mov
into
icebp
in
push
fucomip
int3
out
cmc
int3
in
and
int
push
or
out
sahf
out
or
and
int
adc
repz
pop
adc
outsb
adc
iret
repz
adc
cmp
repz
lcall
iret
mov
mov
in
pop
push
adc
in
adc
adc
in
in
push
or
sub
out
push
fs
add
test
adc
loope
test
sub
ds
pop
in
inc
daa
and
mov
into
xor
lahf
cmp
into
enter
inc
into
dec
push
into
pop
roll
pop
daa
repnz
test
outsb
and
pop
mov
pushf
jl
mov
pop
mov
pop
into
xchg
dec
push
and
lcall
dec
adc
ja
cs
xchg
dec
addr16
enter
outsl
push
outsl
ja
add
jb
xchg
iret
xchg
iret
mov
mov
push
in
outsb
push
lcall
mov
ror
cmp
xchg
pop
sub
call
fwait
mov
outsb
mov
pop
int
jg
mov
fisubrl
test
pop
ja
pop
out
fisttpll
es
negb
jmp
add
and
inc
divb
cmp
inc
rcll
add
xlat
pop
fs
insl
js
push
mov
das
mov
out
pop
push
cmpsl
push
push
sahf
mov
sub
and
inc
neg
incb
rorb
xchg
mov
xchg
rclb
nop
fbld
rcrb
outsb
mov
pop
cs
ss
push
or
cmp
dec
push
or
or
pop
push
data16
add
adc
leave
enter
rclb
push
ljmp
pushf
fmull
les
or
clc
cmp
iret
sti
rorb
xorb
push
xor
mov
push
pop
test
shll
rcrl
add
dec
push
out
add
and
sahf
outsb
or
jbe
or
into
mov
xchg
cmpsl
negl
xchg
mov
outsl
test
push
daa
xchg
in
and
ror
in
aam
fsub
mov
in
pmuludq
inc
push
mov
pop
aam
aam
mov
xor
ja
nop
into
in
in
jo
js
xor
xor
xchg
add
cmp
popf
mov
jb
jb
out
lock
cmc
mov
push
in
mov
sub
cmove
jmp
movsl
daa
adc
aad
fmull
pop
addr16
rcl
cwtl
fs
insl
pop
dec
out
out
xchg
jg
sbb
daa
lcall
pop
icebp
aad
xchg
inc
addr16
ds
add
or
ret
jmp
or
xor
data16
es
jb
fwait
sbb
cmovae
mov
js
aaa
mov
or
orb
out
pop
lcall
iretw
push
push
mov
dec
sahf
xchg
pop
add
add
mov
jns
lret
push
xchg
cmp
iret
pminub
fadd
movsl
js
std
add
and
loopne
or
test
mov
incl
das
cmp
add
out
dec
and
cmpsl
jbe
sub
test
or
jg
fsub
push
fwait
cmp
repnz
push
add
push
pushf
fmull
cmp
pushf
pushf
pushf
inc
dec
push
or
leave
leave
leave
pop
fs
jbe
add
or
fcomps
mov
fcmovne
in
and
ja
fcompl
cmpsl
xchg
movzwl
xchg
pusha
push
push
add
push
scas
push
fldt
mov
push
jmp
fldcw
pop
invd
fwait
cmp
in
push
push
or
xor
fildl
aas
pmulhuw
push
enter
fstps
cmp
imul
sahf
pushf
fucom
fstps
jo
mov
test
jecxz
fwait
addr16
in
cmpl
addb
fildl
jp
inc
test
jae
rorl
pop
daa
sbb
or
push
add
push
mov
addb
add
sub
pusha
cwtl
push
mov
insb
xchg
mov
sets
loope
mov
pop
fisubrs
adcl
imul
xchg
dec
jnp
scas
xchg
out
jbe
addr16
add
mov
dec
cs
ja
fcmovnb
adc
and
ljmp
cmp
lahf
adc
aas
sbb
and
repz
add
add
repz
fcompl
push
dec
pushf
pushf
fdivrl
add
cmp
repz
or
or
outsb
repnz
push
repnz
imul
insb
xchg
test
dec
xchg
push
xchg
movsb
fsubrl
mov
add
in
into
insl
pop
movq
mov
fisttpll
push
and
or
adc
or
and
pushf
dec
and
insl
inc
fnsave
dec
fstl
pop
fucomp
arpl
stos
btr
mov
popf
fcmovnb
pop
lret
jg
dec
imul
iret
mov
jnp
repz
testb
jnp
movsb
fwait
cmp
fwait
adc
mov
jecxz
xchg
iret
jae
repz
sbb
fidivrs
leave
sti
nopl
or
pop
sbb
and
push
and
jbe
xor
dec
inc
push
es
repz
fwait
movaps
sub
repz
sub
imul
iret
repz
jnp
subl
lock
mov
add
nop
out
insl
testb
pop
fidivs
ss
dec
push
mov
cmp
xchg
add
push
daa
inc
sahf
mov
cmp
sub
ja
dec
sbb
adc
sbb
jmp
jbe
rcll
iret
in
in
jb
test
pop
and
xchg
xchg
pop
add
out
mov
xlat
loop
out
out
sbb
push
pop
jle
fwait
popf
cmp
loopne
sub
dec
aaa
pslld
jae
or
dec
sahf
ja
push
adc
adc
cmp
in
unpcklps
iret
lds
rclb
fistpl
dec
iret
repz
sbb
sbb
xchg
loope
push
sbb
sbb
cmp
xor
inc
and
cmp
repz
and
push
and
andb
es
daa
mov
jb
loope
loope
loope
loope
xchg
and
loope
loope
loop
cmp
xor
loop
xor
popf
popf
popf
popf
pop
aas
loop
dec
loop
push
loop
pusha
loop
iret
fwait
popf
fildll
pushl
daa
andl
mov
repz
and
cmp
repz
into
pop
fstps
repz
repz
out
sbb
jns
in
sbb
add
push
sbb
jns
out
es
dec
sahf
out
sahf
cmp
inc
dec
push
dec
jns
out
pop
dec
push
ja
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
lcall
mov
aad
xchg
popf
aam
loopne
ss
push
mov
and
xchg
pop
add
aas
in
getsec
mov
femms
popa
pushf
mov
push
out
sahf
addr16
push
pop
orb
sahf
out
sahf
or
leave
and
or
or
iret
repz
jmp
repz
adc
pop
in
iret
repz
adc
adc
cmp
repz
das
sbb
iret
repz
inc
sbb
pop
sbb
iret
repz
sbb
cmp
repz
mov
xchg
and
fcmovne
lahf
test
outsl
loopne
mov
aam
fsubr
out
or
mov
dec
add
outsl
out
sahf
aaa
or
sbb
adc
jp
out
adc
pop
in
ds
or
out
sahf
out
or
mov
das
sahf
jnp
dec
xchg
xchg
out
es
lret
push
push
movsb
cmovo
mov
push
sbb
out
shrb
addr16
wbinvd
popf
cmpsl
pop
ds
add
dec
fidivs
jmp
out
push
pop
push
push
aaa
jns
xlat
wbinvd
push
push
or
setle
jns
or
cs
sahf
out
cmovbe
dec
adc
in
in
pop
pcmpgtd
cmp
mov
mov
sbb
repz
jbe
out
fldl
ja
push
add
push
xor
push
pop
call
rep
push
add
daa
mov
cmp
das
dec
push
pop
cmp
daa
daa
fs
je
jns
iret
repz
mov
in
in
stos
btr
ret
lret
rcr
leave
leave
leave
leave
jecxz
repz
and
fwait
jmp
push
and
sbb
and
inc
jle
and
sub
and
ja
jne
xchg
push
pop
add
add
mov
bound
jb
add
orb
rep
shld
lods
daa
iret
cmp
mov
fcmovne
rep
dec
aam
adc
in
leave
out
xchg
in
hlt
scas
push
sbb
enter
ljmp
outsb
loope
cmp
outsb
inc
ljmp
push
push
push
cmp
jle
mov
xchg
out
jns
int
or
mov
push
lods
movzwl
ret
in
adc
out
psubw
adc
mov
bndldx
and
sbb
sbb
inc
repnz
iret
sbb
sbb
jae
pop
jge
and
iret
jae
xchg
sahf
and
cmp
mov
dec
outsb
daa
loopne
jmp
add
repz
and
and
daa
iret
das
sub
adc
scas
xchg
lock
in
iret
repz
scas
push
add
cmp
add
add
repz
stos
pop
mov
in
sahf
addr16
mov
or
pushf
pushf
cmp
fisttpl
or
jmp
dec
inc
sahf
pushf
sti
add
or
iret
in
in
adc
and
sub
leave
repz
cmp
cmp
inc
es
repz
sbb
mov
pop
push
mov
xchg
iret
and
xchg
xchg
xchg
xchg
mov
ret
xchg
xchg
ret
in
dec
and
in
in
das
cmc
in
xchg
push
add
sbb
mov
movhps
push
add
ds
sahf
pushf
pushf
dec
push
out
outsl
bnd
into
jl
push
or
or
jbe
push
mov
pop
jg
lahf
out
outsb
mov
mov
std
fucomi
enter
or
adc
mov
add
aas
femms
sbb
sbb
cmp
repz
sbb
mov
push
push
pop
pop
mov
fucomi
data16
lahf
jl
mov
xchg
fisubrs
inc
movmskps
decl
sub
push
sub
sub
push
sub
jg
cs
das
popf
xor
repz
xor
sahf
divl
into
leave
xor
fistps
ss
aaa
idivl
data16
lock
cmp
jns
repz
cmp
cmp
cmp
aas
loope
scas
negl
add
inc
or
out
inc
and
iret
mov
push
push
adc
add
aad
repz
jno
or
xchg
xchg
pop
ss
jg
pop
jge
jg
pop
and
add
outsl
mov
outsl
mov
cmp
repz
xchg
inc
iret
leave
in
clc
or
add
mov
nopl
repnz
jns
out
push
push
inc
cmovg
in
sahf
out
adc
je
repz
orl
cmp
leave
mov
ret
setle
in
into
pop
sbb
dec
adc
or
push
push
icebp
in
jbe
cvttps2pi
inc
repz
das
jg
adc
adc
ja
push
mov
ja
cmp
in
enter
jns
cmpsl
add
add
dec
cmp
hlt
hlt
repz
sub
or
sahf
out
fimuls
mulps
movq
adc
jns
aaa
jns
unpckhps
nop
push
in
sahf
out
pop
cmpsb
sbb
mov
sarb
jns
fisttpll
sbb
cmc
repz
out
and
and
adc
dec
pop
fisubs
push
pop
cvtpi2ps
cs
repz
daa
inc
sub
push
lret
rep
daa
popa
emms
push
sub
fnstcw
fbstp
mov
sub
cmc
test
das
push
add
add
add
stc
hlt
cmp
add
push
and
push
div
jg
testb
out
dec
andl
jg
daa
out
mov
addr16
jge
daa
pop
fsubr
mov
xchg
sahf
pop
repz
repz
or
mov
aad
sbb
aad
loopne
idivb
testb
mov
push
adc
sbb
pop
out
sahf
testl
cmp
mov
sbb
push
push
push
sbb
cmp
repz
sbb
repnz
pop
andb
lcall
mov
mov
and
in
xchg
in
jmp
scas
aaa
cvtdq2ps
scas
mov
jg
cmp
sahf
adc
sbb
shrb
out
daa
dec
das
repz
loop
lahf
jb
scas
push
add
repz
mov
xchg
add
out
sahf
fldt
or
or
or
or
jns
or
or
out
adc
nopl
mov
sub
push
adc
jbe
mov
adc
jns
in
jnp
xchg
sbb
xchg
sahf
test
push
sub
out
pop
xor
in
push
add
add
or
jg
push
add
es
mov
pop
xor
or
or
repnz
ljmp
in
jbe
aas
jbe
jle
adc
mov
adc
adc
jbe
pop
mov
mov
out
sbb
sbb
iret
repz
sahf
sbb
out
push
out
pop
bswap
repz
and
and
dec
and
cwtl
xchg
sti
fisubrs
inc
cmp
inc
pop
push
divps
iret
repz
add
ja
cmp
mov
cmc
in
or
iret
shrl
femms
int3
pushf
cmp
repz
adc
clc
outsl
jbe
repz
cld
push
cld
das
sbb
adc
daa
daa
femms
sbb
and
jns
out
das
sbb
iret
cmp
inc
sbb
push
jae
jg
cld
out
iret
repz
dec
and
repz
es
pcmpgtb
rol
lret
cld
pop
sub
xchg
cmc
orb
pop
shr
nop
mov
insb
mov
sbb
push
pop
and
mov
std
inc
xor
dec
std
arpl
jno
outsl
das
jl
pop
movsb
cmpsl
dec
dec
push
mov
lahf
stos
stos
cmpsl
fisttpl
mov
pop
syscall
repz
xchg
lret
pop
loope
in
cmp
es
or
syscall
or
mov
decb
and
jns
out
inc
pop
push
adc
jns
out
data16
jl
in
sahf
out
pop
fistps
ljmp
mov
repz
mov
and
out
cmp
dec
and
push
and
jns
xchg
popf
test
mov
out
sahf
out
leave
daa
aam
cwtl
pushf
je
fisttps
es
cwtl
cmp
adc
jnp
xor
dec
or
xor
push
iret
repz
mov
and
in
in
daa
aaa
push
ss
dec
pslld
iret
outsl
push
sahf
xchg
xchg
pushf
cmp
jbe
push
push
cmp
stc
icebp
aas
push
leave
dec
jmp
scas
mov
outsb
sahf
iret
movnti
jns
in
in
fldt
out
push
icebp
iret
xor
das
or
unpcklps
pop
jbe
cmp
sub
fsubrp
dec
addps
adc
jbe
mov
adc
in
pushf
xcrypt-ctr
cmpsl
push
pop
mov
daa
daa
mov
mov
in
mov
cmp
clc
add
pop
push
sahf
out
outsb
nopl
and
jae
repz
pop
das
and
fisttpl
sub
jns
stos
sub
fidivs
stos
add
das
cs
pushf
cmp
in
push
push
xor
repnz
repz
sahf
xor
in
jbe
mov
insl
mov
add
xchg
dec
ds
xor
pop
add
imul
lret
xchg
idivl
pop
push
rcr
in
out
push
negl
in
psadbw
adc
scas
adc
aam
push
push
iret
ucomiss
dec
dec
es
or
xchg
in
out
or
sbb
or
inc
fsubl
test
mov
mov
daa
inc
mov
push
push
ja
dec
pop
mov
divl
xor
pop
pop
mov
out
subl
stos
sub
inc
and
and
fnstenv
mov
add
push
js,pn
subl
popl
or
cs
aaa
xlat
mov
insl
or
xlat
mov
fisubrl
bswap
repz
add
add
leave
repz
or
or
rclb
inc
mov
adc
daa
popf
fsubr
xorb
and
pop
inc
inc
push
addr16
das
outsb
mov
in
push
xorps
insl
iret
addl
jb
or
push
pop
andb
and
dec
outsb
aas
addl
mov
in
ror
mov
into
aas
xlat
cltd
pop
shl
sbb
data16
inc
loopne
lock
mov
and
add
bound
dec
add
or
imul
imul
pop
sbb
xchg
jecxz
sbb
add
dec
pusha
sbbb
iret
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
aas
and
ficompl
pop
fisubrl
xor
fcomp
loopne
add
jle
jns
xchg
or
pushf
and
xchg
out
sahf
out
mov
jns
je
pusha
push
dec
inc
jns
out
cmp
xor
sub
jns
out
and
sbb
dec
repz
adc
or
and
in
cmp
jnp
and
push
faddl
aam
shl
iret
repz
movsb
mov
iret
xorb
repz
out
insb
push
fs
pop
push
dec
mov
into
out
lret
sbb
clc
and
cmp
repz
aam
mov
cmp
mov
js
sahf
out
pop
jo
pusha
push
cmp
mov
sbb
or
and
jge
cmpsl
call
jle
push
push
fistpll
pushf
push
je
pusha
and
icebp
sub
insb
add
add
mov
out
insb
push
js
clc
mulb
insl
popf
incl
dec
hlt
xor
cmp
pop
aas
sbb
es
push
or
xor
pop
or
or
push
dec
lock
xorb
icebp
call
push
mov
push
inc
jg
mov
mov
scas
pop
shll
dec
inc
sgdtl
push
inc
xchg
pop
adc
jg
lcall
inc
xor
sti
add
mov
arpl
mov
mov
testl
das
outsl
sbb
mov
iret
xchg
into
add
pop
cs
mov
push
js
stc
pop
jg
push
in
mov
stc
pop
out
cmp
adc
inc
sub
out
xchg
outsb
sahf
imull
sbb
popf
out
and
and
cmp
jmp
cmp
adc
pop
jl
jnp
push
sbb
hlt
and
adc
push
dec
push
fdivrs
out
adc
aam
rorb
jnp
out
or
adc
jae
nopl
cmp
out
sahf
out
xor
sub
and
jmp
push
and
cmp
repz
and
or
aaa
inc
out
mov
test
insl
cmp
orb
inc
pop
inc
mov
shll
xor
jl
pop
mov
subb
inc
cmp
xor
lea
pushf
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
dec
or
and
adc
lret
mov
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
aaa
inc
shr
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
lcall
lds
mov
cmpsb
lock
mov
popa
sar
mov
xor
jg
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
iret
int3
jbe
inc
add
int3
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
test
pop
mov
jne
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
adc
xor
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
xchg
jge
pop
ficomps
frstor
xor
or
adcb
add
shlb
pusha
mov
xlat
add
inc
je
inc
lar
inc
inc
push
dec
addr16
pop
cli
push
sti
jg
pop
dec
dec
inc
push
dec
inc
aaa
xor
jg
push
lret
mov
mov
call
push
inc
dec
inc
jo
inc
popa
push
or
in
outsb
jbe
imul
inc
sbb
loopne
lds
dec
insb
imul
dec
push
mov
pusha
cmp
outsb
push
loope
andl
inc
dec
push
dec
rcrb
push
jo
jb
inc
add
push
inc
inc
inc
test
out
dec
inc
gs
add
and
gs
mov
fmuls
arpl
mov
adcl
jae
outsl
test
fcomp
push
dec
pop
mov
cmp
xchg
xchg
xchg
add
xorb
xor
lods
cmpsb
das
fmuls
inc
push
das
rolb
das
rclb
xchg
aas
dec
sbb
adc
dec
inc
dec
outsl
daa
sbb
daa
daa
dec
jae
imul
mov
inc
inc
inc
jg
inc
jns
lcall
push
rcl
lods
rol
push
cmp
xchg
jb
jns
inc
or
bound
sub
push
dec
in
inc
or
sbb
out
dec
push
dec
dec
fcomps
xchg
lds
jae
jbe
dec
pop
dec
dec
xor
mov
xor
or
cmpsb
dec
daa
sub
cmp
fisttpl
jbe
hlt
jne
arpl
outsl
or
les
dec
pop
xlat
push
sub
push
adc
add
sbb
inc
xchg
push
jbe
fidivl
imul
pop
pop
mov
mov
or
xorb
push
mov
imull
or
jg
notl
jo
cmp
mov
push
outsl
push
jb
add
adc
mov
das
push
adc
mov
push
xorl
push
dec
adc
push
mov
and
gs
and
repnz
insl
shll
outsl
push
inc
arpl
push
lods
fcmovb
push
push
cmpsl
lea
mov
adc
pop
jg
adc
test
xchg
add
mov
pop
xchg
inc
andb
mov
pusha
and
jno
stos
test
cmpsl
outsl
outsl
mov
mov
ja
fs
pop
ja
mov
or
ja
sbb
mov
arpl
pop
pop
cmp
test
pop
push
stc
clc
rorb
lahf
icebp
cmpsb
roll
scas
std
stos
insb
xor
call
xlat
and
pop
push
test
dec
lahf
add
leave
add
mov
sub
cmp
and
push
lds
add
pop
adc
mov
push
adc
push
cmp
out
xchg
stos
push
test
push
xchg
dec
xchg
daa
push
dec
out
push
outsb
sbb
jnp
xor
aam
mov
add
push
dec
push
pop
push
jne
xchg
das
les
outsl
loopne
addb
call
dec
outsl
addr16
push
or
cmpsb
iret
inc
dec
fistl
pop
mov
inc
and
das
xlat
out
js
mov
test
sahf
out
sahf
push
push
mov
sbb
dec
repz
lock
movsb
cli
ds
repz
les
inc
jns
xor
daa
jl
add
lret
inc
ljmp
add
daa
sti
sub
push
inc
addb
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
cmpsb
test
mov
mov
or
or
out
and
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
incl
xchg
sbb
push
sub
insb
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fistl
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ljmp
xchg
ja
int3
add
mov
das
es
lds
or
sub
pushl
ret
shlb
sbb
ret
es
pushf
mov
decl
ljmp
test
ss
jmp
addr16
jb
push
hlt
orb
adc
mov
ljmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
call
or
mov
dec
ficompl
int
mov
mul
decl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
incl
imul
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
pushl
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
jmp
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
and
mov
or
sbb
xchg
add
mov
subl
adc
in
jp
mov
jne
aam
add
mov
imul
dec
je
push
insb
imul
sub
filds
mov
cvtps2pd
je
jns
arpl
arpl
add
mov
pusha
jnp
insb
jns
inc
jne
outsl
insl
mov
xchg
pop
mov
fildl
xlat
inc
adc
jge
sbb
add
or
jmp
adc
xchg
or
inc
insl
bound
adc
or
inc
inc
inc
xchg
push
dec
orl
shrl
inc
jno
xor
pop
inc
mov
mov
xor
aaa
cmp
popa
arpl
cmp
arpl
or
mov
mov
sub
xor
xor
xor
mov
push
inc
jbe
pop
sbb
fs
icebp
xor
inc
insb
dec
add
rolb
or
ror
inc
dec
push
push
cmpsb
mov
sub
sub
sub
hlt
mov
test
jbe
arpl
pop
lods
mov
popl
xchg
cmp
jle
jns
push
das
cmp
sub
sbb
push
addl
add
xchg
insb
popa
jns
test
vxorps
adc
or
aaa
je
lock
inc
insb
aaa
aas
inc
push
or
mov
ljmp
jg
and
jae
sub
push
popf
int
jbe
stos
fistps
inc
aas
fldcw
mov
inc
in
int
or
sbb
inc
pop
push
mov
jae
int3
out
std
jo
inc
inc
add
ds
mov
xor
pop
mov
dec
dec
lea
adc
cmpsb
mov
push
cmp
outsb
jne
add
push
dec
jge
in
pop
ja
xor
xor
or
add
addr16
or
into
pop
jo
and
push
cmp
mov
aaa
xor
jmp
cltd
dec
out
imul
add
sub
add
outsl
pop
sbb
mov
aam
dec
xor
fsubrs
dec
jmp
pop
adc
pop
mov
or
sbb
lock
inc
test
test
dec
popa
jo
sub
pusha
lahf
aas
fiaddl
outsl
test
and
sub
xchg
mov
in
pop
dec
push
sbb
mov
mov
arpl
inc
dec
push
cmp
push
jae
mov
jo,pn
push
test
lahf
sbb
push
outsl
insb
jns
push
add
shrl
inc
pusha
push
popa
jb
inc
dec
pop
push
addr16
addb
adc
call
movhps
push
bound
hlt
dec
cmp
mov
pop
adcl
dec
xor
adc
push
popf
xor
adc
xor
push
sub
aaa
inc
pop
addl
pop
cwtl
adcb
shl
jno
xor
testb
or
mov
test
aas
aad
cmc
push
sbb
pop
aaa
aam
in
add
push
aam
push
loop
roll
jnp
aaa
push
outsb
cwtl
add
les
lds
inc
push
daa
aas
pop
inc
and
add
addb
nop
push
addl
add
add
add
inc
dec
and
inc
stos
add
jb
mov
mov
mov
int
mov
adc
add
add
xchg
add
adc
cld
and
push
test
and
cs
cmpsb
dec
shrd
addr16
fsubs
pop
lea
movq
stc
repnz
mov
out
ud0
jmp
bnd
push
pusha
ljmp
lret
cli
push
sar
push
cld
push
imul
fisttpl
push
inc
es
add
dec
loopne
mov
std
add
and
add
sbb
insb
daa
aam
cmp
and
adc
add
and
add
add
mov
mov
sbb
add
xor
jnp
and
push
test
mov
mov
mov
pop
subb
or
imul
test
pusha
push
add
pop
add
loopne
add
jge,pn
and
clc
dec
enter
lods
add
jb,pn
add
and
cmpl
cs
inc
pop
lock
mov
or
ja
xchg
add
sahf
jae
arpl
xlat
cmpsl
in
add
sahf
add
jb
iret
jnp
or
sbb
cmp
inc
xlat
inc
pop
inc
cmp
sbb
mov
dec
jmp
jno
adc
pop
mov
rorb
shrb
leave
adc
xor
or
cltd
clc
xchg
mov
sbb
lret
cmpsl
nop
lea
cmc
mov
ret
mov
jbe
pop
aaa
cltd
les
push
sbb
jo
leave
adc
repz
jno
int3
fucomi
gs
xchg
xchg
jno
pop
ja
jne
jmp
mov
lahf
and
cmp
or
call
and
dec
cmp
dec
int3
loope
and
je
inc
mov
or
mov
push
in
adc
adc
pop
call
shrb
in
or
rcrb
aaa
inc
push
cmpsb
or
mov
sub
xor
mov
pusha
pop
cmpsl
xchg
inc
sbb
sub
push
mov
sbb
push
movzbl
or
mov
mov
nop
fadds
mov
or
lret
xlat
les
adc
imul
push
mov
push
cmp
jbe
mov
add
pop
sbb
fstl
push
sub
pop
popl
ja
inc
mov
ds
xor
sub
adc
ret
push
adc
push
into
scas
and
mov
mov
loopne
call
sbbb
push
add
outsb
iret
and
sub
mov
xchg
pushf
and
in
adc
clc
aad
or
jmp
mov
push
inc
imul
add
adc
or
insb
sub
sti
addb
in
inc
xor
and
outsl
add
ss
jecxz
mov
push
inc
adc
daa
insb
cmp
js
test
sub
mov
movsl
lods
cmpsb
mov
push
jl
hlt
cld
add
in
sub
test
les
out
sbb
sub
adc
push
rol
fs
popa
push
or
rcrl
in
push
leave
push
inc
xchg
lcall
cmp
movsb
xor
pop
add
movsl
ja
mov
push
sarw
cmpsl
pop
mov
adc
lock
sahf
add
jbe
je
pop
push
ret
mov
rorb
xor
nop
sbb
push
test
shr
lods
and
sub
and
sbb
push
dec
or
leave
adc
adc
inc
aas
mov
cmp
mov
push
jecxz
call
pop
inc
test
movb
mov
in
dec
adc
add
push
mov
fwait
dec
ret
mov
stos
insb
jmp
mov
gs
loope
subl
push
rol
push
inc
mov
in
add
and
bound
sbb
scas
lea
add
dec
lock
or
mov
adc
add
ficompl
mov
xlat
hlt
or
mov
jp
sbb
cmpsl
sbb
pop
xchg
aam
incl
int
adc
mov
in
push
sub
jae
aas
adc
xchg
popf
shl
lods
fcoml
and
add
scas
loop
addb
enter
dec
pushf
push
or
je
call
rcll
inc
push
push
insb
fcoml
add
cmp
sub
call
lahf
push
mov
imul
add
jno
and
out
fcoms
add
mov
add
fwait
sbb
sbb
sbb
jp
setge
push
lea
loopne
stc
push
mov
jne
aaa
pop
jp
push
or
inc
or
sahf
dec
cld
pop
lds
pop
xchg
and
pop
xchg
sbb
test
test
mov
mov
or
sub
jo
call
jnp
mov
sbbl
lock
jl
subl
fidivl
ret
rcll
push
je
mov
call
add
adc
jl
push
xchg
fdivs
test
sbb
mov
scas
add
add
or
push
test
jae
lret
adc
js
test
sub
gs
sbb
cmp
or
mov
adc
jle
in
cmc
cmp
std
or
call
jne
xchg
sbb
lds
mov
mov
lods
xchg
xor
sbb
popf
inc
add
cwtl
lcall
hlt
jmp
push
xorb
add
push
enter
repz
lock
pop
stos
imul
movsl
dec
rolb
and
call
mov
mov
push
fdivrl
lods
or
ja
pop
or
xchg
xchg
sbb
sbb
mov
inc
into
pop
in
dec
push
inc
ficompl
mov
lds
cmpsb
test
add
add
inc
pop
jnp
mov
cs
mov
in
sbb
cs
popf
out
mov
shl
push
and
aad
dec
scas
popf
xchg
push
inc
cld
rol
hlt
push
xor
clc
sbb
in
cmpsl
dec
jb
lea
xor
or
add
ret
sub
lcall
cli
cmp
push
jecxz
inc
movzbl
mov
testl
inc
les
add
pop
ret
rorl
sarb
pop
lds
and
mov
sub
mov
movsl
movsl
dec
fdivrs
gs
dec
cmp
movsl
add
mov
bound
or
mov
xchg
dec
push
hlt
push
adc
ret
xchg
cld
push
jns
fists
movsl
push
adc
pop
loop
and
or
jo
and
loopne
and
push
sbb
ds
lret
cmc
lock
ret
adc
xchg
and
lcall
push
mov
xor
ds
loopne
ficomps
push
push
sbb
sbb
sbb
push
jnp
pusha
loop
fdivr
fists
imul
sub
movsb
loope
push
push
dec
fdiv
jno
dec
nop
and
loopne
cmp
pusha
mov
int3
call
push
push
pop
mov
cltd
mov
cmp
dec
insb
dec
scas
addr16
jnp
decl
andb
adcl
stc
subb
and
mov
fcompl
jb
call
dec
les
aas
bound
inc
cmp
cmp
xchg
test
in
inc
add
dec
push
adc
inc
jbe
xor
add
add
mov
mov
lea
mov
fisubs
shlb
fildl
or
cmp
xchg
loop
ljmp
mulb
ss
cmp
cmp
in
jl
fdivrp
xor
fdivr
mov
pop
loop
ret
pop
push
sub
es
loopne
addr16
decb
mov
xchg
psubsw
push
int3
push
repnz
ds
addb
xor
call
addr16
mov
int3
or
sub
adc
and
and
or
dec
sbb
lock
adc
pop
mov
pop
movsb
in
pop
xchg
jns
js
enter
aaa
sbb
sti
and
rep
push
xor
jns
adc
jnp
and
int
je
ss
pop
push
mov
sub
nop
aas
mov
or
adc
cmpsb
addb
cmp
jne
sub
fidivrs
addb
cmpsl
dec
mov
scas
rep
push
pop
lahf
mov
or
aad
shlb
xor
mov
xchg
inc
rcrb
insb
mov
prefetcht2
dec
outsl
push
adc
cmp
je
ljmp
ljmp
push
or
inc
adc
mov
lock
adc
je
mov
cmp
scas
sbb
sub
insl
mov
lret
mov
pop
lret
aam
ror
push
aaa
inc
sub
mov
jb
adc
xchg
or
data16
dec
mov
push
imul
into
rcl
mov
xor
fiaddl
mov
xchg
into
sahf
lret
push
loopne
mov
pop
test
inc
jp
and
xchg
scas
ss
aas
js
mov
out
lret
mov
std
sub
lcall
enter
push
rclb
lret
dec
add
push
add
xchg
testb
jo
dec
adc
pop
push
or
push
push
sbb
push
and
xchg
sbb
adc
add
adc
and
cmp
pusha
hlt
push
cltd
jle
jmp
aad
jno
adc
dec
pushl
push
adc
push
inc
gs
xor
in
in
mov
add
and
in
inc
lock
jmp
inc
inc
mov
pop
dec
int3
cld
jne
sub
push
stc
divl
cmp
jl
loope
or
nop
dec
in
sbb
xchg
mov
loopne
ds
enter
and
mov
jno
sbb
dec
lds
jbe
insb
loope
mov
push
leave
sub
mov
fs
sbb
or
push
push
fsub
adc
or
mov
cmp
mov
mov
cltd
je
inc
mov
push
mov
mov
pop
and
sbb
mov
je
in
in
in
cmp
mov
xchg
mov
orb
mov
fcomps
orl
sub
and
mov
imul
es
mulb
test
fistpll
push
fistps
mov
scas
aam
lret
adc
mov
jne
sbb
jne
lods
or
cmp
faddp
cmp
inc
xor
mov
pusha
mov
cmp
dec
popf
mov
xor
loopne
xor
xchg
popa
xchg
cmpsb
adc
jmp
or
fsubrs
rcrb
data16
or
sbbl
sarb
or
or
sbb
pop
pushf
enter
test
aad
mov
dec
in
lods
dec
xlat
push
push
mov
jecxz
mov
sub
push
jg
sbbb
lea
jb
loop
pop
int
cwtl
add
cmp
adc
or
and
add
int3
or
add
in
add
nop
adc
push
jne
jl
push
iret
clc
pop
push
test
or
jb
add
mov
sbb
xor
lods
sahf
loopne
inc
pop
in
jne
adcb
add
sti
sbb
scas
jns
lock
daa
enter
icebp
aam
jnp
or
gs
ljmp
push
add
add
push
add
xor
enter
adc
add
mov
mov
push
mov
clc
or
add
dec
fbstp
inc
inc
and
pop
cmp
sbb
jg
ja
and
je
or
or
je
mov
into
test
lock
or
outsb
bound
cmpsb
pop
test
inc
shrb
sti
adc
jmp
push
fs
ss
add
call
mov
adc
xor
filds
cmc
negb
sub
xor
lcall
loopne
rorl
stc
cltd
insb
cld
adc
test
push
and
or
gs
sub
mov
add
push
rcrb
les
jns
aam
stos
hlt
lods
jbe
xor
bnd
jne
xor
neg
cli
sbb
outsb
outsb
sbb
inc
adc
add
jns
mov
cmpl
mov
cmp
push
fdivrs
cmp
adc
push
mov
lods
and
fildl
mov
adc
xchg
add
repnz
test
adc
dec
inc
lahf
insl
mov
push
or
mov
pop
hlt
or
shr
pushl
or
cmp
pop
mov
xor
stos
std
std
push
sbb
xchg
nop
cld
cmp
cli
sbb
rcl
out
inc
add
cmp
call
sub
push
or
enter
mov
or
push
push
add
in
testb
adc
cmp
mov
jo
xchg
pop
push
lock
sub
lret
and
pop
dec
adc
std
out
pop
adcb
push
ds
sbb
lahf
cmp
out
jo
test
dec
and
cmp
imul
test
add
mov
push
dec
add
mov
in
test
fs
pop
sub
and
jl
mov
push
enter
cmp
jmp
mov
test
cmp
sub
add
pop
add
push
add
fmulp
mov
add
add
orb
jmp
les
xor
inc
jge
lods
mov
popf
sub
lahf
jae
dec
int3
add
push
push
lods
or
sbb
test
lea
sub
push
add
adc
stos
daa
jl
in
idivl
cmp
pop
pop
cmp
shll
rclb
sbb
mov
aaa
dec
mov
mov
push
cwtl
inc
jecxz
push
int
lods
sarl
call
push
inc
add
xchg
in
jbe
ret
bound
xchg
lea
decb
pop
jbe
cmp
xchg
sbb
sbb
lcall
dec
mov
push
or
enter
sub
ret
jne
xor
xchg
in
std
jmp
and
xor
pop
call
inc
jmp
in
imul
or
jle
or
mov
sahf
push
mov
mov
shlb
into
sarb
sbb
jl
cmpsb
adc
inc
mov
ret
sarb
cmp
fs
pop
add
sub
push
mov
or
or
call
or
rorb
test
dec
nop
xorb
les
rolw
push
lcall
andb
dec
sbb
cmp
jl
pop
lods
sub
sbb
jmp
or
rcr
movsb
cmp
or
andb
push
or
or
mov
sbbb
mov
jle
inc
or
mov
push
push
adcl
mov
inc
lds
pop
pop
addb
add
inc
and
call
out
pop
push
aaa
mov
loope
xchg
ljmp
sbb
push
call
aas
loopne
out
mov
cmp
shr
pushf
ss
mov
test
lcall
imul
mov
ja
mov
mov
negl
mov
lea
push
fs
adc
fadds
fists
fisubs
push
fucomip
cmp
je
cmp
jbe
pop
add
cmp
inc
adc
subb
or
nop
clc
push
and
std
xor
mov
xor
or
sbb
dec
sarb
adc
push
mov
cli
xor
outsb
loopne
jo
fadd
pop
or
and
mov
test
inc
jmp
pop
je
imul
loope
scas
push
and
popaw
js
popf
test
or
mov
mov
or
paddb
fldl
pop
fwait
jmp
push
jp
pop
and
icebp
jecxz
fsubr
jo
push
sbb
loope
popa
cltd
adc
pop
mov
pop
or
into
call
or
push
lods
sbb
inc
adc
adcl
loopne
scas
es
sti
orb
je
js
pop
rorl
dec
jle
test
sub
dec
push
shl
xchg
dec
mov
push
loop
addl
xchg
push
sub
psubb
xor
push
lea
dec
add
and
pop
xorb
ret
enter
jne
dec
test
xor
int
push
xor
push
push
cmpsb
aam
lcall
inc
das
outsb
cmp
cwtl
popa
fsubrl
call
mov
push
popa
je
int
pusha
pop
push
faddl
push
pop
sbb
lock
das
push
pop
scas
or
je
jae
js
push
sub
dec
fsubrl
lret
fdivr
adc
test
lcall
or
push
pop
dec
mov
sub
aam
stc
push
mov
mov
movsl
and
rorl
dec
imul
mulb
mov
jmp
rcrb
lock
pop
xchg
mov
ret
jmp
fs
gs
push
mov
sti
jne
sub
lock
dec
push
hlt
ret
mov
mov
jns
mov
ss
clc
and
cmp
mov
sbb
push
mov
xchg
add
mov
mov
jmp
sub
adc
inc
roll
add
inc
sbb
sub
loopne
icebp
mov
mov
or
push
mov
sbbb
loop
or
push
pop
mov
aad
lock
iret
call
push
fdivrl
add
mov
push
imul
pop
addr16
sbb
fisubl
mov
push
int3
jae
in
sbb
jne
into
cmp
sub
mov
jmp
ss
cmp
mov
es
pop
cmp
or
loopne
push
out
je
int3
jecxz
decb
or
jns
outsl
orl
pop
icebp
aaa
jmp
nop
xor
push
sahf
jae
pop
push
add
das
outsb
icebp
call
sarb
mov
xchg
scas
sub
and
push
sub
lea
push
lea
jmp
je
dec
add
movsb
sbb
mov
sub
mov
lcall
dec
jl
js
notb
enter
out
mov
or
fxtract
jecxz
adc
jmp
pop
xorb
or
inc
or
mov
mov
sbb
xchg
fiaddl
xchg
add
add
ja
loop
das
shlb
cmp
xchg
jne
jnp
jp
add
push
call
in
movsb
jmp
sbb
pop
in
js
sbb
insb
jns
and
insb
je
negb
mov
sbbl
cmp
xchg
and
int3
jbe
push
add
or
mov
dec
popa
rcl
push
and
add
call
mov
call
out
push
push
cmp
push
sbb
test
fdivl
or
mov
mov
sahf
pop
cwtl
or
popf
pushf
or
cmp
test
xor
or
test
stos
push
inc
add
add
loopne
fs
inc
mov
sub
mov
inc
mov
clc
adc
lock
push
dec
je
sub
or
mov
fsubrs
xor
lods
sbb
mov
sbb
lea
adc
add
xchg
nop
push
incl
mov
cmp
fadds
dec
jne
movzbl
add
stos
adcl
add
mov
test
ret
inc
pop
lea
movsb
cmp
into
ja
xchg
push
sub
xorb
jmp
loope
lahf
sub
je
mov
push
cli
sub
fcmovnbe
in
add
xor
or
and
ja
in
out
aas
sbb
mov
lea
inc
xor
inc
pop
mov
dec
arpl
inc
ss
push
or
add
xor
ret
push
inc
cltd
cli
std
in
and
pop
mov
movsb
test
mov
sub
test
and
dec
xor
popa
es
stos
and
pop
das
add
test
xchg
fisubs
dec
dec
push
jo
rorb
inc
cmp
and
je
clc
cmp
cmp
ss
dec
mov
aas
dec
or
xor
in
dec
aas
enter
add
sub
inc
push
aas
mov
xor
xchg
adc
pop
roll
push
sub
push
lea
push
stos
or
add
or
push
add
xor
adc
adcb
mov
push
pop
sbb
mov
xor
push
out
xor
push
orb
push
pushf
jno
and
mov
add
push
add
add
sub
call
addl
jecxz
push
and
call
dec
dec
addl
push
or
and
add
mov
push
pop
inc
cmp
rclb
cmp
fstpt
movsb
pop
popa
pop
jl
xchg
pusha
nop
dec
xor
cs
icebp
sbb
add
cli
or
push
sahf
and
jp
jle
into
ds
mov
callw
pop
call
xor
jmp
cmp
fwait
out
pop
movsl
dec
aam
inc
adc
cmp
out
mov
dec
pop
js
call
lods
mov
ror
pop
xchg
sbb
jmp
pop
leave
ret
xchg
add
cmp
or
adc
add
stos
jno
ja
call
enter
scas
dec
into
dec
fwait
pop
jmp
sti
push
or
cld
xchg
pushl
cmp
jmp
or
or
rcrb
push
xchg
inc
cmp
into
pop
xchg
sub
loopne
pop
push
xor
cmp
into
cmp
xor
push
lahf
insl
push
dec
dec
jmp
sub
inc
jmp
add
and
mov
mov
dec
pusha
push
cltd
push
jmp
xchg
sbb
stos
or
insb
or
xchg
pusha
xor
adc
rcll
lock
dec
and
jo
mov
push
add
filds
out
cmp
call
and
and
mov
incb
cmp
push
push
es
cmpsb
add
rcr
xor
aad
inc
cmpsl
scas
fs
into
rcrb
ja
shll
inc
inc
lcall
shlb
push
es
adc
mov
movb
pop
fistps
outsb
iret
dec
push
movsb
ret
clc
push
or
in
ficomps
ret
sub
mov
sub
xchg
int3
xchg
mov
sbb
js
xor
and
jb
jbe
inc
push
imull
push
dec
xor
enter
xchg
inc
sub
jp
mov
adc
add
pop
cmp
push
xchg
pop
aaa
xchg
je
mov
xorb
pop
xchg
jmp
add
adc
test
in
xor
nop
pusha
inc
dec
sbb
es
push
push
mov
pop
rolb
call
rcrl
mov
cs
pop
aaa
and
pusha
inc
data16
and
das
movl
push
movl
and
adc
pop
orb
pusha
inc
jbe
lret
cmp
mov
lods
lret
call
inc
or
addr16
xchg
inc
sbb
push
inc
dec
addr16
inc
cs
pusha
nop
push
in
nop
je
and
les
dec
add
addr16
repz
xchg
xor
sub
repz
and
adc
add
sbb
addr16
or
push
lds
addr16
lcall
adc
mov
inc
je
fistpl
pop
nop
add
and
dec
in
aad
addr16
mov
push
insl
adc
iret
repz
mov
into
repz
jge
or
addr16
cld
or
mov
popf
cmpsl
push
adc
addr16
mov
pop
les
sub
out
mov
pop
lahf
out
sub
dec
and
dec
fnstcw
loop
or
insb
and
aam
ja
adc
dec
pushf
push
pop
jmp
xor
xor
xor
xor
sub
add
pmulhw
or
lahf
ret
lea
out
xor
adc
add
pop
add
or
add
pop
repnz
add
add
and
sub
jo,pt
cmp
je
xchg
add
enter
mov
mov
push
push
push
gs
lcall
or
in
or
xchg
push
repnz
cld
add
or
enter
or
imul
or
sbb
or
or
push
or
addr16
push
movzwl
pop
xor
adc
pop
fidivl
jb
adc
scas
in
mov
int
inc
push
inc
adc
adc
test
adc
in
in
adc
sub
push
push
inc
jae
inc
sahf
pop
pop
and
aad
mov
sbb
mov
cmp
sbb
sbb
enter
mov
pop
enter
sbb
je
bound
jns
sbb
jo
push
repnz
pop
push
in
push
repnz
inc
negb
pop
pusha
push
incl
jne
add
add
sub
sti
pop
fcomps
add
movl
add
cltd
inc
xchg
and
lods
pop
lods
stc
cmp
push
in
push
in
imul
fistl
sub
rcl
ret
out
xchg
mul
xor
mov
xchg
out
out
in
pop
mov
sub
call
and
adcb
pop
leave
jnp
js
and
mov
ljmp
add
lcall
movsb
sub
or
in
in
xchg
sub
push
aad
in
cmp
in
sahf
xchg
mov
out
xchg
xchg
or
pusha
out
or
je
in
xorl
xchg
dec
jb,pn
outsl
icebp
cmp
das
jnp
inc
scas
xor
adc
repz
cmpsb
repnz
std
hlt
hlt
imul
std
cmc
repnz
cmp
mov
mov
sbb
or
push
pop
gs
clc
clc
clc
leave
xor
or
repnz
cli
add
cmp
sti
sti
fdivrp
push
ss
cld
cld
je
cld
push
push
aaa
and
jne
mov
xor
sbb
insl
fs
sahf
xor
ret
sbb
sub
jb
lahf
shll
aam
mov
xchg
or
fwait
or
jecxz
jecxz
push
shll
xchg
xor
sub
in
addl
sbbb
adc
inc
or
out
jb
inc
out
scas
call
cltd
sti
adc
inc
mov
cltd
or
out
jmp
xchg
daa
dec
pop
push
in
cltd
or
daa
or
cli
aad
imul
in
aad
mov
andb
cli
or
aas
repz
add
mov
leave
and
stc
xchg
cmpsb
jb
imul
mov
xchg
clc
in
repnz
cmp
mov
xor
sti
inc
scas
ss
sti
sti
xchg
or
scas
xchg
push
repnz
jmp
mov
cmp
scas
mov
mov
jl
daa
add
sub
aad
imul
shl
add
loope
clc
andb
and
imul
out
pop
push
xchg
push
fdiv
out
mov
negl
lret
imul
ljmp
push
jmp
pop
repnz
notl
mull
hlt
imul
out
push
inc
test
repnz
notb
mov
insl
repnz
repnz
inc
repz
pop
push
loope
testb
sub
test
mov
out
imul
iret
in
mov
dec
loope
cmp
jb
cmp
rcrl
jb
or
and
sbb
cli
hlt
subb
or
xchg
test
add
push
stos
into
jo
adc
push
ret
clc
sti
mov
loope
loope
scas
xchg
stos
jp
movnti
cmp
mov
in
pop
lret
or
pop
repz
setb
aam
mov
lcall
jmp
pop
mov
pop
pop
dec
repz
in
xchg
adc
pop
mov
pop
pop
repnz
repnz
add
or
jb
scas
dec
icebp
icebp
das
xchg
pop
inc
jb
sub
ds
mov
pop
repnz
dec
push
cmc
cmc
mov
icebp
mov
andb
icebp
or
jne
stc
push
and
test
dec
icebp
xor
andb
or
out
lock
mov
xor
ret
add
jmp
repnz
push
ret
fwait
push
sub
ffreep
push
inc
fcmovbe
dec
push
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
test
inc
add
jne
stc
mov
fld
xor
jmp
xchg
pop
ljmp
dec
xchg
je
lahf
jne
mov
fucomp
addr16
add
or
push
nop
push
jns
xor
cmpsl
xor
or
push
add
dec
adcl
mov
jl
push
jecxz
repz
mov
sahf
jae
insb
sbb
push
push
aad
jns
imul
dec
xchg
gs
dec
outsb
and
mov
icebp
sub
shl
rclb
cmp
mov
sbb
jle
sbb
lea
mov
cmp
and
dec
dec
or
test
cmp
jmp
dec
push
stc
sbb
shlb
adc
jle
xchg
push
xchg
dec
jmp
and
fists
push
adcb
inc
and
push
mov
sbb
or
push
and
ficoms
or
and
fwait
shll
icebp
adc
iret
xlat
pop
mov
movsl
insb
test
pusha
jl
inc
xchg
push
push
adc
adc
hlt
ret
xor
aam
in
jmp
sbb
pop
pop
and
enter
push
and
pop
leave
inc
ds
jmp
jmp
ret
cmp
sub
inc
adc
adc
and
jno
dec
cs
mov
jb
inc
jno
mov
and
cli
adc
jmp
cwtl
bound
pop
xor
stos
sub
loop
adc
or
adc
hlt
psubsw
xor
push
inc
sub
push
dec
push
cmp
jb
cmp
mov
add
adc
jns
xor
jg
call
mov
or
enter
add
cwtl
test
xchg
add
inc
add
sub
or
loopne
xor
arpl
arpl
push
xorb
dec
xor
ret
xor
inc
push
mov
fstl
mov
aaa
xchg
and
inc
adc
pop
inc
and
rorl
pusha
push
dec
nop
in
or
mov
sbb
int3
ret
xor
inc
xor
dec
nop
xor
or
xor
in
jns
push
in
inc
rcrb
add
inc
push
jl
cmp
ds
rcll
xor
add
or
movsl
xchg
mov
adc
mov
inc
mov
or
lea
nop
push
jg
popf
push
inc
sub
push
xchg
and
inc
xlat
pop
xchg
pop
inc
je
or
sbb
or
stc
leave
mov
push
xor
push
rcll
pop
push
rcl
add
mov
pop
mov
inc
inc
aaa
fcomps
movsb
sti
or
push
dec
inc
leave
je
mov
add
lret
pop
repnz
rcll
jmp
fwait
push
cmp
adc
add
nop
cli
pop
in
mov
and
mov
imul
pushf
dec
enter
es
push
rcl
jns
sbb
nop
push
dec
push
xchg
or
cmp
lds
sbb
adc
cmpsb
mov
stos
dec
nop
into
jmp
nop
outsb
imul
inc
push
cmp
jb
jb
sub
sbb
cmp
movsb
in
xor
push
out
lcall
and
mov
in
pop
mov
fwait
repz
loop
movsb
mov
hlt
jbe
sbb
leave
addb
pop
push
inc
es
pop
lcall
jo
pop
fbstp
pop
inc
and
pushf
or
test
inc
jo
cmp
aam
xchg
sbb
movsl
cmp
mov
cmp
cmc
add
xor
jmp
xor
jb
les
aam
and
add
leave
adc
rcrb
jmp
adc
jl
rcrb
push
push
stc
aaa
sbb
xchg
push
loopne
test
sbb
push
inc
cmp
cmp
jno
or
ds
add
leave
les
jmp
push
lods
imul
or
inc
mov
inc
and
test
adc
cmp
xor
mov
push
stos
imul
rcrb
mov
cmp
sbb
lods
inc
es
xor
inc
dec
mov
arpl
movsb
mov
fs
out
xor
mov
jl
shlb
ret
lcall
sbb
mov
mov
xor
clc
mov
pop
dec
inc
or
rorb
or
and
pop
sbb
or
or
arpl
push
sub
rcll
sub
or
nop
jbe
dec
or
hlt
jle
sub
add
or
inc
xor
cmp
cwtl
add
jge
jbe
dec
pop
mov
or
mov
xor
add
xor
adc
jnp
adc
jle
movb
aaa
pushf
adc
inc
push
stc
ss
aam
and
aaa
push
lock
daa
sub
jmp
mov
bound
rolb
mov
sub
xchg
cmpl
sub
push
xor
sub
lea
shr
data16
data16
cs
pop
or
mov
test
nop
out
or
sub
add
negb
dec
dec
push
bound
rcll
or
cmp
scas
stc
aaa
popa
aas
ss
xchg
xchg
xor
xchg
and
je
mov
add
mov
inc
loopne
movsb
jnp
mov
mov
mov
sbb
mov
add
dec
mov
vorps
xchg
nop
outsb
dec
mov
xor
or
xor
scas
jb
cmp
mov
and
xchg
out
adcb
adcb
dec
dec
or
or
mov
ja
xor
jl
inc
sbb
adcb
dec
dec
xor
loope
xchg
shl
mov
inc
push
shrl
xchg
dec
inc
test
push
test
and
nop
dec
push
aad
rcl
or
jo
push
push
test
shlb
je
xchg
mov
shrl
lahf
call
cmpsb
mov
xchg
push
test
nop
test
inc
inc
sahf
dec
je
enter
sbb
mov
lods
test
insb
in
loope
into
xchg
mov
lcall
aad
xor
mov
lcall
add
mov
inc
pop
xchg
test
lcall
test
push
shrl
push
add
or
test
fs
call
rcll
leave
loopne
mov
push
test
enter
nop
test
push
stos
imul
push
test
nop
test
xlat
ss
sbb
fs
push
mov
jmp
adc
rcrb
lods
outsl
sarl
test
jo
inc
es
xor
jno
stos
imul
lcall
xchg
jo
mov
test
dec
sbb
fcomps
jb
dec
test
push
cmp
push
xor
pop
outsb
subl
mov
cmpsb
push
cmp
call
adc
xor
xor
mov
imul
cs
jo
jno
sbb
xor
xor
push
mov
pop
movsl
test
fcomp
sub
test
call
pop
pop
test
daa
rcl
jo
xor
ss
nop
push
lea
enter
test
imul
add
xchg
stos
imul
and
aam
add
aad
popa
cs
or
adc
mov
jbe
shrl
shrl
insl
sbb
dec
add
xor
cld
aaa
push
rcll
and
sbb
arpl
inc
aaa
rclb
mov
pop
test
test
imul
cmpsb
mov
dec
lcall
test
call
test
push
push
rcl
mov
and
cli
test
or
int
sbb
test
sbb
pop
lcall
cwtl
add
insb
or
fxch
xchg
or
int
jl
cmp
ss
xchg
ret
add
in
cmp
inc
pop
mov
in
call
ret
or
imul
cmp
shrb
mov
and
xchg
rcrb
mov
orl
mov
aad
je
cs
mov
sti
lret
push
imul
cmpsb
mov
imul
jns
stos
cmp
pop
pop
sbb
xchg
lcall
dec
inc
push
mov
dec
test
imul
cmp
lock
out
dec
push
inc
pop
rclb
xlat
sub
mov
fisubrl
dec
test
scas
imul
imul
rclb
test
jg
test
mov
push
dec
inc
dec
mov
fsubl
xor
xor
xor
xor
xor
pop
dec
movsl
mov
xor
cmp
xchg
dec
lods
test
adc
inc
xchg
pop
dec
push
popa
jo
sbb
imul
xchg
daa
adc
xchg
push
shrl
aas
mov
ds
mov
jge
aaa
imul
mov
aaa
pop
mov
mov
daa
icebp
mov
repz
test
pop
jns
stos
loop
xchg
mov
rcl
or
sub
mov
sahf
cwtl
fwait
test
dec
pop
ret
jbe
loopne
sub
dec
bt
inc
cs
mov
inc
push
cmp
addr16
jbe
lods
ret
jnp
nop
push
mov
jns
nop
test
push
mov
mov
test
push
ja
mov
imul
sub
enter
inc
pop
and
jb
pop
adc
xor
addb
hlt
out
push
filds
sbbb
xchg
nop
ret
jnp
add
xlat
sub
lahf
jae
mov
imul
and
dec
dec
lock
sub
mov
inc
leave
jo
pushf
or
lret
or
pop
lret
scas
push
xchg
enter
jl
lret
lret
lret
sbb
push
sub
xchg
enter
out
push
enter
mov
sub
test
int3
xor
add
dec
dec
cmp
sbb
push
fisubrs
mov
adc
mov
push
jae
rcll
pop
popf
push
pop
in
cmp
or
push
movsl
push
leave
ret
pop
ljmp
mov
js
pop
ljmp
sub
push
sarb
jl
aam
in
push
loopne
or
stc
mov
dec
jmp
es
and
dec
inc
and
pop
sub
test
outsb
xchg
int3
mov
xchg
es
mov
dec
nop
push
cwtl
add
das
mov
shrl
dec
fiaddl
cmp
arpl
out
or
pushf
scas
add
enter
add
jl
movb
ds
stc
push
notb
and
lcall
push
jl
sbb
movsl
push
popa
dec
or
sub
and
dec
push
push
ret
sbb
call
add
jge
push
xchg
fimuls
call
add
jmp
and
inc
add
mov
add
cwtl
add
test
add
in
sub
aam
std
ret
xchg
ret
testb
shrb
and
push
ja
dec
or
mov
dec
dec
mov
inc
shlb
rol
inc
add
inc
sub
add
pusha
push
sub
mov
add
movl
sub
xor
andb
je
nop
and
loopne
addl
es
mov
rcrb
pop
xbegin
cs
call
and
inc
fwait
scas
xchg
fwait
outsb
jno
pop
lahf
pop
dec
call
and
lea
adc
dec
xor
xchg
xchg
xor
andb
dec
inc
es
clts
or
add
mov
inc
outsb
add
xor
dec
xor
xchg
xor
or
call
pushf
iret
xor
inc
xor
nop
xor
dec
xor
dec
inc
xor
and
mov
and
call
and
aaa
xor
daa
xor
das
push
test
push
mov
cwtl
push
ss
outsb
jae
lea
jle
jbe
dec
rcll
adc
add
cmp
jmp
call
movsb
add
incl
xor
cmc
out
jl
je
add
and
and
inc
adc
in
sbb
pop
xchg
cmp
sbb
jmp
popf
or
cmp
ljmp
test
mov
cmp
jmp
pusha
adc
xor
sbb
sbb
push
push
dec
xchg
pop
push
jns
push
out
mov
pop
cmp
xor
in
and
repz
xor
call
adc
enter
aad
outsb
imul
xchg
inc
push
push
lret
mov
andl
je
rolb
inc
pop
cmp
adc
movsb
pop
mov
nop
inc
and
pop
sbb
push
mov
mov
xor
inc
outsl
cmp
push
inc
call
fimull
ss
call
fisttpll
fsubrs
sbb
xor
rolb
jne
test
cmc
xor
movb
insl
int
adc
add
or
mov
repz
jmp
xor
add
inc
adc
inc
jmp
inc
inc
inc
pop
je
or
push
pop
es
mov
inc
inc
test
and
je
add
cmp
or
push
mov
std
mov
fs
stc
add
lock
mov
xorb
cmp
or
je
jg
pop
cmpsb
cmp
and
cmp
leave
andl
fcmovnu
insl
dec
into
call
xor
inc
jmp
push
je
pop
add
sub
and
adc
push
popf
pop
pop
pop
xor
test
xchg
xchg
or
sbb
add
ja
jge,pt
mov
pop
cld
or
add
push
push
adc
pusha
mov
addb
mov
or
lock
rorl
ja
insb
jle
or
xlat
rorb
hlt
mov
inc
shl
ss
jp
pop
jb
cmp
mov
mov
sub
jmp
push
push
or
inc
jecxz
pusha
xor
repz
aam
stc
inc
adc
cmp
stos
add
push
xor
adc
adc
testb
sub
push
sar
inc
push
adc
imul
cmp
jo
xor
lret
sub
hlt
dec
sub
rolb
adc
push
pop
push
out
cmp
pop
cmp
mov
nop
mov
or
and
nop
je
sbb
outsb
cmp
sbb
xor
mov
push
and
sbb
pop
add
test
je
adc
inc
xor
push
add
xchg
xor
nop
mov
ret
roll
sahf
in
pop
xchg
adc
adc
mov
xor
lds
scas
or
dec
pop
add
jp
lock
rcll
dec
lock
adc
scas
loope
es
xchg
pop
add
cltd
add
pop
xor
sub
adc
inc
movsb
or
and
xor
mov
add
aas
pop
test
pop
inc
in
rorb
fadds
mov
imul
call
sbbl
push
push
xlat
cmc
or
inc
mov
adc
and
jp
or
mov
inc
xlat
sbb
dec
sahf
xor
and
lret
nop
mov
loopne
mov
push
sbb
or
les
cltd
inc
mov
shll
xlat
jns
outsl
in
or
push
lea
nop
sub
lret
ja
or
shl
or
je
jge
xchg
insb
xlat
stc
fsubs
jbe
pop
add
pop
and
push
xchg
or
xor
je
and
sbb
inc
dec
pop
add
lea
mov
mov
add
jl
jmp
leave
test
into
xlat
loopne
lods
es
sarl
mov
aaa
rorl
xor
enter
xorb
xor
dec
aas
xchg
inc
dec
inc
out
mov
pop
rcll
dec
pop
and
inc
mov
in
rolb
xlat
jg
add
cmp
sarb
sbb
jg
into
xchg
push
movl
sbbl
imul
movsl
loop
fidivrl
mov
lret
xchg
dec
cmpsl
cmpsl
add
xlat
add
cmovb
xor
fld
aad
mov
stos
pop
or
pusha
push
jge
scas
or
mov
outsb
movsb
mov
call
jns
add
lea
lcall
leave
mov
sub
dec
xorl
dec
push
dec
inc
out
mov
add
mov
shlb
test
mov
movsb
fsubp
sub
mov
jmp
sbb
jns
xlat
pusha
icebp
data16
and
cmp
inc
add
cmp
xchg
push
rcl
rol
or
stos
add
sbb
push
inc
mov
imul
and
dec
cmp
into
bound
ljmp
fbstp
in
xor
and
push
jmp
dec
sahf
pushf
cmp
mov
inc
sbb
lcall
xor
push
push
fdivl
xor
add
or
cwtl
ret
mov
add
loopne
mov
push
add
jbe
sbb
push
inc
stos
sbb
inc
xor
stos
mov
repnz
push
in
clc
add
nop
in
push
inc
repnz
dec
lcall
sbb
ffree
adc
xchg
lea
add
sbb
jecxz
cmpsb
add
fsubrl
sbb
sbb
loope
pop
and
jo
mov
sbb
imul
mov
or
pop
push
pusha
dec
bswap
ret
sbb
dec
inc
inc
inc
dec
add
sbb
mov
pusha
sub
gs
sarb
and
sbb
mov
adc
pop
xchg
adc
push
inc
mov
and
loopne
in
pop
inc
push
shlb
push
jne
xchg
push
andb
and
pop
out
or
addl
lahf
sbb
popf
or
fwait
adc
mov
or
jmp
daa
outsl
and
add
test
jb
in
push
mov
dec
test
mov
add
lea
rcr
or
call
xor
jg
dec
mov
addb
scas
xor
add
rcl
dec
sub
out
xchg
cmp
xchg
dec
imul
call
sbb
nop
mov
add
dec
call
and
aaa
fstps
pop
adc
cmp
pop
and
push
mov
daa
pop
sub
insb
nop
inc
sbb
pop
adc
nop
xchg
fadds
movsb
roll
cmp
xor
lcall
push
je
push
mov
ret
test
jns
mov
mov
adc
pop
out
jge
sbb
add
cltd
sbb
shll
mov
push
out
es
ds
xchg
fldl
adc
xor
pop
cmp
cmp
xor
mov
push
call
add
push
mov
mov
or
daa
sub
pshufw
or
inc
and
xchg
jnp
mov
daa
es
xor
mov
dec
inc
sub
movsl
ret
inc
or
mov
jo
cmp
push
movsl
cmp
adc
pushf
es
imul
cmp
mov
movsl
je
lods
and
movsl
mov
in
adc
lcall
pop
sbb
or
jno
jmp
push
hlt
icebp
repnz
push
je
and
ret
fstps
adc
movl
lret
movsb
rorl
dec
pop
adc
addr16
mov
add
cmp
inc
mov
or
inc
mov
test
or
mov
aam
add
push
add
cli
push
lret
dec
hlt
push
fiadds
inc
inc
testb
push
sbb
stc
mov
enter
stc
add
or
out
pop
or
movsb
inc
inc
movsl
mov
int3
xorl
stc
loopne
mov
add
sbb
adc
push
push
or
lret
pop
pop
or
xchg
clc
and
adc
test
and
add
jo
inc
stc
rcll
mov
mov
inc
out
movsb
int
lods
pop
or
sar
or
stc
jb
inc
cmp
lds
pop
xor
pop
and
inc
stc
pop
and
shrb
add
int
sub
ss
nop
adc
pop
and
jecxz
data16
mov
adc
or
cmp
mov
stc
fadds
loop
and
pushf
push
pop
and
pop
stc
mov
ds
loopne
and
hlt
stc
and
and
push
jp
je
pop
stc
cs
or
ret
pop
or
movsb
cmpb
mov
xchg
aam
xchg
nop
mov
jbe
push
inc
jo
jmp
ljmp
adc
jl
rolb
out
lcall
or
xchg
or
pop
stc
mov
jo
push
stc
pop
and
xor
stc
adc
inc
and
stc
add
and
inc
pop
mov
fmull
lock
mov
outsb
mov
call
stc
mov
jg
cmpsl
sbbb
sbb
fldl
adc
sbb
inc
imul
sbb
mov
faddl
dec
sub
lds
inc
imul
mov
test
or
imulb
stc
iret
lds
xchg
stc
or
push
fs
pushf
sbb
dec
call
mov
stc
mov
pusha
stc
and
lock
push
int
call
pop
or
test
stc
fs
mov
mov
or
in
or
pop
mov
fildl
sub
sbb
scas
xchg
and
xchg
fisubrl
fistpl
dec
and
test
sbb
xchg
or
mov
cmp
cmp
pop
cmp
cmp
sub
adcb
and
pshufw
std
cmp
fstpt
dec
fistpl
mov
xor
pop
fucomi
and
xor
mov
negb
pop
fisttpl
or
xchg
jnp
and
pop
out
mov
in
xchg
or
call
daa
or
les
xchg
test
mov
mull
push
push
push
rorb
scas
fs
enter
pop
dec
cmp
dec
jae
add
in
add
hlt
xchg
rorl
xchg
nop
add
push
jno
pop
cmp
sbb
je
nop
ss
sti
mov
lea
enter
mov
cmp
jae
call
mov
nop
dec
adc
shlb
jno
scas
mov
adc
mov
or
mov
cmp
jp
dec
scas
fcomi
mov
mull
mov
add
andl
pusha
adc
insb
or
pop
jb
add
sbb
shlb
fwait
sbbb
idivl
sbb
sub
add
nop
mov
shlb
mov
xchg
sahf
fwait
sbb
loop
add
push
mov
or
dec
ss
sbb
mov
jmp
fwait
movups
loope
fwait
jmp
xchg
shlb
xchg
adc
fwait
push
fnop
xor
addl
inc
mov
add
xchg
idivl
dec
call
or
loope
pop
and
nopl
mov
nop
jns
xchg
lea
sbb
mov
test
orb
inc
in
es
dec
xlat
inc
adc
jnp
pop
ljmp
ret
xlat
loopne
mov
nop
xlat
cmpsb
js
or
push
adc
push
fcoml
cmp
aas
xlat
sbb
mov
ret
dec
enter
and
dec
xchg
test
pop
les
xlat
add
jl
bound
call
ret
in
outsl
nop
or
adc
dec
xchg
dec
sub
testb
push
mov
rcl
adc
popa
inc
sbb
cmovb
call
je
fnstenv
popa
xlat
mov
cmp
in
stos
sub
sub
cmp
adc
cmp
xor
cmp
aam
xchg
das
mov
or
inc
or
aas
xor
mov
adc
das
shlb
call
lahf
ljmp
sub
or
cld
repnz
add
call
lock
call
cmp
loopne
call
mov
and
dec
call
jl
call
push
call
stc
pop
call
pusha
call
in
xchg
das
push
jne
call
bnd
gs
pop
jl
push
shr
test
jge
sbb
sub
xor
nop
sbb
cwtl
add
in
mov
test
sbb
adc
movsl
ret
les
lods
pop
int3
mov
xchg
xchg
lret
mov
fdivl
pop
sub
push
movsl
pop
call
jb
pop
aam
lock
lret
clc
sbb
lret
test
add
adcb
leave
gs
push
mov
adc
xchg
dec
in
rcrb
stos
and
sub
dec
xchg
sub
xor
in
mov
mov
pop
inc
push
inc
or
inc
dec
cmp
sub
push
adc
jb
pop
pop
or
mov
or
add
jge
adc
aam
jge
int
in
insb
and
or
mov
xor
xor
and
pushf
and
mov
je
sbb
imul
adc
data16
jl
sbb
xor
push
and
and
xchg
xchg
out
cli
cmp
lcall
movsb
sbb
les
out
movsb
pusha
dec
cli
mov
dec
and
or
push
pusha
out
push
popf
mov
out
sbbb
add
adc
push
mov
mov
push
cmpb
add
lds
mov
or
inc
and
adc
add
dec
or
mov
or
mov
mov
dec
xor
xor
mov
push
dec
aam
adc
or
call
nop
outsb
mov
popf
dec
dec
shrl
outsl
inc
popf
sbb
shl
push
popf
dec
fcomps
mov
xchg
xor
xor
enter
mov
adc
and
inc
cld
pop
xor
rcrb
dec
ficompl
call
rolb
pop
sbb
jnp
push
mov
mov
adc
fsubrp
sbbb
sarb
xchg
jp
ret
push
dec
lods
addr16
dec
mov
xchg
out
sbb
push
or
mov
push
adc
nop
mov
in
mov
push
push
mov
nop
inc
mov
pop
and
rcll
inc
xor
sbb
or
andb
sbb
ret
stc
mov
and
jb
mov
push
enter
push
pop
push
or
mov
jno
cwtl
and
rcll
sbb
cs
sbb
shlb
pushf
push
mov
rcll
push
xchg
into
adc
repz
jmp
push
andb
jno
movsb
push
orl
or
cwtl
pusha
jmp
imul
inc
and
test
mov
sub
shlb
mov
inc
mov
sbb
sub
or
mov
sbb
sbb
mov
mov
das
pop
mov
cmpb
mov
stos
out
push
push
in
xchg
cmp
jmp
sub
dec
mov
xchg
cmp
mov
adc
xchg
gs
inc
sbb
xchg
or
add
pop
xchg
lods
pushf
in
cs
xchg
fwait
and
sub
mov
xchg
sub
lds
push
xchg
jo
push
call
gs
xchg
mov
sub
dec
ffreep
xchg
inc
hlt
sub
xorb
push
pop
cmpsb
xchg
or
cmpsl
xor
aas
inc
cmp
aaa
pop
xchg
cmp
pop
cmpsb
hlt
call
ja
sub
xor
xchg
adc
dec
xchg
add
push
cmpsl
lret
xchg
xchg
call
leave
cmpb
jp
shlb
push
xchg
je
rcrb
push
push
adc
cmp
xchg
cwtl
addl
shlb
mov
ret
gs
xchg
and
in
ja
shlb
and
test
sbb
fwait
shlb
movsb
xor
push
leave
lcall
or
test
stos
rorl
adc
add
mov
outsb
adc
adc
mov
adc
xchg
and
mov
mov
xor
and
lods
xor
push
sti
loopne
adc
pop
push
loop
and
icebp
gs
lods
cmpsl
xor
inc
lret
adcb
ret
imulb
mov
nop
dec
mov
ret
mov
out
or
adc
pusha
shll
pop
push
mov
gs
fucomi
or
bound
or
mov
or
or
xchg
add
inc
jecxz
and
or
inc
inc
dec
inc
mov
xor
lods
nop
scas
add
pusha
andb
sbb
loopne
mov
or
hlt
inc
or
aad
and
push
dec
repz
andb
or
xor
xchg
movsb
ror
mov
mov
dec
mov
adc
mov
stos
mov
xchg
mov
out
negl
call
mov
dec
push
mov
lea
test
jecxz
roll
lret
xor
les
dec
aaa
sarb
shlb
dec
pushf
mov
pop
mov
addl
popf
shlb
mov
mov
mov
aaa
inc
ret
sub
inc
insb
mov
cmpsb
test
pop
mov
xchg
pop
inc
cmp
mov
sub
or
gs
and
mov
fadds
mov
fldenv
mov
je
push
dec
pop
rcrb
insb
inc
cs
add
aam
mov
les
xor
mov
jmp
arpl
cmp
sbb
ds
mov
xchg
add
popa
xchg
add
inc
dec
shr
adc
push
or
test
adc
pop
pop
mov
dec
into
and
inc
sarb
adc
cmp
inc
out
push
orl
cmp
dec
mov
or
add
call
out
sbb
inc
mov
xor
or
xor
mov
out
jmp
pusha
aaa
inc
out
ror
pop
add
xor
out
jae
enter
jp
cwtl
decb
sub
movsb
out
hlt
jo
dec
out
and
jp
add
cmpsb
out
or
dec
xor
add
and
das
xor
out
or
out
sub
xchg
ret
add
loop
and
and
mov
out
pop
scas
mov
sbb
push
addb
push
pop
sbb
sahf
push
popf
push
je
fwait
ja
add
push
sbbb
sbb
mov
adc
sbb
jmp
sub
addl
adc
in
pop
shll
loopne
mov
pop
mov
pop
pop
mov
pop
mov
push
daa
cli
pushf
inc
sahf
int3
push
pop
in
cmpsl
adc
xchg
mov
mov
jecxz
dec
push
mov
mov
push
out
cmp
stos
adc
cmp
shlb
inc
ljmp
and
inc
inc
pop
outsl
jae
xchg
test
or
xchg
jae
xchg
push
add
pop
mov
inc
dec
xor
push
and
jae
shlb
xor
inc
xchg
lods
mov
sbb
mov
lock
leave
push
or
add
and
sbb
mov
add
mov
xor
lahf
jae
inc
inc
inc
xchg
mov
lahf
pop
fdivl
xchg
and
jae
sahf
subb
add
mov
dec
and
mov
adc
call
sbb
jmp
fsubrs
fisttpl
outsb
nop
popf
jg
rclb
jg
dec
and
mov
mov
sbb
arpl
repnz
popf
cmp
mov
out
call
mov
or
mov
fdivrs
cmp
pop
pop
fstl
out
loopne
dec
mov
or
xchg
mov
loope
push
mov
daa
insb
or
and
movsl
hlt
cld
sbb
adc
jb
or
cmp
sbb
pushf
fistpl
adc
xorb
mov
inc
push
ljmp
or
addl
subb
push
stos
sub
xorb
add
sti
fwait
repz
adc
mulb
ret
repnz
xlat
fwait
imul
aaa
adc
add
testl
jb
enter
adc
xchg
fwait
jge
jae
mov
adc
jb
insl
adc
dec
fisubl
xor
xchg
sub
fdivr
mov
shl
mov
push
sbb
call
sbb
mov
lcall
adc
xlat
ret
sub
lea
xchg
xchg
inc
push
icebp
in
dec
nop
sbb
pop
or
out
mov
mov
xlat
pop
mov
pop
movsb
repz
xchg
sbb
mov
rolb
add
dec
nop
inc
mov
xchg
and
pop
and
mov
push
or
mov
test
mov
cmp
cltd
add
jo
inc
push
movsb
adc
adc
cltd
adcl
outsb
nop
jo
mov
loope
pop
jmp
and
imul
or
or
mov
adc
fwait
sbb
and
iret
and
lahf
out
cmp
add
and
or
sbb
repz
repz
mov
repz
bound
sub
or
out
ds
sbb
aam
push
iret
repz
mov
pushf
pop
push
lods
push
mov
idivl
push
inc
push
push
sub
sahf
cmpsl
jge
push
nop
movsb
push
push
xchg
jl
negl
cmpb
push
sahf
out
sahf
push
sbb
repz
repnz
fmulp
mov
test
mov
ret
into
sbb
sahf
negl
repnz
loop
cmp
sarl
out
aam
mov
sahf
mov
sbb
jns
out
pushf
scas
lret
repz
cld
or
and
pop
cmp
repz
jb
nop
sahf
repz
rep
mov
fsubrp
cmp
jnp
decb
ss
inc
push
sarb
outsb
jle
sahf
sahf
divl
sti
mov
daa
rol
loop
clc
adc
push
cmp
aaa
je
fs
push
fimuls
adc
daa
pop
mov
ror
repz
jbe
add
mov
jbe
push
cwtl
cmpsl
insl
mov
iret
jecxz
xorb
jns
dec
xchg
push
jbe
push
scas
jo
adc
test
das
or
push
mov
cmp
add
aam
adc
jne
sub
adc
jle
mov
mov
sub
mov
or
dec
mov
je
pop
xor
outsl
lods
add
ja
add
adc
xchg
dec
les
es
adc
xor
in
daa
xor
add
dec
add
fcoms
outsl
ss
popa
and
or
lret
sub
in
mov
popa
xor
mov
mov
es
dec
cmp
or
das
pop
call
aam
mov
imul
jne
inc
add
outsl
inc
sub
dec
andl
adc
shll
mov
pcmpeqd
and
rorl
add
add
dec
add
sub
ret
cs
outsl
mov
sbb
pop
data16
add
jo
xor
and
das
jg
mov
inc
lock
aas
test
add
inc
push
outsl
cs
call
push
inc
pop
inc
outsl
outsl
rorb
xor
dec
rorl
popf
pop
mov
cmpsb
sbb
mov
fwait
aam
dec
and
pop
jg
hlt
decb
arpl
jae
pop
dec
jae
inc
jg
test
jne
outsb
je
arpl
jbe
ss
xor
je
outsl
jnp
inc
xor
sub
sub
sub
inc
inc
xor
sub
pushl
xor
xor
jge
xor
xor
inc
xor
lahf
std
fildll
sub
sub
cmp
xor
clc
inc
push
cmovnp
inc
xor
mov
add
lar
sub
sets
fnstcw
jo
mov
sub
orb
cmp
xor
push
xor
or
pop
outsl
lcall
push
and
inc
aaa
adc
xor
inc
pop
inc
and
rolb
push
jne
mov
arpl
xor
jo
loope
dec
and
cmp
ss
pushf
xor
or
and
dec
dec
outsl
mov
inc
cmpsb
push
and
test
xchg
ror
in
scas
data16
inc
push
push
dec
hlt
sbb
popa
adc
push
call
push
repz
out
inc
out
adc
push
sub
out
cmp
in
mov
lods
fnstcw
sahf
add
movd
cmp
ret
test
adc
cmp
lret
cs
jo
outsl
xor
test
popl
mov
inc
je
push
push
mov
sub
xchg
inc
cmp
push
pop
mov
sbb
xchg
mov
cmp
jp
fldt
rolb
sub
neg
std
inc
arpl
insb
mov
icebp
fsubp
inc
xchg
and
outsb
ret
rcll
lret
les
lret
dec
inc
xor
arpl
jle
or
pop
pusha
mov
pop
cltd
cmpsl
sbbl
inc
sbb
inc
and
pop
mov
xchg
pusha
push
and
dec
popa
jae
and
mov
push
imul
ljmp
jne
xchg
or
lcall
je
lods
popf
fisubrs
dec
fs
imul
push
cltd
push
push
jo
pusha
sub
jecxz
add
push
and
dec
movsb
jmp
imul
jae
outsl
push
pop
arpl
inc
cs
mov
push
push
add
ja
cmpsb
les
shlb
fsubl
add
popa
imul
test
dec
cmc
or
fsubrs
sbb
fdivl
outsb
pop
add
and
sar
or
mov
dec
rorb
es
push
and
dec
inc
rolb
rcrb
movb
push
and
aaa
negb
push
adc
jbe
sbb
push
mov
dec
sbb
andl
inc
leave
or
or
mov
add
cmpsl
fadds
sahf
out
sub
orb
cmp
loopne
adc
iret
das
push
adc
xchg
adc
repz
das
push
sbb
sbb
decb
jns
sbb
call
ds
cmp
nop
cld
and
push
and
jns
jns
stc
cld
stc
jp
push
cld
fmuls
cmpsl
cmp
adc
sbb
push
out
les
int3
ja
pop
mov
and
adc
mov
adc
inc
bound
ja
ficoms
ds
cmp
fcoms
or
inc
xor
add
mov
adc
push
cld
or
out
sahf
out
fmul
les
movsb
xor
xchg
call
mov
jl
insb
push
fs
pop
mov
jns
push
dec
dec
inc
inc
cmp
cmp
push
push
xor
sub
iret
repz
and
sbb
adc
ds
repz
or
cld
or
out
clc
hlt
call
sahf
out
mov
nop
jo
repz
push
xor
lock
int3
mov
iret
repz
insb
inc
sub
jns
iret
repz
cld
push
fcom
out
sahf
out
mov
js
iret
sarl
add
add
loope
cmp
sbb
add
call
fmulp
push
mov
sbb
iret
inc
pop
add
pop
and
insl
adc
outsl
mov
mov
xchg
dec
adc
mov
sub
adc
mov
xor
pop
push
inc
dec
cmp
pop
xor
mov
int3
adc
push
adc
test
test
adc
rcrl
mov
mov
jo
mov
out
pop
bound
jmp
dec
adc
les
push
fsubrs
jmp
and
pop
jo
inc
cmp
cmp
ret
stos
jae
punpcklbw
adc
add
imul
mov
stos
xchg
icebp
or
mov
pushf
andb
rolb
add
cs
rorl
andb
add
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
test
rcrb
add
jne
pop
adc
insb
add
call
xor
push
je
imul
inc
xchg
pop
dec
mov
arpl
imul
xor
decl
or
jne
adc
jo
bound
xor
dec
daa
jo
jnp
push
push
push
insb
das
inc
xlat
lods
and
outsl
jl
lods
pop
mov
ja
lahf
pop
lods
or
mov
loopne
leave
jae
add
mov
mov
nop
or
and
sub
enter
sub
sbb
in
dec
fcoms
aam
fisttpl
cmp
ret
paddsw
aas
int3
data16
out
adcb
jbe
add
popa
pop
and
xlat
jns
lds
fisttps
sub
cltd
ss
lcall
mov
push
inc
lret
les
mov
filds
or
push
popf
jl
jo
push
in
push
aas
sbb
sbb
lahf
jg
cmpsb
jg
dec
and
loop
xor
adc
or
mov
rorl
vmptrst
mov
aas
mov
cs
outsl
pinsrw
xchg
pushf
dec
fcmovnbe
mov
aas
xchg
out
jbe
in
packsswb
data16
push
push
aam
insb
adc
imull
loopne
dec
mov
dec
jecxz
adc
loopne
pop
jnp
xor
lock
enter
fcmovnu
imul
push
leave
xor
mov
pop
pop
pop
test
pop
add
dec
inc
inc
adc
nop
divb
imul
cltd
sub
in
std
dec
stos
push
jb
push
lcall
scas
pop
push
and
and
inc
push
push
push
add
cmc
xchg
lcall
sub
mov
sub
add
fsubrp
daa
xor
ja
and
and
add
jp
test
repnz
outsb
inc
lods
add
sbb
mov
ljmp
mov
sub
adc
bound
push
dec
push
jb
or
and
imul
testb
jae
arpl
add
outsb
push
mov
xchg
dec
add
fsubr
sbb
mov
mov
push
popa
jae
push
jae
push
sbb
inc
dec
outsl
popa
push
push
sbb
add
mov
dec
in
pop
lret
out
adc
cmp
dec
inc
adcb
inc
sbb
mov
addb
add
sbb
clc
push
and
add
shrb
dec
mov
inc
push
or
dec
pop
das
push
pop
adc
mov
pop
push
js
out
mov
lods
jb
jns
imul
mulb
and
aad
mov
xor
add
sbb
xchg
sbb
imulb
push
mov
mov
aaa
adc
mov
inc
and
mov
inc
and
repz
sub
jge
xchg
jecxz
lret
push
xor
push
mov
adc
jbe
ja
inc
add
push
jne
inc
jmp
fisubs
inc
or
fcmovnbe
flds
rolb
stos
jp
push
es
and
pop
push
scas
inc
ret
sarb
popf
mov
dec
jmp
nop
mov
cmpsl
jno
ds
fs
je
sub
xor
clc
int3
xor
dec
icebp
mov
or
out
jecxz
cltd
cs
adc
xchg
sbb
fidivrl
and
push
add
adc
call
enter
lahf
outsb
xor
dec
sbb
inc
push
inc
rorl
add
rorl
mov
das
pop
outsl
mov
sub
or
lret
pop
jne
xchg
stc
sub
mov
sub
xor
fadds
add
add
sub
dec
dec
dec
pop
addr16
bound
pop
jecxz
jns
mov
fs
lds
mov
mov
outsl
dec
sbb
fiaddl
cmp
xchg
sarb
dec
and
roll
add
aad
push
mov
sbb
adc
add
or
outsb
adcb
mov
cmpl
push
xchg
popa
sub
push
mov
add
add
adc
fiaddl
jp
mov
inc
jmp
pop
sbb
ja
js
aaa
push
sbb
pop
or
aas
inc
data16
jb
lods
sbb
jno
inc
sbb
push
dec
ja
xchg
stos
enter
jne
xor
xor
inc
or
mov
jne
stos
add
jnp
add
jo
add
add
outsl
inc
pop
and
fs
inc
xor
add
ds
dec
add
ret
cmpsl
pusha
push
jo
jno
xchg
mov
add
jmp
into
pop
roll
sahf
add
in
in
xchg
cmpsl
xor
sbb
push
fs
imul
add
iret
lret
je
sbbb
lret
xchg
fwait
sbb
into
out
outsl
inc
cmpsl
add
mov
push
push
push
mov
sub
jno
ret
push
and
test
jns
insb
jmp
cmp
cld
inc
jae
adc
add
je
sbb
inc
divb
add
add
jno
push
add
cmp
xor
mov
pop
sbb
jno
sarb
into
insb
sbb
cmp
dec
jle
dec
dec
stos
cmp
sbb
xor
sbb
mov
lret
fbld
pop
mov
mov
push
popa
scas
push
sbb
fwait
xchg
mov
ja
cwtl
aam
push
shrb
jecxz
addr16
addb
push
pop
in
aam
and
inc
mov
inc
fisttps
lahf
idivl
push
sbbb
adc
pusha
sbbb
mov
and
add
and
cmp
sub
and
mov
xlat
pop
add
in
inc
add
add
xor
cmp
inc
xor
subl
xchg
push
jns
fs
lods
stos
push
ret
pusha
jmp
pop
pop
hlt
sbb
mov
ss
rorb
shlb
push
inc
xchg
inc
adc
adc
add
test
test
lock
lcall
mov
jns
adc
add
clc
out
cmp
repz
call
cmp
repz
sahf
out
iret
test
pop
mov
sahf
out
nop
mov
in
pusha
push
pop
push
inc
iret
repz
cmp
and
sbb
dec
shrb
in
lock
repz
push
fcom
enter
cmp
mov
cmp
repz
push
cmp
iret
repz
sub
sbb
or
sahf
out
ds
in
hlt
in
in
data16
out
int3
mov
xchg
out
sahf
testl
push
inc
popf
iret
repz
or
jmp
adc
push
orl
add
cmp
repnz
sahf
dec
push
mov
loopne
and
add
hlt
out
lds
lock
or
mov
and
sbb
push
aaa
cmovne
add
adc
jbe
addb
imulb
inc
dec
pop
nop
fildll
add
dec
pop
sbb
mov
adc
jmp
or
xor
push
fs
push
push
imul
inc
dec
mov
subl
subb
insl
mov
pop
jo
add
in
les
jo
cmp
and
adc
push
xchg
test
mov
jne
pop
push
insl
adc
mov
sub
sbb
and
jbe
and
mov
outsl
cltd
sbbb
ds
je
rorb
pop
rcrb
insl
mov
jbe
xor
gs
imul
sbb
cmp
fisttpll
pop
and
and
addl
jbe
jb
add
or
imul
jge
popaw
insb
into
dec
jns
fdivs
sbbl
push
pop
in
popa
mov
lahf
ds
inc
add
and
mov
inc
pop
pop
adc
in
aam
add
xor
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
pushl
sub
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
dec
xor
xchg
shll
inc
ss
ss
pushl
add
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
ret
add
push
lock
idivl
call
call
xor
xor
xor
push
xor
xor
pop
lock
js
popf
xor
xor
xor
xor
xor
xor
jmp
jmp
xor
xor
xor
xor
out
xor
loopne
pushl
jge
mov
xor
xor
fidivl
scas
xor
stos
dec
cld
call
xor
jecxz
call
xor
pushl
jno
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
decl
cli
add
or
out
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
push
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
pop
cmp
nop
hlt
cmp
jae
mov
pushf
cmp
cmp
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
clts
lods
aas
out
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
pushl
sub
xor
dec
xor
insb
xor
mov
mov
mov
xor
xor
xor
xor
xor
incl
push
xor
pop
xor
xchg
xor
xor
pushl
enter
cmp
xor
xor
xor
xor
xor
lcall
ret
push
aaa
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
popa
xor
dec
xchg
aas
inc
aas
pop
aas
ja
pusha
mov
push
or
cmp
pop
xor
clc
incl
xor
cltd
xor
xor
xor
xor
xor
xor
jg
jg
ret
xor
xor
lcall
aas
pushl
clc
xor
xor
test
mov
mov
nop
xor
out
in
mov
lock
clc
xor
cmp
pop
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
mov
jp
cmp
cmp
std
cmp
cmp
test
xchg
adc
sbb
cmp
cmp
cmp
ds
aas
jmp
pushl
cld
outsb
xor
xor
mov
ss
ss
xchg
cmp
cmp
test
lods
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
xchg
inc
std
ja
lcall
cmp
mov
aas
push
mov
cmpb
aas
sarl
aas
in
out
out
testb
loop
xor
pop
sub
jp
jmp
mov
scas
xor
xor
xor
cmc
jg
or
and
xor
xor
mov
xor
xor
lcall
jge
std
xor
cmpsb
data16
ss
add
or
aaa
and
aaa
loopne,pn
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
sbb
pushl
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
decl
push
mov
cmp
cmp
sbb
push
cmp
inc
clc
clc
pop
cmp
dec
cmp
popa
cmp
cmpb
cmp
jg
jg
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cld
stos
dec
mov
jbe
adc
sub
xor
cmp
pushl
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
mov
ds
push
cmp
jae
mov
cltd
call
cmp
jp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
daa
sbb
pushl
aas
mov
movsl
aas
stos
aas
mov
mov
push
shr
fwait
rclb
xor
lcall
sahf
xchg
les
fidivl
in
push
jg
xor
xor
xor
xor
xor
mov
xor
xor
xor
clc
jg
pushl
mov
xor
xor
mov
jl
cmpsl
xor
xor
mov
jno
xchg
xor
xor
xor
cmpsb
pushl
xor
mov
pushf
xor
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
je
jg
mov
bound
scas
cmp
aaa
shrb
cmp
cmp
mov
jmp
data16
or
cmp
cmp
cmp
cmp
jg
inc
nop
sbb
xor
or
add
pushl
pop
xor
xor
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
jg
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
and
mov
cmp
ja
lahf
scas
cs
clc
xor
xchg
aas
push
mov
jg
mov
mov
xor
xor
xor
cmpl
fiadds
aaa
ret
add
jmp
repnz
or
cmp
pop
cmp
jge
clc
jmp
out
cmp
cmp
jbe
xchg
cmp
cmp
cmp
std
fbstp
cmp
cmp
fdivrs
push
aas
jne
rorl
or
mov
fwait
add
mov
shlb
xor
dec
or
repnz
or
aas
xor
divl
pop
xor
fdivr
sar
inc
loop
ss
dec
ss
outsb
notb
ss
pushl
fidivl
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
mov
push
imul
cmp
test
mov
call
mov
cmp
dec
cmp
cmp
std
lcall
jae
aam
fnstsw
jecxz
imul
mov
cmp
cmp
pop
sarb
adc
cmp
orb
stos
lcall
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
jne
push
andl
sar
xchg
xor
xor
pop
xor
xor
aas
cmp
or
xor
xor
xor
xor
xor
mov
xor
clc
mov
ss
lcall
ds
dec
aaa
pop
aaa
js
mov
stos
decb
lock
fidivl
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
jbe
cmpl
cmp
cmp
decl
adc
aas
pusha
aas
cmpb
aas
fdivrl
loop
out
out
mov
push
sub
jne
hlt
pushl
loope
xor
loop
xor
xor
jg
xchg
xor
xor
xor
pop
hlt
pop
mov
cld
xor
xor
ljmp
jbe
loopne
adc
adc
sbb
clc
lcall
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
outsb
push
notl
lock
out
xor
incl
xor
into
cmp
inc
xor
lcall
fs
inc
mov
pushf
xor
mov
sbb
call
in
test
lods
xor
int3
fbstp
pushl
and
and
sub
sub
xor
cmp
inc
cmp
pop
cmp
dec
cmp
push
rcrb
cmp
ljmp
push
fidivs
cmp
cmp
inc
push
mov
push
mov
enter
rclb
cmp
cmp
mov
cmp
inc
lock
mov
cld
push
add
or
adc
sarb
stos
sbb
and
and
sub
sub
xor
cld
icebp
pop
fidivrs
inc
cmp
cmp
pop
cmp
lcall
sahf
cmp
insb
cmp
je
jl
cmpb
pop
lcall
xchg
cwtl
jmp
cld
pop
mov
sub
xor
inc
mov
push
aas
push
ja
incl
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jg
jge
jbe
push
or
xor
xchg
xor
test
xor
inc
xor
xor
cwtl
xor
xor
enter
cs
call
xor
mov
popa
jae
mov
pusha
xor
cmpsl
fbld
or
or
ss
sahf
cld
lahf
dec
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
cmpb
jle
or
or
adc
adc
aas
cli
pop
ret
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
call
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
push
nop
aaa
xchg
aaa
cwtl
into
mov
decl
aaa
mov
mov
aaa
enter
and
and
aaa
fdivs
fcompl
in
jno
inc
pop
out
aaa
hlt
xor
aaa
hlt
add
or
loopne
adc
adc
sbb
cmp
ja
mov
mov
jmp
cmp
pop
sahf
jl
cwtl
cmp
cmp
pop
idiv
sub
cmp
cmp
cmp
cmp
push
cmp
rclb
test
mov
mov
cmp
lods
cmp
mov
cmp
sub
pusha
or
dec
in
mov
movsl
movsb
fs
lret
lods
pop
push
aaa
cmpsb
punpcklbw
sti
out
mov
push
aaa
mov
aaa
stos
mov
push
lods
repz
sti
lret
aaa
ljmp
gs
push
aaa
mov
pusha
mov
xor
lahf
sub
xor
out
test
and
or
inc
add
cmp
fmuls
addl
mov
sbb
push
stos
out
out
sub
test
out
test
addb
adc
repnz
movsb
add
add
repz
dec
mov
push
rcrb
cwtl
out
pop
aam
jo
xorb
shr
adc
adc
pop
cltd
cmpsb
dec
or
and
add
fs
mov
mull
pop
shll
sbb
xor
movsb
scas
xor
adc
aas
gs
jo
jl
addb
dec
mov
leave
gs
add
ret
dec
sbb
insl
loopne
push
push
outsl
test
adc
sbb
mov
aas
and
mov
xchg
sbb
popf
inc
xchg
mov
in
out
idivb
push
sub
je
jae
xor
imul
in
and
jl
or
incl
jb
or
inc
hlt
cmpsb
xor
xchg
lock
mov
sub
and
and
xchg
xchg
mov
xchg
pop
xchg
mov
mov
jbe
call
and
adc
and
mov
cmc
iret
cmpsb
cmc
sbb
mov
inc
mov
dec
sub
or
inc
rol
add
jp
mov
jle
fbstp
jecxz
jmp
add
add
ljmp
or
test
jo
addr16
dec
push
movsb
jne
fwait
add
int
es
out
sbb
and
popa
xor
rol
or
inc
ljmp
or
sbb
cwtl
shlb
add
outsl
or
sahf
add
lret
dec
out
mov
mov
gs
icebp
jmp
cmp
jne
test
inc
add
adc
adc
jmp
push
cmp
call
add
cld
cs
dec
cltd
mov
call
mov
mov
or
or
cmp
je
cltd
adc
int
xchg
or
add
push
lea
push
push
ret
xor
pop
add
mov
or
fstps
dec
imul
inc
mov
jl
jae
ret
mov
adc
ret
jmp
dec
cmp
daa
bound
cmpsl
and
and
push
sbb
insl
dec
out
fcmovnu
aas
lea
in
push
cmp
xchg
pop
clc
sub
mov
cmp
sbb
and
test
loopne
and
xchg
jo
ret
push
push
pop
adc
xor
push
cmpsb
mov
push
sahf
adc
and
push
aaa
cmp
and
sub
aaa
insl
dec
mov
pusha
lock
push
adc
inc
imul
mov
add
mov
push
and
and
mov
push
imul
add
xchg
inc
addr16
push
push
jecxz
pushl
push
add
or
dec
add
xchg
xor
inc
mov
cli
flds
inc
sbb
inc
sub
mov
add
sbb
cmp
movsl
sub
jne
adc
rcrb
movsl
pop
xor
push
mov
pop
xor
inc
sub
pop
adc
adcb
adc
sbb
or
ja
pop
and
push
sbb
mov
pop
int3
xlat
addb
pop
pusha
adcl
leave
inc
mov
cmp
xor
out
and
lods
pop
xor
insb
mov
mov
cmp
fwait
mov
jae
dec
testb
fildl
and
call
mov
xor
cwtl
mov
rorl
pop
enter
lods
cmp
adc
outsb
sub
lods
pop
cmpsb
sub
repnz
sub
sbb
xor
adc
pmaxsw
or
or
in
push
push
mov
sub
inc
lahf
out
leave
or
addl
inc
adc
mov
adc
xchg
cmp
sbb
sub
imul
lods
fwait
and
cwtl
inc
xchg
or
xchg
push
mov
je
mov
imul
add
adc
xor
pop
xor
push
inc
aas
jmp
popa
sub
pop
adc
mov
inc
mov
jmp
or
and
mov
out
mov
and
icebp
shl
push
mov
cmc
lds
mov
jmp
fldenv
pop
push
sbb
inc
dec
sub
pop
add
std
cmp
xchg
pop
cli
sbb
mov
xchg
frstor
push
std
pop
xor
pusha
insl
loope
jl
dec
neg
in
shll
adc
mov
fistpl
ret
call
call
add
stc
es
push
mov
and
pop
adc
cmp
leave
jp
push
cmp
dec
mov
call
and
mov
pop
cmpsl
mov
dec
mov
push
test
sbb
call
es
push
inc
push
push
sub
mov
inc
adc
adc
mov
mulb
pop
sub
icebp
inc
ja
add
or
xor
mov
sub
mov
stc
fs
inc
mov
sbb
subl
mov
pop
cs
and
and
xlat
loop
sbb
adc
jbe
inc
sbb
lret
mov
sbb
push
or
and
push
or
pop
pop
sbb
sbb
je
dec
or
into
fists
mov
push
fimull
mov
imull
sbb
xor
cmp
mov
pop
fistl
out
sub
insb
subb
push
cmp
ret
insb
push
repz
fistpl
pop
cmp
call
ret
ja
mov
ss
xchg
rolb
jmp
nop
rolb
es
add
ja
lret
and
test
inc
pushf
out
sbbl
cmp
stos
mov
cmp
mov
cmp
lret
fsubp
push
add
out
xchg
jne
mov
push
dec
jg
jns
xchg
fs
out
sahf
pop
push
dec
inc
pop
adc
dec
out
ljmp
mov
mov
and
xorb
adc
fisttpll
jg
xor
pop
nop
inc
push
call
push
mov
dec
pop
pop
pop
out
movsb
lods
dec
push
out
cmp
call
sahf
out
cmp
or
and
push
xchg
out
jns
xchg
or
push
out
add
cmp
fisubl
inc
dec
mov
stc
cmp
je
xor
addb
push
cltd
jae
xor
and
enter
xchg
sbb
mov
xchg
and
cltd
loopne
test
lcall
mov
loope
mov
mov
pop
or
in
jnp
repz
sub
jnp
cmpsl
ret
inc
rorb
mov
mov
out
nop
or
lcall
daa
xor
inc
es
daa
pop
xorb
nop
or
daa
daa
cmpsb
imul
imul
daa
daa
daa
daa
adc
add
sub
sub
sub
sub
xor
mov
dec
shll
sub
sub
sub
add
push
pushf
mov
dec
mulb
adc
or
aad
or
sbb
adc
mov
mov
sub
mov
add
inc
stos
insb
lret
add
out
xor
addl
je
jl
sbb
jp
out
pop
cmc
push
lock
jp
or
clc
fs
dec
sbb
cmp
sbb
or
mov
fisttpl
leave
cwtl
push
movsb
sbb
mov
push
or
and
and
fistpll
or
mov
addr16
test
jge
inc
inc
addr16
jle
inc
inc
bound
pop
or
rcrb
or
push
inc
or
push
sub
iret
addr16
adcb
cwtl
aaa
adc
adc
test
fidivrs
xchg
test
add
push
rolb
data16
je
pop
test
inc
loopne
sbb
adc
jmp
into
or
jb
out
adc
ret
call
rcrb
add
cltd
mov
imul
add
repnz
or
add
pop
mov
adc
cld
add
sub
faddl
adc
and
sbb
xchg
mov
and
lock
inc
push
cwtl
lret
dec
stos
sets
roll
adc
cltd
fs
or
cltd
mov
adc
cltd
and
mov
or
cwtl
loop
and
pop
cltd
pop
sbb
in
inc
cltd
pop
sbb
sbb
xchg
sbb
inc
bound
fisttpll
pusha
sub
sbb
test
dec
sbb
das
mov
cltd
mov
xchg
cltd
pop
ljmp
mov
sbb
cltd
jo
xor
sub
dec
push
mov
insb
xchg
push
xor
sub
xchg
bound
xchg
mov
mov
adc
aam
jl
xchg
pop
aam
mov
adc
adc
jne
xchg
or
xchg
or
out
lock
add
mov
jb
mov
jo
aam
adc
sahf
sub
inc
sbb
inc
enter
fsubs
xor
jmp
xchg
pop
es
add
xchg
into
stos
push
ja
pop
xchg
sbb
xchg
push
adc
outsb
or
xchg
popa
fsubr
mov
mov
testb
or
cmp
mov
jl
push
dec
push
pop
add
inc
test
sbbb
inc
pop
enter
xchg
fstl
daa
pop
inc
pop
add
inc
call
nop
bound
nop
pop
push
insb
xchg
fsubs
and
xchg
cwtl
mov
mov
or
test
xchg
cmpb
adc
push
adc
or
xchg
inc
xchg
das
mov
xchg
or
mov
inc
rorb
or
xor
add
pop
adc
icebp
testl
rol
and
inc
movsb
scas
xorb
sbb
fmuls
test
jmp
or
xor
sub
xor
and
imul
test
enter
inc
mov
mov
or
dec
ja
lods
sbbb
jmp
mov
and
mov
pop
push
roll
les
sbb
sbb
movsb
pop
push
add
mov
shl
and
xor
mov
or
sbb
aam
inc
add
cs
pop
loope
movsb
repz
shlb
add
mov
movsl
hlt
pop
xchg
and
and
cltd
sbb
xor
and
and
cmp
inc
pop
and
and
inc
dec
dec
inc
je
mov
pop
cmp
mov
sbbb
pop
sub
sbb
pop
add
add
jo
xorb
adc
mov
sbb
jle
mov
jmp
ss
stos
loop
and
push
inc
pop
dec
or
imul
into
xorl
pushf
bt
lret
enter
sbb
dec
pop
movsl
addb
popf
sbb
sub
jb
adcb
fiaddl
leave
dec
xorl
jno
ss
push
mov
and
movsb
andl
aas
lock
add
in
xor
pop
nop
push
mov
pop
xor
pop
call
mov
outsl
cmp
or
stos
addl
movsb
subl
adc
xlat
and
push
imulb
cmp
adc
xchg
inc
lcall
daa
sbb
mov
pop
sub
push
leave
dec
ffree
loop
cmp
sub
jo
mov
dec
mov
call
fsts
fwait
lret
sub
cmpsb
or
pop
int3
pop
xchg
cmp
inc
inc
fdivl
fmul
cmpsb
cmpb
lods
lret
call
inc
ret
pop
jecxz
and
inc
addr16
ret
inc
push
jnp
pop
test
out
lret
dec
mov
dec
lock
addr16
jnp
xor
mov
mov
xchg
mov
mov
dec
faddl
fsubs
cwtl
popa
sbb
and
bound
add
pop
ds
sbb
push
inc
orl
pushf
fwait
popa
cmp
dec
test
sbb
ret
js
loopne
nop
loopne
inc
pop
and
adc
in
addr16
daa
in
adc
mov
push
daa
sub
and
add
xor
dec
daa
xchg
dec
adc
jnp
add
fwait
mov
andl
aaa
sbb
cltd
loopne
adc
rcrb
and
cltd
xchg
mov
mov
push
cltd
sbb
or
imull
mov
or
inc
mov
fcoml
fisubrs
mov
pop
inc
cltd
pop
inc
and
loopne
stc
push
xor
cltd
xchg
mov
xchg
push
inc
jmp
xor
mov
sbb
cltd
adc
xor
and
test
enter
mov
dec
inc
xor
daa
cltd
inc
ljmp
repnz
sub
sbb
jns
mov
cmp
mov
lahf
mov
lods
cs
jle
add
out
arpl
push
lret
lret
sub
xchg
add
add
jns
sub
fmull
jo
mov
adc
rclb
sub
enter
and
stos
inc
push
les
dec
into
outsl
adc
inc
adc
call
sahf
cmpb
insb
xor
subl
arpl
pop
ds
xor
sti
mov
xchg
lea
stos
fcomi
jmp
or
std
mov
push
pop
push
jns
fwait
sti
mov
xchg
and
xor
or
add
pop
push
dec
inc
subl
sarb
jl
addb
mov
adcl
inc
add
mov
mov
icebp
inc
mov
gs
adc
xchg
loope
in
fiadds
movsl
stos
inc
jl
jl
mov
xchg
xor
push
jb
push
inc
mov
sbb
dec
pop
pushf
sub
jge
inc
pop
adc
or
inc
inc
add
or
mov
andl
xchg
mov
nop
pop
ret
popf
jecxz
movsb
jne
xchg
or
shrb
pop
sbb
pusha
or
shlb
and
sbb
xchg
fildll
cltd
inc
sbb
cmp
inc
xchg
jecxz
xchg
pop
pushf
push
cmpsl
ss
inc
xchg
push
fdiv
shrb
push
sbb
out
imul
xor
mov
hlt
xchg
pushf
lods
dec
faddl
movsb
adc
jae
daa
mov
xchg
mov
mov
adc
xchg
push
xchg
adc
inc
and
inc
insl
ret
pusha
inc
insl
ret
dec
adc
into
daa
lret
inc
repnz
xchg
cmp
cmp
in
mov
fmuls
rcr
test
or
sbb
cmp
or
push
add
xchg
es
add
cmp
add
inc
adc
data16
cmp
add
inc
inc
xchg
dec
setbe
nop
xchg
inc
mov
dec
xchg
jg
je
movsl
sbb
xchg
push
inc
mov
inc
and
int3
xor
jns
imul
add
xchg
ljmp
dec
xchg
or
aaa
xor
xchg
ret
fwait
es
xchg
mov
punpcklbw
xchg
lods
mov
es
xchg
xor
xchg
clc
int3
dec
jmp
call
xlat
imul
shlb
and
and
call
lret
cltd
sub
test
dec
xor
xchg
movsb
icebp
jnp
in
test
or
and
aam
and
ja
pop
cmpsb
test
test
rolb
lret
mov
pop
ficoms
and
je
or
ss
push
rorl
ds
mov
in
aaa
mov
loope
scas
inc
push
xchg
clc
int
and
call
adc
push
int
mov
sub
pop
mov
das
push
in
mov
inc
int3
pop
insb
push
mov
int
out
scas
dec
pop
das
pushf
inc
ss
insl
or
mov
cmp
jmp
mov
cmp
sub
fldl
imul
sbbb
inc
fildl
sbb
enter
dec
sahf
in
stos
adc
fildl
sub
loopne
cmp
push
inc
pop
test
push
or
xorb
mov
andl
nop
push
inc
enter
mov
fistl
cmp
loop
fucomi
fs
add
nop
fistl
push
repnz
and
popf
adc
push
pop
and
fisttpl
inc
repnz
and
xchg
mov
dec
xchg
push
push
xchg
mov
or
adc
sub
or
and
mov
into
fistpll
adcb
dec
lods
sub
or
ja
mov
fstpt
scas
scas
fucom
mov
adc
jno
rcrl
fildl
fldt
call
mov
and
inc
fistl
fistpl
adc
pop
xlat
dec
and
fildll
outsb
sbb
or
cmp
jo
and
add
cmpsl
fbstp
or
mov
loopne
loopne
add
adc
sahf
loop
fucomip
in
push
fs
iret
leave
sar
lock
pop
push
iret
loope
xor
inc
repnz
jns
push
dec
cmp
sub
dec
pop
das
movaps
sub
das
das
sbb
add
cld
mov
in
das
das
das
das
fdivrl
les
mov
mov
mov
mov
in
cmpl
in
popa
mov
dec
mov
inc
mov
and
sbb
pop
cmp
inc
idivl
sbbl
mov
push
jb
mov
and
cmp
lahf
mov
nop
cmpl
mov
pop
mov
in
pop
cmp
mov
jb
sbbl
or
enter
mov
mov
mov
push
jb
xorl
pop
cmp
inc
xchg
mov
sbbl
jo
gs
nop
mov
and
cmp
cmp
cmpl
mov
hlt
mov
je
or
sarl
adc
sahf
data16
sbb
or
xor
mov
sub
test
imul
adc
adc
data16
sbb
push
sbb
xchg
xchg
sbb
sbb
mov
and
call
movsb
and
cmp
inc
dec
lcall
movsb
sbb
imul
pusha
in
dec
cli
dec
jl
popa
leave
xchg
out
dec
push
adc
push
dec
arpl
push
addb
push
inc
inc
mov
push
dec
aam
adc
inc
inc
in
xor
and
and
add
js
test
push
or
in
push
inc
xor
sub
jb
adc
cmp
sub
push
imul
sbb
push
icebp
ret
fadd
xchg
push
push
test
mov
hlt
imul
xchg
cmp
testl
inc
and
pop
scas
mov
inc
sub
jg
orb
add
sbb
not
add
mov
mov
and
xchg
mov
xchg
cmp
fs
dec
push
inc
sub
xchg
mov
push
stos
pop
xor
pop
cmp
dec
arpl
in
dec
movsl
gs
cmpsb
xchg
movsl
pop
hlt
rorl
jp
cs
and
and
adc
xor
xchg
sub
fmull
jl
xchg
and
xor
test
and
ret
mov
fisttps
popl
dec
negl
ds
push
or
cmp
push
lret
adc
push
lret
popl
je
push
xchg
repz
push
inc
xchg
mov
xor
xchg
int3
imul
mov
dec
imul
aas
add
popa
mov
add
jmp
sbb
and
jle
push
leave
loopne
mov
jo
xchg
sbb
xchg
in
push
cmp
scas
pop
mov
fdivl
inc
lret
sbb
imul
lcall
mov
inc
pushf
mov
aam
adc
mov
aam
test
shrl
dec
ja
mov
push
in
mov
shl
call
xorb
into
mov
cmp
dec
jbe
inc
cmpsl
sub
jo
shrb
cmpsl
scas
push
mov
add
sbb
adc
push
shrl
mov
dec
mov
out
sbb
xchg
push
mov
add
mov
in
xor
pop
js
cld
fsubr
enter
test
cmp
push
call
in
mov
cmp
gs
xchg
nop
out
call
jns
out
xchg
push
les
and
dec
xlat
push
mov
dec
pop
jp
mov
mov
sbb
push
adc
ljmp
loop
movsl
mov
push
xchg
out
lds
adc
mov
pushf
les
mov
test
mov
add
js
mov
push
dec
mov
mov
mov
inc
and
add
adc
aad
mov
rcpps
xchg
mov
shrl
mov
mov
fwait
mov
and
lret
xor
mov
stos
mov
popf
mov
mov
shrl
dec
push
rorb
js
je
nop
imul
sbb
sar
dec
add
mov
gs
pop
jb
mov
xor
pop
popf
mov
xlat
inc
lock
xor
push
sbb
sub
inc
xor
lret
mov
jg
sbb
sbb
xchg
shlb
add
xor
or
mov
push
mov
dec
dec
mov
cmp
or
sub
cmpsl
mov
and
jns
pop
mov
sbb
popa
dec
mov
sub
jne
mov
dec
mov
adcb
inc
mov
rorb
mov
subl
mov
xchg
push
ret
jp
mov
sbb
nop
fimull
xor
push
loopne
mov
push
call
xchg
movsl
mov
ja
adc
mov
jp
pop
sahf
mov
dec
cmpsl
mov
cmp
add
cmp
subl
mov
shr
dec
rorb
jne
stos
cwtl
mov
inc
jno
xchg
push
mov
xchg
movsl
aad
js
xchg
movsl
add
cmpsb
loopne
xor
xor
scas
cs
cmpsl
sub
mov
repnz
movsl
sbb
in
or
push
sbb
xchg
mov
jo
xchg
mov
sahf
mov
jmp
add
mov
loope
les
shrb
dec
dec
push
sarl
out
mov
mov
in
mov
orb
dec
mov
and
imul
mov
pop
xlat
inc
xchg
jo
mov
in
inc
loope
movsb
xchg
int
push
xchg
inc
pop
int
mov
pop
xorb
out
adcb
add
and
cmpsb
push
mov
inc
mov
mov
call
push
inc
enter
cli
loop
movsl
scas
jmp
fstl
mov
fadds
mov
lods
in
xor
and
xchg
mov
jl
mov
test
cmpsl
mov
sbb
push
jle
jo
push
mov
call
push
stc
outsb
jmp
inc
xchg
cmpsb
cli
sahf
cltd
mov
jmp
mov
inc
add
or
loopne
cmpsl
stc
mov
push
testb
push
sub
jns
out
mov
dec
repz
sbb
ss
iret
repz
push
pop
outsb
adcb
mov
or
iret
repz
push
ds
pop
jb
cmp
repz
pushf
mov
out
sahf
out
clc
push
stos
adc
cs
sahf
out
push
pusha
jbe
fucom
jns
test
into
call
jns
out
sbb
xor
dec
push
fnstsw
pop
insb
addb
cmpsb
popf
mov
ret
add
push
adc
jne
xchg
and
mov
push
lea
rolb
add
mov
dec
pop
sbb
jl
testl
dec
sbb
int
cmp
mov
add
push
clc
mov
fwait
sbb
mov
sbb
mov
out
add
adc
mov
cmp
pusha
js
mov
jns
or
add
test
adc
sahf
jnp
adc
push
adc
xchg
sbb
sahf
cmpsl
stc
cmp
call
push
lcall
test
push
lahf
cmpsl
xor
pop
sahf
mov
and
and
cmp
repz
xor
sbb
sahf
cmpsl
stc
cld
cmp
xor
xchg
mov
sub
push
pop
add
adc
int3
mov
outsl
test
and
test
addr16
or
push
sahf
out
sahf
cmp
adc
add
sarl
in
loopne
fdiv
cmp
repz
enter
repz
mov
mov
pushf
cwtl
xchg
nop
mov
cmp
xrelease
cmp
je
insb
push
repz
pop
push
push
dec
repz
repz
inc
inc
cmp
iret
repz
xor
sub
adc
sahf
cmpsl
stc
cmp
call
jns
out
mov
sub
cmp
repz
pusha
iret
repz
push
dec
inc
xor
or
mov
shlb
jns
cmp
int3
sbb
iret
repz
push
xor
jg
jns
mov
lock
mov
inc
adc
inc
mov
dec
xchg
movsb
and
inc
or
inc
xchg
add
dec
push
movsl
mov
aaa
xor
push
push
add
xor
dec
pusha
and
xor
pushw
push
mov
push
shlb
aaa
shlb
jbe
add
push
je
lahf
out
fdivrs
jo
mov
fdiv
xchg
popa
daa
add
and
aas
ficoml
pop
jnp
fiadds
mov
daa
cmp
xlat
push
mov
mov
inc
add
lods
pop
add
test
mov
lods
add
pop
cmpb
mov
insb
sahf
inc
pop
shll
jbe
and
dec
in
xor
mov
cmpsb
mov
mov
xchg
aas
jns
adc
and
mov
aaa
inc
pop
rcrl
xchg
xchg
push
cmpsl
fsubs
sbbb
inc
fisttps
adc
aas
dec
mov
addb
jg
dec
rorl
insb
jle
pop
xor
aas
mov
push
int3
push
push
dec
xor
andb
fsubl
cmpl
icebp
dec
adc
cs
and
fldcw
int
outsl
dec
sarl
xchg
adc
dec
mov
movsb
aas
and
pop
iret
pushf
add
xchg
add
xor
cmp
pop
stos
outsb
cs
outsb
jbe
cmp
inc
outsl
ds
outsl
gs
jae
movsl
add
movsl
pop
idivb
je
shlb
scas
test
fsubl
mov
mov
cld
adcb
sub
scas
inc
fwait
inc
enter
outsl
jne
fbstp
push
arpl
sti
and
outsl
and
ss
jb
mov
pop
jecxz
mov
and
inc
mov
lea
xor
xor
pop
aas
fwait
add
xor
cmpsl
mov
out
lret
xor
or
add
or
loopne
dec
mov
push
pop
sub
mov
push
sub
push
xchg
cmp
push
mov
or
cmp
mov
mov
sbb
and
sbbb
pop
add
mov
mov
sub
push
mov
rcll
imul
lods
cmp
arpl
sbb
bound
movsb
mov
scas
sub
sbb
push
or
cmp
leave
mov
push
aaa
add
ja
push
jno
fadds
outsl
mov
sbb
mov
sub
or
xchg
movsb
xchg
sahf
out
add
pushf
cwtl
xchg
nop
jns
out
mov
mov
dec
inc
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
fwait
iret
add
xchg
hlt
xchg
in
push
in
iret
repz
enter
cmp
repz
pushf
mov
adc
insb
push
fs
cmp
mov
push
and
cmp
repz
in
xchg
push
enter
repz
mov
mov
pause
mov
out
sahf
push
sahf
out
mov
lock
loopne
jns
out
mov
and
sbb
pop
outsl
add
add
out
pop
adc
fnstenv
je
push
cwtl
inc
xor
mov
neg
mov
push
add
mov
push
sub
mov
bound
stos
push
fiadds
clc
mov
lds
pop
enter
add
outsb
stos
lcall
xchg
cs
mov
lcall
aas
sub
and
add
incl
xor
rolb
rcrb
jge
fldcw
or
xor
inc
xor
rcr
xor
xor
cmpsb
dec
pusha
cld
jg
cmp
ss
ss
nop
ss
push
fwait
clc
fwait
sub
ss
mov
xorl
aaa
adc
sbb
add
cmp
fstpt
popa
push
ret
clc
push
cmp
xchg
sub
mov
lret
cmp
cmp
cmp
adc
cmp
popa
cld
filds
cmp
clc
cmp
xor
cmp
cmp
lcall
ljmp
enter
aad
faddl
pop
add
ds
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
into
pushl
lds
push
data16
jbe
jnp
cmpl
or
aas
movsb
aas
mov
sarl
div
dec
add
push
xor
jl
xchg
cmpsb
mov
xor
jecxz
xor
pusha
lods
xor
push
inc
xor
mov
mov
xor
xor
into
das
xor
outsb
adcb
stos
xchg
mov
cmp
xor
inc
shr
adc
inc
fmuls
xor
jg
mov
outsb
cmp
mov
pushf
xor
xor
xor
xor
das
test
pushl
xor
dec
mov
ss
ss
sbb
test
lods
ss
pushl
sbb
xchg
mov
or
add
sub
das
cmp
add
ja
clc
cmp
pop
cmp
pop
rcrb
mov
sub
fwait
fs
cmp
cmp
cmp
cmp
cmp
pusha
pop
add
pop
cmp
outsl
cmp
cmp
shlb
sbb
pop
xor
inc
fdivrp
outsb
cmp
xor
sahf
js
idivb
pusha
cld
cmp
cmp
cmp
dec
push
add
call
ja
jle
test
push
jecxz
loop
mov
iret
cmp
cld
cmp
push
ds
ds
nop
shll
cs
aas
add
loope
push
xor
xor
es
lock
xor
push
xor
fbld
inc
xor
xor
xor
xor
xor
inc
lds
xor
cld
pushl
outsb
xor
loopne
repnz
dec
ss
bound
xorl
ss
es
or
ss
icebp
push
sar
ss
ss
aaa
or
push
add
out
nop
push
xor
aaa
xor
pusha
pop
stos
mov
add
unpckhps
push
cmp
ja
clc
mov
pop
cmpsb
test
mov
cmp
dec
sarl
fdivrs
in
jmp
repz
cmp
cmp
xchg
or
cmp
jg
cmp
cmp
pop
icebp
jg
mov
jno
jns
jle
xchg
mov
xchg
aaa
mov
scas
cmp
jno
cmp
push
add
aaa
mov
ljmp
cmp
cmp
cmp
cmp
cmp
push
push
mov
push
cltd
xor
insl
xor
sub
mov
dec
aas
outsb
inc
cmpl
aas
ret
aas
mov
xchg
mov
dec
fdivrl
lcall
xor
decl
jp
xor
xor
xor
xor
sbb
jg
xor
xor
jo
in
pop
xor
xor
xor
cmp
insb
and
xor
xor
adc
push
xor
ljmp
arpl
stos
add
ss
ss
xor
push
xor
aaa
jne
jle
mov
sbb
sub
popa
jl
cmp
cmp
cmp
cmp
cmp
ret
ret
cmp
aaa
or
cmp
cmp
pop
pop
stos
dec
cmp
arpl
outsb
push
lea
mov
cmp
scas
in
inc
add
stos
ds
or
cmp
lret
mov
fs
pop
push
fbstp
divb
data16
mov
ss
xor
xor
xor
xor
xor
out
xchg
jno
xor
xor
xor
xor
xor
xor
call
xor
divb
mov
pushf
ss
mov
test
push
or
adc
and
mov
mov
aaa
lcall
loop
cmp
pop
cmp
lcall
cmp
mov
jmp
std
cmp
or
ds
imul
mov
lret
mov
lods
cmp
push
sbb
mov
mov
cld
xor
pushf
xor
xchg
sub
mov
cmp
dec
cmp
pop
cmp
scas
mov
or
and
sub
ret
xor
xor
xchg
testb
pop
dec
es
xor
add
arpl
scas
mov
or
pusha
out
xor
xor
fdiv
cmpb
mov
sub
xorb
xor
xor
xor
sbb
mov
mov
call
lods
push
mov
dec
int3
inc
fmull
popf
xor
in
xor
mov
add
push
int3
or
sbb
xchg
andb
jl
xchg
insb
jb
out
popa
or
xor
mov
adc
bound
loopne
and
xor
or
or
adc
adc
sbb
sbb
or
jbe
xor
mov
or
push
xor
mov
xor
xor
xor
add
mov
cld
pop
lret
mov
mov
nop
xor
loopne
sbb
xor
les
gs
xor
xchg
mov
je
js
nop
xor
xchg
loope
jbe
xor
cmpsl
jg
cmp
cmp
push
xor
outsb
sar
xchg
bound
sarb
sbb
cmp
cmp
mov
mov
fdivrl
jb
pop
daa
cwtl
xor
das
shl
ljmp
sub
inc
incl
xor
xor
xor
xor
lahf
mov
mov
shlb
push
xor
pop
xor
xorb
and
sbb
shrl
jb
xor
cld
jg
inc
fsubrl
in
call
xor
xor
add
add
loop
adc
sbb
xor
aam
roll
xor
xor
xor
xor
push
xor
pop
xor
mov
loopne
shll
je
js
jl
andb
aas
adc
pushf
xor
xor
xor
xor
xor
xor
xor
or
cmp
into
shlb
int3
fimull
lea
jo
cmpsb
mov
inc
add
sub
rorl
or
orb
cmp
dec
adc
call
les
push
add
inc
mov
pop
pusha
jae
inc
jp
add
add
filds
add
or
pop
pop
push
or
or
or
or
or
and
adc
push
adc
les
or
pop
sbb
adc
adc
adc
add
data16
or
adc
pop
adc
inc
add
icebp
sub
xor
add
sub
add
add
jp
mov
inc
mov
jb
and
cmp
sar
jg
inc
add
push
adc
pop
and
xor
aaa
inc
jp
rcll
bound
js
dec
dec
xchg
dec
xchg
xor
adc
aaa
adc
add
pop
sub
shlb
xchg
test
ret
inc
or
xor
pop
push
xor
into
add
adc
mov
ja
adc
add
adc
pop
popa
jno
and
adc
mov
or
mov
lock
loope
icebp
mov
or
push
mov
xorb
scas
inc
addb
js
das
mov
push
std
or
add
lcall
inc
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
add
mov
movsl
jecxz
cli
pop
mov
pushl
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
call
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
mov
incl
or
xor
lcall
mov
push
pop
mov
fistpl
mov
popl
movb
xchg
sbb
scas
adc
mov
pushl
sub
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
outsl
lcall
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
inc
or
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
jmp
rorl
mov
int
arpl
push
out
or
inc
pop
push
sahf
pop
clc
sti
jg
jno
lock
jg
das
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
pusha
outsl
xchg
add
mov
or
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
sti
in
sbb
stc
loope
mov
sar
andl
aas
icebp
testb
mov
aad
pop
xor
jns
mov
in
repnz
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
push
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
dec
sbb
sbb
sbbl
into
andl
aas
loopne
cli
adc
xchg
fnstsw
in
add
inc
adc
loope
fisttpll
out
mov
std
cli
push
push
push
idivl
cmp
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sub
mov
cmpsb
orb
mov
js
jmp
xchg
pop
clc
pop
hlt
lret
ljmp
dec
movsb
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
loopne
fucom
out
sarb
sbbl
jno
or
sarb
mov
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
jg
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
lcall
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
pushl
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
pop
lock
stos
dec
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
clc
repnz
cmp
fmull
enter
jecxz
scas
inc
stc
sub
in
pop
mov
sub
mov
dec
incb
fidivl
std
loop
aas
mov
or
cld
inc
or
mov
cmpsb
push
pop
jg
add
jg
mov
pop
mov
test
mov
mov
iret
push
mov
push
push
sbb
stos
icebp
pop
incb
jno
mov
jg
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
clc
xorl
paddsw
push
or
add
mov
aas
fsubrl
lock
or
sbbb
mov
add
push
sbb
jne
push
and
mov
adc
loope
xchg
lahf
or
push
rcrl
rolb
pop
bound
aas
fistpl
adc
call
jno
pop
jg
fists
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
call
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
ss
jg
jg
stos
pop
add
ds
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
clc
incl
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
sub
incb
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
cld
jg
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
aad
loop
lahf
mov
or
out
lcall
outsl
ljmp
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
jg
sti
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
in
xor
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
clc
jmp
and
xchg
fidivrs
clc
clc
fistps
insb
test
aas
repz
sbb
lock
in
jmp
ret
out
sbb
aaa
clc
push
std
mov
je
icebp
or
mov
lcall
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
outsl
pop
bound
dec
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
mov
xchg
imul
pop
in
cmp
cld
int
mov
fidivs
clc
adc
jmp
pop
inc
clc
jg
dec
mov
xlat
inc
incl
out
clc
aas
aas
mov
jg
mov
sub
addr16
in
idivb
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
icebp
scas
cli
inc
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
sbb
scas
or
loope
jae
jmp
adc
je
jge
fbstp
out
incl
jg
stc
add
out
icebp
mov
loope
mov
cmpsl
jb
das
xchg
popf
sti
mov
fbstp
enter
push
pop
aam
jge
out
cmp
or
test
call
xor
decb
adc
outsl
decb
dec
adc
call
movsb
out
cltd
add
sbb
mov
cmp
int
add
push
pop
aaa
std
sbb
inc
sbb
mov
mov
aas
icebp
ret
rol
enter
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
add
and
dec
add
sub
fidivl
xlat
rcrl
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
cmp
mov
adc
jo
sarl
pop
rclb
cld
jno
ret
fs
add
inc
sbb
call
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
shlb
int3
xchg
imul
add
scas
mov
std
mov
daa
jmp
faddl
push
adc
mov
int
popa
lds
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
pop
mov
add
fsts
push
repnz
rorl
add
push
sti
pop
inc
add
aaa
enter
push
nop
mov
sub
mov
and
lcall
mov
imull
js
mov
dec
jecxz
pop
rorb
test
js
xchg
call
xchg
lods
arpl
push
into
inc
jle
enter
jg
sub
xor
repnz
pop
push
call
push
sbb
mov
fwait
loop
imul
repnz
jg
je
mov
std
sub
jg
mov
mov
adc
jg
pop
jp
lret
gs
mov
and
dec
movsb
cmp
sahf
inc
sbb
dec
rorl
stos
mov
lea
push
int
pop
cmpsl
add
jmp
jecxz
sbb
xchg
gs
or
sti
and
mov
push
inc
add
jg
xor
ljmp
decb
in
pusha
add
mov
shlb
lea
popa
mov
in
ret
cli
push
sbb
std
cmc
and
test
inc
lods
stos
inc
pop
push
loopne
mov
and
dec
jle
push
mov
jmp
lcall
jnp
push
push
mov
mov
xchg
stc
mov
mov
pop
les
incb
dec
cwtl
std
dec
xchg
pop
jo
xlat
jae
mov
or
pushl
stos
xor
jmp
fwait
jle
mov
sarl
ds
jl
sar
jmp
fistpl
inc
dec
sbb
adc
es
xchg
sbb
lods
jp
inc
iret
rcr
sub
cmc
push
sub
jge
outsb
pushf
jno
cli
pusha
loop
xchg
pop
mov
mov
icebp
push
ret
mov
clc
fbld
iret
xchg
aaa
add
inc
popf
in
push
inc
inc
sbb
into
rcr
imul
fs
push
call
mov
test
push
cmp
out
test
lcall
sub
mov
cmp
inc
jae
xorb
mov
pop
movsb
jecxz
ror
cmp
subb
sar
pop
sub
inc
adc
rol
rcll
mov
outsb
mov
jmp
filds
in
lds
or
call
pusha
jp
outsl
pop
out
sbb
sbb
and
fisubl
ss
jb
xor
xchg
ljmp
add
outsb
and
pop
loop
loop
imul
xchg
sti
pop
into
mov
jo
or
ljmp
sub
add
dec
dec
mov
mov
pop
adc
mov
in
je
xchg
dec
pop
dec
cltd
push
mov
jmp
mov
fcomip
dec
add
icebp
cwtl
dec
jg
pop
cld
into
ja
xchg
or
push
and
mov
pop
fimull
movsl
ljmp
out
or
xor
sub
add
les
ljmp
xlat
push
mov
rcll
jo
sarb
dec
orl
jecxz
loopne
cmp
mov
mov
dec
and
mov
mov
pop
push
aam
imul
add
mov
test
xchg
pushf
dec
mov
repnz
aas
shrl
dec
insb
gs
repnz
outsb
rclb
rolb
dec
cmp
inc
ljmp
and
lods
jmp
lods
int3
stc
clc
in
mov
and
pushl
add
cmp
shll
rclb
sub
mov
das
xor
out
sub
xor
or
lods
ds
or
sbb
imul
jmp
pop
pop
mov
mov
outsl
push
fdivrl
xchg
mov
sbb
testb
arpl
mov
ds
call
testb
in
sahf
lock
lret
ja
imul
and
cmc
xor
scas
clc
in
addr16
test
mov
fwait
and
mov
mov
in
pushl
int
jns
cmc
cltd
addr16
test
add
cmpsb
dec
xor
dec
dec
mov
mov
push
sub
jns
ss
mov
dec
fbstp
adc
imul
adc
call
inc
not
inc
push
stc
jns
mov
dec
xchg
add
in
mov
cmpps
pop
clc
jmp
movsb
inc
fcmovbe
xchg
pop
int3
iret
and
push
xchg
mov
sub
cmp
movsl
loopne
vpmaxsw
test
mov
push
push
jbe
out
jg
add
ret
mov
decl
adc
jno
fidivs
out
ss
mov
inc
xor
mov
push
sub
ds
sub
bound
decl
ficompl
pop
lods
loope
bound
nop
std
push
icebp
shr
in
rorl
jmp
mov
ljmp
xor
dec
popa
cli
rcr
shr
mov
adc
mov
push
in
jg
dec
cld
jmp
popaw
in
push
ret
lcall
decl
stos
arpl
pushf
insl
ja
xchg
mov
scas
pop
loopne
xorl
jmp
ret
test
dec
in
push
add
cmc
loopne
sub
fldt
cmpsl
push
xor
sub
and
aas
es
into
lahf
out
fdivrl
xchg
mov
mov
sub
cmp
mov
lods
negb
movsb
push
mov
rcl
lods
sbb
cmpsb
jb
fld
ret
decl
xchg
fcoms
xchg
mov
repz
dec
dec
jmp
push
gs
pushl
cld
rorb
ja
rclb
out
pop
mov
in
cmp
bound
negb
push
mov
jmp
mov
add
sbb
out
mov
movl
cld
das
cmpsb
mov
and
add
arpl
roll
inc
jne
sbb
push
pusha
mov
sub
orl
sti
mov
mov
repnz
mov
inc
in
pushf
push
ds
into
sahf
adc
es
jg
in
lds
push
sub
inc
mov
push
out
adc
push
hlt
xchg
dec
inc
mov
cmpsb
aam
pushl
lods
aas
aad
mov
fcoml
or
cli
in
sahf
inc
adc
jg
inc
hlt
mov
mov
mov
hlt
xchg
enter
or
xchg
decl
call
lret
xor
test
mov
mov
mov
cld
xor
and
repnz
xchg
cmp
mov
fcmovnbe
xor
push
sbb
addr16
test
adc
insb
ljmp
mov
jb
cld
movsl
and
adc
mov
dec
sbb
add
decl
stos
xchg
lret
xor
jge
inc
jno
les
xor
jge
adc
clc
lods
xchg
ja
decl
jo
loop
inc
sbb
and
jmp
jns
jb
iret
pop
loopne
jle
out
fisttpl
incl
shl
and
cld
and
hlt
insl
addl
leave
fmul
xchg
add
xchg
or
cli
or
out
fwait
jns
lods
inc
mov
mov
sbb
int
add
andb
xor
fldt
call
jo
mov
cmp
pop
mov
adc
shlb
pop
insl
stc
dec
lret
pusha
and
stos
test
mov
dec
stos
fsubr
enter
inc
in
jle
cmp
mov
std
loope
clc
pop
cld
ljmp
cmpsl
call
pushf
loope
mov
add
push
xlat
push
fcomip
das
and
loop
or
xorb
xor
sbb
ljmp
pop
jl
fldenv
addr16
dec
ret
dec
xchg
xor
mov
ljmp
mov
incl
and
hlt
inc
mov
js
inc
mov
dec
mov
mov
lcall
cmp
sub
mov
in
cld
push
stos
xorb
rolb
xchg
sbb
jmp
stc
inc
mov
fld1
dec
mov
in
loop
insb
test
shlb
cmp
pusha
in
hlt
mov
test
jl
decl
push
add
or
xchg
rorl
or
cmp
outsb
faddl
incl
sbb
mov
popf
stos
inc
mov
in
sub
jne
dec
push
dec
pop
enter
sti
sub
popf
xlat
and
push
das
lock
mov
mov
aas
lock
inc
stos
push
mov
call
fcoms
jbe
js
jecxz
adc
sbb
cmp
add
das
cli
decl
int
cmpsl
cmp
test
mov
dec
jg
mov
fisttpl
mov
ud0
jnp
xor
cmpsb
fisubs
test
mov
push
cmp
sub
xor
sti
pusha
repnz
inc
cmp
push
fildll
pop
cwtl
cmc
and
stos
push
dec
push
adc
and
cmp
decl
pop
inc
rorb
add
dec
cmp
pop
fnstcw
std
and
mov
lcall
mov
mov
nop
in
pop
shrb
stos
les
pushl
mov
mov
stos
jge
push
daa
pop
xor
imul
cwtl
sti
push
mov
rcrb
call
sub
pop
call
xchg
xor
xor
ljmp
mov
decl
push
scas
mov
arpl
cmp
mov
mov
sahf
out
insb
shlb
call
sub
stos
rcr
jecxz
push
cmc
sub
push
lcall
dec
scas
cld
jmp
les
dec
outsb
pop
mov
js
dec
push
sbb
lods
sub
test
jge
lret
pushl
nop
push
pop
or
jecxz
push
and
xchg
loopne
push
fidivs
pop
repnz
popf
mov
lcall
inc
js
inc
jecxz
and
jae
cmp
insl
mov
adc
dec
bound
out
clc
pushl
shlb
ret
iret
insb
mov
cmp
lcall
ss
pop
push
cld
sub
push
xchg
push
int3
notl
out
sub
mov
repnz
lcall
sub
cmp
ljmp
pop
in
and
or
das
lods
mov
mov
push
nop
dec
xor
cmp
sbb
ja
xor
xchg
push
outsb
mov
mov
in
jo
testb
push
loop
jno
pusha
dec
shl
int
push
jg
mov
mov
jle
mov
mov
data16
shrl
nop
test
push
inc
frstor
mov
fwait
clc
push
dec
or
cli
lds
xlat
xchg
mov
enter
icebp
push
inc
call
dec
pusha
repz
mov
ljmp
insb
fdivrs
lret
or
mov
mov
rcrb
xlat
jno
adc
test
jl
shrb
pop
sub
popf
jecxz
pop
call
add
mov
xorb
dec
scas
inc
sbb
dec
jo
cmc
xlat
gs
mov
bound
sti
outsl
call
inc
shrb
jle
mov
pop
cltd
shl
dec
add
mov
imul
cmp
jb
lahf
aas
jb
adc
int3
push
mov
jle
or
lret
and
push
ja
jp
pusha
dec
fwait
add
dec
mov
mov
xchg
loope
shll
hlt
decl
pop
stos
xchg
xor
jp
imul
push
inc
push
ss
sub
test
push
adc
lcall
in
adc
data16
pop
ret
cwtl
xchg
dec
cmpl
adcb
jmp
out
inc
dec
jns
out
das
and
mov
adc
outsl
stos
lock
fisttpll
add
pop
jp
ljmp
testl
and
sbb
adc
shlb
sub
hlt
jmp
into
xor
push
mov
test
jae
scas
imul
pusha
xor
fisttpl
mov
mov
fldcw
jno
jbe
lods
popf
inc
push
mov
inc
test
jp
jmp
xchg
std
ret
clc
push
mov
sar
outsl
clc
imul
orl
push
jg
jg
cwtl
cmp
lret
cs
ret
jno
sub
mov
jmp
out
pop
inc
jmp
int3
lret
daa
add
iret
cwtl
dec
xchg
call
es
sbb
push
mov
mov
sub
dec
mov
addr16
xorb
fists
incl
jmp
mov
xor
mov
dec
lcall
inc
xchg
jns
cmp
lds
mov
icebp
sbb
cli
lcall
hlt
and
jb
pop
repnz
push
js
xlat
arpl
jb
dec
adc
mov
enter
incl
mov
pop
icebp
faddp
xchg
or
mov
rorl
incl
mov
outsl
in
stos
das
pusha
jg
mov
fisubrs
lahf
inc
ljmp
cmpsb
pusha
xchg
sarl
gs
enter
lret
cltd
imulb
insl
movl
call
shlb
int3
and
das
psrld
xchg
pop
cltd
ljmp
mov
lods
push
stos
mov
mov
pop
mov
arpl
sub
stos
dec
fst
cmp
lret
lods
lods
pop
pop
cmpsb
ret
xor
sub
stos
fdivs
decl
mov
imul
lock
test
mov
sub
gs
leave
adc
movsb
adc
jg,pn
jnp
xor
adc
xchg
mov
ljmp
decb
push
lods
call
ret
dec
xchg
lcall
pop
imul
fadd
xchg
cmpsl
fldcw
fcompl
or
lds
sub
and
pop
xchg
push
cmc
shrb
jmp
vunpcklpd
xor
inc
bound
xor
out
cmpsl
insb
and
sub
pushl
addb
repz
xchg
push
out
loope
enter
dec
xchg
sub
stc
divl
push
cmp
mov
imul
push
out
dec
mov
fistl
stos
jnp
mov
cmp
add
aaa
faddl
dec
aad
mov
ss
cs
mov
mov
fistl
or
or
ljmp
outsb
je
or
jecxz
lcall
sub
lods
xor
mov
mov
mov
call
cmp
lods
sahf
dec
xchg
cmpsb
adc
sbb
pop
mov
mov
in
cmp
mov
dec
out
lock
es
dec
fdivr
scas
inc
sbb
mov
or
adc
hlt
ljmp
mov
cmp
adc
dec
and
xchg
psllw
loop
ljmp
pop
jne
jnp
div
jne
jle
test
and
mov
xchg
fwait
jg
mov
adc
sub
scas
stos
insb
xor
sahf
loope
pop
aam
test
ljmp
clc
inc
lahf
xor
imul
adc
imul
es
fidivrs
incl
test
push
lds
pop
test
jno
pop
movsl
sbb
sar
sbb
das
or
in
mov
outsb
aad
pop
mov
enter
bswap
mov
pop
jmp
pop
cmp
repnz
push
mov
test
ret
call
fistpll
mov
sbb
fcoml
mov
mov
sub
xchg
mov
decl
xchg
lret
push
decl
xor
dec
test
and
mov
cmp
icebp
addl
fnsave
inc
xor
ret
dec
test
sub
adc
aaa
pop
mov
incl
mov
sub
cmpsb
adc
or
lahf
andb
bound
or
sbb
fldt
pop
nop
jbe
pop
jno
or
dec
es
adc
stos
adc
cmp
dec
mov
ret
nop
adc
in
xchg
ss
je
arpl
stos
movsl
lcall
lret
lahf
xor
out
test
call
mov
into
dec
mov
test
and
sti
cltd
pop
jecxz
pop
inc
jae
enterw
lcall
cmpsb
push
addr16
shll
xchg
cmp
mov
fs
insb
xchg
shl
xchg
in
xchg
adc
decl
addb
cmc
scas
mov
jge
decl
cmp
adc
pop
inc
jmp
pop
pushf
ja
sub
nop
incl
jl
fisubl
ror
pusha
push
stos
out
daa
hlt
je
cltd
xor
test
ja
pushl
or
mov
jbe
stos
ror
xor
xor
jmp
out
loop
lcall
nop
int
mov
push
and
popf
addr16
pop
movsl
inc
add
scas
mov
orl
jl
inc
xchg
cmp
pushl
sbb
add
or
in
cmc
cmpsl
loop
push
test
sub
das
test
xchg
stc
rcrb
int3
adc
add
je
cli
imul
mov
insb
int3
mov
lcall
jmp
mov
movl
cli
jecxz
jae
in
mov
ljmp
pop
pop
out
mov
mov
out
cmp
call
inc
arpl
cmpsb
in
imul
push
aaa
out
out
ficoms
mov
mov
pop
mov
and
jnp
out
sbb
mov
cmp
je
shr
xchg
dec
test
enter
std
call
das
ljmp
clc
jl
mov
stc
movsb
xchg
cld
xor
imul
jmp
ss
sbb
and
fcmovnb
sub
inc
cld
mov
mov
mov
filds
lcall
movsb
jge
mov
call
pushl
std
mov
popf
stc
cmpps
shrl
lock
into
sbb
ljmp
xor
mov
ljmp
ljmp
out
mov
aad
jle
inc
mov
std
or
decl
inc
sahf
outsb
pop
int
mov
test
sti
inc
jg
inc
add
mov
jne
fisubrs
pop
mov
pusha
inc
lea
xchg
loop
loop
scas
in
test
incl
inc
std
popa
call
movsb
push
mov
mov
pop
cmp
sub
pushl
call
js
or
pusha
loopne
stos
imul
mov
add
pop
mov
push
fdivl
xor
adc
cmc
xchg
dec
sub
push
inc
std
lcall
or
inc
mov
fadds
data16
jg
insb
pop
xor
push
data16
fisttps
movsl
cs
lcall
repz
sbb
imul
ficomps
dec
mov
mulb
sbb
jns
and
adc
jmp
push
ja
xchg
add
cld
iret
pop
pop
stc
or
xor
jg
inc
push
jno
test
sbb
call
in
and
pop
jb
mov
xor
lea
roll
jmp
mov
mov
cld
cli
mov
push
mov
fwait
shrb
insb
mov
push
sub
movsl
aad
mov
inc
in
jns
stos
test
imul
test
or
xchg
jo
idiv
sti
mov
add
test
scas
mull
aam
jbe
dec
push
insb
inc
xchg
xchg
mov
fimuls
les
icebp
fs
les
aas
int3
or
mov
call
mov
inc
insl
or
insb
cmp
pop
popf
lods
mov
in
repz
pop
js
leave
xchg
jg
cwtl
addr16
push
mov
jmp
push
mov
outsl
jg
sbb
dec
cmp
rolb
dec
mov
cwtl
lods
dec
arpl
inc
jns
xor
jae
jmp
pop
push
pop
scas
and
bound
jns
pop
jbe
xor
call
sub
or
add
ja
cs
cmp
jmp
bound
cmpsl
mov
in
fsubrs
and
cmp
aas
out
aad
push
push
mov
test
int3
inc
push
pop
into
fwait
mov
jp
jno
test
movsl
xor
or
xchg
jno
jno
jmp
insl
rolb
mov
mov
pop
gs
movsl
outsl
cli
incl
or
shlb
mov
aad
mov
ljmp
pushl
fcmovb
jns
pop
enter
push
mov
push
test
xor
fwait
xchg
loop
lods
add
loope
ljmp
mov
es
add
pop
leave
cmp
lcall
loope
sbb
and
or
cmpsb
fbld
add
in
inc
mov
imul
lahf
bnd
mov
mov
mov
fmul
movsl
ja
xor
mov
cmp
ret
push
jmp
mov
jge
or
adc
jno
mov
or
sar
pushl
jne
lods
aas
in
jmp
inc
inc
ror
mov
xchg
add
jg
lea
and
push
adc
and
pop
mov
ret
push
call
test
incl
cmp
pop
stos
pop
jg
out
pop
aaa
add
xchg
sti
adc
mov
adc
cmp
xchg
push
inc
mov
out
pop
fs
dec
testl
lret
pop
cmp
imul
add
ret
popa
lock
push
jo
nop
sar
call
push
jmp
add
cmp
mov
or
loopne
mov
cld
jmp
imul
test
fisttps
out
sub
cltd
xor
add
fidivrl
iret
adc
mov
lods
add
xor
pop
sub
stos
mov
nop
jge
nop
pop
incl
xlat
icebp
addl
or
pop
ss
lods
jbe
dec
fldt
push
add
call
pop
sub
sub
push
push
mov
xor
repnz
out
hlt
fcomp
lcall
mov
cli
jmp
test
and
out
pop
cltd
sbb
or
jl
test
adc
test
xchg
mov
data16
lock
push
cwtl
jo
pop
fcmovne
test
stos
gs
test
jmp
aad
gs
xor
dec
mov
ljmp
or
mov
pop
mov
sbb
cmp
or
mov
int
sub
jg
hlt
scas
clc
lret
or
add
jne
outsl
push
mov
decl
aas
mov
mov
add
pop
fwait
dec
adc
jbe
repnz
and
mov
jmp
mov
stos
shl
sarl
sub
adcl
push
dec
inc
jmp
cmpsb
dec
push
ljmp
jns
sbb
ds
sbb
jo
push
popa
dec
cmp
scas
mov
lret
popf
decb
mov
push
sahf
lret
push
pop
lcall
jp
or
mov
aam
dec
push
lea
gs
push
cld
out
push
das
rorb
jnp
ds
and
and
jp
mov
xchg
mov
fmuls
int
repnz
pop
insb
fsubrs
loope
mov
das
mov
fwait
icebp
jl
jge
dec
mov
jo
jmp
push
and
jns
lods
and
fstpl
scas
jbe
or
stos
or
dec
enter
jnp
adcb
adc
sbb
outsb
int3
out
fidivl
out
mov
sub
stc
and
lcall
push
jae
dec
mov
and
dec
ss
xchg
insb
dec
sahf
sbb
xlat
iret
add
dec
mov
xorb
cmpsb
dec
jg
jmp
mov
lods
dec
jne
outsb
sbb
xchg
cmp
sub
xor
das
cli
push
adc
or
jne
loop
and
movsl
xchg
out
lcall
inc
shrl
cmp
leave
sarl
jmp
xchg
sub
lods
cmp
jmp
arpl
stc
sti
pop
sbb
push
iret
xchg
aam
pop
adc
mov
sti
loopne
test
jae
sbb
in
jg
mov
outsl
push
cmp
out
or
mov
pop
mov
mov
pushl
xchg
cmp
imul
or
aas
dec
imul
out
jl
in
sbb
nop
sti
cs
rcll
mov
negl
and
pop
adc
add
and
decl
xor
loope
fcmovnb
aaa
test
mov
xor
pop
scas
xchg
adc
sbbb
xchg
cmp
jmp
js
push
dec
jmp
stc
pop
jp
in
dec
fs
pop
push
inc
pop
stc
inc
add
sbb
inc
pushl
mov
sbb
les
cmpsl
fstpl
jmp
fs
or
xchg
fstps
gs
jecxz
jmp
and
mov
out
daa
or
in
pusha
inc
cmp
lret
dec
call
aas
pop
push
lret
add
jnp
lret
mov
push
pop
mov
incl
cli
pusha
pusha
movsb
jo
and
pop
inc
test
and
popf
push
xor
nop
sub
jb
lcall
adc
rcl
inc
aaa
aam
sar
addr16
clc
sbb
fadds
sub
jg
lcall
pop
ds
and
int
mov
add
stos
pushf
jno
xchg
cmp
mov
pop
sbb
sub
mov
dec
fimuls
das
shrl
inc
icebp
incb
mov
ljmp
rclb
lods
jmp
pop
pop
mov
jl
lods
in
dec
dec
push
fwait
cli
inc
mov
aaa
xchg
fidivs
fwait
jb
cli
mov
pushl
and
mov
xchg
xchg
and
shll
enter
call
inc
or
push
jecxz
fistl
insb
or
imul
xchg
fcmove
loop
nop
inc
cmp
cmp
into
jl
mov
fcompl
adcb
or
mov
clc
xchg
jmp
ljmp
add
xchg
shlb
movsb
testb
cmp
push
cmp
mov
push
in
stos
dec
pushl
mov
sbb
flds
es
jb
push
fiadds
rorl
andb
sbb
aaa
ret
jg
daa
pop
fcmovu
loopne
pop
ljmp
dec
push
or
lds
aaa
pop
in
adc
ljmp
push
mov
add
add
jb
aaa
mov
leave
sub
pop
and
ljmp
ds
sbb
mov
ficoms
push
lret
or
pop
push
cmpsl
clc
imulb
idivb
cmpsb
out
inc
sub
into
mov
call
pop
add
adc
jmp
out
lods
int
les
xchg
cmp
push
out
sbb
jbe
jg
std
pop
cmp
adc
iret
pusha
sub
add
into
jne
sub
pushl
sub
push
inc
mov
ret
cmp
lcall
inc
leave
cmp
cmp
je
out
adc
lret
loopne
ljmp
aad
dec
outsb
std
mov
and
mov
or
nop
add
lcall
mov
rorl
rcl
mov
xor
test
scas
adc
dec
scas
and
jmp
xorl
sti
fucomp
xor
inc
ds
xchg
sahf
loopne
hlt
mov
cltd
clc
unpckhps
mov
stos
mov
or
xlat
push
shlb
out
sarl
xor
or
gs
into
ret
insb
add
push
sti
ljmp
out
mov
dec
xchg
mov
and
adc
rolb
int
xchg
in
js
out
mov
inc
sub
sbb
test
xlat
js
cltd
in
or
fisttpl
addr16
ljmp
push
subl
bt
jg
xor
popa
aas
inc
and
ret
stos
xor
inc
pushl
cld
aas
pusha
xorl
imul
loope
cmc
and
insb
xchg
sub
push
pop
pop
sub
jns
sub
add
mov
les
adcb
jg
hlt
or
lret
sub
divb
sbb
pop
cmpsl
js
cmp
inc
cmp
pusha
add
incl
cmp
mov
movsl
push
loope
jbe
inc
ret
outsl
mull
mov
test
push
repz
push
daa
imul
jne
add
pop
outsb
jp
jmp
xor
mov
cmp
xchg
movsb
insb
out
out
jmp
and
aaa
popf
dec
jle
mov
loop
pop
clc
int3
sub
data16
mov
push
js
in
rclb
ffreep
dec
pop
mov
scas
lods
xlat
fists
xlat
insl
lock
pushl
add
jmp
in
inc
sbb
scas
outsb
push
leave
pop
clc
and
xchg
xchg
cli
enter
dec
mov
or
cld
movsl
xchg
pop
sarl
jmp
sbb
pop
mov
sub
xchg
es
arpl
cmp
aad
and
call
lods
adc
inc
push
shll
rclb
cltd
push
xor
jb
movsl
mov
pop
jmp
mov
add
icebp
or
outsl
nop
lahf
add
sarb
xor
push
mov
mov
push
add
call
ret
inc
pop
iret
lret
lds
es
xor
dec
out
cli
decl
fs
mov
cltd
outsb
inc
fdiv
test
dec
pop
pushf
mov
lods
clc
push
jno,pn
in
aad
add
inc
andl
pop
sub
les
ja
fdivrl
and
rorl
outsl
jnp
stos
outsl
loop
pop
sbb
jmp
mov
jbe
in
sbb
or
jecxz
stos
aaa
loope
int3
mov
lcall
lcall
sahf
and
ljmp
xor
push
mov
dec
je
push
pushl
mov
mov
outsb
shll
mov
lgs
xor
faddl
inc
jmp
js
pop
cmp
repnz
dec
mov
sub
call
sbb
push
xchg
cmp
dec
jle
scas
cmp
jno
lahf
inc
sub
mov
mov
ljmp
mov
in
or
add
incl
loopne
loope
out
push
je
repnz
gs
push
lods
fscale
pop
jnp
xor
adc
jns
add
push
xchg
add
shlb
pop
out
cmpsb
jmp
pushl
lock
sub
dec
test
add
pop
jns
test
movsl
or
jno
incl
cmpsl
rcrl
repnz
jle
pusha
or
xor
js
loope
call
cmp
pop
lahf
inc
in
sbb
es
xchg
cmpsl
js
mov
roll
mov
xor
rcrb
fisttpl
inc
xor
sarl
int
aas
cmp
inc
jns
pop
js
add
pop
stc
push
push
or
test
and
mov
fwait
outsb
sti
test
int
bound
xchg
rep
or
mov
decl
insl
pushf
cmpl
or
mov
xchg
ja
test
jl
mov
inc
fwait
xor
push
hlt
ljmp
nop
fdivl
decl
bound
mov
es
or
out
gs
imul
cmpsb
mov
adc
call
jb
stos
mov
jg
jne
cmp
int3
jp
xlat
cmpsl
popa
sbb
mov
aaa
add
movsl
outsl
mov
repnz
xchg
loopne
outsl
mov
loopne
jecxz
mov
lahf
int
in
filds
repnz
mov
repnz
in
sbb
dec
push
addps
clc
lcall
pop
mov
ret
stc
movsb
movsl
jne
xor
stos
and
out
ljmp
push
and
les
mov
aam
in
cmpsb
test
jae
push
pop
jle
push
push
xlat
testb
xor
in
xchg
in
fwait
mov
dec
cwtl
ret
jg
cli
add
mov
xor
leave
xor
dec
jg
jmp
mov
jg
xor
and
hlt
push
shrb
add
jnp
out
fs
cli
mov
outsb
icebp
push
jle
mov
pop
jb
adc
nop
jbe
addr16
cmp
ljmp
psubw
pop
inc
leave
int
add
aas
test
sbb
in
sub
decl
inc
xor
and
cmc
fmul
insb
jno
adc
rorl
cltd
cmp
decl
sub
int
outsb
push
cld
dec
mov
popa
aad
insl
mov
cmp
test
test
sti
pushl
pop
insl
dec
sahf
dec
dec
push
and
mov
scas
xlat
lods
or
fwait
daa
sar
fldcw
and
fsubs
mov
mov
sbb
xor
xchg
lcall
dec
pop
in
mov
ja
add
jge
dec
xchg
stos
xchg
aas
mov
lcall
iret
push
push
movb
lahf
icebp
popa
adc
dec
incl
iret
mov
or
movsb
cmp
icebp
xlat
jg
scas
xchg
cmp
js
shlb
incl
ss
adc
imul
add
dec
sbb
lcall
sbb
aam
lea
mov
test
movl
sarl
sub
cmp
mov
mov
js
iret
mov
push
mov
rol
fldt
cmpsb
lcall
dec
cmp
ret
adc
popf
mov
push
scas
divl
push
xor
leave
pop
insb
shrb
inc
pop
and
add
icebp
or
xchg
xchg
xor
pop
dec
pop
jne
or
ljmp
insb
orl
rorl
leave
pop
sbb
jae
test
mov
xor
rorl
cmp
popf
and
inc
xchg
add
mov
mov
push
and
insl
loopne
call
ss
sub
adc
mov
imul
push
cmp
fs
xchg
add
loope
fidivl
fdivl
iret
jp
cwtl
mov
cmp
cmp
test
imul
push
into
mov
test
jge
inc
mov
shll
iret
xlat
inc
out
push
mov
dec
addr16
sbb
insl
repnz
ljmp
xchg
and
pop
and
dec
sbb
stos
test
movsl
leave
incl
fisttpl
mov
mov
ja
mov
sbb
xchg
aas
idiv
jmp
cmp
and
pop
pushf
xor
rep
out
fldl
dec
jmp
sub
xor
jg
incl
xor
addr16
jns
add
push
dec
insl
icebp
and
icebp
jnp
pop
jmp
sti
cmp
shll
dec
ficoms
data16
scas
js
add
std
inc
in
addl
sub
dec
lcall
mov
sahf
cld
pushl
std
test
ret
push
nop
push
test
ret
fadds
mov
mov
adc
or
ljmp
push
hlt
sub
cltd
stos
pusha
pop
xchg
add
mov
aaa
xchg
imul
test
lcall
idivb
insb
xor
stos
or
sbb
ljmp
pop
stos
ja
inc
movsl
mov
pop
dec
mov
lret
outsl
or
jl
and
mov
popf
jg
lds
mov
mov
xor
lcall
orb
push
movaps
popf
out
sub
mov
adc
or
xor
and
call
js
jle
andl
and
xchg
leave
cwtl
outsl
mov
scas
sarb
decl
into
stc
mov
or
push
mov
je
pop
sbb
and
adc
decl
lock
inc
shll
cmp
mov
add
mov
inc
call
jmp
inc
cmpsb
jno
test
xchg
or
and
dec
jmp
jae
fisubs
dec
lahf
std
add
push
and
shll
cltd
mov
adc
lret
sbb
call
or
cli
leave
mov
dec
and
or
or
mov
fisttps
cmp
jmp
ljmp
mov
jno
sbb
jno
sbb
push
dec
xchg
fmull
ljmp
stc
xchg
and
call
and
lods
cmp
mov
sbb
sti
lcall
decl
jb
xchg
leave
fwait
sahf
outsb
xchg
sbbb
dec
xchg
sbb
mov
add
decl
imul
mov
pop
adc
jl
mov
add
sub
ljmp
fisttps
stc
hlt
es
inc
lods
cli
dec
jo
sbb
inc
popa
cmpsb
daa
popa
orb
and
xor
fs
adc
and
jae
movsb
jle
mov
jp
lcall
jns
mov
adc
jecxz
cmp
cmp
popa
test
jge
aas
ret
call
stos
sar
sub
cli
out
sub
aaa
xchg
outsl
sarb
les
xor
clc
inc
and
fwait
cli
adc
gs
scas
xor
call
push
sbb
lock
mov
insb
ja
test
jo
jmp
pushf
ret
out
clc
decl
push
adc
adc
jne
push
inc
cmpsl
mov
scas
filds
jmp
lahf
pushf
mov
xchg
jbe
sbb
jg
xor
add
aad
imul
dec
les
sub
dec
xorl
ljmp
mov
jl
popa
cwtl
sahf
sub
fnsave
mov
bound
xchg
ljmp
cmpsl
adc
inc
mov
popf
test
mov
int
out
test
pop
cmp
repz
mov
in
repz
loopne
rcll
loop
pushl
jo
jle
xor
mov
popf
repnz
add
leave
js
lods
lahf
jp
dec
mov
fcomip
inc
jae
push
xchg
mov
dec
sbb
jecxz
leave
aam
call
fs
lock
aam
jne
ss
lock
pop
sbb
mull
decl
test
fldl
inc
stos
jge
sahf
filds
repnz
enter
ljmp
rcrb
ds
push
xchg
push
mov
les
xorb
ljmp
xchg
bound
mov
add
jecxz
inc
nop
lds
xchg
push
lret
xchg
xor
sub
decl
fs
mov
xchg
ficompl
fwait
xor
fildll
cmp
mov
dec
xor
hlt
xchg
clc
pop
cld
dec
imul
adc
fwait
ljmp
dec
jo
decb
ret
or
lcall
fdivrl
xor
ffreep
mov
ret
lret
aam
ds
sahf
fisubrl
cwtl
lds
cmp
inc
jl
pop
xor
scas
or
repz
xor
pushf
loope
push
xor
test
mov
or
jle
lods
out
scas
mov
mov
lcall
cltd
adc
xorl
inc
in
out
cld
lea
mov
mov
or
leave
inc
adcb
mov
js
rolb
xchg
outsb
decl
bound
push
mov
data16
sbb
test
mov
call
xchg
lret
mov
pusha
popf
jecxz
aad
dec
dec
jg
aaa
cld
hlt
mov
fdivs
stc
mov
sbb
scas
aam
mov
mov
adc
inc
int
jl
cmpsl
mov
jecxz
ss
les
jae
gs
xchg
popa
mov
xor
or
jo
or
push
adc
xchg
leave
mov
mov
xor
lret
jle
or
in
fcoms
rcl
push
lds
ds
xchg
jmp
out
mov
aam
push
push
es
ss
insl
sbb
stos
mov
xchg
aad
or
push
das
sar
icebp
repz
cltd
les
jae
add
sub
decl
test
jg
mov
in
imul
sbbl
or
decl
rcl
hlt
mov
divl
enter
into
adcb
mov
mov
incl
leave
cli
mov
into
out
xor
add
mov
insl
mov
jmp
test
fistps
mov
es
mov
testl
push
movsb
stos
popa
icebp
pop
dec
lahf
inc
movsl
hlt
in
pop
les
lret
mov
cwtl
loope
and
lds
pop
push
clc
inc
ljmp
decl
sbb
out
notl
xor
lds
das
mov
ljmp
sar
dec
ja
inc
loop
dec
imul
mov
and
sub
add
ljmp
pop
push
mov
mov
sub
mov
imul
xchg
aas
push
testl
movsl
mov
mov
call
mov
xlat
js
cmpb
cmpl
fdivs
jg
dec
test
inc
cmp
push
nop
push
adc
cmp
dec
xchg
or
lcall
inc
shl
sub
mov
inc
xchg
outsl
pop
push
mov
ljmp
popa
mov
fldt
mov
lret
sbb
and
lcall
popa
sbb
gs
cs
repz
add
call
mov
inc
add
roll
sub
mov
pop
adcl
mov
xor
mov
dec
cld
and
push
popf
insb
fs
sbb
pop
lret
mov
hlt
jo
outsl
inc
fildl
sbb
roll
mov
ljmp
push
cmc
sub
cmp
and
jp
sbb
lods
scas
add
pop
and
cs
sub
cli
incl
dec
popf
mov
xor
testl
fsubs
xor
add
lds
and
add
mov
mov
call
lret
push
xor
cs
adc
imul
mov
test
jae
ljmp
jb
mov
jnp
jp
out
fcompl
icebp
sbb
xor
ret
xlat
call
imul
mov
and
mov
mov
imul
lahf
lcall
call
lcall
shl
addl
mov
movsl
fwait
mov
mov
lcall
sbb
mov
pushl
inc
outsb
rolb
ljmp
push
pop
lea
jg
add
sub
repz
jg
decl
iret
outsb
sub
pop
push
imul
ljmp
add
mov
out
fisubrs
outsb
mov
cmc
in
lcall
int3
xchg
out
bound
xchg
fmull
xor
jbe
in
stc
mov
adc
lods
xchg
jnp
jmp
push
aas
push
inc
pop
jo
orl
rorb
mov
scas
repz
mov
fiaddl
aas
mov
push
insb
lahf
lock
push
mov
ds
adc
sbbl
push
test
nop
sbb
adcb
mov
xlat
testb
gs
adc
sar
lcall
adc
xorl
push
adc
cwtl
lods
outsb
add
call
xlat
adc
fyl2xp1
lds
jp
xchg
cmp
inc
mov
test
sbb
decl
ds
outsl
pop
mov
inc
jne
jae
pop
and
sub
xchg
inc
cmp
lods
xor
movsb
cmp
pop
in
push
ret
adc
lds
aad
incl
leave
movsl
adc
pop
and
ret
adc
clc
fdivrs
pop
outsb
and
in
hlt
pushl
push
fs
ds
pop
cmp
cmpsb
add
aaa
mov
sbb
insb
and
in
sub
pop
lock
fsubp
mov
idivb
or
push
ss
ss
decl
cmp
out
sub
in
dec
addr16
fldcw
sub
loope
das
sar
or
sub
fsts
out
and
dec
jbe
xchg
aam
xchg
dec
mov
mov
out
into
jmp
es
ljmp
pushl
fisttps
or
inc
mov
ss
mov
cwtl
les
dec
in
add
inc
or
pushl
cltd
gs
cmovae
or
subb
jg
add
lods
inc
add
jmp
pushl
hlt
cmp
mov
scas
ljmp
rolb
push
or
xor
js
cmp
lcall
dec
and
arpl
shll
mov
push
mov
sbb
outsl
in
mov
lcall
cmp
push
imul
dec
sub
xchg
enter
sbb
imul
ds
std
mov
mov
pop
push
adc
mov
jns
das
mov
xlat
jp
inc
nop
sbb
mov
xor
fimuls
pop
lods
imul
mov
test
adc
data16
mov
fistl
xchg
inc
mov
cmp
and
cmp
js
mov
decl
dec
out
jb
jbe
cmp
rorb
imul
mov
sub
mov
decl
in
shll
cli
fisubs
aam
jns
das
mov
push
cltd
push
and
incl
cmc
pushf
stos
das
pop
inc
push
add
inc
mov
mov
mov
pusha
dec
jmp
mov
ss
jle
rclb
mov
xchg
inc
orl
xchg
gs
pop
fdivrp
pop
lahf
mov
rcr
adcl
dec
sub
cmp
add
imul
stc
insl
loop
iret
adc
aam
outsb
enter
ret
mov
jnp
int
cmp
inc
add
fbld
mov
jbe
test
ss
sbb
dec
push
xchg
lods
push
stc
cmp
xchg
test
outsb
sahf
or
loop
das
and
das
push
pop
mov
add
cltd
jg
mov
or
ljmp
js
imul
insl
outsl
dec
and
leave
pushl
loope
mov
data16
pop
jl
sbb
fsubs
mulb
push
sbb
call
dec
repnz
aas
push
pop
pop
mov
cwtl
cli
subl
push
ja
ljmp
mov
pop
inc
pusha
mov
adc
xor
jle
mov
dec
cld
insb
mov
mov
fbstp
int
ret
dec
inc
divb
lcall
pop
cmp
stc
push
js
push
fdivrs
insb
mov
mov
mov
or
sbb
shll
lcall
mov
and
dec
je
push
jmp
xchg
or
xchg
das
popf
jp
mov
lock
cmpsl
lock
stos
or
push
lcall
xor
add
jecxz
pop
and
push
aas
pusha
pop
xor
pop
cmp
shl
pop
shll
inc
decl
les
test
jne
mov
js
cmp
out
push
cmp
ret
push
ljmp
cmp
mov
aad
add
and
jns
stos
sti
in
push
int
pusha
xor
adc
push
and
dec
dec
jp
shr
clc
movsb
fsub
mov
mov
xor
lcall
xchg
into
es
mov
mov
and
pop
inc
pushl
popa
cmp
fistpll
in
cli
inc
psllw
jmp
sbb
xchg
inc
mov
scas
cli
mov
dec
stc
lret
jge
lret
dec
mov
push
sar
loope
jp
decl
decb
ja
add
imul
ret
fsubrp
pop
mov
or
inc
call
movsl
ljmp
int
sbb
sbb
mov
ror
push
or
out
incl
or
jp
mov
std
sbb
ficompl
fisubrl
jg
push
cli
ljmp
gs
sbb
popa
dec
pop
mov
insl
pop
adc
imul
mov
out
push
xchg
inc
mov
jle
mov
out
movb
lods
mov
scas
cmc
call
sbb
int3
mov
fdivs
sub
das
dec
andl
pusha
sub
decl
or
push
inc
mov
jo
testb
jecxz
pusha
and
call
movsl
lea
jo
mov
fsts
sbb
xor
imul
jg
mov
loope
jecxz
adc
lret
add
xor
fstps
decl
insb
in
aam
xorb
cmp
loope
fisubrs
adc
mov
pushf
or
pop
std
imul
mov
cmpl
test
insb
mov
decl
mov
push
mov
imul
shlb
and
xlat
adc
inc
add
cmp
enter
cmp
decl
push
adc
pushf
sbb
push
scas
shrl
xor
mov
pushl
jns
dec
jne
aaa
jb
sbb
sub
aam
in
mov
xchg
mov
jno
out
cli
inc
mov
das
scas
jae
popf
cmc
mov
mov
jb
push
pop
orl
mov
mov
sub
stc
stc
iret
lods
insb
daa
cli
xor
or
pushl
lea
mov
data16
or
out
pop
xor
aaa
fcomps
xchg
xor
insl
sti
jmp
inc
dec
cmpsl
sub
cmp
dec
jbe
and
cltd
adc
cmp
xchg
ss
in
jmp
xor
inc
call
sub
add
and
pop
dec
imul
dec
gs
cli
in
mov
and
out
sahf
cli
lods
adc
int
out
cmpsl
data16
jo
lcall
sub
xor
sar
xchg
pusha
movl
out
push
sti
fdivl
hlt
mov
rorb
xchg
inc
arpl
sahf
sub
shlb
in
insb
jmp
or
or
lcall
dec
fisttpl
pop
pop
jg
mov
sub
movsb
roll
sub
xor
ds
and
push
sub
aad
or
sbb
test
dec
insb
and
adc
sahf
incl
xchg
testb
jbe
outsb
iret
aas
jecxz
mov
mov
into
in
nop
add
pop
xor
fldcw
orl
cmp
cmc
fbld
lods
mov
call
ljmp
gs
sub
aas
lret
pusha
imulb
xchg
sahf
scas
or
xorb
aam
decl
mov
cmp
clc
dec
mov
addl
dec
lcall
inc
lret
int3
les
cmp
lock
mov
test
in
aam
cmpsl
adc
scas
clc
lcall
lock
xor
jnp
mov
stc
mov
mov
enter
jl
enter
rep
pop
shll
clc
imull
incl
add
outsb
and
inc
cmp
mov
mov
mov
ljmp
out
in
lods
xchg
std
ljmp
cs
out
pop
int
push
pmaddwd
fistps
addr16
cmp
ficompl
push
addb
push
lods
clc
push
ljmp
xchg
adc
adc
fdivl
cld
mov
fldcw
xor
call
lcall
xchg
pushf
je
ss
jge
in
mov
repz
lods
adcb
add
adc
call
mov
dec
sbb
inc
inc
aad
mov
icebp
adc
jmp
std
jbe
test
sbb
lahf
std
push
sbb
sti
out
les
sarb
pop
clts
out
clc
jmp
arpl
mov
stos
mov
jb
outsb
cmp
cmp
ficompl
sbb
decl
add
jl
outsl
xchg
in
ffreep
popa
jo
loopne
fistpll
adc
mov
xchg
push
inc
in
in
gs
fsubl
dec
and
mov
xor
subl
adc
loope
push
bound
iret
sbb
es
xchg
cmc
lret
bound
xor
inc
adc
mov
cmc
sub
dec
les
jnp
movsl
enter
stc
arpl
decl
mov
add
stos
rcrb
dec
pop
subb
and
fcmovu
mov
jbe
adc
les
fcompl
or
fwait
fwait
add
lcall
mov
sbb
and
fildl
andb
and
push
test
xor
lcall
dec
mov
mov
jb
mov
orl
pushl
adc
mov
mov
dec
ret
xor
out
call
sbb
pop
repz
inc
mov
mov
and
push
inc
jae
insl
sub
jno
jmp
hlt
dec
ljmp
shlb
or
notb
pop
mov
xchg
pop
push
fwait
pop
aaa
arpl
fcomip
lcall
pop
pop
jnp
rep
xchg
jle
mov
xchg
das
push
mov
call
fidivl
bound
cmovo
bound
decl
movnti
mov
lret
and
or
cmc
pusha
dec
neg
shrb
mov
call
push
sbb
les
scas
je
push
imull
push
push
inc
mov
jmp
mov
into
inc
dec
push
in
xchg
mov
xchg
pop
loope
push
cmp
pop
fcomip
outsl
push
lret
test
fwait
mov
inc
sti
nop
push
sub
or
ljmp
rclb
and
pcmpgtd
jns
clc
xlat
cmp
mov
decl
mov
adc
decl
cmp
pop
mov
cmp
pop
cld
cmp
loope
pusha
push
dec
jnp
insl
cmpl
and
popf
or
cmp
and
inc
leave
insl
mov
lcall
rcr
lods
inc
test
ret
jge
jno
xchg
push
sbb
mov
fistpl
clc
mov
clc
xchg
sub
push
outsb
roll
cmp
call
sbb
cmp
pop
testb
out
pop
fcmovu
xchg
add
lcall
sub
and
push
pushf
lods
rorb
nop
pusha
aaa
jmp
fcomip
call
mov
adc
data16
aas
inc
pusha
inc
pop
jne
call
ja
daa
gs
sub
jl
mov
xor
pop
int
and
in
lcall
adc
gs
inc
loopne
mov
and
cmpsl
jo
add
push
and
xchg
pop
popf
xchg
cmc
out
out
aad
mov
mov
sarb
push
aad
loop
jge
mov
cmpsb
lds
repnz
mov
jmp
loope
pop
or
jnp
add
ja
dec
mov
push
nop
mov
call
add
pop
cwtl
sub
sti
xchg
mov
cli
int
psraw
fildll
fldl
sbb
push
dec
mov
outsl
xchg
test
mov
sub
in
cmp
mov
not
aaa
aaa
push
or
stc
sarl
lret
dec
cwtl
mov
nop
sbb
repz
ljmp
mov
in
sbb
in
repz
out
arpl
jnp
fcmove
movsb
mov
fs
in
jns
adc
and
push
lods
dec
stos
mov
add
adc
inc
sbb
ja
jno
cmpsl
xchg
inc
mov
mov
in
out
lret
add
or
dec
movsl
call
pusha
clc
xchg
dec
xor
mov
scas
fldt
in
adc
leave
xor
pop
jmp
cmp
pop
sti
mov
jl
not
pop
dec
pop
or
mov
push
xchg
cs
sbb
jmp
das
pop
cmp
jmp
ror
shr
mov
jmp
idiv
lcall
mov
ds
mov
cs
cmp
cld
jge
dec
mov
call
lods
mov
mov
mov
inc
pop
fcompl
in
loope
int3
add
addb
pushl
cmp
xor
push
in
jbe
jae
dec
imul
jo
xchg
int
rep
dec
or
fdivrl
imul
scas
incl
mov
jg
sub
add
mov
inc
inc
lret
sub
inc
or
lds
jmp
pop
mov
outsb
scas
sbb
and
out
fildll
js
jg
jecxz
mov
jmp
out
and
lcall
sub
inc
pop
loopne
fisttps
xor
pop
sub
in
jl
stc
call
cmp
imul
dec
adc
ljmp
sbb
and
xchg
out
cld
std
out
cmp
or
or
mov
stc
lcall
pop
in
dec
imul
cld
xchg
inc
repz
fadds
out
xor
mulb
cmp
pushl
shlb
inc
stos
shrb
pop
repz
lret
fnsetpm(287
adc
xchg
cmp
enter
jg
out
dec
or
adc
test
out
inc
lods
cmp
cmp
lcall
pop
sub
adc
repnz
mov
imul
sbb
fdivrp
jg
inc
mov
xor
js
int
or
sbb
int3
xchg
or
mov
push
hlt
pop
arpl
int3
imul
pop
xor
nop
lea
cld
pop
movsb
jno
out
js
shlb
mov
dec
test
lea
and
push
push
and
inc
les
sub
movsl
aam
clc
push
pushf
or
movsl
ret
mov
popa
fistl
call
adc
out
push
repnz
sub
mov
ret
bound
push
push
gs
jge
pushl
pop
jg
and
and
pop
int3
daa
jne
repz
enter
dec
adc
lods
dec
cltd
incl
fs
push
imul
outsb
cmp
inc
sub
pop
fstpl
cmp
xchg
sub
test
decl
lock
adc
lcall
ja
bound
cltd
in
or
sub
lock
lods
mov
push
cmp
es
fwait
test
mov
lods
fucomp
in
jg
xchg
pushf
jns
dec
sbb
loop
std
jno
out
pop
mov
into
adc
mov
pushf
dec
add
xor
xchg
int3
lcall
ljmp
popf
idivb
stos
fcom
stos
push
in
mov
test
std
adc
incl
movsl
nop
adc
out
jns
mov
pop
xor
nop
mov
aas
and
mov
clc
fwait
or
pop
aad
out
push
pusha
push
sub
popa
dec
mov
aam
mov
cld
mov
ljmp
xor
lea
jecxz
dec
mov
jg
decl
xor
popf
mov
mov
leave
or
mov
lret
addb
pop
ljmp
hlt
sbb
inc
xor
lcall
or
mov
imul
repz
jo
push
fwait
mov
lret
lods
mov
push
out
jl
mov
push
mov
iret
cmp
xchg
cmp
pop
mov
cli
ljmp
pop
and
adc
sti
cmp
add
mov
hlt
pusha
ja
imul
cwtl
ljmp
push
icebp
mov
xchg
or
jp
sti
add
pushf
pop
stos
cld
cmp
mov
ljmp
sar
test
outsl
cmpl
and
and
cmp
pushl
test
inc
gs
adc
cli
aad
ljmp
les
outsb
xchg
and
or
dec
or
das
mov
jo
mov
add
out
xchg
aaa
sarb
jae
das
scas
mov
pop
push
std
ljmp
out
inc
movsl
testl
xor
inc
movsb
xchg
xchg
push
mov
cmp
jae
xor
push
xchg
jo
orl
ret
mov
mov
push
out
movb
pop
push
sub
lds
jge
add
push
ret
test
cwtl
push
inc
pop
mov
inc
test
out
push
fsubrl
jbe
scas
or
and
incl
into
push
scas
and
dec
push
aas
testl
test
lock
inc
sbb
inc
gs
push
add
sub
enter
cmpsb
lock
in
and
lods
xchg
push
jge
xchg
jmp
inc
ds
call
cmp
pushf
mov
test
lcall
fdivrl
adcb
xor
scas
sti
mov
test
cli
adc
or
loope
xchg
fcmovnbe
adc
xchg
add
mov
and
xchg
push
incl
sub
mov
into
jno
push
stos
test
lods
mov
shr
cmovs
jmp
test
stos
jo
mov
cltd
pop
pop
jmp
add
repnz
jb
lea
inc
fnstenv
jmp
push
pop
sahf
popl
movsb
imul
and
mov
add
sub
inc
pop
je
and
das
cwtl
insb
into
pushf
incl
repz
rolb
icebp
sarb
xor
mov
test
xchg
pop
push
jnp
jle
lods
stc
dec
xor
or
xchg
mul
rorb
jmp
mov
lcall
sbb
ljmp
movsb
nop
jmp
incl
xchg
dec
js
mov
iret
dec
insl
sbb
mov
outsl
sahf
jle
pop
xor
jge
cwtl
adc
int
cmp
aam
mov
sbb
das
cli
lcall
xorl
mov
cltd
or
mov
jno
push
lcall
sub
aad
xchg
loopne
pop
xor
and
aaa
push
cmp
es
push
in
cmpsb
jp
call
xchg
hlt
jmp
or
or
mov
leave
adc
hlt
mov
jecxz
cmp
xchg
sbb
sub
mov
sti
dec
cli
pop
aaa
jg
and
mov
sub
sub
loopne
decl
mov
insb
xchg
mov
sbb
daa
daa
adc
push
mov
cld
cmpsb
jbe
pop
or
stos
hlt
mov
jecxz
cmp
jg
loopne
scas
mov
add
inc
insl
inc
add
ror
sub
add
andb
jg
in
decl
cmp
or
insb
out
mov
jg
sarl
int
fisttpl
roll
jbe
test
push
or
push
xchg
loope
int
pop
gs
decl
shlb
or
out
dec
fidivrl
shlb
mov
cwtl
or
shll
call
push
insb
test
add
loop
ja
and
and
mov
push
out
cmc
inc
pop
into
xlat
mov
or
lret
cwtl
xor
jmp
add
clc
idiv
fstps
add
mulb
cwtl
stos
clc
pushf
or
xor
lcall
aam
pop
aad
cmpsl
push
add
add
outsl
inc
jg
lds
fildll
and
mov
addr16
push
mov
or
in
mov
jae
push
insl
decl
mov
daa
test
arpl
mov
negb
jo
repz
and
mov
push
cli
mov
nop
in
lock
std
mov
jl
jne
cmpsb
loop
sbb
jg
lcall
lods
adc
cmp
adc
add
vdivps
mov
jmp
test
jne
sub
sub
rcrb
sub
jnp
pop
mov
out
mov
in
and
sbb
imul
add
das
es
popa
xchg
xlat
leave
jb
ret
add
inc
cmpsb
push
adc
cmp
rorb
sbb
cmp
and
add
imul
or
jecxz
dec
or
aam
test
and
mov
cmpsl
sub
sub
stc
mov
mov
push
mov
ja
pop
test
dec
pop
jbe
sub
cmp
push
jo
jmp
insl
jb
mov
addr16
inc
cmp
cs
cltd
loopne
repz
jmp
mov
mov
mov
lret
xchg
ja
imul
int3
aas
cmp
incl
inc
inc
pushf
cs
fistps
inc
adc
sub
rcr
sbb
insb
mov
js
fsubrs
jno
pop
mov
test
sbb
arpl
xchg
adc
pushl
pop
fsts
cwtl
out
stos
xchg
lahf
ret
es
mov
push
or
add
lcall
add
jns
pushf
fidivrl
push
ds
and
jo
subb
mov
and
jmp
dec
rcll
adc
mov
lahf
xor
jns
sbb
mov
fisubl
int
lcall
nop
out
adc
push
pop
popf
lods
sub
lret
test
js
cmp
add
std
decl
icebp
pop
jle
xchg
lret
loopne
fsubrs
mov
xchg
dec
arpl
subb
cmp
pushl
loopne
out
or
lods
jbe
jge
js
adc
or
or
rorl
incl
sbb
mov
out
mov
jle
fisttpll
sub
in
subps
jno
mov
cmp
push
loope
stos
mov
cmp
pop
add
rorb
movsl
dec
rcrl
cli
repz
jg
cmc
jo
sub
call
mov
push
icebp
fidivs
jg
lods
adc
out
pop
cld
adc
dec
sbb
xchg
cmp
pushl
push
push
clc
sub
sti
pop
sub
std
ja
popf
add
fwait
andl
popf
cli
jnp
lcall
xchg
test
inc
pop
xchg
nop
sbb
movsl
int3
out
and
inc
loope
incl
stos
bound
inc
fcoms
lret
data16
das
fwait
sub
stos
mov
add
call
pop
hlt
imul
test
sub
adc
mov
je
inc
popa
arpl
scas
pusha
adc
sbb
sti
jae
or
lods
mov
inc
movsl
sub
mov
lock
test
nop
cmpsb
iret
jae
cmpsb
test
pop
cmp
pop
xchg
xchg
push
cmpsb
push
roll
inc
jnp
push
jle
pop
lret
stos
push
jo
jnp
push
lcall
orb
pop
or
mov
loop
insb
jl
imul
into
data16
lods
dec
idiv
dec
or
insb
inc
hlt
hlt
xchg
lret
mov
scas
mov
popf
insb
xchg
test
decl
jl
mov
or
cmpsl
push
and
sbb
sub
sub
push
adc
lcall
jnp
sbb
and
jg
pop
jne
push
test
inc
out
cmp
push
mov
sub
cld
rcrl
sar
fucomi
pusha
daa
repz
mov
add
pop
movsb
cmpsb
mov
loope
sub
scas
test
ds
sbb
mov
push
or
cmpsb
stc
mov
cmc
fcoml
hlt
pop
pop
pop
push
outsl
pop
incl
test
dec
inc
jl
scas
inc
or
cmc
scas
dec
pop
sbb
pushl
outsb
in
push
js
adc
sub
add
insb
add
test
xor
push
dec
mov
popa
fwait
incl
and
and
lds
cwtl
or
popa
stos
ja
pushf
idiv
call
jle
inc
adc
sub
pop
push
bound
xlat
sub
cwtl
dec
decl
scas
repnz
icebp
adc
jb
jmp
in
sub
jmp
xor
pop
add
cmp
outsb
sbb
bound
mov
dec
clc
mov
subb
jb
jle
jmp
fdivrs
decl
bound
mov
and
pop
out
xor
es
fiaddl
es
mov
into
add
mov
cmp
cli
cmpsl
lret
pop
jnp
mov
subl
adc
jae
in
les
sub
jne
mov
pop
mov
nop
xchg
or
jmp
and
mov
push
aam
adc
sbb
mov
subb
jb
jmp
dec
mov
aas
out
pop
nop
pcmpgtb
cmpsb
lahf
push
xchg
negb
stos
pusha
jne
and
cmp
or
ljmp
decl
out
test
mov
sbb
fldcw
sbb
lcall
inc
add
xor
test
jle
daa
ja
mov
imul
test
in
adc
xchg
mov
mov
in
mov
xor
aam
fiadds
lcall
repz
sbb
cmp
push
fisubrs
enter
mov
add
adc
repz
xchg
decl
adc
nop
inc
enter
lret
inc
lock
xchg
mov
bound
sar
jmp
lods
inc
or
inc
jmp
jl
ljmp
cmp
std
scas
mov
pop
jle
setbe
or
in
dec
insl
mov
pop
add
mov
xor
push
lcall
inc
int
das
lret
dec
push
iret
ja
cmpsl
flds
mov
add
dec
and
pop
insb
icebp
imul
popf
push
dec
lahf
es
inc
std
nop
dec
sub
adc
fcomip
or
aam
mov
jge
push
notl
gs
ss
pop
call
xchg
int3
xchg
pop
cmpsb
scas
shll
daa
adc
add
xchg
test
mov
pushf
inc
ror
lea
insb
sar
call
cld
xchg
imul
iret
stos
pushf
adc
test
incl
insb
mov
jmp
xor
test
cs
idiv
jmp
mov
inc
imul
outsb
pop
xor
cmp
push
inc
xchg
fisttpll
pushl
sbb
hlt
push
nop
adc
sub
shrb
movsb
xor
dec
loop
cs
call
lods
sbb
and
popa
dec
adc
repnz
sub
mov
adc
out
js
or
ljmp
jne
ljmp
test
mov
mov
incl
bound
arpl
cltd
and
dec
decb
mov
pop
jns
std
lahf
adc
lcall
or
cmp
into
inc
inc
mov
addr16
mov
gs
add
jno
jb
aam
insb
insl
push
mov
dec
push
shll
push
sub
mov
mov
push
fadds
mov
dec
mov
jno
outsl
sbb
jecxz
lock
js
fwait
into
stos
xchg
jl
inc
sbb
insl
dec
sub
dec
sub
aad
adc
mov
jne
dec
insl
shll
es
pushl
shlb
js
cld
in
lret
ret
add
lahf
push
xchg
bound
push
lods
inc
mov
fldl
sub
fnstsw
add
clc
mov
lahf
in
jg
ss
ljmp
sbb
xchg
stos
pop
andb
sub
lcall
loopne
xor
subb
xchg
cwtl
add
sub
pop
in
jp
sti
je
sub
mov
mov
iret
test
jg
lds
loopne
fistpl
and
jg
sbb
out
jge
pop
cmp
inc
push
iret
adc
ja
out
xchg
sub
nop
out
loopne
ljmp
cmpsb
dec
jmp
or
xchg
fmul
data16
loop
rorb
loope
pop
mov
sti
pop
or
dec
jg
in
push
jne
shrb
rol
inc
lods
push
cmp
call
mov
mov
dec
mov
sbb
xlat
faddp
push
repnz
popf
mov
fdivrp
ljmp
add
cmp
jae
outsb
sti
mov
lds
xchg
stos
insb
insb
xlat
adc
fwait
mov
lcall
xchg
ror
cwtl
push
das
out
shl
mov
ljmp
mov
mov
cmp
int
add
ret
push
clc
ljmp
add
sub
enter
mov
fadds
pop
lock
stos
rclb
cld
ljmp
mov
movsl
mov
adc
fistpll
loope
pop
mov
aaa
std
pushl
out
mov
cmpsb
inc
sub
aas
rcr
sahf
jnp
ret
dec
sahf
cmp
sbb
push
hlt
stos
pop
add
out
mov
cmp
je
scas
nop
in
mov
jmp
cmp
aad
push
insl
aam
sti
andps
icebp
or
ljmp
mov
xor
fisubs
negb
jmp
xchg
adc
movsb
bound
pop
rcrl
loop
enter
ljmp
fsts
dec
or
pusha
mov
adc
jmp
inc
stos
mov
xchg
push
jmp
mov
pop
loop
add
jno
xchg
gs
loopne
arpl
jns
popa
mov
or
in
jmp
cld
pop
jns
jnp
or
add
inc
lcall
out
sub
dec
dec
scas
pop
loope
loope
call
push
addr16
into
inc
cld
leave
test
push
xchg
xchg
decl
sbb
iret
adc
pop
jo
movmskps
aaa
pop
cli
sbb
or
pop
leave
popf
xchg
mov
mov
scas
xlat
xchg
test
lcall
push
mov
and
pop
inc
sub
push
mov
enter
dec
push
aas
inc
ret
mov
imul
stos
int3
jmp
mov
and
adc
and
adc
or
add
ljmp
andb
cmpsl
jmp
cmpl
jg
lock
popf
pop
jnp
push
ljmp
ret
out
pop
inc
testl
dec
mov
shl
or
mov
inc
sti
sbbb
jo
mov
hlt
mov
jg
mov
int3
mov
repnz
xlat
jecxz
xchg
jmp
incl
inc
mov
js
imul
aam
add
add
cmp
ficomps
mov
mov
test
roll
shlb
mov
fists
ljmp
lret
js
push
shlb
push
nop
mov
pop
lds
in
jmp
xlat
imul
ljmp
and
xchg
jg
jno
jns
lods
rcrb
popf
pushf
or
sbb
lods
mov
push
incl
adc
daa
cwtl
lock
cmp
pop
clc
add
enter
std
mov
ljmp
cmp
push
adc
lods
mov
int
jno
inc
or
lret
inc
cmp
call
notb
push
adc
xchg
scas
and
push
add
cmovs
inc
adc
lret
or
mov
js
bound
shrl
mov
mov
mov
daa
popa
testb
icebp
incb
adc
or
cmpb
clc
inc
call
mov
cli
push
in
jecxz
pop
dec
jno
dec
xchg
scas
cmpsl
pop
fstl
push
ljmp
scas
pop
in
push
fwait
mov
cmpsl
andb
mov
push
out
lret
daa
mov
ret
push
mov
inc
cmpb
flds
neg
dec
lahf
int3
cli
xchg
xchg
mov
cmp
sub
insb
cmp
adc
add
sub
pop
jge
shr
sbbl
lcall
inc
or
mov
sar
into
int
xorl
aad
movsl
in
lcall
push
cmpsb
stos
adc
cmp
int
jle
stos
cmc
jae
lret
mov
ljmp
decl
inc
mov
outsb
scas
cmp
mov
out
ja
testb
in
loopne
push
xchg
jne
mov
mov
jae
int
fs
pop
pop
inc
addr16
and
mov
sti
inc
push
cmpsb
movsl
cs
pop
push
xchg
daa
jne
mov
xor
cmpsl
lret
add
jecxz
lds
call
xchg
testl
cld
out
test
pop
mov
mov
cmpsl
inc
fbld
sbb
outsb
aam
das
sub
fsubrs
dec
mov
or
jns
xor
in
insb
pushl
xor
loope
cld
or
adc
pop
popa
fdiv
xlat
insb
subl
jmp
push
sbb
stos
xchg
repnz
adc
cmpsb
add
fwait
cmpsb
fnstsw
mov
loop
stos
inc
or
jb
lods
push
cmp
ret
mov
dec
repnz
fiaddl
fs
mov
jnp
dec
mov
lods
or
aaa
push
outsl
mov
pop
fisubrs
mov
dec
std
mov
xor
inc
xchg
fwait
mov
imul
and
cmp
cs
fdivrs
fisttpl
daa
adc
dec
leave
xchg
movl
call
dec
fisubrl
jmp
insb
fwait
idivl
and
xorl
push
xor
sbb
in
push
or
sub
pop
sub
add
or
mov
repnz
jo
mov
jp
sbb
ja
out
cmp
cld
scas
jnp
decl
push
pusha
sbb
mov
lea
pop
adc
out
pushf
xor
int
jne
in
ret
outsb
fiaddl
lcall
in
cmp
pop
ret
lcall
mov
and
fcomip
cmp
jp
xchg
dec
aas
xor
sbb
inc
add
adc
add
in
cltd
push
mov
enter
xor
add
ds
sbb
gs
push
ljmp
stos
mov
xor
stos
lods
aad
dec
cmpsl
leave
cmp
push
sub
jmp
and
scas
aaa
dec
jnp
inc
xor
insl
cwtl
push
fnstenv
imul
lods
cmp
mov
cs
push
dec
test
jp
xchg
xor
jmp
not
rorl
add
inc
xor
mov
adc
dec
je
mov
jbe
xchg
and
repz
pusha
aaa
daa
cmp
adcl
cld
add
mov
inc
sbb
push
ljmp
lahf
lods
jb
movsb
pop
mov
push
outsl
js
fdivp
adc
ds
subb
jg
or
punpckhbw
imul
add
ljmp
pop
lret
ljmp
dec
inc
loop
sub
mov
ret
jne
cwtl
pop
lahf
in
call
shld
jle
call
add
push
and
adc
outsl
decl
lock
jns
arpl
and
ret
mov
jne
mov
repnz
jmp
jo
fucomp
or
stc
pop
cmpsl
in
xor
testb
adcb
push
push
mov
shlb
pop
lcall
jmp
mov
adc
dec
pop
out
std
stc
dec
jo
pop
pop
push
pop
rcll
mov
xor
jmp
hlt
pop
cwtl
ret
sahf
cmpsb
cltd
ret
rol
pusha
arpl
sbb
or
dec
addr16
sbb
loop
push
sar
mov
and
into
inc
fisttpl
adc
cmpsb
lcall
dec
xchg
rolb
ss
xor
jmp
out
pop
or
out
xchg
incl
xor
jne
stos
es
sub
mov
jb
cmp
mov
pushl
cwtl
xor
push
rolb
lret
pop
xchg
jle
sub
les
ror
into
dec
xorb
add
mov
xor
sbb
nop
jbe
inc
jno
dec
mov
push
mov
mov
dec
add
or
iret
mov
mov
repnz
into
jmp
cmpb
pushf
fldcw
mov
sbb
roll
andb
add
inc
mov
das
divb
sbb
sbb
fcoml
ret
add
movsb
dec
scas
lods
nop
mov
mov
pop
xchg
jns
sub
mov
xlat
cmp
sti
stos
aad
fwait
cmpsb
daa
pop
out
repz
and
int3
aaa
push
push
jnp
test
dec
push
mov
cmp
js
xlat
in
jo
fisubrs
jle
sub
out
add
adc
sahf
sub
repnz
inc
mov
xchg
pop
xchg
xchg
cmp
nop
lcall
add
push
jp
cmpsb
das
cli
in
pushl
push
push
negl
pop
stos
sbb
mov
cli
sub
push
test
sbb
js
in
mov
jns
lock
mov
or
hlt
and
cmp
cvtps2pi
xchg
loopne
mov
test
incl
push
hlt
xchg
cwtl
sbb
mov
dec
pushf
sti
xchg
imull
jae
sub
jmp
mov
mov
sti
xchg
mov
pop
push
ljmp
sub
subb
xchg
cld
mov
jmp
cmpsl
add
loop
dec
jb
popa
test
loope
mov
push
js
sti
icebp
dec
inc
mov
int
ret
push
scas
mov
jmp
bnd
rclb
dec
jle
add
movsb
add
sub
mov
mov
cwtl
cmp
dec
and
pushl
outsb
rcl
gs
sub
xlat
adc
daa
pop
xchg
inc
xlat
jecxz
ror
cmp
cmp
movsl
mov
jmp
and
push
outsb
stc
pop
or
xor
or
or
jg
sbb
push
inc
loope
add
iret
and
pushl
std
imul
dec
test
repnz
mov
or
cld
cs
scas
xchg
xchg
ljmp
xchg
pop
jle
sbb
mov
pushf
cmpsl
sbb
fld
mov
lcall
ljmp
cltd
mov
dec
scas
fisttpll
testl
mov
xlat
mov
ljmp
stos
in
in
es
mov
lods
sub
dec
outsb
and
sub
je
in
addl
loop
mov
enter
push
pop
jns
xor
and
dec
sbb
sbb
jg
push
scas
lret
or
pop
fwait
cmpsl
or
push
adcb
xor
pop
scas
push
je,pn
sub
cmp
cld
movl
xor
push
popf
or
xor
js
fmuls
push
xchg
iret
mov
jmp
sahf
cmp
icebp
cmp
into
or
add
repz
data16
xor
notb
aad
xor
mov
divl
imul
sbb
iret
test
lcall
pushl
lret
btc
mov
mov
loope
ret
daa
clc
cli
jmp
jmp
mov
adc
sbb
jmp
and
repnz
mov
loop
outsl
into
dec
clc
dec
in
dec
stos
pop
xchg
leave
mov
dec
in
repz
mov
dec
or
sbb
push
and
incl
xchg
xor
bnd
leave
dec
pop
or
call
push
lret
les
jmp
clc
stc
or
int3
mov
imul
xabort
fcomip
mov
das
mov
or
inc
sti
repnz
je
popf
pop
xor
incl
jae
shlb
sub
mov
add
adc
xchg
movsb
clc
loop
adcb
and
enter
mov
cli
pushl
push
xchg
adc
in
clc
outsl
inc
xchg
xchg
and
add
ljmp
or
sti
lods
ss
fsubr
push
push
adc
or
arpl
jle
imul
decl
jecxz
dec
or
xlat
sub
inc
push
xchg
dec
jno
fwait
lahf
nop
pop
jg
mov
push
rorl
pushl
pushf
dec
push
and
xor
incl
aaa
adc
xor
xor
cltd
call
roll
xor
mov
xchg
cltd
pop
adc
addl
push
fsubp
mulb
pop
push
push
cmp
sub
repnz
mov
mov
xchg
sub
fbld
std
sbb
push
and
movsl
ljmp
jo
incl
jbe
ss
shrb
adc
mov
lret
inc
cmp
pusha
push
incl
xchg
ds
push
out
stos
dec
loop
lcall
mov
int3
sar
sti
adc
incl
cmp
fisubrl
xchg
lea
sub
lock
mov
lret
inc
popa
inc
int3
mov
clc
pushl
mov
dec
jge
inc
jb
push
jns
out
subb
cmp
cld
filds
shlb
jae
jmp
movsb
adc
aad
jg
dec
mov
mov
pop
dec
cmpsl
rorb
enter
shr
ds
call
aas
iret
popa
xchg
push
adc
mov
dec
jge
std
jo
shlb
stos
xchg
les
cmp
ds
incl
mov
sbb
sbb
adc
pop
aad
pop
sub
fsubrs
loop
sar
jmp
insb
test
das
mov
xor
pop
call
cmp
repz
jg
sub
popf
xchg
xchg
cmp
pop
pop
stos
sbb
lss
pop
push
pushl
push
sub
int
mov
add
dec
inc
ds
pop
dec
dec
loop
out
mov
jmp
ljmp
mov
pop
test
xchg
inc
jo
aad
popa
cmp
fstpl
sbb
out
cld
pushl
cld
dec
pop
xor
lahf
inc
inc
and
adc
xlat
loop
dec
sahf
test
pushl
inc
mov
fcoms
add
sarl
or
pushf
and
pushl
cwtl
jne
jne
leave
pushf
jmp
sbb
add
jbe
sarl
dec
adc
cmp
leave
inc
mov
cmp
xor
test
cmp
sbb
jno
xor
jbe
add
pusha
into
out
and
pusha
iret
jb
insb
mov
sub
adc
mov
mov
stos
dec
lods
cmc
aad
aas
jecxz
frstor
or
hlt
mov
xchg
sub
call
cmp
dec
jae
or
mov
xor
ficoms
test
xchg
fcoms
aam
loop
iret
sti
jg
mov
divl
push
jo
cmp
jl
fbstp
add
sar
push
add
jge
lods
inc
jns
clc
sub
inc
sub
jmp
pushl
in
cmpb
insb
pop
add
lods
jno
pusha
icebp
mov
mov
aas
in
jl
dec
adc
xchg
iret
pop
jno
aad
ljmp
rorl
jle
imul
pop
jmp
stc
stos
adc
dec
data16
decl
cmp
adc
cmp
aam
nop
ja
mov
nop
and
and
outsl
push
mov
jg
fdivrl
adc
inc
aam
cld
repz
fdivrs
fmuls
aaa
jb
jmp
out
mov
xchg
dec
sub
aad
sbb
negl
rorl
xchg
xchg
adc
ljmp
lds
inc
adc
sub
cltd
gs
xor
shll
loopne
jbe
mov
dec
inc
call
cmp
int
daa
add
mov
push
movsb
xor
clc
aad
mov
aam
mov
cmp
mov
pushf
icebp
test
ss
inc
push
sub
decl
xchg
cmpsl
dec
pop
pop
loopne
pop
shrb
jmp
dec
add
lret
inc
hlt
loope
pop
idivb
inc
scas
xchg
rcrl
popf
and
xor
gs
stc
cmpb
add
idiv
incl
pop
adc
mov
jmp
hlt
xchg
ret
push
cmpsb
sahf
adcl
incl
adc
in
jo
test
ds
fs
mov
dec
jmp
jmp
adcl
jle
roll
jns
outsl
setg
xchg
icebp
pusha
mov
icebp
mov
inc
lahf
fstpl
jmp
lock
jns
xchg
push
adc
sarl
jmp
or
mov
inc
push
sahf
sahf
sti
lcall
out
push
aas
subl
and
mov
iret
add
lcall
ljmp
into
push
ret
lret
pop
mov
insl
pop
test
aam
add
decl
imul
in
ret
pop
lret
sbb
jecxz
out
cmp
loope
scas
inc
xchg
cli
mov
inc
pushl
psrlw
aad
mov
iret
mov
xor
fisubrs
loop
hlt
mov
push
xchg
sbb
lret
pop
hlt
pushl
cmc
aam
jno
xchg
sbb
repz
icebp
push
icebp
cmp
decl
cli
fld
xor
push
inc
stos
movsl
fsubs
and
lds
sbb
xchg
aam
push
les
sbb
ljmp
adc
aam
adc
sti
xorl
xor
mov
ljmp
mov
cmp
dec
xchg
int
jle
add
xlat
cmp
lds
fisttpll
cmp
mov
and
mov
in
pusha
rorb
lret
fwait
iret
mov
mov
inc
jnp
lahf
repnz
bound
pop
sub
mov
add
test
mov
xlat
mov
in
jb
xchg
and
xchg
sar
pushl
fisubrs
adc
pop
test
add
push
mov
pop
data16
jg
xchg
push
jecxz
jmp
into
jmp
inc
push
lock
sub
ret
add
stos
int
cs
mov
incl
push
outsl
pop
in
les
loopne
mov
ret
fnstsw
imull
cmp
cmpsb
out
jmp
add
ds
call
in
mov
mov
lods
xor
ss
push
repz
fwait
in
sar
inc
xor
out
in
js
xchg
arpl
in
arpl
mov
xchg
dec
scas
inc
jmp
and
incl
pop
inc
push
jg
outsl
bound
pop
and
add
in
shll
pusha
sbb
subl
mov
repz
incl
and
sub
aam
scas
jecxz
add
add
adc
push
dec
scas
clc
incl
and
add
xchg
fstl
nop
cwtl
leave
jb
daa
xor
push
xor
stc
int
or
cmp
aad
pop
and
mov
stos
or
insl
das
je
sub
clc
sahf
jp
out
enter
fnstsw
repnz
mov
mov
mov
call
shll
out
mov
jnp
dec
and
cmp
mov
movsl
sbb
shl
or
out
clc
call
mov
jns
daa
adc
lahf
sbb
mov
inc
sbbl
inc
xchg
and
jmp
xchg
negb
add
inc
xchg
pop
loope
std
int3
mov
pop
incb
or
pop
cld
call
out
sbb
in
out
js
pop
cld
decl
inc
repz
jecxz
xchg
inc
inc
xchg
int
lahf
pop
jae
es
in
cmp
push
jae
in
gs
int3
cs
sbb
stos
stos
add
xchg
neg
sti
jg
jmp
adc
in
inc
fs
jmp
rcrl
out
sub
xchg
ret
lcall
dec
scas
repz
xor
dec
pop
gs
push
fs
incl
mov
cmc
cmp
pop
les
or
add
xchg
sbb
adc
push
scas
jmp
out
sub
idivl
in
or
movb
bnd
cmc
xchg
and
dec
jo
stc
cmpsl
push
fdivrs
nop
xchg
fdecstp
andb
pushl
mov
arpl
sbb
mov
test
mov
decl
addl
adc
xchg
jne
insb
sub
push
inc
push
inc
pushf
ss
cmp
mov
xchg
call
pop
scas
ss
outsl
mov
cwtl
mov
adc
faddl
test
std
pushl
std
xchg
mov
or
push
mov
ss
mov
add
outsl
xchg
sub
cld
cmpsl
in
pop
aam
int
clc
filds
es
divl
dec
out
mov
fwait
sub
mov
lcall
jmp
xchg
dec
push
repnz
adc
mul
cmpsl
or
push
pop
dec
jecxz
clc
jg
lcall
xchg
ret
push
stos
mov
stos
xchg
xor
or
ret
ljmp
mov
pop
cmp
or
sub
nop
stos
pop
and
cmp
popl
push
aas
sbb
decl
dec
add
aas
test
mov
mov
lods
cmp
mov
mov
sub
mov
pushl
push
pop
sub
jae
add
sbb
int3
mov
push
adc
pusha
xor
jne
rclb
cld
ljmp
out
xchg
sbb
cmp
jmp
fildl
outsb
xor
out
loope
jb
push
aas
mov
rolb
push
aas
je
sbb
adc
in
lock
loopne
ret
inc
sahf
and
incl
mov
ja
stc
inc
mov
jmp
insb
lret
jl
mov
call
inc
jae
xchg
cwtl
jge
sbb
cltd
loope
andb
sarl
out
mov
and
add
cmp
cmpsl
mov
ret
loopne,pt
sub
jne
popa
ret
jne
dec
fucompp
fsubrl
and
shlb
lcall
jmp
inc
and
pop
mov
jg
add
arpl
fsts
lods
sub
lcall
mov
sub
shll
popf
arpl
dec
popf
sub
int3
test
jno
call
outsb
outsb
bound
sbb
lahf
mov
xor
sbb
dec
dec
xor
fcomip
mov
fdivs
jnp
or
decl
lock
pop
dec
mov
adc
aaa
adc
sti
xchg
pusha
pop
inc
sub
cli
pushl
mov
xchg
fstps
push
xor
adc
aas
incl
add
jecxz
mov
jbe
dec
bound
push
jl
dec
jo
movsb
xchg
movsb
dec
icebp
jmp
lret
call
hlt
inc
into
divb
adc
lar
push
fs
jmp
lock
cli
mov
orb
inc
fisttps
push
fidivl
pop
sti
sahf
andl
ljmp
pop
fisubrl
aas
mov
lret
fcmovb
bound
sub
mov
fcmovne
pop
cmpsb
mov
pop
pushl
cs
push
jbe
cmp
inc
or
in
push
test
stos
addr16
dec
loopne
int
lcall
inc
imul
jo
fmull
pop
push
push
out
fwait
out
jle
pop
sti
mov
ljmpw
cltd
fisubrs
mov
jle
stc
ret
xlat
repnz
pushl
lcall
push
adc
add
cwtl
dec
dec
xchg
enter
mov
add
or
lcall
ds
push
push
ret
and
sti
mov
out
shl
pop
ss
mov
inc
loopne
es
in
iret
and
sbb
ret
sti
dec
lcall
inc
test
decl
outsl
ds
out
mov
jg
incl
sub
pop
sbb
and
out
fwait
hlt
jns,pt
cmc
mov
mov
cmp
xchg
and
cltd
mov
sub
decl
dec
dec
int3
or
in
inc
jmp
push
push
xor
mov
call
lcall
cs
loope
outsb
push
out
repz
xchg
jle
push
sub
addr16
push
adcl
xor
test
fldcw
mov
popf
mov
xchg
xor
cmp
jl
sbb
dec
cmp
jg
hlt
pop
lock
jg
dec
fcoml
arpl
pop
and
lcall
push
vpacksswb
sub
inc
fistpll
jne
jecxz
adc
loop
sbb
fisttpl
call
pop
or
jp
mov
mov
aam
ss
dec
lcall
scas
movsb
shrl
shll
cmp
jle
and
or
push
mov
push
jnp
in
fmuls
mov
add
or
in
imul
dec
mov
hlt
add
into
push
enter
es
sbb
mov
rcr
sub
rcrb
pushf
fdivl
fnsave
xor
pop
ret
pop
pop
adc
test
icebp
fwait
les
sub
jmp
mov
ljmp
mov
fcomip
fbld
add
cmp
rorb
jp
lret
decl
push
inc
cmp
imul
mov
test
jmp
jge
pop
mov
push
arpl
xor
aaa
inc
sub
xor
stc
pop
cli
mov
test
das
cmp
aaa
jl
adc
je
push
xchg
xchg
cli
mov
dec
pop
mov
aam
lea
inc
pop
mov
xchg
gs
nop
hlt
sbb
sahf
or
dec
and
incl
dec
add
adc
inc
jge
sbb
jns
repnz
std
push
jl
mov
xchg
pusha
jp
std
jg
sti
bound
in
push
mov
enter
decl
lods
ss
andb
xor
leave
popa
or
mov
fldl
jg
or
dec
jo
inc
mov
aaa
test
ljmp
cli
loopne
mov
neg
pop
repnz
xchg
arpl
cmpsl
cmp
pop
out
lcall
push
fld
or
adc
lret
pop
aad
scas
loopne
loope
leave
push
sbb
sub
add
mov
ljmp
lods
xchg
or
nop
and
test
aas
out
loopne
push
xchg
cwtl
inc
movsb
or
jmp
adc
icebp
lret
xchg
push
cld
and
xchg
dec
cmp
cld
mov
lods
clc
mov
int3
lock
adc
dec
sub
mov
xchg
cli
call
inc
mov
push
cmpsb
jecxz
aaa
inc
shrl
into
mov
pop
shl
enter
in
sub
insb
in
call
or
lcall
xchg
test
xchg
xor
add
pop
add
rolb
add
call
lock
in
xchg
aam
addr16
mov
mov
repnz
lcall
push
inc
mov
stos
rcl
fwait
dec
xlat
imul
insb
les
and
push
fisttps
pusha
call
inc
sub
mov
cmp
fildl
xchg
sbb
sbb
insl
cmp
mov
mov
sbb
aam
int
cmc
sub
mov
mov
cs
jmp
jmp
lods
jg
inc
adc
push
adc
fcmove
mov
adc
cmp
mov
push
in
sahf
push
jmp
daa
das
data16
jae
insl
call
jmp
jae
incl
fdivrp
fs
xor
jle
adc
push
inc
mov
je
cmp
mov
mov
dec
xchg
incl
or
test
daa
push
mov
out
shlb
inc
test
fiaddl
pop
sub
sub
jo
push
inc
pop
call
push
movsl
adc
out
or
xchg
jmp
pop
mov
jo
sub
lcall
jnp
out
test
add
pop
and
cmp
mov
push
xor
in
pop
outsb
jecxz
orl
cmp
jg
mov
out
test
cld
push
jb
fcomip
or
mov
cld
cmp
cmp
fdivp
push
pop
cmp
push
inc
std
adc
ljmp
dec
ljmp
jno
cs
mov
mov
mov
xor
in
dec
adc
cmp
jecxz
mov
lea
cmpsb
mov
push
pusha
ljmp
imul
addr16
adcb
xor
shlb
call
jns
inc
add
in
fldenv
adc
xchg
sbbl
push
int3
dec
and
cs
jg
imul
imull
cltd
out
clc
lret
filds
jno
jecxz
mov
jle
ljmp
mov
arpl
decb
sub
fisttps
pop
into
sub
cmp
pop
mov
mov
movsl
sarb
out
lcall
and
outsb
sbb
cmpsb
stc
xor
lock
ljmp
pusha
jmp
push
mov
pop
dec
sti
push
xchg
add
or
pushf
fisttps
dec
add
mov
push
rcl
je
out
xchg
fwait
decl
mov
mov
iret
and
mov
pop
iret
movsl
inc
cmpsb
pushf
hlt
add
call
jmp
mov
xchg
lods
cmp
les
ss
or
pushl
shrb
mov
imul
icebp
sbb
sti
pop
pop
lea
ljmp
sarl
pop
aad
mov
daa
cmp
add
out
inc
mov
jne
xchg
imul
mov
in
adc
std
fnstenv
movsl
in
incl
mov
loop
es
fbld
aad
jle
push
and
stos
loop
lock
dec
mov
add
ljmp
daa
pop
and
pushl
sub
call
xchg
add
mov
stos
scas
mov
ljmp
mov
jnp
jg
xchg
xchg
cmpsb
dec
push
jle
pop
aad
and
loopne
inc
jns
in
decl
out
mov
and
cmpb
insl
out
dec
lcall
ljmp
add
fldenv
lods
lret
in
loopne
lods
ret
sub
push
adc
clc
mov
xor
lds
mov
jmp
add
mov
cmp
jne
fldl
push
aas
mov
mov
insb
out
dec
testl
std
aaa
ficomps
and
scas
push
pop
dec
data16
scas
add
test
shlb
cld
cmp
sub
int3
out
rclb
test
mov
cmpsl
cmp
pop
cmpsb
sub
subl
adc
in
incl
cli
in
cld
xor
nop
xor
addl
mov
adc
push
xchg
cli
clc
cmp
into
lcall
add
popf
lahf
push
pop
ret
sbb
adc
mov
jmp
pop
ret
pop
out
xor
popf
fs
mov
sbb
push
mov
incl
addr16
lret
ds
xlat
or
repz
test
lret
push
dec
das
sub
mov
xchg
lcall
sub
inc
jle
mov
and
or
out
mov
cmp
add
cli
out
mov
shll
push
jecxz
daa
sub
call
sbb
outsl
subb
and
rorb
adc
lea
xchg
test
sbb
mov
icebp
jmp
xlat
cmc
pop
jge
dec
pop
js
sub
xor
rcll
repz
lcall
int3
xchg
inc
imul
mov
imulb
inc
push
in
mov
mov
pop
pop
xor
cmp
sub
adc
mov
pop
daa
ljmp
popa
xor
loop
xor
in
mov
jl
sbb
push
sbb
pop
mov
dec
fs
lret
popa
jle
jbe
movsl
jmp
mov
nop
or
ret
dec
ljmp
jg
repz
jne
lcall
fadds
sbb
dec
scas
push
pop
push
movsl
std
pop
dec
hlt
lcall
push
jo
sub
sbb
mov
xchg
outsb
or
lods
xor
lcall
shrb
mov
test
outsb
lcall
clc
or
gs
incl
sbb
sub
fsts
or
fcoml
dec
mov
pop
mov
call
or
cmp
ss
adcl
inc
xor
xchg
das
adc
mov
mov
int
pop
in
cmp
lds
imul
mov
fwait
mov
jmp
mov
mul
cmp
xchg
or
popf
and
je
xlat
sub
call
adcb
mov
fisubl
aad
repnz
divl
aaa
xchg
out
dec
in
test
orps
iret
sub
jge
sahf
mov
insl
nop
popa
repz
fbstp
jmp
adc
test
pop
push
lock
daa
and
scas
mov
lea
cmp
mov
mov
pop
or
or
or
lcall
jg
iret
sarb
ficompl
mov
jmp
imul
adc
jecxz
xor
or
jp
test
lret
lock
je
leave
insl
loope
sub
scas
sarl
in
mov
cmp
adc
test
mov
jg
push
inc
mov
or
push
sbb
sub
imulb
gs
jmp
mov
xor
dec
gs
mov
test
add
or
jo
aam
stos
pop
shrl
mov
jmp
ljmp
and
mov
push
daa
imul
mov
lock
clc
cmpsl
loope
pushl
lret
in
popf
hlt
or
sub
out
adc
cltd
jp
lcall
mulb
mov
movsb
movsb
mov
or
xor
jnp
sbb
test
push
ljmp
aaa
lret
mov
cmpsb
psubd
cld
push
jmp
xchg
xchg
in
lahf
push
or
notb
pushl
mov
sub
cmp
ljmp
add
push
ds
rcrb
out
lods
mov
test
mov
orb
push
add
fisubrs
mov
pop
sbb
lock
scas
out
inc
cli
repz
jno
fldl
icebp
inc
mov
mov
mov
pop
mov
pop
repz
sub
daa
xlat
mov
jmp
js
imul
and
lcall
imul
sub
adc
popa
or
fs
scas
sbb
lahf
pushl
pushf
in
notl
xchg
mov
jno
fxch
data16
cmpsb
xchg
sub
arpl
fcomip
mov
addr16
jne
cmc
call
push
push
cmp
mov
mov
cmpsb
out
sub
imul
mov
pushl
cmpsb
pop
sbb
mov
rcl
les
dec
popf
inc
in
loop
pushl
jg
xchg
lret
push
jae
mov
push
push
icebp
push
sahf
inc
fwait
cmp
lods
cmpsb
mov
idivl
test
insl
and
mov
adc
shr
add
lcall
lcall
fdivrl
gs
imul
icebp
mov
ficomps
push
out
cli
fwait
icebp
loopne
iret
fidivrs
mov
hlt
dec
mov
xor
push
std
lcall
or
dec
lahf
xchg
push
mov
pop
or
in
mov
lret
adcl
notb
sti
inc
jb
imul
cmp
pushf
adc
xchg
cli
les
pop
add
les
lea
outsl
cmp
ja
push
lods
mov
xor
clc
inc
cmp
pusha
icebp
fsubr
jg
mov
jno
sahf
xchg
leave
adcl
scas
movsb
pushf
rol
xchg
lock
dec
iret
jno
xchg
ud0
lcall
mov
aas
inc
lcall
and
dec
mov
test
std
aad
stc
mov
outsb
sub
cmpsl
cltd
mov
cltd
add
sbbb
push
jl
lock
adc
das
enter
ret
out
cs
insl
xchg
pusha
adc
js
lods
sub
into
inc
pop
js
or
adc
mov
xor
cli
jmp
lahf
jge
mov
adc
xchg
pop
mov
mov
push
rolb
decl
repnz
cmpsb
daa
imul
aad
mov
pop
adc
mov
ljmp
mov
or
idiv
ljmp
push
repz
cli
jns
add
insb
push
movsl
sti
lods
adc
add
out
daa
gs
decl
push
ljmp
add
sbb
jmp
pop
lea
mov
jne
nop
push
jns
je
adc
decl
fs
addr16
stos
rcll
or
sysexit
lods
outsl
mov
or
popa
mov
outsl
cli
outsl
sub
jb
push
push
lahf
test
orb
mov
ret
pop
std
decl
pop
pusha
les
roll
push
bound
icebp
xor
jmp
mov
int
mov
lods
scas
lahf
pop
jae
enter
ss
inc
int3
cmp
jbe
insl
and
mov
mov
or
or
and
bound
push
out
fcmovnbe
mov
jmp
add
dec
out
nop
ds
das
in
sbb
dec
inc
mov
scas
das
dec
cmp
div
or
fisttps
mov
sahf
push
push
mov
push
cmp
push
xchg
sbb
jb
lcall
adc
pop
dec
in
mov
jmp
inc
pop
sub
mov
mov
mov
jmp
add
push
dec
sub
pop
add
pushf
cmp
xchg
xlat
leave
decl
aaa
adc
add
pop
and
outsl
jne
fisubrl
xor
lcall
mov
int3
jb
cmpl
les
push
mov
mov
call
lea
push
push
inc
popa
outsl
jle
int3
mov
jge
popf
push
scas
mov
cmc
out
jmp
or
add
pop
dec
cmpsb
push
sub
int3
cltd
jmp
addr16
pop
mov
nop
shll
cmpb
imul
sub
xor
xchg
xorb
scas
jg
push
movsb
sub
nop
rclb
jnp
add
pop
sahf
fs
loope
or
lcall
dec
cmp
rcrl
dec
sub
lret
call
das
sti
add
push
inc
xchg
mov
pop
in
loopne
or
pushl
xchg
popf
jne
rcll
mov
or
xchg
mov
mov
jae
ret
cli
mov
nop
pop
add
pop
shrb
je
movsb
getsec
and
mov
ljmp
aam
insb
test
cmp
sbb
daa
adc
jo
cmp
incl
je
idiv
movsl
shrl
xchg
int
leave
lcall
push
into
jo
jmp
bound
idivb
xor
ljmp
cmp
mov
and
fistps
incl
mov
sub
scas
stos
lret
jbe,pn
clc
insb
sarl
jg
ret
call
insb
sti
mov
notl
mov
cltd
je
mov
pusha
mul
mov
cwtl
out
pop
sub
call
push
rorb
das
imul
scas
dec
mov
pop
std
pushl
sbb
out
mov
lock
cmp
lret
and
or
jnp
dec
xor
call
xchg
xor
xor
or
push
adc
sbbb
xchg
movsb
add
incb
lea
jmp
lods
dec
mov
mov
aad
push
scas
clc
stc
jns
lret
inc
popf
inc
movsl
or
aas
lret
fscale
dec
push
pushf
int3
jg
into
dec
lcall
xchg
sbb
sub
cmp
js
add
test
scas
xchg
stc
fimuls
xchg
mov
and
jecxz
testl
pop
and
lret
sahf
iret
aad
loopne
imul
data16
idivl
mov
jg
fs
fcompl
insb
dec
pop
pop
jg
jmp
subb
sti
mov
mov
cld
xchg
rcll
cmp
in
ret
sbb
clc
xchg
sub
bnd
jecxz
out
movsb
ss
pop
daa
xor
cmpsl
ja
shr
mov
jg
incl
jg
repnz
adc
cli
jae
fldcw
enter
add
cmp
std
push
adc
or
ret
bswap
arpl
notb
lret
pop
jo
std
or
pop
xchg
sbb
cmp
and
push
arpl
xchg
push
lods
scas
pop
sub
imul
call
rclb
cmp
fs
or
push
pop
pushl
jmp
das
cwtl
imul
hlt
fdivp
ja
cmp
mov
fcos
or
enter
lock
test
subl
int
test
loopne
sub
js
rcll
jo
fsubl
out
out
bound
jno
cmp
mov
xchg
loopne
lock
xor
clc
sbb
mov
xchg
ljmp
mov
mov
mov
mov
insb
insb
sub
cmpl
pop
ret
add
call
adc
xchg
cld
movsb
mov
cmp
sub
jo
inc
ficoms
adc
data16
xor
mov
lock
jo
inc
inc
jmp
jge
xchg
adc
stc
lock
jne
scas
clc
pushl
clc
daa
repz
arpl
dec
sub
cli
cmp
cmp
adc
test
push
leave
push
xor
and
inc
roll
fwait
pushl
pop
sbb
pop
mov
add
mov
push
jne
sub
mov
lds
icebp
jmp
cmp
adc
pusha
push
cmpb
cmc
in
pop
xchg
push
push
xor
add
mov
int3
outsl
mov
arpl
xor
pushl
out
dec
jge
xor
dec
push
add
popf
sbb
and
jecxz
mov
mov
jmp
mov
push
mov
fnsave
push
jp
add
xchg
je
fildll
call
ret
jmp
dec
stos
add
xchg
mov
adc
jns
xchg
cmp
push
dec
icebp
adc
nop
ss
jg
cmpsl
adc
mov
sub
mov
sub
test
pushl
jmp
shlb
push
pop
jns
addr16
pop
icebp
ret
je
and
cltd
shl
push
inc
pop
mov
or
inc
mov
push
pop
repnz
xchg
jg
cltd
frstor
fcoml
test
fisttps
mov
sbb
daa
xchg
fstpl
pusha
aad
pop
rolb
dec
vucomiss
adc
loope
push
push
sbb
call
add
xchg
test
into
inc
repz
adcl
mov
decl
and
mov
dec
mov
fucomi
les
mov
push
adc
lcall
dec
aaa
je
dec
mov
sbb
cmpsl
call
scas
sbb
fnstsw
sub
push
clc
jo
dec
movsl
pop
inc
push
fwait
pop
int3
out
adc
mov
pop
push
xchg
or
popf
decl
scas
push
cmp
sub
xchg
aaa
lock
fstpl
loope,pt
sahf
mov
stc
jb
push
dec
sarb
jnp
sbb
jne
hlt
add
adc
decl
orb
aad
imul
dec
lock
das
sahf
int
cld
add
jno
add
inc
and
pop
mov
decl
or
in
xchg
ja
jno
aas
sbb
cltd
jnp
daa
cmp
rolb
lcall
push
pop
cmc
jmp
sahf
xchg
xor
cli
dec
ret
xchg
fbld
xchg
add
jle
subb
fdivl
ficompl
fbld
xchg
sahf
ja
rcrb
loop
dec
fstl
jecxz
das
sarb
incl
pop
jmp
sub
int3
jmp
leave
hlt
mov
jno
and
frstor
jg
clc
inc
testb
cmc
fdivrl
or
dec
mov
das
shll
lcall
out
testl
pop
mov
xchg
and
popl
mov
jnp
dec
cli
inc
jns
stos
and
pushl
push
loop
movsl
ljmp
or
xor
mov
cmc
xor
movsl
fwait
aam
sub
cld
out
ljmp
lcall
mov
push
stc
sbb
subl
call
jno
mov
idivl
mov
roll
sub
fistps
xor
cmpsl
pop
mulb
movsb
push
aam
movhps
xchg
mov
int3
repz
jmp
pop
inc
xchg
fsubs
nop
aaa
mov
pop
push
js
cs
aad
fistl
lds
sub
adc
pop
xor
cmp
lcall
adc
out
pusha
xor
loopne
in
cmp
cmc
add
pop
int3
sar
je
mov
xchg
cmp
jg
ljmp
xchg
mov
sub
shrl
xlat
mov
inc
and
loop
xorl
ljmp
cli
je
push
inc
pop
sbb
fbstp
adc
and
cmp
mov
ljmp
mov
ds
out
and
cmc
mov
xchg
sbb
ss
mov
xchg
jg
cli
loop
call
sub
xchg
or
test
shrl
outsl
bound
aam
jo
incl
mov
sbb
ja,pt
pushf
cmpb
cwtl
fs
incl
lret
fnstsw
fidivrs
mov
push
mov
sub
mov
jbe
in
xor
and
fldt
push
jmp
cmp
push
std
gs
push
fwait
cli
jge
or
add
jecxz
jmp
xchg
je
adc
leave
and
aam
xchg
ljmp
sub
sbb
xor
ljmp
pop
jne
bound
mov
or
pusha
leave
daa
clc
sbb
jecxz
or
sahf
pop
push
pop
cmc
incl
inc
dec
mov
in
into
lea
and
sbb
adc
dec
push
and
roll
aad
xor
pusha
jbe
out
fbld
out
cli
ljmp
adc
mov
pop
or
mov
sahf
mov
push
adcb
xchg
enter
mov
in
scas
or
enter
stos
ss
cmp
test
jg
mov
clc
jbe
xchg
ja
sbb
das
push
mov
fmulp
insb
pushf
cmpsb
fsubrp
push
outsl
or
inc
clc
je
adc
sahf
dec
jns
call
insb
cmp
ret
mov
xchg
xchg
sahf
cld
das
xor
sbb
je
and
dec
test
push
std
data16
and
std
inc
xchg
ret
aaa
les
push
jecxz
inc
sub
pop
sbb
dec
inc
shrb
inc
jmp
pop
out
ds
jmp
pop
push
pop
pop
mov
popf
and
stos
sbb
dec
pusha
aas
sbb
pop
sbbl
lea
xchg
pop
pop
imul
sub
xor
xchg
push
push
out
lahf
mov
pop
pusha
imulb
call
pop
imul
shl
in
mov
add
fcompl
jmp
int3
mov
scas
pop
fs
dec
in
loop
fadds
push
or
lcall
out
xabort
pop
std
in
gs
adc
sbb
adc
in
das
fnsave
test
push
loope
and
nop
jecxz
lock
mov
jg
adc
enter
and
mov
sarb
mov
push
loop
inc
inc
fimuls
aaa
xor
cltd
jge
xchg
push
jae
hlt
dec
call
xor
idiv
mov
push
dec
je
mov
cli
lods
test
add
mov
or
inc
pushl
or
dec
in
dec
pop
cmp
cmp
loop
call
bound
mov
sub
mov
mov
or
scas
shl
mov
lcall
xchg
jbe
scas
sub
inc
sub
andb
les
addl
jb
or
lcall
pushl
jo
popa
jp
sbb
sbb
jecxz
mov
loope
gs
sbb
rol
incl
sbb
xchg
mov
xor
adc
decl
jbe
cltd
pusha
inc
sub
dec
nop
jge
adc
popa
dec
inc
mov
addr16
or
addr16
ljmp
cmp
push
xchg
pop
aas
xor
push
movsl
mov
ret
cmp
sbb
push
orl
jmp
add
xor
add
enter
call
icebp
lock
das
es
sti
cld
pop
sub
cs
les
inc
test
mov
inc
mov
mov
ljmp
cvtpi2ps
dec
jo
leave
xlat
fisttpl
loopne
cmp
call
cmp
mov
xchg
addr16
das
pop
notl
icebp
ljmp
mov
lods
negb
das
icebp
in
fdivs
sti
out
xor
hlt
incl
repnz
jne
mov
inc
call
out
push
mov
gs
xor
cmp
jbe
clc
xchg
ljmp
lods
sub
mov
xchg
xor
or
pop
icebp
push
bound
xchg
test
sub
jg,pn
xor
jp
push
xor
push
insl
mov
in
jmp
lahf
mov
mov
or
xor
fsubrl
enter
sti
mov
cmp
mov
jecxz
cmp
jnp
mov
sbb
sub
dec
mov
dec
pop
bound
lods
mov
and
mov
sar
cmp
jb
mov
dec
and
icebp
repz
stc
push
int3
lods
arpl
and
incl
push
test
xor
pop
dec
call
std
cli
bound
mov
call
out
mov
sbb
std
add
std
push
inc
dec
mov
int
xchg
aaa
nop
ret
dec
push
or
mov
mov
or
cs
dec
fcoml
call
xchg
jnp
push
popf
adc
or
ja
mov
fwait
test
imul
pushl
add
or
jb
loop
cmp
push
fisttps
add
jg
cmp
rorl
xor
mov
hlt
incl
xchg
mov
mov
rorb
cmpl
lea
and
fldl
mov
popa
push
call
push
test
dec
xchg
ret
test
aad
push
inc
outsl
dec
inc
ja
hlt
jecxz
add
cmpsb
jg
mov
stos
pop
mov
lret
nop
movsb
cmovge
push
xchg
incl
pop
daa
mov
ret
inc
outsl
out
add
cmp
mov
clc
stos
out
push
ret
stos
mov
call
call
xchg
add
or
notb
jns
imul
xchg
lcall
push
push
pop
out
sbb
pop
lds
dec
lods
sub
pop
dec
push
mov
mov
decl
pop
repnz
jns
jl
cwtl
cmp
cltd
lahf
push
dec
test
or
dec
stos
negb
xchg
sub
mov
xchg
jb
mov
mov
stc
in
sti
int
addr16
fisubs
lcall
push
xchg
lcall
mov
rorb
pop
insb
xor
add
mov
xchg
in
or
pop
icebp
jmp
jge
adc
adc
iret
sbb
nop
ds
push
sub
jmp
dec
sbb
movsl
jmp
out
js
loopne
stc
jl
out
mov
sbb
inc
outsb
aad
xchg
jg
add
xchg
xor
call
xchg
mov
jnp
mov
pop
xor
pop
pop
es
vcvtss2si
cmp
jne
mov
mov
je
clc
dec
push
pushl
sub
faddl
rolb
test
jmp
ja
pop
mov
ljmp
add
push
xor
jle
cmp
push
fcomp
mov
imulb
xchg
imul
incl
popf
neg
jmp
not
dec
and
cmpsl
fbstp
stos
mov
call
inc
adc
fisubl
movsl
dec
or
shll
mov
jecxz
push
xchg
xchg
int3
inc
and
push
xor
aad
into
stc
sub
push
mov
xor
roll
leave
call
push
jp
negl
pushf
jg
mov
add
insb
xchg
xorl
fisubrs
test
mov
ljmp
add
adc
in
sbb
jecxz
pusha
loop
call
outsb
push
lock
push
shl
stc
sbb
data16
mov
and
rcr
std
cmp
mov
or
mov
mov
dec
stos
fsincos
movsb
lds
flds
ljmp
cmpsb
test
out
push
je
sub
cli
pushf
inc
mov
xor
nop
cltd
jecxz
or
popa
ffreep
jo
das
in
and
sahf
loop
xchg
xlat
lcall
out
fisttps
fwait
mov
lcall
test
cmp
inc
jg
imul
cmpl
pop
into
mov
rorb
cld
sub
lcall
movsb
decl
lock
les
pop
shll
imul
xor
add
xchg
add
pop
cld
dec
xor
push
mov
and
mov
loopne
and
fcmovnbe
cltd
mov
outsl
and
inc
xchg
aam
movsl
jg
decl
adcb
jbe
push
add
jbe
jbe
dec
mov
mov
jmp
inc
push
and
lea
pop
iret
das
in
mov
mov
push
insb
pop
xchg
adcb
sbb
fld
incl
les
sub
xchg
sub
call
es
js
jl
sub
fdivl
xor
push
int3
hlt
out
mov
rolb
call
mov
sbb
adc
mov
mov
aad
test
push
in
out
lcall
aaa
imull
test
cmp
sbb
push
fidivrl
out
or
xor
mov
sar
xchg
pop
push
xchg
xor
jle
mov
pushl
in
push
call
pop
dec
xor
loop
data16
into
sahf
imul
aaa
std
push
out
xor
scas
jae
xchg
movsl
cmp
aas
pop
fbstp
sub
mov
dec
popa
rcr
sub
push
mov
push
push
outsb
bound
int
jle
inc
cltd
xor
adc
leave
daa
leave
lods
adc
push
nop
das
sub
int
jmp
daa
mov
iret
cmp
movb
enter
sbb
jo
popa
pusha
je
sub
clc
stos
std
stos
lea
mov
inc
int3
and
cltd
push
fisttpll
lahf
cld
mov
xchg
fstps
sbb
xor
lods
cmp
push
je
pop
inc
adc
add
lcall
out
daa
sub
mov
and
mov
cmpsb
lea
incl
into
and
scas
je
dec
popa
outsb
scas
inc
add
addl
xchg
fs
incl
mov
adc
out
pop
mov
and
mov
mov
sar
mov
cwtl
outsl
arpl
mov
add
pushf
fwait
int
adcb
cmp
inc
xchg
das
ljmp
jg
xor
cltd
lods
cmp
sub
xor
adc
inc
and
pop
add
call
cld
xchg
pusha
ja
mov
repz
ds
add
lods
add
ljmp
push
mov
sub
in
or
insb
dec
aas
pop
sbb
rorl
add
push
out
mov
jp
popf
push
pop
xchg
call
mov
fildll
jno
xchg
sarb
sub
xchg
push
adc
xchg
daa
and
shlb
cvtpi2ps
sub
mov
cmp
jp
sbb
loop
mov
jge
add
mov
xchg
add
btc
pushl
xor
std
push
xlat
jne
out
loop
cmp
xor
push
pop
sbb
mov
incl
sub
js
aad
sarl
xchg
jnp
push
cmp
push
mov
xchg
or
lods
or
rcrb
jp
loopne
pushf
repz
ja
out
mov
and
push
fldenv
and
sub
sbbb
pop
clc
or
mov
or
xor
xor
incl
lcall
jae
push
add
and
push
repnz
add
addr16
repz
ljmp
ljmp
in
mov
lea
test
mov
stos
iret
leave
pop
fiaddl
aad
lcall
fists
jne
rclb
hlt
call
add
xchg
xchg
stos
jb
pop
xor
pop
push
cmpsb
ljmp
push
fnstsw
ret
fisubrs
out
jmp
jb
ret
shlb
lcall
leave
mov
cwtl
sarb
mov
mov
lea
cli
jg
out
sbb
inc
cwtl
xor
lcall
pushl
xchg
addr16
testb
push
cmp
pop
imul
xor
stc
addb
cmp
xchg
push
lret
inc
pop
test
cmp
and
push
and
pop
lock
call
iret
addr16
xor
jmp
ljmp
leave
sub
mov
lret
popa
mov
adc
dec
in
cmp
daa
or
fildl
and
rclb
call
mov
jecxz
pop
fimuls
jno
mov
jns
and
push
mov
and
cmc
addl
jns
outsl
mov
xchg
mov
cmp
pop
mov
mov
lcall
ficomps
push
fimuls
dec
cmpsl
mov
decl
mov
lret
or
cld
into
faddl
out
and
adc
mov
sbb
jbe
jge
rorb
xchg
pushl
sub
and
sub
cli
ds
nop
fwait
popf
sti
add
rorb
decl
test
jns
jge
sbb
lret
lock
sarl
push
jne
call
adc
fistpl
cmp
clc
lcall
ljmp
fcomip
jnp
sar
mov
mov
pop
or
fisttps
cmpsb
subl
leave
inc
xchg
lret
popf
stc
mov
mov
call
aas
cmc
repnz
int
xor
add
cmp
and
in
inc
scas
add
xchg
add
ret
push
insb
pop
dec
fimuls
fbstp
mov
test
xor
out
dec
mov
xor
cli
cmp
jmp
jge
inc
dec
icebp
mov
imul
aad
push
cmpsb
fnstenv
push
mov
mov
xchg
mov
pushl
fwait
sbb
sbbl
adc
repnz
gs
ljmp
push
sar
les
add
shl
rolb
pop
repnz
push
and
push
repz
sysenter
mov
in
addr16
int3
shll
flds
mov
xlat
pop
pop
mov
aaa
loop
call
xchg
popf
sub
into
mov
in
cmp
mov
mov
mov
adc
jmp
int3
pop
cld
sbb
fwait
or
cli
movsl
cmp
repnz
call
and
test
ljmp
lahf
adc
icebp
mov
ljmp
sub
mov
sbb
call
int
dec
pop
rcll
in
xchg
lods
cli
test
in
cmpsb
pop
xor
dec
into
je
ficompl
rol
push
jnp
and
mov
scas
xchg
add
xor
je
test
nop
lods
les
int
lcall
fcmovnu
inc
jb
xor
out
mov
ret
pop
bound
dec
test
lods
lret
out
scas
or
push
scas
pop
dec
mov
incl
in
pop
stos
out
nop
jbe
iret
mulb
add
mov
jl
imulb
incl
dec
push
push
xchg
inc
test
cmp
adc
push
fs
mov
inc
jecxz
xor
mov
jbe
cmpsl
jecxz
cmp
or
inc
jecxz
inc
sub
pushf
xchg
sti
inc
and
imul
and
into
fadd
mov
mov
xor
call
jns
enter
inc
mov
je
push
ret
mov
or
push
divb
icebp
jge
imul
incl
jge
xchg
mov
mov
xchg
es
rcrl
or
mov
clc
xchg
adc
scas
push
pop
xor
inc
add
lret
or
stos
dec
add
cmpsl
pop
adc
call
test
adc
pop
pop
pop
jecxz
jo
adc
dec
sbb
sbb
jmp
jne
xchg
leave
out
adc
sub
push
cmc
jmp
icebp
fs
daa
sbb
dec
sbb
xor
adc
inc
jg
lock
fistpll
in
cmp
pop
and
fwait
or
fcomps
negl
mov
inc
jg
jle
adc
cmpsb
add
insb
out
push
iret
lock
cmp
ljmp
cs
push
cltd
loope
cmc
cmp
mov
jg
or
insb
mov
call
xchg
mov
fwait
popl
add
mov
xchg
inc
daa
xchg
repnz
push
sbb
or
imul
push
icebp
movsl
xchg
push
orb
sub
in
jno
push
push
xchg
push
ljmp
add
pop
lock
cmp
pop
adc
fcoml
pop
sar
decl
mov
sti
lock
push
aas
cmp
cltd
repz
and
sub
pop
insl
adc
inc
cmpsb
fdivrl
sub
fisttpl
adc
jmp
movsl
leave
stc
aas
pop
jae
inc
pop
out
jl
movsb
fdivrs
jb
jg
ljmp
mov
aad
repz
lahf
and
test
cmp
lods
jge
les
lcall
movsb
cmovbe
daa
rcrb
test
leave
js
bound
xchg
icebp
dec
std
imul
decl
outsb
mov
call
out
adc
das
insl
inc
loop
push
mov
call
fcmovne
or
orl
xor
loopne
lds
call
xlat
call
mov
mov
adcb
jg
mov
popa
push
push
add
inc
pusha
outsb
sub
lcall
adc
push
mov
mov
rol
xorl
or
add
sti
push
sub
rcrl
xchg
popa
or
jp
leave
xchg
mov
or
add
pop
push
jge
lcall
jnp
lock
sbb
inc
adc
mov
aam
dec
fimull
inc
outsl
mov
lcall
stc
jne
inc
insl
aaa
sahf
js
and
cmp
pop
pop
push
out
pop
insl
incl
cmp
xchg
ljmp
mov
scas
movsl
pop
rclb
dec
daa
cmp
and
das
add
jns
out
pop
dec
in
dec
ret
fwait
pushf
jg
aad
ja,pt
shrb
std
sahf
xchg
leave
mov
or
loop
pop
jo
push
mov
into
ja
fs
xchg
xchg
cmp
jmp
jo
aaa
in
inc
out
mov
push
cmp
push
enter
add
mov
mov
mov
cmp
lret
outsl
jle
inc
arpl
adc
adc
push
mov
movsb
jge
out
fsubrs
adc
push
aad
cld
or
fists
nop
popf
cmp
pushf
movb
xor
mov
and
sbb
pop
ret
jne
mov
mov
sbb
sahf
ret
clc
mov
lock
jle
incl
movsl
or
repnz
scas
loopne
je
movsb
mov
mov
mov
jmp
arpl
aas
outsb
pop
aaa
push
or
xchg
gs
mov
mov
out
mov
sub
push
add
cmp
cmpsl
jg
sbb
movsl
sbb
decl
adc
int
les
test
aad
into
sarl
loopne
fdivl
jbe
fcomip
pushl
lods
mov
dec
movsb
dec
sahf
or
test
sbbl
test
dec
mov
jno
daa
ljmp
mov
fldcw
or
out
ljmp
cwtl
add
mov
in
or
add
xchg
aam
add
push
jno
cmp
aaa
cli
jecxz
cmp
sti
mov
adc
xor
push
mov
pop
inc
cmp
std
inc
sahf
xchg
cwtl
and
cmp
ret
loopne
mov
je
cmpl
inc
add
mov
or
inc
scas
adc
aaa
push
nop
fildl
test
mov
movsl
jle
out
call
lock
bound
add
jo
fsubrs
ljmp
mov
dec
lods
sbb
cmpsl
fwait
adc
icebp
lcall
push
rclb
push
push
stos
int
adc
rol
movsb
cld
jo
pushl
dec
xor
rorb
pop
pop
stc
lods
sub
ss
sbb
fistl
enter
cli
and
sbb
rol
mov
in
rcll
lcall
lret
pop
adc
cld
xchg
arpl
push
subl
std
js
pushl
sub
xchg
jns
mov
fs
jbe
jae
cwtl
xor
xchg
in
adc
adc
pushl
adc
stos
xchg
mov
ret
ds
pop
jnp
cld
incl
test
inc
bswap
cmpsb
push
adc
mov
ljmp
push
mov
jge
fadds
fwait
or
out
dec
pop
inc
dec
and
mov
or
sub
incl
cmc
montmul
insl
mov
push
push
sbb
inc
xor
push
outsb
xchg
dec
dec
jp
xchg
jmp
adc
pushl
mov
and
inc
insb
pop
push
push
test
stos
rorl
push
mov
lret
mov
repz
jmp
int
xor
es
add
fdiv
lea
lcall
add
xchg
mov
rorl
jmp
xchg
in
cs
pop
cmp
sbb
sti
outsl
fucomp
shll
mov
mov
add
push
aaa
add
push
push
mov
lds
repz
dec
add
jb
notb
cmp
pop
int
arpl
sbb
xor
xor
outsl
cmp
fistps
push
mov
push
pop
inc
in
push
push
inc
loop
dec
pushf
mov
scas
fsubr
cmp
lods
xor
movsl
jmp
or
jl
xchg
frstor
shrb
pop
jl
jmp
int3
sbb
cltd
or
ja
shlb
out
les
jbe
subl
incl
fs
mov
into
xchg
out
mov
push
fwait
fcomip
sahf
rclb
shlb
lods
jmp
xor
sahf
leave
adc
fcomip
decl
cwtl
ret
les
pop
mov
push
xor
std
xchg
int3
push
xor
scas
mov
sbb
incl
xorl
xchg
cmp
inc
sub
sub
mov
jge
call
mov
jle
test
jb
adc
cltd
arpl
ret
lods
mov
fwait
lods
adcb
call
or
dec
jae
shll
popf
or
mov
xchg
test
dec
push
cld
mov
push
add
int3
unpcklps
lret
sbb
das
xchg
jo
call
adc
or
pop
in
adc
and
scas
repz
add
pop
popf
aad
pusha
fmul
jg
mull
loope
xchg
sbbb
movsl
or
outsb
cmpsb
mov
cli
inc
push
nop
mov
xor
leave
jbe
inc
rorb
add
add
mov
dec
dec
clc
repnz
stc
les
fisttps
movsl
shll
dec
cwtl
jno
call
or
sarl
pushf
and
js
pop
icebp
fidivrl
jmp
cmpsb
inc
pop
pop
cli
or
das
cwtl
stos
cmp
push
sbb
fmul
test
mov
mov
scas
mov
cmp
decl
fsubs
pop
xchg
bound
dec
movsb
ret
jge
jmp
add
mov
cmp
outsl
sub
ljmp
into
sarl
popf
jns
xchg
pop
sub
dec
jmp
lcall
sub
pop
ret
or
cmp
loop
sti
mov
add
cmp
cmp
test
jp
jo
jp
ret
aam
out
dec
push
pop
xor
jno
cmp
pop
fists
sbbb
and
les
jecxz
bound
mov
idiv
outsb
adc
cmp
out
popa
mov
repz
xchg
stos
sub
incl
xchg
adc
in
stc
xchg
fisttpl
inc
imul
jae
inc
enter
mov
push
push
jl
mov
dec
add
cs
adc
push
pop
mov
ja
mov
out
xor
dec
pushf
dec
mov
sub
leave
fcomip
cmpb
cli
lcall
into
scas
data16
out
and
into
or
faddl
mov
pop
lods
ret
out
ds
add
pop
dec
fsts
dec
add
xchg
sbb
xor
inc
int
and
ljmp
jo
mov
sbb
and
cmpsl
mov
push
ret
int3
in
xchg
outsl
imul
call
std
imul
pop
jmp
ret
sub
jb
xor
pusha
andb
jmp
jmp
lods
repnz
and
inc
sbb
cmpsl
sti
pop
dec
push
mov
ljmp
shrb
jns
sub
xchg
or
test
push
gs
aam
jmp
mov
mov
add
xchg
adc
mov
imul
mov
mov
sub
xchg
adc
push
dec
hlt
pusha
cmc
add
pop
out
decl
fcomps
cmp
cmp
icebp
movsb
mov
and
cmp
and
clc
decl
pop
or
mov
lret
test
jp
jns
incl
mov
jno
mov
mov
inc
ljmp
hlt
pop
outsl
call
pop
imul
in
ret
adc
mov
and
decl
mov
fsubrl
sub
push
adc
cmpsl
xchg
daa
outsb
cmp
fistl
clc
lock
sarb
sub
push
out
jp
inc
lahf
scas
mov
scas
clc
incl
pop
add
sbb
xchg
test
leave
xlat
imul
jmp
dec
cwtl
popa
pushf
movsl
or
pop
cmp
sub
sub
loope
in
js
add
add
mov
incl
cmp
jae
inc
int3
loopne
jmp
pushf
outsb
call
addl
jl
rorb
mov
adcl
mov
pusha
push
pop
cmp
mov
movsb
jnp
iret
orb
lret
std
inc
sbb
sbb
cmpsb
jmp
mov
push
fs
out
outsl
repnz
or
dec
inc
adc
icebp
pop
add
cmp
ret
leave
pop
ss
lea
call
jmp
fs
jo
and
and
pop
cld
not
cmpsb
sahf
inc
in
sbb
lock
and
sub
adc
imul
or
mov
fsubp
add
jmp
xchg
inc
aas
rcrl
xor
test
in
movsb
imul
mov
mov
jle
jmp
out
fstpt
xchg
les
insb
mov
scas
cli
leave
jl
push
jle
sub
and
scas
in
in
dec
dec
push
ds
push
and
subl
cmp
add
push
dec
jns
pushf
leave
adc
aaa
aam
jg
inc
popa
icebp
lock
pcmpeqw
into
movsl
xchg
jle
mov
push
mov
jge
cmp
into
jge
xor
xlat
or
movsb
mov
xchg
xor
leave
inc
fstl
mov
cmp
inc
pop
insl
adc
xlat
es
call
je
movsl
inc
out
add
mov
call
ss
sub
arpl
insb
stos
enter
push
push
popa
jbe
fcoms
mov
cmp
push
daa
ja
lods
sbb
inc
add
incl
cld
sub
push
jo
jo
pop
fidivrl
pop
fdivr
stos
pushl
inc
mov
lods
xchg
or
pop
in
sub
mov
addr16
dec
mov
sahf
in
cmp
cli
pop
icebp
mov
rcl
mov
ds
mov
pop
das
mov
mov
cmpsl
adc
pop
aam
stos
rcll
jle
cmp
sbb
cmp
pushl
addr16
sub
in
xor
icebp
ret
mov
pushf
nop
xchg
jl
sahf
incl
push
xchg
cld
dec
mov
rcrl
and
mov
cld
push
fldcw
xor
ret
out
push
mov
push
pop
push
lret
inc
insb
minps
stos
adc
incl
insl
inc
lcall
lret
mov
or
add
push
lret
test
push
dec
xchg
aaa
jo
cmp
mov
daa
es
lret
std
mov
lea
xchg
or
in
in
arpl
fcomps
cmp
add
imul
sarl
call
xor
mov
ret
rcrb
sbb
lock
pop
cli
int
fcomip
pop
out
and
xor
xor
mov
stos
xor
into
aad
scas
in
sahf
pop
cmp
call
jg
cmpsl
mov
fadd
ja
sbb
cmc
lock
test
daa
call
dec
mul
jbe
lea
sub
xlat
lret
pushl
pop
adc
mov
sub
and
pop
leave
sbb
lock
mov
pushl
xor
mov
mov
pushf
stos
mov
sbb
mov
sti
pop
pop
pushl
stc
push
rol
mov
ror
lods
pusha
std
push
out
mov
lods
pop
in
or
pushl
aad
inc
add
movsl
clc
pop
lods
mov
fstpl
inc
push
dec
pushl
cmp
rcrl
pop
cmp
in
dec
jge
push
jnp
dec
adc
rol
jmp
in
jae
fstl
cmp
leave
fidivl
or
jmp
fcoml
sub
aad
jmp
sub
outsl
and
mov
add
jnp
sti
jnp
rep
ficomps
call
jl
inc
push
and
loopne
out
movsb
sbb
jge
aaa
mov
lea
pop
and
adc
adc
mov
hlt
push
jmp
mov
and
push
jecxz
cvtpi2ps
movsl
push
xor
call
inc
jno
xor
mov
ljmp
icebp
inc
push
pushl
popa
ljmp
bound
in
and
imul
aas
loop
stos
jns
sub
int
xor
aam
and
xor
lcall
fisubrl
sub
adc
mov
dec
xchg
sar
cmpsb
cmp
jno
popa
pop
pushl
dec
scas
mov
add
clc
pop
xchg
mov
mov
loope
xchg
jb
lods
addr16
sub
pushl
rol
push
les
cs
sub
loopne
mov
test
xchg
and
lcall
pop
aaa
lcall
insb
jbe
shrb
imul
cmp
sbb
add
clc
pushl
inc
cld
fldcw
mov
jb
inc
movsb
and
jg
pop
add
loopne
negb
sub
xchg
jnp
jbe
ss
jo
add
jecxz
imul
cmp
jecxz
mov
and
pushaw
sbb
add
jp
mov
roll
test
mov
or
mov
cwtl
ja
rol
and
pop
add
cmc
icebp
and
mov
call
in
xchg
decl
scas
mov
jecxz
idivb
hlt
pop
cltd
cmpsl
mov
scas
hlt
sub
incl
scas
mov
andl
loop
hlt
andb
mov
adc
and
push
or
adc
push
and
call
movsl
out
lea
mov
dec
cmp
enter
dec
push
pop
adc
pusha
add
out
mov
jns
mov
push
jmp
imul
inc
mov
jge
and
push
adc
addr16
decl
sub
mov
pop
movsb
mov
fucomi
loopne
mov
cmp
mov
push
or
movsl
nop
sarl
lcall
dec
fsubrs
data16
aaa
into
or
pop
add
xchg
lahf
loopne
in
xchg
in
cmpsb
mov
scas
or
decl
pop
scas
jns
insb
push
cmpsb
fisttps
cli
jg,pt
pop
loop
mov
cmp
pop
loopne
and
xor
dec
fs
pushf
shrb
pop
cmp
pushl
dec
addr16
inc
mov
mov
pop
out
xchg
mov
mov
add
pop
adc
inc
call
shlb
arpl
pusha
push
sahf
adc
add
arpl
dec
push
adc
pushl
jo
aaa
test
xchg
pop
lock
pop
ret
jno
adc
jnp,pn
ret
bound
jmp
xchg
push
xchg
ret
and
cwtl
adc
movsl
cwtl
nop
in
push
push
sbb
scas
adc
inc
inc
jo
imul
push
inc
mov
jae
mov
fidivrl
out
or
mov
xor
es
sbb
xchg
jle
mov
inc
testb
xchg
lock
push
fwait
movsl
sbb
cmpsb
outsl
clc
lcall
test
ret
mov
in
cmp
cmp
jmp
jnp
shrb
in
rorb
sbb
inc
fnsave
fdivr
lcall
pusha
pop
lret
stos
push
push
les
push
push
jbe
xchg
adc
fs
outsb
pop
or
ret
mov
movsl
adc
dec
cmpsb
xchg
push
addr16
adc
and
inc
inc
xchg
test
push
fimuls
pop
in
cwtl
inc
into
shlb
cld
test
icebp
rol
rolb
das
mov
and
push
pop
repnz
xor
in
scas
pop
dec
push
push
push
jg
lcall
addr16
xchg
cld
xchg
pop
aam
jle
jp
mov
add
addr16
stc
stc
xchg
and
xchg
fs
stc
cli
enter
dec
adc
testl
ror
out
fsub
xlat
ret
pushf
sub
dec
cltd
call
pop
dec
out
or
pop
cli
out
or
pop
std
jmp
fidivrl
cmp
int3
mov
push
mov
fwait
ljmp
jl
xchg
popf
lods
dec
cmc
movsb
js
int3
test
jno
loopne,pn
inc
or
xlat
push
ret
xor
push
aad
adc
push
adc
sub
notl
call
insl
fnstenv
jl
lahf
and
int3
mov
loop
andl
sahf
lock
decl
and
imul
stos
fadds
cld
push
mov
dec
sar
decl
enter
push
sti
outsb
inc
xor
inc
or
pushl
mov
mov
sbb
test
rcll
loop
lcall
sbb
je
cmp
inc
mov
repz
in
iret
or
jle
push
gs
push
imul
rcrb
or
imul
cmp
jle
fadds
insb
shll
cmp
pusha
dec
aam
push
cmp
mov
shlb
inc
dec
out
cli
inc
inc
test
stc
imul
cmpsl
and
fwait
mov
jl
push
or
int3
lds
pushl
jle
push
in
in
xorl
sbb
lcall
ljmp
and
jae
xchg
fldl
xchg
ljmp
and
push
addr16
mov
dec
pop
sarl
rcr
outsl
mov
mov
in
out
jbe
je
jns
cmpsb
test
cli
adc
push
and
cltd
scas
mov
mov
fcomip
ljmp
jp
popl
xchg
dec
inc
xchg
pop
inc
movsl
imul
jmp
inc
xor
pop
decl
or
push
dec
mov
stc
and
pop
call
cld
xlat
cmp
rolb
adc
add
push
out
mov
add
in
pop
jmp
rcr
loop
or
aas
pop
pusha
mov
cmpsl
mov
lahf
jg
call
mov
stc
mov
int3
pop
push
into
xchg
adc
bound
sub
pushl
lea
out
xor
mov
pushf
mov
adc
lcall
roll
fadds
and
mov
insl
sub
in
or
add
fmul
gs
pop
rcll
xor
sbb
loop
lods
sub
add
jb
and
gs
jge
xchg
decl
ds
dec
inc
cmp
mov
xor
aad
jp
fildll
lcall
insl
mov
sbb
mov
inc
addr16
mov
mov
push
loop
pop
out
icebp
xchg
repnz
cmpsl
pop
movsl
add
incl
xor
dec
out
shrb
pop
sbbb
bound
int3
daa
adc
int
cmpsl
loop
mov
mov
ficoms
adc
pop
or
aaa
call
std
sub
fisubl
scas
sbb
pop
fisttpl
mov
xchg
xchg
imul
test
mov
dec
lods
xor
pop
insl
addl
les
call
sub
fnstenv
mov
push
cmovp
and
and
in
pop
mov
ljmp
into
inc
cmp
cmp
sub
mov
jns
clc
testl
push
pop
jg
call
adcb
loope
enter
xor
jno
jns
cmc
mov
loop
and
adc
pushl
sbb
out
lock
mov
sbb
mov
dec
call
inc
xchg
cmp
and
push
in
dec
lods
mov
and
add
fisubrs
dec
xchg
lods
scas
dec
sub
sub
lock
lcall
testl
faddl
in
pop
std
test
and
inc
cli
xchg
mov
ret
mov
in
loopne
and
adc
and
or
fwait
lock
mov
decl
ljmp
pop
add
dec
icebp
push
cmpsb
sbb
xor
daa
mov
aad
mov
lea
icebp
adc
pop
test
dec
sub
or
mov
xor
or
pushf
xor
cmp
scas
pushf
test
mov
ds
lods
jb
lcall
out
aam
sub
lcall
xor
jecxz
mov
popa
lret
arpl
pop
popa
fdiv
sbb
insb
fcomip
sbb
fisttps
stos
mov
mov
inc
popa
dec
andb
jg
cmovbe
xorl
les
push
sub
jg
enter
outsl
sub
dec
adc
aam
mov
fmuls
mov
in
cmpsb
lcall
aas
in
ds
aaa
fisubl
fdivl
pusha
fwait
and
mov
lock
dec
cmp
push
lret
jl
cli
aam
cltd
pop
mov
roll
decl
mov
mov
lret
push
loopne
xor
push
aaa
jns
or
enter
adc
lcall
jecxz
int
push
dec
jecxz
jb
outsb
jb
fisttpll
mov
jge
mov
jno
lock
dec
cmpsb
add
pusha
jp
popa
push
inc
mov
xchg
fists
and
add
mov
adcb
cmpsb
fidivl
std
insl
fnstsw
mov
lcall
dec
or
mov
pop
ja
imul
js
lret
cmp
aas
add
mov
xor
xlat
pop
or
insb
insl
clc
outsb
lcall
jo
mov
push
ja
test
clc
sti
mov
mov
sub
rol
adc
dec
fbstp
push
ss
and
xorb
mov
pop
cmp
insb
sub
xchg
aas
mov
or
imul
shll
mov
stc
sbb
ljmp
xchg
dec
scas
test
mov
dec
scas
insl
mov
push
add
incl
pushf
xchg
insl
scas
cmpsb
bound
mov
push
or
incl
push
xor
xlat
aaa
test
aam
add
cmp
mov
scas
incl
pmaddwd
cmc
push
pop
inc
jl
in
jns
sub
incl
mov
dec
outsl
aam
ja
sarw
in
pop
fstpl
loopne
fiadds
sti
or
jle
sbb
jmp
popf
jl
out
sub
and
add
outsb
jecxz
sti
sbb
or
incl
xchg
pop
scas
incb
push
sbb
int
xchg
inc
dec
arpl
pop
nop
lods
and
sub
outsb
fsubs
arpl
mov
rorb
shrb
jae
movsb
call
jbe
sbb
jo
xchg
lret
mov
lret
int
jbe
xchg
sub
mov
sub
or
xor
ret
fpatan
jo
sub
filds
js
xchg
fstpt
push
jo
xchg
jl
scas
incl
xchg
mov
sbb
addr16
js
push
push
xchg
pop
aas
mov
pushl
test
mov
test
jne
mov
addl
mov
or
xor
jmp
sbbl
leave
cmc
push
xor
xchg
push
fnstcw
insl
out
mov
popa
in
clc
decl
in
mov
leave
pushf
out
inc
jle
jno
fcom
pop
mov
jg
pop
int
pop
push
clc
add
cmp
lods
loopne
icebp
push
xor
or
cmp
mov
xor
test
das
clc
ja
clc
cwtl
inc
js
cmc
cmp
cmpsb
decb
pushl
and
jo
sbb
cmp
mov
loop
popa
mov
lret
mov
fcmovu
xchg
cmp
test
adc
fcmovnb
adc
mov
xchg
mov
loope
inc
lcall
push
or
and
call
jno
scas
lods
sub
js
pop
sub
sub
std
cmp
pop
cs
mov
popf
cmp
mov
aad
inc
leave
sub
idiv
mov
out
jecxz
out
jbe
or
in
mov
out
lcall
leave
cwtl
mov
inc
ljmp
adc
leave
push
mov
sarb
call
lcall
sub
sbb
jbe
stc
test
lods
sbb
add
ss
decl
std
dec
fadds
ficoms
jno
xchg
dec
and
and
push
and
loop
aaa
dec
repz
aaa
mov
sarb
fwait
pop
movsb
or
cmp
pop
fisubrs
sbb
xor
pop
jmp
ja
aaa
mov
in
cmc
sahf
hlt
fwait
loopne
fcoms
ret
mov
decl
fldt
dec
addr16
outsb
pop
inc
test
cmp
out
fstl
mov
adc
push
test
mov
cmp
fadds
sarl
shll
fwait
imul
test
stos
push
shll
xchg
test
sub
fwait
incl
inc
scas
xchg
fidivl
mov
xchg
fstpl
test
decl
pop
out
mov
jmp
mov
loope
sqrtps
push
sub
push
fadds
mov
jl
and
enter
push
sub
dec
pushf
fwait
mov
xchg
call
push
repnz
pop
pop
cli
movsb
popf
imul
fcoms
jecxz
cwtl
rcl
fs
fidivrs
or
ret
and
int3
dec
pop
aaa
scas
inc
lods
inc
sub
rcl
or
mov
jl
jmp
andl
mov
and
jne
mov
testl
int3
mov
and
js
inc
fxch
mov
inc
loop
jnp
aas
or
cli
int
pop
mov
mov
out
or
push
pushf
outsl
lcall
xor
test
js
stos
decl
in
pop
out
into
mov
inc
stc
push
push
int
icebp
dec
cmp
lcall
jmp
and
scas
push
notb
lods
dec
mov
aam
mov
and
push
pop
dec
add
test
pusha
jp
incl
out
add
out
cli
or
fcompl
cmp
jo
cmpsb
xor
incl
aad
daa
repnz
cmp
dec
lods
icebp
and
popf
pushl
pop
orl
sbb
and
repz
add
test
jg
mov
pop
inc
pushf
repz
mov
push
jmp
fchs
out
cmpl
inc
enter
decl
loop
ss
aas
pushf
and
mov
and
ljmp
xchg
push
shlb
mov
fcomi
setp
mov
and
rclb
ljmp
insl
aam
fdivrl
lods
xchg
out
xlat
rcrb
sbb
sub
jmp
shlb
stc
cmp
imul
lcall
fisttpl
icebp
mov
call
subl
imul
int3
cs
mov
test
xor
incl
xchg
jne
clc
xor
jae
mov
mov
xor
or
add
das
and
mov
mov
adc
jae
ret
dec
add
ljmp
or
sbb
ja
into
dec
pop
adc
data16
pop
outsl
outsb
arpl
mov
add
inc
jg
divb
sbb
cmp
test
lret
adc
cmpsb
pop
clc
xchg
jo
incl
xor
adc
jecxz
dec
cmpsl
dec
test
fimull
jmp
push
mov
jno
ret
in
in
jb
sbb
sarb
inc
pop
adc
inc
fs
mov
decl
cmp
andl
rorb
push
mov
arpl
add
test
ljmp
xchg
cmc
mov
mov
jecxz
mov
cwtl
lock
push
sub
test
sti
icebp
mov
jo
scas
cmp
jne
xor
test
jmp
fstpl
out
das
movsl
jae
adc
cmp
or
push
adc
cwtl
xchg
ljmp
les
and
sti
shll
fs
mov
xchg
xor
incl
mov
lods
or
ret
int
cmp
mov
jp
lds
lcall
push
jge
jne
sbb
inc
add
repz
outsb
shll
or
cmp
push
in
decl
mov
in
test
pushf
sti
jecxz
repz
adc
fs
daa
and
nop
jg
arpl
icebp
in
sbb
cmp
mov
pop
out
iret
sbb
pop
mov
outsb
dec
sub
insl
mov
std
add
popf
movsl
mov
jb
incl
push
ret
in
jmp
gs
mov
aaa
shlb
push
mov
incl
sbb
es
aam
aaa
sub
mov
fstl
stc
pop
lret
stc
pusha
mov
dec
ds
xor
popa
sti
lahf
ds
int3
mov
fstp
inc
lods
cmpsl
shlb
mov
mov
cwtl
lcall
cli
in
add
inc
add
test
aas
loop
fdivrp
arpl
push
pop
cmp
mov
jae
repnz
leave
hlt
xor
inc
popa
xchg
pushl
xchg
or
cmp
mov
jle
lea
xor
mov
pusha
cmpsb
filds
cld
dec
inc
loope
jp
clc
int
es
int
mov
in
addr16
inc
push
pusha
mov
inc
enter
add
fdivrp
mov
sbb
cld
outsl
cli
jg
aad
mov
fsubl
cs
pusha
and
pusha
xchg
pushl
mov
inc
scas
in
add
mov
mov
jne
pop
xchg
jg
jg
inc
lods
fs
fbstp
mov
mov
mov
jmp
mov
push
in
lret
mov
add
popa
inc
xor
or
sti
fidivs
stc
loope
out
fcomps
les
mov
fsubs
jbe
dec
sub
mov
test
incl
data16
mov
pop
leave
push
aas
popf
xchg
and
or
sbb
adc
stos
cmpl
adc
dec
fldt
mov
jg
xchg
testl
lret
test
les
add
xchg
shl
push
ljmp
fidivrl
fwait
jno
mov
inc
mov
lea
ret
das
call
xchg
xchg
icebp
decl
or
ret
push
mov
sub
loopne
mov
insl
xchg
adc
fbld
pop
in
and
enter
repnz
pop
mov
fisubl
outsl
mov
fcomip
lcall
outsb
jnp
mov
cli
sub
push
inc
ss
xchg
mov
fwait
cmp
mov
sbb
insl
cmpsl
push
imul
cmp
or
push
add
sub
cld
decl
dec
pushf
popf
fildll
cmp
fcomip
fistpll
dec
mov
in
sbb
inc
inc
mov
mov
xchg
jge
out
mov
cli
sub
inc
mov
jb
and
test
call
pop
jmp
in
xchg
aaa
pop
popf
lods
inc
dec
imul
fs
in
imul
fldl
pushl
in
inc
or
push
fsubr
xchg
pushf
mov
mov
cli
call
aaa
or
aaa
push
fdiv
cmpsl
icebp
leave
int
push
dec
loop
fs
stc
or
cs
pop
mov
insb
es
fmul
mov
jmp
mov
adc
jno
push
dec
ds
lret
ret
fwait
push
sahf
sub
adc
or
mov
xor
xchg
movsb
jecxz
pop
shrb
inc
bound
lret
pop
imul
inc
outsl
xor
outsb
xor
ljmp
stc
fildl
cmp
mov
xchg
cwtl
pop
stos
and
cmp
sbb
pop
mov
out
sub
fcomps
pop
lret
jg
mov
mov
dec
mov
repnz
lahf
mov
fwait
loopne
incl
dec
xor
xlat
sub
jp
imul
and
jg
dec
mov
inc
or
cmp
jo
dec
sub
in
mov
add
xchg
push
lcall
scas
fisttpl
xor
xchg
in
rolb
bt
sti
and
sahf
int3
imull
call
bound
pop
sub
sub
fldenv
jae
call
clc
in
lods
subl
jmp
cmp
xor
pop
arpl
sbb
sub
cmpsb
mov
aas
roll
in
mov
mov
pop
cld
push
cltd
cmpb
outsb
aad
ss
push
loope
ljmp
sub
adc
pop
and
jbe
clc
mov
pop
pop
jbe
bound
mov
scas
pop
fstpt
shrb
call
mov
or
adc
das
scas
in
stos
rcrb
in
repnz
cmp
lcall
icebp
cltd
adc
stc
adcl
lds
test
cs
push
pushl
inc
sbb
iret
enter
mov
fdivrs
in
mov
cmp
dec
or
roll
call
call
and
lret
adc
mov
test
push
sub
rclb
push
aaa
daa
mov
cltd
lods
out
jno
out
call
xor
xchg
mov
mov
cmp
push
push
inc
pop
mov
dec
aas
fildl
lahf
pushl
iret
pushl
mov
jp
push
sbb
push
jo
sbb
call
push
shl
adc
pop
sub
jmp
add
jecxz
pop
xor
pop
pop
das
cmpsb
mov
stos
cmp
push
inc
mov
mov
add
fbld
adc
ljmp
jae
mov
jne
incl
pusha
les
and
loopne
sub
xor
mov
or
lret
dec
ljmp
and
mov
mov
in
fistps
clc
dec
dec
pop
or
push
test
call
sub
nop
clc
outsl
push
into
shlb
stos
jp
lahf
cmpsb
decl
xor
push
aas
pop
fsubrs
in
lcall
inc
rcll
cld
xchg
les
jecxz
fs
stc
out
pushf
jp
decl
push
pushl
xchg
mov
jo
in
mov
pop
cmp
js
mov
add
test
idiv
test
sbb
lcall
vcvtsi2sdl
jg
cmp
push
push
neg
fdivp
jge
adc
call
dec
add
test
adc
mov
sub
mov
inc
mov
xchg
mov
incl
ret
mov
push
fnstcw
and
and
iret
out
filds
imul
xor
test
inc
mov
pop
std
pop
push
push
push
es
incb
xchg
shlb
loopne
xchg
jle
call
pop
mov
test
push
and
push
xor
repnz
dec
inc
pop
mov
test
mov
sbb
adc
jp
out
cmc
fidivrl
cmp
das
int
aam
addb
in
sbb
sub
mov
pushl
mov
lret
test
sbb
test
into
loop
adc
call
xchg
push
int
popa
mov
jg
imul
clc
or
cmp
out
lds
scas
clc
xchg
cmp
dec
mov
jecxz
and
sbb
xor
out
jne
insl
jge
mov
aam
pop
in
test
and
and
movsl
push
cwtl
fisubrl
fdiv
push
daa
and
cmp
pop
or
pushl
mov
aad
pop
sbb
fidivl
pop
lock
stc
push
ficompl
dec
pop
cli
xchg
shrb
sub
fbld
popa
jae
popa
mov
and
cs
lock
pushl
mov
mov
or
add
roll
outsb
inc
or
ss
sbb
fistpll
movsb
mov
shll
divb
std
pop
stc
jl
adc
test
fwait
decl
push
dec
sub
imul
mov
jecxz
add
daa
jno
xchg
push
dec
es
imul
add
adc
mov
mov
jg
mov
xchg
or
lcall
push
mov
add
pop
aaa
mov
cmp
inc
outsb
mov
ljmp
lret
js
test
dec
andb
rcrb
lcall
rcll
out
push
dec
inc
arpl
out
cwtl
leave
add
push
sub
dec
insl
and
es
out
cld
dec
stos
sub
mov
sub
pop
dec
lcall
test
aam
negl
jmp
arpl
pop
add
cmp
outsb
ficompl
mov
jns
cli
adc
add
mov
insl
dec
ss
push
lret
iret
loope
dec
call
add
inc
imull
sbb
push
inc
and
dec
dec
stos
add
inc
out
stos
out
sbb
out
xor
and
cmp
out
clc
lcall
fnstsw
xlat
jae
sti
or
sub
sub
out
and
and
cmp
sbb
into
sbb
push
sub
jl
jge
xchg
aaa
je
xchg
cli
inc
add
imul
mov
outsl
test
iret
xchg
nop
in
cltd
sti
rcrl
xchg
sbb
in
fistps
lret
cmp
cmp
xchg
test
fstps
inc
push
clc
fistl
mov
idiv
incl
fistpll
mov
mov
cld
out
mov
pop
jmp
fwait
pop
pop
mov
in
mov
sub
and
mov
cmp
jmp
sti
aam
or
sub
mov
lea
nop
xor
add
jmp
push
cmp
icebp
data16
imul
dec
mov
gs
repnz
lds
lea
cmp
jno
out
push
sbb
jns
popf
add
xor
clc
neg
sub
jle
ja
jl
fisubrs
xor
push
pop
jnp
decl
ret
inc
xchg
dec
out
fistpll
test
jns
mov
mov
call
xor
scas
popa
dec
xchg
imulb
and
jge
jg
shl
lcall
push
mov
pop
adc
xlat
push
mov
sbb
ret
ljmp
jecxz
fwait
sbb
sar
ljmp
cld
outsb
jo
out
inc
mov
lods
sti
sub
cli
mov
sahf
lcall
pop
push
mov
inc
dec
inc
mov
test
lock
sbb
cli
inc
std
fdivr
pop
lods
sti
fcmove
inc
popf
add
pushf
jbe
lods
xor
pop
imul
sbb
jmp
or
adcb
scas
mov
ljmp
dec
adc
xor
and
mov
jl
jae
and
sbb
outsl
lret
and
cmp
jecxz
jg
pop
xor
or
scas
and
sbb
enter
sti
push
push
mov
ficomps
loope
sbb
test
pushl
pop
subb
inc
mov
roll
bound
shlb
lcall
fdivl
add
imul
rorl
jnp
push
cwtl
mov
sub
pushl
aad
cmpsb
js
pop
stos
xchg
adc
or
jecxz
xchg
into
jo
mov
or
call
push
or
not
sub
xor
stc
push
sub
ret
inc
or
xor
mov
cmp
stos
dec
pop
dec
inc
lcall
add
in
mov
ljmp
fidivs
cld
add
jb
imul
mov
jns
lds
repz
inc
sarb
cld
sbb
xchg
add
sahf
imul
hlt
push
push
shrl
and
pushl
les
scas
cmp
dec
sbb
mov
jg
inc
inc
cwtl
insl
pushf
dec
push
lds
cmp
jle
xor
movsl
sbb
loop
sbb
push
mov
scas
mov
sbb
clc
jbe
mov
aam
add
sbb
repnz
lock
incl
std
arpl
mov
std
out
out
cmp
and
mov
test
jnp
adc
incl
adc
lods
mov
test
fimull
inc
push
jmp
add
lret
dec
stos
sub
inc
enter
inc
pop
mov
jne
pushl
sub
in
notb
mov
inc
ja
xchg
xchg
in
inc
mov
jo
clc
mov
sub
fiadds
dec
fs
imul
mov
andb
lcall
jmp
add
scas
push
popf
add
push
outsb
into
or
push
jns
mov
aas
add
pop
outsb
and
and
jl
ret
push
jg
mov
in
lea
loopne
movsl
mov
mov
jae
jmp
jmp
inc
addb
jl
mov
mov
sub
sbb
cmp
cmc
ljmp
sub
addl
testl
xchg
and
xchg
test
push
add
ljmp
push
aaa
and
arpl
js
xadd
fcomi
jbe
rorb
shll
jns
pushl
movsb
and
std
xchg
cli
cs
mov
sahf
scas
push
xchg
mov
loopne
test
sar
cmp
or
mov
movsl
stos
stc
mov
bound
mov
fcmovne
mov
mov
mov
add
out
xchg
dec
sbb
inc
lret
xchg
mov
adc
jne
jb
incl
push
lahf
push
inc
mov
sub
data16
out
and
outsl
mov
add
cmc
jmp
rolb
insl
mov
gs
push
and
mov
sub
jg
lods
pushf
adc
sti
xor
lock
ja
sub
sbbl
pop
aad
jb
sub
int3
jb
jne
xlat
cmp
in
testl
xchg
hlt
xlat
ja
adc
ret
inc
and
lret
mov
call
inc
xchg
mov
in
rorl
sbb
cmpsb
mov
adc
xchg
push
int3
repz
cmp
call
rcr
fcmovne
test
scas
mov
mov
mov
adc
sub
push
inc
bound
cmc
lahf
xchg
or
movsl
gs
out
cmpsb
cmp
insl
shrb
or
popf
adc
pop
or
lcall
sub
or
push
jecxz
popa
xchg
or
xor
xor
dec
mov
add
pop
into
hlt
in
test
xor
out
xor
lcall
outsl
call
daa
push
dec
or
icebp
pop
popf
fsubs
push
xor
iret
adc
xor
sbb
icebp
std
mov
inc
jge
int
add
mov
pop
in
stos
push
pop
outsl
sub
insb
push
dec
xchg
mov
sub
cmp
sarl
mov
into
xchg
jns
or
addb
add
aaa
shl
xchg
and
lods
int3
add
test
ja
scas
add
ficompl
jl
adc
test
and
imul
inc
pushf
out
popf
mov
adc
pop
mov
jmp
pop
mov
call
xor
lock
jge
iret
fstl
lcall
or
arpl
dec
push
test
mov
inc
scas
pop
xor
ljmp
mov
loop
test
cmp
jmp
jg
mov
jne
aas
cmp
iret
movsl
lahf
loopne
pop
pushf
pushf
mov
iret
fwait
aam
jmp
add
jbe
and
clc
std
or
outsb
mov
pop
jo
push
outsl
into
movsl
test
jg
lcall
fwait
call
pop
cmpsb
dec
lock
outsb
clc
call
push
stc
lods
xor
and
add
repnz
push
add
pushl
dec
jne
inc
shlb
fdivl
mov
jmp
decl
lock
mov
adc
jp
push
xchg
leave
inc
ljmp
xchg
out
mov
call
jp
arpl
clc
rcll
pushw
jbe
fcom
sbb
jmp
cmp
push
inc
repz
add
and
mov
call
out
add
jbe
cli
clc
out
mov
mov
xor
cld
das
clc
outsb
xchg
int
mov
push
cmp
leave
xor
push
addr16
mov
sbb
int3
push
xor
fcomip
jnp
fstl
test
add
pop
orl
incl
dec
jbe
adc
cmpsb
adcl
inc
cltd
es
dec
je
pop
sub
incl
inc
push
aas
fldcw
push
inc
sti
sub
aam
shll
dec
mov
cld
jmp
incb
lock
pushl
sbbb
sub
push
ret
or
or
cmp
push
mov
test
sub
pop
adc
adc
int3
push
add
incl
add
loope
adc
cltd
in
aad
mov
push
and
jmp
test
decl
popf
dec
adc
pop
leave
fidivs
adc
movsl
mov
pop
in
sub
xor
cmp
inc
out
dec
call
and
ljmp
stos
push
dec
dec
adc
fbld
mov
in
jge
xchg
push
mov
and
out
rorb
adc
adc
out
and
cmp
aas
jbe
imul
mov
dec
or
repnz
ret
in
xor
jp
mov
shrl
mov
xor
mov
jg
jnp
in
nop
ljmp
test
jns
movsb
xchg
add
cli
pop
mov
xchg
fnstenv
pop
sbb
jg
incl
ds
in
test
jb
sub
int3
pop
data16
mov
dec
stos
call
jmp
decb
mov
mov
mov
or
xchg
cmp
decl
lcall
sbb
sar
inc
outsw
testb
dec
sub
dec
pop
rcrb
mov
inc
jecxz
fidivs
push
xchg
mov
daa
int3
add
mov
popa
loope
fldl
out
imul
jmp
mov
push
mov
pop
cs
mov
or
mov
pushf
lods
cmp
xchg
mov
jb
adc
nopl
pop
aad
xlat
sbb
lea
jp
push
rcrl
xor
xor
insb
idivb
popf
dec
sbb
decl
jnp
jb
push
cmp
pop
cli
inc
stos
jp
dec
or
inc
lahf
mov
dec
int3
or
rolb
dec
leave
movsb
cmc
mov
adc
inc
mov
or
arpl
mov
dec
or
push
mov
inc
sbb
push
xchg
jnp
in
push
push
popa
fwait
jns
in
loopne
cmp
add
sbb
mov
cs
push
jnp
push
popf
or
inc
push
fwait
stos
push
push
jnp
out
in
cmpsb
mov
jnp
mov
rol
repnz
or
jmp
aaa
add
fwait
adc
mov
jmp
shrl
or
sub
sbb
call
scas
stc
sti
sti
add
xlat
rol
mov
xchg
push
jmp
inc
sbb
movd
call
push
icebp
mov
cmp
out
movsb
add
cwtl
push
call
ljmp
mov
lret
jae
jo
lret
mov
jnp
mov
cmc
cli
enter
add
jge
xchg
ret
dec
lret
nop
stc
out
daa
popl
popf
push
xchg
aaa
aam
clc
lcall
shlb
fimull
xchg
int
test
mov
push
lcall
lahf
xorl
aam
pop
jns
push
cmp
jmp
xor
sbb
mov
jmp
das
push
mov
fiadds
test
push
test
cli
jno
cwtl
lret
xchg
out
jae
imul
out
mov
movsb
and
adc
decl
idivl
testl
int
lock
and
push
test
decb
push
sahf
inc
mov
cmp
idivl
aaa
std
decl
adc
test
das
icebp
int3
lods
push
xor
mov
fwait
test
pushl
mov
ficoms
stos
fsubr
mov
sahf
xor
mov
pop
inc
enter
aas
stc
loop
jmp
mov
subl
mov
addb
lret
sbb
lret
data16
rcr
divb
adc
jmp
cmpsb
sub
stos
outsl
sbb
fistpll
mov
add
xchg
jo
ss
ljmp
iret
sahf
and
sub
cli
fbld
pop
adc
popa
sbb
iret
cld
sub
push
lret
incl
insl
pop
dec
sub
sub
sub
mov
cmp
adc
in
decl
in
test
ss
pop
jl
lret
dec
inc
mov
jne
mov
pushl
movsb
hlt
test
sub
jae
sbb
add
mov
mov
dec
addr16
std
dec
jne
mov
data16
shll
mov
loop
inc
cmpsb
jmp
ss
inc
dec
sbb
push
aaa
daa
psadbw
popf
je
shll
inc
test
inc
dec
in
rolb
dec
into
or
fcoml
dec
xlat
adc
xchg
push
stos
adc
fistpl
jp
es
incl
fsubrl
pop
out
sub
and
mov
sahf
xchg
xchg
frstor
ljmp
mov
out
cli
adc
sarl
addr16
push
stos
repnz
cli
out
mov
adcb
sti
cmp
sbb
jle
cmp
movsl
push
je
out
lea
adc
jmp
mov
clc
les
pop
rcrl
repz
aaa
and
into
sub
adc
sbb
es
jmp
call
or
jle
mov
out
rcrb
xor
scas
dec
pushl
std
jo
mov
fisubrl
rorb
jb
add
test
jge
test
out
repz
aaa
leave
xlat
sarl
dec
mov
movsl
mov
inc
xchg
icebp
dec
push
mov
popl
into
inc
decl
dec
stos
push
enter
fs
xchg
and
add
inc
ss
add
push
adc
call
std
add
insl
rclb
and
outsb
sub
aas
je
stos
xor
loope
imul
scas
decl
cmovno
sbb
lea
je
lret
shll
incl
sar
decl
mov
into
mov
leave
add
push
or
pop
sub
icebp
fwait
and
aad
call
cld
push
loop
movsl
aad
or
xchg
call
dec
cmp
xor
movsl
add
idivl
incl
imul
mov
mov
jg
clc
lret
nop
sahf
int3
xorl
jl
outsb
mov
cmp
incl
or
in
nop
cmp
fpatan
frstor
adc
shl
or
pop
sub
xor
out
ret
ljmp
cmp
fisttpl
test
mov
cs
pushf
xchg
dec
ljmp
repz
sti
std
out
sub
mov
xchg
push
nop
sbb
aaa
std
in
xchg
call
add
jp
xchg
adc
jmp
add
inc
je
push
sti
sub
outsl
pop
mov
push
sbb
cmpsl
dec
inc
push
ds
stos
pushl
jmp
push
scas
enter
lret
jle
cmpsl
ss
mov
jle
xchg
xor
push
jmp
test
cmpl
mov
cmp
pop
push
xor
pop
in
int
fucompp
push
and
stc
stos
rcrb
stos
jne
scas
fsub
adc
xor
call
lahf
shrl
addl
mov
negb
fidivl
dec
test
pushl
sub
sub
rcll
pop
or
mov
lds
clc
mov
mov
decl
pop
sbbl
sbb
lret
test
into
inc
adc
stos
xor
push
pop
or
xchg
outsl
xor
dec
mov
mov
shrl
sahf
inc
js
incl
jl
or
icebp
xchg
icebp
inc
call
pop
lds
or
cld
jno
jmp
out
aas
testl
dec
lahf
inc
pusha
mov
stos
imul
js
jmp
sbb
xorb
call
jno
mov
cmp
ljmp
std
andl
insl
sbb
lods
out
jmp
pusha
cld
or
rcrb
mov
mov
popa
push
js
xchg
lret
pushf
scas
xchg
mov
or
mov
decl
stos
outsl
cwtl
fidivs
push
dec
loope
lods
mov
pop
cmpsl
jge
lds
dec
jg
xchg
cmpsb
cltd
mov
leave
mov
mov
arpl
out
inc
loopne
je
mov
jbe
mov
call
mov
push
ljmp
clc
inc
and
fldl
loop
cwtl
les
cmp
ljmp
dec
mov
stos
pop
lock
push
in
adc
and
cmpsb
pop
mov
scas
pop
subl
loop
fstp
mov
sti
loope
clc
call
mov
add
out
jmp
int
and
imul
jecxz
dec
sub
add
ret
push
decl
mov
hlt
ljmp
sbb
mov
mov
or
cmc
mov
mov
nop
lods
inc
ret
cmc
into
scas
mov
je
mov
jg
mov
or
mov
inc
stos
scas
aas
movsl
lret
cli
dec
xchg
adc
xorb
ljmp
mov
lcall
out
jle
cs
jbe
adc
shlb
jns
das
lcall
sub
and
lods
jle
jl
mov
cli
push
subb
fstps
push
push
imul
push
mov
push
adc
cmpsb
mov
adc
fmull
push
push
rcrb
cld
lcall
mov
sbb
jnp
loop
mov
lahf
jno
icebp
xor
cmp
decl
sub
jp
test
sub
mov
rclb
xchg
jmp
cltd
jmp
xchg
xchg
lcall
out
hlt
cli
push
and
push
outsb
leave
mov
sar
mov
inc
clc
mov
sub
push
and
test
jmp
ficompl
insb
sub
repnz
push
sar
incl
ds
call
xlat
inc
dec
cmp
lds
mov
repnz
pop
xchg
stos
sub
mov
insl
sahf
data16
filds
clc
enter
push
push
mov
out
clc
pushl
ret
stc
icebp
sbb
add
adc
mov
sub
add
std
cmp
push
sub
ficompl
cmp
cmp
rcrb
lret
cmpl
call
std
add
lret
and
loop
test
or
ret
adc
jge
cli
mov
ljmp
in
scas
jp
pop
add
sahf
std
aam
push
shl
inc
adc
out
xchg
push
cwtl
jns
insl
dec
pop
mov
push
jbe
imull
or
inc
bound
movsl
adc
ljmp
dec
dec
rolb
mov
add
mov
xor
int
cmp
out
mov
stos
cmp
repz
fisttps
stos
fnsave
cltd
push
mov
in
iret
inc
js
inc
rorb
xchg
push
or
pop
mov
sbb
bswap
jns
lcall
xchg
jbe
andb
jns
ja
jo
std
insb
xchg
int
jp
pushf
pop
sbb
adc
adc
pushl
jp
fsubl
push
cmp
mov
testl
adc
push
dec
sar
test
mov
and
pop
cmp
xchg
mov
dec
call
inc
aaa
cmc
mov
lods
inc
in
enter
pushl
mov
sahf
inc
outsl
clc
mov
int
adc
test
xchg
inc
push
fnstsw
jb
inc
mov
or
imul
mov
dec
mov
decl
aaa
lock
ja
call
lret
pushf
adcb
les
sar
lcall
and
add
sbb
push
ror
loop
dec
adc
testl
push
movb
or
inc
jg
add
jmp
ss
inc
pop
mov
hlt
adc
pop
outsl
out
jne
lret
in
sub
jmp
in
or
pop
decl
fdivs
jns
adc
clc
sub
inc
jne
adc
repz
in
enter
cmp
mov
enter
add
inc
scas
testb
push
mov
sarl
imul
lret
jle
pushf
icebp
inc
jg
jg
jns
mov
testl
mov
loope
cld
adc
xor
lahf
stos
mov
movsb
dec
stos
out
inc
push
inc
rolb
sub
stos
pop
mov
mov
sbb
lds
fidivs
xlat
fadd
sub
divb
dec
push
pop
scas
mov
pop
mov
in
fdivrp
pop
lcall
out
in
sub
cmpsl
cli
or
mov
in
sbb
fisttps
jo
jne
or
out
jle
stos
xor
mov
mov
clc
xchg
hlt
cmp
mov
push
jnp
stc
jb
fdivr
das
clc
mov
or
xor
lock
cmp
std
jg
repz
ljmp
or
ret
jecxz
pop
xchg
push
gs
push
je
mov
cltd
jae
dec
and
lcall
adc
pop
or
lahf
push
add
scas
sarl
mov
fwait
sti
fisttps
mov
sarb
imull
aaa
arpl
mov
iret
in
mov
inc
add
sub
lods
xchg
mov
cmc
test
sub
dec
xor
push
mov
jbe
je
xor
pop
pop
inc
cmp
push
daa
out
clc
incl
push
or
repz
decb
lods
xor
pop
ds
xchg
hlt
and
fmuls
mov
fisttps
mov
hlt
jae
mov
aam
les
xor
sub
jg
and
pop
imul
popa
out
push
into
lock
loopne
lcall
mov
mov
xlat
and
out
cmpb
sub
ljmp
push
lods
pushf
gs
adc
jle
cmp
push
pop
inc
loope
mov
mov
jno
adc
pop
mov
lock
add
mov
add
inc
outsb
cs
test
loopne
cmp
fcmovbe
and
lds
icebp
push
mov
mov
jmp
imul
sbb
xchg
rcll
jle
cmp
xchg
mov
jbe
sub
scas
and
cmp
repnz
movsb
loopne
push
xlat
decl
cwtl
xor
or
or
sbb
xor
je
mov
es
pop
jmp
push
dec
int3
ss
inc
mov
mov
jp
pop
setp
cmp
mov
mov
lcall
pop
ret
push
iret
dec
les
test
push
adc
ret
in
mov
ljmp
fbstp
push
push
into
push
sbb
cmpsl
mulb
pop
pop
mov
inc
and
insl
inc
call
add
dec
sbb
mov
movsb
xchg
icebp
stos
mov
inc
pop
sbb
repnz
loope
decl
into
jns
push
mov
fidivrl
je
call
arpl
sbb
inc
insl
das
cli
call
pop
jecxz
shrb
das
xchg
in
cmp
push
mov
sti
sbb
xchg
loope
incl
push
sub
aad
mov
ljmp
hlt
xor
cmp
popf
fsts
test
jns
and
decl
xor
les
mov
jb
add
pop
or
or
lds
jb
rclb
jecxz
sub
pop
pop
rcrb
call
or
push
cli
pop
jl
inc
jp
aad
jbe
pop
mov
jo
cmp
jecxz
decl
fstp
push
adc
push
lea
pop
mov
sahf
cld
jne
dec
aad
pop
aad
cwtl
add
pop
pop
hlt
mov
dec
adc
int
in
sbb
clc
pop
sub
ja
shlb
dec
inc
popf
js
cwtl
cmpsb
cmpl
fdivr
ljmp
out
xchg
jmp
pop
or
loop
add
mov
mov
shr
aas
cs
mov
sub
aad
cmp
pop
mov
in
mov
jmp
pop
cld
cmp
fmul
pusha
arpl
adc
mov
divl
mov
fwait
call
pop
pop
fldt
cmpsl
pop
inc
ljmp
sbb
adc
jns
lahf
inc
lahf
lock
std
fld
pusha
ret
out
mov
jge
lods
push
cmp
mov
negb
mov
push
ja
mov
lds
pop
mov
jmp
outsl
fwait
xchg
mov
push
mov
add
ljmp
popa
push
fisubl
sub
dec
fisubl
push
and
or
jno
jae
sbb
mov
sti
mov
scas
or
push
data16
ljmp
mov
adc
aam
mov
rcrb
xor
jb
adc
mov
into
push
out
push
mov
lock
lcall
dec
test
movsb
into
mov
into
xor
shlb
incl
pop
xchg
xor
and
lahf
int
mov
xor
pop
stos
mov
pop
cwtl
xorl
push
xchg
pop
pop
adc
mov
mov
jl
push
imul
popf
add
lahf
jbe
fistl
insb
xchg
lret
repz
std
xor
rolb
je
fsubs
mov
faddl
cmp
jecxz
movsb
insb
mov
sub
sub
mov
leave
dec
call
cmp
movsl
sbb
es
ret
shrb
and
or
decl
pop
mov
hlt
outsl
push
pop
fs
xchg
nop
xor
or
dec
cmp
lds
decl
and
mov
xor
nop
jae
sbbb
xchg
std
outsl
adc
and
xchg
sti
pushf
and
ljmp
push
je
jmp
aas
nop
fwait
mov
cmpsb
daa
fcmovnu
pop
testl
mov
outsl
test
cmp
push
js
pop
fmull
data16
lods
and
xor
loopne
stc
mov
and
mov
cmp
push
inc
xchg
jmp
jle
das
mov
cmp
lret
mull
mov
rcrb
sbb
dec
sub
iret
jmp
mov
repnz
mov
push
negl
sbb
es
ljmp
sahf
xchg
push
cltd
hlt
sbb
sbb
loop
mov
pop
icebp
push
adc
add
jmp
push
mov
ficoml
iret
and
cmp
jmp
insl
mov
mov
push
out
jp
jle
sbb
test
cmc
mov
popf
and
pop
and
incl
in
pop
in
or
xchg
push
jnp
or
pop
adc
dec
mov
mov
mov
or
dec
sarb
ljmp
dec
negl
cmpsl
jl
dec
adc
pushl
fs
les
sub
enter
mov
insl
aad
pusha
movsl
loope
mov
sbb
cmp
rcrl
mov
out
inc
fisttpll
and
jle
add
leave
dec
jg
in
and
movsl
mov
mov
or
fs
lcall
aas
mov
enter
sbb
stos
add
call
or
jp
or
incl
dec
inc
or
addr16
push
jmp
mov
jb
lret
or
jle
and
mov
cltd
subb
inc
jns
pop
inc
inc
lret
and
subl
mov
ljmp
jnp
pop
stos
fcmovnb
jb
mov
lahf
les
mov
or
mov
push
dec
adc
popl
scas
dec
andl
aad
push
mov
xchg
insl
mov
inc
fnsave
imul
decl
jle
pop
int
push
jge
aad
cmp
cltd
jmp
rolb
mov
mov
je
mov
pop
pushf
sub
leave
incb
in
daa
les
mov
dec
jae
call
repz
sub
jmp
mov
or
mov
gs
fcoms
fdivs
jo
fisubs
ret
hlt
push
inc
bound
xchg
push
add
pushl
xor
fs
and
xchg
out
ljmp
sbb
daa
pop
mov
mov
pushl
lcall
mov
repz
push
das
iret
adc
leave
fimull
ljmp
test
cmp
sbb
arpl
dec
adc
scas
repnz
jg
mov
pop
notb
shlb
and
loopne
sub
fs
addr16
push
into
push
js
pop
imul
and
mov
lcall
leave
add
jg
add
lds
lods
adc
ret
pusha
out
xor
adc
dec
push
clc
ljmp
xor
lods
xchg
daa
xor
aad
jnp
and
lds
test
ljmp
dec
sbb
jb
int
adc
or
pop
jecxz
xor
es
lret
pop
mov
jg
dec
xlat
int3
dec
out
cmp
inc
push
xchg
mov
sbb
std
jbe
loope
iret
sub
push
cmc
jo
or
jg
call
cli
adc
les
mov
fnstcw
imul
push
jb
adc
jecxz
jnp
or
shlb
pop
push
inc
sbb
jb
lret
mov
ljmp
call
ljmp
xchg
lea
int
xor
jmp
stos
lret
in
dec
repnz
test
fildl
dec
dec
repz
inc
add
cmpxchg
cmp
inc
nop
out
sub
js
shl
gs
dec
notb
cwtl
jmp
dec
lret
mov
incl
sarb
aaa
xor
pop
pop
adc
daa
ret
or
add
add
enter
adc
jmp
dec
shll
mov
paddusw
arpl
and
fildll
jg
pushl
mov
fcomi
pop
dec
xor
push
dec
hlt
pop
repnz
into
cld
lock
lods
mov
jmp
loopne
xchg
sbbl
lahf
jecxz
jnp
hlt
imul
push
decl
push
clc
lahf
stos
cld
mov
shr
cmp
mov
or
int3
push
inc
lds
incl
cs
xchg
xchg
xchg
cmp
ficoms
push
int3
xor
popa
popf
push
in
jmp
jecxz
clc
jns
add
or
xchg
stos
cmpl
sahf
mov
cli
dec
cld
push
arpl
icebp
inc
pop
js
add
loopne
es
lods
inc
dec
lea
sub
stos
pop
cmp
sbb
or
inc
fcomip
push
mov
adc
jne
aam
pop
fdivl
xor
cmp
cmpsl
int
dec
jae
cmp
movsb
adc
jmp
sub
popa
push
in
lods
and
cmp
push
cmp
ljmp
in
mov
lods
xchg
or
outsb
inc
and
mov
cmpb
cs
cmpsb
cli
jmp
mov
clc
in
xchg
or
mov
cs
mov
dec
lods
ljmp
std
scas
add
mov
jle
and
jb
aas
icebp
call
mov
nop
mov
popf
add
test
mov
call
inc
add
insl
xor
mov
push
fidivs
jbe
sti
xlat
clc
mov
cmpsb
fcomip
lcall
mov
jg
pop
mov
inc
sub
cmp
pop
into
cmpsl
push
cmp
xor
in
lahf
lods
stc
mov
imul
jmp
decl
into
enter
xchg
or
cmp
mov
outsl
xchg
mov
cmp
in
push
int
inc
in
sbb
repz
aam
leave
dec
mov
in
test
fistpl
icebp
and
mov
sar
in
insl
cld
test
mov
mov
pop
scas
test
mov
scas
adc
fcomps
jno
and
dec
lds
lcall
push
adc
add
or
lret
lret
cmp
jmp
xchg
mov
icebp
adc
sub
xchg
cwtl
lcall
icebp
sbb
cwtl
pop
cmp
jne
jb
add
adc
cltd
pushf
mov
jecxz
lcall
mov
sbb
sahf
aam
test
mov
std
rol
nop
test
sub
or
ljmp
mov
inc
and
in
xchg
fdivs
call
stos
out
cmp
xchg
int
dec
and
dec
clc
std
aas
sub
sub
test
call
sub
test
lret
xchg
xlat
mov
stos
adc
cs
incl
lss
mov
pcmpgtb
jmp
andb
pop
cmc
jg
sbb
push
je
cltd
in
or
inc
ret
push
jmp
aas
dec
pushl
shrb
in
dec
xchg
roll
and
adc
xchg
subl
pop
lock
pushl
add
outsl
mov
iret
mov
mov
cltd
pop
push
inc
push
fnstenv
into
call
lock
jnp
into
stos
and
and
push
sbb
dec
sbb
les
sahf
out
hlt
cmp
mov
jbe
inc
mov
add
ret
pop
pop
xor
call
std
ret
movsb
fwait
cltd
sar
mov
adc
mov
cwtl
push
and
sbb
and
decl
sbb
out
iret
daa
popa
lret
stos
push
push
jb
mov
or
js
ss
cmp
lcall
loopne
cmp
lods
in
imul
sbb
mov
mov
cmpb
jae
je
sbb
in
mov
cmp
shl
pop
ds
xchg
popf
inc
dec
xchg
or
mov
pop
out
ja
stos
mov
mov
adc
inc
sub
push
mov
sub
push
or
sbb
or
lret
jmp
decl
les
mov
movsb
cmp
mov
push
jnp
testb
add
and
sub
cmp
push
push
push
xchg
int3
add
inc
jmp
aaa
insl
mov
call
and
adc
aas
push
std
incl
mov
dec
xchg
xchg
push
out
jne
aaa
stc
and
pop
cmpsb
inc
pop
push
jne
out
cli
inc
movsb
adc
mov
cmc
push
jp,pn
xor
es
mov
jmp
pop
push
xchg
sub
adc
add
add
loope
mov
popf
xor
sbb
nop
or
lcall
mov
sub
push
cld
push
cli
mov
jecxz
scas
mov
icebp
fisttps
push
gs
outsl
cli
mull
shll
pop
std
sub
out
int
test
adc
ljmp
fists
or
cltd
pop
pushf
and
out
outsl
pop
arpl
mov
nop
inc
leave
dec
mov
lock
ljmp
xchg
push
jne
inc
or
cmpsl
jle
mov
jecxz
aam
loope
push
xor
adc
mov
decl
mov
stc
cs
test
cs
pop
xor
lock
stos
imul
and
ljmp
hlt
es
or
addr16
or
fisubl
ja
aas
dec
lods
xor
dec
sbb
or
gs
xor
std
aaa
push
jno
jl
and
jb
clc
dec
lcall
mov
repz
lret
push
mov
mov
cmp
fldt
incl
mov
addb
xor
lcall
push
mov
mov
mov
adc
outsb
xor
mov
incl
pushf
insl
xlat
sbb
ret
adc
cmp
loopne
outsl
or
ljmp
sti
jecxz
sti
stc
jmp
dec
jno
pushf
cmpb
or
mov
pop
xchg
mov
testb
outsl
xchg
cmp
insb
mov
movsb
xor
push
lahf
incl
add
pop
int3
dec
mov
and
xor
jae
scas
ljmp
loope
out
mov
call
out
fs
cmpsl
inc
jle
cmp
jnp
sub
sbb
sarl
and
decl
or
fcmovnb
ffreep
add
inc
pop
pop
in
add
sub
xchg
jle
cltd
fcos
incl
sbb
dec
data16
jae
mov
out
pop
adc
mov
clc
pushl
and
xchg
mov
test
aad
xchg
imul
pop
pop
dec
mov
hlt
or
add
jb
xlat
dec
movsb
adcl
xchg
adc
clc
test
jmp
fsubr
icebp
aas
movsl
out
das
out
jno
cmp
pop
inc
or
sub
into
lret
sbb
incl
cli
lods
sarb
shlb
rcr
testl
dec
lock
shlb
pushl
andb
enter
mov
sbb
mov
jmp
xchg
ljmp
mov
xchg
roll
imul
xchg
xor
enter
push
jns
insb
xor
arpl
call
ds
cmp
mov
sub
negb
inc
dec
push
int3
aad
subb
incl
dec
mov
ljmp
push
sbb
sub
ljmp
or
jb
jmp
mov
loope
xor
push
or
push
lods
test
insb
mov
and
push
mov
cmp
cmp
jae
xor
call
leave
cmp
jp
aad
lock
fdivs
jge
out
pushf
scas
movsl
stc
pop
test
cltd
out
cld
mov
scas
js
jmp
mov
adc
mov
in
popf
outsb
xchg
jmp
iret
pusha
push
stos
aas
sbb
test
jecxz
xlat
gs
sub
imul
or
inc
and
je
loope
sub
adc
or
xchg
dec
jae
test
mov
jmp
mov
mov
mov
leave
fs
in
int
rolb
push
mov
stos
fiadds
movsl
aad
fists
push
xor
inc
or
jae
push
out
and
decb
pop
sub
ds
out
pushf
cwtl
mov
cmpsb
mov
cwtl
or
jae
xor
jnp
jo
cmpsb
and
push
repnz
push
faddl
rolb
insl
xor
hlt
lcall
inc
mov
loop
push
xor
int
lret
push
out
push
sbb
xor
lcall
xor
enter
inc
test
stos
popf
dec
cld
ljmp
in
lea
stos
sbb
cld
inc
and
rcrb
mov
out
in
ret
hlt
lret
movsb
cld
cmp
xor
in
xchg
stos
ja
incl
pusha
xchg
push
outsl
pop
sbb
repnz
sub
cmpsl
jmp
jg
and
add
jns
incl
fmuls
pop
jbe
pop
fs
xlat
pop
imul
xlat
jmp
cmpsl
ret
lahf
jecxz
inc
lds
es
xchg
fld1
jg
xorl
jnp
mov
pop
cmp
mov
jno
or
cwtl
cmp
jmp
sarb
add
js
jmp
mov
pop
xor
mov
push
cmp
call
aam
jb
sbb
enter
fists
lahf
xor
call
and
cmp
jae
out
sbb
xor
mov
sub
stos
adc
push
adc
push
xor
movsb
mov
mov
push
push
je
xchg
jnp
iret
xchg
inc
sbb
jle
jg
mov
fsubrs
xor
push
int3
ret
xor
incl
and
or
rcrb
and
cltd
mov
jb
adc
jg
test
sti
rcrb
outsb
or
test
push
push
daa
test
mov
push
add
ljmp
cmpsl
push
xor
sub
test
sbb
aam
mov
jmp
jmp
and
add
subl
movsb
lahf
or
pop
xchg
orl
ljmp
xor
or
pop
xchg
inc
mov
aas
std
xor
mov
xchg
pushl
insb
leave
jne
cmp
jnp
cmp
push
int3
cli
add
mov
xor
mov
decl
or
xor
or
adc
cs
jne
sbb
loope
adc
enter
loopne
test
clc
sar
call
cli
or
cmp
mov
addr16
les
scas
adc
testb
pushl
rcl
pop
stc
sbbb
cmp
out
push
addb
pop
outsl
clc
fildll
or
pop
test
mov
jle
gs
jl
and
jmp
loope
lcall
cmp
divl
mull
push
ljmp
mov
repnz
push
mov
push
movsl
das
lcall
ficomps
pop
arpl
sub
stos
aaa
mov
pop
jno
test
cmp
lods
and
pushl
mov
adc
sti
out
cs
ss
imul
imul
aam
adc
adc
call
or
aaa
std
cmc
mov
call
xor
sub
lret
xor
dec
or
jmp
repnz
repz
add
and
push
sbb
pop
and
xlat
ss
xchg
sub
decl
jecxz
frstor
mov
mov
popf
xor
mov
vorpd
outsl
pushf
repnz
sub
dec
ljmp
out
jnp
sar
inc
outsl
out
mov
incb
ss
mov
cmpsb
popl
dec
xchg
dec
pop
jecxz
decl
lock
dec
cmp
scas
test
test
adc
adc
call
testl
cwtl
js
cmp
stc
das
fiaddl
fldenv
repz
test
fistpll
add
aas
pop
pop
in
mov
pop
lret
and
mov
scas
aas
fildll
into
ljmp
pusha
adc
xchg
rcr
xor
add
dec
not
jns
pop
ret
xor
push
test
mov
ljmp
or
push
pop
gs
push
xlat
dec
loope
sahf
cmp
call
jmp
fcoml
push
pop
and
les
ljmp
loop
test
aam
loopne
sar
jecxz
loope
fcmovne
cs
mov
hlt
repz
jne
pop
ret
call
add
inc
out
insl
fucomp
or
mov
aad
fdivr
jg
mov
mov
addb
mov
cld
mov
pop
loope
or
pushl
cld
andb
ret
xlat
lods
cwtl
jo
movsl
xlat
jmp
in
imul
sti
call
jmp
and
xor
je
fldenv
or
cli
jne
setg
inc
cwtl
fidivs
popf
jno
xor
xor
enter
xchg
js
jae
pop
add
adc
lcall
aad
scas
add
test
sub
cmp
nop
xchg
jbe
hlt
call
add
inc
or
adc
repz
mov
insl
sbb
out
and
nop
arpl
sbb
pop
pop
mov
dec
repnz
or
mov
jbe
sub
or
ja
mov
in
add
ljmp
inc
push
cmp
mov
sbb
add
sub
scas
jo
jge
jmp
call
rorb
out
sub
int
loop
pop
sahf
and
fstps
cmp
scas
and
call
int3
int
pop
hlt
inc
cltd
add
icebp
jecxz
or
cltd
incl
pushf
sbb
stos
sbb
in
ret
inc
out
adc
inc
shl
lcall
loopne
lds
test
ret
sub
ljmp
mov
movsb
jecxz
push
test
jge
push
mov
push
gs
fiaddl
add
incl
add
sahf
lods
in
cmp
pop
mov
jl
popa
fwait
jb
jmp
pushl
pop
and
movsb
int3
xchg
aas
mov
sub
xor
into
cmp
xor
xchg
outsl
ret
inc
mov
bnd
push
jae
fs
add
lcall
movsb
mov
sub
pop
mov
fldt
ja
cmp
jno
push
imul
testb
movl
rcr
pop
jecxz
mov
pop
lods
test
stos
pop
fwait
mov
jmp
push
iret
mov
into
shrb
mov
call
xchg
xchg
ss
pop
leave
incl
mov
mov
add
xor
cmp
sub
sub
push
mov
push
cli
dec
mov
repnz
push
sarl
jp
jne
mov
nop
test
ljmp
fwait
cmp
fcmovbe
sub
inc
data16
sub
inc
outsl
push
fldl
mov
sbb
ja
and
ficoml
mov
out
adc
pop
incl
mov
mov
insb
ljmp
icebp
stos
xor
incl
cld
mov
xchg
inc
js
int3
cmpsl
or
push
cwtl
notb
xor
lcall
push
mov
jbe
movsb
sbb
mov
xor
iret
mov
sub
pushl
lret
push
add
xchg
jecxz
aad
dec
xchg
pop
test
incb
arpl
xchg
loop
dec
inc
mov
pop
divl
andb
dec
add
push
test
xchg
xlat
lods
cmpsb
movsb
mulb
jge
decl
and
push
adc
daa
push
sbb
lods
push
rclb
cmpsl
mov
call
outsb
push
fnstenv
hlt
lahf
mov
in
aaa
push
outsb
data16
adc
es
pop
jg
jne
loopne
incl
int
dec
dec
mov
jle
pop
cmp
adc
hlt
sub
pop
push
shrb
mov
dec
mov
repz
push
lods
scas
imul
cmp
adc
sub
and
push
xor
cmp
push
and
notl
jns
adc
lret
sbb
decl
aas
jmp
in
xor
das
push
imul
mov
popa
sahf
sbb
add
decl
cmp
xchg
mov
jo
cmp
mov
jo
sbb
or
mov
in
and
adc
mov
div
and
cmc
decl
out
idivb
rclb
rclb
sbb
or
jle
jmp
fnstsw
addr16
xchg
mov
mov
cltd
fnstcw
mov
xchg
js
in
rcll
mov
jmp
iret
adc
jno
lods
inc
insb
push
mov
je
or
pushl
mov
movsl
flds
sub
jnp
aas
jo
and
cld
dec
aam
inc
repz
arpl
lcall
sub
jge
call
cli
fsubr
add
test
pop
cmpsb
lahf
pop
and
inc
cs
mov
mov
sub
stc
das
mov
mov
ljmp
and
nop
fidivrl
ret
and
in
in
add
call
xlat
mov
movsl
sbb
subl
cmp
pop
pushf
in
sbb
jg
inc
jl
adc
mov
add
jg
into
sbb
cmc
push
mov
lods
movsl
jge
arpl
cmp
jns
jae
inc
inc
dec
sbb
mov
or
testl
test
jno
sub
pop
fdivs
jg
mov
in
scas
mov
call
push
leave
jle
mov
push
push
nop
cmpsl
out
in
adc
jb
es
mov
cmp
iret
decl
cmp
add
cmp
and
push
adc
arpl
fldt
fistl
and
call
xchg
adc
dec
mul
addr16
jg
andb
and
lahf
sub
sti
pop
and
hlt
jge
mov
out
lret
loopne
mov
pop
cmp
xchg
jmp
lds
jle
cmpl
pop
jb
and
rcrb
and
add
js
sbb
lret
mov
adc
lret
call
push
icebp
sub
shll
mov
add
out
pop
inc
push
subl
dec
xabort
mov
js,pt
pushl
hlt
pop
rcl
xchg
mov
mov
pop
mov
jge
add
sbb
xor
inc
pop
test
idiv
call
fnstenv
jp
jno
scas
jnp
clc
sahf
jns
repnz
lcall
sti
cmc
je
es
les
jmp
ljmp
mov
push
dec
jmp
xor
sbb
pushf
jb
push
into
push
inc
ret
xchg
shl
decl
scas
jg
jb
push
daa
lahf
adc
xchg
hlt
push
jo
sbb
push
fs
xchg
cs
sti
ret
mov
mov
mov
clc
or
insl
test
mov
sbbb
jmp
mov
sahf
rorl
mov
ss
sbb
cmp
sar
mov
icebp
das
adc
adc
push
inc
shlb
jmp
sub
or
cmp
mov
mov
push
cld
decl
jmp
aaa
and
inc
int3
test
sbb
and
ljmp
test
push
mov
mov
int
outsl
popa
lock
negl
jnp
call
pop
or
stos
rorl
shrl
inc
dec
int
adc
xchg
sahf
out
mov
pushl
or
psrld
sbb
dec
ds
cmp
orl
adc
cs
decl
dec
imul
into
mov
mov
pop
lods
mov
ljmp
ljmp
sahf
sbb
fisubl
mov
imul
fstpl
popf
in
dec
cwtl
arpl
cli
jle
shlb
inc
rcll
xchg
sub
adc
gs
sti
mov
mov
aas
aad
xchg
mov
popf
dec
jecxz
incl
fildll
and
orb
incl
fwait
repnz
cs
mov
sbb
dec
mov
push
outsl
mov
test
call
push
and
cmp
jle
icebp
lods
mov
insl
decb
subl
or
mov
inc
dec
xor
mov
mov
lds
or
mov
jg
mov
pushl
add
popf
lods
lret
lret
push
loope
add
mov
lret
mov
in
sbb
inc
clc
cwtl
sub
cltd
scas
aaa
mov
stos
lret
fisubs
divl
into
cmp
lcall
cmp
mov
aas
adc
popa
mov
std
xor
cwtl
jl
scas
and
addl
rol
iret
clc
sub
xchg
cmp
pop
lret
and
jmp
leave
aaa
stos
adc
and
fcomps
pop
pop
out
fcmovnu
in
neg
out
insb
dec
mov
lcall
add
cmp
adc
adc
mov
loope
aad
lret
jbe
imul
xchg
insb
cmpb
decl
fistpll
imul
stos
dec
call
cmc
out
sbb
mov
lcall
je
out
out
or
xor
imul
push
inc
pop
sub
mov
es
lea
add
outsb
sbbb
aas
jae
jmp
jg
lds
rol
fwait
cmp
add
leave
cwtl
push
sbb
cld
data16
in
daa
incl
fwait
xor
adc
jmp
loope
mov
ret
out
jle
pop
mov
lcall
popa
pop
jo
xor
fisubrs
lret
sbb
sbb
fcos
jmp
aam
sbb
mov
add
inc
bound
nop
pop
mov
call
mov
jecxz
jmp
mov
into
cmpsl
inc
jns
lods
sbb
dec
mov
sub
out
pop
enter
push
out
shll
mov
jae
orl
jl
outsb
loopne
scas
pop
mov
sbb
jno
std
mov
mov
int3
int
and
jg
fisubs
pushf
leave
loopne
xchg
ja
decl
sti
push
and
outsb
mov
outsb
add
mov
xor
imul
jmp
adc
and
lret
jno
cs
jge
shl
add
scas
es
jbe
movsl
dec
or
cld
ljmp
pop
lea
lcall
add
insb
dec
movsb
push
dec
daa
or
sub
push
decl
fiadds
repnz
adc
push
xor
jmp
xor
arpl
xchg
mov
out
mov
inc
adc
mov
sbb
cwtl
out
fisubs
fbstp
push
or
xchg
call
out
clc
adc
std
push
js
outsb
pop
sbb
xor
incl
sbb
js
mov
mov
adc
jg
xor
pusha
jp
lcall
adc
repnz
jge
fstpt
movsl
idiv
loopne
lahf
xor
pop
mov
mov
jns
adc
decl
push
xorb
insb
fdivp
jns
sbb
fwait
in
cmp
les
decl
das
jae
xchg
imul
add
testl
fcomi
ljmp
test
sub
mov
push
int
sub
nop
cli
xchg
fld
dec
xchg
cmp
ljmp
jl
and
xor
push
clc
cmp
dec
int3
pop
loope
decl
loopne
cli
lret
jp
jp
cmp
xor
cli
ret
xor
dec
adc
cmp
mov
push
pop
jecxz
mov
xor
in
ds
sahf
cmpsb
add
jmp
adc
mov
inc
test
mov
js
inc
sub
scas
in
decl
out
mov
fs
ror
test
xchg
js
test
mov
fdivrl
mov
jp
cmpl
add
faddl
jne
sti
xchg
loopne
cmp
fimuls
xor
adc
pop
push
pop
jb
mov
rorl
outsl
xchg
pop
daa
fwait
mov
adc
out
sbb
mov
fsubl
push
mov
or
stos
cld
movsb
fstl
daa
jl
jb
or
enter
lcall
dec
cmp
or
sbb
pop
jno
lods
movb
mov
push
cmc
pop
fcomi
or
test
sub
pop
test
inc
sti
outsl
call
repnz
inc
nop
sbb
lcall
sub
push
negl
cli
lods
or
ret
mov
add
incl
ljmp
mov
scas
sbb
jg
subb
mov
cmpsl
cmp
test
nop
sub
pushl
test
mov
lds
mov
fidivrl
lret
adc
jge
mov
aad
das
out
jmp
insb
adc
rcr
lea
pop
aam
lret
popa
jmp
sbb
dec
adc
pop
mov
or
pop
mov
shlb
stc
push
pop
cmpsb
add
loopne
ja
add
inc
stc
jno
outsb
mov
leave
inc
fadds
pop
jae
aad
push
repnz
inc
dec
sub
stc
outsb
adc
ljmp
ljmp
es
lock
pop
leave
or
jne
pop
xchg
push
or
scas
test
dec
in
ja
cmp
inc
add
and
lds
inc
mov
cwtl
mov
mov
pop
lcall
push
pop
sbb
imul
xor
push
test
jge
and
js
push
aam
inc
ljmp
or
jbe
pop
mov
dec
or
push
iret
hlt
adc
jl
fnstenv
pusha
dec
push
enter
ret
ret
adc
loop
push
inc
in
dec
inc
xchg
mov
pushl
nop
cmpsl
stos
xchg
nop
stc
xor
push
je
cwtl
or
fcoml
fisubrs
incl
js
arpl
mov
adcl
std
movsb
jno
out
aad
lcall
sbb
lds
jnp
jne
push
cltd
xchg
push
xchg
mov
or
push
jg
mov
mov
jp
mov
mov
mul
hlt
cmc
push
popa
and
mov
fs
popw
push
fcoms
mov
imul
adc
pop
cmp
aas
push
mov
lcall
rclb
mov
mov
aam
mov
add
jbe
lcall
jmp
out
cmp
fcoms
xor
cltd
mov
dec
stc
and
and
xor
add
pop
dec
or
and
hlt
or
jmp
imull
pop
sub
mov
xchg
push
fcomps
push
push
inc
push
adc
jmp
stc
shll
mov
sbb
jno
or
and
xchg
imul
gs
fcomip
call
jg
and
push
mov
sbbl
sub
push
inc
aas
lcall
cmp
mov
repz
or
and
adc
xor
mov
and
xchg
pusha
sbb
je
incl
mov
mov
outsb
repnz
push
aam
jo
call
bound
lock
sub
lcall
cwtl
inc
dec
push
sbb
ljmp
data16
xor
add
xor
loop
fdivrl
mov
mov
jmp
xor
out
sti
mov
jle
call
lock
cmp
js
dec
cmp
mov
insb
sbb
pop
sbb
dec
cmp
cld
mov
cwtl
in
sub
mov
movsb
jne
mov
nop
stos
add
call
out
popa
clc
and
pop
jp
mov
jbe
lock
or
jp
arpl
sub
lcall
push
imul
dec
jbe
xchg
jg
ja
mov
sbb
scas
stc
lods
and
cmp
clc
jp
pushl
insb
mov
xchg
push
pop
push
enter
imul
mov
adc
decl
or
nopl
addr16
test
rorb
push
sub
incl
movsl
scas
push
mov
push
inc
stos
aam
add
or
inc
out
roll
incl
xor
ret
arpl
sub
mov
mov
dec
lods
jno
mov
add
cmp
pop
cltd
jge
aas
insb
outsb
inc
pushf
lock
mov
popa
jle
test
jle
push
sub
mov
sub
ljmp
fwait
aad
jne
dec
inc
adc
fsubs
and
test
int3
cli
cmp
test
incl
push
mov
lock
shll
filds
dec
adc
lock
mov
add
sti
jmp
ds
pop
scas
lea
ror
fsts
stc
and
jmp
cmpsl
ja
outsb
subl
data16
lret
xchg
pop
fbld
sbb
jge
dec
ret
sub
mov
mov
hlt
data16
fadd
sahf
sbb
mov
decl
push
or
les
lret
shlb
sbb
test
cmpsl
mov
incl
repnz
cmpsl
aam
test
stos
popa
in
sub
xlat
ljmp
jnp
and
sarb
dec
fidivl
pop
adc
cmp
add
notb
sar
xchg
xor
sbb
pop
scas
or
loop
fistpll
cmp
jle
aad
out
lret
adc
mov
and
jecxz
and
or
mov
lcall
stos
inc
lret
sbb
xor
mov
mov
inc
and
decl
mov
push
inc
inc
pop
jg
mov
lcall
ljmp
xchg
sbb
push
push
out
add
sbb
sbb
cmp
lock
call
loop
test
arpl
movzwl
cmp
pop
push
mov
repz
decl
cmp
out
jle
mov
repnz
imul
jno
ja
jae
cmp
cld
pop
out
outsl
cli
call
jle
aam
or
inc
stos
movsb
dec
cmp
cmp
shl
insb
inc
inc
or
jg
pushl
pushf
lods
es
xor
inc
push
jge
je
stos
mov
mov
jecxz
decl
add
test
fwait
inc
xchg
lcall
cmp
decl
or
mov
mov
jle
arpl
loop
lcall
dec
mov
mov
dec
mov
lret
outsl
ficompl
fildll
jno
ljmp
add
jae
mov
xchg
cmp
in
movsl
int
push
lock
lcall
pop
push
sub
dec
fbstp
pop
pop
adc
mov
mov
pop
cmp
movsb
lock
in
leave
push
sub
movsl
cli
lret
dec
adc
out
clc
call
xchg
mov
inc
inc
dec
sbb
push
outsl
xor
mov
add
jo
data16
aas
frstor
cmpsb
lahf
add
mov
daa
or
divl
stc
or
and
sbb
fcomip
incl
shrb
imul
leave
xchg
int
das
mov
cld
sbb
dec
in
xlat
pop
jmp
pushl
loop
std
in
in
ret
add
mov
aas
mov
push
or
add
hlt
jmp
mov
hlt
lods
imul
inc
pop
adc
sub
sbb
ljmp
sbb
mov
push
mov
out
ljmp
cmp
pop
scas
or
jbe
mov
ss
icebp
gs
arpl
jmp
sar
jmp
adc
push
dec
rcrl
push
pop
or
cmp
mov
cmpsb
lea
lock
jb
inc
push
cmp
xchg
xchg
xlat
ljmp
mov
sbb
pop
inc
cmc
cmp
push
xchg
loop
mov
jg
leave
fstpt
sbb
and
insl
ret
sub
test
mov
xor
and
cs
sbb
shll
iret
loope
add
pop
push
movsb
inc
adc
inc
cld
das
clc
push
jnp,pt
xorb
pop
or
jle
sti
push
and
mov
fxch
cwtl
call
sahf
inc
adc
inc
sub
or
sahf
test
scas
or
sub
icebp
or
ljmp
xchg
or
add
mov
cmp
or
mov
jb
and
fcomps
sbb
jo
push
int3
out
mov
adc
add
xor
push
cld
jg
inc
sub
popl
inc
stos
mov
popa
dec
insb
and
ljmp
scas
rcrl
stos
cmp
addr16
xchg
dec
movsl
clc
lock
fimull
jmp
mov
pop
lods
stc
inc
cmc
mov
ja
or
and
leave
in
sahf
inc
ljmp
mov
inc
mov
nop
insb
adc
add
sbb
mov
rdseed
inc
mov
adc
lahf
pop
ljmp
add
mov
scas
rcrl
jle
pop
jb
jp
mov
adc
loop
popa
push
sbb
dec
or
insb
and
ljmp
out
inc
or
mov
je
notb
clc
cmpsb
push
dec
std
fs
push
mov
orl
adc
lret
out
add
cmp
fidivs
lcall
and
int
mov
xor
idivl
pop
mov
cwtl
push
dec
out
loopne
jmp
int
lret
xchg
xchg
mov
aam
loope
sbb
ja
mov
xor
or
mov
decl
lea
push
jle
and
fwait
rcrl
pop
add
out
or
lods
js
sarl
aam
cmc
jmp
mov
mov
jg
lock
andb
fsubl
insl
lcall
pop
cmp
mov
mov
pop
mov
lods
fs
repz
scas
sub
fldenv
push
inc
pop
add
call
cmp
loop
sbb
or
dec
sbb
pushf
add
mov
shrb
in
push
decl
ds
popa
fidivl
mov
clc
add
or
call
aad
ljmp
dec
push
mov
outsb
repnz
xchg
aaa
mov
in
mov
mov
pusha
jns
pop
mov
push
pop
add
push
push
jg
sbbb
scas
xchg
push
pop
dec
lock
insl
jle
dec
lcall
fstpt
pop
xor
jo
pushw
xor
adc
jno
hlt
incl
shll
cmc
jge
or
call
rolb
fbld
xor
or
xchg
mov
sbb
jg
jp
shlb
fsubp
ret
mov
out
inc
sbb
inc
fcos
pop
cld
fdivl
dec
jmp
mov
xchg
ja
insb
push
fmull
dec
rcrb
push
mov
mov
ljmp
aad
inc
rol
xchg
incl
jmp
idivl
lret
cs
pushl
lret
or
inc
cltd
xchg
int3
xor
add
sbb
pushf
cmc
add
repnz
lcall
shlb
push
mov
icebp
or
mov
adc
pop
jbe
mov
mov
inc
cltd
icebp
enter
in
add
nop
dec
adc
ljmp
or
cmpsb
adc
push
xor
in
jne
pop
xchg
imul
jg
data16
and
inc
push
jb
jg
filds
addr16
jp
mov
dec
js
sbb
movb
or
dec
mov
les
sbb
xor
pop
nop
jmp
ret
ds
jp
imul
fcomip
adc
cmpl
ret
bound
mov
jbe
xchg
add
movsl
sbb
lcall
dec
inc
cld
adc
push
sarb
jno
inc
mov
inc
in
test
imulb
cmp
mov
outsb
cmpsl
and
jne
sbb
hlt
cmp
sub
call
pop
sub
out
pop
pop
jne
adc
inc
cmpsb
dec
xchg
mov
pushl
add
lcall
adc
ljmp
lcall
sbb
call
lods
pop
mov
ficompl
lock
in
loopne
lret
test
decl
cmp
icebp
mov
or
sub
loope
call
insb
sar
ja
jmp
dec
gs
mov
call
es
insl
or
or
inc
xchg
push
adc
sbb
pusha
or
xchg
cltd
push
insl
enter
repz
insb
adc
inc
and
decl
bound
lods
outsl
lea
mov
push
cmp
and
mov
ret
ret
call
mov
xor
pop
test
rcr
mov
mov
and
or
aaa
cltd
xor
jmp
call
stos
inc
daa
aaa
out
push
jbe
pop
daa
std
rolb
imull
mov
andl
adc
jmp
jae
adc
add
mov
pop
pop
rolb
je
or
mov
imul
ljmp
dec
out
sbb
push
inc
or
sbb
jb
aam
mov
mov
fisttps
out
dec
cmp
pop
sub
lcall
filds
ss
xchg
mov
ffree
scas
out
sbb
mov
add
aam
mul
pop
decl
dec
inc
pop
lds
push
aam
adc
lds
outsb
push
mov
test
push
xchg
ror
scas
enter
lock
subb
cmp
mov
dec
jecxz
sar
push
inc
dec
cmp
fmuls
iret
or
fildl
pop
std
mov
arpl
xchg
ret
shl
repz
lods
aad
mov
and
add
adc
dec
aam
xchg
stos
leave
lcall
lret
fidivrs
stos
pushf
aad
jo
into
mov
sub
cmc
incl
fwait
in
mov
push
pop
loop
or
mov
in
cmp
rcrl
mov
mov
out
mov
iret
jns
pop
jl
xchg
mov
add
ljmp
cli
incl
insb
inc
xchg
mov
jne
cmpsb
test
sub
pop
sbb
incl
filds
inc
xor
ret
mov
scas
xchg
sbb
xchg
les
fs
dec
push
in
cmp
sbb
lcall
and
gs
fwait
cmc
int
jnp
mov
out
push
es
xchg
data16
je
xor
pop
stc
out
push
call
fsubl
xchg
addl
stos
sti
ljmp
cmp
mov
decl
lock
stos
scas
sub
inc
mov
pop
test
orb
and
aaa
add
or
or
dec
and
xor
fsubl
or
jmp
jae
icebp
filds
stc
loop
stos
fdivs
cmpsb
xchg
xchg
lds
pop
and
mov
aaa
jle
or
mov
jns
xchg
stos
rcl
dec
sti
sub
pop
add
outsb
fldenv
ljmp
jnp
jmp
adc
leave
sbb
les
jecxz
gs
or
jecxz
mov
jbe
cltd
xchg
jmp
adc
fists
mov
mov
jae
cltd
inc
cmpsl
or
adc
andb
shrb
outsl
cli
ljmp
jg
shrl
push
mov
out
xchg
bound
mov
in
fisttpll
clc
aas
mov
sahf
mov
scas
sub
test
daa
cmc
ss
leave
or
decl
sbb
sub
out
push
mov
add
shl
ficoml
ret
clc
jmp
mov
add
xchg
sub
add
out
and
addb
push
push
ljmp
sarb
pop
aad
hlt
jg
add
xor
cmp
call
mov
xchg
and
add
push
mov
pop
mov
cs
xchg
sub
mov
xchg
mov
cli
out
push
adc
jmp
cs
inc
mov
jmp
mov
push
bnd
dec
cmpl
push
inc
push
aaa
push
jae
xor
cwtl
divb
call
aad
xor
enter
in
xor
push
iret
cmp
xor
stc
iret
arpl
xchg
jecxz
ja
popa
push
scas
icebp
inc
aaa
sti
jecxz
sbb
filds
aam
lea
shll
cld
jl
mov
cmp
stos
ds
mov
xchg
jp
adc
pop
in
sbb
cmp
adc
pop
sub
jno
and
inc
lahf
mov
cmc
stc
sub
gs
call
sub
cwtl
xor
push
push
into
jmp
pusha
int
insb
imul
push
dec
jmp
mov
sti
mov
push
mov
push
mov
in
pop
dec
clc
xor
mov
add
clc
pushl
cmc
popa
into
out
jno
xor
mov
decl
stc
cmp
movb
iret
dec
loop
enter
mov
in
mov
outsb
aad
scas
decl
out
jae
pop
rol
and
mov
faddp
and
jb
adc
push
sahf
sub
nop
in
sahf
jl
dec
inc
jge
es
cli
sarl
dec
xchg
hlt
fimull
sbb
lcall
or
fbstp
adc
push
and
dec
dec
push
je
sub
mov
jmp
add
sahf
into
rep
sbb
or
nop
fs
jns
jo
mov
popf
add
xlat
jmp
xchg
cli
mov
scas
push
xchg
stos
dec
jge
loope
shrb
incl
ljmp
and
xchg
sbb
jnp
xor
loopne
ja
js
movsb
inc
lods
in
call
xchg
sarl
inc
inc
enter
in
pop
mov
imul
mov
decl
jnp
cmp
cmpsl
xchg
xor
inc
fidivl
iret
test
incl
xor
jb
mov
add
mov
stos
adc
xchg
sbb
inc
adc
push
insl
and
cmpl
int3
stc
cbtw
into
mov
aaa
dec
out
jae
sub
mov
iret
fcmovnb
out
pop
scas
sbb
fcoms
fisttps
jg
mov
fdecstp
pop
in
idivl
call
in
std
incl
cmc
je
pop
in
jne
jno
adc
sbb
push
lock
lret
pop
aam
pushf
and
jle
cld
pushl
dec
jge
pop
pusha
mov
fsubrp
pop
inc
iret
pop
add
lret
push
jge
pop
rorb
scas
jge
or
add
ret
rcll
mov
out
sbb
xchg
inc
repnz
cli
popl
sub
repz
jmp
adc
mov
into
cs
cltd
pop
dec
xor
push
add
ret
cli
jno
inc
cmp
jg
inc
ret
cmpsb
mov
add
inc
es
ljmp
aas
mov
inc
sbb
pop
jmp
cmpsb
push
hlt
cwtl
repnz
pop
out
js
call
sahf
mov
insb
lea
adc
cmp
mov
xchg
lcall
repnz
mov
mov
mov
icebp
in
insb
mov
or
inc
sub
push
stos
cmp
inc
lea
clc
jg
aam
scas
daa
push
or
hlt
je
push
dec
lea
xchg
pushf
jb
ljmp
mov
mov
outsl
js
cwtl
fcom
ja
mov
inc
test
sub
sti
push
test
push
pop
or
adc
jg
dec
bound
pop
out
call
lock
inc
mov
in
stc
cli
adc
iretw
dec
pushf
mov
cmpsb
cmp
jae
test
inc
fmull
fmull
mov
in
enter
push
push
movsl
jl
adc
cmp
mov
incl
cmp
inc
shll
ffreep
fsub
push
lret
shll
cmp
clc
aad
jmp
xor
adc
or
fucompp
rcrl
push
das
outsl
push
cwtl
inc
pop
incl
dec
lss
cmp
out
pop
call
jle
les
adc
adc
push
ret
mov
shrb
lock
aas
cltd
mov
push
push
dec
ss
faddl
or
sbb
cmp
pop
sub
xor
aaa
pop
mov
and
int3
imul
incl
pop
sbb
loopne
xorl
sbb
ds
incl
cmp
pop
push
dec
jge
pop
ds
ja
jb
pop
inc
ss
mov
jp
pop
mov
cmp
dec
ret
push
fidivrs
push
shll
mov
and
test
or
adc
or
add
ljmp
shll
outsb
inc
rclb
int
push
xorl
cld
outsl
jo
mov
ja
jmp
fdivs
xchg
adc
lea
adc
jne
int
sbb
cmp
int
mov
hlt
cmp
xor
bound
dec
mov
mov
movsl
ss
inc
fistl
ljmp
inc
mov
jbe
arpl
add
sbb
xor
jecxz
ljmp
imul
ror
add
cltd
push
cli
test
int
arpl
outsl
call
std
call
sub
cli
imul
data16
shlb
sbb
ljmp
repnz
mov
pop
xchg
push
loopne
je
int
mov
adc
push
or
bound
lcall
ja
sbb
ds
jle
pop
add
push
mov
jmp
jg
sub
test
fistl
sub
or
in
xor
cmpsl
std
pop
xchg
loope
mov
cwtl
pop
jo
int3
scas
std
jne
dec
ja
leave
filds
mov
xchg
mov
fists
fiaddl
rorl
arpl
inc
jb
or
into
sbb
sbbl
cld
or
and
pop
add
outsb
call
pslld
lretw
xchg
popa
test
inc
jl
jmp
pop
mov
mov
sbb
or
cmc
arpl
shrl
clc
call
jmp
test
popa
mov
mov
jae
adc
dec
inc
or
popf
xor
jbe
test
cmp
inc
ret
repnz
xor
js
cmp
cs
mov
sahf
test
out
clc
jmp
out
ret
adc
enter
sub
jmp
adc
inc
mov
cmpsl
or
push
fs
ljmp
add
dec
nop
jmp
repz
sti
adc
add
out
adc
jno
roll
and
call
decl
and
pop
imul
xor
repz
roll
mov
mov
into
shlb
cmc
incl
push
bound
mov
stos
mov
inc
jno
insl
inc
mov
sahf
mov
orl
rorb
decl
leave
pop
je
jns
cmp
mov
inc
les
jecxz
dec
mov
sub
pusha
push
std
shll
add
movsl
sti
pop
inc
out
xor
and
sub
or
sub
jecxz
pop
inc
jnp
int3
or
in
call
mov
and
sbb
push
sti
jno
in
fmuls
and
bnd
or
out
out
ljmp
or
jecxz
inc
dec
arpl
out
sub
test
fs
pushl
jne
inc
mov
dec
jl
cmc
dec
lahf
and
in
sbb
xor
incl
daa
stos
sbb
mov
pop
mov
xchg
fistl
testl
in
ffreep
leave
cld
popf
push
stos
mov
adc
jge
push
loope
add
rorb
pushl
insb
mov
lret
cmp
push
cmp
pop
cld
sub
mov
mov
mov
mov
addr16
push
rorb
stos
das
xor
cmp
sub
pop
ret
lret
dec
in
cmp
xchg
addr16
in
fst
jmp
jmp
scas
dec
jmp
inc
jb
in
arpl
sbb
or
jl
jge
mov
mov
decl
fnstenv
lock
and
filds
inc
mov
dec
cmp
push
jg
lcall
mov
jbe
jb
or
sarb
fstps
ljmp
test
cmp
dec
es
popa
jmp
sbb
imul
cmp
mov
pop
aas
mov
or
xchg
loopne
imul
cmp
mov
jg
jns
adc
inc
and
cld
daa
dec
xor
push
push
fimull
lock
sbb
int3
xchg
sbb
sbb
sbb
adc
jnp
and
push
test
or
adc
push
call
pushf
shll
mov
outsb
or
jle
fidivrl
pop
xor
cmp
cmp
popf
ljmp
sti
aas
popa
outsb
mov
sahf
xchg
adc
mov
push
push
and
or
mov
mov
mov
cmpsb
daa
sbb
ljmp
push
mov
dec
jecxz
mov
jecxz
negb
aam
in
mov
hlt
rol
xor
cmp
xchg
outsb
jp
inc
lds
sbb
imul
fdivrp
pop
pop
out
insb
scas
es
inc
xchg
push
push
aad
in
gs
jae
mov
xchg
insl
dec
in
add
lea
xchg
jge
cmp
cld
adc
push
int
aas
jl
inc
inc
scas
decl
nop
mov
ja
push
xchg
fisttps
pop
loopne
push
enter
add
pop
lds
jmp
jle
cmp
jecxz
outsl
lods
xor
rorb
es
jg
fwait
mov
dec
movsb
sub
insl
cmp
mov
cwtl
mov
push
mov
ret
stos
inc
out
fists
add
pusha
push
and
imul
and
inc
cwtl
subl
sub
call
incl
gs
pop
shr
lcall
lahf
ja
push
xor
add
mov
lret
sub
decl
jl
cli
cmpsl
stos
lret
psrld
mov
jnp
adc
dec
mov
cld
decl
movaps
jo
movsl
test
data16
stos
mov
frstor
mov
imul
ljmp
cmpb
cld
mov
sbb
shlb
clc
adc
and
mov
ja
call
mov
dec
and
sub
shr
mov
call
std
popf
cwtl
enter
pop
or
addr16
fisubl
mov
in
cbtw
push
jge
xor
and
or
inc
adc
cmp
or
pop
sbb
ljmp
sub
add
xchg
imul
jle
add
ljmp
lcall
xor
aad
stc
jl
jge
fdivr
jge
test
lcall
loopne
xor
lods
xor
lds
stc
cmp
xchg
cmp
cmp
decl
leave
test
push
insl
jbe
push
ret
xchg
test
lods
lret
adc
lods
int
daa
decl
or
mov
mov
jb
daa
mov
fwait
repz
inc
inc
and
inc
js
dec
or
mov
and
dec
leave
sbb
jno
int
ret
call
rol
mov
jmp
or
sti
repz
rcrl
stos
cmp
mov
xchg
dec
mov
adc
clc
push
pushf
stos
not
in
adc
outsl
loopne
fcomip
mov
call
movsl
aaa
mov
leave
cmp
dec
jmp
sar
scas
clc
lea
xchg
mov
inc
sbb
in
push
lds
sbb
in
mov
sub
or
into
or
daa
jmp
cmp
call
test
xchg
gs
lock
and
mov
fs
inc
xchg
jo
cmp
pop
or
or
xchg
mov
cs
push
insl
decl
pop
xor
jno
sub
and
mov
rorl
push
pop
jmp
dec
mov
mov
jns
into
push
int3
shlb
and
int3
and
incl
nop
and
jns
add
repz
out
push
lea
clc
aam
mov
add
inc
adc
mov
mov
mov
fcomps
cmp
dec
push
out
push
stos
pushl
cmp
jl
aas
inc
mov
xor
jnp
xchg
outsb
imul
push
test
add
lods
subb
inc
aad
sub
flds
push
in
notb
adc
pushl
adc
pop
sbb
cli
fcomip
call
icebp
sub
test
jle
adc
xchg
sbb
negl
ljmp
xchg
dec
lret
lds
sub
adc
fsts
in
decl
stos
aam
repz
sti
movsl
inc
adc
adc
outsl
test
xor
cmp
incl
push
push
stos
in
outsb
insb
xor
stc
repnz
inc
pushf
cld
sbb
ljmp
pushl
popf
cltd
and
pushf
jo
rorl
mov
or
cmp
dec
and
mov
ljmp
loop
cmp
jns
push
cmpsb
dec
inc
xor
scas
sahf
dec
adc
ret
fwait
xchg
lods
mov
pushl
mov
dec
mov
notb
xchg
hlt
lahf
lret
mov
push
pop
jo
xchg
addr16
mov
xchg
and
subl
mov
pop
xchg
ljmp
mov
pop
jnp
push
push
int3
mov
jmp
sbb
jecxz
shrb
add
mov
call
pop
lret
cmpsb
and
mov
je
xor
xchg
loopne
xor
incl
and
push
sub
mov
out
and
dec
jb
ljmp
xchg
inc
rcrb
filds
fcoms
mov
xor
mov
test
lcall
sbb
movsl
add
rcrb
xchg
jbe
dec
pushf
lret
stc
cmp
pop
mov
fcomip
ficoms
cmpsl
add
mov
add
or
mov
dec
inc
xchg
cmp
clc
cs
jp
test
and
sbb
loopne
push
xchg
sub
test
add
push
out
jmp
addr16
push
pop
mov
outsl
xchg
mov
scas
int3
and
shlb
inc
pop
cli
mov
incl
push
fstpt
fistps
inc
inc
mov
pcmpgtd
dec
imul
sbb
dec
lret
sub
dec
outsl
pop
xor
fldcw
fisttpl
push
call
push
xor
imul
inc
add
addr16
cmpl
xchg
inc
xor
inc
pop
push
js
dec
mov
cmp
fwait
int
incl
adc
jnp
adc
xchg
pop
cmp
pop
cmp
jmp
xor
or
push
pushf
test
adc
inc
lock
jle
lret
sbbl
jg
out
mov
outsl
lds
fs
mov
push
pop
and
out
jl
fcomip
incl
inc
ss
xchg
push
sbb
orb
sub
pushl
xchg
repnz
and
jp
add
jb
in
sbb
mov
mov
sbb
cld
lret
xorl
in
fisubs
cmp
ja
or
jecxz
out
imul
cmpsb
mov
or
jmp
in
out
dec
dec
mov
jae,pt
pop
mov
sub
xor
das
lcall
fnstenv
mov
icebp
add
push
or
cwtl
je
push
ljmp
adc
imulb
xchg
js
int3
bnd
jnp
pop
popa
sar
leave
outsl
dec
adc
inc
mov
jmp
pop
ss
adc
sti
sbb
pop
addr16
in
test
push
adc
aas
lcall
das
testb
nop
mov
push
mov
iret
push
in
inc
addr16
lcall
cmc
mov
jb
adc
push
mov
lret
test
cmp
or
mov
leave
cmpsl
into
inc
lds
cld
sbbl
sbb
push
xchg
sbb
or
decl
xchg
sbb
mov
dec
lcall
xor
and
ja
pop
js
shlb
stc
push
sbb
jmp
js
cmc
mov
hlt
sbb
xor
inc
mov
or
add
incl
push
jb
jle
repnz
in
jmp
xchg
mov
icebp
ret
lahf
mov
xlat
scas
add
popf
mov
jmp
xor
mov
inc
nop
ljmp
fsubrs
inc
arpl
or
pushl
ljmp
aaa
rcll
xchg
nop
addb
popf
jl
call
mov
js
jb
pop
push
sub
std
iret
bndcu
test
idivl
add
jmp
adc
lock
push
outsl
ds
bound
adc
lods
mov
lods
sahf
lea
push
mov
nop
les
mov
mov
or
sub
scas
jo
cmp
mov
incb
enter
mov
lret
adc
ljmp
sti
inc
inc
xor
sub
es
ficompl
xchg
push
sub
push
mov
sbb
clc
shlb
lds
incl
rcrb
cmp
xor
shlb
fsubs
mov
lcall
outsl
cli
cmp
out
sub
and
clc
popa
movsb
enter
adc
mov
leave
or
fwait
mov
pop
fnsave
dec
dec
jl
xchg
add
ljmp
add
and
pop
push
cmpsl
sbbb
ja
cmp
jnp
mov
and
inc
nop
insb
fstl
mov
mov
cmp
fdivs
cs
jns
repz
dec
xchg
push
out
dec
cli
mov
mov
int3
stc
jle
addps
push
aam
mov
fs
add
outsb
push
push
push
andl
lret
cmp
mov
pop
push
pop
xorl
test
mov
rcrb
mov
ljmp
xchg
rcrl
movsb
mov
stc
xor
jne
cltd
sbb
push
mov
cld
call
mov
cli
push
xchg
movsb
inc
cmp
sbbl
sbb
xor
mov
scas
cmp
testb
and
mov
incl
popf
testl
cmp
ror
scas
fwait
rcrb
sbb
ljmp
aad
cmpsb
adc
cmp
jnp
sub
cld
push
notl
mov
pushl
adc
mov
mov
or
popa
mov
mov
sub
push
sub
mov
mov
and
mov
hlt
fstpt
stos
mov
push
jmp
enter
xchg
inc
and
mov
loopne
jmp
fimull
scas
addr16
outsl
clc
loope
clc
shrb
push
es
push
pop
jecxz
pop
pop
loopne
add
and
and
sub
dec
cltd
out
ljmp
sti
and
pushf
movsl
mov
dec
cltd
cmp
das
push
lcall
jmp
iret
test
lock
shrl
cmp
out
xchg
dec
les
push
cmp
adc
cld
call
roll
pop
push
push
adc
mov
scas
mov
jo
cld
out
push
int3
cmp
mov
jmp
jbe
adc
xchg
push
xchg
cmp
jge
jne
sbb
jg
sub
incl
out
jmp
mov
out
cmc
adc
or
call
jbe
mov
clc
add
inc
mov
out
das
push
push
call
in
lcall
xchg
mov
cld
or
div
jnp
and
inc
sbb
jmp
lcall
mov
sub
mov
pextrw
or
jl
push
and
xor
add
call
clc
sbb
rcll
dec
je
jl
sahf
mov
sbb
pushl
mov
mov
mov
and
cld
dec
aaa
scas
loopne
fdivr
aaa
cld
and
inc
mov
jne
call
dec
rol
adcl
pop
outsl
int3
jg
cli
enter
xchg
lahf
in
andb
pusha
dec
rcr
out
cmpsb
inc
pop
inc
stc
popa
enter
incl
fwait
adc
jo
push
xchg
shlb
adc
cs
sub
out
sbb
in
xchg
test
test
add
lcall
push
setp
data16
in
xchg
bound
mov
dec
scas
mov
dec
repz
mov
push
add
mov
cld
pushl
ret
int3
mov
dec
pop
xchg
push
dec
inc
sbb
incl
jp
fldl
jno
push
add
sub
subb
jmp
push
xchg
pop
lods
lret
outsl
or
lds
in
inc
lcall
mov
xor
mov
cmpsb
sub
bound
incl
in
or
cwtl
mov
xor
add
mov
xor
mov
out
jnp
xlat
adc
ftst
pop
ss
jp
jg
and
pop
sub
dec
mov
aam
movsb
lret
cmp
pushl
mov
lahf
fcompl
stos
insl
daa
lds
jb
loop
pop
shll
jge
decl
pusha
mov
je
jae
mov
sar
ds
push
sbb
fxch
fisubs
nop
mov
enter
dec
sub
decl
jl
sahf
or
mulb
mov
and
lret
dec
sbb
inc
hlt
cld
or
jg
ljmp
out
adc
mov
adc
inc
mov
outsb
cmp
cmp
cmp
mov
arpl
cmp
pop
mov
push
xchg
xlat
add
jecxz
pop
push
push
dec
inc
decl
loop
adc
mov
pop
adc
ret
push
shrl
jnp
test
sar
icebp
pusha
add
repz
mov
into
sub
std
mov
pop
scas
add
jmp
xchg
jae
or
js
sarl
sbb
loop
outsb
mov
sti
xchg
icebp
jge
cmp
decl
int
imul
in
mov
cmc
imul
into
outsl
in
es
call
cwtl
ret
dec
cmp
inc
jbe
in
aas
sbb
fdivrs
jne
xchg
add
or
lods
in
clc
push
add
mov
pop
jg
pop
std
pushf
les
mov
jo
int3
mov
push
dec
daa
aas
pushl
sbb
mov
outsb
or
jmp
movsl
pop
es
outsl
mov
xchg
ss
scas
in
mov
jg
nop
daa
in
inc
pop
dec
cmp
mov
rorl
jg
pop
iret
cwtl
sub
jg
imul
xchg
pop
stos
test
pop
cs
es
add
arpl
cmp
push
push
icebp
pop
push
cmc
xor
mov
jae
xchg
popf
bound
and
ljmp
test
aad
in
sahf
dec
cltd
dec
loop
sub
jg
call
mov
sub
cmpl
imul
xor
dec
sub
cli
push
test
icebp
lds
xor
jbe
push
rcll
cmp
inc
pop
lods
mov
data16
inc
stos
fwait
cmp
sarb
xchg
pop
shl
out
lret
decl
cltd
dec
dec
push
xchg
or
add
pop
adc
pop
push
scas
and
jmp
std
movsl
xor
xchg
repz
or
in
mov
scas
inc
test
daa
pop
mov
jne
mov
decl
popf
outsb
push
data16
test
inc
dec
int3
cmpsb
sub
clc
push
push
pushl
fcmovnu
insl
add
enter
xchg
and
aad
cmp
call
js
aaa
ret
ljmp
mov
divb
out
jb
or
cwtl
int3
sub
je
out
adc
cwtl
lods
inc
mov
cmp
shr
or
fimuls
cli
xchg
inc
aaa
rcll
push
incl
and
sub
outsl
aam
mov
sub
adc
mov
clc
jo
and
ljmp
cli
das
clc
shr
cmc
fistpll
pushf
ljmp
mulb
sbb
fwait
test
fwait
adc
test
xor
xchg
xchg
mov
js
mov
push
and
mov
pop
lock
pop
xor
icebp
scas
ljmp
fstps
sbb
xor
push
cmpsb
out
jle
add
add
call
lcall
bound
test
call
fidivl
test
push
sbb
popa
jne
adc
imul
add
lahf
ljmp
mov
cmc
in
out
inc
push
xor
xor
mov
aas
or
imul
mov
cmp
cmp
add
push
iret
dec
stc
pop
hlt
push
and
pop
jg
lcall
dec
les
cs
cmp
mov
cli
shlb
push
shrl
sbb
mov
in
jne
mov
fistl
mov
call
pop
add
dec
pop
sub
xchg
repnz
sub
daa
jl
push
cmp
mov
xchg
decl
and
cltd
xor
inc
cli
nop
cmp
aaa
jl
sbb
ljmp
jmp
dec
ret
xchg
and
sub
sbb
jmp
mov
adc
mov
loop
xlat
fsubrl
mov
mov
sbb
fimuls
xor
decl
mov
and
in
pusha
and
or
repnz
lods
int3
out
pop
mov
decl
adc
in
mov
imul
out
pushl
cld
addps
cmp
ss
ficomps
aad
out
addr16
pushl
dec
bsf
les
jecxz
ljmp
or
mov
les
icebp
mov
idivb
or
mov
clc
je
sub
test
xchg
inc
lods
or
scas
jmp
ljmp
fstps
iret
xchg
mov
inc
int3
push
adc
jle
adc
mov
incl
into
inc
cmp
sbb
mov
fistpll
cmpsl
popf
cmp
jp
movsl
and
mov
test
and
incl
xchg
dec
push
sbbb
repz
pop
pop
or
clc
mov
inc
mov
icebp
incl
or
push
jbe
shll
jns
sbb
fs
inc
fisubs
push
jg
lcall
leave
gs
cmp
push
mov
lret
mov
push
jg
decl
stos
movsb
aaa
mov
in
or
std
inc
fnstsw
mov
cltd
insb
or
ds
scas
aaa
xchg
add
xchg
xchg
mov
lds
push
ljmp
xchg
xor
xor
mov
repz
mov
pop
jne
jecxz
fsts
arpl
call
rcrl
aad
rorb
push
jb
insl
xor
jo
pop
lods
xchg
cmpsb
ljmp
andps
and
mov
movsb
dec
adc
stos
ret
mov
sbb
dec
outsl
outsl
idiv
incl
js
adcb
imul
inc
mov
mov
push
int3
or
push
andb
mov
jns
sub
xchg
or
jb
sti
mov
sti
pop
nop
or
call
mov
into
nop
rorb
sbb
add
add
sarb
outsl
lret
fstps
daa
in
mov
int
bound
out
sbb
push
in
xor
lcall
decl
push
insb
push
insl
lds
mov
and
pop
cmp
xor
in
ljmp
cltd
lods
jmp
arpl
pop
dec
mov
test
cmc
jbe
inc
daa
sub
call
mov
in
lret
mov
push
and
std
push
cmp
sti
test
dec
int3
push
outsl
jns
lcall
js
sbb
jle
sub
jbe
out
push
or
mov
jge
test
imul
popa
sti
int
jl
cmp
fs
lcall
or
dec
daa
and
aad
and
fwait
arpl
xor
mov
cmp
mov
add
and
mov
in
pushl
cmpb
aas
pop
ja
or
gs
cmp
mov
repnz
cmp
pop
pushl
ss
jmp
jnp
out
xor
mov
pop
flds
sub
in
inc
shrb
insl
lcall
decl
aam
cltd
mov
add
decl
pop
xchg
cli
bnd
popa
mov
push
jg
decl
insb
push
call
aad
sti
pop
dec
ret
jne
sub
call
sub
xchg
jp
xor
daa
rcll
or
fdiv
mul
scas
adc
aad
jg
and
jecxz
xchg
push
repnz
aaa
cmpsl
rclb
lcall
call
fsubl
sbb
ror
xor
pop
dec
es
out
pop
jl
lcall
in
pop
ss
fisttpll
adc
push
std
sahf
and
mov
ljmp
cld
imul
ds
loopne
mov
enter
in
lcall
adc
loope
and
ret
jnp
cmc
cmp
xor
mov
stos
pop
mov
fisttpl
jecxz
daa
push
lret
dec
cwtl
mov
sbbb
aam
push
adc
test
clc
stc
and
pop
dec
scas
sbb
test
sbb
decl
outsb
out
jo
int
shll
sbb
cmp
into
je
jl
pushf
pop
push
xchg
iret
xchg
inc
dec
clc
mov
stos
pushf
pop
sbb
jne
adc
test
jg
mov
jmp
lahf
ljmp
std
xor
push
push
loopne
cs
jmp
mov
jno
mov
push
mov
sahf
jbe
mov
add
sub
jns
decl
dec
stos
dec
dec
test
lods
mov
imul
push
jnp
adc
ds
cmpsb
sub
mov
adc
xchg
adc
std
push
push
mov
pop
push
mov
decl
or
into
pop
sbb
add
jg
popf
mov
mov
xchg
into
cmp
sti
ja
call
add
std
bound
hlt
ret
adc
outsb
mov
leave
mov
ss
push
inc
subl
jg
decl
repz
shrb
mov
add
pushl
std
out
loopne
or
imul
mov
xor
push
cmp
lret
push
pop
fisubs
lock
xor
mov
push
lret
pop
jb
cli
fnstsw
rcll
in
popf
jmp
xchg
sbb
sbbl
loope
push
out
arpl
or
lcall
inc
cmp
or
test
sub
movsb
pop
dec
inc
pop
ja
ret
xchg
addr16
out
add
inc
sub
fnstenv
adc
cmp
loope
sub
jbe
adc
cmp
repz
adc
push
lahf
mov
xor
fucom
lahf
out
in
sub
mov
lahf
mov
shrl
mov
xor
into
mov
inc
addr16
add
mov
jmp
xchg
scas
ret
cmp
sub
inc
lea
mov
aas
push
jle
pop
mov
adc
pop
inc
sbb
lds
sbb
out
jmp
test
lcall
repnz
pop
dec
or
jg
in
mov
mov
xor
lret
fsts
jo
std
cmp
decl
mov
inc
dec
mov
push
xchg
in
xor
jg
dec
inc
gs
clc
loopne
clc
xchg
sti
fwait
cs
adc
movsl
push
push
sub
sahf
jle
or
dec
add
pushl
and
pusha
rcll
mov
shll
pop
sarl
cmp
cltd
outsl
sbb
out
jmp
jl
inc
sub
sub
or
enter
jns
push
mov
ljmp
pushl
dec
push
mov
cmp
mov
dec
lret
decl
scas
fistpll
inc
incl
cld
cmp
pushf
add
pusha
mov
push
lods
inc
mov
nop
inc
push
incl
rorl
dec
insl
mov
mov
jmp
mov
add
test
xor
call
pusha
outsl
dec
lods
ret
sub
mov
pushf
dec
sub
pop
mov
push
push
xchg
aad
push
fbstp
lret
mov
dec
loopne
pop
sbb
xchg
dec
rcrl
notl
test
sbb
insb
aas
sub
repnz
push
addb
aad
incl
out
cltd
aas
sub
dec
push
minps
out
xchg
enter
inc
cmpsl
fdivr
decl
mov
icebp
mov
xchg
push
enter
out
sbb
fsincos
dec
divl
push
out
call
inc
add
mov
fcoms
push
and
push
mov
push
jmp
ljmp
bound
mov
push
fiaddl
sahf
push
sbb
addps
dec
cmp
adc
popa
jmp
dec
mov
xor
xchg
daa
movsb
cmp
mov
nop
lcall
adc
jbe
cmp
ror
jle
mov
jae
mov
pop
inc
jo
sarb
incl
cmp
xchg
sbb
loop
jmp
loop
mov
xchg
cmp
ljmp
sbb
xor
rcr
mov
sub
cmpsl
arpl
dec
jne
filds
jmp
and
test
add
sbbl
and
ljmp
push
lock
jle
pop
test
add
ret
leave
inc
loop
jmp
jns
xor
adc
adc
iret
or
add
jae
push
cmpb
push
js
call
xchg
lods
mov
mov
push
jecxz
mov
adc
fdivs
xchg
rclb
sub
cli
lods
aas
sub
mov
out
aam
mov
pop
imul
push
mov
xchg
xor
xchg
imul
ljmp
jns
imul
push
nop
push
lods
call
sarb
nop
xor
or
inc
enter
mov
mov
mov
sub
hlt
call
and
das
hlt
and
loopne
jb
aam
lcall
decl
mov
xor
inc
test
comiss
jo
call
jmp
push
jmp
dec
inc
adc
sbbb
add
fwait
mov
imul
sbb
in
mov
jne
push
mov
fucomp
aaa
popa
push
inc
in
adc
cmp
mov
jl
ret
push
mov
fstpl
aam
xchg
movsb
lods
sub
add
addr16
lcall
in
mov
xchg
mov
cmp
les
ds
jae
jmp
add
add
ss
iret
push
lret
jmp
inc
mov
mov
popf
mov
cli
jmp
mov
lahf
sub
jb
test
lret
loope
and
sub
in
pop
incl
mov
out
cmp
sub
outsl
test
outsl
xor
pop
fldcw
pop
aaa
xor
ljmp
test
mov
ret
sahf
repz
xor
xor
lea
decl
std
jmp
jns
jo
mov
clc
ffreep
insl
imul
push
jns
jle
inc
lret
sub
mov
test
cmp
daa
cmp
nop
mov
lret
mov
or
call
cld
lcall
test
cmp
repnz
imul
jbe
sbb
adc
fwait
sub
xchg
ss
aas
loopne
out
arpl
mov
testl
push
dec
jp
lcall
out
dec
std
int
mov
rcrb
mov
incb
into
scas
push
jo
lock
dec
cmpsl
adc
movsb
jns
jg
hlt
push
pusha
fbld
daa
xor
jo
inc
sbbb
ljmp
dec
push
and
sti
xchg
jp
xorl
xor
dec
mov
pop
push
mov
lock
jns
in
cld
mov
pop
cwtl
xorb
lret
mov
popa
add
jbe
cs
fisttps
adc
out
scas
cmp
int
cmc
push
test
dec
andl
fstps
shrl
mov
js
loopne
bound
dec
or
push
pop
nop
or
das
clc
filds
jb
or
mov
jbe
decb
out
xlat
aas
aad
fisubl
mov
call
rcr
or
shll
pop
xchg
loope
cld
rclb
sahf
cmp
loop
ljmp
lds
ja
or
mov
lahf
mov
add
iret
jbe
cmpsb
mov
rorl
test
add
push
jbe
push
mov
shrl
out
jle
ljmp
je
xchg
mov
stc
or
lods
mov
in
in
pusha
addr16
adc
jge
pop
ja
incl
mov
pushf
iret
mov
pop
movsl
xchg
and
loope
cmp
cld
mov
fdivrl
incl
pop
adc
jno
jle
xor
in
mov
and
fsubrs
call
cmp
popa
xchg
and
imul
xor
xchg
adc
add
xor
repz
cs
ljmp
bound
jno
repz
sti
xor
dec
xchg
inc
jle
cmpsl
imul
jmp
pop
mov
add
aas
adcb
cmpsl
or
shll
mov
mov
and
fildll
dec
repnz
or
mov
into
mov
std
dec
decl
cs
mov
loope
inc
cli
xchg
imul
fwait
and
and
sub
mov
cmp
mov
cmp
and
lock
push
sub
dec
aad
dec
push
decl
scas
mov
sbb
xchg
jbe
add
hlt
xchg
into
shll
cs
pop
std
xchg
aas
push
xor
cmp
or
insb
push
or
and
and
aad
mov
pop
mov
test
mov
adc
push
pop
loopne
xchg
fbstp
sbb
lcall
jae
lcall
fisttpll
xchg
mov
sbb
test
ja
loop
sahf
inc
fistl
scas
xchg
inc
outsl
jb
sahf
sahf
lock
cli
sbb
sbb
ficoms
mov
add
ljmp
addr16
jp
xor
sahf
adc
mov
inc
es
jb
movsb
push
adc
inc
ljmp
arpl
inc
xor
gs
imul
and
incl
jl
push
pop
stos
clc
aad
sti
aam
mov
movsl
orb
pop
in
pushl
xor
xchg
pop
hlt
inc
aam
js
sbb
enter
out
fwait
decl
mov
sub
fcmovne
cmp
out
repnz
xchg
jmp
jmp
pop
inc
lret
insb
or
fidivrl
into
xchg
or
adc
fistpll
mov
sti
add
popf
xchg
xchg
lcall
mov
imul
stos
jp
rol
stc
jp
pop
xchg
cmp
inc
pop
mov
mov
sbb
imul
mov
inc
sub
xchg
addr16
sbb
in
and
gs
lcall
pusha
jmp
cli
test
mov
sbb
pop
iret
xchg
mov
mov
cmpsb
add
inc
xchg
stos
xchg
sub
aam
ficomps
movsl
mov
jg
mov
push
movsl
mov
in
aad
jno
push
jo
pop
sbb
mov
es
call
clc
stc
or
dec
ljmp
es
sbb
addr16
jl
mov
arpl
jmp
add
int
adc
pop
idivb
movsl
fcompl
call
inc
ret
mov
cmp
xor
bnd
push
push
add
pop
incl
dec
clc
sbb
lcall
out
inc
sbb
cmp
xor
cld
dec
ljmp
push
mov
jecxz
inc
jbe
pusha
insb
cmpb
add
xchg
out
mov
shll
rcl
dec
jbe
jo
push
fmulp
int3
lods
out
cwtl
pop
jmp
ret
std
cmp
lods
pop
sub
ficomps
cli
jne
repnz
or
cli
dec
jns
movsb
ret
pop
or
inc
ret
mov
dec
adc
sub
loop
xchg
movsl
pop
xchg
movsl
mov
and
incl
push
in
pop
loop
sub
jbe
xchg
jge
imul
lret
jmp
mov
jmp
nop
stos
inc
xor
movsb
loopne
dec
in
incb
jge
ljmp
xchg
adcl
push
mov
mov
bound
add
mov
mov
mov
jbe
add
jl
or
outsb
cld
sbb
lcall
loope
adc
push
mov
jecxz
jge
mov
pop
out
mov
xchg
dec
mov
mov
pop
mov
cli
arpl
push
xchg
decl
ljmp
push
pusha
add
jno
xchg
cmpsb
cmp
mov
data16
sbb
lahf
icebp
or
imull
fisubs
push
adc
insl
dec
sbb
iret
imul
lret
jbe
push
or
out
xchg
pushl
inc
sbb
inc
mov
mov
lahf
pop
shlb
pop
sbb
adc
cmpsb
mov
pusha
mov
adc
cmp
lock
roll
push
insl
and
sub
jb
rclb
inc
sub
incl
mov
cmpsb
cld
in
pop
fdivr
xchg
jge
or
outsb
insb
ret
inc
or
mov
xchg
lock
loope
in
mull
cmp
shlb
lret
decb
and
decb
dec
xor
sub
mov
ja
jle
adc
sbb
cld
cmpsl
jbe
fcoms
jmp
xorl
push
xor
mov
adc
dec
cmp
dec
and
mov
incl
nop
ds
jle
out
sub
ret
mov
and
gs
pop
sub
arpl
mov
xor
ljmp
movsb
xor
cmp
cltd
xor
xor
dec
and
xchg
mul
adc
aas
mov
mov
xchg
into
sub
inc
dec
mov
dec
push
lahf
mov
pushl
js
jg
cmp
sbb
mov
cwtl
mov
cmpsb
push
jo,pn
mov
es
adc
sahf
das
icebp
sti
pop
push
inc
test
popa
jg
or
lret
sbb
enter
dec
subb
mov
cmp
jmp
pop
xchg
xor
out
sbb
push
sub
scas
fisttpll
outsb
adc
inc
jl
dec
inc
call
push
stos
add
push
movsb
aam
dec
or
rol
dec
out
dec
pop
fmuls
mov
icebp
mov
adc
push
imul
incb
js
test
lcall
out
imul
pusha
out
in
in
mov
out
mov
adc
jecxz
and
ds
rorl
mov
inc
cld
ret
loope
out
jg
incl
mov
sbb
mov
scas
add
shll
mov
outsl
pushl
mov
cmp
push
imul
and
pop
jmp
xchg
pop
cs
cli
or
ss
bswap
adc
xor
adc
push
cmp
test
dec
dec
push
jecxz
call
jo
scas
dec
stos
lds
pop
mov
push
lods
add
lret
mov
incl
cmp
bound
lret
addr16
rorl
push
in
jns
pushf
push
sti
cmpsl
jmp
push
mov
js
stos
xchg
mov
js
ret
insb
jl
repz
push
pop
aaa
xor
xor
inc
xor
jge
and
cmpsl
fwait
jno
imul
push
and
mov
lret
or
test
mov
call
mov
shlb
stos
ret
stos
rclb
push
add
loop
dec
sbb
icebp
call
movb
fucomip
jno
outsb
stos
mov
scas
leave
sbb
jnp
push
addr16
sbb
push
adc
mov
lea
push
mov
push
xchg
decl
pop
xor
out
rcl
stc
out
push
pop
sbb
sbb
jbe
stos
cmp
loop
decl
call
fcmovnu
and
jbe
xorl
out
push
sbbl
xchg
wrmsr
xchg
sbb
mov
adc
add
out
adcb
movntps
mov
mov
pushl
fwait
inc
into
dec
sub
sub
cwtl
jecxz
dec
inc
add
stc
push
out
testl
push
mov
outsb
pop
sub
cmp
fildl
xchg
popf
cmc
leave
subl
decl
nop
or
or
dec
push
ja
push
sbbl
lcall
scas
fucomip
inc
icebp
insl
cmp
addr16
addr16
imul
dec
arpl
lret
sub
mov
call
push
xchg
scas
ret
pop
ds
push
insb
mov
je
jecxz
cs
iret
pop
ja
call
pushf
call
xchg
mov
cmp
movsb
insl
cmpsl
imul
push
insl
scas
add
dec
cmc
adc
jmp
jmp
adc
or
jecxz
dec
into
sahf
xor
cmpsl
sub
shr
mov
push
mov
ljmp
push
leave
adc
jo
sbb
push
inc
in
rcrb
ficoms
sbb
dec
dec
popf
test
int
xor
push
mov
adc
push
mov
idiv
pushl
mov
push
out
dec
mov
xchg
cmpsl
test
sbb
cld
jmp
jne
fisubs
sbb
xor
sbb
je
or
es
pop
or
mov
fdivs
in
jmp
cvtps2pd
fcos
mov
je
ficoms
test
lret
gs
or
ja
cli
inc
ja
dec
into
int3
push
mov
sub
clc
dec
mov
and
jo
into
leave
dec
mov
fwait
pushl
test
out
adc
cwtl
jbe
and
dec
mov
adc
call
inc
mov
fcmove
xchg
scas
push
adc
sub
test
add
outsl
sbb
or
pushl
notl
push
in
sbb
jmp
cli
mov
aad
call
iret
mov
je
lcall
enter
cmpsb
cld
icebp
mov
in
jg
or
push
sbb
rorb
mov
adc
push
mov
test
jae
mov
loop
adc
ffree
and
pop
xchg
mov
incl
in
rol
sub
xchg
call
xor
call
mov
test
jnp
xchg
pop
inc
inc
pop
dec
dec
outsl
adc
push
jle
ss
cltd
pushl
loopne
lcall
jno
inc
outsb
addr16
lods
mov
pusha
mov
and
mov
jnp
mov
dec
or
lret
imull
add
inc
call
add
enter
cmp
mov
inc
jmp
xor
loop
loop
or
lods
jns
repnz
lcall
and
add
jmp
popf
jno
push
call
cmp
jno
inc
sar
add
sti
hlt
xor
jbe
int
cmpsb
push
mov
dec
xchg
inc
jp
xor
jae
adc
aam
dec
mov
cwtl
jmp
lret
pop
rorl
mov
lcall
dec
int
lahf
fs
pop
loope
inc
or
icebp
mov
dec
sahf
xlat
jb
stos
mov
incl
adc
out
sub
pop
or
aaa
js
fstpl
add
stc
dec
shrb
pop
test
out
mov
les
leave
out
jmp
ljmp
mov
xor
div
or
cmp
stos
xor
arpl
pop
into
lahf
mov
jle
xchg
dec
cmp
push
adcl
in
or
pushl
scas
movsb
dec
lods
pop
xlat
out
lods
ret
cli
sbb
sahf
ret
jmp
adc
jg
fistpl
cltd
pop
fs
insl
adc
ror
mov
mov
lcall
fnstenv
jmp
ss
add
ret
daa
jmp
sbb
in
mov
std
ljmp
dec
mov
sbb
cmpsl
mov
xchg
push
ror
xchg
cld
jg
or
data16
imul
push
mov
jmp
fsubrs
mov
xor
inc
dec
fnstenv
mov
outsb
cmp
jg
sub
mov
out
dec
mov
inc
cmp
fcmovu
mov
stos
and
push
cmp
xor
aas
dec
stc
push
movsb
pusha
add
cmp
decl
xor
loope
lcall
pop
pop
movsl
sarb
sub
dec
push
gs
fs
popa
cmp
out
movsb
stos
mov
mov
daa
in
or
jb
pop
or
stos
or
cmp
push
loop
incl
cwtl
lcall
fs
stc
xchg
dec
sub
pop
cmp
cmp
bound
mov
mov
mov
in
adc
adc
es
decl
test
dec
rclb
gs
xor
mov
adc
mov
dec
mov
jg
repnz
jnp
rcrl
push
mov
repz
adc
push
sub
lds
movsl
ljmp
cli
call
imul
fs
sarb
dec
xchg
rorb
pop
adcb
stos
inc
in
sub
nop
fwait
xchg
mov
xor
inc
xchg
and
sbb
les
outsl
loopne
repz
lcall
cmpsb
dec
dec
cltd
in
push
rep
fstpt
jae
call
and
leave
dec
inc
cmpsb
xchg
lcall
xchg
ljmp
fxch
sti
fisubrl
and
ds
dec
mov
dec
or
pop
jno
lcall
in
das
push
je
or
xor
pop
clc
popf
test
jb
push
pushf
lds
xchg
test
inc
jmp
push
ret
mov
jae
std
mov
scas
jl
rolb
lea
sub
je
in
xchg
call
cs
sbb
push
mov
int
mov
das
push
add
decl
stos
mov
scas
cmp
sarb
cmpsl
xor
cmpsb
xlat
fstpl
push
stos
inc
add
jg
call
ret
subb
pop
in
jg
cs
and
xchg
cmpsb
xchg
mov
and
push
jb
jle
incl
fxch
jae
movsl
sbb
adc
adc
cmp
mov
xor
fdivrs
xlat
bswap
ljmp
sar
mov
jl
les
dec
dec
xor
or
and
dec
scas
jl
ljmp
adc
mov
pushl
pop
sub
popf
jmp
or
call
enter
out
inc
mov
or
clc
loopne
jne
adc
scas
cltd
ficoms
decl
cld
sbb
adc
movb
in
xchg
jae
mov
insl
filds
sub
or
cmc
mov
mov
dec
addb
dec
test
sbb
add
ljmp
out
pushf
mov
scas
sub
testb
test
out
lcall
cli
loop
hlt
jl
xlat
and
xchg
mov
scas
mov
and
xchg
in
jb
mov
sar
inc
dec
jns
or
push
fistps
jmp
inc
inc
jns
dec
hlt
fcmovu
dec
add
ljmp
add
add
adc
dec
into
sbb
jmp
call
jmp
pop
mov
cltd
xlat
mov
mov
jecxz
ret
sbb
incl
push
xor
jnp
adc
jle
xchg
xor
xor
aad
stc
dec
test
popf
dec
jg
incl
sub
sbb
movb
sub
push
pop
repnz
jne
mov
adc
js
jno
loope
pusha
and
add
or
loop
outsl
mov
inc
mov
fcom
test
arpl
popf
push
adcb
ficoml
je
sub
cmc
or
imul
adc
jne
movsb
aad
add
iret
cmp
pushl
mov
adc
bound
notl
movsl
scas
ljmp
mov
xchg
sbb
out
xor
push
cmpsl
jbe
shlb
or
jmp
sahf
jmp
iret
shlw
outsb
inc
fldcw
push
jae
ret
dec
test
mov
add
adc
mov
pop
jo
movsb
insb
das
sarl
mov
cmp
push
cli
push
xor
lret
cmp
sub
or
roll
adcl
orl
xor
sahf
jmp
call
rcrl
orl
cld
testb
stos
dec
sbb
dec
dec
repnz
int
push
bound
ljmp
xchg
cli
mov
loope
incl
fidivrl
pop
cld
rcll
mov
cmpsb
jle
enter
or
adc
into
incl
adc
jo
out
divl
je
sbb
push
cmp
dec
inc
mov
xchg
and
mov
push
negl
sahf
addb
xor
dec
push
lcall
in
xchg
push
pop
jae
inc
cmp
xchg
fisubrl
decl
lock
js
pusha
arpl
imull
and
subb
cli
mov
push
xor
gs
ds
xlat
jge
push
das
cwtl
mov
or
out
js
mov
cmp
jne
jno
insl
idivl
insl
out
cli
jmp
mov
fnsave
fcoms
cmp
aam
call
push
gs
mov
adc
jb
xchg
into
sar
stc
jecxz
adc
insl
push
mov
aaa
mov
pop
xchg
and
sub
push
out
pop
cmpsb
mov
sbb
ja
xchg
mov
xor
bound
mov
popl
fisubrl
pusha
cwtl
cmp
idivl
ljmp
push
repnz
iret
stos
sti
dec
push
faddl
ljmp
aas
push
pop
movsb
loop
fs
incl
lods
add
aam
jg
sbbl
mov
xor
incl
mov
sub
sar
jno
xchg
add
mov
jg
and
xor
insl
out
push
call
inc
sarb
out
iret
mov
jmp
mov
xor
lahf
xor
xchg
insb
or
push
pusha
mov
mov
insl
sub
sub
clc
andl
ds
cmp
clc
inc
sub
sub
ss
rcrl
lcall
cmp
sbb
mov
rclb
cwtl
jae
dec
aad
mov
dec
mov
jne
fiadds
inc
or
sbbl
mov
pushf
into
lock
imul
ss
aad
sti
mov
mov
ficomps
out
ret
sub
sbbb
xor
mov
pushl
cmp
arpl
outsl
sbb
sub
cmp
jnp
lcall
add
pushl
stos
fsub
xchg
mov
mov
out
rcrl
pop
pusha
inc
adc
dec
add
call
int3
xor
xchg
push
jmp
loop
mov
add
int
repnz
dec
movsl
addl
out
imul
push
ficompl
rcrb
lods
mov
incl
enter
clc
into
shll
xchg
sbb
cmp
fstl
add
scas
and
pop
out
sbb
sub
rcrb
fwait
jl
loope
jge
xor
cli
push
lcall
and
sbb
mov
cmpsb
rorl
inc
jo
sub
push
pusha
lods
loopne
sub
jl
lcall
popf
mov
xorl
adc
jle
out
add
xchg
repz
loop
jecxz
fnstenv
inc
adc
idiv
sti
inc
inc
in
loop
mov
je
xchg
or
pop
xchg
sbb
mov
lret
or
cld
xor
decl
data16
mov
fildll
jb
mov
fisubrs
mov
mov
sbb
push
mov
jmp
push
mov
cli
and
dec
cmp
aaa
dec
aad
mov
pop
xchg
pop
xor
or
incl
sub
mov
arpl
mov
pop
mul
sti
scas
or
and
dec
sti
dec
pushl
jmp
xchg
addr16
lcall
cvtps2pi
push
hlt
ljmp
cli
xor
orb
fnstcw
lods
dec
out
push
add
jnp
fisubl
in
lods
and
fists
out
outsb
jo
out
push
xchg
xor
and
decl
in
adc
xlat
in
and
fdivrl
mov
jge
pop
jns
stos
jl
or
jno
fmuls
inc
mov
mov
and
fildll
je
mov
dec
hlt
out
mov
push
and
xor
lcall
call
pop
ret
jmp
jne
jmp
mov
jle
xchg
mov
rorb
gs
nop
xor
cmp
push
gs
addr16
push
sti
lods
adc
jo
jo
jb
imul
cmc
inc
lcall
jno
sub
or
je
and
sbb
push
shlb
mov
xchg
jmp
in
out
cltd
push
mov
test
pushl
cli
fldln2
sbb
das
cmpsl
inc
cmp
movsb
dec
hlt
mov
mov
lock
fwait
call
xchg
mov
subb
outsb
rorb
ret
movsl
sti
leave
stos
rclb
mov
fwait
out
pop
test
mov
mov
adc
pop
lods
ljmp
fsubrs
subb
xor
dec
cwtl
test
decl
or
pop
or
push
or
es
test
int3
mov
xchg
loop
je
dec
shrl
hlt
dec
jns
dec
adc
imul
push
xorb
pushf
cmpsb
jne
decl
fs
jb
mov
mov
pop
idivl
out
add
cld
roll
imul
je
mov
lret
sbbb
or
xchg
repnz
inc
jns
loopne
xor
jb
mov
cmp
sti
mov
lcall
leave
push
adc
jns
sub
movsl
rol
fmul
adc
inc
lcall
int
pop
jecxz
dec
ficompl
lcall
ljmp
das
outsb
outsb
or
xlat
add
hlt
pop
push
mov
lods
shrl
inc
xor
push
test
inc
or
mov
movsl
cmp
dec
shr
jecxz
daa
adc
loop
lahf
push
pop
orl
mov
lods
daa
dec
imul
sar
aaa
repz
push
mov
push
lcall
jmp
or
scas
fisttps
nop
mov
or
ret
inc
cmc
or
test
add
hlt
sub
rorl
xor
lahf
jb
sarl
lods
test
in
xor
mov
shlb
dec
inc
push
cmp
arpl
aad
adc
mov
xor
cmp
call
lahf
sarb
mov
and
stc
sbb
xchg
or
lahf
test
arpl
mov
es
fs
jg
fs
jg
dec
xchg
ja
bound
test
stc
lret
decl
pop
sti
pop
pop
jecxz
pop
iret
mov
push
les
cmp
movsl
inc
lret
popa
addl
imul
mov
lea
mov
outsl
or
call
and
pop
sub
inc
jg
jb
dec
scas
in
mov
testb
repz
mov
mov
xorb
or
sar
jmp
stos
jmp
mov
adc
adc
dec
fistpll
fscale
and
ljmp
push
xchg
aad
sub
jmp
mov
out
lcall
xor
ret
aas
mov
and
mov
out
data16
frstor
aaa
rcrb
jg
cld
fwait
mov
movzwl
jno
fistpl
int3
sub
loopne
aas
or
adc
test
test
ljmp
mov
das
jp
sbb
ds
fwait
ljmp
les
sbb
add
xchg
int
mov
pusha
dec
mov
jmp
sbb
mov
in
push
shrl
sub
inc
rorl
ljmp
xor
jnp
fwait
xchg
xor
pop
jo
xor
sbb
cmc
push
ja
inc
in
xchg
mov
jle
jg
cli
inc
jo
ficoml
lcall
lds
mov
ljmp
adc
or
push
mov
push
xchg
mov
icebp
decl
add
gs
sbb
iret
shlb
int
xor
push
lcall
mov
outsb
cs
jge
shrl
pop
mov
dec
loopne
jg
mov
push
outsl
lock
ds
fildll
lret
test
or
push
dec
mov
loope
std
inc
jge
xor
pop
mov
mov
shrl
enter
push
fcoms
dec
shrb
sbb
adc
repnz
addr16
pop
mov
lods
adc
movsb
mov
inc
into
jns
scas
test
ror
lcall
xchg
inc
bnd
orl
pop
stos
xchg
ljmp
ja
sahf
mov
call
mov
mulb
dec
mov
stos
pushf
and
push
mov
rolb
pop
sbb
scas
imul
pop
push
fdivrl
cmpsb
ljmp
popf
arpl
sub
sti
ja
xor
push
int
mov
mov
lret
dec
lahf
pop
lock
subps
sbb
in
decl
xor
shl
gs
orb
call
scas
pusha
sub
cmpsl
cwtl
lret
fwait
add
incl
cld
jns
fstpl
jns
push
add
mov
jg
cmp
rcl
pop
pusha
sub
nop
lret
in
sbb
inc
cmpl
incl
xor
data16
insl
outsb
f2xm1
mov
cmp
outsl
gs
mov
jmp
and
in
loop
xor
add
aad
inc
mov
pushf
sahf
add
das
sbb
lcall
pop
pop
sarb
xlat
hlt
jmp
add
push
mov
sbb
mov
dec
cmc
rcll
gs
jmp
dec
aad
push
daa
or
in
in
lahf
mov
lahf
mov
adc
mov
inc
jmp
nop
lret
push
das
cli
inc
xchg
mov
cmpsb
popf
inc
dec
and
push
and
pop
movsb
add
lcall
scas
push
in
push
je
mov
rcrb
push
and
aad
int
jg
lea
lcall
sbb
push
xor
inc
jo,pt
pop
dec
jno
cmpsb
in
mov
pop
js
lret
xor
les
outsl
xchg
mov
test
mov
rorb
pusha
push
cmp
cmpsl
movsl
jbe
bound
jg
dec
fldl
xchg
xchg
mov
xchg
andl
pop
dec
leave
jmp
testb
out
xchg
cmp
mov
call
lret
or
out
sarl
aad
hlt
data16
loop
ret
xor
and
ljmp
mov
fsubl
cmpl
fildl
cmp
lcall
ss
das
out
hlt
inc
mov
stc
adc
dec
test
pop
jns
fcompl
movsb
xlat
inc
inc
test
rorl
pop
sbb
aas
popf
cmp
jae
mov
xlat
xchg
enter
mov
mov
pushf
pop
stos
jns
mov
iret
outsb
in
aas
in
pop
xchg
inc
es
jmp
cs
push
or
xchg
arpl
sbb
movsb
addr16
adc
or
push
rolb
mov
mov
imul
cltd
adc
in
mov
ljmp
and
movsl
cwtl
cmc
pop
mov
daa
loopne
shr
add
adc
lcall
jne
mov
inc
mov
dec
mov
mov
pop
and
xchg
lahf
stos
mov
call
scas
push
sahf
cmp
mov
mov
imul
cmc
pop
add
insb
mov
lahf
add
sti
or
jge
xchg
sbb
jle
ficoms
movsb
sbb
pop
or
xor
sub
xor
push
lret
repnz
mov
or
sar
insl
sub
adc
das
popf
xchg
adc
pop
push
call
mov
pusha
xchg
mov
pop
out
adc
adc
fidivrs
insb
sbbl
jmp
lret
or
cmc
adc
push
inc
ja
imul
adc
sbb
dec
cmp
je
loop
sbb
mov
sbb
outsl
mov
mov
mov
mov
fists
pop
mov
cld
stos
sbb
lcall
loop
xchg
int3
push
sub
xlat
cld
out
pop
or
adc
out
dec
imull
dec
incl
pop
lahf
and
add
sub
xor
gs
add
cmp
sub
push
fadds
adc
addl
es
mov
imul
les
fsubl
jge
mov
jns
xchg
add
xchg
sbb
clc
xchg
inc
test
shlb
mov
mov
fwait
call
and
cmp
dec
arpl
lret
std
hlt
fistl
popf
hlt
cwtl
inc
dec
ret
push
out
sub
popf
cmc
subl
test
inc
inc
cmpsb
jmp
add
mov
pop
std
jl
outsl
push
add
jecxz
mov
inc
add
pushf
incl
outsl
sub
push
into
test
cmp
pop
and
mov
inc
lock
jge
loope
mov
ljmp
enter
xor
sbb
pushl
add
xor
ret
popf
mov
xor
imul
xchg
in
lret
cmpsl
repz
call
mov
loope
pop
es
push
adc
popf
ss
lret
lcall
sub
adc
push
dec
jae
in
fmul
in
aad
push
hlt
inc
mov
cli
push
lock
inc
xchg
stos
jle
dec
sub
stos
ss
push
jae
pop
ret
mov
leave
dec
incl
xlat
pop
xchg
aam
lock
dec
or
stc
mov
dec
cs
stos
dec
idiv
in
rcrl
ljmp
loop
sub
inc
sub
je
incl
sbb
lock
ds
in
or
call
int3
mov
pop
outsb
movsl
fstp
add
inc
sbb
movsb
sub
call
adc
lret
sub
jl
adc
push
ljmp
and
sbb
add
ljmp
cltd
mov
xor
inc
pushl
mov
push
xor
mov
mov
stc
cs
cmp
std
pop
imul
xchg
ljmp
ficomps
pushl
mov
xor
mov
les
push
je
out
jge
adc
jg
decb
cld
leave
push
dec
add
mov
push
xor
lcall
and
mov
stos
lcall
roll
lock
xchg
imul
decl
das
sbb
cmpsb
add
xor
jl
int3
enter
push
mov
adc
icebp
arpl
int3
adc
push
lock
add
dec
push
dec
and
jmp
test
mov
dec
lea
lret
push
stos
hlt
jns
aam
push
std
fildll
data16
pop
or
or
mov
push
fwait
add
aam
add
and
dec
adc
jl
mov
clc
lcall
mov
dec
ret
lods
mov
xor
mov
mov
xchg
lods
out
and
ljmp
loopne
inc
repz
imul
lea
into
aad
lea
jg
ljmp
or
loop
and
cmp
ljmp
lods
leave
pop
jmp
fldl
jle
mov
mov
add
jne
mov
test
sbb
push
jno
xor
ljmp
mov
cmp
nop
push
cmpsl
jp
jae
ljmp
pop
bound
ds
ficoml
enter
loopne
mov
cli
mov
jl
mov
lcall
pop
mov
in
lods
inc
int3
lods
mov
xchg
shll
lahf
pop
mov
decl
filds
stc
out
add
push
add
pop
push
ficoms
mov
in
lods
es
and
lcall
mov
mov
dec
mov
test
or
pushl
loope
cs
sub
lods
xchg
mov
rcll
fildll
mov
xchg
fucomip
int
pushl
outsb
sbb
mov
je
aaa
push
or
imul
xor
jg
mov
call
in
mov
inc
cmp
inc
add
sub
add
lods
movsb
and
call
out
push
mov
push
push
lcall
das
cli
lcall
push
mov
adc
mov
es
mov
ror
bound
test
decl
bound
lcall
enter
les
xchg
test
bound
pushl
cli
cltd
or
adc
pop
les
dec
jge
mov
aaa
jns
add
incl
cmp
push
xor
add
es
into
enter
insl
jge
data16
mov
jge
pushl
dec
sbb
mov
pop
push
mov
mov
jl
inc
xor
ds
lcall
xchg
in
sbb
jb
insl
push
lcall
dec
test
into
fnstsw
and
ret
jecxz
js
orl
inc
mov
stc
sub
jg
pushl
adc
jecxz
mov
into
push
xlat
popf
sti
or
add
mov
push
cmc
fmuls
scas
adc
in
jle
loope
adcb
fcomip
lcall
add
push
fisttps
fiaddl
push
test
lods
in
incl
jae
xchg
xchg
cltd
js
scas
js
pusha
pop
push
and
mov
pop
int
mov
clc
add
push
mov
mov
push
jmp
push
mov
cmp
inc
loope
fistl
jnp
ja
dec
jmp
stos
rclb
adc
lock
jns
inc
pusha
inc
aas
sub
ret
pop
or
inc
pop
rolb
adc
pop
cmc
lcall
xchg
les
sub
inc
or
les
add
xor
jle
adc
adc
mov
xchg
test
nop
or
jecxz
adc
jg
pop
or
iret
leave
daa
push
adc
push
lcall
pushl
push
inc
jae
add
fldcw
mov
mov
pop
mov
inc
push
jno
jnp
dec
daa
dec
ds
and
dec
mov
inc
cmp
sahf
or
inc
push
mov
xlat
mov
dec
incl
in
fnstsw
inc
call
sbb
inc
fisttps
jg
call
jo
aam
out
jecxz
push
mov
add
popa
jg
mov
sub
jle
xor
xchg
out
scas
pop
jns
dec
scas
mov
aad
or
jg
mov
sub
or
gs
mov
adcl
imul
shr
jo
inc
adc
fnstcw
ljmp
ljmp
mov
out
cwtl
push
enter
outsl
inc
xchg
repz
xchg
mov
test
add
cltd
mov
negl
popf
add
xchg
lahf
jb
sti
rcr
leave
ret
inc
or
pushl
pop
das
xor
arpl
dec
cmp
fcoms
fs
cmp
fistpl
cmp
mov
push
imul
arpl
jae
decl
test
pushl
cli
xchg
ljmp
fsubrl
cli
cmpsb
pop
aam
xor
ret
jmp
add
push
imul
dec
es
frstor
scas
fidivl
jmp
repz
fdivrl
inc
mov
jg
xor
xor
aaa
dec
icebp
shl
pushf
test
out
ret
into
imul
fwait
data16
daa
inc
jbe
push
aad
jo
stos
cmp
adc
sbb
call
inc
clc
clc
ljmp
xor
scas
adc
shlb
out
jae
scas
and
push
pushl
je
and
pop
psrlw
fs
scas
push
bound
lods
jns
push
adc
mov
xchg
les
push
jl
incl
cld
test
cmpb
hlt
sub
cmp
dec
cmc
scas
es
bound
jmp
mov
movsl
sub
in
stc
insb
ror
ja
cmp
mov
xchg
ret
xchg
call
in
insl
mov
inc
push
cld
mov
cmpsl
clc
pop
scas
cli
inc
leave
movsl
push
mov
adc
cs
push
mov
add
orb
outsl
pop
sub
cmp
mov
cmp
hlt
imul
sbb
mov
xchg
cmpsb
cs
pusha
mov
jge
cli
add
std
subb
ljmp
xchg
pop
std
fmul
mov
filds
inc
js
les
sub
sti
into
sarb
mov
jbe
sub
mov
sti
xchg
pop
sahf
cmpsl
inc
fwait
sub
decl
leave
pop
and
sbb
mov
jb
sbb
rclb
sbb
movsb
inc
mov
sub
push
mov
call
movsl
mov
pop
dec
xchg
int3
sbb
test
insb
pop
int3
jle
jg
stc
out
scas
mov
mov
rcl
xchg
rcr
les
pop
cwtl
pop
pop
bound
in
sti
out
push
jg
inc
cwtl
jo
out
mov
push
push
mov
sti
sbb
jb
fbld
stos
mov
jl
jmp
mov
lods
jmp
push
cmp
lret
push
lock
inc
inc
pop
ja
mov
xchg
mov
jmp
jb
ljmp
fcomps
or
shlb
leave
cmp
ljmp
xchg
mov
pop
cld
mov
jge
lcall
cld
sub
cmpsb
decb
enter
jle
in
scas
sahf
in
cmp
rolb
pushl
nop
or
inc
mov
insb
repz
push
sub
loop
testb
ds
ljmp
add
jne,pn
add
xor
push
bound
cmp
adc
shlb
and
pop
pop
std
sbb
sbb
push
xchg
insl
fisubl
and
fcmovne
fyl2xp1
sbb
inc
test
lods
repnz
adc
adc
jne
xchg
lahf
mov
push
ja
sar
cmpsb
decl
iret
push
and
push
out
enter
sub
fnsetpm(287
sar
adc
mov
adc
and
cmp
jp
sbb
les
push
jg
dec
stc
xlat
mov
xchg
jns
jle
cli
mov
sbb
fidivrl
addr16
and
out
clc
pushl
rcll
movsb
cmc
mov
lret
imul
cmp
divl
repnz
sbb
mov
pop
sahf
mov
mov
add
adc
test
xchg
gs
jmp
rcrl
sti
fimull
fcompl
xchg
js
fisttpl
sti
dec
pop
mov
push
inc
pushl
dec
jecxz
sbb
stc
sbb
mov
adc
fdiv
push
dec
jle
imul
mov
out
xchg
daa
or
test
cltd
cmp
mov
incl
pusha
js
sbb
jle
add
nop
dec
cld
lret
or
cmpsl
mov
xchg
dec
fcmovu
push
sub
cwtl
add
int3
adc
xchg
mov
sub
mov
xlat
insl
subb
and
ljmp
cmpsb
insb
cmp
xlat
clc
and
loopne
push
and
inc
aad
and
lcall
aaa
jns
sbb
pop
cmp
popa
add
or
scas
fdivrl
mov
sar
stc
cmp
mov
stos
loopne
mov
jg
push
and
aas
cmp
in
pushl
or
jb
pop
clc
mov
mov
cmp
mov
pminsw
mov
jg
jmp
enter
xchg
dec
add
cmp
fs
test
popa
xchg
inc
sar
push
jecxz
push
pop
xchg
bound
add
push
fs
popa
lret
outsl
aas
ja
mov
push
cld
pop
icebp
aas
inc
fs
test
sub
push
lahf
cmp
xchg
ljmp
fmull
dec
pop
mov
out
decl
call
inc
adc
ljmp
cltd
dec
xor
or
incl
popl
adc
mov
sbb
sub
add
adc
ret
scas
and
mov
iret
sti
lods
pop
aam
rcl
pop
cmpb
cs
loope
cld
xchg
inc
mov
insl
mov
push
xlat
add
push
jo
ss
add
fisttpll
bound
and
dec
int
decl
cmc
scas
xor
push
adc
mov
mov
scas
js
imul
incl
lcall
pop
add
xlat
xor
ret
inc
pushl
subl
mov
cmp
ljmp
jne
inc
fmull
mov
test
icebp
mov
adc
lock
out
fmull
push
movsb
fdivl
cmp
or
jmp
dec
dec
cmp
sub
inc
addr16
incl
cs
jne
dec
fldenv
mov
int3
out
dec
xchg
ficoms
hlt
in
jmp
pusha
inc
and
pop
adc
decl
fadds
cltd
stc
repz
push
dec
pushf
sub
jge
scas
fsubrs
push
sbb
inc
pop
cltd
mov
mov
cmp
scas
test
decl
cmp
ljmp
push
lds
fwait
ret
aam
incb
test
call
dec
in
or
repz
mov
mov
out
enter
lret
incl
and
sbb
pop
out
xrelease
insl
insb
mov
push
rorl
jmp
lea
shll
cmpsl
call
sub
dec
mov
cmp
adc
mov
ljmp
in
mov
mov
aam
and
mov
fadds
cmp
into
mov
test
pushf
aam
or
mov
pushf
cli
pushl
xchg
jge
outsl
fwait
sub
xchg
pop
sub
lcall
icebp
out
in
sub
sub
jmp
int
test
dec
fcomps
popf
dec
push
inc
and
les
jmp
lret
push
xor
fldenv
test
sarb
gs
jg
je
sub
xor
out
xchg
inc
in
lret
loope
cmc
dec
jae
mov
jmp
xchg
mov
xchg
sub
push
bswap
xor
xchg
lea
add
loope
sbb
adc
ljmp
in
or
aaa
mov
push
adc
call
pop
push
arpl
sarl
rclb
lea
sub
enterw
jmp
cmp
cwtl
cltd
pop
sub
dec
jns
jmp
sbb
lods
push
test
ljmp
movsl
loop
lahf
mov
mov
or
sub
mov
cmc
ss
adc
call
popf
cli
cli
shrb
cwtl
loopne
add
mov
sub
mov
call
or
push
adc
pop
inc
fisttpl
xchg
stos
call
jno
mov
mov
shlb
ljmp
xchg
test
dec
jnp
xchg
out
pusha
test
inc
insl
mov
cli
inc
jp
xchg
iret
and
out
std
dec
repz
aad
lahf
int
and
lret
dec
cli
xchg
and
out
mov
lds
sbb
lcall
cwtl
mov
cmp
xchg
enter
hlt
cmpb
test
xchg
neg
adc
push
mov
cmp
push
incl
fsubs
repz
or
sti
daa
xchg
push
andb
lcall
ja
and
insl
sbb
mov
scas
mov
inc
jg
jnp
sarb
sarl
xor
jmp
push
mov
mov
jb
mov
push
add
inc
dec
sarl
pop
cs
jle
lods
roll
xchg
xor
add
into
insb
cmpsb
jno
push
popf
pop
push
mov
stos
fbld
mov
xor
mov
inc
scas
daa
mov
mov
shl
sti
or
rorl
mov
cmp
and
mov
mov
pop
sbb
outsl
add
or
push
sahf
jle
xlat
test
dec
scas
sbb
icebp
pop
movsl
loope
ja
and
iret
shll
outsb
sub
das
jmp
and
xchg
in
cmp
iret
outsb
cmp
dec
lret
cmp
inc
sub
je
lods
rorb
idivb
jmp
test
cmp
adc
fucomp
lods
nop
pop
bound
bound
imul
in
or
mov
addr16
jmp
imul
pop
inc
xchg
and
in
rcr
push
shll
bound
push
cmp
jle
sbbl
addl
and
test
test
cmp
mov
cs
es
rcl
stos
inc
inc
xlat
data16
inc
push
scas
sahf
xchg
mov
mov
aas
cmp
inc
out
lahf
sahf
sub
adc
pop
test
sahf
xchg
pop
pop
ljmp
sarb
dec
fidivrl
mov
and
test
sbb
cli
incl
mov
enter
sub
jge
iret
jbe
mov
test
cmp
push
lods
xchg
jge
mov
sbb
cwtl
mov
test
mov
repz
pop
insb
std
pop
or
jmp
xorb
jns
jns
and
mov
lcall
aas
jle
mov
mov
sub
xlat
ljmp
aam
mov
xchg
add
iret
out
xchg
hlt
dec
addl
lret
ja
pushaw
leave
inc
lret
lock
mov
stos
cltd
inc
sahf
sarl
je
adc
movsl
bound
sub
and
insl
add
js
in
jecxz
mov
hlt
fstpt
xor
pop
cmp
mov
adc
xchg
cmp
je
mov
loopne
lcall
jge
cs
mov
js
add
cld
jle
ror
pop
pop
call
rcr
push
addr16
loop
movsb
cmpl
stos
mov
lods
add
jg
iret
jmp
sbbl
jle
out
jmp
xor
add
adc
push
xchg
sar
call
icebp
add
mov
mov
add
dec
loope
sub
popf
push
inc
mov
xor
push
pop
mov
out
or
and
int
add
add
or
dec
jnp
or
add
mov
add
insl
mov
and
ja
or
js
push
jg
add
pop
jg
insb
dec
push
js
add
add
dec
orb
in
add
sub
iret
nop
cmp
push
adc
enter
scas
jle
pop
sub
add
push
nopl
or
jo
scas
dec
mov
or
fists
xchg
pop
movsl
push
daa
add
data16
add
es
push
scas
fildll
push
movsb
inc
scas
push
and
stos
push
and
idiv
jbe
push
test
and
imul
push
inc
aas
ljmp
scas
pop
dec
lods
push
mov
pop
sbb
add
pop
sbb
inc
mov
pusha
sbb
mov
mov
adc
adc
fs
mov
insb
or
lret
imul
enter
imul
imul
into
mov
jbe
insb
mov
lcall
pop
stos
outsl
aaa
sbb
mov
ss
add
fildl
mov
push
shll
add
outsl
push
shll
fidivrl
fisttpl
outsb
mov
push
ret
outsl
pop
mov
je
fidivrs
out
jge
fisttps
add
mov
ficompl
in
movsb
push
add
mov
sbbl
mov
shlb
mov
push
push
mov
imul
push
ret
aas
in
outsb
mov
mov
or
inc
testl
jbe
mov
data16
inc
xchg
sahf
in
repz
cs
push
shlb
lret
fistps
add
ja
push
push
xlat
jne
fsubrl
jbe
fdivs
push
aad
in
add
faddl
xlat
ja
js
push
jns
push
jp
shll
jp
inc
push
fidivrl
sarl
mov
vzeroall
push
fldl
ret
insl
pop
lods
inc
jmp
ljmp
xchg
scas
insl
call
push
pop
cs
xchg
xor
xchg
push
fldl
pop
xor
idivb
aaa
push
lcall
push
cmp
in
ret
addr16
pushf
cmp
popf
xchg
popf
aas
push
sahf
xlat
outsb
push
inc
lahf
mov
mov
jle
jecxz
push
imulb
rorb
dec
out
out
out
sahf
out
hlt
clc
stc
cli
sti
test
jns
cld
std
incb
jecxz
arpl
cltd
int
imul
add
imul
xor
add
pop
add
pop
add
cmp
add
in
lds
mov
add
or
or
mov
add
add
inc
repnz
add
aam
pop
sti
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
adc
rcrb
pop
stos
shrd
outsb
push
lods
lods
pop
mov
stos
mov
scas
add
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
push
mov
push
pop
scas
sbb
scas
scas
scas
nop
aaa
xchg
sbb
mov
mov
nop
fwait
and
and
int
pop
push
mov
push
xor
nop
sbb
inc
lock
push
xor
and
mov
mov
bound
push
and
and
shrl
pop
pop
cld
test
sub
mov
pop
sub
xchg
and
mov
and
es
aas
pop
aas
cmp
imul
cmp
cmp
cmpsb
add
data16
mov
xor
xor
pop
or
or
out
add
insl
pop
pop
xor
mov
mov
dec
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
hlt
pushl
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
cmp
push
stos
pop
cmp
jl
jge
jno
jmp
and
xor
pushw
dec
dec
cmpb
jo
mov
inc
xchg
mov
incl
movsb
movsl
mov
cwtl
sahf
mov
aas
jnp
lcall
mov
mov
sub
movsb
repnz
outsl
dec
ja
jns
dec
push
bound
js
clc
jnp
adc
xor
jne
je
lods
and
jg
insb
xchg
or
jo
lock
addb
pop
adc
aas
outsl
jge
movsb
dec
jle
xchg
pop
push
dec
add
dec
and
mov
and
cmpsb
push
mov
xor
imulb
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
xchg
adc
pop
fnstsw
jbe
dec
sbb
and
mov
ds
pop
xchg
jo
push
inc
mov
cmp
mov
cmp
shrb
xchg
jae
xchg
jp
out
inc
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
cmp
jle
bound
mov
mov
inc
aas
out
push
sahf
mov
insb
add
outsb
add
xchg
cmpsl
mov
push
test
cmpsb
dec
push
dec
push
movsb
das
pop
mov
jae
add
jb
shll
outsl
pop
xlat
pushf
push
lock
push
add
fwait
imul
lcall
fistpll
into
dec
mov
add
ja
sahf
jbe
sar
mov
sahf
push
add
add
ds
push
pop
movsb
outsl
mov
data16
jp
add
js
mov
xlat
popf
ja
data16
shrl
insb
pop
outsb
push
push
fidivrs
outsl
ror
push
ds
jno
add
mov
loopne
jge
push
jg
fiadds
call
sub
lock
add
lock
xchg
add
test
adc
push
loopne
iret
sahf
mov
xchg
add
jb
out
in
call
jle
jecxz
or
fiadds
fnstcw
aad
push
divb
lcall
add
adcb
adcl
jge
sbb
sbb
sbbl
test
test
fildl
ss
mov
push
xchg
nop
and
shlw
xchg
in
xchg
lock
sub
sub
orl
outsb
out
xchg
das
push
insl
mov
cltd
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
fidivrl
lea
push
test
xchg
pop
cmpsb
scas
jo
sahf
mov
pop
jbe
stos
into
shll
push
jl
push
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
hlt
andb
ret
data16
add
addr16
push
dec
out
je
and
or
pusha
add
mov
mov
femms
or
or
fstpt
sbb
es
push
adc
push
add
add
adc
adc
ds
add
scas
mov
mov
xor
ds
xchg
push
mov
xor
sbb
mov
push
add
add
and
loopne
imul
cmpl
and
lods
scas
add
addr16
or
aas
aas
cmp
or
cmp
aaa
add
cmp
scas
cmp
inc
jle
dec
in
dec
inc
cmp
dec
into
jnp
add
scas
ds
jle
sarl
mov
mov
ds
xor
dec
out
fwait
sbb
inc
scas
add
fiaddl
cmp
mov
addr16
mov
cld
fists
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jmp
test
mov
mov
ds
xor
sub
sub
sub
add
sub
mov
ss
and
inc
mov
push
push
push
push
push
imul
push
jo
or
pop
push
push
push
imul
ljmp
pop
imul
nop
cltd
mov
mov
call
decl
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
xlat
or
lds
or
push
rolb
add
add
sti
mov
incl
out
pop
je
ret
push
push
sbbb
add
cmc
repz
pop
jbe
bound
jae
aas
add
xchg
pop
cmp
test
add
mov
add
pusha
inc
add
mov
push
mov
fnstsw
repnz
outsl
lcall
xchg
addr16
add
add
mov
push
in
lcall
bound
push
arpl
mov
push
jg
rolw
lret
js
into
xchg
add
idiv
add
mov
mov
test
scas
xchg
js
add
out
fmul
divb
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
fcmove
xor
es
push
lret
loopne
push
inc
adc
into
fdivrp
mov
ret
out
xchg
add
test
cwtl
int
add
jle
jge
subb
add
in
sbb
dec
dec
dec
dec
dec
add
or
pop
or
add
push
dec
or
adc
cmp
adc
outsb
outsl
jg
dec
or
add
push
adc
add
nop
psadbw
dec
pop
pop
cmovg
inc
push
dec
sbb
xor
dec
and
adc
sbb
dec
out
dec
dec
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
jmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
inc
test
add
push
lods
mov
addb
mov
pop
mov
mov
push
add
outsb
mov
or
mov
outsl
add
push
mov
sbb
add
mov
cmpsl
mov
and
jbe
add
pop
nop
or
adc
jmp
ret
sbb
incl
add
push
outsb
sysret
mov
es
xor
andl
lods
inc
incl
stc
sysret
in
jo
leave
leave
lock
hlt
sbbl
jg
sbbl
mov
xor
add
or
jg
lahf
test
add
into
jg
cli
shlb
add
inc
test
mov
jg
sub
repnz
push
xor
add
xchg
jg
mov
mov
roll
das
sti
mov
jle
push
leave
scas
inc
dec
sbb
pop
jo
jg
xchg
orl
push
add
loope
idivb
mov
cld
jg
mov
and
jle
cmpsb
std
bound
adc
jg
bound
into
jg
mov
nop
pop
jg
xor
and
and
add
add
data16
arpl
movb
sar
inc
or
lods
call
js
push
dec
xor
or
dec
adc
mov
orb
jg
rcrl
inc
add
adc
jg,pt
adc
jbe
inc
bound
adc
and
sbb
scas
incl
add
enter
jmp
lods
jle
lret
imul
dec
add
add
add
adc
push
test
add
mov
push
lods
inc
addr16
add
add
popa
jbe
scas
inc
and
add
jg
test
jo
jg
and
inc
lret
outsb
jg
sub
inc
cmpsb
sub
or
jg
xor
movb
cs
cs
fldcw
cmpsb
ljmp
jnp
mov
pop
add
daa
mov
insl
sbb
aaa
pop
pop
mov
pop
jle
int3
loopne
dec
add
or
test
mov
jle
sbb
call
cwtl
adc
dec
xchg
push
ja
cmp
bound
add
mov
comiss
daa
push
arpl
or
mov
arpl
out
cmp
decl
dec
or
pop
pushf
push
xor
ljmp
dec
inc
inc
dec
sbb
jle,pt
jle
aam
xor
into
ja
xchg
push
push
fnstenv
add
push
and
cmp
jbe
inc
xchg
mov
out
push
jnp
push
jp
popf
insl
adc
push
js
dec
jbe
pop
add
aaa
bound
mov
mov
popf
adc
or
popf
ljmp
decl
jne
iret
jle
dec
jmp
outsb
ss
mov
call
or
fildl
fiadds
int
pop
lahf
mov
push
mov
fwait
adc
jbe
sahf
inc
out
and
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
roll
cmp
mov
mov
xchg
xor
xchg
xor
sub
fisubrs
nop
sub
nop
daa
ss
cs
mov
cmp
mov
xor
data16
call
ljmp
xchg
mov
adc
incb
fnsave
xor
pushl
pop
add
sbbb
pop
xor
push
pop
and
xor
stos
fnsave
inc
push
xchg
movb
nop
mov
mulb
mov
add
add
adc
les
xchg
sbb
adc
add
or
dec
sahf
sub
inc
aas
push
adc
pop
push
orl
lea
jns
popf
push
imul
mov
sbb
test
push
lock
and
pop
cmp
incl
xor
in
add
mov
sub
cmpsb
cmpb
decl
out
pop
cmpsl
pop
add
push
mov
mov
outsl
daa
orb
push
sbb
xor
mov
add
xchg
filds
inc
es
into
jmp
syscall
mov
cwtl
or
sub
lods
push
pop
add
pop
jp
add
xchg
pop
lcall
or
mov
sub
insb
lahf
or
mov
cld
jmp
test
inc
imulb
out
inc
add
xchg
sete
add
sbb
jmp
push
adc
adc
mov
movb
or
mov
lcall
adc
call
ljmp
bound
sbb
rorl
lcall
lcall
sub
sub
repnz
and
pop
clts
add
sub
dec
add
sbb
jle
adc
mov
int3
inc
sti
out
pop
mov
or
push
movsb
incb
dec
decl
add
pop
sbb
mov
test
rcrb
pop
inc
shrb
fdivrp
push
add
lret
pop
mov
std
incl
push
dec
out
adc
and
pop
pop
adc
cmpsl
cld
pop
stc
cwtl
inc
jb
lgdtl
call
popa
repnz
jg
xchg
outsb
mov
loop
add
xchg
jae
mov
test
jmp
addr16
sbb
incl
fcmovbe
mov
fcmovnu
pop
pop
inc
xorps
movsb
mov
pop
aaa
mov
iret
xchg
push
shll
sub
out
push
dec
jmp
ret
incl
cmp
ljmp
lahf
inc
inc
fwait
jbe
in
inc
inc
pop
inc
pop
mov
pop
push
pop
sahf
movsb
dec
push
stos
push
cltd
imull
inc
cmpsb
dec
dec
inc
in
xor
dec
mov
orb
and
out
and
insl
push
rcl
outsb
shrb
pop
ss
je
push
push
jb
mov
imulb
push
iret
insl
rcrl
outsl
pop
imul
notb
xchg
push
and
jne,pn
pop
push
inc
lcall
sub
pop
add
es
lcall
dec
and
fistpl
push
aas
decb
cwtl
imul
push
inc
push
xchg
int
dec
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
testl
push
sub
xchg
lcall
cs
lcall
fisubrs
mov
mov
push
add
or
js
std
faddl
jge
push
out
sahf
int
or
jl
or
fdivrl
jge
jg
xor
jle
repnz
push
dec
push
dec
outsl
mov
jg
fnstcw
repnz
jae
pop
fidivrl
push
mov
in
fwait
jnp
jge
hlt
in
add
int3
outsb
nop
testl
sbb
leave
stos
mov
stos
push
sub
or
push
adc
int
iret
add
addl
es
addl
orb
std
jg
pop
jg
and
xchg
out
push
sub
iret
fisttpl
mov
cli
pushl
clc
push
cvtdq2ps
iret
idiv
push
jb
sub
insl
sarb
sahf
icebp
dec
pop
cld
idivl
inc
sub
jg
adc
cltd
icebp
movl
jg
mov
sbb
cmp
ja
loope
xchg
cld
push
inc
mov
in
xchg
aaa
stc
sti
pusha
or
cmpb
jmp
mov
add
jg
dec
push
movsl
add
in
sarb
jl
movsl
ja
dec
and
push
dec
or
decl
jmp
dec
and
push
fsub
pop
movsb
dec
and
inc
push
int3
mov
jle
mov
fidivrl
arpl
sbb
decl
cwtl
push
pop
push
pop
push
and
mov
incl
xchg
aam
ds
decl
jp
int
push
jns
mov
insb
mov
add
in
sbb
in
sbb
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
lret
push
leave
add
jg
out
mov
or
mov
pop
push
mov
ja
inc
jmp
dec
ljmp
andnps
sbb
inc
and
les
adc
stos
dec
sbb
push
mov
add
add
xor
addb
nop
or
scas
or
pop
sub
shld
lret
sub
fwait
call
jecxz
adc
sub
insb
cli
inc
test
pop
sti
fstp
jbe
sbb
push
sbb
push
fwait
xor
dec
or
and
mov
inc
or
push
stos
arpl
xchg
add
add
dec
sub
mov
sub
nop
pop
test
ret
dec
sub
add
sub
add
push
imul
insl
jo
das
add
mov
gs
add
std
and
or
dec
add
sub
adc
adc
call
lea
icebp
xchg
pop
add
mov
test
xchg
sbb
jmp
lahf
jo
das
jecxz
inc
push
sbb
test
ret
add
imul
rcrb
pusha
insl
loop
mov
aas
add
push
cmp
lods
lret
sbb
add
subb
cmp
shll
scas
add
sbb
cs
and
mov
insl
mov
mov
lods
pop
popf
in
fldt
rcll
popa
bound
inc
xchg
adc
jb
fistpl
xlat
jae
add
lds
inc
inc
add
pusha
add
sbb
add
and
xor
shlb
scas
fldenv
cmp
call
add
mov
imul
mov
mov
lcall
lahf
xor
pop
les
cmc
add
mov
outsl
imul
jo
xor
dec
push
outsl
loop
add
xchg
and
inc
ficoml
sub
movsl
dec
fwait
pop
add
mov
jg
push
mov
dec
insb
out
inc
imul
add
out
dec
inc
adc
dec
sub
and
aam
addr16
push
and
nop
or
or
add
push
or
inc
bound
add
add
add
shll
add
mov
movsb
fistpl
sarb
pushf
add
add
add
fiaddl
cmc
popa
sti
popf
xchg
pop
popl
adcl
sbb
push
add
je
jne
adc
add
not
insl
adc
mov
es
je
push
dec
in
mov
xchg
mov
add
mov
sbb
cmp
adc
adc
xor
adc
test
push
adc
push
cmp
push
xor
dec
sub
sub
cltd
sub
push
jb
mov
cwtl
jmp
pop
add
imul
je
inc
iret
test
pop
mov
cmp
cltd
adc
xor
pusha
adc
adcb
adc
pop
test
jbe
lds
jo
packuswb
and
xor
add
add
add
adc
sbb
sub
es
pop
push
dec
es
push
jae
xor
add
push
scas
mov
adc
nopl
mov
mov
dec
das
fldt
inc
imul
inc
ja
xor
pop
test
pop
inc
and
push
test
and
das
mov
scas
lahf
mov
iret
mov
ja
push
jne
xlat
ret
inc
mov
xchg
adc
jae
loop
outsl
loope
sub
mov
mov
cld
add
xor
xchg
xchg
dec
popf
add
movsl
inc
mov
xor
insb
sub
mov
hlt
loopne,pt
das
sub
add
xchg
lcall
push
sbb
dec
mov
cmp
xor
push
xorb
jnp
push
cmpsb
jle
push
inc
aaa
push
pop
dec
add
popa
inc
pop
sub
insb
jne
arpl
add
mov
lea
adc
inc
jbe
inc
es
push
das
sarl
sub
xlat
and
and
stos
imul
pop
mov
fstpl
dec
sbb
lret
jne
fs
or
xor
popa
rcpps
js
sbb
xor
jb
inc
inc
mov
push
popa
xchg
or
fs
jmp
imul
lds
insl
fstpt
insb
push
sbb
push
xorl
fdivs
push
cld
sub
mov
add
inc
cmpsb
in
push
mov
jno
je
add
inc
add
xchg
add
push
cmpsl
out
push
jg
mov
sarl
lock
push
mov
xorl
or
es
jb
and
xor
ficomps
pop
xor
mov
adc
popa
or
xchg
mov
or
pusha
mov
and
icebp
aaa
ret
inc
je
insl
dec
outsb
dec
std
movups
in
push
and
mov
inc
sub
fcmovu
out
push
js
add
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
shll
add
movlhps
xor
rcll
mov
xlat
xor
mov
push
loope
repz
nop
push
in
enter
movsb
outsl
xorl
and
lods
sub
inc
outsl
inc
xchg
push
and
shlb
and
out
test
pop
shlb
ficomps
stos
daa
es
out
dec
adc
into
loope
inc
cwtl
mov
mov
jmp
inc
insb
scas
cli
test
push
mov
outsb
xorl
sbb
out
xchg
les
inc
loopne
or
sbb
add
subl
xchg
pusha
push
mov
mov
movsb
add
and
lods
add
arpl
outsl
cmp
in
sbb
jge
les
mov
shlb
push
xor
lods
or
hlt
and
ret
push
jbe
xchg
sbb
push
push
pop
pop
jle
mov
xlat
inc
inc
xor
mov
cmp
sub
adc
jns
mov
ret
mov
popw
xlat
add
xor
loopne
mov
xor
dec
adc
inc
test
xor
add
push
enter
and
aaa
jo
cmp
outsl
and
mov
push
cmpsl
inc
ret
push
mov
in
lods
outsb
jbe
cmpsl
mov
aas
push
adc
inc
pusha
and
mov
in
mov
xchg
xchg
pop
xchg
dec
insl
dec
inc
push
mov
sub
fs
rol
pop
shll
cld
xchg
ret
push
addr16
mov
sub
test
pop
test
popa
push
xor
jmp
arpl
mov
inc
cmc
inc
sbb
mov
inc
push
mov
fistpl
xchg
mov
cmp
jns
sbb
and
inc
xchg
push
out
push
mov
cmp
daa
outsb
pop
pusha
push
popa
fistps
fildl
inc
cwtl
sub
pop
add
lods
mov
xchg
jbe
enter
and
lahf
add
adc
cmc
push
mov
outsl
cmp
sbb
push
inc
jecxz
xchg
xor
incl
sub
xchg
xor
sbb
rclb
or
cmp
jo
pop
dec
push
sub
outsl
out
inc
test
dec
dec
ja
imul
pop
xor
jo
aaa
sub
loope
mov
sub
sbb
cmp
ss
mov
cmp
leave
pop
insb
sbb
addr16
bound
sbb
mov
sub
daa
push
add
cld
add
add
retw
arpl
push
adcb
mov
fidivrl
sahf
addb
fs
cltd
nop
movl
inc
dec
dec
mov
addr16
testl
addr16
fcomps
negl
ja
mov
enter
inc
jbe
cmp
push
test
leave
xlat
out
push
dec
xchg
loope
shll
pop
push
ficompl
dec
inc
add
dec
mov
jg
and
xchg
and
add
test
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
