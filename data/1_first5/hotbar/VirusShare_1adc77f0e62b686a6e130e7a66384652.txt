divb
in
mov
mov
js
inc
add
add
int
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
and
stc
out
aas
mov
test
je
cmp
add
and
jbe
decl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shll
cmp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
sbb
movl
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
repz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
cwtl
mov
mov
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
pushf
sbb
andl
mov
dec
lock
adc
push
adcb
push
jge
pusha
outsl
adc
mov
mov
fcomps
sub
dec
ret
mov
not
push
jo
or
mov
mov
xor
pop
mov
pop
cmpsl
push
ret
enter
cmp
jae
insb
xchg
push
call
jbe
fcmovnu
add
add
rcrb
outsb
loopne
mov
jecxz
ds
mov
jge
mov
adc
in
add
ja
push
shr
mov
iret
jbe
ret
enter
ja
mov
mov
add
mov
xchg
mov
inc
add
xchg
popa
jmp
mov
mov
xlat
insb
ja
ja
add
and
add
push
mov
sahf
add
push
jnp
mov
aas
fadd
pop
jge
xlat
jae
push
pop
pop
push
jno
jge
push
mov
add
pop
or
push
push
sbb
outsb
or
sub
mov
sbb
enter
add
push
mov
loopne
mov
aaa
ja
inc
pop
bound
inc
mov
adc
inc
lock
push
mov
cmp
push
clc
mov
or
jge
insl
cli
clc
jg
cmp
mov
mov
xor
mov
pop
ret
push
pop
mov
ret
push
pop
jae
jne
xchg
cmp
pop
inc
sub
rclb
or
clc
sub
enter
addb
in
push
mov
in
je
testl
pop
adc
inc
test
add
js
mov
cmp
jg
mov
adc
adc
push
pop
cmp
push
inc
add
fldl
add
outsl
pop
xchg
sbb
pop
cs
pushf
sbb
mov
sub
push
mov
sar
scas
mov
sysexit
lea
push
cmp
ja
adc
sbb
in
lock
cmc
add
push
push
mov
jmp
pop
scas
and
and
jo
push
sbbb
pusha
sahf
lret
or
ret
mov
stc
sub
adc
cmc
cmp
lock
push
std
jle
mov
cmpl
or
push
fsubrp
sub
xor
jge
dec
cmp
add
or
add
pop
cltd
xchg
add
push
ljmp
ret
enter
aaa
cld
sbb
add
push
jne
mov
mov
xor
jbe
mov
out
pop
mov
shll
mov
mov
or
inc
add
adc
lea
mov
jnp
xorb
push
xor
mov
mov
aam
push
cmpsl
mov
cmp
cmp
cmpsl
mov
cli
scas
sub
lea
or
rcr
stos
mov
roll
pusha
jnp
clc
cmp
or
test
jle
cmp
mov
inc
sbb
sahf
mov
pop
loope
add
icebp
sbb
adc
cmp
push
push
mov
pushf
jmp
sub
pop
out
ja
daa
repz
push
sarl
lea
inc
shll
das
xchg
and
pop
sub
nop
or
add
lcall
mov
and
hlt
adcb
mov
or
pop
and
jg
nop
adc
add
xchg
test
mov
mov
adc
shlb
jb
orl
or
or
mov
xor
mov
mov
xorb
fists
adc
dec
call
ficoms
in
movb
fistl
add
push
repz
xchg
xor
push
mov
jge
mov
mov
rcrb
sub
call
mov
push
pop
add
push
cmp
xchg
rorl
sub
add
sub
aad
in
outsb
push
lea
iret
in
pop
cmp
je
es
fdivl
or
testl
cmp
jmp
fdivs
ljmp
jle
aad
lds
into
or
imulb
sbb
ret
addr16
push
dec
adc
pop
repnz
xor
push
push
clc
lock
or
push
or
cmp
lods
sbb
pop
pusha
repz
xchg
fdivrs
dec
es
pop
loopne
mov
les
push
cmp
or
pop
or
and
jp
pop
push
test
bound
pop
push
cmc
mov
addr16
cli
jb,pt
pop
rclb
push
les
sarl
xchg
mov
push
lea
dec
cmp
je
cmp
or
enter
mov
dec
pop
mov
and
mov
jmp
cmp
scas
jp
call
cmp
push
mov
ss
cld
pop
je
and
and
inc
sub
cltd
jmp
lret
aaa
cmp
outsb
or
mov
in
data16
mov
or
cmp
jne
add
xor
jno
cmp
ss
cld
jne
push
push
push
push
pusha
cmc
mov
in
daa
int
mov
or
jo
leave
push
sub
pop
pop
sbb
pop
add
xchg
inc
mov
mov
in
or
push
sub
cmp
pop
imull
adc
pop
or
mov
orb
push
adc
inc
mov
ficoms
xor
pop
call
sbb
jne
xor
push
jl
mov
inc
test
stc
push
or
lock
fisttpll
push
popa
cmp
and
aaa
js
cltd
cmpsl
inc
pop
pop
mov
mov
mov
and
push
stc
rorl
cmp
in
add
mov
out
fsubs
push
decb
push
sbb
sbb
mov
or
add
inc
sbb
mov
mov
ficoml
les
cwtl
jl
push
sbb
mov
add
fcomi
cmpw
jne
shrb
or
jne
mov
jmp
xor
jg
mov
or
lahf
stos
xorl
ljmp
push
add
pop
jp
pop
cmpsl
std
sub
pop
jmp
shr
mov
jg
std
enter
je
add
dec
jmp
mov
mov
movsl
loopne
inc
adc
in
and
push
mov
sub
lret
mov
jmp
lcall
mov
lea
jg
push
push
mov
hlt
or
pop
sbb
mull
fwait
mov
stc
sti
es
sti
pushl
push
mov
in
inc
ja
inc
xorl
push
jp
or
outsl
decb
jmp
repz
cmp
sbb
push
repnz
sub
jno
decl
std
mov
mull
push
mov
dec
add
dec
add
pxor
add
inc
add
ds
ret
je
incl
adc
push
fnstenv
adc
push
lock
cmp
jmp
rclb
and
pop
sbb
pop
icebp
or
loopne
mov
inc
pushf
add
pop
adc
add
pop
cmp
pop
push
xor
pop
jg
push
je
jecxz
ret
push
push
pop
movsb
sub
mov
inc
inc
mov
jbe
push
adc
ds
mov
in
sbb
adc
int3
imul
clc
outsl
lcall
xor
shr
int
or
push
cmp
jbe
jo
mov
dec
adc
sbb
rol
mov
je
or
daa
lods
dec
add
cmp
jge
push
shrb
aas
js
jle
sbb
fbld
sar
incl
cmp
jge
orl
call
push
xchg
pcmpeqb
in
mov
sti
lret
js
cmpb
dec
clc
jne
call
hlt
sub
add
mov
mov
add
cmpsl
test
cmp
testl
jne
push
insl
mov
xchg
or
xor
add
inc
shll
mov
xchg
and
jge
jb
in
mov
xchg
push
xchg
rorl
lds
jmp
sbb
fiadds
pop
mov
je
mov
xor
mov
test
inc
inc
sbbl
mov
ret
ret
xchg
dec
aam
pop
enter
cli
jno
cltd
fadd
mov
ss
push
sub
push
push
xchg
es
push
or
call
xchg
incl
mov
and
movsbl
addb
jg
fdiv
push
popa
add
mov
mov
js
xchg
mov
or
mov
pop
push
xchg
bound
outsb
inc
cld
sub
test
mov
xor
das
je
jo
sbb
pushl
push
out
xchg
mov
adc
scas
xchg
push
push
shrb
inc
jns
push
and
push
dec
sbb
pop
or
jo
fsubl
movsw
fimull
xchg
and
mov
roll
or
subb
jle
adc
mov
fcomps
push
adc
pop
mov
cmp
jmp
pop
push
test
icebp
adc
mov
inc
je
and
fstl
jae
test
and
adc
movsl
push
inc
adc
testb
add
jmp
sub
popa
xchg
ret
loopne
js
add
xchg
sub
sub
sbb
sub
inc
add
sub
daa
out
loopne
or
in
or
mov
adc
xchg
inc
cmp
inc
add
sbb
je
push
jmp
mov
push
ds
hlt
and
notb
add
rcrl
push
mov
mov
cmc
loop
xor
or
dec
jne
push
add
cmp
xor
addl
in
sbb
daa
andb
jg
jbe
push
loopne
adc
in
shr
mov
and
cmpl
push
adc
enter
inc
adc
stc
pop
fdivp
insl
push
inc
shlb
dec
aam
and
jns
push
fcoms
dec
fdivl
fs
out
inc
and
add
lea
sbb
dec
mov
sti
pusha
xor
push
push
aas
push
cld
mov
cmp
mov
sub
popf
cmc
nop
rcrl
lods
rclb
or
nop
fmulp
les
mov
pop
and
test
aaa
xchg
call
inc
mov
test
inc
cmp
jl
jmp
pop
mov
mov
cmpsb
cmpsb
add
add
jmp
add
inc
cwtl
cmp
add
aas
mov
adcl
outsl
pop
sub
pop
push
xchg
outsl
movsb
push
xor
add
push
push
aas
shl
ficompl
hlt
stos
data16
std
loopne
xchg
adc
mov
data16
pop
ret
push
mov
push
mov
test
sbb
xor
inc
inc
jle
cmp
push
ret
mov
or
cmpb
jb
mov
jg
enter
call
cmp
mov
adc
lahf
push
loopne,pn
dec
in
push
mov
mov
sbb
aas
cmp
cmp
xor
push
xor
mov
aas
add
mov
jmp
push
divb
pop
sbb
test
add
push
loope
loopne
movsb
rolb
adc
sub
lds
xor
loopne
dec
sbb
mov
push
sbb
jl
mov
lock
mov
jp
jo
aas
xchg
ret
cmp
jne
jmp
push
inc
or
lea
pop
test
inc
push
xor
push
ds
test
arpl
jmp
pop
inc
pop
ret
cmp
jb
cmp
ja
movzbl
sub
sbb
dec
sahf
out
inc
aaa
popa
push
ret
imul
jbe
push
call
je
add
push
andl
mov
add
insl
jbe
push
pop
push
inc
adc
out
imul
iret
fsubr
mov
push
or
sar
sti
je
cmpl
in
xor
mov
cmp
je
lock
mov
or
mov
cmp
addr16
je
jb
mov
dec
js
inc
add
add
pop
dec
lea
ficomps
dec
or
dec
xor
jge
dec
jp
push
lock
mov
xorb
icebp
xchg
xchg
or
ss
and
sub
or
jne
cmpsb
outsl
jp
cmp
add
out
add
and
xor
xor
cltd
and
pop
dec
cld
andb
call
into
adc
push
add
mov
xchg
push
repnz
fs
add
hlt
jb
into
out
test
or
inc
push
push
cmp
jle
dec
in
test
pop
sub
jmp
das
fadds
or
push
pop
clc
cmp
jne
inc
sub
push
outsb
hlt
cmpb
push
in
mov
hlt
sub
movb
or
jb
or
ja
js
sub
inc
push
sub
jl
or
add
push
bsf
jbe
inc
cld
rorb
mov
adc
sbb
roll
arpl
and
mov
mov
push
stos
mov
fsubs
dec
mov
inc
add
jae
sbb
rclb
jg
sub
pop
shl
add
jmp
pushf
aas
insb
sti
push
movsb
js
and
cmpsb
and
hlt
scas
mov
dec
cmp
js
fs
jne
xor
add
lock
mov
fdivrs
push
pop
jae
mov
jmp
dec
dec
fdivs
xor
cld
je
repnz
mov
push
push
icebp
pusha
rcll
mov
push
add
or
shlb
or
or
push
jmp
inc
jg
or
jge
int
int
add
and
es
sub
sub
int
idivb
jmp
or
jl
or
adc
je
lea
cmp
loopne
sar
pop
lea
cmp
jbe
mov
arpl
fcoml
adc
je
test
jne
inc
add
sub
sahf
mov
gs
add
mov
and
jae
movb
inc
mov
mov
in
push
sub
push
push
push
and
pop
or
dec
and
or
aas
xchg
js
jno
mov
inc
and
push
jmp
inc
sub
out
jae
int3
loope
rorl
sbb
ret
inc
push
lcall
sbb
clc
push
push
push
mov
jo
or
movsl
or
xchg
hlt
mov
rorl
out
mov
mov
add
lret
setne
ret
xchg
adc
sbb
sub
push
ja
popf
nop
pop
sar
mov
sti
mov
mov
jno
roll
sahf
sbb
push
push
adc
cmpsl
ret
push
adc
push
pushf
dec
inc
xchg
lea
sbb
adc
inc
in
pop
mov
jmp
jbe
push
dec
or
data16
repnz
lret
addr16
into
mov
fldcw
push
jle
push
add
out
cmp
mov
inc
push
or
out
add
loopne
ss
xlat
and
test
mov
or
fnstsw
jns
pop
lea
stos
xlat
dec
or
sub
xor
xor
je
pop
leave
clc
std
push
adc
add
mov
mov
or
fwait
cmp
loopne
dec
mov
movsb
lock
bound
dec
xor
xchg
add
adc
sti
mov
add
fcomip
pop
mov
fadds
lods
sbbb
pop
push
sub
test
push
and
add
push
adc
mov
mov
ffree
movsl
or
jbe
adcl
pop
cmp
test
fucomip
inc
inc
xchg
push
mov
bound
jbe
inc
sti
jo
adc
call
add
jp
push
cmp
test
cmc
cmp
rcrw
add
pop
mov
push
pushl
mov
push
lret
mov
imull
outsb
push
call
push
pop
push
sbb
int3
cmpl
inc
add
cmp
pop
push
lods
stos
or
inc
pop
aam
add
pop
xor
enter
mov
pop
push
inc
add
pop
xor
and
jbe
mov
inc
das
push
gs
xlat
loopne
jnp
inc
sti
inc
inc
fwait
cmp
imul
out
xchg
inc
jmp
cmp
aad
pushf
popf
mov
fcoms
inc
mov
movsl
xchg
stos
pop
scas
jp
pop
adc
aam
clc
das
je
pusha
clc
outsb
or
test
dec
push
inc
movsb
mov
xor
push
fs
addb
shll
adc
xor
xor
xlat
fsts
or
or
in
or
fs
adc
mov
scas
or
push
pop
je
mov
add
sub
inc
mov
jl
add
or
sbb
add
push
sbb
inc
push
in
mov
lods
pusha
cmp
push
or
add
sahf
jmp
mov
push
aaa
aas
cwtl
pusha
repz
and
add
add
pop
shrb
push
cmp
ret
lods
xor
in
andl
loopne
push
push
push
dec
js
or
ret
or
sti
pusha
jb
jle
stos
push
and
ljmp
inc
scas
and
push
orl
pop
imul
mov
mov
test
hlt
das
push
push
mov
gs
pop
fsubrs
pop
or
push
ljmp
push
mov
jo
push
dec
sub
loop
enter
and
jbe
outsl
insb
mov
mov
mov
pop
xchg
int3
xchg
xor
and
xchg
or
xorl
fimuls
fmuls
sarb
loope
fucom
subb
xchg
dec
ret
pop
or
xchg
and
in
xchg
pop
xchg
fs
popf
push
xor
push
push
loope
pop
loope
xor
testb
movb
in
cmp
mov
cmc
popf
lret
int3
ror
add
push
sub
test
or
and
testl
mov
mov
testl
addb
pop
sub
dec
add
jp
cmp
sbb
or
std
jne
mov
mov
and
sbb
insl
jnp
das
ljmp
mov
loopne
shlb
push
push
call
lea
cmc
push
add
int
sub
inc
add
sbb
cs
or
xchg
cmp
inc
xchg
lea
mov
je
ret
push
cmp
add
add
or
flds
xchg
adc
je
add
push
cmp
mov
sbb
mov
mov
jne
mov
clc
andl
out
test
dec
cmpsl
or
adc
push
adc
insl
leave
lret
and
repnz
push
sbb
fisubs
pop
in
push
cs
dec
mov
xchg
jne
fmuls
xchg
lods
es
jbe
fwait
mov
loopne
fdivrs
imul
jmp
xlat
push
shlb
aas
je
cmp
push
pop
jne
aam
fiaddl
cmpsb
and
jmp
sub
inc
pop
jne
pop
call
repnz
inc
xchg
notb
std
or
xor
xchg
outsl
xlat
jg
jne
jmp
sbb
in
sbb
mov
icebp
lcall
adc
test
fsubrp
addr16
mov
cmp
pop
lea
fldl
add
je
pop
sub
subl
mov
add
je
imul
dec
xchg
jge
inc
repz
jmp
pusha
in
arpl
mov
jae
scas
jg
mov
and
xor
leave
mov
pop
inc
cmpsb
scas
push
das
add
out
inc
mov
testb
jmp
adc
cmpl
orb
das
sbb
inc
inc
sti
addb
add
mov
push
mov
mov
pop
pop
fs
shl
push
mov
dec
inc
in
or
rcrb
ret
push
bound
pop
repz
push
mov
addl
push
rclb
jmp
pop
pop
loopne
mov
add
loope
xchg
ret
fstpt
add
inc
arpl
mov
xchg
sbb
or
push
jae
lret
loopne
sahf
xchg
pop
cs
push
push
pop
pop
pop
xchg
lret
in
pop
pusha
pusha
mov
cmpsl
sub
adc
inc
inc
pop
sub
gs
test
sub
xlat
mov
loopne
ret
adc
inc
jo
jo
cld
je
push
push
movb
push
out
pop
sar
inc
add
dec
inc
pushl
cmp
jae
cmp
mov
or
out
or
sub
fstpt
loopne
mov
cmp
je
mov
jmp
sub
push
mov
icebp
mov
push
lea
push
les
cmp
mov
push
inc
push
or
xchg
adc
mov
call
mov
mov
and
add
and
or
or
or
jle
jne
pushl
mov
pop
inc
push
dec
or
adcb
roll
or
scas
jmp
test
ficomps
xor
pop
ret
pushl
and
mov
push
mov
xor
xchg
cmpsl
jo
adc
out
mov
jmp
push
add
inc
mov
mov
jno
cmp
loopne
es
jbe
lcall
daa
push
mov
jg
pop
sbb
sbb
jbe
data16
dec
lock
inc
push
adc
pop
iret
mov
inc
inc
pop
jno
lods
add
xor
divb
push
movsl
mov
call
loopne
mov
shll
sub
bound
cs
xor
adc
test
mov
sahf
xorb
or
push
pop
stos
jne
sub
icebp
cmp
repz
or
xchg
jbe
enter
or
bound
add
adc
out
roll
mov
xorl
pop
pop
movsb
or
push
add
and
mov
stos
ret
pushf
sub
sahf
cmpsb
add
js
pusha
loopne
or
loop
loopne
fildll
mov
andl
adc
jle
cmp
stos
add
sub
xchg
dec
loopne
adc
sahf
xor
push
leave
fmull
dec
xor
and
outsl
adcb
iret
loop
pop
jb
xor
push
pop
pop
cmp
jne
mov
or
pusha
popa
adc
pop
mov
addl
push
sahf
dec
mov
out
cmpsl
mov
push
and
arpl
inc
stos
xlat
jge
adc
sbb
adc
or
xor
ljmp
js
outsb
jmp
jg
ret
xor
push
pop
sub
add
aad
dec
ja
inc
adc
push
or
add
and
xor
dec
xor
push
adc
enter
mov
rolb
add
cmp
pop
adc
and
mov
jb
cmpsb
fstps
test
scas
out
imul
movl
pop
add
cld
add
jnp
mov
mov
inc
xchg
cld
sahf
stos
sbb
mov
out
imul
sub
cmp
loope
repz
mov
pop
fcompl
std
xor
cmpsl
push
mov
sub
xchg
lret
insb
orb
loope
ret
jae
ret
dec
push
and
sub
rolb
cli
movl
inc
shll
pop
dec
xor
inc
test
inc
lea
int
adc
lea
pop
cmp
fs
repz
jo
iret
sbb
pop
inc
jae
jae
dec
add
add
pop
lea
push
cltd
arpl
cmp
xchg
jg
inc
pop
push
add
jb
push
mov
loopne
xor
movsb
cwtl
test
ds
pop
out
sbb
mov
sbb
jae
dec
lea
mov
mov
mov
push
insl
jo
adc
lcall
fwait
insb
fwait
pop
rclb
fs
loope
and
cmp
push
pusha
or
aaa
sbb
xor
call
mov
add
pusha
pop
and
mov
clc
lods
or
mov
dec
xor
decb
stos
mov
mov
je
sub
cli
cli
pop
in
pop
pop
inc
adc
fmull
inc
lods
pop
mov
xlat
jp
push
cmpsb
lock
and
movb
fisttpl
push
jg
cmp
cmp
mov
xchg
cmp
xchg
iret
jmp
adc
orl
lahf
mov
push
in
jns
mov
jnp
mov
jnp
push
js
mov
dec
sbb
push
leave
mov
ficoms
lock
aas
jns
out
iret
jl
in
add
inc
call
mov
jg
pop
lahf
dec
push
fidivrs
aas
sbb
xor
xchg
dec
lahf
adc
ret
jmp
xor
xchg
push
repz
outsb
into
add
cmpb
jb
in
popf
adc
pop
mov
sbb
pop
cmpl
push
call
or
or
insb
popa
sub
sub
aas
dec
lods
outsb
push
or
xacquire
sbb
or
test
std
lds
mov
cld
inc
mov
pop
pop
das
and
sti
pop
cmp
sarb
andl
xorl
pusha
add
mov
inc
push
sti
add
sbb
into
jp
pop
sbb
mov
adc
mov
aad
loop
test
push
sub
jnp
sqrtps
rorl
pop
xor
pop
and
in
xchg
test
fidivrs
adc
popa
push
and
cmc
add
xlat
jbe
dec
ret
add
dec
dec
fldl
pushl
pop
fcmovb
push
cmp
fcomps
sar
inc
adc
andb
je
or
xchg
jne
repz
sbbb
push
sti
loopne
sbb
call
movsl
push
shlb
jbe
out
push
scas
or
das
push
and
and
rolb
dec
push
lock
jl
inc
or
out
sbb
cmp
cmp
jle
lock
inc
repz
out
push
sbb
and
das
movsl
mov
cmp
rcr
je
js
xchg
ret
pop
adc
inc
and
ja
mov
rorb
pop
mov
ret
cld
xor
ret
inc
or
mov
cltd
mov
push
pop
jns
and
nopl
inc
add
pop
mov
into
push
inc
jo
gs
mov
je
mov
icebp
into
scas
mov
xchg
adc
mov
push
or
shl
xchg
mov
inc
push
inc
repnz
sbb
xor
and
loop
pusha
jmp
in
adc
leave
inc
jae
adc
daa
pop
repnz
and
je
inc
je
cmp
mov
jno
or
std
mov
push
or
mov
xor
xorb
mov
lea
mov
or
push
fcmove
shrl
lcall
xor
mov
mov
pop
addr16
add
out
out
mov
pop
lea
imul
and
punpckhbw
insb
mov
insb
lods
and
and
cmp
cmp
jo
lea
jp
sbb
rolb
pushf
mov
ds
mov
lods
mov
adc
cmp
divl
and
lret
mov
lock
sub
sbb
xchg
sub
and
adc
dec
clc
xor
jge
pop
push
mov
shrb
dec
loopne
dec
or
das
push
call
sub
lock
xchg
dec
cmp
sahf
xor
mov
jge
loopne
xchg
push
push
cld
das
pop
cs
out
add
ret
inc
in
mov
fiaddl
pop
jb
movl
sbb
add
fidivl
fildl
aam
jnp
lock
loopne
jle
sbb
push
and
in
or
pshufw
push
ljmp
add
fldt
pop
js
inc
push
je
in
sub
int
push
movb
lahf
bound
dec
mov
cmp
pop
pusha
stos
movsb
add
out
or
std
dec
bound
mov
xchg
push
sbb
jnp
add
sub
fistpl
fistpl
jae
push
stc
inc
je
push
stos
in
add
and
leave
jae
gs
mov
xchg
dec
mov
xchg
xchg
or
sbb
mov
mov
filds
mov
imul
lock
xor
bswap
sbb
std
gs
lock
or
lods
lods
add
xchg
mov
mov
fs
mov
cmp
cmp
popa
or
push
sbb
aad
int3
addr16
comiss
popf
mov
xor
xor
sbb
dec
xor
mov
mov
fsubrl
loopne
dec
loopne
and
out
jge
out
out
dec
xlat
int
adc
mov
pop
fwait
rclb
rcrl
subb
adc
push
stos
push
mov
push
dec
movsl
test
xchg
inc
or
adc
jb
and
shlb
pop
push
repnz
xchg
or
xchg
imul
mov
pushf
pushf
push
mov
mov
int3
sbb
and
and
dec
xor
sub
sbb
mulb
ret
sbb
iret
and
sbb
mov
sbb
in
sbb
lcall
sbb
sbb
dec
push
jo
fstpt
out
dec
push
dec
jmp
ja
sub
loope
add
lods
into
das
pop
sub
out
and
push
or
ss
mov
mov
sub
sbb
int3
iret
mov
add
dec
sub
or
inc
jp
test
or
adc
imull
xor
mov
push
xor
sbb
cmp
inc
testl
adc
jns
es
ds
ret
es
add
mov
aam
cltd
xor
test
adc
mov
and
and
data16
nop
inc
movsl
jge
movsb
and
cmp
aaa
adc
dec
in
out
daa
push
orl
pop
push
mov
test
xchg
pop
hlt
mov
pushf
pusha
mov
ds
push
arpl
ja
mov
movsb
cmp
xchg
xchg
jl
jg
test
and
xchg
push
out
pop
add
je
sti
push
ret
testb
mov
lcall
xor
scas
jmp
fldenv
cltd
jge
xor
inc
mov
fcmovne
push
jmp
in
pop
push
jmp
popa
mov
and
xchg
xor
mov
mov
adc
ficompl
or
inc
mov
inc
or
xor
push
mov
push
jnp
jmp
and
mov
mov
push
scas
stc
mov
dec
sbb
jl
mov
cmp
cmpsl
mov
cmp
cmovae
lret
or
mov
fimuls
adc
test
adc
inc
adc
rol
ret
movsw
jno
shll
rcrl
add
shl
sbb
repnz
into
adc
cmc
cmpl
sbb
loopne
cmpsl
add
add
cmc
xchg
push
cmpb
mov
push
push
xor
iret
sarb
sbb
lcall
es
ret
out
jne
pop
xchg
test
mov
nop
add
pop
jge
popa
sbb
mov
out
mov
xchg
add
clc
popf
adcb
push
rclb
out
rorl
push
sahf
les
inc
inc
fbld
add
pop
nopl
mov
pop
stc
popa
pop
iret
sbb
ljmp
adc
clc
add
xor
adc
je
sbb
pop
inc
and
push
adc
pop
lock
mov
ds
adcb
pushl
add
jmp
push
sub
jecxz
xchg
add
daa
add
ret
or
add
nop
fldcw
mov
pop
inc
mul
lret
mov
outsl
bound
nop
xor
ret
mov
jo
test
pop
hlt
je
sbb
push
pop
loop
sbb
aad
sbb
pusha
mov
lods
sub
es
inc
jb
mov
addb
adc
cltd
shrl
mov
pushf
sbb
or
adc
sub
mov
mov
pop
fildl
push
mov
pushf
jl
adc
push
lock
pop
and
and
mov
popl
or
rcrl
inc
xchg
popf
pop
mov
cmpsl
stos
sub
pushf
and
mul
add
push
pop
sarb
incb
mov
push
orb
in
push
cltd
test
icebp
pop
or
test
sub
cmp
in
push
icebp
scas
sub
pop
sub
and
cmp
sub
push
push
pop
imul
cwtl
jns
jno
pop
push
nop
rcl
jb
inc
lret
ret
test
in
xor
mov
cmp
push
stos
add
adc
ljmpw
scas
shll
stos
out
fldt
cwtl
ss
pusha
insb
test
rclb
push
movsb
mov
mov
mov
xor
or
mov
add
mov
inc
sub
loope
mov
sbb
push
xchg
data16
inc
add
mov
xchg
add
loopne
cmp
mov
call
inc
mov
fsubrs
add
adc
sbb
mov
dec
cmp
jbe
pop
dec
push
push
mov
scas
test
mov
mov
push
cmpsl
add
test
mov
push
rolb
icebp
test
cmp
int3
pop
cmpsb
inc
sbb
and
das
sub
mov
jg
stos
dec
mov
movsb
popw
enter
enter
enter
push
rolb
push
pop
dec
mov
cmp
insl
sbb
xor
xchg
mov
testb
inc
xchg
inc
mov
std
addl
mov
xor
out
sbb
sub
outsl
loopne
cmp
cmpsl
mov
dec
jae
testb
xor
stc
nop
pushf
or
pop
jbe
mov
fidivs
ficoml
pop
inc
and
sbb
shr
fldt
movb
sbb
inc
or
cmp
cmc
sub
sahf
add
and
pop
and
sub
in
and
xor
je
retw
jns
push
push
jns
mov
shll
dec
and
jnp
add
adc
xlat
inc
mov
arpl
and
jl
mov
sub
add
lret
mov
pop
jg
adc
pop
pushl
negl
cmp
and
cmp
movsb
icebp
andl
ja
movsb
xor
ret
push
jo
addr16
jo
push
mov
ss
hlt
pop
arpl
sbb
out
add
push
pop
les
push
pop
add
mov
jne
lret
aam
dec
mov
jne
push
sub
xor
sub
mov
push
push
cmp
out
loope
xor
and
shll
dec
enter
add
fisubs
add
ret
adc
mov
pop
loopne
in
sbbb
jg
lods
pavgb
sbb
sbb
pop
js
push
sbb
iret
push
out
mov
inc
cwtl
pop
popf
push
pop
sbb
jo
les
dec
mov
push
dec
push
push
lock
inc
jns
movb
xor
cs
push
out
testb
jno
push
push
rclb
or
lock
ret
mov
inc
out
pushf
or
or
jge
andl
jb
add
add
jne
ljmp
or
sub
push
xor
mov
loope
xchg
sub
inc
or
or
xor
mov
push
inc
faddl
cwtl
add
cmpsl
shlb
push
pop
jbe
into
call
jnp
cmpb
ja
jae
push
jne
or
xchg
cmp
fcoms
add
pop
test
inc
and
add
pop
or
ja
sub
repz
sub
adc
jno
push
add
fsub
mov
rcrl
push
out
inc
out
push
je
push
movsb
adc
aad
add
add
mov
mov
pop
test
sbb
mov
jmp
stos
and
leave
jns
sbb
adc
push
mov
lret
das
sub
push
jne
clc
jg
dec
pop
pusha
mov
xor
les
or
lcall
int3
add
mov
or
popf
stos
fadds
dec
sub
lcall
in
test
sbb
test
aas
mov
dec
dec
je
sub
inc
stos
pop
add
mov
adc
push
mov
pop
out
cmc
jbe
jmp
adc
add
xchg
hlt
adc
scas
pop
enter
dec
mov
jne
push
mov
mov
pop
add
cmp
out
arpl
int3
les
jnp
add
je
cmpsl
or
pushf
shrl
hlt
jbe
inc
data16
cmp
jle
mov
or
pop
clc
decb
pop
pop
fistps
or
or
je
mov
sbb
xchg
push
jbe
mov
mov
xchg
adc
loopne
fisttps
dec
xchg
mov
add
or
mov
mov
int3
mov
xchg
push
add
add
iret
int
mov
jo
aam
cmp
std
push
add
das
mov
filds
mov
or
ret
ret
xchg
clc
push
sub
xlat
inc
mov
jge
cmp
shlb
or
adc
jo
xchg
sub
or
cmovnp
or
mov
mov
popf
adcb
mov
cltd
cwtl
je
add
jle
fcoms
mov
fndisi(8087
lcall
lock
jns
enter
mov
dec
jbe
push
add
lret
pop
cmp
push
jae
lock
cmp
cmp
inc
pusha
das
aas
lock
adc
pop
inc
add
sahf
les
mul
mov
js
push
or
xchg
push
dec
jnp
shlb
or
inc
loopne
push
shll
mov
xchg
icebp
sahf
fadds
test
out
jge
lods
pop
data16
mov
sub
jg
fsubr
mov
in
pusha
sub
push
mov
icebp
jno
push
inc
mov
ret
imul
dec
in
nop
pop
add
mov
mov
or
inc
ja
sbb
pop
lock
mov
fidivl
fsubr
push
lods
sbb
scas
in
movsb
pop
inc
mov
inc
in
lods
mov
cmp
lods
daa
sub
nop
xchg
jl
sbb
push
xchg
dec
cmp
xchg
push
push
arpl
xchg
and
sbb
ja
push
test
iret
int
decb
push
adc
pop
call
push
pop
nop
out
inc
xchg
jno
mov
lahf
add
mov
enter
or
or
cmp
or
xchg
test
add
je
popa
cmp
js
nop
or
jmp
inc
test
adc
cmovns
cmpxchg
mov
jge
ljmp
aaa
adc
pop
mov
shlb
loope
and
movsl
dec
mov
mov
mov
int3
push
rcrb
sbb
mov
adc
cld
dec
lret
fsubrl
inc
push
arpl
in
mov
jbe
mov
pushl
call
inc
cmp
mov
call
pop
scas
push
adc
push
ret
jno
clc
mov
sub
mov
dec
inc
mov
cs
mov
or
sti
mov
popf
cmp
enter
fnclex
add
stos
xor
aad
sub
rol
ret
enter
or
cmp
push
movsb
or
xchg
lods
mov
filds
sbb
divb
jb
outsb
loopne
add
fsubrs
or
and
cmp
and
xchg
jbe
pop
sub
stos
or
mov
jb
mov
pop
and
adc
push
push
cltd
jle
inc
push
cmp
jg
mov
and
mov
adc
jmp
movsb
add
pusha
mov
outsl
xchg
out
cltd
sbb
add
subl
nop
movsb
push
push
cmp
js
or
fs
adc
imul
mov
outsb
sub
subl
jl
mov
push
jne
iret
mov
cmp
pop
mov
push
mov
jmp
mov
push
ja
push
je
sub
pop
push
or
mov
lods
movsl
movsb
jg
call
call
push
pop
mov
in
and
jl
and
push
or
push
sub
mov
jmp
outsl
mulb
cmp
inc
hlt
lea
cmp
jae
dec
shrb
hlt
js
dec
lret
push
sub
sub
jne
push
fcmovu
je
je
add
loop
jle
xchg
or
pushf
in
sub
stos
imul
dec
aaa
loop
add
jb
pop
in
cmp
jg
lcall
push
js
push
xlat
adc
cmp
pop
sarl
lea
insb
sti
sti
mov
popa
nop
add
mov
sub
xor
pop
cmpsb
push
add
lea
enter
pusha
insb
fsubl
or
nop
adc
jbe
cmp
xchg
in
xchg
add
nop
scas
mov
inc
lock
mov
gs
and
mov
outsb
test
mov
dec
jns
jae
inc
inc
jbe
xorb
push
mov
add
test
pop
cmp
test
cmp
mov
jp
loope
xor
or
test
in
rcr
push
and
into
push
jnp
mov
inc
testl
int
inc
add
js
pop
push
pop
out
push
mov
add
mov
push
push
xor
fldl
xorb
push
push
nop
dec
or
fnstcw
fs
xchg
adc
stos
dec
dec
and
push
fistpll
fildl
adc
ja
mov
sub
sar
in
or
lahf
mov
dec
orl
xor
inc
add
mov
jg
mov
lea
push
cmp
push
dec
or
test
push
push
cmp
jecxz
cmpsl
mov
and
inc
js
inc
inc
add
jns
test
ja
jl
call
push
xor
mov
push
cwtl
decb
mov
xlat
ret
fldenv
pop
xor
push
add
mov
ljmp
sub
les
popf
fnsave
popf
aaa
mov
mov
mov
loopne
shld
pop
mov
add
scas
in
into
orb
jle
cmpsl
lahf
loopne
ljmp
adc
clc
mov
notl
or
js
pop
push
xchg
push
mov
cmp
je
popa
sti
rolb
popf
stos
cmpsb
add
mov
mov
mov
mov
xchg
pop
filds
out
xchg
cmp
mov
push
out
pop
push
movsb
mov
inc
or
arpl
jmp
subl
and
add
rcrb
adc
sub
ss
pop
clc
jmp
add
push
mov
sbb
lock
mov
add
mov
addr16
aas
insl
mov
add
sub
push
sbb
adc
mov
dec
xor
add
cmc
or
mov
jl
push
js
test
mov
pop
add
cli
push
icebp
mov
enter
cmp
sbb
mov
mov
add
movl
mov
mov
pop
call
dec
cmc
dec
pop
jmp
iret
dec
adc
adc
mov
rcl
pop
push
adc
or
add
je
stos
push
and
test
sbb
jb
jno
add
notl
add
or
sub
sub
pop
fcomp
out
sub
and
adc
mov
mov
cmp
jle
cmpb
xor
inc
cmp
cmp
or
sub
insb
inc
enter
lea
or
adc
in
loopne
aaa
fistps
pop
adc
dec
pop
inc
or
xor
addl
cmp
pusha
flds
fxch
dec
mov
popf
popl
imul
cmpsl
sbb
addr16
add
sub
mov
stc
mov
jb
mov
and
jmp
push
lods
adc
imul
imul
xchg
mov
rolb
add
mov
ja
fisubrl
push
adc
or
js
cmp
jp
pop
add
lea
clc
test
stos
push
ret
add
subb
lcall
add
push
sbb
xchg
test
pusha
pusha
or
or
jo
lcall
push
dec
lock
sbb
inc
jl
xchg
jg
add
add
cmp
dec
lock
pop
xor
adc
or
pusha
adc
movsb
lcall
cmp
jne
pop
inc
flds
sub
adc
add
loopne
cli
add
loopne
pop
add
adc
in
rcrl
cmp
xor
dec
inc
pop
push
scas
xor
mov
add
pop
mov
pop
mov
xchg
ret
xchg
push
adc
push
and
data16
je
test
adc
cmc
iret
xorl
mov
ja
pushl
jo
xchg
std
daa
loopne
sub
neg
sbb
inc
je
cmp
enter
dec
cld
into
inc
mov
mov
mov
push
pushl
aas
in
mov
sub
out
mov
adc
push
roll
xor
or
lock
shl
push
mov
lahf
test
pop
mov
pop
adc
xor
xlat
jbe
xchg
and
inc
add
push
pop
mov
imul
dec
pop
add
mov
or
ja
loopne
push
fildll
daa
mov
shrb
fdivl
clc
mov
jmp
push
and
inc
das
sbb
push
mov
xor
sti
mov
xor
inc
add
add
scas
sub
shll
dec
xchg
add
mov
xchg
outsl
nop
pop
rcl
sub
xchg
dec
push
add
or
fnsave
icebp
hlt
sub
or
add
add
sub
negl
sti
lea
jbe
mov
insb
pop
jp
push
cmp
push
xor
push
mov
les
push
lea
mov
add
or
adc
loope
mov
inc
imul
cmp
dec
jno
scas
jae
add
sub
dec
adc
loopne
or
cmp
jae
mov
fidivs
shll
mov
lret
cmc
adcb
add
dec
cmpb
out
adc
rorb
hlt
psubsw
jbe
mov
mov
mov
push
inc
lds
stc
mov
in
cmpsb
ljmp
movl
sbb
pop
add
or
lea
inc
xchg
xor
decl
mov
sub
sbbb
jp
movl
or
add
cld
or
int
inc
dec
movl
cmp
sub
adc
es
hlt
fisubrs
sub
add
popa
mov
flds
insb
cmp
sbb
jl
mov
or
rcrl
sbb
add
lret
and
sub
push
gs
fmull
lahf
mov
xchg
ja
mov
xchg
cmpsb
sub
lds
out
imul
int
movsb
scas
add
cmc
notb
clc
sbb
lea
into
xchg
ret
xchg
dec
mov
jge
and
xorl
enter
dec
fcomip
scas
push
rorb
cmpl
inc
lea
mov
lods
cli
xchg
sbb
push
pop
pop
push
out
out
imul
mov
push
jb
sub
call
pop
dec
addr16
jo
push
push
out
test
xor
mov
mov
inc
cmpb
pop
push
popf
mov
pop
push
icebp
int3
fsts
cmp
jl
inc
and
das
jmp
cmp
insb
add
sub
je
ja
shrb
pushf
or
push
push
shl
or
movsb
minps
fisttpll
lea
hlt
mov
movsb
add
sub
int
pop
cmpb
sub
repz
je
outsb
sbb
mov
mov
addl
clc
sbb
mov
xor
add
roll
mov
fisubrs
xor
adc
lea
out
pop
xchg
test
cmp
push
mov
fdecstp
add
push
push
and
xchg
dec
add
or
fdivl
lea
pushf
cmp
std
add
add
and
lods
xchg
sbb
cmp
inc
adc
in
pop
pop
and
mov
jge
cmpl
and
icebp
aas
scas
les
sub
cmp
in
addr16
jg
ja
push
adcl
xchg
popf
sub
sub
sbb
mov
mov
insl
ret
adcl
xor
out
pop
mov
inc
or
cmovno
xchg
add
jmp
mov
jmp
xor
dec
cmp
sbbb
lock
mov
cwtl
loopne
add
clc
popa
or
notl
mov
xchg
jle
je
fisttpll
bound
xchg
int3
pop
bound
xor
mov
flds
sub
sarl
jo
and
not
xor
and
or
cld
xor
stos
lahf
or
sbbb
orl
jmp
xor
cmp
into
or
pop
add
or
mov
in
cmp
pop
jmp
pushf
sbb
pop
cs
pushf
or
cmp
push
ljmp
mov
adc
gs
out
ja
das
cmc
mov
lds
aaa
or
gs
arpl
bswap
pop
xorl
add
into
in
jmp
pop
lock
xor
jmp
mov
jb
add
addl
sbb
ret
orl
inc
shlb
or
jge
pop
xchg
test
add
and
decb
sbb
je
cmp
jbe
push
int3
cmp
jmp
push
mov
mov
or
sbb
inc
cmp
out
push
adc
test
and
fisubrs
and
jns
jp
jecxz
xchg
add
inc
mov
push
jnp
push
fdivr
dec
and
repnz
mov
ds
in
shlb
cmp
jb
dec
lock
add
mov
lea
push
cmp
test
in
fistpl
cmpsb
sub
pusha
cmpsl
movl
ret
ffreep
jbe
sbb
adc
push
stc
add
and
adcl
int3
mov
jle
mov
cmpsl
cmp
inc
enter
rorb
cmp
add
mov
cmp
add
sbb
or
je
imul
sub
shr
flds
push
and
roll
daa
cld
jo
lea
enter
cmp
push
pop
test
add
add
pop
and
daa
add
mov
fidivl
push
mov
pop
lcall
js
ja
add
aas
inc
xchg
test
mov
mov
test
pop
jl
test
mov
gs
sbb
outsl
xchg
shl
ret
orb
push
jo
sbb
pop
xlat
repnz
lea
movsb
data16
xor
mov
lea
mov
inc
cmp
ss
leave
jb
add
mov
decb
call
test
je
push
push
ja
loop
outsb
cmpl
push
or
inc
mov
dec
stos
adc
push
push
adc
mov
rorl
jae
leavew
nop
pop
mov
adc
and
dec
pop
rorl
cld
iret
jmp
push
or
subb
sub
orl
mov
push
xor
sub
rcl
pmulhw
lret
sub
mov
ds
mov
mov
lret
mov
or
pop
push
xchg
jp
or
adcb
cmpb
sbb
dec
mov
daa
divb
push
xor
insb
mov
mov
inc
push
pop
dec
fstpl
push
mov
cmpsb
inc
cmp
cmc
cmc
xor
or
cmp
pop
push
pop
mov
and
xor
sub
inc
push
into
into
mov
popa
pop
xchg
lea
sarl
movsb
adc
mov
dec
fwait
je
push
add
andl
lea
ss
pop
mov
inc
adc
push
test
cmp
je
mov
or
pop
sub
outsb
xor
xchg
mov
adc
dec
push
sub
jno
xchg
dec
test
lea
push
inc
fidivrl
cs
mov
inc
mov
pop
cmp
mov
in
imul
fisttps
adc
or
dec
mov
add
mov
add
jl
inc
add
pusha
pop
cmp
xor
jmp
xchg
xchg
dec
push
pmuludq
adc
add
push
ja
loope
xor
incl
pop
jnp
xchg
or
sti
xchg
pop
fildll
and
add
pop
add
push
rclb
jecxz
aaa
and
mov
lahf
outsl
jmp
adc
add
inc
test
or
add
push
adc
xor
inc
and
cwtl
adc
andl
push
lock
test
lods
mov
adc
adc
pop
je
jbe
mov
cmp
je
jo
rorl
xor
xchg
jg
adc
ljmp
adc
push
add
popf
adc
adc
lock
movsl
xchg
mov
lret
push
xor
add
call
push
and
sbb
dec
mov
add
fadds
insb
add
fdivs
and
negb
cmp
aam
leave
adc
jbe
inc
cmp
js
ljmp
or
adc
je
leave
pop
cmp
and
and
jbe
cs
rclb
out
lods
pop
and
push
sbb
sbb
mov
mov
xor
sub
je
dec
rolb
repnz
xor
and
inc
jnp
loop
movsl
jns
lds
push
push
cmpsl
cmp
mov
fdivs
xchg
mov
outsb
incl
inc
lret
xor
jmp
cmpl
sub
mov
add
repz
clc
sbb
ljmp
add
mov
push
xlat
mov
xor
jmp
sub
sbb
sbb
mov
mov
inc
sbb
jae
pop
jo
jle
add
fs
adc
jns
pop
xchg
je
mov
xorb
out
push
je
push
aam
add
das
aaa
ds
cli
pop
push
lret
insb
in
xchg
xor
xchg
mov
add
es
cmp
push
push
sbb
jecxz
pusha
loope
or
ret
arpl
xchg
pop
stos
push
out
mov
or
lods
add
and
mov
mov
and
insb
sub
jno
pop
inc
ret
dec
and
cmp
filds
sbb
es
dec
inc
or
xchg
pop
pop
push
sub
cli
fs
aaa
test
pushf
mov
mov
add
pop
sbb
or
pop
dec
xchg
pop
inc
rcr
sub
pushf
xchg
fcom
push
pop
xchg
push
nop
sub
loopne
test
xor
xchg
jl
xor
addr16
mov
sbb
loope
inc
xor
cmp
adc
gs
scas
mov
or
sub
dec
enter
mov
pushf
pushf
cmovnp
mov
je
or
push
shrl
mov
sbbb
or
and
or
rcrl
jg
push
and
hlt
xchg
out
out
and
or
add
roll
and
inc
or
cmp
mov
and
sti
pop
dec
mov
adcb
std
push
push
or
sub
into
inc
lds
jno
pop
mov
jae
lea
sub
push
dec
leave
cmp
push
andl
sub
cmp
and
sbb
xor
test
es
rcll
lahf
addl
lock
into
push
je
and
jne
pusha
js
fidivs
mov
inc
jnp
cmp
inc
ret
jge
xor
cmp
data16
dec
icebp
push
rcrb
cmp
or
fcmovu
in
fdivs
push
jns
dec
dec
clc
jne
mov
out
mov
push
push
test
add
aaa
sub
shrb
lea
push
cld
cmp
stos
test
xor
fisubrs
dec
sub
xchg
sbb
xchg
mov
hlt
sbb
scas
xchg
hlt
jns
or
inc
or
hlt
mov
pop
pop
cmp
add
push
xorl
inc
subb
hlt
jne
push
shll
js
add
adc
loopne
add
clc
sub
jne
mov
dec
jp
mov
stc
repz
fadds
dec
inc
add
scas
push
sbb
divb
xchg
inc
push
cmp
jbe
adc
ds
pop
lea
mov
xor
pop
fistps
popa
adc
loope
ret
lds
pop
ret
outsl
fmull
imul
and
add
std
pop
push
push
sub
push
adc
into
rorb
pavgb
jle
xchg
pushf
test
js
rcrb
push
adc
add
mov
cmp
sbb
and
call
and
pop
test
sub
test
orl
test
jge
add
cmp
jbe
or
jne
not
ljmp
and
dec
mov
jnp
das
add
jl
cmp
int
gs
mov
or
jl
es
jmp
aam
mov
add
add
add
jns
jbe
jp
sbb
insl
js
aad
fimull
push
into
enter
cmpsb
jo
mov
or
cmp
gs
out
or
inc
loop
fistpl
push
shrb
cmc
cld
fnstenv
adc
fmuls
out
loopne
xor
xchg
js
jecxz
mov
shll
inc
sbb
mov
and
int
fstpt
mov
jmp
bound
shrb
enter
ret
xorb
xchg
movsb
inc
xorb
push
dec
imul
insb
dec
mov
or
mov
or
or
add
sbb
in
or
rorb
push
loopne
push
mov
sbb
fdivs
cmp
lods
push
jne
inc
cmp
push
push
pop
xor
dec
xor
cld
fisttpl
test
loop
nop
shl
or
and
or
sub
cltd
jbe
pop
call
arpl
or
cld
push
and
and
aam
mov
jbe
add
mov
lcall
rolb
adc
jp
push
arpl
pop
nop
dec
or
nop
sbb
push
insl
xchg
inc
or
divl
loopne
pop
adc
push
bound
add
call
dec
mov
mov
cmpsb
inc
sub
add
dec
push
push
repnz
nop
adc
lret
adc
xchg
and
sbb
add
mov
or
xchg
xor
jb
push
loope
mov
push
cwtl
add
adc
pop
dec
cli
jecxz
test
pop
sbb
inc
shr
push
ret
fdivs
dec
pop
jmp
mov
test
shll
adc
jo
or
mov
mov
sub
mov
addb
ret
add
dec
addr16
movsl
clc
or
add
mov
jbe
loopne
aad
test
cld
testl
ret
clc
inc
aas
iret
ret
cmp
push
pop
push
push
push
and
dec
outsl
iret
icebp
fcompl
js
inc
jg
xor
cmp
outsb
addr16
cmpl
xor
xor
or
cmpsl
push
mov
inc
popa
sub
and
xor
out
cwtl
int3
cmc
mov
inc
and
push
push
call
lods
pusha
das
daa
je
inc
push
or
or
mov
ss
mov
adc
into
movsb
in
and
lock
xchg
xchg
cmp
jae
xchg
imul
addr16
cmp
jae
orl
mov
push
push
dec
mov
mov
cmp
pushf
or
jae
add
sub
and
jle
mov
insl
jmp
cmpb
push
jb
push
scas
test
bound
aad
mov
push
dec
add
pop
adc
fcomi
test
test
sub
dec
push
sbbb
cmp
sub
cmp
mov
outsb
sub
cs
push
in
push
mov
bts
add
jo
test
cmp
jl
add
sub
sbb
rclb
mov
add
test
or
sbb
push
ret
jne
ja
std
mov
imul
bound
lea
or
fs
jnp
leave
mov
mov
and
xor
xorb
gs
popf
hlt
icebp
inc
cmp
cmp
outsl
push
mov
xchg
lret
bound
add
jle
pop
mov
pusha
data16
push
mov
mov
add
push
cltd
adcb
imul
not
into
adc
jbe
fiadds
mov
cmp
ja
push
adc
xchg
jbe
jbe
mov
jle
mov
add
mov
repz
jne
push
cmpsl
cmp
cmp
push
hlt
jl
or
test
mov
sti
jno
mov
sub
add
pop
adc
cmc
decb
jns
loopne
aaa
lahf
mov
pop
inc
imul
imul
fcoml
pop
daa
icebp
ss
icebp
or
push
mov
and
adc
and
aam
mov
add
lock
flds
push
sub
les
mov
cmpsb
shrl
out
mov
int3
adc
push
mov
packuswb
test
rorb
cmp
into
jo
xor
sahf
roll
ds
leave
lds
push
xlat
adc
inc
and
lock
xor
add
and
testb
aas
pushf
fucom
jle
cmp
pop
lret
test
push
incl
fwait
mov
jmp
push
mov
rep
arpl
test
das
mov
sarb
lret
mov
jae
jno
cmp
or
pop
mov
or
mov
jb
rol
lea
sbb
loopne
xlat
sub
add
adc
mov
enter
fidivrl
pusha
aad
xor
add
push
into
lock
mov
sbb
lock
ficoml
dec
int3
addr16
jl
fiaddl
sub
add
push
dec
shrl
test
lea
rcrb
cmp
ja
cmpb
jne
sahf
jne
pop
lea
mov
jae
dec
loopne
add
das
stc
xchg
shlb
jmp
mov
add
mov
push
mov
fisubs
test
xchg
lock
jge
mov
mov
push
decl
push
xorl
aad
or
lea
push
push
cmp
jae
and
testb
leave
jmp
fs
sub
and
sub
inc
movd
fsubs
cltd
repnz
sub
push
adc
add
add
shlb
lcall
and
imul
incb
mov
scas
cli
cmp
out
movsl
jo
xchg
mov
pop
and
mov
adc
push
rcrb
jae
cmpsb
or
mov
je
test
lods
add
test
and
push
out
adc
sbb
sbb
test
mov
xchg
and
xor
xor
adc
push
inc
push
mov
out
fldl
and
and
push
push
adc
cmp
jle
int
inc
and
push
paddd
add
mov
aad
lret
push
mov
into
loopne
in
add
jge
jecxz
add
addl
jb
shlb
add
lods
add
adc
cmp
hlt
add
andl
and
xlat
roll
mov
cmpsl
daa
jle
xor
sbb
aaa
in
inc
fildl
add
lock
mov
jo
mov
and
push
lea
jle
xlat
dec
or
loopne
in
inc
cmpl
adc
test
popa
sbb
test
jmp
xor
inc
and
and
or
mov
or
xchg
inc
or
jge
jns
mov
cld
and
push
mov
push
sub
push
sub
and
push
add
pushf
mov
sbb
shll
lea
aas
inc
fnstsw
pop
pushl
inc
push
adc
lcall
jb
popf
pop
lcall
push
mov
mov
test
je
in
into
js
cmp
push
cmpb
ret
push
jae
inc
imull
lea
push
sub
inc
push
pop
push
xor
stos
cmp
fildll
mov
push
mov
and
pop
jnp
push
div
pop
data16
loopne
jge
lcall
leave
dec
lock
dec
in
fsubrs
ficoms
fnstenv
inc
jmp
push
ficomps
cmp
sub
mov
cmp
jge
add
jp
cmp
sub
jbe
movb
add
int3
cmp
push
jb
sub
pop
dec
in
xchg
rolb
push
sti
sti
test
jns
xchg
outsb
mov
cmc
jp
negb
or
add
ret
add
cmc
dec
arpl
fs
mov
pop
test
mov
test
mov
sub
mov
jmp
imul
cmp
lods
jb
mov
addb
push
test
add
imul
popf
cmpsl
lock
test
jns
int3
add
cwtl
loopne
adc
push
lret
push
icebp
push
and
and
out
jmp
push
or
mov
or
sbbb
jns
into
push
add
ja
mov
cmp
pop
sbb
mov
cmp
fistpl
mov
jno
ljmp
aad
lret
inc
inc
sbb
cmpb
pop
inc
add
cmovb
or
or
xlat
cmp
sub
push
inc
or
ret
movsb
add
es
xor
inc
mov
pop
mov
loop
or
or
test
aaa
jmp
mov
add
mov
sub
addr16
cmp
cmp
fadds
push
cld
xorl
iret
cmp
jne
shlb
jb
ret
lcall
xchg
test
test
mov
repz
push
jp
and
in
inc
mov
push
pop
cmp
jne
jecxz
pop
push
mov
out
pop
pop
movsb
dec
push
jnp
sub
popa
lods
xor
cmp
add
jmp
sbb
push
outsb
xchg
dec
push
hlt
jge
clc
and
ja
into
xor
int
incl
add
push
cmp
je
mov
push
jp
pop
push
xor
stc
jne
xchg
mov
dec
sub
das
mov
push
mov
enter
lret
pop
jge
popa
loopne
mov
cmp
ja
lea
add
or
mov
adc
roll
rorb
mov
out
mov
mov
dec
jns
mov
out
xor
jne
pop
leave
sub
inc
push
push
std
daa
pop
add
mov
xchg
mov
push
das
inc
push
adc
aas
sub
testb
jns
cmp
sbb
pop
and
push
iret
mov
test
push
loopne
popa
fimuls
sub
inc
xor
sub
push
push
nop
inc
nop
lret
clc
pusha
movl
movsl
in
movl
call
dec
add
lock
sub
push
addr16
and
andl
cmpsb
or
es
push
pusha
dec
mov
faddl
push
lods
jne
push
mov
aad
pop
xlat
jecxz
adc
cwtl
adc
or
shlb
adc
inc
lcall
rcll
push
mov
mov
xchg
jno
push
dec
mov
sbb
lods
add
dec
shll
iret
or
in
xor
movl
or
ret
dec
xchg
imul
in
lcall
dec
xor
push
iret
add
pop
fisttpl
jb
sub
popa
add
xor
jmp
sbb
insb
dec
and
and
clc
dec
daa
xchg
sub
inc
push
lds
pop
and
adc
xor
call
inc
ja
add
cltd
ret
sub
jns
stc
push
add
xor
push
test
test
cltd
or
and
push
xor
xlat
and
mov
add
push
inc
pusha
imul
scas
add
and
sub
mov
or
adc
mov
mov
shll
add
loopne
insl
lods
jmp
les
inc
mov
jmp
push
add
push
and
add
push
inc
aas
ljmp
and
push
xor
pushf
ss
imul
mov
dec
jp
and
pop
daa
inc
mov
and
repz
pop
rcrb
or
and
popa
sbb
sub
hlt
cwtl
xor
dec
mov
mov
pop
pusha
jp
hlt
sahf
out
push
fsubrp
jmp
xchg
test
je
add
sub
mov
je
loope
mov
test
cwtl
lock
mov
add
scas
lods
stos
lock
es
test
pop
gs
adc
mov
repnz
enter
jb
cmp
adc
sbb
xor
adc
rclb
pop
mov
fadd
aas
xchg
and
and
jb
or
inc
fidivs
inc
shl
xlat
push
adc
pop
or
sbb
mov
mov
mov
iret
mov
cmp
fwait
sbb
jmp
jl
lea
and
mov
and
mov
dec
adc
enter
sbb
push
and
and
sbb
cmp
rclb
ret
das
add
xchg
ds
push
movsb
sub
and
outsl
pop
pop
dec
sbb
push
test
pusha
push
decl
bound
ja
add
push
mov
sbb
push
dec
test
add
inc
pop
sbb
cmp
push
ret
insl
dec
in
shrl
pop
idivl
add
loopne
shlb
add
push
dec
je
dec
or
push
add
mov
push
test
push
inc
mul
add
mov
adc
mov
push
jbe
jp
in
add
jmp
cmp
mov
outsl
mov
sub
dec
je
in
std
xchg
adc
in
jge
adc
int3
add
fistpll
jmp
mov
mov
add
adc
mov
adc
leave
jmp
test
jecxz
inc
and
mov
xchg
jg
mov
xor
push
jl
and
repz
stos
inc
test
mov
xchg
sbb
cmp
pop
push
mov
xchg
lock
adc
mov
mov
das
mov
or
mov
push
rclb
jl
loop
daa
pop
inc
js
sbb
mov
insl
add
nop
std
mov
jmp
mov
sar
jmp
xor
cmp
je
cmp
mov
jmp
movsl
imul
in
outsb
popa
jl
fldz
andl
cmp
imulb
sub
sbb
jnp
in
xchg
and
je
push
jmp
data16
rorb
pop
or
jns
scas
lds
cs
out
sahf
jb
mov
push
out
xchg
sahf
rorl
pop
stc
aad
add
pushw
and
mov
sbb
inc
sbb
or
pusha
push
jno
scas
sbb
lahf
mov
add
sub
std
or
movb
add
int3
push
push
or
xchg
xchg
pop
jo
pushf
pop
jge
inc
pop
cmc
aas
adc
push
dec
push
dec
stos
movsl
decl
repnz
push
lea
push
sbbl
clc
xor
xchg
sbb
or
add
push
xchg
ja
dec
mov
adc
lahf
pusha
enter
push
cli
mov
lea
xor
ljmp
rorb
rolb
and
mov
icebp
sbb
je
es
js
mov
sbb
dec
jae
int3
push
aam
push
xor
add
jl
inc
xor
add
loopne
sbb
mov
xchg
inc
push
xor
dec
les
or
and
push
adc
xchg
jp
push
add
insb
jno
test
ljmp
and
pop
loop
pop
js
pusha
push
dec
inc
or
xchg
mov
xor
sbb
xor
jmp
jne,pt
push
add
roll
or
sub
jae
fdivrl
push
nop
and
repz
pushf
mov
aam
movsl
orb
in
addr16
lar
ret
imul
cltd
outsb
imul
call
cmpsb
lds
ja
cmp
xchg
subb
push
lea
test
addr16
push
mov
mov
adc
or
push
lods
fs
adc
pushf
jl
movsl
gs
lods
sbb
test
push
rolb
mov
lea
int
or
jl
sbb
add
mov
fildl
int3
repz
test
or
scas
mov
popa
adc
clc
js
push
xchg
pop
mov
popa
aam
push
aam
das
in
add
lock
int3
push
xchg
out
arpl
aam
std
add
dec
fildl
cmp
jne
cmp
inc
add
inc
divb
add
dec
ret
jae
sub
ret
inc
lcall
js
mov
je
cltd
sti
mov
jecxz
cmp
jne
push
sub
inc
movsb
mov
pop
loopne
add
js
sbb
xor
push
iret
or
sbb
rclb
rolb
mov
adc
mov
mov
enter
test
nop
sbbb
aam
xlat
push
aad
int
or
rclb
sub
mov
mov
mov
rol
shrb
les
inc
push
mov
lock
pop
in
mov
idiv
push
dec
je
dec
push
fiadds
daa
adc
je
jmp
mov
sub
in
and
outsl
dec
jmp
sub
pushw
sub
in
cmp
add
mov
inc
adc
add
xor
cmp
or
loopne
cwtl
dec
mov
stos
shll
rclb
lea
jb
out
in
pushf
or
jnp
pop
call
or
in
xor
stc
adc
mov
sbb
testb
xor
xor
mov
inc
out
pop
jle
and
dec
dec
fnsave
sbb
dec
dec
cmp
in
xor
adcb
pushf
mov
shrl
or
stos
adc
push
rorb
push
fstps
leave
and
push
push
in
sahf
sub
lods
or
adc
inc
push
and
mov
out
mov
repnz
mov
lods
sub
dec
push
daa
mov
punpckhdq
xor
lock
pushl
and
adc
adcb
cld
and
daa
sub
lea
dec
pop
xorb
dec
lret
es
loopne
pop
loopne
lret
in
xor
mov
push
add
js
fists
cmpl
jne
pushl
add
sbb
mov
int
push
imul
adc
cwtl
popf
flds
xorl
adc
scas
push
jo
mov
and
xchg
xor
xlat
add
adc
pop
ret
mov
iret
lcall
loopne
mov
push
faddl
cmp
ret
jno
mov
inc
inc
or
shll
add
popa
in
pop
fdivl
and
pusha
imul
sahf
and
xor
clc
xor
adc
push
jne
movb
add
cmp
jne
xchg
sub
xor
pop
mov
imul
jnp
in
std
les
dec
aas
mov
xor
shl
jg
rcr
and
movsb
addl
test
cmp
or
jg
add
scas
sub
and
and
lock
int3
mov
sub
mov
adcb
lods
dec
cmp
sbb
sbb
daa
test
or
add
push
les
dec
stos
mov
push
sub
push
adc
xchg
faddp
test
cltd
add
ss
rcll
jo
ds
ret
subl
mov
xor
add
shr
in
movsl
mov
rcrb
or
dec
insb
dec
pop
cmp
cs
dec
inc
mov
sbb
push
push
jo
push
push
push
lea
ret
dec
sbb
mov
push
mov
or
pop
rclb
inc
xchg
mov
sub
push
lret
jl
xchg
jns
ljmp
and
xor
xor
rcll
and
inc
jge
mov
cmp
xchg
clc
test
push
nop
aaa
xorb
mov
inc
inc
fldl
cmp
enter
pushf
cmpsl
dec
rclb
lods
xor
push
add
mov
movsl
or
cmp
or
ja
jb
cltd
cli
cmp
lea
cwtl
mov
inc
add
pop
sbb
cwtl
add
jno
fs
cwtl
pop
inc
negl
popa
lock
sbb
dec
ds
cmp
jge
sub
mov
pop
cli
dec
adc
fcomps
roll
cli
add
cltd
xor
or
xor
test
dec
mov
adc
push
and
out
add
xchg
xlat
push
push
pop
inc
popa
adc
add
inc
repnz
addb
aas
aas
xor
je
push
pop
cmp
lcall
jmp
das
enter
mov
jmp
push
push
ja
in
scas
mov
adc
sbb
and
and
mov
jl
push
sub
fidivrl
push
cli
or
push
xchg
push
icebp
pusha
mov
daa
mov
push
mov
adc
imul
mov
sub
push
mov
and
sbb
cmp
push
out
test
push
dec
lgs
call
shlb
mov
and
mov
in
loop
or
jl
mov
cltd
mov
cs
lea
push
or
into
mov
orl
pop
and
call
mov
jge
mov
negl
xor
mov
push
push
mov
ret
test
not
sub
mov
jno
sbb
test
jg
mov
or
xorb
push
mov
mov
mov
fisttpll
outsl
test
mov
icebp
jge
add
adc
lock
adc
or
out
or
pusha
push
pop
incl
insl
lods
mov
sti
sub
ficompl
sub
xor
sbb
mov
add
mov
mov
pop
hlt
daa
cmp
ds
mov
out
sbb
dec
fs
or
xchg
dec
xlat
sbb
mov
cmp
in
jbe
lahf
xor
ficoms
sbb
dec
fsubrl
dec
lods
cmpsb
jl
cmp
sub
cmp
roll
or
or
out
insb
mov
lods
sub
mov
and
jns
faddl
nop
or
enter
pop
repnz
fdivrp
mov
sub
ja
movsl
mov
mov
sbb
notl
inc
fdivrl
xchg
pop
jns
xor
out
add
push
mov
cmpb
sub
fidivl
jmp
push
xchg
movl
push
pop
mov
pop
jne
pop
pop
movb
push
pop
jle
add
outsb
mov
push
or
xchg
imul
jo
ret
mov
dec
clc
or
mov
cld
cmp
xchg
add
je
scas
shlb
gs
mov
mov
enter
add
and
leave
test
jmp
out
xchg
dec
fcoml
call
rorb
test
in
cmp
pusha
stos
sub
call
mov
into
mov
adc
imul
int3
mov
push
push
insb
in
outsb
jecxz
les
sbb
mov
enter
pop
iret
andb
addr16
mov
jne
xor
mov
inc
push
sbb
shll
inc
add
add
jecxz
adc
push
leave
adc
iret
jb
aas
xor
addb
push
cmp
sbb
push
mov
call
mov
push
test
inc
mov
lea
adc
std
jnp
int
or
dec
or
add
add
les
adc
xchg
inc
inc
and
mov
sub
addl
adc
pop
cmpsb
or
cmp
jle
and
add
popa
pop
iret
std
je
and
or
imul
add
jmp
mov
sbb
cmp
inc
sbb
clc
push
insl
jl
inc
and
pop
call
mov
push
and
ja
pop
aam
pop
sbb
and
dec
sbb
pop
sbb
cmp
rolb
repnz
dec
and
inc
cli
aaa
xchg
pop
adc
inc
push
cmp
ds
lds
daa
sbb
in
testb
and
mov
sbb
pop
xchg
dec
mov
xchg
or
call
in
inc
aas
push
je
cmp
add
push
test
mov
xchg
roll
dec
xor
ljmp
adc
decb
or
aaa
faddl
mov
push
adc
pop
jne
js
mov
cwtl
cld
shr
adc
je
dec
mov
imul
pusha
fwait
adc
les
es
data16
fldt
cmp
call
or
lret
shrl
inc
adc
das
push
cld
inc
and
dec
push
add
jle
or
pop
pop
add
jmp
out
add
xchg
sbb
dec
pop
jmp
jo,pt
scas
add
jmp
mov
mov
out
add
addr16
pusha
sbb
cmpsb
std
dec
int
hlt
test
adc
js
dec
sub
add
test
jmp
test
cwtl
jle
sub
lret
jne
inc
dec
xor
andb
movl
fcompl
rol
jge
sub
imul
data16
and
inc
xor
add
add
xchg
adc
push
add
jmp
inc
mov
xor
aam
mov
dec
mov
jge
cwtl
mov
pop
adc
mov
sub
pop
or
jo
ret
out
push
push
enter
sub
clc
mov
add
repnz
push
fadds
add
filds
sub
sub
lret
movsl
insb
fmull
xchg
loope
loop
or
push
mov
xor
xor
shlb
in
ret
adc
sbb
mull
push
int3
sbb
scas
test
add
movsl
es
mov
dec
cmpsb
inc
add
lds
mov
data16
pop
jle
adc
or
icebp
rcll
xlat
add
and
push
pop
mov
aam
bound
fcomps
pop
ret
pusha
xor
mov
push
fsubrs
int
into
jle
in
sub
push
or
jo
pop
mov
pop
es
imull
sub
lods
imul
or
enter
dec
mov
mov
push
les
xchg
sub
push
or
in
jb
adc
xor
inc
cmpsb
adc
inc
rorb
adc
mov
inc
push
dec
or
mov
in
sbb
cmp
enter
test
sub
jne
mov
fbstp
loope
mov
add
mov
pushl
adc
outsl
jmp
mov
xor
dec
cmp
mov
sbb
or
je
jl
jae
mov
pop
add
dec
mov
jmp
dec
mov
and
outsb
jmp
imul
and
mov
cmp
dec
add
mov
lods
inc
inc
pusha
inc
xor
rolb
shlb
sar
fnstenv
js
cmp
jge
mov
mov
fistps
sbbb
cmp
jle
fisttpll
or
pushl
inc
mov
stos
jmp
cld
mov
std
push
jge
repz
sbb
xchg
subl
inc
inc
jnp
mov
adc
fsub
ljmp
mov
ja
push
mov
cmp
in
mov
in
pop
jo
sub
inc
sete
adc
loope
and
je
loope
and
dec
xor
les
negb
std
xchg
icebp
ret
push
push
jno
shrb
les
xor
sbb
and
add
pop
stos
inc
nop
push
je
bnd
push
andb
add
aam
es
dec
aad
push
jo
stos
js
pop
push
xchg
pop
imul
add
loope
mov
dec
xchg
sub
jecxz
push
xor
movsl
push
sub
push
add
or
shlb
ja
inc
testb
mov
popf
or
push
mov
mov
mov
orl
out
sub
daa
push
popa
push
mov
sub
or
mov
roll
stc
inc
shll
xchg
inc
inc
push
cwtl
cli
fcomps
inc
imull
dec
jne
fisttps
sbb
pop
pop
hlt
or
adc
xor
inc
jno
ret
adc
es
pop
mov
dec
shl
repz
mov
loope
repz
in
call
sbbl
movl
add
andl
or
jo
movsl
imul
pop
jle
shlb
je
dec
xchg
mov
ljmp
adc
mov
push
int3
mov
push
lea
pop
or
push
xor
lea
ret
cmp
out
cwtl
and
fcomp
repnz
inc
jno
arpl
jbe
rcrb
das
mov
mov
pop
add
sbb
mov
push
push
and
jp
fnsave
push
cmp
push
add
add
add
scas
xor
add
notl
add
or
mov
and
test
push
dec
call
sbb
scas
or
cmp
movsb
mov
add
mov
jno
int3
sub
mov
pop
lea
mov
xor
xchg
addl
mov
aas
jmp
add
or
push
into
cmc
and
jp,pt
mov
pusha
mov
movsl
or
call
add
pop
add
mov
pop
nop
cmp
ds
sub
data16
movl
inc
mov
xchg
dec
sub
std
push
or
and
sub
mov
data16
xor
sub
mov
scas
sub
cs
cmpb
jg
cmp
xor
aaa
repnz
push
arpl
push
loopne
pop
in
inc
sbb
movsb
jb
inc
clc
sbbl
dec
jnp
fistpll
jmp
jbe
daa
ljmp
ljmp
jg
add
jmp
mov
sbb
lods
and
into
xor
add
cmp
adc
dec
add
cmc
mov
test
popl
into
aad
ds
inc
add
clc
outsl
shrl
add
sbb
push
call
cmp
inc
mov
in
je
mov
dec
bound
cmp
adc
sbb
xorb
mov
adc
lods
es
xor
inc
sub
or
dec
repz
push
adc
push
je
aas
sbb
adc
call
call
repz
mov
or
call
xor
cltd
dec
lcall
or
fmuls
es
pop
cmpb
cmp
in
seto
dec
andl
lods
bswap
punpckldq
xchg
jmp
add
imul
fistl
lods
test
in
shll
adc
adc
mov
inc
adc
adc
popa
inc
mov
repz
push
jmp
pop
imul
fmuls
fs
xor
push
inc
xchg
mov
nop/reserved
sahf
or
mov
and
scas
test
push
mov
push
mov
mov
js
ja
das
and
add
js
addr16
sbb
mov
jle
ss
jl
inc
lock
movsb
rorl
mov
add
xchg
lea
ret
sbb
push
mov
aaa
repz
fs
push
lock
mov
cmp
or
repnz
xchg
fsubrp
leave
sub
std
add
add
xchg
inc
imul
aad
fsubrs
pushl
mov
repnz
xchg
sub
repnz
ret
jbe
pop
fwait
stc
cmpb
rdmsr
loopne
fcompl
push
hlt
mov
test
inc
test
mov
sahf
or
inc
xchg
dec
mov
sub
mov
leave
and
xadd
push
loopne
fisttpl
shl
mov
sbb
mov
xor
jg
adc
cmp
pop
mov
pushf
sub
push
out
mov
jge
mov
ja
movsb
in
lods
jno
jle
ja
and
movsl
push
shlb
pop
bound
mov
pusha
nop
and
roll
push
add
sti
sar
xor
push
mov
in
mov
pop
ret
pop
ret
mov
test
movsl
adc
sbb
pushf
xorb
out
subl
fnsave
xchg
sbb
je
roll
push
in
and
cld
jmp
pop
xchg
lock
inc
out
push
inc
mov
adc
push
pop
xchg
cmp
repnz
stos
loopne
add
xor
sbb
and
cmpsb
mov
popf
fwait
ret
jle
sarl
jo
orb
mov
jo
divl
and
inc
dec
outsb
std
add
mov
sarl
xor
cmp
lods
popl
popf
inc
popf
pop
fs
add
test
add
push
pop
fisttps
aas
mov
popa
xchg
cltd
nop
xor
cmp
sub
add
rcll
xor
inc
push
jge
insb
pop
mov
jbe
jo
mov
or
push
push
jp
add
push
jb
lods
pop
outsl
sarl
mov
mov
stos
add
ds
ljmp
xchg
cmp
pop
dec
add
mov
cmp
xor
push
cmp
mov
mov
cmp
nop
iretw
enter
push
adcb
jp
popa
test
adc
xchg
ljmp
movzbl
notb
jae
loopne
or
adc
data16
test
push
push
lds
mov
mov
sub
mov
sbb
arpl
ljmp
fbstp
jmp
sarb
fcomi
out
cmc
mov
jb
xor
ja
mov
fdivr
insl
sub
sbb
and
das
or
or
mov
sbb
add
shrl
mov
dec
lret
sub
test
loopne
adc
adc
dec
and
inc
jnp
xlat
mov
pop
fs
jecxz
in
inc
inc
add
inc
push
je
popa
xchg
push
push
ja
push
mov
or
or
add
mov
fdiv
shll
je
sti
push
mov
cmp
add
aam
or
mov
mov
jp
bound
ror
out
lret
cltd
fistpl
outsl
mov
leave
inc
xorb
push
inc
push
je
repz
mov
les
mov
andl
add
daa
adc
or
cwtl
ret
mov
movsl
push
rclb
repnz
push
fisttps
xchg
pop
fiadds
fcoml
sbb
mov
jns
arpl
fwait
dec
pop
push
jno
or
fs
inc
add
aaa
les
push
push
imul
inc
fnstenv
fcompl
sahf
pop
inc
pop
gs
or
pusha
sbb
jo
dec
cmp
sub
cmp
sub
adc
sub
adc
or
jae
mov
add
pop
inc
ljmp
pusha
cmp
cwtl
push
dec
sub
lret
mov
pop
adc
lret
or
in
push
inc
adc
push
cmpsl
jns
dec
lods
shl
jl
and
ret
or
or
push
sbbl
outsb
add
fdiv
inc
mov
push
inc
loopne
mov
jbe
mov
mov
inc
lds
scas
popa
sub
adcb
in
inc
iret
maxps
std
pop
jne
movsb
add
push
sbb
or
subb
xchg
adc
stc
addl
popa
testl
mov
jge
pop
stos
dec
loopne
jbe
je
push
xchg
pop
test
and
pop
push
inc
hlt
or
cmp
mov
or
or
call
jmp
push
ljmp
inc
cmp
cmp
xchg
sbb
jnp
test
mov
or
xchg
mov
sbb
test
xor
lds
rcrb
jno
subl
movsb
sbb
xchg
addl
push
mov
scas
add
mov
xor
fwait
push
andb
cmp
and
rcll
pushf
fisttpl
push
xor
rorb
jns
inc
sub
cmp
test
lea
cmp
push
add
jge
and
or
and
das
cmp
add
cli
bound
sub
mov
stos
mov
es
mov
sub
cmp
aad
sub
sub
hlt
dec
insb
addl
add
loope
push
cmc
insl
push
mov
push
mov
cmp
ret
sub
inc
dec
cmp
lea
ljmp
push
data16
mov
daa
das
ret
rcr
add
and
les
add
imul
jecxz
imul
fucom
imul
push
rorb
xor
or
push
xlat
cmp
jbe
xor
jge
loop
sub
in
in
sarb
xor
sub
sub
sub
test
out
icebp
enter
or
mov
dec
call
mov
mov
push
jle
js
sbb
dec
fadds
xor
jl
and
sti
aam
test
sub
push
call
andb
xchg
cld
add
adc
inc
data16
movsl
or
enter
xchg
fadds
add
mov
push
dec
mov
pop
push
add
fdivl
leave
loop
bound
pop
and
fsubrs
nop
xor
jecxz
inc
sub
and
push
das
add
aam
xchg
mov
xchg
or
push
mov
cltd
out
lret
mov
or
lods
sti
xorl
sbb
or
inc
mov
pop
mov
fsubrs
ljmp
jge
sub
add
jmp
and
xor
cli
ja
loopne
mov
jnp
shlb
aam
repnz
lahf
cli
iret
mov
addr16
jmp
and
ret
cmpl
push
mov
pushf
push
push
or
xchg
jmp
adc
int3
pusha
ret
fildll
adc
mov
push
and
mov
dec
and
bound
and
inc
int3
mov
fcomps
cmpsb
add
push
repz
jne
cmp
mov
sbb
adc
pusha
orb
push
pop
xchg
xor
ret
add
push
push
dec
inc
sbb
add
push
mov
cmpsb
push
sub
pop
cmp
aad
push
sub
les
ror
repz
cmp
mov
xchg
mov
js
add
rolb
pop
sub
fisubrs
add
xchg
adc
jo
mov
les
js
lcall
xor
xchg
dec
pop
jmp
push
fcom
out
jno
subl
jbe
or
fsubr
mov
cmp
inc
scas
adc
mov
jge
enter
sbb
add
inc
inc
fisttpll
hlt
js
clc
ljmp
call
lea
push
test
clc
insl
jle
fwait
xor
pop
cmpsl
pop
sahf
shrb
js
js
pop
clc
mov
pop
adc
loopne
hlt
add
pop
leave
add
rcrb
jo
int
sub
mov
rol
ds
jno
sbb
mov
mov
add
dec
aas
and
sbb
push
pmulhw
mov
ret
mov
dec
pop
aaa
mov
ss
jns
inc
cmp
push
jae
movsb
mov
add
mov
jns
mov
cmp
sub
pop
movsl
and
add
or
or
push
add
fmuls
adc
jle
cmpb
addr16
jmp
ja
push
adc
jae
push
pop
xchg
sahf
adc
fstps
popl
movsb
lock
dec
movsl
dec
sti
lea
imul
push
out
sahf
push
bound
bswap
cltd
cmp
mov
mov
or
ficoml
fcmovnu
std
inc
or
into
jl
fnsave
dec
hlt
int3
xor
sarl
pop
sub
cmp
jle
cltd
xchg
pop
sbbb
icebp
jne
nop
imul
push
add
ds
sti
push
ss
dec
aad
xchg
int
int3
and
out
ss
ja
sub
aas
pushw
push
test
test
xchg
inc
inc
inc
xor
mov
dec
jmp
scas
repnz
in
pop
adc
popa
fimull
lahf
in
aas
sbb
push
mov
cmp
pop
cmp
popa
fucomi
adc
in
cwtl
xor
fimull
inc
ja
in
lcall
pusha
or
out
in
mov
xchg
xchg
dec
dec
lcall
pop
test
jne
or
mov
push
imul
or
or
sub
ret
or
jne
jnp
in
push
and
lahf
mov
shll
and
push
stos
dec
pop
cs
adc
pop
and
in
xor
loope,pt
add
pop
adc
push
or
push
inc
sbb
or
sahf
push
subb
bound
mov
inc
test
rcrb
in
xorl
jb
sti
add
push
imul
scas
adc
cmc
out
popf
bound
push
popa
adc
fnsave
sub
aaa
or
cld
xor
fldt
sbb
inc
xchg
add
or
mov
adc
arpl
sbb
fmull
add
cmpsl
mov
sub
inc
test
adc
mov
xlat
bound
push
je,pt
inc
add
mov
adc
pop
adc
cmp
add
pop
out
or
xor
push
or
fadd
sbb
add
or
and
adc
pusha
clc
cmp
outsb
add
shr
push
nop
xchg
or
or
push
andb
mov
mov
mov
sbbb
hlt
push
dec
mov
sbb
mov
cmp
fwait
or
daa
inc
sub
cmp
push
rcll
cmp
add
aas
jae
xor
jmp
test
inc
inc
sbb
sbb
and
mov
jmp
or
sbb
ss
jno
cmp
push
inc
cmp
jae
cmpsb
orl
push
inc
in
pop
je
inc
pusha
xor
fiadds
pop
dec
sub
outsb
pop
push
popf
push
xchg
add
jo
imul
test
in
lret
pushf
xchg
sub
mov
dec
add
inc
sub
dec
pop
sub
or
and
cmpl
cmp
sbb
insl
in
and
add
por
js
add
sub
or
lret
subb
sbb
adc
mov
xchg
test
add
jae
out
add
add
add
adcb
shlb
xorl
add
xor
add
rcr
mov
jo
dec
mov
add
or
jmp
insb
mov
sub
adc
inc
fsubrl
jns
dec
icebp
inc
movl
mov
pushw
add
jge
loopne
lock
push
mov
push
or
cmp
loop
lea
sub
subb
daa
cli
push
dec
rclb
push
cwtl
mov
xchg
sub
rclw
mov
outsb
push
fisubl
inc
push
jl
push
sub
ja
rolb
insl
pushf
sub
test
rclb
outsl
push
std
push
xor
clc
push
dec
jns
sbb
inc
divb
sub
repz
ficoms
sub
push
mov
sahf
ret
imul
inc
in
and
inc
sbb
inc
push
lock
xchg
bound
loopne
sahf
and
jle
dec
mov
add
int3
jbe
xchg
sbb
testb
sub
cmpsl
pusha
add
mov
icebp
pusha
sub
pop
out
jne
stos
daa
push
clc
mov
push
je
inc
jmp
inc
adc
or
mov
cmpb
jae
repnz
rcll
add
mov
in
stos
add
jle
mov
add
aad
and
lods
std
ret
hlt
dec
inc
fwait
push
sbb
call
and
mov
repnz
pop
outsl
cwtl
inc
inc
fisubrl
cmpsl
jg
mov
fildl
add
pop
mov
jb
pop
jnp
jne
dec
test
fucom
xchg
jne
xchg
popaw
push
call
aad
push
adc
inc
jp
iret
push
inc
scas
inc
out
dec
movl
inc
mov
js
mov
push
or
or
push
or
data16
xchg
adc
notb
or
js
mov
or
sbb
lcall
mov
pusha
jmp
push
jae
data16
inc
cmp
movsl
sbb
test
in
add
add
add
mov
addr16
inc
pop
vhaddpd
adc
push
add
sbb
adc
test
nop
dec
pop
fcmovnb
pop
int
add
mov
andl
pop
push
or
lods
jge
pop
sub
push
je
jo
and
popf
jbe
push
nop
push
dec
lahf
cmp
push
xchg
in
sbb
ret
cmp
jg
inc
push
sub
push
je
dec
insb
dec
flds
loop
or
or
push
or
add
nop
pusha
inc
jns
lret
add
push
test
sub
int3
and
xchg
push
arpl
dec
adc
int
lahf
push
dec
cmp
insl
dec
add
jmp
incb
jle
mov
shrb
test
cwtl
jne
push
adc
xchg
dec
test
add
pusha
mov
les
dec
xchg
in
add
stos
cli
repnz
popf
adc
shll
jecxz
lock
and
cmp
ss
sub
inc
mov
mov
add
xor
insl
jae
mov
mov
xchg
push
mov
outsb
add
arpl
pusha
jmp
repz
lea
test
mov
insl
push
sti
add
dec
dec
cmp
inc
subl
xor
inc
lcall
mov
jnp
inc
and
cld
adc
enter
adc
das
mov
mov
inc
push
push
sub
ret
pop
punpcklbw
repz
popf
jg
sbb
pop
or
pop
add
iret
mov
sbb
add
fimuls
arpl
out
aaa
addr16
cmc
enter
ret
jb
adc
adc
add
dec
enter
inc
xchg
mul
pop
insb
xor
int3
inc
out
xor
sub
push
in
mov
shrl
shll
leave
lea
jo
jnp
sbb
adc
enter
clc
adc
lods
pop
pop
mov
push
dec
xor
movb
js
sub
aam
cs
aaa
sub
cmp
jp
sbb
andb
sbb
jae
mov
loop
out
mov
xchg
in
push
fwait
std
pop
mov
jmp
fisubrl
aaa
push
sahf
js
push
mov
dec
push
bswap
insb
cld
lock
movsl
or
enter
pop
jo
repnz
popf
add
lea
push
cs
cmp
cltd
adc
cmp
xchg
insl
pop
and
inc
adcb
cmp
mov
mov
cld
mov
pop
clc
fwait
or
and
inc
or
cld
inc
push
xchg
arpl
enter
sub
rcrb
mov
mov
shlb
sub
inc
add
inc
leave
mov
cwtl
stc
shrl
pop
nop
adcb
imul
pusha
sbb
mov
nop
mov
sbb
jae
xchg
sbb
lock
movsb
flds
daa
addr16
or
fdivr
faddp
sbb
cmpb
or
ret
es
or
gs
sub
pop
clc
sub
add
lcall
xchg
pop
aad
inc
inc
sub
mov
daa
lahf
xchg
inc
and
cmpb
xor
daa
std
push
cmpsl
and
loopne
cmc
and
mov
dec
or
ret
dec
adc
push
add
push
stos
inc
inc
mov
add
inc
enter
std
leave
jmp
mov
jg
xor
push
pop
and
ljmp
cmp
mov
and
jecxz
cmovae
sub
push
mov
and
sbb
les
xlat
push
mov
sub
iret
dec
ret
push
loop
mov
mov
pop
xor
ds
adc
fistpll
sahf
push
cmp
mov
mov
push
mov
int3
jecxz
ds
inc
mov
push
push
mov
fcmovb
adc
sub
sbb
pop
dec
sub
adc
les
out
jcxz
adc
int
and
sub
clc
js
adc
sbb
je
cmpsl
sbb
fistpl
inc
hlt
lea
cmp
cmpsb
push
mov
sahf
pop
out
arpl
in
int
pushl
insb
testl
int
sbb
push
movsl
push
or
pushf
pop
jne
cli
mov
mov
pop
mov
icebp
rorb
enter
push
les
es
repnz
ja
lea
mov
sub
lock
and
lea
pop
adc
icebp
and
mov
pop
push
mov
mov
xchg
add
mov
push
shrl
add
inc
pop
ds
shrl
les
adc
idivb
les
add
dec
mov
sub
jo
aas
add
in
int3
sub
leave
push
mov
jae
and
test
or
sbb
mov
imul
push
xchg
add
add
sbb
loope
nop
add
aam
aaa
mov
stc
pushf
dec
sub
pop
lods
fimuls
xchg
mov
xor
inc
xor
inc
aam
mov
pop
push
aas
lea
ja
imul
sbb
pop
pop
imul
cmp
jmp
mov
cmp
stos
mov
mov
sbb
push
daa
mov
test
mov
out
inc
out
xchg
nop
addr16
xchg
jne
push
or
cltd
mov
decb
mov
cmp
push
add
inc
dec
xchg
adc
jecxz
fs
in
cld
inc
push
jne
push
pop
into
sbb
jb
gs
sub
adc
in
xor
sbb
push
imul
sub
jnp
add
xchg
push
sub
adc
movsb
push
movsl
neg
jge
push
adc
mov
add
jecxz
rorb
sbb
sti
add
enter
inc
jecxz
rorl
iret
and
jge
push
add
mov
in
pop
xchg
push
dec
test
addr16
lahf
mov
push
insl
xchg
mov
xlat
push
adc
push
or
jle
repz
mov
loopne
pop
shl
adc
inc
pop
test
adc
enter
outsb
je
loope
arpl
or
xor
sub
xor
fdivs
test
sub
jmp
or
add
xor
outsb
loopne
in
add
xchg
pushf
shlb
scas
clc
jnp
orl
push
xor
dec
insb
or
and
xchg
ret
rclb
in
add
adc
pop
cmp
stos
call
add
int3
mov
xchg
xchg
cmp
test
das
or
adc
mov
out
xor
fwait
mov
pop
aas
clc
jne
cmp
push
mov
mov
testb
lock
push
cmp
in
mov
cmpl
int
jle
push
push
mov
or
pop
pop
inc
jmp
or
cmp
xor
push
ss
cmp
or
lods
gs
cmp
pushf
mov
je
lock
cmp
jae
mov
movsb
loopne
inc
adc
fsubr
aam
out
cvtpi2ps
shlb
insb
and
inc
fwait
pop
sbbl
add
jmp
cmp
pop
test
xor
into
push
fwait
push
aas
mov
test
hlt
dec
popa
sbb
faddl
adc
inc
loopne
std
dec
sti
dec
rclb
dec
insb
push
push
push
cmp
sarb
mov
inc
sahf
mov
lea
add
rorl
leave
roll
insb
test
sub
sub
cmp
cmpsl
xchg
cmpsb
ja
adc
in
insl
lds
jge
aam
shlb
rolb
rclb
mov
rcrb
cmp
out
inc
adc
lea
push
or
inc
mov
add
lods
or
inc
push
in
or
or
xor
mov
jl
cmpsl
adc
or
and
pop
adc
xchg
add
or
lods
lahf
xor
sub
imul
jne
ret
outsb
and
enter
xor
imul
sbb
fmull
sbb
adc
out
dec
cmp
sbb
ljmp
add
lock
les
push
sub
sbb
fistps
out
and
sub
movsb
sbb
sbb
or
inc
pusha
mov
lret
push
lret
cmp
inc
in
jmp
sahf
movsl
xchg
aam
dec
pusha
cld
push
fisubrl
or
push
or
dec
jle
jge
orl
push
int
sbb
stc
push
jno
ret
xchg
pop
and
mov
dec
and
push
xlat
and
addl
scas
pop
inc
out
outsl
orl
jno
lea
lea
mov
jno
pop
and
imul
pop
imul
sub
imul
sub
push
pop
fimuls
mov
insb
dec
adc
adc
sub
dec
mov
sub
jae
or
or
test
popf
mov
cmp
xchg
mulb
jecxz
sbb
mov
or
dec
jnp
add
xchg
fmul
mov
push
hlt
dec
icebp
gs
sbb
cmp
mov
mov
movb
xchg
es
jp
and
inc
or
lods
pop
lods
data16
and
pushf
and
xchg
cmovns
mov
lods
call
pop
sti
or
mov
add
ljmp
mov
mov
xor
add
orb
and
dec
insl
lret
leave
inc
lock
out
popa
xchg
insb
roll
sar
je
mov
xchg
nop
xor
jmp
cltd
mov
pop
sbb
pushf
cs
add
jmp
xchg
imulb
cmp
dec
xlat
scas
sub
outsb
sbb
mov
fcmovb
lret
adc
push
popa
fadd
inc
xchg
jecxz
ret
call
adc
inc
adc
dec
inc
stos
inc
dec
lret
dec
arpl
popa
mov
cmp
js
mov
outsb
sub
mov
jae
add
or
xorl
add
in
cmp
xchg
push
add
inc
loope
addr16
jmp
aad
push
mov
inc
jb
fldenv
mov
and
dec
imul
dec
or
jne
push
out
jno
fs
adc
les
xchg
jo
cmc
lahf
mulb
mov
sub
or
add
cmp
aam
repnz
pop
es
lea
addr16
rclb
add
shl
ficoms
add
into
fildl
movl
xchg
daa
xor
pop
mov
std
enter
push
lea
cli
jb
lea
or
jecxz
mov
shlb
adc
or
cmp
dec
das
pop
adc
sub
pop
ja
in
call
push
xchg
mov
popa
je
sub
in
mov
sub
pop
dec
add
sbb
and
dec
hlt
daa
sbb
mov
repnz
mov
mov
mov
add
mov
add
cmp
testb
in
push
push
out
push
je
hlt
inc
hlt
xor
push
pusha
daa
xor
or
mov
clc
jge
adc
aam
fucomip
add
jno
rcrl
sbb
sub
mov
add
or
or
call
ja
sub
fldz
nop
aaa
adc
lret
fs
or
test
jo
test
mov
imul
dec
fistpll
movsl
iret
test
inc
jae
pusha
cmp
jmp
jne
xor
sbb
push
adcl
inc
fcoms
push
mov
mov
adc
adc
pop
movsb
mov
bound
inc
shl
fs
mov
sbb
inc
xor
jne
insl
ret
or
sbb
jbe
les
sarb
jp
sbb
jo
jg
dec
fdivs
adc
or
pop
mov
cwtl
pop
fstpt
push
push
and
sub
mov
adc
pusha
inc
fs
jmp
mov
pop
lcall
add
ret
or
adcb
cmp
arpl
pop
adc
push
xchg
adc
ret
sub
test
in
jle
lock
ja
jge
push
hlt
dec
js
dec
mov
or
inc
cmp
jl
sti
test
imul
out
push
sbb
sbb
add
mov
and
mov
test
addr16
mov
add
add
mov
mov
adc
imul
sbb
mov
lea
inc
and
mov
mov
or
js
mov
jmp
pop
ja
push
shrl
xchg
sub
mov
xor
mov
and
jae
inc
daa
jbe
lods
lret
orl
inc
cmp
aaa
xchg
xchg
mov
sbb
push
dec
ljmp
mov
inc
cmp
cmpb
je
mov
dec
insb
push
push
xchg
jne
xor
cmp
dec
sbb
and
fcmovb
imul
dec
movsb
fdivrl
fisubrl
loope
adc
or
int
inc
sub
jp
arpl
mov
push
cmp
mov
retw
jp
push
aam
cmc
mov
clc
and
or
mov
sarb
in
jae
mov
push
add
lret
sarb
loope
mov
inc
ss
nop
lock
push
add
dec
push
xor
orl
fdivr
inc
dec
mov
add
test
push
adc
rcr
push
xor
notl
xor
push
mov
subl
sarb
roll
in
inc
pop
adc
pushf
call
mov
sbb
cli
outsl
push
je
incl
cwtl
adc
sbb
aaa
jns
mov
sbb
jle
dec
pop
movsl
je
aam
dec
and
dec
push
mov
scas
inc
or
add
int3
rcrb
sbb
pop
push
cmp
mov
iret
lea
imul
pusha
sub
lea
jecxz
cmp
sbb
xor
ret
movsl
test
sub
push
mov
push
cmp
push
outsb
push
xchg
mov
loope
jb
aad
mov
add
mov
fiadds
daa
test
mov
shlb
scas
dec
test
mov
es
rolb
das
ljmp
cltd
cld
or
push
push
mov
negb
pop
lock
dec
cwtl
test
fimull
push
fsubrp
fmuls
inc
pop
xchg
out
arpl
jns
nop
nop
pop
mov
aas
leave
mov
stos
mov
xor
cli
insb
cmp
and
orb
or
add
rolb
incl
cltd
mov
mov
push
out
cmp
jge
xchg
stos
sub
test
push
mov
ljmp
stc
adc
or
fmulp
push
dec
and
jmp
sbb
cmp
and
outsl
adc
test
inc
sub
lds
sbb
add
sub
adc
pop
in
adc
mov
jecxz
jne
add
inc
fidivrs
push
out
pop
pusha
mov
or
aas
pop
xor
dec
xor
and
adc
mov
and
sbb
and
add
add
add
adc
pop
or
mov
and
pop
inc
and
or
pop
in
xor
add
add
and
xor
dec
cmp
sti
and
pop
cmp
dec
ret
std
aas
movl
lret
push
repz
mov
xchg
adc
popf
push
xor
sbb
out
or
sub
mov
jno
dec
sbb
nop
xchg
das
jnp
add
mov
sbb
and
xchg
imul
jo
cmp
mov
xor
mov
or
or
pusha
xchg
add
int3
js
fidivl
cmp
daa
xchg
xlat
std
nop
lods
lea
or
xor
add
out
data16
mov
xchg
xor
ret
cmp
and
test
xchg
js
mov
orl
and
adcb
add
mov
mov
out
xor
mov
das
push
clc
xor
push
jo
xorl
sbb
sub
mov
xchg
out
xchg
mov
in
inc
mov
sbb
and
roll
popf
pop
popf
adc
sub
push
sub
mov
aaa
ss
sbb
cmp
je
jae
xlat
gs
mov
and
cmp
xlat
push
stos
adc
out
je
cwtl
mov
inc
dec
enter
mov
pop
subl
outsl
jl
mov
jne
lea
orb
test
sbb
mov
sub
inc
imul
arpl
scas
mov
adc
mov
fldl
fcompl
push
ficoml
adc
cmp
mov
push
push
xor
xchg
xor
jns
push
cwtl
hlt
push
sbb
jo
mov
movsb
add
push
push
cmp
sahf
adc
dec
je
xor
xlat
outsl
out
mov
das
jl
sbb
add
pop
xchg
and
jle
mov
mov
jecxz
je
in
pop
pop
js
lods
and
std
mov
cmp
jbe
decl
ljmp
lea
lea
pop
pushw
inc
ffreep
jg
xchg
mov
cmp
jne
insb
test
mov
lahf
sbb
inc
sahf
into
xor
jmp
ret
or
cmp
es
and
push
es
or
adc
pusha
loope
int3
aaa
loopne
or
sbb
arpl
test
sub
pop
xchg
push
jg
lods
xlat
lret
loop
pop
inc
xor
push
mov
incl
xlat
add
in
scas
push
xor
call
ss
push
add
cmp
mov
sub
dec
or
sarl
or
pop
lcall
xor
push
mov
lret
aad
arpl
popa
stc
xchg
test
or
jb
testb
add
sbbl
adc
cmpsl
or
mov
mov
scas
add
pop
movsb
pop
sub
jge
lea
sbb
fnstenv
fstl
push
rcrl
aas
cmpsl
fcmovnbe
mov
in
fs
push
mov
push
pop
push
pop
or
mov
lret
in
rclb
and
push
xor
rorl
jge
cmp
js
test
cmp
shrb
test
adc
lret
and
aam
idivl
sbb
out
lea
dec
xor
cmp
mov
jnp
das
push
inc
adc
ret
mov
jg
pop
bound
fmuls
in
push
test
orl
and
insb
imul
adc
xor
sub
and
sbb
pop
repnz
cmp
push
xor
inc
sbb
leave
orl
leave
and
sbb
mov
inc
jb
pop
push
inc
sbb
push
push
jne
push
cmp
es
and
and
in
dec
lds
mov
or
xchg
and
inc
daa
lods
sti
and
xchg
sub
pop
je
imul
pop
nop
mov
andb
and
movsb
es
xorl
mov
or
pop
adc
cmp
cmp
and
sbb
inc
test
xor
xchg
sub
cmp
inc
enter
xchg
add
sub
hlt
add
cmp
pushf
push
clc
inc
xchg
lea
cld
xor
popa
aas
xchg
sbb
sbb
sub
and
repz
je
sub
sbb
add
add
adcb
dec
fisubl
adc
int
cmp
inc
test
adc
leave
aad
pusha
dec
sub
xchg
add
test
dec
scas
call
push
or
bnd
jb
add
bound
add
xor
add
ljmp
pop
adc
or
sub
add
dec
inc
std
call
and
es
xchg
dec
mov
fnstenv
and
ja
dec
add
and
push
sar
push
loope
call
adc
xchg
cltd
bound
mov
cmp
or
push
push
jne
or
mov
mov
xor
push
and
into
lods
push
icebp
jae
jle
mov
imul
lea
scas
push
fld
jno
xor
loopne
sbb
jl
adc
add
pop
ror
mov
andb
popa
inc
or
push
xchg
push
pusha
dec
das
imul
mov
dec
xor
dec
mov
mov
pusha
aaa
rcl
xchg
mov
addr16
popa
ja
enter
fnsave
jle
addr16
cli
aaa
cmp
inc
add
outsb
mov
jl
ljmp
ret
mov
add
cmpsl
repz
pop
ljmp
or
mov
loopne
cmp
pop
sbb
dec
sbb
inc
fdivrl
test
jmp
dec
mov
xchg
int
or
fisubrs
pop
enter
lcall
adc
inc
adc
or
arpl
int
dec
mov
lock
and
push
jp
mov
push
push
mov
ds
ret
cmp
jnp
add
cltd
pop
sub
lds
mov
or
add
add
mov
movsb
jo
dec
lods
sbbl
das
push
xor
inc
mov
add
enter
cmpsl
xor
int
mov
in
in
cmp
or
sbb
or
call
sbb
test
or
je
insb
dec
sbb
xor
add
inc
xchg
push
movsl
lret
rclb
testl
xor
mov
bound
sbb
or
test
mov
add
movsl
popa
push
scas
inc
push
jecxz
sbbl
movsb
sub
and
out
das
addb
test
push
adc
pop
dec
adc
int
rorb
stc
adc
push
dec
mov
jns
adc
jmp
inc
cld
add
orl
add
or
and
stos
mov
jle
jbe
popa
subb
sub
movsb
or
pop
mov
pop
mov
pusha
jmp
mov
push
adc
aam
inc
or
sbb
or
loope
stc
add
test
xor
xchg
sbb
mov
ret
adc
inc
pop
dec
xor
fcomps
sbb
push
pop
or
jb
and
xor
adc
push
cmp
mov
fnstsw
dec
lahf
sbb
inc
xor
lods
adc
adc
xlat
lret
xor
mov
jns
adc
sub
cmp
add
cmp
mov
inc
ret
lret
enterw
push
js
sbb
sbb
cmp
lock
or
inc
rol
test
dec
or
sti
fidivs
mov
inc
xchg
rcll
push
mov
adc
mov
mov
push
add
in
xor
cwtl
loop
outsl
negb
jle
pop
push
push
xor
sub
push
cmp
xchg
sbb
inc
pop
ret
test
ret
adc
je
stos
incl
sub
adc
xlat
xor
mov
les
into
jae
add
call
push
push
and
nop
aad
fldl
daa
xchg
les
inc
push
out
and
scas
or
mov
xor
pusha
popf
movsl
mov
dec
adc
sbb
xchg
xor
cmp
repz
inc
lcall
xor
xchg
sbb
cmp
in
inc
lods
test
jne
add
xchg
push
add
popf
adc
xor
mov
pop
adc
push
test
mov
cmp
je
arpl
sarb
and
add
push
cs
sub
hlt
nop
cmpsl
ret
cld
mov
int
pushf
inc
scas
iret
clc
out
pop
sub
fnstenv
add
jmp
test
sar
pusha
add
push
xchg
xchg
mov
mov
pop
std
push
inc
lods
sub
incb
fidivl
and
pop
clc
cmp
cmp
sub
xor
sub
sbb
push
adc
mov
xor
and
push
or
fsubs
and
xor
push
xor
adc
add
adc
repz
and
icebp
lods
xchg
lret
or
movsl
cmp
int3
sbb
stos
ret
xlat
test
cmp
mov
adc
or
shlb
push
sarb
lret
sub
repz
jmp
cmp
je
aaa
sub
popf
mov
shl
and
dec
adc
sar
adc
push
jge
sub
jecxz
xchg
push
faddp
xchg
into
scas
push
push
cmpsb
cmp
addb
jl
mov
or
add
aam
insb
pop
mov
or
add
push
jecxz
xchg
jmp
test
mov
pop
nop
pop
out
and
dec
sub
or
in
pop
sub
pop
scas
icebp
push
xor
fwait
movl
xor
xorl
insb
dec
stos
dec
sbb
xor
aas
xchg
xchg
inc
inc
push
mov
add
cmp
mov
sub
rolb
push
dec
add
movb
lcall
cmp
aaa
add
inc
push
add
insb
fstps
or
mov
sbb
in
cmp
dec
test
mov
test
xlat
jno
pop
mov
movl
or
pop
fnstcw
lea
inc
mov
cmp
aas
icebp
les
enter
fdivrs
inc
call
lods
push
jbe
jno
loopne
add
and
mov
or
sbb
adc
add
push
push
mov
daa
mov
scas
jne
cwtl
dec
dec
arpl
mov
inc
clc
cmp
sbb
adc
mov
repz
pop
cmp
dec
mull
push
lock
mov
sahf
jb
jo
sbb
stos
push
sbb
lea
rcrb
imul
scas
push
dec
imul
add
clc
xorb
and
jno
sti
nop
sub
mov
mov
xchg
ss
xor
and
push
inc
push
movb
fwait
out
inc
sub
adc
hlt
out
mov
or
push
adc
call
xor
setbe
ss
scas
jle
xorb
or
mov
sbb
lret
test
xlat
inc
push
stc
pop
mov
mov
jo
push
aas
pop
cmp
jno
dec
adc
daa
sbb
fld1
out
add
xchg
push
jb
mov
push
add
nop
out
pop
sbb
in
cltd
subb
ss
pop
add
jecxz
cmp
push
or
sti
lds
mov
adc
jne
loop
push
fldl
add
sbb
popa
and
ficompl
hlt
in
out
stc
mov
out
add
xchg
jle
adc
or
jl
cmp
outsl
test
cmp
push
push
inc
mov
pop
pop
xchg
mov
pcmpeqd
js
out
les
adc
xchg
adc
sbb
and
test
jo
pslld
fisttps
jno
ret
add
adc
jl
loope
inc
adc
test
sbb
mov
inc
cmp
adcb
cld
sbb
mov
loop
mov
adc
cmp
mov
out
cmp
dec
xchg
ss
sbb
inc
sti
mov
inc
push
dec
js
jbe
cmpsl
push
mov
mov
scas
push
sub
js
movsbl
or
sbb
jns
jae
mov
je
or
je
adc
movsl
jb
je
dec
inc
push
insl
push
mov
cmp
pop
movl
inc
xlat
jecxz
push
lds
rolb
out
dec
ds
loopne
cmp
je
push
stos
ss
cmp
js
push
dec
je
ss
pushf
xchg
out
ffree
lea
daa
mov
dec
loopne
clc
xor
push
push
loopne
shrl
and
jp
call
mov
xor
cmpsb
mov
sbb
sahf
lcall
push
in
pop
jp
sbb
aaa
jmp
mov
cmpsl
mov
ret
dec
add
xor
dec
xchg
jnp
lea
add
fcomps
loopne
sbb
arpl
shll
sbb
scas
rol
fadds
orl
inc
loop
jp
fdivl
sub
push
ja
ret
insl
mov
lret
mov
jae
sbb
daa
lods
inc
jecxz
mov
in
sbb
and
sbb
lea
mov
or
movsb
mov
in
inc
cld
adc
call
jbe
add
fptan
push
loopne
arpl
inc
lret
adc
add
imul
lods
shrb
or
jecxz
jnp
push
je
sub
imul
ds
xchg
scas
mov
jmp
adc
and
jae
das
push
xchg
and
dec
lahf
clc
push
mov
ret
aam
rolb
imul
dec
lods
shl
imul
cmp
pop
rolb
add
fiaddl
repz
push
add
rolb
mov
fcmovb
pusha
mov
stos
inc
or
sub
or
dec
mov
xor
jge
add
cmp
je
cmp
loopne
adc
push
push
dec
or
push
in
loop
push
cmp
decl
xor
dec
cmc
inc
adc
sahf
std
xchg
dec
std
jnp
add
cld
add
movl
xchg
xchg
sub
push
or
mov
sbb
mov
addr16
xor
cltd
mov
inc
loope
push
rolb
stc
or
inc
mov
cmp
movsl
pop
inc
bound
xor
mov
cmpsb
les
mov
adc
add
jge
lahf
xor
call
in
jno
mov
mov
dec
jne
or
pushl
movl
cld
push
stc
or
inc
lea
pop
add
jle,pn
insl
stos
xchg
ficompl
jmp
add
gs
js
sub
pop
inc
add
pop
ret
dec
aad
adcb
clc
push
mov
pusha
xchg
push
ja
push
pop
test
xor
add
in
inc
loopne
in
add
push
xchg
pop
mov
mov
add
movsl
shll
imul
movb
popa
cltd
inc
and
adc
rcl
jecxz
push
and
mov
pop
hlt
addl
sub
push
aam
push
fwait
sub
stc
and
das
inc
jno
push
add
push
push
push
push
jmp
push
pop
std
mov
shll
je
scas
movsb
lods
push
xor
inc
jne
mov
scas
adc
call
test
lock
inc
cwtl
cmp
cmp
jne
adc
adc
jle
and
pop
fidivrs
sub
mov
inc
sub
add
and
nop
xor
test
data16
and
push
xchg
rorb
nop
inc
push
mov
or
clc
and
jbe
pushf
cwtl
or
xchg
mov
jmp
and
sahf
test
pop
roll
push
inc
or
xchg
jp
cmp
popf
jbe
inc
jo
movsl
movsb
mov
das
jmp
push
inc
cwtl
lcall
cmp
pushf
ljmp
lea
add
lea
in
dec
popa
mov
lods
fnstsw
mov
pop
pop
mov
mov
incl
stc
or
cmp
js
rcrb
test
xorl
pop
pop
xchg
jnp
xchg
xchg
jbe
and
adc
xchg
cmpb
cli
add
sbb
jnp
pop
daa
add
mov
inc
pop
jl
aam
add
ss
cmp
inc
push
incl
les
push
and
inc
push
push
adc
xor
xchg
mov
bound
nop
add
shlb
pop
add
sub
sub
cmc
fisubrs
loopne
cmp
ret
lock
xor
cmp
loop
jecxz
pop
outsl
mov
jo
add
test
cmpsb
mov
das
aaa
push
xchg
push
sarl
push
push
cmp
inc
mov
pop
dec
mov
adc
and
add
addr16
in
push
sti
adc
cmp
add
jbe
mov
or
push
or
inc
push
add
dec
inc
in
jo
or
jnp
jnp
nop
repz
pop
ja
push
hlt
inc
dec
xchg
and
adc
push
testl
or
adc
jmp
sahf
xchg
jecxz
orl
mov
push
in
jg
dec
pop
push
xor
mov
fs
outsb
lods
xor
and
mov
fdivl
add
mov
das
call
mov
rorl
lret
cmp
fcoms
mov
pop
jmp
add
dec
in
rolb
xchg
pop
and
inc
or
in
aam
imul
dec
lret
enter
mov
jb
pop
jmp
and
fiaddl
jp
mov
mov
push
mov
push
int3
iret
pop
pop
jo
aas
jo
cmp
pop
loope
xor
mov
push
imul
add
mov
pop
cmp
pop
dec
pop
call
jmp
cmp
mov
mov
xchg
adc
or
pop
int3
je
orb
adcb
push
rolb
push
add
dec
push
popa
test
pushf
mov
fldl
sbb
mov
loope
les
or
pop
jb
cmpb
sbb
adc
adc
sub
insl
xorb
dec
mov
inc
jge
cmp
je
test
test
in
gs
jp
cwtl
push
shrl
xchg
adc
popa
xor
sbb
add
cs
and
jnp
pop
pop
mov
dec
inc
sub
push
pusha
mov
xchg
das
pop
clc
cmpl
xor
popf
shl
or
adc
ljmp
fadds
das
pop
push
rcll
mov
es
dec
jno
scas
adc
push
rcrl
lea
pop
inc
popa
cmp
fchs
jmp
test
pop
mov
mov
loopne
or
jo
lea
fisttpl
xchg
lods
inc
movsb
push
out
movsb
xchg
pusha
pop
lea
lret
outsl
cmpsb
mov
or
sbb
or
pop
add
adc
dec
and
xor
dec
mov
filds
mov
jle
add
cmpw
ss
add
sbb
dec
jne
push
push
adcl
sub
add
scas
or
add
stc
fs
push
jo
fld
je
push
cmp
adc
into
pop
lcall
jne
jns
sbb
or
adc
add
dec
loopne
popf
sbb
aas
in
adc
adc
loop
les
pusha
jne
dec
dec
push
shlb
dec
sub
jp
sub
jmp
fdivp
testb
mov
lcall
dec
movzwl
jnp
add
inc
std
notb
pop
or
mov
rorb
dec
movsl
jge
cmp
repz
dec
nop
and
fidivrl
sbb
mov
jle
jae
xorl
mov
pusha
xor
mov
pop
into
add
adc
ss
xchg
xchg
cs
ja
mov
pop
and
fnsave
and
fs
pop
adc
dec
pusha
cmp
jne
jb
fs
enter
push
cwtl
insl
mov
add
pop
push
pop
push
dec
xor
jo
push
insb
cmp
fdivl
and
pushf
xor
adc
divps
insl
adc
inc
nop/reserved
xchg
in
and
push
or
je
lds
movsb
xchg
cmp
imul
icebp
ret
sbb
lcall
adcl
add
in
fwait
push
mov
push
xlat
or
push
push
cmp
cmp
xor
test
jne
cmp
adc
in
repz
out
pushf
adc
mov
adc
mov
repz
rcrl
popa
adc
lock
adc
mov
adc
add
add
add
ret
cmpsl
dec
push
iret
mov
pop
js
cmpsb
xor
nop
cmp
ljmp
dec
and
inc
sbb
rcll
sub
movsl
push
mov
nop
and
add
nop
shll
mov
mov
shll
mov
adc
xor
and
sbb
or
add
push
cmp
pop
dec
xchg
mov
adcb
cld
pop
lods
or
pop
movsb
or
sbb
jmp
push
cmpl
pop
jo
or
jb
sbb
and
fnstcw
gs
sbb
jge
fldcw
mov
sub
and
mov
push
jge
and
icebp
mov
mov
xchg
jl
push
cmc
or
aaa
mov
rolb
fcoms
mov
adc
mov
dec
pop
jne
orb
push
arpl
inc
adc
loop
xor
mov
test
divb
and
les
add
scas
push
and
in
and
and
mov
aas
imul
push
inc
pusha
inc
in
push
inc
subb
add
pop
test
sbb
stos
call
nop
ja
mov
cmpsl
push
nop
cmp
sbb
add
sbb
lods
pop
jp
imul
inc
push
sbb
adc
mov
xchg
xor
movsb
xchg
addl
mov
stc
in
mov
and
mov
push
cmpl
cli
dec
lods
es
jmp
cli
push
dec
mov
rcl
adc
lahf
in
lahf
and
xchg
adc
loopne
add
scas
mov
pop
out
jmp
xor
fcom
stos
loope
call
mov
xor
aam
sub
push
hlt
insl
add
xor
packsswb
in
adc
adc
jae
sub
pusha
mov
push
inc
ja
cmpsb
push
and
pop
lea
jmp
push
jb
and
push
das
popf
push
push
sbb
pop
dec
testl
jo
xchg
pusha
fcoms
and
gs
pop
and
stos
sub
ds
stos
les
inc
xchg
inc
push
dec
inc
sub
xchg
add
rcll
sub
nop
cmp
dec
inc
sub
inc
les
lea
mov
outsl
push
jg
adc
das
or
push
or
inc
push
jns
mov
mov
stos
pop
aaa
movsb
cmp
adc
add
push
fs
pop
ret
pop
push
mov
dec
cmp
and
sub
rorb
push
pop
les
popa
inc
sahf
sbb
inc
outsl
shlb
sub
dec
pop
sub
in
out
popf
add
mov
popa
dec
and
cmpb
dec
dec
negb
jp
jne
jmp
pop
fs
adc
and
dec
ljmp
and
push
sbb
test
and
xchg
push
cmp
pop
fwait
aam
mov
scas
test
test
pop
lea
or
pusha
push
popl
cmp
mov
mov
fwait
movsb
xor
push
adc
lahf
adc
jne
push
fadds
add
jge
and
imul
cmpsl
adc
mov
or
cli
push
in
add
ret
or
insb
subl
xchg
dec
pop
testl
js
add
and
pusha
push
push
adc
ret
loopne
andl
mov
nop
dec
xor
sbb
sub
call
in
xchg
push
xchg
add
call
and
xor
test
pop
rclb
and
dec
in
inc
jno
jnp
shr
dec
lret
mov
sub
insl
shrb
xor
pop
dec
test
inc
cmp
and
or
outsb
push
pop
cmp
push
jb
movsb
dec
repz
push
lds
imul
test
mov
rcrl
out
movsl
test
add
jne
cmp
mov
jae
push
jle
jo
fbld
xor
inc
adc
pop
and
mov
hlt
inc
je
lock
test
mov
divb
or
or
rcr
lret
imul
stos
das
fs
mov
inc
inc
sbb
push
es
push
lods
addb
mov
jle
adc
or
mov
pop
lret
xor
and
shll
jmp
cmp
fidivrl
xor
imul
ss
xor
or
ss
sbbb
add
nop
bswap
pop
leave
adc
mov
push
jle
je
add
and
mov
pop
jns
add
or
fs
xchg
mov
jp
dec
clc
adc
or
add
mov
xor
rol
movsb
sahf
add
mov
jl
aas
stos
pop
fstl
sbb
bound
aad
clc
or
repz
pop
push
mov
aaa
or
or
daa
jecxz
nop
mov
daa
out
imul
or
or
mov
pop
in
and
xchg
push
add
inc
sbb
fiaddl
pop
dec
out
pop
bound
and
sub
mov
add
cmp
jne
push
adc
xchg
out
rolb
xchg
and
xor
test
lock
add
cmp
inc
push
mov
jae
jb
cltd
xchg
and
sbb
push
mov
iret
push
outsl
rcrb
repnz
pop
mov
push
and
mov
mov
out
and
xor
add
or
or
nop
popa
sbb
mov
cmp
adc
pop
sbb
and
fwait
cs
mov
dec
arpl
repnz
das
ret
push
jno
lds
roll
cmpl
xor
adc
test
sbb
add
rcl
lea
push
ret
shr
fwait
aam
addl
or
push
mov
les
pop
xchg
dec
arpl
push
or
popa
cmc
xchg
xchg
mov
add
inc
in
test
xchg
add
push
mov
aas
add
movl
addl
dec
jo
adcl
nop
and
xchg
mov
or
test
pop
inc
loopne
dec
push
lds
or
xchg
mov
and
repz
xor
imul
sbb
xor
dec
dec
popf
dec
add
add
shrl
or
scas
dec
fldt
sbb
sub
imull
div
adc
dec
movsb
sbb
mov
sub
aaa
cmovl
sbb
push
movaps
test
xchg
fsts
dec
loopne
xchg
xor
dec
inc
xor
lcall
mov
adc
stos
sbbl
sub
popa
cltd
orl
push
lahf
fs
daa
addl
stos
rcl
movsl
sti
sub
daa
pop
add
mov
fistpll
sbb
push
fwait
sbb
xchg
sbb
lock
cmp
mov
ss
sub
or
dec
inc
mov
or
push
inc
mul
into
and
iret
xor
inc
cmp
shlb
mov
scas
loop
xor
jns
adc
and
sub
add
daa
popf
cld
icebp
mov
test
sub
jns
and
stos
in
push
dec
mov
xchg
enter
dec
mov
sub
inc
add
xor
cmp
orl
sub
jns
lock
inc
inc
pop
daa
aas
test
lock
adc
jmp
jmp
pop
popa
int3
and
rolb
ret
or
pop
in
adc
xor
or
cltd
fldenv
sti
gs
roll
inc
mov
lock
dec
lcall
insl
rol
out
push
push
xchg
xlat
add
sub
sbb
ficoms
add
mov
mov
lea
xchg
icebp
orl
and
cwtl
nop
and
xor
dec
and
insl
mov
insl
dec
add
jmp
or
mov
ss
push
inc
rclb
adc
inc
call
xchg
sbb
dec
ret
xlat
or
shll
stos
lock
cmp
cwtl
jecxz
add
push
xchg
jns
lea
dec
jb
dec
outsl
stc
iret
nop
es
bound
ja
lods
pop
daa
data16
mov
adcl
int
roll
or
mov
mov
ficoms
sbb
xor
rcl
add
push
push
pop
test
sub
xchg
lea
xchg
push
pop
orb
mov
xor
fs
dec
cmpl
cmp
mov
cmp
mov
inc
pop
mov
notb
lods
jbe
fs
mov
hlt
scas
add
add
pusha
jb
xchg
sbb
imul
add
xor
nop
cmpsb
roll
shll
push
loope
movzwl
add
push
sub
pop
pop
sbb
mov
mov
aam
xchg
pop
int
push
push
inc
sbb
inc
mov
cmp
xor
xchg
add
dec
rclb
mov
or
mov
push
popa
out
push
sub
daa
jne
les
in
push
xchg
xchg
pop
iret
movsl
adc
repz
pusha
je
jo
cltd
andb
push
outsb
mov
sti
add
jb
dec
mov
sbb
sub
mov
and
orb
pusha
mov
gs
es
xor
imul
push
test
pusha
sub
movsl
xchg
rorl
out
xchg
xor
dec
push
jnp
xor
fcoml
sarl
cld
xor
and
outsb
or
movsb
gs
nop
xor
in
or
add
add
cmp
or
push
movsl
or
push
insl
mov
inc
clc
and
push
je
or
jl
or
insl
push
nop
mov
adc
push
adc
test
movsl
jmp
xlat
xor
dec
outsb
inc
clc
mov
insl
cmpsl
push
mov
and
adc
pop
mov
mov
adc
adcl
movsb
pop
stc
pushf
pop
pop
jno
push
add
ficomps
lea
dec
xchg
outsb
xlat
or
adc
adc
das
les
xor
xor
pop
andb
in
mov
mov
jae
jns
push
sbb
adc
shll
adc
adc
add
daa
lahf
add
sbb
aam
aam
aaa
incl
push
push
scas
jl
or
leave
adc
shrl
cs
add
adc
push
fdivs
sbb
sbb
push
cmpl
dec
inc
je
sub
lods
sbb
das
icebp
push
inc
sbb
xchg
sbb
and
and
mov
test
inc
fisubs
pop
xor
sub
xor
sbb
clc
into
jno
mov
push
inc
push
cmp
pop
pop
aad
dec
fs
inc
es
pop
cmp
push
test
or
cmpsl
aaa
dec
setno
mov
pop
outsb
nop
dec
adc
adc
into
ret
jge
insb
pop
jo
or
sbb
jns
imul
inc
pop
lock
sbb
cmp
hlt
cmp
int
cmp
mov
push
ja
sbb
lea
outsb
shll
mov
xor
insl
sbb
xchg
dec
xor
imul
incb
fldcw
pop
pusha
or
or
mov
push
add
mov
adc
sub
mov
inc
sbb
imul
add
and
mov
push
cmp
push
and
pop
lret
das
rcll
mov
jge
and
adc
push
mov
mov
adc
es
or
mov
jmp
push
lds
dec
in
jbe
mov
sbb
add
jmp
and
push
cmp
jmp
movsb
imul
aad
cmc
cmp
cs
sbb
outsb
pop
jmp
adc
or
adc
push
test
and
roll
les
xchg
insb
push
mov
add
ret
xchg
add
test
dec
adc
stc
fiadds
sub
js
mov
test
lock
mov
add
sbb
inc
adc
mov
inc
sbb
sbb
dec
mov
icebp
lcall
sub
or
and
inc
rorb
jecxz
sbb
add
jle
pusha
cmp
adc
mov
insb
movsl
jnp
loopne
ret
dec
push
jne
sbb
adc
adc
push
mov
pop
mov
pusha
xchg
pop
test
in
add
mov
sub
dec
xor
pop
dec
dec
lods
lea
enter
fucomi
sbb
fcmove
rcrl
pusha
sbb
aaa
int3
rcrb
adc
sbb
and
push
sbb
out
mov
adc
sub
cmpl
or
ret
fisttpll
push
fstps
pop
mov
mov
ja
test
push
mov
mov
into
dec
or
in
in
pusha
enter
mov
pop
popa
stc
jne
andl
add
std
or
adc
xchg
inc
inc
dec
ljmp
into
push
ret
dec
mov
fcom
inc
fwait
aas
xchg
repnz
xor
cli
xchg
jbe
add
add
or
add
test
xchg
loopne
add
pop
add
push
jle
pop
pop
nop
stc
jne
das
fadd
mov
int
insl
iret
push
sbb
rclb
add
push
push
and
rcll
adc
and
pop
cld
sbb
test
add
push
sbb
jne
mov
aad
add
pop
pop
fdivrs
cmp
call
mov
daa
test
in
push
pop
scas
xorb
bound
stos
add
cltd
cmc
imul
mov
adc
sahf
in
mov
adc
aam
pop
stc
sti
add
mov
add
movl
push
pop
addl
push
push
mov
movsb
xor
dec
mov
sahf
test
and
das
push
push
sub
mov
fstps
sub
cmp
sbbb
xor
stc
test
jmp
imul
jne
dec
sbb
mov
enter
cmpsl
pop
add
fildl
loop
or
ficoms
jb
bound
cmp
add
add
loope
xchg
in
sub
pushf
push
lods
jg
sbb
cmp
mov
dec
lock
adc
gs
aam
xchg
cmp
and
mov
mov
call
adc
cs
in
dec
add
jp
adc
mov
rorl
cmp
mov
pop
adc
jg
xor
iret
push
sub
lea
push
aad
push
sbb
ret
ja
les
inc
sub
mov
insb
sub
add
push
shrl
xor
hlt
loope
pop
dec
adc
cmpsl
or
adc
in
mov
lock
sarl
mov
adc
sarl
jo
push
add
incb
pop
cmc
and
leave
mov
adc
add
imull
popa
mov
outsl
add
or
les
mov
add
fisubs
cltd
enter
rorl
test
into
ret
ret
adc
cli
rclb
imul
ss
or
push
jno
add
test
fldl
sbb
xor
and
sbb
adc
push
pop
cmp
adc
xor
xchg
pop
arpl
xchg
movsl
imul
jp
loop
das
adc
inc
adc
std
sub
loop
push
pop
in
adc
and
add
or
xorb
sbb
clc
add
movsl
or
add
sbb
add
outsb
pusha
xor
data16
jl
mov
sub
lcall
and
mov
ja
inc
aaa
mov
movl
or
dec
imul
sub
add
and
cmp
and
sub
cmp
jnp
lock
pop
into
push
cmp
sti
bound
mov
scas
push
mov
mov
sbb
push
sbb
ret
inc
mov
out
jne
sbb
sub
rol
dec
xchg
adc
lods
add
or
mov
or
fbld
loopne
rorb
and
fisttpll
mov
push
in
add
cmp
adc
xchg
lods
fsubs
rcrb
mov
sbb
push
in
insb
lock
fwait
pop
and
je
pop
jmp
push
test
xchg
xor
pop
xchg
and
stos
arpl
je
adc
jg
mov
mov
jle
inc
int
mov
and
add
cmp
jl
push
cmp
push
cmp
jle
cmp
negl
push
cmp
cmp
dec
add
loop
inc
clc
add
inc
jmp
sahf
push
movw
fadds
jns
repnz
aad
andl
jg
or
stos
inc
or
fs
pop
idiv
cmp
mov
or
mov
ds
xchg
dec
rcll
cmpsb
or
bound
cmp
in
jnp
jnp
and
dec
mov
sbb
dec
jmp
add
imul
push
lock
push
or
mov
lea
leave
ja
repz
or
orl
jge
sub
call
push
or
pop
popf
cmpsl
rcll
mov
cmp
xor
adc
and
test
js
sbb
cmp
lea
inc
test
int
cmp
push
xchg
adc
mov
adc
rcll
mov
or
into
mov
dec
insl
iret
and
lret
cmp
add
push
inc
inc
dec
sbb
bound
pop
pop
push
xchg
orl
add
insl
or
mov
xor
inc
or
add
or
cmp
test
add
mov
push
mov
insl
xor
pop
mov
je
fs
pop
sarb
outsl
dec
es
or
pop
adc
adc
cmp
xor
movsb
fwait
add
insl
arpl
sbb
or
push
dec
push
sub
and
sub
sub
xchg
and
add
lock
hlt
xor
test
or
rolb
adc
inc
or
leave
jmp
dec
xchg
lods
and
push
inc
or
popa
or
pop
shlb
fistl
sub
sub
mov
test
pusha
cmp
lods
mov
mov
int3
or
sbb
sbb
xor
js
sub
leave
loopne
mov
popa
mov
inc
pop
lds
test
mov
sub
ss
mov
stc
add
adc
pop
pusha
adc
adc
pop
jnp
jecxz
or
push
js
push
pop
adcl
ljmp
xchg
lcall
into
sbb
add
xchg
cmpsl
std
xchg
pop
shlb
stos
test
inc
sbb
das
adc
sbb
je
push
inc
push
nop
add
inc
addb
adc
sbb
sbb
in
mov
adc
leave
in
mov
sbb
or
mov
inc
es
fstps
inc
pop
xor
inc
add
mov
mov
sbb
pop
push
cld
ret
push
sub
mov
movsb
call
in
jo
pop
mov
inc
lods
push
aaa
mov
and
sub
lret
mov
xor
adc
shll
sbb
pcmpgtw
test
and
push
mov
out
shlb
cwtl
jl
jl
sbb
mov
inc
push
and
outsb
sub
imul
notb
xor
mov
popa
int
stc
sbb
in
add
ja
rcl
inc
dec
inc
xchg
push
lea
xchg
out
icebp
sub
dec
js
mov
xor
lock
add
dec
add
mov
addl
pop
nop
fisttpl
or
stos
das
in
add
sub
or
enter
repz
push
jb
test
testb
push
pop
and
or
cmp
xchg
or
rclb
movsl
in
lahf
fimull
push
and
inc
mov
loope
sub
sbb
mov
sbb
or
sbb
fwait
xor
ljmp
inc
and
mov
push
xor
adcb
shrl
hlt
xchg
add
jo
cmp
xchg
insl
sbb
adc
stos
push
jae
dec
fdiv
imul
jmp
or
les
fmuls
in
jl
sbb
pop
imul
mov
bound
test
push
scas
lock
add
inc
mov
pop
sbb
loopne
push
fsts
inc
ret
dec
inc
pop
fistpl
dec
scas
loopne
fildl
adc
mov
or
dec
movsl
push
push
mov
and
sarl
shlb
sub
and
add
mov
lock
sti
add
lock
push
enter
jg
adc
shll
adc
add
push
add
rolb
pop
pop
add
add
int3
sti
cwtl
fimull
adc
xchg
add
notl
adc
adc
and
rcrb
clc
mov
add
and
jo
ret
mov
das
adc
xor
mov
mov
jle
ffreep
jecxz
add
xor
adc
inc
cmp
loopne
ja
mov
push
mov
cmp
pop
insl
xor
test
ss
aas
adc
inc
inc
push
outsb
dec
fldl
push
mov
mov
mov
xor
in
orb
or
out
adc
dec
sbb
test
jbe
sub
clc
xor
inc
mov
fcomip
jg
hlt
fldl
loopne
les
nop
adc
nop
js
jp
lock
cmpsl
push
fldl
push
sbb
std
jbe
pushf
xchg
loop
sbb
and
mov
fstpl
pop
jge
insl
movsl
test
or
addr16
jnp
xchg
add
and
loope
fsubrp
mov
ret
into
adc
dec
jb
addr16
les
movl
dec
cmp
ljmp
aaa
inc
jg
push
push
insb
xor
push
xchg
nop
sub
mov
cmp
popf
xchg
mulb
or
shll
pop
inc
movsb
mov
sbb
mov
jge
cmpb
aaa
fidivs
or
imul
xchg
mov
xlat
adc
test
daa
sbb
es
xor
xchg
int3
jnp
ja
adc
cmp
push
mov
dec
xchg
outsb
mov
lcall
stos
pop
xor
push
dec
sbb
sbb
repz
add
dec
add
adc
push
insb
mov
mov
mov
fmull
mov
add
add
mov
xor
clc
fcomip
aaa
sbb
push
lea
cmp
jb
stos
xor
shld
clc
push
dec
lret
ja
jb
cs
and
ja
lea
push
push
and
or
icebp
push
push
je
ret
push
adc
or
out
push
leave
adc
mov
push
adc
push
push
rorl
add
in
jle
or
cli
test
rcrb
push
push
push
pop
push
movsl
jne
add
pop
pop
dec
test
xchg
jecxz
dec
pop
sub
lock
mov
fadds
dec
push
data16
imul
ja
push
jne
sbb
and
ja
push
adc
scas
push
adc
xchg
push
mov
add
jns
jle
or
dec
inc
cmpw
jne
inc
leave
cld
mov
cld
sti
into
push
rclb
mov
push
jl
xor
dec
cwtl
mov
in
add
mov
popl
sti
jg
stc
std
mov
or
sbb
inc
or
push
cld
push
push
push
push
push
ret
mov
or
aas
rorl
enter
xchg
xchg
or
pop
push
cwtl
jecxz
pop
cmp
add
subb
or
in
lcall
sbb
jae
cmp
xor
lea
inc
mov
and
add
js
mov
test
mov
add
shlb
push
and
int
pop
fdivrl
scas
adc
std
xchg
jmp
or
test
push
mov
dec
dec
and
das
dec
add
dec
xchg
sti
push
mov
addl
push
inc
dec
adc
push
test
lcall
fcmovnb
xlat
sub
rclb
or
push
jne
inc
dec
loopne
xlat
andl
lahf
cs
test
cmp
out
shlb
push
test
push
mov
push
sbbl
aam
xor
xchg
sub
add
mov
sbbl
nop
adc
nop
inc
and
mov
push
popa
popa
xor
jno
xor
dec
pushf
add
aaa
mov
sbb
jle,pn
xchg
add
xchg
or
inc
pop
movsb
xchg
and
or
daa
mov
inc
or
sar
or
adc
into
ljmp
mov
or
xchg
mov
clc
mov
add
pop
sub
add
insb
in
push
jnp
sarb
in
jmp
fmuls
rcrb
mov
cs
push
xchg
add
sub
mov
es
adc
sub
adc
insb
adc
mov
push
mov
rolb
aam
lods
xchg
jo
dec
loopne
adc
les
add
dec
in
cwtl
or
es
bound
pop
jo
lods
popa
popa
mov
mov
sub
int3
add
movsb
or
mov
subl
jp
test
cwtl
adc
mov
sti
pop
sub
fidivl
adc
ja
adc
pop
pop
sub
jle
je
dec
push
add
sbb
outsl
pop
add
xor
pop
inc
adc
in
fists
or
and
or
adc
push
stc
xlat
and
jmp
push
bound
push
jmp
fnsave
ljmp
sub
lods
cmp
shll
push
pop
sbbb
out
push
cs
push
or
jmp
push
mov
por
sahf
push
push
push
movsb
adc
xchg
movsb
dec
or
ficompl
aam
or
hlt
mov
dec
pop
arpl
mov
adc
pop
ja
or
adc
jnp
pop
cmp
cmp
mov
and
pop
sub
andb
sbb
sbbb
je
cltd
mov
xchg
sub
fcoms
xor
inc
pop
call
out
repz
sub
or
cmp
insl
sub
ret
daa
jl
push
cmp
in
cmp
mov
pop
add
adc
cmp
repnz
jo
or
data16
in
testl
add
add
jp
mov
jl
push
pushf
and
and
imul
les
sbb
fsubs
mov
roll
out
addr16
jo
pop
lahf
mov
lahf
adcb
adc
aas
push
sub
mov
or
sahf
out
or
daa
xor
inc
dec
pop
bound
jns
out
jg
mov
sahf
out
sahf
lret
aad
jmp
sarl
adc
iret
repz
iret
repz
jno
xchg
repz
mov
adc
or
mov
pop
push
addl
adc
add
and
inc
or
add
xor
mov
ret
rorl
adc
push
ja
mov
jmp
and
ljmp
sub
and
jle
push
mov
in
fwait
jmp
jl
mov
jmp
nop
cmp
pop
lock
pop
jbe
push
popa
cmpsb
test
mov
aam
add
out
fcompl
js
cmp
xchg
fstpl
mov
mov
adc
es
sub
xor
mov
mov
faddl
add
cmp
xor
or
xchg
add
int3
cmpsb
or
cmpsl
loope
popa
or
push
xlat
xor
and
jnp
data16
push
dec
test
sub
dec
xor
pushf
or
mov
add
jecxz
sti
jbe
les
cmp
rorb
xchg
ret
cmp
vmread
lea
sbbb
dec
and
clc
add
xchg
sub
call
mov
mov
push
xchg
testl
mov
inc
fimuls
adc
nop
xchg
or
rolb
cwtl
popa
add
mov
mov
sarb
xchg
mov
jmp
clc
or
mov
mov
scas
enter
lret
or
fstl
test
sub
mov
and
cltd
shrb
or
adc
xchg
adc
cmpsb
js
fs
or
jp
out
and
aaa
or
mov
adc
adc
orl
sbb
jnp
and
add
test
pop
inc
add
int3
pop
adc
inc
xchg
jge
aad
test
jl
mov
dec
bound
xorb
rcll
xorl
jge
fnstenv
jl
pop
repz
test
inc
mov
dec
lock
insl
sbb
ja
push
push
les
mov
out
jne
adc
mov
cmpb
xchg
fistpl
loop
notl
cmp
aaa
mov
mov
in
sub
lods
movsb
adc
ss
cmp
enter
int3
mov
pop
dec
inc
sub
and
sarb
mov
aad
mov
xchg
xor
xor
xchg
movzwl
ljmp
xchg
cmc
cwtl
popf
filds
lahf
push
xor
push
adc
jl
cs
and
adc
aaa
dec
push
das
mov
rorl
stc
mov
xor
add
mov
xor
cmpsb
sahf
inc
mov
push
xchg
jbe
push
jle
stc
xor
and
mov
in
scas
sbb
enter
jae
shrb
insb
dec
jae
jae
jo
jl
jae
jae
cwtl
sub
sub
and
int3
cmc
jg
scas
sub
popa
imul
add
pushf
sahf
fsubrl
mov
inc
stos
adc
shlb
push
aaa
lret
cmp
and
movsb
jo
pop
rorb
test
sbb
mov
mov
cwtl
pusha
pop
stos
jmp
in
inc
or
xor
lret
and
add
xor
cmp
pop
incb
sbb
add
push
mov
jae
inc
or
leave
or
sbb
sbb
and
xor
mov
nop
and
dec
jns
add
movsl
and
dec
lcall
cmp
sub
cmp
addr16
test
jae
xchg
iret
test
or
push
jmp
adcl
stos
fidivl
pop
fisttps
push
mov
xor
jo
inc
adc
popf
rclb
icebp
mov
cmp
xchg
cltd
or
pop
out
xchg
push
pop
mov
orl
scas
jmp
test
cmp
push
xchg
imul
hlt
cmp
jle
aaa
add
cmp
int3
jmp
cmp
cmp
scas
mov
movsb
pop
pop
mov
push
pop
lcall
test
arpl
push
pop
and
and
in
inc
in
aaa
loope
int
orl
and
inc
jne
add
aaa
cmp
data16
repnz
inc
ret
push
or
das
into
xor
push
inc
push
add
jo
push
push
addl
jle
sub
xor
cmpsb
lahf
fidivrl
inc
outsb
shlb
xor
xchg
mov
sbbb
pop
pop
js
ret
dec
cmp
adcl
push
test
push
or
xor
sbb
sbb
sub
jnp
xor
aaa
ret
mov
cmp
and
test
adc
xchg
xor
jp
rorb
fidivrs
jp
mov
cli
add
mov
pushf
test
cmpsl
std
fdivs
push
pushf
xchg
sbb
ss
push
adc
push
xchg
cmp
pop
xchg
scas
movsl
pushf
test
sbb
test
int
mov
pop
test
push
es
or
sub
ret
popf
mov
inc
xchg
add
mov
xor
and
push
rcr
mov
das
sbb
jp
mov
push
lcall
push
pop
outsb
inc
pop
mov
cmp
xchg
movb
repnz
or
push
xor
repnz
jo
js
and
jmp
xchg
pop
sub
sub
outsl
adc
or
mov
xchg
mov
mov
mov
or
stc
nop
push
sbb
ror
in
in
paddusb
mov
pop
lret
adc
mov
mov
sbb
mov
ja
pusha
push
xor
aam
mov
lock
lock
adc
enter
inc
outsb
pop
inc
adc
testb
or
mov
enter
push
push
sbb
push
fs
nop
fildl
sbb
cltd
nop
cmpsb
les
push
or
jbe
push
pop
nop
nop
fwait
or
mov
test
or
enter
dec
and
adc
push
push
test
adc
lods
addl
test
mov
idivl
aam
push
movsb
mov
inc
push
adcl
and
lret
and
pop
xor
out
inc
ss
adc
lcall
xor
adc
push
xor
or
inc
subb
and
jo
inc
lcall
movsb
cltd
push
pop
add
or
insl
movsl
in
call
cmp
sbb
cmp
xor
pop
pop
xchg
or
je
push
call
rclb
inc
sub
gs
xchg
jno
pop
add
jae
shlb
int3
rolb
cli
mov
movsl
push
js
ror
mov
rclb
xchg
scas
sub
scas
lea
out
add
test
fisttpl
ds
push
in
xor
push
xchg
inc
nop
out
call
sub
jo
scas
mov
sub
or
or
popl
sbb
inc
or
adc
ret
or
jns
push
das
sbb
je
sti
cmc
push
inc
and
add
xor
inc
sar
outsb
mov
loope
lahf
lcall
sbb
adc
and
push
in
addb
pop
adc
xor
pop
or
dec
xchg
pop
pop
cmp
stos
mov
push
mov
ret
rcl
pushl
in
sbb
pop
insb
jo
jne
out
in
mov
inc
mov
icebp
enter
sub
sub
ficoml
lcall
pop
push
test
sbb
mov
push
in
pop
rol
push
insl
sub
sub
sbb
inc
nop
push
dec
and
and
xlat
scas
in
and
dec
sub
in
cltd
and
and
pop
pusha
mov
fiaddl
cmp
push
mov
inc
mov
sub
and
xchg
sub
push
pusha
add
push
xchg
push
into
sub
xorb
mov
fcoml
add
mov
add
pop
dec
push
pop
pop
cwtl
in
aam
jl
jnp
sub
paddd
subb
sub
pop
add
sub
orl
and
and
and
test
or
enter
daa
loope
adc
mov
sbb
adc
and
fstps
mov
rolb
lahf
je
xor
adc
sbb
xchg
stc
adc
adc
in
cmp
femms
orl
icebp
mov
or
addb
sti
fmull
mov
jmp
fldcw
clc
pop
js
jb
add
sbb
add
bound
dec
inc
pushf
sbb
or
dec
add
or
or
icebp
add
jmp
add
and
inc
inc
arpl
dec
mov
nop
std
mov
push
ret
cmp
popf
push
cmp
pop
ds
insb
push
jo
dec
test
pop
fisubl
int
inc
adc
jb
add
add
or
cwtl
dec
movsl
push
fldl
loop
daa
pop
enter
mov
mov
test
cmp
call
jbe
and
shlb
clc
mov
into
sub
inc
adc
mov
pop
arpl
lock
in
sub
ljmp
cli
mov
addr16
lods
xchg
jbe
sub
mov
js
and
and
jg
sbb
cmp
cmp
sbb
jbe
fsubrs
ljmp
and
nop
push
bswap
or
out
data16
loope
insb
jb
mov
mov
sub
add
or
push
addl
and
xor
cli
insb
adc
jnp
aam
xor
das
cmpsb
out
lret
adc
push
adc
xlat
jbe
imul
cmp
jne
inc
sub
jb
lds
adc
inc
mov
subl
sbb
cmp
movsb
pop
div
and
test
enter
jae
mov
and
cmp
push
ljmp
je
mov
dec
shl
lret
lock
hlt
add
jmp
add
inc
push
xchg
mov
inc
mov
xchg
stos
cld
inc
sbb
and
adc
pop
pop
addr16
in
push
rcl
mov
adc
mov
ret
push
fsubrs
fstl
adc
or
ds
imul
and
test
inc
arpl
add
mov
mov
jmp
andb
inc
fnstenv
pop
rcrl
xor
or
add
sbb
sbb
push
push
or
push
bound
xchg
pop
mov
mov
bound
fwait
mov
mov
into
add
xlat
add
and
adc
inc
adc
loopne
inc
xor
mov
daa
pop
pop
data16
cmp
jl
or
je
lcall
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
dec
jbe
repnz
mov
pop
dec
add
jne
ret
lret
movsl
out
add
sub
pop
pushf
adcb
xorl
add
faddl
jne
or
nop
cmp
add
dec
mov
out
push
mov
push
push
mov
pop
testl
insb
in
stos
add
insl
loope
sub
roll
pop
shll
loopne
inc
lock
xchg
mov
sti
jg
xorb
es
dec
and
jo
jg
or
test
lcall
into
dec
popf
jle
loope
aas
mov
push
add
xlat
jo
or
jnp
sbb
cmp
cmpsl
sar
xorw
addb
push
and
and
sub
aas
rcr
and
mov
add
mov
jae
inc
jb
shll
mov
and
pop
cmp
pop
add
sub
in
test
mov
scas
inc
leave
in
cmp
pop
lret
stos
jo
add
jg
insl
sub
addr16
sub
loop
gs
iret
fwait
xchg
loopne
mov
loop
imul
and
jp
adc
outsb
inc
lods
neg
imul
sbb
push
jg
test
andl
leave
mov
dec
cwtl
jno
sub
sub
sub
mov
bound
add
add
std
int
mov
or
jle
flds
pop
pop
pop
movsl
adc
or
sub
push
jg
mov
sar
repz
mov
orl
add
xchg
mov
dec
stc
xchg
or
mov
pop
cwtl
cmp
adc
gs
jne
or
or
add
jne
inc
stos
cmp
aam
mov
dec
mov
sbb
or
aas
add
or
fs
or
test
xchg
jg
ljmp
pop
fists
jbe
je
sahf
sub
dec
mov
pop
loopne
mov
fwait
sub
adc
test
push
ja
inc
sbbl
movb
lgs
rolb
mov
adc
subl
fisttpl
popa
and
sahf
arpl
sub
fcmovb
pop
or
enter
hlt
je
xchg
fsts
adc
sub
aad
dec
jmp
xchg
and
adc
jecxz
movsl
jnp
mov
sub
ljmp
enter
cmp
fnop
lods
aam
lea
sbb
enter
int3
int3
or
push
ret
push
es
add
add
cmp
lahf
sbb
xchg
or
sub
and
add
test
jmp
add
adc
or
sbb
sbb
pop
sbb
into
cmp
repz
lahf
rorl
push
jmp
test
loopne
pop
dec
shlb
mov
das
dec
loope
lods
lods
pop
sarb
xor
je
andl
rcll
mov
sub
xchg
lods
mov
cmp
push
push
sub
inc
pop
insb
lods
cmp
hlt
xor
adc
nop
inc
xor
pop
sub
xor
les
je
icebp
and
aad
sbb
jmp
enter
in
mov
adc
add
lret
and
sub
sbb
rcrl
jne
jno
shr
mov
fprem
repnz
jo,pt
dec
mov
mov
adc
in
xchg
enter
jg
pop
sbb
popf
cld
sahf
cmp
adc
push
xor
jne
je
inc
xor
sub
sarb
lret
sub
js
fcmovne
pop
stos
xchg
in
mov
inc
jl
dec
or
mov
loopne
int3
pop
xchg
iret
test
adc
insb
roll
pop
add
mov
test
mov
faddp
mov
adcl
nop
rolb
hlt
inc
cmpsb
movsb
jb
enter
lock
mov
xor
xor
adc
bound
xorb
or
mov
jo
lods
mov
pop
call
lods
inc
jne
lret
insb
lret
pop
adc
adc
xorb
bound
daa
test
mov
or
sbb
dec
xchg
call
psrlq
sarl
xor
mov
push
sbb
xor
loope
add
adc
xor
inc
das
jnp
arpl
addr16
lea
push
rorb
sbb
xchg
or
sahf
fmull
pop
pop
sub
dec
in
cmp
in
or
es
or
shll
adc
das
jno
jbe
lock
aas
mov
sbb
gs
mov
push
lcall
mov
mov
push
add
push
addb
roll
push
sub
push
cmp
mov
or
fld
push
mov
add
dec
add
add
sbbb
cli
or
xchg
ljmp
mov
pop
push
or
cmp
insb
add
or
dec
dec
sub
imul
add
or
popf
mov
pushf
notb
sub
fimull
pop
nop
inc
sbb
rclb
inc
mov
add
mov
sub
pop
ret
ret
xor
xchg
xor
mov
jo
xchg
pop
and
pop
mov
fldl
push
adcl
repz
data16
cmp
adc
mov
sub
adc
hlt
jne
bswap
repz
jne
or
push
rclb
imul
je
jb
jmp
inc
fisubl
in
pop
mov
aad
imul
or
add
lea
movl
pop
das
sbb
mov
inc
sbb
addr16
and
push
jl
mov
dec
mov
mov
hlt
lea
outsl
lea
sbb
into
mov
je
adc
inc
dec
movsb
repz
jb
enter
pop
xchg
outsl
stc
sub
call
je
pop
mov
mov
scas
dec
dec
mov
cmp
or
xchg
xor
mov
int3
pusha
lea
inc
mov
pop
xlat
jne
fadds
lods
divl
sub
adc
fsubrs
loopne
rcrb
lea
dec
in
adc
sub
ret
cmp
jns
mov
loop
pusha
jl
cli
or
leave
lahf
push
ss
aaa
loope
sti
ficoml
inc
loopne
or
loope
addl
push
xchg
insl
mov
sbb
xchg
movsb
jne
or
pop
jmp
orl
aaa
imul
or
pushw
inc
xchg
fs
nop
xchg
fs
push
jne
pop
enter
into
xor
xor
fs
sbb
fidivrl
arpl
movsl
mov
mov
xlat
jge
xor
push
je
push
sbb
sti
adc
in
cmp
shr
data16
sbbl
or
add
mov
jbe
call
or
inc
jmp
int3
or
inc
fsubrl
fiaddl
sub
fsubr
and
test
rclb
addr16
rorl
popf
daa
add
pop
pop
inc
and
push
mov
or
repz
arpl
test
jae
loopne
movsb
imul
xchg
test
jge
sub
push
loop
or
ffree
and
loopne
dec
xor
pop
bound
mov
inc
cmpsb
mov
and
sbb
pop
shlb
lea
or
das
cmp
icebp
dec
ret
adc
or
test
mov
add
adc
cmp
dec
fisubrl
pop
dec
push
xor
ret
bound
pop
xchg
sub
pop
add
es
sbb
dec
insl
pop
loope
jb
iret
cmpl
push
xchg
pusha
aaa
dec
sti
clc
xor
es
pop
in
jo
pop
inc
jg
orb
pop
mov
push
mov
inc
mov
xor
cmc
jmp
das
jne
jae
xor
sub
les
inc
arpl
jns
out
cld
and
inc
test
sbb
imul
enter
and
test
sbb
adc
jp
adc
sti
sti
sub
fwait
mov
inc
adc
sub
pop
daa
es
pop
xor
cmp
push
sbb
es
sbb
lahf
inc
inc
cs
lret
adc
cmp
in
or
stos
and
bound
adc
inc
and
xor
test
inc
jg
inc
xor
pop
and
sbb
pusha
gs
jnp
or
daa
stc
sub
pop
ret
xor
pop
sbb
xchg
cmpsb
sbbb
clc
jge
test
xchg
or
and
and
inc
insl
dec
repnz
pop
or
shrl
pusha
sbb
cltd
mov
rcl
xorl
add
xor
movsb
push
add
ret
add
sbb
add
in
je
jno
sub
sahf
lock
xchg
aaa
add
test
inc
or
mov
in
sahf
and
dec
cmp
and
js
xchg
lock
jg
adcl
movb
dec
pop
mov
or
xchg
inc
sbb
fsubr
add
sbb
xor
dec
xchg
add
test
div
ljmp
adc
adc
lods
inc
add
int
leave
mov
andl
sbb
add
add
movl
sub
and
dec
pop
ss
or
xchg
xchg
inc
nop
inc
call
je
xchg
cmp
aam
scas
jne
jne
or
les
add
mov
and
xor
int
inc
inc
and
icebp
dec
add
jns
data16
push
cmp
pop
push
lea
mov
call
out
add
add
fsubl
xchg
test
inc
stos
pop
push
test
pop
and
je
daa
add
or
mov
cltd
sub
dec
out
mov
ficoml
adc
mov
and
and
pop
emms
in
xchg
pop
add
jmp
mov
xchg
sbb
jno
int
inc
or
mov
pop
sub
je
add
aaa
push
sub
aam
cltd
xor
repnz
add
adc
add
push
aaa
cmpsl
or
pop
adc
popf
sarl
inc
es
and
jne
mov
ljmp
adc
lock
mov
dec
inc
aad
rol
out
push
jne
push
cmp
xchg
bound
or
and
dec
call
cmp
sbb
in
dec
add
adc
ret
daa
fdivl
rorl
mov
adc
cmp
rorb
xchg
cmp
xchg
out
js
cld
xchg
ja
and
adc
and
mov
shrb
ja
add
add
and
pop
pop
lock
sub
orb
cli
sbb
scas
push
nop
add
and
sub
inc
fcompl
mov
adc
cs
lds
push
mov
pop
call
cmpsl
das
cltd
pop
jmp
out
je
xchg
push
and
call
adc
fisubrl
pusha
mov
add
adc
test
in
jne
or
popa
or
mov
or
pop
jae
cs
repz
fstl
fisttps
push
and
push
je
xchg
loopne
adc
jne
or
or
stc
sbbb
cmpsb
out
or
push
jo
add
loope
in
jmp
xchg
push
stos
push
popa
data16
push
sbb
in
ja
inc
sbb
sbb
addr16
or
addr16
mov
adc
mov
push
add
rclb
push
inc
xchg
pop
add
and
dec
or
xchg
and
lock
sub
mov
and
xchg
test
xchg
aas
inc
add
mov
or
or
into
rolb
mov
cmp
adc
pop
or
mov
mov
sbb
ja
add
and
xchg
push
fcomps
mov
cltd
mov
push
jb
movsl
jne
or
ljmp
cmpsl
pop
fidivrl
icebp
je
or
ljmp
cltd
xor
add
sbb
sete
or
add
adc
enter
mov
clc
out
add
jae
movsbl
cli
mov
mov
sbb
jle
imul
cmp
in
pop
push
ds
jmp
enter
ret
incl
loopne
dec
inc
inc
or
or
jecxz
or
add
inc
cmp
jl
ljmp
xchg
aas
sbb
cltd
and
add
rorl
add
outsl
jnp
cmp
pop
xor
ss
cmp
ret
and
sbb
inc
jne
rcr
jg
lret
shr
sub
mov
mov
dec
jne
rolb
lock
lcall
pusha
lods
mov
or
bound
or
jl
stc
sbb
add
test
jbe
and
push
jo
pusha
lea
jo
rcr
cli
ret
add
addl
adc
mov
cmp
outsb
movsb
outsb
add
jle
push
fsubrs
insb
aas
mov
cli
mov
out
mov
pop
cli
js
inc
mov
jmp
es
add
fstpt
arpl
sub
cmp
mov
sbb
add
call
jg
shrb
add
adc
arpl
pop
mov
ds
lret
push
mov
inc
aas
or
rcll
mov
mov
inc
adc
or
cmpsl
push
xor
and
add
cld
fildll
adc
sbb
inc
lea
jns
push
repnz
sbb
adc
inc
xchg
jmp
add
insl
mov
or
stos
sub
and
outsb
ja
ret
pop
sbb
leave
loopne
mov
add
leave
pop
push
loope
mov
in
loopne
xchg
push
xlat
cmp
cmp
es
into
xor
pop
in
lods
lret
test
add
in
out
das
jmp
push
add
xchg
in
push
push
outsb
xor
push
andb
add
nop
data16
and
inc
sbb
in
mov
pusha
xor
int
xchg
lea
out
cmp
into
ja
mov
mov
test
pop
pop
mov
lret
add
xchg
loope
int3
xor
aam
inc
sbb
sbb
xor
jne
push
sub
adc
repnz
mov
lea
cmp
insl
loopne
pop
xor
push
xchg
popa
test
sbb
int
mov
mov
aaa
in
pop
fadd
xchg
outsb
or
sbb
rol
sub
jnp
pop
rcr
mov
sahf
mov
xchg
mov
sbb
add
push
cmp
jg
loopne
adc
dec
dec
push
mov
xor
fucomp
das
push
cmp
cs
ror
mov
push
dec
push
ret
add
rcl
imul
mov
mov
add
xchg
data16
adc
add
fwait
and
xor
rorb
add
mov
lock
jl
sub
push
shll
insb
sbb
aam
imul
enter
mov
movsl
insl
xchg
and
pop
aam
std
stos
xor
inc
mov
jge
jnp
push
push
divl
lds
jmp
mov
rcll
jo
push
pop
rcl
sbb
push
cmp
pop
aaa
xchg
xchg
arpl
aaa
aad
loope
cmp
mov
mov
aaa
jno
jno
les
jecxz
mov
pop
cmp
mov
mov
repz
ret
adc
lods
pop
mov
cmpsl
call
out
das
adc
mov
pop
or
cmp
pop
push
inc
enter
xchg
ss
and
and
cld
xchg
mov
lret
dec
ljmp
aam
add
mov
rclb
mov
mov
xchg
ds
dec
aam
loopne
nop
movsb
pop
mov
mov
aaa
mov
cmp
jl
cwtl
loopne
fdivrl
lock
pop
pop
jge
and
mov
repz
out
mov
loopne
mov
je
cmp
daa
movsbl
adc
enter
enter
stos
loope
idiv
xchg
add
mov
push
mov
loopne
ljmp
mov
test
sbb
mov
add
lret
movb
pop
mov
inc
xchg
and
mov
dec
pop
adc
shlb
imul
cmp
mov
xchg
lea
roll
ds
inc
adc
add
imul
and
cmpsl
loope
pop
and
mov
jg
mov
cld
rorb
mov
xor
iret
popf
pusha
pop
pusha
inc
pop
pop
fistpll
into
or
fs
xchg
add
or
mov
test
push
cli
sbb
sub
push
inc
inc
inc
mov
adc
hlt
sbb
cmp
rcl
popa
and
or
pop
fdivrs
mov
mov
stc
mov
mov
xchg
scas
sti
daa
clc
pop
mov
xor
cmp
mov
inc
adc
xor
mov
sub
cs
ret
xchg
inc
or
rcrl
dec
jl
repnz
add
mov
mov
mov
sbb
clc
add
mov
add
mov
mov
inc
mov
mov
cmp
push
call
clc
addl
int
mov
jle
sub
push
icebp
or
cmpb
int
xchg
add
mov
int3
pop
add
push
mov
nop
and
xchg
nop
add
or
cld
push
leave
push
xor
push
cld
or
mov
inc
call
jne
pop
lret
jp
nop
mov
scas
aam
out
pushl
aad
pop
xchg
lret
add
mov
push
jno
inc
dec
out
pop
add
inc
xor
fcmovb
mov
xor
stos
add
add
int
jb
test
add
push
mov
in
out
dec
in
cld
push
fldenv
pop
mov
add
pop
and
cltd
jo
stc
outsb
and
daa
testl
ds
push
enter
movsl
pop
out
fbstp
inc
dec
arpl
jae
lahf
lret
push
scas
and
jge
pop
mov
mov
popa
push
loop
test
and
jno
scas
rorb
add
adcb
xor
pop
pop
sbb
dec
mov
jae
and
adc
add
add
mov
mov
and
pusha
arpl
add
mov
sbb
push
mov
in
and
clc
jp
in
mov
push
mov
mov
sub
add
push
jo
and
or
add
xchg
sbb
xchg
loope
add
insl
outsl
leave
and
xor
mov
add
fs
pop
add
dec
add
push
cltd
nop
add
add
push
or
xchg
add
es
add
mov
add
or
mov
sarl
sub
adc
call
dec
aam
adc
inc
js
jo
hlt
adc
lea
mov
xchg
push
push
xchg
fwait
aad
sub
scas
lock
fisubrl
and
jne
mov
mov
in
mov
into
dec
adc
add
jnp
in
adc
ds
nop
stos
mov
add
inc
add
dec
movl
aas
jb
movsl
sub
mov
pop
shl
xlat
add
adc
cmp
pop
sbb
jns
stc
mov
pop
cmp
in
pushf
adc
stos
ret
movsl
imul
loope
das
lods
jne
add
and
jb
and
pop
cmpl
mov
mov
int3
and
mov
mov
pushf
aam
pop
test
js
sub
fstps
push
add
ret
mov
test
pop
or
xor
or
adc
adc
outsl
mov
outsb
and
fisttpll
mov
std
adc
jo
sbb
ficoml
sarl
loopne
ss
and
dec
sti
ret
das
mov
dec
cmpl
mov
insl
ret
mov
stos
jle
add
push
or
shrb
add
push
aam
andl
push
lods
sbbb
cmp
adc
test
push
je
out
out
fdivl
test
je
roll
xor
les
sbb
jge
imul
fadds
nop
jmp
or
mov
mov
mov
out
mov
inc
cld
adc
movsl
inc
dec
fwait
movl
aas
push
in
rolb
xchg
jge
cmp
fsubl
std
les
out
pusha
insl
mov
fdivl
adc
push
jmp
inc
movsl
jo
leave
push
insb
or
sub
inc
aam
add
repnz
pop
jbe
adc
sub
pop
mov
ret
or
pop
sbb
ljmp
add
in
lods
sub
cmc
ret
sub
je
je
js
popa
lcall
xor
into
mov
iret
xchg
addr16
movsl
pop
into
pop
pop
sbb
or
int3
or
jmp
imul
add
inc
loopne
sub
jb
add
mov
xor
aas
aad
or
jmp
ret
add
jo
add
jmp
push
push
pop
loopne
test
mov
sbb
add
std
push
push
push
sub
dec
iret
rorb
dec
or
jne
subl
lahf
xor
push
imul
dec
mul
push
pushl
xor
xor
cmp
sub
mov
hlt
sub
cmp
imul
fcompl
sbb
cmpsl
mov
and
mov
mov
or
frstor
ds
cmpsl
or
push
jmp
push
inc
jae
clc
bound
xor
outsl
jmp
adc
es
jne
mov
push
cmp
adc
push
sarl
iret
orb
in
pop
mov
leave
scas
jp
sub
cld
out
aas
cld
cmp
or
bnd
sbb
cmp
jo
in
cli
mov
jmp
mov
push
adc
fistpl
call
cmp
sbb
mov
and
lock
js
call
fdivrl
sbb
and
js
add
pop
dec
popa
ret
add
loopne
xchg
xchg
outsb
cmpl
scas
or
jmp
add
mov
dec
enter
jb
jge
aas
or
push
sti
cmpsl
mov
mov
roll
mov
xor
sti
sbb
jmp
leave
inc
jbe
in
je
mov
popa
loope
adc
dec
push
xor
ret
pusha
lahf
inc
jnp
sub
xor
fwait
sbb
fs
xor
xchg
adc
ret
jl
xchg
jo
ds
add
into
inc
call
xor
xchg
cwtl
jl
loopne
mov
push
jae
sarb
pop
fldt
sub
cmp
cmp
pop
cmp
sbb
adc
andb
xchg
pop
pop
sub
mov
and
or
mov
das
inc
ljmp
xchg
mov
ds
xlat
sbb
sbb
das
test
and
jae
lods
adc
lea
push
or
adc
sbb
mov
adc
or
xorb
cmp
lcall
add
push
mov
jae
and
outsl
inc
sahf
add
add
orb
adc
bound
push
or
or
xorb
and
sub
inc
pop
mov
loopne
mov
mov
mov
cltd
imul
xor
push
pop
cwtl
sbb
shlb
jne
xchg
inc
nop
cld
jnp
push
jne
imul
and
mov
dec
ret
push
mov
lret
cs
loopne
test
mov
adc
cmp
jmp
or
and
jnp
std
jo
adc
pop
movsb
cmpsl
adc
push
jmp
or
jne
sbbl
test
les
xchg
lret
fdivs
out
je
ficomps
sbb
daa
ficomps
js
cmp
mov
xchg
fucom
test
push
dec
test
sbb
jp
jno
jl
test
dec
sub
dec
sbb
ret
sbb
pop
fadds
sbb
dec
xchg
test
inc
add
dec
mov
ja
push
dec
mov
sub
sub
fcoms
insl
xor
inc
jge
jne
inc
cmp
lods
mov
xchg
subl
sbb
push
push
or
jge
shlb
ret
rolb
icebp
pusha
test
lods
adc
aaa
lock
push
movsl
fidivs
stos
mov
dec
addl
xchg
icebp
push
add
sub
push
mov
cmp
push
sbb
sti
aaa
add
lret
movsl
insl
cmp
inc
add
andl
dec
lret
cmp
push
sub
imul
imul
push
mov
iret
add
test
in
pop
push
xchg
cli
add
cmp
lds
imul
or
and
adc
lret
aam
rcrl
sbbl
push
or
push
sbb
cmp
cmp
ljmp
das
mov
cmpl
lock
nop
adc
xchg
nop
decl
movsl
mov
sbb
push
icebp
add
enter
lret
jg
xchg
pop
sarb
xchg
cmp
mov
sbb
insb
mov
scas
and
imul
adcb
dec
test
shrb
lods
xchg
dec
rolb
rorl
test
xchg
mov
sbb
je
pop
mov
in
pop
rorb
jno
mov
pop
out
dec
push
fisubrl
inc
sbb
rcr
sbb
cs
and
sub
push
shlb
and
je
mov
jecxz
test
testl
adc
and
addl
add
mov
dec
push
xchg
mov
xchg
fsts
or
push
push
sbb
inc
into
sub
sub
and
sbb
je
add
repnz
xchg
xchg
inc
cmp
mov
rcr
inc
or
pop
fmuls
fadds
pop
mov
sbb
shrl
mov
outsb
xchg
pop
imul
and
aam
mov
shld
adc
aaa
push
adc
pop
les
jae
out
adc
push
push
adc
mov
sbb
js
mov
lea
push
dec
push
cmpsl
push
movsb
mov
xor
cmp
pushl
insl
sbbl
push
jnp
movsb
jmp
add
fidivrl
adc
jb
add
xchg
int
and
mov
hlt
mov
push
inc
sub
test
sbb
sub
lea
adc
loopne
mov
int
mov
push
ss
mov
add
mov
cmpl
jne
push
jo
jnp
sbb
and
int3
mov
and
and
movsb
sub
ss
lods
sbbl
mov
les
mov
inc
lods
add
dec
lods
or
fdivs
scas
pop
shlb
or
cmp
pop
inc
sub
xor
xor
cmp
add
rcrl
jo
js
push
ret
cltd
nop
or
sbb
jae
mov
push
mov
or
pop
ds
mov
imul
mov
xchg
cmpl
jmp
adc
pusha
fneni(8087
cmp
xchg
push
cltd
add
jae
loopne
jmp
test
in
je
push
xchg
mov
dec
mov
sub
clc
jbe
data16
clc
mov
sub
push
cmpsb
data16
cld
and
pop
inc
jbe
inc
push
loope
or
mov
add
push
sbb
loop
ret
dec
inc
mov
inc
loopne
std
in
xchg
sbb
popf
fbld
push
pop
xchg
mov
and
sub
jge
test
mov
fdivl
ret
addr16
add
int
xchg
insb
sbb
icebp
out
pop
je
mov
jo
fdivrs
pop
nop
mov
loop
js
fwait
dec
mov
jno
mov
enter
mov
cmpl
sbb
add
jb
sbb
or
ret
push
push
cmp
jnp
mov
adc
pushf
push
jp
inc
xor
rcrb
pusha
inc
test
pushf
clc
add
pop
outsb
mov
lldt
push
pop
add
mov
xchg
call
cmp
and
loopne
lret
cmpl
aad
lds
jb
jmp
mov
jp
push
inc
aaa
adc
push
mov
mov
xlat
ret
jno
sub
inc
add
push
scas
pop
mov
aam
mov
jecxz
inc
xor
aaa
leave
js
mov
dec
stos
cltd
cltd
pop
test
push
push
or
push
lahf
mov
cltd
or
sbb
jl
jge
pusha
or
sub
pusha
pop
pop
xchg
mov
mov
sbb
add
and
sbb
lds
popf
lock
cwtl
sub
pop
lock
push
mov
enter
mov
ss
xor
out
and
mov
xlat
jmp
sbb
mov
pop
push
cmp
xchg
or
sbb
insl
mov
pop
mov
inc
push
sbb
faddp
push
cmp
shr
shrb
jbe
je
cmc
add
roll
daa
mov
sub
mov
movsb
push
pop
adc
add
fstl
ljmp
add
inc
push
shlb
mov
scas
push
jb
mov
out
or
push
mov
xor
xchg
cmpsb
mov
push
cs
sbb
dec
out
push
jp
cmp
xchg
dec
test
pop
adc
jne
das
xor
push
inc
xchg
push
mov
hlt
sub
add
out
xor
adc
add
push
mov
or
xchg
sub
dec
push
xor
xchg
clc
ror
pushf
jae
ljmp
xchg
xchg
leave
cmp
cmp
shlb
cmp
xor
inc
sub
ret
dec
cmp
dec
js
lcall
mov
addl
popa
sub
xchg
lods
dec
adc
pusha
icebp
ret
lods
pusha
adcl
adcl
xor
call
loopne
fstp
cmp
pop
int
stos
mov
cmp
push
mov
add
adc
or
or
cmp
inc
dec
xchg
push
adc
mov
ss
mov
leave
push
inc
push
or
sub
inc
js
into
xchg
push
fcmovnb
je
or
out
mov
mov
adc
ret
dec
pop
out
pop
xchg
std
mov
pop
mov
xchg
mov
ds
sbb
aad
ss
fcoml
cs
mov
pop
push
scas
dec
jo
jae
push
fucom
mov
ret
inc
adc
pop
fwait
ret
dec
popf
sbbl
pusha
xor
int3
or
out
mov
aam
js
push
push
test
enter
adc
sbbb
or
add
mov
push
xchg
cltd
loopne
lret
cmp
xchg
cwtl
insb
or
push
pop
push
mov
decb
jge
push
or
push
cmpl
lcall
dec
icebp
rorl
cltd
push
das
jmp
sub
inc
rorl
int
clc
push
push
sbbl
ret
enter
lods
mov
jl
sub
push
cmp
sub
lds
xchg
or
loop
adc
sbb
sbb
enter
xchg
and
push
sub
xchg
jp
cmc
je
mov
js
fildl
jb
lock
into
and
loopne
adc
add
loope
xor
imul
rorb
in
pusha
pop
or
xor
lock
int
push
push
xchg
lock
dec
inc
dec
pop
sbb
xchg
push
and
sti
ret
cld
mov
pop
sbb
jmp
aam
mov
pop
cmpsl
dec
or
inc
pop
sbb
cmovle
in
mov
adc
pop
pusha
in
cmp
push
es
and
or
test
and
cmp
add
sub
test
or
dec
ljmp
and
ss
lret
adcl
and
and
lds
addr16
data16
psubw
insl
xor
fs
dec
pop
add
sbb
repz
addr16
jl
cld
push
adc
cld
enter
mov
sub
add
and
dec
clc
xor
pop
push
and
add
in
jo
ss
jne
mov
fcomps
pop
and
xor
scas
push
pop
push
icebp
lods
out
mov
xchg
test
jl
repnz
popa
fstps
mov
mov
sub
push
push
js,pn
in
test
push
and
jge
dec
mov
sahf
std
mov
cmp
mov
test
jp
popa
sbb
mov
cmp
sbb
add
imul
add
cmp
sbb
gs
aam
add
push
lea
movsb
aaa
jb
push
sbb
mov
scas
sub
int
and
cmpsb
jne
jns
or
pop
int3
pop
adc
pop
orb
lock
sub
push
dec
decl
js
dec
add
inc
or
mov
scas
rorl
push
ljmp
add
loope
xchg
repnz
clc
push
or
repnz
mov
sbb
mov
popf
scas
or
push
pushf
push
cmp
add
insb
inc
sahf
and
ljmp
add
push
mov
daa
test
jl
in
outsb
adc
imul
mov
ffree
jmp
into
out
push
loope
dec
mov
fadds
add
idiv
cmp
jmp
call
divb
adc
das
outsl
push
xor
outsb
xorb
mov
sti
xchg
hlt
sub
cmp
jl
mov
mov
sahf
fbld
cwtl
sbb
lea
or
mov
stos
insb
sub
inc
sub
dec
dec
jns
je
jnp
adc
lret
pop
push
and
mov
adc
jbe
sub
inc
add
jmp
dec
jecxz
cmpb
and
movsb
jp
imul
sbb
dec
add
dec
in
xor
push
and
or
and
cld
int
add
mov
fwait
mov
push
mov
sbb
adc
push
fsubrs
je
xor
insl
add
jbe
jne
pusha
jo
shr
mov
mov
scas
pushf
jo
sub
dec
movsl
sub
sub
sub
lods
and
lods
xchg
shrb
rclb
mov
pop
adc
jp
ficoml
js
xchg
push
inc
fwait
or
inc
fs
lea
les
xor
mov
mov
js
jmp
fisubs
mov
pushl
sub
js
mov
es
adc
outsb
push
mov
loopne
jecxz
cmp
sbb
cli
xchg
sbb
fsubl
add
mov
add
aaa
fdivs
mov
out
and
lcall
enter
push
mov
xchg
and
add
add
push
xor
loopne
sti
lods
pop
loop
pop
hlt
aam
inc
ljmp
les
mov
add
test
add
test
xchg
xchg
jne
aas
enter
mov
in
in
adc
sbb
cmp
sbb
out
imul
jne
adc
cmp
jl
jne
call
pop
sarl
xor
mov
jne
mov
aam
xlat
pushl
cmp
sahf
mov
int3
daa
jo
sbb
ror
int
adcb
pushf
or
or
jmp
lea
cmp
test
inc
fdivr
jo,pt
fcomps
loopne
sub
or
repnz
cld
sub
dec
jae
cwtl
inc
jnp
es
movsl
test
dec
xchg
rcr
sub
fcoms
les
dec
movsb
inc
mov
mov
nop
adc
xor
cmp
sub
mov
sbb
mov
inc
add
pop
push
push
push
test
aad
mov
mov
mov
jb
sarl
outsl
jp
or
push
addr16
call
sbb
loopne
inc
pop
mov
dec
scas
inc
mull
movsl
sub
test
add
mov
enter
loopne
mov
jg
push
nop
xor
push
mov
lds
sub
mov
mov
cmp
push
sub
enter
push
adc
adc
daa
movsl
adc
mov
adc
pop
mov
rcl
fld
sub
jb
and
into
test
gs
fcmovnu
or
or
push
shlb
xchg
or
rcrb
pop
cmp
dec
rolb
fisttpl
mov
or
pop
sub
dec
repz
imul
add
cmp
jne
push
push
je
xor
lock
repz
sbb
dec
insb
jne
or
add
adc
add
ss
cmp
sub
mov
mov
add
cmp
je
add
jle
mov
push
or
and
cmc
aam
and
cmpsb
xchg
and
sub
inc
add
sbb
xor
insl
addr16
pop
xchg
lock
xchg
call
outsb
jnp
push
sti
xor
cmp
push
cmp
idivb
outsl
inc
sti
cmp
jl
mov
mov
test
xor
push
fidivs
pop
movsb
sub
sbb
dec
std
sbb
in
push
cmc
push
add
rorb
push
fcompl
pusha
and
sbb
jns
cmpsb
loopne
outsl
fcoml
rorb
dec
pusha
jg
aam
and
sbb
mov
stc
das
and
adc
mov
adc
or
nop
pop
data16
loopne
pop
fstpl
add
or
or
rorb
rcrl
mov
mov
xchg
fs
add
sub
pop
and
or
js
out
adc
xchg
movsl
mov
mov
nop
mov
inc
or
or
inc
add
cmpb
movb
add
sbb
mov
lcall
adc
mov
ret
inc
jle
add
shll
insb
jo
add
dec
je
jl
add
int
or
call
mov
enter
mov
or
push
xor
sahf
mov
xchg
jae
mov
sbbb
scas
sub
dec
jge
mov
inc
jbe
imul
int
adc
and
pop
push
shrb
into
pop
add
fisttps
sbb
sbb
sbb
sti
xchg
and
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
das
sbb
adc
pop
sub
push
push
fmul
push
and
and
pop
ret
fdivrs
dec
cmc
add
xchg
ss
pop
sbb
test
xchg
orb
add
jo
push
jo
call
sbb
jle
addps
dec
jl
js
orl
add
adc
mov
or
jne
mov
add
test
xor
adc
cmp
add
push
stc
iret
lock
sbb
inc
jne
sbb
pushf
mov
dec
pusha
dec
cmp
aaa
mov
loopne
leave
jb
ret
or
sbb
or
or
mov
xor
push
mov
data16
xor
xchg
movb
lods
test
in
ds
mov
fisubl
pop
inc
sub
sbb
push
xchg
jbe
pop
xchg
add
shl
ret
mov
enter
pusha
and
dec
ret
xchg
mov
add
xor
and
das
aaa
fnsave
inc
addl
jne
idivl
roll
inc
dec
adc
imul
loop
iret
xor
and
mov
xchg
add
jo
mov
lea
sti
mov
mov
stc
ja
pop
movsl
fldl
sar
lds
divl
leave
dec
add
xor
ret
shrl
sub
fnsave
sti
sbb
imul
push
push
mov
mov
roll
xchg
stc
push
jne
mov
loop
push
shrb
pop
mov
lds
ss
cmp
je
xor
lahf
mov
xorl
pop
adc
insl
fwait
push
lahf
or
mov
jo
cld
sub
dec
xlat
bound
dec
mov
in
adc
and
jge
dec
xchg
mov
ret
js
testb
mov
movsb
pop
test
imul
push
pop
sbb
into
inc
mov
mov
push
inc
cmp
mov
dec
cmp
lock
ds
mov
sbb
jo
cli
out
fidivrs
mov
cmpb
mov
or
sub
arpl
gs
inc
pusha
xchg
dec
lods
pop
jmp
xchg
adc
cs
dec
mov
mov
test
xchg
sbb
jne
shrl
xor
pusha
mov
mov
test
lods
scas
daa
cmp
enter
xchg
push
add
outsb
inc
xchg
sub
and
outsl
das
mov
dec
jb
sbb
mov
mov
cli
sbb
or
mov
out
rcl
and
add
jp
sbb
xor
sub
int3
lock
ja
insl
pop
inc
inc
aaa
inc
lock
add
inc
aaa
and
add
loope
or
nop
push
or
push
gs
je
pop
push
sbb
fs
pusha
insb
adcl
fsubrl
or
lret
cmp
push
inc
jnp
mov
or
js
iret
mov
pushf
cmp
cli
je
popf
add
js
xor
dec
lds
mov
inc
sbb
adc
push
sub
mov
sub
mov
cmpsl
js
and
add
les
cmpsl
dec
roll
addb
add
dec
adc
nop
dec
or
jnp
lock
inc
cs
lock
shl
hlt
cmpsl
scas
add
stos
adc
insl
push
push
pushf
hlt
ja
push
repz
add
add
xchg
push
jo
out
mov
testl
shr
mov
lret
add
push
sub
pop
mov
mov
adc
jmp
sub
xor
cmp
inc
cmpsl
push
mov
adc
pop
hlt
jecxz
inc
sahf
push
flds
pop
push
xchg
addl
xchg
mov
add
in
lock
or
dec
jmp
adc
cmp
push
loopne
mov
pop
pop
mov
sbb
inc
jbe
nop
cmp
sbb
adcb
data16
lcall
sbb
jns
in
insb
and
inc
sbb
cmovno
jo
popa
sub
xor
mov
push
cs
insl
sub
test
adc
rolb
sahf
divb
outsb
les
je
ret
add
add
mov
or
fistl
mov
cwtl
fidivrs
lcall
mov
mov
sbb
add
js
push
push
cwtl
dec
push
lea
mov
mov
add
push
jo
add
mov
enter
sbb
in
jne
adc
imul
push
movsbl
mov
mov
pusha
mov
push
test
push
daa
mov
push
inc
cs
inc
pusha
sub
icebp
pop
arpl
dec
loope
cwtl
ja
pop
test
and
cmp
inc
enter
mov
ss
movsb
sub
ficompl
cmp
cmp
movsb
adc
pop
push
cs
shrl
cmp
es
inc
clc
jp
imul
aam
or
popf
dec
ret
jge
int3
mov
and
add
mov
xor
push
jb
pop
mov
daa
and
or
adc
or
inc
sbb
xorb
push
or
pop
out
fdivs
jb
out
jmp
dec
rol
xor
xor
mov
sbb
adc
and
ret
addl
mov
adc
ret
dec
xchg
sbb
lds
pop
out
push
lea
and
mov
cli
sub
and
icebp
xor
int
inc
in
sub
cmpsb
push
push
push
push
or
ja
pop
into
fiadds
mov
cltd
lea
fidivs
pop
inc
int
dec
nop
inc
inc
push
fmuls
loop
push
pushf
aad
push
lods
imul
mov
dec
je
fiaddl
or
orl
mov
xor
sti
popa
mov
rcrb
adc
jecxz
jb
mov
inc
xor
dec
jno
mov
pusha
xor
mov
movsl
add
jl
mov
ja
pusha
mov
sbb
and
insb
lea
push
adc
add
or
add
sub
jae
lock
push
xchg
shlb
xor
mov
mov
xor
and
mov
push
cmp
inc
xchg
add
insb
stos
sbb
cmp
test
push
fdivp
sub
sarl
dec
xor
imul
and
xchg
out
push
and
sbb
movsl
aaa
and
mov
ss
and
test
ljmp
jl
repnz
dec
jge
repz
icebp
dec
decl
lret
and
scas
xor
push
aam
hlt
repz
xchg
sub
in
sbb
xor
subl
or
mov
inc
imul
push
xchg
orb
test
fsubl
es
pop
sub
adc
sbb
sub
adc
ss
mov
inc
inc
jg
adc
add
push
push
lret
push
cmp
into
or
cmp
push
test
push
out
push
and
les
mov
jp
push
add
pop
cmp
or
pop
lea
popf
push
and
cmp
cmp
sub
arpl
nop
xchg
pop
pop
push
lods
jge
cmp
push
pop
dec
and
aas
pop
cmpsb
or
add
and
and
test
je
jg
ret
dec
xor
call
or
cmp
add
add
add
lods
or
mov
cmpsl
mov
nop
mov
lods
xor
jne
call
or
push
test
stos
test
pop
mov
sub
pushf
adc
and
xor
push
lods
add
mov
cs
add
sbb
xchg
push
nop
ss
sub
add
dec
or
ss
xchg
add
push
inc
xor
leave
push
jb
xor
add
dec
pop
mov
fs
jg
add
fwait
rolb
rol
xchg
cmp
adc
enter
add
sbb
cld
add
js
or
jle
lods
push
add
push
fmuls
adc
push
inc
xor
add
iret
add
push
sub
inc
outsb
jbe
ljmp
pop
ss
cmp
push
dec
pop
outsb
inc
cmp
vcvtsd2si
adc
push
inc
in
push
and
or
cs
push
push
push
arpl
lods
orb
js
aas
mov
aaa
cmpl
pushl
add
push
pop
mov
lds
clc
lea
push
subb
ret
cmpsl
mov
inc
gs
roll
inc
mov
or
jbe
mov
into
enter
sub
push
sbb
sbb
popa
stos
sub
mov
jl
inc
inc
lock
andl
adc
xchg
pop
mov
js
ss
pop
jae
xchg
adc
dec
xlat
inc
jae
cmpsb
js
leave
mov
or
dec
xor
adc
mov
dec
jo
push
or
lea
dec
adc
insb
mov
mov
stos
ret
push
fcoml
fbstp
sub
or
out
xchg
push
popa
cs
aam
idivl
mov
adc
andl
rcrl
mov
and
inc
and
jmp
mov
push
xor
loope
loop
je
push
pop
and
mov
xor
pop
mov
pop
and
js
in
pop
adc
adc
cmp
outsb
das
pop
bound
xor
inc
push
add
fsubr
insl
fcomp
arpl
je
jns
mov
movsl
add
jne
sub
enter
push
mov
lock
sbb
push
push
sub
xor
jle
call
sbb
pop
cs
cmp
sbb
add
or
outsl
pop
testb
nop
outsl
mov
sub
xchg
xor
or
cmp
xor
and
xor
push
fildl
lret
jl
inc
sbbb
and
push
sbb
fisttps
xchg
push
push
leave
pop
sub
or
adc
xchg
cmc
pop
gs
or
lahf
out
or
mov
rorb
mov
inc
and
mov
nop
add
inc
push
jo
dec
add
fstl
or
add
popf
cmp
adc
dec
popf
sub
sub
out
push
xor
ret
mov
pop
add
or
imul
mov
sub
jecxz
mov
xor
cld
push
test
mov
xchg
sahf
or
scas
mov
adc
jmp
push
cmovle
push
push
mov
mov
data16
mov
xchg
mov
mov
adc
sub
dec
adc
out
neg
adc
popf
sub
mov
sbbb
cmp
movsb
scas
sbb
or
mov
es
push
sbb
xlat
dec
fwait
aas
push
sub
sbb
push
push
push
inc
dec
cmc
scas
jg
cwtl
imul
idivl
push
or
mov
jbe
lds
push
mov
repnz
pop
or
push
bound
jmp
push
das
xchg
lret
mov
or
dec
push
and
mov
movsb
fxch
lods
push
je
pop
xor
dec
shlb
push
orl
sbb
in
add
mov
xor
mov
sub
push
rcrb
add
popa
push
mov
xchg
fmuls
push
les
bound
daa
js
xor
adc
cmc
push
push
inc
lock
addl
add
imul
or
and
lods
je
sub
inc
adc
mov
mov
sar
push
insl
jns
dec
cmp
or
add
cmp
arpl
test
adc
or
sbb
movsl
fsubrl
mov
inc
outsl
or
or
jae
divl
daa
add
xchg
or
fdivs
cmp
fdivr
dec
add
dec
insb
repnz
ss
pop
cmp
dec
fcmovnb
adc
mov
arpl
insl
xor
call
repz
mov
add
cmp
fcoms
out
int3
movsl
std
cmp
adc
sbb
or
cli
aam
jne
out
shrb
add
jb
xchg
push
clc
pop
push
or
mov
aam
mov
push
fs
loop
gs
push
push
add
add
in
mov
xor
aas
inc
pop
pop
jmp
sarb
push
mov
mov
xor
mov
inc
cli
push
cld
daa
test
push
cld
sub
lds
nop
lret
les
push
inc
inc
insb
shr
push
jne
add
test
push
or
lret
sahf
loopne
adc
cmp
inc
sbb
add
cmpsl
sbb
or
mov
lods
ljmp
dec
dec
push
push
mov
cld
adc
adc
repnz
xchg
bound
out
in
sub
out
sub
jae
movsl
mov
loopne
dec
imul
bnd
pop
popa
sbb
push
arpl
pop
push
mov
inc
lock
add
es
pop
dec
jns
hlt
add
or
mov
je
enter
mov
and
push
mov
xor
jno
loopne
mov
aam
dec
js
push
sbb
push
mov
xor
pop
addb
popa
push
jge
js
dec
push
and
sub
bswap
or
cltd
enter
push
jl
shr
int
out
push
push
mov
adcb
int
insb
pop
das
je
scas
int3
adc
pop
adc
cmp
cmpb
and
push
add
mov
out
movb
mov
inc
add
cli
sbb
loopne
mov
add
jno
mov
call
jmp
scas
add
je
jmp
push
out
movsl
or
jnp
lcall
fwait
out
push
push
lea
and
dec
adc
adc
jle
add
inc
xor
addb
addr16
sbb
mov
ret
xchg
add
sub
mov
test
or
nop
push
jne
repz
or
or
negb
mov
cmp
dec
xor
xor
cmp
pop
cmpltps
insb
sbb
inc
cmp
sub
je,pt
mov
lret
test
push
jne
out
test
mov
icebp
loopne
cmp
xor
inc
imul
sub
call
sbb
jbe
dec
sbb
stos
xchg
dec
push
cmp
inc
push
repz
xor
in
lea
outsb
add
ja
push
stc
push
ja
adc
push
outsl
push
xchg
and
pop
and
sbb
adc
pop
rcrl
pop
or
adc
sar
imul
mov
inc
lock
xor
add
cmp
push
jbe
xor
cmp
test
xor
mov
xor
lods
aam
xchg
push
push
test
testl
pop
je
stos
dec
repnz
sbb
adc
out
call
dec
mov
mov
xor
nop
push
push
add
ret
insl
cmove
lcall
js
cmc
ficoml
jmp
or
or
shld
push
inc
sbbb
lret
mov
sbb
nop
push
pushf
mov
pop
ret
sub
pop
cwtl
fnsave
add
jmp
inc
dec
testl
ret
testb
jle
xor
loope
sbb
neg
ret
adc
and
rorl
mov
and
andb
insl
jne
test
imul
pop
in
lock
sbbl
jo
push
sbbl
mov
sti
and
pop
lods
jmp
pop
pop
enter
push
push
hlt
or
inc
addb
cltd
shlb
in
or
xchg
xlat
pop
pusha
sub
xor
dec
rorl
cmp
add
cmp
add
ret
sub
jns
testl
xorl
lret
pop
dec
rolb
sbbb
lods
pushw
and
sub
dec
pop
test
or
adc
mov
mov
dec
push
mov
cmp
rcr
lock
add
lret
mov
push
aad
adc
pusha
adc
adc
inc
pop
mov
and
mov
xchg
mov
pop
jno
nop
rcl
add
dec
adc
adc
in
push
pop
pop
orb
andl
cmp
adc
xor
sub
mov
push
or
lea
or
cmp
cmp
jecxz
pop
fldl
pop
cld
push
daa
adc
push
adc
cmp
mov
sti
pop
add
shl
mov
fidivs
je
xor
rolb
mov
imul
xchg
sbb
push
nop
fs
sarb
jp
cmpsb
jne
ret
outsl
cwtl
dec
fucomi
lahf
mov
bound
sub
sub
mov
adc
mov
insl
sti
das
adc
mov
inc
pushw
or
ds
xchg
jo
movsb
xchg
or
jne
mov
push
push
sahf
popa
jnp
pop
add
test
outsb
cmp
mov
jbe
adc
movsl
xor
inc
adc
loope
pusha
inc
pop
loope
add
int3
lds
loope
push
mov
addr16
and
jbe
lcall
imul
mov
mov
sbb
daa
mov
stos
js
sub
inc
ret
or
adc
and
pop
pop
pusha
push
adc
pusha
jg
or
adc
test
mov
test
loopne
mov
and
gs
je
add
add
inc
or
rorb
mov
adc
clc
jecxz
push
bound
jp
sub
sub
or
xor
addb
in
add
fcmovnb
xor
in
mov
aaa
popf
sub
shll
or
push
adc
add
adc
mov
movsl
rdpmc
ds
cmc
xor
cmp
dec
ret
insl
dec
ret
inc
push
or
adc
cltd
push
inc
sbb
rolb
dec
loopne
adc
out
cltd
xlat
and
and
movsl
cmp
cmp
loopne
push
or
cld
jne
push
or
dec
pop
mov
add
add
sub
lds
popf
iret
cmpl
mov
pop
fsubl
js
add
xor
jmp
xchg
rclb
repz
inc
das
fwait
inc
pop
out
add
jle
or
push
or
lods
xor
push
or
push
pop
ret
jp
xor
rol
and
iret
push
add
jbe
pop
scas
dec
mov
daa
push
push
mulb
xor
lcall
xchg
inc
out
add
andb
loopne
je
adc
xor
xchg
dec
push
dec
lods
pop
or
sbb
enter
mov
nop
add
cmp
xor
in
jb
pop
add
pop
shlb
ds
dec
in
mov
add
js
inc
int3
jg
pop
mov
jge
jge
mov
adc
sub
insl
adc
inc
push
js
lods
lods
movsl
test
inc
xchg
sbb
fsubrp
loop
cmpl
pop
mov
int
push
ret
pop
rcrb
hlt
cmc
fmul
mov
pop
test
enter
push
ret
push
ret
loopne
mov
push
ds
push
mov
cltd
aas
mov
ret
cmp
jne
pop
inc
add
adc
daa
add
xchg
pop
fldln2
mov
push
xchg
ret
lret
jmp
sbb
mov
out
jl
or
sbb
add
sbb
jmp
negb
xchg
mov
decl
or
jns
in
adc
push
cmp
movsb
sbb
sbb
cmpsl
and
fidivl
adc
inc
push
js
xor
cmp
push
gs
mov
dec
in
faddl
push
xor
fimuls
imul
mov
dec
clc
ss
fmuls
mov
outsb
data16
push
and
test
rclb
subb
pop
lahf
aam
push
outsb
jge
add
scas
add
sete
mov
or
test
lahf
ds
clc
sub
sbb
sub
push
xlat
rcl
dec
stos
mov
pop
mov
adc
sbb
push
addr16
xchg
xchg
or
outsl
cmpsl
dec
push
and
push
je
mov
sbb
dec
arpl
mov
add
dec
jecxz
add
movl
mov
or
mov
mov
rcrb
mov
fidivs
sbb
push
push
and
rcrl
mov
add
mov
inc
pop
inc
adc
lret
stos
popa
and
push
jb
or
movsl
add
inc
sub
mov
xchg
sub
aad
add
leave
stos
push
mov
or
sbb
adc
in
add
or
cmpsl
dec
cmp
rcr
jp
rorb
inc
mov
ds
jno
fiadds
leave
sub
sub
aam
fadds
out
pop
jb
dec
test
adc
subb
xchg
push
push
loopne
or
add
lcall
inc
xor
xor
aaa
loopne
cmp
in
mov
xor
dec
cmp
adc
adc
add
and
orb
mov
movsb
pop
adc
subb
xchg
cmp
sbb
xchg
mov
pop
xchg
fdivr
les
mov
arpl
add
add
or
mov
mov
mov
adcl
or
or
add
orl
sub
adc
out
adc
xlat
add
lock
popa
into
cmc
or
scas
cmp
cmp
push
push
fmuls
jne
cmpsl
in
push
inc
jo
xchg
push
inc
inc
lock
add
mov
lock
push
pop
xchg
xorl
mov
pop
push
ss
push
jmp
mov
mov
jnp
mov
and
cmpl
rcrl
dec
movsl
or
outsl
test
pop
jne
xor
adc
int3
cwtl
and
cmp
lcall
rorb
ds
jne
test
and
imul
sbb
sbb
sbb
mov
or
dec
dec
adc
cs
mov
adc
or
jl
or
mov
xchg
jo
mull
das
push
sbb
xor
ja
jmp
std
and
rcll
sub
adc
roll
push
jecxz
adc
addl
xor
out
sub
into
xor
mov
jo
or
test
push
ss
test
cmc
add
rclb
push
pop
std
pop
movb
add
and
cmpsb
mov
and
divb
pop
jae
sub
aam
test
jle
subb
mull
pop
mov
or
js
mov
ficompl
ss
cld
xchg
sbb
xchg
roll
add
add
repz
xchg
jnp
push
sub
push
xor
fmull
popa
mov
dec
fldl
sub
push
dec
sub
sbb
add
mov
adc
out
or
add
arpl
packsswb
xor
loope
mov
pop
shll
add
pop
loop
pushf
lret
cmp
cmpsb
cmp
repz
imul
sbb
sub
add
jecxz
in
dec
cmpsl
arpl
cmpl
sub
fsubs
stc
cmp
adc
jle
lock
add
jb
dec
out
test
test
and
or
les
repnz
xchg
or
push
shlb
mov
je
adc
je
cmp
je
aam
pop
add
adc
push
adc
xor
or
mov
mov
jbe
mov
dec
adc
or
fdivrp
and
daa
lcall
cli
mov
insl
push
scas
push
inc
dec
dec
xchg
sub
je
mov
mov
mov
inc
cmp
add
in
cmpsb
fisubrl
jnp
mov
inc
movl
sbb
fidivrs
mov
fisubl
cld
jge
mov
or
adc
shlb
sub
xorl
sub
inc
aas
push
pop
pop
fsubrl
push
cmp
cmc
filds
mov
outsl
std
add
mov
nop
push
data16
adc
movb
inc
pop
mov
add
or
roll
or
cwtl
mov
xchg
sahf
adc
cmp
fistl
inc
js
add
add
jl
jmp
adc
stos
cltd
push
enter
sbb
jne
sub
pop
cmpsb
push
mov
mov
lahf
push
lds
dec
or
je
fs
mov
test
sbb
jno
in
or
push
xchg
dec
push
xchg
jo
sbb
inc
ss
jmp
push
jo
add
mov
jne
sub
and
xlat
sub
pusha
cld
jb
sub
sbb
xchg
dec
add
dec
or
fsubs
addb
enter
jae
shlb
or
adc
xchg
xor
cmp
sub
xchg
mov
lahf
jb
inc
and
and
rcr
jb
jne
xor
jae
and
bswap
ret
pop
pcmpgtw
loope
inc
ss
jmp
push
cltd
mov
jmp
push
cmpl
add
daa
adcb
cmpsl
insl
lahf
test
sti
gs
pushw
outsl
test
fbld
push
push
addr16
pop
xchg
test
loop
into
add
mov
mov
dec
sub
jne
push
push
roll
sbbb
repz
mov
add
mov
adc
or
sbbl
and
jo
push
mov
cmp
mov
push
mov
lret
mov
dec
mov
xchg
xchg
push
dec
cmpsl
pushf
xchg
insb
loopne
neg
movsl
movsl
push
sbb
shrl
add
lods
xor
push
popa
lea
sahf
test
inc
push
iret
push
int3
adc
pushf
jo
pop
fstpt
loopne
out
rorb
ss
cltd
inc
push
pop
call
jle
jnp
cmp
dec
insl
ss
cmc
fs
or
hlt
cltd
fdivl
xor
cwtl
icebp
test
add
das
xor
inc
push
xchg
dec
test
in
popf
lcall
pop
in
push
cmp
clc
mov
mov
sbb
adc
aad
shrb
mov
loopne
jge
jnp
jge
and
adc
loopne
loopne
add
xchg
xor
jle
cvttps2pi
roll
sbb
mov
push
stos
mov
incl
jne
cmc
ret
inc
mov
push
icebp
adc
arpl
ljmp
sbb
push
sbb
popf
add
sub
mov
pop
adc
push
sahf
jno
inc
pop
inc
addr16
xor
or
jne
sub
push
rorb
pop
fs
inc
xlat
sbb
or
add
lretw
loopne
adc
mov
sub
adc
add
pop
cmp
popa
and
cmp
jae
inc
sub
push
ficoml
sub
add
and
loopne
add
or
and
xchg
push
enter
xchg
push
repnz
gs
cli
xchg
adcb
inc
test
in
loop
and
sti
in
mov
pop
addl
mov
add
daa
cmp
push
jb
xchg
lret
mov
dec
cltd
dec
sahf
imul
cltd
adc
bound
iret
cmp
sar
cmp
jae
add
stc
add
pop
cmp
jne
sbb
xchg
and
adc
jl
popl
jle
or
xorps
adc
add
cmp
push
inc
loope
mov
pop
inc
push
inc
add
mov
sub
push
sbb
add
or
jmp
push
in
or
jge
cwtl
dec
clc
mov
fidivrl
jle
lock
xchg
testl
call
cwtl
or
lock
les
jmp
jecxz
imul
sub
add
clc
fcmovb
push
push
push
adc
ror
push
imul
adc
enter
repz
rclb
jb
push
inc
dec
add
push
push
dec
clc
sbb
jns
inc
mov
mov
xchg
shll
clc
sub
jge
in
js
adc
dec
rorl
mov
dec
jl
adc
loopne
enter
enter
mov
add
push
xchg
popf
loop
imul
or
sub
pop
pop
push
cs
arpl
jge
ja
sub
mov
and
mov
inc
lods
or
std
lahf
dec
sbb
adc
adc
imul
sub
pop
repnz
add
mov
or
push
hlt
jge
push
xor
add
orb
repz
add
push
push
mov
mov
cli
add
shll
push
leave
push
xor
sbb
push
rcrl
cmp
mov
testl
test
adc
mov
xor
inc
lock
add
adc
add
mov
inc
popf
sub
inc
sbb
push
enter
pushf
push
xor
cli
adc
mov
or
in
add
stc
add
lods
xor
push
test
fwait
push
sub
lea
add
mov
cmp
push
mov
lock
pop
pop
jmp
arpl
in
loope
aam
les
inc
clc
adc
and
sbb
testl
stos
push
add
enter
in
stos
push
or
adc
aad
repnz
fwait
pop
mov
andl
xor
aas
lock
aam
mov
test
std
and
aas
ja
push
pop
popa
ljmp
or
stos
rcl
mov
push
adc
pop
add
push
ret
sbb
ss
fs
bound
sbb
push
ret
ret
sbb
imul
cmp
addr16
add
cmp
sbb
inc
and
icebp
jno
inc
rcrb
jo
cli
pusha
lock
adc
mov
jnp
scas
inc
arpl
pop
cmpsl
pop
push
mov
xchg
imul
cld
je
les
rcl
jbe
jb
pop
xor
nop
sbb
push
push
out
add
push
add
sub
sbb
lods
nop
repnz
hlt
cmpsl
and
jle
jbe
push
mov
clc
cli
sub
push
lea
test
sbb
push
mov
push
and
cmpsl
xchg
or
inc
and
push
int3
mov
add
sbb
add
cmp
fdivl
push
leave
mov
mov
arpl
ljmp
pop
rcl
cmpsl
jo
pop
sub
pop
push
lea
mov
imul
mov
adc
add
mov
shr
sbb
push
sub
mov
nop
and
shr
cmp
adc
add
jecxz
out
jecxz
push
sbb
mov
pushf
mov
or
shll
xchg
arpl
cmp
stos
xchg
push
dec
stos
xchg
xchg
sub
sbb
ljmp
adc
pop
mov
and
stos
movsl
enter
mov
ljmp
add
inc
mov
cmp
out
ficomps
insb
xchg
imul
pop
je
push
mov
in
addr16
rorl
and
shlb
or
addr16
iret
ss
jle
je
add
dec
dec
faddl
push
add
test
enter
push
xchg
push
ds
push
adc
dec
rcll
push
add
insl
mov
jo
rcll
mov
mov
shrl
pop
ret
aaa
push
shl
xor
enter
sbb
add
inc
or
jmp
or
jns
mov
loopne
jno
dec
pop
sbb
adc
sbb
ss
js
cmc
push
mov
add
xchg
or
push
hlt
pop
xor
pop
ret
sub
mov
mov
mov
push
les
pusha
sbb
leave
js
je
and
jle
iret
xchg
push
inc
jmp
xchg
xchg
and
or
push
push
andb
and
andps
add
inc
and
addl
inc
sub
inc
add
je
fcoml
pusha
imul
and
add
pop
popf
xchg
mov
pop
xchg
in
lods
out
mov
mov
push
clc
rcll
sbb
iret
mov
cs
fcoml
pop
cld
sub
test
insl
sub
push
pop
testl
nop
jbe
and
lea
add
push
push
cmp
xor
xchg
xlat
xor
popl
xor
inc
push
scas
cwtl
sbb
loopne
inc
leave
xchg
rorb
dec
sbb
or
cmp
or
rorb
inc
xor
lock
jne
sub
jno
push
inc
xchg
add
sbb
jl
test
jg
cmp
ror
xchg
mov
sub
mov
pop
mov
pop
mov
mov
cmp
sbb
push
lcall
mov
shr
not
mov
sbbb
pop
push
sbb
out
lock
jbe
es
xor
push
add
inc
mov
test
mov
addr16
sub
dec
fwait
sbb
xor
stc
repnz
xor
jns
jns
xor
cmp
mov
jp
dec
hlt
dec
inc
out
inc
clc
fiaddl
pop
and
enter
jecxz
mov
jg
js
add
jg
or
inc
add
sbb
xchg
pop
vcvtsd2ss
inc
jae
stos
mov
inc
icebp
jno
data16
push
decl
je
add
dec
jno
jne
in
or
bound
fiadds
sub
loope
lds
in
pop
leave
jnp
aad
jl
mov
imul
movl
cltd
or
dec
rcrl
inc
push
pop
outsb
lahf
outsb
xor
inc
jmp
or
adc
adc
and
ss
xchg
xor
jo
lcall
ret
pop
adcb
test
push
loope
push
lahf
or
sbb
test
call
std
clc
sub
xor
cltd
arpl
lods
dec
pop
inc
lret
mov
shrb
loopne
repnz
mov
and
or
gs
ret
cltd
cmp
jno
inc
xor
mov
inc
jl
and
add
xchg
arpl
add
mov
adc
sub
cmp
test
push
aam
call
in
sahf
mov
test
mov
cmp
sub
fadds
repz
adc
adc
stos
push
pop
loop
orl
out
das
fs
sbb
jmp
sub
out
inc
loope
jae
leave
shlb
add
inc
pushf
cmpb
in
arpl
aam
stos
cmpl
push
xchg
jae
push
push
std
mov
loope
data16
push
push
mov
or
pop
loopne
adc
stos
mov
inc
data16
xor
ret
adc
adc
pmaxsw
aas
call
push
add
xor
mov
push
add
rclb
jno
test
loopne
sbb
pop
dec
sbb
mov
dec
inc
daa
sbb
xor
add
cltd
pop
leave
repnz
mov
adc
inc
push
mov
inc
jecxz
scas
push
flds
fsubrs
mov
add
in
inc
jnp
pop
adc
push
push
push
inc
sub
dec
mov
pop
rcrb
mov
jae
push
test
mov
outsb
mov
inc
push
push
mov
mov
xor
mov
xchg
push
sahf
adc
mov
rclb
int3
adc
mov
cwtl
sbb
push
or
inc
mov
cmp
mov
les
dec
mov
xor
push
sub
mov
adc
push
arpl
mov
cmp
pop
mov
push
mov
stos
and
orl
sbb
xchg
outsb
mov
rorb
mov
addl
inc
inc
bound
jne
cmc
add
push
dec
sbb
out
xor
pop
inc
data16
and
push
or
or
and
imul
and
adc
or
test
lea
mov
js
addb
or
adc
iret
pop
test
adc
fimuls
pusha
into
mov
aaa
jnp
push
fs
mov
add
arpl
testb
cmpsb
xchg
mov
jnp
test
adc
orl
and
adc
shrl
xor
dec
adc
xor
les
add
insb
cmp
xorb
or
test
mov
or
cmpsl
push
or
sub
sar
cmp
and
add
rorb
cmp
xchg
mov
jns
mov
and
xor
rcrl
sub
jecxz
or
jbe
insl
sub
jo
jle
in
ret
cli
mov
movsl
jmp
jnp
lock
or
ret
sahf
pop
pop
add
ja
test
mov
cmp
add
adc
push
les
push
mov
xor
out
shrl
js
cmp
dec
scas
xor
fidivrl
push
push
dec
xchg
push
dec
ret
adc
cmp
and
rclb
rorb
add
pop
lods
nop
ds
jl
cmp
xor
or
notb
je
push
shlb
lret
sub
or
or
loopne
jb
and
cmp
jb
or
mov
add
sub
or
or
add
or
push
xchg
ret
hlt
pop
pop
mov
pop
loop
shlb
xchg
jo
adc
adc
push
dec
push
mov
lods
cmovo
inc
push
lock
in
push
mov
stc
jne
sub
sarl
incb
loopne
add
cmp
fnstenv
mov
cmp
jb
jae
ror
scas
xchg
push
push
push
jmp
dec
movsl
lea
lods
jae
adc
or
pop
xor
dec
enter
or
cmpsb
push
test
mov
shlb
push
xchg
add
out
mov
dec
cmc
data16
pop
jl
sub
jp
adc
pop
mov
imul
jno
adc
sub
sub
stos
popf
mulb
xchg
stos
inc
mul
add
imul
inc
or
mov
sub
loopne
arpl
push
jo
aam
add
ret
loop
inc
and
inc
cmp
es
add
stos
mov
push
nop
dec
xor
movsl
sti
sub
add
outsl
je
sbb
fsubs
pop
popa
daa
or
cmp
movsb
cmp
cmp
jnp
xchg
mov
cmp
popa
ja
adc
fsubl
popa
mov
nop
and
ss
adc
or
xchg
fnsetpm(287
or
jbe
push
jbe
arpl
les
cmp
mov
jbe
adc
cmp
add
pop
pushf
adc
jnp
sub
add
mov
or
and
add
pop
mov
cmpsl
jne
ss
jbe
ja
sub
sbb
rcrb
dec
xchg
into
push
jmp
arpl
push
jbe
orb
add
or
hlt
aam
and
and
sub
adc
inc
xchg
fdivs
daa
rcr
add
push
dec
mov
add
inc
jae
inc
jle
push
and
nop
add
pop
jnp
insb
pop
enter
jg
and
pop
enter
in
pop
enter
jl
in
add
fdivs
or
aas
enter
xor
mov
in
pop
cs
test
push
or
pop
das
insb
pop
cmp
xchg
add
pop
push
cmp
nop
sub
inc
push
inc
push
and
cmp
or
dec
sti
xor
or
xor
mov
mov
mov
sbb
dec
into
xchg
or
insb
cmp
or
in
pusha
adc
rclb
int3
push
and
hlt
sub
idivl
or
pop
test
sbb
cld
push
fimuls
sub
mov
add
rclb
icebp
popa
jmp
jo
fildl
sbb
mov
lahf
mov
add
or
jo
inc
mov
inc
lret
xor
jnp
ds
outsb
push
daa
sbb
lea
cmp
movsl
mov
mov
cltd
xor
pop
fldenv
xchg
ficompl
repz
add
test
inc
mov
or
mov
cli
imul
sahf
cmpsl
jns
push
xor
loopne
in
aam
xor
sti
add
or
out
xchg
mov
push
inc
jp
hlt
push
push
mov
add
push
cmp
dec
push
sub
xor
push
mov
sub
add
sbb
sbb
loopne
dec
xchg
adc
lock
fucomi
push
mov
pop
xchg
inc
movsb
sbb
fdivs
pop
push
xchg
push
test
mov
pop
add
push
jne
pop
lock
cmp
or
mov
push
fadd
clc
cli
inc
fmull
jne
lock
add
add
sbb
mov
loopne
adc
add
fs
xchg
ret
push
push
mov
ds
lock
iret
mov
xor
push
mov
add
inc
mov
sarb
aam
imul
push
jmp
jno
test
insl
cmp
or
and
mov
add
mov
add
add
jbe
or
jbe
test
or
cmp
jbe
push
xor
cld
dec
in
and
add
push
pop
daa
sub
pop
pop
jb
cmp
dec
cmp
pop
or
dec
cmp
xor
or
mov
cmp
int
mov
filds
pop
hlt
add
dec
add
sbb
or
xor
subb
mov
arpl
pop
sub
jnp
cmp
jne
adc
pop
shlb
shr
add
or
push
fnstenv
sbb
push
movsl
dec
dec
add
cmp
pop
and
insb
mov
mov
or
lock
nop
mov
call
push
inc
xor
les
mov
fildl
lock
shll
xor
pop
fsubrl
adcl
push
or
jl
mov
mov
adc
inc
aam
loope
cltd
stos
mov
je
in
popa
xor
jnp
pop
cmpsb
inc
push
adc
outsb
insl
sub
inc
or
int3
cmp
push
pop
aam
pop
les
lcall
sbb
gs
sub
jo
enter
push
ja
les
dec
push
cwtl
movsb
sbb
pop
inc
xchg
mov
fstl
adc
cli
aam
add
cmc
adc
fsubs
or
adc
push
jg
xchg
mov
push
add
ret
push
or
pop
cmp
and
bound
fucomi
fbld
arpl
pop
clc
jl
mov
mov
dec
loope
lret
mov
jbe
jmp
mov
jo
mov
xchg
andl
idivl
xchg
xchg
inc
outsl
add
test
or
dec
mov
pop
push
scas
call
push
push
ljmp
pop
loopne
leave
mov
lcall
lds
and
add
mov
aad
ret
pop
pop
pop
push
clc
sbb
cmp
loop
sub
std
pop
xchg
sbbl
push
aaa
rcr
in
test
pop
or
dec
push
push
push
jo
sub
mov
cmp
cli
push
call
adc
int3
pushf
lea
cmp
add
dec
xchg
adc
addr16
push
or
addb
mov
sub
pop
mov
test
gs
shlb
aas
push
rol
add
push
call
cld
nop
and
and
cmp
push
push
push
and
roll
lds
xchg
xchg
mov
add
fwait
loop
fwait
or
loope
jmp
loope
cs
xchg
xchg
movsb
inc
or
inc
sub
push
incl
pushf
and
iret
dec
push
or
fucom
in
pusha
adc
loope
inc
sub
or
lock
into
insl
or
or
cmp
scas
mov
cld
dec
int
push
addl
shl
mov
and
cltd
sub
enter
aam
xor
adc
lahf
ss
push
adc
push
dec
movsl
fadds
scas
push
add
dec
and
ret
dec
push
lods
push
xchg
movsl
push
rcrl
mov
or
mov
jne
clc
imul
xor
and
into
sub
or
xchg
incb
mov
sub
add
xor
fiaddl
and
add
pop
xor
jae
test
xor
fcoms
out
or
mov
sub
iret
loope
sub
negl
xchg
dec
mov
sbb
mov
push
push
mov
jl
xor
inc
adc
add
imul
push
sbb
jo
adc
lcall
sub
xchg
js
mov
add
fdivr
cmpsl
je
jl
cmp
jbe
adc
push
mov
and
pop
outsl
ret
push
int3
sbb
outsl
push
or
add
stc
push
mov
rcll
lret
jns
je
cs
imulb
and
xchg
mov
or
andl
arpl
and
sub
sbb
mov
xchg
add
adc
pop
dec
add
imul
or
push
adc
ds
mov
aam
mov
test
dec
roll
push
push
or
xchg
and
jmp
push
sub
push
pop
mov
xchg
ret
lds
jne
jmp
cmp
sbb
push
adc
scas
cmp
ljmp
test
mov
cmp
outsb
adc
push
adc
dec
xchg
or
push
adc
adc
dec
cmp
add
inc
sarb
xchg
icebp
cmp
mov
test
mov
and
nop
mov
jo
add
add
or
test
xor
xchg
fwait
int
fs
rclb
push
push
xor
mov
cltd
inc
add
mov
adc
cli
cmp
shrl
pop
in
pop
es
dec
mov
add
clc
push
pop
cmp
mov
lock
cmp
xor
mov
bound
xlat
pop
in
cs
xor
mov
xchg
jecxz
inc
test
call
add
lret
imul
repz
jo
and
movsl
mov
ss
bound
adc
mov
incb
pop
xor
xchg
nop
xchg
xor
pusha
xor
scas
addb
sub
mov
sbbb
xchg
idiv
nop
add
jmp
pop
add
cmpsb
jmp
add
hlt
and
cmpsl
call
lea
les
jl
pop
fsub
std
popa
gs
cmp
pusha
sbb
into
sub
ss
lret
and
xor
mov
xlat
mov
fildl
ljmp
insb
enter
mov
mov
push
inc
sbb
rorb
or
or
mov
jle
shr
or
sbb
scas
add
rolb
jo
aam
jne
loop
inc
push
add
out
inc
imul
decb
push
das
stc
push
rolb
bound
pop
sbb
adc
test
call
sbb
and
pop
enter
xchg
test
mov
nop
xchg
mov
out
cwtl
pushf
movl
push
lods
lock
outsb
lods
sub
push
xchg
lock
inc
mov
fdivl
xor
dec
sbb
enter
and
mov
mov
xchg
repnz
add
lcall
cmp
lds
mov
or
or
or
ret
sti
adc
inc
imul
dec
or
movsb
sub
lods
or
mov
movsb
lea
xor
add
cmp
dec
pop
dec
mov
push
cmp
sbb
lea
pop
add
add
sub
scas
sbb
lea
mov
in
add
xchg
dec
mov
call
popf
xchg
sbb
subb
sbb
push
or
xor
sbb
in
inc
push
add
mov
aaa
loop
rorb
xlat
adc
rorb
movsb
gs
lret
rolb
mov
adc
mov
push
cmpsl
mov
push
adc
jne
inc
lcall
jg
xchg
mov
ss
push
xadd
addr16
sbb
inc
repnz
xor
jns
jge
lret
das
mov
iret
add
ret
push
jno
cmp
or
jecxz
pop
mov
and
fwait
add
mov
xchg
faddl
push
push
add
subl
mov
ret
lret
cmp
add
lods
adc
push
push
push
mov
not
mov
outsl
xlat
nop
push
std
cli
cwtl
mov
sbb
loopne
or
or
add
xchg
int
and
insb
push
movsl
adc
ret
adc
cmp
lods
test
dec
push
repnz
lea
xlat
sub
daa
inc
out
stc
push
mov
pusha
sbb
push
adc
das
dec
scas
inc
sbb
adcb
int3
gs
jnp
sub
xchg
dec
xlat
mov
sbb
add
dec
icebp
dec
mov
mov
stos
in
xlat
scas
inc
enter
lea
add
inc
outsb
fimuls
pop
mov
add
imul
ljmp
mov
mov
mov
cmp
adc
incl
incl
push
mov
sub
push
jl
inc
orl
test
or
rorb
jno
scas
dec
xchg
ss
mov
mov
jb
sbb
insb
rolb
data16
sbbb
dec
pop
push
inc
mov
fildl
faddl
nop
push
roll
and
test
sub
or
mov
push
cmp
and
pop
mov
pop
push
mov
sub
jne
xor
dec
mov
or
push
pop
mov
imul
push
sarl
mov
push
outsl
sarl
xchg
ljmp
mov
cmp
inc
movsl
mov
cmp
mov
sub
jo
or
js
imul
inc
push
or
dec
aad
add
fsub
mov
fstpl
lock
xchg
js
mov
ficompl
movsl
pop
enter
pop
pop
or
or
ja
dec
incb
push
test
push
clc
outsl
xor
lock
sub
es
imul
es
loopne
xor
adc
xchg
cmpsb
arpl
mov
or
fwait
cltd
add
pop
outsl
or
cs
push
pop
in
fdiv
cmp
xor
dec
inc
hlt
cmpsb
xorb
mov
decl
push
jns
rorb
fnstsw
pushf
jns
icebp
xlat
and
lcall
je
clc
mov
adc
je
data16
ret
xlat
jmp
pushf
jle
pop
stos
lcall
mov
outsb
adc
jb
cli
jbe
imull
data16
inc
sub
jge
pushf
repnz
xchg
push
pusha
ja
jb
cmp
mov
bound
out
mov
sbb
outsl
or
lock
adc
movsl
add
or
jge
cmpsb
dec
cmp
xor
lock
sbb
xor
repnz
adc
inc
inc
jmp
inc
jo
add
cs
addr16
and
jne
or
inc
inc
push
lock
iret
add
and
stc
push
or
test
jmp
xchg
push
and
ja
cmp
adc
and
out
lret
jmp
pop
cmpsb
ret
pusha
lods
adc
inc
and
dec
outsl
mov
inc
mov
mov
sub
pop
mov
adc
pop
call
insl
rclb
add
sbb
cmp
or
push
push
es
push
rcrb
add
mov
push
cmp
adc
mov
xchg
icebp
test
scas
mov
ret
xor
xchg
enter
mov
mov
sub
mov
adc
decl
pop
jl
iret
shrb
movsb
sub
gs
inc
enter
fwait
orb
out
in
inc
jbe
mov
out
push
jle
add
fadd
xor
fcomps
mov
inc
add
and
icebp
rcrb
out
jo
push
aam
andl
fcoml
shlb
or
out
or
pushf
in
inc
arpl
inc
mov
push
into
shrb
and
lret
add
daa
sub
xchg
pop
dec
lock
xor
pusha
insb
inc
jmp
or
pusha
je
shrb
cmpsl
pop
out
jl
orb
mov
jle
aam
ret
xchg
icebp
xchg
clc
iret
cmp
and
dec
sbb
pop
xchg
addb
in
outsl
testl
pop
rcr
sub
outsl
push
add
test
adc
pop
test
push
lret
adc
and
or
rcrb
add
mov
push
inc
pop
cmpsl
test
jne
mov
adc
test
cmp
out
fnsave
sub
popf
mov
and
in
cmp
stc
movsb
rorl
add
mov
mov
dec
addr16
lahf
mov
lods
insl
dec
sbb
adc
add
dec
subl
pop
inc
inc
stos
roll
add
xchg
testl
into
popa
insb
adc
adc
ds
mov
push
sbb
sub
sbb
adc
sub
push
test
push
fldenv
xor
sti
gs
test
gs
pop
cmp
push
sti
subl
in
test
sub
mov
push
fldenv
sti
sub
add
cmp
jo
js
test
inc
sbb
mov
jno
add
or
add
jp
push
es
mov
and
into
call
pop
sub
insb
adc
mov
cmp
mov
sub
xlat
or
cmp
inc
lcall
test
mov
negl
pusha
shr
cmp
insl
lea
mov
mov
push
js
mov
xor
loop
fidivrs
shr
xchg
xor
push
or
jb
mov
stos
xchg
movsb
inc
sub
notb
inc
push
rep
pop
cmp
decl
cmp
jbe
add
jmp
add
stos
rorb
jmp
aam
ret
and
dec
loopne
inc
and
adc
mov
xlat
sub
adcl
rolb
or
dec
dec
cmp
add
inc
xchg
mov
stc
add
fildll
dec
les
les
or
adc
int3
xchg
inc
das
mov
mov
cmp
mov
imul
hlt
sti
add
or
ror
cmp
add
insl
test
frstor
add
dec
inc
add
jno
subb
push
push
and
cs
dec
nop
enter
sub
and
jb
adc
movsl
sbb
gs
sbbb
mov
and
lea
push
cmp
sub
dec
rcrl
clc
imul
test
jb
push
imul
push
pop
js
sub
xchg
cwtl
jg
inc
lods
inc
ss
inc
out
iret
or
jg
and
stos
nop
loope
add
stos
je
in
aaa
mov
mov
add
xchg
cmp
lock
lock
xchg
in
fidivl
jno
mov
roll
dec
or
and
add
icebp
andl
mov
in
dec
dec
mov
imul
mov
sub
jae
cmp
fists
fwait
xchg
mov
or
jo
mov
sbbb
push
pop
fildll
and
out
xorb
stos
loope
push
sub
or
sub
repz
orl
push
imul
dec
sub
ss
mov
out
jge
fistps
loopne
in
push
add
in
sub
nop
fnsave
push
add
cmp
jmp
insl
add
mov
sub
je
xor
mov
pop
or
test
and
xchg
mov
or
xchg
enter
xor
mov
cs
fmull
in
je
fisttps
loopne
adc
nop
ret
jo
andl
femms
into
fwait
mov
mov
popa
js
adc
pop
rdmsr
adc
jmp
int
inc
adc
adc
aam
rorb
push
fistl
mov
xchg
xor
adc
dec
jo
mov
loope
sbb
push
repz
ds
cmpsl
mov
fcoms
addb
outsl
subb
xor
testb
fimuls
xchg
push
mov
adc
je
sub
add
lods
leave
das
rol
cld
cwtl
adc
push
jg
xchg
and
popa
test
lret
xor
cmp
and
int3
inc
fdivrs
test
sbb
lods
in
xchg
cmp
or
lret
icebp
xor
test
pop
adc
adc
cmp
adc
fdivrl
xchg
cmp
mov
lcall
fs
pop
dec
push
mov
xor
cmc
xor
or
jmp
push
pop
jae
hlt
cmpl
add
cmp
insb
pop
push
inc
xor
xor
pop
cld
mov
gs
sub
dec
push
pop
sbb
xchg
lock
push
pop
nopl
mov
mov
out
jmp
lahf
or
sub
jge
fiadds
pop
push
mov
mov
test
pop
lcall
inc
pop
in
rcl
push
mov
add
cmp
add
adc
es
fdivrl
js
push
stc
mov
mov
or
mov
push
sub
jo
mov
repnz
mov
cmp
das
ffreep
or
sbb
xor
pop
sbb
lret
mov
adc
test
inc
cmp
cwtl
mov
cmp
pop
lods
addl
cmc
dec
subb
into
addb
mov
lock
and
add
incl
les
mov
jbe
dec
pop
push
sbb
add
aam
pinsrw
mov
je
lock
push
xchg
add
xchg
jo
test
xchg
es
pop
add
push
push
inc
mov
cltd
nop
add
sub
mov
fsubl
fcoms
int3
les
add
dec
jl
mov
or
inc
add
or
fistpl
xor
subl
sbb
rclb
or
fistpll
jo
add
jge
cltd
and
std
and
jne
push
mov
hlt
or
add
mov
movsl
test
out
or
jmp
push
sub
loopne
les
xchg
mov
repnz
sub
inc
faddl
sbb
or
popa
push
mov
and
aad
add
addl
pop
pop
push
and
out
shrl
adc
sub
xchg
or
aaa
stos
mov
lds
pop
clc
and
stos
sbb
movsl
test
pushf
stos
jae
jo
mov
rclb
out
cs
scas
jae
cmp
mov
push
push
push
and
mov
jecxz
and
test
xchg
push
fistpll
sbb
jl
and
insb
mov
in
int
adc
sbb
loope
hlt
pop
leave
or
push
adc
subb
inc
push
jb
ret
js
jae
iret
xor
lock
mov
jne
mov
gs
mov
sub
cmc
fwait
sbb
imul
jmp
push
sub
push
bound
inc
cmp
xor
pop
jns
push
adc
cltd
cmp
inc
adc
mov
inc
and
pop
fwait
adc
push
std
adc
adc
mov
sbb
and
mov
dec
mov
xchg
mov
xor
lret
jno
jne
call
inc
adc
mov
add
mov
or
incl
pop
add
mov
inc
nop
testl
testl
xchg
adc
sub
add
divl
pop
xchg
push
push
pop
es
stc
inc
add
out
repz
and
adc
adc
add
and
sbb
mov
adc
or
jmp
fldl
call
aam
or
jl
add
into
jo
movsb
shrl
frstor
push
mov
frstor
push
movsl
sbb
push
clc
push
cmc
popl
loopne
ljmp
lds
fldl
pop
fsubr
pop
faddp
andl
sbb
add
popa
fs
jg
mov
xorb
xchg
pop
dec
mov
aam
in
and
xchg
lods
jl
cli
xor
sbb
sbb
data16
and
int3
data16
test
push
ret
or
mov
inc
cmp
add
lds
loop
mov
mov
mov
arpl
jp
mov
mov
iret
sub
lahf
mov
xor
push
or
add
or
loopne
mov
add
ja
mov
movsl
pop
sbb
lret
cmovb
hlt
sbb
stc
dec
push
mov
jp
lea
sbb
add
dec
add
fiaddl
xchg
lock
push
sahf
push
arpl
xlat
push
add
es
in
add
stos
mov
add
test
pop
mov
into
enter
mov
cmp
jge
xorl
adc
inc
dec
sbb
add
pop
push
and
xor
dec
add
sahf
add
popa
or
dec
inc
inc
xchg
push
sub
pushf
dec
pop
add
cmpsl
mov
mov
dec
xor
cmpl
pop
add
xchg
add
cs
adc
sbb
xor
jo
comiss
dec
fs
adc
shrl
fiaddl
roll
add
sar
or
jns
mov
xchg
jge
pop
mov
test
jge
cmp
pop
add
add
or
mov
mov
xor
push
add
mov
or
or
jmp
stos
fucomi
sub
sub
push
sub
sub
mov
sbb
ja
pop
push
inc
add
mov
adc
rcrb
adc
add
mov
xchg
dec
or
jne
dec
mov
mov
pop
jg
pushl
mov
inc
movsb
add
test
and
out
push
push
test
sbb
ret
cltd
and
sub
cmp
xchg
add
mov
das
pop
xchg
mov
dec
xor
jle
xchg
test
xchg
pop
add
inc
movsl
test
add
in
jo
call
cmp
out
scas
sbb
stos
jae
xor
mov
xor
mov
or
fcoms
push
or
mov
repnz
ret
jne
pop
imul
in
inc
insb
add
and
xchg
mov
inc
loopne
or
dec
mov
sub
inc
ret
inc
jl
imul
and
fdiv
and
lret
stos
fdivrl
pop
push
xor
test
xor
jle
addr16
or
nop
enter
jge
std
in
fmuls
push
or
js
mov
nop
pop
push
test
mov
cmp
dec
adc
lds
push
add
daa
in
std
xor
xor
shll
mov
cmpsb
bound
or
enter
dec
push
push
inc
sbb
hlt
ret
add
in
loop
sub
repnz
add
mov
xor
hlt
sbb
idivl
popa
sbb
pop
push
lock
adc
jb
dec
sbb
jmp
dec
stos
mov
cs
outsb
cmp
js
or
and
rorb
or
jle
inc
sbbb
test
cmpsb
jo
jge
ljmp
inc
adc
dec
into
push
push
and
pop
rolb
mov
nop
sbb
loope
test
inc
dec
scas
cmp
pop
pushf
or
fs
cmpsl
xchg
js
leave
leave
addb
rcrb
inc
rolb
push
cs
loope
xchg
dec
push
pushf
jmp
out
dec
sub
cmp
mov
ja
adc
add
insb
xor
popf
and
mov
les
mov
sbb
movsb
imul
inc
ss
loopne
pop
leave
xor
push
jp
cmpsb
xchg
loopne
jno
leave
adcl
jbe
sbb
mov
call
push
dec
add
imul
pop
inc
or
loope
xor
push
add
ja
arpl
jno
inc
adc
jg
les
fldl
repnz
addr16
push
inc
xchg
adc
test
dec
jne
or
aam
dec
mov
notb
sbb
xchg
inc
mov
ss
lock
sub
push
adc
pop
push
test
push
mov
or
imul
out
jle
rolb
movb
jno
sbb
mov
mov
or
ds
popf
pop
cmpl
dec
mov
push
ss
int3
fbstp
mov
sub
xor
jmp
xor
scas
xor
clc
mov
and
lcall
xchg
xchg
sub
mulb
mov
jno
pusha
es
fs
cwtl
ret
xchg
xchg
xchg
loopne
add
je
hlt
scas
push
pop
adc
in
insl
pop
push
or
cmp
inc
loopne
inc
inc
push
mov
popf
or
xor
cmp
test
adc
cmp
iret
xchg
pop
les
adc
mov
sbb
inc
stc
and
mov
mov
lock
inc
idivb
shlb
sarb
adc
imul
leave
lea
fisubrl
pusha
dec
pop
stos
jae
xchg
or
jns
inc
cmp
mov
in
lock
rclb
push
cmp
xor
dec
sub
and
or
lock
hlt
imul
lock
xorb
cs
dec
arpl
or
cmp
push
punpckhwd
jb
xchg
push
pop
pop
push
pop
push
jnp
leave
pop
cmp
add
add
mov
add
repz
and
call
je
sbb
push
mov
add
xchg
lret
lahf
add
mov
shlb
in
sbb
push
sbbl
aad
aam
mov
inc
cmp
cmp
push
inc
pushf
cmpsb
lret
cld
or
mov
inc
or
lods
mov
push
add
jp
ret
test
lock
jbe
jp
or
aaa
and
add
add
cmp
jne
lcall
subl
pop
cwtl
dec
enter
imul
or
insl
scas
pop
repnz
xor
add
std
pop
push
enter
xchg
cmp
jno
mov
lcall
adc
je
cmp
mov
mov
clc
jl
or
movsl
xor
sbb
sarb
dec
sbb
loopne
shlb
dec
aam
leave
xchg
mov
cmp
xor
fwait
sbb
add
add
push
les
add
xchg
cmp
add
jo
or
sti
sbb
or
gs
fs
movsl
mov
dec
aaa
add
jl
inc
and
or
mov
push
add
dec
and
aad
stc
inc
xor
push
xor
pop
push
cmp
or
push
mov
push
cmp
push
sub
xchg
cmp
push
adc
sbb
sbb
add
test
idivl
cmp
pop
pop
pop
add
in
add
setg
xor
or
loopne
shlb
sbb
cmp
jge
add
or
mov
pop
mov
dec
stos
pop
or
and
jo
push
jo
jmp
xor
ret
add
ret
dec
out
adc
sub
xor
pusha
aas
faddl
notl
imul
subb
adc
les
test
inc
inc
inc
js
and
cmp
add
mov
xchg
and
mov
and
subl
mov
pop
push
push
sbb
jmp
call
fld
ret
push
and
aad
into
shl
ss
sub
fs
sbb
push
cmp
shr
sbb
test
cmp
pop
inc
jl
push
cmpsb
jmp
push
mov
sbb
jne
test
jmp
lods
or
fmull
xchg
aad
mov
xorb
ds
sub
inc
add
adc
push
sbb
xchg
adc
and
jbe
add
pushf
cs
push
xor
cmp
cmp
push
inc
loope
ss
and
cmp
jmp
ror
aas
or
aaa
push
icebp
pop
or
mov
pop
ret
add
sub
push
daa
adc
mov
push
aad
xchg
adcl
cmpsb
cli
jle
add
test
add
push
clc
inc
fisttpl
lea
inc
jmp
adc
data16
mov
inc
cmp
sbb
push
push
imul
pop
pop
les
pop
in
sbb
lods
push
jmp
push
aas
and
sbb
aad
inc
add
in
sahf
jge
data16
out
add
and
addl
push
dec
lea
mov
fwait
push
mov
sub
push
adc
inc
pop
add
dec
sub
xor
mov
loop
jns
sub
inc
inc
dec
push
mov
pop
sub
push
mov
xor
les
cmp
xchg
or
cmp
inc
inc
dec
testb
scas
or
pop
mov
ljmp
dec
lock
out
pop
xor
push
adc
sbb
add
lahf
cltd
push
fdivl
jne
pop
xor
add
repz
ss
adcb
push
add
push
push
xor
xorb
dec
loop
xor
and
les
and
movl
cmp
stos
push
in
cli
std
push
mov
push
or
repnz
push
cmp
jl
mov
jb
xor
push
sbb
shll
sahf
adc
cs
stos
or
cmp
or
jecxz
mov
insb
add
jmp
sahf
dec
cs
and
sbb
inc
les
pop
inc
sub
rorb
dec
mov
pop
adcb
pop
adcl
jl
fimuls
push
inc
flds
push
sbb
in
add
push
enter
pop
or
mov
rorl
decb
cmp
ja
inc
pop
cmp
sub
adc
or
popa
adc
or
push
push
and
dec
paddb
jl
sbb
pushl
push
xorb
mov
sbb
xchg
jecxz
fsubrl
jbe
push
inc
mov
cld
and
fwait
and
mov
loop
adc
orl
dec
adc
mov
jb
sbb
dec
mov
in
cltd
mov
xlat
adc
push
and
dec
add
data16
je
sub
inc
or
idivb
insl
in
je
js
and
pop
cmp
jl
xor
cmp
into
dec
inc
dec
xchg
es
fmuls
add
ljmp
xchg
neg
xor
cmpb
es
into
jl
shrl
pop
enterw
mov
adc
notb
repnz
mov
push
pop
sbb
push
mov
cmp
cmp
nop
pop
cmp
ret
jmp
or
xor
jge
dec
ret
push
lret
cltd
pushf
fstp
xchg
inc
and
pop
jne
jns
pop
jle
and
push
jmp
push
fwait
mov
mov
mov
and
jmp
int
stos
xor
lcall
push
jne
push
adc
into
jl
inc
mov
addl
lret
stos
pop
adc
xor
mov
inc
sub
mov
add
sub
push
xchg
sahf
pop
pop
fsubrs
leave
xor
mov
adc
and
outsl
sahf
xor
adcb
pop
jecxz
sar
divps
pop
popl
cmp
xor
imul
insl
fidivl
pop
push
ss
sub
push
cmp
jne
cld
jmp
lock
je
push
add
add
fs
stos
or
adc
clc
mov
and
insl
movsl
mov
add
aaa
push
mov
test
cmp
test
leave
add
addl
lret
cli
addr16
pop
pop
lods
sub
push
dec
add
lock
stos
nop
and
pusha
add
or
push
les
out
fisttpl
mov
enter
mov
mov
mov
or
cmp
fdivrs
fstpl
jmp
cmpl
mov
mov
std
int3
pop
dec
or
mov
imul
pushf
cmp
inc
jge
sub
cmp
cmp
lods
dec
inc
xor
push
push
jmp
sbb
data16
adc
push
dec
pop
adc
fcmovb
cmpsb
adc
cmp
xor
push
cmp
ret
jle
and
push
fs
jne
out
pop
or
sbb
es
shr
mov
and
aad
mov
movsl
cmp
sbb
daa
inc
or
adc
inc
sbb
push
and
adc
cltd
aaa
pop
imul
inc
mov
xorb
ss
pop
fdiv
je
loope
push
add
jns
add
into
in
mov
rolb
push
sbb
mov
jmp
add
rcr
adc
aad
pop
jne
push
jmp
cmp
ss
xor
xchg
movsl
enter
aaa
movsl
add
adc
hlt
js
test
adc
mov
push
and
and
nop
in
in
inc
enter
in
in
and
aam
and
aaa
movsl
xchg
adc
sbbl
inc
mov
movsb
or
test
stc
leavew
ret
gs
in
xlat
jl
les
das
xchg
mov
xrelease
adc
cmp
mov
in
mov
lret
sbb
test
xchg
xchg
pushl
insl
push
pusha
sbbb
cmp
rorb
sbb
aaa
fiaddl
and
dec
dec
dec
nop
xchg
sbb
cmp
iret
stos
xchg
and
mov
rorl
xchg
shlb
jne
jl
shlb
loop
call
andb
orl
roll
push
mov
adc
push
sub
push
adc
inc
lret
sarb
inc
mov
rcrl
or
stos
aam
push
dec
xchg
or
mov
cmpsl
or
add
sbb
pusha
jp
pop
sbb
push
movsl
adc
icebp
int
sbb
fwait
test
out
adcb
push
xchg
int
mov
insl
push
movl
cli
jo
and
sbb
in
mov
mov
sbb
or
lods
mov
or
xchg
mov
arpl
mov
lcall
js
outsl
in
push
inc
dec
adc
xchg
mov
jle
sarl
iret
test
shr
sbb
mov
int3
insb
inc
test
nop
js
cmp
xchg
test
in
adc
inc
popa
loopne
dec
lcall
test
jle
add
pop
and
mov
jo
mov
adc
jl
ja
inc
loope
dec
das
and
inc
add
mov
lods
jns
lods
mov
or
add
xchg
inc
add
test
or
xchg
sbb
push
xor
sbb
lahf
outsb
das
push
sbb
jmp
adc
nop
xorl
mov
jle
call
idiv
loope
lret
popa
adc
ret
and
push
test
push
xor
or
or
adc
shl
jns
lock
jg
jmp
inc
sub
mov
shr
cmpl
popf
shrb
cmpsl
add
ret
adc
test
dec
pop
add
jl
nop
jecxz
flds
adc
gs
jnp
popa
ret
cmpl
lahf
sub
test
sub
xlat
and
sahf
les
jo
pop
push
mov
icebp
adc
xchg
stos
cmpsb
adc
jg
in
shrl
lods
jmp
inc
lahf
mov
sub
repz
dec
clc
aas
js
cmp
jl
push
push
push
cmp
add
das
and
push
or
add
dec
xlat
leave
divb
es
hlt
stos
cli
scas
push
or
jmp
xor
outsl
test
and
or
push
push
in
cmp
jmp
xchg
pop
mov
cmp
pop
fs
in
loope
lcall
push
push
inc
insl
addr16
or
lahf
sub
or
xchg
sbb
add
mov
cmpsl
xchg
cld
mov
call
enter
inc
test
call
leave
xor
jne
add
sub
xchg
lret
jbe
xchg
mov
in
fxch
push
dec
testb
pop
inc
dec
push
sbb
movsb
pop
pop
fs
and
push
insl
or
in
mov
jne
cmp
int
dec
xor
cld
mov
dec
lods
cld
push
lods
mov
push
scas
fdivr
mov
add
es
add
sahf
mov
jp
inc
dec
add
add
mov
add
adc
dec
les
mov
cmp
pop
xor
sub
lock
test
pop
test
addl
push
or
sbb
es
jmp
fbld
sbb
sub
add
add
push
push
add
push
pop
popa
and
and
add
sahf
hlt
adc
push
add
fadds
divb
cli
xor
test
in
jo
inc
add
addr16
into
xchg
sbb
or
clc
push
sub
push
xor
cmpsb
add
fisubl
fnsave
cld
repz
and
add
into
and
lret
mov
push
cs
fucomip
or
mov
or
sbb
aad
add
mov
mov
xchg
or
xor
adc
icebp
mov
in
sub
out
fs
dec
push
and
test
push
sbb
jnp
xor
mov
dec
add
push
stos
add
insb
nop
imul
and
jbe
cmp
jno
enter
inc
dec
jecxz
mov
enter
add
adc
shrb
and
add
or
and
sub
add
xchg
add
add
in
sahf
imul
sub
arpl
jns
jne
cmpsb
push
lahf
dec
fsubs
mov
push
mov
jno
or
rolb
sarl
test
push
or
push
loopne
iret
dec
inc
add
push
push
enter
xor
or
jb
push
or
or
andb
jno
or
or
out
mov
xor
hlt
push
dec
adc
adc
or
scas
js
orb
ds
push
dec
push
cli
pop
jb
cmp
xor
adc
stc
cmp
cmp
mov
std
test
daa
in
cli
insl
bound
insb
push
add
adc
sbbb
popl
test
pop
loopne
lock
add
or
nop
stos
fldl
mov
adc
daa
pushf
out
ds
or
mov
sub
imul
inc
lret
push
sub
adc
js
add
sbb
add
or
pop
jge
adc
pop
flds
pop
push
lock
test
sbb
jge
cmc
xor
mov
add
xchg
dec
sbbb
dec
cmp
add
lcall
dec
pushf
add
sub
lret
cmp
or
adc
pop
pop
out
mov
or
push
lods
in
in
push
stos
inc
push
stos
iret
dec
cli
dec
xor
fldenv
or
or
push
daa
mov
jmp
push
xchg
imul
adc
shlb
sub
stos
cmp
sbb
jns
dec
lock
and
mov
add
sub
inc
adcl
hlt
push
jmp
in
push
and
mov
lea
or
xor
in
pop
cmp
and
std
mov
mov
cmp
ds
fdivrs
jne
sbb
ret
loopne
scas
fsubrs
adc
and
loopne
inc
or
sbb
mul
ss
ret
xchg
sbb
and
movd
jmp
int
mov
mov
xor
push
std
out
pop
jle
imul
add
rclb
mov
ljmp
enter
out
xchg
out
lods
push
nop
dec
xchg
adc
mov
jnp
stos
inc
in
shll
add
mov
clts
pop
mov
pushf
adc
je
adc
rclb
cmp
mov
jb
mov
test
and
insl
lahf
push
cmp
shl
cmp
rcrb
add
call
adc
mov
loope
lods
adc
fsubs
sarl
pop
mov
pop
enter
insb
sub
ja
xor
mov
rcrb
push
xor
or
pushf
enter
or
adc
pop
push
sar
xchg
sbb
mov
push
inc
aaa
mov
into
insl
and
out
call
rclb
aas
adc
and
les
cwtl
pushl
dec
cld
pop
fsubrs
in
xchg
jo
out
push
lds
sub
lods
pop
pop
shll
xchg
jno
mov
data16
xchg
mov
xchg
sbb
push
aad
ds
out
movsb
jb
push
lock
stos
ds
push
adc
sbb
addb
nop
lods
lods
pop
lock
inc
test
insb
rolb
sbb
clc
xor
cmp
mov
icebp
arpl
mov
in
mov
push
mov
add
inc
pop
into
xchg
fimull
push
in
in
pop
iret
in
push
push
and
shl
ja
aaa
loopne
lds
loop
push
and
movl
push
adc
movzwl
mov
cmpl
sbb
fstps
and
fnstcw
sahf
cmp
rorb
jecxz
inc
inc
aaa
rcrl
adc
into
pop
push
mov
push
add
inc
pop
cmp
frstor
int3
jg
sbb
jbe
call
pop
insb
dec
repnz
rolb
fucom
mov
sub
lret
fcoml
daa
cwtl
adc
add
sahf
and
mov
pushf
sbb
push
rolb
movb
push
popf
hlt
or
ds
push
clc
dec
inc
push
fs
enter
xchg
int3
inc
cmp
adc
mov
mov
xchg
dec
pop
bnd
and
add
and
pop
cmp
or
sub
mov
inc
push
xor
cld
movsb
jo
popa
test
or
rcrb
nop
adc
mov
shr
mov
mov
mov
push
mov
call
or
pop
mov
adc
push
cmp
popa
fstl
or
mov
rol
jbe
lea
cmp
inc
flds
cmp
mov
sti
adc
jbe
push
paddb
ja
push
mov
xchg
xchg
mov
sbb
xor
clc
out
repnz
and
push
push
and
and
lea
cmp
lret
and
xchg
ja
lods
sbb
pusha
jl
cmp
pop
ret
inc
add
mov
or
xor
cmp
je
push
push
pop
cmp
and
cmp
push
pop
test
sub
xchg
mov
push
fidivl
mov
xor
or
mov
cli
cltd
sub
imul
mov
hlt
add
insb
mov
inc
pop
xor
pop
jmp
icebp
push
fs
ja
mov
inc
jle
imul
push
adc
sub
sub
push
add
cmp
cmp
add
push
cmp
cmp
or
or
jnp
fmull
or
jbe
jmp
or
addr16
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
and
pop
dec
fcmovu
fcompl
jmp
and
or
inc
mov
and
pop
hlt
inc
setp
roll
ret
xlat
sbb
xchg
sahf
ja
push
jl
int
add
or
jns
out
sbb
sub
cmp
jns
out
dec
dec
push
pop
sahf
out
sahf
pop
arpl
jb
jns
out
jl
xchg
out
lcall
sahf
scas
mov
mov
gs
fadds
add
and
idiv
jg
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
pop
or
mov
pop
stos
pop
es
inc
leave
dec
ljmp
mov
add
in
mov
push
add
cwtl
adc
imul
fnstcw
stc
mov
les
int
pusha
xor
push
sbbl
out
push
test
add
push
add
inc
xor
push
adc
fwait
xor
fwait
xorb
stos
test
fnstenv
inc
lea
sub
shll
add
xchg
add
fs
mov
sub
loopne
loope
add
and
mov
sbb
sub
call
push
ret
cmp
mulb
xchg
xchg
shll
adc
push
mov
mov
mov
pop
add
iret
bound
sarb
mov
xchg
enter
rolb
faddl
es
imul
test
dec
rorb
cmp
mov
and
or
out
sbb
ljmp
adc
inc
or
fisttpl
mov
pop
mov
fildl
jno
cmp
sbb
daa
or
fsubrs
lea
call
or
sbb
push
clc
sbb
ret
movl
jl
sbb
gs
imul
dec
cmp
jbe
aam
jo
mov
add
ret
cmpb
out
push
adc
add
dec
rorb
mov
push
xchg
cwtl
inc
ds
pusha
mov
mov
scas
call
lea
imul
lret
fsub
or
stos
mov
stos
add
shrb
cmp
dec
sbb
xchg
or
lock
inc
xchg
pop
or
cli
inc
inc
or
pop
jmp
jb
inc
pusha
xchg
mov
lcall
sarl
xor
or
loope
ja
repz
add
pop
mov
push
and
sbb
shrb
je
or
shll
add
adc
mov
inc
or
in
test
mov
sbb
mov
cwtl
pushf
mov
pop
and
lock
adc
mov
mov
ljmp
mov
movl
adc
imul
and
jge
jnp
push
es
fstl
push
lock
sbb
push
sub
popa
sarb
jo
inc
and
cs
pop
nop
dec
cmpsb
pusha
cltd
and
jb
fwait
out
fs
and
add
mov
add
and
and
push
dec
cmpsb
ja
in
jo
sub
push
inc
jnp
add
icebp
push
adc
xor
dec
enter
cld
sub
inc
cmp
test
insl
jl,pn
ret
movsb
mov
sub
jmp
movsl
jle
add
cmp
add
cli
es
or
dec
lea
cmp
es
and
or
int
push
cmpl
or
pop
and
cmp
add
push
ret
mov
inc
mov
or
inc
mov
dec
cmp
jl
dec
pop
sahf
cmp
push
js
mov
sub
push
cld
jmp
and
or
mov
dec
movsl
jns
and
adc
cmpsb
jb
xor
and
cmp
dec
sar
and
movzbl
push
push
mov
mov
mov
adc
test
xor
or
sub
push
inc
in
dec
pop
sbb
mov
ret
mov
push
inc
cwtl
lods
or
mov
lods
add
and
int3
cmp
mov
lods
mov
sub
cltd
ja
jmp
xchg
clc
nop
jbe
jo
add
ljmp
push
mov
dec
inc
in
insb
imul
push
imul
or
int
fadds
stc
ret
push
mov
es
test
adc
pop
dec
js
jne
in
or
lock
aas
and
push
clc
or
cld
pop
clc
or
je
jo
in
or
mov
cmp
jmp
mov
xchg
jo
cmp
add
sarl
rcrb
in
xor
inc
and
inc
add
and
push
adc
insb
or
xor
jge
cltd
loopne
add
ss
gs
rolb
loope
fs
add
movl
lock
sbb
gs
ret
testb
enter
xchg
cmc
mov
lods
xor
in
cmc
movsl
and
jno
icebp
icebp
cld
mov
adc
fsubl
sahf
ss
add
ja
pop
xor
xchg
ljmp
push
jmp
popf
adc
filds
pop
in
adc
dec
dec
cmpsl
xor
pop
jecxz
pop
pop
cmp
inc
insl
push
lahf
lods
js
jo
je
rcrl
daa
jmp
push
bound
insb
or
mov
fiaddl
push
mov
adc
sub
enter
cmp
pop
lods
sbb
mov
pop
test
inc
push
mov
jne
pop
jle
jb
pop
dec
jle
icebp
sub
or
add
adc
inc
push
push
aam
jg
fbld
xchg
push
enter
daa
or
sub
mov
mov
or
fldl
sbb
repz
adc
iret
dec
and
jo
je
ss
cmp
fcompl
inc
adc
pop
sbb
pop
push
cmp
pushf
mov
sbb
push
jmp
cmp
adc
dec
shrb
push
xchg
out
test
push
fcoml
sub
test
xorl
out
adcl
add
hlt
and
inc
in
pop
dec
push
popa
enter
pop
int
js
push
mov
or
arpl
adc
cli
or
mov
or
loopne
mov
add
adc
xor
clc
cmpsb
cmpb
mov
push
cld
daa
test
pop
ja
sbb
mov
add
mov
cmp
and
mov
push
inc
push
inc
dec
mov
add
adc
aam
or
xor
or
test
imul
pop
cmp
or
rcrl
pop
inc
inc
aad
pop
ret
movsb
bswap
in
adc
push
or
cli
add
ds
testb
xor
push
xor
push
dec
cmpsl
jno
test
mov
stc
sbb
in
cld
sbb
inc
inc
inc
pop
xor
jae
fwait
or
push
ja
cld
and
xchg
mov
es
adc
pop
adc
push
js
sbb
pusha
mov
mov
lods
orl
and
bound
jo
popf
sbb
js
sbb
icebp
dec
clc
cmpsb
jmp
lods
je
inc
mov
push
hlt
ficoml
and
sub
inc
call
jmp
in
je
lea
pusha
nop
pop
sbb
lods
mov
inc
adc
fdivs
xor
xor
push
jg
cwtl
push
scas
test
ret
lods
push
dec
jmp
ljmp
and
adc
sbb
sbb
adc
mov
mov
cmp
sbb
or
push
sbbl
cmpsb
call
test
je
clc
pop
pop
lds
stos
orl
ds
inc
jnp
sub
lock
xor
lods
adc
push
enter
or
roll
mov
and
das
cmpb
inc
add
mov
xchg
lret
or
mov
test
jecxz
ds
mov
xchg
inc
pusha
les
inc
dec
adcl
call
sbb
imul
es
hlt
or
cmc
xchg
or
pop
xchg
pop
pusha
dec
cmp
enter
mov
push
ss
leave
mov
enter
lret
dec
and
imul
push
mov
loopne
imul
es
xchg
and
mov
xor
xor
cltd
xchg
inc
or
and
ss
movsl
cmp
xor
push
dec
out
push
inc
lds
sarb
or
out
sub
xchg
xor
xor
xchg
data16
jg
mov
xor
fsubrs
cmp
mov
cmp
push
enter
addr16
push
push
rcrl
sub
xor
das
std
repz
xor
adc
test
add
sbb
jno
mov
xor
or
ss
sub
sbb
out
and
and
jno
call
sbb
bound
loopne
push
dec
adc
in
repz
sbb
pop
add
pop
call
fstps
mov
movsb
xor
mov
or
mov
clc
jne
push
cltd
pop
movsl
sbb
jo
nop
add
or
mov
cmp
rclb
inc
xchg
pop
mov
in
pop
or
movsl
jp
xchg
push
push
arpl
mov
mov
sub
mov
jg
add
popa
ret
inc
adc
sti
aas
ret
mov
cld
mov
xor
xor
sbb
int
cmp
cmc
div
dec
sbb
lds
cmpb
mov
inc
cmp
mov
std
mov
cmp
je
cmp
push
aas
xor
push
push
es
sub
inc
mov
rcll
and
adc
fimull
mov
mov
fwait
je
add
cmpb
mov
sub
sahf
mov
orl
sbb
mull
jnp
imul
inc
fstpl
inc
mov
bound
ljmp
cs
push
dec
ficoms
into
dec
or
adc
or
addr16
mov
xor
mov
arpl
push
enter
push
pop
pop
mov
xchg
sbb
xor
adc
std
mov
outsl
test
movzbl
adc
dec
push
sbbb
je
or
mov
repnz
push
cmp
shrb
inc
pusha
cmp
inc
cmp
pop
in
xchg
adc
les
add
or
cs
push
lea
daa
les
adc
pop
dec
add
cmp
jge
mov
and
push
sub
pop
lea
xor
sbb
adc
sahf
dec
ret
loopne
arpl
stos
jecxz
mov
hlt
clc
clc
cld
pop
loopne
add
jae
movl
pop
cs
add
add
add
cwtl
cmpsb
push
mov
dec
sti
popf
gs
add
dec
je
add
adc
mov
decl
cmp
dec
or
mov
shr
sbb
ud0
or
mov
sub
das
andb
mov
and
xor
mov
lock
cli
add
sti
xor
sub
fwait
adc
jle
je
dec
je
push
add
out
loop
xchg
loop
dec
mov
add
jmp
sub
movsb
add
push
add
push
icebp
cmp
jne
sbb
adc
mov
pushf
cmp
shrb
test
roll
xor
add
xchg
clc
in
add
inc
orb
inc
jmp
sbb
mov
or
cltd
idiv
inc
inc
imul
sbb
jb
or
dec
or
or
xchg
or
mov
push
add
or
cmp
mov
stc
push
or
add
adc
push
aam
sbb
push
lock
add
mov
pop
jbe
inc
test
jmp
daa
pop
lock
pop
fidivrs
aaa
push
aad
sahf
adc
int3
leave
repnz
jg
rcrl
jae
call
sbb
add
push
ds
jne
cs
and
sub
cmp
lcall
jle
pop
je
cmp
pop
cmp
je
cmp
jne
inc
jne
mov
sub
out
andl
and
or
adc
mov
cwtl
mov
mov
inc
xor
mov
movsb
cmp
es
ss
and
test
dec
add
daa
and
dec
sub
das
sbb
sbb
pop
bound
push
test
add
into
sub
jmp
std
adc
jl
or
jg
mov
jmp
jae
dec
movsl
and
push
jmp
inc
jl
in
mov
mov
jle
add
shl
dec
mov
sub
cltd
movsb
fstp
mov
mov
and
clc
les
out
jg
imul
and
lret
jp
inc
mov
push
pop
popa
jecxz
sbb
or
sbb
push
ljmp
and
sub
push
pushl
push
in
sub
push
and
ljmp
jl
xchg
sub
add
aas
add
fnsave
mov
test
popa
test
int3
add
cmp
lahf
popf
clc
lcall
mov
sub
pop
loopne
xchg
lcall
cmc
push
cmp
in
das
mov
imul
xor
xor
fsubs
inc
cmpb
push
xorb
mov
rcrb
mov
inc
idivb
mov
or
in
inc
inc
push
out
jmp
xor
fnstcw
inc
loope
in
cli
adc
and
cmpsl
dec
pop
dec
mov
pop
rorb
or
add
into
cmp
out
in
movsb
cmp
dec
addb
adc
or
out
dec
decl
cmp
je
cmp
je
pop
jne
mov
cmp
lock
into
add
movb
icebp
mov
mov
cmc
jns
movsb
push
mov
adc
hlt
add
or
mov
mov
sti
push
jmp
pop
push
sub
inc
jno
mov
xchg
insl
shr
pop
adc
je
and
jne
ret
or
pop
outsl
jnp
jbe
rclb
adc
adc
lock
int3
lock
lods
mov
and
sahf
push
push
lcall
clc
cmpl
mov
jo
dec
add
dec
jp
or
lock
insb
add
inc
into
imul
add
lock
sub
jge
jne
repnz
add
sub
and
push
sbb
pop
mov
add
pop
pop
xor
int3
adc
xor
and
jbe
hlt
inc
or
jg
in
or
adc
adc
xchg
pop
and
push
add
cmpsl
or
add
popa
jo
pop
or
and
js
sbb
outsl
dec
inc
xor
icebp
jmp
inc
rolb
mov
xor
add
mov
ss
or
imul
or
add
dec
pop
mov
jb
sbb
pop
jb
push
jl
loopne
adc
or
ljmp
xchg
inc
inc
jne
mov
movb
rorl
push
mov
fidivl
addl
xor
dec
inc
incl
cmp
lret
rclb
ret
push
mov
aam
push
sbbl
dec
and
es
cmp
sub
test
add
in
sbb
push
ret
cmp
push
adc
mov
std
mov
lods
cmp
push
mov
sbbb
jnp
sbb
or
sub
sbb
ds
mov
sub
loopne
xchg
push
or
cs
outsl
inc
sub
pop
xchg
mov
or
loope
inc
jl
jbe
or
dec
mov
inc
inc
test
fcoms
jecxz
aas
push
cmpb
jne
jne
in
pop
dec
mov
xchg
and
scas
arpl
ds
clc
or
add
outsl
stos
xchg
push
fwait
mov
aas
add
lods
cmp
jne
xlat
je
push
pop
ror
mov
dec
stos
mov
or
mov
in
dec
xchg
test
xchg
cmp
rcr
mov
and
adc
push
sbb
mov
inc
test
jle
inc
insl
test
enter
leave
arpl
xchg
cmp
pop
repnz
push
repnz
test
jo
les
pop
or
roll
or
jnp
ja
jne
in
push
adc
jnp
dec
or
fwait
sub
cmp
movsl
xor
add
push
or
xchg
push
sub
mov
testb
rorl
pop
jbe
ret
sbbb
or
je
inc
xor
pop
and
push
xchg
das
cld
and
inc
sbb
jns
pop
pop
cwtl
pusha
lods
sbb
sahf
cmp
popf
jecxz
inc
cmp
int3
pop
movsl
xor
push
imul
iret
pop
lock
and
lcall
jo
push
mov
pop
jne,pt
xlat
push
push
call
sub
mov
push
jnp
negl
js
test
push
dec
roll
cmp
rclb
addr16
push
nopl
cmpsb
ret
xchg
and
cli
xchg
sub
mov
testl
or
shlb
sahf
inc
push
sub
push
fisubs
sbb
shlb
mov
or
or
imul
mov
xor
or
std
jmp
sub
cwtl
jge
insl
test
leave
mov
lret
sbb
fsubrs
bound
hlt
jae
add
xor
stos
pop
ret
pop
lcall
inc
xor
cmp
jb
push
xor
aas
push
dec
pushl
jae
mov
fidivrl
shll
dec
insl
or
sbb
test
sub
or
add
cmp
or
dec
movl
mov
xchg
les
push
cmpsb
inc
ljmp
mov
mov
dec
inc
insb
cmp
jmp
test
sti
inc
leave
inc
je
cmp
inc
pop
mov
push
rolb
cmovge
mov
cmpb
add
sbb
dec
pop
inc
push
or
mov
pop
push
loope
imul
pop
mov
cmp
or
adc
jp
push
cmp
ret
or
adc
shll
and
or
xor
ret
es
mov
divl
add
sti
fnstenv
push
movsb
rcrb
add
mov
fldl
out
fldenv
and
loopne
mov
or
dec
dec
jb
dec
rolb
insl
xlat
add
leave
arpl
and
sti
mov
sbb
inc
stc
cmp
mov
jge
ja
daa
jne
xor
sti
lods
fwait
jmp
cmp
jne
sbb
mov
lea
or
test
cmpsl
or
jo
jp
jp
jno
call
pop
fidivl
aam
shlb
loop
mov
jne
test
pop
out
lods
enter
xchg
sbb
sbb
aam
add
fcoml
pop
nop
pop
dec
aaa
pop
ret
or
jecxz
sub
gs
outsl
in
xchg
mov
dec
rolb
mov
cli
jne
adc
in
cmpsb
std
add
addb
xlat
xor
adc
imul
push
dec
in
jecxz
jo
or
dec
arpl
push
or
lods
inc
sub
shrl
enter
jno
xchg
sbbl
jno
outsl
adc
fnsave
cmpb
push
das
or
lahf
xchg
sub
jo
add
xchg
inc
xor
or
mov
sub
and
fbstp
dec
jns
xor
push
add
pop
in
movl
add
pop
pop
push
std
inc
addb
pop
clc
out
push
add
divb
cmp
lock
enter
add
clc
mov
sub
cmp
loopne
xor
or
or
pop
push
push
idivb
adc
imul
lock
jmp
sbbb
enter
adcb
and
in
or
mov
jmp
adc
pop
ds
dec
dec
inc
jb
popf
add
out
loop
cs
fsubr
dec
jae
push
mov
loop
scas
or
movl
add
or
scas
xor
mov
jb
xor
add
insl
dec
sub
sub
or
xor
add
test
cmpb
fwait
in
mov
or
xor
jnp
adc
xlat
adc
lock
cltd
mov
add
adc
pop
xorb
xor
or
add
inc
es
in
aad
jns
scas
fs
psubsb
and
inc
dec
shlb
and
int3
mov
xchg
cmc
sub
or
xor
test
into
mov
push
test
stos
mov
jl
pushf
mov
sahf
mov
fmuls
jge
sub
mov
xor
mov
lds
lret
or
cs
lea
push
dec
xor
sarl
js
lret
cmc
xor
insl
jmp
sub
and
fidivs
jmp
push
dec
mov
pop
sub
call
inc
cmp
mov
cmp
dec
push
fisttpl
dec
or
jo
inc
or
rcl
imul
jbe
cmp
ficompl
cmpsl
pop
push
ret
pop
cmp
retw
outsl
cmp
adc
or
mov
stc
pusha
cmp
xchg
add
add
or
movsb
testb
or
andl
mov
sub
add
lcall
repnz
pop
addl
test
adc
pop
jl
mov
jmp
rorb
mov
push
or
sbbb
and
sub
xor
and
adc
jne
inc
xorl
mov
imul
cmovle
out
adc
movaps
cmp
inc
or
add
or
nop
out
sti
or
or
mov
push
sub
sbb
push
pop
dec
enter
mov
ja
jno
lods
push
out
mov
jo
loopne
or
es
repz
xchg
mov
sub
pop
push
cli
sbb
push
push
and
sub
ret
adc
xchg
xchg
les
mov
sbb
icebp
adcb
xor
sar
pushf
mov
jg
cmp
push
icebp
and
ja
sub
jnp
and
adc
andb
out
jl
or
pop
insb
xor
jne
int
mov
je
mov
sub
adc
inc
jne
pop
push
jae
je
mov
mov
add
std
pop
clc
add
push
adc
inc
mov
enter
lcall
xlat
or
mov
icebp
xchg
data16
jmp
lea
js
dec
daa
dec
jle
or
push
in
add
jns
xchg
movsl
mov
cmp
mov
or
in
inc
or
xchg
add
mov
mov
xchg
cmpsb
out
adc
xchg
inc
fdivrs
cmp
adc
test
mov
js
or
mov
sub
fsubl
mov
jno
cmp
dec
jno
jecxz
pop
movsl
sbb
loopne
pop
pop
outsl
sbb
xor
add
cmp
lock
repz
adc
mov
jo
xchg
dec
push
fcomps
pusha
es
je
scas
jae
cmp
pop
mov
sbb
sbb
fimuls
xor
push
flds
push
es
xor
cmp
decl
ret
insl
or
shr
rep
adc
data16
push
pop
dec
movsl
gs
mov
test
jb
popf
push
insb
fs
lods
jmp
pop
adc
pop
mov
jbe
stos
pop
jg
sub
mov
adc
push
imul
mov
jae
add
sti
loopne
outsl
testb
data16
mov
push
or
sub
decl
push
jne
pusha
loopne
add
loope
in
pop
lcall
das
sbb
mov
add
iret
add
push
jmp
add
or
mov
mov
daa
jmp
into
fwait
jne
xor
ret
cli
lds
ror
orl
into
push
pop
popa
popa
imul
push
test
sahf
adc
in
mov
add
add
adc
out
scas
loopne
cmp
insl
loopne
push
fsubl
sti
dec
fadd
jg
gs
imul
icebp
shlb
in
xor
scas
aam
fldt
xor
or
mov
or
and
xchg
jmp
aam
aas
adc
cmp
inc
rolb
dec
pop
stos
and
adc
dec
or
adc
call
jle
adc
sbb
repz
out
inc
adc
shlb
loopne
adc
shlb
aas
xor
test
push
std
loopne
or
mov
push
push
add
data16
call
cmp
je
nop
or
pop
cmp
push
jmp
loop
in
mov
mov
sub
jl
or
mov
adc
push
push
ja
inc
test
push
or
sub
or
and
mov
aam
ss
push
aam
clc
test
scas
and
cmc
push
dec
or
mov
dec
cmp
testl
push
xor
imul
xor
cld
sbb
mov
xor
add
loopne
xorl
add
fstpt
les
sub
and
add
mov
sar
inc
test
dec
or
ds
and
je
sar
xor
jnp
mov
mov
sbb
loope
push
ret
push
push
loope
mov
add
insl
xchg
scas
push
dec
and
mov
jg
cmc
fdivs
mov
ret
enter
test
pop
mov
adc
subb
jmp
outsb
test
push
adc
jnp
imul
dec
pop
imul
popa
dec
xchg
mov
lahf
push
adc
and
xor
mov
mov
or
es
loope
ja
testl
xor
fs
add
sbb
jb
adc
adcl
clc
loopne
lret
push
cmpb
shlb
das
test
loopne
pop
push
movl
fucomip
add
and
push
or
xlat
xchg
or
pop
inc
aas
sbb
or
mov
or
movsb
int3
adc
lock
cmovg
cmp
je
dec
test
rcrl
stc
xchg
inc
jecxz
xlat
pop
adcb
pop
hlt
leave
cli
xchg
ss
add
dec
insb
jg
sbb
rorb
push
push
punpckhbw
mov
jo
out
jmp
dec
nop
fsub
cmp
jbe
sub
les
inc
jo
pop
subl
enter
lret
enter
loope
aam
add
add
loopne
outsb
es
xchg
call
adc
jge
sub
jl
mov
clc
pusha
jo
mov
test
daa
pop
addb
mov
int3
pop
sbb
test
cmpsl
adc
cmp
fbld
mov
or
cmp
inc
jb
or
inc
inc
sbb
mov
push
rclb
mov
pop
sub
es
pushw
dec
andb
enter
pop
mov
stos
push
pop
xor
cltd
add
shlb
pop
movsl
mov
sbb
add
sbb
xor
arpl
and
mov
jne
jnp
lahf
fimuls
pop
test
pop
or
icebp
lcall
rolb
mov
add
rcl
sbb
cmpl
push
xchg
push
sbb
flds
cs
popw
inc
xor
adc
ret
sti
lods
pop
cld
adc
inc
mov
shl
mov
fsubr
sarb
push
aam
ret
scas
push
add
add
sub
daa
dec
push
insb
pop
hlt
jne
jmp
push
sub
cs
xor
mov
push
dec
je
dec
jne
mov
pop
shlb
loopne
pushf
sahf
xchg
inc
push
hlt
dec
pop
pop
loopne
push
lods
enter
add
add
orb
scas
inc
push
push
in
xchg
pusha
add
push
or
pop
add
in
mov
cmp
adc
bound
push
cld
jne
mov
push
cmp
jne
jns
fwait
cmpsl
es
jne
call
add
sarb
jg
jb
jmp
movzbl
push
dec
jmp
adc
jmp
in
out
jns
std
jmp
cld
cld
jmp
fildl
aas
imul
adc
adc
xor
inc
shlb
push
jo
cmp
ss
mov
nop
bnd
or
add
movsb
sub
or
push
ss
mov
addb
jno
mov
loopne
enter
shll
not
dec
and
pop
inc
mov
add
cmpsb
repnz
push
pop
inc
test
sub
add
push
addr16
addl
pop
std
sub
and
or
inc
sub
inc
enter
pop
and
pop
sub
sbb
or
fadd
mov
lods
push
pop
sbb
imul
test
sub
jmp
or
lock
repnz
xchg
lea
dec
movb
jmp
pusha
outsl
inc
lahf
enter
jne
orl
iret
je
mov
adc
dec
les
cmp
jg
add
mov
sahf
mov
mov
add
les
inc
push
repz
push
jnp
sbb
enter
mov
sub
ja
mov
inc
jae
out
hlt
das
and
inc
push
xor
pop
div
mov
cmp
test
sub
jmp
adc
mov
xor
xchg
in
cmp
test
jae,pn
andb
and
out
test
pop
sbb
cmpb
sub
inc
mov
jae
cmp
addb
lods
into
gs
or
sub
mov
sub
dec
aad
mov
xor
jbe
mov
fs
push
les
sub
pop
shll
cmp
adc
mov
mov
push
shlb
cld
icebp
andl
aam
lods
and
mov
mov
addb
adc
inc
push
mov
sarb
mov
js
cmp
push
sbb
sbb
std
add
and
je
add
mov
call
jge
not
and
sub
mov
subb
xchg
inc
pavgb
cmp
xchg
dec
add
adc
adcl
pop
or
loop
inc
sub
lods
push
push
push
adc
jne
sub
pop
push
pushf
mov
mov
inc
fiaddl
jmp
fcomi
jg
sub
incb
mov
inc
je
mov
ffree
push
sub
mov
imull
add
jmp
or
mov
inc
inc
je
xor
pusha
loope
mov
pop
push
scas
mov
pop
inc
cmp
push
add
dec
mov
inc
cmp
jb
fwait
jae
fs
adcl
icebp
cld
cs
jl
add
sti
movsb
scas
pop
pop
ret
lea
js
push
jo
mov
fdiv
pop
adc
adc
ret
adc
add
ljmp
jne
or
shl
push
adc
push
lock
jle
divl
lret
add
sti
mov
pushl
iret
xor
jo
jbe
jne
and
sbb
or
adc
jne
js
or
xor
inc
cld
sub
push
out
cmp
add
jecxz
daa
test
je
mov
faddl
aam
xchg
pop
addr16
pop
sub
out
outsb
or
cld
sub
sbb
sbb
or
mov
sbb
and
lock
cli
jmp
in
test
test
add
jg
fsubl
fstpl
hlt
add
and
pop
sbb
xor
loopne
setl
xchg
xor
ffreep
je
inc
outsl
mov
inc
jmp
cmp
jne
ja
movsl
ficomps
add
add
sub
adc
cmpsb
xlat
push
loopne
inc
adc
cmp
les
mov
lcall
mov
cmp
je
cmp
and
pop
in
adc
insb
adc
pop
into
dec
dec
dec
fmul
add
mov
gs
test
xor
push
loopne
mov
lret
mov
cwtl
clc
roll
lret
sbb
enter
dec
dec
mov
push
push
add
and
sub
sbb
sub
mov
jne
push
or
fnsave
xchg
and
push
ljmp
ret
xorb
shlb
sbb
push
adc
shl
cld
adc
mov
sbb
add
sbbl
xor
or
movsl
negb
scas
mulb
fisubrs
decl
and
mov
add
jle
cld
jno
das
push
stos
movsl
cmp
in
pop
cld
cmp
inc
scas
sbb
pusha
push
or
lds
adcl
icebp
ret
cmp
sub
insb
dec
jmp
push
push
xor
inc
mov
pop
insb
adc
push
sub
push
push
js
pop
add
jae
je
lock
dec
add
mov
sub
cmp
lods
lods
aad
cmpsb
add
popaw
or
jge
jl
jb
shll
cmp
jne
ret
pop
imul
push
mov
adc
cmpsb
xor
sbb
lret
add
sub
jmp
or
out
pusha
jle
or
jb
or
xor
lea
testl
push
mov
xchg
xor
inc
orb
push
adc
sub
and
in
and
pop
in
xchg
int3
loopne
adc
or
in
cmp
les
jae
arpl
test
mov
lcall
fisttpll
jno
sub
xlat
pop
pop
movsl
dec
push
push
aaa
push
call
xchg
xchg
inc
in
into
icebp
mov
jmp
push
sub
jge
je
jne
icebp
cmpsb
arpl
adc
dec
pop
test
pop
stos
cmp
int
lret
nop
shl
lods
push
aad
aad
jns
sbb
fiadds
rcrb
and
mov
adc
pop
jbe
and
inc
lahf
adc
sbb
add
lret
loop
rcr
adc
xlat
cmp
pop
sub
push
add
push
dec
out
add
es
out
popa
int3
out
test
dec
adc
adc
stos
sysret
pop
xor
mov
adc
or
pop
outsl
or
add
adc
lea
repnz
mov
xchg
lock
pop
inc
xchg
jle
call
cmp
hlt
or
inc
xchg
inc
xchg
pop
pusha
push
sbb
push
xor
sar
sbb
sub
ret
jo
dec
divl
nop
adc
sub
sub
jne
push
inc
insb
inc
pushf
cmp
adc
sti
pop
pop
lret
aam
cld
or
mov
jmp
arpl
add
sbb
push
std
jmp
movl
dec
or
mov
add
pop
and
test
dec
gs
sub
or
lods
or
sub
arpl
mov
add
movsl
pop
and
mov
mov
pop
jg
mov
repz
add
sbb
lods
xorl
mov
test
jo
cmp
fs
push
sbb
popf
add
push
inc
lea
jg
rcr
cmp
or
cmp
xor
repz
cmp
notl
out
jmp
insb
sbb
push
rorb
inc
loope
pop
cmp
push
jne
inc
fsubl
add
roll
jp
test
aaa
aad
call
mov
sbb
pusha
add
test
xchg
adc
mov
push
int
nop
jbe
inc
push
or
lea
push
adc
or
mov
ss
adc
or
loop
cmp
sub
push
sbb
add
xchg
mov
mov
adc
ret
es
and
push
and
dec
mov
pop
adc
jne
or
sub
fsubrp
cmp
add
add
cltd
or
dec
lret
jmp
dec
scas
jo
push
xchg
test
xchg
push
inc
and
cmpb
add
repnz
sbb
scas
and
add
nop
mov
lcall
adc
jne
jge
adc
dec
loop
add
call
clc
jmp
shll
fmuls
and
mov
mov
inc
pop
mov
jnp
inc
roll
rolb
or
mov
push
test
out
insb
pop
je
or
xchg
mov
push
xchg
je
and
cmp
inc
repz
cmp
jne
inc
cmp
add
jmp
add
sbb
push
dec
call
repnz
mov
inc
leave
test
add
pusha
adc
test
add
or
orl
mov
rcrb
sbb
inc
fistpll
rcll
push
addl
xlat
subl
and
jmp
inc
add
or
adc
pop
cmp
je
dec
mov
mov
out
mov
les
ja
adc
imul
mov
add
jl
jne
aas
fwait
or
lock
inc
rclb
and
data16
in
and
sbbb
xchg
fnstcw
add
ret
add
and
mov
xchg
std
fisttpl
cmp
movd
movaps
out
push
enter
shlb
jle
xor
das
sbbl
je
or
jge
repz
or
jg
dec
xor
mov
mov
xchg
ret
adc
jnp
mov
xlat
aas
mov
push
and
mov
mov
add
adc
sub
test
pop
add
fadd
roll
jbe
and
push
cmp
addps
int
mov
adc
fcmovb
sbb
sbb
inc
pop
test
test
pop
test
repz
add
in
clc
ja
jno
outsb
push
push
fadd
add
push
dec
xchg
cmpsb
outsl
jb
or
sbbb
test
repnz
push
xor
mov
mov
add
adc
enter
dec
lahf
adc
adc
movsb
jne
lret
sahf
aas
jle
scas
adc
shr
jns
jbe
loopne
imul
push
mov
inc
sbb
add
or
add
mov
push
push
movb
mov
les
cs
addr16
push
sbb
sbb
sbb
xor
xchg
enter
loope
rcll
rolb
and
lcall
push
clc
cmp
jno
addr16
movsb
cwtl
jecxz
sbb
jp
leave
jge
mov
leave
movsl
movl
cmp
insb
mov
sbb
mov
gs
dec
pushf
inc
inc
cld
pop
popf
jmp
sbb
or
jo
test
dec
sbb
pop
sub
or
decb
push
add
and
mov
adcl
lock
hlt
push
and
jmp
jnp
incl
add
push
loop
mov
mov
repnz
lret
je
cmp
js
inc
push
or
inc
dec
loopne
add
aas
ret
mov
xor
pop
push
push
push
xchg
pop
pop
pop
push
sub
cmp
data16
sub
pop
and
popa
enter
jecxz
mov
lods
and
push
mov
nop
and
sbb
jns
arpl
adc
add
cltd
hlt
add
and
or
push
in
mov
and
cld
pop
sbb
in
cmpsb
adc
aad
push
mov
pop
jg
jb
in
idivl
arpl
push
sub
adc
lods
ds
sub
js
shl
or
cmp
fdivr
aas
movsb
fdivl
adc
jne
inc
cmpb
out
adcb
ffree
xor
mov
inc
inc
and
adc
push
aas
adc
add
sbb
xor
push
test
inc
les
inc
xor
mov
arpl
pop
add
jne
in
clc
adcb
cmp
xor
adc
popa
stos
or
mov
or
lret
or
fsubrl
pusha
adc
inc
xor
je
sbb
aaa
push
lds
pop
and
loope
scas
dec
jb
movl
inc
xchg
add
pop
mov
mov
xor
inc
andb
enter
test
sbb
das
sub
mov
or
lcallw
js
sbb
sbb
or
adc
imul
lea
cmp
push
cmp
div
mov
mov
adc
shl
dec
push
jo
sub
int
mov
aaa
pop
cmp
pushf
mov
cmp
je
push
cmp
dec
lret
sub
cmpsb
mov
jne
push
adc
or
add
ja
or
pop
sub
cmpsl
ret
in
ret
mov
pop
je
push
mov
aad
inc
pop
jno
xlat
mov
or
and
sbb
inc
ss
push
xchg
xlat
test
cmp
jmp
and
clc
icebp
add
loop
es
pop
add
nop
add
xorl
mov
sbb
shr
xchg
push
jbe
mov
call
adc
mov
insl
lock
js
or
arpl
pop
and
adc
scas
arpl
xchg
icebp
shll
call
repz
mov
std
xadd
and
or
xchg
pop
rorl
push
addl
ja
push
ss
enter
addb
inc
push
adc
std
xchg
mov
pop
sahf
or
push
inc
pop
fisttpl
and
sbb
jno
mov
hlt
pop
mov
movsb
push
sub
mov
insb
mov
sti
test
or
or
cmpsb
jne
imul
mov
and
xor
js
hlt
jle
movb
push
cmpsl
mov
adc
sbb
inc
sbb
test
xor
shrb
inc
add
int
dec
push
rolb
push
testb
repz
shl
ret
xchg
mov
inc
data16
mov
cmp
and
dec
cmc
add
fucomi
je
inc
ret
xor
imul
roll
jl
scas
aam
loope
movsl
es
mov
shrb
insl
mov
jmp
movl
dec
out
loopne
jne
xchg
ljmp
in
adc
or
fildll
mov
addl
inc
decl
cmp
push
dec
sub
adc
mov
jbe
stos
cltd
pop
idiv
test
decl
mov
loopne
aad
loopne
loopne
in
fimull
scas
mov
mov
add
sbb
loopne
mov
xchg
xchg
mov
or
ds
lcall
je
dec
rclb
aam
inc
mov
pop
cmpb
cmpsb
push
loopne
mov
push
add
or
mov
dec
adc
mov
jle
fcoms
fdivrl
in
and
pop
or
in
sbb
idivl
or
repnz
in
jns
add
or
push
icebp
cs
push
negb
fstpt
xchg
loopne
mov
inc
add
or
test
les
cmpsl
cmpsb
push
imul
out
and
lods
push
ret
in
mov
mov
in
loope
in
mov
adc
and
lods
add
addl
inc
pop
or
or
jg
scas
dec
outsb
loopne
sbb
mov
push
popa
xor
dec
adc
mov
test
jl
faddl
idiv
adc
rol
fwait
sbb
xchg
dec
shr
jmp
daa
adc
aam
fs
mov
xorl
call
loop
or
xchg
movsl
jmp
dec
pop
std
cmpsb
mov
add
or
push
outsl
inc
mov
dec
push
sbb
lret
mov
add
sub
dec
push
sub
adc
aam
in
adc
xor
push
push
fsubrl
or
lds
lea
test
jle
fisubl
add
xor
lock
js
scas
pop
xchg
push
test
shll
mov
addr16
add
mov
orb
inc
adc
popa
dec
aam
mov
test
sbb
push
imul
xchg
push
je
cmp
and
mulb
xlat
pop
jns
dec
or
in
or
jg
mov
mov
call
loopne
inc
dec
cmc
push
iret
or
pop
cmp
push
xchg
jbe
leave
add
inc
imul
add
jmp
rorb
add
dec
lock
dec
pop
push
jmp
sub
pop
int
sub
push
pop
in
sbb
loopne
fs
imul
rolb
cmp
add
pop
dec
mov
or
sahf
test
sub
and
jae
lret
sub
or
jle
ss
insb
loopne
push
incl
out
inc
es
movsb
outsl
jne
mov
add
add
sub
sbb
rol
cs
add
imul
test
ret
rcll
rclb
adc
je
aad
push
dec
and
mov
or
jg
insb
mov
pop
jle
jb
fimull
stos
push
insb
ss
cli
or
lea
xchg
in
out
xchg
xchg
and
dec
push
mov
sbb
fmull
jns
add
outsb
pusha
add
add
lret
das
enter
imul
or
and
or
push
mov
dec
fsubrs
imull
cmp
fs
mov
pushf
je
push
push
dec
adc
dec
or
sbb
mov
sub
mov
cmp
lret
push
cmpsb
mov
sbb
push
inc
lods
scas
push
jo
movsl
stos
sbb
adc
or
scas
insl
or
cmp
mov
sti
ret
push
sarl
adc
inc
inc
test
dec
fldt
mov
push
pop
std
idivl
ret
fsts
stc
xchg
clc
push
mov
jmp
mov
shll
push
data16
mov
fs
in
push
insb
pop
jmp
loopne
inc
sub
adc
insl
call
jmp
dec
or
je
ret
add
add
xchg
mov
addr16
les
mov
jmp
mov
or
stos
shrb
rcrb
cltd
pop
inc
mov
test
add
cmpsb
cmp
inc
clc
sbb
push
cli
xlat
je
fldcw
xor
add
addl
push
pop
sets
push
shll
inc
push
mov
in
js
in
push
add
rol
js
aam
cmpsl
xor
mov
push
lret
imul
movsb
lret
inc
daa
fwait
xchg
dec
roll
sbb
test
sbb
inc
pop
mov
dec
sub
jge
call
inc
pushl
lea
aaa
push
lea
mov
cmp
mov
inc
sub
add
popa
mov
cmp
ret
pop
aam
cs
aam
cmp
insl
push
ds
mov
push
jp
xchg
mov
lret
sub
or
fcoml
adc
cmpsb
and
movsb
adc
popf
out
lret
movsb
sbb
mov
sbb
xchg
xchg
sub
pushf
jb
mov
dec
dec
push
ret
push
fs
cmp
ljmp
test
call
ret
js
jbe
addr16
dec
pop
push
inc
lock
js
mov
clc
mov
and
or
xlat
xchg
adcb
sbbb
mov
movsl
mov
adc
insb
sub
mov
dec
cld
jmp
loop
mov
push
aad
ss
in
push
sbb
add
mov
add
sub
rcr
out
ja
or
mov
cmp
mov
jp
call
fdivrs
hlt
push
lock
fsubrs
cmp
push
jmp
pop
out
lods
xor
jg
iret
xchg
push
scas
dec
sub
leave
cmp
xlat
repnz
sub
cli
popa
sbb
and
sub
adc
scas
sar
pop
lea
mov
mov
xchg
fidivl
rcll
je
jbe
adc
lds
sbb
iret
inc
enter
jp
or
push
dec
add
aad
fsubs
push
adc
and
push
pusha
and
xchg
mov
fcomi
mov
sbb
jge
push
loope
jne
mov
mov
loope
inc
add
in
daa
push
mov
push
int3
aad
stos
int3
add
imul
andb
orl
cmp
mov
jb
push
pop
jp
sbb
lock
mov
lret
sbb
pop
and
cld
loop
add
pop
pop
jne
repnz
xchg
test
std
adc
stos
loop
mov
or
rep
jmp
mov
xor
jb
cmp
add
cs
data16
lock
jecxz
pop
in
je
or
push
push
and
jbe
aad
and
jle
inc
add
enter
add
int3
dec
jnp
dec
push
dec
add
add
inc
xor
testl
mov
or
push
cmp
repz
movsb
pushf
xchg
jns
out
mov
mov
call
sahf
out
lock
hlt
cltd
ret
clc
clc
cld
push
adc
adcb
cli
clc
lcall
clc
push
add
sbb
pop
jmp
inc
xor
push
lods
pop
sti
and
popa
xchg
and
jp
jo
sub
jl
cld
pop
and
std
cmp
lret
cld
out
jl
neg
adc
sub
pop
sbb
mov
stc
sub
outsb
pop
nop
nop
push
mov
add
xor
jl
mov
dec
inc
fsubrs
out
mov
dec
in
add
xorl
addr16
mov
fadds
mov
or
push
inc
jl
out
dec
push
pop
pusha
jae
sahf
out
pop
aaa
sbb
sbb
adc
sahf
out
adc
adc
or
out
or
loop
fimuls
mov
xchg
push
movsb
mov
movsb
aaa
push
add
pop
mov
adc
ja
les
jne
pop
xchg
aas
xchg
or
pop
xchg
dec
jl
adc
cld
cmp
adc
leave
mov
inc
je
mov
cltd
and
push
int
cld
testb
jne
or
xorb
pop
in
adc
outsb
inc
mov
add
push
pop
mov
xchg
push
test
push
dec
notb
movsl
sti
inc
and
jne
push
sbb
sar
subl
push
loopne
push
mov
inc
and
cmp
mov
jo
mov
mov
iret
fimuls
lcall
mov
enter
adc
jp
sbb
int
push
or
stos
add
in
or
jmp
test
jbe
jp
cmp
cld
fidivrl
fstl
fnstcw
ljmp
inc
sbb
or
inc
push
dec
or
lock
enter
adc
sbb
mull
mov
pop
or
sbb
fs
in
pop
pop
out
pop
enter
fsubrp
aam
push
shrl
add
imul
sub
or
push
aaa
adc
int3
les
call
inc
xorl
orb
daa
sbb
pop
aam
jge
push
lock
adc
daa
loope
push
jb
int
xor
dec
loope
cmp
and
dec
pop
push
mov
and
cld
add
pop
std
movb
jmp
fldl
leave
mov
pop
push
mov
push
xchg
loope
sbb
mov
push
mov
add
pop
add
or
dec
stc
adc
rorl
lock
mov
adc
mov
sub
loopew
dec
enter
mov
and
imul
lcall
push
popa
fisubrl
dec
addb
xor
add
je
sub
or
cld
jmp
addb
mov
add
or
xor
sbb
stos
mov
dec
ljmp
push
mov
cmc
xchg
mov
or
pop
sbb
dec
repnz
data16
sbb
stc
repz
popl
cld
xor
mov
sbbb
in
pop
test
mov
add
mov
push
sbb
pop
pop
pop
test
lea
inc
mov
les
hlt
adc
mov
sub
int3
pushw
fldt
in
dec
lret
sbb
loop
call
popa
push
inc
push
sbb
leave
jecxz
aam
push
les
sub
push
addl
addr16
mov
testb
shll
adc
or
sbb
pop
push
xor
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
or
jae
pop
adc
push
bswap
and
pop
in
xchg
pusha
xchg
clc
jno
insl
push
ror
lret
cld
mov
add
pop
xchg
mov
fldcw
add
pop
stos
ret
mov
xor
mov
dec
jmp
lods
inc
inc
daa
repnz
sub
xchg
dec
dec
sub
pop
xchg
add
add
mov
sub
jo
test
rorl
imul
dec
or
fwait
popa
xchg
sbb
mov
inc
scas
jecxz
mov
inc
cmpl
xchg
xor
push
mov
adc
jbe
push
inc
out
add
inc
jne
test
mov
push
or
inc
add
ficoms
inc
jnp
loope
sub
mov
divl
inc
fists
or
mov
xor
sar
dec
cmpb
mov
fcompl
add
dec
ljmp
jns
mov
lock
enter
xor
xchg
add
mov
xchg
outsb
push
push
pop
cmc
and
adc
pop
inc
fsubl
sub
or
push
lret
pop
cmp
fnstsw
movb
loope
dec
jmp
popa
inc
pop
insb
dec
dec
mov
push
adc
nop
dec
inc
testb
fstps
je
std
rolb
cmp
dec
or
push
dec
add
cmpsb
xlat
test
and
or
lret
popf
mov
in
xorl
popf
sub
pop
fidivl
sub
popf
scas
pusha
mov
add
pop
ss
pop
cmp
movsl
sub
leave
xchg
call
sub
sub
sti
outsl
push
or
add
cmpl
sahf
sar
lahf
lea
fbld
ja
mov
add
shll
sarl
test
js
push
sar
pop
lods
movsb
popf
mov
es
jno
jl
sarb
lea
call
rcr
jno
push
lret
clc
les
lret
insl
and
je
or
je
or
sbb
movsl
into
xor
lea
add
arpl
sbb
or
ret
adc
pop
adc
jo
jl
mov
mov
shlb
lea
ja
cmpsb
xor
add
fs
pop
sbb
test
stc
cmp
fisubrl
or
inc
insb
pushf
mov
aad
test
dec
loope
insb
fsubl
mov
pop
icebp
adc
sbb
pop
pop
mov
mov
js
add
or
jge
adc
movsb
inc
xor
movsl
orl
fs
cmp
imul
jne
dec
jae
and
pop
adc
sub
imul
inc
call
adc
popa
lcall
ljmp
add
das
xchg
add
sbb
sbb
jle
inc
je
pop
divb
cmp
jno
inc
xchg
mov
push
jecxz
popf
sub
jge
xchg
and
arpl
negl
inc
arpl
sub
pusha
cmp
xchg
aaa
aam
inc
mov
cld
add
loope
or
dec
and
in
adcl
or
mov
in
mov
test
scas
xchg
push
mov
fisttpll
adc
push
push
popf
cmp
inc
push
insl
cmp
jl
xor
sub
push
loopne
shl
jno
les
mov
pop
xorb
cmp
mov
adc
push
dec
sub
push
mov
mov
push
dec
pop
and
movsl
pop
ret
movsl
jo
inc
and
idiv
leave
push
mov
inc
jge
jl
lods
xlat
mov
mov
jmp
mov
dec
loope
xchg
enter
movswl
and
lea
jl
shlb
sbb
ret
push
dec
sub
outsb
jo
jmp
andb
add
addr16
ss
je
or
sub
cmpsb
and
fwait
loope
sbb
mov
popa
xor
bound
gs
stc
test
imul
or
and
xchg
adc
in
cmp
sbb
or
and
rorl
add
add
and
imul
pop
mov
mov
jmp
cmp
jle
popa
into
icebp
sub
mov
cmp
daa
rcll
add
xchg
subl
aas
rclb
jmp
push
insb
inc
lea
sbb
nop
dec
inc
cmp
adc
adc
fistl
sbb
mull
push
xchg
sub
inc
sbb
in
inc
pop
movsb
xor
mov
stos
cmp
and
and
sub
popf
push
push
inc
scas
data16
add
adc
sbb
inc
rorl
sub
clc
or
jo
dec
push
xor
mov
shll
pusha
cld
or
mov
jmp
mov
add
push
arpl
fmulp
xor
imul
push
into
frstor
sti
jbe
sbb
push
scas
mov
adc
dec
mov
nop
inc
cld
jmp
add
cltd
sub
cltd
in
or
add
mov
adcb
in
xchg
jae
jno
or
neg
mov
and
xor
mov
jnp
or
sbb
push
lock
and
mov
or
or
cmp
fmul
lea
or
or
movsb
push
inc
mov
add
add
cltd
push
dec
movsl
fildl
xor
clc
repnz
loop
mov
sahf
add
mov
cmp
movb
mov
test
pop
scas
into
addb
shlb
aaa
cmc
movb
inc
jmp
test
stos
jmp
dec
bound
je
repnz
sar
ret
imul
pop
std
scas
sub
sarl
inc
add
sub
pop
rorl
push
and
leave
fmuls
pusha
or
sub
or
cmp
imulb
idiv
in
jle
cmp
add
dec
sub
xor
jg
out
mov
test
out
and
fldt
mov
xor
xor
and
add
pop
in
jo
sub
aam
add
sub
pushf
jmp
cli
ret
jle
sub
lret
jecxz
add
mov
fisttpll
lock
jmp
sub
sub
pop
int
sub
scas
fldenv
into
sub
mov
arpl
and
pop
pusha
andb
sahf
clc
mov
push
movsl
daa
pop
mov
sbb
pop
clc
cmp
and
movsb
adc
sbb
bound
mov
jge
dec
pop
not
popa
or
add
test
in
push
pop
jae
add
cmp
cs
add
lcall
in
jle
jg
sbb
xor
pusha
push
pop
add
loopne
jle
mov
pop
dec
jnp
xchg
bound
pop
or
out
in
push
loopne
cmp
in
aam
les
mov
es
sbb
dec
shl
jmp
jg
and
jns
lods
sbbb
push
push
mov
pop
nop
rclb
push
or
add
rclb
pop
push
pop
out
mov
or
push
jo
lahf
jnp
js
mov
xchg
or
add
lock
aam
sbbb
xchg
dec
push
aas
fsubrl
or
mov
mov
rolb
cmp
addr16
adc
xchg
inc
jle
mov
inc
jae
aad
push
fstps
es
jbe
jno
pop
adc
mov
pop
ret
adc
loopne
dec
or
cmp
add
test
jmp
and
jle
es
outsb
jae
mov
mov
rcll
dec
mov
inc
and
fidivl
call
paddsw
pushf
push
or
stos
aas
shll
fdiv
push
mov
mov
jno
push
fisttps
roll
mov
andb
jno
jp
setb
xor
icebp
into
pop
movsb
and
pusha
sbb
sub
roll
add
lock
add
es
add
push
or
xchg
in
mov
out
xchg
pop
adc
fisubl
fsts
fsubl
add
cmpsb
xchg
xchg
cmc
daa
mov
adc
pop
int
rcrb
push
shlb
aam
test
cmp
testb
add
outsb
dec
mov
mov
aaa
insl
and
lahf
xchg
jno
mov
test
jp
add
push
mov
stos
mov
stos
dec
dec
call
adcl
adc
out
cmp
inc
loopne
loopne
loopne
and
mov
sbb
fldt
jmp
and
dec
mov
or
add
dec
divl
stc
and
test
sbb
add
pop
adc
pop
rcrb
pop
popa
or
divl
int3
lock
mov
scas
decb
cmp
jb
inc
add
cmp
and
cld
scas
and
nop
add
adc
ret
or
mov
jae
push
insb
add
add
cmp
push
and
movsl
pop
frstor
xor
cmp
sbb
push
push
cmp
adc
pop
call
dec
mov
ljmp
iret
inc
pop
mov
adc
mov
add
rolb
outsb
or
inc
sub
sub
add
je
enter
sar
mov
sbb
sbb
mov
push
int3
loopne
or
movsl
pushl
adc
xchg
push
pusha
sub
in
pop
mov
push
icebp
push
add
cmp
aam
mov
jl
inc
mov
mov
adc
or
sbb
inc
jb
xchg
mov
rol
xchg
ret
jbe
frstor
push
mov
pop
adc
imul
or
or
xchg
pop
cli
call
cvtps2pi
and
bound
sbb
jo
push
psllw
jns
push
and
inc
js
push
shrb
rcrl
roll
lret
pop
fwait
mov
jmp
hlt
ficoms
leave
call
dec
xchg
scas
sub
mov
pop
and
fs
jl
adc
push
lea
loopne
mov
dec
mov
xchg
test
mov
sbb
test
push
mov
mov
and
pop
ror
lock
leave
mov
or
cmp
push
xchg
inc
xor
add
add
add
add
add
xor
pop
adc
push
sbb
or
mov
add
mulb
or
fs
xor
cld
mov
pop
sti
shlb
mov
cld
dec
xchg
xchg
xor
dec
jle
add
jg
fwait
les
and
add
addb
and
add
leave
cmp
mov
jo
jmp
cmp
lods
mov
adc
xchg
and
mov
add
push
movsb
mov
sbb
aad
sahf
and
scas
xor
push
sub
pop
jmp
adc
or
push
sub
outsb
sbb
rcll
aaa
cmp
dec
adc
lret
test
xchg
pusha
lea
data16
push
aam
xchg
mov
mov
push
jmp
imul
mov
mov
mov
xchg
lcall
in
lahf
inc
inc
cmpl
jne
push
cmp
sub
push
js
das
nop
adc
fstl
sub
adc
add
pop
inc
lods
clc
push
imul
mov
mov
rclb
sub
test
lock
ret
or
in
mov
rclb
ret
enter
pop
add
das
cmp
aam
or
push
loopne
pop
ja
clc
mov
xor
fisttpl
sbb
rorb
mov
es
pop
rcll
add
or
scas
xorb
cmp
xchg
and
sar
jae
pop
orl
outsb
inc
hlt
xor
ret
adc
mov
enter
push
pusha
cltd
mov
xor
mov
xor
xor
sub
call
adc
test
pusha
xor
jecxz
scas
ror
dec
and
outsl
push
xor
add
icebp
xor
lds
cmp
jbe
ret
test
xor
adc
fsubrl
and
insb
pushf
add
cmpb
sub
dec
fdivl
cmp
xor
mov
add
cmp
cmp
test
das
js
cmp
es
or
test
dec
lds
adc
push
xor
shlb
pushf
pop
mov
dec
sbbl
in
adcb
or
leave
jge
aas
ljmp
sbb
cmp
clc
push
sbb
push
mov
push
jns
xorb
movb
cmp
sbb
pop
sub
push
call
inc
cs
add
dec
sbb
inc
cmp
mov
fcomps
subb
sbb
add
mov
add
push
mov
or
call
push
sbbb
in
cmpsl
xchg
xchg
adc
frndint
mov
mov
cmpl
pop
mov
lret
test
adc
leave
adc
nop
mov
xchg
sbb
rcll
push
mov
dec
adc
dec
jle
adc
lcall
adc
sub
stc
or
mov
fsubrl
test
sub
or
push
in
lods
pop
add
xchg
inc
dec
ss
or
movb
push
push
repz
sbb
cwtl
fs
pusha
inc
aam
in
push
inc
xchg
pop
decl
aam
xchg
dec
movsl
fmul
in
adcb
mov
push
fadds
sub
dec
and
push
push
paddq
in
adcb
es
in
bound
push
jbe
add
nop
stos
push
daa
pop
lods
imul
loopne
cmpl
add
fadds
cmc
es
adc
fcomip
ds
aas
xchg
in
orb
jnp
pop
lods
movsb
add
pop
pop
dec
or
add
add
inc
mov
sbb
sbb
loopne
xchg
sub
mov
mov
pop
push
xchg
loope
pusha
xchg
movsb
push
add
outsl
and
xchg
ret
xchg
and
jne
scas
jne
and
shll
or
or
xor
mov
ds
movsb
sub
push
das
mov
jp
or
js
mov
dec
add
adcb
mov
adc
jp
mov
mov
lock
loop
pop
add
dec
in
negb
outsb
das
jne
add
add
or
and
or
je
push
add
sub
addb
add
push
cwtl
mov
rorb
ja
sbb
sarl
ret
xchg
fidivrl
add
mov
push
je
movsl
mov
add
mov
mov
gs
fildll
mov
push
hlt
or
lret
add
or
dec
rcll
insl
and
dec
and
cmp
ds
ljmp
add
adc
shll
lea
add
in
jle
sub
mov
mov
inc
cld
out
mov
sbb
dec
add
adc
in
add
push
fldcw
add
fsubrs
std
add
xor
mov
cli
and
and
negb
xor
out
and
mov
add
fimuls
ja
sub
push
xchg
push
pop
or
push
popf
xor
inc
cs
xor
into
jbe
loopne
fidivs
rcr
push
notb
or
xchg
mov
sub
mov
push
push
or
mov
dec
and
decl
mov
int
push
orb
mov
lods
jmp
and
and
and
pop
mov
adc
mov
add
lahf
jbe
sub
out
out
jle
mov
cmp
and
fiaddl
adc
or
or
cld
jmp
movb
movb
sbb
pop
clc
mov
or
push
jg
add
rcr
xor
fmuls
add
and
xchg
inc
mov
xor
xchg
inc
js
or
jno
repnz
add
into
mov
mov
push
test
mov
jmp
mov
shll
xor
mov
clc
pop
cmp
jne
movl
inc
add
inc
std
jne
nop
subb
jmp
sub
push
inc
popf
and
stc
adc
or
inc
dec
jbe
inc
mov
sti
add
fimull
push
punpckhbw
or
test
pusha
mov
xor
push
dec
dec
jmp
lea
jb
or
jae
je
jmp
sbb
push
sbb
push
and
scas
into
dec
aam
inc
dec
mov
aas
rolb
rcrl
inc
jnp
jae
cmp
jbe
lcall
dec
call
jnp
aam
inc
push
leave
inc
mov
lea
jmp
add
dec
imul
xor
in
enter
mov
fs
sbbb
or
lcall
or
mov
add
shlb
inc
adc
inc
ret
add
jb
mov
cmpsl
mov
xor
push
fmull
mov
xor
dec
jo
jl,pn
fdivrl
es
dec
jne
mov
dec
outsb
mov
test
adc
jbe
fninit
push
call
inc
jbe
mov
dec
or
inc
dec
jne
or
sahf
dec
scas
stos
mov
jmp
add
jb
push
jnp
mov
xor
cmp
dec
icebp
adc
cmp
lcall
mov
ret
mov
cmpb
mov
push
and
mov
xlat
adc
in
mov
lret
add
jne
add
pop
and
pop
loope
push
dec
pop
push
enter
push
aam
xor
xlat
testb
insb
ljmp
add
fisttps
push
aad
add
inc
push
or
or
mov
ret
shl
clc
add
out
testl
cmp
mov
sbb
mov
xchg
xor
add
sbb
sub
stos
ljmp
adc
jno
es
shr
popf
jmp
adc
cmp
imul
sub
lret
ret
icebp
sub
push
mov
pusha
and
xorl
dec
fbstp
add
nop
out
dec
push
sbb
xchg
rorb
loope
sahf
cmpl
icebp
lods
enter
jnp
jb
pop
fstpl
push
ret
adc
jb
movsl
sub
fwait
subb
xor
xor
add
sub
xor
cmp
rolb
sbb
je
cmp
or
aam
jns
xor
lcall
pop
push
cmpb
adc
or
hlt
inc
mov
sarb
das
adc
fidivl
inc
inc
sbb
sub
add
sarl
call
sbb
add
cld
test
cwtl
daa
sbb
xchg
jbe
lahf
ljmp
push
lcall
add
pop
cld
ret
sub
add
jns
add
leave
pop
loope
inc
or
leave
xor
or
sbbl
dec
mov
sub
mov
leave
daa
or
xchg
and
cmp
mov
pop
lock
pop
adc
sbb
jo
push
or
ss
ja
adc
add
leave
nop
mov
cmc
jle
call
push
mov
add
jb
ret
or
mov
add
mov
pop
add
dec
shl
and
adc
das
and
scas
or
je
test
in
xchg
adcb
push
and
fsubr
cmp
js
push
scas
insb
push
sahf
cltd
jl
cmpl
sarb
push
jbe
inc
movl
adc
xchg
pop
sub
sub
xchg
dec
add
push
cmp
jg
jo
ret
xchg
xchg
jbe
sbb
ret
mov
rcrb
adc
mov
movsl
push
jg
xchg
pusha
jo
push
imul
imul
add
ret
in
xchg
arpl
pop
dec
rol
mov
sbb
push
ds
popa
mov
push
movsb
jo
lret
cmp
fnstenv
not
aam
xor
pop
jmp
ror
push
adc
scas
mov
jno
ror
and
and
push
ss
sub
xor
inc
push
in
inc
inc
data16
inc
push
dec
pop
cmp
mov
and
sbb
or
jmp
push
and
cmp
shll
and
pop
cmp
jge
jle
or
hlt
add
mov
jo
insl
jg
sbb
push
adcl
push
out
jno
mov
aam
jbe
jo
fs
jo
lret
enter
sbb
mov
mov
or
or
pop
pushf
and
mov
out
jbe
test
pop
mov
ljmp
xchg
scas
mov
into
into
orb
jl
enter
xor
pop
adcb
pop
xor
faddp
pop
aas
xchg
arpl
fistpll
jne
cmp
xor
lahf
xor
and
ja
outsl
js
pop
mov
xchg
adc
pop
dec
cli
stc
mov
orb
fadds
mov
mov
mov
lods
std
sbbb
das
mov
aaa
je
incb
mov
sbb
lock
aaa
je
aaa
pop
mov
mov
push
shlb
mov
fwait
dec
stc
jg
mov
in
dec
ret
test
push
clc
inc
outsb
idivb
mov
pop
cs
dec
shlb
leave
xchg
or
mov
ss
mov
subb
pop
pusha
cmp
mov
in
inc
repnz
mov
movb
aas
fcoml
or
shl
sbb
femms
jge
mov
fldt
leave
in
jne
or
add
jb
test
orl
ret
add
mov
inc
ljmp
fistl
imull
popa
mov
ret
or
cmp
mov
es
mov
call
std
pop
cwtl
inc
mov
inc
in
dec
je
or
or
dec
andl
sub
insb
jne
inc
sub
pop
aad
aaa
adc
pop
and
ss
nop
fldt
cmpb
movl
repnz
movsl
sub
mov
xor
mov
push
cmp
push
jmp
movsl
test
pop
xchg
dec
lds
mov
andl
scas
push
mov
fnstcw
aas
outsb
mov
in
pop
cwtl
dec
mov
repnz
cmp
pop
add
cmpsb
push
push
clc
fs
jns
and
adc
dec
xchg
jle
xchg
xor
pop
push
or
mov
sbb
fsubrs
or
lea
push
ret
mul
lods
pushf
adc
adc
repnz
push
pop
ret
repz
mov
mov
lds
cmp
add
stc
add
hlt
and
add
add
or
and
mov
xor
sbb
cmp
jns
daa
mov
cwtl
ds
scas
jbe
lds
mov
cld
jae
xor
sub
icebp
push
mov
testl
dec
mov
mov
add
mov
movsb
addb
push
rcrb
hlt
sbb
imull
into
and
dec
add
push
adc
push
push
push
xchg
outsl
jecxz
outsl
hlt
add
out
or
xchg
mov
lcall
std
and
mov
add
addr16
sbb
out
dec
cmp
mov
and
pop
adc
insl
xor
jecxz
lds
and
jle
test
mov
sbb
and
subb
testl
rorl
test
jno
cmp
ffree
imul
loop
imul
jno
pop
mov
or
jl
aas
repnz
mov
mov
mov
add
jge
adc
xchg
lea
push
mov
pop
scas
push
fstpt
pushf
mov
cmpb
insb
inc
push
cmpsl
mov
hlt
insl
push
out
push
ret
loopne
addb
add
mov
mov
adc
inc
daa
add
push
jo
inc
lea
inc
add
jae
nop
aad
dec
scas
rcrb
jns
inc
push
ret
sbb
push
inc
inc
inc
pusha
jne
fisttpl
jmp
movsl
mov
lea
push
adc
fsubrl
dec
push
pop
mov
imul
jne
xchg
xchg
lcall
std
jecxz
adcl
inc
repz
sbb
ljmp
xchg
movsb
sbb
aaa
adc
or
jnp
stos
mov
shl
inc
push
pusha
xchg
pushf
jmp
push
xor
cmp
add
mov
sub
cli
sbb
cmpsl
mov
jge
in
cmpsl
mov
push
sub
sbb
insl
cmp
jmp
push
sbb
fsubrp
adcl
test
sub
test
jne
dec
and
subl
out
or
fisttps
jmp
adc
in
mov
sub
jge
lahf
std
add
pop
jmp
fwait
mov
mov
dec
lahf
fstpt
pop
pop
xor
sbb
mov
je
push
push
or
mov
int3
nop
sbb
fsubrl
jo
adc
adc
js
add
dec
pop
shll
pop
shr
int
add
pop
dec
insl
inc
mov
inc
pop
pop
and
orl
pop
and
shrb
in
ret
jo
in
daa
pop
mov
mov
xchg
add
cmp
ds
lret
je
pop
movsb
pop
int
std
dec
and
inc
test
push
outsl
fdiv
xor
int
test
push
ss
popf
sub
sbb
xorb
lss
pop
jmp
lahf
add
and
scas
stc
movb
subl
push
stc
lods
add
into
adcl
jbe
add
aam
ret
push
xchg
and
add
adc
dec
add
adc
and
mov
or
arpl
or
add
aaa
push
int3
or
or
ret
int3
inc
ret
fstps
test
adc
pop
mov
jno
xor
nop
faddl
pushf
push
jo
fbstp
add
xor
je
push
sahf
leave
add
imul
adc
add
dec
cmp
push
mulb
inc
adc
lods
leave
dec
add
incb
sub
add
cmp
orb
push
fucomi
add
and
dec
or
adc
sub
sbb
sub
mov
jmp
clc
xchg
rcr
and
lock
jb
xorl
shrl
jmp
adc
test
dec
hlt
out
sub
scas
loopne
iret
fisttpl
cmp
add
add
dec
fidivrs
inc
cs
loopne
pop
fistpll
xchg
movsl
insl
sbb
hlt
and
xor
xor
insb
andb
push
sub
sub
ret
jns
cmp
ja
je
lock
movl
xor
fidivrl
aas
clc
and
jb
pusha
insl
xchg
add
jmp
jns
enter
mov
xchg
pop
push
sbb
dec
loopne
and
gs
xor
loop
or
orb
lock
cmpsb
sbbb
mov
adc
mov
decb
jge
xchg
or
rorb
add
sbb
or
add
and
movsl
or
pop
pop
fwait
xor
pop
add
enter
mov
les
call
inc
inc
jle
and
sub
or
add
jmp
mov
sub
push
or
fsubr
pop
mov
lock
mull
lsl
jmp
mov
and
shr
inc
cmp
lock
or
push
div
pop
dec
fdivrp
mov
out
jb
cmp
or
cmp
jbe
dec
sub
sbb
adc
push
test
adc
pop
lret
pop
sbbl
loopne
or
rorb
cmp
aas
or
add
sub
adc
mov
mov
lret
add
jecxz
dec
or
or
or
mov
rol
or
xchg
and
lea
mov
clc
xor
orb
adc
jae
loopne
aam
add
adc
xchg
pusha
push
sbb
ret
push
lock
cmp
xchg
fdivr
jb
mov
int
dec
jbe
sbb
mov
enter
xchg
fldt
roll
popf
imul
xor
test
das
inc
xchg
xchg
das
outsl
xor
gs
push
jb
pop
sbb
addr16
rcll
ret
aaa
enter
incb
cmp
insb
fs
daa
jg
xor
jnp
cmpsb
adc
jmp
mov
mov
pop
xlat
pop
and
mov
lock
push
sbb
and
jl
lahf
rorl
jne
or
xor
and
xchg
popf
sub
dec
or
sarl
icebp
popf
jecxz
loopne
ljmp
and
shrb
mov
push
xor
ret
jne
or
pusha
mov
cs
push
ret
or
mov
mov
cmp
mov
add
push
lea
dec
icebp
and
not
inc
xor
dec
add
and
fcoml
push
jbe
icebp
rcrb
push
add
pop
xchg
and
inc
inc
pop
addr16
add
xorl
jne
inc
mov
fdivl
popa
mov
xchg
add
or
roll
push
call
fcmovu
push
or
arpl
jns
rorb
stos
dec
jp
pop
jbe
and
add
arpl
jno
xchg
out
in
fiadds
mov
inc
dec
xchg
negl
push
jo
into
das
nop
pop
roll
sbb
dec
add
mov
jbe
and
sbb
adc
mov
addb
push
push
lahf
xlat
shll
adc
xchg
dec
es
dec
insb
or
add
inc
lock
call
inc
add
repnz
add
mov
fs
mov
pop
stos
push
push
push
dec
xchg
cmpsl
shll
shl
cmp
fmull
fstl
mov
ret
adc
rcll
jl
jne
lea
xor
lods
sub
outsb
nop
mov
mov
push
jecxz
int
jns
out
inc
ds
add
or
push
sbb
mov
js
cwtl
jmp
xchg
fcomps
or
cs
nop
dec
neg
mov
iret
lods
test
insb
jne
sahf
inc
andb
jle
lock
fidivrs
mov
and
inc
fidivrl
popa
mov
std
jle
je
push
cltd
xor
ja
inc
faddl
ja
push
mov
jmp
test
xor
pop
pop
sbb
sbb
fucompp
mov
clc
mov
test
jne
push
push
test
jmp
push
lahf
or
inc
xor
push
lahf
jns
cmpsl
movsl
push
xchg
mov
mov
push
sarb
ret
xchg
movsb
or
inc
insl
adc
mov
lea
adc
aad
std
iret
adc
sbb
lea
test
push
xor
xorb
mov
mov
and
mov
mov
add
shrb
pop
xor
test
movb
pop
mov
inc
in
out
jl
jle
mov
or
in
insl
dec
lret
scas
stos
in
imul
gs
mov
xchg
arpl
jb
dec
inc
fsub
jno
lock
shll
add
xor
lret
mov
add
adc
adc
and
rclb
es
js
movsl
cmp
sarl
mov
push
adc
and
sarl
inc
mov
add
xlat
adc
xchg
imul
rcrl
add
inc
roll
inc
lcall
inc
inc
inc
aad
lds
rol
inc
aaa
add
mov
adc
test
roll
aad
sub
xchg
ljmp
xchg
pop
xchg
or
inc
jecxz
xchg
pop
rcl
inc
mov
mov
loopne
push
and
lret
xlat
mov
int3
in
fs
movsb
lcall
dec
shlb
xor
push
movsl
mov
stos
fldcw
in
xchg
leave
dec
fsubrs
add
fldenv
mov
movsb
aaa
adc
inc
mov
mov
stc
inc
clc
mov
mov
lods
pop
orl
pop
and
mov
add
adc
and
leave
les
inc
je
cmpsl
and
in
pushf
push
mov
add
push
and
and
dec
xor
loopne
iret
leave
jne
lret
lds
dec
lret
push
andb
movsb
stos
in
cmp
push
lods
lods
lods
jbe
add
movswl
js
rorb
adc
adc
mov
stos
rolb
mov
or
xor
mov
push
sar
xor
or
pop
xchg
inc
test
or
mov
inc
add
pusha
add
scas
adc
cmpsl
pop
dec
pop
or
pusha
popa
inc
push
push
pop
and
call
cmp
sbb
pop
mov
cmc
or
pop
bound
push
lea
sbb
mov
sbb
or
aaa
push
test
jmp
mov
xchg
and
jae
add
push
jg
mov
adc
push
pop
xchg
arpl
lahf
ss
pop
mov
lea
movsl
rcrl
push
test
repnz
mov
lahf
xchg
rcrb
loop
push
ds
xorb
mov
mov
xor
add
out
flds
jne
add
or
mov
mov
push
cwtl
mov
scas
mov
cld
jb
test
mov
jbe
data16
pop
or
je
jmp
shr
push
xchg
in
lret
sub
ret
adc
or
xchg
js
loop
push
mov
adc
loopne
or
testb
xlat
gs
xor
dec
cmp
je
or
adc
fs
mov
jmp
add
sub
cmp
jne
mov
push
mov
and
stos
loope
ret
insb
mov
adcb
sbb
or
adc
mov
hlt
mov
test
jne
push
adc
call
inc
and
adc
repz
lea
addb
jno
test
aas
push
dec
add
adc
add
add
or
stos
add
jmp
pop
pushf
adc
es
pop
cwtl
ss
mov
out
mov
mov
ljmp
in
sub
and
fnstsw
jbe
and
cmp
and
xchg
movl
adc
push
cmpsb
pop
push
les
gs
push
pop
add
cmp
push
push
sbb
mov
add
sub
lock
and
lods
aas
and
mov
jne
mov
xchg
and
add
mov
pop
pusha
mov
adc
test
pop
pusha
jle
andl
or
stc
and
or
jl
mov
adc
jg
and
jmp
cmp
in
subl
xchg
gs
sub
addb
jb
cmp
xchg
push
in
xchg
mov
cmp
sbb
mov
mov
push
xor
pop
cs
sbb
pop
add
mov
js
cmp
fiaddl
scas
sbbb
and
fsubrl
sbb
test
sbb
and
add
fsubl
mov
je
or
out
lods
imul
out
push
iret
add
mov
cmpsb
cmp
dec
fwait
or
icebp
push
fisubl
push
hlt
inc
push
rcrb
lock
aad
jle
pushf
int
mov
add
mov
xchg
jmp
fwait
shll
js
lret
mov
pusha
dec
lret
pop
inc
cli
fwait
mov
dec
lea
pop
push
vandps
and
mov
fwait
pop
pop
outsb
jae
addb
adc
add
in
int3
fwait
xchg
and
sbb
imul
pop
addl
js
sbb
and
mov
cmp
or
and
adc
shl
notb
add
mov
fisttps
pop
xor
je
or
jne
dec
sbb
adc
cmp
addr16
add
dec
or
out
sub
fidivrl
movsl
insl
push
jecxz
adc
jmp
or
inc
cs
je
cmp
dec
dec
mov
and
aaa
jmp
js
and
cmp
push
fs
adc
push
xchg
pop
jle
in
sbb
fimull
sbb
cmp
scas
or
insl
push
mov
and
es
test
shlb
dec
jle
cmp
mov
ds
and
das
adc
dec
rolb
aad
xor
jbe
cmp
add
xor
clc
and
lock
jbe
in
push
arpl
mov
test
mov
jae
loopne
adcl
jae
lea
add
add
adc
ret
xor
xchg
ret
daa
orl
fisubs
dec
pop
mov
nop
xor
or
inc
aad
or
xchg
int3
push
sbb
pusha
sub
mov
push
push
je
cltd
xchg
inc
scas
call
sub
lea
push
fnstcw
or
or
mov
lods
inc
arpl
scas
dec
xor
mov
inc
push
pop
push
int
aas
sbb
fadd
mov
nop
xor
mov
daa
sub
or
pop
push
pop
lock
movw
mov
pushf
jmp
movb
xor
mov
inc
nop
add
push
push
push
ret
dec
mov
icebp
inc
call
push
add
subb
fdivrs
outsb
mov
sbb
inc
or
stos
add
push
addl
and
xor
addl
faddl
add
xor
aas
cmp
cmp
iret
and
das
rorb
and
into
sub
shll
pushf
sbb
mov
jp
push
jle
test
aaa
xor
push
pusha
xchg
shlb
ss
dec
or
and
fmuls
push
fs
cmp
adc
sar
shl
add
cmp
adcb
push
mov
dec
or
popf
incl
pop
add
dec
scas
rclb
adc
pop
jmp
testl
sub
mov
dec
push
pop
jmp
lea
mov
js
xchg
cmc
push
jae
lahf
push
shr
sub
push
aaa
fnstenv
mov
mov
jne
ja
pop
inc
jmp
or
or
into
push
je
push
mov
movl
fsubl
or
adc
out
push
inc
pop
imul
inc
inc
cmp
push
aaa
inc
adc
aam
sub
dec
fs
push
rcrb
mov
inc
mov
pop
ret
test
not
mov
mov
rcrb
add
je
mov
xor
aaa
push
dec
push
sahf
mov
lock
lcall
cmp
imul
scas
fmuls
out
repz
or
or
mov
add
push
lret
push
punpcklwd
mov
jns
lar
and
inc
sbb
cs
repnz
sbb
xor
pushf
sbb
xchg
iret
in
xor
enter
xor
sbb
sbb
loopne
push
inc
sbb
push
outsl
fnclex
shl
mov
dec
addr16
clc
dec
bound
sbb
adc
das
lods
popa
sbb
adc
sub
clc
mov
push
add
test
inc
jp
pop
mov
in
sbbb
sub
dec
sti
mov
movsl
or
xchg
or
inc
push
dec
xor
bnd
arpl
lret
andb
cmpsb
mov
jo
and
mov
nop
aaa
test
sub
mov
loopne
loope
and
inc
pop
mov
sub
inc
ljmp
dec
loope
jg
jne
loopne
xchg
add
sarb
cld
mov
js
jmp
insl
or
jmp
push
push
scas
sub
adc
adc
mov
pop
mov
and
and
jmp
dec
and
arpl
ret
enter
mov
mov
or
js
fs
mov
push
push
jp
push
mov
cwtl
movsb
mov
sbb
pop
lret
bound
or
ret
sub
inc
adc
mov
or
sti
xor
push
loopne
addl
cmp
jmp
inc
cmp
mov
xor
loopne
or
cmp
bound
test
rorl
or
adc
pop
dec
inc
decb
push
cmpl
xor
ret
add
hlt
add
cmp
pop
sbb
lock
leave
or
lock
dec
xchg
aam
cmpsb
hlt
inc
aas
adc
pop
jl
in
mov
sub
enter
sahf
in
mov
and
xchg
lods
fmuls
loopne
mov
sbb
mov
sbb
push
aaa
fmuls
mov
or
pop
xchg
mov
pop
je
xchg
cmp
or
or
dec
mov
mov
or
xor
addr16
push
dec
mov
sbb
cmp
xor
xchg
int
enter
pop
lea
aam
or
or
or
add
jge
mov
in
mov
imul
xor
sbb
pop
gs
adc
add
sub
pop
sbb
sub
popa
outsl
fsubr
push
fistpl
rclb
push
push
push
jno
fcmove
mov
fs
mov
jne
sub
pop
sbb
int
sbb
xchg
lret
mov
or
push
fdivrs
cld
aam
fucom
dec
outsl
scas
and
dec
movsl
adc
sbb
pop
adc
add
mov
aam
xchg
lods
das
sbb
push
pop
and
push
call
push
shl
sub
or
out
pop
sbb
xor
int
imul
lcall
inc
test
jl
cmp
jg
inc
jmp
fadd
test
push
shl
jbe
jne
imul
add
push
pop
nop
outsb
cmp
push
cmp
add
cmp
jle
jnp
xor
outsb
dec
je
add
mov
rolb
cmp
leave
xor
dec
call
adc
xor
or
or
and
xchg
sahf
jne
push
adc
and
incl
mov
or
sbb
stos
inc
rcrb
xor
leave
dec
loop
push
loope
shr
je
jbe
pop
shrl
outsl
push
push
dec
adc
push
mov
pop
xor
out
std
jl
pop
outsl
inc
or
jbe
repz
fidivrs
xor
jg
jg
jg
jo
mov
sbb
xchg
jbe
shrb
fbld
mov
jbe
lea
inc
out
mov
mov
mov
mov
xor
dec
loopne
inc
test
or
imul
inc
inc
push
negl
ret
mov
mov
shrb
lret
ret
mov
or
test
xchg
cmp
mov
fmull
shl
mov
pop
sbb
push
es
push
cmp
aad
rol
jge
mov
dec
out
test
loopne
push
and
mov
xchg
inc
xor
test
jo
mov
icebp
orl
stc
and
cmp
push
pop
inc
mov
ret
adc
fmuls
out
shl
sbb
or
shll
or
add
inc
jl
js
fwait
into
or
out
lea
ljmp
jg
stos
mov
pop
sub
lock
sbb
mov
xor
divb
dec
or
jecxz
inc
rcll
mov
push
or
mov
and
push
fldcw
inc
xchg
push
pop
sub
xorb
push
arpl
je
repz
pop
cmp
fiaddl
pop
mov
rclb
push
pop
ja
dec
or
imul
addr16
pop
jle
and
xchg
icebp
inc
and
mov
pop
push
ret
add
adc
loope
push
lock
push
and
jg
into
std
or
and
or
xor
mov
add
je
xchg
cli
adc
lea
lea
or
mov
jnp
or
ds
jbe
sub
sbb
sarl
mov
popa
adc
lods
in
in
lock
imul
aam
dec
mov
shrb
xor
repz
cmpsb
addb
dec
sbb
xchg
mov
fwait
std
cmp
pushl
add
jno
push
rolb
push
mov
inc
mov
jb
add
insb
test
rorl
inc
cmp
ds
clc
push
pop
inc
push
push
push
jbe,pt
pusha
push
shll
enter
inc
and
push
mov
or
sbb
jl
xchg
subl
add
pusha
xor
daa
add
add
dec
xchg
cmp
cld
and
in
inc
das
adc
pop
xchg
adc
jecxz
adc
les
pop
sub
sub
cmp
loop
add
add
jns
pop
shrb
dec
mov
jbe
les
rcl
scas
je
mov
pxor
sbb
shrb
and
pop
pop
fistl
jmp
ss
mov
loopne
test
rorb
mul
test
push
push
mov
fistps
movd
mov
std
mov
dec
add
daa
add
lret
lcall
pushf
sub
add
fmuls
mov
cmpsb
pop
hlt
das
xor
js
xor
pop
gs
adc
sub
sbb
sbb
loope
or
mov
jle
lods
push
ss
jae
add
cmpb
jge
call
adc
mov
push
inc
push
push
push
inc
int
xor
xchg
inc
mov
test
das
sub
push
sbb
push
dec
add
ret
adc
and
adc
sysexit
test
aas
mov
bound
or
jo
pushl
test
sub
shrb
cmp
int3
or
dec
xor
adc
pop
push
loopne
jo
jmp
or
inc
push
push
adc
fs
mov
cwtl
dec
shll
movsb
mov
mov
xchg
cmp
aad
incl
push
lods
mov
cmp
pop
xor
adcl
mov
xor
inc
adc
ja
add
inc
icebp
call
xorl
pop
dec
scas
movsl
push
xor
insl
testb
add
add
xchg
xchg
stos
pop
cmp
and
xchg
inc
xchg
mov
mov
andl
jmp
mov
stos
mov
add
scas
and
insb
adc
and
push
mov
icebp
int
mov
roll
or
fs
xor
leave
jmp
dec
aaa
jno
ret
push
in
jbe
mov
cmpsb
call
mov
cmp
sub
icebp
cmp
jmp
push
in
push
jno
jae
mov
sub
aam
add
push
clc
pop
jge
jnp
jae
jle
mov
add
add
jne
jmp
jae
imul
sbb
aad
cmp
loope
jmp
and
outsb
mov
rclb
bound
fisubrs
sub
inc
mov
orl
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
xchg
xor
inc
stos
loopne
lea
pushl
mov
jge
les
inc
fsubl
mov
jo
cmpl
inc
testl
or
lret
jmp
xchg
test
sub
nop
mov
clc
cmp
and
or
lea
cmp
or
pop
pop
xor
jmp
cmp
cltd
push
sbb
xor
mov
xchg
into
dec
ret
jno
hlt
fbstp
push
adc
sbb
mov
fsubrs
cwtl
jge
add
adc
sub
jl
fcompl
cmp
loopne
sub
shlb
mov
call
cmp
sub
xor
jne
adc
mov
lods
pop
dec
ljmp
sarl
sahf
into
push
loopne
rcll
and
outsb
add
sbb
mov
jb
mov
jge
movsl
add
es
pusha
je
into
jbe
call
or
or
dec
mov
mov
roll
ja
sbb
push
push
enter
xlat
jae
inc
adc
pop
mov
rcrb
jne
or
mov
or
aad
pop
xchg
ja
sbb
bsf
inc
testl
dec
mov
enter
rcrb
inc
sub
and
pop
cmp
mov
and
inc
xchg
cmc
int3
xchg
pop
dec
xchg
nop
push
or
ret
push
xchg
test
push
pushf
fsubl
aaa
ficoms
inc
add
test
mov
sub
in
push
outsl
add
sub
add
bnd
gs
inc
mov
add
inc
ja
shlb
pop
cmpl
insl
mov
and
pushf
sub
aaa
test
sti
cmp
mov
add
jle
mov
xchg
pusha
sub
adc
shll
shr
mov
add
or
shr
mov
dec
dec
aas
or
push
jmp
pop
sarl
bound
or
test
das
adc
inc
mov
push
or
into
idivb
add
sahf
push
shrl
rol
idiv
loopne
shr
or
mov
sahf
dec
mov
add
lock
jne
outsb
mov
jo
inc
sarl
adc
and
mov
jne
push
or
dec
shrb
lock
rcr
out
push
adc
fiaddl
mov
dec
add
ljmp
fisubl
out
jmp
or
lods
mov
or
out
and
add
pop
mov
loope
jl
dec
shrl
lea
int3
int3
jmp
lods
or
daa
xor
test
stc
lret
pop
mov
push
lods
push
xlat
mov
dec
and
push
sbb
sbb
mov
push
xor
sbb
mov
jp
lret
das
sub
test
sbb
lret
sub
movups
ficompl
mov
les
mov
inc
mov
sub
xchg
xchg
add
xor
stc
cmp
sti
loop
add
jecxz
jb
call
sahf
cmpsl
xor
js
ljmp
push
mov
out
add
test
push
mov
or
subb
pop
or
testb
push
push
push
add
enter
sbb
nop
lret
jns
inc
xlat
jp
dec
cmpsl
mov
sbb
leave
sub
inc
rol
pop
and
adc
lock
das
jl
push
cmp
pop
in
mov
pop
sbb
out
mov
sbb
pop
pop
mov
or
lahf
add
xchg
mov
insb
jo
cmp
or
dec
in
shlb
lret
shlb
popa
addb
repz
adc
mov
push
fnstcw
xor
imulb
es
insl
imul
dec
ret
mov
jecxz
fidivl
adc
mov
pop
lea
cmp
fwait
mov
mov
sbb
test
mov
mov
call
dec
lds
jbe
sarl
jg
loop
loope,pn
jg
pop
je
inc
sub
push
inc
adc
and
aas
jg
and
inc
inc
inc
jo
mov
rcr
push
test
enter
mov
testb
adc
imulb
cmpsb
push
xor
xchg
add
and
insb
sub
repnz
mov
sbb
cli
pop
pop
ret
enter
mov
sub
dec
push
mov
bound
sarb
cli
shr
add
adc
cmp
add
out
test
roll
cmc
inc
lret
adc
xor
jmp
repz
shll
jo
push
mov
mov
cmpsb
mov
pop
inc
jmp
lea
push
andb
dec
in
ffree
leave
sub
ret
inc
cmp
lea
jo
movsb
mov
mov
mov
iret
rorb
xchg
adc
fstps
cmp
cwtl
sbb
jp
nop
xchg
push
loopne
sbb
cmp
mov
rorl
pop
fbstp
enter
mov
popa
pop
jno
add
in
repz
sbb
or
jmp
jecxz
enter
cmp
or
adc
push
lea
xchg
pop
aas
add
leave
sar
add
cmpsb
mov
add
pop
mov
or
push
mov
mov
cmp
mov
test
orl
inc
pop
xor
inc
xor
lods
lret
and
dec
pop
ret
loopne
sbb
sub
dec
cs
jmp
push
inc
pushl
mov
js
ljmp
cmp
sbb
in
mov
push
js
xchg
xorb
pushf
pushw
push
sub
xchg
enter
ficomps
mov
add
addr16
mov
js
mov
addl
add
mov
mov
mov
andl
inc
push
add
imul
out
lret
add
push
fs
cmp
fsubs
and
and
scas
jne
and
call
jmp
adcb
outsb
mov
push
hlt
xor
inc
or
shlb
jnp
push
lcall
xchg
sub
add
lea
xchg
test
xorb
loop
fs
and
rcr
cmp
filds
mov
add
push
dec
push
test
cmp
push
add
daa
inc
mov
xor
inc
movsl
popa
sub
add
xor
rol
inc
sub
add
ljmp
jmp
push
sbb
add
dec
pusha
dec
iret
adc
dec
je
mov
xor
sbb
inc
add
pop
sbb
lret
clc
cmp
fisttps
cmp
jecxz
mov
mov
in
mov
inc
mov
sbb
dec
iret
sub
mov
addr16
test
sbb
dec
std
xchg
lret
xor
ret
imulb
adc
cmp
add
ret
inc
inc
mov
cli
or
xorps
add
movb
mov
push
addl
adc
lock
xchg
aaa
inc
icebp
and
lea
in
xor
ds
add
mov
adcl
sub
rol
xor
fs
pushl
push
adc
movsl
pop
loopne
and
in
pop
add
dec
ret
adc
fiadds
into
jg
or
add
addr16
mov
sub
or
lret
adc
cmpl
add
mov
or
movl
mov
lcall
xchg
inc
scas
add
sbb
mov
shlb
add
test
rcrb
or
push
or
push
test
pop
xor
es
jmp
push
or
fidivs
stos
mov
lds
js
ret
andb
lret
jmp
jo
and
pop
mov
jb
movsb
lret
sbb
clc
xchg
aas
push
jae
adc
lcall
and
ja
lcall
jne
adc
sub
sub
loope
adc
mov
fidivrs
jno
xchg
mov
push
jl
inc
je
xor
ds
fs
or
mov
sub
cmp
mov
lahf
pusha
sub
popa
push
cmp
fists
nop
pop
daa
push
gs
ss
test
dec
loop
mov
or
clc
xchg
lock
or
js
push
xor
xor
pop
fdivrs
mov
adc
adc
out
or
adc
fisubs
mov
dec
xor
inc
add
popa
adc
add
fs
pop
mov
ds
and
pushf
push
fs
fcompl
incl
ret
mov
and
cmp
adc
jns
push
push
and
pusha
or
subb
cmp
loop
adc
nop
scas
roll
mov
pop
xor
push
adc
mov
cmp
mov
add
push
jmp
test
push
xchg
mov
sub
je
inc
cmp
shlb
mov
inc
add
js
pop
sbb
cwtl
mov
sub
add
cmpsl
xor
loopne
cmp
pushl
jge
mov
jb
sub
inc
cmpsb
jmp
add
in
inc
dec
add
in
nop
cltd
stc
adc
pop
ret
repnz
push
sbb
inc
mov
mov
and
icebp
pusha
add
inc
idiv
push
dec
dec
push
dec
push
pop
les
out
jmp
xor
xor
idivl
mov
and
add
add
imul
fdivl
ret
push
popf
pop
std
add
les
cmp
and
pop
add
mov
sbb
xchg
add
in
and
mov
out
stc
sbb
adc
and
pop
dec
stc
mov
add
xor
mov
dec
jmp
rclb
pop
loope
iret
shl
mov
cmc
dec
les
das
mov
adc
in
and
loope
add
and
rcrl
push
loope
dec
out
andl
mov
nop
orb
es
push
mov
or
jle
sbb
or
aas
or
fcoml
data16
push
jb
push
jne
push
aas
faddl
cwtl
out
int
xor
pop
mov
xor
nop
mov
movsb
xor
cmp
mov
popa
mov
in
jmp
push
lcall
ret
jno
push
push
adc
xor
jne
pop
push
pcmpeqw
cwtl
pop
dec
add
test
lock
mov
jmp
mov
mov
add
and
arpl
icebp
dec
adc
add
pop
int3
sub
mov
adc
rorb
pop
mov
sahf
jbe
cmp
movsb
scas
ret
push
jo
imul
lds
or
sbb
fdivl
sbb
in
in
imul
dec
or
cmp
adc
xchg
push
and
xor
cmp
or
retw
cmpb
pop
sub
int3
jnp
jl
push
or
jne
mov
push
js
xchg
mov
jmp
mov
inc
mov
xor
inc
sub
or
sub
sbb
fimull
cli
xchg
mov
call
and
adc
mov
mov
jmp
mov
jmp
or
xor
imul
mov
mov
and
cmp
dec
mov
push
adc
cld
cwtl
hlt
adc
or
sbb
dec
pusha
pushf
inc
pusha
jne,pn
xchg
mov
movl
pushf
cmp
adcb
add
cmp
mov
mov
push
adc
cli
fsubr
fst
popf
mov
mov
pop
jne
mov
cmp
jmp
cwtl
and
mov
inc
mov
ss
or
daa
push
adc
jl
lcall
push
mov
jmp
xchg
add
mov
mov
add
cmpl
movsl
out
xor
pop
ret
dec
sbb
mov
addl
test
jno
add
sbb
inc
dec
xchg
adc
or
stc
jb
push
flds
mov
or
sub
stos
test
push
test
movsb
ja
xorb
or
sub
cwtl
clc
cmp
sbb
add
xor
xchg
push
xor
xor
add
sub
insb
mov
xrelease
and
aad
and
cmp
cmc
je
and
push
incl
mov
lock
add
adc
jmp
push
jge
mov
sbb
out
sbb
xchg
push
or
add
dec
cli
or
push
jne
mov
je
pop
mov
adcb
jnp
mov
movsb
mov
or
das
or
stos
sub
test
push
je
adc
xor
clc
adc
into
jp
xchg
jp
aad
sub
dec
outsl
adc
jbe
ret
popa
add
sahf
imulb
xchg
adc
add
orl
and
mov
daa
xor
fucomi
pop
lcall
pusha
outsl
sbb
cmp
lea
or
daa
pop
test
lock
or
xor
fisttpll
fs
sarb
sar
loopne
jne
stos
out
roll
pop
or
inc
cmp
js
jle
add
adc
push
lret
icebp
pushf
stos
or
mov
outsl
shld
push
jns
mov
fistpll
sbb
cld
dec
jg
jne
cmc
jle
cmp
aaa
push
imul
mov
cmpsl
cmp
test
in
mov
pop
adc
sub
scas
sub
push
push
mov
in
and
dec
aad
out
add
aam
sbb
push
or
push
sti
arpl
xchg
xchg
xchg
xchg
test
outsb
mov
xchg
adc
ss
dec
dec
dec
sub
xor
dec
dec
dec
sbb
cmp
dec
fimull
cmovs
push
pop
daa
daa
daa
pop
add
daa
daa
daa
daa
insb
jo
js
mov
daa
jl
cltd
fs
negb
adc
mov
xchg
cwtl
xchg
dec
es
pushf
mov
fs
shlb
dec
xor
enter
xchg
or
mov
xchg
dec
fsub
in
xchg
dec
xor
in
aam
dec
xor
lock
clc
cld
daa
cmp
and
add
add
cmpsb
or
adc
and
sbb
xor
and
and
sub
and
dec
xor
leave
adc
xor
gs
xchg
imul
push
dec
es
fs
pop
pop
add
pop
pushl
mov
shlb
add
je
test
or
mov
mov
xor
es
pop
shrl
outsb
or
xchg
adc
sbbb
sbb
sbb
and
imul
movsb
pusha
inc
lcall
or
inc
mov
mov
nop
inc
dec
mov
movsb
mov
insb
add
adc
add
jo
nop
fmuls
or
ret
aas
shlb
movsb
dec
test
add
xor
add
or
mov
or
insl
add
jp
mov
sbb
orl
or
das
test
xor
imul
sub
jne
call
jl
dec
add
push
lret
sbb
bound
mov
es
pop
mov
xor
inc
mov
fistpl
add
adc
enter
add
movsb
aaa
or
sarb
mov
adc
fwait
and
nop
lret
je
sub
mov
inc
inc
cmp
sti
jbe
imul
insl
or
mov
inc
shll
std
jle
push
or
or
loope
mov
shlb
or
sti
in
roll
adc
add
pop
xor
or
fisubs
js
mov
pop
fwait
cmpsl
push
or
cld
int3
nop
orl
push
or
loop
mov
sbbb
or
push
test
test
test
and
xor
rorb
add
or
or
xchg
in
sbbb
push
shll
dec
xor
push
jb
fsts
xor
and
shr
leave
in
inc
dec
add
jmp
maskmovq
divl
add
ljmp
std
or
test
adc
jae
or
add
adc
jecxz
ljmp
xor
cmp
or
sub
inc
adc
clc
mov
or
or
adc
lock
and
fisttps
je
add
jl
and
jecxz
mov
fucomi
sbb
add
or
popa
shrb
or
test
loop
or
aaa
mov
sbb
es
mov
add
fstps
aas
pusha
mov
pusha
loope
add
movsb
mov
xor
inc
dec
sub
xchg
jecxz
pop
fstp
jnp
pop
imul
cmp
addr16
mov
xchg
roll
or
outsb
es
jns
dec
in
or
add
add
cld
pop
out
test
fisttps
hlt
outsb
xchg
ret
mov
call
or
sub
test
sbb
and
stos
je
lret
mov
testl
out
and
sbbb
dec
cmp
es
outsb
ret
and
or
jnp
std
fwait
sbb
flds
fstps
jmp
fisttpll
adc
and
loope
push
inc
pop
bts
hlt
adc
ljmp
ss
sub
aam
cmp
xchg
popa
ja
xor
push
xor
fiadds
cmp
sar
adc
push
inc
xor
sbb
pop
pop
dec
push
aaa
xchg
cltd
xor
in
jmp
or
fldl
lods
sbb
xchg
insb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
rorb
fldcw
inc
test
into
adc
mov
scas
je
cmpsb
js
aam
mov
jnp
and
dec
jmp
mov
push
cmp
pop
in
lock
mov
xorl
fnstsw
jp
sub
fmull
lret
subl
or
repnz
push
or
adc
or
test
dec
mov
icebp
movsl
inc
faddl
orl
rcrl
nop
loopne
or
push
push
pop
jmp
pop
push
rolb
jno
lcall
cmpsb
mov
sbb
xor
or
or
imul
push
push
add
cmc
sub
fidivs
cmp
sbb
cmpsb
lret
adc
sbb
and
or
sub
add
mov
movzbl
rorb
call
inc
cmp
je
inc
sbb
adc
repz
cltd
cmpsb
imul
sub
add
adc
mov
adcl
sub
pop
add
xchg
lods
or
shl
pop
pop
loope
jne
pusha
or
mov
add
in
fsubrp
fwait
jno
inc
pop
mov
decl
and
pusha
outsl
mov
inc
dec
fldl
test
mov
push
mov
movsl
sti
adc
mov
outsb
sbb
mov
mov
jnp
pop
xchg
fdivl
mov
lock
add
xchg
add
loope
rcrb
cmpsl
pushl
pop
add
jae
dec
lock
jl
and
push
das
fmull
add
adc
inc
jns
xchg
rclb
fcompl
jne
inc
pusha
fiadds
and
aaa
mov
jl
push
jnp
pusha
clc
add
add
rorb
andl
or
dec
add
jecxz
into
inc
cli
mov
sbb
leave
lea
sub
enter
xor
jbe
mov
shll
sub
jge
lock
or
sbb
pop
imul
decb
mov
lods
ja
and
pop
push
add
in
fdivrs
pop
xchg
sbb
test
push
rclb
es
sahf
lods
scas
outsl
dec
out
fld
fucomp
pop
flds
jnp
lock
jmp
adc
xor
test
mov
imul
mov
icebp
das
shll
jg
adc
gs
or
dec
fisttpl
inc
testb
or
push
aam
mov
out
mov
push
pop
jp
mov
xor
push
imul
loope
xchg
movsb
es
sub
movb
je
xchg
in
push
jb
out
push
and
jecxz
test
icebp
jge
movswl
sbb
loop
lock
adc
fsts
xchg
push
js
sub
rorb
data16
jnp
push
fisttpl
insl
or
push
add
inc
mov
dec
inc
or
sub
test
adc
fldl
fwait
sbb
add
and
cld
lock
or
sbb
fldpi
xor
mov
or
sti
jmp
cld
je
lret
dec
sbb
xorb
mov
xsaveopt
std
lods
jne
lea
mov
cmp
xchg
daa
das
andl
in
aam
pop
push
jmp
and
xlat
push
sbb
xchg
test
mov
dec
or
add
enter
or
scas
and
mov
dec
sub
roll
sub
sub
cmp
les
addl
subb
add
add
shrl
dec
inc
sub
inc
outsl
stos
pop
pop
mov
cmpsl
es
and
dec
call
dec
sbb
sub
pop
add
hlt
mov
shr
adcl
movb
add
inc
lea
pop
jecxz
jecxz
xor
lret
scas
rolb
inc
imull
lret
loop
adc
div
rolb
cmpl
inc
loope
pop
repz
mov
mov
and
iret
loopne
adc
les
jbe
dec
mov
les
or
or
cmp
jne
adc
dec
cmp
adc
cmpsl
clc
sub
sbb
decb
add
and
dec
sarb
push
mov
push
xor
jge
ret
cmp
sub
cwtl
je
inc
mov
rol
out
idivl
hlt
or
inc
stos
inc
add
movsb
push
push
fsubr
or
iret
repnz
xor
cmp
ret
pop
adc
cmp
and
cli
jae
mov
shl
sub
sub
idivl
test
pop
popf
movsb
mov
and
es
sahf
or
push
or
lock
cs
aam
out
test
push
mov
xor
push
add
add
pop
sub
jne
xchg
data16
mov
fs
pop
dec
jns
mov
jb
lea
push
rorb
inc
lods
sbb
and
test
mov
lods
xchg
dec
int3
loopne
push
out
or
inc
rcrl
dec
xor
clc
adc
mov
shrb
cs
fsubr
pop
pop
push
push
jb
add
pop
inc
dec
repnz
pop
sub
mov
mov
dec
jns
cmp
and
push
push
imul
aas
data16
mov
lea
xor
sub
and
dec
movsb
add
cmp
dec
ljmp
or
inc
ss
mov
arpl
push
mov
push
pop
push
dec
add
jne
push
rorl
andl
movsb
ror
out
dec
je
sub
jl
stos
iret
and
mov
lea
jecxz
or
sub
mov
in
xchg
jge
rorl
xchg
dec
pop
flds
lods
shl
test
mov
iret
or
fisubl
pop
lock
int3
cwtl
les
mov
pop
push
xchg
mov
jmp
jne
and
adc
mov
or
test
xor
cmp
xchg
xor
negl
adc
push
orb
les
in
inc
cmp
and
je
inc
mov
cmp
push
cmp
push
jp
or
or
lret
je
or
pop
gs
jne
and
inc
mov
xchg
js
add
jb
mov
outsb
in
stos
inc
jl
inc
mov
mov
rorl
test
stos
xchg
and
imul
pop
mov
xchg
fidivl
adc
inc
cs
or
popa
in
pushl
ss
cmp
je
or
out
mov
dec
cmpb
je
lcall
add
sbb
sbb
add
or
mov
sub
add
inc
mov
jp
outsb
mov
sar
and
add
lcall
outsb
adc
cld
insl
inc
lods
mov
inc
pop
mov
adc
or
cmpsl
sub
scas
xor
mov
add
mov
fsubrp
mov
add
adc
mov
in
shlb
or
in
push
xchg
leave
js
mov
sub
jne
mov
or
mov
jo
dec
pusha
inc
mov
or
add
adc
cmp
or
cmp
push
pop
sbb
inc
mov
fcmovb
dec
adc
cmp
mov
sub
push
ret
adc
aas
sub
adc
jae
lds
lahf
scas
jle
mov
cld
inc
cmp
bound
add
jo
sub
sbb
faddl
lock
jge
mov
add
adc
popa
enter
or
je
js
je
sub
das
or
push
or
movsb
inc
adc
int
dec
jns
neg
movb
fs
leave
clc
jl
cltd
push
aam
jae
xor
pop
push
or
add
xchg
mov
add
popf
js
add
push
andl
push
dec
daa
mov
or
outsb
push
rcll
push
mov
add
sbbb
and
sub
mov
loopne
inc
pop
jmp
and
jmp
lock
xor
rcll
xchg
ret
fdivs
push
push
adc
shlb
mov
add
mov
movsl
into
orb
mov
push
sbbb
js
adcb
or
jno
in
andb
ret
and
push
fadd
xor
inc
push
dec
cwtl
xor
pop
jl
into
jge
aas
test
and
call
mov
mov
mov
push
mov
adc
sub
sub
push
sahf
push
adc
or
xchg
push
and
push
lret
movsl
jae
call
rorl
xchg
mov
rclb
incb
pop
push
rcr
test
jecxz
ret
add
or
add
xor
push
cmpb
popf
push
mov
jbe
sub
push
mov
jg
dec
and
add
mov
out
pop
push
lods
insl
or
push
js
or
pop
sub
leave
and
add
insb
movb
incb
and
mov
loopne
popf
neg
mov
fstpt
test
jg
ret
xchg
shrl
bound
xor
xor
and
add
data16
sbb
jge
jmp
inc
xor
mov
or
add
movlps
int3
fisubs
xor
pop
mov
rolb
lahf
xchg
hlt
nop
push
sub
adc
xor
aaa
xchg
and
lods
mov
sbb
rcrb
fsubrs
insb
dec
xor
adc
xor
jbe
clc
fldenv
insl
cld
sarb
shrd
xchg
sub
lods
sbb
sahf
dec
cmp
jge
inc
jge
sbb
xchg
faddl
clc
cwtl
xor
jge
fsubs
inc
and
xor
xchg
lret
out
jl
sub
or
out
pop
push
or
mov
inc
mov
rolb
push
frstor
and
xchg
fiaddl
lock
xor
jo
jbe
aaa
jne
mov
and
sub
pop
sbb
js
jg
jb
xor
fisubrs
sbb
or
mov
pop
adc
neg
mov
cmp
sarl
adc
test
add
fcomp
out
xchg
and
lock
inc
xchg
je
mov
push
jg
mov
fidivl
push
dec
dec
inc
dec
sahf
sub
dec
pop
or
or
pushf
pop
sbb
rcrb
pop
popa
jo
orl
cmp
mov
sbb
xor
es
cmp
test
sub
pop
pop
jb
or
std
movw
xor
xorb
sbb
jle
cmp
loopne
in
push
sbb
imul
push
lock
sahf
fwait
pop
shll
adc
jnp
es
call
inc
adc
ret
aaa
push
lods
inc
add
or
push
or
push
in
lcall
push
lock
je
aad
add
or
jbe
inc
sbb
rcrl
adc
movsb
mov
push
sbb
outsb
cmp
adc
or
inc
nop
xor
sbbb
jne
push
pop
mov
nop
adc
or
xchg
xorb
addb
test
adc
jle
push
push
push
inc
orl
out
and
adc
adc
sub
ss
mov
js
mov
pop
add
jae
add
cmc
inc
fsubs
popf
jmp
xor
sarb
fnstenv
sti
add
pop
or
pop
data16
js
clc
xchg
mov
adc
xchg
int
dec
sub
push
inc
je
cmpb
xor
setge
pop
mov
out
push
adc
dec
ss
sbb
sarb
or
popa
mov
or
mov
aaa
cmp
test
xchg
xor
js
ret
js
jle
lods
add
sbb
mov
inc
mov
rsm
inc
inc
mov
xorl
xor
cmpb
cmp
enter
cwtl
testl
fs
and
clc
cmp
hlt
adcb
mov
push
test
push
or
jp
push
mov
xchg
cmp
je
add
test
pop
fwait
test
or
cwtl
sub
sub
lahf
ret
loopne
sub
lea
add
mov
enter
and
adc
sbb
js
fisttpl
daa
nop
sarl
jbe
movsb
mov
pop
jg
sbb
movsb
jbe
dec
cld
jg
dec
fldt
xor
push
push
and
add
test
dec
and
stos
mov
ret
push
push
adc
enter
dec
pop
adc
mov
pop
sub
inc
rorl
cmp
or
dec
push
push
cmp
or
das
sub
jbe
mov
mov
adc
or
lock
insl
fwait
clc
pop
mov
adc
mov
cmpl
pop
add
sub
cmp
mov
mov
pop
dec
push
mov
adc
mov
mov
push
mov
lock
pop
pop
pop
rcl
lods
or
dec
adc
mov
pop
cmp
dec
mov
nop
add
dec
add
test
inc
ss
scas
lcall
lret
je
dec
je
dec
xor
jae
push
push
jmp
or
jmp
xchg
je
iret
push
inc
jle
orl
pop
adc
jmp
jmp
je
mov
sbb
push
jmp
mov
inc
data16
sbb
data16
int3
or
sbb
xor
mov
jo
jns
add
sbb
xor
jno
sbb
add
jne
adc
jnp
aas
sbb
and
aaa
cmc
hlt
cmp
orl
stos
mov
add
fsubl
orb
push
loop
xchg
xchg
es
add
jo
mov
fiaddl
into
xchg
sub
xor
inc
shlb
inc
pop
fstpl
arpl
mov
imul
cmpl
inc
pop
cmp
inc
or
mov
fs
and
pusha
add
sbb
rclb
pusha
adc
call
add
or
or
or
and
test
fbld
cmp
clc
shr
add
or
pushf
clc
scas
xor
shr
or
mov
push
sub
adc
test
and
add
mov
fldenv
mov
lock
repnz
or
mov
adc
fidivl
dec
inc
jbe
add
inc
loopne
jbe
dec
in
sbb
cmp
or
push
pop
mov
cmp
mov
mov
and
cmp
mov
andl
push
xor
test
mov
fnsave
or
xchg
pushfw
stc
cmp
dec
push
or
hlt
inc
nop
mov
ja
inc
dec
pusha
cmpsb
and
xchg
lea
mov
enter
stos
scas
or
cli
ficomps
adc
adc
xchg
test
mov
loop
shlb
ret
or
cli
jne
mov
sbb
leave
roll
push
add
push
jp
pop
pop
inc
mov
shll
mov
inc
mov
sub
popf
push
jbe
movsb
jb
pop
and
es
sbb
orb
aas
xor
inc
in
or
adc
out
je
xor
and
dec
loope
enter
fwait
push
pop
sbb
jo
in
jp
and
xor
lret
addl
mov
pop
or
sbb
push
sub
add
lret
in
test
nop
icebp
pusha
cltd
dec
jo
rol
or
in
adc
mov
sub
inc
sbb
add
add
stos
decl
insl
mov
pop
push
icebp
add
test
jo
pusha
adcb
stos
sbb
inc
mov
in
and
andl
sarb
or
mov
int3
pop
cmp
pusha
xchg
jbe
sbb
outsl
inc
pop
push
andb
sub
inc
pop
or
and
sub
push
push
in
xor
or
clc
sbb
fistpll
push
or
inc
repnz
lds
aam
ret
faddp
pop
movl
movl
rorl
outsb
adc
ret
sub
and
into
push
xor
lods
inc
loope
cli
call
rolb
jge
inc
dec
jge
add
mov
add
cmp
add
push
inc
and
jmp
imul
push
xchg
sbb
add
call
pushf
movb
jns
add
dec
push
push
xchg
or
mov
inc
add
cmp
orl
push
cmp
jle
or
rolb
inc
rorb
xchg
sbb
aaa
push
sbb
add
inc
xor
out
push
xchg
inc
jmp
mov
adc
cmpb
jl
xor
mov
aad
push
xor
inc
or
sbb
aam
push
fstl
push
xlat
and
push
push
pop
push
sbb
jmp
out
test
imul
fwait
add
mov
ds
mov
test
aaa
jne
mov
add
and
pushf
cmp
mulb
jmp
mov
mov
jle
jne
cmp
jne
mov
jnp
cmp
add
and
daa
testb
or
or
xor
jmp
xor
into
aam
sar
roll
leave
add
mov
je
mov
iret
adc
or
rclb
hlt
inc
or
sub
sti
pop
adc
dec
cli
mov
shlb
jne
sbb
movsl
pop
jb
clc
xor
sbb
jo
pushf
out
add
xor
and
lret
clc
insl
xor
dec
and
xor
cmp
add
add
sbb
inc
add
nop
rclb
in
lock
icebp
pop
stos
jge
inc
inc
push
neg
neg
sbb
lahf
ja
sahf
sub
inc
sbb
dec
js
sbb
adc
jo
adc
xor
sbb
push
push
inc
dec
and
fwait
and
fsts
push
sub
adc
xchg
mov
and
mov
xchg
test
sub
pop
sbb
xor
jne
pop
pop
pop
sub
mov
xor
jae
or
jae
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
loopne
or
mov
inc
jb
push
cmp
or
fimull
icebp
sub
xor
inc
and
pop
adc
or
cmpsl
enter
sarb
or
aad
push
or
leave
int
into
jbe
xchg
mov
hlt
adc
jne
ret
movsb
and
push
add
or
daa
push
mov
lock
inc
sub
add
ret
outsb
pop
add
or
into
mov
fdiv
adc
and
pop
ljmp
jo
sbb
ret
gs
xor
cmp
shrl
cs
ljmp
cld
inc
repnz
es
aaa
dec
sub
pop
add
cmpsb
jnp
mov
movsb
cmp
imul
or
ficompl
pop
lods
test
adc
jmp
xor
jo
mov
mov
enter
fs
xor
cmp
and
mov
xchg
mov
sbb
adc
shlb
mov
je
decl
jl
out
push
cmp
ja
add
and
adc
cmp
jne
inc
pop
sbb
adc
mov
nop
and
inc
jl
pop
pop
je
adc
rclb
lret
xchg
cmc
mov
iret
and
jb
lret
aaa
add
push
and
push
add
sub
add
fimull
aas
movsb
divl
movb
jmp
or
jge
cli
mov
clc
aaa
and
sahf
inc
add
cmp
xorb
add
mov
mov
or
hlt
pusha
movw
jb
shrb
lods
sbb
das
adc
pop
xchg
pop
mov
pop
mov
adc
outsl
loop
pop
mov
inc
jle
or
push
mov
cld
stc
inc
jb
out
pop
mull
dec
sub
andb
sbb
mov
dec
into
push
in
pop
dec
daa
add
sbb
cmp
mov
mov
dec
ret
pop
ds
shr
ret
call
js
imul
lea
sar
lods
mov
fcomp
aam
fwait
pop
neg
xchg
push
ljmp
mov
cmp
and
inc
call
or
xorl
push
sub
sti
add
dec
cmp
and
cwtl
sub
pop
dec
mov
push
pusha
daa
inc
js
jb
jl
mov
push
dec
jle
repnz
and
mov
mov
pop
loopne
or
and
lea
inc
xor
nop
push
cmpsl
add
into
repnz
mov
sahf
add
jmp
ja
lods
jge
sub
jae
cltd
or
inc
call
loop
ljmp
dec
mov
inc
leave
das
jbe
mov
lea
rolb
add
fiadds
js
jp
les
dec
or
and
cltd
dec
insl
push
push
adc
dec
push
xchg
add
xchg
push
fldl
or
ret
imul
movsb
sub
gs
pusha
data16
xchg
mov
xchg
fsubrs
mov
shll
lods
and
rclb
jne
add
sbb
loope
push
popa
mov
shll
mov
add
shr
or
and
rorb
sbb
push
lret
mov
mov
adc
mov
jle
int3
shrl
loope
fcomps
pop
not
out
or
mov
dec
mov
cltd
fcomps
cli
push
mov
pop
imul
dec
and
sti
stc
repnz
add
cli
sbb
pop
sahf
div
and
add
fadds
loopne
sbb
shr
test
les
sbb
and
xor
faddl
fisubrl
dec
fimull
jmp
inc
adc
fldenv
enter
mov
and
dec
rcll
dec
divb
jns
rolb
lock
sbb
fmuls
negl
sub
jge
pushw
sbb
or
clc
out
jge
xchg
enter
mov
jb
inc
popf
pop
filds
test
adc
inc
daa
adc
jne
mov
movsl
push
push
or
add
jne
rcrl
sbb
cmp
sub
enter
jbe
dec
sub
pushf
sub
sbb
shlb
dec
push
mov
xor
push
pop
or
fmull
or
in
jp
push
lret
fcmovu
adc
mov
mov
cmpsb
arpl
test
cli
mov
int3
jg
add
xchg
add
or
adc
push
adc
shll
inc
adc
jg
or
adc
movsb
xor
enter
jge
fs
mov
mov
inc
add
jb
pop
nop
mov
movsb
jmp
add
add
jne
jne
or
fnsetpm(287
loopne
mov
xor
pusha
mov
ljmp
xor
xchg
insb
sbb
psubq
shl
inc
add
inc
mov
insl
push
aad
daa
mov
call
pop
outsb
call
add
lea
pop
adc
sub
xchg
inc
xor
inc
mov
sahf
mov
std
vmovups
neg
and
fstl
xorb
imul
icebp
mov
adc
loopne
dec
mov
dec
cli
mov
push
and
mov
push
pop
pop
or
in
fisubs
out
cld
sti
jmp
add
jne
mov
les
xchg
add
neg
or
xchg
pushf
or
cmpsl
ljmp
mov
add
enter
sahf
mov
mov
shlb
add
sub
test
out
and
mov
addb
mov
lock
inc
ljmp
jmp
orb
dec
ret
hlt
mov
sub
cmp
jge
sub
cmpb
or
mov
lock
dec
cmp
add
dec
ja
jb
add
add
fadds
add
cmp
ret
fidivrs
jne
dec
mov
jb
int
rorb
xor
in
jbe
xor
lret
or
loopne
adc
jp
ret
adc
inc
or
add
add
imul
add
test
lcall
xchg
stos
inc
daa
call
and
add
push
test
les
dec
or
subb
enter
xchg
add
stos
xor
or
push
pop
scas
cmp
je
push
ret
sbb
adc
mov
and
push
ret
or
xchg
adc
and
push
sub
add
fimuls
ss
ret
mov
mov
or
pop
cmp
xor
into
pusha
sbb
mov
aam
sub
and
pop
pop
xchg
mov
ret
prefetch
mull
mov
adc
rcrl
push
rolb
pushf
rolb
adc
lcall
lcall
add
cmpl
push
or
add
je
pop
mov
pop
push
inc
arpl
or
adc
xlat
push
pop
shrb
sub
jle
jne
fs
lahf
out
and
mov
shll
inc
jl
jge
out
and
filds
push
pusha
push
or
scas
push
pop
lea
fcoms
rorb
loop
clc
mov
inc
push
mov
test
lock
or
push
sarl
sub
sbb
fadds
add
loopne
rolb
mov
sub
repnz
test
cltd
into
or
add
or
mov
add
add
push
into
mov
mov
loopne
subl
and
sbb
inc
jg
into
into
into
mov
sub
sub
out
icebp
push
out
push
pop
nop
pop
sahf
pop
inc
xor
push
mov
sbb
shlb
or
sbb
inc
fsubs
stos
xor
add
jl
pop
mov
pushf
hlt
cmpsl
inc
adcl
xchg
out
sbb
cltd
adc
add
movl
les
test
mov
inc
sbb
and
jno
cwtl
sbb
roll
sub
jmp
mov
fwait
pushf
push
push
mov
lret
sbb
loopne
ljmp
jae
out
pop
mov
pop
xorb
adc
fldcw
xchg
mov
stos
or
enter
or
scas
sub
push
xor
mov
mov
add
shll
mov
sahf
outsb
in
hlt
add
testb
and
jns
jnp
sbb
cmp
cs
and
pop
ret
scas
sbb
jle
sbb
push
nop
shll
ja
clc
pusha
pop
sbb
je
mov
mov
out
rorb
mov
out
je
mov
xor
loop
and
or
or
cmp
jbe
dec
in
clc
pop
sub
jmp
push
movsl
sbb
pushf
xchg
loopne
mov
fisubrl
or
inc
mov
std
leave
mov
repnz
or
push
hlt
pop
loope
ret
das
sub
inc
xor
stos
cmpb
sbb
sbb
rorl
adc
popa
test
shl
cmp
mov
shlb
inc
sub
pop
or
pushl
mov
and
push
push
call
test
or
cmp
xlat
icebp
inc
or
in
add
int3
fmul
push
inc
roll
inc
popa
test
aad
popf
xor
cmp
shll
in
cmpsb
push
pop
add
popf
sub
dec
sbb
ljmp
push
test
jo
pop
and
ljmp
push
inc
push
loopne
fidivl
sbb
sub
fsubrs
mov
or
ret
add
cmp
add
daa
fsts
mov
sar
cli
test
jmp
mov
subl
mov
mov
mov
fs
bound
push
js
mov
sub
test
nop
jl
sarl
lahf
cmp
mov
loope
leave
pop
xchg
mov
mov
push
xchg
ret
call
ja
push
dec
mov
jp
push
push
push
sbb
fwait
pusha
inc
jnp
dec
je
test
inc
mov
into
mov
into
pop
sub
jmp
mov
add
mov
push
mov
and
sbb
lds
dec
in
stos
in
adcb
cli
mulb
fldenv
test
xchg
std
je
mov
jg
xor
xor
sti
lods
sub
subl
adc
sub
pop
push
push
mov
add
sbb
enter
in
pusha
dec
add
cmp
sub
lock
dec
mov
lock
leave
jae
push
pop
mov
out
loopne
jmp
dec
or
fcomps
fs
sbb
sub
cmp
subl
push
js
les
test
pop
mov
mov
jo
and
leave
inc
insl
mov
test
lods
sbb
pushf
iret
lcall
push
ret
popf
cmp
movb
xor
or
lret
enter
and
daa
mov
dec
loopne
push
rsm
cmp
je
jg
scas
sbb
pop
add
sbb
aaa
sbb
aas
pop
cmp
sqrtps
adcb
push
push
lods
imul
dec
jmp
imul
dec
aas
jo
adcb
pop
sbb
or
inc
cli
inc
push
push
or
call
js
scas
sub
or
push
jp
push
mov
adc
bound
inc
push
and
mov
mov
cmp
rolb
ficomps
les
les
test
pusha
sub
cmp
dec
aaa
and
sub
dec
mov
cmp
jmp
xor
xor
push
push
ret
int3
das
clc
outsb
sub
cwtl
dec
insl
enter
movsl
dec
in
movb
xor
add
arpl
mov
std
xchg
and
mov
push
xor
push
xchg
or
cltd
jo
xchg
add
add
mov
jo
rorl
sar
xor
sbb
pop
pop
push
enter
and
and
push
aaa
mov
lea
sub
sub
in
rol
push
rcll
pop
leave
push
stos
push
pop
mov
cmpsl
test
add
int3
add
add
mov
test
xor
jecxz
in
mov
mov
mov
arpl
fadds
add
xchg
adc
mov
push
nop
adc
push
ret
jge
sbb
adc
add
or
push
pop
sbb
jmp
or
mov
xchg
add
mov
mov
loopne
je
mov
pop
pop
xchg
cmp
sub
in
push
in
xchg
mov
mov
adc
ret
movsl
fld
inc
add
mov
addr16
cmp
or
pop
mov
inc
loop
add
cwtl
mov
orb
dec
push
call
out
or
push
vcvtps2dq
gs
or
into
inc
mov
lods
or
adc
push
xchg
in
jns
adc
or
xchg
sarb
push
sahf
and
adc
add
pop
inc
scas
scas
inc
shrl
dec
cs
mov
imul
in
mov
dec
arpl
pop
or
mov
gs
outsb
insl
clc
pop
xchg
lret
ret
popf
dec
push
jp
loope
shrb
jecxz
incl
icebp
fwait
add
push
xchg
mov
loopne
push
adcl
test
test
imul
push
movsb
loope
pop
ja
or
dec
mov
sub
std
data16
clc
inc
leave
loopne
inc
and
or
push
sub
outsl
or
or
shl
gs
or
or
ds
data16
loope
mov
jb
fsubrs
sbb
imul
fimull
add
add
imull
ja
mov
jmp
jb
adc
sub
mov
imul
add
xchg
jge
cmp
jle
aas
or
movsl
jge
loopne
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
adc
jle
dec
adc
test
adc
inc
push
popf
shlb
jp
sub
push
dec
adc
test
jg
adc
lock
shr
lea
loopne
push
icebp
xchg
rcrl
cmp
push
inc
js
rcrb
mov
subb
adc
into
lock
fadds
cmc
xor
push
in
inc
dec
push
dec
sbb
push
fnsave
loope
jecxz
push
cmp
dec
push
sub
sbb
xchg
outsb
and
or
sub
dec
jb
aad
xlat
inc
lea
int
push
add
adc
push
pop
or
ret
dec
and
push
add
pop
fs
fcmovnu
xchg
test
sbb
in
sub
push
fildl
ret
sub
inc
loopne
pop
cmp
cmp
pop
jns
mov
or
pop
and
dec
stc
sbb
mov
popa
and
adc
jg
inc
inc
mov
jae
dec
sub
imul
cmp
mov
sbb
sbb
ja
pop
aas
inc
xchg
push
mov
lret
jl
or
or
out
pushl
filds
in
sbb
dec
loopne
and
and
adc
testl
rcrl
sub
mov
push
cmp
or
adc
and
and
test
sbb
dec
and
add
pushfw
and
pop
movsb
inc
inc
jge
sahf
fwait
sub
push
inc
jbe
lds
dec
add
mov
push
orb
ss
adc
int
sbb
push
mov
outsb
loop
push
call
pop
mov
push
or
js
sbb
add
add
add
jg
aas
add
push
es
dec
sbb
pushf
sbb
mov
jle
inc
adc
sbb
mov
int
xor
push
push
add
fistl
xor
jg
cli
xor
push
pop
jl
test
stos
testb
nop
lret
xchg
mov
fstl
test
and
test
add
or
adc
mov
inc
add
andb
enter
pop
inc
mov
les
add
pop
fsubrs
insl
sbb
pushf
fucom
adc
aaa
das
lret
mov
mov
xchg
push
inc
inc
aaa
and
jmp
and
jbe
mov
sub
mov
dec
cmpsb
pop
adc
sbbb
jae
inc
mov
inc
cld
push
mov
jle
cmp
jg
push
dec
rolb
or
add
inc
inc
lock
xchg
daa
mov
mov
add
leave
xchg
test
loope
ret
inc
lock
outsb
fcoms
fmuls
rcl
jnp
adc
stos
ds
cmpl
hlt
xor
add
inc
push
js
and
movsb
push
aad
pop
adc
out
mov
fisttpl
or
inc
popa
adcl
push
pop
nop
scas
in
mov
xor
push
or
dec
es
enter
aam
imul
call
mov
push
loopne
jge
inc
inc
lock
push
mov
stc
repnz
and
dec
add
sub
inc
dec
adc
jo
in
ret
sahf
sbbb
ficompl
dec
inc
insb
jbe
pop
mov
movsl
mov
adc
dec
sub
jl
arpl
pushf
cmp
or
je
xchg
mov
push
mov
sbb
xor
rcrl
jmp
outsl
sub
mov
testb
xchg
imul
sbb
push
add
repz
adc
mov
roll
js
out
test
xchg
adc
cmp
in
jno
leave
inc
aas
dec
je
dec
jne
push
bound
adc
loopne
push
or
sbb
pop
add
or
hlt
or
je
adcl
dec
mov
sub
dec
sub
mov
aaa
adc
icebp
enter
movsb
and
inc
cs
adc
outsl
sbb
or
inc
mov
or
roll
sub
pop
jle
jmp
inc
mov
lea
xor
or
or
stos
sub
mov
inc
lahf
in
xchg
les
push
add
out
js
insl
pop
inc
hlt
push
cli
push
dec
or
jo
stos
inc
call
rclb
cmpsl
call
js
cmp
jl
jl
das
add
add
shlb
push
faddl
popf
push
in
cmpb
sub
add
and
int
xchg
and
dec
push
add
add
fcmovb
push
inc
fildll
adc
jb
arpl
fadd
ret
pop
sbb
rolb
cmp
xchg
dec
or
mov
enter
cmp
in
pop
cmp
ret
mov
sbb
push
xor
mov
clc
das
or
lret
adc
sbb
adc
daa
sbb
fcmovbe
leave
push
xchg
mov
inc
movsl
add
push
mov
sbb
jne
pop
add
movups
fisttpl
or
push
mov
out
gs
adc
and
fistpll
pop
lock
jle
xchg
sbb
movsb
ret
pop
inc
add
and
jp
jecxz
add
scas
cmp
dec
int3
or
outsb
push
cmp
test
jg
jg
add
imul
mov
jge
mov
adc
cmpsb
test
jo
nop
push
push
push
cmc
inc
call
cmp
jg
xchg
dec
hlt
adc
sar
lds
out
mov
js
lea
add
in
mov
test
shll
add
push
jge
call
push
ss
fstpt
adc
orl
jg
jmp
adc
mov
sub
sbb
mov
inc
mov
and
jp
pop
and
rclb
adc
cmp
mov
push
jge
popa
sbb
sub
or
cmpsl
push
loope
clc
xor
scas
gs
je
aaa
pop
pushf
and
push
mov
jae
push
adc
jno
xchg
or
add
inc
and
and
ret
add
hlt
cmp
mov
inc
push
mov
rorb
js
pop
mov
sbb
sti
dec
insb
and
mov
fldcw
imul
aas
pusha
mov
loopne
jo
mov
xlat
je
cmp
pop
je
mov
and
cmp
jb
testb
and
iret
push
xchg
bound
data16
push
dec
or
cmc
in
test
ret
jge
push
jmp
inc
push
mov
cwtl
and
jb
mov
push
cmp
loopne
xor
cmp
jbe
clc
push
push
or
or
push
cwtl
or
mov
xchg
xchg
cmp
xor
dec
lds
ss
test
jg
add
push
mov
test
mov
mov
adc
fnsave
pop
es
jmp
cli
jne
rcrb
inc
pop
pop
cmpb
mov
aaa
and
sub
mov
push
inc
sub
ss
insl
mov
and
xor
or
adc
push
in
fstl
push
inc
bnd
push
pop
mov
dec
jmp
andl
jne
inc
enter
sub
seto
in
add
lahf
inc
and
inc
jne
add
mov
add
add
push
jnp
std
and
aas
loopne
ds
enter
xchg
fldz
aaa
adc
add
push
push
sbb
push
sbb
add
xlat
mov
jo
sub
and
xor
adc
movsb
pop
lahf
je
pop
and
xor
mov
fld
fxch
filds
es
inc
jp
rcl
cmp
jmp
pushf
jns
fstps
icebp
aaa
cmp
lods
pusha
std
rolb
ret
mov
cmp
fmuls
cwtl
adc
ret
fnstcw
cmpsb
pop
sbb
mov
sbb
cmp
stos
add
mov
pusha
mov
jb
jb
leave
or
jb
jb
or
or
in
sti
movsb
add
mov
or
nop
jecxz
pushf
pop
daa
mov
ret
dec
in
push
push
cwtl
xchg
xchg
in
jl
inc
lock
sbb
sarl
in
fwait
add
adc
shll
test
movsl
imul
pop
lock
fldt
daa
ss
int
xchg
imul
or
pop
sub
out
mov
push
inc
in
cmpsb
dec
in
loope
arpl
xchg
call
inc
push
in
lock
pop
in
les
lock
es
sbb
inc
fmul
inc
add
movsb
pop
cld
dec
loopne
insb
dec
outsb
sahf
add
and
add
add
test
int3
out
mov
mov
pusha
xchg
and
sbb
pop
add
push
ret
mov
mov
int3
xchg
adc
jo
jnp
sbb
and
mov
sub
rcl
mov
iret
loopne
das
push
sub
add
inc
pop
sub
sbb
fdivrs
enter
into
outsl
out
loopne
sbb
pusha
or
adc
ja
mov
xchg
mov
roll
insb
add
insb
push
jne
dec
subl
pop
mov
js
ljmp
xchg
adc
adc
and
in
inc
dec
repnz
dec
pop
inc
push
xor
test
xor
fidivs
xor
jmp
adc
or
popa
inc
pop
sbb
in
mov
or
cmpsl
dec
dec
jl
jo
inc
pop
or
ret
sbb
mov
sub
add
rclb
fwait
push
inc
mov
enter
adc
inc
ret
sub
and
dec
dec
add
sti
shlb
in
add
mov
aam
pop
cmpb
pop
rclb
add
fsubrl
or
in
ljmp
test
rclb
adc
mov
call
mov
movsb
in
inc
fisubl
xchg
imul
or
cmpsb
or
in
out
adc
mov
adc
in
nop
push
loope
xlat
dec
out
inc
clc
imull
aas
push
dec
cmp
lock
jno
xchg
dec
xor
pusha
fs
and
je
xchg
shlb
jl
pop
push
in
sbb
fsubr
sbb
outsl
lea
js
mov
jge
punpcklbw
jbe
dec
shr
adc
inc
adc
cmp
repnz
test
add
sbb
sti
gs
and
sbb
stc
das
sbb
pop
das
inc
loop
fimull
and
mov
sbb
pop
push
int
aad
push
mov
roll
cmp
loope
shl
cltd
add
in
jl
add
pop
inc
cmp
loopne
add
fs
jg
repnz
sbb
stc
jle
mov
dec
inc
jnp
rcrb
icebp
jecxz
push
fcmovbe
inc
repnz
icebp
inc
clc
mov
bnd
sbb
leave
xchg
fcomip
inc
adc
shl
mov
and
xchg
repnz
mov
mov
add
xor
test
sbb
xor
adc
adc
bound
hlt
fists
jecxz
cmp
or
and
sub
addr16
and
imul
xchg
sbb
mov
add
pusha
fsts
xor
or
nop
xor
push
add
and
loope
push
or
pop
push
cmc
push
xchg
inc
or
mov
mov
cmc
shl
aam
lea
ret
call
jmp
idivb
scas
outsl
ret
xchg
imul
jl
push
cwtl
inc
je
xor
gs
mov
sub
mov
add
in
testl
sub
loopne
push
xlat
test
pop
xchg
xchg
movsl
jbe
cltd
imul
notl
adc
out
sub
and
jbe
sbb
icebp
adc
inc
pushf
xchg
pop
or
jo
clc
pop
orl
aas
call
and
stc
xor
loopne
sahf
add
push
dec
xor
ret
sub
xor
sbb
loopne
pop
or
jo
sbbl
inc
roll
sbb
mov
cli
jge
or
jns
jmp
pop
stos
pop
test
push
add
fcoms
push
adc
pop
nop
call
cmp
mov
fwait
adc
cmc
ret
lods
js
andl
sub
addb
fdivr
sti
or
adc
xchg
xor
imull
inc
mov
mov
pusha
loope
jo
les
add
adcb
dec
cld
leave
fiaddl
je
cmp
jo
or
fiaddl
sbb
int
test
filds
std
popf
adc
call
sub
jno
xchg
loopne
cmpsl
add
push
es
add
or
jo
or
std
jne
inc
xor
mov
mov
adc
pop
repnz
jne
dec
mov
jne
push
dec
adc
stos
or
push
pop
dec
xchg
aad
in
cmp
fwait
aam
mov
add
loope
in
cmpsb
mov
in
pusha
loope
push
ret
inc
or
movsl
sbb
pop
ret
mov
inc
je
jb
xor
in
adc
or
mov
out
in
loopne
or
xchg
daa
adc
inc
fcoms
cmpsl
xchg
cmp
sbb
sub
dec
push
sbb
nop
sbb
or
mov
xchg
inc
xchg
push
andb
adc
outsb
add
or
or
fdivrs
add
test
xchg
movsb
sti
in
add
sti
or
enter
or
pop
push
dec
adc
inc
mov
xchg
clc
xor
push
add
sub
insl
push
jo
fsubl
pop
xchg
pop
mov
sarb
movnti
loopne
add
std
jnp
test
sub
movsb
dec
stc
xor
or
xchg
inc
or
or
or
subb
in
or
daa
xor
xor
pop
jb
add
or
xor
jmp
and
repz
lods
push
mov
cmp
jb
add
test
imul
xchg
arpl
adc
popa
inc
test
and
test
jnp
sbb
leave
neg
and
sbb
mov
sti
in
loopne
bound
push
enter
mov
add
fs
lods
lea
pop
repz
test
sbb
iret
or
cmpsl
mov
mov
leave
or
mov
inc
jp
jo
testb
pusha
test
xchg
sub
fmull
lods
xchg
xor
mov
add
add
inc
pop
pop
mov
sub
xchg
jecxz
sub
inc
push
or
or
andl
pop
test
lea
movsl
mov
in
xchg
jns
sti
cmc
dec
jl
add
mov
and
fstp
sbb
ret
das
adc
jnp
xchg
test
in
popa
std
mov
int3
or
sbb
notb
sbb
psubusb
xor
enter
gs
sbb
dec
sbb
and
xor
movsb
sub
orl
fsubs
fsubs
das
rcrb
or
aam
orl
cmpsb
psubsb
add
xor
arpl
testb
test
inc
dec
jae
push
push
push
sub
and
push
clc
stc
mov
or
sub
mov
ja
or
cmp
push
mov
cmp
flds
orb
sbb
xor
push
sub
and
xchg
or
mov
sbb
inc
test
pavgb
mov
or
mov
mov
je
mov
jecxz
insb
add
mov
cmpsb
lods
es
dec
or
inc
xchg
lahf
mov
or
or
or
xor
adc
in
or
test
or
mov
fdivs
jge
lods
loop
dec
add
movsl
cs
or
sbb
xchg
push
insl
mov
inc
push
jns
dec
cmp
fsubrs
jp
add
and
mov
or
jae
fcoms
testl
dec
in
lahf
lock
mov
popa
adc
adc
mov
and
or
lds
and
lret
xchg
fstpt
pop
popa
adc
pop
int3
jp
adc
test
xor
daa
or
adc
fcom
inc
fsubrl
call
cwtl
pop
mov
adc
adc
nop
lock
pusha
adc
cwtl
stc
outsb
push
mov
pop
andb
sbb
xlat
or
mov
pop
push
mov
in
lds
mov
aam
shlb
or
mov
daa
mov
sbb
adc
insl
dec
pop
mov
stos
enter
repnz
scas
enter
in
push
rolb
dec
or
aad
adc
inc
int3
jno
maxps
iret
enter
adc
mov
and
mov
in
xchg
adc
enter
movsl
cwtl
mov
ss
inc
out
loope
add
adc
inc
jb
nop
mov
add
xchg
std
cmp
aaa
mov
xlat
adc
cmp
mov
inc
jbe
mov
jge
pop
xlat
cmp
add
jl
fcompl
adc
push
enter
mov
fcomp
jp
dec
leave
loopne
in
cs
xor
imul
fcom
add
dec
rclb
adc
cmp
or
rcll
pop
add
push
popf
insb
adc
mov
or
mov
adc
dec
sar
cmp
sub
gs
push
mov
mov
aas
fcomps
add
xor
xor
mov
pop
inc
inc
test
mov
cmc
insl
aam
ret
cmp
push
imul
test
inc
fldt
and
mov
xchg
pop
popf
push
stos
mov
mov
outsb
xchg
dec
and
mov
sti
push
cwtl
test
enter
xor
or
jo
adc
pop
sbb
lret
in
mov
lret
enter
sbb
call
push
jns
sbb
pusha
sbb
pop
imul
in
inc
mov
lods
xor
sbbl
push
xchg
arpl
push
jmp
pop
dec
mov
std
jbe
push
fldt
test
xor
mov
adc
pushf
addb
inc
jb
mov
xor
dec
sbb
mov
shll
pop
ds
je
clc
adc
push
cmp
pop
adc
and
enter
call
in
out
ja
or
cwtl
cmp
ret
neg
cli
ja
fninit
xor
mov
push
xchg
rclb
sub
push
and
sarl
mul
in
mov
and
mov
test
and
push
loopne
rorl
aam
call
cmc
pop
leave
mov
cmc
sbbb
out
xchg
cwtl
adc
and
sbb
add
test
in
pop
out
mov
adc
das
push
pop
adc
sbb
fadds
rclb
or
arpl
sub
dec
andl
xchg
pop
sbb
inc
and
or
gs
dec
or
jmp
fnstenv
sti
lock
dec
in
mov
shr
popl
sbb
pop
fwait
test
shrb
stc
mov
cmpl
mov
add
inc
ret
push
cltd
or
aad
cmp
sub
das
or
xlat
shlb
scas
add
sbb
xor
and
mov
mov
popf
sub
fiaddl
inc
jge
push
dec
sub
or
call
test
cmp
aas
and
push
cltd
add
add
jl
inc
aad
js
out
cwtl
lcall
xchg
popa
pop
call
inc
xchg
xor
int3
imul
jmp
test
pop
enter
sub
enter
enter
adc
xchg
add
icebp
or
and
in
xchg
dec
xchg
cmp
adc
and
test
cmp
and
rcl
test
or
add
add
orl
add
push
add
mov
cmp
sbb
rcr
jb
or
test
add
es
in
sub
pop
int3
gs
mov
das
and
sub
xchg
ja
cmp
adc
in
daa
in
inc
test
fcmovnbe
sub
inc
imul
scas
sbb
nop
mov
popa
enter
ret
and
fmuls
pop
inc
adc
les
rcrb
daa
call
divl
in
and
daa
loope
pop
fdivs
in
pop
xchg
fadd
sbb
je
daa
aaa
lock
xor
xchg
jne
aam
xor
movsb
sbb
test
push
mov
test
sub
test
mov
xchg
pop
xor
pop
nop
xchg
and
adc
cmc
in
test
jne
cmp
sbb
or
mov
xor
sub
sub
pusha
pop
sbb
jne
or
pop
push
sub
fldl
push
pop
pusha
push
mov
xor
xor
add
dec
mov
adc
das
mov
mov
lods
lods
push
jns
add
loopne
and
inc
cmp
ret
rolb
inc
push
cmp
or
lods
ss
jge
cwtl
add
or
pusha
js
push
imul
dec
stos
pushf
mov
nop
pop
in
scas
and
mov
and
push
gs
mov
push
push
imul
test
mov
xchg
cmpb
imul
movsb
inc
jl
xchg
dec
xor
xchg
subb
test
test
inc
popa
mov
cwtl
and
das
pop
nop
ss
adc
sub
pop
addl
mov
jne
add
gs
pushf
or
push
mov
cltd
mov
pcmpgtw
push
addb
movl
das
fldcw
and
push
xor
popf
inc
adc
jmp
sub
stc
jg
push
pushf
or
mov
push
testl
daa
xchg
adc
sub
cmpsl
je
aaa
cs
xor
std
dec
sti
inc
mov
jne
ja
xor
mov
rcrb
hlt
xchg
and
les
into
pop
enter
inc
xchg
sbb
dec
push
push
and
jle
push
ret
lea
add
mulb
or
add
outsb
and
pop
jb
sbbl
add
xchg
imul
test
out
jne
mov
dec
push
test
dec
jo
add
and
inc
inc
in
or
call
push
dec
or
insb
rcl
fdivs
les
and
sbbb
sub
push
push
insl
fisubl
sub
out
xchg
shld
adc
mov
mov
sti
rorl
in
push
mov
xor
mov
aaa
add
pop
inc
aas
movsl
nop
ja
test
xor
jns
gs
add
xchg
idivl
xchg
ss
arpl
xchg
adc
fs
push
insl
adcl
sub
aaa
xchg
dec
cmp
push
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
mov
fdivr
movsl
and
sbb
aaa
movsl
mov
stos
or
pusha
cltd
ss
pop
call
je
insl
fcompl
enter
fisttpll
xor
mov
and
mov
cmp
mov
dec
stos
inc
xorl
sbb
pop
js
inc
mov
cmp
notb
jne
xor
std
xchg
cmp
int3
int3
sub
add
or
push
test
lock
in
inc
iret
test
add
cmp
jmp
aaa
bound
js
fidivl
push
or
rorb
fdivrl
mov
cmp
add
int3
mov
aam
jb
outsl
pop
mov
cmp
adc
cwtl
jbe
lods
mov
shlb
rorb
mov
xor
shl
mov
imul
or
lea
fsubrl
jne
test
inc
je
test
jne
cmp
add
cmp
jmp
or
mov
ja
pushf
sub
push
mov
nop
cmp
xchg
cmp
or
cmp
mov
mov
std
leave
pop
xchg
inc
test
test
and
call
mov
and
lahf
and
push
loopne
and
mov
jp
sbb
nop
shlb
imul
mov
inc
call
xchg
out
add
aam
mov
test
pop
ret
xchg
ret
fists
mov
fs
pop
and
xchg
in
lahf
or
in
call
xor
les
lret
and
cwtl
xor
push
sbb
inc
in
or
ja
sti
mov
mov
test
and
clc
jns
inc
mov
inc
push
nop
imul
enter
ss
add
adc
orb
inc
je
inc
lods
lods
jle
or
xchg
addr16
adc
vpcomw
fadds
ja
jns
or
test
in
fnstcw
cmpsb
mov
in
cwtl
inc
dec
scas
pop
and
mov
inc
and
in
inc
or
mov
lea
and
loopne
addb
bound
mov
ja
pop
sbb
mov
jg
jns
or
xor
test
xchg
add
pop
adc
sbb
in
sbb
mov
inc
aam
pop
and
loop
in
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
mov
cmc
mov
lcall
loopne
jg
and
pushf
cmp
inc
mov
fimuls
ret
xor
test
push
add
shrl
mov
dec
imull
cmpsb
mov
adc
add
xchg
lock
lcall
subb
sub
cwtl
dec
and
xor
and
fsubl
push
or
mov
mov
arpl
rol
and
sahf
aam
orb
inc
mov
fidivrl
xchg
mov
mov
fs
shrb
dec
je
in
nop
subb
cmp
jb
mov
int3
jbe
fsubs
nop
icebp
cwtl
sub
cwtl
js
enter
push
and
mov
xchg
inc
test
daa
mov
jo
cltd
in
sarb
pop
pushf
pushf
fsubl
nop
bswap
les
lods
movsb
pushf
xor
unpckhps
xchg
in
test
pop
mov
paddusb
imul
dec
mov
test
pushf
pushf
arpl
pop
mov
sbb
push
fs
push
pop
mov
mov
sbb
out
stos
sbb
sarl
sbb
xchg
mov
xor
dec
insl
push
aad
mov
icebp
jecxz
mov
adc
pop
popa
mov
mov
movsb
test
push
push
enter
movsl
mov
mov
adc
je
xchg
sbbb
std
cmp
aam
or
cmp
sbbl
inc
jno
dec
mov
shlb
dec
xchg
push
sbb
inc
dec
dec
pop
in
les
inc
je
cmp
pop
inc
cwtl
lock
mov
in
cs
pop
movsb
pinsrw
leave
leave
mov
ror
leave
nop
lods
mov
cmpsb
xchg
sbb
insb
test
sub
dec
adcb
mov
rol
movsl
or
mov
mov
ljmp
xor
add
push
or
mov
mov
push
push
lock
jns
mov
arpl
shrb
add
lods
push
fadds
fcoms
nop
xor
or
pop
pop
inc
mov
pusha
dec
insb
sarl
cmp
adc
and
es
les
shlb
pop
dec
movsb
stc
popf
ss
adc
push
sbb
mov
cwtl
pop
test
mov
inc
push
cltd
sub
movsl
add
push
loope
ss
shll
sub
pop
xchg
mov
fadds
inc
cltd
inc
sub
inc
adc
pop
sbb
bound
adc
dec
mov
push
xor
mov
es
push
pop
push
int3
or
inc
adc
loopne
mov
call
invd
or
aas
outsl
loopne
scas
lods
sub
dec
enter
es
rclb
inc
jae
dec
dec
movsb
popa
adc
and
and
push
leave
fwait
add
int3
xlat
movsb
pop
adc
sub
imul
lcall
xchg
fs
jns
xor
adc
xchg
pushl
mov
rorl
rolb
mov
das
xchg
sbb
xor
orb
pushf
mov
mov
adc
orb
fwait
shrb
xor
xor
stc
les
mov
mov
xor
xor
cwtl
jl
fs
imul
or
es
pushf
xchg
ja
sub
xchg
rcrb
aas
xchg
pop
adc
mov
dec
jb
int3
pushf
mov
scas
popa
sub
inc
sub
aad
jo
leave
aas
pop
ret
inc
mov
pop
test
mov
and
sbb
jecxz
in
nop
inc
jne
pop
add
js
and
mov
mov
enter
sub
fwait
dec
mov
mov
dec
inc
sbb
cwtl
enter
sbb
xchg
orl
cmp
xchg
xchg
lods
lcall
sub
push
cmp
jo
jbe
not
sbb
sarl
nop
add
lock
jecxz
test
or
rolb
add
js
push
add
rclb
or
bound
insl
hlt
or
cmp
rcrl
xor
repnz
cld
sub
push
in
push
mov
sub
loop
in
popf
add
add
repz
xor
mov
sti
add
sbb
leave
fists
xor
and
adc
sbb
fiaddl
sub
push
movsb
and
or
push
movsl
jbe
clc
mov
imul
das
or
stos
sar
xor
repz
mov
clc
icebp
mov
inc
pop
pop
and
lret
xor
rorb
inc
and
push
jo
popf
mov
and
adc
aad
sbb
add
cmp
in
nop
cmp
out
call
cmpsb
sbb
inc
inc
inc
cmpsb
pop
add
mov
adc
nop
out
push
aas
in
mov
dec
popf
push
push
fidivs
subb
cmc
lods
push
lahf
sbb
out
mull
das
lock
or
lods
add
sbb
add
int3
sub
jae
fstps
out
xchg
sub
sti
lcall
push
ljmp
mov
add
xchg
mov
shll
jecxz
fs
push
jo
subl
push
xor
sbb
stos
lock
sbb
idivl
push
or
notl
dec
dec
test
jp
stos
jne
mov
jno
cmp
call
jns
mov
xchg
inc
in
lods
mov
push
mov
lcall
ret
test
mov
xor
mov
sbb
push
negl
inc
add
inc
xchg
or
pusha
xchg
add
sub
cmp
pusha
test
leave
je
jne
ret
and
and
inc
aam
sbb
mov
adc
add
mov
sub
jno
adcl
pushf
xchg
pop
dec
lock
xor
and
mov
lcall
and
sub
gs
inc
bound
cwtl
xor
inc
jge
add
push
aas
ret
xor
std
mov
mov
sti
pop
stos
test
inc
and
dec
dec
or
sub
mov
inc
scas
insl
mov
in
shrb
xor
jmp
xchg
adcb
incb
push
and
bound
pop
jp
inc
adc
adc
test
es
lods
dec
jmp
mov
repnz
cwtl
add
sub
jno
cmp
mov
dec
sahf
cmp
std
enter
xchg
ret
inc
add
inc
rorb
mov
enter
idiv
sbb
sbb
mov
or
xchg
pusha
cmp
sahf
xor
jo
mov
and
cmp
and
mov
popa
add
sub
dec
stos
sbb
or
repnz
or
mov
sbb
out
nop
psubusb
sbb
fcoms
movl
mov
mov
jl
add
sbb
and
ficoml
adc
cmp
subb
mov
adc
mov
sbb
insl
ret
inc
add
cmpsl
mov
add
shlb
test
add
dec
xor
sub
sub
ret
test
mov
mov
leave
and
mov
loop
cltd
lods
mov
mov
decb
das
xchg
sbb
cmp
lret
push
fisubrl
push
getsec
dec
repnz
sbb
lret
mov
or
jne
inc
dec
dec
adc
push
insb
push
xor
lret
sbb
inc
push
add
addr16
push
fimull
pushf
sub
push
push
sub
adc
push
jle
mov
lods
add
push
jne
cmp
gs
mov
mov
xor
mov
and
aaa
mov
cs
mov
jecxz
cmp
or
jecxz
lods
pop
jb
jae
jp
push
pop
cmp
xchg
sbb
xor
xchg
das
pusha
and
push
push
fucomp
jge
sahf
and
add
fcomp
adc
add
xlat
mov
mov
sub
lret
push
inc
or
lahf
subb
and
pop
andb
push
clc
loope
push
mov
sub
mov
and
sub
and
dec
mov
or
mov
sub
leave
orb
rol
xor
js
fadds
out
dec
mov
xor
sbb
xor
enter
lgs
add
fdivrl
pop
xchg
adcl
js
adc
push
push
jo
imulb
xor
jno
pop
cmp
js
jo
jbe
adc
mov
aas
dec
lahf
nop
movsb
jmp
adc
fstpl
sub
ss
push
ja
jl
out
cltd
mov
loope
iret
repz
sbb
aas
pusha
jbe
jns
repz
loop
pushw
mov
decb
cmp
inc
add
popf
push
mov
fmuls
cwtl
int3
inc
aas
pushf
ss
popa
fldl
mov
jo
and
and
int
xchg
sub
rcll
mov
mov
jns
mov
add
decl
or
mov
xor
adc
mov
gs
push
fistl
or
cmp
rclb
cmpl
rcrb
std
jmp
add
into
pop
adc
test
sub
push
in
sub
imul
call
push
add
gs
jb
popa
fs
je
arpl
jne
jb
outsb
je
gs
fcmove
push
jnp
aas
rdpmc
add
int
cmpb
sub
jle
mov
shlb
popa
insb
insb
outsl
arpl
imul
add
xchg
add
jmp
insl
adc
jbe
out
xor
push
inc
outsl
jb
js
je
jb
gs
add
or
cmp
outsl
add
add
add
add
jne
xchg
jecxz
xlat
out
je
imul
dec
and
push
add
aaa
sti
divl
dec
add
inc
xor
xlat
push
add
add
aas
mov
add
dec
sbb
and
inc
push
je
push
insl
xchg
je
je
mul
loopne
and
jae
dec
fisttpl
out
sti
sbb
insl
push
push
mov
jae
bound
jbe
inc
jne
imul
sti
into
jbe
aas
imul
ja
jp
outsl
or
mov
dec
fs
lret
fnstsw
addr16
and
outsl
jmp
jo
mov
arpl
xor
stos
insl
dec
jo
jnp
jae
push
imul
scas
cmp
jne
inc
push
mov
ja
sahf
xchg
lret
xor
insb
jp
pop
jnp
fs
insb
lcall
repz
lahf
popl
outsb
inc
arpl
in
cmp
or
inc
inc
cmpl
jbe
fbstp
loope
fisubs
outsb
bound
outsl
lds
jnp
sbb
jo
arpl
js
outsl
fistl
insl
dec
xchg
pop
ret
push
mov
filds
sbb
jb
ret
or
jecxz
fidivrl
cs
movsb
pusha
xor
xor
xor
outsl
andl
lods
popa
fidivrl
jg
popa
call
or
push
jno
in
outsl
xchg
lahf
aaa
jg
xor
pop
ja
iret
fbld
dec
rcll
xchg
xorl
divl
jb
jne
inc
mov
jae
jbe
stos
nop
mov
pop
stos
mov
rcrl
jae
stos
popa
lds
aam
adc
push
pop
insb
push
lahf
outsl
aas
or
inc
loop
mov
scas
sbb
cmp
rcll
aaa
jge
add
insl
lret
imul
cmc
stos
fs
imul
shll
xor
andb
xor
outsl
pop
sub
addl
add
pop
out
lds
insl
lret
scas
inc
cmpsb
mov
popa
push
xor
lock
jg
mov
subb
std
inc
jecxz
push
push
sub
ret
or
cmp
xor
sbb
dec
addr16
pop
push
or
xchg
or
iret
sti
jle
cmp
loopne
inc
inc
cwtl
push
adc
dec
sarl
push
adc
iret
sarl
sbb
cld
sbb
cmp
sbb
stc
sahf
jnp
das
push
pop
sahf
dec
cli
and
mov
lock
jns
jns
jns
jp
push
cld
cmpsl
out
addl
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
icebp
inc
pushf
cmp
cmp
add
mov
and
jns
add
das
das
clc
lahf
jmp
inc
inc
arpl
bound
mull
mov
dec
arpl
out
sbbl
push
jo
sub
addr16
xor
insb
xchg
mov
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
out
jnp
jns
jg
addr16
popa
je
lods
std
int3
fnsave
xor
and
daa
mov
gs
sbb
dec
outsl
outsb
and
cmp
pushf
insl
jbe
mov
aas
add
out
dec
or
inc
arpl
mov
jae
jnp
dec
and
push
adc
popa
insb
jne
loope
mov
push
push
ret
lods
decl
lahf
and
sub
sub
cs
xor
xor
xor
ss
push
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
nop
pop
dec
mov
push
bound
pop
mov
movsb
pusha
popa
bound
gs
imul
shl
outsl
jo
add
jbe
js
jp
jl
jle
andl
mov
sub
ja
jnp
ret
sub
xor
push
add
xchg
test
add
add
add
add
loope
ja
and
push
pop
outsb
add
xor
fldenv
test
push
add
pusha
push
loopne
jo
add
inc
add
or
popf
add
sbb
cltd
lcall
loopne
fbstp
orb
sar
idiv
cld
sti
lret
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
or
clc
icebp
xorl
test
mov
imul
roll
add
out
inc
mov
xor
aas
aas
popa
js
sbbl
addr16
dec
pop
or
jge
xorl
addb
push
xchg
cmpsb
xor
add
imul
dec
rorb
data16
push
inc
cltd
xor
push
push
mov
sub
jb
xor
push
jo
add
cmp
or
inc
mov
add
xlat
push
outsb
imul
and
jp
adc
add
imul
loop
inc
inc
jns
mov
xchg
add
add
jns
cmp
xchg
dec
cs
nop
xchg
leave
dec
cs
jb
pop
xor
or
jmp
scas
mov
dec
cmpsl
out
add
push
pop
lods
lods
mov
scas
aad
repnz
sbb
mov
jp
cmp
fnstsw
sub
ss
js
push
sbb
pop
dec
dec
cmp
adc
push
mov
pop
movsl
inc
mov
push
jae
fst
icebp
jbe
bound
je
outsb
inc
insl
xor
push
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
inc
insb
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
in
jo
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
or
push
add
and
out
push
das
outsb
gs
mov
data16
inc
insb
and
dec
testl
cs
xor
dec
push
lods
jno
xchg
fisttps
addl
insl
jle
jb
inc
or
imul
adc
jg
sbb
fs
inc
sub
fs
xchg
das
sub
or
gs
sbb
popa
lds
inc
jg
sub
lds
push
or
pop
jne
pop
das
je
outsl
xchg
ret
daa
xchg
mov
popw
mov
sahf
negb
push
jl
cmp
or
ds
jmp
push
das
push
sub
imul
sub
sub
cmp
fisubs
outsb
add
ds
mov
or
sbb
das
push
lea
cmp
aaa
aaa
and
in
mov
mov
xchg
ds
out
mov
jg
pop
pop
jne
stos
addr16
xchg
fs
jbe
sbb
add
adc
xor
gs
imul
mov
dec
sbb
sbb
fcoml
sahf
inc
pop
mov
cmp
jo
sub
int3
push
jl
out
sub
cmp
mov
addb
xor
out
cmp
sbb
or
hlt
or
call
fadds
cwtl
popa
push
aam
jns
not
push
int3
enter
out
sahf
mov
lods
test
mov
pushf
outsb
cwtl
xchg
nop
push
fdivp
cmp
inc
xchg
mov
push
cmpb
jns
js
jo
out
sahf
out
fs
pop
pop
jns
out
push
push
jg
dec
inc
cmp
jns
out
and
add
or
repz
loopne
mov
out
cmp
add
or
js
fs
dec
repz
out
and
call
dec
enter
and
clc
cmp
ds
push
xchg
push
mull
cmp
sbb
or
or
add
dec
shrl
add
and
push
add
addl
add
add
cmp
add
mov
push
add
push
mov
add
add
pop
sub
add
adc
andb
jnp
testb
push
pop
jo
inc
adc
das
jle
ja
rolb
or
test
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
ljmp
mov
mov
mov
mov
mov
mov
ret
enter
dec
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
jmp
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
movsl
push
loope
or
adc
jmp
push
test
jmp
aam
push
mov
lock
pop
outsb
gs
popa
data16
xor
pop
pusha
pop
sarb
ljmp
push
xor
add
ljmp
cwtl
add
push
fdecstp
push
mov
push
insb
fs
sbb
add
je
xor
sahf
jp
or
ltr
sub
add
inc
jg
shr
dec
push
push
dec
and
xor
push
dec
pushw
add
inc
dec
cmovns
cmove
jg
das
push
adc
sub
adc
cmpb
call
rclb
mov
and
jg
fidivs
inc
jnp
inc
loop
mov
ds
pop
and
aas
fcoms
inc
pop
clc
lret
sbb
jb
mov
pop
arpl
cmp
jg
adc
jg
fstl
mov
and
cmp
dec
imul
inc
sahf
push
cmpsb
iret
lret
add
inc
mov
mov
shr
test
sub
fwait
ss
sbb
pop
jg
jns
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jg
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
and
ud0
cmpsl
xor
ds
dec
pop
or
das
mov
repz
xor
pop
mov
pushf
fdivr
icebp
pop
pop
repnz
inc
mulb
and
es
mov
jle
add
add
push
cmp
push
aas
gs
pop
push
adc
outsl
push
inc
push
add
loopne
ja
xchg
push
ds
inc
pop
xchg
adc
sub
mov
enter
push
and
or
inc
rcr
dec
xchg
adc
or
sbb
mov
pop
imul
and
jae
dec
das
popa
pop
mov
or
data16
scas
fmuls
xor
push
push
mov
test
add
aaa
pcmpeqw
loopne
adc
sti
or
ja
popa
daa
fwait
shr
adc
ret
daa
je
cmp
mov
insb
push
mov
je
push
add
xchg
shlb
xchg
lret
xchg
andb
clc
arpl
notb
mov
add
push
out
bound
xchg
sbb
mov
mov
and
addb
add
daa
sub
jae
cmp
out
jae,pt
insl
jle
fs
jnp
push
pop
cmpsl
mov
jecxz
jecxz
outsl
popa
add
or
shlb
out
fbstp
out
scas
cmp
jae
push
mov
aas
jg
jnp
call
insb
daa
jnp
inc
mov
insb
sbb
add
add
test
lock
and
add
ret
xor
mov
mov
fs
mov
cmpsl
xchg
data16
push
movlps
call
sub
xchg
jne
aas
cmpsl
popa
mov
add
out
ret
scas
inc
outsl
xchg
insl
mov
fidivl
sub
ja
neg
loop
iret
pop
lcall
inc
fildll
addr16
iret
jb
xor
ret
add
xlat
xchg
data16
gs
gs
push
xor
arpl
xor
fidivs
xor
ja
xor
xor
imulb
jo
sahf
imul
rep
je
cmpsb
add
adc
repz
sbb
or
ss
repz
hlt
mov
iret
mov
pop
in
fcomps
pop
cmp
xor
sub
xor
inc
inc
add
pusha
and
push
das
pop
pop
inc
mov
iret
insl
jb
xchg
insl
es
cmp
pop
pop
popa
or
ret
fildll
mov
lods
add
jo
imul
push
imul
imul
rcl
sahf
es
xlat
je
cmp
divl
push
and
popa
cmp
cmpsl
lock
lods
mov
jge
orb
insl
test
jl
ret
dec
dec
outsl
adc
jnp
jnp
ss
jo
scas
aaa
dec
add
push
inc
or
pop
xchg
ja
pop
jecxz
mov
insb
aas
pop
xor
jo
sub
mov
cmp
pop
inc
scas
fwait
pop
pusha
lahf
out
es
sbb
je
and
mov
aas
arpl
daa
pop
arpl
arpl
fstpl
das
push
negl
sbb
cs
sbb
das
es
out
or
es
rcll
pop
sbb
xchg
sbb
jae
fldt
out
popl
push
loopne
pop
xorl
sub
sub
xchg
jns
xor
cmpb
push
ret
mov
add
outsb
inc
or
jg
push
jno
jecxz
push
xchg
je
jb
push
dec
arpl
mov
mov
push
inc
xorl
push
adc
mov
inc
pop
hlt
sbb
sub
cmp
pop
cld
or
enter
je
jae
loope
jge
out
out
xchg
fidivrs
push
adc
idivl
lock
ja
mov
xor
dec
xchg
mov
add
js
dec
sbb
filds
sub
les
push
sub
push
push
mov
inc
mov
fstpt
xor
mov
in
sbb
dec
dec
mov
out
repz
ds
js
or
mov
call
addr16
es
sbbb
stos
push
or
cmpsl
arpl
sahf
sub
outsb
add
shll
add
out
pop
push
lret
xchg
inc
push
fcmovb
jge
cs
lret
and
jb
scas
arpl
ja
and
jno
mov
ret
push
mov
lds
ja
loop
xchg
out
rorb
mov
ss
mov
cmpsb
orps
ja
es
sub
int
mov
inc
push
inc
mov
das
pop
loope
divl
arpl
test
insb
scas
push
mov
pop
dec
cmc
scas
push
add
ja
mov
mov
sbb
loopne
aaa
mov
dec
sbb
inc
cmpl
je
pop
push
leave
clc
hlt
loope
adc
xchg
xchg
cwtl
ret
pop
sub
add
sub
pop
mov
inc
or
inc
sbb
scas
lahf
inc
imul
add
jmp
or
out
inc
dec
mov
mov
mov
fsubrp
jl
jl
pop
mov
jl
imul
ja
aaa
movb
mulb
and
addr16
bound
push
jle
push
das
fnstsw
xchg
in
mov
adc
out
jns
jae
ja
pop
mov
ja
jno
iret
pop
or
ja
pop
pop
ja
sbb
jmp
scas
out
jns
insl
xor
sbb
in
stos
div
outsb
push
hlt
int
jo
popa
pop
arpl
mov
insb
jl
subl
fisubrs
jl,pn
outsl
lret
push
out
xor
jl
outsl
arpl
or
xor
jns
pop
mov
decb
roll
and
stos
das
fs
mov
imul
dec
pop
adc
jl
ss
ret
repnz
adc
cmp
daa
inc
sbb
lock
push
outsl
pop
or
xor
dec
push
sbb
add
push
test
ficoms
xchg
sbb
sub
mov
arpl
ljmp
clc
clc
out
xlat
imul
cmp
fidivrs
das
jae
mov
sub
decl
add
repnz
inc
pop
push
mov
pop
mov
stos
vsubpd
test
clc
jne
imul
lcall
rcll
push
xor
dec
in
push
popa
inc
mov
addb
movsb
sbb
inc
xor
imul
bswap
js
push
add
jge
adc
jnp
mov
lret
out
add
inc
movsb
cmp
add
outsl
jecxz
repz
adc
pop
sbb
negb
sti
xor
xorl
out
shrl
push
cmp
xor
cltd
or
xchg
push
test
mov
add
or
xorb
add
out
adc
sbb
and
sub
xor
inc
mov
mov
cmp
lret
mov
popa
xchg
cltd
fldcw
shrb
ret
sub
lcall
xchg
pop
adc
ss
mov
pop
sbb
int
push
dec
str
data16
or
and
das
incl
dec
pxor
jbe
add
xor
add
ss
data16
mov
lods
les
aaa
sub
les
inc
fs
cmp
pop
push
fs
inc
cmpsl
and
dec
fisubrl
push
inc
dec
inc
test
arpl
add
jne
push
rorl
clc
sbb
mov
das
pop
outsb
mov
mov
mov
mov
push
das
sbb
out
mov
mov
outsl
dec
imul
mov
push
fsubl
jb
icebp
mov
cmpsl
movsb
sub
cmp
ds
push
data16
sub
es
sbb
inc
out
js
sti
push
fsubrs
out
dec
inc
pop
sub
shrl
fs
stos
dec
mov
stos
push
lods
lods
jl
repz
loopne
or
stos
scas
idivb
loope
inc
xchg
ds
mov
idivl
mov
push
bnd
dec
fildl
dec
shrb
push
pop
in
sub
ds
mov
subl
rcll
ror
mov
insb
cmp
adc
cmpsl
mov
push
jae
push
mov
cs
fadds
scas
jnp
lahf
testl
jg
push
or
sahf
out
push
es
dec
cmp
mov
mov
dec
push
sahf
mov
pop
pop
aaa
dec
push
xchg
push
icebp
and
mov
aas
addr16
push
arpl
jns
sbb
mov
adc
sub
push
arpl
arpl
jo
push
or
fstpt
cs
sbb
rcl
push
aas
iret
popa
imul
or
adc
push
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
cmp
mov
imul
bound
xor
jle
mov
int
cmpsb
iret
jnp
jl
into
and
ds
inc
jno
iret
repz
popf
int
and
cmp
insb
push
jge
test
jns
pop
shrb
int
ds
add
nop
inc
loopne
outsb
xchg
jle
mov
gs
je
cmp
adc
inc
faddp
push
jo
jb
mov
add
mov
mov
and
jae
insl
in
pushf
inc
sbb
and
and
imul
std
cmp
jae
imul
adc
dec
sbb
inc
jl
xchg
sahf
and
or
adc
in
imul
subb
in
lods
sarl
data16
sar
imul
and
push
mov
add
test
decl
jl
imul
daa
xor
inc
mov
outsb
inc
cltd
jecxz
daa
inc
mov
inc
mov
sbb
lea
mov
pop
push
ficoms
filds
push
or
push
nop
ss
repnz
sub
and
dec
or
mov
sbb
and
cmp
fidivrs
addb
outsb
mov
mov
xchg
in
into
or
and
ljmp
imul
adc
mov
jae
lret
sub
mov
add
inc
fs
or
inc
mov
xor
out
jbe
fwait
mov
sbb
sbb
push
inc
mov
inc
inc
mov
sti
xchg
or
es
mov
dec
dec
push
mov
cwtl
inc
lahf
add
ret
outsl
mov
stos
pusha
push
inc
sub
mov
out
jge
adc
push
push
inc
xchg
inc
inc
decl
pop
xor
cmp
xchg
addl
push
movsb
sbb
sbb
mov
and
xor
add
push
adc
mov
and
and
inc
pop
aad
sbb
mov
cmp
test
add
fsubrs
adc
and
sub
iret
gs
add
pop
mov
jecxz
mov
stc
ljmp
or
dec
aaa
test
lock
aaa
pop
bound
movsb
add
xor
arpl
mov
jb
rclb
add
cmpsl
out
mov
and
xchg
add
fsubs
lods
loopne
add
dec
sbbb
xor
sbb
pop
data16
pop
repz
lods
push
mov
adc
push
shl
push
cmp
pop
test
test
xlat
and
mov
add
lods
add
push
sti
mov
xchg
pop
cmpsl
stos
call
cmp
inc
aas
push
push
inc
imul
adc
sbb
fbld
inc
das
inc
or
daa
or
inc
sub
insb
shlb
outsl
lcall
stos
adc
daa
iret
outsl
js
inc
xchg
outsl
arpl
cwtl
cmp
dec
add
add
iret
idivl
adc
adc
dec
push
jb
cmpsb
cmpsl
scas
push
sub
rcrb
test
adc
jo
pop
inc
inc
or
lds
mov
fistps
xlat
and
lret
lods
adc
mov
sub
lods
xchg
rolb
out
and
cmpsl
push
cs
cmp
jno
and
push
test
xchg
or
sti
ret
iret
mov
add
out
jnp
bound
scas
and
xchg
rcll
aas
imul
ss
dec
pop
push
ficoml
mov
inc
cmp
xchg
mov
das
pop
or
sub
fbld
inc
ret
fldt
fiaddl
xchg
mov
inc
inc
testl
lret
arpl
imul
and
popa
adc
ret
jae
sub
fists
divb
mov
ret
lahf
arpl
push
mov
fdivs
and
push
das
dec
imul
shrl
mov
push
fidivs
mov
push
mov
test
out
arpl
outsb
push
ret
push
add
lahf
jne
rorl
lods
imul
pop
cmp
movaps
add
pop
inc
adc
mov
xchg
scas
pop
push
xor
andb
adc
sbb
adcb
loop
xchg
repz
xor
xchg
mov
cs
add
mov
clc
jne
arpl
imul
add
push
push
movsb
insb
dec
call
and
jb
or
mov
pushf
sarb
call
fimull
popa
arpl
rclb
mov
pop
add
imul
nop
or
aaa
pop
aaa
xor
outsb
dec
scas
xor
bound
adc
imull
sarb
lret
jmp
scas
shl
ficoml
sub
sub
jno
rorl
imul
cmpsb
sbb
dec
sbb
les
xor
outsl
lahf
xlat
test
adc
mov
cmp
or
push
les
xor
sti
inc
lods
add
push
orl
push
lcall
sub
inc
cmp
lea
es
je
push
stos
and
ficoml
shrb
mov
mov
push
cmp
pop
sub
imul
jbe
push
push
jnp
ds
xor
add
pop
add
js
and
jnp
scas
sbbb
inc
cs
setg
inc
mov
dec
cvtps2pd
mov
cmpsl
push
mov
pop
outsb
ret
adc
jg
fisttps
aaa
addb
insl
mov
add
les
dec
push
in
bound
xchg
gs
inc
dec
ja
stos
pop
js
jg
xchg
gs
add
push
aas
mov
iret
jp
addr16
mov
loop
xchg
fcom
jae
out
sbb
jmp
bound
rol
cmpsl
push
and
pop
mov
cmp
out
xor
xlat
jge
jmp
das
ret
mov
xor
mov
inc
dec
inc
es
cld
xor
cmpsl
push
jg
inc
push
int
pop
inc
fnstcw
test
repnz
push
rcrb
lcall
popa
jno
imul
jbe
add
mov
push
gs
jecxz
stc
imul
outsl
and
ja
mov
pop
mov
jno
stos
out
inc
lods
loop
scas
xor
or
mov
loop
mov
mov
out
lahf
push
sbb
or
fwait
mov
pop
jg
cwtl
push
bound
out
arpl
outsl
jae
imul
lods
adc
cmp
pop
mov
mov
das
adc
shlb
pop
mov
xchg
pop
mov
adc
jecxz
push
negl
arpl
cmp
sbb
ljmp
shll
push
sub
push
push
pop
mov
adc
aas
iret
bound
lock
or
sbb
and
add
pop
stos
cmp
or
roll
xlat
aas
mov
inc
idivl
adc
mov
daa
and
notl
daa
mov
mov
imul
pop
arpl
jg
cmp
testl
fwait
mov
dec
mov
xor
fs
popa
mov
cs
jl
sbb
mov
pop
jle
lods
fcomps
insl
das
dec
loopne
aaa
jb
jae
xchg
cmp
mov
mov
push
mov
insl
arpl
jnp
mov
or
shrb
mov
out
cmpsb
push
jno
out
ja
pop
mov
cs
pusha
inc
adc
mov
xchg
and
mov
xchg
sub
mov
mov
push
xor
cmpsb
xchg
push
leave
inc
lock
dec
dec
clc
mov
push
leave
push
test
sub
pop
add
mov
xchg
stos
fs
or
mov
xchg
dec
and
in
enter
mov
mov
leave
push
xor
aam
dec
cmpsb
xchg
mov
sub
push
repnz
mov
dec
pop
and
stos
in
cltd
xchg
inc
pop
and
mov
xchg
clc
scas
movsb
and
cld
lods
push
jb
dec
test
cmpsb
xchg
push
leave
add
dec
or
stos
and
sbb
cltd
dec
pop
int3
stos
jl
imul
and
inc
inc
mov
cmp
add
and
daa
clc
add
xor
inc
loop
aas
pop
xchg
outsb
bound
inc
push
pusha
lods
mov
add
lods
or
imul
xlat
inc
mov
arpl
dec
inc
inc
sbb
rcll
iret
dec
xor
sbbb
xor
pushl
cmpsl
pop
inc
ret
cmp
mov
dec
daa
mov
je
inc
push
dec
sbb
xor
fisubrl
repz
xchg
pop
fbstp
dec
inc
mov
fadds
add
neg
cmp
shll
sbb
aas
mov
inc
pusha
orl
push
lret
inc
insl
xor
push
inc
mov
inc
inc
mov
rclb
sbb
push
sub
subb
ss
add
inc
cltd
dec
mov
push
scas
addr16
sbb
lods
test
sub
sbb
call
scas
cmpsl
mov
daa
ret
inc
sub
fwait
sbbb
and
push
jnp
inc
push
scas
push
mov
dec
inc
pop
adcl
daa
arpl
subb
bound
mov
filds
jmp
sbb
aaa
outsl
adc
mov
orb
ss
outsl
jecxz
and
lahf
adc
push
aam
xchg
inc
add
cmpl
add
add
pushl
or
pushf
aas
mov
test
fistpl
inc
mov
bound
outsl
scas
pop
mov
imul
push
sbb
sbb
loop
adc
out
outsl
jbe
pop
lcall
test
bound
jns
pop
mov
and
rolb
add
int3
xchg
or
jl
fcomi
xlat
popa
xor
push
and
cmp
add
mov
and
in
push
jbe
fistl
or
cvtpi2ps
pusha
mov
rol
xchg
dec
push
adc
mov
sbb
inc
aas
and
loope
cmp
sub
cmpsl
hlt
std
pop
jne
addr16
les
jno
xchg
fs
sbb
mov
cmp
dec
xchg
les
loop
jo
cmp
push
mov
pop
sbb
lahf
addl
ss
ja
in
aaa
mov
lock
jnp
bound
jno
add
outsl
dec
js
dec
mov
add
xchg
lock
xchg
lock
jmp
add
shll
sub
and
je
stos
add
xor
jae
imul
adc
cmpsl
out
fildl
mov
jns
cmpsl
dec
sub
inc
lods
cmp
jns
cwtl
js
push
daa
push
inc
push
js
cmpsl
stc
in
test
mov
test
inc
xlat
or
and
rolb
add
lock
jb
dec
add
imul
aas
dec
in
add
pcmpeqb
adc
sti
sbb
fisttps
cmp
push
test
mov
outsl
mov
stos
xlat
out
icebp
xor
cvttps2pi
dec
lods
cwtl
mov
je
mov
cmp
xor
xor
mov
xchg
jnp,pn
jl
cs
xor
mov
sets
das
or
ss
adc
and
jae
movsl
je
pop
pop
fwait
test
and
sbb
ljmp
pop
stos
loopne
and
outsl
pop
out
popf
inc
stos
xorl
push
pop
jae
and
inc
aam
mov
push
addr16
imul
movsb
add
jmp
out
push
push
or
mov
sti
sbb
xor
lods
imul
js
and
push
inc
ficomps
adc
pop
or
lret
dec
into
data16
cmc
sahf
pop
dec
push
xchg
push
pop
push
in
scas
ss
cs
cmp
fimull
addb
push
lcall
out
js
imul
lcall
out
xchg
jnp
mov
stos
inc
xchg
cmp
in
fidivs
jae
fs
dec
rorl
into
xor
xchg
fcmovbe
pop
mov
jge
in
inc
mov
or
imul
cmp
push
loope
xchg
jbe
out
inc
neg
dec
or
inc
push
lret
ss
fidivl
dec
mov
bound
xor
pop
incb
xor
push
mov
outsb
pop
ret
lds
cmp
push
dec
jge
js
xchg
ja
retw
pop
fnstsw
das
jae
push
fidivs
neg
loope
sahf
lcall
outsl
inc
mov
inc
mov
pop
push
sub
cmp
addl
jge
mov
cs
sbb
packssdw
inc
pop
pop
mov
mov
es
ss
outsb
pop
push
push
xor
loope
clc
daa
dec
jb
das
inc
pop
dec
es
mov
mov
fbld
data16
idivl
or
sysexit
mov
xchg
aas
dec
cs
sahf
push
outsl
jge
xchg
push
insl
sub
fidivrs
mov
push
scas
push
insl
mov
inc
lds
mov
mov
push
jp
outsl
loope
outsl
ds
cmpl
pop
dec
jg
dec
das
xor
lock
xchg
jp
pop
outsl
pop
pop
out
loopne
dec
xor
xor
or
outsl
outsl
and
enter
inc
jb
jb
dec
xchg
sub
sbb
push
mov
cmp
mov
sub
inc
mov
lret
nop
cmpsl
scas
scas
push
iret
jae
inc
push
subl
ret
jle
mov
xchg
xor
push
nop
sar
or
fistl
sbbl
shll
pop
xchg
add
xor
mov
push
inc
les
out
pop
xor
add
jno
sbb
sarl
mov
daa
dec
popa
adc
repz
and
shlb
push
daa
xor
addl
xor
roll
scas
adc
arpl
mov
stos
pop
shll
mov
imul
pop
fwait
mov
fs
es
xor
lahf
inc
xchg
xlat
or
xor
dec
jp
rolb
daa
sub
mov
sub
push
cs
sub
shrb
mov
push
push
or
jg
int
mov
icebp
mov
inc
dec
stos
bound
pop
aaa
push
addr16
or
cmpsb
das
mov
mov
mov
mov
sbb
mov
fs
outsl
sub
sbb
sbb
adc
mov
ljmp
sub
cmpsl
lds
pop
iret
add
xchg
inc
xchg
loopne
dec
daa
or
je
cmp
mov
pushf
fsubrl
pop
sbb
mov
pop
xchg
bound
dec
sub
inc
outsl
xlat
stos
lods
xchg
pop
inc
outsb
aas
mov
add
lahf
and
iret
fiadds
mov
pop
das
push
sub
iret
jmp
pusha
mov
sub
pop
inc
sub
push
arpl
sub
mov
int
cmpsl
jg
ret
inc
sub
pop
ljmp
inc
subl
add
jb
inc
lret
jbe
addr16
adc
imul
fwait
or
fdivrs
mov
iret
mov
ret
das
jne
mov
add
iret
inc
clc
jle
test
push
jnp
lods
mov
iret
orl
sub
xchg
mov
daa
and
xchg
inc
and
push
push
push
xor
arpl
imul
rcr
mov
mov
mov
loope
mov
int3
push
xor
das
adc
sub
inc
xchg
adc
xor
adc
jmp
shlb
mov
mov
ljmp
ja
sbb
ljmp
mov
mov
mov
lods
pop
dec
jmp
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
mov
fnstcw
sub
mov
sbb
in
pop
enter
ds
pop
sbb
xor
mov
add
lahf
jo
fsubs
sbb
mov
ljmp
dec
pop
dec
xchg
jecxz
dec
push
mov
pop
add
adc
adc
jb
and
outsb
pop
out
xor
pop
imul
xchg
fcoms
mov
inc
dec
sub
test
and
scas
mov
sbb
movsb
push
dec
fmul
pop
mov
sub
jb
in
jl
leave
jae
pushf
insb
xor
cmp
cmp
sub
daa
seta
dec
or
push
add
jb
sahf
xor
xchg
push
dec
push
inc
dec
js
and
pusha
mov
or
jb
lods
bound
loopne
shrb
scas
pop
stos
lods
ja
inc
ljmp
sti
jnp
cmp
in
cs
sub
mov
ljmp
push
cmp
inc
pop
out
jno
and
cmpsb
jp
mov
or
bound
sbb
imul
add
scas
out
mov
incl
bound
je
bound
imul
sub
jae
cli
add
add
adc
pop
sldt
jp
aam
ss
push
mov
or
dec
pusha
lret
aaa
movsl
inc
sbb
shrb
lea
inc
dec
push
push
scas
test
je
rclb
or
add
das
scas
insl
and
out
xor
adc
gs
push
dec
pop
mov
rolw
test
or
negl
mov
mov
jne
inc
ljmp
cli
ds
fadds
adc
add
jg
cmp
jecxz
and
out
cmp
mov
pop
pop
dec
cmpsb
test
gs
and
iret
mov
push
cmp
je
mov
hlt
push
je
add
push
mov
push
aad
dec
add
dec
mov
lret
pop
mov
inc
outsl
xchg
xchg
push
pop
or
dec
inc
arpl
adc
add
cmpsl
push
cmpsl
clc
shrb
jp
jle
jl
mov
es
mov
pop
repz
mov
in
incb
cld
jle
inc
outsl
sarb
mov
add
fs
iret
enter
dec
xchg
add
push
orl
es
mov
int
rorl
pop
les
sbb
jle
stc
cmpsl
push
adc
sbb
fldenv
mov
ja
outsl
loopne
lcall
push
cli
shrb
ds
sysret
dec
sqrtps
sub
fs
aaa
pop
pop
in
int3
scas
mov
fsubs
sub
push
sub
repz
jbe
lret
dec
in
push
mov
insb
sahf
xchg
cmp
cmpsb
and
mov
sbb
lret
jg
push
mov
iret
sarl
push
js
ss
jbe
lahf
out
lcall
shll
cmp
out
mov
push
rolb
dec
stos
jne
sub
add
mov
repz
out
push
cld
push
or
dec
dec
push
gs
mov
push
es
pop
jl
lds
fimull
dec
pop
cmp
mov
fwait
push
mov
cmpsl
rcll
shl
jnp
out
fstl
cld
dec
in
fwait
std
jo
fbld
dec
xlat
mov
mov
pop
push
inc
cs
push
icebp
test
sub
repz
lea
push
sti
lcall
out
lds
mov
cmp
push
pop
outsb
ds
pop
ja
je
xchg
mov
repz
addl
fnstsw
push
sbb
jl
out
pushf
mov
out
adc
xor
test
jnp
dec
lahf
push
inc
pop
pop
sahf
mov
push
out
jns
iret
or
test
incb
lcall
mov
pop
inc
sub
out
dec
outsl
xchg
mov
repz
inc
cmp
inc
jmp
adc
ds
and
cmp
xchg
mov
std
sbb
fidivrs
inc
pop
mov
ljmp
dec
or
dec
sbb
scas
sub
or
test
and
and
sti
add
adc
adc
push
mov
xor
adc
cs
add
mov
scas
int
mov
fstps
ds
loop
and
push
pop
mov
das
jbe
lahf
add
idivb
jbe
cmpsb
mov
and
pop
sbb
ljmp
in
enter
adc
or
adc
aas
pusha
or
movsb
test
add
add
sbb
or
push
movsb
sbb
imul
aad
sbb
sbb
mul
jns
or
push
aad
mov
js
cld
and
outsb
outsb
lcall
push
push
js
xor
pop
mov
pop
insl
gs
aam
cmp
xor
dec
pop
addr16
sbb
lcall
aas
lret
imul
push
sub
pop
xchg
or
mov
inc
outsl
xchg
jb
popa
je
pop
test
mov
mov
test
inc
push
pop
dec
and
out
pop
dec
pop
inc
mov
imull
mov
adc
dec
mov
add
lea
push
and
loopne
dec
rorl
sub
push
dec
inc
inc
push
dec
or
mov
pop
sub
shl
xchg
push
lahf
scas
test
aas
cmp
and
or
sbbb
scas
outsb
xlat
jl
hlt
sbb
jo
push
jo
sarb
inc
dec
push
sub
dec
out
loop
jno
inc
add
outsb
insl
xchg
jmp
je
cs
cmpsl
dec
xchg
push
sbb
pop
fs
jo
hlt
sbb
lods
iret
xor
test
popf
add
rcl
add
push
add
lock
imulb
rolb
xor
xor
xor
dec
pop
enter
cmp
sysexit
xchg
mov
ret
ret
mov
mov
sub
ret
push
out
dec
fs
jo
xor
ljmp
push
popa
dec
add
outsb
push
jnp
sbb
dec
or
add
shlb
push
pop
aaa
dec
cmp
xchg
sub
push
stos
inc
ret
and
fwait
xlat
addl
add
jbe
push
insl
aad
inc
push
movhps
movsb
and
shll
adcb
aas
sbb
bound
sbb
pop
test
ja
insb
or
jmp
mov
jmp
cwtl
or
test
int3
insb
pop
inc
arpl
bound
push
jb
out
push
inc
pop
jo
addr16
mov
movsl
push
pop
jae
xchg
mov
fisubl
add
das
jecxz
pop
aad
fwait
lods
adcl
stos
jp
inc
mov
das
inc
jg
or
sbb
jmp
cmp
pop
add
popw
push
imul
scas
outsl
aaa
fisubrl
sti
pop
fwait
loope
inc
out
xchg
das
sbb
pop
testl
jg
popa
mov
rclb
jb
das
sbb
add
mov
mov
mov
insl
mov
xchg
add
xor
push
dec
mov
ret
pop
mov
ret
mov
arpl
add
out
jb
arpl
add
stos
push
aaa
adcb
out
or
mov
mov
add
dec
bnd
addb
loope
hlt
xor
sbb
inc
add
mov
popa
sub
stos
mov
push
inc
jg
jnp
mov
dec
or
xor
mov
inc
cmp
cmc
mov
pop
jno
mov
inc
inc
mov
mov
inc
aaa
push
mov
pop
punpckldq
push
pop
cli
inc
push
mov
push
pop
lahf
fistps
stos
xor
icebp
sbb
pop
dec
add
fidivs
out
ret
push
cmp
jl
jnp
testl
adc
inc
xchg
push
adc
inc
aas
clc
sbb
ja
xlat
lcall
cltd
cmp
and
stos
or
sti
imul
cmp
insb
je
add
fnstsw
aas
jo
jae
daa
pop
jno
outsl
mov
or
xor
push
cmpsl
sub
iret
pop
push
popa
sbbb
xchg
sar
jo
push
jne
or
xor
ret
ja
sbb
lock
inc
out
dec
jae
imul
movsb
sahf
mov
xor
and
je
adc
inc
add
imul
mov
test
popl
cmp
adc
inc
sub
sbb
inc
xchg
xchg
lock
push
mov
testl
pop
stos
add
rcrb
mov
push
cmp
bound
cmp
add
pop
test
shrb
into
dec
mov
rorl
xor
jmp
je
pop
bound
push
pop
dec
and
andb
pop
mov
rcrl
inc
and
mov
pshufw
fidivrl
jb
shlb
iret
fdivs
dec
jmp
push
ret
xor
fidivl
pop
or
cltd
lea
or
aaa
inc
insb
cmp
mov
daa
pop
and
mov
jmp
lcall
jb
out
dec
lock
push
adc
scas
pop
and
mov
inc
dec
push
xchg
add
movsbl
fiadds
rcr
mov
or
jle
add
cmp
xchg
pushf
add
sbb
sbb
add
repz
insb
mov
mov
pop
mov
and
ja
xor
das
ds
das
and
jbe
sbb
lds
repz
add
pop
daa
daa
daa
push
and
int3
push
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
es
js
insb
cwtl
dec
sbb
fstpl
push
and
mov
add
mov
test
arpl
jge
shll
mov
ds
push
popw
jo
sbbl
dec
aaa
pusha
imul
push
add
inc
push
push
push
movsl
sbb
add
inc
aas
das
hlt
mov
adc
or
pop
push
pop
mov
gs
jb
fidivrs
sbbb
or
pusha
mov
mov
add
inc
xor
lahf
in
rolb
jge
sub
rclb
mov
push
aas
and
addl
rorb
mov
mov
push
int3
or
pop
jge
pop
mov
add
add
cmp
icebp
mov
or
cmpsl
push
push
adc
cmp
incl
fsubrs
es
mov
popf
sbb
push
repnz
insl
adc
int
push
and
mov
ret
jp
push
pop
adcl
popa
cmpl
sub
bound
shrb
push
es
add
mov
insb
jns
xor
xchg
and
outsl
je
mov
popa
stos
and
push
sbb
dec
cs
adc
xchg
and
xor
and
push
insl
loope
js
mov
inc
dec
inc
push
sti
int3
dec
out
and
push
push
xchg
push
add
outsl
fs
gs
ret
out
jo
jns
iret
inc
mov
push
pusha
add
in
or
push
shrb
add
or
lds
cmp
and
jecxz
je
bound
aaa
cmpb
inc
insb
scas
jbe
jl
jl
cs
imul
inc
mov
pop
xor
pop
retw
jbe
push
sahf
dec
sub
cmp
scas
sbbb
inc
outsb
pop
testb
xchg
dec
inc
xadd
sbb
inc
jae
mov
cmovo
insl
pop
jnp
adc
cmp
lahf
nop
jo
xchg
jbe
pop
pop
pavgb
mov
or
aaa
psubsb
xchg
lahf
push
movsl
or
jbe
bound
sbb
mov
mov
daa
ds
lods
ffree
add
ret
mov
in
mov
mov
lock
or
inc
inc
add
insb
int3
xchg
iret
sub
jnp
imul
movsb
movsb
push
in
and
xchg
push
pop
adc
mov
and
shl
movsb
xchg
mov
cld
add
addr16
data16
mov
add
psraw
dec
fs
add
xchg
jnp
imul
push
mov
push
lods
push
in
push
sub
pop
xor
fistl
inc
int3
mov
cmp
les
add
out
jnp
insl
sub
mov
dec
pop
leave
add
mov
add
cmove
cmp
outsl
push
movsl
pop
cmp
and
ja
pop
repnz
add
ss
mov
add
cmp
cmpsb
in
fdivs
xor
adc
pop
mov
fwait
and
sub
inc
addr16
out
dec
pushf
pop
movsb
das
insb
push
cmp
jnp
js
movsb
movsl
inc
inc
add
and
test
jb
pop
repnz
les
lock
add
adc
xchg
lock
jns
fs
inc
movsl
push
pop
pop
pop
int
inc
xchg
outsl
mov
out
decl
movsl
pop
addb
decl
jl
aam
lock
mov
jl
jbe
ds
test
cmpsb
xor
cwtl
test
fiadds
ud0
cmpsl
cmpsb
push
test
push
add
xchg
enter
aad
add
add
cmpsb
push
les
aam
and
pop
dec
add
pop
enter
dec
add
loop
mov
cmpsl
lahf
xor
bound
ljmp
mov
js
and
scas
mov
idivb
dec
push
add
push
lock
sbb
je
or
testb
das
nop
test
inc
test
nop
aaa
and
pop
add
lahf
minps
sbb
mov
pop
enter
loopne
in
pop
dec
repz
in
cld
cs
cs
in
sub
aaa
xor
push
inc
push
push
test
insb
inc
mov
xchg
lock
addr16
push
cwtl
pusha
insl
sbbl
repz
pushf
enter
xchg
mov
enter
add
adc
vpmacsdd
pop
pusha
sbb
sbb
call
mull
fs
nop
stos
mov
mov
mov
pop
repnz
enter
lock
mov
stos
lahf
dec
loopne
enter
xor
in
push
push
lahf
jl
out
sahf
outsl
lahf
lods
adcb
lods
sbbb
loopne
nop
or
inc
fcom
mov
stos
and
push
fcmovnbe
lahf
dec
lahf
ja
pop
repnz
lahf
xor
nop
and
enter
addr16
jae
rolb
aad
dec
mov
push
add
rolb
and
cmp
xchg
mov
test
iret
mov
jg
mov
fs
fnsave
mov
mov
mov
int3
loopne
fcomps
mov
jg
cmpsb
es
cmpb
push
cmpsl
jg
lahf
out
sahf
sub
je
and
enter
sub
cmp
repnz
fs
pop
repnz
nop
iret
test
or
xor
insb
mov
jl
jg
les
nop
or
cmp
adc
cs
lock
nop
out
fdivs
jg
sbb
mov
push
sub
insl
dec
das
ja
pop
enter
pop
push
pop
inc
pop
enter
jo
mov
pop
jo
pushf
enter
clc
or
orl
ds
mov
push
enter
ljmp
test
mov
test
cwtl
jae
dec
mov
cmpsb
in
cld
add
jmp
cmpsl
adc
mov
mov
or
xor
addr16
cmpsl
pop
bnd
jg
mov
mov
pop
repnz
enter
clc
add
mov
mov
enter
mov
adc
sahf
pop
mov
out
pop
pop
pop
ja
xlat
inc
mov
pushf
push
mov
out
nop
stos
jne
add
cs
lock
aas
jae
pop
insb
cmpsl
loopne
stos
clc
es
mov
push
pop
mov
stc
push
insb
xchg
cmpsl
jg
shl
jns
in
cwtl
lods
mov
mov
jmp
lcall
in
sahf
pop
in
mov
cld
mov
add
test
sub
cmp
insl
orl
dec
add
outsl
dec
push
add
or
push
mov
cmp
lods
lods
jg
cwtl
shlb
mov
cwtl
inc
and
and
xor
inc
mov
sarb
dec
lock
scas
lods
daa
test
xor
lods
sub
rorl
mov
pop
enter
add
and
sbb
adc
rorb
out
and
mov
push
mov
fsubrl
pop
add
push
pusha
inc
xchg
mov
stos
lahf
xchg
inc
ja
movsb
fsts
mov
aam
push
xor
jnp
mov
dec
call
adc
lahf
call
ds
inc
adc
lahf
rcl
xchg
push
mov
jg
inc
mov
mov
imul
ja
js
fiadds
js
enter
inc
inc
js
fiaddl
test
lahf
or
test
loopne
sahf
fdivr
or
sbb
pop
add
pop
das
fadds
adc
dec
mov
push
dec
inc
jbe
shll
xor
mov
pop
sarb
jae
push
pushf
fs
xor
fs
xor
bound
decl
test
fs
mov
rep
sub
mov
xchg
daa
movsb
lahf
mov
inc
xchg
lahf
fsub
fs
ds
hlt
add
mov
mov
mov
inc
push
push
lahf
dec
lahf
repnz
push
ja
xor
movsb
xor
jae
pop
test
pop
repnz
in
pop
nop
iret
test
and
orl
lahf
mov
outsl
insl
ja
mov
out
xchg
mov
je
les
sub
inc
pop
outsl
imul
lods
imul
adc
cs
inc
mov
insl
sbbl
mov
push
sub
inc
inc
add
iret
jo
call
and
jo
aas
mov
mov
mov
mov
nop
out
pop
mov
or
mov
dec
adc
xchg
push
adc
call
cmp
daa
fdivs
and
push
jo
cmp
mov
pop
sar
addr16
subl
decl
mov
xchg
push
adc
push
ror
mov
add
add
ja
xchg
imul
pop
test
add
mov
xchg
dec
xchg
pop
leave
xchg
inc
inc
leave
xchg
pop
leave
cmp
pop
leave
xchg
pop
sub
and
pop
leave
xchg
add
sbb
push
sbb
cmpsl
stc
cmp
cld
lret
pushf
cmp
js
in
jnp
call
leave
push
aam
jns
out
fs
insb
push
xor
cmp
out
sahf
test
mov
ds
sahf
out
push
cmp
and
sarl
or
ret
shlb
mov
add
sbb
pop
addr16
ljmp
imull
inc
or
add
les
into
xchg
cmp
test
inc
cmp
jns
add
push
sti
lock
aad
mov
push
xchg
jg
mov
and
lahf
and
ja
add
dec
xchg
dec
add
outsl
inc
aam
inc
or
sub
rol
sbbb
lds
sub
xchg
outsl
add
or
mov
mov
lock
pop
sub
fcmovb
lea
ss
adc
sub
insb
dec
jl
xchg
adcl
inc
scas
inc
sub
insb
mov
out
sbb
mov
adc
aaa
fisttps
cmp
lcall
mov
push
push
xor
sub
out
xchg
or
dec
xor
mov
mov
outsl
fbld
scas
in
loopne
or
sub
orl
repz
sub
pop
add
enter
enter
jno
mov
dec
xchg
int3
push
or
or
shll
sbb
cmp
jg
sub
xorb
sbb
ja
add
adc
ja
mov
sub
lods
fidivrs
sub
mov
and
lods
mov
andl
pop
jmp
or
shl
addb
lret
add
push
adcb
leave
mov
add
mov
es
xlat
or
adc
les
push
aaa
dec
fiaddl
inc
ror
add
daa
pop
in
mov
mov
xorl
add
cmpb
cltd
pop
and
mov
pop
lcall
mov
outsl
xchg
dec
test
jg
push
adc
jbe
inc
dec
push
mov
push
lret
ret
pop
sbb
sub
pop
jo
idivb
les
ja
int3
not
jne
scas
in
add
push
mov
push
outsl
fcmovnb
adc
cmpsb
int
push
xor
push
call
push
in
inc
push
cmpsl
push
mov
ljmp
rclb
mov
adc
mov
shl
pushf
pusha
pop
mov
or
or
decl
imulb
into
daa
mov
push
xor
xlat
or
mov
test
dec
jo
hlt
iret
and
jo
iret
push
in
pop
add
inc
jno
into
pop
pushf
into
mov
testl
and
ss
xchg
cmp
orb
push
jl
push
lcall
fadds
fs
aaa
ret
or
or
pushl
lods
pop
dec
adc
outsl
mov
add
ret
jno
dec
jo
adc
and
cs
cs
scas
mov
add
xchg
sarb
in
andb
xchg
jg
jae
add
ja
add
jg
addr16
inc
push
adc
xchg
push
xor
shll
les
add
sub
and
push
mov
push
aad
mov
packuswb
pop
lods
xchg
adc
fcom
pop
call
pop
adc
aaa
add
mov
rcll
test
xchg
push
iret
jl
xlat
sbb
xchg
or
sahf
iret
jne
or
daa
mov
out
or
daa
or
inc
push
jb
add
mov
jnp
push
xchg
pop
dec
push
inc
mov
push
cwtl
in
cmp
or
ss
outsl
ficoml
fidivs
aas
inc
or
jne
or
cmpsl
mov
or
addr16
mov
mov
dec
lcall
pop
leave
add
or
sbb
call
push
lcall
lcall
xchg
aaa
and
add
aam
push
fs
push
aad
scas
add
sbb
or
dec
xchg
add
imul
adc
dec
mov
nop
or
out
dec
scas
in
fs
or
clc
shrb
push
sub
aas
dec
pusha
stos
addr16
pop
repnz
in
inc
cmpsl
daa
sbb
and
inc
sub
movsb
sbb
testl
inc
jp
outsl
and
das
mov
call
test
xlat
push
inc
xlat
aaa
add
and
test
adcb
jo
test
repnz
pop
push
enter
mov
adc
and
sub
je
outsl
insl
shll
outsl
dec
pop
jmp
sahf
aam
daa
insb
aas
push
xchg
out
filds
xor
insl
shl
daa
jp
dec
push
dec
push
shlb
jns
cmpsl
stc
adc
xchg
out
sbb
aas
mov
ret
out
ss
int
jns
jl
ret
addr16
ds
repz
mov
jl
out
ds
rcr
imul
pop
cmpl
push
push
popa
subl
cld
mov
repz
insb
push
insl
cmp
xor
imul
xchg
mov
outsl
dec
repz
out
lahf
lret
out
jo
repz
and
lret
mull
jno
out
sahf
dec
data16
iret
repz
lea
sahf
out
push
insb
xchg
out
je
jp
leave
push
std
sarl
and
loop
jbe
out
ds
insl
stos
push
ja
jle
repz
mov
aaa
bound
les
lahf
out
jo
loope
jp
jns
out
mov
jnp
aaa
bound
int
fbstp
roll
cmp
xor
out
fists
aas
bound
lret
pushl
jg
iret
sarl
loope
xorb
lcall
jo
jns
data16
and
dec
repz
test
fidivrs
cmpsl
pop
jp
adc
xchg
pop
cmp
repz
add
jns
cmpsl
stc
sub
repz
out
aaa
mov
jmp
xor
out
mov
mov
out
lea
repz
xchg
pop
nop
repz
inc
xchg
xorb
cmp
add
inc
xchg
pop
push
out
sahf
cmpsl
stc
and
imul
fisubl
xchg
repz
out
xor
jns
out
cwtl
ds
push
cltd
out
ds
ja
pop
lcall
push
fldcw
imul
push
sahf
dec
mov
repz
xlat
pop
lahf
push
enter
jns
mov
mov
cmp
lock
out
lods
fists
mov
out
testl
xor
cmpsl
stc
xchg
cmpsb
stc
sub
push
cmp
cmpsl
stc
push
test
xor
lahf
cmpsl
stc
pop
stos
shl
dec
stos
pushf
jns
iret
repz
cli
push
lods
jnp
stc
cmp
repz
scas
pop
mov
dec
scas
sarl
je
out
and
iret
xchg
shlb
mov
cmp
test
mov
iret
sarl
in
mov
repz
jns
iret
mov
push
mov
icebp
imul
ret
mov
out
add
jge
out
mov
into
xchg
fcompl
mov
cmpsl
fnstcw
pop
ret
leave
in
cmp
xor
and
pop
jns
xchg
out
xor
leave
sub
outsl
lods
and
stc
xor
int
iret
inc
rolb
mov
cmp
data16
mov
dec
fnstenv
rorb
stc
icebp
fcoml
loopne
add
iret
int3
nopl
mov
aas
aam
jns
mov
xor
push
movsb
scas
adc
ja
push
cld
fidivrs
or
push
nop
add
pop
lret
fnstcw
push
cmp
pop
jmp
in
leave
imul
and
fsubrs
ss
sti
dec
mov
aas
mov
mov
in
movsb
xchg
aas
repz
jg
add
xchg
pop
lds
mov
push
das
mov
and
fmuls
movsb
inc
pop
pushf
dec
pop
in
mov
mov
mov
jg
dec
adc
xor
inc
loope
dec
mov
adc
jbe
fldlg2
adc
hlt
das
mov
and
xchg
stc
mov
sub
loopne
test
adc
push
mulb
jns
aas
mov
inc
ja
jg
xchg
enter
testb
ss
dec
inc
imul
daa
loopw
rcrl
push
daa
lods
xchg
test
mov
add
out
push
add
ss
dec
cld
loop
add
or
decl
mov
mov
push
push
int3
add
add
push
lahf
test
mov
lahf
xchg
pushf
dec
dec
push
pop
jecxz
mov
enter
jecxz
loop
add
push
aas
aaa
push
inc
push
loop
jbe
pop
scas
pop
cs
pop
inc
xlat
sbb
pop
dec
push
mov
pop
jo
in
cmp
movsb
movsb
loop
mov
ds
pop
shlb
add
cmpb
bound
mov
gs
fcompl
leave
mov
fs
negl
dec
push
fs
pop
insl
sarb
push
and
cmp
push
add
in
dec
ja
adc
daa
xor
loopne
data16
aas
jno
mov
daa
add
iret
ja
jmp
xchg
mov
addr16
xchg
fcmovnbe
jecxz
pushf
in
mov
adc
out
ret
aaa
push
pop
dec
cs
xorl
pop
mov
fcomps
pushf
push
pop
cwtl
xchg
and
mov
dec
ficoms
add
inc
cs
xchg
or
insb
add
xchg
mov
cwtl
je
and
lock
or
mov
mov
mov
push
movb
fldl
pop
ja
in
add
stos
mov
xchg
ret
out
dec
test
scas
cwtl
daa
inc
dec
sbb
sub
addr16
xchg
and
addr16
addr16
aas
xchg
mov
sbbb
push
push
mov
inc
imul
fsubs
rolb
jmp
mov
fs
mov
inc
in
push
pop
mov
ljmp
pop
pop
dec
mov
mov
xor
and
jg
inc
lds
test
ljmp
mov
xor
xor
pop
push
xlat
popf
mov
fdivrs
push
jns
out
pop
xchg
push
add
lods
lds
cmpsl
push
xchg
xchg
xchg
sbb
inc
call
cmp
jmp
jmp
js
xchg
pushf
jmp
add
insl
pop
add
in
repnz
adc
mov
inc
js
push
fisubl
jo
shrl
movsb
in
das
dec
cmp
fadds
pusha
mov
add
aas
ja
dec
dec
push
lods
scas
notl
sub
outsb
stos
aaa
cmp
iret
pusha
nop
dec
repnz
jl
in
push
xlat
movsb
les
xchg
pop
mov
enter
sti
push
add
imul
js
out
imull
ss
daa
and
inc
push
add
in
jne
push
cmpsl
push
push
add
mov
xchg
xchg
xchg
xchg
cltd
mov
mov
bswap
cmpsl
aam
fcmovnu
pmulhuw
pop
test
out
outsl
jb
enter
insb
pop
insb
sub
sbb
xor
push
add
push
push
popa
insb
push
or
jns
out
or
jno
or
xor
and
push
jo
iret
dec
cs
daa
lock
pushf
dec
jle
xchg
add
insl
enter
push
lock
popa
insl
sbb
jb
insb
insl
jns
test
insl
xchg
and
pushf
insl
cmpsl
insl
mov
inc
sahf
fcmovne
shrl
or
out
std
or
mov
mov
dec
mov
icebp
cmp
add
pop
nop
out
xchg
sbb
icebp
push
mov
mov
test
push
lock
aas
cmp
enter
outsb
out
repnz
inc
les
push
pop
dec
icebp
mov
daa
cs
int3
rorb
mov
inc
call
inc
xchg
frstor
push
daa
addb
dec
push
mov
test
mov
xchg
or
dec
and
adc
pop
je
adc
xor
subl
outsl
pop
in
nop
das
pop
xchg
outsl
push
daa
add
adc
cli
jns
enter
call
repz
mov
inc
hlt
xor
mov
push
daa
push
das
sbb
je
loopne
mov
mov
jo
and
daa
dec
jo
jo
jo
insl
in
jne
xorl
pop
insb
xchg
mov
mov
jo
jb
rcrl
cmc
addr16
sbb
xchg
pop
inc
adc
jno
rolb
jno
xchg
cmp
jae
cmc
sub
repnz
mov
lods
cmc
aam
and
inc
aas
sbb
cmp
sbb
or
sub
sub
movl
push
cmpsl
nop
mov
add
xchg
ja
xchg
pop
dec
jb
or
lock
sbb
or
nop
mull
jb
sub
sbb
xor
jb
mov
in
and
imull
jne
or
leave
jge
xchg
notl
add
out
dec
cmpsl
lock
xchg
mul
push
es
jbe
roll
leave
leave
in
jmp
repz
push
jae
dec
and
pop
cmp
sub
fldl
sbb
data16
addr16
lahf
fdivr
nop
adc
and
clc
fucomip
clc
repnz
mov
xor
daa
inc
into
push
and
scas
inc
stc
inc
int
pop
xor
fidivs
mov
push
test
sar
jae
mov
inc
cli
rorl
je
je
inc
pop
fwait
mov
iret
inc
addr16
jb
addl
test
test
xlat
xchg
data16
jb
jecxz
lcall
mov
sti
add
fdivr
adc
scas
insb
lods
mov
daa
sti
sub
insb
in
in
push
rolb
push
sbb
xorl
pushf
out
xlat
add
addr16
push
add
sahf
addr16
add
add
mov
xchg
cmpsb
fbstp
push
rorb
test
push
add
imul
cld
out
outsb
dec
push
cwtl
fcoml
lods
cmp
in
mov
inc
jb
jbe
std
mov
call
pop
mov
std
int3
popf
fildl
rcrb
paddusb
hlt
jns
cmp
pop
push
mov
ja
inc
sbbl
adc
shll
push
xlat
push
cltd
daa
pop
enter
mov
insb
loope
xchg
leave
cwtl
add
das
or
push
das
pop
or
addr16
js
out
movsl
call
add
dec
and
mov
dec
cs
mov
mov
pop
and
cmp
jns
inc
ss
xchg
or
inc
pop
push
mov
mov
mov
mov
jp
movups
sbb
and
or
cltd
filds
add
inc
xor
inc
jp
mov
fcmovbe
add
imul
inc
add
push
daa
push
ror
cmp
int3
mov
stc
ja
xchg
mov
out
xor
aam
inc
daa
in
add
pop
scas
test
sub
sbb
daa
cmp
fwait
sbb
lahf
jnp
addr16
lahf
test
cmp
les
ficoms
add
mov
mov
xor
test
in
mov
jl
adc
in
sbb
jl
jl
fucom
in
jl
jl
push
mov
repnz
mov
shlb
movsb
mov
push
jbe
mov
ud0
das
xchg
out
fsubs
jge
xor
cmpsb
incl
push
maxps
jns
ja
imul
fmull
ja
push
add
adc
inc
repnz
or
jmp
leave
xchg
xchg
add
pop
jle
data16
inc
das
push
addr16
adc
or
aaa
pop
push
in
mov
push
jge
in
popf
mov
iret
xchg
pop
and
add
mov
jg
outsb
mov
push
add
inc
fidivrl
push
iret
pop
in
xchg
mov
dec
outsb
iret
lret
xchg
inc
inc
inc
loopne
or
pusha
shld
mov
add
or
jae
outsb
nop
inc
sarb
aas
es
cmp
push
pop
dec
jne
push
arpl
xlat
pop
ja
mov
push
cmpsl
mov
push
lcall
pop
or
leave
inc
repnz
inc
jae
mov
ja
ja
add
adc
aas
cmp
jmp
push
pusha
imul
fldl
mov
scas
add
mov
cmp
cltd
movsb
add
sub
sbb
icebp
pop
or
or
and
mov
xchg
stc
xlat
pop
filds
adc
add
xor
sub
push
push
add
pop
data16
addl
jns
sub
cmpsb
scas
addb
outsb
jae
mov
push
movsb
dec
out
in
jecxz
jae
outsb
iret
sbbl
push
pop
pop
cmp
fbstp
add
clc
mov
ror
jg
dec
sahf
cmpsl
cmp
pop
add
xor
mov
fistps
mov
xchg
jno
out
lahf
das
stos
or
ffreep
das
lret
push
or
loope
out
jns
in
notl
add
push
adc
test
outsb
and
pop
or
sbb
outsl
addr16
addr16
in
ss
addr16
or
mov
stos
test
jb
jnp
test
test
jns
ja
outsl
sub
xor
add
add
inc
dec
test
mov
jg
sub
and
das
or
and
decl
inc
jb
loopne
mov
xchg
or
daa
adc
add
sbb
aaa
xchg
adc
insl
addr16
out
das
xor
rolb
pop
daa
pushf
out
push
jns
or
or
jo
xchg
xchg
xchg
movsl
lods
mov
mov
cmpsl
fmuls
or
jg
cli
fcomip
int3
data16
xchg
iret
or
es
adc
or
rcll
pusha
push
jg
mov
add
add
mov
add
add
ret
scas
shlb
mov
nop
cmc
xlat
std
xchg
mov
jmp
mov
mov
subps
cmp
testl
insl
xchg
out
popf
xchg
xchg
mov
push
add
mov
rol
add
iret
push
in
or
adcl
mov
push
mov
add
add
adc
or
daa
add
cmpsb
cmp
mov
jg
scas
pop
scas
jb
pop
enter
aaa
jbe
bound
mov
jb
inc
fwait
adc
sub
leave
leave
add
aas
loopne
push
mov
fldl
and
out
packuswb
xchg
ja
xchg
fildl
rcrb
xchg
lods
add
ja
ja
mov
inc
adc
mov
mov
iret
sub
iret
xor
add
dec
and
mov
jg
pop
jl
repz
mov
add
iret
leave
pushf
movsb
or
or
iret
repz
cmp
leave
repz
hlt
adc
repz
mov
adc
daa
iret
push
adc
mov
xchg
lock
push
aas
ja
cmp
aaa
orb
dec
sahf
add
push
fcoml
mov
shlb
push
fists
outsl
and
or
inc
lea
pop
xchg
xchg
cmp
jge
add
jb
aam
lea
dec
cmpsb
add
adc
scas
mov
scas
pop
cmp
push
call
js
daa
mov
mov
outsb
fnstsw
lods
lgs
nop
mov
loopne
call
jo
xchg
les
cmp
push
add
and
movntps
cmp
lret
or
inc
or
ja
dec
or
packssdw
sbb
cmovle
inc
sbb
insl
inc
adc
sbb
outsb
inc
aas
adc
jno
repnz
add
pop
or
xchg
inc
or
push
test
adc
cmp
in
adc
outsl
jecxz
jne
adc
dec
jb
pop
mov
xchg
sbb
mov
xlat
fisttpll
stc
cmc
inc
sbb
pop
out
sub
in
pop
dec
nop
push
nop
in
stos
in
xchg
cmp
nop
mov
ret
nop
dec
dec
dec
inc
fsubrp
decb
test
jns
sbb
add
fidivs
xchg
or
jmp
jb
add
rcll
inc
dec
mov
movsb
sbb
mov
sub
jbe
popf
cmpsl
and
adc
and
cmp
in
and
cmp
dec
rolb
push
leave
int
das
in
outsl
jns
das
xlat
decl
testl
xchg
pop
pop
sbb
xchg
lahf
vmread
jb
daa
pop
pop
xchg
jp
ljmp
fisubl
bound
popf
fmull
xsaveopt
sahf
xchg
mov
and
mov
pop
ja
das
or
pop
push
daa
and
sbb
outsl
sub
xor
outsb
daa
pop
insl
in
pop
push
and
pop
mov
stos
mov
mov
fsubl
cmp
mov
xchg
decb
fmull
sbb
int
push
lahf
xchg
movl
sbb
iret
add
call
sbb
sbb
inc
leave
xlat
fildll
scas
jbe
jecxz
sti
fbstp
sub
fiadds
scas
test
inc
das
sbb
pop
xchg
arpl
xchg
daa
or
xchg
iret
add
or
pop
mov
jbe
jns
rorl
fcmovnb
or
cmp
repnz
sbb
xchg
enter
outsl
xchg
xchg
mov
ret
pop
xchg
stos
inc
fisttps
pop
sbb
mov
leave
inc
test
pusha
test
scas
hlt
lahf
push
xchg
nop
out
sbb
add
cmp
push
sub
pushf
dec
and
out
insb
push
mov
popf
mov
cmp
testl
adc
push
jg
xchg
frstpm(287
add
dec
outsb
aaa
pop
pop
pop
inc
sqrtps
lods
pop
xor
pop
ds
push
add
imul
inc
shr
test
sub
daa
nop
aas
dec
out
add
xchg
and
jg
sarb
fcmovnu
outsb
aas
fbld
stos
pop
sbb
xchg
cmp
ja
push
mov
test
mov
and
lods
mov
test
lret
xchg
dec
enter
ja
cwtl
out
rorb
ja
cwtl
cmp
push
popa
cwtl
ja
int3
and
cwtl
subb
push
pusha
imul
mov
mov
dec
ja
lock
inc
repnz
xor
fmull
sbb
and
jbe
cmpsb
jecxz
cltd
ja
cmpsl
outsl
push
dec
push
mov
xlat
and
out
jbe
out
xchg
setp
mov
xchg
mov
ja
scas
popf
std
insl
pop
push
ja
setp
pop
mov
jmp
jl
daa
daa
inc
push
xchg
and
mov
mov
leave
leave
add
out
xchg
xlat
iret
dec
mov
mul
pop
sldt
in
bnd
cmp
fisttpl
aaa
push
push
or
and
jns
cmpsl
push
das
fwait
xchg
int
movhlps
and
fwait
in
add
pslld
fisttpl
cwtl
fidivrl
test
mov
cpuid
mov
or
and
sbb
ss
pushf
hlt
out
push
pushf
pushf
ja
xchg
dec
fidivrs
mov
xchg
ss
repz
add
push
xchg
xchg
push
pop
mov
repnz
push
mov
dec
and
or
and
sub
cmpsl
addr16
sbb
outsl
xor
outsl
add
popfw
fildl
and
xchg
mov
popf
popf
out
in
outsb
add
xor
sahf
cmp
add
or
inc
dec
idivl
push
or
pop
int
push
jno
sub
jg
mov
frstor
xchg
setns
dec
ds
pop
cs
shrl
cltd
int3
test
sahf
fwait
mov
lahf
push
add
push
iret
pop
lahf
cmpsl
push
mov
fucomi
and
xchg
dec
push
add
cmpsl
bound
daa
mov
add
test
insl
daa
popf
xchg
xor
jecxz
outsb
aaa
fmul
jmp
repz
sti
pop
outsb
mov
push
add
push
adc
mov
fisubrs
fcmove
xlat
inc
ja
mov
fwait
mov
xchg
iret
xor
xchg
fisttpll
mov
mov
mov
leave
leave
add
pop
fsub
mov
inc
jb
pop
mov
in
pop
pop
daa
mov
jbe
and
jb
jecxz
mov
jb
daa
iret
jae
push
orb
pusha
adc
xchg
sub
mov
jmp
das
fadds
outsb
daa
daa
loopne
xchg
clc
sub
leave
sbb
mov
in
mov
dec
push
cmp
ja
andl
in
movsl
adc
mov
out
daa
xlat
aaa
sbb
ja
into
cmp
cli
aas
mov
jo
mov
mov
xor
push
cmp
xchg
add
push
outsl
repz
cmp
push
fiadds
pop
or
xlat
lahf
lea
xchg
or
fisubrl
push
add
ja
aas
jns
daa
mov
pmulhw
xchg
leave
insl
mulb
adc
in
leave
leave
sub
movsb
cmpsl
push
test
popf
pop
and
imul
mov
mov
sub
outsb
mov
hlt
movsb
pop
jo
inc
sarb
or
jb
movsl
scas
and
cwtl
push
movsl
pusha
push
aam
ja
ja
cmp
mov
lcall
jg
cmpxchg
aas
psrlw
jns
jns
out
repnz
push
or
jb
repnz
pop
and
cmp
adc
adc
aaa
repnz
push
adc
in
stc
lock
pop
dec
mov
mov
into
cmpsb
jne
dec
and
cmpsb
or
xchg
rcrl
add
adc
xchg
push
je
in
cmpsl
cmpsl
xlat
sub
jp
push
cmpsl
fistl
cmpsb
pushl
jb
outsb
mov
les
pop
pop
xchg
push
push
dec
dec
dec
in
clc
das
test
in
jbe
inc
cmp
xlat
aas
sbb
or
shll
stos
aas
push
add
int3
cmp
das
mov
test
test
xor
js
test
and
push
jg
xor
ja
push
leave
repz
std
lahf
test
push
add
iret
repz
lret
or
daa
iret
repz
fisttpl
jecxz
outsl
in
outsb
psllq
or
lahf
xchg
pop
outsb
sub
xchg
and
push
test
aaa
jb
enter
test
sub
dec
sahf
push
stos
or
jo
mov
test
lock
xchg
mull
push
cmp
and
inc
outsl
and
or
add
cmpsl
mov
setb
or
orb
stos
das
dec
sahf
ja
cs
push
fcomps
xchg
iret
lret
stos
andl
or
leave
out
stos
xor
stos
pop
fs
bound
fisubrs
stos
sysret
sub
mov
insb
je
jl
test
xchg
mov
cmpsb
or
mov
stos
pushl
dec
es
loop
pslld
dec
jb
das
fxsave
xor
lods
addr16
fnstsw
mov
cmp
lds
lahf
inc
lods
dec
lods
xlat
or
jo
call
das
pop
push
mov
sbb
iret
xor
ss
out
pop
stc
lods
jns
out
sbb
negl
cmp
or
sahf
out
or
pop
or
out
addr16
jge
out
sahf
out
setae
sahf
sahf
out
sahf
adc
jns
out
adc
adc
sahf
out
pop
jmp
test
xor
sbb
scas
sbb
leave
leave
leave
leave
sbb
push
adc
adc
adc
leave
leave
leave
leave
adc
push
or
sub
ss
aas
add
scas
and
out
sbb
push
inc
rclb
ja
cmp
les
xchg
push
daa
aam
out
pushf
sbb
jp
lahf
je
movsb
mov
lcall
aaa
aas
daa
jge
mov
inc
mov
fstl
mov
push
daa
push
sub
scas
scas
outsl
inc
leave
jecxz
mov
scas
mov
push
ja
push
add
cmp
repz
add
filds
into
inc
scas
or
mov
push
pusha
outsl
scas
addr16
cmp
addr16
outsb
mov
loopne
cmp
out
das
xchg
dec
movsb
or
leave
mov
pushl
daa
daa
pop
cmp
dec
iret
leave
int
aas
xchg
pop
add
xchg
cmp
mov
punpcklbw
fucomi
in
mov
mov
pop
sub
cmc
ss
daa
std
mov
add
repz
adc
and
push
pop
sub
out
fmulp
cmp
or
push
push
pop
nop
insb
scas
mov
jns
jns
xorb
mov
xor
cmp
jo
lret
rcr
fisttpl
jecxz
cmpsl
fldt
iret
jmp
sysret
repz
lock
add
mov
cs
mov
sahf
faddl
cmovbe
divb
mov
pop
cmp
mov
xchg
addl
insb
sub
xchg
mov
pop
xchg
int3
les
lods
movsb
nop
push
decb
cmp
dec
mov
mov
out
and
ucomiss
add
nop
mov
mov
cmp
call
add
mov
fiaddl
mov
pop
adc
ret
pop
inc
jecxz
cmp
movl
pop
or
adc
mov
mov
inc
cmp
pop
data16
pop
insl
sbb
aam
xchg
xchg
setns
mov
xor
mov
push
ret
pop
add
leave
jae
lret
rorl
in
cwtl
mov
jecxz
por
sbb
push
mov
pop
xchg
ud0
mov
cmp
xchg
dec
dec
inc
clc
fs
inc
dec
jge
call
les
aam
filds
mov
jg
push
shlb
xlat
mov
or
jg
and
inc
lahf
enter
incb
push
test
ds
mov
push
cmovle
dec
outsb
fisttps
xlat
movd
dec
dec
dec
orb
in
movsb
lods
mov
jns
lods
push
scas
lock
fnstenv
loope
jmp
fwait
sub
mov
adc
sbb
dec
sahf
pop
js
mov
add
ret
mov
push
scas
push
pop
pop
fnsave
repnz
mov
pop
syscall
bnd
in
mov
invd
mov
dec
sahf
ja
push
or
in
aas
movzwl
leave
xchg
inc
ljmp
rclb
mov
cmpsb
adc
mov
inc
dec
inc
xchg
jmp
push
addps
inc
shrb
inc
test
sahf
inc
jae
jbe
ja
ja
mov
leave
psubq
pop
jb
pop
es
jns
leave
inc
bound
inc
cmp
and
mov
mov
outsl
scas
xchg
pusha
inc
mov
pop
daa
loope
cmp
cmp
push
add
xchg
stc
mov
invlpg
pop
out
in
add
add
out
sahf
adc
repz
je
or
sub
push
das
xchg
addr16
mov
shr
xchg
or
out
ja
jle
mov
in
inc
xchg
test
inc
shrb
mov
mov
push
outsb
push
shlb
add
xchg
inc
incl
leave
addl
inc
mov
fcomp
es
ucomiss
jbe
cmp
inc
mov
xchg
js
js
push
sahf
pop
dec
pop
scas
mov
pushl
cs
mov
pop
movd
iret
repz
adc
jle
xchg
cmp
movups
mov
pop
into
fdivp
mov
nopl
out
jmp
pop
decb
and
xor
push
mov
push
mov
dec
es
es
cmp
repz
sub
sub
repz
sub
push
sub
cmp
data16
outsb
jbe
jle
outsl
movd
dec
sbb
cvtpi2ps
mov
cmp
jne
push
fisttpll
push
push
pop
jb
add
push
ja
mov
daa
cmp
mov
inc
cmp
add
push
dec
roll
dec
push
in
movl
dec
pop
lahf
inc
mov
out
mov
mov
mov
cmp
cwtl
dec
mov
out
jo
cmovno
cld
fists
dec
outsl
or
test
das
clc
push
push
shl
xchg
or
add
fucom
jns
add
mov
leave
repz
cmp
inc
dec
dec
sahf
out
outsb
rsqrtps
sahf
out
jp
jns
out
adc
jns
adc
adc
sahf
out
pop
loope
jmp
repz
out
sbb
sbb
mov
sbb
sbb
iret
repz
das
and
and
cmp
repz
and
pop
iret
repz
and
and
iret
repz
mov
xchg
sub
cmp
repz
sub
in
jbe
aas
ret
pop
lret
jg
lahf
fldt
mov
fucomip
stc
pop
add
out
fiadds
or
and
sahf
out
sahf
sbb
and
sub
jns
out
xor
cmp
inc
out
sahf
out
dec
pop
push
push
sahf
out
sahf
pop
adc
pop
push
jecxz
jge
push
mov
nop
shrb
pop
pop
cwtl
rolb
and
in
enter
inc
shlb
and
rol
mov
iret
repz
pop
push
or
das
repnz
push
or
iret
repz
push
or
and
lock
adc
shl
iret
repz
adc
repz
movsb
adc
cmp
repz
sbb
sbb
repz
repz
sbb
sbb
xchg
pop
iret
std
sbb
push
pop
outsb
daa
iret
repz
sub
into
fimuls
ret
ret
ret
ret
int
iret
imul
jbe
sbb
setle
jns
push
xchg
adc
adc
es
adc
lods
ret
jns
push
adc
out
int3
push
aam
fsub
jns
out
in
in
or
loop
sahf
hlt
or
or
or
iret
repz
push
and
sub
xor
aas
cmp
inc
das
dec
ret
ja
mov
test
jge
test
lea
push
ror
jle
xchg
push
add
dec
sahf
ja
push
or
and
lock
in
xor
dec
dec
pinsrw
cs
daa
pop
push
add
add
ja
daa
inc
push
add
popf
fmull
pop
pusha
das
push
cmp
mov
setnp
cmpsb
mov
dec
outsb
daa
iret
adc
dec
dec
dec
fsub
in
hlt
cmp
dec
dec
cld
add
or
inc
dec
fdivp
pop
push
and
xor
lds
enter
lds
arpl
in
dec
outsb
pop
jnp
add
out
pop
popf
movsl
shrd
dec
mov
nopl
or
in
in
daa
lds
push
int
dec
js
jns
fstpl
adc
in
pmaddwd
push
and
push
fcoml
jns
xchg
or
outsl
mov
adc
daa
les
in
mov
inc
push
dec
push
push
ja
subl
xchg
pushf
push
add
iret
add
add
repz
sahf
pop
loop
push
or
or
mov
push
push
or
sbb
pmaxsw
pop
cmp
in
jbe
pop
pop
adc
iret
leave
repz
jl
xchg
leave
repz
xchg
sbb
pushf
cmp
mov
cmp
aam
fucomip
and
inc
lret
cmc
sarb
int
push
mov
aaa
cmp
cmp
inc
dec
pop
arpl
adc
cmp
xchg
push
pushf
mov
mov
mov
enter
sahf
out
pop
push
int
push
push
loope
cmp
jecxz
jmp
cmpsl
mov
std
daa
mov
sahf
pop
leave
scas
movhps
daa
daa
daa
daa
daa
das
aaa
aas
out
repnz
inc
dec
pop
push
in
dec
sahf
adc
xchg
out
fisttpll
sbb
ja
jg
ret
repz
sbb
sbb
push
leave
addr16
enter
bswap
leave
leave
dec
int3
aam
out
loope
leave
out
idiv
leave
aas
push
lret
inc
mov
lret
das
and
xor
jns
lahf
or
jmp
or
in
add
aas
dec
cs
push
pop
in
stos
inc
out
pop
inc
pop
mov
dec
into
inc
iret
out
adc
rclb
rcrb
daa
loopne
aam
sub
mov
mov
rorb
sbb
lahf
lahf
aas
aaa
push
mov
xor
aas
mov
cmp
aas
fldl
sahf
addr16
lret
push
pop
sbb
cmp
mov
pop
sub
push
or
mov
prefetch
pop
mov
in
jbe
pop
jb
jge
mov
outsb
setle
adc
adc
repz
ror
fpatan
mov
mov
sbb
repz
aad
loop
out
cmp
mov
pop
int
adc
jg
cmp
sbb
mov
mov
paddb
jg
sub
sahf
jnp
push
sub
sub
push
sub
jns
cs
dec
xor
out
xor
push
repz
mov
or
sahf
cmpsb
repnz
cwtl
aaa
mov
notl
aas
pop
push
cmp
jns
rep
cmp
mov
dec
sahf
aas
lea
cmp
repz
mov
daa
iret
repz
jmp
imul
movsl
adc
dec
add
outsl
push
add
pop
into
pop
mov
test
es
pop
inc
ja
inc
call
adc
dec
into
mov
mov
push
add
add
addl
pop
cltd
xchg
sbb
scas
mov
out
dec
outsb
bswap
aam
loope
out
sahf
push
out
psubq
popf
mov
iret
adc
adc
and
push
adc
adc
iret
cmp
sbb
jp
repz
fcompl
xchg
mov
push
and
int
and
in
fsub
out
iret
call
dec
pop
daa
shrb
andl
cmp
pop
in
daa
mov
ja
je
add
repz
mov
rorl
daa
iret
or
xlat
or
iret
repz
or
add
rcll
bndstx
adc
sahf
xlat
dec
sahf
adc
unpckhps
cmp
jns
out
inc
pop
push
sbb
cmp
cmp
sbb
jle
dec
sahf
ja
push
sbb
sarb
jnp
stos
and
mov
push
shrb
out
lret
outsl
loope
cmp
repz
in
sub
sub
insl
in
rorb
cs
pop
cmp
cmp
fbstp
fcomps
push
push
and
adc
add
pop
push
add
test
rcrb
ret
aas
lret
jg
dec
ds
fcompl
pop
out
popf
mov
add
adc
or
add
rcl
cmp
mov
pop
sysret
popa
or
ja
insb
ja
or
out
or
or
in
mov
mov
mov
rcr
adc
enter
jmp
aam
repz
push
push
sbb
sbb
repz
leave
xor
sbb
sbb
push
push
pop
pop
push
rcr
ja
adc
aam
and
adc
ficomps
add
sahf
testb
push
push
inc
and
out
jb
mov
or
sub
xlat
lahf
cld
xor
fucomp
push
pop
push
scas
aam
mov
repz
push
or
repz
inc
or
pop
or
iret
repz
or
sahf
out
mov
adc
sahf
out
scas
adc
xchg
rcrl
push
fsub
outsl
mov
aad
or
adc
int
and
sub
nop
pop
stc
pop
jp
pop
out
add
in
vmwrite
xor
pop
xchg
lahf
push
pop
cmp
leave
cmpsl
wbinvd
scas
mov
out
daa
iret
or
mov
xlat
loop
in
pmaddwd
outsl
xchg
iret
adc
add
adc
adc
push
sbb
repz
xor
pop
cmp
inc
sbb
iret
repz
sbb
pop
push
push
out
sahf
out
pop
outsb
and
iret
enter
jle
and
cmpsl
cmpsl
xlat
mov
mov
js
pmullw
loopne
pop
ret
psadbw
cmp
jnp
fmuls
push
or
pop
or
mov
or
femms
jns
out
inc
cmovle
pop
jns
xchg
out
outsl
adc
fnsave
test
nop
pop
pfadd
out
daa
sbb
fwait
sbb
jns
sbb
sbb
cmp
push
pop
fucomip
and
mov
das
sahf
out
fimuls
push
and
and
sbb
dec
sub
aaa
cmovb
push
inc
and
dec
cmpsb
in
pushl
in
jb
bound
bound
jb
fldenv
fnstcw
pop
faddl
das
repz
mov
dec
push
fidivl
insl
and
pop
syscall
jns
fcmovne
inc
dec
pop
pop
or
je
out
outsb
syscall
or
daa
iret
repz
test
mov
adc
adc
jns
call
jae
fsubp
dec
fistl
sbb
popa
insb
out
daa
iret
sbb
cs
out
dec
sahf
sbb
sti
or
and
or
dec
adc
pop
cmp
iret
xor
and
xor
repz
daa
dec
sub
mov
outsb
pop
das
sub
jns
leave
repz
sbbb
movhps
repz
sahf
out
cwtl
xor
scas
push
ss
sahf
fcmovne
mov
sahf
out
ss
or
adc
pop
push
cmp
sub
jecxz
repnz
arpl
fnstsw
imul
scas
das
fsubrp
xchg
adc
push
das
pop
push
push
out
cmp
jne
orb
movsb
pop
pop
sahf
or
mov
ud1
les
iret
adc
outsb
xchg
fucomp
fcmovu
pop
lock
adc
fisubrs
adc
push
push
pop
outsb
daa
iret
repz
xor
cmovl
pushf
pushf
fcompl
push
outsl
push
jns
fcmovne
jp
seto
fwait
cmp
xchg
out
ljmp
pusha
repnz
iret
repz
sub
sub
sub
int
daa
nop
sub
das
cmpsb
cs
repz
das
mov
out
jns
fnsave
call
aaa
push
xor
bswap
leave
leave
leave
outsl
jp
cmp
jb
repz
ud2
loopne
add
lahf
inc
dec
gs
loopne
imul
lsl
xchg
loopne
add
pop
dec
push
or
mov
fistpll
lgs
insl
lods
mov
setg
int3
pop
das
int3
pop
mov
mov
mov
inc
and
jecxz
int3
inc
pop
es
and
push
mov
incb
adc
jae
cmpsl
iret
dec
push
add
add
movsb
add
adc
push
and
dec
add
enter
inc
mov
cmp
rclb
inc
push
sbb
test
xor
mov
push
mov
les
or
movsl
xorl
iret
rep
femms
pop
or
or
outsb
daa
or
or
mov
daa
in
jb
adc
and
in
in
push
addr16
das
push
xorps
mov
imull
push
and
dec
sahf
out
sbb
push
pop
sbbb
cmpb
test
cmp
pop
xchg
sub
jbe
fbld
cmp
fidivs
pop
sbb
mov
push
daa
cs
or
cs
inc
inc
pusha
aaa
pop
enter
aaa
cmpsl
and
pop
mov
sbb
fiaddl
adc
add
add
popa
add
sbb
call
adcb
pop
daa
test
test
jbe
xchg
xchg
das
clc
push
add
movsb
add
pop
stc
enter
pop
movsl
sbbl
mov
fisubl
add
cltd
cmovo
pushl
mov
sbb
in
call
mov
push
add
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
leave
mov
and
jns
addr16
mov
jns
jl
insb
fs
dec
jns
out
inc
cmp
sub
jns
out
and
sbb
lahf
out
sahf
adc
or
add
add
add
push
aam
int3
repz
repz
cmp
cwtl
mov
ja
mov
add
repz
inc
mov
xor
stc
cmp
into
adc
lock
int3
jns
out
mov
out
jns
out
mov
cmp
repz
pop
dec
xor
xor
ja
sbb
push
add
add
imul
test
gs
jns
xchg
push
insb
push
pop
lahf
and
add
inc
and
add
jo
call
popf
int
adc
cwtl
pop
mov
in
mov
adc
push
pusha
mov
jnp
idivl
sbb
mov
aad
sub
xchg
andb
call
push
mov
push
inc
jg
lcall
pop
pop
scas
loopne
pop
and
inc
sgdtl
push
adc
mov
sbb
dec
xor
add
mov
add
add
fadd
xor
out
adc
add
add
pop
and
adc
inc
insl
iret
xchg
xchg
xor
pop
cs
rcr
inc
mov
jg
insb
pop
fadds
pop
pop
ds
ljmp
add
xchg
es
or
inc
sbb
cmp
inc
push
pop
sahf
out
pop
push
pusha
sbb
and
out
fdivp
mov
out
idivl
inc
push
pop
cs
mov
das
push
or
mov
push
adc
dec
out
iret
repz
adc
sub
sahf
out
sahf
and
sbb
adc
jns
out
or
or
loopne
int
and
adc
inc
out
clc
shll
pop
imul
daa
xor
pop
adcl
outsl
inc
push
jp
sbbl
ret
cmp
pop
iret
repz
js
mov
repz
mov
jnp
xor
dec
insl
add
push
pop
js
out
ja
mov
repnz
fidivs
pop
dec
das
push
dec
insb
dec
push
daa
or
pop
mov
add
add
pop
repnz
pushf
or
ret
mov
adc
xchg
cwtl
push
and
jg
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
in
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
jmp
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
ljmp
adc
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
cmp
pop
cmpsb
add
push
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
mov
add
and
inc
add
int3
fnstsw
add
aas
jno
or
mov
pop
fs
dec
lea
outsb
adc
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
ljmp
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
lcall
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
ljmp
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
sar
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
inc
xchg
push
pop
or
mov
jecxz
ljmp
es
les
jne
fldt
cmp
lock
pushl
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
out
xchg
pop
mov
sub
dec
in
ss
push
scas
into
imul
inc
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
sub
std
outsl
pop
ficomps
frstor
push
das
adc
mov
out
in
mov
add
inc
je
inc
call
mov
inc
push
dec
inc
pop
inc
jbe
push
jns
arpl
pop
insb
sti
outsl
arpl
je
xchg
jg
je
jo
insb
imul
lea
sub
dec
inc
lret
ljmp
xor
mov
mov
insb
testl
jg
inc
dec
inc
jo
inc
popa
push
adc
addr16
or
gs
outsl
leave
lds
mov
add
inc
xchg
inc
sub
adcl
cmp
dec
pusha
out
push
lock
cmp
xor
push
or
scas
notb
adc
push
orb
adcb
int3
sahf
jo
jb
push
inc
insl
xor
fadds
test
add
outsb
inc
gs
adc
and
je
and
les
insb
in
fwait
shrb
jae
outsl
push
dec
pop
mov
push
push
xchg
cmpsb
sub
ficoml
dec
dec
add
fcomps
das
or
in
and
das
push
fs
dec
imul
pusha
sub
dec
xchg
lea
or
dec
inc
dec
daa
call
dec
jae
imul
xor
inc
mov
clc
sub
inc
jns
dec
lahf
loopne
dec
push
jbe
push
push
cmp
data16
jns
xor
lods
dec
jp
push
mov
mov
jns
in
inc
les
sbb
pop
std
push
add
dec
push
dec
dec
lds
jae
sbb
jbe
dec
test
push
and
xor
jecxz
int
mov
dec
iret
add
dec
popa
jne
push
adc
dec
dec
rol
or
xlat
push
xchg
sbbb
add
pop
push
add
inc
inc
ret
add
inc
xchg
push
push
push
js
cli
dec
push
jo
mov
mov
mov
mov
addr16
add
dec
idivl
inc
int
push
notl
xchg
daa
shrl
ds
popa
test
sbb
lds
das
push
push
add
or
push
clc
jp
xor
jne
push
adc
jg
imul
push
xacquire
push
inc
arpl
push
sub
cmpsl
fimuls
mov
pusha
out
push
sbb
jg
inc
mov
sub
bound
pop
xchg
jp
clc
add
mov
data16
adc
js
shll
or
sbb
mov
mov
ja
fs
das
ja
mov
or
arpl
fsubrs
and
orb
loopne
icebp
push
scas
std
stos
lret
cmpsl
push
dec
mov
add
scas
xlat
sub
mov
lahf
pop
and
pusha
push
mov
mov
sub
addb
pop
pop
push
sub
or
aas
call
push
adc
lahf
mov
and
xor
push
push
inc
xchg
mov
inc
daa
addl
xchg
js
push
and
cmpsl
test
arpl
arpl
push
insl
les
imul
dec
push
pop
push
jne
les
or
adc
fcom
add
mov
push
outsl
addr16
aam
pop
xor
inc
iret
sub
insl
push
pop
les
repz
xor
addr16
and
out
shrb
lahf
dec
repz
push
push
sub
clc
sahf
fdivrs
nop
js
inc
je
out
sub
popf
faddl
cld
xlat
out
jns
cmp
add
inc
loopne,pt
jns
pop
push
and
lcall
pop
ja
popa
push
out
mov
les
hlt
push
pushl
xchg
fs
xor
fdivrl
jmp
rclb
mov
incl
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
call
aam
movl
imul
std
in
leave
mov
add
insb
push
arpl
jmp
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
dec
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
insb
loope
lcall
movsl
mov
sub
mov
decl
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
popa
outsb
test
xchg
sbb
push
sub
call
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
inc
hlt
or
fnstenv
adc
mov
mov
bound
ficoml
repz
mov
aam
pop
popa
mov
into
pop
cmp
loop
pushl
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
call
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
xchg
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
mov
orl
mov
in
mov
mov
add
lcall
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
test
push
or
push
in
decl
xchg
daa
scas
add
mov
pushl
xchg
shlb
add
inc
push
imul
xorb
sbb
mov
enter
loopne
rorl
int3
dec
frstor
fistpll
decl
aad
mov
call
xchg
shll
push
repnz
addr16
jmp
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
ljmp
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
sar
pushl
sbb
ret
es
pushf
mov
insl
add
ss
lcall
pop
jb
push
mov
dec
mov
loop
sub
or
mov
call
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
lcall
pop
es
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
decl
adc
sahf
gs
clc
sar
imul
push
js
or
call
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fcos
jmp
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
incl
sbb
xchg
sub
aaa
mov
or
sbb
pusha
jno
ja
out
add
arpl
and
mov
ds
fdivs
jne
loopne
inc
add
imul
icebp
xchg
testb
jne
aam
movsl
fisubrl
cmpsl
inc
fstl
inc
js
inc
insl
bound
test
add
xor
push
stos
inc
inc
inc
inc
js
rorl
cmp
dec
call
jge
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
std
mov
std
cmp
arpl
or
xor
bound
pop
xor
popa
push
pop
mov
mov
test
fs
icebp
dec
inc
mov
xor
inc
pusha
cmp
add
bound
es
dec
mov
addps
es
push
ret
daa
fs
inc
rorl
ss
jbe
sbb
or
inc
aam
test
js
fstps
jle
inc
jo
nop
fadds
cld
js
js
inc
cs
aaa
inc
and
xor
dec
fstl
push
rcrb
dec
insb
adc
adc
aaa
je
aaa
push
inc
push
mov
add
jp
add
mov
pop
cltd
and
jae
popa
inc
hlt
adc
shrl
push
mov
inc
mov
sbb
inc
pop
sub
fisubl
jae
inc
inc
inc
mov
testw
ds
and
mov
mov
dec
dec
add
mov
and
push
fistpll
sbb
ja
outsb
jne
mov
or
popa
mov
dec
jge
insl
imulb
adc
arpl
sub
xor
addr16
push
xchg
into
pop
jo
frstor
adc
imull
push
add
sbb
cmc
cltd
dec
out
imul
fidivs
adcb
subb
lcall
push
movsb
jo
push
mov
ss
xlat
lea
nop
scas
mov
shrb
mov
inc
and
addr16
dec
popa
jo
ds
push
dec
add
aas
push
outsl
outsl
test
mov
pop
out
push
jno
loop
push
adc
stos
lds
xchg
pusha
jb
in
nop
test
pop
cmp
push
or
arpl
lcall
mov
jo
aam
and
xchg
pop
mov
clc
push
outsl
insb
jns
das
ljmp
popa
jb
je
add
sub
nop
pop
stos
dec
mov
dec
call
and
bound
ret
divl
rorb
lods
cmpsb
xor
outsl
pusha
ja
add
mov
mov
cmp
inc
add
rolb
sub
pusha
sbb
jno
adc
dec
jl
out
fdivs
dec
scas
imul
divb
sub
mov
lds
shll
pop
inc
push
outsl
aaa
inc
aaa
mov
sbb
loop
aaa
push
dec
mov
add
shlb
daa
mov
aas
pop
inc
and
mov
add
cwtl
push
mov
push
add
ljmp
cmpl
rcll
xor
mov
sub
int
push
repz
and
jno
inc
mov
inc
dec
sub
dec
pushf
in
scas
fs
aas
loopne
or
fisttps
lea
sub
jnp
decl
and
popa
les
cwtl
in
mov
into
mov
sub
jae
out
ror
add
fs
incl
movsb
cmpsb
cltd
fwait
jnp
pop
nop
dec
cmp
pop
push
das
test
push
int
mov
loop
aas
arpl
ljmp
test
scas
pusha
clc
dec
data16
xor
mov
lea
pop
pushl
mov
mov
and
mov
xorb
push
dec
pop
ss
out
add
movsb
incl
inc
outsl
cltd
mov
sahf
rol
or
xorl
mov
stc
inc
add
comiss
es
lcall
hlt
lds
mov
stc
add
mov
je
shlb
xchg
mov
imull
sti
and
mov
xlat
xchg
rclb
call
out
mov
movsb
or
out
and
lret
lahf
jmp
jne
jmp
sbb
sahf
and
cmp
adc
xchg
in
bound
jle
mov
sarw
mov
test
dec
test
jg
insb
rcrl
pop
cmp
jmp
jne
sbb
inc
jbe
jnp
pop
fs
dec
cmp
inc
xor
jns
sbb
mov
inc
outsb
into
in
dec
js
jb
xchg
adc
es
fdiv
sbb
push
xor
cmc
aad
xor
loop
ret
stc
mov
mov
add
mov
dec
xchg
popf
inc
xor
lds
icebp
mov
ret
mov
fadds
loopne
xor
lcall
push
fstpl
xchg
popf
mov
mov
movsb
mov
addr16
sar
decl
push
les
and
hlt
loope
das
fistpll
jbe
mov
js
pop
aam
inc
and
jae
clc
mov
and
jg
push
cmp
jne
xchg
inc
pop
gs
imul
cmp
xchg
loop
adc
mov
push
cmp
jl
data16
dec
adc
jb
sub
movsl
sub
lcall
into
std
add
fwait
btr
cmpsb
mov
sbb
out
sbb
mov
mov
call
iret
mov
sbb
mov
repz
mov
xchg
cmc
in
cmp
test
lcall
sbb
xchg
xchg
adc
jl
test
decl
push
pop
daa
jg
jmp
sbb
inc
pushf
adc
mov
icebp
mov
jecxz
push
pop
popa
xchg
shlb
inc
jmp
mov
outsl
lods
into
xchg
dec
daa
cmp
sti
mov
mov
add
add
aaa
lret
add
or
mov
pop
outsb
push
incl
pop
subl
mov
loopne
test
pop
dec
sahf
sub
popf
xor
sbb
or
mov
jge
call
nop
sub
mov
js
dec
sarl
cmp
loope
addb
fbstp
aas
mov
mov
jmp
xor
divl
sbb
pop
int3
lods
cmpsb
insb
and
aam
xchg
inc
pushl
imul
shrb
and
cld
daa
xor
lcall
mov
loopne
add
shll
out
subl
sub
jmp
mov
push
stc
mov
stos
push
lret
jbe
jns
mov
xchg
sub
mov
jae
pop
ljmp
lods
and
or
mov
mov
pop
shll
std
inc
mov
jl
shlb
jae
and
insb
es
and
mov
jge
ljmp
mov
shrl
std
into
mov
rorl
dec
jp
rorl
lcall
js
and
in
or
dec
in
js
mov
xchg
lods
sbb
jmp
jb
push
in
jge
dec
pop
outsb
inc
mov
push
or
add
mov
ret
hlt
aad
push
js
call
cmp
ljmp
movlps
fsubl
fcompl
jnp
movsl
and
lcall
cmp
aaa
loope
inc
sbb
jg
sub
ss
incl
pop
adc
addr16
fcompl
dec
shrb
orb
cmp
daa
xchg
cli
and
call
xlat
icebp
into
cmp
mov
out
jle
add
xchg
fdivrs
mov
jb
xchg
add
cwtl
mov
jns
xchg
inc
rolb
sbb
add
dec
dec
iret
cmp
insl
bound
jge
insl
aad
xor
and
inc
xor
cmp
or
fistps
and
out
mov
or
cmp
ljmpw
cli
call
scas
xorb
mov
hlt
ljmp
adc
mov
xchg
enter
xchg
addr16
movsb
aam
cmp
cmp
ss
mov
mov
shll
enter
rep
mov
mov
pop
cmp
pushl
outsb
mov
sub
mov
addr16
out
sbb
dec
add
and
inc
loope
sbb
push
jno
fcomip
incl
int3
mulb
add
sti
stos
adc
pop
icebp
call
mov
loop
fdivs
int3
rolb
lcall
ljmp
rcr
pop
sbb
adc
jg
call
call
mov
add
sub
adc
repnz
adc
push
sub
cs
pushl
sbb
adcl
test
mov
je
out
mov
jb
pusha
jge
xor
push
push
inc
add
sbb
mov
call
cld
mov
sahf
mov
out
cwtl
scas
jnp
loope
mov
loope
push
decl
mov
jmp
pop
xor
out
les
mov
fisttps
dec
pop
pop
xchg
mov
mov
adc
data16
arpl
popf
pop
ljmp
add
pop
cmp
outsl
fcmovu
mov
jae
inc
sbb
cmp
xor
fdivrs
daa
sbb
or
movsb
pop
xor
popa
and
dec
dec
pop
xchg
inc
dec
push
jnp
sub
jl
jb
mov
fmuls
gs
mov
jnp
mov
sti
pop
and
push
incl
adc
jns
xlat
push
dec
sub
sbb
xchg
dec
sbb
ljmp
jbe
adc
fiaddl
pusha
fcomps
stos
adc
mov
or
cli
decl
jl
jl
aam
inc
pop
out
push
xchg
cltd
test
ljmp
ret
sub
jl
out
xor
fcoml
jle
ljmp
shll
jb
ss
test
mov
push
push
and
jbe
or
cmp
push
xlat
jle
inc
and
add
mov
addr16
inc
movsl
pushl
jmp
fsubrs
dec
lods
adc
mov
jb
cmp
inc
xor
lcall
fdivrs
in
or
clc
negb
divl
sti
mov
inc
fs
ja
dec
mov
fistps
out
inc
adc
aas
sbb
shrb
dec
stc
outsb
out
movsb
jmpw
push
mov
mov
leave
daa
jb
mov
mov
mov
mov
add
sahf
popf
adc
std
rorl
rclb
jo
out
mov
notl
jo
dec
sahf
or
jns
jno
jns
xor
push
ja
fcoml
lcall
fstl
adcl
xchg
jmp
xchg
and
pop
pop
ljmp
jno
pop
and
call
dec
jle
jp
xchg
or
dec
sub
adc
decl
mov
es
lods
or
sub
jnp
push
int
cld
incl
pop
sbb
jecxz
mov
clc
repz
and
mov
push
mov
stos
das
out
sbb
call
insl
jp
or
xor
jp
cmpsl
cmc
les
lock
sbb
sbb
ljmp
fstps
clc
cmpsb
lret
rcl
repz
gs
into
in
aas
nop
insb
xchg
xchg
addb
push
inc
andl
ds
mov
jl
outsl
std
inc
in
or
or
frstor
in
insl
push
insb
push
xchg
mov
nop
cltd
push
loopne
das
scas
xchg
test
call
mov
jl
outsb
jb
inc
fwait
test
pop
cmc
aas
dec
mov
data16
lds
fists
jmp
or
dec
out
xor
or
cmc
mov
push
and
lret
adc
pop
std
fdiv
in
cwtl
push
ljmp
cmp
jp,pn
mov
mov
lock
sub
sbb
pushl
insl
pop
push
lock
sti
aas
and
pop
mov
add
mov
and
sbb
divl
dec
fdivr
add
incl
aam
mov
jno
mov
btc
push
mov
fiaddl
cli
cmp
ljmp
addl
aad
mov
mov
mov
pop
shll
cmc
incl
jae
dec
and
fsubp
adc
inc
sub
fstpl
cli
mov
push
xlat
jo
lcall
cmpsl
dec
sti
inc
orl
std
or
std
idivl
jne
sar
jmp
les
ljmp
jb
std
cmp
rcrb
cmpsl
jecxz
add
mov
jg
ret
mov
cmp
sahf
mov
rcll
roll
xor
cmp
jmp
fs
cmp
js
cli
fwait
xchg
aas
mov
mov
lds
addb
fs
mov
inc
mov
pop
mov
xor
hlt
jp
jns
adc
pop
movsb
push
mov
testb
mov
cmp
sbb
ret
mov
push
dec
push
pop
mov
xor
imul
pushl
cld
ljmp
xor
inc
jmp
lret
stos
loop
mov
add
out
clc
fbstp
mov
pop
pushf
icebp
sub
test
lcall
or
sbb
jmp
push
jns
fst
add
lock
jae
out
cltd
arpl
mov
push
out
jp
jg
js
mov
test
dec
pusha
scas
and
ljmp
mov
cmp
jbe
xor
sbb
icebp
mov
ljmp
int
mov
ds
negb
mov
dec
shlb
leave
loopne
dec
mov
in
jmp
mov
scas
call
movsb
xchg
jg
sub
jmp
es
jb
mov
ss
sti
ljmp
aaa
add
jmp
cmp
xor
mov
incl
and
adcb
repz
jno
ficoms
or
nop
jno
pushf
shl
leave
addr16
fxch
pop
mov
mov
std
icebp
inc
fwait
mov
sti
jmp
sub
call
push
out
movl
push
jns
mov
add
jb
repnz
stos
fistpl
mov
scas
fadds
loope
ret
sub
ds
pop
mov
jo
stc
mov
sti
jmp
dec
sub
mov
repnz
mov
mov
adc
leave
adc
lea
popf
ljmp
push
in
outsb
fdivrl
inc
das
push
pop
out
loop
mov
insl
cmp
movsl
mov
stos
pushl
xlat
cmp
mov
negl
or
in
call
xchg
pushf
and
int
mulb
jmp
ds
xor
mov
mov
cwtl
and
pop
cmc
dec
rorb
aas
dec
ret
jge
fcompl
or
test
xor
cmp
aam
outsl
je
xchg
ljmp
jg
dec
sub
sahf
dec
mov
pop
pop
aaa
test
mov
out
enter
pop
pop
or
outsl
clc
cmp
push
jecxz
jb
xor
sahf
mov
cmp
std
jmp
mov
scas
gs
cmp
call
mov
lahf
mov
jae
xchg
pushl
mov
or
iret
mov
mov
shrb
loope
pop
push
pop
mov
repz
sbbl
ret
mov
mov
lock
cld
pushf
pop
outsb
jmp
mov
cmp
mov
call
je
fsubrs
pusha
jmp
push
xor
out
cmp
orl
das
ret
mov
mov
jmp
pop
out
jmp
push
aam
sbb
das
pop
lret
shrb
adcl
fcomip
pushl
in
lret
loopne
xchg
sarl
jo
int
sub
decl
imul
mov
call
sbb
insl
cs
add
stos
js
mov
call
in
jge
aam
mov
xchg
mov
sub
bound
sub
loopne
jmp
mov
cmp
and
leave
cmpsl
or
xchg
pop
ds
out
dec
mov
pop
stos
fisubl
addr16
lcall
frstor
ret
inc
xlat
cmpsb
lods
loopne
insl
test
mov
cmp
or
mov
cmpsb
mov
loopne
inc
test
mov
inc
and
aas
jge
ss
or
pusha
inc
ds
nop
cs
fsts
sbb
out
xchg
or
icebp
push
adc
sar
cmp
aam
and
sbb
cs
inc
daa
mov
insb
outsb
mov
xor
fisubs
jle
sar
cmp
jnp
inc
push
adc
call
jae
add
jg
jle
sub
cmp
mov
leave
clc
aas
mov
cli
stos
adc
cmp
loop
cmp
fwait
jnp
daa
add
out
cwtl
ret
nop
jle
jecxz
xor
dec
loope
aaa
cmpsl
inc
aas
push
xor
decl
jge
jmp
jl
xor
or
xchg
sub
lret
popf
stos
adc
sarb
xor
dec
push
mov
xor
jmp
cli
xlat
inc
fildll
push
fstps
jge
inc
into
imul
in
mov
jbe
clc
jmp
fisttpl
jge
jnp
push
out
imul
ss
dec
loopne
incl
and
mov
pop
mov
xchg
lret
fisttps
or
or
pop
cmpl
into
xchg
cld
in
outsl
cmp
movsl
mov
lcall
decl
push
mov
sbb
adc
mov
cld
ljmp
or
mov
dec
loopne
pop
mov
lcall
fdivrl
adc
jmp
jmp
movswl
cmpb
lcall
inc
jns
scas
push
mov
call
push
test
imulb
dec
test
imul
inc
mov
sbb
push
pop
adc
jmp
xchg
ja
popa
ljmp
xor
scas
xchg
pop
insl
lock
int3
pop
out
fistl
push
cli
dec
mov
push
fbstp
call
cwtl
xchg
pop
data16
mov
lret
in
sbb
jo
decl
mov
lock
inc
sbb
add
arpl
push
loopne
arpl
mov
decl
stos
and
lods
cmpsl
xchg
fildll
sets
aam
jmp
xchg
enter
fcomip
jge
xchg
in
les
int
adc
sarb
push
dec
jg
lcall
jo
aam
sti
mov
pop
pop
js
sub
and
mov
popf
ljmp
cltd
not
mov
and
ret
mov
cmpb
shlb
cmpsb
lret
incl
outsb
dec
cs
lahf
dec
sbb
hlt
jns
and
aas
inc
xchg
mov
cmp
xchg
xchg
incl
push
push
shr
cwtl
test
xchg
inc
fstl
push
cli
adc
mov
jbe
sub
pop
clc
pushl
dec
xchg
pop
add
mov
cmp
jae
clc
or
rclb
js
inc
cwtl
lock
cld
scas
mov
aam
mov
dec
fwait
or
lods
pusha
inc
inc
push
fstps
std
incl
xlat
sbb
pop
mov
sub
faddl
cmp
call
mov
jo
pop
dec
inc
imul
or
shl
mov
ljmp
cmc
scas
rolb
test
ljmp
and
inc
lock
leave
out
cmp
mov
cmp
dec
push
mov
cmp
call
rcrl
mov
pop
outsl
inc
pop
mov
jg
mov
rorl
fisttps
adc
loop
dec
pop
sub
ds
or
dec
pop
push
int3
or
sbb
cltd
aaa
stc
sub
mov
les
pop
or
mov
mov
out
aaa
fwait
cwtl
push
ret
push
adc
push
xchg
repnz
mov
pop
mov
in
std
pop
dec
cmpsb
push
push
xor
mov
fcomps
inc
daa
mov
jmp
xor
popf
mov
push
adc
bound
sub
incl
test
dec
out
pop
mov
adc
mov
cli
mov
push
in
add
jg
pusha
and
mov
pushf
push
mov
sbb
stos
fwait
data16
mov
shrb
lcall
add
xchg
lods
bnd
pop
arpl
lods
pop
push
outsb
mov
imul
jecxz
cmp
xchg
adc
xor
cmp
add
mov
dec
add
xchg
lcall
cmp
bound
sbb
push
iret
pop
push
mov
jnp
aam
fisubrl
pop
daa
fsubrs
and
call
test
sbb
sbb
sub
jo
xchg
pushl
fnsave
pop
add
pop
add
pushf
fmul
dec
push
jg
dec
pop
insl
dec
out
add
cmp
inc
jle
imul
push
push
ds
iret
sub
icebp
inc
cmp
loop
adc
jmp
ret
cmpsl
add
in
adc
mov
push
repnz
pop
movl
decl
sbb
sahf
dec
push
sbb
cld
xor
shlb
add
cmp
jmp
inc
inc
sbb
cwtl
shll
movsb
test
rclb
inc
and
xlat
and
call
inc
pusha
sbb
cmp
jo
push
sub
dec
out
test
shl
call
sbb
fisubrs
mov
jp
shlb
std
orl
gs
cmp
mov
icebp
sahf
cmp
pushl
push
xchg
pop
sub
ds
pop
dec
lods
adc
jge
call
cmp
cmp
jns
xor
add
sub
mov
aam
loope
mov
add
pmuludq
out
fiaddl
les
pop
or
xor
push
xchg
sbb
ss
scas
or
lods
cmpsl
rorl
adc
ljmp
pop
fucomip
lock
sti
or
adc
cwtl
push
pop
push
and
cmpsl
lcall
xor
decl
imul
nop
adc
shlb
dec
frstor
aaa
dec
shll
mov
cmp
jmp
mov
cmp
subl
subl
dec
ss
lcall
cwtl
mov
fcoml
fs
stos
mov
inc
das
fdivl
out
xor
decl
sbb
jne
test
sub
inc
push
cli
aas
daa
sbb
mov
je
into
cmpsb
decl
lock
or
xchg
sbb
inc
pop
sbb
xchg
stc
nop
test
aam
inc
and
inc
dec
iret
and
fcompl
scas
insl
sbb
ret
call
rclb
imul
testl
and
push
out
inc
xor
decl
sub
mov
aam
or
jno
pop
jnp
dec
mov
add
test
sub
xchg
cmp
pusha
rcr
xchg
cmc
adc
incb
push
inc
pop
adc
int3
xchg
xchg
ss
dec
xor
cltd
data16
out
cli
xchg
inc
fbstp
cld
cmc
pusha
xchg
mov
ret
enter
lcall
cmpl
jb
jmp
xchg
xor
decl
mov
pop
scas
mov
or
das
hlt
sti
fwait
out
negl
incl
sbb
sbb
pop
sub
rcll
jp
xlat
xchg
xor
insb
and
out
push
rcrb
ljmp
test
je
adc
inc
in
imul
inc
lock
and
outsb
push
popa
pop
jecxz
decl
jge
inc
ret
les
pop
test
sti
sti
pop
xchg
sar
decl
and
ja
xchg
lret
lock
sub
add
movsb
addb
lcall
pop
push
jae
sub
cmpb
add
jmp
popa
outsb
bound
pop
add
fcmovnu
call
push
sub
add
sub
adc
loop
stos
ljmp
ss
add
subl
mov
lcall
and
mov
incl
adc
jge
or
mov
sbb
rcrl
sub
shll
add
ljmp
adc
push
mov
inc
mov
inc
or
fistps
in
xor
pop
aaa
mov
cmp
or
jmp
jle
mov
pop
incl
jecxz
cmpsl
mov
jge
jnp
adc
in
cmpsb
xchg
add
daa
mov
ljmp
fsubrl
xchg
sarb
push
adc
jnp
push
mov
aas
dec
movsb
shlb
mov
mov
mov
push
popa
add
fisubl
sbb
ljmp
je
mov
leave
jge
mov
clc
jbe
xlat
daa
jae
lret
fiaddl
fistl
dec
cmp
sub
ljmp
jns
testb
xorl
adcl
rcll
or
inc
repnz
lcall
cmpsl
pop
xor
popa
push
mov
aas
jae
adc
les
cmpsl
mov
sbb
and
cmp
ficomps
xlat
jne
jecxz
scas
in
fstl
jmp
cmc
aaa
mov
sahf
sub
clc
or
scas
adc
js
mov
pop
cmp
jmp
loopne
in
jge
adc
and
inc
pop
sub
fistpl
mov
lods
ja
add
cmp
cli
mov
lds
call
cmc
sub
pop
sub
pop
lods
in
pop
sub
xchg
idiv
and
add
pop
jmp
cmp
mov
aaa
xchg
stos
push
test
push
jg
sbb
test
adc
add
incl
ss
xchg
fisttpl
stc
daa
jg
arpl
and
cwtl
or
fcomip
pop
mov
mov
adc
std
lret
add
ficoml
push
xchg
loopne
pop
adc
mov
or
mov
stc
mov
inc
pop
insl
out
fsubr
stos
mov
into
aam
lods
jo
fs
scas
lahf
pop
ljmp
call
xchg
mov
pop
jae
push
xor
mov
add
decl
dec
or
xchg
test
repz
loop
or
lret
sub
in
xor
lcall
sub
sbb
cwtl
in
jle
lods
roll
pop
sub
xchg
in
xchg
jp
lcall
lahf
pusha
adc
inc
bound
stos
bound
sub
test
into
test
sub
cltd
inc
outsl
ljmp
ret
dec
pop
lcall
int
pop
pusha
in
xlat
aas
aad
loope
pushl
mov
mov
sbb
push
nop
je
mov
movl
xor
add
push
ret
add
inc
test
xchg
nop
mov
sbb
aaa
je
es
push
mov
rorl
out
test
movsl
jno
sar
ja
jge
push
ja
loop
lret
push
mov
ljmp
jo
lret
hlt
adc
cmp
and
adc
mov
mov
lock
fisubs
jmp
das
adc
jne
enter
shrb
push
push
cmp
push
mulb
int3
xchg
jge
push
imul
sbb
stos
lahf
push
add
idiv
incl
stc
pop
pop
push
cltd
cmp
inc
aaa
pop
test
adc
sahf
repz
cmpsl
add
cwtl
mov
mov
inc
inc
rorl
stos
movb
je
xchg
aad
push
xchg
xorl
repz
sbb
xchg
mov
stos
push
mov
enter
adc
jle
aad
jmp
xchg
pop
rorl
stos
adc
jecxz
adc
mov
push
lcall
mov
push
sbb
aaa
sbb
jno
mov
jb
sbb
dec
pop
jne
sar
decl
adc
fsubr
xchg
sti
mov
fisubrs
cld
stos
lds
pusha
cwtl
outsl
bound
mov
inc
cmp
ljmp
lods
in
daa
inc
les
mov
stos
sbb
ret
xor
insl
insb
and
fcoms
jp
xor
pop
push
aas
imulb
lret
dec
std
bound
push
fcomps
pop
mov
ljmp
in
dec
fstps
jl
xor
adcl
repz
push
addl
jne
lock
fwait
cmp
and
pop
push
repnz
ljmp
sub
dec
call
hlt
dec
ja
hlt
jnp
cmp
call
jmp
or
in
into
xor
cmpb
push
rcll
rclb
fidivrs
incl
xor
lahf
shlb
mov
fstpl
push
mov
push
mov
inc
loop
into
aas
pop
cmpsl
lcall
adc
pop
sbb
iret
lods
sub
adc
mov
loopne
loop
jmp
xor
pusha
repz
ss
dec
adc
stos
dec
add
pop
loopne
push
scas
pop
out
pushw
in
out
mov
std
mov
xor
and
inc
add
adc
mov
insb
jecxz
add
insb
add
inc
fs
loope
xor
popf
pop
push
mov
icebp
fdivs
js
xchg
cmpl
cmp
dec
popa
call
ljmp
stos
sbbb
fiaddl
mov
pop
int
and
lds
fcompl
push
lcall
subb
inc
insb
fdivl
add
mov
xchg
or
push
in
dec
js
mov
add
and
push
jns,pn
outsb
inc
int
add
dec
clc
cmp
or
lcall
sub
push
jnp
mov
in
xchg
mov
add
into
aad
incl
cs
arpl
test
push
xor
ret
sub
mov
or
fsubrl
or
in
cmc
ljmp
shl
sarl
xor
mov
xchg
aas
push
mov
mov
push
nop
std
das
jb
sub
xchg
mov
fstl
int3
daa
mov
cwtl
cld
jecxz
jae
dec
subl
scas
outsb
loopne
mov
push
adc
rcr
pop
ss
cwtl
out
mov
into
mov
inc
lock
mov
push
fs
sbb
jmp
cmp
jecxz
jmp
xchg
sub
dec
mov
ljmp
das
movaps
inc
xchg
mov
sarb
jmp
adc
call
out
shrl
sbb
add
fwait
cmpsl
fst
pop
and
shl
and
jb
sub
es
inc
sub
and
outsl
subb
push
jl
or
mov
adc
push
push
adc
into
and
mov
fucomp
sbb
lcall
add
cmp
sub
pusha
dec
inc
ret
ljmp
add
cmp
dec
bound
adc
aaa
decl
orl
outsl
out
jl
push
xchg
or
lods
jbe
dec
inc
shlb
mov
xchg
aam
jmp
fidivl
mov
sub
push
lcall
incl
jp
cltd
loop
add
pop
inc
rolb
lret
mov
fiaddl
and
ljmp
adc
cmp
lock
in
sbb
mov
mov
push
xchg
mov
call
cmpsb
mov
hlt
and
hlt
aas
out
pop
test
ret
cmp
xlat
test
lcall
adcb
add
cmpsl
or
push
cs
add
popa
aad
std
call
test
xchg
in
jns
pop
aad
xor
sbb
in
call
add
pop
and
negb
pop
into
pop
in
push
shrl
fcomip
xor
stos
iret
ljmp
sub
int
dec
lcall
push
push
push
mov
push
mov
fmull
call
mov
mov
mov
mov
dec
ret
jmp
dec
mov
mov
loopne
adc
fimuls
adc
mov
outsb
dec
pusha
insl
push
push
xor
insl
lret
adc
int
lahf
inc
into
aam
decl
test
ja
orl
mov
pop
sub
sbb
call
pop
cltd
or
mov
stos
push
outsl
push
push
push
jno
cli
mov
mov
dec
inc
dec
inc
mov
push
push
out
aas
push
frstor
sub
jno
cwtl
xchg
sti
add
mov
test
fidivs
shll
pop
fs
mov
dec
decl
xlat
inc
xor
inc
movl
jg
inc
mov
adc
mov
mov
flds
or
push
jmp
push
inc
add
jp
test
push
mov
xchg
xor
sbb
xorb
das
add
fs
jg
arpl
lock
test
fcomp
iret
mov
orl
shl
shrl
sub
gs
cli
or
xchg
sbb
mov
ljmp
test
aaa
adc
in
jl
dec
in
lret
jge
movsb
xor
or
hlt
call
cmc
test
and
sbb
test
pusha
sbb
pushl
and
ljmp
fimuls
xor
mov
iret
fildl
add
lock
popa
push
idiv
ret
xor
and
int
call
cld
xor
ror
aad
and
mov
xor
loopne
sti
cmp
fcomip
clc
cld
mov
mov
imul
inc
lods
repz
jg
stos
inc
mov
jmp
add
call
std
mov
sarl
inc
adc
jno
dec
add
push
pop
mov
adc
call
lret
jnp
lea
decl
adc
out
xor
xchg
aad
mov
xor
ljmp
mov
fcompl
cmp
adc
pop
push
push
mov
popf
xor
jmp
fmuls
push
in
idiv
aaa
mov
pushf
rcrl
ja
call
add
mov
or
pop
hlt
pushl
dec
js
push
in
sbb
hlt
lret
jecxz
and
pop
popa
std
push
cmp
fcomip
mov
addb
mov
fbstp
test
add
push
push
adc
scas
cmp
sbb
lds
cmp
dec
push
push
cmp
incl
pop
adc
fiadds
lock
xor
xchg
enter
test
jb
sub
imul
inc
dec
sub
jne
lds
ja
push
push
jbe
push
inc
in
add
frstor
pop
jmp
fildll
mov
out
loop
test
shl
xchg
or
incl
clc
test
sub
cmp
jne
pop
cltd
mov
incl
js
rclb
pushf
lods
xorl
hlt
int3
outsb
fldcw
cmpsl
repnz
sub
mov
ljmp
mov
push
in
adc
sbb
xor
push
adc
and
or
out
ljmp
adc
dec
jb
jg
sar
fists
xchg
mov
rolb
dec
add
jb
leave
push
call
call
push
cltd
clc
mov
js
jb
adc
cld
ljmp
in
lods
je
and
decl
out
data16
cmp
sbb
aas
inc
sub
push
ss
xchg
test
std
cmp
mov
out
and
pop
sbb
jle
cmpsb
add
pushl
sub
mov
loope
movsl
xor
scas
cmp
movsb
cltd
xor
mov
clc
stos
or
sbb
mov
lock
stc
aam
jae
jle
sar
push
mov
arpl
sub
adcb
lods
xor
mov
xor
mov
lret
scas
fwait
movsl
test
jmp
iret
sub
movsl
or
cmpsl
int3
sbb
fisttpll
aaa
and
xchg
jg
mov
cli
xchg
xchg
jg
ljmp
jp
test
mov
hlt
cli
push
push
xor
pop
loopne
add
cmc
call
mov
xor
xchg
inc
mull
mov
ret
loop
jmp
xchg
ljmp
mov
push
test
xchg
fs
mov
mov
jmp
addr16
push
dec
cmp
mov
aam
subb
nop
fdecstp
push
jo
cmp
jg
jl
pop
int
js
pusha
daa
dec
inc
sub
js
push
and
cmpsb
jge
cmp
iret
rcl
dec
shlb
sahf
sahf
loopne
mov
addr16
out
ljmp
movsl
fstpl
addr16
roll
jb
dec
mov
mov
xchg
jo
and
and
cld
xor
pop
cmp
sbb
repz
and
roll
cs
loopne
dec
and
mov
pop
inc
outsl
add
incl
cli
sbb
arpl
and
je
ror
mov
jg
jg
mov
movsl
sub
imul
insl
rclb
sahf
inc
add
icebp
mov
repz
jnp
mov
test
jmp
shlb
ljmp
mov
push
cmp
lds
test
out
mov
inc
insb
fisttps
sbbb
cmp
inc
push
arpl
ret
push
in
lock
sub
lods
adc
xor
enter
sbb
mov
xchg
stos
cmp
subl
add
out
ss
aad
shrl
lcall
aaa
xchg
adc
bound
pop
pop
mov
mov
push
sub
insb
loope
jecxz
out
testb
adc
lock
xlat
cmc
push
mov
push
adc
pop
dec
movsl
in
rcll
mov
loopne
hlt
out
add
out
cltd
pop
pop
xor
lods
add
push
test
mov
outsl
jb
lret
mov
inc
dec
jg
hlt
dec
imul
sbb
andb
or
xlat
repz
mov
lock
mov
test
jne
adc
jmp
aaa
push
jnp
pop
cs
fs
das
push
out
mov
cmpl
incl
adc
xchg
sub
fnstsw
imul
jnp
adc
pop
xlat
lretw
mov
call
in
cmpsb
lds
scas
cmpsl
pop
stc
lea
sahf
cltd
jg
jmp
faddl
cld
scas
pop
inc
je
mov
sbb
movsb
lods
out
ljmp
cli
jns
aas
dec
push
mov
jnp
sti
lret
int
lods
cmp
and
dec
sbb
movsl
inc
pop
jns
cs
movsl
arpl
leave
les
sahf
aas
and
pop
stos
iret
pop
test
mov
rol
popa
cltd
cmp
call
add
pop
lds
movb
les
cmp
jbe
fnstenv
inc
mov
pop
popf
mov
inc
mov
ljmp
pop
shlb
movsb
shl
jns
and
mov
call
sbb
jnp
call
sub
jnp
sbbb
in
mov
dec
jge
rcl
cmp
fmulp
pop
pushf
movsb
jecxz
push
std
jmp
mov
sub
test
push
lret
movaps
pusha
cs
jg
sti
sub
push
push
outsl
adc
lea
in
adc
call
sahf
jb,pt
xchg
dec
mov
and
xor
sbb
xlat
mov
fsubrs
jmp
mov
mov
loopne
dec
mov
cli
add
xchg
and
pushf
mov
pop
cmpsl
das
mov
xchg
inc
out
sub
leave
pusha
sbb
jge
or
push
cmp
mov
imul
mov
xchg
mov
aam
sub
stos
lret
xchg
push
call
mov
jbe
xor
sub
xor
lods
out
test
jge
sar
xor
jb
and
jge
sub
cmp
popf
mov
mov
fisttpl
add
ret
jle
mov
push
cmp
add
leave
cmc
das
mov
movsl
das
sub
or
push
jl
cmp
pop
sbb
mov
dec
mov
test
iret
lea
leave
lock
or
xchg
cmp
rcrl
mov
mov
sub
mov
lcall
mov
jmp
scas
pop
inc
xchg
pop
mov
xchg
fnstcw
pop
or
arpl
test
and
push
push
mov
enter
and
stc
mov
outsb
adc
fcompl
jp
mov
dec
xchg
call
arpl
jmp
cmpsb
add
out
ss
mov
lret
mov
mov
decl
jae
addr16
cmc
js
xchg
lret
and
ret
mov
jmp
cmp
adc
mov
push
inc
aad
ja
adc
cmc
jl
mulb
xlat
add
rcrb
decl
adc
in
mov
jmp
jbe
int
sbb
inc
rorl
into
push
add
sahf
xor
mov
sbb
jne
mov
dec
lret
aaa
inc
insl
scas
add
pop
sub
jae
push
mov
clc
dec
fsts
or
lock
xchg
mov
in
setle
and
pop
aam
cs
test
call
nop
pop
mov
mov
mov
mov
dec
xor
addr16
fwait
ret
je,pt
mov
mov
inc
xor
andl
mov
or
mov
xor
ljmp
scas
mov
jb
cli
and
sbb
decl
lock
pop
iret
jo
js
mov
lcall
lea
jp
ljmp
mov
orb
adc
mov
cli
ljmp
out
ljmp
push
mov
dec
adc
addb
movb
jge
lock
in
insb
iret
lds
push
inc
xchg
mov
add
call
mov
cld
and
ja
mov
inc
orb
jnp
enter
jmp
fstp
and
out
out
jecxz
cs
jbe
stos
inc
mov
stc
testb
jg,pt
call
cltd
push
cmpsb
pop
out
pop
pop
rcl
mov
inc
scas
dec
out
jnp
clc
or
arpl
call
cld
mov
dec
loop
mov
jecxz
inc
mov
cs
scas
xchg
inc
mov
mov
sti
call
in
push
icebp
outsb
aas
dec
dec
xchg
jg
test
mov
xchg
pop
sub
jge
cmp
fimull
shrb
out
and
pop
sbb
mov
jmp
sti
fmuls
insl
bound
xchg
icebp
loopne
cmp
cmpl
je
jecxz
jg
and
outsb
adc
scas
repz
inc
push
sbb
fsubrl
mov
pushl
lahf
cmp
sub
xchg
xor
xchg
xchg
mov
jecxz
and
mov
sub
out
imul
aam
jp
nop
sub
leave
cmc
ljmp
cmp
mov
xlat
cmc
jmp
scas
and
rcr
or
jmp
cwtl
je
mov
lcall
push
dec
jno
pop
insl
into
clc
sub
add
or
inc
mov
loopne
ret
jmp
xchg
xchg
daa
mov
mov
pop
icebp
inc
lock
popa
xor
mov
pop
ficompl
std
jmp
icebp
lret
adc
test
outsl
lret
dec
outsb
sarl
std
popa
dec
dec
mov
test
call
mov
aam
loopne
dec
sbb
jmp
add
sub
mov
pop
mov
jbe
ss
movsl
adc
ret
icebp
jmp
sub
scas
xor
adc
divl
aaa
mov
sub
pusha
sub
movsl
xor
xchg
test
movsl
mov
fidivs
and
dec
cmp
xor
or
out
xchg
cmp
cmp
dec
pusha
andl
inc
mov
pop
jmp
sbb
arpl
adc
out
sbb
or
call
inc
jnp
or
push
int
fwait
mov
sbbw
daa
jg
jmp
ficomps
adc
cld
fs
stos
add
jo
lods
lods
mov
jge
in
adc
pop
add
call
mov
push
inc
mov
pop
and
xchg
ja
jne
dec
in
mov
mov
push
fs
jmp
mov
and
xorb
in
mov
or
movsl
jo
mov
cmp
and
mov
adc
cwtl
in
test
mov
clc
pushl
fistps
or
lcall
pop
test
hlt
test
add
lcall
sti
jg
or
mov
cltd
pop
fnsave
adcb
ror
mov
sub
cmc
inc
mov
icebp
push
pusha
mov
leave
mov
xchg
adc
pop
or
jecxz
ljmp
cmp
sub
add
xchg
sbb
cmp
int3
push
stos
imul
ja
call
mov
jmp
jg
data16
jo
mov
rcpps
jmp
aad
lods
and
xchg
pop
xchg
shlb
jns
push
fistps
lcall
inc
pop
cmp
add
and
jns
push
les
or
jecxz
pusha
loopne
jl
fadds
sbb
call
add
adc
xchg
push
iret
aas
nop
jmp
pop
add
cmp
mov
aas
imulb
dec
mov
pop
test
dec
lds
popf
xchg
jns
sub
int
mov
pushl
add
lea
das
cmpsb
mov
popa
js,pt
lds
rolb
fcomip
ljmp
testb
int3
pop
aas
sahf
add
ljmp
lcall
and
sbb
lret
sub
and
lods
xchg
mov
adc
pushl
aad
dec
clc
xchg
fs
cmp
mov
aaa
adc
cmp
pop
jnp
adc
out
mov
cmp
movsl
mov
sub
pop
mov
jae
jno
int3
lds
stos
leave
lcall
mov
incl
dec
lods
in
loop
dec
jl
stc
hlt
cmp
and
pop
subb
mov
addl
imul
ja
pop
in
ficompl
pop
inc
out
and
push
aad
movsl
jb
dec
iret
sub
lret
inc
dec
leave
dec
into
stc
add
sbb
sarb
add
jle
mov
ja
nop
rcrl
ljmp
jp
clc
and
in
mov
xchg
ret
lds
pop
xchg
shrb
decl
mov
dec
fcom
jbe
push
xchg
jne
shlb
mov
cltd
cli
fs
gs
jbe
push
lcall
popa
mov
pop
lock
mov
sarb
test
pushf
sub
pop
std
decl
lahf
push
sarb
fwait
dec
ret
scas
ss
call
nop
inc
call
ljmp
dec
sub
push
je
jbe
sbb
cmp
mov
ljmp
lds
mov
jmp
enter
cwtl
push
es
call
xchg
mov
cmp
call
sbb
mov
inc
lods
pushf
xchg
xchg
sub
xchg
push
fucomp
add
ss
mov
ljmp
in
sub
cs
dec
mov
adc
sbb
std
pop
mul
adc
data16
pushl
idiv
jns
push
and
xor
push
cltd
aas
ja
pop
push
and
ret
xchg
call
lds
out
addr16
int
xchg
cmp
pop
scas
out
or
sub
cmpsb
fcomip
pop
inc
xor
out
loopne
inc
aas
and
gs
outsb
call
mov
in
and
cmp
pusha
fisubs
out
popa
sub
jg
aaa
cmp
lods
sub
xchg
xchg
test
aam
inc
inc
iret
fdivr
cmp
test
xor
rcrl
xchg
vsqrtps
cmc
lcall
add
dec
xchg
xchg
jb
push
arpl
je
sbb
ljmp
cmp
sbb
xor
mov
mov
push
jns
push
jp
iret
adc
mov
or
outsb
test
in
pop
cmp
and
jmp
sbb
xor
mov
fidivrs
push
mov
xor
leave
or
jg
lahf
xchg
jge
movsl
lahf
pushl
push
sbb
jecxz
testl
xchg
or
and
lret
pop
into
add
lcall
addr16
mov
pop
mov
in
inc
dec
ficoms
incl
fisubl
and
jnp
fidivrl
adc
je
cltd
cmp
sti
fcomip
dec
cmp
lds
hlt
pop
sub
pop
and
pushf
cmp
jg
or
jmp
testb
sbb
dec
sub
adc
add
sti
pop
iret
movsl
rcll
xchg
iret
jbe
adc
cli
or
cli
xchg
inc
push
and
push
stos
aas
jg
ss
shll
rolb
xor
sbb
pop
jg
mov
pop
hlt
bound
push
push
push
ss
adc
ret
pop
hlt
xchg
sti
aad
ret
mov
ss
decl
lret
push
sub
mov
movsb
dec
push
mul
cmp
cmp
jne
fsubrs
mov
lcall
jbe
roll
cmp
xor
adc
mov
push
or
jmp
xchg
aad
cwtl
add
rclb
ja
inc
lahf
and
or
and
jmp
lcall
test
popf
movsb
add
pop
mov
dec
mov
pop
sbb
loopne
and
push
jmp
int
sbb
test
pop
arpl
loope
aaa
ffreep
pop
das
out
sbb
pop
jne
fadd
xor
push
cmp
pop
ja
mov
pop
pop
test
jmp
mov
fcmovb
mov
add
and
insl
lods
dec
rorl
stos
flds
outsb
aaa
jmp
outsl
or
aas
xchg
into
rorl
in
adc
dec
sub
xor
inc
int
xor
xorb
jp
mov
outsl
out
mov
rcrb
cmp
aam
mov
ja
pop
cmc
jle
xor
ljmp
mov
call
jmp
sbb
mov
sti
insl
xchg
movsb
fs
in
xchg
inc
inc
lea
call
jg
xchg
cmp
sbb
inc
aad
and
cmp
jge
std
shrl
add
mov
test
enter
xchg
inc
sbb
cmp
inc
fdivrp
jno
jmp
aaa
push
add
int3
xor
fnsave
jno
out
jecxz
test
mov
outsb
xchg
jge
or
lea
pop
xor
pop
aad
fs
sbb
jo
sub
pushl
add
cmc
inc
fisttps
sbb
sbb
push
movsl
adc
cmp
call
add
mov
call
xchg
xchg
mov
cmpsb
call
sub
sub
cmp
xchg
sub
sbb
mov
cmp
bound
adc
sbb
xchg
pop
aaa
aam
decl
mov
arpl
add
cmc
repnz
cmc
inc
fiadds
xchg
cld
lods
xchg
popl
xchg
lcall
xchg
or
fdivrs
leave
imulb
and
mov
imul
and
xchg
decl
pusha
sahf
scas
inc
xchg
push
inc
cmpb
movsl
or
xor
sbb
and
push
push
cmp
and
sbb
cmc
je
je
adc
movb
out
ret
push
jmp
dec
mov
cmpsl
repnz
push
mov
ja
pusha
xchg
mov
fisubs
incl
dec
outsb
xchg
lods
das
in
stc
jbe
fcoml
mov
xor
es
outsl
in
decl
not
push
sbb
iret
pop
inc
jecxz
cwtl
scas
pop
or
mov
push
fdiv
inc
lcall
pushl
fistps
and
jecxz
out
jnp
mov
jno
pushl
leave
mov
jnp
in
push
jmp
ja
push
scas
divl
mov
call
xchg
sub
xchg
fstpl
aas
adc
cli
inc
in
lock
incl
popl
or
lods
gs
pop
jae
jb
movsl
int
pop
stc
inc
add
add
roll
fistps
jae
inc
popl
in
int
inc
pop
jnp
add
inc
mov
mov
je
mov
rcrb
and
test
sbb
decl
or
push
pop
idivl
adc
ffreep
dec
or
adc
push
mov
incl
jns
fiadds
xor
and
aam
aad
or
fildl
lret
scas
jp
sbb
imul
loope
push
mov
mov
addl
cli
add
pushl
mov
and
mov
add
jg
cli
in
and
and
sbb
xorb
xchg
nop
jno
pop
sub
fisubrs
and
mov
pop
loopne
in
aas
xor
mov
pushl
pop
mov
sbb
push
sbb
cltd
or
in
push
push
fildl
lret
in
adcl
sbb
jg
pop
shrb
rcr
add
outsl
mov
inc
sub
mov
jb
jmp
pop
and
mul
mov
push
add
jb
sarb
and
lahf
ljmp
call
or
hlt
mov
xchg
fs
xchg
lock
stos
leave
xchg
mov
xchg
jl
xor
scas
mov
mov
sub
jl
push
mov
ret
pusha
bound
sbb
jne
mov
cmc
call
mov
jno
mov
cmpsb
lock
xor
outsb
sti
shr
inc
mov
call
sbb
jecxz
xor
pop
add
pop
mov
in
lcall
dec
jl
cld
incl
jmp
lret
or
fs
and
or
cmp
loop
push
jne
repnz
iret
int
mov
jge
lcall
xor
push
out
ret
imul
mov
repnz
call
sub
scas
push
fisubrs
scas
les
in
inc
scas
data16
iret
mov
cmp
jmp
inc
push
lea
pop
lods
out
movsb
jbe
inc
test
mov
fidivrl
cmp
inc
pop
xor
sub
dec
or
cmp
sbbl
fnsave
jno
ljmp
shl
int
orb
inc
cmp
cmc
cmp
loopne
lcall
gs
out
xor
sbb
jg
xchg
aaa
xor
call
mov
fnstcw
fistl
add
cmp
jne
push
pop
jnp
addr16
pop
add
adc
jmp
roll
sbb
push
mov
shrb
fdivp
mov
in
mov
jmp
dec
pop
dec
jns
pop
xchg
repz
jnp
push
mov
mov
add
dec
sbb
and
mov
lcall
inc
lahf
cmpsb
fs
cmp
sub
cmc
inc
dec
int3
in
outsb
ljmp
cld
and
mov
mov
int3
pop
lods
pop
xchg
push
xchg
mov
push
cmc
pop
aaa
xchg
das
scas
xor
shrl
mov
push
loope
mov
push
pop
mov
rcr
pop
popa
repnz
add
decb
mov
fcomps
std
xor
icebp
stc
loopne
call
test
fldt
ja
mov
in
divl
jecxz
dec
pop
je
ja
movsb
push
cmp
hlt
fcomip
das
cmp
out
popa
daa
inc
lcall
outsb
cmc
sub
fwait
arpl
pushl
adc
and
les
fsubl
inc
fsubl
jecxz,pt
sbb
sub
scas
mov
lods
into
jbe
test
loop
jg
lahf
adc
outsl
test
mov
daa
pop
or
dec
ljmp
movsb
lcall
inc
dec
test
xchg
or
nop
inc
movsb
dec
add
lock
jp
cmp
dec
push
les
out
mov
mov
cmpsl
dec
mov
and
movl
cmc
fstp
fnstsw
ja
jl
push
sar
cmp
dec
cmpsb
aam
sbb
in
mov
hlt
or
lret
jge
js
jge
mov
sarb
decl
adc
in
sub
push
leave
dec
cmp
mov
outsl
push
icebp
ret
insb
call
lret
pop
mov
cwtl
cmpsb
adc
xchg
cmpsl
mov
mov
jge
cmp
sarb
xor
imul
rclb
cs
mov
psllq
cli
xor
stos
fsincos
lods
pop
jbe
push
push
jp
mov
inc
aam
movsb
xchg
dec
cltd
xor
pushf
repz
fs
in
stos
push
xchg
mov
pushl
cmc
scas
jle
jp,pn
mov
jmp
fisubrl
gs
xchg
and
or
clc
out
clc
loope
fucom
mov
xlat
pop
rcrb
push
popf
pause
jbe
int3
add
jb
mov
in
cmc
aam
in
push
add
adc
mov
es
incl
mov
mov
les
push
aaa
push
mov
xchg
out
mov
addr16
push
jbe
incl
pop
adc
mov
inc
daa
add
jp
jno
jmp
ss
jae
jg
xchg
inc
or
repz
ss
mov
lea
xor
jg
dec
mov
inc
gs
push
dec
out
mov
xchg
pop
imul
call
and
mov
scas
iret
pop
dec
cmp
cmp
jecxz
mov
xchg
or
jbe
decl
cmpsb
aaa
addr16
divb
xchg
test
aaa
lret
xor
add
dec
sub
pop
mov
iret
mov
into
pop
ret
mov
jg
add
test
les
and
xchg
das
pop
push
std
call
cmp
into
out
cmp
in
lahf
movsb
inc
mov
mov
jge
ficompl
xor
jge
mov
movsl
pop
stos
jno
inc
push
sbb
movsl
jg
mov
push
mov
std
push
and
or
shll
loopne
insb
mov
sub
mov
jmp
jecxz
sub
mov
inc
scas
mov
outsl
pop
lahf
pop
imul
cmp
jne
scas
push
lret
mov
sub
cmp
adc
movsl
jle
jge
repz
jns
jl
jmp
fisubrs
jno
lods
subb
das
sub
mov
stc
cli
imul
cmpsb
in
pop
fadds
mov
push
xor
xchg
sti
in
lret
jecxz
aad
cmp
xchg
and
roll
push
add
push
lods
jg
ljmp
mov
jne
decl
cmp
jle
lock
lahf
enter
loopne
jg
mov
xchg
frstor
add
push
insl
xor
push
cmp
push
aam
adc
jg
jmp
adc
lock
out
in
insb
idiv
lcall
call
inc
or
dec
or
pop
xor
mov
xchg
fistps
adc
js
insb
jnp
nop
jmp
out
add
loop
push
jecxz
and
and
jmp
lods
cli
stc
loop
xchg
inc
lahf
fsubr
fsts
cmp
clc
push
dec
pop
dec
add
incl
outsb
jae
mov
orl
out
jno
scas
mov
jg
jl
lret
and
cli
xchg
nop
push
or
mov
xor
ljmp
cli
or
pusha
movsb
cmpb
cmp
jmp
fadds
leave
jp
arpl
mov
mov
sahf
xor
aas
mov
call
outsl
nop
pusha
add
mov
inc
jecxz
xchg
in
jbe
pushl
cs
lock
jmp
call
les
jl
ss
xchg
popf
xchg
cmpsb
shrb
sub
sub
decl
daa
cmp
jb
cld
xor
mov
add
outsl
fisubrs
shll
out
test
xchg
inc
js
inc
pusha
push
out
cmp
lods
bound
decl
addb
test
imul
stc
inc
inc
lcall
cwtl
leave
fwait
mov
cmp
rol
out
xchg
sbb
hlt
sarb
mov
xlat
sub
push
cmp
pop
adc
mov
mov
ret
or
xchg
scas
ret
mov
test
filds
incl
push
int3
inc
jl
push
sti
sahf
pop
std
into
loope
mov
sbbl
dec
xor
and
hlt
cmpsl
and
inc
sub
idiv
call
lret
pop
cli
push
cli
lods
cmp
mov
shrl
aad
xor
mov
mov
mov
inc
sbb
add
jp
scas
and
out
xchg
add
aam
or
mov
in
fidivs
in
add
sub
stc
pop
call
jnp
bound
ds
jnp
jle
popa
cld
xchg
xchg
fisubl
lcall
push
idivb
xchg
jns
rolb
push
push
mov
jmp
mov
lcall
xchg
ja
daa
xchg
or
rcrl
test
imul
clc
sbb
jmp
addr16
stc
and
out
in
repnz
xor
xlat
ljmp
xor
clc
mov
sub
mov
add
enter
xor
fisttpl
or
roll
lcall
call
cmp
in
out
xor
test
push
ja
mov
add
das
cli
call
xchg
mov
lahf
or
ljmp
mov
shrl
dec
call
pop
cmp
lahf
push
xlat
dec
push
or
gs
lcall
data16
clc
shll
outsb
in
sub
add
fldenv
lods
mov
push
repnz
cmc
dec
inc
jb
pop
xor
mov
sbb
dec
adc
mov
fbstp
mov
test
jno
hlt
ss
insl
xor
jae
jg
sub
incl
adc
pop
jecxz
ss
xor
mov
push
enter
mov
int
hlt
ljmp
add
pop
inc
cmpsl
in
cmpsl
push
sbb
loop
sarb
enter
lods
insb
ljmp
sar
mov
adc
stos
xor
jmp
mov
fnsave
decl
adc
xor
adc
jns
inc
jmp
and
ljmp
mov
jae
lds
in
scas
bound
aad
scas
fwait
add
mov
ds
xor
sarl
stos
jae
jmp
push
pop
xor
xlat
push
mov
and
jb
les
in
loope
clc
lcall
inc
jbe
push
or
mov
lds
xor
push
sub
int3
pop
incl
leave
fs
xchg
jnp
add
mov
push
fs
xorb
add
xchg
xor
mov
inc
rorb
je
jmp
sbb
pop
flds
or
xor
in
leave
pop
rep
aad
cwtl
sbb
hlt
lcall
aas
jo
int
nop
fisubrs
pusha
pusha
mov
fiaddl
adc
add
or
pusha
lods
sbb
movsb
sub
in
test
cli
jmp
call
mov
sti
xor
dec
mov
add
std
pushl
enter
stos
inc
xor
rolb
push
repz
mov
daa
inc
in
scas
push
jnp
pushl
mov
jae
or
pop
push
xor
icebp
shl
mov
mov
enter
sbb
aaa
add
sar
dec
cmp
dec
or
cmpsb
cltd
enter
push
lods
ljmp
orl
mov
out
clc
xchg
cltd
xor
xor
out
add
jmp
lahf
js
out
clc
sti
data16
adc
mov
xchg
inc
into
bound
push
into
jmp
cmpsl
or
fbld
push
fcomp
arpl
ficompl
xchg
insl
lea
push
ljmp
and
lahf
cmp
sbb
dec
repnz
popa
pop
in
arpl
shlb
call
cltd
jmp
test
dec
shl
xor
fistpl
dec
lock
cmp
xchg
ficoml
dec
scas
dec
movsb
clc
ljmp
sbb
ljmp
fsts
xor
enter
pop
pop
and
outsl
and
int3
inc
xchg
cmp
ljmp
pop
jnp,pn
dec
sbb
stos
push
pop
shlb
cmp
repz
or
movsb
mov
cld
decl
mov
cmp
mov
dec
xchg
subl
call
inc
loopne
aaa
adc
movsl
inc
pop
adc
xlat
dec
mov
imul
inc
incl
inc
xchg
iret
push
movl
lods
xor
mov
sar
dec
pushl
fwait
stos
arpl
gs
test
movsl
cmp
repz
pushl
sub
fidivrs
push
mov
mov
stos
out
insl
imul
sbb
pop
jno
lcall
call
loope
cmp
jge
add
hlt
fistpl
cmp
call
sbb
jp
int3
adc
stc
in
adc
loop
sbb
adc
cmpsl
loopne
ret
add
outsl
jle
xor
loope
jbe
cld
mov
pop
sub
fwait
adcb
loope
lcall
adcb
adc
out
out
and
lea
mov
arpl
nop
pop
test
adc
ljmp
neg
cmp
jl
test
stos
adc
pushf
push
xor
cmpb
scas
jb
fdivr
jmp
mov
add
pop
rol
push
pop
test
add
int
std
fcom
jmp
lcall
xchg
paddd
stos
cmp
lret
nop
inc
push
lock
test
in
xchg
cs
nop
movsl
loop
out
imul
incl
jnp
inc
rorl
bound
or
cmp
sbb
movsl
pop
or
stos
mov
js
cs
popa
scas
aam
xchg
dec
inc
xchg
xor
ljmp
push
ljmp
add
or
mul
ror
mov
call
movsl
mov
dec
jle
sbb
arpl
cld
pop
inc
jno
lcall
rorl
and
dec
mov
push
xor
pop
iret
shlb
pop
mov
cmp
or
jp
incl
aas
inc
jge
jmp
add
pop
popa
cld
test
add
cmp
sbb
popa
int
cli
ljmp
jge
mov
push
add
in
in
inc
daa
aas
negl
aam
pushf
daa
idiv
ljmp
fimuls
pop
or
or
add
sbb
push
mov
stc
push
xor
xchg
cwtl
push
cld
mov
push
nop
adc
call
ljmp
out
icebp
cmp
lahf
mov
add
or
dec
divl
ret
imul
sub
or
and
push
out
fstpt
inc
sahf
mov
mov
mov
std
fisubrl
icebp
ucomiss
fsubrl
add
loop
add
add
out
call
push
and
push
adc
repz
mov
jns
es
pop
arpl
dec
arpl
pop
incl
cmp
fs
inc
outsl
pop
bswap
jecxz
fsubs
mov
ljmp
xchg
or
ss
adc
mov
mov
das
ss
andl
fwait
jle
and
mov
cmp
jecxz
mov
fs
ljmp
push
pop
sbb
ljmp
adc
fdivs
xchg
sbb
jmp
popa
dec
xchg
neg
movsb
gs
cmp
mov
adc
mov
out
mov
call
mov
pushf
cmpsl
cs
ret
pop
mov
xor
pop
outsb
inc
arpl
int3
movsl
call
mov
lods
js
mov
xor
jg
insb
adc
mov
add
dec
mov
icebp
pop
fisttpll
mov
jle
cmp
popf
pop
mov
mov
hlt
mov
dec
mov
sub
sbb
repnz
scas
stc
sbb
pushf
ret
xchg
cmp
pop
dec
je
mov
pop
clc
aas
jmp
mov
pop
xor
xchg
push
sbb
imul
inc
mov
jnp
data16
cmc
dec
pop
jecxz
loopne
adc
cmp
into
pop
movsb
xchg
stc
imulb
fcoml
aaa
cli
or
lea
imul
xchg
mull
and
shufps
divb
sahf
lock
call
insb
outsl
fistl
mov
aaa
mov
clc
push
int
lods
je
ljmp
ss
sub
out
mov
pop
and
mov
xchg
dec
adc
vfmsub132pd
rcl
decl
add
fs
dec
dec
jge
out
add
lcall
int3
loop
hlt
push
xchg
lcall
push
mov
sahf
xchg
pop
lcall
fldl2e
mov
xchg
fs
rcll
adc
mov
mov
fsts
push
mov
cmp
push
mov
or
add
clc
cmp
loope
sub
xchg
dec
pop
int
jmp
mov
ljmp
adc
push
dec
in
popf
mov
mull
aad
mov
push
add
jno
pushl
aam
jg
jg
xor
jns
hlt
jl
add
jnp
pop
jecxz
xchg
js
mov
js
mov
sahf
sub
call
sbb
xor
adc
and
push
incl
xchg
mov
fcoml
sub
mov
repnz
inc
dec
or
out
xor
mov
nop
sar
stos
ljmp
into
xlat
mov
dec
dec
xor
scas
imul
xor
xchg
sub
bound
pop
lods
int
out
sbb
lcall
mov
pop
xor
and
pop
nop
or
rolb
mov
sar
subb
sub
mov
ret
call
lods
test
cbtw
frstor
shl
out
test
or
mov
and
push
mov
imul
movsl
cld
je
loope
jp
aaa
outsb
mov
dec
popf
xor
incl
or
and
out
rorl
push
xchg
ljmp
hlt
out
adcb
dec
cli
mov
idivb
cltd
mov
out
pop
fistps
or
and
ja
stos
xchg
lcall
std
xchg
mov
or
mov
pop
push
and
adc
lcall
mov
out
stos
pop
xor
jecxz
inc
adc
or
add
inc
ljmp
hlt
mov
fs
int3
sarb
xor
cmp
icebp
pop
outsb
aaa
or
test
mov
push
nop
lret
loopne
xchg
cmp
jae
ja
pop
das
xchg
dec
xchg
jge
inc
mov
movsl
bound
call
cmp
cmp
leave
dec
cmp
inc
xor
mull
jmp
pushl
pop
mov
jp
pushf
int3
out
inc
inc
mov
sub
sub
sbb
push
push
in
add
stc
mov
out
cli
mov
inc
adc
jle
fisubl
mov
ret
mov
loope
push
loope
repz
ljmp
push
scas
and
lret
into
fldt
push
addl
popa
mov
mov
incl
stos
jo
fnstcw
mov
rorl
in
cmp
rorb
push
xor
push
mov
sahf
popf
stc
iret
lock
sti
mov
pop
sub
push
add
dec
push
nop
jg
scas
cltd
out
adc
sbb
push
push
adc
imulb
xor
movsl
pop
or
les
push
ret
decl
fcoms
push
xchg
or
push
add
and
mov
adc
mov
int
jl
cld
std
or
sub
or
inc
inc
fisttpll
outsl
ljmp
mov
lret
cs
out
mov
xor
pop
jg
pushl
insb
dec
or
outsl
adc
movsl
or
clc
inc
jge
in
ljmp
xor
clc
shll
mov
gs
jbe
adc
rorb
decl
test
aaa
fwait
dec
nop
mov
and
jmp
pop
mov
lea
lcall
sub
in
mov
fldcw
jecxz
cli
das
dec
sti
inc
jge
outsb
ret
add
stos
dec
jl
ljmp
and
xchg
leave
mov
mov
lret
mov
sbb
cmc
mov
ljmp
lock
test
jae
bound
insl
and
into
cmp
bound
mov
jmp
jo
or
cmp
out
fcomps
repnz
xchg
pop
pushl
inc
sbb
enter
add
ret
movsl
push
dec
jg
pop
sbb
jg
fisttps
insb
pop
cmpsb
icebp
sbbl
ja
call
gs
push
ljmp
flds
mov
xchg
inc
std
sub
pop
xchg
incl
cmp
es
dec
jbe
add
imul
call
test
decl
pop
iret
cmp
mov
fdivrp
stos
dec
dec
cmpsb
mov
pop
stos
jl
xchg
int
or
jmp
pop
xor
xor
sbb
fdivrs
mov
mov
jae
cmc
push
aaa
push
movsl
das
mov
loope
subl
bound
in
cs
mov
xor
call
dec
fisubl
std
push
jne
ficomps
lret
stos
std
mov
test
decl
cmp
std
out
mov
imul
ret
fadd
cmp
decl
shl
pop
adc
imul
ret
gs
or
xchg
ljmp
xchg
cmp
aad
ljmp
jnp
movsb
and
adc
repnz
decl
outsl
pop
bound
fidivl
fstps
lods
aaa
dec
mov
pop
cmp
add
enter
inc
bound
addl
inc
xor
das
dec
push
ret
lcall
psllw
or
mov
and
in
lods
mov
lock
in
jne
lcall
jbe
push
xchg
mov
push
decl
or
or
divb
xor
pop
ljmp
mov
aad
testb
xlat
sub
push
mov
leave
xchg
jnp
lock
leave
inc
mov
incl
and
shlb
addl
cmp
add
jnp
fiadds
jbe
lcall
imul
neg
insb
dec
scas
mov
insb
pop
test
aaa
adc
outsl
into
ds
out
out
insl
rolb
pop
cmc
push
rolb
int
sbb
sbb
test
mov
decl
in
adc
cmc
mov
adc
icebp
loop
out
and
fwait
lcall
cwtl
mov
add
aad
test
shll
stos
lea
rcl
dec
xchg
call
and
push
hlt
sub
push
mov
movsl
dec
push
test
stos
ds
insl
adc
pushl
kmovb
hlt
inc
inc
in
lds
xor
inc
or
leave
popa
pushl
nop
push
aad
add
add
leave
and
jle
pop
mov
mov
xchg
push
push
dec
xchg
cmp
or
rcrb
mov
push
jecxz
add
cmp
jle
out
pop
or
jp
lock
ret
mov
dec
call
sub
lcall
jmp
dec
cmp
inc
test
movsl
mov
sbb
sar
or
mov
inc
jge
mov
pushl
ds
in
cmpsl
pop
inc
lret
sbbl
hlt
in
dec
inc
or
jbe
lret
jg
push
lcall
stos
stos
sub
xchg
lret
push
xchg
push
pusha
pushf
xchg
adc
pushl
ja
addr16
ja
dec
popf
lea
mov
jl
les
jge
clc
fnstsw
inc
test
jl
adc
xlat
scas
daa
mov
js
clc
push
negl
cmpsb
call
int
icebp
push
fisubrs
enter
loop
jmp
ljmp
inc
in
pop
jbe
sub
enter
xor
rcl
or
xor
es
call
push
sub
addl
in
pop
xor
repz
sub
repnz
xor
jg
scas
mov
scas
dec
nop
loopne
cmp
add
push
int
cmpsb
pop
add
stos
decl
dec
je
aam
lds
enterw
fstpt
cmpsl
inc
cli
and
mov
lahf
call
das
xor
loopne
movsl
out
add
dec
mov
sub
mov
add
int
mov
incl
xchg
mov
pop
add
lcall
ror
push
mov
decl
xchg
ljmp
mov
jnp
shlb
decl
inc
push
jl
and
xchg
push
jg
outsb
add
and
test
add
and
pushf
rep
pushf
pop
push
ljmp
frstor
pop
mov
ja
push
cs
jmp
bound
xlat
and
ds
cwtl
lods
mov
outsl
mov
dec
in
or
inc
lret
pop
pusha
mov
fistpll
stos
sahf
leave
xchg
xor
jno
dec
test
push
aam
das
or
inc
data16
jecxz
stc
cld
pop
mov
sti
mov
shrl
lock
add
add
pop
jne
scas
fdiv
jbe
pop
lahf
es
sbb
sbb
ret
jg
arpl
mov
pop
std
and
dec
push
inc
fs
cmp
ds
out
dec
addb
pop
sub
sbb
les
mov
popa
pop
pop
and
call
push
fnstenvs
push
jp
add
add
ret
rorl
loopne
lahf
jb
testl
add
inc
xor
out
cmpsb
sahf
or
aad
dec
cmp
decl
mov
movl
int3
adc
xchg
cltd
mov
xchg
gs
dec
xor
inc
pop
shl
jno
out
repnz
mov
cwtl
cmpl
insl
dec
sbb
jnp
mov
cmc
aam
jmp
mov
mov
jmp
mov
loopne
aas
into
je
cmp
sub
scas
aam
cmp
xchg
popf
mov
pushf
pop
adc
call
outsb
jo
rorl
aas
xchg
enter
sbb
cmp
rcrb
aaa
pusha
xchg
inc
sbb
jmp
inc
xchg
add
insl
mov
sub
outsl
sub
lods
rolb
jmp
xchg
xchg
sti
sub
xor
xorb
mov
fprem
subb
sub
int
push
lret
addl
xor
cmp
sub
das
lret
lret
mov
mov
repz
repnz
jg
inc
jmp
clc
subl
sbb
mov
pop
push
ret
cmpb
xor
add
push
mov
push
jno
push
dec
pop
inc
decl
std
push
inc
cmpsl
fistps
in
cli
outsl
mov
cmpsb
inc
and
pop
mov
mov
sbb
sub
push
cmp
dec
std
mov
push
cltd
xchg
cwtl
rcrb
dec
imul
inc
jge
fcom
dec
sbb
jne
scas
outsl
pop
and
jmp
dec
cmp
pop
mov
incl
mov
iret
xchg
test
js
imul
fsubrs
nop
js
das
pushl
push
jp
or
icebp
xor
xor
ror
and
xor
mov
jle
or
pushf
fwait
pusha
dec
cmc
out
pusha
mov
ljmp
and
pusha
push
xchg
mov
nop
push
dec
xor
jnp
hlt
incl
rclb
fistl
insl
jo
sbb
movsl
push
sti
call
movsb
xor
pop
test
incl
inc
outsl
and
lods
ja
popf
out
add
test
adc
insl
jle
mov
mov
jae
movsb
daa
mov
xor
and
in
pusha
sbb
xchg
ljmp
add
mov
mov
scas
fadds
mov
sbb
shlb
lret
sbb
jmp
mov
mov
xchg
mov
gs
xorb
fwait
lods
adcb
arpl
lods
test
in
mov
mov
sub
add
in
pop
jo
lods
push
sub
mov
divb
jge
in
mov
xor
and
mov
mov
decl
cmp
neg
mov
adc
push
mov
loop
mov
rol
pop
pop
adc
xor
xchg
push
mov
adc
inc
sub
or
jno
test
add
mov
mov
shlb
jge
ror
inc
jecxz
jg
stos
sbb
movsl
out
fisubrs
adc
pop
xor
mov
and
incl
data16
cmpxchg
adc
xchg
shlb
push
ficoms
dec
xchg
xlat
clc
pop
cmp
in
and
cmp
test
testl
pop
imul
imul
and
daa
ret
xchg
popf
adc
mov
mov
test
dec
push
xchg
dec
mov
out
imul
sbb
in
cmp
cmpsb
cmpsl
nop
and
mov
cmpsb
cwtl
adc
adc
push
decl
jae
or
ds
daa
mov
rclb
xchg
or
lcall
pushf
jg
sub
jb
push
out
mov
insl
push
push
xchg
clc
das
cmp
inc
fimuls
decl
std
dec
loope
jae
test
les
dec
loop
xchg
stos
lds
cmp
mov
push
mov
cld
sub
and
mov
movsl
in
cmc
test
into
iret
cmp
pcmpgtb
out
mov
push
stos
push
stos
push
aaa
mov
jecxz
jl
mov
dec
in
gs
lds
incl
in
lret
push
push
push
and
aaa
cmpsl
cmpsb
into
push
push
inc
jno
mov
into
jp
inc
ljmp
push
iret
pop
push
pop
and
mov
paddd
mov
cmc
lcall
dec
mov
out
fistpll
pop
xor
test
pop
movsb
mov
cli
fdivrl
mov
repz
xchg
inc
shrb
pushl
jmp
aas
pop
jbe
mov
mov
cmp
subb
mov
call
dec
sub
cmp
iret
hlt
xchg
nop
xor
inc
fsubrl
mov
lcall
out
leave
addl
or
sub
stos
dec
mov
mov
xchg
inc
jno
addl
xor
xlat
dec
and
mov
mov
push
mov
mov
mov
and
add
sbb
sub
loopne
mov
call
cltd
pop
cmp
xchg
stc
aam
and
adcb
mov
cmp
incl
data16
xchg
or
inc
push
pop
mov
incl
movsl
out
loop
inc
lcall
push
push
or
lock
push
call
adc
ss
xlat
scas
sub
and
jmp
push
cs
aas
mov
outsb
cwtl
lods
fwait
inc
call
lret
ret
xor
xor
dec
push
fcmovnbe
icebp
je
gs
cli
dec
incl
dec
or
cmp
mov
outsl
pop
sbb
jmp
pop
sbb
lcall
dec
add
push
pop
fidivrl
lods
flds
add
ljmp
mov
rcrb
and
mov
cmp
inc
or
call
add
pop
imul
jne
xchg
fsubrl
xor
bound
daa
lcall
test
mov
negl
mov
stos
sbb
pop
mov
jp
jl
into
mov
mov
call
add
and
add
cltd
out
mov
push
jnp
movq
lods
pushl
mov
xlat
xchg
pop
es
int
stos
or
xchg
popa
cs
iret
dec
shll
jmp
sub
leave
stos
sbb
outsl
scas
cld
jbe
test
cwtl
or
ds
orb
ljmp
or
test
and
fcmove
scas
mov
push
rclb
loop
add
jmp
ljmp
adc
leave
sbb
cmp
mov
xchg
gs
loope
out
ret
jno
ds
adc
leave
hlt
add
out
cltd
jle
adc
rcrl
lcall
jg
mov
cmp
xchg
mov
xor
add
and
sbb
in
decl
pop
repz
lods
mov
jo
inc
or
push
pushf
add
lret
push
dec
xor
hlt
dec
fistps
pop
cli
ljmp
mov
push
pop
dec
out
fwait
push
pushf
aam
jmp
insb
jg
inc
adc
lcall
scas
add
mov
jmp
pop
das
and
sbb
repz
ret
pushl
or
pop
and
sarl
dec
fnstcw
push
jnp
sub
movsl
fildll
cld
call
aas
aam
add
push
xchg
add
and
or
dec
mov
inc
int
xchg
fadds
push
mov
clc
fists
sbb
in
push
lcall
inc
xchg
incl
psubsw
jp
scas
int3
jb
popf
lret
fldt
decb
pop
xchg
lret
cwtl
adc
xchg
sub
loop
pushl
add
push
pop
mov
jge
jecxz
jg
push
enter
pop
rcll
ja
and
pushl
cmp
pop
or
cmp
mov
call
das
sbb
inc
sub
cmp
out
mov
mov
adc
pop
nop
dec
pushl
dec
push
hlt
dec
push
mov
dec
dec
stc
cli
sbb
jp
cmp
aam
scas
mov
lret
jecxz
mov
ret
and
cmp
jge
leave
test
push
mov
mov
cmp
push
inc
imul
decl
lock
adc
jecxz
les
mov
sub
cmp
jle
jl
loope
pop
stos
mov
popa
mov
mov
arpl
out
dec
ja
leave
lret
jecxz
or
pop
sbb
mov
xchg
add
call
fs
shl
inc
mov
pop
xchg
out
and
aas
mov
popa
mov
stos
call
ss
cld
test
xlat
in
stos
enter
aas
pop
js
pop
adc
in
movsl
jno
push
ja
xchg
int
movsl
and
cli
loopne
push
daa
addr16
sbb
pop
arpl
stc
pop
lods
jge
sub
jmp
popf
push
xor
pminub
mov
repz
xchg
cmp
mov
std
scas
cltd
cltd
fistpl
fstl
outsl
nop
inc
push
loope
sti
xchg
call
mov
jge
push
mov
mov
cmp
das
cmp
mov
mov
add
ss
jle
mov
loop
daa
jbe
outsb
daa
rol
enter
lea
cltd
ss
dec
les
mov
jmp
test
jp
stos
push
les
xchg
pop
sahf
ds
inc
xor
cmp
decl
jbe
dec
pop
or
xchg
mov
je
xchg
xor
adc
out
aam
mov
call
js
aad
pop
inc
sbb
ret
repz
test
arpl
xchg
ficoms
jg
je
stos
jecxz
lcall
push
xor
xchg
in
add
cmp
ljmp
xor
jo
inc
inc
xor
jae
xchg
popa
je
or
sub
and
fisttpll
sbb
adc
push
aaa
incl
into
inc
add
sub
outsb
data16
idiv
mov
sub
hlt
or
push
mov
or
dec
jl
jg
leave
test
mov
jecxz
jle
xchg
lcall
cmpsl
pop
incl
test
dec
add
nop
lret
mov
gs
aam
mov
lcall
outsl
pop
push
xor
fwait
daa
aad
mov
cmpsl
lds
inc
fldcw
mov
jmp
push
adc
and
push
and
cmp
push
insl
jns
add
call
mov
adc
mov
xlat
mov
pop
cmp
imul
fdivr
pushl
pop
and
fs
and
jo
jecxz
cmp
test
mov
in
jecxz
mov
test
ljmp
dec
lods
pushf
outsb
dec
scas
inc
repz
jnp
and
adc
jmp
lock
dec
sub
test
sbb
mov
pop
cmc
decl
shrb
jb
aas
pushaw
xchg
and
daa
dec
push
sbb
stos
sbb
jg
lcall
xor
pushw
enter
mov
mov
sbb
xchg
mov
dec
inc
fs
mov
sbb
jo
clc
lods
cmp
mov
mov
adc
incl
ds
inc
lret
stc
lock
nop
xor
lock
popf
les
cmc
sub
push
inc
adc
xchg
pop
gs
cmp
mov
xchg
mov
int3
shlb
xchg
ljmp
in
scas
xchg
sbb
add
ret
xor
dec
cmpsb
sti
sets
repnz
add
inc
sub
pusha
js
stc
mov
mov
ljmp
mov
sbb
pushl
std
cmp
dec
add
mov
mov
add
cwtl
fcomip
mov
insb
notb
clc
xchg
xlat
sti
daa
rcl
cmp
icebp
mov
cmpsl
cs
lcall
push
add
aad
pop
xchg
mov
movsb
mov
fwait
dec
cmp
out
fldt
in
cmpl
es
dec
cltd
pushf
stc
out
cwtl
popf
sbb
clc
fistl
out
lret
xchg
ja
or
dec
cmp
adc
leave
gs
mov
and
mulb
inc
jmp
inc
mov
mov
decl
inc
dec
test
lahf
cmc
addb
shlb
lds
divb
cli
ret
incl
outsl
mov
jp
stos
and
sbb
jp
fxch
pop
fidivrs
mov
ret
stc
sub
push
mov
dec
add
enter
add
dec
lahf
xchg
cwtl
xchg
gs
cmp
scas
scas
jae
ljmp
xchg
lcall
loop
and
lods
test
mov
and
decl
loop
xchg
test
mov
mov
push
jnp
jnp
sti
cmp
incl
cmp
movsl
sbb
and
cmp
rcl
sbb
jecxz
dec
adc
int3
movsl
pop
loop
cmp
fdivrp
xor
cli
nop
mov
jmp
push
mov
mov
dec
cli
xor
sbb
lcall
fimull
jnp
cwtl
dec
fnsave
test
loope
stc
stos
or
pop
std
ds
sahf
pop
push
fnsave
mov
pop
mov
pusha
jae
cmpsb
sub
iret
out
in
cli
scas
leave
leave
dec
cli
pop
les
into
inc
bound
bound
lock
mull
mov
lds
jmp
sub
fldenv
mov
xchg
inc
jae
cs
je
fincstp
shl
add
xor
xor
out
push
gs
popa
adc
fnstenv
ss
mov
mov
faddl
ljmp
xchg
pop
test
js
enter
mov
push
lds
mov
sub
lcall
mov
in
and
lea
dec
cmp
jns
pop
pushf
jg
inc
outsb
fcomp
fadds
mull
mov
sbb
mov
call
ret
xor
dec
mov
pop
cmc
pop
stc
xchg
pop
lods
mov
scas
shlb
fwait
fwait
jno
out
jecxz
jp
outsl
mov
in
xor
mov
adc
jbe
leave
or
inc
jnp
or
xchg
incl
rorl
cmp
inc
push
lods
imul
inc
test
fisubs
fsubr
fs
gs
lock
stc
call
mov
mov
push
and
xor
cmp
mov
xchg
lods
sub
mov
ja
and
sub
inc
or
cmp
call
and
cbtw
sbb
dec
pop
es
dec
and
mov
jae
dec
push
add
add
incl
jnp
out
mov
pop
pop
xor
pop
jmp
nop
sbb
leave
lahf
pop
fadds
cld
pushl
in
movsb
lcall
pop
cld
push
stc
inc
adc
pop
call
incl
outsl
or
les
sbb
js
or
push
movsb
cmp
push
jp
dec
imul
out
push
mov
aas
out
xchg
test
mov
jle
jae
sub
adc
xchg
mov
pushl
mov
in
rolb
xchg
scas
and
push
in
push
stos
mov
outsl
clc
pushl
cmp
inc
dec
add
adc
push
fcoms
cli
ljmp
dec
int3
dec
stc
int
or
outsl
loope
cmpsl
mov
call
add
pop
mov
sbb
mov
xor
jnp
out
es
sub
call
call
mov
xchg
mov
mov
inc
push
xor
inc
repz
push
xchg
cmp
add
sahf
push
inc
leave
dec
push
mov
inc
push
lea
mov
mov
lcall
hlt
mov
cltd
mov
mov
mov
sbb
xchg
cwtl
lahf
loope
inc
aam
mov
add
decl
icebp
cli
xchg
fwait
jnp
xor
es
out
jg
and
cmpb
iret
test
dec
xor
mov
pop
mov
pop
in
leave
enter
inc
loopne
ja
fld
dec
gs
pusha
fadds
dec
repz
xchg
add
sbb
lds
xchg
incl
icebp
pop
cmpsb
fisttps
jmp
xchg
cmp
add
jns
lods
fs
pop
adc
sbb
incl
cld
pushl
aaa
imul
enter
std
mov
lcall
add
fwait
or
test
inc
loop
sbb
cmpsl
mov
mov
fldt
dec
clc
xor
mov
ja
mov
mov
mov
sar
decl
cld
pusha
mov
and
xchg
aam
dec
mov
add
or
mov
dec
mov
sub
adc
adc
scas
mov
repz
dec
cld
pop
jge
jno
js
outsl
int3
cmp
je
push
mov
jns
out
sbb
mov
mov
dec
por
sbb
xor
jmp
leave
lret
push
aam
cli
or
neg
mov
aas
stos
test
pusha
inc
sbb
sbb
cmp
sti
add
push
jecxz
pop
pop
fsubrs
mov
scas
xor
bound
pop
cmp
add
pop
insb
xlat
jg
incl
jns
or
loopne
adc
fldcw
lods
mov
add
and
cmpsl
push
jg
mov
fcoms
or
loope
cmc
repz
mov
mull
es
jg
fildll
jg
fs
inc
test
inc
leave
ret
es
mov
fidivs
pushl
inc
imulb
inc
gs
adc
data16
inc
dec
lods
inc
mov
lcall
popf
pop
adc
rcrl
loopne
repnz
jae
xchg
adc
push
in
sub
int3
addr16
cli
call
pop
mov
ss
cmc
xlat
dec
movsb
out
push
cmc
pushf
hlt
adc
push
frstor
ja
ss
dec
mov
jle
xor
push
xchg
rcr
xor
adc
sbb
lcall
fists
sbb
mov
add
jg
jg
pop
add
mov
sbb
mov
fisttpll
rcl
mov
sub
test
out
je
pop
aas
in
mov
call
shll
mov
cmp
push
or
pop
push
imul
fisttps
test
mov
pop
test
jns
sti
push
pop
fisubs
decl
int3
or
mov
loop
adc
pop
ficomps
cmpsb
test
pop
cmc
lcall
mov
sbb
call
mov
ja
push
mov
jb
incl
das
call
adc
pushf
int
add
jp
arpl
inc
jg
decl
in
out
rcll
xchg
sub
jb
arpl
pop
xlat
cmp
ss
mov
les
xor
jg
sub
in
xor
xchg
push
xchg
mov
add
aam
rorl
imul
shrb
enter
arpl
outsl
in
cmp
leave
jo
decl
mov
cli
sub
pop
into
jmp
adc
xchg
sar
mov
aad
ret
push
std
call
andb
lods
inc
lods
sbb
lret
mov
dec
out
stos
cs
icebp
incl
lds
daa
push
lock
test
push
loope
push
fadds
imul
js
xchg
sbb
ljmp
push
inc
push
je
out
xor
ret
clc
decl
push
fsts
jbe
jg
sbb
pop
jbe
mov
decl
jb
jne
cwtl
and
and
mov
cwtl
jae
outsl
mov
call
ret
icebp
loopne
sahf
inc
fcom
je
lret
dec
adc
xchg
sub
ret
bound
mov
dec
arpl
shll
sbb
jl
cmpsb
cmp
pop
dec
mov
or
notb
fidivl
lret
adc
lcall
mov
push
xchg
pushf
dec
movsl
mov
push
scas
and
mov
stos
ja
jmp
dec
shrl
cwtl
adcb
leave
addb
push
rcll
insb
out
test
stc
aaa
inc
lcall
cli
arpl
mov
shll
call
aaa
pop
xchg
mov
sti
incl
xor
lds
and
imul
push
adcl
ret
cmp
out
out
packssdw
ret
or
inc
cld
mov
push
sarb
ret
jg
addr16
hlt
outsb
gs
cmpsb
xor
jecxz
std
stc
fldenv
dec
lret
push
decl
pop
jl
sub
test
add
std
movb
xchg
clc
filds
jge
jo
add
loope
jnp
jmp
jl
std
nop
lcall
ret
pop
out
leave
push
jnp
xchg
popf
xor
fwait
jo
mov
pop
add
dec
push
and
inc
sub
nop
push
jno
in
inc
cltd
mov
jg
shll
inc
push
sbb
mov
enter
lods
inc
mov
fisttps
decb
push
fwait
gs
jmp
negb
cmp
or
loope
pop
mov
imul
pushl
or
add
ds
mov
cli
leave
lods
pop
jbe
in
decl
rcl
mov
insb
xor
push
jne
cmp
jns
mov
or
imul
add
push
daa
in
cmpb
and
xor
aaa
jecxz
icebp
aad
cli
push
fbld
xchg
insb
cmp
and
shlb
in
pushl
sbb
cld
cltd
sbb
out
cmp
sub
pushf
xchg
icebp
ljmp
inc
lods
adc
xlat
test
fadds
out
add
jg
sub
int
rorb
jo
pop
inc
xor
jmp
addl
adc
inc
in
rcr
cs
out
and
sbb
ljmp
outsb
jnp
int
xor
lahf
push
mov
imulb
arpl
sub
filds
ljmp
cltd
popa
push
fcmovnb
mov
outsl
sub
jb
fsubrl
pop
ja
cmpsb
filds
push
mov
in
out
aaa
es
repnz
xchg
bound
out
ljmp
lcall
add
pop
pop
sbb
mov
xchg
mov
arpl
rep
jmp
out
jae
adc
ja
data16
cmpsb
shl
add
int3
popf
icebp
out
fldt
jmp
cmpsb
and
decl
xchg
inc
cwtl
inc
in
test
xlat
cwtl
into
lea
inc
push
pushf
xchg
dec
sarb
clc
call
addr16
mov
cli
scas
dec
loopne
dec
add
or
shl
mov
cmp
cmpb
jb
je
pop
dec
xor
jmp
rorb
push
shl
lea
sub
dec
es
hlt
push
xorl
mov
adc
mov
call
push
std
mov
sbb
mov
mov
pop
xor
aam
push
loop
sub
push
les
or
dec
pop
inc
push
mov
repnz
mov
nop
cld
lcall
adc
dec
mov
dec
push
ret
je
decl
xor
pop
xchg
push
xor
out
add
mov
je
shll
out
push
mov
stc
mov
test
std
mov
jg
pop
jnp
sub
cli
or
stos
scas
call
mov
cmp
int
sbb
pop
pop
sbb
fists
insb
cmp
sbb
mov
pop
or
ret
and
jno
jmp
sbb
pushl
imul
mov
in
jo
jno
jbe
cmp
movsl
nop
enter
push
pop
sbb
xchg
out
hlt
lods
and
pop
es
xor
or
repz
lcall
mov
push
decl
ljmp
cmp
addr16
or
rorl
mov
std
call
or
imul
ror
jge
xor
jmp
mov
movsl
das
comiss
ja
inc
sbb
lods
pop
cmp
push
lcall
mov
iret
or
mov
call
mov
push
jmp
in
mov
mov
stos
ret
and
decl
mov
or
fcomps
push
mov
jb
das
stc
jl
add
test
call
out
jno
inc
into
xor
jl
loope
cmpsb
inc
pop
sub
jle
jmp
pop
stos
iret
pushf
adc
sub
es
popf
mov
jns
pop
mov
sub
push
cld
lcall
repnz
sub
aaa
movsl
pop
pop
insb
push
pop
inc
adc
test
incl
aam
xor
push
inc
cmp
cwtl
or
dec
pop
repnz
incl
scas
nop
cmp
dec
pop
out
pop
and
jae
pop
inc
push
push
movsl
sbb
mov
inc
add
out
jecxz
add
inc
outsb
out
shll
dec
inc
jb
test
jno
stos
and
fdivr
sub
push
jo
adc
lcall
jp
or
fcmovb
jne
imul
dec
repnz
outsb
adc
jmp
and
or
add
lea
adc
pop
mov
add
fsts
jecxz
mov
incb
dec
std
iret
scas
fwait
loop
cmpl
fwait
mov
mov
arpl
rcll
xor
mov
ret
cmp
push
sbb
dec
lcall
rep
dec
inc
fwait
jmp
lock
push
jns
ljmp
lcall
pushf
pop
inc
pop
rclb
cld
ja
push
es
pop
pop
jmp
and
jae
shll
in
add
lods
out
aad
pop
and
cmp
xlat
icebp
push
cli
imul
lods
shll
inc
cmp
in
add
cs
xchg
icebp
aaa
test
jge
std
cmp
in
test
cltd
scas
xor
and
jo
xchg
mov
lods
add
jge
call
inc
cmp
insb
add
ja
jle
mov
mov
sbb
xchg
mov
add
clc
int3
imul
imul
out
xchg
mov
lods
dec
pushw
ret
inc
add
in
outsl
cmp
decl
in
insl
mov
cmp
repnz
fnstsw
shll
cmp
lret
clc
push
adc
incl
mov
mov
mov
xchg
mov
dec
jmp
cltd
fnstcw
int3
sahf
out
sub
cli
push
aas
xchg
mov
push
and
test
call
andl
push
lea
dec
call
les
dec
test
and
push
jmp
mov
inc
fidivrl
ljmp
loope
inc
fs
pusha
jo
mov
dec
and
hlt
mov
pop
cld
stc
aam
pusha
xchg
lcall
pop
or
inc
and
inc
cmpsl
sbb
add
xchg
dec
add
inc
push
pop
cmp
loop
push
sti
repz
jl
sbb
mov
ljmp
fisubrl
sub
mov
pop
push
mov
jge
xor
pop
cs
call
inc
mov
aam
xor
pop
inc
add
jecxz
mov
push
add
mov
inc
repnz
lcall
loope
jp
fcoml
cmpsl
jno
aad
cmpsb
cli
pop
pop
ret
imul
fildll
lea
sub
insb
mov
pusha
push
xor
mov
sbb
scas
lcall
cld
cltd
xchg
sub
jecxz
fmull
jbe
jns
loopne
pop
sub
push
cmp
call
and
lods
mov
nop
and
decb
loop
pop
enter
decl
cli
xchg
xor
dec
ret
mov
inc
sub
incl
test
cmp
dec
push
fiadds
pop
mov
lcall
mov
loope
lcall
rorb
push
or
jle
fwait
and
leave
call
mov
lcall
mov
loop
and
insl
dec
cmp
sub
loop
les
inc
sub
xlat
imul
int
push
inc
push
stos
sub
imul
fidivl
hlt
insl
in
xchg
push
in
aaa
pop
lahf
outsb
mov
xchg
sbbw
xchg
pop
fbld
clc
sarl
es
mov
inc
dec
fstps
out
sbb
mov
lock
pop
inc
sbb
mov
pop
add
aas
xor
call
rorb
repnz
popf
mov
push
sub
leave
add
repnz
add
pop
in
fwait
pop
jne
and
add
dec
inc
test
push
mov
pop
jmp
cmp
ret
pop
or
enter
pop
mov
adc
dec
mov
test
movsl
or
nop
inc
xor
je
bound
cmpsb
in
xchg
xchg
cs
inc
loop
je
inc
or
inc
or
sub
xchg
out
pop
in
inc
clc
add
jae
es
lods
fldcw
leave
inc
decl
flds
mov
inc
daa
sbb
sub
aaa
jne
mov
dec
xlat
int
jmp
adc
outsb
fadd
cmpb
std
pop
push
incl
fistpl
int3
gs
push
repz
repnz
mov
rcll
or
clc
and
inc
or
or
xor
call
mov
insb
and
daa
aad
rcrb
jp
ret
adc
sub
fsubl
xor
shlb
jmp
push
pusha
sahf
mov
imul
push
mov
push
lcall
xchg
dec
inc
xlat
adc
popf
mov
pop
scas
jbe
jb
inc
pop
int
cmp
inc
mov
add
inc
xor
cwtl
add
mov
sub
jp
dec
ss
pop
mov
cmc
pop
dec
mov
out
inc
add
in
mov
clc
push
push
dec
cmc
inc
fs
add
test
mov
dec
adc
call
jae
push
hlt
mov
jl
fldcw
pop
lcall
das
test
pusha
cmp
dec
pop
push
jbe
lret
mov
std
xchg
inc
out
out
nop
or
dec
jp
push
mov
ss
inc
lcall
and
mov
fsubs
push
cvttps2pi
jbe
xchg
mov
gs
jle
mov
inc
xchg
iret
push
jo
jle
xor
daa
sub
pop
dec
lock
xchg
fwait
adc
pop
fwait
pop
xchg
nop
and
out
rclb
pop
andb
jb
jmp
inc
ds
in
stos
out
stc
xor
cli
jbe
jo
cmp
push
mov
or
xchg
inc
fcomp
adc
cmpsb
sarb
jbe
enter
adc
jns
sar
call
adc
addb
mov
std
imul
xor
xchg
add
pushl
adc
cmpl
sbb
inc
push
sbb
cmp
dec
cmpsl
sbb
sarb
orb
pusha
adc
jo
and
cli
pop
out
out
mov
aaa
xor
into
imul
std
push
mov
push
xor
lcall
lret
jb
xor
sub
mov
push
v4fnmaddps
mov
xor
je
decl
in
mov
xchg
sbb
push
fcoms
ljmp
imul
lcall
push
xor
ja
data16
xchg
pop
dec
dec
add
lods
arpl
faddl
dec
out
pop
incl
pop
dec
pop
nop
add
sbb
filds
idiv
and
popa
stos
pop
pushl
hlt
mov
ja
mov
test
mov
inc
pop
adc
cmpsl
outsb
jo
aaa
out
mov
lock
fnstenv
std
dec
imul
clc
jnp
fildl
add
lods
dec
xchg
mov
push
push
dec
sbb
cmpsb
mov
scas
mov
jmp
hlt
xor
inc
dec
pop
push
or
xchg
leave
mov
imul
ljmp
jae
sbb
xor
jp
lret
rclb
jmp
sub
outsb
dec
mov
call
stos
test
ss
mov
test
push
or
pushl
std
aam
pop
mov
test
mov
pop
jecxz
es
jmp
out
ljmp
ret
mov
mov
mov
js
mov
ljmp
in
xor
dec
xchg
dec
cs
inc
and
mov
fistl
jnp
sbb
lret
dec
adc
inc
push
or
xchg
sbb
mov
ds
jne
neg
cmc
outsl
inc
stos
mov
pop
cmpsl
cmpsl
inc
incl
enter
inc
inc
cltd
inc
popf
mov
cli
je
xchg
cmp
lahf
adc
cmc
xchg
outsb
add
jmp
push
or
mov
mov
faddl
lahf
dec
dec
push
cmp
arpl
push
mov
call
fcmovne
outsb
sub
ljmp
inc
in
jg
cmp
daa
adc
je
imul
adc
in
lock
add
mov
loope
xchg
pop
fdivrl
decl
sbb
testl
sub
popa
xor
sbb
xor
aas
aam
inc
pop
iret
cltd
test
dec
pushl
ret
bound
into
lock
scas
xchg
inc
ds
lock
cld
push
iret
push
test
jl
out
mov
xor
ret
xchg
lods
sarb
shl
nop
mov
cmp
repnz
jmp
aaa
jge
je
out
repnz
leave
in
clc
cmp
mov
pop
ljmp
xchg
shlb
or
xor
xor
inc
mov
pop
in
add
in
push
xchg
jno,pn
fcomip
lcall
cmp
pop
fdivr
sub
fwait
pop
jns
dec
es
inc
ret
lds
xlat
pushl
push
pop
or
fs
adc
and
fnstsw
mov
jg
and
ret
js
add
loop
out
les
movsl
xor
outsb
add
inc
idivl
cmp
sbb
clc
movsl
lcall
add
push
xorl
lcall
adc
hlt
lcall
rorb
insb
testl
stc
jnp
mov
inc
push
loop
mov
adc
mov
jg
popf
add
ret
imulb
ficoml
mov
in
sbb
in
imul
loopne
mov
jmp
sysenter
stos
sub
mov
mov
sahf
cs
sbb
std
mov
sahf
and
fnstenv
mov
jle
add
sti
das
insb
sbb
adc
cmc
lods
pop
scas
xchg
dec
mov
je
mov
in
jne
dec
pushl
in
and
imul
les
shll
out
add
iret
mov
mov
mov
add
fldl
pushf
fidivl
xchg
ja
fs
fs
mov
cmpsb
sbb
jno
mov
les
pop
sar
jmp
jg
lods
fsubs
rcrl
sbb
push
sbb
sbb
repnz
add
push
incl
repnz
aam
mulb
rorl
fidivl
xchg
stos
cld
xchg
xor
sub
sub
aas
int
iret
mov
jnp
xchg
ljmp
xlat
mov
div
sbb
cmpsb
nop
mov
mov
mov
jecxz
bnd
test
addb
jmp
cmpb
cwtl
xchg
lds
push
pushf
fstps
call
sbb
inc
and
pop
je
sub
scas
sbbl
cmp
mov
fsubrl
push
je
sbb
xor
stc
in
pop
fadds
pop
sub
mov
test
cmpl
icebp
sub
mov
xchg
dec
push
jb
dec
rcl
jg
pop
adc
incl
andl
fcmove
arpl
ret
adc
out
xlat
inc
xchg
cwtl
cmp
fnstenv
out
repnz
or
daa
cmp
jmp
sub
pop
cmp
or
inc
sbb
sbb
pop
dec
mov
decl
sbb
and
pushl
pop
ljmp
mov
sub
push
cmpsl
hlt
push
aas
dec
int
repnz
bound
ljmp
push
inc
test
mov
jle
shlb
aam
incl
xchg
dec
out
cmpsl
jnp
cmp
in
data16
int3
push
jae
aad
fcmovne
xchg
pushl
adc
cmc
sub
lock
pop
dec
mov
pop
push
jecxz
aaa
add
mov
mov
adc
out
lods
cmpsb
jg
jmp
in
out
in
shl
mov
adc
dec
in
scas
cmp
test
mov
mov
scas
inc
push
lods
fmul
cmc
fdivrl
insl
lcall
adc
mov
stc
int
dec
mov
repz
inc
mov
cmpsb
ds
xor
add
xor
sbb
cmp
adc
cmp
les
sbb
add
push
bnd
notl
mov
outsl
jg
lock
loopne
out
data16
push
cwtl
outsl
fnstsw
jmp
inc
inc
bound
xchg
xor
xchg
sahf
mov
jg
daa
mov
mov
jg
mov
ljmp
pop
fcoms
imul
push
adc
dec
movsl
addl
mov
xor
test
cmp
ret
or
xor
gs
mov
mov
xchg
push
mov
jp
je
xchg
ljmp
dec
xor
ja
cmp
inc
add
or
insl
pop
xchg
inc
incl
and
popa
les
mov
sub
cmpsb
push
aaa
popa
xchg
lods
mov
in
sbb
das
mov
incl
std
jmp
scas
gs
lcall
push
xchg
jae
push
out
and
loop
cli
mov
in
sbb
cmp
sub
bound
jecxz
ficoms
dec
jmp
sahf
mov
mov
and
cltd
mov
rcll
out
mov
mov
pop
or
dec
lea
cmp
nop
xchg
push
inc
arpl
adc
cld
xchg
insb
adc
sbb
adc
insl
dec
jns
inc
jb
fbld
dec
or
imul
jg
xchg
mulb
adcl
or
fiaddl
loopne
inc
jg
lret
popl
pushf
sub
outsl
cli
decl
shl
sbb
inc
aad
add
pop
jae
dec
fsubs
jg
clc
in
adc
xor
ss
pop
mov
mov
xlat
mov
test
push
orb
push
mov
sub
cs
cmp
mov
inc
adc
lods
sub
or
pop
lock
cmp
dec
sub
inc
cmc
and
fcompp
lret
cmp
subb
push
jns
repz
rcrb
mov
in
test
cmpsb
pushl
sub
fadds
sahf
mov
ds
mov
sub
scas
adc
lods
xor
adc
lds
ljmp
dec
xor
in
cs
xor
lds
add
nop
sahf
jp
xchg
aad
lcall
out
sbb
push
lock
ja
mov
xlat
cmp
ljmp
push
push
jbe
test
out
cs
push
mov
lcall
cltd
cmp
mov
jb
out
pop
inc
out
mul
mov
fwait
scas
jle
push
jp
pusha
xorl
idivb
mov
out
mov
jge
scas
aas
mov
in
jne
lcall
daa
stos
and
sbb
jno
filds
push
pusha
jge
inc
dec
gs
xchg
or
xchg
ljmp
jl
pop
push
add
mov
out
xchg
shrl
pop
bound
daa
sbb
in
pop
addr16
ljmp
xchg
mov
lahf
call
mov
in
fcmovnbe
int3
mov
pop
cmpsl
and
call
dec
push
dec
in
xchg
and
pop
sub
shrl
inc
xchg
pushf
loopne
mov
popf
mov
add
mov
shll
lahf
aaa
cld
call
xor
sti
xor
jns
sti
cltd
in
shr
pop
inc
decl
mov
xchg
jnp
cmp
arpl
inc
arpl
cmp
rcrb
pusha
jmp
mov
decl
rcll
nop
jbe
jno
lds
ja
js
add
and
push
stc
cmp
push
pop
pop
mov
sti
mov
sahf
push
clc
inc
add
mov
mov
std
call
cwtl
cmp
xor
inc
lea
cltd
dec
fdivr
ja
jg
iret
lahf
js
fs
adc
bnd
or
and
jmp
xor
jnp
sbb
add
fldl
adc
jo
dec
pushl
lods
sbb
cmc
scas
push
jmp
stos
pushf
xor
das
pusha
xchg
or
fcoml
das
push
inc
dec
xchg
decl
jle
sti
std
jecxz
in
call
bound
subb
jp
add
decl
psubusb
mov
push
xlat
roll
sub
adc
lcall
cld
fisubs
cltd
cmp
mov
and
addr16
push
sub
xlat
lock
gs
decl
adc
shll
daa
adc
rcll
or
dec
cmc
pop
lret
push
xor
mov
xor
xorb
icebp
mull
pop
call
ror
adc
mov
jno
sbb
test
or
inc
pusha
pop
test
insl
mov
icebp
sub
ljmp
inc
push
mov
push
in
mov
pushf
bound
sbb
call
fimuls
cmp
jge
stos
xlat
sti
insb
mov
shll
or
popa
clc
jmp
adc
mov
mov
xchg
xchg
inc
lds
in
shll
sbb
outsl
scas
jbe
cltd
xor
or
into
mov
xchg
enter
dec
daa
inc
mov
jl
loopne
xor
pop
hlt
scas
pop
cmp
scas
sti
pop
icebp
mov
or
xchg
out
pushf
mov
push
js
jne
cmp
imul
adc
ss
and
insb
sub
fdivrp
cmp
cmc
jg
inc
es
call
test
sub
fstpl
jnp
adc
mov
lret
lahf
test
and
mov
jns
cwtl
mov
movsb
lret
arpl
inc
sub
test
sub
pushl
sbb
or
lds
add
add
pop
std
mov
ficoms
sub
jecxz
pushl
fisttps
repz
call
push
popf
adc
mov
clc
ljmp
adc
add
adc
jp
call
push
xor
je
iret
aas
imul
ret
pushl
loope
aam
repnz
or
cmp
jl
jge
and
repnz
jecxz
fcmovb
pusha
lds
push
lahf
loopne
scas
xor
add
sbb
call
call
mov
push
inc
popf
loopne
sbb
ja
add
cmpsl
add
dec
cmp
or
mov
jle
sahf
and
mov
dec
sbb
gs
incl
addr16
clc
data16
into
rcll
xor
popa
push
into
push
lret
pop
dec
mov
pushl
cmpsl
and
mov
movsb
sbb
stc
push
out
mov
push
jmp
push
sbb
imul
or
shl
mov
push
jl
xchg
outsl
cmp
xchg
test
fdivp
inc
addr16
leave
daa
in
rcrb
jnp
push
shll
xor
loop
daa
xchg
jbe
xchg
fcomip
ljmp
jecxz
mov
sbb
mov
pusha
lea
cld
incl
cld
outsl
aam
popf
das
pop
cld
mov
adc
or
mov
or
sub
decl
frstor
lods
sbb
dec
test
loopne
and
leave
push
out
fldcw
notl
adc
cwtl
adc
jl
adc
cmc
ja
add
or
and
lods
push
pop
pushl
xchg
icebp
aam
scas
cmp
ds
divl
sbb
loop
ljmp
and
lcall
inc
popf
adc
push
adc
sti
adc
lods
fsubrl
xchg
int3
or
filds
lcall
add
and
ljmp
lea
xorl
lods
inc
mov
addb
outsl
insb
incl
mov
clc
mov
jl
ljmp
ljmp
outsb
add
fnsave
outsb
stc
pop
int
dec
add
mov
xchg
push
ljmp
fs
repnz
rol
loope
imul
inc
sub
addb
dec
cmp
and
jmp
imul
bound
fs
in
xchg
xchg
add
inc
lcall
ljmp
push
or
push
pop
sbb
test
pop
jbe
lcall
scas
sub
dec
orb
inc
dec
cwtl
not
jl
inc
mov
mov
xchg
pushf
cmp
lcall
mov
es
and
mov
int
shr
fnstsw
pushl
jl
dec
jmp
dec
or
fsubr
add
jno
lods
sub
push
in
mov
and
xchg
mov
test
cmpsb
sar
dec
or
jbe
inc
sbb
notb
imul
in
ret
pop
lods
repnz
sub
pop
push
ljmp
jmp
or
xor
jo
rol
push
bound
ss
inc
pop
dec
inc
push
push
sti
sar
lcall
incb
int3
dec
sbb
fs
lea
adc
sub
lods
enter
dec
mov
mov
and
rep
xor
xor
test
cmp
pop
dec
call
dec
rcrl
out
psraw
mov
jmp
ret
addr16
lret
sbb
inc
mov
clc
das
aam
das
sti
outsb
or
lcall
pushf
in
push
rorb
daa
inc
aad
pop
inc
adc
mov
jle
pushl
pop
js
lret
mov
gs
mov
sub
jecxz
ds
in
dec
andb
lcall
cmpsb
xchg
in
insl
int3
jne
push
and
rcrb
inc
movntq
fistpl
xorb
or
rclb
xor
fs
push
aad
int
ljmp
lods
inc
mov
adc
push
aam
lcall
cmp
inc
jmp
jae
repz
notl
xchg
or
xchg
out
sbb
es
push
cwtl
and
jae
scas
jle
dec
ljmp
mov
adc
push
in
jle
add
pop
std
push
out
fidivl
pushl
push
lock
jne
jo
icebp
int
shl
sarb
push
test
xchg
repnz
jmp
mov
lahf
or
aaa
std
xchg
xchg
xor
push
add
sub
cmp
or
dec
movsl
push
cld
call
lods
les
jge
in
mov
adc
xchg
push
xor
and
call
mov
cwtl
push
dec
inc
std
cld
out
jmp
lds
out
ret
add
mov
pop
mov
or
mov
insl
cld
daa
mov
je
jge
jnp
add
call
test
cld
adc
xchg
mov
push
adc
incl
inc
pop
out
lods
pop
jp
lcall
data16
incl
and
push
mov
aam
les
daa
sub
pop
out
lret
inc
and
add
xchg
lcall
adc
mov
popf
sbb
push
and
jle
dec
mov
mov
ja
sub
lret
mov
sub
movsl
jmp
pop
cld
jg
xchg
dec
jno
jle
jns
icebp
pop
std
orl
sbbb
pop
adc
inc
xchg
ja
push
je
je
inc
shrl
add
cltd
imul
loopne
int3
jb
scas
pop
loope
xchg
xchg
sbb
out
clc
ljmp
or
rcrb
sbb
xor
sub
jecxz
rcll
and
push
jmp
pop
jbe
mov
and
xchg
ret
enter
xchg
aas
fistpll
test
scas
hlt
jmp
push
jg
shrb
add
push
sub
jl
js
mov
mov
out
cmp
jae
fwait
cwtl
mov
sbb
pop
sbb
dec
scas
and
not
or
or
lcall
adc
push
push
dec
jmp
adc
cmp
jne
scas
popf
jp
imul
pushl
popa
mov
notb
rorb
lcall
add
das
cwtl
or
outsb
cmp
decl
pop
jecxz
mov
inc
mov
mov
xor
scas
or
jbe
int3
int3
add
or
push
cmp
mov
add
adcb
loope,pn
aad
mov
je
and
scas
cld
adc
push
lods
cmp
mov
jg
add
cmpl
aam
cltd
scas
cli
sub
lcall
mov
pop
fs
xor
test
call
cmpsl
outsb
insl
push
pop
loopne
mov
jns
jl
test
enter
in
sbb
xchg
xchg
es
repz
inc
inc
movsl
dec
inc
cmp
hlt
rcll
push
enter
mov
sahf
std
xor
mov
fsubrs
int
ljmp
pushf
pop
cltd
outsb
dec
jns
xlat
and
and
push
adc
cmpsl
mov
xchg
repz
fsubs
outsb
mov
mov
in
push
xor
pushf
incl
cmc
jbe
ds
push
sub
cmp
ljmp
lahf
int3
sbb
jns
test
mov
lcall
jle
add
insl
pop
push
jge
shl
adc
pop
or
jmp
jecxz
decl
aas
insb
aas
rorl
fsubrl
cs
into
iret
mov
insl
imul
decl
pop
and
adc
dec
ret
sub
pop
add
ds
inc
adc
jecxz
punpcklwd
push
enter
fcompl
test
or
mov
dec
ljmp
pop
xchg
jmp
xlat
adc
fidivs
mov
adc
dec
xlat
icebp
pop
daa
push
dec
push
ret
dec
xor
int
mov
sbb
or
subl
sub
sbb
outsl
cli
cmp
push
ret
jnp
roll
add
fadds
sub
mov
enter
sbb
ljmp
aas
mull
pop
mov
gs
andb
lock
scas
jo
pop
pop
out
mov
ja
jl
jbe
mov
scas
neg
iret
add
pop
lods
sbb
lds
decl
push
int
push
pop
jb
push
cmp
rorb
xchg
sbb
loope
mov
incl
loop
adc
adc
and
pusha
enter
incl
bound
or
popa
push
lahf
stos
xchg
in
hlt
inc
jl
stos
sbb
sahf
js
jmp
mov
and
push
js
inc
inc
daa
es
sbb
push
hlt
in
sbb
adc
pop
jg
call
push
inc
inc
xchg
ss
stos
xchg
sti
rorl
mov
ficoml
inc
pushf
fbstp
sahf
je
jmp
jmp
and
pushf
xor
mov
push
clc
push
aam
jne
fldl
xchg
mov
cmp
and
imul
popa
sahf
xorb
or
dec
fldcw
in
add
sub
xorb
rcl
scas
pop
push
outsl
aas
sub
dec
xor
ljmp
cmp
lds
aad
rclb
jmp
repz
sbb
push
hlt
lock
mov
mov
push
push
shlb
jae
stos
xor
mov
cld
jnp
ljmp
push
mov
lods
add
adc
ljmp
decl
cmc
cmc
jo
cmp
sbb
cmp
mov
les
pop
jne
imul
jg
or
into
add
dec
mov
fisttpl
ds
call
addr16
jb
jbe
pop
jb
lret
nop
scas
loope
add
test
mov
jecxz
fcmovu
pushf
in
dec
les
push
in
mul
int3
adc
xor
adc
fwait
dec
pop
xchg
pop
inc
mov
std
jno
mov
adc
popa
enter
pop
cmp
sbb
stos
addb
ljmp
mov
sub
retw
jmp
ficoms
ss
push
jns
ja
enter
mov
add
ljmp
imul
testl
ret
lcall
ljmp
pop
imul
outsl
inc
push
add
xor
pop
xchg
mov
push
xchg
sbb
jp
xor
mov
and
int
aad
adc
inc
std
enter
push
xor
pusha
mov
jbe
cld
cli
xlat
xchg
or
fisttps
lcall
mov
addl
inc
mov
add
lahf
les
jecxz
xchg
jle
cmp
pop
push
cmp
push
dec
xor
movsb
sbb
mov
dec
in
int
mov
jo
fwait
or
add
cli
sub
jae
inc
push
xchg
add
jg
push
and
cmp
jge
and
and
fbstp
mov
xchg
or
lock
je
xchg
dec
sub
adc
pusha
loope
push
jle
mov
incl
dec
mov
jb
or
push
popa
negb
mov
jg
jg
lret
jae
and
int3
adc
cld
mov
mov
aam
and
scas
mov
push
fcoms
mov
pop
mov
dec
pop
cwtl
mov
lcall
icebp
loopne
loopne
stos
lds
outsl
mov
mov
adc
jl
in
and
jne
push
add
jmp
mov
sbb
add
push
inc
dec
shll
sbb
fcmovbe
cmpb
push
adc
mov
notl
push
xchg
cmp
inc
shlb
sub
push
adc
pop
scas
fcoml
out
lahf
mov
and
add
mov
cmp
test
add
xchg
fdivp
jnp
or
sbb
xor
js
jle
mov
push
lahf
loope
sahf
xchg
push
fld
and
jbe
jo
pop
pop
mov
jecxz
clc
pop
add
movsl
fists
mov
mov
into
mov
shl
ja
incl
subb
xor
sbb
out
xchg
movsl
adcl
adc
out
cli
mov
and
sbb
dec
idivl
rcr
fcomi
loopne
mov
pop
inc
out
shrl
push
push
stos
jle
mov
cmpsl
adc
jmp
pusha
int
popf
jl
arpl
clc
and
sahf
fnstenv
jge
mov
xor
cmpsb
bound
mov
dec
in
inc
fsubrl
adc
and
leave
sub
in
adcb
push
decl
and
jge
or
add
adc
or
cs
push
repnz
dec
rcll
xchg
add
std
and
aas
daa
or
adc
popf
mov
mov
mov
je
roll
mov
sbb
xchg
popf
test
cmp
shlb
mov
sarl
push
mov
xor
cmpsb
add
sub
add
jg
popf
inc
es
jmp
mov
mov
in
fldenv
pop
dec
imul
lcall
ss
mov
fmul
cwtl
cmpsl
mov
lret
cli
cmp
xchg
add
fimuls
jb
decl
lret
pop
test
sarb
dec
inc
cmp
call
std
cmpsb
pushl
sub
movswl
adc
in
test
add
loopne
incl
jbe
loop
or
lahf
pusha
sub
pop
fldl
xor
mov
arpl
aaa
push
bound
adc
adc
enter
fadds
pop
mov
push
mov
mov
mov
fldt
lods
pop
adc
inc
mov
ljmp
inc
xlat
fwait
xor
test
mov
call
js
pop
aam
ficomps
and
xchg
shll
sbb
jmp
lods
mov
mov
out
sub
enter
dec
mov
clc
pmovmskb
inc
sub
sub
cli
lcall
and
dec
clc
pop
mov
xchg
into
inc
or
add
in
jne
shlb
es
dec
ds
add
cmp
dec
loopne
js
and
decl
nop
cltd
fsubrs
lret
jno
push
cmp
jb
pushf
ds
sub
cmp
iret
fmuls
jmp
int3
sub
stos
in
shrb
icebp
xchg
jnp
lods
lahf
prefetch
mov
jmp
xor
cwtl
jno
push
lods
pusha
mov
cmp
xchg
aam
cs
mov
push
xchg
sub
or
sti
icebp
jne
cmpsl
sub
jmp
jg
xchg
sub
jo
xor
or
mov
mov
test
icebp
enter
sti
adc
lcall
popf
sti
mov
pop
cmp
je
cmpsl
sub
sahf
pushf
std
push
ret
loop
push
jmp
add
lds
sbb
ss
lcall
pushl
std
lea
aaa
jg
into
shlb
dec
outsb
cmp
mov
push
sub
lcall
sti
inc
jle
out
bound
je
mov
xchg
imul
mov
push
adc
adcb
jmp
negb
mov
daa
xor
out
or
fisttps
bound
jo
test
dec
outsb
outsb
ss
mov
add
incl
scas
stos
jbe
push
push
xchg
jbe
or
icebp
int
div
andl
incl
and
mov
imul
rorb
imul
push
incl
mov
xor
and
jmp
push
cli
mov
xor
fwait
popf
sar
jmp
mov
push
pushf
shrl
mov
es
xchg
mov
jo
cmp
sbb
pop
cld
jmp
icebp
jno
loope
lods
cmpsl
add
rol
push
sub
xchg
outsb
insl
sahf
test
add
mov
push
stos
incl
xchg
jns
inc
add
pop
dec
dec
inc
sahf
cmpsb
testb
mov
sub
mov
pop
mov
popa
insb
sub
pop
xchg
or
call
dec
shlb
xor
sub
jae
and
aad
sbb
call
pop
dec
push
pop
or
push
adc
cli
call
pushl
sub
insl
add
les
xchg
push
adc
or
inc
and
cmp
in
shrb
push
pop
rclb
cmp
xchg
pusha
mov
in
les
push
outsb
adc
lcall
pop
rcrl
ret
imul
mov
out
inc
lret
sub
fcom
insb
dec
and
stos
push
pop
clc
inc
lea
dec
cmp
out
outsb
cmpsb
mov
cmp
xchg
sub
outsl
clc
sbb
jne
push
mov
scas
push
push
fisttpll
iret
fs
lret
pop
or
mov
addr16
lea
popf
jg
lret
popf
test
rcl
mov
cmp
dec
shll
scas
mov
mov
sbb
jbe
imul
fs
test
sbb
pop
clc
insl
cmp
ret
mov
ret
sar
jmp
cmp
sub
and
cmp
ljmp
decb
xchg
por
arpl
push
std
pushl
xchg
pop
adc
xchg
xchg
sahf
xchg
sbb
dec
into
fs
mov
sub
pop
xchg
sub
inc
insl
jmp
shr
pop
adc
bound
je
in
mov
inc
and
mov
adc
sarb
and
jg
jmp
in
pop
frstor
in
andb
insb
mov
decl
add
ret
dec
add
xchg
add
push
aaa
in
call
dec
adc
pop
add
arpl
xchg
push
dec
push
pop
sti
mov
hlt
jae
jb
fsts
and
jecxz
pop
mov
incl
mov
push
pop
push
and
test
mov
out
pop
and
rolb
mov
mov
ficoms
push
out
enter
sub
movsb
sbb
ljmp
mov
or
jnp
xchg
push
pop
or
addb
cmpb
jmp
mov
in
lea
repz
or
xlat
mov
inc
xor
insb
mov
and
or
sbb
sbb
sarb
imul
sbb
add
push
xchg
adc
cmp
push
sub
jg
in
data16
xor
cwtl
out
scas
mov
cmp
sub
enter
call
sbb
xchg
adc
insl
je
test
int3
stos
neg
aas
jbe
sub
stos
in
nop
ljmp
test
cmp
js
mov
test
sub
pop
cmp
dec
or
dec
mov
loopne
dec
imul
iret
rorb
call
pop
outsb
imul
sub
adc
sbb
jmp
cmp
xor
cmc
mov
cwtl
rorl
cwtl
call
mov
icebp
jg
rolb
ret
idiv
stos
repnz
pop
jl
ss
xor
jg
pusha
mov
test
aaa
adc
std
loop
mov
imul
aas
ret
aas
jbe
sbbl
add
mov
xor
sahf
insl
pop
sub
stos
cs
sarb
xlat
inc
test
in
mov
out
push
mov
inc
push
inc
les
xchg
loop
push
testb
mov
jp
pop
jg
inc
fidivrl
fidivs
pusha
cmpsl
repnz
jns
push
or
stos
imul
clc
mov
lcall
movsb
and
mov
scas
les
jecxz
and
sbbb
dec
int3
data16
ljmp
xor
mov
sub
daa
dec
enter
int3
aas
inc
sahf
mov
leave
loopne
lock
fistps
jns
or
sbb
repz
add
mulb
xor
iret
adcl
xchg
sub
daa
imul
mov
xchg
pushf
mov
dec
pop
adc
lods
adc
cld
call
enter
fidivl
fucomp
ljmp
jl
rorl
jne
xlat
xchg
pushf
push
inc
outsl
scas
out
mov
std
pushf
pushf
test
in
cli
jmp
mov
mov
jnp
cmp
push
aam
ret
xchg
push
mov
and
outsl
dec
popa
xor
mov
inc
ficoms
out
inc
inc
pop
jne
shlb
out
sbb
test
clc
mov
outsl
mov
insb
inc
lcall
jmp
test
adc
in
pop
sub
pusha
movsb
mov
stc
mov
xor
imul
sub
movsl
shrl
dec
xor
jne
movsb
icebp
jno
jecxz
jb
jns
imul
cmp
push
shrl
jno
lea
adc
filds
shll
sbb
dec
lahf
rcrb
lahf
add
xchg
push
ja
inc
imul
pop
stc
out
push
adc
push
mov
inc
in
pop
jp
ds
sbb
push
mov
movsl
dec
pop
pop
outsl
outsl
sbb
pop
pop
inc
inc
jmp
jg
jmp
push
cwtl
fcomp
incl
and
cmp
in
inc
sbb
mov
out
push
jecxz
sahf
adc
movsl
loop
imul
incl
cli
ret
imul
lahf
cmpsl
subb
dec
push
mov
or
decl
lahf
xchg
sub
xor
cs
aad
inc
xchg
mov
data16
decl
mov
icebp
xor
mov
mov
push
xor
push
pop
dec
sbb
mov
push
and
pushf
inc
mov
jb
pusha
push
in
test
push
jge
and
call
or
push
lods
into
dec
push
pop
cmpsb
in
or
loopne
mov
out
ljmp
mov
scas
adc
mov
push
xchg
xor
dec
jle
and
add
es
inc
mov
cmp
imul
daa
ljmp
cld
cmpl
xchg
dec
xchg
cmp
mov
and
jp
out
cwtl
dec
mov
push
rorb
sub
jns
std
dec
mov
test
mov
scas
pop
fldl
orl
call
mov
lcall
pop
push
fwait
mov
icebp
mov
xor
sbb
jg
scas
and
in
outsb
cmp
incl
out
xchg
fidivrl
or
mov
pop
stc
xchg
push
sub
sarb
fistps
out
xor
lcall
insb
jp
inc
aaa
in
int3
dec
or
daa
ret
and
fadds
sti
leave
mov
sbb
call
and
cmp
adc
cmp
mov
xchg
mov
sbb
mov
in
mov
call
aaa
sti
jmp
xor
imul
sub
xchg
int3
add
jge
xor
push
cld
fcomip
imul
adc
aas
pushf
xchg
int
xchg
jmp
sbb
add
xchg
jl
inc
jp
in
sti
sti
adc
xor
xor
ljmp
repz
jg
ljmp
out
out
pop
jns
fistps
xchg
add
jns
std
repnz
int
ljmp
or
and
les
dec
js
inc
mov
das
sar
xchg
fs
fwait
add
xchg
push
and
in
aaa
jecxz
ret
incl
mov
push
push
scas
inc
push
dec
enter
popa
arpl
dec
cli
lcall
push
fcomip
out
cmpsl
cltd
insb
int3
or
sub
mov
out
xor
push
lcall
or
pop
loopne
js
cmp
cmpsb
cmpsb
mov
inc
out
sbb
lcall
loop
aas
add
arpl
shll
mov
rorl
dec
fidivs
decl
cmp
adcb
in
scas
rolb
mov
daa
push
xchg
sub
mov
aam
mov
cmpb
movsb
lods
icebp
pop
into
std
mov
orl
std
cmp
pop
sbb
jmp
mov
mov
sti
mov
fidivrs
arpl
popa
mov
mov
adc
mov
inc
mov
imul
sbb
xlat
incl
out
lods
cwtl
leave
ja
pop
xchg
js
jp
les
sub
je
hlt
jg
jle
pop
mov
mov
mov
pop
push
xor
aam
jae
jle
push
insl
popf
jle
inc
les
idivb
mov
sahf
add
sub
in
mov
push
gs
lcall
loop
repnz
dec
dec
adc
cmpsl
leave
mov
scas
or
stc
push
lods
inc
sub
cli
or
inc
mov
xchg
jbe
das
repz
rorb
pop
jmp
mov
fldl
push
or
sbb
scas
loopne
cld
cmp
dec
pop
mov
ret
lcall
dec
jle
jnp
scas
les
lret
stos
lret
nop
incl
mov
fsubs
adc
fwait
mov
push
mov
sub
jmp
fcomps
stos
or
aam
and
pop
xor
pop
jmp
xchg
ficomps
pushl
daa
pop
mov
mov
xchg
aad
insb
mov
jl
in
or
add
inc
jo
xchg
enter
scas
sbb
enter
fidivrs
mov
jnp
jae
scas
cli
jmp
hlt
add
mov
jmp
mov
push
decb
dec
arpl
das
pop
and
ljmp
cmp
jl
mov
cli
stc
pop
fistps
cltd
gs
mov
lds
aaa
lds
ljmp
pushl
jnp
mov
lret
cltd
test
mov
mov
jg
mov
fwait
out
xor
inc
in
push
lahf
std
ljmp
out
jle
ja
clc
mov
dec
fldl
cmp
cmp
in
in
jmp
lods
out
ss
addb
popl
scas
inc
ljmp
sbb
repnz
fcompl
xchg
push
fcompp
hlt
bound
pushl
xor
sbb
add
mov
aas
dec
cmp
mov
push
decb
sti
cmp
clc
mov
cmp
clc
and
mov
lcall
mov
jg
mov
aam
icebp
inc
add
mov
mov
cmpsb
cmpsb
ret
mov
cld
fucomp
mov
arpl
jbe
mov
outsb
popf
decl
mov
int3
add
adc
filds
sbb
dec
sbb
call
int
add
cld
inc
add
mov
sti
mov
jmp
mov
les
cmp
push
jmp
mov
scas
xchg
mov
adc
dec
jmp
xor
lods
mov
cmc
lcall
pop
sub
movsb
dec
cli
in
pop
ja
js
in
test
adc
ffreep
xchg
push
cmp
fidivs
sub
sbb
ja
cmpsb
and
or
ljmp
decl
jle
stos
cmp
out
loope
psubusb
and
adc
sbb
cld
out
cli
icebp
mov
mov
add
test
pop
rcr
fnstenv
inc
or
cmp
push
not
fs
lea
dec
dec
jle
cmc
lods
jge
dec
push
inc
roll
jne
insb
cmp
filds
cmp
sub
xchg
fiadds
test
cmp
call
jle
mov
inc
mov
push
cmp
fsts
in
inc
xchg
aad
jmp
sti
xchg
pop
pop
mov
fucom
jb
pop
fldcw
adc
fmull
jb
push
lret
sub
sub
cld
call
sub
lods
mov
aam
or
add
incl
aas
jge,pn
bound
adc
ljmp
outsl
jmp
jnp
aas
lcall
les
int3
mov
mov
insb
sti
mov
adc
test
add
popa
incl
xchg
inc
add
jae
xchg
idivb
out
cltd
dec
and
inc
mov
decl
xchg
popf
fcompl
cltd
enter
adc
push
mov
imul
shlb
adc
jmp
mov
call
lea
adc
stc
mov
jecxz
pushl
cmp
aad
or
add
mov
jmp
cmp
loopne
jmp
ds
daa
out
inc
mov
aam
shll
add
notl
jmp
mov
cmc
push
hlt
popf
outsl
dec
jl
dec
jp
or
scas
cmp
pushl
test
or
fists
stos
cmp
xchg
jnp
mov
lcall
call
xor
pop
in
inc
xchg
and
ret
jns
add
mov
adc
cmp
push
mov
arpl
xchg
mov
sub
ljmp
stos
sbb
cmp
incl
dec
aaa
mull
mov
mov
shr
lret
cltd
xchg
add
and
mov
mov
pop
out
mov
mov
push
sti
mov
adc
add
dec
stc
dec
mov
mov
pushf
push
js
std
xor
jecxz
je
and
lret
jmp
es
fistl
aam
and
imul
xchg
incl
jb
xorl
cmpsb
lds
mov
add
or
xchg
jnp
sbb
add
out
movsl
adc
jg
pushl
es
dec
push
mov
ret
push
fwait
cs
dec
lcall
test
pushaw
jmp
loopne
ret
hlt
bound
int3
nop
inc
cltd
and
dec
mov
incl
retw
inc
inc
fidivs
mov
adc
pop
or
xchg
adc
insb
ret
ss
divl
or
test
xchg
repz
mov
lcall
in
mov
mov
ret
sarl
jle
jb
test
xchg
movsl
cmp
in
or
test
ret
addr16
fistps
push
adc
mov
mov
mov
push
mov
cmp
out
cmpsb
mov
sbb
pushl
inc
pop
fidivs
shlb
push
push
clc
sub
in
js
xchg
jl
decl
sub
add
frstor
arpl
sti
xor
in
daa
mov
mov
decl
xor
pop
fwait
iret
jnp
bswap
and
jmp
dec
imul
int
in
stc
adc
out
push
das
push
cmp
nop
add
insl
decl
out
and
sub
inc
lret
sbb
and
or
repz
lods
test
decl
lock
cmp
in
jbe
xchg
lcall
lret
nop
or
or
ljmp
sbb
mov
lahf
addr16
fwait
push
testl
mov
sbb
jmp
sbb
fadd
adc
leave
gs
push
int
jg
mov
xor
add
sar
incl
jno
adc
mov
xchg
and
shlb
in
ret
pop
mov
mov
push
and
adc
jne
insl
test
add
pop
std
jg
js
outsl
jp,pn
jnp
icebp
mov
mov
mov
push
es
pop
icebp
inc
push
lcall
insl
mov
or
daa
xor
arpl
or
jbe
xlat
cmp
xlat
jae
push
lret
mov
jmp
test
das
scas
fidivl
mov
adc
mov
lcall
xchg
fs
packsswb
sub
xchg
cmpsl
mov
sahf
or
xor
pushl
les
in
pop
bound
loopne
movsl
enter
frstor
jg
clc
pushl
in
fbstp
dec
jl
mov
jle
add
out
jmp
jmp
scas
and
lods
sbb
scas
pop
mov
push
jle
adc
sbb
ljmp
xchg
inc
pop
icebp
mov
add
daa
popa
loopne
or
int
outsl
into
mov
fcomip
mov
dec
xchg
inc
xchg
orb
sar
lcall
in
ss
cs
mov
in
add
inc
or
jg
cmpsl
mov
cld
mov
lcall
ljmp
shl
or
sbb
jmp
stos
add
je
xor
inc
leave
cmp
ja
lcall
xor
xor
nop
stos
jp
lds
push
les
ljmp
jl
out
push
mov
or
arpl
cmp
cmp
and
jl
sbb
xchg
outsl
and
jo
fabs
fmul
insb
punpckhdq
mov
bound
cltd
cmc
call
push
xchg
clc
daa
in
mov
jo
and
fadds
jmp
mov
jg
mov
push
orb
pop
dec
js
fadds
pop
imul
lcall
roll
lcall
xlat
xor
and
xchg
dec
mov
jg
faddl
imull
stos
repnz
fcoml
xchg
xchg
and
fsubrs
hlt
incl
call
ljmp
fwait
add
fcos
lcall
lds
lock
in
mov
dec
out
cli
mov
sub
add
ss
mov
pusha
mov
bnd
movsb
lods
jmp
push
lret
test
xchg
pop
ret
jmp
repnz
adc
cmp
mov
pop
push
cwtl
lods
dec
mov
or
push
cmp
dec
lea
outsl
popa
mov
adc
xor
xchg
and
cmp
pop
cmc
adc
lret
xchg
mov
sbb
adc
mov
lcall
negb
fnstsw
adc
mov
gs
dec
mov
adc
sbb
lcall
pop
xchg
inc
xor
fs
call
add
mov
cmpsl
mov
popf
jl
push
xchg
inc
fisubl
mov
inc
into
sub
incl
lds
mov
push
sub
xchg
cmpsb
adc
aad
mov
fsubs
insl
nop
mov
xchg
mov
xor
in
les
cmp
dec
nop
std
iret
xlat
js
aad
inc
inc
inc
jns
test
dec
mov
scas
jle
jle
orl
adc
jp
ja
clc
jg
xchg
push
mov
cs
xchg
decl
jecxz
fwait
lods
and
xor
addl
pop
adc
xchg
andb
clc
cwtl
sti
inc
adc
cld
imul
aas
lods
mov
int3
jg
add
incl
div
push
inc
popa
movsb
add
icebp
mov
fidivrs
sub
sbbb
loope
pushl
mov
or
shlb
cmp
mov
jmp
negl
ret
incl
pop
xor
pop
lods
stos
xchg
and
add
xor
dec
sbb
test
pop
lds
mov
dec
mov
xlat
scas
popf
push
mov
push
push
and
jl
cmpl
loopne
fcomip
mov
dec
jle
push
or
movsb
stc
in
test
sti
push
adc
add
int
push
pop
pop
sub
pop
idivb
movsl
sub
repz
mov
incl
sbb
pop
imul
lods
lret
pop
out
xor
or
mov
ja
aas
nop
jmp
mov
ss
xor
cld
addr16
xor
fdivl
dec
pop
es
add
xchg
leave
pushf
scas
out
mov
movsb
icebp
pushf
lcall
lea
out
outsl
xor
xchg
daa
aas
repnz
mov
add
call
pop
mov
adc
outsb
fprem1
clc
ret
or
je
in
pop
hlt
sub
std
pop
and
mov
out
mov
call
test
sbb
ret
pop
sub
fists
bound
pop
imul
call
mov
int3
mov
rolb
out
sbb
and
es
push
push
or
sub
mov
call
das
inc
and
dec
pusha
scas
and
clc
push
sbb
pushl
or
fildll
jne
mov
push
shll
jmp
xchg
jp
insb
shll
sub
xchg
xor
ljmp
mov
lcall
cs
aas
hlt
inc
sbb
inc
sbb
dec
ja
dec
xor
push
imul
add
ljmp
adc
daa
xor
ljmp
jbe
cmpsl
sub
adcl
jbe
add
data16
in
notl
pushl
fs
xchg
inc
scas
xor
gs
xchg
adc
or
data16
dec
mov
and
scas
lahf
repnz
xchg
out
orb
inc
push
fidivs
pop
shll
jmp
ja
fistl
pop
lods
inc
sub
add
dec
sbb
pusha
jp
push
mov
lret
dec
popa
pop
cmp
sbb
cmp
sbb
adc
lcall
rcrb
adc
push
out
lret
rcrl
movsb
sbb
mov
cmp
decl
inc
pop
add
xchg
and
cmp
add
mov
push
roll
call
clc
push
xchg
or
inc
mov
jmp
loope
lcall
pop
das
lcall
call
xorl
xchg
jb
cmc
mov
xor
xchg
gs
ljmp
icebp
sub
test
notl
scas
sbb
jg
pushl
iret
or
dec
or
mov
aas
dec
jo
mov
loopne
out
dec
and
fildl
mov
flds
movsl
jae
push
and
push
pop
lahf
adc
incl
adc
push
xor
fnstcw
cmp
jge
inc
subl
into
cwtl
incl
sub
lcall
mov
fsubrs
or
lahf
mov
mov
inc
jae
mov
clc
adcb
jl
shl
inc
inc
orl
jmp
dec
scas
jnp
push
in
mov
add
add
mov
ds
sti
add
loop
mov
testb
mov
cmp
add
stos
inc
lea
adc
jl
xorl
sti
pop
and
lcall
sub
adc
in
cmp
cltd
add
push
or
inc
jno
insb
gs
out
decl
mov
mov
jecxz
inc
call
lcall
aaa
outsl
inc
mov
jmp
sbb
popf
sbb
pop
xchg
push
rcll
push
or
int
roll
and
decl
sbb
and
popl
add
xchg
sub
stc
add
mov
lcall
ror
nop
sahf
test
mov
adc
test
cld
xchg
mov
cmp
incl
xor
popf
jb
js
and
ret
sub
test
xor
into
cmpsl
std
pop
cld
call
cmp
pushf
adc
mov
shll
inc
jl
sbb
das
ret
aaa
pop
hlt
fwait
daa
out
icebp
rorl
add
pusha
test
pushl
dec
neg
mov
aaa
mov
rolb
test
stos
and
ljmp
jae
dec
lret
add
add
jne
mov
sub
popa
cwtl
xlat
stos
jnp
fldenv
call
bound
sbb
les
adc
dec
push
sbb
xor
dec
pop
fs
fimull
cmovge
lods
add
ficompl
inc
leave
hlt
pop
jecxz
adc
into
add
gs
lcall
xor
push
enter
cmpsl
xchg
adc
add
cmp
xchg
hlt
jg
xchg
fildl
clc
jmp
jl
xchg
xorl
jo
int3
sub
and
push
mov
sahf
popf
lcall
cld
mov
mov
or
cmpsl
sub
fcomps
jns
pushl
pop
inc
inc
lahf
jl
dec
aam
mov
xor
hlt
lods
addl
sar
fisttps
jmp
pop
daa
into
mov
push
aad
inc
rorb
jp
cmp
leave
inc
sbb
movb
rcll
mov
cltd
xor
das
lcall
dec
push
test
shll
jne
callw
and
pop
mov
mull
icebp
scas
fdivrl
ljmp
pop
sub
sub
xor
sub
addr16
out
mov
push
lret
cli
fsub
mov
cwtl
mov
xchg
and
sub
sbb
jle
and
jmp
jbe,pn
bound
inc
add
or
test
adc
jle
fnstenv
push
in
pop
test
aas
cmp
lret
dec
lods
int3
sub
adc
cmpsl
push
sbb
ret
pop
add
shl
imul
dec
adc
test
idivb
mov
cltd
cli
sarl
adc
sbb
add
cmp
sbb
jno
jg
decl
mov
lret
mov
mov
inc
xchg
mov
pop
out
adc
outsl
shlb
notl
enter
xchg
xlat
push
lret
incl
pop
push
xlat
xlat
and
movsl
sbb
inc
sub
or
mov
dec
outsl
inc
lahf
mov
mov
dec
xor
test
push
leave
xchg
or
fstpl
rcl
call
je
xchg
pop
mov
mov
xchg
stos
xchg
mov
ret
nop
mov
ja
xor
fdivrs
pop
bound
push
ja
pop
mov
decl
fdivs
ret
cwtl
jmp
inc
push
mov
dec
stc
ljmp
push
cltd
popa
pushf
cwtl
imul
or
sub
stos
and
hlt
jae
call
jg
ds
lock
mov
pop
push
mov
fsubrl
fwait
jecxz
fs
jg
xor
inc
jle
add
inc
vcvtpd2psx
cltd
sbb
jg
lods
xor
cmp
and
loope
push
je
movsl
les
dec
push
imul
mov
ret
es
xor
adc
and
inc
ret
pop
rorb
jge
fcomip
pushl
mov
jle
sub
cmpsl
xlat
jbe
xchg
movsl
mov
imul
pop
jle
out
cmc
loop
jmp
xor
adc
cmp
jns
jecxz
add
ficomps
cmpsb
in
loopne
cmp
out
push
push
inc
adc
pop
mov
mov
ret
dec
or
call
mov
loop
mov
lock
loope
cmp
dec
addr16
std
aaa
add
pop
xor
dec
dec
or
pop
pop
lods
inc
or
cmc
xlat
sbb
inc
nop
int
jmp
out
mov
jno
push
adc
mov
mov
mov
inc
ret
jle
call
aaa
arpl
mov
stc
imul
sub
cmpsl
pop
lea
test
mov
lcall
scas
add
outsb
xchg
popf
pusha
data16
hlt
lahf
cmp
cmpsl
mov
cs
cmp
fmull
lock
movsl
jge
cmpsb
push
stc
lods
add
mov
scas
les
add
cmp
push
decl
hlt
movsb
cmp
in
sti
int3
cmp
sti
push
pop
push
movsl
mov
subb
mov
inc
and
loop
jmp
mov
xchg
mov
cmpsb
xchg
es
aam
std
aas
repz
mov
rclb
decl
gs
push
fdivs
in
push
dec
test
lret
xchg
inc
mov
xorl
push
xchg
nop
cmp
orl
dec
mov
lret
js
pop
xor
push
ljmp
sbb
mov
nop
in
jno
jo
push
xchg
cmp
jg
pushl
cmc
cmp
and
sub
and
scas
xorl
ret
loopne
outsb
je
movsl
ljmp
lcall
fisttpl
sbb
rcrb
mov
aaa
sti
sbb
and
push
inc
cmp
aad
add
ljmp
mov
xor
popf
adc
negb
and
add
jg
in
pop
divb
pop
outsb
cs
cmpl
cmp
jns
test
stc
call
lods
push
pushf
es
stos
pop
insb
psubsw
mov
cmp
mov
int
sub
cmp
xchg
aaa
push
adc
mov
push
decl
test
cli
cs
orl
into
dec
xor
insl
mov
mov
mov
shlb
pop
faddl
pusha
sub
mov
sub
or
jg
inc
cld
or
jmp
and
lods
fnstcw
das
cld
inc
sub
sbbb
aad
pop
jle
xchg
addr16
or
call
mov
cli
jg
jmp
xchg
adc
loope
pop
pop
fs
lcall
xor
dec
fildll
decl
mov
daa
push
push
add
rorb
cld
lcall
out
mov
push
lods
mov
push
mov
add
xor
push
jmp
xchg
out
repz
out
adc
dec
inc
dec
adc
les
push
test
jns
push
loope
push
daa
call
loopne
add
mov
adc
sub
out
pop
adc
push
ljmp
inc
jno
out
mov
mov
sbb
out
xchg
jge
dec
xchg
fs
jg
xor
ret
stos
and
mov
pop
dec
and
dec
and
fucom
xchg
test
xchg
pop
or
roll
push
or
orl
hlt
jns
in
add
cmpxchg
into
jne
jg
xchg
imul
imul
xchg
fisttps
push
incl
inc
pop
jle
lcall
icebp
or
enter
jmp
xchg
mov
inc
mov
jmp
jp
sahf
jmp
xor
nop
xchg
push
repz
xor
les
clc
sub
stc
je
xchg
orl
mov
dec
fstps
dec
sbb
test
test
insl
fxch
in
addl
pop
push
dec
mov
int3
aam
jbe
int3
fiadds
push
cmp
ret
jl
inc
in
rorb
int3
das
jmp
call
or
inc
in
jbe
sub
shll
fmulp
cmp
fcoml
ret
push
movsb
pop
mov
lock
out
sbb
stc
sbb
repnz
xor
stos
mov
adc
lret
jns
ret
bound
jg
lcall
jp
sti
lds
rclb
sarl
std
pop
adc
pusha
push
test
ljmp
call
mov
pop
adc
jmp
jmp
hlt
fisttpl
in
mov
test
pop
cltd
inc
mov
xchg
inc
or
repz
notb
lcall
out
inc
jmp
cmp
sub
and
aas
push
lahf
push
or
ljmp
cmp
fcmovne
popf
mov
sbb
add
in
dec
inc
xchg
jp
xchg
mov
divl
inc
sub
ljmp
xor
inc
out
mov
pop
into
sti
leave
popf
inc
decl
inc
xlat
fists
pop
incb
popf
inc
imul
dec
ljmp
sub
je
inc
mov
sub
push
jae
movsb
repnz
lock
add
jl
iret
push
rol
pushl
mov
or
mov
addb
inc
mov
negb
xchg
mov
push
aaa
add
cmp
jmp
outsb
repz
xchg
cmp
movl
sbb
test
in
adc
pop
pop
fisubrs
sub
mov
xchg
mov
and
jno
mov
adc
lods
test
xchg
mov
push
lock
rcrb
rorb
xlat
and
out
mov
xor
js
lock
sbb
cmp
int
insb
cmp
lcall
decl
cmp
cs
gs
dec
sub
imulb
cs
ja
xchg
out
adc
mov
or
incl
xor
dec
cmp
xor
insl
movsb
pop
bound
into
ljmp
loopne
rcr
push
and
cli
addr16
xor
dec
fnstcw
stc
icebp
out
inc
lret
ljmp
shrl
lret
push
imul
rcl
xchg
das
movsl
jmp
incl
out
dec
sbb
sub
decl
xor
ljmp
fsubrp
jl
xor
and
imul
pop
pushf
loope
mov
push
mov
cli
mov
aam
rorl
mov
jo
push
mov
ss
jp
mov
xor
dec
push
ljmp
out
pop
push
add
inc
test
jbe
mov
and
std
int3
bound
mov
fsubl
xchg
test
sbb
mov
fsubrs
mov
cmp
mov
stos
add
out
push
movsb
insl
nop
sbb
cs
idiv
in
popa
mov
out
xor
sub
mov
jp
inc
arpl
ss
inc
bswap
mov
mov
lret
or
stos
xchg
rcrb
mov
sub
xor
push
mov
ja
data16
into
cwtl
sahf
adc
fdivp
shrb
orb
rorl
loope
pop
outsl
cmp
jnp
and
lret
jae
ja
pop
insl
xchg
inc
cmp
push
lret
lcall
lods
push
jno
movsb
cmp
lock
pop
loope
mov
pushf
jecxz
in
enter
test
sbb
adc
outsl
cli
push
and
adc
nop
mov
int
mov
dec
repz
decl
adc
add
xor
stos
data16
fbld
popa
add
mov
pop
ss
addr16
sbb
sbb
out
sti
xchg
aam
jbe
and
js,pn
jle
jmp
sub
mov
addr16
add
je
leave
and
fisubl
je
repz
jns
push
pushl
adc
dec
lods
outsl
insb
xor
inc
gs
aas
mov
out
and
jle
pop
pop
jb
add
gs
popa
or
sti
pop
cmp
jmp
lock
xchg
add
fucomp
push
and
cmpsb
les
push
pop
sub
in
mov
fwait
cmp
adc
cs
mov
and
bound
push
cli
xchg
add
mov
cmpsl
sbb
lcall
in
ljmp
pop
ret
push
in
rorb
mov
sbb
push
push
jge
jb
mov
pop
repnz
gs
lcall
jno
xor
pop
sbbb
inc
repnz
cld
les
and
popa
ljmp
push
lods
das
shr
xor
out
mov
adc
mov
pushl
lcall
jae
mov
mov
dec
adc
clc
push
sbb
mov
mov
decl
pop
shl
scas
fdivl
sbb
sbb
jnp
jno
imul
lods
fldenv
dec
imul
lods
sbb
in
in
push
mov
jns
push
jmp
outsl
lahf
data16
pop
jcxz
aad
dec
inc
cwtl
call
adc
pop
shll
inc
inc
test
sahf
xor
and
sbb
leave
cwtl
dec
adc
incl
and
xchg
or
in
xor
ss
or
pushl
sbb
jl
cmpsb
call
in
loopne
xchg
cmc
icebp
stos
sub
pop
push
inc
pop
popf
ret
and
adc
fisttps
dec
int3
pop
lcall
jns
mov
adc
cltd
xchg
or
push
nop
incl
mov
testb
sahf
es
arpl
pop
sub
loope
enter
clc
xchg
call
or
inc
dec
out
mov
idiv
jmp
scas
push
mov
pop
mov
lcall
ret
imul
or
call
cmp
mov
cmpsb
sbb
add
mov
inc
lock
push
push
push
xor
inc
cltd
adc
jmp
push
test
xorl
aad
jle
sbbb
mov
and
pushl
mov
mov
add
inc
mov
lds
pop
sti
fdiv
cltd
inc
sbb
mov
inc
adc
jno
bound
fincstp
pusha
movsb
mulb
in
subl
insb
pop
or
xor
scas
add
flds
into
fcomip
lret
dec
cmpsl
add
sub
lret
jg
add
testl
pop
mov
pop
mov
popa
and
ficompl
push
in
inc
add
inc
mov
lods
adc
pop
mov
jmp
shl
mov
iret
pop
and
adc
or
inc
mov
clc
dec
lock
push
sub
ds
pop
das
xchg
arpl
inc
pop
sbb
cs
lods
sarb
repz
pop
jno
cs
push
pop
out
jb
shll
sbb
dec
rclb
mov
movsb
push
push
mov
dec
and
lcall
rolb
aaa
sbb
mov
dec
lret
fwait
das
imul
fdivr
mov
mov
ljmp
int
into
and
insl
pop
pop
mov
mov
and
aad
mov
hlt
sbb
mov
das
stc
xchg
push
sbb
and
js
jmp
mov
repnz
dec
mov
inc
lret
fwait
insl
loope
mov
cmp
cmp
adcb
lcall
fst
call
aaa
mov
adc
jl
inc
call
leave
pop
and
insb
adc
sar
and
jle
outsl
dec
sub
inc
adc
mov
loop
lret
add
push
mov
push
inc
add
out
mov
push
std
push
or
mov
mov
adc
stos
cmp
pushl
dec
cwtl
icebp
incb
sub
cmc
lahf
mov
sbb
pop
add
lahf
dec
stc
ljmp
js
out
xchg
xchg
adc
mov
test
sar
sbb
pop
mov
mov
push
sub
pop
add
lcall
xor
adc
sbb
ljmp
fimuls
sub
cmp
jle
daa
cmp
pop
xchg
ljmp
fucomi
inc
pmaxub
shlb
outsb
nop
mov
scas
aaa
jo
insl
jg
lcall
inc
cmp
call
adc
dec
push
roll
daa
xacquire
ja
jns
lahf
scas
sub
xchg
cmp
mov
mov
std
mov
cwtl
push
adc
sbb
cmp
adc
cmpl
mov
jno
ljmp
and
jne
nop
cmpsl
hlt
stc
mov
sub
cmp
pop
sar
call
pop
push
push
dec
xchg
lea
stc
xchg
cmp
xchg
insb
mov
adc
ds
mov
movb
cltd
les
cmc
das
das
mov
jmp
pusha
mov
adc
stos
ficomps
lods
mov
mov
push
addr16
pop
inc
adc
fldenv
les
mov
test
incl
lods
dec
sbb
fwait
imul
and
xor
inc
lds
imul
ja
pop
out
mov
ljmp
xlat
fdivl
test
sub
mov
mov
pop
xchg
andps
std
mov
sbb
sahf
or
jmp
xchg
sbb
adc
dec
cld
mov
dec
xchg
stos
dec
cld
repz
movsl
mov
cld
jns,pt
cmp
jp
stc
aam
or
mov
adc
sti
decl
call
cmp
shrb
icebp
pushf
fidivrl
leave
popf
add
in
jmp
jg
lcall
mov
das
outsl
mov
cmp
fisttpll
adc
movsl
mov
xchg
dec
cmp
jb
sbb
cmpsb
mov
mov
and
xor
in
repz
inc
push
fcoml
inc
aaa
nop
mov
loopnew
inc
mov
push
cmp
jns
inc
shrb
das
out
leave
enter
push
int
push
sbbb
dec
xchg
test
lods
arpl
sahf
pop
cld
lcall
in
xor
orb
mov
int3
aas
sub
mov
lock
pusha
incl
out
mov
mov
and
fisttpl
cli
clc
jle
pushl
pop
mov
pushl
mov
jmp
mov
and
push
movsb
fstps
jb
or
add
addr16
pop
rcr
and
jge
sbb
pusha
movsl
rcrb
decl
or
fstpl
sbb
mov
xchg
and
fld1
cmp
incl
out
lods
daa
sub
movl
loope
push
sti
cmc
lods
mov
mov
ret
incl
sarl
xchg
js
movsb
mov
dec
imul
aaa
lods
fcoms
jmp
daa
lcall
call
fmuls
movsl
mov
fs
loop
jo
aam
inc
jmp
test
sti
inc
inc
loope
xchg
mov
mov
push
ror
sahf
sti
fidivrl
xor
mov
pop
xchg
ret
rorl
imul
test
aad
dec
sbb
into
stc
pop
sbbb
aaa
cld
xchg
sahf
add
testl
aas
fisubrl
inc
pop
insl
shlb
ljmp
inc
add
add
imul
movsl
xorb
cmp
sbb
int
ljmp
cli
adc
sub
lds
inc
rolb
mov
bound
mov
popl
int3
negb
incl
lcall
hlt
cs
cmp
lcall
mov
lcall
dec
lds
out
cli
lret
sub
cmp
jae
insb
inc
cmc
fdivrp
ljmp
sbb
movsl
repnz
cmpsb
stc
jnp
jnp
pop
inc
movsb
out
adc
fcoms
mov
dec
ficomps
mov
cmp
and
ret
dec
push
add
inc
or
incb
nop
dec
lahf
mov
enter
adc
jp
incl
fs
shld
jl
cmc
test
mov
lea
icebp
sbb
sub
mov
dec
dec
nop
push
test
std
in
in
push
adc
push
mov
push
fs
ljmp
std
mov
cmc
pop
int
sti
shll
sti
orl
inc
mov
std
decl
lds
and
das
jmp
mov
daa
sti
call
rorb
push
inc
xchg
push
and
and
into
test
sub
dec
js
inc
mov
fs
shrl
lea
lock
testl
fst
icebp
fiaddl
jmp
jmp
sbb
jp
push
mov
sub
and
or
pop
sti
or
call
pop
fsub
dec
push
inc
insl
lahf
sbb
rolb
out
mov
ret
imul
sub
lds
icebp
sub
push
lock
xchg
cmp
out
xchg
insb
sub
ljmp
sbb
shlb
sbb
ja
incl
fists
jmp
push
jg
ljmp
cmp
cmp
test
shl
ds
lock
into
push
sbb
lock
outsb
dec
bound
inc
ja
mov
add
movsb
mulb
cli
lcall
or
push
ds
arpl
movsl
fmulp
dec
pushl
push
adc
movsl
push
sets
dec
js
sbb
divl
vmovdqa
mov
call
adc
test
dec
mov
aad
pop
jle
adc
mov
incl
rcrb
rcll
call
jge
cmp
inc
cli
outsl
mov
aad
test
add
cli
lock
jmp
cmpsb
mov
aas
andb
xor
lods
mov
sbb
cmp
mov
inc
lcall
push
mov
cltd
out
xor
testb
in
movsb
pushf
cmpsl
aad
push
add
ljmp
decl
lcall
hlt
jno
cmpsb
inc
xor
sbb
incl
std
adc
or
aam
mov
jnp
rcll
and
out
out
outsb
daa
sub
clc
sub
mov
aas
cld
push
cwtl
cmp
xor
ljmp
cmc
sub
int3
jmp
movsb
xchg
aaa
lea
xchg
cmp
pop
mov
mov
cli
shlb
ret
and
sub
lock
inc
mov
pushl
mov
aaa
pop
andl
gs
in
cmp
insb
push
lahf
cmp
mov
mov
xchg
inc
imul
fwait
push
dec
mov
pop
jnp
movsb
aam
rolb
jp
lret
ret
xor
lods
loop
xlat
mov
xchg
mov
aad
cld
into
shlb
mov
aaa
daa
lods
pop
cmpl
lcall
push
cli
scas
mov
pushl
mov
dec
mov
dec
sahf
lods
lahf
inc
testb
add
jmp
popa
or
fstpt
pop
hlt
jg
dec
roll
adc
rcl
ss
add
xor
ljmp
incl
jb
sahf
movsl
or
xor
jne
call
ret
jbe
pop
cmp
and
aam
mov
pop
or
cmp
sbb
dec
jno
fs
jne
and
decl
add
bound
cltd
jecxz
sbb
sti
cmp
ds
adc
inc
jp
mov
sbb
xor
call
mov
and
je
cmp
lret
incl
cli
cmp
push
push
divl
pop
sbb
inc
popa
mov
enter
add
add
std
mov
dec
jmp
hlt
fsubl
cmp
dec
pop
xchg
or
loope
and
mov
mov
and
incl
and
mov
pop
jg
adc
inc
dec
xchg
out
cmp
in
enter
dec
lret
pop
lds
xor
inc
iret
and
mov
fs
mov
mov
ficompl
push
int
sbb
sub
mov
decl
in
mov
lret
imul
cmp
dec
fdivp
fdivp
loopne
xchg
bound
push
testl
push
jns
inc
xor
call
and
loopne
adc
push
pushf
sar
inc
jle
push
pop
mov
push
xor
push
inc
js
lock
pop
data16
incl
shll
fistl
scas
jbe
dec
pop
mov
xchg
mov
mov
out
call
leave
mov
lea
mov
push
adc
mov
sbb
adc
jns
dec
dec
mov
loop
imul
in
mov
jo
cmp
adc
push
sbb
add
mov
call
adc
mov
xchg
jns
push
mov
out
sbb
xor
inc
sub
jmp
jle
lcall
fdivr
into
pop
mov
inc
aam
sti
cs
jle
push
or
mov
lcall
cmp
jno
xchg
and
ret
jo
cmp
jo
xchg
stos
pushw
push
dec
filds
jge
pop
sbb
xor
inc
and
add
or
xchg
push
push
push
jmp
jbe
test
cmc
mov
add
jns
ljmp
aam
das
cs
lcall
pop
or
pop
lds
sub
xchg
jnp
xor
mov
in
in
mov
pushl
inc
leave
adc
xchg
adc
lock
ss
mov
js,pt
imul
and
mov
out
call
cld
lret
icebp
pop
daa
popa
andb
dec
mov
jg
xor
fisttps
lods
hlt
mov
clc
adc
pop
pop
mov
push
stc
cmpsb
xchg
cmp
je
sbb
icebp
mov
nop
shll
test
orb
mov
out
cmp
or
pop
mov
pop
movsl
inc
sarl
xchg
enter
push
imul
je
imul
insl
negb
cltd
fldenv
inc
cld
test
aam
cmp
or
sbb
jge
add
xor
cmp
push
sub
adc
insl
mov
and
mov
jmp
dec
rcll
aad
mov
dec
sbb
aad
cmp
cmc
jae
adc
fistl
mov
pushl
xor
dec
jmp
decl
int
iret
add
pop
or
xor
ret
out
jmp
push
shlb
jne
leave
sbb
cmp
int3
cltd
lock
add
int
repnz
dec
ja
sbb
dec
decl
icebp
and
mov
jno
inc
shrl
ret
inc
mov
adc
inc
mov
int
mulb
adc
cmp
hlt
pop
pop
sbb
lock
pusha
xor
in
mov
dec
inc
loopne
and
scas
arpl
lods
mov
arpl
xchg
cmp
fs
push
pop
push
fwait
stos
mov
fmul
test
cltd
mov
mov
std
xchg
scas
sub
mov
and
mov
or
xor
mov
imul
fildll
cmp
jg
movsb
stos
ror
xchg
dec
dec
ljmp
sub
jb
mov
call
decl
sub
cs
and
sub
sar
jmp
ret
test
sbb
nop
rorb
push
jne
es
push
loopne
or
add
push
adc
xor
outsl
rcll
cmc
ret
and
inc
mov
cmp
jmp
cmc
xlat
dec
rcrl
mov
mov
je
es
and
xlat
test
into
cmp
add
ljmp
xchg
enter
loope
test
jmp
into
iret
mov
jl
ret
pop
jecxz
test
and
inc
repz
lock
push
das
push
out
into
cld
sahf
mov
jecxz
xor
jge
sbb
cltd
add
adc
pop
ljmp
test
gs
pop
arpl
popa
icebp
pop
pop
test
test
shlb
push
pop
hlt
push
xchg
mov
out
pop
sbb
mov
mov
adc
or
orl
mov
xor
xor
inc
inc
ret
ljmp
inc
popa
mov
lock
out
shrb
or
or
and
cmp
movsb
test
and
fistl
sub
mov
mov
and
sub
sbb
es
aas
dec
stc
pop
ljmp
leave
dec
dec
lds
lret
hlt
int
sti
imull
xchg
std
adc
cmp
test
dec
das
clc
in
aas
or
int
cmp
xlat
or
mov
subb
mov
xchg
and
add
pop
cld
incl
mov
pop
and
test
in
stc
sti
lret
fidivs
sete
mov
test
xchg
adc
ds
mov
dec
push
sbb
iret
dec
gs
push
mov
sub
cmpsb
aam
xchg
mov
jp
sbb
aam
aad
andl
mov
loop
and
pusha
pop
sti
lock
fnstsw
jmp
mov
pop
fidivl
cwtl
mov
jmp
shlb
sti
pop
push
sar
call
dec
popa
cld
inc
push
test
sub
xchg
mov
out
popf
cmp
out
das
out
xor
imul
adc
les
dec
jecxz
clc
and
mov
out
jno
je
fcompl
int
aas
xchg
mov
push
stos
ret
cmpsl
push
mov
sub
inc
inc
cmpsb
mov
xchg
dec
mulb
pop
pop
lahf
mov
dec
sub
mov
xchg
adc
shll
dec
lods
aas
xchg
scas
cmc
xor
cmp
fsubp
negb
pop
loopne
dec
into
insb
jb
jnp
xor
lock
pop
jecxz
jg
out
bound
in
fwait
shll
sbbl
ljmp
mov
push
push
orl
les
mov
imulb
incl
inc
dec
pusha
sub
mov
adc
push
adc
dec
sbb
xor
cmpsb
jbe
or
mov
lods
cmc
repz
jo
cli
jle
xchg
mov
fidivrs
shrb
cmp
repnz
neg
insb
gs
fldcw
scas
inc
dec
arpl
dec
je
icebp
mov
push
loope
sar
mov
popf
sub
mov
call
repz
adc
in
dec
test
mov
mov
out
ljmp
mov
jmp
push
roll
mov
xchg
mov
int3
push
test
push
subl
mov
data16
adc
cmp
sbb
add
incl
mov
push
stos
repz
dec
stos
mov
jo
lods
mov
out
add
loop
inc
incl
push
sti
test
fistpll
into
mov
cmp
mov
mov
or
pop
clc
and
mov
inc
movsl
loope
lds
rorb
cmp
xchg
push
xchg
mov
inc
fdiv
inc
mov
lods
sub
push
sub
xchg
pop
rcrl
inc
xchg
inc
pushl
addl
adcl
cmp
push
call
xlat
in
loop
jb
pop
aad
adc
hlt
mov
cmp
fcompl
sub
pushl
aas
push
mov
inc
in
inc
je
iret
fcomip
mov
lock
outsl
push
cs
or
sbb
das
sar
inc
js
jmp
daa
pop
xor
aad
fidivl
movsb
inc
pusha
push
push
pop
sbb
movsb
mov
jne
sbb
mov
notb
jg
mov
out
jns
fldt
cld
cmp
js
lcall
stc
xchg
jb
fbstp
pushl
sub
and
in
repz
mov
or
ja
fcmovnu
jle
jg
scas
inc
addr16
sub
std
ss
mov
call
push
call
mov
and
mov
fidivl
data16
shlb
ds
lret
aaa
cld
call
xchg
xor
xlat
outsl
add
jae
ds
adc
imul
std
jmp
inc
jmp
div
frstor
adc
inc
lods
outsb
frstor
jb
lcall
in
add
stos
stos
jle
push
ror
mov
and
ljmp
mov
imulb
iret
add
dec
push
icebp
cwtl
pop
outsl
jmp
adc
push
into
sar
fsubl
pop
or
mov
mov
jle
js
or
push
add
aas
fdivrp
pushl
push
in
data16
pushf
mov
jnp
adc
dec
inc
mov
fwait
scas
clc
or
xchg
mov
ljmp
adc
adc
cmpsb
jb
cmp
jmp
out
shll
rolb
clc
xor
jp
pop
sti
scas
push
fbld
fnstcw
add
adc
dec
fdivp
sti
cmpsb
int3
addr16
push
push
pushl
in
ljmp
cmpsl
pop
push
imul
push
mov
push
push
call
dec
into
adc
cmp
div
jns
nop
fwait
imul
push
in
or
hlt
cmp
das
fwait
jae
or
call
or
in
inc
into
lock
out
lcall
push
mov
int
loopne
insb
call
fimuls
add
pop
pop
cmpl
xchg
movb
mov
lret
div
ljmp
adcb
jle
test
push
shlb
xchg
sar
decl
fsubp
outsb
xchg
xchg
and
int
ss
cmp
sarl
mov
dec
icebp
mov
mov
lcall
inc
mov
jecxz
icebp
lcall
in
lods
loopne
jno
inc
sbbb
and
push
stos
pop
in
sti
dec
jno
lcall
and
ret
data16
xchg
std
mov
xor
sub
call
cwtl
pop
mov
add
addr16
imul
inc
cltd
outsb
shlb
movsl
mov
mov
mov
sub
fcomp
outsl
mov
adc
mov
stc
adc
push
ja
call
addb
xor
jl
daa
popa
inc
dec
xor
insl
fstpl
neg
pop
rcr
pop
in
lock
adcb
jmp
ljmp
in
xchg
dec
pop
rolb
arpl
shll
mov
sbb
pop
loopne
or
subb
cmpsb
leave
sahf
inc
mov
xor
pop
in
rcrl
jp
pop
mov
mov
lds
inc
xor
fs
or
push
mov
push
lea
lret
rcrb
loope
incl
int3
movsl
sbb
cmp
in
loop
cmc
je
push
jecxz
mov
jg
xchg
push
mov
jp
sub
mov
pop
cmp
idiv
cmp
mov
jne
cmp
cs
sub
loopne
fs
jo
lea
outsl
inc
sti
lcall
or
inc
out
xor
jg
inc
ds
sbb
mov
push
lds
push
mov
jmp
jl
enter
mov
add
or
push
pop
sahf
pop
inc
ds
jo
and
out
ret
call
sub
dec
and
sbb
out
jmp
xchg
dec
mov
test
outsl
clc
mov
add
and
cwtl
sbb
dec
ljmp
faddl
daa
out
or
pushl
std
lock
xchg
mov
shrl
adc
cmp
jns
sti
push
dec
std
decl
gs
adc
cltd
inc
cmp
daa
js
jl
inc
push
decl
jb
clc
gs
dec
out
adc
cmc
pop
je
xor
stos
sbb
filds
sbb
xchg
hlt
in
push
hlt
push
int
mov
mov
nop
aam
or
stos
fimull
mov
jb
enter
sub
adc
test
leave
push
fdivrp
lock
mov
jae
or
add
lcall
push
jg
xchg
mov
lcall
hlt
jno
jle
and
fwait
subl
dec
adc
loopne
js
jns
cld
aaa
xorb
and
xor
cmp
mov
leave
jno
call
adc
and
pop
xor
inc
negb
push
and
in
decl
xchg
orb
jl
lds
xor
or
call
pop
pop
lds
movsl
pop
ss
mov
sarl
cmp
adc
add
inc
xchg
sbb
sbb
jmp
pop
fildl
decl
mov
in
stc
cmp
in
ljmp
test
stc
dec
loop
jmp
sti
inc
pop
outsl
aad
ja
pop
inc
loop
xchg
icebp
daa
gs
lds
cmp
dec
ljmp
jmp
cld
pop
jne
andl
les
push
dec
mov
xlat
sarb
add
inc
sbb
mov
xor
lock
mov
xchg
mov
testb
xor
fucomip
ljmp
xchg
outsb
mov
sub
sbb
popa
mov
out
mov
decl
pop
sub
mov
sarl
movsl
pop
or
inc
add
jns
pop
or
test
add
sbb
jbe
jnp
mov
lcall
jecxz
push
inc
call
push
iret
and
and
sti
cli
mov
cmp
insl
sub
pop
addl
in
push
aam
xchg
mov
neg
fwait
xor
pop
xchg
insb
adc
outsb
adc
jl
push
jae
repnz
pop
je
push
push
repnz
mov
xchg
jge
jmp
mov
test
push
ret
testb
pop
adc
and
lods
xchg
sbb
sahf
stos
fdivr
dec
pop
cli
mov
in
test
jbe
push
test
cmp
lds
lahf
or
jl
xchg
fisubs
pop
mov
mov
mov
ja
jmp
loop
pop
inc
pop
xor
push
mov
jno
or
cmp
sbb
jmp
or
push
xor
cwtl
mov
mov
pop
jg
mov
or
ja
mov
pop
pop
adc
mov
jbe
xor
mov
push
stos
or
sub
loop
clc
pop
mov
jae
mov
jecxz
ds
pop
mov
stos
inc
lret
sahf
mov
lods
adc
dec
mov
stos
into
xchg
pop
sub
aas
in
cmp
aam
outsb
dec
pushl
repz
pop
cmpsb
jns
std
sbb
dec
int
movlps
lcall
and
sbb
adc
in
lods
xor
xor
and
test
mov
fsubr
loope
jg
or
xchg
pushf
push
test
pop
adc
lret
enter
test
in
jle
dec
cwtl
jns
dec
and
stc
in
mov
cs
pop
js
add
arpl
decl
sbb
lods
push
aam
movsl
test
pusha
test
add
je
pop
sarb
fidivs
inc
repz
mov
xor
add
stc
mov
ss
mov
fadd
adc
xchg
les
in
popa
xor
loopne
lea
ljmp
mov
mov
movsb
in
mov
jmp
sbb
mov
cmpsl
xor
adc
lods
js
xor
jo
ss
enter
cmpsl
cmp
pushf
mov
cltd
mov
arpl
mov
sbb
xchg
ficoml
xchg
aam
xlat
sbb
inc
fildl
insl
in
sub
out
mov
incl
adc
out
lock
pusha
mov
push
in
in
mov
ficoml
mov
call
lret
ret
jnp
xor
sbb
pop
enter
cmp
mov
fs
pushl
std
or
cmpsl
mov
loope
add
out
lea
add
aam
or
pop
inc
ljmp
inc
fists
mov
movsb
test
or
inc
js
cmp
jbe
inc
fwait
mov
cs
cmp
xor
out
adc
xchg
dec
gs
mov
dec
add
and
xor
test
inc
sbb
call
pop
sbb
fdivl
aam
mov
fwait
and
ljmp
call
mov
push
push
insl
pop
aaa
in
jae
mov
roll
rol
call
dec
roll
into
and
add
mov
mov
pusha
dec
pop
mov
lcall
mov
fdivr
clc
inc
xchg
pop
daa
jmp
mov
scas
pushf
mov
outsl
mov
int3
jmp
lcall
movsb
push
in
dec
adc
lods
or
cmpxchg
mov
xchg
imul
imul
lret
inc
mov
mov
mov
cmp
stos
pop
stos
add
mov
std
mov
jb
jp
jnp
jp
ret
cwtl
ja
clc
xchg
lods
add
xor
lcall
sub
jno
pop
pushf
cmp
rcll
stos
adcb
dec
test
lcall
aaa
sti
and
inc
stos
or
notl
sub
loopne
ljmp
clc
pop
test
cmp
and
sarl
and
adc
lcall
gs
mov
icebp
aad
dec
dec
pop
stc
xchg
jno
cli
scas
sbb
pusha
test
mov
shrb
insb
sahf
andb
lret
bound
aas
lock
decl
lods
add
movsb
fstps
ja
push
aaa
xchg
mov
movsl
xor
inc
shll
roll
incl
out
push
xorb
repz
pusha
loopne
insb
pop
out
cmc
aas
mov
mov
jmp
pop
jl
lret
dec
dec
lea
sahf
outsb
and
ja
push
dec
fnstsw
inc
lcall
pop
subb
jbe
xchg
nop
rorb
ljmp
mov
iret
push
adc
dec
pushf
jb
lcall
mov
dec
push
mov
mov
pushl
cwtl
lcall
or
int
lds
jne
jno
jle
aad
jbe
inc
push
jg
mov
lods
int3
fwait
mov
cltd
sub
repz
fmull
xor
incl
mov
in
mulb
jle
pop
bnd
scas
adcb
sub
xlat
and
inc
jl
jle
pop
fldt
popa
jbe
scas
outsb
ret
in
push
adc
and
fwait
movsb
push
mov
loopne
sub
mov
jmp
pop
push
mov
add
lock
stos
and
out
cmpsl
fmul
mov
jg
push
call
loopne
mov
dec
std
loopne
mov
fstl
sbb
ud0
ljmp
mov
xlat
test
push
loopne
xchg
dec
inc
sti
fbld
stos
inc
or
nop
ficoml
incl
xchg
in
push
and
sbb
mov
mov
inc
fs
and
ljmp
inc
mov
ja
xchg
data16
mov
mov
jne
xchg
xor
mov
or
ficompl
aaa
push
icebp
popf
jb
jne
scas
rcr
inc
repz
xchg
jecxz
push
in
xchg
sub
incl
sbb
stos
inc
mov
inc
dec
pop
xchg
xor
test
xchg
lahf
mov
leave
lret
stc
pop
cltd
jg
outsl
int
mov
pushf
inc
cmp
cltd
jbe
scas
sub
cli
outsl
clc
pop
icebp
mov
push
imul
mov
mov
fcomip
outsb
add
clc
ret
push
xchg
addr16
fdivrs
sbb
xor
jmp
jae
lods
and
or
loope
outsb
push
jne
divb
adc
fwait
stos
jg
mov
loop
sbb
imul
lret
adc
and
cmpsl
mov
ja
inc
add
jns
bound
xor
ljmp
nop
xor
fwait
ljmp
xor
aaa
das
int
in
mov
hlt
in
mov
sub
ret
cmpsb
popa
sub
dec
xchg
sub
mov
add
mov
imul
clc
jmp
dec
sbb
aaa
fmull
ds
cmp
neg
aad
int
ljmp
cmp
xchg
dec
pop
in
and
rcrb
xor
cmp
stc
mov
inc
pushl
call
add
loop
movsl
cli
mov
sahf
sub
ss
jecxz
or
bnd
jle
cmp
sbb
xchg
adc
and
fcomp
mov
je
mov
jecxz
sbb
push
mov
repnz
pop
pop
mov
and
adc
mov
mov
data16
inc
push
shlb
incl
insb
mov
in
lahf
xchg
and
jnp
add
or
xor
mov
sbb
pop
pop
inc
mov
xchg
bound
cmp
aam
cmp
jg
in
inc
cld
and
mov
xchg
testb
push
mov
mov
sub
add
inc
mov
jle
lret
xlat
in
push
movl
ljmp
sti
sbb
cltd
insb
push
xor
inc
xor
ljmp
scas
or
push
and
push
lds
or
test
mov
and
fwait
mov
adc
arpl
pop
mov
outsl
add
push
lret
mov
cmp
cltd
xchg
aam
sti
test
das
inc
daa
cltd
and
add
dec
inc
jecxz
mov
gs
decl
out
jl
cmpsl
test
std
lret
mov
incl
call
dec
cli
adc
xchg
mov
das
xchg
xor
lcall
fsubl
push
add
mov
push
sub
mov
subl
and
pop
inc
dec
loop
std
sub
mov
call
inc
xor
loop
or
stc
jmp
or
push
xchg
imull
cwtl
aaa
std
cmp
xor
shl
aaa
cltd
cli
js
leave
push
fmull
cmp
incl
xor
out
cmpsb
test
mov
dec
test
ret
add
dec
jmp
push
mov
or
mov
sbb
scas
shlb
pop
jns
repnz
aam
push
lret
ret
js
push
aas
mov
or
or
mov
call
mov
dec
test
scas
fwait
cmp
push
jmp
mov
aam
push
dec
lcall
scas
enter
or
jnp
imulb
xchg
pop
repz
mov
inc
mov
xor
popf
add
push
push
stc
jp
mov
sub
insb
fwait
dec
cld
push
mov
mov
push
sahf
insb
iret
sahf
scas
adc
ljmp
xchg
cmp
adc
sub
xchg
and
cmp
fildll
push
out
stc
sub
xchg
nop
push
inc
loop
decl
dec
adc
loopne
cld
pop
ss
mov
sahf
mov
pushf
call
fstl
inc
incl
outsl
icebp
addr16
or
sbb
gs
fdivp
js
das
or
nop
loope
mov
incl
dec
ss
push
ljmp
and
add
sti
xor
xor
arpl
stos
jmp
movsb
jg
movl
jl
das
jno
sub
fchs
jb
jl
jp
ja
xchg
pushf
cmp
int3
xchg
mov
cmp
outsl
mov
movsl
adc
sbb
or
cmp
mov
pushl
cs
lcall
push
jp
xchg
mov
dec
inc
mov
clc
call
pusha
cmp
jp
scas
js
xchg
xor
xor
push
out
outsl
lahf
jmp
and
icebp
lea
sbb
jp
sbb
push
lret
ljmp
sbb
fisttpl
jo
arpl
call
mov
jbe
stos
ds
ja
pop
lea
and
push
cmp
push
insl
cwtl
and
cli
out
jle
push
jmp
rorb
shll
test
test
mov
cmpsb
fdivr
or
jne
sub
inc
aas
iret
lret
clc
and
shll
fistpll
xchg
inc
sub
xor
imul
inc
or
les
sbb
data16
call
mov
cmp
mov
inc
das
adc
std
shll
jl
shl
clc
xor
call
mov
aam
lret
inc
inc
aas
sub
test
popf
repnz
xchg
or
clc
jo
js
mov
rep
lahf
popa
mov
xor
lcall
jge
hlt
ret
nop
dec
lret
pop
out
mov
xchg
dec
sub
mov
repnz
gs
mov
call
mov
pop
test
pop
dec
dec
or
adc
fs
lcall
aam
in
loopne
enter
bound
fisubrl
shrl
jmp
repz
or
cmp
out
xchg
mov
fisttpll
or
add
mov
jns
repnz
int
push
dec
sbb
fcomps
push
and
xchg
pushf
or
std
call
enter
sbb
insl
push
push
jge
testl
stos
sbb
mov
xchg
pop
xchg
dec
in
scas
rolb
std
xchg
loope
mov
dec
sbb
or
sbb
loop
dec
rcll
cmpsl
fcomip
jmp
add
pop
xchg
je
jmp
xchg
mov
gs
loop
out
out
cmpsb
call
mov
js
jnp
stc
bound
push
rol
test
and
gs
ljmp
stos
shll
and
cmp
dec
push
ret
mov
mov
add
fsubp
mov
and
xchg
jmp
stos
ljmp
decl
out
mov
fldenv
mov
int
xor
cltd
negl
nop
sbb
fists
push
cld
xchg
cs
push
stc
fistpl
xchg
add
int3
mov
hlt
cmpsb
decl
cs
sub
aas
lock
dec
ljmp
sbb
int
xlat
push
into
shll
jmp
jno
push
std
hlt
pushf
jl
cmp
lret
xor
popl
test
sbb
add
adc
andl
xchg
xchg
stos
fsubs
mov
jns
push
incl
ds
ret
push
clc
rcl
dec
push
push
fnstsw
jle
cmpb
push
adc
ds
arpl
test
pop
adc
cltd
enter
adc
loopne
mov
sti
lock
and
lcall
pop
and
push
adc
loopne
adc
push
out
or
rolb
sub
int
fwait
xchg
sub
lret
push
jecxz
outsl
and
aad
imul
decl
and
movb
inc
xor
cltd
dec
subl
imul
dec
int
call
mov
add
xchg
aam
add
push
sub
enter
sar
push
push
mov
xchg
mov
ss
stc
in
inc
and
test
jg
jns
gs
sub
dec
dec
sbb
subl
ret
call
or
mov
inc
lahf
add
enter
adc
int
dec
add
xchg
push
shll
cli
out
cmp
sahf
dec
shrl
fcomip
xorb
hlt
repnz
xchg
and
pushf
or
mov
cli
outsb
xor
xchg
inc
mov
lret
gs
pushf
insl
mov
sub
loopne
xor
dec
js
jle
cli
or
nop
inc
popa
lahf
outsl
sbb
out
mov
mov
ret
int3
test
cs
call
and
xchg
xor
lock
pop
icebp
mov
dec
and
fcos
call
arpl
pop
or
jno
jmp
repnz
pop
cmp
push
cli
cld
fldenv
add
leave
mov
mov
push
out
imul
mov
cmp
sbb
incl
and
lret
mov
gs
pop
mov
xor
gs
sti
sti
add
in
mov
sbb
cmpsb
mov
call
cltd
fucomp
bts
les
mov
loopne
jnp
jo
stos
jg
push
sbb
dec
daa
es
dec
inc
insl
cmp
jmp
in
mov
xchg
test
lret
popf
gs
add
pop
popa
std
decl
scas
nop
cld
push
notb
idivl
sbb
pop
cmp
fbld
cmp
push
sub
call
mov
dec
pop
sbb
fucom
pop
xchg
push
leave
insl
aas
dec
push
pop
push
push
es
push
lcall
cmp
ds
dec
not
cmc
enter
loop
jle
push
lds
enter
xor
jge
scas
lock
nop
mov
arpl
shlb
bound
inc
in
add
push
and
test
or
js
fstps
test
sub
mov
jno
push
xor
jmp
out
cld
loope
or
inc
pop
jb
adc
and
ss
mov
mov
sbb
icebp
jns
mov
mov
pop
adc
sbbb
mov
pop
andb
ret
ja
adc
sub
rclb
add
inc
mov
adc
icebp
test
and
mov
test
and
cld
cmp
xor
out
adc
add
add
insl
xor
xor
pop
movsl
ds
pop
mov
pushl
cmp
inc
mul
push
push
pop
pop
or
pop
mov
sti
pop
mov
adc
sar
data16
jnp
pop
mov
jae
stos
fidivl
xchg
mov
mov
pop
mov
call
jl
aaa
cld
pushl
jb
popa
testb
inc
mov
in
cmpsl
cmp
mov
insl
pop
pop
in
enter
push
push
cltd
sub
or
push
loopne
imul
in
sbb
call
sahf
mov
addb
int3
repnz
or
es
jbe
mov
stos
add
add
mov
filds
cmp
rol
test
enter
jecxz
push
jp
sti
repz
add
jg
lret
jp
test
pusha
add
pop
mov
lahf
repz
jno
icebp
lock
lea
dec
inc
xchg
fiaddl
sbb
lods
add
mov
xor
mov
mov
adc
scas
adc
push
ljmp
cmp
xor
mov
cmpsb
je
mov
jg
scas
sti
mov
or
cmp
cld
movsl
cmp
mov
lcall
jl
scas
pop
mov
cs
sti
js
jae
xchg
sti
aad
call
out
loop
add
out
dec
pop
jmp
cmc
sub
sbb
sub
ret
roll
pushl
and
mov
or
arpl
in
cmpsl
jno
inc
rorl
fdivp
incl
xor
les
roll
popa
jg
xor
push
pop
add
decl
xor
inc
cld
xchg
mov
pop
cmp
ret
mov
cmp
mov
daa
in
call
mov
cli
mov
inc
ds
mov
ficomps
loope
mov
lret
call
jnp
aas
sub
inc
xlat
pop
cltd
pop
and
fs
pop
aaa
add
pop
hlt
fnstenv
jg
xchg
pop
jno
sbb
inc
jmp
movsb
sub
lahf
pop
repnz
mov
mov
sub
xor
cmp
in
push
popa
push
jbe
mov
sbb
ljmp
add
mov
mov
cmpsb
xchg
std
mov
shl
sub
sar
push
adc
and
repz
sahf
xchg
dec
roll
fisubl
out
cmpl
clc
push
adc
lret
pop
into
jmp
orb
and
iret
xchg
bound
shll
mov
in
mov
pop
pop
into
sti
jmp
sbb
pop
jecxz
mov
add
jnp
xor
sub
inc
xchg
lcall
lock
decl
in
sub
jge
test
push
inc
js
incl
pop
lcall
nop
inc
cwtl
outsb
aaa
pop
movsb
mov
xchg
testl
arpl
add
pop
cli
mov
xor
xlat
sbb
pmaddwd
cwtl
icebp
cli
xchg
pop
push
push
out
mov
inc
push
insb
aas
sub
and
push
movsb
jmp
sbb
cmp
sbb
popf
mov
adc
pop
cmovg
push
jecxz
push
incl
cld
ss
js
cld
sub
xor
add
mov
lcall
jns
outsb
add
in
aam
imul
add
mov
mov
mov
cmp
add
cmpsb
lcall
stos
dec
adc
inc
pop
sbb
sti
cmp
aam
in
pop
pop
xchg
mov
std
or
cld
add
rol
bound
add
es
add
xor
cmp
xchg
lcall
decl
xchg
call
aaa
pop
fistpl
mov
and
fdivr
ljmp
lods
sub
xor
sar
cmp
movl
push
xor
popa
popa
mov
add
push
cltd
xchg
mov
and
inc
sahf
popf
decl
xchg
rclb
rcll
fnsave
sub
lea
adc
xor
ljmp
or
ucomiss
fnsave
adc
pop
or
cmp
fs
jmp
fisubrl
push
shll
and
cltd
mov
jg
std
sub
fisttps
sahf
shr
inc
dec
fistps
jg
xchg
push
mov
loopne
fdivrp
test
inc
jbe
fstl
aaa
xchg
mov
dec
xchg
sub
aad
jg
inc
lcall
arpl
mov
cmp
jmp
add
scas
push
movsb
pop
push
mov
cmp
out
mov
mov
aas
pop
mov
adc
or
fs
incl
ror
xchg
push
fs
mov
fwait
subl
dec
ljmp
ss
outsl
stc
xchg
insb
std
pushl
mov
adc
test
jg
int3
test
cmp
xlat
pop
jns
mov
mov
xor
decl
sbb
add
sub
arpl
loopne
mov
fldl
xchg
pop
mov
pushl
shll
movsb
cmp
jle
hlt
sbb
sub
and
push
adc
inc
testb
incl
push
sub
gs
stc
mov
scas
mov
mov
scas
mov
pop
add
test
sbb
cmp
mov
idivl
imul
xchg
xchg
and
sarb
sarb
ljmp
incl
dec
pop
cmp
xor
mov
sub
insl
xchg
jg
lods
and
movsb
mov
jae
repnz
cmp
roll
test
mov
jg
call
js
lods
lea
daa
dec
xor
roll
xchg
adc
lret
aas
xor
loopne
ja
cli
lcall
xchg
int3
lret
ljmp
decl
lea
in
movsl
push
cmc
adc
push
lahf
repz
sub
sbb
mov
or
jmp
and
jmp
daa
or
inc
pushf
aad
jns
mov
fcomps
decl
imul
mov
dec
mov
jecxz
cld
mov
and
adc
idiv
incl
push
jmp
add
mov
cmc
mov
insl
mov
lea
push
mov
jl
push
cs
and
fs
mov
js
mov
mov
lods
jae
out
inc
or
sbb
mov
jmp
mov
ret
inc
lret
fstl
or
xor
lcall
cmp
add
push
popa
loope
hlt
sti
pushl
dec
lods
or
sti
pop
mov
fbld
push
mov
adc
aam
xor
inc
les
sar
fcomip
sbb
inc
mov
push
lods
nop
data16
ret
or
jg
sub
mov
xchg
mulb
repz
jnp
xchg
dec
mov
jns
pushl
dec
mov
pushf
in
mov
jno
imul
sub
mov
jg
repnz
movsl
adc
dec
and
xor
xlat
loopne
jg
xchg
imul
mov
pop
xchg
adc
aaa
push
scas
ljmp
imull
call
fcmove
xlat
push
iret
lahf
ljmp
jg
filds
lods
arpl
sar
repz
mov
lcall
nop
imul
das
sti
shll
aad
cmp
cwtl
jnp
inc
inc
decl
call
push
sti
mov
dec
sub
or
jmp
dec
mov
xor
std
inc
out
sarl
lods
xchg
insb
add
cmpsb
pushf
cmp
movsb
decl
add
cmp
cltd
jmp
mov
xlat
popa
es
push
xor
adc
jg
in
and
fbstp
or
xlat
cmp
sub
xchg
stos
ljmp
insl
lahf
jbe
xchg
adc
leave
mov
and
mov
or
lock
ljmp
das
mov
mov
jns
xor
push
cmp
dec
sub
and
outsb
jg
jmp
mov
scas
and
call
ret
sbb
lea
pop
shl
shrb
push
inc
stc
xor
stos
xchg
iret
xchg
add
dec
cmpsb
or
loope
cmp
pop
call
mov
add
and
mov
mov
ss
stos
mov
call
jl
and
shrl
push
dec
sub
sub
xchg
inc
xor
xchg
or
ljmp
jbe
imul
inc
repnz
ja
jg
or
xchg
jg
jle
loopne
into
outsl
mov
xorb
mov
cmp
fs
cmp
ljmp
ret
je
insl
lods
inc
lret
mov
mov
stos
lock
mov
data16
decl
jne
jmp
jecxz
cmp
into
in
sub
xlat
rcr
jl
clc
add
int3
or
pushl
clc
push
bnd
loope
inc
cmpsb
movsb
call
orl
xchg
cmp
adc
push
int
cmc
int3
jo
ret
mov
sbb
jnp
gs
mov
daa
push
push
xchg
aad
sbb
lcall
out
pop
push
mov
mov
test
stc
cwtl
xorb
dec
imul
cmp
sub
mov
sti
dec
call
movsl
lret
push
test
mov
cmpsl
sbb
std
lods
fnstenv
jnp
repz
mov
dec
xchg
push
sub
adc
jmp
pop
outsl
mov
pop
cmp
es
sub
repz
cmpsb
aaa
gs
outsb
pop
inc
mov
stos
enter
sbb
pop
xor
ds
mov
jb
inc
sbb
leave
sub
dec
fnstsw
mov
xchg
into
push
std
jmp
les
hlt
mov
push
inc
bound
stos
loopne
ss
jnp
sub
dec
xchg
cli
add
rcrb
and
rcll
xchg
push
jnp
and
jmp
jmp
je
jo
mov
cwtl
xchg
and
add
or
jmp
cmc
sub
dec
test
sti
jbe
add
std
adc
push
xor
adc
dec
inc
loop
decl
push
pop
ss
jns
rcrl
xchg
inc
jp
addr16
mov
dec
cmpsb
shll
mov
ljmp
cmp
stc
testb
pop
lods
out
mull
cmp
es
popf
outsl
push
mov
dec
jae
push
jl
inc
push
cmp
ret
cmp
fnsave
ja
into
lcall
dec
mov
ja
sbb
dec
pop
add
add
ror
movsb
mov
jmp
cld
mov
pusha
call
popa
ret
adc
mov
jl
sub
call
lods
in
cmp
in
push
inc
sub
rcl
loope
loopne
mov
mov
or
aas
sbb
inc
jae
cmp
adcl
dec
lea
pop
push
sti
jno
nop
fsubl
push
dec
mov
cli
mov
xchg
jne
nop
push
test
outsb
lcall
test
cli
or
mov
or
decl
jmp
pushf
xor
cmp
mov
in
xorl
ljmp
xor
jl
sbb
out
decl
stos
dec
pop
mov
mov
jns
add
outsl
cmc
aad
testl
lods
es
in
pop
movhps
push
xchg
jg
call
inc
xchg
in
mov
lcall
mov
push
jbe
mov
cli
fdivrl
jne
add
mov
push
pop
into
mov
push
mov
pop
fldt
fcmovnb
jmp
mov
sbb
fs
or
cmp
add
mov
push
xchg
xchg
mov
int
shll
cmpsb
ljmp
lds
imul
add
push
pushf
fcmovnb
inc
out
in
xchg
mov
mov
mov
add
mov
pop
enter
jns
sarl
incb
gs
out
jle
ret
jmp
cmp
jnp
push
sub
mov
lea
pushl
mov
movsl
mov
push
leave
jo
fisubrl
outsl
sbb
repz
clc
lcall
pushf
rolb
or
fidivrl
sub
sarb
or
and
push
push
mov
jl
mov
jle
dec
mov
in
dec
enter
jo
mov
loop
mov
adc
pop
pop
jne
clc
loopne
sbb
sahf
pop
pop
imul
mov
repnz
ret
mov
test
pop
xchg
adc
int
sub
call
xchg
add
ss
fs
loopne
push
pop
out
sti
and
aaa
or
cmp
hlt
mov
sbb
pop
sub
cmc
add
test
pushl
dec
pusha
leave
sti
je
xchg
xor
test
xor
push
test
jg
ss
out
mov
add
call
xor
fmuls
pop
dec
push
jno
std
dec
dec
jae
gs
aam
dec
jle
sbb
in
mov
lcall
xor
ret
stc
xor
lcall
jne
sub
jmp
lea
sbb
mov
cld
cmp
xor
test
sub
lcall
adc
imul
lock
jmp
js
mov
dec
mov
in
cli
std
rorl
or
imul
sbb
mov
cli
mov
ljmp
mov
push
clc
and
sub
push
and
ret
push
popf
jnp
ljmp
out
dec
mov
mov
lcall
cmpsl
dec
adc
pop
add
scas
mov
clc
call
xchg
pop
adc
mov
lock
pop
dec
lea
repz
or
dec
inc
cmp
insl
jns
jne
xchg
push
add
int3
jg
add
insb
outsl
call
xor
sub
add
push
mov
inc
push
dec
or
add
repnz
call
ljmp
mov
inc
jo
and
and
loop
arpl
cmp
cmp
das
cli
adc
mov
aam
std
fiaddl
call
imul
xchg
jmp
mov
out
mov
inc
test
in
mov
pusha
cmp
movsb
adc
adc
in
les
pop
repz
and
jne
fcomip
xor
imul
jb
shlb
cmp
or
rolb
das
cli
ljmp
les
push
jae
fldt
test
add
and
push
mov
pushl
enter
jne
pusha
and
mov
xchg
push
mov
cmp
call
lock
mov
les
adc
inc
lea
repnz
ss
mov
sahf
and
mov
je
pop
scas
clc
dec
mov
repz
je
mov
arpl
in
andb
cmpsl
test
jne
jg
aam
call
aaa
jg
cmc
or
jae
lds
rsm
push
imul
call
add
sbb
fimull
stos
repnz
inc
pop
insl
cli
jg
lock
inc
mov
sbb
ret
loopne
push
out
dec
xchg
push
jg
call
stc
push
popa
jl
outsl
daa
loopne
outsb
test
add
jl
leave
aaa
sbb
lcall
cmp
xchg
lret
sub
cmc
int
out
jl
insb
jnp
pop
loope
add
pop
outsl
cli
jge
rcr
mov
loope
inc
push
mov
je
loopne
sbb
jge
popf
popf
decl
inc
enterw
cltd
ret
cmp
ljmp
ret
int
xor
leave
adc
int3
pushf
std
and
rorb
xor
inc
out
rolb
mov
pop
cmc
mov
mov
and
outsb
mov
fidivl
mov
mov
or
subb
incl
in
cmpb
or
cmp
cmc
jmp
out
mov
ficoms
addr16
push
mov
pusha
shll
adcl
or
test
cmp
in
ss
lret
adc
shll
dec
pop
outsl
xchg
xchg
inc
or
dec
loope
sub
rcrb
inc
incl
and
into
xchg
nop
push
int
std
push
add
pop
test
outsl
sub
out
call
jmp
mov
loope
mulb
stc
testb
dec
cmc
pusha
enter
incl
stos
mov
stos
stos
out
pop
imul
sub
cmp
or
add
scas
aaa
pop
sbb
daa
inc
arpl
inc
lds
mov
arpl
fwait
dec
cmp
loope
decl
add
and
sub
inc
aaa
jae
daa
add
pushl
or
filds
pop
adc
mov
cld
xor
cmpsb
dec
test
out
fwait
add
jl
mov
mov
cmp
mov
shl
pop
lret
inc
xlat
ret
and
loope
in
xchg
ljmp
incl
dec
mov
push
das
inc
sub
shrb
jl
mov
stos
cmp
gs
and
jmp
jecxz
popa
lea
enter
aaa
sarb
mov
adc
xlat
aas
scas
jmp
mov
push
jno
adc
cmp
pop
mov
aad
iret
stc
inc
addl
aad
decl
daa
jmp
dec
mov
es
dec
adc
adc
push
push
jae
or
lods
inc
jmp
mov
cli
pop
cltd
into
shrb
test
test
fwait
xor
mov
call
in
repz
int3
inc
sarl
pop
mov
adc
or
decl
sub
add
in
fdivl
xor
cmc
outsl
inc
stc
jns
push
notl
or
roll
sarb
mov
mov
or
fcomip
dec
insb
mov
scas
test
and
int3
cs
mov
mov
idiv
fldenv
mov
int3
cmp
xor
arpl
call
sub
inc
adc
pushl
iret
dec
ss
call
scas
xchg
dec
jle
mov
add
xlat
repz
fidivrs
cmp
cmpsb
add
lahf
mov
pushl
mov
xor
pop
scas
mov
add
push
dec
arpl
je
add
jbe
lds
jo
add
cwtl
adc
adc
sbb
xorb
push
pop
addr16
adc
inc
in
or
jbe
stos
stos
sbb
dec
xor
lcall
push
xor
into
enter
dec
out
xor
jle
fstpl
cld
sub
mov
pushl
cltd
loop
icebp
xchg
pop
xchg
push
sub
fistpl
sub
fbld
test
push
outsl
pusha
push
push
mov
cli
jmp
lds
sub
bound
rclb
mov
ljmp
mov
setae
jle
cmp
xor
dec
test
push
and
jg,pt
incl
mov
pop
insl
xchg
jno,pt
pop
inc
daa
leave
inc
ficoms
add
pop
inc
sub
sar
pushl
stos
xchg
add
sub
mov
jp
mov
popf
adc
sbb
movsb
sbbl
repz
add
testb
call
lret
push
and
inc
loopne
xchg
ja
leave
xchg
mov
ret
mov
adc
jg
cmpsl
pushl
push
int3
test
je
out
jle
jle
roll
repnz
mov
int
pop
xchg
insl
lret
outsb
incl
cld
xchg
cld
push
push
cmp
adc
xchg
xchg
mov
arpl
cs
ret
xor
mov
mov
cmp
daa
inc
sbb
mov
and
mov
call
nop
jo
push
mov
dec
cmp
mov
xchg
stc
les
and
incl
xor
mov
and
ret
or
jae
cvtps2pi
cmp
jmp
call
and
sti
mov
sti
adc
xchg
and
push
pavgb
push
bswap
in
pop
mov
rcl
ret
push
push
cmc
ret
inc
lods
xor
loop
aam
mov
iret
mov
insb
mov
das
addr16
hlt
rcr
movsb
push
enter
xchg
sub
outsl
lcall
js
mov
sbb
cmp
push
jp
cltd
fdivl
insl
and
std
in
iret
cli
cmp
xlat
sub
daa
add
in
mov
rclb
inc
add
jo
loop
incl
hlt
outsb
aas
jg
pop
mov
sub
je
test
adc
xchg
stos
add
outsl
jbe
mov
inc
push
insb
fs
jmp
mov
xchg
ret
in
mov
lret
mov
es
pop
jno
mov
incl
cwtl
jns
pop
iret
loop
gs
lret
loopne
les
subl
cmpsl
cmc
loop
daa
pop
js
cld
inc
xchg
rcr
adc
xlat
xchg
lods
shrl
jno
rorb
sbb
mov
fs
outsl
clc
stos
and
fcoms
and
mov
dec
bound
mov
and
lret
mov
fildll
ja
adc
inc
cmp
aam
inc
or
pop
cwtl
inc
test
xchg
lret
sbb
sbb
outsb
mov
pop
repnz
arpl
adcl
loopne
lcall
shrb
cmpsb
arpl
sbb
jno
jne
jo
test
or
sub
sub
dec
lret
push
mov
nop
cld
mov
jg
or
cltd
mov
cmpsb
ljmp
dec
xchg
mov
scas
mov
sbb
push
xor
addr16
and
lcall
cmc
pop
ret
fcomip
out
dec
or
mov
jae
adc
call
test
jmp
jmp
xchg
outsl
dec
sbb
xchg
cmpsb
inc
adc
inc
mov
and
mov
fnstenv
stc
sbb
imul
jmp
cwtl
nop
repnz
jno
dec
insl
add
cmp
lods
in
mov
xchg
call
lcall
pop
movsb
andb
mov
mov
mov
call
cmp
mov
xor
inc
push
push
and
test
mov
cmp
cmp
inc
mov
jnp
push
mov
xchg
imul
mov
cli
fnstcw
incl
mov
mov
jl
test
dec
inc
sti
xor
scas
pushl
aad
jbe
push
mov
aad
xchg
lahf
xchg
mov
mov
cmp
mov
enter
lcall
add
out
xchg
repnz
popa
mov
das
ret
idivb
mov
in
loop
scas
imul
decl
push
jge
cmp
test
insl
aas
xchg
xchg
mov
mov
jge
outsb
sub
add
sbb
mov
cmc
aaa
inc
and
dec
fs
cmp
mov
fs
call
cmp
mov
xor
ficoml
cmp
stos
dec
mov
pop
cs
ljmp
mov
movsl
mov
lods
sub
subl
ror
nop
cmpsl
fwait
inc
push
add
dec
inc
jbe
addb
incl
add
push
push
mov
flds
jle
xchg
cmpsl
mov
js
in
call
inc
jnp
add
mov
orl
adc
pop
mov
fiadds
cmp
out
cli
pushl
cwtl
shl
aas
inc
ret
ret
daa
push
and
adc
adc
js
loop
fldl
pushf
out
aad
fs
jmp
incl
out
xor
mov
cmp
lods
cmpsb
insb
jo
dec
enter
enter
lock
int
fiadds
push
ljmp
or
incl
mov
add
jnp
repnz
add
inc
je
mov
sbb
incl
mov
data16
jb
lret
cmp
sub
jge
call
inc
js
es
rcrb
mov
fs
push
js
add
jne
and
jmp
push
push
inc
and
int3
divl
sbb
push
cmpsl
out
movsl
push
push
push
mov
or
push
call
sbb
scas
inc
inc
adc
pop
popf
cpuid
or
and
out
stos
cwtl
jno
lcall
cli
dec
in
fisubl
lea
es
fsubrl
push
xchg
jno
repz
jmp
repnz
dec
cld
mov
sub
decl
stc
add
in
scas
sub
adc
jb
int
inc
ret
jmp
ret
cs
sbb
or
push
mov
dec
inc
add
cmpsl
ret
js
mov
cld
int
fs
leave
fsubrs
or
leave
out
gs
push
je
fisttps
mov
sbb
inc
stos
mov
rcll
adc
add
mov
ret
add
jg
cmc
js
push
mov
or
leave
scas
enter
jae
mov
int3
popa
mov
stc
call
scas
cmp
push
mov
xchg
push
sahf
rclb
inc
call
cltd
adc
xor
fwait
xlat
stc
xchg
pop
xor
mov
in
cmpsl
into
xor
aam
or
loop
push
test
decl
repnz
sti
xchg
jnp
inc
sub
xor
mov
enter
and
mov
decb
xor
bound
pop
fcmovnb
mov
dec
es
and
popf
push
lds
call
and
or
jg
inc
repnz
cmp
arpl
adc
ljmp
push
loopne
pop
addr16
scas
mov
mov
int
incb
jne
mov
lcall
jg
xchg
adc
sub
dec
ret
pusha
xchg
lock
fwait
shll
mov
jg
ljmp
mov
lds
cmp
xchg
clc
lock
lahf
aaa
inc
ss
pop
mov
ljmp
jne
cli
fs
loop
and
sub
sar
cmp
aas
lcall
ret
or
adc
and
push
push
xor
lahf
ds
incl
push
inc
int3
in
mov
mov
adc
testl
bound
hlt
pushl
pop
push
ja
pop
mov
mov
add
adc
jbe
jmp
or
call
lea
lods
dec
add
lcall
push
ret
inc
incl
push
lcall
mov
add
add
lcall
dec
into
movsb
xchg
loopne
mov
pop
inc
stos
xor
loopne
call
dec
pop
pop
out
roll
jns
pusha
pop
sysret
add
xchg
xor
test
jmp
insl
je
ljmp
ret
mov
jo
pop
test
xchg
out
xchg
pop
dec
js
mov
inc
fwait
jmp
add
roll
jbe
jg
pop
jge
std
mov
subl
xchg
mov
mov
pop
jno
or
push
dec
sbb
ss
and
push
cs
mov
mov
mov
push
popf
mov
add
dec
lods
sub
pop
lods
push
ss
test
cmp
out
faddl
out
idivb
pop
inc
lahf
push
jnp
adc
add
fcomps
sbb
mov
daa
mov
mov
das
mov
inc
mov
out
jns
mov
push
jle
sbb
xor
es
add
dec
decl
cmc
pop
popf
or
decl
adc
rorb
arpl
fists
ret
mov
sbb
dec
adc
sub
in
je
or
inc
std
cmp
clc
lock
test
push
xor
jg
mov
push
jbe
fwait
pop
mov
jl
in
jecxz
cld
inc
push
in
push
push
mov
leave
iret
xlat
fiaddl
call
cmp
push
lods
out
vrangeps
push
loop
pushl
adc
push
enter
movsl
dec
lods
movsl
jo
lret
sbb
xchg
lret
rcrb
ljmp
cwtl
mov
dec
pushf
mov
sarb
and
mov
clc
mov
sbb
pusha
movnti
ret
sarl
pop
inc
cmp
add
pushl
pop
sbb
rorb
xchg
sarl
jge
adc
sbb
adc
jle
pop
dec
mov
xchg
dec
jae
inc
and
int3
xchg
in
sub
call
jl
lods
sbb
out
shl
mov
sub
pushf
lret
fbstp
mov
inc
loope
sbbb
lods
adc
adc
and
pushl
hlt
jmp
aaa
bnd
incl
adc
xchg
add
dec
inc
orb
adc
leave
addb
daa
and
sahf
test
roll
pushf
add
sub
mov
xchg
aas
sub
xchg
rcl
dec
add
lock
ljmp
jge,pt
jp
and
repz
sarb
sub
mov
or
call
in
in
clc
xor
sub
mov
jns
in
rep
jnp
cli
cmp
cld
cmp
shl
shl
push
call
mov
cmpsb
faddl
cmp
popl
mov
faddp
test
lret
xchg
and
pop
adc
std
popa
push
orb
and
mov
inc
sarb
pop
sbbb
mov
push
cmovl
pop
push
call
xchg
and
inc
outsl
jno
add
repz
mov
incb
aaa
popf
mov
jno
add
jb
and
adc
ljmp
and
ds
mov
call
cmp
sbb
mov
push
cs
ret
push
cmp
sub
jnp
mov
std
cmc
and
sbb
decl
inc
jb
sbb
test
mov
mov
lcall
xchg
push
int3
xor
cmp
mov
pushw
xchg
cmp
push
mov
iret
and
inc
in
mov
xchg
inc
insb
call
xchg
int
icebp
sub
cli
in
test
pop
push
outsb
pop
std
inc
and
mov
ret
fs
insl
mov
or
sbb
incl
fucomi
inc
nop
push
sbb
and
adc
test
adc
sbb
jmp
push
and
add
mov
rcll
fs
call
lcall
lcall
rolb
rolb
push
ds
push
sti
add
inc
aad
in
lahf
into
pop
leave
pushf
xor
nop
sbb
inc
or
jmp
adc
icebp
or
dec
mov
inc
adc
outsb
mov
inc
add
adc
xchg
lcall
dec
inc
fldl
mov
sbb
xchg
aam
xchg
ss
popf
aas
mov
push
cld
jno
test
add
sbb
out
addr16
ficompl
out
and
add
xchg
sahf
sahf
ljmp
jp,pt
mov
int
sbb
loopne
sahf
adcl
dec
incl
pop
mov
cmp
push
push
xchg
inc
dec
or
fcos
jmp
das
vpmadcswd
andb
cmp
aam
sub
sbb
inc
lcall
incl
mov
xor
jge
in
adc
adc
adcb
andb
incl
incb
lds
popf
lods
fcomps
adc
xchg
sub
xchg
or
cli
incl
outsb
daa
or
dec
sbb
add
insb
das
xchg
lahf
mov
dec
dec
pushl
sbb
aad
stc
jnp
xor
mov
cmp
das
aad
pusha
cltd
adc
addr16
or
adc
ss
cmp
shlb
les
inc
mov
xchg
pushl
xchg
xchg
clc
ret
or
xlat
call
pop
popa
or
xchg
das
stos
push
jne
outsl
cmpsl
sub
int3
pop
jno
mov
insb
test
pop
xor
adcl
mov
sub
ljmp
int3
pushf
loop
xchg
adc
rcrb
clc
mov
imul
fwait
pop
loopne
add
cmc
and
imul
push
jecxz
mov
push
in
in
pop
cmc
adcl
xor
or
test
enter
bound
sbb
dec
xchg
mov
jg
out
aas
sarl
subb
aad
sbb
pushf
test
in
dec
sub
das
aaa
xlat
mov
pushl
pop
xchg
mov
jg
mov
jecxz
lods
int
push
repnz
mov
out
sbb
pushl
or
xchg
out
aad
outsl
add
popf
out
cltd
mov
das
mov
loope
push
jl
call
xchg
inc
ret
xlat
jg
jmp
mov
mov
mov
pop
lcall
push
mov
pushl
cmpsl
jge
adc
jbe
mov
sub
or
test
loope
mov
mov
sub
repz
cmc
ror
sub
or
iret
pusha
pusha
add
mov
pop
push
sbb
xchg
inc
add
and
pop
mov
call
inc
dec
jle
cmp
xchg
and
std
js
inc
lret
aas
call
xchg
push
push
and
sbb
xchg
jmp
mov
adc
fnsave
movsb
cwtl
inc
mov
push
sub
ljmp
sar
imul
fs
test
xchg
dec
push
push
pop
push
inc
fdivr
loopne
adc
jbe
addl
add
out
addb
add
mov
add
pop
pop
push
or
or
or
or
or
leave
js
push
adc
adc
push
adc
mov
mov
movhps
push
adc
adc
adc
add
data16
mov
or
rolb
shlb
or
xchg
add
add
adc
jl
adc
add
xchg
leavew
aad
mov
push
mov
add
imul
cmp
add
add
push
adc
pop
and
xor
sub
mov
adc
xor
cmpb
xchg
popa
cmp
adc
ss
shlb
adc
lods
mov
xchg
test
aam
adc
inc
test
imul
sbb
and
adc
pushf
into
add
adc
stc
das
mov
cmp
adc
push
adc
pop
popa
jno
and
adc
mov
or
xor
adc
or
icebp
mov
or
cwtl
xorb
adc
stos
add
dec
mov
dec
pop
adc
or
add
ljmp
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
imul
mov
movsl
mov
fildll
cmpsb
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
jmp
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
cmp
fisubrl
in
mov
orb
int3
lcall
ljmp
mov
push
pop
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
fcomps
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
fistpll
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
ljmp
loope
loope
rorl
mov
int
arpl
push
out
and
repnz
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
add
mov
out
pop
jb
mov
or
push
mov
incl
int
inc
fwait
sbbb
dec
jp
push
idivb
scas
gs
jg
hlt
push
add
stc
loope
stos
fstp
decb
andl
aas
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
jge
inc
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
jg
je
push
push
push
idivl
cmp
sub
inc
scas
inc
jmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
push
lock
mov
pop
xor
outsl
pop
js
jmp
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
stos
fwait
hlt
das
out
sarb
sbbl
push
jecxz
jp
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
ljmp
loop
jge
push
shrl
mov
push
mov
adc
and
in
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
sbb
fadd
or
mov
nop
enter
add
cld
call
js
cmp
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
jbe
das
clc
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
decl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
and
push
push
jo
pusha
imul
add
mov
cmp
in
jmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
jae
incl
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
mov
adc
pop
cld
addl
adc
and
loopne
push
cmp
fmull
enter
jecxz
scas
sub
out
cs
in
pop
mov
clc
mov
cld
aas
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
das
testb
or
pop
jg
add
mov
std
fistpll
mov
aad
test
mov
mov
std
mov
mov
push
push
sbb
stos
icebp
pop
incb
nop
dec
jno
adc
push
inc
jecxz
sbb
rcll
fdivr
jbe
loop
jnp
inc
clc
andl
mov
lock
or
add
mov
mov
imul
push
and
fwait
imul
add
push
sbb
in
or
mov
adc
loope
xchg
lahf
or
push
rcrl
rolb
pop
bound
aas
fistpl
adc
call
jno
pop
cmp
addr16
scas
inc
sti
arpl
daa
std
or
mov
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
sbb
fistps
lds
fidivrl
jg
stos
pop
pop
call
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cmp
inc
and
mov
in
stc
mov
lahf
mov
pop
cld
outsl
int3
push
sbb
pop
inc
sti
incl
jle
xchg
popa
out
out
outsl
xchg
inc
and
in
jge
popa
push
test
jbe
outsb
fcomip
or
dec
jp,pn
adc
lahf
mov
or
out
std
rclb
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
in
pushl
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
lcall
lds
push
pop
adc
imul
or
ljmp
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
jnp
movsb
fidivrs
clc
insb
test
loopne
jnp
aas
repz
sbb
lock
in
jmp
out
rcll
aaa
clc
push
std
mov
ja
jl
or
mov
xchg
pmullw
clc
decl
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
hlt
mov
inc
out
pop
or
or
dec
ss
mov
or
repnz
clc
dec
cmc
mov
jl
call
std
testb
pop
in
cmp
jg
aaa
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
xlat
inc
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
loope
fldt
cltd
or
mov
ret
nop
cmp
das
test
mov
lock
pop
pop
div
cld
idivl
scas
pop
or
and
loope
lock
fidivl
jmp
in
jg
push
jge
fbstp
out
xchg
add
out
ss
cmovno
mov
loope
mov
cmpsl
popf
xor
or
fbstp
push
daa
outsl
das
jge
insb
jp
add
cmpsb
cmp
call
das
js
data16
decb
adc
mov
and
call
adc
add
jb
mov
inc
add
dec
lds
std
fcomip
xchg
dec
dec
inc
sbb
xchg
pusha
dec
das
js
mov
aas
icebp
ret
ror
sbb
sbb
inc
adc
push
pushf
adc
aas
pop
clc
loope
loope
push
or
jp
dec
add
xlat
fimull
je
xchg
fldenv
iret
fildll
fdivrl
xchg
lcall
decb
mov
sti
push
push
jo
sarl
pop
out
jg
jno
ret
dec
inc
sub
cmp
ret
pop
dec
arpl
out
inc
push
decl
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
in
outsl
jmp
or
mov
daa
jmp
faddl
mov
adcb
pushl
inc
test
push
imul
pop
stc
push
dec
out
sub
fstpt
mov
enter
cli
jns
add
add
sti
push
sti
int3
pop
push
pop
inc
add
or
fiaddl
mov
iret
sub
stos
sbbb
add
sub
pop
in
dec
xor
add
addb
and
and
lcall
or
add
mov
add
in
fidivl
nop
mov
jg
add
pop
cmp
push
add
pop
mov
add
mov
inc
decb
mov
addb
or
inc
push
adc
pop
inc
repnz
adc
pop
and
and
mov
test
vmwrite
pop
pop
imul
push
ret
dec
xor
jg
or
jnp
xchg
cmp
push
daa
add
xchg
dec
and
cmpsl
push
and
push
out
xor
push
movsb
push
movsb
inc
scas
aas
xlat
fisttps
lods
push
and
stos
push
and
push
test
and
cmp
imul
push
inc
pop
pop
add
push
dec
lods
push
mov
pop
sbb
add
std
mov
inc
mov
pusha
sbb
mov
adc
cmc
push
adc
fs
mov
insb
imul
or
leave
imul
imul
sub
lret
mov
jbe
fnstenv
hlt
xor
int
jae
pop
stos
pop
stos
mov
js
mov
fdivs
jbe
add
jo
mov
push
shll
add
outsl
mov
fidivrl
iret
outsb
or
push
insl
fcmovnu
mov
sbb
jns
out
jge
cmpsb
neg
mov
xorb
ljmp
movsb
push
add
mov
insl
in
stc
mov
shlb
mov
imul
push
push
push
add
jne
push
dec
mov
push
ret
add
mov
rcrl
push
pop
dec
add
loopne
cmp
push
add
mov
aaa
add
push
push
shlb
addr16
lcall
add
ja
ja
fnsave
push
xlat
jne
add
ja
push
shlb
add
xlat
ja
js
push
lock
jns
push
jp
jp
inc
push
fidivrl
pop
mov
out
sarl
ja
fldl
add
je
jmp
ljmp
mov
in
xchg
sub
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
fnstenv
push
pushf
cmp
popf
sbb
aas
push
sahf
inc
push
lahf
inc
lahf
mov
fbstp
push
jecxz
push
imulb
movl
out
sarb
lock
hlt
clc
stc
jns
out
cli
sti
cld
std
imul
jno
inc
jae
add
xor
popa
push
add
pop
popa
ss
int
pop
add
pop
add
push
add
or
push
mov
mov
add
fistpll
mov
add
add
or
or
pop
sti
inc
repnz
test
or
push
mov
aam
sbb
adc
adc
lods
add
shrb
pop
stos
femms
lods
lods
pop
mov
lods
dec
mov
add
scas
insl
sbb
stos
lods
pop
pop
adc
and
mov
add
xchg
in
pop
scas
sbb
scas
scas
scas
scas
sbb
mov
mov
and
mov
pop
push
mov
inc
push
xorl
lock
and
mov
mov
pop
and
push
xor
pop
mov
and
shrl
pusha
fwait
and
sub
mov
popa
xchg
cld
test
mov
repnz
and
mov
dec
push
sub
es
mov
aas
cmp
shrl
dec
pop
cmp
pusha
fistl
add
into
int3
mov
mov
pop
xor
pop
or
or
int3
add
pop
pop
xor
mov
sti
outsl
lcall
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
ljmp
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
fcos
jnp
jl
jge
jno
outsl
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
pushl
insb
andb
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
ja
jns
dec
insl
xchg
lret
bound
js
imul
cmp
je
sub
cwtl
adc
bound
jo
fmuls
mov
pop
pop
scas
and
dec
mov
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
mov
push
jb
cs
xor
mov
add
add
mov
out
insl
jle
and
push
mov
xchg
loop
imul
push
mov
push
enter
xchg
jp
inc
dec
push
clc
sub
mov
aaa
outsb
insl
in
daa
clc
jno
lret
push
push
bound
mov
mov
mov
lahf
inc
inc
push
sahf
mov
insb
data16
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
add
push
movsb
jae
add
jb
shll
cmp
subb
pushf
push
pop
add
loopne
aad
imul
lcall
outsb
mov
ja
mov
lret
ja
sahf
jbe
fistpl
imul
addl
data16
jp
mov
mov
scas
cmp
data16
shrl
insb
pop
outsb
push
outsl
scas
mov
push
ds
jno
add
mov
pop
sarl
jg
fiadds
call
push
out
data16
add
xchg
mov
in
mov
int3
arpl
imul
loopne
iret
sahf
mov
in
add
jb
out
in
push
jle
or
jecxz
or
push
aad
push
movsl
jns
imul
push
fildl
adc
push
sbb
addb
sbb
test
adc
faddl
in
mov
push
xchg
nop
and
out
xchg
in
xchg
rolb
lock
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
mov
aam
xchg
dec
sub
jle
push
cmpsb
scas
jo
push
push
sbb
mov
mov
shll
add
int
mov
mov
sarb
repz
rcl
mov
push
inc
jp
ret
data16
add
addr16
adc
std
dec
out
je
add
xchg
inc
dec
daa
push
test
add
and
femms
or
or
out
in
mov
or
es
push
adc
push
add
sti
pop
adc
adc
ds
add
xor
pop
mov
xor
ds
loop
mov
mov
mov
mov
mov
push
add
and
mov
mov
loopne
ds
mov
xor
aad
aas
and
lock
mov
xor
or
push
enter
aas
cmp
lret
jae
cmp
cmp
add
mov
sbb
inc
jbe
cmpsl
insl
mov
cmp
inc
jle
adc
jbe
cmp
dec
mov
scas
ds
jle
aas
addr16
ds
xor
dec
inc
popf
test
scas
add
jge
addb
xor
pop
mov
xor
outsl
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jg
jg
test
mov
sahf
ds
xor
sub
sub
sub
sub
lret
xchg
add
dec
and
push
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
mov
pop
imul
nop
cltd
mov
dec
call
orl
cmp
insl
popf
mov
jge
jns
jns
cli
js
jg
test
jb
jae
jo
outsb
pushf
sti
daa
mov
stos
lds
in
pop
loopne
rolb
or
fwait
add
push
addb
push
add
dec
sbb
push
repz
dec
xor
mov
aas
add
xchg
pop
cmp
test
add
mov
add
mov
xchg
fstpt
push
mov
or
jg
mov
repnz
data16
test
push
gs
jecxz
pushf
add
dec
test
mov
push
in
lcall
push
arpl
mov
push
push
decl
or
jae
js
into
xchg
add
mov
cwtl
add
cmpsb
mov
test
scas
xchg
js
in
and
out
es
nop
sub
fcmovnbe
ss
sub
xchg
push
sub
nop
sub
mov
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
fcmove
iret
insb
fst
es
push
lret
loopne
push
decb
inc
sub
std
into
fdivrp
int
or
add
jg
jle
jge
or
nop
xchg
dec
dec
dec
dec
dec
add
jg
pop
or
add
push
dec
or
adc
cmp
adc
pop
mov
dec
dec
dec
inc
add
push
adc
add
or
inc
fmuls
pop
cmovg
inc
push
dec
sbb
imul
adc
inc
inc
adc
sbb
jg
aas
mov
adc
inc
ds
cmp
cmp
cmp
mov
and
sbb
and
adc
sub
push
pushl
xor
xor
sub
sub
push
add
mov
addb
mov
pop
mov
mov
cmp
mov
add
outsb
mov
inc
and
int3
push
outsl
or
xor
xchg
pop
inc
into
inc
adc
enter
add
push
cmpsl
adcb
inc
jbe
mov
pop
sbb
test
jmp
scas
push
clc
sbb
incl
inc
mov
xor
pop
mov
es
cltd
test
popa
ds
testb
lock
mov
or
push
push
jg
sub
or
ja
mov
adcb
outsl
add
and
sahf
jg
or
mov
test
xchg
pusha
mov
add
cli
add
xchg
or
push
or
cli
inc
lds
pusha
and
insb
mov
das
sti
cmp
jle
mov
inc
sub
dec
sti
add
or
xchg
adc
stos
jg
and
adc
jg
pop
sbb
mov
pusha
and
jg
and
lods
push
cld
jg
jo
add
jbe
and
std
ja
sub
cmp
inc
dec
mov
jg
or
adc
jg
dec
and
mov
fs
pusha
mov
mov
adc
lret
andl
add
add
test
sub
xchg
xor
mov
jg
xor
lret
xchg
add
fcomps
add
jg
lods
add
xchg
jbe
mov
add
jmp
sbb
scas
incl
add
incl
stc
mov
and
imul
pop
mov
andl
scas
jle
and
pop
or
push
xor
jg
rolb
jg
shlb
cmp
push
push
push
pop
sbb
add
push
and
xor
jg
and
movb
lret
dec
jg
pop
aam
sbb
xor
push
push
jmp
stos
pop
stos
arpl
mov
pop
pop
pop
add
daa
xorl
ficoml
nop
sbb
add
push
inc
test
mov
test
add
dec
xchg
push
bound
in
into
imul
push
outsl
jnp
das
pop
daa
push
arpl
jnp
mov
pop
push
mov
fwait
xlat
out
jmp
decl
dec
sub
pop
lcall
ljmp
and
mov
sbb
lcall
mov
push
fnstenv
out
out
jne
push
push
jne
pop
push
jbe
and
push
jnp
push
jp
insl
inc
sub
push
js
dec
jbe
jmp
in
mov
mov
mov
jbe
es
push
dec
test
mov
ljmp
dec
call
iret
dec
or
cmp
inc
dec
and
scas
ljmp
jmp
dec
ja
xchg
adc
push
sub
and
fiadds
mov
xor
mov
mov
jbe
in
mov
jns
inc
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
pushf
ds
cmp
and
xor
xchg
xor
cmp
fisubrs
sub
nop
daa
ss
cs
cmpsl
test
in
mov
xor
jbe
outsb
inc
push
and
incl
int
aas
or
ja
xor
call
sahf
xor
movb
es
mov
xor
cs
add
xchg
ja
jnp
push
push
hlt
dec
mov
pop
ja
sbb
sbbl
add
add
in
or
inc
bound
adc
and
subb
add
outsl
add
test
xor
pop
or
add
cmpsb
push
adc
pop
push
orl
lea
aas
outsl
sub
popf
push
imul
stc
jmp
xchg
mov
sbb
test
push
lock
cmp
adc
pop
cmp
icebp
push
inc
out
jg
xor
in
add
mov
push
pop
aam
decl
sub
idiv
mov
dec
push
mov
sarb
push
sbb
push
push
mov
xor
inc
cmpsb
testl
out
cmp
jmp
syscall
mov
sub
mov
pop
fwait
mov
lcall
in
xor
or
mov
sub
les
push
add
ds
pop
daa
std
mov
inc
fsub
xchg
btc
lcall
mov
mov
or
call
lret
ds
decl
cwtl
push
ljmp
incl
insb
inc
call
sub
inc
arpl
sahf
sub
adc
insb
inc
call
mov
pop
decb
xchg
shrb
lcall
inc
mov
ljmp
scas
lcall
decb
mov
sbb
and
push
add
test
inc
outsb
inc
iret
jle
adc
sbb
incl
out
adc
adc
mov
or
orl
inc
pop
iret
sbb
jae
decl
sbb
jae
mov
fdivrp
add
sub
xchg
aaa
inc
sbbb
std
fildl
imul
xor
call
addb
dec
outsb
mov
stc
smsw
dec
push
xor
call
jg
dec
push
cwtl
and
testb
xchg
sub
dec
arpl
xchg
decl
adc
jmp
incl
pop
fwait
cld
pop
fcmovbe
pop
pop
inc
je
divb
mov
test
push
shll
mov
mov
roll
dec
push
dec
cmp
sahf
ret
incl
frstor
test
scas
popf
mov
push
inc
inc
pop
inc
outsb
arpl
pop
mov
sahf
int
sti
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
cmpsb
test
cs
dec
xor
mov
jmp
repz
outsb
xchg
outsb
shrb
es
push
das
xor
jb
imulb
push
iret
xor
xchg
insl
pop
daa
outsl
push
xchg
fs
stos
and
dec
notb
push
ljmp
inc
push
sbb
dec
pop
add
aam
movsl
pop
int
repnz
jmp
popf
cmp
aas
jmp
mov
decb
cwtl
xor
int
push
xchg
push
push
aaa
cltd
movsb
mov
push
lcall
jb
mov
xchg
es
xchg
xchg
sahf
notb
sub
jmp
ljmp
aam
jmp
ds
mov
push
add
fidivl
sar
add
js
std
faddl
jge
push
jnp
mov
fwait
or
jl
or
push
imul
jge
jg
es
jbe
adc
fidivrl
push
dec
push
dec
fbld
push
fnstcw
repnz
jae
pop
fidivrl
push
mov
jnp
xor
add
in
add
int3
outsb
nop
testl
add
sbbb
inc
push
add
push
sbb
push
fnstsw
or
imul
addl
es
addl
orb
outsl
push
test
inc
and
mov
sub
iret
out
mov
cli
incl
mov
jbe
clc
push
idiv
mov
jb
sub
jg
mov
icebp
or
cld
mov
out
ja
jno
sub
jg
mov
icebp
fucomip
or
jg
je
daa
jg
jns
add
mov
ja
loope
xchg
jl
cmp
cld
jp
es
xchg
rcll
aaa
incb
jge
and
or
orb
jg
dec
stos
dec
pop
ja
movsb
addr16
orl
mov
icebp
idiv
lcall
push
faddl
rolb
push
and
lahf
inc
push
int3
decl
pop
jle
mov
fidivrl
arpl
clc
jbe
fidivs
jmp
mov
push
pop
push
pop
nop
jbe
nop
push
pop
or
and
mov
mov
push
int
push
jns
shl
sub
insb
decl
push
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
lret
jg
xchg
add
xor
mov
or
push
inc
push
push
jp
sbb
add
inc
or
mov
aam
nop
xlat
push
cmovno
jae
cmp
mov
rclb
inc
stos
add
adc
add
and
call
mov
inc
pop
sti
sbb
insl
lret
push
inc
lahf
add
dec
test
adc
repnz
cmp
mov
test
pop
push
sbb
out
into
add
push
sbb
push
or
in
frstor
or
inc
or
or
sub
add
nop
inc
add
add
xchg
test
mov
loopne
add
mov
rol
into
xchg
scas
add
inc
push
jb
addl
insb
and
adc
xor
inc
imul
push
and
js
imulb
filds
push
push
outsb
popa
jo
push
xor
jbe
sub
into
adc
jne
push
outsb
je
out
mov
dec
sub
sbb
out
pop
push
popa
lods
jns
push
xchg
insl
xchg
and
arpl
add
pop
push
gs
add
jmp
imul
jns
sbb
pushf
inc
pusha
dec
adc
out
loope
inc
pop
xchg
xchg
lods
jmp
jg
sbb
adc
add
jbe
xor
outsb
add
or
jns
push
imul
popa
jns
jns
insl
inc
xor
outsl
dec
add
insb
jbe
dec
or
adc
inc
xchg
and
pop
or
dec
mov
loope
jbe
sbb
gs
mov
pop
fadd
add
nopl
cmpsl
inc
call
rolb
mov
add
adc
ds
rolb
and
fsubp
fdivs
push
outsb
xor
mov
test
rol
insl
imul
lock
mov
outsb
cmc
dec
bound
jae
jb
mulb
inc
adc
outsl
popw
mov
lods
popa
mov
jbe
xchg
xor
dec
loopne
jae
jbe
adc
push
sbb
jo
adc
lret
das
or
movl
and
xchg
cmp
pop
nop
pop
xor
push
ss
js
mov
ja
outsl
imul
je
ja
fs
push
imul
aam
gs
mov
adc
stc
push
push
push
outsb
lret
jae
jne
bound
mov
xor
dec
jno
lods
jae
or
lret
lcall
sahf
roll
push
and
xor
mov
fists
ss
jl
addb
or
push
out
inc
cmpsl
adc
inc
bound
jae
shrl
arpl
das
sub
cld
sbb
push
jg
fwait
inc
icebp
push
int
daa
jge
xchg
add
imulb
in
jns
and
push
sbb
and
and
fildll
out
inc
ret
inc
sarl
addb
or
cmp
inc
dec
add
inc
adc
adc
cs
loopne
leave
scas
fdivl
in
bound
xorb
lods
hlt
push
jecxz
rcrb
lods
fs
je
das
lds
out
xor
inc
roll
insl
pop
or
or
push
jb
jo
rolb
fwait
xlat
adc
jge
push
push
in
sub
inc
cmp
mov
rorb
iret
lods
sbb
dec
or
xor
add
push
mov
xchg
syscall
sbb
inc
inc
jne
subl
push
imul
in
mov
or
fs
sbbl
outsl
jns
and
inc
cld
push
dec
outsl
in
push
fwait
xlat
push
sub
xchg
enter
xor
push
shlb
sub
jo
adc
or
dec
ljmp
xchg
dec
cmp
pop
ret
rcrb
push
push
mov
dec
pop
jg
mov
repz
add
stos
in
mov
rcr
adc
ljmp
cmp
sbb
sub
mov
std
mov
movsb
mov
arpl
xchg
dec
jne
jo
nop
add
jp
cmc
lds
mov
leave
jae
xor
sbb
mov
aaa
movsl
pop
mov
jne
add
or
iret
movsl
xchg
repz
test
test
loope
addr16
pop
sahf
pusha
pop
mov
push
jne
inc
jno
sub
add
add
and
add
adc
inc
out
fs
push
xchg
and
pop
jl
inc
inc
arpl
push
dec
cmpb
popa
and
data16
pop
sub
mov
out
add
jecxz
inc
sbb
jnp
lret
adcb
and
inc
xchg
push
pop
pop
notl
int3
imul
pop
sbb
inc
jne
gs
mulb
std
arpl
add
sbb
outsb
sub
xchg
and
gs
mov
sbb
mov
imul
lods
test
pop
inc
out
insb
cmp
mov
push
arpl
clc
test
out
inc
jb
inc
inc
imul
out
sub
ret
sub
mov
insl
mov
pop
pusha
mov
ret
sahf
daa
cmp
rorl
ret
push
outsl
fiaddl
fisttpl
push
cmpsb
jge
fwait
pop
cwtl
add
inc
in
jl
int3
xor
push
inc
stos
dec
pop
outsb
fs
call
sub
sarl
rcr
push
test
push
and
inc
movsb
mov
cmp
les
push
pop
fidivs
into
mov
dec
push
push
pop
xor
cmp
lods
and
jnp
xchg
cltd
jne
outsb
inc
push
push
adc
nop
adcb
aas
pop
dec
faddl
inc
dec
outsb
dec
stos
cltd
and
or
mov
dec
and
dec
in
sbb
js
pop
jnp
jl
loop
pop
add
add
sbb
mov
dec
rcrl
sub
xor
cltd
or
or
push
adc
xor
mov
xchg
test
add
es
shlb
cmp
loop
arpl
push
cmc
or
add
and
lods
lret
xchg
shlb
fsubp
inc
xorb
mov
in
andl
sub
push
dec
addl
ret
sahf
dec
sbb
imul
cmp
cwtl
jmpw
sarb
jge
push
je
bound
scas
and
pop
out
push
xchg
dec
stc
pop
mov
push
inc
mov
xlat
sub
popa
sbb
sbb
adc
jb
xchg
les
inc
push
dec
nop
jns
sbb
add
pop
sbb
adc
lcall
and
push
mov
aam
les
popf
add
and
leave
mov
movsb
arpl
xor
sbb
sbb
jae
xchg
in
sti
imul
rcr
push
fsubs
dec
lods
or
imul
xchg
xchg
insb
sub
pop
cwtl
mov
or
dec
pop
lret
inc
mov
js,pn
outsb
sub
mov
lret
arpl
popa
cmp
mov
popw
xlat
andb
outsl
adc
mov
mov
mov
mov
xchg
movsl
dec
repz
push
dec
nop
push
or
mov
sbb
mov
addr16
insb
and
cmpsl
inc
pop
xor
jbe
cmp
cmp
popa
adc
mov
insb
fadd
arpl
push
mov
cmp
dec
insl
xchg
inc
push
fisubl
dec
test
push
sub
mov
pop
shll
xchg
add
inc
xchg
mov
push
dec
lea
in
les
pop
push
mov
fistpll
dec
push
xchg
inc
jb
adc
sbb
push
mov
fistpl
xchg
mov
cmp
jns
sbb
xor
push
xor
sub
call
out
push
mov
cmpl
outsb
pop
push
jo
insl
addl
daa
aas
cli
shll
push
jne
pop
sbb
jbe
test
aas
test
add
pop
jo
xchg
mov
mov
addb
lret
push
inc
sbb
jmp
lea
xor
jae
sbb
xor
or
movsb
sub
arpl
adc
pop
inc
outsl
mov
dec
cltd
inc
mov
dec
dec
ja
imul
or
add
pop
pop
lcall
addb
inc
inc
push
push
cmp
or
movsl
dec
sub
hlt
aas
xchg
lock
add
push
xor
fsubrl
cs
or
or
aam
push
fadds
daa
jle
push
inc
xchg
xchg
jns
pop
dec
aas
rcl
nop
ucomiss
inc
pop
lret
pop
fcmovnbe
out
jge
inc
adcl
bound
shrb
enter
mov
nop
jo
pop
pop
sub
mov
mov
xor
ss
push
mov
roll
xlat
add
jo
fiaddl
popa
adc
xchg
add
dec
in
dec
notl
inc
cs
mov
or
fidivrs
push
outsb
push
es
sahf
jae
arpl
xlat
pop
inc
xchg
xchg
out
push
sahf
test
lods
mov
bnd
or
imul
or
and
loop,pt
iret
cmpsb
adc
add
sub
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
inc
add
add
